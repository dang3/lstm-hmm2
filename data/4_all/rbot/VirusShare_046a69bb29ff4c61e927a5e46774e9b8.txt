push
sbb
in
orl
sbb
mov
pop
hlt
je
push
mov
cmp
or
mov
xor
in
mov
pushf
sbb
lock
into
and
or
sbb
cwtl
lock
push
test
in
or
push
and
idiv
aas
or
out
clc
rcl
test
clc
pop
sbbl
in
sbb
push
or
xor
inc
sbb
je
mov
or
addr16
inc
hlt
leave
mov
push
xchg
sub
mov
adc
add
sbb
test
sbb
pop
pop
es
pop
and
ret
or
add
push
stos
ret
add
push
push
xchg
movsb
cmovne
sub
out
mov
mov
push
adc
jne
mov
cld
and
sub
inc
push
xor
mov
dec
rclb
mov
push
jl
lcall
dec
jne
jmp
sbb
push
sub
or
push
and
and
sub
addr16
aad
and
adc
add
add
inc
adc
ss
fstl
lock
movsb
jbe
cmpb
xchg
inc
cmp
lea
pop
xchg
lds
jnp
sub
jp
sub
mov
xor
cmp
jno
mov
push
div
push
adc
push
pop
or
add
clc
nop
loope
mov
test
adc
dec
add
punpckldq
add
xor
mov
push
xorl
push
cwtl
add
pop
or
dec
and
cli
sbbl
mov
cmp
test
rclb
adc
jae
xor
ret
lock
and
xor
stos
mov
and
or
or
lret
stc
or
dec
call
hlt
jnp
dec
ret
xchg
adc
mov
mov
cmp
xor
add
stos
cmp
sbb
mov
orb
push
pop
test
out
shrb
jne
mov
sub
ret
add
in
call
shlb
out
pop
cmp
xchg
adc
fdivrl
adc
ret
jmp
push
test
mov
enter
or
test
jne
stc
dec
lret
repz
adcb
fdivs
jnp
jmp
pop
xchg
mov
push
out
and
gs
and
les
aad
enter
jns
adc
ret
pop
jmp
push
mov
test
and
pop
or
and
pop
add
and
add
dec
sub
adc
xchg
adcl
pop
mov
nop
and
adc
repz
cmpsb
cmp
pop
je
test
jno
jne
pop
pushf
clc
inc
and
sarb
or
pop
lret
sbb
or
xchg
push
mov
jle
lods
push
sbb
shr
add
in
or
inc
mov
jmpw
in
insb
xor
jg
pop
pop
or
pop
push
add
mov
xor
inc
sub
jo
cltd
xchg
cmp
sub
andb
xchg
sub
and
pushf
xchg
xor
test
pop
jne
cmpsb
xchg
adc
mulps
or
adc
push
push
push
sbb
push
jnp
mov
clc
leave
xchg
add
jnp
or
jns
lods
jo
mov
adc
mov
adc
xor
je
call
sub
lds
jae
pusha
sub
call
cli
and
ja
mov
mov
cmp
je
call
push
push
push
out
scas
dec
cmp
mov
adc
movsb
sub
jne
and
aas
dec
fcoms
ja
cs
pop
loop
pop
push
pop
mov
and
add
insb
dec
loopne
sti
call
jmp
stc
sub
sub
subb
clc
push
pop
push
add
sti
xor
je
adcb
add
lea
pop
mov
sbb
lock
push
or
lret
pop
mov
jne
ss
xlat
sub
push
and
or
movsb
pop
inc
lret
clc
or
dec
imul
adc
add
int3
jle
pop
scas
movsb
mov
dec
pop
dec
pushf
dec
sbb
ret
push
lock
fwait
push
enter
mov
inc
stc
pop
leave
ret
push
mov
data16
and
in
hlt
mov
lods
imul
adc
dec
mov
loope
push
or
ret
dec
lds
fdivrs
cmp
jo
nopl
jne
and
push
and
stc
andb
mov
jae
sbb
cmc
and
xchg
out
mov
xchg
and
jns
dec
or
xchg
je
cmp
xor
xchg
dec
push
ss
push
jmp
sbb
jbe
cmpb
xor
jb
stc
jge
jl
aaa
or
fmul
push
xor
xchg
jge
nop
bound
pop
adc
in
sbb
and
adc
test
mov
inc
xchg
push
stc
cld
xor
dec
adc
outsl
dec
in
mov
inc
sti
mov
dec
pop
mov
dec
and
push
enter
out
sub
mov
dec
push
and
cmc
sub
sbb
push
pushf
rolb
push
cmp
sbb
xchg
xchg
or
add
sub
and
adc
xchg
jnp
fsubr
sbb
cmp
je
mov
popa
jl
cmp
inc
add
xor
cmp
or
inc
and
rclb
and
shll
dec
or
ret
jns
push
sbb
out
pushl
leave
or
push
jae
inc
popa
rcrl
inc
add
bound
inc
cld
adc
fldcw
cmp
or
and
cwtl
jbe
mov
and
or
mov
add
aaa
push
and
dec
cmp
scas
lds
or
hlt
jne
enter
pop
xchg
inc
cmp
mov
adc
sbb
lcall
in
dec
test
adcb
jae
inc
loopne
in
xchg
inc
sbb
loope
mov
sbb
mov
rorl
stos
or
ja
add
pop
das
xor
xor
push
add
call
adc
aaa
mov
pop
shlb
jb
pop
xor
xor
and
xchg
test
lret
inc
sbbb
enter
cmp
adc
mov
cltd
idiv
jecxz
sbb
sbb
call
ss
imul
pop
nop
test
add
sub
dec
or
inc
mov
pop
or
and
jno
and
or
fimuls
push
add
pop
pop
fstp
sub
and
add
xchg
in
sbb
xchg
jno
jmp
je
xchg
movhps
dec
jne
dec
and
pop
pop
or
out
dec
add
int3
cmp
xchg
pop
call
inc
pop
arpl
sub
insb
push
adc
add
loop
testb
clc
mov
arpl
dec
dec
adc
std
adc
dec
xor
in
loopne
push
push
pop
adc
cmpsb
mov
jecxz
movsb
dec
push
ss
sbb
movsl
loopne
in
push
mov
and
and
jmp
cmp
xchg
fidivs
jne
rcrb
sbb
sbb
cmovns
xchg
aam
add
push
or
push
adc
out
push
sub
or
inc
fs
cltd
outsl
gs
cmp
xor
or
push
out
dec
push
sbb
pop
mov
ljmp
imul
call
inc
pop
test
in
out
and
adc
cwtl
hlt
rclb
sbb
pop
cli
add
mov
push
push
repz
pop
sti
in
xchg
sub
dec
pop
dec
xor
mov
cmp
inc
ljmp
mov
inc
and
or
jmp
shll
add
pop
push
aam
dec
add
call
jmp
add
ljmp
inc
mov
hlt
outsb
addr16
push
movl
lock
dec
pop
movsb
sbb
cmp
test
push
push
sbb
mov
or
add
movsb
mov
push
in
mov
or
sbb
lret
inc
call
fs
sbbl
call
sti
add
mov
xchg
orl
push
xchg
add
shrl
mov
nop
and
mov
lea
and
and
add
sbb
xlat
sub
and
mov
mov
push
in
mov
aad
sbb
pusha
dec
mov
inc
push
idivb
or
dec
xor
push
mov
lret
bound
insl
out
lret
jno
lret
pop
jl
mov
jbe
and
mov
sbb
ja
pop
mov
push
or
idivl
mov
call
sub
testb
pop
in
leave
cmp
add
inc
sti
adc
xchg
cmp
out
cmc
xor
stc
push
dec
push
push
lds
and
bound
cmc
fld
lds
jnp
and
sub
fsubs
add
mov
dec
cmp
xor
dec
gs
push
je
adc
and
add
pop
ss
or
adc
stc
add
or
sbbw
pop
dec
out
ret
and
sahf
add
in
bnd
xor
push
leave
test
push
sub
ret
outsl
adc
dec
xor
ret
daa
mov
jmp
xchg
jnp
xchg
mov
add
call
inc
cs
or
add
push
adc
ljmp
and
je
jns
aam
cmp
adc
sbb
xchg
and
mov
or
shll
jmp
std
addb
push
mov
dec
pop
jmp
push
pop
and
jno
stos
lds
jmp
sub
movsl
mov
test
imul
js
test
in
insb
ficoml
sub
mov
sbb
mov
mov
mov
pop
mov
push
mov
rep
data16
fldcw
cmp
xchg
ds
cwtl
cmpb
mov
movl
stos
or
andb
or
and
push
jge
push
jmp
adc
dec
xchg
movsb
pop
aas
mov
gs
lea
enter
adc
sub
insb
les
push
aam
xor
jb
pop
adc
or
in
jns
fwait
inc
jb
mov
call
out
ds
mov
sbb
jp
loop
mov
and
je
call
add
jg
mov
je
repnz
cmp
jne
loopne
mov
and
and
popa
cmp
es
push
and
adc
mov
sbb
lret
or
jecxz
stos
adc
adc
in
in
and
movsb
enter
push
mov
jo
push
or
inc
mov
jecxz
ds
jnp
push
and
sbb
mov
mov
sub
jae
push
dec
mov
sub
repz
insl
jno
sub
gs
mov
jecxz
add
xor
outsl
mov
inc
outsb
and
or
xchg
mov
push
mov
inc
adc
cwtl
xchg
js
lahf
xor
xor
xchg
popa
push
mov
lods
mov
loop
or
or
sub
insb
push
mov
xchg
inc
clc
and
and
and
adc
cli
mov
push
adc
push
cmpsb
scas
adc
or
jge
mov
xchg
hlt
jne
pushl
cmp
enter
pop
sbb
mov
inc
enter
push
sbb
xchg
lock
jecxz
js
jne
aaa
call
sbb
out
xchg
dec
pop
int3
jb
je
pop
mov
nop/reserved
imul
pusha
jnp
inc
or
shr
pop
in
lahf
cmpl
mov
arpl
icebp
and
mov
movsb
push
in
outsl
cmp
fadd
or
loop
and
dec
data16
dec
enter
bt
shl
mov
sete
push
in
and
mov
sub
inc
call
jmp
sub
sub
pop
adc
rcll
xchg
dec
gs
cld
mov
scas
sub
enter
xchg
xchg
imul
cmp
orl
popf
xchg
mov
loopne
xor
inc
push
daa
jp
popa
call
cmp
sub
jl
loope
and
mov
shl
or
push
das
push
into
sub
jbe
repz
jle
call
xchg
ss
and
cwtl
pop
xchg
inc
or
adc
dec
and
push
bound
and
enter
std
mov
jb
in
push
inc
push
scas
cwtl
push
xor
cmp
push
fmuls
mov
mov
mov
or
enter
je
cmp
push
adc
adc
mov
aam
pop
jp
test
xor
and
and
xchg
fs
xchg
jb
adc
mov
mov
adc
cmpl
mov
out
cld
pop
mov
pushl
mov
mov
pushf
xchg
and
outsl
mov
lea
out
cmp
mov
sub
ja
and
arpl
inc
dec
push
sti
inc
sar
je
mov
sub
in
jne
mov
incl
loop
mov
xor
pop
jmp
repz
fs
lea
lea
clc
pop
ja
xor
cmp
sbb
call
outsb
cmp
sub
pop
std
cmp
je
cmp
mov
add
xchg
mov
adc
push
sbb
adc
inc
adc
add
scas
push
popf
shlb
mov
push
adc
jecxz
jns
pop
adc
add
adc
and
test
sbb
das
pop
push
iret
dec
es
mov
ljmp
inc
mov
sub
mov
mov
sbb
lea
dec
call
or
cmpsb
gs
rorl
aaa
adc
or
xor
adc
fldcw
add
je
mov
xor
xchg
pop
sub
sbb
push
inc
mulb
sub
stc
push
pop
jne
mov
loopne
add
add
mov
cmp
dec
dec
inc
mulb
loop
sbb
fdivr
fsubrl
push
fcomps
mov
and
dec
mov
fiaddl
jbe
push
xchg
pop
lea
imul
add
ret
iret
pop
int3
dec
mov
clc
test
mov
or
cld
in
jbe
push
push
push
sbb
loopne
clc
in
push
in
add
inc
stc
sbb
test
or
mov
jb
mov
push
fsubr
dec
jae
push
fstpt
je
xchg
jle
add
xor
inc
movsb
jb
xchg
push
into
cld
mov
adc
nop
and
cmpsb
xchg
inc
push
or
ret
loopne
nop
bound
mov
lock
stos
or
test
or
pop
jmp
mov
aad
lret
adc
push
xchg
mov
out
scas
xor
sub
inc
fcoml
es
shl
add
leave
or
outsb
or
sti
and
nop
xor
lock
call
jl
leave
dec
inc
mov
add
cmp
les
and
jo
push
pop
or
cmp
mov
jmp
test
das
or
lds
jb
xor
dec
dec
mov
dec
jo
lahf
add
data16
dec
mov
movzwl
push
sbb
xchg
imul
push
rcrb
and
fdivrs
jmp
and
add
stc
lcall
les
mov
push
push
daa
outsb
sbb
sbb
pop
jno
push
test
jae
fsubs
mov
mov
push
lret
inc
fcoms
aaa
sbb
test
or
cmp
jl
xor
sbbb
xchg
and
xchg
mov
call
int3
and
les
movsl
sbbb
pushf
daa
jbe
cli
test
xchg
ja
test
pusha
mov
and
mov
adc
pop
inc
or
push
mov
adc
movl
pop
adc
or
or
loop
xor
fsubl
das
stos
or
push
call
pop
mov
popa
adc
lock
iret
aam
bound
fyl2xp1
iret
sahf
or
aas
movsl
std
inc
pop
and
push
or
aad
or
mov
cmp
adcl
and
test
loop
shrb
fstpl
mov
fistps
mov
push
xchg
xchg
in
inc
idiv
push
clc
and
and
fmuls
cmp
inc
push
pop
call
test
xchg
xor
stos
pop
es
dec
fcoms
xchg
rorb
mov
into
push
adc
pushf
jmp
lahf
and
jbe
or
inc
clc
rolb
pop
and
add
jns
lods
mov
xchg
push
mov
inc
push
fcomps
inc
sub
jmp
mov
lods
sub
pop
xchg
push
stos
and
add
hlt
adc
movsl
sbb
push
or
mov
add
sarb
cmpsl
add
mov
mov
daa
popa
xlat
dec
push
das
dec
push
xorb
and
jl
out
and
and
daa
adc
jnp
cmpb
scas
rorb
adc
loope
push
in
lock
adc
loop
push
mov
outsl
inc
sub
mov
jae
and
push
daa
or
add
pop
adc
or
dec
push
inc
xchg
mov
fbstp
sbb
jne
push
test
call
pop
adcb
ljmp
out
test
dec
and
lret
shl
and
cmp
dec
jne
sub
xor
out
aaa
and
scas
cmp
fsubs
shl
sbb
in
cmp
or
sub
js
xor
or
push
mov
adc
push
int
push
jecxz
add
xor
and
sahf
cmp
and
popa
adc
xor
mov
dec
and
gs
cmp
pcmpeqb
roll
xchg
push
jne
add
push
call
vfmadd132ps
aam
sub
dec
push
dec
les
add
icebp
or
sbb
push
push
ds
js
lcall
clc
loopne
push
xchg
loop
xchg
pop
cmp
push
xor
call
jle
or
das
aam
cmc
mov
sub
test
cli
and
cmp
test
aaa
mov
mov
push
call
sub
lea
clc
or
fcompl
mov
push
or
push
inc
les
sub
rol
add
sub
loop
add
adc
or
push
adc
int
sbb
rcrb
aas
bound
cmpb
rolb
outsb
pop
cmp
push
jmp
sbb
cltd
adc
roll
push
and
and
sub
adc
cmpsb
mov
jns
mov
add
adc
sub
or
cs
or
inc
mov
xor
add
addl
and
jl
dec
cs
sub
int
xor
push
stos
out
dec
aaa
test
jg
and
xchg
pusha
mov
xchg
mov
sub
in
fs
test
nop
dec
mov
sbb
push
in
inc
addl
push
xchg
std
in
lock
jmp
inc
test
sbb
or
push
jbe
sub
iret
daa
and
shlb
out
mov
cltd
jmp
push
push
mov
popf
nop
dec
es
nop
or
adc
test
dec
ret
repnz
and
in
push
push
mov
enter
or
push
mov
dec
out
jl
push
add
in
inc
and
adc
faddl
loopne
adc
rcrl
test
cld
rolb
mov
mov
or
or
add
pop
adc
cmp
addr16
push
repnz
pusha
add
negb
sub
push
cmpsl
push
xor
push
jbe
int3
push
mov
cld
and
sbb
shlb
enter
jne
loope
push
pop
add
adc
fst
mov
leave
sub
xchg
mov
js
mov
mov
pop
fimull
ret
outsb
mov
faddl
add
pop
nop
test
mov
orb
xchg
lcall
call
add
adc
leave
loopne
jbe
cmp
pop
xchg
cmp
cmp
jb
jmp
gs
push
jae
fildl
add
mov
inc
shll
in
decl
leave
jo
push
aaa
inc
movsl
cmp
flds
es
jmp
add
xor
cmp
jb
lea
xchg
xchg
xor
jbe
lea
ss
sbb
addl
leave
jbe
aaa
jb
js
cmp
jne
and
cli
adc
mov
inc
shll
push
or
cmp
xchg
div
or
xor
enter
icebp
mov
add
inc
and
adc
cmp
and
push
and
cmp
mov
and
or
call
push
and
cmp
iret
adc
jb
bnd
lss
enter
and
leave
push
leave
lock
sbb
xor
adc
adc
mov
loope
inc
mov
lock
dec
scas
cmpl
dec
imul
int
inc
inc
push
cmp
pop
jb
lock
xchg
push
and
push
xchg
sbbl
les
push
punpckhbw
and
lock
cmp
shl
push
pop
ret
andl
mov
adc
dec
mov
or
add
inc
xor
mov
mov
cmc
inc
cli
aas
mov
xchg
ret
ret
fwait
and
repnz
stos
dec
inc
mov
cmp
or
and
or
mov
test
inc
fcomp
enter
cmc
aas
add
lret
add
dec
xchg
inc
dec
or
shrb
into
and
clc
adc
nop
sub
push
jg
test
sbb
push
push
lea
int
lods
jle
jl
aaa
nop
adc
ss
mov
inc
xlat
lcall
mov
sub
ficoml
cmp
cwtl
jb
loopne
lea
clc
push
jb
mov
dec
cld
mov
dec
xchg
xchg
enter
stos
mov
mov
out
sbb
test
or
arpl
push
push
mov
mov
jb
push
cmp
lea
jo
mov
out
inc
lds
in
inc
fsubrl
test
add
jle
xchg
roll
rcll
sti
mov
push
adc
pusha
inc
inc
dec
mov
repnz
push
add
out
inc
test
and
jns
add
or
pop
test
jmp
movsbl
jl
aas
add
fstp
data16
add
dec
pop
push
cmc
dec
jmp
jno
sub
sub
inc
push
mov
push
clc
cmp
xor
test
mov
call
cmp
daa
cmpsb
mov
add
lods
test
mov
ljmp
mov
jns
push
push
xor
and
notl
aam
ret
das
clc
pop
das
sub
mov
int3
mov
inc
fdivl
adc
fmuls
mov
or
in
add
adc
dec
aad
or
jmp
jecxz
pop
es
xchg
imul
push
rorl
xor
mov
aam
rcpps
or
jne
clc
push
xchg
adc
shll
push
add
cmp
push
pusha
jae
push
sbb
xor
pusha
lea
or
pop
jmp
cmpsl
and
icebp
mulb
adc
in
insb
xchg
cmp
push
adc
lret
and
insb
sub
inc
pop
add
adc
mov
push
jb
out
inc
ret
in
lods
mov
sub
and
pextrw
sbb
movb
or
repnz
add
jmp
andb
fnstenv
xchg
sbb
repz
aaa
add
push
adc
repz
and
int
mov
lds
lahf
mov
xor
mov
into
enter
lock
jecxz,pn
mov
push
add
dec
mov
xchg
dec
fwait
out
mov
das
sub
int
jle
push
imul
push
adc
adc
xlat
leave
xor
and
fmuls
add
push
ret
push
push
adc
mov
test
in
daa
bound
xor
push
inc
adc
or
mov
adcb
lds
xor
or
pop
and
lock
push
or
fstpl
movb
in
cld
repz
push
cmp
rolb
jmp
fs
fstpl
xor
jmp
inc
faddp
push
test
cmp
scas
add
shl
cmpsb
pop
push
rolb
add
cmp
jb
add
pop
jmp
rol
out
shlb
lock
rclb
outsl
or
or
jmp
mov
cmp
cli
adc
dec
out
mov
clc
lds
mov
sarl
je
cmp
push
add
or
jbe
icebp
xchg
lods
daa
aaa
andl
insl
clc
dec
adc
jne
mov
lock
inc
and
or
scas
jge
or
pushl
test
js
cltd
xchg
adc
mov
cld
lock
aad
mov
mov
inc
push
mov
scas
adc
push
ljmp
cmpsl
lcall
insl
dec
add
adc
in
or
test
dec
xor
cmp
mov
dec
loopne
lret
inc
orb
mov
push
push
inc
and
pop
ss
sbb
push
inc
mov
aam
or
decb
or
jmp
push
mov
mov
cmp
ret
add
cld
sbb
test
push
mov
mov
inc
fcoms
lahf
icebp
xor
cwtl
es
jge
and
test
in
inc
iret
enter
pop
stos
std
dec
xchg
lock
push
daa
cli
daa
imul
push
roll
dec
test
jle
inc
insb
hlt
jmp
jmp
push
aaa
jo
push
lret
shlb
test
push
dec
pop
dec
xchg
enter
mov
mov
mov
stos
pop
pushl
and
popf
inc
adcl
roll
sub
xor
fisubs
mov
mov
sub
popf
inc
loop
add
adc
popf
jmp
ret
adc
adc
mov
jnp
sub
ret
adc
inc
or
dec
cmp
mov
cmp
jbe
sbb
add
clc
sahf
mov
mov
or
jmp
arpl
pushf
icebp
xchg
lods
push
mov
mov
andb
and
cld
adc
cmp
or
push
movsl
jle,pt
jg
cs
cmp
inc
xchg
push
dec
mov
and
popf
sti
xchg
repnz
pop
mov
push
je
out
push
fs
sub
mov
aaa
xchg
adc
outsb
or
int
ficoms
movsb
inc
or
sbb
jns
jp
add
inc
pop
cmp
sarb
sbb
cmp
adc
frstor
jno
or
jo
adc
mov
inc
cs
push
pop
mov
test
cmpsl
dec
and
enter
mov
filds
cmp
sbb
add
cmp
cmp
test
xor
imul
enter
sbbl
ss
mov
push
cmp
ds
dec
jne
jmp
std
fiaddl
mov
pop
mov
sub
int
in
mov
repz
ss
mov
sbb
jmp
inc
andb
and
cmp
sahf
lahf
inc
adc
or
mov
ret
call
pushf
stc
jne
mov
shll
jns
or
rcrl
xor
mov
add
jne
push
push
nop
sub
dec
stos
jge
daa
add
adc
xor
ud1
add
aad
pop
or
ret
mov
andb
stos
hlt
push
jbe
imul
add
in
push
xor
xchg
pushf
adc
das
adc
add
mov
or
push
dec
stos
adc
xchg
or
int3
adc
mov
mov
mov
fiadds
pop
fstps
out
outsl
mov
dec
hlt
jnp
mov
push
mov
popl
and
std
mov
test
inc
dec
sbb
inc
data16
stc
cmpsb
les
push
lahf
xchg
ds
test
jmp
dec
add
shll
call
or
xchg
sbb
test
sbb
call
shl
cmp
inc
gs
mov
jo
mov
fs
leave
sbb
mov
xor
test
sbb
clc
gs
xchg
adc
dec
xor
xlat
add
ss
daa
xorb
in
dec
clc
repnz
ret
movsb
adc
mov
mov
add
imul
seta
insl
roll
xchg
add
pop
in
mov
aas
or
les
xchg
fs
cmp
dec
push
enter
rclb
mov
inc
cs
sub
mov
ja
rclb
popf
insb
xor
sub
add
push
or
call
adc
mov
add
pop
jne
lea
add
icebp
in
imul
dec
mov
xchg
iret
mov
andb
mov
popf
xor
adc
aam
call
popa
xorb
subps
jo
adc
cmp
je
xchg
popa
inc
fdivrl
xchg
inc
or
pop
push
idivl
push
xor
pop
sbb
cs
add
stos
fsubs
int3
jns
lahf
out
call
mov
in
ljmp
inc
push
mov
das
dec
mov
sub
ljmp
dec
sub
hlt
sub
adc
mull
call
imul
adc
lods
sub
aaa
mov
cmc
jo
add
and
mov
cld
and
fstpt
sbb
add
clc
je
mov
dec
les
std
push
sub
cmp
out
sub
bound
or
xchg
sub
test
popa
bound
sbb
popf
int3
adc
test
clc
add
or
cmp
jne
lcall
fdivrl
dec
jbe
std
or
lds
mov
popa
dec
ss
inc
movsb
test
fstpl
dec
lock
mov
pop
faddl
xchg
sbbb
pop
cs
aas
or
xchg
xor
jl
pop
lock
cmc
mov
addr16
dec
push
or
cmp
push
mov
sub
pusha
push
jnp
mov
add
test
or
das
call
dec
push
dec
push
filds
mov
sarl
and
lods
or
add
subl
fmuls
adc
or
push
or
mov
mov
mov
pop
lock
je
mov
mov
push
jae
mov
jo
pusha
cwtl
test
xchg
adc
mov
ret
outsb
pop
daa
je
in
pop
or
jne
test
mov
xchg
or
testb
inc
and
call
inc
jmp
cmpsb
popf
dec
adc
pop
or
loopne
xchg
mov
sub
sub
cmpsl
mov
jbe
test
je
pop
sub
jmp
test
loopne
aam
mov
data16
fcompl
push
cli
dec
loope
mov
adc
or
data16
lea
pop
push
ret
xlat
aam
mov
add
mov
jne
push
adc
dec
add
cli
dec
pop
rclb
popf
je
inc
aam
push
adc
jle
mov
sti
dec
inc
or
jns
mov
stos
clc
cs
push
cmpsl
pop
inc
aaa
sahf
jg
and
movzbl
shrb
inc
mov
xor
andb
push
shll
movsb
mov
arpl
and
out
stc
lock
out
mov
add
or
out
sti
mov
mull
es
xchg
push
and
xchg
xor
sub
inc
sbb
stos
mov
mov
jo
out
mov
push
adc
mov
movsb
lods
pop
test
or
adc
sahf
daa
in
and
pop
sub
jmp
lea
popa
je
lahf
pop
jmp
call
pop
inc
inc
paddsb
dec
cmp
and
cmp
std
cmp
jmp
mov
dec
mov
jmp
add
xchg
cmp
mov
pop
inc
adc
out
sbb
jmp
jo
and
and
push
in
in
cmp
dec
and
les
adc
and
adc
or
fsubrs
pop
xchg
lea
fisttpl
xor
lcall
and
hlt
in
lret
push
mov
push
mov
add
insb
ret
dec
mov
and
inc
mov
jl
pop
pusha
sub
add
dec
inc
add
psubb
xchg
xor
rcrl
pop
jmp
es
pop
out
lea
imulb
xchg
mov
pop
jp
and
inc
or
mov
adc
pop
test
clc
lods
iret
inc
and
add
gs
hlt
jns
push
push
arpl
outsb
dec
arpl
sbb
daa
das
sbb
subl
sbb
xchg
and
add
nop
dec
dec
shrb
push
cmpsl
cltd
movups
sbb
sbb
mov
or
add
dec
or
lahf
daa
lcall
xchg
or
xor
jne
imul
repnz
pusha
ljmp
xor
dec
push
jne
inc
push
inc
jmp
repnz
cmp
in
repz
or
pop
adc
jbe
dec
mov
or
rcrb
dec
int
sbb
xor
sbb
mov
arpl
mov
pop
inc
adc
jge
arpl
jle
pop
mov
sub
jle
inc
cld
je
outsb
mov
inc
das
adc
add
mov
dec
test
add
pop
xchg
imul
add
inc
mov
outsl
pop
das
xchg
cwtl
sbb
imull
test
add
add
pop
mov
lret
sub
pop
push
mov
cmova
pop
lret
test
push
push
stos
lods
lods
jbe
test
stc
add
push
mov
mov
test
or
inc
inc
dec
and
lock
dec
or
add
or
adc
aam
cmp
jg
inc
jmp
xor
ret
and
add
jmp
call
pop
andl
sub
in
js
cmp
or
je
push
xchg
add
lea
and
in
xchg
mov
inc
xor
xchg
outsl
jmp
je
inc
mov
mov
mov
and
inc
jmp
and
adc
or
lods
mov
test
jmp
add
add
xor
lea
cmp
add
pop
xchg
fiadds
inc
jmp
xor
pop
inc
jb
inc
mov
or
and
sub
pop
dec
push
lcall
movsb
sbbb
test
out
pop
fs
je
ds
inc
cld
loop
iret
rcrb
sub
sbb
mov
dec
mov
inc
push
push
inc
int3
fists
mov
sbb
rcl
jl
cmpsb
ficomps
rolb
add
ljmp
cs
add
sarb
nop
add
sbb
adc
sub
pop
or
pop
xorb
sub
push
push
rcrb
call
sbb
imul
fidivs
int
sbb
inc
dec
notl
imul
jmp
scas
dec
mov
cli
jb
daa
push
js
inc
and
xchg
adc
repz
mov
pop
jae
jb
imul
sahf
mov
dec
xchg
xor
cwtl
outsl
mov
push
call
movzbl
imul
fcmovnu
repz
add
jmp
inc
pop
push
ljmp
mov
xchg
lcall
cmp
push
push
scas
pop
inc
cmpsl
imul
mov
cmp
xchg
or
and
mov
leave
lock
adcb
xchg
in
mov
daa
daa
dec
fsub
pop
sub
lods
xor
aaa
cmp
mov
mov
or
push
push
out
and
gs
xor
lcall
xor
fwait
fwait
rclb
fdivs
fsubs
push
sbb
dec
gs
and
push
pusha
jle
pop
mov
sarb
and
lock
fnstenv
mov
lds
or
lock
data16
push
sub
or
ds
mov
sub
xchg
push
vunpcklps
cwtl
test
sbb
inc
pop
mov
mov
push
repnz
jl
and
and
lds
xchg
xchg
in
scas
les
push
push
add
add
sbb
xchg
inc
cli
cmp
sbb
sbb
inc
cmp
sahf
and
gs
call
shrb
shrl
ret
and
pusha
sub
loopne
or
lret
and
inc
adc
int
sti
sub
sub
push
sbb
push
pop
push
test
out
xor
add
jb
cmp
jp
mov
je
mov
sub
mov
pop
lods
xchg
add
jb
cmp
or
push
push
sbb
xchg
adc
inc
inc
inc
and
adc
and
nop
mov
xchg
and
sbb
in
and
jae
inc
mov
add
out
pop
ds
cmp
pop
nop
adc
loop
adc
xlat
repz
inc
sbb
adc
mov
adc
xor
mov
dec
mov
nop
or
pop
idivl
mov
add
scas
xor
loop
test
nop
lock
jl
xchg
fldcw
or
pushf
add
pop
int
imul
faddl
or
mov
mov
inc
inc
in
inc
adc
in
or
adc
pop
dec
call
icebp
mov
dec
cli
push
std
adc
mov
out
ret
push
sub
xor
xchg
jmp
dec
imul
mov
add
mov
repz
stos
lret
xor
sbbl
pop
mov
in
mov
jne
sub
and
push
inc
or
xor
mov
add
jns
sub
jmp
dec
daa
sub
mov
add
ds
and
lods
push
enter
push
arpl
and
sbb
push
mov
iret
adc
call
mov
or
fdiv
subb
adc
inc
andb
sti
adc
cmc
cpuid
mov
xchg
addb
test
push
popa
test
imul
push
fdivs
in
into
xchg
loope
aas
jno
jne
jne
cmpsb
and
mov
push
xchg
push
les
or
xchg
sub
xor
or
insl
cmp
mov
cmpsl
dec
jle
xchg
mov
test
mov
fdivr
mov
adc
cli
pusha
adc
lea
addr16
or
dec
shrb
mov
les
pop
push
mov
lret
push
add
ret
in
mov
dec
lea
xchg
push
das
xor
push
mov
mov
adc
fldcw
xor
mov
outsb
lods
sub
or
inc
pop
xor
or
jb
and
or
lods
push
call
cmp
inc
inc
pop
cmp
push
jg
jp
loope
xor
aam
ret
je
jmp
mov
test
enter
iret
mov
stc
stos
pop
xchg
les
sub
ds
test
sarl
ja
clc
dec
push
inc
imul
pop
adc
mov
and
and
push
dec
cmp
ret
pop
movl
mov
mov
addb
or
dec
add
sbb
shr
lcall
inc
jecxz
push
rcr
dec
inc
inc
xchg
add
adc
push
inc
sub
repz
sub
xchg
xor
jmp
adc
sub
and
ficoms
xchg
push
movsb
or
add
jb
icebp
push
sbb
aam
test
or
fnstsw
ficomps
call
jns
cmp
xchg
stos
repz
pop
pop
and
push
cmp
inc
fmull
leave
xor
popa
sahf
and
inc
mov
call
push
cmp
jae
adc
cmc
js
aaa
clc
dec
shr
les
or
adc
mov
mov
lahf
hlt
pop
insl
iret
fstps
call
out
sub
sbb
jae
mov
stos
movsb
stos
push
xchg
test
push
out
stc
loope
sbb
test
dec
ja
mov
inc
lret
mov
shll
sub
adc
mov
lds
lret
xchg
push
test
popf
icebp
xorl
fwait
sahf
cld
mov
add
sbb
pop
cwtl
sub
repnz
gs
pop
jo
mov
mov
decl
or
call
shrl
je
inc
mov
pop
ljmp
adc
or
shr
rcrb
mov
cli
sbb
inc
popf
sub
add
aas
jl
adc
lea
aam
fs
clc
xchg
pusha
mov
dec
jne
pop
jge
jmp
rcll
jne
leave
inc
cld
cmp
and
cmp
mov
fnsave
sub
call
lods
nop
mov
dec
stc
adc
and
inc
icebp
cld
test
lret
cmpsb
ljmp
cmp
ret
in
les
loopne
lret
lock
push
scas
std
lods
insl
nop
xchg
repnz
and
adc
adc
dec
mov
mov
adc
xchg
push
mov
dec
pop
and
mov
outsb
and
mov
out
dec
dec
hlt
push
dec
leave
or
dec
cmp
ds
sub
int3
das
jmp
sahf
fnsave
cmpsl
adc
dec
fildll
imulb
xchg
lock
fs
add
jne
lds
jg
enter
adc
cli
sahf
push
cmpsl
lahf
push
cmpsb
cmpsl
aam
and
mov
push
adc
push
add
movsl
movsb
mov
mov
mov
mov
jo
xchg
mov
xor
sbb
test
cmp
add
mov
pushf
cmpsb
arpl
xor
lds
das
jecxz
cmp
jle
pop
push
dec
xchg
dec
add
lock
add
call
adc
adc
sbb
rorb
icebp
inc
fs
dec
xchg
dec
std
or
mov
and
push
ja
pop
adc
mov
jg
subl
adc
add
and
daa
jns
jne
or
test
adc
js
dec
push
mov
cmp
mov
sub
add
xor
fistpl
and
and
popa
and
test
adc
enter
pop
add
jg
push
cmp
cld
lds
or
mov
xchg
mov
mov
dec
stos
cs
das
lock
xchg
movsb
mov
seto
cmpsl
dec
pop
mov
inc
ja
and
sbb
mov
push
into
movsl
adc
jl
jmp
popa
sub
and
aam
xchg
xchg
lahf
mov
xchg
lock
push
repz
adc
fisttpl
or
fs
into
add
mov
jnp
adc
mov
fbstp
sarb
push
or
push
mov
loopne
xor
aaa
nop
fildll
inc
xor
je
inc
or
and
push
push
dec
lret
push
pop
or
sub
xorl
xor
cli
or
push
pusha
test
push
push
cmp
xchg
or
mov
push
mov
add
pop
out
and
jmp
int
or
mov
test
sub
mov
xchg
in
xor
imull
lds
dec
adc
addb
dec
adc
add
or
sub
push
push
and
xor
push
sbb
cltd
stc
and
or
adc
mov
adc
rcll
dec
pop
repnz
or
shll
fimull
fisttpl
ret
ja
cmc
je
pusha
ja
inc
stc
push
mov
inc
lsl
cmp
jl
mov
dec
xchg
adc
hlt
or
inc
jmp
imul
push
in
adc
lods
adc
add
inc
in
inc
jae
push
mov
jo
xchg
lock
pop
ds
mov
incl
mov
enter
add
push
mov
sub
inc
sbb
pop
in
jne
sbb
xor
decl
rcl
sbb
pop
mov
cmp
faddl
pop
pop
mov
push
loope
mov
lock
imul
cmpsb
fisubrl
push
and
pushl
dec
mov
and
dec
lock
rorl
mov
popa
idivb
mov
adcb
das
nop
sbb
sbb
notb
xchg
data16
movb
movl
daa
jmp
jns
dec
push
inc
mov
js
mov
or
fwait
dec
int3
dec
inc
add
pop
adc
testb
lea
repz
inc
push
push
dec
sbb
mov
or
push
stos
push
add
sbb
test
adc
jge
inc
fmuls
and
and
in
cmp
test
dec
ljmp
les
cmp
je
popa
push
mov
inc
dec
push
push
lret
sbbb
fcmovb
push
mov
mov
mov
adc
cld
mov
sbb
lcall
pop
inc
std
pop
add
xor
mov
push
dec
decl
lea
adc
pop
call
in
xor
push
push
push
mov
xchg
call
inc
cmp
je
add
cmp
jnp
adc
les
movsb
push
jecxz
pop
test
adc
lods
mov
jp
inc
lahf
push
mov
sahf
and
mov
jb
dec
mov
push
aaa
sti
inc
xchg
gs
je
dec
or
enter
jl
xchg
faddl
ds
jbe
lds
es
sub
pop
mov
test
test
pop
push
adc
inc
sbb
adc
roll
ffree
jl
mov
cmp
lcall
push
movsl
cltd
xchg
mov
jecxz
sub
inc
or
xchg
imul
jmp
jg
lods
in
sbb
push
push
stos
jmp
sub
mov
xorl
dec
int
mov
stos
arpl
mov
dec
sarl
add
xadd
inc
jle
adc
adc
cmpl
cmpb
mov
scas
lahf
lcall
movsb
mov
mov
mov
adc
mov
call
fdivrs
mov
in
add
add
mov
lea
pop
pusha
dec
imul
push
data16
cs
cs
lcall
out
xor
mov
pop
psubsw
add
dec
out
mov
into
or
nop
lock
push
push
pop
mov
and
add
pop
sub
inc
pushf
xor
adc
cmp
sbb
jns
xor
cmp
mov
aas
xchg
jmp
dec
cmp
adc
inc
and
inc
test
cmp
mov
test
add
sbb
sub
cmp
mov
jmp
mov
jne
call
dec
mov
ret
or
mov
lcall
pop
mov
insb
fdivl
popa
jge
add
or
sub
pop
sbb
cwtl
xor
cmp
rolb
out
clc
das
mov
in
push
fadds
jbe
mov
pop
mov
or
adcb
jg
sub
aaa
and
in
mov
mov
jne
push
fdivrl
dec
in
test
add
jle
cld
jbe
sbb
jmp
sub
std
es
mov
pop
sarb
jge
or
push
fldl
in
jo
shr
adc
decb
xchg
inc
insl
push
xor
and
push
and
repnz
mov
in
sbb
push
ret
pusha
inc
in
mov
or
and
hlt
fists
bound
adc
cmpsl
popa
mov
sub
ds
cmp
gs
sub
or
test
dec
xchg
out
cld
xchg
arpl
inc
or
add
mov
mov
subb
out
mov
pushl
cltd
cld
adc
notl
mov
jecxz
imul
sbb
xchg
mov
jge
popa
adc
adc
dec
dec
fldenv
cmp
jg
or
leave
mov
pop
inc
ss
push
subl
call
daa
or
and
xor
push
cld
into
or
mov
test
sub
sahf
mov
push
add
jge
jbe
adc
pushf
inc
add
dec
ss
daa
je
mov
adc
push
cmp
mov
into
jne
xchg
push
idivb
cs
xor
sbb
push
xor
and
in
sub
add
xor
push
les
dec
push
out
sub
popf
inc
aaa
xchg
outsb
data16
dec
loop
fadds
jne
cmpsb
adc
lret
sub
xchg
ds
and
mov
or
and
jecxz
sbb
or
fstps
xor
lock
movsb
pop
ds
mov
push
or
pop
sbb
repnz
mov
out
push
add
pushf
test
in
pop
pop
cmp
mov
sarb
and
pop
mov
jae
lea
pop
cld
pop
clc
or
pop
int3
sub
sbb
es
std
mov
or
jne
negl
adc
testb
dec
mov
and
inc
xchg
adc
jnp
adc
add
add
out
push
adc
and
or
xchg
inc
jmp
push
fists
push
imul
outsl
add
sbb
push
xchg
mov
outsl
les
adc
sbb
sbb
mov
in
divb
adc
out
and
in
ret
sbb
shll
cwtl
xor
and
hlt
cli
adc
jl
adc
jle
push
and
inc
jmp
mov
pop
push
pop
cmp
lea
mov
adc
jne
cmp
mov
in
jl
nop
data16
fwait
adc
rorb
scas
jne
fcmovne
mov
pop
test
sbbl
mov
ret
push
pop
jle
sahf
or
push
add
or
cmp
cli
test
or
test
or
xor
pop
sub
jns
add
test
pop
je
cmp
jnp
sub
scas
cltd
cs
pop
and
or
call
dec
movsb
sub
shll
rol
mov
inc
add
js
mov
pop
cli
sarl
xchg
mov
push
xor
test
sub
dec
dec
orb
orl
cwtl
clc
repz
hlt
xor
cmp
addb
push
mov
xor
fstpl
push
or
or
push
call
xchg
jb
jmp
xchg
js
mov
das
mov
add
or
push
cld
mov
add
aam
sub
clc
arpl
pop
dec
dec
sbb
push
clc
popf
shrl
and
lods
pop
xor
dec
pop
xchg
sbb
mov
sub
shrb
or
xor
sub
fwait
mov
shll
imul
inc
cltd
cmp
and
adc
mov
jmp
mov
jne
mov
movsb
xor
mov
mov
jl
and
pop
iret
jae
inc
nop/reserved
gs
mov
xor
mov
inc
jmp
enter
xor
mov
test
adc
xchg
lock
pop
mov
xchg
adcb
mov
xor
mov
mov
arpl
adc
js
and
jne
cli
add
inc
add
add
cltd
push
mov
pop
inc
or
jne
mov
add
or
das
xor
cmpsb
xchg
jg
and
and
mov
mov
fdivrl
cmp
pop
lret
out
push
jns
cmp
sub
subl
lods
and
pop
add
or
mov
push
push
mov
cwtl
add
xor
aam
adc
inc
xchg
mov
data16
inc
addb
loop
outsb
and
daa
pushf
imul
idiv
dec
cwtl
and
push
and
and
sub
repz
adc
xor
and
mov
xchg
mov
sbb
sbb
hlt
cmp
dec
arpl
lret
and
iret
nop
in
dec
int3
adc
shrb
pop
iret
push
je
adc
dec
xor
adc
je
call
xchg
mov
sub
test
inc
dec
push
aam
js
jle
xor
enter
or
or
test
fcomps
pushf
mov
xor
mov
test
pop
sbb
out
mov
or
jne
mov
jo
and
movsb
test
jmp
inc
test
sub
or
sub
and
pop
lret
and
or
inc
call
cmpsl
test
xchg
stc
cltd
jnp
fwait
and
or
mov
jmp
inc
adc
add
jl
cltd
xor
adc
imul
sbb
popf
inc
cmp
cmp
pop
push
push
ficoms
dec
xor
lods
repnz
dec
adc
psubsb
popf
pop
sbb
jmp
or
push
pop
pop
test
jb
movsl
or
or
push
test
or
cld
and
inc
fmuls
jae
push
jae
mov
inc
and
xchg
es
mov
loop
or
lcall
mov
fisubrl
lcall
cltd
sbb
mov
and
outsb
inc
adc
sub
scas
push
cmpsb
in
jmp
push
or
ja,pt
adc
push
inc
lret
movsl
sar
in
inc
lahf
shl
and
fstl
sub
and
push
push
xor
xlat
or
bound
push
out
xchg
sub
xor
or
inc
imul
inc
push
inc
push
or
dec
jne
dec
in
adc
ret
or
jl
jmp
je
jo
jne
sub
les
and
out
xchg
xor
push
pushl
or
and
pop
mov
movsl
pushf
adc
push
push
mov
mov
or
push
pop
adc
inc
adc
mov
push
addr16
in
xor
xchg
jmp
pop
jnp
mov
jo
test
sub
dec
in
xchg
es
pushf
sbb
mov
push
sbbb
xor
and
cld
cmp
pop
sbb
aas
dec
or
test
mov
loopne
sbb
xchg
jmp
xlat
in
aam
in
notb
sub
inc
inc
pop
sbb
sub
sub
ss
mov
inc
test
mov
inc
jnp
js
sub
fsubrs
and
lea
mov
jns
add
push
bound
je
inc
mov
inc
mov
pushf
mov
cmpsb
ss
nop
mov
dec
and
inc
popa
sahf
int3
add
xchg
inc
jle
jns
inc
cmp
push
inc
sub
pusha
add
mov
and
jmp
push
je
adc
inc
movsb
addb
test
adc
pop
das
inc
incb
xor
lock
adc
and
and
lret
or
xchg
sbb
dec
mov
push
enter
mov
lods
test
std
cmc
inc
pop
mov
xor
pop
inc
xchg
mov
movsb
dec
sbb
mov
and
test
lods
les
xor
push
dec
divl
test
cmp
test
push
or
test
xchg
and
xor
mov
inc
outsb
lret
lods
jbe
cmpsl
jle
pop
sbb
xchg
xchg
adc
inc
adc
fs
shlb
es
test
mov
push
jle
pop
cmp
add
iret
test
or
call
mov
xor
jl
or
sbb
xor
cmp
xchg
push
sbb
push
test
roll
push
fnstsw
pop
test
out
les
mov
inc
sbb
xorb
insb
push
dec
rcrb
dec
add
test
push
and
adc
pop
mov
xor
cmp
dec
add
or
jmp
dec
dec
hlt
movb
sub
cltd
popa
xor
sbb
jmp
sub
xchg
test
push
push
xor
push
test
push
jmp
mov
test
inc
incl
jne
scas
xor
jmp
cmp
and
jne
push
icebp
insl
lods
ljmp
dec
and
sub
sub
push
mov
loope
test
shr
xcrypt-cfb
cmpsl
mov
mov
sahf
cli
xor
xchg
jb
mov
gs
add
ret
jnp
or
or
push
push
test
cmp
push
je
mov
add
mov
mov
dec
hlt
or
pop
cmc
xchg
pop
mulb
adc
testl
adc
and
inc
std
sti
fistps
and
repz
inc
std
inc
out
sti
sub
mov
or
pop
mov
cli
test
add
jb
add
fisttpll
dec
jge
inc
or
add
stos
sub
jecxz
mov
mov
ret
jo
sub
leave
call
sbb
call
and
cwtl
sub
dec
in
xchg
cmpb
adc
test
daa
pop
jle
ljmp
sub
mov
into
adc
lahf
out
sbb
les
jl
xor
push
xor
and
push
and
rcr
call
lret
shr
cmp
les
pop
cli
adc
push
jbe
test
clc
and
aaa
adc
and
in
aad
sub
adc
xor
fsubl
or
xor
sbb
add
lods
cmp
andb
loope
and
sub
into
or
imul
popa
cltd
gs
in
shlb
sub
inc
fs
cmp
nop
and
adc
cltd
and
cltd
jl
adc
cwtl
adc
or
or
aaa
outsb
or
rcpps
scas
xor
sbb
cmp
test
mov
orl
js
sub
mov
mov
xor
push
xor
dec
add
jle
push
fwait
mov
divl
inc
idivb
fsubp
xorl
shl
ds
mov
cmp
es
lahf
inc
adc
call
loopne
pop
jge
insb
ja
pop
xchg
jle
xor
mov
mov
fwait
inc
fsubl
adc
adc
xchg
push
add
pop
jbe
and
and
or
add
or
mov
call
in
pop
sbb
dec
stc
mov
gs
pop
outsb
imul
adc
imul
push
or
pop
xor
and
cmp
pop
sbb
or
xchg
fcomp
mov
xchg
mov
push
fmuls
test
inc
jns
cwtl
sub
sbb
roll
add
push
mov
or
inc
jae
or
and
dec
sbb
movsl
xchg
aaa
cli
daa
mov
sub
sbb
or
call
int
imul
pop
jle
mov
dec
lahf
insb
das
inc
add
add
sub
push
dec
adc
sbb
mov
icebp
sarb
pusha
jl
inc
subb
clc
leave
cmp
push
adc
imul
dec
iret
sub
cwtl
into
xchg
popa
adc
popf
in
lock
mov
shr
mov
test
adc
cmpb
iret
iret
clc
adc
jnp
sahf
insb
mov
xorl
int
out
fildll
addr16
dec
add
fs
adc
mov
xchg
cwtl
push
mov
lahf
push
adc
jge
or
mov
push
add
mov
jp
push
lea
lods
push
or
daa
int3
subb
xor
xorl
imul
mov
sub
mov
cmp
sub
mov
adc
push
pop
xchg
sbb
inc
push
cld
xchg
clc
fisttpll
and
jmp
sub
aad
pop
mov
jo
and
mov
addr16
push
sbb
sbb
adc
adc
test
sbb
je
fimuls
jbe
adc
jl
not
mov
lods
and
les
das
and
inc
lods
jno
test
bound
push
aad
and
stos
pop
shrb
pushf
and
movsb
lods
xchg
jno
in
adc
jne
cmp
inc
popf
cmpsb
cmpsl
les
cld
cmp
test
push
add
jbe
inc
sbb
sbb
movups
test
adc
and
adc
test
ja
add
push
push
mov
and
gs
sbb
pop
inc
push
jne
adc
add
jle
push
jge
push
adc
movsl
sub
test
or
cmp
pop
jp
aam
cmpsb
lret
adc
icebp
xchg
add
push
push
movsl
cmc
aam
or
fiadds
rorb
mov
sub
add
je
lods
sbb
enter
iret
jg
jno
or
xor
or
xchg
mov
call
inc
add
mov
push
xor
idivb
sbb
or
xchg
inc
cmp
jne
clc
call
fdiv
pop
lea
lods
and
mov
inc
data16
and
mov
sbb
push
lcall
test
mov
xor
in
fstps
mov
sub
mov
test
std
xor
jle
mov
xor
mov
and
add
or
pop
and
mov
xor
dec
int3
out
adc
jge
pushf
jb
movsb
dec
push
push
or
fisubs
movsl
jle
push
js
lea
push
mov
pop
insb
xchg
std
cli
adc
clc
xchg
jnp
pop
adc
shll
movsb
dec
mov
inc
js
xchg
lret
add
mov
inc
mov
push
push
add
jmp
cltd
adcb
jns
in
cltd
adc
popa
or
cs
and
repz
pusha
sbb
pop
pop
add
push
xchg
mov
outsl
and
mov
or
sbb
and
and
jle
cmp
jbe
xchg
adc
scas
lahf
daa
xchg
daa
shl
add
ds
mov
ret
push
pop
xchg
out
adc
test
and
inc
nop
pop
adc
push
adc
fisubs
pop
test
ljmp
xchg
iret
dec
and
das
in
sub
push
imul
insl
pop
push
pop
dec
or
leave
and
pop
insb
inc
js
adc
hlt
inc
push
jl
adc
hlt
and
inc
in
or
enter
push
and
inc
pop
lcall
mov
jg
popf
out
popf
jns
fildl
popa
add
jbe
dec
sbb
pusha
mov
adc
and
mov
ja
mov
insb
pop
in
mov
and
push
mov
inc
adc
out
mov
and
les
call
push
xchg
sbb
lret
jo
jge
sub
pop
adc
test
jne
les
and
test
cmp
inc
loopne
pop
stos
daa
sub
adc
mulb
lock
mov
add
xchg
push
mov
mov
push
cmp
jle
sub
pushf
and
enter
push
or
mov
test
sub
inc
jnp
int3
fs
outsl
adc
jge
sub
and
jp
or
enter
jecxz
cwtl
and
and
push
test
xchg
or
cld
daa
jmp
lock
inc
cld
and
dec
pop
xor
add
inc
mov
xor
clc
je
movsb
push
lahf
pop
cmp
add
jb
loopne
out
jp
data16
push
mov
or
sub
push
add
xchg
lret
sbb
or
jns
and
scas
or
pop
push
adc
xor
or
xor
ds
sarb
sub
lahf
lcall
aas
or
movsl
clc
adc
sarb
je
call
lock
mov
adc
sub
pusha
ds
push
cmp
jmp
xor
out
mov
sbb
call
or
push
add
push
xor
adc
leave
dec
sbb
sbb
jns
movsb
frstor
or
push
mov
sbbb
cs
add
push
mov
add
lea
cmp
jne
push
cmp
xor
pop
sahf
aas
lods
rorb
sbb
adc
dec
es
pop
jmp
xor
push
int3
inc
cmp
pop
test
mov
sub
adc
inc
pop
addl
jb
bound
sub
xchg
call
sahf
sti
or
test
les
or
das
and
clc
aas
mov
popf
or
add
mov
mov
fs
push
pop
pop
sub
loope
adc
push
mov
sub
or
cmp
mov
iret
push
inc
xchg
cmp
adc
and
mov
xorb
and
sbb
test
aaa
and
push
movb
call
sarl
les
mov
push
mov
jae
add
sbb
test
divb
inc
xor
popf
and
push
push
mov
shr
xchg
adc
pushl
repnz
mov
arpl
inc
cmp
sbb
xchg
jns
adc
je
inc
jb
nop
xorl
repnz
faddl
or
dec
jnp
je
dec
push
jns
cmp
sbb
and
adc
aas
dec
adc
test
sbb
or
push
leave
call
adc
and
sub
aaa
fs
mov
ret
aam
lea
sub
jl
sbb
jns
loop
mov
adc
daa
mov
sbb
mov
and
jne
inc
or
push
sbb
adc
scas
mov
mov
pushf
mov
idivb
sub
ds
mov
clc
mov
iret
leave
jnp
dec
add
pop
notb
adc
divb
std
sbb
mov
movsb
cmc
mov
or
les
sbb
jne
movsl
sub
aas
jo
mov
mov
jecxz
push
jle
and
clc
test
fs
or
mov
daa
push
adc
xchg
cli
das
inc
cli
push
or
cmpb
pop
or
mov
test
aas
jle
js
movsb
ljmp
or
and
xor
push
adc
push
cmp
rcll
mov
scas
sti
inc
adc
sub
inc
push
cmp
sub
dec
popf
lret
push
dec
push
cmp
jmp
xlat
cld
nop
mov
jo,pn
inc
cmp
push
cmp
xor
push
xor
and
arpl
xor
push
call
xor
sub
ljmp
fdivrp
mov
dec
mov
repz
push
xchg
add
mov
adc
push
ja
daa
cmp
mov
roll
jle
xchg
ja
push
scas
stos
daa
andb
jmp
and
cmp
push
jne
cmp
inc
jge
cmpsl
and
enter
mov
mov
sbb
inc
cmp
jne
cwtl
dec
dec
add
jle
sbb
xchg
or
sbb
or
adc
stc
lret
jge
fwait
outsb
jb
es
and
andb
adc
aas
push
sti
enter
je
or
mov
mov
xchg
leave
cli
movb
or
int3
cmp
shlb
std
and
add
pusha
mov
cmp
jbe
mov
mov
ljmp
push
pop
mov
rolb
jbe
popf
imul
push
test
adc
sub
cltd
push
dec
pop
jnp
icebp
call
sub
jmp
daa
pop
cmp
inc
test
add
sbb
dec
inc
std
outsb
daa
in
jo
mov
les
pop
je
jmp
arpl
xor
mov
jno
push
out
lock
push
orl
cmp
jne
xor
sub
incl
cmp
iret
cs
or
push
pop
enter
push
rorl
inc
add
push
and
shll
xor
lea
push
test
aam
push
cmp
jnp
cld
pop
or
outsl
jecxz
imul
repz
inc
push
and
stos
sbb
call
dec
xor
add
jb
adc
in
add
dec
jmp
enter
adc
paddd
push
sbb
mov
adc
or
or
cmc
and
insb
hlt
mov
sub
cmc
pop
xor
push
lock
xchg
pusha
lret
sbb
fisttps
into
or
mov
jns
xchg
jnp
cmp
call
dec
int3
in
nop
inc
mov
outsb
and
cmp
pusha
and
cwtl
pmaddwd
or
jb
stos
lcall
je
lock
xor
jmp
sub
push
dec
shrl
or
call
push
sbb
jbe
dec
fldenv
shrb
mov
add
ja
mov
ss
jmp
mov
mov
add
or
or
xor
pop
div
shrl
call
cmp
xchg
jl
and
fdiv
sub
ficomps
nop
and
adc
jno
sub
outsl
adc
roll
das
jg
out
mov
cmp
int3
xchg
sar
pop
jae
in
loop
add
pop
mov
dec
mov
mov
rcrl
int3
pop
lock
clc
cmpsb
cs
outsl
or
adc
pop
jnp
jb
enter
imul
data16
mov
or
pop
push
mov
insl
pop
fcomps
int3
and
test
and
add
rcrb
push
nop
and
add
mov
mov
cli
push
sub
and
and
jno
je
cmp
dec
mov
add
or
lds
test
adc
xor
pop
push
mov
pusha
push
xor
popf
cmp
or
add
mov
push
add
pop
dec
shrb
enter
and
mov
sub
or
adc
adc
inc
addb
jge
int3
cltd
mov
movsl
jnp
or
mov
push
insb
out
popf
fistl
cmc
insb
pop
stos
rcrl
xchg
andb
lods
push
adc
push
mov
lods
nop
jne
pop
pop
les
inc
mov
inc
mov
stos
lock
andl
cmp
jge
hlt
insl
sub
cli
inc
iret
jae
push
addb
jbe
adc
inc
cmp
addb
fwait
mov
add
imul
cmp
mov
jae
mov
or
mov
xor
inc
add
xor
push
push
sub
bound
xchg
inc
gs
scas
xor
mov
jmp
out
pop
shr
pop
sub
jns
pop
loope
mov
rclb
rcrb
jno
cmp
ds
add
mov
or
adc
ds
dec
sets
inc
cmp
sub
popl
and
into
ljmp
sbbl
shr
mov
and
inc
add
addr16
xchg
andl
sarb
ds
fcomi
add
lds
cwtl
lock
sbb
cli
sbbb
push
rdpmc
ds
int3
push
dec
in
cli
push
jl
mov
and
jb
sti
sub
push
push
popl
lods
push
ficompl
jge
inc
jg
xchg
or
push
cmp
jne
jmp
icebp
pop
mov
adc
rorl
push
in
ss
test
jb
ljmp
ror
xsave
fists
adc
in
mov
pop
push
mov
js
xor
clc
test
mov
push
and
xor
add
cmp
xchg
loop
lods
or
jns
or
or
lods
or
movsb
insl
adc
orl
or
lea
push
mov
cltd
pop
addb
idiv
nop
inc
xor
and
lea
cltd
cli
sti
sbb
xlat
mov
not
xor
les
ret
or
adc
mov
sub
iret
jge
push
arpl
and
jne
pop
loopne
cltd
or
mov
testl
imulb
inc
adc
repz
add
ljmp
add
aad
imul
bound
test
pop
mov
cwtl
push
push
push
lret
push
inc
insl
pop
xchg
push
mov
bound
fldcw
xor
cmp
lea
inc
adc
or
add
adc
call
dec
inc
movsb
xchg
jl
in
jnp
dec
xchg
cli
inc
and
cwtl
dec
jmp
push
mov
add
cwtl
pushl
and
add
mov
popf
push
jo
loopne
insb
adc
inc
and
jle
sub
xchg
sub
cli
pop
data16
mov
test
xor
lea
jbe
nop
sub
imul
mov
andl
rcll
mov
addr16
or
stos
int
push
or
fdivrl
push
xor
arpl
out
dec
inc
test
fsub
jns
call
dec
ds
nop
xchg
sub
aas
popa
sub
push
lea
pop
sub
cmp
pop
inc
adcb
push
inc
pop
call
movsl
sbb
adc
jae
scas
loop
push
movsl
stos
sti
and
mov
jne
push
popl
push
scas
and
or
jmp
dec
jne
fcoml
sbb
dec
rcrb
dec
repz
adc
aas
fwait
mov
mov
stc
push
inc
xchg
add
lods
pop
and
push
push
push
call
jge
adcl
mov
paddsb
push
clc
es
add
jo
movsl
mov
popa
xor
sub
fiadds
lods
fisubs
das
sub
icebp
jg
xchg
add
jbe
jne
aad
or
into
mov
bnd
arpl
lock
add
sbb
add
pop
lock
lea
push
cmp
aad
push
cltd
pop
inc
test
gs
adc
xchg
jbe
js
push
or
pop
div
rcrl
shr
xlat
jbe
and
lea
fs
cwtl
loop
or
add
pop
shll
icebp
not
inc
rol
mov
rorb
call
mov
or
cs
repnz
popf
push
pop
stc
mov
inc
xor
jo
and
fimull
dec
adc
lock
stos
and
sub
in
repz
push
pop
add
idiv
inc
jbe
xor
or
add
mov
and
mov
fidivrl
filds
pop
int3
lea
cmc
mov
mov
loope
pop
add
into
sbbb
dec
into
not
mov
shlb
inc
mov
adc
or
cmp
mov
gs
push
flds
or
rclb
mov
movlps
test
loopne
xchg
out
mov
dec
xchg
insb
sti
lods
gs
fadds
mov
std
test
out
or
or
fsubl
fcomps
inc
xchg
jecxz
mov
loopne
hlt
inc
mov
inc
push
mov
jae
jg
push
lret
mov
mov
pop
orb
loop
cli
filds
and
lret
rorb
es
push
push
mov
push
loope
ljmp
xlat
sub
xchg
mov
and
nop
imul
cmp
mov
adc
dec
or
das
popf
stos
lock
adcb
add
lcall
mov
or
loope
pop
mov
hlt
add
mov
push
cmpsb
clc
add
shl
jge
fwait
mov
pop
sub
pop
clc
movsb
pop
rcr
cmp
ljmp
jmp
jmp
push
iret
loop
sub
sarb
bound
add
sbb
cltd
dec
ret
inc
fcomp
cli
mov
daa
xor
adc
and
xchg
rolb
or
les
adc
push
pop
pop
adc
add
sub
dec
xchg
mov
sub
ret
mov
ljmp
sbb
inc
repz
cli
dec
out
adc
mov
enter
add
dec
pop
pop
inc
inc
jecxz
dec
repnz
mov
or
xchg
inc
or
push
loop
ljmp
iret
movsl
outsb
clc
fsubp
and
push
jmp
mov
pop
cmpsb
dec
das
mov
cmpsl
cmpsl
enter
arpl
inc
xchg
ljmp
dec
loopne
fisttpll
inc
push
loopne
arpl
adc
push
int
and
xchg
inc
add
jecxz
xor
in
sti
xor
pop
push
lahf
mov
push
pop
aaa
ret
and
jne
aad
push
push
pop
hlt
mov
dec
pop
inc
mov
adc
adc
lret
and
pushf
iret
xchg
fisubl
sahf
or
inc
in
adc
inc
adc
test
int
push
sub
add
sbb
or
fwait
pop
inc
or
or
orb
clc
mov
pop
inc
or
mov
lea
rcll
push
inc
popa
push
flds
outsl
addr16
ret
call
dec
mov
icebp
and
fwait
inc
or
in
and
mov
imul
cli
pop
out
sbbl
mov
xor
xchg
xchg
sbb
sbb
jmp
mov
enter
into
xchg
movsl
push
call
popf
insl
mov
cmp
inc
push
lret
add
and
cmp
and
mov
push
adc
sbb
ds
ljmp
jae
inc
fwait
add
insl
int3
je
test
mov
cwtl
xor
xor
test
push
pop
icebp
pushf
add
mulb
mov
push
jo
scas
xor
cmp
sbb
mov
and
cltd
cmp
lock
jle
sub
or
jecxz
push
inc
mov
mov
inc
out
or
andb
mov
fildl
adc
or
cmp
sbb
push
ss
xor
rorb
sub
je
out
pushf
call
cltd
in
nop
clc
scas
in
jl
dec
jb
repnz
and
es
inc
jmp
or
jno
or
hlt
mov
mull
lret
inc
cmp
in
rcr
cs
adc
sub
pusha
inc
or
test
stos
or
orl
inc
out
and
sub
mov
or
adc
adc
into
sbb
adc
gs
jns
push
imull
mov
mov
int3
or
and
push
idivl
or
lock
mov
mov
fyl2x
cmp
dec
lock
test
ljmp
mov
orb
outsl
sub
nop
jecxz
icebp
in
mov
add
out
push
lock
xchg
aam
adc
add
mov
inc
int3
cmpb
push
ret
in
sbb
cmp
or
xchg
mov
and
loope
sub
xchg
adc
inc
jle
inc
xchg
aas
xchg
pop
xchg
mov
icebp
in
push
fs
out
push
sbb
je
lret
push
mov
or
jmp
andl
leave
mov
adc
and
lock
add
repnz
addb
sahf
aad
mov
or
cmc
imul
insb
das
jb
pop
ror
fiaddl
jno
adc
test
dec
cmc
cmp
adc
push
dec
jp
mov
nop
adc
sbb
aam
gs
lret
push
push
scas
or
add
or
ja
inc
adc
ret
mov
sub
sub
test
pop
lahf
sub
sbb
sbb
ror
sbb
sbb
mov
adc
int
dec
adcb
rcll
mov
ds
sbb
sbb
sbb
call
push
pop
mov
sub
movq
xchg
mov
pop
ret
call
cmp
decl
sub
xchg
rolb
mov
ret
mov
in
cmpl
and
add
mov
mov
dec
jne
pop
orl
call
push
inc
dec
jne
pop
pop
pop
jmp
aad
scas
mov
push
fbld
out
jae
jbe
xchg
repnz
push
flds
pop
mov
lods
in
mov
inc
sub
dec
mov
cmp
movsl
pop
inc
lret
and
mov
sbb
test
or
loop
push
inc
lods
rcr
sbb
sub
testb
scas
dec
push
sahf
sub
ret
inc
xchg
add
dec
push
iret
inc
das
jne
mov
jno
lfs
mov
dec
ljmp
xchg
and
je
push
movsb
sbb
push
mov
fxam
push
cmp
mov
das
inc
mov
negb
rolb
mov
incl
lea
inc
inc
push
mov
push
shlb
jno
mov
pop
pop
lret
loop
pop
or
adc
ss
cwtl
mov
pop
adc
je
push
insb
movsb
leave
mov
lret
mov
mov
stos
pushf
cmpl
inc
mov
adc
in
jne
dec
inc
nop
pop
xor
test
andb
xchg
xor
inc
int
inc
pop
xorb
or
add
sbb
push
mov
xor
push
add
setle
dec
jecxz
incb
mov
test
sbb
adc
add
jmp
sbb
jne
and
xor
add
enter
jne
or
push
mov
mov
shlb
daa
pop
shll
dec
jg
push
das
xchg
enter
push
pop
test
lods
icebp
sbb
ret
fsubl
and
jns
pop
jl
cmpsl
push
ljmp
repnz
test
cld
out
xchg
jl
mov
adc
les
fcomp
jnp
sub
add
mov
lret
jns
call
push
test
add
xchg
xor
add
mov
push
es
adc
hlt
fadds
push
adc
push
sub
sub
out
pop
daa
adc
mov
adc
fdivl
mov
js
push
scas
leave
cmpsl
cwtl
ret
ljmp
adc
pop
push
inc
or
rol
add
sbb
xor
sub
inc
sbb
jne
or
adc
mov
push
fidivl
aaa
inc
aas
mov
or
je
adc
xlat
mov
cmp
cltd
inc
pop
les
inc
popa
in
mov
push
or
and
loop
and
les
or
loopne
mov
mov
lock
imul
shlb
fbstp
mov
and
and
out
and
inc
adc
adc
jle
test
shll
sub
pusha
push
and
dec
add
dec
dec
out
lret
jbe
cmp
dec
imul
inc
sub
add
inc
test
sub
cltd
jae
push
inc
out
cwtl
fs
push
jno
fwait
and
jns
idivb
es
jae
sbb
es
and
add
call
stc
and
jle
dec
adcl
out
je
push
push
xchg
push
mov
pop
pop
dec
outsb
mov
gs
call
push
push
inc
xor
inc
pop
popa
inc
xor
fistl
push
jo
adc
loope
pushl
and
ret
cmp
mov
xor
add
mov
jnp
or
sub
jns
add
shufps
inc
mov
xchg
push
lahf
push
xchg
lahf
pusha
push
andb
xor
jo
sarl
and
mov
enter
call
lea
xor
add
adc
add
and
cmp
test
fs
sub
adc
lods
addr16
xor
mov
fldcw
and
pushf
notb
std
and
adc
dec
sub
sbb
push
adc
and
inc
fcoml
bound
popf
popf
jnp
movsb
sbb
hlt
add
dec
push
adc
adcb
test
mov
mov
mov
nop
aaa
cmp
adc
rcrl
xor
xchg
inc
xor
inc
dec
ja
pop
mov
sbb
mov
mov
or
popf
fiaddl
movsl
lock
xchg
into
icebp
les
stos
and
sbb
push
jo
pop
pop
or
xchg
inc
sti
inc
insb
jl
scas
shlb
inc
dec
inc
and
test
xor
imul
xchg
push
and
cmp
push
inc
or
nop
outsl
mov
adc
shlb
and
out
xchg
sub
push
push
push
das
mov
adc
adc
and
inc
hlt
and
das
popa
push
test
inc
inc
hlt
jle
adc
sub
ja
icebp
push
adc
sbb
and
jp
aad
ljmp
and
inc
enter
sub
mov
adc
cld
pop
sub
xchg
sub
pop
mov
les
sbbb
lods
insb
inc
xchg
or
push
push
cli
mov
adc
adc
test
and
cmp
sbb
pushl
bound
sbb
repz
push
in
inc
add
test
ret
xchg
pop
jae
test
mov
call
aad
adcb
addr16
push
xchg
pop
je
push
ss
js
cmpsl
ja
lock
adc
push
mov
xchg
adcb
rorl
and
sub
enter
adcb
sbb
sbb
popf
fsubs
pusha
leave
xchg
enter
pop
shl
call
push
mov
mov
push
inc
clc
sbb
adc
out
pusha
dec
sub
mov
or
sbb
sbb
and
jecxz
adc
test
mov
push
test
fsubp
scas
or
jnp
popf
pop
push
lods
mov
mov
fs
cmpsb
sub
push
and
mov
xchg
cmp
cmp
ret
jl
jno
xor
adc
push
ret
or
lar
inc
data16
inc
call
pop
cmpb
hlt
out
and
dec
addr16
and
jge
test
mov
mov
inc
movsl
push
dec
inc
addb
sbb
jg
lods
cwtl
sbb
lods
mov
or
push
sbb
xor
pop
xchg
push
fwait
sub
mov
cmovne
ss
adc
daa
inc
add
dec
js
and
cmp
dec
mov
push
mov
pop
push
or
pop
inc
mov
pop
dec
push
xchg
mov
sub
cwtl
ljmp
addl
pop
sbbb
popf
loop
pushf
js
test
fmull
adc
test
into
rcll
sub
je
fsub
sbb
pop
sbb
and
dec
dec
repz
sbb
dec
xchg
xchg
insb
and
mov
push
sbb
mov
cwtl
fmuls
push
mov
push
aaa
and
pop
and
sbb
adc
xchg
and
adcl
mov
cmp
in
or
push
cmp
mov
sbb
jne
fcomps
popf
ja
test
adc
add
inc
jg,pt
and
cmp
fwait
loopne
mov
mov
push
mov
rcll
push
xchg
jo
rcll
mov
dec
mov
dec
test
test
sbb
xchg
xorl
pop
hlt
push
cmpsb
xor
cmpb
call
call
pop
repz
add
sbb
sub
daa
pop
or
jne
push
and
sbb
adc
mov
sub
mov
cmp
sub
jl
inc
pushl
lea
aaa
add
or
nop
mov
sbb
push
mov
in
mov
pop
inc
add
cs
pop
adc
and
push
enter
cmp
cli
add
scas
les
dec
sub
mov
inc
inc
adc
inc
dec
and
pusha
enter
fs
add
inc
es
es
iret
and
inc
cli
and
mov
push
dec
xor
sahf
push
cmp
and
loop
inc
cwtl
shlb
test
gs
inc
mov
cli
inc
call
std
add
and
test
push
dec
sbb
push
cmp
popa
and
xchg
cltd
popf
push
enter
fwait
dec
movsb
mov
or
pop
je
sbb
mov
mov
test
jle
mov
push
test
mov
jg
pop
xor
push
cmp
or
mov
xor
lahf
cwtl
stos
cmp
dec
xor
lahf
cmp
ljmp
push
bound
or
mov
movsl
jge
xlat
sbb
xlat
imul
or
xchg
and
mov
fnsave
inc
or
loopne
dec
xor
add
stos
data16
inc
inc
and
dec
mov
cld
test
jb
enter
lds
lret
xchg
mov
inc
scas
adc
lds
ret
out
movsl
adc
xor
sub
and
or
add
lods
jge
sti
ret
ret
rolb
inc
enter
push
sbb
lea
xchg
mov
scas
pop
inc
cmp
xor
stos
cmpsb
fldl
ljmp
lods
daa
push
cwtl
es
ja
jne
xchg
es
adc
xor
add
adc
pusha
xlat
xlat
popa
jge
jl
lods
adc
push
fisubl
mov
and
idiv
push
push
mov
or
jbe
sarl
clc
push
out
popf
inc
dec
sarb
mov
es
add
cmp
cmp
fisubrs
mov
xor
cmp
loopne
dec
mov
gs
test
lea
sbb
test
das
add
xor
pop
dec
sbb
testl
sbb
adc
hlt
xor
repnz
and
mov
cmp
cmp
dec
jbe
sub
or
pop
sub
jge
std
cltd
and
jo
je
jae
inc
and
out
and
std
out
ds
test
call
jmp
loope
mov
loope
and
dec
sub
add
stos
push
sbb
mov
call
jmp
ds
cmpb
inc
xchg
sbb
cmp
ret
or
movsb
xchg
cmp
icebp
dec
cli
pop
adc
push
jmp
inc
sbb
jbe
add
dec
push
inc
cmp
add
pmulhuw
sub
dec
test
popf
adc
in
xor
jl
push
push
jno
push
push
mov
mov
adc
add
clc
mov
call
add
cmc
outsl
and
inc
inc
aas
popf
std
adc
ror
mov
push
jge
mov
dec
xchg
sbb
jecxz
jbe
scas
and
dec
xor
or
sbb
fdiv
popa
lcall
loopne
xchg
push
or
les
cmp
into
jb
dec
cwtl
mov
mov
push
jg
fiadds
das
add
inc
es
adc
jns
mov
pushl
push
out
xor
pop
jp
fs
and
inc
xchg
sbb
je
xchg
cmp
xchg
test
mov
daa
and
adc
push
and
adc
mov
nop
adc
push
ret
inc
pop
pop
in
sub
dec
xchg
xchg
aad
pop
push
cwtl
cwtl
pushl
pop
sbb
and
lock
or
or
or
push
mov
divb
mov
push
lds
cmp
jge
adc
or
lods
daa
mov
lcall
sbb
fsubl
sbb
xor
inc
int
push
aaa
insl
inc
push
or
inc
cs
adc
decl
je
decl
neg
push
add
cmpb
pop
pop
je
ret
ret
mov
inc
insb
push
ss
sub
stc
scas
adc
sub
jmp
and
push
ret
cmpsl
inc
ja
push
add
jne
sti
cmpsl
push
or
lock
sarl
xchg
push
push
mov
inc
mov
int3
jnp
outsl
mov
lcall
cmp
bound
xor
inc
or
sbb
adc
mov
add
es
inc
adc
int3
inc
ret
xor
xchg
shlb
shl
xchg
jle
add
or
push
jle
iret
mov
pop
ljmp
mov
push
pop
loop
ja
or
mov
cmp
jmp
inc
mov
push
addb
pop
movsl
lds
mov
and
cmp
and
ljmp
mov
iret
loopne
flds
sbb
push
and
jmp
mov
sbb
rolb
dec
xor
pop
push
jecxz
jb
jae
std
and
adc
inc
pop
cli
jb
add
add
dec
pop
mov
pop
dec
xor
mov
inc
sbb
mov
ret
movsb
adc
daa
in
out
int3
mov
addr16
sub
test
jle
sbb
jne
xor
inc
loopne
inc
cmp
and
out
ret
mov
icebp
cmp
xor
out
add
dec
push
je
rolb
mov
jb
call
jae
movsl
outsb
pop
xor
sub
out
loopne
add
sar
imul
xlat
nop
rclb
cs
dec
mov
dec
inc
out
cmp
pop
lcallw
lcall
mov
cmp
aad
fwait
popf
test
pop
test
and
mov
out
nop
adc
inc
or
inc
call
xor
xor
push
inc
or
cmp
or
jne
jp
and
jne
mov
or
push
jnp
cwtl
pop
mov
push
nop
and
xor
rorb
test
push
xchg
push
aam
call
adc
aaa
or
out
dec
stos
pop
stc
repz
je
lock
or
jnp
and
or
test
fiaddl
jg
lcall
jg
mov
jno
xchg
or
sub
pusha
pop
mov
add
push
cmp
jne
push
mov
xchg
paddsw
sub
daa
inc
ds
push
aad
adc
jno
fdivr
das
loop
std
jmp
fisttpll
push
sub
ds
repz
mov
and
imul
testb
jne
dec
push
mov
or
xor
sub
pusha
mov
cmp
je
iret
sbb
or
lock
jb
bound
sbb
gs
loope
mov
xor
push
adc
popa
and
std
or
rclb
fcomps
mov
iret
pop
or
mov
sbb
push
pop
and
cld
add
test
daa
jge
mov
in
sti
inc
cvtpi2ps
sub
adc
jae
sub
cli
mov
jb
sub
add
xchg
lds
sbb
push
movsb
test
fs
sub
ret
lahf
loop
dec
cld
sub
adc
pop
xor
movsb
mov
xchg
rorl
cwtl
mov
movsb
xor
sbb
xor
inc
pop
outsl
int3
jg
test
call
jo
or
inc
xor
and
mov
and
xchg
xor
in
loop
sbb
dec
push
and
pop
jne
jmp
pop
or
cmc
xor
lea
cmpl
and
mov
push
adc
inc
add
pop
sub
into
cld
or
imul
mov
jns
push
lods
in
add
cmp
adc
insl
cmpl
loop
cmp
push
pushl
add
movsl
mov
sub
add
loope
xchg
mov
push
ja
imul
cmpsl
sbb
imul
jo
lock
pop
adcb
sbb
enter
fwait
sub
pop
lea
inc
aad
xor
xor
outsb
sub
xchg
mov
adc
inc
mov
enter
add
cmp
xchg
fistpll
call
push
sahf
push
cmp
je
cmp
xchg
pop
outsl
daa
ja
pop
adc
subb
dec
mov
push
mov
add
sbb
push
and
mov
loopne
sub
scas
or
dec
out
cmp
mov
sti
mov
imul
xchg
icebp
sub
sub
in
and
cmp
inc
popa
pushf
cmpsl
inc
lea
push
adc
or
adc
pop
cmp
adc
jno
jmp
inc
mov
bound
cmp
aaa
insb
push
dec
outsb
add
clc
pop
sub
mov
sub
cmc
dec
insl
push
rclb
stc
out
sub
jp
xor
subb
push
adc
mov
mov
add
repz
and
or
lock
sarb
cmp
jb
jmp
push
sbb
cmp
cmp
sbb
sub
xor
or
frstor
ret
push
inc
rclb
cmp
mov
push
jp
loope
xor
add
dec
fs
je
in
ljmp
mov
xor
inc
pop
out
mov
mov
inc
inc
jnp
pop
nopl
xlat
sbb
push
xchg
xchg
push
out
dec
in
sarl
and
inc
popa
sar
imul
pop
and
stc
fists
icebp
sub
xor
inc
sub
stos
sub
lods
dec
adc
sbb
xchg
or
push
mov
push
inc
aam
mov
dec
xchg
rcrb
sub
mov
xchg
push
push
xchg
xchg
mov
xor
int3
lret
imul
cmpl
je
les
addr16
imul
cs
sbb
jbe
popa
and
jle
gs
rcr
xchg
xor
aam
mov
lds
xchg
mov
or
cmp
cmp
or
or
inc
ss
inc
dec
mov
gs
push
loope
ret
dec
dec
add
mov
or
popa
sub
sbb
xor
mov
daa
push
jne
cmc
dec
xor
enter
outsb
jmp
push
jle
xor
sti
ss
and
movsl
pop
out
in
or
cmp
movsl
push
mov
and
and
xor
adc
adc
cmc
jbe
sbb
xor
jns
and
lret
ja
les
scas
push
dec
cld
pop
jmp
xor
popa
test
mov
adc
adc
leave
pop
xor
mov
push
xchg
push
mov
inc
lea
lcall
data16
xchg
sbb
xchg
cmp
pusha
or
mov
xor
xor
mov
push
xchg
and
push
dec
lahf
mov
imul
adc
popa
adc
add
call
mov
popf
mov
push
mov
add
sub
xor
call
lea
jge
enter
mov
jmp
sub
add
cmc
adc
xor
add
inc
xor
and
test
pop
add
push
inc
cltd
adc
sarb
loopne
daa
sbb
or
fbstp
test
xor
cmp
add
fwait
lahf
add
cmp
sbb
test
jge
cwtl
cld
dec
inc
dec
mov
adc
mov
bound
push
es
xor
int
popf
test
daa
in
stc
addr16
inc
fdivrl
aad
pop
mov
jmp
imul
push
pushf
or
pop
add
test
inc
xor
sbbl
xor
sti
adc
pop
jmp
mov
test
mov
nop
loopne
rclb
out
or
jbe
push
aaa
dec
jmp
push
push
sbb
xor
cmp
insl
dec
movsl
cmpsb
dec
xchg
inc
clc
das
icebp
mov
sub
sbb
inc
inc
pusha
mov
push
add
or
lret
loop
lahf
cwtl
mov
mov
bound
addr16
jp
and
mov
add
pusha
jae
clc
xchg
pop
xor
loopne
enter
xchg
lods
mov
lods
push
out
call
call
insb
loop
dec
aaa
add
dec
lahf
jne
add
push
mov
sbb
fdivs
frstor
fldt
push
adc
clc
imul
jle
mov
lret
push
sbb
imul
pushw
icebp
cs
movsl
mov
push
and
shr
mov
and
aas
or
cltd
and
pop
je
or
mov
arpl
inc
add
sbb
stos
mov
sar
push
sub
adc
inc
aaa
mov
inc
cmp
jmp
stos
ds
pop
adc
add
xor
inc
rcr
hlt
pusha
or
pusha
mov
mov
int
sarb
xor
rclb
ljmp
sub
xchg
pop
xor
jae
or
das
mov
je
add
test
aad
scas
xchg
push
test
movsb
adc
data16
inc
shll
and
popa
push
dec
mov
jb
mov
sbb
mov
and
xor
shr
sub
jns
sti
popf
push
rol
cwtl
data16
sarb
fadds
subl
sbb
jo
or
mov
mov
jmp
int3
push
sub
pop
sub
pop
mov
out
push
je
mov
push
lahf
and
std
pop
or
das
jge
pop
jge
movsb
adc
arpl
sbb
fcoms
xor
addb
vcvtss2si
and
inc
fs
pop
mov
sub
xchg
int3
sahf
ficompl
sub
pop
xlat
and
inc
mov
clc
pop
das
pop
or
inc
cmp
jne
out
jmp
imul
pop
call
push
or
or
and
adc
cmp
rcll
xchg
push
add
sub
nop
cmc
lds
ja
aam
gs
cmc
into
mov
push
or
xor
jb
sub
daa
inc
loop
data16
mov
mov
inc
cltd
in
dec
call
sub
sub
rorl
add
xor
lcall
jge
pop
add
push
orb
dec
cmp
je
pop
mov
sub
bound
jmp
cmp
je
jbe
mov
xchg
or
out
dec
mov
aaa
add
push
push
dec
outsb
xchg
pop
sub
and
and
and
push
and
or
in
pop
js
ja
pop
std
xor
push
jecxz
xor
dec
cltd
lods
inc
call
xor
movsb
cli
lods
push
dec
or
cmp
call
push
mov
loope
cmp
sbbb
mov
mov
mov
adcl
jne
out
cld
sbb
inc
lea
test
test
adcl
icebp
cmp
lods
daa
and
xchg
mov
pop
test
in
mov
mov
pop
push
sub
ljmp
sub
lods
jae
les
inc
cmpsb
inc
dec
jae
or
jge
sub
jo
pusha
test
inc
push
push
bound
xor
mov
pop
inc
rclb
mov
pop
sub
and
or
addr16
daa
mov
push
and
out
or
out
lcall
lcall
lock
xorl
fneni(8087
pop
outsb
add
push
push
aad
xchg
lret
or
pop
mov
ret
pop
pop
sub
push
mov
xchg
push
fadd
call
sar
jge
clc
imul
sti
add
lock
push
lds
test
popa
push
je
mov
or
daa
sti
int3
gs
cwtl
or
push
sub
ljmp
sbb
pop
xchg
adc
cmp
inc
dec
daa
inc
addr16
sbb
jne
and
jne
inc
push
mov
outsl
mov
data16
pop
mov
fldcw
hlt
das
lock
mov
inc
cmpl
pop
push
cmp
sahf
add
filds
popf
jmp
es
stos
inc
push
jmp
testb
in
add
push
iret
mov
push
xor
gs
or
lock
xlat
and
xchg
push
mov
pop
xchg
jl
pop
push
in
inc
cmp
adc
sub
push
out
add
xor
dec
das
push
add
shl
push
or
inc
adc
aad
inc
dec
push
js
inc
or
cmp
xor
out
sbb
out
ja
push
mov
mov
and
jl
arpl
stos
nop
dec
push
hlt
add
sub
push
sbb
jne
cmc
sub
cmp
push
add
xchg
pop
push
repz
cmp
cld
add
jg
andl
jns
incl
adc
push
iret
sub
pushf
or
jmp
adc
test
xchg
dec
fsubs
push
add
neg
sbb
inc
pusha
lods
add
push
lock
shlb
xor
push
pop
xchg
daa
pop
pop
inc
xchg
pop
mov
arpl
push
mov
stos
fisubs
arpl
pop
adc
sbb
push
and
cwtl
adc
popf
in
xchg
sub
adc
jmp
or
sbb
test
mov
mov
and
push
adc
dec
sbb
mov
leave
iret
mov
mov
push
jp
adc
mov
push
sbb
mov
mov
icebp
dec
and
pop
es
bound
adc
mov
push
stc
mov
test
adc
das
sbb
mov
pop
pop
lcall
lea
mov
adc
sbb
out
daa
pop
jno
add
jle
sti
xchg
cmpsl
gs
cmpsb
or
mov
push
test
daa
adc
stc
and
adc
dec
push
push
sub
movsl
pop
shrb
pop
rclb
mov
dec
pop
adc
mov
sbb
add
adc
sub
inc
push
xlat
or
mov
aad
adc
push
mov
adc
push
test
jae
clc
sub
sar
cmp
fs
sub
jecxz
fisttps
test
stos
pusha
ljmp
out
in
inc
arpl
xchg
push
daa
and
jmp
add
push
loopne
xchg
or
testb
pop
data16
sub
insb
pop
div
inc
pop
mov
aaa
cmpb
mov
adc
xor
test
es
rclb
push
cltd
inc
mov
mov
push
adc
cmp
jne
stos
xchg
roll
cmp
xchg
andb
xchg
dec
or
scas
lock
call
or
cmp
sub
es
dec
sti
mov
imul
jnp
dec
fldenv
xchg
out
ljmp
ss
test
cmp
xchg
cmpsl
inc
cltd
pop
outsl
scas
and
sub
mov
lret
fscale
sbb
hlt
call
mov
imul
jae
stos
mov
push
mov
test
arpl
push
mov
fdivl
int3
push
pop
das
dec
dec
push
in
fcoms
xchg
push
sahf
pop
sbb
popl
sub
sub
loop
push
sbb
in
and
adcb
push
lahf
xor
and
mov
inc
clc
or
dec
mov
cmp
lock
movb
mov
jge
add
and
ds
cltd
or
mov
negb
movsb
cmpsl
jecxz
xchg
daa
mov
dec
sub
xchg
clc
bound
push
dec
sub
adc
jmp
push
sbb
bound
push
pop
pushf
add
int3
jmp
xchg
ljmp
data16
fs
sub
popf
mov
pop
inc
fildll
scas
jecxz
xchg
addb
cmp
dec
and
fwait
xor
loopne
pop
mov
jmp
xchg
test
leave
adc
push
jnp
sub
xchg
daa
les
add
fdivs
cli
imul
push
les
mov
cmpb
dec
cmp
movsl
inc
mov
push
cli
jl
mov
lods
vshufps
mov
adc
mov
jmp
mov
int3
je
jmp
adc
or
sbb
je
jb
sub
shlb
xchg
xorb
or
pop
sub
and
cmp
adc
mov
aaa
je
fimuls
add
rorb
and
fs
dec
or
out
adc
or
push
imul
push
out
mov
loop
inc
and
mov
out
or
sbb
adc
or
andl
pop
fs
test
pop
xor
cmp
seto
mov
adc
jb
adc
mov
or
and
mov
mov
mov
sbb
pusha
push
adc
dec
and
insb
and
and
xor
jl
and
das
xchg
jecxz
dec
push
push
adc
outsl
sti
int3
data16
int
sub
add
sahf
add
icebp
adc
mov
sub
loope
adc
xchg
mov
in
mov
flds
mov
jb
dec
mov
test
subb
jo
in
adc
testb
add
test
and
and
push
inc
test
add
je
out
mov
jmp
mov
xchg
popf
xchg
or
cltd
into
cld
xor
cmp
push
sbb
adc
jno
popf
fwait
pop
sub
inc
lea
push
mov
add
mov
mov
lock
cwtl
cmp
daa
je
adc
cmp
dec
call
mov
int
out
dec
inc
pop
stos
inc
jnp
dec
inc
movsl
jo
dec
mov
dec
lods
divl
shrl
xor
or
cmp
cmp
jne,pn
aam
rolb
dec
insl
stos
lret
lock
push
dec
add
subl
cmp
xor
or
js
adc
jge
sbb
testb
sbb
call
loope
push
enter
test
fmuls
inc
sbb
fcomps
push
mov
enter
push
mov
sub
mov
and
mov
sub
pop
dec
and
cmp
enter
push
dec
mov
adc
lret
movsb
or
and
enter
mov
out
adc
adc
pop
xchg
mov
cmp
leave
mov
cs
sub
jg
sbb
mov
sbb
add
in
stc
dec
rorl
sbb
xchg
js
fstl
sbb
xor
xchg
push
inc
mov
or
mov
daa
push
adc
jle
arpl
adc
or
inc
scas
dec
push
ss
adc
arpl
je
sbb
pop
push
fnsave
movsl
int3
xor
mov
mov
cmpb
jne
call
test
aaa
jb
pop
push
sbb
incb
mov
scas
jle
in
jp
rcl
ja
das
xchg
lods
dec
cld
sub
pusha
add
movsb
outsb
sti
pop
sbb
mov
mov
xchg
mov
adc
aas
les
aas
mov
loopne
sub
push
jmp
jmp
xor
call
inc
push
push
hlt
es
jg
dec
xor
push
pop
dec
sbb
dec
or
jg
mov
lahf
insl
ret
and
cld
push
pop
ljmp
sub
mov
std
adc
sbb
mov
mov
mov
and
jns
test
testl
mov
xchg
and
fs
mov
or
inc
xchg
lahf
daa
shll
loopne
jecxz
cmp
mov
xchg
jb
sub
cld
movsb
cmp
dec
inc
int3
inc
cmp
mov
xor
ret
sahf
push
aas
fadds
dec
inc
dec
test
jg
call
adc
bound
jne
test
and
orl
lret
push
jne
mov
cmp
add
mov
loopne
inc
push
clc
andb
insb
jb
sub
mov
sahf
clc
aad
stos
or
xor
pop
pop
jmp
xchg
test
pop
in
imul
adc
insl
or
add
out
push
xchg
push
js
sub
es
mov
inc
add
test
mov
sbb
or
cmp
das
and
mov
push
and
sbb
sbb
cmp
xchg
cmp
dec
cmp
call
sub
push
rcrb
into
xor
cmp
mov
ror
xchg
inc
orb
imul
cmp
aas
pop
inc
add
sbb
pop
sub
mov
jge
shrl
xchg
lock
adc
adc
icebp
loop
xchg
movsl
mov
pop
push
adc
repz
mov
cmpsb
jecxz
cmpsb
fisubl
or
mov
push
push
mov
or
mov
in
pop
xor
inc
cmp
test
push
mov
pusha
mov
outsb
fistpl
xor
mov
or
daa
jp
dec
mov
lcall
ds
sub
inc
popf
cld
jne
adc
ret
hlt
daa
add
roll
pop
sarb
add
leave
or
sti
jecxz
mov
inc
test
adc
pop
movsb
jo
sub
test
mov
std
or
push
cmc
push
or
dec
xchg
clc
mov
mov
xchg
fdivrs
test
jge
lret
aam
or
mov
xor
mov
movsl
stos
cmc
adc
pop
in
fildl
cmp
cmp
push
inc
je
push
pop
push
mov
fmuls
sub
jg
data16
sub
push
jecxz
into
dec
enter
xchg
cld
outsb
xchg
xor
movsb
jl
push
mov
rcl
xchg
fs
and
scas
ds
outsl
jae
enter
jmp
xchg
je
add
les
and
cld
adc
pop
cmp
sahf
mov
fldl2t
dec
and
mov
cmpsl
xchg
les
xchg
xor
jo
inc
lret
scas
adc
test
fcomip
add
sbb
cli
mov
xor
push
xorl
sub
adc
cmp
add
push
cmp
pop
inc
inc
adc
ret
mov
add
or
insl
lods
and
pushl
jbe
nop
pop
fwait
inc
pop
mov
push
mov
mov
push
gs
xor
push
cmp
arpl
repnz
in
mov
mov
or
push
fnsave
sub
push
sti
add
sbb
jne
sbb
push
in
add
add
cmp
mov
test
push
shrb
and
lds
mov
push
inc
std
and
and
xor
push
pop
std
pop
test
mov
and
add
mov
adc
jb
stos
pop
mov
dec
adc
adc
pop
call
xchg
bound
sbb
push
jno
xchg
hlt
xchg
shlb
mov
cwtl
sbb
cmp
pop
scas
or
call
ja
mov
add
call
movsb
dec
imul
call
cld
ja
jl
pop
push
push
movsl
dec
test
imul
adc
xor
repnz
sti
sbb
cs
mov
adc
push
lock
test
les
push
mov
lods
push
xchg
push
add
xorb
jge
cwtl
adc
shll
jmp
in
nop
dec
add
cli
or
add
xorb
test
dec
in
push
ret
push
data16
daa
jb
cmp
nop
aas
sbb
or
mov
je
mov
jb
dec
xchg
dec
andb
mov
sub
cmp
xor
inc
leave
lea
rclb
or
add
push
sti
mov
cld
push
add
in
rcrb
in
adc
cld
pushl
push
movsl
adc
push
std
call
fcoml
adc
xor
push
or
scas
int
iret
mov
or
shrl
cmp
inc
movsb
and
or
pusha
mov
adc
mov
mov
ror
and
xor
ss
fs
aam
adc
rorb
xchg
inc
clc
add
dec
jecxz
xlat
cmp
in
hlt
loopne
mov
adc
loopne
ljmp
push
xchg
test
test
adc
pop
jg
mov
mov
ret
es
lock
jae
xor
js
and
dec
call
ret
mov
cli
add
pop
mov
aas
jb
aas
pushf
xor
jmp
mov
sbb
sahf
popa
mov
jg
lret
xchg
jno
cltd
dec
testb
ds
stos
mov
fs
mov
or
sub
and
clc
out
ss
dec
xchg
mov
or
inc
xchg
sub
nop
push
movsl
scas
lea
test
mov
push
mov
push
inc
std
add
sub
jb
repz
aaa
mov
xchg
fisubrl
sub
adc
sbb
lock
frstor
jmp
lods
faddp
sub
jbe
mov
and
xor
push
fcompl
adc
aas
cmp
je
cmp
mov
or
inc
inc
loop
nop
les
mov
cmp
lea
push
aam
xchg
pop
cmp
push
incl
cmpsb
loopne
xor
sub
adc
ret
mov
sbb
add
dec
ja
mov
outsl
lods
xchg
dec
xchg
push
lcall
cmp
inc
adc
push
push
lea
or
sbb
js
mov
les
push
sbb
add
jl
push
mov
inc
sub
ss
inc
mov
sub
and
or
rorb
adc
and
push
xor
iret
adc
test
jne
pop
pop
and
mov
lock
dec
aam
xor
push
hlt
adc
imul
in
jno
and
test
inc
or
fadds
jne
xchg
dec
loope
dec
bound
or
xchg
cmp
sbb
add
fcoms
cmp
or
xchg
or
fdivl
mov
imul
jbe
or
lock
push
loopne
mov
xchg
fsubrs
in
inc
shrb
and
orl
adc
hlt
jb
xchg
aam
imul
and
andb
sbb
xchg
clc
jb
and
and
mov
leave
shll
std
mov
or
or
or
mov
lret
jns
fcmovne
push
lock
or
xor
dec
pop
xchg
and
push
pop
adc
test
divb
loope
sub
push
adc
insb
xor
xor
inc
push
rorl
cmp
cwtl
pop
mov
cmc
mov
jae
nop
jo
pop
xlat
mov
push
clc
add
loopne
mov
mov
pop
push
push
lods
xor
mov
sub
enter
arpl
inc
mov
sub
sarb
push
hlt
and
jne
inc
pop
lock
sbb
or
shl
or
imul
mov
testb
fcomp
dec
dec
stc
jne
clc
fbld
icebp
adc
not
adc
mov
rcll
dec
push
pushf
pushf
sbb
jae
lds
push
lea
jg
mov
sub
pushf
adc
cmp
mov
dec
loop
xor
out
dec
jb
pop
test
std
das
leave
sbb
cmpsb
sub
push
sbb
arpl
scas
dec
cmpsb
enter
adc
bndldx
stos
out
or
pop
adc
arpl
xorb
dec
sub
call
dec
xor
xchg
and
xor
add
mov
add
lods
dec
pusha
inc
xor
push
dec
shll
sbb
sbb
or
stos
add
test
dec
adc
ljmp
push
xchg
mov
and
push
enter
fidivs
loop
out
mov
mov
inc
jo
jo
adc
ja
mov
mov
rclb
shll
push
add
daa
inc
or
insb
xor
aas
push
pop
push
mov
push
int
mov
or
add
xchg
xchg
mov
insb
lods
sub
and
adc
lods
rcll
xor
decb
mov
adc
jnp
or
and
or
and
sti
and
cmp
add
jg
dec
push
daa
test
sub
mov
mov
aaa
popw
loope
sbb
dec
xor
stos
in
xchg
jae
cs
xchg
data16
mov
pop
arpl
gs
aam
fadds
mov
mov
cmp
sub
out
fbld
adc
mov
lods
or
adc
mov
sub
cmp
jae
add
mov
or
jmp
adc
mov
sbb
xor
adcl
pop
push
movsb
jne
fidivs
insl
jb
enter
cmp
rcll
cmpsb
pop
xchg
mov
inc
add
lods
nop
jo
call
jb
cmp
test
mov
and
stos
xchg
out
ror
into
insb
outsb
popf
movsb
cmp
cwtl
or
cmpb
incb
outsl
in
sub
or
out
sbb
inc
or
push
sbb
push
mov
pusha
sahf
mov
xor
pop
or
jle
mov
xor
cmp
xor
cmp
insb
mov
stc
cli
adc
mov
je
xchg
cmpsl
mull
call
xchg
or
je
nop
clc
mov
add
mov
out
inc
adc
stc
add
jbe
call
stos
mov
jnp
push
inc
sbb
mov
dec
js
and
jg
mov
xor
inc
fisttpll
sub
fiaddl
dec
push
pop
scas
and
jae
add
mov
cmpsb
pop
cmp
dec
les
inc
test
pop
mov
jge
jb
mov
hlt
adc
jno
cld
mov
sahf
push
mov
rcr
fldl
and
ss
out
jge
rol
mov
fldt
and
inc
jbe
adc
insb
sbb
or
or
mov
or
scas
push
adc
ret
jmp
jg
fstpt
fdivl
and
in
insb
jnp
sbb
test
ret
mov
and
mov
xor
xchg
jne
insb
xchg
daa
or
mov
add
dec
adc
mov
enter
test
cwtl
pop
shrl
mov
adc
ja
ret
dec
push
fsubs
jg
cld
or
call
ljmp
les
daa
cmp
push
xor
fstps
in
in
xor
or
scas
jbe
dec
push
pushf
mov
push
les
in
and
mov
repz
mov
push
add
call
xor
mov
push
mov
mov
push
jae
pop
fsubrl
and
adc
outsl
daa
inc
add
pop
and
fsubs
andl
push
mov
movsl
mov
xchg
mov
bound
sub
cmpsl
and
popf
or
push
fwait
or
lods
das
jne
or
add
add
call
rorb
cmpb
mov
adc
mov
dec
daa
mov
xor
lock
pop
inc
dec
jge
jge
cmp
sar
adc
push
add
movsb
test
pop
adc
out
sbb
or
push
addl
inc
and
je
xchg
or
add
pop
fdivrs
sub
xchg
cmp
les
test
test
iret
call
addb
lock
inc
out
sub
adc
inc
sub
xchg
jnp
rcll
jmp
mov
jecxz
adc
and
sbb
dec
inc
dec
fcomp
dec
jne
bnd
enter
jb
arpl
adc
test
divb
sbb
add
call
adcl
enter
ror
fs
or
xchg
and
insb
and
test
xchg
sbb
mov
les
lea
loopne
jb
adc
jmp
sub
in
sub
mov
je
jbe
js
or
add
ret
roll
insb
add
mov
jno
cmpsb
adc
push
adc
or
push
data16
add
shr
leave
fcmovnbe
ljmp
hlt
div
cmp
fs
jl
or
push
add
jb
cmp
ja
adc
jbe
sub
sbb
and
adc
test
fcmovb
xor
cmpsl
add
adc
pop
or
sbb
adc
adc
fcoms
jmp
andl
adcl
test
adc
add
adc
pop
jae
cld
js
xchg
add
push
push
shrd
adc
ljmp
dec
call
xor
popa
push
push
push
xor
pop
and
call
movb
orl
sub
mov
sbb
sbb
xchg
sbb
xlat
sahf
and
enter
sbb
push
cmc
push
shr
dec
fisttpl
fs
sbb
inc
adc
adc
push
pop
push
pop
loop
jo
gs
dec
push
push
sbb
xchg
and
dec
enter
xor
cmp
xchg
and
sub
and
mov
mov
push
lea
js
xchg
adc
dec
xor
jp
lods
aad
mov
inc
cwtl
movsl
lea
push
and
and
xor
out
adc
out
mov
ror
cld
test
pop
pop
dec
ljmp
cmp
add
inc
fstpl
ror
or
out
xlat
dec
icebp
push
cwtl
cmp
xchg
inc
jmp
lret
int
sbb
jbe
subl
mov
daa
push
les
push
or
jl
arpl
data16
fsubrs
jne
or
add
add
sbb
dec
iret
scas
dec
mov
sub
push
and
dec
popf
popa
aas
call
in
imull
mov
add
test
sbb
xchg
sbb
andl
xchg
inc
and
and
cwtl
push
sbb
cmp
in
adc
fadd
or
fsub
add
mov
ss
testb
jb
sbb
andb
cmpsb
xchg
mov
lock
push
adcl
sbb
push
and
add
in
sbb
mov
dec
mov
push
inc
mov
adc
das
icebp
and
sbb
mov
adc
mov
mov
inc
push
inc
mov
adc
and
dec
or
nop
xor
adc
sbb
mov
dec
and
dec
push
mov
xchg
xchg
mov
ficoms
cli
es
data16
adc
enter
cwtl
and
jb
add
leave
pop
or
dec
lods
loope
enter
mov
andb
push
data16
jo
inc
push
inc
and
dec
xor
push
hlt
inc
pop
loopne
fcoms
shlb
dec
mov
inc
sahf
xchg
mov
je
push
pusha
inc
pop
dec
mov
and
dec
sub
or
mov
les
push
orb
sub
fisubs
clc
or
inc
sbb
fdivs
add
xchg
and
push
inc
adc
and
dec
or
xor
add
add
dec
or
or
mov
adc
dec
adc
int3
dec
add
adc
or
cmpl
pop
sbb
add
gs
push
les
data16
dec
adc
pop
jo
je
jmp
mov
and
adc
inc
xor
or
rclb
xor
test
push
call
lock
xor
sbb
loop
mov
cmpl
add
dec
rorb
mov
dec
sbb
rcll
push
xor
adc
and
adc
mov
mov
outsb
cmpsb
adc
shlb
adc
xchg
js
adc
or
inc
adc
fmuls
adc
rcrb
xor
andl
in
jns
xchg
sub
cltd
push
pop
rdpmc
cmp
in
push
push
adc
sahf
dec
fsubl
push
push
mov
jb
jo
adc
test
insb
outsb
cmp
jge
outsl
arpl
cmp
xchg
mov
rorl
mov
jp
imul
arpl
pop
imul
es
repnz
cmpsb
push
popa
adc
gs
jns
dec
mov
pop
jae
adc
jecxz
or
lea
nop
cmp
imul
outsb
ret
lea
xchg
add
outsb
xor
mov
insl
incl
mov
dec
bnd
imul
outsl
lock
push
pushf
imul
xor
push
jb
inc
cmpsb
sahf
sub
addr16
push
and
add
aad
pop
jno
add
inc
pop
inc
pop
push
ja
fs
and
dec
xor
sahf
add
insl
incl
rcl
jmp
adc
xor
adc
loope
push
jbe
fcompl
fwait
sbb
outsl
int
xchg
pushf
or
cmpsl
jbe
inc
ja
jae
adcb
dec
outsb
mov
cltd
push
bound
outsl
mov
sub
mov
inc
jb
xchg
js
into
pushf
add
push
inc
push
push
push
sub
pop
mov
or
xor
cmp
inc
jl
lcall
imul
mov
enter
xor
sub
into
sub
xor
push
mov
sub
push
jo
mov
push
dec
sbb
dec
inc
lds
add
shrl
shll
lahf
les
fs
scas
lret
push
push
adc
sub
pop
inc
jne
sbb
dec
xor
stos
stos
bound
inc
and
inc
shlb
xchg
out
push
or
sbb
bound
lods
gs
add
jne
insb
imul
push
cmp
inc
sub
or
shrl
and
xchg
imul
mov
jle
mov
jns
push
cmp
cwtl
rcll
sbb
fs
lods
cmovs
dec
aam
je
push
xchg
mov
add
add
int3
mov
push
inc
outsb
push
or
push
inc
imul
inc
push
dec
jmp
xor
sub
dec
scas
mov
sbb
pushf
ljmp
add
fists
shlb
insb
lcall
dec
jbe
enter
push
roll
imul
dec
or
fbld
xlat
and
xchg
jb
sar
or
xor
xchg
add
push
je
adc
sub
mov
test
popa
test
inc
test
out
push
jns
lret
adc
mov
lds
lcall
push
or
insb
jg
mov
adc
cltd
mov
cld
add
dec
jae
adc
sbb
iret
ss
fildl
sbb
pushf
lret
lods
jp
jb
adc
mov
orb
repz
sub
das
out
pop
in
call
add
add
ja
cwtd
es
pop
adc
adc
dec
inc
mov
adc
cmp
sbb
bound
inc
lea
insl
xchg
lea
in
int
and
sub
push
mov
xor
mov
and
push
and
pop
xchg
les
push
dec
std
dec
cli
mov
mov
fdivrs
cltd
and
push
jbe
xchg
jns
ss
je
addr16
jne
or
xchg
lcall
leave
adc
mov
mulb
add
dec
data16
jo
sub
mov
mov
push
out
je
leave
add
mov
and
adc
push
pop
jg
fnsave
jne
loop
adc
das
aas
xchg
sbb
fsts
jns
mov
xchg
repz
inc
and
stc
inc
adc
jmp
or
and
into
push
jae
mov
add
push
xor
popa
sub
and
push
xchg
push
outsl
push
jmp
test
test
imul
push
mov
dec
dec
push
pop
add
xchg
cmc
movsb
rorb
sub
ds
dec
adc
addr16
pop
xchg
rclb
imul
sbb
adc
insl
sub
xchg
cmp
xchg
xor
pop
pop
jnp
mov
shll
jne
and
inc
stos
pop
pop
pusha
sub
add
dec
fadds
push
push
push
test
add
cwtl
cmp
inc
xor
and
push
add
lds
mov
loop
incb
idiv
add
mov
loope
clc
testl
ret
stos
push
pop
fistps
sahf
cli
cmp
lock
std
in
cmpsl
sbb
in
xchg
mov
roll
ljmp
out
mov
xlat
and
push
movsl
in
cwtl
shll
xlat
inc
fnsetpm(287
push
inc
xor
add
xor
and
bound
je
jae
out
decw
cmpsl
ja
xlat
push
ds
and
pop
add
es
mov
jns
sbb
adc
sub
and
lock
dec
imul
sarl
test
insb
jo
cmpsb
dec
sbb
sub
inc
insl
fs
and
cmp
arpl
jae
push
mov
inc
popf
push
mov
inc
or
jb
popa
adc
jbe
mov
xor
cs
daa
inc
add
jae
int
push
arpl
mov
jno
js
fcoml
push
jle
fistpl
push
jo
outsb
movsb
mov
jbe
in
adc
push
push
movsb
pop
or
xor
push
adc
xor
inc
das
push
cwtl
cmp
adc
mov
loopne
bound
or
outsl
mov
ret
pop
mov
outsl
mov
call
push
test
insl
mov
inc
xor
add
inc
inc
sbb
mov
and
pop
adc
or
add
inc
sbb
or
or
int3
mov
jne
test
clc
mov
dec
sub
addr16
fs
jne
mov
mov
inc
push
and
push
mov
xchg
xor
xor
aaa
jns
and
jns
and
loope
bound
dec
fs
dec
sar
or
insb
mov
mov
ja
sub
xor
jp
lock
out
stc
popa
fmulp
push
cmp
popa
bound
sarl
rol
sub
push
in
arpl
loope
jns
shrb
pop
call
xor
sub
loop
sbb
int3
adc
or
xchg
push
or
inc
mov
inc
jecxz
sbb
or
adc
cmp
je
leave
jo
das
movsb
and
sub
jns
sbb
xor
xor
xor
and
pusha
cltd
pushf
data16
icebp
inc
shll
push
inc
xor
ja
cmp
cltd
jbe
or
mov
add
insb
jo
xchg
cmpb
jo
and
xor
xor
insl
arpl
adc
inc
movsb
sub
punpckldq
addl
mov
pshufw
cmp
jae
xor
push
sbb
mov
cmp
push
cmp
cmp
adc
inc
test
inc
mov
test
inc
push
in
sub
add
inc
inc
push
push
or
inc
dec
or
xor
and
inc
mov
mov
inc
pop
inc
cwtl
push
push
dec
sbb
pop
mov
ds
xor
push
filds
mov
pop
repz
mov
dec
ret
jbe
jnp
jbe
repnz
je
push
mov
in
or
push
push
call
dec
xorb
inc
dec
push
or
cmp
lods
into
adc
cmp
and
in
dec
pushf
inc
jne
stos
pushf
or
push
push
inc
pop
dec
and
gs
sbb
cmp
jae
inc
roll
mull
xchg
mov
mov
inc
dec
js
cmc
ret
inc
outsb
xchg
aas
sub
fs
adc
lods
ds
jo
shll
add
jo
sbb
cmpsb
and
adc
jp
outsl
sbb
sarb
lahf
insl
mov
push
jae
pop
jae
stos
xor
pop
dec
sub
into
xor
sbb
cmp
push
insl
jno
adc
daa
sbb
push
ljmp
lret
cwtl
mov
push
outsl
bound
imul
inc
shlb
adc
sti
popa
push
dec
inc
dec
adc
push
sub
adc
jae
pop
or
inc
mov
sbb
push
push
dec
gs
dec
push
insl
add
xor
std
popa
rep
jp
xor
int3
inc
lret
ja
pushf
int3
cmp
adc
insb
jb
push
push
int3
and
and
ja
imul
sbb
lret
mov
addr16
jl
imul
stos
adc
adc
loop
loopne
sbb
sahf
pushf
mov
mov
pusha
pop
sbb
inc
and
sbb
xor
sub
cmp
mov
sbb
mov
mov
add
cmp
xchg
push
mov
sub
jb
fwait
lret
sbb
movsb
nop
push
xchg
popa
push
cmp
shlb
sahf
sub
nop
stos
push
scas
sbb
mov
fimull
cwtl
cs
adc
cmp
fsubrl
mov
inc
je
adc
enter
pop
rcr
nop
adc
adc
dec
dec
adc
dec
xor
mov
adc
sub
fs
or
and
pop
and
in
sub
fdivs
rorb
and
dec
mov
cmp
cmpsb
or
inc
sub
enter
add
fldt
jae
add
lods
mov
in
repz
leave
clc
mov
test
jmp
xchg
popf
test
xor
mov
add
rcrl
mov
out
and
rcr
lods
movsb
cld
test
mov
imull
cltd
xchg
les
fstpl
cltd
test
hlt
xchg
jecxz
addr16
lock
xor
repz
in
test
fsubrs
les
add
pushf
sub
cltd
repnz
xlat
fistps
lock
mov
loopne
jmp
and
add
fsubr
mov
cmp
hlt
and
sub
lock
repz
mov
pushf
push
ret
fwait
aam
cwtl
add
jecxz
negb
out
adc
mov
cli
stos
mov
rclb
fld
adc
aad
xlat
add
mov
repnz
and
mov
mov
faddl
mov
ljmp
fwait
cmp
fbstp
inc
mov
stos
inc
cwtl
push
sarl
nop
inc
add
jecxz
sbb
test
fists
out
cmp
adc
fdivrs
outsb
pop
adc
sub
push
shll
je
pop
pop
dec
dec
jbe
jae
sbb
xchg
mov
dec
xor
aaa
push
pop
lret
das
jno
push
mulb
jne
loope
push
or
es
cmp
popa
addr16
bound
sbb
das
inc
cmp
or
xor
adc
or
push
sbb
fmuls
std
pop
cmp
mov
lods
dec
and
cmpsl
cmp
jb
xor
addl
mov
insl
bound
mov
int
dec
out
or
imul
sub
data16
test
arpl
push
aaa
outsb
add
push
and
lock
add
sti
mov
pushf
lret
xchg
push
push
scas
and
mov
dec
xlat
js
add
or
movsl
in
filds
sbb
icebp
stos
out
xchg
add
rol
shlb
clc
jl
xlat
lds
lcall
mov
and
and
fs
and
mov
repnz
sahf
fdivl
mov
xchg
hlt
mov
imull
int3
mov
lcall
jle
add
xchg
in
adc
stc
mov
insb
fadds
ror
cwtl
add
xchg
in
out
mov
into
mov
leave
mov
in
popa
jecxz
movl
lock
out
loope
test
mov
lcall
pushf
into
mov
ret
cld
fildl
mov
in
jmp
ret
lds
cmpb
aam
mov
fldl
shrb
int3
sbb
rcll
inc
xchg
mov
mov
cmc
lock
popf
loop
aas
xchg
addb
in
xlat
add
in
xchg
fsubr
sbb
frndint
sub
push
dec
fmulp
dec
pop
cmp
cmp
xchg
or
imul
dec
push
cmp
mov
stos
cmovae
bound
push
push
xchg
das
adc
jp
sub
insl
and
mov
or
imul
jbe
pop
cmp
mov
xor
xchg
popa
jns
mov
xchg
lahf
sub
jne
insb
xchg
and
mov
xchg
mov
adc
insb
adc
cmp
mov
push
cmp
dec
inc
push
inc
push
sbb
sahf
push
inc
dec
leave
or
dec
sbb
pop
jb
inc
aaa
es
jmp
pop
jo
jl
cli
xor
cmpsl
push
pop
push
adc
jle
and
xor
cmp
and
xor
push
aas
push
aas
or
cmpsl
insb
xchg
loop
xchg
cmp
and
imul
jno
pop
fmuls
push
jns
adc
inc
or
imul
lret
movsl
adc
sub
mov
ss
push
xchg
push
adc
int
mov
jmp
push
or
jbe
aas
push
or
lahf
dec
pop
dec
daa
mov
outsb
imul
adc
add
adc
inc
cmp
cs
outsl
repnz
and
jle
jne
mov
sbb
inc
lea
xchg
push
dec
jno
fstpl
pushf
sub
call
aad
shlb
jae
push
arpl
sub
mov
dec
push
sub
js
xor
or
nop
lret
adc
insb
cmp
inc
cwtl
sub
into
mov
mov
jns
dec
addr16
hlt
insl
and
call
xchg
xchg
add
pop
push
test
sub
jae
xchg
cld
dec
js
loopne
inc
into
dec
cs
fdivrl
lret
sarb
insb
and
lods
or
and
ret
xchg
jbe
andb
dec
inc
dec
push
lock
mov
sbbl
dec
add
mov
add
add
pop
add
jle
pop
mov
enter
fcoml
nop
dec
arpl
inc
push
scas
push
inc
cmp
push
mov
dec
mov
dec
fisubrl
ret
sbb
dec
pop
rcll
sbb
cmp
or
sbb
mov
arpl
jne
sbb
sbb
loopne
movsb
push
gs
mov
push
int3
int
mov
xor
int
sbb
jns
aam
dec
icebp
dec
mov
jno
daa
es
push
loope
xchg
rorb
fincstp
xchg
hlt
sub
rclb
dec
add
notw
xchg
shrb
insb
int
inc
lock
jp
or
xor
or
xor
pushw
dec
in
adc
push
xchg
push
dec
xor
dec
pushf
inc
mov
scas
pop
shlb
call
jecxz
jnp
out
adc
add
in
das
sub
mov
or
jge
ja
divl
or
repnz
mov
sub
mov
adc
out
stos
jnp
pop
cmp
addr16
stos
or
mov
das
inc
jl
adc
xor
imul
xor
push
adc
fs
in
mov
test
mov
add
rcr
push
inc
mov
lds
repz
movsl
jg
idiv
sbb
dec
fcoml
cmp
ret
lods
arpl
stos
adcb
jo
or
scas
sahf
push
mov
xchg
fs
inc
into
test
into
int
lahf
cmp
ret
cmp
mov
pop
iret
xor
adc
clc
push
insl
xchg
ret
daa
push
add
leave
test
bound
or
in
mov
push
shlb
xor
and
ljmp
mov
fmull
insl
xor
sub
rcrb
jno
cwtl
daa
stc
ret
inc
xor
inc
out
negl
rcrl
jne
iret
xchg
and
mov
cmp
insl
jp
mov
mov
clc
pop
sbb
xchg
shrl
add
mov
inc
lea
mov
js
or
inc
mov
mov
inc
adc
loop
int
push
and
test
pop
push
push
cmp
push
sbb
pop
out
rcrb
rcll
pop
ud2
imul
jg
mov
push
dec
jns
imul
daa
jbe
mov
jl
dec
jle
adc
xor
aad
prefetcht0
dec
pop
pop
rol
ss
or
sbb
xchg
nop
insb
notl
pop
int
xchg
jg
pop
adc
sti
sub
sar
push
mov
inc
xchg
shrl
sub
scas
arpl
dec
cld
insl
add
xchg
jg
lea
xchg
adc
into
jmp
inc
movsl
cmp
lods
hlt
pop
mov
stc
loope
hlt
xchg
leave
sub
ljmp
xchg
fidivs
fsubs
mov
push
push
js
shlb
je
inc
addr16
shrb
inc
adc
jno
mov
xchg
mov
add
cld
mov
mov
mov
sub
adc
adc
and
jne
popf
popf
and
inc
out
mov
out
fsubrl
int3
lock
scas
or
adc
loope
aaa
call
frstor
int
fldcw
outsb
cmp
sbb
xor
lods
lahf
les
dec
mov
notb
or
popf
ret
cmpsb
pusha
lret
popa
sbb
movsl
or
ja
insl
test
sub
jne
lds
pop
inc
xchg
loopne
xlat
stos
xchg
pusha
cmpsl
adc
rcr
inc
jg
sti
lcall
jmp
pop
test
sbb
xchg
hlt
mov
bound
test
sbb
sbb
adc
dec
add
mov
inc
cld
and
fldl2e
shll
fucomp
adc
or
imul
pop
push
in
push
fstpt
mov
mov
rolb
mov
sbb
inc
push
sub
or
mov
hlt
mov
out
adc
outsl
and
xlat
add
cmp
and
jge
mov
in
push
xor
inc
bound
mov
xor
xor
cmp
lret
mov
rol
ljmp
test
in
xor
gs
pop
js
in
or
adc
xchg
mov
out
and
push
jmp
push
sahf
in
ror
pushf
dec
repz
pop
inc
ret
stos
sbb
add
adc
leave
aas
lods
or
imul
pop
mov
cmpsb
push
rolb
push
jnp
pop
repz
or
adc
and
jp
dec
pop
xchg
xor
iret
jmp
sub
xor
push
mov
lcall
jge
sbb
lahf
mov
cmpl
fs
mov
fsubrl
xchg
insl
pop
mov
ljmp
popf
aad
or
sti
xor
cmp
xchg
cmp
dec
fdivrl
push
cmpsl
pop
stc
inc
push
jns
into
lahf
mov
and
out
add
hlt
mov
nop
imul
paddusw
dec
pop
xlat
iret
push
insb
cmc
stos
sbb
stos
xchg
pop
cwtl
stos
cvtps2pd
ljmp
repnz
push
mov
fstpl
call
mov
mov
dec
int
stos
dec
das
mov
mov
ja
sbb
push
push
inc
push
jle
xor
pusha
xchg
loopne
push
out
ret
mov
test
jge
cmp
pop
loopne
mov
cmp
sti
leave
jle
icebp
lahf
icebp
dec
xchg
sbb
sbb
clc
adc
gs
mov
xchg
add
mov
icebp
push
cmp
fwait
and
repnz
mov
int
dec
mov
not
add
cmp
dec
inc
fnstsw
cmpsl
adc
lods
jg
jns
push
fidivs
inc
sub
rorb
xor
xor
popf
push
sub
or
lock
jecxz
mov
clc
subb
cs
mov
movsl
leave
sbb
adc
mov
neg
aaa
arpl
sub
loope
cmp
xchg
and
and
mov
out
push
inc
dec
xchg
jp
jae
xchg
xorb
arpl
xchg
xchg
outsb
and
jae
lea
repz
mov
mov
push
mov
cli
fwait
or
jp
das
sar
push
jns
fs
dec
xchg
iret
andb
xorb
andb
push
out
push
scas
cmp
int3
cltd
popa
push
pop
fiaddl
inc
sub
loopne
jbe
lea
shlb
dec
lahf
dec
shlb
hlt
jo
dec
xchg
jg
int3
ret
stos
inc
mov
mov
xchg
add
adc
or
adc
or
repnz
dec
test
daa
jg
xchg
test
mov
loope
pusha
sub
fiaddl
int3
stos
lea
jb
jne
pop
bound
pop
lods
push
cmp
mov
mov
les
xor
xchg
jp
je
lcall
mov
popa
cwtl
stc
in
sub
je
mov
cltd
jbe
out
add
mov
mov
pop
and
jle
insb
test
test
or
aas
xchg
ret
jnp
fcoml
pop
je
lea
jl
or
xchg
scas
add
dec
jmp
scas
rolb
and
and
and
call
add
pop
setle
pop
rolb
add
and
test
sahf
lahf
sub
and
sub
xor
leave
and
jbe
jns
fbstp
test
push
fildl
push
xor
cmp
mov
lcall
dec
das
sbbl
cmp
fbstp
sarb
and
lcall
lcall
ret
ljmp
lods
push
lods
in
mov
sub
scas
sti
mov
dec
add
jmp
stos
out
scas
mov
ljmp
inc
shlb
jle
out
outsl
fs
out
push
sahf
inc
sbb
jmp
subl
in
test
sub
xor
shlb
push
cmpsb
insb
incl
ljmp
push
icebp
push
jecxz
sub
cmp
mov
cmova
cmpsl
sub
inc
ljmp
cmpl
or
sbb
lods
or
mov
std
xchg
sbb
push
add
icebp
push
add
pop
pop
jl
ret
lahf
leave
mov
popa
mov
fwait
bound
lcall
cmc
mov
mov
int
pusha
and
scas
push
imul
mov
rcl
add
add
mov
xor
testb
push
in
mov
add
inc
xchg
ss
lds
and
push
mov
lock
fldt
mov
imul
icebp
imul
or
or
or
ret
imul
jno
es
cmpsb
lock
inc
lcall
sbb
push
mov
lahf
int3
lcall
jg
xchg
shrb
mov
cli
std
cmp
cld
push
mov
jecxz
ljmp
xor
insl
push
cwtl
inc
cmp
lods
adc
inc
sbb
mov
lock
mov
xor
cwtl
mov
inc
int
add
ljmp
iret
ret
mov
and
push
lcall
jg
xor
insb
mov
inc
lock
mov
xchg
lahf
sub
stos
mov
sbb
divb
lds
mov
fadds
popa
mov
jecxz
xchg
lods
cmp
sbb
aaa
jns
xlat
into
ds
jmp
bound
or
adc
pop
mov
rcll
aam
int
fucomi
xchg
aaa
fabs
hlt
insb
ss
rorb
mov
add
pop
sbb
push
daa
or
add
mov
inc
cmpl
mov
inc
cmp
add
add
dec
xor
xchg
andl
and
into
xor
pop
test
orb
stc
loopne
cld
lret
inc
mov
jmp
loope
xor
fwait
sbb
scas
adc
or
test
lahf
sub
jns
leave
int
mov
push
dec
pop
inc
adc
adc
test
daa
aad
push
push
mov
push
inc
pop
inc
or
pop
lea
fsubl
iret
addl
sbb
jmp
cmp
pop
dec
ret
aaa
ja
inc
call
ret
mov
stc
out
in
jnp
inc
ret
sbb
xor
xlat
sbb
iret
mov
push
jmp
arpl
repz
das
dec
in
aam
sub
shl
mov
fnstenv
pop
dec
sub
bound
pop
gs
loope
bound
in
xchg
push
rorb
bound
mov
or
xor
add
sbb
sbb
ret
cmc
sub
call
add
ja
xchg
outsb
xor
test
aaa
jecxz
adc
dec
imul
loopne
shl
sbb
aam
mov
add
sub
test
xlat
xor
dec
lahf
repz
jns
xchg
sbb
int3
pop
xchg
call
lds
add
jecxz
aas
pop
jne
mov
sub
fwait
aad
lret
loopne
stc
leave
xchg
or
mov
ss
inc
push
fcmovnbe
add
int3
negl
or
js
mov
aas
and
jno
gs
dec
lods
in
add
cltd
xor
jmp
push
insb
jbe
cmp
xchg
sbb
adc
hlt
in
xlat
loopne
mov
jbe
in
outsl
imul
or
loop
dec
cmp
jle
sub
cmp
mull
push
pextrw
pop
ds
xor
mov
repnz
xor
xchg
push
and
add
ret
mov
or
xchg
loop
push
mov
rcrl
sub
dec
sbb
jmp
push
and
pop
mov
loopne
sub
pop
cmp
xor
lds
xchg
bound
cli
and
mov
jne
jmp
pusha
sub
add
or
inc
bound
cwtl
mov
sub
mov
mov
mov
rcll
or
leave
test
mov
mov
dec
mov
cmp
ljmp
mov
test
mov
push
fwait
icebp
dec
mov
sub
push
adcl
js
jle
sub
aad
sub
jl
cmpsl
cmpsb
push
xchg
insb
dec
or
sub
enter
jecxz
test
stc
pushf
add
sub
pop
and
sbb
loopne
push
aas
fwait
jl
xchg
cltd
out
cwtl
sbb
and
cmc
insb
scas
shl
js
push
or
aam
mov
xchg
inc
shll
jo
sahf
xchg
inc
jmp
adc
ficomps
fwait
xchg
xchg
je
loop
and
test
je
sub
jbe
pop
pop
add
xchg
sub
subb
push
and
inc
out
ds
pop
xchg
adc
jle
cmp
outsl
xor
pusha
push
xchg
push
insl
xchg
xor
cltd
mov
pop
rclb
mov
and
mov
pop
dec
adc
fcoms
mov
mov
aad
test
stc
pop
add
pop
out
loop
adc
sub
stos
mov
aam
das
daa
push
inc
scas
push
dec
lahf
mov
pop
jl
repnz
lea
iret
add
stos
push
sbb
insb
mov
sub
pushf
testl
add
mov
movsb
inc
out
mov
ret
ret
or
cmp
imul
xchg
mov
adc
sub
in
ds
pop
lock
mov
repz
fistl
pop
xchg
repnz
cltd
pusha
jp
xchg
hlt
repz
clc
mov
ljmp
sub
mov
sahf
and
jns
add
and
mov
cmp
jns
or
std
mov
xor
cld
mov
adc
xchg
adc
stos
test
jb
dec
ret
pop
ljmp
lods
sbb
les
xor
into
mov
inc
outsl
movsl
jp
add
std
mov
popa
adc
subb
pop
xchg
leave
mov
mov
in
mov
mov
fldl
push
std
outsl
dec
sub
sahf
mov
sahf
sbb
mov
outsb
stos
pusha
inc
ja
and
leave
add
or
pusha
jmp
push
lahf
das
cmp
outsb
push
movl
imul
dec
fst
pop
or
pop
or
insb
shrb
mov
arpl
mov
add
xchg
out
sub
jmp
inc
repz
dec
popa
mov
add
and
dec
cmp
fisttpll
adc
lahf
std
dec
inc
jno
frstor
pop
in
xor
cmp
add
inc
cs
imull
imul
ja
into
jnp
out
cmpsl
and
loop
shrb
orl
push
inc
pop
xchg
dec
inc
pop
ljmp
push
cmp
orb
add
cmc
xchg
inc
movsl
std
int
addr16
aaa
adc
xor
mov
icebp
xor
fistpll
imul
call
sti
repnz
inc
ret
or
sti
cmp
shll
add
dec
cs
mov
popf
sbb
mov
push
sti
and
ret
pop
mov
jb
jbe
ds
and
mov
xor
xchg
inc
or
sbb
xlat
js
and
add
pop
inc
popa
push
in
stc
xchg
push
lock
js
mov
mov
test
pop
adc
cld
inc
push
sarb
sbb
ficompl
roll
lods
stos
pop
xchg
test
dec
aam
adcl
sub
mov
je
fsts
dec
repz
fptan
mov
lret
push
pop
xchg
or
outsl
cmp
xorl
jb
arpl
enter
ds
js
sub
cs
push
pop
dec
test
adc
fsubrs
dec
mov
xor
jbe
push
fmuls
mov
les
jb
add
iret
dec
aas
xchg
out
es
cmc
fdivs
aad
scas
jp
inc
and
daa
shlb
mov
add
test
in
push
cmp
imul
loop
sbb
int
push
add
and
adc
mov
xor
imulb
stos
pop
dec
add
adc
cltd
bound
data16
test
into
inc
icebp
ret
fistl
mov
test
out
push
mov
adc
or
lea
dec
cli
aad
cmp
jle
rol
pop
push
ficoml
insl
inc
pop
adc
insl
and
sub
sbb
pop
dec
outsl
adc
pushf
inc
jnp
or
add
loop
lods
pushf
inc
push
xchg
pushf
jae
fwait
inc
xor
mov
xorl
leave
fstp
and
aam
lcall
mov
movsb
xor
sub
arpl
jmp
outsl
imul
dec
adc
dec
and
and
xor
sbb
adc
jnp
mov
pop
jmp
das
in
push
push
mov
mov
jb
push
aad
or
cmp
inc
aaa
mov
inc
sbb
movsl
xor
enter
fcoms
lea
lock
stos
movsb
loope
adc
sub
lock
or
xor
mov
gs
push
inc
adc
test
push
xor
pop
shr
jo
inc
push
mov
mov
ja
cmp
dec
pop
out
dec
pop
mov
push
repz
addr16
xchg
adc
push
in
cwtl
stc
lock
mov
mov
jnp
adc
sti
fidivrs
icebp
or
jo
jle
and
daa
stc
cld
cmp
pop
test
bound
int
loopw
test
xchg
jge
xor
out
add
popf
int
push
mov
ds
rcl
mov
mov
or
xchg
mov
je
pushf
loope
sbb
push
cmp
dec
add
pop
out
cmp
rol
insb
xchg
sub
and
cmp
pop
daa
and
lea
xchg
mov
cmp
loope
inc
xor
ja
sahf
cmp
xor
and
dec
popf
inc
outsb
mov
movsl
and
mov
or
xchg
das
pop
adc
dec
push
call
ss
mov
xlat
jne
bound
sub
xchg
sub
test
out
push
add
adcl
and
cwtl
lds
in
cmp
cmp
or
push
imul
pop
sub
inc
dec
jns
pop
mov
inc
push
jg
or
push
add
nop
mov
sub
or
mov
jmp
xadd
inc
add
sbb
leave
xchg
xor
mov
dec
daa
nop
lcall
or
xchg
fcomip
or
outsl
mulb
mov
mov
lcall
lods
jne
push
and
pusha
lods
or
cmp
stos
mov
xchg
cmc
push
xchg
push
xlat
push
nop
xchg
jle
and
jo
leave
xchg
test
pop
xchg
push
cmp
xchg
mov
mov
arpl
push
mov
mov
jmp
mov
mov
cli
stos
cwtl
dec
rcr
fldl
arpl
dec
fcom
pusha
mov
adcb
dec
xchg
xor
sbb
movl
sahf
dec
scas
andb
cs
sbb
js
push
and
popa
iret
xchg
nop
pushf
iret
push
repz
and
mov
push
xchg
in
push
inc
ss
bnd
xchg
or
aam
xor
invd
lret
pop
in
jg
negb
mov
movsb
test
testb
enter
hlt
mov
dec
mov
inc
arpl
jecxz
mov
outsb
jnp
xchg
push
shll
cmp
imul
xor
into
cmp
and
dec
das
push
xchg
push
stos
adc
dec
sbb
cmp
and
call
out
push
scas
mov
outsb
movsb
iret
dec
pushf
cmp
sti
out
xlat
and
jne
sbbb
mov
dec
sbb
pop
scas
inc
push
mov
sbb
in
out
in
addr16
ja
sub
inc
and
dec
aas
aad
popf
loopne
push
mov
fwait
mov
push
mov
dec
repz
pop
fwait
jae
cs
ret
push
rcrb
clc
addr16
sbbb
sub
pop
pop
add
dec
sbb
xor
inc
add
jae
filds
jb,pt
pop
mov
stc
mov
test
scas
or
fsts
cmpsb
test
mov
insl
inc
lods
adc
vmwrite
and
mov
cmpsb
xchg
repz
test
shr
sub
sub
ficomps
js
pushl
sbb
sti
add
out
cli
mov
int3
jbe
mov
xchg
in
fnstcw
and
sub
xor
fdivrs
call
aad
jmp
or
mov
call
pop
jno
pop
icebp
jge
lret
fmuls
loopne
mov
xor
mov
inc
mov
movsb
fcoml
jns
jmp
das
inc
das
or
inc
aas
insb
jmp
cld
aad
or
hlt
lods
xor
and
jmp
xchg
fwait
inc
leave
jo
fwait
jecxz
out
pop
lret
adcw
shrl
sub
xchg
repz
out
xchg
xor
sbbb
insb
mov
call
loope
hlt
and
lcall
sbb
int3
push
dec
add
rcrb
lds
aam
je
inc
cs
cmp
frstor
inc
sti
mov
in
es
ret
imul
sbb
or
mov
adc
andb
xor
or
popa
or
sub
rorl
std
jbe
divb
sbb
mov
and
cmp
test
cli
clc
mov
out
rorl
stos
ret
xchg
lcall
imul
test
loope
push
addl
dec
aad
mov
inc
mov
push
gs
lock
lock
add
fstpl
stc
scas
hlt
inc
fcmovb
scas
xchg
jo
lcall
aam
pop
sub
dec
xchg
add
daa
cmp
sar
or
iret
mov
cwtl
loopne
push
push
sbb
test
push
mov
jnp
je
icebp
push
mov
mov
aaa
sub
popf
aad
cmp
mov
fs
imul
mov
push
ljmp
dec
stc
iret
sub
popf
dec
sti
in
sub
adc
or
shl
jo
aam
sbb
pop
pop
cltd
and
add
scas
or
mov
cmpsl
pop
inc
jmp
lods
jne
push
out
outsl
mov
ds
sub
lods
sub
sahf
push
cld
xor
jo
cli
pop
arpl
je
sbb
movsb
inc
ret
loop
and
add
fxtract
scas
and
mov
daa
scas
and
mov
add
add
jne
cmp
test
xor
cmp
push
xor
bound
mov
cmp
push
sub
xorl
fsubrs
les
rcll
pop
adc
jnp,pt
pop
cmpl
in
jle
mov
pop
mov
mov
cmp
insb
mov
sbb
mul
faddl
jmp
movsl
add
mov
sbb
out
add
fimuls
push
mov
jl
jmp
stos
mov
mov
adc
xor
pusha
roll
jmp
mov
push
pop
stos
imul
pushf
cld
int
sbb
pop
cli
push
loope
ljmp
pcmpgtd
push
jnp
adc
lods
pop
sub
mov
adc
test
icebp
pop
jp
popa
cmp
and
loopne
or
mov
orb
pop
push
jnp
sahf
fldcw
sub
sti
js
pop
jp
and
je
lock
outsl
mov
sub
sbb
push
ja
pusha
icebp
gs
jno
cmpsl
push
les
cmp
andl
mov
outsl
lcall
adc
int
sti
jecxz
into
sub
test
test
hlt
popa
int
mov
push
inc
and
adc
shlb
sub
lret
jl
mov
das
fcomip
push
sbb
or
mov
ja
in
ljmp
sbb
or
aas
push
sti
sti
push
or
dec
pop
jb
cmpsb
cmpsb
mov
adc
mov
fcomps
jge
cmp
mov
lcall
mov
mov
or
inc
insb
jbe
int3
subb
sbb
outsb
mov
add
jecxz
jle
dec
push
popf
ja
movsl
add
rorl
and
jno
cmp
ret
mov
pop
push
pop
in
lret
mov
in
aam
clc
mov
mov
stos
mov
xor
mov
cmpsl
sub
or
repnz
sbb
cld
dec
and
dec
mov
imul
mov
and
xchg
jmp
sbb
add
sahf
out
push
pop
adc
cmp
testb
aam
push
dec
adc
sti
fbstp
pop
gs
test
orl
adc
enter
les
fstps
sbb
jno
mov
gs
dec
mov
mov
clc
ret
das
and
mov
and
sub
outsl
sbb
fsubrs
inc
cvtdq2ps
cmp
out
dec
test
cld
adc
xor
sbb
lcall
ret
inc
scas
mov
adc
jo
mov
and
cld
push
inc
or
leave
pop
insl
push
cmpsl
mov
fisttpl
jecxz
mov
lods
pusha
insb
pop
mov
or
je
mov
cmp
scas
jmp
rclb
dec
cmp
sub
push
jo
inc
pop
add
cmp
mov
sbb
fwait
test
mov
in
sbb
popf
sbb
add
jne
jnp
mov
xor
mov
rolb
ja
sbb
xchg
in
arpl
dec
sub
xchg
int
fcomps
add
sub
and
shll
adc
mov
xchg
adc
mov
add
jl
out
pop
or
and
lds
out
add
stos
inc
daa
mov
popf
sub
xlat
fldcw
jecxz
cmp
ljmp
stos
lret
testl
inc
push
cmp
out
inc
sbb
push
repnz
dec
and
iret
dec
or
jp
sub
dec
push
jmp
outsb
jle
scas
sbb
jo
ds
popa
xor
mov
cmp
in
mov
scas
push
mov
hlt
stos
and
xchg
ss
xchg
jne
imul
xor
push
dec
pop
sbb
jecxz
mov
push
mov
mov
in
js
jns
lock
mov
pop
pop
or
cmp
js
add
stos
mov
cmp
lock
xchg
and
adc
scas
push
fdivrs
test
ja
imul
loope
mov
or
ds
inc
int3
lock
jecxz
or
fxtract
mov
jbe
mov
push
sub
or
and
lret
adc
stos
add
ja
push
mov
icebp
mov
pop
mov
mov
testl
jns
push
add
dec
cmp
mov
jp
les
push
sub
cmp
mov
fistpl
cmp
outsb
sbb
and
sub
cli
loopne
js
shll
pop
imul
dec
sahf
dec
dec
es
xchg
fisubl
mov
mov
rorb
jg
test
pop
hlt
sahf
leave
stos
ds
out
fs
mov
mov
xorl
in
cltd
adc
pop
jne
push
cs
xchg
cmp
sub
push
cmp
stc
les
or
cli
adc
nop
adc
outsb
roll
iret
outsl
xor
cld
adc
add
pop
mov
cmpsb
lret
pop
dec
inc
sub
xchg
lea
mov
outsb
lods
testl
xchg
bnd
mov
cld
test
aaa
adc
out
add
mov
jo
pop
push
inc
cmp
inc
xorl
push
fstpl
jecxz
pop
addr16
mov
mov
or
dec
fimuls
jo
push
pushl
xor
jmp
fwait
add
shll
jo
pop
lds
cmpsl
jae
jmp
scas
sbb
pop
xchg
cs
.byte
sbb
mov
jne
daa
cmp
lods
test
loope,pt
std
insb
jb
aaa
pop
adc
mov
lods
mov
ret
adcl
mov
in
add
insb
inc
mov
add
insb
sub
aam
in
out
ja
lret
jmp
fbstp
fwait
and
int3
insb
mov
jmp
test
mov
xchg
lods
call
jle
in
mov
dec
dec
or
add
scas
sub
sbb
mov
test
cmp
cmp
sbb
fbld
or
push
pusha
jle
jns
aam
testl
leave
outsb
mov
dec
jo
adc
and
xor
xchg
popa
aaa
dec
sbb
scas
mov
cmp
int3
inc
xorl
mov
stos
mov
das
pop
pop
pop
sti
inc
out
mov
xchg
push
hlt
mov
ja
xchg
cs
sbb
inc
leave
notl
jb
adc
mov
mov
xchg
sti
daa
pusha
out
lcall
jle
cmc
insl
repz
and
pop
cld
shrb
dec
sbbb
inc
cld
mov
cli
rcl
push
sbb
shlb
xor
inc
loopne
jp
and
cmp
imul
or
outsb
mov
pop
mov
pop
loope
es
and
xchg
cs
ljmp
aas
sub
cld
inc
cmp
cmp
andb
push
sbb
sar
shrb
ss
sti
pop
mov
in
xor
or
mov
cltd
aas
mov
xlat
inc
les
scas
aas
ret
insb
mov
int
and
mov
inc
or
adc
adc
inc
cmp
pop
shlb
pop
.byte
lods
