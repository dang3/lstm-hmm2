pop
rolb
jo
push
add
push
add
push
add
add
add
rolb
push
rolb
add
push
add
rolb
or
add
test
rolb
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
push
xor
xor
fs
insb
add
es
mov
add
mov
mov
add
loop
push
push
loopne
dec
mov
pop
insl
fisubrs
rcrb
and
bnd
jns
sarl
sub
cmp
push
and
test
addr16
repz
or
jge
cs
cmp
aaa
add
loop
mov
push
aam
pop
dec
push
loope
pop
sub
pop
xlat
mov
movsl
je
cmp
out
pop
fwait
cmp
nop
xor
test
lods
fldcw
fimull
push
and
push
xchg
inc
cli
mov
sub
ljmp
cmpsl
das
mov
mov
fs
outsb
push
jae
inc
inc
jb
pushf
js
insl
stc
xchg
mov
enter
and
sbb
cld
mov
lret
insb
data16
push
and
bnd
adc
xchg
cmovbe
jnp
dec
mov
loope
cmp
mov
out
push
mov
jl
jg
aam
rolb
addb
add
cld
sbb
add
add
movsb
push
push
lds
leave
sub
inc
mov
sti
stos
xchg
mov
sub
into
cmp
in
and
ret
xchg
ja
adc
ret
pushf
push
sbb
repz
pop
xor
adc
das
mov
pusha
sbb
mov
xchg
jl
and
fcmovnu
sub
test
adc
fidivs
enter
xor
scas
cld
cltd
loope
jb
jnp
iret
sbb
sub
xor
ljmp
inc
sarb
jae
ret
mov
int3
or
jb
loopne
ret
xor
pop
mov
cs
outsb
ret
mov
inc
sahf
nop
fiadds
and
in
or
ja
fisttpl
andb
hlt
jg
test
add
fwait
push
ljmp
sbb
out
sbb
pop
arpl
cmpsb
in
loop
mov
hlt
push
out
shll
iret
cmp
adc
mov
scas
rcl
dec
in
cwtl
mov
hlt
cmp
mov
negb
lods
mov
and
pop
jo
xchg
clc
arpl
sbb
adc
mov
jl
lcall
jne
dec
sub
shl
cltd
ja
adc
and
xchg
out
xor
stos
mov
aaa
popa
push
jno
inc
testb
mov
mov
test
pop
imul
ret
addr16
test
testl
mov
fnsave
dec
inc
outsl
sbb
push
adc
mov
xchg
cmc
mov
mov
add
or
lds
daa
mov
call
or
test
mov
popl
mov
push
mov
rep
mov
push
cmp
pop
and
rcrl
inc
pusha
add
js,pn
xor
add
cmova
jmp
lret
fldenv
jns
aam
fucomip
mov
mov
mov
cmc
cs
pop
jns
add
mov
mov
jl
movsb
mov
in
inc
in
in
dec
sbb
fisttps
cmp
jb
pop
popa
pop
sbb
fldl
jo
aaa
int
aad
xor
and
sti
pop
daa
mov
ret
dec
xor
inc
pushf
test
mov
sbb
xor
cmp
mov
xchg
insb
mov
ja
jl
fcmovnu
cs
mov
mov
dec
fmuls
andb
pop
xchg
aas
imul
inc
xor
adcl
jo
or
cmp
fs
sub
pop
push
dec
lods
shlb
idivb
gs
insl
sbb
aad
mov
push
out
pop
push
mov
xchg
lea
test
stos
inc
dec
sbb
dec
test
mov
imul
xchg
push
pop
jnp
jo
mov
imul
mov
push
push
and
in
ljmp
rcll
and
gs
mov
arpl
in
ret
push
xlat
add
ret
push
adc
popf
dec
mov
inc
inc
add
mov
out
mov
sub
sub
lods
dec
sbb
roll
xchg
push
jge
mov
insb
pushf
mov
scas
cli
je
lods
xchg
iret
inc
aas
lcall
lret
mov
ret
out
hlt
ret
out
pop
cld
cmp
mov
or
adc
ds
outsl
or
js
ret
dec
or
gs
xchg
stos
insb
and
or
in
push
inc
lods
inc
add
jns
jle
push
inc
or
push
fsubs
adc
lret
sti
mov
mov
pop
pop
mov
mov
inc
loope
ret
mov
and
scas
fistps
repz
push
cmp
or
jnp
loopne
inc
inc
lret
test
sub
pop
rolb
xchg
loop
out
bound
scas
sarl
xor
mov
push
xchg
inc
sbb
xlat
jbe
jnp
ret
cltd
ret
data16
mov
js
xlat
aad
test
cmpsl
and
imul
pop
shl
add
inc
push
cmp
orl
mov
rolb
rcr
mov
push
insl
ret
mov
mov
test
adc
adc
movl
mov
popf
sub
sub
aaa
rorl
add
and
mov
sub
fcoms
movsl
adcb
daa
insb
addr16
les
dec
pcmpeqb
or
das
rcrb
pop
push
jecxz
pop
jmp
lods
cmp
movsl
std
xor
add
mov
fwait
cmp
jnp
and
lods
call
mov
lds
mov
sub
cmpsl
dec
mov
mov
cwtl
scas
pop
push
insb
inc
adc
inc
iret
xchg
aam
push
hlt
out
imull
lea
pop
inc
or
ficoml
xchg
loope
sti
dec
aam
test
in
jbe
and
cmp
push
xchg
mov
pop
adc
cltd
cltd
data16
push
mov
jae
pusha
movsl
enter
xchg
jle
sub
dec
mov
inc
loope
xchg
fcoml
xchg
in
inc
popf
push
fmuls
shll
mov
push
or
lea
cmp
dec
xchg
xchg
sub
aaa
hlt
mov
int3
mov
js
cmp
popf
inc
sbb
cmp
mov
movsl
repz
cmp
xchg
mov
and
inc
popa
xchg
arpl
ja
ss
pop
xchg
add
xchg
and
push
loope
ja
pop
lret
jp
je
jae
lret
fs
sbb
cmc
mov
mov
pop
add
xor
fidivl
mov
test
lcall
cmp
icebp
push
enter
incl
aaa
repz
mov
adc
mov
sbb
dec
mov
mov
cmp
dec
test
in
mov
fimull
in
sub
mov
sbb
divl
cmpl
jmp
inc
inc
jmp
insb
ficoms
mov
ljmp
insl
je
dec
cmpsb
lock
cmp
add
xchg
adc
sti
mov
dec
imul
pop
xor
fwait
les
add
aaa
xchg
fs
dec
fistpl
push
dec
jo
xorl
in
cli
pop
sub
hlt
inc
leave
sbb
js
cmpsb
aad
sbb
xor
jle
repz
or
add
mov
call
cmc
ret
dec
mov
cltd
jle
cmp
sbb
mov
pop
push
ja
mov
and
ljmp
loopne
inc
mov
popf
jmp
jge
xor
add
lea
jle
jl
mov
cmp
sbb
sub
int3
mov
mov
cmp
rol
sahf
mov
sbb
aas
popf
outsl
sbb
sub
in
lock
pop
and
inc
in
pop
sub
nop
cmp
mov
jmp
and
xchg
push
xchg
mov
push
ljmp
loope
xor
loope
in
test
sbb
mov
lret
insb
add
loopne
mov
pop
outsb
sub
in
push
pushf
ss
rcl
push
dec
dec
cwtl
inc
fwait
lds
out
mov
ja
sbb
loopne
int3
or
clc
out
jne
in
sub
cmpsb
cmp
movsb
mov
dec
pop
or
or
fwait
dec
int
imul
push
pop
in
fidivrl
out
pop
arpl
adc
mov
mov
rorl
adc
xchg
jmp
std
push
dec
clc
jg
int
and
out
inc
add
mov
sub
lret
ja
flds
xchg
adc
ja
inc
jnp
xchg
clc
test
and
movsb
or
and
mov
sti
dec
jecxz
push
in
push
pop
dec
lods
cld
fidivrl
bound
fs
ss
gs
cwtl
push
lock
pop
into
mov
addr16
sbb
sti
fcmovb
les
mov
stos
or
enter
xchg
adc
cmp
push
mov
pop
flds
xchg
xchg
cwtl
add
decl
lea
jecxz
sbb
stc
dec
mov
inc
adc
aam
sub
or
sub
mov
jae
xor
pop
push
clc
jns
rclb
fisubl
dec
xchg
in
imul
andl
ds
mov
test
xchg
les
lret
inc
jmp
inc
jmp
mov
lds
dec
mov
adc
stos
lea
lcall
jecxz
pop
fwait
push
fsts
cmpb
loope
and
clc
sbb
xchg
cld
stos
lods
adc
adc
pop
stos
mov
leave
repnz
mov
mull
scas
or
subl
pop
cmp
ljmp
lods
pushf
stc
or
mov
lods
ror
ja
loop
push
sub
cmpsl
lock
mov
scas
lods
outsl
mov
rclb
mov
sub
xor
mov
push
pop
mov
push
jnp
jp
pushf
fld
fldt
pop
imul
or
mov
lahf
test
xchg
push
xor
dec
add
mov
testb
icebp
or
mov
and
jb
inc
scas
ret
std
enter
cmpl
mov
sub
ret
xchg
xor
mov
add
scas
pop
xchg
mov
sub
sub
pop
jecxz
movsb
aas
inc
cmp
xor
mov
movsb
pop
sbb
andl
jno
mov
mov
fidivrs
lods
int
and
and
add
cld
mov
je
xor
xchg
sub
lret
sbb
sarl
pop
xchg
jb
loop
stos
xor
cmpsb
mov
arpl
lods
aaa
sub
or
shll
jbe
or
insl
aaa
dec
jns
push
in
ja
adc
jo
xchg
cmpsb
pop
push
inc
sahf
outsb
push
push
xchg
sbb
sub
enter
hlt
lock
call
ss
arpl
movsl
pop
fidivl
or
daa
mov
out
mov
jne
lea
jns
mov
in
sub
lods
imul
mov
or
dec
outsl
and
cli
mov
dec
push
jo
pop
jno
inc
jecxz
inc
push
mov
xchg
int3
jns
cmp
mov
repnz
mov
add
testl
and
adc
aam
loopne
fnsave
lods
cld
insl
or
jmpw
jnp
push
inc
xchg
cmp
push
sub
sbb
ret
cmc
mov
inc
jo
pop
dec
shll
out
pop
std
pop
dec
cmp
leave
dec
outsl
lods
add
mov
jg
out
jl
cli
sub
popa
cmp
mov
push
sub
lock
test
jo
xchg
mov
pop
push
jg
clc
adc
sarb
lock
push
dec
adc
and
cmp
sbb
loop
xchg
mov
sbb
orl
mov
out
ds
or
xchg
push
mov
xorb
mov
adc
enter
sbb
hlt
jno
pop
dec
pop
mov
xor
pop
or
dec
cmpb
dec
lods
mov
add
sbb
adc
icebp
scas
repz
sub
lods
or
add
das
ficoml
lock
mov
jl
adc
mov
es
xchg
sub
xchg
jb
jecxz
push
jns
test
add
sub
rorl
xchg
inc
sbb
sub
xchg
adc
xor
dec
pusha
lea
mov
repnz
fxch
js
arpl
cwtl
sar
xor
lea
jle
jmp
mov
repnz
mov
cltd
aad
xchg
popa
xchg
or
outsb
sub
add
cmp
xor
test
sub
popa
or
jnp
cld
mov
mov
into
in
stos
push
sbb
pop
pop
cmp
xchg
ljmp
mov
loop
cmp
mov
std
stos
sbb
jne
fstpt
jbe
adc
arpl
push
pop
imul
push
xchg
inc
pop
fmul
fbld
faddl
jle
in
ja
inc
pop
outsl
ror
pop
bound
cltd
stos
mov
mov
sbb
push
sbb
fldenv
jg
testb
popa
pop
cmpl
sbb
cld
or
aam
push
loope
das
orb
in
xor
lahf
pop
repnz
stos
inc
push
mov
mov
popf
mov
mov
push
pop
imul
mov
adc
and
add
sbb
push
cwtl
xchg
push
subb
les
cmp
adc
es
cmp
lcall
fwait
and
mov
cmp
sbb
ja
cmpsb
sbb
adc
push
push
aas
mov
fists
push
mov
iret
ret
fimull
imul
jo
subl
in
out
cltd
mov
mov
or
int
ljmp
sub
add
inc
cmp
in
pop
notl
cmpsl
fbld
sub
sub
mov
push
jae
or
pop
jl
pop
lcall
lcall
shrb
mov
push
cmp
inc
aaa
mov
push
test
out
push
inc
pop
cli
mov
scas
add
fdivs
push
add
adcl
xor
dec
lods
insl
mov
andl
xlat
and
push
inc
ja
pop
out
sbb
je
popf
fcompl
clc
or
lret
cmpsl
pop
iret
add
mov
mov
imul
mov
rcrb
dec
push
ds
xor
popa
push
cmp
movsb
push
lods
adc
adc
rcll
mov
or
add
ljmp
xchg
jg
or
ljmp
cli
mov
int
mov
mov
in
ret
cli
test
xor
pop
mov
ja
rclb
out
jge
cmc
pmaddwd
inc
mov
pop
movsb
inc
push
pop
sti
mov
popf
subl
shlb
fwait
inc
xchg
push
add
add
xchg
add
jo
fxch
xlat
fidivl
xchg
loope
cmp
lock
jp
rorb
or
pop
push
cli
fs
and
adc
jne
inc
and
imul
outsl
ret
sbb
push
cltd
add
jg
push
in
mov
leave
sub
mov
mov
dec
xor
add
stc
xchg
gs
ret
sub
cli
mov
inc
adc
fs
adc
pop
gs
jbe
cmpsb
mov
idivb
xchg
inc
fmul
xor
adc
inc
xchg
fimull
xor
dec
cmpsb
inc
cs
add
fistps
push
or
addb
add
jecxz
jmp
frstor
movaps
jne
das
sbb
cmp
popa
jl
xchg
push
pop
dec
cwtl
aaa
jns
jne
xchg
inc
xor
jle
lods
add
inc
mov
jp
cmp
or
iret
cmc
push
xchg
dec
xchg
shrb
inc
pop
push
mov
mov
ljmp
cli
fsubp
lds
mov
jl
fcmove
or
bound
ret
adc
push
sub
imul
push
jbe
test
rol
mov
roll
das
call
lea
les
xchg
dec
sbb
data16
scas
or
push
push
mov
fsubr
xchg
sub
pop
dec
cmpb
push
xchg
cli
pop
sbb
rclb
sbb
movl
inc
jbe
stos
dec
push
cmpsl
imul
push
sahf
imull
jae
std
mov
fsubrs
mov
mov
pusha
xlat
in
scas
jae
mov
movsb
ss
push
mull
or
repz
sub
int
js
mov
add
push
lret
scas
xor
add
shl
in
inc
test
test
hlt
fstps
stc
xchg
or
push
lret
cmp
jae
sub
outsl
fldenv
lcall
ret
lods
insl
mov
int3
ds
mov
cmp
int
imul
scas
mov
xchg
jb
daa
enter
mov
sahf
movsl
add
pop
dec
pop
pop
mov
add
int3
fwait
mov
sub
adc
clc
dec
mov
xorb
jnp
jle
jl
stc
dec
mov
movsl
aaa
cmc
jle
out
fs
cmp
loopne
mov
xchg
cs
outsl
or
sub
in
cmp
mov
clc
jp
insl
sbb
je
clc
sub
outsb
in
mov
sub
sbb
pop
mov
ja
xor
gs
xorl
cltd
jmp
lods
inc
dec
addr16
adc
data16
je
std
sbb
and
addb
dec
je
and
sbb
dec
push
fidivs
mov
cmp
mov
outsl
add
in
xor
and
es
and
jne
or
mov
mov
inc
movsl
jae
in
cld
lret
cmp
insb
add
out
sub
add
sbb
insb
orb
int
ss
inc
addr16
fsubrs
mov
gs
or
stos
sbb
shl
cli
push
or
dec
jns
je
ret
pop
xor
and
pushf
add
mov
test
flds
push
mov
pop
xor
inc
adc
rcr
jne
jl
data16
fnsave
movsl
add
out
fsts
andb
sub
mov
push
jge
aad
push
hlt
and
inc
sbb
cli
arpl
loopne
add
cmc
inc
sbb
loopne
add
dec
enter
jo
push
inc
icebp
bound
pop
call
inc
add
outsb
push
stos
xchg
xchg
mov
daa
mov
flds
imul
dec
sti
cmpl
pop
adc
into
pushf
aad
and
mov
loop
std
xor
aaa
pop
out
jg
clc
pop
std
dec
int3
xchg
adc
adc
imul
cmp
pop
jb
arpl
and
mov
ret
mov
mov
sbb
pushf
shlb
outsb
jmp
sbb
pop
pop
cltd
sub
push
xor
pushf
push
push
mov
cli
leave
sahf
aam
dec
into
mov
std
outsb
xchg
iret
sbb
fnstcw
cmp
aam
es
and
cmp
test
dec
sbb
xor
imul
push
rcrl
mov
in
popf
push
idivb
pop
add
loopne
lds
mov
jnp
mull
pop
cmpsb
sti
jbe
mov
aas
into
push
cmp
jmp
xchg
inc
mov
fs
sub
jns
sub
lods
out
lods
stc
xorb
push
mov
pop
lea
mov
leave
cmp
xlat
mov
mov
mov
test
out
dec
imul
mov
mov
push
inc
lahf
jbe
and
repz
pop
repz
movsl
mov
cmc
xor
inc
popa
scas
adc
inc
sub
pop
fisttpll
adc
fldenv
in
dec
sub
div
mov
add
inc
inc
sahf
lret
mov
stos
int
sub
add
sbb
jle
inc
jno
cmp
or
mov
into
mov
jg
iret
pop
pop
pop
lret
mov
movsb
sti
jb
inc
sub
fbstp
dec
cld
adc
orb
shlb
lds
loopne
push
inc
xchg
sbb
clc
fstl
cmpps
mov
and
mov
or
or
pop
fstpt
cmpsl
jecxz
out
jl
rolb
dec
fdivl
xchg
shrl
jp
mov
sarl
lods
dec
mov
arpl
cmp
mov
xchg
pusha
cwtl
cmpsb
cmpsl
cwtl
xchg
xchg
push
push
iret
jecxz
ja
lcall
addr16
fnsave
add
cmc
adc
loop
mov
add
jbe
lods
sub
jns
lods
or
hlt
cltd
cltd
fcompl
js
in
xor
cli
movsb
sub
jno
test
mov
into
enter
pause
xor
xchg
xor
je
lcall
add
mov
pop
and
xor
icebp
mov
cmp
cmpl
es
mov
aad
push
dec
cmp
pop
mov
loop
xchg
adc
roll
inc
pop
data16
insl
sbb
jo
cld
mov
sbb
cltd
aas
scas
out
dec
push
rorb
cld
sahf
jmp
mov
pusha
repnz
repz
xlat
outsl
mov
xor
scas
mov
fld
pop
ficoms
inc
mov
and
and
mov
scas
jnp
or
enter
pop
sti
lock
in
xor
cmpsl
xchg
mov
sbb
out
xchg
call
jbe
mulb
cmc
test
cwtl
jne
xchg
es
adc
sub
sub
fmul
inc
mov
mull
lods
clc
jmp
orb
dec
mov
mov
jmp
inc
or
sbb
xor
scas
lods
adc
cmp
fmul
ljmp
cmp
add
push
push
imul
push
push
mov
fimuls
negb
fimuls
push
xor
mov
mulb
ljmp
pushl
mov
fcmove
dec
sub
sbb
in
xor
xchg
imul
mov
xchg
or
add
into
incl
mov
dec
cmp
lock
xchg
inc
jb
shrl
aad
gs
xchg
xor
and
jg
test
jne
pop
test
cwtl
sub
iret
mov
sar
xorl
pop
es
in
mov
js
push
or
lods
repz
fidivs
cmp
pop
or
sub
mov
sub
fildll
sbb
jns
push
cmp
pop
lcall
xor
cwtl
sub
lock
arpl
jae
lock
fcoms
aam
scas
js
xchg
cmpsl
arpl
fldcw
pop
loop
jecxz
fisubl
push
clc
xchg
push
mov
test
call
xor
pop
shll
jno
and
jae
jno
out
jp
arpl
roll
outsl
out
dec
fwait
lret
xor
scas
and
js
cmp
sub
out
add
sti
lea
fldl
cs
cmpl
push
test
jge
out
sub
cmp
xchg
jp
in
sbb
lcall
out
mov
ret
adc
lods
inc
push
pop
fcmovnu
gs
jp
inc
adc
cmc
mov
hlt
jle
test
pusha
daa
pop
jmp
jne
inc
test
mov
mov
jo
fbstp
ja
bound
pusha
lret
mov
cs
xchg
xor
push
out
xchg
xor
adc
test
pushf
inc
inc
mov
xor
add
dec
incl
or
dec
sbb
movsl
mov
and
shrb
mov
add
or
pop
mov
mov
mov
mov
add
mov
xor
add
add
std
mov
cmp
xchg
clc
sbb
fst
popf
fcoms
cltd
dec
and
and
daa
outsl
push
push
dec
stos
imul
shlb
iret
pop
xchg
dec
loope
jb
ret
dec
imul
fmul
mov
iret
lods
jne
movsl
adc
add
aaa
inc
mov
lock
out
xchg
adc
test
push
loopne
dec
push
jecxz
cmp
aam
and
sbb
cmp
jbe
stos
out
dec
fnsave
pop
xor
push
ja
sarb
xchg
dec
or
pusha
xchg
pop
xchg
mov
mov
fs
ljmp
fs
cmpsl
lods
adc
and
bound
pop
imul
jecxz
out
xchg
out
call
push
das
js
mov
xor
inc
in
dec
push
out
mov
push
sub
mulb
jg
xchg
push
jge
push
rolb
and
add
cmp
test
add
push
cmp
sahf
and
mov
mov
inc
loope
scas
pop
inc
sub
jge
popa
pushf
push
jnp
pop
loop
adc
push
xor
pop
adc
pushf
mov
roll
cmp
andb
jae
mov
xor
mov
adc
xchg
mov
insl
jns
push
in
stos
mov
or
adc
add
cmpsl
imul
into
adc
test
adc
xchg
imul
cli
adc
shlb
in
xchg
pop
sub
mov
test
lock
push
stos
out
test
sahf
xor
clc
push
imul
jp
push
or
lret
pop
popa
push
mov
pusha
or
inc
jno
sbbb
dec
outsl
mov
ja
cwtl
dec
daa
push
jb
pop
sbb
jl
cmp
jg,pt
stc
lods
shrb
xchg
das
add
into
mov
btr
xchg
or
cwtl
jnp
in
add
mov
push
jno
popa
inc
shrb
and
and
es
xor
mov
mov
aaa
rcrb
ds
jp
sbb
sbb
sub
test
and
pop
movl
in
cmp
dec
ds
fisubl
es
sbb
push
insl
inc
js
dec
loop
mov
jb
adc
movsl
inc
adc
test
call
aas
lock
sahf
imul
sbb
xchg
jg
cwtl
cmp
jge
cld
cmpl
adc
jne
sar
aaa
in
inc
movsl
pop
nop
pusha
cs
lods
sbb
std
loop
insl
dec
cli
lret
jg
mov
xorb
popa
mov
in
imul
jecxz
fwait
adc
xchg
pusha
movsb
popa
mov
mov
cmpl
popf
cmpsb
insl
insl
mov
fsubs
jle
stos
je
clc
fldcw
push
idivl
push
lret
lock
add
sub
shrl
pop
cli
xor
adc
jne
fisttps
push
movsb
enter
insb
sub
jmp
mov
imul
pusha
ljmp
js
out
dec
sbb
push
int
cmc
pop
adc
repz
sahf
sub
or
push
rolb
stc
ja
mov
cmpsb
sarl
xchg
inc
or
das
pop
je
mov
pop
push
push
jle
fisubrl
dec
dec
or
out
out
sti
mov
outsl
add
ds
fmull
mov
jmp
jl
push
dec
and
in
pop
xor
inc
int3
insl
iret
jmp
sub
inc
xchg
cwtl
sub
nop
add
imul
push
jle
andb
fcomip
negb
push
sub
mov
ret
das
add
dec
arpl
adc
lods
xor
or
ss
jne
push
inc
jle
push
and
daa
xor
fsubr
hlt
push
pushf
jne
notb
aaa
pop
push
jmp
sarb
ret
rorl
loope
lahf
mov
xchg
sbb
inc
sbb
lock
test
fbld
std
push
mov
pop
fs
pop
int
pop
mov
jge
adc
push
xchg
test
lret
add
movsb
xor
inc
xchg
push
jge
lods
inc
push
add
adc
xchg
rcrl
push
or
inc
in
inc
add
loop
lea
arpl
cld
fdiv
lock
pusha
jne
mov
in
stc
fisubrl
jae,pt
adc
inc
mov
pop
add
and
push
cmpsl
or
sbb
je
lods
int
xchg
mov
adc
jl
xor
into
push
add
out
push
jle,pt
imul
mov
shlb
outsl
sbb
dec
mov
out
dec
mov
dec
xchg
cmp
ret
ss
pop
mov
sub
ret
mov
add
adc
aas
pop
mov
sub
pushl
push
add
cmpsb
imul
sbb
xchg
sti
cmpsl
movsb
cmp
push
test
jnp
popf
lods
pop
adcl
movsb
mov
sub
imul
hlt
iret
fidivs
xor
push
cmp
ret
mov
lock
dec
nop
lods
mov
fstpl
stos
scas
popa
or
mov
xchg
or
push
gs
fdivr
mov
jno
push
xchg
popf
mov
arpl
les
or
mov
ret
jmp
das
add
cmp
mov
sub
and
lock
mov
jae
lret
scas
dec
andb
adc
or
lock
mov
xor
andl
out
xchg
out
imul
insb
int
inc
adc
mov
sbb
imulb
fmull
in
out
push
pop
insb
enter
mov
xlat
je
push
out
fistl
jmp
cltd
insl
mov
fildll
roll
movsl
es
repz
inc
adc
faddl
shr
ja
aaa
stc
xor
cmp
stc
fwait
rclb
outsb
inc
or
pop
pusha
movsl
pop
out
out
lea
fsub
repnz
ds
andb
ds
sbb
add
popa
xchg
popa
dec
xlat
inc
xchg
call
lret
mov
call
jecxz
push
in
lahf
mov
mov
fidivrs
inc
arpl
test
pop
stc
or
mov
and
outsl
fnstenv
in
mov
pop
add
into
fcomp
jns
add
arpl
je
push
mov
mov
rcl
daa
pop
dec
ja
call
xor
std
insb
shr
xor
in
pop
cmpsl
int3
xchg
xlat
insb
clc
mov
cmp
xchg
inc
sub
cltd
in
mov
mov
push
and
inc
sbbb
sbb
leave
adc
sub
icebp
test
mov
cli
lret
mov
push
or
push
pop
fisubl
xchg
icebp
mov
or
or
mov
fmull
push
push
rcll
sub
les
aad
stos
inc
dec
xchg
loopne
mov
pop
jae
js
insl
loopne
lods
jb
push
pushf
jno
stos
add
stc
daa
daa
push
push
xor
cmp
popf
es
lods
xor
jmp
xchg
push
clc
jne
je
sbb
outsl
movsl
cld
daa
aas
data16
push
pushf
xor
pop
or
xchg
push
jp
inc
pusha
stos
mov
dec
icebp
and
clc
daa
sub
push
lods
loop
ret
sub
stos
push
je
cmpsl
cmp
mov
push
imulb
jle
and
addl
cmc
jnp
and
pop
leave
or
int3
subb
jl
lcall
ffree
push
mov
xor
out
jl
or
add
cmp
outsl
stc
inc
jmp
ds
movsb
add
es
xchg
pop
pop
fnstsw
cmpsb
jmp
push
push
jo
pop
sahf
cmp
jecxz
jb
mulb
aad
mov
imul
mov
sbb
sbb
call
cmpl
gs
es
cmp
cld
jle
adc
mov
jle
fidivs
jmp
cs
sbb
cmp
jo
mov
mov
or
pop
or
jne
les
inc
je
mov
mov
cmp
imull
popf
pop
pop
hlt
fadd
xor
cmp
inc
aas
jl
xchg
sbb
imul
inc
pop
js
jmp
xor
ret
jae
insl
daa
cltd
and
mov
cmpsb
jp
aam
sbb
es
push
inc
in
push
orb
out
loop
mov
lahf
sub
stc
insl
lahf
stc
xor
cmp
xlat
adc
mov
out
mov
inc
mov
test
push
aas
jb
xor
push
incl
mov
push
and
adc
mov
lods
icebp
out
aad
mov
out
andl
lods
shrb
cltd
movsl
repz
or
xchg
mov
pop
or
inc
sti
jnp
rorw
push
arpl
mov
and
jge
jbe
xor
iret
mov
nop
jno
sub
push
dec
imul
mov
clc
xchg
int
rolb
ss
in
pop
imul
sahf
sub
jb
cltd
push
pusha
outsl
lret
cmp
movsb
xlat
xlat
js
lds
push
rorl
aaa
test
imul
dec
into
sti
xor
lcall
cltd
and
imul
imul
hlt
xor
pop
add
fldt
gs
outsb
lock
mov
jl
xchg
aad
faddl
dec
inc
mov
repz
loopne
xchg
jmp
mov
jle,pt
clc
fldl
inc
xchg
aas
pop
or
fnsave
fsub
or
cmp
xor
in
cmp
jae
inc
xlat
fistps
out
pop
movsb
sar
jns
fs
push
adc
cli
iret
mov
je
and
sub
xor
pop
outsb
sub
xchg
aam
sub
sbb
std
sarb
pop
sbb
inc
mov
inc
inc
adcb
out
pusha
in
dec
add
popf
add
iret
clc
in
cmp
xlat
or
mov
cwtl
sbb
xor
jmp
aad
icebp
fildl
jno
push
pusha
ss
push
xchg
lret
add
or
test
shl
fwait
push
mov
aam
ficomps
pop
push
and
cmpsl
xchg
push
push
scas
jbe
jae
mov
lock
mov
jns
out
dec
outsb
dec
gs
push
sub
mov
pop
jp
inc
dec
and
mov
enter
fcompl
push
lods
cmp
rcrl
call
das
and
pop
pop
and
test
adc
aam
cmp
ljmp
pop
leave
in
getsec
out
or
sbb
push
and
jle
iret
pop
mov
sahf
cmpb
pop
orl
lahf
fldt
insb
ljmp
popa
mov
pop
lret
cmpsl
neg
jmp
repnz
pop
popl
dec
jo
xorl
outsb
adc
icebp
cmp
xor
es
pop
fs
movsl
int
mov
repz
pushf
xchg
adc
adc
std
inc
inc
aas
cmp
dec
cmpb
and
push
int3
sub
jnp
jle
notb
jbe
push
push
ljmp
clc
push
pusha
and
mov
mov
cmc
adc
cmpsb
mov
ss
or
lods
jmp
jmp
ficomps
mov
cwtl
sub
rorl
pop
push
out
and
push
push
mov
sub
mov
sub
mov
xchg
add
pop
xlat
add
cmp
pop
push
call
stos
jo
fsubrs
cmpsl
int
or
dec
cwtl
xchg
xchg
sbb
xchg
and
rcrb
test
xchg
fdivrp
and
xchg
out
out
cmpsl
jo
add
and
sub
je
or
push
ret
inc
gs
add
add
out
xchg
or
and
or
or
pop
je
lcall
and
iret
jge
adc
fbld
into
mov
ljmp
inc
jg
and
stc
insb
movsb
adc
imul
pop
or
ror
sbb
dec
jecxz
mov
pop
rcr
mov
cld
or
cmp
aam
bound
add
mov
jae
icebp
or
sub
sub
nop
mov
push
insl
push
mov
mov
popa
inc
xchg
in
pop
adc
mov
call
stos
sahf
or
jp
jmp
ja
and
out
fsts
fcoms
xchg
daa
jecxz
add
jne
push
xchg
sbb
lock
cld
or
xor
add
ljmp
faddl
xor
call
inc
push
rcll
mov
dec
aaa
iret
daa
push
repz
into
leave
add
dec
xor
and
rorl
into
insl
cwtl
mov
or
push
push
add
sbb
and
imul
and
aam
jg
xor
jecxz
orb
fsubrs
cs
subl
out
mov
icebp
add
push
add
mov
xchg
test
int
adc
pop
neg
push
enter
jnp
mov
lods
inc
loop
and
mov
dec
jne
outsl
rsm
aas
push
xchg
lds
addr16
fldcw
mov
push
cwtl
cltd
mov
xor
cwtl
push
dec
lcall
in
adc
aaa
xor
add
jnp
and
mov
mov
push
mov
shll
enter
push
jge
sbb
cmpsb
loop
inc
iret
cmpsl
aam
or
cmp
shlb
imul
pop
pop
inc
push
stos
mov
dec
scas
mov
das
and
lock
rcll
sbb
repz
push
mov
jle
xchg
sub
or
sub
into
subb
dec
mov
data16
rep
inc
mov
sub
test
movsl
sbb
ficoml
ret
sti
inc
loope
dec
nop
aas
pop
xchg
cmp
jae
xchg
cltd
ret
push
sbb
in
mov
cmpsb
scas
jmp
lods
lcall
push
sub
pop
test
lods
lds
das
push
add
sbb
jl
pop
push
test
lret
cltd
es
scas
xchg
movsl
xchg
adc
mov
lock
push
into
push
xchg
loopne
or
mov
scas
out
sti
ljmp
lret
in
cmpsb
dec
movsl
ret
outsb
push
adc
xchg
repnz
xchg
out
mov
enter
fsubrl
int
out
popf
jo
shl
mov
xchg
rclb
or
xchg
inc
inc
push
repz
cmp
shrl
frstor
fnsetpm(287
cmp
mov
xchg
or
lret
fildl
scas
jle,pt
rolb
xchg
pop
mov
pop
call
ficoml
xchg
push
and
dec
jnp
test
je
cli
repnz
push
inc
and
jnp
sbbb
subb
and
int
sub
fiaddl
fucomi
lret
xchg
leave
clc
aas
inc
out
mov
push
add
in
leave
sbb
ja
rcll
xchg
pop
jle
mov
jl
xlat
es
xor
push
jne
jle
pop
cld
ja
fisttpl
std
bound
jecxz
xor
cs
lock
std
stos
popa
jp
jo
jb
das
push
push
out
in
leave
jmp
movsl
add
mov
sub
test
out
cmp
frstor
mov
pop
jns
stos
lds
fsubrp
xor
dec
inc
mov
mov
inc
jg
in
sbb
or
jns
adc
fwait
inc
testl
fidivs
sub
mov
rcll
ds
fidivs
pop
into
push
mov
dec
aam
jae
inc
je
add
je
cltd
lds
fidivl
lahf
mov
jb
or
add
mov
jle
dec
xor
jecxz
iret
arpl
lods
repz
jl
xchg
dec
add
cli
xor
sbb
adc
mov
fnstsw
aas
push
mov
imul
xor
mov
dec
stos
nop
mul
add
fildl
jo
ficoms
mov
sbb
daa
sub
int
outsl
or
adc
jo
xor
xchg
adc
rorl
xlat
dec
xchg
sbb
adc
jo
sub
dec
scas
jg
test
mov
cmp
pop
and
sub
shlb
sub
jo
scas
mov
mov
xchg
jno
enter
push
out
jmp
add
mov
and
fnsave
outsl
cmpsb
push
inc
sar
jb
nop
into
cwtl
mov
ror
ds
adc
in
sub
cwtl
jmp
pushf
mov
sbb
push
push
test
fistpl
mov
xchg
xchg
sub
add
popf
mov
xchg
push
mov
loop
dec
mov
jmp
rcll
push
cmpsl
ficompl
cmpsl
push
mov
shrl
mov
mov
sub
in
jns
in
dec
mov
out
xchg
push
imul
fdivrs
repnz
sbb
hlt
jns
add
lret
sbb
cld
inc
cmp
add
fmull
sub
push
aam
outsb
sub
inc
pop
pusha
jle
and
sbb
aas
scas
arpl
push
pop
ss
xchg
push
lahf
push
push
and
mov
mov
repnz
mov
je
and
add
mov
mov
pop
into
cld
add
stc
aaa
xchg
pop
jbe
mov
das
hlt
jno
pop
repnz
xchg
popf
mov
lcall
xchg
movsb
adc
push
setno
mov
lahf
outsb
fldcw
lods
ret
inc
cwtl
adc
lods
cmp
imul
ja
js
jnp
js
inc
mov
mov
cmp
xchg
aad
pop
adc
xor
dec
out
in
cli
add
insl
add
xchg
cmp
xor
add
leave
mov
imul
inc
dec
addr16
push
ljmp
xor
in
cmp
pop
and
gs
mov
or
jbe
jno
xor
cmpsb
add
in
mov
and
inc
test
and
das
or
fidivrl
popf
stos
xor
popf
mov
js
push
clc
lcall
mov
daa
sbb
loop
je
pop
pop
push
cltd
inc
stc
imul
xchg
pusha
popa
loop
dec
sub
xchg
pushl
or
mov
pop
jbe
je
pop
inc
mov
andb
add
mov
cmpsl
imul
jo
push
lret
sbb
out
and
add
fstp
xchg
pop
dec
ljmp
mov
pop
mov
cmp
mov
icebp
clc
inc
int3
xchg
cmc
mov
inc
hlt
test
fwait
cmpsb
cltd
movb
jno
sbb
and
or
in
cli
and
fs
xchg
pop
fnstsw
scas
jbe
push
aaa
push
ret
mov
mov
dec
bound
out
pop
push
inc
and
xor
sbb
shlb
fisttpl
adc
push
mov
sbbl
xor
mov
insb
xchg
popl
lret
int
pop
lahf
shlb
clc
or
cmp
ss
jg
insl
push
mov
loop
or
xchg
in
jae
push
aad
mov
movsl
pop
or
push
shrd
pop
lea
sub
fistl
sub
mov
adc
pop
pop
inc
or
stos
mov
iret
insl
add
xlat
pop
arpl
rclb
sbb
jo
int3
es
fwait
push
fldenv
int3
mov
adc
mov
jns
and
sbb
adc
inc
xor
out
add
shl
or
out
jmp
inc
xor
repnz
mov
int
jg
jbe
xor
dec
jle
and
push
xchg
cmp
pop
dec
test
adc
mov
div
cmovno
subb
mov
rclb
insl
popl
sti
nop
add
xchg
and
lods
rcll
adc
jmp
das
jb
ja
sbb
lret
push
std
mov
cmp
aad
cmp
test
shlb
xchg
xor
mov
movsb
mov
inc
out
push
mov
lods
dec
inc
ret
inc
mov
inc
scas
in
pop
outsl
std
in
stos
pusha
jne
imul
imulb
xchg
out
loop
push
sbb
push
jno
xor
xchg
testb
push
gs
addb
stos
adc
insl
js
cmp
popa
jmp
mov
inc
popaw
mov
fld
cwtl
xor
es
push
cmp
add
sub
out
lret
out
pop
jns
clc
pop
dec
mov
or
sub
mov
cmp
insl
xchg
cmp
mov
jo
jns
int3
cld
insl
adc
dec
js
jae
mov
notb
decl
int3
ljmp
add
mov
insb
ret
xchg
lret
enter
inc
push
cmpsl
adc
testl
test
cs
push
je
cwtl
mov
push
push
adc
ficomps
push
repz
mov
push
enter
clc
mov
cmpsb
fmulp
jp
inc
mov
into
int
and
inc
jne
and
jp
lahf
rcrb
outsb
dec
in
mov
enter
or
pop
mov
decb
clc
pop
push
hlt
pop
sub
dec
sbb
push
aas
pushf
jno
sub
jns
mov
fdivl
or
leave
pop
jg
imul
loop
cs
movsl
and
jno
push
pop
push
rclb
test
xchg
dec
addl
sub
add
pop
imul
add
mov
sbb
inc
or
cld
sahf
add
movsb
mov
pushf
add
sub
pusha
movsb
pop
jecxz
push
push
repz
push
mov
or
test
cwtl
dec
cmc
pop
inc
mov
data16
inc
insl
hlt
and
nopl
icebp
loope
repnz
enter
pop
push
adc
inc
div
dec
imul
in
test
insl
cmp
push
sbbl
shlb
pop
push
or
daa
cmpsb
push
jb
imul
call
xor
push
push
cmpsl
xchg
push
aad
sbb
arpl
add
and
cmp
sub
outsb
les
notb
pop
pop
xchg
and
xor
jns
sbb
and
test
fistl
ret
outsb
mov
inc
push
or
lret
fsubrs
imul
dec
sub
rol
imul
cmc
push
mov
mov
out
test
shrb
lock
out
xchg
pop
addr16
mov
cltd
sbb
cwtl
push
or
in
sbb
inc
xor
sar
and
pop
mov
push
fisttps
pusha
and
mov
lea
scas
or
outsb
jecxz
loope
fbld
xchg
jle
or
lahf
mov
dec
dec
in
outsl
or
mov
sar
mov
sub
xchg
pusha
ja
sub
fcomi
jns
fsubrl
jg
sub
popf
sahf
std
mov
int
cltd
mov
or
adc
adc
inc
rcll
jp
stos
xchg
shrb
nop
xchg
ss
jle
cmp
or
jle
push
cmp
cmpsb
aas
fwait
cmp
cmpsb
xchg
jecxz
int
push
les
sbb
out
sub
sti
negb
inc
xor
xchg
pushf
jnp
js
inc
in
mov
push
sub
xchg
ret
and
sbb
add
sti
into
test
dec
stos
dec
pop
ficoms
lea
sub
arpl
and
shr
lea
xchg
fs
cwtl
xor
stos
mov
lret
jbe
sbb
xchg
aad
pop
sti
and
mov
adc
iret
cmc
inc
pusha
divl
dec
cmpsl
and
xchg
ret
inc
pop
jecxz
lcall
fldenv
je
cmp
andb
xorl
add
mov
ds
sbb
out
mov
scas
lret
jnp
movsl
data16
rcl
push
inc
popa
pop
es
popf
imul
cmp
cmpsl
movsl
lcall
mov
movsb
and
pop
lss
fnstcw
repnz
jl
gs
cmp
cmp
jbe
arpl
enter
fnstsw
xor
and
loope
xchg
inc
addl
mov
jg
shll
pop
stos
jge
mov
pop
mov
jns
lock
dec
lods
shrl
lds
outsl
es
cmpsl
ficompl
pop
ss
sti
sbb
out
mov
pop
movsb
sub
mov
jmp
jbe
push
adc
ljmp
cmp
popf
cmpsb
or
fs
jo
or
pop
xchg
rcll
pop
push
push
ret
out
jecxz
sbb
andl
lods
xchg
jne
iret
mov
sarb
mov
jge
mov
xchg
jecxz
push
cmpsl
cmp
out
mull
and
scas
jmp
bound
std
and
xchg
jg
sbbl
cmpsb
call
dec
addr16
pusha
cltd
mov
sbb
stos
push
lock
cmp
popf
inc
jp
int3
loopne
in
and
mov
inc
ficomps
xchg
mov
cmp
cmp
mov
mov
pushf
jb
cli
mov
sbb
popf
xchg
out
aaa
rcll
loopne
popa
gs
in
inc
insl
and
loop
sbb
xchg
adc
add
push
lea
sbb
pop
pop
insl
jg
out
xor
sbb
xchg
lods
aaa
cmpsb
xor
insl
scas
js
sete
fs
lahf
and
js
pop
daa
sub
das
ror
mov
adc
nop
push
cmp
pop
lds
pop
imul
fcmovb
test
popf
pop
xor
aaa
ja
repnz
mov
cmp
push
arpl
jecxz
insb
lods
xor
daa
dec
sub
insl
inc
sbb
sub
dec
jp
jo
cmp
and
mov
dec
cmpsb
push
xchg
xchg
jecxz
dec
dec
test
xbegin
and
aam
out
ds
dec
data16
push
insb
push
dec
aaa
dec
addl
cs
and
xchg
les
push
fptan
or
cli
jg
and
pop
jnp
orl
lds
push
push
test
push
scas
sbb
mov
cld
push
ja
mov
pop
cmpsb
cmp
fcoml
in
and
xchg
jge
fisubrs
push
jns
or
xchg
jp
enter
std
int
fwait
and
mov
or
das
mov
and
nop
jae
inc
jne
jno
jae
iret
or
dec
xchg
rol
sbb
push
mov
add
pop
xorl
dec
dec
pop
sbb
lea
jbe
sub
dec
shlb
aaa
xchg
cmpsl
sbb
jbe
fwait
jecxz
test
fsubl
sub
jns
add
sbb
repnz
sub
notw
or
outsb
mov
or
nop
aaa
xchg
push
lods
mov
sti
xor
xor
push
push
lahf
loope
sahf
or
movsl
mov
jp
inc
ja
loopne
push
bound
pop
mov
testl
dec
and
mov
sbb
adc
int3
fimull
loope
and
cmp
sbb
sub
xchg
rcrb
dec
sti
pop
je
cmp
cmp
sbb
mov
fwait
adc
push
mov
add
pop
mulb
cmp
rorl
cmpb
or
or
inc
loope
push
stos
outsl
repz
jl
cltd
movsl
ficompl
or
call
loop
and
leave
xchg
into
sub
dec
sbb
sub
pop
dec
jmp
rcrb
mov
jb
pop
or
insl
sahf
adc
jb
pop
daa
cmp
adc
jge
pusha
push
push
stc
or
dec
mov
das
inc
pop
lcall
xor
inc
dec
mov
nop
ljmp
test
dec
xchg
inc
push
mov
xor
popf
inc
sbb
jl
cmp
outsb
call
mov
stos
sub
mov
addr16
aas
cli
xchg
test
xchg
and
cld
or
jne
push
fisubrs
inc
nop
mov
add
mov
aaa
cmp
call
leave
cmp
mov
xor
jo
lahf
adc
push
mov
adc
out
xor
xchg
push
das
insb
rol
inc
out
repz
mov
dec
xchg
scas
mov
movsb
mov
je
cmp
or
rdtsc
repnz
aad
lret
testl
sub
dec
into
mov
roll
xchg
and
push
push
pop
lret
mov
and
cmp
pop
mov
or
xor
mov
incb
repnz
inc
jg
jbe
data16
inc
mov
rorl
pop
and
lods
leave
aaa
fstp
pop
inc
add
xor
jb
ds
and
shll
arpl
push
popf
cmp
jmp
insl
sub
rcrb
jnp
and
idiv
jg
mov
jle
mov
jae
sbb
xchg
cmp
lds
push
mov
jnp
iret
clc
push
xchg
mov
out
enter
aas
or
jecxz
es
enter
mov
lods
jo
cmc
push
sub
pop
call
jae
jl
jl
push
lahf
in
sub
inc
nop
add
inc
dec
and
sub
dec
shl
hlt
dec
push
jecxz
jo
inc
outsl
scas
imul
adc
movsl
pop
scas
mov
mov
adc
or
je
pop
popa
enter
cwtl
mov
test
sbb
fwait
inc
lea
add
cltd
and
pop
xchg
aaa
xor
or
cltd
faddl
mov
fcmovnu
jl
stos
push
and
and
push
stc
or
movsl
les
mov
in
and
add
mov
lods
cmp
lret
hlt
pop
pop
mov
mov
loopne
mov
push
lahf
pop
xchg
jae
add
mov
push
sbb
sbbl
stos
dec
adc
add
sbb
adc
inc
add
sub
fsub
fprem
lock
repnz
mov
xchg
jns
push
jo
lea
mov
sbb
fsubr
pop
pop
test
in
fisubl
insl
in
ret
ret
mov
outsl
sub
xor
xchg
xlat
test
mov
movsl
cwtl
bound
cmp
lcall
flds
jmp
clc
xchg
clc
jns
jns
push
xchg
inc
in
lea
popa
rcrb
rep
jne
cltd
lcall
dec
inc
add
cmc
jge
leave
mov
lcall
leave
sbb
xchg
cli
jnp
and
xchg
dec
adcb
cmp
fwait
push
rorl
sub
popa
test
jp
addr16
insl
push
cmpsl
mov
lods
sub
insl
icebp
inc
cmp
repz
sbb
or
jns
int
xor
add
push
push
jae
jne
mov
ret
loop
pop
push
mov
test
push
push
dec
sbb
push
mov
xor
stc
rcrb
popf
std
sbb
jge
mov
add
adc
sarb
into
popf
jmp
into
xchg
xor
inc
gs
inc
cmpsb
mov
js
or
pusha
sbb
rorb
mov
sbb
pop
xor
pop
or
cmp
mov
push
insl
jp
pop
push
mov
mov
and
out
ja
leave
pop
push
int
sub
adc
mov
fstl
fimuls
sar
adcb
mov
add
jge
add
test
sahf
jb
std
cmc
movsb
sbb
add
cs
mov
mov
xchg
pushf
push
inc
jo
outsl
ret
ss
xchg
pop
dec
mov
xor
xchg
in
lcall
popf
insl
orl
cmp
or
cmp
xchg
xchg
dec
fwait
or
enter
filds
fnstsw
push
sbb
jg
xchg
aam
sub
cld
cli
or
and
pop
pop
cmp
jae
aad
xchg
xchg
fcomps
xchg
movsl
seto
fisttpll
pop
jns
cs
xor
ja
xor
add
ljmp
sub
push
push
lcall
cmp
ljmp
cmp
imull
cld
ret
push
sub
mov
in
mov
pop
mov
inc
shll
or
and
jbe
sbb
loopne
or
in
pop
xchg
enter
popf
add
inc
cltd
dec
stc
daa
sarl
nop
pop
pop
orl
cmp
ret
adc
sub
or
test
add
mov
add
adc
cwtl
inc
mov
subl
nop
icebp
cmpsl
xor
scas
lods
fs
hlt
rolb
lcall
add
xor
call
or
fwait
test
jo
mov
add
mov
dec
push
call
jecxz
jae
stos
sti
jmp
inc
and
mov
cmc
fisttpl
mov
cmc
sahf
jecxz
stos
cmp
sbb
loopne
adc
xor
aam
mov
push
fbstp
movsl
loope
sub
or
iret
push
lods
stos
and
mov
adc
xor
mov
loop
fs
inc
dec
sbb
dec
out
inc
xchg
inc
outsl
iret
test
adc
push
in
xchg
js
ficomps
fwait
mov
imul
subb
xchg
pop
test
dec
jne
and
dec
push
mov
mov
fs
jmp
xchg
cmp
lock
xlat
pop
jge
jge
lods
fsubrl
mov
jle
out
mov
sbb
fstl
sub
int
cwtl
pusha
jne
iret
pop
popa
mov
cmpsl
push
shl
pop
pop
test
cmp
pop
in
dec
cmp
sub
cmp
arpl
xor
test
ljmp
cli
xor
jg
js
sub
in
push
mov
lret
add
mov
pop
jl
outsl
cltd
push
jbe
xchg
jne
xor
mov
mov
loope
jmp
mov
aaa
jl
push
cli
ljmp
mov
stos
stos
mov
aas
loope
xchg
and
das
in
jge
mov
inc
lods
jns
mov
pop
pop
sarl
pop
xlat
lds
jns
mov
adc
mov
nop
mov
sbb
cmp
jle
lds
cmp
jnp
out
insb
scas
imul
insl
shlb
sbb
fidivrl
in
push
sub
cmpb
iret
aaa
mov
leave
mov
jnp
sbb
inc
cltd
mov
nop
mov
adcl
in
mov
jecxz
test
sbb
push
xchg
addr16
xchg
arpl
aam
pop
sahf
mov
insl
sbb
in
dec
inc
dec
and
or
scas
xor
add
and
xchg
cli
repz
sbb
in
xor
jb
and
xor
sub
xchg
push
lock
fnsave
cltd
stc
adc
loopne
loop
das
into
fs
aaa
fadds
inc
jnp
xor
int
mov
loope
shrb
xchg
mov
iret
dec
add
inc
aaa
add
sub
mov
loop
push
lods
jp
xorb
ja
dec
insl
sub
adc
cmp
in
pop
stos
es
iret
cmp
pop
dec
enter
not
mov
fiadds
pop
xchg
rcr
out
cmp
std
movsb
test
sti
sub
jae
and
sbb
sbbb
clts
test
lret
sar
sbb
testl
jle
jmp
jecxz
mov
push
add
ret
and
pop
push
scas
inc
jecxz
mov
fdivl
out
lds
cmpl
cltd
out
in
push
jmp
fsts
pop
push
insl
bound
in
pop
cmp
data16
rcrl
inc
cmc
dec
js
test
push
xor
adc
jmp
jbe
pop
mov
and
sbb
int
add
icebp
xor
pop
arpl
adc
mov
sbb
lods
outsb
mov
rolb
jo
inc
pop
cli
inc
jne
xor
inc
xor
pop
dec
icebp
mov
cmp
mov
cmp
or
push
pop
mov
xchg
test
mul
mov
out
cmpsb
dec
aas
push
rorl
in
inc
call
jp
out
pusha
pop
insl
cld
sbb
popa
pop
ja
push
movl
xchg
mov
xor
xlat
pop
mov
rcrl
std
out
in
mov
and
xor
inc
sub
pop
loope
fistl
or
or
lods
cli
xor
or
and
jbe
icebp
out
sbb
sub
add
inc
inc
and
or
and
jno
jmp
test
xor
shll
or
mov
andb
mov
xchg
jmp
mov
nop
mov
jae
test
jecxz
mov
push
mov
inc
add
pop
out
fstp
cli
jns
leave
inc
pop
je
call
mov
cltd
test
fcmove
lods
xlat
leave
and
inc
imull
clc
lcall
imul
fs
int
pop
in
or
jne
leave
fisubl
out
xchg
clc
xchg
inc
mov
dec
cmc
xor
add
pop
loope
clc
mov
adc
mov
mov
cmp
faddl
out
inc
xor
xchg
lahf
retw
jl
int3
sar
int
xor
subb
filds
add
push
hlt
jle
stos
jmp
xor
pop
cmp
adc
adc
test
mov
lret
leave
xor
mov
xor
fildl
lret
leave
lret
ds
push
push
jae
or
push
or
jmp
arpl
jmp
lret
pop
add
jp
sbbl
push
filds
repnz
test
mov
fwait
mov
icebp
pop
xor
xchg
and
and
mov
ljmp
inc
xor
cwtl
mov
dec
mov
movsb
test
push
inc
outsl
adc
xor
sahf
xchg
ljmp
mov
xchg
fldenv
jl
out
and
aaa
cmp
fimull
addr16
or
int3
pop
mov
push
lahf
cwtl
dec
hlt
shrb
or
add
hlt
mov
push
xor
add
push
sub
dec
mov
mov
xchg
mul
cli
push
mov
in
push
xchg
jle
pop
int
fldl
sub
std
mov
jle
mov
and
ljmp
pop
mov
dec
push
xor
jb
sub
fsubp
mov
in
sub
push
cmp
ret
push
jbe
inc
in
add
mov
pusha
jbe
cmp
shlb
add
jo
pop
push
aas
cmpsb
scas
andl
imul
dec
js
loop
push
adc
out
ret
push
adc
inc
inc
inc
mov
icebp
mov
pushf
sbb
add
jns
lea
pop
mov
jl
sarb
xor
fstpl
enter
jae
hlt
in
mov
test
add
add
dec
adc
mov
sub
cmpsl
push
repnz
fidivrs
dec
lahf
sbb
xorb
or
ret
jg
mov
or
outsl
pop
sub
mov
das
xorb
jle,pt
daa
xchg
cmp
xor
addr16
nop
pop
in
and
adc
dec
adc
sbb
push
xor
je
rcrb
aam
dec
xor
xorl
ret
mov
cmc
dec
xchg
and
mov
jnp
lea
jmp
or
mov
jmp
xchg
fsubrl
das
in
sbb
jnp
pushf
lcall
sub
mov
adc
inc
scas
sbb
js
scas
lods
mov
scas
and
xchg
jae
jo
call
push
jg
jle
push
push
nop
rolb
sarb
sti
xchg
mov
andb
pop
xor
mov
push
out
fdivs
cli
and
bound
sbb
pop
decl
rorb
mov
popa
xchg
iret
and
sbb
inc
adc
mov
ret
ret
mov
adc
push
lds
mov
cltd
imulb
fwait
or
int3
mov
arpl
xor
pop
add
in
xor
cmp
push
lcall
fistpll
enter
icebp
adc
and
inc
or
je
dec
push
cmpsb
stc
int3
loop
mov
lret
xchg
jne
imul
loope
lods
decl
aas
in
add
dec
add
repz
lcall
insl
dec
cmp
or
dec
mov
popa
pop
sbb
repz
cmpl
xorb
xchg
inc
xchg
out
mov
lods
mov
test
add
scas
out
in
in
jnp
cmp
fistl
mov
sub
mov
jnp
out
sbb
push
out
rol
jb
mov
adc
test
test
jns
sub
inc
in
mov
jno
movw
add
shll
inc
push
jbe
xchg
xchg
mov
xchg
mov
add
or
jno
and
aas
add
sti
push
sti
fisubs
jae
loope
lds
mov
jl
enter
mov
div
cmp
popa
sbb
out
ss
movsb
mov
jg
and
pop
jl
out
frstor
jns
mov
jnp
loopne
lods
iret
call
cs
mov
cmp
dec
pusha
sub
iret
cli
fstpt
imul
mov
lcall
mov
mov
mov
push
dec
jl
loop
xchg
imul
and
mov
mov
data16
enter
cmp
mov
scas
insl
insl
pop
stos
es
icebp
push
fldl
cmpsl
sub
push
dec
fistpll
shlb
inc
sbb
rorl
lea
mov
jae
push
sub
jg
mov
js
mov
sar
jne
cltd
adc
lea
divb
in
sub
cmp
inc
in
add
pop
fistps
cmp
dec
push
pop
adc
mov
jmp
adc
mov
cmp
jp
imul
pop
ljmp
mov
les
fnsave
push
test
ja
out
inc
adc
xchg
jne
stc
insl
stc
pop
mov
repnz
test
xchg
xor
or
and
shr
mov
push
jg
push
adc
mov
cmp
aas
test
mov
sbb
cltd
int3
je
push
ljmp
sbb
jo
jae
cld
mov
sub
popa
adc
jb
dec
in
cli
stc
addr16
xor
jcxz
xor
mov
out
sbb
mov
mov
add
cmp
mov
outsb
sbb
inc
xor
dec
jg
mov
addb
sub
push
jb
dec
and
inc
std
inc
ret
or
out
mov
and
sbb
lahf
loope
sub
or
dec
jge
mov
cli
aaa
push
xchg
lods
xor
push
insl
sub
je
cld
push
add
pusha
mov
cmp
pop
adc
jbe
popa
lcall
mov
mov
ret
mov
mov
clc
add
dec
bnd
iret
or
add
mov
jnp
insl
cmc
sub
cmp
inc
repnz
outsb
stos
clc
add
repz
jge
fxch
sbb
test
inc
xchg
lahf
das
in
inc
sub
cs
data16
fbld
popf
js
jo
fstps
arpl
movsl
or
lods
adc
inc
dec
mov
movb
popf
jnp
inc
lods
hlt
daa
in
fcmovnb
xchg
mov
sarl
js
or
jnp
cld
pop
push
test
mov
repnz
dec
vorpd
test
movsl
cltd
jge
xchg
adc
test
pushf
mov
sub
imul
shlb
push
in
push
fwait
test
cmp
cwtl
push
pop
dec
jnp
gs
mul
and
lahf
push
xchg
push
icebp
ret
test
into
mov
sub
xchg
test
ds
jecxz
cmp
mov
sbb
sub
mov
loopne
roll
int3
stos
xor
js
mov
adc
mov
and
mov
xchg
fldt
clc
and
inc
mov
cli
push
loopne
les
inc
or
mov
xor
ljmp
sbb
insl
inc
repz
jp
inc
fwait
sbbl
sbb
xor
or
mov
push
ficoml
jge
xor
jmp
inc
loope
ret
fwait
enter
int3
aas
and
aad
add
cwtl
and
mov
xchg
mov
ret
xor
pop
sbbl
mov
xchg
sub
mov
pop
mov
inc
inc
mov
stos
adc
xchg
out
in
xchg
push
movsl
push
test
cmpsl
mov
cmp
aaa
mov
dec
or
mov
imul
pushf
dec
pop
arpl
mov
arpl
sbb
xchg
pop
scas
in
movsl
test
pop
adc
repz
dec
xchg
xchg
mov
insl
in
lods
inc
pop
pop
loope
jb
or
imulb
jmp
es
jge
and
dec
lds
dec
jb
or
in
inc
lcall
sub
inc
aaa
les
out
push
cmp
inc
adc
cltd
jp
sbb
mov
cmp
aas
and
jbe
lds
jns
xchg
xchg
ljmp
xchg
cmp
dec
rorl
dec
mov
cld
jo
inc
mov
mov
outsl
lahf
fwait
cmp
jge
faddl
adc
loope
test
add
jo
push
or
call
pop
scas
stos
mov
int3
loope
fldl
loope
pusha
popf
xlat
notl
xchg
lcall
sub
shll
sub
inc
inc
stos
jp
in
les
scas
dec
dec
mov
push
les
xor
les
mov
push
push
mov
lret
ret
popf
cmpsb
push
les
in
inc
aam
pop
add
xlat
and
mov
int
jno
aaa
lods
cmpb
and
xor
aas
sbb
add
jecxz
mov
dec
adc
push
ret
xlat
add
int
test
sahf
adc
xor
push
xor
xor
movsl
je
sbb
pop
lret
leave
and
mov
mov
es
and
pop
daa
rolb
sub
icebp
lods
scas
dec
xchg
sbb
stos
jno
test
cmpsl
in
mov
shll
je
icebp
xor
pop
and
jnp
sbb
push
insb
imul
add
jp
dec
push
jecxz
pop
divl
cmp
ja
insb
xchg
lret
cmp
jmp
pop
xchg
fwait
gs
lds
cmc
push
loope
pushf
dec
dec
pop
gs
dec
pop
lods
popf
dec
test
inc
jae
lods
cmp
ss
lcall
xor
fs
push
mov
popa
lret
scas
sbb
adc
push
pop
pop
rcrb
mov
mov
rolb
dec
dec
sysexit
xlat
popf
add
or
addl
dec
push
xchg
mov
jbe
ret
int3
adc
jle
inc
les
loop
insb
imul
mov
imul
rorb
pop
cmpsl
mov
ret
mov
xor
jnp
xor
out
enter
xchg
push
jge
adc
cmp
mov
fistl
and
xor
cmp
jecxz
ret
pop
cwtl
fiaddl
fiaddl
mov
mov
mov
loope
mov
sbb
pusha
xor
out
xchg
lahf
mov
push
jae
sahf
mov
push
cmp
cld
adc
or
push
pop
add
loope
test
out
out
insl
push
fcomp
je
xchg
cs
push
imul
stos
jbe
or
cmp
sub
xchg
ljmp
test
pop
insl
dec
jge
popf
insl
repnz
lds
int
jl
mov
adc
clc
mov
jae
xlat
test
pop
pop
and
es
push
or
into
dec
push
xlat
push
lods
cmovns
cli
xchg
scas
add
adc
jge
pusha
xchg
jl
adc
xchg
dec
and
and
and
ja
vpunpckhbw
mov
sub
shr
adc
cltd
cmc
add
push
dec
add
mov
into
das
int3
in
cmp
testb
pop
xor
gs
loope
cltd
pop
inc
push
jmp
aaa
rorl
pop
flds
mov
inc
cld
cmpsb
mov
jb
mov
lret
or
push
jp
dec
push
dec
pop
test
nop
sbbb
incl
loope
movsl
xor
cs
imul
loope
sbb
jae
and
sub
sbbb
sarb
mov
sbb
addl
xor
decl
lcall
jl
push
divb
aad
xchg
cmp
jecxz
ja
inc
jae
or
inc
imul
sbb
in
pop
add
clc
out
jne
andl
cld
mov
loopne
orl
and
inc
movsb
inc
andb
jmp
push
push
out
pop
xchg
mov
fmull
jg
push
or
or
pop
add
divb
addr16
mov
je
xor
sbb
cmp
pushf
arpl
test
test
xor
call
dec
inc
nop
je
fbld
jns
cs
cs
jne
pop
std
imul
sub
lds
pusha
sub
cmc
mov
sahf
push
inc
insl
inc
mov
xor
mov
test
inc
adc
rorb
cli
jae
sub
and
sti
and
mov
push
jl
push
frstor
jle
sbbl
mov
mov
out
ja
add
call
sbb
fwait
xchg
mov
adc
mov
rorb
or
or
xchg
lock
sub
mov
lret
int3
das
push
sarl
addr16
pop
rclb
out
daa
pop
adc
and
mov
shlb
hlt
shll
or
inc
mov
loopne
or
jmp
adc
mov
aas
xchg
pop
and
xor
mov
test
movl
popa
mov
add
inc
jae
jno
xchg
stos
bound
or
dec
mov
das
or
lock
adc
in
clc
rorl
inc
cmpsb
adc
add
cmp
dec
add
add
cmpb
lcall
jmp
mov
jmp
sbb
mov
xor
insl
mov
movsl
lret
shr
pop
ret
dec
push
std
xor
mov
sub
mov
xchg
lods
sbb
fnstcw
push
sti
push
jmp
dec
jae
adc
mov
test
js
and
test
pop
pop
jne
fwait
hlt
xor
scas
test
cli
adc
rcrl
dec
shrb
or
ljmp
loope
sbb
inc
and
sbb
pop
inc
mov
push
out
pop
repnz
cmp
sbb
mov
lea
int3
out
test
es
push
call
mov
jecxz
or
jae
out
adc
xchg
ljmp
stos
mov
enter
fwait
or
inc
outsb
push
les
daa
fcmovu
add
aam
test
mov
cmpsb
loop
jp
xchg
xchg
dec
adc
out
cmpsl
add
cli
add
int
fimull
fldenv
inc
lret
push
xorb
cmp
sub
stc
leave
mov
or
push
bound
xor
add
or
int
mov
mov
mov
repz
test
test
inc
enter
jnp
adc
gs
insl
push
inc
cmpsb
repnz
adc
shl
add
int
dec
stc
jle
mov
cmp
repz
in
orb
xchg
gs
hlt
pop
cltd
sub
jo
scas
shr
sbb
xor
ficompl
lcall
mov
xchg
push
js
inc
sbb
repz
pop
fisttps
dec
lahf
scas
and
icebp
in
push
rolb
cmp
xlat
push
scas
sbb
pop
es
dec
lret
cmp
xor
rorb
cmova
insl
jecxz
lds
push
mov
xchg
dec
or
fcmovb
cmp
ljmp
cmp
arpl
jne
pop
faddl
daa
mov
inc
sub
rolb
outsb
adc
insl
and
pop
and
mov
xor
sub
lcall
mov
mov
lods
adc
mov
sbb
push
dec
sbb
into
in
mov
jne
or
je
lahf
scas
mov
ss
adc
push
repnz
imul
test
jbe
roll
loopne
mov
inc
movb
jno
je
sbb
pop
sbb
adc
bound
cmp
mov
jl
or
xor
aam
xor
sbb
sarb
xchg
sbb
xor
inc
add
lea
jno
sub
jp
xlat
xchg
aam
call
cmp
cmp
mov
lcall
lret
pop
pop
xor
lahf
mov
into
mov
fcmovb
or
xlat
xlat
ss
jl
fucomip
rcrb
adc
mulb
in
adc
arpl
imul
popf
mov
inc
pushl
cli
cmpsl
xchg
mov
pop
pop
and
push
inc
rcpps
popl
clc
movsb
xchg
dec
lret
cmp
sbb
fnstsw
pop
in
mov
bound
pop
insb
cmp
scas
test
arpl
cmp
pop
insb
sbb
adcl
cmp
aaa
push
push
cmpsb
scas
dec
movsl
xchg
pop
and
cltd
repnz
mov
enter
lret
cs
jne
bound
fimuls
aad
and
jbe
mulb
jle
xchg
xor
xchg
xchg
lret
mov
mov
call
pop
sbb
cltd
and
push
cmp
pop
jp
xchg
mov
cmp
inc
or
ljmp
pop
mov
cmp
ret
icebp
jns
adc
jp
mov
xor
inc
pop
mov
xor
xor
imul
pop
stos
rorb
pusha
pop
dec
cmp
or
test
leave
shl
popl
mov
jbe
dec
loop
repz
inc
mov
push
add
jae
jmp
sahf
dec
adc
pop
push
xor
out
and
int
std
xor
mov
mov
lret
lcall
mov
dec
and
fadds
pop
idivb
fdivrl
sub
jecxz
sub
ret
ficomps
adc
dec
pushf
fisubs
xor
pop
rol
adc
lods
or
inc
mov
and
xlat
mov
jp
scas
push
repz
out
jns
push
ds
mov
inc
daa
test
fisubl
pop
inc
fadds
stc
cmp
or
pop
fxch
push
xor
fiaddl
cmp
mov
scas
call
ret
gs
fstpl
and
xchg
inc
xchg
je
cs
sbb
clc
outsb
cld
fwait
and
bound
out
js
pop
adc
rcll
imul
mov
fnstenv
dec
jge
loop
lret
mov
stos
pop
adc
shlb
xor
mov
add
fucomi
push
dec
stos
das
aas
xchg
aaa
adc
outsb
xor
and
lods
ja
imul
jae,pt
or
shll
pushf
xchg
xchg
mov
out
aaa
and
xor
stos
icebp
je
daa
inc
aaa
into
adcb
lock
fistpl
and
fsubrs
outsl
jmp
sahf
sub
popl
inc
imul
vpshaw
and
mov
out
cmp
dec
or
mov
inc
and
xorb
mov
xchg
cmpb
sbb
sbb
mov
jge
adc
cwtl
or
dec
xor
mov
shl
fcomip
xchg
add
leave
add
aad
mov
pusha
les
addb
movsb
sbb
fwait
jecxz
std
mov
outsl
mov
fistpll
and
jae
xor
mov
ret
xchg
or
sahf
mov
out
out
cmp
cmp
pop
data16
in
jne,pn
and
xchg
stc
ret
xor
and
lahf
xor
xchg
pop
popf
enter
fcmovnu
aad
adc
xor
or
mov
add
sub
inc
adc
cmp
xor
adc
cmp
lahf
adc
mov
push
lock
daa
out
movsb
fistps
rol
pushf
or
or
cmp
into
outsb
inc
push
add
scas
push
jge
sub
test
andb
sub
cmp
scas
xor
xchg
cmc
mov
push
sub
out
xchg
pusha
and
inc
popf
lods
or
lcall
sub
jg
dec
cmp
insl
mov
and
in
js
fxch
fcompp
out
xor
xor
sub
sub
sub
jb
aas
mov
jmp
push
outsb
lret
jo
or
jo
or
mov
ss
sbb
cmpsb
add
loope
sub
cmpsb
jne
das
sub
adc
push
add
call
or
mov
sbb
cmp
sbb
mov
sub
les
sbb
sbb
sbb
or
inc
out
gs
addr16
cmpsl
call
outsl
in
jnp
or
sbb
sub
push
notb
xor
test
dec
addr16
push
sub
xlat
daa
cli
lock
mov
mov
fistpl
jp
daa
mov
pop
inc
push
sub
call
add
fstl
call
iret
jp
or
add
and
inc
xchg
sbb
insb
and
push
pop
div
cmpsb
lahf
cmp
ss
and
mov
andl
add
dec
cmp
or
sbb
xor
loop
dec
stc
popa
icebp
jnp
push
repnz
mov
in
std
and
lea
icebp
sub
xchg
imul
dec
mov
xchg
ja
or
sbb
push
ret
loopne
testb
ja
or
jecxz
mov
aam
adc
aam
cli
ror
xchg
lcall
jp
out
aad
cmp
cmp
sub
push
sbb
jp
push
add
sbb
icebp
mov
out
repz
inc
fs
inc
mov
sbb
outsb
lret
ljmp
fldenv
les
movsl
rcll
push
lret
stos
inc
push
rclb
adc
xchg
dec
dec
sbb
cmp
ret
ficoms
faddl
fwait
adc
inc
cmpsl
mov
orl
sbb
jmp
in
sahf
fildll
adc
fidivl
pop
repz
push
jns
ret
cltd
push
jecxz
lret
call
and
adc
and
daa
jmp
sbb
aad
jmp
sysexit
xchg
push
jl
movb
iret
popf
mov
cmovp
sbb
mov
movsb
push
shlb
push
std
sub
stos
adc
mov
xlat
rolb
fildl
jge
pushl
jp
in
xor
pusha
rorl
imul
sub
mov
mov
insl
cmpsl
fildll
lea
xchg
mov
push
mov
xor
gs
adc
cmpsb
push
cmpsb
xor
xchg
shl
add
inc
test
outsl
pop
fs
jmp
mov
mov
adc
daa
pop
adc
or
mov
inc
call
push
addb
insb
pop
pop
cmp
fdivl
outsl
stc
dec
jle
pop
lock
mov
xchg
or
insl
push
or
jle
and
adc
int3
in
push
and
and
adc
xchg
loopne
cmp
dec
outsl
sbb
push
push
cmp
sahf
mov
iret
add
mov
mov
mov
cmp
ss
sti
rorl
and
jl
jo
xor
adc
lret
icebp
xor
loopne
xlat
sbb
mov
and
ss
lcall
cmc
push
out
inc
adc
clc
mov
outsl
pop
je
sub
fs
push
fdiv
xor
aam
pop
outsl
out
adc
lahf
rcl
sub
pop
pop
sub
or
out
mov
mov
pop
jns
leave
mov
sub
stos
jns
aas
arpl
in
or
add
pop
das
ret
jg
sub
addb
xchg
lods
xor
out
xchg
das
jecxz
fcoms
mov
outsb
minps
push
pop
enter
call
or
hlt
jp
mov
xchg
int3
aas
call
ret
repnz
mov
sti
icebp
fs
hlt
cmp
dec
jle
lds
addr16
push
les
dec
subl
sbb
sbb
ss
pop
jae
sbb
and
jnp
pop
or
and
daa
sub
int
in
jmp
push
xlat
pop
adc
inc
cltd
or
cmp
cmpb
or
lea
pusha
test
outsb
jmp
adc
push
bound
dec
test
fisttpl
or
cmp
sub
and
push
dec
fimull
mov
into
or
mov
gs
cli
add
push
dec
in
mov
jl
arpl
adc
mov
lcall
sub
addb
mov
sub
mov
pop
mov
out
repnz
and
frstor
rcrl
xor
push
pop
lret
mov
inc
jne
jl
out
scas
jle
push
mov
push
and
jg,pn
push
xor
cmpsl
mov
jmp
jle
in
fwait
cltd
pop
out
jge
cwtl
jmp
ds
lcall
sbb
ret
pushf
call
loope
pop
je
pop
mov
shlb
std
mov
xlat
daa
inc
sub
shlb
add
adc
movsl
fsubr
xor
mov
mov
fisubs
pop
mov
inc
scas
cmpsb
sbb
scas
lods
dec
pop
lds
mov
loopne
cmp
loop
idivl
pop
jbe
jb
pop
ja
add
jbe
fiadds
pop
sbb
dec
cmp
push
arpl
test
dec
aaa
mov
inc
push
sbb
and
dec
sub
xchg
insb
add
adc
cmp
mov
lock
es
dec
xor
adc
inc
aam
ja
lret
jmp
jne
mov
adc
aad
xchg
pusha
ret
cs
sub
xor
je
xchg
jbe
mov
sarb
push
push
lret
cmp
or
aam
mov
outsb
mov
xor
cmp
push
shrb
pop
popf
pop
cmp
test
in
imul
sbb
das
ds
pop
mov
jge
jb
test
mov
clc
fldenv
stos
mov
pop
xchg
adc
movsb
inc
outsb
sbb
cwtl
inc
jge
lock
pusha
out
inc
fdiv
pop
int3
js
cmp
adc
jbe
stos
inc
mov
push
aas
repnz
pop
xchg
loop
sub
imull
lods
xlat
jb
dec
mov
jp
jb
inc
in
inc
adc
xlat
insb
les
stos
ja
prefetchnta
add
mov
jbe
cli
push
aaa
leave
stos
shlb
sbb
jge
aaa
jnp
dec
mov
daa
neg
sub
aad
jbe
ret
push
enter
rcrl
sub
xchg
in
mov
pop
pushf
mov
pop
sbb
push
aas
and
jae
jnp
adc
push
ja
adc
gs
xchg
orl
popa
cwtl
jmp
fistpl
jg
inc
xchg
shll
push
mov
fiadds
inc
xchg
dec
sub
and
lret
fidivrl
in
scas
mov
sbb
cmp
mov
lods
sub
push
mov
mov
fcmovnb
inc
dec
push
dec
int
mov
push
fwait
mov
sub
xchg
inc
cli
mov
adc
and
sarb
xor
cld
lock
lods
or
mov
fimuls
xchg
mov
jae
sbb
inc
addr16
push
popa
aaa
pop
loope
xchg
fadds
mov
push
gs
gs
sub
mov
sbb
mov
adc
mov
stos
push
add
stos
ljmp
lock
and
out
pop
pop
mov
mov
call
push
fwait
xchg
arpl
jecxz
jnp
xor
sub
cmp
mov
sbb
lcall
roll
cltd
es
out
imul
sahf
inc
mov
mov
iret
dec
add
imul
pop
pop
int
mov
push
adc
jp
pop
mov
cwtl
les
fistpl
jle
jns
add
rolb
ss
into
arpl
dec
cltd
imul
mov
push
shl
sbb
pushf
inc
stc
in
fmull
daa
outsl
in
loop
pop
shlb
aaa
daa
push
xchg
lock
test
lret
sti
inc
xchg
dec
pop
dec
iret
push
ja
mov
lahf
lea
sbb
jmp
pusha
data16
jp
stos
fidivrs
sarl
push
out
push
mov
jbe
nop
and
push
mov
lret
xchg
sahf
jns
movsb
and
jb
mov
mov
mov
imul
cltd
ljmp
out
adc
fsubl
adc
mov
in
dec
add
fildl
dec
in
xor
das
mov
xor
and
stc
mov
push
pop
push
sbb
sub
cmp
and
pop
dec
mov
repz
icebp
xor
sbb
movsl
inc
and
es
cmp
pop
push
adc
fwait
mov
push
jp
fldenv
je
int
inc
push
sbb
fwait
pop
mov
jns
outsl
gs
jg
pop
jo
cmc
cmp
repnz
mov
daa
lods
jmp
mov
inc
jb
jecxz
test
mov
xchg
stos
fs
stc
fldt
mov
popf
pop
sbb
sar
jae
and
lret
jne
int3
sbb
mov
xchg
adc
pop
daa
mov
test
inc
add
ret
ljmp
stc
mov
loope
sbbl
adc
hlt
inc
test
or
xor
into
and
or
popf
push
sub
loopne
mov
push
add
push
push
nop
xchg
push
adc
stos
scas
mov
out
ret
sti
pop
sbb
movsb
loopne
sub
jp
or
xor
jmp
test
and
add
xor
jbe
cli
sub
mov
fcmovbe
jbe
and
cmp
add
xlat
leave
mov
adc
mov
setle
inc
stc
pop
pop
std
movsb
push
mov
xchg
lods
adc
ret
adc
insb
dec
mov
repnz
lods
mov
mov
mov
testb
hlt
xchg
add
clc
leave
aas
adc
ljmp
scas
icebp
xchg
jecxz
push
and
jl
pop
sub
addb
jne
pop
mov
cltd
popf
sub
xor
lock
push
push
cltd
movsl
cld
jp
nop
rcrb
scas
dec
jp
lret
xor
filds
sub
fnstsw
mov
ja
xor
mov
aas
sub
and
out
or
out
out
jno
test
dec
add
pop
fldt
fcmovnb
iret
rol
and
inc
aam
int
iret
cmpsb
arpl
rcl
cmp
mov
mov
mov
outsl
std
xorl
mov
xor
mov
cmp
adc
stc
out
adc
xor
xchg
sbb
loope
mov
daa
xor
cmpsb
xchg
inc
inc
lahf
repnz
pop
out
ljmp
movsb
mov
icebp
add
push
dec
mov
push
mov
lods
and
and
mulb
sbb
jecxz
in
mov
pop
push
lahf
fsubl
das
adc
out
lcall
lahf
cltd
jmp
adc
mov
ds
jbe
mov
clc
xchg
popa
divb
stos
fimuls
test
out
pop
scas
mov
jge
mov
jp
mov
nop
xlat
cmp
addr16
xchg
add
push
pop
jmp
dec
rolb
adc
inc
into
mov
add
push
push
mov
cmc
xor
out
xor
jg
xchg
aaa
xchg
daa
in
aad
ror
adc
sahf
mov
xor
lcall
insl
roll
inc
cli
adc
rol
push
cmp
out
push
dec
mov
call
cmc
lahf
js
ret
sbb
ds
enter
ret
outsb
shrl
ss
outsl
pop
inc
lea
fimuls
insb
repz
and
cwtl
sub
adc
mov
push
xchg
lock
push
push
mov
popa
popf
jp
iret
ficomps
or
insl
sub
shr
cmp
lock
fisttpl
xor
jl
cmp
cmp
out
sbb
sub
loopne
mov
imul
sub
daa
fwait
cltd
dec
data16
fs
sub
or
nop
nop
cmpsl
jle
ljmp
dec
jl
pop
xchg
out
inc
or
adc
rcr
divl
dec
push
loopne
jg
pusha
in
das
xchg
pop
fs
pop
cli
test
int3
mov
sub
inc
xor
dec
sub
jp
jmp
scas
dec
js
cmp
push
adc
dec
sarb
pop
adc
cmp
xchg
sub
in
lahf
data16
mov
sbb
dec
push
mov
add
xor
xor
imul
outsl
pop
fwait
push
xchg
nop
push
test
jmp
cmpsb
adcb
aaa
movsb
and
movsl
loop
imul
repz
pop
ret
dec
imul
dec
mov
adc
jl
cltd
bnd
push
mov
jle
sbb
rcrl
scas
push
sti
mov
repnz
nop
dec
ljmp
cmp
loopne
pop
mov
dec
cmpsb
add
or
es
add
inc
dec
movsl
loope
pop
in
sbb
out
nop
in
xchg
enter
mov
lret
push
leave
outsb
push
pusha
out
fistpl
mov
inc
lock
and
push
cmp
mov
jbe
dec
and
cmc
stos
jg
jae
jns
ficoml
mul
mov
inc
mov
dec
push
adc
sub
jle
lods
js
fildll
cmp
and
in
lret
adc
popa
addr16
push
xor
cmp
lcall
out
out
xchg
outsl
int
jg
cmp
dec
dec
sub
push
sti
cmc
dec
mov
je
pop
pop
pop
mov
xchg
inc
and
test
pop
mov
stos
inc
outsb
cmp
sarb
inc
cmp
mov
jo
loope
add
out
les
cwtl
test
adc
push
mov
mov
in
les
mov
jb
movsl
xor
ret
fcomps
xor
jnp
in
xchg
push
and
jg
pop
sbb
xchg
or
iret
icebp
push
push
hlt
sahf
cli
in
mov
repz
adc
lahf
nop
jbe
jnp
fwait
xchg
arpl
call
sbb
sub
and
movsl
push
aas
cmp
jbe
jno
sti
or
jb
pop
jb
dec
sub
das
mov
sub
js
dec
push
fucom
in
lds
push
leave
clc
cmp
jg
add
cmp
add
pmaddwd
sbbl
push
lret
xchg
add
mov
movb
fistps
loopne
hlt
icebp
mov
jno
insl
hlt
lea
inc
addr16
dec
push
dec
xor
jecxz
pop
pop
addr16
cmpsl
scas
hlt
popf
cs
pcmpeqd
mov
lea
lock
sbb
dec
int3
sub
leave
add
mov
jbe
inc
xchg
or
pop
lret
pop
adcb
repz
insl
mov
mov
pop
mov
mov
fs
and
mov
pop
and
ja
call
inc
filds
adc
aam
cmp
inc
les
loop
les
je,pt
and
fisttpll
in
push
sbb
in
adc
test
lock
pop
or
addr16
adc
cmp
sahf
div
dec
fstpt
add
or
call
xchg
xchg
clc
sub
or
or
dec
cltd
mov
xchg
pop
push
push
cmp
dec
xchg
lret
xchg
cmp
jae
int3
xor
lret
stos
call
cmc
cmp
int3
dec
or
mov
in
push
or
cmp
xor
nop
mov
jnp
mov
jne
out
shr
sar
or
imul
jno
push
xor
push
call
push
sbb
sti
das
loope
icebp
pop
jae
mov
fs
dec
pop
bswap
mov
push
cmc
cmpsl
cmp
pop
dec
jmp
sbb
jg
into
xchg
stc
add
mov
bound
in
rorb
push
sbb
mov
out
lret
aam
inc
xchg
pop
sub
xor
ljmp
mov
imul
jecxz
or
dec
inc
cmp
pop
mov
bound
aaa
les
cwtl
popf
mov
dec
pop
sbb
xor
lods
xchg
jnp
jle
jmp
stos
cli
inc
mov
mov
mov
loope
fnstsw
imul
sbb
cmp
movsb
mov
pop
mov
addr16
pushf
test
push
fwait
jno
into
mov
insl
mov
repz
stos
jbe
adc
jb
or
mov
jb
add
mov
out
mov
insb
aas
ss
cmp
jge
jmp
mov
shlb
pushf
cld
add
incl
push
dec
jmp
adcl
jb
add
pushf
and
mov
or
adc
rcr
je
inc
lret
mov
inc
inc
scas
aaa
in
out
inc
inc
mov
mov
imul
mov
aam
arpl
hlt
in
cmpsb
cltd
fs
fsubl
xor
jnp
cmp
lcall
mov
cmc
xchg
cmc
mov
jl
mov
xor
cmpxchg
push
adc
add
mov
mov
sbb
in
fidivrs
jns
lds
push
sub
test
loop
in
push
hlt
cli
loopne
aad
out
negb
mov
pop
inc
test
dec
imul
call
cs
jmp
mov
jnp
mov
mov
and
inc
mov
cmp
jo
and
push
lock
stos
fs
push
push
sub
pop
loopne
popa
ss
and
aaa
cmp
lock
pop
mov
sbb
int3
ror
jmp
mov
loopne
gs
mov
pop
test
cwtl
outsl
icebp
xlat
lahf
shll
fnsave
mov
lock
jo
mov
dec
loope
outsl
lock
add
jns
mov
sbb
or
repz
rsm
cmc
test
push
faddp
jb
fidivrl
mov
insl
mov
jl
aad
xchg
inc
jno
xchg
pop
cwtl
mov
fsts
movsl
mov
lahf
xchg
mov
xchg
es
cmp
mov
xor
adc
inc
inc
aad
push
or
incb
mov
sbb
lds
and
mov
cmp
sbb
adc
repz
lea
add
add
inc
outsb
pop
lods
pop
scas
hlt
inc
mov
les
test
decb
imul
sub
iret
lods
pop
sub
pop
xlat
inc
negb
aaa
int3
and
inc
bound
out
push
sarl
jbe
ljmp
shrb
aas
or
insl
xchg
cli
cmp
adc
jnp
push
mov
rcrb
and
xchg
and
inc
lods
mov
jne
xchg
movsb
mov
jne
dec
in
pop
repnz
daa
xor
dec
lock
jp
sarb
push
and
sub
je
mov
stos
mov
push
movl
and
shld
cs
inc
cs
sbb
mov
mov
jmp
mov
outsb
lret
aaa
xchg
sbb
sub
loop
scas
iret
int
movsl
cmp
xor
sti
scas
call
shrl
popa
outsl
inc
in
push
push
xor
sub
push
rorb
push
jo
rcl
adc
add
add
popf
clc
adc
or
mov
jbe
fsubrs
leave
inc
in
sub
mov
sub
in
arpl
fdivrl
inc
lret
movsl
push
push
push
xor
or
es
add
shll
cwtl
shr
lahf
or
cltd
test
scas
add
mov
cmp
mov
and
push
xor
int3
and
cmpsl
pop
pop
pop
mov
push
aas
lret
dec
in
pop
insb
and
or
pop
xchg
xchg
inc
stos
sub
nop
xchg
test
inc
push
jmp
aas
xchg
popf
and
mov
xor
ret
mov
pop
mov
adc
pop
data16
jns
and
test
jo
push
roll
inc
inc
jae
jns
mov
test
mov
addr16
cmp
nop
cmp
sbb
out
cwtl
arpl
jl
cmc
popf
shrl
xor
sti
mov
jmp
aad
and
setns
rcr
sub
mov
mov
dec
lods
lcall
cmc
in
enter
sub
inc
aas
insb
addb
bound
cmc
and
xor
rorb
fwait
adcl
fdivs
add
subl
arpl
push
dec
mov
xchg
sub
add
jnp
dec
or
sbbb
or
cli
sbb
push
fcoms
mov
sbb
je
frstor
cltd
pop
push
lcall
add
xchg
mov
mov
pxor
call
jmp
inc
ficoml
rorb
and
les
adc
cmp
or
dec
jl
rclb
aas
jns
and
mov
popf
dec
popa
mov
lods
cmp
add
adc
add
xchg
data16
adc
jl
repz
push
or
or
inc
stos
out
lcall
and
mov
sbb
and
mov
pop
sub
out
sub
fcoml
push
add
pop
cmpsl
fsubp
idivb
jmp
fcoml
cmpsb
sbb
iret
sar
aam
ja
lods
popa
or
cmp
pop
lds
mov
pop
ret
xchg
lock
pop
add
in
cld
inc
xor
jno
push
inc
clc
fidivrl
mov
push
lret
pop
lret
mov
fs
inc
mov
js
outsl
mov
cld
scas
lret
sbb
in
inc
sahf
lods
push
push
imul
bound
xchg
imul
in
jo
push
addr16
int
int3
cmp
dec
shll
cmc
inc
adc
pop
hlt
dec
mov
cmpsb
sbb
and
fcomps
out
add
imul
xor
pop
push
stc
in
add
dec
sbb
stos
sub
adc
call
shr
dec
int3
xlat
jp
xlat
arpl
jnp
sub
push
movsb
addr16
xchg
popf
pop
bound
mov
lods
ja
push
je
adc
insb
ret
je
or
and
xchg
inc
pop
lods
mov
push
inc
sti
add
or
dec
or
pop
jns
pop
fs
xchg
aaa
xchg
dec
and
out
push
inc
loopne
fwait
scas
loopne
xor
sub
aam
or
je
mov
mov
int3
xchg
dec
mov
xchg
fstpl
pop
in
dec
push
inc
loope
loopne
sub
pusha
scas
lret
clc
ds
or
rorb
jno
rorl
inc
arpl
adc
jmp
adc
mov
mov
test
leave
test
aam
les
xor
and
jecxz
dec
inc
aas
dec
dec
mov
mov
jmp
dec
cmpb
cli
aas
sub
fildl
and
xchg
cmovg
jl
lods
xlat
inc
mov
dec
push
clc
lods
mov
mov
out
cli
add
mov
icebp
addr16
push
mov
rcrl
cmp
insl
int3
in
loope
out
push
pusha
movsl
xor
aaa
lret
into
fwait
jae
inc
inc
lcall
xchg
adc
xor
inc
sahf
cmpsb
push
popf
scas
mov
ljmp
mov
cmp
push
test
push
mov
popa
dec
lods
adc
hlt
mov
jmp
mov
mov
not
shrl
jne
mov
inc
push
loop
inc
pcmpeqw
xor
icebp
jmp
ljmp
ljmp
je
outsb
out
or
stos
fidivrs
cltd
inc
es
test
mov
mov
repnz
xor
inc
int3
inc
push
sbb
cld
movsb
jnp
addr16
lret
lret
rolb
lret
push
loopne
test
shll
xor
and
lds
xchg
xlat
fs
aas
out
add
mov
pop
lock
cmpsl
or
pop
dec
xchg
fildll
xchg
dec
jb
jge
sub
jbe
add
icebp
ss
mov
fistps
daa
fldenv
sub
in
inc
push
sub
in
roll
xchg
jns
xor
fiaddl
sbb
and
inc
and
imul
out
push
andl
repz
aam
push
ficoms
movsb
clc
in
cld
fistps
rolb
arpl
or
sub
lds
fs
ja
fabs
sbb
aad
aam
iret
dec
insl
hlt
mov
hlt
xchg
adc
gs
dec
ror
sub
out
jmp
lret
push
jne
push
or
sub
out
lret
mov
mov
lret
lods
out
cld
enter
xchg
dec
insb
into
inc
fucomi
push
mov
jle
xchg
push
sbb
bound
inc
lock
push
lret
jecxz
mov
adc
popl
js
and
jge
xchg
test
out
lahf
xor
stc
pop
imul
cli
rcrb
inc
lcall
stos
mov
pop
mov
lret
aas
xor
xchg
jb
adc
loop
mov
je
adc
xchg
clc
add
mov
mov
into
addr16
lahf
test
xlat
in
sub
xchg
mov
push
or
push
bound
jp
out
fldenv
sub
mov
mov
xchg
pop
out
xchg
mov
xor
mov
add
or
mov
stc
sub
mov
fists
pop
adc
repz
loopne
push
dec
xchg
xchg
cmc
mov
pop
xlat
scas
int3
rolb
bound
movl
push
lret
xchg
add
les
push
mov
push
mov
lds
or
xchg
inc
outsb
cmp
and
jmp
stos
dec
pop
outsb
imul
scas
adc
fldt
sahf
jno
iret
adc
shll
jl
cwtl
push
arpl
add
cmp
mov
jno
xchg
adc
adc
dec
mov
inc
int3
adc
sub
mov
ficomps
inc
pop
xchg
and
mov
clc
push
pop
lahf
ficompl
mov
lret
ret
pop
lcall
mov
loopne
mov
pop
inc
mov
leave
pop
cmp
int3
mov
aad
mov
inc
ss
jmp
jbe
loope
cmp
push
push
jnp
out
in
popa
pop
aam
mov
sarb
push
or
push
jecxz
push
lret
cmp
cltd
dec
xor
sub
and
sub
push
aas
add
lods
lock
sub
adc
test
or
nop
jmp
pop
and
lea
push
sti
cmp
pop
idivb
or
cmp
test
jo
xor
add
push
test
adc
outsb
outsl
jne
push
dec
insb
out
cmp
call
fcoml
test
pusha
stc
into
xor
or
subl
imul
pop
sbb
aaa
mov
xchg
mov
sti
int
in
mov
mov
push
sbb
and
and
push
jbe
pop
mov
sbb
sbb
mov
lock
jle
and
test
push
lahf
fs
add
inc
or
js
mov
xchg
leave
pop
sbb
scas
int
xorl
jge
jp
jmp
imul
ljmp
ret
mov
sarb
cs
adc
dec
rclb
fsts
movsl
rcl
and
insb
add
jns
cmp
mov
mov
cmp
jg
cs
mov
jb
and
cwtl
stos
pop
cwtl
push
fistpll
aam
shll
cmpsl
xor
xchg
or
ret
cld
xchg
add
xchg
sub
pop
sbb
daa
pop
lods
push
imull
lods
xchg
or
out
aaa
inc
es
push
repnz
push
add
xor
mov
fstpt
add
decl
arpl
imul
cli
jl
repnz
sub
mov
mov
cld
add
push
outsb
pop
cld
mov
fimull
jg
mov
in
les
stos
insl
cmp
and
aas
in
gs
xorl
push
sub
shrb
jae
sbb
jle
pushf
pusha
insl
xor
dec
test
and
iret
mov
hlt
orb
push
fdivl
test
push
daa
movsb
dec
jle
pop
ja
repz
mov
jno
out
push
pop
pop
insl
cld
fwait
or
push
lahf
or
jecxz
dec
lods
cmpsl
mov
jne
inc
rorb
cmp
inc
imul
push
jge
or
lahf
cwtl
sub
add
jp
lods
jns
inc
mov
xor
cmp
adc
lret
dec
xchg
les
aas
bound
dec
outsl
inc
jecxz
stos
fldt
ret
daa
add
lods
sub
movsl
loope
dec
xchg
or
imul
push
lods
sub
pop
cmc
out
pushf
clc
adc
jns
mov
inc
xor
jnp
sub
filds
jecxz
mov
and
mov
sub
inc
and
cwtl
fs
ja
arpl
hlt
sub
and
pop
cmp
push
jg
xor
jne
fdivl
addb
jmp
mov
xchg
dec
jp
sub
testl
test
sbb
and
dec
out
dec
in
sub
mov
xchg
dec
mov
mov
pop
scas
testl
mov
sarl
mov
pop
aad
jg
cmp
xchg
xchg
mov
pop
push
jns
cld
mov
enter
add
jo
icebp
mov
mov
dec
int3
mov
fwait
xchg
and
mov
dec
dec
sbb
pop
movsl
popf
gs
inc
jp
jl
xchg
jo
cmpsb
int3
cmp
xor
arpl
mov
mov
dec
lret
ret
cltd
mov
push
fs
pop
cwtl
loope
mov
pop
sbbb
fucomi
pop
hlt
cwtl
jl
and
dec
mov
inc
or
sti
orb
sub
stos
lods
add
popf
scas
mov
lret
lahf
xchg
inc
insl
xlat
movsl
fcom
and
out
and
inc
out
dec
stos
arpl
and
xlat
icebp
cmpsb
fwait
movsl
loope
mov
movsb
add
push
pusha
cwtl
or
dec
cmpsb
lret
cmp
out
insl
jl
mov
cmp
icebp
xchg
in
and
mov
mov
mov
pushf
imul
sbb
xchg
push
out
dec
enter
inc
fildll
or
std
push
pop
out
cmp
int
fdivs
outsb
iret
xor
push
lea
mov
jge
in
push
cmp
cmpl
pop
fdivr
imul
popa
adc
test
in
mov
cli
lahf
faddl
jle
add
fdivr
or
xchg
push
sub
shl
dec
popl
sbb
sbb
outsb
jnp
inc
jae
and
xchg
movsl
out
pop
xchg
inc
sub
jecxz
or
cmp
out
push
inc
cmpsb
fildl
imul
lcall
pop
mov
aam
sub
xchg
sbb
sub
pop
nop
adc
cmp
insl
push
out
sbb
out
sbb
mov
jp
push
test
fstl
lds
lret
fisttps
sub
sub
lods
imul
mov
cmp
subb
ljmp
push
into
push
pop
mov
cltd
jnp
call
lret
lea
outsl
fcmovnbe
mov
and
mov
mov
mov
es
add
pop
mov
gs
loopne
mov
and
inc
fnstcw
mov
aas
pop
mov
arpl
pop
mov
jmp
in
pop
sbb
adc
lods
imul
push
arpl
mov
add
xchg
pop
mov
outsb
icebp
ret
adc
pop
es
xchg
stos
bound
pusha
jp
mov
test
sbb
xchg
mov
sub
and
cmp
dec
or
ja
push
gs
mov
dec
mov
ret
ja
adc
bound
pop
or
cvtps2pi
cmp
mov
sbb
nop
fadds
cmp
out
stos
in
shlb
and
pop
ds
ss
mov
add
mov
pushf
ljmp
fcoml
mov
lea
movsb
xor
push
orb
ss
mov
pop
mov
or
jnp
lock
nop
sub
lret
test
and
sub
enter
out
sub
push
aas
xlat
iret
adc
and
push
jle
movsl
iret
stos
pop
pop
dec
or
or
xor
popa
enter
insl
xchg
xchg
mov
pop
jle
xor
or
cmp
insb
jg
xchg
dec
icebp
icebp
movb
data16
inc
mov
add
mov
ja
daa
sbb
sub
xchg
popf
push
cli
pop
aam
imul
cltd
leave
push
cltd
dec
xchg
ret
dec
or
mov
pushf
sarb
mov
lret
out
xor
xchg
fmull
sbb
jae
dec
jecxz
ja
add
lock
out
jne
sbb
and
es
dec
mov
insl
les
push
jl,pn
insb
and
int
push
dec
jecxz
loope
out
sbb
ret
cmp
xor
pop
lods
push
insb
rcl
dec
xorl
xchg
shlb
movsb
jnp
outsb
xchg
out
nop
fdivl
pop
fildll
sahf
and
ficomps
lock
rolb
cmpl
subl
cli
cltd
sbb
lret
test
daa
jp
jge
xchg
outsb
rcll
inc
in
jp
fidivl
jge
sbbl
scas
icebp
test
fdivl
dec
mov
jnp
insb
rcrb
roll
sbb
sbb
clc
ret
sahf
sbb
adc
push
mov
test
es
jae
mov
in
or
mov
sub
xchg
addr16
or
cmp
xchg
mov
adc
std
imul
call
sub
xor
stos
pop
scas
out
xor
lahf
and
pop
int3
inc
clc
ds
shld
enter
sub
sbb
mov
inc
out
xchg
test
jl
test
loope
int
ror
es
arpl
in
ret
mov
in
popa
outsl
add
cltd
fistps
lret
test
mov
insb
xchg
outsb
sahf
fstps
mov
push
sbb
dec
xchg
cmc
lods
ljmp
push
ds
cwtl
outsb
adc
rclb
fsub
cmp
pop
adc
ret
inc
pop
ret
pop
add
mov
jae
jno
iret
dec
dec
das
push
out
jmp
int3
adc
lret
nop
dec
ja
jns
insl
repz
jg
nop
and
jns
shl
push
cli
add
mov
xor
pop
adc
pushf
repz
jp
daa
xor
dec
fsubl
mov
mov
dec
pop
lret
lods
movsb
fisubrs
fldl
cli
psubw
xor
sbb
mov
ljmp
in
inc
cli
cmp
icebp
insl
test
movsl
push
adc
shlb
outsb
loop
pushl
xorl
cmp
push
mov
decb
mov
add
or
pop
jae
mov
xchg
dec
pop
jne
repnz
inc
add
out
aam
out
sahf
push
sbb
int3
cmp
out
mov
push
push
lret
pop
ds
dec
push
cli
dec
gs
jb
outsb
in
insb
cmp
pop
mov
mov
aam
aas
jne
pushf
jno
sbb
push
fwait
movsb
mov
mov
int3
das
ds
or
in
lock
repnz
fdivrl
ss
mov
fidivs
mov
xor
lea
out
stos
push
lds
test
adc
mov
or
aad
int
movsb
movsl
stos
fnstenv
test
je
xchg
aaa
neg
or
xchg
daa
mov
enter
loopne
lret
jle
ja
cmpsl
dec
movsl
pop
pushf
lret
sub
inc
inc
xchg
push
xor
and
addr16
movsl
call
insb
push
test
mov
jno
mov
push
mov
mov
xor
in
sbb
adc
push
xlat
cmpsb
shll
imul
outsl
rclb
dec
mov
and
movsb
fdiv
fwait
jae
call
mov
pop
push
push
cmp
js
or
movsl
in
ret
sub
sahf
push
cs
sar
sub
scas
in
jnp
in
lahf
dec
jmp
in
sbb
adc
test
push
mov
test
mov
pop
mov
std
jecxz
int
push
aam
mov
lret
adc
mov
mov
xchg
dec
sub
sub
andb
cmpsb
add
lret
adc
push
jb
sub
adc
cwtl
xor
hlt
sahf
movsl
mov
xchg
fcmove
sbb
cmpsb
mov
test
dec
cmpsb
into
sub
sbb
js
imul
loopne
pop
test
mov
out
jg
xchg
jbe
sbbl
cmp
ja
movsl
pushf
pushf
popa
pushf
leave
pop
aam
jae
jno
scas
pop
sbb
lret
jae
mov
imul
jnp
adc
popf
push
lret
stos
xor
cmp
sahf
mov
outsl
test
inc
les
loop
fbld
dec
in
add
or
push
jns
mov
pop
lret
in
adc
pop
inc
jp
lds
dec
sbb
cltd
push
or
vcvttsd2si
mov
into
shlb
outsl
pop
adcl
in
push
inc
scas
adc
xchg
lret
jns
fwait
dec
push
xchg
inc
dec
enter
int
aaa
cmp
xchg
xchg
jb
insl
cmp
loopne
addb
enter
jb
popf
enter
shr
aas
pop
imul
dec
mov
push
cmp
mov
mov
jl
and
dec
cltd
dec
adc
sbb
mov
imul
pop
repz
mov
adc
sbb
cltd
mov
mov
pcmpeqd
xor
xchg
jmp
lret
mov
je
rcll
push
sub
and
or
or
add
cmp
fldt
clc
add
push
xor
jb
pusha
push
or
sbb
outsb
xor
add
test
lea
call
xchg
adc
inc
shl
ret
es
ds
sbb
push
pop
cmp
test
scas
sub
pop
push
aas
and
cmc
fbstp
ja
ljmp
out
int3
loop
icebp
sub
inc
mov
inc
jbe
outsl
jg
add
mov
adc
fwait
pusha
sbb
mov
pop
imul
loope
pop
inc
jl
jg
sub
inc
jb
inc
push
or
pushf
or
xor
mov
xchg
pop
std
pop
xor
test
enter
addl
shr
out
outsl
repnz
mov
mov
xchg
pusha
lcall
in
push
dec
out
repz
nop
out
dec
push
inc
bound
std
mov
in
movsb
sub
sarb
sub
fwait
loop
inc
ret
xchg
xor
ds
pop
iret
cmc
cmp
cli
stos
mov
pushf
es
sub
jl
lcall
or
sti
push
icebp
pushf
cmpsb
rcr
fmulp
add
dec
dec
ficoms
push
push
mov
inc
add
xor
cmp
call
cwtl
lcall
out
mov
sub
mov
add
mov
ja
scas
ret
lcall
add
mov
lea
mov
inc
mov
mov
leave
in
cmp
cld
sub
or
loop
es
push
fdivr
push
and
pushf
jb
push
pop
jns
xchg
adc
sub
add
clc
aad
inc
xchg
push
push
pop
cld
inc
mov
mov
add
and
test
leave
jl
aas
filds
js
sti
or
xorb
xor
mov
outsl
dec
mov
cmp
xor
jl
les
aas
mov
mov
add
enter
sbb
add
fbld
and
pop
rcr
nop
pop
xchg
sub
scas
jp
and
out
jle
pop
mov
or
cmp
xchg
xchg
add
test
and
data16
out
std
pop
andb
popa
test
or
or
xchg
sub
repnz
jmp
imul
test
loope
hlt
pop
and
or
sti
mov
test
notl
push
sahf
lea
mov
rcrl
lret
aaa
in
out
daa
bnd
mov
call
ljmp
cltd
addl
std
shl
pushf
pusha
cmp
cltd
add
and
jno
xchg
ret
sbb
aam
ret
and
sti
dec
xorl
add
jg
ror
sbb
jle
and
add
mov
xor
jge
testb
fildl
in
je
imul
push
mov
clc
jmp
aam
mov
fcoms
and
iret
icebp
daa
es
jmp
mov
push
lcall
sub
mov
jmp
movsb
xor
cmove
bound
mov
jl
outsb
push
lahf
and
rcll
bswap
xchg
cmp
es
xchg
pop
push
cwtl
push
adc
mov
pop
test
outsl
imul
and
lods
mov
mov
pop
add
iret
rolb
aas
sbb
repnz
std
xchg
mov
xchg
adc
xor
test
sbb
nop
sub
or
mov
jge
daa
test
shll
push
mov
les
adc
mov
mov
pop
pop
pop
sub
adc
ds
mov
dec
in
push
test
insl
test
in
push
mov
mov
jnp
xor
dec
cmp
push
dec
push
sbb
ja
mov
add
movsb
or
popf
and
in
ljmp
mov
xchg
clc
mov
sahf
push
jnp
popa
cmp
pop
ss
adc
push
fisttps
je
pop
loopne
shlb
cmp
insl
lcall
push
xchg
loopne
bound
cli
pop
and
iret
daa
jns
lahf
fcmovnbe
xor
mov
roll
push
nop
sub
es
pop
movsb
and
and
imul
push
xchg
cmp
jp
fstpl
mov
insb
rclb
cmpsb
jo
pop
mov
inc
jae
mov
mov
push
fiaddl
sub
in
iret
lret
cli
shll
jmp
es
test
subl
shrl
imull
mov
call
out
mov
popa
xchg
cwtl
bnd
pop
outsb
add
test
and
out
cmp
add
mov
out
ret
popa
mov
adc
in
das
sbb
ret
push
outsl
pop
movsb
jecxz
sbb
in
push
sbb
jns
lcall
mov
fcoms
pop
and
push
ja
inc
and
cmpsb
xlat
mov
repz
add
push
mov
push
xorl
add
pop
or
or
ds
cmovl
bound
add
mov
pop
cmp
sahf
stos
data16
leave
push
pusha
fs
enter
mov
outsb
or
adc
pop
lock
mov
cltd
mov
lods
push
fisubrs
and
ficoms
je
mov
pop
jb
mov
or
sub
shlb
insl
push
push
aaa
jno
cmp
fisttpll
xor
sub
xor
fs
pop
lcall
filds
out
or
cmp
mov
lahf
loopne
push
ret
cmpsb
mov
sti
add
leave
mov
rol
xchg
sbb
xor
xor
xchg
pop
negb
addr16
cmc
jl
add
inc
mov
jno
mov
mov
mov
test
sub
sbb
mov
mov
mov
push
cmp
arpl
dec
mov
test
xlat
fsts
or
insl
fsubr
and
lcall
std
imul
mov
cmpsb
imull
out
sahf
fsts
jno
push
and
and
fimuls
push
cmc
jle
sub
data16
cwtl
add
ret
mov
aaa
sahf
dec
sub
xchg
push
mov
jmp
pop
data16
out
cld
jl
test
lods
sbb
mov
push
push
pop
lea
int3
push
inc
in
mov
push
and
mov
ss
orb
movsw
xchg
mov
mov
sub
add
aad
movsb
sub
sahf
cmpsl
pop
pop
test
cmp
add
pop
jge
adc
lods
in
aas
mov
inc
add
pop
repz
faddl
sub
pop
and
dec
gs
and
adc
and
ss
dec
mov
das
hlt
in
mov
jecxz
lock
mov
pop
repnz
adc
sti
mov
repz
xor
shll
hlt
push
xor
cmpl
insl
dec
ret
cwtl
add
push
repz
cltd
insb
xor
in
shrb
adc
or
outsl
mov
pop
dec
sti
pusha
push
sar
pop
lods
cmp
stos
inc
add
dec
mov
cld
cmp
sub
jle
pop
lret
pop
outsl
cld
into
and
stc
mov
stos
daa
sbb
lock
xchg
test
pop
in
xchg
sbb
push
jle
inc
mov
shrb
loopne
fbld
cmp
out
push
repnz
jb
push
ficoml
mov
pop
cmp
pop
mov
or
lea
out
inc
adc
in
jnp
cli
into
push
sbb
es
push
popf
sahf
das
fnsetpm(287
popa
push
rcrl
xor
add
or
sub
sub
shll
xchg
dec
jae
or
mov
xor
pop
call
xor
into
outsl
push
ret
xor
aam
inc
aas
in
push
adc
pusha
inc
fdivr
pop
pop
xchg
jo
mov
xchg
or
pop
add
inc
notb
das
push
xor
mov
aas
sti
adc
adc
dec
cmp
rorl
mov
iret
insb
int3
out
shrb
aaa
out
aam
and
movl
nop
and
rcrb
decb
call
aas
test
sahf
xchg
dec
arpl
pop
xor
test
and
in
add
pop
repz
movsb
mov
xor
sar
xchg
and
inc
sub
pop
sub
sahf
sbb
loope,pt
mov
xchg
adc
mov
jnp
gs
xchg
lea
cmpsl
cmp
push
or
mov
scas
cli
dec
aaa
or
sahf
or
push
mov
stos
fbld
and
repnz
sbb
xchg
lret
data16
movsb
shr
jo
ja
mov
fldt
mov
mov
outsb
adc
cmp
lods
addr16
mov
xchg
xor
cld
sbb
add
push
cmp
adc
and
outsl
pop
fistpll
movsl
insl
xlat
jnp
ja
and
inc
pusha
xchg
icebp
in
sbb
rcr
pop
clc
add
aam
xorl
imul
and
in
inc
stc
cmp
lods
pop
mov
cmc
int3
les
mov
int
loop
sbbb
movsl
xor
cmp
lret
jnp
xchg
in
mov
insb
int
inc
dec
cli
iret
lea
or
lcall
pop
push
mov
push
imul
mov
mov
xchg
gs
xchg
jp
adc
cmp
pushl
fs
dec
push
nop
or
xchg
jmp
out
xor
xor
adc
negb
push
inc
and
mov
shr
les
jae
push
inc
ss
popf
dec
push
add
or
or
lcall
pop
cmp
sbb
cmp
nop
shll
data16
loopne
sbb
fnstsw
shll
andl
sbb
mov
and
cmp
outsb
pusha
mov
pop
mov
popa
mov
fisubs
stos
repz
ret
mov
fnsave
adc
xchg
xchg
cmpsb
nop
jbe
inc
rol
fcomi
mov
mov
cmp
fwait
divb
outsl
sarb
push
je
divl
clc
arpl
into
dec
pop
in
mov
test
jne
frstor
xchg
sbb
xchg
jmp
push
les
pcmpeqd
jno
sub
xchg
mov
mov
cmp
add
notb
push
push
inc
data16
movsl
push
pop
add
add
cmc
pop
rolb
call
push
mov
cmp
hlt
fcmovnu
imul
or
cld
mov
arpl
mov
push
mov
lds
and
shlb
insb
jge
sti
in
xchg
addr16
mov
pop
ret
adc
pop
add
jne
sub
js
loope
jge
add
inc
xor
inc
inc
aas
xchg
add
push
roll
sbb
test
sbb
jne
and
fwait
sub
sbb
sbb
xchg
mov
dec
iret
aam
xchg
inc
stc
lcall
jle
cli
inc
or
push
jo
bound
push
xlat
les
test
or
or
fiaddl
gs
lret
mov
es
xchg
xchg
lret
xchg
incb
inc
pop
ja
imul
aaa
insl
dec
or
sub
add
popf
and
leave
int3
std
push
and
aad
js
add
mov
adc
and
xchg
div
mov
xchg
lret
rol
jae
jecxz
or
jb
jmp
adc
jecxz
movsb
cwtl
movsl
rorl
sbb
jnp
in
jmp
or
outsl
pop
mov
cmp
xchg
cs
loopne
stos
mov
cmpsb
ljmp
into
or
subb
shrl
push
mov
mov
sbb
ja
pop
sahf
pop
je
or
pop
ss
je
shll
imul
aas
das
push
cmp
std
or
dec
mul
inc
push
pop
jle
arpl
cmp
push
out
popf
xchg
fcmove
push
jl
ret
pop
cmpsl
inc
or
cld
bound
or
aaa
shlb
sbbb
adc
aam
adc
shrl
sahf
das
sbb
stos
push
gs
mov
jo
stos
xchg
push
das
aam
test
xchg
rcr
std
jne
adc
push
push
int
inc
clc
lcall
cmp
xor
sub
es
out
or
lcall
push
clc
dec
and
pusha
scas
out
mov
pop
in
lahf
inc
cmp
jecxz
pop
sub
sub
fcompl
lods
jmp
mov
mov
and
xchg
add
add
pushl
mov
push
mov
xchg
push
jns
test
cltd
and
sub
sub
cmp
repz
ljmp
and
ds
xchg
xor
inc
aad
mov
inc
pop
sbb
mov
mov
mov
cwtl
pop
ss
outsl
pushl
cmp
dec
dec
jb
das
test
inc
ficoml
ja
pop
xchg
push
mov
pop
mov
add
mov
pop
dec
test
imulb
add
ss
add
mov
test
lock
jecxz
lret
xchg
add
or
fidivrs
pop
fdivl
cld
adc
mov
and
lahf
mov
subb
cli
pushf
lret
lea
add
cwtl
ljmp
sbbl
in
jnp
iret
pop
dec
ljmp
ret
lcall
ss
dec
lods
pushf
enter
pop
test
in
aas
out
add
push
dec
repz
jb
or
push
es
sub
in
fnstsw
loop
jb
std
adc
fwait
mov
mov
pop
dec
daa
jb
xchg
push
sbb
xchg
scas
mov
push
jo
out
ret
icebp
test
ss
icebp
movsb
cmp
rolb
pop
inc
fldcw
sub
les
lcall
lods
and
test
lret
pop
xor
inc
popf
lahf
push
gs
cmp
mov
aam
aad
roll
into
out
repnz
sub
sbb
and
hlt
jmp
insl
xchg
imul
mov
stos
stc
shrb
iret
cmpsb
mov
dec
sub
lret
mov
fsqrt
shlb
sbb
inc
push
aaa
insl
in
imul
loope
stos
mov
fidivs
fs
stos
fs
bound
pop
jb
sbbl
xchg
lcall
js
in
pop
xor
negb
and
mov
pop
xchg
adc
rolb
push
addr16
lret
xchg
mov
add
lret
pop
or
and
stos
fnstsw
push
cli
add
jae
fldt
pushf
lcall
in
push
ja
cld
lods
fwait
outsb
dec
test
movsl
test
pop
data16
mov
or
stos
mov
inc
cmc
jmp
mov
test
outsb
loop
scas
lods
lret
xor
jl
dec
cmp
fmul
in
mov
in
aad
xor
iret
cmp
insl
out
jo
fucom
or
cmc
cld
mov
les
fwait
pushf
nop
sub
test
shrb
jle
pop
push
movsl
mov
movsb
xor
push
lods
sbb
fs
xchg
pusha
dec
inc
aaa
insb
jge
into
mov
ss
test
stos
popf
push
mov
ljmp
dec
loope
sbb
sub
stos
outsl
ret
or
xor
mov
or
xchg
sbb
xchg
cmp
mov
xor
mov
pop
daa
add
jmp
ds
popf
cwtl
xchg
and
sbb
loope
mov
add
daa
cmp
cmp
xchg
pop
sahf
or
loope
sub
in
add
ss
popf
movsl
inc
lods
fiadds
pushf
loope
fwait
mov
loop
clc
xor
dec
lret
fdivrl
lea
cmpsb
push
scas
sahf
jg
rcrl
pop
notl
in
test
fwait
xchg
lock
pushf
mov
scas
fcomip
mov
aas
shlb
mov
daa
roll
cmc
mov
inc
and
jae
fiaddl
or
add
jp
xchg
cmpsb
je
and
mov
test
and
aas
xor
fstpl
cs
pop
mov
jle
imul
xor
sbb
adc
movsl
xor
cvtps2pd
cmp
pop
cmpsl
loopne
std
stc
lcall
jg
jo
pop
push
add
sets
lahf
pop
movsb
sti
inc
pop
popl
insl
adc
cmpb
sub
sub
jl
sub
stos
dec
sub
adc
jb
jg
mov
out
pop
int3
cmpsb
mov
mull
loopne
jno
adc
mov
xchg
jmp
jg
cwtl
mov
dec
divb
sarb
outsb
sti
rcr
mov
add
aaa
dec
pop
repnz
sarb
dec
lcall
cmp
test
push
adc
push
fs
movsl
icebp
fmull
test
cmp
lock
adc
aam
repnz
cmp
fdivl
cs
jl
lds
xchg
fwait
mov
out
out
nop
fcmovbe
jg
sub
and
outsb
mov
imul
stos
xchg
cmp
out
bound
dec
icebp
cwtl
xchg
xchg
mov
sbb
sub
mov
pop
lods
stos
lea
call
movsb
in
push
es
lods
jns
jns
out
repnz
or
cmpsb
das
insl
xchg
cmc
mov
push
xchg
divb
cmp
jecxz
add
ret
loop
inc
fucom
xor
adc
mov
mov
sub
ljmp
push
mov
lret
ss
pop
test
push
or
ja
jmp
mov
adc
rclb
nop
cmp
xchg
push
xchg
fs
inc
or
and
dec
leave
in
mov
xor
cmp
xor
out
das
xchg
jnp
sub
cmp
lret
arpl
sbb
in
stos
mov
andb
xor
jg
cmp
push
loopne
mov
mov
xchg
pop
fcmovbe
cwtl
inc
sub
and
xor
dec
add
leave
nop
mov
imul
popa
sub
fmuls
fcmovnu
dec
mov
mov
ljmp
sbb
xchg
mov
pop
es
jno
icebp
ss
xor
mov
mov
shll
fiadds
jae
or
inc
xchg
inc
js
xchg
xor
jo
xchg
and
sti
sti
jo
pushf
mov
inc
cmpsb
mov
fiadds
in
mov
inc
jno
sbb
rcr
inc
pop
ret
sbb
aaa
and
fcomps
add
dec
xchg
pop
push
lahf
scas
mov
shrl
mov
adc
push
xor
xchg
int3
mov
cld
out
lret
mov
lods
or
js
sub
pop
sub
push
add
jnp
mov
pop
and
xchg
sbb
mov
push
mov
sub
addl
pop
sbb
mov
addr16
or
out
dec
data16
lock
pop
push
hlt
out
icebp
std
mov
sub
stos
je
mov
xor
stos
popf
or
fbstp
inc
sub
das
jge
push
test
xchg
push
stc
adc
xor
int3
movq
lds
insl
sub
dec
enter
int
jge
leave
sbb
mov
jg
jno
xor
xor
mov
sbbl
in
jge
loopne
inc
cmp
adc
int
pusha
inc
fcoms
mov
fadds
xchg
mov
sbb
inc
sti
xor
movsb
mov
fidivrl
sbb
mov
test
sahf
jp
in
mov
push
pop
mov
leave
inc
cmp
int
test
in
and
in
cmp
mov
les
sahf
dec
lcall
push
dec
imul
ficoml
ffree
mov
int
test
in
mov
insl
jb
mov
popf
xchg
sti
xchg
lret
jno
inc
add
add
adc
jl
incb
sub
pop
dec
aas
repz
decb
pop
pop
xchg
mov
mov
out
pop
mov
pop
vmovaps
lds
in
pop
pop
dec
cmpsl
gs
add
xchg
and
xlat
mov
cmp
and
scas
sbb
in
push
hlt
mov
mov
xorpd
jp
lret
jge
iret
sbb
xchg
mov
sbb
mov
dec
faddl
cmp
cli
stc
mov
lcall
mov
aas
or
push
jae
pop
ds
cwtl
ljmp
xor
lea
popa
incl
movsb
and
jb
test
testl
popa
loop
repz
negb
imul
fiaddl
lods
rcrl
jg
aas
outsb
add
fwait
data16
mov
xchg
sarl
out
pop
xor
mov
bound
xchg
mov
lahf
scas
jae
std
dec
lret
mov
out
les
hlt
movsl
dec
sub
add
hlt
bound
pop
add
xchg
inc
add
inc
inc
xchg
icebp
mov
enter
ljmp
hlt
fistpll
ja
inc
mov
dec
fisttpll
jne
enter
xchg
push
cmp
sbb
mov
aam
notb
xor
sahf
xchg
xorl
popa
pop
pop
mov
cmp
push
mov
lgs
xor
xorb
out
adc
fsubrs
sbb
jmp
lds
insb
pop
stos
test
lods
mov
in
mov
and
in
mov
lods
movsb
pop
sub
jge
push
jno
pop
movsb
xor
fdiv
sbb
into
jecxz
sub
mov
xor
mov
lret
fs
pop
test
fwait
int
mov
sbb
mov
mulb
push
movsl
add
inc
sbb
lret
or
jecxz
cmp
mov
lcall
fchs
mov
push
ret
lcall
lock
add
sahf
adc
lock
es
sbb
test
out
adc
mov
pop
mov
idivl
in
cmp
or
mov
std
pop
popf
les
xor
cmc
jo
adc
lock
mov
aam
mov
xchg
cld
pop
pop
aas
jmp
int3
shr
xor
and
dec
adc
int3
sbb
add
aas
sbb
mov
testl
or
lcall
repz
imul
adc
test
mov
addr16
dec
inc
lock
std
fs
es
push
or
sub
imul
ja
xor
mov
insl
jp
out
add
loop
mov
sbb
in
cmpsb
outsb
imul
ss
xchg
and
adc
repnz
push
stos
and
aam
outsb
in
sbb
xor
lds
outsb
pop
lds
xor
mov
dec
push
inc
mov
fnsave
aaa
mov
cltd
cmc
adc
cmp
or
aad
aaa
adc
into
icebp
lods
sbb
pop
xor
in
sub
sbb
fs
outsb
mov
and
cmp
mov
sahf
xor
loope
mov
imul
stos
and
dec
fdivrl
add
fcoml
jp
xchg
icebp
pushf
icebp
adc
lock
adc
mov
mov
shrb
fdivrl
daa
adc
and
iret
sbbb
xchg
shlb
imul
into
sub
xor
cmpsb
xchg
push
cmp
loope
xor
pop
xchg
sarl
jno
inc
test
out
repz
aad
xchg
and
pop
ss
and
dec
pop
xorl
lret
jl
loop
add
hlt
xchg
mov
gs
fldenv
or
scas
xchg
inc
js
jmp
xor
iret
cwtl
test
or
jns
mov
or
pusha
gs
mov
inc
out
jnp
cmp
jecxz
test
je
leave
add
sti
sub
rcll
aad
pop
int3
cs
test
loop
adc
outsb
adc
jnp
xor
sbb
mov
push
jne
jo
push
and
mov
cmp
push
outsl
outsl
test
mov
mov
cld
test
stos
hlt
sub
xor
outsl
cmovle
enter
loop
aad
shll
pop
mov
jge
pop
je
sbb
sbb
aam
movsl
lcall
jmp
negb
cld
mov
ja
je
sahf
imull
pop
mov
pop
pop
inc
jmp
fistpl
or
shr
dec
fildll
andb
lea
lret
or
adc
jg
cwtl
sti
sub
cmp
push
cwtl
push
dec
fcoms
pushf
addl
cmp
jle
fdivrs
pop
cmp
inc
mov
out
stos
lds
mov
sub
or
pop
dec
addr16
aaa
subb
cld
and
jg
and
outsl
mov
fisttpll
rolb
dec
sub
leave
fdivr
adc
ss
jbe
pop
fadd
scas
jp
lcall
inc
fdivl
std
movsl
push
adc
push
fdivrs
xchg
dec
dec
pop
sarb
or
mov
mov
sbb
add
outsl
fwait
sbb
mov
cli
pop
cmpsl
lea
jp
aaa
jae
aaa
adc
and
sbb
int3
sub
repz
fs
push
xchg
sbb
js
cltd
dec
rorl
sub
pop
sub
xchg
xchg
aam
cmp
popf
pop
inc
sbb
rcr
sub
or
dec
mov
stos
mov
adc
adc
sahf
mov
imul
or
rcrb
pop
mov
cli
arpl
xor
arpl
and
and
clc
bound
or
mov
xchg
inc
and
push
mov
cwtl
inc
mov
int3
jl
dec
adc
mov
dec
mov
sub
lret
sbb
sub
jns
test
inc
test
loope
outsl
fs
les
lods
mov
in
jne
adc
push
notb
cmp
add
cmc
cmpsl
and
sbb
lcall
inc
sbb
daa
push
jg
sbb
jle
stos
movb
into
jg
mov
into
testb
inc
xor
imul
fs
add
adc
loope
xor
inc
lods
sub
sub
xchg
mov
out
flds
clc
and
rcrb
pusha
mov
adc
pop
pop
jle
fisttps
and
gs
repz
movsb
cmp
adc
lahf
dec
xor
repz
sarl
popa
rol
mov
adc
ja
sub
pusha
fisubrl
add
mov
int
insl
mov
mov
fisubrl
bound
cmp
test
lods
mov
enter
out
roll
jbe
xor
jnp
lret
mov
frstor
add
pop
mov
add
mov
loopne
add
daa
in
in
cmpsl
jmp
mov
ja
faddl
loop
mov
lret
lret
lea
outsl
and
lds
arpl
call
push
pop
pop
ds
dec
in
and
out
fdiv
jp
mov
out
les
nop
mov
leave
enter
loopne
xor
addr16
inc
mov
add
rcr
jbe
aaa
sub
dec
push
clc
cmp
imul
test
adc
lret
inc
xchg
xor
mov
movsl
aas
xchg
inc
jno
fisubs
jae
in
fistpll
ljmp
adc
mov
jno
inc
loop
xchg
lock
out
mov
ficoms
xor
mov
dec
rcll
pop
pop
lret
out
mov
sub
xchg
icebp
aad
loope
mov
jbe
adc
mov
ss
lret
jno
mov
adc
mov
cmp
enter
test
inc
je
out
ljmp
jnp
sbb
icebp
xor
pop
xor
mov
xchg
and
test
lret
mov
out
mov
push
and
push
out
insl
xor
iret
int3
movb
mov
in
rcrb
push
mov
adcb
adc
push
fs
clc
cltd
push
cs
dec
fsubr
cmpsl
cmp
mov
inc
in
in
addr16
ret
xor
loopne
sbb
and
or
lods
and
out
mov
int
xchg
lods
mov
aas
mov
mov
cltd
scas
sub
jne
adc
aad
in
insb
xchg
mov
test
int
out
sub
pop
jge
cli
arpl
or
or
push
and
mov
adc
cld
loopne
fwait
call
leave
mov
in
hlt
cmp
and
inc
inc
xchg
cmpsl
jecxz
cmp
repz
daa
lock
or
fisubs
mov
xlat
and
into
mov
cwtl
rolb
in
jp
jp
data16
xchg
test
pushf
xchg
cmpsl
sub
sbb
cmc
orb
dec
push
ja
mov
jbe
xchg
sbb
cmp
mulb
test
mov
jnp
and
loopne
dec
push
mov
inc
cli
jae
shl
push
rcrb
mov
js
mov
mov
inc
sub
sbb
lock
les
lock
sti
scas
mov
xchg
daa
out
mov
jnp
test
dec
mov
jb
lods
push
icebp
imul
xchg
or
mov
push
cs
sahf
scas
xchg
out
lcall
jmp
into
mov
mov
jmp
dec
loopne
out
mov
or
leave
cmp
jge
incl
dec
ss
cs
fstps
lcall
or
test
hlt
leave
dec
scas
imul
outsb
gs
call
dec
and
mov
and
int
dec
push
popa
fs
mov
lret
in
data16
jae
daa
jg
mov
push
lahf
js
mov
leave
cmpl
stos
loopne
int3
jbe
lret
nop
fsubs
and
stos
cmp
lcall
in
push
adc
pop
pop
mov
enter
sub
cmp
out
jae
mov
outsb
adc
scas
cmp
das
push
or
sti
lahf
cmc
xor
pop
movsb
leave
or
pop
or
test
fs
dec
xchg
or
out
sub
lods
jnp
pop
insl
pusha
std
sbbl
shll
xor
add
push
cmp
mov
ljmp
push
pop
push
add
movsb
clc
bswap
xor
test
adc
cwtl
clc
add
stos
cmp
sti
les
sbb
adc
dec
cli
adc
dec
pop
stc
mov
xor
push
aas
sbbb
rorl
or
jnp,pt
lods
pop
gs
sbb
lahf
mov
push
dec
cmp
jle
xchg
mov
ror
shrl
xchg
inc
push
push
sbb
and
ljmp
sbb
push
jg
sahf
mov
mov
mov
loopne
icebp
sar
insl
jae
jp
ret
int
mov
push
aaa
pop
es
movsl
jo
out
sti
adc
hlt
cs
mov
cmp
in
mov
out
jns
scas
and
jle
arpl
or
pop
adc
cmpsl
rcrl
dec
fldenv
pop
jo
pop
fcom
jb
fcmovnbe
push
movsb
movsl
mov
mov
mov
fstl
divb
insb
mov
dec
cmp
xor
xlat
cmc
enter
in
lret
inc
push
imul
imul
in
popa
fiadds
sarl
add
xor
cmp
sbb
sub
push
mov
jb
rclb
std
mov
stc
andps
iret
aaa
aam
or
push
or
add
lock
pop
pop
mov
xorl
mov
scas
inc
imul
push
andl
leave
js
rcll
and
cmpsb
out
mov
sub
and
mov
aaa
inc
add
ds
and
pop
mov
cmpsb
mov
movsl
out
sbb
mov
aas
mov
pusha
and
adc
js
arpl
adc
mov
addl
mov
dec
dec
add
loop
mov
pushf
loop
icebp
ret
add
adc
movsb
clc
aad
add
rorb
xchg
mov
fnstsw
bsf
out
add
dec
ret
push
and
sub
mov
cltd
xchg
mov
xor
insl
lds
mov
xchg
sbb
mov
mov
ss
les
inc
push
fs
pop
pop
add
push
sub
inc
div
mov
adc
in
lret
int3
lds
mov
cltd
fwait
pop
sarl
pop
repz
clc
in
lcall
cwtl
pushf
mov
cmpsb
repnz
or
push
mov
ss
mov
dec
mov
push
subb
cmc
ficompl
xor
add
cmc
jnp
push
out
pop
adc
fwait
cld
mov
out
cmc
mov
jge
push
jbe
loop
lods
cwtl
les
cmp
mov
cwtl
xchg
insb
cmp
outsb
mov
add
jo
bound
cli
lret
loopne
sbb
inc
sub
xlat
stos
lret
or
dec
cmp
mov
adc
push
nop
inc
push
pop
pushf
mov
lods
hlt
cld
pop
or
hlt
leave
inc
movsb
push
je
push
movb
lods
lea
and
icebp
mov
dec
xor
sbb
adc
leave
stc
movsl
push
jmp
cli
and
aaa
inc
xchg
xchg
jl
add
mov
jge
mov
addr16
cli
and
mov
xor
jno
dec
pushf
loope
jl
loopne
shrb
mov
and
int
das
scas
adcb
xor
inc
sbbl
lods
sub
mov
repnz
lods
dec
jg
and
repz
les
xchg
mov
loop
data16
xlat
sbb
int
cmc
cld
test
bnd
pop
mov
cli
push
push
xchg
and
inc
and
pop
loop
jno
xor
dec
repz
cmp
aaa
movb
xor
push
stc
xor
js
loop
imul
das
mov
sbb
test
push
fldt
adc
scas
sbb
loop
data16
fisttps
and
pop
ret
sub
pop
mov
cwtl
jecxz
clc
pusha
vunpcklps
popf
mov
sbb
rclb
insl
inc
mov
push
adc
push
cmpsl
js
iret
roll
icebp
jp
mov
in
std
dec
stos
test
inc
std
mov
add
repnz
pop
addl
mov
aaa
mov
adc
movsb
sub
mov
jle
mov
test
repnz
cmc
out
call
push
or
insb
adc
pop
je
mov
jne
jl
movsl
adc
push
adc
das
adc
jge
clc
xor
enter
or
movsl
lret
sarl
sub
pushf
cmp
fdivs
dec
xor
cmpsb
popa
lods
xchg
nop
xor
mov
movsl
cs
in
pop
jp
sub
jbe
and
push
pop
in
xor
test
ljmp
mov
cwtl
pop
lea
and
adcb
arpl
push
pop
adc
xchg
cmp
mov
sarb
mov
dec
sbb
adc
mov
sbb
push
cmpsl
or
and
jmp
xor
xchg
andb
cmpsb
popf
adc
and
dec
scas
movsb
ja
adc
fwait
push
shlb
or
sub
gs
out
iret
fdivr
loopne
addr16
stos
movsb
pop
or
jp
adc
out
push
lods
std
sti
fdivs
mov
mov
dec
cli
jnp
out
cmp
std
and
pop
dec
pop
loop
jnp
imul
push
pop
or
movsl
xor
pop
sbb
adc
xorb
sbb
sbb
in
sub
sub
shrl
xor
in
xor
mov
lds
dec
add
inc
adc
flds
xorl
mov
testb
xorl
lret
pop
cmp
cmpsl
pushf
dec
add
or
cli
jmp
movsl
cli
add
test
dec
loopne
xchg
mov
data16
arpl
mov
pop
das
test
cmpsl
cltd
lods
pop
pop
push
rorb
jecxz
xchg
add
flds
stos
xchg
fsubs
xchg
sti
test
lret
add
add
pusha
cmp
lods
lock
or
rcrb
pop
aaa
pop
cmp
push
insb
stos
pop
push
add
daa
mov
lock
adc
popa
mov
icebp
inc
mov
add
ja
test
sbb
push
lahf
pop
enter
or
sub
mov
mov
aaa
jg
mov
xchg
test
xor
dec
cvtps2pd
jmp
mov
cmpsl
subb
lods
icebp
jno
test
lock
imul
pusha
pop
pop
stc
in
adc
xchg
test
xchg
int3
and
orl
lods
dec
adc
in
pop
arpl
xor
sub
add
das
mov
and
adcl
xor
jp,pn
loopne
outsb
stc
dec
push
aam
lods
push
sbb
jno
loop
dec
fisttpl
pop
xor
test
xchg
iret
aad
xchg
ds
push
or
push
jmp
pop
in
scas
les
sbb
jns
pop
ds
xorb
xchg
push
mov
mov
or
es
aad
sti
clc
lods
xchg
xor
or
out
loopne
pop
dec
mov
or
aam
push
or
xchg
inc
jle
in
lock
pop
mov
mov
and
sbb
adc
sub
ret
mov
sahf
pushf
push
in
movsl
inc
xor
fisubl
push
call
loope
fiadds
lods
dec
cwtl
jne
in
lods
xor
lahf
or
lret
mov
mov
js
xor
pusha
fnsave
scas
or
jbe
push
shll
loop
mov
mov
cwtl
ret
fwait
inc
and
jmp
lret
xchg
fs
and
cwtl
insl
mov
push
mov
push
idivb
cmp
insb
xor
or
test
inc
outsl
fdivl
inc
or
inc
mov
mov
dec
roll
or
shll
mov
xchg
pusha
mov
subl
jne
daa
add
arpl
add
subl
push
dec
mov
imul
inc
push
not
ficoml
xchg
lret
or
xor
out
cmp
pop
push
adc
push
mov
cmp
mov
clc
insb
out
imul
fldl
jmp
into
mov
jne
add
mov
xchg
fwait
mov
push
sbb
enter
adc
mov
mov
lcall
xchg
pop
dec
xchg
insl
mov
imul
push
sti
daa
das
cmc
lock
cmp
repz
mov
pop
jae
lods
mov
xor
xchg
stos
jp
shrb
push
std
push
dec
pop
and
cmp
mov
push
add
push
add
mov
jmp
loope
loope
jne
movl
mov
ret
test
stos
inc
jne
movl
pop
jecxz
subb
je
mov
push
mov
mov
adc
mov
orl
inc
aam
xlat
adc
adc
repz
jns
orl
stc
movsb
mov
lcall
stos
test
out
cmp
outsb
into
mov
test
mov
scas
addr16
cmpsl
xor
adc
push
ljmp
cmp
and
push
mov
ja
pop
xor
push
adc
repz
les
cmp
cmp
ljmp
pop
or
or
inc
and
les
and
push
push
mov
add
fwait
test
dec
cmp
and
push
pop
cmp
sbb
repnz
lock
stos
jbe
repz
push
sbb
push
cld
mov
jp
mov
enter
imul
jo
sbb
fldt
xchg
lret
call
rcrb
inc
or
mov
lock
jb
insb
call
mov
out
sub
in
mov
xor
push
pop
add
sbb
xor
pop
ficompl
adc
xchg
out
jb
pop
sub
xchg
mov
dec
inc
fstl
pop
jge
ss
and
xchg
mov
cmp
xchg
cld
pop
inc
movsl
mov
and
test
mov
inc
mov
add
dec
nop
sbb
mov
int3
fidivl
aam
ret
pop
mov
shl
mov
jmp
push
sub
mov
or
push
es
xor
inc
fs
jno
jbe
push
jae
addb
scas
and
cmp
dec
pusha
ret
fmul
pop
adc
xchg
mov
inc
push
xor
inc
out
push
pusha
loopne
cmp
xchg
icebp
xlat
sub
sbb
mov
mov
and
enter
mov
cmp
adcb
pop
mov
push
cmc
push
mov
cltd
dec
test
mov
sub
or
arpl
movsl
popf
lock
int
arpl
shll
xchg
movsb
insl
mov
sbb
push
push
push
push
xlat
jnp
adc
gs
jnp
pop
out
lea
in
inc
or
orl
jmp
mov
sub
mov
mov
xchg
out
push
jnp
push
stos
cwtl
fmulp
xor
jbe
data16
adc
aaa
adc
jo
fsubrs
mov
xchg
out
jnp
inc
dec
and
push
adc
es
or
sbb
repnz
push
test
or
pop
fwait
stos
push
add
and
aas
pushf
fimuls
xor
mov
jmp
lahf
mov
pop
movsb
loop
pop
divb
cmp
sti
pushf
testl
xchg
pop
jb
sub
pop
push
inc
push
add
enter
push
inc
rclb
lock
push
sub
cmp
sub
jb
es
xor
imul
ds
stos
pop
nop
push
stos
and
loope
fxtract
and
testb
dec
xor
mov
fs
lret
stos
pop
test
mov
inc
pop
dec
dec
or
push
inc
or
cmpsl
cs
mov
mov
adc
popa
je
int3
nop
popf
inc
mov
or
icebp
xchg
out
fidivrs
test
xchg
loope
mov
xor
lret
pop
ret
inc
lahf
jl
mov
push
rol
pop
ss
xor
push
pop
mov
jb
xchg
imul
cmp
mov
push
and
sub
cmp
pop
data16
into
xor
mov
lret
lds
test
mov
aad
add
cmpsl
das
lods
inc
sub
div
adc
dec
dec
sti
inc
test
mov
cmpb
inc
mov
jnp
mov
push
aaa
jns
idivb
rcll
push
orb
outsl
push
inc
xchg
cmc
xor
lahf
xchg
push
leave
sbb
aam
sbb
mov
xchg
loop
push
pop
xchg
pop
xorb
cmp
scas
push
leave
filds
addr16
bnd
into
xor
mov
push
cmp
ds
mov
aaa
add
add
push
jnp
dec
and
and
je
xchg
xchg
pop
adcl
movsb
xlat
loopne
sahf
ret
jb
fsubrl
gs
fdivrs
mov
loope
hlt
aaa
xor
jno
jmp
test
mov
ja
in
fdivrs
mov
scas
mov
movsb
inc
nop
mov
daa
cld
out
jo
xchg
cmpsb
sbb
fdivrp
sahf
sbb
dec
dec
test
push
cs
movsl
lret
loop
sbb
mov
fldcw
push
add
xor
dec
adc
out
pop
fldcw
fs
and
mov
lcall
les
lea
sar
push
and
cmp
out
mov
lods
rcr
mov
loopne
imul
mov
sbb
icebp
adc
sbbb
stc
movsb
mov
mov
sbb
cs
cmp
jp
sub
lcall
jecxz
stos
aas
adc
jne
mov
sbb
mov
aad
inc
mov
push
cmpsl
inc
pop
add
sub
hlt
add
ret
fnclex
and
sarl
roll
ds
mov
adc
xchg
cltd
imull
lds
mov
and
out
lds
sbb
jae
sub
jae
pop
mov
xor
pop
xor
movsb
cld
test
lret
subb
mov
aad
push
add
pop
cmp
mov
into
mov
decb
outsb
in
and
push
sbb
iret
push
or
movsl
pop
sub
push
mov
push
mov
or
cmc
testb
push
movsl
mov
cwtl
mov
jp
movsb
les
loopne
and
or
cmp
shll
or
jmp
out
fld
mov
dec
lret
std
pop
cmp
adc
push
mov
xchg
mov
cmp
movsl
adcb
js
test
push
nop
xor
cmp
js
dec
cwtl
fmull
dec
leave
sub
mov
dec
pop
in
mov
mov
mov
jle
hlt
mov
imul
dec
lods
in
pop
pop
insb
lds
std
jo
clc
adc
cmp
push
dec
out
pop
inc
popf
jno
mov
pop
mov
ret
int
push
sahf
scas
adc
call
jmp
adc
add
mov
lds
xchg
add
out
pop
out
pop
enter
sub
adc
hlt
loopne
pusha
stc
fs
popa
sub
mov
nop
add
test
lds
into
and
fs
mov
in
sub
jecxz
jne
pop
pop
pop
push
push
push
ret
add
and
int
jg
mov
dec
xchg
loope
sbb
push
add
js
and
mov
imul
and
sti
popf
insl
int3
loop
dec
shl
push
sub
pop
mov
xlat
out
clc
adc
clc
mul
out
adc
aaa
fisttps
hlt
xchg
pop
jle
aas
lods
decb
sti
push
js
iret
and
cmp
xor
shl
enter
pop
test
inc
add
sbb
call
daa
pop
test
int
mov
outsl
js
repz
mov
xchg
lret
jge
arpl
adc
ljmp
sbb
lahf
or
bound
push
aad
shl
lcall
jp
pop
xorl
adc
fistpl
mov
cmp
mov
or
jmp
push
cmpxchg
mov
addr16
pop
xor
std
cmp
push
xchg
scas
nop
movsb
out
rcl
and
jle
leave
daa
lock
je
popa
cmpps
je
movsb
shr
cmp
push
stos
jbe
scas
mov
mov
fbld
aam
adc
movsb
es
inc
cmp
sbb
shrb
sub
mov
stos
inc
sbb
pop
push
fs
aaa
fildll
addr16
sbb
dec
jg
sbbb
jmp
in
std
movsb
les
std
mov
cmp
loopne
in
dec
cmp
add
push
mov
es
add
sbb
sub
and
ljmp
imul
stc
scas
xchg
cmc
jbe
out
repz
hlt
verr
popa
into
jnp
inc
sub
push
into
shl
cmpsl
dec
cmp
js
fidivrs
mov
mov
aaa
stos
stc
cs
cmp
adc
test
call
or
add
add
test
ja
rcrl
xchg
mov
pop
addr16
and
stos
pop
xchg
shr
into
or
iret
sbb
in
jle
pop
pop
popf
mov
out
or
cli
sbb
xchg
repz
fistps
mov
pop
scas
jg
push
jle
out
cmp
inc
push
fisubs
data16
push
scas
sbb
das
mov
mov
aad
fildl
or
cmpsb
rorl
fidivs
jns
mov
insl
jmp
lods
xchg
or
int
pop
pop
jmp
lea
push
sti
aaa
test
push
shrl
sbb
mov
popf
lret
dec
cmpsl
or
stc
cwtl
xor
pop
jae
mov
adc
push
out
push
icebp
pop
aam
aaa
shl
add
dec
add
int3
xchg
mov
cli
mov
push
push
adc
mov
loopne
push
cltd
lret
inc
fadds
gs
sbb
and
cmp
inc
push
fs
inc
pop
dec
aam
in
xor
push
jne
jo
inc
cwtl
jbe
jl
sbb
aam
arpl
and
dec
shr
pop
inc
xchg
or
pop
test
mov
xchg
idivb
dec
repnz
and
and
adc
adc
adc
jne
arpl
pop
or
imul
push
ja
shlb
mov
fldcw
xchg
pop
es
xchg
in
xchg
dec
pop
je
jne
cwtl
push
in
jp
repnz
adc
loopne
pop
push
inc
xchg
jae
clc
sti
inc
inc
icebp
adc
test
cmp
xchg
sahf
stos
cmp
and
in
cmp
stos
sbb
je
xchg
out
stos
pop
nop
pop
vmovdqa
jne
pop
push
ret
rcll
inc
xchg
cmp
sbb
fimuls
mov
in
sbb
loope
add
xchg
jbe
push
paddw
add
jmp
sbb
aad
fsqrt
roll
inc
sbb
testl
mov
nop
cs
int
mov
jl
in
ja
scas
mov
movsl
add
into
push
insl
fsubs
sahf
addl
filds
sub
repnz
aam
xchg
mov
jo
push
lods
jne
pop
pop
aad
adc
mov
xlat
cmp
push
addr16
repz
and
pop
push
cmpsl
pop
xor
addr16
inc
movsb
sbb
outsb
mov
pop
pop
dec
sub
div
dec
pop
lds
fdivrs
into
mov
outsb
and
test
dec
enter
pop
lret
orb
pop
das
repz
mov
cwtl
aaa
jo
xchg
dec
rcll
cltd
int
push
dec
daa
sbb
call
push
in
mov
inc
cld
rcrb
dec
xchg
loope
sbb
gs
rep
push
add
out
or
daa
sub
mov
leave
ljmp
sbb
push
inc
mov
leave
fucomip
mov
ja
lahf
mov
xor
inc
and
cmp
lret
ror
xorb
push
in
and
ret
mov
jmp
rcll
jb
pop
das
inc
sub
mov
popa
stc
jns
xchg
stos
dec
sarl
gs
and
mov
xor
and
adc
mov
adc
mov
jecxz
ss
outsb
popw
stos
daa
cmp
xor
cmp
sbb
sub
data16
sahf
adc
cmp
inc
loope
sbb
arpl
outsb
inc
hlt
mov
icebp
into
adc
xchg
lret
cmp
shl
lret
cmp
push
loop
cmp
adc
mov
sbbl
xchg
loope
xchg
jge
cmp
popf
sub
xor
cwtl
cli
inc
mov
lahf
mov
pop
adc
sub
mov
add
xchg
cmc
js
cli
ja
or
pop
mov
test
add
inc
mov
popf
leave
stos
je
pushl
xlat
push
das
push
mov
and
pop
sbb
pop
sbb
and
shl
gs
roll
dec
adc
scas
sbb
lock
adc
or
jge
push
iret
and
mov
ss
jmp
ss
fisttpl
mov
imul
arpl
into
outsl
mov
outsb
loope
mov
lock
add
cmpsb
cmp
leave
test
fwait
inc
pop
mov
dec
rolb
hlt
outsb
test
jb
fcomi
icebp
mov
and
pop
imul
stos
jbe
test
stc
loop
notl
out
sub
xor
mov
js
fwait
cmpsl
mov
jl
fcmovu
stos
arpl
mov
imul
push
inc
inc
in
push
scas
cmp
mov
out
jmp
dec
mov
and
pop
sbb
sbb
jge
leave
inc
add
push
test
and
push
mov
jp
adc
sbb
cld
jno
imul
sbb
cmpsl
sub
xlat
pop
popf
movsl
lods
cmp
pop
inc
outsb
decb
push
stos
pop
and
mov
cmpsl
loopne
rcrl
in
push
mov
push
out
xchg
jl
jg
icebp
add
push
imul
mov
into
cmpsl
jecxz
xchg
cmp
push
adc
repz
pop
jecxz
sub
lret
add
jbe
mov
cmp
cld
mov
dec
mov
imul
adc
cld
ljmp
dec
stos
dec
and
mov
jecxz
subb
adc
js
lds
mov
inc
xchg
sub
mov
daa
fldcw
and
subl
cs
fwait
xchg
cmp
jmp
out
dec
les
dec
sub
xor
lret
jg
cmpl
call
sub
or
hlt
mov
movsl
push
ljmp
ret
imul
mov
mov
shrb
in
push
sub
in
in
cld
aaa
stos
hlt
shll
bound
inc
sub
sub
push
cmp
ljmp
outsb
addl
enter
std
ret
and
rcrb
subb
pop
icebp
or
ret
push
int3
fbstp
inc
je
insb
lods
loop
les
sbb
jg
inc
in
mov
mov
js
mov
push
addr16
adc
jge
imul
jl
addr16
cld
in
push
fsubrs
adc
shll
add
into
pop
push
adc
out
int
je
sub
das
sbb
std
xor
sbb
fscale
loop
insb
pusha
cmp
fidivl
sbb
pop
roll
popa
shll
stos
mov
jl
loopne
lods
call
push
mov
and
push
push
sbb
and
mov
arpl
lods
imul
sahf
lcall
and
add
jecxz
inc
in
and
jnp
add
aaa
jp
shll
outsl
push
and
xor
mov
mov
sbb
mov
mov
push
popf
fidivrs
cli
pop
adc
dec
out
mov
sub
pushf
or
and
and
mov
mov
pop
inc
addl
adc
loopne
mov
push
jne
pop
frstor
mov
test
lods
xor
add
or
ss
dec
mov
dec
cmp
pop
call
inc
sti
push
mov
fcmovnu
mov
out
mov
xchg
pop
clc
dec
inc
into
push
hlt
dec
sub
xlat
nop
cltd
or
popa
adc
xchg
out
mov
lahf
dec
rclb
adc
xor
mov
fbstp
inc
sbb
pop
fidivrl
or
and
jl
adc
add
dec
cli
sarl
mov
push
mov
sbb
int
fwait
in
repz
dec
inc
jne
outsb
fstps
add
in
xchg
dec
cmp
in
push
test
aaa
cmc
js
dec
cmp
out
outsb
gs
and
shll
lds
pop
jns
cmp
mov
nop
cmp
jg
xchg
gs
pop
mov
data16
sbb
and
inc
ljmp
sbb
mov
out
xor
mov
outsl
xor
mov
xor
adc
push
cmpsl
arpl
inc
fdivl
cld
xor
xchg
in
in
jae
sbb
jp
cmp
ja
movsb
fidivrs
lock
test
sahf
push
in
mov
cmp
fadds
sbb
sub
repz
inc
sarb
cwtl
xchg
cmpsb
xor
out
fcmove
jg
jmp
outsb
push
xchg
and
sar
cmp
xor
fmulp
cmp
repz
ret
xchg
push
popa
loop
mov
or
aam
pop
inc
mov
int
aaa
push
jno
je
pop
dec
scas
cmp
mov
fcompl
dec
cmp
mov
jmp
fnstcw
sti
xchg
sub
adc
pushf
cmc
sub
or
xchg
pop
inc
outsb
mov
fimuls
cltd
xchg
jle
pop
ret
jge
stos
jecxz
mov
or
hlt
ss
ja
pop
in
out
orb
icebp
mov
xor
ss
cltd
and
mov
push
stos
loope
mov
jae
mov
lods
push
jp
pop
outsl
insl
orl
fcomip
rorb
sahf
and
pop
push
cmp
jns
xchg
in
or
pop
rorb
shll
shrd
pop
jbe
fldt
lret
call
fucomi
cmpsl
scas
lahf
jge
sub
cmp
ds
mov
mov
shlb
pop
adc
mov
insb
pop
xchg
or
sub
sbb
sbb
push
sub
dec
pop
repz
das
loope
sub
push
es
sbb
or
int3
loop
cmp
mov
push
mov
fsts
pop
jle
xlat
sub
jle
orb
pop
fs
sbb
xchg
push
cltd
mov
aas
aaa
inc
or
dec
scas
adc
js
mov
movsb
ds
jp
fistps
and
sub
adc
loope
inc
test
and
xorl
repnz
sahf
out
mov
pop
rcrb
mov
mov
movsb
add
inc
or
push
pusha
mov
cld
adc
mov
das
mov
and
xor
out
insl
outsb
pop
lods
xchg
mov
and
fs
and
loope
inc
xchg
imul
lods
xchg
sbb
mov
fiadds
ja
pop
int
sub
jne
add
js
mov
pop
testb
leave
fucom
push
adc
lahf
xchg
icebp
push
jne
add
lret
or
and
mov
push
lock
or
and
pop
std
loopne
insb
add
xchg
shll
lret
xchg
sub
add
loopne
cmpsb
stc
mov
add
pop
dec
mov
test
adc
mov
scas
cmp
data16
xor
dec
int
adc
fs
mov
mov
adc
pop
push
xchg
mov
mov
inc
icebp
adc
sub
jbe
push
lods
stc
push
inc
sub
rclb
scas
adc
mov
push
aad
nop
int
cli
aam
push
push
inc
lock
cltd
andl
lock
cmpsb
sbb
fsubrs
adc
outsb
mov
cmp
push
add
push
dec
xor
arpl
dec
in
mov
push
out
mov
aam
test
out
movsl
or
dec
dec
xchg
push
mov
out
ja
xchg
lret
inc
mov
xchg
mov
jno
pop
lock
cli
repnz
push
inc
xchg
stc
enter
ficomps
bound
int3
sub
or
das
insl
inc
jne
mov
push
jl
jmp
cmpsl
negb
jae
in
sub
mov
or
xchg
cmp
and
or
mov
dec
mov
and
xchg
push
push
int3
call
rcrb
loope
add
mov
mov
mov
stc
repnz
jae
push
dec
cmp
ss
lret
clc
setle
pop
adc
fcmovne
mov
add
fimuls
int
mov
mov
loopne
and
jnp
cmp
cs
fmul
or
les
mov
pusha
mov
mov
cli
push
inc
ret
icebp
push
enter
mov
shlb
loop
mov
sbb
fdivs
shl
xor
push
mov
push
xchg
dec
jmp
in
icebp
pop
pop
arpl
fwait
jae
dec
ss
addb
lret
aaa
std
in
and
sub
add
mov
in
lock
fucomip
fdiv
pop
dec
xchg
jg
push
jle
mov
das
mov
jns
ret
sbb
ja
jecxz
lods
rcll
daa
int
scas
insl
fcmovnb
stos
cmp
loop
push
cmp
fbstp
ror
fs
in
mov
test
sti
sarb
ds
jecxz
cmp
mov
shll
sti
into
lods
dec
pop
push
fwait
les
fs
inc
adc
sbb
insb
sbb
pop
fcmovb
push
pop
fwait
push
pop
push
push
loopnew
pop
add
mov
int3
inc
jae
jnp
xchg
sbb
pop
pop
inc
add
pop
mov
in
sub
sahf
inc
sahf
das
pusha
pop
mov
in
push
xchg
repnz
ja
std
inc
pop
jecxz
or
movsb
push
add
adc
jmp
mov
ret
sbbb
cmp
jecxz
int
sub
xchg
insl
call
je
std
fisttpl
enter
in
xchg
and
inc
jle
enter
testl
fcmovne
test
in
jb
and
or
jg
inc
xor
sub
lret
fwait
cld
jae
iret
cmp
adc
pop
sub
sarl
movsl
add
adc
jb
es
xchg
and
insb
mov
rcrl
adc
cwtl
fcmovu
fidivrl
hlt
test
out
inc
js
adc
repnz
sarb
out
fistpl
xlat
in
pop
rcrb
test
cld
in
push
in
ds
or
push
les
cmc
pop
inc
and
push
jl
ret
or
pop
idivl
xor
mov
test
inc
sub
aad
jecxz
out
int
push
stos
test
push
loope
stos
daa
sbb
insb
fs
dec
test
in
enter
outsb
push
sbb
daa
xor
fnstenv
lret
inc
xchg
addb
out
cmc
jge
fs
iret
cli
xchg
mov
bound
fistpl
les
es
cld
xchg
mov
out
add
lea
or
xor
mov
pusha
loop
dec
ds
es
lods
inc
mov
ja
test
jg
sbb
adc
jo
or
out
subl
dec
fucompp
jo
mov
dec
sub
mov
pop
aad
fs
mov
gs
inc
cmp
repz
movsb
mov
mov
mov
push
scas
push
and
inc
sbb
sub
lods
pop
add
or
fwait
inc
mov
sbb
mov
out
aam
nop
in
fnsave
das
jmp
push
cld
lret
jae
xchg
push
push
xchg
add
mov
scas
mov
addr16
mov
jae
test
inc
std
pop
inc
pop
scas
fnstcw
jecxz
fldt
push
scas
pop
or
adc
push
negb
push
lea
mov
mov
dec
test
popa
mov
notl
ja
or
inc
sbb
mov
pop
mov
and
mov
ja
lods
xor
cmp
roll
daa
jae
push
into
pop
dec
add
cmp
pop
ds
shrb
fidivl
test
fiaddl
stos
cmp
sbb
jno
shrb
adc
mov
jbe
int
cmp
scas
inc
addr16
rorl
jmp
xor
popf
sbb
sub
roll
push
jbe
fwait
cs
in
jnp
xor
lret
or
jns
pop
lds
jnp
inc
pop
ljmp
ds
push
pusha
sarl
aaa
adc
ds
xor
xchg
jp
andb
test
fstl
cmp
cltd
outsb
mov
sub
mov
cmp
fs
dec
loope
jmp
fsubrs
fs
add
ja
mov
sub
cmp
nop
js
adc
or
or
xor
mov
sbb
imul
cmp
mov
gs
je
add
push
aas
cmp
outsl
push
js
daa
pop
loop
divb
push
stos
jb
inc
mov
pop
pop
cmp
inc
es
in
jmp
jae
and
sub
jle
dec
pusha
pop
and
xor
cmp
mov
push
in
sbb
push
stos
fdivrl
jo
and
das
xchg
out
jns
ret
push
sti
mov
fldt
test
aam
pusha
mov
add
out
scas
xchg
hlt
jl
div
inc
jecxz
outsb
arpl
lret
mov
mov
inc
xchg
and
popf
cmp
ja
je
push
sbb
jle
lea
jb
loop
inc
lcall
scas
push
imul
cld
sub
shll
push
rcrl
aaa
sbb
pop
push
inc
notb
addl
ds
cmp
lret
lahf
loop
fldenv
sub
lret
mov
lea
pop
sub
dec
mov
lods
fmul
xchg
adc
imul
cmp
dec
data16
xchg
sbb
xorb
push
push
push
mov
and
mov
mov
sbb
int3
pop
fimuls
fnstsw
dec
test
sar
xchg
and
and
in
xor
test
into
push
imul
xchg
or
sbb
fdivl
pop
lock
incb
mov
xor
in
shrl
push
or
loope
ret
bound
xchg
cltd
mov
dec
loopne
mov
lret
mov
xchg
jnp
jns
inc
push
daa
dec
repnz
cs
mov
jmp
and
mov
adc
add
adc
dec
loope
or
les
loop
jae
push
sbb
daa
fwait
lcall
mov
pusha
insl
xlat
ret
out
frstor
flds
xchg
out
and
sbb
leave
movb
clc
ss
mov
jmp
mov
lcall
sub
cmp
cmp
lock
xchg
xchg
cmp
cmovno
int
dec
xrelease
add
xor
mov
pop
test
mov
std
xchg
xor
les
mov
in
or
push
mov
ds
mov
xchg
in
add
inc
mov
not
inc
sbb
cmp
add
jp
in
ja
or
cmpsb
cltd
lods
adc
xchg
pop
push
sub
dec
xor
adc
xor
push
add
scas
adc
stc
xchg
jno
out
jno
sbb
cmc
rcrl
cmp
or
test
mov
mov
mov
je
inc
add
sbb
push
sub
movsl
mov
js
mov
iret
out
mov
ja
das
or
xchg
mov
daa
mov
mov
ljmp
mov
pushf
mov
dec
sbb
xor
ljmp
cld
jns
jg
sub
and
fsub
push
jmp
pop
popf
jp
or
inc
xchg
lret
inc
jae
jns
mul
loope
gs
sbb
out
fisubrs
rorb
dec
aas
adc
loop
imul
or
dec
testl
mov
push
sbb
shrl
outsl
xchg
movsl
mov
in
mov
popa
and
int
mov
jp
xorb
cmp
cwtl
jae
dec
pop
ljmp
sbb
stos
mov
in
sub
xchg
mov
pusha
push
scas
int3
jg
push
cmp
or
mov
jns
cwtl
in
push
int
imul
pop
cmpsb
lea
xchg
push
pusha
sbb
add
mov
insl
rcr
ret
int3
dec
inc
mov
outsb
push
in
xorl
jge
js
pop
je,pn
adc
add
loop
gs
shld
ret
inc
mov
push
jge
ficomps
xchg
pop
pushf
push
adc
pop
pop
dec
mov
js
mov
mov
leave
jno
mov
cmp
mov
mov
or
mov
rolb
inc
xchg
adc
test
aas
fucom
adc
mov
lret
mov
in
xchg
push
daa
js
add
sub
loop
gs
add
cwtl
add
add
push
je
stc
dec
shrb
cmpsb
dec
jl
aas
mov
cmp
arpl
sbb
add
add
test
cwtl
cmp
int
pop
sbb
popf
subl
inc
cmp
xchg
ja
loopne
push
mov
lcall
push
mov
fildll
or
lds
xchg
lock
mov
cltd
inc
jne
in
pop
ret
and
cltd
test
fs
inc
cwtl
lret
push
sub
std
pop
jmp
cmp
dec
scas
jb
lods
daa
cs
or
mov
sbb
xchg
mov
dec
push
xor
cmp
xchg
jns
mov
adc
dec
int
div
or
or
or
or
cmp
shll
add
and
or
les
neg
adc
leave
daa
sub
fildll
adc
or
push
idivb
or
mov
movsb
xchg
mov
jge
and
sbb
push
push
pop
pop
mov
jne
stos
sbbb
inc
jecxz
mov
sub
dec
push
sti
xchg
ss
mov
addr16
adc
lahf
xorl
ret
orb
or
add
jg
clc
mov
in
fs
adc
popf
dec
jae,pt
mov
imul
mov
and
fisubl
xchg
arpl
cmp
push
mov
ss
add
arpl
adc
and
lret
testl
sub
test
adc
mov
xchg
cmp
jno
cmp
jnp
stos
sar
in
jmp
sub
repz
aad
xchg
ret
cmpsl
stos
and
lret
cmp
cmpsb
dec
cmpsb
jg
adc
js
adc
fwait
mov
mov
mulb
les
jp
lcall
mov
cmpb
pop
or
out
pop
mov
in
mov
lods
lret
fistl
mov
adc
xor
test
clc
leave
pop
mov
movsb
mov
ljmp
insl
mov
pop
sub
mov
lock
pop
repz
mov
xchg
sub
mov
ljmp
rcrb
mov
pop
scas
daa
push
adc
dec
xlat
xchg
mov
pop
cs
xchg
roll
adc
inc
xchg
mov
stc
testl
xor
mov
call
aad
mov
movsb
xchg
lods
inc
dec
and
loope
in
sqrtps
pop
sahf
push
push
mov
in
and
dec
cmp
mov
jb
pop
mov
inc
sbb
shll
and
mov
jge
dec
movsl
jae
icebp
es
loop
inc
pop
rcrl
dec
lods
scas
xor
movsl
sti
push
mov
and
jl
sbb
cli
arpl
add
adc
and
mov
dec
push
pop
xchg
loop
shrl
insb
adc
push
lahf
div
fwait
divb
push
mov
movsb
sub
rclb
adc
and
ja
cmp
mov
aas
insl
loope
and
loopne
loope
and
xchg
js
inc
push
stos
sub
scas
in
xlat
fsub
imul
sub
mov
mov
lret
mov
lds
adc
cmc
jecxz
xchg
xor
filds
mov
add
cmc
and
cld
pop
dec
in
add
inc
jns
jb
cltd
mov
leave
out
mov
add
cltd
mov
in
jecxz
and
add
push
nop
jne
and
jbe
mov
daa
daa
jo
test
or
test
jle
cmp
scas
xorl
cmp
je
out
sub
into
enter
and
in
scas
push
pop
adc
xchg
xchg
stos
shl
mov
sbb
mov
mov
loope
inc
dec
dec
leave
and
mov
mov
pop
add
or
add
push
sti
cmpsb
inc
adc
xor
push
aas
jnp
out
inc
cwtl
sbb
xchg
pop
sub
movsb
mov
add
mov
popf
ja
shrb
sbb
insl
jge
popf
add
jge
mov
scas
cli
adc
push
jg
push
push
mov
adc
jne
out
fsubr
add
mov
xchg
fnsave
faddl
cmp
loopne
or
mov
push
mov
dec
outsb
add
push
mov
ds
iret
mov
test
adcl
mov
mov
xchg
mov
mov
xlat
pusha
mov
push
dec
xchg
inc
lahf
inc
xchg
leave
sub
jg
dec
fldt
cmp
into
xchg
xchg
gs
test
mov
mov
adc
aaa
mov
in
or
mov
hlt
inc
adc
ret
add
push
xchg
xor
jae
lret
xor
mov
xchg
stos
cli
mov
pop
push
cli
push
mov
sbb
push
sbb
mov
int3
pushf
int3
inc
xorb
jbe
sub
adc
orb
push
sbb
std
scas
xchg
pop
cmpb
mov
adc
pop
ja
arpl
sti
jae
cltd
sub
sub
push
popa
push
sbb
cltd
mov
cmpsl
xchg
pop
hlt
sbb
mov
adc
cmp
push
fld
sub
stos
mov
cmp
sbb
dec
mov
outsb
mov
out
mov
or
mov
push
popf
cmp
movl
cmp
ja
dec
sbb
mov
cs
cs
adc
push
push
icebp
ret
cmp
adc
jne
mov
lcall
lods
push
inc
testl
xor
fcomi
sbb
dec
adc
xor
sbbl
les
loope
cmp
out
sti
pop
arpl
sub
fstps
out
and
mov
push
adcb
inc
adc
push
iret
outsb
lods
repnz
stos
dec
mov
fstps
push
mov
mov
popa
cmc
or
or
jae
dec
xchg
inc
orl
add
lahf
mov
pop
push
ret
shr
je
jo
popf
mov
test
stos
int
mov
insb
scas
xor
push
cmp
sub
push
inc
push
repz
sub
lods
sbb
and
and
xchg
popf
rcrl
cmp
lods
inc
test
ret
cmpsl
ffree
ds
add
adc
push
lahf
sbb
pop
mov
lock
pop
dec
call
ret
sbb
mov
xor
xor
and
and
xchg
int3
pop
daa
or
mov
inc
loop
ljmp
adc
and
scas
dec
sbb
test
insl
inc
mov
loope
in
jo
mov
insl
andl
rcll
les
xchg
sbb
jo
add
mov
out
jle
and
xchg
xchg
xchg
mov
shll
leave
add
mov
lret
dec
mov
mov
mov
cmp
int3
sub
push
sbb
mov
in
jge
pop
push
xor
insb
cmp
cmpsb
les
test
jmp
inc
cwtl
or
xor
mov
icebp
push
fchs
and
xor
push
xchg
mov
mov
test
stos
mov
dec
or
test
push
mov
sub
repnz
std
jmp
pop
popf
leave
repnz
das
aas
cmp
adc
fmul
mov
sub
leave
popf
roll
pop
push
or
idivb
push
sub
xchg
es
mov
dec
adc
fadds
inc
or
jge
xchg
and
fdivrp
jbe
sub
and
xchg
jge
popf
sbb
xor
movsb
into
loopne
idiv
inc
sbb
push
aad
xor
adc
test
mov
cmpsl
xchg
and
lcall
xchg
xor
lcall
outsb
sbb
imull
cltd
xchg
outsl
stos
jb
push
mov
jbe
xor
das
mov
cltd
into
xchg
into
idiv
scas
push
inc
xchg
jb
cwtl
jmp
aad
inc
cmp
cmc
push
sti
rolb
fwait
repz
es
subb
gs
hlt
jb
xor
inc
xchg
sub
adc
jae
es
push
pop
fucomip
bound
sub
pop
push
pushf
aaa
adc
cmpsl
mov
mov
in
ds
pop
and
ficoms
addb
hlt
adc
pop
inc
xchg
xor
adc
adc
fdivrl
adc
sbb
pop
and
idivb
shlb
idivl
sub
mov
sub
movsb
iret
add
jnp
jne
js
lahf
leave
out
jle
loopne
mov
stos
jl
jbe
sbb
dec
dec
fsubl
cmp
or
mov
pop
jp
push
aad
cmp
shrb
pop
push
movsb
jb
xchg
es
popa
ljmp
add
lret
push
push
cld
push
jne
jo
outsb
aad
xchg
mov
and
pop
pushf
mov
add
jg
andb
adc
pop
push
orl
out
das
dec
mov
cmpsb
les
mov
out
pop
faddl
repz
scas
xor
popa
mov
icebp
inc
movsl
xor
stc
push
mov
mov
pop
aas
mov
fistpl
adc
dec
jmp
out
jl
pop
sub
dec
add
dec
add
scas
pop
ljmp
xlat
mov
dec
mov
dec
mov
pushf
test
inc
int3
sete
into
jmp
pop
xor
mov
add
sub
pop
adc
mov
and
sti
lods
add
in
or
adc
mov
and
lret
push
popa
mov
sti
xchg
add
rcr
dec
popf
rcrb
out
scas
mov
adc
mov
clc
xor
sbb
mov
outsb
fs
mov
mov
scas
loopne
or
sub
cmp
mov
jmp
ret
inc
jno
cmpsl
fistpll
cmp
es
lret
push
fnstcw
pop
pop
cmc
push
push
outsb
fs
shll
icebp
cmp
push
in
sbb
sarb
divb
repz
jg
mov
add
dec
mov
ss
subl
cmp
pop
xchg
xchg
out
rol
and
loop
inc
fdivrl
fistpll
aam
fstpl
icebp
aas
in
inc
mov
lahf
add
xchg
sub
outsl
jl
fcmovne
fiaddl
push
and
xchg
cld
lea
in
pop
mov
mov
enter
pop
movl
dec
leave
jbe
jns
mov
repnz
sub
rep
lock
or
mov
aam
out
aam
xchg
pop
cli
xor
xchg
dec
imul
xchg
add
out
into
inc
sahf
cmp
dec
mov
jb
cwtl
jle
mov
sti
sub
data16
addr16
sbb
test
mov
xor
dec
stos
sbb
dec
aad
cmp
lods
lods
add
inc
mov
cltd
ljmp
aad
or
aam
cmp
fnstenv
stc
add
jb
inc
inc
fmull
jne
push
dec
mov
mov
cmp
xchg
ret
mov
int3
add
les
add
sub
lret
test
cmp
cwtl
xor
jns
in
mov
fsubl
cmp
std
fsubrl
sbb
pop
mov
ljmp
push
out
arpl
in
aas
pop
mov
in
sub
xor
jae
jbe
js
outsl
push
sbb
xor
xchg
mov
mov
adc
or
adc
pusha
leave
or
xorl
add
cmp
test
aam
mov
push
lret
push
dec
data16
xchg
jmp
push
daa
ror
jecxz
call
mov
pop
mov
xchg
lret
test
das
or
es
xchg
pop
into
adc
pop
push
outsl
push
jge
cld
loope
lcall
inc
lock
mov
lods
xor
shrl
xchg
dec
xchg
das
xor
push
iret
stc
sarb
jb
jno
mov
sub
jmp
movsl
test
cwtl
fwait
lds
inc
xlat
mov
sub
sbb
shlb
or
push
add
aad
rolb
andl
test
punpckhdq
sti
ljmp
data16
jo
fwait
mov
push
jle
sub
mov
rcll
mov
xchg
mov
ss
adc
shr
lods
sub
xor
inc
insb
cmp
or
pop
jb
popf
pop
mov
sbb
stos
pop
sub
xchg
add
or
sahf
jb
testl
enter
dec
inc
jb
pop
fiadds
or
fwait
mov
test
divb
sahf
lods
call
lds
imul
lea
fmull
jb
dec
inc
mov
mov
or
cli
sub
xchg
cld
mov
pusha
loope
iret
psubsb
mov
or
test
jp
mov
inc
sbb
push
fcmovnb
mov
outsl
push
loop
ret
or
cwtl
mov
cld
sbb
dec
out
push
shr
int3
add
jecxz
adc
push
call
adc
jl
add
dec
push
mov
cmp
mov
xchg
in
and
les
dec
leave
lods
jae
pushf
inc
out
jge
cmp
mov
inc
push
mov
push
jo
jle
xchg
imulb
insb
sbb
fstpt
mov
sub
cmpsl
sbb
das
test
mov
push
movsl
orl
fwait
hlt
repnz
cmpsb
or
stc
or
xor
add
mov
fstps
xchg
fucomp
data16
imul
gs
mov
iret
xchg
insl
xchg
jmp
mov
lahf
in
rcrl
addr16
add
or
std
sbb
mov
hlt
push
xchg
stos
xchg
in
mov
cmp
xor
push
pop
pop
cli
nop
imul
ss
lods
int3
pop
fs
arpl
pop
xchg
enter
sub
loopne
das
dec
jnp
ret
pop
xor
cltd
fcompl
inc
adc
rcl
pop
data16
inc
dec
and
dec
push
test
lret
shl
ret
inc
add
adc
mov
mov
in
jae
gs
jle
ljmp
fistpll
addr16
xor
sahf
pop
rolb
insl
sarb
pop
and
cmp
test
push
roll
pop
les
pop
fistps
sarl
mov
popa
add
push
inc
inc
adc
or
daa
rcrb
mov
sub
rorb
mov
or
sbb
sbb
mov
fdivrl
jp
loopne
and
mov
or
cmpb
push
xor
outsl
mov
mov
xchg
mov
lods
cmp
rcll
sbb
aam
mov
mov
ja
and
jge
add
stos
pop
or
stc
loopne
subl
data16
movsb
pop
call
mov
dec
outsl
subl
data16
in
mov
jb
into
in
cmpsl
cmpsb
shlb
movsl
and
mov
pop
add
mov
add
push
jns
jmp
lds
out
and
jns
sbb
mov
mov
or
xchg
xor
pop
xchg
push
mov
dec
adc
icebp
mov
jb
jecxz
movsb
sbb
dec
mov
pop
mov
and
push
jns
mov
fxch
mov
mov
andl
cld
mov
imul
lock
jne
ss
cmp
cwtl
and
add
loope
xchg
mov
jp
cs
cwtl
imul
xor
inc
dec
jns
stos
sahf
xchg
mov
inc
je
sarl
and
fs
add
sahf
pusha
les
hlt
rcll
jb
mov
and
jp
push
jl
repz
bound
pushf
xlat
push
ror
clc
stos
cmp
jo
rcl
and
mov
cwtl
pusha
lcall
jl
shrl
movsl
jg
add
xor
int
and
pop
push
fwait
idivl
dec
sub
decb
daa
and
int3
mov
push
jnp
add
daa
push
add
out
sub
test
push
sub
sbb
add
lcall
dec
jmp
jnp
scas
and
ja
jp
out
addr16
jge
push
sar
mov
out
push
mov
mov
fs
dec
call
xchg
sbb
jbe
or
out
sbb
shrb
mov
mov
inc
pop
fstp
popa
xor
pop
repnz
pop
fwait
push
imul
adc
rsm
gs
mov
cmp
ds
mov
cs
dec
push
sbb
cld
pop
and
hlt
sbb
pop
mov
push
cwtl
adc
aam
inc
mov
inc
test
and
jb
test
inc
xor
inc
push
add
addb
sbb
nop
xor
jnp
xorb
sub
mov
ljmp
stos
sahf
out
femms
std
pop
cli
ret
in
outsb
js
std
add
mov
dec
in
ss
out
mov
jmp
push
xchg
pop
sar
sub
hlt
in
sbb
xor
stos
lods
into
xchg
dec
imulb
insb
lods
adc
xor
sbb
int
push
es
mov
xor
push
test
inc
ja
fwait
mov
cmc
enter
psllq
call
mov
jmp
ja
mov
int3
inc
popa
ljmp
iret
in
lock
pop
in
inc
es
cmp
stc
mov
into
js
xor
cs
add
ljmp
adc
or
test
inc
inc
jge
cmp
addr16
jno
scas
lcall
rclb
int
and
xchg
jle
cltd
adc
or
ljmp
cmpsb
add
push
popf
popf
xor
xchg
leave
shlb
fsubrs
sbb
fistps
into
cmpsl
pusha
inc
data16
sbb
mov
es
pop
leave
ss
jo
and
out
out
fimull
ss
stos
jg
stos
mov
xchg
xchg
popf
sbb
scas
sub
and
sub
or
jg
sbb
xchg
ss
lret
mov
xor
xchg
inc
jge
adc
adc
dec
mov
add
scas
push
push
in
scas
lea
sbb
pop
mov
mov
enter
icebp
pop
or
outsb
dec
sbb
sti
push
rorl
js
sbb
fsubr
xchg
mov
jl
cmp
mov
repz
and
hlt
in
sub
imul
sbb
inc
push
or
jb
pop
out
or
or
repnz
inc
mov
cli
mov
rcrl
dec
dec
adc
shll
jae
loopne
mov
test
pop
mov
push
or
pop
and
adc
dec
ds
jae
movsb
das
mov
imul
mov
fscale
sti
push
icebp
lock
dec
xor
dec
push
cmpsl
fisubl
pop
push
mov
jb
sti
push
xchg
pop
dec
stc
mov
sub
cmpsl
xorl
jb
push
inc
adc
add
ret
jbe
ss
cltd
sub
push
pop
int3
data16
xchg
sbb
loop
push
jle
sahf
adc
mov
rorl
mov
jno
rcrb
aas
leave
jmp
mov
mov
test
aas
xor
sbb
cwtl
call
lea
cmp
fcmovb
inc
mov
inc
xchg
mov
push
inc
jnp
out
inc
lcall
xor
ret
dec
mov
mul
mov
aam
orb
lds
sub
sti
gs
add
cmp
xchg
adc
repnz
pop
mov
lods
sti
adc
mov
sbb
or
icebp
mov
push
lock
mov
mov
sbb
push
jg
in
lds
push
cmp
cld
andps
stos
enter
push
adc
fmull
xorb
push
es
loopne
fidivrs
jnp
repnz
pop
add
lea
cli
and
mov
sbb
ret
xchg
outsb
adc
mov
xchg
repnz
repnz
das
lret
jbe
outsl
sbb
data16
push
or
inc
inc
push
mov
adc
mov
lcall
movsb
dec
shr
add
xchg
sbb
inc
mov
mov
cltd
mov
leave
mov
xchg
sbb
rcrb
and
gs
inc
pop
or
dec
nop
rclb
push
clc
jmp
mov
mov
mov
adc
pop
sahf
inc
push
jl
stos
mov
pop
inc
into
push
bound
addr16
nop
inc
jnp
or
jb
fwait
pusha
lahf
pop
jle
dec
lret
stc
mov
fistl
sub
inc
testb
add
cwtl
loopne
clc
push
cmpsl
cltd
sub
xor
jl
cmp
sarl
sub
test
jge
add
mov
push
cwtl
push
into
adc
xchg
pop
ljmp
iret
or
lods
or
pop
incb
pop
mov
pop
or
push
sub
into
out
loop,pt
pop
add
iret
lret
dec
lods
fcom
loop
sbb
shrl
push
jns
in
mov
hlt
sub
sub
leave
fs
popa
mov
inc
jae
mov
lea
mov
mov
dec
jle
mov
or
stos
out
call
je
fucom
push
mov
fistl
inc
jge
imul
push
cmp
inc
movsb
out
decl
popw
and
iret
jno
jne
mov
orl
and
int
mov
cmpsb
les
leave
into
dec
ret
pop
xlat
sub
stos
add
fisttpl
mov
jne
inc
and
and
data16
mov
fwait
lods
ljmp
push
mov
xor
repnz
pop
pop
adc
addr16
call
xchg
lods
jne
adcl
sbb
loope
iret
dec
xlat
push
cltd
rcrb
pop
xchg
or
outsl
push
sbb
fldl
xlat
stc
cmp
sub
sub
pop
ret
popf
lods
sub
and
dec
or
test
mov
ficomps
cltd
movsl
shl
push
test
push
out
mov
push
mov
inc
out
sbb
lods
xchg
in
pushf
leave
inc
iret
rcl
negl
inc
addr16
roll
pusha
push
scas
inc
mov
lock
cltd
xor
add
lcall
or
jl
aaa
in
jmp
test
dec
out
rcll
pop
out
dec
idivl
int
fistps
fstpl
out
into
jno
testl
xchg
add
adc
shlb
push
xchg
add
mov
movsb
sub
dec
divb
lea
mov
sahf
mov
lods
out
xlat
xor
inc
mov
jns
out
inc
lret
jne
repz
iret
sbb
enter
or
mov
test
test
mov
cmpsb
int
xchg
loope
cmp
xor
pop
pop
xlat
mov
addr16
lret
movsb
neg
aas
pop
lret
mov
mov
or
pop
cs
insl
test
adcb
mov
pop
movsl
xchg
andb
fadds
dec
shr
jno
imull
inc
pop
shrb
gs
jne
mov
xchg
adc
enter
fwait
test
fwait
jnp
push
test
dec
mov
push
adc
cwtl
loope
dec
push
or
adc
ret
add
insb
jns
sbb
add
daa
sbb
adc
clc
cmp
cwtl
mov
idivb
insl
adc
push
mov
out
xchg
cmpl
cs
aas
cmpsl
pushf
add
test
pop
stos
xchg
bound
bound
addb
repnz
pop
sti
xlat
mov
loop
jecxz
push
sbb
lock
xor
in
testb
push
jge
nop
shlb
repz
out
xchg
outsl
lret
push
lret
or
pop
pop
jecxz
xchg
aas
scas
fistpll
mov
test
and
mov
stc
sbb
scas
aam
cmpsl
lcall
out
mov
add
pushf
jne
int
xchg
or
iret
push
and
test
hlt
loop
popf
push
fsubrl
cmp
inc
mov
bound
fwait
lods
daa
dec
fdivl
iret
mov
mov
shlb
push
aam
jl
mov
cs
mov
iret
out
cmp
mov
lods
shlb
leave
or
aas
or
push
scas
jo
fbld
push
popa
and
mov
dec
scas
iret
inc
sub
xor
pop
mov
inc
rcr
popa
sbb
lds
dec
in
mov
pushf
and
roll
sub
lret
add
addl
dec
ljmp
test
and
outsl
mov
sbb
jnp
cli
or
sbb
daa
sbb
imulb
fs
test
pusha
push
jb
pop
xchg
iret
push
xchg
nop
ljmp
push
sbb
imul
sti
aas
ficompl
pop
insl
ficoms
xor
xor
xchg
std
mov
sub
js
xor
sarb
roll
push
out
outsl
or
push
push
push
mov
jno
sbb
bound
cmp
mov
inc
loope
lds
pushf
lods
mov
jae
fstl
xchg
jnp
insb
cmc
cltd
xchg
cmp
mov
insl
out
dec
cmp
outsl
dec
dec
xchg
les
dec
insb
int3
mov
inc
or
sub
test
jge
or
aad
push
int
inc
je
sbb
lret
mov
mov
mov
fdivrs
popf
cmp
or
mov
pop
aaa
mov
jae
and
mov
pusha
xchg
mov
nop
and
imul
pop
iret
rcrb
cmp
sbb
dec
sbb
sarb
xor
push
data16
icebp
xchg
andb
jnp
xor
out
sar
push
adc
jl
dec
mov
jg
sbb
js
mov
daa
cld
xchg
lods
xlat
test
xlat
mov
cmp
sub
jns
pusha
js
jl
icebp
xor
outsb
dec
jecxz
or
lahf
or
mov
pop
test
push
inc
fidivrs
push
dec
push
dec
ret
test
sbbb
inc
mov
push
or
sub
and
sbb
mov
pop
push
stc
imulb
jle
mov
inc
and
in
repz
xchg
push
push
adc
add
fldt
mov
mov
sbb
in
mov
push
dec
dec
cli
sub
and
in
scas
test
sahf
cmp
out
imul
mov
out
xor
data16
xor
mov
mov
int
pop
shll
ror
xchg
fdivrl
dec
add
push
mov
dec
jns
testb
les
jecxz
mov
fdivl
int3
clc
scas
shrl
in
test
inc
nopl
cmp
mov
cwtl
xlat
insb
dec
loopne
movsb
sti
lods
jne
imul
out
pop
sub
jle
stos
adc
dec
sbb
repz
dec
int3
fldenv
aam
xor
push
mov
or
dec
cmpsb
cmpw
jecxz
sbbb
inc
movsl
xchg
fiadds
push
test
dec
ja
faddp
sbb
filds
pusha
pop
and
sahf
popf
sub
push
sbb
pop
mov
and
bound
fstpt
xchg
sbb
lahf
sti
cmp
leave
rclb
out
xor
leave
push
mul
rcrb
pop
push
xor
add
mov
clc
sub
adc
lcall
out
jne
xchg
lret
or
in
rol
and
inc
jnp
pop
adc
jo
mov
push
or
or
hlt
add
xchg
cmp
cmp
loop
and
xchg
shll
test
cmpsb
loopne
aaa
and
inc
test
jmp
std
cmp
xchg
jne
outsl
scas
sbb
ja
xor
addl
lds
popa
mov
push
mov
adcb
mov
adc
mov
mov
sbb
push
ja
add
iret
test
hlt
leave
sbb
adc
sbb
xor
ficompl
add
pop
inc
aad
push
imul
pop
inc
jbe
das
jne
out
or
les
pop
das
orb
jns
arpl
test
ret
int3
mov
and
mov
xor
jno
cwtl
mov
adc
add
xchg
inc
and
mov
jns
xor
add
dec
lcall
xor
pop
test
mov
insb
scas
nop
add
inc
repz
or
mov
sub
push
in
mov
mov
stos
add
xor
das
mov
nop
fdivl
shll
popa
ja
inc
scas
int3
pushf
mov
mov
orb
gs
or
lcall
jb
xchg
cmp
push
rol
xor
fistpl
xchg
lcall
and
sub
push
xlat
js
mov
popf
js
dec
js
sub
idivb
ficoml
and
jnp
rcll
mov
jne
dec
adc
fsub
adc
sub
fcompl
fisttps
or
pop
lret
dec
sbb
or
jg
push
sbb
xchg
sub
inc
dec
cmp
sub
sbb
adc
and
mov
hlt
nop
jae
int
inc
fadds
inc
clc
mov
xor
je
sbb
imul
jg
push
imul
std
in
mov
js
fsubrs
test
das
mov
scas
mov
xor
ss
mov
sbb
cmc
add
mov
test
xchg
mov
in
inc
dec
notb
mov
mov
push
jns
jmp
jo
addr16
pushf
icebp
mov
mov
and
push
jno
ds
cmp
loope
loopne
xchg
js
pop
mov
rorb
sub
ljmp
jp
mov
or
add
outsb
push
frstor
mov
lds
aaa
xor
add
movsl
adc
or
xchg
out
cmc
pop
mov
ficomps
xchg
out
mov
lea
ffree
jecxz
sub
ret
fnsave
mov
shrb
xor
mov
xor
jnp
insl
outsl
out
ret
das
jl
cld
enter
inc
es
js
rol
xlat
or
roll
inc
sti
xchg
jg
pop
or
mov
clc
cmp
psubsw
xor
xchg
or
jno
std
xlat
mov
jns
cmp
mov
popf
js
out
into
sub
inc
sub
inc
daa
lods
fwait
xchg
ficompl
cld
ror
sub
fidivrl
push
xchg
cmp
pop
fsubs
sti
pop
fisttps
xor
jo
or
aam
leave
enter
das
daa
and
cwtl
mov
rol
popl
jg
movsl
push
mov
xor
sbb
add
nop
or
add
sub
xor
dec
pop
leave
push
aaa
and
mov
cltd
fldl
adc
xor
pop
adc
outsb
lret
loop
push
dec
jg
imul
int3
push
js
int3
jmp
sarb
xchg
pushf
jmp
aaa
sahf
push
sti
mov
sbb
sub
arpl
mov
push
pop
jge
icebp
popa
and
add
push
cmp
bnd
push
movsl
fdivl
sbb
fadds
inc
fbld
hlt
rorl
bound
xchg
sub
andb
call
daa
mov
outsl
inc
roll
sbb
stos
ret
add
cmp
js
jmp
js
test
or
test
repnz
sbb
mov
pop
movl
sbb
scas
dec
sbb
es
add
inc
xchg
pop
cmp
hlt
cltd
shl
push
sbb
movsb
mov
cli
mov
push
popl
orb
push
sbb
mov
pushf
and
pushf
test
xchg
inc
arpl
loope
mull
mov
add
enter
cmc
cmc
and
movsb
adc
mov
mov
push
ja
or
xor
fucomi
push
mov
mov
add
sbb
add
or
mov
and
push
jno
fcmovnb
xchg
fstpl
and
cmp
jne
pop
sub
shll
sbb
xlat
test
andb
xchg
mov
or
sbb
mov
dec
fcomip
subl
push
sbb
dec
xchg
xchg
xor
jns
jecxz
xchg
in
lahf
dec
ret
cmpsl
icebp
lahf
mov
add
movsl
out
mov
adc
mov
xchg
inc
xchg
push
mov
sbb
or
ret
jnp
loope
into
jle
xchg
adc
pusha
fnstenv
sbb
cmp
push
cmp
xchg
ja
cmp
es
mov
xor
and
adc
lahf
popf
cmp
icebp
pusha
rcl
mov
pop
and
pop
clc
or
fistpl
test
dec
add
fisubrs
push
into
jmp
scas
mov
mov
js
fsts
scas
inc
loope
adc
xor
and
sub
pop
dec
pop
adc
outsl
scas
sub
out
jb
hlt
add
cs
pop
jecxz
dec
mov
fucomp
jno
cmp
sub
push
or
movsb
in
or
or
loop
or
aam
aam
lods
divb
jmp
outsb
je
and
scas
popa
push
or
shr
lret
fcmovnb
mov
lods
iret
and
enter
mov
pop
jge
movsl
aad
jns
push
out
cld
jge
int
mull
call
sub
sub
mov
jp
push
fisubrs
fwait
dec
pop
psrld
mov
xchg
call
mov
in
test
in
in
jo
sbb
scas
xrelease
mov
push
inc
mov
xor
iret
mov
mov
push
daa
add
das
sti
xor
stos
jno
lock
sarl
bound
repnz
outsl
mull
inc
aad
clc
add
sarl
mov
jno
jns
loope
sub
cld
xchg
negl
mov
sub
fmull
add
xchg
mov
sbbb
adc
sbb
cmp
push
data16
jno
jp
popa
mov
mov
or
shlb
and
sub
xor
push
add
out
push
mov
mov
mov
inc
int
dec
sarl
sbb
fisttps
mov
popa
fmul
xor
inc
pop
fs
jl
out
sbb
mov
test
out
and
adc
int
hlt
push
icebp
std
jb
andb
lea
fst
psllq
adc
sub
sarb
and
dec
adc
inc
clc
mov
and
loopne
or
sbb
mov
add
ss
push
or
push
mov
jp
mov
mov
xor
xor
lods
outsb
arpl
lcall
sbb
stos
icebp
cmp
mov
and
leave
fdivs
inc
inc
pop
scas
lea
and
push
and
daa
push
lds
inc
ret
cmpsb
fwait
mov
xor
xchg
lods
cmp
cmp
es
cmp
and
ds
sbb
scas
sbb
xchg
xlat
dec
ja
mov
add
and
stos
insb
push
cmp
mov
fistl
in
loope
data16
in
sub
sub
shlb
outsl
fists
rclb
mov
insb
xor
add
fcomps
jb
jae
sub
into
xchg
pop
and
adc
sub
cmp
dec
imul
popa
inc
add
dec
pop
and
push
subl
mov
les
mov
pop
or
mov
dec
sbb
pop
jne
cmp
out
shlb
fwait
imul
pop
sub
cmp
jne
or
xor
lcall
cwtl
mov
lods
shrb
inc
aas
repnz
in
push
in
movsb
push
xchg
mov
mov
cmc
push
and
sub
xlat
pop
push
into
mov
hlt
sub
inc
jne
push
push
push
popf
xor
mov
cmp
push
and
jp
mov
add
cwtl
xchg
std
push
mov
shll
xchg
sub
ja
jo
jmp
jg
inc
fiadds
pop
inc
mov
jns
pop
add
popl
imul
xor
cli
sbb
sub
cltd
push
mov
push
decl
mov
xchg
fwait
cwtl
cltd
cmp
sbb
cwtl
or
sbb
sub
jns
ret
jae
push
imul
mov
jecxz
pop
jle
inc
jecxz
and
ficomps
xchg
fucomip
jb
fwait
or
add
xor
xchg
cmp
icebp
cmp
add
ficompl
mov
pushf
xchg
jnp
inc
ret
xchg
push
pop
sbb
mov
sahf
incb
in
pop
daa
sbb
testb
fmull
repnz
xor
outsb
out
mov
mov
inc
cmpsl
sub
scas
sub
into
cs
pop
push
js
xor
pop
cmc
sub
xchg
sbb
pop
cmp
xor
cmpsb
call
or
out
pop
pop
cltd
pusha
in
push
xchg
sub
cmp
imul
push
gs
push
push
ja
aam
mov
sbb
scas
jae
mov
mov
dec
lret
pop
xchg
sub
std
outsb
cmpsb
pop
add
cmp
mov
push
push
jns
out
stos
in
scas
jae
jp
add
add
xchg
push
test
adc
jns
sbb
pop
cmpsb
jecxz
mov
es
pop
std
sub
into
add
pop
out
arpl
stos
xchg
hlt
adc
xor
mov
xchg
movsb
ficoml
sub
dec
pop
push
jl
push
cmp
inc
push
push
inc
enter
push
mov
ret
inc
ret
in
pop
das
xchg
push
dec
aaa
cwtl
in
in
cs
push
and
fdivs
ret
jbe
push
cwtl
jg
adc
int
imulb
call
and
jb
cmpsl
jle
cmp
adcl
xchg
lahf
gs
mov
daa
arpl
mov
xlat
mov
mov
push
jnp
adc
or
int
das
iret
sub
clc
jo
ljmp
jne
addr16
addl
and
call
ss
test
cmpsl
jb
mov
jecxz
jbe
jg
lods
add
inc
pop
jo
jne
cmpsl
aad
gs
fs
imull
or
icebp
push
ds
cmp
imul
xorb
pop
add
mov
sbb
nop
loope
dec
mov
lea
enter
or
cmc
cld
pushw
outsb
lods
pop
cmp
push
cmp
push
mov
push
or
mov
out
adc
xor
shlb
push
mov
fucomi
fdivrs
cmc
push
fcompl
mov
xor
xor
sub
adc
mov
stc
test
mov
pusha
mov
jmp
sbb
xor
clc
inc
push
repz
ja
outsb
push
out
dec
dec
jb
loop
mov
int3
jne
add
sahf
mov
push
mov
mov
dec
aad
popa
fmull
push
cmp
or
pop
cmc
pop
movl
in
mov
pop
cltd
shr
cltd
iret
lcall
jo
inc
mov
ljmp
cmp
inc
enter
mov
andb
fadds
inc
push
lea
push
or
add
rolb
loope
or
dec
xchg
lods
mov
xchg
loopne
lock
ss
fwait
xchg
aad
dec
ss
xor
inc
inc
mov
aaa
mov
mov
stos
pusha
sub
push
and
sbb
add
xor
jmp
clc
dec
call
cmp
nop
movsb
pop
mov
ja
fisttpll
mov
mov
out
outsl
pusha
jp
mov
inc
adc
pushf
test
stos
push
sub
imulb
cmp
cmp
xor
out
iret
xor
fmuls
dec
aas
or
enter
je
xor
cld
adc
iret
mov
push
mov
fsubl
jns
push
xchg
jb
mov
js
cmc
repz
dec
and
pop
pop
xchg
divl
xor
sarl
lds
stc
fidivl
sti
pop
imul
cli
adc
push
faddl
sub
enter
dec
in
js
cmp
insb
aaa
inc
in
insl
and
fcomi
idivb
or
mov
mov
xchg
out
mov
xor
push
xchg
int3
push
push
jae
jp
inc
movsl
add
jb
mov
cmp
sub
pushf
fistpl
xchg
xchg
sbb
dec
jae
mov
pop
aas
adc
add
mov
jl
xor
mov
mov
fisttpll
xchg
jnp
xchg
sub
pop
mov
bound
jb
push
push
fwait
in
not
sti
adc
pusha
mulb
xchg
int3
cmpb
pop
dec
adc
mov
scas
xchg
sub
and
test
xchg
and
repz
jp
jne
jno
outsl
jne,pt
aad
mov
stc
xchg
fisubl
cmpb
das
cwtl
shll
mov
push
pop
aam
mov
pop
roll
and
or
cwtl
and
mov
sub
push
jmp
push
fisubs
jbe
cmp
out
add
push
lea
mov
and
xor
jg
aam
sbb
sahf
ret
cld
mov
repnz
sbb
rol
jae
in
xor
bound
idivb
inc
add
push
and
sarb
rorl
mov
adc
fs
cmp
add
inc
cmc
mov
ret
push
insl
adc
pop
mov
movsb
pop
jecxz
add
out
fmull
enter
mov
jns
inc
dec
in
xlat
dec
jbe
pop
push
test
xchg
cmp
ret
xchg
sub
imul
in
sub
mov
es
pop
mov
mov
jne
mov
jg
out
dec
idivl
sti
arpl
and
stc
lahf
jge
fwait
pop
jae
and
mov
and
adc
inc
or
cmp
inc
cmpsl
pop
pop
addr16
int3
inc
sub
sti
addl
pop
inc
lock
sub
xor
hlt
mov
xchg
test
push
ds
ret
sub
jns
fildl
cmp
andl
add
mov
ja
scas
sbb
push
xchg
or
fnsave
fisttpl
sbb
dec
lock
daa
and
push
ret
daa
out
ja
mov
sbb
dec
adc
sbb
mov
stc
cld
mov
cwtl
mov
mov
xor
cwtl
leave
cs
int
sub
lods
mov
or
inc
into
loopne
mov
popf
outsb
mov
and
and
pop
pushf
mov
imul
dec
mov
jns
lods
mov
cmc
imul
loop
add
mov
in
hlt
in
dec
mov
shll
enter
mov
mov
inc
loope
movsb
cmp
and
aaa
test
psubw
mov
js
xor
push
add
mov
dec
js
aaa
xor
or
outsb
int
mov
fistl
lret
lret
test
pop
inc
arpl
or
mov
and
in
call
dec
cmp
add
aad
xchg
js
jb
andb
arpl
in
adc
push
cmp
mov
xor
in
dec
aam
inc
jge
psubd
mov
xchg
xor
cmp
mov
xor
mov
lret
mov
in
add
jl
inc
lods
pop
xor
add
mov
pusha
loope
jmp
test
scas
fbld
fildll
sub
das
mov
hlt
scas
jne
shl
popa
arpl
out
jae
push
roll
jae
push
xor
jo
fisttps
jmp
mov
xor
jns
fidivrl
add
icebp
aaa
imul
pusha
xchg
lret
push
repnz
js
inc
mov
iret
aam
rcr
pop
cmpsl
es
add
xlat
fwait
aas
and
and
push
xor
cmpsb
shlb
lret
xchg
stos
sub
push
arpl
jo
cld
xchg
in
jns
lds
mov
imul
fistpl
fistpl
std
rcl
notl
mov
cwtl
add
mov
and
daa
add
pop
js
arpl
cli
push
sub
test
adc
mov
sub
mov
pushf
test
movsl
imul
pop
xor
ficompl
sbb
test
mov
cmp
mov
mov
insl
icebp
pop
outsl
pop
sub
inc
cmp
das
in
call
popa
mov
js
test
ss
push
es
inc
sbb
mov
in
mov
push
int3
add
imul
in
push
or
xor
sbb
sub
das
mov
sti
lret
es
insl
aam
mov
and
pop
pop
daa
and
pop
test
ror
add
shlb
push
xchg
adc
and
int3
mov
scas
add
xchg
fiadds
or
or
or
xlat
or
mov
ret
push
ja
insb
pop
insb
in
loopne
lock
ja
push
jns
sub
adc
roll
dec
push
cltd
outsb
orb
stc
mov
in
inc
and
mov
adc
and
push
in
scas
and
mov
in
and
jnp
negb
in
dec
aad
fisubrs
sbb
nop
mov
ds
xchg
xor
hlt
pushf
loopne
push
movsb
cld
loop
aam
add
push
push
cli
aad
icebp
sbb
or
jge
mov
mov
adc
mov
pop
push
sahf
fbld
push
cmp
jge
adcl
clc
xchg
pop
xor
jge
test
xor
jns
sub
loop
fwait
xchg
aaa
push
inc
jo
es
jg
bts
aam
cmp
pop
jp
enter
add
clc
dec
jl
or
dec
loope
imul
or
add
and
stos
lahf
cltd
xor
fimuls
pop
mov
daa
sub
add
add
jge
push
xor
repz
add
mov
push
pop
pop
lods
inc
in
sbb
fdivrs
fisubs
imul
jle
addr16
aas
stos
shr
mov
mov
inc
or
data16
das
shlb
mov
mov
mov
jecxz
mov
pusha
andb
mov
inc
testl
mov
ss
cld
sub
push
adc
sbb
add
mov
pop
push
push
inc
jns
lea
dec
shlb
xchg
mov
clc
insl
sbb
mov
dec
cmpsl
dec
sbb
adc
push
jae
pop
orb
mov
cli
mov
xor
and
and
lds
sbb
mov
aas
leave
jae
repnz
jg
xor
push
int
sub
fwait
in
jbe
rorb
negb
mov
jle
sarb
fsubl
je
and
push
adc
aas
inc
leave
xchg
push
cwtl
test
outsl
add
lahf
and
sub
and
inc
cmp
pop
cmpl
add
faddl
pop
fmull
outsl
mov
ror
or
ja
xchg
aas
int
mov
sub
cld
and
mov
clc
or
jno
adc
sub
jge
repnz
movsb
mov
jo
mov
idivb
push
loop
shll
das
sbb
push
lahf
adc
sbb
ss
or
push
fmul
xor
imulb
sub
mov
int3
dec
and
inc
insb
pop
jmp
mov
and
jae
jmp
xor
xor
sbb
mov
mov
pop
ja
out
scas
bound
sub
out
sbb
outsl
leave
inc
roll
dec
je
rcl
adc
push
cmp
mov
int3
xorb
pop
sbb
into
push
scas
mov
fisttpl
pop
push
mov
add
xor
add
ret
sbbb
and
mov
mov
add
sbb
insl
fsts
push
pop
mov
shl
imul
xor
jbe
cmp
call
xor
mov
data16
dec
jp
jl
outsl
cmp
inc
mov
xchg
xor
and
push
insb
ret
jp
xchg
and
mov
rcrb
jmp
fcoml
cmp
dec
inc
in
stos
cmpsl
pop
ljmp
std
lock
insl
enter
mov
imul
lods
inc
imul
dec
sahf
movsl
insl
sbb
pop
mov
aaa
push
sbb
test
push
fwait
or
pop
cwtl
sub
xchg
inc
mov
ror
adc
rcl
push
std
adc
xorb
lods
movsl
aam
sbb
inc
test
push
inc
pop
pop
adc
add
pop
fwait
add
mov
sub
mov
clc
or
jae
sub
sbb
pusha
movsl
inc
dec
dec
lods
ljmp
movsl
fisttpl
lret
scas
mov
cmp
sbb
pop
insb
mov
test
mov
jnp
lods
mov
add
jmp
lds
pop
xor
sbb
pushf
rclb
daa
lret
test
enter
aad
pop
cli
and
scas
dec
call
out
mov
mov
addr16
mov
ss
and
and
xchg
or
inc
pop
inc
mov
lahf
pop
rclb
jl
push
ss
or
mov
insb
inc
lods
sarl
popa
hlt
stos
and
movsl
pop
mov
adc
dec
int3
mov
add
jg
or
jmp
xchg
mov
mov
cmp
int
sub
push
fmulp
jge
std
leave
dec
push
xchg
inc
jp
pop
adc
mov
in
addl
in
xor
sub
lods
in
xor
add
stos
fisttpl
ljmp
jge
or
sub
xor
xchg
rorb
jle
mov
xor
push
ljmp
sub
int
js
sbb
into
call
cmp
mov
or
aad
inc
jb
pushf
xlat
ljmp
cld
je
fwait
test
mov
sarl
out
popf
cld
sub
xlat
int
jb
decl
jmp
stc
lcall
sbb
or
pop
fisubrl
xor
popf
push
xor
mov
pop
jne
sub
jmp
test
adc
jecxz
inc
out
out
ret
cmp
mov
cmpsb
les
sub
lock
out
mov
inc
ds
adc
xor
rcrb
aaa
inc
jo
mov
es
nop
push
dec
mov
popf
jae
dec
sbb
and
cli
bound
pop
pop
ds
imul
cltd
sbb
lock
lds
loope
adc
xchg
inc
daa
jbe
fidivl
mov
xchg
mov
jno
out
mov
subl
leave
or
mov
in
mov
adc
fnstsw
xchg
push
xor
popf
cld
rolb
pop
add
fs
push
and
lds
inc
data16
and
sub
imul
fcoml
push
insb
ficompl
movsb
add
insl
or
fstl
push
cmpl
subb
sub
out
jmp
scas
sar
inc
cld
adc
insl
sub
popl
nop
dec
sahf
pop
ret
jo
insb
mov
mov
call
std
call
and
loop
sub
pop
popf
setno
pop
inc
pop
sbb
xchg
lea
es
loopne
out
sub
neg
mov
xor
pop
xchg
inc
int
adc
fmul
mov
sub
xor
push
or
cmp
pop
test
gs
mov
mov
frstor
lods
shlb
xchg
int
stos
lods
lods
jbe
fsubs
mov
les
pop
and
fcomp
or
pop
out
or
dec
imul
mov
mov
or
test
popf
mov
or
dec
and
pop
add
sub
fmull
add
lods
mov
mov
cmp
adc
sub
mov
or
ret
mov
mov
mov
hlt
out
ret
xchg
ljmp
push
popa
dec
dec
inc
movsb
adc
jb
cld
stc
mov
cmp
fdivr
push
and
pop
mov
inc
out
out
fadds
movsl
xchg
sbb
push
int
push
push
repz
push
loop
sbb
dec
adc
rclb
loop
mov
push
and
mov
ret
imul
mov
lods
inc
call
push
push
mov
loope
jg
xchg
fyl2x
mov
and
cmpsl
lods
in
cmpsb
fnsave
ror
jne
scas
bnd
shll
push
sub
cmp
xchg
mov
ljmp
adc
cmpb
sub
jne
adc
push
inc
mov
in
and
popl
push
sub
jo
repnz
out
out
in
in
push
mov
mov
movsb
stc
testl
fdivrs
aaa
leave
xchg
movsb
das
and
bound
das
inc
ja
push
lods
sub
pop
mov
negb
stos
test
xchg
adc
ja
cmc
pop
popf
mov
mov
mov
sahf
cmp
addl
fists
dec
divb
dec
popf
xchg
arpl
ss
cmpsb
icebp
icebp
jns
cmp
push
fs
clc
mov
dec
and
stos
and
or
cmp
out
push
cmp
test
lods
test
les
xor
test
cmp
call
add
mov
rcrb
clc
pushl
sbb
xor
outsb
mov
pop
xlat
repnz
mov
loop
call
cld
fwait
jmp
icebp
ljmp
and
sbb
adc
sahf
push
mov
ret
jmp
xlat
push
je
jbe
stc
ljmp
xor
push
pop
fs
adc
jnp
fldenv
sbbb
mov
loopne
sahf
jmp
rorb
test
dec
push
inc
mov
inc
xchg
xor
dec
mov
dec
add
cmp
rcll
xchg
bswap
cmpsb
setae
test
loope
daa
int3
repz
xchg
in
dec
inc
inc
lock
pop
mov
cmp
sub
lea
sbb
cmp
int3
repnz
shrl
and
mov
loopne
insb
dec
cmp
xchg
jb
dec
jp
and
add
stos
or
pop
xor
sub
mov
mov
inc
cmpsl
mov
or
mov
js
out
xor
adc
insl
push
push
cmp
and
push
xchg
push
movb
mov
ljmp
mov
out
inc
mov
clc
push
mov
jge
mov
sub
jo
fadds
nop
pop
dec
leave
sub
imul
pop
or
repnz
lret
inc
ret
or
in
or
cltd
mov
cmp
adc
cwtl
popa
aam
pop
sub
pusha
je
xor
lods
call
add
test
pop
int3
mov
add
scas
mov
cmp
insb
jge
stc
adc
xchg
outsb
adc
push
divl
mov
jnp
jb
ss
adc
dec
les
xor
fwait
jno
into
sbb
hlt
dec
mov
stos
arpl
cli
stc
insb
mov
lock
stos
lods
inc
dec
jnp
les
movsb
xor
daa
add
jp
pop
add
outsb
in
adc
pop
xor
and
jnp
or
stos
dec
push
fistpl
cld
dec
xlat
add
mov
out
cmp
mov
mov
inc
es
cmp
test
or
jl
lret
clc
lods
mov
jbe
cmp
cmp
enter
repnz
out
adcb
xor
pusha
or
push
push
pushf
pop
pop
mov
mulb
jne
pop
push
cmp
ja
push
lock
aad
inc
cmp
jge
cmc
in
jb
jnp
ss
pop
adc
out
xor
mull
repz
test
mov
in
push
fmuls
inc
xor
jae
jle
mov
ljmp
adc
loop
lods
subb
add
dec
push
fucom
xchg
scas
or
std
pop
cmpsb
pop
mov
and
add
icebp
cld
mov
call
push
push
and
sbb
jo
jns
mov
add
xor
notl
aad
inc
xchg
adc
mov
je
mov
outsb
jp
test
jb
or
sub
mov
mov
loope
add
push
xor
xchg
fcom
sub
xchg
cmpsl
jnp
in
stos
idivb
inc
orl
xlat
lahf
decl
add
push
pop
mov
mov
sbb
cli
xchg
xor
imul
arpl
sub
mov
mov
mov
or
inc
inc
shlb
nop
cmc
jne
inc
sub
add
adc
mov
push
subl
sbb
lcall
daa
loopne
sbb
pop
add
add
gs
es
cli
sub
adc
push
dec
loopne
jnp
pop
dec
ja
or
fildll
sbb
test
int3
cmp
jb
jp
std
xor
push
push
roll
in
inc
dec
faddl
sarb
or
out
scas
xchg
cli
test
mov
push
mov
orl
outsb
mov
mov
mov
jnp
sahf
and
push
fnstenv
mov
mov
ret
sub
push
iret
loop
test
in
movlps
mov
pop
or
cmc
adc
mov
add
adc
js
notb
mov
imul
adc
movsb
and
lea
test
jbe,pt
add
aad
lcall
bswap
je
enter
mov
pop
pop
pop
xchg
cli
sahf
test
xchg
xor
fsubr
mov
aad
sub
idivb
pop
pop
sahf
clc
jp
xchg
mov
addr16
sub
out
sbb
mov
jle
push
fs
movb
sub
or
fwait
add
adc
iret
and
xor
lea
mov
mov
add
xor
or
sti
ds
dec
cmc
push
repz
lret
inc
shlb
xchg
imul
push
mov
outsl
lea
push
sbb
das
aas
add
xchg
js
dec
sti
mov
and
ljmp
xlat
ret
cmpsl
cmp
popf
js
xor
jmp
sbb
add
push
cmpb
and
cmp
pop
lcall
shrb
push
outsl
xchg
jge
das
insb
jg
insb
negl
repnz
and
pop
sbb
jb
outsb
inc
iret
pop
adc
sbb
sub
daa
inc
inc
js
push
xor
xlat
lcall
dec
sbb
jae
test
xchg
pop
call
cs
cmp
shlb
mov
cld
jmp
push
out
gs
sub
mov
add
mov
and
dec
mov
sbb
push
mov
loope
or
push
push
xchg
dec
mov
adc
adc
js
cmp
cli
adc
cli
cmc
push
arpl
stc
and
stc
movsb
or
mov
pop
loopne
jnp
mov
subb
shlb
test
repnz
out
imull
jge
ja
cmp
rol
imulb
push
imul
rorb
loopne
fs
lods
int3
cmpl
xor
jns
mov
sub
mov
or
mov
int
test
mov
sub
fwait
shll
dec
or
sub
xchg
push
popa
loopne
xchg
mov
cwtl
loop
rol
xor
mulb
jnp
sbb
jl
arpl
xor
stos
imull
call
mov
xor
addr16
mov
mov
cmc
clc
in
insl
add
pushf
mov
mov
int
inc
popa
pop
leave
dec
insl
cmpl
mov
rolb
xchg
movsb
subl
lock
pop
scas
cmpsb
sbbb
xchg
pxor
cmp
arpl
jp
out
jnp
push
pushf
push
xchg
inc
icebp
cmp
pop
in
sub
test
loopne
lea
dec
and
xchg
pop
cmp
xchg
add
push
add
int3
in
insl
cltd
iret
aad
push
stc
jae
adc
cmpsb
xchg
push
adc
int
xor
inc
push
mov
lahf
mov
mov
clc
ds
stos
push
xchg
and
pop
daa
add
fmuls
imul
stos
in
jnp
or
and
cmp
xchg
dec
mov
xchg
add
xor
roll
dec
mov
inc
ret
and
mov
jp
push
pop
pop
push
inc
icebp
ljmp
mov
and
aaa
fsubs
not
mov
mov
mov
pop
sbb
jle
je
add
arpl
push
shll
add
stc
jno
dec
push
cld
out
sahf
pop
mov
imull
das
sbbb
inc
jno
inc
or
push
ja
pop
mov
inc
xor
and
jge
ss
outsb
inc
stos
jge
movsl
pop
sub
or
mov
adc
fildll
xchg
xlat
ja
dec
mov
pop
fwait
mov
call
sbb
outsl
mov
fsubp
or
movups
outsl
ss
dec
shll
lahf
push
dec
shll
stos
push
loopne
push
cmpsl
icebp
xor
scas
jno
and
pushf
and
repnz
sub
mov
gs
call
insl
pop
mov
stc
arpl
lcall
fiaddl
xor
jge
lock
sub
lods
inc
xchg
lods
and
and
out
jns
das
mov
repnz
jl
sbb
jg
ficompl
notb
mov
and
outsl
outsl
mov
mov
jno
mov
jp
rcrl
inc
mov
movsb
mov
jns
pop
popf
xchg
insb
adc
pop
sub
mov
daa
jo
out
push
push
frstor
or
pop
rcr
mov
add
ret
movsl
inc
xchg
mov
pushf
pop
pop
mov
sbb
mov
ss
adc
pop
inc
xor
fucomp
push
push
es
jge
pop
cwtl
mov
mov
aam
test
xchg
cwtl
aam
sbb
pop
push
out
dec
xor
sub
mov
sub
jno
fisttps
jae
jg
push
std
and
int3
movsb
sbb
xchg
repnz
loope
cmp
add
in
cmp
and
rorl
in
mov
sub
shlb
xor
idivb
adc
and
aaa
xorl
mov
test
pop
cmp
in
pushf
sub
dec
call
popl
pushf
jl
jo
fxch
loop
sbb
iret
mov
popa
jne
pop
leave
icebp
in
mov
stos
jne
sub
dec
pop
push
imul
int3
loop
dec
dec
sbb
or
adc
std
cmp
out
bswap
in
arpl
adc
push
dec
xchg
mov
push
out
sarb
jb
pushf
ja
jbe
sub
push
adc
mov
mov
lock
lret
jbe
or
js
fwait
push
test
daa
shll
ret
movsl
loope
or
or
popf
mov
lahf
scas
push
pop
ror
dec
test
ret
sub
mov
stc
sub
ljmp
lcall
jo
lret
scas
jp
addl
add
xchg
mov
push
mov
push
add
push
mov
lret
rolb
iret
rclb
mov
ja
mov
pushf
ret
push
aad
sub
inc
imul
add
dec
test
hlt
cmp
push
adc
inc
pop
push
jnp
rorl
xchg
mov
imull
out
add
dec
jge
inc
loope
xor
inc
ljmp
add
lock
lods
sub
scas
push
pop
adc
or
sub
cmp
xchg
je
arpl
lds
int3
iret
shl
jb
iret
and
je
js
mov
icebp
adc
mov
push
push
stos
mov
cmpsb
repnz
jmp
stos
test
movsb
mov
mov
popf
rolb
xchg
jb
cld
pop
loop
hlt
jnp
fmull
int
xchg
and
mov
pop
push
addr16
mov
pop
fmul
sbb
jmp
or
jnp
int3
or
sub
mov
cltd
pop
and
mov
xor
pop
ja
dec
repnz
mov
xchg
add
rorl
pop
les
sbbb
pop
pusha
ljmp
ret
test
adc
aaa
in
or
into
sarl
and
scas
add
mov
jbe
cmpsl
jbe
aad
jns
fiaddl
or
push
imul
push
mov
in
or
insb
notb
inc
imul
shlb
leave
cmp
xor
xchg
adc
rorb
adc
dec
sub
dec
push
aad
pop
test
test
xchg
jge
outsl
add
mov
mov
aam
fidivrl
inc
inc
mov
rorb
add
pop
negl
jno
pushf
sarb
push
lds
mov
test
inc
sub
arpl
mov
mov
add
xchg
inc
inc
ljmp
jne
sbb
sbb
ljmp
mov
push
out
adcl
leave
lcall
icebp
data16
mov
lcall
cwtl
cmpsl
cmp
or
lods
mov
fdivrl
cld
dec
andl
pop
mov
add
sbb
mov
int3
sub
sub
sti
cmp
cwtl
das
mov
xchg
sbb
mov
push
sarb
shrl
adc
divl
cmp
test
xor
mov
mov
gs
popa
add
insl
pusha
into
xor
jle
push
xor
loopne
pushf
repnz
mov
push
lret
jns
nop
jns
pushl
mov
mov
sarl
jmp
in
inc
dec
popa
push
mov
orl
mov
cmpsl
test
and
repnz
stos
sti
shl
setge
fisubs
mov
sarb
mov
pop
ss
add
mov
ljmp
dec
mov
jmp
pop
or
push
in
or
nop
mov
movd
test
insb
jnp
xor
push
aad
push
mov
repnz
mov
ds
push
cmpsl
popa
xor
sbb
pop
push
cmc
or
and
roll
or
cmp
ret
sbb
imul
daa
outsb
sub
push
aaa
pop
mov
scas
hlt
test
cmp
or
int3
rcll
xor
jb
lock
arpl
test
xor
xchg
xchg
pop
test
lock
ss
iret
mov
sub
or
aam
xlat
xor
leave
mov
dec
push
inc
lret
mov
test
cmp
das
cmp
je
push
addr16
sbb
loop
xchg
dec
test
mov
add
stc
sbb
mov
xchg
icebp
mov
push
ja
mov
push
lea
cmp
lahf
add
inc
pushf
mov
cmp
fldenv
xor
jno
jge
push
lret
push
mov
cmp
enter
inc
xchg
psubd
imul
fcoml
inc
js
scas
sub
cmp
imul
sbb
add
lahf
ss
sbb
pushl
in
xchg
or
push
mov
push
bound
inc
scas
lcall
fidivl
add
mov
pop
cmpb
inc
mov
sti
aam
adc
xor
mov
cmpsl
add
jns
fcomip
out
pop
add
add
cs
fisubrl
add
std
test
mov
into
lahf
out
cmp
sbb
sti
xor
mov
sbb
js
rorb
xchg
mulb
jns
test
xchg
jle
loope
mov
ja
dec
sbb
cmp
sahf
mov
lea
inc
pushf
test
and
ss
insb
xchg
mov
pop
inc
jae
pop
rcll
sub
push
cmp
dec
je
sub
pushf
sbb
cmp
xchg
dec
dec
cli
dec
pop
jbe
outsl
lods
insb
mov
pushfw
dec
sahf
xchg
cwtl
or
pop
mov
lahf
sbb
add
cmp
xchg
rorl
das
mov
pop
mov
push
test
adc
mov
test
outsl
pop
fbstp
mov
push
mov
jecxz
pop
jle
cmpsb
and
in
sub
inc
in
shll
or
xlat
leave
nop
push
cli
mov
xchg
cmc
lcall
imul
and
popa
and
xchg
push
andl
scas
data16
in
repnz
inc
jg
inc
inc
xchg
xchg
ds
cmpsb
sbb
dec
shll
cmpsb
loopne
cmpsl
aam
ljmp
mov
inc
aad
push
arpl
inc
into
in
bound
mov
dec
inc
cmpb
popf
sub
jmp
xor
add
mov
push
push
es
iret
jl
outsb
mov
jge
fistpl
cmc
lret
les
jg
fsubr
or
stos
dec
cs
push
mov
inc
mov
jg
jl
xchg
imull
fiadds
ljmp
fcoms
add
add
add
clc
incl
add
add
sbb
add
mov
add
and
pop
add
roll
mov
push
add
sar
rolb
pusha
call
pop
lea
add
mov
lea
push
pop
add
lods
dec
jne
mov
movb
mov
mov
push
push
pushl
push
call
mov
mov
jmp
mov
add
lods
mov
btr
jae
rep
jmp
pusha
push
push
push
call
mov
popa
pusha
mov
sub
mov
lea
xor
push
pop
jmp
mov
and
cmp
je
mov
and
cmp
jne
inc
mov
sub
xor
mov
mov
inc
shr
jne
push
inc
mov
sub
sub
mov
cmp
ja
mov
shl
mov
shl
xor
lea
mov
inc
shr
je
add
mov
shr
setae
dec
mov
pop
inc
cmp
jl
popa
add
lods
test
jne
push
push
push
call
lea
push
push
push
pushl
call
mov
sub
push
push
push
push
call
pusha
push
pushl
pushl
call
popa
push
push
push
call
lea
push
pushl
push
pushl
call
mov
jmp
add
push
call
mov
add
jmp
btr
jb
add
inc
inc
push
push
push
call
stos
pop
mov
test
jne
add
lods
test
jne
popa
jmp
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
