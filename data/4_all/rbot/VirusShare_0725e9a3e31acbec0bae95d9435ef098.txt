orl
xor
cs
aas
outsb
negb
jp
out
pushf
cmp
xor
int
popa
push
test
mov
lret
jo
shll
mov
sub
push
sub
dec
cmc
pusha
in
jge
mov
dec
adc
push
xchg
mov
orb
lcall
xchg
sbb
pop
or
cli
mov
adc
fistpl
clc
cli
sub
mov
inc
lods
fs
stc
xchg
iret
adc
movsl
sub
push
fidivrs
sti
fwait
jge
cld
rolb
call
cltd
mov
sahf
push
jecxz
mov
subb
enter
dec
xor
sbb
adc
loope
lods
cmpsb
mov
mov
xorb
add
roll
jg
pop
shlb
adc
mov
arpl
movq
stos
lahf
inc
cs
mov
pop
xchg
xchg
xchg
das
pop
jno
stos
scas
jp
sub
push
test
out
mov
rcrb
test
mov
in
scas
roll
mov
xorb
popl
xchg
xor
pop
jmp
xchg
jbe
mov
mov
mov
sti
and
testb
xchg
fwait
xchg
sub
ds
jmp
jecxz
xchg
mov
into
vpcomuq
jb
clc
adc
ja
mov
xor
dec
xor
mov
mov
add
push
jne
dec
test
mov
inc
mov
push
aas
addr16
adc
mov
dec
out
push
dec
loopne
sbb
test
mov
shrl
and
xor
repnz
rep
idivl
scas
sbb
ror
pop
push
pop
mov
aad
lock
and
xor
cmp
inc
push
adc
inc
popf
pop
rol
sub
sbb
cs
sub
xor
inc
stos
sub
add
addb
sar
loope
vmovsldup
and
pop
or
imul
pushf
out
adc
stos
addr16
in
jo
cmc
mov
incb
xchg
cltd
xchg
aad
lods
pushf
lods
leave
xchg
push
aas
push
xchg
repz
imulb
pop
lcall
jns
outsl
sbb
leave
out
mov
stc
push
fwait
mov
sub
and
stc
or
aad
movsl
in
test
cmpsl
or
or
xlat
mov
jbe
xchg
mov
push
xchg
sub
mov
fstps
xchg
enter
jb
cmpsb
movsb
lea
lods
cwtl
lods
imul
dec
add
pop
lds
ljmp
shl
movsb
xor
ror
cmp
adcl
icebp
lret
out
or
sti
movsb
hlt
repnz
adc
pop
xchg
xchg
pop
lds
adc
adc
add
test
addl
push
mov
insl
mov
jge
cs
jbe
rol
je
push
ds
add
orl
push
sbb
bswap
inc
or
push
inc
fisubrl
repz
fstps
xor
sbbl
frstor
xorb
jns
mov
sar
stc
test
mov
inc
xor
and
shlb
test
cmpsl
xchg
rorb
push
scas
ret
cwtl
pop
mov
pop
mov
stos
shrl
or
enter
adc
jb
jnp
out
mov
iret
dec
add
push
xorl
shll
pop
or
fistpl
add
in
testl
push
das
cmpsb
sti
rcrl
and
xchg
mov
mov
sub
push
in
enter
xchg
sub
dec
xchg
insl
dec
xchg
outsb
int
and
sub
xchg
inc
cmpsl
loopne
test
out
cmp
mov
jge
pusha
sub
lods
add
or
sub
enter
mov
mov
stc
jne
lahf
sub
fdivs
lret
push
sub
insb
and
fstpl
ss
in
faddp
pop
fld
and
inc
cmpsb
std
jle
cmc
jo
enter
jg
cltd
loop
pop
pop
sarl
loop
pop
sub
ljmp
test
dec
inc
pop
or
pop
shll
int
arpl
adc
jmp
mov
scas
in
mov
ljmp
test
movsb
xor
lods
mov
test
mov
fwait
ljmp
mov
cmp
mov
insl
outsl
inc
inc
cmp
and
cmpl
pop
pop
inc
add
rcrb
int3
xor
or
ret
cmp
cltd
dec
xchg
arpl
inc
or
sbb
fadd
jbe
insb
jnp
adc
insl
sub
mov
aam
cmpsl
push
mov
push
fimull
test
shrb
stos
sub
clc
fsubrs
lock
jle
sub
in
rorl
adc
in
scas
jp
adc
bound
insl
cs
imul
enter
call
add
out
push
mov
adc
cli
sub
pop
test
cld
out
push
dec
jp
cli
dec
jne
fsubr
lds
inc
lds
lahf
inc
repz
insb
and
mov
test
pop
scas
jae
addb
and
ljmp
scas
clc
inc
hlt
aam
outsl
imul
mov
cmp
scas
fists
lcall
and
aam
jnp
mov
fmull
dec
outsl
movsl
subb
lods
div
lds
mov
push
add
xor
das
imulb
testb
push
lahf
sub
lods
fs
xor
fwait
or
sbb
jp
xchg
lea
daa
mov
out
xchg
out
push
in
pop
jecxz
daa
fildll
sti
data16
xor
adc
mov
mov
push
dec
icebp
push
xlat
and
lock
fwait
and
or
dec
cs
das
dec
scas
xor
push
xor
dec
cmp
ret
pushf
sbb
add
test
push
dec
pop
push
push
push
push
lea
push
push
push
push
push
push
pop
cmp
je
cmp
jne
int3
push
jge
push
cltd
pop
pop
stc
and
nop
jle
and
inc
dec
loop
pop
jle
jae
push
sar
pop
clc
jge
jnp
cmp
mov
push
jae
or
pop
push
push
pop
cmp
je
cmp
jne
int3
nop
test
test
loop
pop
jge
push
jl
sub
pop
push
push
push
jp
and
pop
pop
pop
push
push
pop
cmp
je
cmp
jne
int3
stc
cld
loop
pop
jbe
push
and
pop
clc
cld
push
pop
loop
jecxz
icebp
in
imul
pop
sbb
sti
xchg
add
mov
add
lods
iret
add
mov
jae
mov
mov
or
pop
cld
fsub
inc
jns
mov
ror
inc
dec
cwtl
jmp
lock
neg
shlb
and
cmc
push
call
mov
lcall
mov
dec
inc
arpl
insl
fists
mov
es
cmpl
or
fimuls
cmp
lret
cmp
mov
pop
pop
jmp
jmp
call
push
push
pop
cmp
je
cmp
jne
int3
cmc
fnop
nop
loop
pop
rol
push
jnp
add
pop
and
jg
and
dec
inc
and
dec
inc
mov
inc
inc
inc
inc
stc
cmp
xchg
push
mov
pop
jnp
test
test
jne
ror
add
push
call
movsl
loope
adc
lcall
push
test
cmp
sbb
pop
pop
lret
test
rcl
ja
sub
mov
and
mov
lds
cmp
test
lcall
into
push
mov
pop
cmp
ror
test
or
lea
mov
jmp
icebp
jp
push
push
sbb
mov
add
cmp
mov
mov
pop
sbb
nop
inc
adc
lea
mov
ret
jmp
pop
or
sub
leave
les
jmp
pop
das
mov
dec
ljmp
test
je
shl
push
jle
test
pop
cmp
jb
nop
rol
fnop
add
lea
push
add
pop
push
add
pop
loop
jecxz
sub
imul
xchg
divl
jns
lods
repz
out
mov
xor
mov
sub
inc
dec
inc
cmc
or
push
push
and
pop
pop
push
jnp
push
push
mov
pop
pop
pop
push
push
push
inc
pop
pop
pop
push
mov
push
xor
pop
pop
loop
jecxz
dec
lods
push
inc
loop
jecxz
pop
cmp
cmp
or
sub
xlat
les
aas
fldl
cmp
push
dec
inc
pop
push
xchg
pop
push
pop
xchg
pop
jmp
pop
int3
mov
ret
mov
sbb
popf
sub
movsl
and
mov
xchg
stos
fidivs
mov
sti
cmp
xorl
lcall
push
mov
fadd
mov
pop
inc
inc
sbb
inc
and
or
sub
jp
js
cmp
in
jp
pusha
sti
ret
cmp
xchg
out
add
mov
jae
rcrb
cmp
jg
stc
add
dec
iret
mov
mov
hlt
in
or
in
mov
jl
mov
insb
sbb
lds
or
sbb
and
fisttpll
push
push
pop
add
pop
test
nop
clc
or
dec
jne
loop
jecxz
js
popa
xor
fsub
stc
xchg
test
xor
push
movzbl
push
jb
test
pop
add
clc
inc
dec
push
sub
pop
stc
cmp
push
push
pop
pop
push
and
pop
jp
cmp
xchg
loop
pop
loop
jecxz
aam
rcl
and
faddp
rclb
faddl
and
add
int
push
dec
in
push
test
fs
mov
rclb
out
dec
jmp
jge
adc
add
adc
xor
or
test
arpl
pop
enter
cmp
shrb
jl
stos
jns
jbe
pop
adcb
pop
or
lret
mov
fsubs
les
fisttps
lret
insb
adc
cltd
adc
cmp
mov
fldcw
jp
xchg
dec
mov
icebp
int3
test
xor
xchg
adc
push
enter
pop
cmp
lret
pop
mov
pushf
divl
cmpsl
pop
sarl
je
xchg
jb
xorl
out
repz
push
adc
scas
out
lods
negl
xchg
mov
pop
pop
pusha
orl
fwait
sub
pop
int
jno
test
inc
jnp
and
les
push
adc
andb
into
clc
jno
push
test
shrl
and
in
fdivrs
cmpsl
pop
shrl
mov
jmp
and
shrl
jae
mov
jl
sbb
ljmp
repnz
cli
cs
fisttps
or
jecxz
stos
inc
mov
testb
jmp
cmp
cmp
cli
repnz
jns
adc
in
out
adc
shll
xor
pop
sbb
or
ja
fsubrl
mov
mov
or
xchg
insl
jo
test
flds
jo
add
pop
jmp
sbb
jp
and
and
lcall
mov
daa
ss
paddd
sbb
pop
or
inc
add
cmp
mov
push
into
bound
mov
xchg
or
or
cld
fisubrl
dec
mov
xchg
dec
ljmp
cmp
push
pop
jp
loopne
clc
add
mov
leave
xor
adc
push
addl
mov
cmp
mov
xchg
scas
fcoml
mov
or
push
sarb
or
aad
inc
nop
divl
cmp
cmc
ds
xchg
adc
outsl
mov
cmp
and
sti
stos
imul
iret
mov
push
mov
and
and
mov
cmpsb
sbb
or
ror
js
cmp
add
fwait
push
cmpsb
xor
add
enter
push
xchg
aam
adc
nop
xor
mov
push
es
sub
arpl
xchg
mov
xor
cmp
mov
mov
inc
push
cmpb
stos
jo
push
pop
pop
fnstenv
jo
lock
notb
jle
lret
and
mov
cmpsl
and
dec
adc
jb
or
pop
inc
push
dec
je
jns
sbb
and
test
push
xor
jge
leave
sti
pop
insb
and
jge
mov
xchg
imul
dec
mov
sbb
out
pop
popa
and
pop
popa
mov
jle
rclb
xchg
sub
fisttpll
shl
sbb
inc
aas
rorl
fidivrl
sahf
js
sbb
clc
cmp
xor
xchg
sbb
clc
sbb
dec
xchg
nop
into
lds
cmc
jl
mov
decb
fistps
push
aas
lds
jno
pop
test
shll
out
sub
jg
xor
jle
adc
and
mov
cmpb
out
sub
pop
mov
and
jmp
add
lods
les
add
daa
jmp
push
test
jnp
out
pop
out
push
cmc
mov
imul
inc
pop
shl
or
or
xor
repz
fisubs
xorb
shll
stc
js
xchg
cwtl
adc
sbb
gs
ljmp
scas
andb
mov
not
jle
mov
cmpsb
sbb
negb
jo
push
lret
mov
lock
or
ja
sbbb
cmp
sbb
fs
data16
insb
mov
jns
add
leave
into
cld
xor
cmp
and
pop
add
mov
out
xchg
iret
cmp
mov
xorb
add
or
xchg
mov
or
mov
repz
inc
lds
in
or
pop
push
sarl
rolb
scas
sahf
cmp
movb
dec
adc
es
mov
cs
leave
pop
mov
shlb
iret
cwtl
outsb
jne
add
ja
lret
sub
adc
xor
outsb
gs
icebp
mov
adc
gs
mov
pop
mov
jae
aad
jecxz
pop
pop
adc
sbbl
lods
mov
je
push
rcll
cmp
testl
cmp
pusha
cltd
pushf
negb
xchg
lcall
int3
cmp
daa
addps
scas
sbb
pop
dec
jns
mov
or
push
test
out
faddp
cwtl
out
test
negb
xacquire
inc
sub
xorb
sbb
scas
imul
add
jmp
push
add
inc
add
mov
scas
lods
arpl
xchg
les
jno
pop
cli
test
and
or
and
sbb
mov
jmp
jp
test
les
jecxz
xchg
stc
negb
cmp
adc
pop
enter
movsb
pop
adc
pop
stos
andb
into
jns
mov
xchg
adc
and
nop
xor
test
adc
pop
int
shlb
add
mov
mov
mov
je
clc
inc
jp
mov
cld
aad
aas
pop
shrl
cmp
dec
sti
in
inc
pop
adc
negl
hlt
inc
in
subb
aas
icebp
mov
jo
lea
int
or
das
push
adc
cwtl
rclb
dec
sub
das
gs
mov
sahf
mov
inc
mov
xor
sbb
lods
pop
add
xchg
dec
rclb
divl
xchg
and
and
test
push
cli
notb
nop
pop
addl
lcall
movsb
push
aad
cld
dec
xchg
insb
mov
push
ud0
mov
iret
and
movsl
adcl
jmp
ret
in
pop
dec
push
mov
jl
lods
mov
xchg
push
sar
jle
sub
xor
in
push
rcl
add
and
lret
push
lds
nop
sbb
in
imul
shlb
mov
jns
jmp
dec
add
and
test
add
and
dec
pop
mov
mov
mov
mov
adcb
pop
push
dec
sbb
inc
add
stos
xchg
cs
std
add
jbe
pushf
or
mov
mov
jo
int
sub
iret
mov
fcomip
es
sahf
and
lret
mov
add
add
mov
mov
movl
les
lret
int
sub
loop
popa
je
cwtl
mov
sarb
pushf
scas
add
xchg
jg
dec
mov
hlt
mov
mov
rolb
arpl
test
js
rcrl
hlt
push
out
jo
fsubs
lret
xor
flds
jle
inc
cmp
roll
xchg
js
xchg
fsubp
int
movsl
inc
cld
jmp
push
adc
xchg
mov
sbb
pop
mov
icebp
push
pushf
jno
mov
push
sub
cmp
adc
out
dec
inc
clc
adc
jge
mov
rorl
stos
fidivrl
jg
inc
or
imul
adc
pop
adc
sbb
or
or
inc
jns
sub
ret
lds
imul
inc
mov
je
movsb
push
sarl
sbb
mov
outsb
inc
shlb
testl
or
mov
inc
mov
sbb
mov
fs
xchg
lcall
jno
test
sti
divb
xchg
adc
mov
pop
inc
sbb
and
je
decb
push
dec
rcr
mov
test
push
dec
mov
and
fnsave
insl
jbe
sub
test
fmul
adc
out
out
movsl
jl
dec
and
sti
testl
pop
clc
jmp
xor
sahf
mov
mov
in
test
rcrb
push
inc
inc
xchg
outsb
or
in
add
jmp
add
nop
mov
mov
ljmp
or
enter
scas
enter
inc
or
les
sti
dec
jle
jns
xor
jb
pushf
lods
repz
loop
mov
pop
mov
mov
sbb
std
out
shl
pop
adc
sub
mov
cmp
pop
push
ret
pop
out
into
mov
mov
jmp
inc
in
call
push
cld
jnp
pop
push
push
test
addb
ja
imul
push
imul
pop
stos
ds
pop
add
sub
push
test
out
insl
inc
jle
inc
clc
add
pop
pop
mov
add
jo
std
insl
xorb
xor
fiaddl
lods
stos
repnz
mov
mov
call
in
lahf
test
cld
stos
fdivl
mov
push
shlb
xor
repz
stos
stos
push
shlb
or
lcall
jge
mov
jle
and
ror
sarb
jmp
mov
in
or
mov
stc
call
in
sub
movsl
xor
push
xchg
test
out
pop
push
pop
hlt
call
or
hlt
stos
fidivrl
addb
fcoml
mov
enter
add
jns
dec
xchg
mov
lret
aad
scas
inc
movsb
push
test
ljmp
sbb
add
xor
mov
pop
and
dec
add
cli
pop
outsb
fstpl
dec
outsl
imul
lds
sub
fisubrs
xor
mov
mov
adc
mov
jle
in
xchg
neg
rolb
inc
cs
mov
pop
scas
repz
push
mov
mov
xchg
inc
jnp
dec
sbb
mov
mov
xor
mov
xor
pop
xor
sahf
mov
add
cmp
sbb
mov
pushf
cwtl
lds
cmp
sub
xchg
mov
ret
xchg
outsb
ret
pop
inc
cmpsb
pop
jle
out
and
cmp
addr16
mov
addr16
pop
ljmp
and
sbb
jp
jb
cmc
fnstenv
cmp
testb
mov
lds
sub
push
xchg
add
mov
imul
pop
push
into
in
sbb
fsubs
xchg
pop
push
mov
mov
xchg
cs
cli
aaa
ja
cs
mov
adc
cmpb
rorl
lods
mov
inc
pop
hlt
jmp
xor
jle
mov
mov
ret
pop
dec
lahf
ja
add
push
push
clc
fsts
fsubs
push
scas
add
scas
leave
inc
ja
sahf
add
mov
pop
rcrb
stos
movsb
repz
fidivs
scas
mov
jbe
mov
iret
and
inc
xchg
jmp
add
adc
push
lret
fld
or
inc
xor
test
add
mov
lcall
inc
mov
sub
adc
pop
inc
push
dec
mov
pusha
repnz
jns
popa
repnz
xchg
in
sub
fs
andb
dec
bound
xchg
imul
adc
xor
hlt
dec
int3
inc
ljmp
cltd
ret
mov
js
shlb
sub
rorb
hlt
fstl
popa
mov
mov
hlt
in
jae,pt
xlat
cmc
mov
cmp
sbb
jecxz
sbb
jb
scas
mov
pop
fdivrs
icebp
andb
fcomip
jb
or
and
sub
fimull
lods
mov
dec
jo
pop
dec
jne
sti
fwait
xlat
push
inc
pushf
int
xchg
lea
push
cli
xor
aam
hlt
lret
or
daa
and
push
out
ret
mov
mov
jnp
or
rcll
jmp
je
call
sub
scas
popf
jecxz
xlat
sahf
faddl
stc
pop
push
pusha
xchg
jle
pandn
fisttpll
test
lods
sbb
out
mov
fldt
mov
push
sub
repz
mov
adc
imul
pop
shr
push
sub
shrl
in
pop
sti
jno
cltd
in
mov
rcll
mov
push
sbb
mov
or
inc
sbb
mov
sahf
jne
mov
inc
xchg
mov
test
pop
icebp
xor
add
gs
xor
fisubrl
fisubl
addr16
inc
je
int
pop
cmp
sahf
in
cmp
shl
pushf
inc
inc
stos
or
aad
test
imul
jg
mov
fbld
xchg
mov
je
and
imul
movsl
das
pop
xchg
mov
jge
lods
rcr
cmp
loopne
in
nop
dec
subb
sti
add
sahf
incb
aaa
out
daa
mov
dec
ss
out
shll
mov
loopne
inc
push
dec
jp
add
pinsrw
sbb
or
cmpsb
loop
mov
sub
in
incl
pop
xor
and
and
mov
andb
icebp
push
iret
dec
adc
bound
cld
pop
lods
call
int3
add
stos
nop
imull
dec
mov
adc
aas
push
sbb
test
sub
pop
mov
adcb
and
xchg
cmp
outsb
pop
sbb
cmc
add
mov
sbb
sub
xchg
xchg
xor
xchg
daa
hlt
fbld
iret
jbe
int
xor
mov
mov
dec
or
pusha
push
push
sbb
lods
fstl
push
cltd
out
and
sarl
xor
fmuls
xchg
xchg
cld
pxor
lds
popl
mov
shlb
outsb
outsl
mov
mov
test
xchg
das
arpl
rcl
ljmp
movsb
lods
sti
aad
insl
pop
cs
cltd
lret
add
mov
or
sbb
mov
ja
jns
je
inc
xor
das
out
insl
cmp
in
lods
fldcw
mov
jbe
or
sub
xchg
mov
mov
sbb
sub
adc
push
ds
and
repnz
mov
fcmovne
mov
jle
jg
dec
mov
nop
or
push
sbb
sub
les
push
push
ljmp
daa
ficomps
lret
jne
cmp
sarl
loopne
pusha
mov
stc
ret
inc
push
mov
xchg
cmc
lret
mov
stos
mov
dec
ds
stos
inc
add
rcrb
mov
and
and
dec
xchg
lcall
push
sub
lret
and
push
test
mov
pop
in
jb
sub
popa
cmp
in
into
cli
enter
ja
outsb
xchg
fcmovnu
mov
test
addr16
fistl
in
mov
or
ja
mov
pop
vpavgw
out
dec
fdivp
test
sbb
and
sbb
scas
sub
jae
xor
js
shl
xor
push
pop
mov
inc
sbbb
sub
mov
push
out
pinsrw
push
jae
add
andl
xchg
lret
push
mov
mov
pop
insl
and
fsubs
push
cltd
and
lret
push
cmp
and
lods
fs
shrb
pop
scas
pop
in
call
es
sub
jge
sub
or
pop
xor
mov
xchg
stc
mov
mov
xchg
mov
or
jmp
stc
pop
movsl
pop
loop
sub
push
add
out
jbe
and
sub
inc
sbb
sub
lret
push
adc
out
add
aaa
adc
aam
sub
lock
adc
in
xor
popl
pop
xchg
call
sahf
mov
fisttps
mov
and
fcmovu
sub
cmpsw
xchg
adc
fildll
icebp
pop
mov
cmp
mov
xchg
xchg
sbb
insl
mov
test
inc
jns
aas
mov
cltd
aad
jo
addl
or
inc
repnz
loope
jnp
xlat
inc
test
add
cmp
or
dec
lcall
gs
fs
popa
jbe
movb
push
fdivs
sbb
sbb
dec
mov
call
mov
xor
jge
dec
add
add
dec
clc
test
call
mov
or
push
mov
scas
mov
dec
ror
sub
dec
and
sbb
adc
mov
out
pop
ljmp
fstpt
aad
push
aaa
or
xor
vpcmpgtd
cltd
iret
fsubrl
push
jmp
push
je
xlat
add
jmp
mov
ret
arpl
jg
cmc
jne
sarl
jne
cmc
hlt
ljmp
jp
out
mov
arpl
mov
fwait
gs
or
push
addr16
xor
int3
xor
je
bnd
sbb
pusha
or
sahf
adc
leave
addr16
sbb
pop
test
mov
or
mov
mov
sarb
push
and
push
jge
addl
imul
outsb
scas
sarl
cs
pop
pop
inc
add
stc
mov
loopne
or
xlat
add
mov
das
dec
or
pop
lret
pop
pop
test
and
hlt
xor
lods
call
jo
insb
xor
push
cmp
ret
cmpb
gs
shrl
jge
std
xchg
into
insl
outsb
add
sub
cltd
movsl
jne
push
jp
xor
movsl
inc
lods
sub
mov
or
inc
inc
scas
inc
imul
pop
mov
push
xchg
lcall
loop
or
or
decb
nop
mov
jmp
adc
aam
and
mov
push
int
lock
push
add
bound
addr16
inc
push
gs
test
mov
cmp
lds
adc
adc
shll
andb
in
sarb
pop
aas
aas
adc
stos
xlat
flds
xchg
fcmovu
pop
cwtl
mov
bound
xor
jno
and
lret
and
fdivp
sbb
loopne
sti
jb
insb
into
mov
lret
scas
adc
insb
lods
ljmp
aaa
mov
mov
or
rorl
push
push
jbe
adc
aam
dec
jecxz
dec
sub
cmpsb
js
xchg
cmp
cmpsl
sbb
jne
or
xlat
nop
stos
inc
add
iret
xorl
sub
cmp
hlt
fsubrp
or
mov
jp
repnz
pop
icebp
jge
shrb
pop
xorb
sbb
mov
xchg
je
xchg
mov
add
inc
inc
jg
mov
xor
mov
lret
cltd
addr16
push
int3
test
cmp
xchg
lock
adc
mov
addl
pusha
addl
mov
inc
out
clc
push
xor
push
ret
push
fisttpll
or
push
add
mov
mov
push
out
mov
push
mov
sbb
cmp
test
sbb
pop
jo
add
mov
pop
xor
lods
adc
sub
mov
rorb
xor
in
jb
mov
cmp
psubd
inc
lods
nop
sbb
add
xor
mov
decb
or
mov
xchg
ss
pop
mov
orl
adc
mov
sub
push
ja
xchg
or
inc
popf
ret
xchg
shlb
imul
lds
outsl
pop
pop
pop
mull
push
lret
stc
fnstcw
cmp
pop
icebp
ret
mov
adc
dec
scas
repnz
loopne
hlt
xchg
fwait
jnp
out
push
mov
sahf
stos
ret
sbb
loope
xor
mov
mov
push
insb
mov
das
push
jg
add
inc
add
sbbl
imul
aaa
je
repnz
shlb
mov
xchg
in
jns
jle
sahf
dec
mov
out
jno
pop
aas
or
movsb
sbb
cmp
push
arpl
rclb
fisubrl
lods
lds
sub
sbb
stc
mov
add
test
and
xchg
pop
adc
dec
push
pop
outsl
mov
mov
jmp
aaa
and
mov
loope
outsb
add
cmp
aas
out
lods
pop
add
push
ret
sbb
call
in
movsl
pop
out
mov
sahf
loop
sbb
cmp
cmp
mov
push
xor
and
mov
cmp
sbb
xchg
insl
or
shl
out
les
in
insl
xor
mov
push
add
out
mov
imull
push
into
aam
xchg
arpl
jbe
es
sbb
sub
lea
jb,pt
arpl
push
mov
adc
push
inc
mov
mov
repnz
or
push
lea
jp
insb
xchg
dec
and
xor
push
cmp
outsl
mov
cmc
in
xchg
push
add
push
jae
idiv
jmp
fwait
dec
xor
pop
jb
aaa
mov
ja
xchg
cmp
push
mov
inc
pop
mov
je
or
ja
sbb
cld
or
test
cld
repnz
jb
icebp
ja
adc
movsb
js
mov
pop
out
ret
xor
mov
fiaddl
inc
mov
cltd
les
imulb
mov
popa
fisttps
int
lret
pop
inc
punpcklbw
push
int
and
icebp
cmp
sbb
jne
pushf
push
movsb
cmpsb
js
inc
sub
and
push
scas
cmp
je
xor
rolb
mov
or
out
pop
push
testl
dec
mov
xlat
loope
icebp
lret
mov
inc
mov
inc
inc
imul
loope
add
jae
cmp
into
or
pop
lahf
ds
roll
loop
inc
sbb
xchg
or
pop
sbb
int
dec
jl
aad
ret
icebp
push
fcoml
mov
xchg
cmp
stc
iret
add
outsl
xchg
mov
popa
inc
dec
in
mov
lahf
cmp
adc
rdtsc
jns
pop
clc
aas
ucomiss
rcrb
and
out
ss
or
push
loopne
pop
and
dec
sti
data16
xor
and
dec
int3
ret
dec
in
lods
add
cmc
push
in
inc
stos
int
and
test
xor
mull
adc
sbb
fadd
daa
rcl
pop
ret
sbb
jo
dec
sbb
loopne
negb
nop
insb
mov
enter
or
inc
iret
inc
in
push
inc
cmc
push
outsl
jno
out
mov
insl
mov
in
adc
jno
dec
pop
fsubr
cltd
xchg
shr
mov
xchg
rcrb
flds
icebp
mov
mov
sub
add
add
addr16
pop
das
fldenv
test
ljmp
jno
pop
aam
adc
daa
inc
add
gs
stos
pushf
retw
adc
push
push
add
jp
jle
push
or
mov
shll
xchg
lock
movsl
inc
cmp
js
call
and
and
hlt
je
dec
fnstcw
cli
xchg
pop
lods
cld
inc
sbb
xor
xlat
fwait
jle
lock
popa
decl
mov
push
mov
testl
popa
and
jmp
push
sti
in
aad
pop
stos
mov
outsb
jno
les
lds
push
test
mov
adc
rol
jnp
xor
cmp
sahf
fisubs
out
cltd
les
lds
aam
jb
and
or
mov
add
test
sbb
fidivrs
or
mov
sahf
cs
xchg
adc
mov
lock
push
lods
int3
sarl
test
pop
dec
arpl
inc
xchg
xchg
push
push
fisubl
mov
enter
and
mov
and
loope
fstps
sub
aas
lret
mov
add
lcall
ss
mov
icebp
lock
inc
fdivrl
fisubrl
xchg
stc
inc
pop
pop
or
lahf
je
push
and
pop
daa
fwait
cmpsb
packssdw
mov
out
cmc
arpl
pushw
stc
push
adc
fcompl
cmp
xor
sub
add
sbb
cmpsb
pop
push
mov
fistpll
and
jle
pop
add
std
jmp
add
aas
adc
and
xor
jnp
test
lea
adc
test
aas
rcrb
add
je
popa
mov
sarl
cs
or
jge
pop
adcl
xlat
into
jno
cmp
rorl
inc
sarb
popa
pop
xchg
push
mov
or
lods
add
jl
iret
mov
pop
dec
adc
flds
in
jo
psrad
dec
ficoml
mov
mov
xchg
stc
and
push
pop
data16
pop
push
enter
inc
pop
ss
in
or
lcall
insl
xchg
arpl
int3
xor
sub
std
mov
mov
dec
xor
and
shrb
hlt
or
stc
aam
das
lods
sub
cwtl
push
fst
xchg
sbb
adcl
xchg
add
mov
push
jl
jns
nop
push
push
pop
pop
lret
ja
vpaddusw
sbb
pop
mov
shlb
movsb
pop
jo
movsb
and
pop
cmp
add
or
jne
cmp
jecxz
lods
mov
outsb
hlt
addr16
sahf
xlat
in
addr16
xor
push
xor
cli
pop
jbe
scas
aad
ja
jne
loope
sarl
cmpb
pop
dec
cltd
mov
insb
mov
das
push
sub
cmp
testb
int3
int3
hlt
and
mov
push
xchg
shrb
stos
fistps
idivb
aas
es
sbb
aam
push
sbb
add
fwait
aas
pop
xchg
cli
push
add
jns
jp
cmp
mov
aam
sbb
add
mov
aaa
xchg
fists
dec
imul
loop
in
data16
jno
out
jae
inc
lcall
dec
push
lcall
and
fiadds
inc
mov
mov
push
mov
clc
pushf
xor
and
movhps
sbb
xlat
loope
pop
inc
add
jecxz
pop
or
dec
jae
test
add
pop
sub
int3
enter
cwtl
push
sub
xchg
dec
mov
push
syscall
push
add
insl
pop
bound
jae
mov
pop
xchg
imul
jbe
data16
imul
push
data16
or
pop
and
sub
sbb
imul
imul
inc
mov
xorb
pop
rclb
stc
and
or
or
ds
sub
in
jne
xchg
add
int3
mov
cmpl
cli
pop
xlat
xor
xchg
sbb
movsb
push
sbb
movsl
leave
or
jo
push
push
xor
fs
sti
js
adc
adc
addr16
or
shrb
add
mov
adc
in
mov
ljmp
pop
mov
popa
mov
in
pop
xchg
jecxz
int3
hlt
clc
mov
aas
mull
dec
hlt
in
lods
jle
jo
jae
jb
push
mov
inc
jle
ds
fiadds
out
aas
scas
das
ds
mov
mov
hlt
iret
in
mov
shlb
xorb
jp
rolb
mov
outsb
xchg
mov
mov
cld
fsubrl
out
out
out
gs
lcall
std
mov
test
push
aam
dec
fucom
dec
movsl
popa
aam
in
mov
cmc
adc
movsb
pop
xchg
pop
mov
enter
sub
sbb
mov
cmp
rcll
mov
test
mov
or
shl
dec
fld
lods
push
xor
dec
in
push
mov
aad
pop
dec
and
fwait
jmp
ljmp
pop
and
hlt
dec
xchg
outsl
dec
push
jns
je
loopne
in
test
and
cmp
inc
mov
cmpsb
pop
frstor
lahf
in
subb
pop
xchg
dec
mov
cmpl
pop
mov
cli
add
push
out
push
lods
push
js
in
rcrl
ljmp
nop
cs
aaa
pusha
and
mov
stos
insl
das
xchg
out
subl
cs
push
xchg
data16
xor
mov
sti
movsl
sub
std
cmp
sub
dec
inc
imulb
mov
adc
mov
fs
push
lods
pusha
aam
xor
and
mov
and
and
push
sbb
lds
andb
addb
inc
mov
int
fwait
shlb
and
cmc
imul
repz
xchg
push
leave
dec
faddp
ret
cltd
jo
lret
adc
rcl
mov
fnstenv
stos
xchg
test
rcrl
cld
cmp
mov
inc
imul
jae
cmpsb
xchg
push
inc
adcb
push
cmp
mov
lods
sub
add
or
enter
cli
lea
mov
sbb
int3
int
inc
mov
fists
mov
loope
sbb
sbb
shl
mov
sub
xchg
adc
rep
imul
andl
cmpsb
sarb
cmp
add
pop
pop
sbb
mov
shl
adc
fwait
ja
mov
in
ljmp
popf
xchg
loop
cmp
push
insb
xchg
aad
push
fadds
ficomps
sub
in
lods
ss
jno
fs
xor
dec
or
and
xchg
aaa
scas
icebp
stos
mov
sub
jb
sbb
mov
cmpsl
jle
lods
dec
push
pop
fwait
push
mov
push
clc
lds
fildll
inc
mov
nop
imul
je
int
insb
jno
aas
and
push
xchg
js
cs
mov
cmp
rolb
arpl
nop
sub
mov
jnp
ljmp
lret
adc
jge
outsl
inc
daa
mov
cltd
ret
push
xchg
pop
push
fmull
aam
lods
mov
and
scas
mov
mov
mulb
add
test
fidivs
aaa
add
test
sub
shll
fnstenv
jb
movl
fcoms
ds
in
shll
push
push
stos
xchg
in
and
cs
xor
jmp
jge
mov
adc
pop
xor
leave
xchg
ret
cmpsb
or
iret
push
fdivrs
xor
fcoms
daa
icebp
addr16
imul
jg
dec
sub
mov
int
popa
negl
and
shl
push
push
addr16
push
icebp
insl
xor
sub
jo
push
jmp
scas
fidivrs
loopne
or
jecxz
mov
leave
adc
add
fs
push
loop
adc
pusha
movsb
dec
je
gs
aad
in
loope
gs
cmpsb
hlt
out
xor
jo
add
lret
sbb
fsubs
mov
cmpsb
jb
jecxz
mov
xor
ja
rcr
fisubrs
xchg
jg
push
xor
lret
ss
nop
addr16
mov
pop
mov
ss
cs
ret
in
scas
jmp
inc
arpl
and
call
cwtl
mov
sahf
mov
ljmp
mov
in
or
sub
int3
jo
out
iret
dec
pop
jne
rcrl
std
sub
or
sbb
mov
lret
xchg
fldcw
jb
into
sub
jmp
add
popf
scas
fisttpll
fstpl
into
dec
xlat
pop
pop
sahf
imul
fdivs
ret
in
enter
mov
cmc
idiv
ffree
add
xor
sub
mov
mov
pop
je
iret
xchg
orl
sub
mov
mov
das
jl
js
enter
test
add
ffree
cmpsl
shlb
jbe
test
mov
in
mov
adc
cmpsl
mov
mov
push
scas
push
dec
shl
mov
add
mov
fdivl
dec
sarl
leave
je
xor
cmp
data16
xacquire
out
das
mov
dec
jo
lods
xchg
out
ss
cmc
lock
xor
mov
push
jne
push
mov
ja
dec
sbb
sbb
xor
mov
jno
jbe
in
stos
or
mov
out
test
in
dec
mov
add
in
ljmp
je
int
xor
mov
mov
ja
sub
mov
loopne
outsl
addl
cmp
pop
mov
fcoms
cltd
mov
or
lret
cmp
movb
push
int3
popf
sbb
and
stos
mov
xor
rolb
fldl
dec
or
sbb
fdivrl
or
mov
lea
mov
out
lret
xor
subl
lods
lods
les
jno
adc
dec
mov
stos
jl
dec
xchg
pushf
iret
jns
cmpsb
xorb
aam
and
sti
xchg
aas
pop
ret
fcoms
sahf
jo
cmp
fs
mov
insb
pop
jns
xchg
xchg
fsub
xor
xor
cmp
add
movb
scas
fdivrl
test
xor
push
xor
ss
and
dec
dec
lock
repnz
or
inc
sub
lret
mov
leave
aad
cmp
in
stos
xor
adc
lods
out
sub
adc
jg
pop
pop
jl
xchg
dec
pushl
shl
int
dec
call
pushl
decb
or
add
jmp
or
mov
mov
pop
scas
and
lock
popa
or
xchg
cmc
jg
pop
outsl
repnz
mov
addr16
dec
xchg
daa
inc
pop
loopne
les
imul
sbb
xor
hlt
ret
mov
add
pop
pushf
xor
jle
xor
fwait
lahf
mov
or
insl
not
xchg
xchg
push
stos
jne
aas
mov
adc
or
add
aad
cs
fwait
push
nop
xchg
push
lret
jne
and
mov
push
fs
push
pop
lock
imul
movsb
inc
leave
aad
or
cmp
lcall
stc
clc
and
hlt
test
adc
repnz
sbb
pop
and
sub
mov
loopne
out
xchg
add
shlb
mov
mov
call
or
mov
push
pcmpeqb
cmpsb
and
sbb
push
push
into
js
pop
int
cmpsl
push
shll
ljmp
pop
jmp
cmpsb
mov
stos
mov
adc
iret
ljmp
rcr
mov
and
int
adc
mulb
iret
add
cmp
add
push
add
pop
rcl
jo
fsubrs
mov
xchg
leave
cbtw
clc
xchg
ds
and
adc
lock
sarb
mov
test
sarl
and
sub
int3
inc
pop
cmp
incb
sarl
lcall
leave
ss
mov
add
xchg
insl
sub
and
cmp
cmp
lea
mov
push
repz
inc
adc
or
fcomps
les
or
cmc
add
inc
or
add
push
xchg
fdivs
lods
dec
sarb
ucomiss
mov
sub
imull
out
push
pop
out
cmc
daa
add
jne
adc
jno
push
jns
stos
dec
push
jnp
push
outsl
int
pop
cld
add
dec
movsb
jecxz
and
mov
push
imul
loopne
inc
pop
pusha
popa
or
jp
jmp
xor
rorb
iret
dec
mov
and
mov
lret
aad
dec
sbb
push
inc
fidivl
iret
insl
mov
adc
jmp
jge
je
push
std
rcl
shlb
dec
jns
adc
out
jmp
pop
js
cmp
sbb
cmp
cmp
popf
into
clc
mov
push
mov
pop
cwtl
dec
inc
iret
aaa
je
push
movsl
rorl
nop
mov
jns
rcrl
sub
sub
nop
mov
out
push
scas
sar
dec
cmp
jmp
xchg
sbb
imul
not
dec
jecxz
adc
xchg
push
jae
or
roll
inc
cwtl
jge
sub
xchg
fisubs
cmp
and
ret
int3
push
or
mov
mov
jl
out
insb
cmp
cmpsb
in
loopne
pushf
cli
mov
sub
jle
ret
les
aas
lret
pop
pop
loope
pushl
dec
push
fisttpl
test
sti
push
xchg
repz
cmp
cmp
je
insb
dec
stos
mov
xchg
xchg
loopne
push
std
jns
cmc
sub
add
fs
in
mov
mov
pop
je
hlt
mov
sarb
das
adc
jno
cmp
mov
or
dec
mov
push
stc
jmp
rcl
add
inc
movsl
pop
push
roll
outsl
cmpsb
pusha
call
leave
dec
sub
mov
jp
adc
out
sbb
lret
sbb
push
cmp
pop
xchg
bound
xchg
cmp
pop
aad
lahf
lcall
sbb
mov
lds
cmp
mov
xor
mov
enter
mov
int3
gs
xchg
push
jae
sub
xor
add
mov
push
or
cmp
mov
xchg
pop
push
cltd
mov
push
scas
pop
and
fsqrt
mov
add
and
add
cmpsb
ljmp
sub
push
out
inc
xchg
jg
not
jmp
fwait
dec
adc
js
mov
push
adc
popa
fists
cli
insl
nop
dec
imul
xchg
mov
iret
push
adc
jno
dec
pop
clc
or
dec
repnz
imul
xchg
sub
cwtl
push
mov
shrl
insl
mov
xchg
push
mov
mov
xor
sbb
adc
aad
and
ret
stos
pop
xchg
adc
nop
icebp
je
cmp
in
add
adc
popf
data16
mov
lock
cmp
lock
movsl
stos
xchg
mov
imul
add
push
jns
cmpsb
mov
push
aam
push
inc
mov
gs
mov
lods
inc
sub
cmp
aad
std
pop
mov
jno
xchg
pop
adc
push
es
fstpl
add
lahf
inc
mov
mov
rorb
rorb
jae
dec
sub
and
rcrb
es
cmpsb
adc
sub
clc
jmp
mov
fisttpl
cli
lcall
xor
shll
inc
inc
in
insb
inc
rcrb
xchg
jle
push
lret
mov
sub
xchg
jb
jg
pop
jns
in
mov
sahf
mov
andl
aaa
add
and
ret
call
repz
clc
add
sub
mov
mov
cmp
mov
jmp
mov
aam
aad
adcb
icebp
in
aam
mov
xchg
stos
mov
xchg
das
loop
sub
cmp
xchg
and
inc
push
nop
out
jle
mov
cmp
mov
cmpl
or
push
push
add
and
mov
das
aad
xchg
mov
and
mov
xchg
jo
jne
cmp
lods
xor
xor
lea
inc
lods
dec
add
add
mov
pop
popf
xchg
jg
dec
jg
ljmp
test
out
sbb
jne
dec
adc
jns
sub
pop
andb
dec
fstpt
stc
mov
outsb
outsb
aaa
orl
adc
push
stos
cmp
loop
add
xor
mov
and
lret
jne
icebp
data16
cmp
mov
add
rcrb
add
lcall
mov
stos
sub
sub
jb
sbb
xor
popf
fldlg2
lahf
push
movsb
ret
cmpsb
cmpl
cli
pop
xchg
movsb
xlat
mov
movsb
and
loopne
jecxz
outsl
loopne
push
int
outsl
ja
cmp
and
inc
jns
jl
pushf
cmpsl
leave
dec
push
push
add
dec
pusha
sub
pop
or
int3
mov
negl
xor
sbb
jns
cmc
inc
adc
sarb
push
jecxz
loope
je
dec
push
clc
mov
pop
sahf
fsubrl
xchg
outsl
mov
inc
lret
dec
jge
into
mov
push
xor
loope
pop
pop
lcall
ret
sub
mov
adc
int
aaa
js
push
repz
sub
cmpsb
das
sub
mov
scas
xorl
pop
lcall
sbb
out
outsl
pop
or
imul
les
mov
inc
mov
mov
rorl
jp
xchg
outsl
jns
nop
icebp
push
sahf
test
icebp
mov
int
repz
xchg
leave
daa
xchg
stc
aaa
repnz
jecxz
xchg
and
subb
push
rcrb
test
jb
loope
jle
xchg
into
and
gs
stc
lods
or
out
mov
sbb
xchg
loopne
fistpll
insb
stos
xchg
sbb
xlat
cmpsl
pop
ret
fistl
dec
sarl
lcall
outsb
gs
xchg
jne
xchg
adc
xor
test
pop
jno
sbb
outsl
mov
or
mov
lea
iret
xor
stos
mov
jmp
xor
cmp
fcmovu
xchg
pushf
mov
mov
ss
ljmp
push
pop
test
fst
dec
mov
les
dec
adc
push
dec
mov
aam
push
fdivl
sub
push
mov
adc
cwtl
movsb
pop
es
pop
leave
popa
gs
xchg
fs
push
sub
add
ss
pop
pop
push
imul
out
mov
popf
inc
or
mov
push
mov
jg
mov
push
movsl
and
sbb
pop
pop
push
imul
dec
sahf
loopne
and
jno
or
cmp
rcll
ss
mov
stc
enter
adc
cltd
xchg
movsb
inc
push
in
sbb
shlb
xchg
out
sbb
jge
sub
pop
fsubrl
loope
adc
cltd
lret
fwait
adc
adc
stos
mov
pop
jnp
popa
dec
ds
cs
sub
scas
cmc
mov
and
sti
test
jo
jns
mov
jne
mov
fisubrs
fidivl
xor
aaa
pop
sbb
psubsb
xor
and
xchg
or
sbb
ret
stos
pop
insb
movsb
fldt
jge
pop
jnp
iret
imul
jno
aaa
test
mov
jmp
inc
mov
int
repz
inc
loopne
test
dec
mov
call
push
pop
js
mov
mov
jl
lods
jmp
fstp
sti
fldenv
xor
leave
push
fwait
bound
mov
jne
mov
int
dec
xorl
inc
gs
pop
mov
scas
fs
sbb
push
sarl
pop
xor
call
push
push
xchg
dec
add
cs
inc
cmpsw
aas
jmp
add
jg
nop
repnz
cvttps2pi
dec
pop
jl
push
push
incb
shrl
adc
in
jns
leave
sbb
ret
and
inc
cs
xchg
sub
scas
loope
leave
test
jns
lcall
popa
mov
jge
pop
ja
je
xchg
repnz
rcrb
ds
jmp
test
bnd
repnz
outsb
mov
push
rcll
imulb
loop
xor
xor
loopne
outsl
adc
xor
jns
push
mov
insl
jle
sti
addl
pop
cmp
jns
je
mov
loope
daa
xor
sbb
mov
fs
inc
js
or
jns
dec
rcrb
loopne
and
pop
inc
mov
movsb
push
fs
bound
pop
pop
push
mov
xor
enter
push
pop
mov
xchg
and
push
push
and
std
pop
add
push
cmp
out
leave
xor
pop
je
shrl
adc
pop
jo
mov
jmp
xorl
and
ds
lahf
sahf
enter
and
jg
lcall
out
adc
and
loopne
sub
pop
inc
scas
gs
popa
adc
ret
rolb
dec
jno
lea
or
call
push
inc
inc
popf
mov
xchg
inc
push
add
push
dec
cmp
insw
lret
cld
dec
filds
push
sarl
or
cmp
les
leave
fistpl
mov
pop
rcll
ret
sbb
sub
push
xor
pusha
push
mov
ljmp
mov
int
cmpsl
pop
jmp
pop
insb
mov
push
adc
sbb
jnp
xlat
std
out
scas
sub
sbb
mov
icebp
fsubs
les
mov
popa
aam
jne
icebp
imul
movsb
dec
and
xchg
pop
sbb
xor
xlat
mov
test
call
pop
js
loop
mov
test
jl
mov
inc
jmp
mov
mov
inc
jno
push
add
adc
in
xchg
sbb
daa
fdivrs
stc
pop
stos
or
inc
inc
cs
pop
xchg
push
cmc
pop
fstps
xchg
dec
mov
mov
or
jecxz
movsb
fcoms
out
subl
das
dec
out
je
or
lds
mov
bts
push
jbe
stc
dec
mov
fadd
subl
in
and
lahf
lea
cmp
jge
lcall
sarl
or
dec
sbb
add
repz
repz
mov
out
sbb
mov
xchg
push
inc
or
xchg
pop
call
jae
mov
push
mov
or
out
sbb
or
mov
mov
addr16
xchg
push
out
loop
and
dec
cmp
adc
popa
in
test
cmp
mov
cmp
pop
in
push
push
cmpsl
push
push
or
inc
push
je
jnp
push
jle
cwtl
pushf
sbb
clc
test
sbb
sarb
xchg
mov
xchg
jnp
dec
lds
mov
mov
cmpsb
icebp
add
inc
inc
pop
jae
or
loopne
test
push
fadds
imul
inc
sub
mov
loop
popf
push
mov
or
or
mov
mov
inc
xchg
cmpl
xchg
mov
ljmp
mov
out
aam
in
push
add
movsb
sbb
psubusb
sti
sub
ja
fnstenv
jbe
fwait
jle
adc
sub
push
call
cli
setbe
pop
or
pop
cmp
jmp
jle
add
adc
xchg
lahf
pop
arpl
lahf
jecxz
cmc
scas
jnp
out
loope
lock
roll
dec
cmp
sbb
in
test
inc
push
push
xchg
out
jg
and
lcall
in
aaa
outsl
jp
dec
xlat
jo
and
sbb
sbb
je
xchg
mov
push
loop
lock
cmp
aaa
pop
jg
jne
pop
push
lods
dec
test
pop
js
sahf
arpl
in
into
loop
adc
daa
frstor
jmp
aam
inc
sub
rorb
dec
pop
xor
push
push
lods
lret
jb
push
pop
mov
or
repz
out
cmp
mov
loope
adc
lock
jb
mov
inc
cltd
jmp
jecxz
push
bnd
push
scas
adc
lret
sbb
and
inc
shrl
mov
jnp
add
jecxz
mov
pop
loop
sbb
lret
icebp
cmp
jl
mov
mov
test
repz
jge
gs
rcr
popa
les
movsl
inc
inc
jp
adc
dec
jnp
adc
lock
pop
mov
cmp
mov
sbb
loope
inc
xlat
sarb
xor
lret
cmp
add
inc
xchg
adc
pop
xor
mov
xchg
mov
cmpsl
mov
mov
dec
add
aad
aad
imul
addb
cs
lods
repnz
dec
mov
dec
xchg
jnp
pusha
mov
je
jge
sub
daa
stos
mov
pop
repz
push
shlb
sub
int
mov
or
fldcw
xchg
jge
sbb
es
aas
pop
in
ret
int3
xlat
xchg
in
dec
xor
pop
int
push
pop
int3
fs
xor
movsl
mov
stos
pop
hlt
or
or
sub
jno
loop
push
mov
mov
push
push
jne
adc
cmp
sub
push
sahf
cmp
nop
stc
gs
je
popf
shrl
aas
sub
repz
stos
push
loope
loopne
jp
repz
cmp
pop
and
stc
add
xchg
pushf
dec
push
sti
mov
pop
push
jle
push
pop
pop
jg
mov
and
in
aas
jge
in
jle
dec
in
fisttpll
out
adc
and
inc
mov
dec
out
or
pop
outsl
xchg
mov
jg
scas
cwtl
push
sub
push
sub
scas
fildll
int3
popa
je
lcall
ss
js
test
lret
sbb
xor
sahf
jno
pushf
sti
cld
insl
xchg
dec
adc
dec
mov
dec
xor
lea
cmpsl
mov
and
cmpsl
fstpt
outsb
in
jge
mov
shll
rol
adc
push
push
ret
xchg
mov
mov
lods
shrl
orb
pop
loopne
in
jl
sbb
or
mov
adc
imul
cld
pop
sti
and
jae
mov
pop
fdivrl
xorb
xchg
or
pusha
pop
lock
cmp
int3
sbb
out
sub
jmp
aam
xchg
js
clc
call
lret
dec
or
mov
sbbl
loope
scas
dec
fcmovnbe
push
imul
xchg
addr16
cmp
fstl
out
inc
hlt
dec
std
andl
ljmp
jle
popf
jbe
lods
mov
pop
or
mov
fstpl
inc
les
mov
cs
inc
mov
subb
xchg
inc
cltd
push
addb
loop
lds
shrb
xorb
sub
mov
jmp
sahf
jg
mov
xchg
or
mov
xor
loop
jecxz
add
negb
xor
dec
cmpsl
cmpsl
fimull
mov
fs
hlt
and
mov
inc
inc
mov
push
sbb
mov
pop
mov
mov
inc
ret
sub
xchg
jnp
xchg
xchg
movsb
jno
bound
sarb
cmp
inc
ret
into
shrb
in
mov
jb
mov
adc
data16
xchg
cmp
add
xchg
fwait
movl
pop
or
in
pusha
inc
adc
pop
inc
imul
cli
cmp
les
or
out
jnp,pn
cmp
xchg
pop
aas
stos
dec
push
test
fsubrl
pop
fcoml
push
and
std
fiaddl
mov
mov
jae
mov
popf
loop
push
push
or
adc
lock
jb
mov
test
mov
fldt
lods
scas
orl
es
mov
jl
push
ljmp
imul
loope
lahf
xor
dec
out
or
or
aad
mov
jg
cmp
iret
jns
mov
xchg
outsl
ror
aad
es
inc
pop
inc
jae
ficompl
pop
lret
lods
cld
hlt
mov
push
mov
test
sub
jnp
add
adc
pop
adc
lds
pushf
pop
adc
push
rol
inc
or
lret
clc
loop
insb
or
cmp
lds
shrb
mov
mov
lea
adc
jge
cs
or
or
loop
insl
dec
jmp
inc
sahf
je
xchg
scas
xchg
mov
int3
cmpsl
sti
jle
jp
cmpsl
sbbb
mov
jge
pop
or
or
lds
ja
sbb
pop
and
call
movsl
adc
inc
js
mov
lret
sbb
leave
dec
inc
in
into
xchg
popw
rolb
xor
or
xchg
enter
lock
sahf
cmp
and
je
hlt
mov
mov
jge
int3
sbb
add
or
imul
test
add
aas
scas
dec
lock
dec
pushl
xchg
inc
popf
addr16
aam
out
out
repz
int
fcmove
pop
xor
stos
pusha
or
fcomps
pop
out
cmc
loope
bnd
imul
pop
xchg
adc
lahf
lods
movsl
cmp
and
frstor
sub
lcall
inc
pop
nop
lds
xchg
lahf
mov
mov
call
dec
mov
fisttpll
xchg
ds
push
xor
cmc
pop
arpl
inc
test
add
adc
popa
scas
adc
mov
pushf
in
icebp
inc
fcom
pop
dec
outsl
pusha
mov
cmc
or
gs
inc
xchg
les
lods
inc
xchg
int3
xor
xor
pushf
insb
fwait
cld
jo
das
fldt
dec
sub
sti
sahf
es
pop
les
mov
push
jns
addl
mov
loop
push
xchg
cld
lahf
cli
imul
test
leave
mov
pushw
cltd
hlt
shrl
std
imul
ret
stos
jmp
dec
insl
decl
ljmp
clc
inc
lea
cmpsl
dec
push
out
repz
outsl
dec
mov
mov
lret
mov
aam
fwait
push
scas
je
shrb
dec
negb
aas
cmp
lahf
mov
gs
mov
adc
adc
push
or
sub
insl
mov
push
inc
popa
test
jns
xor
jnp
mov
push
das
fisubl
shlb
jl
xchg
dec
test
imul
xor
and
fcmove
imul
mov
add
push
das
mov
mov
xor
ljmp
lea
imul
mov
add
fwait
cld
fsubrl
mov
das
rorb
xchg
inc
leave
shrb
stc
out
push
jmp
push
cmpsb
jbe
lcall
subb
cmp
bound
shr
dec
mov
aas
fcompl
stos
call
rcrb
fcmovbe
fucom
scas
pop
adc
or
cmp
ljmp
xchg
mov
push
mov
shll
and
scas
rolb
ltr
fisttps
and
pop
jo
call
jo
aad
push
push
and
and
push
les
mov
insb
sti
cmp
repnz
push
inc
jno
inc
jae
aaa
mov
pop
dec
mov
xlat
jo
jno
adc
loope
int
mov
lcall
pop
jecxz
xchg
dec
cmp
add
das
inc
test
mov
xorb
dec
mov
inc
mov
pop
pop
or
loope
lret
sub
push
int3
fsubrs
sub
xor
pop
cld
cli
cli
push
mov
push
xchg
pop
gs
pop
sub
adc
pop
lods
adc
push
sbb
dec
dec
pusha
push
sahf
inc
cwtl
xor
sbb
out
push
loope
pop
push
mov
sti
lret
stc
test
mov
lea
enter
push
pop
scas
mov
insl
xor
int3
inc
scas
sbb
out
gs
adc
rol
mov
cmp
inc
add
pop
mov
out
inc
cmpsb
clc
lret
add
inc
pop
fadd
push
adc
movsl
test
das
jp
in
ja
pop
mov
les
cmp
in
push
enter
sbb
push
scas
mov
in
call
cmp
js
mov
call
pop
cmp
test
sti
xchg
filds
in
add
mov
push
mov
push
aam
in
pop
ss
in
leave
add
dec
nop
clc
stos
stos
jno
lcall
pop
and
les
lea
sub
mov
sub
jb
mov
mov
testl
or
dec
outsb
inc
imul
aaa
or
in
xor
pop
sbb
or
or
popa
mov
push
pop
lods
jmp
xchg
jno
inc
xchg
arpl
push
in
mov
pop
jge
and
inc
aas
xor
cld
or
fmul
and
jo
fsubs
xor
mov
dec
jo
ror
stc
fidivrs
cs
imul
clc
sub
sbb
xchg
push
negl
and
shll
in
cmp
and
jge
inc
lods
loopne
movb
dec
fmuls
jg
mov
jg
insb
sub
testb
mov
rclb
popf
test
jo
jbe
xor
test
lret
daa
ds
jmp
pop
sub
fisttpl
push
ds
scas
jmp
movl
lods
movntq
xchg
hlt
adc
int3
mov
stos
fimull
sbb
add
loopne
or
or
cmp
jmp
push
in
int
shrl
jae
loope
pop
cmpsl
add
stos
ds
je
or
xchg
dec
add
call
out
aaa
sub
xor
xorl
push
rcr
cmp
idiv
fmuls
sbb
mov
dec
call
add
xchg
lahf
inc
mov
push
cmp
mov
jle
mov
or
mov
aad
out
jae
jnp
xor
sbb
fmull
jne
inc
mov
adc
xor
jo
outsl
test
jle
pshufw
nop
sbb
stos
dec
mull
mov
dec
cs
in
jbe
or
cld
mov
stos
int3
xor
cmp
bound
jns
mov
jne
mov
mov
or
jne
sbb
pop
fsubs
sub
adcl
shrb
or
inc
popf
push
mov
mov
push
std
dec
push
jge
fcompl
adc
add
inc
leave
fbld
xchg
xor
sarl
outsl
mov
pop
insl
pop
jo
aaa
std
test
push
je
inc
push
lret
aaa
adc
and
dec
sbb
mov
nop
or
push
mov
js
push
cmp
fnstsw
mov
and
lcall
cmp
movsl
mov
jl
ret
push
dec
add
jo
cld
mov
leave
fnstsw
cmpsl
pop
call
jae
jb
shll
bound
xor
and
je
sub
adc
nop
sbb
mov
push
push
mov
cmp
aam
and
jp
rorb
std
cmpsb
mov
cmp
pop
popf
jle
sub
sub
mov
jns
push
adc
mov
sbb
scas
and
fwait
jnp
arpl
or
aam
add
leave
ljmp
stos
push
pop
in
cs
bound
and
test
xor
and
and
out
ja
fidivl
lds
ret
xchg
jno
ror
inc
inc
pop
mov
mov
into
sub
add
jbe
pop
mov
in
ficoms
aam
cli
aad
sbb
pop
test
dec
mov
shlb
push
or
je
sbb
mov
std
xchg
ljmp
sub
lock
std
daa
add
ja
cld
idiv
scas
loopne
lods
mov
jl
push
mov
inc
out
orl
test
xchg
adc
mov
add
push
pop
push
add
push
nop
insl
fisttpl
dec
loopne
mov
jle
orb
daa
pop
pop
pusha
mov
js
mov
pop
popf
pop
insb
addr16
jmp
cld
sub
popf
int3
jmp
jbe
es
outsl
cmp
outsb
xchg
ret
xchg
and
lea
test
xor
mov
ss
lea
cmp
or
jns
add
mov
sbb
push
clc
out
movsl
cmp
sub
adc
roll
adc
shr
or
shl
cmp
mov
sti
movsb
pop
mov
and
xchg
dec
sbb
aas
out
xchg
cmp
sbb
pop
cmp
cli
imul
in
lret
lcall
mov
push
and
pop
icebp
mov
popf
or
inc
mov
mov
orl
imul
ret
sahf
test
lcall
sub
sbb
xchg
mov
ja
xlat
mov
jg
ja
popa
sbb
mov
pushf
pop
adc
cmp
adc
cmpsb
push
cld
mov
dec
mov
in
xchg
fsts
adc
scas
mov
push
xchg
inc
mov
mov
xor
pushf
lret
mov
pop
xchg
pop
sbb
movsl
or
sub
inc
adc
xchg
jle
faddp
inc
and
divb
or
jle
mov
cmp
outsb
jbe
stos
enter
jne
cs
dec
mov
test
stc
aad
cmp
pop
rcr
cltd
and
lret
xchg
outsl
and
nop
dec
add
mov
hlt
xor
or
je
or
sub
inc
addb
or
call
roll
daa
xor
and
and
push
fldenv
sti
mov
dec
and
fstps
lods
sbb
inc
aas
cmp
mov
push
or
negb
ficoml
cmp
mov
jle
sub
jno
xor
sti
dec
lea
or
mov
in
cwtl
ja
pop
jo
push
faddp
out
enterw
xchg
xchg
lret
mov
add
scas
and
popf
stos
pop
dec
inc
popf
rcl
push
ret
or
inc
adc
jno
std
jecxz
push
out
cmp
mov
ret
adc
pushf
mov
rcrl
mov
inc
or
add
and
jge
cld
mov
into
pop
or
fildll
cmpb
mov
mov
xchg
mov
jg
jmp
fwait
in
and
lods
cli
pop
and
pop
pop
xchg
mov
ljmp
xchg
loop
popf
xor
test
add
enter
insb
jge
cli
push
clc
pop
in
mov
pushl
add
sbb
jecxz
xchg
sub
das
sub
pop
ds
fsubp
xchg
xchg
sub
xchg
adc
jge
insl
mov
movsl
ret
jge
mov
jns
outsl
gs
or
adc
data16
rolb
mov
in
xchg
cmp
cmc
push
xchg
xchg
imul
mov
pop
xchg
das
jmp
add
push
ja
sbb
dec
popa
pop
pushf
pushf
movb
xchg
mov
push
mov
out
mov
xor
push
mov
lret
pop
fucomp
decb
add
jg
dec
pop
out
cmp
and
dec
call
leave
jp
popf
add
mov
cmpsl
adc
js
sbb
cltd
lahf
jno
sub
pop
xor
sbb
ja
push
mov
or
mov
iret
loop
hlt
xchg
decl
dec
cld
ja
jb
jl
inc
pushf
pop
jbe
jle
jae
movsl
add
xchg
jl
sbb
stos
inc
pop
push
fldl
mov
push
rcrb
and
push
jno
test
push
imul
xchg
or
inc
mov
inc
or
pop
jo
xchg
ja
xchg
sbb
and
pushf
jns
ja
cli
pop
stos
inc
stc
mov
inc
sbb
aaa
and
arpl
test
ret
push
sbb
pop
xorl
rorl
loopne
jg
int3
dec
bound
jg
mov
in
or
fucom
sbb
sub
mov
mov
xchg
iret
roll
pusha
jmp
xor
sahf
test
cmpsl
outsl
int
movsl
jge
repnz
push
addr16
addl
loope
dec
inc
fsubs
subb
sbb
add
push
inc
adc
mov
enter
jge
mov
cmp
cmp
pushf
cmp
test
pushf
or
subb
jb
dec
sarl
scas
adc
int
jbe
cmpsl
test
sub
mov
push
jo
cmc
push
jle
push
jp
inc
inc
cmpsl
test
lea
mov
bound
mov
cmpl
or
sub
jecxz
dec
mov
push
leave
popf
outsl
dec
std
fstpl
aas
outsb
je
adc
jb
stc
xor
sarb
cmp
fcmove
xchg
shrb
push
aas
add
or
dec
add
ja
in
jl
sub
mov
fdivs
mov
inc
leave
xchg
adcb
imul
out
imul
addr16
mov
loopne
or
sbb
loop
gs
cltd
test
and
dec
into
test
scas
shrb
push
iret
push
out
and
jle
xchg
in
in
or
imul
imul
and
xchg
adc
out
das
xorb
pop
js
arpl
adc
adc
addb
test
cli
inc
xchg
sbb
rep
shrl
std
fdivr
push
dec
daa
add
call
test
mov
sbb
in
add
cmp
adc
out
or
adc
outsl
dec
scas
dec
cld
imull
inc
mov
out
stc
popa
dec
loope
xchg
sbb
lock
das
loop
mov
int
sub
sar
test
add
je
sbb
jne
jmp
insl
cld
dec
fbld
rorl
fwait
mov
pop
jb
mov
xlat
sbb
jnp
ja
aaa
inc
xchg
mov
inc
push
or
sarb
or
xchg
out
std
cmp
shr
fcmove
mov
and
cmp
rcll
std
add
push
xchg
mov
jae
rcll
and
stc
mov
pop
mov
arpl
mov
adcb
sti
inc
add
xchg
std
or
xor
filds
xor
ret
mov
fdiv
inc
jo
push
inc
out
cmp
and
hlt
push
int3
mov
loopne
cs
bnd
sub
fistpl
push
mov
and
lock
scas
addr16
cmc
aas
push
pop
lea
cmp
pop
pusha
cli
add
cld
xor
roll
push
aam
shlb
insb
hlt
lret
stos
cld
shl
rol
jno
ds
dec
inc
jns,pn
lret
call
decb
lods
or
pop
push
stos
dec
jb
movb
xchg
push
fwait
or
pop
xor
adc
dec
mov
add
mov
fstpl
das
cmpsl
add
pusha
mov
nop
and
scas
and
out
jl
add
mov
out
test
addr16
lods
nop
fstpt
popa
push
pop
lcall
out
xor
lahf
out
mov
into
sarl
dec
inc
je
in
xchg
xchg
or
dec
iret
adc
cmp
jno
jns
pop
sbb
les
push
pusha
mov
add
cmp
sbb
out
pop
add
xor
adc
sub
insl
jno
and
mov
xchg
xchg
leave
cwtl
pop
sbb
cwtl
cmp
jno
arpl
out
lcall
lret
push
mov
movsb
addr16
loope
das
inc
in
lret
imul
fbstp
adc
jns
jg
fidivrs
dec
push
stos
jo
push
jbe
xor
dec
pop
sbb
or
inc
sti
add
xchg
fs
and
aam
cmpsl
adc
xor
cmp
pop
lea
mov
and
push
iret
xlat
gs
adc
fcoms
and
push
push
mov
or
loope
lea
xchg
outsb
out
push
cmp
fdivs
push
add
sub
call
inc
ucomiss
inc
add
mulb
stc
dec
dec
jl
in
hlt
add
in
mov
push
enter
nop
in
imul
pop
fldenv
and
dec
addr16
dec
addl
and
pop
std
in
dec
xchg
pop
and
pop
addr16
push
mov
sub
jge
pop
xor
shlb
push
inc
pop
scas
inc
xchg
mov
ret
sahf
xchg
mov
or
add
push
test
cmp
mov
or
inc
int3
gs
inc
scas
in
sub
mulb
pushf
sti
mov
xchg
mov
or
xchg
cmpsb
ret
pop
sbb
fisttps
in
sbb
add
je
out
push
mov
pushf
or
dec
roll
adc
sarl
std
add
lods
mov
notb
sub
incl
mov
xchg
mov
adc
pop
adc
arpl
divb
icebp
pop
xchg
gs
int3
and
test
rorb
or
cwtl
jo
loopne
rep
jge
mov
sbb
fincstp
movsb
inc
xor
in
mov
or
xchg
mov
movsl
cmp
push
adc
cmp
mov
mov
lret
xchg
aad
inc
jecxz
outsb
fisubs
dec
add
js
nop
dec
outsl
loop
xor
mov
and
xor
sbb
adc
and
and
dec
jmp
adc
mov
stos
inc
pop
xchg
sub
fisubrl
call
jnp
sub
pop
cmp
repz
out
aam
xchg
les
dec
stos
dec
jmp
xor
lcall
hlt
ja
sahf
test
mov
loope
mov
add
xchg
jp
cmc
ja
pop
pop
cmp
mov
out
movsb
or
add
push
xor
inc
hlt
or
inc
hlt
outsb
fwait
push
into
inc
fwait
inc
dec
out
sbbl
fs
cmpsl
aad
mov
pop
out
int
jbe
repz
std
mov
cld
push
xchg
push
ret
pop
mov
idivb
test
icebp
sbb
and
mov
adc
inc
xchg
sarl
pop
fisubrl
xor
ja
sarl
dec
cmp
jo
js
rcr
jmp
jle
mov
jmp
je
outsb
adc
arpl
test
iret
in
push
addr16
fstl
scas
test
pop
add
cmp
adc
and
mov
mov
sbb
dec
xorl
mov
stos
mulb
mov
mov
cmp
movb
pop
pop
das
pushf
clc
or
cmp
mull
cmp
mov
mov
pop
mov
pop
pop
sbb
jge
ret
fsts
mov
xchg
jp
test
inc
xor
aaa
scas
pop
jmp
and
mov
mov
cmp
mov
add
xchg
push
fcomps
mov
rorb
lcall
iret
mov
and
sub
popf
mov
sub
and
mov
shlb
adcl
push
mov
sti
loopne
fwait
dec
mov
push
xchg
jne
mov
xchg
xor
ret
lea
sub
cmp
inc
sahf
pusha
in
outsl
lods
test
add
movsl
dec
and
movsl
xchg
sub
scas
pop
mov
dec
aad
xor
jae
in
cmpsb
xchg
outsl
xchg
sub
cmp
mov
ljmp
push
jno
push
lea
jns
or
inc
mov
out
cmp
fidivs
mov
das
sub
lea
out
xor
jecxz
cli
mov
loopne
aas
push
sti
aas
int3
mov
xor
ret
ret
dec
in
shlb
test
dec
into
or
mov
cmp
adc
fidivl
movsb
mov
adc
mov
and
adc
dec
xor
lahf
cwtl
mov
jae
pop
cltd
in
mov
dec
test
mov
lock
adc
push
mov
movsb
jae
jo
jbe
push
pusha
lods
mov
inc
ds
shll
jg,pt
adc
imul
clc
repnz
pop
outsl
cmp
pop
inc
mov
fldl
sbb
mov
aaa
mov
jge
add
cmp
adc
xchg
mov
sbb
cltd
inc
cmp
adc
push
mov
cmp
rcr
rcrl
lcall
test
xchg
pop
out
andl
mov
scas
repz
sub
decb
lcall
fidivrl
loopne
loopne
fdiv
dec
out
jl
push
clc
ljmp
cli
xchg
sub
cmp
stos
xor
push
adc
iret
fcmovnu
addr16
push
xchg
jl
repz
mov
push
lcall
into
cmp
sahf
sbbb
in
push
in
xchg
mov
add
jbe
rcr
add
add
es
lret
xorl
ss
or
call
adc
mov
fld
sti
cli
cmpsb
sbb
loopne
jmp
imul
ror
cli
mov
add
iret
ja
xor
or
imull
pop
jnp
sbb
mov
push
movsb
test
loop
scas
mov
push
insl
into
nop
push
jno
jae
lret
push
arpl
imul
cmp
fidivs
mov
adc
xor
int
or
sbb
movsb
daa
xchg
fsub
loopne
dec
arpl
pop
mov
fnstcw
jbe
ret
push
stos
adc
std
jne
notb
cmp
dec
fldcw
jno
jb
and
inc
jbe
mov
pop
fsubrs
fs
jnp
andb
mov
and
ds
out
lods
and
sub
aad
popf
cmp
adc
outsl
clc
mov
jge
xrelease
insl
lods
filds
insb
and
dec
dec
js
xor
leave
rcl
push
es
daa
xor
leave
mov
insb
in
ret
pop
fdivr
mov
jmp
xchg
lods
fisttpl
and
ret
movsl
lods
lods
mov
test
inc
lahf
jno
fcomip
fucomi
add
lret
adc
mov
imulb
int
out
cmp
arpl
jae
enter
popf
in
arpl
pop
lods
sub
mov
xlat
mov
daa
test
pop
ljmp
push
out
lahf
adc
movsb
mov
xor
pusha
inc
btr
xchg
cmp
sarl
and
int3
jns
sbb
stc
imul
or
pop
icebp
in
push
fs
fcmovbe
push
cmp
inc
jno
mov
mov
xchg
out
fxch
std
push
ss
and
jnp
mov
push
push
cmp
mov
cltd
mov
inc
xor
lds
ret
or
jb
or
lahf
js
sub
ret
aas
mov
hlt
scas
or
ljmp
mov
mov
mov
push
lock
fwait
movsb
mov
scas
cmpsb
dec
jo
les
stc
mov
push
enter
jno
xor
mov
inc
xchg
lcall
sar
shlb
cmpsb
int3
test
enter
and
xchg
sbb
xchg
andl
mov
imul
aas
cmp
dec
jmp
sbb
sbb
jmp
inc
pop
inc
cltd
xchg
shl
fdivl
imul
pop
fiadds
adc
jns
add
push
push
ja
push
cltd
sub
fidivs
xchg
lahf
xor
dec
mov
and
push
lock
xor
mov
sarl
mov
enter
data16
and
cmp
inc
jle
outsl
or
adc
ss
out
push
mov
sbb
stos
int3
xor
mov
or
add
frstor
mov
push
cld
cs
pop
push
sbb
or
jl
mov
ja
xchg
sub
add
mov
jbe
sbb
xor
in
xor
pop
addb
cmpsb
loop
push
in
inc
or
mov
imulb
scas
xlat
sbb
mov
imull
cmp
popf
lret
sahf
subl
xor
xorb
outsl
xor
or
pop
mov
mov
pusha
pop
test
add
cmp
sub
xor
xchg
mov
inc
jg
pop
cmp
je
fnstcw
mov
shll
fxch
mov
mov
aas
push
lock
mov
jmp
out
andb
arpl
loope
data16
or
stc
pop
jno
loop
dec
mov
inc
cmp
jecxz
sbbl
mov
sti
dec
ss
mov
add
mov
shrl
fwait
je
or
out
lock
dec
dec
xchg
jns
mov
sub
lret
stc
mov
fisttps
jnp
pop
cmp
iret
dec
or
movsl
mov
jmp
cli
sbb
pop
scas
xlat
int
pop
ret
pop
or
fisttps
rclb
push
jo
lods
push
mov
aaa
or
inc
ret
mulb
fisubl
xchg
add
orb
imul
push
rcl
in
divl
push
mov
sub
ficompl
lock
lods
movl
outsl
bnd
adc
sbb
push
in
or
imull
cli
mov
sub
hlt
leave
es
aas
in
sbb
ljmp
sbb
push
orl
mov
mov
fwait
sar
scas
mov
in
es
xchg
dec
cwtl
pop
inc
punpcklwd
pop
mov
fucomi
repnz
cli
dec
jns
mov
nop
mov
into
mov
and
mov
bound
fucomi
fadd
inc
jl
lcall
inc
dec
dec
sbb
or
add
push
stos
sub
xor
das
data16
mov
or
ss
push
xchg
arpl
arpl
mov
inc
stos
xchg
fs
repnz
shrl
mov
insl
mov
mov
mov
xor
test
std
aaa
insb
cmpsl
imul
jp
sub
jg
rcll
jl
in
std
cmp
roll
hlt
popf
push
pushf
jecxz
mov
jmp
loop,pn
pop
lock
mov
fcmovu
arpl
sbb
cs
jg
push
les
jae
adc
fisubl
push
mov
pmaddwd
jp
xlat
das
mov
jae
mov
mov
jle
lods
sbbb
addr16
xor
aas
lahf
movsb
test
out
loopne
pop
daa
pushf
inc
or
add
sub
adc
mov
icebp
int3
cmpsl
inc
bound
bound
mov
cmp
add
hlt
inc
push
mov
in
fwait
sub
pop
lret
fildll
dec
sub
jb
adc
mov
mov
dec
push
repz
add
movsb
pop
push
ljmp
inc
and
cmc
rolb
loopne
push
out
cmp
rcl
lcall
jb
push
mov
jo
inc
aam
sbb
sbb
fiaddl
les
xchg
sbb
lods
dec
mov
dec
pop
popl
dec
loope
sti
and
push
out
sti
gs
mov
mov
sbb
mov
mov
ja
or
sbb
and
fimull
inc
and
ja
fsubrs
mov
loopne
mov
fstl
sarl
lds
inc
push
xchg
js
loop
fdivrl
lret
cwtl
adc
mov
pop
jge
push
je
add
push
popa
aad
popf
xchg
cmp
lods
inc
mov
insb
jp
pop
das
pusha
insl
inc
mov
mov
outsb
push
xchg
jl
ss
scas
push
movsb
stc
dec
stc
lret
mov
adc
and
sub
loop
test
mov
fildl
xor
add
xor
les
and
sub
aad
push
inc
ljmp
mov
mov
lods
ss
jno
andb
sub
jne
cmpsb
mov
mov
nop
jl
sub
scas
adc
jp
mov
mov
mov
mov
lds
xor
and
mov
xor
mov
xor
rolb
mov
stos
mov
adc
push
xor
pop
mov
or
add
shl
inc
lea
out
jo
imul
lret
jmp
pusha
inc
or
ja
shlb
iret
inc
fcomp
jmp
call
data16
stos
sti
pop
repz
daa
jns
mov
fwait
sub
aad
jecxz
or
jmp
inc
cmp
pop
dec
js
cmp
cs
mov
or
cwtl
mov
lock
negb
push
sbb
lcall
fisttpl
jecxz
pop
in
cmc
mov
mov
cmc
cmp
ret
dec
mov
in
cmp
xor
fdivrs
push
jae
pop
and
xor
out
cmp
mov
ret
fadd
mov
inc
pusha
test
mov
adc
pushf
das
mov
sbb
inc
nop
aas
mov
rorb
push
pop
push
daa
push
jns
test
imul
push
mov
cmpsb
lea
loopne
and
xlat
mov
enter
mov
ss
mov
cltd
mov
bound
xchg
arpl
push
aas
mov
xchg
and
push
lods
les
test
add
mov
mov
cli
nop
iret
shlb
xchg
mov
push
pop
xchg
cmc
sbb
cmp
jo
sbb
fs
jle
icebp
repz
rorb
lea
mov
clc
adc
adc
bound
stc
jb
das
adc
jbe
lock
rcr
cld
popf
push
ja
mov
xchg
sub
or
xchg
jle
or
std
adc
jae
ds
adc
lock
jns
xchg
lret
outsl
ret
add
push
cli
lock
or
ss
dec
lahf
mov
cwtl
cld
adc
scas
cltd
test
push
jb
rcrl
jge
popf
xchg
cwtl
int3
mov
mov
mov
xorb
lods
push
sar
js
pop
cmpsl
insl
inc
add
mov
cmp
inc
xor
je
xor
fwait
stos
sbb
cmpsl
jmp
or
push
mov
push
sbb
sbbb
jns
aad
cmp
pop
dec
add
jno
vmread
repnz
aam
or
lret
push
inc
pop
out
push
xor
shrb
cmpsl
scas
data16
fsubs
call
mov
cmp
jb
cld
adc
xchg
pop
lret
adc
and
outsl
pop
and
out
pop
pop
mov
pop
dec
or
jbe
and
imull
pop
cmp
or
sub
lret
popa
add
fldl
inc
cmp
ja
push
adc
jmp
icebp
inc
pushf
clc
mov
incb
push
sbbl
fdivl
adc
and
jno
insl
jge
mov
test
das
ret
or
mov
out
cmp
fstp
inc
outsl
scas
popf
lea
mov
cs
imul
push
or
cwtl
out
inc
mov
adc
adc
sub
insb
pop
xchg
subb
imul
sbb
lret
popf
scas
fs
stc
shl
fcmovb
movsb
push
pop
add
add
xchg
cmp
stos
mov
imul
adc
mov
dec
dec
inc
pop
mov
xor
scas
adc
addr16
push
pop
sub
jmp
add
jle
dec
iret
int3
cld
mov
jnp
mov
xchg
andb
dec
in
in
jb
lret
movsb
jne
sbb
lock
jb
rol
jle
iret
scas
fchs
in
int
or
psubd
mov
int3
andb
inc
xchg
rcll
cmp
mov
je
jp
push
lahf
shlb
mov
call
ss
mov
iret
in
mov
fsubrl
mov
adc
pushf
dec
rcl
arpl
test
stos
cmp
hlt
cmc
iret
int
or
pushf
xchg
mov
cmc
inc
aam
dec
dec
test
jg
pop
clc
mov
loope
push
mov
mov
push
cwtl
xchg
aam
mov
leave
dec
sbb
push
retw
lcall
popa
pop
out
andl
mov
sbb
dec
or
cmp
mov
push
ljmp
ret
cmp
aad
sub
pop
rcrb
repnz
sahf
push
inc
shl
flds
jecxz
nop
call
xchg
or
decl
jns
imul
cmp
xchg
push
adcl
xchg
sub
andb
inc
mov
dec
mov
jbe
sahf
or
dec
cli
loopew
cld
mov
je
mov
rclb
jne
and
mov
cmpsl
out
or
xor
xchg
mov
cltd
push
test
icebp
imul
ja
inc
cwtl
idivl
orb
in
loope
nop
test
cmp
sub
jle
dec
hlt
cmpsl
xor
mov
jb
insl
push
pop
repnz
inc
stos
inc
inc
test
dec
jg
inc
sbb
ret
cmpsb
sbb
adc
insl
pop
xchg
cmp
lcall
pop
dec
imul
mov
and
mov
pop
rclb
dec
es
popa
xchg
add
jb
jo
xchg
andl
sub
mov
mov
push
cmp
pop
lock
out
jle
int
ja
pop
cld
add
and
push
pusha
jae
sti
sarl
popa
pushf
jl
xor
mov
out
bound
inc
fstp
inc
mov
sub
push
mov
sub
test
cli
outsb
jg
movsl
push
bound
clc
aad
test
dec
push
fwait
dec
lods
xlat
jae
or
jns
pop
mov
dec
pop
cwtl
jo
clc
es
pop
in
mov
and
imul
and
loop
out
xchg
jmp
lea
xchg
test
int
popf
and
jo
icebp
push
pop
pop
popa
les
iret
lcall
mov
jge
data16
add
cmp
sub
js
and
and
iret
pop
push
ret
dec
xor
push
mov
in
icebp
jmp
stc
mov
mov
int3
cmp
jbe
rcl
jge
das
adc
mov
xchg
jae
dec
sbb
pop
inc
push
pusha
fsqrt
inc
xchg
xchg
inc
xchg
popf
pop
adc
sti
fildl
imul
mov
adc
mov
sbb
jne
or
mov
jmp
in
sarl
stc
pusha
mov
jae
cmp
cmp
jne
adc
sbb
or
pop
lret
add
mov
pop
xor
pop
fs
dec
xchg
aad
fs
pop
test
jae
add
sub
push
add
dec
mov
lret
push
test
or
sub
or
xchg
lods
jg
and
pushf
je
imul
mov
mov
shl
cld
imul
xchg
out
in
inc
fsubl
ret
repnz
arpl
sti
jecxz
fidivs
nop
das
xchg
mov
xchg
aad
test
push
rorb
das
addr16
add
aad
or
mov
push
fmuls
mov
xor
ja
mov
sbb
bound
xor
cmpsb
jnp
lcall
cmpsl
xor
xor
cmp
imul
pop
pop
jmp
adc
dec
or
pop
push
cmp
sbb
mov
enter
loop
xchg
add
sbbl
out
ljmp
loope
cmpl
jnp
cld
pusha
push
sub
test
jb
xlat
sub
jg
sub
cmp
inc
mov
mov
por
je
push
clc
mov
pop
cmp
sbb
and
jle
scas
repz
inc
or
imul
pushf
inc
sbb
inc
in
mov
or
out
sbb
sbb
lret
int3
add
scas
pause
shl
sarl
and
push
rcr
cmp
xchg
fsubs
and
mov
or
imul
stc
mov
mov
mov
in
dec
mov
adc
inc
dec
jle
fcomip
sub
dec
jb
jle
push
pushf
sub
shl
pop
push
cmp
xor
or
adc
adcl
orl
les
dec
out
lock
jmp
xor
aaa
pop
adc
or
xor
cld
mov
jo
dec
roll
xchg
xlat
aaa
mov
cmp
dec
mov
cmp
call
push
push
nop
repz
pop
xor
cld
test
cmpsl
mov
sbb
cli
imul
lret
pop
pop
inc
xor
xchg
cmpsb
subb
int3
lret
scas
pop
or
xchg
and
adc
aas
es
ja
inc
dec
testb
add
mov
push
xchg
std
mov
fwait
xchg
xor
jmp
loopne
stos
mov
pop
dec
pop
incb
or
and
sub
and
ss
push
dec
shll
adc
stc
xchg
rcll
scas
sbb
pop
dec
jno
adcb
pop
sub
jl
popa
xchg
pop
enter
xchg
jo
je
cmp
fildll
in
xlat
cmp
mov
fabs
addb
dec
mov
ljmp
mov
and
cmp
hlt
push
leave
sti
fsubrs
dec
movsl
imulb
loope
add
push
fadds
xlat
pusha
cmp
pop
lret
ret
mov
fcompl
clc
aad
out
mov
lahf
push
or
cmc
mov
pinsrw
fwait
in
loopne
push
xlat
and
test
cmc
mov
mov
mov
pop
sbb
inc
out
pop
cmovg
das
xor
pop
pop
sub
mov
lods
jecxz
xor
add
add
lret
pop
dec
xchg
iret
xchg
test
mov
xchg
jl
mov
shrl
cwtl
cld
pop
enter
cltd
mov
pop
xchg
mov
test
pop
lock
bts
jecxz
jnp
mov
stos
and
fucomip
adc
mov
out
test
cwtl
or
clc
iret
sub
sahf
dec
sub
lret
mov
jl
mov
xor
or
push
mov
mov
movsl
inc
je
inc
add
rorl
push
push
ss
push
or
out
sub
xchg
and
sti
je
pop
pop
dec
push
into
adc
push
outsb
inc
lods
dec
cmp
fimull
sub
mov
iret
mov
es
lods
daa
dec
jg
hlt
xchg
aam
test
in
imulb
mov
negb
cmc
std
stos
pop
test
inc
clc
sarb
lods
aaa
adc
and
sub
add
les
cmpsl
pop
orl
loope
shll
dec
pop
addr16
mov
lea
dec
hlt
cmpl
stos
xchg
add
cmpsl
or
int3
arpl
out
add
jge
leave
ds
sbb
inc
mov
jmp
lahf
xchg
outsb
testl
outsb
push
and
push
test
xor
aas
stos
lock
ja
out
js
mov
sbb
pop
bsr
les
lahf
pop
dec
ss
adc
js
les
pushf
xchg
shlb
scas
inc
mov
sbb
movsl
sub
xor
fstps
into
mov
fmull
push
lahf
jl
sub
xchg
cmpsl
sub
jl
and
xchg
addr16
sub
add
fwait
sbb
pop
inc
dec
or
iret
adc
sub
push
jo
aaa
icebp
pop
int3
add
icebp
fs
jb
push
pop
call
cmpsb
mov
call
in
xchg
jo
jmp
or
daa
xlat
mov
sbb
dec
imul
mov
dec
iret
insl
les
jbe
xor
add
rol
jecxz
cli
shrb
addb
shll
sbb
or
add
mov
mov
aaa
imul
iret
lds
jne
lret
jno
stos
adc
sti
pop
push
jb
test
mov
inc
sub
pop
jl
adc
xchg
arpl
pop
cmp
xor
shlb
sub
push
fwait
pop
mov
aam
imul
cwtl
cmp
xlat
negl
data16
subb
inc
sub
mov
cld
dec
frstor
push
mov
ret
les
xchg
sbb
iret
dec
or
adc
outsl
or
dec
test
jecxz
push
pusha
dec
xor
push
add
das
lcall
xchg
out
mov
popf
xchg
cmp
push
lahf
sbbl
sbb
js
daa
xchg
push
jne
pop
rolb
or
loope
in
jbe
pop
inc
sbb
popa
cli
fisubrs
cmpsl
ficompl
cwtl
xor
push
mov
pop
into
mull
test
push
ffree
jns
jae,pn
jle
pop
mov
mov
jp
adc
or
adc
sbb
adc
xor
push
cmp
lods
je
sahf
dec
push
mov
in
in
out
mov
outsl
mov
test
cmpb
xchg
add
cltd
ret
lret
and
rclb
leave
repz
xchg
sar
iret
pushf
dec
das
sbb
cwtl
sbb
ret
movb
or
lret
mov
ja
mov
leave
and
sarl
js
incb
movsb
inc
ret
adc
repnz
fildl
cmp
push
push
jnp
dec
xor
sbb
xlat
mov
scas
in
cs
push
mov
repnz
cmp
mov
arpl
mov
xchg
mov
fldcw
cli
lahf
aad
shll
inc
loop
mov
or
mov
flds
xchg
ret
es
loope
imul
adc
mov
mov
scas
or
hlt
xor
js
fdivrl
fs
addl
call
jbe
out
es
mov
xchg
aad
icebp
lods
shl
mov
or
push
and
jns
mov
xchg
push
ficoml
inc
mov
dec
or
mov
dec
insl
mov
into
cmp
shl
movsl
cmp
test
leave
insb
roll
movb
dec
cmpsb
or
sub
xchg
imul
jp
mov
inc
test
dec
into
call
mov
jb
cli
push
fbld
movsb
jmp
push
nopl
lahf
mov
xor
ljmp
imul
xor
pop
dec
in
icebp
xchg
sbbl
push
stos
out
inc
or
enter
add
arpl
outsb
inc
les
xchg
inc
sbb
dec
jns
pushf
dec
ret
xchg
adc
sbb
pusha
dec
adc
pop
negb
lret
add
dec
push
add
int
and
rclb
lock
setge
es
mov
sbb
xor
xor
outsb
or
lods
daa
mov
out
mov
scas
jae
daa
fidivl
jno
inc
jo
mov
pop
push
mov
inc
out
fcoml
sbb
iret
and
pop
mov
xchg
mov
gs
scas
addr16
popa
add
in
jl
arpl
stos
shl
sub
or
push
mov
xchg
pop
dec
inc
xchg
dec
mov
movsb
or
push
add
push
ljmp
cmp
loopne
mov
inc
test
arpl
scas
or
push
xchg
fildll
xor
fnop
mov
xchg
orb
sub
mov
xor
sbb
rclb
sbb
add
mov
cmpsl
cmp
fidivrs
pop
xchg
int3
cltd
push
add
outsl
scas
mov
call
mov
add
leave
popa
ljmp
lock
pop
dec
sbb
inc
adc
mov
pop
xor
testl
rclb
adc
pop
notl
lret
es
sub
xchg
mov
jmp
fcompl
or
xor
jns
lret
xor
repz
or
lret
cli
sub
jnp
mov
aam
jmp
dec
or
inc
inc
lret
cmpsl
dec
data16
std
insl
lods
pop
stos
hlt
push
pop
popa
hlt
mov
mov
jecxz
mov
and
lock
mov
out
ror
xchg
xlat
gs
not
add
outsl
je
jae
bound
mov
xchg
xor
or
stos
lock
iret
inc
and
std
cmp
scas
jmp
adc
pop
xchg
xor
mov
jae
jl
cmpsb
in
dec
shl
pusha
sub
push
jl
pop
popf
andb
mov
test
cmp
cmp
or
fstl
idiv
dec
jl
or
out
push
mov
fs
sub
pop
repnz
pop
jae
mov
push
ljmp
es
mov
mov
xchg
clc
inc
outsl
adcb
push
or
jp
or
arpl
insb
sbb
xchg
add
arpl
jg
scas
notl
mov
addr16
push
outsb
pop
hlt
ss
xchg
jnp
les
jnp
adc
adc
cwtl
out
sbb
xchg
mov
fdiv
inc
sbb
cmpsl
daa
adc
xor
cmp
sbbl
pusha
add
insb
adc
xchg
mov
mov
inc
fcoms
inc
rcrl
mov
push
mov
inc
mov
js
fidivrs
leave
adc
test
sti
jge
add
xchg
xchg
mov
rorl
jle
cltd
stos
add
mov
shl
hlt
inc
inc
xor
jl
add
dec
fcompl
pushf
cmp
mov
push
sahf
int3
xor
mov
pop
or
jns
pop
call
jmp
ljmp
into
or
push
inc
mov
xchg
cmp
movsb
xchg
push
cmp
cmc
push
mov
pop
jle
cwtl
out
push
pop
mov
loope
jae
and
stc
sub
aaa
xchg
sti
dec
loope
enter
loop
js
jg
jg
push
cmc
icebp
testb
mov
mov
popf
pop
std
mov
mov
jne
jmp
mov
shll
push
sti
and
push
ss
xchg
mov
cmp
and
dec
stos
xor
imul
add
scas
mov
mov
push
scas
lret
aaa
mov
int
cmp
jl
je
test
mov
mov
fidivrs
idivl
mov
mov
mov
or
call
sti
pop
xlat
lea
add
dec
scas
scas
push
ss
mov
das
or
repnz
or
scas
dec
jge
jmp
push
pop
mov
adc
sub
shrl
xchg
mov
test
fucomi
add
mov
dec
lds
das
inc
mov
icebp
jg
stc
jecxz
xchg
inc
cmp
cmp
outsb
mov
in
xchg
adc
mov
mov
cmc
mov
repz
xor
add
cmp
cmc
inc
scas
test
mov
adc
jbe
inc
pusha
or
inc
sbb
or
pop
in
sti
jae
adc
push
out
js
stos
jbe
sbb
lcall
push
jns
mov
test
enter
cmp
mov
xchg
repz
mov
in
pop
out
ds
out
pop
dec
push
inc
jg
stc
lds
pop
rcrl
sbb
or
and
adcb
mov
mov
pop
pop
jno
inc
mov
iret
into
ja
xchg
cmp
cmp
mov
add
fidivrl
mov
popf
imul
call
sub
mov
mov
fisubrl
xor
pop
dec
sbb
jae
push
les
repz
test
out
pop
adc
lcall
in
sbb
aad
movsl
dec
push
jnp
xor
sti
negl
in
cmc
xor
pusha
sub
push
cmpsl
sbb
aam
andl
sub
test
addr16
xor
leave
negl
imul
mov
mov
add
adc
and
jnp
push
and
das
jbe
fadd
ret
insb
and
pushf
pop
mov
sbb
pusha
and
jae
dec
movsb
test
test
insl
dec
sbb
push
repz
inc
addr16
push
xor
mov
mov
add
clc
notb
sti
and
mov
lahf
cwtl
adc
repnz
cmp
xlat
sub
leave
js
rcrb
add
rolb
mov
mov
mov
divb
xor
push
sti
fwait
stos
cmp
es
and
lcall
lds
fistpl
sbb
sub
xor
lods
enter
lea
mov
out
adc
pop
fwait
push
outsl
inc
dec
jbe
xchg
xor
inc
add
xor
lahf
lahf
popf
push
push
pop
inc
scas
cmpsl
or
dec
int3
and
jmp
gs
xchg
orb
dec
roll
in
mov
mov
leave
imul
inc
jmp
mov
cmc
sti
jmp
mov
cmp
push
adc
push
icebp
in
in
push
js
icebp
pop
lea
pusha
rclb
je
or
ds
std
cmp
popa
xchg
mov
adcl
int3
jns
jne
in
pop
or
outsb
jno
mov
xlat
mov
popa
repnz
addr16
pusha
adc
test
mov
in
bound
sbb
sahf
pop
nop
cmp
shll
cltd
mov
sub
popf
jmp
dec
add
shlb
mov
hlt
addr16
into
ret
sub
push
sub
imull
xor
sub
inc
jne
mov
pop
push
xchg
and
pop
push
inc
daa
mov
jae
jecxz
jecxz
and
inc
loope
repnz
push
dec
cmpsb
xlat
lds
test
add
fisubrl
or
sbb
add
fstpl
fldt
cld
xchg
xlat
push
xchg
adc
mov
mov
mulb
xchg
add
mov
jns
sbb
fildl
test
and
pop
scas
adc
or
or
arpl
mov
mov
test
inc
divb
int3
aam
bound
dec
pop
adc
std
mov
xchg
jecxz
ret
and
int
adc
xlat
or
pushf
stos
sbbb
push
roll
jecxz
mov
or
popf
push
insl
push
jb
xor
icebp
inc
les
out
cli
add
jne
xchg
das
xor
outsl
sub
jns
iret
mov
mov
repz
adc
xchg
es
jp
repz
and
pop
cmp
mov
mov
and
inc
popf
xchg
cltd
enter
or
int3
movsl
and
pop
addr16
xchg
adc
rcr
jecxz
test
bswap
popl
mov
jb
xlat
jp
bound
std
and
mov
add
mov
ds
rorl
in
into
xor
leave
xchg
sub
push
mov
inc
mov
out
fsts
loopne
sbbb
adc
push
cwtl
cmp
sub
or
mov
cld
divl
mov
iret
mov
add
test
test
inc
and
pop
jno
mov
and
sub
mov
adc
cli
out
inc
dec
inc
loope
sbb
cmpsb
daa
xchg
les
outsb
xchg
ja
out
adc
xchg
pop
rcrl
fsubrs
xor
xchg
les
xchg
xor
iret
das
cmp
add
cmpsb
or
mov
jecxz
mov
mov
ret
movsl
mov
pusha
lret
mov
mov
and
test
shrl
mov
ret
dec
cmpsl
mov
sub
dec
jle
cmpsl
adc
data16
xor
mov
mov
ss
mov
gs
aas
test
mov
sbb
pop
inc
dec
insb
adcb
fs
mov
jne
mov
pop
repz
mov
aam
push
arpl
test
mov
cltd
stc
push
rorl
push
mov
fmuls
and
sub
jo
push
aam
pop
movsl
sbbl
push
inc
mov
adc
xchg
add
mov
dec
jge
jno
stos
mov
xor
jae
inc
xor
dec
stos
mov
cmp
fwait
lahf
aad
ret
repnz
push
mov
stos
pop
out
mov
leave
or
add
jle
xor
jno
fmull
adc
bound
xchg
jno
mov
mov
ss
xchg
push
inc
adc
imul
mov
cli
out
and
lods
add
cli
enter
or
inc
mov
imulb
pop
data16
inc
sbbb
jg
aad
jo
mov
or
insl
ret
adc
sbb
lods
inc
shlb
mov
adcl
popa
mov
in
int
outsl
fdivs
in
pusha
jae
movsb
lods
pop
mov
test
inc
aam
lods
int3
and
lock
aaa
adc
xor
test
cwtl
std
mov
mov
aaa
lret
sub
cltd
sti
bound
jbe
stos
dec
dec
imul
outsl
out
rcll
sub
dec
sbb
pop
dec
or
dec
push
mov
xor
iret
jp
adc
mov
notl
jae
pop
xor
ficoms
fwait
sti
js
rcll
orl
in
mov
sub
inc
test
out
jb
lea
xchg
lea
push
xor
mov
std
dec
push
fdivl
cmpsl
mov
jmp
imul
lods
out
inc
and
loope
mov
iret
pop
fdivp
popf
in
pop
push
rcl
mov
and
cli
in
adc
mov
sub
jae
bound
ss
mov
jae
das
stos
jg
adc
ja
int
sub
shr
sbb
out
mov
insb
push
inc
push
ljmp
and
out
ficompl
jl
xor
das
test
popa
dec
dec
ret
push
loop
mov
fsubr
pop
push
arpl
adc
mov
fbld
loopne
into
fucomip
negb
xor
lret
stos
sbb
xorb
sub
inc
js
outsl
jmp
mov
add
imul
jae
outsb
push
pop
sbb
daa
fcoms
sbb
jmp
outsl
sti
sti
lea
bound
jp
test
shll
out
pop
mov
pushf
pushf
addl
mov
loop
in
or
cmc
mov
sub
mov
push
adc
loope
scas
inc
inc
jl
xor
fistps
mov
dec
sahf
lcall
cld
int
ret
shr
int3
push
pop
dec
lock
cli
and
mov
lea
sbb
mov
enter
pop
fisttps
jb
sub
adc
scas
mov
adc
in
xchg
or
or
cli
iret
mov
jns
xchg
aas
test
into
sbb
xchg
adc
jmp
imul
mov
data16
loopne
xchg
in
sbb
movsl
gs
pop
mov
fcoms
or
sbb
or
mov
jg
lds
scas
mov
mov
insb
or
jmp
in
adc
pop
and
mov
jl
rclb
jp
rcl
icebp
dec
xchg
jge
xor
xchg
adc
pusha
aad
loopne
andl
inc
mov
ffreep
fsubl
push
jecxz,pt
in
movsl
xchg
inc
andl
fdivs
dec
out
push
movsl
popa
jbe
xor
xchg
test
sub
xchg
jns
clc
inc
or
xchg
mov
lahf
test
dec
mov
loope
cltd
je
cmp
lahf
pusha
shlb
cmpsl
adc
add
outsl
fdivs
lcall
inc
cmpsb
pop
adcb
adc
outsb
mov
out
adc
out
imul
aaa
fbld
xchg
and
icebp
cwtl
mov
add
outsl
fsubl
testl
andl
sbb
popf
sbb
adc
adc
mov
pop
fcmovnu
sahf
sbb
into
out
mov
into
mov
add
rclb
adc
xchg
loopne
adcl
cs
push
fidivrs
add
inc
lret
test
adc
aaa
mov
inc
imul
ret
testl
jno
icebp
mov
dec
mov
stc
xchg
mov
adc
mov
lret
xchg
mov
sbb
fwait
cmp
fsubrs
repz
or
push
cmp
stc
xor
sbb
pop
inc
test
fstpt
inc
push
daa
dec
xor
not
lcall
ret
scas
lahf
jo
punpckhwd
fsubs
mov
imul
out
jmp
mov
mov
mov
loop
inc
loope
mov
ljmp
xor
mov
push
mov
sbb
mov
push
sbb
sub
enter
lahf
cmp
jg
shr
dec
and
jae
adc
dec
in
mov
stos
dec
mov
aam
jns
dec
aaa
test
mov
cwtl
sbb
cld
idivb
cwtl
insl
cltd
cmp
fmul
insl
lahf
push
imulb
std
dec
cld
rclb
outsb
jle
mov
xor
xchg
sbb
lret
jge
into
push
fistpll
repnz
aam
in
sub
insl
mov
testl
ret
pop
inc
jl
imull
js
jecxz
lods
insl
out
cmpsl
mov
lods
ret
jg
ljmp
push
or
or
inc
pop
mov
add
sbb
mov
repnz
xchg
addb
inc
xor
mov
fs
in
fldcw
adc
ret
jge
dec
stos
push
pop
mov
ret
jle
rcll
xchg
out
fs
sub
add
test
or
ja
cmp
mov
push
loope
mov
cmp
sarb
mov
xor
add
pop
in
sub
mov
mov
iret
inc
sbb
dec
lock
clc
mov
out
mov
sub
movsl
cld
jecxz
lock
movsb
pop
pop
adc
cmpsl
sub
int
outsb
add
pop
xchg
or
xor
xchg
notl
adc
ja
fildl
test
sub
lcall
loope
leave
jmp
mov
aas
popa
shlb
sahf
jmp
cmp
bound
js
adc
sbb
xchg
add
sbb
add
andb
arpl
lods
in
jne
popf
pop
sbb
inc
jmp
mov
and
rcrl
ret
push
jle
push
sbb
jne
in
xor
push
pop
sysret
lahf
data16
lret
jbe
jno
and
push
jbe
cmc
push
imul
inc
test
std
shll
outsb
xor
insb
dec
inc
pop
add
jl
aam
jbe
cmp
test
or
adc
jbe
jecxz
cmp
movsb
fadds
push
fldenv
mov
cmp
cmp
mov
rcrl
lods
pop
jns
add
ja
or
hlt
shrl
xchg
in
loop
scas
insb
mov
rcll
imul
and
nop
mov
dec
fsubrl
ficompl
pushf
push
cmp
push
dec
mov
jae
fstpl
dec
test
pop
push
fstps
or
bound
add
sbb
mov
jp
movsb
stos
call
in
imul
jmp
push
sub
loop
sub
sbb
mov
cmp
push
test
call
inc
test
rcr
fcmove
jmp
push
inc
lahf
rcll
sub
movsl
sbb
and
pusha
iret
inc
jno
or
scas
popa
cmp
and
jle
pop
repnz
pop
and
pop
lock
aaa
mov
shlb
loopne
mov
rcr
popf
mov
xchg
pop
data16
jecxz
test
add
dec
lds
insb
cmp
dec
sub
fisubrs
imul
cld
cmpsl
mov
lea
xchg
mov
dec
push
sub
inc
mov
mov
mov
jb
je
and
mov
cmp
xchg
sub
mov
add
sbb
adc
outsb
movsl
mov
in
cmp
les
adc
int3
xchg
mov
call
mov
xchg
call
fs
fsub
nop
cmp
mov
xchg
in
stos
fbld
leave
int
cli
dec
mov
inc
mov
fdivl
and
dec
clc
jne
xchg
ja
mov
test
fwait
inc
dec
sbb
rclb
or
jl
or
pop
int3
pop
pop
popf
jmp
psrld
sub
fsubrl
sub
jle
stc
lods
sbb
adc
out
jge
and
icebp
fs
lcall
into
fucom
nop
jecxz
imul
int
clc
in
sahf
dec
jnp
fadds
lahf
jl
cmp
es
push
adc
push
sbb
stos
cld
aaa
loope
leave
or
and
mov
hlt
shll
jmp
sub
and
pop
fwait
insb
or
movsb
or
cmp
push
push
ja
and
gs
sbb
stc
xor
inc
scas
pop
adc
je
sarb
pop
lcall
jae
pop
lods
std
dec
xlat
xor
push
cmp
mov
aas
mov
arpl
sti
adc
or
addr16
cmp
leave
jo
rolb
adc
loop
pop
fidivrl
loope
push
stos
dec
cmpb
int
outsl
xor
mov
jp
dec
call
dec
sbb
xchg
lret
pop
aam
xchg
cmp
adc
lock
jp
pop
add
in
cmp
iret
jne
outsb
cltd
gs
jmp
sbb
or
xchg
xchg
and
xor
push
int
ljmp
adc
out
data16
dec
scas
xor
inc
sub
cmpsl
cmp
out
jbe
stos
icebp
out
popa
xchg
adc
jb
sub
xor
inc
mov
outsl
in
lods
js
cmp
adc
pop
dec
mov
sbb
jl
add
and
sbb
jne
daa
mov
cmp
xchg
cmp
call
sbb
ja
adc
leave
sbb
push
aas
stos
testb
aad
orb
in
roll
cwtl
push
nop
ja
mov
addl
adc
xor
mov
jmp
ss
xchg
inc
inc
popf
int
xor
pop
add
lcall
scas
seto
insl
pop
cmc
adc
fcomip
testl
sub
xor
jo
push
cltd
scas
add
rdmsr
push
xchg
dec
ja
cli
push
outsl
pushf
xor
fnstcw
jmp
cmp
movsb
imul
aam
outsb
jl
xchg
jae
mov
cmc
fs
das
mov
mov
or
and
mov
loope
or
jp
jge
sbb
cmpsl
test
mov
dec
mull
xor
inc
xor
clc
dec
jo
or
insl
cmp
out
mov
and
lea
xor
aad
and
dec
sahf
sarl
jno
pop
push
sbb
lcall
inc
sub
int
fldt
mov
pop
pop
fldcw
in
push
xchg
mov
or
xor
mov
or
int3
lods
jae
pop
testb
or
jp
insb
sbb
jns
jmp
loopne
repnz
and
inc
push
mov
cld
sti
or
inc
outsl
or
fs
jo
inc
pushl
sub
inc
mov
jmp
adc
aaa
fwait
xor
push
test
sub
jge
in
fwait
mov
ss
test
mov
shrl
inc
jnp
lahf
push
ss
adc
loop
cmp
and
pop
and
push
jmp
mov
andl
cld
add
pop
or
call
or
mov
adc
and
loop
push
sub
or
sub
stos
stos
dec
inc
sub
mov
outsb
roll
rcl
stos
pushf
push
cmpsb
jb
enter
and
lcall
add
imul
adc
mov
sti
mov
inc
adc
cmpb
dec
xor
cmp
jmp
mov
mov
mov
mov
out
jecxz
sub
fisttpll
ja
jne
xor
or
adc
and
les
jnp
shrl
fmull
xlat
jo
add
rorb
sahf
ret
addl
into
add
or
jecxz
pop
imul
popf
mov
xchg
enter
pop
das
dec
nop
les
es
aam
test
int3
cmp
movsl
xchg
sti
and
jo
sbb
xor
divb
cli
rorb
xchg
cmp
faddl
mov
test
jg
push
ljmp
outsb
stos
loopne
insb
cmc
cltd
call
push
mov
stos
mov
cmp
mov
mov
imul
push
imul
jge
jmp
das
jb
dec
in
push
jmp
stos
sarb
sbb
fisttps
dec
outsl
clc
fstpt
or
mov
imul
aam
mov
mov
xchg
jle
das
fldcw
mov
sub
pop
and
popf
pop
push
sub
pop
test
sahf
jmp
popf
insl
lods
iret
call
xchg
repz
push
push
add
fwait
das
sbb
addr16
xchg
pusha
popf
leave
dec
lock
pop
pop
test
ret
adc
clc
aam
xor
test
mov
repz
push
mov
dec
sub
in
in
pop
lock
push
xor
xchg
mov
cmpsb
out
stos
jg
cmp
xchg
ljmp
xor
mov
data16
dec
dec
cmp
push
leave
clc
testl
call
dec
into
dec
cs
jno
subb
jmp
mov
mov
mov
lods
or
scas
incl
adc
ljmp
push
daa
ljmp
mov
icebp
inc
sahf
call
sahf
ljmp
in
call
add
push
leave
dec
gs
cltd
testl
cmpsb
jl
daa
into
shrb
ds
push
xchg
js
fdiv
in
inc
pop
cwtl
arpl
push
pop
inc
bound
sti
rcll
addr16
push
inc
adcl
mov
cmp
adcl
mov
lcall
shll
pop
ficoms
xchg
clc
mov
outsl
cs
cmp
sar
mov
mov
outsl
jns
int3
cld
ficoml
xchg
add
pop
xchg
lods
mov
push
scas
std
mov
aam
lock
and
xchg
test
fnstcw
scas
dec
adc
in
scas
mov
mov
mov
inc
in
mov
stc
mov
das
fwait
mov
sub
adcb
inc
test
mov
sub
mov
cmpsw
inc
add
sbb
test
mov
jmp
and
in
cli
shlb
lret
pop
icebp
xchg
lock
into
mov
mulb
das
lods
xor
les
fsub
ss
shrb
ret
out
or
xchg
xlat
out
jp
mov
mov
ret
aaa
icebp
int3
fsubrs
ja
and
jo
and
ja
pop
push
jo
add
mov
push
cltd
xchg
add
mov
jb
out
aas
sbb
dec
mov
sbb
imul
jno
or
push
mov
xor
or
hlt
mov
push
pop
in
adc
xchg
cmp
cmpsb
mov
xor
and
inc
push
jl
sub
mov
inc
or
test
xor
mov
sub
les
dec
out
mov
ds
fdivp
loope
mov
iret
xchg
push
sbb
daa
xchg
insl
adc
sub
mov
cli
movsb
rcll
mov
dec
inc
pop
adc
xor
call
pop
mov
jb
fdiv
pop
ja
push
mov
iret
pop
pop
mov
movsb
sahf
pop
nop
fmul
ds
jnp
sbb
inc
call
inc
xlat
imul
lds
xlat
daa
pushf
xchg
outsl
add
xchg
mov
jmp
fisubrs
add
jb
push
and
scas
outsb
popa
xor
mov
mov
loope
int3
xchg
incl
adc
fnstcw
cltd
pop
mov
mov
or
adc
push
add
push
cmp
ret
divl
out
xchg
data16
subl
daa
insl
adc
popf
mov
mov
sahf
sub
jne
cmp
inc
in
pop
fs
jl
jo
cmpsl
push
push
mov
add
popa
dec
xchg
aaa
push
jle
aad
lret
add
jnp
mov
mov
in
pop
or
xchg
xlat
mov
aas
es
stc
mov
clc
out
lahf
lcall
mov
mov
lods
out
xlat
jb
into
dec
fbld
xchg
mov
push
pop
sub
stc
or
xor
mov
sub
in
cs
stos
stos
xor
mull
je
repnz
loopne
mov
stos
and
fistps
jg
dec
lock
fcomps
fisubs
stos
out
mov
jb
out
xchg
cmpsl
sbb
gs
aam
mov
mov
addr16
mov
in
stc
call
push
mov
pop
and
adc
xor
mov
sub
in
and
add
adc
add
inc
lds
push
mul
pop
lret
mov
push
lea
and
cmp
movsb
dec
lods
stos
mov
popl
xchg
xor
mov
xchg
les
lahf
ret
sbb
sbb
loopne
xlat
sbb
sbb
inc
or
fdivr
mov
and
xor
jg
jg
xor
fidivs
bound
jmp
mov
js
stos
pusha
out
cmp
fwait
lea
int3
fmulp
sti
jne
or
cmpsb
stos
aaa
mov
and
pop
push
push
mov
pop
sti
add
mov
shrl
fidivrs
and
add
daa
out
cld
into
mov
mov
cltd
dec
incb
popf
aaa
jbe
dec
or
fldl
nop
lret
int
or
in
push
out
and
in
mov
mov
push
mov
add
add
ds
iret
test
add
push
icebp
push
repnz
hlt
loope
cmpb
jns
in
xlat
sub
sbb
sub
push
inc
mov
mov
aaa
dec
xor
and
scas
leave
divl
inc
cmp
and
inc
mov
cs
dec
push
add
arpl
adc
push
add
push
into
xchg
push
clc
je
fnstenv
and
or
push
ljmp
hlt
fbld
test
sbb
pop
sbb
in
xchg
fs
rcrb
mov
mov
lods
cmp
popa
mov
lcall
jmp
sub
mov
sbb
arpl
lret
and
pop
or
hlt
cmp
aam
lahf
jne
mov
or
pop
in
and
jno
xor
mov
fwait
ljmp
ja
push
jmp
clc
lcall
mov
je
sarl
cwtl
push
fiaddl
pop
xor
loop
movsl
clc
in
cld
mov
data16
fiadds
dec
das
loopne
adc
pop
popa
adc
cmp
xor
ja
jo
jmp
outsl
push
xor
push
outsl
inc
test
mov
mov
popa
jno
sub
dec
mull
sub
lods
push
jns
andl
pop
orb
lds
dec
insl
push
fcompl
mov
int3
fnsave
cld
sub
stc
mov
cmp
pop
pop
inc
fistps
test
mov
sti
dec
fs
orl
xor
mov
jno
push
pusha
dec
pop
enter
pop
jae
adc
add
lds
dec
hlt
int3
mov
shll
or
arpl
stc
add
mov
push
cs
pop
lods
xorb
adc
xor
negb
imul
dec
shlb
loop
cmp
arpl
loopne
pop
pusha
dec
sti
insb
push
mov
pop
or
out
jl
cmp
outsl
into
xlat
pusha
and
shlb
insl
lods
xor
lret
pop
aam
movsb
call
push
cmp
test
adc
iret
rcrb
popf
push
sbb
mull
and
xor
lahf
lock
imul
push
pushf
fidivrs
jbe
clc
bswap
pop
pop
push
sub
dec
inc
mov
les
aaa
push
sbb
icebp
pop
pop
test
xchg
arpl
cmp
add
adc
enter
add
jmp
ret
fsubs
subb
sub
dec
fbstp
leave
xor
fld
mov
pop
popa
pop
mov
xchg
mov
xor
jecxz
imul
dec
inc
jge
pop
mov
nop
rcrb
lret
bound
js
inc
idiv
inc
lahf
sbb
test
aam
ds
dec
rcr
pop
ljmp
cmp
jg
pop
adc
std
cmpsb
or
sahf
ds
push
aaa
popa
xor
sbb
fisubrl
mov
dec
mov
mov
popf
clc
repnz
popa
xchg
jg
mov
orb
push
sbb
jle
shl
dec
adc
cmp
dec
pop
mov
and
pushf
lods
int
bound
mov
mov
scas
repz
xchg
dec
mov
mov
fdivl
out
call
sbb
sbb
adc
dec
mov
mov
and
xchg
mov
pop
mov
int3
int
push
ss
push
es
jl
push
add
repnz
outsl
cmpsl
cltd
xchg
push
imul
xchg
lcall
xchg
cld
pushf
cltd
xchg
adc
call
or
lret
and
shll
push
xchg
outsl
scas
sbb
inc
mov
mov
pop
icebp
loopne
sub
stos
adc
lret
adc
xorl
aad
fwait
dec
push
out
mov
fildll
daa
dec
dec
mov
cmp
jle
mov
xchg
outsl
mov
inc
cmp
push
and
clc
ss
or
sbb
in
add
pusha
int
xchg
lea
loope
out
xor
jge
rcr
cmp
sahf
sbb
xor
mov
push
fwait
jo
mov
dec
sti
icebp
dec
and
lods
leave
ja
mov
adc
lds
stc
and
adc
ss
pushf
mov
mov
mov
ret
adc
ss
or
test
fadds
cmp
test
xchg
popa
movsl
inc
outsb
movsl
sahf
dec
lret
fcomp
enter
adc
cmp
fmulp
cli
cmp
pop
std
adc
insl
and
stos
inc
and
fwait
jle
mov
mov
js
and
mov
sbb
lods
and
lock
cmp
jmp
push
lock
push
cmc
test
cmp
sub
ja
les
bound
ljmp
les
dec
lret
cmp
add
mov
fsubrs
daa
cltd
test
or
movsl
fmuls
data16
add
lods
xor
testl
sub
mov
pushf
fmuls
aaa
in
lret
aam
scas
adc
and
popl
dec
cltd
adc
adc
pop
rcr
shll
out
mov
inc
sub
sbb
test
or
push
mov
push
aam
scas
mov
push
dec
jns
ret
ret
adc
inc
push
jge
jmp
cmp
lret
push
movsl
mov
divl
lret
test
sub
jne
sarb
or
loopne
or
xor
pop
mov
jnp
out
dec
ret
add
push
jle
movsb
cmp
and
pop
sti
pop
xor
add
fstpl
push
cmp
shll
subb
lret
data16
nop
sbb
and
and
sbb
inc
dec
jb
cmp
mov
aad
cmp
test
pop
into
loopne
jl
adc
add
mov
imul
lcall
jge
rcll
outsl
fisubl
fimuls
out
in
fcmove
inc
hlt
dec
cmp
mov
push
leave
std
fs
inc
aas
imul
add
xor
jmp
stos
cmpsb
in
xlat
xchg
mov
shlb
xchg
push
mov
test
xchg
and
jle
jmp
dec
repz
pop
push
je
sub
fdivs
repz
or
negb
repnz
dec
cmp
dec
pop
imul
mov
pop
sub
nop
dec
rcrb
push
sbb
int3
pop
lret
int
rclb
aas
sub
stos
mov
test
jecxz
in
dec
mov
mov
sub
ds
in
shrb
mov
xchg
xchg
cltd
and
imulb
cld
pop
test
xor
in
xchg
lock
outsl
pop
loop
xchg
inc
pop
and
mov
add
cmp
mov
vmovntpd
rcrb
or
push
ss
push
insl
cmp
test
mov
mov
sahf
fbld
out
mov
in
mov
nop
dec
test
inc
dec
add
insl
xchg
jp
or
mov
xchg
xor
data16
vmovups
mov
fdivr
xor
stos
lock
dec
sbb
add
mov
cli
fstpl
or
mov
mov
das
fisttps
ret
pop
jecxz
jb
outsl
pop
jno
ljmp
cmp
fisubrs
sub
cmpsl
cmc
push
mov
movsl
push
dec
sub
add
add
xchg
in
add
orl
xchg
nop
mov
stc
pop
fsincos
outsl
aaa
negb
jle
cld
xchg
add
and
inc
jecxz
lock
add
jo
stos
enter
ret
fisubs
lds
sbb
xor
mov
fadds
js
adc
movsb
pop
mov
cmp
ret
adc
das
fisttps
jno
xchg
or
dec
pushf
lock
mov
cmpb
or
stos
jnp
xor
inc
shll
xchg
xchg
mov
jge
aaa
dec
inc
lret
jg
iret
push
pop
jbe
push
into
mov
lret
sub
mov
or
mov
and
out
add
push
xlat
sub
or
jle
stos
in
mov
arpl
stos
inc
shr
hlt
mov
mov
jl
ret
enter
test
cmp
adc
imul
fisubs
pop
ss
sbbb
pop
nop
xor
dec
incl
xchg
enter
ret
push
jo
test
push
push
cmp
push
pop
dec
leave
inc
mov
cmc
pop
lods
repz
mov
not
fidivrl
aas
push
jl
jnp
xchg
lds
sbb
in
sub
enter
loopne
push
add
and
mov
add
add
sbb
mov
leave
or
add
mul
into
dec
push
cld
mov
xor
cltd
outsb
push
adc
add
or
out
sub
mov
aas
mov
stos
push
push
add
pop
ja
addr16
roll
push
insl
jno
dec
or
fdivrl
push
xor
dec
mov
cmp
jle
sub
adc
push
sbbb
push
movsl
inc
repnz
mov
mov
leave
pop
xchg
subb
filds
notb
jmp
out
xchg
dec
sub
xchg
notl
lea
ret
pop
lcall
sbb
jbe
push
ljmp
push
pusha
add
jmp
or
adc
hlt
jmp
jmp
mov
mov
pop
cmc
mov
adc
mov
test
xor
add
pop
add
mov
push
and
scas
mov
cmp
fs
ret
lock
ret
mov
push
call
jl
test
inc
out
ds
mov
popw
movsl
pop
sti
adc
shr
inc
sub
pop
dec
in
mov
mov
lea
xchg
test
ds
mov
aam
inc
lds
mov
jle
es
mov
shl
jb
xchg
sbb
and
cmc
xor
popf
sbb
xchg
clc
cmp
pop
mov
pop
loopne
sub
out
repnz
add
call
adc
addr16
insl
cmpsl
mov
mov
clc
inc
lds
adc
push
dec
ja
pop
push
stc
push
and
xchg
addr16
cmp
je
lcall
mov
mov
mov
sarb
je
xor
pushfw
sbb
mov
jnp
pop
es
xchg
loop
pop
pop
sub
add
fstps
cmp
sarl
jb
jno
and
push
clc
cs
stc
adc
jmp
idiv
loop
or
mov
lods
popf
adc
repz
fimuls
jbe
in
add
xchg
fcmove
adc
cmp
push
jg
cmc
test
xchg
insb
cmc
aam
out
pop
or
add
inc
push
lret
mov
js
push
sbb
mov
push
sub
mov
inc
test
popf
loop
jecxz
mov
mov
jle
cmpsl
inc
lahf
nop
adc
nop
push
xor
or
mov
sti
jl
clc
movsb
push
jmp
cmp
iret
jb
dec
push
imul
pop
add
jl
mov
testb
loop
sub
in
push
js
sbb
push
lahf
or
pushf
jbe
lods
out
push
pushf
shl
enter
cmp
cwtl
lea
cli
addr16
repnz
push
push
loopne
std
inc
dec
insl
xor
xchg
testb
dec
xchg
lods
cmc
cmp
mov
out
dec
dec
popf
scas
std
decl
sub
xor
pop
mov
mov
out
fbld
jg
stos
ret
into
imul
jmp
adc
pop
sub
movsl
push
scas
cmp
mov
ret
cmpsb
sti
jno
das
or
ss
imul
sar
sbb
push
fbstp
inc
cmp
pop
push
loop
push
cmc
and
ret
pop
out
fadd
add
jae
and
sahf
push
inc
aam
xchg
out
or
rclb
adc
sti
popa
shl
dec
inc
xlat
loopne
adc
unpckhps
pop
push
jnp
and
add
rol
sub
ret
push
mov
push
and
enter
gs
int
fidivrl
dec
pop
das
shrl
jle
push
lcall
mov
pop
pop
mov
jge
loope
pop
sahf
imul
lea
mov
adc
dec
fistpll
lock
cmpl
add
pop
cmp
cli
fisubs
push
jne
or
push
pop
bound
dec
int3
add
arpl
js
mov
or
jmp
sarb
dec
hlt
push
mov
jae
insl
sub
xchg
adc
movsb
jo
pop
daa
inc
or
mov
movb
jge
xchg
add
pop
test
in
jbe
mov
loopne
xor
into
xor
add
inc
jbe
adc
popf
lcall
mov
adc
shll
add
hlt
pop
mov
in
loopne
or
sbb
push
cmp
leave
xchg
loopne
testl
aad
repz
js
popf
pop
out
add
mov
mov
jae
inc
adcl
rolb
mov
lcall
jge
imul
loop
es
push
ret
lret
pop
push
xchg
cmp
lahf
push
sbb
jmp
xor
mov
adc
out
arpl
add
pop
mov
movsb
stos
fmuls
xor
mov
adc
add
in
popa
pop
pop
jg
cld
lcall
xchg
dec
aaa
and
es
arpl
adc
lahf
push
xchg
and
loopne
mov
mov
push
sahf
je
xchg
or
cltd
cmp
mov
sub
pushf
jge
add
mov
dec
adc
push
adc
sbb
movsb
enter
add
loopne
add
fwait
cli
icebp
sub
shrb
adc
movsl
into
push
pop
lret
in
lahf
lret
imul
dec
push
xchg
xchg
dec
jg
hlt
cld
mov
cmp
inc
or
faddl
push
mov
sbb
push
adc
sub
icebp
outsl
mov
jne
aaa
cltd
sbb
stc
or
push
imul
fcomip
cmp
mov
cwtl
jb
adc
ss
mov
xor
or
inc
xor
add
adc
xchg
pop
fcomps
mov
cli
in
in
or
cld
outsl
or
xchg
jno
repnz
xchg
jo
pop
or
or
mov
dec
mov
dec
or
adc
xor
fisubl
cmp
leave
xchg
add
dec
sub
or
push
jge
rcl
mov
outsb
int
or
repz
bound
scas
mov
jne
sar
outsb
imull
faddp
inc
ja
movsl
mov
pop
clc
out
mov
out
icebp
push
cmp
mov
movsl
sahf
jo
pop
mov
imul
and
mov
xchg
pop
test
or
cmpsl
jle
push
mov
jp
mov
push
adc
outsl
dec
test
push
xor
sbb
imul
bound
add
inc
push
aad
mov
mov
ficompl
nop
fnstsw
call
scas
cmp
into
xchg
xchg
sub
stos
dec
in
or
mov
mov
fdivs
in
push
push
lret
inc
sbbb
jb
push
cmp
popa
test
mov
push
xchg
push
inc
fistl
or
xor
loopne
adcb
int
push
sub
or
mov
subb
push
call
xor
xchg
and
out
ret
jbe
xor
cld
loopne
imul
sbb
mov
data16
ljmp
scas
pop
pop
mov
stos
hlt
add
jb
out
mov
sub
in
fs
xchg
flds
adc
cmp
fs
dec
scas
stos
in
stos
je
xchg
pop
inc
add
dec
jmp
inc
mov
mov
lea
repnz
stc
call
jns
cltd
les
notl
mov
jg
mov
xor
sti
mov
aam
dec
imul
or
or
inc
fcomps
ljmp
mov
adc
cltd
pop
fcoms
sbb
lcall
cmp
pop
lret
rcl
ja
mov
hlt
pop
add
rcrl
inc
icebp
daa
push
insb
xor
inc
jnp
ret
mov
inc
and
in
hlt
lahf
int
dec
mov
fcoml
rcrl
jle
lods
xor
test
test
pop
inc
jle
in
lods
inc
cmpsl
mov
repnz
push
and
push
push
jmp
mov
inc
insl
ret
push
mov
adc
in
daa
or
sbb
cwtl
and
cltd
mov
adc
test
sub
jmp
jne
inc
inc
mov
aas
loop
mov
into
fcomps
xchg
xorl
les
sub
add
ljmp
fsubs
jecxz
movsb
xlat
jnp
jge
rolb
rcrl
jbe
inc
xor
push
rorl
loope
mov
sbb
or
rcrl
xchg
outsl
fisubrl
mov
loopne
inc
scas
ljmp
jp
mov
sarb
hlt
pusha
lods
sbb
push
jbe
addr16
out
leave
pop
mov
dec
out
push
sbb
jb
mov
push
mov
out
cmp
mov
add
stos
push
out
pusha
outsl
bound
mov
inc
sbb
mov
sbb
pop
xchg
sub
push
das
adc
aam
inc
ret
sbb
fdivrl
jl
or
sub
lea
testb
jns
icebp
pop
push
and
ret
xchg
mov
aas
imul
iret
in
push
push
or
add
push
adc
add
push
fdivp
jno
mov
mov
xchg
mov
pop
cmp
xor
icebp
cwtl
mov
xchg
mov
cmpsl
mov
jmp
ja
out
outsb
push
hlt
shl
jns
push
xlat
push
addr16
mov
sub
jne
add
xchg
mov
sub
idiv
int
sub
jno
mov
es
add
sbb
mov
loop
fldl
inc
fistpll
push
ljmp
mov
pop
push
nop
mov
mov
bound
and
out
fwait
and
popl
mov
inc
adc
into
rcrl
push
lcall
cmp
mov
or
add
xchg
jno
imul
into
stos
roll
es
xchg
jnp
cmpl
inc
push
flds
or
std
icebp
sahf
out
stos
fadd
inc
jge
in
out
sbb
sbb
aam
lock
sbb
sub
imul
or
adc
nop
xor
xchg
std
popf
pushl
sbbb
dec
pop
pop
loopne
bound
cmp
pop
push
out
test
lock
sub
and
mov
xchg
jne
push
jns
ss
add
in
jno
popa
jns
mov
or
popf
dec
or
cmp
sbb
aaa
inc
add
mov
dec
fisubl
sahf
aad
dec
icebp
sarl
je
nop
flds
cs
fs
dec
fmull
jmp
and
sti
and
mov
in
cmp
aas
and
jecxz
inc
vphaddubq
sub
pop
jl
jp
insl
mov
inc
adc
in
outsl
mov
cmc
add
fwait
dec
and
insl
jns
gs
mov
pop
scas
xor
add
mov
stos
fwait
and
jo
sub
or
pop
outsl
xor
loope
mov
jl
stc
push
icebp
mov
xchg
xor
xchg
shll
add
sbb
cmp
xor
cli
inc
push
cmp
inc
stos
pusha
shrl
incb
add
mov
pop
fadds
sbb
sub
jge
stos
loopne
push
dec
jecxz
lcall
inc
pop
xchg
dec
lea
es
add
sub
into
movl
push
fstpt
inc
neg
add
or
sbb
lods
mov
xchg
popf
leave
outsb
sbb
dec
mov
scas
sbb
and
mov
xor
mov
stos
sarl
jecxz
ljmp
enter
fbstp
int3
fs
mov
inc
xchg
sbb
mov
inc
sahf
popf
cwtl
idiv
xchg
sub
stc
fldt
inc
jnp
cs
cmp
ss
xchg
cli
pop
bnd
insb
jae
pop
cmp
loope
lcall
mov
cmp
pop
popf
push
xor
add
sti
inc
sarl
or
pop
das
sub
sti
dec
mov
jmp
mov
cmc
pop
data16
pop
inc
or
dec
insl
pop
jl
add
dec
push
xchg
lds
cmpl
xor
test
mov
push
ja
mov
jno
pushf
loopne
stc
sub
faddl
mov
mov
inc
mov
adc
rorl
push
dec
insb
test
repz
inc
ret
adc
sbb
call
xchg
and
adc
dec
jnp
pop
lcall
mov
repnz
jecxz
dec
scas
mov
popa
xor
or
mov
out
test
shlb
jl
aas
cmp
xor
xlat
leave
fwait
enter
call
into
xor
bound
ja
cwtl
mov
sbb
push
inc
iret
push
push
icebp
cmp
je
push
outsl
mov
dec
loopne
dec
popf
test
hlt
addr16
and
addb
jne
stc
or
cwtl
rclb
aaa
scas
dec
je
lock
outsb
mov
or
leave
jmp
lcall
repz
inc
mov
xor
mov
daa
scas
aad
in
pop
mov
mov
cmpsb
add
fyl2x
pop
in
in
xor
orb
das
inc
xor
scas
jne
mov
lods
xacquire
cmpsb
sub
and
cmp
lcall
popf
and
or
jge
adc
lahf
pushf
shrl
bound
sti
xchg
shlb
mov
xchg
pushf
mov
sbb
lock
nop
and
mov
adc
aas
pop
and
cmp
jbe
clc
pop
movsw
dec
shr
push
sarl
add
mov
nop
jno
lea
inc
outsl
adc
mov
cmp
in
test
or
aad
sbb
jne
test
lods
popa
mov
stos
shll
cmp
or
adc
fistpl
mov
mov
dec
pop
pop
adc
out
mov
jle
sub
fisttps
and
mov
stos
les
sarb
pop
mov
movsl
loopne
les
out
mul
ljmp
loop
es
jne
sbb
pop
mov
jne
mov
jne
sbb
mov
orl
stos
pop
jbe
lret
sub
mov
xchg
pop
rol
repz
cmp
mov
loope
sbb
out
in
gs
mov
int
das
push
add
and
pusha
pop
mov
imul
stos
or
iret
std
dec
push
xor
repnz
mov
push
adc
loopne
jb
or
lret
test
cmp
movsb
or
mov
xchg
std
lods
dec
clc
roll
jae
mov
jecxz
xchg
dec
or
test
and
xchg
lcall
xrstors
out
fnstsw
xlat
jle
int
add
xchg
cmpb
mov
push
sarb
sub
out
pop
shrb
je
pusha
mov
ss
add
sbb
push
push
sbb
adc
jbe
adc
jbe
push
push
loopne
stos
mov
cmp
mov
cs
aam
push
add
push
adc
fsubrs
pop
popa
cmpsl
in
fwait
scas
fidivl
inc
cli
dec
xor
pop
clc
cmp
jecxz
fwait
add
and
jge
lret
lret
adcb
popf
sub
pop
sbb
insl
add
roll
jbe
in
mov
stc
in
popa
repnz
imul
in
enter
rcrb
and
clc
jno
cld
add
dec
and
fdivp
loopne
jl
lcall
pop
sbb
inc
pop
in
sti
adc
sub
mov
push
pop
xchg
push
adc
fldl
lds
je
add
sub
and
push
xchg
dec
mov
mov
inc
addb
lret
leave
xchg
sub
mov
mov
and
xlat
cld
dec
xor
psraw
adc
stos
jg
adc
in
out
inc
and
lods
xchg
add
inc
ret
pop
add
push
xchg
icebp
and
in
es
xor
enter
and
mov
xor
jae
sbb
les
fwait
sbb
jle
or
or
cmp
stos
sub
jp
mov
jbe
mov
das
lcall
inc
lcall
dec
pop
pop
mov
push
arpl
cmp
mov
ljmp
fldl
ret
aad
std
mov
pop
out
xor
outsb
movsb
adc
add
jg
mulb
mov
lret
insl
lahf
loope
inc
jno
ljmp
pop
js
mov
mov
test
lods
mov
aad
rcrl
push
jg
jnp
inc
inc
push
dec
gs
pop
cmpsl
xor
mov
aam
lods
lods
xlat
rcr
scas
mov
sub
jl
stos
add
mov
orb
popa
insl
cmp
dec
jle
lahf
scas
xchg
dec
jns
rcr
or
inc
push
ds
xchg
dec
in
std
in
jmp
mov
push
mov
fiadds
or
ss
push
pop
add
adc
jbe
sub
ss
pop
in
cmc
arpl
int3
lods
mov
movsl
stc
mov
int
ss
pop
xlat
mov
nop
or
sub
out
enter
xor
lret
movswl
aaa
pop
mov
fimull
xchg
loopne
cld
push
clc
jle
les
mov
leave
inc
mov
jl
add
mov
xor
sbb
fisubrl
jns
push
mov
jno
ficoml
cld
test
fisubl
pop
xchg
imul
mov
sub
incl
in
cmpsb
arpl
add
sarl
loop
into
rcl
jmp
sbb
add
and
push
xor
pop
adc
dec
lods
dec
mov
and
jmp
mov
clc
loope
add
xorb
cld
lods
adc
daa
dec
iret
rol
and
sub
mulb
sub
adc
mov
outsb
not
sbb
aaa
lret
mov
out
pop
xchg
sub
ja
sub
pusha
and
mov
insl
jo
mov
dec
mov
sbb
leave
dec
sbb
test
mov
test
add
jmp
popa
mov
test
push
int3
sub
mov
lret
xlat
cs
lret
outsb
rcrl
js
repnz
pop
lods
mov
pushf
xchg
stos
jb
in
mov
aaa
xchg
cwtl
call
xor
and
divb
push
jno
xchg
cli
mov
fimull
popa
ja
sarb
mov
push
pop
cmpsl
insb
hlt
sub
adc
cmpsl
mov
movsl
fpatan
mov
gs
test
xchg
neg
out
xchg
xor
shrl
sbb
rcrb
push
imul
ficoml
push
xchg
pop
gs
mov
dec
push
mov
subl
mov
sti
aad
pop
test
sahf
sub
mov
into
lcall
pusha
push
int
pop
cs
push
push
dec
cmp
addr16
fwait
inc
xchg
out
cmp
cmpsl
jnp
shll
imulb
mov
adc
push
mov
mov
lea
push
and
xrelease
mov
mov
lds
scas
dec
insl
dec
dec
lret
sahf
add
cmp
nop
popf
stos
push
daa
sub
jl
dec
mov
xlat
adc
inc
and
data16
pop
mov
or
addr16
mov
inc
or
loopne
mov
mov
mov
cmp
add
repnz
enter
or
inc
mov
out
sub
push
test
pushf
and
test
sub
jbe
gs
ds
out
xchg
xorl
idivb
in
arpl
arpl
test
mov
mov
loope
mov
cmp
pop
dec
sbbb
loop
aaa
nop
xchg
das
inc
pop
jne
xor
sarb
sub
nop
jbe
mov
arpl
sub
js
rcrb
imul
add
sub
mov
inc
and
push
ljmp
test
addb
fisubl
sub
jg
scas
dec
jno
lcall
add
aaa
pop
add
push
add
addr16
lret
jge
cmp
loopne
stc
es
sbbl
sub
jg
std
mov
pop
push
lahf
jo
cmp
bound
xchg
mov
cmp
and
repz
or
aad
or
mov
movsl
push
aad
ffree
mov
jae
xchg
ret
fsqrt
lds
mov
imul
bound
mov
inc
out
pop
fsubs
leave
bound
in
ret
fcoml
in
dec
test
sub
lret
std
cmp
cmp
or
mov
pusha
cmc
sub
xchg
jae
push
subb
lcall
stos
cmpsl
ss
test
jecxz
lahf
jb
test
ds
divl
push
cwtl
call
and
fbld
ljmp
ljmp
outsb
xorl
jnp
inc
xor
cmp
xor
stos
test
cmpsb
mov
lahf
and
sub
mov
lahf
jnp
scas
sbbb
dec
sub
je
imul
push
mul
mov
mov
out
jo
nop
inc
aas
cmp
pop
mov
js
inc
inc
jnp
inc
lods
lods
mov
push
stos
jmp
das
fnstenv
inc
ds
vdivpd
pop
mov
jg
lret
scas
lcall
push
dec
and
adc
imul
je
nop
in
mov
ds
lock
mov
call
out
cli
xchg
jne
mov
pop
adc
mov
outsl
xchg
jp
into
jnp
loopne
cmp
sub
imul
in
call
es
rorb
lods
jge
mov
les
scas
sub
fst
jle
dec
pop
mov
loope
mov
jae
push
pop
pop
scas
daa
dec
mov
dec
mov
xlat
imul
cmp
lock
aas
mov
xchg
jge
sub
sahf
shlb
jne
daa
iret
fiadds
and
les
add
jae
fs
cmp
sti
icebp
jae
ret
and
sub
mov
adc
mov
imul
add
icebp
hlt
js
xchg
dec
stos
sbb
pop
adc
sub
add
xchg
mov
out
xor
pop
lret
mov
mov
in
ficoml
xchg
or
jmp
inc
sbb
stos
inc
mov
fcoms
dec
or
mov
enter
into
jnp
imul
test
sahf
call
jnp
mov
daa
jmp
mov
lods
sub
loop
dec
cmp
popf
repz
test
mov
fs
pop
xor
sub
push
or
pop
push
aad
popf
push
orb
shll
jg
std
mov
mov
pop
testl
hlt
pop
sub
rclb
pop
shlb
stos
test
jecxz
popf
jbe
pop
jge
add
xchg
dec
sbb
ret
mov
sub
scas
inc
push
stos
out
and
movsb
mov
rorb
and
pop
xchg
aaa
mov
add
out
es
lret
jmp
xchg
sahf
insl
cmp
je
mov
addr16
std
jbe
pop
mov
inc
in
xlat
mov
pop
mov
imul
jns
sub
mov
mov
iret
lods
sub
or
fimuls
sub
sbbb
outsl
inc
repz
dec
insb
fdivs
push
dec
dec
aad
rcl
imul
leave
pop
cltd
or
xlat
dec
adc
add
repnz
xchg
sbb
cmc
jp
in
test
pop
xor
xor
ret
cs
jecxz
out
test
cld
sbb
inc
repnz
pop
sarb
sbb
test
xchg
sti
adc
out
js
popa
mov
ret
mov
mov
mov
mov
inc
push
iret
lret
sub
iret
xchg
inc
out
popf
scas
pop
int3
lds
mov
mov
leave
pop
lds
mov
push
cmp
mov
xor
fistpll
lods
lcall
jne
mov
cmpsb
ja
push
test
pop
push
fiadds
test
sub
icebp
iret
or
in
jns
xlat
mov
pop
cmp
mov
test
cmpsb
sub
ljmp
push
out
jle
mov
pop
insb
stos
clc
push
sbbl
mov
dec
daa
mov
mov
xor
jl
cwtl
sbb
push
int
rcl
lds
or
jle
addl
insb
insl
pop
fnstenv
inc
scas
push
icebp
jle
mov
xchg
mov
lds
push
cs
mov
xor
sbb
insl
sub
xchg
add
pop
out
lret
fsubr
mov
scas
lds
add
pop
shl
iret
andb
mov
testb
dec
leave
pop
sub
bound
fisttps
pop
mov
dec
inc
or
add
push
and
mov
jecxz
test
push
scas
test
xchg
es
popa
jns
out
inc
inc
dec
cld
outsb
sti
pop
push
xor
sbb
movsl
aaa
idivb
daa
jecxz
out
dec
ret
cmp
outsb
movsb
data16
movsb
in
fiadds
xchg
cmp
in
push
fsub
push
or
mov
out
mov
dec
aaa
cwtl
jbe
lea
repnz
lods
mov
movsl
daa
out
shlb
loope
enter
adc
cld
or
add
in
rorb
bound
push
push
adc
mov
shll
in
ds
push
jecxz
int3
sub
jl
sahf
xchg
repnz
xchg
push
into
xchg
ja
pushf
sbb
int
mov
jge
push
out
outsl
cmovg
inc
mov
push
and
insb
cmp
outsb
fwait
dec
cmc
lcall
mov
xor
inc
repz
inc
cs
jo
push
pop
dec
popa
cmp
adc
movsb
in
dec
pop
sbb
ror
push
out
cmp
dec
sti
pop
mov
out
rclb
decl
pushf
adc
out
sub
adc
sbb
stos
jb
jge
rolb
bound
mov
xor
imul
out
out
notl
and
lcall
popf
jp
jl
adc
jbe
xchg
stos
jp
adc
scas
mov
mov
mov
inc
lods
xrelease
adc
dec
push
mov
rorl
insl
nop
xor
and
push
repz
outsb
lcall
push
ss
sbb
jle
xchg
icebp
out
dec
jb
clc
arpl
call
ljmp
fildll
out
ljmp
aad
fisubl
arpl
js
inc
int3
loop
xchg
push
mov
js
fdivl
mov
or
mov
mov
adc
adc
mov
mov
cs
cmp
sbb
cmp
push
ss
cltd
cmp
inc
pop
rolb
or
pop
push
dec
addr16
stos
adc
in
popa
mov
lock
sub
push
insb
test
push
push
stos
sub
sbb
or
cmp
ja
mov
incb
fmull
fwait
sahf
jmp
cwtl
xchg
xor
sub
call
repz
jge
repnz
xlat
xchg
and
push
pop
and
rcrl
enter
lret
mov
je
mov
mov
test
mov
jecxz
inc
js
je
sbbb
or
jg
push
adc
or
cmp
lcall
idivb
cmp
fwait
jne
adc
shlb
icebp
sub
not
jb
movsb
inc
in
daa
lods
dec
or
or
sbbb
xor
je
dec
xchg
xchg
in
adc
gs
jmp
sbb
mov
xor
dec
subb
cmp
push
fwait
and
lods
inc
adc
cmp
mov
decb
rol
adc
sahf
scas
mov
ret
dec
hlt
mov
dec
jnp,pn
jo
or
mov
ret
adc
jnp
popa
mov
pop
dec
fcomps
push
adcb
or
imul
mov
nop
outsl
dec
pop
sbb
imul
xorb
add
mov
add
jecxz
scas
js
pop
cmp
mov
fdivrs
adc
sbbb
mov
mov
stos
push
sub
fs
sub
add
mov
adc
lods
lahf
push
fistpll
and
inc
xor
mov
mov
add
sub
rcll
cmpsb
ficoml
xor
push
insl
cli
pop
and
in
outsl
cmp
jge
divl
mov
icebp
push
jle
rorl
xchg
dec
shll
dec
call
ror
jo
add
mov
mov
xchg
adcl
mov
ja
dec
out
xor
push
push
fs
rorl
push
inc
inc
pushf
inc
test
testb
mov
sub
std
adc
in
jecxz
or
test
push
mov
lcall
int3
xchg
sarb
lods
ja
fidivs
fldl
mov
pop
aad
jae
fs
lcall
mul
xor
mov
or
dec
mov
fmuls
jmp
pushf
adc
push
cmpsb
push
bound
sbb
cmpsb
pop
push
into
mov
and
int3
mov
xor
popf
sub
pushf
arpl
hlt
in
loope
cwtl
movsb
jecxz
lret
cmp
mov
popa
jge
insb
push
cmp
pop
add
in
out
std
jae
push
mov
add
xor
sub
clc
inc
daa
pop
je
push
mulb
push
cmp
icebp
js
add
cmp
mov
mov
loope
ficoml
mov
sarb
popf
jno
xchg
ss
inc
fsubs
shll
push
aad
cld
or
fcoms
dec
adc
ret
fucomp
into
mov
cmp
xor
es
add
das
cmp
shrb
lret
popa
scas
ja
push
lods
pop
negl
mov
push
out
jo
jae
add
popa
cmp
push
or
repz
push
xor
nop
xchg
rorl
sbb
fwait
ret
sub
out
ljmp
mov
outsb
or
ds
movsb
adc
shrb
shlb
vpsrlq
loopne
rorl
or
xchg
mov
add
mov
stos
movsl
sbb
mov
stos
push
xchg
xor
add
rcrb
pop
push
mov
cmpsb
nop
lds
into
gs
mov
cmp
test
leave
or
hlt
inc
dec
notl
xchg
dec
dec
hlt
sti
xchg
mov
cmpsb
shlb
stos
xlat
out
pushf
imul
insl
push
mov
xorl
push
hlt
das
sub
mov
push
mul
fcoml
add
xor
loopne
lods
sub
sti
push
icebp
enter
xor
cmpsl
fcomi
pop
sub
jge
mov
mov
jb
sub
cmc
ja
loopne
pop
xlat
adc
dec
cld
xchg
jmp
pop
ds
inc
or
sub
cmc
lret
popa
mov
xor
mov
sbb
scas
frstor
lods
loopne
pop
and
mov
dec
pop
lret
popa
mov
fnstcw
inc
dec
sub
call
dec
test
ficomps
sbb
xchg
jmp
sahf
sti
jp
movsl
mov
and
iret
ret
call
mov
in
fisubrs
inc
inc
lds
stos
sub
repnz
add
mov
add
repz
gs
out
ds
jb
mov
sti
sub
xor
sub
fisttpl
jo
dec
push
mov
repz
fsts
lcall
lea
in
xchg
sbb
and
aam
sti
push
and
ja
cmpsb
xchg
or
fldenv
fs
add
call
test
data16
pop
lea
imul
mov
pop
cld
pusha
loope
cmpsb
loope
and
call
int3
rcr
aas
or
daa
mov
sahf
inc
shrl
xlat
pop
mov
lret
outsb
mov
pop
test
push
dec
cltd
inc
inc
and
dec
iret
cld
cmp
mov
outsl
lods
stc
imul
data16
jne
push
das
nop
adc
in
push
cwtl
and
call
adc
enter
loope
mov
adcl
pushf
dec
push
loop
scas
iret
iret
xchg
mov
in
mov
rorl
pop
imul
cltd
mov
add
xchg
inc
mov
dec
sub
sbb
pop
jno
pop
add
mov
xchg
xchg
jnp
out
add
push
ja
push
cmp
pop
inc
mov
and
mov
adcl
adcl
dec
sub
xchg
aad
ror
push
aas
in
jle
out
cwtl
shrb
xchg
negb
ljmp
and
and
in
enter
add
fdivrl
call
add
or
outsb
push
enter
cmp
sub
ds
cs
lds
fisubl
lret
stos
inc
into
fildll
std
xor
inc
add
arpl
jge
ror
or
cwtl
pop
jmp
adc
ljmp
mov
aas
icebp
das
outsl
push
repnz
cmp
ljmp
hlt
jns
data16
ja
bound
int
es
cmp
adc
inc
cmpsb
sub
pop
pop
out
in
cs
inc
stc
aam
int3
mov
push
pusha
push
lret
mov
push
xchg
gs
lahf
mov
pop
adc
fxch
sub
fistps
jae
and
mov
sub
aaa
push
cmp
xlat
bound
repnz
sub
in
icebp
cmp
cltd
data16
pop
jp
jg
mov
inc
iret
test
lods
mov
xchg
adc
inc
divb
jle
and
lea
scas
popf
sub
rorl
mov
out
jp
push
sub
or
jae
pusha
dec
jecxz
enter
std
sar
insb
pop
repz
adc
mov
lock
sti
les
pop
and
mov
jmp
inc
mov
lods
enter
mov
mov
shl
orb
js
scas
sti
sbb
cmpsl
cmpsb
in
test
popf
movsl
mov
add
cmp
and
push
adc
push
addr16
in
ljmp
insb
pushl
shr
xlat
test
loope
jo
addl
insl
jno
and
scas
mov
mov
and
or
test
cmc
pop
lret
fmul
mov
add
lea
lods
data16
pop
jmp
dec
pushf
jb
shrl
out
pushf
jb
outsb
out
or
xor
jno
sbb
or
test
mov
jecxz
in
insl
mov
xchg
and
xor
mov
push
adc
iret
stos
cmp
mov
sbb
je
idivl
jns
mov
mov
or
sbb
fucom
rcrb
inc
call
aaa
xchg
in
test
adc
outsb
outsb
movsb
test
cmc
cmp
pop
cs
xchg
mov
jne
add
push
mov
aas
mov
insl
push
xchg
outsl
orl
xchg
mov
fmulp
std
sub
sub
lcall
and
rcrb
xchg
fidivs
mov
pop
cld
popa
test
mov
sbb
xor
aas
cmp
cmp
mov
stc
or
lret
js
add
cmpsl
mov
jp
out
and
negl
clc
and
popa
int3
cwtl
incb
dec
cs
mov
imul
mov
cld
add
mov
pop
sbb
xor
push
adc
pop
push
sbb
mov
bound
dec
or
pusha
repnz
es
push
mov
lcall
xor
jo
mov
and
mov
jnp
mov
es
jmp
sarb
mov
mov
mov
lret
xchg
mov
jle
sbb
shlb
adc
add
psubd
pop
jae
cmc
jmp
stos
gs
push
dec
in
or
hlt
sub
sub
scas
test
pushl
pop
std
push
dec
fiaddl
dec
push
inc
mov
ljmp
sub
inc
pop
fwait
xor
dec
dec
sbb
daa
fstp
inc
pop
dec
mov
cmp
movsb
cltd
push
in
and
cmc
cmp
push
xchg
repz
mov
add
cmpsb
push
in
leave
xchg
mov
adc
pop
mov
and
or
mov
jne
lods
and
jle
sub
add
int3
xchg
movl
jne
pop
and
sub
loopne
mov
sub
lds
xor
andl
enter
loopne
dec
sbb
nop
cwtl
lea
dec
sti
xor
jg
mov
cmpsb
fwait
push
sbb
scas
sti
xor
outsl
addr16
xchg
lock
lds
xchg
call
adc
sahf
add
rclb
repz
sti
sub
sbb
jbe
orl
jg
sub
mov
sbbl
dec
incl
adc
cwtl
std
mov
cmp
adc
mov
imul
imulb
lret
cmp
bound
scas
push
ret
dec
cmpsb
pop
jno
jne
mov
iret
adcl
test
push
repz
cs
popl
lcall
lods
jbe
stos
jmp
cld
add
push
shlb
shrl
mov
xchg
out
cld
lret
jno
pop
bound
add
cmp
and
icebp
adcl
mov
or
cmpsl
inc
push
mov
arpl
sub
lcall
push
adc
jo
cmc
nop
sub
scas
movsb
movsl
test
mov
jnp
outsl
in
fsubrl
imul
push
jge
icebp
mov
ret
jns
js
jmp
imull
fimuls
pop
cmp
popl
dec
mov
push
jge
daa
push
mov
xor
xchg
in
inc
repnz
xor
fcoml
sub
aam
jbe
ret
mov
xchg
mov
pop
idivb
sbb
sub
push
test
ja
ljmp
and
dec
dec
insl
cmp
cld
test
fisubrl
bound
cmpsb
dec
push
sbb
jmp
clc
or
push
or
leave
jns
inc
movsl
jle
je
sbb
shrb
cwtl
mov
popl
cmpsl
clc
std
mov
jnp
mul
sbb
xchg
lret
push
es
xchg
sbb
imul
add
mov
aad
movsb
test
daa
pushf
out
aas
adc
pop
mov
xor
lcall
scas
push
iret
sbb
mov
jmp
call
lods
and
fisubs
testb
sahf
add
pop
inc
lret
jp
popa
mov
lcall
lods
dec
push
movsl
adc
mov
pop
int
mov
adc
inc
sahf
cwtl
jg
xchg
inc
inc
xchg
mov
push
aad
inc
div
pop
out
mov
out
scas
lods
imul
or
mov
xchg
or
mov
sarl
xchg
add
jl
mov
xor
lret
fdivrs
cmp
mov
pop
pop
cmpsb
bound
aad
pop
sbb
adc
xor
cmp
test
jle
jo
jae
pushf
insb
mov
mov
lock
in
xchg
js
rclb
fwait
mov
lea
jmp
xchg
inc
outsl
ss
mov
xchg
push
push
mov
bound
push
scas
pop
pop
fsubs
arpl
xor
mov
jle
mov
roll
test
push
xor
imul
in
xorl
lcall
fwait
lret
and
aad
stos
loopne
cmp
mov
inc
lahf
lea
fisubs
ds
std
push
shlb
pop
cmp
enter
jge
jo
sbb
xchg
xchg
sub
dec
sub
xchg
aas
mov
cmc
sub
xchg
fwait
imul
ds
repz
arpl
xchg
test
idiv
jecxz
mov
mov
lock
pop
mov
adc
mov
loope
int3
aad
mov
jmp
mov
add
add
fildl
add
sub
popf
cli
xor
add
or
fistpl
push
ficoml
inc
adcb
ret
inc
cmpsl
in
sub
outsl
pop
data16
rorb
aad
stos
iret
aas
data16
loopne
sub
or
dec
popl
repnz
pusha
out
inc
sbb
pop
pop
adc
pop
push
pop
ret
push
mov
lret
cmpsb
inc
add
xor
adc
lret
sbb
leave
gs
imul
movl
add
mov
or
pop
push
adc
sub
negl
lss
xchg
loopne
push
jecxz
mov
push
je
dec
repnz
in
fidivl
fucomi
call
arpl
xchg
imul
push
or
mov
and
bound
aam
data16
mov
inc
and
les
xchg
sub
jecxz
lods
fdivrs
cli
mov
push
adc
je
ret
cmc
test
or
in
shr
sbb
or
inc
mov
das
push
xchg
gs
addr16
hlt
cmpb
adc
dec
addr16
cmpsb
dec
jne
ds
jl
outsl
lcall
push
pop
dec
push
stos
sub
stos
gs
loope
ds
movsl
js
or
mov
sub
loope
jmp
sub
icebp
dec
mov
push
sub
mov
jge
jge
sbb
sbb
dec
fstps
inc
mov
cltd
cmp
aam
mov
mov
adc
dec
sti
or
push
cmp
lret
mov
lret
adc
das
shrb
cmpsb
add
in
pushf
inc
xchg
xchg
jmp
pop
xor
jns
lods
sub
and
inc
mov
or
out
push
jmp
leave
jns
ja
add
sti
jo
popf
dec
fisubrs
xor
and
ficoml
insb
nop
int
xchg
push
cmc
loope
subb
mov
mov
dec
cmc
dec
sarl
mov
or
dec
fidivrs
repz
fbstp
mov
idivl
bound
mov
inc
cs
std
imul
jne
iret
jbe
pop
shl
push
cwtl
and
mov
mov
int3
xor
stos
jne
sub
jle
imul
in
imul
fxch
jb
cmc
cmp
loop
js
jno
add
mov
out
iret
xchg
jp
pop
or
push
clc
push
and
jbe
add
cmp
fcompl
adc
jp
mov
xor
ds
mov
das
cmp
pop
lcall
mov
loop
cltd
call
in
add
adc
jbe
mov
stos
push
pop
mov
cmpb
pop
pop
imul
push
mov
push
xchg
mov
adc
dec
mov
loopne
into
inc
sti
mov
sbb
xor
pop
push
fmuls
pop
ljmp
iret
push
mov
mov
repz
cmp
ljmp
inc
int3
icebp
jp
adc
cmp
movsb
insl
lret
out
nop
popf
movsl
push
in
mov
shlb
and
xrelease
dec
cmp
push
sbb
xchg
sbb
mov
push
sbbb
xor
mov
adc
inc
pusha
mov
int
sti
mov
mov
repz
pop
jno
mov
inc
adc
jns
rolb
aas
jg
adc
fidivs
mov
dec
int
sbb
inc
test
jmp
xor
pop
dec
adc
out
shl
insb
push
jle
insb
clc
dec
mov
sbb
sar
adc
int
inc
fidivrs
sbb
dec
cmp
cmp
dec
in
fucomip
fsubs
sti
xor
adc
repz
or
out
jbe
imul
les
shll
mov
adc
push
dec
adc
cwtl
jmp
sahf
test
movsb
jbe
mov
pop
mov
push
mov
sahf
cmp
in
or
scas
int3
mov
sbb
arpl
fs
xchg
lret
cmp
add
xchg
or
mov
es
mov
jo
out
into
popf
xchg
mov
mov
loopne
and
mov
stc
inc
sahf
popf
popf
cmp
cmp
je
scas
push
dec
fldt
lahf
pop
movsb
repnz
clc
add
aaa
dec
inc
and
xor
leave
mov
shll
shll
mov
push
in
xchg
push
clc
fcomps
in
mov
aas
outsl
cmp
lods
cmp
push
gs
aaa
push
inc
mov
xor
adc
mov
push
adc
push
dec
fcmove
or
into
leave
xchg
adc
cmp
sbb
lds
sbb
out
data16
sbb
mov
dec
mov
sbb
add
dec
and
xchg
pop
sub
add
fsubl
test
adc
nop
inc
lds
js
and
faddl
shlb
pop
cmp
popa
mov
cltd
in
sbb
push
adc
jmp
jae
fidivrs
outsl
xlat
pop
sub
fwait
gs
add
jb
loope
mov
inc
pushf
push
mov
mov
pop
out
push
ja
test
or
mov
inc
pop
and
adc
lea
add
jmp
aas
pop
sbb
cwtl
pusha
sbb
cld
insl
and
mov
lock
and
inc
or
mov
out
jb
bound
daa
ja
xchg
rcll
inc
lods
js
insb
pop
daa
mov
add
adc
mov
add
xor
cmp
and
cmpsl
and
jno
loope
js
mov
lret
ss
cmpsb
dec
push
test
mov
cmp
mov
scas
ds
and
stos
clc
mov
add
mov
sbb
ret
pop
outsl
out
icebp
ds
sbbb
scas
ja
arpl
imul
xchg
aad
or
jo
mov
gs
mov
imul
pushl
and
popf
in
ret
lahf
xchg
mov
and
mull
xchg
insb
xchg
fisubl
lret
push
outsl
aas
jnp
sbb
pushf
test
testb
cmp
and
jg
mov
loopne
add
test
ror
adc
ljmp
mov
pop
cli
or
aad
out
add
imul
lods
popa
cmpsl
int3
popf
mov
xchg
jmp
cmc
ds
gs
mov
repz
lea
call
lock
mov
xchg
jnp
lds
dec
xor
imul
sub
mov
xor
adc
ljmp
int
ret
out
int3
and
push
addr16
push
xor
push
loop
out
dec
nop
ds
mov
cmp
sti
jmp
inc
xorb
lea
pusha
out
adc
mov
popf
adc
sti
adc
or
pop
fistl
loop
and
adc
push
jnp
mov
cs
aaa
push
mov
aaa
sub
jae
xchg
push
cmpsb
fldcw
icebp
inc
jno
jnp
mov
lahf
aas
push
or
into
xor
mov
enter
mov
dec
sbb
rcl
cmpsb
cltd
lcall
mov
std
mov
mov
push
mov
jl
mov
test
lods
and
aam
mov
mov
imul
mov
dec
xchg
add
out
pop
jo
lret
loope
mov
lret
adc
xor
dec
adc
subb
stos
pop
out
cmpsl
sbb
cmp
shlb
pop
test
addr16
mov
ljmp
arpl
mov
out
in
data16
jno,pt
lods
cmp
lock
xor
mov
jmp
sar
push
xchg
daa
ljmp
pushf
sti
inc
mov
mov
mov
ret
jg
mov
mov
push
sbb
dec
xchg
fcmovu
xchg
sbb
push
pop
popf
sub
push
adc
jb
xlat
shll
lock
xchg
ret
pop
and
fdivs
xlat
add
loopne
xchg
out
jae
es
push
or
fdivrs
sub
lods
out
cltd
pop
jp
incl
call
in
xchg
xchg
leave
mov
cltd
fs
int
aaa
jmp
sub
xor
inc
and
stc
ja
fdivrs
inc
popa
ret
ficomps
xorl
mov
pusha
outsl
dec
push
jns
cmc
sbb
cld
sti
fidivl
xor
sti
cs
outsl
scas
inc
mov
out
adc
out
jbe
xchg
add
jne
out
xor
pop
mov
stos
pop
lods
out
sahf
xor
lret
adc
pushf
pslld
dec
aam
stc
lcall
ror
pop
sbb
in
mov
nop
adc
adc
ret
and
mov
add
add
mov
xor
jmp
cltd
int
xchg
ja
cmpsb
jl
repnz
enter
push
mov
les
and
call
jno
call
loopne
shlb
dec
xlat
xorb
out
dec
mov
roll
data16
adc
out
add
pop
int3
push
and
jp
into
adc
and
push
out
mov
divb
push
sbb
pop
xchg
inc
cs
or
jbe
push
in
push
sub
sub
inc
jle
lods
adc
fstl
adc
cmp
sub
xchg
lods
push
dec
push
push
dec
pop
dec
push
sbb
les
dec
push
push
push
das
loopne
jmp
aam
push
test
in
xchg
filds
add
stc
ss
repnz
mov
negl
sbb
lcall
xchg
adc
sbb
das
xchg
cmp
jnp
imulb
cli
orl
jmp
add
mov
jne
cmp
and
pop
or
shrb
test
fimuls
dec
ljmp
ss
sbb
out
sub
xchg
aam
ror
push
mov
sub
gs
js
mov
test
int
in
jns
dec
test
and
pop
pop
push
xlat
iret
add
push
sbb
les
jl
dec
lods
push
sbb
add
data16
mov
mov
adc
shrb
xlat
xchg
pop
jno
xchg
xchg
xor
mov
scas
xchg
mov
jnp
aam
gs
pop
lock
jne
or
pop
inc
xchg
mov
and
mov
mov
sbb
cmp
add
aad
fucomip
push
sbb
mov
pop
gs
addr16
out
outsb
scas
pop
mov
popf
jae
push
fbstp
sahf
push
cltd
dec
and
jae
fistl
inc
outsb
aas
adc
mov
dec
xor
int3
cmpsl
cmp
add
jo
ljmp
leave
ss
add
les
in
mull
lret
xchg
ret
ds
imull
adc
pop
outsl
insl
xor
sub
fstpt
lods
pop
push
andb
out
imul
xchg
paddd
fwait
clc
aam
xchg
imul
pop
mov
js
sbb
sub
mov
inc
dec
pushf
sbb
pop
fisubrl
xchg
pop
in
mov
push
mov
jo
xchg
jge
orb
loope
sub
js
rcll
daa
ja
fimull
les
lods
cmp
insb
sub
imul
inc
fs
adc
call
sub
sbb
js
adc
lret
inc
into
cli
fimull
andl
hlt
ss
xchg
xor
mov
xor
push
dec
imul
jmp
sub
xchg
push
mov
test
jmp
xor
cmpsl
lds
popf
cmpsl
dec
push
addr16
pop
fwait
jmp
add
jbe
call
aaa
test
xor
and
cli
je
push
xchg
xchg
loope
inc
add
pop
es
sbbb
push
rcrb
inc
cmp
into
dec
aad
sbb
pop
mov
cmp
adc
clc
or
sahf
es
data16
dec
mov
lock
loopne
inc
pop
add
scas
dec
sbb
jmp
bound
js
leave
call
insb
dec
fldenv
dec
and
push
and
repz
or
push
lcall
push
mov
loope
ljmp
mov
sbb
dec
jmp
sbb
sahf
imul
mov
mov
loopne
inc
xorl
dec
xchg
push
push
insl
xchg
sbb
inc
inc
or
xor
pushf
mov
push
cmc
mov
and
mov
add
push
xchg
mov
rcll
ljmp
fistpl
sub
loope
mov
bound
or
adc
scas
xor
ror
push
sbb
out
xchg
mov
repz
mov
movsb
sub
sbb
mov
or
push
je
negl
js
sub
aam
mov
mov
cwtl
movsl
mov
cmp
push
mov
xchg
lock
inc
call
xor
loop
mov
pop
inc
push
mov
or
sbb
push
cld
mov
not
loopne
icebp
push
jo
push
jl
pop
xlat
ds
idiv
push
mov
je
push
lds
add
mov
push
out
es
loope
dec
fisubl
sbb
stos
ds
or
xchg
test
pusha
jmp
mov
sbbl
mov
inc
lods
sub
loope
mov
rorb
aaa
pop
or
xchg
pushw
shl
xchg
adc
out
xor
and
jno
cmp
je
addb
loopne
ret
inc
xchg
mov
orb
mov
jb
daa
mov
inc
mov
int3
orb
je
sbb
jno
ds
test
inc
jmp
mov
push
cmpsl
dec
arpl
shrb
stos
shll
rcrl
or
sub
adc
fidivrl
icebp
inc
in
mov
mov
imul
jecxz
rolb
cmp
push
pop
aaa
push
popa
fldl
or
mov
or
fwait
sbb
fsts
imull
inc
jp
push
rol
std
mov
cwtl
jg
mull
fst
adc
adc
inc
mov
mov
add
sarb
dec
sub
lds
ss
sub
mov
cmpsl
ja
jmp
out
sbb
pop
sbb
dec
cmpsl
add
xchg
outsl
jb
dec
movsl
lea
xor
sub
push
sbb
mov
xor
aaa
ja
out
ljmp
imul
lret
mov
clc
into
xlat
imul
inc
hlt
push
xchg
lea
inc
mov
inc
jae
push
mov
jae
inc
fcomps
imull
jle
out
xor
int3
add
ss
lret
xchg
jp
adc
out
mov
sub
sbbb
leave
iret
adc
out
out
xorl
xchg
xchg
lcall
cmpsl
aaa
pop
ss
repnz
or
sub
repz
ss
mov
pop
cmp
xchg
add
inc
sbb
pusha
xor
adc
xchg
mov
lock
call
or
nop
mov
out
test
adc
rcr
in
fwait
scas
and
xor
repz
sub
jge
xchg
stos
inc
pop
lret
mov
ret
xchg
rolb
aam
test
push
out
pop
shrb
lods
xor
sbb
test
pop
inc
jmp
addb
lds
fstpl
add
pusha
cs
cmp
pop
adc
adc
aaa
mov
test
pop
icebp
xchg
pop
pop
sbb
pop
test
add
sbb
push
sbb
jo
adcb
and
cmpsb
mov
insb
xchg
mov
in
pushf
shrb
dec
and
sub
sbb
stos
push
sub
xchg
lods
pop
addr16
pop
cmp
lret
push
lea
dec
je
in
push
mov
jecxz
lret
in
sub
mov
inc
lretw
xchg
in
test
sub
pop
in
daa
inc
sbb
mov
xchg
fdivrs
in
lcall
cmpsl
sti
sbb
mov
inc
inc
cmpsb
bound
fdivrs
jge
cmp
pop
aaa
mov
and
imul
inc
push
mov
aad
jg
fiadds
pop
push
cs
shl
fmuls
or
gs
ficoms
lds
jecxz
sahf
int
mov
addl
inc
adc
test
out
cmp
inc
imul
or
aaa
rcrb
popa
adcl
mov
xlat
add
lock
ds
out
xor
inc
test
mov
xchg
bound
lds
sti
mov
pop
ljmp
cmp
lock
pop
leave
popf
inc
add
movsl
pop
dec
popa
iret
push
or
lods
push
aam
mulb
pop
fwait
cltd
or
lahf
out
mov
xchg
mov
insb
inc
pushf
or
fcomp
and
iret
and
add
push
jg
das
dec
popf
mov
pop
cmp
mov
add
xor
mov
mov
mov
mov
insb
xor
data16
sub
inc
push
xchg
dec
and
mov
mul
int3
push
into
call
xchg
mov
cmpsl
pop
out
iret
adc
outsl
std
js
inc
push
adc
push
mov
sbb
hlt
cmp
mov
std
add
fcompl
sti
lret
adc
mov
xor
jge
jmp
into
xchg
jmp
pop
sub
cs
pushf
bound
outsb
repnz
jns
xor
mov
movsb
dec
push
pop
mulb
mov
inc
hlt
lods
mov
stc
mov
mov
fnstenv
jge
pusha
cmp
jo
push
outsb
mov
lock
xor
aaa
testb
negl
lahf
sbb
sub
sbb
push
arpl
cmp
add
mov
xor
test
out
fwait
ja
push
fwait
loope
push
in
pop
xchg
lahf
pop
cmp
inc
cmp
inc
adcl
mov
or
cmc
lret
jg
add
sub
jge
or
inc
or
lahf
mov
out
inc
ret
sbb
xor
stos
pop
adc
cmp
iret
cld
mov
nop
in
sub
push
adc
adcb
int
iret
movsb
dec
sbb
gs
cwtl
mov
hlt
cwtl
mov
mov
out
xor
nop
or
lods
imul
inc
mov
scas
daa
pop
subl
push
sub
out
cli
and
xorl
jbe
mov
roll
divl
pop
push
adc
inc
rcrl
gs
dec
jp
out
mov
dec
mov
push
pop
rcl
in
jb
pop
or
outsl
and
ret
add
test
cmp
cmc
push
push
in
bound
cmpsb
subb
sub
dec
adc
adc
mov
push
jo
xchg
jecxz
daa
pop
les
jo
mov
stos
call
push
daa
jp
inc
in
xchg
aaa
aaa
sbb
push
subl
insb
fwait
leave
add
repnz
cmp
ret
cmp
mov
into
inc
dec
push
adc
push
jnp
mov
push
adcb
clc
sarl
bndldx
pop
adc
orl
adcb
cmp
rcll
je
incl
or
jg
jb
push
add
adc
add
cwtl
data16
or
push
jmp
push
adc
jbe
addr16
sub
and
jp
das
notb
arpl
lods
fwait
xchg
pop
scas
xchg
mov
pop
mov
lahf
xlat
or
inc
negl
xchg
std
mov
je
xchg
pop
enter
dec
dec
mov
cmc
adc
outsb
subb
add
mov
fistps
xor
outsb
in
pop
push
pop
js
jg
xor
out
jns
pop
popa
xor
jae
xchg
mov
movsl
xchg
sbb
std
in
out
mov
or
jmp
and
inc
pop
xchg
mov
dec
ret
push
aaa
fwait
and
lods
clc
jge
cmc
cmp
mov
cmpb
add
lds
daa
xchg
pop
je
xor
xchg
repnz
sub
pop
shll
fisubs
and
mov
and
orb
data16
fsubr
jb
das
lcall
push
push
push
lcall
notb
arpl
lret
fisttps
xchg
inc
les
aad
js
xor
loope
scas
push
hlt
dec
scas
cwtl
ror
sbb
mov
pop
mov
cmpsl
and
adc
cwtl
sub
jge
mov
inc
and
mov
loopne
mov
xor
mov
xchg
daa
mov
pop
pop
mov
xchg
ret
and
or
loopne
popa
mov
push
sbb
add
dec
les
cmp
inc
sbb
or
mov
cwtl
scas
clc
std
lock
pop
mov
push
js
bound
xor
or
cwtl
mov
lahf
movsb
cmp
cwtl
divl
cmp
rep
in
ret
iret
push
div
cli
in
sahf
xchg
jecxz
dec
stos
stos
pushf
movsb
lds
call
movb
in
adc
sub
sbb
adc
dec
mov
aad
pushf
xor
gs
mov
add
into
mov
mov
imul
lods
dec
push
sub
push
pop
jb
in
pop
ljmp
jbe
loope
int3
xchg
movsl
xchg
cmc
cld
xchg
test
xchg
jb
cmc
cli
add
and
frstor
test
add
adc
cmp
sbbl
sbb
pushf
pop
mov
push
lea
push
imul
aaa
cmp
test
mov
push
lods
mov
mov
mov
sbb
repnz
lgs
mov
lock
stc
xlat
lahf
push
jge
cmp
shl
movsl
jno
int
sbb
pop
sub
call
sub
ret
lds
shlb
pop
test
lret
push
popf
hlt
cmp
icebp
ret
dec
xor
in
outsb
pop
jecxz
jne
push
or
lahf
push
fdivp
jno
xchg
push
and
movsl
inc
fbld
ret
or
stc
and
mov
hlt
dec
push
das
push
ljmp
push
lahf
or
push
inc
out
mov
rcll
or
jno
fcompl
and
hlt
test
jo
lahf
dec
xchg
xor
mov
jecxz
inc
ljmp
add
scas
fs
adc
sub
jle
mov
dec
xchg
push
jb
hlt
dec
lods
fnstenv
mov
jne
imulb
push
cmpsb
xor
sub
lods
push
aas
lea
fmuls
repnz
cmp
rcr
jge,pt
inc
rcrl
cmc
lock
sti
dec
xor
push
hlt
out
fcom
jnp
xchg
pop
cmpb
jns
push
inc
das
hlt
dec
push
loopne
stc
test
jnp
sbb
add
sub
sub
xor
repnz
rcl
in
lret
pop
sahf
cmpsb
dec
loopne
inc
cli
xchg
jb
lds
fistl
fidivrs
mov
out
arpl
lds
in
push
int3
sbbb
xchg
mov
or
stc
pop
xor
and
popf
mov
sbb
jno
adc
rcrb
jns
lds
out
aaa
test
sub
out
inc
inc
popf
cmc
lret
mov
je
push
cltd
inc
adc
mov
jg
push
pop
repnz
pop
xor
or
sbb
shrb
arpl
pop
jg
lock
cmpsb
cmp
aam
into
push
sbb
pusha
lods
into
pusha
insb
or
and
xchg
fs
gs
cwtl
mov
loop
jb
mov
adc
push
or
dec
dec
push
scas
xorb
iret
stc
sbb
jo
adc
inc
lcall
inc
and
pop
jns
jg
mov
lahf
inc
mov
jle
push
js
jg
lea
jb
lahf
jmp
pop
cld
inc
sarb
xchg
test
imul
push
je
shl
fdivrs
repnz
jns
and
xchg
je
fwait
fs
arpl
push
cmpsb
pop
pop
mov
aaa
scas
ljmp
push
int3
stos
mov
cld
rol
mov
lock
ds
es
push
repnz
outsb
jno
andb
mov
inc
rcll
mov
pop
inc
or
jge
shll
cmp
ja
in
push
push
inc
jl,pn
daa
cltd
pop
out
inc
and
pop
add
leave
push
out
pop
fidivrl
inc
stos
mul
cltd
xor
add
cmp
insl
daa
adc
ljmp
sahf
adc
or
pop
jl
stc
mov
push
testb
add
pop
pop
jle
fidivl
mov
icebp
or
sbb
test
sub
ljmp
mov
fldcw
push
dec
stos
jns
mov
fists
scas
out
push
dec
add
pop
rorl
sahf
cld
dec
and
outsl
nop
das
and
stos
cwtl
cmpsb
cmc
hlt
pop
in
inc
push
loopne
mov
and
push
mov
pusha
inc
sub
lcall
mov
jne
stos
jae
leave
jmp
jl
dec
add
sub
sbb
popa
xor
jb
pop
dec
test
dec
add
mov
pop
mov
sub
cs
aas
or
cmc
jmp
jge
addr16
shlb
daa
mov
mov
repnz
and
dec
rol
mov
adc
loope
dec
fidivs
pop
xchg
mov
sti
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
