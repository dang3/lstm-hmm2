xchg
pop
xor
add
mov
lock
jo
jnp
pop
dec
lods
es
rcrb
ret
xchg
stos
jle
sbb
inc
jle
dec
add
dec
xchg
pusha
jo
cmpsl
xor
scas
shl
lods
xchg
sub
lds
cmp
es
repnz
xor
clc
icebp
das
mov
ror
loop
jno
mov
lods
jo
sbb
loopne
call
mov
dec
cmp
xchg
cmp
aas
lahf
fsincos
jle
xchg
lret
fiaddl
popa
rorb
lcall
cmpsl
inc
pop
popf
xor
mov
mov
mov
push
aad
fldt
and
pop
pop
imul
addl
mov
cltd
or
das
dec
mov
adcb
fimull
test
push
lcall
loope
xorl
cmp
mov
dec
leave
leave
push
fsubrs
jp
stc
fbstp
nop
mov
inc
xchg
mov
dec
push
and
inc
push
sub
out
scas
cmp
pop
adc
dec
cmp
loope
addl
adc
sub
cmpsl
mov
rcrl
mov
push
sahf
sbb
xchg
mov
test
movl
and
sub
rcll
imul
mov
mov
jmp
in
iret
jle
xchg
inc
data16
orb
add
mov
cmc
and
add
out
aam
adc
hlt
movsl
mov
test
cld
inc
mov
fwait
iret
orl
jp
add
ja
xchg
sbb
outsl
fwait
mov
dec
and
incb
ret
sar
addl
loopne
xor
sub
mov
xchg
lea
and
push
rcrl
mov
les
ljmp
mov
jmp
dec
stos
xor
sar
sahf
jb
inc
ficomps
add
cwtl
push
push
fistps
mov
sbb
jae
mov
cli
jmp
aaa
dec
inc
inc
jbe
mov
sbb
inc
cmp
push
adcl
push
pop
xor
xchg
je
jae
push
push
dec
jp
sbb
dec
mov
int3
rcrl
pop
sub
aad
jl
adc
add
adc
cmp
aas
icebp
sbb
mov
add
outsb
pop
fcoms
pop
jnp
clc
mov
mov
cmc
jo
xor
fisubrl
cmp
loop
sub
into
popf
adc
fstl
ss
jl
test
cmp
fmul
or
cmp
sar
dec
xorb
xor
mov
loopne
push
sub
inc
jo
inc
cmp
sub
addb
xor
aaa
daa
or
sub
inc
add
sbb
pusha
push
jle
hlt
sti
cmp
arpl
or
mov
xchg
out
xchg
ds
fs
jns
add
pop
popf
push
sub
and
push
addr16
sbb
mov
outsl
ja
rorb
jns
mov
pushl
gs
inc
sub
mov
pop
repz
or
adc
or
inc
pop
xor
ds
cli
in
pushl
dec
cmp
std
aam
insb
ja
jo
xor
mov
mov
xor
xor
dec
lock
mov
sbb
inc
mov
mov
push
aad
fnstenv
out
aas
push
jnp
push
dec
cmp
jp
ja
inc
jl
push
jbe
adc
mov
jge
sbbb
test
lods
repz
movsb
out
mov
add
addl
dec
popf
aad
sub
cmc
aaa
fstpt
xlat
insl
cli
add
mov
cmc
sub
push
jbe
int3
stc
cmp
sbb
clc
push
push
fisubrl
jb
xchg
insl
lret
inc
pop
mov
movsl
inc
xor
gs
jmp
xor
pop
iret
inc
pushf
sbb
fstps
mov
add
xor
leave
andl
out
jg
fdivrl
mov
pop
out
lds
in
sub
push
clc
mov
call
push
jae
and
cmp
jmp
pop
push
sub
das
jbe
pop
cmp
mov
les
movsb
lods
out
imul
pushf
iret
loop
mov
jle
adc
out
roll
mov
dec
test
mov
int3
es
pop
roll
cmp
lods
push
push
aad
fadds
push
lods
jae
dec
and
adc
pop
mov
pushf
push
mov
sahf
adc
mov
cli
mov
in
daa
decl
xlat
inc
and
lret
mov
icebp
lret
sbb
fidivrs
shll
fldcw
pop
aad
mov
or
aad
lods
popf
xchg
inc
repz
push
pushf
rclb
lods
adc
rcll
dec
push
cmp
shrb
cmp
xchg
fisttpl
das
daa
cs
das
mov
rcl
in
fs
icebp
std
int
fimuls
clc
xchg
push
mov
xor
aad
adc
lods
aad
das
rclb
cmp
and
test
ret
je
mov
out
and
adc
inc
pop
inc
push
lret
cmovb
test
dec
cmpsb
xor
adc
mov
xor
hlt
or
repnz
aas
jo
sahf
jo
add
sub
or
mov
jmp
sub
lret
mov
out
sub
push
jp
pop
xchg
out
adc
subl
jno
test
stos
add
cmpsl
lret
iret
mov
mov
fs
into
rcrb
cli
js
addr16
cmp
jno
jae
mov
addr16
dec
cmpb
pop
mov
mov
jecxz
cwtl
xchg
cmpsl
lock
mov
fldcw
mov
sub
adc
int3
fldenv
pop
test
inc
mov
push
push
adc
mov
pop
xor
fldl
loopne
fdivrs
jg
jecxz
sahf
jnp
push
notb
daa
and
popa
push
push
bnd
push
mov
or
and
je
ljmp
xchg
cmp
repz
jmp
iret
out
in
jp
and
jb
add
mov
insb
xlat
cmp
inc
mov
cs
xlat
xor
loop
mov
sbbl
aad
xlat
outsb
sub
lods
and
jle
dec
mov
mov
icebp
mov
jae
fiaddl
inc
sub
fisubrl
pop
xchg
inc
orb
cld
and
clc
std
hlt
lret
les
sub
nop
xchg
sub
push
testb
sub
sub
or
out
es
shll
mov
popa
mov
dec
mov
add
push
cld
pop
cmp
stc
shrb
pop
xor
scas
xchg
jbe
mov
sub
leave
lret
mov
fdivrl
inc
sbb
lock
test
es
mov
lret
sbb
jae
or
push
jl
adcl
ret
and
out
mov
and
mov
xlat
test
iret
adc
or
add
xor
xchg
mov
ss
test
int
lret
rol
jb
addr16
popf
adc
fstps
adc
pop
ss
sahf
das
xor
pusha
pop
xor
and
test
icebp
and
cmpsb
dec
mov
pusha
inc
lcall
add
push
adc
sub
sahf
and
test
mov
mov
sbb
mov
inc
mov
xchg
out
jl
es
std
push
aam
add
out
insl
push
push
pop
mov
pop
lret
push
aaa
jno
push
mov
or
fdivrl
sub
rclb
cmp
mov
mov
sub
dec
lods
loopne
jne
lea
and
addr16
iret
pop
fadds
add
adcl
push
cltd
rcr
or
mov
mov
xor
cmp
inc
stos
inc
loop
mov
mov
add
mov
jmp
mov
push
sbb
fstpt
shlb
fsubl
das
ja
jne
lods
or
jg
int
es
sbb
lret
jp
and
xor
in
jle
outsb
mov
sub
or
push
push
lea
sub
nop
xor
sahf
aam
sbb
scas
sbb
push
push
popa
push
rolb
rcl
mov
jb
mov
mov
mov
inc
scas
iret
sahf
into
mov
mov
sbb
pop
cmp
aaa
aaa
pop
jno
mov
in
imul
push
sbb
jge
or
ss
insb
shr
orl
in
cs
mov
lods
inc
push
jl
mov
icebp
pop
xchg
ss
ljmp
fcoms
aaa
dec
aaa
push
inc
sbb
enter
cli
xchg
out
push
push
mov
scas
jmp
mov
mov
sub
cld
cld
pop
cmc
adc
ja
cmpsl
cwtl
lcall
cmp
popa
rol
xchg
cld
adc
push
inc
push
inc
pushf
mov
lds
leave
inc
adc
neg
cltd
mov
and
mov
push
ds
or
push
lcall
lds
clc
add
jmp
pop
and
and
nop
fists
pushf
insb
inc
and
leave
dec
mov
mov
cmovbe
mov
popa
dec
push
push
xchg
jo
mov
imul
imul
loopne
pop
in
jns
ss
lea
or
add
scas
push
mov
pop
loop
mov
in
mov
push
mov
cmpsl
and
mov
fstp
jae
sahf
mov
cmpsl
push
je
mov
popa
pop
or
movsl
cmp
fidivs
xchg
pop
mov
cwtl
sbb
lret
mov
xchg
inc
pop
lds
adc
or
int
push
std
sub
add
push
hlt
enter
pop
int
push
jmp
repnz
or
pop
push
das
add
into
fistpll
mov
int3
mov
cltd
loopne
addr16
sbb
out
push
fisubrs
push
jge
sub
fsubr
xchg
mov
popa
clc
and
pop
push
popa
ljmp
add
xor
xchg
movsl
push
cmc
pusha
mov
add
pop
mov
adc
mov
fwait
fwait
cli
add
movsl
xor
mov
add
xor
mov
or
call
lret
xchg
pop
or
sahf
xchg
out
pop
mov
rcr
fldt
mov
das
mov
sarb
out
mov
push
std
inc
bound
xor
push
in
jns
xchg
aad
scas
xor
sahf
imul
aam
movsb
mov
icebp
inc
pop
dec
sbb
xor
stos
popa
or
sarb
test
push
fcoms
out
mov
add
sbb
imul
mov
add
rcrb
sub
fistpll
sub
dec
jle
shrl
sbb
ljmp
xor
xchg
push
mov
lods
js
fcompl
adc
inc
jp
aad
outsb
and
ja
es
lcall
arpl
mov
mov
into
int3
aaa
mov
jnp
scas
mov
cmp
adc
push
inc
push
shrb
push
cltd
xchg
push
shll
aas
lret
gs
in
mov
xchg
xchg
int
push
aad
dec
xchg
lea
and
adc
mov
jne
dec
out
xchg
nop
add
sbb
popa
sbb
stc
xchg
rcr
fwait
loope
push
movsb
xor
push
ljmp
aam
inc
movsl
sub
nop
sbb
jnp
insb
pop
cmp
xchg
outsl
mov
test
jecxz
mov
pop
mov
add
call
mov
inc
add
imul
mov
xor
dec
adc
pop
xor
or
icebp
cmpsl
inc
loope
xor
addl
outsl
jae
add
fsubrl
ljmp
sbb
mov
scas
push
outsb
popf
sarb
xchg
nop
jae
cmp
int
sub
cs
adc
dec
xchg
leave
dec
xor
in
outsb
add
rcll
xchg
mov
mov
mov
in
ss
cmp
adc
xchg
rol
dec
and
lcall
adc
loop
fcompl
mov
push
push
sub
mov
adcb
js
clc
adcb
scas
xor
stos
jno
aaa
test
push
lahf
hlt
pop
add
mov
sub
adc
jae
push
mov
pop
cmp
pop
popf
ret
dec
pop
lcall
xor
xor
bound
sbb
dec
jae
mov
imul
and
pmaxub
inc
and
fiaddl
mov
xor
aas
or
dec
inc
fldcw
xchg
rcrl
push
mov
sub
xor
add
adc
pop
cld
jno
sahf
call
es
fsave
ljmp
xchg
mov
xcrypt-ctr
cmpsl
sbb
gs
iret
jp
insl
jmp
ss
jle
lahf
pop
jp
lods
dec
mov
inc
dec
mov
dec
nop
inc
dec
lcall
fiadds
int
sahf
stos
sbb
jns
sub
cs
loope
push
pop
jns
lods
mov
int3
mov
cmp
and
mov
insl
inc
into
mov
xor
rorl
xor
lock
mov
sub
and
stos
loop
cmp
jg
pop
scas
pop
cmp
fwait
mov
out
in
sub
push
rorb
popf
not
hlt
inc
sub
mov
movsl
dec
out
mov
inc
nop
aas
mov
xchg
push
inc
pop
pop
mov
jns
cmpsb
in
pushf
inc
std
jmp
mov
in
in
xor
mov
push
faddl
mov
sub
and
mov
mov
dec
xchg
pop
add
mov
cmp
aam
int3
cmp
adc
jp
or
dec
pop
inc
repz
cli
repnz
pop
in
roll
pop
rorl
sbb
mov
shl
pop
fbld
pop
js
cmp
fnstsw
push
jb
xor
daa
in
jecxz
adc
xor
push
dec
push
sub
mov
pusha
ss
imul
jmp
sbb
xlat
das
test
aas
xchg
scas
int
sub
mov
push
mov
dec
push
ficomps
xchg
scas
dec
mov
mov
sbb
pop
xor
adc
cmc
dec
mov
xchg
push
sbb
ljmp
ret
cmp
inc
fistpl
setae
mov
loop
inc
mov
and
call
jns
pop
and
mov
fisttpll
cmc
xor
daa
inc
sbb
and
scas
lret
hlt
in
aas
insb
icebp
outsb
mov
xor
dec
mov
outsl
add
push
ret
and
iret
inc
adc
mov
and
cld
jmp
adc
xor
and
pop
bound
std
lcall
outsb
pop
mov
add
jb
jl
push
pop
sbb
cltd
in
ficoml
mov
dec
dec
cmpsb
fwait
push
adc
push
xor
fidivrs
pop
popa
insb
nop
mov
mov
adc
test
jae
aad
les
clc
fnstsw
pop
sahf
pop
jge
xor
or
cmpb
sarl
cli
out
adc
shl
mov
imul
inc
out
inc
mov
or
int3
xor
or
push
ljmp
or
and
cwtl
add
fldl
xor
fistpll
xchg
fidivrs
repnz
jmp
lret
add
pop
jns
pushf
inc
and
jae
ljmp
ja
jle
fnsave
test
inc
mov
add
rcrb
and
pushf
lahf
xor
out
shr
icebp
cwtl
clc
push
rcrl
dec
fwait
cmc
xchg
fwait
inc
jns
scas
cmpsb
sar
fstps
push
jb
inc
sbb
mov
hlt
or
aad
sub
imul
jbe
lcall
not
inc
mov
adc
je
hlt
cmp
imul
in
leave
scas
push
pop
outsb
inc
cld
fistpl
fs
dec
incb
loope
sub
add
and
leave
inc
xor
inc
stos
inc
add
test
pop
mov
loopne
cld
sub
push
pop
int
dec
in
cli
inc
shrb
cmc
rcrl
mov
push
mov
mov
popf
push
inc
testl
dec
push
fwait
sbb
jle
repnz
inc
sub
add
and
mov
icebp
inc
out
les
hlt
dec
sub
sub
lods
and
mov
adc
dec
cmpsb
insb
and
dec
aas
inc
fwait
int3
addr16
in
cmc
add
leave
scas
in
add
inc
cwtl
pop
out
jmp
nop
and
aas
xor
adc
dec
push
and
jne
repz
jecxz
shll
dec
xchg
ljmp
sti
test
mov
imul
jnp
pusha
sarl
mov
push
inc
or
pusha
cmc
xor
jno
mov
mov
mov
adc
pop
pop
xchg
filds
das
movntq
in
sub
imul
push
shr
outsl
cmp
pop
xor
les
dec
gs
mov
shrl
sub
sti
lods
ljmp
int
inc
mov
jecxz
add
movb
out
pop
fidivrl
pusha
icebp
push
add
fidivrs
sub
mov
sar
push
xor
movsl
lret
jne
xor
adc
scas
shlb
mov
sahf
pop
test
xor
cmp
pop
icebp
inc
mov
inc
add
xor
je
insb
mov
imul
xorl
popa
test
popa
mov
push
mov
xchg
sbbb
xchg
dec
inc
icebp
sub
insl
lcall
xor
mov
ret
sbb
test
stos
stc
cli
call
push
ret
or
jge
insl
int
outsb
adc
xchg
jmp
xlat
mov
fisttpll
int3
xchg
movsb
xor
iret
cmove
add
add
jo
jno
push
adc
ja
jbe
stos
pop
sbb
lods
gs
inc
sbb
es
test
ret
cmp
add
xchg
inc
into
cwtl
fcmovu
inc
clc
xchg
into
lahf
sbb
push
out
push
dec
cld
out
pusha
sbb
icebp
jne
loope
inc
xchg
frstor
adc
inc
aas
negb
or
dec
xor
xchg
sbb
data16
movsl
cmp
out
ss
mov
adc
les
xchg
jle
jne
movsl
sarl
or
ljmp
imul
daa
jnp
pop
and
push
dec
mov
mov
push
cmp
sbb
shr
out
movsl
lock
mov
xor
rcll
mov
test
dec
cmpsb
in
cmp
xchg
cmp
data16
mov
movsb
inc
mov
or
js
push
dec
fucom
cmc
dec
leave
inc
mov
rclb
mov
jge
mov
out
rcl
push
fbld
fldenv
cmp
stc
cwtl
mov
int
in
add
mov
and
in
icebp
adc
jnp
dec
scas
push
jne
mov
int
sbb
and
push
mov
xchg
add
pop
shl
out
xchg
xchg
pop
xchg
sbb
pop
xor
mov
popf
jae
mov
aam
imul
shll
inc
adc
add
popf
outsl
push
out
shlb
jno
inc
sub
pusha
jmp
push
icebp
mov
xor
xchg
stos
sarb
fimuls
mov
fidivrl
cld
nop
shrl
jno
jmp
xor
mov
sbbl
pop
jne
pop
ja
inc
inc
fistl
cmp
or
out
icebp
push
shll
inc
call
test
mov
mov
or
mov
dec
jmp
lret
sub
loop
xchg
cld
add
push
pop
mov
xchg
inc
pusha
std
push
mov
pop
out
daa
xchg
adcb
xchg
add
test
outsb
cmp
pop
outsb
aam
jns
arpl
jmp
aaa
out
push
mov
insl
subb
xchg
sub
lods
sbbb
outsb
cmpb
cli
cmp
or
adc
xchg
adc
add
std
cmpsl
ret
xor
pop
push
inc
push
push
icebp
cltd
and
fistpl
add
and
test
inc
cltd
dec
les
xor
in
sbb
inc
movsb
stos
jge
pmaxub
test
push
cmp
daa
dec
shlb
and
in
into
xlat
jb
sarl
mov
xor
pop
rorb
insb
mov
mov
adc
jl
push
mov
and
or
jp
mov
mov
pop
and
jo
loop
ss
or
rolb
mov
xor
insl
rclb
inc
in
out
ja
loopne
cmpsl
das
mov
andl
loope
clc
mov
and
push
repz
mov
pop
lea
outsl
mov
scas
dec
and
sbb
insl
mov
adc
jg
in
xchg
ljmp
inc
mov
bnd
sahf
ss
das
ret
ja
cmc
notb
ljmp
rclb
aad
pushf
jl
sbb
nop
into
pushw
xor
pop
es
stos
in
mov
cmp
push
mov
push
sub
pop
xchg
popa
cmp
push
sbb
pop
inc
add
xchg
ljmp
xor
mov
dec
mov
filds
xor
outsb
xor
out
popa
orl
add
add
pop
or
cmpsb
int3
repz
lds
cmp
adc
xchg
push
nop
lock
pop
mov
aad
mov
push
jecxz
mov
mov
dec
pushl
mov
adc
mov
xor
clc
mov
addr16
aad
or
sbb
fsubrl
mov
push
stc
or
jnp
orl
bound
cmp
movsl
je
push
dec
push
je
dec
xor
lock
xor
or
pop
sub
testb
mov
inc
pop
lret
rcrb
imul
fnstsw
mov
add
aaa
adc
sbb
loope
nop
mov
add
cmp
test
and
aas
les
lock
mov
add
arpl
test
sub
cmp
ja
in
dec
jl
mov
cmp
xor
and
pushf
jmp
adc
push
lock
jp
iret
mov
or
pop
jg
insl
xchg
je
or
ja
add
jne
mov
das
adc
loop
nop
out
ds
and
scas
push
xchg
xor
adc
fmul
das
out
daa
fbstp
or
mov
xlat
and
inc
xor
dec
pusha
push
cmp
stos
aas
fimull
inc
jo
sub
cltd
movsb
mov
rcll
jge
xor
mov
jno
out
mov
jp
ljmp
add
pop
jmp
mov
xor
mov
sbb
cmova
in
cmp
mov
jae
xor
dec
inc
push
test
test
push
push
insb
xor
mov
inc
mov
popf
andb
mov
or
ret
loop
movsl
sub
fs
sub
inc
inc
call
mov
dec
cmpsl
sub
outsl
arpl
ficomps
mov
jbe
xchg
std
pop
inc
sbbl
cmpl
icebp
jns
or
mov
fcoms
cmpsb
jmp
xchg
mov
in
cmpsl
or
and
or
cmp
bound
push
mov
adcl
js
jo
sbb
ret
or
adc
sub
stc
rorb
push
loope
cmpb
popf
rcrl
xor
xchg
mov
and
scas
xor
mov
xor
cmp
xchg
adc
xor
pop
lcall
cwtl
jecxz
pop
ja
sbb
push
sub
xor
inc
cwtl
jne
xchg
sbb
popf
push
sub
sub
mov
popa
jae
jbe
and
adc
sti
cld
mov
fbld
xor
and
insl
inc
fcmovnb
shlb
movsl
cmp
sub
roll
stos
cmp
rcr
sbb
push
js
or
mov
cs
or
cmpsl
jl
out
and
and
and
mov
nop
or
fstpl
push
pop
imul
shrb
sub
inc
cmpsb
testb
sbb
loopnew
push
fistpl
leave
fldenv
subl
std
ljmp
cmpsl
dec
fistps
fimull
out
js
add
cmpb
sub
jecxz
psrlw
ja
aam
addl
xlat
nop
repnz
cmp
and
push
inc
outsl
push
xchg
pop
cmpsl
pop
cltd
or
cli
roll
int3
jbe
rorl
sub
jg
jo
sbb
es
sti
push
mov
jmp
dec
mov
or
adc
jnp
adc
fcomps
fdivp
inc
inc
mov
and
sub
test
shll
sbb
inc
jmp
mov
mov
dec
sbb
mov
jmp
sub
mov
lods
xchg
sti
cltd
leave
hlt
or
movsl
fwait
cmp
and
xchg
sbb
test
aam
test
jne
fadd
out
and
mov
jmp
inc
xlat
push
push
jo
or
sbb
xchg
mov
dec
ds
call
xchg
dec
adc
lods
addr16
and
mov
insb
lea
sahf
and
test
sbb
sbb
xor
add
loope
sub
dec
icebp
es
aas
mov
repnz
jb
into
mov
testb
es
aam
testb
xor
popa
jb
out
outsb
add
xchg
adc
test
cmp
xchg
ss
loope
push
stos
loopne
int
repnz
idivb
push
out
xlat
push
add
imul
test
push
sbb
ret
jg
mov
insl
pop
xchg
fistpl
call
repnz
in
js
jne
insb
call
stc
add
mov
push
and
fbstp
mov
sub
sahf
pop
jg
inc
cmp
stc
ja
mov
xchg
insl
push
jge
cmpsl
fists
xor
adc
data16
sbb
out
mov
insl
cmp
adc
mov
test
fstpt
jb
xchg
or
push
cwtl
loopne
lret
jno
inc
cltd
add
mov
mov
push
xor
and
cld
pop
xlat
cmp
jae
movl
cmpsb
in
rcll
mov
lea
jne
fcompl
add
in
fsubrl
mov
push
ret
push
dec
xchg
mov
loopne
fsqrt
in
dec
cmp
cmc
dec
repnz
movsl
mov
mov
jb
and
test
jg
sub
push
mov
and
leave
mov
cli
push
xchg
mov
popf
outsb
xchg
shrb
cmc
sub
loope
mov
aaa
sub
sbb
push
cmp
dec
inc
xchg
repnz
ds
outsl
stos
push
fsubs
dec
movsb
add
out
xchg
fwait
adcb
mov
fcompl
in
xor
jno
lods
fdivp
inc
pop
scas
into
rclb
cltd
or
repz
rorl
pushl
pop
jg
test
or
lcall
push
inc
fisubrl
std
sub
rcll
add
popf
sub
and
and
addr16
mov
xchg
je
rcl
xchg
xchg
push
ds
sti
xchg
mov
pusha
jl
in
add
stos
mov
shll
insb
imul
aad
cmc
jno
jl
data16
pusha
notb
mov
xchg
jmp
dec
fmull
rcll
pop
inc
incl
sub
mov
jb
leave
sahf
cld
add
mov
leave
sarl
addr16
shrl
data16
inc
clc
jns
insl
sti
mov
fcmovne
imul
and
sub
push
into
jg
repnz
fimull
or
ret
jo
dec
ret
rolb
add
jge
lock
mov
sbb
jge
xchg
xchg
xchg
movsl
mulb
lcall
xchg
in
and
xchg
pop
pushf
or
xchg
gs
mov
add
jae
int3
mov
mov
inc
jp
add
pushf
or
out
xchg
mov
into
leave
mov
dec
inc
add
movsb
sub
imul
rclb
and
xchg
arpl
stos
jg
fwait
inc
push
jmp
mov
cmp
jecxz
dec
pop
push
mov
xor
sbbb
imul
push
into
daa
fwait
dec
stos
adc
push
pusha
mov
fcoms
shll
subb
xchg
bnd
push
jle
inc
jnp
lock
ficoml
cmp
mov
jo
imul
jl
jp
xlat
jo
iret
jmp
insl
popa
sub
aad
jl
ljmp
fwait
sti
lcall
pop
cs
aaa
lods
add
dec
dec
cli
jnp
outsl
imul
add
jg
popf
sbb
pusha
mov
mov
mov
aad
jecxz
jae
cwtl
dec
ret
xchg
or
adcb
out
sti
add
sti
outsb
push
sbb
xor
fdivrl
add
jo
imul
imul
lcall
ljmp
cli
dec
in
loopne
outsb
xchg
sbb
les
xor
mov
add
push
sti
push
or
shrb
in
inc
popf
and
mov
sub
sub
add
mov
mov
fmuls
mov
popf
add
test
xchg
dec
xor
pushf
mov
jl
test
rcll
in
pop
inc
mov
and
jle
jno
cmpsb
les
ja
push
rcll
jne
daa
aam
sbb
sbb
movb
in
not
rcl
push
mov
xor
testl
rclb
in
xorb
add
push
addr16
push
sub
cmp
mov
out
jns
call
adc
push
shrl
mov
jne
in
pop
adcb
imull
sub
inc
fwait
pop
aas
popa
stc
in
cmpsl
pop
ss
stc
call
cmp
rcrl
sub
pop
sbb
sbb
inc
arpl
fxch
test
push
mov
inc
xlat
in
jno
icebp
fcmovu
push
pop
repnz
jp
adc
shr
repnz
jmp
mov
mov
jo
mov
lcall
inc
stc
or
mov
jl
jae
into
sub
sbb
jle
ret
xchg
mov
cmc
or
leave
je
or
xlat
enter
add
jae
pop
loopne
pushf
push
mov
orb
inc
mov
jbe
dec
push
rcrb
sub
les
loope
into
mov
push
sbb
pop
xor
lahf
fsubl
sub
jb
fidivl
je
mov
jo
lods
movsb
cmpsl
cmp
loop
sub
sbb
addr16
adc
mov
insl
push
cmc
rolb
jg
ljmp
shl
jmp
push
ret
jge
mov
imul
test
in
ja
add
pmuludq
jge
pop
inc
push
lcall
mov
mov
push
rorl
sbb
mov
leave
arpl
test
out
movsl
pop
ret
add
nop
or
lock
test
xchg
cmp
dec
icebp
sub
pop
int
xor
mov
add
insl
dec
sahf
sbb
mov
and
add
sbb
lcall
jno
popa
mov
ss
fcoml
fwait
movntq
xchg
and
adc
ret
out
iret
inc
out
cmp
mov
pusha
mov
es
fcompl
dec
add
mov
or
adc
inc
inc
arpl
jge
mov
mov
xchg
ror
loopne
lret
btc
jmp
mov
pop
mov
add
imulb
out
xchg
xchg
mov
cmp
sti
add
add
inc
cmpsb
mov
jbe
lock
adc
sarb
cli
icebp
add
jle
gs
cmp
iret
addr16
jae
xor
push
mov
mov
sbb
fwait
ret
aaa
inc
inc
popa
mov
push
les
mov
sbb
test
test
push
lds
fdivrl
or
inc
lcall
mov
push
addr16
cmpsb
cltd
lret
insl
push
sub
and
cmp
mov
cmpsb
xchg
jbe,pt
mov
add
imul
jl
lret
jo
imul
lahf
or
pop
dec
jmp
addb
add
fwait
cmp
ds
movsb
sbb
or
fnstcw
popa
mov
xor
adc
pop
jp
sahf
sbb
lods
fldt
data16
inc
cmp
es
cld
sub
nop
add
fcomi
push
stos
cwtl
sbb
mov
outsb
imul
out
and
mov
xorb
cmp
outsb
mov
mov
push
sub
mov
in
pop
xor
leave
dec
inc
scas
pop
xor
icebp
dec
fcmove
lods
fcmovne
adc
movsl
ret
je
dec
xchg
inc
pop
lock
das
jge
and
xor
xlat
sub
sti
stos
rorb
or
lods
rolb
push
pop
mov
add
mov
fwait
insl
pop
stos
jecxz
pop
scas
aad
orb
mov
push
fs
lea
out
dec
mov
repnz
in
push
shll
leave
xor
mov
and
or
cmpb
fimuls
loopne
dec
xchg
inc
int3
aaa
adc
sbb
int3
shl
stos
inc
adc
fstps
dec
call
rcrl
ljmp
shll
or
int
loope
popf
mov
int
into
lds
mov
and
roll
out
xchg
push
int3
inc
out
out
scas
xchg
add
dec
dec
test
dec
and
sub
fnstenv
leave
cwtl
out
out
dec
fwait
call
mov
ds
mov
mov
jae
jmp
add
popa
inc
outsl
xchg
xchg
mov
pop
das
mov
into
dec
mov
push
xor
es
repnz
and
mov
sub
jb
inc
push
xor
enter
mov
out
push
test
dec
adc
in
into
push
andb
popa
dec
aas
scas
cld
push
data16
or
scas
push
data16
sub
mov
sahf
and
push
mov
mov
jne
push
mov
mov
xlat
inc
and
ljmp
push
out
scas
loope
sub
mov
stos
cmp
push
cmc
or
cs
mov
orb
leave
cmp
test
outsb
ret
into
jge
mov
or
icebp
fwait
aad
enter
stos
pop
xchg
stos
mov
shl
xchg
mov
and
mov
clc
sbb
or
shrl
pop
sbb
mov
adc
or
ljmp
test
repz
lods
jo
ss
roll
jno
and
imul
mov
repz
xor
push
push
fmul
adc
insl
iret
pop
dec
out
ret
xchg
dec
jb
mov
push
inc
ret
movsb
test
dec
loopne
fists
xor
xor
mov
push
push
mov
insl
mov
lea
and
sti
push
and
mov
add
jl
inc
out
loop
outsb
xor
out
pop
and
or
int
cld
subb
aas
adc
sbb
cmpsl
fistpl
and
mov
iret
sti
jg
add
out
stos
jle
nop
out
cwtl
rcr
hlt
leave
mov
icebp
add
fldcw
jb
mov
enter
fcmovu
dec
mov
rorl
or
movsl
mov
or
mov
xchg
std
stc
push
xcrypt-cfb
cmpsl
popa
inc
adc
mov
ss
cmp
pop
add
icebp
inc
xchg
or
cmp
imulb
jnp
jge
xor
adc
clc
cltd
xlat
imul
or
pop
xchg
outsb
into
pop
call
add
xchg
imul
jns
dec
jbe
daa
sti
imul
jecxz
inc
pop
fimuls
and
mov
hlt
lret
out
addr16
xor
push
gs
mov
or
jnp
or
and
je
lds
scas
mov
push
jno
popa
xor
xchg
repnz
xchg
dec
add
fsts
sub
push
adc
cltd
hlt
sub
adc
xlat
shrl
cmp
rcrl
setnp
sub
fiaddl
jns
mov
test
and
dec
push
cltd
fstps
jp
push
dec
mov
jmp
mov
push
popf
push
jnp
adc
out
sbb
mov
and
lahf
xor
sbb
loop
pop
out
cmpsb
stos
mov
sub
jbe
or
into
pop
stos
sub
mov
imul
jnp
pop
loop
mov
mov
ss
jae
rcll
xchg
outsl
ja
insb
or
dec
and
mov
or
dec
stc
mov
pop
dec
aas
icebp
sarl
xor
into
add
mov
jecxz
mov
shlb
mov
movsl
sbb
popf
jo
fstps
paddw
lock
pop
fnstsw
lods
mov
aam
repz
enter
sbb
arpl
sbb
jmp
xor
adc
repnz
adc
int3
adc
push
xchg
aas
cmpsl
inc
test
xchg
fsubrl
shrl
out
sbb
mov
mov
push
fcompl
push
adc
mov
stos
jnp
jns
sub
imul
inc
fwait
and
popf
rcr
mov
xor
roll
sbb
in
rcr
cmc
pop
pop
push
addr16
or
jl
aaa
jp
mov
and
xchg
sub
lods
mov
ds
ret
lea
int3
sbb
aaa
and
dec
cmc
jmp
aad
jbe
hlt
rclb
insl
mov
lea
sbb
adc
cmp
add
push
add
push
xchg
jnp
and
or
xor
aas
shll
lret
loopne
add
ds
adc
stos
lods
add
pop
jns
xchg
shll
dec
ja
xor
xchg
inc
rcll
mov
dec
sahf
add
jl
lods
jge
rcrl
out
xorb
cltd
in
dec
or
pop
cmp
lahf
mov
andl
and
mov
xchg
cli
push
les
push
subl
mov
add
es
outsl
shll
and
js
push
mov
sbb
sub
cltd
pop
adc
enter
loop
mov
fadds
ss
cmp
fisttpll
xor
dec
ja
and
idivl
mull
xor
insl
jne
repnz
imul
xlat
daa
call
lret
xchg
cmp
negl
push
and
mov
scas
loopne
cmp
sbb
sub
pop
mov
es
mov
jge
lahf
dec
popa
lahf
cmp
ret
jnp
fs
sub
das
and
or
cmp
jg
mov
pop
rcrl
mov
mov
mov
inc
into
dec
sar
mov
mov
add
loopne
ja
aad
pop
fistl
arpl
lods
pop
cmp
clc
pop
dec
sbb
xor
notl
mov
icebp
or
cmp
rep
add
jae
cmp
loopne
out
out
stc
pusha
pop
or
xchg
push
pop
xor
mov
adc
and
outsl
rcrl
xlat
inc
out
sbb
adc
popa
cmp
movsb
in
out
es
xchg
outsb
dec
mov
lea
inc
cmp
xchg
lahf
inc
jge
in
jmp
push
add
out
add
adc
je
ror
mov
ds
aam
dec
decl
jg
repnz
pop
dec
js
in
push
ljmp
out
sahf
push
jmp
jns
mov
addr16
and
inc
mov
fdivp
sub
idivl
push
imul
lock
push
cmp
rorl
or
dec
insb
jp
ljmp
jns
movsb
push
jmp
je
or
hlt
pop
and
hlt
dec
jge
andl
add
int3
cwtl
clc
cmp
sarb
mov
imul
inc
add
mov
rclb
sub
loop
xor
mov
fs
stos
outsl
lds
shll
pushf
ret
or
cmpsb
scas
add
jns
test
sti
ljmp
sub
fistl
call
push
push
je
pop
in
push
mov
stos
fistl
jmp
mov
jno
js
mov
add
push
leave
jne
in
mov
inc
dec
loopne
call
lock
mov
mov
imul
push
or
push
add
dec
push
inc
dec
mov
lcallw
cmpsl
mov
lahf
scas
adc
inc
out
addr16
xchg
insb
repnz
mov
push
movsl
sbb
adc
call
out
movl
dec
ret
addr16
insb
add
popa
or
sti
clts
iret
ret
test
mov
mov
repz
inc
mov
xchg
mov
fidivrs
loop
mov
cmp
lds
push
insb
ja
sbb
jecxz
jl
adc
lods
or
add
xlat
push
jne
xchg
mov
outsl
mov
add
jp
xchg
iret
fucom
inc
je
aaa
das
pop
jle
pop
push
push
lods
cli
imul
lcall
cld
mov
loope
js
sti
mov
pop
xor
mov
mov
dec
pop
xchg
outsl
sub
mov
loope
add
je
cmp
ds
decl
add
inc
push
lret
rorl
mov
mov
inc
mov
movb
std
jl
cli
ds
lods
outsb
sbb
rcrb
mov
imul
loope
lods
fistps
xchg
mov
dec
je
lahf
mov
in
adc
or
lcall
sbb
mov
lock
or
dec
in
lea
hlt
or
orb
inc
aad
mov
fwait
imul
aad
adc
sti
xchg
test
das
mov
inc
movsb
icebp
mov
mov
imul
and
out
cmpl
cmp
dec
popa
fdivp
sbb
mov
sub
xchg
lahf
nop
xchg
push
and
call
jnp
bound
jge
enter
rcrb
or
or
jle
fildll
add
je
ljmp
pop
xchg
mov
cwtl
ss
int3
or
xorb
mov
jmp
enter
push
sub
push
or
xchg
notb
add
test
xor
idivb
xchg
ret
mov
jae
adc
and
sbb
ret
scas
aad
rcl
or
fwait
push
dec
lcall
cmpsb
or
inc
std
ds
jl
dec
outsl
jge
out
push
xchg
inc
movsl
push
cmc
test
ret
mov
adc
ret
mov
popa
test
dec
call
lock
jle
mov
fwait
mov
mov
fdivs
fwait
cmp
jle
add
lods
pop
leave
mov
movsl
jne
add
push
ss
cmpsl
notb
push
arpl
mov
push
and
inc
sbb
loopne
jae
push
int3
lods
out
rorb
xchg
pop
xchg
adcl
mov
mov
push
mov
push
dec
lods
mov
and
insl
sar
mov
mov
mov
leave
push
fadd
mov
push
repz
fwait
cwtl
mov
stos
pop
movsb
push
cmp
out
cli
lcall
inc
jae
repnz
mov
push
repz
call
mov
push
cmp
lret
call
inc
dec
push
and
mov
mov
out
and
das
js
inc
pop
jnp
sbb
lret
sbb
imul
inc
movsl
cmpsb
pop
pop
cmpsl
mov
addr16
mov
mov
and
mov
jp
dec
pop
hlt
test
and
dec
pop
inc
pop
mov
xchg
cld
xchg
into
lods
in
aas
add
or
mov
mov
mov
lods
push
shrl
icebp
pop
fmuls
inc
add
sarl
fsubrl
sub
scas
into
gs
rolb
add
ret
clc
shll
push
lret
ret
outsl
inc
sbb
je
aad
cmc
or
cmpsl
cmc
cmp
leave
sbb
dec
ja
sub
ret
push
popf
add
mov
arpl
sub
lds
rclb
clc
int3
inc
cmp
cmp
xchg
sub
sbb
sbb
pop
pushf
pop
xchg
sbb
or
xchg
mov
in
scas
push
rcl
jg
add
mov
arpl
or
inc
push
lea
insb
jp
into
cwtl
data16
aam
test
and
test
xchg
or
push
or
stos
push
jne
fdivl
mov
jle
push
ja
sbb
enter
enter
shrb
push
xchg
fimull
dec
inc
pushl
test
cmp
add
xor
iret
inc
lock
adc
rcl
rolb
dec
add
sbb
idivl
fwait
std
or
out
stc
mov
mov
mov
cmp
mov
cld
or
mov
decl
sub
or
sub
push
pop
mov
fimull
mov
adc
mov
mov
aam
mov
test
out
cmp
lods
ss
in
inc
aad
imul
lods
push
lret
push
xchg
shll
iret
inc
xlat
frstor
subb
test
sub
mov
cld
pusha
sub
inc
add
faddl
pop
inc
adc
rclb
xchg
stos
scas
dec
stos
pop
fiadds
sub
pop
inc
mov
mov
lods
adc
fcmovnu
mov
sbb
xchg
notb
mov
pusha
test
jb
and
add
pop
sti
push
adc
mov
les
mov
sbb
loop
int
ljmp
lds
lods
sub
inc
hlt
pop
inc
jl
dec
mov
or
mov
mov
and
flds
dec
les
sbb
inc
jecxz
mov
ret
mov
push
pop
push
mov
inc
pop
jle
pop
imul
xor
test
xor
mov
es
inc
repnz
test
cli
js
jmp
mov
push
ret
add
scas
sbb
adc
or
push
jb
dec
inc
loope
lfs
inc
decl
cltd
enter
scas
xor
mov
xchg
sbb
cltd
mov
jg
adcb
jmp
push
push
adcl
arpl
in
inc
push
mov
testb
pop
stos
out
inc
lret
jb
dec
call
xor
lahf
lret
pop
mov
fsub
aas
push
sbb
pushf
jl
inc
rorl
xor
faddl
fdiv
mov
stos
mov
lahf
imul
mov
xor
and
rorb
sar
int
dec
mov
xchg
ficomps
xchg
sahf
pop
xor
adc
mov
adc
mov
adc
lcall
data16
loop
enter
cmc
xchg
jne
adc
mov
repz
out
test
push
enter
call
popf
sub
dec
inc
push
xchg
xchg
push
lods
sub
das
fdivr
ret
aaa
cld
in
mov
loopne
dec
aam
dec
xor
mov
test
clc
icebp
sbbl
jge
cmp
xor
gs
pushf
leave
lahf
and
jnp
aas
jmp
pop
sahf
dec
jg
sbb
or
xor
xchg
xor
dec
inc
jecxz
push
subl
outsb
xorl
loopne
aam
pop
loope
inc
jbe
dec
xchg
or
sub
jecxz
push
mov
out
mov
jecxz
movsl
fnsave
into
and
stos
shll
inc
pop
hlt
mov
push
out
mov
dec
mov
ret
cwtl
adc
jnp
or
movsb
mov
in
arpl
int
push
movb
stos
fiadds
xor
aam
mov
fidivrs
movsb
push
call
xchg
roll
inc
xchg
js
sub
mov
xchg
cmovo
mov
inc
test
cmp
das
xchg
out
pushf
loop
ret
xchg
test
sub
xor
mov
sbb
jl
sbb
aaa
popf
mov
jge
push
jge
mov
mov
sahf
imul
inc
or
fstp
test
lods
notl
sub
mov
outsl
mull
pop
js
pop
outsb
je
test
fiaddl
push
push
fsubl
and
pop
jae
arpl
jl
mov
jno
in
jne
mov
scas
cmp
mov
xchg
loopne
dec
mov
mov
xchg
fwait
mov
es
cmp
xchg
rcrl
jo
adc
sbb
sub
cs
xchg
sbb
cmp
shlb
jle
stos
pop
lcall
jle
add
xchg
mov
out
icebp
popa
jl
movsl
cmc
cmc
lret
addr16
je
cmpsb
aaa
inc
cwtl
xchg
arpl
add
ret
xor
es
addr16
ffreep
jnp
out
mov
ss
dec
xchg
les
pop
int
pop
and
dec
push
not
pop
mov
dec
sbb
popf
push
idivb
imul
outsb
pop
cwtl
insb
pop
dec
inc
leave
push
or
divb
xchg
mov
and
hlt
jbe
mov
pop
push
test
int3
sbb
bnd
mov
add
ds
mov
test
add
sub
cmp
pop
dec
xorb
mov
jae
ror
test
int
rcll
out
add
into
xchg
mov
dec
jp
fwait
int
cld
pusha
inc
psubd
dec
sub
dec
sub
add
sub
push
mov
push
jne
mov
aad
adc
jnp
dec
sbb
call
iret
in
data16
js
mov
mov
push
sahf
xchg
icebp
jo
sub
pop
xchg
and
cmp
mov
test
and
movsb
mov
pushf
xchg
inc
divb
push
mov
jecxz
xor
adc
in
xchg
loope
jg
fstp
xlat
lcall
inc
insb
mov
aaa
hlt
fsts
pop
jp
lods
loope
imul
sbb
add
jb
iret
xor
fadds
bound
pop
push
arpl
sub
mov
cmp
test
pop
jmp
jae
cmpsl
jge
push
adc
daa
inc
jbe
push
rclb
push
testl
je
sbb
ds
or
push
xlat
daa
aas
jp
lea
or
xchg
ret
mov
and
inc
jbe
jne
xor
add
mov
mov
pop
fildl
js
rolb
xor
test
shll
loop
jmp
and
aaa
push
in
fldcw
push
stos
pop
adc
lods
dec
and
dec
jl
jno
es
push
and
rolb
xlat
not
rclb
hlt
adc
data16
shlb
rcll
dec
adc
ror
dec
or
sbb
repz
out
sbb
and
insl
das
repnz
mov
mov
jnp
push
inc
mov
jecxz
jno
xchg
cmp
sbb
jecxz
pusha
and
mov
dec
cs
mov
repnz
push
je
fistps
cmp
repnz
xchg
inc
movsl
cmp
sbb
sbb
call
fdivr
jae
mov
push
in
cmpsb
add
push
imul
lret
or
sub
push
hlt
js,pn
and
sbb
pop
hlt
sbb
or
out
push
pop
enter
mov
jnp
cmp
pop
add
test
es
leave
jp
adc
sub
std
inc
sbb
inc
xlat
orb
dec
push
push
mov
dec
pop
fdivrl
pop
mov
mov
pop
mov
popf
shl
jmp
mov
fmuls
xor
mov
daa
xor
ja
sahf
into
outsl
jmp
push
jecxz
ret
inc
pop
sbb
lret
mov
xchg
repz
mov
mov
xor
or
inc
shlb
sti
sbb
popa
loop
push
or
mov
cli
mov
cmp
dec
cltd
js
test
popf
cmp
incl
xor
mov
add
xor
push
loopne
test
repnz
mov
pop
inc
pop
aaa
fwait
lret
movsl
push
sti
or
mov
push
dec
sbb
insb
mov
das
cmp
in
pop
mov
repz
cmpsl
out
jne
or
cli
mov
loopew
jne
xlat
jne
cmp
pop
dec
push
push
popa
sbb
lods
inc
jbe
in
int
aam
sub
js
sbb
push
or
pop
into
ret
addl
shr
mov
lods
mov
fists
push
mov
mov
repz
scas
mov
imul
sub
lds
sub
clc
mov
loope
cmp
push
stos
cwtl
lcall
shll
inc
stos
das
sbb
add
divb
cs
dec
cmp
jge
jb
cmpl
cmc
jg
movsl
push
inc
daa
jge
int
test
stc
add
jo
movb
jg
bswap
xchg
dec
mov
popa
fstpl
je
scas
add
jnp
push
jb
sub
push
jl
ja
xchg
arpl
sbb
ret
dec
cmp
push
push
lock
and
add
pushf
jbe
test
mov
adc
pop
mov
pusha
push
push
imulb
dec
clc
in
repz
cmc
mov
test
leave
and
inc
mov
ret
sub
push
xchg
rolb
fcomps
or
xchg
pop
cmp
scas
jecxz
mov
cld
xlat
fcmovbe
movsb
pop
aad
fs
pusha
pop
clc
sub
jge
adc
movsl
mov
inc
and
dec
int
bound
lcall
xlat
inc
test
loop
mov
mov
movsb
add
je
xchg
out
jo
bound
inc
leave
movsb
js
xchg
dec
loopne
jecxz
adc
loop
push
fstpl
xlat
std
sbb
sbb
test
idivb
imul
movl
inc
jecxz
inc
xchg
pop
inc
xor
gs
addr16
popa
add
xchg
or
jle
xor
mov
fbld
les
dec
mov
mov
popa
xor
xchg
jno
add
sub
add
stc
in
jne
adc
out
stos
and
dec
in
ss
push
pop
orl
gs
jns
test
stos
cmc
pop
sbb
adc
lds
imul
pop
add
enter
xlat
xchg
jns
out
or
out
jo
push
pop
lahf
inc
lea
hlt
mov
push
inc
cmpsb
add
cltd
sbb
mov
adc
in
sarb
clc
sti
cmpsl
cmp
xor
in
shll
jne
lcall
mov
sbb
jg
push
push
ss
stc
loope
xlat
inc
out
clc
lret
js
mov
loope
mov
xchg
ret
in
and
mov
sbb
imul
aad
push
jne
dec
mov
xchg
and
mov
test
cmp
sub
loop
xor
adc
fstl
xchg
shlb
cmp
cmp
movsb
xor
popf
cmc
and
sbb
frstor
int
dec
mov
jmp
mov
sub
icebp
bswap
pop
jg
xchg
lahf
popf
sbb
adc
sbb
stc
inc
test
adc
in
mov
inc
into
ret
repz
pop
inc
in
testl
and
cmc
cwtl
sarb
popa
and
push
add
jae
mov
pop
xor
out
mov
jo
enter
pop
dec
mov
fs
std
push
addl
div
fimull
std
andb
adc
cs
and
push
repz
add
adc
out
add
cltd
dec
ret
leave
xor
lds
leave
adc
xor
lods
sbb
add
stos
test
in
jne
insl
add
sbb
mov
in
or
es
dec
cmc
lods
push
fsubrl
cmp
cmp
mov
out
cld
mov
es
mov
add
pop
ds
mov
adc
in
sbb
and
pop
mov
mov
inc
jge
pushf
retw
xchg
cmp
je
and
pop
mov
xor
mov
cmp
add
pop
dec
pop
xchg
mov
jmp
lods
into
leave
mov
test
lret
push
test
dec
mov
lret
dec
push
and
adc
or
dec
and
sub
push
fidivrl
jo
pop
ss
int
push
jne
popl
orl
movl
xchg
mov
mov
fsts
mov
jge
mov
loop
popa
inc
or
negb
call
lock
and
xor
addr16
fs
mov
ljmp
pop
stc
fs
adc
icebp
insl
jb
mov
adc
loop
dec
in
aas
jns
rcl
loope
ret
dec
dec
and
daa
jg
mov
mov
cli
xchg
mov
cmp
mull
push
lahf
ds
mov
xor
je
cmp
jns
ja
cmpsl
std
popf
mov
jle
add
out
test
sbb
sti
dec
loop
sub
ret
jo
lcall
aas
sbb
fisttpl
sub
sbb
push
loope
mov
jl
push
fcoms
adc
sti
jns
xchg
lock
jnp
or
dec
inc
xor
jmp
xor
insl
movsl
jo
ss
stos
adc
xchg
test
mov
cmp
mov
xchg
dec
xchg
aam
or
push
dec
pop
jns
aad
jns
nop
push
out
jl
cmpsl
mov
lret
dec
cmp
ljmp
in
repnz
cmp
mov
adc
scas
fucomp
insb
data16
negb
fwait
cmpsl
mov
cmp
enter
arpl
cltd
pop
push
das
jp
or
sbb
popa
and
sub
sub
xchg
loope
xor
dec
mov
lea
popa
addr16
popf
sbb
lock
jno
jb
jge
or
pop
not
xor
je
out
cwtl
ja
sbb
ljmp
lret
cli
xor
and
mov
xchg
insl
repz
cmp
pop
aas
xor
repnz
mov
sub
add
cmp
add
fisttpl
dec
pop
pop
inc
mov
dec
cmp
lret
xchg
adc
xchg
mov
pop
mov
adc
jge
pop
fistpl
in
dec
push
movb
xchg
mov
xchg
punpckhwd
in
jbe
shr
sub
push
xchg
sub
push
xchg
outsb
mov
inc
push
xchg
rcll
push
fmuls
inc
jecxz
cmp
inc
pop
or
pop
xchg
or
hlt
fldcw
cmp
sahf
in
outsb
repz
xchg
in
add
insl
mov
fsub
push
je
movsb
sbb
mov
mov
fidivs
scas
ss
imul
hlt
ds
xchg
dec
dec
lods
call
jge,pn
inc
pop
daa
adc
dec
mov
inc
push
dec
mov
sub
leave
inc
xor
cwtl
bound
sbb
das
adc
push
movsl
push
ror
test
adc
movsb
mov
mov
mov
hlt
mov
pmulhuw
enter
sbbb
fdivrl
int
add
aam
cmc
adc
mov
test
adc
sbb
xchg
rorl
imul
jnp
pop
dec
inc
cltd
insb
or
or
mov
mov
int
mov
pop
or
pop
pop
orb
inc
pushf
test
inc
xor
es
push
sub
mov
fsts
lds
adc
dec
and
repnz
dec
cmp
cmp
xchg
mov
mov
das
shrb
loop
sti
test
sub
sbb
mov
loop
add
inc
outsb
inc
sub
pop
and
mov
int
mov
or
gs
shrb
xor
pushf
push
and
loop
scas
adc
shrb
xchg
sbb
xchg
jb
mov
mov
ror
xchg
in
scas
ljmp
mov
je
mov
sub
add
xchg
sti
ret
jae
pop
mov
lods
jle
and
cmp
cli
and
sbb
comiss
bound
pop
jl
cli
insl
test
lods
stos
pop
adc
jb
fstpl
inc
xor
fdivrl
jecxz
cli
pusha
stos
inc
into
adc
xlat
inc
pop
ja
repz
dec
inc
xor
mov
push
notb
repnz
fidivl
pop
jecxz
int3
movsb
sbb
stos
pop
shlb
push
push
xor
addl
shr
xchg
lock
popl
mov
pop
dec
add
gs
cltd
lods
iret
inc
dec
cmpsl
pop
fistpll
cmp
dec
fcomp
sub
xorl
nop
fsubl
adc
idivb
lea
mov
fisttpl
push
rclb
inc
into
push
fsubrs
cmp
inc
mov
lods
and
lock
push
push
out
ret
stc
mov
jb
add
sub
aam
mov
pushf
pop
clc
mov
test
pop
lds
sbb
popa
orb
sub
jb
xchg
cmp
icebp
lcall
frstor
inc
je
mov
iret
int
imul
popa
push
jl
and
loope
sbb
mov
dec
adc
or
pop
sarl
inc
xchg
movsl
mov
jb
adc
pop
fs
subl
and
mov
loope
mov
jg
cmpsl
mov
addr16
in
fs
jbe
enter
add
aam
xchg
jne
dec
rolb
inc
jae
fwait
dec
xor
out
pop
dec
clc
sub
scas
decb
inc
xchg
xor
sub
aas
mov
cmp
int3
pop
inc
push
and
lret
dec
mov
adc
or
pushf
and
daa
xor
xchg
sti
pop
repnz
fildll
bound
dec
cld
jmp
jg
inc
cld
mov
add
enter
mov
sub
outsb
popf
xor
nop
pop
cmp
daa
xchg
scas
or
xchg
fs
pop
cmp
dec
dec
ljmp
ror
jmp
stos
sub
fchs
mov
in
lcall
jno
in
rcrl
xchg
clc
jg
xchg
fsubrp
fwait
out
lock
xchg
xor
sbb
pushf
or
rcrl
outsb
insb
or
dec
std
fwait
mov
je
pushf
add
ja
mov
mov
fidivrl
jb
xchg
mov
cmpsl
pop
aas
call
shll
hlt
adcb
loopne
sub
repz
and
shrb
iret
push
into
or
lds
lcall
into
jne
divl
jecxz
mov
xchg
aad
mov
pushf
mov
or
and
mov
fnstenv
sbb
mov
fisubl
xchg
jp
mov
xor
in
mov
pop
inc
lret
sub
inc
dec
pop
sahf
mov
xor
ds
or
lock
xor
cmpsl
mov
mov
push
rcll
xor
xchg
mov
pop
mov
test
add
push
push
adc
lea
movl
pop
push
data16
scas
mov
bound
test
out
mov
pop
add
push
js
fcompl
lret
mov
jno
in
cli
fwait
pop
xorb
adc
push
repnz
sbb
fsub
popf
mov
adc
mov
jne,pn
mov
roll
mov
or
pop
std
mov
mov
cmpsb
jo
lods
cld
xor
hlt
mov
pop
roll
mov
lea
add
adc
vrcpps
xor
je
hlt
pop
test
sbb
lock
in
fsubrs
mov
jg
rolb
fwait
sahf
mov
jo
jns
xchg
stos
mov
and
xor
sbb
xor
jg
mov
push
push
pusha
cmp
adc
mov
pop
pushf
lret
lret
push
mov
push
aaa
popf
cmp
fildl
inc
mov
xlat
movsb
mov
push
test
mov
stc
sub
cmp
icebp
lret
lods
xorb
or
cmp
sub
jnp
addb
jle
mov
mov
movsb
push
jp
cmp
xor
mov
pop
sbb
pop
and
jnp
dec
jbe
or
jns
pusha
loopne
out
mov
sub
test
mov
sbb
push
pusha
cwtl
and
fwait
sti
repz
sub
push
loope
jns
cs
inc
insb
mov
out
lea
sub
fldpi
jle
jp
dec
lds
pop
dec
jo
cwtl
test
lcall
xor
pusha
xor
mov
nop
test
shlb
fisubl
and
test
mov
jnp
sbb
in
mov
inc
inc
js
and
mov
push
mov
xchg
mov
imul
fcoms
sahf
ret
fldln2
call
lcall
adc
inc
inc
inc
cmpl
insb
out
jo
ret
out
ret
pop
pushf
cwtl
lret
insb
mov
push
mulb
shr
into
inc
mov
shl
lock
mov
sub
popf
add
in
rcrb
stos
pop
push
out
out
cmp
andb
lea
int
imul
iret
push
sbb
shl
or
xor
stc
and
dec
mov
xlat
mov
xchg
call
cld
adc
repnz
jp
hlt
push
pop
xchg
lds
inc
rcll
fmuls
cs
into
imul
popf
outsl
shll
out
inc
xchg
icebp
mov
stc
pop
jne
call
enter
mov
mov
in
sub
add
mov
cmc
sub
mov
fmuls
int
lret
inc
mov
mov
xor
add
ds
lods
mov
jae
or
push
stos
iret
scas
jle
rorb
icebp
bound
arpl
arpl
repz
xchg
mov
fidivrl
jmp
sbb
rol
cmc
jg
xor
insb
clc
add
lea
jl
pop
or
fnstcw
cmpsb
xor
xchg
aas
mov
push
mov
adc
ret
decl
pusha
lcall
mov
jae
xor
pop
pop
mov
xchg
push
mov
xor
jge
cmpb
cmp
cmpsb
xchg
xor
rorl
js
adc
jae
es
ds
hlt
in
mov
xchg
loope
or
popa
stos
xchg
out
mov
dec
or
xor
mov
jecxz
jbe
xor
test
mov
pop
sbb
sti
push
fcompl
or
lods
nop
in
shl
adc
cs
adcb
std
data16
hlt
mov
jg
js
outsb
xor
popa
pusha
je
jno
pop
xor
cld
pop
shll
dec
aas
inc
dec
lock
daa
in
sbb
mov
frstor
adc
mov
sub
jne,pt
cmp
repnz
rorl
push
fsubr
jno
sub
xchg
pop
out
test
xor
jnp
xchg
push
roll
inc
filds
fs
push
out
cmp
pop
jnp
jo
jae
cmp
xchg
jg
mov
mov
xor
lea
xchg
leave
jbe
push
nop
mov
mov
mov
in
cmpl
push
push
bound
into
adc
aaa
jbe
fcoml
sbb
rol
push
push
jno
sub
pop
es
or
in
insl
cmc
cmp
js
cmp
shll
lock
test
push
mov
lods
es
push
dec
mov
xor
jb
mov
outsl
jae
xor
fwait
push
testb
sbb
cmp
mov
inc
fstpl
push
out
and
dec
cli
jns
repnz
out
jnp
and
sbb
je
push
decb
test
sbb
fimull
insb
fwait
inc
inc
adc
push
mov
pop
fdivs
fstps
popa
xor
dec
xor
dec
add
out
ret
icebp
faddp
rcr
jnp
xor
fisubl
andb
out
add
movsl
jge
ljmp
popf
push
stos
ja
fistl
sbb
stc
and
or
or
dec
add
mov
sbb
std
push
push
jmp
rorb
ss
xor
xchg
ret
cmp
pop
in
shl
insb
inc
outsl
ret
sbb
push
inc
xchg
jmp
pop
aaa
pop
and
add
sti
mov
jge
insl
cmp
mov
dec
movsb
dec
repnz
aam
div
or
stc
lods
aam
mov
jp
cmp
je
sbb
out
dec
bnd
cmp
fs
xchg
jle
jl
repnz
icebp
pop
mov
pop
jo
or
fstps
subl
mov
cltd
fistps
inc
xchg
aaa
jae
out
mov
dec
jle
pop
mov
jns
sti
mov
scas
lcall
sbb
inc
pop
arpl
push
jbe
mov
test
cltd
rcr
mov
mov
inc
push
pop
cmc
jne
push
stos
sbb
inc
and
jno
pop
loope
push
add
lret
test
in
pop
push
jl
push
xchg
cltd
push
imul
add
and
test
in
sub
jno
mov
adc
enter
jmp
cltd
mov
cmpsb
faddp
push
test
pop
mov
adc
lock
test
jno
cwtl
aam
xlat
or
scas
xchg
xor
sub
push
pusha
or
jecxz
sahf
and
out
jno
push
cwtl
mov
dec
loop
mov
gs
add
lds
pop
and
xor
pushl
call
pop
dec
test
xor
dec
fldenv
dec
maxps
xchg
lds
call
ror
xor
jo
mov
out
mov
out
stos
arpl
loope
pop
jne
jp
ss
aaa
xchg
push
pop
test
adc
fmuls
add
fadds
lea
add
shlb
scas
mov
xchg
cli
mov
cmp
iret
adcl
sub
movsl
add
mov
sbb
fsub
dec
dec
in
outsb
inc
jae
enter
mov
or
fistps
or
jg
dec
daa
mov
daa
lods
jns
mov
sbb
pop
pop
cmp
dec
out
or
fs
xchg
outsl
mov
cmp
test
mov
sub
into
mov
xchg
clc
pop
cmp
enter
push
jmp
shlb
sbb
popa
jae
in
sub
jmp
pop
inc
xchg
dec
and
sahf
push
mov
xchg
mov
int3
imul
push
inc
mov
sbb
xor
stos
daa
test
sub
cltd
loope
test
fnstcw
pop
mov
call
movsb
rorl
loop
roll
pop
sbb
xorl
arpl
cmp
jbe
mov
push
jp
sbb
mov
fcmove
jmp
or
cld
mov
std
add
fistl
cmpl
pop
ret
xchg
xor
das
shlb
xchg
icebp
jp
je
sub
insb
add
adc
pcmpgtb
jno
jmp
lret
in
scas
xchg
les
cmp
jp
mov
inc
leave
sbb
ret
les
add
jecxz
and
cmp
lds
aas
mov
xor
pop
xorb
sbb
idivl
inc
subl
jl
cld
leave
repz
pop
or
lret
xor
insb
ss
bswap
ret
and
or
aad
gs
fwait
pusha
push
pop
out
pusha
test
dec
xchg
shlb
jl
int3
adc
fcmovne
pop
dec
or
aaa
loop
mov
faddl
mov
sub
cmpsb
lret
and
mov
out
jb
orb
ljmp
mov
rorl
sbbl
and
jmp
lret
mov
mov
jmp
jne
fcompl
pop
sbb
mov
aaa
imul
sbb
lds
sub
cmc
cmpl
xchg
sbb
stc
hlt
push
jne
sbb
test
push
jl
repz
in
mov
push
xchg
xor
fwait
ljmp
loope
dec
push
fwait
pop
jl
into
xchg
daa
daa
push
ss
decl
jns
add
xchg
cmp
jmp
push
adc
pop
xor
mov
cld
aad
xchg
stos
xchg
push
std
cmp
xchg
add
nop
lds
in
gs
ret
das
pop
loope
pop
ficompl
addb
xchg
test
jl
shlb
addr16
add
push
stos
aas
fmuls
mov
add
lds
lods
aas
mov
ffree
iret
jnp
cmp
in
mov
dec
adc
add
in
pop
xchg
or
sbb
jl
test
insl
and
add
into
sbb
aaa
fsubrs
int
in
dec
xchg
ret
sbb
int
mov
adc
push
iret
shrl
sbb
sbb
push
mov
jns
iret
pop
js
lds
push
dec
pushf
cmp
out
dec
sbb
popa
dec
jp
into
stos
push
mov
out
pop
ss
push
fxch
cmp
sub
stc
sub
andl
and
fs
cmp
pusha
mov
adcl
sub
push
mov
adc
lods
outsl
daa
jns
ret
std
dec
test
cmp
and
mov
push
arpl
and
scas
xchg
xorb
adc
xor
clc
imul
cmp
lcall
shl
loop
rorl
jmp
xchg
div
push
inc
mov
sbb
lsl
fwait
pushf
mull
jno
mov
movsb
repnz
dec
pop
dec
ss
movsl
jg
xchg
jmp
push
push
cmpsb
es
bound
cwtl
decl
mov
inc
mov
lods
mov
enter
lret
test
andb
in
dec
xchg
in
dec
xchg
mov
lahf
outsl
mov
out
lds
adc
sbb
hlt
clc
xchg
dec
or
loope
std
mov
lcall
mov
mov
add
xchg
addr16
adc
adc
insl
fistpl
mov
or
inc
xchg
or
pop
or
sbb
dec
ret
mov
das
nop
dec
xchg
cmpsb
cmp
pop
adc
insb
cmp
dec
popa
mov
aas
adc
in
push
loope
out
lods
mov
mov
enter
lods
jno
inc
std
jne
test
dec
add
testl
out
out
loop
lret
and
or
cmp
and
cmp
mov
adc
bound
es
pop
popa
andb
and
dec
mov
push
add
cmp
aad
push
imul
lahf
into
adcb
shrb
rcrb
movsl
ljmp
push
sub
mov
fcoml
lcall
pop
bound
push
or
jbe
lcall
out
mov
insb
cs
fs
add
xchg
fmul
lret
xchg
jae
adc
repnz
mov
testb
lret
loope
movsb
lea
cmc
jge
dec
loope
adc
sti
pop
sbb
dec
scas
sbb
or
pusha
xchg
into
jb
and
lret
leave
xchg
mov
ljmp
std
frstor
adc
iret
push
cltd
rcll
cmp
adc
popf
xor
xor
xor
out
add
cmpsl
add
jmp
jg
inc
in
aas
imul
xor
dec
out
stos
sub
cwtl
and
cmp
push
jle
cmp
xlat
sarb
imul
and
dec
dec
push
pop
mov
in
cld
mov
jge
pushf
mov
mov
cmp
and
and
stos
sub
xchg
cmp
cltd
mov
aas
rcrb
add
fsub
jge
fcompl
push
out
adc
aas
cmp
mov
push
fildl
sub
jecxz
xor
aaa
daa
faddl
ja
shlb
mov
push
xchg
mov
jmp
arpl
shrl
insb
in
sbb
jno
sub
sub
adc
aad
jl
pop
sbb
shl
push
and
mov
cmp
lcall
rorl
mov
cmpsl
pop
imul
xchg
mov
cltd
adc
nop
ficoms
inc
and
lods
std
mov
loope
repz
mov
mov
cmp
mov
mov
sbb
mov
xor
fwait
jb
cmp
push
lahf
mov
sub
fcomp
xchg
rolb
bound
adc
sbb
and
inc
stos
cmp
leave
inc
xchg
and
addr16
insl
cmp
aas
sub
repnz
movsl
ja
popa
sub
xchg
push
cmp
jnp
aad
push
movsb
mov
data16
lahf
adc
std
jne
iret
mov
cmpsl
mov
mov
cmpsb
aaa
stc
cld
push
add
testl
scas
inc
dec
cmp
call
and
sub
adc
sub
inc
decb
pop
sub
daa
jg
or
mov
adc
dec
jne
std
mov
mov
addr16
loope
adc
adc
lock
jbe
xchg
mov
ret
negl
insl
icebp
jnp
lahf
sub
push
mov
or
sbb
jp
lock
cmp
and
jecxz
pop
outsb
cmp
je
xlat
outsl
add
jmp
jmp
cmpsb
lcall
daa
push
loopne
imul
cmp
inc
push
mov
enter
dec
cmp
xor
xchg
xor
inc
push
push
push
cmp
mov
push
xor
xlat
cmp
call
in
pop
mov
add
xchg
mov
ret
xor
pop
mov
das
lret
dec
add
push
add
shr
sbb
xchg
iret
fmuls
xchg
push
and
stos
jl
aaa
mov
mov
adc
ret
lods
out
cmpsb
xor
enter
mov
jo
push
mov
dec
mov
iret
or
ljmp
mov
mov
lea
push
clc
adc
pop
pop
jae
aam
mov
add
pop
stos
push
lret
adc
aad
insl
movsl
xor
loopne
ds
mov
mov
lret
sub
pop
push
xchg
inc
stos
mov
mov
mov
adc
jae
repnz
mov
arpl
test
std
ja
pop
jbe
xchg
sbb
or
pop
mov
mov
js
add
bound
adc
pushf
stos
insl
jnp
jg
mov
push
loopne
dec
cmpsb
and
fbld
test
bound
sub
dec
xor
mov
shrb
add
cmp
std
push
andl
or
dec
xchg
or
sbb
lahf
test
por
dec
and
enter
xor
add
cmp
sub
pop
sub
xchg
idivl
shl
sahf
cld
push
pushf
fs
int3
jp
test
nop
adc
pop
pop
mov
mov
push
xor
outsl
test
repz
add
loopne
mull
push
push
and
xor
dec
ror
mov
stc
mov
jb
pop
hlt
cmp
in
pop
push
sbb
jo
adc
arpl
outsb
adc
or
sarl
rcr
int3
nop
jnp
fistl
into
negl
xchg
jne
sub
xchg
sub
xor
push
jae
inc
jge
xchg
fwait
xchg
mov
mov
mov
mov
clc
rcr
in
xor
lahf
sub
jae
ss
decl
push
addr16
sub
fsts
gs
xchg
sbb
add
jg
sbb
push
into
push
ficomps
sbb
das
jmp
and
inc
fsubl
adc
pushf
orl
and
cwtl
push
adc
test
bound
imul
test
inc
dec
push
push
pusha
jg
xchg
jl
or
cmp
aad
push
mov
pop
test
mov
mov
push
sub
jmp
test
loope
push
cwtl
jo
cwtl
mov
sub
xor
xchg
ds
cmp
mov
leave
jp
inc
fiadds
jl
inc
es
mov
pop
adc
dec
ret
into
jno
pop
lcall
add
in
push
or
fwait
cmp
inc
test
es
xchg
xchg
gs
cmp
and
adc
mov
fldcw
decl
or
mov
imul
je
out
loopne
pushf
dec
test
adc
in
sub
outsb
arpl
jbe
outsb
inc
mov
in
fidivs
insl
sahf
and
and
pop
cmp
cmc
call
adc
test
or
pop
sub
out
mov
orl
cli
inc
cmp
gs
pop
lret
loop
pusha
cmc
lahf
adc
dec
or
inc
dec
rorb
mov
add
push
pop
jle
xlat
xor
cmp
mov
repz
ret
mov
xchg
adc
mov
hlt
xchg
movsl
sahf
and
xchg
adc
ja
fdivs
jnp
sti
mov
enter
cltd
push
jmp
fidivl
cmp
out
pop
mov
jns
iret
in
cli
dec
cmp
xchg
push
adc
xor
cli
add
cmc
repnz
fstl
popf
cmpl
pop
push
dec
mov
mov
popa
pop
js
dec
sub
stc
push
shrb
or
aas
inc
call
push
aas
add
xchg
ret
andl
jno
rcrl
mov
scas
loopne,pt
and
icebp
sbb
movsl
jo
lods
sahf
repnz
adc
test
rorb
decb
jecxz
sub
mov
adc
mov
mov
lea
dec
in
enter
add
insl
clc
add
dec
jge
jbe
sbb
in
icebp
into
std
outsb
lea
lcall
pop
push
pop
iret
xchg
fnstsw
jl
adc
adc
lahf
pop
sub
fmull
into
movsl
bound
cmpsb
iret
mov
aam
xor
push
cmp
cmp
ret
cli
das
or
mov
jecxz
mov
xor
test
fcmovbe
out
fwait
mov
mov
jns
xor
pop
dec
jl
xor
cli
pusha
mov
push
mov
lds
lock
push
mov
mov
arpl
jmp
cmp
inc
jecxz
push
roll
xor
movsb
es
insb
xor
and
push
daa
mov
bound
cmp
dec
jns
xor
add
ss
rcrb
pop
mov
ret
xchg
or
std
and
xor
scas
cmpsb
idivl
addb
gs
cmp
sbbl
inc
add
or
adc
pop
fistps
xor
or
jp
dec
cltd
xchg
orl
adc
add
push
xchg
test
imul
or
leave
fmuls
lods
daa
push
shrl
or
out
adc
jnp
rclb
sub
mov
sti
add
mov
mov
pop
mov
enter
mov
ds
rol
fwait
pop
mov
repz
das
sbb
cmpsl
in
push
popf
or
fisttpll
cmpl
sti
jne
add
sbb
push
inc
shrb
lods
subl
xchg
sbb
jg
jb
imul
in
jg
push
inc
lock
jae
adc
std
pop
mov
leave
mov
js
cmp
jg
inc
jb
xor
das
mov
adc
dec
fwait
sub
xchg
fcmovu
dec
loope
jb
scas
shlb
and
jo
cmpsl
sbb
mov
cmc
in
loop
clc
lahf
in
sbb
flds
js
dec
mov
mov
fisttps
mov
bound
dec
pop
mov
subl
cs
or
cmpsl
xor
nop
mov
cld
and
sub
lods
lret
repz
fwait
inc
push
sub
decb
pop
pop
add
fildll
cmc
add
inc
and
fisttps
push
es
jp
and
or
sub
loope
mov
hlt
rcll
out
rorl
push
test
arpl
jae
push
add
mov
int
mov
xchg
loope
adc
pop
es
jge
push
andl
push
xchg
inc
or
xchg
push
shrl
outsl
add
push
out
xchg
in
lds
lret
aam
lret
add
pop
mov
push
lods
mov
pop
cmpb
mov
sub
mov
cmpsb
into
das
cmp
mov
inc
arpl
xchg
bound
push
jle
cmp
jle
add
sbb
cmpsl
adc
jbe
mov
scas
adc
test
ss
jno
jl
jle
inc
data16
cmpsb
aad
icebp
movsb
int3
add
jecxz
movsl
cmp
or
add
adc
and
dec
js
loope
ds
xor
pop
dec
or
inc
mov
ret
pop
cld
pop
cmp
leave
and
clc
leave
fsubl
mov
push
in
or
cmp
pop
pop
cmp
data16
mov
xor
pusha
rcll
dec
dec
pop
jno
inc
stos
mov
jp
cmovo
fwait
mov
aaa
inc
je
hlt
pop
mov
mov
inc
dec
hlt
push
jb
mov
xor
adc
std
lods
imul
jae
mov
aas
adc
stc
jg
pop
adcl
insb
mov
jno
sub
call
push
lret
data16
xor
push
stos
pop
and
adc
mov
out
int
inc
xchg
xchg
mov
mov
sub
xor
scas
cmp
hlt
pop
lea
xlat
cli
adc
fs
lret
outsl
mov
leave
mov
mov
das
mov
repnz
pop
dec
jno
rep
testl
sar
vminsd
lods
cmpsl
jmp
add
lock
xchg
add
lds
dec
popa
fdivrl
adc
and
push
mov
push
lds
les
and
lcall
mov
add
add
pop
les
cmc
mov
leave
repnz
test
mov
rclb
das
and
in
or
mov
and
repnz
push
mov
adc
and
loopne
xchg
ss
or
push
mov
scas
push
cmp
mov
xchg
sbb
push
pop
loope
or
fiadds
jp
call
pop
xchg
and
mov
ja
or
inc
dec
cld
nop
inc
dec
jp
jno
mov
aas
std
sub
daa
mov
outsb
xor
fists
xchg
and
or
repz
pop
test
shll
dec
pop
test
jne
sub
add
bound
pop
addr16
or
outsb
sbb
pop
mov
daa
push
lods
xor
call
andb
jge
lock
sub
in
xchg
xlat
jno
xor
jb
pop
jns
dec
jbe
repz
fwait
mov
xchg
push
mov
pusha
test
adc
xorl
mov
ja
jnp
xchg
mov
jbe
and
clc
inc
or
or
jae
ds
add
inc
aam
loope
mov
orb
dec
xchg
push
not
frstor
out
out
mov
xchg
shl
cmp
mov
lret
sarb
push
sahf
pushf
mov
fucomp
test
push
repz
mov
dec
adc
inc
insl
call
leave
xor
dec
inc
xchg
pusha
call
cld
cmp
int
aam
lcall
or
mov
cs
test
dec
and
js
mov
pop
test
clc
jge
andl
repz
mov
mov
je
sbbb
or
andl
lock
and
or
imul
xchg
pop
addl
xchg
sti
fs
sbb
dec
jl
shl
and
cltd
jnp
out
dec
push
jge
rorl
mov
or
lds
clc
xor
sub
add
leave
leave
inc
cwtl
dec
jns
sub
xchg
bound
jne
fiaddl
enter
nop
adc
test
jne
inc
mov
leave
out
ja
mov
dec
es
jnp
jnp
mov
mov
lahf
popf
cmp
push
xchg
aam
sbb
cmp
dec
ss
aas
mov
cld
loop
fsubrs
divl
sub
lds
in
call
mov
shll
das
pop
fs
mov
and
mov
push
into
push
push
xchg
fnsave
xchg
and
and
sbb
push
and
jle
clc
test
aam
push
loopne
dec
adc
cmpl
cmp
push
mov
das
and
lret
call
fs
fistps
flds
sub
in
inc
out
dec
idivl
sbb
mov
pop
stos
rclb
repz
xchg
repz
mov
loop
pusha
cmp
movl
shrb
movsb
test
xchg
cmp
out
pop
or
jmp
cwtl
insb
adc
pop
cld
add
andl
addr16
push
xor
sti
je
scas
test
mov
ljmp
mov
leave
in
mov
in
mov
and
mov
mov
or
fnstcw
fsts
mov
add
rorb
mov
mov
or
inc
cmc
mov
scas
pop
sub
sahf
xchg
shl
sarl
sbb
xchg
cmc
xchg
cmp
in
sti
adc
shlb
fcom
jp
test
cltd
pusha
imull
add
xchg
test
aad
shl
test
mov
sub
daa
lea
mov
sti
jge
cmp
jge
or
sub
and
mov
pop
pop
outsb
fstpl
inc
xor
out
inc
pop
pop
jb
in
cmp
pop
int
aas
inc
sub
clc
pop
leave
xor
pop
mov
popa
pop
std
push
mov
popf
add
xchg
dec
and
ss
xor
push
in
out
pop
xchg
add
aad
movsbl
stos
addr16
std
lock
add
fwait
mov
jmp
nop
pop
movsl
lcall
mov
inc
and
xchg
push
out
cmp
jnp
repnz
push
push
ret
dec
pop
push
repnz
sarb
aaa
mov
notb
adc
lods
out
rcrl
out
dec
fstl
pop
in
mov
mov
repz
mov
movsl
leave
dec
jb
mov
push
into
xchg
xchg
mov
mov
mul
fcompl
dec
sahf
stc
adc
clc
das
mov
pop
add
lock
dec
sti
imul
mov
mov
lret
push
xor
inc
mov
hlt
or
outsb
popa
insl
inc
xor
nop
jno
mov
imul
adc
dec
fwait
or
ds
repz
mov
rcll
mov
out
jns
dec
inc
mov
mov
popf
inc
or
mov
mulb
aad
pop
jns
jbe
call
rorl
jnp
sbb
mov
inc
pop
insb
add
inc
rcrl
xchg
and
ja
cmp
mov
in
js
jp
push
aaa
inc
cmp
sub
push
fs
loope
sbb
lds
adcb
imul
mov
mov
sub
and
push
fcmovbe
insb
cmpb
sub
in
add
pop
add
mov
in
xchg
or
push
mov
mov
cld
popf
clc
xor
pop
rcrb
pop
push
imul
stos
outsb
loop
xchg
stos
les
inc
inc
lods
push
fcoml
stc
out
mov
pop
jo
pop
mov
popa
pop
fwait
adc
imulb
adc
in
xor
sbb
mov
es
mov
insl
sbb
scas
daa
int
scas
inc
cwtl
mov
ficoms
inc
push
sbb
jge
cmp
dec
pop
push
and
dec
xorl
out
lock
jmp
inc
and
mov
lret
aaa
mov
or
aaa
popf
adc
mov
pop
mov
addl
sbb
int3
jne
and
lret
jp
xchg
mov
sub
enter
es
pop
cltd
icebp
enter
cmpsl
or
jg
lret
ret
outsl
into
pop
sub
dec
push
pop
insb
fists
les
push
lods
inc
outsb
cmp
pop
stos
jle
popa
fmul
push
addr16
mov
inc
mov
or
mov
and
fsubrl
pop
mov
dec
outsb
and
push
xor
fwait
mov
jb
loop
inc
xor
cmc
cmp
cmp
mov
inc
xor
cmp
sti
and
dec
push
pushf
mov
mov
sti
and
pop
mov
pop
mov
fwait
sbb
test
pop
xadd
jg
mov
jne
mov
xchg
into
sbb
sbb
daa
stos
stos
arpl
jbe
shrb
push
ljmp
outsb
push
andb
adc
cmp
inc
mov
ds
loopne
push
sub
int3
and
jmp
cmpsb
mov
sbb
inc
mov
push
adc
notb
sbb
je
sarl
jl
insb
mov
int3
or
enter
cmp
loopne
pop
mov
pop
hlt
clc
xchg
cmpsb
mov
out
mov
sub
dec
inc
scas
cs
sub
jno
rolb
push
pop
or
xor
daa
fs
pop
jle
cmp
cmp
scas
imull
bnd
sub
into
sbb
js
loop
maxps
inc
aam
icebp
loopne
test
xor
jb
rorl
loopne
xor
adc
dec
mov
popf
push
xor
mov
sbb
clc
int3
mov
ljmp
pop
out
lahf
mov
push
sbb
jl
mov
jl
push
sub
inc
jno
cmp
jmp
pop
icebp
call
jne
mov
addr16
push
push
mov
shll
int3
lret
das
pop
loope
add
lds
dec
adc
dec
jmp
pop
pop
sbb
int
mov
int
rclb
cld
push
fwait
bnd
add
loopne
es
dec
pop
xchg
ficomps
adc
jecxz
jp
test
cmp
sti
cs
add
mov
sbb
pop
inc
iret
adc
inc
xlat
sub
sahf
and
mov
sub
out
imul
jo
scas
push
lret
inc
push
mov
sbb
mov
push
mov
std
xor
aad
xor
mov
leave
sbb
push
imul
cmpsb
xchg
or
aas
call
adc
lret
or
jle
mov
loop
jge
iret
push
jbe
sbb
fsubs
fisttpl
sbb
ret
pop
adc
jae
pop
sub
iret
sub
mov
dec
xchg
int
mov
mov
pop
loop
dec
mov
pop
add
shl
stos
sbb
pop
aaa
dec
popa
cmpsl
push
rol
add
inc
xor
daa
pop
pusha
enter
pop
filds
xor
mov
outsb
cwtl
scas
mov
push
sbb
into
push
mov
call
sub
repnz
aas
lahf
jmp
mov
xchg
jno
shrl
pop
test
jbe
xchg
out
dec
imulb
mov
jae
pop
test
pop
and
or
xchg
pop
ss
inc
jge
or
ss
outsl
insb
shll
pop
adc
scas
cmc
ret
fdiv
fiadds
iret
je
movsb
push
insl
mov
mov
daa
std
pop
cmpsb
inc
pop
int3
push
test
jbe
daa
mov
mov
sahf
call
pop
fildll
or
dec
jns
insl
insl
gs
sahf
pop
test
mov
scas
orl
xchg
mov
add
test
movsl
dec
xor
icebp
mov
inc
into
mov
shll
push
test
dec
movsb
push
push
out
jp
jne
dec
lret
cmpsl
inc
popf
jle
xchg
cltd
mov
nop
arpl
jnp
cmp
and
in
sub
sbb
cmp
cmp
dec
and
add
xchg
lods
daa
enter
js
cwtl
adc
repz
or
pop
push
add
xor
and
cmp
mov
pop
scas
sbb
faddl
jno
popa
cli
lock
push
inc
cmpl
imul
push
lea
popl
xor
bound
das
dec
mov
dec
xchg
and
jae
adc
in
cld
sub
hlt
push
fdivrs
or
mov
in
mov
xlat
jae
dec
pop
sub
sbb
dec
sbb
mov
popf
leave
xchg
lret
mov
add
jg
stos
scas
cmp
jge
dec
sub
fst
popf
sbb
xor
add
sub
and
inc
fildl
mov
ja
mov
add
xor
mov
cltd
movsl
mov
adcl
pop
fsubrs
sbb
fcmovb
rorb
mov
int3
sahf
out
outsb
xor
cwtl
repnz
stc
popl
mov
xor
in
repnz
inc
xor
mov
dec
aam
mov
dec
addr16
xchg
aad
loop
jno
push
sbb
mov
xor
inc
mov
cmpsl
in
pop
sub
dec
cmp
xorl
ficoml
out
lods
test
dec
in
jmp
popa
out
fwait
stos
mov
push
xchg
pop
dec
mov
loop
pop
hlt
sbb
cmpsb
repnz
pop
jmp
lahf
jl
xor
outsl
xor
jg
pop
cmc
mov
mov
cmp
cmc
call
pushf
sbb
push
sbb
cmpsb
cmc
add
sbb
adc
ret
pop
sbb
inc
fsub
xchg
leave
aam
imul
and
pop
out
pop
les
ss
mov
pop
sbb
push
pop
lret
jecxz
movsl
mov
and
nop
cmc
fidivs
les
add
cmpsb
inc
inc
jle
lret
xchg
fidivrl
mov
fcmovnbe
ret
or
outsl
push
test
pop
xor
dec
pop
insl
insb
pushf
aam
stc
lods
jl
adc
dec
push
pop
enter
test
xchg
adcb
mov
add
dec
imul
sbb
pop
sub
nop
pop
mov
xlat
sti
js
mov
fisubrl
outsb
add
pop
mov
inc
loopne
fisubrs
popf
sub
stos
xor
inc
pushf
or
push
aaa
sbb
mov
mov
mov
dec
add
pop
or
popf
cli
and
jle
sti
lret
push
xor
cmp
shl
nop
ror
testl
rcrb
in
in
lret
or
imulb
and
es
push
in
xchg
xlat
or
lret
test
incb
ret
shrb
in
push
in
jae
dec
sub
jae
cmp
xchg
ljmp
jmp
or
loop
aam
ljmp
out
psraw
mov
xchg
cs
mov
pop
adc
movsb
les
ja
das
adcl
adc
aad
stos
outsb
jmp
adc
iret
stc
mov
out
pusha
add
mov
add
cld
xchg
repnz
outsl
xchg
push
bound
lret
xchg
cmpsb
xor
mov
inc
call
xlat
adc
push
movsb
aam
stos
out
insb
cltd
sub
in
rcl
push
pushw
mov
popf
jnp
pop
insb
shlb
inc
mov
test
ljmp
fldcw
fs
pop
push
loope
addr16
add
addr16
popa
inc
xor
insb
inc
data16
push
ror
and
lcall
int3
mov
ss
mov
jle
inc
rorl
and
add
dec
or
jno
and
push
or
jmp
fstps
cmc
jnp
sbb
rcll
cmp
imul
nop
and
sbb
mov
mov
mov
test
mov
sbb
sub
xor
mov
xchg
je
cmpsb
in
or
push
aam
int
jp
out
int3
iret
lods
cmp
clc
stc
and
dec
mov
lds
inc
or
and
mov
or
mov
push
lods
push
adc
cld
push
and
repz
loopne
mov
xchg
pusha
sbb
nop
sbb
push
mov
dec
mov
xorl
lcall
xchg
scas
es
in
ret
mov
hlt
push
push
out
mov
bound
pop
mov
ficoms
jae
fisubl
aad
add
in
imul
test
adc
push
les
cmovs
icebp
pop
inc
add
cmp
int
mov
leave
xor
adc
mov
pop
adc
fcoml
sti
jle
push
jle
fisubl
pop
adc
test
add
pushf
push
sahf
pop
in
int3
aad
pop
notb
or
jge,pt
mov
or
inc
inc
jne,pn
out
mov
inc
dec
or
lahf
imul
cmp
mov
fnstenv
sbb
xchg
and
jnp
pop
mov
mov
add
cmc
mov
mov
loope
push
cmpsl
adc
movsl
jmp
push
loopne
xlat
or
ja
xor
sub
shrb
es
jnp
insb
inc
unpckhps
scas
packssdw
sbb
cmp
lret
mov
fnstcw
sbb
out
adc
sub
nop
and
xchg
xchg
pop
cmp
and
xchg
jg
int
jmp
inc
gs
dec
mov
and
xor
scas
std
push
int3
mov
xchg
loop
cltd
test
mov
stc
push
fsubrs
loopne
rorl
loop
sar
lcall
int3
sahf
dec
pop
outsl
xchg
aaa
loop
sti
xchg
xchg
push
scas
mov
mov
andb
cmpb
cld
sub
and
add
push
sbbl
mov
cmp
pusha
mov
push
push
loopne
push
sbb
mov
push
into
xor
loopne
stos
adc
scas
xor
fmull
cmpsb
xor
jbe
ds
xor
lret
mov
daa
xchg
outsb
xchg
xorl
or
jne
int
loop
lahf
xchg
fcomps
in
jl
outsb
or
insl
push
mov
fidivrs
lea
movsb
dec
xor
in
iret
test
lret
stos
addr16
inc
out
ljmp
add
inc
adc
mov
leave
push
adc
sahf
and
test
inc
das
cmp
xor
jp
imul
inc
mov
out
lock
pop
push
push
cltd
ret
test
push
fucomip
enter
shl
sbb
rcrb
adc
lods
fcompl
leave
push
mov
sbb
insb
loop
hlt
or
xchg
cmp
add
mov
adc
pop
loope
stc
inc
adc
mov
roll
shlb
jle
jge
call
neg
leave
aad
dec
lock
cmp
add
cmp
jb
or
mov
pop
push
hlt
push
cmpsb
imul
inc
or
add
into
cmpl
lock
xchg
fiaddl
pop
jbe
std
hlt
imulb
pop
bound
daa
lret
mov
push
popa
sub
xchg
lock
ret
dec
hlt
dec
add
pop
ror
nop
xor
xchg
enter
dec
dec
and
adc
testl
jp
xchg
sbb
imul
cli
sub
mov
ja
mov
ja
cmp
out
jbe
lahf
iret
cmp
push
int3
mov
gs
mov
jbe
cmpsl
mov
pop
icebp
inc
lods
push
call
inc
sbb
push
mov
shrb
adc
adcl
in
stos
ds
push
lahf
stc
mov
mov
xor
jnp
xor
loope
xor
and
lods
cmp
iret
jecxz
pop
mov
mov
mov
popa
cmpsl
enter
sub
fs
int
lea
fcompl
mov
jg
cwtl
imul
adc
orl
shrl
bound
cld
insb
xchg
out
inc
loope
enter
imul
sbb
fadds
mov
pop
cmp
add
out
movsl
mov
out
pop
and
and
mov
andb
jns
incb
mov
or
cli
ss
xor
sub
nop
andb
dec
outsb
mov
lcall
icebp
sub
addr16
stos
movl
ds
clc
rcll
iret
fiaddl
gs
mov
and
insb
test
fistpll
fisttps
mov
mov
rolb
push
sbbb
jg
fs
sbbb
in
adc
fs
sbbb
pop
xor
push
imulb
pop
mov
pop
dec
shll
cmc
mov
loopne
dec
push
mov
scas
mov
test
int3
pusha
and
lahf
push
dec
les
into
aas
ja
fcom
lods
sub
adc
popa
and
iret
sbbb
jbe
sbb
and
mov
lock
cmc
arpl
popf
push
add
inc
into
mov
and
sbbl
sbb
shlb
in
dec
mov
and
popa
mov
jge
sub
push
add
xchg
scas
test
xor
outsl
out
or
stos
cmpsl
ljmp
pop
popf
adc
cmp
ja
dec
sub
addps
popf
pushf
jno
int3
pop
sbb
xchg
push
cld
inc
push
add
sahf
adcl
popa
xor
lahf
js
rcl
movsb
imul
push
aaa
int3
mov
add
pop
cmp
lock
xchg
push
push
lret
cmp
je
aaa
call
fldcw
pop
mov
push
sarl
movsl
pop
ret
sahf
pop
daa
adc
jl
fcoms
cmp
adc
push
inc
ss
xor
pop
xor
cmp
mov
aad
push
cwtl
sahf
mov
mov
js
pop
and
sti
mov
dec
jg
movsb
fs
lds
out
xor
stos
push
inc
mov
mov
mov
mov
cld
cltd
add
mov
pop
and
insb
xchg
test
fldt
fisubrl
push
push
inc
lret
out
enter
push
out
xchg
fdivrs
int
sahf
in
xchg
xchg
jae
cmp
out
test
mov
outsb
jle
mov
dec
sbbb
je
inc
xchg
or
jne
ja
inc
cmp
mov
fadds
out
je
pop
test
sti
cmp
rol
xlat
push
rcll
hlt
cmp
orb
push
lret
lds
daa
inc
xchg
fisubs
out
pop
xor
pushf
pusha
xor
jg
shr
ja
fdivl
pop
and
mov
cmp
sbb
mov
adc
xor
cmpsl
lods
andl
or
sar
mov
lods
and
leave
cwtl
aaa
cmp
lcall
lret
mov
leave
in
xlat
inc
test
mov
dec
into
out
lcall
in
cmp
mov
push
inc
bnd
adc
sbb
pop
es
dec
pop
pop
std
out
enter
sub
and
repnz
inc
popa
jl
sbb
or
and
insb
mov
or
cli
dec
inc
call
xchg
out
and
xor
test
dec
or
xchg
or
inc
fsubs
stos
je
sub
sbb
push
orb
jo
push
test
mov
arpl
xlat
and
es
pushw
mov
xchg
shrl
push
pop
negl
dec
cmp
scas
fistl
pop
adc
add
call
push
scas
mov
sbb
je
roll
push
rolb
jp
sbb
das
int3
fistpl
jge
cmpsl
jge
daa
cmp
and
mov
loop
jge
out
adc
lds
push
push
jge
ret
dec
sbb
jae
adc
mov
fisttps
orl
mov
arpl
mov
icebp
ret
out
arpl
in
xor
pop
hlt
pop
jg
movsl
sub
xor
roll
xchg
push
lods
pop
bound
ljmp
dec
mov
mov
push
cmc
xor
dec
in
pop
jle
xchg
sub
lods
adcb
mov
add
mov
dec
jecxz
in
aam
mov
movsl
daa
stos
cmp
pop
jp
adc
push
ljmp
aas
nop
cmp
cld
das
outsl
repz
cltd
mov
pop
fadds
aad
fmull
jnp
js
adc
mov
lods
mov
mov
lret
dec
push
cmpsb
push
sub
mov
repnz
adc
add
nop
sbb
sahf
in
adc
leave
xchg
std
out
test
in
out
lock
clc
push
subl
add
cmp
scas
or
mov
sbb
sub
pushf
or
scas
sub
lods
insb
in
and
es
in
lcall
lods
pop
push
and
mov
out
inc
mov
ret
cmpsb
inc
sub
fs
pop
les
xchg
cs
insb
jp
lahf
out
out
cld
xor
pop
clc
sbb
add
aaa
sbb
notb
pop
mov
pushf
sbb
aad
inc
mov
xchg
sbb
or
lock
push
xchg
adc
outsb
divb
cltd
mov
aaa
cmpsb
rolb
je
mov
and
push
lods
xor
ds
pushf
into
xor
loopne
jnp
pop
push
mov
in
aas
ja
outsb
sbb
subl
inc
or
pushf
or
jno
cmp
lret
sbb
out
pop
or
push
jo
lret
test
movsl
test
adc
push
pop
jne
jmp
xchg
lock
jp
mov
in
add
jae
xchg
jae
dec
adc
sbb
cmc
repnz
xor
loopne
sub
mov
insl
inc
add
adc
mov
xchg
and
mov
sub
push
jnp
in
in
mov
fcmovnu
fistpl
xor
mov
imul
adc
or
mov
push
enter
loope
xor
andnps
pushf
and
in
movsl
aaa
mov
jecxz
mov
mov
movsb
mov
stos
xor
cmp
push
clc
sbb
sub
dec
in
pop
cs
lods
add
out
sti
adc
or
xor
into
jno
lock
xor
shrl
xor
addr16
mov
push
sbb
sbb
pop
cmp
call
or
pop
push
xor
sbb
cmp
push
mov
icebp
mull
mov
lock
jo
ja
push
fsin
jl
jmp
ss
sbb
mov
enter
loopne
in
pop
dec
fistl
inc
adc
repz
cmp
bound
adc
leave
call
xchg
dec
lret
mov
rorb
mov
jp
xchg
mov
aas
push
or
es
dec
mov
mov
das
xchg
punpckhwd
jb
inc
clc
in
pop
inc
push
sub
int3
mov
jg
aad
dec
outsb
sub
dec
mov
in
pop
leave
inc
xchg
test
push
test
jae
push
sub
jbe
adc
xchg
push
in
jle
xchg
cwtl
mov
xchg
shll
mov
push
in
sar
addb
push
xchg
push
ja
pushf
add
jae
pop
lods
cli
xchg
ljmp
shlb
stos
jl
cmp
jp
outsl
jp
leave
cmpsl
scas
sahf
lahf
adc
push
xlat
sbb
xor
lret
inc
jmp
dec
cs
or
mov
movsbl
cmp
mov
std
sbb
jns
das
xchg
addr16
js
out
iret
out
mov
fwait
cmp
outsl
in
fwait
shll
cmpb
jnp
dec
and
xor
sbb
insl
lcall
imul
xchg
inc
stc
dec
cmp
out
call
or
push
rclb
pop
daa
jle
push
sub
sbb
mov
pop
jne
rol
lods
sub
addr16
addr16
dec
int3
pop
and
rol
mov
repnz
loopne
imul
arpl
ljmp
push
mov
and
push
mov
xor
mov
ljmp
sbb
jmp
sti
sub
sahf
fsubl
mov
push
lds
push
or
sbb
push
mov
leave
push
jle
insl
jo
shrb
fcmovb
nop
jl
jge
push
std
adc
loop
js
lods
fstpt
daa
inc
dec
insl
mov
fsubrs
jge
xor
mov
lret
outsl
test
vorps
and
stc
les
pop
xor
out
dec
mov
dec
subl
and
adc
out
lods
fiadds
xchg
in
je
dec
lods
stc
iret
cwtl
insl
insb
xor
jne
lret
and
aaa
in
popa
and
cmc
cmpl
mov
std
fisubrl
xor
lret
jg
mov
mov
sub
jns
es
inc
movsl
adc
cmp
xchg
adc
and
out
and
jb
and
xchg
mov
mov
or
adc
add
cmp
pop
sbb
int3
jecxz
sub
mov
add
push
cltd
mov
popf
leave
adc
sahf
in
clc
aad
sbb
addb
sbb
jns
sub
add
js
mov
add
lock
jle
test
cmpl
jmp
push
dec
jns
clc
sub
das
or
push
test
sti
lods
outsb
and
sub
push
daa
sub
pop
sbb
dec
cwtl
push
sbb
daa
add
fbld
sbbb
sbb
pop
xor
dec
bound
clc
fildll
idiv
mov
fs
ficoms
mov
lret
pop
lds
fiadds
andl
xchg
jbe
jne
jg
shll
jnp
mov
push
insb
jl
out
sub
mov
xchg
mov
icebp
adc
negb
add
jbe
in
mov
testb
mov
xor
push
andl
adc
lock
inc
cld
cmpsl
xchg
subl
movb
pop
adc
cmp
dec
aaa
insb
pusha
push
sbb
xor
shll
adc
dec
aam
pop
jnp
cmp
lock
rol
xor
mov
movsb
jno
pusha
jne
sbb
xchg
stc
pop
ds
or
fisttpll
nop
mov
iret
push
imul
inc
fiadds
sti
loop
dec
xlat
mov
add
lods
gs
inc
stos
popf
push
call
std
lods
sub
adc
dec
js
aad
and
lahf
push
add
fldt
fwait
xor
adc
pop
lahf
and
or
stos
pop
mov
mov
stos
mov
sbb
mov
pop
mov
jmp
shr
insl
js
inc
mov
add
pop
adc
jno
jns
in
int
jecxz
push
ret
faddl
mov
lahf
jmp
inc
or
cmc
sub
add
dec
push
fcoms
cwtl
push
inc
xchg
in
leave
mov
push
pop
rorl
andb
and
sbbl
addb
push
stc
push
lret
out
movsl
nop
xor
inc
popa
push
pushf
mov
dec
mov
aas
mov
ret
xchg
adc
inc
das
sarb
pop
sub
jle
ds
sub
ds
imul
sahf
xchg
call
test
pop
lcall
cmp
pop
int3
std
je
dec
adc
cmpl
push
incl
aas
aas
cmp
or
mov
imul
mov
das
inc
daa
mov
cmpsb
test
loopne
mov
cmp
sbb
cmp
outsb
and
push
jmp
mov
pop
xor
dec
dec
add
jl
imul
lret
stc
push
test
shll
sbb
sbb
cwtl
sub
aam
and
rorb
xchg
jmp
cltd
push
dec
push
jmp
nop
sbb
cli
lods
mov
gs
pop
xchg
fs
mov
jp
loop
outsb
ret
loope
data16
filds
push
push
lahf
sbb
shll
test
in
sbb
repnz
loopne
adc
mov
mov
mov
hlt
cwtl
mov
lock
sub
mov
arpl
lds
lcall
cmp
push
mov
mov
pop
xor
adc
dec
inc
movsb
mov
test
mov
cwtl
dec
out
shlb
xor
mov
cmc
jmp
out
pop
imul
pop
mov
mov
pop
std
cmp
lret
lcall
fdivl
and
outsl
mov
pop
incl
inc
mov
add
int3
pop
in
fcomps
adc
adc
jle
xor
loop
jp
sbb
es
cwtl
aam
aad
outsb
jge
pop
push
std
lea
call
aam
and
mov
iret
jbe
into
js
adc
adc
outsb
xor
sahf
fbld
cltd
in
cmc
imul
jecxz
dec
out
sub
addl
xor
push
out
or
ja
inc
lcall
cmp
mov
gs
push
mov
addl
jg
adc
aas
dec
sub
inc
push
mov
mov
jge
xchg
test
dec
mov
test
mov
lods
cmp
dec
jne
out
lds
rclb
test
and
adc
shlb
xchg
enter
dec
dec
push
pop
cli
ja
fs
sub
not
and
inc
ds
or
fistpll
mov
daa
inc
pop
std
xchg
ret
pop
test
insb
aam
mov
add
fstps
push
das
inc
out
mull
in
push
sub
pushf
jg
xchg
lret
xchg
inc
push
les
test
push
xchg
lock
jl
lea
dec
notl
ficoms
mov
cmp
dec
xchg
les
rcll
cwtl
jp
fisttpl
stos
aad
rcll
mov
jle
pushf
cli
in
cmp
out
adc
dec
das
xchg
and
mov
push
push
xchg
ljmp
pop
jns
mov
daa
and
bound
add
mov
xor
xor
add
test
dec
add
jne
jns
shrl
mov
inc
icebp
adc
jecxz
push
es
dec
xor
add
xor
push
loopne
je
mov
or
mov
pusha
jb
insl
in
push
iret
outsl
adc
inc
das
xchg
add
hlt
scas
loope
push
out
shll
ss
sbb
sbb
inc
andl
aad
xchg
inc
les
pop
or
add
inc
nop
mov
enter
mov
ret
rcrb
shll
pusha
fisttpll
stc
bound
jae
movsl
imul
inc
jb
xorl
xor
adc
cmp
mov
test
push
jns
xor
test
mov
scas
outsb
ret
mov
fildll
pop
mov
jns
pop
jmp
sub
or
stos
adc
les
dec
mov
mov
cmpsb
pop
clc
mov
loop
jnp
pop
adc
sahf
sub
lods
inc
xchg
sarl
jl
push
addr16
or
pop
fs
clc
mov
xor
xchg
push
add
fisubrs
jge
bound
and
ss
aam
loope
jg
inc
ret
iret
std
sbbb
and
pop
mov
data16
pop
cmpsb
cmpsb
cwtl
loop
insl
clc
inc
lock
jle
fiadds
fiaddl
addl
mov
jl
jbe
jle
jb
xlat
mov
aad
in
stc
dec
jo
jb
dec
std
cmpsb
int
sub
mov
push
mov
and
lret
lret
gs
pop
mov
push
scas
add
add
movsb
mov
push
pop
arpl
cmp
add
cmp
xchg
add
mov
test
sbb
insb
sub
jnp
sub
lea
cwtl
pushf
es
dec
test
stos
mov
sub
inc
pop
add
loope
bound
negb
pusha
insw
stc
mov
loopne
xor
pop
mov
in
push
out
add
rcrb
out
jmp
sbb
add
jno
test
adc
out
fildll
pop
js
out
push
xlat
sbb
pop
repz
xor
gs
shl
xor
sub
rcl
jge
xor
sahf
dec
pop
sbb
dec
lds
cmp
insl
xor
pop
pop
dec
stos
sub
push
jae
pop
into
pop
pop
mov
add
lods
pusha
jl
or
push
pop
mov
sbb
fadds
icebp
repz
fldcw
add
pop
cld
push
lcall
jecxz
iret
xor
mov
sti
iret
add
inc
test
mov
outsb
add
cmpsb
mov
fsubrl
jecxz
cli
std
mov
dec
pop
insb
shlb
daa
outsl
fsubrl
add
rorb
mov
mov
inc
les
and
push
stos
jbe
and
scas
hlt
movsb
lods
jle
cld
push
das
push
inc
in
jmp
sub
xchg
dec
ret
cmp
sbb
mov
out
ja
test
push
aaa
dec
dec
imul
pop
mov
mov
mov
enter
mov
je
mov
pop
jmp
fisubl
push
pop
push
mov
out
adc
loope
add
outsb
outsb
xchg
pop
pop
imul
inc
jno
and
push
js
pop
xlat
jae
das
cltd
push
pop
pop
insb
in
popa
movsb
push
stc
adc
cmpsb
sbb
mov
xor
inc
dec
cli
es
test
movsb
rcrb
movmskps
and
pusha
mov
push
test
mov
in
pop
hlt
loope
dec
aad
push
inc
inc
jge
jmp
jg
cltd
ret
push
adc
xchg
inc
fdivr
loope
js
inc
test
inc
or
cmp
mov
fstps
lods
adc
ja
repz
cmp
test
mov
mov
mov
bound
adc
jne
out
test
jmp
cmp
adc
mov
je
and
or
xor
js
shlb
pop
pop
or
rol
cmp
jo
subl
dec
cli
fidivs
jl
testb
mov
or
xor
xor
outsl
cmpsl
push
mov
inc
or
sub
jae
test
inc
jle
rorl
inc
pop
repnz
pop
mov
lret
mov
cli
mov
push
xchg
daa
stc
fs
dec
sar
push
fs
inc
push
nop
sbb
ja,pn
or
and
jmp
dec
in
test
inc
imulb
ds
into
sbbb
mov
lcall
aaa
in
inc
stc
cli
add
std
rcl
and
lcall
cmp
and
push
jo
inc
lret
xchg
add
rcrb
outsb
xchg
pop
ficoms
lret
mov
jne
dec
sbb
or
cmp
pop
pop
cmpsb
add
mov
out
xor
and
add
clc
dec
sub
mov
and
imul
aas
lea
test
xor
shl
nop
jle
or
mov
sub
and
fnstcw
jno
lock
imul
adc
dec
sbb
or
sti
test
xor
aam
mov
call
adc
jg
lds
cmp
mov
das
repnz
js
inc
mov
xchg
rcrl
dec
leave
push
scas
push
fsubrs
sbb
daa
push
popf
ret
cs
push
out
fwait
outsb
lds
mov
or
and
mov
push
sbb
sbb
sbbb
push
lea
pop
pop
push
popf
pop
rcll
mov
mov
div
pop
fiaddl
xorb
lock
aas
outsb
stc
xor
pop
jg
ljmp
iret
mov
in
cmp
das
xor
movsl
ret
mov
pop
jecxz
inc
jecxz
sbb
pop
push
push
jne
dec
lea
mov
jns
mov
fistpl
or
cmpsb
outsl
std
adcl
dec
dec
xchg
in
sbb
iret
mov
mov
into
and
fbstp
les
mov
sar
jg
cwtl
jl
fdivr
pop
imul
loopne
sub
les
cmp
cmpsl
sub
push
in
popa
and
lock
lret
mov
add
ds
sarb
mov
pop
pop
mov
jne
repz
les
fs
decl
test
cmc
aam
out
xlat
orb
addl
cmp
insl
xchg
mov
mov
shrb
mov
or
dec
sbb
xchg
jo
pop
ret
add
mov
and
pop
push
and
not
aad
xor
test
mov
jecxz
push
mov
das
mov
sbb
in
dec
pop
xor
or
addl
mov
mov
pushf
clc
inc
mov
call
test
mov
lcall
mov
and
and
jne
test
dec
sbb
jbe
pop
in
sub
addl
div
lods
test
loope
jmp
sbb
les
mov
mov
mov
cmpsb
rclb
adc
mov
rolb
into
jae
sarb
int3
fcomps
add
loope
jns
adc
mov
adc
dec
nop
ss
sbb
frstor
subb
jmp
and
fs
cs
cltd
cmpsl
pop
addr16
cmpsb
sti
fs
gs
lea
jg
test
xchg
mov
mov
adc
fsincos
jne
decl
pop
cwtl
mov
pop
scas
data16
dec
xor
xor
lcall
lahf
stos
pop
push
jmp
pusha
mov
rcll
add
enter
daa
xchg
out
dec
pop
cltd
inc
adc
inc
cmpl
xchg
inc
jno
js
pushf
lods
ret
mov
sbb
decb
stos
loope
mov
mov
movsl
inc
dec
and
shll
pop
idivb
loop
sub
repz
sbb
add
jl
or
idivb
push
mov
jns
mov
cli
int3
stos
sub
mov
pop
js
push
imul
mov
adc
sub
push
ds
bound
and
repnz
out
js
mov
scas
push
fstpt
and
sbb
jmp
dec
and
mov
pop
bound
jnp
jmp
cmc
mov
js
jge
aas
mov
mov
add
cmpl
test
jl
mov
mov
lcall
adcl
stc
jb
jle
dec
pushf
into
pushf
in
cmp
aam
outsl
addr16
aad
dec
adc
movsl
push
push
sbb
inc
scas
sub
sarb
xor
add
fldcw
imul
movsb
mov
fwait
mov
out
shll
cmp
mov
hlt
pop
call
inc
push
dec
lods
dec
xorb
jecxz
sub
cmp
sub
mov
enter
incl
minps
xchg
fiaddl
mov
fldl
add
dec
jo
inc
mov
cmp
shr
mov
lds
push
lret
mov
movsl
jbe
xchg
xor
dec
outsl
popf
mov
sub
or
rolb
or
jne
add
rolb
stos
xor
mov
cmp
ficompl
xor
cmp
and
gs
jo
adc
je
jp
sub
adc
xchg
leave
std
imul
push
stos
test
dec
xchg
and
xor
push
popa
inc
pop
dec
or
mov
cwtl
sbb
pop
add
cmp
push
and
fdivl
mov
xchg
add
mov
jnp
push
lock
iret
inc
xlat
sbb
bound
dec
rcrl
enter
jnp
sub
pusha
movsl
les
jno
in
mov
lret
add
dec
mov
pop
inc
out
in
sbb
or
jecxz
jnp
jecxz
add
pusha
outsl
add
adc
arpl
popa
fbld
mov
adc
adc
out
mov
xchg
jnp
into
mov
aas
xor
cmp
mov
and
add
cli
jne
fidivs
pop
xchg
cmp
cmp
lock
div
mov
scas
xchg
movsl
mov
pushf
pushf
cmp
mov
jecxz
scas
aaa
and
mov
or
mov
xor
jae
jne
ficoml
or
push
mov
stos
insb
dec
cmp
incl
sbb
xchg
scas
leave
lds
jp
ret
jle
lods
and
cmp
xchg
ss
jno
xor
dec
test
pop
jo
test
imul
bnd
pop
jb
stos
cmp
mov
aad
data16
addr16
or
cmp
mov
push
test
adc
js,pn
arpl
and
pop
cmpb
xchg
dec
cmpsl
lods
test
add
jl
adc
lock
clc
rcrb
sbb
ficoml
sub
xor
xchg
fisttps
jbe
popa
test
popf
lock
arpl
mov
xchg
jo
jae
push
popa
idivl
out
iret
mov
pop
cmpb
or
scas
call
pop
sub
stos
ficomps
in
ljmp
test
mov
mov
push
icebp
jnp
xchg
push
xor
cltd
repz
lea
mov
or
add
inc
jp
sub
and
lcall
pop
mov
sub
jle
mov
cmpl
loope
bound
rolb
jl
mulb
xchg
pop
ret
inc
addr16
icebp
cmc
adc
pushf
cmp
xchg
pop
out
loopne
bound
push
dec
lcall
movsb
sbb
xchg
testb
cmp
mov
xlat
pusha
mov
cmp
leave
mov
adc
cmp
nop
je
dec
out
pop
lods
push
push
cmp
inc
and
das
insb
ljmp
mov
loope
test
out
out
and
aas
inc
add
sbb
gs
hlt
sbb
adc
out
stc
mov
movsb
mov
scas
sahf
lret
sbbb
mov
lods
test
das
sub
inc
mov
out
mov
int
mov
pop
addr16
outsb
pop
jp
stc
out
xorb
lahf
lcall
cld
packsswb
jle
xchg
mov
and
cmc
jnp
dec
sub
or
into
mov
repz
outsl
xor
mov
leave
jbe
push
mov
outsb
dec
add
inc
mov
cs
les
lock
fists
scas
int3
or
mov
shrb
mov
fdivl
jno
or
int3
les
dec
jle
push
jne
mov
adc
xor
pop
and
pop
pop
hlt
mov
mov
test
scas
sub
or
adc
in
data16
roll
jl
jg
pop
ds
shrb
mov
sub
aam
jb
xlat
jge
jecxz
xchg
lock
cmp
andl
jae
test
and
inc
por
in
mov
cmpsl
inc
pushf
cmpsb
fistps
mov
in
enter
xlat
out
xor
pop
jae
inc
cmc
jmp
adc
jp
cs
push
mov
xchg
incl
in
out
mov
lret
and
roll
out
xlat
jl
out
xchg
mov
mov
scas
push
xchg
outsl
int
cmp
cld
je
xor
mov
mov
and
xor
add
push
push
pop
xor
xor
pop
inc
push
pop
push
in
mov
test
cmpl
mov
cltd
mov
lods
addr16
out
push
loope
xor
stc
aas
jp
in
pusha
shr
cmpsb
pushf
pop
inc
loope
pop
dec
push
add
shufps
sbb
mov
stos
nop
xchg
data16
stos
rorl
inc
push
adc
mov
mov
cmovp
ror
and
aam
sbb
mov
jge
pushf
dec
mov
out
jg
sub
or
xchg
test
shrb
icebp
jno
sbb
mov
cmp
dec
je
imul
lret
in
test
arpl
jp
or
repnz
xchg
fcmovne
mov
jl
xchg
sbb
xor
inc
xchg
jge
testl
or
lret
clc
mov
add
cli
and
jne
xchg
and
cmp
dec
push
lds
dec
jecxz
clc
mov
and
or
outsl
icebp
and
loope
and
jnp
cmp
lds
jmp
lea
test
shll
mov
out
lcall
xor
sbb
stc
xchg
ljmp
jg
mov
sbb
add
inc
jne
add
xor
gs
mov
popf
mov
or
dec
mov
jne
or
mov
movsl
ret
adc
jbe
mov
call
pop
aad
int
adcb
rcll
es
in
int3
push
pop
cmpsl
mov
mov
data16
in
scas
mov
andl
pop
or
xchg
cli
sbb
je
movsb
inc
ljmp
test
push
or
jns
je
adc
mov
lcall
pop
out
cmp
in
xchg
and
xlat
and
mov
dec
out
daa
sub
dec
mov
fxch
or
sub
pop
xchg
pop
mov
inc
mov
mov
scas
mov
ret
cmpsb
pop
loop
push
iret
xor
stc
jmp
dec
xor
ds
cmc
sub
rcr
cltd
mov
mov
mov
loop
cmp
ret
dec
pop
cmc
inc
jmp
jo
sbb
cmpsb
cmp
pand
std
sub
jnp
mov
fildl
pop
adc
mov
cltd
subl
stc
int
adc
shl
popa
dec
jnp
test
adc
out
add
and
mov
add
inc
push
mov
push
or
popa
aad
sbb
sbb
jno
clc
loopne
xchg
mov
das
lock
push
adc
xchg
mov
inc
pop
addl
fiaddl
outsl
std
inc
fdivrs
scas
mov
pop
imul
out
movsb
mov
data16
bound
mov
inc
rclb
inc
add
xchg
pop
loopne
int3
jmp
jp
sbb
jecxz
or
push
pop
sbb
ljmp
shlb
decl
pop
frstpm(287
mov
leave
mov
fsubrs
push
jns
mov
scas
inc
stc
inc
pop
cmp
adc
lods
bound
dec
push
int
mov
pusha
sbb
cltd
sbb
mov
data16
mov
sbb
add
popf
leave
aas
ss
sahf
mov
jnp
and
aad
push
cmpsl
push
sub
or
ret
int3
add
sbb
lds
push
cmc
pop
pop
sub
mov
push
mov
shr
adc
jmp
jnp
mov
ss
sub
lock
mov
sub
sti
test
jge
sbb
cltd
popa
push
imul
mov
inc
adc
inc
mov
push
rcrb
decb
xchg
cmp
mov
cmp
push
fwait
sbb
lahf
xchg
jg
xchg
pop
mov
xor
mov
sar
push
mov
jae
or
or
mov
mov
add
cltd
test
lock
lods
das
cli
push
mov
repz
mov
movsl
scas
jns
icebp
test
lahf
sub
add
mov
dec
push
adc
rol
fidivrs
mov
in
mov
push
out
pop
out
test
pushf
cmp
jecxz
push
dec
sbb
jne
aam
loopne
mov
inc
iret
jmp
sub
fwait
jp
xor
mov
xor
push
add
sti
js
push
xchg
xchg
xchg
dec
mov
dec
mov
xchg
pop
arpl
in
sub
fwait
shll
push
ret
mov
mov
jl
es
push
sbb
out
ret
push
xor
lods
imul
dec
inc
icebp
scas
enter
les
pusha
add
std
in
loopne
or
outsb
mov
pop
cli
repz
pop
fists
pusha
sti
or
push
sbb
jo
out
pushl
mov
subl
shl
sub
xor
loope
aaa
daa
cltd
push
adc
cmp
sbb
loop
sbb
into
xchg
ja
stos
repnz
loopne
mov
push
sub
outsb
mov
cmp
cmp
fcmovne
ja
mov
sbb
mov
or
repz
sbbl
fsts
lock
ds
sub
mov
push
in
movsb
push
lahf
mov
je
in
or
ljmp
lods
jbe
pop
repnz
jne
jo
movsl
push
test
and
mov
ss
dec
adc
sbbb
dec
enter
aad
mov
pop
jae
test
xchg
outsb
sarl
rclb
xchg
pop
aas
mov
mov
fistpll
push
jp
adc
out
cmp
out
lock
sbb
decb
test
lcall
jg
jbe
mov
pop
sti
ficoml
push
aad
pop
xor
jmp
pop
sti
les
fistps
sub
cwtl
lret
imul
mov
loopne
outsb
sbb
jns
cmp
ljmp
lret
mov
add
mov
mov
shl
inc
aad
pusha
inc
insl
pop
sub
daa
inc
xchg
aam
dec
sub
sub
out
movsl
push
add
lods
arpl
and
nop
aaa
push
stos
jmp
shlb
rclb
test
mov
cmp
jmp
pop
out
repz
cmpsl
dec
gs
cmp
ds
sbb
in
gs
enter
mov
xor
sbb
pop
lock
xor
dec
clc
daa
lods
cmp
aad
mov
xchg
sahf
mov
lcall
lods
jnp
sbb
cmc
inc
jbe
add
test
enter
adc
xchg
sub
jo
repz
sbb
sub
in
push
xor
push
iret
mov
lahf
mov
es
mov
mov
push
cmpsb
jg
js
mov
cwtl
sub
dec
movsb
sti
jl
ljmp
push
add
stos
and
test
push
fwait
sub
jns
adc
mov
test
lcallw
xor
jnp
adc
jnp
repnz
mov
sbb
sub
fdivrs
push
mov
push
rclb
rcr
mov
jno
pop
sub
mov
leave
add
mov
xor
sti
movsb
push
popf
stc
xchg
inc
mov
scas
or
scas
fs
filds
insb
adc
jg
aas
fldenv
pop
call
push
mov
jl
mov
shrb
xlat
mov
inc
js
and
or
push
jmp
xlat
pop
push
and
pop
fisttpl
xor
sbb
adcb
mov
pop
xchg
ror
cmpsl
sbb
pop
inc
add
add
fcmovnu
lock
xor
shll
nop
jnp
xor
push
lock
dec
in
mov
in
enter
sub
cmp
mov
jp
sbb
les
sarl
add
sub
orl
add
insl
jg
roll
fsubs
and
xchg
mov
xor
and
mov
test
enter
jo
lds
push
xchg
sub
scas
jns
rep
push
daa
repnz
pop
cs
hlt
insb
dec
jle
xchg
lret
pop
jecxz
gs
enter
or
inc
loopne
jae
into
jo
cwtl
xlat
testl
movb
fiadds
lret
mov
add
das
fildl
popa
pop
mov
pop
pop
fnclex
fbstp
loopne
cmp
inc
xlat
dec
insl
push
in
mov
aas
test
or
xchg
insl
ret
decb
enter
jb
add
in
push
mov
dec
mov
pushf
push
fwait
cltd
and
pop
jne
int3
inc
sbb
imul
or
sub
stos
and
add
or
sub
mov
ss
inc
pop
sbb
notb
add
mov
outsb
rcrb
mov
loop
sbb
arpl
inc
push
cmp
dec
add
push
mov
pop
test
das
pop
jb
mov
add
pop
or
and
dec
sbb
pop
inc
jns
xor
mov
mov
sti
pop
push
push
aam
ja
addr16
mov
mov
jmp
xor
cs
insl
adc
aas
mov
adc
sbb
xchg
lock
fwait
ret
outsl
mov
rcll
xor
das
mov
xchg
outsb
mov
inc
aad
ret
xchg
mov
mov
fidivl
mov
sub
movsb
adc
sbb
hlt
jl
mov
mov
mov
movsl
mov
lods
js
adc
mov
push
rol
mov
fmuls
dec
inc
dec
cwtl
rclb
cmp
sbb
roll
mov
scas
jmp
leave
xor
lods
cmp
fmuls
mov
jae
test
lret
testb
add
push
mov
lret
sub
xor
loopne
jp
push
lahf
cmpsb
daa
insb
cmp
stos
pop
push
push
sbb
inc
in
imul
fnstsw
fs
in
shl
rolb
dec
ret
mov
mov
pop
adc
cmp
add
and
js
pop
push
pop
or
sbb
sub
rorb
out
push
iret
ss
sbb
xor
fbld
cmp
das
les
sub
adc
cmp
xlat
sub
bound
ret
mov
jp
or
sahf
mov
pop
pop
xor
sub
push
test
lea
xlat
xchg
xchg
ljmp
sub
movsb
push
jno
stos
lahf
jb
imul
pop
add
mov
leave
push
push
dec
push
mov
pop
data16
cmp
pop
ds
daa
sbb
imul
fisubl
or
jle
sbb
push
pop
adc
cmc
mov
fldcw
sub
iret
pop
xor
fs
pop
mov
and
mov
and
negl
mov
lret
adc
jae
pop
mov
jb
dec
addr16
icebp
pop
andb
cmp
mov
iret
in
pop
and
ficomps
sbb
es
enter
pop
int3
shll
add
push
push
idivl
iret
xchg
jmp
jl
mov
xchg
sbb
inc
inc
xchg
mov
lock
adc
mov
cmp
imulb
push
iret
or
mov
aam
lods
sbb
jae
lcall
mov
sbb
and
cmp
out
dec
adc
arpl
pop
or
fnsetpm(287
xchg
popa
subl
adc
xor
mov
cmp
sbb
mov
adc
xchg
add
inc
jecxz
mov
in
dec
in
int3
je
xchg
loop
aaa
rorb
sub
mov
xchg
push
push
or
add
add
insb
in
ljmp
jae
pop
jecxz
imull
movsb
aas
outsl
dec
sbb
xor
jbe
js
andl
mov
movsl
jle
jmp
cmp
sub
adc
or
xchg
lods
lock
jg
cli
out
and
fstps
fmull
sub
mov
bound
scas
cmp
add
in
mov
mov
and
mov
lret
mov
pop
xor
push
sub
mov
sub
adc
outsb
pop
add
xor
adc
gs
bound
rorl
mov
int3
and
xchg
mov
outsb
push
or
nop
sbb
shl
pop
dec
loope
mov
mov
jo
testb
repz
xchg
repz
mov
lret
lods
in
sbb
mulb
mov
inc
cld
and
in
adc
cmc
ja
test
aad
lret
cmp
xchg
fldenv
jp
jbe
push
add
fdivrs
rcr
pop
into
jmp
and
aas
daa
or
out
inc
sbb
mov
arpl
xchg
data16
mov
cltd
inc
divb
xor
inc
mov
mov
adc
sahf
call
test
push
inc
lret
xchg
sti
sbb
sahf
rorl
inc
pusha
scas
adc
stc
popf
push
in
or
xchg
jge
aad
pop
clc
iret
mov
fnstenv
daa
pushf
add
adc
jl
sbb
add
aaa
cltd
mov
and
int
or
pusha
xchg
mov
xchg
addr16
ficomps
movl
outsl
hlt
cmpsb
test
stc
xchg
mov
adcl
mov
jo
xchg
outsl
je
and
test
lods
sbbb
lds
cmc
sbb
sub
xlat
lods
stos
or
inc
fsts
sub
cs
inc
insl
cmp
xor
les
cmp
mov
addr16
shll
push
repnz
push
xorb
subb
in
jbe
repz
std
lret
stos
xchg
fpatan
inc
dec
mov
std
sub
rolb
bound
pop
hlt
pop
call
ljmp
ljmp
and
push
insb
or
out
push
loopne
mov
incl
adc
fsts
aad
cmpsb
cmp
mov
dec
and
cmpsb
out
push
mov
stc
jl
nop
pop
adc
xchg
adc
cltd
ret
inc
icebp
sahf
leave
and
jae
mov
repz
adc
addb
xchg
aas
subb
mov
popa
cmp
inc
stc
sbb
jns
sub
leave
mov
adc
and
stos
repz
sub
insb
insl
sbb
jmp
gs
mov
outsl
cld
pusha
insb
aaa
mov
aas
mov
adc
sub
xor
pop
push
imul
pop
push
mov
pop
inc
adc
test
pop
jno
aas
xchg
pop
inc
cltd
mov
inc
les
sbb
or
scas
inc
push
jnp
sub
inc
jo
sbb
xchg
add
lea
push
ss
and
maskmovq
imull
loop
lcall
outsb
in
mov
loopne
dec
cltd
out
into
and
cmp
in
mov
fdivrs
in
pop
mov
aad
dec
leave
mov
jecxz
push
and
mov
cwtl
sbbl
mov
and
fwait
inc
test
lahf
sbb
jb
push
fwait
sahf
loopne
add
cmp
dec
notl
lds
orb
jge
push
push
stos
fimuls
mov
cli
xor
cmp
mov
xchg
inc
or
sahf
pop
mulb
cmp
add
insb
insl
and
and
push
lahf
lret
cld
dec
mov
or
mov
ret
mov
fucomi
xor
push
cmp
imul
mov
ret
sbb
mov
xor
fsubr
xor
movsb
imul
ret
push
hlt
cmp
xor
dec
cmp
and
enter
add
clc
lahf
lret
les
or
mov
push
enter
adc
sahf
adc
xor
push
inc
mov
add
ds
sbb
push
xorb
xor
jmp
stos
pusha
push
mov
sbb
cmp
cmp
or
pop
jg
iret
rolb
or
xchg
inc
ret
or
mov
inc
dec
mov
mov
lret
stc
sub
mov
fs
cmpsb
cmp
mov
push
sbbl
aaa
add
add
xor
mov
mov
stos
dec
mov
mov
enter
lods
pusha
mov
mov
lea
call
mov
in
leave
fwait
pushf
sbb
ret
out
mov
mov
bound
or
add
sbb
stc
sub
adc
mov
mov
and
repz
mov
and
inc
lret
mov
cmpsl
mov
xchg
out
call
mov
adc
mov
cmp
lock
sbb
push
or
lock
jno
cmpsl
dec
lods
lods
mov
mov
pop
pop
shlb
xchg
inc
gs
sar
xor
xchg
ja
stos
and
mov
fnstcw
xor
out
subl
jbe
push
decb
xchg
mov
jb
xor
sahf
mull
imul
inc
stos
insb
and
jb
fisubrl
loope
addr16
lods
and
inc
scas
pop
jo
pop
adc
pop
cmp
pop
outsl
addb
lock
scas
mov
lds
aad
test
daa
fcmovu
mov
cmp
jnp
mov
fbld
cmpl
nop
inc
rolb
cmpl
pop
in
push
loop
insl
mov
adc
sbb
lds
lea
inc
imul
fisubl
push
lea
dec
pop
push
sbb
xchg
ret
bnd
inc
loop
push
and
mov
scas
dec
fstps
pop
ds
inc
insb
jg
loop
jge
data16
xor
lock
stc
fcomps
rorb
and
rcll
test
cs
fcoml
mov
mov
sbb
out
sbb
pop
or
ljmp
mov
or
ret
inc
fistps
mov
jno
sub
cmpsb
xchg
js
shll
sbb
cmpsl
int3
and
cmp
into
sub
lcall
mov
cmp
lea
mov
push
sbb
imul
iret
jmp
nop
popa
sub
pop
rolb
outsl
fsubr
adc
sub
cmpsb
add
cmc
pushl
enter
testb
jnp
adc
pop
mov
mov
iret
mov
test
ja
push
mov
add
dec
lcall
rcl
das
xchg
cmp
psubq
sbb
push
inc
and
pop
mov
clc
mov
xor
mov
push
fisubl
pop
xor
or
mov
das
mov
add
and
imul
xrelease
call
insb
or
dec
mov
in
xor
or
and
and
mov
push
push
pop
and
insl
mov
divb
subl
or
scas
inc
sti
jl
xchg
movsl
mov
stos
stos
data16
in
push
inc
hlt
dec
sbb
es
xchg
jl
out
sub
dec
bound
xchg
push
cmp
sbb
je
jl
lahf
mov
jp
pop
je
mov
ror
mov
xor
mov
jge
loope
or
out
cwtl
cmp
adc
sahf
out
jae
or
js
push
into
mov
add
and
shll
cwtl
pop
out
jnp
mov
in
in
and
xchg
movsl
int
push
lret
mov
fstpt
adc
shl
in
and
jmp
int
xchg
xlat
fadds
or
imul
sarl
out
cmpsb
leave
mov
test
ljmp
sub
mov
lret
cli
xchg
pop
insl
idiv
call
sarl
das
pushf
mov
jle
fsubl
inc
rcl
out
mov
jecxz
addr16
cmpsb
stc
loope
inc
iret
or
mov
push
add
fstpt
into
mov
jecxz
loopne
mov
mov
aad
mov
loope
movsb
push
aam
and
add
xchg
mov
cmp
lods
cmp
inc
pop
imul
and
ds
cmpb
mov
push
mov
mov
xchg
imul
mov
ficompl
in
jle
add
jbe
xchg
jle
add
loopne
jbe
leave
cmc
inc
sbbb
scas
imul
dec
aad
xor
pop
testl
mov
jp
xchg
xor
jmp
adc
sbb
mov
mov
popf
ss
repnz
aas
icebp
sbb
push
mov
repz
mov
push
call
pop
aam
hlt
push
out
inc
push
xchg
sub
hlt
sets
dec
jle
in
cmp
nop
sub
and
cmpsb
pop
stos
aad
aaa
jmp
in
idivb
mov
leave
icebp
imul
divl
xchg
jl
jge
jno
shll
pop
lret
ljmp
mov
cmp
cmp
adc
test
push
dec
mov
push
mov
psubb
cmpsl
addr16
pop
pop
pop
cli
pop
sbb
sub
pop
imul
or
mov
cmc
rorb
mov
clc
dec
ljmp
xlat
mov
or
test
push
js
xor
or
mov
push
negl
inc
cmp
xor
sub
out
add
movsb
inc
roll
lods
movsl
fistps
testl
js
fidivrl
sub
shlb
stos
movsb
add
inc
lods
mov
inc
lea
sub
sub
adc
jns
movsb
sub
push
ss
faddl
orb
imul
mov
test
push
or
or
andl
inc
cmc
hlt
pusha
pop
jg
leave
jg
jp
rol
movsb
adc
jns
xor
sbb
in
stos
test
fists
sahf
daa
loopne
fldenv
mov
int3
mov
pop
adc
inc
adc
nop
cmp
insb
out
xchg
stc
push
out
sbb
jbe
lcall
jae
lret
sub
push
sub
push
jns
cltd
add
movsl
hlt
sub
popa
and
inc
shlb
dec
xchg
jns
out
shll
mov
int
cmp
add
arpl
inc
lcall
lea
adc
inc
mov
xchg
loope
xor
lret
sbb
push
dec
add
lds
jnp
out
sub
insb
and
mov
movsl
lahf
cld
mov
mov
shll
dec
nop
add
and
inc
addr16
pop
push
jecxz
test
sbbl
pop
clc
lret
js
insb
in
out
xchg
int
pop
add
inc
movsl
adc
adc
xchg
daa
xor
xchg
or
clc
mov
in
and
and
addr16
jbe
fdivrl
xchg
sub
mov
xchg
data16
inc
imul
mov
fwait
ret
stos
sahf
mov
repnz
cmp
out
inc
iret
sbb
fs
loopne
in
cmp
and
scas
sbb
jae
ret
mov
cmpsl
lret
roll
sub
shlb
xchg
xor
lods
scas
push
xchg
jp
jno
xor
sbb
popf
adc
mov
pushf
dec
mov
dec
mov
push
iret
test
push
pop
mov
arpl
jbe
imul
inc
pop
leave
mov
add
or
and
mov
mov
mov
into
mov
add
push
pop
in
pusha
add
sbb
cmpsb
dec
decb
sbb
loop
repnz
stos
or
sahf
sarb
loope
mov
dec
mov
ljmp
clc
scas
mov
inc
sbb
ss
cwtl
xchg
push
mov
cmp
aam
dec
sub
cli
sub
popa
loop
push
add
out
test
ficomps
lahf
jl
adcb
inc
xor
jnp
mov
icebp
cmp
xor
dec
mov
aad
adc
pop
pushf
and
pop
shrl
or
xchg
and
shlb
sub
xchg
out
adc
loope
push
xor
push
and
dec
mov
xor
jo
gs
sbb
sbb
mov
fcoms
fcoml
jae
mov
sub
ds
dec
pop
jnp
pop
or
cld
push
sub
in
scas
icebp
dec
addb
pushf
fidivrl
dec
jp
iret
scas
shlb
std
mov
xor
pop
stc
shlb
inc
xchg
mov
repz
icebp
push
jecxz
cwtl
inc
cmp
je
lahf
xchg
push
jle
jg
mov
cmp
add
cs
mov
mov
jne
inc
inc
lret
es
mov
cs
in
test
fmull
inc
fmull
xchg
mov
xchg
xor
jo
mov
fimull
jo
stc
xor
and
xchg
push
push
xorl
cmp
repz
dec
mov
lods
and
inc
xchg
outsl
mulb
jecxz
movsb
jp
bound
lods
les
pushf
ucomiss
push
xor
test
push
je
ret
mov
int3
stos
sbb
sbb
pop
dec
cmp
adc
stos
data16
daa
daa
push
or
cltd
mov
lcall
mov
je
mov
mov
cmpsb
xor
sub
fwait
mov
pop
jns
mov
mov
test
lea
aam
sub
shl
out
rorb
dec
mov
clc
or
arpl
fiaddl
inc
lea
add
fs
push
fwait
pop
cmpsb
lret
gs
push
mov
adc
ljmp
jae
je
sahf
lds
ret
inc
push
add
lcall
sbb
test
mov
and
sbb
mov
jle
mov
mov
jbe
sbb
mov
ret
orl
push
into
and
aam
mov
pop
clc
jmp
push
cmc
push
es
shrl
fwait
inc
sbb
cmpsl
mov
out
add
mov
popa
push
inc
pop
jmp
dec
xor
mov
imul
out
add
shrb
inc
outsb
out
fstl
outsl
dec
jb
scas
dec
adc
icebp
mov
push
mov
sub
mov
popa
rorl
andb
shlb
sbb
jns
push
insb
dec
sahf
inc
bound
movsl
loop
icebp
arpl
lret
mov
rcrl
sub
xchg
xor
clc
sbb
sbb
sbb
and
mov
add
js
aad
loop
inc
test
daa
adc
xlat
pop
cmp
enter
in
pop
jle
and
xor
scas
dec
loop
das
mov
dec
cmp
mov
xchg
ljmp
sub
imul
out
jmp
pop
cmc
fnstcw
lds
out
sarb
sbb
das
adc
jge
mov
cmp
mov
pushf
xchg
rcll
inc
loopne
jmp
lods
addl
lret
sub
pop
lock
inc
or
mov
out
out
sti
dec
and
and
je
inc
insl
stos
jge
out
xchg
loope
ds
test
data16
cwtl
ret
mov
mov
scas
out
cmp
ret
pop
push
pop
mov
mov
jbe
sar
push
fwait
xchg
lock
movsb
pop
xor
clc
enter
lret
je
dec
stos
add
filds
ud1
xor
rcrb
int
test
mov
sbb
test
xor
mov
pop
in
sub
mov
in
out
rcrb
jno
sub
insb
and
xor
mov
mov
call
cmp
stos
cld
insb
fcoml
and
mov
subb
sbb
ret
addr16
sub
stos
xorl
les
mov
or
adcb
push
cli
stos
scas
fwait
stos
dec
inc
or
jo
cmpsl
fistpll
xchg
mov
insl
icebp
mov
pop
sbb
popa
scas
cmp
jno
add
mov
stos
inc
mov
xchg
jne
js
mov
shlb
ljmp
daa
loop
dec
rcrb
andl
mov
call
inc
sbb
ss
xchg
mov
imul
cmp
xor
pop
aas
rcr
mov
andl
repnz
jmp
outsb
cmp
xchg
jge
cmp
repnz
or
sub
nop
mov
scas
lcall
xor
neg
mov
mov
cmpsl
gs
stos
lock
insl
dec
in
les
icebp
push
movsb
xchg
ja
sar
inc
mov
xchg
jecxz
jae
push
cmp
dec
lea
sub
cmp
insl
mov
adc
adc
imul
and
sbb
movsl
sub
cmp
xchg
test
pop
insb
fsubr
ret
lret
dec
movsl
sub
dec
idivb
ds
push
test
mov
or
popf
es
sub
mov
mov
adc
dec
mov
shrl
push
clc
into
cs
cmc
stc
sbb
sub
pop
mov
push
fmul
jnp
lock
std
jns
add
add
push
xor
mov
ficompl
int
je
xor
or
jae
cmpsl
xor
cli
leave
xor
gs
arpl
push
dec
sbb
or
mov
fcmovb
daa
js
mov
aas
push
arpl
push
jno
fnsetpm(287
aad
adc
cmpl
test
jle
fcomps
test
add
xlat
sarb
cmp
dec
outsl
push
mov
dec
int
xchg
inc
inc
mov
sbb
outsl
jecxz
test
pop
insb
in
cmp
sbb
cltd
fwait
xchg
push
adcb
and
out
mov
and
pop
aas
xlat
jne
sbb
mov
imul
jl
divb
fstps
xchg
mov
pop
push
insb
sti
pop
mov
out
int
enter
aaa
inc
dec
mov
mov
lret
pop
aad
jmp
mov
int
test
pusha
cmp
xor
mov
pop
add
inc
pop
mov
push
fisubs
sbb
mov
xchg
pushf
repz
mov
into
adc
les
cmp
rcll
mov
adc
sbb
mov
lcall
adc
cmp
jne
mov
lret
stos
pop
outsl
lods
mov
dec
repz
ljmp
push
pop
shlb
test
ret
push
nop
mov
icebp
inc
mov
sub
dec
mov
lods
sbb
stos
addb
or
insb
imul
sub
inc
cmp
or
push
lods
into
mov
icebp
call
test
and
test
mov
loopne
jo
fiadds
call
ret
cmpsl
mov
stc
cmp
xchg
jae
bound
sub
push
call
mov
jl
pop
fisubrl
daa
inc
push
pop
decl
dec
popa
push
enter
xor
mov
divb
dec
lret
and
ds
fisubs
cmp
pop
mov
xor
sbb
sti
push
mov
xchg
mov
mov
add
ret
push
jnp
cmp
mov
jp
cmp
rcrb
dec
adc
ljmp
rcl
inc
mov
lret
stos
add
and
in
cltd
inc
aad
fs
mov
jo
in
in
xor
mov
jp
dec
mov
and
bound
xchg
add
into
sub
stos
pop
jns
fcmovnb
decl
das
cmp
sbb
pop
movsl
sbb
sub
clc
lcall
in
lock
or
lahf
sbb
sbb
add
enter
mov
inc
clc
imul
fisttpl
xor
call
std
push
pop
xchg
test
inc
push
cmpsb
adc
xchg
xchg
xor
lcall
test
cmp
cmc
repnz
xchg
dec
vshufps
push
pop
sahf
push
add
cmpsb
sub
sbb
clc
nop
sub
cmp
fdivs
sbb
add
pushf
ret
mov
or
je
jg
sbb
xlat
xor
es
sbb
into
add
xchg
stc
sub
mov
and
sub
jecxz
fadds
cmc
mov
daa
loope
pusha
out
pop
cmc
jns
lods
mov
stos
sbb
jbe
fsubrl
mov
jl
flds
push
movsl
bts
xchg
fbld
ljmp
dec
cmp
sbb
cs
mov
cmpsb
mov
call
dec
hlt
mov
bound
popf
pop
aad
pop
addr16
lea
inc
shll
gs
in
push
xchg
inc
and
sub
scas
mov
push
jbe
add
out
cmp
cmpsb
rcr
pop
jmp
mov
cmpsb
mov
mov
loope
sub
insl
je
inc
adc
inc
out
popa
leave
mov
sahf
scas
xchg
pop
mov
dec
clc
fs
iret
pop
push
push
daa
pop
jmp
push
xchg
fcoms
inc
call
sub
nop
xor
or
adc
xchg
in
jo
fists
adc
cmp
cs
cmpsl
pop
jb
pop
addr16
je
fdivp
inc
xchg
andl
pop
cmpsl
sarb
xorl
loopne
test
out
inc
les
mov
ret
rorl
lcall
inc
mov
mov
int3
cmc
jmp
leave
xor
lea
cmp
sbb
adc
jns
sbb
loopne
push
adc
add
rolb
mov
mov
pop
pop
in
push
scas
jecxz
mov
imul
clc
adc
xorb
mov
dec
leave
mov
mov
xchg
jne
jecxz
cli
push
fcomi
lods
jo
push
repnz
pusha
ficoml
enter
das
jge
dec
sbb
jbe
push
lcall
jp
lahf
mulb
pop
sahf
pop
jbe
cmc
pushf
xor
or
sbb
in
int
xchg
push
push
add
fs
mov
cwtl
lds
int
xlat
mov
sub
push
mov
lock
repz
adc
jae
pop
push
scas
mov
push
adc
jl
iret
dec
inc
mov
jb
icebp
cwtl
xchg
mov
add
mov
sub
scas
sub
lahf
jb
mov
lret
repz
cmpsb
and
clc
xor
and
aad
pop
push
in
jnp
iret
dec
int3
push
in
jns
pop
xlat
adc
jle
cli
mov
mov
add
ret
ret
jbe
hlt
xchg
ja
and
stos
and
xchg
mov
xlat
scas
fdivp
xchg
lock
sbb
bnd
inc
into
xchg
rol
sbb
add
stos
repnz
push
dec
mov
outsb
cli
jno
sub
cli
jp
mov
adc
xchg
frstor
in
daa
loop
frstor
sbb
add
sarb
xchg
and
shlb
mov
xchg
pushf
mov
push
sub
jo
cltd
imul
push
shll
jcxz
cli
xchg
or
mov
dec
jnp
int
pushl
sbb
loop
xchg
mov
loope
or
mov
jmp
je
cli
or
shrl
dec
ds
xor
scas
mov
xor
into
mov
pop
inc
cmc
sbbl
sub
jp
xchg
aas
xchg
mov
test
lock
cmp
aad
push
scas
leave
addr16
lock
gs
lret
cli
test
cmpsl
mov
jne
sbb
int
cmc
inc
mov
out
cmpsl
roll
gs
cmp
in
lret
adc
or
dec
mov
pop
add
inc
or
repz
inc
sbb
mov
jecxz
iret
sbb
js
das
cmc
pop
cwtl
xor
pop
rcrl
cmc
fwait
or
mov
and
pop
leave
jne
sti
out
ret
dec
dec
sub
mov
adc
or
add
fs
lock
jp
mov
mov
mulps
inc
jnp
adc
pop
les
and
xor
mov
das
loope
mov
dec
pop
add
xchg
test
adc
cmp
xlat
inc
int
loope
lahf
mov
ret
mov
sti
xor
lds
jne
imul
push
incl
sar
sahf
mov
and
subl
push
dec
fimuls
xchg
bswap
push
jne
mov
jne
mov
lahf
fs
adc
adc
add
xchg
xchg
mov
add
lea
add
es
jle
ja
sbb
mov
nop
aaa
jl
lods
ljmp
es
dec
fdivp
inc
mov
and
ficoml
lcall
mov
adc
fnstcw
or
xchg
lret
outsl
ds
out
mov
mov
je
dec
fildl
out
loop
or
out
xchg
xor
mov
lahf
das
push
aaa
cmp
ret
xlat
daa
xchg
cwtl
cmp
js
fucomip
leave
dec
sbb
cmc
js
mov
in
jecxz
jo
or
je
mov
xchg
lcall
push
jge
loope
mov
add
xchg
pusha
xchg
mov
or
into
jno
pop
dec
ds
jne
sbb
icebp
mov
pop
jl
xchg
xchg
cmp
xchg
dec
sbb
leave
inc
push
mov
gs
or
dec
insb
in
test
sub
sti
cmp
cmp
nop
fcoms
xchg
xor
or
mov
push
mov
mov
ret
jno
push
sub
popf
inc
jns
outsl
inc
adc
fdivl
test
inc
jmp
mov
es
dec
cmpsb
mov
rclb
push
insl
inc
outsl
lock
into
push
testl
pop
cmpsl
fs
pop
add
jae
loopne
pop
mull
popa
push
shlb
roll
gs
jnp
or
inc
xchg
sub
push
rcrl
test
out
es
jmp
xchg
bound
jle
mov
xor
in
rcll
jno
sub
test
add
add
inc
pushf
push
mov
jns
lcall
push
mov
or
mov
mov
xchg
shrl
push
pop
pop
and
pop
dec
add
xchg
and
cmc
sarl
cmp
fdivp
stc
fdivs
and
fs
movsb
rcrl
sub
jp
sub
les
cmp
loop
decb
iret
xchg
adc
insl
mov
ss
lahf
jns
inc
add
xchg
in
int
repnz
add
stc
mov
mov
fists
and
mov
push
mov
push
jae
adc
cs
flds
or
rcr
mov
add
ficompl
sub
imul
loopne
int
stos
test
add
xchg
or
outsl
jg
and
pop
inc
xchg
fdivl
loopne
sub
shlb
outsl
and
push
outsb
cltd
jne
push
push
incl
movsb
fcompl
stos
sahf
fidivl
ret
add
cmpsl
dec
scas
int
adc
jle
push
inc
jle
bound
jnp
and
out
mov
push
cmp
aad
lahf
pop
aaa
popf
xchg
adc
ret
sbb
cs
add
cli
lods
mov
loope,pn
mov
lock
lods
pop
push
addb
and
jecxz
mov
std
push
mov
ljmp
shrl
jecxz
mov
scas
xchg
mov
xor
and
jae
cmpsb
and
pop
push
adc
pop
push
xchg
adc
jmp
cmp
push
ss
sub
iret
xchg
add
lock
jae
mov
mov
adc
mov
xor
xor
sarb
cld
pop
shr
pop
adc
scas
push
inc
fs
ss
in
lahf
lcall
lahf
scas
dec
add
in
pop
je
subb
mov
adc
sbb
xchg
dec
testl
jmp
pushl
ret
jl
stc
push
aas
out
dec
imul
jns
jns
xchg
sub
pop
rcll
arpl
xchg
lds
sub
das
pop
add
outsb
sbb
das
into
inc
lahf
test
js
mov
repz
aaa
sub
pop
outsb
test
fucom
push
jp
out
mov
push
push
mov
addr16
int3
lret
fucom
cmp
movsb
pop
pop
aas
inc
mov
out
or
pop
jmp
add
mov
into
mov
cwtl
or
sbb
popa
pop
mov
push
inc
sub
pop
outsb
into
cli
lods
jb
dec
shrl
clc
sti
and
int
cld
ds
pop
dec
pop
pop
or
inc
fwait
sub
mov
add
mov
push
sub
test
pusha
test
das
cltd
js
test
inc
pop
gs
aaa
adc
push
jge
xchg
stc
sbb
sar
xchg
push
pusha
pop
ret
and
test
int
movsb
pop
cs
pusha
loopne
arpl
in
fdivs
fidivs
adc
sbb
fcomip
xlat
mov
or
mov
sbb
xor
in
mov
roll
bswap
or
or
cs
fisttps
inc
adcb
jg
and
stos
in
jge
or
dec
jle
jp
mov
subl
dec
ds
nop
sahf
cmpsb
xchg
mov
cwtl
pop
dec
jne
popa
rcll
pushaw
imul
adc
gs
mov
push
dec
push
xchg
iret
push
xchg
jne
out
ds
pop
sbbb
nop
pop
dec
mov
movsb
loopne
sbb
inc
jmp
xchg
jo
movsb
test
imul
scas
sti
and
pop
lgs
mov
xor
std
mov
jl
loope
stos
ds
test
outsl
test
add
mov
ss
out
ss
dec
and
outsl
in
xchg
mov
mov
aad
in
xor
mov
repnz
lcall
lods
mov
call
cld
jge
and
hlt
ljmp
push
cmpsl
mov
test
sub
add
stos
and
xchg
insl
jl
into
xchg
arpl
xor
xor
sub
int
es
mov
pop
xchg
into
sub
or
ret
inc
xchg
fisubrl
sahf
scas
sub
lds
outsb
inc
sbb
mov
jae
not
dec
out
push
push
scas
sbb
cmp
es
mov
jg
out
sbb
push
jg
hlt
jne
mov
jl
int3
pop
adc
bnd
hlt
cmpsl
rcr
inc
add
movsb
repz
dec
and
push
dec
fcompl
inc
add
cmpsl
or
jb
cwtl
mov
mov
addl
aas
fistps
pop
jmp
aam
mov
pushf
dec
pop
xor
mov
xchg
mov
add
inc
insl
inc
lret
mov
xor
arpl
idivl
movsl
fnstenv
jne
dec
mov
pop
aam
pand
cmp
sti
mov
sbb
add
adc
push
mov
inc
loopne
shrb
push
test
aad
fs
lahf
xor
ljmp
lods
shrl
enter
aam
lods
insb
mov
pop
push
and
sbb
or
outsl
shll
ja
jle
xor
mov
mov
aaa
mov
out
data16
push
shll
dec
push
sbb
dec
dec
cs
jmp
push
mov
jg
jbe
cmp
cmp
dec
arpl
xor
push
inc
xchg
pop
sti
in
add
mov
prefetcht2
xchg
add
ret
aad
ret
enter
fidivrl
mov
inc
jle
lods
in
jle
cli
push
cld
xor
ss
movsl
dec
push
cmp
push
jno
fs
xor
inc
pop
jo
stc
clc
adc
leave
jae
scas
daa
fcmovnbe
or
dec
push
inc
loope
decl
movsb
mov
push
jae
scas
jae
test
pop
stos
leave
out
stos
sbb
xchg
enter
cmp
push
jmp
rolb
movsb
push
loop
scas
pop
sub
les
sub
add
sbb
and
mov
pop
cld
and
insl
icebp
lret
cli
push
add
rorl
push
movsb
sub
loop
add
xchg
les
loope
mov
les
jnp
out
mov
push
push
or
inc
xchg
fwait
dec
movd
sub
ret
mulb
push
xchg
mov
and
cmc
mov
int
lods
xor
mov
cmp
mov
sub
mov
in
fwait
popa
ds
scas
mov
and
nop
iret
mov
xchg
lea
out
fistps
faddl
push
addr16
cs
lcall
icebp
fadds
pusha
scas
ret
addb
mov
ljmp
mov
jno
sbb
pop
lret
jl
jmp
lahf
pop
lcall
and
xchg
or
dec
divps
xor
mov
add
inc
orb
cmpsl
int
xlat
sub
shll
fldcw
ljmp
popa
hlt
inc
aam
push
and
pop
mov
testl
mov
jb
imul
call
cmp
mov
inc
and
imul
dec
inc
xchg
ret
pop
fistl
jle
cli
and
ds
fucomip
leave
push
push
push
insb
push
lea
adc
mov
imul
repnz
sahf
testl
or
mov
int
sbb
filds
dec
pop
popa
mov
in
stc
in
inc
xchg
add
pop
mov
stos
aam
lds
lea
cs
scas
mov
test
outsl
xchg
add
out
dec
jne
lcall
push
shlb
scas
ljmp
inc
in
in
cmc
jo
out
cmp
jl
jmp
nop
xlat
xor
in
pop
out
mov
testb
cmp
scas
mov
fwait
mov
lret
inc
orl
cmp
xchg
dec
arpl
push
imul
sub
xchg
outsl
es
push
loop
push
mov
fsubs
in
or
jmp
pusha
push
arpl
push
sub
adc
add
xchg
gs
push
or
mov
jnp
leave
fstpt
and
pop
push
inc
jge
inc
mov
hlt
ffree
imul
mov
xchg
jp
dec
inc
jbe
adc
jbe
push
push
ds
iret
loopne
or
jp
jmp
mov
xchg
or
jmp
and
stos
daa
mov
xor
movsl
adc
mov
push
push
test
inc
fimull
out
fcmovnbe
add
mov
gs
mov
xchg
nop
lcall
add
xor
mov
cltd
adcl
and
and
mov
and
pop
movsb
rclb
add
mov
or
cmpb
xchg
push
out
mov
inc
adc
aad
ret
adc
sbb
or
jge
xchg
push
inc
add
repz
fnstenv
inc
or
sbb
ss
or
jae
inc
getsec
push
cmp
dec
lcall
push
lods
frndint
mov
push
or
push
pushf
sbb
mov
or
and
mov
loope
shll
adc
push
mov
add
out
pop
xchg
iret
mov
scas
jge
movsb
push
addb
lds
or
aas
lea
int
push
arpl
jg
cmp
in
mov
int
jp
lret
popf
outsb
jne
sub
mov
inc
clc
mov
add
adc
push
xchg
rol
jl
jae
clc
fnstsw
cvttps2pi
iret
fcompl
sbb
pop
jmp
xchg
jae
add
add
clc
test
jge
movsb
ret
add
js
inc
pop
insb
sbb
pusha
imul
or
push
cmpl
or
lods
data16
xchg
jg
push
dec
cli
out
testl
jns
push
and
jae
or
inc
sub
and
inc
stos
popa
xchg
mov
lcall
dec
mov
or
push
out
adc
adc
and
movsl
outsb
jecxz
ljmp
lods
dec
pusha
hlt
mov
cmpsb
jo
or
mov
push
pop
ds
frstor
stos
adc
cwtl
daa
dec
lea
int
scas
sub
jecxz
mov
push
jo
xchg
add
fadd
ja
dec
lahf
fistpl
jmp
in
sub
out
and
in
movsb
and
jmp
aad
pop
dec
dec
test
insb
inc
or
inc
sub
adc
stos
jge
xor
mov
sub
pop
in
push
ret
jecxz
test
xchg
xor
inc
lea
adc
call
pop
xchg
lods
push
imulb
ret
adc
mov
push
add
out
bound
cmp
sti
emms
dec
cmpsb
sarl
enter
addr16
shrb
mov
jno
add
pop
andb
popa
aaa
sbb
call
jns
jo
pop
push
insl
fcompl
lret
dec
in
mov
pop
push
mov
and
hlt
aaa
push
mov
cmpsl
lret
mov
dec
inc
scas
lods
or
shlb
outsb
test
sarb
scas
pop
or
xchg
stc
loope
lods
mov
xor
out
cmp
jnp
jl
icebp
inc
test
mov
loopne
xor
jne
pop
pop
sub
dec
adc
int
and
lods
repz
ljmp
and
adc
xchg
sbb
add
cmpsb
and
or
jae
dec
jl
mov
test
imul
inc
push
in
lcall
ret
jno
adc
lret
cmpsl
sub
or
adc
inc
xor
jo
mov
icebp
cltd
jno
shlb
push
shl
inc
lcall
adc
cmp
push
xchg
xor
scas
add
jae
addl
ljmp
rclb
xorb
pop
mov
imul
jb
xchg
mov
scas
push
lods
mov
push
je
imulb
push
adc
mov
arpl
shll
inc
push
cmp
add
jle
cmp
sbb
pop
jge
pop
subl
jmp
das
push
insb
dec
dec
test
or
and
repnz
daa
in
push
or
sbb
cmp
idivb
dec
rcl
dec
dec
push
in
sbb
ja
sti
pop
pusha
dec
mov
mov
aas
ja
sbb
mov
or
sbb
xchg
test
insb
shl
inc
ret
push
inc
mov
jmp
loop
jae
leave
push
xlat
xor
mov
pop
sbb
mov
xor
add
shlb
dec
cmp
sahf
sbb
inc
mov
call
or
daa
jge
push
pushf
std
in
lea
jge
lret
dec
sub
ret
aaa
or
hlt
sub
stos
imul
xor
cmp
in
outsb
push
in
xchg
loopne
inc
sub
test
ljmp
pop
sub
or
imul
test
mov
xor
outsl
mov
nop
shll
cld
fisubl
jb
jmp
ljmp
gs
push
fistl
imulb
xchg
test
push
xor
sbb
xchg
std
pop
out
mov
imul
into
int3
cld
cld
fsubp
movsl
das
roll
mov
js
les
jecxz
ja
xor
sbb
ds
sbb
enter
jbe
divb
sub
aaa
sbbb
sti
xor
cld
dec
lret
jecxz
jmp
xchg
mov
dec
sbb
imul
cmpsl
sub
push
adc
inc
and
rcrl
mov
push
pop
inc
outsb
jge
and
push
or
mov
pop
out
out
jmp
cli
add
xchg
and
mov
fimuls
add
pop
inc
in
fs
jecxz
ja
pop
or
ffreep
add
mov
pop
mov
testl
arpl
jne
aam
cwtl
mov
movsb
push
jb
mov
jmp
cmp
pop
imul
xchg
push
jmp
repnz
or
aad
mov
cmp
or
shr
iret
movsl
xlat
add
sti
clc
sub
push
sub
roll
int
mov
fildl
push
out
mov
dec
in
stc
sbb
ret
arpl
lcall
in
in
xor
pop
sub
fstl
lret
lret
xchg
push
out
fsubrs
ds
push
dec
hlt
sbb
ja
ret
pop
cs
mov
ja
ljmp
sub
in
aas
cmp
test
les
sub
out
jmp
out
mov
dec
ja
sub
js
lcall
dec
mov
adc
hlt
push
ljmp
fsts
stc
sbb
push
xchg
outsb
xchg
shlb
cmpsb
sub
cmp
cmp
loope
ss
jns
hlt
adc
ss
lret
sub
or
or
mov
dec
adc
out
push
inc
test
stos
cmp
stc
vpavgw
adc
movl
ljmp
add
jne
sbb
clc
dec
movsl
addl
roll
mov
sub
shll
and
cwtl
dec
fsubl
ss
subl
sub
filds
movsb
shll
call
sub
popf
testl
inc
sub
loop
lea
sub
mov
pop
pop
push
pushf
lcall
jbe
and
inc
add
daa
and
lea
mov
addr16
ja
jl
adc
xor
insb
fdiv
xor
mov
xlat
sbb
cld
xchg
sbb
orw
out
xor
in
outsb
inc
jo
sahf
and
adcb
jge
mov
dec
lds
mov
in
mov
repz
add
les
mov
mov
xchg
js
adc
popf
je
dec
push
js
add
lret
dec
dec
into
jno
jb
xchg
push
fnsave
pop
sub
push
mov
fdivrs
jle
pop
inc
ror
mov
push
loop
hlt
movsl
icebp
and
jg
hlt
aad
call
call
mov
stos
or
dec
out
cltd
adc
fldcw
and
jns
push
stos
mov
cmp
orl
dec
str
idiv
lahf
movsl
and
sbb
xchg
dec
stos
cmp
in
mov
fisubrl
sbb
out
cmpsl
jne
retw
fiadds
xchg
pop
push
les
xor
sarl
push
faddp
shll
mov
mov
jae
outsl
jno
mov
or
jp
xchg
pmulhuw
xor
xchg
xor
movsb
jo
insb
ss
mov
cs
hlt
push
ret
fwait
pop
outsl
mov
fwait
jge
test
scas
xor
test
pop
popa
pushf
bound
stos
fstps
insl
std
push
ja
ret
cmp
sbb
add
cld
aas
and
insb
sub
xor
js
pop
mov
and
mov
cld
dec
inc
mov
sub
or
mov
clc
inc
pushf
mov
cmpb
inc
add
nop
lods
loope
ljmp
shrb
xchg
push
adc
mov
repnz
pop
into
and
stos
daa
push
ss
jns
add
push
jmp
cmp
dec
aaa
hlt
int
xchg
test
pop
movsl
shl
frndint
push
pop
dec
inc
pop
or
mov
dec
movsb
adc
les
rclb
and
pop
lods
fimull
ficoms
mov
sub
es
push
pop
and
push
pop
fwait
xchg
icebp
stos
shll
sub
sbb
cs
push
dec
push
pop
into
push
xor
mov
mov
mov
clc
pop
mov
pop
rol
adc
outsb
and
inc
shll
loopne
in
xor
nop
push
adc
pop
pop
xor
aam
inc
dec
clc
cltd
jns
adc
outsb
xor
and
adc
in
jecxz
cmpsl
ss
mov
cmpsb
cmp
dec
push
out
pop
jp
scas
test
out
lret
bound
inc
inc
cmc
push
mov
sbb
or
bound
push
cmp
add
repnz
inc
lret
jge
std
imul
inc
dec
sbb
push
test
jne
jbe
std
inc
jp
icebp
push
xor
movsb
rolb
scas
ljmp
jmp
mov
jp
cmpsl
push
std
std
pop
dec
adc
filds
push
cmpsb
lea
scas
jle
aam
sbb
and
dec
pop
mov
daa
sar
sub
jg
cmp
cld
jae
xchg
lahf
push
cli
mov
or
lret
sub
xchg
push
aaa
insb
sbb
add
and
mov
mov
mov
sbb
mull
jl
clc
stc
bound
xor
fwait
xchg
bnd
mov
cmp
clc
or
dec
pop
mov
sbb
sbbl
mov
cmp
xor
xchg
pop
pop
pop
dec
ret
sub
arpl
imul
enter
push
popfw
mov
sbb
mov
test
test
sub
aas
sub
lds
jno
psrlq
cmpsb
and
mov
mov
int
pushf
lret
es
inc
stc
dec
or
mull
cltd
call
or
out
add
fs
xchg
mov
dec
xchg
push
out
repnz
lahf
xor
aam
outsb
jp
fs
mov
lcall
sbb
xchg
fsubrp
insl
lock
mov
clc
pop
jp
cs
in
mov
sti
xor
mov
stc
push
mov
int
cld
jecxz
adc
into
pop
push
in
leave
decb
push
cmc
dec
xor
add
sarb
stos
js
dec
addl
out
stc
dec
vmread
mov
sub
sarb
jge
inc
dec
push
flds
aad
les
mov
inc
out
and
in
enter
mov
mov
filds
insb
int
pusha
aas
pop
and
fidivl
xchg
sub
out
fidivrs
sub
sub
dec
pop
insl
shrb
lret
xor
and
pop
lahf
je
or
xchg
jmp
sbb
aaa
loope
sub
inc
pop
rcrb
addr16
rol
cmp
mov
ret
push
lock
sti
inc
pop
cli
xchg
mov
lahf
push
xchg
popa
jmp
mov
adc
out
dec
jl
test
movsl
adc
xchg
mov
cmc
test
aas
ss
cli
fwait
data16
lahf
lods
ffree
mov
mov
pop
cltd
les
clc
add
cmpb
icebp
cmp
mov
sbb
pop
and
or
pop
out
negl
jmp
dec
mov
push
fisttpl
das
cmpsl
xchg
test
in
mov
jns
push
cmp
inc
adc
fisttpl
add
jo
push
cmp
aas
push
outsl
cmp
std
movsb
aaa
sub
clc
pop
mov
cmp
mov
pop
inc
shll
les
adc
sub
jecxz
inc
or
add
insb
dec
inc
out
lahf
aad
dec
inc
dec
stc
adc
shlb
jo
mov
pop
sbb
jbe
mov
push
mov
and
fnstcw
pop
movzwl
xchg
rorb
lahf
arpl
ja
fisttpl
lret
popf
jl
pop
sub
cli
jecxz
pop
mov
and
scas
js
lds
mov
lock
xor
inc
hlt
ret
add
sbb
aas
xchg
daa
jbe
clc
sub
xor
enter
sbb
jle
je
scas
in
mov
aam
and
into
dec
lret
lea
inc
xor
push
cld
scas
sbb
push
xor
jae
int3
ret
fistpll
aam
mov
dec
mov
insb
ret
frstor
dec
clc
push
test
rorl
pop
xor
pop
test
push
mov
pop
test
aam
xor
pop
addr16
add
add
jnp
inc
adc
mov
inc
movsl
jbe
loope
jmp
dec
int3
insl
pusha
sti
dec
ja
adc
hlt
ljmp
mov
jle
sbb
lods
xchg
inc
cld
cmp
jns
xorl
iret
mov
xchg
clc
sub
mov
cmc
into
mov
int3
mov
mov
add
addr16
ljmp
out
shlb
call
cmc
xchg
dec
das
std
lods
pop
das
scas
xchg
and
mov
push
mov
cltd
push
scas
add
ljmp
dec
rolb
mov
inc
test
pop
sub
sbbl
lcall
repnz
cmp
jg
leave
xorb
xchg
xchg
push
adc
and
js
lock
cltd
or
push
repz
jne
stos
jmp
test
rep
or
xchg
mov
add
fstl
rclb
scas
sbb
cmp
mov
pushf
mov
stc
pop
add
into
xchg
mov
pushf
jge
clc
inc
popf
jmp
inc
cmpsb
sbb
clc
dec
lahf
xor
cmpb
std
bound
lahf
cmpsl
and
sahf
mov
push
dec
fcomps
mov
inc
pushf
jnp
jnp
xchg
jns,pt
or
dec
je
add
out
popa
jns
cmp
lock
pop
xlat
addr16
add
xchg
movsb
stos
jb
sti
dec
iret
mov
xchg
jge
pusha
mov
cld
sub
cwtl
pop
movsb
sbb
adc
jl
adc
mov
pop
leave
stos
sub
fs
cs
lock
faddl
out
push
push
orb
xchg
add
inc
cmc
shl
test
fildl
sti
inc
xchg
add
push
movsb
rorb
add
test
push
cmp
xchg
cmp
mov
cltd
aas
prefetch
test
repnz
mov
int3
xchg
arpl
and
jbe
in
xor
fidivl
pop
imul
or
jecxz
or
or
mov
iret
je
push
lret
fnsave
pop
push
mov
sub
inc
sub
jb
push
and
fmuls
in
nop
mov
cmp
add
out
insb
hlt
jbe
lret
ret
mov
xchg
mov
mov
jg
stos
adc
sub
xor
jbe
jb
or
dec
mov
out
dec
jne
cwtl
jecxz
push
call
cmp
push
out
sbb
ja
daa
dec
idivb
xchg
andb
sar
lret
dec
mov
cld
ret
push
dec
cli
sbb
pop
jmp
xchg
mov
or
xchg
popl
les
movb
js
ss
jmp
adc
sbb
mov
mov
sub
push
fsubs
addr16
adc
cmp
scas
mov
adc
andb
out
sub
je
pop
pop
lock
mov
ss
arpl
xchg
pop
pop
jo
adc
pop
push
call
inc
les
sbb
out
xor
cwtl
cmpsb
xchg
testl
mov
movsl
jbe
cmpsb
jnp
mov
jmp
ret
icebp
cmpsl
jg
inc
dec
xor
sbbl
fsub
lret
cmpsl
sbb
mov
es
and
lea
jmp
adc
inc
mov
inc
mov
mov
lods
xchg
out
cmpsb
adcl
cmp
xchg
cmc
ret
rcr
jp
aaa
loope
or
cmp
leave
cmp
aam
jae
pop
add
mov
mov
inc
fcomps
pop
enter
mov
pop
or
jnp
in
add
daa
pusha
push
mov
pop
aaa
insl
jne
loope
dec
push
add
pusha
movsd
out
xor
add
nop
xchg
lcall
cmp
push
stc
lret
pop
lods
lock
mov
jecxz
clc
add
jnp
mov
lcall
dec
add
inc
and
rclb
sbb
imul
add
scas
push
push
iret
nop
dec
push
imul
leave
test
data16
xchg
push
out
jmp
jns
movsl
xor
mov
mov
rcll
in
jo
in
scas
sti
sub
pop
fnstsw
sbb
int3
mov
push
jno
cmc
ljmp
imul
mov
fsubl
xchg
push
ja
xchg
push
ret
fists
test
outsb
add
pop
iret
enter
inc
sbb
push
push
push
add
cltd
or
jnp
fisubrl
mov
cmpsl
push
in
mov
ja
or
shrl
fiadds
out
dec
sahf
fildl
cmp
into
cmc
and
addr16
or
or
sub
adc
mov
adc
jbe
xchg
int
imul
rorl
test
adc
cmp
daa
arpl
and
mov
sti
fisubrs
fidivl
fstpl
out
pusha
out
sub
push
rol
fidivl
cmpl
adc
sbb
xchg
xlat
cmp
enter
in
je
xor
cmpsb
inc
sbb
fbstp
push
sbb
pushf
mov
fidivs
xchg
fwait
inc
push
and
add
lds
add
jp
inc
jecxz
cmp
mov
xor
mov
xlat
outsl
test
or
xor
ss
aam
aad
popf
sahf
or
das
dec
mov
ret
xchg
cmp
inc
outsl
fsts
lods
dec
xchg
lock
lods
movsb
cmp
add
cmp
adc
outsl
ret
jbe
cmp
add
mov
push
arpl
push
jmp
sahf
scas
cmpsl
jecxz
hlt
and
popa
je
std
fwait
push
xlat
dec
push
adc
jmp
cmp
movsb
and
cwtl
cmp
gs
cmp
sbbb
test
inc
or
mov
mov
push
xor
pop
sbb
sbb
test
add
push
hlt
push
and
jp
mov
pop
push
dec
sub
inc
ljmp
fwait
imul
sub
pop
pop
imul
sbb
adc
fcomp
sarl
sbb
sub
dec
mov
pop
cwtl
mov
pusha
es
pop
movsl
push
or
lahf
jg
pushf
pushf
xorl
ret
inc
and
sbb
push
mov
sub
hlt
push
mov
int3
aaa
cmc
mov
add
sbb
mov
dec
fstpt
mov
or
push
xchg
mov
xchg
cmpsb
jbe
xor
pop
fcoml
mov
ja
add
mov
or
add
xor
scas
xor
jl
jmp
or
sbb
push
fdivrl
jmp
into
pop
rol
ret
xor
mov
imul
andl
pop
inc
add
in
jno
add
pop
negl
mov
pop
mov
pop
mov
jg
sbb
scas
test
xor
lcall
sbb
scas
mov
out
test
xchg
test
mov
or
xchg
ja
or
and
in
adc
pop
xlat
int
out
mov
in
xchg
sahf
sbbb
sub
sbb
testb
and
insb
push
aaa
popf
cwtl
cmp
sahf
ljmp
testl
add
hlt
jecxz
ret
repz
testb
pushf
insb
mov
clc
or
rdtsc
dec
incb
testl
dec
add
cltd
inc
mov
sbb
and
xor
sti
jl
aas
mov
push
xchg
insb
cli
movsl
inc
test
add
jae
test
test
sahf
and
or
dec
jnp
inc
push
or
pop
lock
or
outsl
pop
xor
popf
lods
data16
or
cmp
mov
lods
pusha
inc
daa
and
insb
das
dec
mov
repz
jle
sub
push
stos
sub
popf
mov
mov
pop
cs
repz
or
jbe
push
jmp
xchg
mov
addb
push
push
dec
cmp
xchg
or
inc
aas
sahf
out
aaa
out
pushf
jecxz
jno
iret
push
xchg
jp
imul
sub
frstor
add
mov
push
jbe
pop
jmp
inc
xchg
mov
outsb
jp
inc
cmp
pop
cmp
aad
cs
push
lods
pop
add
ret
inc
jbe
inc
pop
aas
jecxz
sbb
cmpsl
and
or
jmp
mov
adc
lock
pusha
mov
adc
jecxz
and
jg
insl
sbbb
or
and
fwait
or
je,pn
cltd
shll
pop
or
pop
repnz
adc
push
gs
cli
in
pop
hlt
fnstcw
jl
inc
dec
pop
dec
push
stos
enter
cld
cs
addr16
aaa
mov
andl
xchg
adc
scas
jl
pop
xchg
shll
jl
jg
xchg
push
or
mov
lods
adc
sub
mov
fdiv
into
push
ljmp
mov
mov
popf
out
pushf
or
mov
mov
jl,pt
mov
sbb
pop
xchg
inc
xlat
xor
int3
xorb
xchg
fcmovbe
pop
adc
mov
pop
jg
jmp
adc
shlb
sub
or
xchg
mov
ret
mov
sub
pop
call
sbb
or
stc
andl
sub
movsb
outsb
fsubs
inc
ds
dec
dec
sbb
and
pop
shlb
mov
jge
in
mov
sub
shrb
sub
jmp
out
pop
mov
xor
divl
pop
pop
pop
outsb
add
and
lea
dec
stos
testb
pop
jge
push
inc
xlat
dec
lahf
cmc
xbegin
fldcw
mov
pop
xchg
add
in
cmc
pop
insb
stc
loope
out
sbb
cmc
sbb
dec
stc
pop
pop
daa
xor
lods
mov
mul
jmp
xchg
fstps
jecxz
shrb
mov
inc
movsl
sub
fsubs
mov
push
scas
xorb
mov
fs
enter
adc
adc
test
jb
iret
dec
ja
adc
shrb
sbb
mov
add
jo
fwait
mov
mov
fisubrs
xchg
rorl
push
dec
int3
sbb
cld
or
xchg
push
dec
mov
sbb
mov
xor
in
push
mov
mov
fstl
sbb
sub
popf
sti
js
xchg
pop
ss
sub
push
gs
in
add
xlat
add
xchg
cmpsb
adc
aad
scas
mov
movsb
sti
aam
repnz
pusha
xor
mov
pop
push
jl
jo
icebp
cmc
or
std
popf
jg
adc
xchg
jmp
sti
xchg
mov
test
stc
inc
fincstp
das
add
inc
imull
mov
aad
icebp
movsb
mov
les
adc
xlat
imul
fmuls
xchg
js
adc
movsl
daa
jle
adc
cmp
shlb
dec
xor
test
outsb
sbb
jne
icebp
pop
push
lret
and
xor
and
inc
testl
xchg
idivl
cmp
das
mov
cmp
insb
sahf
and
call
cmp
mov
pop
sahf
jle
rclb
cli
and
mov
call
leave
sub
push
lods
aam
imul
push
lds
xorl
mov
jo
popf
xor
sub
int
mov
add
lret
call
popa
lods
xorb
mov
pusha
aas
inc
push
mov
sub
ret
sar
ds
xchg
es
cmp
ret
int3
pop
out
pop
hlt
lea
cmc
bound
jmp
adc
add
push
popa
jnp
test
out
ljmp
lret
mov
sub
stos
loop
xor
jne
adc
mov
rcr
push
movsb
pop
cmp
dec
adc
ss
or
std
push
push
fld
loop
fcompl
scas
js
imul
lcall
pop
pop
fsubrs
xor
enter
cmpsb
stos
outsl
cltd
out
andb
push
inc
gs
push
cmpsb
sti
loop
xchg
les
dec
adc
ds
mov
scas
dec
daa
inc
push
sbb
inc
xchg
outsl
or
lods
ljmp
cmp
icebp
lret
lret
mov
movsb
sbbb
les
lret
cld
xor
push
test
scas
jno
dec
sub
jl
mov
jbe
arpl
daa
ljmp
inc
inc
xchg
in
rclb
sub
cld
mov
daa
or
repnz
push
cmpl
pop
cmp
frstor
jo
ss
or
jne
into
out
fs
sar
sbb
cmpsl
lods
and
adc
idivl
jae
test
hlt
cmc
xor
jbe
sub
testl
repz
jmp
sbb
fists
fwait
leave
stos
hlt
daa
push
stc
mov
pop
sahf
jne
lods
mov
pop
in
ret
sub
test
clc
js
in
lock
push
adc
sub
aas
mov
add
jmp
inc
xchg
sbb
jnp
mov
jp
lahf
int
jmp
add
loopne
nop
xor
movl
inc
cmpb
xor
iret
xchg
mov
and
fsubrl
add
int3
ret
cmp
dec
sbb
and
cmpsb
push
xor
inc
cmc
dec
mov
adc
or
fs
lods
cmp
xchg
pop
pushl
xchg
orb
pushf
ja
push
jp
add
sub
jae
jne
pushf
arpl
hlt
push
lret
mov
outsl
jle
xchg
add
jl
dec
fists
jns
lods
pop
ljmp
stos
insb
bound
stos
cld
in
mulb
leave
sbb
sarl
xor
push
mov
icebp
mov
out
stos
jnp
mov
pop
pop
mov
test
fldl
mov
dec
lods
adc
add
sbb
adc
in
inc
std
ss
xor
scas
dec
adc
jae
insb
sbb
jg
lret
setle
and
add
xchg
add
and
arpl
mov
add
xchg
pop
cli
es
mov
inc
test
mov
inc
inc
addr16
add
cmc
adcl
xchg
nop
jle
loop
and
sti
rcl
fisubl
lds
lea
jnp
dec
inc
dec
int
cld
jb,pn
and
xor
pushf
pop
adc
sbb
xor
leave
addl
in
xlat
lock
xor
test
xchg
fistpl
xchg
jnp
cli
inc
xor
movsl
nop
cltd
ffree
push
mov
xchg
push
scas
xchg
pop
and
shll
je
gs
xchg
xor
or
inc
inc
sbb
stc
xchg
jmp
lods
adc
mov
pop
or
mov
pop
adc
xor
les
inc
mov
shlb
and
sbb
push
jmp
in
mov
pop
cld
iret
sbb
jb
jmp
mov
int
mov
dec
pop
sub
xchg
xor
cmp
les
movsb
rclb
sti
xchg
bound
imul
sub
xchg
movsl
pop
xor
xor
jno
push
popf
sbb
pop
rclb
push
inc
jle
fwait
and
sahf
or
jle
popa
add
add
roll
scas
mov
imul
jb
pushf
addr16
js
push
push
js
gs
mov
enter
test
nop
xchg
fdivl
and
jns
and
and
xlat
jl
pusha
ljmp
inc
call
mov
jne
cmpb
inc
enter
icebp
mov
daa
mov
ret
pusha
pop
push
cwtl
jno
std
pop
push
xchg
pusha
pop
mov
aaa
xor
push
je
mov
jne
jb
shl
out
ds
add
pop
lcall
sbb
sub
adc
es
in
test
jae
or
incl
sub
push
or
popf
cmp
outsb
pop
lods
testl
push
mov
inc
add
xchg
repnz
xchg
repz
pusha
inc
mov
sbb
repz
mov
or
mov
addr16
xor
mov
sub
jns
into
mov
arpl
leave
add
mov
nop
mov
push
mov
mov
adc
jns
je
leave
cmp
add
mov
cmp
cli
aaa
cs
ljmp
fs
xchg
sbb
negb
xor
adc
dec
and
jbe
loope
add
loopne
push
aas
or
loopne
lcall
ret
cld
dec
clc
cmpsb
cmp
mov
out
push
mov
sub
mov
popf
clc
mov
inc
mov
out
psubq
sbb
fdivrl
add
lret
pop
cmp
jg
cmpsb
xor
data16
xchg
dec
js
jecxz
mov
xchg
lahf
adc
mov
imul
insl
xor
or
popl
fisttpll
aad
cmp
cs
mov
and
hlt
sub
cmp
je
inc
xchg
rorb
or
mov
std
lahf
jne
rorl
add
ds
pop
lods
fsubs
xor
dec
adc
fnstsw
fdivs
in
out
imul
fstps
adc
sub
add
jg
sub
jb
or
inc
sub
pop
scas
mov
sub
cli
fcompl
dec
and
test
ffreep
add
xlat
sub
mov
bound
faddl
push
xchg
xchg
jmp
mov
sbb
in
cmp
inc
into
mov
aad
fld
iret
mov
fsubrl
jl
dec
lods
push
stc
push
enter
push
sub
jb
stc
insb
mov
ret
xchg
jae
lds
ret
pop
mov
mov
or
popa
stos
fldl
xlat
fxch
sbb
int
loopne
mov
outsl
rclb
dec
cmp
add
jmp
in
stos
lea
cmp
ficoml
lret
cmp
out
hlt
fwait
adc
ljmp
mov
clc
cmc
xorl
daa
and
insb
cltd
insl
xor
mov
into
and
imul
jne
std
orb
dec
rcr
out
mov
sahf
gs
mov
adc
scas
loop
adcl
inc
mov
pop
mov
rol
inc
call
jns
dec
outsb
jne
jno
aas
test
xchg
insb
jmp
xchg
lods
scas
mov
notb
xor
negb
or
dec
sbb
and
cmpsl
mov
pushf
push
movsb
jl
sti
daa
std
push
jg
outsb
add
stos
das
test
fnstsw
sub
pushf
push
or
push
sub
jge
icebp
sbb
ja
pop
fdiv
adc
sub
stos
mov
and
mov
mov
je
mov
popa
xor
andb
lret
mov
add
aam
int
dec
push
jl
jbe
leave
lret
cmp
test
mov
jl
int
jne
jg
push
push
sbb
mov
push
sub
aaa
lods
pop
lods
mov
xchg
inc
enter
xor
sub
hlt
pop
pop
imul
cmp
in
mov
jge
push
cbtw
sbb
mov
in
pop
dec
imul
adcl
call
cmpsb
repz
je
inc
jecxz
xchg
loopne
inc
add
out
repnz
add
aam
dec
jecxz
insl
add
push
es
jge
add
repnz
in
jg
adc
cmp
stos
and
inc
shrb
lret
repz
sti
xchg
dec
dec
imull
inc
jmp
not
fstps
cmc
inc
stos
inc
add
lret
xor
xlat
dec
movsl
xchg
or
push
fisttpl
rsm
pop
clc
sbb
dec
jns
ret
test
shll
jno
outsl
mov
dec
xchg
ss
std
into
mov
dec
sub
xor
int
xchg
repz
fs
jge
cmp
outsl
inc
jg
adc
xor
clc
cmp
push
lods
sbb
pop
mov
pop
pushf
xchg
cld
dec
dec
cmp
push
stc
pop
jbe
es
out
add
or
es
outsl
push
add
and
out
mov
pushf
mov
js
movsl
and
cld
js
outsl
inc
pop
lods
pop
xchg
mov
xchg
dec
ljmp
call
cvtps2pd
movlps
xorl
jo
lcall
cmp
mov
fisubrl
adc
aaa
lret
ss
pop
push
shl
repnz
sbb
xchg
xor
dec
and
jo
flds
in
roll
xor
movsl
test
add
cmpsb
lret
sub
cmp
dec
xor
cmp
mov
aam
ror
mov
fdivs
subb
aad
ret
dec
cltd
fstps
xchg
orb
push
xchg
pop
mov
mov
push
inc
xchg
jmp
lods
test
es
aam
fmuls
mov
xchg
js
jl
idivl
push
cmp
lods
or
xlat
add
pop
sub
in
sar
mov
je
push
arpl
mov
dec
aam
cmp
dec
mov
mov
dec
popf
cli
and
iret
sub
add
int3
dec
shlb
add
jae
loop
inc
sahf
out
dec
mov
cmp
stos
in
jo
sub
sbb
ret
daa
addb
inc
jecxz
popf
in
sub
andl
cwtl
mov
or
test
pop
jnp
fs
lcall
inc
add
dec
inc
js
in
push
fsub
xchg
test
mov
rcrl
jo
inc
popf
cmc
movsl
lret
notl
sbb
xor
sbb
repz
mov
loope
jb
adc
sti
scas
addr16
loope
shrb
out
outsl
inc
add
pop
or
jge
loope
rcrb
jle
mov
imull
call
pop
dec
or
dec
jae
mov
pop
imul
cli
ja
push
stos
adc
push
sub
or
insl
and
pop
scas
fstps
fstps
pop
mov
adc
lods
xor
push
adc
js
popa
pop
pop
sub
jnp
vmovlpd
loope
lcall
repnz
std
test
xor
sbb
jae
repz
add
dec
pusha
or
mov
lcall
mulb
inc
jb
or
sarb
or
sbb
xchg
adc
mov
aaa
dec
xchg
fstp
mov
mov
leave
js
movsl
std
pop
push
jb
inc
xchg
mov
je
mov
cmp
je
ds
mov
mov
xchg
rol
sub
xor
sbb
call
cmp
ret
push
insb
pop
xchg
mov
jmp
movsl
pcmpgtw
les
hlt
andl
scas
arpl
in
fstl
bound
movsb
lret
jp
jb
ret
repnz
divb
or
pop
xchg
jbe
and
jnp
mov
cmp
jae
shr
scas
loop
lods
cmp
cmp
setl
inc
jnp
lds
bound
ret
adc
mulb
mov
dec
fldenv
nop
and
sbb
sbb
addr16
aam
pop
rcrl
movsb
pop
bound
out
nop
outsl
out
shrl
push
mov
mov
cltd
mov
ljmp
gs
lcall
jmp
push
and
js
jecxz
and
int3
push
xlat
sbb
jae
paddusw
pop
jl
mov
mov
arpl
sub
add
mov
jge
pop
cs
or
push
push
sti
jo
sub
cmp
clc
lcall
cwtl
jnp
push
jb
pop
mov
clc
xchg
ds
int3
and
out
mov
iret
pop
call
icebp
xor
ljmp
mov
xchg
ja
rcrb
loope
jge
addb
into
push
ja
scas
dec
stc
cmpsb
xchg
out
add
mov
lods
push
shrl
fbld
adc
into
push
sti
testl
push
in
pop
sbb
call
mov
dec
fcmovne
xchg
adc
and
or
add
lret
push
inc
jb
mov
xchg
xor
mov
movsb
cs
dec
lcall
arpl
cwtl
adc
sbb
mov
lcall
mov
sbbl
mov
rcl
dec
bnd
arpl
das
inc
aaa
push
xor
cmc
mov
je
lahf
fs
or
js
mov
fwait
ja
movsl
sbb
mov
out
xchg
sbb
loop
cmp
mov
sub
imul
stos
push
jg
and
push
mov
xchg
sbb
mov
push
clc
leave
fildll
in
in
stos
hlt
cmpsb
pop
mov
lcall
cmc
jg
push
pop
mov
outsb
scas
push
dec
jge
pop
lret
clc
dec
push
or
stos
push
push
adc
push
jp
cmp
sbb
int
sbb
dec
pop
or
into
mov
jmp
add
lea
jle
lods
sub
jl
ret
sarl
xchg
sub
es
sub
or
pop
outsb
xor
mov
or
inc
popf
adc
mov
push
mov
popa
dec
das
and
je
jno
dec
imul
es
iret
pop
pushf
pop
jb
das
cmp
shl
or
push
dec
xchg
sbb
clc
add
cmc
inc
stos
and
jnp
or
in
bound
push
adc
sub
xlat
sub
jne
rorl
daa
inc
faddp
dec
sub
adc
xlat
and
lds
sub
stos
add
std
fucomi
xchg
ljmp
mov
mov
add
sub
adc
xchg
xchg
sbb
iret
cmp
fdivrl
push
aad
dec
sub
lods
fstl
aam
lock
pop
sub
rclb
xor
sarl
mov
add
jns
cli
xchg
mov
xor
jb
loopne
mov
cli
push
test
sbb
push
mov
scas
rcll
in
jno
es
arpl
push
pop
mov
xchg
hlt
dec
cmpl
imul
mov
test
popf
loop
fstpl
repnz
ret
xor
shrl
add
sarl
imul
orb
in
xchg
mov
fnstenv
xchg
mov
jmp
stc
xlat
dec
incl
aas
add
sbb
insl
cmpl
or
jle
clc
inc
pop
mov
popf
mov
andl
outsb
lock
popf
enter
mov
lret
or
loopne
sbb
das
movsl
inc
enter
call
insb
sub
loopne
jmp
adc
jmp
imul
push
test
cwtl
jge
mov
or
setae
imul
ds
cwtl
shlb
or
mov
into
out
inc
or
adc
push
testl
mov
add
out
push
adc
gs
pop
pop
xorl
jb
aad
movsb
jb
mov
stos
fstpt
insb
push
and
pop
sbb
in
pop
inc
dec
sub
je
push
dec
pop
or
je
cmp
xorb
cmpl
lea
adc
ljmp
outsl
int
shll
cmp
add
cwtl
insl
xor
pop
lods
inc
pusha
jmp
xor
fistps
in
and
push
add
daa
in
lcall
cmpsl
pusha
cld
xor
add
outsb
add
cwtl
or
ret
add
and
lds
jns
rcl
mov
cmp
nop
aad
pusha
fsubrl
ja
mov
aas
fwait
mov
mov
ficoms
mov
arpl
fs
notb
jae
push
aas
jle
repnz
mov
cmovg
and
jl
pop
xchg
scas
ds
cmc
aad
js
popa
icebp
xor
mov
xchg
loop
repz
outsb
fcmovne
add
mov
sti
fbstp
pushf
add
push
ss
adc
testb
jb
lahf
xchg
mov
sbbl
stos
je
js
push
or
imul
push
lock
dec
pop
out
gs
pop
lds
lds
pop
es
jns
int
and
cmp
fwait
adc
cmp
push
hlt
mov
lods
repz
movsl
repz
subl
add
cli
cmpsb
adc
add
sbbl
sbb
sbbb
pop
mov
stos
add
xor
sub
out
fcomip
sub
xor
hlt
ja
lret
pop
cmp
adcb
les
sbb
imul
jne
add
and
test
adc
lds
pop
sbb
mov
add
or
push
shl
jmp
pop
mov
or
pop
push
loop
adc
xor
out
pushf
jmp
int
shlb
sbb
fwait
mov
jne
out
fcom
sbb
pop
fisttpll
rorb
sub
mov
xor
fs
mov
cmpsb
fcmovne
stc
scas
xor
cmp
movsb
mov
sbb
push
adc
xor
mov
jg
mov
xchg
lds
into
nop
jge
push
aaa
jecxz
xlat
adc
mov
xor
hlt
mov
sbb
or
js
push
cs
repz
popa
shlb
jbe
push
pop
mov
movsl
xchg
mov
pusha
sbb
mov
push
lods
movsb
cltd
outsb
cmc
test
and
push
adc
pop
inc
mov
xor
push
add
mov
outsl
push
ljmp
cltd
or
mov
lret
stc
les
lret
mov
nop
adc
loope
push
movsb
into
aaa
sbb
sub
stc
test
jae
mov
cmp
sub
lahf
or
sub
pop
cmp
pop
pusha
xlat
fstl
adc
sbb
daa
fs
lcall
dec
push
jae
dec
aaa
mov
add
les
lcall
and
mov
sbb
push
mov
xchg
scas
jecxz,pn
pop
xchg
aam
jne
xor
jno
out
loop
sub
and
imul
xchg
push
jmp
mov
sbb
test
pop
dec
lcall
xchg
das
movsb
mov
pop
icebp
mov
popf
sub
inc
orl
ljmp
cwtl
testl
jl
jb
std
fstps
add
mov
cwtl
repz
fldt
fs
int
xchg
jmp
cmp
push
or
lds
fwait
nop
add
aam
mov
cltd
mov
stc
and
mov
pusha
outsb
imul
push
scas
dec
push
xor
pop
mov
jecxz
lret
test
xor
xchg
enter
call
cmpsb
in
dec
ficomps
aaa
ja
divl
xor
lcall
cltd
xchg
dec
movsb
or
or
aas
sub
or
xor
gs
aam
or
fcomi
orl
pop
ja
std
jno
sub
mov
shlb
ret
ss
inc
cs
cmp
pop
fcomps
sbb
push
int
out
push
scas
les
popa
and
decb
mov
push
pop
sub
fldt
jae
or
outsb
fsts
cltd
iret
add
lahf
ret
popa
push
enter
js
popf
popl
push
shll
cmp
adc
pop
mov
orb
icebp
stos
andb
pusha
out
test
cmp
test
and
call
mov
dec
out
inc
lock
dec
jecxz
jle
dec
sbb
lock
test
das
mov
add
mov
arpl
movsb
xchg
gs
cmp
push
dec
or
cmpsb
lock
cmp
xchg
mov
fisttpl
fisubs
mov
inc
das
dec
mov
js
ret
out
or
addb
cmp
mov
ds
add
test
inc
mov
jmp
fidivrl
test
pop
mov
sub
imul
jns
mov
call
pop
cmpsl
xchg
dec
pop
loop
sub
rcll
in
pop
daa
jae
scas
push
shlb
pop
or
pop
mov
sbb
pop
test
pop
ljmp
mov
out
mov
fimull
sbb
adc
dec
cwtl
cmp
movsb
xor
ret
mov
and
jle
es
ljmp
adcb
in
push
mov
aas
xchg
mov
clc
or
and
out
cmp
fs
clc
pop
mov
insl
push
adc
out
sbb
adc
xor
popa
xor
lods
daa
insl
jne
rclb
cmpsb
jns
cmpsb
lods
jmp
sub
mov
lret
lds
xchg
testb
cmp
cmp
push
or
pop
js
fsubr
in
and
mov
into
dec
and
push
jbe
sbb
add
cli
in
xor
aad
cmp
mov
sub
sarl
out
loop
sarl
ljmp
xchg
in
and
adc
lods
mov
stos
pop
adc
adc
ja
sub
out
lea
pop
fs
daa
out
xchg
cmp
loopne
or
int3
decl
enter
cwtl
outsb
roll
jl
jp
arpl
stos
dec
in
arpl
and
lds
loop
icebp
jne
inc
pop
lods
xor
cs
iret
mov
xchg
fs
add
outsl
jmp
push
aaa
mov
jae
inc
xchg
fisubrs
es
ljmp
and
pop
mov
cmpsb
in
lcall
out
cmp
aad
lea
xor
inc
ficoml
push
enter
push
adc
mov
pop
testb
mov
insb
push
leave
mov
ficoml
ss
push
jp
lcall
jo
das
dec
dec
cvtps2pi
add
test
loopne
addl
pop
xchg
mov
and
or
dec
fwait
push
fcomps
adc
dec
scas
and
xchg
clc
mov
movsb
icebp
mov
inc
daa
cltd
orl
push
outsl
ljmp
aas
pop
add
loop
mov
das
push
cmp
aam
cmpsb
adc
add
adc
and
sti
inc
or
xchg
jp
outsl
and
mov
push
int3
scas
push
dec
mov
or
mov
jge
cs
xor
scas
aaa
std
mov
cltd
or
hlt
or
mov
jo
arpl
lea
repnz
and
imul
sub
push
jnp
mov
pop
add
in
imul
xchg
jp
sub
jecxz
aas
jno
and
mov
mov
addr16
inc
outsl
fstl
and
in
movsl
push
dec
lock
ja
sbb
and
or
and
jns
or
add
push
shl
loopnew
pushf
xor
lods
jp
lahf
xor
popf
jl
mov
adc
popa
push
xor
and
rolb
mov
mov
sub
ret
pop
hlt
mov
sbb
push
inc
stos
test
push
lcall
popl
add
pop
dec
mov
out
add
orb
pop
push
jns
mov
sbb
inc
pop
icebp
sub
dec
movsl
pop
xor
andb
push
in
outsl
stos
adc
leave
xchg
stos
adc
inc
popf
add
dec
cmp
sbb
mov
in
mov
lods
or
dec
mov
iret
stc
into
cmp
test
cmc
sti
jle
jge
js
loope
sahf
pop
ss
popa
lret
lcall
push
xchg
jecxz
pusha
fidivl
jo
or
stc
popf
cmp
sub
push
sti
ficomps
call
mov
inc
inc
xchg
arpl
cld
cwtl
dec
in
inc
sbb
jl
push
lret
add
bound
test
pshufw
mov
cld
and
push
adc
scas
pop
pop
scas
inc
inc
mov
adc
mov
mov
mov
jne
push
hlt
cmp
jns
inc
sbb
or
inc
pop
mov
scas
hlt
adc
sub
mov
push
sahf
mov
rorl
sub
outsb
lret
outsl
xor
mov
mov
cwtl
mov
enter
pop
mov
push
insb
pop
aad
movsb
dec
mov
clc
imul
rorb
shrb
int
dec
mov
ret
mov
sub
sub
mov
js
stos
dec
jnp
sub
pop
jg
test
mov
sbb
daa
lds
sbb
sbb
dec
sub
mov
callw
mov
dec
fstpl
adc
aad
sub
push
in
xchg
cmpsl
mov
pop
add
std
lcall
ror
dec
pushf
jge
call
sbb
cmp
mov
dec
sub
cmc
mov
ljmp
and
and
dec
sbb
rcrb
xchg
mov
pop
out
test
sbb
popa
dec
shl
mov
jg
xchg
or
xchg
repnz
or
ds
movsb
adc
popa
flds
push
and
xlat
sub
jle
mov
test
push
pop
push
jecxz
pop
jo
xor
aad
cmpsb
add
adc
dec
push
sbb
cmp
xor
jae
insb
push
insl
jno
or
loope
sbb
mov
pop
je
dec
ljmp
dec
pop
cltd
mov
bound
bound
leave
push
mov
popa
push
xchg
xchg
and
bound
push
nop
mov
mov
mov
sub
push
lret
push
inc
xchg
sub
cmpsb
add
push
ljmp
pushf
gs
push
rorl
fucomp
xchg
sub
push
nop
jp
jns
or
pop
pusha
clc
xor
or
dec
shll
inc
ds
or
xchg
push
mov
sub
sub
div
sub
es
data16
and
ljmp
cmp
cmp
push
cmp
imul
int
test
fdivs
out
mov
pushf
test
or
mov
mov
cmp
aam
adc
addr16
data16
outsb
into
lods
movsl
mov
xchg
and
movlps
gs
pushf
leave
dec
fcomps
inc
cmp
push
or
aas
enter
mov
ss
push
pop
aad
inc
jno
jmp
outsb
mov
push
mov
fidivl
mov
xchg
imul
lea
mov
out
jns
mov
int3
add
enter
inc
je
imul
lods
clc
adc
pop
lods
sbb
shlb
outsb
and
sbb
sarl
loopne
stos
jecxz
xchg
xchg
push
ficoms
mov
dec
pop
mov
outsb
mov
jb
pop
into
pushf
std
lods
rclb
jb
or
xor
nopl
jo
movsb
fwait
inc
or
adcl
dec
int3
lods
ja
and
jecxz
nop
orl
fsincos
in
dec
cmpsb
cmp
add
mov
rolb
push
gs
mov
lcall
xor
xchg
cs
push
sub
rol
movsb
jno
movsl
cwtl
lea
and
jp
add
pop
and
sub
fiaddl
cmp
cmc
int3
sbb
add
fwait
pop
mov
cld
aam
mov
xchg
repnz
cmp
out
add
sub
adc
cmp
sbb
push
lods
mov
xor
fisttpl
aad
add
push
push
sbb
outsl
mov
xor
test
jg
aas
sub
mov
cmp
mov
add
stos
mov
xor
xchg
repnz
jl
fwait
mov
inc
jnp
jae
shr
filds
iret
and
loopne
xor
cltd
mov
inc
xchg
sub
add
mov
push
sbb
dec
adc
adc
lods
arpl
fldcw
cmpsl
out
inc
pop
or
xor
cli
inc
cli
cmp
cli
cmp
cmp
cmpsl
push
sbbl
inc
inc
or
in
mov
scas
jb
or
and
dec
add
cmc
jecxz
das
mov
xor
fbstp
aas
test
adc
in
jle
int3
pop
insl
stc
jno
test
mov
shrb
gs
fwait
jl
pusha
adc
push
sub
lcall
sub
fmul
in
outsb
cs
sub
test
bound
add
fs
fstpl
mov
sbb
pop
shrl
subb
das
xchg
xchg
or
icebp
scas
pop
add
test
mov
stos
sti
pop
arpl
test
sub
jne
push
inc
ror
push
xor
and
xchg
xor
mov
js
inc
sahf
ret
test
add
mov
out
sub
hlt
cmc
imul
gs
filds
sbb
nop
mov
adc
movsl
sarl
gs
add
pop
sahf
stos
int
or
mov
dec
pop
test
stos
cwtl
pop
test
adc
adc
push
push
push
test
xchg
sub
pop
icebp
push
lret
lret
pop
cmpsl
test
dec
push
shlb
mov
adc
je
push
lret
in
push
cmp
sub
sbb
shrb
ret
scas
pop
pop
jne
orb
rorl
movsl
cld
sub
cli
and
jge
dec
adc
cwtl
hlt
cli
mov
push
decl
push
or
lcall
cld
daa
jecxz
and
cli
mov
int
into
stc
sub
cmp
stos
lret
insb
cmp
sbb
jge
ret
iret
inc
sbb
or
aaa
cwtl
mov
push
or
dec
rclb
call
ljmp
inc
xchg
je
imul
sarl
and
loopne
repnz
call
ret
mov
icebp
fsubr
inc
hlt
bound
mov
int3
ss
xchg
mov
adcb
mov
mov
rcrl
push
xor
mov
push
mov
leave
xchg
push
stos
loopne
mov
or
shl
std
movsb
sbb
pop
out
mov
roll
out
adc
cli
xlat
xchg
sbb
mov
scas
lcall
ss
clc
inc
jo
cmc
testb
push
mov
in
ficoms
ss
inc
sub
das
aaa
mov
daa
ja
ret
insb
xchg
jp
mov
xchg
inc
or
sbb
add
jle
xlat
mov
push
ds
mov
mov
filds
mov
jle
mov
cltd
stc
pop
jl
mov
addr16
cmpb
rcrl
test
insb
insl
xor
sbb
xor
push
cmp
mov
ret
inc
xor
nopl
inc
adc
xor
dec
clc
ds
insl
rorb
pop
jae
inc
rclb
jl
imul
adc
ss
and
lret
xchg
pop
mov
aas
dec
hlt
push
sbb
ret
sub
cld
pusha
popl
dec
xchg
inc
push
mov
sbb
pop
mov
es
js
dec
inc
adc
aad
mov
hlt
movsb
pusha
clc
outsb
jnp
xor
mov
cli
dec
sbb
cwtl
scas
aas
in
stos
ret
fnstcw
lahf
jl
adc
pop
cmp
into
lods
movsl
je
out
dec
and
xor
sbb
and
push
shlb
insb
push
sub
aad
fists
sub
xchg
xchg
mov
filds
je
negl
adc
fs
or
sbb
stos
test
lods
mov
dec
xchg
sti
add
fwait
mov
push
imul
mov
jp
xchg
out
jbe
jmp
sub
fwait
lcall
sub
daa
cltd
pop
sahf
gs
jl
js
fwait
test
popa
and
mov
ljmp
pop
jb
in
lret
in
scas
inc
fimull
fnstcw
xor
pop
sbb
xchg
inc
les
xor
adc
and
push
mov
test
mov
mov
lds
into
loopne
adc
test
xchg
repz
add
popa
stos
xchg
mov
adc
jae
enter
and
push
test
inc
int3
shll
mov
into
in
sbb
iret
push
pop
pop
jne
dec
push
mov
or
sti
aam
lahf
inc
cmpsb
jl
xchg
sbbl
sub
out
push
test
dec
push
sub
bound
sub
dec
lea
les
xor
insb
out
rcll
cmp
ret
in
mov
add
mov
adc
dec
cmp
loope
aaa
and
jcxz
add
pop
mov
mov
push
xor
inc
mov
xchg
aam
inc
jg
adc
xor
jb
pop
push
mov
lods
xchg
and
xchg
movsb
cmp
sub
dec
xchg
sub
fmull
xor
pop
shll
out
push
mov
dec
fiadds
mov
rcr
mov
jecxz
and
mov
pusha
stos
pop
add
mov
jns
add
clc
out
mov
out
aas
pop
outsl
hlt
pop
je
mov
test
jo
insl
xor
dec
imul
insb
xchg
ds
in
push
dec
lods
clc
movsb
sbb
dec
imul
hlt
inc
mov
push
popf
popf
or
xor
add
fidivs
ret
movsb
js
or
ja
push
in
dec
push
je
dec
imul
push
or
mov
and
cmp
bound
cmp
pop
lods
push
inc
mov
cwtl
adc
movb
jns
push
packsswb
inc
add
push
movsl
jg
mov
mov
imul
pop
lret
aaa
ljmp
mov
int3
mov
mov
adc
outsl
add
pushf
ja
clc
aas
dec
xacquire
and
cmp
aas
aad
xor
adc
in
rcr
int
jns
dec
pop
pop
shlb
ss
mov
xchg
dec
mov
or
fsubs
fdivrs
sbb
mov
jmp
adc
sub
add
repnz
sub
popa
int
out
subl
inc
rorb
es
daa
jmp
out
cli
mov
dec
inc
mov
mov
or
cmp
mov
dec
jo
shrl
cmp
cmp
pop
sahf
mov
ret
jecxz
js
outsb
shlb
xor
pop
mov
dec
adc
xor
and
mov
inc
adcb
pop
stc
fsubl
aaa
push
jle
ss
sub
out
mov
outsl
dec
jl
loope
clc
sbb
imul
sbb
nop
pop
rcrb
clc
cld
bound
or
mov
xchg
cmp
mov
mov
roll
or
xchg
dec
divb
popl
repnz
fldl
add
xlat
int
in
fimull
push
rol
sbb
cmp
jecxz
je
nop
lods
xor
test
sbb
outsb
and
jle
test
jp
xor
cmp
arpl
lcall
mull
test
push
loope
loop
cltd
stos
jg
inc
lcall
das
fimull
xor
cmpsl
inc
fs
jae
sti
loopne
cmpl
cmpsb
cmp
xchg
mov
fstps
or
sub
dec
fbld
rolb
fsubl
insb
scas
clc
sub
shlb
stos
adc
jb
in
or
jge
insl
mov
inc
and
dec
dec
mov
pusha
add
mov
dec
aad
cmp
push
or
flds
inc
mov
push
mov
jecxz
fwait
sahf
imul
jmp
cmp
cwtl
adc
mov
push
sbb
xlat
dec
gs
jl
outsb
xchg
dec
shll
str
mov
gs
jne
testl
dec
inc
cmp
jno
jb
ss
xchg
cmc
push
mov
mov
hlt
push
in
pop
mov
push
insl
outsb
divb
stc
jge
inc
mov
arpl
and
mov
add
dec
pop
jae
pop
shlb
push
fisttps
dec
pop
mov
clc
test
xor
outsl
into
es
dec
pop
sbb
xchg
push
aas
mov
popf
add
inc
lock
mov
adc
sti
xchg
psrad
testl
xor
jo
sar
and
jae
ds
icebp
mov
call
loop
mov
stos
je
ss
sub
pop
ss
cwtl
mov
rcrl
insl
cld
clc
fnstenv
out
push
and
inc
sub
sbb
xchg
lret
or
cmp
stos
ret
das
test
das
ffreep
pop
or
incl
push
std
das
aad
or
dec
push
test
and
pop
or
and
add
push
fmul
shl
addb
test
es
outsl
lcall
movsb
fidivl
dec
lcall
enter
popa
pop
std
xchg
or
subb
add
xorl
add
mov
fdivrs
mov
push
out
enter
jns
cmp
sub
shr
insb
jbe
jg
lds
divb
gs
push
push
dec
pop
iret
or
push
jnp
fmuls
add
ret
jle
fcompl
xor
jecxz
sub
xor
jg
aas
cmpsb
push
sbb
sbb
addl
mov
sbb
jns
jecxz
hlt
sar
mov
outsb
lds
push
enter
cmp
jno
mov
cmp
dec
inc
jl
mov
mov
sub
mov
add
push
je
mov
inc
mov
jle
inc
mov
or
mov
push
sahf
in
xchg
into
jbe
xchg
xor
dec
popf
iret
loope
jnp
inc
xlat
mov
scas
ret
bound
bound
fwait
xchg
fs
imul
stos
cmpb
shlb
push
push
sub
cmp
outsb
mov
xor
stos
test
and
fadd
cmp
lahf
sbb
hlt
mov
call
mov
subl
inc
int3
sbb
mov
cmp
test
push
loopne
test
sbb
fucomi
sahf
insl
out
mov
scas
pop
das
out
shlb
and
cmp
xor
jb
lahf
push
shl
mov
adc
nop
xor
mov
scas
push
insb
jmp
inc
xor
mov
loope
popf
daa
mov
test
and
inc
jno
adc
lcall
sarl
push
adc
mov
imul
xchg
xchg
lock
jp
sub
daa
daa
sub
enter
push
aas
out
push
insb
inc
mov
fiadds
sahf
adc
mov
cmp
cmp
test
nop
lock
jae
sahf
stos
lods
xchg
test
test
add
mov
jnp
xchg
cmpsb
sub
outsb
push
in
adc
mulb
mov
fiaddl
cmp
add
shll
pop
clc
movsb
jns
fs
repz
insb
scas
push
add
jo,pt
adc
loopne
testb
mov
in
pusha
jb
sub
je
test
aam
addr16
jo
scas
push
int3
enter
rorb
cmp
ss
and
stos
stc
movsl
and
leave
push
stos
fdivrs
je
jecxz
xor
jg
test
mov
adc
pusha
aaa
mov
jno
push
mov
sbb
sbb
rsqrtps
loope
inc
and
daa
mov
adc
and
inc
sbb
sbb
test
negb
mov
cmpsb
jne
sub
int3
pushf
push
cli
fcomi
std
hlt
fucom
cli
mov
push
test
pop
lds
lods
pop
inc
cltd
outsb
cli
push
aaa
pop
inc
xor
xchg
in
cld
lret
mov
adc
insl
les
imul
and
jo
adc
ret
mov
lock
adc
push
sub
in
adc
lods
nop
gs
popa
rorl
mov
fsubr
adc
fdivrl
and
jmp
test
push
jne
mov
and
lahf
mov
push
jg
cli
xchg
pop
cmp
xor
movsb
xchg
mov
fstpt
pop
adc
jp
jae
mov
cs
lea
into
fs
dec
sbb
fisubl
popf
dec
sahf
aam
outsb
sbb
inc
sub
mov
xchg
iret
or
out
imull
data16
cmp
cmp
in
pop
test
call
adc
jge
test
mov
out
pop
stos
sahf
push
pop
leave
shr
pop
and
loopne
or
jae
cmpsl
cmp
test
dec
stos
cld
fmull
inc
insb
aaa
fwait
adcb
orb
lea
sbb
ljmp
jne
lods
add
nop
loope
fwait
mov
and
pop
and
adc
ror
cld
mov
cltd
or
iret
rcrb
subl
jl
mov
inc
xchg
inc
and
lahf
push
in
jle
mov
fimuls
push
pop
int
mov
insl
fimuls
mov
in
add
pop
stos
in
dec
lahf
sahf
mov
iret
and
inc
pusha
xor
mov
adc
xor
lea
in
sti
ret
je
ret
mov
mov
leave
inc
adc
gs
mov
pop
jmp
adc
in
je
int
mov
cmpsl
pop
mov
mov
sahf
movsl
jbe
mov
and
dec
push
shl
sbb
sub
jmp
fisubl
inc
call
ret
xor
cmp
dec
jb
inc
inc
and
dec
rcrl
jmp
pop
pop
jge
or
mov
pop
xor
push
and
in
dec
rclb
push
andb
fsubrs
pop
stc
mov
xchg
mov
jbe
in
sbb
and
scas
mov
in
cmc
aas
clc
lahf
in
jbe
and
stos
jb
pushf
mov
cmp
adc
add
out
in
aas
and
loop,pt
mov
pop
sub
lcall
fidivrl
cmpsb
gs
mov
pop
xchg
jb
push
inc
dec
mov
dec
xor
xchg
je
ja
popf
cwtl
jge
repnz
imul
int3
andl
xor
into
xchg
roll
sub
out
jno
jge
pop
aas
insb
sti
pop
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
.byte
pop
aaa
inc
loop
xchg
cmpsb
mov
push
mov
dec
inc
mov
mov
clc
es
add
fwait
ds
sub
jmp
and
jns
out
dec
mov
jle
or
bound
es
pop
dec
fdivl
mov
aam
xor
dec
xor
sbb
iret
lods
out
ret
imul
or
in
jne
xchg
jge
xchg
mov
shlb
push
nop
jg
sub
push
push
cmc
jp
inc
add
bound
scas
or
lods
mov
orl
cmp
insl
jo
jno
ret
mov
dec
cli
mov
dec
add
dec
outsb
sub
mov
adc
std
or
or
cmp
add
pop
add
sub
popf
inc
in
xlat
inc
pop
lret
test
pop
repnz
cltd
out
lret
xchg
cmp
lods
pop
call
jbe
push
xchg
xor
fsubrl
add
test
das
call
rcr
cmp
xor
insb
sbb
rcll
in
cmp
xor
rcl
jae
popf
inc
out
insl
push
sbb
leave
and
outsb
cmp
and
pop
sub
mov
inc
repz
mov
pop
js
repz
rolb
adc
dec
lcall
mov
push
xchg
push
lds
adc
shlb
jle
fistps
mov
xchg
pop
adc
les
cmp
aam
mov
sub
mov
adc
sub
fbstp
sarl
mov
jge
orb
cmpsl
insl
dec
adc
push
in
or
repz
or
adc
xor
xchg
adc
and
sahf
es
jecxz
mov
lahf
popa
mov
jns
or
aaa
pop
ljmp
jge
out
cltd
mov
int
dec
fcompl
jns
mov
push
or
ss
iret
and
cmc
clc
pusha
dec
nop
cmpsb
sub
or
mov
cmpsl
push
and
pop
popa
mov
clc
pop
insb
ficompl
test
xor
xor
stos
xchg
std
outsb
pusha
test
out
push
lods
imul
push
repnz
or
sbb
add
jmp
dec
cld
push
sub
dec
das
jbe
xor
lock
jns
aaa
push
jmp
mov
jbe
aam
push
out
and
sub
stos
divl
sbb
push
pop
ret
dec
mov
inc
lods
sbb
adc
cmp
leave
in
addb
popf
sbb
enter
xor
hlt
cmp
out
jp
sub
test
idivl
or
dec
mov
out
lock
push
mov
sub
dec
xor
fiaddl
sarl
ljmp
es
in
sbbl
out
cmp
mov
pop
add
mov
sbb
call
add
out
sub
add
dec
sbb
or
push
repnz
mov
fnstenv
mov
mov
sbb
xor
mov
idivl
push
dec
fidivs
loopne
or
shl
testl
and
xacquire
pop
aas
xor
mov
ds
pop
mov
lea
movsb
pop
jae
mov
sub
add
mov
scas
jl
add
leave
ljmp
cmp
aam
and
outsb
inc
cmp
cmp
mov
outsl
adc
cmp
xor
xor
in
dec
cld
sub
fisttps
cs
fnstcw
mov
add
je
mov
inc
and
mov
call
js
fildll
adc
push
xor
pop
add
vmovlps
cmp
mov
mov
cwtl
stos
xor
xchg
nop
xchg
xlat
dec
or
popa
ljmp
push
testb
ss
aad
or
stc
out
les
jle
cmp
xor
repz
jbe
push
insb
lcall
hlt
push
xor
xchg
sbb
mov
stos
lds
add
mov
sbb
movsl
fisubrs
insb
dec
mov
in
or
push
test
dec
movsb
add
xchg
and
jle
dec
lret
mov
mov
sub
xor
stos
lods
or
into
jnp
or
jg
shlb
stc
rorb
lahf
hlt
insb
adc
sbb
pop
hlt
into
adcb
mov
xlat
mov
or
pop
jecxz
mov
sbb
fidivs
mov
sub
lods
loopne
js
push
sbb
cltd
add
fisubl
jmp
inc
sti
clc
jae
lock
daa
push
out
test
in
pop
jae
cmp
adc
cmc
lahf
movsb
mov
lods
inc
out
ss
dec
add
xor
adc
or
and
mov
repz
imul
imul
out
adc
lock
inc
repz
int
push
mov
push
cmp
out
mov
popa
popa
xlat
rorl
das
cld
jl
subb
mov
cld
xchg
cmp
clc
dec
mov
roll
jnp
cs
xchg
leave
pop
testb
jnp
mov
int
lock
fs
cmpsb
ret
daa
and
dec
dec
push
nop
cmp
test
out
push
xchg
aam
pop
adc
insb
mov
cltd
pop
into
cs
inc
or
or
push
iret
jne
addl
in
roll
jecxz
jbe
mov
mov
in
jae
add
xor
jmp
xchg
jae
push
insl
pop
fnstsw
into
sbb
stc
mov
cmp
iret
mov
push
jg
cltd
xlat
jae
pop
sub
add
push
xor
psubsb
cld
xchg
shlb
and
and
sti
dec
xchg
ljmp
test
lds
or
add
jg
fidivrl
xchg
out
xor
mov
dec
adc
sarb
arpl
mov
pop
inc
xor
out
lahf
dec
dec
data16
mov
xchg
jge
xchg
adc
rol
cmp
mov
cltd
out
in
inc
aaa
cmp
mov
insb
add
push
xlat
es
popa
stc
aad
sbb
cmpsl
cmp
cmp
mov
mov
jbe
loope
adc
or
rcrb
xchg
cmp
in
cmpsb
add
xchg
add
adc
lods
es
cmpsl
push
divb
sbb
repnz
fldl
pop
loopne
test
cwtl
pop
in
shl
aam
push
jnp
push
xchg
or
inc
fldt
dec
cmp
dec
mov
cmpsb
jp
add
mov
lds
jecxz
lret
cmp
inc
pop
cwtl
ficomps
mul
jp
aam
xchg
mov
dec
jp
or
mov
pop
xlat
cmpsb
mov
shr
dec
fsubl
sahf
mov
rcrl
rorb
movsl
in
sahf
clc
roll
arpl
hlt
in
pop
dec
xlat
arpl
xchg
lcall
mov
mov
decb
imul
mov
pop
xchg
jno
test
add
sbb
imul
lahf
push
mov
cmp
bnd
push
sbb
mov
add
icebp
addr16
mov
push
stc
ljmp
fmull
push
int
jecxz
push
xchg
fmull
lcall
sbb
mov
sub
fs
dec
sbb
sbb
dec
and
push
add
std
daa
aaa
pop
xor
repz
mov
cs
xchg
dec
mov
mov
jecxz
hlt
cmc
std
lods
adc
push
push
dec
out
add
xor
or
mov
into
add
ret
leave
pop
push
std
pop
cmp
aas
push
jg
in
shlb
pushf
test
jns
mov
push
es
dec
fdivp
pop
dec
in
aad
in
xchg
or
mov
cmp
test
xor
jno
pop
lret
mov
and
daa
fsqrt
mov
dec
push
push
js
addr16
rorb
in
ret
cmp
sbbb
inc
or
adc
mov
and
cmpsb
popf
push
cmpsl
mov
mov
adc
scas
icebp
jmp
in
lods
ljmp
mov
push
add
leave
jmp
push
mov
cld
stc
pushf
sbb
jbe
or
out
out
jbe
push
into
stos
mov
outsb
mov
enter
aad
add
mov
inc
sbb
xchg
lcall
ficoms
fwait
sti
out
xor
aad
mov
loop
xor
filds
mov
xchg
jnp
lret
mov
fsubrl
test
cmp
jns
pusha
icebp
jb
shl
dec
frstor
es
movsb
test
js
push
mov
outsl
in
push
mov
cmp
push
push
imul
adc
idivb
sbb
std
cld
pop
stos
imul
mov
mov
dec
test
xrelease
xor
fiadds
call
repnz
sub
inc
or
adc
inc
pop
test
pop
pop
cmp
stc
hlt
je
sbb
repnz
in
mov
sbb
test
xchg
repz
fidivs
cmp
fwait
out
sub
lds
mov
sbb
ret
cmc
test
lret
push
dec
pop
sub
testl
sub
imul
inc
mov
cmp
repz
mov
adcl
push
sub
jl
mov
insb
push
and
xchg
cmpsl
arpl
stos
xchg
fwait
shl
and
stc
loop
xchg
loop
adc
push
pop
dec
sti
hlt
or
cmpsl
dec
ss
repnz
iret
cs
in
jmp
fnstenv
xchg
sub
fchs
inc
dec
lcall
into
push
movsl
lcall
add
in
add
inc
out
repz
int
sbb
adc
push
sbb
cmp
and
mov
jnp
pop
pop
ret
btr
mov
jb
xchg
and
jno
call
or
aaa
xchg
jge
in
bound
aaa
cmp
push
sub
xor
push
jmp
jns
int
insb
repz
mov
repnz
addb
and
int
sbb
pushf
pop
in
outsl
cmp
popa
inc
into
cmp
sub
out
cmp
push
ds
scas
jl
push
cmpsl
mov
shlb
sbb
in
jmp
add
mov
pop
and
cmp
push
sbb
and
in
or
mov
cld
mov
pop
fsubp
add
mov
lret
fdiv
mov
mov
xchg
add
mov
push
mov
pop
xchg
push
xlat
jne
jno
movsb
cld
sub
xor
fdivrl
jmp
jnp
pop
pop
pop
imul
pop
cmpsl
mov
repz
adc
add
inc
or
outsb
adc
sub
mov
dec
fwait
out
aad
sub
cld
jmp
mov
arpl
and
jl
xor
imul
mov
test
mov
into
or
jl
lcall
lahf
scas
xchg
mov
lcall
xchg
gs
dec
push
gs
jecxz
int3
enter
repz
inc
fisubrl
jno
lea
sbb
cld
popaw
jbe
imul
sub
leave
xchg
adc
xchg
hlt
push
xlat
gs
ljmp
repnz
enter
sbb
jnp
cwtl
mov
mov
imul
pop
mov
shll
subl
push
sarb
int
dec
das
inc
dec
enter
shrb
stos
lret
dec
sub
cwtl
jl
rcrl
jns
xor
and
ljmp
mov
push
iret
aad
in
push
stos
ja
adc
stc
int
jne
jmp
jmp
icebp
xor
mov
push
ljmp
and
into
cmc
cmpsb
pop
popa
lret
loope
dec
insb
push
inc
in
sub
or
loop
ret
shrb
scas
nop
adc
mov
xor
cmp
sbb
aas
movsl
pop
pop
fwait
push
mov
xchg
test
gs
xchg
lea
cmpsb
jbe
in
xchg
aaa
xlat
out
adc
adc
sarl
add
inc
sbb
fisttpl
mov
adc
imul
cmp
lds
repz
jl
inc
push
lahf
jmp
call
and
loopne
dec
out
mov
or
sub
aas
push
jnp
fsubl
sub
xchg
mov
icebp
psubsw
push
cmp
repnz
in
xor
push
and
movsb
mov
and
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
.byte
pop
dec
dec
aaa
xor
inc
mov
or
sbb
js
xchg
ljmp
xor
int
mov
jle
mov
lods
clc
paddusb
mov
sbb
inc
push
ret
test
mov
mov
mov
bound
insl
xchg
mov
stos
adc
mov
mov
cmc
add
mov
dec
mov
sbb
call
outsl
mov
sbb
fdivrl
cmp
cmp
mov
push
mov
jb
adc
lcall
cmp
mov
push
or
lods
sub
cld
sti
mov
imul
cmpsb
ret
imul
dec
mov
wbinvd
loopne
or
dec
test
test
lret
in
xchg
sub
push
mov
xchg
test
sahf
add
shl
rolb
lods
test
sub
cmp
les
outsb
and
imul
xchg
or
pushf
lods
imul
jbe
movsl
add
call
or
pop
lcall
mov
pop
xor
repz
shr
jb
insb
sbb
imul
addb
and
pop
inc
jns
adc
push
jno
jb
in
sahf
mov
enter
les
out
aaa
push
sti
fbld
adc
dec
pop
push
ret
rcrl
adc
mov
or
sub
jl
ret
outsb
icebp
cmp
and
dec
mov
cmp
lods
pop
xor
sbb
jp
aam
mov
idivl
jbe
popf
and
inc
dec
sbb
sub
xor
movsl
dec
xchg
push
xchg
or
int
pop
inc
cmp
push
mov
imul
jl
adcb
jmp
add
mov
xor
dec
arpl
xor
scas
pop
inc
fisubrs
cmc
hlt
xchg
out
jns
sub
out
fdivrs
mov
dec
push
lret
cwtl
testl
pop
dec
push
orl
sahf
loope
cli
mov
add
adc
test
and
cwtl
pushf
inc
enter
sti
mov
call
test
sahf
xchg
movsl
add
ret
push
pushf
into
sub
dec
or
sub
shrl
fwait
dec
loopne
xchg
cmp
hlt
test
lcall
movsb
and
jns
push
ljmp
lret
pusha
xor
test
adc
push
mov
sub
roll
mov
je
cltd
inc
xor
test
rclb
push
mov
fwait
sbb
mov
xchg
inc
ds
xor
mov
cld
sbb
xchg
dec
ret
clc
ja
test
imul
dec
ficomps
ljmp
add
fldcw
xor
xor
push
out
dec
outsl
or
sahf
push
into
test
insl
stos
testb
test
sahf
adc
inc
insl
jae
in
in
std
pop
push
add
aam
jae
je
pop
and
imul
dec
xchg
or
mov
iret
xchg
cmp
xor
imul
xor
fldt
sti
mov
cmc
aaa
push
scas
lds
shlb
fisubrs
shlb
push
jmp
loopne
out
test
sbb
cmp
leave
mov
into
nop
sarb
mov
jl
repnz
in
push
jne
jne
mov
or
and
enter
data16
daa
jne
pop
or
int3
mov
mov
cmp
ret
mov
pop
adc
popl
ret
pop
mull
fdivrp
mov
outsb
pop
push
icebp
xchg
leave
addr16
aad
sbb
dec
xchg
dec
jnp
nop
xor
dec
jo
jnp
and
lock
mov
inc
sarl
jne
call
push
imul
flds
ret
jmp
add
les
les
ja
ror
jae
ljmp
ds
mov
push
scas
cli
rcrl
xor
lea
mov
loope
dec
test
imull
imul
imul
dec
hlt
int3
or
mov
xchg
sbb
dec
mov
lret
addl
mov
pop
and
push
rorb
jno
in
or
adc
jle
mov
mov
inc
xchg
push
mov
or
movl
imull
leave
inc
shl
pop
mov
les
mov
cmp
popf
lds
xchg
jge
mov
rcl
lahf
call
jbe
lea
enter
js
sti
mov
push
and
and
mov
push
mov
pop
adc
sbb
adc
aam
and
push
xchg
out
mov
bound
popf
rclb
lret
cmpsb
cmp
arpl
lea
mov
cltd
lods
jmp
bound
pop
movsl
xchg
out
insb
mov
mov
jbe
mov
out
dec
jae
outsl
test
pop
cmc
fiadds
xor
gs
jae
mov
rcll
lret
mov
xor
nop
lods
jge
movsl
subb
add
hlt
inc
ficoms
mov
das
mov
ljmp
cltd
orl
lret
mov
bound
adc
in
sub
shlb
popf
inc
hlt
mov
xchg
das
sbb
bound
bound
repnz
fnsave
push
dec
scas
jb
inc
pop
lods
lods
pusha
jg
mov
lret
leave
fiaddl
sbb
cmp
or
adc
xor
pop
in
data16
js
push
shlb
stos
repnz
or
test
adc
inc
sub
adc
clc
sahf
jle
pop
stc
sbb
cmp
jecxz
cmpsl
pop
mov
mov
cld
add
jae
bnd
std
les
xchg
mov
dec
adc
cmp
cmpl
ret
ds
fisubl
ljmp
scas
cltd
xlat
cwtl
out
stos
mov
xor
or
dec
inc
stos
mov
movsb
xor
sub
mov
mov
sbb
pop
push
sub
pop
outsb
jno
lods
movsb
sbb
movsl
lahf
dec
enter
insl
dec
dec
mov
sub
and
ds
inc
leave
push
cwtl
pusha
xchg
test
sub
rclb
adc
pop
fnstcw
in
jbe
jge
inc
lods
jo
mov
mov
jle
jecxz
imul
inc
jo
cmp
or
push
test
cltd
mov
jns
pusha
mov
popa
xor
cmp
movsb
andl
mov
lret
cli
sbb
mov
pop
nop
mov
mov
jl
sub
or
jnp
gs
mov
test
sbb
and
ja
ljmp
xor
cmp
scas
xchg
push
mov
sbb
adc
inc
movsb
pop
jmp
add
dec
lahf
subb
fwait
dec
in
fisubs
stos
adc
push
add
jb
fsubs
jge
and
jb
cmpsl
jg
cmc
icebp
leave
mov
ret
mov
cmp
jae
sbb
xchg
in
adc
and
sub
sub
inc
stos
pop
lret
nop
int3
out
clc
je
and
pop
push
or
xchg
mov
arpl
sbb
xchg
xchg
lock
enter
in
sbb
xchg
cmp
xor
lahf
insb
jp
sbb
xchg
sbb
jnp
out
mov
rorl
sbb
adc
sub
pusha
pop
pop
mov
mov
add
inc
or
xor
gs
dec
xchg
daa
dec
and
cmp
popf
aaa
aad
add
pusha
imul
xor
lcall
ret
add
push
sub
and
mov
fisttpll
fsts
lahf
pop
mov
jo
jnp
pop
push
dec
pop
push
outsl
cmpsb
xchg
mov
lods
mov
fwait
cltd
sti
cmp
dec
das
push
mov
mov
hlt
lcall
in
lods
lss
mov
cltd
jmp
mov
jbe
add
jae
int
pop
push
jo
jge
ret
and
das
lcall
aaa
mov
mov
mov
ja
sub
call
cld
data16
add
nop
cmc
in
cmp
jnp
imul
jne
adc
fwait
cmp
fnstenv
out
pop
or
ret
pop
xorl
lret
movsw
or
inc
and
stos
loope
negb
jg
pop
mov
jl
push
mov
mov
inc
repz
xchg
mov
das
shr
mov
fndisi(8087
int3
call
sbb
dec
cmp
push
lock
test
nop
jmp
ljmp
test
xor
test
scas
sbb
je
or
not
xchg
pop
mov
inc
mov
pop
repnz
lret
cmc
xlat
es
mov
jnp
pop
pop
dec
rolb
mov
pop
stc
jmp
and
loop
mov
jle
or
xchg
inc
sub
dec
fsubrs
ljmp
ja
outsl
mov
aad
adc
cli
pop
and
das
mov
xchg
fsubrp
aam
jge
test
jno
xor
call
adc
cmp
scas
mov
mov
sub
movsb
and
hlt
and
jns
mov
orl
insl
sub
or
es
rcl
popa
dec
adc
mov
mov
out
int3
xorl
mov
nop
xor
popf
imul
js
data16
movsl
hlt
mov
das
sub
pop
sub
loop
jle
adc
mov
shrl
pop
popf
cmp
push
lods
mov
enter
sbb
ret
inc
ficomps
xchg
pop
int3
adc
ss
aad
jne
negl
mov
aaa
outsb
ljmp
es
adc
pop
fisubs
jl
and
inc
data16
push
adc
jb
sahf
enter
ds
test
idivb
xor
ds
mov
mov
sbb
outsl
lret
cmp
mul
or
add
arpl
sbb
in
and
js
mov
mov
and
jbe
jle
fists
sarb
push
stc
jp
imul
pop
in
mov
add
mov
stos
inc
popf
icebp
jo
push
incl
insl
sub
bound
scas
shr
das
andb
mov
nop
rcr
or
loope
sbb
jne
lea
sbb
pop
cmp
push
das
es
shll
jmp
ss
imul
sbb
arpl
inc
das
clc
sti
push
cmp
out
sub
xchg
push
popf
lods
fistpll
loop
adc
jbe
in
pop
sub
dec
pop
jne
dec
stos
cmp
stc
test
sar
test
or
and
sbb
cmp
cld
rorb
jmp
cli
pop
pusha
lea
pop
cmp
lret
repz
inc
or
cmp
xor
push
nop
adcl
cs
dec
or
push
clc
pop
out
cmp
xchg
loop
mov
sbb
xlat
mov
pop
jg
les
cmpl
lds
adc
int3
pop
jae
fdivl
clc
repz
cwtl
lock
pop
and
imul
shlb
cmp
pop
fst
pop
fs
inc
andl
hlt
cmp
call
je
jecxz,pn
or
es
and
cld
inc
pushf
dec
aaa
int3
and
lock
sub
jne,pt
loope
jp
decl
jg
scas
rcll
dec
movsl
mov
or
lds
andl
inc
insl
fisttpl
xchg
mov
add
xchg
lret
mov
pop
sti
inc
mov
subb
xchg
frstor
icebp
cmp
jbe
jmp
in
dec
dec
lods
sbb
cltd
sub
xchg
lods
fistl
pop
outsb
outsb
sub
in
cmp
mov
or
adc
mov
xchg
pop
inc
fstpt
clc
nop
add
out
push
scas
lds
mov
adc
scas
ds
xchg
sbb
aaa
psubusw
rol
fistps
rolb
jbe
xor
fcompl
lods
and
jbe
fsubp
sbb
mov
icebp
and
inc
aas
mov
mov
test
push
int3
icebp
loope
leave
adcl
leave
xor
mov
xchg
lds
mov
mov
imul
aam
adc
pop
jmp
xor
out
pop
add
push
push
add
push
into
xorl
ds
mov
mov
arpl
adc
sub
loop
gs
inc
aaa
andb
nop
mov
and
push
sub
lcall
pop
shll
dec
jbe
int
outsl
movl
mov
lret
and
cmp
test
xor
jae
daa
add
xor
cmp
or
lods
sti
dec
jp
imul
mov
cmpl
xor
subb
inc
out
aas
ret
jae
inc
mov
shll
fucomp
mov
movsl
mov
xor
dec
pop
xchg
jmp
rcrb
push
push
add
mov
jnp
jl
cmp
cltd
ds
bound
cmpsb
sbb
int
xchg
xchg
xor
mov
add
or
adc
or
cld
jae
jno
sub
int
add
sbb
lcall
ljmp
push
inc
pop
sbb
or
pop
insl
lea
lods
pop
cmp
pushf
adc
rcll
mov
ljmp
and
xchg
jmp
inc
xchg
ds
shll
ds
je
xor
adc
add
or
cmp
push
daa
repnz
cwtl
xchg
xor
call
jg
dec
mov
mov
xchg
std
xchg
mov
test
in
mov
lods
les
adc
add
jg
ret
xor
ret
xor
fmull
lret
mov
mov
sahf
mov
loopne
sub
movb
lahf
popf
push
popa
lcall
fldl
dec
push
push
aam
pusha
push
or
test
or
pop
cwtl
int3
aas
sub
addb
xor
jne
add
int3
cmp
add
das
push
jae
test
sbb
mov
xor
and
loopne
mov
imul
pop
loopne
lret
fistpl
jns
in
xchg
fdivrs
je
es
inc
or
bound
xor
mov
dec
push
std
mov
adc
pop
or
adc
mov
mull
xchg
pop
shlb
mov
or
jle
imul
jne
ja
out
lea
inc
add
cwtl
or
inc
mov
mov
xchg
or
loop
sbbl
aaa
arpl
loopne
cltd
in
stos
rcrb
pop
xchg
clc
mov
imul
cmp
mov
lret
stos
lahf
fstpt
add
xor
xorl
mov
clc
stc
jp
call
and
fisubl
inc
lret
xor
jnp
xchg
cwtl
inc
mov
inc
sub
cmp
testl
xor
lea
ljmp
movsl
cmp
rcrl
hlt
lahf
and
add
lcall
sub
arpl
and
mov
pop
jns
add
sbb
adc
jno
les
rcrl
int3
movsb
xor
sahf
xchg
dec
sbb
orl
mov
insl
push
xchg
pop
addr16
mov
mov
mov
outsl
fwait
popa
rcr
bound
and
inc
pop
mov
mov
je
loope
out
icebp
shl
and
cmc
out
lea
std
add
outsl
dec
or
jo
inc
pop
sbb
pop
out
and
aad
aad
pop
cwtl
cmova
hlt
push
push
pop
pop
mov
adc
cmpsb
pop
push
aas
cmp
cli
bound
cmc
ljmp
lods
pop
mull
xchg
lret
mov
inc
mov
and
or
dec
sub
imul
jb
pop
mov
ret
pop
call
cmp
sbb
xchg
inc
fcompl
ss
lods
int3
stc
adc
jg
push
enter
in
jg
sub
xchg
dec
ds
pop
dec
xor
lcall
jmp
mov
sbb
pop
test
cmp
lret
fsubs
inc
stos
jae
sub
mov
bound
imul
out
mov
xchg
jns
daa
dec
xchg
rcl
sbb
repnz
cld
ret
loope
in
mov
and
fnstenv
cmp
cmpl
in
xor
pop
mov
add
cltd
adc
xchg
fadd
xor
inc
sbb
cmp
sbb
cmp
dec
into
dec
imull
stos
inc
jl
aas
std
out
imul
iret
push
sub
jno
and
jge
add
adc
dec
pop
jne
lahf
lret
mov
pop
mov
add
xor
imul
cmp
lea
jno
pop
pop
mov
jge
movsl
sub
cld
mov
scas
jns
loope
mov
nop
clc
incb
nop
cmpsb
sub
std
add
clc
or
and
pop
leave
test
and
jns
filds
pop
sbb
xchg
push
sub
jne
inc
dec
mov
mov
test
push
pusha
pop
sahf
es
out
cmpsb
sbb
scas
pop
push
cmc
leave
icebp
cmc
push
jno
faddl
pop
les
add
pop
mov
dec
ret
aam
leave
xchg
ret
jecxz
dec
cltd
jl
adc
xor
jne
add
bound
xlat
fs
je
inc
shrl
mov
sbb
daa
xor
adc
int
mov
and
lea
xor
ret
incb
subl
xchg
shr
jle
xchg
lret
xchg
adc
push
mov
shrl
or
je
out
pop
pusha
dec
jne
dec
cli
daa
jecxz
inc
popa
lret
lret
shrl
push
stc
shrl
mov
xor
mov
test
sbb
pop
jo
hlt
fwait
int
daa
test
dec
and
inc
mov
leave
mov
cmpsb
cwtl
xchg
lea
push
inc
add
cwtl
bound
xchg
sbb
aaa
fistl
js
sbb
popa
and
decb
xchg
fisttpll
mov
mov
rolb
push
xchg
cmp
test
pop
gs
loopne
push
dec
scas
test
shll
push
xor
and
stc
bound
data16
dec
ret
outsb
rcrl
aad
rcll
test
or
neg
aam
ljmp
cmp
mov
sbb
jb
pushf
lods
divl
xor
call
mov
loop
mov
popf
push
jl
lds
or
mov
test
rcrl
add
dec
lahf
imul
push
or
mov
das
or
push
fsubrs
and
loopne
xor
mov
jp
push
in
or
fidivl
in
mov
mov
in
adc
les
fdivrs
pop
iret
outsl
lock
shll
cmc
out
pop
push
decb
mov
pop
push
aas
mov
mov
sbb
dec
test
xchg
fmuls
leave
int3
or
mov
cmpsb
sub
xor
inc
scas
lds
push
and
push
pusha
ds
in
inc
ss
push
inc
push
xor
cmp
xchg
dec
jg
stos
sub
and
jp
inc
loop
dec
frndint
or
cltd
jge
into
lock
out
lods
xchg
and
jae
insl
cmp
loope
push
bound
pop
xchg
adc
jmp
icebp
rclb
mov
mov
jne
repz
mov
xchg
je
jmp
bound
push
out
dec
dec
repnz
arpl
cmpsb
aaa
inc
in
jg
and
ljmp
sti
or
sahf
out
xchg
or
mov
push
xor
inc
jae
pop
dec
jae
ficoms
or
push
test
add
push
in
sub
movsl
cld
mov
sti
and
mov
mov
xlat
and
sbb
insl
mov
enter
jne
xor
cltd
imul
fidivrs
mov
inc
ret
ss
sbb
xchg
push
cmp
outsl
lea
cmpsl
adc
mov
jno
lcall
es
pop
insl
leave
clc
data16
cmp
jbe
pushf
mov
or
dec
sbb
dec
rcrl
ja
ror
xlat
push
out
or
test
movzwl
pusha
pop
cmpsb
pop
lds
pop
mov
outsl
lds
jle
popa
push
jns
shrb
jns
xchg
xchg
mov
repz
or
mov
jmp
add
lcall
nop
jl
and
cmpsb
in
mov
loope
and
das
dec
and
adc
sub
jo
mov
pop
dec
in
cmp
dec
stos
sbbb
popa
aad
pusha
mov
jb
ljmp
push
repnz
and
inc
pushf
mov
imul
cmp
loope
dec
cmp
aas
ret
sbb
jg
mov
inc
mov
sbb
sub
jg
jecxz
add
adc
test
sbb
jecxz
imul
xlat
push
mov
int
iret
pop
dec
mov
mov
xor
jno
pop
in
xchg
shl
push
pusha
pop
adc
dec
fdivrl
ljmp
inc
out
mov
out
enter
pop
xchg
int
sub
cmpsb
shlb
iret
or
jle
mov
ljmp
adc
imul
enter
sub
dec
dec
in
pop
adc
jae
mov
hlt
mov
sbbb
arpl
push
clc
cmp
fisttps
movsl
sub
mov
addr16
mov
cli
xor
xchg
daa
jle
enter
movsl
les
sbb
into
cltd
cmc
insb
adc
into
ss
call
repz
orl
js
aas
jmp
imul
addl
cmpsb
sbb
and
sahf
sbb
xor
lea
repnz
int3
mov
sbb
xor
loopne
sti
jo
push
mov
push
out
or
xchg
movsb
in
ret
jp
xor
mov
ret
in
inc
xchg
push
stos
mov
sbb
xor
decl
sub
adc
sub
fs
pop
popa
lcall
inc
fcomi
rcll
dec
add
mov
and
push
xchg
jnp
bound
xchg
add
sbbb
pushf
mov
out
test
jg
mov
in
push
js
cwtl
stc
inc
popf
jno
aam
into
inc
cmp
lcall
shlb
sub
or
stc
popl
mov
pop
incb
or
sbb
das
mov
mov
adc
gs
mov
stc
push
xlat
sti
push
pop
out
ljmp
std
pop
inc
out
lcall
dec
xchg
xchg
lcall
test
lock
and
sbb
adc
add
orb
aas
push
pop
into
add
lock
jo
dec
rcrl
jle
dec
add
cli
fimull
rolb
push
jae
stos
sub
mov
add
or
xchg
or
sub
xor
in
mov
jecxz
subb
dec
in
add
mov
into
fcmove
cmp
scas
sbb
lods
cwtl
cli
add
add
jmp
popa
mov
or
xchg
ret
xchg
adc
iret
or
aad
int3
aaa
fdiv
imul
ror
sarl
mov
or
dec
pushf
ret
and
cmp
push
cmp
cld
dec
popf
lea
ja
loop
and
std
push
jl
cmp
addr16
pop
out
jno
pop
sbb
cmc
pop
fsubl
push
sub
clc
mov
xlat
or
mov
push
mov
mov
loopne
aad
cmp
movsl
jp
sbb
add
sub
hlt
push
push
cmp
inc
push
dec
popa
hlt
cld
sbb
lea
adc
mov
pop
in
and
ja
imul
sub
fidivrs
sub
sub
fstps
out
push
xchg
out
push
push
int
mov
fmul
dec
add
or
int
ficoms
dec
insb
gs
sub
pushf
jle
xchg
mov
inc
cmp
cmp
cmp
divb
xlat
mov
mov
add
jg
or
or
cmc
dec
and
push
es
test
leave
cmp
push
sbb
cmp
adc
jg
iret
rorb
pop
sbb
outsl
leave
sbb
cli
js
test
enter
test
add
je
push
scas
int3
cmc
jne
jns
mov
inc
mov
popf
xor
and
int3
in
jg
mov
test
out
jle
loope
push
test
cmp
sbb
and
sub
stc
add
ss
in
mov
repnz
fcomi
nop
xchg
scas
loop
repnz
int
and
inc
and
dec
add
subl
test
fimuls
testl
ficoml
pop
inc
mov
je
mov
sarl
push
or
icebp
paddusb
mov
pop
popa
roll
mov
and
and
lods
add
pop
repz
in
push
fwait
sbb
in
mov
add
or
scas
and
or
push
sbb
inc
dec
aad
adc
cmp
ja
and
push
or
outsb
jnp
insl
xlat
lcall
mov
sbb
inc
mov
pop
repnz
inc
jo
mov
dec
add
push
sub
add
jnp
es
xchg
jnp
xchg
lret
inc
adc
insl
push
ss
dec
ja
mov
pop
adc
mov
xor
mov
les
and
mov
dec
and
xchg
je
adc
ret
je
outsl
jle
jb
imul
and
push
inc
es
cmpsb
sub
mov
add
inc
outsl
stos
dec
fmuls
cmp
adc
movsl
mov
xor
jecxz
shrb
lret
adc
adc
test
mov
xchg
push
cmc
rolb
cld
jne
hlt
lods
xchg
popf
imul
sub
jp
push
mov
call
pop
test
orl
or
outsl
and
in
adc
jp
mov
jae
and
mov
or
popa
subb
sbb
push
mov
mov
loopne
repnz
lret
xor
mov
add
xor
test
in
mul
sarb
xor
jb
lcall
sbb
je
es
jo
lods
lds
loopne
aaa
aaa
lret
outsl
and
movsb
fildll
loop
inc
inc
iret
push
mov
dec
fnstcw
jg
push
xchg
mov
sub
adc
dec
push
sahf
cltd
orb
adc
rorl
outsb
xor
imul
xchg
shll
addr16
jl
sub
test
jne
push
mov
std
mov
cmpsl
pusha
pop
add
xchg
ficoms
shrb
std
mov
mov
mov
mov
push
lret
clc
ss
gs
popa
adc
loope
jmp
es
das
add
scas
leave
lea
ja
scas
loopne
dec
dec
pop
frstor
add
inc
ja
mov
adc
xchg
mov
sub
daa
mov
adc
pop
sti
xor
testl
fld
jno
ljmp
add
dec
shll
daa
jecxz
mov
scas
arpl
fildl
sbb
int
rcrb
mov
push
in
jae
lds
mov
inc
imul
mov
pop
js
jo
ljmp
add
pop
mov
or
leave
shrb
and
mov
sub
and
leave
push
dec
outsl
movsl
jno
ljmp
nop
lods
pushl
loopne
out
jg
cmp
test
or
subb
sbb
xchg
mov
test
jl
pop
repnz
lods
mov
pop
icebp
outsl
add
xor
ja
push
mov
iret
daa
in
pop
sbb
xchg
inc
dec
jb
js
mov
pop
nop
mov
in
cmpb
clc
cmp
dec
push
pop
and
push
popa
pop
nop
mov
mov
popa
mov
mov
ds
scas
add
movsb
nopl
leave
sub
addr16
loop
xlat
sbb
push
filds
dec
or
gs
and
pushf
fisubl
jmp
out
repz
xor
loop
push
jl
jp
mov
addr16
pop
cmp
sbb
daa
cld
hlt
in
rcll
push
jg
mov
in
out
mov
inc
lods
hlt
add
inc
add
popf
movsb
add
fstps
sub
push
repnz
ja
jp
in
and
lods
icebp
add
test
add
push
mov
jmp
pop
jnp
test
mov
xor
sub
cli
or
nop
stos
push
mov
inc
and
out
push
clc
js
push
sub
ss
dec
sub
mov
jo
imul
or
sub
lods
cld
mov
adc
pop
or
xchg
lods
in
jne
ja
or
cli
xchg
and
stc
inc
mov
mov
or
pop
adc
iret
aas
repz
cmpsb
imul
aam
mov
hlt
fcmovbe
in
in
ljmp
frstor
dec
mov
cmp
idivb
pusha
mov
sbb
outsl
lds
mov
call
dec
rep
push
lret
pop
sbb
jmp
xchg
pop
rcrb
adc
push
sbb
je
jp
inc
pusha
pop
in
mov
rorl
jns
fcoml
mov
dec
cmp
mov
cmp
pop
pop
test
cmp
pop
pop
out
or
and
cmp
dec
stc
mov
jno
mov
and
clc
push
sub
shll
fcoml
xchg
subps
inc
mov
xor
adc
add
cwtl
sub
aad
nop
sub
pop
addr16
mov
and
add
adc
pop
pop
inc
xor
data16
add
ja
sub
scas
inc
ja
xchg
shlb
lods
repnz
jne
ds
sbbl
mov
mov
es
push
jnp
fsubl
aaa
and
mov
test
xchg
nop
or
ret
shlb
jnp
add
test
pop
sub
test
testb
cmp
pushf
sbb
jecxz
and
xor
xlat
inc
xchg
sub
gs
pop
loope
dec
pop
inc
push
daa
mov
stc
xor
cmp
lods
bound
mov
xchg
pop
inc
jns
jbe
inc
sbb
lds
loope
sahf
jnp
mov
cmp
jge
gs
imulb
mov
or
sub
outsb
scas
hlt
jbe
pop
mov
xchg
dec
or
push
pop
xchg
insl
adc
xor
jecxz
cmp
sahf
in
inc
lcall
cmp
lahf
mov
mov
push
jo
nop
dec
push
xor
sub
dec
fsincos
pop
mov
icebp
cmp
sbb
dec
cli
popa
cmp
sbb
sti
jge
stos
lahf
outsl
mov
stos
and
pop
das
addr16
or
sub
sbb
xor
xchg
int3
mov
adc
or
jnp
jae
imul
add
inc
test
mov
push
ret
out
aam
test
fwait
push
sub
jae
dec
aaa
pop
rcr
sub
push
pusha
pushf
data16
jae
mov
mov
xor
push
out
sbb
jmp
xor
mov
in
jnp
ljmp
jbe
int
out
test
mov
repz
mov
test
pop
add
push
push
stos
mov
jmp
fdivrs
ret
jg
mov
push
lret
shl
inc
add
clc
cs
and
jb
negb
inc
fdivrs
pop
sub
test
ja
subb
cmp
gs
loope
mov
pop
mov
testb
fldenv
lods
andb
ljmp
lods
cmc
enter
sbb
movsb
bound
inc
mov
lea
xor
xacquire
popa
js
mov
push
or
mov
or
push
add
lret
add
ror
push
ret
adcb
pop
adc
sub
adc
ljmpw
aas
ret
push
arpl
mov
sahf
ret
outsl
dec
mov
push
cmc
stos
jg
xchg
xor
cmpsb
and
test
aad
inc
jp
data16
dec
cmp
mov
ret
jp
mov
sub
cwtl
aas
clc
repz
or
inc
subl
jge
decb
cmp
and
mov
lods
mov
pop
xorb
adc
fmul
push
adc
dec
dec
out
adc
iret
fisttpl
and
pushf
syscall
out
mov
cmp
push
aam
push
out
pop
xchg
xor
fiaddl
pop
popf
into
jle
lods
inc
loope
adc
jmp
test
jbe
and
jns
lcall
mov
es
aam
push
xchg
lods
mov
mov
test
mov
adc
lods
sti
mov
aaa
inc
adc
inc
mov
ja
std
pop
sub
data16
test
add
push
pop
mulb
cmpsl
jns
jmp
adc
cmpsl
mov
push
fldt
es
mov
cs
push
or
nop
adc
and
lret
xchg
sbb
dec
out
pop
mov
inc
pop
pop
out
fcoms
mov
xor
outsl
dec
pusha
outsb
test
adc
mov
pop
sbbl
clc
jge
mov
test
xor
test
insl
push
jo
sub
inc
arpl
sahf
add
fsts
jl
in
int3
push
fsub
repnz
iret
jnp
jne
sub
add
mov
stc
loope
and
or
sub
push
cld
jne
jle
in
mov
dec
sarb
hlt
sbb
fstpl
scas
xor
push
and
loopne
pop
lods
xchg
mov
xchg
add
rorl
stos
adc
lds
addr16
dec
mov
xchg
and
jno
fistpll
add
repnz
jno
mov
dec
fmull
leave
in
das
fsubrs
aam
out
jnp
mov
jmp
orl
cmpsl
jo
jbe
adc
inc
lcall
xchg
shl
inc
mov
enter
lret
jno
mov
jg
pop
hlt
mov
aaa
add
in
adc
pop
sub
ljmp
lds
negl
mov
xchg
xlat
movsl
sub
test
push
inc
xorl
ja
int3
test
scas
mov
movsl
out
orb
sti
mov
sub
ror
xchg
ret
arpl
mov
in
outsb
aam
mov
scas
pop
mov
pop
add
dec
cmpsl
add
addr16
rsqrtps
pusha
mov
int3
jbe
lds
inc
mov
pushf
shlb
xor
scas
inc
and
push
sahf
shll
popf
mov
xchg
imul
mov
adc
add
in
jg
scas
add
pop
stos
xchg
adc
stos
rorl
mov
test
or
adc
and
mov
loop
out
loopne
inc
add
mov
push
cmp
add
sti
adc
xchg
jmp
into
lret
or
in
sub
inc
movsl
jbe
mov
dec
and
xchg
mov
pop
pushf
popa
fiadds
rorb
and
lret
cmc
ror
call
inc
or
aaa
push
icebp
call
add
cmpsl
in
push
shl
pushw
in
mov
or
sub
mov
pop
loope
movsb
xchg
call
and
fwait
jge
mov
addr16
outsb
out
cmpsl
imul
push
mov
cmovno
sbb
popa
movsb
jnp
sub
das
adc
icebp
inc
mov
dec
test
lcall
mov
cmp
fisttpl
sbb
lods
addl
adc
jle
insb
js
mov
in
ret
mov
sti
cmp
or
pop
mov
adc
add
sub
jnp
sti
stos
inc
bnd
mov
incl
adcl
clc
mov
adc
fadds
stos
mov
fistl
pop
icebp
push
push
xchg
loop
xchg
or
aad
xor
mov
ret
mov
pusha
xchg
xchg
lods
stos
ljmp
clc
iret
lahf
pop
cmpb
push
push
jmp
fwait
mov
adc
pop
lods
ja
mov
movups
fistpl
cmp
into
cmpsb
push
lret
outsb
aam
fwait
sbbl
adc
push
lret
pop
pop
dec
adc
xchg
aas
jg
iret
rolb
xchg
mov
pop
leave
mov
test
movb
inc
jl
xabort
lcall
fisttpll
xor
gs
adc
popa
aam
dec
call
shl
sub
out
fwait
pop
or
addl
add
dec
adc
mov
cmp
shr
push
icebp
test
dec
pusha
add
nop
xchg
pop
xchg
xchg
inc
rcrb
sub
inc
jne
arpl
lods
cli
sti
rcll
lods
enter
fwait
lret
add
cmpsb
xor
mov
out
cli
xor
and
stc
and
fsubs
in
aad
jl
pop
inc
mov
in
lock
ja
test
lret
out
mov
out
jae
and
xor
mov
jae
sarl
sbb
fisubl
adc
movsb
xchg
movsl
xchg
pop
sub
movsl
pop
test
sti
fdivrp
int
push
stc
cltd
sti
inc
lahf
fldt
push
test
enter
jg
test
clc
rcrb
jo
adc
arpl
notb
test
sub
adc
adc
sarb
lods
mov
mov
or
fsincos
in
cmp
mov
out
cmp
or
xchg
int
mov
call
xchg
mov
sar
aam
fidivrs
xchg
cld
cmpsb
repnz
xchg
movsl
mov
inc
dec
dec
mov
cltd
pop
aam
in
ss
imul
lods
cmp
lret
dec
loope
mov
fadds
mov
cmpsb
dec
adc
shll
leave
and
xor
inc
pop
dec
mov
mov
in
pop
dec
add
mov
jnp
mov
inc
andb
andl
int
xor
pusha
xlat
or
sbb
dec
mov
dec
addb
xor
sti
in
mov
jne
mov
hlt
dec
fmuls
stos
mov
jl
jne
sbb
xor
mov
sbb
pop
pop
xchg
stc
or
pop
cmp
paddw
int3
pop
cltd
dec
insl
push
testb
fdivs
loope
pop
sbb
xor
std
push
mov
xor
in
add
mov
sub
mov
setnp
jb
nop
into
and
test
popa
test
fstl
sub
sub
and
js
mov
or
push
lret
adc
mov
adcb
loope
icebp
pop
or
test
ror
dec
sub
test
cmpl
dec
fnstsw
and
fwait
data16
inc
mov
outsb
sub
jle
sub
push
xor
es
mov
aam
cli
insb
fstpl
loopne
sbbl
fs
cmp
lods
mov
scas
sbb
inc
rcrb
loop
in
add
add
push
pop
clc
or
or
mov
dec
push
dec
add
adc
pushf
mov
sub
aas
add
scas
movsb
out
or
outsb
imul
jno
xchg
dec
sub
pop
mov
mov
das
les
cs
decl
dec
clc
movl
popf
dec
sahf
push
mov
hlt
xor
pop
push
movsb
and
jbe
jp
mov
in
out
dec
sti
leave
lods
shl
sbbb
cmp
xchg
pop
lods
popf
in
cmp
cli
roll
js
lcall
jo
dec
cli
out
int3
push
in
add
sub
xor
mov
lods
js
data16
xor
dec
test
sti
pop
out
mov
lds
mov
nop
aad
push
xor
dec
mov
pop
sahf
xchg
les
pop
sbbl
hlt
cwtl
jnp
hlt
push
jne
add
push
cmc
shl
push
popw
sub
add
xor
dec
mov
sub
push
enter
jo
je
mov
push
push
daa
stc
bound
out
pop
dec
fistpl
outsl
mov
pop
pop
daa
push
jo
into
iret
xor
lods
cmp
lea
pop
add
jmp
int3
inc
aad
scas
mov
push
and
cld
cmpsl
push
stc
test
push
or
jne
push
mov
orb
mov
or
test
xchg
outsl
cmp
repz
or
cmpsl
inc
loope
movb
cmp
pop
mov
addr16
and
lea
ja
or
ss
std
jo
movsl
or
stos
hlt
neg
and
arpl
fcoms
xchg
cmp
les
push
pop
in
mov
movsb
fdivrs
repnz
lcall
insl
mov
aas
shll
aas
or
andl
xor
repz
insl
fcmovne
sub
out
mov
add
push
mov
adc
push
repz
sub
sub
add
sub
fcmovb
outsl
in
push
push
adc
sar
or
aaa
js
dec
xchg
imul
ds
pop
dec
stos
aas
mov
push
mov
cwtl
lret
xchg
fcmovb
pop
mov
fs
std
leave
push
cmpl
sbb
hlt
mov
sub
mov
jl
xacquire
aad
inc
sbb
ds
shll
mov
pop
sbb
push
mov
ret
repz
pop
pop
dec
aad
scas
lds
je
movsl
fcoms
cmpsb
imul
aam
out
xchg
ljmp
test
rorb
mov
xor
into
out
xchg
mov
cwtl
fwait
pop
mov
lods
push
aam
xchg
out
int3
add
and
test
pop
sbb
loope,pn
add
adc
mov
jns
adc
dec
stos
aaa
fistpll
into
movsb
nop
adc
mov
pop
dec
out
adc
xchg
shlb
xchg
daa
mov
jg
sbb
test
inc
mov
and
addr16
push
fisubs
out
pop
dec
jmp
pop
cmp
outsb
imul
add
xchg
hlt
lahf
pusha
int3
es
aad
pop
outsb
addr16
push
addr16
sbb
ljmp
jo
inc
sahf
inc
addr16
jnp
fidivrs
les
sahf
mov
dec
clc
testl
cwtl
mov
mov
jl
jle
in
sub
push
movl
mov
and
jbe
imul
lahf
out
push
mov
xchg
lahf
pop
test
and
out
adc
out
lret
cwtl
mov
fucompp
pushl
movsl
cmp
repz
das
insl
iret
or
notb
fwait
mov
xchg
ja,pn
scas
lds
outsb
repnz
pop
shlb
test
sbbl
xchg
mov
adc
jns
ds
dec
cmp
test
out
fwait
push
cmp
inc
pop
ja
es
add
xor
iret
sbb
out
jo
sbb
add
mov
imulb
mov
rclb
out
inc
insl
add
xor
cld
sbb
andl
and
cmp
pop
inc
xchg
enter
inc
xor
fxch
out
push
xchg
jbe
lock
mov
sub
call
mov
jbe
jae
xchg
sub
je
cmp
clc
stos
lar
shlb
mov
jle
dec
or
xchg
push
fwait
inc
or
mov
scas
clc
or
jns
leave
sbb
push
jl
mov
xor
push
jp
xchg
or
int3
pop
test
or
lock
idiv
out
daa
leave
pop
lock
push
mov
mov
subb
or
and
pop
add
sub
jg
gs
sbb
ds
mov
cmp
sarl
dec
rcl
mov
mov
add
xchg
stos
ret
mov
pop
pop
mov
xchg
mov
mov
repnz
fcmovb
xchg
es
sub
mov
daa
stos
jb
fcomp
jae
shll
add
aas
cltd
lret
jnp
adc
adc
xchg
outsl
sbb
push
cwtl
clc
xor
sbb
pop
lea
rcrl
cltd
cltd
fwait
mov
push
sbb
scas
cli
cmp
and
bnd
insl
adc
sbb
lock
jmp
out
adc
xchg
idivl
popf
adc
loope
jmp
pop
sbb
xlat
lahf
mulb
outsb
inc
imul
fiaddl
scas
lds
xorl
sbb
stos
imul
rol
fxch
push
arpl
insb
lcall
loop
loopne
mov
jnp
pop
sub
add
and
cli
imulb
mov
divb
lds
mov
dec
aaa
push
out
jecxz
rclb
cvttps2pi
in
adc
or
shlb
mov
xchg
les
pop
iret
inc
push
aaa
insb
cmp
jo
call
push
xor
dec
outsl
sbb
int3
ret
shll
push
testb
test
lret
push
mov
inc
les
cli
loope
add
popl
repnz
jns
inc
and
xchg
xchg
and
sub
out
dec
cli
mov
mov
pop
and
out
sub
inc
add
dec
mov
pop
loop
lods
xchg
lcall
inc
push
loope
push
dec
pop
mov
xchg
jb
sub
sbb
xchg
sub
pushf
pop
pop
fimuls
add
xchg
mov
pop
in
test
mov
and
fisttps
cmp
insl
inc
push
jg
jbe
int
pop
outsl
pop
mov
popa
sar
insl
test
and
and
stos
or
cmp
fldcw
jmp
in
test
pop
mov
fisttpll
xlat
repnz
sbb
icebp
mov
add
sub
add
cmpl
nop
mov
jo
mov
mov
pop
ds
imul
pop
add
inc
push
push
push
aad
call
stos
mov
mov
sbb
inc
jno
cld
xor
sbb
xchg
xor
jno
or
test
mov
test
push
pop
jne
insl
push
test
outsb
sbb
scas
repz
mov
sahf
mov
popa
mov
mov
add
mov
stos
clc
stos
int
in
addr16
add
sub
dec
jns
ret
lea
iret
xchg
mov
mov
test
mov
test
xchg
lods
cmp
rcrl
es
xchg
dec
out
js
or
clc
inc
sub
cli
aad
loop
stos
stc
sub
fists
cwtl
mov
nop
xchg
mov
inc
push
pop
xchg
outsl
inc
xchg
popf
pop
mov
inc
mov
jnp
clc
in
ds
mov
xlat
mov
mov
lret
push
cmpsb
xor
and
lods
mov
cmp
dec
insb
cmp
adc
push
fwait
cmp
mov
jp
push
xchg
jl
push
inc
dec
mov
xchg
into
in
add
push
shrl
add
xchg
add
int
jb
rcl
into
sbb
pop
mov
add
pop
fisttps
cmc
sahf
jb
je
sbb
mov
or
lret
arpl
fwait
push
sbb
gs
daa
sub
aam
enter
jle
jg
shrb
jns
jno
mov
cmpsb
jl
int
ds
inc
faddl
in
push
adc
mov
and
push
imul
add
or
ds
mov
add
pop
fsin
or
jne
test
lea
xchg
add
stc
mov
dec
or
cli
cmp
cmc
mov
dec
pop
xor
repz
inc
cltd
inc
add
xor
dec
xor
lahf
jl
mov
sbb
cwtl
test
cmc
inc
je
pop
mov
push
push
das
pop
mov
jae
popa
mov
xchg
lods
or
fiadds
adc
out
pop
repnz
shlb
sbb
arpl
xchg
nop
ss
mov
xchg
stos
mov
repnz
addr16
ficomps
stc
ret
xchg
jle
mov
inc
pop
sub
js
stos
push
rcll
or
jecxz
or
dec
frstor
insb
rorl
mov
push
mov
movb
in
insb
xor
sbb
sub
xor
je
jae
leave
fdivl
xor
pop
cld
xor
sbb
mov
sti
dec
popa
lods
cld
adc
pop
inc
add
sti
aaa
mov
rcr
push
pushaw
incl
aaa
int
dec
pushf
fldl
sbb
jnp
and
and
ja
nop
jg
and
cmp
adc
in
fldcw
test
pop
aad
notb
outsb
fidivrl
and
into
inc
int3
addb
or
mov
push
leave
pop
xchg
in
add
jbe
add
jb
data16
nop
jae
loope
dec
ja
mov
mov
or
popa
jecxz
and
inc
mov
add
jb
pop
lock
aam
int
cli
sbb
fidivrs
mov
pushf
push
mov
cmp
sub
mov
cmp
andb
inc
in
xchg
out
or
and
mov
scas
icebp
cmpsl
jle
sub
enter
loop
test
loopne
data16
dec
jo
test
lret
bswap
push
shlb
push
sarl
or
mov
daa
popf
ja
mov
iret
jmp
into
mov
xor
pop
mov
mov
xor
xor
mov
rolb
daa
sahf
lret
lea
cmpb
es
aas
push
daa
stos
sub
sub
xor
lret
fcomps
cld
out
jb
adc
subl
adc
mov
dec
xchg
mov
jbe
loope
daa
jae
lds
aam
jp
xlat
fisubrl
inc
push
arpl
test
or
adc
int
pop
push
xchg
fs
adc
pop
test
scas
mov
or
sub
gs
fbld
fwait
pop
xchg
and
stc
pushf
xor
test
mov
xor
movsb
test
nop
pop
xchg
xlat
sub
xchg
xchg
push
jb
scas
jne
outsb
dec
dec
xchg
cltd
inc
pop
jno
jp
insb
adc
sbb
xlat
sbb
mov
sbbl
cli
ljmp
aad
filds
sbb
pop
adc
inc
or
xlat
popa
inc
orb
bound
sbb
fwait
shrl
jnp
mov
arpl
popa
add
lods
aad
inc
jo
add
mov
es
pop
negb
xor
cmp
outsl
filds
inc
inc
in
popa
mov
ds
aas
ror
popf
jae
jle
xchg
int3
dec
xchg
stos
ret
ljmp
add
push
dec
push
das
jno
xchg
xor
popa
jl
mov
in
cltd
jge
aas
enter
jae
push
mov
rcrl
push
sbb
mov
mov
sub
montmul
cmpsb
xchg
sbb
jae
int3
das
fistpl
sub
loope
push
outsl
or
iret
mov
sub
sub
int3
push
vaddpd
int
imul
ss
lods
mov
mov
adcb
adc
mov
xchg
sbb
add
cld
mov
lods
les
inc
cmpsl
dec
add
or
sbbl
repz
aaa
sti
cwtl
call
push
adc
in
dec
in
xchg
sbb
out
ret
add
cvtps2pd
mov
rol
xlat
ljmp
mov
push
jb
xchg
adcb
adc
mov
mov
cmp
add
and
and
pop
repz
jb
lret
cld
push
sub
arpl
insl
cmp
lcall
test
sarb
lods
in
call
pop
iret
inc
in
mov
mov
arpl
popf
mov
jge
cmpsl
es
arpl
xchg
fcoms
data16
push
sub
push
ja
negb
and
push
stos
sub
stc
mov
xor
jecxz
jge
jmp
mov
jno
push
dec
les
jmp
xor
lds
popa
adc
adc
xchg
mov
inc
push
lods
push
negl
xor
push
sub
jne
xchg
or
dec
bound
into
ss
mov
xchg
mov
shll
insb
xchg
mov
xchg
test
push
std
inc
nop
push
mov
add
nop
dec
xor
push
clc
fdivrl
pop
pop
jne
lock
movsb
xchg
xchg
scas
xchg
test
test
cmp
push
aas
dec
push
sbb
pop
and
lahf
lea
fucomp
out
int3
and
push
jge
add
movsb
adc
int3
pop
sub
in
dec
adc
xor
scas
ljmp
xchg
push
clc
adc
int
out
jnp
pushf
push
xchg
bound
jg
mov
mov
iret
sub
push
adc
xchg
xor
and
mov
addb
int
mov
mov
out
mov
push
in
xlat
popf
add
jmp
mov
es
cltd
sub
cmpsb
sub
mov
jge
outsb
and
mov
das
jg
mov
mov
mov
call
cmp
sbb
inc
fstl
into
aaa
push
pushf
or
sub
inc
fsubrl
mov
popf
pop
jnp
out
nop
adc
xchg
int3
aas
jg
push
mov
outsl
sub
jmp
fimull
pop
stos
mov
and
stos
sti
push
push
pop
sar
mov
bound
push
mov
outsl
cmp
push
out
cmp
and
outsl
ret
dec
jp
jle
outsl
or
fisubrs
push
nop
or
xor
push
sub
or
sbb
jle
pop
lea
mov
outsl
es
add
dec
sbb
int
push
data16
jnp
stos
jl
mov
sub
sahf
aad
test
or
mov
push
or
inc
mov
xchg
cmp
shll
lea
rorl
ss
inc
popa
jmp
push
call
in
or
scas
ficoml
out
call
add
mov
xor
je
in
adc
jae
leave
xor
inc
out
cld
out
mov
out
lret
xchg
aas
jle
ds
pushf
sub
add
push
call
xchg
sbb
or
jo
pusha
and
xorb
out
cmp
mov
or
lds
enter
xor
push
xchg
cwtl
adc
mov
stc
cld
movsl
xchg
sub
or
xchg
pushf
loop
xchg
pop
add
jns
cmp
push
fcoms
inc
add
sbb
jbe
and
rcr
inc
mov
mov
repz
adc
sahf
ss
dec
mov
fs
dec
jbe
ret
mov
fwait
ret
cmp
jmp
in
pop
ret
sub
mov
fcompl
daa
je
rep
sub
mov
jne
int
jle
shlb
xor
mov
cmp
xor
lock
scas
add
mov
loope
pop
mov
aad
jae
movsl
call
int3
cvttps2pi
mov
lods
sahf
lcall
stos
iret
inc
mov
sbb
test
in
xlat
popf
add
mov
movsl
fidivrs
fwait
nop
add
inc
movsb
mov
sarb
jo
loope
pop
mov
adc
gs
pop
clc
mov
sbb
adc
cmp
sahf
test
push
incl
out
mov
mov
std
push
je
inc
dec
jb
lcall
loop
in
mov
mov
loopne
sbb
popa
fnsave
outsb
out
pushf
mov
cwtl
inc
jmp
mov
inc
lcall
cwtl
negl
std
and
not
in
lret
push
loope
cltd
cwtl
xchg
aaa
movsl
pusha
lret
sti
mov
int
subl
inc
fimuls
push
inc
xlat
nop
sub
ljmp
in
mov
shr
and
pop
out
jg
adc
xchg
pop
cmp
cmp
mov
repz
and
xor
xchg
mov
out
aam
jb
sbb
or
adc
aam
std
xchg
out
dec
add
xchg
jno
sbb
sbb
xor
mov
jge
dec
enter
push
push
je
cmpsl
xchg
call
outsb
int
xor
or
sbb
mov
inc
loop
sbb
shll
dec
lret
xchg
jg
test
mov
xor
in
add
repnz
lods
and
lock
pop
mov
xchg
inc
xor
or
dec
dec
add
sub
jae
nop
sbb
or
icebp
mov
adc
imul
sub
pop
cmc
mov
push
add
jle
sub
xchg
call
imul
fistl
ds
jns
sbb
add
repz
sbb
jo
xor
mov
scas
inc
sub
nop
iret
or
adc
pusha
fnstenv
and
or
repz
nop
add
out
push
scas
xor
xchg
inc
imulb
xchg
loope
mov
xor
dec
inc
lcall
or
and
popa
outsl
mov
les
addr16
ficompl
push
xorb
sbb
jecxz
loopne
out
cli
into
aas
cld
mov
xchg
bound
jg
mov
mov
iret
sub
test
mov
ud2
mov
les
lods
les
inc
in
pop
add
fisubrs
aaa
sbb
into
inc
jnp
repnz
and
cmp
adc
inc
ljmp
sub
or
inc
clc
loop
jno
int
mov
cmc
jmp
mov
stos
addr16
scas
ret
mov
addb
push
pop
inc
and
xchg
dec
data16
aaa
dec
jb
out
out
sbb
ror
mov
pop
movsb
data16
mov
mov
bound
fistpll
clc
lret
lahf
testb
pop
sub
nop
shlb
popf
gs
repz
inc
or
cvtdq2ps
movsb
xchg
sub
das
aam
cmpsb
dec
jmp
outsb
js
push
or
mov
insb
mov
shll
ror
xchg
cmp
jg
xchg
xor
add
inc
popf
or
out
cmp
xor
or
das
xchg
and
jnp
out
or
pushf
pop
add
and
cmp
mov
cmp
mov
fiaddl
sub
sub
push
lret
cmp
push
out
cmp
and
jg
add
mov
lcall
cmp
dec
in
es
lods
stc
outsl
sbb
fwait
fs
pop
xor
pop
fldt
xchg
xor
sahf
pop
sub
out
mov
pop
ljmp
jecxz
shll
insb
leave
xor
xchg
push
iret
roll
cmp
or
daa
cmp
sbb
xchg
in
mov
push
jb
jl
jne
mov
sbb
pop
rcrb
iret
mov
fwait
fs
in
and
dec
cmp
aam
imul
stos
mov
cmp
imul
pop
xor
xor
jns
roll
cmc
roll
int3
mov
shlb
pop
push
jp
sbb
sub
mov
mov
rcr
adc
push
pop
lods
clc
jle
mov
xchg
jo
sbb
inc
add
add
leave
je
and
adc
lret
aaa
loop
dec
fwait
or
xor
mov
outsl
pop
inc
je
sub
inc
push
ret
jae
stc
sahf
or
dec
cld
ljmp
cmp
dec
in
or
adc
or
inc
sar
aad
or
jb
fsubrl
cmp
xor
jmp
shrb
ficoml
fst
scas
xor
test
lahf
jmp
push
enter
mov
sbb
and
mov
cmp
test
jnp
mov
sarl
int3
jle
push
test
cmp
test
or
sub
mov
mov
jmp
cmp
xor
add
out
inc
test
add
vmovaps
bound
stos
lea
iret
pusha
adc
das
aam
cmpsb
dec
jmp
shl
pop
lahf
std
dec
fucomp
sbbb
adc
xor
or
add
jl
and
push
shll
add
push
mov
lods
sbb
push
add
cmp
ds
outsl
jmp
js
aaa
data16
out
cmp
inc
pop
inc
bound
pushf
cmp
gs
aam
dec
loop
outsl
lods
xlat
dec
out
push
pop
ljmp
push
xchg
jg
xchg
dec
ret
dec
jp
sub
pop
jae
out
xor
cmp
mov
mov
out
vmovdqu
mov
pushf
mov
sub
lahf
fs
loope
xchg
repz
or
rclb
adc
fnsave
mov
out
stos
add
adc
pop
pusha
std
or
add
and
and
mov
or
fdiv
xchg
fwait
loop
lock
add
xchg
add
jge
push
push
mov
xor
mov
popa
sbb
scas
jns
ret
jo
push
xchg
mov
fdivrs
sub
leave
subl
ja
adc
ret
les
push
in
fwait
loop
xor
out
into
movsb
inc
fs
out
adc
iret
aad
test
sub
inc
xchg
jle
jp
test
out
xor
shlb
leave
cmp
inc
pushf
lahf
mov
int3
fnsaves
roll
std
pop
cmpsl
sub
arpl
or
loopne
stc
inc
inc
and
mov
jae
mov
lds
lret
or
cmp
clc
stc
mov
ror
push
iret
ficoml
les
mov
int
adc
pop
lea
add
push
mov
or
inc
pop
scas
leave
jb
xor
mov
push
test
xchg
mov
mov
and
jbe
shll
push
or
xor
xchg
sub
sbb
mov
stos
insl
push
mov
add
clc
ljmp
leave
sti
or
mov
cli
add
lret
mov
ret
pop
jp
leave
andb
mov
fadds
mov
jp
ljmp
popa
or
sbbl
lret
gs
inc
pop
pop
icebp
fstpl
inc
repnz
jecxz
mov
sub
bound
sbb
adc
lahf
data16
or
push
mov
inc
lock
ret
and
dec
xlat
xor
fldcw
cmp
cmp
and
mov
and
xorb
test
dec
add
inc
xor
push
mov
cmpsb
test
pop
mov
jl
cmpsl
or
movsb
dec
add
push
in
sbb
rcr
fs
stos
pop
add
push
jle
imul
mov
mov
xchg
movsb
and
movsb
add
inc
scas
ret
faddl
movsl
dec
loop
jbe
jmp
imulb
outsl
add
and
into
sbb
in
lret
int
xor
mov
inc
sub
xor
std
xor
out
outsb
inc
and
and
xchg
lock
popw
inc
add
inc
into
pop
mov
cmpsl
test
mov
pop
jecxz
mov
xchg
or
push
jo
mov
xchg
mov
loope
xchg
dec
in
xor
faddp
dec
cwtl
add
adc
xchg
sub
mov
sub
imul
jmp
mov
push
inc
stos
les
fstpt
lret
out
das
jns
or
and
fbld
and
sbb
rolb
mov
nop
mov
pop
sbb
jge
xor
into
pop
lcall
shrl
add
push
dec
add
jne
dec
sub
mov
xchg
das
aam
aaa
mov
scas
scas
stc
dec
xor
xor
outsl
mov
fcoms
call
sub
dec
scas
stc
push
fisubrs
or
jmp
fistl
loope
xchg
mov
add
inc
inc
add
mov
in
div
imul
pop
lods
mov
cmpsl
jae
test
sbb
jns
les
fimuls
fwait
aas
sahf
shr
hlt
and
dec
or
xlat
les
int3
aaa
adc
ret
lcall
add
in
es
jne
xchg
mov
pop
aam
xchg
call
mov
ds
add
pushf
movsl
xor
lock
js
and
jmp
leave
or
add
dec
sahf
out
js
cs
in
aad
hlt
mov
imul
or
mov
rolb
aam
mov
push
int3
add
cs
push
movsb
mov
rorb
push
paddusw
push
mov
cld
push
scas
pop
pop
push
rcrl
mov
mov
add
push
js
lods
dec
adc
adc
cmp
in
mov
scas
sub
pop
mov
sbb
sub
pop
and
test
incb
dec
jg
enter
std
cltd
adc
out
mov
fs
adc
repz
dec
sahf
mov
ljmp
mov
xor
mov
or
pop
mov
mov
out
adc
fstpl
jne
mov
push
cmp
imul
pop
mov
push
inc
sbb
divb
aaa
inc
mov
push
jle
mov
jg
pop
divl
push
jge
or
jno
cltd
jb
imull
daa
addb
jmp
xchg
popf
rcll
test
xor
cmpsb
sub
iret
cmp
adc
mov
push
inc
xorl
sbb
jo
push
push
ds
jne
dec
dec
decl
test
shl
in
jp
popa
addr16
bound
cwtl
sub
and
int
fcom
aas
add
dec
out
pop
sbb
jmp
pushl
arpl
shrb
test
mov
pop
jo
js
and
mov
xchg
jle
sbb
jle
fcoms
in
push
xor
pushf
nop
pushf
out
add
push
cli
and
sub
aam
push
test
adc
call
dec
testb
jmp
xor
mov
sub
mov
pop
and
movsb
push
cmp
inc
fdivrs
mov
mov
pop
xor
xchg
inc
adc
jnp
jo
aad
xlat
cmp
xchg
push
aas
dec
insl
stos
mov
mov
jge
cwtl
sub
cmp
and
movsl
cmp
icebp
sarb
outsl
xor
addr16
pop
cwtl
int
lret
adc
jl
in
addl
out
sub
fstpt
stos
and
inc
and
and
addr16
je
mov
loopne
insl
push
out
aaa
scas
add
add
mov
std
test
adc
jne
xor
xchg
jne
shrl
fidivrs
push
mov
push
cli
aaa
mov
cmpsb
enter
sub
inc
sbb
rcrl
sar
push
out
lds
repnz
sbb
sbb
mov
push
jmp
jecxz
or
xchg
rol
add
sbb
jae
shrl
call
cmp
xlat
mov
lods
cs
mov
sbb
sti
fwait
lahf
cld
rorl
addr16
xor
ds
loope
and
or
xor
out
pop
mov
fmull
inc
movsl
mov
je
stos
xchg
imul
pop
std
sub
jne
test
in
testl
ss
mov
insl
jecxz
ret
ret
in
sub
loop
out
sbb
xchg
inc
xchg
les
xchg
inc
int3
cmpsl
test
pop
or
nop
pushf
sbbb
cwtl
jecxz
sub
mov
mov
dec
daa
lret
and
jmp
loopne
cmp
fs
shll
pop
imull
cmp
jnp
cld
mov
test
rorl
dec
fs
adc
xchg
gs
popa
das
in
dec
mov
imul
stos
scas
cltd
inc
mov
loopne
and
lret
punpckhbw
adc
cmpsl
dec
mov
sub
mov
pop
test
sbb
xchg
jp
call
mov
stos
adcb
add
sub
inc
sahf
or
mov
mov
dec
push
mov
shlb
mov
leave
jno
popf
pcmpgtb
cmp
mov
out
push
xor
pop
pop
jecxz
stos
arpl
out
adc
mov
lcall
cmp
movsl
pusha
js
xor
mov
adc
idivb
ret
shlb
fwait
sahf
push
dec
xchg
fistpl
push
insb
in
sub
push
pushf
cmpl
int3
ret
mov
daa
mov
push
les
pusha
xchg
push
lods
movsl
jge
add
in
pushf
xlat
inc
jbe
sbb
lret
pop
lret
xchg
pop
repnz
cmp
pop
mov
into
mov
mov
mov
inc
mov
mov
adc
inc
xchg
add
sbbl
pop
push
int3
insl
fnstenv
aaa
repnz
out
popf
movsl
fcmovnbe
push
popf
out
jp
jge
mov
sti
lcall
sbb
mov
dec
js
xor
movsl
in
xor
lock
scas
mov
jne
mov
xchg
sbb
push
jge
or
jbe
insl
mov
gs
or
sbb
daa
cld
mov
test
xchg
fistpll
in
fldenv
mov
mov
sbb
push
sub
mov
mov
rcrl
xor
inc
ljmp
shr
xchg
loopne
inc
mov
inc
xchg
xchg
pop
loop
fcomi
mov
fs
xchg
icebp
push
inc
xor
adc
or
stos
add
out
adc
mov
mov
lcall
outsl
xchg
sub
dec
in
or
dec
hlt
jno
xchg
rorb
pop
mov
mov
stos
test
stos
jmp
or
cmp
push
outsl
jmp
fcomps
mov
lcall
out
dec
dec
push
push
xchg
pop
push
daa
push
in
mov
cmp
mov
and
repnz
push
xor
mov
adc
mov
jbe
leave
xor
orl
mov
cmp
stc
or
pop
mov
mov
xor
fs
xor
and
call
out
ror
add
push
cmp
arpl
divl
aam
in
jge
and
pusha
jle
addr16
loope
fxch
cltd
dec
popf
test
shll
push
xchg
dec
pushf
jno
jnp
in
imul
or
xchg
std
mov
out
in
cmp
pop
add
dec
pop
sub
pop
xchg
mov
leave
clc
shrl
repz
pop
lret
sbbl
fwait
add
pop
inc
sbb
popa
scas
mov
fsubp
stc
xor
dec
mov
mov
stos
insb
movb
push
pusha
sbb
ja
lds
mov
popf
loopne
xor
fnsave
sbb
sbb
mov
in
xor
mov
rcrb
addr16
xchg
sub
in
push
push
call
cli
popa
movsb
add
push
pushf
sub
lock
out
and
adc
mov
cld
lea
and
cs
jb
loopne
repnz
insl
aam
sbb
pop
je
dec
adcl
jg
outsl
mov
ret
test
xor
xchg
lret
mov
in
push
iret
insb
scas
rcrl
mov
mov
xchg
sub
xchg
xchg
shl
pop
aaa
inc
add
fbstp
test
addb
sub
sub
mov
mov
pop
cmpsb
dec
push
inc
mov
mov
push
cmp
scas
xchg
call
adc
mov
pushf
xor
outsb
in
jmp
insl
repnz
arpl
jns
mov
adc
jl
in
push
arpl
or
adc
xchg
pop
fisttpl
xchg
je
cwtl
out
les
imul
or
cmp
movsl
pusha
jp
subb
in
cld
scas
shll
cltd
shrb
xchg
aas
daa
xor
jae
mov
mov
add
push
lret
lret
inc
push
in
adc
mov
mov
mov
aaa
std
sbb
cmp
loope
jge,pt
mov
lods
pushf
bound
add
cmp
xchg
xchg
aam
cmp
mov
movsb
sbb
sub
fnstcw
bound
sbb
in
inc
fs
call
sti
out
mov
lcall
jnp
inc
xor
fwait
pop
cmp
inc
subl
je
adc
pop
lcall
sub
mov
es
rcll
movsb
and
and
imul
xor
lea
pop
mov
jns
cmp
popa
stc
mov
mov
inc
outsl
leave
push
inc
adc
inc
loope
mov
aam
stos
jmp
pusha
adc
xor
sbb
xor
xchg
fwait
daa
xchg
jno
test
cld
rolb
sar
negl
lret
or
mov
mov
lret
adcb
fsts
dec
popa
xchg
sarb
add
xchg
inc
rcl
push
notb
add
idiv
sbb
fldl
mov
insl
stc
into
cmp
out
loopne
stos
addr16
mov
or
pop
call
jl
inc
imul
xor
xor
inc
jo
xchg
inc
push
clc
inc
xchg
movsl
in
loopne
lods
das
mov
loop
pop
push
out
sbb
mov
sub
in
out
mov
jge
mov
push
test
xchg
push
add
jae
push
pushf
jmp
lret
sub
pop
mov
pop
mov
daa
mov
cmp
mov
mov
ror
push
aaa
cmp
mov
sub
nop
outsb
xchg
xchg
xor
add
call
aas
pop
dec
imulb
jg
jo
movsb
inc
cmpl
jecxz
loope
mov
lods
sbb
aam
addr16
cmpsb
movsl
daa
push
jle
cmove
cli
mov
add
xor
sbb
xorb
and
leave
mov
xor
mull
test
iret
push
mov
jb
jmp
adc
pop
mov
cmpsl
adc
dec
icebp
cmpsb
insb
mov
mov
sbb
inc
cwtl
xchg
pushf
sbb
ss
and
xchg
sahf
int
repnz
fidivrl
and
pop
and
mov
imul
popf
in
gs
push
shrb
jo
add
adc
xor
pop
xchg
push
cli
imul
sub
shl
sub
test
inc
add
xchg
dec
pop
mov
lcall
jb
xchg
imul
inc
mov
sub
jo
fsubrl
scas
daa
pop
sub
add
jl
popa
jmp
mov
enter
daa
jb
add
scas
jnp
leave
push
loopne
fsts
aas
mov
insl
popa
and
pop
and
testl
mov
lret
adc
push
stc
inc
lret
lret
cltd
mov
xor
pop
icebp
add
dec
rolb
and
and
sbb
push
movsb
addr16
pushf
add
jmp
int3
inc
xchg
rcl
pushf
xchg
repnz
push
lahf
loop
mov
ljmp
push
roll
xchg
inc
sub
data16
cmp
in
lret
or
jae
mov
lds
enter
repz
dec
rolb
jb
insl
cmp
mov
loopne
and
push
imul
jmp
mov
jmp
jp
jo
sbb
add
and
ljmp
or
jb
lea
in
stc
push
push
mov
add
xchg
aas
pop
pop
ficoml
and
roll
dec
mov
xchg
adc
dec
mov
add
sbb
xchg
movsl
lock
lret
aam
push
call
addr16
in
mov
aaa
dec
push
mov
leave
sub
gs
in
out
xlat
inc
xchg
movsl
adc
cli
fwait
stc
aas
aam
cli
lock
add
lea
xor
cmp
cltd
das
pop
sbb
int
pushf
xchg
mov
mov
daa
lock
pop
in
inc
and
dec
popf
pop
inc
imul
mov
mov
es
aas
xor
or
inc
pop
adc
inc
jne
jbe
test
fucom
xchg
adc
lods
or
fcmovb
loopne
sub
pushf
repz
mov
lock
fiadds
test
inc
repnz
out
xor
adc
stc
aad
xor
push
movsl
mov
mov
sub
data16
aad
out
cmpsl
pop
adc
mov
mov
mov
cmp
out
mov
pop
stos
add
push
lret
das
mov
push
stos
or
xor
testl
jge
insl
add
inc
das
js
popf
loop
mov
test
rcrb
testb
loop
lods
pop
ret
in
dec
pop
adc
pop
adc
sbb
sarb
push
pop
rol
into
cmp
aas
xor
xchg
imul
fsubrs
push
cmc
aas
mov
mov
in
mov
dec
mov
imul
xchg
mov
filds
dec
mov
std
fisttpll
shll
xchg
arpl
sub
and
xchg
vsqrtss
and
lcall
pop
jns
jo
jge
pop
bound
fcoml
push
aad
cli
loope
insl
sbb
push
push
mov
lret
mov
into
fdivrp
xchg
adc
js
dec
jecxz
aas
out
out
aaa
insb
mov
das
mov
sbb
aas
inc
xor
leave
jp
bound
jno
mov
fidivrl
push
xchg
xchg
pop
mov
push
shrl
mov
inc
pushf
sub
push
push
or
loop
iret
ss
clc
aad
subl
push
ret
mov
xchg
out
scas
dec
popf
fsubrp
dec
mov
rorl
jmp
dec
inc
sub
xor
dec
imul
mov
popf
inc
fs
inc
sti
aaa
xor
cmpsl
cwtl
or
jmp
mov
cmp
int3
xchg
hlt
test
sar
cmp
aam
and
cltd
std
pop
pop
lods
push
stos
ficoml
push
mov
cmc
and
fsubs
jle
pop
outsb
adc
push
inc
into
push
scas
vphaddubq
jo
fs
push
mov
add
dec
xor
and
xor
je
mov
fdivs
in
iret
jne
push
stos
scas
sub
xchg
sarl
or
or
adc
xor
movsb
dec
stos
mov
inc
test
mov
idivl
imull
pop
adc
mov
out
or
pushf
leave
test
lret
sub
inc
lret
dec
fwait
mov
out
out
push
stc
stos
adc
int
pusha
aas
loopne
dec
add
loop
movsb
and
pusha
mov
inc
mov
popf
sti
rcr
loope
mov
mov
test
and
lcall
into
mov
sub
adc
jns
xchg
add
imul
lret
cmp
jne
mov
cli
push
cmc
aaa
sub
xchg
push
pushf
ja
pusha
lahf
cmp
cs
cwtl
test
movsb
cmp
popf
cmp
nop
pushf
xor
push
adcl
sub
js
aam
or
sbb
leave
aam
and
xor
js
out
mov
dec
mov
jb
and
int
sbb
ljmp
jae
in
add
or
cmpsl
lock
loopne
pmaxsw
xor
xchg
jmp
es
scas
mov
mov
mov
lahf
mov
and
xor
popf
cmp
mov
pop
push
mov
inc
lods
jg
jne
pop
pop
pop
cs
sbb
into
pop
ret
pcmpgtd
lock
mov
pop
mov
mov
xchg
out
xor
movsl
xor
xor
push
lcall
adc
push
jne
fstpl
ss
adc
push
insl
or
lods
push
adc
repnz
vfmadd231pd
sti
cmp
adcl
mov
xor
jge
sarl
repz
jmp
fsubl
inc
jl
and
dec
aaa
fwait
xchg
hlt
in
jne
push
and
jle
jmp
add
pop
fmull
cmp
lahf
popa
int
imul
std
mov
test
adc
cmp
testl
dec
xor
mov
mov
sahf
xchg
notl
pop
stc
or
inc
insl
push
dec
jmp
sub
prefetch
lret
dec
or
dec
addl
testb
enter
enter
fiadds
pusha
aas
xchg
push
repz
push
test
outsb
jmp
lds
cmp
mulb
cmp
push
mov
sbb
mov
push
sbb
xchg
pop
jns
call
sbbb
ret
push
xchg
mov
rcl
cmc
mov
inc
mov
cli
sub
das
popf
mov
mov
fstpl
movsl
shrb
shlb
pop
movsl
or
mov
sbb
inc
pusha
push
nop
ret
mov
mov
out
cmp
push
mov
cmpsb
pop
fwait
dec
das
insl
pop
push
cmp
sub
mov
test
arpl
mov
sarb
push
test
mull
lea
or
into
imul
pop
mov
clc
jl
in
mov
stc
jnp
outsl
std
dec
test
pxor
sub
lds
dec
or
xor
mov
or
outsl
or
cli
test
lret
loop
adc
les
repnz
xchg
lcall
loopne
or
cli
icebp
adc
fstp
xchg
mov
out
or
pop
pop
stos
push
daa
icebp
pop
xor
jp
mov
push
data16
jecxz
sar
imul
xchg
xchg
mov
les
dec
mov
cmpsl
lea
scas
in
test
das
pop
push
cs
lods
cltd
adc
xchg
jae
lahf
int
lds
xlat
test
aam
xor
pop
mov
xor
loope
rol
dec
push
push
push
int3
inc
ffree
jp
xchg
jo
stos
jnp
fidivrl
dec
mov
inc
lods
gs
jo
dec
in
xchg
mov
push
xchg
push
push
sahf
popa
outsb
cli
mov
adc
loopne
or
cli
std
mov
aas
xchg
sbbl
imul
data16
mov
loope
xchg
ret
mov
adc
cmp
jnp
into
scas
scas
loopne
add
dec
jmp
cwtl
mov
sbb
jae
jl
mov
dec
jbe
cld
scas
sub
inc
mov
xor
jp
pusha
lret
rcll
mov
push
sbb
fiadds
stos
adc
jle
in
or
ljmp
loope
mov
jg
stos
or
pusha
push
cmp
cmp
std
push
fdivr
popa
sbb
in
dec
pushf
push
sbbb
scas
jg
es
adc
push
cmpsl
mov
inc
fs
mov
hlt
pop
mov
mov
ds
or
dec
xchg
clc
push
pop
jns
inc
or
notl
fdivp
scas
test
subb
xchg
sahf
push
or
clc
nop
addr16
imul
pop
insb
mov
or
les
jbe
insl
xchg
nop
sub
pop
mov
fildll
outsb
mov
xlat
xor
xor
rorl
cmpsb
out
mov
dec
movsb
test
sbb
lock
dec
cwtl
in
in
inc
sbb
jae
inc
mov
adcl
fdivl
sahf
adc
sbb
cs
insb
mov
jns
mov
les
jae
xchg
test
shrl
jbe
ficoml
adcb
lods
int
in
sub
es
test
mov
push
xchg
stos
sub
mov
mov
and
adc
mov
add
gs
adcb
rcrb
and
cmpsl
xor
jle
jnp
mov
mov
stc
imul
sbb
sub
nop
mov
or
xchg
movsb
ds
test
xchg
pop
adc
cltd
adc
cs
push
loop
hlt
sarb
dec
ret
cmp
jl
mov
xor
int
push
fbstp
mov
rcr
pop
fs
ss
push
dec
xor
fdiv
add
xor
mov
inc
cmp
shl
fdivs
movsl
ret
stc
test
ficomps
in
in
jmp
mov
mov
xchg
and
notl
mov
roll
sub
aad
inc
outsl
ret
loop
sbb
mov
sub
push
pop
dec
ds
push
or
xchg
and
xor
pop
dec
inc
mov
rcrb
sub
das
add
inc
pusha
jno
xorb
out
inc
adc
sarl
fmul
in
push
xor
enter
jle
test
dec
xchg
fs
rclb
int
loopne
xchg
add
daa
insb
in
lcall
adc
and
into
lock
and
dec
push
mov
sti
pop
inc
lock
sbb
dec
jecxz
xor
and
and
test
xchg
lods
ljmp
inc
and
testl
iret
jge
adc
push
aad
or
addr16
mov
test
sar
lret
xor
testb
sub
mov
lahf
cs
std
sbb
jl
push
cld
pop
mov
cmp
mov
mov
pop
movsb
cmp
add
fucomip
pop
adc
mov
orl
adc
out
xor
repz
test
pop
lcall
pop
lahf
fdiv
add
mov
mov
lret
push
mov
cmp
and
mov
push
addr16
mov
cmpsl
dec
xor
fdivrs
lds
xchg
pop
sub
xchg
fldt
jbe
nop
sub
stos
push
mov
call
call
lods
pop
mov
iret
aam
into
jmp
and
pusha
mov
mov
mov
lahf
sbb
in
jns
add
xor
push
pushf
xchg
lret
jle
into
fsubrp
mov
and
std
pop
xchg
roll
push
stos
leave
cltd
pop
stc
push
dec
insl
stos
xchg
lret
je
cmp
adc
movsb
dec
leave
mov
push
inc
cmp
sbb
xchg
or
jne
pop
push
pop
loope
xchg
out
and
cmpsb
repnz
fwait
add
jle
ja
pop
outsl
mov
push
jp
cmp
imul
cmp
jl
std
iret
lea
and
jne
mov
das
mov
daa
setb
test
fisubl
push
fcoms
cmp
ljmp
sbb
or
push
dec
mov
icebp
sahf
xchg
jnp
fwait
cs
mov
cmp
push
call
sarb
xchg
adc
fisttpll
sbb
stos
cmp
push
mov
pusha
rcl
sub
es
insl
inc
call
mov
outsb
pop
fwait
in
xchg
cmp
cmc
mov
mov
arpl
in
std
xor
jl
pop
jmp
lds
clc
divb
inc
pop
ss
bound
imul
pop
cltd
mov
into
shll
dec
std
incb
insl
lds
jb
cltd
mov
outsb
fdivrl
incb
hlt
xchg
push
and
in
loop
loopne
inc
loopne
fdivrs
mov
bts
lock
push
mov
nop
fs
je
dec
inc
pushf
lret
popa
sub
inc
or
repz
adc
and
mov
inc
ljmp
xlat
jnp
lods
sahf
mov
sub
pop
pop
jo
into
test
in
pushf
jmp
ficoms
xchg
mulb
sbb
adc
aas
loop
je
lods
lahf
sbb
inc
add
cmp
rolb
fldl
push
cmp
xor
and
jno
int3
arpl
pop
in
xchg
jb
punpckhdq
cmp
pop
xor
xor
or
lahf
sbb
mov
sub
push
pop
out
and
loope
cltd
lcall
mov
nop
xor
pop
je
cs
imul
push
pop
rcr
movsl
sbb
aaa
mov
jns
pop
mov
jbe
test
loopne
xchg
jae
xor
jnp
popf
sahf
sub
imul
hlt
mov
add
pop
xorl
and
push
add
pop
popa
pop
mov
jmp
mov
or
cmp
mov
and
call
mov
push
mov
out
mov
push
inc
xchg
frstor
ss
imul
aaa
loope
jecxz
xchg
push
xor
in
cmpsl
ret
je
sub
jae
and
stos
sub
mov
les
push
fiaddl
xchg
push
in
les
or
adc
fcmovu
xlat
mov
mov
scas
xchg
lcall
shlb
dec
adc
ja
adc
jp
ja
call
int3
push
insb
pop
out
ljmp
lods
pushf
lds
dec
sbb
push
loope
or
lret
and
lods
mov
in
xor
adc
icebp
out
andb
in
loopne
add
aas
sbb
test
idivb
jecxz
add
sub
js
xor
cwtl
pop
sar
xlat
andl
in
and
rcll
mov
in
mov
dec
adc
mov
cmpsb
aaa
and
xor
cmp
jns
jg
and
cmpsb
adc
sbb
fstl
or
roll
push
jnp
shrb
add
rcrl
xor
popf
int
rcrl
push
mov
dec
into
lret
sbb
leave
sub
push
test
lock
fwait
icebp
cmp
sbbl
xor
cmpsb
add
sar
dec
add
outsl
repnz
aad
xchg
adc
xchg
push
mov
add
sbb
lret
mov
pop
adc
add
call
mov
bound
push
out
sub
push
int3
notl
in
bound
sbb
push
mov
pop
adc
push
mov
xchg
xchg
fiadds
and
mov
pop
icebp
xchg
sbb
or
jne
aad
outsl
cmpsb
fisttpl
cmp
aaa
nop
dec
ret
popa
jnp
mov
push
sahf
inc
inc
mov
scas
mov
mov
lods
leave
push
jle
mul
inc
adc
jne
inc
and
cmp
dec
int
mov
subl
jno
pop
or
ror
mov
xor
inc
fmull
jge
jmp
xchg
mov
jo
xchg
cmp
push
dec
and
sub
push
je
insl
ffree
fs
add
test
mov
jle
mov
inc
loope
ja
mov
pop
xlat
mov
pusha
mov
xor
addr16
mov
mov
lret
dec
push
js
aad
xor
cmc
adc
imul
out
loope
and
xchg
mov
in
test
out
fstl
sub
jne
push
cmp
and
mov
mov
add
pop
popa
pop
add
adc
cmc
push
test
or
cmpsl
lods
lret
dec
push
xchg
cs
push
mov
jb
les
and
mov
inc
mov
pop
rcll
scas
xchg
cmp
js
push
shll
outsb
xor
pop
stos
clc
mov
popa
cmp
es
xchg
aaa
sbb
or
xchg
mov
js
jg
movsb
push
add
aaa
mov
ja
or
push
addr16
div
mov
xchg
inc
xlat
jge
sub
faddl
jb
mov
ret
push
pop
jl
call
inc
dec
packuswb
push
xchg
inc
mov
sti
jmp
push
sbb
stos
xor
mov
add
shl
xchg
or
jg
inc
test
mov
xchg
jbe
cmpsb
adc
fcoml
cmp
sti
cld
inc
dec
sarl
call
bound
ret
or
inc
je
adcb
push
mov
cwtl
jl
aam
mov
pushf
hlt
pop
lds
dec
mov
jnp
cs
das
or
cmpsl
inc
jo
int3
mov
enter
or
add
inc
or
pop
mulb
fisttpll
stos
neg
leave
push
or
mov
or
sub
push
jmp
cmc
cmc
loope
push
popa
pop
cltd
ret
sub
mov
mov
jge
or
lods
aad
jne
dec
stos
test
inc
ss
fldcw
sub
cmp
jae
xlat
hlt
gs
and
mov
outsl
or
dec
adc
jecxz
xor
add
inc
int
cltd
test
sub
scas
dec
cmp
fwait
sti
add
mov
lcall
mov
mov
pushf
repnz
incb
and
data16
test
aaa
add
mov
stc
in
or
mov
and
insb
mov
stos
or
and
or
repz
sub
jno
jno
pop
cld
sbb
jp
add
push
ss
loop
add
and
out
cs
xor
adc
cmpsl
and
mov
push
push
repz
mov
into
push
lcall
pusha
fbld
push
lret
test
stc
pop
or
test
jne
xchg
pushf
mov
dec
outsl
das
add
fstl
jmp
daa
cmpsl
sti
add
mov
das
movsb
sbb
das
pop
test
in
shll
pop
outsl
pop
fadds
push
pop
jnp
pop
pushf
repnz
outsl
xor
jae
push
out
lcall
sbb
fs
subb
push
cs
cmp
stc
test
jns
xchg
aas
fisttpl
adc
lcall
jg
inc
loop
lods
arpl
out
notl
jno
std
jbe
add
and
xlat
mov
insl
push
jo
sbb
addr16
mov
add
and
xchg
pop
xchg
dec
test
call
out
xor
push
push
xchg
cmpb
inc
lods
mov
sub
pop
pop
adc
into
loop
dec
xchg
lahf
jp
fisubrs
push
mov
adc
test
data16
data16
lcall
xchg
push
ds
test
push
mov
movsl
sub
insl
mov
lds
movsb
push
xor
push
jns
sub
pop
xlat
les
addr16
mov
rorb
jle
ss
jns
jae
sbb
fsts
movsl
icebp
pop
jbe
les
xchg
add
inc
or
fimuls
cmpsb
mov
jne
xchg
push
pop
dec
adc
dec
out
and
out
insb
or
es
xchg
sub
sub
outsb
fsubr
enter
xchg
jmp
pop
stc
stos
testb
pusha
xchg
inc
inc
stc
jp
push
incl
std
pop
or
jge
test
movb
imul
out
push
push
hlt
xor
sbb
cltd
dec
or
lret
popa
testl
pop
je
xchg
sbb
fisttpll
cmp
and
stc
loop
fiaddl
or
andl
xor
ljmp
jae
push
jbe
out
dec
sarl
inc
xchg
inc
in
outsl
xchg
jnp,pt
jno
mov
xchg
cmp
sub
loop
dec
xchg
test
fs
sahf
xor
mov
scas
mov
xor
fucomi
dec
mov
rcr
imul
ds
mov
ds
into
ljmp
xchg
adc
dec
push
and
sub
aas
pop
inc
or
cmp
into
mov
mov
in
dec
les
dec
clc
test
cli
fistpl
xchg
cmp
out
gs
lods
xor
dec
outsl
push
popf
jbe
cmp
repnz
cmp
adc
inc
fnsave
sbb
pusha
mov
shrl
add
xchg
sbb
ds
xchg
ss
shlb
lods
rcll
or
mov
sub
movsl
clc
jne
dec
jl
cli
scas
movsl
xchg
es
mov
pop
test
mov
cmpsl
xor
movsb
inc
xchg
movsl
repz
aas
sbb
push
adcb
dec
push
cmp
enter
pop
cmpsb
cld
dec
test
mov
or
mov
or
dec
xor
cwtl
lds
or
pop
xchg
orb
sarl
cmpsb
jne
stc
mov
fistpll
enter
xchg
xchg
xor
and
ja
push
sub
hlt
insb
sub
les
dec
test
gs
xor
xor
mov
aam
iret
or
out
mov
cli
mov
cli
inc
xchg
xchg
dec
rcl
mov
es
adc
xlat
addr16
sahf
stc
lcall
ss
fmulp
fs
aas
mov
xor
mov
scas
add
in
cmpb
cmpsb
adc
lcall
iret
dec
lock
mov
ljmp
lcall
xchg
add
or
sbb
js
jmp
lods
popa
mov
xor
dec
mov
mov
jae
sub
loope
movsb
pop
push
xchg
xchg
orl
jnp
call
adc
pusha
sub
push
xchg
and
or
rolb
scas
clc
jge
out
shll
int
std
sarl
cmp
out
in
pop
add
cli
push
add
jbe
push
clc
test
ret
and
jo
clc
sub
cmc
pop
add
jns
fcmovnb
or
jmp
inc
jo
and
in
and
shrl
shlb
mov
dec
idiv
in
jmp
lcall
sbb
out
xchg
cwtl
push
push
and
hlt
mov
loop
or
iret
inc
int
addr16
mov
out
adc
jge
dec
xchg
dec
dec
test
aas
inc
cwtl
cli
pop
xlat
clc
xchg
push
mov
cmp
pop
xor
mov
xchg
aam
test
sub
dec
lcall
add
addr16
xor
mov
lcall
or
lret
mov
outsl
ret
sub
lret
sbb
arpl
mov
jnp
jge
pop
and
imul
inc
outsl
scas
jae
mov
push
daa
fldl
ret
stos
stc
jp
jge
repnz
cli
jp
push
imul
aad
xlat
test
cld
xor
andl
imul
fnstsw
dec
mov
leave
adc
xchg
mov
cmp
add
iret
aad
xchg
mov
cli
inc
je
fsubs
cmpsl
jle
aaa
pop
mov
vmwrite
lahf
push
lcall
orb
xor
js
rolb
test
out
sub
inc
icebp
shlb
or
pop
imul
bound
scas
neg
push
adc
pop
adc
fstpl
outsb
and
xchg
test
cmp
inc
lea
or
or
adc
aam
sub
mov
add
lods
arpl
out
js
xchg
gs
lds
loopne
sarb
mov
leave
clc
leave
jle
aas
and
movsb
addr16
cld
cmp
mov
ljmp
ficoml
xor
notb
sti
dec
inc
shl
dec
lods
fimull
nop
xor
cld
shl
arpl
mov
out
in
movsl
mov
popf
test
push
clc
in
pop
test
jg
ret
xchg
lea
loopne
jns
dec
pmullw
and
push
cld
cltd
imul
pop
add
popf
pop
pop
orl
fsubrs
cmpl
mull
xchg
cmpl
inc
loopne
jge
cmpl
cmovp
xchg
jp
cmpsb
pop
adc
std
adc
popf
sub
cmp
ja
mov
xchg
negb
outsl
jb
pop
dec
pop
movsb
pop
pop
sbb
add
jne
xor
push
cmpl
jmp
cmc
pop
inc
mov
push
push
aaa
xor
cmp
fstl
into
jge
shlb
inc
inc
push
jb
mov
sahf
out
pushf
je
adc
outsl
xchg
stos
xcrypt-cfb
cmpsl
and
cmp
out
add
jle
xchg
or
sbb
or
mov
int
xor
inc
out
incl
daa
cmp
rcll
repz
pop
and
loope
in
mov
add
lock
sbb
jo
ja
xor
jecxz
and
lods
leave
data16
push
xor
and
inc
sbb
mov
gs
inc
mov
push
mov
pop
cli
fildll
pop
test
lods
xor
push
in
aad
push
cltd
or
mov
mov
jo
mov
loopne
cmp
and
pop
xor
pop
push
inc
es
outsb
and
cmp
dec
aas
scas
scas
lods
dec
jg
lret
sbb
push
loopne
icebp
pop
add
int
inc
adc
xor
sub
push
cld
sub
jne
mov
pusha
loope
ret
jnp
or
mov
scas
test
inc
int3
pop
xlat
mov
and
inc
shl
mov
sbb
in
pop
imul
pop
xlat
inc
push
xchg
cltd
shlb
jmp
iret
fstp
stos
into
dec
iret
repz
sub
mov
pop
into
aas
mov
mov
out
push
jmp
lock
dec
frstor
nop
frstor
and
enter
sbb
and
and
jle
inc
in
inc
sub
lock
xor
pop
mov
jne
push
inc
push
add
push
mov
arpl
pusha
mov
sbb
dec
pop
push
cmp
mov
sub
push
sbb
add
mov
adc
in
mov
fwait
mov
lahf
and
push
shll
cmp
pop
xchg
pop
fdivrp
gs
jnp
scas
jbe
inc
call
ret
dec
lcall
ficoms
jg
jo
adc
xchg
or
aas
scas
mov
lock
sub
pop
sub
mov
clc
xchg
jecxz
mov
add
mov
mov
jmp
ljmp
push
andl
dec
jge
pop
push
pop
out
call
and
fstl
dec
push
inc
jne
or
movsb
sub
sarl
adc
loope
sti
jg
dec
lret
lods
lods
dec
dec
mov
mov
into
lods
mov
mov
xchg
mov
cltd
mov
pop
inc
std
out
cmpsb
sub
xchg
pop
xor
lock
dec
mov
push
repz
icebp
xchg
xchg
sbb
or
jg
dec
jmp
rcll
cmp
cmp
les
test
sbb
or
push
popa
jnp
daa
lods
dec
in
xchg
xor
rcrl
dec
js
push
out
mov
movsb
add
aaa
add
jg
sub
je
xorb
or
icebp
adc
shl
sahf
or
ljmp
sbb
mov
dec
sub
lcall
inc
pop
je
jg
mov
fadds
fstps
test
push
pop
in
es
rorb
mov
xchg
add
fucom
push
insl
dec
xchg
lcall
les
addb
pop
mov
je
repz
test
sahf
lods
scas
mov
dec
in
push
mov
xchg
stos
mov
mov
call
jo
push
loop
outsb
xchg
lret
std
cmp
push
and
push
in
out
inc
ljmp
mov
rcl
pop
es
rcr
push
jg
notb
shrb
std
shrl
enter
adc
movsb
xor
mov
mov
xchg
rclb
fwait
ret
sar
push
inc
fmuls
data16
sub
jne
dec
cs
out
out
dec
subb
test
scas
sub
jbe
in
and
jl
add
mov
inc
shll
add
ret
pop
aas
std
mull
push
mov
push
mov
dec
mov
adc
out
shl
sahf
jg
sub
sub
call
push
mov
inc
shr
adc
nop
push
call
add
xor
jp
stos
lahf
pop
cmpl
mov
push
xchg
jne
pop
fucomip
fstpl
inc
repnz
mov
mov
lods
push
stc
sub
fnstsw
scas
push
push
lea
xor
push
loopne
pop
push
jmp
xchg
popf
jl
arpl
int3
inc
aaa
push
xor
movsl
jae
push
inc
add
inc
hlt
sub
aaa
testl
lock
xchg
xcrypt-cfb
cmpsl
mov
lahf
mov
test
adc
xor
aad
cmp
mov
mov
jp
sub
mov
or
add
adc
fstps
xchg
in
push
push
dec
pop
cmpsl
ja
dec
aas
inc
enter
dec
test
add
popa
std
mov
push
inc
cld
arpl
mov
imul
in
ja
pop
popf
xchg
loope
mov
fs
lret
xchg
loope
fiadds
jno
lea
scas
imul
outsb
loop
inc
pop
rcll
dec
outsb
mov
adc
pop
in
cmp
mov
mov
out
xchg
imul
sub
inc
repz
stos
sub
jnp
sbb
movq
or
aad
cmp
shrb
ja
pusha
sub
test
notb
pop
rcl
mov
mov
ss
inc
push
or
mov
or
sub
js
dec
es
aas
dec
cmp
jne
xor
jbe
mov
in
cmp
jp
xchg
jo
add
fimuls
pop
inc
nop
cmpsb
stos
loopne
data16
xor
jp
sbb
mov
cmp
pop
or
cmpl
je
push
adc
mov
mov
sbb
sub
sar
push
mov
insb
sti
pop
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
.byte
pop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
pop
call
call
int3
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
je
js
add
add
stc
add
add
add
add
add
add
add
add
jb,pn
popa
je
add
jle
add
add
add
add
add
add
add
inc
add
loopne
fs
je
add
add
cmp
add
xor
add
jp
add
xor
add
add
je,pn
js
add
add
out
add
add
add
pushf
add
add
add
add
jb,pn
popa
je
add
test
add
add
add
sbb
add
dec
add
inc
add
loopne
fs
je
add
add
add
add
add
add
add
add
add
add
dec
inc
inc
dec
pop
xor
add
add
pusha
call
pop
int3
xchg
jl
push
or
movsb
andl
or
js
fldt
jne
sahf
sbb
lea
icebp
cmc
sbb
imull
inc
iret
xor
sub
xor
add
jmp
jmp
call
scas
xlat
add
nop
addb
out
pop
ja
setg
mov
mov
shll
bound
insb
jnp
test
pusha
and
and
mov
inc
lea
mov
add
and
dec
cmp
cmp
push
add
mov
sub
scas
stos
jle
lret
out
jmp
mov
or
in
xchg
enter
cmp
ret
jg,pt
and
jge
loopne
popa
and
jge
jle
inc
out
lret
sahf
ja
or
js
or
divl
jnp
jge
iret
cmpsl
ds
push
daa
mov
or
push
push
or
je
push
xchg
adc
nop
test
or
popa
add
aaa
ret
inc
xchg
cld
gs
push
push
scas
iret
sbbb
das
jae
sbb
mov
cwtl
cmp
imulb
jl
xchg
out
dec
ja
or
pop
ja
push
sbb
mov
test
int3
lcall
test
lock
imul
and
ja
daa
or
icebp
stc
inc
in
mov
sbb
cltd
mov
ja
adc
icebp
cmpl
xchg
ljmp
aas
ret
mov
pop
aam
xchg
mov
vpcmpeqw
je
mov
pusha
dec
cmp
cmp
fists
sub
fnstsw
aas
test
pusha
aad
cmp
xor
stos
fmuls
cwtl
mov
cmp
jbe
lcall
jle
jp
mov
cld
and
leave
cmp
add
cltd
sahf
or
stos
pop
push
mov
adc
sbb
inc
push
mov
cmp
outsl
dec
sub
or
cmp
out
sub
loop
xor
xchg
lret
clc
xchg
cmpl
and
cwtl
daa
shrb
lods
out
push
add
outsb
inc
in
mov
push
fcomip
mov
push
repz
inc
aad
lahf
pop
jo
cmp
xchg
fdivs
and
rcrb
xor
xor
dec
adc
ja
mov
shlb
std
xchg
adc
movsl
subl
add
popa
xor
xchg
cmpsl
sar
mov
cltd
sbb
mov
sahf
clc
outsb
les
loop
addb
push
pop
xor
nop
in
adc
push
pusha
cmp
xor
mov
xchg
or
outsb
jo
stc
and
icebp
add
push
mov
jmp
and
movsl
xchg
xor
fwait
xchg
pop
push
mov
sahf
aaa
dec
fisttpl
movsb
insw
cli
add
iret
dec
dec
jae
int3
mov
decl
pop
jle
sub
adc
sbb
fdiv
xchg
int
insb
mov
or
inc
xor
pusha
mov
sub
xor
std
push
and
mov
mov
cmpsl
das
mov
test
push
xchg
sbb
and
das
test
xchg
jge
lcall
ds
sbb
adc
xor
stc
jne
repz
push
adc
cmp
outsl
insl
mov
adc
je
sarb
cmpsl
fdivl
mov
add
lods
mov
icebp
mov
in
dec
cmp
gs
xor
or
mov
sti
adc
xor
adc
iretw
and
push
pop
pop
ja
enter
sub
ret
and
dec
jo
xor
ret
push
arpl
scas
cmp
cmp
mov
lods
outsl
jl
cmc
mov
cmpsl
dec
mov
dec
adc
rcll
sub
movb
or
ret
add
mov
insl
pop
sti
add
inc
outsb
lods
mov
ljmp
adc
ds
fs
dec
repz
pop
sbb
js
push
or
popa
mov
xchg
xor
jae
jecxz
aad
xchg
xor
mulb
aas
dec
lret
aaa
mov
add
cmp
int
push
and
jmp
mov
mov
sbb
pushf
ss
orb
daa
rcll
mov
and
lea
lahf
cmp
ds
and
fs
or
int
mov
dec
xchg
and
mov
movsb
jae
addr16
push
pop
or
mov
int
mov
dec
sbb
sbb
xor
addps
ja
mov
mov
sbb
loopne
xchg
mov
movsb
lock
dec
inc
push
shll
scas
xchg
fs
mov
lock
and
xor
call
lea
mov
push
in
in
xor
xchg
repnz
test
int3
xor
add
imul
xchg
ljmp
mov
xor
jl
push
aam
cmp
add
cmp
add
fidivl
add
hlt
aas
ret
shrb
mov
sub
aam
push
insb
mov
pop
inc
rcrl
dec
lods
or
movsl
fnstcw
add
mov
add
pop
std
cmc
dec
pop
mov
dec
sub
lods
hlt
xor
fs
sbb
shrl
xchg
or
sbb
hlt
xor
xchg
outsb
loope
out
fcmovnb
sbb
xlat
loop
enter
aad
push
in
pop
imul
adc
scas
ds
stc
pop
jns
xchg
xchg
add
pop
out
mov
and
cmp
sbb
push
inc
je
inc
loope
cs
mov
shlb
call
out
out
mov
xchg
dec
xchg
mov
hlt
in
fcmovnbe
insb
mov
inc
cmp
in
aad
int
xor
xor
add
jmp
pop
adc
xchg
jb
mov
popa
jl
aas
sbb
insb
arpl
int
dec
pusha
and
lods
jg
int3
xor
jbe
fsubrs
into
ret
sahf
cmp
leave
push
pop
js
xchg
inc
xor
mov
mov
fldcw
xchg
insl
jl
push
adc
insb
xor
lret
mov
pop
xlat
xchg
in
adc
mov
and
add
sub
xchg
icebp
and
pushw
outsl
jmp
pop
ljmp
xor
in
enter
mov
out
xchg
adc
leave
lcall
lret
test
jbe
xchg
xor
add
cli
pop
push
dec
mov
push
xlat
xchg
push
mov
outsb
cmpsl
mov
or
notb
jp
aad
cmp
andb
jle
mov
data16
dec
cltd
out
xchg
xchg
mov
adc
xor
push
pop
popf
stc
sub
mov
pop
lret
stc
and
push
add
lea
cli
sub
or
popf
into
andb
mov
xchg
mulb
xchg
loop,pt
cmp
ds
jle
loopne
mov
cmpsl
lret
mov
and
addr16
mov
xor
aam
mov
movsb
cmp
inc
test
in
fwait
or
in
cmp
dec
mov
xorl
cltd
into
and
call
ljmp
adc
jle
xorl
sbb
mov
inc
push
pop
movl
sarb
cmp
mov
cmpsl
or
ljmp
and
xlat
leave
lods
movsl
shl
push
stos
push
mov
out
xchg
fwait
movsb
out
dec
sbb
arpl
pop
popa
pop
jns
je
sub
aas
mov
adc
sbb
loop
int3
jo
lock
or
stc
push
push
imul
popf
and
lahf
jg
outsl
movl
shrb
leave
jl
dec
push
setge
push
inc
lcall
icebp
test
mov
cmp
xchg
mov
sbb
mov
inc
mov
in
push
mov
mov
push
fstpt
mov
pop
sbb
and
es
insb
hlt
outsl
loope
stos
ret
in
inc
push
adc
sbb
int3
sub
add
cmp
jnp
add
rorl
out
fmull
push
mov
mov
fstpl
xchg
es
push
movsb
subb
inc
jne
dec
popa
iret
jl
cs
xchg
ljmp
pop
aas
or
lods
xchg
or
out
test
in
mov
bound
push
mov
orl
adc
nop
cmp
lea
pop
pop
ja
addr16
xor
les
mov
shl
aas
adcb
pop
lock
cmovno
add
in
mov
into
scas
cld
js
mov
in
sbb
aas
lds
ljmp
cmp
vpmulhw
shll
add
xlat
fnstenv
pop
icebp
cmp
clc
push
dec
ss
daa
or
fsts
add
mov
ret
scas
and
pop
xchg
fstpt
mov
je
xor
xor
xchg
add
cmp
in
pop
and
aas
sbb
xor
aaa
push
mov
fs
in
xchg
sbb
and
inc
mov
inc
mov
push
sbb
aaa
popa
sub
outsl
xor
out
jecxz
mov
mov
cli
stos
pop
movl
push
test
xchg
add
xchg
xor
mov
movsl
mov
popa
in
xlat
movsl
cmpl
mov
cmpsl
push
test
pop
inc
pop
mov
fbld
and
out
inc
adc
lds
iret
jge
sbb
repz
sub
mov
mov
lods
lcall
int3
adc
push
jg
add
add
sub
pop
xchg
push
fadds
push
jmp
lcall
repnz
xlat
push
xlat
mov
dec
jne
cmp
xor
xor
out
ficomps
je
clc
push
mov
int3
lcall
lret
mov
xor
movsl
mov
dec
push
sbb
or
push
sahf
shlb
into
movsl
stos
imul
icebp
in
mov
xor
fldcw
mull
mov
je
mov
fiadds
inc
sub
psubsw
pop
sbb
push
int
out
pushf
bound
shrb
incl
or
push
ljmp
icebp
loop
pop
cld
neg
adc
imul
std
insl
push
sahf
aas
mov
rclw
lods
xor
jp
or
lcall
fldt
repnz
inc
clc
cmpl
gs
jne
dec
dec
adc
sub
xchg
fcomi
ret
inc
push
es
push
mov
mov
push
xor
cld
xchg
cwtl
scas
call
fadds
sti
test
shlb
ret
loopne
pop
addl
push
xor
je
adc
sahf
cmp
ret
shrl
out
jnp
cmp
lods
push
mov
xchg
pop
mov
test
js
nop
add
cmpsb
mov
xchg
xchg
push
insb
dec
hlt
out
mov
aam
xchg
es
push
xor
mov
adcb
je
jb
xchg
iret
add
cltd
fnstenv
dec
clc
je
push
test
call
sub
test
xchg
lret
cmp
push
push
filds
pop
test
test
pop
arpl
into
or
push
in
add
sub
xchg
std
pusha
mov
cld
andl
mov
insl
sbb
cmp
insb
sarl
mov
jmp
ds
hlt
jl
push
insb
aas
mov
cld
lods
adc
sahf
fimuls
add
testl
fmull
inc
mov
outsl
fcoml
xor
mov
and
scas
or
mov
mov
sbb
rcl
ficoms
inc
mov
xchg
mov
dec
or
out
cwtl
or
push
cmpsl
jb
sbb
inc
push
gs
push
stc
dec
xchg
dec
loop
addr16
inc
sub
shr
inc
sub
popa
stc
popf
aaa
adc
es
outsl
roll
pushf
popa
cmp
shlb
inc
xchg
jnp
lds
add
iret
sbb
sbb
xorb
sbb
jp
push
adc
frstor
and
shlb
push
lds
ud1
popa
imul
or
test
or
fcoms
adc
sub
sub
ret
sub
nop
outsb
fldenv
gs
and
mov
dec
adc
sub
add
inc
pop
imul
inc
addr16
push
loop
loop
adc
gs
lret
ja
out
push
xor
into
mov
mov
das
jmp
pusha
mov
sbb
dec
jmp
and
xchg
and
orb
adc
insb
mov
in
and
mov
jbe
xor
inc
daa
adc
xor
push
data16
lods
inc
xor
inc
subb
in
push
andl
jb
push
push
cmp
mov
jg
cmc
pop
jle
cmc
lock
inc
sub
or
mov
fnstsw
nop
sbb
xchg
ja
in
in
push
cmp
adc
mov
mov
xchg
jns
stc
inc
data16
cs
xchg
cmp
shrl
lcall
push
or
pop
add
push
adc
push
enter
imul
add
or
mov
filds
xchg
sbb
cmp
push
jmp
xchg
push
mov
leave
roll
sub
mov
out
mov
shl
aaa
add
nop
jmp
adc
fwait
vdivps
test
cld
xor
and
shl
mov
inc
adc
pop
icebp
lret
fs
cmc
push
cmovns
mov
mov
test
nop
in
push
lods
xor
outsb
insl
cwtl
out
add
jl
inc
jnp
add
pop
inc
test
adc
jl
js
sub
push
ror
mov
push
jno
inc
idivl
xor
sahf
mov
lods
cmpsb
xchg
mov
adcb
iret
pop
les
mov
jne
lds
mov
or
ret
incb
adc
xor
cmpsl
push
ds
std
push
arpl
popf
call
dec
xor
mov
mov
inc
inc
dec
shl
mov
aas
stos
or
stc
mov
aad
sbb
push
xchg
cwtl
xchg
xchg
cmovne
call
fisubrl
push
fistpl
inc
push
test
test
lds
mov
dec
ljmp
xchg
into
cwtl
inc
jbe
pop
fcomps
into
inc
arpl
rcl
ljmp
mov
cmpb
cmpb
aaa
mov
push
sub
mov
push
in
outsb
loopne
inc
into
sbb
xor
pop
pop
jle
xchg
sub
ds
shlb
pop
repz
pop
insb
jb
jge
mov
mov
inc
addr16
mov
enter
cmp
mov
daa
push
les
and
pusha
add
imul
jbe
aas
into
outsw
repz
mov
sbb
out
iret
outsb
inc
sub
xorb
rol
cmp
dec
out
inc
mov
rclb
xchg
push
jne
sti
or
insb
stc
mov
pop
out
pop
movsl
lret
xbegin
and
jne
enter
adc
inc
mov
sbb
js
das
jb
jo
inc
jb
lods
aam
out
jp
jp
ret
mov
filds
and
aam
loop
sub
add
cmp
std
push
aaa
out
jecxz
nop
popa
sub
push
jg
pop
xchg
sbb
roll
xchg
test
xchg
mov
daa
xchg
loope
mov
pop
push
or
mov
dec
cmp
xchg
orl
sub
popf
inc
add
js
fwait
inc
and
dec
cmpsb
pop
xor
out
ret
mov
pop
mov
mov
sub
jecxz
lahf
sbb
pop
es
es
fxch
cltd
dec
outsb
push
mov
imul
mov
cmpsb
push
pop
push
sbb
js
add
lret
loop
or
imul
sbb
ljmp
aas
mov
popf
push
fcmovnb
in
fimuls
sti
sub
roll
or
jnp
xchg
sbb
ja
or
jnp
rorb
mov
mov
adc
lahf
dec
jg
sarb
pop
andb
or
test
enter
enter
push
test
popf
cmp
add
dec
pop
mov
loopne
push
scas
fwait
push
daa
shl
inc
out
lods
or
sbb
inc
arpl
inc
xchg
push
and
and
dec
dec
xor
lret
or
repz
sub
in
into
cmp
sbb
xor
inc
repz
xlat
jl
cmp
inc
adc
xchg
sub
cmp
sbb
sbb
out
mov
mov
hlt
jg
jmp
pop
mov
cmpb
mov
fsubrs
jb
in
enter
and
dec
rorb
cwtl
popa
pop
ja
in
stos
push
in
xchg
or
mov
inc
xchg
repz
imul
xor
mov
jnp
pop
dec
stc
test
iret
mov
mov
fs
js
push
shll
cmpl
push
adc
jmp
and
xor
mov
mov
adcl
sbb
xchg
adc
jge
stos
mov
add
mov
pop
cmpb
mov
mov
fsub
sbb
dec
imul
stos
adc
movsb
sbb
xchg
fwait
mov
push
sarb
xor
mov
pop
les
pop
xor
aas
xchg
cmpsl
pop
jmp
mov
jmp
cli
sub
push
xlat
and
inc
jp
push
sub
dec
sub
cmp
inc
mov
scas
pop
jecxz
cwtl
sbb
mov
mov
call
sti
callw
loopne
popa
adc
inc
leave
mov
orb
or
inc
out
clc
cmpb
aam
cmp
insb
test
hlt
inc
mov
sub
pushf
dec
mov
jl
add
jo
andb
cmpsb
fs
or
mov
nop
lock
xchg
dec
dec
ret
and
sbbb
xchg
pop
add
push
pop
mov
or
jmp
inc
add
std
adc
push
fs
cmc
push
inc
std
ja
fwait
fcmovu
popf
subb
pop
sub
in
stos
jp
pop
mov
inc
dec
or
icebp
or
add
stos
pushf
inc
jbe
mov
jnp
xchg
xchg
pop
jns
jp
punpckhdq
dec
loop
stc
fsub
fisubs
adc
ret
mov
xlat
sahf
mov
mov
inc
test
jl
jle
pop
sti
push
and
mov
mov
outsl
scas
push
inc
ficompl
sub
shlb
mov
or
push
jmp
mov
test
xor
in
mov
mov
xchg
orb
jbe
xorl
loope
faddl
mov
push
loopne
cmc
daa
jae
gs
mov
negb
and
cli
ret
icebp
sbb
push
or
lret
enter
shlb
cmp
mull
mov
lea
sahf
stos
jae
xchg
out
adc
inc
push
iret
or
fsub
fiaddl
fstl
jmp
leave
cmpl
mov
test
dec
popf
aaa
loope
outsb
rcl
mov
js
mov
jmp
xchg
mov
fnsave
push
bound
imul
mov
fnstsw
sub
in
cmpb
fidivl
lock
das
inc
pop
insb
xchg
push
shrb
pop
adc
lahf
imul
jb
jg
int
ret
lods
lcall
xchg
mov
pop
aad
inc
sub
xchg
push
mov
or
cmpb
xor
cmpsb
inc
cld
fistpll
in
or
int3
popa
xor
push
pop
dec
inc
int
mov
cmp
scas
mov
cmp
inc
push
adc
sub
outsb
cmpsl
xchg
and
ret
ds
imul
lret
sarl
lods
rclb
xor
push
ficoml
sbb
push
xchg
mov
stos
inc
inc
mov
xor
mov
out
dec
shl
movsl
out
cli
negl
out
sar
scas
jae
mov
sbb
loop
movsl
pusha
scas
fnop
push
pop
xchg
and
adc
and
mov
icebp
and
out
int3
je
and
movsb
jge
mov
rcrb
mov
daa
push
clc
add
xlat
test
mov
lahf
cmpsb
push
or
fldenv
xchg
mov
out
or
pop
out
dec
repz
dec
xchg
dec
lds
push
xor
inc
pop
jb
repz
xchg
push
push
mov
sbb
xchg
ds
or
add
shl
inc
push
fidivl
push
jbe
cmp
sub
cmp
dec
outsb
cmpsb
cwtl
out
or
jle
inc
rcrl
jne
pop
popf
push
ja
in
or
push
mov
insb
or
bsr
adcb
mov
sbb
int3
dec
dec
push
sub
push
pop
cmp
es
dec
jbe
dec
mov
fs
pop
nop
push
add
aam
sub
daa
lds
cmp
mov
sbb
enter
adc
mov
push
sub
jbe
mov
leave
sub
cmpsb
mull
fstpt
push
and
jne
daa
cmpsl
outsl
js
mov
rclb
add
inc
loop
dec
dec
cpuid
les
iret
sub
cmp
fcmovu
push
pop
push
fcmovne
fstpt
pop
sub
lea
cmpsb
inc
jbe
ja
mov
mov
jmp
mov
out
sbb
dec
in
mov
fldl
icebp
test
and
mov
and
xor
sbb
push
adc
jbe
mov
sub
pop
jg
into
fstl
push
push
push
fidivrl
jle
aad
fisttps
adc
sbb
leave
aas
fmul
dec
inc
cwtl
xor
mov
push
jo
cmp
rcrb
fwait
and
rolb
push
lods
in
jns
fdivs
lods
jg
clc
push
cmp
mov
data16
mov
mov
jae
negb
mov
push
dec
jge
xchg
sbbb
enter
sbb
sar
xor
stc
jnp
fs
add
sbb
xor
pop
add
dec
mov
or
lock
test
ficoml
repnz
lcall
je
ss
pop
mov
push
lock
dec
loopne
pop
stos
fs
sbb
outsl
cmpsl
call
or
iret
xchg
xor
xlat
push
hlt
jg
add
in
sub
jae
gs
xchg
inc
xchg
adc
stos
mov
cld
ja
mov
roll
lods
js
arpl
dec
pop
aad
xlat
jo
or
lret
hlt
in
or
mov
daa
sbb
adc
fsubrl
cmc
cwtl
inc
dec
adc
cwtl
ds
push
imul
or
xchg
mov
xor
mov
sub
je
repnz
or
mov
outsb
in
adc
pop
xchg
call
shl
fld
out
pusha
cmpsb
cmp
loop
xchg
cmp
dec
push
inc
shll
or
test
jns
fisttps
mov
xchg
and
jmp
or
inc
repz
mov
push
int
arpl
std
ljmp
jmp
das
adc
leave
aam
icebp
xchg
push
push
fsub
hlt
mov
adc
int3
adc
popa
cmp
testl
inc
xchg
sub
int3
cmp
dec
hlt
and
mov
jae
mov
adc
jnp
outsb
pop
out
cmovp
push
mov
mov
imul
out
xchg
call
mov
mull
aaa
add
into
adc
ss
adc
sti
loope
mov
sub
adc
lret
std
xchg
hlt
imul
int3
pusha
lds
xor
xor
mov
or
rorl
dec
push
adc
lods
pop
stos
int
jb
mov
or
xor
or
cmc
jg
adc
xlat
arpl
gs
es
inc
pop
outsl
sub
dec
cmp
sub
push
jno
cmp
clc
mov
pop
leave
cld
push
inc
xchg
jne
arpl
lret
insl
add
or
dec
decl
add
mov
add
jne
sub
pop
in
paddusb
or
jle
pop
cs
outsb
pop
jp
sbb
inc
inc
mov
imul
sub
imul
add
ret
adc
mov
pop
sarb
int
aad
push
subl
bound
flds
jge
popf
aas
cltd
and
into
es
dec
xchg
std
negl
test
mov
fisttpl
mov
jb
jb
dec
push
sub
into
rcr
xchg
cmp
clc
sbb
pushf
je
and
sbb
loopne
je
dec
clc
and
inc
imul
leave
mov
adc
outsb
in
or
js
mov
cmp
inc
rcr
dec
push
sub
mov
push
les
mov
jo
inc
repnz
in
andnps
and
insb
or
ret
cmp
mov
mov
stos
pop
sahf
push
jae
addr16
jge
jne
clc
push
and
insl
int
xchg
dec
imul
cld
daa
ljmp
in
or
cld
mov
repnz
jnp
inc
push
subb
inc
pop
and
mov
sub
push
loopne
sbb
aam
push
jno
in
enter
cmp
adc
mov
push
inc
jnp
adc
lea
push
rcll
pusha
mov
nop
mov
pop
repz
cmpl
and
sbb
cmp
xchg
cli
mov
ret
test
rcr
push
movsb
adc
fcoms
push
leave
stos
fsubs
repnz
adc
mov
mov
push
or
mov
pop
arpl
mov
in
cmp
pop
pop
out
cmp
mov
dec
dec
iret
popf
lea
outsb
mov
mov
sbb
fs
add
or
cmp
xor
dec
and
imul
stc
push
jns
lock
scas
loope
push
mov
adc
inc
pop
sbb
xlat
xor
insb
negb
leave
xchg
fmuls
pop
das
or
sub
adc
lret
ds
mov
sahf
pushf
in
pop
pushf
push
aam
mov
test
mov
xchg
repnz
mov
scas
sbb
cli
js
movsb
sahf
push
pop
or
ds
in
xchg
inc
or
lahf
adc
test
scas
in
bound
mov
cmp
mov
stc
cmp
push
mov
iret
mov
nop
nop
fstpt
sub
mov
fdivp
xor
insb
cmp
sbb
out
mov
stc
mov
stos
push
movsl
adc
mov
int
sbb
pop
xchg
sbb
mov
pusha
stos
cmp
jl
lcall
popa
jmp
lea
dec
cltd
mov
xor
fcoms
lods
popf
int
out
aaa
imul
add
xchg
dec
fprem1
pop
mov
into
scas
pushf
add
shlb
cwtl
cli
cmpl
mov
mov
ds
lret
add
jmp
jae
or
mov
fsubr
inc
and
jmp
enter
mov
fisubrs
mov
mulb
scas
ljmp
shrl
mov
xorl
dec
inc
iret
and
xchg
mov
jne
mov
test
int
xchg
pop
sub
mov
mov
ds
fsubrl
insl
int
into
fsubrs
jbe
xor
ret
pusha
adc
and
fldenv
jbe
mov
leave
pop
mov
mov
out
adc
sub
push
mov
lods
adc
adc
cs
pop
add
nop
cmp
adc
stos
and
sbb
movsb
leave
jnp
add
shrl
sbbb
mov
adc
sub
jns
inc
aam
or
stos
inc
jnp
ss
adc
jb
mov
xor
mov
inc
dec
shlb
test
test
mov
xlat
std
sub
popa
mov
and
std
sub
inc
aas
add
loop
dec
pop
adcb
ss
das
cltd
imul
xor
and
inc
push
out
icebp
test
ljmp
add
js
pusha
xchg
rclw
and
sub
inc
sub
xchg
mov
inc
push
xchg
cmp
in
rcrb
call
xorl
mov
xor
adc
mov
sbb
leave
je
add
mov
xchg
imul
ds
sub
pop
pop
add
push
popa
mov
push
popf
inc
mov
mov
pushf
dec
mov
scas
cmp
jge
jge
sub
pop
mov
js
sub
aas
sbb
insl
or
mov
fsub
jmp
cmpsl
push
push
lods
imul
loope
jg
mov
das
xchg
cmpsl
shll
mov
mov
jns
mov
ss
sahf
mov
cmpsb
mov
mov
cmp
fidivrs
or
or
lods
push
movsl
sar
mov
leave
mov
cmp
call
shlb
and
les
jb
lret
int3
icebp
mov
imul
jge
pop
jg
ss
lahf
inc
shlb
in
stc
dec
rcll
loope
jnp
push
mov
xchg
inc
xchg
iret
xor
int
dec
adc
cltd
xchg
into
push
inc
adc
iret
mov
daa
call
cmp
mov
fucomip
into
les
cmp
xlat
shl
aas
push
das
mov
pusha
ficompl
movsb
inc
out
push
pushf
loop
loope
pop
in
push
cmp
jnp
repz
aad
inc
mov
sbb
cltd
inc
loopne
xchg
cmpsb
mov
lret
loopne
mov
test
cmpl
aaa
loope
jne
lahf
aam
xchg
push
mov
mov
jae
imul
and
into
fstpl
aas
arpl
cbtw
add
sub
shll
adc
bound
pop
int3
stos
and
inc
sti
xchg
loopne
mov
je
addr16
push
lret
cmp
cli
test
fwait
pop
loope
test
xchg
mov
xor
mov
cld
mov
mov
outsl
add
jae
nop
mov
popf
mov
add
stc
xchg
jno
dec
xor
sbb
mov
lods
push
dec
jecxz
fisubrl
cmpsl
dec
xor
adc
int3
call
cmpsl
cmp
mov
pop
fcompl
sbb
jmp
cmc
rcrl
push
xor
dec
inc
sbbl
es
add
int3
gs
sarl
or
xchg
addr16
out
jge
mov
cwtl
mov
daa
inc
pop
sub
ret
jno
jmp
out
lds
mov
adc
adc
shl
or
sub
outsb
add
test
sbb
add
xchg
std
int3
loopne
xor
sbb
push
inc
test
je
cmc
pop
stc
jbe
mov
fiadds
push
repz
dec
xchg
ret
call
dec
pop
adc
repnz
in
pop
mov
addb
push
nop
mov
push
loope
mov
movsb
clc
sub
out
sub
and
out
jne
push
fiadds
jp
dec
imul
sub
mov
pop
add
rcll
roll
shrb
cmp
xor
jnp
mov
movsl
pop
xchg
add
nop
and
sbb
mov
mov
mov
dec
cmpsl
add
cltd
mov
rcr
pop
ret
lret
mov
xor
dec
push
inc
sbb
xor
and
ret
stos
out
cli
mov
cmp
lods
dec
sysenter
xor
sbb
into
fdivr
subl
mov
sbb
add
mov
pop
adc
xchg
les
xchg
cmp
cmpsl
sbbb
push
push
or
mov
imul
adc
prefetch
or
roll
out
sbb
jmp
fisttpll
cmc
push
dec
inc
fisttpl
push
xchg
dec
pop
cmpsb
lods
dec
push
xchg
mov
in
jecxz
in
and
test
cmp
adc
aas
lds
or
mov
in
fcomps
jle
pushf
shll
mov
xchg
popf
cwtl
fsubrl
and
jnp
lahf
jecxz
fcmovnu
add
rorl
das
inc
jae
cwtl
addb
outsl
or
mov
xor
mov
rorb
dec
add
loope
add
pop
cmp
lods
cs
mov
and
cwtl
cmp
scas
insl
repnz
das
adc
outsb
out
and
inc
dec
insb
mov
movsb
int3
push
pop
aam
push
repnz
lret
push
xor
inc
outsb
int
fldt
mov
rclb
pop
das
sbb
push
or
sbb
and
aas
adc
fidivl
lahf
jge
jge
mov
mov
fistl
data16
mov
mov
xchg
xchg
push
imul
into
sub
orb
nop
pop
les
gs
jae
aas
stos
aas
imul
mov
icebp
std
xor
pop
or
adc
movsl
mov
int3
pop
ret
lret
mov
push
loop
sti
aam
jmp
shll
and
gs
cmc
add
xor
sbb
popf
mov
int3
pop
int
mov
pop
popf
add
out
stc
fcoms
bndstx
dec
lret
repnz
mov
mov
sub
jmp
cmp
sub
mov
adc
xchg
inc
mov
mov
dec
cld
es
test
jge
dec
sub
and
inc
mov
lds
inc
cmpsb
fmuls
push
push
mov
bound
push
loope
pop
push
cmpsb
dec
pop
and
cmp
mov
popa
shl
jbe
popa
pushf
int3
inc
mov
xor
mov
addl
nop
out
mov
lock
lcall
sbb
dec
push
push
jecxz
xor
jb
in
int
mov
push
cwtl
xor
stc
jmp
rep
sbb
and
mov
and
sbb
gs
imul
pop
and
bound
pushl
push
cmp
xchg
cli
sarl
sahf
lods
pop
das
dec
das
adc
adc
call
xchg
test
add
cmp
cmp
hlt
out
pop
icebp
cltd
ds
inc
movsl
pop
push
adc
push
jl
inc
xor
roll
mov
mov
clc
jbe
cmpsb
testl
test
fwait
adc
fldcw
cmpsb
loope
jbe
cli
mov
cltd
pop
add
dec
sahf
dec
sub
mov
dec
sub
sub
dec
sbb
cwtl
or
adc
in
cmp
lods
lcall
cmp
jns
push
and
mov
push
xor
cltd
xchg
sbb
in
out
cs
stc
popa
test
lcall
inc
je
sub
mov
dec
ret
jg
sahf
or
push
inc
xlat
pusha
pop
je
xchg
ret
mov
je
sbb
test
out
mov
xchg
movsb
pop
mov
push
lret
gs
ljmp
jmp
adc
arpl
mov
jle
mov
push
movsw
and
mov
ja
lods
mov
movl
push
test
lds
rorb
aaa
pop
lods
push
cld
sub
xor
dec
leave
fidivs
xchg
ss
or
vcvttps2dq
xchg
jns
xchg
fcomps
jb
jge
stos
cmp
rcl
pop
xchg
mov
hlt
jo
in
fstps
scas
mov
dec
hlt
es
pusha
jne
cwtl
push
jp
test
shl
mov
cmp
das
mov
pop
xchg
scas
pop
dec
push
jnp
rclb
mov
mov
mov
sbb
pop
aaa
arpl
repz
out
insb
jle
mov
jl
popf
and
ljmp
push
sbb
fcmovbe
mov
std
lea
out
cli
dec
lods
int
sbb
adc
adc
enter
pop
cs
mov
dec
and
adc
insl
inc
xchg
jae
mov
ret
insb
xor
dec
pop
jnp
jbe
mov
jo
jecxz
xor
and
pop
cld
cmp
not
adc
pushf
sub
or
inc
jno
push
aad
and
jecxz
outsl
mov
outsb
mov
xchg
adc
mov
add
outsl
xlat
lcall
xrelease
and
mov
popa
pop
or
add
bound
xor
in
fmulp
adc
mov
das
mov
das
test
sub
push
ja
pop
jecxz
dec
lods
sbb
add
fnsave
fnstenv
ficoms
mov
mov
or
cmp
lret
mov
paddq
or
in
mov
lods
sub
jmp
jl
shl
addr16
fidivrs
lds
mov
or
loope
sub
or
or
jns
lahf
ror
jecxz
inc
lds
mov
jl
mov
aam
inc
mov
gs
add
das
mov
dec
mov
in
ss
mov
aas
out
jecxz
xor
notb
fidivl
pushf
cmpsb
mov
ljmp
ds
dec
addr16
je
rcll
ja
lock
sbb
sti
hlt
fs
lea
sub
or
mov
inc
pop
scas
out
ljmp
or
outsl
outsb
xor
cmp
leave
sub
xor
inc
mov
push
js
pop
inc
push
cmp
rolb
imul
jae
jns
or
shl
mov
cmp
xchg
mov
loopne
lods
jbe
cld
inc
dec
mov
xor
iret
sti
leave
jecxz
push
aaa
and
jecxz
lret
pop
imul
xor
sub
and
daa
sahf
icebp
outsb
andl
push
stos
xor
ljmp
in
inc
fsubrs
lods
ficompl
cmp
cli
clc
repz
shl
bound
lock
dec
mov
or
rorl
push
lret
add
xchg
and
es
clc
scas
adc
sub
pushf
dec
adc
ss
sahf
mov
push
xchg
or
out
or
fldcw
pop
aas
inc
sets
inc
dec
testb
push
adc
sub
and
jb
and
jbe
xchg
or
in
arpl
sti
xchg
sub
and
xchg
and
xchg
xlat
and
or
add
sub
or
mov
jge
push
xorb
jg
push
mov
push
push
xor
jno
cmp
hlt
jnp
ret
frndint
arpl
mov
push
jecxz
sub
outsl
das
int3
aaa
test
ret
cmp
dec
dec
inc
aaa
cmp
shlb
mov
sub
arpl
jae
mov
cltd
loopne
loopne
shrb
fcoml
lret
jo
inc
pushf
dec
jecxz
test
or
pushf
jmp
jbe
xchg
jns
cmpxchg
pop
xchg
sbb
aaa
hlt
aam
repz
test
jne
std
loopne
cs
or
aaa
cmp
xchg
cmp
and
mov
or
mov
fisubl
xchg
sub
jns
daa
int3
jp
pushf
xor
pop
push
sub
push
shlb
sbb
mov
adc
shll
xchg
js
fwait
push
lret
repnz
mov
and
mov
stc
stos
or
push
or
mov
lret
push
mov
inc
inc
out
movl
sub
mov
adc
negl
imul
add
pop
insl
pop
je
int
sbb
cmpsl
xchg
add
push
imul
aam
mov
mov
inc
ret
repnz
lods
mov
mov
inc
or
xor
faddp
enter
mov
mov
mov
mov
jne
lret
jl
out
cmc
pop
mov
push
mov
enter
data16
xor
mov
pushf
xlat
mov
in
xor
das
dec
icebp
adc
std
bound
int3
jmp
test
pop
fildll
jecxz
xchg
testl
fstpl
push
lods
inc
jne
hlt
into
mov
or
inc
lcall
out
cmp
add
shr
enter
mov
mov
aas
add
cmp
inc
mov
xor
in
xchg
pop
pop
mov
nop
push
fcoms
or
jl
movb
mov
mov
mov
loopne
xchg
ret
cmpsl
dec
inc
mov
xor
into
sub
jno
mov
pop
int
mov
in
jg
nop
lret
into
cmp
subl
jo
or
popf
and
pop
call
pop
push
rol
add
pusha
insb
jae
xchg
out
fstpt
stc
stos
mov
mov
jmp
sbb
cmp
mov
sbb
popa
pop
imulb
cs
or
xchg
jle
call
inc
xor
aaa
test
mov
sbb
mov
adc
mov
push
inc
jbe
jmp
pop
push
test
test
sbb
adc
xor
cmpsl
std
call
jne
xor
fsub
jo
sub
adc
xorl
push
in
xor
std
repz
xchg
xchg
jg
and
sbb
test
cmp
xchg
inc
cli
daa
out
out
fsubs
cmpsl
jp
andb
push
rol
lret
les
in
cmpsl
add
out
outsb
test
adc
mov
clc
xlat
xchg
cmp
fidivl
add
push
and
pop
jg
mov
mov
adc
insl
pop
xchg
and
mov
aas
js
mov
fdivrs
add
jne
insl
ds
mov
mov
xchg
mov
jle
cmpl
xor
enter
in
push
mov
and
pop
add
jl
inc
adc
or
into
decl
inc
inc
sub
outsl
cltd
cmp
nop
or
sti
ljmp
insl
das
adc
cld
lahf
mov
aaa
rcll
push
jno
lret
or
loope
insl
js
into
div
aas
mov
les
mov
in
sbb
lods
fsub
mov
inc
mov
mov
out
dec
je
xchg
adc
xor
in
cld
add
mov
pop
arpl
and
test
pop
out
push
or
pop
imul
xor
loopne
hlt
imul
sahf
mov
sti
mov
and
decb
jg
mov
mov
fdivp
mov
xor
imul
mov
gs
loopne
in
fsubrs
ds
adc
fwait
jecxz
pop
and
mov
insl
stc
mov
jmp
cmp
pushf
shl
pop
xchg
movsb
sahf
out
jnp
adc
push
sbb
dec
repnz
jnp
pusha
fstps
lods
or
mov
jbe
mov
loopne
push
loope
call
imul
lds
repnz
ja
ljmp
inc
add
jge
cmp
xlat
lahf
test
fs
shlb
je
ret
mov
dec
inc
jno
cmp
shlb
push
shlb
iret
into
sbb
inc
inc
xchg
movsb
inc
mov
jp
fldt
xor
push
mov
xchg
arpl
mov
and
ss
ret
idivb
dec
imul
push
adc
and
xchg
xchg
push
mov
or
jl
sti
jle
jg
stc
inc
je
mov
mov
adc
dec
or
cmc
xchg
nop
fwait
xlat
mov
out
loope,pt
cmp
cmp
push
das
mov
jae
pop
mov
cmp
adcl
cli
sub
rolb
cld
pop
iret
sbb
jle
in
fld
sahf
lds
jp
dec
jbe
cld
mov
cmp
loope
aad
scas
push
rorl
inc
out
xchg
adc
jbe
das
scas
ficompl
mov
cmpsb
inc
or
test
inc
mov
scas
cmc
into
sub
pop
shrb
sub
fcompl
cld
mov
xchg
inc
loopne
out
loopne
loope
push
in
mov
add
adc
fiadds
arpl
aam
or
cmc
or
loope
or
dec
popa
adc
loopne
jbe
xor
shl
cmpsl
cmp
lds
push
fisubrl
xchg
pop
fcmovb
xor
push
inc
push
pop
ss
cmp
sub
mov
shrl
idiv
repz
pop
mov
inc
push
jnp
icebp
pop
sbb
nop
adc
lea
or
mov
clc
or
xchg
inc
imul
inc
shll
mov
push
sub
push
cs
sub
popf
fcmove
lret
jecxz
fidivl
pusha
add
push
and
fildl
mov
cs
pop
ljmp
imul
xchg
pop
rcrl
dec
xor
add
jmp
loopne
pushf
cltd
sbb
scas
inc
xchg
gs
inc
out
lret
cld
push
mov
mov
or
mov
adc
pushf
cmp
test
cmpsb
cs
jp
roll
or
sbb
adc
jne
cmp
out
or
push
mov
mov
and
xor
jmp
in
arpl
pop
jmp
ret
pop
mov
or
cmp
out
mov
gs
bound
mov
cli
xchg
xchg
sbbl
rolb
cmp
sub
hlt
sbb
jp
xchg
out
jmp
out
jge
adcb
pop
imul
mov
loopne
lahf
pop
mov
mov
je
in
add
xchg
or
and
fildll
sbb
ss
mov
stos
into
push
sbb
adc
pusha
mov
mov
inc
sti
loop
sub
inc
sbb
sbb
cmc
ss
mov
ficoml
pop
cmp
xchg
test
adc
ja
dec
dec
nop
pop
or
lds
into
je
int
repnz
aam
jmp
shl
jae
daa
xor
std
lds
stos
fwait
adc
hlt
push
mov
sarl
in
xchg
push
addr16
adc
dec
dec
lea
adc
mov
or
popf
clc
ficoms
fnsave
mov
ja
xor
mov
or
jp
push
cwtl
and
mov
test
xchg
xor
add
cld
and
loop
loopne
pop
pop
fsubrs
stos
imul
int3
or
xchg
test
and
pop
lahf
pop
jmp
jg
lea
add
sbb
int3
icebp
aad
stos
jl
cmp
icebp
push
sub
pop
out
xchg
sbb
pop
mov
inc
cld
pop
sbbb
stc
push
loopne
in
les
ljmp
mov
adc
jno
xor
mov
popf
mov
ror
push
sbbl
loope
xor
and
mov
xchg
mov
mov
shrb
xchg
bound
or
in
das
push
fisubs
les
inc
les
jne
ror
sub
shlb
mov
jo
mov
jno
iret
jge
cmc
icebp
fsubrl
mov
imul
sub
mov
add
dec
add
je
inc
jg
dec
sub
add
jb
leave
add
pop
imul
pop
and
lea
idiv
mov
xchg
stos
mov
inc
inc
lret
fcomip
insl
int
jge
cmpsb
dec
insb
lret
cmc
stos
movsl
cmpsl
or
xchg
int3
pop
ret
imul
push
out
sub
std
jecxz
test
lods
movsb
clc
repz
xchg
mov
aas
push
cmp
add
jmp
mov
ss
inc
cvttps2pi
int
inc
outsl
out
xor
neg
xor
rorb
xchg
jge
das
and
roll
lcall
inc
lds
rep
xor
cmp
push
dec
mov
inc
sbb
scas
jo
adc
test
adc
clc
dec
in
sahf
xor
arpl
sub
sbbl
sbb
les
xchg
xor
outsl
stos
imul
sahf
cmp
lret
cmpsl
adc
dec
lods
popa
xchg
mov
pop
inc
lret
int
test
push
sti
in
data16
jmp
iret
out
push
mov
shlb
or
or
xor
or
or
ffreep
push
bound
mov
pop
repz
jne
fidivs
cmp
rcrl
and
push
sahf
xchg
pop
cmpsl
ret
inc
lcall
pop
outsb
mov
push
fidivrs
mov
or
mov
movsl
in
mov
mov
out
mov
adc
push
adc
sub
fxch
loopne
fistl
push
mov
out
outsb
test
xchg
mov
jnp
int
jb
ss
sub
gs
inc
pop
and
add
es
inc
jmp
outsl
xchg
or
cwtl
sti
mov
xchg
cmp
dec
popf
dec
xchg
mov
inc
fisubl
or
das
mov
and
into
cmp
mov
fwait
movsb
hlt
xchg
into
out
in
dec
mov
cmp
ret
add
mov
ret
into
or
into
sbb
dec
lcall
jp
in
stc
in
push
mov
jnp
push
fdivrs
xor
stos
repz
nop
add
sub
sarb
pop
jecxz
adc
lret
and
rcrb
xor
sub
imul
sub
xchg
ja
stc
inc
cmp
data16
mov
std
ja
push
or
or
shll
leave
sub
lahf
dec
lret
leave
cmpsl
test
mov
sbbb
mov
lods
push
sbb
imul
test
scas
lret
das
pop
out
cmc
sbb
cmp
jecxz
add
mov
popa
mov
cmp
mov
lcall
and
and
movsl
inc
and
ja
jo
shrl
adc
int
dec
gs
js
hlt
sahf
push
sbb
pinsrw
test
mov
sbb
add
mov
pushl
inc
pop
into
xchg
jae
and
addr16
mov
idivl
pop
iret
flds
int
mov
xor
push
into
mov
cmp
andl
cmpsb
mov
sub
in
mov
xorl
or
fmul
jmp
call
xor
pop
pop
sub
mov
dec
call
push
insb
call
cltd
clc
ljmp
leave
xor
pop
xor
and
mov
dec
sbb
jge
jmp
les
mov
dec
jmp
stc
xchg
or
mov
movsl
and
test
jp
fistps
sub
daa
fcmovnb
pop
mov
or
sbb
xor
addr16
xor
xchg
shl
xor
les
notl
pusha
sub
xor
cmp
aaa
inc
push
aas
in
dec
adc
dec
loopne
mov
lret
push
fs
xchg
sub
idivb
mov
and
sub
push
pop
mov
sahf
push
xor
insb
in
push
ret
fistl
mov
fwait
mov
mov
fbstp
outsb
sahf
je
pop
test
sub
lcall
mov
sub
aas
adc
lods
mov
iret
sbb
hlt
add
pop
mov
sar
mov
push
bound
push
jmp
fldl
subb
mov
xlat
sbb
lret
pop
or
pop
xchg
sub
repz
mov
jb
or
out
inc
enter
pop
xchg
xchg
lods
dec
test
test
and
fisubs
scas
scas
xor
mul
add
bound
bound
xchg
movsl
xor
add
into
jmp
jmp
xchg
or
dec
fxrstor
xchg
adcl
aas
sbbl
insb
adc
std
shrb
cmp
shrb
int3
push
cmpsb
pop
mov
rorl
xchg
sbb
cli
ret
aas
scas
loop
test
mov
cmp
out
shll
xor
xchg
sbb
in
xchg
pop
cli
out
inc
in
mov
add
addr16
sub
add
dec
jmp
xchg
roll
popa
lret
and
jge
icebp
xchg
sub
mov
aaa
sbb
xlat
pop
push
and
ss
xor
jb
insb
aas
lock
lods
lds
xchg
icebp
bound
cmc
pop
or
xchg
fmull
std
and
pop
mov
inc
insl
inc
imul
in
cmp
cs
enter
mov
cmpsb
movsb
jno
outsb
dec
push
push
fidivrs
dec
in
mov
fidivrl
insl
jo
dec
mov
pop
xor
xchg
sarb
pop
cli
push
hlt
pop
or
xor
notl
rorb
xlat
movsb
rcr
mov
subl
in
std
lret
shrl
les
pushf
repz
xchg
pop
test
out
xor
fucomi
cmp
mov
mov
mov
xchg
or
repz
fstpt
ja
sbb
ret
ds
dec
or
adc
fistps
dec
xchg
mov
shll
or
out
andb
mov
cmpsb
sub
ret
inc
int
loop
pop
fs
movsb
sti
cltd
sti
sti
adc
es
xchg
xor
sub
addr16
lret
fsubr
scas
sbb
lea
cmc
addl
gs
xchg
das
dec
mov
enter
and
sti
mov
lods
push
test
xchg
cmc
push
push
mov
loop
jns
sbb
aad
subl
mov
sub
ja
es
xor
in
dec
sahf
int3
add
lods
push
push
insl
fdiv
xor
lahf
inc
pop
fstl
ficoms
in
call
adc
div
jl
pusha
pop
and
sarl
lods
stos
stos
ret
ds
out
push
popa
movsl
loop
mov
and
out
outsb
sub
push
fwait
jge
fwait
stos
pusha
mov
fiaddl
xchg
outsb
and
push
mov
add
or
mov
in
jp
shll
in
insl
sarb
roll
xchg
test
daa
rol
mov
mov
fwait
pop
dec
ljmp
mov
scas
cmc
pop
aas
ret
mov
jns
jae
nop
lds
xchg
test
ss
mov
movsl
cmp
xorl
cld
cli
jne
mov
inc
sbb
inc
lret
push
pop
mov
loopne
test
sarl
je
bound
cld
imulb
int
dec
jbe
stos
pop
sti
xchg
iret
ljmp
mov
push
jnp
cmp
cli
scas
mov
push
iret
adc
push
mov
or
aaa
push
push
mov
insl
sub
adc
xchg
xor
push
sbb
adc
ret
and
push
fbld
out
inc
js
in
cmp
cmc
add
push
out
pop
fs
xchg
or
insb
ja
mov
jle
in
pop
js
adc
pushf
adc
jns
popf
jb
out
cmpsl
mov
aad
das
nop
push
popw
nop
stos
xor
pop
sbb
xchg
sti
mov
das
mov
sub
cltd
mov
or
jno
mov
push
fisubrl
lods
aad
add
comiss
shrl
out
arpl
push
mov
cltd
orl
andl
or
mov
add
arpl
pop
decl
mov
sub
daa
fmull
sub
jbe
repz
negb
iret
mov
pop
lea
insl
sbb
rcrl
repz
fdivs
or
push
sbb
je
fbstp
shll
and
mov
pop
pushf
jns
leave
outsb
mov
push
loope
lret
pop
rcrb
test
ret
jmp
cmpsb
xor
daa
rclb
mov
adcl
mov
jae
pop
inc
inc
xchg
pop
dec
cltd
repnz
enter
mov
mov
into
xor
test
inc
cld
nopl
fistl
fs
mov
mov
or
xor
movsl
gs
lods
inc
into
ret
aad
mov
sub
xchg
sub
int3
jecxz
mov
shl
into
ret
cmp
inc
xchg
jbe
sub
sti
fmuls
push
add
insl
push
fildl
insb
xchg
lods
aaa
pop
shlb
jmp
popf
icebp
push
dec
lock
mov
negb
add
pop
adc
push
mov
fwait
pop
mov
push
add
inc
cmp
loope
push
adc
ljmp
in
ret
dec
stos
dec
adc
aad
xor
js
cmp
repnz
jl
rorb
shrl
pop
push
mov
mov
inc
add
in
or
cmp
cli
es
mov
ret
and
mov
sti
sbbl
lds
sub
mov
cld
jge
iret
xchg
jae
arpl
or
or
icebp
jbe,pn
inc
rcll
pop
push
out
mov
jo
or
imul
push
addr16
inc
lods
insl
rcrl
cltd
std
add
int3
imul
jg
andb
mov
sbb
push
sub
sub
push
arpl
cmp
xor
jle
fcoms
les
add
pop
aas
push
or
mov
mov
pop
jns
mov
leave
fisttpll
mov
in
aad
xor
adc
mov
call
jmp
pop
jg
and
sbb
outsb
mov
fiaddl
mov
mov
push
jb
rorl
leave
sahf
gs
adc
jb
in
rorb
enter
movl
pop
or
jb
idivb
dec
push
jge
pop
adc
les
cli
enter
repnz
pop
repz
sti
cmp
bound
shl
out
clc
sub
add
mov
xchg
faddp
jecxz
sbb
lea
lds
mov
and
lea
mov
dec
cmp
popa
and
stos
cmp
and
cmpb
addr16
pop
lods
adc
push
ja
aad
cltd
mov
push
imul
loope
bound
test
jbe
jbe
jg
pop
xchg
pop
sbb
enter
mov
adc
jo
divl
mov
xor
pop
lea
out
mov
iret
xchg
inc
xchg
fisttpll
jne
test
cmp
push
fidivs
orb
stos
inc
out
xchg
aad
add
test
loopne
repnz
pop
xor
jb
loopne
loop
rcrb
xchg
shlb
inc
xchg
push
sub
xchg
mov
dec
divb
pop
mov
push
xor
mov
lods
iret
aad
enter
fcomps
xchg
cmc
js
fisubrl
and
das
and
mov
sar
bound
in
outsb
or
push
xor
lea
push
or
push
lea
adc
insb
inc
lret
or
cmp
sbb
mov
mov
pop
push
pop
mov
pop
xchg
jne
lret
pusha
cmpsl
mov
andb
or
mov
icebp
mov
cltd
addr16
push
frstor
add
loop
inc
jl
aas
in
push
into
jl
pushf
in
dec
xor
int
icebp
repnz
rcll
add
mov
sti
push
jl
push
inc
in
cmp
mov
and
mov
scas
inc
dec
sbb
imul
loope
mov
out
cmp
pop
ficomps
in
fdivrl
sbb
push
xor
or
dec
xor
cmp
test
cmc
cwtl
or
inc
icebp
inc
dec
testl
fwait
mov
ja
daa
xchg
fnsave
push
cmp
lods
xor
cmp
stc
push
popf
jno
xchg
in
push
jle
pushf
cld
outsl
in
ret
nop
pop
jbe
aas
js
mov
cmp
xor
pop
jbe
sbb
sub
jge
test
aaa
adc
pop
and
and
ljmp
out
nop
sub
fdivl
in
data16
or
or
dec
jb
sbb
movsl
pop
fimull
ret
nop
lock
frstor
and
sbb
xchg
cmp
cwtl
dec
and
in
push
pcmpeqb
inc
cmp
mov
scas
jmp
rcll
iret
mov
movl
pop
add
inc
adc
fdivrl
enter
mov
jne
js
pop
bound
adc
out
jbe
adc
and
lcall
das
mov
mov
ljmp
lods
push
xor
mov
repnz
out
fisttps
and
scas
mov
push
xchg
jg
fadds
rcll
out
mov
jb
sbb
ret
scas
push
leave
fidivrs
sub
ja
lcall
out
mov
mov
mov
lea
cmc
scas
and
fiadds
loopne
cmpsb
push
loopne
out
fisttpll
int
jg
jmp
pop
or
jp
aad
and
mov
sub
sarl
sub
hlt
outsl
inc
jge
imul
mov
jb
mov
push
sub
cmc
cmp
jp
mov
push
arpl
add
out
push
mov
mov
repz
rorb
cmp
test
cmc
adc
pop
mov
arpl
daa
xor
sbb
sarb
xchg
in
test
testl
test
mov
mov
xchg
pop
jl
mov
wbinvd
and
lea
lods
fsubrl
xor
test
mov
bound
push
push
pop
repnz
add
mov
cmp
arpl
lret
aam
leave
jp
loopne
fidivrl
or
aas
or
mov
dec
cwtl
mov
push
inc
ja
mov
fs
push
outsl
mov
out
ss
out
jge
cmp
mov
jmp
jb
inc
test
ret
jae
mov
or
inc
testl
and
daa
movsl
das
sbb
les
dec
and
repnz
inc
or
ljmp
test
idivb
ja
pusha
jl
pop
repz
inc
pop
pop
fwait
inc
mulb
ret
aad
jmp
sbb
push
fs
insb
fs
mov
fcomps
push
pop
lahf
mov
loop
fwait
lods
cmp
pop
push
in
push
pop
mov
cwtl
push
adc
cmp
jecxz
popf
test
in
xchg
testb
addr16
jno
xchg
xchg
mov
clc
ljmp
rol
lds
call
leave
shrb
cmp
stc
mov
xor
jb
sub
mov
push
jnp
lock
push
cmc
cmpsl
cmp
cmp
ljmp
stos
outsb
cli
inc
shlb
insb
mov
mov
cmp
mov
mov
inc
sub
scas
roll
jb
in
aaa
jo,pt
xchg
add
adc
push
dec
xchg
jg
outsl
inc
cmpsl
mov
dec
jg
mov
addr16
jl
andb
icebp
ljmp
sahf
adc
fimull
inc
xchg
lods
xchg
inc
repz
pop
jmp
xchg
test
popa
jnp
test
int3
sbb
ja
pop
mulb
rorb
loope
mov
test
xor
iret
sub
push
in
mov
dec
xlat
in
ljmp
inc
jo
jnp
lods
mov
in
xor
inc
cmc
mov
push
pop
pop
cmpsl
repz
mov
adc
jae
mov
inc
repz
stos
push
mov
out
iret
push
addl
push
add
js
fnstsw
cmpb
mov
sub
cmp
mov
sbb
mov
shll
add
fmuls
mov
inc
mov
push
and
mov
mov
ljmp
jnp
gs
jne
jp
mov
fdivrl
pop
test
shrl
popf
sub
mov
mov
xlat
movsl
mov
fbstp
rclb
pusha
lds
ss
shlb
lods
add
inc
jle
and
lods
inc
jae
pop
dec
int3
aam
sti
adc
cmp
jmp
dec
sub
xchg
sbb
xchg
ret
pop
cmp
push
mov
xor
sub
xchg
dec
cmp
adc
xor
xchg
pop
shlb
ficoml
mov
xchg
imul
lods
rclb
fisubrl
mov
sti
fdivs
into
in
rcrl
pop
inc
int3
icebp
jno
dec
and
fdivrl
mov
adc
mov
cwtl
sbb
xor
clc
aam
incl
lods
test
mov
jecxz
mov
push
dec
into
mov
cmp
mov
ja
add
jns
addr16
adc
je
mov
fldl
sbb
mov
mov
mov
mov
stos
addl
aas
das
mov
or
repnz
ja
and
sar
push
test
push
es
cmpsl
sub
out
dec
mov
xchg
daa
inc
mov
pop
xor
je
call
cmp
nop
push
jae
sub
and
inc
outsb
roll
insb
fadds
mov
cmp
lret
push
xchg
cs
lret
dec
shll
jns
in
inc
paddsw
xor
pop
sbb
cs
int3
aad
push
pop
pop
lods
pusha
dec
inc
jge
xor
in
aam
loopne
sub
push
gs
repz
mov
ret
lods
inc
cmc
sti
icebp
add
inc
data16
shl
bound
push
daa
shr
mov
mov
xor
neg
outsb
inc
out
lret
sahf
mov
mov
test
popa
cs
lcall
ret
lods
ds
fstpl
jle
push
arpl
leave
mov
push
pop
adc
call
test
dec
and
xchg
xchg
xchg
pop
mov
lret
data16
jecxz
dec
dec
mov
packssdw
lahf
ret
xchg
and
loope
cmpsl
inc
xchg
shll
dec
xor
cmp
cmp
frstor
pop
out
add
ss
jl
mov
nop
fcmovne
dec
aad
cmp
daa
xchg
nop
es
clc
loop
sarb
popf
sbb
imul
testb
in
mov
es
lret
mov
adc
pop
xchg
imul
jno
dec
ret
xlat
hlt
repz
pop
inc
aas
pop
iret
add
mov
stos
xor
sbb
lock
sub
cmp
push
stc
hlt
movsl
mov
sbb
pop
jne
push
cmp
gs
push
out
imul
add
cmp
pushf
dec
pop
mov
push
mov
jecxz
adc
sahf
outsl
fwait
inc
dec
jbe
test
jno
jnp
in
and
arpl
mov
fadds
mov
add
pop
jmp
mov
icebp
or
cmpl
lods
fisubl
mov
xor
ret
int3
xchg
sbb
addr16
jne
mov
push
mov
call
stos
xor
enter
pop
mov
cmc
inc
outsl
in
push
fsubrl
ficomps
jb
push
push
daa
or
ds
dec
les
aam
sarl
mov
and
aaa
mov
adcl
cltd
test
cmp
pusha
pop
dec
lahf
pop
lcall
add
iret
bound
adc
fwait
push
mov
sbb
xchg
dec
push
insb
leave
mov
or
inc
jge
shrb
fcompl
sahf
xor
or
das
xor
and
xchg
mov
out
xchg
cmp
jge
sub
or
xchg
test
pop
xchg
xchg
dec
jecxz
dec
or
dec
jp
jo
aaa
mov
cmpsb
pushw
lods
inc
ret
out
cmp
shrl
lret
clc
loope
out
dec
out
lds
add
xchg
jecxz
out
sbb
inc
cmp
sarb
mov
mov
xchg
push
repz
dec
mov
inc
test
sub
rorl
repnz
adc
test
mov
test
iret
inc
test
cmpsl
sbb
iret
test
mov
cmc
in
mov
jp
mov
mov
clc
lcall
pop
fyl2xp1
lea
es
or
sbb
ljmp
adc
gs
pop
fistl
push
inc
aad
jge
lret
adc
nop
shlb
fidivrl
stos
dec
xchg
mov
mov
fistpll
mov
imul
mov
hlt
push
pop
into
inc
mov
jg
lea
pop
fdivp
mov
jmp
inc
jl
and
aam
out
mov
enter
jns
and
fistpll
mov
inc
daa
into
dec
je
shlb
loopne
imul
pop
and
cwtl
dec
scas
xchg
and
pop
pop
clc
rcrl
icebp
push
pop
sub
pop
mov
jns
out
inc
dec
and
push
pop
xchg
aas
jns
insl
scas
cmp
push
or
outsl
fcomps
pop
pop
fneni(8087
movsl
pop
sarb
jo
mov
sarl
xor
or
test
sub
pop
push
xchg
adc
add
rep
mov
mov
leave
xchg
ja
cld
int3
into
cltd
push
cmp
inc
xlat
sbb
aaa
movsl
pop
cmpxchg
jne
fcomp
mov
adc
sub
jne
pop
jo
outsl
lds
pop
lods
sar
inc
rorb
fisubs
cmpsb
enter
jbe
sti
fwait
mov
or
jg
movzwl
lret
mov
or
dec
xor
orb
pop
scas
movsb
pop
jp
insb
popa
xor
jbe
fnsave
mov
nop
lret
aas
dec
push
hlt
sub
xchg
pushf
jb
inc
inc
fsubrs
scas
addr16
inc
imul
lahf
or
addr16
stos
cmpsl
cmp
dec
iret
outsl
xor
lods
lds
stc
pop
xchg
clc
and
mov
mov
in
mov
fistps
jge
out
sbb
sbb
pop
jae
loope
jge
cmp
pop
bound
xchg
ljmp
mov
and
jbe
sbb
add
sti
aas
and
mov
fistpl
sub
sahf
pop
mov
pop
bound
mov
or
jnp
rolb
out
sti
sub
ret
call
mulb
dec
mov
push
push
daa
dec
adc
cmp
aad
inc
movsb
sub
mov
lods
ds
loope
stc
xchg
mov
pop
push
bnd
bound
ss
xor
inc
seta
inc
sbb
jp
mov
cmp
cmp
nop
lcall
jmp
inc
out
inc
popf
dec
cmp
enter
fsts
js
push
inc
ljmp
sub
sub
mov
out
daa
movsb
movsl
xor
inc
cmpsl
adc
cli
aad
jecxz
insb
add
ret
pop
mov
cwtl
mov
pop
test
inc
fsubrl
lahf
jl
sub
adc
cld
movsl
js
xchg
add
pop
and
mov
and
and
cmp
cmp
std
testb
rolb
jae
dec
test
popf
push
mov
xor
mov
mov
popf
inc
fldl
dec
push
test
dec
or
in
xchg
in
push
cmp
and
out
rcrl
loop
mov
pop
jb
xchg
nop
or
jne
scas
je
clc
adc
mov
mov
icebp
mov
aam
xor
lahf
pop
mov
das
sub
add
cwtl
cmc
mov
jns
xchg
pop
xchg
pusha
int3
adc
xchg
outsb
xchg
in
fisttpl
fdivl
outsl
mov
rorb
inc
pop
push
hlt
adc
and
sti
das
in
pop
inc
cld
adc
mov
sbb
fisubrs
pop
sbb
mov
pop
stc
adc
lea
stos
pop
imul
popa
repnz
add
arpl
dec
nop
sbb
push
xchg
mov
scas
mov
push
add
stos
in
scas
adc
mov
inc
sub
pop
int3
subl
inc
sbb
pop
int3
mov
pop
push
dec
addb
into
fnsave
ds
mov
lods
je
jbe
les
sub
andb
loop
mov
lds
sub
in
mov
xchg
insl
jmp
cwtl
xchg
gs
inc
jmp
xchg
cmc
imul
sti
pushf
dec
mov
lcall
lret
out
ljmp
dec
jmp
mov
aad
fmull
loope
out
push
lods
mov
sbb
cmp
cmp
xor
lret
jle
js
mov
jp
mov
lock
sub
clc
mov
test
mov
addr16
add
loop
fstl
sbb
sub
in
addb
adc
add
lea
rcrl
jle
fcmovnbe
push
sbb
jmp
xchg
test
testl
cmovge
push
adc
pusha
insl
sbbb
add
nop
ljmp
aam
jg
xchg
dec
jne
test
add
fadds
fbld
cmp
mov
xchg
das
dec
hlt
scas
bound
mov
into
mov
in
and
pusha
lods
icebp
imulb
enter
in
adc
push
into
mov
rcll
enter
jno
aas
xlat
pop
pushf
repz
lds
and
std
pop
sub
dec
rcrb
les
cmp
outsb
jmp
mov
imul
xor
pushf
xor
sbb
xlat
repz
mov
imul
in
popf
mov
pop
adc
pop
xchg
mov
popa
or
out
push
xchg
xor
lods
lock
or
push
negb
jns
push
xchg
mov
ja
int
mov
rol
adc
mov
das
fmull
std
mov
shrl
hlt
dec
fldlg2
addl
icebp
lret
mov
bound
dec
pop
addr16
lea
iret
push
mov
inc
in
and
pushf
mov
lea
scas
gs
dec
mov
fmuls
cwtl
daa
enter
negl
sbb
leave
cmpsb
or
push
idivb
loop
test
mov
pop
jo
jl
inc
scas
inc
les
das
adc
dec
scas
arpl
and
mov
ljmp
mov
sbb
adc
push
xchg
cmpsb
dec
push
pop
jns
mov
sub
xchg
hlt
mov
push
pop
mov
xor
sbb
out
sub
pop
es
sbb
lahf
data16
out
roll
iret
loopne
pop
rolb
pop
pop
inc
cmpsl
cmp
test
push
adc
pop
cmp
push
clc
bound
push
fdiv
loope
loope
cmpsb
in
lods
pop
push
jnp
pop
or
scas
sbb
mov
movsb
cltd
ucomiss
dec
jno
data16
push
push
ljmp
insl
mov
jne
faddl
test
sub
stc
ret
std
insl
cli
lret
rclb
in
sahf
xchg
jge
iret
xchg
jge
push
cmp
arpl
mov
out
jnp
inc
aad
dec
sbb
stos
data16
cwtl
sbb
data16
adc
jle
bound
scas
aam
sub
jl
add
push
adc
cmc
jne
imul
inc
xor
mov
push
mov
push
adc
inc
jecxz
or
loope
shlb
inc
push
loope
or
jbe
idivb
mov
mov
add
test
push
test
xor
pop
aad
xor
fwait
xchg
mov
jo
lods
adc
das
outsb
clc
sub
cmpsb
mov
push
cmp
fcomps
push
xor
dec
in
bnd
jbe
pop
inc
cmp
icebp
and
mov
ljmp
lea
in
xor
adc
jecxz
addr16
mov
sbb
dec
sub
jbe
arpl
mov
and
adc
repnz
jno
pop
mov
mov
movb
and
ret
xchg
hlt
adc
shl
xchg
neg
xor
aad
in
insl
xchg
or
xchg
bound
inc
dec
ficompl
sbb
dec
mov
scas
push
das
clc
adc
mov
dec
xor
pusha
sub
in
push
fwait
insb
pop
fdivrs
mov
enter
mov
mov
mov
lcall
mov
or
mull
mov
pop
mov
xor
sarl
mov
mov
mov
xlat
xor
sbb
sbbb
aad
rcrl
rorb
mov
push
sbbb
ss
jg
xchg
cmpsl
jmp
mov
rcr
sbb
aad
lret
nop
sti
push
fs
ds
mov
pop
fidivrs
int
sub
das
dec
orl
or
adc
lret
pop
cwtl
adc
iret
leave
int
dec
cld
ret
int3
xchg
jo
mulb
clc
loope
in
jbe
and
xor
jns
cli
out
adc
jmp
and
loop
movb
insb
pushl
mov
xorl
or
xor
push
push
mov
cmc
pop
test
cld
lods
inc
ja
mov
dec
cmc
js
cmpsb
fsubrs
testl
aaa
ret
test
sbb
cmp
mov
pop
dec
adc
jmp
push
mov
stos
icebp
and
and
divb
sbb
daa
ljmp
jge
lea
scas
js
cwtl
testl
leave
xchg
lret
cmovnp
cmpsl
xor
filds
jl
xchg
arpl
mov
and
into
addr16
bound
sbb
int3
mov
mov
push
xor
rol
into
inc
inc
xor
inc
aad
fwait
inc
ja
jg
cmp
ss
and
lods
cs
or
mov
mov
and
jo
lods
sarb
pushf
js
je
movsl
sbbb
cmpsb
jge
shl
movb
push
ss
repz
inc
ret
add
mov
imul
gs
xchg
mov
or
fists
js
jo
inc
xor
xchg
test
stos
push
sti
mov
dec
sahf
mov
dec
lods
les
or
ss
ret
nop
and
xorb
les
outsb
imul
push
aas
je
cmp
sti
ja
mov
jns
inc
loop
sub
xor
repz
xor
lock
stos
fidivl
loopne
popf
xchg
xor
aaa
stos
xor
icebp
and
cmpsb
jg
loop
and
push
or
je
loope
test
sahf
int3
push
fildl
cwtl
cmp
aam
pop
push
int3
call
push
push
lret
popf
xchg
add
sarb
je
rclb
sbbl
mov
popf
dec
dec
aas
mov
lret
ret
stos
add
pop
and
sub
xorb
push
mov
dec
push
arpl
mov
cmp
sbb
mov
daa
mov
cmpsl
dec
outsl
fsubs
mov
sti
mov
cltd
adc
mov
sbb
pop
adc
sub
hlt
mov
jg
pusha
bound
inc
bound
into
mov
inc
lea
xchg
xchg
jmp
add
pop
adc
dec
sbbl
shll
aaa
pop
and
movsl
adc
dec
clc
dec
or
jl
inc
cmp
adc
adc
pusha
mov
and
shrb
movsl
or
xchg
jne
add
mov
sub
inc
adc
push
and
fisttps
cmc
imul
stc
sub
int
sbb
jno
inc
pop
js
lret
inc
xor
push
xchg
add
dec
dec
and
inc
pop
jbe
xor
rclb
rcll
add
icebp
mov
mov
pop
xchg
mov
jae
xor
movl
outsl
jmp
xor
enter
pop
sub
pushf
outsb
adc
lods
dec
and
xor
push
lret
popa
mov
cmp
xor
frstor
cmpsl
stc
push
std
outsb
dec
pop
mov
cwtl
mov
push
fistpl
or
xorb
fsubl
push
jnp
dec
push
push
dec
out
test
push
clc
jg
xor
xchg
and
lcall
movsl
andl
sbb
mov
mov
push
add
lock
jle
add
adc
or
jl
inc
mov
xchg
out
fsubl
xorb
ljmp
adc
pusha
aaa
push
loop
sti
mov
fimull
ds
xor
into
repnz
inc
xor
adc
sarb
pop
pusha
push
mov
inc
sub
mov
sahf
gs
pop
jnp
sbb
mov
cmp
xlat
mov
out
mov
jae
pop
jno
pushl
mov
mov
inc
stos
iret
shll
add
dec
jg
in
bound
fcomip
push
adc
xchg
dec
cwtl
clc
fwait
pop
xchg
lock
outsb
or
xlat
flds
lods
adc
fstps
or
das
or
loope
xchg
mov
sahf
push
cmp
lods
sub
adcl
sub
popa
and
shlb
rcl
cmpsl
jmp
dec
js
shrl
push
adc
ljmp
leave
test
out
xor
cmp
outsb
pop
jmp
loope
into
movsb
xlat
sbb
sbb
xor
ficomps
in
push
sub
sahf
mov
mov
jl
mov
and
xor
push
xor
xor
xor
nop
lods
mov
in
adc
jl
mov
rcll
add
in
pusha
mov
popa
negl
lret
imul
xchg
sbb
insl
shrl
daa
sbb
pushf
enter
xorb
lret
loop
push
les
and
jo
clc
adc
cltd
subb
push
aaa
lcall
scas
sbb
nop
shl
lods
mov
mov
movb
and
mov
push
ds
movsl
or
daa
mov
icebp
stos
pop
inc
push
sub
jae
loop
xlat
fiadds
lcall
mov
in
cld
aaa
sbb
in
fwait
dec
aam
cmp
add
faddl
mov
mov
bound
push
mov
adc
xor
sbb
fistpll
loop
fndisi(8087
jecxz
sbb
enter
jae
add
xchg
sub
jno
mov
adcl
mov
mov
loop
sbb
dec
icebp
sbb
ret
push
push
mov
push
xor
and
mov
ss
push
sbb
jecxz
jge
test
inc
or
cmpb
xchg
ljmp
xchg
fstpt
dec
ljmp
xlat
xchg
adc
adcl
arpl
stos
repnz
push
or
lds
ror
in
psubsw
int3
lahf
mov
xchg
movsb
pushf
push
out
and
shlb
sub
mov
arpl
xchg
std
mov
daa
jmp
loopne
push
aam
outsb
and
mov
cli
in
mov
inc
sti
mov
popf
mov
xchg
xchg
fildl
pushf
clc
clc
icebp
add
jmp
push
xchg
inc
dec
mov
jnp
jl
sbb
fwait
push
fildl
into
nop
movsb
sbb
sbb
bound
add
dec
xor
mov
push
cmp
bnd
lods
sbb
dec
andl
mov
jmp
pop
push
sub
xchg
cltd
vmread
inc
inc
sbb
outsl
sahf
dec
inc
movsl
mov
jbe
roll
out
fucomp
incb
mov
jl
mov
lds
add
mov
sbbb
jns
or
xor
mov
cmpsb
xor
jb
xor
movsb
jle
out
lahf
mov
shrb
stc
fmul
pop
out
xchg
jmp
sub
out
xchg
dec
inc
es
fmull
xor
add
sub
ret
das
sar
sahf
or
insl
push
jnp
pushl
xchg
fwait
push
lahf
cmp
mov
std
mov
insl
jb
cmpsl
movsl
out
nop
addb
ret
inc
clc
or
xchg
aas
push
fcmovbe
rcrl
ja
or
mov
xchg
jle
and
jae
das
mov
lret
pop
ljmp
fnstsw
jge
and
sub
sub
aam
in
lea
sbb
adc
je
movb
push
das
cmpsl
inc
lret
into
pop
inc
adc
into
pop
scas
movsl
loop
push
inc
cmovnp
mov
lcall
pop
out
jo
aad
hlt
addr16
test
inc
push
ljmp
in
xor
sbb
xchg
adc
cltd
lret
mov
or
sub
xor
sahf
rorb
cmc
or
shlb
loope
shl
push
inc
andl
xorb
adc
sbbb
xchg
and
xor
fs
rcr
ret
mov
mov
xchg
sbb
cmp
pusha
popa
cmc
sub
jbe
repz
es
movsl
mov
push
mov
dec
mov
js
ret
jl
stos
data16
adc
lahf
lea
hlt
inc
mov
ja
inc
aad
mov
pop
ss
hlt
enter
addr16
pusha
jmp
imul
sbb
jmp
fstp
pop
hlt
pop
jo
jnp
stc
outsl
sub
ret
lret
mov
std
sub
cwtl
iret
mov
mov
xor
adc
cmpsl
xchg
shrb
jae
es
xchg
adc
jbe
mov
sub
repnz
call
lahf
mov
aam
pushf
push
sarb
ja
dec
jl
mov
out
xchg
stos
sbb
xchg
pop
jp
mov
rcl
arpl
mov
mov
ss
xlat
and
add
sub
gs
repnz
loop
dec
lea
adcb
cmp
lret
or
jb
fstpt
fidivrs
push
and
add
sub
push
lret
ja
jnp
and
scas
int3
andb
mov
insl
scas
and
add
cmp
add
pop
fwait
out
pop
or
xor
pop
jno
popf
leave
jae
imul
cs
xchg
pop
fsub
into
popf
ljmp
pusha
jl
mov
adc
dec
cs
add
iret
mov
mov
inc
sahf
test
call
pop
punpckhdq
dec
push
mov
push
adc
mov
jae
popa
out
faddl
sbb
mov
daa
fsubrl
shlb
mov
inc
push
xchg
sub
push
cwtl
sub
jl
int
jno
inc
adc
sbbb
xchg
mov
movq
loope
orb
int3
pop
inc
dec
insl
push
lret
xchg
outsl
rcll
or
out
jb
adcb
les
gs
mov
test
mov
stos
and
out
mov
cmp
sbb
pop
or
es
out
cwtl
pop
mov
pop
cmp
or
in
fcomp
pushf
sbb
stos
xlat
jp
popf
lcall
loope
ja
sub
adc
xchg
or
and
and
jmp
loope
test
sub
mov
cmpsb
inc
in
and
xchg
pop
jns
mov
xorb
xchg
scas
lods
shlb
xchg
test
bound
cld
sub
mov
mov
fidivrl
movsl
int
xorl
sahf
in
adc
sbb
push
iret
push
fbstp
mov
into
lret
xchg
ja
cwtl
push
jb
jecxz
mov
ja
paddd
notl
xchg
test
or
xor
sub
std
lds
mov
stos
push
pop
or
mov
stc
fists
imul
push
mov
adc
scas
adc
in
lock
or
leave
std
mov
mov
or
xor
cltd
mov
aaa
fisttpll
pand
inc
jb
icebp
push
jbe
nop
dec
inc
fnsave
movsb
add
adc
mov
insb
inc
mov
mov
adc
out
mov
sbb
jle
test
and
adc
pop
in
popa
fistl
in
data16
daa
divl
lods
mov
pop
and
xor
cmp
push
in
insl
push
cmpsb
push
int3
inc
push
sbb
cmp
fistpll
sub
ret
inc
fistps
clc
into
lret
xor
dec
xchg
mov
cmpsb
xor
mov
pop
into
push
cmp
pusha
lret
imul
and
xchg
push
out
push
es
mov
mov
aas
sub
push
push
out
mov
inc
jb
dec
jmp
in
stc
test
xor
ret
icebp
add
sti
jp
lods
fnsave
pop
in
rcll
add
data16
mulb
mov
mov
pop
cmp
fistl
or
cmpsl
out
mov
xor
sbb
das
add
xor
inc
test
dec
cmc
pop
stos
std
cmp
pop
jl
xchg
xor
push
jecxz
int
hlt
cmpl
sub
cmp
jle
jg
pop
pop
out
cmp
mov
jbe
shrb
xchg
movsb
aaa
jno
icebp
je
scas
int
repz
roll
out
aas
movsb
idivl
std
xchg
test
pop
iret
cmp
and
outsb
jae
scas
mov
inc
loop
cmp
sub
xor
ss
mov
scas
push
pop
jge
inc
jp
ds
xorb
hlt
sahf
pop
or
cmp
xchg
and
dec
xchg
sbb
dec
inc
add
jle
pop
cmpsl
adc
cmpsl
testl
mov
aas
mov
out
sbb
into
and
adcb
fimull
mov
jno
es
in
data16
outsb
call
adc
shr
stc
jl
call
mov
adc
sbb
jnp
scas
or
fstl
inc
cmovle
sahf
sti
push
sbb
sub
incb
xchg
sub
in
out
sbb
test
pop
scas
pop
mov
cmpsb
movsb
cmp
or
jbe
in
pop
or
sub
popa
insl
test
add
mov
repz
push
hlt
pop
add
mov
jmp
sub
adc
inc
cmp
mov
sti
or
inc
rcrb
push
imul
dec
dec
leave
fstps
pusha
and
jmp
fs
jg
les
ss
loopne
xchg
mov
pop
rcl
pop
or
lock
movsl
xor
adc
ljmp
mov
mov
xor
fcmovnbe
fidivrs
mov
stos
or
cmp
fmul
push
shl
mov
ds
sub
sahf
sub
pop
mov
dec
pushf
sbb
notl
js
loope
or
jecxz
push
adc
inc
pop
pop
xor
and
cmp
dec
stc
cltd
cmpsl
push
inc
xor
gs
loop
jl
inc
push
cwtl
sub
push
sbb
aad
and
dec
ret
imull
aaa
push
xchg
mov
cmp
sub
shll
adc
xchg
cwtl
jl
out
mov
mov
scas
dec
or
fcomp
into
je
dec
and
add
cmp
sbb
mov
sbb
shlb
inc
cs
adc
jmp
push
out
addb
or
and
cmp
iret
sub
insb
cmpsl
arpl
fs
fimull
repnz
lret
xor
cmp
aam
test
sbb
or
mov
in
sbb
aaa
jae
insb
pop
test
aaa
imul
sbb
push
addr16
push
loope
push
std
pusha
xchg
iret
test
pop
dec
and
in
jecxz
nop
ljmp
mov
mov
lret
popf
cmp
fldenv
fdivrl
daa
inc
jge
andb
xchg
push
xchg
stos
cmpsl
in
aad
mov
xor
clc
lods
ss
xor
and
and
sub
aas
xchg
mov
andb
mov
sbb
ljmp
ds
sarb
jbe
icebp
xor
xchg
andl
scas
and
cmp
mov
scas
inc
push
or
dec
push
add
xor
pop
mov
cmpsl
imul
adc
les
repz
bound
cs
repnz
pop
inc
test
xlat
dec
xchg
fdivrl
pushf
scas
scas
jp
cmp
sub
jmp
adc
xchg
push
and
xchg
dec
inc
dec
leave
sub
mov
popa
mov
fcoml
mov
lock
mov
pop
aad
or
dec
out
xchg
mov
cmp
add
cmc
ds
aas
mov
rorb
push
push
dec
enter
jp
push
mov
lds
dec
pop
push
inc
imulb
xor
in
dec
mov
push
fidivrs
mov
xchg
in
or
sbb
adc
cli
scas
pushf
repnz
pushf
sub
inc
and
lods
and
outsb
sahf
sub
add
xchg
push
lea
cmpsb
and
lret
out
pop
les
pop
pop
shll
arpl
fldl
test
hlt
mov
jge
ja
fucomi
push
sarb
xchg
repnz
adc
psrld
mov
jmp
iret
lea
lds
or
xor
mov
jg
or
jbe
mov
push
in
rorb
lcall
ret
xor
les
popa
mov
sahf
fcmove
ljmp
icebp
loope
in
jns
sub
push
inc
sub
jp
dec
gs
adc
xchg
rclb
dec
in
jns
lcall
mov
mov
mov
bound
and
or
push
mov
xor
shrl
pop
cwtl
xchg
orl
insb
nop
popa
jb
fadd
adc
mov
fcmovnbe
sbb
push
mov
fisubs
push
sub
out
xchg
inc
cmp
mov
mulb
call
mov
sarb
mov
out
adc
xor
daa
and
in
out
xchg
sub
outsl
jne
inc
mov
xor
add
stc
leave
sbb
and
sub
jnp
sub
and
xchg
outsl
lcall
xor
addr16
test
lods
out
pop
dec
scas
out
mov
movb
sbb
enter
pop
xor
imul
test
fs
and
and
aaa
fsubrl
pusha
loop
imul
scas
cmp
je
pop
std
sbb
ljmp
fnsetpm(287
popf
inc
popa
inc
out
das
jmp
pop
sub
aas
mov
bound
andl
lahf
repz
mov
dec
xchg
sbb
inc
dec
iret
mov
and
lret
sub
jg
data16
xor
jge
in
scas
inc
inc
cmpl
push
fldt
mov
std
jl
les
cwtl
xchg
push
ror
xor
test
aas
pop
orb
icebp
loopne
int
or
cmc
dec
xchg
cld
mov
lret
lcall
and
fadd
outsb
popa
xchg
sub
add
xor
push
shl
sti
ret
lock
aaa
push
les
jmp
or
test
xchg
inc
flds
bnd
jb
pop
mov
aaa
push
daa
pushf
lcall
fdivrs
out
mov
inc
push
test
sub
loopnew
jle
push
sub
cmpsb
sbb
inc
leave
cli
sbb
repz
push
xchg
popf
adcb
stos
push
mov
and
addr16
pop
mov
inc
pushf
fidivl
xor
int3
cs
arpl
or
sub
ja
push
push
movsl
cmpb
orb
ds
lea
mov
xchg
and
ret
leave
pop
sti
push
or
gs
jecxz
push
sub
and
pop
xchg
adc
mov
fidivrl
stos
ds
cmc
cs
mov
mov
sti
mov
xchg
jp
adc
jecxz
push
push
mov
or
push
je,pt
in
and
jecxz
mov
mov
imul
dec
inc
add
sub
jb
mov
mov
jge
lock
xorl
xchg
shl
cmp
les
lock
in
push
mov
adc
lods
lds
loopne
stos
and
or
insl
adc
jl
test
push
das
mov
pop
lret
mov
ret
aas
sub
lods
xchg
imul
dec
or
mov
inc
or
daa
call
repnz
xorb
test
mov
dec
imul
mov
pushl
dec
dec
in
in
or
dec
and
mov
sbbl
xor
pop
rcrb
mov
dec
xor
rclb
xchg
xor
sar
scas
sbb
rclb
mov
push
and
cltd
pushf
add
mov
imul
and
xor
mov
sbb
out
xchg
push
pop
push
out
jno
jl
cmp
out
cmpsb
pop
add
pushf
hlt
ror
in
aad
ds
add
and
shrl
rorb
pop
iret
imul
xchg
sbb
dec
inc
dec
imul
pop
mov
int
or
pop
into
fnstenv
or
gs
in
jmp
sar
daa
push
gs
pop
adc
jecxz
shlb
push
jo
add
mov
add
and
and
inc
sbb
sub
js
shr
or
adcl
cmpsb
gs
lock
xor
loop
stos
hlt
adc
mov
mov
loope
mov
pop
mov
movsbl
js
and
sub
jge
test
ficompl
dec
ror
xchg
hlt
dec
test
push
mov
jnp
repz
inc
pop
fisubl
pop
in
imul
jbe
add
add
mov
popf
sbb
pop
and
adc
cmp
loope
jbe
or
inc
xor
daa
mov
mov
xchg
dec
scas
pop
cmpsb
jmp
add
addr16
sub
push
dec
jb
mov
cmp
test
aam
push
icebp
arpl
insb
aad
jns
lcall
mov
outsl
daa
test
jnp
and
pop
mov
in
cmc
sbb
jbe
inc
lock
mov
sub
lcall
cmpsl
mov
mov
addr16
movsl
out
imul
jmp
add
sarl
push
insb
repnz
int3
xchg
sub
fistps
das
push
pop
test
jl
lds
sarb
aas
scas
je
inc
cld
es
cmpsb
repnz
pop
mov
add
xlat
lret
stos
rcrb
and
popa
mov
movsb
or
fdivl
int3
cmc
in
adc
pop
sti
rol
cmp
mov
gs
mov
pop
mov
mov
push
pusha
test
push
ret
ret
mov
cmp
xor
xchg
lret
mov
adc
adc
movsl
out
inc
push
jg
push
cwtl
lcall
adc
icebp
push
std
repnz
pop
sub
mov
insl
and
popf
push
jle
xlat
lods
ss
outsl
mov
rorb
lds
xchg
lock
mov
test
xor
mov
fldenv
out
imulb
fs
push
sbb
das
adc
mov
dec
test
stc
hlt
rcrb
ljmp
les
lcall
lock
mov
out
sub
aaa
dec
pop
ds
add
sub
sub
bound
cmp
pop
mov
mov
pop
pop
js
fnstcw
gs
mov
mov
lret
outsl
into
lea
xor
and
xor
lcall
and
cmpsb
ss
sbb
xor
mov
push
inc
iret
xchg
hlt
pop
sbb
push
das
push
xor
adc
fadds
push
insl
outsb
mov
data16
and
and
mov
pop
fadd
and
mov
adc
imul
das
orl
pop
imul
mov
cmp
imul
imul
jle
jmp
xor
pop
xor
push
mov
xchg
adc
jbe
dec
lods
mov
xchg
push
rol
dec
adc
inc
js
std
cmc
ds
mov
fsubs
jae
movsb
idiv
int
jl
mov
je
mov
fs
and
xor
sub
mov
and
ret
fdivrp
dec
xlat
cmc
int3
pop
repnz
xchg
test
mov
add
mov
add
push
scas
cmp
lock
lods
jp
jle
pushf
inc
pop
jnp
dec
push
mov
pop
jge
stos
adc
scas
movsb
lcall
push
sahf
es
inc
or
rcrl
mov
and
mov
lret
mov
bound
jge
lea
rcrl
cmp
in
jb
jl
adc
mov
xor
jne
dec
loop
lods
mov
jbe
ret
clc
xchg
dec
sub
xchg
testl
fcoml
lods
outsl
movsw
mov
test
dec
xchg
int
or
mov
stc
mov
lahf
jl
adc
cld
rcr
test
mov
imul
daa
jnp
xor
dec
aaa
mov
daa
dec
xchg
mov
mov
or
mov
mov
out
add
fists
mov
dec
inc
andb
cmc
push
push
dec
or
das
sbb
jnp
fimuls
shrl
jmp
pop
or
jb
push
imulb
enter
add
imul
push
and
cmp
ds
orl
cwtl
daa
pop
and
dec
dec
push
ds
loop
loope
adc
addl
mov
aam
fmulp
and
movsb
push
push
notb
mov
lret
mov
loope
scas
add
insl
insb
xor
test
lock
stos
js
daa
dec
mov
push
in
adc
xor
inc
cmp
lods
pushf
or
and
call
and
mov
mov
imul
pop
jns
inc
sarb
mov
xor
cmp
lds
or
cmc
ret
stos
pop
clc
leave
add
lods
out
jg
adc
popa
cmpsl
push
stc
scas
repz
mov
mov
sub
push
mov
jno
mov
int
aas
adc
adc
xchg
das
insl
out
mov
mov
enter
cmpsb
aad
xcrypt-cfb
cmpsl
mov
xchg
mov
or
cmp
adc
and
push
frstor
mov
add
stc
rclb
cmp
adc
push
rorb
and
jp
fstps
jnp
and
cmpsb
lds
xchg
movsl
mov
sub
out
xor
lds
mov
or
xchg
dec
push
rorb
leave
fadd
out
push
jno
nop
fildl
jno
jne
std
or
mov
mov
mov
add
rcrb
stc
or
xchg
cld
and
jno
cmp
dec
stos
lcall
jnp
jmp
mov
jl
je
sarl
sbb
mov
cli
shrl
or
lret
mov
incl
pop
lock
dec
or
sub
pop
ficomps
icebp
push
mov
jno
mov
xchg
cld
rorb
sbb
cmpsl
xchg
shll
in
xchg
xchg
dec
popf
imul
cmp
mov
fcmove
inc
loopne
out
inc
fmuls
pop
inc
test
push
mov
jns
repnz
mov
or
aam
test
negb
shll
dec
mov
dec
mov
insb
iret
fwait
push
push
cmp
sbb
scas
add
push
rcl
jo
idivl
xchg
pop
xchg
loope
push
mov
cmp
ja
adc
jge
shl
add
mov
cmp
or
in
cmc
cmc
pop
xchg
jmp
lods
insl
pop
fdivrl
push
sbb
ret
xchg
enter
inc
xchg
lret
ss
dec
int3
inc
and
add
dec
outsl
inc
xchg
or
ret
mov
and
pop
lock
mov
sarl
push
push
xchg
mov
ss
test
jg
jp
pop
loope
cwtl
cmp
add
fistpl
push
clc
dec
or
sbb
or
xor
jg
mov
mov
addr16
je
add
enter
aas
repnz
pop
mov
sbbl
sub
pop
subl
int
shrl
mov
or
mov
inc
cmp
adc
mov
test
inc
scas
lods
insb
jl
fldenv
push
mov
mov
test
jae
pushf
sub
xchg
es
xchg
fsubrl
cmp
repz
or
adc
push
add
add
fsubs
aad
xor
pop
fstpt
mov
or
add
inc
scas
outsb
jne
xchg
cmpsl
and
movsb
gs
out
pushf
insb
mov
repz
mov
dec
addl
xor
mov
pushf
sub
arpl
fisubs
lret
imul
push
pop
icebp
xchg
pop
mov
vmovdqa
add
lock
jns
mov
or
fisubrl
push
ds
gs
loopne
pusha
mov
or
gs
xchg
addr16
outsl
or
mov
cmp
adc
xor
test
fildl
cld
or
movsl
cmp
pop
or
rorl
mov
jg
xchg
fnstsw
mov
xchg
pop
jno
ds
xlat
cmp
xchg
dec
jno
dec
cli
jno
rorb
sbb
aas
sub
insl
push
or
out
or
xchg
jo
mov
dec
fwait
lahf
imul
out
push
pmuludq
or
mov
cld
pop
aaa
xor
enter
data16
and
pop
push
movsl
mov
test
mov
cmp
cmp
push
and
movsl
mov
fcoml
int3
dec
iret
dec
mov
arpl
sbb
sub
das
adc
jge
fdivrl
fists
daa
into
adc
jnp
mov
pop
mov
outsl
sbb
sub
sub
jp
cs
xchg
popa
jg
nop
sbb
mul
or
cli
daa
fisttpll
push
jp
jle
sahf
fstps
inc
xor
fsubp
adc
xchg
jb
aaa
and
adc
mov
shlb
mov
push
cmpsl
and
aas
pop
push
faddl
out
jbe
mov
xor
fldcw
pop
inc
or
jb
dec
fsubs
sbb
push
orl
xchg
dec
andl
cld
jbe
out
imul
sahf
out
or
mov
popf
lahf
pusha
scas
scas
jbe
cltd
sub
out
sub
lcall
push
xchg
les
sbb
xlat
adc
inc
pop
add
mov
cli
add
add
je
jo
outsb
insl
repnz
xchg
daa
bound
call
and
repnz
dec
scas
out
jg
mov
mov
addr16
sbb
loopne,pt
jmp
shlb
in
pop
arpl
inc
ljmp
repz
jecxz
test
aaa
xchg
add
dec
dec
and
or
popa
inc
and
cmp
out
and
or
xor
mov
adc
xchg
call
scas
ds
dec
dec
mov
and
and
das
jecxz
inc
jno
popl
lret
mov
cmp
mov
xchg
jns
jae
rcrl
mov
pop
fldenv
leave
mov
xor
pop
jae
sti
xchg
pushf
mov
int
xlat
or
sub
fs
jae
out
xorl
sbb
jb
push
pushf
dec
rclb
mov
rol
out
loopne
dec
subb
repz
inc
push
int
popf
dec
or
cli
andb
fildll
adc
arpl
jl
clc
sahf
test
lods
dec
jg
movsl
pop
mul
int
mov
jnp
cmp
push
popa
xor
data16
sbb
xchg
mov
into
sbb
mov
test
stos
dec
pop
mov
jmp
or
jbe
jae
cltd
pop
mov
dec
sub
jg
mov
sarb
adc
andb
jae
mov
pop
or
out
push
out
jo
dec
pop
push
or
out
inc
mov
jg
dec
add
xchg
push
or
shrb
pop
icebp
xchg
and
in
jl
ret
sbb
inc
lret
cmp
pop
ret
rcl
int
xor
pop
pushf
adc
pop
imulb
jp
sub
cld
scas
mov
outsb
xchg
inc
mov
sbb
test
cli
jg
fisttpll
xor
fisttpll
lret
in
insl
into
sti
xchg
inc
stc
xor
in
shrb
lods
popa
fwait
sti
jp
xor
push
jl
pop
imul
cmc
lcall
shrb
jl
ror
rol
daa
inc
pushf
push
aas
jg
push
cwtl
xchg
jne
add
ret
sbb
mov
pop
ror
jmp
aas
in
push
imul
shlb
add
adc
cmp
hlt
std
mov
sbb
cmp
fnstenv
xor
xchg
or
mov
pop
lret
fdiv
out
sub
out
mov
in
jo
xor
dec
sbbb
inc
lock
push
ret
aam
aaa
and
xor
mov
in
cltd
cli
sbb
notb
out
sub
nop
mov
and
jne
xchg
mov
pop
into
stos
dec
dec
inc
lods
out
adc
push
test
cmpsl
inc
mov
subb
or
inc
std
xchg
adc
sub
hlt
sub
add
pop
xchg
jl
idivl
pop
stos
and
insl
test
hlt
xor
pop
add
lret
xchg
mov
jp
insl
out
rcrb
leave
cmp
std
adc
imul
pop
insl
xchg
out
jno
jne
iret
sub
cs
sti
repz
data16
jns
push
pop
fstl
or
mov
movzwl
sub
lahf
pop
sbb
and
lds
inc
repnz
and
pop
iret
jbe
mov
dec
mov
xor
stos
lahf
ficoml
inc
repz
pop
ret
adc
mov
out
lcall
cmp
sbb
ds
mov
cmpsl
dec
inc
cwtl
addr16
push
xor
fisubl
jnp
lret
stc
rcll
xor
loopne
sbb
and
das
testb
pop
shrb
push
lods
xchg
and
aad
rclb
aam
mov
cltd
sub
test
addr16
in
mov
jb
testl
movsl
jg
out
inc
pop
ret
icebp
enter
test
cli
or
lods
pop
repz
lea
pop
repz
adc
xchg
lds
mov
and
xchg
out
or
mov
mov
sbb
sub
ret
ror
cmpsb
stc
fcomp
add
mov
shll
stos
inc
shlb
andl
push
lret
nop
add
cmpsb
mov
mov
pop
dec
adc
xor
sti
hlt
inc
daa
mov
inc
pop
pop
insb
fwait
xor
mulb
lcall
jmp
mov
stc
sbb
mov
pushf
pop
ds
or
mov
mov
push
ss
pop
lods
xchg
out
mov
pop
ret
ds
or
cmpb
stos
shrb
gs
enter
or
outsb
mov
popa
lods
test
xlat
pop
push
popa
xor
rcr
cli
cli
xchg
out
aad
pop
fisttpll
inc
xor
leave
roll
dec
mov
jnp
mov
dec
ret
stc
sahf
push
dec
lcall
dec
cmp
jne
mov
ds
mov
xchg
roll
mov
dec
add
push
jnp
sub
mov
sub
pushf
pop
add
notb
jb
cmp
pop
mov
xor
push
cmpsl
mov
out
jp
and
xor
mov
pop
dec
scas
test
outsb
insl
std
dec
adc
lea
dec
mov
or
add
xor
lcall
in
loop
dec
push
or
ss
dec
dec
adc
icebp
pop
icebp
stc
jo
and
and
jne
ljmp
and
ss
enter
into
aaa
mov
es
call
mov
push
out
push
aaa
xor
aas
inc
mov
frstor
fcompl
pop
pop
mov
insl
bound
dec
xchg
push
adc
clc
add
xchg
mov
or
popa
sbb
lcall
sbb
fisttpll
push
iret
int
lods
insb
xchg
sub
cmp
mov
in
add
pop
cmc
fsubl
cltd
pop
sub
mov
mov
ja
cli
or
fstpl
mov
and
sub
pop
jb
cs
inc
subb
aad
outsl
xchg
leave
cwtl
iret
add
jl
cmpsl
aas
mov
repnz
roll
dec
mov
out
incb
lds
xor
mov
out
in
mov
mov
and
cmp
inc
inc
add
mov
pop
mov
cmpsl
movsl
leave
adc
adc
cwtl
in
ds
dec
hlt
cmp
loop
jp
pop
stc
pushf
in
pop
mov
pop
adc
mov
scas
lds
cmpsb
or
popf
imulb
mov
leave
mov
imul
fstps
movsb
jns
mov
lcall
xor
pop
fisubl
aad
loope
push
sub
insl
mov
ljmp
inc
sbbl
push
inc
repz
addb
shrl
pop
push
sub
xor
imul
cmp
push
mov
lret
and
rolb
rol
inc
mull
xlat
dec
pop
ret
mov
test
lods
jbe
mov
pop
es
movsl
push
xchg
out
pop
aad
sarl
sub
loopne
xchg
and
sub
push
sub
outsb
mov
das
and
jmp
lea
pop
test
mov
mov
inc
dec
and
add
inc
push
pop
rorl
xlat
cmp
sbb
insb
xchg
lret
mov
adc
nop
or
sbb
in
cmp
sti
filds
or
aas
repz
mov
add
out
push
xchg
xchg
imul
icebp
or
and
stos
scas
pushf
mov
and
push
enter
xchg
mov
cmp
ss
sbb
fldcw
sahf
sub
sbb
xor
pushf
mov
std
arpl
xchg
mov
push
rol
mov
push
adc
pop
xchg
lcall
push
cmp
repnz
mov
xchg
push
test
sbb
jbe
lods
stos
insl
push
dec
cwtl
dec
jge
and
dec
in
ret
push
xchg
cmp
dec
clc
fnsave
ffree
lods
lret
inc
adc
fsubp
cmpsl
repz
adc
incl
mov
aad
xchg
mov
popf
adc
mov
cmpsb
add
arpl
repz
jnp
jnp
je
flds
fcomp
push
mov
into
jmp
fcompl
fdivrl
mov
and
cltd
lock
loope
cmc
pushf
push
fnstsw
adc
or
pop
js
add
or
mov
add
js
add
js
add
js
add
jns
add
or
sub
add
or
push
jns
add
or
jb
or
add
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
cltd
dec
add
add
add
cwtl
dec
add
cwtl
dec
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
incl
add
add
dec
add
add
add
incl
add
add
cmpsl
dec
add
movsl
dec
add
incl
add
add
test
add
incl
add
add
stos
dec
add
add
add
incl
add
add
lods
dec
add
add
add
incl
add
add
scas
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
add
add
incl
add
add
mov
add
incl
add
add
dec
add
add
add
incl
add
add
ret
add
add
incl
add
add
dec
add
add
add
incl
add
add
fimull
add
add
mov
xlat
dec
add
incl
add
add
loope
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
ljmp
dec
add
dec
add
add
add
out
dec
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
stc
dec
add
add
add
dec
add
add
add
stc
dec
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jmp
pop
dec
add
or
hlt
fwait
dec
add
fwait
dec
add
fwait
dec
add
push
adc
add
adc
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
sbb
add
add
incl
add
add
sbb
add
add
call
sbb
add
pushl
dec
add
and
ljmp
and
dec
pop
nop
add
add
add
add
incl
add
add
add
add
rolb
add
push
pop
mov
int
mov
push
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
and
and
fs
add
add
add
popf
mov
lcall
lcall
fcmovnu
lcall
lcall
aad
lcall
fcomp
lcall
lcall
push
inc
add
dec
add
add
inc
loopne
sidtl
add
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
cmp
add
je,pn
js
add
add
add
add
adc
add
push
add
add
add
add
pusha
jb,pn
popa
je
add
stos
add
add
and
add
add
add
or
add
add
fs
je
add
add
add
xor
add
add
add
or
add
add
movzbl
cmp
jg
je
cmp
jg
je
add
cmp
ja
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
sub
je
sub
je
dec
jmp
mov
ret
mov
ret
sub
je
dec
je
dec
je
dec
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
pop
adc
and
inc
add
adc
sub
inc
add
adc
xor
inc
add
inc
add
in
push
push
push
mov
push
mov
sub
push
push
push
andb
push
pop
xor
lea
rep
stos
stos
lea
push
mov
push
call
lea
push
call
lea
push
push
call
pushl
push
lea
push
call
add
lea
push
lea
push
call
mov
cmp
je
andl
lea
push
call
test
jne
push
lea
push
call
pop
pop
mov
mov
pop
pop
pop
leave
ret
orl
call
jmp
pushl
call
ret
jmp
push
mov
sub
push
push
push
push
xor
pop
xor
lea
mov
push
rep
stos
stos
mov
lea
push
push
mov
call
test
je
mov
lea
mov
push
call
movzbl
mov
push
shl
call
pop
pop
push
movzbl
pop
or
sub
addl
shl
or
inc
inc
cmpl
jl
lea
push
push
push
call
test
je
xor
lea
mov
mov
push
call
movzbl
mov
push
shl
call
pop
pop
movzbl
push
or
pop
sub
add
shl
or
inc
inc
cmp
jl
cmpl
je
mov
lea
mov
push
pushl
mov
call
test
je
cmp
jne
push
pushl
call
lea
push
pushl
jmp
pushl
call
pop
push
call
pop
pop
xor
pop
leave
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
jmp
add
mov
and
add
and
add
and
add
and
add
add
and
add
xor
add
dec
and
add
add
sahf
and
add
add
add
add
add
incl
add
add
inc
add
add
add
add
add
add
add
add
mov
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
xor
add
dec
and
add
add
sahf
and
add
add
add
add
add
fs
insb
outsl
jae
add
inc
gs
gs
inc
imul
imul
je
imul
inc
gs
jne
jb
outsb
je
imul
jns
add
pop
add
je
jne
jb
outsb
je
imul
jns
add
add
je
gs
jo
popa
je
inc
add
jge
inc
js
je
jb
arpl
jae
into
add
imul
insb
gs
bound
arpl
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
dec
inc
dec
xor
cs
insb
add
lods
add
jo
imul
push
inc
push
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
add
add
pop
inc
and
and
and
add
add
pop
pop
inc
dec
inc
inc
dec
push
push
pop
push
push
dec
inc
inc
push
push
add
pop
pop
inc
dec
inc
inc
dec
push
push
pop
push
push
dec
inc
inc
push
push
pop
dec
inc
add
and
add
add
add
add
add
incl
add
add
and
add
add
incl
add
add
add
add
add
incl
add
add
and
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
add
add
jmp
sub
daa
sub
pushl
sub
cmp
dec
add
lcall
dec
add
add
ljmp
add
dec
add
call
sub
jmp
sub
incl
add
add
sub
add
add
incl
add
add
add
add
incl
add
add
sub
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
call
xor
incl
add
add
incl
add
add
add
add
inc
ja
add
ja
add
pushl
add
dec
add
call
jp
add
or
cli
js
add
pusha
or
pop
js
add
or
mov
add
js
add
js
add
js
add
jns
add
or
sub
add
or
push
jns
add
or
jb
or
add
add
stos
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
data16
je
jb
jb
je
arpl
push
arpl
outsb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
sub
mov
sbb
push
into
pusha
pushf
movsb
mov
fwait
xchg
and
dec
imul
xor
sbbl
push
sub
adc
dec
lds
mov
xchg
push
fdivrs
pop
xchg
mov
std
jp
mov
cmp
or
xchg
jmp
push
data16
sub
and
or
and
adc
push
in
xchg
cs
ficomps
testb
sbb
mov
xchg
dec
pushw
aas
out
pop
lcall
std
adc
rorb
out
fimull
out
imul
es
es
xchg
mov
inc
push
jecxz
imul
mov
mov
cmp
or
pop
daa
leave
push
dec
jmp
ret
mov
shlb
stos
lret
or
fildl
sub
test
insb
mov
mov
jle
sub
out
ffreep
movsl
cmp
pop
xchg
push
cmp
cmp
sub
push
rorb
mov
iret
adc
adc
mov
aam
push
out
shrb
xor
cmpsl
fsubs
mov
jecxz
inc
sarl
sahf
cmpsb
mov
fnsave
hlt
stc
shl
sti
xor
xchg
scas
mov
jne
shr
fldl
mov
sbb
mov
inc
cmp
push
lret
or
cmpl
dec
adc
shlb
inc
jnp
mov
dec
adc
add
jns
into
lea
lret
pop
sarb
out
xor
lds
clc
jnp
clc
orb
sbb
push
imul
xor
adc
lahf
mov
mov
add
into
icebp
imul
push
push
int3
xchg
out
repnz
jmp
ds
jle
stc
mov
push
lea
fildl
add
mov
insl
sbb
cwtl
mov
mul
in
in
or
push
xchg
test
push
pop
xor
cmc
cmp
inc
inc
mov
ds
test
xor
pop
mov
or
inc
cmpsb
test
insb
jo
mov
xchg
dec
push
cli
ret
xlat
xor
loop
sub
mov
je
mov
pushf
sbb
sbb
mov
arpl
nop
push
scas
ret
cmp
inc
test
xor
xchg
scas
or
fsubrs
mov
cwtl
mov
in
ret
lahf
adc
icebp
outsb
xor
add
outsl
mov
aas
enter
and
dec
xchg
pop
cmpsb
jns
std
pop
sbb
adc
push
nop
mov
ffree
sbb
inc
sbb
mov
fbstp
jns
int3
xor
jmp
xchg
inc
pop
pop
push
lahf
mov
and
sbb
push
gs
dec
into
hlt
aam
aad
xchg
jmp
xlat
dec
pop
pop
popf
inc
lock
out
in
or
or
mov
cld
nop
mov
mov
stos
ret
dec
mov
or
xor
inc
adc
sub
push
xchg
nop
xchg
int3
pop
lods
das
cli
shrb
cmpsb
pop
or
mov
popf
outsb
jecxz
mov
inc
cmp
inc
lcall
mov
mov
cmp
sub
fwait
cmp
in
pop
push
pop
cmp
pop
xchg
sbb
xchg
sub
cld
sub
sti
popf
aaa
repz
jmp
std
into
aam
pop
xor
cli
or
pop
or
xchg
lds
mov
sti
imul
or
hlt
dec
icebp
popf
add
sub
mov
es
bnd
mov
outsb
add
and
fidivs
nop
or
xlat
lahf
inc
add
inc
sti
xor
sub
cld
cs
or
sahf
fwait
test
cld
cmc
adc
icebp
adc
mov
mov
pop
adc
and
adc
lods
inc
cmpsl
repz
push
lds
sahf
loop
push
repz
jl
or
cmp
mov
hlt
mov
cmp
cld
testb
push
xchg
push
jp
push
cmp
ja
jnp
pop
push
mov
sbb
xchg
orb
ja
sub
les
cltd
xchg
mov
popa
mov
imul
shrl
adc
lock
jge
mov
add
movsb
cmpsb
pop
push
xchg
insl
aam
and
outsl
fcoms
shlb
ds
pop
dec
jne
sbb
sbb
shll
push
mov
lahf
imul
xchg
pop
push
ljmp
cmp
cmc
cmpsb
ljmp
xor
xor
or
mov
mov
dec
dec
push
idiv
push
arpl
mov
in
pop
call
out
jp
out
or
insl
dec
pop
xchg
js
in
sbb
int3
xchg
int
int
mov
fst
addl
mov
fwait
add
mov
push
jb
in
xchg
dec
pop
outsl
mov
xchg
pushf
pop
lcall
scas
lea
cwtl
fiadds
inc
cmc
inc
inc
xchg
popl
fwait
mov
push
pop
add
aam
imul
or
test
mov
and
lods
push
rclb
sub
adc
jae
and
cwtl
test
push
cmc
sub
add
pop
sti
in
sahf
pop
pop
pop
or
hlt
mov
bound
rcll
sub
fdivrp
push
out
inc
sbb
xlat
mov
loopne
push
loopne
jp
mov
insl
movsb
aam
pop
icebp
mov
fisttpll
jo
arpl
mov
rcl
mov
fwait
push
sub
push
cmp
daa
je
leave
enter
push
loopne
mov
enter
add
scas
sub
sub
lods
pcmpgtw
push
mov
xor
pop
jb
insl
ds
sub
stc
xlat
popf
jl
clc
in
pop
xlat
pop
sub
scas
pop
bound
sbb
dec
and
out
mov
or
mov
push
sub
pop
push
mov
xor
push
cmp
insl
mov
mov
inc
mov
popa
sub
adc
pop
jno
and
dec
cmpsl
mov
inc
clc
add
mov
add
mov
sahf
mov
scas
test
repnz
sub
enter
call
mov
testl
ss
fdivr
fdivr
insl
popf
inc
dec
jae
std
dec
push
lods
das
in
sub
inc
or
mov
loop
add
mov
jecxz
mov
shll
cmp
ja
cmpsb
hlt
jp
jg
orb
sub
cmc
cwtl
push
sub
xchg
xor
push
test
push
out
inc
ret
sahf
outsl
mov
and
cmp
pop
in
push
into
fcmovnb
sbb
dec
adc
mov
mov
aad
mov
movsl
rol
rcll
jae
outsl
je
xchg
mov
aam
lahf
sub
scas
pop
andb
add
dec
cmp
jg
out
in
aam
out
dec
test
loopne
jp
mov
cwtl
mov
lret
cmp
jle
xchg
imul
push
mov
data16
ja
dec
faddl
inc
jp
lds
sbb
insl
or
fisttpll
call
push
adc
sbb
dec
jno
lret
popa
int
arpl
mov
adc
mov
dec
fs
fbstp
push
push
sbb
push
sub
lods
pop
out
jge
loope
inc
add
xchg
sub
mov
out
test
hlt
pop
mov
inc
pop
sub
cmp
push
lods
lock
in
aaa
jl
call
sbb
jl
jge
incl
aas
dec
rcll
cmp
enter
decb
movsl
clc
dec
notb
adc
movl
push
xor
dec
jb
push
jnp
mov
push
mov
and
xchg
sub
cwtl
setg
int
dec
jb
jo
or
lret
inc
cmpsb
jns
xorb
adc
inc
push
cmp
or
test
lea
pop
sub
mov
jb
orb
dec
std
jb
dec
addb
pop
loope
pop
sub
outsb
add
lahf
stos
cmpb
jae
adc
in
xor
in
jg
int
fnsave
or
loopne
andps
pop
mov
movsl
pop
aad
add
jg
es
push
push
or
pop
mov
xchg
xchg
je
int3
ljmp
cmpsl
aad
movsl
dec
and
lods
jae
popf
movsl
ljmp
inc
loopne
pop
in
jecxz
in
std
pop
test
adcb
fwait
and
cmp
imul
cmp
push
dec
lret
add
pop
mov
xor
aad
xchg
push
dec
adc
out
dec
stc
in
pop
pop
xor
dec
fdivrl
ds
lret
lahf
test
loopne
sbb
inc
dec
xor
nop
repz
dec
je
dec
adc
inc
lock
jns
test
out
stos
int3
pop
clc
fs
in
cmpxchg
cmp
push
or
js
loope
popf
loopne
cltd
bound
iret
fisubl
insb
lahf
or
lcall
jl
in
mov
js
pop
mov
loopne
or
movsl
dec
inc
aaa
sub
popl
xor
test
int3
push
test
insb
pop
lcall
out
insl
xor
adc
adc
xor
mov
jle
jge
and
pop
inc
es
insb
add
and
fldt
adc
mov
andb
dec
xor
mov
inc
and
mov
mov
pop
cli
cmp
mov
push
lock
cmp
pop
xor
jl
mov
call
leave
sub
jmp
push
fdivrl
or
outsl
test
and
dec
xor
cmpl
aam
loop
adc
mov
mov
aas
mov
jno
pop
push
mov
ret
xchg
cmp
lcall
and
inc
push
sbb
test
icebp
xchg
orb
shrb
mov
out
dec
pop
iret
mov
sarl
push
push
outsb
mov
cmpsl
rclb
call
and
jbe
jnp
or
xor
es
xor
sbb
and
mov
mov
arpl
sarl
int
mov
lret
sub
je
or
mov
test
outsl
mov
jns
dec
and
loop
mov
adc
jnp
mov
sub
push
and
sbb
xchg
out
movsb
inc
test
pop
mov
or
adc
dec
add
adc
sbb
pop
insl
and
adc
add
adc
fidivs
add
mov
out
mov
jns
push
lods
in
push
pop
add
icebp
jmp
and
daa
popf
arpl
xlat
sub
jmp
popa
or
sub
shll
std
jl
mov
pop
adc
arpl
outsb
mov
mov
push
pushf
das
xchg
or
xchg
int3
imull
and
pop
and
pop
mov
push
add
mov
push
sarb
aam
xchg
ss
inc
into
in
mov
jae
dec
scas
push
ret
pop
in
xlat
jp
and
jmp
inc
cmp
and
push
push
scas
sbb
fiaddl
push
ss
cmp
popa
leave
mov
sub
cmp
or
mov
inc
jl
mov
pop
imul
shll
out
jne
adc
out
add
mov
lock
mov
scas
and
xor
test
and
sbb
call
clc
jae
add
cmpsl
sbb
lods
jecxz
lahf
inc
test
mov
adc
push
iret
out
sbb
mov
insl
rclb
jns
xor
cmpsb
repz
xchg
and
pop
jae
jnp
mov
mov
jl
ds
nop
loope
imul
push
data16
push
data16
jp
aas
xor
adc
xchg
mov
cmp
dec
mov
and
mov
add
popa
sbb
inc
and
mov
xchg
inc
mov
push
int3
add
movsb
sub
inc
les
xor
test
jno
icebp
mov
xor
add
cmp
cmp
cmp
or
pusha
aad
fcoms
or
jge
xchg
or
jo
inc
repnz
or
pusha
iret
sti
cld
cld
dec
push
inc
scas
jno
iret
mov
and
pop
xor
xor
lods
sti
xchg
test
xchg
loope
jle
stos
gs
leave
daa
cmp
cmp
fisttps
loop
enter
jp
sbb
xchg
mov
mov
icebp
test
mov
mov
mov
xchg
push
xchg
dec
popf
and
cmp
xor
and
jne
leave
dec
out
cltd
xor
nop
sub
mov
cli
and
imul
mov
ds
inc
adc
dec
js
mov
mov
loopne
sti
mov
xlat
push
dec
cli
jnp
ja
push
mov
sahf
inc
xor
ffree
mov
dec
mov
mov
fadds
pop
lahf
dec
dec
push
cltd
mov
pop
or
sbb
popf
mov
call
pop
xor
mov
pusha
xor
popf
mov
push
push
lock
ds
imul
mov
mov
aas
xlat
xchg
xchg
jns
xor
push
or
pushf
pop
lods
push
fimull
pop
push
jns
out
bound
mov
pushf
insl
push
xor
mov
jg
data16
jne
mov
xchg
xor
repz
sbbl
pop
jno
inc
inc
gs
mov
mov
cmp
sbb
pop
movsl
rorl
lock
mov
in
mov
dec
cmp
cwtl
add
fdecstp
and
aad
insb
sub
fisubl
adc
push
adc
mov
push
mov
adc
dec
mov
and
push
loopne
mov
jge
rcl
sub
ss
lret
imulb
aas
xlat
jae
dec
repz
pop
dec
test
test
sub
movsb
mov
jbe
mov
xchg
mov
cmc
inc
shlb
sbb
and
cmp
or
test
adc
idivb
xchg
mov
mul
adc
out
mov
sub
jl
arpl
insl
aam
fbld
bound
stos
jno
stos
flds
mov
lret
xor
loope
mull
mov
test
in
aaa
jp
push
jl
mov
mov
sbb
repnz
xor
push
sub
sbb
adc
test
sbb
lahf
mov
fs
push
test
push
inc
ss
or
lret
jnp
lods
fistpll
jmp
daa
inc
outsb
sbb
mov
or
push
std
ret
pusha
fsts
inc
sti
js
fimull
scas
inc
lret
sub
inc
jecxz
outsl
push
ficompl
pop
xor
dec
pusha
pushf
push
mov
ret
add
sub
jo
push
cmpsb
inc
repz
daa
pop
jl
xor
aaa
cmp
js
data16
sbb
sbb
xlat
cmpsl
out
push
or
adc
lahf
leave
xor
roll
out
insl
stos
xorl
or
inc
jl
loope
lock
add
pop
rcl
mov
addr16
std
cld
scas
mov
or
in
outsl
mov
or
insl
pushf
push
out
jp
dec
fidivrs
cli
andl
js
push
push
repnz
pop
pop
sbbb
out
or
int3
imul
jp
loop
sub
adc
jb
cli
mov
inc
into
pop
dec
push
sti
enter
and
push
jns
lret
mov
leave
je
mov
enter
imulb
mov
insb
pop
bound
xchg
cmp
out
fcmovnb
sbb
sbb
add
jae
mov
gs
in
sbb
mov
mov
and
mov
mov
notl
and
add
stos
xchg
fcmove
sahf
mov
push
xchg
ds
repz
setge
fbld
mov
lock
mov
jg
mov
ds
xlat
rorb
mov
or
mov
jg
or
pop
sub
into
jmp
loope
pusha
scas
xor
jmp
clc
insl
jnp
mov
pop
divps
rorl
jae
lret
push
ljmp
in
cmpsb
jecxz
mov
cwtl
sti
jg
dec
dec
mov
xor
rcl
dec
stc
movb
shl
pop
xchg
dec
insl
repz
out
fs
aad
push
or
inc
xchg
jo
jne
add
mov
inc
cs
mov
je
xor
push
mov
jp
ret
lahf
cmc
frstor
mov
inc
ret
cltd
addb
into
mov
inc
push
inc
dec
xchg
push
inc
cmpsl
cmpsl
mov
movsl
mov
xorb
scas
movsl
inc
sarl
stos
js
mov
lods
fmull
dec
push
cmp
out
pop
xchg
mov
jg
adc
push
pop
rorb
rcrb
jg
mov
test
pop
les
jbe
lea
test
sbb
or
pop
aas
mov
sarb
dec
aam
push
pop
sarb
dec
repnz
pop
les
sbb
push
scas
or
cmp
test
xchg
ljmp
test
mov
out
cmpl
stc
jl
and
xchg
jmp
out
popf
push
xchg
push
push
mov
cmp
outsl
pop
xchg
push
or
jecxz
xor
dec
xor
mov
lret
sub
mov
repz
and
clc
jne
shrb
pop
mov
inc
adc
jecxz
fs
mov
mov
push
test
xchg
shll
cmp
xor
cld
ret
add
push
out
gs
xchg
cli
or
add
jns
xor
mov
fwait
push
imul
fwait
inc
pop
int
scas
ret
inc
gs
mov
leave
or
aam
inc
cmc
flds
xchg
push
xchg
xchg
cltd
loope
lods
addr16
ss
lret
cmp
push
aas
cmpsb
scas
push
insb
and
sub
nop
loope
sub
sti
imul
sbb
dec
xchg
in
stos
cltd
nop
and
adc
ljmp
pop
xor
jbe
out
jecxz
imul
or
psllq
mov
push
lahf
outsb
cmp
push
pop
xchg
sub
popf
sub
sbb
scas
shlb
push
loopne
fsubr
or
aad
mov
out
mov
or
lcall
mov
add
out
adc
movsb
xchg
clc
xor
add
mov
lock
xchg
or
aaa
xchg
scas
push
xlat
in
popa
jne
sbb
insl
movsl
fdivrl
fidivl
adc
xchg
push
mov
pop
outsl
adc
sar
leave
and
jbe
aad
push
loop
inc
adc
daa
out
add
jp
adc
int3
lret
xor
repz
mov
fucomip
pusha
cmc
scas
sarl
pop
testl
loopne
sub
adc
inc
roll
in
add
lret
mov
and
mov
or
int3
cmc
pop
arpl
pusha
xchg
jp
jmp
jl
cmp
cmp
add
or
push
sub
xor
mov
orl
and
iret
mov
arpl
pop
mov
hlt
dec
loope
mov
dec
roll
add
jge
fistl
xor
out
jmp
scas
pop
push
dec
xchg
mov
jmp
shrb
jl
inc
loopne
inc
dec
cmp
cmc
icebp
fstl
xchg
cmp
addl
inc
cmp
inc
loope
jecxz
or
push
and
jnp
mov
in
mov
mov
fnstcw
sahf
mov
xor
push
push
daa
test
jp
sbb
call
pop
adc
arpl
daa
jecxz
add
popf
push
popf
inc
mov
push
or
call
jns
cmp
jge
movsl
jge
adc
ds
fistps
mov
repnz
loop
xchg
out
mov
cmp
fnsave
imul
int3
aaa
lods
ret
in
sahf
cwtl
lret
dec
lods
and
lcall
rorl
gs
call
mov
jo
out
out
push
ss
push
dec
xchg
ja
pop
addb
es
cmp
mov
neg
xlat
aas
pushf
adc
adc
in
je
sbb
fisubs
cmpsl
add
outsb
subb
leave
xchg
ret
pusha
inc
daa
rep
in
adc
sbbb
mov
out
jp
push
adc
data16
sbb
add
aaa
cmp
xchg
out
cmp
js
lret
jmp
lcall
enter
ret
in
loop
stos
push
in
call
add
inc
cld
push
mov
or
sbb
je
adc
inc
aaa
rol
movsb
mov
mov
out
xchg
lock
dec
xchg
dec
test
sub
inc
dec
adc
jmp
push
sub
mov
jp
jcxz
flds
xchg
mov
andb
fdivrl
and
ds
xchg
mov
js
dec
push
sub
push
xchg
dec
clc
cli
inc
or
dec
lods
inc
dec
stos
movsb
test
stos
jno
inc
bound
into
or
aaa
pop
inc
loop
inc
dec
inc
mov
popf
ficompl
push
test
sub
cmpsb
jb
push
and
jmp
xchg
in
or
outsb
test
std
lea
outsl
incl
push
fistl
leave
shlb
and
or
mov
xlat
and
xor
xchg
lds
subb
cmp
sbb
lock
xchg
add
inc
test
sbb
repnz
pop
rsm
mov
push
or
ljmp
je
xchg
gs
test
push
jae
sbb
jae
xor
jno
and
or
testb
or
jne
lods
mov
dec
shlb
out
scas
movsb
mov
arpl
test
add
sub
push
dec
xchg
mov
mov
cmp
call
mov
fs
inc
int
push
test
ljmp
sbb
js
inc
pop
cmp
lea
xor
mov
push
dec
or
ret
cs
neg
ss
mov
in
std
jno
dec
sub
xchg
mov
jb
pop
adc
cmp
dec
mov
scas
inc
div
repz
pop
adc
in
fucomip
adc
fucomi
xchg
dec
.byte
