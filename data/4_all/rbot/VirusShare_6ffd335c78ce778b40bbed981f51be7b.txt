aas
lds
xchg
mov
sub
psraw
mov
sub
xchg
push
xor
cltd
jae
pop
xchg
xor
xor
repz
lods
test
or
mov
popf
cltd
stos
mov
fisttpl
or
add
xor
cmp
xchg
inc
pop
inc
inc
pop
pop
and
es
lods
pop
mov
stos
dec
push
popf
push
cmp
dec
push
sub
lret
push
cwtl
xchg
mov
outsb
dec
mul
rorl
imul
or
imul
add
cli
mov
and
sub
mov
jp
jbe
aad
mov
mov
sub
push
imul
lock
mov
cmp
cwtl
push
sub
add
cmc
mov
mov
mov
imul
sub
fmul
int
gs
sbb
mov
daa
xchg
xor
scas
jecxz
cmc
fisttps
sbb
push
add
mov
push
out
daa
fistl
mov
jmp
sbb
jae
fsubl
enter
loopne
inc
in
test
or
cmp
ret
push
adc
lds
dec
int3
mov
aam
test
cmpl
test
push
scas
add
or
aaa
repz
nop
jb
mov
sbb
stos
adc
pop
push
mov
ficomps
sahf
decl
pop
pop
mov
or
sbb
cltd
pop
dec
inc
xor
jp
jmp
out
in
and
mov
sar
inc
xlat
orl
rolb
inc
cmp
pop
sub
xlat
dec
mov
add
dec
cmp
cmp
lcall
stos
sub
gs
add
dec
dec
push
mov
jns
jle
insb
mov
adc
cwtl
lahf
out
pop
mov
mov
data16
xlat
jle
xchg
adc
sbb
xchg
inc
mov
mov
sbb
cmp
repnz
jge
clc
shlb
flds
les
nop
pusha
and
and
sub
mov
lods
test
adc
mov
jecxz
inc
sbb
xchg
test
jns
add
mov
dec
dec
lcall
fwait
daa
xchg
aad
ds
xchg
push
test
pushf
mov
jecxz
add
sbb
outsl
xor
icebp
pop
jge
inc
dec
aad
pushf
in
lret
gs
sub
push
loopne
repz
ja
fwait
sub
loopne
mov
mov
pop
push
cmp
and
cwtl
mov
inc
add
or
outsb
loope
aam
sub
mov
jns
mov
push
fsubr
xorb
shrb
popf
repnz
cmp
and
test
cmc
nopl
push
lods
rorl
pop
sbb
add
insl
jnp
shr
jmp
sub
lods
flds
mov
test
shll
lret
inc
daa
fistps
mov
cmp
add
call
jno
shl
mov
adcl
sbb
stc
mov
and
xchg
add
jl
mov
fcomps
add
mov
dec
cli
xlat
lcall
ja
test
cli
mov
cmpsl
or
nop
inc
jae
xchg
clc
push
fcoml
roll
stc
cmp
test
orl
dec
sub
add
sub
sub
clc
test
jmp
in
pop
xlat
pop
pop
mov
inc
inc
xchg
gs
icebp
cmc
es
sub
jne
lock
out
repnz
and
lahf
inc
or
lods
dec
aaa
repz
ret
and
mov
sbb
cmp
mov
jmp
mov
xchg
and
add
fcomip
lcall
mov
ret
push
xor
sbb
iret
or
xor
mov
xchg
mov
mov
lret
lcall
add
push
les
sarl
jns
or
add
aas
into
jnp
push
mov
xchg
flds
jecxz
add
loop
dec
in
ror
xchg
mov
test
dec
cltd
testb
push
fisttpl
fwait
les
sub
jmp
insl
les
xchg
push
das
push
loopne
mov
iret
xchg
popf
dec
push
add
popf
push
cs
jge
out
outsl
xchg
mov
pop
or
fs
ss
xor
xchg
xlat
lret
xor
test
ror
icebp
add
pop
inc
ret
jne
pop
popa
push
xor
cltd
int3
fdivs
or
fwait
or
data16
sbb
add
push
notl
add
rcll
mov
xchg
push
push
fisttpl
out
imul
lea
pop
mov
ljmp
lds
jae
mov
mov
mov
mul
fdivrs
das
cmovg
xchg
aam
mov
and
pushf
pop
push
sub
dec
test
gs
pop
xchg
and
js
clc
xor
mov
pop
adc
pop
inc
cmp
shlb
cmp
sub
sbb
out
push
jge
and
add
jle
jecxz
cmp
lods
mov
cli
jl
and
cmp
arpl
xorb
jne
mov
dec
jl
mov
push
shrl
cltd
subb
xor
adc
pop
push
sahf
test
jno
xchg
xor
leave
xlat
test
jmp
pop
adc
xchg
das
pop
leave
sub
xorl
test
sub
insb
mov
or
fcomps
or
ja
mov
and
bound
xlat
push
int
ds
inc
mov
fidivrl
dec
push
mov
and
push
in
shl
sarb
xchg
rclb
nop
les
jne
and
mov
xor
adc
imul
adc
test
out
mov
or
fisubrs
pop
mov
adc
push
inc
scas
mov
lret
adc
pushf
iret
jl
sbb
push
fldl
push
add
lods
xchg
xor
adc
cmpsl
out
addr16
dec
test
fsubp
sub
jmp
cwtl
push
adc
out
popa
insb
imul
stos
xor
pop
ret
push
loopw
or
pop
daa
xchg
test
xchg
imul
pop
cltd
ret
into
movsb
je
dec
pop
ret
ficoml
sahf
icebp
mov
shlb
inc
out
iret
das
jbe
sbb
leave
or
mov
pop
lret
mov
and
loop
mov
enter
jae
dec
mov
mov
repnz
add
inc
or
xchg
cmp
popf
ret
scas
lods
out
sub
xor
mov
pop
pop
cld
aas
shll
cmp
pop
imul
xchg
pop
xchg
sbb
jp
scas
mov
pop
mov
pop
hlt
xchg
sbb
mov
inc
mov
movsl
jp
arpl
jns
int3
jle
outsl
pop
push
fsubs
mov
out
pop
test
lock
repz
push
into
imul
orl
outsl
das
pushf
dec
sub
fildl
cmp
clc
pop
push
dec
xchg
jmp
mov
or
sub
lcall
push
jae
les
inc
adc
xor
int
xor
adcb
std
ja
add
sahf
les
rcr
or
cmp
popa
nop
daa
shll
pusha
test
jge
adc
sti
adc
sbb
inc
mov
ss
mov
pop
or
pushf
inc
int3
sbb
sub
xchg
or
adc
mov
jl
lock
mov
outsl
xchg
outsl
mov
sub
inc
dec
xchg
add
les
mov
stc
lods
add
lret
push
fdivl
cmp
mov
das
test
or
dec
pop
dec
push
rep
cmpsl
mov
repz
sahf
sbb
adc
add
pop
mov
sbb
and
fucom
pop
cs
test
and
das
stos
jg
cmp
mov
sbb
cmpsl
add
xchg
repnz
ret
jg
mov
add
sub
mov
pop
jbe
lods
imul
pop
stos
mov
adc
outsl
leave
inc
inc
adc
cs
and
sbb
sub
je
mov
mov
mov
out
clc
repnz
dec
inc
sub
push
out
je
mov
push
mov
nop
into
cs
sarl
fadds
pop
cmp
cmp
jmp
add
cltd
lods
pop
enter
cmpsl
xchg
pop
mov
shlb
xchg
pop
xchg
xchg
imul
dec
sub
hlt
js
loop
mov
sub
lods
nop
sub
cli
dec
das
out
daa
mov
into
xor
fdivs
xchg
inc
add
aaa
orl
push
hlt
lods
sub
inc
aas
fistpl
daa
mov
cwtl
arpl
arpl
shlb
enter
outsb
lock
pop
mov
adc
inc
imulb
inc
push
push
dec
test
mov
call
and
pushl
leave
mov
sbb
cmpsl
dec
out
mov
sbb
jecxz
mov
js
addb
xchg
test
mov
pushf
ljmp
test
inc
jbe
cmp
stc
dec
sbb
inc
jae
leave
and
push
and
or
flds
mov
and
sub
test
fs
movsb
pop
sbb
xchg
cmp
and
xchg
stos
loopne
ss
shrb
sti
dec
out
jecxz
test
mov
push
rclb
fidivs
add
dec
lret
push
imul
mov
rolb
or
sub
fcompl
push
add
or
cmpsl
xchg
xlat
xor
xchg
inc
cmpsb
loopne
jle
shl
out
bound
lahf
out
mov
negb
jmp
sbb
jne
add
mov
push
mov
ds
imul
xchg
repnz
adc
adc
je
shll
lods
sahf
lea
pop
aas
mov
xchg
or
cmp
cmpsb
ret
sub
fcom
adc
mov
and
jbe
jb
ljmp
insl
push
push
push
adc
pushf
mov
adc
imul
jne
pusha
push
sti
leave
pop
push
inc
jecxz
pop
xchg
into
pop
push
xchg
scas
add
jl
clc
cmc
filds
mov
adc
scas
sub
mov
inc
mov
es
fistpl
adc
inc
and
imul
pop
mov
fdivrs
add
dec
int3
std
sub
es
sbb
and
adc
sub
dec
or
xor
mov
jmp
rcl
sbb
push
lret
mov
cli
push
pop
inc
push
fcom
mov
add
popa
aas
add
sub
lcall
adc
int3
adc
mov
xchg
testl
adc
and
ljmp
call
jns
dec
inc
in
jb
cmpsl
fucomip
out
pop
aam
sub
outsl
adc
sbb
icebp
std
jne
lret
jno
lahf
ror
push
mov
mov
lods
fadds
lret
push
xlat
and
push
add
faddl
shlb
adc
sub
ljmp
xchg
insb
xor
and
nop
out
adc
or
iret
cs
int3
das
xlat
lss
or
fimuls
ljmp
add
out
pop
add
push
push
adc
cs
fwait
sti
pushw
mov
push
mov
mov
mov
nop
jb
insb
inc
stos
or
jg
push
gs
pop
ja
push
fadd
sbb
nop
js
ret
mov
lods
loopne
push
cmp
add
out
into
jecxz
aam
inc
and
cmp
mov
je
movsl
xchg
mov
data16
mov
lods
mov
lret
imull
in
inc
push
pop
pop
add
mov
idiv
loop
loop
adc
sti
mov
jmp
stos
mov
fstps
nop
add
pop
dec
hlt
lret
lahf
push
xchg
bound
mov
sub
push
mov
cmp
adc
int
imul
loop
aad
test
sti
mov
fisttpl
sarb
and
scas
jns
jnp
mov
mov
mov
mov
idivb
adc
into
mov
xchg
inc
fs
lods
movsl
mov
push
add
push
pushf
dec
sub
test
cli
popf
cmp
ja
ds
std
mov
push
les
adcl
lock
movsb
fcmove
out
popa
shr
add
rorb
xchg
inc
pop
fcoms
adc
adc
push
enter
out
push
sti
jl
or
jmp
repz
loopne
dec
lock
mov
mov
jns
jno
jo
cwtl
or
mov
pop
adc
push
mov
sahf
test
jbe
push
and
sbb
xchg
mov
mov
mov
test
push
push
sub
iret
and
cmpsl
mov
insl
ja
inc
dec
scas
sub
mov
sbb
add
mov
popa
sbb
fwait
push
mov
sub
jae
pushf
sub
mov
adc
cmp
and
push
push
adc
stos
nop
mov
nop
cmpsl
shlb
push
in
js
add
xchg
inc
mov
es
add
rolb
pusha
inc
in
sub
aad
push
jmp
fdiv
cmp
mov
and
dec
jb
add
out
sbb
lcall
mov
or
jge
mov
call
das
repnz
push
sbb
jl
xchg
xchg
sub
daa
xchg
sub
pop
push
scas
adcb
cmp
rolb
aas
mov
dec
xor
sbb
dec
adc
ret
gs
adc
fistpll
mov
imul
vmovddup
jae
pop
mov
mov
dec
fs
mov
sub
sub
movsb
inc
cwtl
test
sub
jns
jne
aam
fcoms
iret
ror
hlt
in
and
and
filds
repnz
movsb
ret
stc
dec
sbb
cltd
lea
dec
pop
mov
jbe
and
aad
add
pop
cmpl
push
adc
pop
cltd
xchg
inc
xchg
push
mov
xchg
mov
movsb
add
repz
cmpsl
jmp
or
loopne
inc
or
adc
popf
sarb
lret
cwtl
xchg
out
jne
or
xchg
rcll
dec
mov
popf
pop
xchg
stos
cmpsl
stos
testl
cli
jmp
cmpsl
mov
loope
and
sbb
arpl
aad
cltd
sarl
jbe
push
dec
cmc
mov
clc
scas
test
inc
ss
test
bound
ficompl
pop
pop
sub
jg
test
in
lret
pop
dec
fimuls
add
stos
push
xchg
fbld
fwait
lret
inc
mov
mov
sbbb
xchg
mov
int
and
pcmpeqb
sub
xchg
add
je
sub
arpl
popa
icebp
pop
fidivrl
je
inc
cltd
adc
and
out
inc
mov
ss
xor
sub
sbb
icebp
scas
or
call
xchg
daa
fdivl
xlat
xor
push
mov
xchg
imul
mov
test
xchg
mov
in
jne
lock
imul
pop
pop
pop
cs
repz
inc
mov
out
imul
mov
xor
mov
pop
out
jge
fstpl
loop
in
sahf
cmova
sbb
fstpl
das
mov
dec
sbb
xlat
pop
lds
pop
mov
scas
dec
inc
and
jns
jl
mov
out
inc
lret
mov
push
cmp
mov
mov
sub
sub
jnp
push
jge
stos
cmpb
ljmp
mov
daa
cmc
ja
sbb
add
shll
jbe
pop
or
loope
mov
vpsubq
add
fdivs
cmp
icebp
xchg
sbb
lods
movsl
xchg
int
and
or
or
daa
sarb
out
scas
leave
jno
iret
add
and
xor
sbb
sub
inc
mov
mov
out
cmpsb
into
cmp
xchg
fsubrp
xor
xor
mov
cltd
adcl
das
jno
inc
sbb
out
ds
push
fnstsw
add
cltd
loope
push
push
movsl
negb
cltd
jmp
lock
sbb
add
cld
pop
popf
mov
inc
cltd
insl
cmp
or
rorl
pop
out
or
pop
out
nop
iret
xchg
jl
sbb
repz
int
xchg
or
cld
lret
mov
outsb
push
out
fmull
gs
cld
notb
aam
sahf
push
xchg
push
add
cmpsb
int
mov
fildll
test
cmp
pop
testb
jge
mov
adc
and
inc
fwait
and
addl
lods
insb
push
mov
test
add
test
sub
mov
and
sbb
xchg
cmp
inc
xor
cmc
repz
and
out
ss
sbb
mov
xor
push
cmpsl
adc
jo
adc
cmpsl
loope
imul
adc
add
push
sub
add
jae
jle
arpl
push
mov
or
cmp
mov
dec
cmp
push
rolb
rolb
add
cmpsb
movsb
icebp
cmp
bound
ficoms
mov
popf
cld
lock
fdivrp
jae
lods
cmpsl
subb
sub
cmpsb
rclb
in
jg
fisubrl
iret
push
xchg
push
cmp
sbb
jle
add
clc
inc
outsl
and
mov
mov
ljmp
fs
mov
lock
movsl
xchg
add
out
lea
pop
jge
push
lods
enter
dec
cmp
pop
mov
jle
in
js
xchg
arpl
idivl
dec
cwtl
jl
bound
mov
xor
cmp
mov
mov
mov
hlt
leave
inc
clc
xchg
adc
xor
subl
or
scas
jne
push
xchg
je
repnz
push
scas
xor
dec
xchg
shlb
add
addr16
fs
mov
inc
cld
and
data16
fdivl
xchg
and
insb
jne
xchg
jl
mov
data16
scas
repnz
add
pop
es
jno
test
or
neg
hlt
clc
add
std
out
fiaddl
lds
add
cmpsl
xchg
jo
jg
or
ret
sahf
out
invlpg
cmpsl
inc
xor
push
fs
and
push
out
jmp
xor
sub
jp
dec
shrb
fsts
testb
pop
xor
push
cmpsl
orb
daa
sub
int3
push
push
add
mov
cmp
lds
sti
pop
jns
adc
fcmovnu
cmp
xchg
orl
and
gs
mov
cld
sbb
xor
cmp
filds
and
leave
sbb
mov
pop
ret
or
xchg
cmp
mov
and
test
adc
and
sbb
arpl
mov
push
jmp
mov
out
jl
in
lea
adc
push
enter
pop
daa
cld
cld
dec
mov
pusha
es
pop
and
call
inc
hlt
add
mov
sbb
inc
outsl
adc
pusha
inc
push
mov
ret
mov
pop
and
push
or
ficoml
das
add
sub
add
pop
mov
dec
loop
adc
imul
push
rcrb
adc
icebp
inc
imul
inc
or
dec
mov
add
adc
mov
push
pop
arpl
add
sbb
push
in
sub
mov
mov
fldz
pop
add
xorb
fwait
mov
sub
popa
stos
lds
jl
ljmp
pop
push
iret
add
cmc
cltd
stc
push
or
adc
xchg
cmpsb
movsl
inc
xor
ljmp
es
push
xchg
in
mov
jnp
leave
sub
bnd
das
jb
push
rcl
push
in
xor
lea
adc
pusha
jne
aas
bound
sbb
add
and
mov
pop
or
sbb
mov
adc
pop
inc
add
pop
cld
cmp
mov
jg
jle
jge
test
push
jp
sbb
sbb
cmp
and
cmpsl
scas
icebp
mov
mov
icebp
stc
dec
fcompl
sub
popa
cld
les
xor
pop
mov
hlt
and
inc
jno
test
in
in
mov
push
sbb
cwtl
lea
add
in
lods
push
jbe
icebp
or
loop
add
mov
lods
adc
ja
mov
stos
push
and
ljmp
cmpsb
jae
lcall
inc
fs
sub
pusha
xor
jge
gs
cwtl
jge
adc
jae
push
and
inc
xor
push
loop
cmp
dec
mov
cmp
notb
fsubl
das
pop
and
mov
jge
pop
push
push
mov
repnz
hlt
jg
add
sub
jecxz
sbb
xchg
sbb
cli
pop
pop
mov
mov
sub
imul
shrb
mov
or
nop
outsl
inc
mov
jnp
out
push
ret
pop
bswap
sub
xchg
inc
test
cs
adc
inc
inc
in
je
int
push
add
xchg
sub
mov
not
jge
aam
gs
stos
loopne
pop
pop
repnz
cmp
ljmp
add
pop
sbb
cli
mov
fildll
mov
add
jnp
mov
mov
push
or
imul
xchg
inc
loopne,pt
push
jae
inc
jl
push
loop
outsb
pop
mov
push
push
rclb
cmp
mov
lret
or
sub
outsl
mov
jnp
or
xchg
in
push
fisttpl
mov
push
shl
movsb
fdivs
adc
leave
push
push
scas
dec
stos
cmc
aam
cmpsb
repz
pop
enter
out
enter
pop
subb
sbb
xor
test
cmp
sbb
mov
lods
movsb
jg
les
xchg
adc
xlat
das
jg
xor
inc
pop
mov
xlat
cmc
dec
ljmp
popf
ds
fnsave
and
inc
xchg
cmpsb
scas
cmc
out
movl
test
mov
lea
lods
mov
xchg
mov
out
or
jmp
pop
xlat
divl
sub
push
into
xchg
cmp
mov
subl
stos
push
pop
cmpsl
jno
or
jg
cld
fstpt
mov
out
push
mov
sbb
shrb
iret
in
mov
inc
lds
mov
xorl
in
xchg
aas
or
stc
call
inc
lret
ret
cmp
ja
mov
addl
insb
sbb
fscale
xchg
fwait
dec
addr16
loop
stos
lret
icebp
loope
test
or
mov
jbe
imul
icebp
sub
xor
push
adc
jae
mov
xor
dec
inc
cmpsb
push
add
inc
setl
iret
xlat
jo
xchg
into
inc
call
pop
orl
lock
fcmovnu
outsb
dec
fstpl
andl
decl
push
mov
dec
and
mov
xor
xor
xlat
sub
outsb
scas
mov
out
je
ja
iret
mov
fwait
dec
or
pop
pop
imul
stos
movsl
hlt
loope
es
cld
ret
shlb
insl
sub
add
cmp
ret
mov
jae
in
es
mov
dec
lret
lea
sbb
das
jne
cld
fiaddl
pushf
fnsave
ss
aas
adc
aas
dec
xor
sarb
test
pop
jne
call
gs
es
mov
into
inc
and
ljmp
in
or
loope
mov
jno
mov
sub
ficoml
out
movsl
push
xchg
stc
jge
mov
mov
cmp
scas
mov
lcall
ja
or
mov
push
dec
cmp
sahf
cmpsl
pop
add
hlt
incl
ror
test
and
sub
jg
cmp
test
inc
cmp
push
out
xor
mov
sub
dec
dec
cmp
in
shll
loope
orb
gs
and
push
dec
sub
jae
fiaddl
inc
mov
jnp
bound
cmp
xchg
cmp
es
add
mov
xchg
dec
push
out
mov
iret
movb
cmp
mov
mov
outsl
pop
mov
rol
fildl
bt
cmc
subb
aad
lret
jg
xchg
sub
xor
jl
imul
shlb
in
add
les
fwait
aaa
or
mov
shr
fs
jo
insb
xor
xchg
aam
out
push
sarb
cmpsb
xor
mov
sub
or
rcll
scas
mov
jl
addr16
ds
jae
pop
add
fidivl
mov
xchg
outsl
sbb
sbbb
xchg
into
mov
dec
loopne
mov
shlb
pusha
push
mov
cmpsb
popf
out
fs
mov
lahf
pop
out
insb
jns
pop
xlat
and
dec
dec
fstp
adc
jb
adc
inc
xchg
movsb
leave
scas
pop
popfw
roll
in
fs
push
cli
push
push
sub
or
js
jl
xor
inc
xchg
iret
and
mov
cltd
dec
add
loop
jmp
push
jnp
loopne
fwait
push
data16
loope
or
cmpsl
lahf
sahf
lods
stc
ja
adc
cvtps2pi
dec
push
test
rorl
xchg
jno
mov
inc
addr16
sahf
inc
cmp
rol
inc
sbb
fwait
cmp
adc
add
mov
les
lret
rolb
mov
lds
inc
push
sbb
les
sar
and
jo
lock
sub
push
xor
sbb
dec
xchg
ds
and
jl
call
push
nop
cmp
adc
jbe
xor
loope
jle
loope
xor
add
stc
loope
testl
mov
push
or
stc
outsb
inc
ror
jbe
push
mov
jl
add
dec
outsl
or
pop
pop
mov
mov
sbb
add
cli
mov
adc
add
arpl
lds
cltd
divl
xchg
xchg
pop
data16
jbe
fwait
or
mov
jbe,pn
jae
dec
adc
cmpsl
xchg
mov
sbb
lahf
ds
add
mov
negb
lret
push
xchg
sbb
jae
sahf
clc
sbbb
xchg
insb
cs
sub
pop
and
xor
sbb
jp
pushf
push
cmp
and
jo
aad
aaa
add
jae
jmp
xchg
lods
int
sbb
mov
mov
push
rcrl
fmull
xchg
dec
or
testb
out
or
pop
and
sub
inc
das
cmp
gs
xchg
mov
push
mov
je
and
cld
and
inc
leave
cmpsl
pop
call
push
xor
pop
ret
pop
sbb
lcall
movsl
cmp
addl
cli
pop
js
es
int
shlb
push
mov
dec
dec
add
mov
test
sub
pop
mov
push
dec
insb
lahf
into
shl
aad
aaa
stc
out
cwtl
addr16
push
adc
push
add
xchg
add
int3
xchg
sahf
divl
mov
lcall
je
mov
dec
sbb
xor
jp
sahf
push
sbb
jbe
ja
fisttps
cmp
sbb
sub
xchg
jnp
push
mov
cs
in
imul
es
enter
loope
mov
enter
fdivs
fnsave
shll
scas
pop
mov
pop
mov
sti
jae
fiaddl
sbb
dec
or
fmull
les
insl
mov
popf
jl
push
push
es
xchg
jg
stos
andl
sbb
repnz
dec
negb
rcrl
adcl
ljmp
cmp
pop
push
out
lahf
ljmp
pmaxub
sub
xor
daa
inc
popa
inc
ss
imul
or
mov
and
aam
push
out
out
jmp
mov
or
popf
iret
test
or
lea
icebp
sbb
mov
jmp
adc
lahf
cmp
mov
jns
dec
cli
or
sub
push
loope
mov
sbb
pop
push
pop
cmp
cmp
pop
sbb
cmp
push
adc
push
dec
mov
jbe
loope
push
out
pop
pop
js
push
stos
add
cmp
inc
orb
adc
mov
add
jl
and
mov
sahf
daa
fs
pop
imul
sbb
mov
push
push
ret
pop
dec
movsl
add
add
outsl
outsl
decl
mov
mov
pop
test
lock
mov
push
imul
dec
jecxz
rcl
pop
mov
add
call
lret
and
inc
inc
cld
aad
lock
mov
mov
mov
pop
das
aaa
add
jp
in
push
lods
scas
lret
mov
xchg
mov
dec
and
jg
inc
mov
pop
fcmovb
xchg
cltd
lcall
lret
shll
fidivl
imul
or
outsb
leave
mov
out
adc
and
jae
xor
mov
jo
leave
pop
mov
or
inc
loope
aam
adc
jmp
inc
lods
jg
or
nop
cmpb
lahf
mov
jmp
addb
call
xor
dec
jns
pop
fwait
add
iret
add
std
je
pop
and
dec
push
movsb
movsb
mov
mov
xorl
mov
sbb
pop
xchg
jns
cmpb
inc
jmp
into
mov
adc
mov
test
cld
mov
dec
ljmp
lock
xchg
xor
ds
push
fdivs
xlat
push
idivl
or
mov
cmp
out
dec
add
outsb
sti
adc
ret
and
sub
pusha
mov
and
dec
stos
dec
sub
ret
or
mov
add
loope
test
pop
xchg
movb
ja
test
loopne
iret
or
es
or
fldcw
push
cmp
aam
cmp
sbb
int
push
pusha
imul
mov
sub
push
fcoms
subb
nop
fsts
inc
dec
out
mov
pusha
std
adc
orb
push
fmull
aas
xchg
imul
mov
push
adcb
sbb
jns
in
lods
stos
pop
xchg
fldpi
leave
sbb
xor
mov
inc
cmc
sti
mov
cmpb
clc
and
nop
sbb
js
jp
sub
pop
cmp
pop
xor
leave
or
dec
maskmovq
mull
jne
sub
insb
cltd
movsl
pop
pop
mov
mov
cmp
insb
and
test
clc
and
aaa
js
mov
mov
addr16
out
enter
and
dec
xor
into
xchg
hlt
mov
int
repz
outsb
jb
das
cmpsl
in
push
sbb
movsb
inc
lret
add
jl
inc
jae
xchg
pop
adc
sbb
xlat
clc
outsb
dec
pop
sub
sbb
lret
add
pop
pusha
stc
dec
scas
sbb
mov
and
sahf
or
mov
sbb
jl
pop
std
dec
xchg
or
lea
fwait
xor
sbb
nopl
insl
cmc
rorb
pop
pop
addr16
stos
xor
das
inc
mov
fistpl
sar
push
adc
cwtl
ss
or
pushf
ror
pmullw
jg
push
pushf
out
dec
int
test
test
aam
adc
lret
jae
cmp
or
imul
add
pop
mov
mov
insb
call
pop
es
ficoml
mov
add
into
and
inc
or
ja
mov
je
dec
addl
scas
dec
push
cmp
sbb
sbb
movsb
push
dec
jns
dec
loope
mov
outsb
push
jge
stos
mov
fcmovne
addl
les
push
cld
or
xchg
icebp
xchg
mov
sahf
aam
lahf
pop
jmp
dec
inc
ret
push
pop
bound
movsb
jae
jge
out
int
aas
test
lock
sub
movsbl
fistpl
sub
push
push
cld
je
das
cmp
dec
shrb
into
repnz
push
or
pop
jle
mov
adc
lret
dec
mov
mov
imul
cltd
xchg
iret
notb
mov
adc
dec
jg
pop
dec
fcoml
inc
xchg
or
jb
nopl
addl
addl
dec
dec
insl
lcall
or
scas
and
mov
mov
es
add
imul
sbb
sarb
shrb
mov
popf
jl
sbb
inc
loopne
inc
mov
push
mov
arpl
jae
sbb
ror
ds
adc
push
fs
inc
sub
test
aas
pushf
and
or
xchg
sahf
ds
stos
xchg
aas
adc
jmp
sub
sub
mov
lcall
mov
xchg
adc
ret
cld
mov
mov
sti
loope
mov
test
fstp
add
pop
jne
mov
lret
test
popf
fwait
push
or
hlt
pop
fsubl
psubw
std
int
sub
mov
pop
jmp
pop
cmp
mov
addr16
mov
lds
inc
xchg
gs
mov
add
cmp
mov
sbb
imul
xchg
push
mov
in
icebp
stc
mov
cmp
jne
ds
stc
sbb
daa
inc
add
push
sub
fwait
test
push
mov
movsl
dec
mov
sbb
mov
xor
pusha
cmpsl
jne
dec
fsubr
lret
jle
inc
test
xor
xchg
out
jg
mov
insl
or
test
js
aas
sub
pop
dec
pop
mov
outsb
and
xor
dec
movl
rorb
sbb
pushf
outsl
fwait
mov
fadds
int3
icebp
lcall
push
mov
call
mov
mov
mov
or
arpl
xor
push
daa
test
enter
xchg
push
xor
ds
adc
jl
dec
clc
call
and
loope
ja
mov
or
mov
mov
es
xor
adc
sub
roll
adc
daa
mov
bound
sub
fisttpll
cltd
cmp
pop
or
xor
aam
xchg
dec
jmp
jg
push
mov
int3
push
sbb
mov
clc
and
cmp
je
das
es
lret
insb
push
inc
xchg
xchg
jge
xchg
ljmp
fcompl
sub
xor
ja
ss
ljmp
stos
sbb
and
in
or
jl
subb
cmp
jp
dec
loope
orb
add
and
lea
lret
lods
mov
repnz
repnz
dec
jmp
repnz
mov
hlt
xchg
push
push
xchg
jns
dec
clc
cltd
xchg
call
add
stos
ffree
push
add
jno
roll
xor
adc
pop
ficomps
addr16
arpl
xchg
shll
out
mov
iret
jmp
out
ret
cmc
jge
fdivl
cs
scas
fmuls
jno
lods
lret
shr
xchg
sbb
jns
rclb
sbb
lahf
aas
dec
aad
dec
pop
dec
dec
xor
or
out
or
loopne
call
inc
lods
pop
fdivs
inc
rorb
inc
mov
adc
pop
xchg
add
sub
sbb
mov
das
jno
push
enter
and
ja
sbb
push
fiaddl
fwait
xlat
inc
rcpps
shlb
idivb
sub
ret
pop
es
outsb
push
jmp
push
mov
mov
outsb
iret
pop
in
cmp
js
mov
adc
sub
into
jl
push
sbb
or
mov
mov
js
jo
xlat
cmp
jl
push
ja
fdivrp
lods
pop
and
jns
and
cmp
outsb
and
negl
bound
sarb
jns
sbb
sbb
or
in
out
pop
lret
xchg
xchg
cmp
std
add
mov
test
dec
mov
xchg
nop
mov
sbb
sahf
or
fsub
es
and
sbbb
repz
push
test
jl
push
fldl
cmp
fiaddl
or
cmp
mov
jns
lret
std
fs
cmp
sub
mov
std
push
in
fwait
xor
and
pop
push
mov
in
scas
test
push
in
sub
jmp
jbe
addr16
out
inc
ss
dec
cltd
add
push
or
pop
sti
pop
adc
mov
mov
push
flds
loope
jecxz
fldln2
add
stos
jmp
cmpsb
dec
push
mov
adc
scas
sbb
push
fwait
sarb
xor
xchg
lret
and
and
mov
add
enter
rolb
pop
jp
enter
jmp
jns
cmp
jne
out
stos
mov
sub
shrb
push
cmp
xchg
pop
sbbb
xchg
pop
pop
push
mov
pop
dec
mov
repz
push
int
mov
in
rorl
lret
aam
cwtl
mov
xchg
pop
fwait
in
cmp
stc
es
fsubl
jae
dec
push
jmp
flds
xchg
push
push
fidivrl
pusha
imul
pop
inc
scas
sbb
or
movsl
cli
mov
dec
push
aam
stc
mov
aam
jmp
add
pushf
sarb
lret
clc
mov
imul
cmp
mov
cmpsb
ret
push
jecxz
shll
shrb
mov
push
js
fwait
gs
imul
shrb
in
cmc
icebp
fsubl
ret
sub
sbb
cmp
shll
dec
xchg
bswap
pusha
xchg
inc
xchg
popf
popa
imul
sub
leave
movsb
and
mov
pusha
or
jne
dec
jo
into
add
fs
jmp
dec
and
mov
push
or
mov
fadds
mov
sub
loop
jg
pop
dec
push
test
mov
or
fsts
outsl
in
sbb
mov
sub
push
mov
lds
jp
pop
lods
xchg
fwait
mov
push
std
scas
sti
push
mov
mov
xchg
push
imul
mov
xor
test
popf
lock
dec
jb
fldl
inc
pop
sub
hlt
lock
movsb
bound
cmp
loope
inc
mov
pop
fcompl
sub
adc
cltd
lock
xor
jl
inc
jmp
cmpsb
test
pop
mulb
imul
mov
cmp
adc
insl
mov
push
mov
movsb
repz
or
dec
inc
hlt
or
mov
in
dec
arpl
call
or
push
xchg
push
add
fs
inc
jns
mov
jae
lret
pop
xlat
cmp
sbb
scas
adc
std
mov
lea
cmp
xor
out
or
adc
and
mov
fucomi
loopne
ret
mov
outsl
imul
xchg
xchg
test
xor
fneni(8087
mov
adc
mov
jp
clc
xor
mov
sbb
ret
add
test
je
xchg
cmpsl
jno
sbb
cs
popf
inc
rcrl
out
test
lds
sub
sarb
test
adc
push
mov
mov
push
sub
mov
cmc
stc
loope
fwait
mov
adc
int
xor
dec
mov
loop
push
dec
or
mov
arpl
or
arpl
sti
mov
out
mov
in
outsb
sub
or
adc
lcall
call
ja
jg
inc
mov
test
pusha
loop
xchg
adc
or
mov
jno
cltd
adc
cmp
sahf
mov
xchg
lahf
push
adc
cmp
jge
and
jg
xor
lods
mov
cmp
push
movb
xchg
lds
insb
adc
adc
addl
fbstp
pop
push
fwait
adc
pop
mov
in
lea
inc
lret
mov
cmp
mov
pop
and
adc
lock
test
fmull
xchg
pop
je
inc
push
or
stos
pushf
cwtl
stos
iret
jecxz
movsl
adc
pusha
js
iret
jnp
jecxz
outsl
push
dec
jmp
in
shr
xor
sti
jb
decb
hlt
adc
sub
push
mov
lods
ds
fstpl
mov
cltd
in
cmc
jne
outsb
into
scas
push
leave
lret
pop
mov
loop
cmpl
sbb
fwait
push
jno
lds
mov
jge
daa
hlt
sub
add
cwtl
adc
inc
lods
movsb
xor
test
leave
andl
cli
shl
enter
rcl
pop
adc
dec
jge
mov
add
mov
jb
lcall
cmp
sub
rcr
sub
mov
pop
pushf
fidivrs
pop
nop
cld
sbb
gs
lds
fnop
int
leave
out
dec
xor
sbb
cld
mov
lret
jns
push
add
mov
test
push
movsb
lcall
popf
je
cli
pop
sti
dec
and
stos
mov
fwait
xchg
in
sbbl
add
sub
and
xor
rol
imul
clc
xchg
add
cs
xchg
mov
lret
test
fsubrl
sarl
dec
mov
fcomi
sub
mov
and
in
mov
test
jns
and
insb
inc
adc
or
flds
pop
jne
xchg
aam
mov
dec
sbb
shlb
mov
push
mov
adc
or
xchg
jo
jg
lret
rcrl
sub
mov
xor
inc
push
cwtl
jp
int
jns
jnp
xchg
pop
sub
inc
jp
xchg
sub
js
xor
mov
sbb
and
pop
outsb
mov
xorb
fstps
scas
dec
mov
cmc
inc
sbb
push
lcall
mov
jo
pop
test
sti
adc
mov
mov
repz
push
cmpsb
lret
jns
add
or
jl
pop
cld
cmpsl
or
lock
mov
addr16
mov
mov
insb
test
out
pop
iret
push
push
jg
cmpsl
push
leave
ret
inc
push
sbb
sub
imul
cld
jne
adc
daa
or
mov
mov
push
xchg
xchg
repnz
xchg
jp
pop
xchg
pop
xor
mov
in
fwait
pop
rcl
ret
clc
mov
push
out
jbe
xchg
test
add
dec
pop
subb
push
add
pop
cld
ds
mov
pop
jb
popf
sbb
ret
xor
sbb
mov
pop
in
inc
mov
cmp
data16
pusha
pusha
push
call
adcl
andb
mov
sbb
arpl
adc
jp
aaa
das
xor
int
jnp
fxch
or
imul
or
out
das
cmp
pop
test
insl
repnz
mov
pusha
mov
aaa
cltd
daa
dec
lahf
and
push
add
or
jnp
fnstenv
mov
xor
mov
pop
pusha
pop
mov
out
mov
ret
dec
xchg
sbb
sbb
xor
mov
mov
shlb
out
xor
mov
outsl
pop
stos
or
push
adc
addr16
mov
out
loope
mov
mov
ret
cmp
std
mov
sub
jne
sbb
ror
fcmove
bound
pop
jo
lret
add
xchg
pushf
add
test
ret
ss
ret
adc
pop
insl
mov
repnz
imul
xchg
mov
clc
out
lods
mov
adc
hlt
inc
push
cmpl
ret
fiadds
ljmp
out
mov
push
stos
sub
test
sbb
xchg
mov
mov
jg
cwtl
xchg
cmp
add
hlt
push
cmp
xchg
inc
test
aad
xor
sub
cmc
pop
mov
bnd
aam
push
mov
int
lahf
stos
pop
iret
xor
lods
cmp
sub
arpl
and
leave
pop
cmp
insb
sbb
dec
cmpsl
fwait
maskmovq
idivl
xchg
mov
bound
and
shrl
sahf
cwtl
scas
or
xor
xchg
sti
mov
cwtl
jmp
outsb
mov
rcrb
dec
sbb
leave
in
pop
sbb
push
sub
xchg
dec
lds
inc
xor
sbb
add
fnstenv
fnsetpm(287
stos
rclb
loope
rcrl
stos
mov
cmp
adc
xchg
xchg
xor
movsb
push
mov
adc
in
push
mov
jmp
aad
int
loope
stos
pusha
aaa
jl
xchg
dec
adc
jbe
aaa
jmp
insl
loope
mov
xchg
shll
cmp
adc
cmpb
mov
push
mov
jo
cmpsl
xchg
xchg
mov
push
lea
jne
repz
jno
inc
test
xor
add
je
adc
mov
add
es
jl
dec
inc
adc
repz
or
ljmp
sbb
mov
in
ret
testl
fiadds
test
mov
mov
adc
leave
cmpsb
mov
fsubrl
out
push
inc
mov
lcall
cmp
fwait
lret
testb
mov
lcall
xor
push
inc
adc
xor
out
jo
xor
dec
pop
dec
andl
pop
pop
pushf
mov
stos
xor
inc
adcl
icebp
cmp
hlt
dec
insl
ds
test
xor
jl
push
or
mov
mov
xor
fsub
inc
fmuls
imul
jecxz
inc
out
pushw
jb
cmovae
ficoml
adc
fadds
lods
xchg
pushf
adc
repz
jge
iret
lret
push
push
mov
xchg
pop
iret
je
dec
fildl
stos
or
mov
into
pop
xor
inc
inc
jp
rcll
gs
iret
mov
mov
jae
lods
xorb
mov
test
xlat
jecxz
std
xchg
stos
jnp
icebp
pop
add
arpl
icebp
js
add
mov
stos
ljmp
cwtl
daa
into
mov
das
clc
inc
ds
dec
fcoms
shrb
lahf
sub
je
xlat
cmpsb
mov
fs
fnstcw
pop
imul
xlat
into
js
fs
popf
lods
cmp
out
out
repz
lds
jbe
sbb
mov
sti
push
mov
adc
add
mov
xchg
out
xchg
cs
loopne
push
outsl
stos
pop
mov
jg
mov
jo
in
outsl
aad
adc
xor
xor
mov
sbb
enter
js
lret
dec
sbb
in
cwtl
push
mov
fisubrl
mov
cmp
and
sbb
inc
mov
sub
imul
fstps
imull
lahf
out
mov
xlat
cwtl
test
sub
and
fisubrl
xor
movsl
imul
mov
push
xor
je
jg
jle
push
test
xor
or
test
sub
push
push
pop
push
inc
loope
das
sbb
sbb
or
shll
scas
test
mov
ss
imul
dec
xor
inc
pop
mov
cmp
jge
inc
pop
mov
jno
daa
adc
mov
rcrb
jl
rcrl
inc
cltd
mov
jecxz
popa
xchg
ja
test
pop
clc
mov
mov
lea
sbb
test
pop
push
ja
sub
cmp
jg
int3
mov
or
add
sub
divb
in
loop
popf
pusha
jne
push
scas
jge
iret
adc
jnp
add
pop
lock
sub
and
xchg
sub
add
push
jmp
dec
pop
and
mov
cmpsl
add
ds
inc
xor
push
lcall
pusha
inc
and
mov
or
or
mov
mov
pop
xchg
inc
scas
stos
addl
sbb
sahf
push
mov
rcrl
faddl
cmp
dec
add
in
cmp
into
cli
cmp
mov
call
fs
cmc
cmp
aas
ret
push
ret
xchg
in
addr16
sbb
frstor
mov
out
cli
aad
mov
inc
imul
andl
aam
lret
pop
mov
xchg
daa
cld
inc
lds
popf
mov
sahf
addb
andl
int
out
bound
into
jno
sbbl
sar
pop
enter
cmc
mov
cmp
add
adc
or
repnz
call
fsubl
loopne
fsubl
dec
mov
or
dec
jg
jno
in
movsl
nop
mov
orl
sub
lahf
es
jmp
lds
or
jno
lret
mov
or
pop
mov
outsl
enter
lahf
add
pop
lahf
lcall
xor
add
xchg
fwait
std
gs
sbb
jecxz
loop
cld
cwtl
mov
ljmp
mov
popf
mov
pop
xor
xor
push
jle
or
push
das
mov
push
std
mov
mov
iret
pop
cmp
ficoml
or
or
sti
jmp
push
pop
mov
fdivrp
or
dec
clc
cs
nop
mov
inc
push
mov
sbb
aam
pop
xor
xchg
imul
cld
mov
andw
dec
pop
push
or
out
in
and
inc
arpl
test
pop
add
pop
pop
cmpsl
mov
pop
cli
insl
pop
xor
sub
xor
push
mov
mov
fists
leave
cmp
das
mov
xor
sbb
movsb
shll
iret
inc
pop
shlb
and
mov
out
aas
cmp
sub
cld
sub
jp
sub
jmp
mov
xchg
cmc
les
sarl
sbb
shlb
shlb
push
jnp
cmp
stc
test
fadds
adc
mov
fcoml
xor
mov
xor
jno
ss
cmp
sub
push
push
orb
mov
sub
add
push
inc
scas
mov
sbb
push
loopne
jo
ret
js
cmp
std
outsl
mov
fldcw
mov
jns
fiadds
mov
or
movsl
inc
imull
lods
dec
push
jmp
cs
leave
in
imul
cmp
iret
mov
lret
sti
cmp
sti
fucomi
xor
add
jne
das
dec
dec
pushf
insb
nop
pop
shr
or
iret
jle
fsubrl
addr16
push
mov
mov
out
mov
mov
and
addr16
cmp
sti
mov
xchg
sub
pop
dec
push
inc
inc
lods
call
jge
sbbl
sub
je
outsb
outsl
out
fldcw
shll
scas
or
mov
out
nop
dec
add
cli
and
inc
jg
mov
mov
xchg
pop
leave
adc
mov
int
sub
lret
call
or
clc
and
or
sub
cmpsb
sahf
mov
inc
adc
cmp
pop
cmp
inc
jge
sub
outsb
notl
xchg
cmpsl
xchg
dec
mov
push
ljmp
std
jno
xor
xchg
fistpl
dec
jmp
mov
mov
lds
and
sub
add
and
fimuls
push
xchg
mov
mov
popf
movsb
lret
sbb
popf
pop
scas
rolb
mov
sbb
inc
or
fcoms
outsl
sub
pop
in
jnp
in
xor
and
push
int3
into
in
int
mov
insb
lods
lods
out
pop
and
out
pop
nop
xchg
imul
clc
jno
push
inc
inc
lcall
fcomip
jmp
mov
jl
jl
jbe
ficompl
add
gs
hlt
adc
popa
es
lahf
or
push
std
fisttps
dec
cmp
call
ljmp
jae
mov
fcomp
sub
insl
cltd
push
sub
aad
or
pop
mov
pop
das
jne
int3
jp
dec
dec
lods
cmp
xchg
adc
pusha
aad
sbb
cmp
add
or
pop
stc
stc
fdivrs
clc
dec
inc
dec
test
enter
icebp
xchg
test
xchg
scas
sub
cmp
insb
jo
mov
mov
mov
cwtl
xchg
jle
mov
es
mov
clc
loopne
dec
dec
pop
jbe
addr16
jmp
fcoms
daa
mov
dec
les
cli
pop
jae
insb
mov
mov
xchg
pop
lahf
sbb
lahf
daa
mov
push
or
icebp
mov
aam
aam
aam
cmc
inc
cltd
call
or
push
mov
cmp
push
imul
into
sub
lock
mov
ss
call
adc
lods
inc
inc
das
mov
int3
add
call
daa
add
lret
push
daa
mov
inc
jl
fdivl
enter
int3
stos
mov
lods
jp
ret
jl
add
inc
push
adc
out
mov
xlat
sub
fs
rorl
cmp
pop
insl
test
lret
sub
call
xchg
mov
add
orl
cmp
testb
push
mov
clc
test
icebp
mov
nop
adc
sub
mov
gs
ret
in
mov
inc
xchg
push
aam
xchg
ficoms
or
int3
jge
lret
xlat
mov
enter
cltd
xlat
push
xor
sbb
dec
or
in
dec
je
nop
jno
push
hlt
jp
or
lret
ljmp
sub
jae
outsl
out
push
push
les
and
mov
push
push
jp
xchg
mov
xorb
daa
movb
mov
push
test
call
dec
jmp
pop
mov
mov
inc
in
sti
dec
jae
aam
pop
adc
dec
fisttpl
cmpsb
mov
push
rorl
pop
jl
bound
cltd
jbe
jbe
sub
sub
into
js
scas
adc
imul
mov
pop
sbb
or
mov
xchg
mov
pop
movsl
pop
fdivr
inc
loop
fs
mov
mov
mov
adc
and
xorl
jecxz
aas
or
lret
mov
pushf
push
lock
pop
testb
adc
cmp
insb
sbb
inc
movsl
pop
jge
jbe
dec
cli
das
std
adc
das
xchg
movsb
mov
pop
fwait
repnz
cmp
leave
js
dec
mov
add
xchg
out
jne
std
aam
inc
adc
adc
jl
mov
mov
jne
loope
sbb
pop
xchg
mov
cmp
lahf
or
ljmp
negl
jnp
std
aam
mov
pop
mov
mov
out
xchg
mov
lds
sbb
push
test
dec
lods
sbb
push
jl
lcall
in
jmp
loop
mov
in
in
mov
mov
cmp
add
xchg
or
fisubrl
insb
inc
xchg
jl
sbbl
clc
clc
inc
or
and
adc
lods
cmp
loopne
movsb
jg
out
sub
out
mov
push
inc
arpl
mov
pusha
xlat
mov
out
inc
lcall
or
repnz
test
mov
lret
movups
ja
notb
bound
out
aaa
pop
push
cmp
not
neg
sbb
and
outsl
xchg
aad
leave
stos
push
or
ja
movsl
jbe
sub
out
repnz
jg
xchg
jg
pop
xlat
addr16
sub
mov
add
movsl
mov
cs
jle
inc
das
pop
push
and
sub
imul
xchg
mov
mov
mov
andl
push
xchg
adc
sti
sti
mov
mov
movsl
or
fdivrl
cld
cmp
pop
dec
push
es
out
or
xchg
in
or
psubsw
jmp
icebp
stos
fisubs
inc
xchg
jnp
stos
mov
and
cmp
gs
outsl
roll
orl
inc
inc
lods
rclb
ljmp
sub
aas
lods
adc
or
lock
cmc
add
in
cmc
sub
mov
xlat
xchg
mov
ss
rorl
pop
inc
cltd
mov
scas
push
fstpl
aam
nop
mov
stos
test
or
sbb
test
lahf
iret
mov
divl
fists
xlat
testl
loop
sbb
add
xor
bound
sti
mov
add
mov
jmp
test
add
rclb
ds
inc
testb
es
out
rcl
scas
mov
mov
pop
ja
insb
int3
mov
and
ljmp
movsl
adc
mov
mov
mov
into
jge
dec
inc
pop
js
mov
lcall
dec
sub
sub
inc
xchg
xor
icebp
dec
fisubrs
mov
in
mov
ljmp
std
ds
daa
mov
call
dec
fs
pushf
add
sub
jl
in
in
nop
test
pop
sbb
pop
pushf
xbegin
sbb
cmp
lock
pop
push
push
push
jp
loop
dec
std
adcb
push
add
xchg
pop
mov
mov
stos
lret
test
push
repnz
pop
fmull
ja
mov
xchg
lahf
jb
sub
mov
rcrb
adc
push
ljmp
and
push
sub
andb
outsb
xor
jne
xor
bound
mov
stos
inc
mov
adc
pushf
fidivrl
ljmp
call
xor
and
xchg
ret
stos
cmp
sbb
jg
fimuls
push
xor
cmpsb
sti
cli
fs
hlt
outsl
sub
lret
fbld
imul
inc
enter
jae
out
insb
dec
outsl
jo
in
movsl
popa
test
fnsave
xchg
lea
push
out
js
push
dec
sbbb
ds
sar
and
and
and
int3
daa
fwait
mov
add
faddl
jb
sub
jecxz
call
ja
xor
mov
fmul
pop
push
out
mull
fsubrs
xchg
mov
nop
mov
add
add
xor
aas
fnsave
mov
mov
and
out
adc
mov
repz
lock
sbb
sbb
stc
andl
push
pop
mov
stos
push
rcll
mov
imulb
xchg
movsw
leave
xor
iret
loope
sbb
push
addb
imul
sub
adc
cmpsb
neg
cltd
mov
jnp
fnstenv
in
shl
sub
outsl
cltd
add
fs
scas
mov
jae
cmp
inc
sbb
mov
add
mov
stos
adcb
sarb
xor
jae
insb
sarl
push
adc
inc
push
xor
push
in
stc
mov
leave
xchg
into
jp
pop
mov
arpl
and
stos
xlat
pop
mov
xchg
xor
mov
inc
mov
jge,pt
jns
mov
hlt
adc
in
fldl
inc
cmp
fnstenv
popf
movsb
dec
outsb
and
or
jecxz
add
sub
lret
push
lds
add
ret
imul
sbb
aaa
mov
xchg
mov
xchg
sbb
in
imul
fimuls
pop
pop
lcall
fcom
es
sbb
mov
shrb
in
push
cld
push
test
loopne,pt
ret
add
cld
xlat
enter
aas
fs
ljmp
mov
mov
mov
pushl
sub
dec
push
scas
sub
imul
mov
push
cmp
sbb
or
iret
cltd
shlb
xor
leave
fisubrs
fsubp
mov
arpl
test
sbb
popf
jp
mov
loope
dec
in
mov
cmp
or
or
mov
dec
lret
movsb
aad
jns
add
mov
mull
inc
into
mov
pop
add
test
jmp
cmpsl
movsb
out
xchg
mov
fadd
xor
xchg
sbb
cwtl
mov
lcall
data16
adc
clc
mov
xor
jg,pn
adc
test
xchg
xchg
fimull
mov
adc
pop
addr16
testb
cld
mov
xor
dec
outsb
rcr
in
enter
aad
push
leave
dec
dec
jl
push
pushf
mov
aad
rcrb
sbb
sbb
xchg
inc
xor
lcall
adc
incl
mov
mov
inc
sarb
movsl
nop
mov
push
inc
add
sbb
inc
mov
inc
jmp
push
rcrb
sub
mov
xor
fstl
push
rolb
xor
cmpl
sbb
repnz
dec
lds
adc
adc
xchg
push
js
mov
push
orl
cld
je,pn
ret
jns
movsl
mov
fwait
cmc
adc
push
stos
out
push
scas
jge
sbb
jl
cmp
cmp
nop
add
xchg
xchg
int
out
std
push
subl
mov
xchg
aad
mov
enter
mov
cmpsl
xchg
push
test
movl
cmc
das
and
popf
pop
fwait
jns
adc
sbb
adc
or
loopne
push
dec
xchg
sbb
hlt
xchg
mov
dec
sub
push
jno
out
mov
aas
fstpt
gs
scas
shrb
inc
mov
xor
cs
jg
add
adc
popf
jae
test
imul
lock
pop
xor
push
imul
divb
mov
add
test
leave
and
mov
sti
inc
xchg
aad
jmp
cmp
xchg
or
mov
inc
andl
xor
inc
jl
das
rorb
add
fdivr
loope
into
sbb
or
cmp
inc
lret
cmc
jno
cmp
orb
mov
shlb
mov
or
push
ret
adc
xchg
es
jle
mov
add
mov
jmp
or
movsl
clc
mov
enter
test
test
pop
iret
inc
gs
insb
call
aas
loope
inc
mov
jp
push
xchg
xor
lret
jge
xor
adc
insb
jno
sbb
pop
push
fisttpl
xchg
clc
xchg
out
in
fldl
dec
dec
or
scas
rorb
xor
xchg
fnstenv
and
imull
adcl
and
and
enter
loopne
repnz
shrl
pushf
inc
jb
add
inc
movsb
push
bound
stc
or
lods
out
xchg
out
es
xchg
or
sub
jmp
js
jle
sub
cwtl
lods
fcmovbe
push
pop
enter
cli
inc
xchg
cmp
pop
and
dec
mov
cwtl
push
addr16
stos
xlat
mov
mov
and
sub
test
hlt
repnz
mov
sbb
push
loop
push
hlt
or
out
fcoms
es
xor
scas
out
int
scas
push
negb
xchg
scas
adc
out
movl
data16
mov
sub
aad
sub
push
les
and
nop
pop
pop
mov
daa
repnz
push
mov
scas
scas
xchg
cmpsl
pushf
stc
jp
mov
stos
push
pop
cmc
pushf
and
sbb
mov
inc
in
xor
lods
adc
dec
mov
repz
jne
add
inc
mov
das
fldl
xchg
test
fdivl
divl
add
jns
xchg
adcb
mov
inc
add
xchg
mov
and
push
clc
lahf
int3
lret
sbb
adc
xor
mov
push
icebp
ljmp
daa
int3
and
fisttpll
cmp
movsl
or
jno
pushf
pop
int3
mov
mov
mov
or
pop
mov
push
sbb
xchg
mov
orb
xchg
roll
push
adc
pop
sbbb
push
mov
dec
loopne
popf
lea
mov
cs
test
shr
cmp
incb
movq
sbb
es
fcom
push
xor
vmwrite
mov
shll
stos
jo
dec
imul
iret
sub
sahf
or
roll
mov
xlat
lret
pop
lea
jg
mov
jo
loop
jb
sbb
pop
sub
pop
mov
jbe
dec
mov
js
push
fwait
into
pop
push
pusha
dec
inc
xor
mov
cmpsb
fnstenv
pop
sbb
orl
stos
fwait
out
xor
add
stos
push
pop
imul
jp
mov
mov
lods
xor
rclb
mov
fisttps
lret
pop
scas
shr
and
je
mov
outsb
mov
push
push
jae
mov
xchg
call
movsl
mov
cli
addb
mov
ficoms
pop
fdivrp
xchg
push
push
movsb
push
jno
sti
outsb
in
xchg
or
push
mov
aam
in
sbb
stc
lock
icebp
fmulp
adc
js
mov
jmp
mov
sbb
xor
cmp
aas
aad
in
sbb
nop
mov
mov
push
ret
outsl
pop
clc
data16
jno
jle
and
mov
jae
cli
loope
or
mov
fnstcw
xorb
or
pusha
push
adc
in
inc
jl
pop
pop
push
loop
or
jg
and
lcall
mov
push
rcr
popf
sbb
xor
jge
xor
push
pop
sub
dec
dec
dec
mov
mov
add
imul
mov
jno
pusha
push
int
jo
jmp
dec
mov
and
and
fstl
and
mov
or
cwtl
pop
imull
mov
pushf
mov
inc
pop
mov
adc
xchg
mov
orb
nop
mov
fdivl
pop
mov
push
jne
mov
in
cmpsl
mov
jne
sub
push
dec
lods
fwait
testl
pop
sahf
xor
sbb
cmp
xchg
int
push
and
lret
jp
pop
lods
arpl
pop
insl
stos
inc
cmpb
pop
mov
sub
cmp
les
leave
aas
sahf
loop
repz
and
aas
inc
addl
data16
mov
or
xchg
cmp
or
pop
dec
iret
fdivrs
mov
cmc
cmp
sub
cmp
adc
push
pop
dec
xchg
mov
dec
mov
pop
xor
dec
loopne
xor
es
xor
repnz
es
cs
cmpsl
sub
sar
dec
in
push
test
lock
push
stos
add
jmp
xlat
lods
mov
jmp
adc
mov
jb
std
iret
xor
iret
inc
fiaddl
pop
push
mov
inc
push
lret
ja
or
inc
dec
mov
gs
in
jmp
scas
xor
xchg
pusha
mov
dec
xchg
stos
mov
addb
jo
lret
jnp
jnp
mov
pop
xor
popa
or
lahf
dec
push
dec
xchg
cltd
xor
stc
leave
cs
cmpsb
adc
mov
inc
ja
int3
and
mov
iret
stos
dec
push
in
lcall
test
movsb
cmpsb
jmp
popf
popf
sub
or
fmul
out
loopne
dec
inc
cmp
enter
fsubl
mov
std
inc
push
jge
xchg
je
mull
xor
xchg
jne
sub
out
and
or
push
inc
add
jne
xchg
fsts
pop
xchg
and
mov
negl
jle
inc
fcomps
add
sub
das
js
jg
add
jmp
dec
insl
adc
sub
fnstcw
imul
mov
shl
cmp
out
lock
dec
dec
sbb
lret
add
adc
fwait
imul
inc
fs
mov
test
test
fistl
test
adc
cltd
lret
push
adc
and
loopne
pushf
loope
jbe
dec
cmp
test
jmp
xor
adc
loop
test
movsl
ss
adc
out
push
int3
imul
jno
push
jae
popa
je
pop
ds
sbbb
fidivs
repnz
jg
or
jae
dec
test
jl
mov
pop
push
test
push
aaa
cmpsb
sub
adc
dec
out
mov
cli
mov
push
inc
sub
adc
ljmp
adc
and
jg
jle
shl
pushf
insl
pop
xor
xchg
stc
mov
or
mov
pop
les
ss
dec
sub
xchg
add
data16
test
fsubr
lock
adc
sbb
inc
inc
and
pop
mov
out
lret
test
in
pushf
popa
imul
dec
fsubl
pop
xchg
aad
mov
ret
les
pop
jg
stos
mov
lods
pushf
mov
mov
add
ret
pop
sbb
inc
cwtl
lds
cmpl
data16
push
xor
out
or
fsubp
mov
pop
sub
xor
icebp
repz
jmp
xor
pop
iret
sub
mov
lret
repnz
mov
ret
mov
pop
int
into
or
pop
ljmp
cmpl
es
cltd
mov
jge
push
dec
pop
pop
dec
dec
lret
leave
xor
stos
dec
xor
mov
lret
adc
xchg
in
js
xchg
or
shll
pop
pop
cmp
test
pop
out
rcl
mov
jmp
push
in
xor
xor
push
imul
fxch
push
cmp
mov
or
inc
shlb
dec
mov
test
push
int3
mov
in
push
int3
pop
and
sub
cmpsl
cmp
sub
push
test
popf
das
and
push
sar
mov
fistl
add
test
ja
stc
adc
lds
daa
mov
cwtl
pop
jae
or
add
iret
xchg
and
add
sarl
lcall
xorb
in
fstpt
xorl
dec
push
test
and
cltd
sub
movq
mov
mov
movsb
adcl
xorb
push
rolb
ss
dec
mov
je
cmp
cmp
and
jg
mov
popf
push
outsl
mov
cmpsl
out
xor
clc
jl
mov
shll
notb
lcall
adc
adcb
push
inc
push
mov
rclb
nop
adc
int3
push
loopne
pop
negb
sbb
lcall
push
adc
scas
loopne
iret
dec
cmp
cltd
xchg
push
pop
addr16
int3
or
stos
sub
gs
or
addr16
pop
sbb
or
in
push
loope
mov
inc
xchg
fidivl
movb
sarb
inc
dec
mov
fidivs
sbb
jmp
das
sbb
pop
iret
inc
js
dec
lods
jle
cmp
pushf
fucomi
jg
fsubrs
xchg
negb
xchg
sbb
or
lods
sub
iret
jg
roll
jne
imul
add
dec
adc
es
jg
hlt
push
push
dec
lret
ss
fstpt
xor
sbb
test
jp
and
dec
jl
and
mov
cmpsl
pop
pushl
xchg
jmp
xchg
movsl
sbb
mov
in
dec
repz
imul
shl
cmp
push
jns
stos
push
xor
and
dec
fisubs
mov
push
jecxz
ja
enter
adc
out
movsl
jne
pop
sbb
mov
jns
inc
inc
xor
fcoml
xchg
inc
mov
stos
std
aad
cmp
daa
mov
add
inc
imulb
rcrl
pop
xor
xchg
cltd
jmp
addl
dec
ja
into
cli
or
inc
sbb
mov
cmp
pop
xchg
ljmp
mov
aas
mov
sub
mov
xlat
pushf
push
cltd
ficoms
mov
xlat
enter
inc
in
lds
inc
mov
cmp
addr16
xchg
xchg
lea
mov
scas
cwtl
jne
push
cmp
stc
ds
js
popa
mov
jmp
xlat
loopne
inc
pop
add
add
testl
adc
push
add
loope
xor
jp
cltd
mov
dec
xchg
out
hlt
adc
aaa
out
push
adc
xchg
inc
cmpsb
sbb
mov
pop
pop
roll
out
xor
mov
fdivrs
sub
scas
mov
mov
jae
xchg
mov
rorl
scas
pusha
push
push
mov
jecxz
inc
pusha
mov
mov
stos
jne
push
sbb
xor
or
cmpsl
or
inc
mov
cwtl
scas
cwtl
or
mov
lods
jp
add
xlat
push
nop
rolb
shll
xor
mov
push
pop
inc
pop
iret
roll
mov
sbb
sub
xor
fwait
mov
ret
fisubs
lods
pop
push
mov
fildl
es
add
scas
cmp
fbstp
cmpsb
jbe
dec
jmp
ds
jnp
push
int3
shlb
nop
xor
pop
push
adc
lcall
dec
mov
daa
data16
sub
sbb
cwtl
sahf
sbb
xchg
sub
dec
lock
fstps
cmp
and
ret
mov
les
test
push
lea
add
add
cmpsb
push
test
lcall
rolb
es
xlat
cmp
mov
mov
mov
addr16
push
loop
inc
orb
jns
sub
mov
lahf
adc
outsb
mov
loop
mov
scas
mull
mov
xor
adc
push
ret
clc
decl
adc
andb
push
stos
loope
jmp
mov
jnp
mov
sbb
pop
mov
jg
and
pusha
xchg
in
add
jno
imul
popa
dec
movsb
repz
mov
test
mov
pop
ret
xchg
std
inc
ret
call
or
mov
cmc
dec
stos
sub
loopne
jo
repnz
add
iret
jp
cmp
mov
pushf
lret
jle
lcall
xor
push
in
xchg
mov
mov
js
mov
out
pop
dec
roll
or
stc
inc
sbb
or
push
in
pop
int3
jbe
pop
xchg
ret
mov
mov
xchg
sbbb
push
add
cld
dec
mov
inc
test
lock
cwtl
divb
cmp
mov
filds
imul
lds
mov
pop
xchg
outsb
dec
call
or
push
imul
lret
xor
fsubrl
xchg
insb
sbb
xchg
stos
push
leave
jbe
jle
das
sahf
pop
arpl
pop
scas
cltd
rol
repz
imul
dec
loopne
mov
xor
roll
mov
out
stos
mov
mov
cwtl
inc
lret
adc
call
lds
in
or
xchg
je
das
jne
mov
adc
xchg
cwtl
sbbl
test
jecxz
aam
pushw
dec
push
aas
lret
pop
mov
add
sbb
out
push
repnz
imul
cmp
or
test
aad
lahf
jmp
push
lahf
xor
cmp
fsub
xor
out
in
pusha
lret
lods
fildl
call
pushl
loop
and
cs
fsubrs
stc
mov
in
push
xchg
add
mov
jmp
dec
sbb
scas
cmp
neg
lret
push
cli
mov
adc
orl
enter
cmp
xor
or
test
push
xchg
inc
sti
pop
dec
iret
push
lods
mov
pop
enter
mov
sbb
out
jp
movsl
mov
push
mov
and
adc
sahf
mov
dec
out
loope
mov
jb
sub
out
add
inc
scas
movsl
push
xlat
xor
outsb
pop
and
data16
cmp
inc
xchg
gs
jp
aam
out
in
lahf
pushf
push
cmp
mov
sub
lret
adc
sahf
nop
imul
fidivrl
cmp
das
mov
clc
inc
add
adc
cli
jae
dec
or
push
loop
daa
or
in
jnp
in
lods
addr16
xor
mov
dec
ret
pop
in
test
or
jmp
notl
fnsave
pop
les
out
hlt
out
ss
pop
mov
stc
xor
sti
cmp
pop
mov
dec
repnz
jbe
push
dec
add
cli
dec
cmpsb
xor
pop
inc
gs
and
push
rorl
pop
in
sbb
fs
mov
in
fnsave
mov
jcxz
loop
loope
lods
adc
aam
mov
lret
icebp
inc
pop
jp
addb
jg
add
cltd
mov
inc
adc
ljmp
and
rolb
rcrl
sub
pop
inc
pop
stos
ljmp
push
and
cmpsb
lahf
cmovne
inc
xchg
mov
out
sub
push
xchg
mov
ds
sti
inc
ja
andl
aad
xchg
mov
icebp
pop
mov
and
fs
fisubrl
xor
dec
fldt
imul
popa
xchg
les
and
mov
push
fdivp
int
stos
aam
cltd
popa
stc
or
xor
repz
ret
cli
imul
xchg
inc
mov
and
adc
aaa
pop
jne
mov
lock
jle
in
mov
pop
outsl
mov
adc
mov
in
dec
ret
xchg
cmp
xchg
test
lds
fimuls
repz
dec
mov
xchg
push
loopne
test
insb
sbb
addr16
lcall
pop
enter
aas
arpl
mov
sti
cli
cmc
mov
jmp
ds
xchg
or
rolb
mov
pop
test
jnp
push
adc
adcb
lods
mov
mov
cmp
jg
sbb
push
in
mov
xor
mov
enter
aaa
mov
cltd
mov
mov
or
addr16
sbb
ret
jb
adc
repnz
pop
mov
mov
aam
sbb
mov
mov
fmull
pushf
in
bound
xor
or
int3
sbb
add
out
cld
xor
bound
fidivl
xchg
test
jbe
in
dec
inc
pop
loopne
jo
stos
xor
pop
inc
xchg
lcall
add
outsl
lret
addb
or
cmpb
mov
sbb
sarb
xor
add
fiadds
call
adc
or
pop
sbb
mov
dec
and
mov
mov
adc
in
xor
jge
les
push
sbbb
mov
adc
popf
sbb
rclb
jge
ss
std
jmp
cmp
stos
je
mov
pop
mov
xchg
pop
fldenv
pshufw
sbb
pop
mov
adc
out
pop
mov
xchg
xchg
orb
push
fsubrl
dec
iret
dec
adc
or
mov
xchg
inc
ja
pop
sub
adc
shufps
imulb
mov
cmp
lret
pop
mov
out
push
xchg
jae
xorb
stos
fwait
adc
dec
pop
pushf
cmp
or
mov
pop
push
repz
mov
mov
fildll
mov
sub
int3
adc
addr16
es
mov
xor
push
sbb
inc
ds
aaa
push
jbe
mov
mov
mov
or
in
dec
cmp
scas
pop
ret
call
xor
add
or
xor
paddsw
jle
out
jae
push
and
mov
fcompl
and
sub
jmp
jmp
add
and
and
add
lret
scas
inc
mov
cmp
in
aaa
mov
in
fidivs
lret
idivw
xchg
rolb
dec
xor
sub
inc
ja
es
cltd
jno
xchg
es
mov
xor
jno
sbb
fcmovne
jp
pop
adc
lahf
rorb
adc
xchg
jne
fnstsw
inc
and
jb
pop
xor
fpatan
mov
iret
jo
and
jae
out
leave
fwait
int3
inc
shlb
mov
pusha
sub
stos
push
inc
and
sub
xchg
xchg
xor
sbb
jnp
xor
or
adc
out
mov
cmp
xor
subb
adc
or
push
push
sub
enter
push
sbb
pop
daa
rorb
add
mov
jge
js
divb
mov
lret
inc
leave
sub
lock
pop
push
dec
cmp
push
mov
fldl
ret
jge
add
mov
loope
xor
fiaddl
mov
pop
cmpsl
push
push
jp
mov
cld
stos
sub
mov
ja
dec
push
cmpl
add
outsb
cltd
xchg
mov
mov
fwait
sbb
fwait
fwait
xchg
inc
daa
push
movsb
std
or
loopne
xchg
outsl
xchg
nop
dec
jae
or
dec
xchg
jbe
dec
aas
xchg
js
mov
pushf
xchg
and
jns
mov
cmpsb
jne
sbbl
data16
mov
push
test
xchg
sbb
push
cmpsb
cmpsb
xchg
or
mov
aad
popf
push
hlt
inc
or
inc
int3
xchg
mov
call
add
jb
lods
nop
into
es
adc
ret
xor
mov
in
adc
xor
inc
pop
jbe
lret
jmp
ret
mov
insb
jge
cmp
das
in
sub
out
iret
inc
imul
fsubl
fnstsw
pop
cmpb
sahf
mov
out
lret
daa
mov
ds
jmp
out
adc
scas
sarl
xchg
and
ds
jno
subl
int3
push
sub
mov
mov
outsb
stos
xchg
jg
push
lret
mov
cs
cld
cmpsb
int
je
push
cs
push
andb
sub
sahf
scas
fistps
mov
xchg
xor
or
lea
cmp
inc
dec
add
in
jae
cmp
mov
sbbb
mov
iret
add
jo
bound
les
mov
push
es
mov
add
mov
shl
xchg
push
push
aaa
push
je
cld
mov
adc
les
addr16
imul
sub
repnz
sub
adc
and
mov
push
arpl
incl
lods
test
mov
jae
insb
push
jecxz
cmpsl
dec
xchg
repz
mov
shll
loopne
movsl
cmp
mov
pop
adc
jp
mov
mov
mov
loope
push
mov
mov
pop
pushf
arpl
and
jle
bound
ja,pt
inc
imul
cltd
aam
sbbb
ret
rep
xchg
mov
xor
aas
outsb
and
lahf
aam
aas
mov
jecxz
daa
mov
xor
mov
dec
jecxz
in
ror
jnp
add
addr16
pop
and
push
xor
fwait
adc
fnstsw
add
mov
mov
and
dec
insb
dec
fmulp
xchg
adc
or
es
mov
jle
mov
fs
sbb
xchg
pop
aam
dec
xchg
imul
mov
cld
mov
addl
ss
jle
sub
push
mov
in
sub
pop
imul
jbe
mov
iret
inc
inc
js
cmp
les
and
outsl
rorl
jecxz
jmp
out
ficoms
jge
aam
pop
js
dec
ja
movb
aaa
mov
test
pop
and
gs
movl
pop
jp
call
sbb
test
push
mov
inc
mov
in
addr16
rorb
inc
inc
test
push
jge
add
cs
inc
adc
cmp
xlat
and
pop
lret
mov
test
in
dec
pop
mov
pop
jae
les
lahf
push
arpl
fidivrl
jmp
adc
inc
in
dec
dec
mov
loop
cmp
orl
int3
dec
mov
je
das
ja
mov
jmp
push
jg
repz
std
pop
and
xchg
and
dec
call
xchg
in
je
push
mov
or
xchg
push
mov
jae
jbe
push
popa
xchg
xchg
dec
scas
pushf
jecxz
inc
jp
lods
and
xchg
pop
data16
mov
sahf
daa
inc
xchg
and
mov
adc
add
sbb
iret
ficoml
jae
push
sbbl
jmp
sarl
mov
adc
mov
jecxz
sub
adc
fsubrs
into
mov
xchg
aaa
roll
jg
adc
adc
loopne
fsubrs
and
sub
cwtl
jecxz
pop
lret
and
add
test
sub
or
xor
out
sahf
bound
leave
jne
sti
add
cmp
sub
xchg
mov
inc
into
loope
xchg
add
jg
jo
jmp
sarl
push
sub
sti
pop
cmc
and
stos
sahf
adc
push
pop
dec
or
out
mov
dec
aam
in
push
scas
jmp
stos
loop
fcmovbe
test
add
mov
xor
xchg
sahf
dec
push
mov
jp
pusha
roll
xchg
ja
cmpsl
int
mov
scas
aaa
mull
adc
xchg
pushf
adc
inc
gs
gs
inc
ja
inc
mov
sarl
pop
mov
out
or
jmp
inc
test
mov
and
push
adc
dec
xchg
std
addb
daa
ss
out
scas
pushf
es
pop
lock
jmp
stc
mov
ja
xor
mov
jae
popa
notl
test
das
test
jns
into
inc
push
sub
cmpsb
cmpsb
scas
cmp
lds
xchg
adc
push
xchg
popf
or
xor
hlt
xchg
pop
mov
fsubrl
inc
and
fdivr
add
mov
jmp
sahf
daa
sti
dec
inc
clc
and
xchg
sarl
adc
xlat
lods
sub
pop
lds
inc
daa
pop
sub
sbb
cld
dec
shrl
fwait
cmp
daa
shll
adc
iret
push
jl
mov
pop
rcr
out
or
decb
push
iret
xlat
ficoml
stc
jecxz
mov
xchg
jbe
jns
ja
dec
jb
xor
mov
lods
pop
repnz
fnstsw
cmp
daa
dec
clc
sysenter
inc
or
mov
mov
mov
mov
sbb
xor
aad
ja
cmp
push
lds
add
inc
jg
outsb
daa
inc
adc
adc
lods
mov
cmpsl
adc
mov
xacquire
fsubrl
test
dec
es
pop
push
stos
out
leave
repz
int3
mov
cmp
repnz
cltd
lds
jg
mov
arpl
inc
xor
ds
iret
bound
cltd
xchg
sbb
in
arpl
jle
push
push
lock
jecxz
outsb
xchg
test
inc
cmp
cmpsl
test
pushf
cmc
scas
subl
lcall
jnp
test
loope
mov
out
adc
xlat
or
lcall
inc
inc
test
dec
cmpsb
cwtl
xor
js
daa
data16
mov
ljmp
mov
std
lret
sbb
cli
pop
sti
dec
js
adcb
push
decl
insb
lods
shl
and
jmp
pop
stos
jne
sub
add
add
rolb
dec
cmp
mov
mov
cmc
add
adc
repz
cmp
addr16
mov
add
mov
or
cltd
push
inc
or
sbb
mov
inc
outsl
mov
add
sub
mov
in
push
mov
call
aaa
imul
jno
xchg
mov
and
jns
outsb
mov
lret
mov
leave
sub
out
aam
jne
or
add
and
data16
xchg
push
mov
lret
jle
sbb
mov
sbb
sbb
and
jg
call
inc
xchg
jb
orl
jmp
add
insb
mov
and
mov
ret
lea
push
pop
arpl
int3
inc
clc
pop
dec
push
cmp
fmuls
inc
pop
out
fwait
std
cmp
push
inc
lock
in
jae
mov
fs
aam
je
out
scas
or
movsb
shlb
inc
ljmp
repnz
int
inc
leave
push
push
pop
xchg
addb
inc
je
je
push
jecxz
add
dec
push
insl
sub
shl
adc
sub
test
inc
adc
pop
push
push
cmp
push
cmc
push
xchg
test
jl
adc
xor
nop
lock
mov
je
incb
bound
mov
and
add
insb
and
xchg
sub
jne
xchg
mov
mov
ja
cltd
jbe
adc
sbb
or
inc
cli
cltd
xchg
or
andl
cmp
mov
loop
adc
cli
lret
inc
and
fisttpl
jmp
jno
mov
and
jnp
mov
add
insl
enter
xchg
pop
push
and
stos
lds
scas
rep
cmpsb
push
in
sbb
std
or
je
lea
mov
and
jbe
add
and
mov
and
add
lock
sub
cmpsb
cli
out
repnz
not
fsts
test
cmc
xor
cmp
jno
inc
xor
shlb
mov
inc
jp
shlb
ds
jl
lcall
es
jmp
xchg
fwait
in
aad
push
dec
xor
daa
cs
inc
loop
movsl
add
inc
sub
mov
data16
mov
fldcw
adc
lods
pop
repnz
mov
repz
push
cli
repnz
fnstsw
add
jmp
repnz
adc
mov
sub
mov
mov
fldenv
cmp
mov
das
xlat
mov
jbe
test
and
rol
adc
lods
arpl
stos
aas
shl
ds
mov
or
pop
or
shlb
mov
inc
adc
cmp
outsl
add
cmpsb
or
pop
sub
mov
cmp
and
push
add
inc
dec
lret
scas
lods
mov
sub
xor
fs
xor
jle
xor
jno
sub
clc
mov
pop
jp
loopne
rorl
sbb
out
loopne
dec
gs
xchg
fadds
sbb
cltd
test
sub
mov
adc
inc
pop
push
inc
cmp
mov
mov
cmp
xchg
stc
pushf
jno
test
mov
pop
pop
sbb
stc
xor
test
inc
leave
test
sti
lds
or
data16
int
dec
inc
hlt
pop
xlat
sub
je
dec
lods
push
xor
mov
sbb
push
inc
cmp
push
xor
jg
mov
rorl
iret
xor
or
push
test
inc
les
idivb
pop
test
scas
cmp
mov
lret
add
aas
lods
sbb
cmpsl
or
arpl
clc
sahf
movsb
fidivs
jecxz
fprem
sub
or
lcall
loop
jg
pop
mov
ret
movsb
mov
jae
sub
test
sub
ss
push
shll
setno
clc
repz
cli
mov
inc
into
push
ja
mov
pop
js
into
pop
bound
ja
adc
in
inc
cli
les
mov
pusha
jnp
inc
in
int
stos
out
icebp
pushl
insl
jbe
out
push
cmpsl
test
outsl
mov
leave
or
jge
cmp
xor
xchg
pushf
xor
jle
inc
mov
es
xchg
loope
out
fimuls
mov
mov
in
mov
cltd
out
sub
inc
test
arpl
das
sbb
arpl
sbb
cmp
pop
xor
cmpsl
addb
pop
sbb
inc
jns
xchg
sarl
mov
cmp
outsb
or
test
inc
xor
int
aam
inc
push
xchg
push
mov
lds
sbb
stos
pop
faddl
nop
cld
or
sbb
bound
push
popa
cmc
push
popa
xchg
adcl
les
movntq
out
bound
pusha
sbb
arpl
lods
xchg
jnp
mov
ds
add
imul
dec
mov
fs
push
mov
cmp
das
sbb
in
push
pop
sbb
jne
idivl
jns
cmp
jle
fdivrl
push
fs
sti
hlt
mov
jp
mov
sub
dec
pop
xor
cmpsb
sub
inc
add
add
jp
pop
cmc
jnp
xchg
push
stos
ficompl
cmp
mov
xchg
and
cmp
clc
cmp
pop
testb
push
jnp
cld
aas
movsl
pop
sbb
lock
sar
sbb
or
lcall
xchg
xchg
sar
insl
mov
xchg
scas
push
ficoml
jb
ljmp
stc
mov
pop
data16
clc
adc
daa
cltd
testb
jmp
in
sbb
mov
inc
mov
sbb
inc
cwtl
repz
xor
jp
dec
push
shrb
insl
aad
sub
dec
div
inc
pop
dec
notl
loope
inc
xchg
push
jp
adc
mov
fs
mov
pop
inc
shll
jg
pushf
xchg
or
add
stos
jnp
lods
mov
lahf
iret
mov
sbb
mov
out
ret
ja
and
out
pop
pushf
mov
mov
out
outsl
or
mov
hlt
xlat
adc
dec
pop
pop
sbb
imul
dec
lods
mov
fadds
in
xor
lods
xchg
test
clc
inc
jno
xor
mov
adc
icebp
cmp
cmp
dec
out
cwtl
repz
sub
mov
in
lods
mov
mov
out
outsl
movhps
cltd
mov
sbb
std
xchg
push
pop
shrl
aad
sub
imull
fs
xor
mov
cli
stos
mov
sahf
lret
jo
and
lea
lds
out
jns
testb
adc
jle
test
nop
lea
ret
ja
and
xchg
sub
push
mov
or
outsb
mov
enter
inc
fwait
ljmp
clc
pop
pop
push
and
pop
popl
mulb
xchg
dec
add
jno
sub
lcall
leave
je
pop
sub
push
xor
jl
call
sub
push
jg
cmp
pop
stos
rolb
xchg
mov
ret
jl
icebp
movsl
fsubrl
fbstp
js
sbb
inc
jg
daa
lret
cmp
popf
shrl
push
mov
loopne
inc
lock
mov
mov
sbb
fcomps
leave
loope
jl
loope
cmpsb
mov
sub
cmp
sbb
cmpsl
add
out
dec
inc
in
push
pop
out
shll
dec
jbe
cs
jne
sbb
push
roll
sahf
xor
inc
and
or
push
ljmp
add
sbb
bound
outsb
push
jmp
hlt
in
pop
sbb
imul
pusha
cltd
cmp
jge
cmp
add
cwtl
imul
mov
xchg
fs
test
iret
or
aaa
xor
pop
jle
lcall
popf
sub
dec
outsb
xor
pop
xor
mov
mov
jno
je
sub
or
jle
or
inc
mov
dec
dec
jge
inc
xor
flds
add
mov
loope
or
insb
or
pop
repnz
clc
xchg
push
or
adc
pop
jbe
sbb
fcompl
nop
fistps
sbb
adc
push
in
jnp
mov
jb
inc
push
jbe
mov
movsb
mov
add
clc
leave
or
xchg
rolb
lods
or
jb
xchg
adc
jmp
aam
sub
subl
add
insb
call
rclb
xor
xchg
repnz
test
addb
sbb
addb
pop
push
xchg
pop
mov
lret
lock
lret
out
movsl
adc
jnp
shll
jmp
jnp
mov
roll
loope
clc
xor
sahf
or
outsb
fsts
jnp
adc
sbb
lds
mov
sub
fiadds
add
test
add
push
call
outsb
fmulp
push
push
pop
adc
in
adc
andb
jecxz
xchg
ss
icebp
call
dec
fadds
mov
cmp
xchg
lret
push
cmp
push
stos
add
lods
in
pop
or
rcll
add
shr
or
fildl
mov
pop
push
dec
lock
inc
push
mov
jno
dec
sub
inc
xor
jecxz
cmp
divb
adc
lods
fnstenv
xchg
aam
adc
popa
adc
mov
and
les
sbb
out
pop
and
mov
sub
fiaddl
insl
fs
add
inc
dec
jle
mov
jo
push
jbe
les
shr
push
push
jne
jne
lret
jne
inc
xchg
adc
es
xchg
sbbl
out
iret
xchg
push
push
xor
mov
pop
add
ret
push
ret
cmpsl
cmp
ret
adc
add
ror
jbe
jne
jno
xchg
imul
lret
inc
push
adc
ret
mov
out
push
fmull
sub
add
ret
push
out
rorb
inc
inc
add
sysret
mov
mov
jno
mov
test
mov
test
sbb
lock
popf
or
mov
rcll
lcall
hlt
mov
xchg
icebp
movsb
sbb
and
xchg
inc
add
xor
scas
rcrb
xlat
hlt
sbb
xchg
xchg
popf
aam
xor
adc
add
out
mov
fwait
adc
push
cmpl
adc
xchg
pop
sbb
mov
and
jbe
add
adc
push
sbb
jl
add
push
outsl
aam
fstl
int
sbb
and
mov
push
pop
pop
push
and
jne
outsl
ss
sbb
popa
cwtl
in
mov
aam
subb
dec
cmp
add
lret
pushf
sub
sti
and
jne
out
das
shll
jb
jbe
push
test
or
dec
add
xchg
loopne
pop
nop
xchg
pop
sbb
in
ret
inc
es
push
pop
pop
out
jecxz
xchg
pop
enter
loope
dec
int
xchg
cli
mov
jecxz
pushf
ficoms
test
push
xchg
sbb
pushw
xorb
hlt
je
pusha
add
or
or
cmpsb
pop
in
repz
insl
pop
test
maskmovq
mull
fimull
sub
jne
add
dec
push
inc
and
leave
pop
inc
inc
arpl
add
outsl
mov
popa
cwtl
in
mov
rclb
leave
dec
xlat
push
out
mov
stos
adc
loop
stos
jl
stos
jmp
and
andb
dec
inc
stos
or
jbe
add
adc
inc
sbb
jle
addr16
lods
imul
fstpl
push
xchg
cltd
inc
pop
sub
call
mov
sbb
pop
adc
int
js
es
sub
pop
test
pusha
mov
test
and
xor
bswap
mov
mov
xor
test
mov
in
call
mov
jge
idivb
dec
popf
mov
out
jmp
pop
shll
xchg
sti
lods
add
in
orb
jns
ret
in
and
jo
ss
into
call
mov
cmc
sub
std
inc
add
mov
daa
inc
sub
pop
adcb
mov
sbb
pop
xlat
dec
lea
inc
pop
inc
xor
out
cmpsb
xor
mov
add
not
pop
xchg
call
mov
ss
cmc
cmc
sub
jo
aas
lret
mov
jge
fcmovb
stc
inc
ljmp
cltd
lock
add
push
mov
ret
pop
add
xchg
sbb
push
jno
mov
scas
push
add
aam
imul
sbb
loopne
outsl
outsb
popf
pop
das
mov
mov
and
jl
mov
jbe
aad
out
aad
stos
cwtl
cltd
cwtl
mov
xchg
mov
jp
das
pop
mov
and
xchg
addb
jns
addb
sub
push
call
jae
leave
push
dec
gs
pop
jb
outsl
popf
sbb
mov
into
insb
shrl
add
jmp
iret
mov
enter
pop
mov
jae
mov
pop
popa
sbb
dec
shr
fstp
adc
inc
dec
stos
in
sub
add
out
jbe
stos
cmp
stos
aaa
nop
lods
test
push
inc
push
insl
add
test
mov
int3
jno
in
ja
sahf
insb
mov
jge,pt
sti
popa
or
push
jge
enter
stos
lds
mov
inc
cmc
jae
outsl
inc
aad
pop
jg
into
xor
ja
add
pop
loop
ret
xor
xchg
stc
mov
pop
rorl
std
and
lcall
xor
dec
pop
bound
cwtl
hlt
cli
scas
in
sub
pusha
out
sbb
lea
sub
out
fcoms
dec
rclb
pop
or
aam
lahf
mov
push
je
cmp
mov
das
pushf
sbb
fwait
push
jbe
les
jns
add
xchg
fucomip
ss
pop
sbb
mov
mov
mov
leave
lock
push
jl
or
in
lahf
aad
jno
or
mov
dec
and
sahf
fdiv
push
xchg
int
outsb
mov
mov
xor
pop
cmp
hlt
cltd
cmpsl
push
es
jl
nop
xchg
xchg
inc
cmp
push
in
ficomps
into
fwait
sbb
fwait
rorb
mov
xchg
jb
dec
into
mov
pop
in
call
pop
addr16
add
stos
notb
or
mov
mov
addps
pop
add
adc
mov
mov
leave
jg
inc
out
pop
inc
xor
adc
arpl
lock
clc
ret
xchg
sub
mov
sar
push
mov
fst
dec
adc
stos
push
or
into
fcomps
aas
test
or
jge
call
fwait
inc
cwtl
rolb
cmp
addb
mov
aam
jge
push
mov
movsb
ds
xlat
sbb
mov
adc
mov
lock
test
js
das
and
pop
daa
fidivrs
popf
add
add
jns
cltd
or
enter
xor
ljmp
inc
loop
stc
or
subb
mov
scas
ljmp
imul
push
ja
lds
aam
mov
adc
sbb
xchg
pop
aad
push
add
adc
add
xor
repnz
hlt
popf
loopne
call
mov
cmp
jbe
loope
xchg
adc
pop
pop
push
and
jae
in
pop
and
dec
xor
sub
adc
lea
cmp
xchg
cmc
inc
mov
jno
fdivs
lret
mov
xor
and
cs
push
clc
hlt
mov
and
lret
and
ds
scas
les
inc
notl
shrl
pop
mov
lock
jnp
sub
in
push
mov
jp
or
dec
jmp
popf
lods
das
mov
lock
mov
in
jl
xorb
je
jne
xchg
mov
and
pop
hlt
xchg
push
sub
ds
out
adc
inc
loopne
mov
jmp
inc
arpl
call
dec
sbb
ljmp
sbb
adc
dec
cmpsb
stos
cmp
inc
dec
add
sub
add
cmpsl
inc
and
mov
xchg
test
mov
pop
mov
movsb
pusha
adc
lcall
rorl
mov
ret
fidivl
js
test
lock
push
jae
andl
push
data16
dec
adc
mov
jp
push
data16
adc
sarb
xchg
add
jo
incb
xchg
ljmp
cltd
adc
inc
pop
repz
aam
pop
ds
aaa
cs
rol
jg
leave
sub
out
fwait
stos
push
xor
or
dec
inc
rolb
clc
fidivl
dec
out
adc
notl
dec
scas
cmp
push
mov
mov
inc
cwtl
aad
mov
xor
out
mov
out
mov
mov
mov
push
sbb
inc
imul
add
fbstp
jmp
inc
jl
rorb
nop
inc
xor
jno
jl
sti
clc
out
imul
outsb
loope
push
jmp
loop
sub
rorb
pop
daa
je
push
cmp
fistl
aam
lds
incl
cmp
or
lret
adc
addr16
mov
sub
ret
sbb
jl
arpl
pusha
push
je
out
jmp
mov
in
mov
dec
jne
adc
or
xor
rcrl
cmp
xor
shll
nop
aas
inc
xchg
xor
adc
stos
stc
dec
pop
jno
std
cld
arpl
imul
cmp
jbe
fiaddl
adc
int3
ljmp
push
clc
out
and
cli
dec
xchg
popf
add
loop
mov
lods
mov
fcmove
clc
push
insl
lock
pop
sbb
sub
lods
push
and
dec
sub
sahf
lret
mov
xchg
in
pop
pop
loope
and
orb
xchg
mov
test
orb
cmp
push
or
aad
in
ljmp
push
mov
rcl
aam
mov
lcall
in
mov
cltd
push
push
xchg
iret
lods
sub
and
lret
andl
test
out
repz
inc
sti
in
xchg
pop
mov
mov
mov
lea
push
out
outsl
cmpsb
inc
push
mov
push
cmpsl
ud0
mov
xchg
pop
dec
mov
and
outsb
and
jb
or
xor
mov
aad
add
sbb
xchg
or
js
sub
inc
les
sbb
stos
pminub
hlt
pop
fwait
adc
xchg
cmp
imul
outsl
mov
daa
fwait
mov
nop
imul
rcr
lods
data16
mov
cmp
into
dec
push
sarl
inc
sbb
sbb
mov
out
push
xchg
push
xor
cmp
inc
push
aas
pop
adcb
jns
test
pop
shrl
mov
scas
bound
add
ljmp
nop
xchg
sbb
sti
push
imul
pop
fldcw
rcr
mov
xorl
xor
xchg
sub
mov
insl
xor
mov
and
sub
test
aas
pop
jo
rclb
adc
mov
jmp
les
cmp
sbb
adc
push
mov
push
push
outsl
or
pop
pop
stc
pop
xchg
xchg
dec
mov
push
fwait
adc
pop
fistps
mov
in
cs
rol
push
repnz
addr16
test
sub
sti
or
ja
psubb
adc
aaa
leave
jg
scas
insl
jmp
out
dec
mov
inc
rorb
lret
icebp
inc
loopne
movsb
cmp
cmp
lcall
push
dec
lret
xchg
imul
lret
adc
dec
adc
cltd
leave
sbb
cmp
xor
mov
enter
mov
mov
pop
fstl
mov
test
jae
mov
cld
cs
inc
pop
test
std
sub
stc
pop
out
lock
mov
inc
nop
not
xlat
lea
mov
inc
data16
pushf
push
xor
inc
jns
mov
dec
sub
push
push
fsts
dec
sbbb
pop
or
cld
inc
fbld
jne
aam
mov
cltd
xchg
mov
ret
iret
xchg
into
cmp
das
inc
pop
xchg
outsb
xor
ds
pop
addr16
xor
ljmp
ljmp
out
xchg
sahf
addb
test
cmpsl
in
push
sbb
mov
sti
bound
sub
push
pop
pop
inc
lock
pop
xorb
pop
mov
lock
adcl
or
xchg
dec
mov
fucomip
fs
xchg
fwait
popf
sbb
test
movsl
sbb
std
jmp
xchg
loopne
cmp
push
loop
adc
sbb
inc
pop
push
iret
scas
jno
push
enter
and
das
divb
imul
jmp
arpl
cwtl
stos
mov
add
ret
std
sbb
xor
cwtl
sbb
jl
cli
dec
inc
xor
mov
sbb
shll
pop
cs
dec
add
out
fcmovu
cmp
push
mov
repnz
cmp
mov
dec
fimull
push
jp
popa
loopne
imul
std
popa
adc
mov
hlt
mov
icebp
adcb
fmuls
scas
shlb
in
rcr
arpl
stos
icebp
cmpsb
imul
cli
bnd
jo
push
or
sub
mov
fdivrs
loop
pusha
int3
mov
cwtl
xlat
jecxz
mov
mov
or
pop
mov
clc
lcall
cmp
scas
sarl
cmp
arpl
jl
jno
pop
inc
sbb
mov
xchg
adc
popa
divb
mov
fdivrp
iret
mov
jmp
mov
or
pop
jmp
push
mov
mov
orb
in
mov
ret
insl
mov
shl
cmp
jl,pt
cmp
push
pushf
mov
out
jle
popf
cmp
and
lret
out
sub
lds
test
sub
int3
je
ffreep
or
das
adc
ss
rcll
mov
les
pop
pop
add
mov
lahf
inc
jmp
rcrb
mov
insl
xor
adc
sub
xchg
ja
arpl
xchg
mov
add
or
dec
sbb
shl
mov
test
dec
imul
les
fs
pop
scas
fisttpll
or
adc
mov
pop
and
repnz
pop
test
cmp
pop
pop
outsb
jle
in
adc
adc
nop
jae
sbb
push
pop
jnp
rol
lahf
dec
stos
add
ret
cmp
inc
xlat
mov
push
adc
xchg
std
cltd
mov
lods
test
mov
dec
outsb
mov
mov
clc
inc
daa
mov
ret
pop
test
popf
rcrl
xchg
mov
pushf
scas
fdivl
pop
jmp
mov
push
je
and
aas
sub
cmpsl
dec
or
add
into
cmp
adc
mov
inc
je
imul
cli
in
inc
ret
cmp
adc
je
xchg
test
sti
imul
mov
hlt
or
pop
int3
sbb
movsl
cmp
adc
adc
nop
sub
pop
sbb
dec
mov
mov
shlb
or
inc
cmp
adc
push
push
loop
repz
cmp
xor
add
pop
inc
jne
mov
lock
cmp
adc
mov
jae
xor
push
inc
into
dec
xlat
mov
xchg
mov
or
mov
lock
inc
cmp
push
dec
rcll
jg
test
lret
aas
or
mov
mov
enter
int3
lcall
push
cs
xchg
inc
push
stos
adc
loopne
scas
mov
jp
mov
ret
fisubl
mov
cs
fninit
add
cld
sti
subb
push
pop
pop
dec
push
xchg
push
xchg
into
sbb
adc
mov
stos
xor
inc
mov
lds
jnp
es
arpl
fldcw
and
jecxz
cmp
out
daa
sbb
jnp
lods
mov
nop
test
iret
out
fsubl
in
es
mov
fisubrs
adc
lock
movsb
mov
mov
imul
jbe
xor
or
xchg
popf
inc
pop
mov
mov
cli
cmp
dec
mov
xchg
push
pushl
or
incb
out
inc
rol
push
pop
fimull
hlt
mov
xchg
fidivs
xlat
jne
mov
das
jo
lcall
pop
cltd
mov
lock
fstps
sbbl
cmp
arpl
push
dec
mov
inc
cmp
cmp
adc
cmp
mov
outsl
shlb
mov
xchg
sub
sarl
cld
xchg
je
loop
fisubrl
jl
sbb
sbb
add
mov
inc
mov
lcall
jnp
jnp
das
adc
adc
jl
pop
cmpsl
nop
lods
addb
mov
sarl
fs
lahf
push
loope
pop
jno
and
rcrl
jae
adc
cmp
roll
jecxz
movl
pushf
mov
mov
ja
cmp
rolb
ljmp
mov
dec
es
mov
push
jg
sbb
ljmp
loop
lret
pop
adc
fidivl
rclb
jmp
in
movsl
push
adc
mov
ret
lods
xor
std
jno
mov
mov
in
dec
adc
pushf
test
sbb
ja
mov
aas
shl
or
lods
nop
call
arpl
sub
iret
jb
jp
rorl
jl
pop
sub
jp
fwait
aam
es
insb
mov
bound
or
mov
test
ret
in
pop
or
in
sub
lods
add
cli
lods
push
pop
sub
fiadds
ss
sbb
adc
jmp
mov
adc
div
out
frstor
movsb
dec
movhps
idiv
adc
call
cmc
shlb
outsl
cmpsl
popf
xchg
dec
push
xchg
lret
xchg
jo
or
dec
mov
xchg
fidivrs
daa
fdivl
in
aas
call
adc
pop
rcr
and
push
lods
arpl
pop
movsl
jecxz
imul
cmp
xor
addr16
push
lcall
ss
out
inc
cmp
sbb
sbb
pop
dec
pop
ljmp
repz
sarb
psllq
jg
cs
sarl
stos
xor
ljmp
xchg
fs
push
fcoml
mov
clc
fnstsw
sbb
or
loope
mov
dec
rcr
jbe
jo
and
xor
mov
fbstp
mov
inc
sub
rcrb
adc
movsl
mov
aam
inc
adcl
fisttps
push
jbe
push
or
lret
jp
or
add
test
sarb
push
mov
stos
sbb
and
insb
rorb
stos
xor
in
inc
das
int
pop
out
lcall
mov
sub
jae
inc
enter
test
sub
dec
jp
sbb
or
sub
push
push
jbe
xchg
test
addr16
mov
lods
call
pop
push
adc
pop
dec
pusha
outsl
popf
out
loopne
inc
mov
mov
cmpb
adc
notb
mov
xor
loope
or
push
imul
decb
shlb
dec
mov
movsb
pop
lods
pop
repz
int
mov
imul
mov
rolb
jae
stc
xor
addl
jae
pop
mov
mov
push
mov
arpl
mov
cltd
xor
movsl
lahf
dec
ds
clc
sbb
add
jno
aas
push
or
dec
mov
in
mov
mov
xor
outsb
xor
mov
adc
adc
jl
jb
sbb
cs
mov
movl
into
test
push
std
xor
jnp
fdivr
sub
jg
sbb
jge
dec
faddl
out
leave
adc
sahf
aam
xchg
sarl
sarb
hlt
xor
sub
scas
aaa
push
repnz
jmp
test
push
sarb
mov
icebp
add
dec
sarb
push
iret
and
xchg
mov
inc
dec
cmp
pop
push
ss
jno
mov
inc
sbb
scas
inc
mov
popa
cmp
mov
lcall
pusha
sub
int3
in
ds
orl
inc
loopne
cmovne
lock
push
or
fwait
mov
fimuls
aad
test
mov
test
fdivl
mov
movsb
les
dec
mov
mov
xor
int
sbbb
mov
jnp
js
mov
test
daa
dec
loope
mov
jo
and
fwait
int3
dec
pop
pop
sub
jl
je
sarl
xor
pop
push
shll
mov
sub
test
or
lret
xchg
mov
xchg
mov
popa
or
fwait
mov
jb
mov
les
inc
addr16
mov
xlat
add
sub
push
fsts
fwait
mov
loopne
out
cltd
iret
or
jnp
shlb
das
mov
iret
cld
ss
and
dec
fdiv
xlat
pop
xchg
pop
adcb
cli
test
inc
mov
rcrl
sti
mov
add
mov
and
ret
sbb
fisttps
outsl
test
push
add
inc
rorb
sbb
sbb
mov
loopne
scas
das
inc
enter
inc
scas
jo
jg
ljmp
popa
push
jmp
mov
cli
inc
hlt
inc
sub
lock
sub
arpl
cli
mov
adc
lahf
pop
js
push
test
call
pop
sub
leave
pop
hlt
mov
pop
gs
adcl
pop
push
iret
cmpsb
lret
cltd
adc
dec
cmp
adc
icebp
pop
stos
jg
or
adc
hlt
push
cmp
xorl
push
aaa
loopne
movsl
scas
shll
fcmovu
mov
unpcklps
and
test
test
addb
je
aas
mov
mov
jecxz
pop
add
daa
sub
aam
xlat
mov
sbb
pop
lock
dec
loop
out
cmp
jmp
ret
nop
adc
ja
xchg
xchg
movsb
push
shlb
ret
iret
sbb
out
aas
lock
shll
iret
dec
rclb
stos
xchg
das
xor
xlat
in
or
fsubrl
cli
xchg
fcompl
insl
inc
xchg
loopne
test
sbb
stos
ret
jbe
sub
push
fs
sbb
sub
pop
mov
dec
add
rcrb
cmp
icebp
jns
push
add
roll
inc
push
stos
cwtl
ljmp
and
dec
push
mov
bound
cmp
scas
mov
xchg
aas
test
leave
mov
outsb
pushf
sarl
lds
cs
popa
sar
mov
gs
ja
dec
popfw
test
xchg
icebp
adc
dec
jbe
enter
stos
adc
lods
out
xor
aad
jmp
int3
pop
in
into
mov
xchg
pop
faddl
push
inc
in
mov
sbb
mov
pop
jo
cwtl
jle
in
push
dec
imul
int3
add
fucomi
test
mov
pop
jno
jmp
into
enter
xor
and
movsb
push
pop
shl
lret
inc
xor
and
cmc
push
or
es
or
adc
pop
lret
inc
inc
sarb
out
jo
outsb
cmp
add
mov
je
lret
loopne
sbb
or
movsb
inc
adc
decl
and
jb
arpl
dec
or
in
test
out
dec
imul
and
insl
mov
stos
movsl
nop
pop
pop
loope
out
lcall
cmp
add
cmp
lds
jcxz
add
jns
and
shll
push
push
jmp
out
pop
insb
cwtl
add
push
cld
and
sbb
sub
fidivs
xchg
movsl
in
pop
sbb
pop
and
std
pop
call
push
jb
lock
outsl
xor
push
dec
shrb
sbb
mov
push
xor
rolb
or
xchg
lods
lds
xor
inc
add
ret
push
pop
sar
cmp
sub
in
outsb
mul
imul
es
cmp
jl
test
hlt
jb
sub
pop
xor
imul
xor
xorb
lcall
jmp
pop
stos
out
imul
mov
fcmove
xchg
adc
mov
imul
inc
mov
xor
scas
or
jl
dec
data16
rcrb
ljmp
xchg
fcoms
xlat
icebp
add
adc
lock
test
mov
jo
aad
fadds
lods
lods
mov
cmp
sbb
ss
int3
push
xchg
xor
xor
adc
inc
stos
in
aad
dec
loope
jmp
jg
mov
adcl
inc
movb
push
push
cmp
cmc
add
mov
xchg
cmp
dec
loop
clc
and
lock
call
stos
dec
pop
adc
cli
insb
sbb
outsl
jp
rorb
and
dec
and
xor
inc
jecxz
pop
sbb
or
xchg
js
ficoml
xchg
mov
fwait
arpl
sub
jae
push
xor
pop
addr16
inc
inc
xchg
or
push
imul
or
sub
jno
bnd
clc
xchg
xlat
sbb
dec
pop
mov
pop
pop
jno
cmp
add
inc
dec
sbb
out
push
in
popf
jle
push
dec
outsl
test
adc
or
test
adcl
or
popa
push
cld
xor
imul
fwait
or
or
lret
inc
int
sub
das
xchg
push
dec
cmp
inc
dec
scas
ds
stos
sub
test
xor
add
or
nop
pop
das
cmp
sub
ror
mov
shll
and
push
test
addl
lock
int
addr16
aad
mov
out
loopne
test
fidivrs
rcrb
cmpsb
subb
sti
outsl
lret
mov
cmpsb
xchg
pop
ljmp
mov
pop
outsb
movsl
mov
cmp
into
loop
ja
xor
dec
out
js
adc
sub
sahf
fistl
push
addw
dec
pusha
dec
loopne
sbb
ret
out
sbb
lock
and
xchg
add
xor
adc
mov
into
aad
or
xchg
mov
js
int
and
aad
xchg
dec
sbb
jl
into
xor
mov
mulb
popa
jne
mov
push
sub
fists
pusha
cld
cmp
subb
insb
test
jne
movsb
push
jae
xlat
mov
fs
mov
das
dec
icebp
dec
push
inc
insb
leave
ljmp
cmp
mov
ljmp
push
aas
add
jnp
cmp
cmp
mov
ret
popf
in
inc
mov
inc
and
push
rorb
cli
stos
mov
mov
insl
fisubrl
rolb
dec
test
push
stos
dec
daa
sub
pop
fidivl
jp
adc
rcrl
push
xor
inc
mov
daa
jge
jl
xor
je
andl
incb
xchg
sub
dec
or
and
sbb
xorb
lret
push
push
lret
push
mov
aaa
mov
shrl
xlat
stos
stos
ret
pop
pop
mov
adc
inc
mov
pop
adc
sahf
mov
push
sub
inc
roll
and
lea
pop
addr16
inc
cltd
push
adc
add
bound
jb
ficomps
je
xor
jb
repnz
mov
ret
out
push
add
mov
or
xlat
in
push
xchg
inc
mov
xchg
cmp
push
or
pop
sub
insl
lcall
push
insb
fdivrs
mov
lret
lret
or
jae
hlt
jecxz
xchg
daa
fs
adc
sub
addr16
add
or
xlat
cmp
and
inc
adc
out
mov
sahf
mov
push
push
sbb
subb
xor
lods
jl
adc
mov
sbb
shrb
cli
ds
push
xor
mov
push
inc
add
mov
jg
or
xchg
fidivrs
fdivrp
or
fwait
xor
in
cld
xlat
mov
dec
in
pop
popa
fisubrs
in
scas
xchg
sub
sbb
fsubrs
cltd
xor
sti
sahf
lock
in
inc
cwtl
push
mov
mov
std
ret
cmp
lods
or
shlb
lods
push
fidivs
push
in
xchg
fldl
pop
in
jmp
push
cltd
push
lcall
inc
mov
mov
dec
aas
jl
xchg
aas
inc
frstor
mov
arpl
mov
mov
mov
cmc
je
lods
lea
jns
out
out
adc
jmp
test
mov
mov
dec
daa
nop
sti
xchg
xlat
jbe
jno
sbb
out
jbe
mov
cmp
out
popf
mov
into
cmpxchg
sub
fnstcw
sahf
xchg
nopl
mov
lock
clc
ss
je
fbld
mov
add
cli
inc
repz
shlb
leave
hlt
ss
sbb
mov
adc
loop
push
loop
mov
jmp
pop
mov
insl
sbb
adc
xchg
inc
push
lret
mov
lods
pop
add
test
add
dec
call
pop
push
test
cmp
sbb
cmp
cmpps
and
sbb
push
sahf
xorl
adc
lret
cmpsl
push
push
idivb
stos
push
mov
icebp
jmp
je
dec
and
gs
inc
or
mov
mov
fldcw
xchg
xor
jnp
es
inc
pop
mov
in
rcll
ficoms
pop
fptan
into
mov
push
orb
and
pop
xor
movsb
jne
push
les
stc
xor
pusha
dec
aad
rorb
and
mov
pop
xor
arpl
adcb
mov
lcall
push
sub
lds
sbb
cmp
in
inc
pop
push
dec
adc
stc
popf
nop
inc
xchg
sub
lret
adc
adc
xchg
xchg
jno
xchg
rclb
fdivr
and
or
mov
inc
jmp
mov
adc
pop
fs
cmpsl
pop
lock
push
icebp
lods
xchg
sbb
adc
sbb
adc
sub
xor
pop
adc
aam
lods
mov
mov
cltd
insl
imul
orb
into
ficompl
loopne
test
fs
adc
jns
mov
ds
mov
sub
cmp
add
cmp
mov
test
push
inc
mov
cld
stos
movsl
and
jbe
adc
data16
aas
dec
push
imul
mov
rcll
mov
dec
sti
xchg
sub
ret
and
dec
cli
mov
mov
ljmp
scas
dec
cmp
jp
movsl
jns
sbb
adc
sub
popa
popf
test
shlb
sti
jmp
out
mov
push
in
jnp,pn
outsl
iret
and
stos
scas
dec
cltd
fs
pop
xlat
out
out
les
es
sub
mov
xchg
fidivrs
adc
push
mov
ss
add
mov
xor
pop
int3
jne
inc
adc
je
popf
scas
cs
mov
xlat
cmp
push
ret
jecxz
lods
ret
sub
dec
movsb
addb
inc
shll
loop
jp
icebp
mov
dec
rcll
sahf
jno
mov
stc
test
fwait
sbb
lock
dec
fbld
outsb
cmp
sub
xor
loope
sbb
xor
inc
int3
jle
sub
out
mov
mov
dec
cmp
outsb
sbb
daa
sub
xchg
adc
jne
xlat
addb
dec
jp
or
pop
mov
je
jmp
jmp
nop
into
movsb
jbe
cmpsb
jmp
in
xchg
data16
mov
cmp
jp
mov
ret
jge
lea
loopne
push
and
jns
push
pop
not
data16
sub
mov
dec
fsubrp
jle,pn
sbb
jecxz
mov
add
adcl
ss
fucomi
pushf
leave
jl
or
jecxz
inc
and
mov
push
repz
jmp
dec
sub
std
pop
cld
hlt
mov
cwtl
push
outsb
mov
xchg
pop
cmpsl
addr16
xchg
xor
insb
mov
inc
les
test
mov
push
pop
inc
cli
sahf
adc
and
cmp
mov
das
jge
leave
lods
loope
fs
cmp
mov
push
icebp
jnp
jo
xchg
out
xchg
xchg
cmp
xor
inc
shrb
pop
mov
call
add
out
lea
push
xchg
xor
popa
jbe
xor
inc
subl
adc
mov
out
jo
push
cli
pop
inc
into
out
shl
call
mov
aaa
jae
es
jg
lahf
addl
fmul
or
mov
lds
adc
pop
dec
push
jge
cmp
loope
loopne
outsl
xchg
outsb
and
add
fneni(8087
out
add
mov
xlat
sub
xchg
scas
daa
push
shr
int
fnstsw
es
outsl
js
mov
lds
leave
mov
rorb
cltd
int3
imul
adc
pop
nop
ror
push
inc
mov
jp
test
inc
leave
subl
inc
pop
lcall
adc
ret
mov
and
cmp
add
lcall
mov
dec
adc
or
in
pusha
insl
add
call
xorl
je
add
scas
inc
jb
mov
or
xchg
pop
pop
or
mov
add
xchg
pop
nop
sbb
idiv
mov
out
or
cmp
mov
pushl
rolb
mov
adc
xchg
xchg
jae
in
xchg
pop
pop
loop
pop
in
mov
ljmp
pop
add
in
enter
xchg
inc
sbb
movsb
test
out
jmp
dec
mov
mov
dec
inc
lock
pop
inc
pop
faddl
stos
xchg
cs
sub
mov
push
subl
jle
lret
jg
or
adc
mov
or
in
mov
jno
pop
cmpsl
roll
jp
mov
test
cmp
lretw
bound
sbb
incb
pop
or
sbb
cltd
mov
push
jns
cmpsl
add
rol
mov
neg
fnsave
ret
pop
outsb
and
les
cwtl
adc
dec
fsubrs
imul
cwtl
shlb
icebp
stc
mov
fwait
notl
mov
ja
ret
mov
jbe
cmp
jecxz
pop
xchg
cld
inc
arpl
mov
incb
ds
sahf
es
mov
imul
xchg
ljmp
cmp
das
popl
jnp
sti
fstpt
cwtl
jle
mov
push
ds
xor
dec
dec
inc
stos
shr
fwait
push
fistl
pop
mov
adc
fisubrl
lods
and
sbb
flds
repz
lret
popa
and
add
xor
mov
lcall
mov
in
fnsave
cmpsb
sahf
arpl
cmpsl
dec
ret
mov
sbb
shll
loopne
fildl
jae
stos
aad
aad
push
jecxz
push
cwtl
jp
sbb
int3
lret
vsqrtss
out
or
dec
or
imul
push
adc
xchg
mov
xchg
pop
pusha
pop
push
test
pop
fsubs
jg
out
popf
pop
jg
enter
pop
popf
mov
insb
stos
das
sbb
mov
lods
sbb
aas
arpl
and
popa
push
xchg
or
xor
xchg
lods
out
cltd
mov
scas
pop
sub
in
shrb
cltd
xchg
cmp
scas
cli
push
sub
or
pop
sbb
outsb
test
dec
push
cld
and
dec
xor
fwait
jmp
add
stos
or
data16
addr16
popf
jle
popf
cld
jns
repz
jns
add
push
shll
popf
push
inc
and
inc
or
xchg
repz
mov
addb
lcall
loope
xchg
xchg
ljmp
adc
cmp
cmp
cs
sbb
inc
imul
leave
add
sahf
push
cmp
repz
in
mov
into
shll
fs
jbe
push
rclb
int3
cmc
adc
mov
ljmp
sub
stc
mov
push
sub
in
mov
jae
mov
cmp
clc
inc
mov
mov
add
xlat
lods
pop
add
loope
add
mov
mov
push
popf
add
sbb
outsb
dec
add
push
cmp
dec
jp
cltd
adc
xor
arpl
or
cmovs
sub
pop
daa
mov
mov
orl
shl
xchg
imul
aad
cmp
out
mov
xchg
xchg
lds
mov
shr
mov
cs
jae
mov
pop
sub
aas
sar
icebp
adc
cmp
cmpsb
jnp
add
push
jno
dec
xlat
dec
mov
and
xor
ljmp
xchg
mov
and
dec
dec
add
sar
inc
dec
aas
sbb
inc
push
pop
mov
sub
push
test
lahf
pop
sahf
lcall
int3
sahf
fistpl
movsb
out
lods
or
movsb
mov
xchg
in
sbb
and
xchg
bound
add
inc
dec
mov
mov
js
mov
subb
mov
xor
mov
inc
out
cld
mov
loope
stos
mov
stos
adc
mov
pop
and
adc
or
in
pop
insl
mov
test
push
push
aad
orb
lret
xchg
adc
mov
pop
mov
jge
inc
iret
aas
lcall
pop
xchg
pushf
dec
sbb
inc
lcall
mov
pop
in
or
jne
mov
addr16
cmpb
fsubrl
fiaddl
inc
sub
das
rcrl
fimull
test
inc
push
jmp
mov
or
mov
adc
fstpl
fcomi
test
gs
movsb
ror
mov
rolb
or
mov
mov
das
jge
into
xchg
icebp
repnz
xchg
sub
out
inc
push
pop
movsl
jno
push
std
pop
mov
mov
mov
loop
sub
enter
rol
adc
daa
adc
mov
rclb
mov
or
dec
loope
jo
movsb
push
sub
sbb
cmp
lret
cmpsb
xchg
je
ret
cmp
andl
test
mov
test
add
in
stos
test
xchg
xchg
sar
jl
mov
ja
fldenv
ljmp
les
dec
xchg
push
cli
push
popf
jecxz
out
mov
fwait
iret
mov
mov
cli
rolb
pop
xchg
fcomps
js
in
bound
dec
in
pop
jne
push
in
pop
or
dec
pop
dec
fsts
orb
bound
mov
imul
std
mov
add
mov
ret
or
push
mov
cmp
xchg
mov
les
push
xchg
das
fwait
inc
jb
mov
into
sahf
xchg
push
or
gs
and
lods
and
inc
cmp
fcompl
outsb
push
stos
pop
scas
push
add
mov
int3
loope
inc
ror
add
stos
jno
loop
je,pt
cmc
das
xchg
sti
adc
add
popf
out
insb
mov
icebp
pop
movsl
daa
inc
into
sub
push
adc
sbb
cmp
cmp
lea
jb
imul
repnz
sbb
lods
cmpsb
adc
push
or
mov
jg
repnz
lret
outsb
mov
pop
inc
es
cmp
pusha
out
in
fdiv
addr16
pusha
dec
cmpsb
jns
or
in
add
cmpsl
jns
cli
mov
and
in
in
sbb
fadd
pop
xchg
push
sub
xchg
btrl
adc
or
test
repz
cmc
testb
shll
aas
clc
fdivrl
push
pop
sbb
stos
fs
push
sub
cwtl
aad
popa
loopne
cmp
xchg
aas
mov
andb
mov
cld
pop
xor
add
cld
or
push
fadds
pop
popf
inc
jmp
mov
adc
lret
ljmp
out
mov
aas
jecxz
out
stos
js
mov
cmp
dec
aad
rorl
pop
out
pminsw
jp
dec
dec
daa
subl
adc
test
call
push
aaa
out
sbb
xchg
or
movsl
jp
addl
add
repz
jl
hlt
out
aad
aaa
cmpl
mov
jg
mov
inc
sub
pop
lods
pop
adcl
jo
decb
in
andb
mov
mov
repz
or
subb
popa
lahf
iret
mov
or
push
fistps
aaa
pop
lods
lods
sti
sbb
xchg
scas
xchg
jecxz
xchg
inc
adc
lcall
ljmp
fs
loopne
enter
pusha
repnz
addl
jle
fsubl
mov
jns
xchg
ds
add
rorb
adc
mov
xchg
or
cmpl
push
das
gs
loope
hlt
mov
sub
inc
int3
outsl
cmpsl
pop
cmp
fildll
or
pop
cmpsl
js
cmpsb
sbb
jl
jae
jl
adc
ljmp
jns
stos
push
gs
adc
out
mov
mov
ja
aaa
jl,pn
inc
call
in
adc
mov
add
out
sbb
mov
sub
cmpsb
test
sbb
stos
in
dec
imull
jne
ret
sbb
dec
int3
sbb
loopne
xor
pusha
adc
push
movsb
shrb
jecxz
sbb
fnstcw
jno
int3
cmp
cwtl
call
mov
lcall
imul
loope
sbb
mov
cmpsb
pop
shr
das
test
mov
lret
arpl
test
pusha
sbb
fidivrl
inc
xor
jo
out
dec
or
ljmp
inc
or
mov
dec
adc
andl
fdivrs
push
cmpsl
int3
leave
sub
shrl
cmp
test
pusha
outsb
mov
ljmp
mov
jno
sbb
sub
sbb
ljmp
mov
scas
les
push
lods
mov
cmp
popf
fsubs
les
mov
sbb
out
push
mov
test
cmp
mov
ja
sbb
cmp
rcrb
push
clc
hlt
mov
outsl
jge
lcall
push
xor
cmpsl
outsb
stos
sbb
or
mov
dec
rclb
fcompl
mov
add
jo
or
push
pop
in
aaa
mov
lods
mov
movsl
sti
sbb
mov
fstps
or
scas
test
push
jbe
test
stc
outsb
xchg
mov
pop
pop
int3
xchg
icebp
xchg
sub
push
mov
mov
cmp
jno
call
inc
push
and
or
inc
sub
sub
dec
icebp
pop
cmc
in
movb
mov
cwtl
jo
add
add
jno
std
xchg
shrb
cmc
iret
lret
aas
inc
outsl
xor
arpl
sub
dec
daa
push
lock
add
xchg
mov
jne
les
mov
push
xchg
out
sarb
ja
jg
ror
cmp
cwtl
xchg
xchg
push
or
or
adc
fdivrs
xor
and
roll
fldcw
inc
pushf
mov
loope
mov
insl
dec
imul
cmpsb
notl
loopne
add
xlat
push
sbb
test
cs
lahf
out
ljmp
mov
das
test
mov
negl
fidivs
mov
adc
cmpsb
cwtl
add
pop
xchg
sbbb
dec
out
das
mov
movsl
lock
daa
insl
std
fcoms
scas
pop
mov
pop
jmp
push
mov
and
pop
sti
ret
sbb
inc
mov
aam
stos
arpl
dec
pop
loopne
ret
cmpsb
arpl
std
dec
lcall
call
arpl
clc
mov
ret
lock
outsl
cltd
fcoms
jecxz
cmpsl
mov
sbbl
sub
and
mov
or
jnp
in
scas
enter
out
xchg
xlat
mov
lods
push
adc
cld
stos
roll
ss
jp
push
out
or
pop
insb
cmpsb
jb
test
xor
xchg
fs
icebp
mov
lods
pop
and
dec
cwtl
dec
dec
adc
sub
stos
pop
jle
jmp
loopne
lcall
dec
xchg
sbb
and
push
dec
push
push
mov
sbb
sub
sbb
jecxz
sbb
inc
dec
lds
sahf
mull
pushf
div
sub
mov
pop
sub
xor
xor
sbb
pop
lock
jp
ficoms
popf
push
push
mov
mov
es
arpl
ds
sbb
test
aaa
mov
fisubl
mov
shll
inc
xor
hlt
fldt
loopne
mov
pop
or
nop
je
mov
mov
mov
push
xor
dec
out
xchg
jg
jmp
sub
sub
jns
and
imul
mov
add
mov
xchg
adc
fmull
mov
dec
iret
outsb
jecxz
mov
push
inc
cmp
pushf
sub
in
leave
fisttpll
jmp
sbb
lcall
std
sti
push
dec
xchg
xchg
jecxz
sbb
cmp
mov
fisubl
test
daa
cmpsb
xor
inc
fdivl
mov
dec
inc
pop
push
or
leave
push
push
push
arpl
repz
xchg
sbb
fdiv
mov
pop
outsb
mov
sub
jnp
push
lret
fcmovnb
in
jns
mov
sarb
add
xor
and
and
out
insl
sub
push
jbe
and
std
jb
or
bsf
inc
xchg
and
mov
mov
or
fcompl
mull
jmp
outsl
cmpsl
push
push
lret
inc
xor
xchg
negb
cmp
loopne
mov
ss
cmp
arpl
mov
inc
movsb
int3
lahf
imul
sahf
push
adc
xor
jo
jnp
mov
push
sbb
imull
or
mov
jp
stos
call
adc
fsubrl
dec
mov
sbb
dec
or
lret
fwait
mov
jno
mov
test
dec
xlat
sub
ret
lret
pop
repnz
aad
cmc
stos
shl
mov
jnp
mov
sarl
roll
inc
fbstp
mov
xchg
sub
cmp
xchg
jmp
cmp
lret
and
jmp
mov
inc
cmp
adc
lds
push
das
dec
aas
test
or
cmp
sbb
lock
ror
mov
lahf
mov
fstps
enter
jb
out
xorl
movsb
mov
adc
sub
enter
out
in
into
jne
mov
push
dec
loopne
inc
mov
out
imul
mov
icebp
fisubrs
xchg
mov
test
out
jl
lock
mov
cmc
imul
xchg
cli
in
and
iret
in
inc
or
dec
bound
fildl
in
xlat
fsub
push
and
xlat
lcall
sbb
fldenv
adc
inc
pcmpeqw
repz
and
xor
jp
mov
adc
add
jnp
imul
rorl
jnp
test
imul
and
adc
cmp
in
inc
sbb
mov
pop
scas
xor
rolb
jbe
insl
fistpl
mov
jp
mov
or
imul
imul
cmp
pushf
and
fdivrl
loopne
daa
fisttpl
or
int3
test
incb
ja
sbb
jne
sti
mov
dec
lret
into
sbb
push
inc
inc
add
push
push
dec
push
or
mov
push
clc
cmp
outsb
data16
js
leave
and
ret
sahf
aad
mov
or
sbb
bound
rcrb
adc
test
rcr
inc
inc
mov
dec
sub
push
cli
ljmp
push
mov
mov
jns
lods
addl
sbb
orb
daa
xor
xor
dec
dec
mov
jg
add
lret
pop
jb
jmp
std
pop
or
dec
loope
cmp
dec
push
out
out
fwait
bound
cmp
in
sarl
inc
jae
popa
sub
loopne
jo
xchg
dec
push
ljmp
pushf
les
xchg
xor
fdivl
xchg
dec
or
test
js
mov
outsl
jl
cmp
pop
add
popl
fsubrp
leave
push
fildl
sahf
icebp
shll
dec
es
push
in
push
sub
xchg
mov
stc
jno
mov
sbbb
xchg
cli
xchg
dec
mov
adc
cli
dec
sub
sbb
loope
repz
sti
outsl
cli
or
add
das
add
stos
cmp
add
sbb
outsl
out
popf
je
fmuls
pop
ds
adc
out
xor
leave
add
and
inc
dec
inc
xor
rol
lock
dec
leave
push
inc
jge
lret
into
inc
test
adc
out
fcos
mov
sub
pop
xchg
inc
bound
cmp
jnp
cs
mov
xchg
jb
fmul
push
lods
fldenv
xchg
dec
jecxz
addb
dec
bound
jg
pop
and
daa
rol
sbb
pusha
pusha
in
mov
or
insl
jp
or
ficoms
adc
inc
xchg
inc
sbb
adc
out
and
es
es
addr16
test
add
loopne
cmpb
fwait
out
in
xor
cmpsl
stc
cmp
adc
adc
cmpb
cmp
sbb
mov
inc
sub
idivb
adc
jno
xor
vcvttps2dq
or
jp
mov
mov
cs
lods
mov
ss
mov
inc
xor
mulb
sub
testl
mov
mov
imul
out
push
xchg
pusha
in
stc
lds
std
loop
inc
pushf
aaa
xorw
gs
sub
les
cmp
dec
fsubrs
lock
or
sub
enter
call
adc
pushl
lods
xlat
xchg
cmp
arpl
fwait
sbb
jnp
outsl
pop
jecxz
add
mov
notb
sbb
ljmp
ret
xchg
aaa
das
push
pop
jl
push
xorl
ja
fldenv
fcoml
add
cld
xchg
ja
in
and
mov
in
outsl
invd
or
je
popa
and
pop
fadd
and
mov
daa
inc
not
adc
xlat
sbb
outsl
aaa
pop
test
icebp
and
adc
sbbl
into
addr16
insb
xor
xor
inc
and
aas
stos
push
xlat
mov
push
daa
mov
daa
inc
pop
push
call
daa
sub
adc
pop
imul
rol
loope
pushf
ret
mov
xchg
jp
dec
sarb
dec
dec
inc
mov
loopne
les
push
adc
ds
xor
in
lods
xor
pop
lock
mov
jno
jecxz
roll
lods
sbb
dec
fildl
jne
filds
xchg
fnstenv
faddl
and
dec
xchg
xchg
in
fwait
cmc
test
adc
ss
adc
adc
inc
popf
add
sbb
add
jl
xlat
pop
pop
in
xor
mov
in
push
scas
cs
jo
cmp
enter
pusha
leave
and
bound
xchg
fs
ds
leave
mov
inc
sbb
loop
shrl
notl
ffreep
sahf
sbb
clc
mov
ss
sub
and
xchg
sbb
pop
mov
jb
int
push
pop
imul
pop
pushf
mov
pop
pop
push
push
mov
lods
lods
imul
fnstcw
sub
or
scas
insl
aam
mov
push
inc
out
xor
adc
rolb
mov
fistpl
pop
pusha
pop
testl
fwait
xorl
sub
shlb
xchg
xchg
push
adcl
add
into
push
rcr
lret
leave
push
mov
dec
pusha
pop
inc
outsb
aad
jg
jnp
adc
jge
pop
xor
stos
iret
subb
xor
ds
adcl
and
cmp
sti
sub
lods
rcr
or
cmp
xor
mov
cmpsl
out
xlat
dec
fs
xor
jo
pop
xlat
call
mov
ret
push
cltd
xchg
sarb
leave
dec
inc
dec
das
push
mov
sub
aad
out
cwtl
xlat
sub
pop
ja
sbb
cmc
ret
push
jp
ficoml
jb
adc
cmp
lds
sbb
adc
fistpl
int
mov
cmp
stos
test
sbb
loope
mov
or
sub
adc
xchg
cmp
add
dec
or
cmp
adc
adc
push
test
push
xchg
mov
pop
push
movsl
ret
ret
fnstsw
fscale
xchg
ret
fcmovne
sub
or
xchg
adc
push
inc
add
das
sub
insl
cmp
inc
dec
lods
iret
sahf
lret
mov
enter
mov
mov
aam
idivl
scas
xor
and
out
insb
das
xchg
sbb
test
cs
dec
push
repz
mov
test
fdivs
mov
or
js
adc
ljmp
jbe
add
out
push
cli
lea
dec
dec
cmp
sub
fbstp
std
addr16
dec
cmpsb
xlat
mov
js
mov
mov
cmp
popf
push
sti
imulb
sub
push
es
popf
out
add
cltd
pop
adc
xchg
and
xchg
or
je
stos
data16
out
mov
das
cmp
lret
fs
in
pop
cmpsl
shl
sbb
dec
cld
mov
mov
mov
pop
movl
nop
mov
lock
lds
popf
jle
and
out
scas
push
push
jb
rol
push
pop
lret
adc
push
rolb
jge
fs
andb
mov
xlat
sahf
sub
arpl
aad
dec
lret
mov
add
rclb
mulb
call
test
call
inc
or
ljmp
xchg
add
stos
insl
push
hlt
mov
sbb
jno
clc
setae
mov
mov
inc
push
or
scas
aad
mov
cmp
xchg
pop
pop
ficoml
sub
gs
jmp
lahf
jnp
mov
popa
cmp
mov
dec
shr
mov
xor
cmp
cmp
fadds
in
adc
cmp
scas
ljmp
lds
es
xchg
mov
xchg
ret
lcall
sub
push
dec
cmp
and
xchg
push
inc
xlat
aam
push
adc
ret
and
push
nop
popa
pop
fldenv
mov
ret
pop
lods
cld
movsl
mov
and
out
and
inc
xor
sub
dec
or
add
xchg
shll
pop
into
cltd
jae
shlb
das
in
dec
sbb
insl
hlt
lock
xchg
insl
js
mov
shlb
dec
cmp
or
jl
in
jno
sbb
adc
fiaddl
idiv
push
repz
pop
inc
mov
xchg
mov
fimuls
rcll
xor
lods
std
fists
shlb
push
mov
push
test
sub
adcl
fadd
pusha
cli
push
mov
or
jl
mov
mov
lock
loop
pusha
push
dec
jle
mov
das
fimull
xchg
scas
xor
outsl
lret
rcr
and
es
pushf
jl
fcompl
mov
lea
clc
cs
sti
xchg
lret
or
push
push
test
adc
adc
sub
les
bound
cmpsb
hlt
std
sub
push
jl
fcompp
es
out
pop
add
inc
shrb
roll
int3
cmp
sub
dec
scas
push
mov
lods
mov
push
jecxz
aam
out
dec
mov
negb
lcall
mov
std
inc
push
push
inc
mov
and
adcl
inc
aam
lret
push
dec
jne
push
repz
dec
lret
clc
in
sub
push
mov
pop
xchg
pop
and
adc
pop
fbld
imul
sub
push
adc
xchg
pop
xlat
pop
cli
adcb
xor
push
jmp
sub
cmpsl
cmp
popf
inc
test
jno
stc
enter
mov
clc
dec
imul
sbb
xor
add
movsb
pusha
mov
adc
push
stos
jns
add
iret
dec
inc
repz
jnp
fwait
add
jo
dec
mov
xchg
sahf
cmp
clc
rolb
xchg
mov
push
sti
das
sub
xchg
xchg
insb
mov
loope
adc
mov
inc
insl
sbb
adc
cmp
ljmp
cltd
xchg
out
mov
mov
cmpsl
into
aaa
add
mov
xchg
subb
xchg
lods
push
dec
jb
pop
test
push
mov
jne
pop
xchg
jae
push
xchg
es
add
xchg
sahf
mov
or
out
jge
push
outsb
pop
push
cmp
mov
popa
fstpt
repnz
call
or
insb
mov
leave
xchg
adcl
dec
xor
flds
push
xchg
repz
ret
xchg
int
sbb
movsb
jge
andl
add
sub
mov
insb
mov
loope
scas
jg
fstpl
ja
and
pop
add
notl
push
cmovs
inc
out
mov
cmp
movsl
adc
cltd
out
lods
in
xor
xchg
xor
sbb
push
or
xchg
gs
jg
aas
pop
in
cmp
in
sbb
scas
out
or
insl
and
out
sub
arpl
test
lret
sbb
mov
in
adc
stc
mov
lock
xor
add
jecxz
jnp
call
jmp
mov
or
adc
jge
cmp
ja
sub
push
test
sbb
xchg
fbld
sub
jb
mov
sub
xchg
test
test
in
sbb
fiaddl
push
dec
pop
cwtl
or
jne
xchg
ucomiss
lcall
mov
gs
inc
ficomps
ss
popa
rorl
in
aaa
js
dec
add
sub
cmp
jb
add
ss
inc
dec
pop
add
gs
in
dec
testl
and
sub
or
lock
in
clc
imul
mov
mov
xlat
out
cmp
pop
roll
xchg
or
push
jbe
sbb
xchg
jb
rcrb
outsl
jne
ror
pop
lret
pop
xchg
add
int
int3
pushw
xchg
dec
adc
out
xor
ljmp
lret
imul
cmpsl
stc
mov
jg
push
dec
pop
jae
pop
sti
jne
push
add
adc
fxch
and
imul
sbb
ljmp
jae
sub
inc
fisubrl
and
in
dec
hlt
lock
xchg
ret
cmp
bound
pop
stos
cli
bound
lahf
test
sub
movsl
movsb
dec
lods
add
and
lods
call
xchg
mov
xchg
or
pop
xor
mov
sub
or
shl
mov
pop
mov
sbb
movsl
adc
ficoms
movsb
fmull
push
addr16
mov
bound
inc
xorl
fbld
jmp
movsb
lret
popf
add
push
cs
sub
ja
rcl
call
add
mov
and
jecxz
shl
dec
dec
aad
dec
add
pop
mov
sub
push
repnz
pop
pop
iret
clc
lret
mov
cmp
loope
add
lcall
outsb
sbbl
aas
repz
dec
nop
stos
xor
pop
dec
cmpsl
or
pop
mov
mov
xchg
repnz
sbb
imul
cmp
les
mov
mov
pop
push
mov
inc
test
and
push
test
idivl
call
mov
mov
sub
inc
test
mov
rcrb
mov
cmpsb
adc
imul
adc
or
sbb
cmpb
inc
pop
clc
inc
push
mov
and
push
mov
stos
cmpsb
pusha
js
test
add
pop
lret
out
sarb
adc
jmp
movsb
test
pop
jns
outsb
cmpsl
add
push
dec
mov
test
or
inc
cmp
shl
push
xchg
cmpsb
pop
dec
aad
ss
movsb
movsl
cmp
or
sahf
clc
scas
sbb
mov
lret
ds
subb
dec
push
jno
pop
lods
pop
mov
popf
aaa
es
and
sbb
lcall
push
mov
test
gs
inc
ficoml
mov
pop
adc
push
and
out
lock
lret
out
xlat
fldcw
out
pop
repz
addr16
out
dec
cmp
lods
jmp
xchg
inc
xor
shl
or
add
scas
lret
clc
sahf
call
pop
or
add
pop
push
lods
sub
pop
push
xor
push
and
mov
mov
adc
cs
mov
xlat
jle
icebp
dec
jns
xor
dec
inc
mov
popf
sbb
scas
xchg
pop
ret
mov
xchg
inc
xor
push
add
xchg
push
xlat
pop
mov
popa
cli
lret
pop
stos
movsb
xor
and
sbbb
and
cli
insb
fcoml
mov
inc
sub
fnstenv
xchg
sbb
rolb
lahf
enter
push
lret
push
push
clc
add
push
xor
push
pop
xchg
lock
rcl
dec
mov
or
sub
push
mov
int3
ret
pop
and
cmp
psubusb
inc
call
xor
in
mov
fstps
pop
mov
jg
cli
mov
imul
push
xchg
jge
fisubl
jmp
stos
xchg
xor
fcmovne
addb
add
jno
fldenv
daa
fisubl
adc
out
jbe
sahf
aas
jae
stc
xor
inc
sbb
dec
fiaddl
mov
outsl
inc
jmp
xchg
sbb
push
sub
mov
add
xor
lret
mov
adc
mov
cmp
mov
push
jge
push
and
mov
pop
jnp
xchg
fsubs
inc
es
inc
outsl
nop
out
dec
and
jecxz
mov
jge
push
push
xor
ret
and
faddp
fisubrl
call
sti
xchg
pop
mov
jecxz
sti
int
scas
and
push
enter
imul
mov
cmp
das
addr16
and
xchg
inc
xor
stos
add
adc
fwait
or
les
fidivs
in
sbb
jb
xor
sbb
test
test
add
imul
fsubrl
es
push
push
jnp
xor
lcall
cmp
scas
fistl
in
pop
into
xchg
or
jb
jp
mov
sbb
lds
les
call
rcrl
pop
jb
xor
icebp
cwtl
xchg
add
scas
test
xchg
pop
loopne
sahf
xor
xor
jb
lea
subl
and
mov
adc
dec
sahf
and
mov
stos
out
mov
inc
inc
jo
mov
stc
push
or
mov
hlt
push
nop
dec
push
adc
xchg
cmp
das
movsb
jl
or
roll
mov
fsubs
and
jae
sub
jmp
dec
pushf
testb
sbb
out
pop
mov
sarb
ds
adc
xlat
cmpsb
pop
dec
int3
mov
pop
dec
xor
and
or
add
call
sub
sub
repnz
xlat
outsl
dec
sarb
arpl
xor
push
add
imul
pusha
les
add
dec
jge
xor
push
xchg
scas
out
stc
dec
cltd
nop
call
mov
test
push
pop
dec
popa
les
sahf
mov
sbb
push
add
in
sbb
bnd
xor
jmp
mov
sub
lock
insl
mov
adcl
mov
mov
out
sub
add
pushf
push
in
fsubs
mov
ja
out
loop
dec
pop
inc
aaa
push
add
inc
jmp
sub
mov
xor
xor
pop
add
movsl
subb
mov
sub
lods
mov
sub
push
xchg
out
xor
out
loope
bound
inc
imul
xchg
aaa
jbe
movsl
dec
in
xchg
cld
mov
xor
ja
sub
insl
sbb
fwait
add
and
xor
sub
jnp
pop
repz
lret
mov
inc
loop
lods
jge
pop
mov
data16
xchg
lea
ret
popa
jo
std
adc
add
add
faddl
call
cld
jbe
fldt
insb
mov
jecxz
xor
std
xchg
cmpsl
dec
inc
jle,pn
pushl
ret
test
lock
mov
xor
fldt
fistl
insl
lds
pop
push
mov
dec
icebp
imul
xchg
inc
cli
jg
xor
lods
imulb
inc
dec
data16
xchg
test
insl
mov
pop
mov
dec
hlt
push
nop
insl
pop
scas
stos
das
int
lret
movsb
jae
xor
std
push
or
scas
call
shl
ret
jge
lds
test
inc
jl
adc
pop
aaa
outsb
or
add
inc
es
movsb
sub
ret
loop
stos
lods
sbb
lahf
adc
and
in
jp
ret
shl
sahf
push
lea
xchg
lcall
push
mov
int
pusha
insb
test
inc
outsl
aad
loopne
xor
or
outsl
leave
mov
dec
mov
fisttpll
mov
push
in
fmulp
gs
orl
xchg
repnz
call
nop
addl
icebp
fsubrs
insl
imul
arpl
adc
mov
cltd
mov
movsb
inc
popf
into
push
roll
xor
aad
inc
dec
lret
mov
inc
loop
je
sbb
jmp
icebp
test
fadds
dec
in
outsb
mov
or
lret
or
xchg
mov
cltd
aas
and
xor
lods
fisubrl
inc
inc
ror
leave
mov
les
shlb
xor
pop
mov
lret
xor
clc
push
das
std
out
cmp
xchg
lock
fmull
jno
xchg
inc
xlat
sbb
push
sti
jo
rcrb
leave
and
or
pop
data16
test
sub
rcrb
inc
pop
shll
pusha
and
cmp
mov
cmpsl
inc
in
cmc
mov
jecxz
divl
push
in
xchg
dec
lahf
xchg
outsl
xchg
pop
loope
fildll
cmp
xchg
test
add
push
inc
xchg
cmp
dec
mov
add
mov
out
mov
mov
les
pop
repz
ret
jnp
push
sub
push
das
ss
pop
data16
test
xchg
out
es
inc
adc
sub
inc
mov
cmp
cmpsb
mov
push
push
out
sub
popa
movsl
inc
shlb
das
int
jb
test
stos
pop
cmp
das
gs
inc
jbe
insl
fidivs
hlt
mov
out
and
rclb
pop
pop
adc
inc
test
pop
sbb
roll
dec
jne
jne
pop
adc
shl
mov
ljmp
bound
stc
xchg
sahf
bound
sbb
dec
cmpl
xchg
ljmp
push
fisubs
popl
loopne
pop
push
inc
stos
bnd
sbb
enter
inc
scas
call
movsl
inc
adcb
dec
inc
mov
xor
push
cmp
mov
popf
lds
int
int3
push
push
imul
xchg
shrl
xor
fwait
push
outsb
aaa
mov
mov
and
adc
xchg
jecxz
jg
loopne
shll
inc
das
js
xchg
mov
aas
jmp
pop
jb
hlt
pop
fidivrl
loope
nop
mov
loope
xchg
rcll
lret
imul
xor
ja
jae
test
std
scas
imul
xor
pop
push
cmc
xlat
pop
xor
fistpl
sbb
sbb
xor
jge
ds
cmp
xor
lcall
push
pop
pop
scas
xor
dec
or
jle
pop
loop
loop
pop
push
je
adc
lahf
outsl
jno
add
movsb
sub
mov
sub
sgdtl
ret
or
sub
mov
lcall
cmp
out
test
cmpsl
cmpsb
sub
xlat
fdivs
inc
loop
cmpsb
or
out
cmp
jge
lret
adc
stc
int
push
pop
xchg
inc
movsl
sbb
xor
jnp
jle
mov
test
sahf
cmc
push
add
data16
xchg
adc
dec
or
cmp
mov
inc
pop
lea
cltd
lahf
add
sub
xchg
movsb
pop
lock
dec
add
jae
int3
dec
mov
fistl
stos
loopne
mov
lcall
push
mov
xor
cld
cmp
push
ljmp
jns
or
jae
es
fidivrl
push
or
dec
jb
sbb
leave
pusha
xchg
ja
mov
push
mov
jmp
add
pushf
adc
push
mov
clc
sub
dec
subb
ss
xor
hlt
mov
adc
arpl
js
cli
push
aas
mov
jmp
loopne
cmpsb
mov
and
popf
dec
mov
hlt
lahf
inc
push
push
aad
in
sbb
and
dec
push
mov
clc
pop
mov
pop
xchg
xlat
int
sti
xchg
mov
dec
or
pop
mov
test
and
add
aam
xchg
push
mov
movb
jg
movsl
xchg
into
mov
hlt
jo
aam
jno
fdivrs
jns
in
sbb
lcall
jl
mov
call
mov
push
mov
jl
or
xor
or
pop
xor
or
dec
push
ret
nop
jle
cmp
imul
jo
in
gs
aaa
clc
push
mov
mov
cmp
cli
lea
and
pushf
das
std
ss
inc
xor
addb
mov
jg
and
mov
in
inc
arpl
mov
cmp
cmc
push
imul
aaa
push
mov
jno
ja
out
jns
and
addr16
sub
adc
mov
xor
xor
add
push
iret
fstpt
adc
ret
add
ror
xchg
hlt
cmp
push
loop
dec
jmp
aas
js
push
mov
aas
and
negb
lret
rcl
mov
dec
cmp
xor
lcall
pop
mov
xchg
icebp
push
pop
ret
jne
loopne
pop
lods
inc
push
jae
roll
adc
in
lds
adc
ja
add
fistl
xor
stc
mov
and
pop
and
cwtl
stc
inc
xor
in
dec
aad
hlt
and
lahf
arpl
jae
push
pop
arpl
mov
dec
sub
cltd
and
xchg
jg
sahf
movsb
repnz
jne
push
fisttpll
and
fstl
or
sbb
addr16
push
mov
test
testl
loopne
fwait
mov
sbb
popa
js
sub
jbe
pop
pop
adc
or
pop
pop
cmp
sub
fstpt
orb
dec
rolb
adc
and
rclb
ja
and
xchg
cmp
inc
test
aam
loop
dec
dec
fimuls
sarb
jl
mov
fld
sti
sbb
les
call
lret
ret
andl
enter
jbe
pop
push
fs
and
dec
or
lods
ret
lret
cmp
mul
jbe,pn
inc
inc
xlat
enter
cs
ja
xchg
dec
xor
jb
or
adc
sub
lret
adc
lcall
pop
nop
lods
andb
cmpsb
or
adc
outsb
or
xchg
adc
lret
cwtl
lret
subl
sbb
fldcw
in
jmp
add
cs
xor
lret
mov
mov
lods
push
les
inc
js
push
les
idivb
sbb
pop
xor
push
sbb
sbb
dec
add
lock
popa
andl
es
test
jne
fdiv
fdivrs
out
rcrl
dec
imul
xchg
mov
hlt
xchg
hlt
icebp
sbb
or
pop
in
stos
je
push
cmp
cmpsl
inc
je
mov
sahf
inc
ds
cwtl
mov
and
wrmsr
cmpsl
adc
pop
xchg
and
mov
icebp
popf
scas
sbb
or
clc
sbb
jb
leave
call
fdivrs
adc
mov
push
jb
push
outsl
jae
in
pusha
adc
iret
dec
dec
out
jne
xor
lock
outsb
fsubrs
clc
outsl
lea
add
or
jecxz
mull
cmp
mov
sarb
jle
rcl
scas
add
rcr
dec
lahf
in
insb
pushf
add
add
nop
flds
mov
cwtl
stos
jmp
cmc
lcall
sbb
mov
cmp
in
data16
in
notl
push
xchg
les
mov
fs
lods
inc
leave
sub
and
notb
xor
sahf
rorb
xor
xor
push
loope
pop
lret
aas
out
mov
xor
imul
sti
dec
jl
cltd
in
popf
std
jae
push
mov
jnp
fnstsw
jmp
adc
xor
cwtl
jbe
arpl
adc
xor
adc
bnd
pop
arpl
adc
lahf
repz
fwait
xor
pop
jecxz
or
pop
movsb
popf
out
sub
pop
stos
xchg
test
mov
enter
mov
mov
dec
out
loope
in
test
jg
xor
cmp
movsl
pop
fisubl
repnz
mov
lcall
mov
lret
lea
insl
pop
sbb
dec
pop
or
ret
sbb
or
js
adc
enter
mov
mov
adc
std
mov
mov
sub
aas
add
mov
loopne
add
xchg
flds
push
sti
gs
push
cmp
xchg
adc
ljmp
cmp
dec
in
pusha
test
rclb
fidivrs
pop
push
cmp
push
leave
dec
jbe
adc
scas
xor
pushf
add
subb
lret
cmpsl
test
mov
shrl
pop
jmp
test
or
xchg
daa
js
stos
les
lods
cmpsl
inc
jp
js
inc
imul
xor
adc
call
movsl
push
dec
out
sbb
sbb
sub
push
nop
cmpsl
cmpsl
shrl
inc
mov
jne
in
push
les
lods
sbb
roll
sub
xor
gs
fwait
inc
fmul
in
inc
shl
adc
sub
loope
ljmp
add
stos
lods
dec
testb
add
pusha
stos
adc
scas
add
fdivrp
enter
stc
ret
addl
lcall
fidivs
xor
scas
cmp
repnz
sub
imull
fisubl
inc
inc
push
dec
jnp
aam
xchg
adc
adcb
and
iret
jl
sbb
shl
je
ret
adc
xor
cmp
mov
mov
push
xchg
or
push
pavgw
ret
pop
popa
test
xchg
mov
and
pusha
iret
fdivr
insb
loope
xor
xor
xchg
iret
push
loopne
imul
pop
lock
pop
fldt
inc
inc
fwait
dec
cmp
ret
cmpsb
aam
push
nopl
or
shlb
popa
js
lret
xor
aam
mov
add
xor
orb
fsubrs
xchg
pop
or
je
call
pop
xchg
imul
out
lds
cmpb
xchg
insl
xor
test
mov
inc
sub
mov
call
jo
push
sub
lahf
ljmp
repnz
mov
fadd
add
mov
push
frstor
xor
outsb
xchg
xorl
and
xchg
ret
insl
lcall
xchg
lahf
cwtl
inc
mov
jns
push
sub
push
xchg
mov
lock
and
xlat
sub
sahf
lahf
int
sbb
inc
pop
popf
inc
mov
sahf
out
mov
insb
gs
aam
pop
pop
movsb
cmp
and
and
add
sub
stc
cmpb
inc
movsl
addl
or
adc
mov
xor
stos
pop
inc
add
pop
hlt
xchg
leave
lahf
cwtl
lods
push
sub
lods
pop
das
or
pop
inc
lds
andl
fnstenv
add
add
arpl
dec
aaa
mov
les
xor
cmc
ja
inc
cmpsl
mov
gs
inc
jg
mov
das
enter
xchg
pop
aaa
call
cwtl
lea
push
bound
movzwl
or
mov
xchg
mulb
dec
jecxz
sub
es
or
push
mul
insl
pop
and
adc
cmc
jne
mov
adc
ja
sub
inc
idivl
sub
sub
cltd
add
and
test
xchg
push
mov
outsb
dec
nop
dec
mov
test
mov
adc
scas
fdivs
movsb
dec
arpl
jp
push
xchg
push
lods
jge
sbb
xor
inc
or
pushf
dec
adc
adc
jae
cmp
roll
mov
enter
jb
enter
int3
mov
cli
xor
mov
arpl
xchg
cmp
mov
daa
das
in
outsb
outsb
int
add
jo
add
push
loope
movsl
and
and
movsl
mov
mov
inc
mov
out
mov
aaa
mov
cmp
sub
mov
or
jo
or
jbe
stos
xchg
xchg
add
jl
lahf
or
loop
jecxz
addr16
xchg
aas
and
mov
jp
jb
and
sbb
cmp
dec
cmc
push
sti
xchg
adc
out
aas
mov
std
repz
dec
dec
sub
cli
clc
jae
int
rolb
leave
or
fildl
mov
cmp
jbe
decb
fdivrs
adc
inc
rcl
enter
ja
outsb
jecxz
jno
jbe
shrl
xchg
pushf
jge
ret
mov
scas
dec
push
les
mov
xchg
sub
cmp
pop
sarl
push
fisttpll
mov
out
sbb
pop
add
imul
scas
daa
and
push
cli
sbb
ljmp
dec
cld
repz
jle
push
xor
jns
adc
push
in
rolb
push
adcl
sahf
lock
inc
ljmp
sahf
data16
add
mov
push
testb
xchg
push
test
int3
mov
mov
flds
in
js
js
push
sub
ds
and
pop
scas
or
push
mov
ljmp
pop
xor
jns
and
add
and
bound
out
sbb
sub
inc
gs
sub
and
sbb
outsb
adc
cmp
repnz
inc
sub
and
es
cli
xor
mov
cmp
test
xor
pop
pop
subb
js
popf
lcall
pop
ficomps
xlat
mov
test
cmp
sub
lods
xchg
lds
jno
jnp
cmpl
adc
repnz
sbb
and
sub
std
dec
test
test
incl
jnp
pop
rclb
ljmp
or
pop
mov
out
or
enter
inc
test
mov
repz
push
cmp
addr16
pop
inc
jp
jbe
mov
scas
add
sbbb
shl
cld
mov
xchg
cmpl
mov
xor
pusha
jl
sbb
ret
cmp
popf
and
fsubr
pop
jns
clc
mov
dec
not
and
fldcw
push
jge
nop
mov
out
js
iret
test
test
jns
push
leave
sub
lret
sti
mov
adcl
mov
pop
xor
cltd
psrld
scas
mov
or
rcrb
xchg
xchg
and
cmp
ljmp
cmp
xchg
int
scas
fmull
call
movsl
bound
fistpll
cmp
add
ret
shrb
sub
out
nop
cmp
jb
mov
loopne
adc
mov
cmpsb
int
cmp
aam
lcall
ljmp
js
and
in
sti
cmp
pop
mov
das
stos
jns
ja
push
mov
movsl
stos
js
je
and
insb
mov
pop
xlat
push
push
inc
ljmp
xchg
push
js
xchg
mov
sbb
pushw
pop
fnstcw
inc
faddl
push
test
push
pop
pop
or
inc
or
jp
loope
xor
enter
xchg
stos
insb
lret
aaa
sub
pop
push
mov
sbb
and
jge
ret
push
pop
sbb
sub
xor
mov
and
sbb
cmpsl
mov
jnp
sub
push
adc
aad
fstpl
pop
mov
adc
pop
cs
stos
add
jle
mov
or
fcoml
xor
stos
inc
inc
mov
mov
fs
leave
movsb
dec
leave
mov
int3
pop
jge
sbb
mov
push
inc
xchg
outsb
push
fldcw
jbe
jae
enter
jnp
sub
out
shl
mov
in
and
mov
in
xchg
inc
add
repz
mov
sahf
dec
and
adc
mov
inc
leave
repnz
testb
pop
mov
jne
fldl
inc
inc
jo
mov
je
mov
xor
je
imul
stos
and
and
cld
push
mov
sub
popl
aas
xchg
xchg
inc
in
mov
fcoml
cmp
inc
repnz
sub
inc
std
loop
in
or
mov
cmp
push
loopne
xchg
outsb
loope
push
aas
daa
scas
notb
xchg
out
inc
mov
jno
pop
fstl
sbb
andb
popa
out
inc
xchg
loop
ja
in
push
inc
mov
xlat
inc
push
jb
inc
daa
lret
std
sbb
mov
inc
mov
test
adc
xchg
loop
stc
clc
xchg
jecxz
xchg
jbe
lahf
cmc
fmulp
repnz
fidivrl
arpl
pop
xchg
fwait
dec
xlat
inc
jb
dec
push
xorl
sar
stc
int
pop
or
insl
mov
fwait
arpl
sbb
cmp
dec
pop
mov
ss
push
fisttpll
pop
and
stos
outsl
pop
mov
adc
adc
pop
ljmp
jbe
ja
sbb
mov
call
pop
sbb
lahf
pushf
out
cmp
insl
jecxz
icebp
or
sub
jns
or
into
pushl
ret
aas
pop
add
loope
inc
fsubl
fistpl
aas
int3
pop
jl
or
mov
or
xor
ret
xchg
mov
enter
lea
jp
inc
pop
lods
jae
jbe
pop
cmc
xchg
pop
adc
shlb
and
xor
mov
xor
or
cs
adcl
sti
or
jecxz
add
enter
inc
add
xchg
dec
and
repz
cmp
push
cmp
addb
iret
jle
dec
xchg
cmp
outsb
jge
fbstp
cmp
cmp
adc
cmp
cmp
jmp
pop
sbb
push
inc
std
stos
push
sysexit
adc
push
lcall
push
mov
ja,pt
ret
mov
shll
adc
inc
jo
mov
xchg
inc
jmp
push
outsb
sub
push
xchg
fnstenv
iret
inc
call
mov
mov
pushf
mov
jns
movl
cmp
and
test
jecxz
outsl
out
repz
sbb
push
jnp
scas
push
jo
test
mov
cmp
ss
addb
adc
enter
cs
popa
lea
out
hlt
add
out
rolb
fwait
push
jp
jecxz
xor
mov
inc
dec
adc
mov
repz
adc
cmp
lret
aad
xorl
or
sbb
lret
jae
push
into
cmp
xorb
dec
adc
int
es
inc
mul
jb
frstor
add
es
cmp
imul
and
outsl
adc
sbb
fstps
xor
lock
data16
iret
lcall
mov
push
xchg
push
dec
imul
mov
es
rcrl
repnz
pop
out
int
movsl
sbb
mov
cmp
mov
push
cltd
adc
mov
pop
aaa
or
daa
pop
or
push
mov
sub
push
or
add
xlat
xchg
push
rcrl
push
mov
out
mov
pop
stc
inc
int
xor
pop
ud2
or
mov
andl
sub
mov
leave
cmp
mov
mov
mov
insb
pop
mov
mov
shll
mov
xor
xchg
cli
dec
mov
dec
mov
xorl
dec
loope
or
xchg
sahf
emms
lds
outsb
mov
jb
inc
inc
sbb
lods
out
stos
cmp
add
dec
fs
dec
mov
loope
imul
outsl
inc
pop
fwait
cmp
ljmp
fisttps
jp
cwtl
jl
sbb
or
call
lret
mov
daa
xor
clc
ss
repnz
adc
faddp
xor
js
dec
popf
lahf
mov
mov
in
jmp
jns
pusha
rorb
mov
sub
shl
pop
push
xor
add
push
push
push
mov
js
out
push
ret
fwait
push
adcb
insb
icebp
sbb
nop
inc
adc
inc
inc
into
fsubrs
sbb
cmp
sbb
adc
repz
sbb
add
add
push
add
imul
mov
cmp
cmpsl
insb
mov
mov
enter
mov
mov
mov
stos
fbstp
adc
adc
jp
les
adc
xchg
xor
adc
testb
sub
mov
je
enter
inc
jb
cli
sbb
lahf
lahf
nop
adc
imul
xchg
or
pop
inc
add
cltd
jae
out
repnz
mov
mov
xchg
xchg
dec
mov
loope
dec
dec
lock
add
sti
mov
sub
je
out
cmp
fs
jmp
pop
sbb
imul
sarb
push
xor
leave
add
rcrb
js
push
das
cmp
or
mov
nop
dec
mov
in
int3
push
pop
and
push
nop
fmul
test
sbb
fbstp
mov
mov
jge
add
cli
pusha
cmpb
push
pop
nop
push
popf
xchg
adc
and
or
cmp
lcall
xlat
mov
sti
ds
pop
andl
lahf
cld
push
mov
jle
mov
mov
je
loop
pop
lods
xchg
xchg
shll
lods
add
mov
or
insb
fcoml
push
jle
mov
data16
mov
sub
jmp
dec
jae
fsubl
xor
mov
sahf
push
lahf
add
popf
std
addl
movsl
fwait
bound
and
mov
cmp
ficoml
hlt
movsb
adc
pop
rcr
fldlg2
fwait
rcl
scas
daa
out
fnstsw
out
add
mov
cs
xor
popf
sbb
in
pop
sbb
loop
pop
test
cmp
xchg
xchg
cltd
cmpsl
pushf
push
dec
adc
imulb
add
sub
gs
jge
push
dec
repnz
cmp
aas
lahf
xor
lods
adc
in
popl
addr16
cmp
movsl
inc
in
adc
cltd
outsl
mov
add
ds
fistpl
sbb
dec
cmp
cmc
mov
dec
sti
lret
jl
je
ror
inc
loop
lock
xor
sbb
pop
sub
push
loop
pop
daa
pop
pop
xchg
xchg
popf
adc
adc
movl
mov
jne
ret
cmp
add
cld
rclb
adc
dec
lods
cli
fldcw
xchg
inc
into
ficompl
dec
aam
mov
inc
and
xchg
jp
mov
xchg
pop
cld
mov
dec
leave
lcall
push
dec
int3
pop
or
aam
mov
ret
dec
sub
or
test
das
insl
pop
imul
out
mov
setb
das
and
daa
mov
rclb
out
pop
and
or
fwait
sbb
pop
lret
nop
hlt
mov
push
addr16
call
fwait
add
add
cmp
push
iret
fdiv
and
mov
shr
add
mov
adc
adc
outsb
repz
shlb
imul
jg
sub
sbb
repz
fistpl
jp
in
xchg
mov
int
xchg
loop
sub
outsb
scas
add
cmovb
mov
addb
cli
popa
inc
or
cmp
ds
sbb
sbb
jle
sbb
lret
movsb
inc
push
hlt
xor
cld
rolb
cmc
xor
inc
test
das
in
pop
int
pop
mov
inc
loop
inc
fidivl
popa
sub
nop
out
jge
mov
add
mov
and
mov
xchg
jl
ret
or
lock
adc
mov
neg
sub
pushf
jbe
dec
pushf
and
scas
cltd
cmpsl
xchg
pop
ss
dec
pushf
cs
mov
push
pop
aad
cmc
add
out
shlb
in
imul
aas
pop
mov
mov
xlat
push
add
jno
lods
and
xor
add
addb
dec
pop
fnstenv
out
lods
flds
test
jns
rorl
fsubrl
cwtl
out
jecxz
mov
jne
mov
jns
cmc
jae
daa
jo
subb
mov
imul
imul
add
stos
xchg
int
divb
loope
jmp
xchg
mov
pop
cmpsb
xor
je
mov
bound
roll
sbb
cmc
mov
add
subl
fadds
mov
adc
sbb
out
sti
call
and
push
enter
sub
decb
cmc
lds
es
adc
cs
xchg
mov
jge
ret
pop
int3
or
iret
push
ljmp
and
xchg
jbe
leave
cmp
insb
sbbb
dec
mov
or
cmp
popf
push
sahf
orl
andl
jae
inc
ljmp
dec
stos
pop
mov
push
scas
subl
sbb
dec
sbb
stos
sti
push
icebp
lret
loope
and
out
jge
add
cwtl
mov
add
dec
cmp
adc
jb
rolb
add
lds
sbb
dec
push
sub
divb
loop
adc
sub
mov
jo
push
mov
dec
jecxz
incb
add
pop
cmc
stos
out
int
xchg
insb
gs
push
mov
adc
cltd
pop
jp
js
xchg
jg
in
dec
aaa
jmp
int
or
cli
cmpsb
sub
jge
shl
adc
jbe
fbld
jg
adcl
icebp
dec
mov
jno
mov
pop
or
mov
pop
cmp
adc
neg
adcb
rclb
mov
mov
xchg
jp
imul
lahf
pop
xor
or
xchg
inc
iret
inc
mov
xor
fldl
adc
fstps
bnd
shr
mov
rcrb
push
test
jmp
xchg
xchg
mov
lods
fadds
es
pop
or
sub
inc
int
sarb
dec
add
stos
xchg
aas
or
mov
popf
cmpsb
xchg
inc
iret
cs
pop
pop
add
insb
and
movsb
jnp
pusha
push
loope
daa
jnp
fldcw
lea
push
aaa
sbb
aaa
lea
popf
and
in
pop
mov
lret
sub
call
inc
adc
gs
stos
out
sar
sub
jne
cmp
daa
jb
lea
and
sahf
sub
jp
addr16
mov
nop
xchg
in
into
lret
lods
mov
and
jge
mov
popa
xchg
rorb
xchg
cmp
adc
or
push
jo
arpl
aad
push
push
popf
je
psubusb
mov
outsl
push
dec
stos
mov
mov
sbb
mov
mov
pop
std
inc
loopne
test
repnz
pop
out
aas
cltd
in
or
xchg
mov
cli
out
shl
iret
jbe
and
loope
jg
mov
fnstsw
lahf
lds
inc
inc
xlat
cmp
dec
mov
jbe
je
into
outsl
xchg
mov
add
and
xchg
or
mov
pop
pop
add
adc
mov
pop
lods
call
adcl
jl
mov
je
xlat
xor
add
scas
mov
jb
mov
mov
mov
mov
and
add
adc
mov
frstor
push
mov
ss
mov
mov
shlb
cld
mov
pop
insl
call
or
mov
shrl
sti
jge
xor
mov
inc
push
dec
daa
mov
dec
je
and
scas
dec
jno
call
push
int
inc
mov
sbb
in
into
call
fimull
sub
jmp
movsl
pop
dec
mov
push
inc
mov
insb
cltd
movsl
iret
ds
xchg
ret
in
ds
gs
notl
sbb
mov
call
cmp
sub
adc
sub
adc
jge
push
jecxz
popa
mov
cmovb
stos
enter
lea
pop
mov
sbb
mov
mov
fwait
lahf
ja
push
mov
icebp
fsts
or
daa
ja
call
ret
adc
repz
out
xchg
rolb
sar
in
mov
jnp
and
fnsetpm(287
out
jmp
sub
pop
hlt
jae
or
rcrl
scas
loop
xchg
insb
cmp
cltd
push
mov
dec
cwtl
lds
jecxz
xchg
sub
int
dec
jae
fcmovnb
add
mov
scas
out
ret
gs
inc
sarl
shlb
jnp
cld
test
mov
lahf
push
clc
inc
cmp
loop
ja
sti
in
inc
negl
int
push
in
test
sbb
inc
mov
addr16
push
and
push
cmpsl
jecxz
jbe
insb
les
dec
jno
cmpsl
pop
mov
into
mov
iret
sti
pop
xchg
adc
mov
or
sbb
dec
inc
and
mov
push
inc
push
push
movsl
pop
movsb
xchg
inc
leave
ljmp
scas
icebp
ret
fwait
dec
adc
jne
stc
nop
shrb
in
test
inc
push
ret
fwait
pusha
pop
popf
leave
push
cmp
mov
sub
xchg
mov
aad
dec
xchg
inc
es
adc
add
xchg
sub
popf
stc
xchg
xor
and
insl
std
iret
push
outsb
xor
in
lock
loopne
sti
int3
push
inc
es
cmc
movsl
pop
mov
adc
outsb
sub
ror
testb
cli
out
mov
push
mov
pop
cmpsl
int3
xchg
loope
push
xchg
xor
sub
icebp
mov
ret
repz
adc
sti
adc
mov
out
daa
sbb
add
lea
nop
clc
pop
jne
adc
jmp
mov
pusha
pop
jg
test
push
out
dec
xchg
jge
std
movsb
cwtl
jle
stos
adc
movsb
jae
fs
push
mov
rcll
mov
jecxz
cmpsb
out
lret
xlat
adc
pop
fnstsw
jl
xchg
roll
sbbb
cmpb
push
fcmovnb
test
push
fdivrs
jo
movsl
push
loope
es
ljmp
test
popa
inc
mov
popa
xchg
test
pop
int3
inc
cmp
dec
outsw
or
xlat
cmp
inc
ficoms
push
in
mov
push
in
add
add
or
mov
bound
mov
out
jle
push
stos
mov
ljmp
mov
scas
xlat
movsb
ss
lcall
pop
push
xchg
adc
sbb
xor
mov
mov
aas
leave
nop
mov
mov
inc
shlb
popf
xor
and
cmpsb
fmul
in
mov
sub
jae
and
mov
mov
mov
aad
mov
lret
add
test
fisttpll
inc
out
sbb
icebp
sbb
sarb
xchg
dec
repz
ret
push
xchg
push
adc
inc
add
push
gs
ret
popf
xor
decl
push
push
mov
lea
adc
lcall
int3
aas
faddl
in
push
popf
inc
push
inc
notl
fwait
mov
incl
push
and
or
or
daa
roll
xchg
dec
ljmp
dec
add
mov
ds
popf
jns
repz
sti
jae
push
std
es
mov
gs
aad
mov
xorb
setbe
xchg
aam
jae
jns
push
out
xor
sti
or
mov
jle
xor
mov
lcall
xchg
xor
or
std
insb
dec
mov
les
fmul
loopne
mov
outsb
push
add
mov
orl
repz
and
sbb
call
shrl
jns
add
sahf
test
sbbl
rorl
cwtl
icebp
cmp
pop
xor
aaa
mov
outsl
fs
sahf
xchg
loopne
iret
test
mov
shl
test
dec
pop
fsts
mov
dec
notb
mov
test
xor
cmc
push
loope
arpl
cld
cmp
pop
push
lock
out
dec
jecxz
cmp
cmp
add
in
aam
dec
push
or
inc
lods
dec
xor
jmp
sbb
nop
jb
jo
xchg
or
lods
fisubrl
jne
pop
pop
jg
insb
or
jno
inc
fdivs
in
sub
movsb
test
loope
or
cwtl
jae
push
out
insl
inc
inc
data16
push
mov
or
ret
xchg
pop
pop
inc
inc
mov
lret
adc
xor
in
out
mov
inc
cmp
push
call
bound
and
rorl
xchg
cmc
mov
dec
sub
xchg
leave
push
jo
pop
mov
rclb
jbe
push
jg
cmp
scas
dec
std
adc
fwait
je
mov
lea
or
test
popf
lret
les
add
mov
das
repz
pop
push
ja
adc
cmp
call
sub
or
pop
sbb
cli
mov
dec
and
les
movsl
mov
ds
push
cld
add
lcall
data16
push
inc
bound
mov
xor
dec
mov
jecxz
dec
jecxz
sub
add
and
jns
insb
pop
or
hlt
int
push
adc
inc
xor
lods
loope
lcall
hlt
pop
jb
jae
scas
lds
push
mov
negb
repz
sti
shlb
adc
rolb
movsl
lahf
inc
rorl
mov
mov
dec
js
pop
cmc
push
pop
pushf
loope
xchg
inc
push
jnp
lret
fdivrs
mov
dec
lcall
pusha
mov
dec
sti
inc
mov
test
movsl
cmp
cmpb
in
mov
mov
mov
adc
cmp
popa
inc
into
jecxz
dec
out
orl
out
add
xchg
cld
sub
cmpsb
add
adc
ss
adc
cmpsb
push
jno
xor
cmp
mov
mov
decl
and
shll
jae
es
daa
push
sub
jmp
push
bound
adc
mov
shlb
inc
adc
push
jno
mov
nop
add
xchg
loopne
pop
ds
jne
lock
cwtl
repz
imul
xor
dec
das
stos
push
shll
gs
cld
es
dec
int3
movsl
pop
negl
mov
sub
movsl
mov
ja
add
lods
jb
jns
cmpsb
fisttpl
adc
das
fidivl
mov
xchg
dec
hlt
and
xorl
popa
rcr
int3
sbb
xchg
out
pushf
ss
jmp
stos
mov
cmp
shr
jo
push
insb
clc
movsl
pop
std
mov
sub
jecxz
repz
aaa
in
inc
sbbl
rorl
roll
dec
jb
jbe
cld
sub
std
out
xchg
cwtl
cld
cwtl
ljmp
fbld
jmp
and
cmp
jmp
xchg
out
rorb
cmp
push
popa
dec
cwtl
mov
inc
aas
bnd
cwtl
mov
cmpsb
es
mov
pop
fldcw
pop
jno
and
dec
push
aam
sub
push
push
fwait
pop
test
mov
inc
and
push
out
mov
pop
lods
dec
shrl
mov
out
subl
adc
dec
jnp
sbb
sbb
inc
faddl
inc
pop
andl
mov
mov
ret
cli
xchg
dec
nop
xchg
dec
push
xor
pop
xchg
out
in
or
outsl
cld
or
rclb
jae
jecxz
push
jne
adc
jge
movsl
aas
pop
hlt
dec
xchg
xor
ret
gs
or
popa
xchg
mov
test
std
mov
adc
add
loope
or
dec
inc
aad
aam
mov
das
push
orb
cmpsl
push
pop
or
fwait
dec
adc
testl
imul
xor
jmp
testl
or
cmp
jecxz
idiv
mov
inc
orl
adc
mov
addr16
jmp
cmp
aaa
test
dec
mov
loop
sbb
xchg
cwtl
jno
lock
test
dec
out
push
cli
inc
call
or
sbb
sub
mov
out
cld
dec
jl
daa
push
call
jl
or
push
push
lcall
mov
out
test
push
inc
xor
sub
xchg
insb
dec
push
push
ss
push
mov
xchg
lret
push
movsl
stc
rolb
out
unpcklps
lods
add
inc
pop
subb
test
pop
and
or
xor
negb
loope
lock
repz
xor
jge
cmpb
cwtl
int
popl
idiv
mov
mov
int
jge
sub
pusha
in
cmp
mov
daa
mov
sub
inc
inc
idivl
scas
int
pop
jnp
in
jb
in
lock
repnz
xchg
imul
add
cmpl
lcall
xor
mov
subb
jb
ret
imulb
push
lret
xchg
sub
std
in
jbe
pop
cld
lret
push
ja
add
imul
repz
sub
je
xlat
out
pop
bound
cmp
mulb
push
hlt
and
push
bound
push
fisubl
aas
or
leave
mov
cmpsb
sub
loope
cmp
push
cmpb
push
test
mov
sub
pop
jbe
in
addr16
mov
sub
ljmp
repz
xor
clc
ret
push
dec
add
push
add
and
btc
mov
dec
jmp
pop
or
xchg
jl
sub
dec
mov
outsl
loop
lds
adc
aam
add
or
xorb
xor
aam
enter
fwait
push
sahf
inc
inc
iret
mov
jae
loop
ss
and
inc
movb
ret
es
daa
or
add
push
addr16
js
mov
fnstsw
call
push
dec
ljmp
add
rcrl
sub
movsb
shlb
xchg
mov
dec
negb
hlt
pop
sub
xchg
xchg
roll
xchg
cmc
loopne
aam
outsb
xchg
adc
sbb
insb
cli
lea
fcoml
test
ret
push
and
mov
push
gs
pop
mov
inc
add
sarb
xchg
scas
jb
int
stos
addb
pop
rclb
xchg
fs
test
addr16
hlt
movsb
iret
pop
add
scas
hlt
add
xlat
pusha
imul
dec
and
fmull
jbe
xor
shlb
subl
stos
jmp
std
xor
nopl
movb
imul
add
xor
test
das
and
push
pop
cmp
adc
dec
sub
adc
adc
aas
int3
adc
pop
ds
jp
les
mov
and
jno
cltd
imul
sbb
int
inc
ret
rorl
inc
sbb
fnstenv
xchg
daa
cwtl
inc
push
rcrl
xor
push
js
and
inc
fwait
stos
lret
sti
aaa
addb
mov
and
cmpsl
jb
pop
cmp
rcrb
push
add
xchg
add
loope
lods
outsb
push
pop
sub
sub
pop
push
ljmp
aas
inc
cmp
xchg
aad
push
jb
loopne
or
inc
inc
push
or
rcll
bound
xor
je
cwtl
add
mov
lret
xchg
outsb
ret
scas
mov
xchg
xchg
fnsave
mov
outsb
movb
pop
addr16
popf
fistps
out
add
sbb
out
cmp
xchg
cmpsl
mov
dec
pop
fidivrl
outsb
jne
or
xchg
test
mov
fdivr
fnstsw
fdivrs
sub
ds
jns
aad
xchg
inc
hlt
ucomiss
push
pop
scas
adc
scas
je
les
loopne
mov
enter
test
cltd
ffree
arpl
mov
xchg
adc
xchg
lods
ds
bound
addr16
andl
add
adc
jns
or
out
mov
inc
hlt
or
mov
mov
jmp
fimuls
insb
mov
js
mov
push
into
push
dec
mov
das
sbb
sub
repnz
adc
xchg
ret
cmp
out
xchg
xor
jb
mov
push
inc
cli
push
cli
xchg
out
cmpb
shlb
mov
or
test
mov
push
mov
daa
or
fwait
mov
jnp
and
bound
dec
je
add
out
mov
rcll
xlat
xor
loopne
sbb
sti
lea
daa
test
xor
pop
pop
push
xchg
jge
mov
stos
cmp
iret
xchg
inc
push
stc
inc
clc
sbb
insb
xchg
test
daa
mov
jbe
mov
xor
push
cmc
mov
enter
lea
test
pop
push
lret
mov
pop
jno
cwtl
arpl
lea
pop
lods
fldl
imul
push
mov
push
andl
inc
mov
les
mov
jae
inc
add
inc
out
test
dec
shlb
sbb
or
dec
subb
lods
stos
jge
xor
test
cmp
into
push
fsubp
inc
mov
and
inc
cmpsb
jg
dec
testl
call
cmc
jo
jne
jo
inc
inc
sbb
mov
add
rolb
cmp
inc
lods
xchg
lock
cmpsb
mov
out
out
jge
insb
cli
and
popl
lret
mov
push
cli
pop
out
push
ds
push
pushf
sub
pop
mov
sti
xchg
test
repz
mov
cmc
outsb
std
or
dec
stc
dec
sub
push
fsubp
cli
popa
mov
jae
int3
js
inc
push
pop
adc
and
jmp
ds
cmc
add
pop
pop
shlb
adc
push
jnp
mov
xchg
fidivs
mulb
mov
xchg
pop
dec
lods
cmp
ss
in
in
jge
mov
sbb
or
lds
sbb
clc
enter
scas
fcompl
addr16
incl
icebp
iret
shl
outsl
adc
jns
jg
in
add
xchg
and
mov
inc
test
push
push
or
pop
mov
sub
shrl
fistl
in
in
sub
addr16
xchg
pop
inc
out
jne
dec
cltd
sub
cmc
sub
mov
xchg
das
insl
ret
loop
jmp
sub
pop
mov
mov
pop
das
repz
or
adc
cltd
mov
or
sbb
mov
xor
push
jb
and
test
nop
inc
stc
sub
push
push
test
cmpsl
push
inc
push
cmp
sbbb
mov
imul
stos
sub
jl
loop
dec
mov
jb
sbb
lret
sbb
add
inc
cmc
loop
imul
push
add
add
hlt
jp
xchg
xchg
in
cmpsb
mov
push
add
hlt
sub
stc
pcmpgtb
adc
rcr
mov
cltd
inc
mov
adc
sbb
pushf
mov
fwait
sbb
loop
shrl
xchg
bound
mov
mov
cmp
mov
ss
adc
aad
inc
dec
ja
jp
gs
cmpl
sub
jle
mov
repnz
push
enter
leave
or
pop
call
stc
xor
orb
push
iret
and
xor
xchg
fcompl
lret
and
ror
cmp
push
mov
adc
pop
xchg
mov
xlat
ret
test
loope
lahf
mov
push
movsl
adc
pop
lods
sub
out
into
inc
call
xabort
cmp
inc
outsl
sub
stos
lods
ds
fisttps
lret
xlat
imul
orl
rorl
cld
pushl
hlt
fwait
roll
repnz
pushf
push
shl
mov
pop
push
aaa
movsl
mov
mov
shll
fisttps
out
in
xchg
fucom
sub
add
imul
adc
arpl
test
mov
enter
call
xor
cli
ds
enter
jg
push
cmp
ss
or
fwait
test
mov
push
pop
push
xor
mov
fdivrl
push
ret
fadd
movsl
and
inc
ret
int3
pop
cmp
bound
outsl
mov
sbb
xor
jp
inc
mov
fwait
rorl
outsl
pop
mov
test
xorl
add
rolb
loop
mov
movsl
jle
fldenv
orl
pushf
sbb
jne
xchg
scas
fwait
xchg
xchg
mov
gs
pop
sub
addl
add
insl
sub
divb
dec
mov
and
jbe
fwait
lods
pop
sub
aad
xchg
pusha
dec
rclb
mov
fcompl
xchg
add
xchg
and
mov
imul
pusha
push
mov
std
jnp
mov
push
icebp
roll
jno
mov
enter
adc
sbb
in
outsl
lods
or
dec
inc
pop
test
cld
jae
inc
or
sub
sti
cmp
cltd
lcall
ret
mov
inc
xchg
inc
mov
cmpsb
lret
imul
sub
xchg
add
xor
xchg
mov
cmp
push
mov
cmp
sti
and
test
add
jp
pop
mov
sbb
xchg
pop
fmuls
and
xor
fs
jecxz
cmp
into
xor
in
pushw
pop
adcl
adc
rorb
push
cmp
add
jbe
out
jo
sub
mov
push
std
inc
xchg
loopne
loop
add
cli
push
mov
je
aam
test
sub
call
mov
in
sbb
hlt
pop
insl
sbbl
enter
negb
xchg
xchg
cmpsb
shrl
add
or
cltd
gs
xor
mov
inc
jge
push
decb
call
add
ret
loope
popf
jmp
idivb
jns
mov
sbb
mov
jp
lcall
push
lret
mov
es
push
add
inc
cmpw
add
mov
rcrb
sbb
clc
aam
out
mov
push
mov
jmp
cmp
jae
ja
xchg
xchg
cmp
nop
gs
rolb
jmp
fscale
in
sbb
popf
jnp
adc
pop
xor
in
hlt
cmp
xor
fnstcw
das
movsl
jmp
stc
stc
mov
jl
push
xor
scas
and
mov
jo
sbb
jnp
loopne
add
xchg
xorb
je
push
movsb
popf
ror
sub
cmp
jnp
or
fsubrl
stc
inc
push
lret
pusha
push
int
mov
int
shrb
cs
shrl
mov
aad
ds
push
call
xor
pop
js
loop
jns
pop
dec
mov
push
dec
push
add
in
xchg
pusha
test
pop
clc
xchg
mov
mov
loopne
pop
push
dec
dec
mov
mov
or
rorb
pop
cltd
nop
cmp
dec
out
ret
and
into
test
cltd
inc
dec
xor
popa
imul
test
add
das
inc
jnp
mov
pop
mov
aad
ret
pop
or
or
call
outsb
fcoms
std
mov
in
mov
push
in
lds
addl
sub
sub
lea
test
mov
test
sbb
pushf
cmc
add
arpl
gs
xor
pop
mov
imul
jecxz
icebp
cwtl
mov
pop
mov
sub
jge
pop
mov
pop
push
stos
jg
mov
mov
dec
hlt
shl
out
sbb
sahf
pop
xchg
pop
xchg
arpl
fisubs
ds
rorl
repnz
or
inc
fldenv
jb
aam
adc
mov
add
mov
scas
xor
sti
cmpb
fldenv
outsb
cmpsb
insb
out
popa
push
notl
pop
or
or
cmp
popa
scas
mov
outsb
sbb
rcll
push
loopne
notb
js
add
sub
push
jne
dec
xchg
lock
sub
and
or
icebp
pushf
mov
jne
mov
into
enter
fcoml
lds
int
xchg
push
mov
jne
in
jb
push
or
push
push
loope
mov
push
jge
lret
dec
push
mov
dec
jl
pop
out
nop
cmp
das
mov
fsubs
mov
mov
or
dec
rolb
push
jae
sbb
in
mov
loopne
pop
stos
lcall
int3
call
or
jge
mov
std
data16
dec
ret
jl
mov
add
xchg
sbb
cs
and
scas
jae
stos
mov
test
xchg
jg
xchg
rorl
push
subb
adc
mov
sahf
push
adc
loopne
push
sahf
jle
xchg
xchg
inc
dec
or
je
call
xchg
xchg
pop
mov
mov
push
lea
pop
jmp
je
pushf
jg
imul
das
loop
or
dec
pop
jne
inc
jp
stos
in
sbb
jp
outsl
scas
pop
sbb
adc
jp
leave
pop
xchg
push
int
loope
sub
rolb
lret
push
jmp
imul
xchg
clc
pop
fcoms
insb
mov
inc
jp
and
mov
shrb
scas
loop
bound
lods
je
xchg
incb
mov
jno
xchg
push
mov
mov
cmpsl
push
repnz
insb
xchg
inc
cltd
dec
jmp
lret
jle
jns
push
fbstp
dec
dec
dec
jns
rclb
cmp
loop
dec
rcrl
and
add
or
sbb
test
cmpsl
cltd
mov
jge
enter
cs
xchg
and
add
mov
outsl
and
stos
div
cmp
pop
adc
push
sbb
enter
inc
mov
insl
pusha
or
jle
lret
push
cmp
cmp
pusha
mov
test
mov
aam
mov
outsb
lods
inc
outsb
mov
jbe
dec
stos
inc
sub
mov
insl
mov
pop
cwtl
jle
mov
nop
mov
pop
jnp
dec
mov
movsb
repz
testb
in
inc
ja
push
sbb
into
fcomps
lahf
jecxz
loopne
sbbl
mov
pop
sbb
xchg
xor
jg
stc
sahf
xlat
repnz
cmp
cwtl
mov
add
xor
adcl
push
and
enter
imul
lret
aad
sub
cmp
dec
orb
xorl
ret
adc
push
lds
mov
push
jmp
add
sbb
add
scas
mov
cmc
ret
outsl
adc
or
adc
jecxz
call
inc
pop
sar
movsl
mov
into
xor
rcrb
outsb
addr16
dec
lahf
aaa
shl
das
cmpl
scas
sub
fildll
cmp
popf
gs
push
mov
ljmp
mov
push
push
dec
sub
dec
mov
jbe
xlat
sub
into
int3
mov
jo
cmp
jl
lock
xor
orl
aad
sbb
imul
dec
out
adc
and
xchg
dec
out
inc
icebp
sub
push
pusha
gs
mov
call
mov
mov
sbb
sbb
jle
insb
add
pop
loopne
daa
jl
dec
xchg
xor
cmp
mov
dec
jge
push
push
jbe
cmp
push
sub
das
scas
out
sub
repz
mov
ja
xlat
and
shll
push
jno
mov
stc
jae
jmp
dec
decb
in
iret
jl
sbb
add
pop
nop
rcrb
leave
and
icebp
push
xchg
insl
stos
loopne
push
mov
mov
std
shr
or
insl
xchg
mov
add
aad
lods
sbb
cmp
push
lahf
dec
mov
lea
loopne
clc
xchg
jge
mov
adc
in
clc
pop
xor
rol
bound
jno
pusha
jecxz
inc
add
into
push
in
bound
cwtl
mov
push
cmpsb
lret
push
leave
cmp
popf
rolb
mov
cmp
sbb
add
bound
fsubs
cmp
cmovb
pop
je
pop
loop
je
mov
lock
pop
ljmp
imul
jp
fstl
scas
ja
lret
xchg
test
mov
sbb
xor
mov
or
cmp
cltd
inc
sbb
out
je
dec
cmp
add
daa
mov
dec
or
std
pusha
mov
mov
cmp
mov
or
jae
cmp
fadds
push
ret
mov
jmp
lret
and
mov
outsb
lcall
std
cmp
movsl
adc
sub
mov
lods
xchg
out
and
lcall
add
and
imul
mov
cld
xchg
jbe
sahf
mov
mov
mov
cld
fldenv
pop
push
loope
clc
mov
add
popf
inc
pop
test
adc
in
rcll
orl
pop
lods
mov
inc
hlt
xchg
mov
dec
lods
out
scas
adc
pmulhw
inc
pop
xchg
and
xchg
leave
stos
xchg
sbb
sub
int
xchg
lds
nop
les
outsl
aam
xchg
pop
mov
and
aam
jo
adc
in
bound
cmp
jp
arpl
adc
pop
jge
sub
inc
adc
jge
adc
cmpsb
inc
mov
mov
cmpsb
test
sbb
movsb
sti
ds
mov
in
and
sti
cmc
aam
sub
cli
push
flds
push
in
fdivs
int
sbb
hlt
jmp
sbbb
lret
adc
ljmp
inc
pop
outsb
loope
scas
jo
dec
orl
pop
jmp
and
fnsave
scas
dec
outsl
iret
ss
cli
dec
rcrl
push
sbb
add
jno
insl
jle
pop
call
subl
and
adc
das
pop
push
stos
sbb
xchg
inc
out
or
pop
cmp
mov
aaa
pusha
pop
adcb
or
xchg
ja
pop
cmp
push
or
push
and
pop
fdivrs
push
push
incl
lds
cmp
test
insb
out
loope
imul
inc
and
outsb
mov
stc
lea
push
test
mov
push
out
pop
pop
mov
pushf
inc
stc
jg
jnp
add
pop
mov
fmuls
mov
xor
sbb
cmc
mov
mov
jecxz
lds
fildll
ret
lock
xor
jmp
fldenv
es
push
jne
xchg
std
std
jne
jp
inc
inc
js
test
mov
aaa
aas
jns
mov
test
inc
jne
xchg
hlt
xchg
or
push
loope
mov
addr16
cwtl
es
loope
orb
mov
sbb
out
mov
pop
or
aas
loope
jno
jge
dec
ret
fsubs
push
mov
dec
test
adcb
rol
ja
mov
and
or
scas
adcl
mov
cs
push
enter
sbb
jle
pop
and
pop
lret
bnd
sbb
sbb
xor
ja
es
xchg
scas
mov
cli
fdivrs
xchg
add
xor
test
add
call
jbe
clc
and
popa
pushf
inc
mov
pop
adc
cwtl
ret
movsb
test
cli
fs
jmp
inc
xchg
xchg
jp
pop
xchg
les
mov
mov
js
push
cmpb
ds
es
mov
add
repnz
cmp
fxch
js
sub
cld
scas
dec
rcl
out
sub
sub
fs
ja
xchg
scas
cmc
leave
aam
fsubrl
fwait
out
rorb
xor
sub
popa
mov
rcll
aam
mov
jb
movsb
imul
xchg
mov
in
les
daa
push
push
loop
mov
dec
int3
fstpt
pop
inc
mov
mov
mov
cmc
ljmp
cmp
xor
xchg
sbb
xchg
jno
xchg
push
arpl
pop
mov
out
cli
jns
das
push
hlt
jns
jnp
mov
aam
out
inc
daa
das
imul
aad
xchg
push
xchg
mov
cmp
ss
repz
int
shr
lods
mov
daa
adc
lods
fistpl
xchg
mov
jl
test
jecxz
xchg
fdivrs
or
das
mov
mov
dec
xlat
sub
movsl
daa
or
rcll
popa
testb
mov
negb
add
out
xchg
mov
sar
dec
imul
pop
pop
int
inc
data16
xor
leave
pop
xchg
int
cmp
stos
aam
mov
sbb
sub
adc
inc
xchg
insl
and
jae
ret
rolb
or
sbb
push
mov
xchg
stos
loop
xchg
xor
jl
lods
iret
out
push
lret
pop
push
fs
jns
aad
jge
sub
xchg
in
data16
ja
int
orl
in
les
out
jb
cmpsl
fwait
pushf
fs
cli
rcrb
pop
out
sub
into
push
xor
out
pop
stos
xor
mov
mov
stc
push
out
clc
fwait
xchg
sub
jo
mov
fdivrs
loop
call
ret
inc
adc
insb
push
mov
add
xchg
loope
dec
das
dec
out
xchg
add
xlat
jecxz
mov
addb
dec
jo
loopne
pop
mov
gs
inc
in
pop
incl
add
xchg
je
sub
ret
push
repz
xchg
jne
add
xchg
shr
aam
mov
rcll
sbb
mov
sub
int
lods
mov
and
mov
dec
sbb
lret
dec
pop
std
sub
cmp
jb
lret
cltd
popf
and
leave
dec
inc
pop
add
cmpsb
xor
ret
cmpsl
sbb
in
ss
push
bound
dec
push
in
sbb
addr16
jmp
ficompl
das
stos
dec
iret
stc
sbb
inc
ss
inc
mov
mov
lods
mov
mov
sbb
or
mov
lret
insl
pop
inc
cwtl
imul
xchg
lds
outsb
call
mov
mov
and
mov
pop
jp
add
stos
xchg
imul
push
in
pop
jle
out
sbb
ja
xchg
daa
xor
sbb
mov
xlat
adc
add
into
loope
popf
mov
jecxz
jg
mov
mov
not
jp
mov
mov
xor
mov
dec
fsubrs
imul
rorl
cmp
ds
mov
xor
xor
jns
sub
andl
dec
lds
sub
jns
or
scas
xchg
daa
sbb
xor
inc
and
and
and
aad
repz
and
aas
lds
cmp
jle
jb
sti
gs
cvtpi2ps
jle
sub
pop
cmp
mov
cmpsb
scas
or
xchg
pop
ret
sub
pop
into
sbb
lods
adc
clc
outsb
adc
sub
repnz
outsb
sarb
and
xor
loopne
popf
mov
sbb
std
test
mov
lret
sbb
int3
mov
add
jnp
sub
or
pop
mov
test
sar
ljmp
sti
xor
add
jno
clc
add
loope
lret
loop
mov
clc
mov
sub
xor
jl
fisttps
movhps
sub
into
iret
test
xchg
sbb
idivl
add
shll
mov
xchg
into
add
mov
cmp
sub
sbb
pop
dec
cmp
popa
dec
dec
sti
adc
pop
adcl
pop
or
rcl
es
nop
lret
inc
add
jb
inc
ret
ljmp
cmovl
pop
ljmp
xchg
repnz
push
jmp
jg
cmp
xor
imul
mov
pop
fsub
mov
out
sbb
or
rolb
incl
test
lock
jnp
popf
pop
inc
outsb
outsl
fldenv
xor
es
jb
cmpb
xchg
xchg
lea
in
xor
lods
test
and
or
mov
adc
push
js,pt
cmpsb
add
stos
pop
xor
call
int3
and
loope
shl
cmc
sti
jbe
loope
loop
sti
jb
or
jg
and
cmp
scas
mov
stc
mov
lds
cli
fsubs
test
pop
mov
and
rorl
xlat
jo
mov
and
dec
cld
pusha
ret
jl
push
mov
xchg
mov
mov
decb
jae
int
add
std
mov
sbb
aas
mov
sti
mov
sub
push
insl
aaa
cmpsb
mov
dec
pop
sbb
jns
out
movsl
pop
adc
nop
push
cld
loop
mov
ret
mov
push
push
into
cli
lret
jbe
sahf
add
add
cmp
lahf
pop
jl
sbb
lock
mov
daa
add
mov
sbb
out
jnp
jnp
lods
xor
nop
leave
loop
jne
mov
jge
or
cmp
stos
sbb
jae
or
test
push
inc
push
jle
out
dec
fisubrs
sbb
xorb
daa
movsb
sbb
out
push
pop
sbb
ror
aam
lods
xor
in
clc
push
fs
jge
push
in
pop
add
fs
test
pop
mov
jae
gs
pop
inc
es
push
in
xchg
fstpl
loope
inc
rorl
cmpsl
lds
das
addl
mov
jp
mov
sahf
in
and
dec
push
ljmp
push
fmul
sub
dec
aad
sub
pop
sub
movsl
sub
inc
mov
adc
push
ret
outsl
jmp
and
stos
jge
andnps
push
lds
cmp
in
mov
adc
sar
xchg
or
pop
popf
inc
scas
vandnpd
mov
sti
mov
movsl
and
int3
add
idivl
inc
adc
idivl
mov
inc
push
hlt
xor
xchg
in
add
and
gs
and
hlt
rclb
sarl
imul
adc
mov
lods
lcall
loopne
jg
inc
scas
pusha
bnd
scas
ficoml
fsubr
sbb
arpl
mov
add
test
adc
ret
push
ficomps
sub
pop
and
mov
sub
ljmp
jecxz
test
dec
ja
pop
fisttpl
lret
jmp
mov
cmpsl
xor
addr16
jp
fmulp
ds
pop
adc
pop
int3
xchg
xor
mov
ret
outsl
int
cmp
lahf
orb
pop
es
addl
cmp
jnp
pop
sbb
iret
adc
dec
fs
add
add
and
lods
xor
push
jecxz
out
add
sbb
xor
push
ds
push
mov
or
negl
jecxz
mov
pop
pop
in
push
popf
arpl
arpl
sub
cmp
mov
add
xor
lret
ljmp
jg
inc
jg
or
add
xchg
xorl
pushf
in
sbb
iret
jge
sub
arpl
pop
dec
es
sub
arpl
jp
addr16
fbld
jle
pusha
cli
pop
rcl
adcl
mov
int3
pop
inc
test
sar
xchg
pop
out
jb
mov
leave
in
mov
ret
outsb
adc
jmp
add
ljmp
adc
lcall
sbb
aas
xchg
mov
test
cmp
pop
jno
push
adc
lret
mov
in
pop
push
pop
hlt
fisttpl
cmpb
dec
push
xor
sub
stos
daa
push
jle
mov
push
imul
xor
aam
mov
sbb
das
jb
or
push
lods
push
sbbb
sarl
lods
and
mov
ret
pushf
pop
call
jg
push
xchg
dec
popf
mov
lcall
rorl
stos
out
cwtl
sbb
and
fucomip
popa
jge
jecxz
int3
xchg
in
jle
adc
hlt
cmp
int3
outsl
xchg
movsb
push
adc
fsubrl
mov
xchg
or
mov
insl
fcmove
cmp
iret
cmpsl
xchg
stc
jbe
roll
fsubrp
adcl
mov
test
test
aaa
in
fcomi
push
lahf
shrb
fsts
fsub
scas
adc
mov
jno
jb
push
adc
or
push
jb
cmp
push
or
inc
jae
pop
pop
mov
shrl
aas
pusha
repz
jbe
lahf
jns
shlb
and
xchg
ds
add
iret
sub
out
hlt
inc
lahf
push
movsb
imulb
jnp
daa
loopne
mov
insl
push
adc
movsl
xchg
jb
repz
sbb
jle
push
lcall
adc
jno
dec
or
or
adcb
enter
cmpsl
jne
in
ror
sbb
xor
jne
sbb
movl
sub
js
xchg
or
lahf
cld
lret
inc
int
shl
xor
push
pop
mov
sbbl
sbb
cmpsl
or
jb
add
pop
fsubl
sbb
adcb
pusha
sbb
cwtl
xor
lods
imul
lock
lcall
shll
pop
or
dec
add
or
mov
xchg
and
test
mov
scas
pop
and
xchg
jl
jno
rorl
push
adc
mov
sbb
mov
cmp
mov
cmpsl
fisttps
cmp
mov
lods
cli
hlt
lret
pop
fcmovnu
pusha
ljmp
mov
pop
les
ret
stos
inc
and
sbb
inc
mov
cmp
lods
daa
cli
cmp
inc
push
inc
insl
iret
outsl
mov
mov
add
mov
pop
shll
enter
xchg
ds
sub
dec
nop
aad
xchg
movsl
ret
imul
icebp
jns
mov
stos
sbbl
dec
jmp
mov
aam
cltd
cmp
dec
int3
jg
sub
pop
imul
pop
add
mulb
mov
sub
sub
movsb
cmp
ror
outsl
mov
aam
int3
fwait
in
fwait
push
jb
sbb
cmp
sbb
sub
xchg
aad
xlat
inc
jbe
repz
adc
inc
pop
dec
fsubrs
in
or
push
push
adc
iret
adc
clc
mov
out
test
pop
lods
in
fldenv
fst
mov
push
xor
call
cmovp
jg,pn
or
mov
and
enter
push
in
mov
jg
mov
pop
adc
aam
rcrb
lahf
jecxz
adc
repz
into
mov
mov
pop
lock
cltd
sbb
dec
lock
mov
repz
aad
xchg
jg
fwait
push
fwait
inc
pusha
and
mov
cs
and
test
jge
mov
mov
push
lds
push
xchg
xorl
push
push
ret
xor
aam
mov
ds
mov
dec
fisubrs
stc
dec
and
lods
mov
mov
dec
repnz
inc
push
inc
roll
lock
push
aam
jo
sbb
push
xor
jns
movb
xchg
in
shlb
out
hlt
out
pushf
push
sbb
ret
xchg
adc
xor
in
iret
mov
sub
adc
pop
or
push
or
lock
sar
cmp
mov
mov
jns
push
mov
mov
jmp
inc
dec
cmp
lcall
out
jle
pop
inc
push
out
push
stc
lret
pop
inc
loopne
push
nop
dec
dec
int3
lret
sub
jle
inc
push
in
loop
push
push
js
jl
call
test
in
mov
iret
pop
and
scas
out
loop
add
popl
out
sahf
out
xor
pop
push
jo
and
out
mov
les
inc
push
sti
popa
cmp
sbbl
jns
rorb
add
aas
aaa
jb
xlat
adc
xor
xor
lock
add
push
push
mov
add
cmpsl
fnstcw
dec
add
and
sub
jmp
xchg
mov
sub
push
ds
xor
jecxz
lret
adc
bound
sub
in
rol
test
cmpsb
mov
sbb
push
cmpsb
jl
xchg
and
pop
bound
push
push
test
jl
mov
adc
iret
bound
bsr
jecxz
push
jo
stc
test
pop
cmp
fsubp
sub
test
jns
outsb
mov
fimuls
push
sbb
repz
cmp
fnsetpm(287
pop
lahf
repnz
mov
aam
mov
jecxz
mov
ja
mov
inc
xor
lcall
mov
jg
scas
cmp
mov
lea
adc
ljmp
lock
add
sbb
call
fs
pop
pinsrw
dec
jp
aad
popa
fmuls
in
fsubrs
mov
in
lea
pop
shrb
and
jb
roll
add
jl
dec
cli
fmuls
mov
jb
cmp
mov
mov
fs
adc
mov
jmp
test
jo
mov
xchg
int
fs
or
testl
rep
dec
imul
in
outsb
mov
insl
sti
jbe
mov
fwait
pop
fs
lock
out
test
jmp
lahf
iret
testl
mov
inc
add
pop
xchg
mov
add
test
cli
sbb
fmul
dec
fcoml
pop
xor
inc
or
pop
adc
sbb
push
mov
ret
dec
je
iret
leave
cmc
addl
loopne
mov
add
pushf
sbb
jmp
adc
ja
lock
int3
fcomps
inc
push
mov
push
and
cmp
xchg
jb
and
jle
jle
rcrb
push
mov
ljmp
gs
jns
in
fs
test
cmp
jmp
cli
and
xchg
popf
adc
jg
xor
fldl
ss
or
cmpsb
adc
mov
addr16
inc
nop
aam
fildll
cmpsb
outsl
mov
cmp
arpl
les
xchg
ret
pushf
shr
sub
mov
xchg
sarb
push
sub
add
call
inc
sub
and
fadds
mov
xchg
and
xlat
shlb
fbld
movsb
in
cwtl
push
push
add
clc
sti
push
xor
bound
movsb
jecxz
pop
aaa
xchg
jg
dec
mov
xor
shll
cmc
mov
and
jge
lret
inc
mov
jne
mov
lret
adc
mov
ja
fldt
cmp
popf
inc
mov
clc
ret
add
jno
je
pop
pop
xchg
xor
or
sub
adc
das
test
scas
adc
push
jl
dec
notb
in
and
in
inc
imul
adc
rcrb
popf
inc
shl
ret
inc
dec
push
data16
bound
push
or
jecxz
fadds
cmc
jne
xchg
in
xor
movsl
add
leave
mov
mov
pop
shl
sub
cli
pop
push
loop
or
mov
test
jne
push
sub
cltd
jmp
lahf
fisubrs
xchg
out
hlt
rorl
out
sub
aaa
lcall
subb
fwait
or
xchg
rep
and
fwait
es
xchg
call
sarl
popa
out
inc
je
cmp
xor
in
push
dec
mov
popf
pop
stos
psubusb
sti
adc
push
mov
out
dec
xchg
and
add
jl
sarl
xor
fwait
std
pop
dec
std
pop
mov
fcmovbe
sbb
push
test
inc
mov
imul
xor
mov
iret
cmp
sub
int3
push
mov
les
push
inc
pop
idivl
pop
xor
inc
xchg
sahf
sbb
adc
xor
push
aas
pop
mov
xor
mov
stc
ss
shrb
pop
cltd
push
push
inc
xlat
push
inc
add
sub
daa
sbb
xlat
pop
repz
or
xor
out
cmp
jne
cmp
movsb
or
or
adc
push
lock
sub
mov
ret
and
in
sub
loopne
in
test
in
xor
shlb
shrb
aam
sub
push
decl
rolb
icebp
data16
loopne
inc
push
sti
fistps
gs
fnstcw
lds
push
adc
scas
pop
xchg
clc
push
cmpsb
mov
stos
xchg
test
or
nop
daa
mov
in
fbld
xchg
cmpsb
test
notl
gs
loopne
in
jge
xchg
fsubrs
jp
or
dec
scas
bound
ret
mov
sti
xchg
lock
sub
pusha
inc
jecxz
inc
in
mov
push
push
jl
jo
fwait
push
pusha
aaa
test
jecxz
and
adc
or
pop
push
fsts
loopne
sub
scas
sbb
dec
sbb
fisttpl
or
add
das
loop
jns
aaa
mov
fsubrp
jo
inc
les
popf
jo
xor
or
nop
scas
in
lea
mov
enter
out
leave
shl
jecxz
nop
mov
sub
int3
adc
shlb
sub
test
push
push
inc
inc
jl
jle
popa
gs
fnsave
xchg
je
mov
jmp
scas
outsb
aas
js
xor
inc
adc
movsl
std
pop
mov
xchg
dec
loope
jns
jge
aaa
lcall
and
sub
xor
fsts
int
jne
lock
rcr
and
orl
inc
pop
pop
out
outsl
mov
or
cltd
or
repz
pop
cmp
test
scas
outsb
inc
add
push
leave
jg
test
cmpsb
adc
lret
mov
push
test
xor
mov
pusha
movsl
gs
insl
xchg
das
inc
xor
fs
dec
jns
mov
and
hlt
sbb
sub
inc
rorb
outsb
add
scas
pop
sub
adc
sbbl
ja
lods
in
adc
cltd
cmpsb
hlt
mov
lods
and
or
out
insb
adc
inc
mov
aam
iret
dec
cld
push
lds
popa
mov
lret
lods
les
cli
cld
inc
lds
cmc
ret
pop
mov
jae
adcb
dec
sarb
scas
fisubl
repz
xchg
leave
fidivl
inc
adc
int
xor
push
jne
lahf
pop
add
loope
sub
add
xchg
fdivrl
iret
es
outsb
adc
stos
cmp
cld
xor
jnp
push
dec
lock
push
pop
dec
xchg
dec
xchg
imul
arpl
stc
daa
gs
test
pop
shrl
lods
push
cmp
dec
cmc
cs
mov
jbe
inc
fidivs
sub
sub
or
add
testl
xchg
jg
cld
adc
and
dec
mov
adc
xchg
roll
push
loope
xchg
or
ja
test
mov
or
int3
jge
stos
and
sbb
mov
sbb
mov
testl
jne
cmp
lret
mov
add
cmp
add
jmp
jbe
push
pop
sbb
clc
scas
jns
addr16
pop
pop
jge
shrb
add
pop
lods
outsl
adcb
and
ficoms
mov
repnz
pop
sub
aad
sbb
jae
cmp
cld
add
pop
mov
push
xorb
out
das
inc
cltd
pop
jl
pop
es
dec
dec
int3
add
aam
les
jb
scas
inc
sub
cmp
push
aaa
mov
mov
les
mov
test
jle
pusha
push
psllq
or
mov
das
fwait
ljmp
jle
cmp
xchg
divl
add
cltd
adc
lea
xchg
flds
or
int3
push
repz
mov
xchg
pop
daa
inc
pop
sub
repz
sahf
xchg
in
pop
sbb
js
or
imul
adc
iret
cmp
xor
addb
sbb
sbb
cmp
stos
shrl
or
stos
loope
lock
xchg
lcall
scas
fxch
and
fildll
sarb
shrb
inc
out
insb
fcoml
repz
cld
inc
popl
jp
lods
add
fsubrl
in
inc
aad
cmc
fwait
add
out
xor
xchg
add
add
scas
fldt
xor
jo
mov
xchg
leave
das
inc
push
mov
fcomps
les
xchg
cmp
pop
shll
test
pushf
xor
leave
inc
out
xor
aaa
mov
es
push
insl
outsl
sub
sub
and
xchg
fsubrp
or
xlat
inc
sbb
in
subb
push
into
popf
adcl
push
in
js
xor
lcall
dec
or
sar
push
aam
addr16
shl
movsb
jb
hlt
add
dec
mov
jb
fs
or
pop
inc
test
fdivrl
sbb
idivb
repz
ds
shrl
js
push
xchg
sub
dec
cmp
data16
movsw
dec
test
cmp
pop
cmp
ja
insb
mov
ljmp
sub
imulb
outsl
pusha
in
xchg
jmp
and
jae
pop
and
pop
mov
sahf
out
paddq
in
pop
sub
daa
dec
fsubp
sub
mov
adc
dec
jb
outsl
cld
ss
daa
in
jbe
jae
mov
mov
scas
jmp
xor
cmp
xor
mov
pop
cmpl
sbb
out
xchg
sti
cltd
mov
shl
out
popf
jecxz
enter
xor
in
scas
mov
mov
dec
pop
test
leave
test
clc
rcrb
xchg
mov
mov
stos
mov
lds
leave
cmp
ret
and
nop
in
fadds
decl
inc
mov
jge
or
cld
outsl
fimuls
xchg
das
mov
lea
sbb
dec
dec
stc
sbb
out
mov
cmpsl
xchg
xchg
cmp
imul
test
mov
push
mov
jae
dec
xlat
cmp
lods
mov
idivb
jae
in
loope
scas
add
add
leave
test
clc
push
sarb
iret
xor
and
sbb
push
cltd
out
lret
xchg
insl
int3
adc
and
sub
es
sarb
jge
adc
push
push
fiaddl
int
ret
mov
das
fwait
push
lds
scas
or
and
push
inc
out
into
mov
aaa
push
add
stos
and
cmpsl
aad
popf
std
cmp
scas
push
lcall
sti
push
mov
adc
sub
int
push
inc
insb
out
aam
fstpt
push
in
push
and
fwait
xchg
aad
xor
push
xchg
div
dec
popf
xchg
adc
lds
shlb
ror
ss
xor
shlb
adc
clc
jbe
jp
fldl
mov
and
adc
data16
mov
cli
mov
and
out
pop
mov
in
iret
or
addb
shll
mov
xchg
cmp
ljmp
pop
add
sahf
notl
and
push
idivl
mov
ret
mov
int
mov
jno
stos
lcall
nop
xchg
add
adc
outsb
aas
gs
cmp
cmp
gs
jmp
sub
mov
adc
jne,pt
pop
in
add
and
mov
scas
mov
and
xor
ret
dec
incb
and
pop
fstl
cmp
leave
cs
in
mov
cs
out
inc
ss
adc
mov
jecxz
sub
test
and
xor
out
mov
mov
add
test
nop
adc
push
daa
addl
test
stc
xor
jmp
pop
inc
push
pop
sbb
pop
xor
and
loope
xchg
leave
mov
fdivl
inc
mov
fs
fisubs
vshufps
adc
pop
or
cmpb
pop
out
das
aam
inc
jp
outsb
je
dec
test
aas
push
adc
xchg
cmp
push
js
out
in
add
push
mov
lret
in
mov
push
daa
jl
jns
jp
push
stos
divb
inc
scas
mov
push
fcmovbe
stos
es
rol
rcrb
inc
loope
jb
dec
mov
test
sbb
push
xor
xchg
pop
gs
repz
xchg
xchg
divb
mov
or
dec
sub
cmp
hlt
cli
loop
sub
xlat
lods
shrl
fildll
mov
or
dec
lcall
out
sbb
pop
jmp
stos
jne
push
or
mov
shl
mov
cltd
jmp
mov
jns
sub
pop
ret
mov
gs
push
jmp
or
push
ror
cli
jbe
mov
add
ljmp
in
pop
aaa
cmp
testb
xor
adc
mov
add
and
popa
roll
inc
loope
xor
nop
inc
shl
sbb
mov
xchg
inc
cmp
lea
mov
and
mov
shll
cli
lods
andps
in
in
or
mov
mov
mov
iret
inc
ficompl
xor
push
xor
stos
or
cmpb
addl
lea
mov
pop
mov
pop
out
and
lret
xor
and
or
push
pop
xor
fs
push
fildl
add
push
cmp
dec
rcl
cmpsl
lods
jns
jmp
sub
mov
and
sti
push
fdivrl
into
jnp
subl
jb
push
mov
mov
push
cmp
xlat
das
fdivrs
push
in
xor
push
sbb
clc
inc
fildl
out
mov
fsubs
push
mov
fiadds
adc
push
mov
fwait
bound
test
loopne
gs
cmc
insb
repnz
enter
popa
ror
inc
adc
and
add
xchg
xchg
inc
negl
andl
mov
inc
fisubs
stos
and
fnstsw
add
and
ficompl
enter
push
imulb
mov
hlt
fs
popf
xor
push
aas
pop
shl
in
addr16
mov
sbb
or
dec
cli
pop
bound
int3
cmp
je
inc
push
outsb
lock
imul
xlat
xchg
adc
add
jl
or
xor
dec
xchg
cmp
pop
ja
clc
outsl
je
subb
sub
dec
bound
cmp
cltd
add
fimull
xchg
es
dec
fs
mov
pop
repnz
jecxz
scas
xor
lods
mov
int3
jecxz
test
outsl
xchg
insl
ret
pop
stc
test
pop
mov
sbb
mov
add
xorps
lcall
loop
call
int
or
sbb
push
mov
int3
js
dec
mov
xchg
cmpsl
in
sub
xchg
jge
adc
pop
mov
or
push
and
ret
pop
dec
xchg
imul
test
movsl
adc
mov
push
xchg
cli
mov
inc
mov
lds
mov
call
xor
fldl
loope
test
xlat
sub
ret
aas
sub
outsl
jg
pushf
sbb
jae
aam
and
lret
in
mov
les
xchg
pop
pop
push
jae
xchg
adc
bound
mov
inc
leave
push
jle
imul
dec
pop
and
scas
sbb
in
rclb
jns
fstpt
lahf
sbb
jecxz
ss
push
xchg
cmp
ret
xchg
xchg
xchg
cwtl
adc
test
or
std
jp
shlb
xchg
jno
pop
mov
mov
push
pop
aad
xchg
inc
mov
in
test
xlat
mov
dec
inc
pop
aaa
jns
aad
pop
jecxz
cs
repz
outsb
or
movsb
jne
loope
sbb
rcll
mov
xchg
aad
shll
sbb
jmp
mov
push
or
ds
push
adc
data16
stos
cmc
std
lds
pop
add
xor
aam
xlat
or
mov
adc
imul
and
cmp
call
movsl
push
lret
pop
jmp
mov
jne
mov
in
sahf
push
mov
mov
out
jmp
push
adc
mov
xchg
repz
jno
adc
push
mov
leave
inc
lock
inc
add
adc
xor
mov
into
das
push
int3
mov
adc
lret
cld
bound
pop
add
inc
out
xor
or
sub
xor
push
or
sub
push
ss
cli
sub
push
cmp
adc
call
fdecstp
push
xor
push
jg
jecxz
scas
enter
pop
test
inc
xor
add
xor
push
dec
mov
add
ljmp
dec
sbb
add
dec
jae
or
xchg
xchg
or
cmc
cmpsl
scas
into
cld
mov
addl
ljmp
std
cwtl
push
ud2
inc
or
stc
aas
fsts
daa
pop
shl
jle
cli
xchg
imul
out
fisubrs
mov
or
jl
leave
push
lret
mov
dec
mov
sbb
jmp
pop
dec
popf
movsb
daa
add
ret
outsl
shlb
hlt
and
ss
or
adc
cmpsb
out
adc
or
sbb
mov
cmp
dec
and
or
stos
push
test
fs
pop
inc
xchg
adc
ds
adc
aam
jle
outsb
insl
jmp
jne
inc
jle
enter
popa
aas
sbb
hlt
pop
dec
push
and
add
cmp
js
hlt
aad
mov
sbb
jno
xchg
lods
or
mov
nop
xchg
ds
shrl
fisubs
cwtl
in
xor
in
cld
cmpl
rorl
imul
in
repnz
sbb
xchg
scas
mov
ds
mov
sbb
inc
repnz
pop
jne
daa
out
arpl
clc
xchg
subl
mov
gs
lret
int
sub
fsub
repz
movsl
lds
mov
xchg
xchg
rcrb
jecxz
rcrw
xchg
jecxz
sbb
lock
mov
and
dec
and
leave
jecxz
push
push
or
xchg
fdivrs
fbstp
lahf
pop
ficomps
testb
cmp
ret
xchg
xor
cmp
mov
mov
cmpsl
pop
fwait
jb
or
lock
dec
inc
pop
rorb
out
mov
sbb
cmpsb
sub
test
ret
shl
jg
inc
js
xchg
daa
jmp
push
xor
ror
aas
pop
inc
inc
in
mov
inc
mov
mov
xchg
stc
iret
imul
pushf
or
mov
dec
xchg
push
mov
sbb
fiaddl
xor
outsl
mov
push
xor
movsb
sbb
jns
imul
in
inc
idiv
pop
.byte
sub
add
add
add
jb
gs
xor
cs
insb
add
inc
or
dec
inc
or
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
pop
sub
mov
lea
mov
lods
clc
jmp
jmp
enter
sarb
call
add
sub
dec
jmp
ret
sub
clc
sub
jmp
ret
jmp
jmp
loop
aaa
icebp
ror
lock
mov
dec
inc
push
loopne
ret
lret
mov
or
lret
int3
push
push
movsl
notl
rcrb
mov
mov
xchg
or
jecxz
push
pop
sub
jae
hlt
js
jl
push
sbb
hlt
sub
inc
pop
clc
sub
dec
dec
inc
inc
imul
jmp
xlat
sbb
mov
loopne
movsb
out
bound
daa
bound
sub
sub
pop
jb
mov
inc
ret
mov
lret
fists
or
arpl
ljmp
scas
jle
push
test
out
lods
test
out
lea
xchg
stos
insb
push
add
jo
sti
clc
lock
mov
add
jge
add
addl
push
mov
mov
xchg
xchg
xchg
sbb
cltd
daa
and
ficomps
movsb
sub
jmp
xlat
out
mov
add
mov
aas
cmp
loop
mov
add
stos
add
dec
sahf
repz
pop
push
test
adc
mov
popa
pop
mov
fs
or
jecxz
add
out
jb
fstl
out
xor
fldl
clc
stc
addl
xchg
pop
pop
or
rorl
xchg
loope
push
push
daa
sbb
sbb
push
and
and
lahf
aaa
mov
aaa
mov
cmp
jo
xor
xor
cmp
mov
adc
inc
mov
adc
lahf
push
popa
push
push
fists
sbb
cwtl
pop
pop
ficompl
mov
repz
pushf
xchg
stos
imul
lcall
mov
cmpsb
rolb
or
mov
nop
push
dec
mov
cltd
cltd
xor
ficomps
movsb
movsl
cmpsb
adc
adc
or
mov
shl
stos
xor
lds
or
push
mov
data16
cmp
shrl
add
fxam
fwait
push
sub
loop
imul
inc
ds
in
adc
xor
jle
add
dec
loope
sti
cld
std
xchg
pusha
xchg
mov
sub
or
pop
inc
roll
inc
out
push
psubq
adc
mov
mov
xor
xor
ja
hlt
cmp
cmp
es
inc
inc
inc
ror
dec
push
dec
cltd
or
mov
dec
rcrl
dec
push
push
push
mov
fistpl
aad
dec
add
call
fsubp
jae
add
jae
mov
fsub
call
jle
addb
mov
ljmp
lret
hlt
add
xchg
jle
push
aam
std
std
sti
adc
mov
pop
stos
sub
test
lods
xchg
add
cmp
sarb
mov
mov
cmp
mov
leave
enter
add
jnp
sarb
test
fcmovnb
aam
sahf
lahf
test
shrb
sbb
mov
mov
mov
jecxz
gs
das
dec
outsl
inc
bound
sbb
push
movups
lahf
mov
ds
sbb
pop
loope
sub
and
imul
push
dec
mov
cmp
cmp
inc
mov
dec
jecxz
outsl
mov
push
adc
push
sub
pop
gs
push
in
mov
push
imul
scas
jo
testl
jns
out
cmp
stos
ret
dec
jno
adc
mov
nop
jl
aam
push
lcall
arpl
sbb
test
sbb
cmc
mov
js
mov
orb
or
and
push
ljmp
pop
xchg
mov
addr16
ret
fbstp
movsb
cmp
outsl
aad
fists
sub
push
mov
cmc
mov
cmp
cmpl
mov
das
dec
or
or
push
sbbl
xchg
and
push
push
addr16
arpl
sbb
sub
in
lcall
repnz
outsb
das
mov
sti
pop
ja
and
cmp
inc
ret
mov
or
adc
push
mov
push
scas
jecxz
lods
lods
lods
mov
hlt
mov
mov
outsb
rol
push
insb
insl
outsb
enter
clc
inc
pushf
mov
jl
jp
lock
add
cmpsb
ret
adc
arpl
nop
jp
jecxz
push
xchg
ret
cwtl
sbb
out
fwait
xor
enter
arpl
sbb
add
stos
mov
scas
shlb
cmp
cli
mov
mov
aaa
into
dec
ret
enter
inc
fdivrl
iret
aad
xlat
pop
dec
fadd
cli
xor
insb
popf
adc
pop
jmp
sbb
mov
fidivrl
cmc
js
sti
std
push
pop
jle
add
add
mov
push
pop
or
adc
and
dec
fcomps
adc
sbb
sub
sub
lahf
inc
mov
xor
mov
roll
jge
add
ds
xchg
push
push
dec
dec
cmp
cmp
push
push
push
inc
pop
and
stc
xor
xlat
insb
push
addr16
leave
push
imul
sub
xchg
mov
imul
ja
jns
push
sub
inc
test
enter
xchg
jne
or
add
lods
sbb
push
clc
stc
mov
lret
pop
enter
les
cwtl
ret
xchg
gs
lock
movsl
mov
push
adc
sbb
popa
adc
sbb
mov
or
testl
in
or
cli
rolb
divl
push
xor
sbb
add
lcall
cwtl
stc
or
adc
pop
mov
mov
mov
in
push
add
leave
sbb
aas
push
mov
clc
cli
cld
std
dec
dec
adc
cmp
inc
adc
sbb
lock
cmpsb
sub
mov
out
repnz
mul
cli
cld
adc
xchg
fs
and
in
xchg
popf
push
lock
pop
jne
test
mov
push
and
in
in
sti
mov
and
cmp
imul
enter
add
jge
jg
cmp
lods
les
mov
nop
xchg
pop
adc
xchg
pushf
cltd
lcall
add
stc
xor
ss
scas
scas
mov
imul
cmp
mov
rol
mov
enter
int3
test
iret
rcl
xor
jecxz
sbb
fnstsw
loope
jecxz
in
out
jmp
and
lock
sub
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
fstp
rcr
mov
loopne
jbe
js
shl
lret
cmc
in
out
in
ljmp
lea
or
add
or
or
sahf
lahf
mov
repnz
icebp
adc
push
pop
hlt
mov
mov
mov
xor
add
enter
cs
cmp
inc
ss
xlat
fsubs
inc
dec
ds
and
in
out
cmp
dec
xor
push
lock
repnz
cmp
imul
pushaw
dec
data16
add
add
add
jb
jnp
push
insb
jp
jp
adc
adc
adc
mov
jnp
addb
xchg
mov
add
ja
ret
