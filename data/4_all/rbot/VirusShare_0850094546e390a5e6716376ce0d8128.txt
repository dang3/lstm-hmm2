aam
adc
and
fildll
in
fnstenv
pop
mov
imul
adc
xor
outsb
push
pop
cmp
xchg
das
std
dec
scas
jmp
mov
mov
push
shlb
pop
sub
imul
icebp
jne
jecxz
sub
sahf
or
cltd
cmc
mov
hlt
xchg
sbb
outsl
jae
sti
idivb
xchg
push
pop
xor
lods
lock
adc
fldcw
or
dec
xor
mov
mov
xor
arpl
loopne
sub
in
pop
pop
and
adcb
sti
rorl
int
cmp
sbb
cmp
push
jecxz
lods
mov
pop
push
cmpsb
jnp
adc
adc
jo
xor
jns
lret
xchg
xor
mov
add
in
pop
out
iret
mov
dec
fisttps
cmpsl
inc
jo
jge
shl
stos
shll
hlt
cmpb
sbb
xchg
or
mov
lock
and
addr16
sar
xchg
and
and
add
mov
inc
push
xchg
dec
fst
xchg
mov
xchg
in
test
sti
mov
loopne
mov
sub
dec
pop
mov
into
xlat
or
sbb
jmp
pushl
dec
jmp
xchg
cmc
sub
das
cltd
subb
xlat
cmpsb
rep
fwait
sbb
pop
into
and
fisubl
xchg
in
je
cmp
inc
xchg
mov
das
fidivrs
jecxz
test
pop
mov
jnp
jp
test
bound
sub
loop
pop
mov
out
icebp
ljmp
mov
rcl
filds
roll
stos
pop
lock
cmp
and
mov
cmp
pop
mov
jge
aas
and
and
outsb
outsb
sub
les
stc
sub
cwtd
stc
pop
fcmovu
pop
dec
cmp
test
cld
ret
mulb
stc
inc
pop
add
dec
pop
push
ja
pusha
push
lods
pusha
jg
cmp
dec
xchg
or
je
push
icebp
xor
mov
idiv
je
cli
push
in
imul
jecxz
push
mov
mov
iret
lcall
popa
jo
push
jo
inc
and
add
mov
pop
jecxz
js
lods
push
and
popa
mov
lret
pop
lods
movsl
push
fsubp
jmp
xchg
jecxz
pop
loopne
mov
cmp
movsl
cld
inc
data16
xchg
jne
xchg
adc
mov
repnz
ret
jbe
test
stos
test
js
dec
cmpsb
ret
lahf
ret
add
sahf
xor
cltd
pop
fcoms
sti
or
icebp
frstor
pop
sub
mov
adc
loopne
mov
sbb
xor
mov
cld
mov
popa
andl
addr16
movsl
and
sub
mov
lcall
adc
bound
enter
sub
mov
pop
cwtl
mov
add
iret
testl
and
rolb
add
or
addb
pop
js
fdivrl
nop
incl
ja
popa
repz
and
mov
push
and
push
cli
mov
jl
lret
and
or
adc
fidivrs
rclb
push
xor
inc
xor
add
mov
mov
inc
fwait
inc
pop
inc
movsl
enter
adc
out
push
cwtl
test
mov
mov
jecxz
or
adc
imul
xchg
sub
sahf
fs
lock
adc
mov
inc
xor
lcall
push
pop
inc
cli
pop
mov
or
cmp
dec
xor
xor
xchg
jae
leave
push
dec
imul
cmp
push
cmp
cs
dec
lret
mov
repnz
imulb
popa
mov
shrl
push
jecxz
inc
loopne
xchg
stos
add
mov
lods
xor
popf
leave
aam
ficoms
movsl
or
and
lock
mov
rol
lock
cmp
adc
jecxz
mov
inc
shlb
lret
rcrb
dec
jg
sbb
adc
fninit
mov
and
xor
incb
mov
dec
in
dec
scas
mov
mov
cmc
add
jmp
leave
lcall
dec
xchg
sti
push
aam
lret
orb
rcr
pop
fiadds
mov
adc
adc
into
cvtps2pd
lods
push
int3
jno
jno
push
pop
jp
pop
lcall
stos
enter
test
pop
inc
inc
pop
lock
sbb
imul
arpl
jno
mov
adc
ljmp
xchg
cld
jnp
mov
sahf
js
gs
sahf
inc
fwait
and
mov
je
imul
mov
xor
popf
clc
lods
dec
mov
scas
or
mov
pop
mov
push
sub
sub
lahf
jle
hlt
icebp
mov
adc
xor
mov
addr16
sub
aas
sarl
and
stc
xor
push
push
lea
push
push
push
push
push
pop
loop
jecxz
js
insl
fdivs
ror
lcall
test
pop
pop
jl
push
test
pop
sub
cmp
clc
mov
xchg
cld
push
inc
pop
push
jg
push
cmp
pop
pop
jl
push
push
cmc
pop
pop
ja
jp
je
jge
or
cld
stc
call
shl
push
push
push
neg
neg
pop
pop
pop
nop
test
add
mov
push
sub
pop
cmc
and
clc
sub
push
add
push
pop
pop
cmp
inc
dec
jmp
xchg
in
sarb
ljmp
inc
xchg
aad
test
rcll
stc
out
in
out
lea
loop
jecxz
rolb
add
add
pop
jnp
jle
rol
cld
push
sub
pop
nop
push
add
pop
push
jbe
add
pop
pushl
pop
push
push
and
pop
pop
push
cltd
pop
jne
push
mov
pop
cmc
jo
or
sub
jbe
push
rol
pop
nop
push
mov
pop
clc
test
cld
test
jne
jmp
push
call
dec
cwtl
movsl
ret
imul
sti
inc
data16
add
pop
push
add
pop
push
call
add
jns
inc
outsb
jne
mov
rcl
adc
adc
cmc
sbb
nop
xor
es
enter
xchg
inc
dec
add
pop
push
mov
push
xor
pop
pop
add
stc
cld
push
pop
cmc
loop
jecxz
jmp
dec
pop
les
pop
xchg
xor
ss
rorb
xchg
push
jecxz
mov
pusha
mov
inc
lcall
cmpsb
xchg
fbstp
hlt
aam
call
stos
sbb
inc
jno
push
push
push
lea
pop
pop
pop
cld
push
mov
push
xchg
movsl
xchg
mov
pop
or
push
push
pop
add
pop
xor
push
xor
pop
push
movzbl
cmc
mov
cmc
push
dec
pop
jno
je
jnp
push
mov
pop
push
push
jg
and
pop
pop
and
jb
jb
push
mov
pop
push
je
stc
pop
stc
push
xchg
pop
loop
pop
sub
xchg
je
cmp
rol
push
jge
xor
pop
push
push
test
pop
pop
dec
jne
jmp
nop
cs
jmp
xchg
das
jmp
pop
mov
adc
mov
cld
pop
mov
loop
enter
cmp
add
mov
les
inc
bound
movsb
pop
xchg
or
fimuls
cwtl
rcll
pop
mov
mov
stos
xor
jnp
call
lea
dec
sti
jae
xor
xor
je
push
pop
cmc
cmc
clc
mov
aaa
cmp
idivl
cmp
testb
lret
test
inc
inc
sahf
cmp
mov
xorl
mov
and
aad
imul
and
pop
int
pop
rorl
int3
mov
push
xchg
push
imul
nop
sbb
mov
addb
push
rclb
in
sbbb
popf
or
in
xchg
daa
stc
xchg
jecxz
adcl
or
pmulhuw
or
sbb
in
lock
addb
adc
es
push
xor
in
mov
mov
pop
sub
je
xlat
movsb
out
iret
mov
dec
cmpsl
mov
adc
xchg
jl
mov
cmp
mov
rcr
movsb
fadds
test
push
jb
xor
pop
push
pop
or
pop
sub
mov
jbe
lea
stc
xorl
xor
pop
add
fbstp
stc
andl
xchg
test
mov
dec
cltd
pop
inc
lea
in
repz
ficoms
and
stos
push
mov
jle
fistpll
mov
sbb
imul
aam
sbb
add
jb
inc
jle
and
ds
pop
lcall
pop
imul
adc
sarl
les
sahf
ficoms
outsb
add
sti
xor
dec
in
rcrb
movsb
daa
notb
inc
mov
xorb
pop
cs
xor
inc
les
rcr
pusha
jecxz
xlat
stos
movq
inc
mov
mov
movsl
sbb
lea
aas
cltd
ds
xchg
imul
jo
pop
push
dec
call
mov
inc
enter
popf
dec
pop
bound
dec
cmp
mov
xlat
rorl
mov
sti
sbbl
sub
or
jmp
clc
pop
test
outsb
ds
andl
adc
out
xor
mov
adc
test
dec
mov
push
ret
ficoms
lea
rcrb
insb
into
nop
mov
inc
mov
adcb
cmc
das
lret
add
jmp
dec
inc
stos
leave
test
inc
jno
lret
mov
push
out
adc
pushf
lahf
pop
sub
add
sub
fsubl
inc
bound
dec
stos
push
test
movsb
jnp
adc
push
adc
or
loop
movsb
mov
enter
jb
xor
xchg
cmpsb
adc
inc
fdivl
mov
aaa
xchg
lret
xor
sti
test
mov
inc
daa
add
icebp
leave
flds
xchg
sahf
mov
xchg
sbb
push
scas
aas
dec
into
fcmovnbe
sub
subl
and
mov
popf
jnp
adc
jns
dec
and
pop
sarl
xchg
js
scas
ret
or
cmpsl
lds
xchg
gs
pop
pop
sbb
jo,pn
xor
sub
adc
mov
or
push
and
popa
test
cmp
fld
jle
cmpsl
cwtl
mov
xor
stc
xlat
loop
dec
pop
mov
stos
mov
addl
add
jae
sbb
sti
fidivrs
push
cmc
in
fcompl
sub
pop
rolb
stos
or
movsl
jne
or
and
pop
mov
cld
xor
cmc
sub
lea
add
lret
pop
inc
adc
mov
je
das
insb
pop
mov
add
test
sbb
inc
fs
jp
jne
das
sub
in
mov
cmp
int
scas
loop
cmp
es
bnd
in
out
aas
sbb
ss
lret
aam
mov
cmpb
clc
gs
insl
imul
test
testb
test
add
jo
mov
shl
loop
aas
scas
mov
add
pop
cld
push
add
cmp
xchg
sbb
xchg
pop
ds
xchg
fdivp
mov
aas
lahf
push
xchg
xor
jns
insb
jmp
and
push
inc
out
or
cmp
lret
xchg
cli
lods
adc
into
nop
f2xm1
jl
dec
imul
add
ljmp
inc
dec
cmp
mov
clc
mov
in
dec
hlt
nop
jecxz
or
xor
loopne
mov
ret
bound
jg
pop
ret
cmp
fs
and
inc
ljmp
imul
and
xchg
adc
repz
mov
in
xor
pushf
insb
pop
jmp
add
jmp
sti
inc
stc
mov
mov
mov
lcall
pop
lcall
loopne
adc
enter
imul
cmp
andl
jge
push
cmp
lods
movsb
fcomi
bound
xchg
cwtl
dec
icebp
lds
mov
inc
insb
cs
add
arpl
fidivl
sbb
std
xchg
pop
mov
scas
jae
data16
lret
cmpsb
lret
loop
jp
adc
sbb
fwait
dec
cmp
xchg
jb
popa
xchg
sbb
aam
pusha
sub
push
shr
sbb
lret
inc
sbb
or
jl,pn
jp
push
div
sub
mov
mov
mov
sub
inc
jno
aas
cmpsl
mov
push
xor
jns
pop
test
fsubrs
and
rclb
jge
fwait
cmp
jae
lret
push
cmp
sbb
pop
jmp
push
dec
push
pop
push
je
loope
add
in
push
jb
stos
es
push
call
addr16
fs
jb
pushf
adc
add
es
adc
jb
jno
mov
pop
pop
loopne
sbb
push
negl
inc
push
push
mov
out
pop
mov
addb
mov
das
mov
and
mov
mov
imul
or
jae
or
mov
pop
add
sub
lahf
test
andl
inc
mov
scas
movsb
xchg
repz
mov
mov
stos
push
pop
xchg
fnstsw
ds
mov
rcrl
shlb
cli
stc
sbb
cli
push
xchg
sub
incb
call
jecxz
adc
ret
or
mov
mov
inc
and
sti
push
or
sbb
xchg
mov
push
mov
imul
sarl
xchg
sbbb
mov
insl
dec
cwtl
cmp
sub
hlt
adc
push
rorb
or
and
add
es
aaa
add
xchg
jge
mov
sbb
cmp
adc
fwait
mov
sbb
push
adc
loopne
jbe
out
mov
out
inc
xchg
ljmp
sub
mov
lret
dec
icebp
jo
push
inc
in
push
stos
cmpsb
aad
iret
movsb
jmp
mov
adc
dec
out
push
sub
mov
mov
imulb
push
jg
inc
adc
push
in
dec
cs
notl
jnp
fwait
mov
fistps
push
add
lds
mov
cmpsb
addl
loop
push
jle
jbe
pop
mov
dec
fnsave
ja
out
hlt
pop
cmp
or
push
mull
andb
jo
cmp
test
ret
cmp
std
clc
pop
sti
sbb
leave
push
push
dec
punpckhbw
push
movsb
or
cs
cld
movsb
pop
fwait
es
mov
call
xor
adc
nop
sub
scas
insl
aam
sbb
imul
arpl
mov
fnsave
ret
arpl
psrlq
xchg
or
jns
arpl
xlat
in
dec
shrl
movsb
or
jl
pushf
mov
mov
mov
cltd
pmuludq
mov
dec
push
lret
xchg
xor
out
inc
xchg
arpl
mov
push
hlt
lock
dec
pop
imul
jecxz
and
inc
in
adc
sti
or
icebp
adc
add
push
imul
lods
add
mov
outsb
or
in
lods
and
notb
cs
js
mov
mov
dec
inc
pop
bswap
pushf
aad
pop
int3
add
cld
cli
loopne
aad
xor
mov
ret
sbb
dec
leave
int3
pop
ljmp
imul
testl
stc
add
in
cmp
repz
xchg
and
pop
movq
mov
xor
repz
push
jp
sahf
mov
cmp
push
add
and
lret
maskmovq
idivl
push
pop
and
aad
push
pushl
fstl
mov
repnz
dec
and
mov
fisttpll
ret
cmp
mov
mov
out
or
fisubrs
push
sbb
cmpsb
mov
sbb
dec
fcmovnb
jbe
push
xchg
jge
mov
push
sbb
sbb
jne
jns
icebp
push
pop
jns
xchg
pop
arpl
je
fcmovu
jle
stos
dec
shlb
fmuls
cmp
inc
jge
or
rdmsr
sub
into
in
pusha
mov
add
sbb
out
mov
mov
sub
pop
fimuls
pop
pop
outsb
aam
jne
jb
dec
clc
int3
lcall
and
out
imul
adc
add
inc
mov
mov
add
daa
add
cmpsb
push
int3
lcall
xchg
sar
rcrb
xorl
js
cmp
mov
add
in
cld
icebp
xlat
pop
sahf
xor
and
push
adc
push
pop
scas
ret
sbb
dec
xchg
inc
mov
lret
cmp
pop
jno
inc
push
jb
cmp
jl
cmp
and
jo
push
mov
inc
pusha
cs
cwtl
mov
mulb
sub
loope
test
push
in
jle
repnz
and
insl
mov
dec
lock
ja
cmpsb
sbb
stos
js
int3
arpl
leave
test
sbb
cmpsb
jbe
mov
dec
push
jno
enter
iret
orb
cmp
pop
lea
adc
movsb
mov
mov
xor
xor
inc
mov
clc
push
out
jae
les
arpl
mov
int
aad
ljmp
jmp
sbb
jmp
cmp
push
inc
xchg
iret
aaa
lock
mov
mov
aaa
out
mov
aaa
xor
pop
mov
fists
adc
and
ja
xor
cmp
xchg
mov
inc
inc
test
adc
scas
imul
rcrb
jecxz
mov
jmp
decl
mov
pop
xchg
mov
sub
jb
inc
or
movsb
jns
mov
sbb
aam
lods
hlt
sarb
faddl
outsl
and
int3
cli
jl
int
fcoms
or
loope
dec
sarb
cmp
push
adc
fsubl
cmp
push
lret
and
iret
inc
xchg
movq
push
xor
lea
adc
out
sub
ficompl
iret
fistl
lcall
xchg
pop
inc
loope
imul
or
mov
sub
addr16
dec
addb
ret
sbb
xor
xchg
movsl
popa
int
outsl
insl
lock
ja
or
push
mov
cmp
pushf
mov
lock
int
and
dec
test
mov
cmc
aad
cs
ljmp
out
xlat
popf
sbb
jp
xor
out
adc
popf
or
shlb
dec
inc
add
test
lret
lds
iret
lods
jno
or
add
lods
jle
lods
mov
imul
xor
inc
stos
inc
and
stc
cli
push
cli
jne
fbld
int3
xchg
pop
cwtl
sbb
frstpm(287
daa
inc
mov
xor
jl
int3
int
xor
sbb
cmc
adc
fwait
jg
mov
inc
mov
push
sub
xor
push
adc
inc
es
out
aaa
data16
jne
xchg
or
pop
pop
jl
es
and
mov
gs
adc
test
xor
popf
adc
popf
icebp
rorb
mov
pop
les
cmp
repnz
sbb
push
push
sbb
test
cltd
xchg
mov
mov
ret
mov
mov
ret
xor
sbb
adc
mov
into
shrl
xor
scas
fs
pushf
insb
jle
cmp
dec
cmpsl
aas
insl
mov
movsb
jns
sbb
cmp
jbe
std
inc
test
jns
out
or
sbb
jo
jnp
aas
or
mov
pop
xchg
lahf
sbbl
cmpsl
bound
mov
ja
jae
movsl
sbbl
jp
fs
addr16
xor
push
and
pop
mov
mov
das
call
or
sbb
sub
inc
cmp
je
mov
jmp
popa
cmpsb
mov
pushf
incb
addr16
add
btsl
push
xorb
sbb
mov
jnp
icebp
fcoml
in
ret
movsl
mov
shll
rorl
imul
mov
rolb
cwtl
push
cs
mov
in
adc
mov
sti
cld
push
divl
adc
outsl
mov
data16
cli
sub
push
insb
xor
in
and
sub
push
add
jno
jbe
ja
dec
scas
ret
add
into
les
mov
iret
pop
nop
out
add
lock
into
mov
xor
ja
lcall
lcall
data16
sub
adc
xchg
push
movsl
stos
push
pmulhuw
aam
pop
arpl
mov
or
addr16
mov
daa
out
cmp
popf
push
fists
or
jno
cmc
mov
xor
ja
fisubs
imul
jg
dec
sbb
test
gs
aas
push
xchg
mov
fdiv
dec
leave
mov
gs
mov
mov
mov
dec
sub
call
adc
mov
pop
sti
andl
ja
loope
mov
mov
cmp
popf
push
lods
arpl
leave
adc
dec
ret
adc
cmpsl
jae
inc
in
es
into
sti
subb
into
sbb
das
push
cmp
cwtl
xchg
sbb
fbstp
add
add
jg
and
dec
mov
jecxz
enter
pop
insb
mov
pop
mov
idivl
mov
mov
into
push
jne
pop
enter
loope
test
adc
xor
cmp
jg
adc
lods
jno
dec
dec
in
in
dec
incb
mov
pop
xchg
je
outsl
sbb
lock
outsl
sub
push
sub
js
dec
adc
jmp
add
or
fmul
stos
neg
cwtl
mov
inc
adcl
outsb
in
dec
mov
push
ljmp
adc
add
dec
jno
mov
xor
push
xlat
xor
mov
hlt
in
int
int
adc
dec
mov
fildl
out
cmc
aaa
test
xor
dec
in
loope
mov
shrb
mov
test
lret
sti
test
jno
inc
imul
mov
mov
fsubs
jb
call
out
and
sub
popf
loopew
or
gs
shr
insb
sub
mov
jge
dec
dec
add
pop
sub
aaa
test
xor
rol
jb
int
jge
scas
out
and
sbb
xor
adc
xor
xchg
mov
into
mov
jp
ds
jb
cmp
hlt
cmp
mov
outsl
or
pop
xchg
fs
clc
lock
andb
adc
mov
imul
btr
xchg
pop
adc
call
mov
out
inc
push
lahf
popf
jle
pop
bound
cmp
adc
insl
mov
out
movsb
adc
adcl
push
sarl
dec
int3
add
mov
inc
out
fstpt
adc
or
inc
out
push
fdivs
cmp
hlt
xchg
jo
mov
jge
push
pop
cmpsl
inc
out
lea
inc
xchg
sub
push
pop
adc
jmp
daa
cmp
pop
sub
jge
mov
jp
mov
pop
push
xor
insb
cmp
mov
push
and
jns
or
xorb
mov
xchg
imul
inc
idiv
sub
lret
cmc
lret
popa
lock
and
leave
ja
sbb
push
inc
addr16
inc
mov
ljmp
lea
imul
mov
fwait
inc
pop
rorb
mov
or
ljmp
push
inc
popf
push
pop
and
clc
xor
pop
add
add
pop
sbb
aad
xlat
and
incl
stos
sbb
fimuls
lcall
add
aad
jb
and
lock
adc
daa
out
addb
je
lcall
mov
push
mov
cmp
sub
test
xchg
popf
jb
and
mov
js
arpl
icebp
sub
pop
and
sub
mov
cmp
adc
insl
push
scas
dec
xacquire
add
notl
push
movsl
sub
test
test
push
sub
in
cmp
pusha
xadd
xor
cmp
lock
movsl
mov
imul
dec
imul
cltd
push
and
dec
outsl
das
aad
pop
gs
mov
iret
and
adc
mov
jmp
cmpsl
imul
call
inc
and
adc
xchg
lods
movsb
or
push
xor
mov
inc
jne
mov
mov
push
fidivs
ret
test
jns
ficomps
adc
add
lret
mov
push
dec
pop
cs
pop
dec
lret
dec
aam
or
aaa
pushf
mov
in
push
loope
mov
int3
xor
dec
inc
dec
shrb
movsl
xorb
fisubs
popf
pop
xor
and
pop
test
mov
cmc
and
xorl
sub
call
es
in
call
lods
imul
in
push
cs
push
or
mov
imul
sub
pop
aad
pop
mov
das
shrb
fstpt
mov
fsubrp
es
jae
xor
rcrb
and
in
xchg
dec
cvtpi2ps
mov
xchg
cltd
mov
xor
les
push
repnz
lret
adc
loopne
cwtl
enter
loope
fadds
cmp
nop
neg
cmp
ficomps
push
cld
prefetch
or
fdivp
fidivrs
ret
push
adcl
cwtl
cmp
and
xchg
outsb
imul
jb
jne
xchg
nop
push
andb
movq
into
adc
aad
lret
jle
dec
and
add
stc
rcll
mov
adc
and
and
sub
lods
ljmp
xor
dec
xor
jecxz
into
jnp
adc
repnz
sub
cli
je
add
jne
aaa
pop
mov
cmp
loop
pop
sub
cmp
mov
jl
jnp
sub
cmp
sbb
out
fisttpl
aam
sbb
pop
xorl
lahf
xor
mov
cmp
js
cmc
inc
fisubrl
pop
les
adc
call
fsubrs
and
sub
dec
in
mov
xchg
mov
aad
aad
dec
pop
mov
pop
mov
jle
insl
push
dec
inc
jno
jno
dec
push
adc
in
xchg
test
rcrb
lret
sbb
hlt
daa
xor
xchg
or
adc
aaa
push
pop
ret
repz
lcall
adc
mulb
repnz
inc
xchg
mov
adc
or
sahf
jnp
sbb
sbb
sbb
mov
xor
test
mov
fcmovne
mov
aaa
add
imul
pusha
outsb
lds
dec
mov
and
xor
push
lods
int3
loope
mov
dec
xchg
test
jecxz
xchg
das
adc
and
aas
loope
sub
std
xchg
aaa
std
mov
and
xor
call
in
jb
mov
je
bound
daa
clc
jl
test
xor
add
or
sarb
imul
or
and
mov
shl
mov
xor
mov
je
add
es
gs
inc
stos
lea
xchg
ficoml
ja
adc
xor
test
inc
movsl
xchg
xor
mov
insb
sub
in
stos
das
sbb
addr16
call
ds
push
fisttpll
jmp
int
inc
adc
stc
pop
jmp
movsb
push
ret
jmp
inc
test
adc
xor
mov
jnp
push
insb
cmp
dec
xor
sbb
mov
popf
repz
fcomi
popf
ficoms
dec
mov
test
addb
rclb
iret
xchg
insl
lcall
ficoml
push
es
pop
and
add
iret
jne
mov
addr16
cmp
scas
repz
adc
lret
dec
int
repnz
pop
sbb
icebp
in
xor
ljmp
cmp
add
adc
std
push
iret
pop
mov
das
adc
cmp
jb
dec
lds
pop
rclb
daa
out
jmp
mov
dec
pushf
pop
and
push
ja
clc
mov
clc
dec
push
inc
aad
outsb
add
hlt
push
repz
lods
adc
jns
dec
dec
push
mov
loop
sbb
stos
out
or
lret
sbb
rol
cmpsl
pop
scas
fsubl
dec
sub
xor
mov
jns
aad
shr
dec
cld
jge
lcall
daa
mov
popf
testb
add
adc
ds
fldcw
or
pop
stos
jmp
js
jge
push
lcall
cli
dec
adc
lret
push
or
push
jbe
cmp
push
xchg
add
mov
int
and
jg
sbb
pop
sub
cs
push
or
inc
mov
cmp
fwait
add
add
push
loope
xchg
adc
push
xlat
les
xor
daa
mov
ficompl
cmp
pop
insb
je
push
lcall
insb
mov
cmp
rcrb
daa
xor
popf
add
cld
cmp
out
cltd
push
adc
ret
sbb
jns
sahf
je
dec
mov
gs
mov
xchg
lret
xchg
or
lods
mov
lea
sbb
arpl
movups
imul
cltd
and
sbb
xchg
aam
lea
add
cmpsl
pop
push
sahf
icebp
add
jl
pop
rep
es
dec
pusha
cltd
addr16
loop
xor
pop
ret
mov
fbstp
jg
imul
rclb
enter
jg
int
push
push
popa
xchg
inc
int
pusha
dec
dec
sub
pop
push
jb
xchg
js
xor
cld
jae
push
sbb
sbb
mov
cltd
pop
shrb
pop
jge
movlps
gs
leave
add
loop
ss
aam
ret
in
xchg
adc
sbb
mov
mov
inc
push
int3
cmp
filds
fistpll
js
mov
jp
mov
and
push
sbb
mov
ret
lahf
sbb
pop
cmp
cs
sub
clc
data16
jno
push
outsb
dec
test
mov
sti
xor
jno
pop
pop
ljmp
and
lea
xchg
test
ss
jp
dec
sub
sahf
xlat
push
sbb
cmp
and
pop
das
test
rorb
jecxz
lds
leave
mov
cwtl
fistl
mov
insb
sti
leave
pop
push
sbb
mov
das
push
sbb
lods
xchg
ret
push
xor
icebp
xor
sub
or
loopne
jae
xchg
pop
lods
insb
cmp
add
pop
pop
fimull
mov
add
test
lahf
add
lahf
addr16
ja
dec
xorl
or
pop
sti
roll
mov
jbe
xchg
pop
mov
sub
jae
filds
daa
jmp
adc
push
insb
lcall
pusha
outsl
mov
ss
xchg
cwtl
and
push
cld
inc
lea
xchg
out
lock
fdiv
sub
xlat
xlat
aad
cmp
adc
dec
adc
movsl
jp
fistl
mov
jge
outsb
rcr
push
add
loopne
jmp
fists
arpl
call
jl
mov
add
mov
lret
inc
push
jne
sbbl
dec
mov
mov
out
test
mul
cmp
cmp
cmp
ret
dec
imul
les
mov
js
mov
and
andb
cld
add
jne
jecxz
mov
in
push
adc
mov
sub
jbe
idivl
stc
jp
add
mov
pop
ja
jge
out
push
data16
or
cmp
pop
outsl
pop
pop
cmpsl
in
loopne
lds
cli
fstpt
outsl
mov
push
xchg
or
mov
xor
out
mov
jp
in
out
sub
lds
add
int3
lock
arpl
dec
subl
in
jne
imul
or
mov
fisubs
lds
or
ss
scas
cmp
and
daa
xchg
or
sqrtps
adc
pushl
dec
sbb
iret
lea
daa
cmp
mov
pusha
sbb
xchg
add
inc
inc
xchg
jno
mov
movsl
insb
insb
cmp
ret
fs
mov
mov
test
inc
pop
ja
and
clc
loop
popa
mov
xchg
xor
push
sub
or
cmp
shll
insl
movsl
hlt
inc
and
ret
cmp
add
push
cmp
add
jle
mov
xchg
ljmp
pop
stos
dec
rcr
dec
inc
repnz
xor
leave
testl
jb
cmc
call
push
js
cmp
inc
inc
xor
stos
mov
mov
pop
sbb
xchg
mov
gs
push
sub
dec
sahf
lret
fisubrs
cmp
mov
jle
pop
into
in
mov
out
mov
jbe
sbb
add
cmp
arpl
dec
push
dec
jno
dec
stos
mov
mov
test
ljmp
dec
test
call
push
dec
in
mov
imul
ja
sub
mov
inc
out
jne
mov
jnp
int
mov
push
jno
jl
pop
add
jne
push
out
rclb
mov
arpl
cmp
xchg
cmpsb
adc
sub
mov
sub
mov
aam
clc
mov
or
mov
aad
call
xchg
test
fbstp
adc
adc
fisttpll
xor
jbe
pop
iret
jmp
imul
xor
pop
hlt
sub
sub
add
leave
push
xchg
adc
mov
enter
scas
adc
or
jp
in
mov
xlat
loop
movl
outsl
or
or
jbe
push
test
stc
jns
jns
xor
sub
mov
sahf
jp
ljmp
pushf
pop
mov
loop
ja
adcb
xchg
outsl
loope
in
aas
scas
jmp
cmc
dec
rorb
mov
cwtl
sahf
pop
in
sub
xor
in
fiadds
nop
aaa
xor
pop
mov
cmpsl
movb
or
test
push
inc
xchg
test
das
je
test
cmp
leave
es
sbb
push
inc
adc
push
ss
sub
jbe
inc
sbb
push
mov
ljmp
loop
rclb
xchg
popf
ljmp
mov
xchg
push
push
orb
mov
sbb
push
mov
enter
outsb
dec
movsl
mov
in
cmpsb
adc
adc
sbb
pop
adc
ss
lcall
sbb
stc
sbb
lcall
adc
sbb
nop
and
xchg
push
mov
es
mov
sub
ficoml
push
jp
lods
xor
stos
pop
test
lcall
nop
mov
dec
inc
mov
push
xchg
jp
in
std
xchg
and
adc
cwtl
call
cmpsb
je
cwtl
mov
pop
movsl
mov
popf
mov
jecxz
adc
jge
sub
add
in
testl
fisubrs
pop
jb
cmp
outsl
dec
mov
nop
jno
repz
stos
xor
shl
je
add
push
rolb
dec
inc
fwait
mov
insl
push
push
icebp
stos
or
lea
daa
nop
nop
inc
jmp
test
pop
insb
hlt
lret
adc
das
test
xchg
int
iret
mov
mov
shlb
dec
sbb
dec
flds
xchg
jecxz
adc
shlb
clc
mov
scas
and
enter
nop
ficompl
inc
push
xor
inc
xlat
jp
sbb
clc
test
mov
fisubl
fcmove
imul
ret
incb
repnz
xchg
iret
dec
push
mov
js
mov
dec
adc
xor
arpl
or
pop
imul
mov
mov
adc
cmp
dec
xor
or
xorl
std
in
out
jmp
xchg
pop
cmp
jbe
adc
mov
inc
cmp
mov
rclb
int
mov
and
mov
call
addr16
cmp
cwtl
push
rep
cmp
cld
test
adc
in
hlt
pop
clc
out
mov
popa
data16
enter
pop
es
pop
xchg
les
push
xor
xchg
lods
xchg
mov
scas
adc
mov
das
lcall
sub
jmp
movsl
xchg
dec
xchg
dec
shrl
rcrl
pop
int3
cmp
push
pavgw
cltd
cld
xchg
pop
dec
or
add
cmpl
and
push
es
movsb
mov
sti
rorl
pop
ror
adc
das
mov
jg
sub
addr16
mov
add
int3
adc
add
clc
ret
enter
mov
fmull
ljmp
mov
xor
push
dec
inc
test
sbb
in
sub
fcompl
int3
icebp
cwtl
dec
mov
pop
sahf
push
pushf
out
jp
dec
arpl
push
push
fs
and
jbe
jp
mov
insl
jle
scas
hlt
mov
int
fs
xor
jle
push
push
sti
mov
mov
inc
lret
dec
mov
or
sub
cmp
scas
mov
xchg
insl
xchg
mov
lret
fsubs
xchg
imul
and
push
hlt
mov
or
inc
aam
adc
jno
les
cmpsl
mov
rol
jp
sub
loop
jb
and
push
in
and
test
push
in
cmpsl
test
pop
pop
shrb
mov
cmc
or
adc
and
stos
push
int3
xchg
inc
bound
mov
mov
dec
outsb
in
jo
sti
in
cmpsl
xchg
cli
sbb
mov
adc
jmp
push
jno
mov
enter
and
outsl
push
or
cs
mov
in
outsb
enter
xchg
add
loopne
sub
mov
mov
lret
lahf
xor
push
leave
mov
outsb
xchg
test
cwtl
lock
sbb
dec
fwait
sarl
push
jb
push
outsl
push
fldl
mov
jl
push
xchg
dec
mov
xor
mov
pop
pop
inc
loop
mov
out
push
lds
pushf
stc
cmp
pop
lods
mov
pop
cmpsl
bswap
cli
add
cwtl
insb
sub
dec
in
subl
stos
repnz
sub
xlat
repz
icebp
or
loope
sbb
push
adc
lods
mov
inc
jns
sbb
xor
lcall
iret
int3
dec
mov
jge
sub
jle
xchg
test
sub
push
jle
pop
shl
lcall
push
scas
push
das
popa
arpl
mov
ljmp
das
out
pop
leave
dec
lds
mov
dec
movsb
ss
sub
popf
push
sub
mov
xchg
pop
sub
mov
jge
fldenv
push
nop
movsb
mov
imul
cmp
inc
fwait
dec
std
ljmp
pushf
movsl
roll
adc
xor
push
xor
inc
aad
cs
mov
add
mov
test
or
and
lret
add
adc
call
gs
or
adc
cmp
add
cwtl
add
leave
mov
fsub
sub
cmp
out
mov
shlb
xlat
push
test
stos
jbe
out
aaa
int3
mov
sbb
in
gs
dec
bound
out
or
inc
mov
push
or
rcl
lcall
sub
shrl
sbb
fistpl
sub
push
ja
add
cld
add
jge,pn
mov
sahf
ja
sbb
clc
sahf
ds
shr
add
stc
cmc
gs
iret
pop
mov
push
ja
inc
jmp
cli
aaa
cli
test
inc
test
vcvttss2si
xchg
xlat
jae
or
arpl
dec
adcb
cmp
jge
xor
push
xchg
inc
cs
xchg
push
adc
cmp
jg
scas
or
xchg
sbb
inc
in
fldenv
leave
in
sti
sahf
sub
out
movsl
sub
std
ror
inc
inc
movsb
adcl
mov
scas
sub
jne
sbbb
sbb
dec
test
fisttps
arpl
stc
arpl
test
cmp
sbb
lret
fwait
xchg
rclw
push
xor
insl
aas
or
push
pop
arpl
jns
dec
sti
repz
dec
ret
mov
mov
movsb
lahf
jp
jno
inc
imul
mov
xor
aad
jno
dec
jmp
icebp
xchg
bound
jne
mov
xor
inc
pushf
repz
das
sahf
jo
int
or
mov
pushf
or
or
and
sub
fistpll
mov
mov
mov
adc
mov
push
jae
ja
in
adc
gs
jge
adc
mov
sbb
fstpl
dec
mov
xor
outsb
mov
mov
pop
jl
and
cmc
lcall
adc
movsb
je
aas
repz
adc
or
lahf
loopne
cmp
int3
hlt
jb
add
mov
lcall
or
js
mov
scas
xchg
inc
xor
lahf
sbb
incb
dec
in
imul
cli
cwtl
mov
or
sbb
pop
fiadds
fsubs
xchg
adc
push
dec
in
mov
sarb
and
sti
mov
mov
outsb
mov
sbb
and
into
es
stc
jg
mov
or
jecxz
andb
adc
imul
ss
or
lret
shll
sub
aaa
and
xchg
sub
out
rorl
fsubl
jecxz
cmpsb
dec
mov
mov
mov
aaa
xor
aas
push
into
fs
loop
inc
cld
mov
dec
cmpsl
stc
scas
movsb
psadbw
btc
mov
lret
adc
aas
sahf
cli
repnz
lret
das
pop
mov
mov
cld
iret
jbe
push
xor
sub
jns
fmull
and
repnz
dec
cmp
add
push
xor
shr
push
je
mov
adc
cld
jno
push
shr
out
popa
jbe
xchg
mov
xchg
enter
shl
das
pop
shlb
enter
pop
cmp
les
aam
lret
leave
pop
and
pop
dec
cmpsl
dec
dec
jle
cmp
out
idivb
stc
sbbl
lret
cmp
xor
cmpsb
add
fsubr
mov
xchg
inc
or
jne
push
and
jmp
mov
jae
cmp
sbb
jnp
out
dec
sti
fldcw
cs
xchg
test
test
mov
mov
orb
lock
cmp
fwait
popa
and
cltd
fs
push
jecxz
xor
jbe
jmp
fildll
imul
jge
inc
call
inc
rcr
data16
pop
cmp
cmp
lahf
push
push
mov
mov
repnz
xlat
std
adc
add
or
inc
testl
mov
fildll
test
mov
or
cltd
pop
or
test
mov
lret
adc
incb
pusha
or
dec
mov
stc
int
sub
out
fildll
dec
jmp
sbb
inc
sbb
jnp
repz
out
cmpsl
jae
push
mulps
fnstsw
or
inc
mov
or
adc
int3
sbb
leave
or
adc
dec
mov
cmpsl
and
cltd
xchg
insb
rcll
jmp
out
stc
adc
xchg
mov
push
ficoml
imul
ja
jns
jge
sbb
adc
stos
orl
hlt
fimuls
mov
sbb
pushf
aam
imul
lahf
rclb
cmp
fistl
adc
mulb
cmpsl
iret
rcr
sub
fidivs
jecxz
pop
xchg
aad
ficoms
popl
test
xchg
jnp
cli
cs
add
adc
in
daa
or
push
push
pop
xor
jne
cli
ljmp
push
out
popf
push
lea
jo
mov
inc
popf
adc
cmp
mull
popf
push
xchg
pop
add
xchg
inc
in
jp
or
or
lcall
sahf
movsl
dec
mov
fadd
loop
jge
jle
test
jbe
push
outsb
lds
insl
sbb
lock
xchg
xor
popf
std
cltd
xor
fdivrs
and
mov
jns
and
dec
fsts
lock
cmp
xchg
mov
push
pop
ljmp
mov
jo
inc
pop
and
in
inc
in
mov
stc
out
xor
call
adc
clc
xor
adc
adc
jp
inc
adc
xchg
xlat
mov
lret
int
xor
xchg
jmp
scas
cmc
mov
shl
adc
roll
clc
push
lds
addr16
xor
testl
adc
xor
in
pop
cmp
mov
cmp
pop
loope
push
or
add
or
mov
mov
xorl
jp
mov
daa
inc
fmuls
rorl
jne
inc
mov
loope
lahf
aad
dec
hlt
mov
pop
dec
xchg
addr16
rorb
cmp
les
cwtl
aad
cmpsb
xor
lds
movsl
frstor
repnz
xor
popf
cmp
mov
mov
adc
and
push
or
push
jl
xor
cmpsb
cli
pop
sub
ja
shlb
pop
or
int3
xor
fdivr
shr
push
inc
sub
push
dec
jg
ret
rolb
cltd
cmp
inc
jmp
mov
or
movsb
inc
iret
mov
mov
sbb
sub
leave
out
mov
xlat
cmpsl
aaa
bound
lcall
xchg
ss
fstps
push
scas
xor
cli
sbb
and
aas
lds
pop
repnz
loopne
addr16
ja
pop
mov
mov
js
ss
xchg
pop
daa
or
movsl
pop
out
mov
clc
lods
insl
out
sub
adc
push
pop
ss
push
pop
mov
mov
loopne
hlt
xor
adc
and
pusha
orl
dec
or
shlb
mov
adc
ficomps
jge
jb
jp
sbb
mov
pop
jp
nop
in
xor
out
fcmovne
sub
xchg
jmp
lods
addr16
loope
mov
ljmp
pop
adc
add
sub
xlat
icebp
jne
loope
cmp
jbe
andb
mov
xor
jne
out
negb
or
hlt
mov
inc
dec
adc
xchg
xor
and
pop
jecxz
bound
lcall
sbb
push
xchg
fstpt
pop
ret
mov
outsw
shrl
lock
pop
jo
xchg
inc
aad
insl
add
ljmp
in
pop
fcomp
mov
sahf
jb
test
outsb
fnstsw
in
lea
lods
adc
adc
mov
loope
mov
pop
or
arpl
inc
bound
adc
inc
xor
mov
sbb
imul
in
mov
sar
out
movb
in
adc
pusha
mov
mov
mov
inc
aad
jbe
adc
fiaddl
jge
pop
scas
xor
imulb
test
mov
xor
adcb
mov
mov
sarl
sbb
out
dec
out
and
mov
cwtl
mov
or
clc
sub
fisubrl
pop
addr16
mov
movsb
popf
push
add
aas
inc
in
test
or
data16
jmp
ljmp
data16
lcall
adc
and
pop
pop
lret
insl
daa
inc
negb
sub
les
jb
mov
popf
leave
jno
xor
xor
fstps
mov
lock
gs
cs
adcb
ret
dec
mov
iret
ss
ficoms
outsb
in
dec
mov
call
sub
lar
enter
push
xchg
push
xor
sarl
dec
pop
sbb
out
outsb
dec
xor
les
jge
push
or
arpl
jb
sahf
fs
dec
imul
jl
jg
daa
adc
cmpsb
dec
ds
arpl
and
adc
jle
aam
sbb
xor
jmp
dec
pop
cmp
mov
jl
aas
or
adc
pushl
xor
pop
inc
sub
xchg
jb
sbb
scas
mov
into
aas
scas
movsl
inc
sub
movsb
shrb
cmc
jmp
ljmp
mov
data16
andl
insb
int
frstor
scas
ss
adc
add
pop
mov
pusha
pop
mov
xor
test
lods
into
incb
dec
negl
push
add
sub
sub
cmp
xchg
ss
loopne
das
push
push
mov
rorb
popf
sub
jae
je
pop
push
inc
jl
jnp
popa
add
sarb
das
xchg
xchg
adc
out
test
stos
test
in
lds
movl
loop
jns,pn
in
pop
mov
adc
testb
and
adc
sbb
pop
mov
scas
rcr
outsl
pop
lret
test
cwtl
lahf
movsb
test
mov
imul
idivw
xchg
push
pusha
jne
ds
scas
fiadds
lods
add
lds
xchg
hlt
mov
lcall
jae
jno
lods
inc
fdivl
or
dec
lds
test
and
xchg
ljmp
int3
xchg
add
jle
inc
out
cmp
lret
dec
jb
push
lret
sti
ja
outsl
xor
inc
cwtl
adc
shlb
mov
lahf
sub
jns
xor
adcl
lods
test
mov
sub
mov
pop
roll
addr16
insl
cli
add
dec
mov
lret
xchg
fbstp
inc
inc
xor
lcall
jne
xor
out
and
jns
ds
push
ret
mov
cmc
push
push
pop
repnz
sub
push
outsl
push
xlat
sbb
xor
dec
or
shll
test
mov
outsb
repz
or
hlt
mov
sbb
mov
cmpsl
push
sbb
mov
scas
or
dec
out
stos
das
lcall
outsl
fildll
inc
movb
xor
fdiv
out
pop
add
movsl
mov
call
mov
cli
sbb
lret
cmpsb
pop
dec
jle
orl
daa
inc
xor
mov
sbb
add
mov
stc
movsb
mov
mov
mov
call
addr16
xchg
aam
inc
imul
sbb
mov
arpl
jne
mov
aas
cmpsb
inc
outsb
mov
jno
clc
shrb
loope
mov
fisttpl
scas
je
aad
icebp
das
xlat
push
je
jae
test
mov
dec
fsubl
dec
cmpsl
pop
sub
jnp
dec
adc
mov
mov
test
lds
xor
js
inc
xchg
std
test
cmpsb
lea
movsl
icebp
scas
mov
mov
push
and
stc
sbb
jbe
push
xchg
sub
xor
push
test
gs
mov
icebp
into
loop
test
xor
jmp
push
cmpsl
fsubrp
mov
dec
lds
lock
ret
or
push
cmp
stc
nop
and
dec
pop
je
mov
push
roll
stos
dec
orb
lea
inc
mov
test
jb
inc
lods
imul
sbb
pop
xchg
in
shll
sti
inc
mov
clc
pop
aaa
pop
cmp
add
or
test
notb
call
mov
popf
and
cli
inc
ficomps
inc
xchg
insl
inc
xchg
bnd
dec
icebp
push
shll
and
sub
enter
mov
outsb
pop
insb
fwait
mov
fbstp
or
repz
rorl
lock
push
jb
push
shrl
xchg
outsl
xor
insl
sub
or
fsubl
add
lods
call
test
gs
jnp
xchg
faddl
add
addr16
in
mov
pop
cmpsb
and
jns
mov
cs
cmpsl
scas
jl
ret
sub
arpl
mov
movsl
dec
in
pop
sbb
jbe
in
mov
pop
enter
mov
js
lret
int3
pop
les
sbb
push
por
or
sbb
push
mov
and
add
push
sbb
or
sbb
scas
xor
mov
sbb
enter
add
cmp
inc
jle
or
imul
enter
outsb
push
xlat
pop
js
fidivrs
pop
aam
aam
aaa
push
xor
sbb
imul
std
filds
pushf
das
xor
in
clc
push
lcall
iret
out
mov
xchg
neg
mov
inc
push
imul
or
xor
fs
pop
rcr
dec
and
movsb
mov
nop
mov
data16
out
sbb
bound
jb
fbld
movsl
pop
or
push
xor
adc
int3
andl
adc
in
xor
push
icebp
sub
and
lret
mov
adc
mov
dec
add
lock
add
ror
iret
pop
insl
or
mov
fistpl
mov
rolb
and
mov
fdivl
in
jmp
push
xchg
or
mov
mov
jne
sub
xor
or
in
push
cmp
cmp
pop
sbb
push
push
outsb
icebp
or
int
sbbb
sbb
push
cld
aam
outsb
and
jmp
shlb
jl
nop
cmp
adc
xlat
in
clflush
ss
rcrl
xchg
orl
push
push
dec
jnp
cs
aas
sbb
jbe
fs
rol
mov
jbe
shrb
dec
push
xchg
xor
iret
pop
sub
jb
xchg
inc
pop
mov
cmpl
pop
js
pcmpeqd
rclb
scas
or
or
aad
in
dec
pop
pop
stc
sbb
mov
push
xchg
orl
inc
nop
repz
mov
and
ficompl
cli
repnz
int3
jns
add
pop
shlb
outsb
fs
push
mov
cwtl
insb
shll
les
adc
test
mov
sbb
ss
inc
test
sub
add
pusha
dec
icebp
fistps
sbb
mov
icebp
inc
pushf
cltd
and
pusha
sub
movsb
xor
cltd
adc
xorl
mov
js
sub
push
xor
xchg
add
mov
xchg
ss
rcll
lock
push
mov
cmp
sub
cmp
jg
out
xchg
or
adc
addr16
add
movsb
jmp
and
call
pop
pop
gs
enter
cmp
loopne
mov
addr16
fimuls
and
in
or
in
push
mov
loopne
sub
jb
int3
cmp
pop
xor
mov
jae
xchg
dec
xor
pop
lahf
xor
ret
jns
jae
inc
into
pop
aas
xor
shll
cmp
in
fs
and
in
out
add
dec
outsb
pop
sub
and
pop
pushf
sahf
call
sub
out
sbb
sar
loop
inc
cmp
lds
xchg
jge
fisttpll
mov
cmp
xchg
adc
loope
outsb
jne
pop
lea
arpl
fcoms
jecxz
or
push
push
inc
iret
pop
stos
loop
push
sub
jmp
insl
jbe
scas
movsb
js
cld
mov
out
notb
cltd
jnp
scas
pop
int3
js
push
mov
mov
xchg
in
jb
xchg
aad
outsl
pushf
test
mov
lods
mov
inc
aas
pop
gs
sub
push
ja
xor
xor
and
insl
aam
js
xor
mov
xchg
out
dec
das
dec
fsubrs
inc
xlat
pop
fs
outsl
outsb
or
inc
out
xchg
sbb
xlat
xchg
pop
pop
sub
in
hlt
cli
outsl
into
xor
mov
negl
or
andl
or
jl
imul
xchg
lods
mov
push
outsb
andb
mov
test
enter
lret
push
imul
int
jg
or
rol
jecxz
stos
loope
xlat
ljmp
add
out
dec
out
sub
dec
sub
jnp
lea
inc
push
sub
pop
shll
mov
xor
cli
push
insb
push
aad
ret
mov
ss
fwait
mov
push
test
cwtl
test
push
xchg
lcall
push
jae
push
jmp
sbb
test
rolb
sub
fdivrs
push
int3
inc
orl
pop
jg
add
mov
movb
cmp
scas
sub
in
int
cmp
add
xchg
imul
or
lea
push
xchg
add
lock
imul
inc
mov
dec
out
in
ror
les
addr16
add
out
aaa
cld
adcl
les
mov
dec
pop
push
adc
inc
mov
daa
jge
daa
mov
jmp
sti
int3
lods
subl
add
dec
loopne
inc
jge
mov
xorl
mov
xchg
xor
cltd
pop
stos
jge
addr16
mov
inc
mov
mov
mov
pushf
test
cmpsb
mov
fdivr
mov
mov
in
jmp
pop
mov
out
xlat
mov
add
cltd
push
pop
push
jnp
fiaddl
jecxz
jmp
out
xchg
push
inc
adc
adc
hlt
sbb
fsts
idivl
push
lods
cli
jno
pcmpeqw
imul
jbe
inc
std
les
dec
push
ret
mov
sub
mov
sub
incb
cli
push
inc
fwait
mov
mov
lahf
pop
fs
dec
cwtl
insl
nop
jmp
sbb
sbb
popf
iret
rclb
mov
jno
inc
fsubr
xchg
sub
mov
test
inc
push
inc
call
push
inc
pop
push
pop
jns
aaa
mov
imul
mov
cmc
pop
popf
mov
fidivrl
sti
dec
xchg
push
stos
scas
outsb
lods
mov
pusha
cmpsl
cwtl
int
repnz
mov
fists
popf
leave
mov
cli
mov
in
pop
test
out
xchg
ja
push
dec
fcomp
setne
hlt
pop
inc
dec
xchg
mov
outsl
sahf
mov
inc
inc
and
mov
and
data16
mov
in
and
xchg
std
negb
inc
ret
aas
shll
inc
pop
add
jb
jo
mov
cmpsb
out
jmp
push
rorb
push
lods
ljmp
lret
std
adc
xor
cmp
mov
add
push
inc
call
out
les
pushf
in
cli
push
outsb
mov
cmp
mov
outsb
int3
lret
ljmp
dec
das
pop
jne
mov
loope
movsb
mov
cs
sbb
add
test
add
push
scas
adc
pop
lock
insb
outsb
cmp
test
mov
and
ds
xor
adc
adc
xchg
cmp
pop
push
jecxz
or
or
push
dec
cli
mov
adc
inc
mov
xchg
add
ss
adcl
out
jmp
dec
repnz
test
dec
jno
popa
xor
lock
dec
mov
xchg
inc
sub
fnsave
nop
shlb
in
call
popa
add
pop
pusha
xor
mov
out
js
jmp
mov
mov
fsubl
pop
std
ss
ss
popf
mov
cli
aad
sbb
cmc
mov
lea
imul
arpl
pushf
or
sub
and
dec
pop
cmp
or
aam
adc
mov
dec
dec
test
and
push
sbb
rol
clc
shr
adc
and
xor
jle
insb
sar
push
sub
xorl
push
addl
scas
lcall
jno
out
inc
mov
sbb
ss
xchg
jb
es
movsl
sbb
je
cwtl
cs
push
mov
dec
fadd
insb
icebp
hlt
shlb
std
in
xchg
mov
mov
mov
or
mov
sbb
lea
mov
pop
sub
mov
das
fldl
in
jns
jae
cmc
pop
sbb
daa
dec
out
leave
pop
imul
cmp
xchg
or
negb
xchg
push
inc
pop
lods
aaa
stos
pop
push
fdiv
sbb
adc
fidivs
pop
enter
adc
mov
ljmp
mov
ss
stos
cmc
lcall
das
es
add
lock
flds
popa
hlt
sbb
cmp
je
cmpsl
sub
mov
ror
lea
sub
or
pop
movl
imul
pmulhw
leave
jge
scas
inc
movq
gs
dec
insb
cmpl
scas
dec
iret
or
sub
outsb
xchg
cmp
stc
nop
insl
pop
clc
arpl
or
xchg
mov
push
jmp
mov
add
cltd
repnz
mov
jns
push
push
xchg
lods
cli
or
mov
jb
in
xorb
or
xchg
push
xchg
adc
pop
cli
mov
xchg
out
pop
stos
xchg
arpl
test
shll
popa
fstp
mov
movsb
cwtl
cmpsb
rol
mov
mov
xchg
jecxz
fisttpl
pusha
xchg
in
lea
sbb
rolb
add
movsl
aad
pop
lds
ja
stos
jno
cmp
sub
pushf
sti
out
jl
sar
int
adc
movsl
es
das
jmp
hlt
idivl
xor
lcall
add
lcall
mov
push
cmp
add
inc
loope
stc
mov
fwait
jmp
jmp
das
pop
dec
jmp
mov
xchg
rcl
in
jb
push
lock
dec
cmp
pop
dec
bound
loope
xor
das
aam
aaa
pushf
add
or
imul
leave
and
mov
pushf
or
sbb
dec
fmulp
lret
cmpsb
out
jnp
lret
insb
test
lods
or
jp
mov
aad
ds
mov
andb
leave
mov
mov
shll
push
pop
cmp
cmpsl
in
jmp
jle
and
cld
adc
xchg
cmc
pcmpgtd
out
or
cmp
testl
sub
arpl
gs
pop
scas
shl
ja
sub
sub
mov
mov
sub
mov
pushf
cmp
add
mov
sbb
jle
xchg
xor
pop
dec
inc
xor
inc
jno
pop
cmpb
xchg
mov
push
mov
aas
jnp
xchg
dec
outsl
ljmp
cmpsl
dec
popf
sbb
jns
repnz
lock
sahf
lock
dec
call
js
aam
mov
fs
mov
test
add
mov
pop
imul
add
test
fstpt
inc
outsb
sub
insb
xchg
cmpsb
xor
add
push
mov
mov
cmc
pop
or
loopne
fcoml
mov
mov
adc
popa
subl
icebp
fiaddl
xor
mov
out
fmull
stos
movsl
xchg
inc
add
pop
inc
dec
scas
cmpsl
hlt
pop
xor
stos
movsb
test
loope
mov
lock
cmp
sbb
imul
ss
push
out
adc
pop
loop
adc
push
xchg
loopne
or
jnp
inc
fcmovu
test
lret
scas
nop
rcrl
leave
sbb
aam
std
lret
fidivrs
orl
popf
out
xchg
or
notl
xchg
imul
fwait
cld
jp
dec
adc
fisubrl
xchg
int3
lods
mov
cmpsb
adc
xor
imul
sub
mov
and
and
rorl
lahf
xor
xchg
mov
jne
shlb
inc
push
sub
dec
mov
cltd
test
adc
repnz
or
mov
mov
outsl
xchg
ret
and
mov
or
sbb
fnstcw
scas
push
ret
je
shlb
stc
mov
jns
pop
fs
sub
ret
test
inc
sub
loopne
nop
jnp
mov
cld
lds
jl
mov
adc
pop
inc
lods
inc
push
pop
hlt
pop
je
sbb
cmpsl
int
pop
mov
cmp
das
add
xchg
mov
xchg
aam
call
icebp
add
sub
cmp
insl
push
jmp
in
stos
pop
ss
scas
daa
jp
push
dec
fninit
adc
mov
dec
popf
adc
push
in
pop
cmp
add
pushf
rorl
pop
in
xchg
push
stc
in
add
jne
push
mov
iret
sbb
push
mov
dec
stc
out
or
adc
dec
sbb
xchg
jp
sbb
in
xor
roll
jae
ret
and
xlat
clc
xlat
loopne
test
in
or
aas
pop
mov
nop
pop
jae
cltd
lahf
mov
mov
and
ja
ss
leave
rorb
sbb
sub
xchg
mov
int
inc
daa
sbb
lea
jmp
popf
rcrb
in
jg
fiaddl
shl
dec
bnd
test
pushf
fistl
or
fisubrl
cmp
pop
or
jno
in
xor
sbb
dec
lds
test
lock
call
or
inc
ret
pop
ficomps
mov
aaa
fmuls
mov
jno
rolb
and
pop
es
aam
cmp
fnstsw
mov
shrb
popa
int
pop
fwait
aad
xlat
cmp
jnp
test
jb
dec
data16
loopne
pushf
xlat
pop
outsl
add
fcoms
popf
and
aad
lahf
inc
clc
and
xor
nop
xchg
pushf
dec
mov
add
shll
aad
adc
sarl
pop
imul
add
ljmp
filds
cmp
sbb
xor
rorl
push
inc
sub
cld
sbb
xchg
subb
xchg
lods
push
in
inc
cmp
sub
sbb
push
xchg
pop
test
rcl
inc
inc
jbe
and
push
mov
loop
mov
data16
pushf
cli
sbb
pusha
pusha
sub
mov
das
dec
or
cmpsl
xor
push
das
por
push
xlat
cmp
add
xor
fcmove
inc
movl
mov
stos
lods
ret
push
mov
into
jns
jns
gs
ds
out
mov
pop
jg
cli
inc
clc
aas
in
adc
rolb
xchg
scas
pop
les
sbb
inc
sub
cmp
ficoms
mov
cs
push
es
jg
add
and
movsb
push
inc
test
or
shrl
xor
clc
mov
shll
and
in
xorl
mov
pusha
inc
stos
cltd
leave
lods
add
cmp
test
push
inc
in
rorb
stc
add
push
scas
sub
pop
or
in
dec
iret
int3
aad
inc
sub
sub
or
int3
dec
cmp
test
les
push
popf
stc
inc
cmpsb
repz
out
rorb
popa
push
and
mov
cmpsl
and
fildl
ja
lcall
xchg
lcall
inc
fsubrl
test
and
xchg
inc
nop
pop
inc
js
test
test
leave
hlt
stos
outsl
stc
lds
jnp
cltd
add
mov
cli
dec
mov
scas
notl
add
out
gs
xchg
xor
cmovp
pushf
fwait
and
jno
add
fadds
inc
pushf
dec
adc
leave
mov
pop
push
scas
sarb
mov
pop
aam
leave
cltd
mov
inc
mov
xor
lea
ficoms
mov
and
jns
add
add
sti
bsr
dec
andl
nop
xor
inc
hlt
pop
insl
dec
movsl
cltd
jns
ss
sbb
mull
sub
xor
insl
pushf
xor
sub
cmp
lcall
add
add
mov
mov
cld
data16
das
in
icebp
dec
push
ss
mov
test
repz
push
inc
jmp
pop
dec
mov
jmp
cli
add
sti
jae
les
gs
clc
xor
in
stos
lret
pop
sub
cmp
jge
adc
repnz
or
shll
jmp
mov
mul
add
pop
xchg
mov
or
in
cmp
mov
adc
push
fwait
sbb
inc
jnp
ret
mov
sbb
out
movsl
ljmp
inc
jg
sbbl
cvtps2pi
addr16
sbb
push
movsb
lahf
xor
inc
push
cmp
sub
outsb
mov
in
mov
clc
pop
adc
adcl
cmp
cmp
xchg
push
pop
jae
daa
sub
xor
or
push
rorb
mov
xchg
mov
out
in
mov
insl
cld
jmp
pop
test
scas
out
in
or
addb
fcoms
cmpl
data16
ret
and
pop
pop
or
add
cld
jno
dec
inc
xorb
insl
aad
clc
jle
dec
xchg
cld
push
les
or
cmp
adc
insl
dec
mov
xor
subb
mov
mov
sub
push
negb
jg
inc
loopne
movsl
mov
xor
rcll
fs
push
or
mov
inc
jno
mul
cmp
or
es
fistpl
push
add
push
sbb
push
enter
push
xchg
adc
sbb
shrb
sub
je
xlat
sbb
dec
sub
scas
ret
jg
sbb
cli
dec
cmpsb
nop
je
out
sbb
sarl
add
sub
cmp
cwtl
idivb
negl
std
add
inc
repz
lret
clc
push
mov
loope
out
in
mov
rclb
push
fistps
jne
out
or
xchg
mov
aas
xor
jmp
dec
pop
loope
mov
push
cmpl
pushl
enter
mov
mov
xlat
xchg
and
adcb
ja
scas
dec
mov
push
dec
daa
mov
mov
jl
shlb
icebp
xor
or
mov
add
xchg
cltd
jae
rorl
xchg
fstl
xchg
je
sub
dec
scas
insb
inc
pop
aas
test
xchg
add
mov
mov
mov
insb
jne
shrb
jne
cmovo
aad
inc
jbe
inc
pop
sub
in
popw
jnp
rclb
mov
stos
dec
adc
jns
stos
inc
mov
sub
sarb
mov
jo
mov
int3
push
adc
sub
mov
push
add
sbb
test
lcall
cs
daa
ss
mov
arpl
into
test
and
mov
loope
inc
sbb
addr16
push
call
xchg
mov
add
divl
movsl
xchg
mov
je
sbb
sub
shrb
std
mov
daa
lods
sub
dec
std
lahf
or
pop
mov
test
pop
push
push
js
inc
cli
dec
or
gs
or
subl
vmread
bound
jecxz
addr16
jns
mov
pushf
dec
adc
aad
in
js
clc
mov
cld
pop
test
mov
mov
pop
stc
repz
scas
mov
xchg
fadds
add
adc
mov
repz
pusha
xchg
iret
mov
stos
xchg
dec
sub
xchg
popf
push
outsb
or
test
sahf
adc
jecxz
lret
rcrl
jle
or
push
enter
js
mov
sahf
mov
mov
lahf
inc
icebp
xchg
cli
cmpsb
xor
mov
sbb
daa
nop
inc
pop
mov
mov
mov
xor
popa
pop
stc
jl
push
jge
repz
jp
loope
hlt
and
iret
loopne
or
push
jnp
jns
push
sahf
call
int3
pop
or
adcb
pushf
or
inc
jbe
sub
mulb
in
pop
ret
cmc
sbb
out
add
lahf
dec
insb
jle
adc
rorl
out
mov
sahf
shll
mov
sub
or
inc
add
outsl
sub
pop
dec
stc
sub
adc
or
push
inc
mov
lahf
push
xchg
jp
and
cwtl
push
loope
push
push
mov
dec
adcb
ds
insl
push
pop
jne
shlb
xor
jp
mov
and
push
data16
mov
add
and
fdivrl
xlat
cmp
cld
bound
jecxz
pushaw
xchg
adc
lcall
addl
outsb
sub
hlt
pop
test
xchg
aad
lods
jo
outsb
adc
add
out
in
inc
lock
sti
lret
push
shrb
test
jno
pop
sub
xchg
xchg
mov
add
call
and
mov
fcmovbe
push
push
jbe
xchg
out
clc
int
popf
lret
sarl
iret
mov
push
inc
addb
in
outsb
mov
pop
push
je
jg
sub
je
jmp
add
pop
stc
bound
fldenv
in
dec
pop
adc
fstl
int3
movsb
in
je
push
mov
shlb
mov
jecxz
dec
sub
jno
mov
dec
jne
in
mov
bound
adc
jb
add
std
adc
test
mov
jnp
data16
add
imul
mov
jmp
popa
jns
mov
jmp
adc
push
adc
inc
pop
aam
and
sarl
jo
hlt
fs
push
jg
jno
lret
push
loop
in
shll
cli
int3
push
leave
and
aas
loopne
adcb
sub
jo
and
push
sti
in
data16
loope
push
fldl
add
xor
test
out
test
repz
push
xchg
iret
scas
icebp
popa
xchg
fcomps
mov
lahf
lods
cmp
and
fisubl
stos
pop
mov
jle
test
mov
pop
jnp
and
push
jge
mov
sbb
cmp
inc
mov
loopne
decb
dec
aas
adc
mov
push
pop
in
into
push
mov
popf
fsubrl
xlat
lcall
mov
dec
push
aas
and
mov
lea
lods
dec
mov
inc
out
adc
pop
dec
pop
mov
ljmp
out
enter
aad
shl
jle
and
sbb
add
push
mov
cs
mov
aam
add
push
sub
pop
fucomi
pop
xchg
xchg
add
push
mov
mov
test
xchg
adc
push
mov
dec
inc
mov
addr16
and
in
rolb
add
sbb
sbb
add
mov
pop
xchg
cmp
dec
and
incb
out
sahf
out
dec
pop
xchg
jmp
and
lret
in
and
ret
dec
sbb
shl
mov
jb
dec
mov
push
rcrl
jmp
and
sub
or
lock
jae
cmp
cli
add
adc
loope
pushf
mov
out
jnp
iret
loope
incb
dec
sbb
sub
nop
imul
mov
arpl
dec
cld
scas
or
push
mov
add
rolb
and
hlt
pop
or
icebp
jns
mov
fisttpll
add
jg
movsl
jg
push
in
push
mov
pcmpgtw
icebp
mov
add
jns
lea
adc
jg
movsb
cmp
hlt
add
cmp
lcall
push
lds
adc
xor
pop
inc
addb
iret
outsl
or
push
xor
jl
dec
xor
mov
sub
mov
sub
test
call
mov
cmp
cmc
fwait
and
jo
sbb
and
xchg
inc
sbb
pop
out
or
inc
mov
mov
loope
sbb
fisttpll
and
addl
xchg
cwtl
xchg
popa
mov
out
mov
leave
in
rcll
adc
cltd
push
lods
mov
lods
test
jb
repz
outsl
sub
loopne
or
dec
mov
pop
test
push
xchg
rclb
push
bnd
mov
movsl
testl
insb
xchg
test
rcll
lods
std
int3
and
cmp
test
mov
stc
jmp
gs
mov
lea
xchg
pop
xchg
je
and
inc
jns
mov
lea
cwtl
cwtl
dec
add
mov
xchg
jbe
mov
fimull
imulb
push
mov
cmp
iret
mov
imul
movsb
es
sub
adc
mov
mov
aad
sub
mov
push
push
cwtl
neg
cmp
inc
sahf
ds
movsl
xlat
pusha
mov
stos
push
jns
sbb
outsb
sbb
push
dec
and
movsb
dec
jne
add
clc
stc
out
jb
pop
fisubrl
pop
inc
xor
inc
mov
mov
sbb
aam
test
jne
pop
push
mov
pop
sti
xchg
std
nop
xor
jl
mov
sub
pushf
loop
push
xchg
cmp
push
xchg
hlt
js
ds
mov
add
jb
iret
pop
fisubrs
dec
xor
xchg
and
xchg
push
adc
jge
dec
mov
pushf
cmc
sub
pop
daa
xor
xchg
and
inc
cmpb
gs
jne
mov
inc
out
or
xor
mov
xor
loopne
addr16
mov
divl
push
movsl
enter
push
mov
repz
add
cmp
stos
mov
scas
repnz
popf
adc
in
fidivrs
inc
push
xchg
pop
xor
lcall
mov
adc
add
inc
iret
popa
divl
addr16
test
lcall
pop
sbb
das
in
dec
aaa
and
addl
mov
mov
dec
imul
test
mov
xchg
cld
mov
cmp
fwait
xchg
jmp
cmp
mov
mov
dec
pop
std
adc
aaa
fwait
inc
or
or
fldl
jae
cmp
pop
xor
push
xchg
mov
fbld
loope
push
in
mov
fadds
lods
lods
outsl
dec
inc
inc
pusha
mov
icebp
int3
jle
test
cltd
xchg
jns
es
pushf
add
fs
xor
or
nop
mov
pop
lds
inc
or
push
mov
inc
xor
or
mov
mov
jl
mov
mov
aam
add
iret
test
ficompl
add
fwait
push
push
loope
dec
fwait
sub
cmp
shrl
aam
aad
jbe
xchg
mov
and
or
loope
xor
les
and
aad
dec
lcall
add
sub
push
xor
pusha
dec
inc
sahf
xlat
rorb
andl
lea
ljmp
lret
rcr
movsl
fnsave
int
inc
sub
ss
ret
testb
int3
cld
mov
pop
push
pop
sahf
out
fists
pop
and
insb
push
gs
fildl
jbe
jl
inc
fadds
xchg
cmpsl
sbb
xchg
aad
xchg
outsl
pop
inc
outsb
add
aaa
aad
adc
fwait
ljmp
xchg
jp
mov
dec
jno
push
sbb
ret
push
fstl
or
adc
dec
cmp
cmc
test
fwait
nop
xor
scas
push
clc
outsb
push
sbb
outsl
xchg
mov
mov
shl
pop
in
lcall
sarb
leave
xchg
movsb
sbb
xor
or
mov
adc
out
in
lret
cmp
test
mov
rcrb
lock
insb
sbb
mov
outsb
repz
jp
add
cmp
cmp
test
rorl
and
add
movl
fwait
and
js
mov
and
mov
stos
jnp
pushf
cld
add
push
call
jo
sbb
add
jns
in
add
call
jno
cmp
sahf
sbb
or
hlt
or
rolb
mov
repnz
movsb
mov
ljmp
mov
repz
xchg
jne
aam
jmp
outsb
imul
push
dec
and
ja
mov
cmp
mov
outsl
pop
or
scas
mov
push
ljmp
sbb
xor
lcall
mov
pminsw
jl
push
inc
nop
mov
push
add
mov
jg
les
fisubl
icebp
outsb
test
cmp
cs
jge
enter
jb
and
insl
into
sahf
mov
jno
jl
jns
mov
or
and
dec
adc
inc
outsb
imulb
aas
jg
push
mov
subb
jp
xchg
xchg
jle,pn
inc
out
lods
fmulp
mov
jbe
andb
andl
out
outsl
mov
icebp
lods
popf
jbe
test
push
mov
push
enter
jmp
fstps
push
pop
xchg
sbb
cs
xchg
fistpl
ljmp
loop
mov
stos
sahf
mov
inc
mov
jns
sbb
jno
fdivrl
add
cmp
lods
inc
in
push
pop
inc
aaa
cmp
mov
lods
jnp
and
repnz
jmp
mov
xor
sub
inc
push
es
xchg
icebp
lock
mov
js
pop
dec
jecxz
mov
loope
sbb
outsl
idivl
rclb
push
idiv
sbb
in
imul
psrlq
test
adc
mov
pop
rcll
fwait
or
clc
je
dec
mov
adc
and
push
xchg
dec
stos
stos
jne
mov
mov
scas
roll
fs
push
add
stos
pop
pop
popa
imul
push
sbb
push
fsubs
std
xchg
test
outsl
or
xor
inc
xchg
add
popf
jle
adc
out
adc
jl
push
leave
lret
mov
daa
lret
inc
mov
into
daa
xor
mov
cwtl
dec
gs
dec
outsl
add
loopne
rclb
mov
test
outsl
pop
inc
jge
ret
frstor
ds
les
imul
or
lret
jae
imul
and
jns
dec
nop
das
push
dec
or
in
pop
ja
lret
stos
mov
outsb
mov
cmp
lcall
cld
inc
xor
xor
fmull
loope
mov
cmpb
pop
xchg
push
or
shrl
clc
in
add
inc
cli
arpl
sbb
mov
cmp
pop
pop
push
cmp
mov
in
jmp
sbb
inc
jae
xchg
xchg
push
loopne
sarb
jb
and
imul
xchg
jb
fstpl
les
sub
sub
sub
and
and
jmp
fcom
and
jmp
push
mov
lds
test
jno
dec
sarb
into
sub
sbb
leave
add
xchg
sahf
mov
xor
cmpsl
popf
mov
jg
jl
jae
jns
push
icebp
popf
inc
mov
imul
scas
sahf
mov
shll
sbb
push
mov
lock
in
in
xchg
or
pusha
jno
ror
test
cmpl
dec
sbb
outsl
sub
dec
mov
adc
fisttpll
mov
testl
enter
or
das
fucomip
in
mov
inc
push
and
inc
pop
and
jae
test
pop
jp
mov
push
mov
jnp
or
rcrl
xchg
sbb
stc
sub
push
adc
ds
jg
movsl
iret
into
dec
jle
push
out
xchg
jle
movsl
in
divb
pop
add
dec
lods
dec
rcll
imul
outsb
inc
adc
mul
cmp
pop
mov
push
jge
fmul
cmp
mov
outsl
dec
test
push
pop
fiadds
mov
xor
loope
hlt
mov
cwtl
push
dec
sub
mov
js
addr16
adc
mov
inc
mov
orl
jno
push
jecxz
lds
mov
fsubr
or
inc
jecxz
imul
sub
fnsave
out
pop
lds
xlat
pop
mov
push
outsl
loopne
sbb
dec
xchg
xchg
lods
mov
addr16
push
fstps
sbb
mov
xor
nop
jae
aad
xor
in
lods
sahf
mov
test
call
cmc
lret
and
nop
dec
mov
cmc
dec
int3
xlat
jg
data16
jle
adc
iret
iret
shl
and
push
push
push
jecxz
mov
mov
scas
sahf
sbb
in
jnp
pop
mov
outsl
loop
cwtl
adc
sbb
push
cmp
mov
mov
jmp
xor
fsubs
nop
imul
fimull
gs
int
sbb
lret
lret
push
dec
sub
jne
sub
push
clc
mov
xchg
sub
add
push
decb
jbe
rcl
pop
mov
mov
and
xchg
stos
push
les
or
adc
out
pushf
stc
test
mov
lock
movd
inc
push
ret
outsb
ljmp
cmpsl
cmovg
ficomps
pop
jbe
adc
or
xor
pop
jmp
aas
ret
and
xchg
pop
ljmp
shll
mov
push
insl
mov
push
adc
repnz
dec
cltd
lock
flds
out
jecxz
fisttpl
sbb
ja
jno
aam
mov
or
dec
sbb
sub
fisubrl
adc
push
mov
stos
mov
popf
mov
sub
inc
roll
mov
sbb
mov
mov
xchg
add
insb
xor
js
call
sub
pop
subps
into
stos
mov
adc
inc
test
test
mov
add
mov
gs
in
or
jg
je
pop
js
xchg
inc
in
fdivrs
mov
movsl
push
movsl
rcrb
mov
addr16
arpl
jmp
mov
adc
imul
aas
lret
js
pop
dec
inc
sahf
xor
push
scas
lea
dec
fcom
fstp
mov
jecxz
ljmp
mov
in
cld
sub
aaa
jge
ud2
mov
xchg
lock
mov
sub
cld
mov
out
enter
and
push
inc
movsb
in
stc
mov
pop
cmp
dec
repz
pop
mov
pusha
out
pop
sbb
lods
add
test
int3
mov
ss
cld
repz
popf
stos
test
xchg
insb
pushl
dec
fisttps
fwait
adc
push
cmpsl
cs
mov
out
addr16
jge
mov
push
in
cld
push
sub
adc
lahf
lahf
roll
mov
mov
mov
and
aam
jl
inc
mov
andb
push
mov
inc
xchg
push
iret
mov
ja
mov
outsl
dec
andb
emms
jae
jge
loopne
hlt
cld
repnz
cmpsb
ss
jbe
dec
and
cmp
ret
lods
push
or
pop
pop
lock
mov
popa
xor
xor
ficompl
pop
mov
inc
mov
mov
lods
out
ret
pop
hlt
ds
ljmp
movsl
xor
rcrb
and
lcall
sbb
lock
loope
pop
push
add
and
sub
cwtl
xchg
dec
stc
xchg
ret
sbb
jae
sbb
out
fidivrs
dec
push
sahf
add
xchg
les
inc
xor
cmpsb
add
fs
out
pusha
push
push
in
pop
inc
into
fs
mov
ret
cmp
add
out
pop
ficompl
pop
out
jge
sub
shll
add
mov
xor
jb
mov
sub
dec
loopne
cs
test
fcoms
loopne
jl
push
mov
xchg
jg
ficompl
pop
cltd
fcmovnbe
rorl
inc
mov
mov
sub
loope
lahf
arpl
enter
xchg
add
jnp
jae
mov
int
jo
popa
data16
fdivp
aas
xor
int
adc
insl
movsb
test
xchg
xor
mov
dec
pop
cs
mov
push
cmc
inc
jbe
cmc
push
mov
mov
movsb
stc
ds
fidivrs
lods
les
movsl
inc
xchg
mov
xor
adc
xor
pusha
sbbb
pop
sub
sub
shr
pushl
mov
push
pop
add
sbb
add
mov
mov
outsb
mov
cmp
inc
decl
push
mov
push
call
xchg
jge
adc
shlb
dec
cmpsb
inc
and
scas
inc
xor
cld
out
outsl
loopne
fcoml
fdivs
iret
xchg
shlb
outsl
jl
and
or
aad
inc
setl
aas
fimuls
push
sarb
inc
leave
test
dec
jnp
mov
in
fsubrs
sahf
pusha
jle
inc
inc
popf
mov
adc
test
cmp
fmull
je
shll
adc
call
ss
call
aaa
cmp
pushf
arpl
dec
push
gs
cltd
mov
cmp
and
mov
cmp
cmc
xchg
cld
aam
fdivrl
aas
lods
inc
test
repz
sbb
mov
jnp
enter
dec
mov
push
je
and
sbb
cmp
mov
cli
loope
pop
loop
lret
outsb
jnp
xchg
and
outsl
jp
lock
icebp
push
and
out
inc
dec
xor
outsl
notb
mov
inc
enter
enter
jp
jnp
pop
clc
push
repz
es
mov
push
ljmp
aaa
mov
loop
jmp
lods
jbe
push
cs
mov
call
rcrl
push
push
lods
pop
outsl
mov
sub
iret
imull
mov
xor
test
ret
push
jmp
inc
psubq
repnz
adc
lret
pop
in
cmp
or
or
mov
mov
jne
push
mov
or
xchg
jmp
sbb
mov
mov
in
add
mov
dec
mov
inc
xchg
jno
dec
push
fcmovb
pop
outsl
movsl
jge
mov
cwtl
inc
rclb
das
push
aas
xor
jb
xor
xchg
fiadds
cmpsl
repnz
xchg
repz
test
inc
daa
cmp
int
inc
lds
leave
sub
push
outsl
outsl
xchg
push
mov
sbb
jb
pop
notl
je
push
adc
xchg
cmp
push
cs
aaa
push
jbe
jge
sub
in
test
mov
or
and
mov
mov
jp
lods
inc
cmc
jmp
dec
mov
adc
mov
negb
add
jno
pop
xchg
mov
mov
popa
iret
mov
ret
in
add
push
clc
orl
cli
mull
fs
ja
clc
add
xor
mov
subl
xchg
aas
push
and
sbb
sbb
cmc
in
sbb
or
cmp
mov
enter
jo
subb
int
imul
sbb
push
pop
or
aam
add
push
lret
push
addr16
es
aam
cmp
fdivr
test
adc
test
lds
xorl
sar
pop
xchg
mov
int3
lods
or
ror
scas
scas
hlt
addr16
cmpl
push
or
out
pop
ja
push
inc
gs
test
or
mov
nop
stos
adc
cmp
call
faddp
ds
sbb
les
and
daa
orb
dec
into
or
loopne
sbb
mov
push
enter
cmp
xchg
mov
movsl
pop
cmpsl
mov
jo
xchg
das
repnz
mov
mov
push
aas
mov
mov
jbe
jnp
xchg
rclb
clc
call
out
je
and
out
push
and
sub
fs
cld
mov
sahf
aaa
stc
cwtl
push
inc
mov
pusha
insl
pushf
push
lea
mov
lods
xor
das
inc
adc
jge
push
repz
ret
xchg
mov
jnp
xchg
loopne
or
cli
xlat
addl
test
push
jnp
jmp
addb
lods
push
push
jnp
xor
mov
ljmp
enter
cltd
fwait
sbb
test
roll
int
or
mov
push
cwtl
sub
mov
lret
mov
pop
inc
ret
insb
ja
call
jle
and
andb
mov
inc
icebp
loop
cmpsb
cmp
add
fstpl
mov
out
lret
pop
mov
pop
lahf
in
push
xchg
lds
mov
mov
cmpsl
inc
icebp
jo
shlb
pop
aaa
xchg
push
adc
sar
fmull
jecxz
shlb
jo
test
push
mov
out
popa
sbb
les
inc
aam
in
int3
nop
fwait
and
leave
mov
sarb
inc
repz
sub
xchg
or
or
addr16
inc
mov
mov
int
xchg
out
imul
dec
cs
lods
fadd
hlt
hlt
lea
cli
into
cmp
push
pop
rcll
dec
push
lcall
gs
inc
mov
pushf
pop
pop
lahf
sub
xor
push
jl
cmp
jb
mov
sub
and
mov
dec
ret
push
sbb
sub
popf
sub
lods
addr16
lea
test
push
or
dec
xor
cmp
and
add
inc
ja
mov
adc
dec
test
out
xchg
sbb
pop
int3
inc
push
sarb
or
movsb
and
dec
cmp
mov
cmp
mov
inc
lods
lret
jb
in
jecxz
mov
jnp
daa
and
sbbb
lods
sbb
pop
cld
and
push
xchg
stc
fnstsw
xor
and
push
dec
mov
es
aas
jo
loopne
test
push
ds
sbb
add
xor
not
ret
aad
xor
rcrl
add
cld
cli
mov
mov
pop
cmc
jmp
or
mov
pusha
idivb
jmp
out
sub
jp
dec
mov
es
adc
repz
andl
out
jecxz
cld
outsb
movsl
dec
inc
add
scas
push
inc
clc
sahf
mov
dec
out
mov
adc
push
adc
cmp
fmuls
test
movsb
inc
mov
stos
add
mov
shl
mov
cmp
mov
or
rolb
lds
mov
mov
or
and
int3
mov
js
andb
ljmp
lahf
jne
insl
sub
inc
push
movsb
mov
popa
test
jne
adcb
push
jb
push
add
add
sub
jo
leave
add
inc
jb
sbb
sub
cmp
lods
mov
adc
je
in
enter
jns
fnsave
inc
pop
cmp
xor
out
pop
or
fnstenv
fisubrs
or
jae
lar
mov
int3
mov
out
jbe
push
push
nop
das
and
ljmp
out
jbe
ljmp
mov
xchg
fildl
out
add
xor
jo
cmp
inc
stos
lods
in
out
and
ja
pushf
fcmovb
stos
xor
test
xchg
in
test
mov
push
insb
hlt
dec
sub
inc
adc
ret
lcall
mov
lret
jge
les
arpl
cmp
loopne
or
mov
add
popf
in
arpl
xchg
out
pop
icebp
mov
and
pop
xchg
jge
mov
push
mov
adc
insl
nop
lcall
cmpsl
add
mov
xor
dec
outsl
andb
xor
dec
pushf
sti
dec
repnz
test
mov
xor
add
test
ds
xchg
in
imul
adc
jo
inc
xor
dec
out
cmpl
pop
and
sub
andb
or
test
call
rolb
outsl
rorl
dec
ret
dec
inc
mov
jno
imul
push
inc
sbb
inc
testl
jb
xor
or
fucomi
sub
insl
sub
add
dec
jbe
jle
xor
ja
mov
inc
ret
sbb
scas
push
xlat
js
adc
ljmp
cli
jns
gs
push
xchg
sub
cld
jbe
jne
mov
push
mov
or
add
shll
pushf
add
dec
insb
test
push
mov
imul
ds
clc
loop
xor
cmc
add
incb
out
in
adc
sarl
cltd
flds
xchg
cmp
or
popf
adc
xchg
and
subb
fbstp
adc
sbb
pop
ljmp
mov
and
sbb
sub
mov
mov
xchg
imul
sub
xor
daa
arpl
inc
adc
inc
jecxz
nop
data16
ljmp
fcmovnb
jge
mov
mov
outsb
push
lods
xor
xor
pusha
orb
and
mov
js
push
or
xchg
call
in
add
js,pn
orl
jo
pop
xor
sbb
cmp
dec
and
mov
push
popa
nop
fs
fdivs
test
pop
add
aas
pop
cltd
xlat
popf
cmpsb
push
pop
lahf
jne
pop
shlb
sub
inc
loop
lret
jns
movswl
cs
lock
cmp
cwtl
cmpl
inc
lret
and
sub
mov
or
fidivl
stos
or
dec
sbb
mov
jno
sbb
nop
popa
xchg
cld
jne
fs
lods
movsl
les
imulb
or
outsl
lcall
inc
xor
stos
sub
push
aas
lods
test
mov
lcall
hlt
ret
sbb
loope
adc
stc
add
out
inc
push
mov
loopne
sbb
lods
ret
xchg
cld
xchg
mov
fcmovnbe
dec
enter
mov
cmp
imul
mov
xchg
ret
or
mov
call
xchg
xchg
adc
push
punpcklbw
mov
out
adc
and
shll
fcoml
jg
stos
int3
xchg
gs
mov
xlat
mov
jl
adc
or
xor
movsb
dec
adc
jmp
inc
mov
aad
inc
sub
jl
addb
loop
mov
rorl
imul
in
mov
push
repz
cld
sub
adc
dec
mov
jle
hlt
dec
mov
fstpt
lock
sbb
in
sub
add
jecxz
addr16
loope
mov
sbb
jle
mov
movsb
sbb
mov
shlb
fstpl
into
loop
mov
mov
push
mov
xor
rolb
xchg
imull
push
or
jle
and
aam
adc
and
repz
pop
mov
loopne
push
ret
or
insl
adc
jmp
push
or
jp
inc
aad
mov
sub
xor
enter
cmpsb
decl
leave
ret
push
lcall
mov
and
mov
pop
ds
ja
and
dec
iret
stos
movl
mov
jno
mov
pop
or
popa
test
test
inc
out
sub
xchg
sbb
mov
int
scas
lahf
sbb
mov
lods
ret
das
ds
rcll
mov
sahf
mov
in
pop
mov
fwait
add
mov
sbb
test
lods
jne
in
mov
sbb
mov
in
jns
mov
lock
and
mov
inc
and
jl
cltd
and
push
loopne
ret
xchg
jns
xchg
inc
scas
out
loopne
mov
aam
add
xor
into
push
sbb
jo
dec
ds
push
cltd
out
cmp
push
pop
add
int3
jmp
lods
fcoms
dec
xchg
xchg
cmp
xchg
mov
arpl
mov
dec
clc
cmp
leave
adc
out
push
ror
inc
je
cmp
mov
insb
jge
mov
jp
pop
movsl
add
cmp
fldl
shl
xchg
je
dec
xor
push
je
addr16
push
cwtl
xchg
in
mov
xchg
sub
add
lahf
rcll
sbb
in
insb
fmull
sub
mov
adc
push
inc
mov
aaa
sahf
fucom
push
mov
sbb
mov
scas
out
adc
mov
nop
sub
ret
aas
and
enter
pusha
mov
js
lock
xchg
int3
push
stos
add
xchg
test
mov
jmp
cmpb
mov
in
inc
ja
addr16
jae
leave
out
das
mov
push
bound
fidivl
dec
inc
dec
fadd
scas
sti
inc
sub
jns
adc
daa
insb
xchg
mov
loope
fimull
mov
mov
xor
lret
push
mov
pop
or
sahf
out
jg
rcll
push
push
fnop
ret
loopne
lds
cmpl
pop
add
mov
data16
push
sbb
mov
push
in
pushf
cmpsb
mov
adc
push
or
sarb
shr
sub
aaa
stc
add
adc
push
cmpl
jo
sbb
mov
ljmp
pop
sbb
sub
pop
ss
aam
repnz
out
rcl
lahf
sbb
jb
pop
sub
rclb
or
sub
jmp
cmpsl
loope
sbb
mov
not
push
dec
clc
in
sub
adcb
jl
pop
push
mov
shlb
mov
push
xchg
mov
mov
push
cmpl
add
stos
es
int
adc
or
ret
lcall
leave
xor
cmp
xor
mov
xchg
mov
ss
out
push
in
jnp
and
add
int3
mov
gs
dec
nop
rolb
xor
or
sub
jb
and
arpl
cmpsb
int3
jecxz
jle
and
jmp
nop
xchg
inc
test
cmp
je
ljmp
inc
imul
out
dec
mov
popa
fwait
pop
adc
jmp
xor
pop
cmpsl
leave
sub
std
into
pop
xor
cmc
mov
mov
or
fucomip
xlat
cmp
and
fimuls
sbb
xlat
mov
and
inc
sub
xchg
xchg
mov
adc
cmp
add
js
aam
jnp
mov
lock
leave
fisttpll
and
pop
aad
out
adc
push
cmp
jno
inc
stc
test
xchg
and
je
xor
ljmp
icebp
fnsave
dec
stos
lock
jb
mov
xchg
mov
dec
pop
dec
cmpsb
mov
sub
lods
es
shl
call
inc
mov
enter
inc
scas
dec
test
mov
dec
imul
dec
int
jle
push
lahf
aaa
jle
mov
insl
repz
mov
dec
adc
sbb
fidivs
loop
cli
inc
loope
mov
jne
mov
jbe
aad
inc
lock
enter
repnz
lock
ss
lock
out
cld
addr16
cmc
mov
or
pop
in
mov
xchg
mov
cmpsb
xchg
in
and
mov
mov
imul
outsb
inc
pop
pop
mov
inc
out
stos
into
cld
pop
mov
in
jno
or
hlt
stc
fstpl
lds
mov
xchg
sub
ficompl
jl
bound
es
iret
iret
adc
push
push
ret
mov
stc
sbb
mov
xchg
adc
enter
jp
push
jle
sahf
dec
pop
insl
in
daa
sbbb
mov
cmpsl
push
ret
ret
push
outsl
mov
cmp
mov
shl
jnp
stos
dec
test
sti
fwait
cmp
jns
sbb
sub
push
out
lret
mov
js
push
jbe
add
cmp
pop
mov
lcall
jnp
push
cltd
mov
jnp
or
rorl
cmpsb
fsts
push
xor
lods
and
jns
push
jo
pop
dec
out
mov
fs
cwtl
and
addr16
add
movsb
dec
iret
les
xchg
cmp
mov
xor
hlt
sbb
out
ret
and
and
xchg
xlat
ret
rclb
mov
addr16
adc
jmp
push
js
xchg
pop
cwtl
jl
pop
mov
sbb
xor
cs
sbb
lods
mov
fcmovb
inc
shll
in
jle
pop
jmp
xlat
jns
loop
xor
jl
mov
aad
aad
pop
out
sub
lahf
mov
pop
test
mov
jl
movsb
mov
daa
pop
arpl
and
inc
push
xor
bnd
mov
push
repz
sbb
loop
dec
cmc
int3
mul
sbb
cmp
xchg
stc
sbb
fldl
imul
mov
xchg
xchg
mov
cli
xor
jmp
sar
aam
jnp
iret
xlat
ret
mov
fstps
out
dec
cmc
pop
cmpl
sbb
lret
sbb
repnz
call
sub
jle
mov
dec
out
adc
pop
adc
dec
mov
inc
mov
andb
iret
hlt
push
popf
cmp
lock
jp
pushf
rolb
mov
ds
call
subb
xchg
pop
pop
leave
mov
sahf
adc
iret
test
mov
decb
bound
cmc
fsts
sbb
push
movsb
push
stc
sub
outsb
ja
mov
cmpsl
popf
push
call
notl
dec
fldenv
and
xchg
outsb
repnz
and
fs
cmc
clc
out
jbe
adc
push
or
sti
mov
test
add
dec
or
sbb
jmp
test
adc
dec
movsl
sbb
adc
int
xchg
push
or
pop
into
or
icebp
xlat
pushf
xchg
pop
adc
lods
sub
decb
sub
insb
lcall
jno
lods
pop
sahf
iret
adc
int3
in
jge
lret
fwait
xlat
out
repz
mov
rolb
pop
push
xchg
pusha
loopne
mov
loop
push
fisttpll
es
jmp
jmp
push
aas
jno
into
jmp
xchg
jle
or
shll
out
and
fnstsw
cmp
lcall
loopne
ffreep
jmp
shl
or
aaa
push
sub
inc
mov
mov
add
add
dec
mov
js
fwait
lcall
out
ds
and
jo
cli
mov
mov
push
cmpsb
sub
repnz
test
sub
push
mov
xchg
or
bound
jno
subl
ret
aam
xor
add
loope
lods
jle
add
dec
mov
inc
in
mov
loop
mov
cmpsb
leave
pop
shlb
sbb
testb
sbb
js
iret
push
ror
cld
add
mov
daa
push
andl
inc
jns
lret
mov
ljmp
leave
lahf
orl
sub
in
mov
push
aad
popf
sti
ficompl
dec
xchg
dec
jb
repnz
je
dec
adc
das
out
jns
js
popa
push
aas
fstl
jle
mov
rcll
stos
push
cmp
xchg
jae
jl
enter
add
or
daa
ja
sti
pop
push
jp
mov
cwtl
and
popf
dec
ljmp
and
fistps
mov
pop
aam
mov
or
dec
lea
xchg
dec
fiaddl
mov
leave
bound
mov
xor
xor
pop
int3
leave
lea
lock
out
mov
jns
mov
test
or
jg
mov
rcr
xor
dec
inc
xor
mov
mov
push
add
in
jne
adc
pop
jmp
ret
movsl
sbb
popa
push
test
negl
mov
fwait
leave
push
cmp
pop
lds
adc
in
or
cmp
ret
mov
lcall
push
arpl
test
test
pop
mov
aaa
mov
andl
and
lahf
or
xor
push
jge
cmp
cmp
mov
popa
aaa
push
test
jge
sub
das
rcr
aaa
dec
inc
sbb
push
adc
jmp
push
inc
sub
mov
sub
js
cmpb
xchg
and
inc
fnstsw
xor
and
lsl
mov
cmp
adc
push
movsl
mov
iret
sahf
pop
jg
lahf
add
rorl
sub
push
int
addl
mov
jb
mov
mov
xchg
pop
outsb
ret
stos
mov
ret
mov
and
jnp
fcomip
rolb
fcoml
sbb
jae
jmp
adc
xchg
inc
test
repnz
dec
shlb
cld
inc
mov
inc
pop
xor
dec
aaa
push
sub
into
adc
jno
repz
inc
hlt
sbb
insl
sbb
xchg
pop
sbb
xchg
sarl
in
cwtl
je
int3
jne
fisttps
push
adcl
out
dec
mov
scas
in
sti
pop
fsts
xchg
jg
inc
xor
jbe
inc
icebp
das
call
subl
jle
push
dec
sub
repz
dec
cmp
cs
aaa
loopne
into
sbb
sbb
mov
rcl
lret
out
pushf
or
ja
sbb
xorb
xor
pop
mov
sbb
scas
inc
jecxz
inc
mov
andl
fcmovne
and
dec
gs
push
xor
shlb
subl
lcall
sub
jb
fidivl
inc
push
ret
dec
sub
ret
jb
jle
into
xor
pop
loopne
add
sub
mov
es
jbe
adc
icebp
idivb
or
push
mov
test
pop
xor
inc
aam
pop
sbb
js
shll
lea
mov
mov
cmp
mov
lret
lahf
mov
or
push
sbb
daa
or
fisubrs
cmp
sub
hlt
mov
push
mov
cli
add
test
sti
push
xor
lret
mov
movsl
push
and
or
cmp
sti
cwtl
into
add
pop
inc
lcall
jbe
adc
sbb
ja
xchg
or
xor
ret
sbb
orb
xor
push
xor
jmp
insb
mov
int
test
jp
ret
mov
aaa
cmp
sbbl
iret
mull
lock
lcall
and
scas
ret
mov
pop
bnd
int
inc
add
and
inc
loop
aas
pop
mov
movsb
jns
fcompl
outsb
xchg
cmc
das
xlat
call
mov
rolb
adc
loope
cmp
out
xor
jo
lret
test
pop
or
inc
mov
sub
push
lahf
pop
fisubrl
sub
or
addr16
pop
mov
mov
dec
scas
inc
ret
sbb
push
push
std
hlt
mov
rcrl
push
call
and
mov
ret
jno
insl
pop
push
adc
cmp
sub
in
lret
cmpsl
popf
dec
or
ficoml
or
imul
clc
outsb
add
cltd
mov
cmp
push
push
stos
mov
ds
add
mov
sarb
les
int
imul
ret
pop
xchg
loope
jo
fsubs
aam
imul
fcomp
sbbb
or
cmp
mov
jle
add
mov
insl
mov
push
ljmp
inc
mov
jecxz
and
dec
out
xchg
sti
mov
mov
jp
dec
shll
fs
fisubl
adc
jbe
dec
sub
popa
loop
ret
dec
addr16
sub
adc
pop
fdivrs
xchg
push
sahf
rol
testl
mov
shrb
mov
push
cmp
jae
ret
repnz
rcrl
add
iret
and
and
inc
in
dec
mov
xchg
fnstsw
mov
dec
jl
inc
jo
xchg
das
rol
fists
pop
mov
fs
mov
ret
mov
and
adc
sbbl
hlt
aam
dec
shlb
jge
fsubr
add
sahf
adc
pop
pusha
test
sbb
dec
add
lds
mov
dec
add
inc
and
push
cs
push
test
int3
int3
ret
je
and
lcall
xor
std
xchg
enter
test
in
pushf
push
adc
mov
es
fwait
shll
fistpll
xchg
jnp
daa
iret
insb
and
pop
cmpsb
fiadds
out
mov
xchg
out
clc
jmp
push
sbb
adc
adc
xchg
push
jmp
push
dec
inc
cld
cmp
inc
cmpsl
pushf
mov
push
cld
daa
aaa
out
mov
fdivs
mov
fiaddl
push
in
ds
mov
push
addr16
ret
inc
xchg
or
ret
out
adc
fcmovb
jne
bswap
xor
outsl
mov
clc
lods
and
xacquire
xor
aad
xor
stos
sub
xchg
cmp
and
mov
addr16
in
daa
insl
push
sbb
xchg
xorb
push
mul
iret
in
outsb
popa
lret
jne
sti
mov
cmpsb
hlt
clc
mov
pop
in
push
sbb
pop
cs
fs
inc
or
cs
sahf
add
jmp
in
aas
stos
popf
fsts
mov
test
jle
in
sbb
fwait
mov
push
test
loop
loop
loopne
divl
aad
inc
inc
leave
or
iret
mov
jg
or
icebp
jge
jl
cmp
loope
test
or
pop
inc
lahf
fwait
movsb
cmp
es
fimuls
dec
mov
cwtl
mov
add
stos
xchg
pop
lahf
cs
sub
cmp
lret
movsb
ret
mov
pop
cmp
in
or
aas
jno
pop
gs
testl
xor
mov
sti
push
rcrb
lcall
pop
sahf
ret
fwait
dec
jge
fs
ljmp
lea
sub
arpl
xchg
fmuls
jmp
fsts
fcoms
stos
aaa
in
das
or
cld
leave
xchg
xor
add
aaa
inc
cmpsb
stos
sub
push
mov
xor
adc
test
pop
fmul
in
ret
fistpl
into
cmpsb
stc
stos
sub
sub
or
jecxz
pushf
rcl
and
mov
es
fdivl
xchg
mov
xchg
loopne
fadds
mov
loop
sub
fistpll
fldl
aas
jb
adc
out
pop
loope
xchg
loop
enter
mov
xchg
xchg
xor
or
test
roll
jl
fisttpll
mov
push
mov
es
test
sbb
cwtl
inc
outsl
sbb
jp
push
sarb
adcb
fs
pop
insb
outsl
loopne
or
xor
jp
sbb
jecxz
inc
daa
mov
xchg
adc
mov
imul
cltd
incl
repz
fsubrs
xchg
jae
mov
add
loopne
dec
push
std
jge
pop
jmp
pop
cmp
icebp
jg
popa
jb
ljmp
push
mov
aam
mov
sub
mov
jp
roll
sbb
pop
test
adc
jb
mov
xchg
popf
cmpsl
inc
sub
xor
cmp
push
imul
loop
or
popa
cmp
lods
sub
push
sti
decb
sbb
inc
mov
dec
into
jb
cmp
push
and
mov
push
mov
adc
std
pusha
stos
mov
mov
shr
imul
in
dec
ss
xor
jb
shrl
mov
xor
imul
xchg
icebp
sbb
push
inc
fdivrs
fstl
jo
popa
fbstp
shrb
push
imul
cmc
push
fcomp
jb
xchg
and
ss
xchg
inc
and
jo
dec
or
dec
xorb
es
stos
aas
test
cwtl
in
and
sarb
xchg
xor
aam
sub
stos
sbb
xorb
or
test
add
mulb
cld
divl
pushf
mov
xchg
sbb
lcall
mov
aas
or
sub
inc
imull
and
jae
sti
xor
mov
sbb
mov
in
inc
xchg
xchg
lods
out
sub
fiadds
aas
mov
sar
repz
es
jecxz
ja
out
mov
inc
ljmp
mul
out
mov
xor
jle
sub
mov
pop
adc
lret
xchg
jnp
pop
sbb
dec
inc
adc
mov
outsl
lahf
xorb
inc
inc
rcll
push
inc
mov
and
push
std
pop
sahf
push
sbb
jle
shlb
and
add
mov
out
and
dec
pmulhw
out
lahf
lods
dec
mov
or
xor
in
adc
and
mov
adc
dec
inc
jae
out
mov
push
rcl
jp
cmpb
mov
out
repnz
ds
xchg
push
sbb
push
in
std
adc
and
movsb
mov
adc
cmp
or
out
leave
sub
cltd
jae
movsb
sub
lcall
jge
sbb
sub
jecxz
into
stos
jb
inc
stos
sti
inc
xor
test
aas
mov
xor
loopne
testb
rolb
scas
mov
push
xor
call
loopne
out
aad
push
dec
pop
mov
lret
dec
jg
mov
ja
idivl
xchg
pusha
roll
sbb
aas
pushl
sbb
or
mov
push
std
icebp
mov
adc
mov
push
insb
jecxz
sub
jnp
cli
xchg
push
cmp
into
lods
pop
inc
in
dec
mulb
mov
mov
inc
sbb
mov
shr
mov
mov
les
xor
inc
loope
and
push
xchg
popa
movsl
aaa
divb
xchg
bound
lods
cmp
in
or
push
add
scas
popa
mov
push
scas
movsl
shll
subb
call
lods
and
fcmovne
fnsave
aad
fsubrs
sub
rclb
adc
cwtl
jno
jp
add
pop
push
pop
pop
lahf
shlb
or
or
mov
ret
cmp
je
fnstsw
pop
jo
pop
pop
push
add
push
xor
cs
inc
loop
imul
mov
pop
fisubl
xor
inc
mov
or
xchg
xchg
int3
jne
jg
add
daa
xchg
sub
movsb
dec
mov
pop
and
and
cli
out
imulb
xchg
ficoms
lds
ficoml
push
sub
je
mov
hlt
jp
mov
test
sub
mov
mov
dec
jnp
jbe
sbb
mov
lea
daa
mov
push
leave
xor
pop
fadds
xchg
popf
ds
mov
mov
mov
adc
icebp
mov
stos
jecxz
test
xor
jno
js
je
mov
popa
mov
rol
stc
int3
pop
gs
jno
add
andl
test
adc
or
daa
es
stc
rcl
mov
adc
xor
jp
mov
gs
pop
mov
push
mov
pop
cmp
mov
add
ret
loopne
les
aad
jno
sarb
pop
je
fwait
sub
mov
les
add
js
sbb
and
xor
mov
pop
out
adc
mov
mov
cli
aaa
xor
mov
lds
dec
cmp
aas
push
sahf
mov
cmp
add
xchg
sti
lcall
adc
je
out
or
outsl
and
jae
and
push
xchg
cmp
out
dec
inc
stc
or
xlat
push
loope
or
cli
push
nop
inc
mov
dec
cmpsl
nop
daa
adc
ds
repz
mov
inc
push
test
mov
pop
dec
and
jo
fstps
dec
aam
in
mov
mov
sub
imul
pop
std
lahf
or
mov
jge
push
sar
fidivs
sub
and
xchg
ret
lcall
mov
popa
push
sub
inc
mov
shll
in
cmp
pop
pop
mov
cld
cmpsl
int3
push
sbb
lahf
xchg
out
pop
rol
xchg
jecxz
in
push
and
outsl
mov
inc
xlat
push
int
mov
mov
mov
pop
push
pop
mov
jle
mov
and
push
loopne
ljmp
sbb
cmpsb
jns
and
sub
repnz
mov
hlt
int3
push
mov
rcrl
lcall
mov
dec
mov
xor
xor
cmpsl
dec
jbe
test
jecxz
cltd
mov
in
ffreep
xchg
dec
fcompl
cmp
ret
xor
add
mov
mov
inc
daa
adc
cmp
sbb
fldl
fsubrs
pop
fldcw
pop
repz
pop
sti
push
movl
testl
lcall
fisttps
sub
inc
sbb
pop
jne
scas
mov
pop
adc
scas
daa
xchg
sbb
pop
out
fs
cmp
outsl
lahf
xchg
divl
iret
outsb
cmp
push
xchg
cli
pop
dec
push
imul
jo
sbb
stos
xchg
xor
daa
push
and
and
or
cmp
test
xchg
cmp
cmpb
dec
push
jae
addr16
ficompl
addl
test
das
push
repnz
jl
jmp
in
dec
sbb
xlat
push
scas
out
call
xchg
sub
dec
cmpb
shl
pop
hlt
out
pand
or
fcoml
inc
xor
adc
test
shlb
aas
popa
mov
sti
jmp
mov
daa
jge
cmp
inc
add
mov
push
inc
inc
add
pop
pop
sarl
and
sbb
iret
and
sub
mov
push
lret
add
notb
mov
idiv
outsb
in
mov
jne
xor
jp
pop
inc
test
loope
sbbl
jmp
rorb
push
lds
mov
mov
lret
sub
adc
int
push
adc
les
insl
fs
sub
cmp
mov
pop
inc
repnz
xlat
xor
mov
cmp
mov
es
mov
mov
mov
ss
in
or
xor
stc
adc
testl
repz
bound
xor
pop
das
pop
pushf
lret
sub
data16
fistpll
inc
int3
jl
jb
divb
loop
mov
scas
mov
and
mov
pop
inc
fsubl
imul
dec
sub
in
outsb
loop
push
xor
movsb
jmp
mov
push
test
inc
push
sti
jge
jge
jnp
xchg
ljmp
arpl
dec
xlat
push
and
lock
or
loopne
xor
ds
mov
in
std
mov
jno
mov
out
mov
push
xor
inc
ja
bound
inc
jne
mov
mulb
sub
sub
jne
dec
push
std
jle
push
sbb
pop
push
lods
mov
or
inc
movb
into
xlat
jmp
scas
outsb
test
xchg
pushf
jb
bound
lahf
ret
xor
xchg
insb
jne
lret
mov
xor
cmpsb
xorb
inc
xor
scas
mov
inc
adc
sub
mov
xor
sub
loope
in
fwait
adc
out
inc
xor
imul
adc
mov
filds
lods
push
and
jno
repz
leave
out
push
aam
lods
add
int
jbe
lods
dec
cwtl
jnp
nop
sti
lds
aas
sub
dec
jg
cmp
out
jbe
mov
test
stos
push
xchg
fiaddl
arpl
adc
sub
mov
sbb
mov
dec
leave
mov
js
or
mov
xchg
pusha
mov
mov
loopne
in
mov
and
xchg
push
out
ss
into
arpl
pusha
push
lea
mov
dec
es
push
adc
scas
cmc
imul
mov
pushf
jno
loope
ret
xchg
xchg
aaa
mov
fldl
sub
push
add
xchg
push
cmp
loopne
hlt
cmp
imul
mov
stc
cld
cmp
es
std
enter
es
aas
cmpsb
mov
inc
pop
jbe
loope
cltd
loope
ret
pusha
outsl
xor
repnz
shrl
dec
icebp
aam
vpunpckhbw
hlt
iret
and
into
popf
mov
movl
test
xchg
add
loop
jmp
sub
push
das
pop
mov
stos
test
stc
lret
pop
jno
mov
add
or
xor
cmp
fisttpll
push
lods
rclb
inc
fidivrl
cmc
out
mov
push
xorl
push
fwait
push
ljmp
jmp
lcall
mov
mov
rcrb
inc
cld
sti
mov
mov
repz
test
pop
xchg
xchg
mov
scas
icebp
jne
jae
or
int
or
xchg
mov
add
mov
mov
je
pop
xor
mov
push
cmp
mov
pop
jp
test
add
cmp
cli
mov
je
xchg
mov
scas
outsb
sbb
or
lcall
mov
push
and
cmp
fstpl
push
pop
bound
add
mov
xchg
aaa
movsl
cmp
sbb
divb
inc
fs
adc
shl
jno
scas
fmull
mov
dec
and
andb
inc
ret
add
pop
push
out
pop
push
out
or
pop
dec
mov
insb
push
adc
rclb
sub
popf
push
subb
sbb
add
scas
mov
sbb
out
mov
hlt
idivb
jno
fimull
cmc
push
jnp
xor
push
or
pop
or
pop
xor
in
xlat
aam
mov
mov
adc
xor
mov
fwait
decl
cmc
imulb
out
xchg
orl
movsl
enter
adc
or
xchg
adc
iret
inc
cli
cld
pop
imul
or
fbstp
dec
mov
shll
data16
nop
or
mov
and
sbb
adc
push
push
jnp
pop
ss
es
sub
push
into
rcl
cmp
std
int
cmc
sub
call
pop
jmp
jmp
cmc
push
jecxz
ficoml
jae
xor
data16
pop
cmp
test
fidivs
xchg
xchg
sar
inc
add
sub
xor
inc
stc
xor
jg
xchg
pop
aaa
mov
test
stos
fsub
loope
cmovo
cmpsb
inc
in
inc
xchg
insb
arpl
cwtl
arpl
loope
and
pop
push
sub
in
mov
lods
fs
inc
dec
mov
out
push
cmp
std
push
call
pop
add
dec
rolb
stos
les
xor
mov
xchg
xor
adc
xchg
test
and
lea
arpl
fidivs
cltd
pop
ja
aad
xchg
imul
insb
mov
loop
lea
cld
ljmp
lods
mov
out
cmpsb
cmp
add
jnp
mov
push
xor
test
jbe
cmp
add
lret
bound
or
lret
pop
aaa
or
shrl
outsb
jle
jae
idivb
dec
dec
cmp
dec
xchg
fs
jae
adc
xchg
ret
sub
adcb
xchg
popa
cmc
orl
stc
pop
mov
out
dec
or
and
out
and
insl
mov
mov
repnz
icebp
hlt
pushf
popl
or
pop
loopne
xor
mov
icebp
lock
dec
int3
jne
dec
pop
mov
push
mov
push
mov
mov
inc
and
into
xlat
add
aas
out
std
mov
adc
or
push
push
sbb
jbe
cld
outsl
or
adc
sbb
sarl
xchg
pop
stc
in
fsubl
aas
test
push
or
mov
xchg
adc
xorb
loope
and
cld
out
sbb
and
fwait
mov
stos
dec
mov
push
pop
addr16
bound
sbb
pop
sub
push
xor
lea
push
push
push
in
push
cs
push
jl
mov
dec
mov
sub
out
mov
insl
mov
cmpsl
nop
aaa
jo
xor
fldenv
inc
fsubr
fstps
mov
jp
shrb
add
push
pop
stos
ja
test
sbb
inc
cmp
dec
enter
fisttps
lret
mov
dec
ljmp
cltd
outsb
cltd
inc
dec
mov
push
dec
popa
fwait
push
lret
fidivrl
ljmp
mov
jl
mov
cmp
popf
out
fisttps
add
ret
bound
into
cmp
adc
pop
lock
rcl
lds
rorl
je
sub
roll
test
aad
pop
scas
xchg
shlb
pop
nop
lods
std
xchg
insl
call
pop
mov
push
dec
shl
aaa
push
adc
dec
mull
loopne
scas
mov
push
push
xor
xor
mov
hlt
and
push
shl
cmp
mov
cmp
int3
addr16
jmp
or
in
xor
jg
jno
mov
out
xchg
jmp
out
mov
ds
popf
xor
outsl
int3
sbb
xchg
and
fiadds
lcall
dec
sbb
cmp
jmp
push
stc
addr16
cmc
enter
mov
repz
ljmp
sbb
xorb
and
xchg
into
or
push
or
and
xchg
enter
or
push
movsl
mov
xchg
aaa
add
fldcw
nop
pop
fstpt
in
loope
cmc
pop
xlat
cmp
push
push
insl
push
mov
out
inc
das
lock
cmp
lahf
sub
das
inc
pushf
imull
rolb
inc
in
popf
adc
insb
pop
cltd
dec
js
ljmp
xor
and
mov
iret
es
cltd
cmp
mov
lahf
push
jns
add
test
movsb
stos
cmpsb
push
mov
jns
frstor
aaa
or
pop
push
dec
xchg
jl
flds
and
mov
pop
je
jp
mov
add
cmpsb
and
fistl
aad
push
ret
out
or
xchg
int
pop
shlb
jg
cs
hlt
call
cmp
stos
mov
jb
or
cs
jne
jne
ret
xchg
push
push
or
xor
call
jg
test
mov
xchg
lahf
jmp
sti
mov
in
lock
cmp
sub
inc
and
push
lret
leave
rep
int3
xchg
fistpl
jo
cltd
mov
push
mov
mov
rcll
push
xor
push
mov
bound
out
pop
sub
sti
stc
iret
lahf
cwtl
std
jge
es
sub
cmp
pop
je
and
loop
push
mov
ret
jne
mov
cwtl
sbb
mov
push
out
es
push
xor
dec
jecxz
jno
stos
xchg
and
push
ja
icebp
out
xor
dec
sub
and
in
nop
pop
js
jl
lods
and
pop
ds
fsubs
es
sbb
cmp
dec
pop
jb
hlt
xor
ret
xor
insb
pop
pop
rcll
pop
inc
mov
test
mov
je
xor
and
push
mov
lret
dec
pop
mov
data16
cmp
xchg
adcb
icebp
in
out
sub
inc
lret
pop
jmp
repnz
pop
jno
xchg
jnp
sti
xor
in
jl
in
mov
mov
mov
xchg
fisubl
aam
ret
repz
mov
add
jnp
fdivl
push
lcall
dec
std
mov
or
push
popa
push
push
pushl
mov
inc
fmuls
iret
jbe
xchg
pop
lock
add
loop
cmp
xor
cmpl
adc
loopne
mov
add
ds
jne
mov
inc
dec
sbb
dec
cwtl
int3
adc
in
and
aam
adc
aaa
sbb
int
mov
roll
push
pop
jle
movsb
add
cmpsl
ret
sbb
jg
aaa
mov
adc
mov
iret
cs
push
ss
jp
int
addr16
enter
lock
data16
xor
sub
xlat
lret
push
pushf
pushf
test
mov
sahf
and
daa
add
and
jbe
jmp
push
std
xchg
jbe
adc
icebp
lods
push
fwait
jmp
jge
aam
test
cmp
lret
arpl
insb
or
xchg
test
repz
out
insb
hlt
xchg
sbb
xor
jmp
sub
adc
out
sub
sub
fwait
ret
adc
inc
nop
je
jmp
mov
push
dec
jne
and
mov
xlat
xchg
lds
mov
xchg
out
jg
or
gs
ljmp
xor
mov
cmpsl
mov
jp
fdivrp
jb
dec
jne
mov
aaa
ficomps
dec
bound
sub
cmp
jp
xor
stc
daa
inc
inc
add
mov
lahf
adc
mov
arpl
cli
shr
or
or
leave
into
jge
xchg
gs
pop
dec
jb
mov
rcll
gs
jbe
aam
movsl
pop
scas
call
push
push
loop
dec
and
mov
mov
data16
enter
ret
fcmovb
cmp
loop
sub
jbe
pop
push
jl
inc
push
aad
mov
fldpi
xchg
das
inc
insb
popf
test
aad
xor
in
xchg
mov
adc
inc
loopne
push
adc
insb
repz
imul
lret
std
mov
icebp
add
xchg
sbb
dec
pusha
and
rcrb
stc
inc
pop
sbb
addr16
mov
push
movsb
aaa
xor
pop
out
jp
ja
rolb
notb
ret
add
cmpb
push
enter
push
mov
sbb
sub
lods
dec
lret
fdivs
push
and
test
xor
dec
xchg
aam
scas
push
cltd
fcomps
out
cmpsb
cli
push
int
mov
cltd
mov
mov
divl
pushf
mov
icebp
adc
mov
inc
xchg
das
lods
xchg
scas
xor
repnz
and
test
xor
push
lea
mov
fsubrl
lods
fmuls
mov
dec
xor
sti
sub
fistps
sbb
mov
and
ficomps
push
outsl
in
lods
cmp
cmp
les
pushf
repz
iret
lahf
lock
push
lcall
aaa
dec
xor
out
imul
jecxz
in
mov
rcrl
fmull
pop
test
xchg
loop
bound
jnp
inc
mov
fs
or
fisttpl
addr16
rcll
sbb
call
push
scas
mov
and
dec
dec
popa
mov
inc
inc
fimuls
mov
scas
outsl
lods
and
jno
push
adc
mov
add
bound
mov
repz
jecxz
jne
pop
mov
sub
negb
add
pop
add
pop
das
push
ficomps
pop
xchg
aas
outsb
loop
es
iret
push
mov
jmp
and
dec
nop
jmp
xor
and
push
aam
pop
out
adc
cmp
jns
lret
mov
movsb
mov
fildl
ljmp
fbstp
adc
test
les
loop
mov
insl
pop
stos
lea
out
pop
sarb
cmpsl
cmp
pop
cmpb
sub
fidivrl
push
stos
sub
jge
aam
mov
scas
jo
dec
mov
aad
cmp
or
inc
mov
jp
ds
pop
je
jp
mov
jecxz
mov
pop
cmp
mov
mov
jne
jnp
mov
mov
adc
adc
pushf
pop
sbb
mov
cmp
outsl
insb
ret
lahf
jle
jp
pop
mov
xor
ja
push
in
cmp
add
cld
lret
sub
lret
lods
rolb
stos
arpl
jmp
pop
iret
inc
push
mov
cmp
mov
cld
cmp
xor
mov
pop
ret
adc
pop
gs
xor
sbbl
xor
xchg
lds
mov
add
adc
jle
movsl
loop
dec
mov
xlat
xchg
andl
mov
sbb
rclb
mov
mov
jo
push
push
fnsave
xor
push
mov
or
pop
jp
xor
mov
mov
js
imul
rol
add
adc
scas
jno
jae
xor
hlt
jecxz
or
fabs
jg
inc
sahf
js
jo
scas
cmp
jae
mov
jp
lds
sti
das
adc
add
in
xchg
bound
aad
leave
mov
mov
cmp
cld
pop
sarb
pusha
sub
and
fldcw
sarb
lds
mov
dec
mov
popa
lods
pop
adc
mov
jg
xor
mov
test
add
dec
loope
push
aaa
iret
fisubs
aas
aam
jne
mov
rcl
cs
stos
dec
rcll
addr16
divl
mov
cmp
in
sbb
dec
and
jne
xor
and
and
dec
pop
lcall
cmp
inc
mov
mov
pop
and
lret
xlat
pushf
mov
jg
and
pushf
leave
cmc
pop
add
dec
add
mov
xchg
dec
pop
test
push
mov
sbb
test
and
sbb
inc
mov
or
xorl
movsb
lods
push
or
jne
leave
repz
cmpsb
jmp
scas
add
mov
mov
and
xchg
cmp
scas
sub
cli
push
and
hlt
aam
pop
in
inc
mov
loop
xor
fsubrl
sarb
sbb
push
pop
je
inc
stos
outsl
add
dec
push
cmp
ja
or
addr16
xor
push
insl
add
pop
jp
xor
cltd
jnp
push
xlat
int3
mov
cwtl
mov
inc
pop
sub
pop
mov
jno
adcl
or
arpl
movsl
sub
lods
sti
and
add
inc
in
pop
jle
lods
dec
adc
push
sub
pop
xorl
cld
adc
add
adc
xorl
push
pop
rolb
or
jp
mov
mov
lcall
fiadds
mov
dec
lahf
inc
fstl
jbe
pop
cltd
pop
jnp
ss
lods
and
sub
push
xor
dec
sub
addl
int3
jo
fnstcw
test
sbb
xor
pop
shr
in
cmp
scas
dec
mov
and
aad
mov
outsb
std
push
xchg
cmpsl
bound
and
and
int
test
mov
ret
add
out
mov
and
cmp
add
pop
pop
nop
daa
xor
je
aam
pop
sbb
sub
dec
lret
pop
or
fimuls
repz
repz
sbb
sub
repnz
inc
loope
pop
das
jno
jno
pop
push
mov
add
lcall
imul
sbb
das
push
jae
loopne
sarb
jmp
cmpsb
arpl
loope
test
gs
mov
popa
xor
stc
jle
sub
fidivl
call
lret
repnz
mov
mov
rcr
add
in
fucomp
mov
mov
sbb
loope
scas
cmp
push
xor
pop
mov
scas
jmp
lds
js
mov
push
inc
lds
rclb
push
mov
ljmp
flds
or
sub
xor
cmp
out
scas
sub
cmpsb
xor
sub
jne
jno
and
and
add
dec
jle
les
adc
cmp
aas
sti
stc
and
rcr
pop
das
lds
sbb
imul
mov
fisubs
or
add
sub
ss
sub
dec
outsb
aaa
pop
adc
mov
inc
inc
cld
sbb
sub
sub
mov
movsl
adc
les
ficoml
cld
sbb
cmc
jae
clc
jbe
mov
mov
out
cmp
decl
mov
mov
xor
out
fsubrp
cmpsl
cmpsb
mov
inc
aaa
adc
mov
and
jns
mov
clc
xchg
jbe
in
or
es
scas
ret
aad
loope
jae
push
pop
popa
push
mov
xor
xor
mov
jecxz
repz
fsubr
ds
pop
daa
call
call
adc
mov
sub
add
das
pop
adc
arpl
mov
pop
sub
cmp
add
and
and
imul
sub
pop
test
call
push
sbb
sub
or
movsb
popf
shll
mov
clc
stc
and
inc
ljmp
inc
loope
sub
cmpsb
dec
inc
cmp
mov
gs
mov
xchg
pop
popa
lock
or
adc
std
test
sar
mov
imul
xchg
dec
jbe
xor
push
ret
and
orb
fsts
jne
vmulpd
and
or
ljmp
lods
out
mov
pop
inc
xchg
mov
daa
xchg
fisubrs
es
xchg
iret
and
jno
jge
inc
and
xchg
cmc
lret
fstpl
ja
sbb
mov
les
pop
inc
orb
sbb
push
ss
popa
jp
sbb
jg
jg
dec
mov
pop
popf
lret
xlat
fbstp
roll
mov
xchg
mov
adc
xchg
xor
inc
sub
inc
cmc
sbb
popf
ds
adc
xchg
insl
mov
out
pusha
inc
cmpsl
push
popa
pop
fs
fld
jae
jmp
xlat
mov
add
jecxz
inc
clc
pop
cmp
aam
sub
adc
loope
xor
inc
addl
loopne
aaa
jp
adc
push
mov
inc
and
pop
cltd
subl
test
call
mov
cmp
popf
mov
jg
and
js
and
adc
in
cmpsb
add
pop
aaa
in
sbb
push
call
push
movsl
adc
faddl
mov
testl
xlat
mov
mov
and
mov
in
inc
loope
imul
icebp
jl
addb
sets
jl
fdivrs
adc
xor
lods
fiaddl
test
xor
adc
jns
xchg
jmp
int3
lock
in
cmpb
pusha
sub
mov
dec
jnp
pop
fistl
pop
adc
jle
mov
jne
push
fs
scas
mov
jge
add
insb
mov
xchg
sbb
scas
data16
xor
and
leave
cltd
arpl
cwtl
fbld
jno
inc
sub
pop
push
fcmovu
rcll
xor
jae
pop
fmulp
cmp
dec
mov
lret
roll
int
add
cld
push
popf
test
cmpsb
add
outsl
mov
fs
push
popf
and
or
inc
or
cltd
mov
inc
adc
add
icebp
xlat
xchg
fimuls
ret
shll
and
pop
int3
mov
xor
test
adc
or
lock
jmp
jl
xchg
sbb
dec
jb
fxtract
add
hlt
dec
pop
lcall
cmp
mov
dec
cmp
rolb
jmp
je
clc
cmc
inc
mov
xchg
rclb
pop
movsb
mov
mov
pop
mov
das
dec
rol
inc
imul
xchg
sub
sahf
adc
sbb
push
popa
inc
pop
nop
xchg
aas
xor
or
test
hlt
push
and
add
jg
test
dec
icebp
loop
les
sub
jecxz
mov
popf
adc
xchg
test
imul
lea
nop
arpl
push
int
clc
mov
stos
sbb
cmp
jl
les
xchg
xor
push
dec
cli
xchg
nop
or
ret
cmp
and
stos
mov
test
daa
xchg
mov
sub
popf
fistpl
ret
mov
fidivs
outsb
mov
out
movsl
and
leave
sbb
xor
js
or
push
dec
dec
mov
adc
rclb
fistl
mov
dec
cli
pop
and
in
jae
pshufw
faddl
or
int
add
add
fs
repz
inc
push
repz
jbe
xchg
ds
dec
insl
cmp
int
xchg
push
shll
sub
fwait
inc
mov
sub
imul
or
xchg
sub
sub
scas
dec
xor
sub
mov
mov
cs
insb
out
jo
enter
mov
dec
xchg
addr16
and
lahf
xchg
mov
fdivrl
sub
fisttps
pop
mov
lahf
mov
push
enter
cwtl
and
outsb
mov
dec
adc
cmp
loop
outsl
xchg
mov
adc
push
xchg
xor
arpl
mov
and
xchg
add
sub
test
sbbb
cmc
and
lock
in
jg
stc
jg
imul
outsb
bound
mov
inc
pop
xchg
into
mov
jg
movsl
outsb
lahf
cmp
xchg
dec
xor
in
or
xor
test
scas
cmc
adc
adc
fisttps
mov
pop
sbb
xchg
pop
loop
lea
and
outsb
fidivrl
cld
lret
add
testb
push
frstor
adc
das
inc
jne
inc
lahf
fisubrs
xlat
jno
fdivl
loopne
shrl
jae
in
sbb
mov
mov
bound
das
lcall
es
mov
movsb
add
jo
push
jl
insl
cli
lock
sub
push
cmp
stos
test
fildll
inc
popf
pusha
popf
fidivl
dec
xchg
xor
add
jmp
and
pop
in
mov
cmpsb
mov
and
dec
adc
std
popa
jecxz
dec
jg
jb
add
in
aam
lcall
fsts
mov
pop
fcomps
sub
cmp
cmp
iret
mov
dec
inc
aaa
mov
out
sub
les
sbb
dec
out
inc
aam
icebp
cmp
jmp
ja
idivl
jae
push
pushf
xor
jae
sub
mov
repnz
mov
sti
xor
js
mov
sbb
cs
bound
mov
mov
pushf
add
repnz
rorl
stos
adc
lret
stos
jbe
xor
push
mov
lods
enter
sbb
in
sub
dec
repnz
push
pop
je
sbb
or
fs
push
movsb
cmp
rcrb
icebp
lcall
pop
sbb
push
popf
mov
pop
mov
sub
xchg
pushf
hlt
pminsw
mov
stos
int3
fwait
lds
add
cmp
addr16
inc
out
and
rclb
ret
pop
jae
add
jo
sbb
sub
lea
jo
mov
xorl
sti
repz
mov
mov
push
sub
je
cmp
lock
ds
js
lods
insb
adc
mov
mov
test
icebp
test
push
dec
jp
and
leave
push
mov
jmp
bound
pop
out
xchg
pop
jp
dec
mov
popf
imul
mov
cltd
or
fwait
aas
gs
mov
mov
loope
lret
xchg
or
inc
push
les
cmp
jl
inc
jo
pop
sarl
arpl
mov
jmp
jns
test
shlb
js
push
das
aaa
scas
sub
add
xchg
aas
ret
bswap
insb
aad
push
iret
cmp
jle
repnz
push
and
adc
sbb
inc
fsubp
out
mov
cltd
movl
aad
clc
cmpsl
dec
inc
dec
xchg
push
aam
lret
lds
inc
les
call
lahf
in
hlt
mov
sub
divb
ret
push
outsl
gs
dec
jle
cmc
jecxz
shrb
es
cltd
jo
ja
lret
xchg
xor
shrl
mov
ret
mov
orl
rol
cmp
mov
lods
push
push
stc
ret
popf
aad
imul
xchg
arpl
insb
fldcw
daa
jl
pop
mov
add
mov
push
nop
mov
cld
pushf
or
and
sub
lret
fsubr
roll
jno
pop
dec
jo
gs
or
xchg
ja
jns
pushf
shrb
addr16
and
in
mov
leave
mov
fiadds
sub
pushf
dec
jg
aam
cmc
mov
mov
fadds
int
adc
rsm
xchg
addr16
pushf
cmc
jo
test
in
enter
leave
and
out
and
and
mov
testb
int3
adc
xchg
mov
add
in
shrl
lret
in
cmpsl
stos
inc
sbb
mov
hlt
xchg
fisubs
lods
aas
push
movsbl
test
cmc
sahf
lret
push
pop
idiv
cmp
jle
mov
sub
cmp
ret
leave
mov
dec
ss
je
lods
jnp
cwtl
inc
addr16
sub
das
cltd
mov
arpl
pop
xchg
mov
sahf
inc
jae
ret
inc
adcb
repz
push
imul
in
lcall
aaa
add
addr16
dec
push
pusha
rcll
scas
stos
loope
lahf
fmuls
inc
add
xor
in
test
ffree
xchg
or
insl
dec
mov
filds
mov
push
jl
inc
jnp
jge
movsl
jnp
test
or
inc
scas
xor
popa
xchg
add
jp
montmul
cmpsb
add
or
aas
cmp
imull
sbb
jbe
xchg
and
je
inc
in
sub
cmp
sbb
pop
pop
push
mov
push
fidivrl
test
and
sub
shlb
or
ja
loope
xchg
xchg
adc
movsl
sarb
notl
adc
inc
call
in
cmp
cmp
les
lock
inc
mov
popf
adc
pop
lods
inc
in
lods
inc
dec
dec
stos
sbb
mov
pusha
or
pop
sbb
xor
scas
test
ss
ret
addr16
mov
repnz
adc
movsl
pop
add
jg
aaa
sbb
enter
movsl
test
inc
sub
xchg
lods
sbb
sti
mov
movsl
or
mov
sbb
repnz
and
push
cmpsb
movb
push
inc
mov
test
sti
jo
orl
pop
xor
stos
in
loopne
inc
les
inc
scas
popf
xor
ljmp
push
out
nop
push
arpl
or
sub
stos
dec
mov
inc
jae
fldcw
lods
push
sbb
clc
fsubl
push
loope
mov
stos
test
mov
cs
notb
bound
pop
test
int3
jmp
fs
cmp
push
xchg
fmulp
jmp
sbb
dec
or
mov
mov
jns
test
ja
inc
dec
mov
shlb
push
push
jb
xor
sub
shl
mov
sbb
xor
push
filds
fidivrs
test
insl
jecxz
jecxz
ret
jg
mov
enter
xor
lods
and
push
push
test
sub
cmp
pop
mov
push
mov
jo
insb
jb
stc
idivb
dec
test
mov
sub
cmp
push
pop
mov
cltd
pop
outsb
int3
hlt
xor
pop
fldt
jne
mov
stos
push
enter
mov
push
dec
jmp
je
mov
movsbl
lahf
in
in
inc
cmp
or
movsl
ret
adc
sbb
rcll
jb
mov
pop
movsl
pop
mov
imul
inc
pop
mov
aaa
or
scas
sub
loope
mov
mov
inc
loopne
into
adc
jae
iret
jae,pn
add
xchg
ljmp
sarb
xor
adc
mov
sub
mov
ljmp
outsb
or
test
inc
nop
icebp
mov
popf
sbb
xor
repz
lcall
stos
and
mov
add
pop
icebp
test
repz
mov
push
lods
ret
shll
test
pop
inc
xorl
jge
sub
jmp
cltd
sub
icebp
rolb
sti
dec
inc
jnp
addr16
adc
push
pop
dec
dec
mov
sub
push
push
jae
cmp
shrb
aad
xor
xchg
xor
stos
jp
fxch
adc
stos
mov
dec
aad
mov
pop
iret
cmp
stc
mov
add
in
mov
add
cmc
mov
dec
mov
xchg
mov
dec
add
loope
jnp
ljmp
xchg
dec
in
loopne
in
out
loop
pop
pop
cwtl
es
cmp
mov
mov
repnz
dec
leave
or
mov
inc
cmp
dec
inc
out
dec
stc
test
cwtl
scas
cmpsb
mov
rclb
sub
cmp
jmp
pop
push
adc
xor
mov
mov
in
clc
xchg
inc
out
mov
jl
add
fs
repnz
cmp
lcall
sahf
gs
or
jbe
sbb
dec
xchg
shl
mov
push
pop
int
in
jmp
push
cmp
lds
sub
insb
push
sbb
cmpsl
sbbb
leave
mov
mov
or
cli
aaa
mov
lods
orb
and
cli
sub
int3
inc
aam
es
push
into
jle
xlat
stos
iret
jp
push
xor
mull
push
push
push
adc
jno
js
bnd
sub
imul
nop
insl
and
lock
mov
mov
pop
jbe
pop
pop
mov
test
mov
pop
xchg
sub
cmp
or
jne
jbe
inc
sbb
or
popa
inc
sbb
out
cltd
arpl
pop
loope
mov
xor
sbbl
sub
ret
xor
cmp
lret
repnz
fwait
in
mov
addb
fsubrs
into
gs
lods
sahf
mov
aam
or
add
mov
sbbb
pop
sbb
mov
bound
dec
dec
sub
test
xchg
stos
clc
mov
push
aaa
outsl
jns
sti
adc
xor
adc
clc
in
test
popf
into
in
imul
shl
push
stos
pop
fs
enter
mov
sbb
jp
fs
lret
testb
pop
mov
or
inc
mov
rorb
addb
push
or
pop
into
in
push
lahf
mov
dec
add
xchg
and
lret
fsubl
lcall
mov
sub
xor
xor
cmp
dec
repnz
leave
aad
mov
test
clc
rcrb
sub
mov
push
dec
clc
leave
leave
sub
lea
ja
mov
repnz
sbb
sbb
rcl
and
mov
frstor
mulb
add
mov
lret
lods
addr16
adc
das
je
xchg
sub
pushf
movb
jl
mov
hlt
movsb
jmp
out
cmc
or
int3
clc
jbe
and
stos
mov
xchg
push
pop
pmulhuw
jo
sbb
gs
gs
cmp
fstpt
pop
or
push
dec
mov
je
insw
push
aad
pop
je
fisubrs
pop
bound
or
loop
sbbb
lret
jecxz
cmp
test
dec
xor
sbb
mov
pop
or
fimull
movsb
push
xor
cmp
jmp
ja
adc
push
xchg
icebp
fcmovbe
push
rcl
mov
xor
pop
loopne
repz
loopne
fldt
mov
dec
popf
ftst
mov
cltd
into
mov
ficompl
js
cmc
sbb
inc
xchg
out
mov
cwtl
inc
cmp
or
sarl
addr16
inc
inc
mov
mov
test
mov
clc
jge
cmpl
and
rolb
sbb
adc
sbb
jmp
insb
je
mov
fcmovne
daa
push
adc
mov
addr16
dec
cmp
scas
lds
pushf
sbb
mov
jbe
into
cmp
out
push
mov
cltd
inc
push
push
andl
sbb
lods
je
scas
pushf
mov
sbb
mov
xor
movl
lret
and
fcompl
sti
inc
mov
rcrl
xor
pop
andl
into
mov
sub
aad
jo
out
shl
imul
ljmp
pop
movsb
jae
jl
ficoms
sbb
hlt
fdivp
fwait
ljmp
jg
jo
jbe
dec
push
loopne
outsb
stc
mov
sub
cwtl
mov
imulb
leave
inc
pusha
arpl
jnp
add
les
insl
xchg
lock
sub
cmpsl
ds
arpl
dec
push
cmpsl
adc
or
cmpsl
xor
mov
push
dec
jbe
add
hlt
or
push
xchg
test
mov
add
dec
dec
mov
sbb
pop
pop
adc
arpl
out
adc
pop
xchg
pop
insl
in
and
xchg
mov
pusha
jo
pushf
mov
mov
pop
and
lock
lcall
or
pop
jge
mov
imul
xchg
lret
add
lcall
arpl
push
enter
leave
gs
xchg
cmp
shr
push
ljmp
jo
jnp
fimull
aas
mov
jmp
mov
scas
jmp
push
test
sbb
jl
pop
and
cmpsb
adc
mov
sub
repz
std
xlat
cmp
sbb
inc
or
gs
mov
sarb
div
ss
or
push
sbb
mov
das
lret
in
stos
out
fimuls
and
js
dec
pop
pop
push
cmp
xor
imul
rol
add
sbb
pop
test
arpl
mov
mov
enter
sub
xchg
mov
inc
jno
aas
jbe
imul
dec
sub
stc
push
pop
xor
hlt
pop
or
add
jecxz
mov
loopne
push
call
inc
sarb
cmpsl
icebp
ja
push
lret
sub
test
mov
imul
lret
pop
imul
sbb
scas
stos
ljmp
inc
or
dec
scas
push
mov
push
inc
cltd
dec
mov
cli
test
xor
mov
jb
inc
out
subl
or
xor
mov
cmp
sbb
lods
adc
and
lret
repnz
fnsave
pop
xchg
test
fdiv
clc
sub
fidivrs
mov
xchg
jb
push
fistl
xchg
jge
mov
test
outsl
or
or
cmp
xchg
data16
sub
loope
scas
call
jmp
jecxz
lcall
push
mov
or
or
push
arpl
adc
cmpsb
fsts
shrb
aas
dec
mov
sbb
push
xchg
mov
inc
cmp
mov
pop
and
jns
push
mov
jae
adc
sub
shll
dec
sbb
xlat
js
lret
leave
or
ja
shll
xor
adc
ret
pop
xorl
add
push
dec
stos
arpl
lret
out
jbe
repnz
aad
je
jns
scas
nop
and
dec
out
jo
jnp
jnp
jmp
cwtl
mov
pop
fs
mov
dec
xchg
push
movsb
dec
loop
xor
pushf
in
shr
push
sbb
clc
lods
xor
dec
lods
dec
xor
pop
test
lahf
ret
ja
add
pop
and
clc
inc
arpl
mov
aad
mov
cwtl
sub
fistps
cli
xchg
leave
xchg
dec
rorb
roll
cmc
or
lea
xor
add
insb
adc
or
daa
test
inc
stos
icebp
cwtl
pop
push
sti
push
in
loop
pop
add
fdivl
lret
sbb
adc
xor
jg
int3
in
incb
jo
and
jne
aad
cmp
stc
lds
cmc
add
pop
jp
adc
in
mov
lcallw
movsl
mov
daa
enter
dec
loopne
sti
xchg
sbb
movsl
push
sbb
lret
mov
mov
mov
xor
jecxz
pop
mov
cld
std
in
shlb
rorl
stc
mov
in
fcomi
and
cmp
sbbb
fdivp
or
call
xchg
pushf
xchg
push
xchg
jno
mov
cmp
add
imul
xor
pop
fistl
andl
cmpsb
cmpl
pop
push
shl
xchg
out
popf
test
int3
xor
movsb
jge
add
add
dec
and
sub
ss
pop
ret
out
xchg
cltd
and
enter
int
sbb
vfmadd132ss
pop
push
sub
lret
fbstp
push
and
push
fs
mov
sbb
test
cmpb
stos
jg
rep
pop
and
push
clc
and
iret
jne
mov
push
and
scas
push
rorl
or
add
cmp
pusha
lea
orb
outsb
push
mov
push
dec
clc
xchg
sub
mov
aaa
aam
test
in
push
mov
out
lret
data16
cmp
pushf
push
lea
shl
and
pop
in
popf
imul
lret
pop
dec
jb
clc
inc
loopne
addr16
dec
andb
sti
imul
call
popa
sbb
cmp
pop
imul
adc
xchg
or
xor
pop
add
adcl
jb
push
outsl
ss
dec
mov
lcall
loope
fcoms
sub
mov
out
cs
insb
outsb
ss
cmpsl
mov
imul
hlt
or
jp
fistl
xchg
push
cs
out
pop
sbb
imul
mov
out
in
jno
jmp
jb
rorl
fidivl
das
jmp
dec
ret
iret
mov
dec
dec
rorb
xchg
cmp
xor
aaa
lds
and
cld
sub
lods
les
je
rclb
in
xchg
jno
sub
and
mov
pushf
adc
or
mov
jmp
lea
jge
mov
lock
in
aam
mov
call
cmp
inc
fwait
and
shl
lret
adc
test
je
pop
das
inc
and
or
adc
daa
movsb
mov
popa
mov
in
push
push
xchg
pop
fmuls
lock
pop
fistps
and
clc
sbb
nop
fcomps
cmc
push
bound
into
dec
rcrb
int3
add
cmc
lahf
push
mov
push
dec
int
rclb
xor
int3
mov
psubb
push
in
scas
jmp
loopne
pusha
xchg
adc
jno
or
add
pop
call
dec
mov
shll
popa
inc
fldcw
fdivl
ja
push
fcoml
insl
mov
into
int3
lea
dec
pop
push
mov
pop
add
stos
dec
xchg
je
bound
aam
sub
mov
mov
mov
ss
arpl
add
pop
lds
pop
popa
cmpl
cmc
jo
repnz
push
and
xor
cmpsb
ljmp
in
push
cltd
fcoms
pop
outsl
addr16
add
pushf
and
mov
add
or
push
lret
pop
ds
xor
mov
or
jmp
int
out
and
scas
loop
xchg
cmp
xor
push
xor
push
shlb
mov
dec
add
lahf
das
daa
test
out
dec
ja
push
nop
sbb
int3
jo
int
mov
in
or
fstpt
push
cmpb
repnz
lods
dec
inc
dec
xchg
sub
fsubl
lods
jno
sbb
jnp
xlat
sub
in
imul
or
fwait
rcrb
je
pop
loope
shrb
adc
test
pop
sbb
or
stos
and
enter
mov
fimuls
xor
mov
xor
xchg
push
movsb
sub
stos
sbb
lea
sub
scas
xchg
cli
mov
stos
push
and
ljmpw
stc
imul
repz
mov
popa
or
sbb
hlt
hlt
ljmp
xor
setnp
imulb
dec
cld
fimuls
inc
push
arpl
in
pop
cmp
pusha
lods
pop
in
sti
or
jl
icebp
push
jo
test
pop
or
push
and
jg
inc
lret
int3
mov
icebp
sub
push
add
mov
mov
adc
aas
jecxz
xchg
lahf
cmp
test
jo
int3
mov
fimuls
sub
or
inc
and
dec
xchg
sbb
jb
ljmp
jne
ljmp
cltd
scas
sti
push
xor
pop
loope
jbe
fs
adc
test
xchg
scas
ss
ror
pop
gs
sahf
jne
arpl
lock
das
mov
addr16
stos
lock
xor
insl
jle
inc
xchg
iret
push
enter
lods
fwait
outsl
sub
xchg
xchg
adc
jmp
pushf
sub
fldl
adc
pop
sarb
addr16
test
jno
shll
mov
test
cmp
dec
and
jb
out
jne
xchg
lret
push
cmpsl
fnstsw
insb
xor
ja
leave
enter
mov
ficomps
and
rol
jne
cmpb
lahf
call
xor
cltd
mov
push
or
mov
mov
ret
daa
mov
add
ss
push
mov
js
inc
or
and
add
mov
sub
int3
mov
js
roll
bound
sbb
out
fistps
sbb
sbb
push
xchg
xor
dec
rcr
mov
adc
adc
add
dec
out
pop
rcll
jo
loop
pop
inc
movsl
adcb
cmp
ljmp
or
or
dec
in
ror
ret
cmpsb
xor
pop
dec
jbe
es
xchg
jb
and
and
cmp
insb
push
add
sbb
pop
repz
jb
clc
mov
mov
negb
mov
adc
push
xchg
mov
jne
dec
scas
shlb
mov
movsl
in
ret
data16
repz
mov
cmp
insl
cmp
repz
idivb
mov
lock
jns
jge
je
test
jo
and
test
pop
inc
sti
adcl
loop
ficoml
lret
cmp
das
popf
lret
lahf
sub
loop
mov
fbld
aaa
cmp
stc
aad
inc
xchg
push
pop
clc
jae
aaa
mov
and
lods
daa
mov
fdivs
or
xor
jbe
hlt
sub
addl
mov
in
test
andl
add
lret
jmp
mov
clc
dec
test
sti
in
push
popa
pop
adc
jo
cmp
dec
icebp
push
es
sbb
mov
ja
js
jae
xchg
and
roll
stos
sub
mov
stos
std
jno
test
cmp
or
xor
add
pop
daa
cmp
dec
xor
cmp
movsl
lahf
push
jp
inc
jne
xchg
mov
push
jecxz
mov
mov
jae
cmp
pop
sub
or
jbe
mov
xor
jge
and
or
out
and
out
lahf
ds
stos
mov
adc
adc
loop
pop
stos
and
fnstcw
mov
sahf
lahf
jo
jge
jmp
xor
add
std
bound
enter
jp
adc
je
lock
jmp
aas
push
int3
mov
int
sbb
mov
pusha
push
mov
test
mov
adc
mov
xchg
cmc
xor
imul
xor
adc
cmc
mov
jmp
sbb
cvtdq2ps
add
or
and
std
mov
xor
bound
mov
mov
hlt
fcoms
cmc
lods
loop
mov
cmpsl
test
or
and
movsl
xchg
xchg
jno
push
shlb
push
fisubl
adc
push
push
pop
js
gs
lods
mov
cmpsb
dec
ljmp
xor
jo
xor
push
sbb
lds
aad
xchg
jecxz
cs
mov
inc
and
inc
pop
mov
jbe
mov
push
lahf
cmp
test
hlt
lret
and
add
shl
jmp
push
mov
mov
and
mov
xchg
andb
or
movsl
mov
iret
adc
mov
cmp
mov
pop
and
and
push
aas
das
or
lret
stc
xchg
dec
jbe
movsl
std
test
xlat
sub
mov
mov
mov
dec
mov
adc
mov
lods
jo
lods
cmp
shl
in
and
or
out
or
movb
lahf
arpl
inc
orl
arpl
sub
fidivrl
push
repnz
pop
mov
xor
mov
and
jb
sub
fdivrl
aam
or
push
xor
mov
mov
orb
ficompl
push
fnstenv
and
ficomps
or
jno
loop
aas
xchg
mov
cltd
mov
mov
lret
out
dec
aam
pop
les
mov
icebp
ret
fstpt
or
ds
jle
push
inc
movsb
xchg
or
xchg
mov
sub
lock
jg
aam
sahf
xchg
push
mov
stc
cmc
fs
fmuls
jae
insb
rcl
xchg
and
mov
dec
les
sub
push
test
mov
aam
or
sbb
mov
test
fidivrs
cmp
popa
inc
lret
loop
or
je
or
adc
cltd
sbb
or
mov
jp
call
mov
adc
pop
adc
add
xchg
pop
mov
daa
inc
sbb
out
gs
lret
mov
dec
andb
data16
cmp
gs
dec
jne
jne
add
aad
pop
and
loop
ret
lcall
enter
jg
filds
xor
adc
or
dec
cld
and
jl
fldl
pushf
je
mov
mov
clc
les
ret
sbb
mov
loop
mov
sbb
sbb
or
jle
out
inc
xor
call
lock
aas
ja
inc
loopne
push
lcall
cmp
aaa
push
inc
and
jp
jo
adc
inc
js
psubsw
inc
std
loopne
fcompl
or
mov
jb
lock
mov
pop
fidivs
pop
int3
stc
mov
jmp
adc
insb
jbe
pop
hlt
cmp
dec
outsl
je
jns
dec
dec
push
inc
mov
or
push
add
or
sbb
jmp
ljmp
sub
adc
lea
and
pusha
dec
fisubrl
leave
push
test
aas
repnz
mov
stos
pop
cmc
adc
int3
rcrl
pusha
and
addr16
rorb
and
test
aaa
lds
movsb
xor
fildll
sbb
adc
ja
pop
es
sbb
add
push
cmp
pop
xchg
push
sub
xchg
and
sub
push
out
je
fisubrl
fbld
fs
test
imul
jmp
pusha
arpl
les
mov
push
lret
push
adc
popf
cld
ss
movsl
cmp
stos
or
xor
mov
cld
push
cli
test
inc
inc
dec
movsl
adc
clc
push
insb
mov
mov
fsubrs
into
cmpsl
inc
xor
out
fists
ficompl
inc
or
push
sbb
add
sbb
pushf
filds
jmp
repz
call
shll
data16
jb
mov
jmp
out
push
sbb
shl
inc
fsubrp
cmp
pop
cmp
fisubrs
adc
xlat
xchg
insl
cltd
out
lods
xchg
mov
mov
mov
pop
inc
sbbb
mov
inc
push
xorl
sbbl
dec
dec
lds
sarb
fwait
mov
cmp
ljmp
xor
cltd
shrl
gs
clc
inc
aaa
mov
movb
div
rcr
jae
mov
inc
cmp
or
imul
out
cmp
mov
xor
aaa
in
insl
fadds
xchg
mov
or
push
and
and
imul
adc
nop
and
mov
push
jno
cmp
or
mov
test
xor
ljmp
lahf
mov
cmp
mov
cmp
sbb
das
push
pop
enter
or
imul
test
pop
push
add
outsl
mov
js
pop
sub
ds
xlat
cmpsb
mov
fldcw
lds
xchg
pop
test
stc
jns
xchg
repz
and
addr16
sub
pop
mov
jo
jecxz
jl
stc
lods
faddl
and
mov
jmp
sbb
out
or
popa
mov
test
cltd
ds
push
clc
add
jae
fdivrl
ljmp
xor
mov
xor
add
mov
repz
movl
push
mov
dec
push
mov
sub
popf
sbb
cmp
jl
in
xchg
lcall
cmc
xor
pop
jmp
sbb
pop
mov
dec
mov
adc
inc
push
ss
fldcw
or
ljmp
imul
arpl
pop
addb
fcmovnu
mov
fs
jle
lcall
fdivl
inc
add
sbb
andl
fldenv
scas
xor
xchg
popf
mov
dec
pop
inc
mov
sbb
jnp
leave
out
aaa
jne
mov
add
push
insl
pop
nop
xchg
fstpl
and
sbb
out
and
xlat
xor
sub
lret
in
mov
ds
aam
outsb
and
lahf
xchg
adc
ds
gs
popf
out
out
test
fnstcw
xorb
cmpsl
sub
xchg
sub
cwtl
pop
cmp
pusha
mov
push
loope
out
jecxz
mov
in
les
inc
idiv
idivb
pop
shld
arpl
ja
lahf
cltd
cmp
push
leave
rcl
pop
add
mov
lea
xchg
sahf
mov
adc
adc
jbe
repnz
in
inc
aaa
push
jmp
sarb
pop
hlt
aaa
jne
dec
idivb
orl
mov
push
cltd
stos
scas
movsb
aas
mov
push
xchg
mov
ret
fcompl
lock
cmc
xchg
leave
jp
adc
and
pushf
xor
add
xor
push
mov
xor
xor
shrl
or
imul
cmp
lret
adc
je
dec
pop
sbb
mov
xor
push
push
add
mov
sub
pusha
xchg
iret
dec
out
cld
mov
faddl
mov
or
aas
pop
xor
ss
xlat
iret
xor
pop
loope
repz
sbb
pop
inc
cmp
or
dec
push
mov
je
outsl
sbb
test
cmp
call
adc
lds
push
ficompl
push
ja
pop
insl
mov
sbb
lcall
ljmp
les
ljmp
inc
xchg
jno
outsl
mov
sbb
mov
dec
push
frstor
in
shr
ret
mov
gs
adc
into
in
mov
xor
lods
popf
subb
ret
sti
roll
pop
inc
pop
mov
jg
aas
int3
push
jmp
inc
jp
clc
and
mov
mov
mov
in
stc
scas
dec
inc
clc
repz
fadds
jmp
repnz
sahf
dec
fcomi
sub
cwtl
or
rcrl
das
dec
inc
mov
push
leave
jmp
fbstp
dec
push
mov
xlat
out
inc
lock
in
insl
mov
inc
adc
jno
pop
pop
sub
and
movl
test
cmpb
mov
in
roll
ss
enter
mov
jns,pt
pusha
jae
sbb
sti
mov
dec
fisubs
jecxz
dec
sub
xchg
xlat
subl
pushf
sarl
jae
out
out
add
mov
dec
mov
cld
jae
scas
jmp
call
fistpll
andl
mov
test
xchg
fmul
imul
add
cltd
or
mov
mov
add
imul
cmp
push
pop
testl
movsl
mov
outsb
lret
mov
inc
hlt
xchg
arpl
in
jl
sbb
xor
or
cmpsl
mov
ret
mov
sbb
pop
pushf
sbbl
pop
ja
imul
add
mov
mov
ja
mov
mov
and
lcall
mov
xor
cmp
daa
call
or
pop
fisttpll
mov
jp
rorl
mov
rolb
cltd
or
js
sub
push
xchg
sti
cmovo
sub
out
cmp
adc
lretw
cmpsl
rolb
push
iret
or
xchg
jb
imul
inc
push
loope
ret
mov
add
jge
imul
scas
movsb
mov
int3
arpl
mov
adcl
and
xchg
add
jae
xchg
mov
sub
lcall
pop
xchg
popf
divl
int3
cmp
pop
mov
dec
push
push
lods
xchg
adc
leave
lods
ret
jne
xchg
pop
inc
lret
xchg
clc
and
mov
mov
loop
pop
movsl
jo
jmp
int
lahf
inc
cld
jp
not
jp
fstl
xchg
adc
and
push
popf
mov
sub
int3
or
cmp
test
sub
mov
mov
std
and
stc
fcmovnbe
push
jmp
stc
icebp
lret
or
loop
xlat
cld
gs
movsb
xchg
sub
aad
imul
or
push
les
out
cmp
scas
jge
xchg
sbb
call
and
daa
enter
jns
mov
jg
pop
fwait
out
jp
jle
mov
push
fidivrs
dec
or
jb
jne
push
aam
nop
push
insl
or
jp
loop
and
sub
cmp
jae
inc
push
arpl
leave
push
jnp
mov
scas
sbb
mov
repz
popf
cmp
jb
lahf
clc
out
es
pop
dec
xchg
adc
dec
jnp
sub
cmp
push
and
mov
or
in
mov
mov
fdivr
xor
and
cmpsb
adc
cmc
adc
fildll
mov
inc
xchg
add
sahf
cli
ds
inc
sub
jl
xorl
out
xor
xlat
insb
push
jmp
mov
jo
out
xchg
push
dec
jecxz
inc
mov
test
xor
lea
popa
lret
leave
dec
jl
loopne
push
push
pop
jno
loopne
sub
loop
insb
iret
fwait
loope
xchg
mov
sub
sub
test
jg
push
popa
cmp
mov
callw
mov
aaa
dec
loop
sub
rclb
or
mov
frstor
or
push
cmp
mov
mov
sti
cmp
movsl
inc
add
jl
mov
mov
nop
outsb
pop
fsubrl
lea
fisttpl
stos
js
push
shrb
sbb
repz
frstor
in
cmp
cmp
and
mov
xchg
mov
leave
sub
add
insl
mov
arpl
lcall
out
pop
out
add
cmp
add
mull
jg
sbb
dec
stos
ret
es
out
or
pop
pop
pop
pop
shll
out
loop
scas
lcall
xor
fistpl
push
pop
or
xchg
outsl
push
ljmp
in
pop
dec
in
mov
fstpt
mov
lret
out
scas
leave
or
push
adc
std
hlt
xor
sub
push
pop
lcall
fdivp
push
or
fadds
roll
insb
cmp
sub
sub
push
aas
inc
pop
add
in
adc
cmpsb
enter
inc
out
call
jmp
testl
movl
popl
subl
mov
add
sar
jle
xor
xor
rolb
xchg
mov
popf
jne
in
add
jge
in
mov
or
inc
ljmp
pop
sub
cmp
repnz
mov
imul
jnp
sub
cmp
and
sub
sub
scas
jge
jmp
in
mov
insb
mov
xor
lods
sahf
pop
xchg
mov
lcall
ja
test
cmp
addl
cltd
nop
mov
leave
jns
dec
mov
xchg
xchg
fdivs
sub
aam
popf
xor
pop
inc
nop
sub
iret
insb
push
lahf
adc
sbb
cwtl
jne
mov
les
mov
inc
mov
dec
xor
cmpsl
movsb
test
xchg
aad
push
xor
jg
pop
js
push
jnp
sub
pop
mov
ror
push
out
pop
test
aas
push
out
into
test
cmp
cs
xchg
pop
fldenv
pop
in
pop
jo
nop
shlb
sbb
cmp
push
inc
mov
cmpsb
dec
mov
negb
mov
mov
fiadds
mov
outsl
pop
pusha
xor
into
jno
xchg
xchg
add
xchg
out
and
movsl
fdivrl
aam
es
mov
imulb
dec
jno
ja
fucomp
sub
mov
mov
jne
xchg
shll
jns
or
jge
jne
mov
jmp
ds
in
sbb
push
add
movsb
dec
rcrb
or
ja
mov
xlat
inc
popl
pop
xchg
pop
xchg
int
push
fdiv
test
test
mov
or
repnz
and
jno
cmp
sub
mov
daa
jl
testb
fisubrl
mov
push
adc
fstps
and
out
dec
mov
loopne
xchg
dec
jae
dec
and
ret
cmpsb
adc
ret
ja
nop
jnp
jecxz
sahf
hlt
and
pop
pop
rcrl
sub
fstpl
aam
scas
push
jnp
cmpsb
xlat
fucomi
jmp
into
sahf
pop
push
loop
inc
scas
iret
lods
mov
pop
sbb
cmc
dec
cmpsb
sbb
jb
jae
adc
jp
push
sub
in
mov
jle
xor
pop
out
xchg
ret
out
clc
push
sbb
fmuls
jns
outsb
jno
mov
out
dec
push
dec
mov
lea
adc
in
pop
inc
sub
jnp
lret
xchg
or
ror
add
mov
xor
stos
dec
daa
test
sbb
loopne
insl
imul
and
jl
into
jge
xor
fisttpll
pushf
jnp
xchg
pop
cmp
and
adc
adc
mov
andl
lret
stc
sbb
je
jge
xchg
mov
test
push
fnstcw
jbe
xor
andl
cmp
or
pop
add
and
mov
jnp
ljmp
dec
xor
fwait
sahf
mov
lahf
test
mov
xlat
and
add
dec
push
fmul
cmp
jno
xchg
and
mov
xchg
inc
xchg
ja
xchg
outsb
xchg
or
xchg
push
call
xchg
cs
ret
push
rcr
imul
cmp
int3
sub
adc
enter
jb
xor
mov
ja
jecxz
les
or
mov
addl
in
arpl
dec
aad
mov
scas
and
aas
loop
roll
nop
fists
std
ja
fisubrs
jge
xor
sub
aam
stos
sub
inc
out
enter
xchg
and
mov
inc
pop
fnstcw
mov
mov
cwtl
sbb
popf
mov
mov
imul
or
sub
or
fstps
mov
xchg
imul
aaa
insl
lods
iret
pop
push
jl
leave
int3
jns
mov
cli
or
mov
and
ja
ds
aam
out
inc
dec
jne
in
aas
test
pop
loop
mov
add
in
aas
mov
stc
or
sbb
mov
loope
xchg
pusha
jl
stc
fstl
popa
icebp
or
dec
out
adc
sub
mov
aas
push
and
lods
fs
in
adc
pop
mov
gs
jecxz
loop
push
jge
stc
push
pop
jns
movsb
dec
nop
clc
cmp
xor
std
sti
pop
push
xchg
mov
stos
aad
inc
xchg
mov
aad
cmp
stc
nop
mov
jae
iret
cmp
loopne
ss
sbb
rorl
mov
adc
int
pop
sbb
xor
pop
int
shl
int3
aam
out
lcall
scas
dec
mov
push
mov
out
dec
popl
pop
mov
ja
ds
mov
and
mov
ficompl
imull
cli
cmpsl
or
xchg
out
lret
push
rcr
xchg
mov
aam
pop
push
pop
push
xchg
push
lds
pop
lret
jnp
stos
cmp
nop
add
ret
push
xor
pop
popa
imul
mov
hlt
jb
cmp
adc
xor
jnp
leave
out
mov
cmp
pop
testb
adc
ficompl
mov
mov
iret
mov
shrb
adc
std
sub
stc
jl
mov
xor
lcall
mov
push
xlat
aam
jecxz
or
xchg
pop
or
cld
cmc
xor
mov
outsl
or
ss
movsb
dec
or
arpl
fbld
dec
outsb
or
cs
push
xchg
notb
push
and
enter
and
dec
push
rorb
fldl
fs
and
fdivr
icebp
aaa
clc
inc
jge
inc
mov
cli
dec
jmp
inc
xchg
mov
rorb
into
insb
out
in
ja
bsr
loop
cld
data16
ret
ss
loop
cmp
ja
out
imul
nop
xor
dec
push
push
jg,pn
int3
rolb
mov
in
mov
insl
xor
cwtd
mov
popf
fldl
fs
std
xor
or
sub
dec
mov
loop
sbb
add
fs
cmp
adc
fs
pusha
ds
jo
pop
jp
and
sahf
rcrb
out
test
cwtl
pop
mov
cvtps2pi
jnp
lods
mov
cmpsb
into
mov
fcompl
add
xchg
popf
inc
rolb
cmp
rcrl
pusha
xor
test
ret
or
nop
jne
xchg
jg
sub
mov
sbb
iret
sbb
je
out
push
aaa
mov
repnz
mov
cmpsb
lcall
adc
mov
sub
and
xchg
leave
pop
sub
icebp
ljmp
bound
enter
int3
in
push
aas
bound
xchg
sti
lahf
cmpsl
and
popa
int3
sub
sbbl
int3
js
imul
rorl
shll
cmp
int3
and
add
push
jmp
mov
mov
xor
lods
inc
out
js
out
jl
push
mov
xchg
rolb
stos
adcl
pop
in
xor
dec
out
xchg
outsl
mov
jmp
mov
xlat
ss
enter
push
je
dec
test
mov
sbb
mov
aam
pop
jno
sub
sahf
jb
push
xchg
and
and
adc
ss
nop
mov
out
aam
mov
xchg
loopne
addr16
das
xchg
and
lcall
pop
sbb
out
leave
and
mov
add
jne
add
push
and
cltd
cmc
inc
movsb
inc
fsts
imul
scas
mov
into
daa
pushf
sbb
call
rclb
test
inc
push
lret
mov
aad
jle
or
mov
and
sub
cmpsb
cli
jge
outsb
adc
or
push
sbb
mov
jb
movsl
scas
inc
cltd
or
push
test
ficomps
aaa
aaa
mov
sti
adc
add
or
sub
lods
in
rcrl
aas
idiv
lahf
xchg
test
scas
jne
fstpl
mov
jle
and
inc
xlat
les
xor
xor
test
int
lret
test
daa
cmp
std
jge
mov
push
inc
into
into
bsr
jae
mov
adc
bound
mov
popa
in
push
in
sbb
jl
jo
jmp
pop
or
adc
lods
jnp
push
nop
cmpsb
addr16
jbe
mov
xlat
movsb
inc
decl
das
mov
jns
dec
push
iret
loop
xor
cmp
push
jne
shlb
mov
movsb
sbb
fdivr
rcrb
xchg
je
push
jl
mov
mov
rcll
adc
xchg
or
mov
cmp
sbb
mov
mov
mov
mov
pop
lcall
clc
icebp
and
shrl
mov
sbb
add
xor
cmp
add
pop
push
xor
mov
pusha
imul
or
inc
cmp
jb
inc
mov
ss
les
lahf
cmc
or
clc
jg
adc
lea
jp
mov
mov
jge
sti
lds
aaa
mov
sbb
sub
sub
dec
outsl
cld
rcll
stos
add
sbb
rep
lret
and
xlat
je
xorl
cmp
test
fcomps
inc
or
jge
cmp
add
lahf
enter
inc
sbb
xor
inc
mov
scas
xor
or
lcall
gs
dec
insb
arpl
in
comiss
fisubl
jl
jmp
dec
sbb
xor
orl
jmp
push
rclb
sbb
xchg
sub
jne
aam
adc
aam
adc
xchg
outsl
insl
in
mov
fstl
mov
gs
arpl
repz
adcb
jmp
pop
movsb
decb
mov
push
mov
aas
mov
jns
pop
push
les
dec
add
pusha
std
pop
jae
les
pusha
pop
mov
dec
sbb
scas
pop
push
and
adc
xor
mov
aam
jp
inc
xchg
and
repnz
nop
xchg
out
das
daa
ror
imul
and
scas
dec
scas
sbb
adc
icebp
call
lret
enter
add
mov
or
dec
test
std
push
sbb
dec
je
cmp
pop
and
adc
cmp
xorb
fbld
push
sarb
ljmp
inc
popf
cli
es
ds
mov
fcomps
hlt
xor
cmpsl
aam
inc
shrb
js
cmp
mov
jne
pushf
xor
dec
or
inc
nopl
jno
aas
xor
and
sbb
inc
add
xchg
out
push
sbb
out
sahf
fistpll
dec
sbb
movl
hlt
jge
dec
jnp
push
loope
cmpsl
nop
jne
adc
cmp
or
cmp
pop
add
sbb
mov
inc
mov
stos
lcall
mov
jl
jae
or
sti
sbb
popf
cmc
add
inc
mov
data16
sub
jo
xchg
adc
jl
lea
push
or
cmpb
inc
push
cmc
mov
xchg
pop
lret
adc
bnd
in
sarl
cmp
sub
inc
xchg
ret
jae
xlat
fadd
enter
lcall
int
mov
rolb
cwtl
xor
enter
jns
adc
popa
mov
jmp
lcall
aam
xor
push
leave
in
sub
mov
lahf
movsl
test
mov
rcll
imul
flds
push
add
in
aad
xor
imul
lock
cmp
cltd
mov
std
mov
mov
lock
test
sub
add
fstl
lret
sbb
and
sub
xchg
cli
mov
push
jno
stc
jns
sub
invd
inc
and
mov
mov
and
pop
ss
into
popa
fsubr
idivl
inc
lcall
in
adc
bound
mov
js
inc
mov
xchg
dec
push
inc
adc
jns
or
rorb
dec
dec
or
xchg
lock
daa
jmp
popa
cmpsl
cltd
daa
cmp
fsubrl
xor
inc
push
add
mov
dec
icebp
lds
add
or
mov
fisubs
pop
mov
sub
lods
mov
mov
cmp
popl
ret
and
dec
mov
dec
pop
jecxz
push
fldl
mov
call
fdiv
jecxz
pop
cld
cmp
inc
and
xor
sbb
cmp
add
jge
add
bound
lahf
stc
xor
mov
mov
ficoms
push
jge
lock
aaa
pop
out
xor
xor
out
cmpsb
cmp
hlt
or
shll
xor
out
ret
mov
push
loop
sub
pop
popa
adc
push
inc
cmp
rcr
bound
fcmove
out
decb
pop
adcb
mov
jne
add
cmc
jg
mov
adcl
mov
jl
mov
dec
test
pop
lahf
cs
add
jl
jp
bound
shll
mov
frstor
daa
xor
dec
push
pop
add
inc
lcall
movsb
dec
dec
jne
dec
popa
mov
rcrb
jmp
add
mov
sub
xchg
sbb
test
xchg
xchg
mov
scas
xchg
push
pop
test
xor
subb
nop
rol
cmp
adc
add
mov
jp
outsl
cmp
cwtl
pop
xor
loop
mov
stos
inc
jecxz
push
leave
and
jge
push
xor
adc
xor
jp
daa
mov
xchg
data16
les
mov
outsb
ret
dec
lret
dec
or
cmc
iret
sub
call
popf
mov
jo
ret
pop
jmp
jl
mov
mov
xor
and
xchg
xor
or
mov
and
cmp
add
or
mov
or
js
in
pop
mov
pop
in
and
imul
icebp
dec
subb
xorb
mov
push
inc
add
cmpsl
add
mov
std
int3
inc
jmp
and
enter
push
aam
jnp
outsl
mov
popf
or
rcl
lcall
sbb
repz
mov
xchg
cmp
add
cmp
imul
fists
out
jge
push
subb
and
lahf
push
test
mov
test
sahf
fdivrs
inc
push
adc
mov
add
cmpl
jmp
xchg
jbe
aam
pop
data16
out
lea
cmp
into
push
mov
or
imul
pcmpeqd
out
movsb
rorb
shrb
fwait
push
sbb
nop
cmp
into
repnz
sbbl
or
lods
pop
mov
cmp
mov
pop
in
and
xlat
or
jnp
hlt
filds
inc
xor
arpl
mov
jl
fwait
mov
and
dec
fdivr
mov
push
call
lcall
daa
pop
jl
push
lock
pop
pushf
dec
mov
rorl
pop
add
adc
bound
jae,pt
dec
mov
cmp
repnz
lock
int3
fwait
and
adc
movsl
jno
mull
mov
sahf
xor
sub
pop
hlt
test
mov
pop
mov
cmpl
outsl
rep
jl
sbb
adc
in
mov
sub
fidivrs
xor
xlat
pop
fsubrp
adc
xchg
jg
popf
std
or
xor
nop
pop
cmp
aam
cmp
cwtl
cmp
in
cmp
xchg
popa
inc
rcll
jmp
add
inc
jmp
mull
call
adc
cmp
adc
fwait
shlb
mov
xor
jno
movsl
pop
arpl
ret
add
lea
filds
repnz
xor
pop
jge
or
mov
mov
sub
test
jg
xchg
push
test
lds
fldl
dec
or
dec
mov
add
sti
lcall
dec
add
sbb
fwait
idiv
repz
pop
lret
xchg
add
negb
add
shrl
fimuls
lret
mov
jl
insl
nop
movsb
test
and
loopne
test
rcll
sbb
pop
ret
cmp
aaa
pop
sub
ficomps
popf
out
outsl
shlb
xchg
mov
dec
sub
movsl
js
in
xchg
adc
jle
and
push
outsb
mov
imul
cmp
inc
popf
cmp
pusha
std
dec
sub
xchg
rol
mov
xor
pop
repnz
and
adc
inc
pushf
xchg
in
jp
adc
out
mov
stos
pop
xor
clc
pop
add
imul
push
dec
inc
les
loope
das
jno
dec
mov
push
lds
ljmp
jbe
call
pop
inc
and
in
push
push
add
fldl
loop
fcoms
sbb
push
dec
inc
push
push
pop
xlat
ja
pop
push
jae
sub
in
adc
mov
sub
inc
xor
neg
xor
push
repnz
adc
leave
ss
push
faddl
dec
xchg
aam
lods
repnz
daa
adc
daa
gs
ds
fucom
js
iret
sub
cmp
int3
in
pusha
inc
xchg
xlat
jae
test
mov
jne
and
or
ss
add
aam
dec
rclb
ds
jno
mov
movsb
loopne
sub
sbb
aaa
fs
adcl
dec
flds
and
pop
pop
gs
and
sbb
daa
cmp
dec
aaa
dec
in
and
adc
je
aas
add
xor
ss
cli
aam
or
jmp
push
das
lahf
cld
pop
inc
sub
cmp
mov
or
mov
jnp
add
das
movb
out
add
out
push
adc
shrl
adc
add
xchg
imul
fucomip
mov
push
subb
jo
jle
mov
add
mov
sbb
shll
sbb
dec
vhaddps
popa
cmp
push
aad
push
cld
dec
outsb
cld
sbb
loope
pop
cmc
clc
outsb
add
jno
shll
xor
test
pop
loop
aas
push
call
das
dec
sti
aaa
sub
out
dec
test
dec
test
nop
add
aam
and
cs
add
mov
popa
ja
icebp
mov
adc
cmp
addr16
jns
sbb
rorb
adc
inc
fadd
outsl
int
dec
or
aad
rclb
jl
lds
push
jo
orb
test
cmp
test
adc
in
push
sbb
cmpsl
xchg
in
and
cmpsl
jp
add
rcr
xchg
rcrl
lods
aas
cmpsl
loope
and
ja
xchg
push
mov
test
icebp
push
xchg
jbe
mov
cmp
jmp
iret
popa
jbe
adc
adc
adc
adc
jg
jb
pop
sbb
sbb
sub
sbb
ss
cmp
inc
dec
mov
pand
mov
les
sbb
out
lock
adcl
push
fimull
pop
daa
inc
inc
sub
ret
pushf
push
aad
repnz
test
adc
mov
lods
cld
or
mov
shrb
jg
xor
xor
loopne
aaa
ljmp
xor
inc
in
das
lods
testl
xchg
mov
sub
pop
mov
cmp
adc
fsubl
popf
jecxz
pop
cmp
add
add
fstpt
mov
mov
jo
inc
in
aad
fidivs
dec
test
mov
cmp
test
mov
push
pop
repnz
ss
scas
scas
dec
push
pop
lods
imul
insl
xchg
mov
pop
xor
inc
jp
pop
ja
sbb
pop
and
shll
push
pusha
add
jbe
icebp
dec
xchg
mov
sbb
adc
sub
popa
cmp
in
cmpsb
xchg
push
sahf
pop
jb
fsubs
aas
insb
push
enter
aas
push
mov
adcl
js
jle
mov
rorl
in
out
push
mov
xlat
mov
pop
cltd
aas
test
in
outsb
xor
sub
mov
push
or
mov
pmuludq
mov
mov
jl
test
xorb
decb
adc
imul
sbb
jle
push
add
push
fidivrs
dec
xchg
cmpsb
mov
mov
and
scas
stos
mov
jmp
out
sahf
imul
adc
sbb
adc
adc
adc
sar
pop
test
movsb
clc
jo
aam
push
int3
xchg
out
movsl
orb
loopne
mov
fildl
dec
mov
adc
or
add
ds
dec
cs
jg
fbstp
pop
lahf
ljmp
add
ret
mov
adc
mov
cmp
iret
push
enter
inc
sarl
loop
cmp
jl
stc
xor
add
sbb
mov
pop
int3
sbb
mov
xchg
jno
pop
dec
sbb
dec
sub
xor
push
inc
adc
mov
push
inc
enter
stos
xor
pushf
cmp
mov
inc
fisttpll
push
inc
xchg
sbb
ret
loope
addr16
shl
add
rcrl
repz
ret
int3
jnp
je
repz
dec
xor
xor
rclb
inc
adc
xchg
mov
mov
pop
lret
repz
push
inc
not
jns
dec
add
inc
sub
popf
sbb
inc
movsl
shll
stc
inc
popa
mov
push
negl
movsl
push
mov
gs
fildl
aam
loope
add
les
cmp
rcrb
icebp
pushf
push
icebp
mov
or
and
push
jne
movsb
out
out
out
aam
adc
cmc
jns
in
xor
mov
lds
outsb
subb
lcall
cwtl
pop
cmp
xchg
dec
xchg
push
mov
fs
xchg
std
cs
pop
scas
and
pop
jns
pop
mov
xor
lods
je
dec
js
popa
mulb
mov
cmp
jnp
das
ret
cwtl
sbb
push
addl
repnz
pop
sub
test
adc
addr16
fisubs
std
lea
notb
sub
in
dec
shll
lahf
gs
pop
xor
imul
iret
sbbl
inc
xchg
lods
stos
in
cmp
and
mov
cmp
ficomps
out
lret
or
mov
mov
js
pop
std
out
xor
andb
or
push
jg
lock
out
push
jmp
and
xor
add
loopne
test
aad
mov
vhsubps
jae
lock
mov
faddl
mov
lds
sti
fmul
cmc
cld
jbe
shrb
cmp
mov
xchg
dec
nop
mov
movsl
stos
rol
xchg
stos
mov
fsubl
adc
test
sub
aaa
and
adc
jnp
dec
lret
cmpsl
leave
aam
pop
fs
inc
or
andb
shl
pop
daa
cs
testl
mov
cwtl
fisttps
mov
adc
mov
leave
or
xor
mov
ficomps
adc
push
imul
add
dec
insb
andb
movsl
sub
cmp
dec
mov
shl
movsw
out
cmc
test
lock
negl
ret
pushf
jne
out
jg
clc
cmp
mov
or
mov
pop
mov
push
in
leave
fwait
xor
lret
cs
rolb
jns
xor
scas
pop
testl
pop
fdivr
add
cmp
dec
insb
cmp
xchg
sahf
std
negb
arpl
push
adc
cmpsl
mov
or
jnp
mov
shl
rcrl
push
rcll
cmp
ucomiss
imul
fisubrs
int
sbb
mov
out
dec
mov
jg
sbbl
test
and
js
mov
and
outsl
daa
xacquire
jle
test
pop
xor
lock
into
push
aad
aaa
mov
neg
fisttps
jbe
dec
jnp
push
into
aad
movsl
add
fcmovb
int3
xchg
rorl
or
jl
push
jb
jp
push
inc
inc
or
std
cli
ret
mov
mov
test
jmp
fstl
sub
xchg
mov
adc
push
mov
cs
mov
push
aaa
test
loope
out
icebp
jl
dec
lock
mov
or
sub
jle
push
push
pop
sbb
and
mov
sbb
pop
or
lea
mov
xlat
sbb
das
pop
dec
mov
inc
pop
mov
lret
or
push
adc
sarl
enter
add
xor
dec
inc
mov
and
dec
xchg
pop
mov
xor
repz
mov
scas
arpl
and
jl
out
fcomps
cmp
ja
imul
add
push
xchg
inc
cmp
dec
mov
sbb
mov
mov
xchg
sub
xor
pushf
mov
ss
int
imul
mov
pop
mov
inc
je
mov
int3
sti
sbb
add
incl
inc
adc
dec
in
pop
jne
inc
insb
es
and
outsl
fidivrl
lret
cwtl
insb
xchg
inc
and
aam
and
loope
jmp
jg
jb
pop
outsl
push
pop
push
mov
sbbb
dec
cmp
cmp
jb
stos
scas
sub
mov
pop
xchg
pop
cmp
pop
mov
daa
mov
or
cmpsb
inc
sbb
fbld
inc
cmp
rcll
aas
xlat
mov
negb
test
sub
cltd
push
xor
in
mov
mov
and
stos
jle
rcrb
inc
and
icebp
lret
jle
push
jge
xlat
mov
stos
ds
and
nop
out
data16
negb
sbb
mov
inc
mov
or
and
xchg
cmp
cmp
shlb
or
je
cmpsb
pushf
subb
mov
cltd
sub
data16
inc
push
add
jae
dec
fwait
jo
jns
pop
addr16
jae
ficompl
inc
lret
add
aam
and
dec
rclb
add
sbb
cli
leave
jmp
mov
jbe
xchg
mov
cld
jno
movsb
or
jae
mov
daa
mov
fldt
sub
stos
sub
mov
or
daa
push
or
rolb
popa
fisubrs
inc
mov
xlat
jae
dec
sbb
loop
lds
jbe
jp
or
mov
jl
inc
xchg
xor
push
faddl
adc
dec
loopne
inc
inc
jmp
scas
sub
ret
lods
inc
pop
xchg
cmpsl
leave
imul
shrl
cmpsl
push
dec
or
iret
lcall
rol
pop
lret
rsqrtps
or
addr16
xor
sub
mov
jae
fistpl
dec
inc
das
mov
mov
adc
mov
mov
xchg
pop
leave
add
rcrl
enter
dec
mov
mov
cmc
and
inc
js
test
sub
mov
inc
addb
mov
imul
in
outsl
testb
movb
mov
mov
xor
imul
xchg
shll
add
outsl
loope
inc
into
xchg
movsl
je
jl
dec
nop
adc
xor
inc
xchg
ja
cmp
fdivs
or
mov
xlat
xchg
adc
int
icebp
pop
inc
jl
fcompl
stc
push
add
push
cltd
aam
and
inc
and
fidivs
int
dec
movb
xchg
pop
cmp
jns
cmp
cli
dec
popf
sub
fwait
or
push
mov
outsb
rolb
cmc
dec
aaa
mov
pop
outsl
sbb
pop
clc
lods
jns
js
scas
jl
lret
lea
push
scas
cmp
mov
iret
xlat
cltd
push
inc
and
lahf
in
pop
push
int
cmp
push
in
and
mov
fldenv
fistpl
push
stos
sub
pop
mov
ds
xchg
mov
push
inc
aas
dec
jecxz
nop
mov
lea
outsb
mov
xchg
sbb
jl
js
pop
push
fcoms
push
adc
out
jl
xchg
mov
push
icebp
inc
add
sub
icebp
push
clc
push
in
xlat
adc
pop
jg
sbb
push
mov
xchg
pop
hlt
fwait
push
test
add
mov
jno
mov
loopne
outsl
or
pop
popa
add
popf
pop
pop
test
mov
mov
rorl
mov
or
test
mov
add
cltd
inc
enter
jae
scas
pop
sbb
decb
cmp
pushf
cmc
std
mov
call
out
mov
into
scas
repnz
iret
icebp
xchg
and
push
jo
mov
pop
cmpb
pop
sub
xor
out
push
leave
inc
xor
lods
les
lret
fdiv
push
out
push
test
push
enter
repz
ret
test
sti
pop
shll
lea
sbb
mov
lret
pop
pop
jg
mov
push
lock
test
or
movd
imull
ret
lods
outsl
outsb
jle
add
popf
cli
or
aad
test
arpl
repz
pop
xchg
icebp
jg
into
int3
mov
cmpsb
mov
sarb
repz
movsl
adc
dec
add
cli
in
jb
loope
inc
xor
xchg
pop
out
mov
jb
cmp
in
push
jae
fcomps
dec
ss
dec
in
fsubr
std
in
inc
cmp
mov
pushw
divb
inc
pop
sbb
xor
int3
les
test
roll
leave
jo
add
in
dec
dec
cli
sbb
cs
sub
insb
add
push
cmp
hlt
aad
push
mov
addr16
ret
imul
xor
movsb
cmc
xchg
xor
push
cvtps2pd
stos
push
jbe
lea
cs
xchg
xchg
bnd
into
pop
aas
or
xor
outsl
ljmp
test
lret
fmuls
xchg
mov
jle
mov
insb
sbb
mov
mov
jge
addl
bound
cmp
lret
dec
and
mov
and
es
jne
mov
dec
sbb
xchg
add
int
cmp
mov
mov
test
xchg
cmp
mov
mov
loop
and
cmpsl
cmp
xor
filds
xlat
jno
fisttps
sbb
jp
sub
jge
sub
mov
adc
adc
push
jg
push
andb
xor
scas
xchg
rcl
jmp
ljmp
clc
xchg
adc
jb
mov
cld
xor
lret
adc
ffreep
out
insl
adc
jp
dec
mov
pop
fs
cltd
cmp
in
arpl
and
addr16
sub
int3
xchg
cmp
mov
mov
shrl
cwtl
aaa
mov
or
mov
movsb
mov
inc
mov
sub
jp
mov
vandnpd
and
jle
xor
addr16
cmp
aaa
mov
xor
push
loope
xor
xchg
xchg
test
sub
cld
xchg
xor
xor
sub
or
xchg
leave
mov
jmp
in
mov
jbe
pop
dec
pop
xchg
rcll
xor
mov
push
mov
xchg
and
repnz
adc
mov
and
jo
mov
test
cli
sbb
cmp
xchg
lahf
cmp
fnsave
adc
or
mov
cmp
sbb
punpcklbw
pop
hlt
xchg
scas
jp
xor
sbb
enter
popf
mov
and
jbe
xchg
mov
repz
scas
lret
jbe
jecxz
in
imul
xor
ret
cmpsb
ja
dec
sti
fs
dec
push
jl
xchg
iret
xchg
mov
mov
sti
sbb
cmp
sbb
sbb
or
cmpsl
outsl
mov
and
nop
stos
dec
hlt
test
and
into
in
mov
das
push
pop
loopne
mov
mov
xchg
imulb
sub
das
jnp
sbb
stc
loop
mov
mov
repnz
adc
loop
fnstsw
push
mov
into
add
sub
ljmp
and
fistpl
bound
push
rcrb
unpcklps
mov
scas
iret
lcall
mov
fadds
das
outsl
jbe
push
retw
fnstcw
mov
test
hlt
jmp
sub
dec
out
mov
insl
cld
push
xor
sub
xor
jns
mov
cmovo
mov
cmp
cmp
js
test
push
popf
movsb
lea
enter
mov
mov
mov
and
adc
mov
insb
fcoml
int
sub
jp,pn
movsl
iret
jne
adc
fidivs
icebp
das
push
cld
hlt
ret
loop
cltd
and
sbb
lret
lret
in
out
push
mov
inc
sub
jno
bound
xchg
jne
sbb
out
loope,pn
and
int3
jnp
test
adc
inc
fdivs
push
mov
inc
cltd
aad
nop
lcall
outsb
sub
icebp
or
adc
fdivs
loop
mov
fsubrl
insl
sarb
cli
inc
sahf
mov
dec
xor
xor
lret
out
sub
add
sub
adc
mov
push
pop
mul
push
push
sub
and
jmp
inc
adc
or
push
or
addr16
ja
in
cmp
cmp
outsb
pop
add
mov
scas
lret
add
enter
push
adc
dec
or
fstp
hlt
cmpb
sub
or
in
loope
xchg
and
clc
jecxz
mov
jnp
pop
loopne
mov
or
repz
fmulp
lods
push
in
rcrl
inc
in
push
leave
inc
add
or
jbe
mov
lock
jne
adc
add
cmpl
cld
mov
sahf
ljmp
jns
in
cs
sbb
mov
cmp
jg
fsubrl
test
inc
aam
jl
adc
lahf
ja
and
lea
pop
fcmovb
dec
adc
mov
jg
movsl
in
lahf
jge
cmc
sub
mov
or
scas
pop
loopne
cmp
ficomps
ficoml
push
mov
fildl
adc
pop
xlat
lret
xor
jbe
push
mov
lock
push
lret
sbb
leave
inc
outsl
push
cmp
arpl
push
int
cmpsb
scas
jnp
push
int3
sbb
add
jns
movlhps
sub
jbe
dec
popa
arpl
jbe
clc
in
lcall
iret
lret
mov
iret
sbb
mov
pop
jl
inc
mov
lds
test
xor
pop
mov
push
dec
sub
clc
xor
idivb
mov
xor
les
lock
sbb
scas
dec
inc
xchg
push
repnz
cmp
or
lods
inc
leave
xor
hlt
adc
mov
push
mov
jl
xchg
xor
movsb
mov
mov
xchg
mov
jp
xlat
mov
adc
jp
add
push
in
push
jg
push
addr16
js
testl
idivl
dec
and
xor
jmp
popf
sti
stc
push
stos
ret
mov
fiaddl
adcl
lock
jb
push
jl
dec
les
mov
jmp
scas
jecxz
cmp
adc
push
in
mov
mov
dec
jno
adc
mov
jbe
negb
sar
or
dec
enterw
xchg
adc
xor
cwtl
ret
and
test
loop
rcrl
and
inc
inc
stos
pop
cs
shrb
fldl
in
push
rcl
mov
test
scas
xchg
mov
aaa
sbb
roll
jno
cpuid
movsl
es
inc
sub
jp
inc
inc
cmpsl
in
cmc
xchg
xchg
mov
shlb
add
insl
xor
fiaddl
cmp
daa
pop
adc
cmp
fnsave
push
dec
lahf
and
add
push
or
outsl
jnp
in
cmp
mov
pushf
or
xor
insb
sub
shll
adc
jne
push
popf
cwtl
mov
stos
add
jbe
xor
es
pop
mov
mov
mov
addr16
fwait
push
mov
or
in
adc
mov
cmp
movsl
out
aad
mov
outsl
jae
ss
aam
aad
and
inc
cmpsb
aaa
pop
xlat
pop
sbb
cwtl
and
mov
jp
xor
divb
and
fwait
ja
mov
jne
push
pop
negl
or
cmp
outsl
outsl
sar
mov
mov
inc
sub
pusha
sbb
push
imulb
gs
inc
xchg
and
sbb
cli
fcomip
insl
mov
lret
xchg
cs
fdivl
inc
nop
dec
ja
cmp
sub
js
fidivl
shl
arpl
push
iret
mov
pop
sbb
dec
or
jns
adc
mov
rcrl
rol
inc
sbb
push
jns
orl
xlat
lods
aas
xchg
push
cld
pop
jmp
mov
arpl
xor
rcl
xchg
xchg
push
shrb
ret
mov
fcompl
cld
add
cmp
movsb
fsubl
jne
fadds
xor
cmp
fimull
jae
repz
xchg
mov
dec
sti
pop
add
xorb
out
push
inc
sbb
mov
in
outsb
push
roll
aam
pusha
xor
lods
sahf
inc
pop
jb
inc
xchg
inc
cmpb
fadd
ret
pop
push
jae
loop
aaa
gs
popa
cs
mov
pop
mov
inc
push
scas
mov
add
ret
test
inc
jne
push
arpl
mov
push
lods
adc
mov
mov
pusha
incl
mov
sbb
dec
push
aaa
sub
aas
popa
js
sub
scas
mov
jl
movsl
test
fsubrs
push
add
fisttps
je
pop
out
stos
out
and
sub
imul
cwtl
adc
imul
jmp
sbb
jnp
test
popf
pop
push
scas
sarb
sbb
loopne
mov
pop
xchg
ret
mov
pop
rcrb
dec
mov
fiaddl
arpl
cmp
sbb
aad
mov
adcb
pop
add
test
inc
hlt
xor
cmp
mov
fucompp
inc
ss
dec
sub
aam
xchg
daa
sbb
out
popa
jns
push
adc
dec
jb
push
or
push
push
cmp
repz
jge
js
sub
and
cmpsl
pop
les
shrb
mov
repz
pusha
cmp
loope
cwtl
dec
xor
sub
push
xor
lret
push
mov
jb
adc
jae
add
pusha
add
mov
or
int
pusha
mov
leave
pusha
imul
ret
es
test
sub
popa
fisubrl
rcl
xchg
out
or
notl
mov
lea
or
pop
jp
test
insl
mov
rorl
jp
sti
jo
and
stos
add
pop
hlt
ja
mov
inc
adc
inc
hlt
xchg
adc
pop
jp
hlt
add
repnz
rcrl
mov
data16
mov
loopne
jno
add
bswap
int3
imul
push
dec
jns
out
push
mov
pop
sbb
xor
inc
jae
jae
lret
popa
imul
into
scas
xor
jns
popf
je
dec
movsb
pop
xchg
cmc
daa
pop
repnz
pop
or
xlat
stos
mov
inc
cmp
test
xor
pop
sti
add
fs
adc
adc
dec
adc
add
js
ljmp
les
out
jbe
sbb
dec
or
jne
or
jp
push
sbb
scas
pop
subl
xchg
cmc
scas
popa
lahf
xchg
lcall
and
jno
sbb
popf
ret
inc
and
inc
mov
inc
cmp
fistpl
or
hlt
hlt
int3
fs
and
aad
add
push
push
fsubl
sbb
scas
push
pop
sbb
fisubrl
out
std
ja
fnstenv
ja
mov
push
jnp
aas
scas
pop
lret
jmp
mov
icebp
and
cmpsb
push
dec
insl
sarb
mov
icebp
mov
pop
xor
gs
xor
xchg
aaa
nop
sub
call
push
inc
lock
xor
or
stc
or
mov
sahf
daa
cli
int3
hlt
jae
dec
sbb
or
insb
dec
inc
test
notb
dec
xchg
mov
hlt
and
stos
mov
push
loope
inc
mov
mov
mov
mov
out
and
push
jl
je
dec
mov
aas
mov
cmp
push
xchg
test
jo
cld
jle
sbb
lcall
ja
inc
aaa
jle
aas
jp
shlb
std
xorl
and
inc
sub
test
pop
mov
xchg
mov
lret
mov
cmp
stos
popf
pop
sub
sarb
jl
xor
bound
ljmp
call
mov
lds
popa
xchg
imulb
movntq
pop
xchg
sbb
mov
add
mov
adc
clc
fsubrs
loope
push
movsb
lcall
out
jb
xlat
int3
mov
fsub
iret
dec
insb
jnp
test
mov
sahf
cmp
sbb
daa
mov
dec
enter
lret
psubd
mov
and
ja
jmp
cs
push
push
pop
mov
sbb
enter
int
mov
sbb
mov
and
xor
jnp
cltd
popf
bound
mov
clc
sub
outsb
data16
imul
repz
inc
sub
jbe
mov
mov
shlb
aad
leave
sub
out
sti
std
mov
dec
popa
mov
aam
adc
out
fcomps
cltd
outsl
cmp
push
xchg
jge
push
xlat
xchg
jmp
loop
jae
sbb
fadds
cmpsb
shrl
fstpl
aas
add
adc
pop
les
es
mov
cld
mov
cmpsl
lret
jg
jl
lock
repz
push
in
test
aaa
rclb
jae
inc
gs
out
pop
mov
pop
inc
adc
daa
or
pop
insl
mov
dec
xor
mov
jo
pop
shl
ror
dec
stc
aaa
and
push
sbb
mov
or
roll
daa
repz
test
jne
inc
cmp
add
xor
inc
jg
mov
dec
sub
mov
gs
les
loopne
mov
mov
push
rcrl
xchg
dec
xlat
out
add
sbb
cmp
sub
insl
inc
pop
or
or
pop
inc
and
pop
sbb
dec
fisubrs
dec
mov
cmp
idiv
jne
sub
or
add
pop
sub
jno
popf
divl
and
lods
dec
pop
cwtl
or
dec
mov
sbb
in
punpckldq
pop
xchg
sbb
outsl
sub
jae
and
mov
into
sbb
jmp
ficomps
mov
nop
push
divl
xor
xchg
jle
push
adc
loop
fdivrs
sbb
movsb
mov
mov
pop
xchg
jmp
xlat
mov
je
fwait
arpl
jno
lods
leave
cmp
arpl
dec
push
test
jle
adc
aas
ret
dec
inc
cwtl
push
loope
xchg
xchg
icebp
test
out
pop
nop
sub
insb
fwait
mov
fdivrs
in
inc
sbb
andl
mov
sahf
cmc
lea
es
popf
jb
ja
push
outsl
mov
jmp
clc
ret
sbb
cmc
roll
sbb
in
mov
aas
cmp
sbb
es
inc
fwait
add
and
das
cwtl
cwtl
hlt
icebp
xor
test
mov
or
inc
lods
daa
cmpl
pop
fisttps
outsl
adc
in
fwait
pop
jae
fdivs
inc
fldt
xchg
mov
cwtl
das
divb
in
stos
cwtl
iret
xchg
fwait
mov
test
push
xlat
loopne
mov
cmpsl
repnz
ljmp
push
jg
pop
jbe
rcl
add
sub
testl
leave
cli
sub
das
in
cmpsb
jns
lea
scas
inc
fs
mov
mov
pop
add
adcb
xchg
scas
test
cmp
mov
or
lock
lods
decl
sbb
cmpsb
fildll
add
repz
out
bound
popa
ljmp
mov
and
mov
stos
aad
test
fwait
aas
add
mov
adcb
pop
xor
inc
lea
daa
test
mov
out
in
jb
jmp
xchg
xor
cmp
fsubr
add
es
adc
jae
or
add
xchg
cmp
test
dec
aas
sbb
outsl
icebp
mov
cmp
stos
fcomps
mov
add
push
ss
add
test
mov
in
dec
arpl
lea
int
and
arpl
enter
adc
fs
mov
mov
inc
and
out
cmc
jle
mov
xor
push
mov
adc
xor
and
aam
or
or
ja
test
outsb
or
iret
adc
lods
daa
rcrl
inc
mov
test
cmp
int3
les
lods
loop
xchg
xchg
mov
pop
ja
mov
sbb
mov
je
insb
les
and
ja
xor
call
cwtl
mov
push
inc
xchg
sbb
movsb
les
fcoml
je,pt
stc
and
add
sbb
fistl
dec
jecxz
loop
dec
imul
pushf
add
and
mov
lcall
pop
xchg
lret
xor
xor
subb
data16
adc
push
inc
jl
lods
pop
mov
int
lods
outsb
mov
jb
mov
xor
lods
jne
xchg
pop
sub
jle
inc
insb
push
sub
xor
ficoms
jbe
sbbl
inc
sti
dec
icebp
mov
xchg
out
iret
std
xor
jmp
cmc
pop
cmp
pop
mov
sbb
inc
pop
popf
std
xchg
aas
ficoml
inc
add
icebp
loopne
jmp
pop
dec
rcr
push
mov
jp
repz
es
test
add
fiaddl
or
pop
addl
push
stos
sub
sbb
fstpt
mov
loop
cltd
gs
dec
push
cmc
adc
lods
popf
scas
popa
andb
dec
mov
sbb
test
std
pushf
sub
mov
xor
test
push
xchg
mov
loopne
mov
or
dec
xlat
ror
xchg
dec
mov
lods
fcoms
loop
popa
scas
adc
inc
inc
xchg
mov
fisubl
mov
jne
inc
sbb
rorl
cmpsl
pop
cmc
sbb
std
xor
lcall
add
out
jne
cmp
or
cwtl
sub
pop
pop
pop
sahf
sbb
into
dec
pop
pop
push
scas
cmpb
arpl
loop
xor
sbb
mov
arpl
push
sbb
sub
push
pusha
lock
cmc
mov
lods
fs
jge
add
jle
push
sub
pop
sub
cmp
xor
cmp
xchg
jl
jp
sub
adc
lret
lds
aaa
dec
sti
test
out
test
cltd
inc
mov
shlb
lock
shufps
loopne
cmp
push
gs
cmp
iret
add
pop
push
scas
out
int
xor
sbb
jg
mov
mov
int
cmpsl
and
shll
sarl
xor
fcmovnu
pop
pop
out
dec
in
fwait
adc
push
mov
out
cwtl
or
jb
out
mov
xchg
add
lret
outsl
or
xor
xchg
and
xor
ret
scas
cmpb
xchg
lcall
xchg
popl
cs
out
xor
push
sti
sbb
pushf
lea
lret
cmp
cmp
add
mov
mov
in
xchg
ret
rcll
jle
sub
mov
push
or
jae
cwtl
test
push
ret
sub
push
jb
push
lahf
adc
xchg
subl
mov
stos
push
adc
jg
divb
cmp
dec
dec
jle
sub
aad
cmpsl
mov
sbb
fdivp
or
and
ss
into
outsl
les
push
repnz
or
insb
test
xlat
fcmovnu
aas
jp
push
out
int3
jcxz
aaa
into
adc
imul
shll
clc
and
test
popf
cmp
dec
icebp
iret
shrl
js
pop
cmp
and
sub
mov
cmp
daa
ret
sbb
imull
sub
int
push
adc
js
data16
pop
pop
addr16
cwtl
nop
push
in
dec
sbb
push
push
mov
lar
add
push
push
clc
js
pop
testb
push
cmp
inc
push
mov
shr
hlt
inc
cld
int
xchg
bound
dec
adc
lret
cmp
adcb
sbb
sub
cld
ljmp
adc
cmc
xchg
cmp
movsl
or
mov
rclb
pop
lret
jp
ds
mov
test
cmp
popa
jp
fsubr
xor
mov
sbb
insl
test
mov
leave
push
inc
and
push
push
into
xchg
shll
ror
fnsave
imul
pop
mov
or
jns
mov
addl
mov
push
mov
add
sbb
push
ffree
lret
loope
adc
in
sbb
cmp
in
fmul
lds
push
cwtl
or
pop
adc
ljmp
xor
mov
leave
push
iret
in
popf
sub
mov
inc
adc
out
push
rorb
mov
iret
push
fcomps
fs
jnp
aas
and
cltd
push
dec
nop
mov
dec
lds
mov
fwait
lahf
out
or
ret
in
loopne
sub
or
or
cmp
mov
and
mov
xchg
mov
fstps
sti
hlt
add
cmc
subl
mov
sbb
xchg
ret
ret
mov
lahf
or
sub
pop
hlt
stos
rol
ja
or
adc
das
add
cmp
jg
jae
mov
sbb
popa
int3
aam
jb
and
mov
sbb
pop
inc
and
repz
or
scas
sub
ss
in
cmpsb
adc
xchg
mov
cltd
add
adc
and
rorb
pop
cmp
add
in
roll
lods
stos
push
adc
movsb
mov
xor
out
out
add
loop
lea
sti
jmp
and
push
ljmp
pop
mov
pop
xchg
stc
mov
pop
and
jmp
mov
push
rorb
ja
xor
fidivrs
rolb
and
shl
mov
es
aad
test
push
aas
mov
xchg
mov
fs
mov
cltd
jg
cmp
adcl
mov
insl
das
push
jg
sub
or
xchg
lcall
mov
mov
push
nop
in
pop
add
jge
lret
data16
popa
sub
sub
xor
push
loopne
dec
mov
fs
adc
cmp
push
and
outsl
pop
cmp
scas
jne
mov
adc
xor
insl
stos
lods
adc
pop
adc
pop
hlt
fimull
push
or
in
mov
cld
popf
xchg
cwtl
ret
add
mov
insl
rclb
mov
jmp
fildll
fadds
fcoml
xchg
icebp
or
scas
inc
clc
pop
inc
jae
movsl
movaps
out
enter
cltd
xor
sub
add
jg
ror
cmpsl
test
test
lcall
mov
jg
scas
rcr
xor
sahf
push
cmpb
stc
pmaxub
mov
mov
mov
aad
xchg
pop
test
push
push
bound
mov
jae
and
dec
stos
push
dec
iret
push
hlt
jp
push
adc
popf
push
mov
push
xor
push
insl
inc
repnz
jo
add
scas
push
or
mov
fwait
out
jp
rorl
sub
ret
cmp
imul
jge
xchg
cld
scas
or
stos
cmpsb
fidivl
and
dec
arpl
cmp
xchg
jecxz
dec
daa
or
dec
rorb
sahf
daa
roll
sbb
push
jnp
addr16
xor
cmp
addr16
out
dec
popf
icebp
loop
dec
mov
popa
xor
xor
aaa
mov
push
out
lods
icebp
or
cwtl
mov
pop
std
and
xchg
jle
dec
lcall
mov
scas
in
cmp
int3
gs
in
xor
rcrl
lds
movsl
enter
fnstenv
out
sti
cli
sbb
inc
call
fs
test
dec
push
loope
rol
cmp
or
stos
mov
cmpb
cltd
cld
adc
mov
cmp
aaa
inc
mov
push
popa
cmp
xchg
mov
out
popa
xor
push
mov
cmp
xlat
cmp
lds
into
xor
sbb
xchg
sti
jle
movsb
push
lcall
push
adc
sbb
and
test
clc
scas
loop
inc
lds
pushf
ljmp
mov
xchg
popa
scas
xchg
pop
or
loope
bound
cs
or
cmp
sar
xor
js
jp
pop
pop
jne
cli
mov
xchg
mov
jmp
lds
loop
aaa
stos
push
push
mov
stc
pushf
sarl
sub
add
sub
jnp
dec
gs
dec
pop
and
pop
or
xor
out
jle
dec
lahf
xchg
sbb
inc
lea
push
pop
movsb
out
push
mul
dec
jb
push
xchg
dec
lods
sbb
fidivrl
loop
lds
hlt
mov
call
into
sub
inc
pop
cmp
bound
call
add
int3
repz
and
xor
xor
call
enter
sahf
xor
outsl
imul
addr16
xor
cmp
xor
mov
je
pop
into
cmp
insb
xor
in
xchg
or
jo
sbb
cmp
repnz
add
loope
mov
jne
cmp
sub
mov
mov
lock
out
and
orl
mov
add
jecxz
lcall
adc
divl
repz
add
or
cltd
mov
xlat
cmovb
push
fmulp
scas
enter
loop
mov
jns
repz
jb
jle
ret
sbb
cltd
pop
add
loope
je
mov
jae
hlt
inc
cltd
insb
hlt
loope
sbb
int
fmuls
sarb
sbb
icebp
mov
jmp
adc
sbb
aam
mov
aad
dec
stc
sub
and
stos
xchg
or
aam
mov
mov
lret
xor
adc
mov
pop
xchg
add
imul
rorl
psubb
faddl
mov
repnz
popf
das
fwait
mov
ja
cld
scas
xchg
xchg
sub
cli
dec
and
xchg
mov
lock
pop
mov
or
icebp
sbb
mov
sub
mov
mov
jmp
rolb
popa
gs
jns
stc
fldcw
movsb
outsb
dec
dec
movsl
mov
inc
sbb
push
sub
xor
ljmp
push
jle
pop
xchg
mov
sbb
add
xor
dec
push
fcmovb
test
fisttpll
push
icebp
sub
sahf
shlb
add
addr16
icebp
movsl
mov
lcall
aam
sbb
in
daa
fxch
stos
adc
popf
arpl
cli
arpl
sub
xor
sub
dec
add
lahf
cltd
cmp
insl
into
and
js
std
sbb
fmull
mov
jns
test
push
ficomps
sub
cmpsl
icebp
stos
lret
movsb
mov
dec
lcall
cmp
push
inc
out
push
pop
sbb
bound
push
xor
push
js
cmc
aad
test
jns
cmp
mov
mov
lret
addr16
mov
or
icebp
test
popa
jb
sbb
sbb
test
repz
push
imul
incb
imul
dec
mov
andb
fcoms
lret
sti
test
mov
icebp
adc
pop
out
cltd
push
xchg
cmc
insl
mov
jno
ret
dec
js
dec
ss
xchg
mov
sarb
sbb
daa
mov
pop
lret
mov
fsubl
std
pop
xchg
or
pop
imulb
mov
sub
and
mov
sbb
sub
mov
das
out
cmp
ret
lock
aad
or
fldcw
popa
sbb
jg
dec
ljmp
addl
jl
cld
sub
sarb
enter
mov
rcrl
ss
int
std
int
stos
ret
push
dec
pop
jne
sbb
mov
dec
rcrl
or
test
sbb
movsl
test
push
push
out
mov
mov
xchg
cmc
bound
push
jns
or
sub
xchg
xchg
adc
xlat
sbb
sub
mov
mov
pop
movsb
nop
push
jns
jae
in
int3
cmp
int3
jl
mov
repz
jge
nop
adc
cltd
dec
adc
pop
push
mov
and
push
jae
les
ret
lret
dec
xor
in
adcl
push
ds
out
aad
xor
xor
fsub
and
xlat
push
or
in
jg
jp
xor
mov
xlat
dec
icebp
cltd
adc
in
mov
out
adc
stc
xlat
clc
or
xchg
lret
inc
sbb
cmp
mov
dec
stos
jne
ror
loope
movsb
jmp
xor
or
loop
inc
outsl
iret
add
mov
sub
jecxz
int3
fidivrl
push
ds
outsl
jne
adc
mov
out
stos
repz
cmp
pop
insl
ja
jmp
jns
lahf
pop
rolb
dec
push
lea
rorb
push
mov
in
adc
imul
test
shr
add
and
inc
inc
loop
cmpsl
inc
adc
bound
outsl
or
cmp
imul
and
insb
pop
cmpb
loop
pop
mov
mov
add
push
popa
push
adc
inc
mov
cmc
loopne
shrl
sbb
jmp
repnz
test
and
xor
jo
clc
push
push
jb
repz
or
sar
inc
dec
add
insl
fwait
or
movsl
loope
mov
mov
dec
fwait
lods
adc
std
xchg
cmp
sbb
push
lods
fs
fadd
rolb
fistpll
sbb
mov
jo
or
or
pop
lcall
ljmp
mov
int
movsb
mov
mov
mov
xor
xchg
stos
add
jne
aam
pop
or
pusha
inc
pop
mov
movsb
push
sub
test
arpl
daa
mov
xlat
pop
mov
je
lret
dec
or
push
and
add
sahf
jp
add
test
cmp
cmp
sarl
and
scas
sub
in
loop
sub
xchg
mov
sub
pop
cmp
push
and
sub
and
call
mov
or
int3
mov
push
ret
test
fistpll
lahf
jp
dec
shlb
addr16
push
jmp
imul
je
sub
imul
popa
movsl
jne
test
xchg
dec
popf
adc
dec
sar
mov
jbe
or
test
dec
adc
scas
inc
in
pop
sbb
mov
sbb
fcmovnu
ror
sbb
push
sbb
pop
and
adc
cmp
gs
daa
sub
jmp
pop
in
xor
push
dec
movhps
push
test
xor
rorl
aas
fldenv
sub
add
or
xor
or
dec
jo
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
