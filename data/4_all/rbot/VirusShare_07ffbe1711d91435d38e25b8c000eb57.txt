notl
mov
idiv
std
mov
or
test
pop
imul
jg
mov
sbb
test
inc
inc
aaa
daa
outsb
sbb
shlb
push
das
sub
mov
dec
lea
jno
ret
inc
mov
fxch
in
addb
or
pop
iret
sarb
les
mov
jge
out
cli
ljmp
clc
adc
enter
and
jge
movsl
ret
push
pop
loopne
mov
ret
gs
sbb
mov
sti
jnp
ja
mov
ja
jl
out
push
dec
adc
cli
cmp
add
sub
mov
cmc
out
sub
daa
pop
or
jns
iret
shll
pop
push
enter
pop
push
xchg
int
jo
pushf
pop
filds
sti
mov
push
cmp
add
jns
inc
dec
cmp
lods
push
orl
ss
inc
imul
or
ret
ret
test
push
stos
movsl
sti
iret
or
push
sbb
push
mov
test
icebp
xor
jne
fwait
jb
jbe
lods
jbe
lock
and
movsl
fnsave
or
sub
and
mov
enter
imul
and
out
add
subl
xor
outsl
leave
sub
test
out
subl
xchg
es
pop
mov
mov
loopne
lock
or
add
jmp
shlb
ljmp
and
stos
in
pop
shl
push
adc
imul
ror
dec
jle
pop
mov
xchg
in
out
aam
mov
mov
rolb
popa
mov
jle
sub
sbb
in
popf
data16
sbb
call
cmp
adc
clc
sub
dec
es
shll
test
das
xchg
fs
mov
and
stos
aad
mov
pop
and
push
mov
push
adc
out
and
lods
out
jp
push
cwtl
fnsave
adc
jle
add
dec
xchg
add
mov
add
popf
hlt
xor
scas
and
dec
rclb
and
pop
out
jne
mov
xor
outsb
and
inc
cwtl
pop
popa
jno
fwait
addl
lret
dec
add
adc
repz
mov
data16
mov
push
push
pop
adc
cli
cmp
adc
in
xchg
xor
mov
orb
arpl
cmp
push
icebp
pop
pop
out
adc
scas
into
popa
xchg
shl
add
mov
push
and
jo
call
dec
mov
data16
inc
roll
adc
rcl
cmpsb
mov
jb
bound
and
jle
sbb
mov
adc
sub
mov
ret
cmp
or
mov
mov
inc
loopne
lcall
mov
test
icebp
sub
sbb
fwait
cltd
aaa
xchg
adc
dec
lds
out
cmpsb
ror
cld
mov
sub
lods
int
adc
pop
sbb
jbe
test
xchg
adc
push
jno
aad
lret
dec
out
ret
or
iret
jge
mov
sub
stos
mov
mov
mov
les
push
dec
fwait
mov
leave
lock
push
aam
jb
cmp
sub
cmp
enter
dec
in
or
ficompl
mov
or
inc
int
and
push
jno
xor
orl
mov
or
sub
fsubl
ss
xor
inc
test
xor
or
mov
lds
jno
cltd
sbb
movsb
mov
xchg
sub
clc
scas
push
dec
repz
fnsave
call
int
test
call
xchg
mov
cmpsl
stc
mov
pop
lcall
dec
push
cltd
movl
pop
sub
mov
cmp
lea
jecxz
mov
jns
push
sbbb
clc
js
ret
inc
fcmove
fcmove
decb
stos
sahf
dec
xchg
into
push
pop
push
jbe
cmp
hlt
inc
push
jbe
repnz
out
lahf
push
mov
xchg
push
sahf
outsb
fldcw
mov
dec
cmc
orb
mov
rorb
inc
push
clc
sub
jl
popf
pop
cmpsb
sbb
incb
cmp
mov
mov
xchg
in
idivl
lret
cmp
inc
js
xchg
in
xor
fsub
mov
fdivr
enter
popf
enter
and
mov
jmp
sbb
pop
mov
mov
in
cmp
mov
xchg
ljmp
in
xchg
outsb
jp
sbb
sub
jo
adc
lock
mov
lcall
out
aaa
negl
dec
loopne
repnz
je
add
arpl
sub
shll
test
mov
scas
dec
push
negl
lods
dec
cmp
push
mov
jmp
fadds
inc
ds
mov
cmp
roll
jno
arpl
sbb
dec
adc
out
mov
mov
sbb
or
fnstenv
and
mov
cltd
push
jle
movsb
sbb
icebp
adc
insl
test
mov
cmp
scas
xor
cmp
jae
adc
push
outsl
shrb
js
gs
inc
mov
les
scas
leave
lahf
addr16
jp
mov
mov
push
mov
pop
jnp
push
pushf
xor
cmc
xchg
sahf
shll
pop
xchg
sub
fcoms
aaa
nop
mov
xchg
hlt
jp
das
mov
fldenv
enter
add
jne
push
pop
add
xchg
js
ss
lock
sub
jge
imul
fucomip
out
inc
insb
pop
sbb
push
jl
xchg
sbb
pop
jae
lahf
inc
push
sbb
fsts
xor
call
push
cld
out
rcrb
push
jnp
push
dec
jp
cmp
pop
repnz
inc
adc
daa
mov
mov
lret
imul
mulb
and
jp
mov
out
je
cmp
cmp
mov
and
pop
mov
dec
cs
lods
subb
jmp
sub
and
out
rcrb
mov
arpl
cs
pop
add
mov
enter
cmpsb
mov
into
aaa
push
mov
sbb
add
cmp
cltd
fildl
scas
push
es
es
pop
inc
xor
xchg
push
nop
fs
dec
add
mov
faddp
mov
std
or
insb
push
clc
ja
add
adc
adc
fimull
outsl
clc
or
out
iret
mov
inc
xchg
arpl
dec
pop
push
mov
fs
popa
push
jne
mov
sbbl
sbb
push
xchg
insb
cmp
mov
pop
dec
jo
mov
cmp
lahf
push
mov
cmpsl
push
pusha
dec
pop
push
cmpsl
roll
out
xor
lcall
imulb
lcall
out
push
mov
in
add
and
xor
scas
mov
pusha
sbb
sarl
push
shrl
fstpl
divl
sarl
push
popa
mov
lcall
cwtl
xlat
pop
out
psllw
cmpsb
movsb
rorl
in
mov
pushf
sarb
cwtl
mov
mov
mov
repnz
dec
ret
pop
testl
mov
xor
stc
mov
cli
xchg
push
jl
rcl
sbb
lahf
stos
cmpsb
mov
out
adc
xchg
aas
stos
mov
adc
outsb
add
adcb
das
scas
inc
jnp
push
adc
aad
mov
and
xchg
add
xor
sbb
lea
mulb
sub
push
je
das
lahf
cwtl
and
sbb
add
int3
mov
or
lret
cmp
fiaddl
pop
add
pop
sbb
call
cmpsb
dec
or
dec
jecxz
pop
leave
xchg
push
mov
ret
mov
aaa
pusha
lock
shlb
mov
cs
repnz
push
push
sub
cmp
xchg
leave
lret
fidivl
stos
sarb
mov
test
lret
jb
xchg
push
push
cmp
fs
xchg
adc
stos
and
cmp
lahf
ja
aaa
daa
mov
xor
lret
sbb
fstl
stos
std
addr16
xchg
subl
test
push
add
in
dec
cmp
mov
xchg
pop
loop
fbstp
fldt
sub
in
jge
pop
sbb
add
push
add
pop
or
adc
inc
movsl
mov
dec
mov
call
adc
jb
push
dec
ljmp
push
cltd
rolb
and
ss
lea
test
lcall
popf
or
das
mov
mov
shlb
mov
aas
or
sub
xlat
or
mov
js
adc
mov
data16
dec
cmpsl
cmp
lock
in
push
push
add
cwtl
bound
repz
idiv
push
adc
push
xlat
mov
inc
iret
push
mov
jo
pop
mov
inc
je
or
orb
sahf
jmp
in
lret
lwpval
inc
sub
stos
pop
xchg
sub
in
pop
sub
cwtl
sti
pop
mov
mov
xchg
int
mov
xor
sbb
clc
jge
ret
inc
dec
pop
push
cltd
dec
push
sub
cmp
xor
mov
and
jns
xchg
add
in
shll
sbb
or
je
clc
in
xchg
dec
xchg
bound
fdiv
mov
xchg
orl
movsb
jnp
xor
leave
pop
imul
nop
lods
rcr
pop
leave
sub
push
mov
add
xorb
inc
mov
aaa
sub
loope
add
orl
insb
test
bnd
int
arpl
xchg
push
cmp
sub
sbb
repz
je
mov
mov
mov
dec
pop
data16
shll
cs
call
out
mov
inc
mov
fstl
xchg
or
mov
pushf
pop
mov
fildll
lock
and
cmp
xchg
das
jecxz
hlt
shl
repz
dec
std
jne
xor
cmp
insb
aas
adc
cli
mov
cmpl
sub
xchg
dec
jno
inc
movsl
clc
js
scas
adc
push
inc
push
jnp
inc
insl
pop
xchg
push
jmp
push
inc
rorl
sbb
sarb
cmc
jne
xor
sub
jo
dec
push
or
add
pop
push
mov
cmp
inc
iret
adc
jnp
xor
stc
movsl
lock
bound
lahf
adc
std
xor
cmp
jbe
stos
dec
mov
aad
int
add
push
push
mov
inc
and
stos
mull
cmp
mov
mov
mov
outsl
in
into
and
or
dec
pop
mov
enter
cmp
inc
mov
adc
pop
jno
jo
lcall
movsl
rolb
mov
les
xor
sbbl
jge
enter
adc
sahf
inc
shrb
lods
xlat
xorl
push
push
or
xchg
xchg
jo
aas
adc
fisubs
js
push
push
and
jecxz
das
push
add
add
lods
imul
enter
mov
sub
and
into
or
mov
dec
pop
lods
es
cmp
inc
mul
call
or
pop
and
iret
bound
xchg
adc
inc
leave
add
push
dec
jno
and
shl
sbb
push
dec
jp
test
outsl
inc
cmp
jp
cltd
pop
out
sbb
dec
sbb
push
iret
out
in
into
mov
mov
test
notl
stos
add
xlat
scas
aam
cltd
adc
insl
or
xchg
push
dec
cmp
jecxz
mov
dec
mov
xchg
jb
push
mov
lods
lret
mov
in
mov
and
xchg
push
sbb
lret
les
sub
fisubs
out
pop
test
dec
cs
stos
outsl
jns
ret
push
xchg
push
mov
dec
scas
mov
in
adc
fucompp
pop
nop
mov
and
hlt
rcl
mov
fimuls
jmp
in
mov
or
mov
or
shlb
ss
sub
xchg
jno
mov
fistpll
push
pop
lods
cltd
scas
imul
mov
cld
into
inc
xorb
xchg
stos
aad
jno
test
scas
jge
addl
jno
out
inc
sub
xchg
hlt
aad
lock
in
add
in
sbb
int
sbb
inc
iret
lahf
in
jmp
fcmovnbe
inc
push
out
dec
jl
dec
cmp
xchg
push
inc
xor
sbb
xchg
mov
imul
mov
dec
mov
subb
mov
in
stos
xchg
jne
pop
daa
mov
dec
out
testl
push
cmp
sbb
in
cld
mov
daa
aam
xor
jle
inc
push
int3
imul
inc
lahf
lret
dec
pop
call
xor
pushf
loop
lds
jne
fcoml
aaa
adc
cli
sbbb
cli
mov
push
mov
push
mov
ljmp
adc
enter
jbe
inc
mov
sbb
pop
add
arpl
sub
fisttpll
jo
inc
push
gs
inc
ret
mov
push
mov
in
mov
inc
xchg
sub
push
fmuls
ja
push
les
call
push
lods
movb
je
test
fwait
mov
ret
mov
fs
bound
xchg
pop
call
test
xor
mov
ret
lret
je
stos
fimuls
popa
movsl
pop
mov
shll
pop
lret
das
sti
sub
enter
sub
xchg
test
test
dec
dec
lea
lret
js
cmp
push
cmp
adc
mov
xchg
mov
sub
arpl
sbb
xor
or
pop
call
into
mov
outsl
mov
das
push
xlat
inc
js
sti
push
scas
mov
cmp
pop
into
loop
and
cmp
push
and
xor
dec
mov
mov
jb
mov
or
mov
push
imul
mov
jo
mov
jmp
inc
arpl
xchg
pop
arpl
xchg
dec
sbb
xchg
in
cwtl
mov
test
test
xor
hlt
jecxz
sahf
leave
mov
movsb
cs
adc
cmp
hlt
cmc
mov
mov
icebp
pop
popa
mov
xchg
ficoml
nop
or
jmp
fisttpll
cmpsb
test
hlt
pop
add
ds
add
inc
add
mov
fnsave
lcall
ja
pop
pop
sub
dec
daa
jno
outsb
aas
pusha
outsb
movsl
aad
cmp
mov
and
xorl
push
es
inc
data16
push
xor
orb
int3
lcall
xor
frstor
pushfw
popa
and
mov
inc
std
xchg
rorl
pop
xchg
mov
loope
pop
repz
push
xor
push
fimuls
and
mov
fistps
fcoms
dec
add
dec
adc
xchg
and
test
mov
int
ret
push
les
shr
cltd
xor
in
stos
mov
pop
push
sub
test
or
dec
jno
inc
mov
pusha
pop
sbb
adc
pop
cltd
cwtl
pusha
and
pop
mov
repnz
jmp
popa
xchg
pop
cltd
inc
dec
sub
xchg
lods
ret
mov
pop
pushf
xchg
xchg
clc
mov
adc
dec
ret
fdiv
ror
insl
das
mov
add
sbb
jle
cmpsl
lods
lcall
jp
dec
mov
pop
sub
cltd
stc
testb
int
push
inc
jnp
add
xchg
pop
and
stos
sbb
call
aaa
repz
push
pop
pusha
gs
jbe
jb
sbb
pop
arpl
push
in
inc
inc
fistpll
mul
mov
mov
mov
loop
or
add
xor
lret
imul
mov
in
mov
mov
cmp
dec
popa
filds
jb
mov
dec
fidivrs
lcall
negb
rcll
clc
into
inc
inc
push
outsl
je
jge
jmp
xor
inc
add
movsb
add
mov
xlat
mov
ja
inc
pop
jb
lea
add
mov
js
std
pop
push
cmc
fnstenv
stos
outsb
loop
ja
pop
cmp
pop
sbb
cmp
in
pop
xchg
jno
test
adc
xlat
and
test
xchg
mov
and
insb
pusha
idivl
mov
shrb
aam
in
iret
lea
mov
xor
cmp
cs
cs
dec
mov
dec
cwtl
ud0
adc
mov
imul
or
lds
adc
xchg
subl
scas
sarl
or
lahf
fstps
fldenv
mov
cwtl
or
out
loope
std
mov
scas
je
xor
add
add
push
popl
gs
sbb
or
and
repz
cmp
addr16
pusha
sub
mov
inc
push
pop
out
out
cmpsb
pop
push
xchg
lock
mov
shll
push
xchg
rolb
push
arpl
jecxz
cmpsb
push
xor
xor
sbb
push
mov
icebp
pop
xchg
adc
dec
xlat
fst
fsubp
cs
pop
push
cmp
lcall
sub
inc
pop
mov
cmp
sub
int3
loopne
sti
pop
xor
in
or
sub
mov
lret
sub
push
leave
bound
xchg
jg
inc
scas
imul
fstpt
dec
icebp
inc
add
stc
pusha
inc
cwtl
inc
ror
aam
mov
mov
loop
pop
adc
imul
jne
popf
mov
ja
mov
and
pushl
fisttpl
aam
lock
cmp
mov
inc
cmp
sub
mov
ljmp
shlb
rorb
mov
cmp
insb
pop
jo
cwtl
jae
sbb
push
out
movsl
loopne
add
inc
sahf
pop
sti
xchg
add
test
lret
xor
push
test
fwait
inc
fsubs
stc
pop
mov
jae
or
pop
test
pop
iret
adc
sub
bound
mov
or
rcll
xor
or
add
xor
rcr
pop
add
mov
lea
cmp
xchg
or
add
cmp
sbb
ffreep
aas
arpl
sub
sti
add
xchg
push
pop
sbb
jmp
int3
je
addr16
mov
arpl
push
jp
cmp
push
mov
fistpll
push
mov
push
pop
pop
pop
out
stos
sbb
cmc
stc
sbb
or
pushf
sbb
out
je
dec
add
push
jl
call
xor
les
jae
fcomps
mov
xor
or
push
std
adc
mov
pop
imul
ja
xchg
push
jecxz
or
sbb
dec
test
ror
insb
pusha
sbbl
cmpsb
xchg
push
add
iret
repz
cli
xor
into
and
pushf
fidivs
ret
orl
mov
pop
imul
aas
cmpl
dec
push
ret
outsb
push
inc
xchg
sub
repnz
scas
inc
cmpsl
aam
clc
cmp
fsubp
and
cmpsl
sbbl
push
or
mov
movsb
lret
pop
pop
push
cld
mov
clc
jns
out
and
insb
aad
mov
xchg
pop
mov
mov
inc
mov
xor
int3
push
fiaddl
aas
mov
js
push
xor
or
add
shl
cmp
cmp
icebp
xchg
adcb
test
mov
mov
or
adc
mov
mov
dec
xor
cmpsb
es
mov
aad
adc
hlt
xor
stos
sbb
jp
mov
enter
mov
mov
xor
pushf
or
into
insb
add
es
in
fldenv
jp
sub
cmp
sub
sbbb
clc
and
dec
add
stc
mov
or
add
out
mov
shrl
lds
sub
and
rcrb
rcrb
inc
mov
mov
mov
data16
scas
daa
cmpsl
data16
lds
loop
push
ss
or
out
into
imul
fldl2e
mov
jae
jecxz
gs
xchg
add
insl
rcrl
sbb
xlat
xor
push
leave
xchg
js
sbb
es
into
pop
negl
lods
repnz
pop
fimull
outsb
mov
dec
rcl
and
pop
and
sub
cs
fisubl
push
test
sbb
pop
dec
pop
mov
pop
add
sub
jge
dec
sahf
popf
hlt
jb
sbb
and
ficoms
stc
xor
mov
adc
cmovbe
int
scas
ret
mov
mov
push
bound
adc
jp
fisubrl
adc
in
mov
hlt
lahf
test
xchg
test
mov
das
ret
test
dec
insl
and
push
pop
or
mov
and
loopne
adc
cmp
mov
popf
inc
jae
imul
mov
aam
fistl
mov
mov
ret
inc
fcompl
loop
addr16
movl
lcall
dec
clc
sub
pop
sarl
cwtl
inc
aas
clc
imul
push
enter
jb
jmp
dec
sub
imul
dec
mov
repnz
add
jmp
in
pop
fwait
dec
inc
xchg
dec
popf
testl
or
cmpl
xchg
ret
shrl
mov
and
iret
dec
fsub
gs
ficoml
lock
outsb
lds
xor
hlt
pushf
mov
inc
add
dec
xor
movsb
pop
leave
hlt
lds
loope
push
test
adc
jnp
cmp
push
xchg
pop
int
adc
xor
pusha
xchg
sub
sbb
loop
xor
stc
js
dec
mov
or
mov
jl
cmpsb
xor
dec
adc
dec
scas
lds
push
push
jge
mov
faddl
mov
ds
outsb
in
xor
arpl
inc
es
mov
dec
ret
fldcw
fldl
jbe
pop
mov
sub
adc
xchg
and
cmp
mov
lds
sbb
jnp
pop
popf
lds
aas
loop
xchg
mov
mov
mov
jns
fistl
aas
or
dec
add
jo
pop
xchg
daa
and
jno
nop
and
add
pusha
test
shll
mov
mov
inc
hlt
add
sbb
insl
sbb
popa
addb
dec
ficoms
fildl
or
pop
pop
jnp
jmp
inc
add
lock
addr16
or
jo
sar
loope
ffreep
push
nop
and
dec
fs
sbbb
fsubl
scas
and
in
je
cmc
mov
add
jg
shrl
icebp
fcmovnu
cmp
jbe
sub
pop
test
xchg
enter
loope
mov
mov
fists
bound
and
jne
scas
lcall
outsb
dec
pusha
mov
cltd
sub
mul
mov
ficompl
out
inc
and
push
push
xchg
cmp
dec
push
mov
add
sti
movsb
push
lock
pop
cmpsb
lock
push
sbb
rep
in
inc
push
xchg
mov
cmp
out
cmp
out
push
xchg
loopne
movl
add
aaa
sub
rorb
lcall
or
or
sbb
std
frstor
adc
fcoml
cmp
clts
fisubs
icebp
jne
cmp
mov
cmc
adc
insb
pop
lret
or
ds
and
sbb
cmpsb
jbe
mov
icebp
out
pop
movsl
xchg
mov
fwait
je
mov
fdivrs
mov
inc
xchg
mov
icebp
jmp
jnp
adc
add
jo
out
mov
jo
add
jno
cmpsb
dec
jbe
or
push
jecxz
sbb
push
jno
cltd
push
push
arpl
sub
loopne
cmp
inc
int3
loop
sbb
push
clc
in
mov
sub
or
push
jle
cld
cmp
mov
outsb
ljmp
pop
mov
lods
jle
push
dec
lahf
inc
pop
call
cmp
pop
push
outsb
ja
mov
fnclex
sti
mov
mov
mov
sbb
mov
pop
push
jg
dec
push
pop
hlt
cmp
out
xchg
jae
imul
dec
mov
jb
in
mov
int3
mov
sub
pop
adc
fldl2t
fnstsw
mov
cmp
xorb
xor
jl
rcrb
push
pop
mov
fisubrs
lret
fcoml
popf
xor
push
cltd
aam
flds
sti
push
movlhps
and
inc
add
and
mov
ss
jae
test
fimull
fiaddl
xor
jmp
jge
test
mov
dec
push
fsubrs
repz
add
inc
out
out
cmp
leave
out
dec
lds
add
inc
pop
loopne
popa
jle
cmpl
insb
push
popa
inc
cld
cmp
ljmp
shll
xlat
mov
ret
lret
pusha
mov
adc
jle
add
jg
sbb
into
scas
loopne
inc
ds
lea
push
cltd
inc
push
icebp
xchg
and
jnp
stos
xchg
cmc
and
enter
rclb
or
inc
cmpsl
mov
dec
std
xchg
std
fmuls
fsubr
jne
or
pop
pop
jno
xlat
gs
pop
mov
std
push
sub
jne
adc
into
in
lea
adc
stc
aam
inc
nop
out
lahf
xor
mov
sub
jo
es
sub
lds
test
sub
loop
dec
adc
push
and
mov
xor
jge
and
out
cld
adc
test
aaa
inc
jne
cld
rcl
push
sbb
mov
pop
dec
mov
imul
inc
sbb
jg
es
adc
cmpsl
cld
xchg
into
fmull
pop
fucomi
push
shlb
mov
nop
inc
aam
aad
push
test
cli
std
inc
popa
push
pop
and
lods
sub
sahf
cli
fwait
inc
das
leave
lods
adc
mov
sar
inc
ss
out
mov
xchg
inc
arpl
ljmp
xchg
adc
pop
push
and
movsb
cltd
daa
out
rcrb
push
and
and
dec
sbb
xchg
shrl
sbb
ds
cmpb
pop
int
daa
lock
ret
fldt
sahf
sub
push
fxch
jl
adc
adc
cmp
add
xchg
lcall
sub
ret
push
loopne
cwtl
dec
pop
ficomps
or
lret
lret
pop
loope
jbe
pop
ret
mov
cwtl
jmp
mov
jg
jge,pt
and
jns
and
mov
dec
mov
out
cmp
fisttpl
mov
mov
aam
data16
sbb
cli
cmp
push
cmpsb
roll
repnz
mov
mov
addl
out
xchg
mov
sbb
xchg
xor
stos
scas
adc
andb
psrld
push
mov
aam
mov
outsb
add
xchg
sbb
cmc
test
adc
mov
ret
ljmp
daa
xchg
jp
dec
addr16
repnz
xor
popf
xchg
scas
std
mov
in
test
sbb
sub
sub
xor
mov
push
add
les
add
inc
push
or
in
pushf
sbb
push
in
push
imul
faddl
sbb
sub
int
shr
sub
movsb
push
adc
mov
mov
bound
xor
dec
aam
mov
adc
inc
scas
mov
mov
sub
cli
jnp
sub
sarl
in
push
sub
sub
xlat
dec
sub
dec
mov
lods
xor
jg
das
push
jo
imul
cmp
test
inc
lea
test
push
inc
inc
out
and
ffree
sarb
mov
pop
and
out
pop
daa
xchg
pop
pop
int3
xorb
cmpsb
xchg
sub
in
out
cmp
sbb
ret
jne
jmp
sbb
xchg
xchg
push
add
inc
rolb
clc
add
ret
push
mov
pop
pusha
add
test
lds
das
dec
pop
mov
jmp
shll
je
cmpb
test
sti
jecxz
mov
dec
adc
dec
and
add
stc
testb
ljmp
into
mov
push
push
or
mov
push
add
sti
mov
sub
xor
sbb
jns
pop
push
sub
testl
mov
push
dec
mov
mov
mov
scas
jp
std
inc
push
das
int3
dec
jbe
cmp
push
sub
inc
ss
test
fcoml
out
mov
scas
xor
and
outsb
mov
lret
outsb
lret
addr16
lret
mov
add
mov
inc
ret
loopne
mov
nop
pop
cs
lock
dec
dec
cmp
sbb
xor
es
scas
dec
mov
inc
xchg
nop
pop
jbe
addr16
push
into
mov
ss
adc
jbe
dec
cmc
mov
cmp
xor
sbb
ja
std
jmp
out
xorb
scas
xor
test
popa
and
cli
push
insb
cmp
mov
psllw
jo
divb
cmc
mov
push
and
mov
push
lcall
fisubs
push
mov
test
pop
jns
js
cmpsb
inc
xor
mov
test
out
call
fisubl
ret
push
mov
stos
push
in
xor
repnz
sti
sbb
adc
cwtl
xlat
and
ljmp
pop
pop
insl
pop
cli
jge
dec
ret
jg
lods
fwait
push
aad
xchg
clc
ror
stos
mov
jl
in
xchg
xlat
bound
imul
scas
mov
hlt
insl
pop
pop
cmp
insb
aas
negb
nop
dec
mov
push
add
icebp
mov
mov
fwait
into
imul
fldl
adc
sbb
jno
cld
ljmp
or
xchg
and
test
push
aaa
mov
lcall
xor
xchg
pop
pop
inc
or
loope
stc
roll
adc
mov
sbb
mov
mov
inc
repz
cwtl
and
outsl
test
stos
cmp
ds
call
inc
xchg
fwait
inc
dec
jno
sub
xchg
adc
in
int3
nop
gs
cmpsl
mov
xchg
scas
popf
xchg
dec
int3
gs
cs
xor
jg
test
mov
movsb
push
in
push
insl
into
mov
fs
gs
mov
pop
ror
adc
out
mov
jg
rcrb
adcl
orl
dec
jg
movsl
sti
jae
mov
jge
push
or
shl
divb
sub
sub
call
inc
mov
dec
ret
push
inc
inc
cld
mov
xchg
insl
jp
jmp
jp
sub
and
movsl
test
mov
aas
mov
cmp
or
inc
push
bound
frstor
das
and
sbbl
imul
pop
arpl
xor
out
mov
jo
sahf
inc
jb
dec
out
es
xchg
dec
or
jae
jnp
out
inc
inc
std
inc
iret
in
sub
push
adc
sub
inc
stos
sub
out
dec
pop
adc
adc
inc
push
or
out
int3
ljmp
icebp
push
mov
pushf
aad
jecxz
das
push
subb
inc
jne
sub
jne
lret
xchg
sbb
push
xor
lds
xchg
mov
cmp
sbb
loop
xor
das
int
loop
movsb
mov
out
lods
sbb
add
jmp
movsl
lahf
push
mov
loopne
dec
xor
test
enter
cmp
fsqrt
mov
add
rcl
lahf
sub
mov
add
cmp
dec
add
aam
lds
xor
cmpl
cltd
add
shlb
or
loopne
test
jnp
mov
mov
cmp
loop
call
in
ret
add
lahf
mov
pop
aaa
out
insb
fistl
call
jl
xor
sub
stos
mov
in
cltd
in
imul
dec
pushf
pop
xchg
mov
fcompl
mov
inc
fwait
add
sub
or
fsub
and
inc
add
dec
and
xchg
xchg
bound
or
xchg
lahf
jg
fidivrl
fildl
dec
fsubl
sar
call
sub
mov
fucomip
int
mov
int3
mov
sub
outsl
bound
aaa
mov
stc
mov
je
jne
lods
push
jp
push
ret
or
std
pop
dec
mov
aad
in
mov
xchg
lahf
loopne,pn
pop
mov
xlat
lods
int3
aad
sub
jp
xchg
mov
dec
mov
mov
dec
push
cwtl
add
pushl
or
xor
push
mov
popa
arpl
fsub
ds
rcl
cs
push
and
jno
sbb
out
imul
lret
lea
sahf
popf
inc
or
mov
nop
fadds
shrl
cmp
jecxz
mov
cmpsl
es
adc
mov
sub
out
or
add
fcoml
mov
hlt
test
push
prefetchwt1
or
int
mov
stos
mov
xchg
arpl
sbb
test
xorl
lock
insl
push
pop
xchg
icebp
std
popa
mull
adc
in
adc
xchg
add
dec
imul
cmpb
insl
frstor
test
daa
leave
jmp
push
int
inc
andb
mov
and
jno
sub
jecxz
shll
test
xchg
lods
push
insl
xchg
sub
fsubrp
push
inc
push
cmpsl
loop
in
outsl
rcr
in
cmp
imul
sahf
loopne
push
aaa
loop
lret
call
sub
int3
or
cmpsl
sbbl
call
fwait
pushf
jp
push
mov
jb
pop
shll
shll
je
jo
fnstenv
cmpsb
movsb
sbb
pusha
push
adc
bound
pop
push
mov
in
insb
lcall
mov
addr16
out
sub
pop
sahf
mov
cmp
lret
fnstcw
int
loop
test
sahf
je
jnp
scas
sub
or
out
jmp
xchg
faddl
add
aad
mov
xchg
mov
sub
mull
xor
push
xchg
out
movsl
pop
addr16
adc
rol
pop
enter
lods
jle
pop
push
mov
outsb
jbe
dec
jb
es
jmp
cld
sub
add
lods
jae
mov
push
jnp
in
imul
mov
sub
jle
xor
mov
or
xor
or
arpl
push
xchg
push
sub
bnd
mulb
adcb
mov
pop
das
ret
insb
cmp
stos
pop
jbe
xor
add
mov
cmp
stos
dec
pop
addr16
xor
or
icebp
aam
and
je
xor
mov
in
push
clc
xlat
adc
sahf
jmp
arpl
jno
mov
sti
mov
orl
out
in
mov
loop
cmp
adc
inc
sbb
roll
or
lods
sarl
incb
jl
jnp
inc
xchg
add
push
xchg
hlt
xchg
xchg
jle
ljmp
and
cltd
pop
push
aaa
xlat
pusha
xor
int
int
int
fs
roll
cmp
cli
lock
sti
inc
outsl
xor
push
inc
out
aaa
mov
xchg
out
loopne
xor
pop
mov
enter
xor
sbb
push
mov
push
push
sahf
std
pop
add
jb
jae
popa
aas
xor
iret
fdivr
lock
dec
outsl
ficompl
int
dec
and
incl
fists
fwait
push
push
lcall
or
cli
jo
js
in
jno
pop
mov
sbb
pop
push
xchg
sub
adc
cli
and
pushf
add
out
sbb
lea
or
sbb
aas
dec
xchg
mov
mov
andb
ret
xchg
cmp
sbb
or
xor
inc
add
mov
inc
push
loopne
mov
loop
push
and
mov
adc
inc
stos
sbb
xchg
xlat
stos
rorl
lcall
and
push
das
jp
into
inc
cmp
cmp
rorl
push
xor
lea
jae
je
jl
inc
cmp
in
pop
add
test
mov
add
dec
adc
push
fcmove
mov
mov
dec
shrb
sub
push
aad
mov
pop
cmp
mov
cmp
enter
dec
aaa
pop
cmp
pop
popf
mov
adc
in
movsb
pop
sbb
jae
out
jo
aas
dec
cmp
outsb
and
dec
and
in
je
or
mov
lahf
sbb
sbb
shll
lahf
cmp
in
or
mov
int
fwait
add
int3
cltd
jge
pop
sarb
mov
cs
push
pop
xchg
push
pop
push
sbb
int
pop
add
or
adc
mov
insb
inc
xchg
sti
divl
xchg
stos
dec
adc
push
stos
mov
mov
or
mov
jbe
xor
jmp
adc
dec
les
pop
cmp
pop
add
sub
xor
jne
push
or
mov
xchg
inc
sub
add
mov
mov
dec
pop
ret
cli
inc
jae
dec
push
xchg
fstpt
or
sub
xor
pop
das
lret
and
jno
iret
jno
leave
mov
xor
push
outsl
out
pop
mov
sbb
mov
sbb
aam
push
mov
cli
lea
inc
jl
call
sub
loop
shll
add
dec
sti
es
mov
loopne
outsl
inc
xchg
in
loope
sub
fiaddl
pushf
or
inc
push
sbb
mov
and
xor
mov
mov
cmpsl
pop
in
pop
or
adc
mov
push
push
fs
clc
mov
mov
jne
in
mov
scas
loop
fisttpl
push
lret
mov
pop
lret
orb
jle
xchg
xchg
jmp
sub
addr16
ljmp
fdivs
mov
in
xchg
mov
xor
divb
cld
push
movsl
mov
add
idivl
pop
sub
and
push
jo
fdivl
inc
xorl
jle
in
mov
popf
jle
int3
pop
es
add
jl
mov
jnp
enter
or
or
push
pop
fstpt
push
sub
mov
pop
in
cmp
stos
and
or
inc
pop
std
push
sbb
xchg
clc
xor
faddl
cld
sbb
sub
push
push
adc
pusha
push
add
dec
pop
fdivrl
xor
pop
pop
lods
pop
out
push
push
mov
adc
sbb
mov
bound
add
dec
mov
add
shll
aad
sarl
stos
stos
push
outsl
pop
fmull
sub
cwtl
lret
inc
cmpsl
cmpsl
add
fwait
sub
jno
dec
call
sbb
mov
sbb
pop
std
xchg
push
outsl
jmp
hlt
repnz
insl
mov
inc
pop
push
inc
popf
out
sbb
je
clc
mov
ret
je
dec
sub
xchg
mov
negb
in
ljmp
cmp
xor
adc
into
inc
xchg
adc
rclb
ffree
dec
dec
xor
inc
inc
je
pop
dec
push
xchg
xchg
and
or
inc
js
lods
test
fwait
pushf
mov
mov
movsb
lods
jnp
mov
loop
fcomps
lret
outsb
jae
int
xchg
and
or
mov
dec
in
enter
fdiv
ficompl
rorl
fcoms
lock
fbld
pop
pop
leave
push
nop
or
xchg
out
sub
fcoms
sub
pop
pop
dec
cltd
pop
xchg
sub
jle
out
and
inc
xor
in
cli
popf
push
pop
enter
inc
aad
out
in
sbb
in
nop
les
aas
outsl
adc
inc
outsb
ficompl
mov
mov
mov
das
inc
int
scas
xchg
hlt
std
push
shll
adc
or
sub
xchg
stc
aaa
push
sub
pop
ror
in
xchg
pop
inc
pop
gs
movsb
pop
lock
stc
mov
fs
sbb
mov
test
push
test
les
rcll
mov
lahf
xor
jecxz
pop
jp
daa
ret
cmp
push
adc
loope
lret
in
adc
fidivs
loop
jnp
adc
stos
mov
add
mov
insb
pusha
dec
in
in
dec
inc
fnstcw
stos
jns
mov
xchg
loop
dec
inc
rcrl
add
or
mov
cmpsb
and
sbb
inc
in
mov
pop
dec
insb
push
jmp
push
jae
clc
inc
xor
out
ja
xor
mov
pop
mov
add
daa
push
or
leave
push
lock
fisubrl
inc
cmp
xchg
pop
or
xchg
popa
add
pop
mov
or
push
daa
pop
ljmp
cmpb
rol
test
xchg
add
dec
sarl
or
frstpm(287
push
into
lods
xchg
push
out
dec
cli
shll
fbstp
cmp
push
fisubrs
loopne
stc
das
jmp
in
ljmp
sub
enter
xchg
mov
cmpsl
mov
iret
pop
loop
sub
shl
subl
scas
inc
lods
push
call
gs
jae
fiadds
dec
sub
dec
sub
jo
aad
xor
push
sahf
or
les
outsl
andl
lds
jbe
cmp
mov
add
popf
ja
sub
sbb
aad
sub
int3
dec
inc
or
test
lea
rorl
sbbb
jno
outsb
push
xchg
scas
test
jnp
mov
inc
dec
dec
test
push
sub
pop
cmc
sti
iret
frstor
jno
outsb
xchg
repz
sbb
sub
call
cmpsb
stos
imul
out
incb
dec
xor
daa
mov
ret
insl
imul
test
lret
ds
pop
rcrl
cmp
and
es
scas
push
sti
sbb
xchg
mov
loope
pushl
sbb
or
outsb
les
sbb
and
pop
or
stos
stos
daa
sub
cmp
push
or
pop
outsl
sbb
loopne
cmp
das
or
xor
cmp
scas
sti
aas
daa
mov
data16
mov
out
mov
nop
push
inc
mov
addl
daa
stc
out
je
mov
and
aas
jns
rorl
and
test
rcrl
cmp
mov
pop
mov
jne
inc
xchg
mov
es
fcmovnbe
push
xor
pop
dec
sbb
pop
rorl
inc
mov
or
sbb
test
cmp
mov
add
imulb
mov
cmp
test
cltd
sub
div
lock
fs
in
adcl
pusha
push
inc
mov
imul
jle
add
sbb
push
jae
xchg
vminss
mov
daa
push
fwait
lret
aas
cmp
pop
in
sbb
js
popf
xor
dec
push
sbb
jnp
cmpl
mov
jnp
mov
es
lahf
hlt
aaa
pop
bnd
ds
repz
dec
aam
mov
loope
mov
fdivs
jb
push
je
push
push
or
mov
jmp
imul
mov
fsts
out
lret
fisubs
subb
push
test
test
js
es
lods
add
sbb
jg
jp
inc
stos
repnz
inc
xor
pop
jns
xchg
sbb
enter
fucomip
scas
xchg
cmpb
push
add
shlb
es
pop
jg
outsb
mov
cwtl
sbb
and
xor
daa
shl
xchg
cwtl
pop
sahf
sbb
aad
jbe
arpl
mov
push
or
and
dec
mov
lods
jle
and
cmp
cmp
scas
popa
enter
mov
data16
int
ja
enter
sub
inc
jle
rcll
jae
popf
notb
aaa
pop
sub
xor
or
in
add
cmpsl
xor
dec
mov
enter
stos
pop
enter
shll
xlat
insl
push
nop
popa
inc
pop
mov
ja
lds
movsb
add
or
xchg
mov
jae
xadd
and
addr16
jnp
data16
add
dec
xorb
adc
imul
imul
sbb
mov
mov
pop
sti
aaa
inc
add
xor
nop
ds
jl
push
mov
xor
divl
cmp
add
pop
adc
dec
shrb
mov
lds
cwtl
movsb
mov
xchg
pop
adc
popf
mov
push
cmp
pop
jns
sbb
mov
adc
jbe
jns
mov
mov
cmp
movsl
fsubs
cmpb
pop
aad
sub
jne
stos
int3
rcrl
pop
sub
add
movsb
data16
push
subl
or
sub
int3
into
std
cmp
aaa
push
popf
lahf
xor
loop
sbb
popf
inc
testb
jg
movhps
sub
mov
mov
loopne
aad
mov
out
rcr
outsl
imul
lahf
sub
add
push
aaa
es
int
add
cmpsb
and
or
fistps
gs
stos
jmp
jle
test
cli
decl
lea
ja
popa
daa
aaa
inc
push
popf
xchg
sub
jnp
insb
push
sub
mov
popl
aaa
aaa
imul
aad
push
fadds
in
pop
and
xor
rcrl
dec
mov
sub
push
adc
cli
xchg
adc
xchg
xor
push
push
sbbb
push
xchg
out
cmpsl
mov
fld
push
decl
xchg
mov
push
outsl
jo
test
ss
iret
data16
movsb
mov
imul
fwait
enter
shrl
aam
bound
inc
mov
inc
and
mov
cmp
mov
rclb
mov
sub
dec
mov
add
addr16
shlb
scas
jl
adc
xchg
pop
lret
fs
and
in
mov
xchg
and
cmp
fistps
popa
mov
out
js
into
sbb
dec
cmp
cmp
leave
mul
ret
mov
imul
sbb
adc
xor
pop
ret
aad
xor
xorl
enter
lahf
outsl
iret
dec
fs
mov
dec
clc
rolb
inc
add
jg
lret
and
add
repz
dec
mov
xchg
shlb
hlt
push
or
js
loopne
scas
mov
lock
cmp
scas
inc
sbb
push
imul
cmpsl
xor
notb
cmp
jb
push
add
push
stos
sub
test
cmc
cli
les
and
icebp
adc
xchg
stos
addr16
or
mov
je
sbb
lret
clc
jp
inc
dec
inc
stos
popf
mov
sbb
inc
inc
repnz
sub
lret
les
add
dec
mov
mov
hlt
std
mov
lahf
shl
mov
adc
insl
mov
lods
loope
cmpsb
hlt
jb
enter
push
mov
ds
test
je
loop
mov
push
push
lret
rcrb
pop
out
adc
cmp
mov
sarb
lock
lret
xchg
xor
or
inc
jne
mov
movsl
mov
jno
icebp
xchg
into
pop
jle
cmp
negl
and
dec
rorl
sub
pop
dec
hlt
mov
sbb
iret
add
rcrb
jle
xor
fs
mov
cmp
loop
sub
inc
adc
mov
jp
mov
mov
scas
cmp
fildl
lods
dec
lret
test
xchg
mov
cmpsb
mov
xchg
mov
sti
inc
jg
pmuludq
rorl
pop
test
ljmp
cmc
and
int
or
inc
jne
cmp
jl
and
cmpl
jns
nop
mov
test
adc
outsl
add
adc
fidivrs
cmp
xlat
imul
adc
jne
jae
pusha
mov
data16
mov
dec
test
push
push
repz
inc
lea
fwait
int3
pop
shrl
imul
mov
mull
sahf
inc
clc
jo
jle
hlt
adc
test
mov
pop
or
xor
loopne
dec
frstor
mov
push
dec
pop
outsl
jns
jge
pop
outsl
jno
les
les
outsb
xor
out
sbb
sub
jle
inc
push
out
loop
cltd
jl
je
push
dec
rcrw
sub
mov
push
jp
sbb
push
addr16
xchg
mov
dec
lcall
mov
jge
xchg
les
jl
popa
pop
imul
jb
test
fldt
nop
sbb
or
repz
mov
lods
sbb
or
mov
pop
jns
add
imul
mov
test
cmp
stos
imul
shr
xlat
hlt
and
sbb
jb
mov
adc
xor
xor
push
jbe
adc
pop
pop
sbb
add
mov
and
loop,pt
push
idivl
jns
mov
push
outsb
test
rolb
fwait
jge
adc
jbe
xlat
popf
jnp
loop
mov
xlat
sbb
daa
stc
mov
push
or
jg
or
test
pop
cmp
push
fbstp
movsb
sbb
leave
and
mov
mov
sub
enter
xchg
push
jne
loop
add
inc
xchg
and
cwtl
mov
mov
inc
out
xchg
sahf
xchg
js
inc
mov
popa
xchg
sbb
lods
xchg
xchg
jnp
cmp
xchg
pop
aam
or
shl
or
mov
in
inc
push
inc
popa
dec
cmc
aad
jbe
xlat
faddp
mov
iret
sbb
xorl
je
std
andb
imul
pushf
jo
sbb
dec
es
mov
fcompl
lcall
mov
decl
and
movsl
int3
pushf
ret
mov
jbe
imul
fs
xchg
xchg
sub
add
xchg
dec
mov
cmc
popa
adc
or
aam
cmp
fistpl
out
sbb
jae
fbstp
shll
sbb
das
pop
inc
lcall
fcoms
jg
xchg
or
stos
pushf
or
pop
inc
sbb
xor
xor
or
pop
test
mov
mov
dec
and
in
pop
icebp
and
dec
xchg
rorb
cmp
adc
mov
pop
outsb
outsl
cwtl
mov
sub
dec
xchg
fadds
iret
push
inc
jnp
jns
int3
adc
fs
xlat
jle
xchg
and
ffreep
pusha
sub
sbb
dec
mov
adc
cmp
aaa
inc
xchg
lcall
in
push
in
lock
mov
imul
loope
les
nop
out
adc
imulb
movl
out
dec
andb
mov
or
add
clc
mov
out
daa
fstp
fisttpl
xor
sahf
shr
addr16
das
test
fld1
lret
mov
andl
test
push
enter
xchg
cmp
in
pushf
cmp
push
shlb
aad
andl
adc
arpl
jno
add
lods
mov
lret
rolb
lea
jb
cmp
cltd
dec
gs
jge
and
pop
inc
xchg
jae
mov
push
cmp
clc
or
sub
js
pop
sahf
sahf
cltd
sub
or
adc
fmul
mov
or
stc
lret
mov
mov
imul
xor
cmp
pushf
cmp
mov
jmp
jo
jge
mov
repnz
frstor
mov
and
stc
sub
je
add
cmp
jbe
push
push
push
add
fldcw
mov
sbb
sbb
lcall
mov
add
pop
cs
lods
lcall
shll
jno
inc
movsb
subb
fcompl
xchg
shlb
enter
int3
or
inc
dec
xor
das
in
sbb
push
sbb
pop
sub
ret
nop
or
mov
and
adcl
test
lcall
mov
stc
mov
scas
mov
mov
push
inc
fwait
addr16
cli
jp
aas
es
cmp
and
scas
movsb
xchg
lcall
cmp
inc
repnz
dec
or
inc
and
jecxz
repnz
xchg
xor
lds
xchg
incl
mov
aam
dec
mov
push
mov
ja
push
repnz
mov
out
ficomps
mov
sub
call
aam
pop
inc
xor
mov
movzbl
add
mov
mov
push
adc
dec
adc
pop
inc
js
mov
loop
lods
jo
inc
roll
adc
adc
add
cmp
cmpsl
outsl
test
clc
add
loop
cwtl
ficoml
pop
sub
xor
and
rorl
js
int
clc
lods
cmp
leave
cmp
xlat
cmc
cwtl
mov
mov
movsl
insl
out
mov
idiv
mov
jle
push
gs
gs
and
cmp
sub
push
sahf
pop
daa
sbb
mov
in
sti
daa
out
or
out
inc
sub
jns
push
shlb
addr16
push
push
out
inc
jl
inc
push
pop
jns
mov
and
mov
jle
cmp
and
xchg
xchg
mov
add
and
xor
ret
jo
adc
jne
pop
outsl
mov
divb
test
out
pop
add
cwtl
sbb
mov
sub
imul
leave
and
imul
xchg
sub
push
xchg
jns
out
jb
dec
mov
stos
inc
pop
cwtl
out
movsb
cmp
lahf
bound
sbb
fcomp
clc
mov
repz
sbb
orb
cltd
mov
mov
mov
int3
scas
repnz
jnp
mov
incl
ret
idivl
cltd
int3
dec
cmp
iret
shrb
fnstsw
push
stc
push
pop
inc
js
pop
xchg
mov
mov
roll
cmp
mov
xchg
or
inc
dec
cmc
adc
mov
cld
out
jge
notb
loopne
sub
cmp
sub
movsl
aas
mov
xorb
sub
xor
adc
pop
arpl
pushf
aas
xor
push
jns
add
xor
ret
xchg
push
ljmp
xchg
lea
loopne
mov
pushf
roll
push
rorb
cmp
mov
subb
stc
sub
incl
dec
xor
pop
mov
jae
xchg
xor
xor
aad
cmpb
neg
mov
mov
int3
mov
inc
adc
dec
add
popf
or
push
mov
add
imul
in
sub
loope
cwtl
icebp
lods
push
mov
adcb
mov
mov
pop
cmc
mov
mov
sbb
inc
loop
test
mov
xor
adc
je
dec
mov
add
je
movq
out
scas
cld
nop
dec
sbb
adc
shr
push
cli
adc
xor
xor
inc
ljmp
sahf
sub
sbb
pop
push
mov
cld
or
test
inc
cld
or
hlt
addr16
adc
hlt
lods
pop
sub
sbbb
xchg
lods
mov
mov
sbb
xor
add
mov
loop
test
mov
sbb
mov
xor
inc
or
in
xchg
or
push
jmp
sub
dec
ljmp
addl
dec
jbe
stc
into
mov
sbb
adc
and
clc
mov
mov
mov
mov
xor
test
mov
sbb
adc
test
imul
mov
jp
add
cld
leave
ficoms
inc
cmpsl
sti
sbb
int
in
jle
xor
push
mov
cmp
push
cltd
push
cmp
inc
dec
call
cmpsb
xchg
mov
rcll
inc
nop
push
sbb
xchg
stc
pop
cmp
fistpll
iret
add
mov
enter
xchg
xlat
mov
ret
mov
mov
push
in
mov
xchg
std
std
shlb
out
rcrb
jno
and
sub
iret
add
pop
xor
jbe
imul
cmp
imul
or
jp
test
xor
gs
leave
negb
jo
push
mov
hlt
sub
shlb
xchg
and
inc
cmp
mov
fmulp
jae
lods
inc
adc
sub
fcomp
add
pop
lea
aaa
insb
shll
xchg
jb
add
cmc
push
das
scas
sub
mov
icebp
mov
fisubrs
xor
mov
fadd
push
sub
xchg
or
dec
xor
sbb
lret
mov
and
movsl
lret
imul
sub
xchg
aam
xchg
pop
das
jbe
fdivrl
dec
and
mov
inc
inc
hlt
jmp
clc
or
cwtl
and
sub
stos
iret
or
push
add
lret
ja
les
stc
out
andl
mov
push
out
loop
xchg
callw
mov
cli
cltd
jno
pop
xchg
loope
sub
push
adcb
and
adc
call
adc
aad
test
mov
push
adc
add
jmp
loopne
std
adc
mov
in
sbb
adc
add
fimuls
bound
lock
dec
les
aad
insl
rclb
mov
outsl
sub
or
sbb
dec
jl
bound
mov
or
sbb
jnp
cmpsb
push
popa
or
int3
sti
mov
xlat
xor
js
dec
xchg
dec
dec
cld
outsb
cld
into
in
push
mov
inc
or
leave
dec
push
out
mov
sti
jo
dec
stos
out
mov
cld
pop
fs
rol
clts
loop
stos
jg
jg
movsb
rclb
dec
or
mov
xor
push
adc
pop
xchg
mov
lock
cmp
mov
inc
ljmp
orb
inc
test
das
cwtl
rcrb
inc
lods
add
jp
cmp
les
mov
je
sub
or
outsl
fwait
mov
out
mov
mov
or
inc
push
stos
arpl
xchg
jnp
in
pusha
sub
cmc
mov
adc
cmp
jno
incb
ret
sub
mov
cmpsb
or
push
xchg
add
cmc
test
mov
xor
incl
xor
xchg
or
lret
mov
outsl
adc
imul
pop
lock
adc
or
movsl
divb
xor
xchg
lods
mov
arpl
mov
cld
and
imul
arpl
aas
mov
mov
mov
cltd
jmp
push
lds
xchg
xchg
daa
fnstenv
add
pop
cmp
pop
dec
popf
xor
xchg
lea
jmp
in
adc
fsubs
push
push
divl
stos
fwait
sbb
cmc
mov
sub
push
movsl
adcl
iret
ja
pop
test
fs
mov
mov
es
and
xlat
out
pop
mov
xchg
sbb
pop
mov
pop
or
xor
in
push
out
lds
stc
sti
mov
pop
xor
jno
mov
and
sbb
pop
pop
cmp
cmp
iret
jle
inc
call
jae
outsl
shrb
lret
sub
cmpsl
push
inc
inc
dec
pushf
fcoml
clc
xchg
shr
outsl
hlt
dec
test
int
xchg
ljmp
mov
inc
bound
loop
mov
mov
sahf
jnp
cwtl
adc
mov
xchg
shlw
rolb
lea
imul
lds
push
sub
js
jno
negl
mov
ret
dec
je
jmp
imulb
add
es
push
mov
push
int3
rcl
inc
std
sbb
es
shll
inc
mov
cmp
inc
cltd
cmp
adc
jecxz
and
pop
push
xchg
mov
xor
ss
and
cwtl
cmp
fsubl
lcall
cmp
jb
mov
xchg
ret
nop
movsl
out
cmp
cmp
das
jp
fldl
inc
mov
cmp
add
mov
jg
lret
js
push
xchg
xor
sahf
jmp
inc
fs
jno
or
adc
cltd
fdivs
add
mov
xor
adc
push
push
sub
mov
ja
nop
ds
push
mov
xchg
mov
sbb
push
mov
cltd
icebp
xchg
inc
mov
push
inc
je
sbb
pop
idivl
xchg
aas
xlat
xchg
test
in
sub
fisttps
loopne
dec
int3
movsl
push
popa
xchg
outsb
push
mov
aaa
clc
inc
arpl
mov
ret
scas
jle
test
lods
push
out
test
scas
or
test
sbb
sub
cmc
jnp
pop
mov
pop
into
and
mov
scas
pop
insl
popl
sar
push
aad
sahf
cmp
jge
decl
int3
mov
cmp
xor
dec
gs
test
fdivrl
hlt
xor
sahf
sub
sbb
sub
cmpsb
mov
sbb
sbb
push
mov
out
cs
repnz
dec
pop
sahf
inc
fsubrs
add
mov
rclb
mov
mov
mov
xor
enter
mov
push
cmp
inc
fst
repnz
scas
out
cmp
mov
clc
sahf
xlat
mov
in
push
fcomi
xchg
cltd
je
xchg
mov
fmulp
lahf
imul
insb
adc
sbb
rorb
cmpsb
push
or
rorb
sub
inc
mov
scas
aaa
rcll
notl
jne
xor
mov
pop
sub
hlt
lahf
mov
hlt
ljmp
mov
into
sbb
sub
jge
mov
lcall
mov
sub
lds
sub
xchg
aam
dec
mov
out
mov
mov
mov
hlt
pop
in
xchg
sbb
adc
dec
xor
int
int
mov
daa
mov
fnstcw
dec
cwtl
hlt
loope
nop
sub
dec
push
ret
test
fiaddl
push
cmpsb
hlt
inc
jbe
loop
or
cmp
lods
push
outsl
cltd
jae
test
ss
loop
iret
enter
and
add
mov
lock
sar
enter
je
idivb
mov
jb
push
pop
or
incb
jo
push
stos
movsb
inc
loop
inc
dec
mov
nop
adcb
sub
dec
add
sub
test
daa
sub
repz
sbb
incl
addl
mov
mov
lret
ret
popf
mov
inc
mov
inc
push
ret
lea
and
test
enter
or
sbb
xchg
aam
fxch
movsb
iret
adc
cmp
add
jo
cmp
or
mov
and
ljmp
mov
xor
push
jp
xor
push
adc
test
push
mov
in
addr16
int3
cmpsb
repnz
int
xchg
mov
inc
lcall
pop
out
xorb
mov
dec
mov
pop
and
mov
add
pop
xchg
mov
test
sub
inc
mov
and
pop
imull
das
cmp
and
cli
addr16
imulb
mov
push
jnp
int3
push
dec
adc
test
fidivs
shll
sahf
mov
push
inc
imul
rcrl
jecxz
stos
mov
sub
xchg
cltd
or
cmpsb
bound
xchg
mov
dec
mov
cmp
push
adc
or
or
sbb
icebp
lret
jge
push
xchg
ret
stos
cmp
sub
mov
xor
mov
cmc
je
test
mov
loope
mov
push
mov
lods
dec
ljmp
fiadds
inc
mov
mov
je
jg
and
outsl
sub
movsl
testb
cli
xor
aaa
mov
divl
in
jmp
inc
xor
cltd
mov
insb
mov
inc
nop
jge
popf
lods
test
movsl
and
out
lret
roll
sahf
add
dec
mov
pop
adc
imul
lods
xor
in
testl
out
add
out
mov
and
or
mov
sub
test
repz
sbb
pusha
test
push
or
mov
ss
leave
inc
enter
dec
hlt
sbb
enter
adc
jl
sub
add
mov
decl
in
jge
mov
mov
push
push
sbb
xchg
es
icebp
xchg
jns
fs
sub
icebp
jge
dec
call
push
out
divl
fisubrs
pop
xchg
xchg
out
cmp
call
cmp
xchg
pop
repz
aad
gs
mov
add
arpl
push
cwtl
pop
cmp
push
orl
push
arpl
es
push
jae
inc
loop
or
mov
or
setne
and
sub
and
mov
cmp
jns
mov
sarb
lcall
sbb
stos
leave
lahf
jecxz
sub
lods
je
push
ss
mov
movsl
add
inc
arpl
cmp
mov
popf
loopne
popf
mov
xorb
sbb
xchg
sub
mov
fildl
mull
lahf
mov
pop
daa
mov
push
andl
call
imul
pop
sbb
fldt
cmpsb
and
jnp
mov
xchg
daa
ret
loope
pop
sub
xchg
cli
cmp
dec
lret
adc
xor
xlat
test
scas
and
pop
xchg
pop
into
or
nop
push
mov
cmpsb
outsl
jle
fstpt
xchg
leave
xchg
sbb
rclb
xchg
inc
sub
in
xor
cmpb
incl
jno
sbb
xchg
inc
outsb
in
inc
xchg
aad
cmc
into
dec
in
test
loop
imull
push
icebp
xchg
mov
jbe
xor
pop
push
test
fsts
dec
fstpl
test
je
xchg
int
mov
xchg
push
in
daa
jecxz
push
cld
aaa
ljmp
adc
outsb
add
outsl
or
rclb
add
dec
icebp
ret
mov
shl
out
jb
leave
lahf
jle
xchg
aas
xchg
imul
push
push
sub
test
fbld
insl
cmpsb
xor
and
out
add
xchg
js
xchg
stos
fcmovne
loopne
inc
sbb
cld
xor
jnp
js
test
mov
and
stc
pusha
pop
mov
cli
mov
pop
sbb
roll
jg
push
sub
push
ret
std
cltd
popf
jmp
mov
push
adc
leave
push
lods
add
push
sbb
jle
push
not
insl
pop
adc
mov
cmpl
cmp
ljmp
es
lods
jne
mov
adc
call
add
dec
fdivrs
rcrl
jg
sub
loope
push
in
sub
out
or
sbbl
and
mov
cs
pushf
orb
jp
leave
dec
push
aaa
loop
push
xor
icebp
inc
xor
xchg
jno
push
test
int3
ja
mov
mov
adc
pop
test
shl
push
push
adc
inc
loope
in
mov
int
ljmp
sub
aad
rclb
xchg
jae
dec
jno
push
es
nop
jno
loopnew
mov
in
mov
pop
roll
mov
push
push
mov
dec
add
inc
push
push
xchg
jmp
jle
lock
popf
jno
fxch
fimull
pop
or
add
jbe
test
add
or
fnstsw
xchg
sub
inc
or
adc
push
lods
xchg
lcall
jl
rclb
jb
imul
mov
call
mov
scas
icebp
iret
or
mov
xor
and
ja
or
ficomps
mov
xchg
clc
pushf
cmp
rolb
sar
push
loopne
lret
add
cmpsb
xchg
in
lret
test
scas
jo
arpl
je
testl
jno
push
fstps
cmpl
jg
test
loopne
or
movsb
xorb
stos
hlt
testb
xchg
sub
data16
scas
fiadds
test
mov
cmpsl
lret
nop
adc
or
aad
stos
pop
cmp
shr
dec
cmp
out
pop
cli
push
aam
fidivrl
dec
cwtl
add
dec
add
xchg
pop
cwtl
mov
sbb
jne
jle
mov
mov
cmpsb
xchg
pusha
les
lods
cli
lds
lret
xor
mov
loope
inc
mov
and
clc
mov
jp
push
jmp
ja
aam
fidivl
pop
aas
daa
dec
mov
fidivrs
sbbl
repnz
jecxz
dec
adc
gs
insl
sbb
clc
and
scas
pop
cmp
test
arpl
inc
dec
xchg
imul
mov
adc
mov
jle
fs
mov
fsubs
dec
insb
pop
adc
and
push
xchg
sahf
mov
mov
and
ret
cltd
adc
call
or
cmp
or
lock
cmpsl
in
ret
in
adc
jnp
mov
fistpl
and
push
pop
jnp
inc
xchg
test
xchg
jns
es
cltd
data16
sub
dec
cwtl
outsl
dec
decl
hlt
sbb
or
rol
shr
pusha
int
js
mov
fdivrs
xor
stos
adc
sti
dec
sbb
xor
or
loope
insl
xchg
inc
push
sarb
gs
out
enter
jnp
mov
popa
icebp
pushf
lcall
adc
cmp
mov
mov
jnp
icebp
push
add
into
cmpsl
arpl
je
icebp
adc
pop
pop
cltd
leave
bound
sbb
sub
les
jno
enter
sub
jo
mov
or
daa
fidivrs
rcrw
adc
in
jno
fsubrp
add
adc
mov
aad
adc
imul
lods
lock
push
mov
test
aas
xor
inc
jae
movsb
jle
ficoml
or
bound
sbb
repnz
sub
shll
cs
xchg
push
and
push
das
ja
lock
popa
push
pop
out
aad
push
out
imulb
jno
outsl
lcall
jns
add
inc
jmp
clc
mov
cld
cltd
nop
xor
xchg
or
or
inc
jle
aas
jg
mul
arpl
iret
je
cs
inc
jae
daa
sub
scas
shlb
mov
aad
lock
inc
mov
nop
jp
shl
ljmp
test
mov
stos
push
cmpsb
outsl
mov
push
fbstp
aam
xor
imul
push
pop
inc
sbb
add
sbb
test
dec
push
push
xchg
shll
pop
cmpsl
adc
test
inc
fcom
and
sbb
mov
mov
cmp
jp
sbb
xor
fistpll
repz
setne
add
mov
sbb
stos
aam
xchg
pop
cmp
daa
dec
les
xor
xchg
add
cmpsl
sbb
mov
mov
jae
dec
xchg
ret
xor
jbe
out
insb
xchg
loope
popa
fstps
push
lods
inc
fdiv
pushl
notb
repz
in
mov
enter
test
xchg
cli
sbb
mov
cmp
out
pop
mov
insb
scas
cmpsb
fcoml
test
shl
iret
cmp
es
jp
cs
fndisi(8087
push
pop
pop
int
xor
pop
stos
sti
mov
lods
cmp
test
clc
jbe
sqrtps
lret
in
dec
test
jl
repnz
cmp
stc
xchg
sub
inc
in
cltd
bound
das
call
mov
fucomp
mov
mov
cmpl
lds
inc
sbbl
js
rcr
adc
and
enter
mov
inc
and
and
orl
pushf
mov
sbb
clc
or
mov
mov
cld
movsl
loopne,pt
or
fs
stc
add
cld
pop
sbb
mov
insb
fnstenv
push
cmc
pop
mov
jb
addb
pop
ret
cltd
xchg
push
or
cmpsb
or
push
int3
out
jle
je
les
pusha
cmp
xor
lods
pop
andb
gs
cmp
clc
mov
sbb
outsl
dec
pop
mov
jecxz
test
pop
rol
inc
mov
xor
add
sub
jae
outsb
pop
pop
inc
fnsave
pusha
test
stos
cmp
lret
adc
jnp
divb
std
cmp
mov
adc
mov
ds
fdivrp
sub
sub
inc
or
mov
push
push
lea
mov
mov
sub
sbb
mov
or
sub
das
fwait
cmp
adc
int3
mov
imul
or
dec
lods
and
push
call
aam
or
pop
jae
jp
add
mov
mov
sarb
popa
outsl
mov
shll
aam
inc
dec
ret
mov
xor
lock
and
jg
xchg
jmp
adc
jo
push
enter
xor
lahf
jbe
cmp
pop
mov
ds
jno
daa
je
lea
inc
xor
andl
xchg
cwtl
dec
popa
xchg
inc
push
inc
rorb
out
cmp
fs
cmc
jp
fsubp
sbb
out
jnp
cmpsl
mov
div
dec
mov
adc
jnp
jns
fmuls
xchg
les
adc
adc
dec
or
jmp
jge
push
js
aaa
subb
pop
hlt
push
xor
movl
sbb
outsb
inc
outsb
jo
test
pusha
mov
xchg
pop
arpl
out
enter
ljmp
loopne
sbb
test
xor
stc
push
add
push
xor
sti
int
or
cli
push
loopne
xor
and
pop
mov
or
mov
loopne
mov
int3
inc
add
movsb
mov
and
outsb
mov
test
add
in
in
add
inc
sti
repz
mov
and
mov
rol
xchg
xor
inc
jne
sub
addr16
in
pop
and
loopne
xchg
call
punpcklbw
out
mov
lahf
ljmp
jg
lds
mov
push
xchg
fisubl
test
pop
xor
pop
ja
roll
jne
enter
mov
cltd
lods
stos
rclb
ljmp
iret
inc
xor
dec
fsubrl
dec
mov
dec
clc
inc
xor
push
arpl
sbb
imul
call
pop
lcall
fsubl
ret
insl
bound
out
leave
inc
or
outsl
inc
inc
lea
xor
loope
and
pop
or
xor
fsubr
and
add
sbb
jne
mov
mov
lods
in
lcall
pop
sub
pop
lds
les
push
xor
lret
fdivrp
dec
lret
jp
sub
ljmp
and
jae
sub
cmp
sbb
sbb
sub
test
ret
mov
stc
cmp
jnp
ja
jecxz
rolb
std
ret
push
outsl
movsb
push
cmp
cltd
pop
xor
fwait
stos
daa
jle
sbb
repz
pop
or
xlat
call
cld
adc
sub
push
cltd
sub
nop
sub
sub
dec
sub
imul
add
cmc
fwait
xor
jbe
adc
out
lods
or
daa
das
jb
cmp
int
int
dec
ret
stc
push
ja
je
stos
in
mov
mov
mov
out
js
leave
test
inc
mov
push
hlt
lods
sbb
loope
sub
hlt
jae
sarl
sub
rol
or
add
xchg
pop
mov
jl
pop
push
xchg
dec
movsl
lds
pusha
ja
insl
insb
bound
push
and
jl
or
int
movsb
and
nop
xor
enter
rorl
dec
lret
dec
icebp
sbb
push
bound
or
xor
inc
fcomi
shl
aas
jo
int3
int3
leave
lea
xchg
xchg
bound
outsb
es
dec
mov
sub
mov
mov
inc
add
mov
xor
lcall
sarb
test
mov
pop
or
sub
jno
cmp
push
mov
call
jecxz
clc
cwtl
test
fcomip
testl
dec
sbb
iret
pop
xchg
xchg
jecxz
in
outsl
cmp
dec
mov
xor
sti
xchg
push
xchg
mov
add
jmp
jle
stc
stos
mov
mov
outsb
andl
mov
mov
fistpll
sarl
rolb
push
push
aaa
movsb
fsubl
or
mov
clc
pop
push
insl
scas
movsl
les
adc
jns
xorb
sbbl
sbb
cmc
shll
jbe
cmp
cmp
nop
or
lds
sub
and
fstl
sub
sbb
fsubrl
or
jge
fcomps
sbb
mov
inc
bound
cmp
test
ds
rcrl
testb
xchg
pop
jecxz
imul
pop
cmp
pop
push
xchg
shrb
mov
popf
jmp
sahf
xor
ljmp
cmc
push
sahf
aaa
sub
mov
jo
push
loope
je
mov
call
cmp
jb
stos
imul
daa
ss
ljmp
inc
push
arpl
test
add
xor
scas
xchg
cli
pop
sbb
xchg
lahf
xlat
jle
add
mov
out
fbstp
sbb
mov
ds
loope
sbb
push
aad
sub
pop
cmc
inc
popa
push
push
mov
mov
imul
mov
mov
lret
lret
out
or
fiadds
push
ja
mov
lods
and
mov
int
mov
mov
add
mov
dec
inc
jmp
sbb
push
arpl
pop
mov
imul
sbb
inc
adc
jbe
inc
pop
fcomps
repz
add
mov
or
sarl
les
repz
lods
sbb
mov
lcall
mov
loop
mov
in
out
je
adc
jecxz
ficomps
lock
push
mov
jbe
mov
rcll
fwait
bound
fs
outsl
mov
cmp
shl
test
mov
or
push
xchg
repnz
out
xor
in
fcmovnb
mov
jge
fstl
cmp
lret
adc
aam
jns
pop
cmc
out
cld
sbb
pop
fidivrs
lea
sbb
dec
push
mov
fs
mov
stos
testl
sub
adc
fdivrp
ljmp
outsl
movsl
dec
push
in
cmp
pop
mov
cmp
inc
jp
dec
pushf
adc
sbb
imul
lods
push
repz
fldl
or
sbb
out
pusha
mov
loope
xchg
repz
outsl
mov
hlt
sbb
push
inc
mov
test
mov
fstpt
rolb
subb
jae
lods
inc
aam
or
or
lcall
pop
ljmp
lock
in
jmp
mov
test
inc
adc
mov
dec
inc
mov
fisttpl
xor
icebp
lret
sarb
jecxz
cmc
adc
stos
fsubrl
sub
xlat
scas
cmpsl
pop
out
xchg
jle
lods
aaa
ret
jne
mov
addr16
push
mov
hlt
jae
xchg
out
cltd
stos
int3
mov
neg
dec
push
lods
xor
push
inc
xchg
sahf
in
fcoml
in
popa
rcll
mov
movsb
push
xchg
dec
lods
aad
dec
cmp
pop
repnz
andl
cmpsb
test
dec
shll
mov
jb
push
into
insb
pop
mov
jnp
aas
fisttpl
orl
out
sbbb
sub
jg
jns
mov
xchg
pop
and
mov
in
icebp
dec
jle
shrl
mov
mov
jmp
aad
add
jb
and
mov
cmp
dec
mov
lcall
mov
and
out
adc
pop
lods
jmp
bswap
xchg
jb
roll
adc
mov
inc
stc
xor
stos
cmp
mov
jne
ffreep
pop
sbbb
jge
mov
pop
and
popf
data16
ret
cs
mov
mov
stc
repnz
js
mov
clc
sbb
mov
aas
mov
adc
ljmp
xorl
adc
inc
sub
and
test
sub
fldt
pop
cli
mov
test
inc
out
pop
stc
ds
enter
lahf
xor
incl
dec
adc
loopne
or
jno
rolb
jb
inc
popa
lret
out
stc
jge
cwtl
mov
pusha
add
xchg
jecxz
jns
fsubl
inc
arpl
push
xor
adc
in
jl
rorb
cmp
psubd
cli
aad
rcl
lods
fcomps
push
and
fdivrs
mov
cmp
cmp
aam
and
mov
xchg
cmp
or
lcall
add
cmpsb
jp
mov
loopne
mov
testl
push
mov
notl
out
iret
xlat
lret
negl
dec
cmpsl
push
stc
cmp
fcmovne
cmp
test
dec
mov
mov
push
ret
pop
xor
iret
jmp
pop
xchg
or
xor
repz
mov
mov
xchg
lds
dec
outsl
cmp
lock
movl
outsb
mov
push
imul
cmp
cmp
mov
cmpsb
call
adc
aam
mov
rorl
inc
and
ret
sti
jne
popa
in
mov
aas
mov
jbe
jbe
das
lods
test
jmp
jmp
out
add
xor
imul
mov
orl
test
add
sub
hlt
cli
nop
mov
push
loop
or
les
push
dec
and
sub
pop
mov
scas
jg
dec
mov
mov
jb
decl
mov
and
cmp
sub
xchg
popa
cmpsl
and
clc
jecxz
sbb
add
sbb
or
jbe
push
add
jle
xchg
xor
inc
xchg
cmpsb
pop
xchg
mov
loope
mov
test
icebp
push
out
lahf
test
inc
sub
bound
pusha
push
shr
das
xlat
jno
aas
leave
xchg
add
push
aad
bound
xchg
ss
xchg
orl
ljmp
in
cmp
jno
xchg
jg
sbb
sub
push
and
add
xchg
pop
inc
mov
ja
incb
cmpsl
aam
dec
mov
sti
addb
sub
fdivrl
clc
mov
pop
stos
mov
rcl
cmp
or
movb
push
or
mov
popf
cmp
mov
pop
fimull
rcl
mov
cmpl
enter
gs
mov
test
sti
lret
sti
rorl
pop
inc
iret
inc
mov
mov
enter
pop
add
xlat
es
aad
ret
cmc
inc
leave
lock
inc
lods
mov
stos
adc
jmp
mov
mov
cli
sbb
cmpsb
push
xchg
data16
mov
jns
sub
push
fsubrl
push
lret
mov
or
lret
test
cmpsl
add
shlb
or
mov
push
and
fwait
or
pop
gs
bound
mov
fs
and
xchg
lret
loop
and
push
add
mov
loope
mov
iret
or
or
add
lods
and
xor
cmc
sub
add
lret
cmp
sahf
incb
xchg
dec
jne
xor
dec
es
lss
ljmp
jge
sarb
lds
out
mov
pop
inc
aad
sbb
daa
adc
cmpsb
cld
add
hlt
cmp
ss
xor
negb
cld
and
fs
frstor
lds
ds
mov
out
or
andb
mov
jb
aam
cmpsl
adc
xlat
mov
pop
iret
rcll
dec
movsl
mov
jnp
int
adc
sub
mov
dec
pusha
push
cli
lock
jo
pop
dec
mov
fimull
sub
in
mov
cmp
ljmp
or
jnp
cmpsl
xlat
xchg
cmpl
out
aam
in
shr
popf
mov
shlb
jnp
lods
xor
test
call
outsb
mov
ss
lock
cmp
loopne
loope
gs
add
push
inc
nop
fisttpll
iret
mov
adc
cmc
out
mov
repnz
jp
jl
inc
and
stc
inc
outsb
ljmp
fdivl
xchg
xchg
and
push
lcall
hlt
mov
das
cwtl
xor
test
test
add
bound
insb
add
stc
dec
bound
sub
or
cltd
add
lock
jo
sub
cmpsl
xor
faddl
pop
push
and
loope
ss
in
scas
dec
jns
andps
repnz
sbb
lods
xor
addl
rcr
cs
icebp
pop
dec
popf
jl
hlt
repz
dec
adc
add
mov
dec
pop
pop
pop
hlt
leave
js
inc
rcll
js
dec
push
push
pop
shlb
pop
sbb
sbb
subb
leave
add
mov
jecxz
and
fstpt
fildl
bound
fidivl
sub
ja
push
lods
test
andl
fildl
ret
xchg
or
jbe
cmp
ret
mov
inc
inc
test
aad
lahf
andl
push
dec
push
jbe
sub
xchg
outsb
mov
and
stos
and
cmpsb
push
or
out
outsl
cmp
or
lods
std
adc
out
add
jl
mov
mov
xchg
pushf
out
pop
inc
pop
int3
dec
test
ljmp
or
jmp
cmp
inc
cmp
adc
or
faddp
dec
scas
add
pop
xchg
mov
mov
jne
icebp
sub
popf
mov
or
ja
repnz
loop
cli
dec
push
add
cmp
outsb
jae
and
rolb
mov
mov
fistpl
adc
inc
movsl
and
jnp
or
push
inc
daa
sbb
adc
mov
mov
or
mov
mov
add
insl
push
jb
adc
lods
push
sub
cwtl
js
in
scas
call
inc
cmp
xchg
insb
xor
clc
xchg
dec
nop
sub
stos
jecxz
push
xor
push
mov
popa
mov
ret
rol
jg
js
out
cmpsl
xchg
out
xor
xor
lea
inc
sbb
add
mov
nop
or
int3
or
dec
xchg
jno
scas
add
cli
movsl
and
ja
cmpsb
pop
cmp
sub
roll
subl
sti
js
shll
in
into
roll
bound
push
cmp
xchg
jns
cwtl
xor
outsb
outsb
push
and
loopne
aas
fists
lock
movsb
stc
lds
pop
adc
pop
push
stc
in
sub
popa
cmpsb
dec
mov
fsubrl
mov
push
cmp
inc
jae
out
lods
mov
adc
xchg
ror
fcmovnu
outsl
imul
mov
mov
adcl
pop
push
sbb
dec
jno
adc
sub
xchg
movsb
dec
pusha
dec
adc
cmpsb
fwait
aam
faddp
sub
imul
mov
add
enter
and
in
add
push
add
ret
sbb
lock
loopne
nop
in
aam
dec
cmc
iret
xlat
add
dec
cmp
mov
pop
ja
and
sbb
adc
cmpsb
lods
daa
cwtl
addl
imul
or
mov
mov
add
sti
repnz
push
push
jb
xchg
sub
pop
or
add
xchg
cld
mov
hlt
push
movsl
mov
mov
sbb
pusha
mov
pop
push
cmpsl
cld
sub
fnstenv
mov
repz
mov
adc
pusha
xor
sub
sbb
xchg
jnp
or
xchg
mov
out
insl
mov
ja
gs
dec
dec
iret
xchg
or
mov
push
push
sbb
in
jecxz
lret
aas
jmp
loop
push
xchg
dec
sbb
clc
stos
in
mov
dec
imul
or
fbld
xchg
ja
jne
nop
adc
dec
icebp
add
insb
in
or
mov
daa
jl
in
xchg
sub
dec
pop
cmpsb
movsl
adc
mov
ficoml
add
insl
sarb
sub
aaa
jbe
jge
loopne
ss
cmpsl
pushf
and
mulb
sahf
nop
add
pusha
inc
lds
mov
mov
mov
mov
and
or
inc
mov
jo
xor
das
xchg
add
jb
leave
dec
or
js
pusha
push
push
xchg
and
and
or
pop
adc
pushf
stos
xchg
lcall
sub
sub
add
incb
insb
adc
inc
stos
fdivs
insb
push
sbb
push
loop
cmp
inc
cli
jae
and
fs
mov
dec
inc
pop
adc
rclb
sbb
mov
mov
dec
loop
add
inc
data16
push
stos
fwait
dec
pop
bound
ja
mov
mov
pop
sub
mov
add
jnp
fistps
test
push
inc
clc
scas
and
and
loopne
popl
cmpsb
enter
push
push
jge
fs
mov
std
add
dec
fadds
decl
lcall
lods
and
fwait
daa
add
scas
dec
les
fdivl
cmp
xchg
nop
mov
notl
push
icebp
jle
iret
ror
call
dec
push
pop
std
inc
bound
in
mov
enter
sbb
les
cmp
dec
out
inc
fstl
mov
shll
add
mov
bound
mov
mov
lret
idivb
cmpsb
xor
and
cmpsl
cs
or
fists
mov
cmp
xchg
add
dec
cmp
xor
rcll
adc
mov
inc
mov
jg
lret
stc
xchg
xchg
ja
insl
cli
fistps
mul
adc
popa
xchg
loop
cmp
das
clc
pop
pop
aam
sub
inc
push
repz
and
or
mov
xchg
out
fwait
and
and
push
ljmp
ror
addr16
push
mov
cmpsl
mov
jmp
mov
xor
dec
clc
dec
jne
and
pop
cmc
pop
jl
xor
cwtl
jmp
cmc
mov
lahf
xchg
sbb
pusha
outsl
std
xor
mov
sbb
push
icebp
adc
jns
pop
jb
mov
lods
test
pop
jb
shl
inc
mov
inc
shrl
pop
xor
and
mov
sub
dec
and
mov
sub
mov
stc
or
and
aas
jle
jno
sub
leave
xor
popa
jl
sarb
dec
mov
sbb
test
mov
lock
lods
in
fldl
xchg
jmp
jle
imul
loop
data16
clc
sub
jg
aam
rcrb
out
push
jne
call
lcall
inc
add
incb
or
xchg
push
out
loopne
les
decb
dec
js
inc
mov
dec
or
sub
sahf
in
je
sbb
jb
fdiv
dec
sahf
inc
popf
push
adc
push
and
lods
or
bound
mov
xchg
xor
out
adcb
and
xchg
arpl
aam
sub
xor
sub
mov
cli
mov
imul
stc
dec
cmp
fs
jo
jge
add
inc
insl
inc
mov
stos
aam
mov
sbb
shll
mov
popa
pop
mov
mov
je
std
in
arpl
mov
inc
ret
xorb
push
iret
ja
lcall
aas
cmpsb
xor
loopne
mov
mov
cmpsl
jno
lods
aam
loop
mov
adc
xchg
mov
fsts
mov
mov
jae
imul
jg
fucom
fdivl
movsb
push
addr16
pop
add
pop
jmp
mov
cmp
adc
mov
fistpl
out
jns
and
lds
test
push
das
daa
push
enter
push
sub
xchg
fnstcw
inc
fs
in
mov
xchg
ficoml
xchg
mov
ret
stos
lahf
lret
jmp
in
shr
mov
lock
mov
out
incl
and
sbb
in
cmovg
mov
ljmp
add
std
mov
fimuls
cmp
hlt
push
jp
xchg
int
ficoml
dec
jl
pop
jecxz
mov
fildll
lcall
cmp
testb
into
es
fwait
repnz
ds
cmp
add
mov
int3
scas
das
test
fwait
push
shlb
sbb
int3
mov
xor
inc
das
xchg
imul
push
mov
mov
aad
or
int3
mov
add
out
xchg
push
in
sub
ret
mov
sbb
xor
mov
int3
loop
and
mov
inc
scas
popa
cltd
std
lds
add
jle
adc
or
jnp
add
pop
shl
es
jp
xlat
mov
and
pop
push
push
fwait
adc
and
testl
int3
add
nop
je
or
jbe
dec
inc
std
daa
pop
lcall
cmp
fisubl
jl
jno
cmp
pop
jb
mov
and
cmp
mov
pop
rep
lea
fwait
out
ret
inc
xchg
add
adcb
push
test
cmp
jle
lods
cmp
dec
jae
loope
dec
mov
push
inc
and
mov
test
xlat
and
pop
lcall
add
sub
scas
das
call
stc
es
bnd
dec
stos
adc
cld
addl
adc
divb
push
dec
pop
cmp
push
jae
lcall
es
mov
nop
nop
pop
jp
sbb
into
dec
pop
cmpsl
xchg
in
jge
scas
pop
es
outsl
adc
jbe
into
mov
add
pop
adc
dec
roll
jle
daa
mov
test
in
daa
mov
in
ja
push
xchg
repnz
addr16
test
fst
add
adc
pushf
test
and
and
in
sub
imul
push
jb
fucomp
daa
daa
imul
sbb
pop
loopne
xchg
inc
imul
mov
popa
dec
rcll
sub
push
into
mov
rcrl
jp
cli
stc
mov
xchg
and
push
push
inc
mov
push
xchg
movsl
dec
inc
dec
lock
fstpl
iret
add
movsb
pop
test
mov
mov
or
mov
and
test
mov
add
pop
pushf
cwtl
xlat
sbb
loop
enter
es
popa
test
push
jmp
iret
xchg
fldcw
mov
inc
nop
jg
call
sub
jp
hlt
fsubl
stc
pop
test
adc
pop
mov
cwtl
lods
into
repnz
sub
mov
lock
in
jns
pop
lcall
sub
jbe
cmp
repz
addr16
xchg
repnz
or
add
pop
xchg
insb
jg
scas
cmpsl
jo
xchg
jecxz
call
inc
adc
cs
cmp
mov
lret
mov
pop
push
jbe
inc
rol
test
mov
dec
pop
and
and
adc
cmp
ret
jecxz
xchg
fldl
add
test
shll
insl
mov
ret
push
add
fwait
and
sub
mov
pop
mov
mov
xchg
ds
ljmp
ret
and
xor
repnz
mov
mov
push
push
aas
mov
test
mov
push
add
cmp
jbe
stos
pop
cli
je
push
inc
int
dec
lods
out
cmp
lds
in
jb
cmp
iret
jns
mov
mov
jae
imul
push
sbbb
pop
es
and
loope
or
fdiv
inc
pop
push
mov
adc
adc
jb
ljmp
jne
jecxz
nop
popa
sti
mov
ds
andl
aam
jg
push
mov
movsb
and
stos
scas
insb
mov
es
push
sub
cmp
add
sub
inc
jle
mov
sbb
sub
out
pusha
lret
test
faddl
mov
cs
sbb
pop
dec
xor
adcl
push
mov
cmpsl
xchg
push
into
xchg
lahf
sbb
insb
mov
addb
andb
mov
sbb
push
jg
cwtl
push
outsl
fdivp
adc
pusha
sbb
pusha
adc
cli
xor
cmp
mov
sbb
pop
pop
push
adc
pop
out
push
cwtl
push
ja
in
scas
loop
arpl
sub
xchg
dec
mov
int3
out
fucom
jl
push
mov
cmpsb
mov
lahf
or
ficomps
lock
push
loopne
pop
pop
xor
jl
push
pop
xor
daa
and
push
je
lret
mov
sbb
or
jp
jo
pop
lret
lods
or
cmp
dec
sub
out
jb
sbb
in
jb
test
and
mov
pop
aaa
inc
insl
sbb
mov
push
sub
les
and
xchg
jno
inc
mov
mov
leave
imul
xlat
icebp
cwtl
cmp
lds
xor
add
lock
push
jb
jge
mov
aam
push
or
daa
and
imul
bound
out
jno
imul
mov
bound
cmp
mov
das
cs
and
fsubs
mov
cmc
stos
movsb
mov
inc
adc
pop
pop
sub
mov
xor
sub
sbb
scas
cltd
outsb
push
adc
enter
xchg
mul
ss
ljmp
pop
add
loop
push
cmp
push
hlt
mov
mov
mov
fcompl
jne
out
fwait
mov
pop
int
sbb
fdivrl
mov
adc
sub
cwtl
cltd
push
test
push
out
ret
mov
aam
mov
cmp
sti
loopne
out
push
cmp
jbe
xor
xchg
sbb
popf
mov
inc
cmp
jle
mov
popa
jb
and
and
pop
nop
pop
lcall
and
xor
sbb
jle
fiaddl
lea
push
insb
jecxz
popf
adc
jo
lret
push
incb
or
stos
lret
xor
ret
orb
orl
push
mov
daa
iret
pop
das
lcall
mov
dec
test
jp
fwait
das
shlb
adc
cli
inc
sub
out
loopne
fdivrl
pop
or
fs
fisttpll
fucomip
or
lods
xchg
push
aas
mov
mov
mov
dec
int3
add
pop
test
ljmp
mov
push
inc
xchg
jl
mov
cmp
pop
and
mov
orl
xor
loope
xchg
call
lahf
in
xor
jecxz
pop
push
add
mov
xor
push
shr
mov
ja
fsubs
sbb
das
adc
jle
mov
xor
out
pushl
std
rorb
pop
loop
dec
jmp
xchg
jle
xchg
inc
pop
addb
adc
push
sbb
dec
jmp
subb
adcl
hlt
mov
cmp
xchg
mov
subb
fiaddl
pop
lret
jbe
insb
std
sbb
aam
sbb
sbb
lcall
sbb
out
rclb
push
rclb
xchg
iret
cwtl
in
fcompl
add
pop
popa
cmp
aam
pop
cmp
jge
mov
notl
cli
enter
push
inc
enter
popa
sub
add
xchg
cld
dec
jae
nop
mov
pop
dec
sbb
dec
xlat
ds
ds
mov
pop
xchg
or
inc
adc
test
adc
notb
test
sbb
hlt
lds
test
sbb
sbb
je
fisttpl
xlat
clc
jmp
jno
cmp
xor
jb
mov
xchg
dec
cmc
mov
xor
bound
stos
mov
push
jb
xor
cs
add
push
popa
sub
push
lret
jbe
in
and
cmpsl
in
dec
out
jnp
bound
sbb
push
sbb
jbe
or
test
out
fsubs
daa
lcall
ds
leave
addr16
pop
pop
xlat
pop
outsl
cmpsl
dec
push
and
test
loope
stos
mov
add
fcmovb
dec
dec
enter
fnsave
faddp
xor
adc
adc
pushf
xor
es
mov
pop
push
hlt
push
jbe
sbb
js
and
rcrl
adc
mov
xor
xor
inc
arpl
leave
xchg
jno
pop
xlat
cld
jp
dec
and
fcmovb
push
jmp
shlb
fwait
xchg
push
das
pop
add
adc
stos
sbb
mov
and
into
in
insl
sub
movsl
sbb
inc
push
and
xor
xlat
stos
dec
xchg
lret
lcall
int3
call
jnp
adc
aas
outsb
sbb
xor
add
int
inc
mov
jne
and
cmp
jne
hlt
in
pop
jo
add
pop
lcall
xchg
negl
int
jb
jl
cmp
adc
ror
addr16
dec
jns
push
xchg
call
dec
sbb
inc
mov
mov
dec
push
jl
fmuls
jbe
inc
mov
adc
movsb
lret
int
ret
pop
into
mov
ds
or
cmp
add
or
sti
ret
out
pop
jmp
mov
pop
xor
xor
inc
cmpsl
cld
pop
pusha
int
xchg
xchg
pop
arpl
cs
mov
in
pop
flds
shl
dec
leave
test
mov
cmp
add
or
cmpsl
push
out
das
ja
sbbb
and
hlt
sti
or
pop
enter
popl
push
adc
pop
out
popf
popa
xchg
push
push
fldt
stos
jl
in
push
aaa
xchg
ljmp
jne
shr
dec
int3
inc
push
jnp
inc
ljmp
mov
mov
inc
fstpt
inc
push
cwtl
insb
cmp
adc
loopne
sbb
or
cmp
push
xor
enter
cld
jg
ja
fldl
and
mov
gs
adc
cmp
shl
jecxz
cmp
lds
int
loope
aas
pop
sahf
jmp
sub
or
or
jnp
test
andl
std
in
sbb
insb
sbb
add
jno
lods
mov
mov
adc
dec
sbb
xchg
jp
dec
movsl
arpl
push
adc
fsubrl
add
mov
xchg
lahf
insl
bound
xchg
jg
ficomps
push
push
push
dec
fisubrs
inc
test
pop
mov
aad
jne
pop
inc
fcmovu
ret
push
imul
or
cmpsl
gs
incl
inc
cmp
push
lret
lock
lcall
jno
xor
sbb
jae
sub
mov
ja
sahf
add
hlt
iret
pop
add
std
add
dec
ds
xor
ss
pop
xchg
rcr
iret
adc
pop
rcrl
inc
ljmp
push
jge
divl
nop
je
jge
push
sub
or
rclb
and
cmp
out
std
jmp
mov
addr16
xchg
test
jp
add
push
add
cmpsl
jle
sub
ret
mov
out
inc
frstor
stos
test
fnstenv
rclb
inc
enter
or
test
push
or
jno
inc
cmp
mov
jl
mov
dec
adc
xor
ret
jecxz
sub
arpl
jae
lcall
pop
hlt
icebp
jnp
mov
ja
jl
in
pop
inc
clc
cmc
jg
cmpsb
mov
pop
or
fstl
jmp
bound
xlat
jno
push
or
repz
jns
fldt
aaa
insl
faddl
dec
dec
in
pushf
add
lret
in
cli
lcall
cwtl
shlb
jecxz
xchg
or
mov
into
dec
xchg
mov
xorb
out
imul
int
int
jno
add
sbb
and
pusha
inc
jp
push
dec
rcll
cmpsl
pusha
mov
adc
adc
or
fists
mov
ficomps
mov
inc
push
mov
insl
jbe
pop
int3
mov
add
nop
pop
out
cmp
imul
fwait
mov
popa
mov
xchg
out
pop
inc
xor
or
in
cmp
mov
sbb
ffree
jne
lods
mov
cmp
iret
and
cmp
roll
ljmp
and
sbb
add
out
xor
lods
push
ja
mov
mov
xchg
mov
mov
dec
not
pop
or
sub
fldenv
sub
push
ds
iret
xor
pop
push
mov
ret
and
add
ljmp
push
mov
loope
or
add
jns
daa
adc
call
adc
ss
lea
ljmp
add
inc
stos
lods
mov
sbb
icebp
scas
pushf
or
adc
arpl
cmpsb
shrl
out
cmpsb
or
mov
cld
leave
xor
into
inc
addr16
sub
mov
test
pop
std
jnp
and
lock
sub
insb
sbb
lea
jl
test
cmp
dec
and
adc
jbe
add
lcall
mov
loop
dec
rcll
stos
push
push
mov
push
xchg
mov
xlat
cwtl
sbb
dec
mov
mov
sbb
mov
decl
xchg
dec
cmp
mov
jg
mov
or
out
add
rolb
setge
cmp
loope
jmp
push
pushf
cwtl
adc
mov
sarl
jmp
adc
jle
test
mov
loopne
xchg
ss
sub
mov
aaa
push
iret
or
xchg
add
popf
outsb
inc
subl
cmc
mov
mov
movsb
out
xor
push
dec
xor
xchg
adc
dec
mov
cmp
sbb
jns
addb
fstpl
add
cmp
pushf
and
push
or
das
and
jmp
enter
mov
fdivs
andb
cmp
sbb
xor
mov
dec
cs
popa
mov
shl
push
dec
aas
test
dec
shll
shll
shlb
bound
mov
inc
cmpsl
push
sbb
sbb
sbb
cmpsl
mov
jge
ja
push
rorb
popf
fistpl
mov
jmp
mov
inc
pop
xchg
jmp
cmp
sbb
loop
jle
push
fwait
mov
fisubrs
mov
lock
cmp
adc
in
repz
dec
shrb
push
mov
sub
jne
mov
push
es
push
or
mov
hlt
mov
lds
imul
adc
push
out
out
nop
fsubrs
push
jecxz
dec
out
dec
jno
data16
mov
jmp
push
pop
add
adc
xchg
dec
and
ficoms
sbb
dec
andb
sub
insl
popf
icebp
adc
sti
and
call
jno
jo
jg
mov
pop
cmp
dec
mov
jecxz
cmp
out
mov
roll
movb
sbb
out
sbb
clc
ljmp
into
imul
inc
aaa
test
imul
jge
sub
jmp
shr
and
adc
rcl
outsl
clc
dec
ljmp
push
addr16
sbb
adc
fst
sub
stos
idivb
fisubrs
pushf
shrl
sub
xor
adc
cmpsb
out
ljmp
inc
fiadds
outsl
test
cmp
scas
fistps
mov
movsl
pop
in
adc
mov
xchg
fildll
adc
add
cmp
push
insb
and
in
lds
xchg
movsl
icebp
pusha
jbe
mov
inc
push
mov
mov
cld
rcl
xor
leave
bound
xorb
ret
xchg
dec
icebp
lods
pop
sbb
add
inc
sbb
sbb
sub
in
lahf
sub
ss
mov
repnz
jle
movsb
inc
pop
xor
or
mov
orl
sbbb
or
cwtl
je
enter
add
ja
testb
cli
xor
mov
aam
mov
cmp
pop
xchg
pop
aaa
popa
outsl
inc
sahf
mov
insl
bound
adc
sbb
xor
dec
jg
pop
insl
cltd
pop
xor
dec
lret
loop
inc
out
jl
xchg
aad
fsubp
cwtl
mov
push
pop
mov
mov
adc
cs
jne
and
sahf
daa
jne
pop
mov
roll
xor
std
and
xor
fucomi
push
jge
gs
adc
lock
aaa
or
test
mov
rolb
in
add
push
in
popa
cld
adc
sahf
test
adc
fcomip
sub
mov
into
mov
sbb
add
jno
cmpl
bound
cmc
adc
push
sarl
movsb
pop
int3
mov
incb
jb
dec
fucomip
dec
fistl
xchg
sbb
mov
or
lret
dec
popa
lcall
icebp
arpl
out
daa
pop
aam
adc
push
das
and
xchg
lea
sub
or
aaa
sbb
push
inc
cmp
or
sbb
cs
push
xchg
imul
mov
adc
sti
inc
ja
jmp
scas
popf
jne
rcl
mov
push
dec
sarb
adc
pushf
loopne
lods
or
inc
int3
add
or
hlt
jmp
fnstcw
mov
jmp
push
cwtl
xor
adc
inc
mov
jae
pop
fsub
out
cltd
fildll
add
ror
jne
push
fimuls
inc
inc
ljmp
jge
insb
adc
or
clc
jge
mov
lods
loop
pop
loope
mov
jge
pushf
movsb
dec
sbb
addr16
pop
xor
or
sbb
daa
cmp
repz
add
xorb
das
xor
cmp
stc
scas
jbe
mov
cmpsb
adc
ret
cmpsl
pop
pop
aas
inc
into
push
xchg
subl
push
mov
sbb
stc
ja
cmpsb
fiaddl
ss
cmc
fmull
xchg
dec
in
pop
push
in
loopne
xorl
stos
adc
jae
inc
pushf
stc
jl
fistl
sbb
mov
jle
push
fcmove
pop
fs
sub
dec
xchg
sbb
add
dec
imul
push
int3
cltd
mov
daa
dec
pop
push
scas
aas
cmpsb
push
inc
xchg
int
inc
out
mov
jle
xor
mov
outsb
push
loop
lea
lods
or
fucomip
lods
xor
ljmp
ret
scas
cmp
fcompl
mov
pop
xor
mov
sub
rclb
inc
movsl
add
stos
das
lret
sub
fcoml
imul
lcall
xlat
inc
push
add
sub
lcall
popa
pop
dec
dec
out
lcall
mov
aad
fldenv
lods
roll
xchg
punpckhbw
sarl
push
das
pop
xor
lret
sbb
pop
ss
jle
add
push
mov
inc
popa
aam
push
inc
nop
push
inc
outsb
lahf
test
adc
and
mov
into
cmp
loop
clc
daa
push
sbb
mov
pusha
fwait
jb
ret
flds
adc
fwait
out
and
shrl
aas
xchg
leave
push
test
sbb
out
xchg
jb
cmp
add
inc
jae
data16
or
dec
mov
cld
aas
adc
aad
fs
jmp
xchg
cld
xlat
cmc
frstor
xor
sbb
push
scas
mov
pushf
xor
or
mov
adc
mov
add
add
xor
sbb
mov
xchg
mov
ret
fidivs
cltd
call
jae
rep
pop
mov
pop
ja
test
fidivrs
sarl
test
mov
pop
inc
repz
xchg
cltd
insb
rcr
sbb
mov
sub
call
je
sbbl
stc
iret
scas
ss
aaa
mov
and
inc
in
in
rcll
add
xchg
sub
shl
push
popf
out
or
shld
js
arpl
cltd
jbe
test
push
sub
and
push
and
push
xor
jo
jmp
sub
xchg
lcall
iret
mov
enter
or
fistps
and
in
pop
pop
jg
lea
inc
cld
int
pop
call
js
inc
outsl
push
cmp
out
push
add
jp
sbb
fxch
stos
cli
stc
popa
mov
mov
pop
ficomps
pop
xchg
cld
popl
pop
adc
bound
xlat
cld
notl
mov
jle
and
das
je
xor
test
ficoms
lods
mov
add
loope
pop
imulb
in
nop
mov
std
fnstcw
int
std
inc
stos
dec
flds
dec
rcll
dec
pop
lea
sub
lea
nop
jbe
nop
xchg
jmp
jg
les
hlt
outsb
cs
push
roll
add
or
cmp
negl
dec
push
call
xor
int3
mov
jle
pop
mov
lock
hlt
cld
add
sbb
mov
ret
clc
inc
sbb
mov
and
mov
push
outsl
add
push
insb
in
jecxz
mov
push
int3
add
movsb
sbb
addr16
icebp
mov
mov
movsb
push
dec
stos
adc
filds
and
insb
fcomps
idivb
and
xchg
aam
orl
les
scas
add
push
mov
daa
adc
lahf
sub
jg
test
push
clc
jp
xchg
mov
xchg
push
add
inc
clc
jg
or
mov
icebp
mulb
push
add
repnz
jge
stos
lret
popf
dec
outsb
stc
je
and
mov
push
adc
add
dec
mov
pop
fists
inc
out
stos
mov
bound
shrb
inc
cld
and
and
int3
xchg
enter
adc
adc
sub
fs
in
mov
jnp
ljmp
jne
aas
pop
orl
mov
inc
cltd
insl
xchg
outsb
jnp
lea
push
sbb
mov
shll
hlt
jns
cmp
mov
pop
jb
sbb
scas
mov
sbb
xchg
xor
das
adc
push
into
pop
mov
xchg
jmp
das
inc
inc
mov
and
sub
aas
push
shll
jl
pop
in
and
call
push
dec
jmp
xchg
loopne
int3
in
mov
stc
inc
int
sub
add
mov
inc
rcrl
inc
ds
sbb
outsl
and
jg
loope
mov
and
mov
pusha
xchg
mov
and
pop
addr16
mull
test
adc
push
xor
mov
cmpsb
in
mov
mov
or
ret
fisubrl
shrl
ljmp
test
xor
test
mov
jb
mov
cmp
popa
ss
dec
mov
xor
mov
mov
fimull
int3
dec
rclb
cmp
xchg
fwait
xchg
xchg
in
mov
repz
ljmp
leave
dec
ja
hlt
jecxz
rcll
add
jns
lods
shr
aad
pop
jmp
push
jmp
fisttpl
icebp
and
push
sub
test
je
sbb
cmc
mov
push
jp
ja
ljmp
sbb
ret
jp
push
fldcw
cld
mov
int
push
rolb
pop
or
jl
push
xor
arpl
pushf
es
stc
jno
xchg
and
xor
test
jmp
bound
push
flds
dec
test
jae
fdivs
push
mov
stos
popa
movsb
lods
cli
shlb
rcrl
and
xchg
movsb
incb
in
pop
mov
sub
out
les
lods
lods
lret
stos
movsl
lahf
lcall
pushf
fnsetpm(287
movl
adc
adc
mov
es
shrl
loopne
inc
outsb
mov
and
cmp
test
cld
or
adc
aad
mov
and
imul
insb
mov
popf
pushf
jmp
lcall
loop
push
pop
test
arpl
mov
xor
dec
in
push
sysenter
mov
scas
into
fstpt
adc
jg
and
adc
dec
push
push
jecxz
in
mov
outsl
aaa
sbb
std
push
cmp
xor
cmpsl
sub
xor
ljmp
into
mov
sub
leave
in
cmp
mov
jp
jle
outsl
add
popa
hlt
fldl
dec
sub
push
sub
mov
lretw
add
call
jne
cmp
mov
ss
into
sub
repnz
mov
push
sahf
iret
repnz
push
xchg
and
xor
dec
mov
push
test
pop
pop
push
jmp
sti
and
in
adc
ljmp
mov
pusha
lock
imul
add
push
jge
xlat
sub
adc
lret
scas
in
lret
xor
pushf
sbb
les
movsl
pop
add
push
jmp
and
mov
dec
xor
test
push
cwtl
std
mov
sti
cmpsl
test
cld
xchg
push
cmc
fs
add
cmp
inc
shl
pop
pushf
pop
mov
lahf
or
xor
negb
push
outsb
adc
aas
icebp
push
jl
dec
fnstenv
sti
mov
xor
in
sub
mov
push
movsl
mov
add
mov
push
push
repnz
mov
in
test
imul
lcall
imull
jne
add
lods
sub
inc
shll
icebp
mov
jb
mov
outsb
mov
pop
or
push
jns
fstps
xlat
lds
fisubrl
repnz
add
aad
ret
jnp,pn
sbb
mov
ds
sbb
stos
fcmovbe
xor
add
stos
mov
dec
cltd
xor
xchg
jmp
mov
stc
sub
std
pushf
nop
fs
mov
or
mov
cmpsl
addl
mov
jp
fcompl
pop
push
idivb
out
movsl
mov
cmp
add
inc
adc
sti
cltd
pop
es
movsb
xor
dec
inc
and
std
mov
int3
sahf
mov
mov
cmc
add
sbb
lock
jle
ficoml
xor
inc
adc
jl
push
imul
mov
xchg
imul
jle
push
pop
pop
insl
in
test
out
mov
ret
pusha
pop
mov
mov
hlt
or
jge
xor
push
add
mov
dec
pop
mov
clc
test
and
push
xor
gs
cmp
sahf
jns
mov
jae
adc
sub
testl
in
fcompl
fwait
inc
mov
cmpsl
cmp
adc
dec
push
ret
dec
ret
lcall
jb
pusha
daa
jmp
and
push
loop
xlat
popa
mov
arpl
rolb
lea
cli
in
leave
cmc
lds
std
pop
shl
dec
jg
cmp
cwtl
push
out
in
mov
mov
adc
pop
dec
imull
clc
fs
ss
nop
adc
add
cmp
mov
sub
or
icebp
fbld
push
pushf
mov
rclb
jmp
and
push
pop
mov
xor
int
add
pop
dec
lahf
push
aas
gs
fmul
push
dec
pop
xchg
ficoms
mov
xchg
les
mov
and
icebp
xchg
inc
sarb
xor
fimull
js
push
stos
mov
cmpsb
add
sbb
push
insl
das
xchg
mov
mov
xchg
or
js
daa
mov
add
ja
in
add
push
xchg
or
testb
dec
push
jl
outsb
cwtl
adc
movb
mov
sub
push
data16
push
inc
mov
and
pop
push
and
push
repz
mov
lea
pop
cmp
pop
aad
add
repnz
jns
or
in
fistpl
fsincos
js
mov
mov
xor
out
clc
xchg
mov
jne
leave
inc
mov
cs
js
add
sub
jo
ficoml
dec
sbb
mov
aaa
fisubs
test
jmp
jae
out
scas
dec
rdtsc
lcall
movsb
ss
add
scas
inc
mov
lds
cmp
shr
pop
sbb
leave
stos
mov
mov
and
fldt
lret
data16
sbb
test
and
or
jne
xor
cmp
scas
mov
frstor
inc
or
or
or
and
aam
jns
sbb
lret
fcmovu
xlat
inc
pusha
mov
fisubl
call
xor
pop
rorl
xor
les
adc
mov
mov
pop
push
dec
in
pop
lods
xchg
pop
lcall
mov
mov
pop
shlb
mov
leave
mov
cmp
cld
xchg
rcrb
out
test
cltd
sti
adc
negl
cmp
xchg
sub
leave
test
dec
jecxz
dec
sub
inc
loopne
push
js
dec
call
fs
jae
jae
xor
sub
mov
and
loop
mov
ret
in
fwait
mov
mov
test
xor
lods
add
xchg
or
movsb
aad
push
dec
and
cmp
dec
push
shll
sti
aaa
lods
inc
xor
mov
mull
cli
stos
popa
inc
lcall
bound
push
or
inc
cmp
jg
decl
add
and
rclb
pop
cmp
ljmp
lret
sar
lahf
and
and
jmp
inc
ja
inc
jge
push
enter
js
push
adc
adc
stos
dec
cmpsl
xor
xchg
xor
pop
and
stos
sbb
lret
inc
sub
push
dec
push
lods
lret
lods
movl
sbb
aad
pushf
in
mov
sbb
enter
aas
fmull
lods
aad
xlat
adc
in
mov
flds
loope
sarl
inc
pop
adc
or
je
movsb
lods
push
stc
nop
push
cs
adc
sub
push
add
mov
adc
movsl
repz
repnz
out
push
shrb
stos
xchg
and
cmpl
ljmp
imul
pop
push
sub
popa
test
in
lret
sbb
pop
sbb
and
lea
icebp
ret
add
fwait
and
daa
mov
dec
push
lret
sbb
or
xor
inc
pop
mov
or
fildll
testl
stos
inc
sti
loop
xor
dec
ficompl
sub
adc
test
std
pop
or
sub
sub
and
jl
iret
xchg
jns
or
push
pop
orl
fcmovu
ja
out
dec
cmp
cld
je
cmp
push
les
mov
jnp
rclb
mov
push
mov
sub
dec
jl
popf
das
pop
stos
jle
mov
mov
adc
cmp
es
sub
test
cltd
jnp
cmpsl
cmpsb
mov
xorl
pop
mov
pop
and
out
test
cmp
mov
aad
jns
iret
mov
pop
dec
mov
enter
xor
inc
filds
and
xor
out
fistpll
call
ret
jecxz
inc
ret
les
dec
les
mov
sarb
xor
jns
or
es
bound
icebp
and
lahf
add
mov
sub
lods
dec
aam
jb
mov
cli
adc
ret
push
jns
adc
fs
and
mov
js
jl
bound
int
cmc
pop
out
jno
stos
pop
push
es
shrb
pop
out
sbb
xor
stc
add
or
lds
test
loope
xlat
les
cld
je
mov
movsl
xor
in
mov
jnp
xchg
push
mov
inc
xchg
inc
add
pop
hlt
icebp
daa
pop
jo
inc
mov
cld
fisubrs
jg
mov
lock
adc
mov
into
mov
cmp
fsubrp
cmpsb
rolb
xlat
jne
aad
out
movsb
rcrl
rcrl
adcb
push
pushf
cmp
jnp
out
cmpsb
nop
dec
cmp
imull
mov
jbe
loopne
rcll
sbb
adc
mov
add
ffreep
push
xchg
scas
repz
sbb
mov
aam
movsl
fiaddl
lods
pusha
test
pop
std
cmp
mov
add
lods
adc
idivl
xchg
xchg
daa
jo
sarl
fistl
aas
adc
add
dec
ljmp
mov
pop
dec
dec
or
je
arpl
inc
out
imul
scas
std
insl
adc
daa
js
mov
shrl
add
shll
inc
scas
xlat
cmpsl
dec
add
pop
sbb
fwait
sub
arpl
pop
enter
fsubs
dec
insb
mov
cltd
adc
sub
insb
pop
jp
loopne
std
xchg
lahf
xor
sub
aas
mov
jle
cmp
ljmp
pusha
pop
pop
xchg
inc
and
imul
inc
scas
xor
xchg
in
jmp
mov
xchg
negl
mov
adc
jecxz
cmp
ljmp
test
push
scas
adc
sub
ss
xor
jp
lret
jp
xlat
pop
shll
and
in
enter
cltd
cli
scas
lret
rol
lret
in
jmp
sbb
aam
or
cmp
fisubrs
fmuls
add
dec
sti
or
xor
dec
jnp
xlat
cmc
xor
icebp
mov
iret
xchg
pop
sbb
stc
movsb
inc
inc
push
xor
and
in
jmp
mov
push
je
ret
pop
stos
pop
inc
xchg
adc
xchg
repnz
push
ret
mov
gs
loopne
and
out
and
imul
adc
jb
cltd
xor
mov
and
inc
mov
jge
adc
les
inc
xchg
jge
in
cmp
mov
sbb
fildll
data16
dec
cmp
subb
jmp
jbe
push
sbb
dec
sub
xchg
movsb
dec
mov
popa
jl
aam
or
std
fwait
repz
add
mov
aaa
lcall
aaa
cmp
push
subl
cmp
or
and
cs
pop
decl
mov
clc
inc
push
les
lahf
daa
les
xchg
adc
repz
sub
stos
mov
push
lds
push
pusha
xor
leave
sub
or
pop
push
enter
or
les
lods
rcr
lds
inc
cmpsb
mov
cmpsb
push
and
mov
push
sahf
and
ja
add
inc
scas
pop
jg
cli
outsl
push
mov
cmp
fs
std
les
ja
or
fs
sbb
pop
sbb
inc
movsb
mov
dec
cs
sub
sub
jae
cmp
mov
mov
lods
jp
dec
xchg
fildll
aaa
lods
outsb
in
dec
pop
popa
push
mov
mov
pop
or
inc
sti
fs
mov
xchg
push
rcrb
cmpsl
dec
mov
std
insb
sub
sbb
sub
lods
dec
and
inc
jle
fcoml
test
dec
int3
mov
out
mov
cmpsl
inc
sbb
jbe
cmp
leave
push
std
stos
sbb
cs
and
loop
imul
push
xor
imul
cmp
xchg
cmp
int3
mov
mov
pushf
stc
dec
add
in
inc
sarb
push
popf
xlat
adc
jg
push
pop
rcrb
dec
je
dec
add
out
jp
xchg
inc
movsb
dec
push
sbb
add
sub
xchg
js
dec
fwait
mov
jne
lock
notb
jmp
pop
out
jg
je
adc
or
dec
popf
sub
dec
cmp
js
stc
inc
jnp
jmp
xor
pusha
push
xor
sub
push
mov
iret
iret
gs
repz
push
push
jmp
fisubrl
lret
mov
mov
daa
adc
fdivl
push
pop
dec
cli
pop
sub
lock
jae
out
inc
test
push
loope
aaa
not
stos
mov
clc
mov
inc
je
pusha
aad
incb
mov
pop
mov
dec
add
pop
mov
lret
mov
mov
mov
add
repz
and
clts
xchg
cli
push
xor
adc
dec
mov
sbb
sahf
jmp
fsubs
fs
out
mov
sbb
add
lahf
jo
int3
xchg
inc
cmpsb
popf
jmp
fisttpl
cmp
addl
and
int
inc
rcrl
andb
aad
inc
inc
hlt
sbb
stc
adcb
cmp
push
push
sti
jo
outsb
imul
mov
mov
roll
out
divb
movsb
stos
adc
dec
aad
test
mov
pop
lods
and
pop
mov
push
incb
pop
pcmpeqd
xor
ljmp
cmp
adc
pop
dec
or
data16
hlt
push
repnz
jecxz
fisubrl
sbb
sbb
pop
or
mov
inc
sbb
std
jae
and
test
xor
imul
stos
out
lods
pop
mov
repnz
and
into
jg
pop
in
and
sbb
imul
fcom
mov
dec
push
loopne
xchg
adc
jns
scas
insl
mov
lods
hlt
fld
movsl
dec
sub
ret
aad
imul
fistpl
aam
cwtl
aaa
out
jne
jp
xchg
out
out
fadd
rorl
xor
lea
cmc
roll
hlt
pop
jmp
into
pop
push
fadds
inc
push
push
out
push
lds
cmpsb
popf
mov
jno
pop
adc
in
lret
imul
mov
inc
aas
inc
cltd
add
pop
std
push
scas
lock
int
mov
adc
pop
movsl
fld
ss
rolb
mul
imul
push
out
fnstsw
jp
and
or
or
cli
cmpsl
aam
mov
jg
cmc
mov
mov
mov
test
popf
and
sub
xchg
inc
mov
ljmp
push
rorb
mov
call
push
insl
cmc
movl
mov
jo
xchg
mov
rcrl
mov
je
xchg
cmp
ret
sub
mov
stc
push
mov
adc
or
es
clc
andl
pushl
movsb
loop
ret
sahf
add
xchg
pop
xchg
pop
sub
outsl
lock
lret
push
aaa
xchg
ret
cs
mov
nop
jns
push
push
or
add
hlt
push
sub
inc
sahf
jo
dec
mov
mov
sbb
stos
inc
sahf
inc
mov
sbb
push
fstl
adc
sti
ficoml
push
hlt
inc
cmp
mov
adc
push
mov
repnz
inc
in
adc
out
mov
clc
adc
in
inc
push
xor
or
inc
cmp
jnp
pop
stos
dec
push
cmp
and
movsb
jge
cmp
mov
push
lods
sti
call
jnp
jb
or
mov
into
mov
cmpsl
rolb
inc
ss
rorb
sbb
sarl
xchg
pop
sub
movsb
jle
or
mov
jae
divb
fnsave
push
inc
fxch
cmp
sbb
xchg
aam
mov
xchg
vpminub
sub
mov
cltd
add
imul
hlt
xor
push
pop
sub
mov
jb
sbb
insb
sti
dec
push
mov
inc
ficomps
js
inc
push
add
adc
popf
bound
inc
jecxz
dec
pop
xchg
jecxz
jb
fstpl
mov
mov
nop
es
cli
push
mov
mov
push
dec
dec
add
adc
and
cmpsl
movhlps
leave
cmpsl
ret
enter
push
test
mov
sub
mov
sub
fsts
aad
lds
clc
jno
mov
and
inc
mov
jbe
xor
ss
lds
push
mov
or
pop
into
mov
pop
mov
stos
push
xchg
jno
lret
rclb
fnstcw
adc
insl
pop
push
test
loopne
mov
insb
pop
lahf
in
push
out
sbb
jl
xor
jle
rcrl
push
outsl
aad
sahf
les
jp
jle
sub
mov
int
mov
lcall
test
cmp
sti
sub
repnz
imul
dec
pop
ret
or
jmp
cmpsl
cmpb
mov
arpl
xor
sti
data16
inc
mov
and
imul
int3
dec
cltd
cmc
in
in
mov
xor
and
addr16
push
dec
sbb
xor
dec
mov
ret
sub
rcll
fnstcw
mov
clc
lret
xchg
pop
sbb
pop
loope
pop
sbb
into
lds
sub
inc
jne
stos
add
cmpsl
das
or
xor
test
lock
mov
mov
push
shlb
adc
cli
jns
clc
dec
aas
mov
out
mov
and
xchg
xor
push
sub
es
and
mov
sarl
aas
stos
popa
cmpsb
lret
lock
xor
pop
das
int3
push
daa
pop
or
dec
pop
pop
stos
adc
push
add
ret
mov
jns
sbb
test
rolb
mov
and
push
repz
add
ret
mov
and
adc
int
jle
mov
pop
cmp
lret
cwtl
shrb
fiaddl
addr16
dec
dec
out
clc
jne
stc
ret
mov
js
leave
push
mov
sbb
lret
sub
es
lret
inc
add
adc
shl
sub
ds
mov
lcall
sub
gs
jbe
nop
pop
in
int
mov
pop
fwait
dec
je
pop
popa
bnd
cmp
mov
push
xor
mov
cmpsb
ds
rcrb
test
pusha
adc
lods
xchg
sbb
push
cmc
cmpsb
sub
pop
xor
popa
inc
mov
pushf
ret
or
jge
adc
subl
jns
daa
test
jp
xor
outsl
imul
orb
mov
inc
fisubs
call
mov
out
lods
stc
sbb
es
sar
jle
xchg
ss
lods
leave
bnd
dec
scas
je
add
cmp
arpl
sub
cmp
dec
int3
lahf
cmp
sub
pop
sub
in
ret
adc
adc
sub
jl
mov
test
dec
or
and
xor
mov
roll
dec
dec
orl
and
and
mov
sub
cmp
loop
jge
leave
sub
aas
jl
rorl
push
mov
add
int
rclb
scas
push
testl
push
pop
push
popa
mov
lods
mov
pop
roll
inc
adc
jno
jb
sarl
xor
clc
cld
dec
adc
or
and
repnz
pop
lock
xor
mov
mov
push
xchg
mov
mov
les
xor
js
das
test
push
stos
or
add
ds
icebp
test
test
mov
xchg
inc
add
xor
out
stc
loopne
sub
adc
pop
adc
call
sub
imul
cwtl
xlat
cltd
in
fnstsw
lahf
nop
movsb
sbb
sbb
pop
push
cmpsb
test
add
pop
ljmp
adc
ret
mov
clc
xor
jg
xor
das
pop
in
cmp
jecxz
aaa
in
clc
leave
mov
sub
xchg
scas
lahf
push
xchg
push
fisttpl
jg
lods
lahf
loop
mov
mov
cmc
lods
jp
pop
cmp
pop
out
xchg
mov
pop
fwait
pop
cmp
mov
dec
loopne
add
in
inc
sub
sub
outsb
popf
mov
inc
leave
mov
in
adc
pop
and
lods
pop
mov
and
dec
sbb
cli
imul
dec
adc
notl
loopne
mov
pop
sarl
ss
imul
mov
int
and
sarb
xchg
divb
jl
mov
mov
dec
add
jmp
enter
mov
cmp
and
jmp
divb
aaa
pop
aas
jle
adc
daa
shlb
pusha
mov
sub
in
pop
es
mov
cltd
fs
fcomip
pop
lds
aad
psubusw
or
pop
mov
mov
fdiv
je
push
arpl
out
xchg
out
jno
inc
es
mov
das
mov
cmp
stc
mov
notl
lods
inc
packuswb
add
mov
xchg
gs
ja
call
sbb
sub
sbb
cli
add
les
mov
cmp
or
stos
jno
and
add
ja
int
adc
popa
mov
xlat
bound
and
jb
push
pop
push
mov
sbb
inc
jns
leave
adc
mov
fbld
cmpsl
pushf
xchg
add
rorb
insb
cmp
add
out
dec
ja
cmp
lret
mov
loop
and
lret
rep
push
aam
inc
mov
je
lods
xchg
xor
pop
jmp
fsubrl
test
adc
push
xchg
stos
stc
xchg
popa
cmp
jg
pop
lret
jnp
cmc
mov
lret
mov
ss
mov
mov
mov
je
inc
lcall
fwait
lods
push
out
xchg
add
push
inc
cltd
sub
xchg
adc
mov
addr16
xor
lcall
lahf
test
popf
insl
add
js
and
mov
fs
xor
mov
sub
dec
orb
mov
and
mov
fisttpll
mov
or
idivl
gs
aam
inc
lret
and
pop
negb
push
mov
into
test
adc
icebp
lock
dec
loopne
aad
dec
and
mov
lock
push
lcall
push
gs
sub
cmp
hlt
shrb
mov
out
add
sub
and
sbb
fisubrs
rcll
cmp
dec
jg
cmp
das
lock
mov
addr16
add
mov
stc
sub
mov
inc
clc
lahf
mov
push
je
sub
adc
push
push
lods
push
push
or
xchg
int3
in
loop
addr16
jbe
pop
adc
dec
call
test
xor
std
outsl
in
lret
mov
xchg
jns
aad
pop
xor
cmp
sub
push
pop
sub
aad
add
cmpsb
aam
dec
pop
add
xor
stc
in
pop
fdivrl
sarl
xor
jmp
sub
dec
dec
sbb
jecxz
cs
repnz
push
lock
jge
xchg
scas
pop
pushf
adc
push
jl
push
daa
mov
xchg
fcomip
xor
insb
dec
jae
sbb
ret
dec
pop
and
sub
fnsave
call
cwtl
imul
stos
imul
sub
add
outsb
insb
shrl
call
sub
mov
dec
push
push
jno
mov
jg
and
imul
lss
mov
fstpt
fsubrp
inc
sti
sarb
xor
cmp
mov
jnp
leave
rorl
mov
rcll
test
push
icebp
cli
and
imul
xor
test
ljmp
sub
das
lahf
jl
pop
jmp
lods
sub
out
pop
sub
outsb
test
test
arpl
hlt
mov
ror
mov
pop
lcall
pop
mov
pop
or
mov
push
jb
xchg
cmp
mov
in
rcll
sub
push
push
adc
imul
leave
mov
dec
lods
jno
dec
jo
jo
mov
lret
stos
jmp
pushf
xchg
test
cmp
fwait
and
xor
xchg
add
hlt
stos
pop
cwtl
loopne
push
inc
fnsave
dec
jp
push
and
mov
mov
imul
xchg
or
scas
xchg
lahf
sub
movsl
psrlw
mov
loopne
add
mov
pop
fs
test
sub
nop
repnz
imul
mov
add
xor
int
pop
inc
and
adc
dec
into
mov
jl
int3
xor
mov
adc
push
ret
test
add
xchg
lret
jg
xor
aad
sbb
mov
in
mov
imul
lods
mov
dec
mov
fcmovnu
jecxz
mov
es
and
xchg
lahf
xchg
insl
or
add
xor
add
movsl
stos
fcoml
dec
jg
rcr
outsb
push
pop
sti
cmp
push
push
mov
cmp
push
pop
push
sbb
xor
fbstp
cmc
lds
in
mov
lret
push
sub
dec
add
xor
xor
jno
scas
mov
lcall
fwait
inc
out
rcrb
and
sbb
jp
jo
adc
dec
decl
pop
fldcw
cmpsl
ja
xor
call
dec
dec
in
popl
mov
dec
lods
sub
das
push
mov
and
data16
incb
dec
xchg
lret
xchg
jnp
out
mov
dec
ret
int3
lret
push
movsl
xchg
mov
sub
push
ds
xchg
repnz
add
rolb
aaa
adc
jne
adc
adc
dec
adc
cmpsb
lea
cmp
add
je
mov
xchg
sub
mov
ljmp
mov
push
pop
mov
hlt
std
test
mov
mov
ljmp
cmc
sahf
cld
push
ficoml
adc
inc
xor
pop
lds
hlt
neg
and
xchg
nop
or
dec
fadds
adc
lret
incl
adc
add
aas
mov
jle
imul
mov
cs
cmp
sbb
push
dec
je
sbb
push
inc
mov
popf
test
add
inc
sbbl
pop
es
and
mov
faddl
insb
movsl
jecxz
pop
jns
cmp
pop
adc
cmp
xchg
ret
and
es
jmp
sub
pop
shr
mov
push
js
loop
xchg
bound
lret
int
lret
repnz
lods
pop
or
mov
jae
mov
and
ret
outsl
and
mov
cmp
ja
int3
cld
jne
xor
cmc
rorl
and
push
push
pop
pop
push
xchg
scas
inc
cmpsl
fsubrs
jle
pop
ficoms
pop
dec
mov
pop
push
sti
mov
fdivrl
clc
addr16
xchg
pop
mov
and
cltd
xor
movb
or
hlt
rol
out
cltd
mov
push
lahf
and
mov
orl
js
scas
cmp
and
add
xlat
cli
or
sub
out
pop
and
push
jno
dec
into
imul
push
xor
lret
lret
jno
push
or
int
call
aas
mov
inc
mov
sbb
xlat
fnsave
push
mov
and
out
iret
repz
fcomp
nop
mov
divb
inc
adc
mov
pop
push
or
add
aaa
adc
cmp
jp
loopne
scas
cltd
shr
mov
call
ret
dec
mov
add
adc
adc
mov
xlat
mov
jmp
test
and
xorw
fmull
int3
sbb
cmpsl
lea
xchg
sbb
or
stos
lcall
in
jns
test
clc
pop
into
shl
sub
lcall
dec
dec
aaa
imul
pushl
push
scas
push
xor
sbb
jmp
scas
ror
aam
push
xor
les
xor
xchg
in
jg
out
jle
ret
ret
cmc
std
jae
das
sahf
add
xchg
sbb
out
inc
ret
inc
cmp
xor
repz
jle
sub
jg
sbbb
xchg
or
sub
and
call
xlat
ss
dec
xor
lods
cmp
adc
repnz
sub
pop
ljmp
std
add
cld
push
mov
mov
jbe
xlat
inc
jp
fnstsw
xchg
jp
pop
or
jns
sti
push
shll
adc
outsb
repnz
push
pop
sub
fnstsw
cmpl
jnp
xor
lcall
and
jcxz
add
into
cmpsl
jnp
leave
and
jmp
in
jecxz
bswap
add
in
cli
cmpsl
rolb
dec
ds
loope
and
push
aad
jne
mov
or
jae
xor
out
lret
sub
xchg
xchg
sub
fstl
clc
adc
jl
mov
fsubrs
adc
pop
jecxz
cmpsb
xor
dec
std
add
push
ret
pop
gs
fisttps
in
mov
mov
add
xchg
inc
sub
in
lods
test
addr16
mov
sbb
or
shl
sub
ljmp
adc
jg
dec
idivb
mov
mov
dec
fs
icebp
scas
pusha
jg
ret
cltd
cltd
movsl
mov
jp
aam
fimull
push
fnstcw
shlb
aam
cmpsl
cmp
push
movsb
sub
lock
lret
sbb
iret
cmpsl
add
loope
add
in
or
sub
or
test
je
cmp
add
jp
call
daa
aam
adc
mov
notl
dec
fsub
stos
int
fcmovnu
movl
lret
add
dec
xor
push
add
jno
fwait
add
mov
push
and
push
fbstp
sahf
out
sbb
es
or
xorl
shlb
push
out
jo
pushf
ja
mov
dec
scas
mov
mov
sti
test
xor
out
shll
or
std
popa
dec
and
fsubrs
adc
sub
out
xchg
push
dec
shlb
mov
rcrb
sbb
jge
jne
sar
dec
flds
mov
out
xor
jecxz
push
jmp
mov
ret
jmp
cltd
ss
jnp
arpl
jp
xchg
int3
inc
or
xor
sub
addb
movsl
inc
mov
lods
jl
push
adc
in
xchg
sub
mov
mov
lcall
cltd
sahf
mov
mov
xrelease
cmc
cmp
mov
lret
mov
xchg
nop
int
cmp
pop
mov
jno
push
outsl
fidivrl
mov
out
mov
nop
lahf
pop
dec
mov
push
mov
in
jge
pop
outsb
neg
jg
xchg
movsb
xchg
notl
add
shlb
out
adc
shl
fwait
enter
jo
mov
fstl
out
add
lcall
or
pop
jno
push
popa
imul
xchg
mov
fnstenv
outsl
mov
mov
jb
mov
out
and
xchg
lods
xor
xchg
push
int3
xchg
test
sub
pop
push
orl
fsqrt
clc
adc
jnp
imul
xchg
cmpsb
inc
push
repz
xchg
xchg
pop
out
jle
lds
outsb
pop
mov
mov
mov
das
cmpsl
add
jbe
mov
adc
and
jecxz
aad
lock
movsl
mov
in
xchg
add
inc
cmp
loopne
xor
aaa
inc
push
and
mov
dec
mov
pop
loope
jae
int3
dec
mov
shll
jnp
sbb
pop
cmpb
jae
xor
lret
dec
dec
fidivrl
mov
xor
mov
out
cli
shrb
and
xchg
inc
clc
jno
mov
ss
icebp
pusha
sbb
testb
xlat
imul
xor
stos
pop
inc
xchg
push
test
scas
sbb
js
xor
add
je
push
jp
xor
sti
enter
sbbl
out
pop
daa
mov
cmpsl
bound
fcmovbe
loop
push
and
sbb
cld
dec
xor
sahf
mov
call
repnz
jno
imull
daa
jecxz
sar
adc
arpl
mov
jae
add
mov
icebp
mov
adcl
push
push
mov
adc
std
scas
jno
add
dec
cmp
dec
dec
bound
xor
mov
jns
stos
pushf
lock
mov
xchg
int
cmpsl
into
shr
popa
sbb
pop
mov
fildll
stos
sbb
outsb
xor
dec
rcrb
jmp
rcrl
stos
push
pop
mov
psubq
pop
test
fcomip
call
push
sbb
jae
stos
ficoml
pop
insb
test
fcmovu
lds
loope
in
sbb
and
pop
sub
pusha
lcall
test
sub
pop
push
gs
pusha
mov
mov
jb
xor
cld
clc
popf
cltd
xor
adcb
jne
xlat
mov
mov
push
mov
sbb
sahf
sarb
imul
fwait
pop
cmp
dec
jg
xor
jg
mov
scas
pusha
sbbb
mov
movsl
push
xchg
cmp
or
cmp
fwait
lods
push
or
jae
sbb
cmpsb
test
into
int
cmp
mov
pop
mov
sbb
sar
bound
xchg
sbb
sbb
add
push
mov
and
lret
inc
or
test
inc
nop
fisubl
das
nop
push
subb
sub
push
push
or
lret
sbb
aas
incl
push
or
stos
and
or
int3
or
cwtl
int
fnstcw
pop
mov
rcrb
jbe
mov
sub
xor
das
sbb
aas
clc
fcompl
inc
enter
jl
sbb
shr
pop
loopne
inc
test
imul
mov
stos
xchg
add
inc
push
test
stos
push
add
cmp
dec
push
popa
repz
out
mov
lahf
gs
jmp
cmc
fadd
andb
adc
fstps
inc
mov
outsl
dec
lahf
push
mov
aam
jae
std
mov
call
mov
arpl
adc
jle
call
leave
fsubrl
mov
les
aad
sahf
mov
jp
fcmovnu
add
int
add
and
adc
fadd
aas
and
inc
divb
jno
sbb
xchg
pop
scas
jecxz
ja
xor
pop
inc
adc
movsb
inc
lea
pop
lret
adc
dec
dec
std
mov
test
dec
cmp
test
insb
lods
lret
xchg
rorl
adc
and
addb
enter
test
xchg
cmp
stos
call
or
sbb
es
jae
xchg
push
loope
pop
add
in
test
cwtl
xchg
cli
cmp
sub
popa
out
out
inc
repnz
push
sub
push
jae
movsb
popf
lea
jae
jp
sub
xorl
jle
mov
push
js
jle
gs
pop
sub
or
jno
push
clc
lea
pushf
pop
mov
shlb
enter
jnp
dec
xchg
push
outsl
jmp
xor
mov
push
cmp
or
leave
aam
add
sahf
sbb
in
push
test
fmuls
cmp
and
scas
jae
cmp
daa
jmp
imul
lods
xchg
call
xchg
stos
mov
test
pusha
inc
in
loop
mov
dec
cmp
scas
movsb
xor
fld
add
jg
stos
adc
js
add
pop
stos
cmp
into
or
mov
in
es
repnz
hlt
mov
pop
ja
mov
test
push
ss
sbb
lret
repnz
inc
mov
sarl
andb
cmp
mov
push
cs
jb
outsb
dec
mov
cmc
dec
roll
nop
fwait
sbb
inc
pushf
pop
push
rcll
or
arpl
scas
push
lds
lds
mov
fisubs
and
rorl
xchg
sbb
cmpsl
dec
xchg
push
xor
fisttpl
scas
sub
rolb
lods
push
xor
and
xchg
stc
or
add
mov
sbb
and
test
aaa
fisttps
shrb
cmp
shll
data16
jb
lods
stc
das
mov
sbb
jmp
jb
xchg
enter
out
push
das
lods
and
jp
adc
lahf
mov
dec
push
test
out
dec
lds
test
mov
dec
int
inc
scas
stc
aas
stc
mov
mov
add
mov
inc
fisubl
mov
repnz
jno
add
jp
and
or
mov
pusha
mov
pop
xor
inc
jbe
pop
aam
mov
outsb
mov
outsb
inc
sbb
lods
xchg
into
pop
out
rcll
pop
shl
fildl
mov
xlat
out
jnp
fldenv
in
add
mov
mov
dec
test
mov
and
hlt
dec
js
push
sub
lcall
fcoms
fdivl
push
sub
cs
mov
imul
mov
xchg
jg
das
mov
or
dec
inc
shll
sbb
movsb
outsl
and
insb
cmc
cwtl
inc
push
pop
bound
jl
pop
out
int
cmp
jle
and
cld
lds
jo
mov
and
mov
lahf
push
sub
int
out
stos
xchg
outsb
mov
xchg
addr16
ss
mov
repz
sti
test
cmova
ret
sbb
inc
negb
cmp
out
aaa
pop
pushf
daa
fadd
jp
inc
xor
lods
mov
and
add
ficoms
daa
xchg
dec
pop
inc
push
cmp
xor
dec
pop
inc
aaa
push
push
inc
push
fmull
mov
int3
xchg
mov
jecxz
jmp
add
jg
outsl
mov
jle
mov
lret
jo
rorb
divl
xchg
out
out
fwait
cmpsl
jae
ja
push
incl
rcrl
and
add
fdivs
add
cmc
jae
fadds
xchg
adc
or
mov
push
pop
xor
popa
xor
mov
push
xor
cmp
add
mov
mov
xchg
sbbb
push
inc
mov
bound
fsub
dec
lock
es
rcl
mov
push
jbe
xchg
cltd
adcl
or
jns
pushl
xor
inc
and
push
inc
jle
mov
mov
push
pop
sub
sub
add
jle
jecxz
sub
sbb
std
sbb
cli
insb
test
mov
or
cwtl
pop
aad
into
iret
repz
mov
int3
push
add
dec
dec
scas
mov
repnz
scas
jae
xchg
insl
imul
pop
and
outsl
dec
cmpsb
inc
push
imul
xchg
add
or
addl
lods
or
jle
mov
outsl
pop
test
adc
aad
movntq
js
sbb
iret
call
mov
add
rep
call
dec
xchg
ficompl
int
aas
mov
sahf
mov
inc
test
pop
inc
fiadds
jb
xchg
sub
mov
mov
jecxz
aas
dec
cld
or
scas
cmp
push
jno
and
test
fs
mov
test
in
stc
setg
jmp
sub
add
add
adc
rcr
push
ljmp
out
scas
in
mov
mov
iret
pop
loop
out
and
jne
jb
insl
xchg
xchg
iret
mov
jnp
sti
mov
ss
fdivs
je
jge
sbb
adc
shrl
insl
push
xchg
icebp
mov
dec
imul
xchg
xorb
into
scas
jne
mov
jmp
rorb
cmp
es
in
jae
fdivrs
leave
cmp
cmp
mov
push
jecxz
mov
lods
fdivs
pop
push
out
enter
sub
cmp
stos
cmp
jae
mov
mulb
jns
test
mov
out
movsl
jb
or
xor
test
std
push
cmpb
sbb
jnp
aad
hlt
mov
int3
cltd
movsl
xor
fnstenv
outsb
pop
jp
je
int3
out
insb
add
stos
pop
cld
out
std
and
lmsw
gs
push
movd
cmp
xchg
cmpsb
outsl
pop
subb
cmp
dec
add
lret
inc
and
fstpt
fdivl
mov
pop
fdivs
cmpsb
lcall
fildl
sbbl
lods
inc
dec
lret
xor
insb
or
dec
add
cmp
push
xchg
pop
jg
mov
lcall
xchg
fistpl
sub
bndstx
jae
and
cmp
mov
dec
mov
push
imul
andl
int
shlb
mov
test
add
xchg
gs
lods
cltd
push
or
rorb
push
popl
fsubrl
leave
jnp
mov
xor
fcmovnb
xor
dec
xchg
push
lret
mov
sbb
inc
dec
dec
cli
push
push
inc
add
fstl
les
mov
call
mov
mov
jecxz
push
js
adc
push
lods
xor
xor
dec
or
jns
and
mov
dec
xchg
rcll
and
lcall
push
xor
cmp
push
test
jp
scas
movsb
aas
inc
leave
and
loopne
outsb
clc
ljmp
data16
lea
ret
lods
mov
imul
push
pop
sti
pop
data16
outsl
and
imul
arpl
dec
gs
lret
in
jg
lret
xchg
in
in
leave
and
outsb
loopne
lret
mov
outsl
adc
dec
xchg
cld
mov
insl
scas
ss
rcrl
mov
sbb
jge
push
daa
call
add
imulb
out
pop
mov
aad
mov
scas
mov
mov
and
mov
in
sahf
sbb
sbb
aaa
scas
inc
aad
repz
sbb
dec
jmp
out
movsl
inc
adc
cmpsb
jo
push
out
inc
in
lock
sub
and
cltd
xchg
mov
fdivp
divb
xchg
sub
bound
pop
jae
aaa
jle
add
xchg
out
repnz
mov
aad
adc
filds
out
jae
xor
jnp
rorl
and
std
cmp
movsl
xor
filds
push
xchg
dec
xchg
jge
lahf
fldenv
push
cmp
jp
in
adc
jno
aad
fisubl
in
pop
dec
es
mov
outsb
ja
push
dec
test
pop
stos
push
inc
lock
mov
inc
cmp
mov
mov
subl
mov
mov
adc
mov
xchg
nop
mov
cs
lret
xchg
nop
push
or
jmp
mov
nop
scas
stos
arpl
adc
repnz
out
lret
mov
pop
inc
and
push
cmpsb
lahf
pop
fistps
jle
bound
mov
and
push
cmc
mov
subl
xor
mov
repnz
lcall
sub
into
sarb
repnz
push
in
test
sti
mov
adc
mov
loop
cmp
addr16
pushf
aad
mov
mov
push
jmp
cmp
xchg
cvtdq2ps
inc
dec
aaa
adc
filds
push
cmp
iret
pusha
js
mov
dec
out
cmpsl
scas
stc
scas
repz
lret
iret
push
lret
inc
mov
sbb
pop
das
mov
mov
xor
nop
mov
stc
xor
jp
mov
inc
scas
loope
clc
xor
insl
mov
aad
fcoml
jl
dec
lods
xor
jge
icebp
jnp
sahf
sub
sub
jae
jecxz
sbb
push
pushf
icebp
rcll
je
ljmp
shrl
or
pop
andb
inc
notb
push
sbb
jl
stos
aad
leave
das
fbld
xor
pop
jp
mov
jecxz
push
inc
jbe
lret
push
jo
fstl
mov
gs
or
pop
inc
loope
popl
adc
scas
loope
movsb
mov
inc
mov
fsub
lahf
inc
pop
cmpsl
mov
stos
outsb
mul
dec
in
fisubl
inc
sub
test
insb
jle
andb
test
scas
mov
lret
call
mov
cli
push
test
and
popf
adc
sub
lock
cmp
cltd
in
loopne
mov
sar
add
lds
mov
dec
test
loope
outsl
mov
dec
iret
mov
fnstcw
adc
icebp
imul
inc
push
cli
insl
lods
es
cld
mov
das
ss
jne
scas
jno
fisttpl
mov
jecxz
mov
divps
cwtl
leave
ret
sbb
icebp
ja
out
cltd
xchg
push
rcrb
mov
cld
push
pop
jns
push
aad
fldenv
sub
xchg
jp
sti
ret
rorl
repnz
cs
es
lock
jo
jns
push
mov
jmp
mov
repz
mov
test
dec
popa
sbb
cmp
adc
lret
out
sbb
fs
add
sahf
dec
xor
pop
in
cltd
aad
rorb
dec
punpckhdq
jbe
mov
outsl
mov
xchg
scas
lahf
aaa
popa
test
int
sub
xchg
mov
dec
cmpsl
leave
aaa
lock
sahf
pop
adc
enter
mov
adc
mull
subb
cmp
pop
movsl
push
test
mov
adc
xchg
and
dec
insl
stos
shl
xchg
xor
in
notb
push
mov
pop
sub
inc
push
outsl
test
mov
test
jno
outsl
jle
xor
mov
xchg
jb
std
dec
in
mov
dec
aad
test
jge
cmp
int
cld
sbb
push
dec
loop
or
sub
or
imulb
arpl
xchg
push
jno
cmpsb
lret
or
jnp
sbb
fcomp
mov
xor
inc
jo
push
inc
das
and
int
in
cmp
dec
and
mov
xchg
lds
cmpsb
test
lahf
in
loop
outsl
mov
mov
fcmovnu
sub
loopne
jmp
icebp
xor
fs
out
aam
mov
mov
mov
in
movsl
subb
push
jg
sub
repz
xor
pop
and
cmpsl
push
push
or
pop
lcall
mov
incl
ds
and
xchg
in
dec
das
and
setp
or
mov
adc
xchg
fwait
cmp
mov
lock
or
fs
mov
pop
cmp
mov
pop
inc
insl
jl
or
add
fldt
pop
iret
rorb
mov
jns
cli
sbb
xor
xchg
aam
mov
in
mov
outsl
dec
aam
adc
and
nop
add
les
rcrl
aaa
addr16
sub
les
pop
jae
insb
ds
push
out
mov
xor
fiadds
push
adc
or
lret
mov
je
push
scas
enter
imul
mov
addb
jbe
push
inc
testb
repz
cmp
mov
add
pop
pop
dec
pusha
mov
decb
cmp
dec
xor
rolb
xchg
ret
push
cmpsb
mov
pop
xor
loope
push
ja
push
mov
pop
xchg
mov
loop
pop
xchg
xor
sbb
cmp
add
ja
es
daa
pop
mov
rcrb
cli
sbb
and
jp
push
int3
jle
hlt
sti
iret
mulb
cmp
leave
mov
call
aad
dec
xchg
mov
fucomip
test
scas
and
jp
dec
push
adc
jg
adc
pop
cmpsb
cmp
pop
rorb
push
mov
test
add
enter
add
mov
adc
mov
inc
pop
out
icebp
push
ds
and
cmpsl
mov
mov
jne
add
dec
add
xchg
jo
xor
add
hlt
dec
dec
mov
jecxz
outsl
jmp
cmp
stc
jle
sub
cltd
add
cmp
insl
fnstcw
jo
outsl
mov
loope
xchg
mov
jbe
mov
shlb
and
cmp
sti
add
mov
push
dec
sbb
ret
xchg
and
arpl
mov
and
inc
lcall
scas
or
pop
cmovbe
ss
sub
iret
popa
mov
iret
sar
and
sbb
adc
jmp
pop
int3
push
xorb
cs
fsubs
adc
mov
and
jmp
out
in
or
pop
clc
or
sbb
mov
hlt
sbbl
xchg
dec
shll
mov
jb
adc
sbb
jbe
add
cmc
jmp
aad
gs
repz
cltd
xchg
dec
ja
push
push
pop
inc
mov
sti
mov
mov
xlat
or
test
jge
push
xchg
mov
push
mov
jmp
test
scas
cld
leave
scas
sub
jbe
push
push
cmp
pushf
xchg
dec
sub
mov
cmp
popa
lcall
pop
faddl
clc
mov
sub
shl
dec
inc
outsb
fstps
xchg
outsb
aad
imul
lods
fs
cmpsl
inc
stos
fstl
sub
gs
out
dec
pop
xchg
or
ds
dec
rorl
ret
ret
mov
push
enter
imul
xchg
in
hlt
sub
mov
ficoml
call
lock
dec
jge
leave
mov
adc
imul
add
or
add
mov
inc
jnp
hlt
dec
or
pop
cmp
out
sbb
mov
sbb
sbb
jo
cmp
jl
inc
push
inc
lock
add
imul
movsl
xor
in
lcall
aas
arpl
inc
fcompp
gs
xchg
cmpsb
xor
lods
pmullw
hlt
frstor
push
sbb
fdivs
loop
dec
cmp
fildll
ret
divl
xor
jnp
jp
icebp
cmp
lcall
mov
jbe
xor
dec
enter
mov
das
cmpsl
sub
cli
stos
dec
iret
jne
xor
fldt
vpavgw
nop
cmpl
fcmovnb
sub
dec
fs
push
popa
push
repz
adc
cmp
sbb
xchg
js
scas
xchg
push
pop
shlb
and
adc
cmp
mov
jmp
mov
mov
xor
mov
push
adc
xor
aad
hlt
xchg
xlat
sub
inc
dec
pushf
cmpsb
sar
or
sbb
lods
push
add
lahf
shlb
ret
add
rcll
lods
sub
pop
jge
jo
sahf
push
cmp
or
aas
inc
cmpl
and
mov
xor
cmc
cltd
fstpl
lret
loop
arpl
cmpsb
or
insb
je
cli
ret
xor
das
sbb
mov
cmp
xchg
in
jnp
shlb
pop
jmp
adc
in
js
ret
sub
and
push
arpl
cmpsl
mov
rol
iret
xchg
xor
dec
or
pop
cld
insl
push
sub
sbb
xor
pop
fwait
into
push
xlat
dec
movsl
inc
jle
mov
mov
pop
insb
jno
lds
cld
mov
call
jnp
inc
dec
out
xor
push
scas
inc
sbb
stos
sbb
xor
loopne
stc
hlt
int
mov
cmp
cmp
sahf
sbb
pop
in
push
push
frstor
sti
mov
mov
xchg
mov
aam
push
hlt
jnp
imul
xor
imul
inc
push
dec
fbld
pop
clc
pop
addr16
addr16
aad
mov
sbb
insl
adc
sbb
jae
jge
test
add
jnp
jnp
lds
inc
jmp
sbb
mov
sbb
dec
adc
gs
sarb
mov
sbb
insb
pushl
ljmp
mov
rcrl
xchg
arpl
into
in
fstl
or
outsb
cmp
clc
cmp
push
xchg
repnz
out
jmp
sbb
pop
mov
arpl
xchg
dec
pop
xchg
daa
add
cltd
sub
adc
into
xchg
sbb
movsb
subb
xlat
or
ror
mov
jbe
pop
sbb
icebp
lods
mov
lock
mov
loopne
pop
sbb
in
jge
das
mov
rorl
pop
fwait
xchg
pushf
stos
add
or
ljmp
mov
mov
cmp
fs
add
pushf
cld
xor
push
cmp
div
mov
mov
bndstx
iret
fsubrs
push
add
call
clc
insb
or
sbb
fdivs
mov
mov
mov
or
pop
pop
lahf
std
int
xor
in
push
or
stc
scas
lret
jae
or
cli
add
adc
rorb
jle
leave
add
clc
xchg
nop
sbb
adc
ja
mov
nop
ljmp
inc
xchg
into
popf
in
adc
inc
out
xchg
inc
add
nop
dec
pop
fwait
sbb
cmp
sbb
lea
in
stc
jmp
cmp
jge
dec
call
mov
cs
shlb
mov
out
aad
and
pop
mov
mov
mov
stos
dec
fsubrp
jp
ja
mov
mov
xor
sub
xchg
dec
jb
movsb
xor
xchg
rcll
jne
push
lahf
and
faddp
mov
cmp
pop
lds
jge
scas
pusha
movsb
xchg
sbbl
loop
push
inc
xor
mov
pop
jmp
mov
sub
jge
mov
mov
mov
enter
jae
shll
ret
or
xchg
or
push
jbe
std
insl
xor
cmpsl
or
mov
mov
push
int
lret
arpl
loope
jo
mov
sub
mov
xchg
push
fs
sarl
adc
or
popf
and
out
push
lret
mov
push
insl
dec
je
fistpll
rcrl
mov
mov
jmp
push
je
inc
mov
mov
jg
pop
aaa
jmp
sbb
add
leave
pop
ja
push
rol
mov
cmc
xchg
jp
lods
stos
out
daa
jle
ss
jl
fisubrl
shll
and
iret
daa
xchg
and
fnstcw
aam
push
das
jecxz
pushf
mov
push
xor
adcl
xor
mov
aam
nop
jne
dec
jne
xchg
fdivrp
add
push
iret
daa
inc
xchg
rcll
lock
sub
push
push
jge
repz
jns
jnp
in
inc
pop
pop
and
hlt
popa
test
and
push
test
adc
in
pop
shrl
sub
mov
aaa
stc
push
stos
and
mov
fsubp
push
push
or
lods
test
sarl
rcrl
imul
out
cmp
fldl
pop
stc
xor
add
push
fsubrs
addl
ret
or
negb
sub
ficoml
out
scas
test
xlat
xchg
push
enter
mov
iret
fistps
pop
popf
pop
pop
insb
lcall
xchg
jge
pop
xor
dec
inc
aad
xchg
sbb
loop
into
ret
hlt
jne
mov
loop
scas
pusha
mov
test
and
cmp
idivb
push
sahf
mov
jecxz
incb
daa
movsl
dec
fsts
popa
lahf
out
xor
pop
inc
cwtl
test
or
mov
imull
scas
pop
mov
xchg
gs
adc
cmpsb
data16
push
hlt
xor
adc
mov
pop
sbb
and
mov
stos
hlt
pop
add
and
sbb
inc
jno
cmp
cmp
rcll
nop
nop
sbb
into
sub
iret
ja
popf
scas
outsb
adc
xchg
or
jg
jl
inc
xor
sub
imul
push
out
sbb
in
sbb
pop
loope
in
inc
test
arpl
xchg
dec
repz
sub
mov
ror
mov
mov
xchg
lcall
mov
iret
xchg
je
push
jp
ja
sbb
jmp
in
and
jg
lea
pop
leave
setle
mov
rclb
jae
imul
inc
cli
push
pop
xor
xor
pop
push
sub
cli
out
pop
xchg
add
lret
rolb
xchg
insl
sbb
push
popf
jmp
xchg
fcmovb
push
jl
dec
into
add
adc
mov
lds
cmc
adc
xor
in
jle
mov
adc
fsubp
and
aam
jne
jbe
mov
or
std
and
sahf
daa
mov
popa
adc
loop
mov
inc
jno
inc
push
or
jg
pusha
mov
pusha
loope
and
xlat
cmp
and
cwtl
and
jmp
pusha
push
test
rolb
cmp
ljmp
push
repnz
out
mov
push
pop
push
push
jecxz
dec
pop
sbb
sub
mov
insl
xor
lds
test
arpl
sub
rorb
es
fimuls
aam
mov
popf
mull
pop
sbb
pop
mov
testb
outsb
fstl
xchg
push
xor
jecxz
addr16
insl
sbb
ss
cs
xchg
fidivrl
add
cwtl
push
flds
lds
jae
xor
jbe
imull
pop
imul
cmp
adc
loop
mov
jb
outsl
bound
arpl
adc
fadd
xchg
mov
cmpsl
sahf
mov
repz
fwait
push
jl
cmc
imul
cmp
rcl
sbb
fs
add
xchg
jo
call
mov
push
lods
mov
je
push
mov
in
js
sub
push
pop
insb
jno
xchg
dec
cmp
jl
sub
mov
leave
movl
stc
inc
test
sub
xor
sub
xor
fnstcw
dec
push
mov
call
sbb
and
lds
ds
mov
xor
jbe
jae
jmp
jle
mov
lret
push
jnp
mov
push
mov
mov
push
push
cli
fs
xchg
xchg
gs
cmc
cwtl
mov
and
adcl
or
shrl
jbe
fsub
fwait
out
lock
xchg
cmc
pop
dec
dec
mov
push
out
bound
mov
imul
jae
mov
add
mov
xchg
xorb
inc
xor
xlat
xchg
je
in
jnp
jle
jnp
xchg
nop
daa
addb
pop
mov
leave
adc
xchg
pop
sub
fstl
push
mov
jg
push
jnp
adc
inc
or
loope
testb
fisttpl
shrl
push
push
mov
outsl
je
or
addr16
dec
gs
jb
shrb
xor
jge
movsl
or
dec
in
aaa
ja
mov
mov
adc
stc
add
repz
cmpsl
mov
mov
fcmovnb
addr16
push
and
pop
jl
jo
add
stos
stos
movl
and
add
mov
stos
cld
ret
iret
push
add
shr
cs
xchg
jmp
cwtl
jmp
mov
lock
scas
adc
cmp
in
inc
xor
jecxz
popa
cmp
push
cli
inc
xor
or
mov
iret
sub
push
outsl
jbe
mov
add
jl
xor
in
xchg
mov
cs
and
jo
sahf
lcall
inc
nop
outsl
push
mov
loop
mov
xor
dec
lahf
pop
mov
cmp
fidivrl
mov
mov
mov
mov
lods
and
jne
inc
int
shlb
add
aaa
ss
sub
adc
inc
mov
scas
lods
arpl
xchg
repnz
sub
pusha
push
pop
push
jno
call
in
cmpsl
addr16
scas
push
jne
fcomip
cmp
inc
mov
sbb
push
in
insl
negl
bound
cmp
push
aam
outsb
test
leave
aas
fwait
out
jle
lret
bound
jno
repz
outsb
dec
jle
sbb
xchg
lods
add
in
and
ss
shll
lds
dec
in
inc
stos
push
or
test
scas
lcall
and
push
movsl
scas
int
cmp
into
xor
xor
dec
jl
fldenv
movsl
inc
sub
imul
fldcw
cwtl
dec
cli
mov
mov
mov
int
xchg
gs
movsl
jbe
mov
nop
aad
cmp
aaa
arpl
jl
sti
dec
xchg
data16
add
push
jg
sub
pop
int3
sub
ja
stos
cmc
ljmp
inc
loope
jb
cltd
xorl
push
sarb
ret
negl
sbb
xchg
xor
inc
je
mov
sub
lds
sti
lods
mov
ja
sti
dec
pop
dec
mov
mov
hlt
lods
mov
dec
lock
add
push
stc
sbb
jmp
jb
jmp
mov
push
push
mov
jnp
mov
test
cmp
popa
push
popa
inc
add
addr16
mov
ret
mov
mov
test
test
cmp
xor
in
aas
xor
add
and
sbb
and
and
cmp
dec
jmp
push
mov
jmp
push
push
lods
jg
lahf
push
ficoms
add
dec
lret
nop
fldcw
pop
mov
cmc
cmovl
shlb
inc
sub
cmpsl
jecxz
sub
mov
ss
push
loope
xchg
in
imul
adc
jecxz
cmp
shrd
fsubrl
roll
pop
notl
ljmp
mov
adc
pop
mov
popa
xor
repz
and
das
pop
ss
sub
rolb
cmp
xchg
bnd
or
fsubrs
jno
pop
mov
cltd
sub
jp
adc
stos
daa
rorl
loopne
push
sub
mov
jbe
mov
adc
jne
adc
mov
sub
repz
je
xchg
into
lds
xlat
adc
movsb
add
lcall
lret
sbb
cmp
ljmp
stc
and
dec
xchg
fs
sbb
es
or
adc
sub
std
lods
aas
icebp
push
adc
mov
fadds
aad
cmp
mov
mov
loopne
xchg
mov
xor
and
nop
mov
cmp
xlat
call
js
jmp
adc
ror
fsts
sahf
push
jbe
pop
adc
rcpps
rorl
sub
add
fwait
mov
clc
pop
mov
mov
pop
mov
mov
loope
pop
mov
jnp
xor
rcrl
stc
daa
js
imul
pop
aad
xchg
dec
out
enter
inc
dec
mov
pop
pushl
sahf
mov
mov
enter
mov
cmp
and
push
out
mov
cmp
enter
add
test
push
lret
pushf
cld
xchg
popa
mov
adc
fistl
sbb
jns
push
movsbl
inc
fisubl
cmp
popa
loope
leave
in
jb
sub
jmp
jg
clc
mov
ja
dec
jne
sub
jnp
mov
adc
int
stc
xchg
cmp
iret
xor
dec
mov
xor
lods
and
and
aaa
dec
test
push
mov
call
and
adc
idivb
or
aaa
xchg
inc
or
fidivrl
mov
mov
call
sarl
out
add
sbb
adc
movsb
addr16
pop
xchg
imul
xchg
data16
dec
adc
mov
push
lret
xor
xchg
lods
repnz
movsl
sarl
je
cmc
shlb
dec
out
mov
pop
mov
push
gs
stos
inc
jl
loope
adc
mov
icebp
jbe
sbb
sub
in
sub
push
dec
xchg
mov
ss
rcl
ljmp
or
dec
and
ja
cltd
pop
adc
ret
bound
fcmovne
cs
lock
or
movsl
fisttpll
int
dec
xchg
clc
std
or
rcrb
sbb
imul
mov
xlat
popa
fcmovnu
cmpsb
hlt
gs
nop
and
xor
xchg
sbb
adcb
sub
mov
xchg
adc
push
fisubrs
jb
xchg
dec
ja
mov
push
jecxz
movsl
mov
lds
aas
sahf
xchg
cmp
pop
out
int3
test
xlat
push
int
addr16
push
lret
mov
push
mov
pusha
pop
and
repnz
in
shll
sti
pop
out
or
and
aam
push
cmp
adc
cmpl
and
mov
ds
xchg
sub
in
xor
sahf
pushf
out
fcomp
in
ror
scas
mov
fisttpll
lahf
push
push
inc
and
stos
ss
sbb
loope
mov
xor
rcrb
cmpsb
loopne
jb
mov
adc
inc
gs
jl
and
xchg
je
je
cmp
sub
stos
test
push
rorl
jg
adc
addr16
cwtl
xor
jle
and
aas
push
pop
mov
jo
mov
test
inc
lea
pop
pop
or
fiaddl
icebp
out
fistpll
cmp
jmp
push
and
fs
cmp
cwtl
xchg
adc
fwait
das
sub
test
dec
lret
mov
sbb
xor
sub
popf
or
popa
mov
cmc
pop
mov
hlt
ret
add
cs
xor
xchg
fwait
dec
adc
push
loopne
push
dec
push
pop
inc
lea
clc
sub
imul
js
and
aas
sbb
push
scas
push
in
das
fst
lea
pop
lret
push
or
add
sub
mov
arpl
mov
dec
push
mov
sbb
xor
sbb
sbb
cmpsl
rcrl
pop
enter
cmp
ds
add
cmp
xlat
imul
xchg
subb
adc
aaa
jg
xchg
sub
insl
fs
lock
enter
fsubl
adc
push
sub
mov
fisttps
xchg
mov
test
ljmp
pop
daa
in
push
dec
call
addr16
sti
mov
or
mov
fcomi
cmc
popa
jle
mov
ss
and
sbb
xor
or
fwait
out
mov
out
ds
jl
popf
mov
lods
outsl
dec
xor
insb
dec
pop
test
test
sub
sub
add
cmc
xchg
mov
sbb
fisttps
add
add
out
push
fists
push
push
leave
out
xchg
adc
imul
push
push
imul
mov
cmpsb
push
mov
shrb
jb
mov
dec
in
rorl
jne
in
sbb
or
pusha
xchg
jbe
mov
nop
adc
mov
ret
sar
xor
cwtl
push
repz
mov
pop
sub
popf
dec
cmp
xchg
stc
fcmovu
hlt
cmp
mov
faddp
dec
jb
inc
lcall
xchg
popf
mov
inc
dec
inc
push
push
dec
daa
jl
xchg
into
fsts
fwait
dec
outsl
push
sar
pop
js
pop
adc
bound
mov
push
enter
inc
mov
or
lods
ds
cltd
ror
dec
mov
stos
sti
or
adc
sbb
xchg
add
and
stos
lods
cli
push
out
mov
push
ja
addr16
pop
jmp
lahf
sbb
dec
gs
push
ja
int3
mov
push
inc
aad
mov
xchg
in
fdivs
inc
jecxz
fs
push
ret
movsb
mov
jns
pushf
sub
test
cltd
mov
pop
add
mov
inc
fidivl
sbb
lahf
stc
fbstp
add
jg
lahf
shrb
add
test
stc
and
sub
mov
ret
xchg
xchg
fstps
inc
fidivl
dec
dec
incl
sbb
add
rcll
pop
ficomps
mov
sbb
jnp
bound
dec
xchg
sub
inc
xchg
cmovp
pushf
xor
stc
ss
add
sub
jne
aam
cmpsl
push
dec
mov
xor
lahf
xchg
int3
xchg
cmc
jbe
and
iret
in
xchg
xchg
mov
iret
fnstcw
inc
fdivs
loopne
mov
mov
and
push
in
leave
fcmove
mov
pop
push
push
mov
adcb
pop
pop
dec
sahf
jne
pop
test
mov
insl
iret
and
divl
lock
mov
mov
push
xchg
clc
mov
xchg
jecxz
cmp
inc
add
in
lret
xchg
aas
mov
sbb
addr16
inc
imul
popa
mov
and
fwait
mov
aaa
xchg
or
mov
insl
jns
mov
xorl
mov
add
jo
mov
sbb
pop
mov
repnz
jb
movsb
dec
sbb
xchg
mov
nop
push
push
or
insl
dec
pop
lahf
ficomps
cmp
or
fisttpll
fisttps
sbb
mov
push
xor
inc
imul
subl
mov
ret
call
add
mov
ret
in
jo
and
mov
aam
or
popa
xchg
movsl
je
scas
sbb
stc
icebp
adc
inc
ja
sub
in
add
xor
cmp
rcr
xor
fidivl
mov
xchg
mov
mov
jbe
mov
das
sbb
shr
adc
ret
test
dec
out
add
gs
loope
push
lock
mov
pop
xor
mov
push
sar
mov
repz
xchg
out
mov
cmp
data16
fdivrl
cli
in
push
scas
fbld
sbb
aas
or
icebp
in
dec
out
mov
insl
enter
push
mov
add
outsl
fs
mov
or
loope
push
int3
andl
push
and
int3
in
loopne
mov
stos
movsb
xor
jb
aas
pop
xor
push
mov
repnz
pop
rcr
dec
add
in
sbb
aad
mov
push
int
test
or
test
mov
cs
mov
into
mov
pop
insl
add
fucomp
fcoms
jbe
comiss
clc
xor
mov
add
mov
push
hlt
call
xchg
or
xor
mov
push
or
lret
push
lret
pop
inc
lea
cmp
fs
mov
scas
notb
and
jnp
dec
push
push
mov
xor
in
leave
loope
jns
sti
push
inc
es
xchg
mov
add
or
push
rol
icebp
ss
adc
sbb
add
hlt
push
push
xchg
and
js
shr
mov
mov
lret
fcompl
dec
dec
inc
fnsave
mov
popa
repnz
leave
and
sub
push
shlb
mov
pop
fdivrs
nop
in
cmp
mov
mov
cmp
shlb
push
mov
xor
gs
push
jecxz
pop
loop
rorb
fcmovb
xchg
jp
adc
and
insb
mov
cmc
add
cltd
cmp
jecxz
in
iret
neg
fwait
movsl
rcll
or
ret
ret
and
cld
jmp
cwtl
lret
fwait
imul
dec
sub
cli
inc
mov
ljmp
inc
mov
sbb
cmp
cmp
ljmp
inc
dec
or
mov
xchg
sub
in
aaa
lret
jbe
dec
rcrb
dec
and
xor
das
cltd
xor
mull
xchg
sub
jb
add
jle
xchg
pop
sbb
inc
int
je
sub
lret
mull
jle
adc
inc
jnp
lret
in
rolb
jae
jmp
jp
jge
js
jg
sub
mov
andl
sbb
mov
dec
mov
ret
or
pushf
fwait
mov
mov
sbb
pop
pop
std
rorl
cmp
or
mov
xchg
or
sahf
cmp
dec
mov
pushl
movsl
aad
loop
sub
roll
bound
mov
sbb
or
sub
lock
adc
xor
add
push
fwait
sti
fsubs
leave
popf
mov
out
outsb
dec
adc
xor
inc
sbb
xorb
and
lret
ret
sbb
test
ret
xor
xor
sub
jnp
sbbl
or
aam
adc
adc
cmc
jle
nop
aas
cmp
cmp
and
adc
icebp
lods
aad
sub
lds
sbb
mov
hlt
movsl
adc
outsl
mov
fs
jmp
add
mov
subb
adc
scas
cmp
gs
push
xchg
inc
cs
fsts
les
adc
xchg
dec
gs
das
dec
lea
push
pop
std
pushf
test
mov
sti
jne
lods
mov
inc
or
mov
or
out
adc
mov
sbb
jp
arpl
nop
add
xchg
and
mov
aas
or
lcall
rep
cmp
je
scas
mov
add
aam
sbb
sahf
cmpsl
pop
insl
jnp
jnp
push
pop
test
out
or
pop
es
shrl
jne
push
add
mov
mov
cmc
into
out
mov
jmp
jo
pop
inc
pop
pop
jmp
pop
lods
mov
movsb
xchg
and
rcll
cwtl
ja
lahf
mov
out
rolb
push
aad
push
lret
dec
dec
in
lea
imul
ja
xchg
enter
sbb
stos
orl
and
pushf
sar
inc
sahf
xchg
inc
push
cli
cmpsl
add
test
add
mov
ds
xlat
bound
adc
repnz
mov
add
xor
mov
clc
dec
out
dec
outsl
mov
nop
mov
push
cli
inc
arpl
gs
pop
stos
pop
dec
xor
lret
mov
in
out
in
xchg
std
sbb
int3
xchg
loopne
cs
iret
cmp
pop
lods
repz
pop
cmpsb
dec
push
sub
xchg
mov
pop
enter
movsl
jg
fstpl
mov
jge
or
or
mov
pop
and
loopne
inc
test
sub
xchg
shll
pop
cmp
cmp
sbb
icebp
mov
addl
jae
pop
jmp
jmp
outsl
adc
sti
cmp
add
jl
repnz
dec
dec
lcall
mov
cwtl
dec
data16
mov
mov
pop
insl
daa
jns
daa
inc
inc
push
ss
adc
pop
ja
fbstp
jg
aad
adc
dec
pop
jmp
rolb
pop
test
mov
insb
jp
xchg
add
jmp
sarl
insb
inc
fwait
ja
jne
cmp
dec
mov
inc
out
mov
cld
out
int3
stos
cmc
pop
dec
dec
mov
or
jns
xchg
hlt
repnz
xor
aam
jecxz
jmp
inc
and
sbb
mov
dec
cmp
push
xchg
mov
and
adc
mov
cmp
mov
cmc
stos
imul
inc
int
push
mov
push
aad
leave
outsb
ja
xchg
inc
mov
loopne
shr
xchg
mov
insb
stos
pushl
or
js
mov
orb
mov
cmp
clc
fsubrs
inc
and
ljmp
mov
jbe
jge
enter
jne
dec
xlat
call
fidivrl
push
inc
mov
enter
outsl
daa
hlt
out
imul
mov
cmp
jne
push
ds
ss
pop
mov
inc
lahf
scas
sub
fs
popf
xchg
mov
nop
mov
cwtl
jp
mov
cs
popa
adc
pushl
cmp
mov
sbb
pop
sti
mov
xchg
jl
std
mov
xor
mov
test
out
mov
mov
lods
pop
dec
test
sub
sti
push
jge
daa
or
jne
test
out
xor
in
or
dec
pop
out
mov
psubw
rorb
dec
mov
jp
gs
aaa
movsl
fadds
rcrb
test
mov
xchg
das
push
jl
je
loope
push
ja
addr16
sti
enter
aaa
mov
and
ds
shlb
ljmp
mov
je
add
xorl
les
fisubl
cltd
inc
bound
cmp
inc
jbe
pop
rcl
sbb
adc
mov
jmp
dec
stc
jmp
cwtl
icebp
xlat
fisttps
shlb
pop
sbb
add
push
mov
js
pushf
test
push
xor
jmp
lods
rcr
sbb
xorl
pop
inc
iret
test
mov
xchg
lahf
push
xchg
test
sub
cmp
loopne
lock
pushf
lods
add
into
or
mov
inc
cmpsl
pop
cs
les
xchg
jle
shlb
xor
fistpll
xchg
dec
loop
mov
xchg
sti
or
or
sarb
cmc
jno
fnstsw
lods
in
mov
cld
aas
test
ljmp
push
int
inc
movsl
shrb
or
inc
lds
jmp
push
icebp
shrb
shll
loope
cmp
fsubrl
sub
add
mov
int
inc
xchg
sub
add
or
loope
or
sbb
mov
out
jmp
into
pop
jge
push
adc
dec
pop
mov
adc
ficomps
and
push
cs
add
cltd
ds
int
cmp
mov
cltd
xor
adc
pushf
push
mov
sub
jp
mov
xor
pop
loop
inc
lds
addl
pop
sub
add
imul
jo
ds
dec
sbb
or
xor
push
testl
arpl
aas
jae
pop
mov
fwait
cmp
into
dec
rcr
xor
addb
ror
rcr
outsl
xchg
enter
addr16
aas
dec
enter
jle
testb
arpl
xor
and
outsl
cmp
frstor
nop
or
mov
dec
fimuls
insb
fistpl
xor
lret
cld
pop
sub
sbb
ds
fists
imul
and
mov
jo
lret
xor
pop
nop
mov
test
cmpsb
cltd
fnsave
gs
adc
notl
insl
add
ja
pop
push
add
rorb
xchg
xchg
lods
cli
inc
push
test
fldt
xchg
les
push
roll
mov
orl
lahf
lret
pusha
cmp
xorb
shll
jns
test
xor
dec
jno
inc
add
test
lods
iret
in
ss
mov
fidivl
jecxz
cmp
pandn
xor
mov
adc
pop
ljmp
jl
adc
mov
add
testl
jne
xor
stos
mov
cmp
xor
out
xchg
mov
mov
hlt
out
sub
lock
xor
inc
ljmp
and
push
into
lret
jo
dec
jne
in
popa
xchg
mov
push
pop
les
jo
rorl
mov
and
jmp
mov
or
jo
cmpsl
mov
push
in
fidivrs
test
jns
push
scas
aad
data16
jp
jge
cmpsl
mov
leave
clc
into
jb
in
sub
push
in
push
in
xchg
push
push
mov
mov
add
ficomps
jne
lret
int3
das
xchg
sub
cmp
repnz
movsl
ljmp
jge
leave
mov
mov
and
mov
fsubl
or
mov
inc
jg
push
adc
orl
push
mov
xchg
or
adc
jp
ss
es
aas
xchg
fstl
lods
jbe
mov
dec
pusha
pop
jno
xchg
add
mov
mov
push
pop
ja
sahf
sub
dec
add
pop
jnp
xor
test
sti
shl
xor
loope
mov
add
inc
js
mov
lahf
mov
es
lods
outsl
pop
adc
call
add
mov
ffreep
jmp
loopne
orb
in
es
or
and
push
sub
mov
inc
adc
icebp
add
jg
cmp
mov
out
int
shll
and
mov
mov
pop
addr16
mov
mov
aad
push
pop
xchg
or
xchg
and
lahf
subl
imul
lock
add
and
cmc
xor
mov
push
ret
ror
adc
int
js
dec
out
roll
xchg
mov
sahf
sub
mov
jb
pop
std
mov
dec
fcmovne
mov
mov
cmp
inc
xchg
mov
sub
fbld
sub
xor
push
fmulp
add
les
mov
jae
das
or
cwtl
out
pop
test
lods
mov
insl
mov
iret
jbe
pushf
packuswb
ja
inc
inc
fs
cmp
in
mov
ret
out
sbb
js
fucom
lock
or
nop
lock
fsubs
outsl
and
repnz
shrb
and
xchg
ss
or
jmp
into
int3
mov
int3
cwtl
push
or
stos
xor
xchg
mov
rol
pop
ret
mull
pop
bound
popa
popa
shl
in
dec
int3
aaa
jbe
es
mov
inc
adc
stos
mov
popa
fists
push
inc
jmp
mov
mov
leave
ljmp
sub
adc
cmp
add
sbb
xor
ret
fidivrs
cld
mov
test
cmpsl
in
push
push
jne
cmp
and
jbe
cmp
std
xchg
xchg
js
daa
jno
pop
jle
inc
cs
jbe
mov
sti
mov
xchg
roll
mov
fstpl
add
nop
in
mov
lods
sarl
sti
imul
or
pop
sti
jge
xchg
and
je
shrl
test
xor
xchg
fsubrs
data16
mulb
stc
pop
lds
and
sbb
pop
xor
pop
ret
or
dec
add
and
push
std
scas
lret
fwait
pusha
stos
clc
sub
fcompl
jo
sbb
movsl
cmp
loope
mov
rcrb
popa
mov
aaa
mov
fistpl
mov
dec
out
pop
out
es
mov
scas
cld
mov
xchg
fwait
jecxz
jbe
jno
or
je
add
push
and
in
fistl
hlt
cmp
iret
pop
iret
push
jo
arpl
xor
inc
and
lret
push
pop
inc
push
shll
data16
shlb
iret
cmpl
in
pop
mov
lds
sbb
inc
mov
bound
repnz
cmp
jg
je
add
or
mov
dec
inc
fsubrs
enter
cmpsl
mov
xchg
add
shrl
cmp
outsb
pop
or
mov
cmovne
xor
xchg
push
pop
cmp
inc
push
les
sbbb
aad
sbb
xor
xchg
and
inc
xchg
pop
lret
or
adc
mov
mov
mov
repz
jae
in
scas
fmuls
mov
mov
std
mov
mov
out
repnz
mov
imul
test
sub
gs
jb
push
iret
fcmovbe
dec
ja
cltd
pop
out
ljmp
test
xchg
out
push
mov
mov
adc
arpl
dec
jns
mov
mov
inc
repnz
xchg
pop
adc
movsb
jbe
mov
outsb
test
xchg
lds
push
lock
lret
lahf
ret
scas
adc
stc
and
pop
ficompl
lea
and
mov
cmp
into
ljmp
lods
pop
mov
shr
arpl
push
add
cs
dec
or
xchg
adc
inc
xchg
dec
jmp
out
inc
cmp
push
cmp
lods
lods
ret
dec
fimuls
xchg
jg
mov
movsb
inc
ljmp
ret
movsb
out
sarl
ret
mov
dec
aam
pop
insl
cmc
int3
jmp
in
loopne
arpl
aaa
pop
test
jns
adc
dec
cltd
or
mov
sub
and
mov
mov
or
cld
mov
mov
adc
xchg
test
mov
stc
mov
icebp
lods
orl
into
fldt
jg
icebp
lods
and
cmc
inc
bound
jg
subl
xchg
ja
insl
pushl
mov
jg
test
mov
mov
out
lea
icebp
subl
dec
lea
notl
jp
out
pop
push
lods
fldl
mov
push
in
jecxz
test
inc
push
mov
cmp
test
ja
jl
xor
jle
sbb
in
pop
cs
fwait
mov
aaa
mov
adc
inc
push
addr16
cmp
dec
inc
fstl
call
lods
mov
insl
adc
xor
repnz
pop
add
and
repnz
cwtl
xor
pop
mov
xor
or
imul
into
lods
dec
repz
or
inc
xor
leave
ud1
hlt
pop
aam
clc
jno
push
dec
mov
fnstcw
push
subb
mov
sbb
std
dec
fidivs
rcr
jmp
cmp
outsl
in
push
loop
addr16
jns
cmp
push
sbb
clc
add
mov
arpl
lret
mov
sti
mov
jne
fmulp
aam
jne
xor
jnp
mov
jmp
movsb
sub
sarb
sbb
pop
sbb
div
sbb
pop
xchg
mul
push
mov
xchg
pop
mov
aam
stos
arpl
scas
lret
xchg
inc
add
fidivs
sub
jo
imul
pmovmskb
cmp
icebp
ficoml
clc
dec
int
lcall
ror
cmpl
fadd
mov
cmp
or
jne
pop
push
mov
in
dec
xchg
sbb
jmp
jnp
sub
cli
xlat
out
outsl
std
sbb
push
ds
clc
sub
sub
sti
sti
ret
stos
imul
dec
fwait
push
in
dec
and
xchg
mov
jbe
cmp
popa
jo
mov
stos
push
xor
sahf
mov
jbe
and
xor
jns
inc
rcl
mov
mov
or
xor
push
jl
xchg
aad
cmp
xchg
subl
cltd
in
mov
hlt
cmpsb
stc
out
jmp
xchg
cld
mov
and
add
add
insl
mull
inc
in
jmp
mov
pop
inc
les
xchg
push
es
out
pop
jmp
roll
jecxz
pop
inc
aam
xchg
icebp
mov
jns
pop
push
adc
insb
inc
pop
xchg
mov
loop
xchg
mov
out
push
mov
sbb
lahf
mulb
sub
pop
lret
aas
movl
mov
shll
rolb
push
ja
imul
imul
adc
sbb
mov
or
jne
sbb
jne
add
push
and
rorl
mov
enter
pop
int
jnp
jae
faddl
sahf
icebp
flds
inc
in
nop
sub
cmpsb
cld
sahf
arpl
xor
pop
movsb
cmpsl
push
les
out
jne
xchg
xchg
fidivs
js
movsb
gs
insl
movsb
add
ljmp
fcmovnbe
xchg
into
jmp
cwtl
sbb
pop
sarb
xor
loop
pop
mov
add
sbb
icebp
jg
lcall
dec
xor
test
adc
lods
jp
add
das
jnp
roll
ss
push
insb
cmp
mov
testb
js
out
fwait
cmpsl
sbb
push
loop
fisubrs
cli
and
enter
fldenv
dec
addl
sbb
ret
lock
mov
jmp
loop
adc
xor
sarl
roll
dec
mov
mov
inc
dec
add
fiaddl
dec
lods
mov
outsb
testl
rcr
xchg
cmp
dec
mov
fmulp
or
xchg
iret
jne
sub
mov
std
or
dec
hlt
pop
ret
mov
jg
jo
and
sbb
xchg
stos
mov
xchg
lret
sub
dec
fstpl
stos
lret
scas
jbe
xlat
pop
fs
jge
arpl
lahf
push
jb
mov
test
insl
mov
insb
inc
jnp
cmp
cmp
sub
push
jne
mov
push
popf
lea
popf
mov
lret
sub
ret
dec
xchg
mov
out
sbb
pop
les
int3
jo
dec
fadd
call
cmp
inc
sahf
dec
or
test
mov
xchg
cmp
in
repz
fwait
mov
lcall
shll
mov
mov
inc
adc
and
pop
divl
xor
jg
mov
adc
sub
cmc
inc
lods
and
mov
push
xchg
ja
or
pop
insl
adc
lods
xchg
add
ficoml
mov
jmp
arpl
ret
clc
shrl
fimuls
or
and
movsl
cmp
gs
lods
test
xchg
jge
lods
jmp
cwtl
xor
pop
jae
call
add
cmp
pop
add
das
mov
gs
cwtl
movsl
jbe
push
xchg
cwtl
les
or
ficomps
fstl
xor
fsubp
mov
push
jbe
push
xchg
push
adc
daa
insb
cmp
pop
mov
mov
xor
and
rorb
lods
sarb
xor
push
out
mov
inc
push
jmp
xlat
mov
shll
inc
pusha
dec
jle
adc
outsl
ret
inc
inc
jle
js
push
jecxz
or
push
rclb
mov
inc
pop
push
xchg
push
call
dec
sbb
icebp
and
adc
cmp
mov
scas
sub
cltd
fdivl
pop
cwtl
jne
gs
cli
mull
mov
pop
inc
adc
lcall
jl
xor
sub
ss
xchg
sbb
jnp
xchg
push
fldt
lods
dec
mov
leave
mov
add
rcrb
add
mov
out
fsubrl
cmpsb
fisubrl
adcb
push
outsl
mov
rcr
aam
cmc
cld
lahf
aaa
daa
jbe
into
outsb
fsubr
sub
test
imul
je
push
sbb
adc
rcrb
sbb
and
push
xchg
and
adc
shrb
pop
sub
jne
inc
loopne
and
pusha
lea
sub
add
iret
or
push
stos
mov
sti
idivb
mov
lds
pop
cmp
mov
mov
push
shrl
das
xchg
xor
and
popl
inc
inc
inc
ja
jecxz
dec
inc
shlb
cmpsb
push
mov
cmp
inc
std
out
ds
cmp
orb
mov
add
mov
lahf
lahf
add
adc
fisubrs
xchg
int3
xchg
push
loope
sbb
popf
cwtl
and
cmp
add
add
jnp
dec
fadds
mov
xchg
adc
or
xor
jns
into
sub
pusha
jno
insb
jge
out
pop
mov
arpl
ja
bound
int3
lods
inc
push
or
mov
sub
fwait
das
xor
cwtl
xor
jle
pop
push
dec
inc
jns
fs
jge
cli
push
sbb
sbb
mov
cld
mov
mov
jg
mov
mov
cld
cltd
test
ja
insb
movsb
ds
adc
dec
mov
movsl
push
pop
inc
push
pushf
pop
aad
lcall
je
push
call
pop
out
das
cmc
loope
push
andl
mov
and
xchg
insb
jmp
cmp
xlat
gs
in
movsb
jmp
sti
stc
nop
insl
lcall
dec
inc
inc
arpl
jns
mov
push
xchg
xchg
jecxz
in
arpl
ljmp
xlat
and
stos
sbb
or
or
xorl
jle
inc
cmc
xor
push
or
call
mov
cmp
sbb
loopne
fwait
movl
lods
inc
jle
or
ja
rol
or
subb
pushl
mov
add
dec
fdivrl
dec
mulb
jbe
and
and
stc
sbb
cltd
xchg
mov
iret
cli
cli
in
cmc
mov
enter
rcr
bound
ror
pop
out
jl
push
repz
lods
pop
stos
dec
insl
int3
cwtl
lret
mov
xor
ret
stos
xchg
adc
cmpsb
mov
sbb
shlb
xor
ret
dec
xchg
push
rcl
sbb
out
iret
fucomip
aam
sbb
xchg
cmp
or
ds
loop
pop
cmpsb
jo
es
xor
mov
dec
lahf
lods
pushf
adc
mov
rep
xchg
inc
call
dec
mov
out
repnz
and
cmc
lods
dec
sbb
add
popf
movsl
cmp
sbb
test
aam
cmp
movsb
pushf
sbbl
cltd
xor
mov
push
inc
in
ret
stos
xchg
popa
mov
enter
adc
adc
mov
dec
in
dec
push
andl
cld
bound
push
mov
loopne
or
fbld
decb
cmp
push
imul
lret
sub
push
mov
sub
insl
lods
jns
jg
jne
xchg
jmp
mov
pop
cmp
dec
sub
mov
dec
dec
mov
xchg
cmp
jg
lcall
pop
xchg
fdivrl
pop
movsb
mov
outsb
mov
cld
loop
mov
or
testl
mov
and
js
add
mov
and
mov
and
movsl
mov
jl
or
sub
lret
aad
mov
stos
xlat
pop
xchg
sbb
push
cmc
adc
sbb
jl
inc
jle
outsl
hlt
insb
mov
ficomps
out
aas
and
sbb
in
cld
mov
enter
mov
adc
xchg
sti
adc
cmp
lcall
sbb
aas
aaa
call
jp
stos
test
push
stos
dec
into
outsb
cmp
jmp
ja
jl
pop
je
mov
and
out
fs
cmpsl
nop
adc
inc
pop
push
movsb
inc
and
pop
jmp
push
cmp
mov
and
xchg
iret
push
fdivr
popa
jb
cmp
mov
cmp
inc
pop
hlt
ss
cmc
js
hlt
idivb
push
push
and
or
movsb
ljmp
sub
aam
mov
or
adc
ftst
sarl
jb
outsl
sbb
testl
sbb
nop
and
xchg
mov
jg
sbb
aaa
push
mov
xor
cmp
xor
pop
or
dec
lods
in
pop
addb
or
movsl
into
adc
int3
clc
cmp
mov
popf
ds
push
adc
mov
cltd
and
jmp
or
xor
push
outsb
xor
xchg
test
fadds
or
dec
stos
enter
sub
stc
jae
ret
popf
mov
mov
mov
add
test
dec
out
test
popa
stos
mov
daa
lock
mov
popf
and
mov
ret
cmp
adc
loopne
add
negl
jae
mov
fcom
cltd
mov
bound
xchg
mov
add
lret
xchg
sub
mov
xchg
adc
mov
or
sub
stos
iret
scas
pushf
sub
jg
push
stos
into
jmp
pop
cmpsb
cli
add
xlat
test
mov
or
adc
mov
popf
test
pop
jns
shll
mov
lods
sbb
inc
sub
insb
sbb
test
sub
add
push
mov
popa
pop
xor
std
sub
pushf
addr16
xor
sbb
imul
mov
adc
mov
imul
mov
and
cltd
out
fucomip
lods
aaa
daa
fmuls
mov
push
loope
subl
or
lds
fwait
pop
addl
test
fidivs
mov
pop
add
push
lret
or
out
subl
jno
out
or
cmp
pusha
lret
pushf
cmp
repnz
mov
into
xor
shll
adc
and
pop
inc
sub
mov
jae
bound
cwtl
xchg
xlat
mov
mov
dec
jecxz
stc
pop
inc
mov
repz
and
lea
or
fs
fsubrl
pop
pop
add
mov
pop
cld
es
rcr
lods
or
pop
scas
lcall
pop
sbb
mov
addb
adc
imul
je
stc
xor
xor
pop
fwait
pushf
add
xor
jnp
in
test
push
add
ja
dec
imul
push
out
cli
jne
xor
out
pop
push
xchg
lret
jnp
mov
mov
pop
xchg
enter
out
int3
dec
movsl
xchg
add
and
mov
sbb
pop
cld
xchg
testb
stos
push
sbb
stos
xorl
cmp
xor
jmp
jno
rcrl
stos
xor
pop
inc
sahf
pop
pop
inc
push
bound
in
sub
into
out
cmpsb
flds
dec
mov
jle
imul
clc
push
cmc
idivl
mov
loopne
xor
jns
rcrb
push
pop
add
sub
mov
dec
xchg
outsl
mov
loop
dec
and
dec
lea
jl
ds
cmpsb
sub
sub
mov
cmp
xchg
sbb
and
jmp
imul
shll
xchg
adc
arpl
aas
incl
xchg
arpl
jo
xchg
jne
and
pusha
fs
js
mov
cmp
mov
cmpsl
mov
add
jg
lea
mov
cld
xchg
call
jmp
aas
mov
out
cmp
out
and
aam
cld
pop
mov
loopne
adc
or
cmpsb
mov
cmp
dec
dec
mov
jge
enter
movsb
loopne
push
cltd
or
dec
dec
je
lahf
jns
arpl
mov
out
and
sarl
nop
push
add
dec
adc
sbb
push
adc
mov
add
jns
push
cmp
orb
xorb
and
adc
and
adc
jmp
cmp
xchg
out
iret
add
movsl
mov
mov
or
mov
in
cli
loopne
cmp
rcrb
jbe
sarl
push
cli
adc
dec
xor
xor
sub
adc
or
in
and
xor
dec
dec
es
pusha
pop
dec
pop
lea
stc
rol
cmpsl
stc
mov
cmc
xchg
clc
je
hlt
push
aad
adc
or
stc
hlt
cwtl
stc
or
std
sarb
addr16
sub
sbbb
sub
outsl
aam
imul
inc
inc
cwtl
sarb
lods
dec
mov
pusha
cld
lock
mov
lret
iret
clc
xlat
push
mov
mov
arpl
shll
mov
icebp
ret
sub
enter
pop
pop
lods
xchg
mov
in
shll
fwait
inc
and
jmp
mov
mov
add
and
addr16
sbb
xor
aad
adc
divl
cltd
sub
jne
outsb
enter
outsl
cmpsb
sub
mov
mov
sbb
mov
mov
imul
orb
xchg
stos
cs
inc
nop
pushf
sti
dec
cmp
mov
adc
aad
xor
ds
popf
adc
mov
fistpll
pop
lock
inc
and
lods
enter
sarb
add
mov
rclb
xlat
or
pop
fwait
xchg
inc
sbb
repz
add
popf
and
mov
cmp
and
xchg
pop
jo
pop
cmpb
int
jo
into
cmp
cwtl
outsl
call
inc
lods
mov
mov
mov
imul
push
and
adc
cld
mov
adcl
stos
shrl
out
fsub
xorb
out
addb
jae
lret
aas
adcl
and
icebp
pushf
out
rolb
and
jle
push
in
popf
push
sbb
mov
std
jmp
push
out
or
pop
inc
xor
sub
dec
stos
mov
testl
mov
jle
adc
xchg
decb
adc
pop
xchg
aam
daa
add
dec
fstps
push
lcall
and
rorb
sbb
aad
mov
xor
or
sub
rcll
or
jge
insb
add
nop
nop
jns
fwait
test
cmp
movsb
sub
sarb
iret
cmp
fisubrl
test
adc
scas
iret
loopne
adc
in
xchg
mov
adc
imul
mov
add
int
pusha
mov
les
jecxz
sub
mov
cmp
mov
nop
fistl
enter
xor
jne
or
push
stos
iret
inc
loop
mov
mov
dec
data16
xchg
sahf
inc
dec
ficompl
adc
ss
cmp
xlat
daa
fsts
jno
addr16
mov
push
xchg
lods
adc
xor
add
js
mov
pop
and
and
in
adc
push
enter
mov
adc
push
xor
xor
lock
rolb
push
lret
add
push
mov
das
out
test
adc
mov
xor
jge
sbb
adc
popf
insl
pop
pop
jno
std
scas
dec
sbb
aaa
xor
xchg
jg
adc
mov
out
or
dec
and
rol
arpl
js
xchg
inc
sbb
mov
neg
xchg
ficoml
sbb
push
push
pop
push
lock
jmp
mov
cld
adc
rcl
les
pop
add
mov
sbb
adc
lods
jmp
test
ret
pop
xlat
addr16
pusha
out
and
std
dec
sbb
xchg
push
in
push
mov
inc
or
add
pop
adc
int
mov
or
ret
and
repz
and
out
push
sbbb
inc
jmp
test
sbb
jae
mov
test
pop
and
rol
adc
cmp
loopne
popa
sahf
jns
movl
jne
push
dec
mov
jbe
daa
xorl
cmc
mov
fildl
es
lock
push
xlat
popf
popl
push
insl
push
pop
into
hlt
jge
sub
mov
not
cld
addr16
sub
xor
mov
dec
mov
aaa
or
xor
jno
rorb
jmp
faddl
cwtl
loop
add
out
mov
jge
int
xchg
pop
jae
popa
mov
das
fidivrs
movl
es
sbb
fmulp
outsl
jae
dec
insl
adc
testl
sbb
sbb
fst
adc
sub
test
mov
pushf
jnp
addr16
in
out
aad
dec
push
pop
dec
loope
lcall
popa
jne
push
repz
fucomip
mov
inc
lahf
pop
jo
out
mov
fildl
test
std
jae
jo
or
dec
pop
lea
push
icebp
mov
jne
icebp
mov
and
push
xlat
mov
hlt
and
rcl
inc
aam
sub
scas
pop
dec
add
xor
in
test
push
jbe
outsb
mov
push
pop
enter
fisubs
cltd
das
test
test
jp
sar
xor
xor
dec
stos
cmpb
mov
xor
pop
data16
inc
jbe
push
sbb
repnz
or
cmp
xor
clc
lods
ja
dec
cmp
push
popf
dec
pop
xor
idivb
jno
shlb
jge
push
push
cmp
add
arpl
nop
or
jae
jb
push
iret
mov
sbb
ret
push
add
xchg
roll
pop
test
fidivl
jp
popl
sbbb
test
cmc
mov
mov
sbb
cmpsl
hlt
xchg
jo
lds
jb
xor
adc
and
cmp
push
call
pop
aam
iret
popf
in
jnp
xchg
xor
xor
add
test
leave
into
mov
movsb
out
mov
xchg
mov
sar
dec
or
scas
flds
jle
insb
cmpsl
clc
lods
mov
arpl
out
fidivs
mov
adc
rcrb
mov
add
bswap
in
mov
fsubrp
iret
adc
inc
out
or
fimuls
movl
jns
pop
sbb
outsl
test
andb
inc
and
push
jno
in
pushf
mov
dec
shrl
mov
xchg
adc
push
push
cmp
xor
jmp
ljmp
pop
pop
mov
dec
inc
mov
or
sti
int
in
icebp
sahf
mov
mov
fcomps
sbb
inc
dec
out
jle
sbb
icebp
xchg
mov
jbe
orl
push
or
aam
sti
inc
nop
popf
sti
dec
clc
push
mov
xchg
pop
mov
je
mov
xlat
pop
add
adc
jle
jecxz
add
cs
iret
xchg
std
test
ljmp
adc
cwtl
or
inc
in
jb
mov
mov
lcall
data16
pop
les
cmc
jp
push
pop
fimuls
loop
lret
cmp
mov
xchg
iret
aaa
jp
test
push
xor
inc
push
enter
icebp
test
sahf
fcmovb
jmp
outsl
inc
push
lds
mov
mov
daa
js
incb
ret
push
sub
and
xchg
pop
push
movsb
sbb
xchg
sub
add
in
mov
pop
repz
mov
pop
dec
in
sarb
aad
cmpb
xor
insb
cld
jnp
es
rep
movsl
repnz
dec
and
push
daa
shl
add
or
pop
and
outsl
jno
sub
xor
or
popa
push
arpl
jge
pop
jae
pop
adc
jno
insb
insl
cmp
test
cmp
xor
or
ds
insb
data16
cmpsb
jle
aaa
lods
fmul
imul
xor
cmp
dec
mov
xor
mov
mov
int3
and
cmp
dec
divl
xlat
jbe
push
mov
lret
or
push
xor
pop
mov
inc
rol
pop
mov
mov
lahf
into
lret
mov
iret
mov
or
pop
popa
add
fcmovnbe
mov
mov
outsl
shll
insb
mov
mov
push
adc
fadds
mov
ror
jg
movsl
xor
pop
test
repnz
and
daa
sbbl
inc
jl
icebp
sub
pop
xchg
add
lret
cli
jmp
and
aad
lock
aas
ja
adc
mov
mov
jno
jo
mov
mov
xchg
loop
cli
adc
mov
arpl
jge
daa
ja
dec
mov
imul
jo
sarb
push
sbb
mov
in
arpl
test
sbb
jmp
inc
pop
pop
mov
fmull
call
inc
add
call
jno
jae
and
aad
cmp
mov
cmc
pop
xchg
push
into
out
cmp
test
jnp
aas
adc
xchg
popa
cmp
pop
mov
shll
lods
push
add
mov
in
loop
aam
daa
and
and
mov
stc
adc
ss
jp
mov
mov
mov
cmp
ss
xor
jl
int
push
xor
push
mov
call
xchg
popa
mov
xchg
roll
aad
minps
xchg
sbb
js
jge
jl
and
and
loopne
cli
mov
and
mov
push
jo
mov
pop
push
push
out
pushl
clc
rorb
aas
add
movl
mov
mov
rolb
fbld
ficompl
leave
fadd
xchg
stc
shl
pop
iret
cltd
or
hlt
scas
pop
cmpsl
cli
out
nop
mov
add
ret
cmp
adc
dec
sbb
fldenv
push
divl
xchg
or
xor
lret
push
fisttpl
jp
or
imul
cmp
push
inc
inc
push
and
outsb
stc
call
jns
adc
in
enter
cmpl
mov
cmp
stos
sbb
inc
nop
jae
mov
divl
mov
ss
movsl
nop
insb
call
movsb
lret
mov
xor
jb
xchg
inc
sbb
inc
mov
aam
and
and
mov
fdiv
inc
mov
es
movsb
xor
fucomip
xchg
xchg
pusha
lods
mov
ljmp
mov
pop
add
arpl
xchg
pop
mov
js
push
add
xor
pop
jbe
clc
xor
dec
lea
or
mov
dec
mov
iret
jno
in
sbb
enter
mov
mov
sub
xchg
push
fistps
jnp
xchg
das
aad
xchg
addb
rclb
xor
test
out
cmpl
and
mov
test
push
sbb
loope
test
sahf
mov
cmpsb
add
sbb
jp
xchg
rcll
out
popf
cmpb
std
jg
lcall
aaa
std
imul
or
lret
int
push
or
inc
mov
or
ret
adc
out
sub
ret
data16
in
jb
cmc
push
shl
out
fbld
jb
pop
mov
pop
pop
sti
outsb
xchg
cmp
ds
mov
xor
mov
nop
iret
cmpsb
and
xchg
sub
ljmp
push
push
loopne
mov
mov
add
lahf
out
xchg
add
cmpsb
pop
adc
xor
scas
and
js
add
out
fsubr
cmc
outsb
inc
fisttpll
dec
inc
push
or
lock
dec
movsl
or
arpl
add
adc
incb
mov
mov
dec
mov
and
stos
and
aaa
sbb
cmp
imul
adc
fnsave
lret
mov
sar
fwait
or
mov
cmp
loopne
add
das
jge
ret
dec
rclb
xchg
xchg
outsb
call
jecxz
mov
xchg
or
push
dec
jecxz
jmp
mov
cmp
mov
sbb
add
xlat
dec
jle
jge
adc
faddl
mov
pop
incb
xchg
pop
mov
mov
outsb
test
adcl
fistl
add
add
andl
and
dec
mov
lret
push
mov
outsl
mov
sub
mov
lock
fcomip
jmp
adc
movsb
mov
xor
xchg
mov
movsl
mov
test
aaa
and
xor
mov
sub
xchg
aaa
push
stos
js
xor
ret
mov
hlt
push
add
push
pop
adc
adcl
mov
jmp
sti
push
pop
stc
add
xor
mov
jmp
push
icebp
sub
dec
mov
jbe
sbb
jb,pt
xor
arpl
stos
add
aam
pop
outsl
out
filds
lods
mov
repz
cmp
popf
dec
xor
push
xchg
push
dec
mov
in
push
repnz
push
dec
dec
dec
adc
and
inc
jbe
adc
int
mov
pop
in
cli
lods
mov
stc
popa
ss
in
or
xlat
mov
push
das
icebp
loope
repnz
mov
jp
lods
mov
popf
js
loop
negb
in
loope
shr
daa
les
call
fldenv
test
call
es
xchg
aam
or
mov
xor
lods
sbb
pop
jae
jmp
rcrl
ss
pop
sub
add
xor
xor
imul
push
push
sbb
pop
push
pushf
je
xor
out
xchg
jl
je
icebp
loopne
repnz
fcoms
ret
dec
sbb
fcmovnbe
mov
movsb
xchg
lcall
stc
and
mov
cmp
stos
dec
sub
push
mov
push
mov
mov
and
sti
or
jno
pop
popa
inc
call
dec
cmp
cltd
add
jns
outsb
daa
scas
data16
pop
dec
mov
or
and
push
or
popf
xlat
or
cld
dec
add
cmc
jecxz
xchg
in
mov
or
pop
mov
xlat
xchg
repz
cmp
jne
sarl
or
jmp
xor
sub
sbb
insl
mov
inc
jp
adc
adc
in
vminss
fincstp
mov
insb
lea
push
mov
sub
int3
movsb
lret
push
mov
subb
xchg
xchg
fs
xchg
sub
xchg
xchg
aas
adc
in
mov
lahf
popf
adc
test
dec
ret
push
pop
mov
les
inc
ficompl
mov
cmp
and
test
sub
pop
push
lods
sti
test
mov
loope
bound
cmp
mov
mov
push
cmp
scas
fiadds
and
pop
sbb
adc
mov
imul
dec
scas
add
ss
lret
dec
or
insl
cli
stos
out
mov
xchg
add
sub
je
cmp
push
cmc
pusha
les
stos
sub
stc
fnstenv
stc
mov
mov
test
mov
shrb
xchg
aas
aad
mov
iret
pop
xchg
adc
push
fidivs
mov
inc
outsb
adc
fisubs
mov
jne
inc
hlt
divb
lea
add
xor
cmp
push
jne
addr16
or
mov
add
fdivl
and
call
loope
pop
es
pop
pusha
int3
pop
mov
bound
adc
stc
cmpsl
push
add
push
inc
jbe
leave
push
inc
lods
or
out
data16
inc
aaa
pop
jb
cmp
pop
xchg
addb
hlt
jle
lret
xor
movsl
aam
xor
cmpsb
cmp
clc
xchg
inc
mov
sub
cmp
xlat
fdivrs
mov
adc
jb
out
push
xchg
xchg
mov
test
mov
outsl
inc
mov
jnp
leave
aam
inc
pop
or
mov
shl
add
ss
push
inc
incb
cli
in
pusha
cmc
inc
mov
inc
fnsave
mov
in
dec
jae
outsb
add
inc
pop
and
or
jl
xchg
inc
ds
inc
xorl
pop
sbb
rcrl
sub
mov
xor
push
dec
push
pop
es
rclb
mov
push
lea
jmp
jle
and
clc
inc
das
aad
incb
out
insl
fldenv
xor
mov
cmpsl
imul
push
ficomps
lahf
repnz
imul
cmp
sbb
inc
out
lcall
in
sahf
xchg
loope,pt
test
loop
cmpl
out
mov
loop
or
in
insl
adc
dec
bound
push
mov
cs
dec
test
or
dec
insl
jle
ljmp
adc
cmc
xlat
inc
cmpsb
pushf
repnz
bound
mov
out
mov
jmp
push
pop
dec
shrl
xor
jl
and
cmpsl
ss
aas
cmp
sbb
cwtl
pop
cwtl
mov
repz
insb
sbb
cmc
sbb
imull
andl
das
inc
mov
shld
mov
mov
negl
lods
mov
out
pop
xor
dec
lret
and
lds
popa
call
pop
or
andb
sbb
mov
jbe
nop
fdivl
ret
inc
xlat
inc
lds
addr16
ds
rolb
cmp
cmp
push
pop
and
es
lret
scas
cmpsl
inc
das
lock
loope
pop
insb
clc
stos
fsubrs
in
fcoms
addr16
add
out
shl
mov
loop
sbb
jo
lcall
adc
jle
xlat
out
jge
pop
mov
and
fimuls
dec
cmp
rcrb
push
pop
in
jae
push
jg
xchg
lods
pop
inc
or
mov
mov
or
gs
mov
xchg
iret
xchg
stos
outsb
shlb
outsl
dec
stos
lods
aaa
scas
push
clc
lret
sub
jl
cmpsl
imul
fisubrs
mov
jns
lock
mov
rcl
and
data16
leave
lods
insb
add
pop
inc
adc
or
cmp
mov
xchg
pushf
cmp
jb
fbstp
mov
insl
out
nop
mov
outsb
stos
fstpt
inc
jbe
gs
pop
std
pushf
outsl
or
insl
rorb
idivb
out
lret
lahf
xchg
in
mov
adc
cmpsl
jmp
cmp
sbb
jp
mov
xchg
mov
cwtl
push
or
int3
ss
cmp
pushf
lret
repz
push
xchg
push
push
shrl
inc
rorb
adcl
loopne
movsl
push
adc
jl
add
and
cld
dec
lcall
cld
stos
cmp
dec
or
aas
mov
sub
cmp
sub
xchg
daa
or
scas
in
inc
jecxz
fs
mov
fbld
push
sarb
ret
fcomip
mov
xchg
sbb
and
icebp
in
cmpsl
sbb
lods
jmp
shlb
test
push
sbb
sbb
aad
xlat
jmp
into
and
aas
gs
stos
push
xchg
push
jl
and
ds
dec
lea
ret
pushf
push
in
sbb
sbb
adc
and
lahf
dec
shr
pop
mov
icebp
fisubs
fadds
fisubs
cmpsl
mov
xor
or
mov
push
sbb
push
sahf
or
adc
adc
jp
xchg
mov
cld
test
jmp
das
leave
mov
sub
mov
andb
adc
adc
mov
sub
pop
xor
jno
daa
or
sub
adc
sub
fistpll
jnp
inc
cmc
pop
push
mov
sarl
lcall
mov
mov
stos
cmp
imul
leave
xchg
icebp
fimull
les
mov
mov
jge
cli
bnd
xlat
mov
pop
shr
ds
cmp
es
mov
les
arpl
xchg
into
dec
dec
inc
mov
out
xchg
iret
sti
in
fdivl
sbb
movsl
ret
repz
pop
adc
or
cld
fsubs
icebp
push
mov
xor
std
test
mov
mov
inc
push
and
pop
lcall
subl
andb
test
sti
and
mov
pop
sti
pop
into
and
pop
rorb
mov
fs
lret
std
in
call
sbb
push
pop
hlt
ret
aam
lahf
sub
in
hlt
inc
and
cmp
test
inc
cmpsb
pushf
cmp
sub
jge
adc
subb
cld
mov
mov
push
loop
pop
mov
orb
jp
mov
and
xchg
mov
lock
sub
xchg
fldl
mov
mov
and
add
scas
imul
cli
adc
cmp
movsl
dec
xor
push
rclb
or
out
xor
mov
cmp
mov
mov
mov
pop
push
push
inc
and
or
pop
popf
inc
adc
in
pop
jb
repnz
jl
test
push
mov
movsl
repz
pop
mov
int
rcr
and
mov
cmp
mov
loope
cmpsb
mov
xor
subl
or
js
xchg
cwtl
orl
add
jbe
loop
xor
sti
mov
lcall
xor
jnp
std
test
das
adc
aam
cltd
xchg
jb
fidivl
jns
out
stc
orb
push
mov
xchg
stc
xchg
ret
movsb
mov
cmp
lea
xchg
and
dec
jne
and
js
cmc
jl
hlt
jmp
lcall
pop
xchg
jns
jecxz
movsl
cld
jle
imul
fcompl
imul
or
cmp
repz
and
fbld
fmulp
adc
mov
pop
and
xor
int
shll
cmp
jmp
push
jns
shl
push
mov
and
cltd
fsts
mov
aam
dec
sbb
push
xchg
add
test
mov
in
out
xchg
inc
fucomp
in
mov
mov
in
repnz
cs
adc
cmpsl
faddl
mov
pop
pop
xor
pop
push
repnz
fs
mov
test
push
fdecstp
cwtl
call
popa
pop
popa
adc
shrl
xchg
sbb
mov
mov
pusha
stc
lcall
call
cmc
test
pushf
mov
pusha
test
pop
sub
out
aas
mov
mov
test
das
push
mov
xor
sbb
dec
or
dec
popf
push
int
hlt
xchg
into
pop
out
xorl
repnz
mov
or
mov
push
ficoml
mov
mov
jp
pop
aad
mov
movsb
jb
orl
out
clc
xchg
push
out
xchg
and
mov
xchg
dec
lock
leave
mov
jmp
shlb
fcmovu
dec
mov
outsl
scas
outsb
xor
aad
movsb
in
pop
adc
sbb
push
sub
xchg
sarl
add
popa
loope
nop
inc
mov
pop
dec
mov
jo
xor
dec
lret
scas
jo
xchg
dec
mov
loope
push
mov
test
pop
movsl
mov
cmpsb
mov
fists
jmp
paddsw
xor
push
les
cmp
imul
push
lret
int3
subl
mov
mov
add
les
sbb
mov
les
or
sub
pop
dec
jb
mov
out
jnp
jmp
sub
lea
mov
push
pop
xor
int
fucomi
adc
pop
out
and
in
loope,pt
ret
mov
lods
mov
and
xor
mov
sub
outsl
and
sbb
add
fwait
or
hlt
jl
lods
mov
fists
mov
ljmp
push
adc
mov
fs
add
xchg
fldenv
imul
shl
out
jp
das
leave
test
and
sbb
push
out
ror
xchg
xor
ds
push
repnz
mov
testb
cmpl
mov
mov
pop
out
in
push
mov
aam
xor
xor
arpl
push
cmp
in
add
push
xor
fisttps
fucom
ss
xchg
mov
xchg
or
sbb
cmpsl
xchg
mov
jl
mov
xchg
dec
loop
xor
enter
shl
jno
xchg
cmp
iret
fcmovnb
mov
push
push
clc
adc
jmp
fdivrp
dec
js
sub
fnstcw
push
aaa
gs
out
sub
in
insl
iret
adc
mov
mov
xchg
test
insb
push
jmp
xchg
pop
adc
out
jns
push
ds
test
dec
cltd
jo
addr16
adc
into
daa
fimuls
sub
cltd
aas
gs
sbb
jb
subb
adc
and
fadd
das
dec
pop
xor
insb
jb
mov
psubb
push
shll
and
loopne
dec
push
mov
add
cmpsl
dec
lret
roll
xor
and
mov
js
inc
in
pop
jne
sbb
pop
jecxz
mov
repnz
jae
test
gs
add
aaa
enter
and
jp
pop
mov
mov
scas
or
cltd
dec
fcomp
or
inc
aas
inc
fyl2xp1
and
pop
call
xchg
cs
mov
jno
shrl
mov
cmp
arpl
xlat
pusha
clc
add
xchg
test
cld
aas
icebp
xlat
into
lods
lods
xor
mov
jne
or
scas
push
sarl
and
std
leave
fcompl
sbb
in
je
or
sbb
xchg
sub
popa
mov
nop
xchg
test
jg
int3
sbb
push
aad
pusha
ret
mov
inc
jg
mov
or
ja
sbb
loope
fisubs
leave
xchg
arpl
xchg
jns
popa
out
shrb
pop
pushf
cwtl
lahf
sbb
loope
xchg
dec
or
sub
ss
push
jae
xchg
gs
and
pop
repnz
dec
dec
cltd
or
xchg
sahf
test
leave
push
dec
stos
lea
mov
loope
cmp
mov
cmp
adc
outsl
ret
inc
inc
or
push
cwtl
or
fs
adc
mov
fidivrl
insl
mov
in
mov
mov
movsl
insb
dec
daa
inc
xchg
cltd
in
test
mov
xlat
test
xchg
dec
xchg
pop
leave
sbb
scas
ds
lahf
imul
fildll
pop
push
mov
and
jo
shlb
imul
mov
mov
sbb
add
sbb
or
sarl
fcomps
scas
jnp
ljmp
sbb
repz
roll
sbb
cmp
loop
fisubl
popa
jbe
ret
mov
imul
adc
insb
ljmp
imul
pushf
cmpsb
pop
arpl
cmp
notl
call
mov
push
lret
xchg
hlt
pop
dec
xor
fbld
mov
lea
mov
jp
roll
sub
mov
xor
mov
cmpsl
sbb
cmp
cltd
sbb
cmp
adc
and
lcall
fwait
das
jnp
jmp
jb
outsb
and
mov
insl
popf
imul
adc
dec
and
sar
push
sbb
inc
in
lret
and
sbb
cmp
inc
sub
push
pushf
in
dec
clc
out
jl
decl
pop
mov
fadds
popf
inc
mov
lahf
xlat
jp
in
jge
ds
inc
ret
jo
cmp
mov
xchg
pushf
jmp
aas
outsb
mov
scas
or
xchg
cli
addr16
xor
push
cs
or
lahf
repnz
in
jnp
fs
mov
nop
pop
inc
inc
or
pop
out
lret
int3
popf
imul
mov
into
mov
add
in
mov
sbb
dec
jb
mov
mov
dec
mov
jp
inc
cltd
fmuls
out
loop
fistps
in
xchg
sbb
pop
cld
imull
and
cli
repnz
data16
in
dec
shrb
hlt
fs
int
adc
es
out
pushf
std
xchg
push
pop
fs
mov
jg
ds
xor
xor
sub
arpl
cmp
mov
or
jmp
mov
in
dec
stos
insb
mov
inc
repz
imul
jl
cmpsb
pop
movsb
insb
inc
mov
dec
sbb
lds
outsb
dec
lret
mov
and
add
lods
test
aaa
and
pop
in
std
or
pop
pop
adc
inc
add
gs
sete
inc
sub
daa
mov
push
mov
outsb
sub
stos
ss
dec
cmp
xor
mov
lock
stos
push
fcomp
aaa
xchg
fimuls
imul
lea
aaa
inc
outsb
mov
jns
sub
push
out
fdivrp
insl
pop
inc
outsb
dec
xchg
mov
subl
cld
cmp
in
mov
and
popa
sub
dec
add
jg
push
push
xor
push
add
pop
mov
dec
iret
jp
xchg
mov
push
std
mov
mov
sub
iret
test
add
xchg
icebp
shll
sbb
push
je
in
inc
xchg
aam
mov
xchg
dec
push
adc
or
xor
scas
cmp
push
xchg
divb
dec
jns,pn
cs
enter
mov
mov
push
jb
cmp
mov
in
insb
mov
out
outsl
dec
pusha
mov
pushf
mov
push
push
imul
sub
and
out
adc
int
xchg
mov
lret
adc
inc
add
popa
pop
data16
push
and
ret
leave
cltd
mov
mov
cwtl
push
sarl
data16
mov
and
scas
test
mov
ja
daa
xor
push
jb
stc
mov
mov
mov
or
mov
jo
in
sti
insb
sbb
fwait
xlat
lock
pop
xlat
lahf
mov
pusha
add
inc
jp
negl
cmp
add
pop
adc
mov
jg
inc
push
add
push
shrl
cli
push
mov
jge
dec
inc
mov
rorl
dec
adc
dec
pop
xchg
mov
xchg
mov
daa
sub
xchg
clc
add
xor
shlb
ljmp
stc
daa
cwtl
rcr
fmul
mov
push
or
sbb
leave
xlat
jle
fs
cmp
arpl
inc
mov
lret
call
cmp
scas
and
jle
loop
xorl
cmpsb
adc
adc
add
aas
add
lods
mov
mov
pop
in
mov
aad
out
xchg
pop
cmp
movsl
jbe
mov
mov
out
or
push
xor
insl
out
test
call
mov
push
fdivs
inc
stc
or
xchg
icebp
mov
subl
lret
mov
sbb
pop
fistpl
mov
jecxz
sbb
jnp
pop
mov
je
jb
pop
pop
lcall
push
mov
pop
xchg
pop
mov
add
xchg
sub
dec
loop
lret
jl
test
adc
cmp
sahf
cmp
dec
pop
mov
xor
ret
in
stos
cmp
dec
mov
cmp
jg
xchg
dec
push
leave
pop
mov
jg
add
xor
sbb
fiaddl
shll
pop
or
push
sub
inc
adc
lcall
cli
push
daa
clc
movlps
push
push
xchg
push
cmp
push
mov
out
lahf
and
aad
inc
lods
int
ror
fwait
dec
inc
sbb
sarl
stos
dec
mov
aas
xchg
inc
mov
std
jne
aas
cld
fcoml
arpl
push
jg
mov
dec
std
dec
pop
push
dec
mov
pop
es
add
mov
dec
mov
jl
repz
jbe
subb
or
mov
rorl
insl
mov
lea
imul
notl
stc
push
mov
cmpsl
test
push
in
sbb
movl
pop
stos
std
out
dec
hlt
mov
popf
outsb
push
sub
and
insl
aas
sbb
mov
add
push
sarb
imul
in
and
ss
mov
or
sub
rcrl
int3
pop
sbb
jno
popf
popf
sub
cmp
test
in
dec
push
push
adc
push
or
jmp
test
movsl
sub
out
mov
scas
jno
adc
or
mov
addl
movsb
scas
testl
push
push
or
adc
scas
and
push
mov
dec
lahf
or
rorb
stc
cmp
or
xchg
sub
icebp
jg
cmpl
popf
std
cmpb
out
dec
nop
push
out
cwtl
push
cmp
xchg
pop
in
push
dec
mov
mov
and
push
insb
test
xchg
adc
mov
nop
aaa
stos
xor
out
mov
xor
fildll
pop
mov
repz
jg
inc
or
test
imul
scas
inc
cs
cmpsl
sub
fstps
or
dec
test
sub
adc
aaa
sbb
push
stc
sti
int
push
xor
add
shrb
xchg
xchg
mov
sbb
cmp
nop
cmp
adc
jl
and
sbb
rcl
sahf
inc
xorb
lock
push
js
das
push
mov
dec
and
fsubr
insb
and
adc
xchg
cs
imul
cltd
and
enter
xchg
push
add
inc
stos
sbb
dec
es
fwait
sub
cwtl
insl
mov
jp
aam
push
xor
aaa
sbb
aad
or
nop
pop
pop
xchg
xlat
add
movsb
xlat
mov
aad
mov
fisttps
push
xchg
arpl
add
adc
xchg
into
cwtl
mov
out
dec
mov
popf
pop
pusha
push
fists
leave
out
add
in
lahf
lods
inc
shlb
sbb
cld
adcl
or
sbb
pcmpeqd
cmpsl
push
dec
cmp
scas
mov
fdivl
adc
add
inc
sub
jno
loop
cmc
int3
cmp
pop
and
inc
xchg
dec
push
sbb
repnz
jl
mov
adc
inc
testb
xor
rclb
mov
in
into
inc
jne
scas
mov
dec
mov
sbb
cmp
sub
sub
shlb
jl
lahf
fsubp
mov
xchg
jae
sahf
fbstp
pop
aaa
mov
test
sub
sbb
inc
mov
bound
in
sbb
and
mov
cmp
js
dec
jge
in
xor
dec
lret
mov
cmpsl
das
test
clc
cwtl
arpl
xor
adcb
dec
jl
sub
pop
in
xchg
imul
imul
sub
shl
sub
stos
jle
ss
sbb
jne
push
pop
repnz
adc
push
out
aaa
lods
clc
rorb
mov
arpl
lock
cli
xchg
ret
xchg
in
stos
lret
mov
lods
jne
nop
lds
les
cltd
mov
imul
or
das
movsl
adc
adc
mov
scas
mov
mov
fldenv
inc
lds
and
in
add
sub
in
add
imul
pusha
jle
lods
pop
push
cmp
xchg
lock
pushf
adc
out
fisubrs
mov
int
add
mov
dec
sub
jne
push
sub
das
sub
pop
sub
out
enter
adcb
sbb
push
lret
mov
popa
aad
dec
or
aaa
jg
sub
clc
pusha
sbb
inc
and
dec
push
fidivl
adc
out
jmp
inc
xchg
cs
add
dec
inc
imul
push
sub
pop
in
dec
incb
popa
dec
or
lods
ja
shll
xchg
push
jmp
cmp
cwtl
pop
pusha
rcrb
or
pop
sti
cli
adc
xor
push
sbb
js
int
dec
mov
popa
dec
test
test
bts
rorl
pop
out
mov
dec
rsm
iret
xchg
lcall
sbb
nop
or
adc
notb
jns
inc
ss
push
roll
sbb
mov
jl
sub
test
rorb
dec
pop
pop
push
jbe
inc
outsl
stos
int3
outsl
les
pop
test
pop
xchg
fisttpll
out
jg
addr16
sbb
addl
mov
and
xlat
aaa
outsl
inc
mov
mov
push
cltd
sbb
inc
inc
fistpl
scas
dec
subl
lahf
sub
stc
repz
sbb
cmp
push
sti
mov
leave
sbb
sti
inc
mov
mov
pop
js
mov
mov
add
cmpl
lahf
test
stc
int3
test
xchg
hlt
mov
jecxz
cwtl
mov
mov
in
mov
mov
ror
js
xor
repnz
rcl
push
ret
jl
and
push
ret
mov
jb
icebp
loope
aad
jno
rol
gs
popa
jbe
repnz
inc
gs
mov
repnz
lret
push
int
lock
out
mov
jne
scas
out
mov
test
dec
repnz
cli
xchg
sbb
adcl
aas
lods
lods
sbb
mov
inc
jns
mov
pop
hlt
leave
push
ljmp
cmp
xor
int
out
push
int3
imul
lret
sbb
cs
gs
mov
push
stos
dec
ss
push
dec
insl
stos
adc
imul
xchg
addr16
add
cmc
test
and
dec
dec
sbb
mov
sub
mov
cmpsb
sbb
stos
push
xor
or
sub
pop
push
stos
add
sbb
imul
sub
imul
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
.byte
xchg
.byte
.byte
pop
jecxz
lahf
les
ficoml
std
xor
insl
rorl
ja
fucom
out
sbb
jno
jge
or
sti
sbb
popa
cltd
jb
inc
mov
loop
rclb
popf
int3
xor
shrl
sbb
sub
stos
in
cmpsl
push
outsb
or
cli
mov
sub
stos
in
insb
in
sbb
aam
xchg
push
and
lahf
xor
push
fmul
lahf
outsl
fdivl
call
not
cwtl
lcall
sub
loope
pusha
outsl
iret
sarb
lcall
cld
adc
pusha
gs
xor
mov
divb
leave
mov
lock
call
jp
adc
pop
movsb
mov
jge
xlat
add
out
into
mov
fcmovnbe
inc
fmull
imul
sub
xor
pop
mov
dec
cwtl
fidivrl
daa
stos
cs
dec
pop
xchg
jecxz
outsl
push
sarb
add
inc
jne
add
aaa
test
insl
cmc
test
arpl
mov
addr16
jae
mov
jge
push
pop
lahf
or
add
dec
movsb
sub
cmpsb
jbe
adc
mul
dec
and
add
cwtl
lds
lahf
stc
popf
xor
out
dec
popf
mov
hlt
sbb
sarb
sub
cmpsl
jmp
xchg
add
jnp
scas
jae
add
out
jnp
int
mov
xchg
xchg
cmp
leave
push
sub
xor
sbb
sub
imul
shrb
and
push
and
cmc
xor
inc
aad
push
call
int
cld
cvtps2pi
xor
jbe
shll
stos
jns
je
repz
shlb
xchg
mull
sbb
mov
ss
stos
xor
jne
push
pop
or
adc
mov
int
fwait
fs
adc
sub
test
xchg
pop
adc
jge
cmp
out
pop
push
out
nop
mov
sbb
adc
aad
adc
mov
jae
adc
add
mov
lock
xor
test
sub
inc
int
cmc
and
jno
das
addr16
mov
in
loope
das
sub
lea
sbb
cwtl
clc
jb
fucomp
jne
xchg
imul
mov
cmp
push
push
test
js
les
push
mov
xlat
loope
dec
clc
mov
fsubs
cmovl
or
push
jb
test
jp
jge
lret
inc
idiv
cmpsl
or
cmp
or
or
imul
sbb
je
mov
cmpl
stos
call
adc
push
faddl
adc
mov
aaa
jecxz
inc
imul
and
fistpll
sbb
mov
add
movsl
cwtl
sbb
jns
push
cmp
test
cmp
sbb
xchg
das
pop
adc
lock
xchg
test
lds
sub
fbld
add
imul
ret
push
repz
cmp
loop,pt
into
xor
inc
incb
cmp
cmp
pop
test
pushf
or
xchg
mov
rcll
clc
dec
mov
pop
imul
push
shl
pop
inc
adc
mov
fcomps
andl
push
ja
in
lock
test
clc
pop
adc
mov
cmp
scas
hlt
xchg
xchg
xor
jae
or
int3
push
cmp
cld
mov
dec
cmpl
push
dec
jp
xchg
leave
fwait
rcrl
add
adc
xchg
adc
lret
mov
or
xor
pop
clc
popf
mov
push
repz
les
pop
scas
pop
dec
mov
test
jecxz
xchg
scas
gs
jle
fisttps
decb
pop
mov
popa
inc
gs
xchg
push
inc
adc
mov
test
xchg
mov
cltd
and
adc
pop
stc
push
lret
xchg
inc
and
or
ss
add
nop
fldenv
loope
and
jecxz
iret
ret
mul
sbb
movsl
xchg
negl
mov
mov
imul
es
or
cmpsl
test
push
xchg
cmpl
adc
dec
sbbl
nop
mov
int
pop
int3
aas
cwtl
iret
inc
outsl
lods
sub
icebp
or
mov
xchg
imul
cmc
scas
xchg
pop
push
filds
ss
or
sub
sbb
das
cs
popf
into
mov
mov
sub
push
cmp
jnp
or
jge
shlb
or
xor
mov
sahf
dec
mov
sbb
and
icebp
xor
lods
call
adc
loop
shlb
xchg
pushf
out
lahf
daa
xor
test
dec
or
jbe
push
popf
in
inc
rcrl
les
lock
ja
and
mov
sbb
cmp
stc
out
sub
and
addl
jne
repnz
xchg
inc
decb
dec
leave
cmp
pop
inc
cmc
fwait
cmpsb
push
ds
pop
push
unpcklps
xor
cwtl
scas
dec
add
pop
jns
loope
adc
mov
fcmovu
cli
test
es
std
sbb
frndint
xchg
xor
xchg
rorl
fidivs
mov
sub
adc
addl
fucom
push
jl
sbb
lret
mov
mov
out
lds
ljmp
ja
jl
hlt
jb
imul
lea
gs
push
inc
mov
leave
sbb
fldenv
mov
xor
int3
or
jl
sbb
dec
and
fisttpl
cltd
cmp
jmp
popf
adc
outsb
stos
call
std
jno
into
pop
cmc
and
aad
or
pop
out
lcall
insl
call
rorb
mov
mov
insb
test
fcomps
jo
stos
sbb
insb
jge
mov
fisubs
xchg
mov
and
xchg
shlb
ljmp
add
mov
notb
jle
inc
xor
and
add
ret
xor
mov
jo
lret
lret
jmp
push
loop
push
mov
add
sub
in
push
lock
test
iret
mov
jecxz
xor
add
insb
or
outsl
cmpsl
lock
pop
out
in
mov
loopne
cmpsb
mov
ficoml
cli
xchg
andl
add
push
push
xor
pop
sub
mov
mov
or
imul
das
in
in
out
cmpsl
aas
sbb
jge
mov
icebp
in
inc
sub
xor
cltd
sbb
pop
scas
ret
cld
lret
imul
xchg
xchg
imul
add
cmc
std
add
lcall
cmp
dec
pop
dec
movsl
mov
cmp
pop
dec
xchg
mov
in
mul
fwait
lahf
mov
stos
and
daa
xor
xchg
lods
clc
mov
mov
sahf
jg
mov
mov
pop
add
test
push
cmp
mov
mov
jg
cmp
xchg
mov
fsubrp
in
add
test
ljmp
push
xor
add
mov
pop
inc
call
sub
push
pop
cmpsb
nop
xor
lcall
push
in
push
fcompl
xchg
icebp
adc
adc
mov
jne
pop
in
push
mov
push
lods
outsl
pop
or
mov
dec
bound
ret
pusha
adc
sarl
out
flds
jo
add
push
or
test
cli
sarl
aam
popf
mov
cmp
cmp
or
sbb
sub
aaa
daa
fmull
push
sahf
call
push
pop
imulb
in
xor
arpl
mov
pushl
notl
add
cld
mov
fdivs
mov
icebp
jl
mov
add
ja
ja
insl
pop
nop
aam
lods
inc
int
mov
pop
pop
dec
adc
mov
xchg
xchg
into
mov
mov
cmpsl
lret
dec
bound
cmp
shlb
sub
inc
xchg
sarb
pop
sarb
sbb
or
orb
cmp
std
loope
cmp
bound
cmp
inc
mov
mov
imul
popf
adc
adc
inc
test
mov
imul
mov
xchg
je
jl
in
jb
mov
sbb
bound
sub
xchg
mov
dec
mov
mov
loope
push
and
lcall
push
insl
movsl
inc
sbb
fbld
pop
cmc
incl
and
mov
inc
dec
scas
cmp
push
xchg
xchg
daa
cmp
add
mov
jg
xor
sub
sbb
push
lea
jno
sbb
ss
repz
cwtl
mov
dec
jb
dec
in
aaa
sbb
mov
ret
gs
inc
pop
lods
pushf
in
xchg
push
jbe
in
in
push
jle
outsb
push
nop
jbe
test
stos
or
outsb
mov
and
ror
push
sub
popa
loop
cmpsb
xor
inc
xlat
sarb
leave
cmpb
push
outsb
stos
sahf
push
stos
push
sub
push
lea
sbb
movsl
ret
pop
add
adc
inc
aaa
call
or
outsb
shr
mov
ret
push
sub
push
xor
inc
cmp
jb
mov
or
xchg
and
imul
stc
leave
in
sub
test
test
decl
pushl
jne
dec
popa
mov
lcall
jbe
bound
mov
push
xor
push
ss
xchg
sbb
jbe
out
mov
dec
sbb
aam
mov
subb
pop
cmpb
xlat
lahf
cs
lods
fidivrs
mov
dec
repz
fistl
pop
xor
push
insb
arpl
mov
shl
fsubrl
dec
xchg
fs
test
sarl
push
lret
xor
cmp
jno
xchg
imul
and
adc
ret
dec
scas
nop
jg
adc
mov
sub
dec
out
leave
cmpsb
pop
popf
inc
lahf
testb
mov
fwait
xor
mov
add
xlat
aad
inc
xlat
mov
mov
loopne
push
sarl
mov
mov
fsubrl
cmpsb
xchg
sbbl
rep
jbe
jl
add
sbb
movsl
push
outsl
push
sbb
xchg
sub
mov
sub
icebp
fs
or
sarl
add
dec
add
jmp
lock
push
incb
add
mov
lods
pop
popf
shll
jl
nop
popa
cmpsb
adc
dec
mov
xchg
sub
cs
jecxz
into
fs
xor
sarl
mov
cmp
jle
in
pop
mov
popf
pushf
cmp
sahf
mov
xlat
and
testl
outsl
inc
popf
xchg
mov
cltd
and
dec
cmp
push
fs
inc
sub
mov
jb
mov
daa
ret
dec
mov
sub
imul
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
.byte
xchg
.byte
.byte
xchg
jno
aaa
mov
mov
sbb
subl
negl
fs
push
add
in
mov
xchg
in
push
es
mov
push
xchg
inc
icebp
mov
sbb
or
clc
outsl
and
ror
cmpsl
and
mov
mov
fisubrl
ss
mov
jp
arpl
in
sar
mov
mov
leave
repz
insb
sub
push
cs
xchg
push
hlt
cmp
cmpsb
dec
ret
ret
mov
push
lret
pop
and
mov
pop
repnz
aad
orb
imul
cmp
aam
jg
mov
loop
push
xor
xchg
imul
je
pop
xor
adc
stos
outsb
lods
inc
hlt
loope
mov
fstpt
xor
outsl
xchg
out
vpackuswb
mov
add
movsl
cmpsb
cmpsb
push
arpl
fstpl
lods
out
ss
scas
lea
xchg
push
sbb
aad
imul
xor
mov
cmp
pushf
mov
mov
sti
jg
sub
std
or
sub
dec
fsubs
es
lret
nop
jl
repz
cwtl
mov
stos
dec
insb
or
push
sbb
insl
mov
mov
xor
pop
je
and
outsb
mov
arpl
das
in
notb
mov
arpl
jnp
dec
cmp
aam
cmp
lcall
xchg
pop
ljmp
in
mov
and
pop
jmp
in
push
jno
jg
cmpsl
sbb
sbb
pusha
xor
jo
inc
add
mov
pop
adc
imul
fists
pop
in
faddp
pusha
icebp
dec
fcoml
cmp
test
push
sbb
lret
fstpl
mov
cwtl
jmp
push
mov
fidivrl
mov
fcmovne
mov
movsb
push
or
cld
xor
push
or
add
push
in
or
xchg
fsubs
fwait
jle
or
push
jnp
inc
loopne
fldenv
mov
or
mov
aas
add
or
mov
test
dec
xor
scas
aad
out
jg
loope
pop
mov
xor
aaa
leave
jne
mov
mov
dec
and
test
fcomi
mov
sbb
popa
pop
sub
cld
xor
adc
jae
dec
inc
les
les
push
mov
mov
mov
and
or
pop
add
clc
or
in
ret
and
cli
sbb
popf
sbb
mov
out
sub
mov
add
dec
mov
cwtl
mov
insl
das
push
lcall
icebp
ss
jle
sub
mov
aad
std
pop
testb
int
and
xchg
mov
sub
data16
sbb
fs
and
jno
jg
push
or
movsb
mov
sub
shrb
push
loopne
icebp
leave
pop
ret
mov
push
inc
std
sbb
xchg
test
mov
jb
jb
cmp
ljmp
jbe
inc
push
testl
lcall
imull
lods
cmp
out
pop
ret
mov
loop
pop
mov
jl
lret
cld
lea
mov
cmpsl
sbb
add
mov
xor
pop
in
xor
jae
cmp
sub
mov
inc
rorl
mov
xor
jmp
lea
fisubrs
int
hlt
pop
dec
cmp
and
loope
dec
inc
jne
insb
outsl
lods
pop
stc
outsl
je
shlb
inc
shll
psubw
cltd
dec
jg
push
mov
sbb
dec
dec
xchg
lcall
or
push
pop
in
aaa
or
pop
xchg
pop
dec
push
inc
push
add
or
pusha
and
xchg
pop
add
lret
inc
jp
or
into
into
mov
dec
inc
cltd
cmp
sbb
xchg
adc
mov
pop
mov
or
dec
push
and
fistl
ret
cmp
inc
push
cmp
loopne
jo
repnz
out
jbe
scas
xchg
mov
pushf
fldenv
pop
pop
xor
fnsave
repz
rcll
ret
test
iret
cmp
loop
xchg
sbb
outsl
fsubr
sub
xchg
arpl
push
and
xor
inc
mov
xchg
lcall
xchg
adc
and
in
addr16
or
jecxz
push
cmp
testb
fadd
cmp
data16
push
jle
adc
fwait
push
ret
in
nop
dec
dec
mov
pop
rcrl
xor
pusha
lea
pusha
and
lock
add
mov
xchg
pop
xor
out
pop
loop
adc
pushf
dec
loop
jmp
lea
inc
js
loop
sbb
cmp
jns
jo
stc
shr
rcrl
and
push
sbbl
std
jnp,pn
mov
and
push
xor
jge
stos
aas
fdivrs
push
xchg
jne
enter
cmpsl
mov
dec
cmpsb
ret
out
fidivs
add
scas
mov
add
int
test
pop
xchg
and
mov
mov
xchg
xchg
gs
or
repnz
inc
subb
xchg
or
into
push
insl
sub
xchg
inc
xchg
jl
inc
jae
push
mov
mov
or
and
sbb
dec
mov
in
int3
sti
inc
cmpsb
push
scas
das
inc
mov
ljmp
ds
push
mov
out
xor
xchg
xlat
mov
xor
sbb
mov
xor
add
test
mov
mov
iret
insb
dec
sbbl
repz
pop
and
pop
sub
sub
leave
cmp
js
cmp
push
mov
sub
mov
xchg
add
jae
popf
and
outsb
cmpb
iret
lods
imul
das
mov
in
shlb
lods
rorb
cmp
call
inc
stos
xor
call
imulb
xor
mov
push
fidivl
cs
nop
adcb
cmp
add
hlt
stos
push
data16
fiadds
jb
movsl
sahf
dec
adc
icebp
inc
dec
mov
add
popa
mov
cmc
sahf
push
cs
pop
xchg
addb
inc
and
or
or
add
cmp
xchg
mov
sbb
mov
ficoml
jnp
es
jae
hlt
rcr
jns
jne
mov
into
mov
les
adc
in
inc
clc
mov
cmpsb
add
or
adc
push
mov
pop
aas
shll
push
test
cmpsl
pop
test
rcr
add
orb
into
lds
cmc
or
ss
cmpsl
push
push
sbb
adc
arpl
sahf
frstor
aas
into
jo
in
add
xlat
mov
adc
lahf
mov
cld
js
dec
cmp
or
dec
cmp
loope
out
cmp
sbb
push
sbb
jb
ret
fstpl
mov
repnz
add
out
jecxz
outsl
mov
mov
cltd
cmp
enter
bound
ljmp
cmp
repz
pop
and
scas
lock
and
add
js
xchg
cmp
jl
daa
ljmp
ds
das
scas
dec
mov
lcall
aas
mov
stos
popf
cmp
sbb
sarb
mov
mov
arpl
mov
ret
xchg
sbb
xchg
lahf
push
push
mov
dec
ret
stos
ljmp
jno
gs
xor
clc
enter
hlt
cmp
rcr
movsl
inc
add
lock
adc
mov
adc
push
and
mov
test
lcall
and
sbb
inc
cmpl
cmc
sbb
cmp
loope
repz
jecxz
pusha
jbe
shlb
xchg
test
sbb
jp
hlt
cmc
xor
or
xchg
aas
xor
lret
pusha
sub
and
mov
xchg
xchg
pop
sti
mov
sbb
adcl
xor
out
inc
je
mov
cmc
mov
push
xor
hlt
dec
sbb
push
fmul
inc
imul
pop
xchg
jo
push
sub
fistpl
pop
adc
inc
xor
mov
dec
pop
leave
push
leave
sbb
ss
ja
pop
hlt
js
gs
adc
or
and
pop
scas
pop
mov
mov
es
mov
dec
sbb
and
and
and
out
push
xor
popf
out
or
dec
sub
xor
pop
jns
xor
fs
xchg
or
push
jp
scas
dec
fcoml
in
out
mov
pop
or
adc
sbb
sub
stos
add
cmp
les
jmp
lcall
mov
scas
cmp
sub
cmpsb
hlt
lret
test
insl
and
push
imul
and
das
mov
mov
inc
inc
cmpsl
rorb
icebp
in
int
pop
dec
pinsrw
sbb
pause
jno
mov
cmp
xchg
fisubrl
mov
fimull
or
shll
in
jg
mov
mov
jg
test
xor
daa
pop
adc
and
xlat
mov
das
call
cmp
pop
xor
and
adc
mov
pushf
lds
dec
sub
mov
and
cld
cmp
call
xor
jne
pop
jle
cmp
pop
outsl
push
lret
mov
adcl
and
pop
into
xchg
clc
sub
imul
lahf
adc
xchg
xor
ds
sub
dec
sarb
mov
mov
outsl
test
jg
cmp
and
je
push
mov
fimuls
lret
ss
push
xchg
std
filds
in
mov
js
movsb
rcrb
mov
push
fs
pop
lods
cmp
jp
mov
mov
lret
adc
ss
loopew
shlb
sarb
outsb
dec
mull
in
lret
xchg
ds
imul
addr16
push
mov
mov
sbbl
or
jmp
mov
push
or
xrelease
into
sub
clc
sub
pop
stc
cmp
test
xor
pop
pusha
xor
movsb
fs
sub
in
stos
xchg
shlb
aaa
arpl
jp
push
in
xor
jo
hlt
push
jg
mov
mov
lahf
insl
ss
ret
fisubs
out
cwtl
xchg
filds
hlt
adc
sub
pushf
cltd
dec
mov
incl
ret
cmpsb
sbb
push
fcmovnbe
aaa
dec
mov
iret
aam
pushf
mov
mov
imul
lea
and
cs
pop
je
inc
rep
pushf
lods
mov
nop
jb
in
insb
out
mov
nop
stc
push
inc
sbb
cmc
xor
jg
sbb
mov
sbb
cmp
xchg
mov
mov
ret
mov
fwait
cmp
inc
out
sub
in
icebp
mov
push
cmp
xchg
sbbl
cmp
push
sub
mov
test
adc
mov
or
mov
imul
addl
fsts
popa
mov
xor
jp
and
cmpsl
jns
insb
pusha
or
fstpl
jecxz
mov
pop
xlat
enter
dec
xor
mov
inc
mov
jnp
notl
inc
movl
xchg
std
stos
orl
sti
push
ret
nop
mov
in
and
loop
sub
pop
pop
mov
cld
mov
bound
fstpt
in
jne
sbb
popf
jg
xchg
popf
test
dec
inc
inc
pop
sarl
lods
add
jnp
cs
sub
adc
mov
dec
push
iret
repz
or
mov
std
out
inc
cs
enter
push
push
pop
jne
cmp
sti
sbb
push
dec
mov
daa
or
cld
rcrl
push
jb
xorl
adc
mov
mov
mov
nop
xchg
rolb
cltd
dec
add
mov
mov
in
inc
bound
neg
jb
pop
cwtl
scas
mov
lds
xchg
jle
test
add
call
sbb
movsl
sahf
pop
loop
xchg
push
adc
xchg
sahf
std
dec
lock
dec
xchg
cmp
aas
lds
xchg
lcall
fistl
loop
das
adc
rcll
cltd
inc
jmp
jp
jmp
sbb
repz
or
pop
sbb
pop
jp
xor
adc
push
adc
sbb
jb
pop
fidivrl
push
loope
push
push
les
cmpsl
xor
in
jbe
adc
arpl
rcl
and
cli
rcr
int3
test
and
imul
inc
std
call
pushf
xor
ljmp
sub
fidivs
push
and
sub
test
pop
lock
daa
add
pop
rcpps
test
fisttps
addb
shlb
adc
pushf
jns
out
xchg
dec
clc
inc
dec
ss
fstps
add
lods
stos
inc
mov
mov
sub
dec
mov
xlat
push
push
popa
lret
stc
xor
mov
dec
sub
loopne
inc
mov
adc
daa
repz
aam
incl
jle
jnp
mov
enter
daa
decb
sbbl
test
iret
push
outsb
lret
popf
pop
xor
cmp
sub
cld
push
ret
sub
scas
call
pop
orps
xchg
push
lock
push
aaa
pop
cwtl
and
xor
lods
out
jg
add
lods
push
inc
mov
jb
and
inc
call
rclb
les
orl
and
repz
aad
lret
and
adc
add
dec
in
push
push
or
inc
aad
jae
or
aad
cmovno
xchg
ljmp
fs
sbb
outsb
push
iret
pop
and
mov
int3
jae
rolb
mov
loop
xor
roll
mov
repnz
fisubrs
in
add
mov
test
xchg
std
stc
popa
lret
jecxz
aas
fidivl
mov
in
in
arpl
and
mov
lea
push
in
fsubl
imul
add
push
arpl
jb
push
mov
cmc
hlt
aas
push
pusha
dec
lret
mov
inc
push
sub
cwtl
push
xor
addr16
jecxz
push
sbb
je
inc
push
xchg
sbb
pushf
popl
cmp
or
xchg
mov
cwtl
mov
push
and
sub
xchg
stos
jne
leave
cmpsb
mov
enter
push
iret
pop
popf
inc
repz
rol
bound
inc
mov
sub
lods
repz
orb
mov
mov
add
lret
cmp
mov
inc
xor
addl
fcomps
jmp
popf
shr
jl
mov
loopne
lcall
pop
sbb
pop
and
fdivl
jl
xchg
or
adc
aas
lds
mov
and
shr
arpl
mov
sub
idiv
or
shll
cmc
or
add
cmpsl
dec
fisubl
push
push
test
xchg
addr16
xchg
aad
xor
dec
pop
or
test
jg
mov
xchg
sbb
cmc
and
scas
lds
xchg
xchg
out
popf
xchg
mov
in
jp
insb
ret
xchg
sbb
push
inc
sbb
dec
xchg
emms
cmp
sbbb
stc
ljmp
jnp
inc
mov
cmp
in
pusha
or
or
push
setne
clc
push
mov
jbe
push
stos
stc
lcall
push
push
jp
jns
push
fistps
inc
out
or
jo
xchg
mov
cs
enter
jmp
inc
cmp
pop
xor
arpl
sub
lret
push
inc
sub
fimull
inc
call
push
std
xchg
les
sahf
decb
jp
stos
mov
jb
insb
jle
arpl
mov
or
pop
jbe
mov
testl
les
adc
mov
iret
sbb
and
gs
addr16
sbb
sub
sub
cmpsb
scas
aad
mov
mov
les
in
dec
inc
bound
adc
dec
rolb
pop
push
mov
push
pop
aad
mov
dec
scas
mov
fstpl
mov
in
and
dec
loopne
or
adc
jecxz
push
xchg
mov
testb
frstor
ja
movsl
xchg
jns
cmpb
xor
mov
inc
xor
sbb
xorb
or
xor
sub
cmpsl
int3
scas
push
jmp
in
stc
shlb
flds
mov
mov
mov
lcall
fidivs
ds
ret
in
mov
pop
jge
mov
pop
nop
inc
sub
pop
and
inc
hlt
dec
in
pop
fsts
add
imulb
pop
lret
sbb
mov
xchg
imul
jp
xchg
mov
mov
addr16
or
pop
or
mov
sub
xchg
movsb
push
push
pop
lret
push
sub
xchg
jmp
je
pop
aas
adc
dec
pushf
mov
mov
push
mov
push
das
xchg
xchg
test
lret
adc
push
push
jg
cmp
pusha
mov
insb
push
pop
mov
ds
add
xlat
sbb
mov
inc
mov
fxch
pop
insl
aaa
and
or
mov
xchg
gs
and
clc
sub
xlat
leave
mov
insb
xor
in
in
inc
jae
aad
sub
ret
mov
adc
loop
fldenv
push
shlb
adc
cmp
and
pop
leave
push
mov
and
adc
or
inc
leave
sub
inc
mov
jmp
sub
sbb
fidivrs
dec
test
mov
shrl
jb
incb
icebp
fidivrl
and
ss
mov
cwtl
jns
pop
dec
stc
xor
xor
cmpsl
mov
and
jbe
jmp
inc
xchg
lcall
lahf
ds
push
int
fdivrl
loope
pop
pop
or
ret
inc
cmp
mov
jb
push
shrl
add
mov
mov
bound
enter
test
inc
mov
movl
lods
fidivl
mov
mov
gs
js
das
xor
adc
mov
mov
and
fldt
ss
ss
ret
cmpsb
inc
aas
push
mov
repnz
leave
dec
test
fs
out
xlat
inc
lret
popa
and
call
push
mov
push
mov
xor
push
push
and
cmc
mov
xor
dec
out
popf
sbb
les
flds
jmp
ds
iret
gs
aas
push
add
mov
pop
jne
jb
push
cmp
stos
pop
mov
lea
cmp
ds
mov
lahf
test
stos
pop
xchg
mov
mov
adc
adc
std
es
insb
int3
dec
pop
cltd
or
imul
out
subb
cli
ret
cltd
mov
cmp
jnp
xchg
and
movsl
rol
push
mov
pop
dec
in
and
stc
sti
cli
push
or
imul
lret
out
add
cmp
jnp
in
sbb
out
out
dec
inc
aaa
pushf
andb
hlt
outsl
icebp
and
mov
sti
push
sub
leave
mov
negb
push
cli
mov
add
mov
pop
movsl
or
mov
lods
outsl
sub
adc
push
jne
dec
dec
fdiv
jg
addb
lea
jmp
stos
cld
mov
or
repnz
add
int3
test
cmp
daa
adc
add
add
dec
subl
sub
lahf
adc
pop
test
jbe
xor
icebp
repz
jns
mov
jp
mov
mov
push
pop
xchg
cmc
sub
cs
js
cld
sarl
sahf
xor
pop
out
push
dec
and
addr16
in
add
mov
faddl
push
or
insb
rcrb
frstor
xchg
push
fiaddl
pop
fmuls
mov
frstor
inc
insb
push
sub
mov
jge
mov
and
dec
sub
test
movaps
push
sbb
shr
js
jp
test
adc
inc
leave
in
aaa
lahf
inc
sub
incb
aas
icebp
xor
out
xorl
lea
jmp
in
or
pop
les
jmp
test
mov
sbbl
inc
pop
scas
icebp
test
push
das
jbe
sub
xor
sub
jnp
xlat
sti
bnd
xchg
iret
add
pop
and
and
lods
fdivrl
inc
jns
fldl2t
xor
std
aad
add
and
inc
lret
xchg
push
sub
mov
adc
fldt
mov
and
lret
lock
pop
hlt
adc
test
inc
jmp
sub
stos
xchg
out
dec
push
loope
and
xor
xlat
fwait
jne
adc
dec
pop
stos
insb
sbb
push
push
or
dec
adc
ficompl
mov
xor
xchg
test
mov
adc
pop
add
std
add
jmp
sbb
push
jg
jmp
jecxz
mov
mov
inc
into
dec
mov
xchg
stc
insl
in
mov
out
xchg
movsl
inc
es
fcmovbe
lret
sbb
neg
cwtl
cmc
sti
or
mov
cs
lock
xor
hlt
push
add
jg
jl
jge
nopl
je
repnz
and
push
xchg
lods
in
sbb
xor
int
lds
sub
inc
sbb
gs
mov
adc
jl
dec
inc
push
inc
adc
lret
iret
int3
xor
iret
lods
xor
pop
dec
dec
or
cli
mov
mov
ljmp
sbb
test
movsb
adc
loopne
lcall
push
sub
loope
cmc
lret
inc
dec
loop
icebp
mov
jg
rep
xor
lret
inc
cmp
test
lock
xor
imul
inc
add
xor
lds
jb
mov
or
pop
push
inc
jmp
or
jmp
or
push
pop
rcrl
inc
fs
and
nop
mov
inc
jb
test
or
cltd
pusha
mov
inc
cwtl
mov
imul
xor
dec
mov
cmpsb
int
cmp
or
xchg
mov
lahf
mov
sub
fmuls
jge
addr16
mov
inc
and
push
jl
mov
jecxz
or
test
scas
cmpsb
mov
aas
popa
push
int
test
fiaddl
sbb
shlb
sub
jne
rolb
xchg
or
adc
pop
push
adc
addb
out
push
push
aam
mov
nop
out
inc
imul
mov
pop
dec
insl
xchg
push
xor
cs
lods
xlat
out
mov
mov
mov
inc
fs
dec
cmpsl
hlt
fisttpl
xchg
push
mov
rcl
and
push
sbb
sbb
cmp
out
ljmp
test
ja
lods
pop
adc
rol
sub
lods
test
cmc
fldl
push
std
push
push
bts
popf
ds
test
sbb
pop
mov
testb
and
adc
lcall
inc
adc
arpl
push
jge
and
loopne
cs
andb
imul
mov
test
mov
inc
popf
push
lock
or
lahf
push
stos
jne
dec
pop
stos
sahf
add
adc
rclb
inc
jmp
mov
mov
dec
js
int
clc
loop
pop
loopne
out
stos
xor
out
mov
pop
jmp
dec
dec
xor
sbb
jmp
xorl
push
sarl
jb
add
mov
cs
in
xor
leave
push
test
pushf
popf
insl
and
mov
sar
mov
sub
test
testl
aam
icebp
pop
mov
mov
mov
arpl
popa
adc
adc
ret
add
mov
adc
enter
xor
out
mov
or
sbb
mov
push
test
push
arpl
push
fisubrs
ror
test
adc
add
daa
in
orl
imul
or
push
jb
subb
mov
rorl
cli
jns
mov
sbb
mov
inc
sbb
add
stos
dec
popf
jne
es
lcall
dec
dec
xor
mov
lret
push
leave
jge
sbb
cmpsb
in
sub
dec
and
mov
xchg
and
daa
aaa
data16
rorb
add
mov
mov
cmp
fstp
push
adc
gs
pop
mov
push
or
popa
sbb
les
arpl
stos
nop
lods
inc
test
sub
pop
xchg
mov
inc
mov
popf
das
push
int
out
xor
notl
loope
popf
test
ficomps
pop
addl
inc
sub
or
mov
addr16
jmp
xchg
mov
xor
adc
mov
jae
flds
sub
popa
fs
xchg
adc
rcrb
fsubr
call
daa
jl
pop
xchg
add
push
stos
pop
shl
icebp
fidivrl
add
fs
test
not
push
jg
pop
pop
mov
push
xchg
aam
stos
ret
popa
add
adc
push
sbb
sub
cmp
cwtl
sarb
lods
loop
popf
and
sub
iret
lahf
jo
pop
dec
pop
xchg
scas
sub
pop
dec
jnp
popf
pop
cmp
or
sbb
adc
mov
loope
test
xchg
enter
fsts
popf
repnz
into
push
push
sub
add
push
je
lods
xchg
setns
cmp
mov
mov
xchg
or
pop
lods
mov
pslld
sub
mov
into
xor
pop
test
mov
movsl
jge
cmp
inc
fnstsw
mov
loopne
mov
js
pop
aas
jbe
test
inc
jg
mov
lods
mov
les
push
push
movsl
sub
sub
fisubrl
mov
rcrb
pop
aaa
aaa
cmp
dec
stos
fcoml
lcall
cs
fs
jns
push
push
cmpsb
cmc
pop
xor
push
in
sbb
pop
cs
pop
jns
dec
xchg
jne
mov
stos
sbb
scas
scas
inc
lahf
inc
xchg
mov
inc
test
mov
mov
in
dec
mov
mov
out
movsl
adcb
inc
addr16
add
fldcw
jmp
js
rorl
das
sbb
push
mov
adc
lahf
cmp
xor
mov
into
sar
cmpsl
inc
xchg
sbb
fmull
int
or
xor
iret
jl
dec
sub
rcrl
test
push
mov
dec
pop
jge
les
adc
shlb
iret
addr16
mulb
cmp
ja
xor
mov
ret
jb
cmp
and
cli
lods
pushf
xchg
xchg
fadds
inc
leave
lods
inc
out
adc
mov
je
arpl
cmp
mov
in
dec
jno
stc
cli
outsl
add
inc
mov
mov
cmp
xor
push
adc
mov
lahf
das
flds
lods
stc
cmpsl
jae
out
mov
clc
mov
mov
push
xor
cli
mov
in
cmp
loopne
pop
std
lods
xor
loopne
outsl
sub
xchg
xchg
sub
pusha
lock
lods
sbb
push
xchg
jmp
icebp
pop
leave
fwait
jb
jl
cltd
push
pop
cmp
xchg
jbe
int
sbb
jg
orl
cmc
out
loope
imul
in
push
pop
sarb
push
test
test
jecxz
and
into
mov
inc
push
sbb
lret
xor
sbb
data16
jo
orb
icebp
push
dec
insb
gs
call
push
xchg
adc
and
pop
mov
hlt
in
outsl
cmp
sub
mov
cmpsb
xchg
in
push
clc
jno
xchg
sbb
dec
out
stc
mov
mov
test
aad
scas
lret
xchg
fstps
push
cmp
aaa
mov
repz
mov
scas
inc
std
scas
out
add
mov
scas
out
push
int
pop
fs
push
adc
lret
push
ds
adc
movsl
mov
pusha
pop
lret
jg
push
sub
jne
xorl
mov
adc
sbb
repz
add
test
xchg
inc
mov
inc
xchg
adc
inc
fimull
in
adc
jmp
inc
and
push
mov
shrb
xor
inc
mov
adc
test
pop
mov
outsb
sahf
xor
jb
add
lock
push
aad
loopne
jbe
jp
push
pusha
sbb
lock
add
xor
stos
jl
sbb
sbbl
and
inc
repz
and
sub
nop
pop
shlb
ss
nop
lret
das
sub
gs
mov
sub
testb
push
cmp
jl
cmp
mov
in
pusha
popf
repnz
pop
cmpsb
push
mov
in
sbb
sbb
int
orl
movsb
adc
push
mov
repnz
shll
out
inc
repz
pop
sub
dec
pop
mov
xchg
lcall
dec
jle
pop
cld
ret
inc
aaa
inc
adc
leave
and
scas
insb
pop
cmp
xor
add
test
dec
fdivl
dec
inc
outsb
ja
jmp
ds
sub
jbe
cld
sti
jg
je
and
mov
filds
add
xchg
mov
add
add
out
mov
out
dec
daa
xlat
or
dec
push
mov
lock
subb
dec
jp
jge
pop
scas
rorb
ja
cwtl
arpl
xlat
jmp
dec
mov
test
sub
leave
stos
cwtl
les
icebp
pop
scas
inc
cmc
push
in
mov
jg
sub
stos
jle
lods
int3
push
pop
shl
lds
rclb
jnp
ret
mov
cli
sbb
mov
scas
out
dec
cmc
jae
xor
inc
xlat
and
rolb
xor
test
add
sbbb
jne
sbb
daa
fs
fs
dec
adc
jne
popf
aam
inc
insl
orl
mov
movsb
pop
xor
shll
mov
pop
mov
pop
das
cmp
xchg
push
clc
inc
sahf
xchg
sbb
out
movswl
test
rcll
mov
inc
in
xor
rcll
repnz
xchg
loopne
pop
add
das
icebp
das
xor
popf
aaa
pop
enter
fcompl
leave
mov
lock
mov
mov
push
xor
push
mov
jmp
push
mov
mov
sbb
dec
mov
jg
faddl
add
mov
shlb
stos
fisubrl
aad
or
add
mov
dec
shlb
xor
movsb
cwtl
xchg
fwait
mov
sub
fdiv
out
iret
ret
adc
xchg
cmp
pop
dec
inc
push
xchg
insb
xchg
movsl
sub
cmp
ja
pop
outsl
adc
mov
scas
jp
mov
imul
arpl
cltd
ds
xor
push
loope
test
imul
jecxz
push
cmp
mov
orb
sub
and
addr16
aam
fisubrl
or
sub
pop
or
bnd
out
out
daa
sar
push
shrl
iret
add
inc
aam
mov
andb
sbb
pop
cmp
mov
sarl
mov
test
jecxz
lock
xchg
xor
out
je
loop
inc
add
out
xor
sbb
mov
xchg
ja
pop
icebp
cmp
hlt
cli
cwtl
jb
sbb
cmp
das
jecxz
outsb
sub
add
inc
mov
sbb
iret
xor
mov
ds
xchg
shr
ret
pop
movsl
cld
mov
mov
ja
cli
push
js
dec
add
xchg
rcll
cmp
dec
cmp
scas
int
add
cmpsl
nop
outsl
cltd
mov
icebp
andb
sti
mov
jp
repz
dec
cmpsl
dec
addr16
mov
pusha
std
lods
pop
sub
xor
adc
jle
push
in
mov
and
arpl
pusha
sahf
int
xor
and
in
xor
adc
push
xor
jecxz
sbb
mov
sub
adc
xor
pushl
out
pop
orb
dec
lahf
lods
jmp
mov
dec
push
sbb
incb
lods
dec
cmp
dec
mov
dec
daa
inc
cmp
mov
sti
xor
add
mov
sarb
popf
daa
je
enter
out
xchg
ret
adc
sub
nop
repz
add
push
mov
nop
fnsave
leave
dec
int
insl
jne
fucomp
fwait
in
lods
mov
jl
mov
adc
dec
movb
push
dec
and
cs
hlt
or
mov
pop
aaa
or
xorl
lods
es
movl
xor
xor
cmp
pop
ret
xchg
cmp
repnz
inc
push
adc
jno
daa
mov
loop
mov
mov
lahf
jmp
popf
mov
pop
imul
stos
cmpsb
loop
cmc
xorl
push
xchg
scas
and
adc
cmp
inc
or
xor
popf
je
outsl
adc
xor
std
pop
cmpsl
inc
sub
ljmp
dec
xor
js
cld
sub
lea
jae
pop
push
dec
cwtl
popa
inc
sub
outsl
pop
adc
sub
rclb
stos
xor
pop
lcall
dec
lahf
mov
or
mov
imul
bound
ljmp
xor
mov
mov
push
mov
push
jle
cmp
mov
cltd
and
mov
scas
add
fwait
movsb
out
sub
out
adc
insl
mov
icebp
dec
popf
push
and
xchg
shlb
addr16
enter
sahf
push
mov
icebp
or
sbb
insb
adc
or
cmpsl
inc
adc
cmp
cmp
mov
push
xchg
or
dec
inc
iret
mov
or
xor
push
add
dec
cltd
addr16
dec
jns
add
nop
in
mov
dec
out
ds
call
out
mov
sub
pop
rorl
pop
push
adc
jge
mov
mov
stos
lcall
test
xchg
adc
jl
mov
dec
cmp
into
push
cmpsb
push
pop
jno
adc
clc
rolb
push
test
mov
pop
push
mov
sub
loopne
inc
push
cmp
cmpsl
jp
sahf
sbb
js
addl
and
aaa
and
dec
sbb
sub
mov
stos
push
push
jae
mov
jmp
dec
and
push
dec
sbb
stc
insl
bound
icebp
and
and
jg
fcoms
xchg
aas
cwtl
mov
jle
out
add
push
fstps
sub
mov
mov
cmp
stc
decb
mov
jge
dec
or
int
ret
lods
inc
cld
adc
mov
mov
mov
dec
in
inc
pushf
shrl
inc
loop
adc
xor
xor
mov
pop
in
cs
inc
arpl
fldt
mov
adc
mov
adc
fcom
pushf
or
jne
dec
mov
sbb
cli
push
rclb
jge
mov
inc
das
ret
jmp
dec
out
mov
or
loope
jne
pop
dec
cmp
cld
mov
sbb
mov
xor
mov
pop
mov
xchg
into
and
jns
push
enter
push
pop
test
cmp
and
cmp
xchg
pop
pop
adc
cltd
push
movsb
cltd
fnstsw
into
mov
adcl
push
push
sub
pop
pop
or
out
pop
mov
stos
lret
mov
lret
pop
cmp
std
sub
sub
pop
xchg
xchg
sub
fiaddl
and
mov
fsubrl
xor
mov
daa
mov
pop
out
adc
aam
mov
jge
leave
fsubs
mov
pop
dec
mov
shrb
fstpt
pop
mov
daa
sub
jmp
popf
clc
push
adc
sbb
mov
outsb
popf
xor
loopne
popa
jmp
xchg
cld
fiadds
dec
xor
cmp
push
and
cmpl
xlat
mov
mov
pop
push
sub
push
add
cwtl
dec
or
push
mov
inc
js
or
fs
pop
cmp
lock
je
pusha
adc
cmp
ficomps
pop
cmp
push
jnp
repnz
out
ss
lret
int
inc
sub
and
arpl
in
outsb
lahf
dec
das
jns
fistpll
jg
push
inc
add
stos
ds
sub
xor
push
or
int3
lods
mov
in
jne
xchg
popf
push
mov
add
data16
cmp
data16
jne
mov
jl
mov
lcall
testl
mov
jno
fstl
fadd
mov
mov
mov
mov
pop
mov
inc
cmpsb
and
cmp
pop
or
mov
xor
jg
fsubs
aas
push
inc
mov
dec
dec
add
add
aam
cmp
or
sub
sbb
daa
aam
xchg
lret
push
sbb
jnp
jg
lods
push
shlb
ljmp
gs
sub
mov
cs
clc
ret
add
stos
lods
mov
lret
fs
or
repnz
ljmp
clc
pop
add
jnp
out
inc
lods
je
pop
xor
xlat
xor
int3
fisubrs
push
mov
insl
aas
sti
icebp
ret
mov
popf
pop
pop
mov
mov
aam
add
push
cs
mov
mov
or
bound
push
push
cmc
inc
or
fwait
lds
ds
push
dec
test
pop
lods
outsl
add
pop
xchg
addb
pop
imul
pop
push
sbb
cmc
pop
int
leave
pop
xchg
dec
pop
xor
pop
xchg
xlat
and
xlat
pop
fisttpl
bound
adc
inc
loopne
in
insl
bound
nop
insl
mov
lock
push
lcall
pop
imul
push
nop
cwtl
insb
ss
shlb
out
sub
sub
into
xor
adc
mov
mov
and
or
inc
stos
mov
aaa
xchg
and
sahf
cmp
xchg
xchg
stos
imul
inc
insl
lods
push
push
rolb
xchg
jmp
add
cmp
inc
je
fisttpll
incl
sub
lds
cmp
mov
dec
xchg
adc
or
aas
xor
sti
add
shll
mov
xchg
adc
rdmsr
xchg
jno
sbb
test
icebp
scas
push
adc
jl
cmp
fsubr
dec
out
jbe
inc
cmp
int
dec
mov
das
jne
lods
xor
test
test
dec
add
inc
inc
sub
adc
lods
cmpl
or
inc
mov
sarb
adc
cmp
ja
add
jns
mov
inc
xchg
mov
xlat
out
test
daa
ss
xor
outsl
inc
adc
push
mov
cmp
cwtl
sbb
in
sub
in
sbb
push
lods
push
sub
scas
xor
mov
ret
inc
and
push
inc
adc
sbb
ljmp
jbe
pop
sbb
cmp
mov
push
jo
mov
shl
mov
jne
adc
inc
cmp
add
xor
pop
jo
lods
andl
je
jp
shll
push
loope
cmp
jno
cs
push
cwtl
xchg
dec
outsb
fsubl
jae
mov
and
pushf
sub
roll
es
test
movsb
cmc
loopne
icebp
or
jmp
pop
add
data16
in
xchg
jbe
movsl
ss
pop
jns
cmp
pop
push
stc
pushf
lock
mov
add
in
xchg
mov
push
testb
cmp
jl
mov
mov
jnp
mov
mov
and
pop
out
pop
inc
mov
test
lods
int
dec
js
out
repz
pop
fs
aad
dec
sub
in
mov
test
inc
mov
dec
mov
arpl
or
stc
sbbb
adc
xor
fidivrl
fstpt
rorl
aam
sarb
lods
aad
ds
adc
icebp
inc
or
cmc
stc
aas
adc
push
dec
and
jns
xchg
and
pop
push
adc
mov
jne
iret
lret
daa
add
xchg
rorl
lcall
fimuls
fs
push
sbb
in
mov
xchg
jp
sahf
mov
cs
std
inc
jle
fistpl
test
insb
in
mov
gs
xchg
sbb
push
adc
in
sub
xchg
xchg
and
lahf
es
lock
pop
out
scas
dec
lods
ret
out
je
fnstcw
push
ja
cmpsl
movsb
in
lret
mov
das
fldenv
test
out
xchg
out
adc
cli
rcrb
inc
cmc
adc
mov
mov
adc
sub
xchg
inc
scas
mov
pop
pop
cltd
xor
mov
loope
ss
xchg
les
mov
inc
and
push
jecxz
sbb
sub
push
pusha
adc
jecxz
mov
xchg
ja
sbb
sbb
xor
insb
lods
jae
inc
bnd
out
call
sbb
int
pop
fwait
push
and
in
mov
mov
movsb
cltd
xchg
jmp
dec
insl
and
xchg
mov
hlt
jg
and
pushf
aam
add
adc
loopne
js
cltd
xchg
push
jo
test
repz
jg
or
cmp
xchg
add
dec
lcall
std
push
in
movsl
nop
pop
sub
jne
int3
and
xor
and
inc
pop
pop
jp
in
add
mov
xlat
lcall
rol
add
xor
mov
sub
int
scas
pop
dec
adc
or
cmpsl
lret
dec
call
add
dec
add
mov
ja
jmp
ja
cld
jne
and
cli
and
sub
mov
xor
push
aaa
sub
lds
rcll
jmp
cltd
xor
jbe
outsb
loop
cmp
jmp
ljmp
ret
fidivl
sbb
outsl
cmp
jno
cltd
gs
xchg
test
cmpsb
jmp
jecxz
pop
out
pop
xchg
out
in
push
mov
push
push
hlt
cwtl
jp
loope
push
scas
pushf
jns
sub
dec
cmp
mov
enter
fcoms
push
push
xchg
insb
mov
mov
and
js
pop
mov
mov
test
daa
fstps
orb
cld
inc
jle
sar
test
hlt
add
or
std
loop
sub
jl
ficoml
outsb
aam
push
data16
xor
add
imul
movsb
cmc
xor
add
sub
leave
ja
mov
ljmp
sub
adc
dec
jge
daa
sub
jns
xor
lods
mov
nop
test
xchg
adc
mov
stos
push
test
fwait
das
dec
aam
jg
jge
and
arpl
icebp
enter
aaa
repz
ret
int3
test
nop
popa
loopne
hlt
mov
jge
sbb
hlt
in
or
sbb
mov
adc
mov
ficompl
jecxz
orl
rorl
call
out
rcrl
xchg
xchg
jb
lret
hlt
lret
push
or
adc
imul
lcall
daa
mov
movsl
call
test
clc
sti
out
cmp
inc
push
push
jb
mov
add
dec
or
cmpsl
cltd
cld
cltd
scas
ja
dec
je
jmp
xchg
cmpsl
out
xor
jbe
and
push
xchg
mov
or
push
or
int
xchg
xor
mov
sub
test
mov
jae
dec
mov
sti
lds
ss
dec
pop
jo
xchg
inc
int
xchg
nop
sbb
mov
sbb
mov
xlat
add
xlat
lahf
pushf
jle
movsb
femms
or
je
sbb
push
call
test
adc
lods
mov
ss
cs
pop
fcmovu
hlt
adc
dec
ret
loopne
dec
or
movsl
arpl
bound
inc
test
add
test
and
dec
ret
cmc
adc
icebp
testb
int
add
sub
repz
jl
push
push
sub
ljmp
sub
mov
adc
and
pop
or
jge
mov
cli
adc
and
gs
fmul
fcoml
and
addb
dec
insl
lods
xor
in
xchg
mov
add
jl
jb
in
pop
mov
jbe
stc
or
jns
mov
xchg
pushf
add
mov
aaa
mov
gs
push
lcall
push
mov
mov
inc
jg
ret
test
and
inc
adc
and
jl
jmp
mov
andl
cmp
dec
popf
inc
fnstcw
inc
mov
jne
imul
xor
jmp
jmp
pop
shr
shrb
sub
mov
mov
jmp
enter
fadds
xor
outsb
xor
adc
sarl
inc
add
cmp
and
cwtl
xlat
insl
fmull
pop
test
xorb
dec
int
adc
rcrl
pushf
stos
mulb
jecxz
test
jge
loope
les
nop
stos
jo
mov
mov
fldenv
mov
cli
call
xor
pop
cmp
cmp
inc
out
mov
add
and
mov
pushf
cmpsl
mov
push
rorb
xchg
in
stos
xor
hlt
adc
int3
adc
into
int3
pop
sbb
dec
aad
dec
mov
xchg
cmpps
imul
lods
call
fistps
cs
push
and
cmc
mov
xlat
enter
sub
cmc
xchg
xor
mov
sub
push
cld
nop
leave
or
jmp
mov
dec
cmp
mov
pusha
xor
jns
repz
jp
cmpl
es
cmp
or
lea
sbbl
subb
rcrl
iret
mov
add
call
adcl
and
rorl
mov
imul
mov
and
inc
dec
mov
gs
add
xor
mov
in
mov
in
dec
adc
adc
push
jmp
xor
push
add
mov
xor
xchg
and
push
xlat
cltd
aaa
out
or
pop
test
push
jno
sbb
adc
jecxz
push
xor
sti
cli
or
fstpt
sbb
jp
arpl
mov
xchg
cmpsl
mov
sbb
jl
jg
subl
cmp
fs
dec
shlb
push
cltd
pop
in
pop
pop
testl
mov
jb
das
fbld
into
mov
cwtl
shl
inc
fstpt
push
mov
jno
xchg
dec
sub
out
dec
sbb
jnp
fistpll
fldcw
xchg
fisttpl
jne
into
or
jbe
sbb
xchg
dec
repz
pop
hlt
mov
mov
aad
cwtl
jns
push
lods
jbe
std
pop
pop
test
xlat
xchg
inc
push
fcomp
fistl
xchg
clc
cli
pop
pop
por
pop
scas
insb
pop
repz
add
push
push
imul
imul
mov
mov
movsb
inc
ja
hlt
mov
push
add
add
jge
adc
push
mov
xchg
inc
icebp
rolb
sbb
sub
filds
and
fmuls
add
enter
subb
xor
iret
add
enter
pusha
nop
in
and
cld
cmp
mov
jo
cld
or
or
fs
cltd
ljmp
xchg
cmpsb
fnstcw
ja
in
mov
inc
loope
xchg
scas
je
push
xchg
mov
inc
fs
add
or
fisttps
mov
jbe
push
push
mov
int
push
ret
fstl
or
imul
xor
call
mov
fdivl
inc
je
jb
in
pop
cmp
pop
cmp
or
pop
sbb
in
into
insb
fs
fldt
push
scas
sbb
mov
insl
adc
pop
lea
mov
adc
dec
lock
das
mov
or
lahf
hlt
cwtl
leave
push
sbb
shl
cld
xchg
in
push
and
sbb
jbe
leave
test
cmp
sbb
iret
jb
push
or
scas
and
pop
jo
push
sbbb
ds
int
pop
in
loopne
cs
sbb
es
lcall
ljmp
mov
hlt
insb
cmpl
out
ja
lret
jae
loop
pushf
fsubs
iret
neg
add
inc
inc
insl
cmp
add
jmp
int3
loopne
inc
je
lods
fwait
je
jns
jno
lret
int3
pop
dec
and
cmp
sbb
loope
ss
daa
test
scas
in
mov
mov
push
repnz
stos
out
add
dec
rorb
cmp
or
rorb
repnz
shrl
sub
cmp
pop
dec
xor
lahf
add
xchg
pop
sbb
rclb
and
shlb
cltd
sub
and
adc
mov
shrb
orl
ret
sbb
lcall
add
cmp
push
inc
mov
push
pop
loop
push
out
pop
fs
stc
push
aas
dec
call
jmp
imul
cmp
pop
scas
testl
call
or
jg
mov
push
mov
inc
pop
adc
mov
popa
push
adc
das
push
xchg
dec
outsb
pusha
inc
int
shrb
xor
cmp
adc
jp
outsl
mov
xchg
notb
je
notb
ret
dec
scas
push
repnz
and
test
push
lods
sbb
push
sub
inc
sub
loopne
sub
pushf
push
lret
mov
adc
cld
push
dec
orb
fs
arpl
xor
das
pop
int
ffreep
sub
cmpsb
push
bound
mov
popf
inc
adc
jo
mov
cmp
data16
std
adc
stos
push
push
icebp
cmpsb
mov
mov
lret
adc
scas
fnstsw
rcl
jg
xchg
push
xlat
push
idivb
enter
xlat
pop
das
mov
push
mov
lret
je
jmp
mov
lahf
out
lret
sbb
jg
cmc
repz
nop
inc
lret
xchg
call
mov
sbb
dec
dec
sub
in
lcall
ret
xchg
mov
punpcklbw
je
into
in
lret
push
daa
hlt
gs
fwait
and
mov
mov
xlat
mov
jo
test
insb
sarl
adc
and
in
push
pop
stos
sbb
dec
dec
test
testb
sbb
mov
ret
test
test
inc
fs
jb
xlat
adc
add
jp
sti
cmpsl
daa
ljmp
add
ljmp
call
adc
sti
xchg
cmp
sub
push
testw
xor
pop
imul
mov
mov
pop
call
and
std
jg
bnd
fdivr
jbe
arpl
mov
leave
lahf
shrb
test
sbb
mov
and
xor
dec
lret
sub
cmp
push
cmp
jecxz
je
jle
outsl
stos
mov
jne
sahf
or
divb
sbb
inc
fists
lds
shlb
jmp
push
std
repnz
je
fistpll
bound
push
pop
dec
ret
push
lods
jmp
enter
pop
xchg
scas
pop
fldt
insb
xchg
mov
lret
mov
push
cmp
dec
mov
mov
dec
dec
dec
in
sbb
int3
xchg
xor
fidivrs
das
jne
insb
xchg
rcl
xchg
jbe
xor
jle
daa
xchg
fneni(8087
xorl
xor
out
out
insb
fcomps
enter
inc
scas
jae
jge
inc
mov
pop
adc
data16
test
and
xchg
pop
dec
push
and
aam
es
std
push
js
sub
xor
imul
cmp
cli
jb
das
pop
jmp
mov
mov
lock
loop
fcoml
out
xor
mov
xor
xchg
into
call
xchg
insb
pop
dec
scas
sbb
sbb
mov
mov
sub
decb
jecxz
mov
push
push
xor
push
xchg
sbb
sbb
and
insb
xchg
and
ficompl
in
cli
imul
xchg
test
sbb
fcos
sub
and
dec
inc
or
scas
mov
mov
nop
fcmovnb
int3
mov
pop
jmp
mov
cs
addl
jns
inc
int3
jge
mov
gs
or
cld
stos
mov
daa
push
sbb
or
pop
sti
loopne
cs
andb
xor
push
insl
aad
nop
mov
cli
and
push
je
mov
daa
in
sbbl
xor
enter
fstps
jg
test
incl
pusha
outsl
nop
sbb
xor
or
inc
xor
rolb
pop
adc
jmp
fwait
sub
xchg
xchg
dec
lock
cli
shll
call
push
loope
cmc
pop
mov
ss
xchg
out
mov
xor
push
pop
adc
add
mov
mov
jp
rcr
shrb
pop
icebp
push
scas
pop
jne
sub
mov
mov
adcb
and
xor
cli
test
pop
mov
stos
add
inc
inc
imul
mov
int3
sub
out
add
int
arpl
insl
mov
mov
mov
or
inc
out
and
into
mov
jno
mov
mov
insb
push
cmp
add
pusha
lods
adc
rcll
enter
rolb
or
std
mov
mov
nop
insl
into
mov
adc
cmp
mov
or
hlt
and
dec
ds
aam
xor
mov
jecxz
bound
xchg
sub
loop
shrb
ss
fcoms
in
mov
bound
and
sub
jmp
jbe,pn
xchg
xor
pop
sub
f2xm1
jmp
fmuls
sbbl
adc
int3
xor
push
clc
leave
push
das
xchg
cmpsb
mov
xor
sahf
xor
fildll
outsb
sahf
repnz
repnz
add
rol
lds
sub
das
aas
push
cld
cmp
incb
xlat
sbb
push
inc
imulb
aad
shl
jmp
bound
outsb
fdivrl
and
mov
or
dec
cmp
les
and
push
into
out
xchg
jns
out
out
xor
bound
int
enter
and
cs
mov
push
cltd
movsb
cmp
fsts
add
adc
push
or
mov
call
cmpsl
icebp
in
push
fcomps
sub
jbe
jbe
push
ljmp
repz
mov
into
std
push
stc
dec
xchg
xchg
adc
rcr
mov
sti
iret
ja
mov
mov
stos
mov
out
hlt
sahf
test
push
int3
cmpsb
mov
dec
cmpsl
rcrb
or
insb
lock
sub
jp
pop
pop
je
mov
xor
mov
dec
mov
mov
popa
add
imul
cmc
dec
mov
jg
cwtl
pop
mov
push
fmul
push
push
pop
cmp
xchg
inc
cmp
cmp
movsl
and
xor
sub
pop
cld
mov
sbb
push
sub
pop
repz
xchg
imul
adc
dec
popf
xchg
xor
scas
jne
ret
sahf
and
pop
imul
mov
and
cmp
inc
mov
and
mov
inc
stos
push
lret
icebp
pop
pop
cmp
jno
push
xchg
jge
movsl
clc
nop
and
dec
adc
xor
cmpsl
in
scas
popa
xchg
es
dec
test
push
jbe
jne
pop
ret
sub
xlat
test
int3
xor
pop
pop
xor
pop
insb
xor
fsubrs
pop
mov
ljmp
mov
adc
icebp
mull
push
imul
lds
xor
test
mov
addr16
cmp
mov
aad
pop
sbb
inc
jae
sbb
cmpb
add
jb
dec
push
addb
push
mov
mov
icebp
lds
hlt
or
iret
dec
cld
and
out
jle
js
out
mov
cmp
rolb
fcoml
nop
or
sub
faddl
repz
sbb
jle
sub
inc
icebp
or
ja
cld
pop
out
scas
xchg
cmp
push
pop
xor
insb
in
stos
mov
dec
je
push
push
stos
adc
out
sbb
inc
jbe
fimull
scas
sub
pop
loope
popf
jge
lret
pop
inc
and
imul
inc
xor
scas
pop
xchg
lock
jo
mov
add
mov
sub
pop
cmp
pop
push
xchg
xor
add
movsl
xchg
adc
scas
mov
cmp
lcall
adc
fidivrl
sub
dec
jl
in
popa
adc
push
pusha
adc
sarb
push
xorl
or
lods
or
sbb
add
enter
dec
imul
stos
mov
jns
in
inc
test
sub
and
fisttpl
dec
rcr
shlb
mov
xchg
popa
in
js
shll
cmp
sbb
pop
adc
in
mov
inc
jp
fildll
cmp
fsts
mov
jnp
fst
fwait
test
stos
jno
js
decb
mov
push
dec
mov
jmp
mov
mov
sbb
lock
jmp
fisttps
push
pop
fcompl
mov
jb
les
subb
mul
sbb
aad
xor
sti
imul
inc
stc
mov
fadds
jl
mov
insl
mov
daa
jecxz
pop
dec
mov
repnz
in
pop
dec
mov
lret
xchg
add
add
cmp
jae
jno
fildll
mov
xor
loope
int
pop
out
push
ret
sbb
sbb
ja
dec
jmp
dec
ficoms
icebp
lods
rcrb
jo
lahf
push
mov
dec
mov
cmp
std
outsb
pop
test
sub
lea
xchg
sbb
scas
mov
push
les
xor
adc
pop
mov
in
xor
clc
lea
adc
out
lock
sahf
shrl
mov
repz
call
das
jge
jno
sub
out
pop
or
and
subl
and
pop
ljmp
je
fnstsw
aad
xchg
mov
cmpsb
mov
mov
mov
int3
insl
stos
stos
xlat
mov
gs
stos
insb
mov
push
xor
sarl
loopne
fiadds
mov
sbbl
mov
cli
jg
dec
jle
in
sub
sbb
lret
inc
xor
dec
adc
nop
aaa
pop
add
iret
movsl
and
pop
out
scas
lahf
ljmp
cmpsb
push
jno
je
jle
dec
rorl
add
push
and
dec
in
loop
jl
repz
hlt
testl
adc
push
cmpsl
xchg
jbe
ja
dec
pop
adc
inc
cmpsl
enter
jl
pop
mov
cld
xorl
inc
and
fists
negl
scas
mov
adc
xchg
pop
mov
loop
je
cmp
lea
lcall
jae
out
test
imul
les
in
jnp
add
mov
movsb
enter
stos
jmp
fstps
leave
inc
or
mov
inc
adc
out
andl
and
sahf
nop
dec
dec
pop
test
mov
sub
stos
lods
mov
dec
stos
lret
xchg
mov
cltd
dec
fcmovnu
scas
lahf
adc
mov
rclb
or
pushl
out
hlt
cltd
adc
ds
fimull
data16
in
jne
movsl
into
xor
sbb
push
icebp
and
adc
add
stos
int
in
fwait
lods
sbb
dec
inc
jle
xchg
fwait
dec
mov
in
inc
loopne
lret
scas
xor
mov
out
loope
mov
jae
fstps
cmpsb
aaa
popa
pop
loopne
mov
sahf
push
xchg
cmp
adc
xchg
xor
mov
mov
scas
lcall
mov
je
and
jp
das
push
jp
mov
sbb
mov
mov
cmp
jg
insl
xor
xlat
mov
fsubrs
jnp
out
loop
sahf
cmpb
mov
popf
dec
cmp
je
ret
shrd
push
fistl
loope
sbb
push
es
lods
loop
nop
and
inc
aad
cmp
or
lds
xorb
insb
mov
fs
mov
insl
stos
add
test
cli
dec
movsl
or
bound
cs
je
test
loope
xchg
cwtl
xchg
iret
out
dec
xor
sahf
mov
ret
hlt
loopne
in
aad
jl
and
into
pop
out
js
shrl
sub
mov
cmp
lods
and
mov
lock
inc
lret
add
mov
test
in
mov
testb
jb
lods
test
jp
cmp
jecxz
fwait
mov
inc
test
fwait
loop
dec
sar
aaa
lods
popa
mov
mov
ljmp
pushf
insl
push
xor
test
sbb
push
pop
orl
stos
lcall
sub
ja
daa
pop
rorb
xchg
push
bound
cmc
faddl
fwait
jnp
xor
lods
pop
dec
lret
imul
imul
jmp
sbb
add
push
xor
jge
les
test
aaa
jl
add
xchg
dec
jp
push
inc
push
push
popf
xor
jb
and
fsubrl
popf
lods
movsb
push
dec
movsb
xor
pop
xchg
sbb
mov
cmovno
test
mov
xor
cmp
inc
push
popa
js
pop
add
lret
addr16
mov
mov
adc
in
xsha256
cmpsb
aam
sarb
pop
push
mov
enter
lea
shll
bnd
nop
scas
cmp
rorb
loopne
enter
or
call
addb
xlat
sub
dec
cmp
xor
jno
out
push
sub
xlat
insl
bound
repnz
and
and
cmp
and
out
loope
mov
test
mov
dec
arpl
jmp
inc
cs
popa
push
clc
in
iret
fcomp
lahf
mov
dec
inc
pop
addl
xchg
out
jbe
sbb
or
dec
mov
jae
insl
dec
mull
mov
movsl
jnp
xor
out
mov
in
stos
lock
inc
mov
repnz
xchg
outsb
movb
test
jg
mov
pop
repnz
push
pop
sub
mov
mov
dec
les
jp
inc
aad
insb
data16
stos
clc
jae
shrb
fcoms
or
mov
sbb
mov
lods
pop
dec
mov
dec
pop
lret
movsl
sahf
ret
roll
or
dec
sub
sarl
xchg
cmp
or
enter
mov
xor
mov
shl
and
mov
mov
pop
iret
fcomi
fisubrl
stc
xor
push
ljmp
je
loope
jl
mov
mov
cmp
ljmp
mov
idiv
sbb
adc
jp
push
out
push
mov
mull
push
addr16
movsb
cmpsb
daa
mov
movl
push
xchg
popa
xchg
xchg
popa
push
push
cmc
inc
lea
push
rcrb
pop
mov
in
lea
xlat
jnp
inc
out
dec
imulb
push
scas
dec
lahf
sbb
popf
insl
in
jle
jecxz
cmpl
sub
adc
cs
cmc
enter
xchg
mov
add
dec
les
mov
pop
pushf
mov
faddl
cs
roll
gs
lods
xchg
jns
jge
mov
xor
push
pop
outsb
mov
push
inc
sub
repnz
cmpsb
cld
das
fwait
je
add
fistpl
in
sub
cltd
jne
ret
sti
adc
mov
xchg
jge
fdivrs
cmp
js
scas
xchg
mov
cmp
sbb
rorb
xchg
lcall
aam
xchg
xor
pushf
inc
pop
into
movsl
jp
mov
fs
add
mov
jmp
xchg
jae
inc
and
daa
enter
jns
mov
xchg
adc
stc
lret
add
inc
pusha
inc
xchg
test
mov
jbe
cs
out
aas
xchg
aam
mov
rcrl
jae
add
shlb
out
dec
adc
push
les
mov
inc
mov
cmp
aam
push
jns
rcr
xchg
subb
jge
cmp
and
pop
add
ret
xchg
stc
xor
hlt
jnp
stc
push
arpl
pop
loop
push
ja
mov
sbb
sbb
popa
and
xchg
addl
lock
scas
fdivp
push
inc
cmp
mov
mov
pop
js
cmp
or
cmc
inc
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
movb
pusha
.byte
xchg
.byte
.byte
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
xor
adcl
fcoms
aas
ds
dec
scas
divb
loope
xor
mov
and
adc
xchg
dec
fsubr
or
xor
mov
and
adc
stc
mov
and
adc
mov
add
pushf
pop
add
jmp
call
stos
into
add
pop
jl
add
out
push
or
mov
sub
cmp
sub
mov
cmpsl
lds
popf
in
outsb
cmpsb
mov
mov
push
fdivrs
xor
in
adc
inc
sub
push
cltd
mov
mov
popf
loop
gs
xor
dec
cmp
aaa
adc
add
test
jp
and
sub
push
fcoms
ficoms
inc
mov
inc
and
pop
sub
arpl
mov
cmp
mov
xchg
dec
and
and
mov
dec
sti
jnp
fisubrl
inc
sbb
add
xchg
pop
pop
gs
aas
cmp
lret
pop
leave
gs
and
cpuid
faddl
push
repz
rcr
je
or
and
les
pop
loope
lea
ret
push
and
xor
dec
stos
cmp
push
mov
addr16
pop
loope
ss
push
insb
vmwrite
lock
xchg
adc
int3
imul
cmp
je
jg
out
mov
rcrl
aam
add
lods
adc
mov
pop
push
mov
pop
fldcw
mov
das
loopne
scas
xlat
xchg
fisubrs
stos
test
add
call
mov
repnz
or
xchg
icebp
push
jae
gs
popa
fwait
cltd
or
ja
pop
fadd
adc
ror
pop
imul
dec
dec
in
jle
mov
xor
pop
add
js
iret
mov
cmpsb
hlt
cmp
dec
xor
sbb
lahf
sub
test
lods
mov
pop
mov
sahf
in
sbb
stos
push
mov
push
mov
test
lret
pop
outsb
popa
hlt
push
pop
in
out
and
fiaddl
outsb
mov
jno
jg
push
insb
lds
cmp
inc
out
scas
lret
mov
test
push
sarb
subb
pop
push
addr16
inc
adc
add
bound
insb
lret
das
mov
lret
lret
mov
mov
mov
out
jecxz
out
jae
xchg
sub
cmp
into
out
test
daa
adc
adc
shrl
es
ficoml
dec
out
lds
scas
mov
cmp
or
xor
cmp
js
out
rcll
sub
movsl
or
adc
adc
and
lcall
jno
jg
aaa
sbb
lret
push
sti
lea
push
ret
jmp
ja
mov
lret
dec
shrb
fisubrl
scas
add
sbb
push
xorl
iret
filds
ja
xchg
push
cmp
cmp
fsts
movsb
out
ret
mov
aam
cmp
outsb
lock
pop
sub
test
mov
bound
and
xor
clc
iret
dec
mov
mov
dec
aas
dec
sub
mov
daa
fwait
jle
sub
test
jne
cld
jmp
mov
mov
pop
in
int3
imul
add
cmp
out
roll
mull
sub
push
xchg
bound
out
lods
mov
clc
sub
out
rcrl
mov
movsl
into
fdivs
xchg
dec
mov
test
jp
and
mov
or
lock
mov
pop
loope
inc
add
sbb
or
push
and
pop
or
mov
jle
out
arpl
xor
jns
and
loopne
cmp
add
and
cmp
aas
mov
cmc
stc
jecxz
xchg
test
jno
test
adcl
stos
jnp
push
and
inc
icebp
aas
jnp
push
jno
sbb
adc
xchg
sbb
sbb
into
std
icebp
je
mov
xor
imul
and
cmpsb
mov
push
insb
xchg
not
jb
mov
mov
inc
pop
lcall
mov
aaa
mov
push
pop
cli
cmpsl
mov
cmp
sbbl
cmp
mov
lret
sahf
cmp
dec
sbb
shrb
sub
pop
call
xor
push
xor
dec
sub
pop
cltd
rolb
jbe
cld
mov
imul
or
ja
pop
dec
xor
mov
shlb
pusha
fdivl
mov
mov
add
dec
mov
mov
loopne
fwait
fs
popaw
xchg
adc
xchg
pop
pop
fsubrs
or
lcall
push
adc
sahf
lock
imul
out
add
int
add
cld
out
jg
sub
rolb
xor
dec
dec
fadd
and
push
or
and
cltd
jbe
negl
orl
sarl
fimuls
out
push
sub
push
lock
jp
popf
ds
lock
sbb
iret
mov
lret
add
mov
mov
cli
cmp
outsl
insb
push
push
jno
xchg
test
pushf
iret
out
jne
aaa
test
inc
lret
mov
cs
fcoms
push
lret
outsb
repz
or
sub
sub
idivb
rclb
stos
cmc
leave
push
or
add
mov
test
call
jnp
stc
out
fs
notb
or
jae
daa
not
mov
jl
jb
and
and
je
stc
ss
sarb
leave
int
cltd
inc
pusha
cmp
negb
fsubrl
mov
pop
xlat
jnp
cltd
mov
mov
jae
lods
sub
mov
in
and
pop
xchg
fldt
out
outsb
lea
or
leave
dec
xor
cltd
outsb
cli
int3
mov
jbe
cld
cwtl
inc
push
ljmp
fidivl
add
inc
mov
cmp
jg
mov
push
fldlg2
loopne
enter
fldl
xor
ss
jp
xchg
ja
jmp
sub
and
mov
jecxz
cmp
int3
lret
adc
mov
inc
lds
lret
mov
mov
xorb
push
test
int
mov
inc
pop
mov
adc
or
mov
jnp
add
xor
sbb
adc
dec
scas
in
xchg
in
pop
cwtl
add
mov
hlt
sub
cmp
bnd
pop
call
mov
popf
sbb
aaa
mov
inc
jns
sub
mov
adc
mov
jns
xor
clc
sub
leave
out
sub
scas
test
mov
sarl
or
lcall
ret
push
sti
push
xchg
aad
cwtl
insl
xchg
cmp
ss
pop
sbb
jle
test
out
hlt
mov
cmpsl
lea
lret
xchg
pop
add
imull
shrb
rcrb
test
fs
sub
test
js
fmuls
push
sbb
push
imul
rcrl
jmp
imul
jg
and
dec
xor
mov
pop
int3
cmp
and
lea
je
sbb
xchg
cs
mov
cmp
xchg
les
xchg
mov
jp
dec
dec
aas
out
rclb
testl
jge
sbb
sbb
jb
cmp
jae
sub
mov
mov
jle
add
sti
out
sub
bndstx
imulb
bound
aam
xchg
xor
or
in
mov
mov
jge
aas
push
push
jne
push
es
jmp
push
push
cmp
jmp
jo
sbb
int3
int
sub
inc
pop
lcall
fnsave
test
movsb
mov
ja
jo
frstor
test
loope
mov
aad
mov
in
inc
out
aad
xchg
jmp
or
and
add
out
and
mov
dec
xchg
xor
stos
shlb
test
mov
sti
pop
lods
add
lret
and
insb
sahf
inc
cwtl
ret
in
cmp
pusha
inc
jecxz
stc
into
cli
shlb
jae
mov
xor
cmp
or
cmp
xor
sarb
dec
dec
enter
loop
add
mov
inc
xor
or
adc
test
outsb
sub
push
daa
lods
mov
sbb
fnstsw
int
inc
adc
stos
fildl
fscale
pop
ficomps
fildll
adc
inc
out
cmp
sub
cmp
pop
mov
out
subb
outsl
pop
loopne
sahf
stos
jae
pop
push
xchg
jne
dec
ss
loop
out
mov
adc
loope
cltd
daa
and
insl
mov
stc
sub
or
and
xchg
cld
aad
cli
or
or
jns
movsl
sub
sbb
idivb
in
or
lock
jo
pop
jp
cwtl
cwtl
inc
imul
imul
mov
lahf
outsl
dec
jb
lret
insl
push
je
fstpt
out
andl
scas
sahf
dec
gs
je
ljmp
pop
ret
inc
lock
add
cli
sti
dec
inc
inc
mov
testl
pop
push
mov
mov
mov
out
push
sbb
aam
test
pusha
fsts
sbb
insb
or
jp
add
dec
lock
xchg
inc
pop
xchg
roll
xchg
mov
push
iret
leave
data16
movsb
mov
jecxz
rorl
pushf
arpl
cmpsb
mov
loope
outsl
mov
les
sahf
es
xchg
repz
lds
out
lods
test
sahf
or
mov
jl
pop
in
movb
push
pop
dec
xlat
pushf
mov
clc
cmp
shrl
pop
clc
push
in
arpl
aas
and
push
inc
into
cltd
in
jnp
xchg
mov
mov
mov
pop
xchg
cli
int3
cmp
push
les
cmp
dec
ljmp
adc
test
push
outsl
add
ds
jae
popf
sub
xorl
lods
aaa
mov
pusha
pop
into
mov
leavew
mov
sbb
clc
nop
pop
loope
pop
cmp
cwtl
outsb
mov
loopne
fcmovnbe
scas
test
popf
flds
push
mov
scas
xor
rcrb
jle
fisttpll
cmpb
in
push
mov
in
mov
push
cs
adc
or
dec
repz
mov
ss
ret
aas
stc
adc
out
xchg
mov
push
mov
sub
push
lock
inc
out
mov
daa
mov
rcll
inc
xor
push
sarb
cmp
mov
cmp
pop
and
insl
push
in
lds
aaa
fstpt
lock
outsb
cmpsb
repz
fcmovnb
outsb
mov
inc
sbb
sbb
sahf
popl
mov
mov
adc
mov
jg
pop
ljmp
pop
add
jg
and
adc
pop
gs
inc
sahf
push
pop
arpl
cltd
fwait
je
fcomps
mov
dec
popa
sub
cmpsl
rorl
fadds
mov
insl
mov
pop
jnp
cmpsb
aaa
adc
das
dec
ficoms
aaa
mov
push
in
rol
xor
lret
jo
lret
repz
mov
shl
cld
iret
mov
sbb
mov
aaa
push
aas
popf
push
sbb
movsb
sbb
ret
orl
sbb
movsl
mov
ret
sub
les
push
js
jmp
xchg
cmp
out
xor
scas
in
aad
or
lods
movsl
mov
out
popa
xor
mov
inc
pushw
pop
shll
mov
repz
iret
xor
fisubl
pop
into
jb
push
jmp
jb
cmp
call
repnz
lods
icebp
inc
xchg
xchg
push
mov
add
push
jp
mov
pop
pop
push
lds
jne
inc
sub
xlat
add
inc
xor
mov
shlb
jns
int3
xlat
add
xchg
xor
movsl
fmul
fimull
out
aam
cmpsl
or
roll
fs
je
fistps
cmp
push
jo
das
outsl
push
adc
adc
jge
fsub
fmull
mov
mov
stos
ret
pop
aad
cwtl
dec
stc
add
es
cmp
add
imul
sub
mov
int3
push
push
mov
movl
imul
mov
iret
mov
int3
fistps
loop
xchg
jle
imulb
sbb
gs
std
mov
dec
test
inc
dec
fsubs
fs
pop
cmpsb
sbb
loopne
inc
int
negb
and
testl
dec
inc
xchg
test
out
fsubrs
adc
mov
jb
cs
fisttps
mov
mov
ret
out
cmp
lds
fnstcw
xor
push
mov
loopne
inc
ret
subb
cwtl
push
mov
pop
outsl
fisubl
mov
and
jno
xor
sarb
test
and
loope
popa
std
inc
loopne
inc
adc
mov
adc
aaa
jb
bound
loopne
add
xor
push
cmp
rolb
mov
push
clc
cltd
sti
pop
mov
adc
jp
cwtl
popf
ja
stos
cltd
mov
loop
outsb
js
aaa
xchg
mov
cmp
mov
push
push
es
mov
ret
mov
pop
cmp
cmp
int3
mov
push
in
jp
imul
xor
leave
mov
test
fwait
cmpl
jne
and
test
mov
xchg
movsb
fbld
roll
dec
popf
aad
imul
mov
lret
lret
rorb
fs
push
jnp
add
mov
test
mov
push
cmp
call
pop
push
inc
enter
sub
mov
xor
movsb
es
sbb
jne
push
cmp
je
mov
lcall
xorb
incl
cmp
inc
orl
lea
xor
aas
outsb
and
mov
call
mov
mov
xchg
int3
sbb
fs
mov
pop
push
inc
fadds
dec
push
lock
repz
mov
test
adc
cli
xor
jge
outsl
push
xchg
sar
in
mov
je
xchg
jbe
sub
out
sbb
test
push
rcpps
cli
push
clc
jbe
pop
cmp
fbld
orl
push
cwtl
jnp
ljmp
push
aas
inc
movsl
mov
xor
inc
sbb
into
xchg
popf
enter
into
xchg
cmpsb
insl
int3
ret
jne
cli
add
xchg
js
jge
mov
add
daa
imul
jmp
enter
xchg
cmp
or
iret
int
adc
ja
stos
or
enter
xlat
pop
inc
js
in
sbb
xchg
or
xor
push
rcll
mov
fcmovne
rorl
adc
and
push
cwtl
fstps
nop
fidivs
fsubr
ret
sbb
sub
mov
repnz
jns
jns
add
dec
fstpl
loope
mov
jno,pt
leave
cmovle
and
ss
adc
outsl
lods
xor
pop
dec
test
xor
push
shll
in
mov
cmp
scas
fisttpll
sub
cmp
mov
adc
pop
pop
les
mov
negl
popa
mov
lock
das
sbbb
jmp
mov
add
mov
xorb
push
test
mov
push
cmp
add
and
pop
je
and
mov
jb
sti
repnz
rol
dec
bound
popf
orb
fdivrl
push
into
and
test
xchg
cli
fwait
lods
mov
xchg
repz
jo
dec
xor
adc
jo
xor
cmpsb
push
shl
mov
and
rcpps
add
mov
imul
xor
aaa
rcrl
test
aad
aaa
or
sub
stc
sbb
fisubs
xor
jns
into
mov
scas
cltd
ret
xor
mov
scas
adc
mov
icebp
into
mov
xchg
xor
inc
imul
jne
dec
xchg
aas
sub
add
dec
out
nop
push
dec
call
out
mov
stos
dec
add
shr
cwtl
push
adc
push
dec
fistpl
out
in
push
pop
scas
clc
stos
lcall
sub
inc
es
pop
mov
cmp
xchg
jbe,pt
jb
mov
shl
imul
mov
mov
pop
ja
rorl
mov
call
mov
test
adc
dec
jmp
or
sub
mov
lret
cmp
push
and
or
hlt
and
cmp
sbb
mov
mov
adc
sarb
in
movsb
xor
xor
dec
ret
push
mov
fwait
inc
cmc
movsl
lock
mov
cmp
fisubl
mov
inc
push
jmp
stos
test
mov
or
and
fwait
push
push
cmp
lds
inc
pop
popa
lret
int3
aad
inc
jnp
cmp
loop
or
mov
negl
lcall
sti
jns
ds
push
subl
rcrb
sbb
jl
cltd
arpl
bound
dec
popa
jp
daa
ret
repz
fs
and
bound
or
jae
jecxz
outsb
lahf
fwait
repz
int3
mov
add
push
aad
add
iret
in
mov
mov
mov
and
lds
aam
fwait
xchg
icebp
jno
cwtl
dec
rcrb
je
cmp
push
adc
iret
xor
inc
mov
mov
xor
mov
icebp
xchg
push
jbe
mov
fcmovb
popa
aaa
sub
push
dec
jae
jno
mov
and
movsb
stc
lock
das
gs
shr
mov
aad
dec
mov
mov
cmp
pushf
js
int
mov
pushf
adc
inc
xchg
in
xchg
test
shr
mov
adc
aad
pusha
loopne
add
and
fcompl
mov
push
sbb
sbb
in
out
pop
std
xchg
cmpb
push
or
movsl
xlat
popf
cmp
addl
jno
ds
xor
jl
out
rcr
jmp
lods
push
data16
fsts
out
orb
rolb
subb
push
divl
call
inc
in
sbb
rcr
push
xchg
lea
jp
nop
mov
or
pop
movsl
pop
je
int3
lfs
int3
loopne
jne
cmpsb
cmp
jno
push
fldenv
inc
sub
dec
pop
int
adc
push
gs
out
or
mov
popa
aaa
fcomps
loope
mov
and
test
jl
jp
loope
sbb
cs
hlt
fcomps
mov
push
add
js
gs
ficoml
jbe
in
fucomip
pop
mov
nop
in
pusha
jg
in
mov
adc
int3
lods
sub
jmp
lock
dec
mov
mov
jmp
pop
aam
push
subb
hlt
enter
mov
jo
jb
arpl
sbbb
xor
push
aam
push
mov
subl
xlat
mov
and
mov
xor
shl
mov
xchg
test
and
jb
dec
test
push
lret
fistpll
pop
lahf
mov
xchg
lret
add
mov
fistpll
ret
enter
addl
pop
push
mov
cmp
jmp
cmc
ds
int
add
adc
mov
fidivl
and
mov
add
sbb
ljmp
mov
ds
sub
shlb
pop
outsl
testb
in
lcall
dec
leave
ret
jo
cmpsb
mov
stos
pop
shl
mov
test
xchg
stc
loop
jg
std
je
push
popa
ja
push
pop
add
inc
jp
or
push
mov
fs
pop
dec
push
mov
sbb
sbb
outsl
cmpsb
cmc
sub
xchg
test
and
xchg
outsb
jo
add
push
dec
xor
inc
lock
cmp
sbb
inc
or
ret
xor
cmp
push
pop
sub
ljmp
pop
pop
ret
lret
pop
pop
sbb
push
fwait
jecxz
push
xchg
call
pusha
out
fsubrs
jae
xchg
sbb
or
cltd
repnz
jmp
mov
lea
loopne
xchg
inc
sbb
jb
xlat
cwtl
xchg
bound
ficoml
push
mov
rorl
in
fnstenv
sbbl
push
sbb
adc
push
pop
pop
and
addb
cmp
iret
into
adc
lods
scas
or
pop
cmc
sahf
aaa
gs
into
push
out
jb
out
ljmp
imul
inc
jecxz
loop
adcl
andl
or
xor
sbb
push
jmp
in
pop
mov
fld
imul
jecxz
mov
insl
out
int3
out
cwtl
xchg
lea
adc
mov
sbb
sub
lods
imul
test
mov
les
cmp
aaa
pop
test
iret
loopne
lcall
std
jo
out
and
sbb
dec
jo
imulb
psrld
jecxz
faddp
push
dec
push
mov
adc
mov
fs
xchg
jmp
pop
mov
mov
mov
cmp
outsb
jge
mov
data16
pusha
xchg
test
andb
nop
movb
aaa
xchg
inc
and
fmulp
jle
fdivrs
inc
push
scas
sbb
sub
fildl
inc
pop
or
popa
push
sbb
ficompl
adc
das
clc
push
arpl
testb
jmp
into
dec
sub
std
xchg
jae
pop
lock
lahf
movsl
repz
or
movsl
push
inc
jae
mov
sti
iret
fsubs
sarl
stos
dec
push
sbb
dec
xor
or
add
sub
pop
push
jmp
std
ss
inc
ljmp
mov
and
push
std
mov
dec
or
cmp
test
push
fcmovnu
mov
std
aas
int
int
loopne
int3
lahf
or
jnp
sub
fistl
inc
js
push
outsb
jg
insl
push
jl
sbb
jb
sub
inc
cmpsl
icebp
pop
push
mov
in
gs
push
pop
mov
mov
enter
dec
scas
jl
inc
das
push
or
adc
iret
push
mov
jo
int3
movsl
in
or
int3
dec
out
mov
das
pop
shrl
dec
mov
mov
repnz
adc
fs
ficompl
insl
inc
dec
sahf
in
out
cmp
std
repz
xlat
fisubl
pop
sub
mov
cmc
cmp
mov
cmp
xor
add
insl
push
in
mov
xor
dec
adc
je
cld
insb
mov
imul
mov
fisttps
sbb
insl
jg
cmp
inc
pop
sti
call
pushf
rorl
sbbb
addr16
xchg
movsb
xchg
mov
dec
bound
nop
adc
stc
and
and
aad
imul
jne
scas
cmpsb
das
fisubrl
ret
push
push
push
out
sub
clc
or
sahf
lods
les
and
and
xchg
sub
xchg
enter
enter
add
sti
xorb
inc
test
mov
movsl
fwait
inc
xor
sbb
insl
ja
call
loop
sub
mov
test
je
gs
lahf
add
jnp
imul
fisubl
loopne
inc
cmp
sti
movsb
xchg
mov
mov
add
in
sub
std
mov
jl
negb
imul
cmp
scas
mov
add
pushf
sbb
mov
pop
in
cmpb
sub
push
stos
xor
icebp
sbb
adc
inc
cltd
mov
in
add
and
sub
xchg
arpl
aad
jecxz
fisttps
movsb
fnstcw
adc
sbb
or
rcrl
inc
mov
outsb
jge
or
dec
mov
inc
in
notl
fs
mov
int3
fwait
xor
nop
mov
lods
sub
clc
andl
inc
ret
aam
repnz
ss
push
and
lock
dec
add
rcl
mov
push
dec
aas
mov
mov
pop
imul
xchg
sub
inc
fdivr
fsts
jmp
fcmove
sahf
mov
or
or
cmp
add
push
pop
xchg
pushf
arpl
pop
cmpsb
push
rolb
pop
and
inc
jae
fxtract
pop
std
sub
pushf
les
dec
inc
in
or
adc
inc
scas
cmp
fisttps
add
push
dec
jecxz
xchg
movsl
out
push
fs
shr
mov
inc
fldenv
mov
mov
jbe
mov
in
repz
stc
pop
mov
mov
sbb
mov
stc
in
push
out
hlt
inc
jo
mov
fwait
adc
dec
aaa
lret
jno
pop
and
das
xor
int
aad
je
fs
sub
clc
dec
xchg
aaa
jecxz
inc
lock
pop
xor
cmp
daa
pop
lahf
loope
sbb
mov
jo
mov
mov
loope
push
fwait
mov
ds
fwait
jg
or
scas
stc
aaa
xlat
xor
aad
mov
push
sbb
jo
in
jns
push
xchg
cmpsb
call
pop
mov
and
adc
sub
shl
inc
inc
daa
sub
neg
dec
outsl
xlat
ja
loop
arpl
cmp
add
insb
mov
cmpsl
jge
cltd
or
fidivrs
mov
adc
ds
sarl
scas
mov
push
sti
shlb
jle
out
in
and
stos
dec
sbb
add
pop
aam
fcoml
pop
insb
aaa
inc
add
mov
cmpsl
mov
cmp
fidivs
popf
cld
fmulp
sbb
imul
push
scas
jecxz
sbb
mov
clc
fs
jno
push
push
jmp
iret
ja
in
clts
jge
mov
sti
push
in
pop
xor
arpl
lods
mov
xor
push
icebp
xor
inc
pop
push
mov
cmpsl
sar
dec
pop
xor
mov
add
sub
iret
lret
popf
jl
outsl
enter
jno
sub
repz
fcmovbe
xchg
mov
sti
cmp
jmp
stos
inc
addr16
sbb
fstl
dec
and
aam
sbb
clc
lods
dec
mov
pop
inc
xchg
sbb
arpl
push
mov
cs
daa
inc
test
fidivrs
or
enter
and
xor
ss
xchg
in
pop
fidivrl
iret
push
xor
cmpsl
daa
lods
aam
pop
jnp
dec
fdiv
push
in
ja
xchg
sbb
pop
cld
dec
lcall
pop
jge
fmuls
jne
cltd
movsb
add
sub
jo
stc
scas
out
shll
mov
int3
mov
mov
test
push
cmp
shrl
popf
mov
sarb
loopne
int3
sub
andl
fisubrs
retw
mov
and
push
dec
and
lods
xor
out
cs
sub
sbbb
and
std
mov
push
daa
lods
pop
xchg
adcl
cwtl
push
mov
ds
outsb
mov
outsb
call
sub
or
ja
xchg
and
xchg
xor
jnp
sub
in
xchg
push
cs
pop
add
sbb
test
cmp
lcall
jbe
imul
jle
xor
lahf
pop
push
aas
mov
or
jg
cli
adc
lock
add
sbb
add
lcall
jg
ret
xchg
sub
pop
and
xor
imul
fsubrp
xchg
fwait
jnp
ficoms
add
ljmp
xor
aam
jmp
cmpsl
mov
or
jge
cltd
in
outsb
leave
cwtl
push
dec
rcr
test
scas
cmp
test
pop
fsts
incb
and
dec
adc
mov
add
daa
push
imul
jnp
dec
loop
sbb
push
gs
xchg
and
and
and
aaa
add
cltd
or
in
mov
daa
sbb
cltd
daa
cmp
jl
cli
jge
aaa
add
sub
jecxz
mov
js
sarb
in
shlb
in
pop
or
jp
push
mov
lds
dec
ljmp
mov
jle
mov
xorl
das
mov
lods
fwait
mov
aam
das
bound
sarb
pop
insl
add
and
push
bound
pop
jo
pop
sbb
cltd
int3
dec
lcall
sbb
shlb
ds
or
push
test
cs
xchg
jne
jl
jbe
inc
sbb
push
sti
sbb
jne
or
pop
fildl
das
mov
clc
xor
mov
push
sub
ficoml
jns
pop
lock
and
popf
adc
orl
test
sbb
lock
dec
sub
fwait
cld
dec
xor
scas
adc
dec
pop
pop
or
mov
xlat
sbb
inc
cmpl
xor
mov
add
rcrl
bound
popa
test
and
jmp
data16
test
jg
mov
push
or
cmp
dec
lcall
fidivl
mov
js
stos
mov
outsb
es
inc
dec
dec
in
cld
xchg
outsb
sub
mov
xlat
jbe
jmp
int3
int
pusha
pop
jo
inc
cmp
push
test
test
int
adc
dec
stc
dec
orl
pop
movsb
repnz
jl,pn
cs
sbb
sbb
pop
push
adc
jge
mov
in
inc
mov
cltd
sub
mov
fiadds
mov
aas
sub
xor
cmp
iret
ret
sbb
sbb
dec
jbe
mov
pop
cs
lahf
jne
les
add
adc
dec
xchg
jmp
dec
enter
pushf
sahf
repz
std
iret
aam
xor
clc
or
jo
pop
test
icebp
inc
fidivl
sub
inc
aad
mov
cli
sub
mov
les
push
ds
dec
and
stc
sub
je
je
fnstenv
inc
fsts
dec
ficoms
push
add
aaa
out
inc
cmp
adc
dec
lret
sahf
ret
cltd
jg
dec
orb
or
or
in
dec
add
fiadds
idivl
sub
mov
pop
push
neg
nop
mov
jmp
add
out
sbb
pop
lret
pop
push
push
mov
mov
pop
and
mov
dec
push
aam
sbb
pop
adc
shl
jle
iret
testb
imul
ljmp
sbb
sbb
pop
cs
pop
sbb
mov
in
jle
and
in
movsb
enter
xchg
lret
ja
mov
inc
fildll
xchg
jl
jecxz
adc
cli
push
add
inc
push
and
jmp
stos
cmp
push
divb
fcom
xchg
fcomi
add
push
jecxz
jae
xlat
cmpsl
or
or
xchg
dec
cmp
fs
test
pop
enter
cmp
ds
in
inc
sub
out
ss
pop
and
lcall
aad
ficoms
cmp
hlt
cmp
je
dec
in
mov
push
rol
fldl
sub
or
xchg
sub
out
jnp
ljmp
stos
lods
mov
push
cmpsl
xchg
mov
fbld
xor
cltd
pop
and
into
adc
cli
xor
ss
ljmp
xchg
stos
lret
mov
or
fstps
into
out
push
and
adc
xchg
sub
stc
pop
icebp
xchg
adc
and
mov
movsb
push
icebp
mov
pusha
das
aaa
dec
mov
add
lods
sub
lods
stc
out
push
xchg
sbb
sbbl
add
frstor
mov
pop
adc
mov
ret
push
pop
stos
xor
mov
test
mov
out
hlt
iret
sbb
pop
mov
adc
xchg
out
bnd
mov
dec
fisubrl
add
icebp
mov
cli
jnp
xor
adc
jge
rol
loopne
mov
mov
push
dec
iret
pop
data16
push
or
adc
je
outsl
and
ds
cli
mov
or
cltd
fs
sti
hlt
dec
mov
cmpsb
test
ja
shrb
xor
dec
sub
adc
pusha
adcl
adc
push
stos
imul
sbb
lea
movsl
jmp
shl
test
jecxz
insb
sub
xor
shll
shlb
adc
arpl
and
and
imul
and
lock
cmp
repz
jl
das
popf
pushf
and
adc
add
push
out
sahf
push
adc
xor
sbb
push
cld
xchg
add
popf
cmc
fstpl
pop
mov
bound
out
inc
ficompl
and
push
sub
addr16
xchg
test
push
insb
cmp
pop
ja
aam
mov
or
rclb
mov
movsl
sbb
add
ds
fnstsw
or
pop
int
adc
jecxz
ja
outsb
shr
xlat
pop
add
push
mov
pop
inc
sub
push
add
inc
mov
testb
pop
leave
and
sbb
cwtl
and
sbb
cs
mov
repz
mov
pop
jl
aam
pop
mov
pop
scas
pop
js
idiv
mov
test
adc
out
insb
pop
sahf
divb
das
adc
scas
aam
or
ljmp
lret
adc
jae
and
or
sahf
loope
mov
pop
or
fdivr
ds
jb
pop
inc
into
mov
negl
aas
fisubs
cmp
repnz
mov
inc
add
cmp
orb
add
xor
cmp
lock
subl
adc
insb
call
xor
cmp
push
mov
mov
jno
xchg
insl
sbbb
aad
push
adc
jns
jne
xor
mull
push
and
imul
push
popf
jbe
xchg
cmpsl
add
xor
pop
mov
jecxz
push
test
aam
lods
hlt
jp
int3
sarb
push
ds
xor
test
jmp
mov
pushf
xchg
aad
xchg
xor
xchg
cmp
inc
in
mov
mov
mov
nop
mov
cmpsl
mov
lahf
jne
dec
jo
cmpsb
inc
xor
sbb
sub
fsubrs
sahf
pop
ret
jecxz
sub
arpl
pop
mov
std
out
add
scas
add
sub
push
aad
pusha
insb
jo
leave
leave
jl
fs
pop
and
insl
xor
add
adc
inc
xor
or
jg
gs
fistl
mov
cmp
push
mov
fnstsw
mov
and
xor
mov
cmpsb
test
jae
mov
adc
orb
jp
mov
or
loope
loope
testl
jg
cli
inc
mov
repz
es
and
jns
sub
jno
xor
pushf
sbb
incl
push
push
mov
cmp
mov
aas
aas
inc
pop
add
stos
jae
jmp
lock
add
std
loop
cld
sub
push
push
xor
dec
rcrl
js
or
pop
adc
fdiv
sub
aaa
push
dec
xchg
ret
jb
sub
xchg
hlt
fwait
sbb
rol
daa
push
cli
aad
xchg
pop
push
movsb
and
ret
nop
ja
sbb
cmpsb
jns
cmp
jns
arpl
jns
ljmp
inc
enter
adc
iret
mov
and
jno
daa
push
mov
add
shrb
pop
lods
add
xor
inc
out
popa
xchg
test
jns
mov
adc
xchg
lea
sahf
iret
push
cmc
sub
gs
xor
adc
je
test
push
mov
adc
mov
and
mov
outsb
xor
lods
mov
fidivrs
sbb
repnz
sbb
adc
rcrl
xor
shrl
adc
cmc
adc
push
xor
push
ret
fs
pop
xor
pop
xchg
fnstenv
gs
insb
mov
loopne
cmpsb
sbb
xchg
push
arpl
addr16
enter
clc
pop
jne
mov
cli
add
jmp
pop
mov
push
out
push
jp
sub
jle
adc
outsb
scas
test
push
xchg
jecxz
xchg
add
dec
clc
mov
in
mov
out
movsb
ficomps
mov
repnz
shll
aas
out
add
sub
pop
cmp
ljmp
ljmp
fcoml
inc
inc
frstor
mov
xchg
xchg
lods
jo
xchg
inc
movsb
adcb
popa
popf
shlb
add
not
cmp
jne
lds
orl
sbb
loope
push
xlat
imul
adc
xor
test
mov
lcall
sbb
mov
sbb
sbb
mov
insb
loope
cmp
or
int
sub
int
cltd
orb
xor
jl
movsl
cltd
test
ret
mov
bound
jle
push
loopne
xor
pushf
jp
hlt
mov
out
out
xor
std
arpl
add
dec
xchg
jne
cs
out
push
sub
jbe
mov
sub
inc
push
and
aaa
adc
js
inc
cmpsb
ret
je
clc
fsubp
xor
iret
out
stos
dec
lods
inc
sub
push
jbe
add
loop
adc
xchg
ja
mov
pop
out
inc
fs
std
pusha
push
pop
lcall
lret
stos
mov
fcmovnbe
mov
xchg
insb
test
mov
aaa
lcall
cs
sub
dec
mov
cmc
test
bound
jno
loop
jae
lcall
sub
ret
loopne
clc
xchg
cmp
xbegin
push
push
ficoms
mov
lds
mov
outsl
mov
xchg
lds
jecxz
pop
cmp
mov
mov
mov
loope
xor
mulb
add
sahf
mov
icebp
jns
rcll
inc
push
sub
movsl
jp
jge
cmc
fimull
test
jmp
lahf
and
or
lds
dec
jp
dec
scas
leave
sbb
stos
push
in
sub
ds
pop
das
hlt
fdivrs
and
jle
and
mov
aas
mov
mov
pop
push
test
dec
sbb
mov
mov
dec
push
xor
xlat
jb
and
or
sub
mov
mov
mov
xchg
mov
cmp
neg
xchg
loop
ret
cmp
cltd
or
jg
fnstsw
xchg
mov
and
mov
out
outsb
fmul
cli
sahf
cmp
xor
or
repz
in
decl
jmp
cmpsb
mov
in
ss
int3
dec
sub
jmp
jae
adc
pop
sti
rclb
mov
lock
in
aaa
push
mov
cmp
cmp
stos
popf
mov
movsl
lret
mov
nop
out
mov
das
imul
lcall
mov
lea
jmp
push
aad
sub
mov
xchg
mov
scas
lret
arpl
xchg
movsb
lock
jae
rclb
pop
mov
leave
push
mov
add
call
adc
push
mov
and
pop
jns
test
rcll
push
and
std
outsl
nop
das
and
xor
stos
rclb
imul
sbb
pop
adc
and
jecxz
mov
popa
imul
sub
mov
ds
test
das
pop
add
adc
and
mov
andl
add
movsb
inc
cmc
call
xor
push
mov
mov
lods
push
aaa
out
stos
xchg
mov
jb
shlb
sbb
out
lds
aam
icebp
dec
or
fcmovbe
pop
mov
mov
or
in
mov
enter
or
dec
lcall
mov
dec
pop
icebp
sarb
cmp
jg
movsl
stc
add
pop
sub
shll
mov
lock
aad
jge
je
xor
adc
push
push
std
add
loop
jmp
mov
fdivs
push
fstp
and
mov
jecxz
push
push
sbb
push
mov
test
je
mov
jmp
pop
lret
sarb
aam
lahf
mov
cltd
sbb
mov
rcr
gs
out
popf
inc
rcrl
fadds
fwait
xchg
dec
ds
push
and
adc
cltd
inc
leave
popl
outsl
mov
sbbl
sbb
daa
rorl
mov
fldt
lret
dec
sti
sarl
xor
mov
jle
outsl
ljmp
scas
pop
pop
int
add
ror
into
pop
mov
scas
push
lea
repnz
popa
xchg
fsubl
loop
dec
data16
cmpsb
xor
xchg
push
jecxz
std
adc
testl
sbb
push
pop
xor
push
xchg
aas
dec
dec
mov
mov
std
pop
pop
pop
fimull
pop
call
fwait
sbb
pop
out
xchg
sub
rolb
push
fs
cmp
pop
jge
daa
stc
adc
fmulp
in
lock
inc
ljmp
addr16
xchg
lock
mov
les
movsl
ficomps
insl
clc
lea
jne,pt
movsb
cwtl
lahf
out
ret
fs
ss
mov
ds
test
xor
mov
and
test
cmp
xor
xchg
sbb
inc
dec
sub
loope
sbbb
mov
or
ret
push
ja
push
call
inc
clc
je
xor
sub
rorb
jmp
or
cs
sbb
push
sbbl
shl
cld
ret
sub
push
adc
out
pop
push
loop
pop
push
std
dec
fbstp
std
pop
fistpl
icebp
ss
aad
mov
fwait
imul
call
aam
and
push
inc
pop
inc
inc
aaa
add
sti
and
rclb
notb
dec
xchg
rcll
scas
inc
push
adc
and
cmp
fnstsw
mov
pop
out
mov
mov
test
xorb
cli
xlat
mov
jge
xor
xor
push
pop
pusha
mov
jp
push
mov
inc
xor
xchg
pop
int
in
adc
bound
out
fsubs
mov
jl
rorb
or
test
add
out
cmp
push
mov
cld
inc
and
pusha
jne
inc
add
out
in
mov
fwait
cwtl
fldcw
jg
adc
jg
out
mov
push
push
mov
das
mov
stos
jnp
cmp
call
test
or
dec
lods
jle
addr16
or
xchg
jbe
cmp
movsb
mov
cmovl
add
popa
xlat
iret
mov
inc
pop
mov
cmp
decl
add
push
scas
pop
test
jmp
mov
jle
roll
jb
push
repnz
lret
adcb
fwait
rcr
leave
or
add
pop
lret
jg
imulb
xchg
pop
insl
and
popf
out
mov
sarl
js
fucomi
mov
aam
push
js
or
push
insb
xor
inc
sbb
in
cmpsl
inc
repnz
aam
test
mov
mov
xchg
dec
fwait
and
push
push
mov
cmc
into
icebp
jge
xor
pop
mov
sub
in
out
out
sub
xor
cmp
aas
inc
add
jp
pop
pop
mov
daa
dec
sub
push
inc
cmpsb
aas
lock
ret
jge
jo
test
shrb
push
xchg
stos
mov
pop
mov
push
push
cmpsb
popf
mov
int3
and
jae
add
pop
mov
or
and
pop
cmp
lea
jecxz
cmc
pop
in
outsl
cmp
pop
out
push
pop
aad
js
icebp
movsb
jmp
pop
dec
dec
cli
push
pop
enter
push
pop
movsl
jg
imul
mov
les
push
mov
enter
mov
aad
movsb
fldenv
fs
ds
rcll
loop
lock
and
jecxz
outsl
aas
sahf
movsb
mov
jge
mov
mov
xor
jnp
movw
sub
hlt
push
dec
jo
rcll
sbb
cld
subb
test
imul
imul
pop
stos
stos
jle
notl
test
lahf
mov
imul
and
dec
jecxz
mov
mov
pushf
ljmp
fbld
clc
shll
bound
cmp
out
sub
dec
insb
jae
pop
xchg
gs
insb
fildl
les
cwtl
out
es
test
adc
movsl
gs
and
sarl
aaa
sbb
add
adc
inc
pop
lret
cmp
sub
mov
jns
hlt
and
and
fwait
cmc
adc
lret
cmp
mov
cmp
ss
dec
mov
aas
inc
jbe
and
test
jae
or
loopne
push
xor
std
jle
adc
call
sub
or
orb
lret
adc
dec
mov
cmp
movsl
cltd
inc
push
out
jge
mov
nopl
inc
mov
clc
lret
sbb
push
mov
punpckhbw
xor
or
dec
insb
sub
push
sub
dec
pop
inc
jl
stos
mov
xor
add
shl
scas
cmc
fldt
mov
cmp
mov
xchg
inc
fcmovne
inc
add
das
shrb
jne
cmpsl
test
and
jp
pop
lods
inc
mov
fistpll
lcall
inc
enter
or
cmp
add
xchg
sbb
cmp
ljmp
ds
fs
inc
push
popa
mov
jb
add
rcrl
inc
push
or
adc
and
mov
jecxz
add
adc
lock
inc
outsb
loopne
fidivl
out
shrb
mov
and
pusha
mov
push
or
ror
push
mov
push
jbe
sbb
stos
sub
pop
xchg
dec
pop
jne
pop
sub
movsb
xchg
leave
sbb
loop
js
loope
das
or
pushf
cmpsb
sub
mov
xor
mov
pop
sub
xchg
and
jmp
cli
xor
pop
in
out
cmp
pop
jnp
jp
cmpb
repnz
fwait
sbb
and
sbb
out
mov
jmp
adc
imul
xlat
dec
or
push
scas
in
lods
inc
sbb
popf
out
adc
leave
sbb
adc
insl
insb
ret
sub
mov
sub
jne
fmull
mov
push
xchg
mov
cltd
sub
push
mov
andl
lods
aaa
mov
cmpl
ja
adc
aam
xchg
mov
jmp
negb
push
dec
jl
xchg
and
out
loopne
movsb
mov
lods
lds
add
popf
div
arpl
sbb
cmp
push
push
sub
jae
mov
std
jns
dec
call
andl
pop
arpl
loopne
inc
inc
mov
loope
push
in
shrl
xor
or
add
nop
test
repz
push
mov
aaa
popf
jo
xchg
mov
pop
pop
ss
mov
je
adc
mov
sbb
loope
mov
pop
mov
xor
pop
sbb
insb
outsb
xor
lea
add
clc
mov
jge
lret
sub
pushf
fwait
pop
hlt
lods
and
push
inc
jae
cli
pop
xchg
andb
jbe
or
cmp
jle
mov
sbbl
xchg
sti
sub
addl
adc
call
adcb
sbb
push
lahf
sub
cmp
enter
insb
lcall
out
in
out
push
sbb
insl
std
xchg
ds
add
sub
popa
fsub
add
mov
dec
or
imul
xor
ficoml
sbb
push
mov
pop
into
fildl
fs
inc
aam
adcb
insb
inc
mov
mov
mov
inc
ja
popa
cld
stc
cli
and
test
pop
mov
add
mov
jnp
cmpsb
xor
repz
lcall
mov
aam
mov
mov
repnz
jno
push
jge
xchg
les
mov
push
in
push
sub
pop
fs
cmp
inc
adc
mov
fwait
push
jne
repz
mov
les
inc
inc
testb
mov
jo
lea
mov
mov
aam
inc
repz
lret
pop
mov
daa
int
mov
cmp
aas
lds
mov
pop
loopne
xor
or
repnz
addr16
jb
fadd
and
clc
repnz
int3
jp
add
in
dec
mov
fs
mov
inc
push
repnz
dec
test
pop
cmp
or
repz
cmp
sub
dec
xchg
push
lcall
sub
nop
jo
add
lcall
sub
sahf
push
cmp
adc
or
mov
cwtl
movsl
fidivrl
imull
sti
mov
mov
and
test
mov
sub
ss
int
jp
addb
pop
xlat
cmp
iret
pop
scas
arpl
push
and
test
leave
mov
jbe
rcrb
insb
add
jae
and
insb
mov
cvtps2pd
call
jp
cmpsl
jmp
packssdw
mov
xchg
xchg
lea
cwtl
outsb
inc
pop
scas
mov
jl
test
in
add
mov
lods
dec
sbb
or
mov
or
sar
js
sub
nop
out
and
pop
das
inc
ds
add
push
xchg
jmp
add
frstor
fbstp
jg
and
push
scas
mov
jmp
mov
pusha
xor
add
dec
pop
outsb
cmpsl
fstl
ret
in
inc
jnp
aas
sbb
out
fwait
testb
or
test
insb
pop
pusha
jne
es
inc
and
mov
mov
icebp
shlb
int3
cld
into
or
jg
add
inc
sub
dec
mov
in
xchg
mov
xchg
arpl
pop
call
clc
loope
push
jge
mov
mov
sbb
xchg
and
pop
les
inc
xor
pop
mov
push
leave
xchg
arpl
sbb
negb
out
push
xlat
jno
adc
xchg
xor
xorb
insl
or
jp
lret
push
addps
ljmp
or
mov
loop
sub
inc
shlb
aam
outsb
fstps
mov
cmp
or
mov
imul
adc
nop
jns
sub
dec
pop
fmuls
pop
add
loopne
scas
dec
pop
popf
pop
scas
les
cld
enter
andb
data16
stos
or
das
test
adc
push
fwait
aad
pop
jns
test
xor
inc
add
mov
mov
call
push
in
add
or
mov
sbb
stos
enter
fisttps
dec
inc
test
push
adc
jne
adc
sbbl
outsl
test
pop
outsb
arpl
jns
insl
es
pop
jno
dec
xor
popa
dec
loop
mov
push
test
xchg
cmc
add
jnp
cmpsl
xchg
dec
repnz
ret
aam
mov
aam
cmpsb
jne
addr16
dec
into
dec
movl
sbb
mov
lea
mov
adc
int
loop
test
js
fs
aas
xchg
or
popf
mov
cmp
xchg
lahf
fs
call
or
mov
xchg
rcrb
mov
push
ljmp
cmpsb
add
in
mov
and
out
aad
insl
jg
mov
sbb
in
xchg
xchg
pusha
sti
pop
inc
cwtl
dec
adc
rclb
xchg
idivl
mov
xor
lea
lds
stos
les
into
and
jl
cmp
mov
push
mov
nop
push
mov
test
pusha
or
cmp
jo
push
sbb
push
out
pusha
aaa
or
daa
in
dec
inc
sub
int
inc
inc
xor
lock
dec
jp
test
fiadds
div
pop
into
das
popf
js
or
cli
cmpsl
flds
loop
imul
xchg
push
cld
hlt
mov
lea
adc
adc
mov
rcrb
fldl
pushf
add
sbb
shll
into
sbb
sbb
lods
out
sbb
iret
sub
jl
mov
popf
and
ja
scas
into
adc
js
xlat
and
jecxz
iret
mov
cmc
add
mov
stos
test
sahf
leave
mov
popl
bndstx
cmp
fiaddl
test
mov
lea
movsl
in
push
mov
push
outsb
mov
jno
mov
jbe
fcomi
add
scas
or
je
loope
adc
xchg
pop
leave
mov
cli
sub
xor
inc
jle
sbb
xor
int
pop
jle
loopne
inc
jnp
out
movsl
inc
pop
cli
inc
cmc
sbb
test
rolb
inc
in
int3
push
xchg
shl
mov
jecxz
mov
mov
jb
sbb
dec
rclb
movsb
push
aaa
sbb
xchg
mov
push
int3
pop
ds
add
xlat
and
sub
push
lea
aas
dec
out
int
mov
add
data16
jae
shl
lret
subl
adc
inc
mov
push
xlat
sub
mov
das
shlb
hlt
dec
in
add
mov
xchg
addr16
sub
test
js
insb
pop
scas
stos
or
adc
mov
aad
adc
xchg
mov
outsl
mov
sbb
dec
mov
mov
mov
vmovd
mov
testl
sub
mov
add
aaa
stc
mov
lods
jl
mov
imul
jbe
mov
in
jp
xchg
pop
lds
lds
sub
jecxz
mov
test
dec
add
sbb
in
outsl
xor
loope
push
inc
js
cmp
push
fisubrl
mov
stc
mov
dec
mov
push
sti
sbb
xchg
jo
icebp
in
mov
aas
in
pop
adc
outsb
icebp
or
xor
repnz
pushf
nop
inc
add
push
cli
sub
xchg
fadds
int
jno
mov
mov
movsl
in
iret
popa
jo
rcll
adc
inc
xchg
xchg
add
mov
jns
pusha
pop
leave
adc
bound
push
jae
push
test
daa
sarb
and
addr16
dec
mov
loope
and
negl
or
mov
xchg
push
mov
push
push
fsubrl
es
and
mov
mov
out
lods
mov
cmc
add
fldt
jo
fistps
call
aad
xor
adc
ds
std
fsubrl
in
jp
imul
imul
jle
mov
aas
in
ljmp
dec
push
popa
lahf
add
movl
xchg
sbb
or
and
inc
mov
ss
inc
aad
adc
aaa
sbb
dec
aam
in
into
dec
fldcw
xchg
xor
mulb
cs
ljmp
js
data16
fisubs
aad
xchg
mov
stc
jbe
pop
fmulp
or
mov
add
mov
fisttpl
fs
sub
inc
mov
jle
pop
icebp
sar
xor
insb
sub
push
popf
mov
adc
ja
mov
gs
fisttps
pop
xchg
dec
or
shr
mov
push
xor
mov
xchg
cmp
in
mov
push
addr16
mov
aad
arpl
add
fwait
sbb
ds
cmpsb
pop
mov
push
call
mov
loopne
scas
nop
movsb
imul
lods
lahf
pop
stos
pop
and
out
jl
leave
out
ja
out
test
push
jmp
inc
add
add
and
dec
mov
xor
insb
fisubrs
aas
adc
fnsave
push
subl
scas
inc
xor
adc
inc
jae
cs
loop
ret
jge
dec
ret
lds
jnp
pop
ljmp
mov
add
mov
pop
xchg
insb
sub
insb
test
and
mov
fdivp
out
cmc
fimuls
out
enter
jo
dec
pop
xchg
out
gs
xor
pop
push
rolb
inc
mov
add
xor
repz
mov
leave
ja
or
shll
in
int
push
bts
aam
fcoml
mov
int
mov
test
nop
or
jbe
cmpsb
repnz
insl
iret
lret
in
nop
xchg
les
in
inc
mov
cli
jnp
aas
dec
push
scas
xchg
aas
adc
adc
xchg
push
sti
jae
xchg
insb
jne
sub
add
nop
adc
scas
rorb
or
popf
out
movl
enter
and
vrcpps
or
cmpsl
movsb
repz
lret
orb
fimuls
pushf
jecxz
std
movsb
add
js
dec
jnp
dec
movswl
cld
enter
nop
in
sub
ficoml
sbb
xchg
or
ret
xchg
inc
and
fiadds
movsb
das
enter
divl
pop
rcr
xchg
sub
nop
into
pop
mov
rcrl
pop
sbbb
icebp
and
int
mov
xchg
imul
dec
test
mov
jno
push
inc
rolb
inc
sbb
ja
cmp
mov
dec
cmp
aaa
and
dec
sub
fwait
shrl
ds
imull
fadds
mov
clc
xchg
mov
jns
clc
cmp
flds
xchg
xor
sbb
imul
jo
popa
pop
adc
sbb
loop
out
cmp
fs
fucomp
loopne
pop
xchg
int
hlt
mov
sub
ljmp
pop
shll
arpl
call
popf
rorb
sub
outsl
out
cli
and
cmp
add
cmp
jbe
mov
cs
shr
xchg
add
jae
jle
loop
leave
lock
mov
jno
mov
repz
adc
mov
jl
mov
push
mov
xchg
mov
fnstsw
or
je
in
outsl
fdivp
sbb
mov
inc
mov
popa
mov
mov
pminub
sub
mov
push
push
cmp
cmp
mov
xchg
vrsqrtss
std
cmp
out
nop
lds
adc
into
incb
sub
cmp
aaa
sub
mov
push
int
xorl
fcmovbe
enter
inc
subl
mov
loopne
mov
shl
cmp
ret
xor
ret
arpl
test
jae
scas
mov
push
jo
out
jp
inc
mov
insl
dec
cmc
cld
sar
jg
jge
push
mov
and
xchg
jne
in
imul
mov
and
daa
or
out
sahf
xchg
mov
cld
mov
adc
mov
mov
sub
xchg
xor
sti
mov
test
add
push
and
and
scas
mov
xchg
jbe
movsl
xor
scas
xlat
ret
pop
sti
push
pop
call
mov
sub
and
adc
pop
inc
nop
cmp
jb
lea
fmuls
push
out
sub
sub
jne
mov
fwait
movsl
cmp
push
cmp
xchg
mov
mov
xlat
adc
inc
mov
repz
xor
push
dec
pop
sub
nop
popf
dec
pushf
mov
lcall
cmp
and
imul
out
dec
and
mov
adc
jl
test
mov
adc
inc
mov
lahf
sbbb
insl
shl
inc
insb
das
cmp
cmp
test
aad
jno
fimull
adc
adc
xor
lret
inc
xor
push
shlb
gs
push
loop
mov
aas
fadd
cmp
jp
int3
fldcw
subb
jmp
in
lock
aaa
sbb
mov
mov
push
pop
cmc
out
sub
cmpsb
sub
add
or
fidivrs
mov
xor
push
push
scas
insb
jl
jmp
call
jmp
iret
movsl
into
rcll
push
push
stos
movsl
push
notl
lahf
ljmp
stc
int3
movsl
sub
and
out
inc
mov
or
inc
mov
pop
lahf
and
sub
mov
mov
sub
add
stc
fdivp
repnz
xchg
movsl
adc
xor
cltd
stos
imul
ja
aam
mov
fs
scas
pop
jo
sahf
cmpsl
or
mov
call
xchg
stos
jbe
dec
pushf
push
daa
cmp
xor
lahf
clc
int3
push
test
fdivr
fs
bt
adc
jbe
rcrl
inc
mov
call
mov
adc
jo
jno
inc
lods
popf
adc
mov
sbb
inc
adc
orps
mov
or
mov
nop
push
cli
les
clc
jl
nop
movsl
clc
aam
cmpsb
pop
movsb
imul
sub
test
popfw
mov
scas
movsb
call
cmpsb
xchg
mov
ret
pusha
jb
mov
adc
cmp
hlt
mov
test
pop
cmc
insb
data16
jbe
jmp
mov
iret
mov
jle
dec
jnp
jne
js
call
xor
cmpsl
aad
mov
jmp
sbb
sbb
inc
mov
insb
sbb
jecxz
into
pop
orb
daa
shlb
jle
lret
mov
repnz
sbb
repnz
sbb
adc
out
jmp
or
hlt
lea
dec
pusha
lds
xor
mov
rcll
inc
jno
fwait
fwait
int3
xor
pop
jg
add
inc
push
dec
arpl
popa
adcl
xchg
in
mov
push
dec
jns
jmp
xor
and
push
xchg
pop
inc
ss
mov
jnp
fimuls
jmp
imul
adc
jnp
ljmp
arpl
pop
xor
dec
adc
mov
adc
fldenv
jne
push
sbb
loopne
xor
or
push
xrstors
js
and
mov
movsb
inc
leave
out
mov
in
mov
test
mov
mov
dec
jae
adc
fistl
xchg
notb
psadbw
xchg
mov
movsl
jb
popa
push
or
or
mov
mov
and
in
jge
sub
addr16
sbb
xchg
int
xchg
or
jbe
loope
jns
add
test
or
adc
sbb
aas
dec
clc
jo
into
inc
mov
push
sahf
lock
lret
inc
push
lahf
mov
int
cmp
jmp
jg
mov
aas
sbb
push
dec
flds
or
add
test
insl
or
lds
mov
dec
cli
and
cmp
into
fisubl
xchg
cld
lcall
mov
insb
sub
rclb
int3
mov
lods
push
cltd
inc
pop
loop
addb
pop
popf
xchg
cmpb
xchg
xor
mov
or
ljmp
fadds
hlt
scas
lock
dec
in
push
jnp
sbb
xor
sbb
xchg
in
jbe
xchg
fdivrs
mov
insl
mov
jecxz
or
sbb
cmp
mov
lahf
mov
clc
mov
lahf
aad
mov
mov
xchg
mull
dec
cmp
xchg
or
nop
sbb
icebp
sar
mov
adc
add
add
andl
test
mov
nop
jp
jl
aam
sbb
imulb
inc
sbb
lods
clc
loop
shrl
mov
mov
gs
cmpsb
sbb
or
stos
jl
mov
add
cmc
or
pop
jns
iret
shlb
lcall
mov
pop
xchg
data16
push
movsl
leave
jmp
jmp
pop
mov
aaa
mov
mov
inc
cmp
pop
jns
daa
and
repnz
mov
adcb
movb
ds
add
push
pop
push
xor
jge
clc
test
mov
push
fwait
mov
adc
inc
xchg
xor
xchg
negb
cmp
adc
nop
sahf
cltd
stos
pop
pop
sbb
mov
lock
xchg
adc
loope
push
arpl
loope
sub
pop
xchg
add
inc
jo
xchg
mov
lcall
mov
push
lahf
shlb
aaa
pop
xchg
add
aaa
mov
lods
test
xlat
adc
jne
iret
sbb
addr16
lods
sub
daa
dec
mov
add
jnp
cmp
sbb
xchg
cmp
xlat
ljmp
xor
mov
addr16
je,pt
add
icebp
adc
fidivl
mov
out
pop
fmul
cwtl
daa
pop
in
daa
pop
cmp
jnp
or
call
inc
jnp
xchg
jnp
in
add
outsb
daa
adc
jmp
rcrb
std
xchg
test
loope
and
shl
fldenv
addb
push
sbb
iret
dec
mov
inc
cmc
push
jo
inc
repz
sahf
lahf
in
in
dec
aaa
mov
sbb
mov
test
push
ror
andb
out
mov
xchg
push
data16
hlt
ds
ja
inc
fisubl
cmp
sbb
nop
xor
int3
inc
xchg
cwtl
insl
out
js
mov
inc
jmp
cmp
ja
iret
cwtl
hlt
sbb
std
daa
cmpsb
incl
push
pop
subb
adc
data16
cmpsb
in
in
call
bound
out
mov
rcrl
dec
out
sub
mov
cmp
xchg
jmp
xchg
jp
jmp
push
jo
fdivl
test
push
paddsw
imul
mov
jmp
ficomps
inc
adc
cltd
adcb
cwtl
mov
push
and
push
ss
inc
jae
dec
and
inc
test
adc
jo
mov
lds
addr16
push
or
mov
mov
mov
jle
mov
loopne
pop
mov
jle
outsl
or
cmpsl
fs
test
xor
aad
inc
xchg
inc
sbb
mov
js
push
bound
pop
sub
int
mov
xor
inc
push
repz
outsl
mov
push
movsl
iret
mov
mov
xor
sahf
cmc
clc
jecxz
sub
mov
test
pop
jecxz
in
pop
popa
fdivl
mov
pop
lcall
stc
std
mov
sbb
mov
pusha
std
jg
jecxz
cmp
xor
xor
dec
stos
sbb
jns
sub
jle
loop
add
lret
and
aas
pop
mov
sub
jecxz
imul
add
jno
sub
xor
mov
inc
mov
bound
hlt
mov
mov
mov
cmp
int3
sbb
pop
mov
pop
cmp
push
add
enter
or
scas
sti
clc
cmp
outsb
sub
enter
mov
hlt
cmpsb
sub
pop
dec
mov
cmp
out
xor
dec
lods
movsb
test
shrl
fnstsw
xor
and
das
mov
push
je
jg
test
out
jno
inc
jb
inc
rorb
mov
mov
sub
lret
cmp
or
jge
xor
jl
fsub
sub
insl
je
push
out
lahf
push
jmp
lds
jmp
cwtl
push
or
movsb
js
rolb
and
mov
in
mov
mov
xor
adc
dec
xchg
xchg
and
jmp
push
cmp
cmp
and
xor
mov
or
cmpsl
mov
jns
mov
clc
push
in
ljmp
mov
pop
mov
push
sti
in
aaa
cmp
mulb
sbb
mov
mov
jno
push
fsubp
repnz
icebp
aas
filds
jne
out
mov
add
mov
jns
mov
paddsw
imul
mov
sub
mov
push
ret
xchg
mull
fidivl
jl
imul
outsb
pop
fs
or
adc
jg
xor
lock
movsl
ljmp
push
xchg
addr16
push
sub
mov
xor
jmp
xlat
scas
inc
jno
in
push
ficoml
lods
aaa
xchg
out
ror
cmp
daa
jbe
scas
hlt
and
cmp
pop
inc
pop
scas
xchg
test
sbb
jb
mov
xor
rcrb
mov
fnstcw
mov
pop
xor
bound
xlat
sub
das
jns
notb
adc
xor
jae
jg
mov
lret
lds
push
push
fyl2xp1
xchg
jg
xlat
sub
cmc
xor
or
gs
sub
aas
rorb
mov
loop
or
aad
and
ds
mov
lcall
fs
add
inc
fsts
mov
mov
mov
pop
in
inc
cld
xchg
xchg
dec
fimuls
inc
push
pop
or
pop
fstps
shlb
pop
inc
add
and
stc
das
push
fistpl
cmp
pop
or
or
lods
frstor
icebp
mov
xchg
fs
dec
mov
fidivrs
and
imull
pop
dec
scas
out
pop
or
jnp
cmpsl
bound
je
lcall
adc
mov
sbb
push
jo
dec
imull
mov
sub
mov
jne
pop
sqrtps
fistpll
or
mov
fwait
push
sbb
xchg
mov
outsb
fucomi
add
xchg
addl
call
hlt
in
pop
and
jmp
adc
arpl
ret
gs
repnz
ljmp
mov
jnp
lds
gs
jns
loopne
test
pushf
nop
lods
insl
mov
mov
cmp
mov
lea
lret
inc
outsb
jns
out
lods
mov
xchg
xor
addb
inc
mov
mov
out
mov
mov
jb
insb
sub
idivb
or
fsubrp
push
int3
data16
jo
add
push
adcb
inc
les
loop
cmpsb
std
mov
clc
test
mov
gs
mov
cmp
pop
call
add
mov
add
sti
icebp
mov
ror
add
jns
dec
decb
mov
sub
and
popa
dec
clc
std
mov
gs
adc
fdivs
sub
xor
lock
add
inc
pop
int3
pop
fsubrl
xor
adc
in
push
out
jge
and
sub
imul
lret
xchg
cmp
cmpsb
data16
mov
hlt
inc
insb
into
enter
rcl
data16
ficompl
arpl
push
bound
out
jbe
push
add
ds
mov
sub
or
jb
insl
pusha
lds
out
xor
test
adc
test
mov
lods
xchg
mov
das
jb
xor
xchg
in
jo
mov
push
sbb
jo
dec
or
dec
loope
dec
cs
dec
or
cmp
jb
mov
sbb
sti
lret
add
enter
mov
lock
daa
xor
and
outsb
add
ret
ljmp
sub
dec
pop
mov
or
sbb
je
outsl
test
mov
les
dec
popf
cmp
adc
mov
dec
fs
decb
into
sbb
loop
cmc
andl
int3
enter
sub
mov
xlat
jbe
roll
mov
std
fdivr
jne
add
shll
mov
push
mov
nop
mov
and
jp
cmpsl
push
in
fsubs
les
mov
sub
cmp
insl
push
imul
sub
xor
mov
inc
fnsave
lahf
in
xchg
sarb
inc
sti
sub
int
data16
or
jl
fnstcw
insb
dec
xchg
jbe
pop
mov
and
js
dec
dec
push
pop
rorb
jecxz
std
popa
ja
cmp
lock
aam
inc
popf
arpl
mov
out
sbb
jmp
jge
hlt
jo
sbb
mov
push
pop
shrb
pushf
adc
cld
iret
stos
int3
push
sub
movsb
add
xchg
lods
shl
test
cld
imul
pop
cmpsl
cld
jno
and
fmull
xchg
loop
test
push
sbb
mov
mov
adc
in
mov
scas
leave
arpl
lahf
mov
nop
sub
lock
bound
enter
push
sub
daa
xor
push
dec
in
rorb
inc
test
mov
push
stos
adc
push
ss
jns
ds
jmp
and
loopne
lea
stos
or
push
loope
mov
outsl
fdivrp
xchg
dec
mov
enter
sub
das
lcall
sbb
push
gs
and
jne
mov
js
inc
andl
sub
dec
lea
shll
pop
orb
cmpl
fists
inc
cmp
jmp
jecxz
adc
pop
mov
xchg
movsl
pusha
push
dec
insb
ss
sbb
adc
shll
push
fmull
sub
sbb
leave
and
dec
dec
push
fidivrs
je
gs
jp
popa
pop
xchg
and
mov
aam
push
sarb
notl
jne
inc
call
dec
lea
xchg
push
jl
sbb
test
ror
or
les
clc
pop
loop
fwait
mov
adc
daa
and
stc
mov
in
adc
imul
rcrl
lret
movsb
sbb
cmp
les
sbb
jmp
insb
popl
jmp
stos
xor
icebp
into
sub
jae
xor
jg
ss
sbb
ret
mov
push
fwait
pusha
pop
sub
addr16
popf
push
fucomi
jecxz
movsl
add
andl
je
cs
jge
shlb
insl
flds
lret
popf
fnstenv
mov
inc
imulb
and
cmpb
and
push
xchg
in
aad
cmp
stos
mov
and
ljmp
pop
nop
ds
addr16
jmp
out
adc
add
mov
ret
int3
jns
pop
idivl
or
push
xorl
jp
fsubl
ljmp
daa
movsb
stos
dec
in
aam
loope
mov
test
repz
das
inc
jnp
xchg
adc
mov
push
shrb
pop
int
cltd
sbb
mov
and
or
insl
stos
imul
test
pop
mov
sahf
cmpsb
sub
and
fcmovu
adc
sub
push
icebp
mov
inc
add
xlat
xchg
mov
cmpsl
and
jno
mov
mov
jp
mov
or
add
cwtl
pop
icebp
cmp
stc
lds
jp
imul
adc
movsb
and
pop
or
or
hlt
mov
or
xchg
mov
or
scas
jno
int
sbb
fdivs
inc
movsb
dec
adcb
addr16
loop
mov
rcll
or
movsl
mov
pop
mov
inc
jns
sub
mov
bswap
push
xor
mov
ficoms
or
jecxz
sbb
mov
ficoms
lods
loopne
dec
mov
rolb
adc
mov
pop
push
jp
jmp
faddl
test
push
adc
out
and
adcb
mov
ljmp
push
fwait
arpl
es
mov
push
stc
push
addb
add
ror
push
xor
and
xor
xchg
xchg
pop
ds
cmp
push
leave
cmp
dec
xchg
or
ja
pop
pop
mov
sub
xchg
push
pop
cltd
stc
hlt
mov
and
mov
xchg
dec
jmp
jno
xchg
mov
mov
dec
mov
dec
ret
lock
enter
imul
mov
out
cmp
and
lret
mov
hlt
adcb
sbb
inc
xor
cmpsl
fs
mov
pop
mov
lods
shr
into
rcl
sub
in
jge
test
push
fidivrl
mov
mov
rcrb
scas
es
mov
das
jl
add
idivb
sub
push
test
cwtl
jae
inc
rorb
dec
fdivr
inc
mov
dec
arpl
jnp
rorl
xchg
std
push
xor
jae
xchg
pop
xor
notb
pop
cmp
xor
cmpsl
xchg
xchg
xorb
xor
sbb
cmp
add
jecxz
dec
pop
mov
add
or
and
imul
jl,pn
sub
mov
in
jbe
lock
lock
add
lods
cwtl
push
shlb
mov
sbb
sub
xor
enter
clc
jne
aam
lret
push
daa
xchg
dec
pop
test
lock
je
lods
xchg
arpl
fwait
pop
and
cmpl
je
push
mov
jb
lcall
push
pop
cmp
sub
fiadds
xchg
sub
xchg
push
dec
mov
stc
cmpsl
pop
cwtl
ss
sti
pushl
pop
xlat
arpl
cltd
mov
jbe
movsb
mov
aad
les
sbb
pushf
les
shlb
aam
stos
mov
mov
jge
or
push
dec
call
hlt
pop
push
sbb
ja
cli
inc
subb
mov
outsb
pop
mov
stos
fidivrl
fstl
lods
pop
fldcw
in
pop
cmp
mov
push
std
jg
lret
cmp
shlb
cli
in
ljmp
cmpsb
mov
in
sub
fcomip
adc
enter
xchg
pop
xchg
lods
pusha
dec
adc
iret
adc
pop
mov
add
mov
sub
fs
jmp
outsb
into
popa
xchg
push
fsubs
mov
mov
sahf
pop
pop
dec
in
sub
aas
sti
cld
jge
pmaxsw
lods
aad
xchg
out
stos
pop
sub
xchg
jp
sub
cmp
lock
cli
mov
cmpsl
and
xchg
mov
xchg
pop
es
xor
fildl
sbbl
sbb
sbb
push
jo
pop
mov
mov
sbb
jns
jnp
int3
push
dec
mov
daa
pushf
stc
stc
bound
lret
repnz
push
sbb
mov
mov
cli
dec
sti
clc
sahf
setbe
jp
or
iret
pushf
fistl
xchg
pop
loopne
xor
clc
pop
das
ret
inc
adc
mov
cmp
mov
or
mov
pop
sub
rol
popf
arpl
in
dec
mov
mov
adc
pop
or
sarb
jecxz
xor
mulb
popf
inc
and
push
repnz
or
nop
xor
or
out
inc
inc
mov
xor
shl
pop
mov
mov
cwtl
jp
adcl
push
jp
mov
das
scas
xlat
and
cltd
mov
push
scas
data16
jno
sbb
adc
lds
out
xlat
lret
xor
xchg
pop
and
js
nop
or
and
out
fiadds
jae
mov
cmp
bound
stos
outsl
push
int
sbb
inc
cmp
sub
enter
nop
lds
lcall
ljmp
cld
shlb
aaa
xor
stos
push
push
bound
or
push
mov
mul
mov
push
loop
enter
xchg
sbb
scas
inc
xchg
cmp
hlt
cmpsb
cmp
adc
add
cmp
sbb
in
add
push
cmpb
bound
ljmp
mov
out
sub
push
pusha
mov
mov
inc
xchg
rcr
rorb
aad
add
ljmp
insl
xchg
rcrl
pop
dec
movsb
mov
lret
push
jle
int
push
insl
sti
mov
xchg
jae
data16
enter
xlat
cmc
pop
xor
into
adc
inc
cmp
in
jg
ds
add
inc
fisttps
and
push
js
out
or
inc
xchg
xchg
dec
mov
mov
xchg
push
lods
and
ljmp
arpl
jae
push
sub
dec
call
stos
fnstsw
and
mov
lods
push
cmp
push
movsl
dec
mov
add
xor
ss
sbb
call
mov
inc
mov
into
rorl
aam
jl
cs
pusha
push
mov
cmpsl
iret
pop
pop
mov
dec
dec
decl
inc
mov
xchg
in
ss
mov
jae
xchg
push
out
outsb
xchg
dec
lock
mov
dec
sbb
pop
dec
pop
mov
out
popa
xchg
cli
in
inc
das
and
xor
inc
and
dec
mov
add
frstor
sahf
je
mov
cs
fs
fldt
sbb
xor
nop
mov
in
mov
clc
ja
mov
add
or
xchg
fucom
scas
je
in
iret
pop
ds
sbb
aad
adc
gs
xchg
and
cmp
cmc
addr16
jno
arpl
mov
popa
cs
mov
loope
add
push
outsb
cli
fwait
adc
shr
or
mov
das
mov
adc
cmc
ja
jb
push
loopne
repz
sub
lds
lret
mov
xchg
lods
int
push
jl
mov
outsl
push
push
xor
lds
data16
add
insb
pop
fwait
mov
in
dec
pusha
add
fbstp
dec
testl
out
insb
jle
in
or
and
xor
jmp
push
int
ss
adc
and
cmc
mov
out
cmp
mov
test
inc
mov
push
push
insl
sub
add
push
dec
test
nop
aad
cmp
cmpsl
les
out
cmp
inc
gs
dec
mov
jmp
mov
je
fadd
mov
fistpl
inc
mov
mov
cmp
imul
loop
cmp
jnp
jle
mov
shrl
push
loope
jg
push
test
insl
mov
inc
ret
test
cmp
je
jo
aad
mov
xchg
jge
sub
pop
stc
xchg
movsb
or
dec
mov
xchg
fucomi
inc
arpl
sub
dec
je
lock
sub
and
pushf
add
cmc
lds
push
ret
int3
sbb
lahf
xchg
das
and
adc
stc
fistpll
int
xor
pop
stc
mov
adc
insb
cmp
shrl
xchg
lahf
push
inc
pop
mov
mov
notl
dec
fistpll
gs
mov
aaa
scas
xor
sub
jo
jnp
add
xchg
and
jmp
pop
dec
jge
jmp
les
cwtl
xor
ss
stc
cmp
adc
loop
icebp
daa
outsb
in
fs
fdivl
pusha
fwait
dec
rorl
dec
out
je
sbb
in
jb
adc
inc
sub
jne
push
dec
out
and
ds
or
xor
mov
jae
scas
cs
std
push
xchg
xor
mov
fucom
push
not
enter
ret
cltd
loopne
lret
inc
aas
dec
push
test
lcall
lock
lahf
mov
test
jge
in
repnz
ret
push
imul
pop
cmpsb
mov
popa
push
jae
mov
xchg
and
repz
mov
adc
and
mov
mov
mov
mov
sub
add
dec
lahf
jb
mov
jg
mov
in
dec
je
ret
outsb
xchg
mov
inc
push
adc
jns,pn
mov
cwtl
inc
sub
dec
outsl
xor
jae
pop
and
jmp
mov
pop
ss
jnp
xor
andl
scas
ret
add
xor
jb
and
mov
movsb
das
insb
repz
nop
sti
aad
inc
xor
push
cmpsb
inc
jo
push
cmc
mov
jno
loope
iret
inc
inc
cmp
lret
jl
xchg
dec
pop
push
mov
and
movsb
jb
push
push
jl,pt
mov
jp
adc
popf
xor
sub
loopne
xchg
dec
sbb
in
push
loop
fmull
daa
cmpsl
lock
mov
repnz
dec
aam
sub
cmp
in
xchg
bound
std
jge
fidivs
bound
je
out
test
add
hlt
mov
push
test
cmp
push
daa
inc
orb
leave
xchg
inc
cmpb
popf
lods
lret
sub
and
jge
movsb
int
movsb
out
dec
sub
jle
fildll
jo
loop
push
push
or
movsb
inc
xchg
pop
ljmp
mov
mov
lock
insl
in
and
xor
mov
ss
add
jmp
mov
imul
ja
fsubrl
adcl
les
mov
call
inc
inc
int3
xchg
fisubs
mov
out
test
xchg
mov
outsb
stos
dec
fmuls
inc
popf
ss
pop
insb
imul
pushf
testl
je
jle
ds
mov
sti
cmpsl
inc
int
jg
pushf
add
fsin
jne
xchg
jmp
fsubl
add
xor
imul
lock
jecxz
mov
int3
sbb
sub
and
shrl
dec
or
cmp
mov
mov
and
mov
clc
lahf
mov
inc
dec
add
adc
mov
cmp
dec
leave
call
or
xor
in
mov
xor
clc
and
pop
mov
jb
add
lock
cld
inc
stc
rcrl
cwtl
xlat
pop
adc
sub
xchg
mov
scas
push
mov
xor
popf
imul
cltd
ret
or
cli
lds
xchg
cwtl
ret
repnz
add
xchg
mov
popa
std
out
data16
inc
mov
clc
mov
pushf
rcll
fldcw
sbb
inc
fidivrs
xchg
dec
fs
out
fldl
jbe
jge
jnp
xlat
shll
add
fbld
aad
pushf
push
dec
cmp
push
mov
or
adc
and
and
popl
push
sub
bound
mov
repnz
xor
and
cltd
cmc
inc
fimuls
int3
cwtl
push
xor
repz
adc
test
insb
cmp
jb
cmp
adc
sbb
inc
mov
popf
pop
mov
add
sub
out
fucomp
data16
pop
and
fimuls
rol
lock
inc
push
inc
movsl
adc
test
out
mov
sahf
xchg
sbb
outsb
adc
add
cld
lock
sbb
aas
adc
mov
jbe
add
test
cwtl
adc
out
cwtl
and
mov
jmp
sbb
jle
xlat
imul
xchg
xchg
xor
sub
ret
jecxz
inc
xchg
inc
xor
out
cmpsb
cmpsb
gs
or
xchg
sub
ficompl
pushf
loopne
outsb
idiv
mov
cli
popl
and
stos
lock
int3
rcrl
ds
sbb
mov
out
xor
fcomps
and
mov
cmp
test
js
pop
cld
idivb
daa
push
jo
mov
pop
pop
adc
fldl
xor
xchg
loopne
movsl
jmp
sbb
popf
pop
fldln2
and
imul
dec
adc
dec
mov
aaa
int3
sub
sub
pushf
lret
dec
ss
nop
xchg
jnp
bound
push
notl
xchg
out
jnp
xchg
push
and
xlat
cld
mov
ss
adc
inc
mov
cmp
dec
cmc
cmp
add
fcoml
repz
or
cld
and
dec
dec
cli
lods
nop
pop
inc
sti
pusha
xlat
xchg
add
test
adc
out
sub
adc
jnp
jne
aas
stc
xchg
xor
add
push
pop
mov
setl
dec
stc
dec
jb
shlb
pop
jmp
out
or
jbe
lods
ljmp
mov
add
mov
fldl2t
sbb
addb
dec
mov
pop
ror
xchg
xchg
stc
rclb
cmp
pop
xor
xor
lods
or
or
fisubrl
mov
in
cli
sub
jge
or
mov
insb
mov
pop
push
ret
or
lcall
jp
aas
loop
xor
mov
sub
sub
xor
out
pop
or
mov
out
cmpsb
jnp
sub
cs
mov
push
mov
iret
not
adc
add
je
in
pop
xlat
int
or
mov
and
push
push
and
stos
sub
jae
hlt
mov
ficoms
shlb
jno
mov
dec
push
xor
add
insl
xor
xchg
fbstp
ficoms
cld
dec
insl
adc
ss
push
push
ficoms
adc
adc
jb
lcall
out
loopne
mov
dec
test
cmp
fmuls
xchg
je
mov
cmp
mov
xor
call
movsb
sub
jp
cmpsb
inc
dec
and
orb
js
jbe
xorb
mov
sbb
adc
outsl
xlat
out
mov
jp
mov
mov
jno
cmpsl
mov
push
xor
mov
or
aam
mov
shl
comiss
jb
adc
cmp
int
push
or
ja
push
xchg
jno
xor
adc
lret
es
inc
loop
lods
add
jecxz
xlat
push
xchg
loope
cmpb
outsb
lret
mov
mov
dec
push
or
add
call
pop
aas
ds
ffree
sti
pop
or
clc
aas
daa
add
in
xchg
imul
mov
mulb
xor
ret
push
fadds
inc
pusha
cmp
bound
jl
fbld
jmp
jmp
mov
cmp
cwtl
fldt
xor
pop
inc
mov
mov
jb
fistl
add
scas
frstor
jne
jb
pop
popa
repnz
xchg
es
jns
sub
jmp
xor
mov
pushl
inc
dec
insl
loop
push
ljmp
jmp
sbb
adc
cwtl
jecxz
push
dec
push
inc
aam
pusha
shl
ja
push
dec
insb
fwait
les
dec
cmp
idivb
and
xchg
adc
in
adc
pop
test
mov
hlt
daa
movsb
into
ds
lcall
lock
sti
sub
cmpsl
les
rcr
cmc
mov
dec
push
je
jo
sbb
call
aam
fcoms
sub
stos
ret
mov
lock
push
lret
aas
jle
bound
adc
daa
faddl
mov
fs
je
mov
push
bound
scas
pop
mov
inc
in
cmp
add
hlt
xor
andb
push
jp
nop
mov
leave
jecxz
mov
or
jg
loope
jns
or
lcall
xchg
mov
cmp
xchg
adc
movsl
jno
in
scas
outsb
mov
fcmovbe
inc
jo
sub
and
sbb
pop
cli
movsb
je
add
dec
dec
jmp
push
fistpl
push
test
add
fistl
and
fs
enter
cmpb
mov
pop
mov
mov
shl
mov
adc
mov
jne
cwtl
loop
dec
adc
sbb
jnp
gs
lea
jne
add
movsl
bound
lret
repnz
xchg
pop
sbb
xor
xor
sub
data16
inc
mov
daa
sbb
fs
ljmp
ficompl
test
les
fists
lods
inc
or
fbld
pop
jbe
mov
jge
aad
pop
sub
sub
add
loopne
arpl
mov
cmp
sbb
sarb
int
cmp
jp
pop
lea
push
push
push
lods
test
push
push
decl
cmc
push
sbb
movsl
negl
leave
sub
iret
inc
ffree
add
add
sti
and
push
in
test
aaa
dec
add
stc
jg
dec
pop
dec
ds
iret
mov
push
fildl
cmp
pop
mov
inc
add
xchg
fs
bound
jns
insl
data16
xchg
das
aad
in
stos
mov
mov
jmp
sahf
xchg
cmp
or
cmpsb
cs
lcall
aaa
inc
ds
andl
lret
out
test
cmp
neg
xchg
insb
push
push
mov
add
lahf
testb
xchg
in
push
jg
mov
dec
cs
adc
popf
push
fsubr
adc
add
inc
jae
sbb
out
mov
xchg
pop
mov
stos
iret
or
cld
push
mov
mov
fnstsw
and
sbb
leave
mov
and
jecxz
lods
pop
test
adc
pop
ja
mov
dec
stos
cmp
ret
enter
or
or
mov
stos
or
mov
inc
lods
ret
iret
test
out
scas
roll
mov
rorl
std
movsb
mov
push
dec
inc
fwait
test
aaa
and
mov
xor
stos
and
sbb
jecxz
aaa
sbb
or
adc
cmp
stos
out
pop
fisubrs
xchg
pushf
insl
fcoml
or
jg
push
lcall
mov
push
js
add
cmc
test
test
icebp
pop
scas
leave
cmpsb
lcall
add
std
std
jnp
nop
xchg
sub
insb
enter
lds
mov
and
ljmp
push
xchg
push
and
pop
sbb
dec
lret
jl
cld
sub
nop
insl
out
dec
and
sub
sbb
xor
mov
push
push
pop
pop
push
loopne
sub
push
push
jle
add
push
xchg
shlb
xlat
mov
mov
movsl
xchg
sub
inc
clc
jp
xchg
repz
jnp
mov
lds
sbb
add
sahf
test
pop
pop
fstl
xor
addr16
sbb
mov
cld
outsb
fnstcw
adc
push
sbb
lret
js
repz
push
pop
mov
sbb
jmp
stos
push
ret
sbb
pop
lock
les
fisubs
pop
mov
cwtl
cmpsl
mov
dec
mov
add
sbb
cmp
or
inc
jns
test
sahf
dec
sar
sbb
roll
addr16
fisttpll
gs
jo
loop
jo
adc
pop
mov
cmp
or
mov
xchg
gs
into
imull
add
mov
cmp
in
inc
in
iret
xchg
and
fistl
andb
mov
and
or
cmc
mov
mov
fldl
xor
dec
lret
mov
jae
popf
jbe
pop
cmpl
dec
push
decl
repnz
push
fs
mov
cmpsl
sti
adc
test
dec
mov
int3
movsl
lods
sub
mov
adc
sahf
out
xchg
inc
lahf
jmp
inc
ja
aad
sbb
mov
push
jnp
xchg
shl
ret
lods
dec
inc
call
mov
hlt
call
pop
fnsave
pop
movsb
mov
cmp
fwait
mull
pop
icebp
or
call
test
test
test
dec
pop
sbb
add
enter
mov
aas
clc
aas
enter
mov
ret
cmpsl
and
xor
int3
shrl
aas
insl
cmp
mov
inc
shl
repz
sbb
jge
int3
ja
xchg
cmp
stos
cltd
and
pop
mov
not
cmpl
dec
ja
aaa
and
sub
and
sbb
mov
addr16
sub
dec
xor
add
bound
mov
push
test
mov
lock
push
in
es
not
mov
and
push
dec
movsb
repz
xor
push
ds
adcb
push
negb
addl
or
add
jbe
jmp
insl
and
inc
and
mov
shlb
add
pop
cmp
dec
or
outsl
fs
dec
idiv
div
movl
xor
mov
xor
push
cwtl
mov
and
mov
dec
mov
lock
mov
test
cmp
jnp
popf
jle
movsl
jecxz
push
adc
sub
cwtl
and
xchg
clc
xor
out
stos
mov
sub
add
lods
mov
orl
xchg
add
inc
push
jmp
popf
pop
sub
sub
adc
cmp
test
dec
test
adc
outsl
mov
add
and
nop
xchg
sbb
mov
rorb
sbb
cwtl
daa
push
cli
mov
adc
jp
or
scas
imul
fistpl
repnz
add
fsubp
mov
dec
push
shr
nop
movsl
test
dec
jnp
jo
sbb
pushw
sub
inc
shll
popa
sub
nop
fs
mov
sarb
movsl
xchg
inc
call
mov
and
lods
pop
add
add
dec
loop
sbb
test
pusha
rorl
leave
mov
xchg
and
and
outsl
ficoml
clc
aas
fstpt
xor
pop
shll
push
sbb
cmp
leave
mov
and
xor
jb
jae
outsl
lds
adc
cmp
mov
aam
push
add
dec
inc
repz
sub
push
mov
cmp
push
icebp
scas
dec
arpl
movsl
mov
ret
push
xchg
hlt
jbe
insb
cltd
test
mov
pop
jge
test
sbb
jge
aad
aad
xchg
dec
repnz
cmpsl
pop
mov
imul
xor
xor
add
push
sbb
nop
jae
cmpsb
repz
xchg
addb
push
jae
sbb
pop
clc
xlat
pop
xor
inc
sbb
mov
movb
and
and
inc
xchg
mov
add
aam
hlt
pop
loope
sbb
fsts
mov
addr16
es
mov
adc
add
sub
xchg
xchg
xlat
push
movsl
sbb
je
decl
outsb
and
out
inc
sub
test
fnsave
push
rol
dec
cltd
and
cmp
xchg
pop
mull
lods
pop
jp
data16
stc
repz
xchg
rcrb
cltd
sahf
xchg
or
cmp
adc
sub
and
pop
mov
aas
fidivrl
sub
inc
test
xchg
stos
dec
jno
pop
dec
aad
xchg
push
fistps
repnz
ret
mov
test
and
jb
ret
xchg
dec
mov
xchg
inc
xor
push
sub
mov
call
push
inc
mov
lods
in
fs
inc
pop
and
push
sub
ljmp
pop
in
jb
sub
jne
jl,pn
xchg
sar
ret
ljmp
popf
loope
dec
dec
mov
inc
jb
in
dec
push
pop
jmp
adc
lea
mov
and
cmpsb
xchg
ret
xor
sub
dec
lods
add
inc
mov
xchg
xor
ja
xchg
mov
and
pop
pop
mov
inc
add
aaa
sbb
mov
pop
loop
je
stos
fldenv
es
scas
orl
mov
pop
mov
mov
loope
and
outsl
iret
xchg
les
mov
lock
pushf
sbb
lcall
jb
bound
mov
imull
les
lea
adc
mov
pop
daa
mov
mov
das
scas
cmp
jo
jns
scas
cmp
sbb
int3
or
fnstcw
hlt
push
fdivs
push
pop
outsl
cmpsb
xchg
mov
inc
jg
mov
lcall
jecxz
dec
inc
int3
mov
clc
pusha
sbb
test
add
push
stc
xchg
or
andl
mov
test
mov
out
std
xchg
loope
int
outsl
sbb
adc
sti
ret
int3
inc
nop
rolb
in
pop
lds
mov
jge
push
jge
iret
nop
or
mov
stos
mov
push
in
jge
fwait
stc
dec
sub
cltd
xchg
inc
loope
lods
frstor
dec
fisubrl
jnp
imul
je
iret
xchg
test
push
or
mov
jge
shlb
inc
data16
push
add
aad
lcall
call
scas
or
shl
pop
dec
add
push
cmpsb
loopne
dec
fwait
popf
sub
loop
push
loopne
sbb
cmp
push
or
vcvtdq2pd
adc
out
or
lret
mov
mov
lds
dec
mov
lock
std
mov
test
jg
inc
test
outsl
aas
daa
sbb
pop
sti
fdivrs
inc
push
add
pop
and
inc
cmp
test
insl
and
arpl
mov
pop
sahf
adc
pop
cld
xchg
mov
xor
add
and
aas
es
add
sbbl
addl
sti
pop
add
adc
and
test
imulb
loop
or
xor
xchg
mov
mov
data16
push
mov
es
pop
push
mov
mov
std
enter
or
std
cs
adc
sbb
lods
clc
pop
mov
xor
popa
icebp
xchg
inc
dec
jmp
notl
and
cmc
mov
lcall
repnz
mov
sub
in
mov
js
mov
or
lahf
inc
adc
cli
jle
or
adc
sub
pop
testl
adc
out
adc
pop
aam
jne
lret
and
add
pop
decl
out
pop
cmp
push
lods
push
popf
mov
dec
jmp
mov
mov
push
outsl
or
out
xchg
in
mov
mov
call
fwait
loope
aaa
jg
adc
cli
push
jbe
mov
mov
cltd
fldt
cli
cmc
fisubrs
add
and
or
and
test
jo
insl
push
jae
dec
push
out
lahf
sub
or
mov
imul
add
jp
lods
ljmp
mov
adc
push
mov
cmp
or
push
sub
aad
pushf
and
ja
je
stos
add
nop
scas
xchg
mov
sub
lock
lret
fistpll
push
std
and
jnp
xchg
ficompl
mov
test
call
xor
insl
pusha
mov
lea
sti
xchg
fldz
mov
jp
cmp
mov
fs
data16
push
cs
fisttpl
notb
xchg
in
inc
in
sbb
decb
mov
adc
leave
testb
push
fs
pop
adcb
outsb
sub
sub
in
fmuls
test
loopne
dec
xchg
gs
dec
pop
sub
jne
test
mov
jns
mov
sub
sub
sbb
stc
sub
incl
cmp
mov
mov
leave
sti
outsb
inc
cli
addr16
sbb
pop
jmp
into
stos
dec
dec
fildll
xchg
ret
stc
adc
pop
jge
lock
sub
daa
xchg
inc
into
roll
or
mov
fdivl
sbb
ljmp
test
dec
sbb
jg
cwtl
lcall
and
pop
adc
fsubrl
aas
cld
xchg
mov
repz
sti
sbb
or
aaa
int3
leave
pop
inc
xlat
clc
sub
sub
add
pop
loopne
aaa
pop
pop
test
mov
outsb
xor
jne
lods
shl
sbb
outsb
in
mov
mov
mov
push
adc
or
cmp
dec
inc
notl
cmp
out
gs
push
mov
fmul
lret
loopne
sub
adc
sbb
cmp
loopne
movsb
xchg
in
outsb
xchg
stos
mull
mov
push
mov
pop
clc
cmc
jecxz
cmp
inc
inc
test
mov
mov
testb
insl
sub
adc
das
movsb
clc
push
test
test
and
insb
es
sbb
xchg
mov
fcomps
jge
imul
push
push
lock
arpl
aad
sub
mov
mov
out
es
xchg
ja
arpl
fs
mov
sub
test
sub
mov
sahf
stos
or
nop
ss
fmuls
jbe
jg
push
sbb
push
push
fstps
cmp
cmc
xor
cmp
push
jno
ds
addr16
mov
repz
or
mov
inc
push
xchg
lret
sbb
jmp
jnp
and
aam
mov
lock
leave
mov
pop
fdiv
dec
push
fadds
push
and
out
and
push
ror
icebp
lods
in
aam
in
dec
cmp
mov
int3
jbe
xor
adcb
int
aas
inc
insb
xor
loop
inc
out
faddl
lock
stos
std
hlt
pop
push
xlat
xor
adc
pop
popf
inc
insl
dec
mov
sahf
test
add
movsb
dec
inc
subb
adc
sbb
mov
repnz
pop
pop
scas
fimuls
bound
movsl
mov
cld
jecxz
cmpsb
cli
cmp
jne
scas
mov
int
clc
and
dec
nopl
xchg
in
or
jo
les
jle
nop
test
test
insl
movsl
scas
les
clc
popf
rorl
repnz
dec
and
adc
cli
scas
xchg
pop
out
arpl
icebp
jmp
test
add
push
and
add
mov
mov
orl
push
out
js
sub
or
aas
pushf
mov
and
push
in
les
inc
or
imul
dec
cmc
fsub
xchg
dec
push
add
sbb
add
lds
add
bound
sbb
jno
adc
push
push
mov
xchg
cmp
pushf
in
out
inc
scas
jno
std
pop
xchg
in
push
bound
push
int
adc
ficomps
movsb
dec
loope
xor
pusha
fs
in
mov
cmp
adc
adc
adc
into
cmpsb
test
jno
adc
xchg
aas
ljmp
faddp
mov
popf
ja
push
pop
gs
add
pusha
xchg
pop
push
adc
clc
clc
xor
mov
push
int
dec
jb
stos
dec
adc
rcll
popf
inc
jl
scas
xchg
inc
fistl
jecxz
inc
mov
mov
pushf
sbbl
jo
sbb
cmp
test
add
xchg
xchg
push
dec
sbb
movsl
cmp
pop
out
rcrl
cmp
sbbb
inc
jne
jae
loopne
inc
xor
in
sbb
xchg
shlb
mov
leave
sbb
adc
cmpsl
sub
jmp
pop
jge
aas
lods
idiv
sbb
lcall
and
inc
lods
pop
jb
jnp
jge
jp
test
xchg
adcb
dec
mov
andb
out
lea
jg
rcrb
pop
hlt
mov
add
fildl
inc
mov
and
mov
pop
popa
cli
dec
lret
cmpsl
testl
inc
les
lods
or
jp
dec
jbe
notl
sbb
insb
jl
push
std
xchg
adc
sahf
sti
addr16
rclb
jle
loope
mov
mov
outsl
test
jae
testb
imul
push
push
and
in
lcall
mov
cmp
movsl
push
es
xchg
inc
pop
pusha
ja
test
cli
jecxz
pop
mov
push
ss
cli
jle
insb
jns
insb
cmc
filds
jl
pop
jnp
scas
test
cmp
fistpll
push
fldl
sbb
es
dec
aaa
jb
dec
inc
sub
mov
xchg
sbb
cmp
sahf
pushf
addr16
lods
mov
cwtl
fsubs
jl
leave
mov
bound
cli
pop
aam
inc
and
and
add
popa
test
in
scas
in
push
hlt
or
jle
jo,pn
mov
cmp
adc
pop
les
fnstenv
sbb
sub
stos
fldcw
xchg
jecxz
pop
mov
inc
push
dec
mov
int3
call
dec
or
test
in
inc
es
stos
push
into
sbb
mov
jo
adc
fsubr
arpl
aaa
sbb
cmpl
test
hlt
and
pop
cmp
mov
mov
push
push
inc
jle
cmp
shlb
mov
bound
xchg
inc
lahf
push
and
xor
cmc
arpl
pushf
out
notb
adc
pop
mov
mov
cltd
popa
fcmovnu
call
adc
in
xchg
lods
loope
and
inc
imul
test
fstl
sar
xlat
mov
cmp
shrb
dec
pop
sti
or
sbb
fmul
push
xchg
ss
aas
insb
pop
adc
shl
nop
cltd
sahf
addr16
sub
mov
pop
iret
push
dec
adc
movl
hlt
jno
loop
sub
ljmp
rclb
push
lcall
dec
sub
je
xchg
pushf
jae
test
adc
aad
lret
or
lea
arpl
in
ret
sbb
mov
cmp
add
cmp
add
cmp
add
cmp
add
or
sub
or
cmp
add
or
add
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
orb
add
add
incl
add
add
orl
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
pushf
dec
add
add
add
incl
add
add
dec
add
add
add
lods
dec
add
incl
add
add
add
add
incl
add
add
mov
add
add
add
incl
add
add
mov
add
incl
add
add
add
add
decl
add
dec
add
add
add
rorl
rorl
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
lret
and
dec
add
lcall
dec
add
dec
add
incl
add
add
aam
add
add
add
rorl
sbb
dec
add
incl
add
add
add
incl
xlat
dec
add
pop
dec
add
jmp
dec
add
in
add
add
add
incl
add
add
in
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
call
add
incl
add
add
call
add
incl
add
add
add
add
incl
add
add
jmp
add
add
add
sti
out
dec
add
out
dec
add
add
add
incl
dec
add
dec
add
inc
icebp
dec
add
icebp
dec
add
push
dec
add
add
popa
dec
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
cmc
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
clc
dec
add
add
add
incl
add
add
clc
dec
add
add
add
incl
add
add
stc
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
std
dec
add
add
add
incl
add
add
dec
add
add
add
jmp
decb
jmp
jmp
decl
in
decl
lock
incl
add
add
dec
add
jmp
add
and
pushl
add
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
or
ljmp
push
dec
add
add
add
add
push
cmp
add
xor
add
or
fidivrl
or
in
cmp
add
cmp
add
or
sub
or
cmp
add
or
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
cmpsl
scas
gs
fcmove
hlt
loopne
cld
inc
pop
ljmp
mov
dec
jnp
std
lods
push
dec
scas
adc
hlt
imul
call
mov
push
ljmp
dec
add
stc
mov
push
cwtl
mov
ret
icebp
pop
mov
push
xchg
cmp
push
sub
sub
divb
stc
mov
leave
mov
mov
cld
xorl
icebp
out
cmpsl
mov
aaa
lods
inc
fyl2xp1
out
xor
mov
mov
sbb
ljmp
mov
pushf
fwait
cmp
js
fistps
neg
out
mov
repnz
addr16
aam
push
inc
nop
jns
imul
mov
loop
push
or
rcrb
enter
jmp
sbb
scas
test
jnp
add
popa
sbb
mov
pop
cmp
xchg
sbb
sub
cmp
bound
pop
filds
clc
ret
pop
sbb
cmp
clc
mov
imul
xchg
cli
les
pop
std
rcl
lret
fbld
jo
roll
adc
inc
movsl
sub
adc
es
add
xchg
pop
dec
sahf
data16
sbb
inc
out
push
mov
xorl
shll
and
loopne
es
mov
mov
cmp
test
vlddqu
in
lods
call
cld
inc
out
movsb
addl
inc
mov
jno
ret
add
fcoml
pop
xchg
lret
ret
jae
out
repnz
inc
stos
mov
lea
rorl
cmp
push
in
mov
jbe
scas
mov
cmp
cwtl
scas
insl
inc
xchg
test
push
dec
std
aaa
mov
dec
xchg
negl
ds
sbb
gs
sub
test
out
adc
insl
cwtl
jno
test
or
adc
in
shl
jno
vpaddb
adc
into
jae
lcall
in
dec
xor
mov
test
cmpsb
test
mov
jo
mov
leave
dec
sub
ret
push
push
jge,pt
insb
jmp
dec
mov
xor
insl
orb
pushf
fistpl
jl
push
push
test
shlb
mov
or
cmpsb
adc
int
leave
sar
lds
mov
stos
cmpsl
fcomps
mov
testb
icebp
cs
xor
sbb
fdivs
mul
mov
add
ficompl
sbb
lret
cwtl
push
iret
push
adc
jns
or
pop
repnz
js
shlb
int3
xor
outsl
repz
aad
insb
stos
fadds
lahf
loope
iret
pop
aad
jecxz
adc
xchg
fdivrl
xor
hlt
xchg
xchg
xor
push
jmp
pop
cmp
adc
inc
mov
mov
or
push
pop
aas
pop
cld
rclb
jnp
mov
push
mov
prefetcht0
mov
cmp
and
inc
pop
ss
push
push
mov
sahf
push
push
push
scas
pushf
int3
push
jmp
mov
cmp
jnp
test
jecxz
ret
js
stc
into
les
in
pop
mov
xor
mov
cmp
mov
xchg
push
fisttps
xchg
sbb
rorl
in
jnp
popf
idiv
xchg
push
lock
std
push
testb
inc
mov
in
outsb
xchg
rclb
and
jge
inc
ja
dec
daa
lret
loope
repz
mov
ja
popf
inc
cld
cmc
pop
xor
sbb
pause
popf
inc
mov
call
movsl
lock
jge
loop
mov
xor
push
test
xchg
outsl
adc
xor
insb
xor
out
mov
or
jbe
fwait
imul
adc
stos
sub
sti
cmp
imul
sub
in
loop
outsb
nop
lahf
lods
xchg
loop
or
vpsubsw
add
scas
cmp
lock
cmpsb
repnz
sub
test
or
pop
push
push
cmp
js,pt
pop
ja
test
pop
xchg
cmpsl
jns
cmp
dec
aam
testl
flds
roll
addr16
js
popf
insb
mov
jns
ret
inc
xchg
es
jg
push
dec
dec
push
cmp
jb
inc
pop
and
js
lods
jno
and
dec
fwait
cli
adc
cwtl
jae
cmp
mov
ljmp
push
xchg
mov
fistps
daa
stos
add
mov
ljmp
sbb
xor
sub
scas
sbb
xchg
xor
lods
inc
scas
in
add
mov
cld
and
out
rclb
mov
pop
arpl
punpckhdq
xchg
fldcw
out
adc
dec
pop
push
inc
cmp
bound
xchg
lea
xorb
xlat
inc
jno
mov
cmp
rolb
hlt
shlb
ljmp
and
inc
cmp
lods
aas
pop
xchg
mov
inc
xor
mov
outsb
jecxz
rorb
mov
xor
outsl
pop
pusha
rcr
pop
int
iret
mov
add
dec
push
xor
dec
call
addl
push
in
jne
in
ljmp
in
pop
inc
mov
clc
mov
fwait
xchg
inc
sahf
dec
xchg
push
push
in
out
cli
shll
jmp
cmp
stos
jb
mov
pop
push
fldcw
and
push
push
mov
loope
dec
arpl
mov
andl
mov
or
and
dec
enter
add
outsb
pop
test
in
pop
rol
mov
xchg
gs
xor
cmp
cwtl
xor
sbb
loopne
outsb
lds
mov
adc
fildll
scas
enter
mov
xchg
fstpt
dec
dec
arpl
jmp
jle
stc
out
loopne
clc
dec
popa
out
mov
push
xlat
push
jb
clc
or
ret
dec
push
jp
fcomp
and
insb
mov
decl
nop
js
jge
lods
or
insb
cmpsb
mov
hlt
adc
sbb
and
mov
mov
add
imul
cmp
movsb
test
scas
sahf
in
fidivrs
int3
test
popf
jo
fcoms
testl
mov
icebp
sbb
in
ljmp
loop
dec
push
mov
mov
adcb
xor
xor
les
dec
rclb
stc
sub
lods
cld
jno
ljmp
sti
sbb
xchg
aam
or
mov
xor
cmp
inc
incb
test
testl
inc
push
xor
loope
jae
pop
pusha
inc
test
mov
add
xchg
add
pop
int
cmp
jb
and
push
adc
in
or
push
cmp
mov
mov
pop
dec
pushf
add
mov
mov
inc
cmp
push
je
mov
bound
stc
xchg
clc
cmc
std
repz
enter
pop
repz
sbb
pop
lret
xor
jb
jmp
mov
xchg
sbb
aas
pop
sbb
mov
ljmp
enter
scas
fists
lea
shrl
xor
cmp
inc
dec
adc
stos
or
cmp
pop
int
jo,pn
fstps
ss
movsb
cmp
aas
adc
sahf
pop
xchg
push
inc
gs
cli
fnstenv
sar
mov
inc
or
sub
fldcw
aas
inc
imul
sbb
iret
push
cld
cmc
xor
jecxz
push
in
out
pop
fucomi
xor
cmp
stos
scas
jns
sbb
fisubrs
les
shr
stos
sub
push
je
rcll
je
pop
adc
dec
test
icebp
pusha
nop
mov
mov
iret
fs
in
pop
aam
sti
inc
adc
lret
xor
scas
xor
adc
shll
das
lods
es
stos
and
dec
adc
out
mov
pop
xlat
pusha
jo
movsl
inc
xor
mov
mov
sub
aam
fwait
int3
loope
aaa
jae
sbb
sti
xchg
popa
test
inc
stc
fildll
and
cmp
push
fwait
lea
jbe
aaa
fs
imul
lahf
mov
inc
sbb
dec
add
cmp
je
add
test
pushf
xor
int
idivl
test
add
insb
mov
cs
lea
jb
int
push
mov
jne
inc
adcl
sub
insb
test
lock
scas
cmp
push
or
jg
pushf
xor
cmp
dec
dec
pmaddwd
imul
in
fistpll
mov
div
mov
in
cmpb
jno
inc
xchg
or
xchg
lcall
rolb
and
lret
xorb
stos
pop
cmp
xchg
xchg
shr
rcl
stc
lret
insl
ret
mov
xlat
cmpsl
ljmp
mov
in
je
adc
sub
call
repnz
dec
popa
sarb
call
cmp
pop
les
outsl
jbe
lahf
mov
jmp
mov
imul
stos
pop
loop
xchg
and
cmc
js
dec
xor
aas
xrelease
inc
adc
mov
push
outsb
pop
fcomps
or
xor
mov
mov
cmp
decb
sbb
aad
push
push
subl
stos
add
jnp
dec
adc
insb
xor
frstor
cmp
ljmp
dec
notl
jecxz
les
dec
mov
mov
jns
fstl
push
cs
ss
gs
movsl
shll
arpl
push
int3
enter
test
in
f2xm1
xchg
mov
push
bound
cmpsb
pop
jae
mov
mov
movsl
jno
insb
push
xchg
pop
and
jle
add
jg
add
jnp
or
adc
push
aas
mov
mov
xor
gs
scas
test
imul
in
mov
pop
imul
mov
sahf
inc
or
push
sahf
push
mov
shrb
iret
adc
mov
ret
push
std
and
out
lahf
xorl
mov
pop
xchg
cwtl
push
sbb
mov
repz
je
jge
inc
and
xchg
rolb
jb
lahf
cwtl
scas
jle
sbb
jmp
cs
inc
xor
scas
cmp
loope
dec
ret
mov
fisubrl
xchg
bound
sub
push
adc
sbb
mov
mov
adcb
mov
test
jmp
adc
out
inc
popa
mov
fdivs
jnp
out
pop
inc
push
jns
xor
mov
fstps
shll
or
jle
out
shrl
rclb
jle
sti
icebp
xor
clc
or
int3
hlt
xor
mov
xchg
push
xor
jmp
outsb
stos
mov
in
sub
mov
test
push
scas
enter
in
jecxz
cmp
addr16
data16
push
imul
pop
xor
inc
pop
push
xchg
xor
mov
mov
ret
inc
lods
arpl
repnz
sbb
adc
or
call
scas
dec
push
push
or
xchg
mov
push
and
pop
adc
ljmp
add
cld
xchg
ja
or
lea
mov
iret
push
loope
ret
insb
rcrb
push
test
imul
cmc
dec
push
fstl
push
sub
mov
adc
jle
data16
cmp
lock
test
adc
push
adc
mov
and
xor
push
inc
scas
adc
clc
xor
hlt
xlat
xor
jg
movsl
js
sbb
out
xor
frstor
inc
jns
sub
xor
dec
scas
daa
mov
movsl
test
hlt
pop
lret
or
dec
mov
or
mov
xor
data16
or
push
out
scas
fmuls
adc
js
subl
leave
mov
int
inc
out
cmp
jo
in
lret
xchg
enter
cmpsl
xchg
sub
lret
icebp
push
mov
in
clc
shrl
rcl
sbb
push
mov
adc
sub
pop
in
dec
adcl
or
adc
xlat
jg
iret
inc
das
jns
mov
cmp
push
xchg
xor
mov
push
cmc
dec
les
inc
add
ja
loope
cmp
mov
dec
cmpl
or
arpl
xor
les
ss
mov
movsl
outsl
sub
aad
push
daa
dec
sbb
push
out
bswap
add
sarb
add
cmp
test
dec
push
dec
adc
pusha
inc
mov
pop
adc
mov
xchg
xor
mov
mov
bts
addr16
sbb
in
lea
fmull
or
hlt
leave
adc
out
in
push
xor
enter
lret
rclb
inc
inc
cmc
push
mov
pop
or
aas
sub
jle
add
ds
jmp
sahf
shll
and
dec
inc
and
jmp
fdivrl
loop
fisubrs
sub
add
aaa
xchg
int3
cli
mov
push
sbb
mov
dec
addb
out
pop
popf
nop
pusha
shl
cmc
jno
mov
xor
mov
aam
pminsw
fisttpl
addr16
pushl
mov
fisttpll
bound
mov
jmp
mov
and
ret
mov
mov
lcall
ds
sbb
mov
js
or
mov
xchg
or
mov
jl
jle
cwtl
adc
shrl
mov
aam
call
fwait
and
jb
dec
mov
xor
sahf
mov
dec
dec
xchg
jae
jbe
pop
push
test
jns
cmp
mov
and
test
inc
adc
mov
dec
sbb
push
arpl
cmp
repnz
mov
cs
add
sub
mov
imul
es
mov
sbb
jnp
mov
inc
mov
push
push
mov
cmpsb
xchg
data16
incl
imul
push
iret
push
adc
pushf
add
push
std
or
sub
push
push
lcall
cltd
std
test
xor
in
cs
xchg
and
xchg
xchg
in
data16
push
mov
add
scas
call
test
jbe
jecxz
xchg
add
fisubrl
cwtl
jns
sub
push
cli
or
jnp
mov
lods
imul
lret
hlt
mov
lret
dec
and
dec
adc
sub
mov
cmpsb
inc
ficoms
pop
les
imul
movsb
bnd
push
cs
jmp
jae
adc
cwtl
cmp
mov
pop
jns
frndint
subb
lock
push
out
test
push
rcrl
inc
ret
pusha
xchg
mov
sti
push
mov
xor
and
iret
cwtl
arpl
pushf
mov
mov
std
aas
arpl
xor
xchg
iret
out
mov
inc
cltd
push
clc
sbb
mov
sub
cmp
ds
mov
inc
inc
mov
cmp
loope
jns
movl
push
or
jp
jecxz
sub
leave
sbbb
or
add
pop
out
mov
pop
je
iret
lret
sub
cwtl
push
jnp
aad
scas
pop
jge
and
add
push
inc
imull
in
dec
gs
in
stos
inc
mov
popa
repnz
mov
mov
js
ja
das
add
or
adc
pop
mov
nop
jae
stos
fcom
mov
pop
and
inc
jno
outsl
mov
fsubl
xchg
fwait
jns
cwtl
pushf
jp
cmp
push
fistpll
repnz
lcall
cmp
mov
js
xor
lock
xlat
dec
aaa
cmp
icebp
cmp
or
xorl
std
les
outsl
les
leavew
pop
je
int
mov
mov
cwtl
sub
mov
pop
push
pop
mov
andl
cld
lock
inc
add
mov
push
js
adc
mov
or
je
es
sti
ret
inc
int3
push
int
es
and
push
stos
daa
mov
out
cwtl
imul
xchg
dec
nop
xor
out
dec
push
ror
inc
fstl
sbb
add
inc
movsb
mov
subl
dec
cwtl
inc
mov
arpl
cmc
outsb
cli
mov
pop
add
adc
or
push
fldenv
or
mov
mov
dec
jnp
dec
adc
xchg
aaa
outsb
pop
fwait
mov
vpermilpd
test
js
lock
sub
lahf
jecxz
sbb
mov
or
sub
insl
sbb
cmc
add
jno
dec
cwtl
cltd
aad
aad
jmp
add
pop
xor
notl
cmp
fcmovbe
xchg
inc
dec
js
js
and
out
sbbb
sbb
call
push
lock
fdivrl
or
sbb
and
outsb
add
sahf
xchg
loop
in
mov
hlt
jns
pusha
pusha
pop
push
fwait
jb
je
in
jl
jmp
and
inc
push
xchg
rcrb
jno
ljmp
aam
aas
push
ret
inc
or
aas
add
sub
mov
lods
cmp
in
jmp
lcall
or
addr16
aas
xchg
repnz
icebp
add
movsl
cs
fadd
lods
jne
ja
cmp
or
cwtl
nop
adc
push
test
cmp
clc
jle
dec
ret
test
mov
jnp
movups
inc
scas
lret
push
leave
jbe
test
mov
pop
mov
jmp
shrl
push
fsubs
out
mov
mov
dec
sub
adc
test
push
inc
sbb
xchg
cmp
test
jnp
push
loope
test
enter
insl
push
cmpsl
iret
mov
adc
pop
push
mov
mov
fsubp
jnp
icebp
aaa
hlt
popf
sub
jbe
inc
lret
aam
out
mov
out
aam
jne
das
mov
jbe
push
dec
xlat
rolb
cmp
cltd
icebp
inc
jmp
mov
rcl
adc
cmp
mov
sub
mov
aas
and
lds
sub
mov
or
std
inc
xor
orb
lahf
xchg
inc
fstpl
ss
nop
push
pop
dec
pop
dec
xchg
dec
inc
inc
xchg
fs
scas
push
int3
xlat
f2xm1
jge
sti
xor
cs
push
push
add
clc
or
mov
push
add
js
push
adc
ret
sub
insb
sbb
ds
repz
add
xor
out
int3
sub
incl
testb
xchg
adc
sub
sbb
jg
push
pop
adc
push
notl
mov
gs
push
adc
nop
sbbb
nop
add
xchg
test
mov
xor
xlat
push
in
xchg
dec
ret
lds
add
jnp
call
sbb
insl
and
pop
je
cltd
xchg
jne
dec
jge
dec
in
jg
lds
popf
out
jb
and
cmc
dec
adc
mov
inc
sbb
outsl
rolb
sbbb
test
and
popf
pop
cmpl
cmpsb
pop
outsb
mov
dec
sbbl
mov
mov
aaa
sub
pop
push
pop
xchg
loope
mov
lods
inc
mov
fistpll
addr16
cmpsl
pop
xchg
xor
add
or
inc
adc
push
push
fld
cmp
mov
test
inc
pop
and
xchg
data16
gs
fdivl
js
push
jns
mov
outsb
call
mov
mov
rcrl
jno
fwait
dec
insb
sub
shr
stos
sub
imul
jle
mov
in
cmp
adc
cld
mov
mov
stos
xchg
loopne
inc
xor
leave
sbb
add
ret
pop
ficoml
arpl
jle
push
int
lret
movsb
enter
mov
movsb
movb
mov
ljmp
and
ds
shrb
or
mov
insl
dec
outsb
cmpsb
mov
lds
repz
xor
jae
fildl
aas
sub
adc
mov
or
stos
and
ret
nop
repz
iret
add
fcoms
adc
cmpsl
cmp
lea
add
mov
pop
or
icebp
imul
sbb
mov
xchg
mov
fwait
rep
gs
xor
inc
and
add
inc
adc
lock
cmp
and
pop
into
sahf
mov
lods
adc
sahf
xchg
push
cwtl
insb
jne
sti
lock
ljmp
sarl
adc
gs
push
push
sarl
in
sbb
cltd
mov
pop
sbb
je
stos
arpl
dec
idivb
fnstenv
pop
shlb
jno
test
sub
cli
cld
xchg
js
xchg
jae
pushf
fwait
aad
fistpll
popa
ljmp
fsubs
inc
loop
loop
out
icebp
add
fs
adc
lock
sub
mov
out
jb
loop
test
scas
push
mov
fsts
aas
inc
aad
pop
jmp
popf
mov
or
imul
pop
add
pop
hlt
inc
scas
lods
push
sarl
mov
clc
or
mov
inc
pop
popa
push
imul
mov
push
cltd
call
xlat
rcll
out
push
mov
or
shl
xchg
jmp
mov
jp
pop
jnp
xchg
cltd
jp
cs
repz
lods
mov
fcoms
idivl
jnp
pop
add
test
es
les
jg
repnz
data16
xchg
dec
xchg
sub
dec
push
adc
and
jl
insl
cmp
les
shll
shll
lcall
mov
ss
dec
push
fcompl
frstor
inc
pop
es
mull
cld
inc
ds
data16
push
jmp
dec
or
std
push
filds
aam
jle
xchg
aaa
seto
jae
sbb
inc
leave
xor
aad
adc
mov
push
imul
enter
add
lods
and
xor
mov
mov
lds
in
pop
lods
push
je
or
mov
cmp
xor
sar
and
repnz
adc
lods
xchg
pop
imul
dec
cld
fidivrs
mov
fidivrs
dec
insb
jo
jno
adc
cmp
cmp
icebp
xor
call
popf
lahf
fisubs
mov
shrl
sub
jns
and
sarb
insl
pop
js
mov
ljmp
xor
mov
leave
push
sbb
stos
dec
in
sar
