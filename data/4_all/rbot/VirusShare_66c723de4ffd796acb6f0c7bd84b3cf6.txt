pop
fcoml
shlb
jp
push
ret
loopne
lds
mov
popa
insl
adc
sbb
in
lods
cs
jne
xlat
lcall
shr
adc
pushf
push
shr
mov
ffreep
add
lea
push
jnp
mov
scas
inc
mov
mov
inc
sub
int
aaa
jno
imul
xchg
add
mov
adc
push
mov
sub
or
inc
scas
loop
hlt
repz
div
adc
adc
out
test
mov
icebp
addr16
daa
lahf
cmp
xchg
out
arpl
inc
mov
mov
xchg
jbe
das
sbb
jno
jae
mov
bnd
js
dec
adc
out
test
inc
push
je
cmc
pop
push
or
call
iret
fdivrl
dec
pop
pop
sti
dec
dec
sbb
jl
adc
lods
mov
fwait
pop
add
std
cmp
push
push
push
mov
aas
orl
pop
add
push
add
inc
mov
inc
pop
add
pop
cmp
push
jl
push
or
aam
xor
stos
cmp
jle
hlt
bound
aam
mov
fwait
and
jl
imul
test
shlb
out
cltd
fnstenv
fwait
or
jg
sub
filds
loopne
test
loope
cld
test
pop
test
inc
jmp
outsl
daa
cwtl
mov
je
adc
testl
dec
mov
and
xor
rcl
cmp
loop
mov
addr16
jae
mov
mov
cld
and
mov
and
imul
cmpsb
sub
subb
fbstp
adc
aas
cmp
jne
daa
push
cmp
cltd
nop
sti
imul
xchg
jge
rorl
ljmp
in
add
rcrl
fldcw
xchg
and
adc
movsl
and
add
addb
cmc
andb
and
push
test
in
mov
xchg
pop
je
inc
and
stos
jo
mov
hlt
xchg
or
fsubs
shrb
aad
addl
and
jge
sbb
cmp
adc
pop
shrl
in
test
mov
cmp
xor
pop
rolb
pop
loope
inc
xchg
cwtl
mov
push
adc
popf
daa
jl
mov
fwait
cmp
or
xchg
jmp
cmpl
shll
inc
ret
in
add
jecxz
adc
cmp
cli
jae
pop
mov
rcr
or
pushf
fstl
xchg
jno
arpl
or
mov
or
lock
mov
push
add
out
dec
push
sti
xchg
xchg
mov
push
add
jns
sub
test
pop
or
int
arpl
fisttps
fadds
lcall
xchg
mov
out
clc
cmp
cmc
push
rcrb
out
mov
mov
test
in
std
ret
dec
cmp
sub
jb
pusha
popf
loopne
inc
xlat
in
daa
dec
loopne
fisubrl
fisttpll
int
xchg
cmpl
inc
pop
sti
dec
fs
push
cltd
mov
jae
stc
xor
or
int3
sbb
pop
and
xchg
jne
add
mov
fnstsw
mov
stos
mov
les
jp
sub
push
std
add
cltd
inc
xchg
testl
fwait
popa
je
xor
jae
fdiv
dec
sbb
ret
add
test
xchg
icebp
aas
out
notl
push
adc
pop
push
pop
dec
out
arpl
fimull
jno
mov
pop
pop
inc
das
gs
or
pop
dec
pushl
sub
popa
sbb
test
xor
sub
fimull
mov
cld
mov
mov
cmp
mov
push
sub
aas
test
and
loopne
push
imul
test
jb
mov
adc
movsl
int3
xchg
icebp
jl
lcall
addr16
es
bound
push
test
neg
ljmp
jbe
or
les
pop
sti
faddl
test
ljmp
or
sti
cmpsl
sarb
inc
rclb
fsubl
pop
mov
mov
mov
mov
scas
cmpsb
or
adc
inc
xchg
cmp
out
xor
addb
es
sbb
and
sbb
movsb
xchg
sub
inc
jae
add
loop,pt
dec
xchg
jle
cmc
inc
cwtl
add
lea
lret
stos
or
or
es
nop
mov
loop
bound
add
cmp
ret
mov
scas
pop
test
jbe
imul
sbb
popf
fldcw
in
pusha
lahf
data16
bnd
fs
xchg
lods
inc
mov
mov
xchg
push
cmp
and
in
xor
int
push
stos
adc
or
arpl
sbb
cmp
or
push
sub
in
inc
xor
pop
dec
dec
or
popa
outsl
push
lods
rcrl
adc
fstl
cmp
pop
push
lcall
mov
fisttps
pop
adc
inc
shlb
sahf
pop
cmpsb
in
scas
cmp
xor
cmp
mov
jno
movsl
aam
cmp
push
xor
mov
pop
inc
xchg
xchg
add
xchg
cld
push
out
add
pop
shl
outsb
divl
fwait
and
jmp
jge
xchg
aas
or
mov
pop
nop
loope
ret
scas
mov
add
lahf
ds
hlt
mov
push
aam
icebp
jmp
xor
test
push
cmp
scas
sub
loopne
shlb
mov
scas
and
sub
adc
pop
mov
cmpb
mov
int
mov
rcr
jecxz
jnp
js
lods
cmp
mov
add
aas
jmp
inc
sub
inc
cmc
dec
xchg
inc
and
push
test
mov
mov
hlt
sarl
dec
imul
mov
aad
mov
pop
loopne
ds
mov
adc
ret
daa
and
loopne
shrb
jge
cmp
mov
mov
inc
lahf
pusha
push
ljmp
jno
inc
push
push
and
sbb
cmp
xchg
mov
xchg
leave
mov
fistpl
add
mov
lock
cwtl
push
hlt
inc
loop
in
mov
sbb
imul
aam
adc
pusha
out
xor
gs
icebp
pop
rorl
inc
jae,pn
mov
and
jg
lds
insl
inc
xor
jo
je
inc
loop
ficoml
sbb
fmull
pop
stos
and
loop
cli
mov
fwait
icebp
fbstp
aam
mov
and
ljmp
dec
mov
add
and
dec
cs
jmp
inc
xchg
dec
bnd
jg
dec
mull
mov
jl
inc
xchg
xchg
in
fs
mov
sbb
cmpsl
jnp
sti
repnz
dec
ret
bound
inc
xchg
mov
push
aad
daa
mov
mov
cltd
clc
fwait
xor
jbe
leave
in
loope
pop
and
fsts
mov
pusha
mov
jae
pushf
push
popf
leave
pop
daa
outsb
leave
inc
rorl
mov
lds
xor
sahf
fdivrl
jp
pop
mov
jnp
add
jns
push
mov
jno
je
repnz
addr16
ja
dec
imul
pop
xchg
xchg
cwtl
cld
std
sbb
sbbb
mov
jb
scas
and
sub
hlt
and
imul
rorl
push
test
push
loop
xchg
roll
fstpl
cs
flds
xchg
mov
hlt
inc
mov
gs
push
xor
fldpi
es
addr16
jmp
mov
ljmp
stc
cwtl
test
push
sbb
in
cld
mov
jns
cmpsb
movsl
pop
fsubr
ss
dec
mov
mov
sub
popl
adc
add
ficomps
xor
pop
inc
shrl
bound
and
mov
sub
scas
jns
bound
stc
inc
jmp
cmp
pop
and
popa
fiaddl
lock
xchg
pop
dec
push
cltd
add
or
adcb
add
orl
add
jno
jb
test
inc
fistps
jne
mov
shrl
scas
fdivr
sbb
adc
inc
rcll
or
push
in
js
sub
push
xor
stos
adc
cmp
xchg
sbb
insb
push
jp
or
push
xor
jge
cs
cmp
adc
adc
push
shll
iretw
xchg
pop
dec
pop
in
icebp
xor
test
fdivrs
xchg
rcll
pop
test
lahf
pop
dec
nop
inc
push
pop
idivb
stos
dec
push
sbb
sub
lds
sahf
popa
mov
jmp
shl
adc
push
pop
xorl
and
mov
mov
daa
int3
push
cmc
pusha
jge
mov
pop
dec
sub
add
adcb
mov
subb
or
sub
sub
ja
movsb
push
adc
out
out
iret
ja
inc
pop
in
fcmovnbe
shrl
aaa
stc
sahf
fldl
fcmovnu
cmp
xchg
lea
or
fmul
lds
stos
sahf
popa
xor
xchg
dec
mov
jae
out
out
adc
subb
movsl
sbb
hlt
cmovbe
push
lea
sub
mov
test
add
add
adc
mov
fcom
js
cmp
ficompl
test
in
aad
or
xchg
xlat
push
sbb
in
js
das
es
outsb
jne
cmp
xchg
inc
push
fwait
jge
jmp
cmp
cwtl
fdivrs
push
and
shlb
jbe
call
shrb
pop
cmp
pop
mov
lock
add
mov
mov
inc
cmp
pop
out
and
pusha
dec
dec
repnz
adc
adc
movsl
pop
cld
pop
sub
loopne
jnp
dec
mov
inc
or
inc
js
mov
inc
faddl
imul
add
sbb
jbe
es
cmpsl
jne
es
xor
and
sbb
nop
or
fld
cmp
xor
jnp
mov
xchg
pop
fldenv
xor
add
bound
sbb
gs
mov
push
jae
pop
inc
mov
adc
and
fcmove
mov
add
mov
mov
aaa
loopne
adc
cld
xor
mov
fistpll
mov
add
lods
inc
jl
sbb
pop
push
xor
js
sbb
jne
xchg
push
pop
iret
repz
movsb
sbb
jp
pusha
sbb
mov
in
les
mov
add
fwait
nop
out
mov
int
pop
stos
test
push
and
jp
out
sub
and
sarl
sarl
cmc
mov
test
decb
jg
push
push
jmp
mov
mov
inc
andl
aad
ret
add
out
push
cld
cmc
mov
sti
fwait
push
ja
sbbl
test
les
jmp
sar
xchg
into
insb
xor
inc
mov
push
stc
push
sbb
loop
div
dec
push
add
sub
inc
and
adc
xor
pusha
iret
stc
inc
daa
adc
or
subl
jmp
mov
adc
mov
and
push
in
xchg
adc
mov
add
mov
enter
flds
ret
aam
jp
and
int
dec
mov
iret
cmp
mov
out
jnp
mov
stos
inc
push
xor
dec
cld
pop
lret
push
pusha
push
push
test
outsb
in
and
mov
xchg
mov
mov
pusha
xchg
fs
mov
mov
repz
or
test
fidivl
sub
adc
idivb
insl
add
int
pop
cmp
rolb
in
insb
mov
nop
das
shl
shll
xorl
pop
repz
and
cmc
cmp
push
movb
mull
pop
mov
mov
sub
mov
inc
jle
lahf
int3
xor
jle
jg
mov
sub
sar
out
jg
in
arpl
adc
xchg
jae
jnp
loopne
sub
lock
sbb
or
clc
testb
fwait
pop
icebp
bound
ficoml
imul
adc
out
xchg
jo
cmp
scas
xor
mov
loop
jb
push
cld
pop
rorl
and
ja
je
fldl
pop
jb
sub
push
icebp
mov
lcall
mov
ds
dec
mov
mov
mov
add
mov
adc
shlb
push
test
fcomps
inc
imul
jns
hlt
movsb
mov
push
movl
add
xchg
test
or
decl
pop
ljmp
cli
cli
push
pop
in
hlt
add
and
mov
or
dec
scas
or
mov
inc
and
pushf
dec
inc
popf
sub
into
mov
inc
in
out
lahf
shlb
push
push
push
push
add
loope
pop
ljmp
push
push
cmc
stos
leave
into
dec
inc
aas
cmp
faddp
pop
sbb
fldl
cmc
std
xchg
pop
movb
lcall
lea
ja
sbb
out
or
es
dec
jno
in
push
mov
adc
adc
pop
inc
jne
addr16
outsb
pop
adc
pop
daa
clc
add
cmp
in
call
dec
aaa
gs
sarl
mov
sbb
and
inc
decb
sti
roll
mov
jnp
cmp
fisubrs
pushf
outsl
movsl
pop
sbb
dec
jecxz
push
push
xchg
push
cs
push
addl
mov
push
dec
add
inc
dec
add
aas
in
enter
adc
in
mov
mov
mov
rcll
jo
push
stos
outsl
decb
into
scas
cmp
or
daa
aad
hlt
cmp
ss
arpl
test
mov
out
add
push
and
aad
insl
inc
xchg
dec
sahf
jae
dec
in
inc
cmp
les
mov
sbb
and
mov
decb
xor
out
sahf
enter
pop
adc
stos
dec
ds
inc
dec
jmp
push
xor
cltd
in
mov
and
xchg
xchg
clc
lret
jbe
scas
lds
mov
cmp
mov
cmpsb
dec
dec
rcrl
add
aaa
out
add
push
jmp
aaa
ret
popf
subl
xchg
pop
push
popa
push
lds
sub
pop
adc
lods
push
sbb
ret
ret
enter
cwtl
mov
test
repz
xor
out
xchg
mov
fdivrp
sbb
in
fdivrl
rorl
and
outsb
sbb
fistpll
xor
jp
inc
movsl
out
insl
push
push
xchg
test
dec
pop
inc
mov
addl
cli
mov
in
cmp
cli
jp
outsl
pop
sbb
js
pmulhuw
sub
out
inc
xor
pushf
mov
ds
cmp
test
xor
sub
fcmovb
jb
xchg
cs
adc
sti
cmpl
add
jns
rcrl
sbb
insl
cmp
into
mov
jns
movsl
adc
inc
pushl
fiaddl
shrb
test
xor
mov
push
out
pop
mov
roll
lahf
sbb
testb
adc
stc
stc
lds
pop
xchg
add
xchg
jmp
loop
ret
sarl
in
mov
out
add
sbb
push
dec
insl
ss
xchg
dec
or
jbe
sbb
int
test
jno
test
pop
lcall
shrl
jp
xchg
jmp
sub
add
mov
and
push
popa
sysret
cmp
mov
icebp
lods
ds
push
cmp
push
or
sub
bound
mov
sub
punpckhbw
dec
pusha
mov
mov
xchg
adc
sbb
pop
daa
mov
push
out
push
sbb
fcomip
cmc
out
xchg
xchg
fisttps
dec
adc
inc
imul
lock
sbb
mov
jno
and
push
cwtl
pop
mov
repnz
mov
adc
pop
test
sub
test
fsub
cld
dec
add
dec
fwait
push
out
lds
rclb
xlat
test
mov
mov
mov
and
repnz
pushf
shrl
jns
mov
push
push
hlt
dec
lcall
gs
push
push
xchg
mov
repnz
out
jno
fwait
and
jp
adc
in
inc
mov
mov
pushf
or
mov
push
push
add
stos
dec
mov
mov
sbb
jp
cmp
sbb
cmpb
shrl
mov
ret
xor
in
enter
enter
add
cmpsl
sub
les
out
dec
ja
out
lret
fsubl
insb
push
pop
cld
imul
js
test
sbb
jmp
stos
xor
or
daa
lahf
bound
or
or
pop
add
fiadds
scas
rorl
test
shl
nopl
dec
jg
mov
add
popf
jnp
mov
push
leave
outsb
mov
cli
jg
dec
adc
in
out
jb
imul
adc
xchg
sbb
test
dec
clc
xchg
lods
scas
iret
fiadds
scas
lods
arpl
clc
scas
scas
mov
push
mov
data16
inc
mov
dec
push
cmp
shll
mov
repz
int3
lea
jmp
adc
into
jne
jg
cmp
sbb
cmpsl
divb
lds
popf
imull
mov
or
clc
push
push
lret
push
mov
mov
inc
push
icebp
repz
jno
pop
jnp
ja
fdivr
xor
div
xchg
fnstcw
and
out
cld
sbb
xchg
sub
les
mov
call
jmp
stc
push
ret
dec
in
test
and
mov
ficoml
lret
or
fstpl
mov
aaa
adc
add
xchg
pusha
mov
and
push
jbe
iret
inc
dec
stos
in
stos
test
add
sub
cwtl
les
fidivl
shr
ss
lds
jge
jae
ret
fnsave
sbb
subl
or
js
add
cld
sarl
xor
pop
sub
adc
stos
insb
ss
sbb
shll
pop
inc
push
or
insb
cwtl
dec
icebp
xchg
leave
jns
stc
test
add
mov
jle
ljmp
stos
jns
testl
insl
pop
stos
in
in
xor
lock
xchg
push
loop
rcrb
mov
xchg
rcrl
scas
inc
test
adc
dec
in
stos
cmp
xlat
xor
nop
incb
shll
xor
jp
push
mov
dec
inc
repnz
sub
mov
shlb
cwtl
mov
inc
lock
out
xchg
cmpsl
jmp
and
into
dec
mov
or
dec
test
jne
in
stos
push
add
cmpsb
adc
sbb
or
cltd
outsb
xchg
inc
aas
aas
data16
push
jne
mov
notl
outsb
cmp
push
sbb
mov
stos
cmc
pushf
js
adc
or
xchg
cmpsl
pop
ss
inc
lret
int
imul
ftst
cmc
popf
xchg
pop
mov
adc
lds
mov
sbb
das
mov
cmpsb
std
outsb
lahf
test
arpl
hlt
or
inc
mov
pop
lcall
lock
js
test
ret
mov
lods
sub
sbb
push
pop
and
scas
scas
mov
and
and
jne
pushl
arpl
cld
pop
adc
cmp
outsl
adc
push
fstl
in
cmpsb
icebp
add
fwait
mov
sub
clc
jge
sarb
mov
scas
xchg
lock
orb
incb
mov
add
clc
clc
cmp
jns
cli
sub
xor
lea
pop
ret
and
xchg
push
test
pushf
push
cwtl
ret
pop
loopne
je
add
cli
adc
insl
sbb
movsl
in
shl
xchg
add
jne
lock
jmp
in
jg
push
pushf
xchg
adc
jl
sbb
cmp
pushf
push
pop
and
mov
push
iret
mov
rcrl
scas
dec
cwtl
ret
pop
stc
jae
cmp
mov
add
or
cmp
stos
mov
adc
sub
andb
adc
jmp
stc
movsb
test
sbbl
adc
jno
or
ljmp
sub
shll
or
pop
or
repnz
push
test
popf
sub
or
cmp
stc
mov
aam
jae
inc
orl
add
decb
jge
xchg
lea
insb
je
mov
or
mov
test
push
mov
push
into
dec
dec
or
or
dec
dec
sbb
repnz
xchg
in
cmc
jbe
addr16
jge
outsl
sbb
pop
aas
je
in
sti
fdivs
hlt
sub
xchg
mov
sub
out
adc
test
xchg
pop
and
dec
vmread
fcomip
lret
push
imul
add
into
outsb
aas
xor
fildl
cmp
xor
inc
outsb
or
mov
inc
fnsetpm(287
jns
ja
pop
push
xor
int
push
int3
cmc
mov
inc
cmp
jle
jns
push
add
and
outsb
call
sbb
sti
xchg
mov
aas
inc
pop
xchg
mov
gs
add
mov
in
xlat
gs
pop
jl
push
loope
ds
cs
bound
inc
into
jmp
mov
mov
push
les
jp
lahf
push
sub
inc
addl
xor
xchg
cmpsb
cwtl
cmp
push
cmp
or
clc
dec
xchg
or
fldl
push
sub
xchg
ret
xor
adc
inc
ss
push
pushf
cmpb
or
adc
add
int3
loope
jg
in
or
pop
inc
push
sub
andb
add
cltd
std
mov
nop
enter
lea
adc
shr
pop
andl
in
xor
fsub
cli
mov
jmp
push
mov
xchg
mov
mov
lock
ja
dec
je
scas
sbb
loope
sti
xchg
repnz
and
addl
pop
cmp
adc
sub
cmc
push
and
and
les
add
xchg
or
mov
xchg
or
pop
out
ficoms
mov
add
arpl
lret
push
sahf
out
data16
pop
cmp
mov
lods
push
sbbl
inc
add
daa
jl
push
or
push
xchg
xor
xsaveopt
mov
std
mov
add
int
out
stc
neg
imul
xlat
and
adcb
mov
xchg
mov
je
sbb
push
sbb
shll
xor
mov
jae
sbb
mov
stos
jle
dec
test
pop
jge
ret
and
mov
stc
sbb
stc
pop
sub
test
int
mov
mov
xchg
out
sti
mov
hlt
jecxz
lret
and
movsl
jl
mov
xor
loop
pop
das
addb
bound
sbb
mov
xchg
inc
jecxz
sub
ret
js
push
push
jb
sub
xor
jne
inc
fimuls
jmp
imul
lret
push
and
or
and
loopne
mov
add
mov
xlat
xchg
and
movsb
mov
xchg
movsb
cmpsb
xor
and
xlat
mov
mov
mov
pop
push
lds
dec
cltd
inc
stc
mov
and
mov
fs
push
cmp
pop
pop
es
dec
loopne
dec
cs
or
mov
mov
scas
int3
cmp
js
in
mov
and
rcrb
mov
cmp
pop
cwtl
es
xor
cli
xchg
pop
sub
aas
or
mov
push
cmp
adc
idivl
test
arpl
xor
mov
in
dec
add
lret
data16
movsl
outsb
inc
jbe
mov
dec
aam
setb
fstps
cmp
mov
rcrl
outsb
add
cmp
jno
xchg
scas
scas
sbb
inc
sarb
sbb
fstps
arpl
aaa
sbb
mov
dec
pop
cmp
cmp
dec
jnp
cmpsl
push
aad
dec
test
repz
sarb
dec
cmpl
inc
mov
and
xchg
push
or
cltd
repz
cld
cmpl
daa
add
es
mov
inc
add
mov
xor
xor
mov
loop
daa
xor
outsb
data16
and
mov
xchg
push
pusha
push
jno
add
jb
push
sbb
mov
xchg
mov
inc
stos
movswl
or
jne
out
dec
xchg
hlt
daa
mov
inc
jg
aaa
inc
cmp
movsb
cwtl
inc
lods
sti
jl
mov
hlt
and
xchg
cmpl
and
sbb
icebp
push
cmpsb
mov
lds
aas
mov
test
mov
xchg
stos
jnp
jo
gs
push
lret
sub
out
out
test
test
hlt
mov
loop
xor
loopne
pop
ficomps
cld
mov
aas
stc
cwtl
inc
stos
or
push
stos
jg
mov
sbb
adc
loop
cmp
lock
dec
call
cmp
insl
lds
pop
cld
xor
jp
lcall
mov
mov
sub
xor
mov
call
jo
les
and
mov
sub
ret
stos
dec
pop
mov
cmp
mov
and
push
int
and
out
xchg
ja
mov
jle
add
xchg
int3
pop
test
neg
pushf
dec
xchg
xchg
mov
xchg
xchg
test
mov
jne
jbe
jecxz
mov
mov
mov
push
icebp
dec
pop
daa
and
outsl
cmp
xor
leave
aam
addl
pop
ljmp
mov
test
mov
imul
cltd
inc
hlt
mov
xor
and
cld
incl
sub
aas
dec
mov
jl
jmp
stos
push
pop
mov
outsl
out
fcmovb
mov
popa
adc
fwait
push
cmpsb
and
jge
pusha
mov
outsb
mov
cmp
mov
ss
pop
and
dec
adc
ret
lds
loop
mov
inc
aad
and
enter
mov
arpl
and
sbb
lock
or
in
mov
outsb
push
js
out
fistpll
xchg
dec
push
shrl
fbld
xchg
cld
fs
jmp
test
das
sub
xchg
mov
ror
push
or
inc
mov
cmp
andb
shlb
sahf
fnsave
and
pop
dec
and
mov
jle
push
add
adc
mov
shr
mov
aad
mov
in
cmp
orl
leave
inc
xchg
shrl
xchg
in
movsl
shrb
jno
ret
or
and
nop
sbb
cwtl
lods
cmp
addr16
es
sub
xchg
pop
jne
dec
xor
addb
or
add
lcall
ret
pusha
aaa
enter
push
or
movsl
push
inc
iret
lret
das
scas
xor
fnsave
mov
sub
movsb
pushl
repz
mov
cmp
sub
dec
cltd
out
xor
pushf
dec
cmp
jecxz
add
and
adc
out
bnd
mov
loopne
push
dec
movsb
inc
sbb
int
iret
enter
dec
mov
inc
jae
push
js
xor
lds
out
test
cmpsl
inc
aas
inc
and
add
jno
repnz
mov
lret
dec
insb
cmp
test
pop
stos
insb
loope
cmp
in
mov
popa
popf
sbb
push
iret
add
adc
lock
and
pusha
mov
push
cmpb
fistpll
mov
cld
mov
imul
fdivrl
xchg
sub
je
fnsave
cmp
sub
mov
mov
adc
int3
xchg
mov
fnclex
repz
das
cltd
popa
inc
lods
cmp
in
jne
loop
jp
inc
lods
sub
mov
movsb
out
popa
adc
rcl
cmpsl
movsb
add
mov
xchg
mov
pusha
push
shll
andb
mov
jbe
not
xchg
sbb
dec
hlt
pop
imul
lret
cmp
push
xchg
mov
cmp
inc
mov
mov
stc
out
cmc
andb
je
into
add
scas
aam
or
xor
adc
pop
jl
cmp
mov
pop
xchg
xor
push
pop
pop
lods
jae
icebp
fdivs
adc
and
inc
and
enter
test
repz
xchg
fldcw
xor
fsubp
popf
inc
xchg
and
jno
xchg
jnp
test
shlb
xor
inc
pop
inc
push
xor
pop
xlat
add
clc
xchg
adc
cmpsl
cmp
pushf
imulb
data16
rolb
jl
jnp
inc
jno
mov
or
mov
stc
sbb
sub
xchg
rcl
aas
mov
repnz
mov
xchg
fcompl
stos
sbb
push
call
cli
inc
unpckhps
mov
lahf
clc
jno
xorb
sbbb
or
scas
jle
xchg
jecxz
sub
dec
pop
xchg
and
mov
add
fists
inc
jge
dec
pop
jnp
xlat
mov
jecxz
inc
mov
popa
mov
pop
out
shll
push
ss
xchg
loop
bnd
cs
or
push
xchg
mov
lea
mov
in
sub
sub
outsl
xor
xor
call
mov
fs
enter
sbb
or
inc
add
lcall
pop
add
mov
mov
gs
daa
test
pop
sbb
or
aad
nop
out
dec
or
cmpl
sub
cmpsb
clc
lcall
fdivl
inc
mov
jne
adc
imul
push
sbb
movsb
sbb
aas
pop
iret
xchg
and
add
mov
je
pop
orl
stc
mov
and
xchg
mov
xor
jp
cmp
cmp
dec
pop
movsb
pop
xor
pop
push
popf
into
xchg
roll
sbb
pop
aaa
stc
inc
dec
cmpsl
inc
xor
or
les
mov
mov
push
push
stos
or
dec
mov
dec
es
xor
pop
xchg
sbb
sarl
div
xchg
add
insb
roll
ss
mov
xorb
fnsave
push
mov
inc
mov
out
sub
xor
sub
movb
dec
lods
add
gs
jno
push
push
sbb
adc
jmp
sbb
inc
xor
inc
dec
test
mov
pop
jmp
inc
sahf
dec
int3
fistl
iret
dec
jnp
jno
lahf
jl
arpl
xor
arpl
inc
outsb
xlat
jl
jg
or
fcompl
dec
rolb
mov
std
mov
lret
les
aaa
and
cli
jae
mov
or
je
sbb
test
ljmp
mov
in
fadds
dec
mov
popa
lock
cwtl
adc
out
or
sub
ret
lea
push
ficomps
addl
popa
adc
insb
in
xchg
enter
pop
adc
lret
sbb
sub
fs
xor
in
aad
mov
iret
add
mov
hlt
imul
int3
push
test
int3
lods
dec
sub
inc
in
outsb
jb
xor
ljmp
push
mov
in
push
xchg
xchg
daa
stos
test
fisubrl
xor
jb
sub
cmp
pop
je
stc
adc
cltd
sbb
subb
sbb
rolb
mov
shrb
xor
gs
cld
cmp
mov
mov
add
lcall
inc
fstps
sahf
pop
mov
shll
ljmp
xor
or
subb
fsubs
lea
mov
or
push
in
addr16
pushf
jb
cmpsb
mov
mov
push
je
mov
aam
mov
and
shl
outsl
and
or
or
jb
jl
xchg
in
pop
xchg
jle
lret
mov
mov
mov
std
xchg
outsl
add
in
jle
movsl
ret
pop
jno
and
cs
mov
mov
out
nop/reserved
mov
or
or
jecxz
jmp
fucomp
clc
iret
jmp
lahf
in
mov
cmp
mov
xor
arpl
shlb
xchg
or
mov
mov
ss
stos
repz
sbb
in
pop
jl
ficompl
add
cld
in
shl
and
shrb
cmp
nop
xchg
inc
subl
gs
fstpl
icebp
mov
jp
xlat
mov
inc
negl
cmp
or
or
push
add
push
inc
shlb
pop
adc
mov
xchg
or
mov
pop
test
jmp
and
xchg
lock
cmp
xor
add
sub
imul
addr16
mov
jne
test
lcall
add
stc
arpl
imul
and
push
loope
jnp
lahf
jo
rcl
dec
fisttps
mov
out
and
movsl
filds
in
pop
sub
jo
inc
mov
ss
inc
pop
mov
fsts
cli
cli
test
and
pop
push
sahf
mov
adc
pop
sub
xchg
mov
cmp
mov
hlt
jg
jmp
loopne
jne
mov
jmp
sub
and
sub
hlt
xor
repz
inc
fiaddl
notl
jbe
repnz
mov
cwtl
nop
adc
jp
jp
jge
pop
cld
xchg
into
cmp
or
jmp
jo
into
scas
imulb
mov
subl
or
in
dec
cmp
popf
mov
test
xchg
idivb
mov
fs
in
pop
and
jecxz
adc
iret
fiaddl
xlat
inc
scas
or
and
pop
xchg
inc
ret
add
loope
aaa
xchg
in
sbb
pusha
sub
cwtl
stos
xchg
add
insl
loope
cmp
mov
inc
loopne
sbb
and
add
aaa
dec
xor
add
cmp
pop
je
xlat
and
mov
cmp
sub
xor
loopne
addr16
push
sarl
and
jo
int3
out
add
mov
xor
pop
ds
dec
push
pusha
xchg
cmc
push
mov
dec
xchg
sub
mov
mov
mov
mov
ret
es
stos
ror
in
xlat
sar
mov
dec
int
fs
jnp
call
jecxz
scas
lods
mov
roll
cmp
push
jbe
push
or
dec
fs
shlb
in
add
cld
cli
mov
dec
out
sub
lret
and
loope
out
fisubs
sbb
sbb
adc
jmp
mov
shlb
clc
jecxz
inc
faddl
dec
push
jnp
add
fs
dec
stos
lcall
ret
push
ret
dec
jmp
push
in
inc
das
pusha
or
pop
daa
pop
mov
nop
sbbl
repnz
and
pop
mov
sbb
cmpsl
sub
and
sub
in
push
ret
pop
or
movsl
jp
xor
xchg
xchg
and
mov
ljmp
sub
imul
sbb
outsl
mov
sti
push
pop
inc
movsl
adc
and
mov
les
jbe
out
jg
sbb
mov
les
fwait
push
sub
add
jnp
lea
fimull
cwtl
xchg
jbe
cmp
xor
repnz
ret
enter
push
fistps
jecxz
sti
imul
stos
imul
shll
insb
js
std
push
fwait
nop
xlat
fsubr
pop
pop
dec
popf
push
and
pop
out
and
add
hlt
or
dec
xorl
test
pop
rcrl
mov
xchg
xchg
rclb
mov
out
jge
mov
out
outsb
rcrb
pop
arpl
fidivrs
arpl
mov
adc
lds
pop
jnp
faddl
and
or
andb
mov
xor
out
faddl
push
add
inc
daa
shrl
or
scas
add
pop
inc
and
or
shll
cmc
sub
andb
inc
call
outsb
dec
or
cmp
insl
stos
and
inc
aas
mov
pop
xchg
movsl
and
push
xor
sub
lahf
mov
cmc
mov
psubusw
pushf
mov
xchg
and
xchg
jle
push
imul
fcomps
pop
js
mov
lods
push
jle
xchg
insb
add
aad
jecxz
jl
mov
addr16
push
in
loop
inc
and
mov
scas
aam
cmp
aaa
pushf
icebp
adc
lahf
push
xor
xchg
pop
push
cmp
lret
xor
repz
sub
cmp
lea
mov
mov
pop
repz
iret
arpl
xchg
sub
pop
dec
or
push
adc
jbe
movb
jb
xchg
mov
js
jecxz
jae
or
out
xchg
jecxz
adc
xchg
ss
ss
adc
sub
lods
sub
movsl
sub
inc
jbe
cmp
inc
jno
dec
mov
out
xor
imul
xor
mov
pop
adc
mov
xchg
nop
insl
mov
out
fnstcw
stos
pop
add
in
lcall
sub
cmp
insb
mov
sub
xchg
loopne
mov
in
and
rorl
sbb
shlb
subl
pop
leave
push
xor
jae
sbb
loopne
lea
gs
adc
or
jo
ja
loopne
add
fs
popa
jecxz
out
mov
ja
mov
jne
cmp
xchg
arpl
mov
and
loope
imul
inc
xor
dec
adc
or
sbb
xor
je
call
stos
testb
clc
push
in
push
add
sahf
cmc
inc
fs
shrb
enter
lret
flds
xor
pop
jae
inc
loope
js
cmp
and
fmuls
into
lea
push
push
push
mov
jae
imulb
mov
mov
cmp
push
adc
inc
and
adc
push
fdivs
loop
sti
push
adc
gs
int
xor
and
jae
sub
push
adc
or
or
ret
jecxz
or
mov
mov
sbb
test
icebp
sbb
cs
repz
into
cmp
inc
out
sub
dec
jmp
bound
cwtl
xlat
repnz
adc
pop
popf
adc
stc
xchg
ficoms
jecxz
vcvtss2si
xor
sarb
ljmp
jb
xchg
mulb
enter
fildll
cmpsb
insb
sbb
cmp
pop
mov
popa
adc
enter
lcall
je
mov
sbb
mov
hlt
pop
popa
mov
jno
out
push
mov
hlt
cwtl
mov
xchg
or
adc
repnz
jl
stos
and
sub
xchg
insb
popa
aaa
mov
xchg
loop
in
mov
cmp
ret
push
xchg
pop
iret
xor
and
cli
jne
push
mov
scas
clc
add
scas
cmpsl
pop
mov
cmovne
mov
xchg
fstl
cs
inc
xchg
cltd
cmp
int
in
xchg
aam
push
sbb
xor
test
push
add
dec
mov
gs
cltd
push
popf
loope
std
push
mov
in
and
out
mov
and
inc
mov
fdivp
pop
sbb
pop
sbb
int3
arpl
data16
leave
hlt
or
add
pop
inc
mov
pop
aad
and
scas
pop
xlat
in
data16
add
mov
sbb
rclb
sub
push
icebp
xor
or
test
pusha
mov
cmp
mov
je
dec
inc
imul
jbe
jno
hlt
dec
lcall
cwtl
aad
mov
in
push
jbe
mov
add
jge
pop
mov
outsl
push
jmp
or
sbb
cmp
int3
jecxz
lods
dec
mov
cmp
push
mov
in
sub
sbb
cltd
jmp
fwait
cli
push
xchg
or
enter
flds
shl
in
sub
jae
inc
xchg
push
negb
fists
pmullw
cmp
cmp
add
mov
xchg
sub
jp
loop
lods
std
sub
sarl
not
mov
call
rcrl
sub
xchg
mov
add
pop
mov
popf
movsl
test
pop
in
stc
adc
imul
mov
pop
inc
jns
jns
add
adc
lea
jns
mov
iret
sbb
fnsave
or
mov
outsb
stos
jmp
pusha
nop
andl
push
loopne
mov
lds
lret
mov
jg
push
sbb
aas
les
push
jb
and
adc
xchg
xor
in
xor
hlt
stos
into
rcrb
popf
mov
test
jle
shrb
bound
cmp
xlat
addr16
add
movsb
pop
jecxz
sbb
enter
call
movsl
mov
test
add
sub
sbb
movsb
and
mov
daa
cmp
xor
xchg
add
push
add
pushl
mov
push
lock
mov
cmp
mov
mov
lods
pop
mov
into
push
in
ja
or
or
mov
sub
in
scas
push
fisttpll
adc
mov
pop
outsb
pop
xor
lret
jne
sti
inc
push
stos
movsl
test
fwait
inc
inc
mov
adc
lret
idivl
enter
pusha
push
xchg
scas
fsubp
subl
cwtl
inc
adc
and
ss
jae
inc
xor
ret
cmp
nop
rorb
int
and
into
jmp
pop
leave
shrb
stos
dec
push
sub
jmp
inc
ljmp
lea
lcall
lea
sub
mov
push
cmpsl
iret
xchg
int
adcb
std
jno
jecxz
mov
scas
ss
adc
js
addb
cld
inc
mov
dec
loop
iret
out
push
sub
push
cwtl
xor
cmp
movsb
out
sub
aad
lret
jo
divl
cli
pop
repz
xor
in
sbb
imul
adc
mov
fstps
aaa
or
ficompl
xorb
stc
mov
in
iret
stc
in
dec
ret
int
xchg
in
mov
mov
out
cmp
sbb
push
shl
xor
dec
lsl
aam
mov
mov
add
xor
jns
test
add
and
or
mov
faddl
jmp
repz
lret
push
mov
mov
dec
dec
test
scas
dec
sbbl
pushf
lahf
xchg
mov
pop
rorb
movsl
loopne
xchg
mov
scas
repnz
mov
xchg
imul
sub
movsb
cmp
aas
sub
add
pop
insl
push
out
push
in
dec
arpl
out
ja
or
je
push
adc
push
push
repz
add
fistl
out
jo
mov
pusha
cmpsl
clc
fdivrl
mov
mov
pop
mov
xchg
pop
popf
insl
xchg
mov
in
adc
mov
pop
pop
movsb
sub
lock
les
cmp
mov
mov
imul
or
repz
fnop
orb
test
test
inc
test
ret
jge
call
out
mov
mov
out
cmp
scas
jb
and
push
cli
adc
adc
mov
xor
xchg
jns
jle
inc
incl
ds
jne
insb
jne
jecxz
movsb
test
enter
inc
stos
mov
data16
out
ss
xor
insb
jmp
mov
cld
adc
scas
aas
pop
mov
testl
xor
push
adc
or
push
mov
inc
jb
cs
mov
rep
mov
sbb
lock
dec
cmp
sbb
dec
das
int3
das
daa
loop
call
xor
nop
mov
jmp
call
in
test
or
cmpsl
mov
rol
int3
sub
cmp
cwtl
jmp
mov
pop
in
sub
dec
mov
mov
lea
out
iret
push
aaa
mov
or
daa
xor
dec
or
and
enter
fisttps
in
fnstcw
into
pop
test
jge
xchg
mov
std
in
jo
cld
push
bound
arpl
fs
inc
repz
aaa
and
adc
addr16
sub
jmp
dec
pop
sbb
mov
mov
sbb
mov
cmpsl
jmp
dec
or
insl
ja
jae
jne
lret
mov
pushw
xchg
pop
shll
xor
sub
xchg
lret
jmp
mov
cmpsl
mov
daa
fisttpl
mov
or
xor
mov
std
mov
lahf
ljmp
adc
in
sub
mov
mov
inc
mov
mov
xchg
push
shll
hlt
mov
fnstsw
out
inc
lea
rcr
add
mov
test
cmp
pop
test
shlb
jb
mov
lret
rcrl
sbb
pushf
fsubs
adc
adc
adc
daa
jg
mov
jg
push
xlat
sbb
repz
jns
iret
shll
xor
push
dec
ret
adc
aad
imul
mov
cmp
sbbl
sub
sub
adc
fldcw
mov
jb
outsb
pop
xor
int
dec
jmp
cmp
add
sub
mov
xor
mov
dec
loope
test
iret
fldcw
dec
lods
sub
pop
jmp
movsl
xlat
lods
sub
mov
dec
push
neg
pop
ret
add
lds
push
adc
fldt
cmp
movsl
mov
xchg
inc
xchg
inc
movsl
aad
cwtl
cmp
int3
add
imul
cmp
mov
movsb
xor
inc
mov
mov
cltd
dec
cmp
and
adc
negl
or
scas
inc
andl
sub
lret
xchg
ficoml
ljmp
sbb
out
pop
insl
aaa
aaa
and
mov
pop
test
mov
xchg
or
rcrl
popl
or
in
imul
push
xchg
sub
arpl
popa
xchg
outsl
pop
sahf
inc
or
cmp
or
out
add
mov
cmpb
popf
fsubrs
aas
movsl
dec
adc
pushf
stos
fidivrs
cmpsl
mov
ss
pop
inc
dec
push
cmc
xchg
negb
call
fidivrl
jmp
andl
mov
or
push
pop
cmp
pop
mov
test
shrb
or
add
mov
fwait
mov
adc
sub
add
xchg
pop
lahf
xor
repnz
loopne
out
sub
lods
ret
push
adc
int
mov
sbb
xchg
es
and
cmp
sbb
add
jns
sbb
ret
mov
mov
mov
xchg
push
cwtl
iret
cli
rcll
pop
push
stos
je
cmp
enter
mov
mov
push
xor
or
sub
and
xchg
inc
xor
lods
sar
mov
add
xor
std
dec
lods
ljmp
mov
jg
inc
mov
mov
or
cmp
cmp
add
cmp
lcallw
std
mov
insl
insl
and
jmp
nop
push
ja
add
ret
xor
popa
movsl
push
rcr
stos
jmp
mov
or
inc
jmp
xor
pusha
xchg
les
aam
jge
loopnew
mov
push
dec
jae
sbb
stc
fldenv
cld
xlat
mov
test
mov
adc
mov
mov
mov
inc
ds
ret
lea
cwtl
mov
and
xchg
xor
add
frstor
mov
lds
mov
negl
jne
dec
sbb
test
mov
sub
push
mov
xchg
pop
jno
test
xchg
xor
inc
cmpsl
je
filds
sbb
cli
mull
scas
push
inc
enter
add
xor
inc
pop
or
dec
mov
rorl
imul
cli
and
cmp
in
aad
orb
push
sbb
das
inc
dec
push
sahf
sub
fnsave
lret
int3
pop
mov
sbb
cwtl
jecxz
mov
inc
sbb
cmp
or
cmp
lret
sub
adc
inc
pop
fcomps
jge
mov
pushf
pushf
mov
leave
in
rorl
ljmp
inc
cmpsl
dec
test
inc
enter
subl
leave
xchg
mov
and
je
in
call
mov
or
mov
and
pop
scas
loope
jno
movsb
rcrb
aas
popa
movsb
jo
adc
jbe
inc
mov
outsb
shrb
mov
out
fisubrs
cmp
pop
ja
xchg
push
movsl
cmc
or
sbb
jg
dec
pop
or
dec
test
shll
sbbl
mov
fdivs
out
lds
sbb
push
adc
fimull
sbb
rcrl
pop
sub
jno
jo
and
imul
jge
pop
jmp
jge
mov
xchg
mov
inc
mov
xchg
jb
jp
pop
repnz
add
stos
pop
add
pop
adc
les
mov
rcrb
push
dec
fs
and
icebp
jne
popf
sbb
sbb
push
fcomps
outsb
pop
rcrl
icebp
test
outsw
or
pop
sar
outsb
in
scas
or
fdivrl
imul
cmc
icebp
pop
dec
jp
cmpsb
xchg
ret
out
dec
adc
cmp
cmp
pop
dec
push
mov
data16
aad
repnz
xchg
cmpsb
push
lret
mov
ljmp
sbb
pop
xchg
xor
xchg
das
and
js
mov
inc
stc
das
sub
out
rol
jo
and
sarl
gs
sub
push
sub
jb
in
clc
jecxz
mov
sbb
xchg
mov
arpl
dec
mov
sbb
mov
into
lods
mov
xor
andb
test
inc
push
lds
sub
xor
insb
add
es
push
cmp
push
rcr
shlb
inc
jnp
scas
aaa
dec
push
adc
clc
aaa
inc
push
cmp
mov
or
or
outsb
hlt
or
mov
sub
loope
xchg
jl
or
cmpsb
sub
aam
mov
inc
out
lret
mov
sahf
and
pushf
dec
mov
xchg
cmp
inc
fdivs
or
test
mov
hlt
adc
fmuls
insl
lea
fists
cmp
jnp
sahf
aam
jp
imul
push
xchg
hlt
pop
cld
pop
push
pop
clc
test
dec
jnp
sub
cmpsb
push
pop
stos
xchg
pop
jne
aaa
fs
je
xor
out
push
cmc
dec
or
mov
jmp
loop
lcall
into
jo
and
pop
add
insb
aam
push
push
xor
mov
mov
js
stos
inc
mov
fxch
les
and
ja
cmp
xchg
test
pop
insl
daa
push
aaa
pusha
mov
sub
pusha
loope
cs
jno
xchg
adc
xchg
ljmp
hlt
pop
pop
mov
cmp
mov
or
stc
mov
lret
adc
dec
addl
lret
add
and
test
mov
adc
adc
pop
faddp
dec
gs
in
xchg
mov
repnz
and
pop
roll
rcr
je
rcl
xor
std
sbb
imul
add
mov
pop
js
sbb
stos
roll
out
mov
inc
xlat
pop
arpl
shll
imul
xor
out
push
mov
outsb
xchg
or
dec
outsl
test
mov
movsl
adc
lea
call
or
adc
mov
or
test
int3
mov
lea
test
les
push
fs
clc
cmp
and
or
inc
mov
cld
insb
js
fildll
out
movsb
loope
mov
dec
jge
pop
add
add
xor
ljmp
push
out
hlt
fwait
xlat
mov
mov
or
imul
test
icebp
dec
xlat
popf
ss
push
outsl
cmp
cmp
cmp
push
repz
int
push
sbbl
lcall
mov
sti
fs
xlat
or
mov
jmp
adc
mov
inc
insb
in
adc
das
aaa
fcoml
cmp
push
jmp
dec
loope
fwait
clc
aaa
popf
sbb
sbb
int3
inc
lcall
adc
js
std
xor
pop
adc
stc
push
mov
push
dec
jmp
sbb
setp
fnsave
push
adc
rol
ljmp
imul
mov
dec
mov
dec
fs
jb
and
test
andl
cmpsl
fucompp
or
lock
fisubrl
lock
in
adc
add
push
test
dec
cmp
jg
mov
pop
pop
inc
pop
or
lods
in
aam
xchg
cmpl
subb
rcll
in
xor
push
jp
mov
addr16
xchg
loopne
push
dec
mov
nop
sbb
inc
lds
cld
dec
sbb
adc
xor
push
jnp
mov
fisubs
mov
out
out
jp
inc
cmp
cmp
pop
inc
repz
and
xlat
push
das
stos
insl
mov
inc
jp
adc
aaa
jb
jae
int
imul
sub
dec
push
addl
aad
out
idivl
fisubs
test
push
sbb
mov
add
inc
cs
out
xor
and
in
inc
pushf
mov
aad
js
pop
insb
push
dec
gs
cmpsb
ss
mov
repnz
jle
repz
mov
test
addb
dec
sub
cmp
pop
and
imul
sbb
inc
push
hlt
out
std
movb
aas
hlt
ss
pop
add
inc
lahf
fisttpll
dec
gs
enter
lock
xchg
inc
xchg
imul
test
inc
jbe
xor
mov
mov
es
xor
push
out
mov
divps
adc
ja
into
xlat
adc
pop
mov
cli
or
dec
mov
mov
stos
push
mov
xchg
push
in
daa
pop
mov
jb
inc
dec
dec
fiaddl
mov
xlat
pop
xlat
and
insl
andb
push
ret
and
pop
mov
das
jmp
inc
fistl
jp
pavgb
pop
push
scas
xchg
lcall
add
out
in
stc
ret
pop
jno
test
and
faddl
lahf
mov
cs
fmul
add
lret
xchg
ds
sbb
pop
lahf
ljmp
cmpsb
int3
mov
push
xchg
or
xchg
dec
aaa
cmpsb
jb
lcall
cld
in
jns
inc
in
sub
adc
and
push
mov
addl
lea
aas
popf
xchg
sub
xchg
mov
les
mov
cmp
fs
add
mov
jno
pusha
mov
pusha
push
or
jo
clc
add
mov
jg
and
fiadds
ja
inc
or
cmp
jmp
add
test
clc
int3
add
test
add
sbb
push
jp
frstor
hlt
movsb
xor
jmp
push
xchg
xchg
lea
jg
bound
insl
add
cwtl
adc
insb
cmovno
fwait
lds
testb
sub
fistl
movl
inc
mov
push
int3
inc
jne
mov
inc
push
in
mov
inc
or
jg
addl
mov
popfw
repz
sti
mov
icebp
rcll
or
shll
xchg
xor
inc
push
fcoms
jae
es
lods
imul
into
ret
inc
jge
aaa
lret
xor
xchg
or
xor
popf
and
inc
mov
cmp
and
pop
js
xchg
scas
cmp
jae
mov
fidivrl
push
mov
out
or
mov
mov
jb
addr16
xor
sub
scas
xor
stos
std
jmp
lcall
mov
int3
jmp
clc
cs
orl
xchg
mov
and
cs
or
mov
lahf
div
cmc
je
adc
adc
ret
and
dec
mov
push
sbb
movsl
sbb
test
lahf
loopne
aad
jb
push
mov
push
mov
and
and
stc
sahf
out
pop
movb
xor
pop
cmp
cmp
jge
cli
aaa
pop
fs
es
aad
dec
std
in
pop
xorl
xchg
imul
push
push
or
xlat
ret
xor
mov
sub
clc
aas
fisttpll
pop
pop
push
loop
fstpl
cmp
xchg
add
enter
aas
nop
pop
insb
push
mov
add
xor
lcall
jp
jle
in
mov
nop
sti
out
xchg
or
jg
fwait
jnp
int3
and
imull
mov
cs
jp
daa
push
enter
sbb
cmp
bound
fcompl
pop
sbb
in
lock
xchg
inc
jle
sub
mov
mov
cmp
sub
jecxz
mov
jae
mov
int
shll
mov
add
mov
into
and
insb
cmp
lretw
push
mov
or
insb
sbb
sub
mov
mov
adc
or
xor
ds
cmp
mov
dec
js
cld
lret
and
adc
ja
xchg
jo
fadds
cmp
push
insl
mov
push
enter
out
jns
push
pop
outsb
jne
mov
and
test
sub
pusha
pushf
xor
jg
sub
cmpsl
push
int3
dec
pop
jl
or
sbb
ljmp
popf
cmpb
pop
jne
xchg
dec
insb
push
or
aam
or
mov
mov
inc
sbb
xchg
inc
es
inc
jns
mov
sti
in
dec
jo
emms
fidivrs
notl
or
cld
mov
sub
sbb
mov
gs
jnp
gs
outsl
and
jns
cmp
inc
cltd
sbb
push
movsl
lea
or
call
pop
popl
push
add
sub
xor
fistps
enter
cld
insb
ja
loope
fldcw
jecxz
jns
insb
stos
mov
imul
jae
movsl
mov
adcl
ficoms
dec
imul
repz
lods
jge
jo
mov
xchg
insl
into
cmpsl
fs
jno
mov
push
repz
mov
xor
sub
aas
add
ret
add
mov
cs
xchg
ljmp
outsb
mul
lcall
cli
add
dec
mov
mov
adc
std
mov
mov
loope
push
nop
mov
lcall
movsb
add
repz
and
adc
mov
mov
mov
cmpsl
loop
pop
daa
data16
or
cli
mov
sahf
push
mov
jbe
push
fisubl
inc
call
lds
push
mov
pushf
cmpsb
sub
xchg
add
mov
jbe
lret
and
jne
inc
or
mov
dec
fisttpll
mov
push
into
xchg
dec
roll
mov
pop
sbb
in
jg
out
repnz
popl
nop
push
sub
insb
cmpsb
daa
adc
je
cwtl
push
or
sbb
cmpsl
mov
movsl
push
pop
or
in
aad
xlat
aas
sub
imul
imul
sbb
stos
lods
or
mov
push
hlt
inc
int3
pop
pop
insb
test
sub
mov
push
repnz
mov
and
jb
pop
cmp
stc
repz
sub
dec
adc
sub
xchg
jno
loop
jno
jb
loop
jo
xor
aas
movsb
and
cmp
repz
inc
cmpsl
js
mov
adc
mov
outsl
jno
lock
cmp
std
mov
add
gs
sub
jecxz
sbbl
ffreep
scas
jmp
sub
push
and
imul
dec
lret
jecxz
sahf
jbe
pusha
stos
insl
mov
cmp
inc
cmpsl
fildl
sub
inc
inc
movsb
das
inc
mov
icebp
pusha
or
fnstcw
bound
push
fcmovnb
push
push
xor
cs
fidivrl
js
cmpsb
mov
insl
pop
jnp
sahf
push
mov
mov
and
in
sarl
stos
out
sub
adc
lret
mov
adc
inc
into
sub
ffreep
inc
int3
cmp
mov
int
xor
sahf
jbe
subl
xor
das
pushf
repnz
push
in
popf
addr16
sbb
cli
jno
jp
xlat
mov
aad
push
shl
pop
sbb
jge
test
jl
clc
xor
lahf
dec
lods
out
call
or
prefetcht2
xrelease
sub
insb
sarb
faddl
mov
jg
push
adc
jg
jl
xchg
imul
int3
repz
xchg
sub
scas
sub
cmp
dec
int
xchg
lea
add
jecxz
lods
xor
adcb
or
and
fnstcw
xor
sbb
mov
nop
sti
inc
mov
inc
fsubrs
loop
test
pop
fwait
xchg
adc
cli
mov
sub
fsubrs
xor
in
mov
cmpb
ds
shll
lods
and
lcall
push
xlat
xor
add
sar
cltd
mov
and
ja
mov
and
or
ret
or
lcall
int3
daa
filds
and
mov
enter
fsubl
int3
pop
xor
arpl
jl
mov
mov
jno
icebp
call
pop
push
push
sub
adc
jbe
push
push
ds
pop
adcb
shll
ret
enter
xchg
xchg
jg
jo
outsb
adc
insl
jle
repnz
sbb
pop
je
push
dec
pop
xor
dec
mov
dec
xchg
dec
and
sub
add
es
fs
xor
dec
cmp
mov
pop
fs
fstl
mov
aad
pop
std
ret
in
lea
xlat
ss
add
rorl
cmc
pop
xchg
repz
mov
mov
shl
mov
iret
ljmp
addr16
pop
push
jge
mov
mov
pop
xlat
scas
jbe
add
push
insl
sbb
sbb
push
mov
xor
dec
xor
insl
cli
xor
xchg
ja
ret
push
pop
into
je
mov
mov
in
ja
inc
shl
dec
mov
push
imul
scas
test
test
into
cmp
mov
pushf
cmp
out
push
rep
sbb
jns
and
in
repz
adc
cltd
in
push
frstpm(287
mov
cld
inc
pop
dec
daa
mov
inc
jne
loope
mov
lea
aad
xorl
xlat
ret
insl
mov
adc
push
les
xor
sarl
inc
inc
fidivl
repnz
fdivr
flds
cmp
in
movsl
aaa
clc
dec
movsb
mov
scas
icebp
pop
enter
push
push
inc
mov
rol
dec
xor
inc
imull
mov
push
out
push
in
mov
jnp
jle
jl
push
mov
push
sbb
cwtl
cmpsb
shll
mov
int3
inc
in
push
jmp
push
sbb
pop
push
loop
jle
pop
pusha
sbb
cmp
and
rcrl
mov
jb
mov
out
outsl
jl
pop
mov
icebp
dec
and
fcomip
xorb
imul
pop
inc
push
xor
pop
push
pop
cmp
pop
dec
andl
in
pop
in
je
incl
or
mov
stos
ret
test
inc
clc
jae
xchg
nop
jmp
inc
icebp
add
push
jae
inc
arpl
xchg
cmc
or
cltd
and
sub
stc
int3
aad
xchg
jbe
push
rorb
inc
ds
dec
imul
cwtl
sub
sub
cmp
stos
jae
out
scas
gs
cmp
adc
out
loop
mov
lods
pop
stos
bts
mov
xor
add
mov
movsb
pop
popf
push
push
jge
daa
or
jne
cmp
jecxz
adc
test
mov
loopne
loopne
push
fstps
push
loopne
or
out
add
sub
or
test
mov
add
jbe
push
in
or
int3
push
fisubrl
in
pop
sti
pushf
jbe
dec
rcll
xchg
in
push
fsts
fs
sbb
daa
sahf
push
xchg
and
fstpt
and
xchg
jge
outsb
movsb
popf
inc
push
mov
rcll
lret
adc
sbb
push
sub
jb
pop
push
xchg
je
mov
adc
rcll
pop
dec
inc
aaa
sbb
push
dec
jmp
xchg
insb
aas
lock
call
das
test
sub
sub
out
out
jne
xlat
xchg
dec
push
pop
popl
inc
jns
iret
cmp
pop
out
jbe,pn
push
subb
adc
push
test
and
loop
mov
aaa
rorb
pop
fcomps
xchg
xchg
add
xor
push
cld
jge
inc
dec
cmp
adc
adc
aam
adc
cmc
or
popa
fcom
test
pop
in
js
int
push
cmpsb
pop
lods
xchg
push
xchg
shll
inc
jno
mov
in
mov
push
cld
mov
jno
push
push
xchg
addr16
pop
and
cmc
pop
xor
std
cld
out
lods
cmp
mov
cmc
imulb
pushf
enter
and
out
arpl
xor
add
adc
sub
push
pop
and
and
add
adc
add
jg
into
cmp
sahf
ja
jnp
mov
and
mov
jo
addb
imul
pop
outsb
pop
in
push
mov
and
push
imull
cmp
xor
fimull
or
hlt
lea
cmp
push
lret
push
rcll
xchg
add
loope
cwtl
aas
pop
push
xchg
or
jg
add
stos
mov
cmp
add
xchg
mov
test
adc
outsb
addb
imul
or
mov
mov
shll
scas
imul
cld
push
push
repnz
rolb
xchg
jl
xor
mov
sub
fucom
and
imul
arpl
push
inc
push
aad
scas
in
adc
mov
xchg
add
inc
in
fcomps
jp
mov
sbb
out
xor
out
les
test
int3
out
in
subb
repnz
cli
mov
repz
inc
push
push
shll
lret
popf
jl
sub
cs
cmpb
xor
mov
jecxz
rcrl
std
mov
mov
cmc
xchg
fadd
or
fiaddl
xchg
int
nop
and
jmp
pop
aas
mov
enter
fisttps
cmp
cmp
cltd
daa
scas
push
pop
sub
imul
jecxz
mov
shrb
mov
cld
lahf
dec
outsb
and
aaa
repnz
mov
adc
sbb
stos
xchg
mov
push
jne
imulb
sbb
lds
sbb
mov
in
mov
push
fisubrl
aaa
xor
dec
arpl
xchg
xchg
mov
cmc
mov
jne
scas
pop
stos
dec
pushf
add
xorb
lahf
mov
stc
xor
adc
push
in
push
mov
fistpll
sbb
in
pop
adc
cli
insl
mov
popa
sbb
popf
jo
cmp
push
mov
daa
dec
dec
inc
xchg
sahf
data16
sbb
out
sahf
or
hlt
mov
in
je
pop
mov
mov
xchg
or
hlt
jl
inc
add
inc
xor
stos
pop
lahf
test
es
adc
fwait
outsb
nop
fists
adc
mov
xor
sub
fiaddl
test
jl
in
stos
cmpsl
out
push
sbb
test
pop
in
xchg
pop
xor
movsl
pop
xor
jbe
cmp
cwtl
push
sti
push
outsb
jae,pn
push
jb
jg
mov
dec
jmp
scas
test
call
inc
pop
stos
ret
or
mov
mov
cmp
xchg
adc
lods
out
rol
push
hlt
int3
mov
push
inc
mov
movsl
sahf
fidivrl
mov
mov
rcrl
mov
in
and
imul
sbb
add
inc
lock
adc
movsl
push
in
and
es
inc
and
cli
mov
mov
loopne
aam
sbb
cmpsl
data16
das
clc
cmp
mov
add
adc
imul
stos
fldenv
sbb
mov
std
scas
ss
test
push
xchg
xchg
jo
loop
dec
inc
inc
mov
or
sahf
cs
add
lcall
add
sub
sub
sahf
dec
ss
or
xchg
push
jp
mov
xchg
mov
xor
test
sbb
mov
pop
inc
ret
int
clc
shrl
fsts
dec
mov
fcoms
loop
mov
adc
cli
daa
nop
mov
push
jbe
jnp
lahf
adc
sbb
jno
xlat
mov
xchg
inc
hlt
ret
pop
jo
inc
pop
adcl
stc
in
std
sub
pop
add
mov
inc
es
repnz
sub
int3
test
mov
pusha
push
xor
cmp
sub
cli
subl
ja
or
pop
inc
fcomps
xchg
cmp
xor
adc
loopne
sub
inc
push
or
mulb
fistpl
pop
lds
jae
insb
sub
inc
leave
and
leave
mov
jb
and
cmpsl
xchg
cmp
add
sbb
pop
mov
mov
pop
xor
ret
repz
outsb
pop
xlat
enter
cmp
cltd
cltd
mov
jae
out
xorl
test
or
push
enter
clc
xor
cmp
xchg
pop
jne
fstl
push
and
push
pop
outsl
pop
cmp
out
push
outsl
jne
in
jbe
inc
sub
aas
xchg
sbb
push
cmp
fstp
push
out
xchg
and
mov
xor
dec
pop
les
in
test
inc
sbb
cli
pushf
aaa
push
mov
push
loopne
imul
out
add
dec
fmul
in
ja
bound
mov
xor
imul
or
inc
lods
movsl
push
mov
hlt
add
test
push
aad
call
ja
in
divl
loop
inc
xor
out
cmp
mov
mov
addr16
inc
dec
add
inc
jbe
movsl
outsl
loop
sub
xlat
fs
loopne
negl
sbb
jmp
jl
mov
dec
or
adcl
mov
dec
mov
test
pop
scas
pop
aas
aad
dec
lahf
inc
cmp
cmp
pop
sub
sub
xchg
push
fimuls
mov
ret
cs
in
jle
cs
dec
lret
mov
popa
aaa
sbb
pop
in
dec
test
or
mov
test
das
stos
pop
sbb
int3
in
aam
jg
jmp
or
es
and
fdivl
add
inc
sbb
test
fildll
jle
out
or
adc
insl
imul
aam
jb
push
pop
nop
push
push
adc
jecxz
cmpsb
or
sub
adc
jmp
xchg
jmp
push
pop
dec
cmp
lret
push
out
fnstcw
or
in
or
scas
clc
add
test
mov
lea
out
mov
cmp
lret
or
pop
xchg
mov
xor
add
dec
loope
in
data16
mov
ja
outsb
xchg
and
jle
xor
xchg
bound
stos
jo
in
outsb
cmp
mov
sbb
cwtl
stos
imul
enter
aad
push
aad
and
scas
mov
fsubr
paddb
cmp
test
nop
fstpt
scas
pop
data16
aam
ficoml
push
or
insb
mov
mov
push
lcall
mov
push
cmpsb
mov
hlt
xlat
and
add
xchg
shll
call
sti
aam
das
out
adc
clc
ret
mov
lea
dec
outsl
scas
and
mov
fwait
mov
mov
mov
stos
in
lea
mov
xchg
pop
outsb
js
popf
pop
sub
pop
scas
dec
cs
dec
test
push
dec
mov
js
dec
xchg
push
out
xor
cmp
inc
aaa
daa
and
lret
xor
scas
aas
out
adc
stc
push
aam
xor
pop
jae
mov
push
pop
shlb
sub
into
mov
sub
fidivs
repnz
or
cmp
sbb
call
dec
add
xor
xchg
inc
mov
lea
mov
mov
clc
sbb
clc
or
mov
jmp
ret
rol
outsb
sub
push
into
in
mov
push
xor
in
jge
int
pop
mov
sbb
stos
xchg
pop
fisubl
dec
dec
test
pop
outsl
icebp
rclb
out
adc
push
aaa
mov
out
cmp
arpl
hlt
mov
xchg
stos
mov
test
js
dec
fcomps
mov
push
les
jecxz
je
mov
les
jbe
cltd
subl
xchg
testb
sub
push
push
xrelease
clc
pop
xchg
dec
shrb
mov
sub
out
in
into
xor
adc
movsl
ss
xchg
adcb
xchg
shlb
cltd
pop
pop
cmp
sarb
adc
out
stos
dec
jae
sahf
in
jnp
pop
pop
dec
jecxz
stc
adc
popf
aas
adc
repnz
rcrl
xchg
hlt
jo
lea
lcall
jo
fsubrp
jnp
rcrl
outsl
jmp
mov
xchg
mov
js
sub
shl
icebp
aam
jl
das
inc
mov
cmp
pop
insb
data16
setbe
pop
loopne
pop
dec
lahf
call
and
ds
xlat
ret
jns
aas
pop
lcall
stos
bnd
pop
sub
les
into
jecxz
call
imul
jne
cmp
pop
ficoml
fimull
cltd
mov
sub
jae
cwtl
sub
arpl
fs
or
lock
cltd
cmc
sbb
ljmp
mov
cmp
pop
outsl
xchg
ficoml
cmp
jge
imul
lret
mov
stc
cmp
cmp
cwtl
xor
jle
sub
xlat
xor
pop
inc
jg
cmpsl
js
in
add
xchg
add
test
mov
pop
pop
jmp
xor
adc
fidivs
pop
cmpsb
insb
or
lahf
add
and
aaa
iret
sbb
and
gs
fbld
in
in
neg
sub
nop
push
mov
loope
mov
jmp
pusha
cmc
nop
xlat
cmp
xor
jp
jo
test
sub
out
andl
xor
xchg
lea
ljmp
or
xor
fs
idivb
jmp
insl
arpl
push
arpl
adc
inc
jg
push
add
mov
jbe
lods
sub
pop
shll
adc
xchg
jge
push
addr16
mov
pop
ret
out
roll
sub
xchg
jb
nop
dec
fcmovnb
mov
add
inc
ja
stos
sub
pop
ja
push
adc
pop
clc
insl
push
or
inc
pop
cmp
push
pop
jno
and
pop
inc
repz
cmpsb
test
xchg
pop
imul
loopne
or
jbe
shlb
je
fstpt
cmp
cli
sub
sub
into
pop
aam
pop
insb
dec
mov
loop
pop
je
mov
jo
sbb
push
out
out
jo
xor
add
loopne
dec
push
jno
popf
mov
std
xor
and
dec
cmp
int3
addr16
xchg
add
fiadds
pop
cli
into
cmp
lock
adc
dec
push
adcl
inc
sub
cltd
lods
xchg
add
or
or
ss
popa
pop
sub
repz
hlt
inc
sbb
in
or
fnstcw
outsb
fld
dec
les
xor
mov
xor
push
fs
xlat
test
rcrb
pop
jmp
inc
nop
into
call
and
aam
xlat
push
movsl
loop
divl
jle
aas
mov
add
push
pop
in
jmp
xor
aad
clc
int3
mov
jg
mov
or
mov
mov
andb
lahf
loopne
xchg
add
adc
je
enter
mov
mov
add
lock
hlt
and
out
push
fmuls
into
sbb
movsb
dec
jns
jns
insl
cmpsb
or
dec
sub
ja
cmpsl
cmp
dec
mov
jp
pop
xorb
mov
sarl
cs
js
subl
jmp
push
clc
movsl
jno
inc
and
in
cmp
les
aad
lods
fbld
xchg
push
xchg
xchg
shrb
mov
mov
sbb
mov
lods
ljmp
mov
imul
dec
int3
lods
push
mov
push
out
jp
lds
call
pop
xchg
les
sarl
pop
mov
stos
fiadds
test
btc
popa
mov
push
cmp
add
dec
jnp
out
pop
testl
jg
aaa
jmp
adc
std
jle
push
dec
pop
shl
nop
jge
dec
fsubr
xor
mov
push
das
or
cmpsl
test
dec
imul
mov
pop
test
lahf
cwtl
iret
jae
mov
mov
pop
cmpsb
stos
xor
out
rcr
or
cmpsb
shrl
xchg
pusha
loope
xor
sbb
in
hlt
and
and
sub
mov
in
dec
cmpsb
pusha
push
mov
ss
testl
cs
fdivrs
test
jmp
or
das
rcr
insl
fstpl
sbb
mov
xor
cmpsl
ficomps
sbb
sbb
push
xlat
xor
mov
call
stos
out
xchg
cmp
inc
push
push
ja
gs
stos
mov
cmp
movsb
fisttpll
xchg
lods
nop
movsb
pop
rcrl
lods
mov
or
ficoml
cmp
xor
jns
mov
adc
dec
mov
sbb
jmp
adc
lea
mov
lahf
out
int3
push
xor
mov
fistl
repz
jb
mov
sbb
xchg
lret
popf
add
stos
adc
push
push
loop
xor
adc
sub
repnz
loopne
dec
bound
adc
xchg
iret
imul
lret
daa
dec
jmp
add
xor
rorl
cmp
or
cmpsl
aad
lret
faddl
insb
icebp
xchg
lret
test
mov
adc
leave
sbb
cwtl
jmp
adc
loop
shrb
dec
dec
push
sbb
in
mov
sub
shr
data16
std
push
inc
cmpsb
push
mov
mov
xor
push
out
jns
push
arpl
mov
shll
jp
sub
fnsave
cmp
and
es
cmpsl
imul
lahf
and
sbb
or
dec
add
call
shlb
jns,pn
adc
cmp
fdivrl
jle
stc
pop
cli
ljmp
pop
jnp
cmpsb
and
xchg
inc
scas
xchg
mov
xor
testl
mov
scas
subl
jge
xchg
icebp
loope
decb
push
jecxz
xchg
push
outsl
stc
pop
sub
pusha
jecxz
fwait
xor
push
lahf
filds
popa
xor
mov
jo
mov
sahf
and
icebp
shl
data16
fxam
ja
fsubs
push
arpl
mov
jle
xlat
pop
test
fsubrs
jnp
gs
andb
mov
rclb
std
inc
pop
ret
add
sbb
cli
xor
sbb
or
jbe
mov
in
arpl
leave
push
dec
push
rorb
in
cmp
loop
or
pop
xchg
mov
mov
mov
jne
pop
mov
jnp
test
mov
mov
repz
dec
lods
push
or
xchg
xchg
pop
andl
mov
xor
repnz
or
jno
pop
xchg
sahf
fistl
stc
lods
cltd
fwait
pcmpeqw
out
jmp
xlat
cmp
sub
mov
test
fwait
cmp
outsl
pop
popa
test
adc
push
daa
test
add
outsb
test
out
mov
dec
pushf
sub
cmc
cli
push
shrl
movsb
repz
int3
pop
imul
jo
pop
cmpsb
lods
fs
sub
out
cld
scas
imul
inc
mov
and
lret
test
mov
push
loop
push
push
and
jnp
fsts
mov
and
ja,pn
xchg
loopne
add
fidivrl
fildl
jno
call
pop
push
rorl
movsl
dec
mov
mov
idivb
inc
mov
out
mov
daa
bndstx
push
shll
iret
inc
mov
js
sub
loopne
pop
sbb
ja
or
outsl
push
fdivrl
nop
pop
popa
jbe
int
add
cmpsb
cmp
bound
xchg
adc
insb
push
jmp
mov
loop
mov
mov
jle
les
mov
xlat
pop
dec
lret
or
cmc
leave
jo
int3
ss
xchg
pop
push
jge
popf
es
imul
loopne
in
add
and
mov
adc
sti
gs
cmp
pusha
pusha
int
mov
cltd
mulb
repnz
cmpsb
aad
or
ja
pop
mov
xchg
mov
outsl
mov
sub
das
shll
sub
push
push
cltd
xchg
push
mov
test
stos
mov
xchg
sbb
movsb
flds
xor
mov
decb
mov
xor
cmp
sbb
add
push
movsb
arpl
repz
lea
cmp
mov
addl
sbb
pop
fsubl
cmpsb
mov
jle
loopew
ror
add
cltd
in
mov
sti
jae
das
xor
int3
lret
pop
ret
jnp
loop
test
mov
lods
xor
sbb
je
sbb
nop
mov
adc
leave
cmp
and
cmpsb
push
push
in
dec
sbb
mov
lock
adc
xor
mov
lods
rclb
mov
rcll
daa
push
xchg
out
aas
imul
outsb
sbb
inc
popf
dec
and
mov
movsb
mov
adc
mov
inc
mov
xchg
xlat
jns
fldt
sub
push
stc
pop
scas
in
push
mov
jbe
hlt
or
sub
pop
lock
or
jae
fwait
cmpsb
xchg
fsubrp
inc
mov
fsubl
fnstenv
sub
jmp
sbb
pop
fdivrl
dec
jmp
lahf
add
mov
pop
fisttpll
clc
or
jns
or
in
mov
rcll
xchg
push
rclb
xchg
outsl
cs
ds
addr16
xchg
sbb
xchg
addb
fs
je
lods
mov
mov
mov
popf
mov
mov
xchg
subb
ss
imul
jbe
popa
movsl
xor
adc
mov
aas
xchg
sbb
mov
mov
mov
js
cltd
xor
pusha
mov
imul
cmp
mov
div
lds
push
push
movsb
xchg
das
fistps
jae
hlt
cmp
repz
adc
mov
push
and
int
mov
cmp
sub
xor
ss
sbb
fidivl
cli
pop
insl
add
xchg
enter
mov
fnstenv
mov
subl
int3
fwait
mov
jmp
add
or
jae
xor
orb
lcall
mov
mov
xchg
push
es
ret
addr16
lock
mov
push
rorl
mov
stos
pop
sbb
in
or
mov
popa
xor
leave
inc
add
push
fwait
xor
cmp
inc
jo
push
mov
fstps
shl
vmovhps
jo
pushf
rcrl
out
push
pop
test
fcompl
and
fisubrl
xor
stos
sub
xchg
pop
pop
fldenv
inc
mov
mov
cs
insl
imul
cmp
or
loope
mov
sub
mov
fdivp
scas
js
jno
addr16
inc
adc
mov
js
daa
adc
sbb
cmp
es
in
loope
arpl
mov
cmp
dec
fwait
sub
in
mov
sub
jg
mov
mov
ffree
add
test
add
aad
inc
mov
and
lahf
sbb
mov
push
xlat
push
inc
hlt
test
shll
test
push
and
push
adc
or
pop
setle
aam
jg
cmp
and
add
lcall
frstor
push
shl
adc
cli
lahf
inc
fisubrs
jmp
test
in
push
push
xchg
fs
addr16
and
jp
rcll
pusha
js
cmp
adc
lcall
lea
xchg
fistpll
and
mov
cld
jecxz
inc
cmp
xchg
sarb
xorl
insl
mov
lcall
jge
mov
dec
adc
loop
xor
sahf
cmp
and
popa
iret
int
out
sub
and
movb
sahf
push
xchg
inc
mov
add
pop
lret
loop
mov
aam
movsb
enter
and
push
out
jecxz
and
shr
clc
dec
mov
cld
or
sahf
jns
orl
pop
sti
push
push
adc
cmpsl
mov
jg
ret
xlat
jge
leave
sbb
inc
cli
mov
insl
andl
pop
pop
in
xchg
popf
sbb
push
add
adc
lahf
scas
lahf
or
dec
ds
adc
jo
lods
daa
cli
push
inc
jnp
jecxz
nop
int
jnp
add
adc
inc
sub
int3
ljmp
fisubrl
xchg
adc
cltd
lock
cmp
jnp
dec
dec
aaa
and
xchg
adc
pop
and
inc
dec
dec
jo
dec
in
fimull
mov
fdivrs
xchg
sar
jg
cs
cltd
add
pop
lds
inc
jb
mov
cmpsl
js
popf
hlt
bound
cltd
mov
jns
cld
mov
fisttps
jne
pop
jne
push
flds
scas
lret
rol
jno
pop
inc
or
xchg
xor
int
mov
push
xchg
pop
sbb
test
std
loop
adc
bound
xchg
lret
ja
sub
fwait
mov
add
mov
pushf
ret
add
jno
cmp
inc
stc
ret
cli
mov
or
fstpl
jp
and
xchg
les
fnsave
std
sub
mov
or
mov
mov
add
jle
insl
fnstcw
out
cmp
or
shrl
add
push
les
xchg
xor
repnz
popf
mov
adc
mov
cltd
addr16
sbb
jno
fsubrl
push
and
mov
mov
pop
stc
push
scas
subl
pop
sbb
pop
shr
jmp
mov
mov
pushf
xchg
and
sti
ret
aam
clc
enter
pop
add
xchg
dec
scas
cli
out
outsl
stos
adc
push
lcall
lret
test
cmp
inc
or
xchg
xchg
in
push
add
mov
mov
es
jne
iret
xlat
xchg
adc
mov
inc
ljmp
push
adc
cltd
js
call
mov
add
cmp
faddp
popa
xchg
mov
inc
inc
mov
cmpl
loopne
pop
dec
je
ljmp
or
add
iret
push
jns
dec
pusha
mov
jmp
aas
mov
or
mov
stos
setne
jne
popa
shlb
cmp
mov
inc
sbb
add
mov
or
js
push
std
sub
inc
and
sub
push
mov
xchg
into
pushf
push
mov
nop
dec
lods
inc
mov
pop
enter
rcrl
div
jnp
lea
test
cli
sbb
add
add
adc
movsl
inc
inc
mov
or
stc
enter
mov
aas
mulb
add
paddsw
pop
mov
mov
lea
andb
out
jnp
in
movsb
out
or
jns
fldenv
inc
or
jecxz
in
inc
pusha
les
fsubl
sub
lcall
test
inc
push
xchg
adcb
fnsave
jb
mov
outsl
fdivrl
add
scas
addr16
add
and
test
test
mov
iret
xchg
daa
cli
mov
lds
jns
xchg
pop
sbb
xor
adc
fisubl
mov
jbe
ficompl
jno
and
mov
or
iret
push
cmp
stc
jno
mov
jp
inc
xchg
mov
jne
repnz
leave
fstpt
loop
rcll
xchg
xor
dec
rcrb
jg
inc
adc
sub
adc
xchg
shlb
lret
rcrb
pushf
add
mov
icebp
inc
add
jl
adc
jmp
or
xchg
ret
in
pop
test
adc
inc
xchg
add
pop
mov
add
fisubl
pop
int
push
scas
test
mov
xchg
stc
jmp
clc
xchg
dec
clc
pop
push
jno
dec
add
and
jle
pop
fldenv
arpl
bound
xor
minps
add
and
xorb
rcl
loop
jp
shll
loope
and
movsl
add
xchg
push
es
stc
or
lahf
fisubs
fidivs
jg
mov
mov
in
inc
mov
paddusb
aad
sub
mov
lret
subl
xor
cmpsl
addr16
fcmovu
lea
in
jg
or
push
pop
inc
lds
mov
movsl
inc
lods
addr16
inc
cmpsb
std
mov
xor
fmuls
cwtl
or
add
jp
pushw
dec
les
bound
xor
pusha
addr16
jg
fiadds
out
cmpsb
daa
imul
mov
sbb
scas
inc
or
aad
ret
dec
fwait
lea
lahf
in
sub
jecxz
jmp
mov
and
push
out
icebp
mov
cld
or
or
dec
xor
and
clc
outsb
aam
jecxz
aaa
rcrl
mov
sti
push
repnz
sub
xor
jnp
daa
mov
sbb
leave
sarb
dec
lods
es
sbb
adc
les
cmp
add
fldenv
fcoms
push
mov
loop
fisttps
cltd
aam
scas
mov
idivl
sahf
call
adc
mov
push
frstor
stos
mov
push
shll
xor
adc
out
lret
xchg
lods
aam
data16
mov
popf
fnstcw
lds
mov
pop
aad
dec
jo
add
ss
pop
in
adcb
pop
jb
sub
jbe
add
mov
or
xchg
lahf
mov
mov
test
pusha
jl
sub
add
cld
mov
sbb
insb
xor
push
in
arpl
or
add
inc
cli
or
cli
pop
and
fmul
cmpsl
ljmp
cmp
lea
pop
xor
adc
decl
add
or
aam
int
rcrb
cmpsb
daa
je
adc
clc
adc
sub
mov
jl
cwtl
adc
xor
dec
js
inc
enter
jl
push
aad
sub
rcll
fmul
push
ret
xor
loopne
and
pushf
fistps
hlt
push
divl
xor
pop
aam
lods
jg
call
fsubr
dec
in
aam
xor
das
inc
sbb
lret
and
cld
gs
cmp
fcomi
inc
fcom
cltd
cmp
test
xchg
pusha
imul
and
cmp
lahf
sahf
in
loopne
push
ret
out
sbb
and
push
fstps
lahf
add
ficomps
lods
popf
in
xchg
dec
call
paddb
jle
popf
mov
aaa
xor
dec
sbb
insl
mov
cwtl
int3
inc
sbb
sarb
and
fimuls
dec
mov
add
xchg
add
mov
inc
repnz
bound
into
mov
mov
lods
push
out
fistpl
std
mov
dec
hlt
cmp
repnz
pop
inc
bound
cmp
push
add
mov
cmpsb
outsl
mov
xchg
sub
dec
push
jns
pop
inc
cmp
or
dec
aas
andb
pop
mov
mov
sbb
loopne
icebp
sbb
mov
inc
mov
in
fsubrs
inc
sbb
cmpsl
dec
jb
pop
mov
mov
jne
xchg
adc
icebp
and
push
push
ja
cmp
ffree
mov
jp
sbb
cmpl
pop
addl
jnp
sub
in
sbb
jmp
inc
xchg
cwtl
imul
aas
mov
clc
loope
jge
fnstcw
jmp
dec
xchg
hlt
mov
in
jmp
add
cwtl
pop
dec
push
pop
mov
lret
sahf
jg
insl
sub
mov
pop
sub
lahf
lcall
sub
divb
pop
sub
fucomp
jno
popf
lcall
popa
lods
test
imul
call
sbb
sub
fisttps
js
mov
and
or
test
jno
push
punpcklbw
cmp
adc
jmp
mov
jo
leave
lods
ja
out
jle
in
int3
sbb
aas
jnp
or
fcmovbe
cwtl
gs
ja
xchg
pop
imul
sub
mov
push
xor
mov
jae
mov
inc
mov
hlt
xchg
sub
addr16
mov
mov
sbb
jmp
mov
and
aad
cmp
clc
aam
mov
scas
push
sbb
push
and
inc
xor
mov
dec
stc
fmul
sub
addr16
add
pop
pop
arpl
xchg
and
mov
pop
dec
iret
pop
jnp
loope
rcl
xor
or
mov
adc
jb
xor
jnp
insb
out
lods
mov
shlb
adc
push
ss
mov
sub
xchg
rcll
jmp
inc
push
and
jge
idivl
dec
push
jg
mov
gs
adc
aad
xorb
push
lea
add
test
rcrl
add
ficomps
divl
xchg
int
ljmp
jecxz
ss
mov
mov
ljmp
add
in
pop
cmpsb
loopne
sbb
dec
aad
sbb
ja
in
jp
xchg
push
mov
pop
out
js
mov
insb
pusha
imul
pop
jmp
sbb
dec
cmc
xor
rcll
lret
pop
lock
popf
shlb
call
dec
add
mov
stc
mov
ja
cli
push
loopne
in
adc
push
jl
std
test
cs
je
aaa
flds
jecxz
add
roll
xlat
push
jb
pop
pusha
pop
pop
divl
lret
jae
lods
ffree
jecxz
mov
sbb
frstor
jbe
in
add
mov
pop
je
adc
mov
lea
sub
dec
fmuls
sbb
mov
jge
jp
fisubrs
pop
jg
fistpll
nop
fistps
push
mov
lcall
fsubrs
xchg
push
adc
popf
loop
push
jne
dec
std
inc
xor
xchg
xchg
add
sbb
or
arpl
seto
dec
mov
pusha
arpl
fbld
or
repz
scas
add
mov
jne
adc
pop
mov
fstpt
push
push
mov
outsl
ljmp
imull
mov
xor
fistpll
iret
adc
aam
imul
cmp
fistl
mov
cltd
mov
stc
cli
cmp
mov
lcall
mov
fisubs
loopne
iret
in
adc
inc
mov
push
in
pop
arpl
sub
ret
or
mov
push
xor
insb
xchg
jns
aas
loop
sbb
fcomps
sub
mov
cmp
jbe
ljmp
cmc
arpl
ja
rcrl
mov
add
aas
mov
inc
iret
jae
sbb
add
and
shll
and
fsubl
das
out
dec
test
sub
pushf
sub
sub
test
cli
and
mov
mov
rorb
movsl
cmpsl
sub
push
scas
pop
ret
or
cs
cmp
in
div
data16
add
inc
test
sub
sbb
inc
sub
repz
pop
rclb
bound
insl
jb
sub
repnz
cmp
xor
push
jle
lcall
cmp
sub
sub
lods
lods
xchg
push
neg
pop
ret
jnp
imul
stos
sbb
dec
icebp
mov
inc
cld
insb
pop
mulb
cmp
xorb
ljmp
dec
sub
ret
add
les
mov
aas
and
test
rorl
outsl
ss
andb
popa
jb
ret
push
enter
fcmovbe
leave
fcoms
popa
or
cmp
xchg
push
cmpsb
push
inc
add
fldt
insl
pop
repz
push
xchg
push
push
add
imul
xchg
pop
cltd
cmp
mov
push
dec
out
in
cli
scas
mov
pop
sbb
or
inc
cmpsl
dec
inc
dec
jae
and
push
xchg
movsb
jae
out
js
shll
mov
movsb
jp
pop
test
mov
cmp
out
lret
sbb
xchg
daa
int
decb
into
iret
jg
out
lds
jno
sub
icebp
subl
movsb
dec
add
pop
jbe
xchg
jnp
data16
mov
dec
mov
mov
arpl
lret
push
jecxz
add
dec
cmp
lcall
inc
jbe
adc
push
xchg
mov
aad
mov
inc
inc
mov
add
lahf
cmp
adc
jg
insl
call
add
add
add
das
inc
jb
imul
adc
shl
mov
negl
ret
loop
mov
mov
test
test
xor
push
mov
xlat
in
decb
sbb
mov
pop
mov
mov
mov
aas
or
xchg
fadd
cmp
cld
outsb
fwait
push
inc
cmp
inc
negb
and
aad
sub
mov
pusha
lahf
sub
scas
loopne
inc
ret
pop
sub
leave
sub
mov
cmp
sbb
jle
push
std
pop
xchg
adc
icebp
imul
dec
iret
das
add
mov
pop
mov
rcrl
add
loope
mov
orl
mov
shr
jecxz
clc
repz
xorl
xchg
ds
mov
mov
and
jbe
inc
shll
xchg
ss
mov
jo
jge
sti
loop
mov
xchg
into
nop
negl
lret
dec
pop
cmpsb
decb
push
aad
dec
out
fwait
inc
ret
fs
xchg
mov
xchg
repz
dec
and
and
push
xchg
enter
repz
stos
sbb
andb
mov
sub
xchg
cmpsl
test
test
test
add
adc
push
ss
leave
int3
clc
aas
sbb
sbb
lods
jnp
cmpsl
adc
cld
mov
repz
dec
test
adc
pop
into
insb
push
or
js
cmp
add
fisttpll
dec
int
xlat
and
lock
xlat
lahf
pushf
cwtl
sti
lea
je
cwtl
inc
fwait
pushf
fwait
test
cmp
add
imul
hlt
test
scas
int3
pushf
inc
push
xor
adcb
mov
pop
inc
mov
xchg
outsl
push
add
test
je
sub
add
scas
sub
xlat
mov
repnz
push
xchg
lods
inc
popa
repnz
jp
inc
xor
dec
mov
fsubl
movsl
divl
and
mov
dec
push
jnp
mov
adc
shrl
aas
inc
daa
push
mov
mov
mov
fdivrs
ja
xchg
dec
add
pop
pop
aad
repnz
pop
mov
dec
pop
add
lock
loope
cs
xchg
mov
add
out
cli
repnz
add
and
test
push
aas
lret
adc
imul
lret
js
addr16
sbb
pop
lret
lret
jbe
std
pop
inc
sahf
dec
fisubrs
sub
or
int3
ja
rorl
addr16
movsb
or
lods
out
mov
test
sub
fs
xchg
jle
xchg
mov
leave
aam
test
xor
adc
jno
mov
or
sahf
mov
inc
in
gs
daa
inc
daa
xor
mov
sbb
or
int
fdivrl
arpl
pushf
sub
pop
xchg
xchg
insl
mov
sbb
inc
lcall
daa
xchg
mov
cmpsl
pop
addr16
inc
or
add
adc
pop
xlat
shll
or
cld
insl
pop
lods
lahf
and
sti
and
ret
test
stos
std
sahf
sub
imul
xor
cltd
ss
push
adc
into
scas
xchg
in
loopne
jle
lock
pop
icebp
mov
dec
mov
fisubs
int3
movsl
mov
fld
jae
ja
shll
sbb
or
sti
data16
sbb
enter
mov
stos
pop
ja
hlt
and
inc
cmp
xor
and
out
or
jp
jne
or
pop
addr16
adc
mov
adc
mov
sbb
xchg
test
sub
pushl
pop
mov
out
push
cs
push
mov
mov
daa
jnp
pop
out
jb
jns
scas
imul
ja
add
test
cmp
ret
dec
jp
sub
popf
pop
out
std
sbb
push
clc
inc
call
push
loope
setne
mov
adc
pop
mov
jns
pop
popf
stc
push
addr16
mov
xchg
fstps
outsl
addr16
rclb
daa
jbe
jmp
pop
cmp
push
sahf
add
jg
add
js
shll
inc
fs
mov
pop
fmul
aad
cmp
sarl
sbb
outsb
xchg
jb
add
out
lret
jne
nop
and
enter
cmp
pop
repnz
adc
mov
inc
lret
cltd
push
sti
test
ljmp
les
stc
mov
xchg
push
sbb
je
or
xchg
cmc
std
and
push
lods
scas
or
inc
ficompl
push
cmpsb
fnsave
push
sti
inc
shrb
inc
pushf
xchg
int
cmc
shll
cmpsl
pop
fnsave
sbb
xchg
cmpsb
fstpl
into
fisttpll
loop
add
pop
ret
leave
pop
pusha
mov
sbb
mov
sub
pop
call
lret
ja
push
out
aaa
cli
sbb
rcrb
sub
add
stos
fsubrs
sbb
fwait
sbb
jae
fcmovnbe
fidivrs
lcall
loop
movsl
xchg
dec
jmp
enter
push
adc
lret
std
int
loop
mov
das
dec
in
sub
aam
mov
lds
jp
push
xchg
loopne
xor
add
loopne
sub
inc
adc
push
inc
testl
mov
ret
sub
fisubrl
mov
xchg
ret
cmpsb
pop
lods
sub
sub
xor
mov
ss
stc
inc
lea
sbb
out
adc
mov
cmp
xchg
pop
sub
jmp
fucomi
jnp
cwtl
and
add
mov
xor
dec
adc
inc
fldt
xor
out
xchg
imul
loopne
sbb
and
fldpi
decb
clc
scas
cmp
mov
hlt
or
xchg
xchg
mov
cltd
mov
xchg
dec
stos
mov
mov
mov
cltd
pushf
or
stos
es
movsb
xchg
xor
in
xor
push
dec
iret
roll
mov
loope
inc
lret
ja
into
fstpl
lret
mov
fs
push
negl
aas
clc
cmp
push
and
leave
or
ss
mov
jae
std
ret
f2xm1
push
jecxz
mov
cmc
sbb
jl
repnz
jmp
xchg
cld
int3
or
jbe
ja
add
cmp
mov
mov
fmul
out
cwtl
pop
hlt
dec
mov
add
or
and
shrb
cmc
cmp
adc
or
mov
xchg
scas
adc
in
pop
clc
and
push
and
jae
sbbb
sub
shrl
dec
repz
shl
cmp
addl
mov
js
in
push
push
dec
mov
inc
add
or
mov
sbb
sub
cmpb
mov
subb
rorb
fwait
stc
loop
add
pop
and
leave
adc
icebp
jnp
movsb
or
mov
xchg
out
mov
bound
lret
push
lahf
sbb
push
ret
fistl
rcll
leave
mov
in
rcrb
popf
push
sbb
cmc
lock
jge
insb
inc
js
and
add
add
popa
das
insb
movb
sub
daa
mov
jle
ret
sbb
adc
push
icebp
cmp
imul
imul
mov
push
outsl
popa
sbb
xor
sub
mov
dec
nop
sbb
pop
sbb
imul
call
jb
mov
mov
pushf
les
imul
xlat
in
or
xor
xor
movsl
daa
ss
and
cmpsl
pusha
enter
arpl
adc
in
int
pop
es
mov
inc
sbb
lret
xchg
mov
mov
sub
ret
ss
pop
and
or
pop
sbb
add
push
insb
push
ds
jno
bound
rcrl
fmull
adc
and
in
and
shlb
in
pop
hlt
sub
mov
jo
hlt
popf
out
inc
jo
push
pop
es
push
jae
ret
mov
push
je
imul
and
mov
je
jnp,pt
iret
sub
and
sahf
push
incl
mov
iret
and
lods
sahf
sbb
cmp
mov
xchg
add
cmpsb
pushl
pop
or
mov
cli
push
mov
ds
xchg
movsb
cli
lds
push
mov
xchg
push
xor
hlt
ja
pop
pop
negl
mov
sub
jle
push
push
mov
pop
aas
movsl
pop
mov
loope
stos
jne
jp
and
or
mov
ficompl
jno
clc
xlat
loope
jb
mov
in
filds
jns
nop
test
mov
mov
or
scas
mov
xchg
fsubrl
pop
ret
add
xor
lret
fneni(8087
mov
mov
fwait
xor
and
sbb
or
fs
cs
outsb
cmp
mov
fcomps
jmp
mov
add
push
hlt
xor
mov
jl
cmp
test
fcoml
movsb
fidivs
stc
outsb
sarl
bound
movq
dec
insb
or
add
adc
pop
jp
leave
pop
imull
scas
int3
push
repnz
fidivl
out
scas
jne
inc
pop
adc
push
xchg
xor
or
addr16
xchg
sbb
adc
data16
mov
stos
cs
xchg
mov
dec
cmp
pop
out
addr16
jne
cs
jg
cwtl
je
aas
stos
into
sarl
dec
mov
pop
loop
or
cmp
dec
mov
outsl
int
mov
movsb
push
cmpsl
fidivl
inc
lret
aad
pop
aaa
push
mov
inc
push
mov
ret
jmp
jno
sti
lea
xor
mov
pop
sub
test
inc
inc
pop
cld
insb
popa
adc
pop
fwait
jp
scas
push
movsl
mov
pop
dec
adc
mov
cmp
fisubs
nop
add
or
outsl
shll
nop
repnz
daa
cli
lret
sahf
inc
and
push
hlt
mov
inc
inc
fisubrl
aaa
andb
push
pop
push
push
jnp
dec
sub
and
mov
pop
imul
adc
inc
frstor
jecxz
push
popf
repz
push
sbb
out
and
or
repnz
cmp
lea
dec
loopne
fmull
orb
jge
mov
add
out
xchg
jbe
stos
add
ret
ja
sarl
jmp
pop
jmp
sub
xlat
jp
fnstcw
adcl
lcall
mov
push
outsl
add
pop
pop
insl
into
push
out
and
add
add
pop
incb
lret
jns
cs
int3
imul
mov
setge
pop
loopne
imul
pop
jb
sub
sub
cmp
ret
cmpl
xor
mov
or
xor
cmp
xchg
fildl
xor
xchg
push
lea
fnstcw
out
jp
or
mov
xchg
test
lea
rol
push
dec
stos
pop
je
loope
in
add
jno
cmpsb
fildll
ja
xchg
pop
fcmove
jg
xchg
xor
jnp
aas
cwtl
xor
jns
fcmovne
cvtps2pd
repz
in
andb
lcall
add
jge
addb
sbb
ds
out
cmp
fisubs
clc
push
inc
ret
dec
bnd
dec
xor
sub
test
and
cmpsl
lcall
cvttps2pi
mov
sbb
loop
jae
fildll
lock
outsl
lcall
les
or
imul
pop
divb
jmp
jecxz
repnz
xchg
mov
fs
push
add
push
mov
dec
push
push
dec
cmp
movsl
jb
sbb
fadds
xor
inc
inc
jbe
xchg
lock
stos
imul
mov
ss
sub
cmp
pop
lds
test
sub
loopne
inc
insl
loope
std
outsb
xchg
jg
push
movsb
cmp
lock
leave
test
jge
cmp
mov
aad
dec
shrb
sbbb
insb
cmovno
sahf
jg
stos
mov
clc
lods
xor
mov
xchg
nop
xchg
out
mov
inc
or
lret
mov
jbe
jo
inc
mov
adc
popa
inc
jl
add
push
and
mov
pop
lahf
adc
nop
jne
in
in
add
in
in
dec
cs
xchg
cli
mov
mov
cmp
aad
je
lods
mov
inc
subl
xor
pop
jle
sub
jp
aam
rorb
and
into
fcomps
scas
js
repnz
push
outsb
pop
ret
pop
cwtl
xor
or
data16
pop
jl
push
pushf
pop
push
notb
aas
dec
xchg
cmp
xchg
adc
mov
cmp
sbb
add
cld
mov
mov
pushf
sbb
mov
sub
mov
insl
fwait
mov
dec
int3
dec
andl
lock
jbe
dec
insb
packssdw
lcall
cs
push
jb
mov
outsb
mov
jnp
inc
mov
andl
jmp
dec
fdivrl
test
lea
sub
push
xlat
addr16
in
dec
adc
ret
push
loopne
leave
enter
jno
int
js
add
sbb
xor
adc
add
shll
mov
push
and
mov
scas
mov
jno
movsl
ret
jge
fisubrs
lahf
in
pop
add
pushf
stos
mov
mov
mov
popa
lea
fldt
ss
inc
loope
jge
loope
loop
push
sti
aam
fbstp
pop
ja
adc
scas
push
mov
lret
push
lock
xchg
rorb
sbb
dec
inc
pop
adc
cmpsl
fstpl
popa
mov
cmp
hlt
pushf
mov
out
or
sub
dec
mov
out
jns
loope
lea
mov
inc
cmpsl
jl
aad
mov
hlt
clc
scas
sub
and
xor
dec
mov
dec
mov
or
test
mov
cmpl
es
les
mov
mov
out
fiadds
xchg
insl
adc
jns
and
mov
dec
push
scas
incb
aad
push
xorb
pop
cmp
jnp
aas
fdiv
movsbl
push
inc
incl
cld
and
stos
mov
pop
sub
lahf
cwtl
mov
sub
mov
lock
jl
cmp
or
add
cs
hlt
inc
pushf
icebp
roll
add
out
push
out
pop
arpl
mov
mov
pop
xor
push
scas
push
xor
pop
inc
loope
imul
in
sub
fistpll
test
mov
adc
jle
out
fdivl
lods
mov
push
dec
mov
clc
lret
decb
andb
mov
ret
movsl
cld
cmpsb
xor
mov
add
vpsubq
stc
or
test
sbb
cltd
cmp
cmpsb
mov
pop
push
popf
jo
jg
jl
pop
ret
lahf
push
aaa
loope
dec
jmp
mov
lahf
cli
jmp
cmc
int3
adc
fnstenv
xor
test
out
cmpsb
std
xchg
sub
test
and
sub
lock
pop
ret
xchg
movl
ds
fistl
scas
cmp
mov
scas
and
mov
cmp
mov
sbb
push
call
sub
xor
push
outsb
or
or
pusha
push
or
mov
jne
pop
xor
mov
lods
mov
mov
adc
ljmp
sbb
into
sub
adc
negl
xor
clc
xor
xchg
jmp
lock
ret
mov
inc
mov
add
scas
inc
mov
inc
and
repz
jb
dec
xlat
adc
xchg
enter
daa
add
fwait
mov
mov
push
mov
mov
add
cs
icebp
lret
sbb
mov
aam
pushf
es
cwtd
daa
fadd
sbb
sahf
xchg
dec
pop
adc
popl
js
shr
mov
cmp
jns
lods
addl
push
xor
out
jmp
mov
xchg
jge
and
inc
jmp
jecxz
and
into
pop
lahf
push
add
inc
cmc
sub
push
xchg
xor
mov
out
das
movsl
jmp
push
loopne
push
mov
jae
imul
mov
jnp
xor
popf
ret
test
loop
int
add
fildl
adc
and
mov
jbe
mov
cwtl
fstps
dec
mov
adc
dec
cmp
sbb
jae
push
sbb
dec
std
shl
cmpsl
push
int3
xchg
xor
xchg
mov
in
add
dec
in
xchg
int3
jmp
icebp
movsl
outsl
cmc
dec
jge
in
in
sub
ret
pop
and
sti
ss
hlt
jns
push
push
stc
jae
outsb
sub
sbb
pop
fidivs
test
or
adc
sub
sub
adc
fdivs
xor
imul
test
repz
cmpsb
push
ja
ret
cmpsb
mov
lahf
push
dec
mov
lcall
int
fwait
jo
jb
cs
mov
push
das
dec
xlat
ret
jbe
mov
cli
pop
cmp
ja
xor
lahf
jbe
push
jmp
mov
sbb
scas
ja
repz
ret
jb
pop
stos
imul
adc
push
dec
pop
add
and
aaa
cmp
out
adc
sub
aam
adc
scas
imul
xor
in
mov
adcl
addr16
rcr
cmpsb
mov
or
cmp
xchg
stos
jle
cltd
or
mov
dec
iret
mov
faddl
hlt
xchg
jb
test
mov
repnz
adc
arpl
stc
lods
dec
mov
pop
adc
daa
xor
les
xchg
test
aad
jbe
mov
pusha
sub
sbb
xchg
push
lea
ret
test
or
cmp
jo
pop
sti
mov
xchg
mov
mov
outsl
adc
js
lods
add
mov
nop
add
fmul
popf
mov
mov
xchg
cmpsl
rolb
or
jnp
cmp
push
mov
xchg
jge
add
sbb
mov
mov
aad
orl
or
adc
push
dec
mov
push
les
push
push
mov
adc
repz
dec
mov
push
xchg
stc
int
jno
or
or
cli
mov
cwtl
aas
cmpb
jno
fwait
or
inc
int
jmp
idivl
push
inc
cli
js
sub
cmovne
ret
jp
xchg
and
xchg
dec
dec
sub
repnz
pop
inc
lret
sbb
aad
mov
ja
lock
jo
test
int3
xlat
sbb
jae
inc
push
ljmp
mov
xchg
sbb
cmp
out
ret
dec
loop
add
mov
ret
daa
mov
push
gs
jmp
and
mov
out
adc
xor
testb
sbb
sbb
mov
push
xchg
inc
adc
mov
pop
daa
aas
popa
adc
xchg
sti
ljmp
lea
jno
add
jecxz
rorl
fs
cs
cmp
pushl
pop
sbb
sbb
fpatan
adc
paddusb
insl
lock
jmp
shlb
push
fwait
aad
aas
rdtsc
pop
dec
dec
mov
adc
js
cmp
loop
xor
dec
int
clc
sub
xchg
faddl
adc
mov
sbb
add
dec
movsb
popf
js
shlb
pop
push
xchg
pop
cmpsl
push
outsl
hlt
mov
std
sub
xchg
int
mov
or
arpl
mov
xor
pop
shll
ret
mov
cld
mov
loopne
jo
call
sbb
sti
sarl
add
jle
pop
scas
push
addr16
int3
imul
and
xor
dec
mov
pop
das
pop
push
shl
frstor
dec
and
pop
daa
sahf
add
dec
cmp
test
or
imul
dec
inc
push
idivl
fisttps
bound
mov
lahf
inc
scas
out
popa
pop
cmp
movsb
jl
sbb
in
or
test
lods
pop
lods
addr16
lret
adc
push
dec
jns
jae
jge
stos
mov
bound
lods
stos
fidivrl
jmp
adc
call
lret
jo
lret
lret
outsb
adcl
mov
inc
mov
jg
add
xlat
pop
cmp
xchg
jp
xchg
jbe
and
mov
jg
cmp
push
push
inc
push
xlat
and
sub
mov
xor
inc
cli
pop
mov
ss
fsts
iret
pop
shlb
out
ss
lods
adc
pop
stc
in
mov
sub
or
sti
sbb
int3
mov
das
cmp
jb
sahf
les
es
out
scas
arpl
rol
mov
loopne
or
pop
popf
scas
push
xchg
jns
adc
testl
sbb
es
clc
push
mov
repz
jp
xchg
push
jecxz
int3
mov
pop
fs
xorb
add
mov
inc
adc
pop
pop
pop
adcl
adc
mov
jno
pushl
call
shl
fstps
jg
fidivs
imul
ret
out
mov
lcall
ret
lcall
loope
test
stc
xchg
int
sbb
jmp
scas
mov
inc
pop
in
ror
jl
pushf
xor
cmpb
jno
popf
int3
fisubl
and
sbb
and
mov
fsubrp
hlt
xor
ficompl
xor
mov
xchg
pop
mov
add
jp
outsb
xor
arpl
out
call
xchg
adcb
and
aam
out
cltd
data16
int
shl
jecxz
loopne
rolb
mov
data16
xchg
repz
pop
xchg
cmpl
lds
pop
push
jo
sbb
or
lods
call
int3
cmp
jmp
ret
adc
into
mov
ror
adc
mov
test
test
fcomps
inc
xchg
and
pop
adcl
pop
ja
pop
lcall
nop
sub
mov
outsl
enter
lcall
xor
test
pop
std
dec
in
in
or
mulb
cmp
shll
mov
jns
insb
test
jbe
push
or
mov
mov
xchg
inc
push
mov
add
add
sub
push
sub
add
out
mov
mov
hlt
mov
es
in
lock
cs
dec
ja
shll
xchg
mov
ficomps
cmp
jg
stc
enter
int
mov
test
mov
stos
xchg
outsb
jmp
or
das
cli
cmp
adcb
inc
es
bswap
insl
mov
mov
or
out
imul
or
test
fmull
adc
ret
sub
inc
daa
repnz
jecxz
and
xor
mov
sub
mov
jbe
insl
xchg
rol
fdivl
arpl
adc
rorl
cmp
mov
and
jne
add
ret
pop
pop
cwtl
inc
clc
xlat
jb
dec
lret
pop
cmp
pop
mov
adc
lahf
and
sbb
pop
pop
cmp
or
imul
push
scas
popf
shl
push
daa
int3
push
cwtl
pop
push
inc
xchg
sub
xchg
shl
pop
mov
jnp
pop
and
mov
adc
mov
scas
mov
xor
lds
pop
test
and
xchg
sub
push
aam
cmp
jno
push
sbb
jns
fsub
push
sti
emms
ret
push
icebp
imul
aaa
sub
push
pop
pop
push
fisttps
pushf
jge
add
jp
or
insb
insl
fsubs
fs
lods
xor
roll
xchg
test
push
adc
mov
fbstp
xchg
lds
les
popl
nop
negb
jge
scas
shll
fstps
inc
sub
xchg
mov
sub
addr16
gs
pop
mov
xchg
scas
add
xor
lds
adc
dec
daa
pop
xor
sbb
ljmp
mov
mov
loopne
lret
push
and
jae
sbb
sbb
mov
in
sbb
ficomps
aam
dec
adc
push
js
push
push
inc
std
sti
shll
or
dec
xchg
mov
data16
adc
jge
xchg
mov
lock
fimull
shrd
imul
and
jnp
sbb
cmpsb
loope
aad
aas
push
add
push
push
dec
push
push
stc
jg
sbbl
mov
jp
cmp
push
dec
jne
cmpl
enter
sub
mov
insb
ret
cld
mov
hlt
in
in
int3
insl
add
jo
push
inc
mov
or
cld
es
sarl
cs
call
orl
cltd
pop
lahf
ds
and
rcrl
mov
push
in
das
addb
rcr
xlat
outsl
jg
adc
mov
mov
outsb
xor
pushf
nop
loope
insb
fcomip
filds
movsl
and
into
movsb
fsts
xor
je
sbb
icebp
pop
mov
inc
mov
cld
push
les
mov
lret
dec
cmpsb
cmc
aas
inc
mov
lds
fiadds
add
lds
adc
aad
movsl
lahf
jmp
mov
pop
bound
mov
inc
adc
push
repnz
shlb
mov
inc
negl
and
jnp
in
lods
sbb
add
jge
cmpsb
and
mov
test
cmpb
and
sbb
pop
adc
and
lcall
nop
sbbl
notb
adc
movsb
mov
mov
outsb
ss
sub
add
in
xchg
repnz
sar
adc
test
xor
arpl
loopne
shll
dec
pop
pushf
aas
jmp
leave
popf
jb
mov
xor
movb
popa
bound
movsl
xlat
repnz
mov
test
jae
mov
imul
outsb
mov
jnp
xchg
jbe
add
mov
mov
mov
rclb
xchg
inc
imul
cltd
insb
js
fldenv
jp
xchg
add
push
loop
mov
nop
or
pop
dec
rorb
add
add
cmp
pop
int
pop
ret
sbb
xchg
hlt
ja
or
push
dec
testl
test
fiaddl
into
fiaddl
fcoml
and
or
cmp
dec
pop
jo
aas
and
imul
out
lock
inc
mov
mov
divl
sbb
jne
sahf
jp
ficomps
int3
fadd
ja
ficomps
in
stc
dec
loope
push
cmp
sub
inc
test
ror
xchg
andb
adc
jmp
cmp
fwait
adc
stc
mov
addr16
mov
cmpsb
sub
mov
outsb
sbb
cmp
repz
sub
mov
push
adc
lret
mov
jno
dec
mov
jle
fcomi
icebp
xchg
jp
jecxz
push
jle
cmp
ljmp
push
jle
sbb
das
adc
addr16
mov
mov
fidivrl
repnz
push
mov
pop
jge
dec
imul
das
jno
cmp
popf
pop
cmp
push
push
addl
cs
pop
dec
push
inc
sarb
mov
int3
das
aaa
dec
jp
xchg
xchg
and
movsb
sarl
lcall
dec
psllw
mov
daa
adc
jp
mov
adc
mov
adc
or
inc
xor
add
fisttps
inc
ret
dec
pop
inc
in
jmp
mov
or
xchg
js
xor
out
xchg
pop
movsl
dec
mov
pop
mov
adc
and
jg
or
mov
andl
pop
scas
mov
and
jbe
out
pusha
in
cmp
in
dec
dec
leave
mov
mov
mov
mov
mov
pusha
inc
or
mov
test
idivl
cmp
out
push
in
ret
dec
add
mov
push
cmp
dec
inc
push
mov
inc
pop
pop
mov
jns
mov
adc
pop
jp
dec
mov
add
xor
fcompl
imulb
jnp
mov
ror
push
andb
pop
push
cmpsb
mov
pop
sbb
push
iret
addr16
push
dec
dec
daa
test
sbb
out
dec
push
mov
cmp
loop
out
enter
daa
lods
in
inc
sbb
pop
cmp
jl
xor
mov
mov
out
inc
popf
cmp
ret
ret
jle
cwtl
cmp
mov
ds
lea
cmp
lret
jmp
push
cmpsb
xor
sti
sti
cmpl
ud2
and
dec
adc
fsts
cmp
cmp
out
jg
dec
mov
repz
push
sbb
sar
lret
mov
pop
ds
cmpsb
in
call
lea
aad
mov
adc
xor
imul
adc
cmp
dec
pop
lret
pushw
mov
jo
sarb
cmp
adc
mov
mov
aaa
xchg
lods
sub
mov
cmp
cld
rcrb
cwtl
lahf
lods
lret
cmpsl
jmp
cmp
movsl
outsb
insb
iret
jbe
xchg
mov
inc
popf
mov
cmp
add
mov
flds
fildll
jge
mov
sub
and
pop
loopne
mov
xchg
ds
mov
test
push
clc
test
fstps
xchg
js
or
aam
outsl
scas
or
or
or
sub
std
lods
push
xchg
or
inc
fwait
cmp
aaa
and
jecxz
jnp
xchg
mov
idivl
hlt
mov
lret
leave
stos
dec
xchg
mov
xlat
inc
sbb
xor
ljmp
lock
push
sub
mov
mov
into
pop
sahf
inc
shlb
dec
mov
dec
js
hlt
adc
xlat
pusha
mov
lea
and
decb
or
cltd
test
mov
cli
sbb
ffreep
pop
call
xchg
les
repz
cmp
add
cmp
enter
and
push
mov
pop
mov
push
and
loopne
ret
jae
pop
outsl
sub
sbb
outsb
xchg
jecxz
cmpsb
out
mov
fmul
dec
mov
idivb
add
aas
cmp
in
daa
xchg
lret
loope
push
stos
cmp
mov
out
push
movsb
cmc
test
orb
call
xor
jns
pop
xchg
fidivl
int3
jecxz
sbb
aaa
outsl
nop
mov
test
mov
sahf
fnstenv
push
or
pop
repnz
stos
mov
push
es
jne
hlt
sarl
dec
mov
mov
xor
in
mov
loop
ljmp
mov
and
subl
test
sbb
xor
and
dec
sub
inc
popf
add
js
arpl
out
scas
data16
hlt
ss
jg
xchg
pushf
out
lret
stos
mov
test
fisttpll
hlt
inc
xchg
fldcw
fdivrs
sbb
pop
adc
add
sbb
cmp
les
push
in
testb
cmc
add
pop
lods
jo
cmpsl
stos
sti
mov
enter
pop
lds
imul
pop
sbb
push
aas
jp
gs
mov
dec
cmp
add
push
xchg
jne
lcall
sarl
sbb
push
mov
xchg
call
in
pop
aaa
int3
pop
xchg
enter
loopne
pop
sub
loopne
data16
adc
mov
cld
cmp
pop
pushf
outsl
and
mov
aaa
std
dec
xchg
lea
xor
xchg
aas
test
in
hlt
xchg
jns
sub
add
add
outsb
cmp
ds
mov
or
enter
sahf
rol
jecxz
mov
outsb
cmp
push
test
stos
in
add
push
outsb
xor
stos
or
pop
pop
stos
imul
pop
inc
fbstp
jge
orb
push
in
das
push
mov
frstor
push
cmp
fistl
scas
loopne
mov
sbb
insb
scas
arpl
sarl
mov
push
cwtl
xchg
insb
cwtl
std
mov
and
add
negb
mov
scas
lret
jne
sub
data16
mov
xor
mov
fcomps
inc
inc
stc
decb
jno
adc
repz
xchg
fs
imul
dec
es
adc
adc
xor
xchg
in
ss
rorl
out
jae
insb
pop
push
enter
inc
in
in
xor
shrl
jle
inc
jo
xor
in
sbb
cld
and
rclb
fwait
inc
jno
rol
scas
data16
add
push
movsb
jae
idivb
or
addr16
sub
pop
cmp
xlat
fisttpl
ficoms
xchg
movsl
enter
xchg
cwtl
insl
mov
arpl
push
fnsave
xchg
cmp
ret
or
cwtl
in
push
popaw
mov
ja
xlat
cmpsl
and
in
loope
mov
loop
fstps
loop
sbb
icebp
mov
mov
mov
in
outsb
adc
mov
nop
cmp
mov
jne
adc
ds
add
fistpll
stc
repnz
rorb
pop
fistpl
push
pop
push
dec
jge
loope
fdivl
js
or
push
cmc
xor
mov
lret
xor
arpl
adc
mov
icebp
in
out
insb
inc
rsqrtps
xchg
pop
or
outsb
notb
repnz
shlb
rol
mov
or
adc
daa
in
mov
cmp
shll
in
test
push
outsb
lret
jp
stos
pusha
cs
pop
inc
xchg
lds
aam
out
inc
int
hlt
out
aam
shlb
lcall
insl
fisubl
mov
scas
cmp
aas
dec
mov
mov
and
bound
arpl
mov
cli
add
jno
jl
push
pop
pop
cwtl
push
ja
incl
in
imul
adc
cltd
and
mov
jle
lcall
out
dec
dec
fsubrl
xor
add
mov
inc
fidivl
jge
addb
repnz
pop
sbb
imul
shl
mov
cmp
lahf
pop
and
cmp
cli
xor
mov
in
incl
vmovups
cltd
sbb
jmp
clc
pop
mov
cltd
outsl
mov
fisttps
adc
sbb
and
fiadds
fildl
xchg
adc
jecxz
sarb
daa
pop
jl
ret
cmp
inc
jnp
ror
inc
mov
mov
add
sbb
dec
imul
sub
mov
or
adc
add
and
hlt
and
xlat
mov
pusha
mov
divl
cmpsb
xchg
scas
mov
xchg
enter
sbbb
fists
add
add
mov
ds
mov
test
in
ja
and
fcom
add
adc
ficoms
pop
sahf
aad
xor
test
dec
data16
mov
subb
ret
or
sbb
loop
sbb
or
mov
and
pop
sahf
xchg
adc
sar
cmp
fs
fucomi
in
mov
inc
lret
and
test
dec
ss
push
mov
outsl
ret
imul
inc
dec
add
ret
jae
cmp
dec
dec
sub
test
pusha
adc
xor
add
les
lds
adc
repnz
mov
cmp
hlt
dec
lods
push
xchg
or
in
adc
inc
jmp
lret
sbb
aam
mov
fildl
in
push
xchg
dec
out
push
shll
sub
out
loop
xor
ljmp
jo
leave
mov
mov
ret
xchg
ret
sub
pop
push
int
mov
sbb
test
adc
aaa
sbb
dec
push
fs
mov
jge
and
adc
fstl
mov
inc
pop
fcmovnu
das
adc
xchg
fsubs
int3
mov
outsl
imul
icebp
cmp
jmp
jo
nop
push
mov
adc
xchg
cli
aad
push
stos
inc
lods
mov
pop
adc
xchg
xor
lret
daa
sub
loop
adc
sub
movsb
sbb
pusha
push
jnp
mov
dec
out
les
or
out
rcrb
test
ja,pn
test
lock
ds
movnti
inc
inc
pop
xlat
popf
xlat
inc
repnz
mov
and
outsb
rcrl
jge
cmpsb
adc
inc
cmpsb
jo
cmp
cmp
jmp
jb
sti
jmp
xorl
mov
iret
arpl
sbb
push
aas
jae
jns
push
ljmp
pushf
mov
push
dec
cmp
pop
icebp
fbstp
lock
push
test
mov
add
push
ss
imul
mov
and
das
movsl
or
pusha
push
movsl
sbb
mov
adc
popf
pop
cmp
mov
lcall
add
jo
loope
icebp
inc
std
or
sbb
push
sbb
xchg
sub
mov
sub
outsl
pushf
jecxz
xchg
or
imul
aad
push
jp
aas
negl
lahf
movsb
jbe
mov
or
aaa
push
xchg
sbb
xchg
mov
or
sti
mov
jp
pusha
xor
mov
loop
cs
pop
mov
sbb
mov
mov
inc
daa
pop
or
xchg
dec
clc
xlat
pop
xchg
ds
out
ror
adc
jno
outsb
sub
jbe
mov
cmp
sbb
fdivl
inc
dec
or
in
xchg
and
fmul
or
shl
cmp
dec
sbb
cwtl
imul
sbb
je
push
outsl
sub
bound
pop
mov
std
xchg
xor
int
mov
clc
dec
mov
scas
mov
pushf
jmp
jp
add
add
repnz
xor
ret
xchg
outsl
js
mov
fcmovbe
inc
les
fldcw
jns
mov
cmp
mov
sbb
xchg
or
jae
xor
bound
mov
imul
xchg
fs
push
push
pop
scas
push
arpl
ficoms
not
push
lret
lea
add
lahf
pop
je
pop
pop
mov
test
sbbb
push
in
out
in
cltd
mov
fisttpl
scas
aad
stos
loope
jns
xchg
jl
push
loopne
repz
loop
icebp
in
in
cld
jecxz
mov
movsb
inc
test
dec
ret
mov
ret
lea
into
fstl
pusha
mov
jo
and
sub
gs
repnz
xchg
or
pop
or
jno
cltd
mov
jo
cmp
mov
addb
inc
cld
inc
jg
push
xorb
cmp
sbb
les
xchg
out
mov
mov
inc
mov
bt
lods
xchg
mov
jg
xchg
push
add
sbb
add
jb
icebp
pop
rclb
out
push
jno
add
loopne
test
jo
push
and
pop
mov
fcoms
add
push
mov
push
cltd
mov
mov
mov
ds
add
push
cmp
insb
andb
out
int3
mov
cmp
out
inc
movsb
stos
push
push
and
pop
sbb
bound
push
insl
adc
pop
stc
xchg
lock
xor
decl
ss
cli
adc
rolb
and
jl
rolb
add
and
pop
cld
in
inc
fstpl
jle
adc
dec
mov
dec
in
inc
mov
repnz
imul
xchg
inc
sub
aam
out
loopne
imul
cmpb
pop
push
scas
fnstenv
sbb
cld
dec
mov
das
mov
lcall
inc
add
popf
mov
dec
fcoms
mov
rorb
jns
lahf
aad
in
dec
sti
xlat
mov
jnp
and
stc
aaa
sbb
sbb
dec
fmul
and
mov
flds
sub
mov
mov
shll
xchg
add
loope
add
adc
les
mov
cmpb
enter
adc
lea
pop
dec
push
mov
or
mov
mov
sahf
xor
dec
imulb
test
mov
jge
sahf
mov
xchg
mov
adcl
jg
lods
imul
adc
jecxz
push
xchg
scas
push
test
add
mov
sysexit
rorl
cltd
cmpsl
adc
out
sti
mov
into
ljmp
push
cltd
pushf
mov
scas
mov
sub
sub
ja
pop
scas
ljmp
or
adc
mov
fcomp
jo
mov
adc
inc
mov
rcrb
insb
mov
mov
mov
sub
fdivrs
stc
loopne
loop
jae
xchg
nop
andl
loopne
sub
scas
or
lock
lret
xchg
hlt
jbe
add
pushf
sbb
dec
jp
mov
and
xor
iret
sti
adc
shlb
popf
cld
mov
cltd
cmpsl
aad
and
xor
xchg
inc
xor
mov
mov
insb
jmp
add
pushf
push
jb
rcll
rcrb
lret
xor
jl
mov
clc
decb
into
and
int
daa
jl,pn
add
inc
int3
xchg
and
push
jp
lods
dec
sbb
adc
jp
stc
mov
imul
adc
mov
imul
aam
and
inc
in
stos
dec
stos
test
inc
xor
repz
push
lods
pop
mov
in
aam
stos
jle
shll
xor
adc
imul
mov
roll
adc
int
fs
jbe
jns
dec
push
movsl
add
iret
mov
shll
call
aas
and
or
mov
dec
cmp
cmp
sub
call
xchg
push
movsb
lods
dec
in
or
dec
dec
inc
popl
call
push
jo
push
out
dec
xor
push
mov
rol
jne
adc
arpl
xor
jg
xchg
es
out
aam
in
incl
aam
ja
arpl
jne
and
outsl
xor
imul
dec
and
fs
inc
fadd
fwait
cli
inc
mov
cli
xchg
ret
shll
sbb
or
add
xchg
cltd
add
mov
fs
scas
fdivs
test
adc
mov
adc
pop
fwait
mov
das
popf
cmp
test
je
outsl
mov
fcoms
das
lock
ja
pop
mov
mov
or
xchg
lea
sbb
lret
jge
mov
ja
pop
fadds
mov
xchg
test
cmp
test
xor
stc
fiaddl
cmpsl
roll
cli
imul
mov
movsb
stc
pop
insl
mov
mov
loop
or
insb
jne
or
mov
inc
out
xorl
inc
push
xchg
cs
aaa
lahf
sbb
daa
leave
scas
outsl
mov
push
mov
and
adc
jns
dec
xor
mov
add
sub
or
ja
pop
add
leave
stos
fstpl
push
sub
popa
adc
mov
movsl
mov
sub
mov
push
mov
stos
xor
mov
and
out
lods
ficompl
push
mov
adc
icebp
mov
dec
cmp
fs
cli
pop
lcall
sub
rclb
lcall
pop
cmp
and
and
ss
pushl
in
pop
pop
aad
jecxz
cmp
fsubl
ret
movsb
sbb
hlt
xor
das
xchg
movsb
xor
out
sbb
inc
add
mov
sub
add
int
or
aam
inc
loopne
pop
adc
pop
lds
es
sub
in
add
ljmp
popf
in
daa
inc
sbb
push
popf
mov
sub
and
xchg
test
rorb
xor
pop
pop
movsb
ficoml
and
aas
dec
push
outsl
mov
rcll
mov
cwtl
mov
push
mov
sub
or
int3
sub
pop
mov
xlat
xchg
or
imul
add
lock
xlat
xchg
inc
loopne
mov
jb,pt
addl
addr16
jmp
mov
les
sbb
mov
ja
adc
jbe
push
pop
mov
leave
nop
inc
add
push
imul
les
cmpsb
inc
test
nop
movsb
push
mov
jmp
mov
cmp
adc
cmp
lock
incb
jno
sti
ja
std
mov
add
dec
repz
out
xor
imul
or
mov
cmp
out
stos
into
push
inc
stos
dec
leave
add
mov
lds
movsl
int3
test
popa
fs
sub
xor
and
aam
mov
pop
inc
in
dec
sub
lcall
mov
and
lret
lret
xchg
lahf
fsubp
out
lret
xorl
out
jb
adc
data16
inc
push
or
push
mov
popa
shr
mov
xor
enter
loope
dec
push
je
sbb
push
gs
int3
mov
cmpsb
bound
mov
lea
sbb
sub
repz
dec
and
int
repz
inc
daa
addl
push
ficoml
std
int
or
outsb
ret
dec
mov
test
adc
cmp
dec
faddl
gs
or
rcr
xlat
inc
mov
out
dec
popf
mov
test
mov
inc
inc
dec
cld
xor
rol
iret
mov
fsubl
and
fcmovb
scas
outsl
adc
repz
sbb
xchg
adc
and
mov
cwtl
dec
jb
mov
mov
arpl
lods
xchg
out
cmp
dec
scas
or
adcb
cmp
xchg
mov
jle
pop
loopne
loope
pop
push
int
xchg
dec
cmpsb
jp
inc
sub
outsl
or
mov
shr
jb
push
shrl
cli
es
sub
adc
cmp
cmp
add
lock
out
int
cld
loopne
cmpsb
cmpsl
adc
mov
fmull
lods
nop
push
lds
outsb
ljmp
rolb
mov
inc
pop
ret
orb
popf
sbb
mov
mov
push
and
lret
mov
lods
inc
fsubrl
push
sarb
or
jmp
adc
sbbb
dec
xchg
lea
aam
dec
das
jmp
ss
incb
jo
and
daa
and
je
mov
sti
clc
jecxz
ret
inc
fsubs
mov
xor
lock
add
pop
pop
push
movsl
xor
mov
enter
lock
mov
jae
xchg
adc
les
xor
push
das
lret
aad
mov
xchg
jae
cmc
adc
test
movsb
nop
mov
stos
in
cmpsl
sbb
pop
xlat
or
in
loope
popf
xor
xlat
sti
orl
daa
sbb
cmp
insb
movsl
mov
mov
mov
xor
push
loop
xor
aad
out
popf
scas
inc
sbbl
and
pop
ss
xchg
jnp
sub
jnp
jnp
or
jg
or
faddl
inc
or
and
or
xor
or
or
dec
push
insl
cltd
fwait
pushaw
stos
xlat
sbb
jno
jge
divb
das
call
cmp
in
xchg
pop
aad
sbb
jbe
or
jb
mov
aas
test
lahf
mov
std
or
mov
lret
cmp
sbb
rep
xchg
sahf
cmp
jle
push
int3
pop
cmp
imulb
jbe,pn
xor
addr16
ret
dec
push
and
call
and
negb
lahf
movsl
test
pop
xlat
in
fwait
cmp
insl
stc
mov
pop
addr16
mov
sbb
mov
jno
andl
push
test
fs
ret
add
sub
sub
sub
shr
mov
outsl
arpl
inc
mov
ss
mov
sub
push
mov
sub
outsb
inc
pop
pushf
out
gs
outsl
cld
push
enter
and
rcrb
inc
cmc
js
dec
push
sbb
sbb
mov
xchg
push
jl
sahf
xchg
jbe
out
push
adc
sbb
out
repz
jb
xor
mov
pop
dec
jo
stos
bound
add
cmp
ds
in
xchg
cmp
in
sti
aaa
lock
das
fisubs
push
arpl
aad
test
int3
stos
mov
scas
add
sti
outsl
lock
mov
enter
bound
ret
cmp
add
jmp
add
sbb
jge
inc
or
pop
aad
mov
loop
pop
fmull
xlat
xor
mov
mov
loopne
cmpsl
addl
push
mov
xchg
int3
insb
mov
jo
xor
add
adc
mov
cmp
fldenv
adc
jmp
push
pop
add
shrd
or
aas
mov
roll
xchg
xor
pop
movsl
and
fsub
pop
pop
mov
sbb
inc
or
lods
add
add
pop
push
cmp
loop
push
fcmovne
and
and
pushf
or
adc
insb
pop
jecxz
cmp
cmc
cmp
pop
sub
out
es
jnp
les
popf
xor
sarl
pop
dec
je
adcl
dec
mov
xor
inc
push
out
ljmp
lds
xor
jb
mov
add
cwtl
je
jb
sbb
sbb
loopne
pop
into
pop
test
push
dec
clc
idivb
pop
sti
sub
dec
inc
out
jp
call
cmp
ret
cs
insl
mov
cmpl
xchg
sub
mov
mov
aam
jmp
ret
jnp
adc
pop
dec
add
mov
push
pop
addr16
shl
nop
dec
jle
movsb
ljmp
out
loopne
dec
std
out
in
jmp
lock
mov
dec
or
inc
shll
cmp
xor
call
mov
fxch
jmp
jns
fstpt
pop
sub
insb
nop
out
inc
clc
test
mov
arpl
sbb
das
mov
push
add
add
inc
jae
xor
rcll
push
mov
pop
insb
lea
ds
daa
loopne
xor
fsub
stos
sub
push
in
sbb
stc
mov
subl
loop
add
mov
movsb
xchg
sbb
jle
push
mov
pusha
sub
mov
insb
clc
pop
sbbl
sar
ret
jae
push
pushf
mov
jl
pmulhw
sub
adc
push
jecxz
jo
dec
pushf
and
add
into
fwait
mov
cmpsl
in
leave
cmp
push
inc
call
aam
aad
xchg
push
inc
cs
sub
cmp
mov
jmp
lahf
fnsave
sub
inc
push
xor
in
jge
repz
dec
popf
dec
push
aas
xor
sub
decb
adc
and
jo
mov
pop
flds
sub
xchg
xchg
mov
xor
stc
xchg
dec
pop
mov
adc
add
push
ss
mov
pop
bound
fwait
clc
fmuls
hlt
and
dec
push
add
xlat
aad
push
sbb
jge
dec
ja
jle
fldl
inc
xchg
push
ret
xchg
lods
mov
stc
jg
rolb
xor
or
pop
mov
xchg
lock
mov
les
mov
xchg
adc
or
inc
pusha
loop
popf
jb
rorl
rolb
fisttpl
les
inc
xlat
mov
xchg
sarl
shll
outsl
xor
add
mov
aas
mov
sbb
scas
imul
cmpsb
out
sarl
jae
sbb
or
xchg
or
popa
xorl
mov
inc
fcoms
aad
or
scas
stc
idivb
jnp
fcmovnu
ret
rcr
pop
jg
lcall
sbb
and
mov
mov
popf
daa
xor
jg,pn
jle
ud2
inc
mov
stos
inc
mov
shll
out
pop
pusha
xor
aam
ds
repz
dec
pop
mov
sub
push
sub
lock
out
and
xor
aas
sbb
fcoms
lods
fildl
mov
xor
stos
sbb
add
push
push
mov
pop
dec
sub
lcall
pop
scas
aam
ret
std
and
cld
call
jle
push
movsl
lods
sbb
jmp
adc
clc
mov
and
mov
jbe
and
pop
mov
repz
into
in
pop
mov
test
sub
cmpsl
sub
jmp
push
dec
jbe
test
mov
repz
and
mov
mov
mov
in
mov
jle
dec
jbe
inc
lea
jnp
dec
jae
jmp
inc
and
xchg
xchg
adc
inc
js
daa
lea
ljmp
push
push
out
out
mov
mov
or
jo
add
in
push
pop
repnz
push
or
dec
and
dec
orb
cld
fldt
mov
ficoms
push
mov
rorb
adc
push
rcr
lea
or
inc
adc
pop
mov
insb
mov
sub
jp
leave
scas
or
insb
sub
pop
pop
lret
shufps
sub
pushf
test
jbe
cmp
ret
aas
jp
or
inc
inc
xchg
and
js
pop
mov
aad
pop
sti
ds
std
les
pop
std
push
je
lods
aaa
xchg
mov
push
jmp
lds
adc
xchg
sarb
jbe
xor
das
jo
push
or
out
add
mov
sbb
push
in
and
and
xchg
loope
jae,pt
out
mov
pop
sahf
stos
cmp
into
or
pusha
and
cmp
xor
lds
inc
and
dec
inc
popa
fadds
push
dec
cld
fwait
lds
sbb
lahf
fnstcw
fistl
sbb
movsl
icebp
xor
test
sbbl
pop
jb
iret
mov
and
jno
and
sbb
mov
dec
aas
mov
lods
scas
dec
mov
adc
stc
aas
add
inc
pop
fs
dec
lods
mov
jp
push
fcoms
fs
in
pop
mov
xor
loope
popf
arpl
push
inc
cmpsl
pop
adc
push
add
mov
inc
inc
sbb
sbb
ljmp
gs
sahf
repz
cs
fwait
pusha
repnz
scas
xchg
cmc
cld
and
in
int3
dec
lcall
ret
enter
cmp
dec
inc
lret
lock
ja
dec
fwait
daa
sbb
push
and
mov
loop
cs
mov
lahf
ja
ret
jae
movsb
inc
lcall
lahf
andl
jmp
mov
add
loop
cld
insl
ret
mov
xchg
cmp
out
xor
sbb
pop
orl
push
mov
adc
jg
add
ja
sbb
fnstenv
add
in
fiadds
sub
pop
addb
cmp
jmp
xchg
movsb
sahf
inc
sbb
cli
scas
das
push
and
add
mov
push
ss
adc
std
mov
mov
movsb
sbbl
call
jo
sub
mov
cmp
adc
hlt
ljmp
jns
stos
xchg
lds
stos
add
fcompp
adc
add
push
int3
xchg
mov
repz
int
gs
divb
mov
or
cmpl
nop
xor
daa
iret
cmp
sub
mov
scas
cmpsb
call
mov
mov
fimull
ja
sub
test
inc
dec
loope
xor
xchg
call
mov
mov
fmull
ja
pop
int3
sbb
out
inc
push
popf
mov
mov
dec
aam
cmpsl
or
mov
jb
dec
roll
andl
jmp
xor
or
jb
cmp
mov
push
sbb
xchg
sbb
jle
in
sti
in
xlat
mov
xchg
jo
cmp
sti
jne
fcompl
in
push
jecxz
push
mov
pop
out
in
push
pop
test
mov
inc
aaa
inc
push
mov
jmp
mov
push
push
lea
xor
ret
popf
sbb
shrl
pop
xchg
bound
int3
xchg
scas
push
sbb
insl
fdivrl
or
mov
jae
dec
xchg
mov
jae
int
push
ja
mov
loopne
and
mov
mov
iret
pop
call
push
sarl
fsubrp
sbb
and
sarb
mov
negl
push
push
ja
jl
pop
xor
sbb
xchg
sti
or
inc
jnp
pop
xchg
xor
js
pop
push
dec
scas
add
cwtl
pop
sbb
sub
pop
adc
pop
shlb
pop
gs
add
sbb
sub
mov
mov
pop
jb
mov
jne
lods
test
cltd
pusha
insb
sarl
jl
inc
icebp
pop
ljmp
fs
addr16
enter
jnp
lods
add
int
push
add
cmc
or
aam
in
out
test
lahf
stos
push
xor
sub
pop
hlt
sahf
std
fldcw
inc
mov
xchg
imul
dec
dec
adc
or
cmp
pop
sbb
cmp
fisttps
les
sub
mov
fs
push
jecxz
cltd
xor
inc
fidivrs
sti
loope
cmp
sbb
test
loope
movsl
in
and
lahf
push
mov
or
arpl
sbb
in
add
jmp
and
xor
xchg
jae
jp
imul
movsb
inc
and
hlt
or
ret
mov
and
lock
xchg
ret
xchg
mov
dec
repz
test
mov
pushf
sar
mov
mov
push
jge
clc
clc
xor
push
scas
orb
jns
insb
sti
or
pushf
cmp
mov
jl
scas
push
pop
adcb
or
push
xchg
iret
mov
movaps
incb
aaa
fwait
test
push
jne
test
xor
lods
xlat
out
dec
cmp
pop
cwtl
xor
jno
jne
lahf
xchg
push
mov
jg
jo
mov
lret
test
mov
pop
ds
fcoms
cld
jge
cs
out
jno
mov
sti
dec
leave
sbb
lret
mov
and
pop
xchg
call
cmpsl
or
lret
sbb
es
dec
repnz
push
aaa
leave
push
or
or
setl
dec
outsl
movsw
data16
mov
call
or
mov
and
mov
in
cmpsb
ss
sbb
lods
jge
nop
cmp
jo
insb
insl
jge
xchg
ja
dec
jmp
mov
cs
insb
outsb
stc
into
addr16
push
pushf
outsb
in
inc
jmp
das
xchg
sbb
xor
push
or
call
loop
lret
mov
icebp
xor
pop
subb
cmp
fwait
mov
test
jg
icebp
mov
das
daa
dec
xchg
mov
push
jge
mov
or
test
jnp
mov
pop
jle
loop
scas
cmp
cmp
lahf
xchg
add
in
push
pop
stos
push
jmp
int3
addb
add
aad
das
lret
and
push
out
les
out
cld
mov
inc
shrb
in
jnp
mov
into
push
dec
xor
cmpsb
pop
call
jge
mov
loope
jmp
mov
les
loope
inc
sahf
aas
push
int
inc
cmp
mov
or
push
insl
and
inc
inc
jnp
imul
icebp
mov
sbb
rorb
clc
int
fistpl
fucom
rol
adc
andnps
and
dec
cli
or
in
sub
sbb
mov
jp
mov
movsl
je
mov
pop
push
lret
js
sbb
mov
test
dec
mov
inc
mov
add
sub
in
sbb
jo,pn
jl
ret
and
and
outsl
or
shrl
sub
mov
dec
sbb
pushl
adc
mov
movsb
stos
es
sub
xor
and
mov
clc
gs
mov
sub
adc
inc
mov
and
mov
dec
idivl
sub
jb
iret
and
hlt
adc
add
lret
roll
cmp
test
loop
push
pop
inc
fdivs
stc
or
repnz
ja
pusha
loope
push
clc
and
loope
xor
mov
sti
into
and
sub
mov
jo
je
mov
and
scas
rcrl
testb
mov
and
push
repnz
test
and
cli
mov
int
enter
push
sahf
fsubs
jne
jmp
add
jo
push
fs
push
dec
cli
shll
mov
mov
je
pop
or
popf
nop
iret
imul
int
jmp
sbb
jl
hlt
fcomps
inc
adc
hlt
pop
jne
xlat
jne,pn
je
inc
lods
mov
xor
mov
sub
rcll
jmp
add
xor
repnz
inc
fcomi
sbb
and
xchg
push
sti
cld
mov
icebp
lods
je
lret
jno
adc
mov
xchg
sti
and
hlt
aad
inc
mov
xor
xchg
imul
pushf
dec
inc
aam
in
xchg
dec
mov
lock
xor
and
xchg
rcll
outsl
out
mov
dec
jp
mov
faddl
roll
mov
cmpb
push
out
ret
cmp
push
jge
xor
or
jns
hlt
jae
fbstp
jnp
jo
xlat
adc
push
int3
pop
dec
fistpl
ds
fists
cmpsl
popf
push
mov
pop
es
jecxz
jne
int
dec
mov
dec
mov
sbb
in
shl
mov
and
nop
mov
push
cmp
rorb
sub
jns
loopne
mov
lcall
call
jle
loopne
imul
enter
dec
cwtl
scas
mov
dec
or
inc
or
jae
push
out
test
ds
pop
dec
xchg
jmp
or
mulb
lods
jge
out
mov
in
push
push
cmp
mov
mov
inc
inc
pop
icebp
loopne
mov
push
adc
pusha
push
xchg
mov
popf
xchg
in
lcall
mov
rolb
test
loop
or
inc
cs
jnp
iret
lea
cltd
xor
insl
aaa
sub
push
dec
fistps
popa
jnp
jecxz
mov
dec
fwait
sarl
mov
adc
cmp
int3
cmc
insb
pop
movsb
sub
and
aaa
mov
test
push
loop
mov
insl
imul
mov
sub
cld
scas
xchg
pop
jbe
jg
and
cmpl
add
jb
add
sbb
sbbl
xor
cld
sub
and
xor
push
adc
mov
add
pop
movsb
js
test
daa
dec
inc
in
push
adc
fiadds
adc
jmp
pop
jne
psrld
repnz
or
imul
lahf
sub
jnp
push
xchg
or
jae
mov
push
mov
push
pop
jl
or
cmp
jmp
inc
loope
jl
mov
ja
in
shlb
xor
fwait
push
add
or
shl
jae
dec
pop
insb
ds
shrl
mov
nop
icebp
mov
daa
mov
shll
aaa
inc
scas
and
in
fdivrl
repz
mov
jl
nop
push
adc
ret
xchg
sbb
fdivr
adc
jmp
and
cmp
aad
loope
sbb
rol
loopne
jecxz
mov
fs
mov
sahf
mov
movsb
push
scas
sub
insb
adc
lods
rcl
xchg
shrb
sub
ret
jp
ljmp
xchg
sub
xchg
pop
push
pop
pop
das
aad
dec
fcomip
xchg
test
cmpsl
shrl
cltd
mov
in
sbb
adc
pop
dec
sbb
sar
mov
mov
sahf
les
dec
rcrb
shl
pop
xchg
or
lods
and
ss
pusha
lea
mov
pop
dec
fucomp
pop
or
jl
jo
outsb
jmp
add
stc
push
into
das
fs
mov
and
push
call
mov
mov
pushf
jbe
jo
dec
cwtl
xchg
in
or
jl
outsl
lods
mov
jbe
inc
push
rcrb
push
sub
in
push
aad
jecxz
inc
inc
mov
ds
bound
aad
mov
xor
fsubrl
mov
inc
outsl
arpl
jo
jne
cmc
add
cmpsb
jecxz
cmpsb
push
add
mov
mov
sub
add
or
mov
sbb
rcrl
mov
push
in
out
lock
arpl
push
mov
nop
mov
aas
fistps
fcomps
push
cld
cmpsb
cltd
push
and
pusha
push
repz
sub
dec
cmc
cmp
add
leave
mov
xchg
out
ret
push
jmp
and
push
xchg
stos
jnp
aad
and
adc
lcall
mov
sub
xchg
push
inc
jmp
xchg
push
dec
repnz
jl
ret
in
and
jp
sarb
cmp
push
mov
or
insl
repz
adc
mov
sub
nop
push
imul
dec
dec
js
mov
fnstsw
enter
xor
data16
out
add
xor
bound
add
jmp
lea
mov
outsb
out
or
ret
push
add
lret
push
jmp
jb
push
imul
es
loope
push
and
loop
lods
test
jo
testb
imul
fsubr
mov
dec
testl
mov
sarb
mul
loopne
in
jl
loope
scas
pop
mov
stos
out
fnsave
xchg
cltd
pop
leave
cmp
adc
dec
dec
adc
dec
divb
jb
sub
adc
mov
dec
or
cmc
jge
sbb
push
push
push
sub
mov
lods
aaa
jmp
cmpsl
int3
mov
xchg
stc
imul
pop
mov
pop
lods
dec
ja
stos
sahf
pop
repnz
dec
and
les
push
int3
push
shl
push
mov
jl
add
xchg
mov
int
leave
push
fadd
lods
arpl
mov
add
cmp
or
in
pop
sub
in
dec
pop
int3
push
test
xor
pop
sbb
push
mov
cs
lds
loopne
fsts
aaa
rclb
mov
int
stos
pop
rorb
jne
lods
stc
fwait
scas
js
stos
mov
adc
filds
xor
in
sbb
idivb
outsl
ljmp
or
dec
push
or
xchg
mov
push
xchg
in
in
or
ficompl
mov
adc
adc
mov
lods
mov
adcb
and
push
cmpsb
and
pop
fwait
inc
sub
aaa
adc
je
xor
add
pop
push
xor
or
in
call
jb
popa
ljmp
mov
mov
xchg
mov
repz
jno
xor
in
mov
jns
jae
mov
or
imulb
pop
sbb
fmuls
pusha
jl
jg
ljmp
fdivs
imul
movsl
stos
orl
cmp
mov
fmuls
dec
sarb
imul
add
cmc
icebp
shrb
jg
enter
adc
adc
outsl
push
pop
js
fidivl
push
xlat
sub
repz
popa
push
sub
xchg
fistps
hlt
insb
mov
movsl
rol
xchg
pop
call
mov
jb
es
fnsave
insb
jge
ljmp
popa
push
jge
sbb
ja
mov
sub
xor
xchg
xor
jne
dec
fwait
or
lods
loope
or
mov
xchg
mov
inc
ljmp
dec
add
sub
push
icebp
lds
xchg
xchg
repnz
adc
add
orb
cmp
popf
mov
ret
leave
push
fnstsw
inc
scas
jl
shll
cmp
adc
sti
leave
dec
xchg
xchg
pop
filds
lds
lods
push
mov
jle
lds
push
aaa
jecxz
xor
test
pop
loope
repnz
mov
jb
inc
sub
adc
lret
push
and
push
mov
in
jmp
inc
fstpt
loopne
add
cmp
addr16
shll
rcrb
pop
aad
or
inc
add
add
xor
fs
loop
dec
je
adc
jl
xchg
mov
jl
mov
les
inc
in
dec
jae
imul
popf
int
mov
shrb
outsb
in
loope
xchg
pop
mov
sahf
pop
mov
cmp
inc
add
sahf
jo
in
sbb
mov
adc
repz
out
pop
dec
xchg
clc
mov
add
sub
cld
pop
test
cld
clc
adc
jle
pop
push
sbb
out
pop
xchg
out
dec
cld
sbb
sub
rcl
cli
adc
push
js
jns
or
push
ret
jnp
jnp
fisubs
fcomps
sti
pushf
mov
dec
xchg
and
filds
divl
cwtl
fmull
sbb
neg
add
inc
loop
push
and
lahf
inc
aad
cmp
push
mov
cmp
xor
out
jbe
or
stos
loopne
sahf
idiv
sbb
xchg
lods
and
or
addl
cltd
vshufps
and
sbb
sbb
out
addr16
inc
ftst
test
jae
pop
or
sbb
imul
push
sub
mov
adc
sahf
sbb
inc
dec
mov
fiaddl
lea
iret
inc
mov
fs
jbe
mov
and
xor
mulb
push
pop
das
push
mov
sub
outsb
cmp
push
add
ljmp
ss
inc
rcll
and
push
cmp
pop
sbb
sbb
push
or
jmp
divb
std
cmp
dec
mov
jmp
mov
fmull
fs
pop
lcall
mov
icebp
adc
cwtl
xchg
aas
dec
inc
dec
daa
lock
sub
lea
jb
or
outsb
aad
fistps
fs
in
mov
sub
gs
bound
mov
repnz
lahf
add
inc
xchg
outsl
out
int
push
scas
add
loope
mov
mov
ret
sarb
mov
out
outsb
push
jbe
jns
mov
mov
imul
movsb
insl
mov
andb
mov
dec
je
rolb
popa
ljmp
into
bound
hlt
iret
enter
mov
add
mov
sbb
iret
out
adc
addr16
sub
pop
out
in
fcomp
lcall
mov
mov
mov
jge
jno
rorl
dec
push
mov
int3
push
fs
add
and
pop
nop
xor
sahf
push
adc
jmp
xchg
andb
insl
fists
mov
inc
outsb
scas
mov
ret
or
sub
loope
jb
shl
jle
dec
jae
out
lods
mov
sub
inc
sbb
mov
sub
mov
sbb
decb
rcll
ljmp
jp
jl
je
loope
rcrb
fdivrs
xchg
cmp
loop
ljmp
insb
sti
fld
outsl
adc
sarl
lods
add
mov
out
in
mov
cmpsl
sub
jp
mov
pop
repz
adc
mov
jnp
in
das
movsl
push
pop
fimull
mov
sbb
call
fcoml
cmp
movsl
jge
mov
mov
mov
and
ljmp
fcoml
cmpsl
std
mov
insb
mov
cmp
cltd
rclb
lahf
in
jg
std
jne
lahf
insb
xchg
fldl
psubw
jae
mov
js
or
rclb
rorl
push
mov
mov
jg
faddl
xor
add
mov
add
xchg
bound
mov
xlat
repz
xor
insb
popa
aad
sbb
movsl
cmpb
mov
loope
xlat
or
add
iret
imul
adc
dec
jecxz
leave
lret
inc
repz
outsb
sar
mov
sub
or
jno
push
push
gs
loop
rcll
inc
push
call
das
add
insb
mov
push
xchg
xchg
loopne
call
ret
push
jmp
out
inc
inc
sbb
mov
clc
inc
aaa
sti
jb
cmp
sub
int
xor
dec
push
into
mov
add
jne
pop
shlb
out
sbb
adc
in
jle
addr16
push
cltd
xchg
inc
and
push
xchg
not
cmp
dec
mov
cmp
adc
enter
add
mov
enter
int
out
test
std
rorb
shll
pop
hlt
movsl
ficoms
lds
outsl
pop
lds
scas
push
std
scas
and
dec
loop
leave
bound
ret
in
xor
cmp
mov
loope
xchg
mov
jmp
xor
cmc
stc
jnp
xchg
movsb
jg
aad
pop
xor
in
pop
leave
ja
dec
gs
shr
in
pop
ret
out
lret
mulb
or
lcall
bound
daa
insb
jmp
pop
fnstsw
push
xchg
ret
push
sbb
push
out
dec
sbb
call
mov
cmpsl
dec
push
jle
pxor
repnz
jecxz
in
test
sbb
mov
das
nop
popa
sbb
pop
lret
and
or
shr
loop
stos
and
movsb
push
mov
dec
cltd
fcmovnu
mov
cmp
cltd
cmp
mov
imul
cmpsb
sbb
inc
mov
je
inc
out
pop
cmp
outsl
cmp
xor
jp
je
sbb
and
loopne
and
cmp
pop
inc
push
stc
add
xlat
cmpsb
pop
xchg
pop
xor
out
mov
sub
out
int
lret
jns
ficoms
fwait
add
sub
adc
test
xchg
scas
scas
fstpl
gs
call
xor
inc
ljmp
dec
mov
imul
les
mov
adc
das
cltd
out
int3
mov
adc
aaa
imul
mov
jns
xchg
adc
sti
mov
mov
dec
pop
mov
shl
pop
cmpsl
and
cld
cmp
cmp
cmp
dec
mov
lods
mov
dec
jb
loopne
push
mov
shr
fistpl
iret
or
flds
lods
cld
jp
testl
sbb
xchg
adc
subl
icebp
xor
pop
dec
test
push
mov
in
aas
xor
jp
jg
adc
fs
sbbb
sbb
push
xchg
fnstcw
mov
xor
icebp
loopne
mov
cld
sahf
frstor
add
jno
xor
addr16
das
and
jle
mov
stos
adc
and
or
xchg
insl
push
in
lret
fld1
negl
imul
sub
inc
and
adc
mov
mov
js
inc
das
xor
je
les
xchg
add
pop
jae
pushf
dec
sub
sbb
dec
or
jp
ficompl
cwtl
inc
fimull
out
daa
push
roll
inc
loope
aaa
dec
add
pop
out
xchg
push
out
arpl
pop
je
addr16
imulb
decl
lods
scas
cltd
ja
jne
rol
call
stos
or
cmp
dec
ret
inc
scas
add
lahf
ret
xchg
aad
inc
pop
shrb
dec
mov
imul
mov
jne
lods
pop
rcrl
orb
xchg
loope
sbb
sub
or
sarb
int
push
cmpsl
mov
ss
xchg
pusha
dec
pop
loop
sahf
dec
xorb
repnz
mov
mov
add
daa
cwtl
outsb
and
ficompl
dec
jge
mov
push
insb
fcoms
mov
adc
cmpsl
rclb
cs
inc
mov
push
aad
mov
mov
into
fisubrl
sub
das
jmp
loope
jbe
inc
mov
mov
jne
out
pop
test
cmp
shlb
scas
imulb
fwait
add
sbb
sti
out
mov
setno
imul
mov
adc
or
jg
outsb
or
jno
cmp
sub
jne
dec
cmp
and
xor
add
bound
insl
pusha
jmp
fiadds
sahf
mov
fdivrs
adc
inc
jg
pop
xchg
ljmp
in
push
or
sbb
jle
imul
pop
ds
dec
int
push
and
and
daa
loopne
ror
xchg
mov
call
out
dec
aam
jmp
fwait
and
and
ds
push
sbb
mov
insb
push
jo
inc
or
push
mov
cmp
push
sub
mov
setne
ss
mov
stos
inc
xor
sbb
mov
jo
rcr
push
icebp
xchg
cmpsl
mov
add
xchg
xor
add
cmp
pop
jmp
sbb
inc
jne
pop
push
dec
jae
fsts
out
pop
xchg
in
xor
enter
add
nop
lods
mov
jmp
stos
scas
adc
pop
mov
js
iret
cld
mov
pushf
out
loop
insb
and
in
ret
pop
adc
or
inc
dec
rcrb
iret
add
push
das
leave
pop
jg
ss
aad
aad
lret
movsl
testl
dec
repnz
ret
mov
into
fwait
xchg
daa
inc
div
mov
repz
daa
add
addr16
fstpt
sub
jge
pop
mov
jecxz
subb
je
jmp
inc
mov
fs
cwtl
ret
mov
loopne
push
adc
mov
add
inc
and
fnsave
inc
jmpw
ret
cmc
sub
jmp
jno
xor
cmp
inc
pop
js
pushf
pop
dec
adc
mov
add
in
nop
sbb
aad
mov
inc
ds
jg
aaa
cld
notl
lret
loopne
stc
add
mov
jae
stos
arpl
aaa
pop
test
adc
cmp
xchg
jp
addl
lret
push
sub
in
cmpsl
not
mov
lcall
out
sbbb
aam
adc
in
inc
xlat
fs
in
lret
mov
mov
sbb
xor
inc
lret
jmp
btrl
ret
push
hlt
ljmp
xchg
mov
pop
pusha
push
add
mov
push
mov
mov
fisubl
add
mov
mov
divl
shll
pop
push
lret
test
add
sbb
ss
xor
dec
lret
jo
push
push
cli
cmpl
push
clc
js
ret
ret
inc
leave
jbe
ljmp
xchg
fildll
cmp
mov
out
adc
scas
subb
call
push
push
xorb
repnz
imul
inc
push
stc
sbb
push
clc
les
outsl
sti
mov
cmp
dec
mov
xor
nop
inc
xchg
or
dec
test
or
xchg
mov
adc
cmp
inc
sub
sahf
das
pop
popf
push
mov
mov
insl
jecxz
outsl
xchg
add
popf
jb
bound
xor
xchg
in
push
add
mov
mov
jnp
sbb
xchg
xchg
shl
cs
mov
adc
mov
jecxz
pop
push
in
or
lret
call
cmp
and
pusha
mov
adc
pop
cmp
aaa
subl
mov
jnp
and
loope
scas
xchg
jp
lahf
jecxz
sbb
popf
pusha
fcomi
imul
es
pop
ret
je
das
into
jmp
into
mov
mov
loope
ret
aas
sahf
pop
dec
jmp
lods
pop
sti
ret
cld
jecxz
loope
pop
sbb
sbb
or
jae
xor
cmp
cmp
aad
push
mov
sbb
and
mov
fsubp
movsb
mov
or
cmp
call
test
push
leave
mov
idiv
xor
mov
cmp
loop
dec
inc
movsb
adc
ljmp
mov
divb
enter
loopne
rol
mov
cltd
mov
loop
mov
and
mov
inc
lock
loope
shll
aaa
fwait
lret
xor
mov
sbb
lea
imul
testb
mov
pop
scas
outsb
sub
mov
rolb
adc
fs
dec
cmpsb
rolb
mov
pop
mov
push
enter
rcl
imul
ja
cmp
mov
ja
mov
and
test
outsl
jnp
inc
iret
cs
cmp
push
push
mov
int3
adc
add
sub
fcompl
lock
push
and
sbb
pusha
rclb
lret
neg
in
mov
adc
das
adc
and
iret
push
pushf
lock
inc
mov
repz
jl
mov
mov
jecxz
lods
adc
mov
mov
add
jae
lods
adc
into
jge
je
sahf
lock
aas
scas
jecxz
cwtl
mov
negb
and
iret
ljmp
or
dec
xor
and
cmp
in
jnp
adc
inc
cmp
movsb
out
push
push
sub
fdivrl
xor
push
insb
in
into
inc
call
repz
adc
add
dec
les
test
sub
outsb
jg
in
dec
push
and
dec
dec
pop
adc
arpl
sbb
lock
fidivrl
fisttpll
es
into
jo
xchg
sub
cwtl
sbb
cmp
mov
or
aas
cltd
pop
test
or
stc
es
test
xchg
xor
sahf
mov
xchg
mov
ljmp
push
cmp
popa
mov
mov
mov
adc
cld
or
nop
mov
daa
stc
les
dec
dec
lahf
insb
push
mov
repnz
ljmp
test
out
pop
in
insl
xor
mov
xchg
addr16
mov
daa
sub
jbe
or
mov
push
gs
aam
in
xchg
push
or
outsb
xor
cmp
popf
jnp
push
xchg
aaa
cmp
imul
ds
scas
sbb
mov
aam
mov
xchg
das
mov
jbe
or
and
pop
sub
andl
scas
mov
dec
rol
movsb
mov
jne
jp
push
cmpl
imul
dec
ja
jno
xor
lcall
ret
shll
leave
repnz
pop
aaa
or
dec
jp
lock
fsubl
cmpsl
insl
mov
add
imul
xor
jbe
jle
insb
pop
xchg
fcmove
dec
pop
lcall
icebp
add
and
adc
inc
push
mov
push
adc
subl
xlat
jno
jl
mov
je
addr16
xchg
lcall
mov
push
int3
xchg
js
ja
or
mov
xor
sbb
stos
dec
das
nop
or
or
stc
cli
fistl
into
out
sub
pop
jns
pushf
outsl
or
dec
push
fwait
lret
mov
mov
adc
rorl
dec
inc
xor
mov
xor
bound
lods
add
adcb
lret
cltd
and
mov
adc
xor
rolb
and
movsb
andl
out
pusha
lahf
imul
sbb
fists
rorb
mov
mov
sbb
jae
sbb
sbb
in
int
pop
jb
sub
adc
sbb
ja
repnz
xor
dec
mov
ss
adc
imull
xchg
ret
pushf
imul
rcrb
cmp
and
push
mov
mov
push
aas
xlat
or
cwtl
in
and
stc
inc
or
lahf
out
sbb
and
ret
push
cmp
or
cltd
fsubs
xchg
mov
data16
pushf
jmp
outsb
fs
pusha
out
jmp
dec
mov
inc
rcrb
adc
adc
push
cmc
les
std
inc
mov
push
xor
jne
push
das
stos
mov
lds
xchg
jne
clc
jl
lahf
xlat
jb
fld
mov
jmp
pop
xor
xlat
push
pusha
mov
subb
mov
cs
sub
adc
pop
sbb
xchg
gs
pushf
xchg
les
fistpll
dec
sub
adc
or
aaa
cmp
mov
movsb
mov
inc
sub
cmp
mov
cmp
xor
ja
loop
repz
popa
movsl
subb
fdivl
jns
jmp
pop
loop
call
into
cmp
into
test
xchg
lcall
cmp
push
xor
cwtl
xchg
adc
loopne
or
cmp
ret
pusha
loope
push
cmp
jge
jno
addl
xchg
cmpsl
int3
rsm
sub
jl
fdivr
lret
mov
xor
outsb
pop
insb
or
xchg
and
sub
ficoml
or
fwait
in
scas
mov
or
xchg
leave
mov
sub
in
mov
in
notb
push
mov
scas
aaa
pushf
inc
enter
stos
sub
movntq
inc
es
xchg
pop
cs
shrd
add
mov
and
push
popf
dec
mov
cmp
cli
xchg
jo
arpl
pop
addb
xlat
mov
sub
subl
mov
aaa
jp
aam
inc
stc
into
xor
push
test
cmp
dec
in
popa
into
cmc
xor
cmp
push
push
lahf
ficoml
pop
adc
fs
jp
aad
mov
cmp
mov
jae
cmp
mov
pop
and
imul
dec
test
inc
cltd
and
ss
mov
xlat
fisttps
arpl
inc
push
xchg
popf
loope
and
lea
ja
aad
cltd
lret
std
xlat
inc
cld
push
and
sarb
out
jl
gs
sarl
push
jg
xor
int3
cmp
xchg
xchg
xchg
and
mov
mov
stc
lds
fxch
xchg
scas
loop
hlt
dec
pusha
fucomi
fisubrs
cmp
mov
bound
jno
push
mov
mov
test
ucomiss
stc
xor
or
pop
cmp
mov
mov
int
mov
inc
jmp
mov
inc
insb
clc
jne
stos
mov
pop
loopne
sub
dec
jno
mov
pop
add
push
mov
cli
in
test
call
imul
cld
jmp
sbb
jmp
loop
add
jl
jmp
adc
and
daa
rclb
pop
stos
rcrb
lods
inc
mov
adc
sbb
and
sbb
iret
xor
xchg
in
vmptrst
inc
and
push
xchg
sbb
lret
and
xor
test
hlt
xchg
test
out
inc
hlt
popa
insl
mov
cmp
push
inc
repz
mov
inc
pop
jmp
stc
lock
xchg
xchg
push
bound
rolb
add
repz
jns
test
leave
jb
int
sbb
jbe
scas
lret
fmul
mov
mov
or
sbb
loopne
movsl
jae
in
push
xchg
pop
xor
and
mov
jmp
xchg
out
out
lock
cmp
popf
rcrl
sbb
mov
lahf
stos
mov
repz
mov
in
sub
pop
add
clc
mov
push
jg
addr16
cli
mov
daa
xor
into
inc
mov
cmpsl
mov
loope
fcompl
call
mov
inc
jle
enter
enter
cmp
test
rcrw
cmp
xchg
sub
xchg
sbb
mov
mov
sbb
daa
enter
movsb
ja
and
leave
and
or
dec
bound
jno
pop
mov
cmp
xor
xchg
sbb
in
xor
inc
xchg
fldl2t
sbb
xchg
cmp
mov
repnz
sbb
idiv
push
sub
mov
into
jns
xor
or
sbb
xchg
int3
jae
xor
das
cld
dec
xor
xchg
mov
dec
test
ds
pause
adc
loope
out
sti
data16
das
jne
lahf
cmp
inc
js
shl
sub
mov
sub
hlt
xchg
outsl
adc
fdivrs
sar
pop
daa
ljmp
xchg
or
fld
ljmp
push
pushf
xor
push
cmc
push
mov
mov
jnp
pop
sbbb
push
adc
enter
jne
mov
sub
inc
add
into
lret
leave
jnp
xor
cmpsb
push
xchg
lea
fwait
lods
pop
ds
cmc
int
fsubrl
xor
pop
mov
test
icebp
shll
loop
lods
loop
std
mov
add
mov
inc
mov
mov
xor
mov
inc
lcall
and
ficomps
repz
inc
mov
cmpsb
lods
add
cmp
lods
mov
inc
add
push
xchg
inc
fs
shlb
xchg
xor
leave
ljmp
daa
shrb
mov
test
daa
insl
adc
mov
add
icebp
fyl2xp1
mov
xor
sti
xchg
mov
adc
call
icebp
xchg
test
sti
les
std
sbb
rclb
sub
pop
ss
and
sbb
mov
adc
inc
hlt
push
aaa
push
jo
in
ret
popa
mov
dec
jmp
mov
push
push
sbb
jo
sbb
xchg
pop
pusha
fisubl
jle
out
xor
xlat
stc
cwtl
jae
in
pop
mov
push
test
mov
add
push
dec
sub
sub
pop
call
xchg
xor
aas
es
push
stc
mov
jl
adc
and
shrl
push
push
sbb
inc
fisttpl
in
sub
mov
sub
cmp
adc
sbb
movsl
pop
sub
xor
push
pop
adc
dec
push
lahf
adc
mov
rcr
sub
jbe
inc
out
insb
jge
push
add
dec
fwait
aas
mov
repnz
popf
imul
sub
mov
cmp
pop
lahf
xchg
hlt
jae
mov
jbe
xchg
gs
push
out
pusha
dec
and
scas
in
les
lcall
xchg
push
loop
jecxz
push
pop
jl
fbstp
subl
xchg
cmp
in
ljmp
ret
sbb
cld
mov
ss
movsb
cmpsl
push
clc
push
insl
mov
fildl
mov
sbb
outsl
rcll
mov
dec
out
repz
xchg
daa
adc
jns
push
push
popa
mov
je
inc
pop
in
clc
mov
test
adc
add
mov
out
out
push
mov
lcall
add
lret
sub
adc
xchg
xor
push
sub
icebp
aad
and
lahf
test
aam
notb
rcpps
aam
jle
movsl
cmp
scas
loop
mov
adcl
mov
lahf
dec
data16
aam
xor
jo
loopne
jge
xchg
arpl
clc
ret
xor
out
dec
add
int3
sti
mov
shrl
jae
lret
dec
outsl
movsl
push
fsubr
mov
fisttpl
cmc
lahf
jg
fildl
lods
push
addr16
cmc
insl
add
cli
je
notb
xchg
lret
mov
mov
stos
jns
or
std
pop
ja
add
mov
das
subb
ss
cli
add
mov
add
subl
dec
and
pop
mov
and
icebp
sbb
movsb
sbb
out
push
cmp
xorb
mulb
mov
jmp
int
or
adc
mov
dec
push
jae
push
fs
dec
bound
je
mov
scas
lds
out
ds
lcall
and
jno
inc
mov
out
ljmp
imulb
jl
out
mov
movsl
cmpl
xchg
mov
rorl
outsl
je
aam
jl
aad
icebp
lret
ss
das
pusha
loope
cmp
pop
rcrb
inc
or
ja
and
out
and
pop
es
orl
mov
fldcw
adc
sub
xor
add
out
mov
cli
jno
arpl
mov
add
sub
orb
xchg
mov
mov
mov
ja
pop
mov
xchg
fidivl
inc
dec
out
fidivl
or
test
pop
sbb
inc
jns
int3
xchg
jb
fwait
stc
dec
mov
mul
or
sbb
lods
inc
ret
mov
shrb
jae
and
dec
sbb
call
xchg
xchg
loopne
mov
xor
sub
mov
inc
cmp
or
add
xchg
push
push
push
xor
cmp
pop
pop
mov
pop
movsl
xchg
test
mov
repnz
rorb
sahf
inc
addr16
ss
mov
xlat
sbb
adc
bnd
pop
or
push
sub
inc
fscale
dec
insl
out
fadds
cwtl
or
mov
popl
or
lsl
gs
inc
and
jne
xchg
mov
clc
lea
pop
push
cmpsb
subps
xchg
lcall
or
inc
xorb
mov
and
insb
lods
mov
out
or
xchg
inc
imul
inc
sub
jo
aas
cwtl
adc
lock
mov
lcall
popf
jmp
gs
es
xor
ficoms
sub
movsb
imul
loope
push
or
jae
rcll
adc
cmpsl
cmpsl
sub
mov
daa
lahf
or
mov
push
setb
push
leave
pop
push
jno
pusha
cmp
xor
lds
xor
cli
jns
or
mov
ja
push
dec
lahf
pop
pop
push
and
sub
sbb
cmpsb
nop
cmpsb
push
outsb
dec
lods
and
mov
std
insb
les
testl
pusha
xchg
sub
cs
push
outsb
jg
mov
mov
pop
cld
les
les
dec
push
or
imul
lcall
push
inc
cmc
mov
mov
repz
xorb
in
xchg
rclb
dec
jp
notl
lahf
sub
jle
and
movsl
dec
dec
ffree
xor
add
add
cli
sub
push
add
add
sub
jp
std
je
add
mov
cwtl
popa
sbb
sbb
mov
insb
stc
call
bound
dec
xor
xchg
jns
push
repnz
movsl
pushf
jecxz
inc
jnp
pop
mov
push
sub
nop
test
pop
mov
mov
mov
in
ret
mov
stos
in
mov
notb
adc
ljmp
popa
mov
and
jmp
xchg
cwtl
push
addr16
cmp
mov
or
lea
mov
mov
loopne
dec
dec
dec
jb
aam
push
int
fldenv
pop
dec
mov
push
test
jmp
dec
mov
cmpsb
cmp
inc
in
ret
rcrl
or
jl
aaa
mov
mov
push
pop
and
xchg
clc
jae
iret
das
mov
mov
daa
cmp
xor
jbe
mov
rcl
mov
pushf
xchg
mov
inc
enter
out
push
call
add
aas
lret
sbb
fldl
push
mov
pusha
xchg
lret
xchg
sbb
ret
in
loop
jp
test
mov
adc
jl
lea
fiadds
das
icebp
pusha
aas
sbb
cmpsl
outsb
add
cmp
sbb
ret
movsb
adc
xor
mov
daa
mov
jo
mov
mov
jle
stc
sub
inc
inc
inc
icebp
fs
sbbl
daa
add
xlat
test
lahf
xor
int3
xchg
repnz
inc
addr16
sbb
test
addb
and
aaa
jmp
or
lret
xchg
hlt
mov
mov
mov
pop
imul
xchg
jge
orl
sub
ljmp
cwtl
jae
adc
adc
sub
bound
jb
sub
jbe
addl
add
ss
mov
jp
and
call
and
push
push
inc
mov
dec
jno
div
pop
inc
outsb
mov
outsl
out
int3
jo
int3
lods
nop
mov
or
addr16
or
and
andb
aam
in
sub
or
repnz
ljmp
xor
pushf
popa
roll
out
rorb
adc
out
cmpl
or
xchg
mov
mov
cltd
xor
in
les
pop
iret
mov
xor
dec
nop
jmp
pop
pop
or
cmp
xor
xor
pusha
repz
xchg
jbe
shl
xor
jae
negl
mov
in
sub
push
enter
stos
aad
pop
int3
repnz
imul
add
mov
dec
jns
insl
sbb
aam
out
stos
loop
mov
fldpi
jbe
popa
mov
fs
popa
andb
arpl
mov
sarb
fcoml
cmp
xchg
or
shll
xor
jge
mov
fistpll
xchg
outsb
mov
pop
push
sbb
mov
incl
or
pop
pslld
mov
inc
add
popf
cltd
cltd
sub
and
insb
add
pusha
ss
ss
xchg
out
add
mov
test
xchg
adc
inc
roll
mov
cmp
push
fdivrs
mov
and
subb
inc
and
push
aaa
stos
adc
testl
jbe
shlb
sub
mov
cmp
add
push
ret
jg
mov
pop
mov
stos
sbb
cmpsb
sub
pop
xchg
or
sbb
push
enter
cld
cld
cltd
push
lock
ja
or
cld
inc
aad
push
scas
mov
popf
pop
ror
popf
mov
sbb
mov
mov
dec
jl
cmp
std
cs
fucom
adc
push
xor
enter
fistpl
add
insb
int
push
inc
inc
sub
nop
daa
cli
push
add
pop
or
daa
or
in
loop
lret
aas
dec
int3
mov
push
popf
add
jns
add
mov
dec
cmpsl
mov
and
cwtl
test
cs
cmp
popf
mov
dec
enter
xchg
or
mov
push
sbb
sub
call
mov
fstpl
stos
test
sbb
data16
subb
add
sbb
js
or
adc
add
push
sub
sarb
and
xchg
push
cmp
xor
xchg
jne
decb
xchg
jnp
adc
shrl
orl
mov
test
mov
jle
hlt
enter
js
pop
push
lcall
lret
ljmp
pop
shll
scas
or
pop
shlb
mov
scas
inc
adc
xchg
xor
mov
mov
subl
cmp
mov
mov
or
out
loopne
imul
out
dec
add
jns
cmpsb
adc
inc
fidivrs
cld
out
xchg
js
push
leave
das
push
aaa
roll
mov
repz
cmpsb
popa
cwtl
mov
popf
jbe
sub
pop
push
xchg
enter
pop
and
lahf
jp
insb
repnz
test
mov
xchg
das
das
int3
sub
add
dec
std
dec
jp
pop
push
je
sti
leave
bound
enter
adc
adc
fidivl
mov
xlat
dec
imul
push
movsb
mov
ljmp
mov
aaa
insl
fildll
popf
pop
fadds
cmp
push
jecxz
sub
and
push
cld
mov
cmc
negl
sub
out
sub
pop
into
adc
minps
adcb
imul
fs
cli
mov
insb
inc
es
lcall
add
pop
repz
sbb
mov
sbb
aam
push
imul
sub
loop,pn
push
adc
int
imul
jmp
movsl
fs
call
loopne
stos
adc
out
repz
jg
mov
mov
test
mov
add
fistpll
and
push
lahf
push
int
jnp
jl
jb
pusha
push
fdivrp
mov
mov
inc
xlat
fcomi
cmp
aad
mov
inc
rcrl
cmp
push
scas
leave
push
imul
hlt
sub
outsl
jae
out
adc
ljmp
push
mov
nop
xchg
movsb
dec
mov
adc
ljmp
test
jg
les
cmp
mov
clc
sarl
dec
push
pusha
xor
or
gs
stc
insb
daa
mov
pop
dec
fst
mov
push
inc
enter
ds
adc
mov
rcrl
xchg
or
pop
mull
pop
loopne
and
xchg
gs
enter
mov
ja
idivl
and
mov
iret
mov
arpl
xlat
shrl
xchg
cli
jge
cld
mov
mov
xchg
cltd
and
aad
lcall
xchg
xchg
mov
xchg
shlb
lret
ret
or
dec
jl
dec
add
pop
fidivl
dec
jbe
inc
int3
pop
xchg
pop
addl
lods
mov
test
mov
pop
sbbb
and
xchg
xor
cmp
aaa
xchg
cmp
pushf
add
pop
ficoml
jmp
loopne
inc
xchg
sub
dec
imul
or
into
pop
add
out
cmp
stos
in
les
push
pop
mov
pusha
adc
lods
test
scas
jno
ja
inc
shlb
pop
jno
das
xchg
push
mov
icebp
jnp
jnp
xor
pop
lds
popa
cwtl
xchg
sar
loope
cmpsb
mov
shll
mov
jnp
pop
es
push
jp
xor
mov
adc
xchg
or
out
mov
daa
int
popf
add
fistpl
decl
xor
cltd
dec
sbb
loop
lods
mov
pop
dec
xor
loop
aaa
xor
pop
mov
inc
jns
lock
bound
bound
sbb
sub
cs
daa
ljmp
xlat
sbb
into
mov
pusha
pop
data16
imul
xor
clc
or
mov
je
movsl
ds
and
mov
mov
adc
cmp
into
adc
stos
lods
fidivrl
mov
push
mov
mov
dec
sub
add
pop
mov
loop
mov
add
jg
xchg
repz
nop
inc
ftst
mov
ja
cmp
add
add
add
shrb
xorb
xchg
das
dec
out
mov
and
push
mov
insb
xchg
test
mov
push
and
into
pop
mov
enter
std
inc
filds
sub
push
negl
push
xchg
nop
lret
mov
cli
and
pop
push
push
scas
insb
mov
cmp
fstpl
jge
aam
js
sbb
call
outsl
aas
rcrb
imul
fisubrs
xchg
mov
aas
icebp
ss
pop
dec
fwait
jae
and
or
ret
xchg
jb
sub
cmp
sbb
sbb
ds
dec
shrb
sbb
sub
iret
fwait
rolb
and
outsl
sub
sub
and
pop
cs
sbb
inc
dec
push
rolb
mov
adc
icebp
fwait
dec
fdivrl
jmp
aas
fstl
imul
pop
dec
push
inc
pop
cli
loop
mov
cmp
aaa
inc
dec
in
lock
stos
test
testl
mov
mov
addr16
icebp
inc
mov
jb
mov
xor
lock
mov
inc
xor
clc
mov
or
cmp
fstps
xchg
mov
inc
sbb
into
sbb
push
in
inc
out
icebp
push
insb
jmp
pop
rcrl
mov
inc
xor
cltd
in
inc
and
pop
inc
fildll
push
shll
lock
mov
push
fimull
inc
push
inc
mov
jl
out
cmp
inc
rclb
fs
pop
leave
andb
ret
adc
shr
mov
lods
cmp
or
pushf
mov
outsl
adc
xchg
std
test
xchg
sbb
fwait
test
cmp
ss
pop
mov
xchg
pusha
jp
outsb
mov
pop
lods
and
hlt
inc
ss
mov
out
adc
test
adc
ror
xor
hlt
cmpsb
mov
and
popa
push
push
aas
ja
cmp
ja
pop
es
fcoms
lcall
dec
popa
imul
xor
or
outsb
mov
mov
sbb
test
xchg
mov
fmulp
out
das
or
jae
xchg
and
daa
dec
mov
sub
jno
or
add
out
xchg
sub
cwtl
push
iret
pop
push
mov
imul
aam
xlat
sbb
dec
ljmp
mov
aad
and
movsl
loope
add
sub
push
lret
smsw
jb
adc
shll
lds
mov
mov
out
mov
dec
pop
clc
inc
lds
stc
popa
inc
jmp
fcom
jns
jns
lods
bound
jns
xchg
clc
es
fs
insb
mov
mov
pop
shl
clc
mov
push
gs
mov
and
mov
xor
xchg
lods
loopne
or
mov
sahf
push
inc
mov
mov
loopne
lcall
xor
xchg
out
hlt
aaa
xchg
cmp
cltd
mov
stos
jecxz
or
inc
push
sbbb
mov
xorb
rcr
mov
push
shl
sub
mov
fmuls
cmp
and
inc
pop
or
shl
pop
adc
pop
divl
dec
out
fs
mov
mov
mov
aad
cmpsb
jo
shrl
aaa
jnp
popa
pop
or
loopne
loopne
mov
jmp
mov
adc
adc
outsl
sbb
or
pop
cld
int3
sub
inc
mov
inc
mov
repz
sub
daa
xorl
outsb
in
jb
movsb
popa
aas
out
jne
inc
filds
mov
aad
ss
xchg
les
sbb
shll
aaa
and
ret
decl
pop
xor
insb
cmp
cmp
ds
scas
aad
rcll
xor
sbb
push
inc
into
das
pop
iret
call
push
cmp
xchg
inc
mov
jns
rep
divl
adc
inc
xlat
jb
lahf
inc
dec
mov
jbe
mov
or
in
xchg
scas
or
ljmp
adc
imul
and
scas
dec
jp
push
mov
mov
lea
and
jns
xchg
fwait
inc
out
mov
nop
push
jmp
jnp
jp
int
fimull
jo
sbb
dec
ret
out
pop
or
inc
adc
dec
sahf
mov
mov
lock
dec
pop
out
inc
popf
mov
lea
in
sub
stc
out
mov
dec
lret
mov
outsb
lcall
icebp
ret
les
addr16
mov
int3
xor
aad
xchg
cli
das
jae
adc
divb
scas
jbe
rclb
xchg
testl
inc
pop
mov
insl
sub
lock
repz
pop
popl
dec
dec
aas
fwait
inc
cmpsb
leave
jmp
sbb
popl
rorb
push
aam
mov
dec
mov
adc
ret
add
push
add
das
leave
test
int
repnz
and
std
pop
adc
clc
andl
rol
pushf
imul
jno
stc
aaa
fildll
sub
les
scas
les
mov
mov
fdivs
cmpsl
adc
out
pop
or
aas
inc
xor
stc
add
lcall
int3
cmp
fwait
or
addr16
stos
jo
sub
and
mov
xchg
inc
lock
mov
mov
push
test
jnp
sbb
je
shrl
lods
xor
cs
aaa
push
mov
mov
and
dec
sub
and
nop
mov
enter
mov
fidivs
js
test
mov
mov
inc
lret
negl
dec
push
jbe
push
push
sub
repnz
xor
adc
push
mov
stos
mov
lods
outsb
fimull
sbb
xchg
xchg
out
in
pop
fstps
add
ss
sub
data16
icebp
jge
popa
and
mov
inc
xorb
std
pop
jl
aas
xchg
aaa
popf
xor
cmp
dec
stos
sbb
cmp
dec
cmp
nop
dec
jo
scas
add
out
mov
jnp
add
test
pop
loope
cltd
adc
sti
or
xchg
jecxz
xchg
add
lcall
icebp
lock
movsb
jge
test
pop
pop
or
lahf
shrb
cmp
imul
mov
mov
sub
lock
cmp
xor
push
cmpsl
pop
push
push
aad
xchg
jecxz
loopne
mov
xor
adc
inc
test
sbb
mov
sub
xor
sbb
xlat
push
sbb
out
pop
lods
pop
ror
addb
adc
shll
ret
fstl
repnz
or
and
jmp
enter
in
lock
scas
ds
in
push
loope
test
loope
xor
rcll
movsl
pop
xchg
test
cld
fs
xchg
pop
jmp
adc
je
push
arpl
fstpl
and
lods
shrl
mov
push
xchg
jg
fcoms
or
mov
dec
fisubrs
arpl
ret
xor
loopne
outsl
das
jg
in
xchg
and
sub
fisttpl
xor
lcall
dec
std
add
js
fildll
or
fiadds
mov
gs
pusha
pop
jmp
shl
push
jle
repz
dec
sahf
push
fstl
hlt
cmpsl
loop
sbb
shlb
mov
outsb
dec
out
sub
jb
fdivrl
int
xchg
fisubrl
sti
lcall
and
push
fstl
sub
iret
and
int3
push
rcl
and
sahf
push
lock
fnstcw
and
xchg
mov
fucompp
push
push
cltd
push
stos
mov
cmpsl
in
and
dec
loop
popa
imul
cltd
jecxz
adc
sahf
stos
sub
sub
mov
jl
jb
mov
or
dec
cli
out
pop
es
adc
daa
lods
lods
xor
inc
push
pop
fisubl
jns
stos
pushf
ret
mov
lods
int
jg
jg
pushf
jge
cwtl
cmp
fs
sbb
cmp
subl
xlat
pop
fs
mov
adc
mov
sbb
inc
imul
fisttpll
pop
fcmove
pop
mov
jb
insb
or
lods
fnstenv
leave
test
fisttps
test
mov
push
test
mov
aas
push
movl
jbe
sbb
lds
jl
sbb
mov
cli
lds
cmp
add
jno
lods
lahf
decb
pop
dec
les
in
jg
cmp
add
dec
push
sbb
push
stos
outsl
out
pop
lret
ljmp
jl
jbe
or
dec
stos
shlb
fwait
and
scas
jl
jnp
jbe
dec
mov
outsb
loopne
pop
sbb
movsl
inc
call
add
mov
in
std
mov
adcb
clc
sub
hlt
orb
int3
add
call
add
fisubs
leave
shl
dec
jge
aam
mov
cli
stos
sbb
dec
xchg
aam
in
addl
push
mov
mov
dec
fldt
inc
mov
push
aas
cli
push
and
icebp
or
mov
rolb
or
mov
and
cmp
lods
or
in
lret
add
cmp
sub
insl
dec
stos
xchg
outsb
cli
testb
jno
jb
pushf
xor
test
xchg
ds
lahf
adc
lods
mov
dec
jp
ss
out
into
ret
add
cmp
daa
cmpsl
rcl
jne
sub
inc
fwait
sbb
xor
rorb
dec
clc
and
cmp
inc
inc
xchg
jb
sbbb
test
cmpb
adc
cmp
jno
dec
aam
insl
nop
adc
and
test
jmp
addb
stos
and
dec
jb
adc
add
outsb
pop
pop
aad
jecxz
add
mov
bound
not
and
inc
push
cli
xchg
adc
mov
sub
xchg
popa
dec
es
sbb
daa
sub
loope
dec
cwtl
sbb
dec
f2xm1
and
rcrl
clc
xor
dec
out
cmpsl
bound
hlt
jl
mov
pop
outsb
dec
test
inc
mov
stos
cmp
imul
or
push
popf
subb
das
movsb
mov
outsl
mov
adcb
popf
and
loope
pop
dec
dec
xor
xor
and
mov
cmc
or
icebp
subb
pslld
int
jp
cmp
add
push
and
bound
sub
adc
xor
mov
push
inc
pop
stos
popf
mov
or
jo
sbb
loopne
push
or
push
outsl
outsl
imul
fimull
pop
dec
inc
dec
mov
lock
and
inc
out
sbb
addb
jg
lods
push
lock
iret
add
in
test
dec
cmpb
inc
addr16
cmpsl
cltd
mov
dec
or
divb
sub
mov
or
andl
cmc
mov
mov
addr16
dec
sub
mov
test
subb
pop
push
in
ret
adc
add
scas
loop
sahf
movsl
lods
sub
pop
cmp
mov
imul
aas
xchg
mov
test
adc
and
adc
sahf
shll
pusha
or
subb
xchg
and
lds
daa
mov
sti
dec
sarb
push
out
push
ret
add
xchg
cmpsb
test
and
mov
mov
push
out
stos
js
bound
sub
sbb
mov
xchg
xor
jl
fdivrs
push
push
into
fwait
rclb
subl
ss
rol
sub
dec
adcl
mov
cmp
fstpt
inc
sub
cmp
insl
inc
lcall
adc
sub
xor
mov
push
arpl
hlt
pop
addr16
push
rorl
jmp
aaa
movsb
jae
jno
out
cli
dec
pop
pusha
loope
sahf
mov
add
mov
lds
pop
push
mov
sar
mov
std
jecxz
sbb
jne
mov
mov
sbb
jmp
pop
inc
push
push
xor
aaa
scas
rclb
gs
adc
pop
xchg
pop
fldl
pop
sbb
in
jb
hlt
fistpll
insb
and
dec
loope
sub
mov
xor
inc
push
fcmovnb
gs
sub
sbb
pusha
lahf
jnp
outsb
outsl
cmpsl
xchg
jo
imul
les
cmp
pop
out
and
lods
imul
aam
mov
adc
cmpsb
sbb
sub
jbe
pop
pushl
test
xchg
sub
movsb
pop
or
test
xor
jle
insb
ljmp
fs
inc
dec
fdivs
mov
mov
mov
out
xchg
in
mov
stos
push
mov
icebp
jl
push
mov
mulb
mov
adc
cmp
sub
sub
das
into
and
pop
test
cmp
sbb
in
sahf
mov
dec
aaa
test
mov
pusha
push
mov
sarb
stc
es
pushf
mov
xor
add
xchg
xor
fstl
shlb
mov
or
pop
adc
sahf
insb
aas
jle
lods
subl
fidivrl
js
mov
fwait
mov
pop
xchg
lock
mov
test
iret
pmulhuw
sti
or
sbb
sbb
sbb
inc
jmp
movsl
ljmp
hlt
sub
jo
loop
outsb
dec
pop
movsb
mov
mov
add
add
xchg
xchg
mov
lret
out
sub
dec
xchg
stc
inc
insb
mov
icebp
adc
push
jmp
mov
push
ljmp
push
lods
inc
mov
push
aas
fprem1
inc
aam
add
xchg
movsb
add
iret
xor
cmc
fsubp
cmp
out
lret
adc
xor
int3
or
xor
repnz
stos
sbb
or
rcrl
in
jnp
test
dec
fmull
je
adc
pop
stc
xor
xor
push
lahf
icebp
mov
dec
repnz
push
cltd
sbb
mov
pop
cmp
cwtl
mov
lret
mov
sar
adc
mov
push
mov
mov
sub
loope
test
dec
stc
cmpb
shrl
addb
mov
cmpsl
in
repz
cmpsl
icebp
imul
xchg
jmp
xor
mov
cmp
jle
adc
xchg
inc
mov
sub
mov
push
out
xor
fxch
sub
cmc
and
cmp
mov
stc
rorb
and
fs
push
ss
jge
jg
pop
pop
test
sub
add
movsb
fdivrl
inc
add
and
xchg
add
sarb
bound
dec
or
int3
ljmp
pushl
ret
mov
js
mov
sbb
fstps
xchg
mov
and
aaa
cld
dec
daa
inc
lds
sbb
popa
and
and
lahf
shll
cmp
inc
and
cwtl
dec
jle
mov
cmp
test
fdivl
cmp
fidivrs
imul
mov
in
pop
dec
mov
inc
std
mov
cmp
xchg
andl
lods
loope
imul
dec
mov
inc
fdivrl
iret
pushf
push
push
test
cwtl
jl
cli
leave
nop
cmp
dec
inc
mov
sbb
xchg
xor
insb
pop
call
out
and
sbb
aaa
loope
cli
or
dec
imul
push
popa
mov
inc
ljmp
insb
mov
push
outsb
pop
lods
fimuls
mov
push
xor
mov
es
or
adc
jp
insb
cmp
in
jne
sbb
into
in
mov
cmp
pop
mov
je
ret
dec
jne
adc
adc
bound
mov
mov
icebp
data16
jecxz
arpl
jno
push
inc
in
mov
jb
and
push
xchg
xor
pop
addr16
andb
push
adc
mov
ficompl
xchg
mov
in
fildll
cwtl
mov
fildll
das
mov
or
mov
push
mov
xchg
lods
fcomip
push
mov
lahf
xchg
cld
or
xchg
mov
sub
or
in
movsl
and
aas
out
cmpsl
out
push
sbb
cli
out
into
mov
pop
sub
xchg
xor
outsl
sbb
shlb
or
nop
subl
mov
pop
imul
test
push
fwait
jp
ja
repz
arpl
adc
cli
fisubrl
xchg
push
pop
mov
fstpl
push
mov
rcrl
lods
popa
leave
dec
test
in
fcomi
dec
movsb
dec
push
roll
adc
pop
sub
mov
mov
sub
mov
lods
roll
pop
test
fwait
jecxz
rcl
pop
and
mov
nop
jmp
push
arpl
push
lock
sar
sbb
arpl
fcmovu
add
fwait
jmp
mov
and
int
and
pusha
push
jg
sbb
push
pop
pusha
adc
pop
iret
out
inc
cmpb
push
dec
jmp
imul
out
ret
xchg
std
cwtl
into
mov
dec
xchg
or
adc
stos
pop
pop
sub
mov
jb
inc
mov
loop
xor
jb
xor
aaa
lods
bnd
add
jg
fdiv
add
outsl
fwait
sub
inc
fdivr
xchg
pushf
push
push
stos
enter
xchg
push
mov
pop
mov
scas
or
or
sti
push
cmc
sub
adc
inc
or
sbb
cmpsb
fcmovnb
cwtl
xchg
xchg
adc
loopne
mov
adc
push
in
icebp
and
jbe
mov
ss
push
int3
sbb
push
mov
repz
sub
lea
fisubrl
jecxz
and
cmp
cmpsl
scas
cmpsl
iret
movsl
clc
insb
xchg
cmp
xchg
mov
jae
mov
xor
inc
filds
xchg
in
les
rcrb
mov
lahf
int
push
xor
xchg
pop
adc
ljmp
imulb
mov
add
and
xchg
jns
jnp
into
mov
add
cltd
insb
in
xchg
or
jge
movsb
xor
mov
sbb
stos
push
movzbl
repz
out
loope
stos
in
cmp
sbb
or
xchg
jmp
rorb
mov
stc
pop
xor
dec
jge
jbe
out
xchg
pushf
or
test
fisttps
or
sbb
push
out
loop
xchg
jg
add
out
sti
mov
stos
sub
push
jmp
mov
cmpsb
push
popa
jecxz
cmpsb
dec
ja
dec
test
sbb
pusha
pusha
inc
outsl
cmp
pop
pop
cmp
lret
push
inc
dec
jg
cmpsb
mov
xchg
or
mov
test
mov
ficomps
and
xchg
push
gs
mov
adc
push
pop
pop
pop
xchg
sarl
outsl
lds
mov
outsl
rorb
jg
les
xchg
insb
sti
ljmp
sub
aas
mov
jb
xor
lods
test
fsubl
and
cmpl
fs
clc
push
in
fiaddl
jg
lahf
or
rcll
add
fsubp
mov
and
mov
ficoml
inc
jbe
pop
lea
into
inc
or
cmp
lods
mov
repz
fmull
ds
adc
repnz
adc
jbe
mov
call
jmp
enter
fxch
pop
adc
cmp
cli
subb
cmp
mov
imul
nop
out
dec
jno
repz
dec
and
or
dec
pop
jecxz
push
sub
dec
push
gs
inc
outsl
xorb
lds
push
push
testl
fldl
pop
push
addr16
cmpsl
pushf
push
xchg
and
fistpll
jbe
cmp
cmc
adc
sbb
das
inc
cld
les
pop
shr
insb
in
int
mov
ljmp
mov
aas
mov
sbb
lods
xor
dec
adc
add
mov
cs
rorl
test
mov
jne
fisttpl
fcoml
addr16
dec
mov
movsb
sarb
scas
lcall
or
inc
adc
push
dec
cld
push
adc
dec
dec
std
and
xchg
pop
xchg
pop
rclb
mov
and
lahf
pop
jns
dec
sub
add
rolb
gs
mov
mov
in
test
sub
scas
inc
sbb
arpl
adc
pop
sub
loopne
les
xchg
push
push
or
imul
jns
or
nop
mov
cmp
cwtl
int
es
aad
adc
or
xchg
lret
add
add
mov
nop
lahf
mov
xchg
test
fistpl
cmpb
inc
inc
int
push
and
push
daa
cmp
rolb
xor
int
dec
mov
xor
jno
repnz
dec
fwait
ja
cmp
adc
mov
test
es
jmp
push
jnp
fwait
add
lret
inc
mov
sbb
jle
dec
cmp
mov
xchg
divb
test
lcall
xor
mov
fwait
sbb
jp
sub
lock
adc
out
int
xlat
and
or
fiaddl
int3
das
lret
cli
push
pop
mov
and
mov
lods
repnz
dec
aad
dec
add
ja
sbb
pop
lods
fcomps
adcb
and
mov
or
inc
mov
xchg
es
out
inc
inc
push
or
aam
insb
iret
add
test
mov
pop
or
sbb
cli
imul
push
push
jecxz
cmpl
push
insb
pop
fdiv
insb
and
push
imul
cmovp
fs
mov
fistpll
cmp
xor
dec
mov
sbb
jbe
fsubl
ss
cmp
and
icebp
push
aam
repnz
lcall
inc
mov
clc
or
insl
mov
aam
xor
daa
call
sub
mov
in
and
fwait
insl
or
rolb
lret
inc
add
jbe
mov
int3
lret
adc
into
inc
sub
xor
jne
movsb
xchg
mov
out
sbb
test
stos
sti
pop
aaa
into
sub
cmpl
xchg
mov
xchg
pusha
ds
mov
fstps
sub
pop
push
cld
mov
push
ret
xchg
and
js
xor
je
xchg
lcall
popa
sub
push
enter
adc
rclb
fidivrl
shll
xchg
add
scas
jne
pop
pusha
pop
cmpl
addb
aad
push
xchg
pop
adc
popf
lock
dec
mov
leave
dec
cmc
mov
or
jns
flds
pop
or
mov
psubsw
mov
es
mov
push
sti
std
inc
sbb
add
sbb
or
inc
add
fdivrs
xchg
movsl
in
inc
incl
shl
not
sub
pop
jmp
dec
fnstsw
mov
sbb
xlat
pop
clc
jge
loop
fldl
scas
xor
shl
cltd
add
jno
push
and
jb
and
push
xchg
jbe
stos
cmp
bound
js
cltd
mov
test
popf
jb
mov
cld
stos
add
andl
rcr
and
adc
pop
dec
lretw
dec
ljmp
jmp
in
insb
ret
mov
jl
mov
pop
inc
xchg
stos
inc
xchg
pop
mov
or
and
pop
jno
rorb
fildll
jmp
dec
repz
cli
enter
scas
inc
or
mov
push
xchg
adc
rcrb
adc
pop
addr16
pop
xor
sahf
aaa
sbb
and
mov
fucomip
rcrl
shll
ljmp
ret
pop
fcoml
inc
je
clc
sahf
scas
cmp
dec
cwtl
sub
cld
jecxz
mov
icebp
jae
xor
fwait
sbb
insl
inc
enter
adc
jnp
xchg
movsb
add
mov
clc
sub
cmp
or
int
push
cmp
ljmp
add
dec
loope
xchg
adc
imul
dec
mov
rolb
arpl
inc
sub
ljmp
inc
mov
in
inc
daa
or
int
dec
and
pushf
sbb
in
inc
data16
enter
xor
push
fsubrs
mov
js
lahf
movsb
iret
sti
and
jns
loop
or
arpl
in
in
insb
rep
sbb
sbb
test
push
mov
adc
sahf
inc
aaa
loop
pop
xchg
push
push
ja
push
scas
push
data16
dec
pop
pop
outsb
mov
push
push
arpl
or
lcall
mov
jnp
dec
sub
adc
push
fisubrs
pop
pop
cmp
xor
mov
jbe
mov
lock
mov
rcr
sub
icebp
mov
sti
fisttpll
dec
push
lds
jnp
dec
push
add
adc
out
popa
vunpcklps
mov
xor
or
mov
pop
or
js
push
jbe
adc
pmaddwd
les
shrl
jg
xor
in
or
mov
scas
jb
lock
and
sbb
mov
mov
cli
fisubs
call
stos
call
mov
into
shlb
xchg
cmp
shll
iret
pop
mov
mov
das
pop
in
jle
xor
push
repnz
test
adc
loopne
and
shrl
call
out
pop
fmul
mov
xchg
in
pop
outsb
sub
push
pcmpeqw
loope
movsl
inc
ds
movsl
jl
xor
jl
pop
mov
and
add
xor
cmp
inc
cmp
xor
xchg
fs
imul
clc
aad
mov
aaa
dec
sbb
ljmp
and
jg
jae
sub
jmp
pop
int
mov
cmpsb
cwtl
pop
mov
jge
lahf
das
lret
xchg
cmpsb
push
imul
or
jb
js
jns
cmpsb
arpl
scas
jno
lret
jle
dec
test
fs
push
popf
divb
xor
inc
sub
mov
ja
shlb
repz
dec
jnp
inc
inc
hlt
out
fcomip
add
dec
jno
or
pop
sub
pop
sub
nop
cmc
and
add
adc
shlb
std
sbb
sbb
pop
cmp
rcrl
roll
loop
add
hlt
fsts
in
sarl
test
sbb
cli
stc
push
sub
push
jne
xchg
mov
cli
fidivs
sahf
add
sub
out
mov
mov
and
jb
fdivrl
mov
sub
cmp
dec
hlt
pop
lods
hlt
mov
adc
xchg
sub
xor
pop
xchg
lods
aaa
mov
cpuid
or
cmp
xor
iret
ret
in
sub
add
cmp
outsl
pop
add
movsb
add
sbb
gs
adc
xchg
or
pop
mov
or
insb
lods
mov
mov
mov
jg
pop
mov
lock
inc
daa
dec
xor
xor
jp
mov
jnp
fidivrs
mov
mov
cld
jnp
mov
push
aam
or
adc
iret
pusha
stos
xchg
xchg
mov
jg
iret
mov
imul
xchg
xor
cmp
cld
jo
imul
pusha
or
xchg
xor
xor
out
sbb
add
adc
dec
sub
nop
xor
adc
mov
and
pop
push
mov
out
push
test
mov
push
sbbb
repnz
scas
call
cltd
or
pop
dec
and
mov
xor
stos
jle
mov
pop
js
mov
rolb
xchg
mov
shrb
adc
out
and
shll
and
mov
inc
add
mov
jbe
jo
xchg
sub
in
imul
pop
ror
jnp
or
and
and
out
cmp
cmc
or
push
jns
xor
dec
mov
xlat
aas
pop
inc
pop
dec
xchg
dec
dec
and
jmp
mov
leave
insl
pop
or
fcos
mov
mov
pushf
dec
lea
jge
push
jnp
jg
cmp
jl
pop
test
scas
and
pop
sub
fsubrs
pop
xor
cltd
lods
adc
xchg
xchg
lods
inc
and
xchg
add
ljmp
icebp
mov
out
inc
movsl
cmp
popf
cmc
inc
icebp
int3
adc
movsl
push
or
repnz
stos
fsub
mov
fdivrl
mov
push
lods
sub
add
out
pop
add
xlat
mov
ret
mov
pop
ret
ds
push
push
mov
adc
xchg
fisubrl
or
pop
xorb
sub
cmp
dec
call
movsl
add
addr16
aam
cmc
sbb
dec
dec
fcmovnbe
shll
pusha
jle
test
test
test
test
insl
xchg
movsb
ret
sbb
xor
xchg
idiv
cmp
or
fidivs
sbb
xchg
jae
push
test
xor
insb
arpl
lret
adc
scas
sub
xchg
mov
and
outsl
and
scas
xchg
repz
in
inc
in
push
xlat
or
add
lcall
cmp
sub
pusha
ds
into
mov
xchg
sub
pop
aam
cmc
ror
sub
mov
push
rclb
xchg
inc
xor
sbb
jns
jno
push
popf
pop
dec
daa
adc
inc
jecxz
mov
push
and
mov
cmove
mov
lret
mov
push
jmp
or
jle
or
dec
push
scas
and
dec
jp
sbb
jo
pop
cmc
add
and
add
jb
clc
sarl
and
lods
mov
mov
sbb
inc
adc
sahf
cs
push
sarb
dec
inc
inc
cld
dec
repnz
ljmp
jns
jge
ficoms
mov
mov
pop
lock
mov
mull
adcl
xchg
sbb
fs
mov
xchg
mov
out
cltd
mov
shr
mov
arpl
aaa
push
fmull
ss
in
adc
xchg
cli
xor
and
mov
fsub
ljmp
pop
loop
lret
loop
xor
add
into
inc
mov
bound
pop
ficomps
xchg
jg
popf
ffreep
lcall
pop
xor
adc
dec
loop
rorl
scas
insl
or
sbb
mov
scas
leave
inc
out
pop
sbb
ds
pusha
xchg
sub
sahf
cli
repz
inc
out
add
shlb
das
and
push
xchg
mov
add
or
push
sub
dec
stc
out
fsubr
xor
xchg
js
cltd
pop
add
pop
add
decb
mov
cwtl
testl
mov
sbb
subl
test
test
fldt
dec
inc
aas
nop
lcall
dec
sbb
and
or
mov
sub
cli
mov
dec
push
fwait
mov
pop
mov
cmp
fwait
rol
mov
or
cmp
addl
bound
cmc
repnz
lea
les
jge
inc
and
push
dec
pop
js
lods
addr16
int
test
pop
or
add
nop
sub
pop
add
dec
mov
negb
cmc
xchg
cs
ds
xchg
movsl
daa
fwait
inc
clc
inc
jb
data16
and
adcb
ret
jne
cmp
pop
insl
add
sbb
adc
loope
movmskps
push
es
add
mov
mov
imul
icebp
push
push
les
xchg
xor
lods
dec
negl
jp
mov
or
adc
cmp
mov
ljmp
sbb
arpl
mov
inc
inc
clc
mov
dec
dec
ficomps
sbb
and
lahf
call
hlt
inc
pop
or
sub
aaa
adc
popa
sub
test
aaa
das
pcmpgtd
dec
or
ljmp
mov
decl
gs
push
mov
mov
leave
sub
outsl
les
push
shr
and
xchg
push
push
and
push
mov
mov
sub
or
sbb
adc
mov
mov
cmp
sbbb
in
lock
icebp
out
data16
leave
mov
pusha
repz
push
outsl
test
cmpsl
jl
inc
sarl
lock
mov
mov
sub
mov
nop
xchg
outsl
and
sub
jmp
push
aaa
mov
adc
inc
out
pop
sti
addr16
adc
mov
pop
imul
mov
add
into
cmpsb
dec
inc
pop
xor
aam
cmpsl
cmp
pop
cmp
mov
mov
xor
outsb
loop
inc
xchg
push
add
sub
jmp
in
popf
jnp
mov
dec
rcl
dec
dec
ficoms
sub
xchg
cltd
xchg
hlt
lods
test
mov
inc
pop
add
xchg
push
cli
rcrl
pop
and
fdivl
cld
cltd
push
clc
or
and
cmp
ret
pop
daa
lret
negl
popa
stc
cmp
jmp
mov
test
or
cmp
or
jp
repnz
cmpsb
les
inc
xlat
call
hlt
ss
call
sub
cmp
jp
aas
stos
pop
fmuls
mov
inc
lods
mov
mov
insb
ss
mov
adc
dec
push
insl
lods
int
jb
jb
wbinvd
aas
jne
andb
sub
mov
push
popf
xor
sbb
fwait
mov
inc
xchg
cmp
inc
adc
mov
test
vaddps
mov
xchg
fwait
xchg
outsb
sub
or
sbb
sub
push
inc
outsb
push
outsb
or
jne
xchg
shll
stos
dec
fbstp
in
mov
xor
sbb
lcall
push
jecxz
jl
in
nop
sub
stos
out
or
cmp
mov
mov
cmp
negb
and
cltd
and
jne
fnstsw
fisttpl
movsb
fmul
iret
loope
inc
stos
iret
aam
sub
sub
push
cmpsl
sbb
ret
add
ret
out
xchg
inc
pop
xor
ljmp
out
add
insl
pop
addb
and
xor
dec
sarl
mov
pop
faddp
filds
mov
cmp
xchg
sub
xor
xlat
mov
loopne
mull
inc
outsb
orb
and
cmpb
jnp
mov
out
cli
xor
ret
sahf
insb
ljmp
out
xor
push
jnp
pop
sbb
ljmp
add
ja
enter
lds
sarb
popf
or
ja
aaa
fwait
mov
push
fisubrl
jecxz
test
push
in
pop
shlb
and
dec
pop
mov
aas
and
mov
lods
inc
dec
incl
push
mov
jne
pop
inc
inc
popf
mov
jb
inc
jg
push
lock
xchg
adc
dec
bound
addr16
cltd
sub
cmc
sbb
inc
les
lods
ret
jge
je
dec
xchg
test
sbb
ds
sub
pop
add
out
into
mov
pop
jno
sbb
repnz
aad
subl
and
sbb
insl
jle
add
jge
xorl
xchg
fdivs
push
fdivl
push
xchg
xor
cli
ss
out
add
outsl
scas
mov
insb
lock
bound
inc
loope
push
adc
mov
jne
int3
out
add
or
mov
ljmp
test
sub
data16
test
cmp
xlat
and
sti
jnp
popf
mov
mov
push
dec
mov
pop
add
leave
enter
or
mov
pusha
ret
cmpl
ror
cli
pop
repz
mov
inc
dec
add
rolb
movsl
and
stos
and
cmp
or
sub
test
aaa
test
add
jl
cmp
and
scas
and
out
ret
bound
push
or
sub
sbb
cmp
mov
mov
rcll
inc
divb
jne
shll
inc
addr16
fdivrp
iret
lea
and
xor
jl
inc
lods
std
nop
aam
addl
sti
xchg
jmp
inc
insl
jge
pop
ret
pop
hlt
in
or
jecxz
push
add
shr
jo
cmpsb
or
or
cmp
xchg
adc
inc
fstpt
insl
ficoms
test
mov
addb
imul
cmc
pusha
cmpsb
jae
cli
mov
pop
iret
fld
mov
adc
xor
or
xor
and
inc
inc
frstor
xor
shll
pop
mul
add
mov
dec
out
cmpsl
jae
shl
xchg
push
sbb
pop
dec
or
mov
inc
pop
mov
js
jl
in
fmuls
and
inc
pop
dec
dec
fistpll
repnz
insl
sbb
in
add
add
jl
or
in
ljmp
das
push
sub
sub
in
or
call
mov
xorb
push
xchg
daa
ret
stos
dec
cmp
sub
mov
addr16
mov
and
pop
add
mov
scas
rcrb
xor
adc
in
test
pop
cwtl
repz
mov
push
es
pop
les
aas
mov
pushf
sub
sub
fwait
inc
lahf
outsb
mov
xor
clc
xor
and
mov
sub
popf
mov
mov
push
cmp
dec
or
dec
test
or
jno
mov
mov
in
fimuls
mov
push
jns
leave
xchg
push
push
cltd
jbe
ss
divb
inc
cmp
out
movsb
add
shrl
cld
fcomps
mov
push
sbb
cmp
lcall
add
daa
sbb
imul
and
test
inc
pop
push
sarb
mov
cmp
inc
gs
inc
mov
mov
testl
insl
cmp
fisubs
gs
jno
mov
jmp
test
stos
jecxz
sti
pusha
xchg
jo
mov
sbbl
clc
push
enter
xor
cmc
mov
pop
scas
mov
push
or
stos
sbb
outsl
cld
js
mov
adc
mov
xchg
shl
mov
inc
push
bswap
cmp
dec
jb
inc
xlat
out
push
es
inc
shrl
pop
mov
fadds
pusha
cmp
movl
dec
out
cltd
data16
loope
add
push
enter
cwtl
add
pop
stos
xchg
push
inc
push
push
rolb
rolb
out
dec
cmp
jo
sbb
daa
sti
pushf
dec
dec
cmpsl
stc
fcomps
cmp
pop
dec
cmpb
xor
and
stos
loope
popa
mov
jns
rcr
loope
out
dec
xchg
mov
mov
lahf
add
adcb
iret
popf
pusha
pop
fstpl
or
dec
push
jno
cmp
fsubrs
push
push
push
shl
lea
scas
push
out
add
xchg
xchg
add
pop
mov
bound
clc
mov
jp
mov
and
stos
gs
or
std
je
stos
or
pop
ss
inc
fisttpl
cli
add
rcrl
sub
roll
shlb
fwait
inc
adc
icebp
push
aad
mov
jb
add
cmp
cs
inc
in
movl
ret
test
mov
test
push
dec
pop
jp
dec
mov
dec
cmpsl
cmc
dec
out
mov
in
add
and
mov
imul
sbb
cmpsb
jbe
inc
mov
adc
jg
push
outsb
xor
jns
mov
xlat
inc
push
push
dec
pushf
rolb
xchg
jns
jnp
loope
dec
in
into
aad
pop
adcb
shlb
push
aas
push
pop
aaa
xor
fdivrs
pop
and
mov
inc
and
xchg
jns
js
rol
test
dec
cli
cmp
push
ljmp
lret
inc
push
mov
jg
sub
daa
insb
in
outsb
sub
xor
cwtl
data16
test
pusha
insb
rorl
andb
sub
mov
movsl
mov
jae
adc
sbb
daa
lret
ljmp
mov
pop
mov
fwait
cs
outsb
in
or
dec
ja
negb
scas
mov
inc
daa
shll
call
out
mov
and
inc
sti
inc
adc
call
push
fwait
xchg
jmp
aam
cmp
xchg
movsl
ficoms
lods
push
movsb
les
inc
in
arpl
dec
dec
fstps
fwait
aad
jge
ds
aaa
or
inc
mov
push
icebp
jmp
mov
mov
pushf
mov
clc
xchg
add
stos
jno
stos
in
iret
mov
push
enter
mov
test
mov
das
fwait
aas
cmp
dec
lea
loopnew
adc
out
dec
push
sbb
hlt
sti
and
sub
decb
stos
bound
popf
shll
xchg
push
jne
ss
pop
xchg
push
mov
jo
mov
cmp
addl
sbb
mov
or
push
js
adc
push
sub
popa
mov
mov
ljmp
pop
stos
nop
push
js
mov
mov
sti
sub
repnz
iret
ja
dec
sbb
mov
mov
int
cmpsl
daa
mov
adc
lret
sub
mov
fdivl
out
insl
scas
cmp
lods
out
mov
push
mov
lret
popl
pop
cs
cli
add
or
enter
out
adc
xor
sub
pop
cmp
and
into
jge
fisttpl
testb
add
shll
dec
push
les
pop
mov
mov
mov
rcrb
mov
sub
call
jbe
sbb
mov
fmull
repz
push
aam
jne
fisubl
dec
adc
push
outsb
add
adc
dec
stos
inc
cltd
xchg
inc
mov
sbb
andb
pushl
fadds
and
xor
out
ret
jge
jbe
je
xchg
hlt
xor
mov
and
push
outsl
pop
gs
xchg
inc
xchg
repz
loopne
and
add
lret
sub
xor
je
shrl
fildl
mov
jno
pop
jae
push
stos
stc
out
rorl
mov
nop
pop
ror
cmp
ss
or
jmp
ss
push
adc
xor
fwait
mov
lcall
scas
xchg
xor
adcb
mov
pop
inc
push
cmc
xor
xor
and
test
insb
lods
inc
nop
cwtl
or
bound
inc
mov
das
rclb
aad
cwtl
and
iret
and
and
test
hlt
movsl
aam
cmp
push
xchg
pop
pop
mov
dec
dec
rdtsc
cld
in
pop
mov
ds
or
push
and
mov
lea
adc
mov
aam
cmc
aas
test
shrl
jnp
cmp
fmulp
dec
arpl
push
imul
mov
test
fidivl
xor
out
lods
out
ret
jo
jbe
cmp
iret
xchg
scas
js
pop
cmc
movsb
daa
addr16
lds
mov
add
push
mov
or
test
jge
mov
add
and
cs
pop
aad
xor
into
iret
cli
add
mov
popa
stc
jae
aam
inc
lock
jae
add
sbbl
fwait
scas
sbb
or
mov
mov
mov
push
mov
mov
jnp,pt
dec
mov
lret
jnp
xor
cltd
push
sbb
hlt
ficoms
fdiv
and
sbb
xchg
inc
mov
ljmp
jno
lahf
sub
inc
insb
mov
das
sbb
add
fwait
inc
and
mov
add
add
pop
push
jge
arpl
ficoml
xchg
lea
jne
push
push
pusha
out
pop
into
or
dec
pop
mov
mov
mov
inc
sub
pusha
scas
bound
adc
ja
lcall
ficompl
mov
sbb
xchg
mov
push
mov
pop
mov
repz
or
filds
and
clc
test
adc
push
and
or
mov
insl
dec
dec
fs
jae
imul
mov
test
jo
inc
mov
pusha
inc
into
fwait
cmpl
addb
shrb
rcrl
dec
jno
cltd
push
mov
inc
gs
and
out
fnstcw
adc
neg
xor
shl
mov
pop
xrelease
fnsave
mov
or
and
jmp
mov
mov
mov
sub
or
inc
lar
jns
jnp,pn
xlat
jae
aaa
mov
inc
test
mov
sbbl
inc
cmp
inc
outsl
sub
cmpsb
mov
ficoms
cmp
pop
in
test
mov
imul
lock
stc
mov
mov
mov
mov
cs
add
mov
pop
push
jmp
daa
and
mov
lock
loope
xor
sahf
push
xor
fs
mov
mov
imul
xchg
cmp
xchg
pop
xor
xor
andb
icebp
mov
mov
cld
adc
aam
js
lock
cmpsb
cld
andl
jle
mov
les
fucom
sahf
lret
les
aam
faddl
dec
sub
mov
inc
lret
lcall
inc
stc
call
push
jecxz
xchg
repnz
test
sahf
shlb
dec
je
ds
pop
in
sbb
add
sbb
fimuls
push
lods
fwait
in
popa
mov
sbb
push
dec
test
rorl
xchg
pop
xor
sbb
cmc
in
xor
pop
cmc
test
ds
cmp
cmpb
push
and
push
sti
jl
pushf
xor
xchg
data16
jne
movb
into
movb
sub
fwait
mov
dec
hlt
inc
xchg
cld
clc
cmp
xchg
in
mov
test
mov
inc
xchg
popa
daa
mov
pop
stos
notb
decl
iret
ljmp
mov
jp
orl
out
jb
stos
je
xchg
test
lock
int3
lret
adc
sub
adc
stos
mov
daa
xor
dec
mov
add
push
push
dec
mov
fsubs
mov
mov
leave
add
push
cmp
les
jne
add
pop
aad
xchg
adc
or
scas
loop
jne
stos
in
fisubs
mov
fwait
in
divl
ljmp
addl
lahf
xor
sbb
or
mov
add
outsb
gs
push
lds
imul
out
cmp
loopne
nop
inc
jl
xchg
and
push
push
add
aad
jnp
mov
lods
addl
jnp
lods
mov
fwait
sub
and
or
ss
mulb
pop
sub
bound
fdivr
test
jno
mov
jmp
mov
xchg
mov
jmp
or
lcall
leave
movsb
push
xor
fs
pop
or
pop
hlt
insb
out
pop
popf
pop
iret
jbe
adc
add
mov
lods
lret
mov
xchg
loopne
clc
jnp
mov
mov
jo
popf
mov
lcall
inc
pop
arpl
sbb
ret
dec
pop
push
fsub
or
imul
shrl
rcl
leave
sub
jp
xchg
dec
clc
lea
and
xor
nop
dec
lock
push
insl
lcall
out
nop
data16
repz
idivl
int
sbb
mov
shr
fadd
mov
push
ja
sbb
mov
sahf
lahf
imul
popf
ret
inc
jle
sub
into
mov
popa
aad
mov
inc
enter
je
adc
lock
adc
mov
cld
std
in
xor
pop
aad
jle
ljmp
sub
mov
lret
adc
and
flds
mov
lret
std
sub
mov
mov
arpl
xchg
call
je
inc
out
outsb
or
xchg
add
fnstcw
fcmovnu
fbstp
sbbb
mov
mov
fnstenv
fisubrs
sbb
xor
movsl
inc
out
out
fstpl
add
cmp
and
insl
mov
popa
pop
dec
jl
jecxz
divl
imul
arpl
mov
push
leave
popa
cltd
push
dec
fmul
jle
and
sbb
cmp
insb
aam
enter
outsb
push
sbb
jb
setge
std
adc
pop
in
movsl
inc
fwait
xchg
in
into
add
ds
push
xor
jecxz
mov
imulb
adc
loop
jmp
push
add
dec
iret
jbe
dec
mov
add
xchg
stc
jle
xor
or
movsb
jl
xor
popf
arpl
add
repnz
pop
jl
shll
outsb
pusha
inc
mov
or
mov
rcrl
cmp
sub
cli
mov
dec
mov
sub
mov
negb
movsb
inc
insl
gs
pusha
lret
fsubl
xchg
das
stc
iret
jecxz
call
dec
iret
dec
lret
sbb
jo
ljmp
adc
enter
cmp
dec
jae
jno
pop
push
stos
sbb
fsubl
pop
push
jp
xor
gs
orb
not
mov
outsl
shrb
sub
mov
jns
sbb
sbb
cli
dec
fsubs
lea
gs
and
dec
ficoms
js
and
loopne
pop
or
dec
pushf
call
jnp
jmp
xor
mov
inc
sbb
addr16
mov
jns
xchg
mov
sbb
call
xchg
fwait
in
pop
xor
push
mov
jmp
loop
loop
aas
push
and
adc
out
notb
pop
fwait
cli
pcmpeqb
daa
mov
idivb
push
iret
and
aaa
pop
or
pop
sub
xchg
andl
sbb
push
adcl
jne
cmc
jns
mov
outsl
fwait
xor
jge
cmp
pop
rcll
bnd
pop
fbld
mov
in
push
sbb
scas
cs
sbb
imul
and
leave
inc
pop
pop
xor
lds
cmp
in
mov
mov
mov
push
mov
arpl
cmp
mov
add
push
inc
sub
int3
div
inc
jne
imul
fimuls
gs
add
fcmovu
sub
mov
mov
and
fcomps
xchg
shlb
das
cltd
xchg
mov
add
lahf
pop
pop
mov
mov
adc
dec
mov
mov
in
fisttpl
arpl
outsl
clc
mov
mov
loopne
dec
test
fiaddl
incl
icebp
jno
xchg
push
fsub
sbb
inc
loope
inc
dec
pop
call
sahf
adc
in
rcrb
sub
mov
sbb
pop
lods
mov
pop
mov
or
insb
push
inc
and
pop
out
dec
sub
stos
sbb
ret
add
pop
je
int3
fwait
cmpsb
mov
mov
xor
xchg
mov
inc
stc
pop
mov
mov
dec
aam
iret
add
mov
sub
mov
andl
push
fwait
and
cltd
cmp
cmp
add
aad
notb
pop
out
lcall
insb
mov
mov
sbb
adc
xchg
inc
mov
add
in
fisttpll
ja
adc
movsl
cmp
adc
jbe
mov
test
cmc
test
push
jmp
adc
lahf
hlt
enter
mov
adc
test
mov
cmp
mov
jecxz
sbb
adc
gs
dec
xor
jns
cmc
aas
or
and
push
aam
pop
inc
pop
cmp
add
cld
in
int3
pop
gs
stos
jp
or
adc
push
movsb
push
xor
cmp
addr16
xor
sahf
mov
call
sbb
and
sbb
mov
insb
scas
mov
ds
ds
xor
push
sbb
cmpsl
inc
arpl
mov
adc
push
add
imul
outsl
insb
sub
add
pop
lret
push
clc
lret
mov
mov
mov
dec
mov
push
ffreep
cmp
insb
jecxz
xchg
hlt
fwait
xchg
sub
pop
pop
lret
cmp
gs
pop
insl
mov
lcall
xor
inc
push
rolb
jno
xor
es
fsubl
fwait
ret
sbbb
subl
add
mov
mov
and
cmpsl
in
mov
sbb
and
addl
mov
jp
fs
pop
xchg
mov
push
movsl
adc
sarb
outsb
xchg
scas
mov
xor
addr16
inc
ficomps
jne
add
jmp
xor
in
jl
addr16
mov
mov
lret
insl
pop
in
xor
scas
push
dec
mov
out
scas
enter
add
jmp
pop
mov
or
aam
movsl
and
dec
pop
add
jns
pusha
xchg
aas
insb
sbbb
inc
subb
mov
pop
mov
and
mov
movsl
repz
sbb
lret
and
sbb
xor
imul
adc
hlt
sub
mov
je
and
cwtl
and
adc
scas
cmp
loope
pop
jnp
jle
fldt
ds
jle
xchg
jno
leave
push
mov
out
pop
sub
popa
popa
shlb
push
pop
mov
aaa
xor
jg
add
mov
shrb
clc
imul
lea
mov
mov
sbb
push
ror
dec
and
fsubl
add
das
dec
shll
test
ret
out
ljmp
mov
push
jae
int
mov
cmp
cmpsb
dec
xchg
sub
mov
push
paddusw
pop
push
add
mov
push
mov
adc
dec
ds
dec
jo
das
rolb
idivb
addr16
call
jb
pop
jg
fwait
pop
incb
jmp
jecxz
jae
and
js
or
aad
push
in
push
lret
idivl
mov
sbb
in
ret
subl
mov
mov
fsts
sti
sbb
fbld
xchg
adc
insb
pop
inc
jmp
pusha
push
in
pushf
cmp
inc
test
adc
jbe
and
inc
sahf
mov
mov
dec
adc
into
mov
lahf
push
add
jmp
push
fwait
or
mov
sarb
fabs
cmc
jg
scas
xlat
sysret
dec
push
push
imul
mov
shl
or
cli
mul
pop
pop
inc
arpl
ret
pop
adc
lods
cmp
xlat
std
xchg
cltd
cmp
xor
pushf
fiadds
pusha
in
xchg
xchg
inc
aas
pop
jp
daa
jne
adc
xor
xor
push
sti
lret
xor
push
scas
mov
fadds
dec
pop
scas
stc
add
fcoms
ljmp
lods
inc
neg
jmp
hlt
sub
ja
jb
dec
or
sti
xor
xchg
and
jo
nop
sub
xchg
add
sbb
mov
and
inc
xlat
sub
mov
bound
mov
lret
push
and
mov
dec
lahf
inc
mov
cmc
pop
aad
push
pushf
jmp
xchg
jne
adc
clc
xchg
inc
popf
cmp
int3
idivb
adc
ss
ss
iret
push
sub
xchg
aam
test
das
mov
cwtl
sbb
add
sbb
sub
fists
out
cmc
jmp
mov
xchg
dec
sarl
sub
and
dec
sub
sbb
add
sti
cmp
faddl
pop
mov
xor
inc
mov
sub
popf
mov
dec
xchg
jno
pop
jle
das
adc
cmp
rcl
pop
js
xlat
pop
xchg
jbe
xor
bound
enter
or
push
add
push
mov
clc
push
out
inc
out
bound
fists
cmp
dec
ret
sbb
repz
test
lret
incb
xor
cmovae
aas
inc
sub
push
inc
sub
dec
rorl
subb
adc
jne
hlt
cli
lret
or
adc
mov
mov
dec
cld
cmp
sbb
jb
push
xchg
pop
jp
pushf
out
jae
in
imul
push
imul
out
adc
mov
sar
decb
dec
push
imul
pop
mov
xor
shlb
sub
jo
sarl
mov
mov
ret
aas
je
adc
adc
sbb
xchg
cld
xor
imul
inc
pop
lods
icebp
fildll
adc
xchg
cmc
gs
push
loop
xchg
test
es
movsl
sub
lret
adc
popa
cli
lcall
cmp
ljmp
bound
in
mov
jo
jle
or
popf
cltd
inc
dec
test
jg
push
lret
ds
in
test
and
pop
add
in
add
pop
dec
xchg
cmp
xchg
lods
xor
insb
ss
inc
dec
lcall
ret
cmp
cmp
hlt
fldenv
or
and
sbb
pop
repz
pop
popa
scas
pop
rorl
call
cmp
push
pop
lock
sbbl
lret
adc
lods
cmpsl
in
lods
das
push
sbb
lahf
add
std
movsb
in
pop
out
fs
call
ret
mov
clc
push
adc
inc
fnsave
and
sbb
mov
or
pushf
sbb
es
loop,pn
je
movb
cmp
cmpsl
je
pop
cwtl
ret
pop
clc
scas
xchg
and
push
push
mov
xlat
loop
ja
shrb
adc
add
enter
mov
mov
pushf
adc
push
cmpsl
mov
xlat
test
jle
addr16
cmp
orb
mov
out
iret
xor
mov
inc
movsb
lea
je
add
mov
sbb
push
in
jb
jge
dec
dec
stc
mov
dec
into
mov
cmpb
push
call
repnz
cmp
imull
lcall
and
cwtl
sbbb
lods
sar
arpl
mov
sub
pop
movsb
cli
cltd
loop
jns
pop
pop
jns
lahf
push
and
add
hlt
lahf
dec
inc
pop
xor
add
xlat
loop
mov
enter
je
aad
push
out
or
lds
push
adc
hlt
pop
xor
sbb
adc
jg
std
adc
jmp
or
jle
daa
xchg
and
nop
add
inc
jmp
xlat
stc
mov
cmpsl
lahf
out
mov
fstps
mov
movsl
mov
sub
mov
dec
inc
mov
xlat
xor
hlt
movsl
sbb
mov
decl
mov
orb
es
rcrb
ljmp
add
std
mov
dec
mov
mov
in
or
in
adc
shrl
inc
repnz
test
inc
xchg
pop
add
lds
out
sub
or
pop
xchg
inc
mov
icebp
lret
divl
ja
cli
sbb
push
pop
loopne,pn
fs
lea
mov
je
notl
adc
add
shld
add
fimull
lock
jle
mov
ja
popf
or
mov
or
cld
das
push
ret
jg
dec
je
jne
in
je
jge
jae
cltd
ss
xor
or
fcoms
shll
cmp
outsb
popa
lods
dec
jne
jo
jmp
ds
sbb
andl
cli
test
popf
andb
mov
cmp
jecxz
push
cli
mov
das
icebp
jne
fisubrs
leave
pop
push
je
and
mov
repnz
int3
dec
dec
ffreep
xor
adc
es
data16
mov
mov
clc
repz
sub
daa
in
cmpsl
sub
mov
in
sub
push
sbb
jno
mov
gs
adc
xor
ret
imul
fstps
daa
in
leave
jecxz
mov
or
xchg
adc
dec
cmp
lds
mov
loope
clc
jecxz
iret
lods
int3
fisttpl
xchg
push
insl
icebp
push
lret
jnp
jne
add
ret
mov
ds
gs
lea
mov
dec
dec
orl
pop
xchg
inc
pop
pop
loopne
add
mov
lock
push
ja
fstp
adc
fstpt
fisubrs
pusha
adc
mov
call
iret
mov
das
xchg
in
movsl
jo
out
arpl
stos
mov
lcall
cld
xchg
ret
cmpsl
dec
lret
lock
lret
pop
pop
or
nop
cli
sbb
xchg
cs
shll
movsb
pop
movsl
push
push
shlb
out
sbb
and
jo
push
outsb
add
cmpsl
xchg
or
adc
imul
shrb
push
loopne
pop
loopne
adc
cs
or
mov
sahf
sbb
xlat
stc
add
push
in
inc
push
in
jg
pusha
push
aas
add
mov
and
cli
or
pop
ret
sbb
mov
sub
movsb
je
sbb
test
into
jge
dec
ret
loop
push
es
adc
and
mov
ret
idivl
dec
sar
in
push
xchg
xchg
stos
push
dec
subb
loopne
leave
in
xchg
in
jp
ja
shll
jne
mov
icebp
inc
pusha
mov
or
aad
cli
pop
push
push
rcrl
xchg
ljmp
int3
ret
repz
stos
movsl
pop
in
sub
inc
lcall
cmpb
mov
add
push
mov
movsb
push
bound
push
xor
fnsave
fs
mov
mov
insb
add
sub
in
mov
sub
cmp
adc
xor
stos
push
rclb
sarb
jecxz
dec
push
xor
jmp
push
fs
mov
jecxz
push
or
bound
push
jl
jns
inc
sbb
and
fs
mov
dec
or
iret
add
fsubrs
jb
inc
fwait
sti
lahf
js
mov
pop
loop
into
stos
sahf
push
inc
fisubs
ret
fs
jle
pop
movsl
outsl
push
je
inc
add
jae
stos
scas
sbb
je
dec
push
sarb
pop
inc
jg
aas
roll
cmp
out
dec
mov
mov
mov
cs
fisttpl
cmp
in
fisttps
repnz
cmp
and
das
mov
arpl
insl
loopne
das
les
xor
push
lock
lcall
adc
mov
cmpsb
out
cld
adc
inc
push
test
inc
test
add
push
aas
fwait
int
xchg
cmp
outsl
push
in
insb
pop
push
adc
mov
jl
jo
xor
in
add
xor
lret
jp
pop
shlb
lods
loope
mov
sti
test
mov
jmp
loope
lahf
mov
or
lcall
dec
mov
push
or
fwait
inc
xor
cwtl
xchg
dec
add
cmpsb
cltd
xchg
dec
ja
cmc
push
xor
adc
insl
nop
xchg
and
xchg
push
mov
jmp
mov
sbb
adc
mov
js
das
jbe
cmp
mov
mov
shlb
mov
push
cmp
xorl
hlt
jg
fisubrl
xchg
mov
xchg
das
aas
out
pop
repz
das
push
leave
inc
je
ss
mov
xchg
stc
dec
gs
cli
add
xor
inc
aas
mov
cmpsb
test
mov
lcall
push
mov
movsb
xchg
std
or
push
add
jo
and
lock
mov
stos
jae
ss
das
xchg
scas
cmp
daa
rorb
stos
test
ret
sub
mov
adc
and
sub
fnstenv
sarb
pop
les
mov
dec
movsl
pusha
inc
lret
addr16
mov
dec
cli
or
push
in
and
mov
subl
dec
fsubl
leave
in
mov
sub
test
inc
mov
cmc
shrb
fstpt
push
inc
pop
lret
mov
mov
adc
push
int
repnz
push
int
ljmp
mov
dec
jl
and
or
stos
out
cld
mov
cmp
nop
cmpsl
ss
gs
cmpsl
in
fnstsw
hlt
lods
adc
mov
sbb
dec
fs
cmpsl
lret
and
jg
mov
fldenv
jbe
aas
cmp
cmp
dec
out
fsubrp
inc
xlat
psubw
dec
fistl
int
ds
and
cmp
dec
sbb
mov
dec
int3
inc
or
stos
xor
fs
fcoml
sub
and
or
insl
icebp
mov
into
dec
je
jo
orl
cmp
xlat
popf
scas
sbb
icebp
dec
push
mov
lahf
push
mov
inc
push
movsb
pop
xchg
pop
cmc
jns
loop
xchg
mov
xchg
push
add
cmp
push
adc
test
sbb
cmpsl
cld
xchg
lods
dec
mov
lea
mov
adc
cmp
sub
test
xchg
cmpb
mov
jo
notl
outsl
sub
aaa
lcall
std
dec
mov
mov
jle
inc
or
sbb
xor
adcb
lods
mov
sub
lcall
aad
mov
mov
mov
or
lods
xor
loopne
movsl
mov
ds
pop
add
mov
test
adc
repnz
lds
and
lret
add
mov
cmp
lock
addr16
mov
cld
cltd
sbb
shlb
fld
neg
mov
sbb
and
fcmovb
jp
roll
sbb
xchg
and
scas
mov
xchg
cmpsb
sbb
imul
sarb
test
cmpl
bound
fdivs
lods
push
dec
jg
xor
mov
addr16
pop
popf
dec
or
psubd
les
mov
xchg
popa
icebp
add
jns
out
insl
add
loopne
mov
ficompl
push
pop
cld
inc
cmp
xlat
lods
test
mov
and
fiadds
adc
mov
movsb
shll
xor
xchg
mov
push
xchg
cs
adc
movsl
dec
test
les
push
lods
inc
push
jbe
std
adc
inc
mov
fcoms
out
ljmp
sbb
rcrl
inc
xor
pushaw
roll
test
mov
mov
jg
mov
dec
call
and
loop
cld
mov
sub
add
cmp
addr16
enter
pop
icebp
lahf
in
rolb
negl
jg
add
in
xor
jb
cmc
ss
sbb
shl
cmp
call
sbb
push
xor
js
pop
test
clc
jb
stos
rol
sbb
dec
xor
xor
xor
inc
mov
sub
lahf
dec
or
loop
test
pushf
in
cmpsl
int
mov
push
mov
bound
cmp
jns
mov
xor
mov
subl
les
rolb
xor
shll
out
inc
push
shlb
cli
pushf
jg
cld
lock
sti
fmuls
xor
mov
jb
test
xor
and
outsb
mov
cli
adc
out
jb
in
hlt
and
ret
mov
sub
mov
adc
fucomi
gs
cs
cmpsl
repz
mov
push
mov
call
add
mov
fisttps
negl
shlb
movsb
push
push
pusha
cli
push
add
adc
fmuls
out
shl
jbe
fisubrl
xchg
test
int
push
ja
inc
pusha
pop
rorl
les
push
insb
and
je
addr16
inc
out
flds
es
outsl
dec
push
jo
jne
lret
lock
shrl
lret
scas
aaa
addr16
pushf
add
jle
lods
add
mov
mov
std
ficoms
jp
add
lods
sub
adc
in
scas
mov
mov
outsl
sbb
push
adc
fiaddl
ret
pusha
or
rorl
mov
cmp
pop
ja
loop
js
lcall
dec
adc
sub
lret
mov
out
call
jne
inc
inc
xchg
outsl
mov
inc
mov
test
xor
xchg
and
js
mov
out
iret
mov
jnp
pop
scas
test
fcoml
shrb
test
and
jno
xor
mov
lret
mov
push
stos
loope
mov
push
gs
mov
popf
pop
xor
fwait
adc
inc
mov
je
in
imulb
aam
ljmp
mov
or
xor
or
push
insl
ljmp
inc
xlat
xchg
sub
dec
xorl
pop
cmp
xchg
adc
iret
shlb
imul
push
das
adc
jne
es
fdivr
stos
xchg
pushf
jecxz
call
aas
data16
fwait
jge
sub
aam
rorb
or
clc
sbb
incb
xor
iret
pop
cwtl
lea
enter
out
int3
jne
bound
test
and
arpl
outsb
add
aas
scas
repnz
int3
jns
dec
pop
jmp
dec
sub
fcoms
cmc
std
pop
test
xchg
xchg
and
outsl
inc
mov
mov
cltd
push
mov
cltd
push
adc
mov
lods
mov
push
inc
cmp
inc
pop
add
icebp
ds
enter
cmp
push
ret
addr16
xchg
and
lock
dec
sti
adc
and
cmp
shl
add
mov
cmp
test
out
dec
xchg
lcall
movsl
xchg
mov
aam
xor
mov
es
hlt
inc
pop
clc
shlb
lea
addr16
mov
pop
push
insb
mov
add
out
inc
add
mov
imul
lret
or
jle
adc
or
xchg
adc
leave
lret
jbe
cwtl
add
push
jl
push
inc
adc
pop
insl
dec
pop
dec
or
or
inc
ret
je
cli
fdiv
insl
mov
andb
cli
scas
jne
or
sub
or
lahf
sub
lods
push
stos
mov
push
sarl
jle
std
stos
adc
cmp
popa
aad
jbe
inc
enter
lret
enter
fwait
dec
cmc
push
popa
les
fsubr
les
lods
and
add
xlat
jg
lcall
movsl
push
pop
subps
mov
mov
test
xor
int3
aaa
pop
mov
push
shll
addr16
dec
add
and
add
cmc
stc
push
clc
ficompl
ficoml
xor
cmp
loope
shll
idivl
jg
je
jae
sub
sbb
cmpsl
gs
inc
cmp
cmp
cmpsl
cwtl
shlb
cmc
daa
sub
jl
pop
jecxz
xchg
xchg
pop
xchg
xchg
fcom
sbb
mov
add
das
rorb
adc
adc
ret
inc
imul
or
inc
sti
out
push
mov
pop
or
xor
nop
mov
jne
scas
ret
loop
movsb
push
mov
subb
test
ds
adc
add
xchg
inc
xor
xchg
sti
into
ss
pop
bound
mov
sub
ja
sbb
push
inc
cmp
daa
dec
dec
fistpll
mov
push
sbb
insl
lods
ret
adc
push
inc
mov
addl
sbb
lret
mov
add
insb
jge
pusha
clc
nop
mov
fcomi
lock
lcall
xchg
add
pusha
push
int3
inc
fsubl
xlat
jg
lcall
push
sub
cmp
faddp
outsb
sub
pop
test
sbb
jae
mov
jl
rcrb
mov
hlt
bound
icebp
inc
cli
jae
xchg
xor
mov
daa
jmp
jbe
inc
ljmp
std
inc
mov
int
jge
inc
insb
mov
jle
test
in
mov
movl
shlb
mov
pop
ficomps
pop
loop
xchg
sub
cltd
stos
xchg
roll
es
mov
add
mov
mov
sub
stos
mov
fwait
data16
pusha
into
xor
daa
sti
shll
pop
mov
xor
adc
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
lret
dec
jnp
dec
mov
push
or
mov
jae
mov
add
cli
mov
in
insl
pop
imul
ret
stos
pop
leave
daa
int
fcoms
ljmpw
and
pop
negl
pop
addr16
and
dec
sub
or
lret
sbb
jp
iret
push
insb
mov
movb
sbb
gs
das
mov
and
inc
mov
sarb
cmp
mov
imul
xchg
ss
mov
je
into
cmc
jae
arpl
pop
mov
out
cmpsb
xchg
repnz
cmp
add
pop
stos
out
jnp
adc
outsb
cltd
popl
loop
and
push
adc
or
repnz
push
fcomi
into
ds
sbb
xchg
scas
sbb
sbb
shr
xchg
dec
adc
sbb
cli
mov
rcrl
sti
push
jo
mov
jecxz
adc
mov
mulps
mov
adc
xor
addb
adc
pop
lret
inc
jbe
addr16
cli
inc
nop
mov
lods
lahf
mov
mov
push
rcl
push
test
out
mov
push
fidivrs
fsubrl
and
shrb
fstpt
lds
into
frstor
and
jbe
ja
popa
addr16
sub
out
pop
and
fcmovbe
decl
rcll
aaa
aaa
aas
jecxz
sbb
sbb
fistl
call
mov
scas
outsl
dec
lret
dec
push
inc
jge
je
jg
adc
jecxz
mov
gs
push
stos
ljmp
adc
pop
jb
mov
std
xor
push
cmp
std
jmp
inc
pop
clc
xchg
dec
je
jg
fnstenv
mov
jb
repnz
xor
cmp
lret
vpminud
clc
sarb
push
add
push
ret
aas
add
mov
inc
jp
int3
xchg
jge
stos
jae
push
rcll
xchg
pop
outsl
mov
js
lods
call
pusha
ret
int3
mov
adc
rolb
je
add
arpl
adc
dec
and
jle
and
adc
lock
inc
cmp
arpl
xchg
push
dec
int3
arpl
adc
and
add
xor
or
xor
shlb
out
mov
sub
jle
lods
dec
xor
ret
xor
dec
push
cmpb
add
ljmp
adc
sub
pop
xor
shll
imul
inc
shll
int
and
xchg
movsb
add
lods
out
cltd
icebp
push
mov
mov
mov
dec
imul
mov
dec
xchg
addr16
aas
mov
dec
push
enter
cmc
mov
push
popa
adc
ljmp
dec
adc
lcall
sbb
push
ja
arpl
push
inc
fldt
sbb
push
add
fiadds
adc
or
movsb
sub
cwtl
pop
pop
in
testb
stos
iret
sahf
ret
in
mov
cmpb
nop
xchg
xchg
les
outsb
movl
jb
ljmp
scas
fsubl
mov
iret
jp
repz
xchg
insl
mov
xor
jle
xor
ret
mov
dec
ret
xor
test
sahf
mov
mov
test
shr
push
jp
push
sbb
ret
xor
fiaddl
mov
aad
and
scas
lea
push
cli
and
xchg
xlat
pop
add
sub
and
pop
jle
or
ja
push
in
sbb
mov
nop
mov
sub
adc
push
jmp
ds
cmc
in
filds
fidivs
bound
xchg
in
rolb
outsl
xchg
dec
cmp
nopl
jne
shlb
test
adc
sub
fidivs
pop
add
cltd
xor
lcall
sahf
fimuls
dec
iret
xchg
push
push
xchg
ret
or
mov
pop
aad
mov
sub
jmp
out
sbb
out
push
mov
fidivrs
sti
iret
cld
sarl
adc
in
add
mov
scas
imul
cmpsb
push
es
pusha
ret
movsb
inc
mov
mov
mov
pop
enter
jae
or
sbb
xor
mov
add
or
xor
pushf
or
push
push
push
repnz
mov
je
xchg
mov
ret
cld
cmpsl
mov
imul
adc
fisubl
flds
fisubrs
adc
gs
cmp
jae
adc
ds
adc
push
outsl
rolb
mov
or
or
rcrb
andb
or
leave
cmp
es
rcr
pop
int3
add
stc
lock
das
cmp
mov
lods
cmp
xor
sarb
inc
push
sbb
aam
push
imull
cmp
mov
mov
xor
aaa
jnp
sarb
shrl
xorl
xlat
mov
add
jle
dec
mov
push
aad
stos
or
out
arpl
clc
xchg
andb
fdivrs
negb
jmp
sbb
aaa
xor
out
in
and
subb
pushw
andb
xchg
movsb
js
fs
mov
or
sbb
outsl
stos
inc
add
adc
sbb
in
sbb
addr16
xchg
push
and
lret
aas
shr
xchg
dec
aam
push
repz
addl
fidivs
sub
test
mov
cmpsl
rcr
sbb
das
add
out
dec
enter
add
xor
mov
iret
imul
sarb
pop
jne
addb
sbb
sbb
mov
popf
or
enter
out
mov
shll
mov
out
mov
jb
std
xchg
stc
loope
outsl
jno
rorl
lahf
inc
pop
imul
jns
out
add
into
mul
sbb
jp
fnsave
adc
mov
imul
fs
mov
pop
inc
rcr
lret
sub
sbb
roll
mov
fists
push
insb
inc
jle
mov
in
mov
in
lahf
add
aam
icebp
scas
shll
adc
and
int
adc
test
std
fisubs
int
sub
xor
enter
mov
cld
and
scas
or
inc
aad
pop
stos
jmp
or
adc
nop
daa
ret
pop
adc
push
adc
test
stos
ljmp
aas
jmp
fnstcw
jb
adc
mov
out
hlt
adcb
sbb
mov
ffreep
mov
mov
mov
jae
pop
xor
xchg
xor
sub
mov
xchg
lahf
test
sarl
ret
scas
inc
stos
sub
sti
lret
lds
jns
and
or
ret
or
pusha
mov
out
enter
jns
push
add
xlat
cmc
pop
and
int3
je
adc
push
imul
jbe
mov
pop
and
dec
xor
mov
popf
jo
add
movl
sti
outsl
enter
scas
dec
or
jecxz
ja
repz
lock
sarb
mov
pop
push
sahf
fsubl
imul
in
push
das
sbb
sbb
or
dec
rclb
call
or
and
pushf
and
push
jle
xchg
lahf
inc
adc
ljmp
cs
dec
mov
push
cmpsb
mov
psubd
sbbb
pusha
dec
in
dec
cmp
ljmp
hlt
dec
stc
adc
adc
cmp
push
adc
jbe
sub
in
pop
dec
mov
mov
push
and
mov
pop
mov
popa
jmp
xor
xchg
and
aaa
out
and
mov
mov
outsl
cmpsb
add
mov
lods
jne
lret
movsl
iret
lcall
ficompl
lret
rcll
shr
inc
cli
ret
negl
adc
cld
loop
mov
inc
jmp
bound
aam
es
xor
jo
out
push
sub
mov
stc
scas
add
and
push
sub
insb
cli
pop
pop
out
jge
add
adc
and
inc
repz
sub
xchg
lcall
push
sarl
adc
push
xor
inc
daa
xchg
xchg
popl
mov
stos
dec
and
test
push
cmpsb
into
push
push
push
lret
fnstcw
push
adc
lods
mov
mov
sub
or
insb
dec
inc
cmpsb
or
es
inc
ss
aam
lock
pop
shll
sub
push
mov
push
cmpsb
adc
sub
mov
data16
rcl
loop
dec
js
xchg
fidivs
jb
test
daa
pusha
mov
loop
shlb
lret
push
sub
push
sub
push
adc
into
loope
outsl
jb
xor
mulb
ja
dec
ret
les
cli
push
pop
pop
inc
es
test
lahf
lods
fcomps
inc
add
dec
fmull
ss
xor
push
pop
push
fisttpl
lahf
testb
xchg
or
test
cs
insb
xor
imul
mov
stc
enter
aam
jnp
in
stos
mov
dec
mov
sbb
sti
dec
inc
add
cmp
inc
add
shrb
cmp
das
cld
pushf
adc
or
loopne
push
stos
mov
jb
bound
xor
dec
loopne
rorl
jecxz
mov
out
pop
and
leave
and
loop
mov
popa
shll
pop
outsl
lods
outsb
shrl
sub
lahf
stos
data16
inc
push
xchg
repnz
pop
pusha
pusha
stos
ja
jp
inc
and
or
or
in
rolb
xchg
sbb
insl
cmp
test
int3
aaa
jne
orl
adc
iret
and
push
insl
xchg
fildll
out
mov
sahf
pop
dec
cmp
jg
je
jmp
int3
mov
cmp
inc
rol
jg
cmp
cli
in
popf
mov
ret
jge
int3
pushl
sahf
sarb
loope
cld
xor
or
ret
lods
test
bound
cli
lock
xchg
out
out
push
inc
mov
ja
in
pop
les
fistpl
punpcklbw
popa
lahf
jg
divb
sub
shl
movsb
inc
aas
es
imul
xor
inc
dec
das
pop
repnz
xchg
subl
cmp
push
lods
call
test
mov
sub
bound
icebp
outsl
add
cmc
add
arpl
push
out
shlb
fstps
xor
mov
in
test
mov
push
std
cmp
and
mov
jbe
sub
cs
repz
jne
push
fs
icebp
mov
loope
insl
icebp
sub
movsb
or
adc
mov
out
mov
in
push
lods
dec
push
sub
push
inc
fs
in
mov
orb
or
cld
push
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
mov
push
fsts
sbb
push
add
data16
cmp
push
jnp
fs
mov
loope
addr16
in
jb
inc
repz
jp
mov
stos
push
xorl
or
and
push
push
dec
push
cmpsl
rcll
adc
add
fsubl
inc
lea
in
stc
inc
pop
movsb
sub
shrl
dec
push
mov
iret
in
mov
data16
xchg
jno
mov
pushf
dec
in
fstpl
xchg
add
cld
push
mov
mov
pop
push
add
xchg
movsb
ds
inc
leave
mov
mov
mov
xorl
xor
stos
jbe
aam
or
dec
mov
xlat
shlb
pop
gs
pop
or
ret
orl
mov
out
aad
adcb
inc
mov
cld
mov
adc
push
std
mov
notl
stos
shrl
shll
mov
cwtl
mov
jno
lcall
cmpps
test
sbb
xor
enter
mov
das
jbe
leave
icebp
or
sub
xchg
jns
sti
mov
je
in
imul
pop
cmpsl
push
xchg
lcall
and
xchg
push
hlt
inc
rcrl
sbb
adc
scas
sub
push
add
inc
ja
aaa
pop
mov
pop
nop
sub
add
into
sbb
movsl
adc
pop
sub
sti
cmp
cmp
sub
and
call
lret
mov
push
add
aad
pop
gs
mov
ja
mov
scas
push
dec
pmulhuw
jnp
or
ret
pop
fcomi
out
divl
jo
xchg
push
fwait
lock
inc
idivb
jmp
lods
aas
bound
popa
push
pop
jb
pop
pushf
dec
repz
cmp
mov
lret
sbb
xchg
in
adc
inc
gs
jl
std
mov
lahf
push
clc
xchg
stc
shrb
sbb
mov
lods
sub
sbb
out
jecxz
fldt
popf
sub
fdivrl
int
shlb
movsb
mov
in
jne
clc
mov
adc
cli
pop
push
add
out
aam
sbb
push
push
and
adcb
adc
mov
adc
ss
call
popa
addr16
nop
inc
jno
in
mov
mov
cmpsl
mov
jbe
std
lret
jae
fidivrl
das
addl
sub
jmp
in
rcrl
adc
mov
pop
stos
push
dec
adc
inc
inc
mov
cltd
into
lea
xor
mov
out
add
fwait
push
xchg
dec
push
mov
setae
repz
adc
cmpsb
mov
pop
imul
mov
clc
jae
mov
dec
sub
pusha
gs
insb
add
jb
push
adc
sub
push
mov
add
pop
shr
adc
insb
clc
xchg
lods
jp
pop
or
dec
and
pusha
outsb
loop
mov
addb
cmp
fimull
rolb
push
shl
sahf
xor
xor
and
cltd
xlat
cmp
jns
mov
lods
adcl
in
jb
push
mov
jl
xor
mov
and
xor
xchg
aam
enter
loope
rorb
sub
jecxz
lret
push
out
fisttps
xchg
std
xor
mov
cmpb
or
notb
mov
add
xchg
xchg
mov
pop
scas
push
add
push
dec
pop
adc
popa
scas
or
cmp
movsl
jl
inc
jns
insl
js,pt
pop
mov
xchg
push
icebp
gs
mov
notl
cmp
iret
nop
fimuls
and
movsb
cmpsb
lods
mov
ficoml
sub
and
loope
xchg
jno
and
fstpl
sbb
push
push
dec
lahf
lods
jo
xor
add
cld
leave
jge
loope
push
mov
dec
arpl
inc
xchg
mov
push
mov
mov
push
mov
pop
pusha
cmp
aaa
push
ret
js
inc
shll
adc
popf
adc
xchg
sbb
and
adc
int
mov
mov
in
cmp
outsl
push
inc
ds
out
pop
loopne
loopne
dec
test
cmp
in
shll
cmp
arpl
rorl
sbb
popf
daa
int
aam
andl
mov
push
jo
rcr
xor
or
das
int
sahf
cmp
adc
scas
leave
das
xchg
and
push
pushf
sbb
mov
call
iret
ljmp
sbb
imul
sub
test
jg
mov
or
adc
cmpsb
xor
ret
xchg
mov
mov
mov
or
xor
movsb
dec
xchg
or
xchg
sbb
icebp
mov
add
jl
pusha
in
aad
jns
lock
or
push
inc
fcmovb
dec
pop
cmp
sarl
xor
push
and
push
sub
shr
ret
push
sbb
mov
shlb
jb
jecxz
movsl
or
stos
pusha
in
sarl
xor
add
cmp
ja
dec
in
xchg
rcr
lea
ljmp
ss
js
loopne
in
cmp
jae
adc
jl
jnp
aaa
mov
rcr
xor
mov
repz
call
mov
test
and
add
mov
jg
xor
mov
scas
stc
lea
xlat
pop
or
mov
mov
jns
repz
dec
inc
push
rclb
lea
mov
xchg
sub
mov
sbb
comiss
adc
fs
mov
outsb
push
icebp
xchg
inc
aas
cwtl
jecxz
push
and
aaa
xor
push
fldenv
nop
rcr
stos
jge
stos
xchg
push
dec
xchg
movsl
das
sub
inc
mov
popf
cmp
rol
adc
xchg
pop
push
jl
add
lret
mov
mov
cli
icebp
lret
out
rcl
pop
lahf
add
fs
dec
xchg
ja
pushf
ljmp
jae
shrl
and
cpuid
clc
mov
mov
inc
mov
or
popa
sub
pop
in
jo
and
stos
movsb
and
loope
popf
movl
mov
loope
cmpl
pop
mov
int3
adc
adc
or
cli
pop
icebp
ja
divb
inc
xchg
dec
in
or
fwait
pop
arpl
xchg
adc
push
test
addr16
fidivrl
xor
sbb
push
cwtl
push
movsb
mov
cwtl
push
iret
pop
cmc
je
jle
fdivs
fsubrl
fistpll
pop
fnop
daa
cwtl
insb
cmpsl
bound
jb
inc
movsb
test
in
mov
scas
scas
add
cli
or
dec
lds
jl
lret
push
pop
cmp
sti
loopne
out
xchg
mov
jg
push
add
and
mov
inc
jo
adc
loope
shr
lea
push
roll
arpl
push
imul
sub
jecxz
imul
sbb
call
gs
sbb
pop
repz
push
jge
test
xlat
int3
sbb
push
outsl
lods
xchg
xlat
arpl
hlt
aaa
lcall
inc
pop
lret
cmpsb
cmp
pminsw
mov
xor
rorb
jmp
shrb
adcb
stos
inc
xlat
aaa
cmp
iret
and
xchg
fildl
popf
stos
and
je
adc
cltd
and
lret
je
mov
adc
ss
xorl
inc
xchg
out
cmc
mov
cmpsb
xchg
sbb
mov
add
xchg
add
adc
and
stos
ret
jmp
sbb
repz
addr16
mov
ja
push
clc
jmp
jg
hlt
cmp
aam
dec
inc
je
mov
imul
cmp
addr16
sub
in
inc
int3
cmp
ror
divb
stc
xor
out
movsb
outsl
pop
push
aas
shll
dec
lock
xor
or
xchg
mov
xchg
insb
cltd
mov
inc
aas
in
add
stos
sbb
jmp
jns
push
cltd
push
adc
mov
sbb
and
pop
lret
mov
in
xor
fistps
das
ja
lds
dec
movntps
dec
sub
es
mov
mov
and
in
xchg
or
push
sub
cmp
mov
daa
bound
popf
sub
rorb
and
divb
sub
cmp
enter
mov
cmpb
es
in
pop
popf
cmpsb
je
loopne
repz
xchg
fdivs
push
fsubrs
enter
add
xchg
jle
lds
pop
aaa
adc
jne
pop
xchg
data16
data16
in
add
jg
testl
out
adcb
sbb
scas
loope
movsb
lret
jae
xchg
add
jae
mul
sbb
push
jb
shll
out
cmp
pop
movsb
cmp
sbb
cmp
inc
pop
fcoml
push
daa
xchg
mov
and
mov
aas
jns
arpl
cmpsl
and
jo
sub
jae
hlt
push
cltd
jecxz
jmp
nop
ds
test
testl
cmp
jmp
aad
push
loope
pop
in
test
cld
aaa
mov
jne
rolb
push
jo
add
mov
adc
mov
jmp
jmp
aaa
movsl
dec
add
scas
push
inc
adc
jmp
or
cmpb
xor
xor
mov
mov
pop
cmpsl
inc
enter
ja
das
push
jno
outsb
rcll
sahf
addb
stos
hlt
out
insb
xchg
cltd
sub
sti
inc
inc
das
fwait
xorb
cmp
fisttpl
cmp
sub
lods
and
lea
test
push
sete
xchg
sti
mov
fwait
stc
data16
inc
xchg
pop
mov
adc
enter
jns
mov
push
jecxz
sub
enter
inc
scas
or
in
xchg
pop
inc
cli
pop
das
jne
push
jecxz
mov
lahf
sbb
jl
push
in
repz
add
dec
in
call
pop
repz
cmpsl
dec
scas
adc
mov
dec
xchg
xor
clc
test
xchg
ljmp
xor
mov
jge
pop
lock
mov
fadd
in
jb
lea
push
test
daa
or
or
xor
and
pop
inc
nop
mov
aaa
je
das
pop
pop
arpl
push
push
adc
adc
push
sarl
push
cmp
jmp
xchg
jne
scas
in
in
add
ret
mov
hlt
add
mov
or
gs
jp
adc
and
enter
or
ljmp
scas
inc
std
dec
sub
dec
idivb
stc
enter
imull
or
and
js
lahf
jg
mov
mov
pop
or
leave
std
push
cmp
inc
rcl
push
inc
sbb
xchg
ret
sub
pop
fistps
push
lods
outsb
sub
mov
inc
dec
mov
mov
outsb
or
loope
mov
xchg
sahf
sahf
jp
pop
sbb
movsb
pop
jae
daa
sub
fiadds
pop
mov
mov
push
add
push
cmp
add
sahf
jns
pushf
inc
fstps
xor
sub
jmp
and
sub
ret
ror
sub
outsb
das
pop
movsl
xor
sarl
insl
sbb
xor
add
test
sbb
lods
ret
push
pop
in
arpl
les
push
arpl
les
adc
cs
in
pushf
xor
jb
and
add
repnz
mov
das
hlt
fcmovne
push
les
add
dec
jmp
push
test
xchg
inc
mov
mov
mov
fistl
dec
cmp
into
jb
stos
xchg
mov
or
jge
test
ror
xor
add
xor
pop
icebp
push
dec
ret
mov
test
in
fdivl
cs
cld
das
mov
jg
ret
push
enter
stos
nop
cwtl
out
or
or
push
adc
push
xchg
xor
mov
add
in
xchg
daa
lods
cmpsw
xor
aad
ret
sbb
roll
push
repz
out
popa
bound
pop
or
mov
iret
push
xor
adc
movsb
ss
out
mov
enter
es
lods
adc
push
and
sbb
mov
ja
pop
hlt
in
xor
sbb
je
in
imul
rorb
lahf
sub
arpl
jno,pt
xor
xchg
shrl
jmp
sbb
pop
mov
or
mov
pop
pop
arpl
sbb
ret
fidivl
bound
scas
mov
mov
stc
add
push
jecxz
mov
xchg
addb
pop
ja
aaa
out
mov
and
pop
pop
sti
sbb
jne
dec
cmp
push
cs
jmp
sub
mov
pop
mov
adc
ljmp
outsb
add
fnstcw
or
jne
stc
idivb
out
or
leave
into
push
xchg
cs
std
fisubrs
cs
add
hlt
xlat
push
nopl
out
int
push
movsb
stc
addr16
jle
push
out
inc
dec
insb
les
push
adc
add
xor
xorl
xchg
mov
dec
xor
pop
lds
into
lret
pop
popa
shrb
data16
fwait
movsb
push
mov
mul
xchg
orb
popa
mov
push
mov
add
xchg
leave
and
popa
add
mov
addr16
sbb
ror
test
subb
lock
xor
out
orl
inc
lahf
adcb
jge
js
jl
cmp
test
movsl
idivb
jo
test
pop
lods
lret
rorb
cmp
adcl
xorb
push
fnstenv
xchg
mov
xchg
xchg
xor
mov
mov
test
push
lret
jo
or
or
add
cmpsb
test
sub
jg
mov
jne
sarl
and
add
outsb
inc
mov
mov
sbb
lret
roll
stos
out
enter
aas
jg
iret
cmp
mov
jns
inc
and
shlb
xor
jl
shlb
fsubrs
popa
ja
and
mov
ss
sub
adc
cmp
mov
cwtl
out
scas
aas
sub
pop
inc
adc
sub
or
loopne
xor
push
decl
dec
jp
mov
jne
mov
jl
mov
cmp
cmp
sub
pop
xchg
sub
in
cmp
dec
dec
mov
add
pop
push
jb
mov
mov
std
sub
lret
add
add
movsl
xor
je
push
insl
xchg
jecxz
dec
pusha
test
call
dec
pop
or
xchg
lds
imul
stos
push
test
repnz
sahf
sbbb
int3
pop
shr
mov
out
out
scas
jns
jns
jg
ljmp
dec
sub
xor
pop
or
das
repnz
jo
popa
loop
jg
xor
mov
shll
jae
in
ja
jb
inc
push
sahf
adc
jo
or
in
orl
xchg
jecxz
mov
stos
xor
out
lea
adc
push
jp
ficompl
nop
pop
mov
rolb
xchg
sahf
sub
lock
lods
cwtl
movsl
cmpl
xchg
pop
sar
jg
leave
cmp
in
inc
cmpsl
ret
fwait
mov
xchg
cmp
les
jb
shrl
icebp
cs
insl
sti
dec
cltd
mov
shr
adc
loop
shll
xchg
out
jg
adc
jle
insb
jle
leave
mov
push
sub
pop
dec
fwait
out
mov
repz
and
stos
test
push
or
xchg
dec
rcr
test
in
lcall
sbb
pop
mov
add
jno
insl
jo
inc
and
mov
shlb
aad
addl
inc
mov
push
mov
push
pop
sub
repz
jmp
cmp
sbb
imul
sarb
add
and
mov
fwait
add
aaa
dec
push
cmpsl
sarl
xchg
push
mov
cmpb
jmp
jmp
xchg
mov
or
jecxz
outsl
loop
ljmp
mov
jo
cwtl
fisubrl
dec
ret
fwait
adc
incb
jecxz
js
xor
hlt
and
xchg
mov
pop
jb
mov
adc
mov
imul
cli
aaa
divb
js
cmp
inc
sub
lods
nop
pop
inc
cmp
lods
xlat
inc
ds
test
xchg
pushl
xor
rol
inc
jno
push
cld
sti
jg
ds
xlat
push
pop
in
fisttps
mov
inc
mov
imul
inc
and
cmp
fcoms
jl
cmc
mov
sbb
into
je
add
jmp
ja
sub
ja
imul
fisttpll
fcmovnu
inc
mov
jg
fildl
orb
sahf
push
cmp
inc
mov
push
loope
je
in
outsb
jmp
fldt
out
or
jne
int3
aaa
shll
stos
in
pop
push
lea
push
les
and
mov
xor
daa
or
jg
add
sub
xor
je
mov
mov
ficoml
push
mov
gs
mov
xchg
mov
bound
pop
call
xchg
or
fwait
push
pop
nop
xchg
aas
dec
and
lahf
or
pop
sub
aaa
xor
dec
jno
jge
mov
and
pop
sbb
pop
mov
sbb
cli
ds
sub
js
inc
repnz
pushf
cmpsl
subl
cwtl
scas
xchg
sub
dec
xor
daa
inc
xor
pop
shrl
jge
mov
sbb
mov
jno
std
repnz
xchg
stc
dec
xchg
jl
test
add
orb
cmp
in
js
bound
mov
pop
stc
loope
inc
xor
int
sbb
jmp
cmc
out
fisubrl
fmuls
shrl
push
inc
adc
jecxz
addb
lds
add
imul
jne
loop
and
enter
or
mov
icebp
push
stc
pop
mov
mov
mov
push
dec
fistpl
addr16
addr16
je
popa
inc
inc
pop
jg
lods
mov
xlat
mov
push
popf
loopne
cmc
pusha
lods
cmp
sti
pop
xor
das
cs
xor
inc
fldt
jae
test
jno
sbb
stos
and
push
popa
pop
add
pop
repz
xchg
or
push
jmp
inc
test
jecxz
shl
pop
into
movsl
loop
pop
fdiv
mov
or
pop
aaa
dec
cmp
lahf
xchg
cmpsb
sub
cmpsb
leave
ret
mov
out
lcall
dec
jae
fmull
stc
stc
mov
iret
xchg
cmp
leave
scas
addr16
sbb
fwait
mov
cmp
sbb
push
dec
jno
loopne
cmp
push
iret
jb
xor
call
movb
stc
and
jl
ljmp
pop
sti
hlt
adc
and
jmp
cltd
push
jg
std
dec
fsubr
pop
pop
cmp
mov
xor
jecxz,pn
pop
lahf
stc
dec
mov
ficomps
dec
inc
adc
sub
sub
mov
data16
and
sarb
imul
sarb
sub
lcall
test
xchg
fcompl
aam
jo
mov
ficoml
mov
and
xor
mov
mov
and
pusha
sub
push
cltd
ret
testl
push
into
jbe
sbb
dec
jl
xchg
jp
test
push
add
dec
dec
addb
push
hlt
nop
scas
mov
push
pop
sub
lds
push
int3
les
rcr
sbb
and
ljmp
icebp
mov
cmpb
adc
dec
addr16
dec
pop
jl
fdiv
mov
inc
insb
lods
push
fdiv
mov
push
out
jecxz
jo
push
pop
xchg
loope
les
sub
lret
adc
lahf
mov
xchg
sti
enter
inc
mov
fcmovnu
test
push
test
rclb
jmp
and
ljmp
inc
push
psubd
hlt
fdivr
or
aas
shrl
lahf
pop
js
inc
mov
and
imul
test
imul
push
test
loopne
push
xchg
ljmp
addr16
mov
test
inc
sbb
fisubrl
adc
shll
nop
mov
cltd
inc
dec
stc
pop
xchg
mov
cli
and
jbe
dec
jmp
addr16
mov
and
lods
mov
mov
jl
fisubrs
cli
xlat
aas
repnz
jae
mov
es
fs
xchg
outsb
ret
lock
pop
orps
adc
mov
push
imul
push
add
inc
imul
loopne
adc
in
jl
mov
scas
pop
inc
test
testl
testb
push
push
lcall
jl
sbbb
enter
xchg
mov
fdivrl
loopne
xchg
cmp
incb
into
xor
cmp
shrl
add
pop
cmpb
leave
xor
pop
fistpl
mov
pushf
stos
sub
sbb
pushf
xchg
xor
xchg
jp
js
cmp
call
and
es
xor
mov
pop
or
ret
xor
aad
daa
and
cmp
shl
xorb
mov
in
jb
dec
adc
push
sub
jo
loop
outsl
jmp
xor
cltd
push
stos
pop
mov
hlt
adc
sub
and
add
add
nop
inc
sub
mov
xchg
or
pusha
ss
mov
sbb
aaa
or
clc
jno
mov
mov
or
xor
mov
add
sub
ret
push
xchg
stos
ja
jmp
enter
gs
sub
jl
out
jl
icebp
push
leave
mov
insb
fcoml
fwait
dec
mov
mov
jnp
push
stc
inc
mov
cli
add
xchg
jno
repnz
mov
push
stos
xor
bound
dec
mov
fadd
add
aad
jno
pop
mov
xchg
sahf
lret
call
rcrb
mov
jnp
fstpt
adc
mov
iret
dec
lea
call
cmp
fidivl
inc
lock
pop
jmp
test
xchg
pop
repz
xlat
out
jl
addr16
fiadds
push
repz
xor
cmp
or
ja
push
dec
popf
push
inc
push
mov
or
fsubrl
stc
adc
xchg
fs
add
test
ret
sbb
inc
aas
xchg
or
push
inc
daa
shl
xor
mov
nop
lea
lahf
or
inc
add
xor
jecxz
xchg
sbb
xchg
push
pop
sub
js
mov
fsts
lds
pop
jnp
mov
sub
insl
stos
insl
daa
aaa
out
lcall
ret
cs
pop
adc
jae
test
fistpl
into
mov
sub
pop
xor
inc
xchg
sbb
cs
push
stos
lods
test
dec
add
lods
cli
jmp
inc
jno
mov
popf
xchg
xor
pop
jnp
mov
mov
scas
cmc
stos
push
call
dec
stos
push
pop
mov
stos
addr16
jne
mov
cmp
pop
iret
push
insb
fdivp
pop
mov
and
mov
sub
movsb
outsb
mov
in
push
fdiv
bound
cld
leave
jle
adc
repnz
sbb
outsb
loope
mov
in
stos
push
push
ss
mov
push
aad
movsl
adc
roll
sub
idivl
sbb
or
push
test
mov
push
or
test
jl
lret
sub
insb
xor
mov
xchg
and
stos
es
pop
push
stc
xor
pushf
xchg
cmc
push
mov
fchs
dec
pop
mov
sub
or
jp
fisttpl
popf
test
adc
in
lret
jmp
dec
jmp
inc
notl
or
fnsave
mov
sbb
lods
xchg
cwtl
mov
ja
sbb
stc
insb
inc
std
sarb
adc
sub
adc
or
je
repz
jne,pt
mov
out
daa
jl
es
mov
js
add
adc
mov
xchg
pushf
pusha
int3
push
and
mov
mov
jmp
cli
add
fcmovb
sbb
inc
mov
stos
inc
pop
leave
lahf
stos
pop
movsl
pop
add
lret
cmp
xor
lods
outsl
cmovs
lret
icebp
push
icebp
out
ja
dec
cmp
cmc
popf
rclb
inc
mov
in
sub
mov
xchg
call
push
loope
inc
xchg
pop
jbe
aam
ret
stc
test
lods
negb
pop
inc
sbb
dec
jns
loop
sbb
sub
dec
cmpsl
stos
repz
add
sbb
pushf
outsb
fs
mov
push
ret
cltd
fidivrs
sbb
sub
orl
cmpb
ljmp
fs
jne
out
cmp
push
aad
jbe
movsb
jo
lock
adc
enter
dec
mov
js
xchg
cwtl
ss
sub
mov
daa
xchg
mov
mov
add
shrb
mov
and
addl
xchg
fisubl
lods
lock
fmul
fs
mov
int
mov
mov
push
jecxz
into
jnp
xlat
mov
cld
jb
push
fldcw
jb
push
outsl
subl
mov
mov
mov
and
lea
pop
dec
pop
mov
or
outsb
in
rcrb
shll
pushf
mov
int3
and
imul
scas
lods
mov
imul
dec
cmpb
movsb
in
lahf
inc
mov
icebp
jns
push
imul
or
pop
or
stc
aaa
xchg
inc
jg
lock
push
xchg
lahf
movsb
loope
aad
inc
out
daa
cmp
je
outsl
packuswb
pop
repnz
call
add
mov
popf
jbe
repnz
jge
dec
outsl
aad
push
mov
sub
adc
push
shlb
mov
add
sti
mov
xchg
inc
pop
sarb
mov
sub
pop
mov
mov
jmp
js
push
cmp
ljmp
leave
push
scas
mov
lods
imul
out
jmp
movsb
loopne
jp
pop
sub
scas
rorl
xchg
pop
mov
or
mov
testb
pop
movsb
cld
pop
xchg
stos
dec
popl
or
xor
mov
sub
pop
nop
es
cmp
stc
lock
push
jo
and
aam
jo
xchg
mov
in
add
push
ficoml
mov
push
test
xor
mov
push
mov
sbb
xchg
cs
fdivrl
xchg
lods
addl
push
call
lret
mov
imul
lock
sub
cmpsb
cmpsb
cmp
dec
mov
dec
sbb
out
hlt
call
test
cmpsb
repnz
xor
sbb
int
repz
add
or
iret
call
mulb
add
xchg
cli
in
jge
int3
push
ja
dec
in
fidivrl
vshufps
leave
insl
or
and
mov
sbb
adc
lcall
sub
sbb
mov
sbb
fsubr
lds
jmp
inc
cltd
cmp
adc
scas
mov
xchg
mov
cmp
push
add
adc
sub
or
neg
insl
out
test
repnz
xchg
mov
or
cmp
add
dec
ss
icebp
das
dec
mov
loopne
decl
inc
pop
mov
ja
or
enter
rol
outsl
mov
push
add
ss
shll
push
inc
cmp
inc
xor
ret
into
out
inc
mov
out
xchg
sar
aaa
xor
icebp
lret
and
or
mov
xor
pop
testb
rcll
fildll
jae,pt
fists
mov
push
mov
xchg
stos
imul
int3
imul
shlb
sub
inc
xchg
cld
movsl
stos
xchg
daa
clc
pop
push
xlat
loope
push
movsb
mov
mov
outsb
sub
sbb
xor
jmp
push
js
dec
addl
outsl
data16
mov
cltd
bound
cmp
xchg
es
inc
xor
outsb
push
xor
sub
cmp
iret
jecxz
push
outsb
add
in
sub
adc
add
adc
mov
mov
movsl
jmp
xchg
in
xchg
sti
mov
push
fdivs
imul
push
inc
movsb
add
outsl
push
and
cmp
and
inc
cmp
xchg
pop
mov
in
jl
pop
inc
mov
dec
inc
inc
and
mov
sarl
push
not
push
pop
fidivrs
jmp
aam
push
testl
dec
mov
add
mov
add
jmp
test
shl
push
xor
lods
sbb
sub
push
rcrl
mov
ljmp
sbb
mov
stos
or
adc
xchg
pop
mov
cltd
mov
cld
and
lock
sahf
mov
push
xor
test
popf
adc
sarl
jae
push
sub
jl
dec
lods
bound
and
push
mov
inc
mov
add
sbb
lea
xor
addr16
and
clc
addb
mov
int
hlt
movsl
cmp
lods
inc
aad
jle
orl
stos
aam
nop
mov
jo
adc
and
jbe
or
mov
mov
push
stos
lahf
sti
push
in
int3
icebp
cmp
js
xor
outsb
in
xrelease
inc
pop
enter
and
je
shrb
lock
sub
out
adc
xor
jns
sbb
pusha
sbb
or
mov
jo
and
jmp
in
sarb
pop
fbstp
mov
hlt
test
out
cmc
sbb
push
jmp
fst
pop
in
dec
cmpsl
into
insb
pop
xchg
sub
es
rcr
cmp
sub
xchg
jo
sub
imul
pop
xor
loop
pop
jmp
cmp
mov
ds
pop
xor
outsb
pop
ror
inc
lds
insl
sub
pop
jmp
xchg
int
and
lahf
mov
fstpt
jae
sub
adc
in
loope
add
cltd
in
mov
mov
jg
mov
bound
sti
xchg
adc
sbb
adc
jae
int
pop
sbb
sbb
jb
lock
iret
jne
xor
inc
adc
scas
fidivrl
or
adc
add
pop
sbb
adc
pop
fistpll
sbb
fcomps
dec
dec
dec
orl
mov
mov
cli
mov
stc
xor
dec
das
testl
nop
lcall
dec
movsb
xchg
into
cwtl
adc
jmp
daa
std
sbb
testb
dec
mov
ss
xorb
fucom
test
adc
into
repnz
mov
lahf
nop
mov
fsubs
sub
subb
rorl
cld
loope
movsb
out
sbb
sub
outsb
imul
jmp
xchg
mov
pop
aad
clc
repnz
mov
and
push
cmp
shll
or
std
sbb
sub
jae
sub
jns
cmovg
cmp
and
or
add
addr16
icebp
or
clc
xchg
enter
mov
push
sahf
cmp
cmpsl
dec
push
iret
mov
mov
je
xlat
in
paddd
das
popf
pop
mov
mov
gs
lock
cmp
addr16
int
push
scas
inc
inc
xchg
lea
inc
mov
fldt
subb
mov
jo
mov
cmp
adc
cmp
jno
inc
push
in
mov
in
xchg
sahf
and
fimuls
adc
dec
adc
shrl
es
ljmp
cmp
cmp
push
fs
iret
ljmp
into
jo
sbb
pop
adc
or
out
shlb
cmp
iret
es
cmc
das
out
sub
jno
in
lret
pusha
or
dec
outsl
mov
jmp
push
lods
and
hlt
test
sahf
xchg
popf
push
ret
mov
sub
inc
fnsave
out
adcb
pop
out
or
sbb
les
jmp
push
sub
mov
push
and
mov
andb
mov
hlt
or
insl
pop
fiadds
xchg
js
sub
outsl
jp
lds
push
and
stc
ficompl
push
ljmp
mov
cltd
xor
and
push
movzbl
pop
pushf
push
inc
mov
inc
xor
shr
jno
xchg
popa
add
cwtl
mov
mov
sbb
fsubl
jns
arpl
cld
test
cwtl
arpl
xor
lcall
es
push
add
add
push
js
add
les
mov
and
sbb
out
dec
lret
jp
movsb
inc
orl
mov
lods
jns
idiv
idivb
sbb
mov
dec
fmull
pop
pop
jbe
or
popf
je
sbb
add
int3
sub
pop
jns
dec
jbe
dec
adc
rol
divb
jle
test
lds
cmp
inc
out
dec
pop
fdiv
jbe
pop
sbb
and
fninit
pusha
cltd
jmp
out
sti
rorl
adc
fimuls
lret
or
add
or
lcall
ret
mov
or
aam
sub
lret
sbb
sbb
sub
imul
ss
adc
ljmp
sub
mov
pop
jecxz
mov
or
sahf
fisttpll
lret
adc
movsl
pop
mov
sarl
pop
es
push
je
mov
pop
sarb
sbb
push
es
fucomp
mov
das
ja
mov
mov
xlat
int3
sbb
cmc
jle
adc
or
bound
or
bound
jb
hlt
sub
out
cmp
mov
dec
jge
mov
add
pop
adc
or
add
mov
iret
sbb
rorl
and
aaa
and
movl
leave
cltd
mov
pop
imul
int3
and
arpl
adc
mov
or
iret
aad
stc
dec
scas
mov
inc
inc
out
ja
in
pop
or
stc
sbb
mov
xor
rcrb
shlb
jmp
shr
in
or
inc
pop
das
aad
mov
loopne
bound
stos
lret
iret
int3
adc
sbb
insb
imul
scas
int
nop
push
adc
pop
imul
or
iret
mov
dec
jae
sbb
outsl
lods
jb
inc
jo
lock
mov
jge
add
xchg
test
sub
mov
push
outsl
pop
pop
add
adc
imul
je
dec
add
bound
dec
inc
xchg
aaa
fwait
loopne
xchg
shrb
sub
mov
shrl
repnz
outsb
lret
push
mov
add
gs
in
stc
mov
lret
and
push
mov
pop
add
and
jp
and
pop
cmp
lret
xor
arpl
mov
cmpl
in
out
mov
xchg
sub
jae
mov
and
fisubrs
push
bound
lahf
mov
test
sub
scas
iret
cmp
int3
mov
popf
clc
call
imul
fcmovnbe
sbb
imul
mov
inc
outsb
repz
mov
imul
mov
dec
test
add
stc
pusha
or
lea
jmp
add
add
mov
in
mov
daa
mov
and
mov
sarb
psubd
lcall
xchg
push
addr16
or
xor
jle
dec
dec
xchg
jbe
sbb
push
mov
add
mov
lahf
push
add
arpl
enter
movsl
sti
mov
loop
stos
orl
adc
adc
scas
xor
xor
jbe
dec
negb
sbb
lret
lret
loop
sti
pop
cwtl
inc
lahf
adc
dec
inc
adc
jl
sbb
movsl
gs
push
dec
ret
xchg
scas
popa
and
sbb
fldl
xchg
mov
das
jne
push
xor
in
push
ja
sbb
lret
out
and
cwtl
out
stos
loop
fstpt
clc
mov
lret
movsl
sub
or
pop
jo
fisttpl
and
mov
jl
lahf
mov
mov
jecxz
jge
loop
push
fldln2
ret
aas
cmp
and
lock
cmp
sahf
addr16
adc
add
dec
outsl
sub
mov
pop
jns
and
sbb
out
flds
or
pop
mov
aad
scas
inc
cmp
pusha
mov
lods
jmp
jns
sbbl
insb
cmp
das
xchg
mov
dec
cwtl
idiv
imull
clc
lods
lea
ljmp
or
jb
mov
inc
cwtl
add
inc
fxch
xchg
dec
fimuls
push
pop
fisubs
cli
pop
js
test
add
mov
int3
add
shlb
outsl
cmp
ror
xor
fs
inc
sub
or
adc
push
jg
lret
adc
pop
roll
mov
push
adc
add
gs
sar
addl
lods
orb
ror
pushf
adc
incl
cmpsb
push
inc
dec
lret
into
sbb
sti
mov
pop
mov
lock
lock
mov
mov
aas
dec
xchg
push
mov
and
jae
xchg
jbe
ljmp
mov
dec
in
add
xchg
cmpsl
call
into
mov
aaa
or
push
and
shlb
push
cmp
dec
jae
inc
ficoms
push
or
arpl
mov
das
inc
xor
sahf
stos
into
fcmovnb
fistpl
pop
int3
lods
sbb
call
jno
adc
jge
jno
mov
and
add
inc
sub
sti
and
dec
into
sub
sub
lcall
pop
les
fwait
dec
mov
inc
jp
pop
daa
cmpsb
xchg
push
imul
add
pop
int
leave
daa
loope
popa
popa
rcl
inc
outsb
in
adc
adcb
test
xor
cwtl
ret
lahf
pop
outsl
lea
ret
popa
es
hlt
dec
pop
int3
inc
and
mov
xor
jl
in
out
push
adc
sub
movsb
lahf
je
mov
int
das
xorl
mov
mov
negl
scas
adc
sti
test
jmp
shl
mov
add
int3
loopne
cmpsl
fucom
lcall
les
push
imul
cmp
imul
sbb
bound
ja
iret
sbb
fildl
lcall
lcall
mov
jb
mov
inc
xchg
push
cld
jbe
pop
and
adcl
and
jp
push
jmp
xor
pop
lods
scas
inc
or
and
ret
adc
inc
mov
adc
ljmp
inc
addb
and
imul
fwait
sbb
mov
sbb
in
add
ljmp
daa
xlat
and
jo
mov
xchg
push
inc
sbb
mov
mov
pop
shlb
sti
push
imul
cld
push
lahf
sbb
push
or
ror
sbb
es
aas
dec
push
daa
jge
leave
ror
insl
lahf
jecxz
sbb
mov
or
push
mov
adc
push
aas
dec
or
test
lods
mov
out
std
les
lods
mov
movsl
sti
cld
pop
in
cmp
lar
or
dec
ljmp
movsb
or
push
jecxz
popa
js
ds
pop
leave
dec
pop
or
insb
sahf
jno
push
call
add
adc
xchg
loope
push
pmaxub
pop
lods
lea
stos
jp
fimull
xor
call
dec
into
pop
dec
add
mov
popa
mov
out
mov
jle
sub
mov
sbb
pop
and
and
inc
cmp
decl
mov
and
jb
sub
daa
pop
insb
addb
incb
mov
daa
push
cmp
pop
negl
popa
test
or
cltd
pop
imul
loopne
sahf
mov
es
pop
mov
push
mov
fs
mov
push
iret
xor
mov
rclb
faddl
mov
mov
inc
icebp
xchg
imul
pushw
push
inc
jb
dec
and
sub
xor
xor
clc
fistl
lods
outsb
out
lock
arpl
rolb
sbb
lahf
cmc
pop
sbb
xchg
jecxz
mov
adc
dec
push
cmp
lret
in
xchg
mov
dec
sub
xchg
loop
and
gs
inc
repz
repnz
into
mov
scas
pop
sub
dec
jle
add
loop
lds
fcom
shlb
lock
mov
adc
test
in
shrl
sbb
fincstp
out
lret
cmp
adc
sub
int3
add
loop
call
inc
inc
out
xor
adc
xor
and
enter
fcomps
xchg
sahf
mov
clc
imul
xchg
popa
jl
subl
cmp
xchg
pushf
adc
and
stos
mov
lret
rorl
sub
mov
inc
aaa
lods
mov
hlt
test
jmp
test
test
scas
dec
loopne
dec
jo
xchg
inc
repz
pop
sahf
pop
pop
add
das
mov
xchg
sub
dec
sahf
shrb
stos
ljmp
add
inc
in
sub
pop
inc
xor
insl
pop
notb
insl
add
enter
hlt
adc
hlt
sbb
les
pop
xorb
mov
mov
cmpsl
xchg
and
je
mov
cmp
add
fwait
sti
mov
mov
pusha
and
jle
sahf
xchg
xor
test
dec
popa
or
xchg
adc
movsb
jb
in
repnz
popf
ljmp
mov
sti
jl
or
testl
je
dec
ret
adc
cwtl
lcall
cmp
adc
mov
outsl
ljmp
jne
pop
pop
sbb
cli
push
cmp
sub
es
lods
sbb
sarl
int
or
inc
sub
or
jge
int
out
push
push
lahf
mov
orb
sti
xchg
pop
insl
idivl
mov
push
into
jl
lahf
movnti
cmp
std
mov
fcmovnu
pop
jae
test
out
inc
cmp
inc
xchg
scas
add
pop
popf
sbbl
scas
add
rcl
in
or
sahf
sbb
mov
movsl
lret
inc
xchg
mov
in
mov
dec
dec
or
xchg
notb
test
aas
xchg
adc
cmpb
jo
out
dec
insb
xchg
fsts
ficompl
les
mov
arpl
inc
mov
cwtl
adc
sub
enter
iret
inc
imul
dec
ret
dec
push
lock
shlb
iret
idivb
jl
shrb
int3
ss
add
inc
mov
mov
stos
cmpsb
dec
inc
push
cmp
leave
out
hlt
mov
ja
dec
mov
mov
add
test
dec
inc
xor
sub
adc
mov
test
add
das
push
push
test
dec
adc
inc
sti
jmp
imul
out
jne
mov
lcall
push
aas
xchg
mov
insl
push
inc
pop
je
sarb
int3
mov
pop
sub
fwait
sub
mov
pop
aam
jns
imul
mov
sub
jl
or
cmpsl
xor
stc
in
sbb
test
shrl
and
ret
mov
aad
addr16
pop
lcall
stos
je
call
dec
pop
cwtl
loopne
jg
test
clc
shl
or
pop
out
cvtdq2ps
out
js
add
out
in
aad
adc
ja
outsb
add
loope
aaa
stos
pop
push
fdiv
add
mov
mov
add
movsb
push
mov
cmp
mov
out
scas
jg
mov
ficoml
pop
lret
or
adc
inc
negl
loopne,pt
in
int
inc
imull
mov
test
insb
stos
mov
scas
dec
xor
xchg
lret
push
leave
cmp
xor
dec
sub
dec
out
add
and
int
ret
or
dec
les
adc
xchg
jl
inc
mov
enter
in
cmp
jge
aaa
pop
dec
leave
or
mov
rorb
fisttpll
sbb
out
shrb
mov
mov
outsl
sbb
xor
in
scas
lret
aaa
sub
xchg
jo
movsb
mov
hlt
jmp
cmpsl
inc
into
scas
imul
and
push
in
xor
pop
xorl
lret
data16
push
sbb
mov
aas
jb
sbb
pop
sub
dec
sbb
in
les
xchg
dec
jmp
fisubs
sub
adc
popl
fcmovnbe
xor
cmp
or
push
ret
insb
ret
dec
push
popf
adc
cmpsl
jbe
add
cmp
movsl
adc
adc
mov
mov
scas
add
int
pop
cmp
clc
aad
push
add
stc
ret
xchg
cs
das
adc
test
xchg
adc
orl
icebp
lods
inc
scas
outsb
add
scas
dec
adc
adc
lea
out
mov
sub
aad
xlat
jb
ja
adc
fisubs
inc
stos
test
jecxz
jl
lea
sub
sti
push
ret
jg
jo
jb
fcoml
iret
ficomps
in
cmpsb
fstp
in
sub
fcom
add
or
cmp
adc
pushf
daa
mov
mov
and
mov
adc
scas
imul
out
and
add
push
fcoml
mov
cmp
nop
cvtpi2ps
or
or
xor
not
popl
addl
imul
adc
imul
push
xchg
dec
rcll
pop
xchg
xchg
cmp
adcl
lret
outsl
mov
and
leave
pusha
sub
or
negb
cmp
or
std
xor
adc
pop
test
adc
and
push
mov
dec
sub
out
imul
dec
or
ret
and
js
mov
fwait
sbb
xchg
inc
push
mov
inc
fsubrp
mov
cmp
cmp
or
out
cmp
sub
in
adc
lcall
lods
enter
jle
jmp
sub
loop
daa
push
add
and
mov
pop
std
into
inc
cmp
imul
sub
sbb
add
pop
inc
std
pusha
jno
mov
push
jge
aaa
mov
stc
jge
pop
add
pop
popf
push
pop
jecxz
mov
sub
jmp
clc
mov
js
mov
inc
shrl
movsb
test
sub
cmp
cmp
add
jmp
inc
mov
push
daa
mov
into
repz
adc
push
jbe
sti
mov
fimuls
cld
call
sbb
fisubl
imul
pop
inc
fs
ficoml
adc
test
movsl
push
icebp
xchg
push
sbb
enter
out
in
mov
insl
orl
mov
imul
test
push
mov
test
jns
sbb
pushf
and
in
int
mov
lcall
nop
sub
lret
lds
push
pushf
movsb
sbb
cmp
inc
lods
in
call
loop
sub
mov
dec
loop
xchg
and
mov
sub
cmc
xchg
xchg
outsl
pop
test
dec
incl
pusha
cmp
and
and
push
ficoml
xlat
or
and
cmp
xor
in
sbb
lods
jmp
icebp
add
fisubrs
imul
rcll
leave
fsubl
mov
mov
cmp
pusha
jmp
pop
jle
sub
test
shrb
mov
mov
cmp
inc
ficoms
imul
lret
push
dec
into
mov
clc
int
out
int
or
jnp
scas
int3
std
mov
nop
flds
add
push
popa
test
sbb
loopne
pop
xchg
lock
xchg
test
xor
lret
ja
imul
jmp
int
xor
mov
xor
push
mov
fs
lds
mov
pop
xor
pop
or
add
sub
adc
cmp
adc
mov
sbb
pop
mov
test
mov
cmp
testb
and
loope
xchg
sahf
jmp
fld
movzbl
inc
in
inc
notb
roll
mov
xchg
or
xor
int
daa
pop
aas
push
mov
jp
cs
into
dec
ljmp
sti
jge
xor
jnp
adc
gs
sbb
mov
pop
adc
adc
pop
bound
jl
and
enter
jne
outsb
shl
sahf
sbb
dec
add
fimuls
jmp
jbe
xor
pop
idivb
xchg
fstps
or
out
sti
sbb
arpl
inc
pop
xchg
pop
mov
cmp
dec
in
stc
fwait
mov
push
xor
insb
xchg
data16
call
mov
repnz
js
dec
jp
fnstcw
movsl
jecxz
sbb
inc
iret
jp
rclb
inc
cli
add
dec
aaa
pop
iret
iret
nop
iret
out
sub
and
test
adc
xor
in
mov
std
pop
mov
xchg
or
rcr
out
pop
adc
push
mov
aaa
hlt
mov
add
pop
pop
out
mov
lahf
pushf
loope
xor
push
les
dec
xchg
subl
xchg
inc
in
cmp
xchg
es
jg
sub
lret
js
in
push
js
loopne
mov
mov
mov
stc
roll
loopne
sahf
dec
fwait
jne
and
adc
push
sub
cmp
nop
and
or
inc
add
mov
inc
xor
cld
ficomps
lret
cwtl
or
and
cmp
or
mov
add
sub
push
aam
push
adc
mov
into
jnp
xchg
xchg
cmpsb
push
cmp
scas
movsl
mov
ret
rclb
adc
sahf
arpl
in
scas
sub
into
and
adc
adc
jg
dec
movsl
inc
insb
push
ret
mov
sbb
push
shr
mov
bound
pop
mov
push
insl
xchg
cmc
sbb
stos
lret
lds
in
pop
sbb
cmp
and
aad
fs
ljmp
or
lods
pop
test
aam
mov
mov
jne
mov
add
imull
add
push
mov
ss
lret
push
pop
repz
xchg
push
mov
jne
popa
xchg
push
loopne
cmp
cs
sbb
data16
int
ja
minps
cmp
ss
xchg
int
das
and
and
sbb
out
cli
mov
in
fwait
popf
in
pop
mov
or
add
cltd
dec
inc
andl
test
in
in
and
inc
lret
jle
dec
jne
loopne
test
fwait
scas
sti
adc
mov
cmp
orb
scas
pop
dec
pop
lock
fbld
sub
rcrb
dec
sbb
pop
mov
xchg
std
es
or
mov
or
cmp
and
addl
adc
dec
pusha
lret
pusha
mov
mov
fldenv
mov
mov
jb
lret
leave
jge
imul
imul
ret
pop
and
push
cmp
cmpsl
dec
inc
repz
leave
pop
loope
or
das
sbb
adc
sbb
addb
or
dec
cmpsb
rolb
sbb
mov
pushf
dec
sahf
cs
in
add
ljmp
addr16
js
rcll
popf
int3
jo
aas
cmp
adc
fstpt
cmpsl
push
and
inc
pop
sub
jae
cmp
cmp
inc
std
lcall
icebp
popf
sbb
sahf
or
scas
mov
js
mov
pop
jne
mov
rcll
loope
adc
inc
test
sbb
dec
pop
shl
sbb
adc
das
daa
pusha
in
out
bound
out
push
shl
out
arpl
jmp
mov
push
mov
lret
lock
xor
mov
mov
popf
cltd
adc
adc
adc
sub
lock
pop
cmp
inc
les
das
jle
stos
pop
mov
mov
bound
lds
jns
add
add
shrb
or
pop
ss
cmc
push
stos
ficomps
or
xchg
mov
or
repz
lahf
jle
pusha
sbb
les
in
sti
insl
clc
loope
cld
lds
dec
pop
into
xlat
test
mov
mov
add
inc
call
mov
popf
int3
jo
sbbb
stos
mov
lret
iret
cmc
imul
cmp
icebp
xchg
ffreep
insl
lods
add
push
dec
push
dec
pop
adc
inc
cmpsl
arpl
pop
xor
pop
enter
jae
xchg
xor
pop
dec
das
mov
aaa
in
xchg
pop
test
and
xor
arpl
scas
sbb
lahf
mov
outsl
popf
insb
mov
jnp
fdivrl
xor
mov
scas
adc
subl
in
sbbl
mov
arpl
push
xchg
scas
outsl
into
xchg
mov
stos
push
jl
outsb
ljmp
and
popl
nop
push
xorl
add
mov
adc
pop
fldl2e
je
call
pop
jo
outsb
mov
es
out
cs
push
pop
xor
imul
mov
fists
int
cmp
fnstenv
bnd
popf
sbb
outsb
mov
mov
out
pop
fisttpll
and
lahf
inc
mov
int
cmp
cmp
or
mov
xor
repz
and
scas
aas
std
pop
sbb
test
or
aad
lea
adc
addr16
pop
pop
xorb
inc
or
inc
add
mov
cmpsl
mov
fistl
push
jmp
add
or
and
repz
adc
sub
gs
cmp
pop
xchg
int3
lret
stos
mov
sbbb
out
mov
loope
adc
cs
xchg
sbb
jmp
movsb
push
cmp
lea
es
repnz
into
and
addr16
cmpb
mov
mov
jns
aam
jne
outsb
and
jo
pop
shl
adc
pusha
out
push
pop
jecxz
push
fildl
fildll
adc
testl
push
and
mov
sub
pop
dec
sbb
mov
ds
xchg
sbb
jne
test
lcall
gs
in
pop
add
or
js
out
sub
pop
in
dec
and
pop
outsb
pop
fimuls
or
insl
js
push
out
call
adc
sti
sbb
dec
pop
insl
pusha
fmuls
leave
push
scas
jne
mov
neg
leave
ret
push
push
mov
push
test
inc
jl
mov
adc
outsb
inc
iret
call
notb
lahf
outsb
jg
insl
mov
xor
push
inc
xor
pop
xchg
inc
cmp
mov
add
mov
push
dec
lods
ret
rcpps
push
out
push
fstpt
push
test
cmp
insl
mov
jl
jl
jae
mov
xor
jle
mov
dec
in
and
push
cmpb
add
push
xor
sub
xor
fildll
jge
decb
pop
mov
testb
inc
pop
dec
vcvtps2pd
imul
bound
insb
imul
xchg
jns
jle
and
mov
int3
adc
sbb
jo,pn
xor
sbb
dec
int3
shrl
xor
lods
icebp
cmp
inc
divl
jns
test
fcoms
sub
xchg
into
mov
mov
and
std
jl
lds
arpl
in
pusha
xor
ffreep
enter
add
jae
add
jg
mov
nop
sbb
pop
or
fidivs
lods
cmp
sbb
push
or
or
clc
jge
xchg
out
pop
or
sub
mov
push
pop
pop
insl
push
pop
fnstcw
jne
dec
icebp
rorl
mov
jmp
aad
call
mov
xor
mov
shrb
out
add
mov
lcall
ja
push
imul
into
lret
xor
mov
int3
jb
jp
jb
std
push
dec
mov
call
andb
loope
out
or
lock
push
mov
mov
repz
mov
daa
push
inc
sub
int
or
mov
cmc
lods
mov
fwait
inc
mov
adc
pmaddwd
adc
sub
jecxz
pushf
cmp
les
xchg
adc
nop
enter
je
cmp
xchg
movsb
xor
add
jae
or
mov
push
push
repz
mov
fwait
int3
cmp
pop
and
std
cmpb
mov
mov
inc
dec
push
dec
outsb
divb
sub
repz
adc
push
repz
jno
ficomps
xor
sti
sbb
push
ljmp
stos
rolb
pop
adc
add
ds
cmp
jns
mov
cwtl
sub
repnz
ret
outsl
shlb
adc
mov
ret
and
kxorb
aas
in
jbe
fcom
push
mov
xor
insl
aad
pop
js
rcl
xchg
jge
add
mov
and
jo
js
xchg
stos
fnstenv
ss
jns
dec
inc
jp
lods
fildl
outsl
and
adc
xchg
xchg
xor
test
adc
jle
jb
insb
insl
mov
fimull
sbb
and
rep
mov
divl
xchg
imul
or
sbb
xchg
sub
rclb
ss
xorl
pop
cmp
cmp
xchg
in
std
mov
js
rorb
adcl
jb
mov
fcoml
in
out
add
sbb
loopne
aas
aad
icebp
aad
jge
rcl
xchg
in
les
xchg
in
inc
mulps
stos
pop
dec
sbb
and
data16
les
push
testb
test
loop
pop
in
insb
stos
mov
cmp
mov
sub
out
dec
out
mov
sub
sbb
adc
xchg
mov
pop
sub
repz
xchg
cmp
xor
mov
cmp
inc
cltd
inc
push
jnp
add
call
xor
cwtl
mov
movsb
lds
xchg
jnp
mov
movsb
or
inc
push
nop
js
sbb
pusha
enter
imul
mov
inc
or
sub
jns
fnstsw
xchg
popf
sti
pop
sti
sub
dec
mov
sub
or
adcl
push
arpl
inc
imul
dec
sub
mov
fiadds
mov
sbbl
cmp
xor
mov
mov
mov
push
mov
repnz
xchg
ret
xchg
rclb
stos
mov
sub
fdivrs
jmp
pushf
sub
pop
iret
jne
imul
fwait
mov
jno
pop
mov
adc
int
cmp
popf
pop
mov
insb
cmp
shll
sub
cmpl
jo
xchg
dec
dec
int3
js
in
sahf
mov
fs
int
je
push
fs
xor
sbb
in
inc
xchg
sti
leave
jle
sbb
lret
loopne
pop
lcall
insl
jg
aas
stc
cltd
add
ljmp
push
int3
aad
cmc
or
hlt
outsl
pop
dec
xor
lods
aaa
cmc
inc
dec
dec
push
adc
mov
in
add
sbb
xchg
mov
test
push
popf
mov
pop
and
call
enter
outsb
test
fildl
cmc
ret
aam
add
dec
push
or
sub
xchg
adc
fnsave
ljmp
xchg
push
pusha
lods
dec
loop
daa
sbb
mov
sti
cld
lods
jecxz
push
xchg
jae
mov
push
pop
ja
cmpps
cmp
dec
and
jge
fnstenv
cmp
jmp
pop
cltd
lods
lea
cmp
mov
sbb
addr16
aam
cmpsb
cs
mov
jl
sub
mov
xchg
mov
ds
push
xor
dec
mov
aam
shlb
cs
xor
imul
icebp
ds
in
cmpsl
fcompl
jp
add
sub
or
aam
or
mov
jno
push
adc
outsl
int
movsl
and
sahf
lahf
out
int
xchg
adc
cmpsl
dec
sub
or
pop
lods
push
in
gs
scas
adc
or
add
sub
xor
sbb
aad
mov
test
or
adc
repz
ss
cltd
lods
fisttpll
test
stos
sbb
sub
lods
test
jl
repz
push
mov
adc
sub
idiv
jg
sub
xchg
js
jns
cltd
inc
cmpsl
pop
fs
mov
xchg
adc
call
repz
cltd
mov
mov
test
aaa
mov
in
mov
sub
js
pushl
fcmovne
mov
shlb
fwait
xchg
repz
clc
mov
lea
repz
push
pushf
or
jle
icebp
xlat
cmp
cld
sbb
pushf
sub
cmpsb
jb
push
rolb
adc
push
es
xchg
ss
add
push
in
pop
lock
sbb
popa
mov
pusha
xchg
jb
pop
pop
repz
mov
bound
shlb
leave
jb
call
mov
stos
and
fcmovbe
cmp
jle
dec
pop
pop
pop
rolb
fisttpll
sbb
and
or
loop
out
int3
push
push
mov
test
addr16
cmpl
popa
sbb
popa
pop
jns
adc
pop
xor
xchg
mov
std
and
and
mov
std
lahf
icebp
push
in
subb
test
pop
faddp
xchg
lret
outsl
push
ds
hlt
sar
shl
ss
scas
mov
pop
or
pop
inc
or
or
jmp
cltd
sbb
push
imul
loope
subb
push
sub
out
inc
sub
ret
mov
ds
call
int3
inc
into
icebp
in
cmp
sub
jo
movsb
cmp
stos
pop
add
jae
push
cmpsb
out
dec
xchg
push
xchg
sti
and
sbb
shll
nop
pop
mov
xchg
mov
jge
daa
fnstsw
jl
fildll
sub
jle,pn
out
adc
lahf
fildl
cli
xlat
aad
mov
jns
sarl
dec
out
push
sub
iret
gs
orb
mov
hlt
push
adc
repz
cs
xlat
sahf
ret
mov
sti
pop
and
cmp
pop
sub
imul
rolb
pop
jl
adc
and
pop
repz
aas
jl
push
jmp
adc
dec
jge
sub
test
cmp
lods
mov
outsb
mov
std
lds
insb
iret
popa
add
mov
popf
out
jmp
out
movsl
pushf
jp
movsb
dec
dec
sbb
loop
push
mov
fmuls
xchg
out
mov
push
cmp
in
jns
popa
scas
and
fs
cmp
push
add
adc
sarb
jae
test
mov
sbb
call
mov
lea
stc
sti
cmp
push
stc
outsl
xor
dec
bound
in
int3
in
loop
insb
adc
scas
mov
popa
lea
sahf
cmpsb
ja
push
or
sub
lds
dec
pop
pop
pushf
fs
xchg
imul
out
xchg
test
jle
adc
push
cmp
arpl
aaa
dec
inc
nop
pop
xchg
inc
enter
je
sub
bound
ds
sbb
cmp
mov
sub
mov
mov
repnz
ss
imull
popa
sub
mov
icebp
pushf
test
mov
pop
lea
test
jae
adc
and
cmpsl
addw
fmuls
cmc
in
mov
jo
mov
inc
insb
add
jle
cltd
aaa
les
jl
xchg
call
fnstsw
movsl
inc
int
bound
cmpsl
adc
gs
addl
sarb
aad
data16
out
jb
lcall
xchg
pop
pop
lods
jbe
dec
xchg
scas
ficomps
or
xchg
push
inc
dec
lahf
xor
xor
subb
cs
rcl
pushf
add
dec
mov
shll
dec
insb
pop
jg
lcall
inc
jmp
xchg
das
test
pop
addr16
aas
imul
mov
shll
cwtl
sub
jge
jbe
aaa
leave
testb
rcl
aaa
jmp
mov
inc
imul
mov
loopne
jo
mov
js
xchg
cmp
ret
cmpsl
cltd
test
cli
rcrb
call
bound
test
int
lods
jo
mov
lds
mov
sbb
cmp
ret
or
xchg
sbb
mov
aaa
inc
push
cmp
mov
jno
rolb
dec
and
in
popa
xchg
gs
or
iret
xchg
push
xchg
dec
xorb
roll
inc
jbe
pusha
push
mov
inc
int3
cltd
dec
arpl
mov
rclb
enter
or
in
std
jo
xchg
or
out
sub
dec
testl
xor
xchg
pushw
sub
adc
pop
jp
dec
aam
mov
xor
sbb
pushf
mull
inc
arpl
jle
xchg
xor
jle
inc
imul
ja
jge
imul
ja
sbb
mov
in
cmp
dec
adc
ret
mov
in
jmp
fcompl
xchg
pop
cli
shl
out
add
repz
movsl
cmp
dec
or
pop
push
loopne
out
dec
adc
xchg
stc
xchg
outsl
inc
inc
test
xor
jns
dec
push
dec
movsb
mov
mov
mov
sbb
mov
lods
repz
ss
jo
jnp
sbb
imul
xchg
jmp
fstpt
and
adc
mov
jb
pushf
cmc
xor
xchg
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
xlat
xchg
lcall
inc
push
push
scas
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
push
ret
xor
sbb
mov
sub
inc
inc
jno
stos
xor
lods
sbb
insl
cmp
push
or
lods
sbb
insl
lods
sbb
insl
jmp
jmp
jmp
call
stos
into
add
pop
jl
add
or
ss
icebp
mov
lea
in
movsl
int3
lds
adc
into
cmpsb
jnp
pop
adc
xchg
jno
dec
jmp
loopne
jle
test
popa
inc
mov
jb
les
ds
pushf
fs
movzwl
imul
leave
repnz
iret
js
fnstenv
xchg
rcr
push
icebp
inc
sbb
adc
xchg
fstpt
popf
xlat
jns
dec
ljmp
testb
sbb
lcall
cmp
movsb
adc
ja
shll
xor
or
nop
pusha
jnp
push
jg
xchg
sbb
inc
std
cmp
frstor
jmp
jg
mov
out
and
xchg
inc
mov
adcl
jl
insl
inc
jnp
sbb
xor
push
insl
mov
mov
popf
out
sub
scas
aas
mov
dec
lock
fiaddl
mov
adc
insb
das
in
jecxz
push
push
leave
and
jge
shlb
sbb
xchg
jno
aas
incb
push
pop
sarb
mov
fisttpl
and
mov
jmp
fsubrs
jecxz
push
dec
push
das
pop
ljmp
add
add
jl
ret
adc
lock
jae
pushf
ljmp
xchg
gs
mov
mov
xor
pop
adc
lret
je
aad
ja
fisubrs
repz
fdivrl
cmp
pop
xchg
pop
mov
movsl
inc
shrb
jne
mov
ror
xchg
mov
gs
data16
scas
or
sub
jg
pop
adc
push
jne
dec
jae
pop
scas
stos
push
mul
mov
sbb
testb
add
inc
je
adc
sbb
add
enter
pop
cli
xchg
mov
and
insb
sub
sub
in
mov
movsl
sub
xor
adc
jb
adc
pop
mov
jge
adc
mov
mov
test
mov
lock
sbb
sbb
fwait
or
ss
xchg
call
sbb
mov
cltd
mov
daa
loop
out
test
movb
mov
lret
scas
jbe
and
icebp
and
insb
xchg
xor
int3
pop
push
clc
aas
ret
and
out
cli
xchg
jo
and
lret
sti
arpl
adc
dec
add
jnp
rcrl
imul
mov
sarl
sahf
pop
aam
fiaddl
mov
lahf
wrmsr
mov
shl
jecxz
sub
jmp
int
pop
cmp
pop
aad
push
cmc
mov
nop
test
shll
push
dec
pop
ljmp
jo
jo
sbb
aad
lock
or
fucomi
loope
jp
ljmp
sarb
mov
cs
pusha
aam
int
dec
test
sbb
jae
out
imul
sub
xchg
fs
inc
imul
roll
dec
dec
mov
in
xchg
loop
rcll
pushf
clc
mov
fadd
sub
inc
out
cmp
cmp
test
insl
nop
aad
mov
pop
adc
mov
mov
sub
je
fs
lret
fwait
push
lahf
lea
push
cmp
sbb
push
fisubrs
xchg
push
aas
lock
cmp
arpl
lea
pop
ljmp
pusha
rclb
loop
outsl
adc
mov
data16
adc
lods
jecxz
arpl
mov
jno
lea
xchg
arpl
xchg
jle
jno
sub
shll
sbb
pop
xchg
popf
outsb
mov
into
jge
std
jmp
xchg
mov
cltd
cmc
sub
adcl
push
out
mov
inc
pop
pop
cmpb
or
sub
xchg
mov
mov
aas
mov
xor
movsl
mov
pop
add
mov
cmc
stos
push
mov
fbstp
inc
ja
cmpsl
add
sti
shrb
inc
dec
int
xchg
xor
daa
outsl
ds
pop
addr16
sbb
nop
sub
and
in
cld
mov
push
aam
cmpsb
stos
adc
ret
jp
ja
enter
and
jo
cwtl
into
sbb
jne
cmc
cmp
xor
cmp
add
sti
push
in
out
adc
cli
jle
adc
aas
cmp
lret
mov
lcall
sub
inc
lret
mov
shrl
mov
icebp
imul
outsb
inc
les
jo
sbb
push
adc
cltd
xchg
or
mov
push
lds
addl
mov
sub
enter
rcll
fdivr
and
mov
adc
mov
incb
pop
mov
dec
rolb
std
imul
fadds
cli
or
lods
adc
xchg
add
fwait
dec
fwait
es
mov
pop
cwtl
test
lea
cmp
jl
add
xchg
je
leave
add
dec
loopne
outsb
jae
push
or
test
push
insb
mov
negb
jge
push
inc
rclb
arpl
leave
sarl
xchg
sub
xchg
jg
fcmovnb
test
push
mov
stc
addr16
sbb
adc
push
arpl
notl
shl
mov
popf
sbb
adc
and
sarb
mov
pushf
movsb
push
pushf
pop
sar
movd
or
mov
mov
dec
adc
fsubrl
cmc
pusha
add
fidivrl
mov
ds
mov
lods
lods
pop
mov
sti
out
out
pop
in
int
push
dec
inc
pop
push
repz
out
inc
scas
sti
cmp
rorl
push
std
adc
hlt
mov
stos
jl
adc
mov
bound
or
fidivl
push
cmpsl
sub
xchg
mov
xchg
scas
out
shrb
inc
fisubs
in
loop
add
dec
add
mov
push
inc
mov
dec
and
mov
adc
lret
outsl
xor
cmc
jmp
fbstp
mov
jl
push
jae
loope
mov
mov
das
test
rcr
mov
lret
cmpsl
adc
stos
inc
xchg
aam
push
sbb
out
sub
out
repnz
popf
pop
jbe
cs
pop
xchg
fs
cwtl
subl
repnz
or
jge
mov
pop
shll
pop
hlt
test
loopew
inc
sti
scas
pop
aas
ja
test
push
loope
jbe
xor
pop
lock
out
inc
fwait
ljmp
aas
in
daa
stc
test
or
nop
aaa
aas
xor
sti
mov
push
xchg
sub
cmp
sub
out
mov
imul
test
hlt
aaa
mov
into
lret
pop
sar
gs
shrb
mov
mov
lock
and
cmp
mov
aas
mov
cmp
movsb
shrl
imul
dec
jg
xchg
aaa
jecxz
xchg
and
lret
fwait
les
cmp
test
xor
xor
add
mov
hlt
and
rcll
sub
and
fistl
sbb
xor
mov
mov
popf
mov
inc
gs
in
mov
dec
jge
inc
in
loopne
aas
test
pop
sub
push
add
mov
and
add
fisubl
jb
push
add
imulb
aas
aad
xor
push
jo
mov
or
imul
mov
popf
mov
imul
pop
cmp
imul
dec
in
stos
popa
clc
aam
push
xor
shll
iret
lods
imul
ljmp
cmp
mov
neg
les
out
aad
in
jae
orb
outsl
lret
jbe
jg
xchg
mov
pusha
sub
and
mov
xor
icebp
mov
xchg
cmp
xor
inc
cmpsb
xchg
bound
and
jno
mov
fwait
sti
ficompl
mov
jle
scas
push
sub
popf
inc
sbb
insb
outsl
and
sar
dec
subl
mov
xchg
adc
mov
pop
fwait
pusha
stos
loope
dec
xchg
pop
xor
cmp
jno
lods
ficomps
arpl
add
sti
sub
nop
lea
pop
inc
mov
ja
fdivl
aad
daa
sub
mov
mulb
add
loope
retw
adcb
pop
mov
sbb
mov
enter
xchg
and
int3
pop
cmpl
imul
testb
test
out
mov
inc
loop
cmp
aaa
xchg
cmp
rcrl
mov
insl
and
daa
xor
ret
mov
fwait
mov
test
or
lods
and
shrl
jl
js
adc
stc
jo
cmp
fiaddl
cwtl
sbb
sbbl
mov
gs
out
push
push
rolb
xchg
push
hlt
int
js
xor
movsl
mov
sbb
je
mul
or
push
push
adc
inc
sbb
sti
inc
inc
sub
pop
in
or
mov
movsb
mov
aas
lods
dec
mov
mov
mov
inc
popf
pop
imulb
cmpsl
ret
fsts
sub
test
mov
sar
stos
mov
jo
stc
xchg
ret
adc
rol
sbb
adc
add
sbb
or
cmp
scas
dec
lcall
std
inc
cmp
popa
mov
mov
inc
mov
cmpsb
das
cmp
ljmp
inc
push
push
fisttpll
jns
in
adc
pop
insb
aam
xchg
sbb
clc
mov
adc
jns
inc
sub
js
arpl
pop
or
xor
aam
sbb
add
mov
aad
std
push
and
jp
clc
repnz
cwtl
ret
pop
push
add
jl
sub
ss
jno
jge
fcmovbe
sub
testl
xchg
add
pop
sub
adc
mov
cmp
movsl
loopne
or
out
or
inc
and
rclb
insb
push
out
js
imul
ret
mov
or
cmp
fistl
or
add
cld
pop
popa
inc
test
cmp
mov
or
xchg
mov
jl
xor
in
sahf
xchg
in
leave
jge
icebp
jecxz
rorb
fidivl
in
int
ret
int3
and
mov
jo
mov
jns
ret
mov
lock
mov
popa
lock
mov
out
mov
pop
pop
push
pop
xchg
cmp
rclb
rorl
push
cmp
sub
xchg
adc
xor
sub
aad
jo
ja
out
pop
out
pop
outsb
movd
mov
mov
fsubrs
sbbb
push
xor
roll
adc
cld
movsl
sub
add
cli
and
sub
jge
or
and
dec
add
int
hlt
mov
filds
jg
popa
lods
mov
jno
mov
fs
jmp
jnp
xor
inc
mov
movsl
loope
xor
mov
xor
dec
orl
inc
scas
test
rcr
cmp
popf
sti
xchg
test
jns
push
cwtl
pop
pop
movsb
fsubrs
orl
movsl
or
sub
sub
push
clc
xor
inc
mov
xchg
push
pushf
xor
xchg
dec
and
outsl
jle
ss
adc
callw
pop
push
or
repz
mov
repz
push
cmp
into
repnz
shr
dec
test
jl
cs
mov
jno
enter
into
mov
outsb
lds
inc
adc
jb
ss
das
cmp
adcl
mov
xchg
stos
pop
stos
dec
mov
dec
cmp
mov
add
dec
add
mov
fimull
into
pushf
sbb
iret
insb
push
xchg
sbb
fs
int
lcall
in
sub
xor
cmpsb
adc
ss
fmull
sbb
nop
inc
aad
aad
jno
sub
xchg
aad
lds
stc
adcb
push
dec
fcmovnu
test
pop
scas
or
mov
fnsave
insl
adc
mov
ffree
add
pop
xor
hlt
jae
jmp
scas
xor
scas
sbb
mov
stc
cmp
fisttpl
imul
or
xchg
dec
jge
nop
jl
adc
dec
sub
dec
pop
push
ret
sti
fildl
xchg
int
pop
mov
and
repnz
sub
xchg
sub
lods
fcomi
push
adcb
or
or
lcall
jecxz
mov
inc
dec
shr
in
push
mov
mov
dec
aad
pop
sbb
mov
out
fwait
inc
inc
and
stc
jp
cwtl
mov
fdivl
movl
mov
icebp
pop
test
push
das
xchg
sti
mov
mov
inc
pusha
in
sbb
pop
scas
out
sub
mov
ret
push
sub
xor
sub
enter
add
xor
in
stos
jg
mull
pushf
xchg
push
mov
ret
ja
loope
mov
and
call
push
or
dec
and
ss
cmp
jecxz
pop
inc
rcrl
loop
cmp
mov
mov
xchg
sbb
cli
cmp
mov
sub
mov
sbb
loop
aaa
or
aam
xor
add
jge
fbld
pop
cmp
ret
lret
mov
mov
dec
cmp
pop
dec
lcall
mov
in
push
sti
repnz
xchg
aas
push
lcall
push
jne
mov
jg
shlb
fsubs
sub
cmc
push
xchg
hlt
sub
fnstsw
and
xor
mov
out
sbb
xlat
xor
jne
jg
jno
mov
lds
daa
clts
fiaddl
scas
push
mov
mov
jge
mov
xchg
add
lods
jp
and
lret
sbbb
xchg
dec
and
and
or
cmp
lds
lret
lock
dec
pop
das
js
jp
cltd
mov
dec
mov
and
jp
mov
lds
and
lahf
lods
push
lret
ret
popf
sbb
or
xor
out
push
sub
outsb
aas
clc
mulb
mov
inc
not
pop
out
pop
pop
add
lret
fdivrl
inc
jnp
mov
inc
add
cmp
jbe
mov
cmp
repz
stos
mov
and
pop
enter
into
adc
daa
int3
inc
loopne
cli
test
out
and
std
shr
test
or
jns
or
enter
xchg
mov
out
outsl
xchg
sarb
jo
cmp
dec
dec
pop
lods
jle
enter
xlat
xchg
hlt
dec
or
push
lock
inc
mov
or
mov
adc
bound
add
lds
sbb
out
inc
ja
sub
pop
push
outsb
push
test
lahf
sub
sbb
test
jmp
sti
gs
int
jg
sbb
je
mov
xchg
lds
jno
jns
dec
aas
mov
hlt
aad
or
jnp
lods
clc
cld
or
imulb
fisubrl
push
push
psllq
mov
adc
mov
or
pop
fsts
cs
cmpb
jo
daa
sbb
xchg
jmp
jp
mov
add
jmp
lret
fisttpl
addb
gs
xor
les
xorb
cmp
das
and
and
out
mov
mov
jb
pop
out
push
pop
ret
ss
roll
sti
xor
push
ja
and
xchg
loopne
push
das
push
lods
or
hlt
xchg
jae
bound
lcall
dec
xchg
sbb
mov
and
sbb
mov
mov
shll
mov
mov
decl
insb
lret
or
inc
mov
add
imul
mov
sub
ss
stos
insl
fsubp
push
push
stos
xchg
xchg
mov
lret
cld
scas
sbb
loopne
mov
and
mov
push
test
inc
mov
jno
cmpsb
add
mov
xor
mov
aas
lods
mov
mov
push
sbbb
out
push
push
jbe
gs
push
xlat
shl
xchg
insb
gs
int3
or
shrl
outsb
adc
movsl
jae
in
add
enter
addr16
push
fidivs
push
cmpsl
pop
add
sub
icebp
into
fcmovnu
mov
gs
popa
std
lods
xchg
mov
jle
or
inc
in
sbb
pusha
aam
hlt
mov
ds
mov
push
pop
mov
arpl
call
xor
jg
add
or
jb
jmp
mov
subb
and
pop
fimuls
movsl
xor
shl
mov
dec
add
dec
into
mov
xchg
cli
xor
sbb
movsb
mov
ss
add
sti
xchg
mov
movq
sbb
cmc
and
sbb
pushf
loope
lds
negl
ljmp
pop
jl
fwait
aam
mov
pop
loope
cmp
sti
cmc
push
lea
mov
mov
sub
in
push
in
jle
lcall
sbb
pop
hlt
mov
add
stos
sub
adc
sbb
sub
notb
mov
or
loop
cmp
mov
mov
repz
jl
loopne
adcl
mov
repz
mov
adc
xor
or
and
dec
adc
and
jb
add
push
and
imul
icebp
icebp
mov
aam
mov
push
push
nop
jo
iret
mov
push
les
das
data16
cmp
inc
ljmp
or
xor
xor
ret
loope
fsubr
out
cli
jae
ljmp
xchg
push
mov
sub
lock
push
es
fld
dec
int
div
sbb
mov
cmp
cmp
js
imul
mov
inc
adc
in
and
nop
aad
push
dec
sub
icebp
outsb
ficompl
inc
sbb
cmp
cmpsb
and
lahf
les
or
and
or
addl
ret
and
mov
rcrb
ret
lods
xlat
mov
mov
popa
inc
es
add
hlt
clc
jo
rolb
mov
xor
mov
orl
cs
cli
test
and
outsb
xorl
aaa
pop
cmpb
xchg
rolb
ja
mov
shl
cmp
jge
mov
mov
loope
lret
pop
popa
cmpsl
lods
test
add
and
xor
mov
xor
jp
shll
sbb
je
xchg
mov
pop
fildl
js
xchg
mov
imul
cmp
andl
in
loopne
pop
in
xor
cmp
or
int3
sub
and
mov
mov
jl
cltd
sub
push
lcall
arpl
mov
inc
pop
push
mov
pop
lcall
xchg
sbbb
add
in
inc
fs
aad
pop
push
xor
sub
jo
mov
out
mov
jbe
or
sahf
repz
out
js
in
movsl
inc
and
sub
outsl
insb
pop
xchg
data16
orb
daa
enter
fbld
std
push
into
or
push
push
and
fsubrl
dec
in
pop
mov
jle
inc
cmp
mov
cmp
push
mov
push
mov
add
sub
mov
push
add
push
sti
out
jge
mov
mov
push
ss
jle
pop
out
inc
sbb
stos
pop
je
in
cmp
fisubs
pop
in
popf
pop
add
pop
inc
sahf
pop
es
fs
outsb
roll
bnd
loop
pop
test
xchg
sbb
ret
fldt
mov
or
shl
js
pop
jne
dec
xlat
jnp
sti
xor
sbb
loopne
data16
sub
es
call
shr
push
out
fimuls
outsb
lock
ljmp
cli
ret
cmp
cmp
mov
dec
out
or
push
mov
out
popf
xchg
stos
sarl
fisubrs
nop
add
xchg
fcoml
pop
ficoms
push
push
push
je
xor
pusha
outsl
inc
ljmp
pop
pushf
fisttpll
dec
xor
imul
lea
jge
jp
pop
sub
repnz
sbbl
jg
xchg
int
pop
push
rcl
clc
lods
fpatan
jo
pop
test
test
das
cmp
fidivrl
fsubrl
bound
adc
enter
inc
adc
add
jne
add
out
mov
jns
and
lds
sub
subl
push
daa
pop
add
lcall
push
mov
xchg
and
xchg
lods
lret
fsubs
fisubrl
xor
push
push
testb
or
mov
int3
outsl
inc
xchg
lea
sbb
loop
shll
sub
mov
mov
inc
adc
icebp
insl
gs
aaa
fildl
dec
ret
les
mov
mov
push
outsb
xor
sbb
popa
fs
cmp
leave
rcl
inc
mov
fiadds
fcoms
mov
pop
sbb
jecxz
jno
push
mov
insl
imul
xor
adc
stc
in
mov
orl
pop
xor
xchg
out
push
or
and
movb
jge
movsb
xchg
push
add
xor
inc
pop
add
les
test
fdivrs
mov
and
pop
cwtl
aad
mov
loop
out
xchg
call
js
cli
test
addl
and
mov
sbb
dec
mov
dec
mov
inc
ret
repz
outsb
mov
cmp
cld
fisubrl
jnp
fsub
mov
test
adc
lcall
xor
lods
add
stos
xor
imul
dec
mov
or
pop
std
aaa
adc
xchg
mov
in
xor
xor
dec
dec
xchg
add
mov
dec
mov
outsb
mov
lahf
push
out
clc
xchg
insl
mov
jne
push
lcall
aam
ret
cld
push
psubw
jmp
push
ja
dec
sbb
test
shr
ret
push
cmc
or
xor
xchg
loopne
sahf
or
or
rorb
xchg
sub
push
or
mov
imulb
push
loop
mov
xchg
inc
mov
imul
out
adcb
fcmovu
sub
gs
cmpb
repz
or
outsb
test
mov
cmpsb
xchg
sbb
jg
inc
and
jmp
jb
push
add
jmp
in
aas
jns
and
dec
and
hlt
popf
leave
insb
cmp
das
push
sbb
sub
outsl
mov
imul
lds
jecxz
jg
adc
add
lcall
cmp
call
mov
inc
xchg
stc
mov
adc
fucomip
xor
cmc
add
cmpsb
scas
lcall
inc
cmp
push
sahf
test
sub
js
std
sahf
sub
shr
insl
movsl
imulb
mov
filds
call
int
gs
enter
add
mov
add
cwtl
pop
inc
addl
xor
mov
or
cwtl
fistps
in
xchg
shrl
mov
mov
je
dec
aas
lahf
test
lahf
sahf
cmp
mov
icebp
xchg
ret
loopne
mov
fstpt
or
push
imul
push
daa
leave
mov
push
js
jno
ds
inc
mov
rorl
enter
pushw
sub
fwait
sub
jb
and
xor
mov
fxam
ret
pop
stos
mov
sbb
xchg
imul
and
cmc
stos
push
xor
repz
jecxz
dec
fildll
and
mov
sub
lahf
inc
lea
or
push
push
cs
lret
subl
lds
or
mov
notl
jbe
xchg
ljmp
fwait
mov
mov
cmp
sarb
dec
daa
int3
push
int
je
in
pop
lods
iret
mov
xchg
and
jo
movsl
dec
sub
push
test
sbb
cmp
jmp
cmp
pop
aas
cmpsb
and
and
lds
out
rcrl
aam
js
add
imul
push
pop
out
cmp
rclb
sbb
dec
inc
subl
adc
mov
add
loopne
jp
pushf
inc
repz
fadd
loop
std
out
pushf
inc
ficoml
ret
jno
or
aas
mov
sbb
scas
mov
push
xchg
shr
jmp
mov
call
inc
lds
nop
insl
leave
mov
dec
hlt
xchg
ljmp
loopne
cmc
jbe
hlt
in
dec
fmull
stc
fbstp
sub
pop
or
jnp
fdiv
inc
lock
add
loope
sbb
or
pop
movsb
inc
xor
inc
xchg
pop
aad
lret
pop
fs
rclb
and
inc
pop
add
ja
cmp
sub
dec
outsb
popf
mov
stos
pop
add
jo
les
mov
popa
jb
or
popa
in
xor
mov
das
jns
xlat
mov
dec
pushf
pusha
cmpl
inc
mov
inc
addr16
fs
imul
in
xlat
or
fiaddl
and
jne
cmc
hlt
in
inc
cmpsl
mov
negl
mov
loop
mov
test
scas
jecxz
adc
insb
xor
lea
test
fdivrp
push
scas
adc
xor
dec
mov
pop
or
movsb
decl
fdivp
mov
jno
mov
out
pop
dec
pushf
jae
fcompl
fcoml
ds
push
xor
inc
daa
roll
fmull
dec
rcrl
lret
outsb
sub
cld
pop
add
jmp
sub
call
popl
ss
mov
push
aad
ror
divl
pop
fldcw
or
sti
sub
push
fs
ficoms
mov
push
push
mov
jl
icebp
mov
leave
pop
call
mov
jmp
xor
push
es
dec
ja
jl
cwtl
pop
idiv
loope
dec
lods
out
mov
adc
pushf
lds
xchg
cmp
andb
test
imul
adc
fst
and
and
mov
sub
out
pop
shlb
jecxz
test
sub
cs
jo
dec
lea
enter
and
cwtl
lods
mov
sub
jmp
inc
loop
sub
iret
xchg
adc
daa
push
cmpsl
aam
sti
cmp
leave
shr
push
fs
dec
adc
xchg
mov
nop
ja
pop
adc
mov
fdivl
ds
movsl
add
cmp
add
fdivr
sub
xor
scas
outsb
scas
and
aaa
sahf
inc
int3
xor
in
in
sub
jae
pop
negb
mov
in
dec
movsl
pop
andl
sub
add
mov
movsb
stos
jp
mov
icebp
mov
push
push
mov
and
jge
xor
daa
sub
and
pop
xor
xor
mov
out
and
jbe
lret
outsb
out
push
scas
test
das
dec
ss
inc
cmpsb
pop
mov
mov
test
test
sbb
movsl
addr16
xor
ss
dec
outsl
inc
sti
movsl
push
jle
push
pop
loopne
lods
xor
add
fwait
aas
push
mov
rcrb
mov
mov
xchg
lock
or
incl
adc
xor
sub
notb
gs
outsb
sbb
jg
sahf
call
bound
mov
xor
jmp
jmp
pop
fdivp
cmp
div
pop
lahf
and
addl
push
mov
jl
cmpsb
push
nop
addr16
daa
mov
or
rcrb
pop
mov
pop
lret
cs
xchg
lds
lods
push
xchg
notl
dec
adc
add
add
mov
add
inc
pop
push
mov
jb
xchg
mov
lahf
inc
sbb
cmp
nop
sbb
sbb
cmpsl
adc
ja
jmp
jge
pop
jle
js
jle
in
inc
stc
pop
stos
sbb
and
mov
xchg
dec
test
sub
addb
dec
push
dec
movsl
mov
mov
shr
testb
icebp
fcoml
or
out
push
mov
pop
jmp
sbb
notb
cltd
js
push
push
inc
mov
inc
cmpsl
mov
cwtl
and
scas
leave
pop
and
mov
ds
imul
out
push
jnp
popf
jb
and
push
jnp
inc
hlt
pop
push
icebp
js
inc
test
movb
test
push
sbbb
mov
xchg
add
and
sbb
dec
imul
dec
mov
fwait
test
jmp
cmp
daa
inc
cwtl
cld
lret
faddp
or
mov
test
jo
xlat
cwtl
shll
fidivrl
xor
sub
adc
mov
cltd
sub
mov
push
push
add
cmpsl
hlt
in
sub
out
push
jmp
add
mov
push
out
idiv
in
shl
sub
popa
push
mov
adc
and
je
ss
inc
int
xchg
jmp
cmpsb
call
cld
adc
push
sbb
xor
jmp
dec
adc
pop
lock
out
dec
testb
sub
push
dec
jns
clc
dec
shll
movsb
jb
push
shrb
lcall
mov
adc
lds
test
ds
gs
xchg
sbb
ret
call
and
mov
push
aas
inc
jmp
test
leave
adc
sub
cs
cltd
jne
shlb
adc
dec
dec
sarl
sbb
xchg
xchg
jge
xchg
xchg
sub
test
lock
jo
ret
jmp
hlt
sub
mov
mov
ds
mov
hlt
and
push
xor
bound
popf
int3
xchg
sti
lret
jns
pop
je
sbb
pop
add
jne
xchg
leave
ljmp
aad
cmp
xchg
adc
fstl
mov
cltd
pushl
js
mov
sbb
mov
dec
test
xor
mov
jle
into
cmc
int3
fidivrs
fcoml
jmp
ja
xorb
lcall
lret
add
pop
cmp
fidivrl
mov
int
out
pop
stos
add
mov
sarb
adc
xor
jle
push
rorb
aas
out
mov
add
and
inc
xchg
inc
sbb
fwait
xor
pop
pushf
fsubrp
stos
pop
sbb
decb
nop
push
and
sti
xor
adc
mov
imul
pop
jno
es
aas
jecxz
pop
jb
lods
and
push
sbbl
push
mov
dec
nop
push
jbe
or
push
or
jecxz
add
dec
movsb
and
pushf
andl
dec
fs
in
shrb
xlat
sbb
or
sub
out
cmc
das
sbb
in
jo
dec
lods
aad
out
push
cmp
data16
scas
enter
jle
ret
and
and
into
ds
jnp
sarl
fidivrl
jl
out
aaa
and
repz
daa
inc
jae
jo
push
fbld
adc
popa
lods
and
jp
push
inc
adc
sub
pop
mov
xor
or
and
sub
ja
mov
sahf
test
cmpsb
jo
cmp
cmp
inc
or
mov
jno
jno
mov
mov
adc
mov
pop
push
movsb
xchg
clc
sti
loopne
add
cmp
or
lods
stos
dec
mov
outsb
and
sbb
nop
call
pop
xchg
push
fcmovu
hlt
movsl
pop
ret
xchg
xor
and
scas
jbe
cli
mov
scas
mov
hlt
jg
dec
iret
out
repnz
mov
mov
mov
dec
pop
aaa
cs
pop
test
popa
xor
mov
rorl
test
dec
add
enter
pop
sarb
orl
lahf
popl
add
scas
jmp
leave
fiaddl
and
in
ss
xor
and
ficompl
mov
jmp
out
mov
stos
inc
dec
lods
jno
lcall
arpl
push
or
shll
lea
decb
mov
sub
leave
cmp
xor
jbe
jmp
shll
pop
stos
mov
pop
lcall
sbb
ret
or
xor
mov
enter
cs
int
cmc
and
mov
xchg
mov
mov
pop
dec
push
sahf
ljmp
dec
mov
mov
add
fs
pop
pushf
cld
adc
lahf
fsub
int
push
pop
repnz
ret
rcll
sbb
fs
test
mov
push
xor
in
std
mov
mull
push
pop
movsl
outsl
ljmp
mov
xor
subb
adc
rol
mov
xchg
out
sbb
ja
pop
jmp
or
fwait
mov
js
jmp
andb
push
jnp
xor
mov
jbe
outsb
jb
sbb
dec
mov
push
cld
pushf
lock
pushf
push
subb
inc
sahf
repz
test
pop
jle
inc
aam
push
jns
sbb
adc
push
xor
jbe
in
shrl
push
adc
mov
xor
push
cs
or
xchg
push
shrb
imul
lret
jbe
repz
sahf
popa
pop
cmp
or
fdivrl
outsb
jb
ffree
into
xor
std
pop
cmpsl
jmp
cmp
sub
jmp
sbb
mov
lea
mov
fldcw
mov
das
mov
xor
cli
push
mov
pop
sbb
xchg
rcrb
jne
psrlw
and
xchg
addb
loope
in
mov
shlb
jmp
sbb
in
mov
arpl
push
sub
push
addr16
es
jb
inc
sub
lds
addb
push
jge
lods
and
add
push
js
outsb
cld
gs
out
or
addr16
icebp
cli
lds
adc
push
jae
mull
adc
loope
mov
sti
or
cmp
mov
cltd
scas
jo
das
mov
inc
outsb
xor
mov
arpl
js
jge
dec
add
fidivrs
push
push
int
insb
lock
dec
in
fs
fcmovnu
and
lcall
jne
adc
add
sbb
pop
jg
mov
lds
stos
daa
mov
aad
cltd
and
push
or
inc
xchg
jg
das
mov
and
addr16
pop
xchg
and
inc
cmp
xchg
addr16
pop
dec
push
mov
fstl
mov
cmpb
sub
push
ja
and
adc
xor
out
xor
insl
lahf
jp
mov
ljmp
stos
pop
jmp
pushf
mov
scas
sbb
jg
pop
push
xchg
aam
cltd
inc
push
aas
jle
mov
xchg
inc
es
es
jge
mov
loop,pn
mov
mov
add
fxam
and
bound
mov
inc
icebp
stos
into
fcoms
imul
imul
repz
mov
adc
mov
daa
push
ret
sbb
insl
mov
inc
iretw
push
movmskps
out
dec
xchg
pop
cmc
push
or
daa
adc
enter
adc
shlb
lcall
push
jnp
lds
out
in
sub
shlb
popa
pop
push
int3
push
sub
insb
mov
jne
ds
aad
xchg
adc
xchg
enter
fs
jne
je
sub
jecxz
call
fwait
xchg
mov
and
lret
sbb
scas
fsub
outsb
mov
fldl
mov
jmp
pushf
dec
int3
pop
lock
pop
rcrl
ljmp
cs
mov
jp
notb
call
dec
sbb
filds
lea
jns
cli
xchg
pop
jmp
jg
fdivr
jns
pusha
or
imul
inc
or
mov
dec
iret
das
fidivrs
jne
ss
add
imul
sbb
stos
fwait
push
cli
insb
dec
sbbb
push
dec
addb
cmc
outsb
cs
ror
pop
inc
mov
leave
movsl
jae
insb
push
fdivrp
lods
xor
movsb
pop
and
fs
mov
scas
xchg
daa
idivl
mov
sbb
jo
xchg
addb
das
mov
xor
inc
ret
xorb
hlt
xchg
sub
add
adc
adc
popf
push
cmpsb
push
mov
jnp
jo
push
cmpl
insl
rol
dec
adc
push
push
adc
nop
xchg
push
arpl
sub
test
pop
iret
mov
je
mov
pop
in
inc
jecxz,pt
mov
lock
mov
in
sahf
adc
inc
mov
in
lods
mov
rcrb
push
push
out
movsl
sbb
ret
cmp
xor
incb
loopne
sub
loop
adc
filds
mov
aas
mov
add
mov
out
sahf
loope
jbe
into
hlt
sub
mov
jp
fidivrs
cwtl
add
pop
cmp
jecxz
push
out
sub
lods
mov
cs
jae
bound
adcb
adc
stc
sub
mov
pop
outsl
xchg
clc
push
pop
vpaddw
outsl
rcrl
sub
sarl
sub
mov
pusha
pop
xchg
pop
mov
or
rcll
fs
sbb
mov
dec
sbb
and
leave
sbb
dec
mov
jae
aas
push
js
pusha
cmp
lods
and
push
mov
fsubrs
xor
mov
aas
push
loopne
fs
repz
jo
xchg
inc
jle
jecxz
sarb
push
xchg
nop
outsb
or
shlb
sbb
jbe
mov
ret
loopne
mov
mov
push
lods
outsl
rorb
pop
popa
add
add
lret
mov
mov
cmpsb
jp
dec
adc
fwait
movsb
decb
insl
push
mov
in
or
sbb
pop
in
jle
das
and
lds
fcomps
mov
bound
push
inc
lods
loop
outsb
sub
out
loope
aam
and
mov
fwait
cmp
not
mov
inc
sub
ret
mov
mov
cmp
xchg
bound
xchg
cmp
fcompl
or
pusha
insb
push
cmp
vmulpd
stos
roll
pop
mov
out
cmp
jp
jge
add
int3
in
push
fildll
push
xchg
test
mov
mov
test
loopne
push
xchg
push
pop
dec
adc
xchg
inc
push
or
and
popf
aaa
aam
iret
and
mov
cmp
and
lret
xor
out
or
jmp
fmul
add
pop
sbb
mov
pop
stos
or
arpl
push
push
and
xchg
xchg
pop
mov
test
lret
xchg
and
adc
scas
movsb
push
rclb
es
mov
in
xchg
repnz
dec
out
ds
mov
inc
mov
inc
dec
mov
push
inc
jns
sub
xchg
roll
pop
shll
sahf
and
shll
mov
push
gs
in
loop
mov
pushf
jge
adc
adc
popa
int3
into
push
cmp
pop
jb
in
push
sbb
mov
inc
mov
shrl
js
mov
dec
xchg
adc
add
icebp
jge
ds
and
mov
mov
inc
inc
movsl
xchg
mov
sub
mov
fldenv
lods
jb
imul
or
lds
dec
movlps
adc
ljmp
add
pop
lds
hlt
ja
rcr
and
and
mov
hlt
pop
sar
mov
daa
jae
clc
sbb
rep
jns
outsl
pop
test
cmp
and
xor
inc
fs
push
xor
pmuludq
fistpl
addb
ljmp
call
fisubs
jge
dec
arpl
xchg
push
xchg
push
test
cmp
cmc
in
out
add
cmp
lahf
xchg
mov
mov
pop
rcll
mov
rcrl
cltd
out
xchg
fwait
rcrl
jb
popa
push
pushf
fwait
adc
fiaddl
loop
adc
push
leave
sysexit
jne
icebp
outsl
dec
mov
add
lea
je
orb
dec
fucomi
jmp
jnp
inc
pop
jp
lds
cmp
and
mov
push
das
hlt
xchg
adcb
in
xor
pop
cmp
pop
jns
cmpsb
lea
dec
jb
rol
arpl
pop
data16
fcomip
mov
hlt
pop
test
mov
ja
jbe
pop
jmp
lret
fstps
mov
mov
pop
dec
push
mov
aaa
xchg
jbe
fwait
popf
add
cmp
adc
dec
push
push
in
push
jae
dec
insl
cmpsl
cwtl
push
hlt
pop
cmpsl
cmp
ljmp
addr16
adc
mov
and
jl
mov
sbb
movsb
inc
inc
daa
fs
inc
ret
mov
mov
loope
test
or
pop
inc
sub
cmp
sub
mov
es
inc
fs
xchg
sbb
fs
loope
xchg
xor
aam
out
adc
fiaddl
mov
int3
push
cmpsl
inc
js
pop
xor
lahf
push
jmp
jno
push
add
dec
es
sub
sbb
mov
std
shrl
or
xor
rolb
mov
sar
loop
mov
out
fldt
jg
adc
sti
or
imul
push
jbe
xchg
xchg
mov
inc
push
jb
inc
mov
repnz
movsb
push
xlat
push
sbb
push
rcll
add
mov
pop
sub
clc
inc
and
xchg
dec
xchg
mov
xlat
and
in
xor
xor
xchg
mov
cli
mov
les
sbb
mov
int
add
sbb
pusha
lcall
sub
leave
ljmp
cmp
in
inc
mov
add
mov
data16
into
fwait
out
pop
outsl
fldcw
gs
add
mov
cmp
das
sbbl
push
jnp
jb
gs
xor
adc
jbe
adc
popa
lret
insb
out
popf
aam
fisttps
xchg
negb
lcall
and
dec
mov
das
out
and
or
pavgw
sub
leave
push
mov
dec
xor
ss
cmpb
imul
xor
cmp
and
xor
ret
xor
lahf
mov
pop
dec
jnp
imulb
nop
mov
xlat
stos
cld
mov
lea
sbb
jb
pop
xchg
aam
pushf
jg
aam
cmc
ljmp
jge
mov
lahf
sbb
insl
lods
push
repnz
push
inc
sub
arpl
cmp
jb
movsb
fists
movsb
pop
sub
std
cltd
mov
ret
jns
ret
sub
and
outsl
or
cmp
dec
cmp
push
ss
dec
aas
les
sbb
ss
mov
cmpsl
je
cwtl
nop
xlat
mov
rcrl
aas
jo
adc
inc
mov
xchg
shr
aam
xchg
sub
jg
aad
cmp
sbb
test
stos
xchg
push
sbb
mov
mov
cmp
jecxz
mov
or
out
mov
inc
clc
push
jge
imul
add
ficomps
testb
sub
inc
loop
repz
mov
repz
add
jge
push
pushf
mov
inc
cmp
in
mov
ret
or
out
mov
dec
push
test
adc
and
xchg
jae
mov
movsb
xchg
and
cmp
lret
lahf
push
inc
je
sti
fwait
add
inc
xor
arpl
sbb
cmp
add
mov
add
mov
inc
pop
sub
in
and
lret
sub
mov
push
mov
dec
data16
xchg
shll
and
lods
mov
adc
push
in
call
in
shll
xor
out
cld
mull
inc
cmp
out
xchg
in
loop
add
and
dec
sbb
fs
sub
lock
push
addr16
cmp
cmp
and
and
inc
fistps
sbb
loope
cmp
das
mov
jo
hlt
mov
xor
push
dec
rcr
cmp
jb
mov
es
jl
and
inc
idiv
ret
mov
ret
xlat
mov
jge
xlat
and
ljmp
divl
dec
or
jnp
xchg
sbb
mov
or
test
mov
popl
add
push
xlat
add
xor
les
xor
imul
sub
pop
aad
and
daa
cmpsb
jmp
xchg
add
movsb
rcr
jmp
stc
jge
mov
imul
pop
push
imul
cmc
pop
mov
cmc
movsl
sbb
pop
sub
jmp
fistpll
mov
mov
dec
adc
loope
fnstsw
outsl
loopne
enter
outsl
push
outsl
cmp
icebp
jle
push
mov
shrl
in
loopne
and
mov
movsl
imul
mov
stos
and
aam
jp
xor
arpl
orb
or
lods
jnp
lret
bound
pop
inc
shl
sti
mov
sub
push
pop
and
or
push
cli
sbb
call
pop
lock
adc
inc
and
out
stos
into
push
xlat
cmp
dec
xchg
leave
movsl
fildl
mov
mov
loope
stos
xchg
mov
into
in
xchg
xor
nop
jl
lods
insl
clc
and
xor
pop
decl
xor
mov
pop
xlat
rcrl
test
cmp
push
sub
loopne
pushf
jno
or
jbe
sbb
imul
shl
mov
dec
mov
and
insb
push
dec
sbb
fistps
xchg
dec
dec
sbb
sub
mov
cmpl
sub
out
push
sub
or
mov
leave
xchg
popf
into
sahf
mov
jp
movsl
sub
and
cmp
mov
sub
push
scas
lea
and
jno
shl
sbb
ficomps
repz
lret
and
xor
dec
push
enter
movsl
mov
xor
push
fsubs
sub
push
jns
dec
enter
push
je
jb
dec
xchg
jge
fists
push
call
pop
push
lock
or
ss
jns
xchg
and
insl
mov
add
scas
add
les
sahf
shrl
pop
dec
inc
mov
mov
jecxz
cmp
adc
cli
addr16
inc
repz
mov
mov
mov
bound
mov
jp
les
jnp
adc
cmc
sbb
gs
bound
pop
cmp
in
pop
movsl
int3
jecxz
cwtl
xchg
adc
addr16
sbbl
leave
pushf
sbb
cmp
mov
rolb
add
lret
gs
into
mov
lcall
pop
test
jmp
mov
outsl
test
inc
jecxz
jecxz
nop
enter
popa
inc
adcb
popf
sub
jg
pop
inc
enter
jbe
lcall
cmpsl
int3
outsl
xor
mov
adc
insl
jge
cmpl
sbb
push
ret
out
and
jne
pop
push
dec
mov
and
push
flds
xor
rcr
cmp
in
xor
cmp
movsb
push
ret
pop
mov
call
popa
push
cli
movsb
fst
dec
dec
inc
mov
xor
out
cmp
add
repz
cli
aam
mov
inc
xor
jmp
pop
repnz
sub
xchg
inc
xlat
dec
lret
mov
jno
mov
sub
xchg
in
js
js
pop
dec
push
das
scas
mov
cmc
pop
arpl
lods
mov
xor
xchg
stos
dec
xor
pop
add
lret
xchg
getsec
and
mov
jns
xchg
mov
subl
push
mov
pop
and
dec
mov
mov
in
mov
js
clc
into
lods
pop
lret
dec
inc
jbe
enter
in
out
push
repnz
xchg
rolb
clc
jb
mov
int3
cli
xchg
mov
push
subl
cmp
arpl
shl
pop
jb
in
test
cli
cmp
clc
loope
jae
sub
lods
mov
lret
inc
push
jg
cmpb
dec
add
jno
or
sbb
xchg
lahf
mov
cmp
das
mov
cwtl
and
mov
aad
or
pop
mov
sub
std
insb
les
xchg
dec
cmp
add
xchg
dec
xor
xchg
cmp
fnstcw
jp
pop
or
xchg
divb
sbb
in
movsl
and
inc
mov
mov
leave
imul
into
or
pushf
cmpsl
cmp
jp
inc
pop
or
lahf
out
cmp
pop
inc
orl
scas
and
dec
inc
daa
rolb
sbb
jnp
icebp
lods
int
adc
or
push
add
dec
pop
fidivrs
aas
adc
jae
and
jae
mov
push
xor
rcll
shll
ds
pop
push
adc
cmp
imul
jns
jmp
xchg
cmp
loopne
mov
or
dec
and
push
pop
out
es
push
cmp
outsb
sub
std
jns
fwait
add
sbb
outsb
ret
in
test
es
repnz
sbb
into
lock
push
out
in
dec
int3
jl
out
xor
leave
fldcw
cld
stos
inc
xchg
cmp
addl
ss
arpl
loope
dec
test
or
sahf
mov
sbb
int3
and
mov
jmp
add
mov
je
aaa
jle
fists
sub
popa
insb
fs
aam
enter
sbb
cmp
adc
fcmovu
cmp
mov
or
popl
outsl
jg
clc
or
dec
or
bound
mov
repnz
push
xchg
pop
fstps
loopne
jo
faddl
mov
daa
mov
jmp
xor
data16
inc
add
and
xor
subb
test
mov
popf
fmuls
and
dec
and
out
adc
sar
sub
lods
mov
mov
push
shrb
aad
das
fmul
pop
push
xchg
test
dec
sub
aad
or
fidivrl
xchg
push
fs
fdivl
std
testb
lock
or
sbb
pop
sbb
xchg
xor
fstpl
dec
mov
sub
xor
adc
rcrb
outsb
xchg
outsl
add
fmull
test
inc
jns
dec
pop
inc
fisttps
stos
dec
mov
ljmp
mov
mov
or
loope
push
mov
pop
ss
cmpsl
adc
pop
mov
repnz
aam
clc
es
enter
inc
push
dec
dec
cmc
inc
add
std
fistpl
int
or
pop
in
push
sub
jle
fs
bound
xchg
js
scas
dec
aas
pop
push
sti
popf
cmp
outsl
and
jo
lret
int
mov
ficomps
mov
lds
mov
dec
out
xchg
jmp
ret
inc
pop
mov
out
dec
mov
mov
cmp
pusha
jnp
in
leave
sbb
mov
call
xor
imul
ficoml
stos
push
lds
imull
sub
cmpsb
iret
cld
out
movsb
cwtl
fdivrs
mov
in
sbb
gs
add
jns
dec
int3
lock
mov
push
cld
repz
push
lcallw
xchg
xor
daa
insb
ss
sub
add
mov
das
mov
jp
in
cmp
data16
jnp
ret
push
mov
fildl
outsl
mov
fistps
sbb
shr
popa
mov
mov
or
es
je
nop
xor
outsl
ffree
push
roll
mov
xor
into
pushf
enter
jmp
call
sub
fsubrl
sbb
stos
add
sub
into
xchg
or
and
push
nop
ret
adc
movsb
arpl
ret
cs
add
bound
sti
cmp
leave
xor
ja
fdivrp
fcmovb
xchg
pusha
push
jae
fwait
aad
inc
aam
sbb
out
std
out
outsb
or
mov
and
sub
pop
cmpsb
adc
das
lock
dec
js
outsb
aas
pushf
inc
aaa
mov
dec
jg
lds
jno
inc
incb
adcl
subl
cmc
popf
fcom
jae
hlt
addr16
add
sbb
jl
ss
mov
adc
mov
adc
adc
and
ljmp
pop
imul
lcall
cmpsl
test
icebp
xor
xchg
jno
add
cs
xlat
movsb
in
cmp
inc
mov
mov
je
or
mov
shll
xchg
cld
cs
cmpsb
sbb
inc
adc
mov
mov
mov
insl
sub
repz
movsl
mov
das
jle
jecxz
je
sbb
cmp
xchg
inc
or
rol
pop
mov
jo
mov
add
or
push
imul
mov
xchg
data16
ret
movsb
cmp
xor
mov
add
or
cmp
movsl
xchg
mov
push
mov
cmpsb
or
jb
enter
sub
in
add
pop
mov
push
sub
xchg
jmp
push
jbe
dec
loopne
dec
xor
cli
shll
inc
inc
bound
mov
add
ficoml
lds
inc
int
cmp
mov
mov
cmp
popa
push
inc
clc
scas
rcl
sysexit
out
mov
cmp
aas
add
adc
imul
mov
mov
adc
cmpsl
mov
mov
lcall
jb
notb
sarb
sub
xor
test
inc
mov
jno
sub
loope
fwait
es
hlt
cmp
xchg
idivb
in
rcll
sub
inc
sub
stc
xchg
bound
push
pop
add
mov
xlat
sub
jae
daa
inc
or
in
mov
mov
push
fadds
outsb
and
and
sub
xchg
cmpsl
pop
or
and
fwait
jbe
pop
xchg
mov
outsb
cmp
jmp
test
mov
inc
cltd
aas
cmpsb
jmp
loopne
cmp
push
mov
mov
sbb
in
adc
mov
fcoml
adc
ret
jle
lods
push
outsl
sbb
and
push
std
and
dec
pop
jmp
jge
sbb
mov
mov
cmp
ret
imull
scas
xor
xchg
bound
enter
dec
sbb
outsl
inc
inc
xor
jbe
push
add
xchg
fnstcw
jp
pop
js
aad
pushf
cmp
mov
aad
stos
fwait
xchg
icebp
pop
pop
in
insl
sbb
stos
arpl
lahf
mov
or
scas
in
mov
and
mov
repnz
jle
add
sarb
mov
in
lret
mov
insl
add
int3
dec
es
mov
hlt
xchg
mov
or
out
repnz
and
shrl
cmpsb
ljmp
mov
push
in
sub
loopne
in
mov
push
out
les
xchg
mov
scas
cltd
jnp
sbb
sbb
or
push
cmpsb
in
loopne
andl
movsl
insl
xchg
cmp
movsl
jl
ficoms
push
in
sub
xchg
into
sub
mov
inc
std
push
sub
mov
pushf
mov
cmp
sbb
cs
jno
aas
cmpsb
ljmp
jle
mov
add
xchg
pop
mov
cwtl
fsubl
ret
jmp
leave
imul
mov
fidivrl
cmc
lds
add
cmp
mov
mov
mov
mov
fidivl
push
ds
enter
jo
mov
adc
lods
xchg
pop
ja
out
out
jae
sub
dec
lahf
test
add
xchg
xor
in
rolb
xchg
xor
xchg
mov
mov
sub
lock
fmul
push
inc
mov
push
sub
fcmovbe
push
sbb
push
xchg
add
outsb
inc
or
testl
iret
jns
or
rcrl
insl
mov
sti
in
push
int3
loopne
pop
mov
lret
cmp
push
or
aas
xchg
and
adc
out
fbstp
or
cmp
cmp
popf
sub
inc
push
cmp
push
cltd
pop
and
and
dec
pusha
add
pop
dec
and
or
add
or
sahf
les
aas
cld
sahf
enter
nop
insl
mov
dec
sbb
mov
push
psubusb
in
scas
adc
mov
stos
or
jmp
call
pop
push
inc
push
xlat
outsb
pop
add
icebp
movsl
std
jp
test
mov
aam
adcb
and
mov
and
rcr
inc
push
inc
movsb
inc
pushf
jo
out
mov
testl
sub
push
shrl
add
ljmp
cmp
bound
arpl
xor
sub
js
or
test
flds
sub
mov
cmp
sub
sbb
dec
mov
fs
testl
sbb
dec
and
or
cmp
aas
lock
out
and
xor
shrl
and
and
xor
rol
fnstcw
fwait
cmp
xor
sbb
inc
mov
popf
jo
add
xor
push
add
movsb
push
sbb
ret
adc
xchg
addr16
cmp
popf
inc
mov
icebp
je
aas
imul
scas
dec
and
cmp
jmp
lahf
daa
mov
xor
mov
mov
stos
mov
lock
jb
xadd
ficoms
add
outsl
das
mov
fs
bound
jmp
insb
jge
mov
fistl
xchg
add
nop
inc
mov
adc
dec
call
cmp
scas
addl
cmpsl
mov
test
lahf
push
scas
les
ret
push
mov
out
sub
hlt
aas
lahf
jmp
add
add
hlt
xor
add
cltd
insb
lahf
loop
sub
pop
mov
into
leave
jo
cli
fidivrs
stc
pop
mov
in
lods
and
push
mov
pop
std
mov
mov
pop
push
push
jno
push
xchg
cmc
xchg
hlt
ljmp
mov
mov
sahf
adc
mov
mov
repnz
mov
cmp
cwtl
push
push
cmpsl
pop
lods
add
cmp
lcall
lret
movsl
addb
and
fstpt
and
aad
push
jae
lods
and
movsl
scas
xor
push
into
adc
fs
ja
jns
and
sub
mov
bnd
mov
cmpsb
inc
rorl
rolb
sub
lahf
popf
jne
shll
sbb
xlat
lds
jmp
popa
mov
push
movsb
pop
inc
xor
das
mov
subb
mov
outsl
ret
xor
xor
subb
jne
cli
sbb
xchg
add
dec
and
das
popa
sub
pop
mov
pop
add
out
test
add
push
mov
pop
and
popa
sbb
ds
leave
lret
fisttpl
stos
adc
sbb
nop
addr16
xchg
or
movsb
lods
add
lea
xchg
cli
adc
inc
and
scas
cmp
dec
sub
inc
mov
pop
adc
sbb
ja
outsl
mov
pop
test
pop
sbb
mov
or
lcall
ja
fimull
mov
xchg
mov
fdivrs
outsb
stos
pop
push
arpl
ss
mov
dec
movsbl
loope
idivl
and
adc
ret
xchg
iret
jae
jp
shlb
add
fs
or
data16
cltd
iret
xor
mov
arpl
add
push
adc
das
cmp
adc
mov
cmc
push
arpl
sub
and
jo
addl
cmc
mov
adc
stc
sbb
lret
icebp
add
add
cmp
aam
push
push
xor
pop
pop
fsubr
mov
imul
fiadds
pop
insl
dec
es
mov
das
pop
fadd
xchg
pop
lcall
jmp
cld
stos
add
scas
aad
dec
iret
outsl
mov
repz
cmp
loopne
subb
je
mov
insl
mov
cmp
insl
add
dec
movsb
xchg
push
ja
xlat
xor
fisubl
fstps
sti
mov
roll
push
rcrb
cmp
rol
xlat
pusha
fdivrp
mov
pop
mov
sub
std
push
loopne
insb
add
jnp
daa
jbe
cmp
clc
adc
and
iret
sub
stc
mov
mov
ret
mov
cmp
lods
loop
cmp
xlat
jae
jmp
pop
cld
pop
or
cmc
sti
out
add
jae
xchg
rcrl
pop
push
pop
mov
aam
mov
icebp
stc
mov
push
jnp
pop
repz
xchg
aaa
push
lcall
push
aas
arpl
movsb
dec
pop
pop
in
or
pop
mov
mov
stos
xchg
sbb
jns
pusha
xchg
mov
int3
inc
or
cmp
add
xchg
mov
cmp
lds
lret
adc
adcb
xorl
lahf
jg
daa
sbb
mov
mov
leave
pop
and
xchg
mov
mov
mov
push
xor
stos
lods
jecxz
jle
dec
xchg
jbe
mov
in
adc
loope
ss
data16
or
int
and
xor
enter
inc
in
testl
lcall
lahf
jo
xor
outsl
repz
test
les
dec
arpl
or
test
dec
frstor
dec
push
in
js
fnstsw
push
fidivrs
or
push
fmull
xor
pop
and
nop
xchg
lcall
pop
mov
out
inc
inc
popf
das
cmp
lahf
aas
or
jno
cmp
pusha
jp
aaa
mov
adc
lods
dec
mov
jb
add
fwait
je
scas
jg
int3
add
repnz
jb
add
sub
fwait
sub
pop
pop
sbb
data16
repnz
cli
rorb
add
out
jl
dec
sbb
das
jle
sbb
xchg
adc
andb
add
sbb
sbb
add
sub
cmp
mov
mov
cmp
insl
lods
je
mov
add
dec
mov
leave
inc
mov
inc
mov
jecxz
jecxz
vmovdqu
xchg
popa
ret
ss
rorl
jecxz
enter
test
dec
sub
push
insl
bound
je
sbb
add
aad
adc
xchg
fdiv
test
fwait
pop
sub
dec
jbe
dec
aaa
lock
cmp
mov
lods
ljmp
inc
outsl
xchg
lcall
jg
add
movsl
push
jbe
inc
jl
sbbl
cld
popa
jp
popl
stos
ja
cmpb
mov
inc
mov
testb
int3
call
mov
ficomps
js
and
inc
sbb
jne
adc
call
inc
mov
and
sub
dec
loopne
insb
jno
add
mov
push
mov
repz
inc
cld
push
js
or
fisubs
jbe
mov
cmpsb
in
mov
es
outsl
insl
mov
add
mov
mov
into
add
subb
pop
imull
cs
out
shrl
aad
shll
in
mov
xorb
and
and
ret
in
movsb
int
mov
and
fnstcw
jl
shrb
pop
mov
ret
dec
into
xor
sub
mov
arpl
pop
mov
xor
out
das
dec
mov
mov
daa
rol
stos
pop
adcl
cli
lret
inc
filds
pop
xor
mov
ret
adc
xor
xor
jle
pop
mov
out
inc
inc
lds
push
jg
dec
mov
mov
dec
shrl
jl
repnz
rcrl
aaa
inc
cmp
cld
sub
shlb
push
mov
lcall
sbb
or
xlat
ret
aaa
or
add
lret
sub
pop
pop
mov
sbb
dec
jbe
iret
sahf
pop
add
adc
inc
hlt
in
jecxz
and
test
fbld
lahf
dec
lea
or
pop
and
inc
or
add
adc
jg
loope
je
das
cli
addr16
sti
mov
cltd
jg
jns
pop
cmp
dec
cli
into
inc
aad
movsl
mov
jo
aam
icebp
mov
dec
sub
jecxz
cli
mov
mov
jmp
pop
bnd
add
cwtl
je
mov
ds
cmp
or
xchg
aam
push
push
sbb
pop
out
das
bnd
sub
cmp
aam
daa
push
out
movsl
lds
out
movsl
inc
jp
jecxz
decb
inc
cmp
xchg
lods
aaa
aad
aas
mov
lret
dec
fnsave
daa
xchg
lret
xlat
inc
adc
enter
les
xchg
inc
dec
xchg
test
mov
cmc
shll
dec
cs
sbb
in
mov
jnp
cwtl
jb
xchg
lods
jnp
outsl
jle
ret
jecxz
pop
ja
mov
mov
cmp
sub
pop
push
lea
jbe
push
and
cmpsl
in
push
jp
mov
inc
dec
test
test
sub
lods
xor
mov
imul
jnp
mov
sub
cmpl
movsl
jmp
sahf
or
fadd
dec
filds
pop
cmpsb
pop
jne
nop
loope
in
mov
adc
inc
enter
push
hlt
push
shll
push
fwait
mov
adc
push
pop
cmc
clc
out
adc
shll
sbb
adc
pusha
clc
in
mov
jl
js
push
push
lret
daa
mov
in
pop
mov
repnz
dec
xchg
movsb
aam
push
ret
loop
sub
push
cmp
or
pop
xchg
jbe
mov
lods
pop
cmpsl
icebp
push
gs
push
push
loope
cmpsb
add
out
ja
mov
fcmove
mov
lea
out
aam
xchg
inc
adc
inc
push
xchg
mov
pop
shll
mov
test
pusha
mov
call
inc
lea
pop
into
out
mov
and
and
repnz
into
shr
adc
xchg
mov
daa
add
dec
jmp
pop
scas
xchg
push
rcrb
and
or
fidivrs
inc
jecxz
add
mov
ret
sbb
and
cli
fwait
or
les
adc
fcomip
pop
mov
out
xchg
jns
pop
jmp
jnp
xchg
cld
hlt
repnz
jae
dec
gs
popf
cmp
int
cmp
cld
in
add
movsb
ja
nop
stos
xlat
and
data16
dec
xor
mov
mov
jnp
inc
xchg
adc
sub
sub
jb
negl
aas
and
jl
fnstenv
sahf
push
pop
loop
mov
push
sub
shlb
clc
xchg
movsb
pop
das
xor
xor
and
mov
push
fbld
movsb
cmc
jae
mov
xchg
mov
sub
jl
icebp
add
es
push
or
and
int3
dec
leave
loopne
push
xor
pop
stc
push
decl
aam
dec
scas
loop
push
dec
mov
and
icebp
js
mov
popa
test
mov
jne
rcrb
mov
push
pop
shll
push
std
sub
pushf
mov
jb
js
add
aaa
adc
mov
mov
jp
jne
mov
ret
sbb
scas
sub
outsb
pop
cli
pop
inc
sbb
xor
pushl
jb
mov
mov
stc
out
and
sbbl
jp
mov
adc
inc
pusha
inc
push
xchg
das
mov
dec
pop
mov
push
fstpl
mov
sarl
sub
mov
xchg
mov
cli
test
inc
xor
xor
insb
xchg
push
xor
xchg
cmp
inc
mov
out
push
sar
sbb
push
lods
inc
insl
jecxz
scas
test
adc
outsl
sub
xchg
lea
push
loopne
pinsrw
jbe
inc
mov
orl
inc
xchg
lret
je
cltd
jno
sbb
xor
mov
in
lods
sarl
adc
xor
in
dec
push
xlat
test
rclb
or
ds
sbb
fwait
jnp
fdivr
xchg
jge
fsubrl
and
fistpll
mov
mov
faddp
inc
inc
nop
sub
dec
dec
mov
pop
add
xchg
insl
xlat
jg
jns
sub
pop
insl
mov
je
cld
xor
jle
push
pop
jae
adc
fs
scas
pop
adc
sbb
notb
stos
xlat
xor
fs
xchg
mov
sbb
fs
sti
divb
cwtl
and
inc
pusha
xor
and
jae
jae
sbb
mov
pop
rcr
stos
iret
xlat
nop
and
lods
ret
pop
xchg
pop
or
mov
lcall
lea
sbb
xchg
dec
dec
lds
xlat
mov
aaa
xchg
mov
andb
push
in
mov
data16
rcrl
hlt
sub
lret
pop
jle
xchg
or
ret
shll
mov
adc
stos
pusha
adc
jne
mov
cmp
dec
mov
jo
xchg
loope
add
adc
mov
ret
jp
push
enter
fcoms
xchg
xor
hlt
jge
js
jle
sub
xchg
xor
test
mov
nop
outsb
push
mov
les
jo
mov
dec
lods
jecxz
jae
mov
ret
ret
inc
mov
pop
jno
mov
mov
in
inc
outsl
cmp
clc
xchg
nop
mov
add
jg
cmp
fstps
jb
out
outsl
stos
aad
jmp
jno
inc
cld
mov
sbb
outsl
or
int3
stc
or
ljmp
mov
inc
xor
pop
sub
cwtl
jns
xor
add
cmp
sbb
lds
mov
mov
mov
ror
xchg
adc
std
and
xor
mov
bound
lret
aam
nop
and
pop
and
push
out
add
ljmp
repnz
dec
ss
movsb
add
pop
xchg
orb
mov
mov
xchg
sahf
adc
aad
xchg
pop
pop
into
jne
adc
and
pusha
or
pop
inc
pop
pop
in
ljmp
and
pop
cmp
enter
or
out
fwait
mov
stos
mov
pop
scas
jp
adc
jo
repnz
fadds
shl
mov
push
xchg
add
xor
bound
push
jae
xchg
sbbb
cmc
adc
push
inc
and
fisttps
xchg
dec
pop
sbb
xor
mov
xor
rcrl
stos
mov
mov
mov
jg
repnz
shll
mov
test
sbb
cmpsb
loopne
shlb
addr16
xchg
jmp
sti
rol
cmpsb
mov
push
sbb
fisttps
int
add
and
cmp
aad
aam
sbb
inc
js
das
fisubrs
dec
mov
sbb
pop
inc
jnp
inc
cwtl
stos
xchg
cwtl
icebp
push
movsl
cltd
arpl
push
mov
ror
mov
loop
sbb
ficomps
inc
jmp
dec
ret
pushf
xchg
outsb
sti
sub
leave
mov
movsb
push
movsl
mov
inc
out
xor
xchg
pushf
rclw
in
mov
xor
or
ret
fidivl
lea
mov
div
add
xor
test
dec
ja
std
push
xchg
inc
pop
mov
push
cld
xchg
mov
jno
les
inc
push
jl
pop
jecxz
loopne
adc
jge
xor
pop
sub
testb
ljmp
je
hlt
gs
out
pushw
add
ljmp
xchg
leave
dec
dec
in
jle
lret
jno
les
hlt
cmp
addr16
clc
mov
lock
pop
loopne
lcall
mov
jae
mov
or
or
daa
test
cli
outsl
ja
idivb
cmc
lods
mov
std
mov
testb
xchg
imul
mov
jb
in
addr16
psubusw
xor
test
pop
test
into
dec
outsb
outsb
add
cmp
popa
push
popa
mov
xchg
pop
aad
and
movsl
enter
sub
aad
push
cli
cwtl
jecxz
icebp
xchg
dec
cli
imul
popf
mov
lea
cmpsl
addl
lods
dec
inc
mov
aad
dec
out
lds
leave
sbb
js
or
xchg
sbb
fcompl
negb
xchg
pop
push
adc
xchg
add
js
stos
xchg
andb
outsb
call
movsb
mov
pop
fidivs
pushf
push
mov
add
add
filds
cwtl
into
push
jnp
cld
pusha
enter
cmp
scas
loop
jge
cmpsl
icebp
repnz
dec
ficoml
sub
mov
rorl
adc
scas
movsb
imul
dec
xchg
jmp
pushl
push
int3
mov
or
int
out
push
jl
repz
or
xchg
cmp
adc
adc
pop
or
shl
sub
jg
scas
or
leave
je
push
xor
xor
fisttpll
inc
xchg
cld
ljmp
pop
jmp
xor
mov
movsb
bound
aam
jno
aas
push
in
cld
jo
jge
sbb
fcoml
shl
andnps
lods
inc
pop
outsb
or
add
loopne
call
std
lret
imul
popa
push
imul
ljmp
dec
outsb
pop
jmp
lret
mov
popf
ret
out
ficoms
xchg
dec
arpl
push
bound
movsl
push
clc
dec
out
les
sbb
mov
dec
or
inc
rcrl
mov
mov
jg
ret
cmpl
add
cmp
sub
mov
mov
push
cmp
gs
rorl
adc
cli
sahf
mov
add
xorb
jnp
test
cli
out
jo
adc
inc
hlt
or
iret
xchg
jo
jg
pop
cs
sti
xchg
mov
push
dec
sahf
inc
ret
ud2
popa
aam
mov
fidivs
jae
pop
mov
cmp
xchg
or
movsl
and
xchg
cmp
or
mov
adc
cwtl
sbb
and
or
out
pmuludq
js
mov
leave
xchg
in
jno
mov
inc
in
xor
pop
fcmove
aaa
adc
jmp
fisubs
cmp
ljmp
shlb
pop
cmpsl
lods
into
or
insl
xor
jl
adc
push
lock
shlb
pop
fldenv
sti
xor
fcoms
sahf
mov
ljmp
xor
fwait
inc
sub
pop
mov
shll
jno
decb
lret
sub
jmp
adc
sbb
mov
iret
sahf
xchg
in
fwait
and
popa
imul
push
shrb
sahf
leave
mov
jp
movsl
das
push
add
rclb
stos
or
pushl
mov
push
gs
xor
cmp
cmp
xor
jb
hlt
add
ds
jge
out
pop
into
das
adc
or
shlb
adc
pop
push
jb
inc
jecxz
inc
repz
pop
adc
xorl
jne
stc
xchg
aas
push
daa
ficoms
jne
sahf
xor
push
jbe
sti
shrb
jnp
dec
imul
rcll
mov
and
lock
jmp
inc
add
rol
pushf
ljmp
mov
xor
push
add
push
jbe
jb
xchg
loop
leave
add
in
lret
pushf
es
push
sub
add
jnp
into
xchg
decb
jnp
cmp
ja
dec
mov
jo
int
sub
and
mov
pop
push
mov
ret
ret
sub
sbb
enter
es
outsb
sub
or
dec
dec
xchg
add
xor
es
in
popa
pop
gs
test
insl
icebp
insl
inc
aad
jnp
inc
cwtl
in
xor
push
aad
bound
mov
imul
rcl
mov
xor
dec
jmp
pop
out
pop
lret
xor
int
repz
notb
xor
xchg
inc
mov
cmpsl
cmp
or
int3
dec
hlt
fidivs
iret
scas
fwait
cs
in
sbb
jae
mov
pop
std
add
out
xlat
or
outsb
std
jecxz
fs
jo
mov
ja
or
jl
xchg
movsl
or
les
orb
imul
pop
sub
sbbb
int
jge
incl
dec
cs
pop
je
dec
push
cmpsl
push
je
jge
imul
add
inc
pop
xchg
insb
and
pop
cmp
push
cmp
pop
mov
and
les
call
sbb
enter
or
mov
fidivrs
mov
je
adc
mov
cmp
sbb
lds
push
call
push
sub
cmpb
pop
xor
ret
xor
paddusw
lret
xchg
adcb
mov
lret
xor
xchg
dec
into
xlat
dec
cmp
add
loopne
or
outsb
lea
push
push
push
add
repz
rclb
xchg
ljmp
insl
dec
mov
sub
and
lock
dec
pusha
jp
dec
pushf
fwait
sbb
dec
push
hlt
bound
xor
pop
mov
cmp
cmpsl
mov
gs
push
ljmp
or
aad
and
out
fsubrl
iret
subl
push
sbb
mov
pop
add
jb
scas
push
sahf
sbb
loope
fisubs
sub
out
leave
xchg
push
jnp
push
iret
and
dec
icebp
outsb
push
pcmpgtb
cli
jle
jmp
nop
sbb
int
insb
gs
pop
fsubs
into
in
bound
and
shrl
mov
test
mov
pop
xor
fwait
lcall
mov
or
fdiv
add
push
cmp
and
lahf
mov
pop
sub
push
aaa
cmpsl
fidivrl
filds
loope
test
pop
jo
cli
lret
repnz
imul
mov
sbb
popf
cmp
xor
mov
in
int3
stos
cmp
mov
out
xchg
fsubrp
xchg
outsb
sbb
hlt
fstl
mulb
call
mov
add
jle
mov
aad
fs
jae
cmp
or
sbb
jb
mov
rorl
xor
or
dec
xor
cmp
push
mov
xorl
add
xor
daa
or
divl
shlb
push
std
insl
aaa
lea
mov
es
mov
xchg
inc
push
jge
lods
sbb
mov
loope
xchg
adc
mov
fisubrs
in
imul
les
mov
les
fsubs
cmpsl
dec
test
sbb
dec
imul
clc
mov
shrl
stc
movsb
push
sar
add
mov
dec
pop
insl
ja
sahf
mov
sub
out
xchg
popa
mov
out
adc
fsubs
aas
jmp
lahf
ss
cmp
push
pop
ss
and
cmp
jl
pop
sub
popa
lea
xor
bound
cld
cwtl
adc
fwait
cmpsl
scas
testb
loopne
pushf
and
scas
or
inc
xchg
jle
loopne
cli
gs
ret
inc
xchg
ljmp
mov
sbb
jmp
add
xchg
lea
pusha
pop
xchg
mov
fisubrl
xchg
std
dec
and
data16
xchg
push
loope
enter
mov
mov
jno
push
mov
mov
cmp
xor
sbb
shr
lds
push
inc
outsl
stos
add
add
fidivrs
push
push
lret
pop
idivb
xchg
or
nop
insl
sbb
inc
ret
sbb
fldl
cmc
pop
mov
scas
xchg
jp
jp
mov
orb
mov
insl
das
ret
or
inc
stos
jbe
aas
decl
xor
xor
sarb
adc
xlat
int
mov
imulb
ja
jno
adc
cmp
xchg
mov
lret
pop
pop
or
cmc
pop
imul
jp
scas
stos
sar
mov
cmp
and
mov
jmp
sbb
sahf
jecxz
lcall
xchg
cld
test
and
sub
andl
sbb
xchg
or
aad
mov
filds
push
mov
sti
test
iret
imul
pop
out
aas
addb
in
cltd
dec
xchg
ljmp
adc
xor
nop
mov
pop
jne
sub
arpl
pop
imul
repz
mov
xchg
in
adc
mov
mov
xchg
mov
cmpsl
leave
dec
mov
outsb
push
mov
stos
in
sub
adc
ds
xor
cli
sarb
add
andl
add
jnp
out
dec
fcoms
inc
insl
xchg
sahf
cmp
popa
xlat
push
mov
or
sub
or
cld
sub
adc
mov
xchg
andl
mov
mov
adc
sub
mov
movsb
xchg
movsl
scas
xor
ss
addb
xchg
lea
repz
jp
mov
push
xlat
pop
add
aam
mov
adc
es
int3
popl
dec
xor
push
mov
xchg
mov
jbe
into
jp
jno
ja
cmp
sbb
in
fbstp
sbb
cmc
mov
push
push
lock
mov
inc
stos
and
stc
fmull
xchg
dec
xor
mov
jo
leave
push
push
sbbl
mov
shlb
jb
adc
scas
dec
pop
scas
call
mov
mov
sub
mov
dec
add
mov
loopne
out
sub
bound
ja
scas
dec
stc
js
ds
stc
in
hlt
adc
fnstsw
xchg
js
fidivl
jbe
pop
cmpb
popf
cmpsl
stc
jmp
outsb
scas
shlb
and
dec
pop
push
add
insb
add
mov
cli
push
ret
pop
mov
cs
and
fsubl
or
mov
ja
jbe
in
mov
cltd
test
mov
mov
int
mov
pop
nop
cs
xchg
cltd
adc
fcmovnu
adc
fildll
and
pusha
test
es
sti
sahf
adc
imul
test
adc
and
or
imul
sbb
std
into
lock
dec
outsb
test
adc
mov
jge
loop
jbe
psubsb
add
pop
sarl
loopne
movsb
inc
xchg
jecxz
aas
fisubs
cltd
add
loopew
leave
pushf
cmp
fistpl
push
push
adc
dec
fistps
lods
movsl
imul
xlat
fisubrs
inc
mulb
fcomps
dec
mov
mov
mov
ljmp
push
or
adc
rclb
mov
pop
rcrb
ror
mov
fistl
or
xchg
aaa
or
or
inc
leave
mov
push
repz
clc
das
in
ljmp
cmovl
cli
mov
pop
sub
adc
les
xchg
and
pop
sbb
and
dec
push
cmc
xlat
lret
scas
dec
mov
sbb
outsb
jl
daa
pop
jp
push
leave
rolb
ljmp
je
arpl
bound
cld
fptan
or
in
neg
mov
and
sub
xchg
cwtl
imul
xor
sub
mov
jle
inc
arpl
push
and
or
inc
es
inc
push
adc
lret
cmp
repz
into
test
insl
add
sbbb
subl
add
stos
lods
ja
fnstenv
sbb
stos
fisubl
dec
fisttpll
xchg
testl
push
adc
pop
pmullw
stc
rclb
add
cwtl
inc
inc
push
lods
repnz
adc
outsl
mov
and
ljmp
sti
cs
xor
mov
mov
cmpsl
hlt
in
mov
jnp
lcall
push
adc
xor
xchg
clc
xchg
mov
mov
sbb
mov
outsb
push
std
mov
into
mov
add
ss
jge
sbb
or
fstps
cmc
dec
xchg
notb
in
popf
jns
dec
loopne
sti
and
les
sti
cmp
push
lods
xchg
sbb
inc
scas
repnz
rcrl
xor
mov
and
ds
loopne
push
in
jnp
mov
cmp
pop
jecxz
push
inc
inc
xlat
and
jae
mov
add
into
cs
imul
popa
jmp
fsubl
les
hlt
clc
jae
push
cmc
popf
es
js
jg
in
fld
scas
sbbl
dec
addb
adc
mov
push
fdivl
dec
data16
lea
fwait
js
fsubl
pop
divb
pushf
or
cmp
push
cmpsb
sbb
mov
adc
addr16
mov
inc
xchg
fldcw
xchg
fwait
cmp
int3
movsb
shlb
sbb
sbb
and
mov
js
jnp
cld
xchg
in
mov
pop
gs
out
pop
sbb
and
mov
es
popf
lock
pop
in
mov
mov
cmp
xchg
add
lahf
popf
sbb
cmp
les
ret
imul
lcall
mov
insl
repz
cmpb
xchg
pusha
into
and
pop
mov
inc
loope
mov
repz
xchg
fcomps
adc
mov
fstpl
nop
stos
repz
sbb
shll
inc
icebp
arpl
mov
jb
pop
or
sbb
ffreep
cmpsb
ds
adc
mov
mov
dec
fdivrl
push
mov
mov
inc
loopw
sbb
pop
imul
fcmovbe
imul
out
mov
push
aas
jl
pop
adc
in
xchg
andl
sbb
hlt
test
xor
or
test
cs
xlat
add
outsb
ja
ja
sub
xchg
push
or
push
js
mov
adc
andb
nop
push
imul
stos
sbb
sarb
mov
push
mov
imul
xor
push
cmpsl
les
shrb
in
push
push
mov
lret
sub
add
add
jnp
xchg
leave
push
scas
outsl
lret
jne
dec
out
out
jae
rcl
in
fwait
sub
xor
and
rol
mov
mov
xor
inc
das
aas
testb
xchg
xlat
adc
test
sti
cmp
pusha
call
shlb
mov
lret
sbb
dec
pop
cmpsb
das
add
jecxz
mulb
and
or
push
mov
cs
test
mov
add
aad
xchg
ret
push
mov
loope
sub
movsl
movsb
mov
mov
cmp
dec
ficoms
mov
js
xchg
sub
sbbb
mov
fildl
cmp
mov
aad
dec
dec
les
enter
jae
adc
pop
daa
dec
dec
adc
shrb
xor
add
sub
adc
js
jle
adc
fadds
adc
loop
ds
dec
lret
mull
sbb
rcrl
movsb
xlat
divb
mov
jns
imul
push
pop
mov
les
rolb
sbbl
inc
inc
jns
pop
pop
ret
inc
inc
movsb
nop
xchg
xor
inc
cmp
scas
nop
scas
insl
cli
pop
sbb
xor
lock
inc
mov
les
xchg
sbb
push
push
ret
addr16
add
pop
pushf
popa
lea
add
fistpl
inc
js
je
stos
popa
fistl
test
inc
lock
rcll
subb
imul
inc
ror
sahf
mov
xchg
daa
dec
xor
sub
popa
inc
or
mov
xor
cli
std
lds
or
inc
push
imul
stos
inc
inc
jnp
lea
pop
je
push
lcall
int3
mov
test
or
std
xchg
cltd
lret
and
je
xchg
addr16
aad
fidivrl
and
dec
inc
jmp
aas
mov
icebp
or
mov
push
jg
fwait
js
mov
pusha
ss
lahf
cld
sahf
jl
xor
sbb
aaa
cwtl
cmpsb
adc
rclb
and
push
sbbl
and
inc
out
cmc
leave
xchg
or
outsl
sub
push
mov
xchg
mov
inc
ljmp
push
lea
inc
andb
or
mov
adc
cmpsl
imul
dec
xchg
insl
enter
push
push
mov
pusha
jns
dec
jg
sub
mov
and
inc
inc
ffree
adc
or
jno
cmp
push
adc
sub
add
nop
lahf
jnp
mov
xor
scas
in
fdivs
jle
inc
push
imul
lds
and
sub
mov
fcomps
fs
mov
push
pop
mov
cltd
rcl
sbb
fcompl
push
jmp
cmp
sar
out
mov
sbb
andl
fwait
add
push
sar
lret
xchg
push
mov
and
mov
adc
fsubrs
push
or
add
sbb
mov
push
add
push
pop
push
aad
adc
rcll
jecxz
arpl
popa
stos
das
jno
cmp
and
clc
jnp
mov
adc
fstps
xor
jae
cld
mov
push
std
sub
pop
es
cmp
orl
push
pushf
xlat
aas
xor
popa
jp
cmp
cwtd
pusha
jnp
data16
icebp
mov
out
call
in
add
data16
and
jg
test
cmp
std
jmp
das
iret
cmp
jne
test
hlt
pop
les
addr16
into
xor
fstps
xchg
punpcklbw
jecxz
fisttps
xor
sbb
mov
xchg
je
frstor
lock
fnsave
je
int
repz
cs
jmp
rorb
out
xchg
cmp
pop
incb
fisttpll
sahf
cmpsl
xchg
test
or
xor
outsb
les
ret
stos
mov
push
add
adc
es
stos
xchg
insb
insl
lea
adc
mov
xor
inc
fists
fwait
mov
xchg
aaa
rclb
pop
out
sub
or
mov
push
hlt
shlb
cltd
sbb
sarb
xchg
into
xchg
int3
vmaxsd
in
sub
inc
ficoml
scas
sahf
push
mov
xchg
add
jp
pop
ret
and
or
push
mov
sub
shlb
mov
adc
jp
in
scas
jle
popa
push
repnz
pop
loopne
aad
rcrl
sbb
mov
pop
cld
int
push
icebp
loopne
xchg
cltd
scas
mov
mov
xchg
push
adc
das
pusha
aam
lcall
jns
aam
fmul
popa
leave
jne
aad
sbb
loop
push
movsb
popa
shl
rcrb
jae
sub
out
cwtl
jge
jl
scas
mov
lock
sub
shrl
mov
rcll
scas
pop
mov
popf
aaa
mov
xchg
sub
and
push
mov
cltd
pop
stc
std
dec
xlat
jecxz
mov
movsb
insb
stc
ljmp
scas
add
gs
or
out
imul
fsubr
xchg
lock
andb
jo
nop
push
mov
or
aas
push
mov
jo
leave
cli
xchg
mov
clc
es
pop
mov
add
imul
rcl
jno
adc
pop
repnz
or
dec
gs
js
xor
cmp
sub
into
mov
pop
xchg
pop
pop
inc
and
ficoml
loope
fld
daa
insl
imul
nop
push
jnp
xlat
mov
lret
je
jmp
cs
lahf
aad
add
stos
test
xlat
inc
push
scas
cmp
test
stos
test
xchg
or
mov
cs
xor
daa
notl
mov
scas
stos
pmulhw
ficomps
pop
and
jno
pop
or
sbb
jns,pn
cmp
mov
or
fldcw
test
xor
loop
jge
cld
pop
int
dec
adc
or
xor
or
push
mov
inc
adc
lret
std
jecxz
xlat
ja
and
ljmp
pop
insl
xchg
cmp
or
imul
mov
jae
cmc
adc
mov
sbb
ds
push
fisubrs
and
lods
daa
add
shlb
ficomps
movsb
aas
push
lahf
jp
jo
lock
jnp
enter
lret
jmp
shrl
repz
cwtl
loope
pop
and
jne
out
mov
jl
repnz
js
repnz
push
mov
ret
inc
pop
sarl
mov
movsl
mov
jne,pt
dec
lret
addr16
sub
jns
jnp
and
inc
cmp
jmp
sbb
fmuls
lea
add
cmpsl
xor
sub
repnz
pushl
outsb
lcall
enter
mov
test
push
imul
std
push
mov
xor
adc
iret
dec
xchg
add
je
push
sub
xchg
call
scas
push
cmp
rcr
push
push
cwtl
out
mov
xor
movsb
cmp
cmc
mov
jmp
jns
mov
test
xchg
jmp
shlb
arpl
fldl
js
jmp
arpl
movsb
and
pushf
aam
inc
imul
xchg
arpl
inc
mov
jp
ss
pop
xchg
xchg
mov
scas
outsb
fmuls
add
ljmp
call
sbb
leave
or
cld
adc
mov
testb
sbbb
pop
dec
int3
sar
pop
in
adc
pusha
and
ss
sbb
sub
mov
xor
mov
mov
push
xor
inc
cmc
jg
inc
dec
enter
fcom
xlat
adc
push
push
test
sbb
pop
sub
das
subb
test
jecxz
loop
add
mov
jmp
jmp
inc
mov
repz
push
sbb
mull
mov
lock
mov
add
pop
sub
stos
in
add
out
out
jno
jecxz
inc
jae
xor
jmp
xchg
add
mov
jl
and
mov
ret
pushf
sarb
mov
mov
loopne
negl
leave
jmp
adc
add
int
mov
orb
dec
neg
jecxz
jnp
inc
cmp
subb
mov
vmwrite
mov
lods
cwtl
incb
mov
mov
mov
add
imul
xchg
mov
jg
cltd
pop
pop
pop
pop
outsl
imul
adc
sbb
push
push
fldl
fldl
cs
outsb
mov
jle
mov
sbb
lea
push
adc
in
movsl
rol
pop
cmp
clc
inc
mov
testl
inc
std
lds
mov
imul
xor
mov
outsl
repnz
lods
cmpsb
add
test
ljmp
loope
pop
repnz
sbb
mov
shrb
xlat
jp
gs
xchg
push
push
or
xor
cwtl
ss
mov
lea
testl
pop
rolb
or
pop
pop
test
mov
test
stc
xchg
lcall
enter
test
lock
leave
and
push
into
or
fldl
mov
stos
mov
in
jl
stos
cmp
mov
repnz
push
mov
jae
jns
add
ret
jns
fidivrs
sahf
mov
movsl
or
testl
and
push
loopne
enter
cmp
pop
mov
mov
loop
sarl
xchg
lock
pop
enter
xchg
lret
sbbl
or
mov
jmp
std
cmp
imul
push
sbb
adc
push
es
ret
mov
jl
imul
ss
xor
add
shll
or
sub
stos
ret
in
dec
pop
jo
jle
jno
mov
lahf
mov
testb
jl
icebp
mov
mov
stos
int3
pushf
or
fnsave
lds
push
leave
xor
icebp
cltd
insb
inc
inc
sbb
pop
adc
int3
dec
or
stos
mov
adc
in
or
dec
mov
dec
loop
jecxz
xor
mov
mov
out
mov
int
inc
fsubrs
js
sub
js
jbe
iret
enter
pop
mov
sub
fcom
ficoms
inc
out
mov
pop
sub
adc
or
iret
daa
mov
inc
ret
dec
mov
inc
inc
jne
movsb
ja
push
cwtl
inc
pop
adc
xor
mov
dec
js
lret
loope
jnp
es
adc
push
out
nop
insl
mov
jge
and
inc
iret
jo
dec
stc
addr16
int
mov
xor
mov
sbb
andl
sahf
inc
aaa
fs
cwtl
fs
and
xabort
push
fwait
orl
iret
add
fwait
xor
xor
into
lods
movsb
js
add
add
sbb
jb
jge
testl
dec
cmp
and
cmp
or
lods
jne
add
popf
or
push
pop
enter
xorb
aas
iret
jnp
push
iret
loop
popa
mov
pop
divl
fwait
pop
inc
in
adc
push
or
xor
stos
int
es
test
xchg
in
lods
mov
ret
jmp
cli
add
cltd
andl
popa
adc
mov
jmp
mov
jo
or
xchg
dec
jmp
sub
xor
and
imul
and
sti
pop
dec
mov
cmp
mov
adc
or
loop
push
pop
or
fists
jl
ret
ret
popa
mov
and
adc
xchg
jo
add
mov
das
xlat
cmp
orl
inc
outsb
push
imul
xor
icebp
sbb
push
add
sbb
aad
cmp
mov
pop
outsl
jns
scas
stos
imul
xchg
iret
dec
lret
test
lock
xchg
aam
inc
out
mov
jl
cmpsl
arpl
and
into
mov
into
rcll
sbb
jnp
mov
ljmp
mov
pop
xor
lret
mov
mov
sub
fcoms
out
push
roll
jbe
into
xchg
in
lahf
xchg
enter
mov
sbb
mov
outsl
push
sbb
test
cmp
mov
inc
out
shlb
in
push
xor
mov
pop
or
and
gs
lcall
movsl
dec
xor
push
je
jae
lcall
pushf
and
daa
out
popf
cmp
in
sbb
push
jnp
aam
add
pushl
jns
mov
xchg
cmp
fdivrl
dec
js
fninit
xor
push
dec
ds
pop
adc
stos
jmp
push
mov
hlt
pop
mov
dec
sbb
jno
lret
cmp
pop
cmp
xchg
hlt
xchg
dec
ljmp
test
inc
movsl
pop
adc
add
shll
lret
jbe
xchg
les
ret
push
or
cltd
arpl
imul
aad
push
jmp
jle
dec
inc
iret
jno
sub
jecxz
adc
dec
enter
loope
adcb
inc
insb
mov
mov
aaa
pop
or
mov
fcos
sub
add
add
cmpsl
andb
inc
mov
divb
push
jmp
in
inc
or
push
repnz
sub
mov
leave
lahf
jmp
in
cs
ds
in
in
pop
cmpl
loope
sbb
scas
push
out
mov
cltd
into
xchg
aaa
or
sub
sti
rcll
add
add
and
test
push
ljmp
lcall
cs
add
dec
fdivs
mov
pusha
and
pushf
popa
adc
jns
mov
lret
outsb
and
call
pushf
jbe
nop
sbb
jecxz,pt
bound
das
push
test
out
and
cmp
nop
enter
mov
mov
arpl
fcoml
inc
mov
test
push
sub
mov
cmp
or
inc
dec
sbb
movsb
mov
add
imul
jmp
imulb
jge
les
int3
scas
and
stos
mov
mov
add
cli
inc
mov
in
out
pop
mov
scas
test
lcall
and
inc
pop
mov
and
fdivr
push
cmp
xorl
sub
xor
in
lods
mov
xchg
popf
jno
lods
xchg
adc
xor
mov
in
into
js
daa
ja
inc
jbe
inc
es
jp
sarl
mov
and
xchg
adc
iret
inc
xchg
aas
outsb
sbb
lods
fisttpl
and
nop
cmpsb
sub
call
mov
cld
pop
adc
dec
int3
cltd
xchg
outsl
negl
jmp
out
clc
xchg
out
xchg
sub
inc
js
fcompl
sbb
pop
ret
push
xor
add
adc
addr16
ja
cmpsb
aas
test
test
or
push
shlb
je
push
ret
fdivr
imul
scas
push
or
test
mov
xor
add
out
shll
dec
xor
xchg
stos
jae
and
lods
push
pushf
out
lds
je
das
cltd
dec
arpl
je
scas
mov
dec
cld
mov
test
pop
lahf
adc
fimuls
in
cmpl
fs
loopne
ret
mov
sub
inc
sbb
dec
inc
pop
aas
sbb
inc
push
jecxz
shll
add
dec
and
cld
mov
imul
pop
stc
dec
les
mov
push
dec
jnp
call
inc
lcall
pop
scas
pushf
lret
xchg
sbb
fwait
jae
test
adc
in
cmp
adc
fs
and
popa
ss
es
mov
push
movl
and
sbb
mov
movsl
inc
xor
inc
add
fisttpl
iret
jmp
notl
xchg
pop
mov
das
cmc
into
inc
pop
divb
jge
adc
inc
sti
jbe
ss
mov
loop
imul
sub
dec
mov
or
push
cmp
dec
cmp
ret
in
orl
fidivrs
dec
addl
xchg
popa
mov
ret
ss
out
xchg
jmp
out
xchg
push
mov
cmp
aam
jle
xor
daa
bswap
icebp
adc
xchg
jb
ret
xchg
sbb
or
push
cmp
js
in
xchg
jl
push
adc
and
gs
nop
shr
repz
jecxz
or
je
mov
xchg
xlat
cmp
mov
outsl
mov
push
test
sub
jne
out
aas
xchg
lods
hlt
jo
and
lock
subl
lret
mov
jecxz
ljmp
pop
and
and
dec
imul
jns
add
pop
jae
es
and
cld
or
stos
repnz
or
scas
sbb
sbb
mov
je
adc
lds
xchg
mov
add
xchg
scas
cld
loop
stc
jmp
or
and
idivl
out
xorl
test
mov
aad
loop
jmp
inc
sbb
xor
or
je
cmp
lods
dec
sbb
jb
xchg
sbb
or
jmp
mov
int
sbb
std
xor
or
adc
adc
and
mov
dec
cmp
mov
jl
out
xchg
js
imul
adc
inc
pop
push
pop
push
fs
cltd
popf
sbb
dec
mov
jmp
xor
imul
push
mov
call
aad
mov
jecxz
mov
mov
sahf
sbbb
sbb
out
push
push
cmp
mov
xchg
adc
or
imull
es
dec
sbb
stos
push
add
xor
xor
out
rcll
loope
fistpl
add
sbb
data16
lahf
es
pushf
inc
cmp
or
jo
loopne
mov
std
nop
sub
mov
dec
sbb
push
imul
jmp
mov
add
pop
mov
jle
int3
sti
jns
out
out
add
bound
or
in
pop
mov
and
push
pop
test
sahf
imul
dec
xor
push
test
mov
shlb
sbb
xchg
add
loop
mov
lret
adc
mov
jecxz
shlb
ret
push
dec
inc
testl
lds
xor
adc
cmp
lret
call
cltd
stos
aad
rorb
out
push
push
inc
lret
mov
add
aaa
ret
inc
jp
daa
adc
fucomi
push
ret
pusha
das
lret
lahf
lret
xchg
adc
cmp
and
lcall
dec
push
dec
push
push
pop
adc
andb
jmp
cmp
popa
movsb
call
fidivs
popa
inc
sbb
and
and
insl
mov
mov
aam
icebp
and
xor
or
out
mov
cmpsl
lahf
int3
stc
aaa
pop
or
lock
adc
mov
xchg
ficoml
inc
cli
cmpsl
and
push
jle
out
js
ja
in
dec
cmp
cmp
jle
and
sbb
fdivl
repnz
les
rclb
rcll
aad
fsubp
adcl
adc
pop
aad
mov
es
pop
mov
and
cli
dec
scas
push
jmp
add
cli
imul
into
lret
jno
xchg
notb
sub
xor
in
fs
cmp
scas
jae
mov
cmpsl
inc
lock
pop
adc
xchg
adc
and
jmp
std
int3
int3
inc
add
ret
std
push
push
shrb
mov
mov
cwtl
imul
jle
ja
cltd
fwait
idivl
js
pop
inc
cltd
sahf
bound
dec
in
cwtl
pop
add
int
fst
aas
pop
cs
mov
lahf
dec
movsl
xchg
dec
push
mov
inc
fisubl
int
mov
lds
dec
testb
sbb
int3
mov
int
jp
out
mov
in
scas
insl
mov
lods
add
cmpl
xlat
and
data16
push
push
lahf
sub
hlt
shl
loopne
push
xor
mov
cmc
inc
lahf
inc
cmp
push
push
rcr
arpl
xchg
jo
repz
xchg
cwtl
cmp
daa
fdivrl
shrb
and
int
mov
subb
int
clc
je
mov
xor
xchg
and
mov
adc
fisubs
jle
enter
into
out
xchg
dec
xchg
fstps
inc
cmp
lods
int3
jns
imul
jnp
inc
push
sti
add
fdivrs
popf
mov
sbb
and
mov
or
fcompl
fsts
jecxz
iret
pop
or
pop
adc
sbb
dec
add
and
dec
fcmovnbe
nop
sub
stos
ljmp
lods
sub
shrb
std
rcl
ljmp
jecxz
jle
inc
out
loope
and
adc
imul
mov
movb
xor
add
jecxz
or
jnp
inc
jge
mov
mov
sti
mov
jnp
xchg
cmpb
rolb
and
sbb
aad
bound
pop
inc
jl
cmp
or
fstl
sbb
stos
dec
lods
adc
repnz
mov
add
mov
pop
lret
scas
js
lock
mov
.byte
inc
stos
aas
mov
mov
or
in
mov
or
sbb
or
sub
or
push
mov
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
or
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
sbb
add
add
add
incl
add
add
dec
add
add
add
sub
add
incl
add
add
add
add
incl
add
add
aaa
dec
add
add
add
incl
add
add
cmp
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
inc
dec
add
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
dec
dec
add
dec
dec
add
lcall
dec
add
dec
add
incl
add
add
push
dec
add
add
add
push
dec
add
push
dec
add
incl
add
add
add
incl
push
dec
add
fisttpl
sbb
add
jmp
dec
add
fs
add
add
add
incl
add
add
fs
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
add
incl
add
add
push
add
incl
add
add
add
add
incl
add
add
imul
add
add
sti
outsb
dec
add
outsb
dec
add
add
add
incl
dec
add
dec
add
inc
jno
add
jno
add
aad
add
add
loope
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
jne
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
js
add
add
add
incl
add
add
js
add
add
add
incl
add
add
jns
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
jge
add
add
add
incl
add
add
dec
add
add
add
jmp
jle
add
jle
add
jmp
jg
add
in
jg
add
jg
add
incl
orb
orb
jmp
orb
orb
pushl
orb
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
xchg
add
add
incl
add
add
mov
ljmp
dec
add
add
add
add
push
mov
or
mov
mov
or
in
mov
or
sbb
or
sub
or
push
mov
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
lods
bound
sti
rclb
mov
and
mov
mov
fldt
fs
lret
and
or
imul
mov
xchg
iret
sbbl
clc
push
push
cmp
xor
mov
test
jbe
mov
push
sbb
jle
inc
dec
xchg
push
adc
mov
push
loop
mov
repz
sysret
stc
or
dec
cmp
or
in
xchg
push
pop
xorl
and
mov
outsb
cmp
push
pop
mov
mov
push
sbb
lret
cltd
imul
out
sbb
adc
mov
mov
sub
in
popf
insl
mov
push
push
in
lret
push
aaa
imul
dec
scas
push
push
xchg
repnz
sti
cld
pop
js
dec
xor
mov
outsl
ret
sti
insb
push
imul
fists
push
lahf
int3
es
cmp
adc
cmp
rcl
shl
jb
fnstsw
xchg
add
inc
fnstcw
cmp
js
add
push
inc
in
or
push
pop
jge
mov
icebp
lock
add
stos
push
iret
and
and
arpl
scas
out
int3
testl
mov
sbb
sete
sti
fdivr
adc
mov
adc
mov
sub
push
test
sub
dec
sub
test
icebp
fisttpll
cmp
aam
lds
mov
mov
sbb
cld
les
orb
shl
add
inc
xchg
push
mov
test
cmc
cmp
mov
adc
popf
stos
cmp
add
pop
mov
into
or
mov
add
test
scas
or
lea
sbb
inc
adc
mov
or
repnz
push
cmp
call
int3
addr16
dec
xor
test
outsl
ret
fisubrl
pop
int
icebp
in
cmp
or
xchg
pushf
lea
and
icebp
inc
shl
jl
mov
aam
mov
inc
hlt
cmp
jne
loope
and
lret
or
xchg
call
push
scas
sub
jae
ret
pop
es
dec
dec
push
mov
push
mov
mov
lret
jae
pushf
pop
aas
sbb
mov
popf
nop
push
fdivrs
cmp
sbb
or
xlat
sub
xchg
jo
scas
dec
mov
xchg
ss
fbld
pop
movsb
cmp
fidivl
xor
add
dec
idivl
or
mull
push
add
pop
push
pop
pop
jle
cwtl
repnz
cwtl
sarl
adc
sbb
mov
sbb
cmpsb
dec
shlb
outsl
xchg
and
add
jp
sbb
inc
lahf
popa
xchg
jge
push
push
movsl
xchg
xchg
call
cmpb
in
adc
out
hlt
pop
xor
loop
iret
loop
inc
xor
and
dec
mov
sub
cs
cld
push
cmpb
sti
insl
out
and
mov
rcrb
cmc
mov
mov
xlat
cmp
idivb
les
ss
or
mov
mov
int3
xlat
nop
cli
cli
add
mov
out
xchg
cmp
bound
jecxz
jp
inc
jns
cli
les
push
lcall
sub
mov
pop
inc
faddl
inc
cmp
xchg
push
pop
push
in
pop
push
out
stc
sbb
push
dec
out
cld
insb
outsb
in
popf
ja
ficoml
xor
or
jge
in
mov
adc
arpl
push
div
and
loope
popa
sarb
cmpsl
cmpsb
popf
andb
test
jb
and
cmpsb
sbbb
jl
cltd
mov
cli
push
jae
iret
inc
xor
cmc
mov
cmp
movsl
jo
mov
mov
out
inc
pop
mov
xor
js
outsb
movsb
out
insb
outsb
movsl
fwait
jmp
mov
insl
adc
lcall
push
pop
jne
gs
mov
mov
lods
pop
pop
add
mov
lds
sub
stos
out
add
sub
and
push
sbb
push
lods
dec
in
cmp
adc
jbe
in
push
mov
out
clc
ja
call
aas
sbb
scas
hlt
sub
xchg
mov
pop
in
rol
mov
popa
clc
jle
insb
xor
jp
inc
jns
inc
adc
or
lret
cmp
faddl
loope
movsb
data16
and
push
dec
sbb
lret
jle
pop
or
ret
fistl
or
lds
in
fwait
or
pop
jne
stos
andb
mov
and
jbe
test
push
ds
out
ret
ds
pushf
cmc
or
jp
popa
scas
fs
pop
cs
movsl
aas
mov
cmpsb
iret
arpl
fsubl
sbb
adc
or
out
dec
and
dec
lahf
pop
cmp
aas
lods
mov
or
fiadds
xlat
ret
adc
rolb
adc
mov
data16
lahf
xchg
inc
add
pop
dec
jns
mov
ss
fsubrs
addr16
sbb
inc
mov
sbb
outsb
arpl
inc
mov
push
rcrl
addl
xchg
xor
xchg
loopne
loopne
ss
add
mov
push
xchg
divl
dec
pop
cwtl
call
jmp
add
jmp
clc
aam
in
cmp
hlt
ja
or
cmovno
neg
ret
sahf
fwait
xchg
out
test
fucomi
leave
movsb
into
sub
mov
fmull
or
adc
cmpsb
icebp
dec
cmpsb
mov
xor
lret
leave
jge
les
cmp
mov
test
daa
xor
adc
fwait
add
xchg
lds
roll
iret
into
out
popa
mov
gs
add
sbb
pusha
int
lds
popf
add
es
push
pop
sub
ja
bound
vpcmov
xor
jle
and
xchg
xchg
pusha
push
loopne
loope
std
sub
stos
call
mov
inc
gs
push
cli
cmp
outsb
mov
jg
push
pop
sub
sbb
mov
and
or
mov
push
lahf
add
fildll
into
leave
xchg
test
jmp
rorl
lret
test
sub
stos
jo
push
test
sarl
add
jo
pushf
dec
xor
dec
mov
movsl
dec
ror
push
jmp
and
sub
pop
or
mov
adc
mov
cmp
icebp
xchg
xchg
add
lods
ja
adc
fisttpll
rorb
sbb
mov
inc
incb
hlt
inc
addr16
xchg
pop
or
fiaddl
add
pop
inc
ja
xchg
or
and
add
dec
lock
test
xchg
mov
ss
adc
or
mov
fisttpl
xor
cmp
sbb
dec
pop
push
out
shlb
jp
jg
or
insb
mov
stos
inc
and
stc
pop
mov
mov
aaa
in
popf
repz
inc
in
inc
mov
xor
lods
sahf
jmp
push
ffree
xchg
popf
fsub
push
movsb
and
xor
or
pop
add
push
dec
sub
xorb
mov
cmc
out
dec
fs
xchg
xor
lahf
inc
and
jne
pop
dec
adc
ss
test
mov
scas
inc
sahf
fldt
xor
dec
mov
and
or
popf
cwtl
and
inc
shufps
add
stos
pop
mov
outsl
adc
jmp
xor
popa
jl
push
fs
rolb
loop
inc
xor
mov
shld
sbb
jle
imul
sub
xchg
sub
mov
ja
xlat
fsts
xor
and
inc
inc
ss
scas
mov
into
inc
nop
or
xor
scas
mov
js
push
repz
das
sub
xchg
jg
push
shrl
leave
int
sub
sti
dec
mov
test
loopne
dec
movsl
lds
inc
jb
insl
nop
js
bound
fwait
dec
pop
addr16
adc
stc
lods
sub
inc
jns
or
in
jno
sbb
and
push
jbe
mov
xor
sub
push
lahf
or
jecxz
addr16
lahf
xor
js
lods
aad
mov
push
and
xchg
pop
sbb
mov
test
cwtl
test
iret
push
and
movsl
sahf
cmpsl
mov
xchg
pop
mov
das
or
shlb
jbe
mov
stos
jo
into
xchg
ds
scas
mov
push
sbb
enter
lret
mov
leave
mov
cmp
xchg
push
aaa
mov
inc
inc
mov
insb
inc
or
adc
int3
push
je
xchg
mov
xchg
pop
add
imul
fs
adc
rolb
jle
xor
iret
stos
insb
cmp
pop
pop
lods
add
je
push
pop
stc
dec
push
daa
insl
inc
xor
dec
cmp
xchg
test
jge
cmp
je
dec
and
fidivrs
sub
sbb
mov
test
jmp
cmp
test
jbe
shrl
nop
xchg
inc
into
jmp
or
mov
or
mov
and
push
push
or
push
or
pop
cmp
test
mov
pop
inc
dec
dec
jo
addr16
mov
mov
xchg
mov
fwait
or
pop
jne
jns
rcl
lahf
imul
add
inc
dec
xchg
mov
add
ljmp
fdivp
nop
ss
adc
mov
pusha
cwtl
mov
cmp
mov
arpl
insb
rcrb
mov
inc
jae
shl
shll
dec
mov
xor
sbb
add
cmp
xchg
insb
andb
les
lret
and
test
xchg
leave
fisubs
in
loopne
pop
movsb
pusha
pop
stos
or
shrb
or
cmpb
sti
insb
cmpsb
sti
xchg
pop
jns
or
dec
aas
ss
mov
dec
adc
mov
lret
sub
insb
mov
jle
out
lret
nop
or
or
mov
xchg
and
hlt
push
jmp
mov
xor
mov
fsub
inc
hlt
xlat
jne
jecxz
cld
push
xor
cltd
xchg
dec
lret
movsl
or
sbb
cltd
repz
sbb
ret
daa
inc
xchg
jne
sub
lahf
sbb
mov
jmp
and
lret
lds
xchg
aad
and
repz
push
rcl
cmp
sbb
or
addl
fwait
jnp
xorb
inc
adc
int3
cmc
cmp
and
pop
bound
inc
pop
xchg
in
jge
xor
jmp
pusha
ret
push
mov
pop
lods
mov
testb
mov
xchg
std
sahf
xor
and
xlat
push
sahf
rorb
mov
rorl
sti
push
or
push
xor
icebp
mov
cwtl
or
sbb
jnp
dec
inc
push
mov
and
or
sarb
or
jbe
out
pop
mov
sub
scas
dec
dec
adcl
xchg
out
test
cmpsb
xchg
lcall
out
ljmp
out
imul
rcl
jb
pop
sbb
xchg
fidivrs
call
ds
adc
shrb
icebp
cmpsl
lret
clc
jbe
jne
arpl
mov
push
rcl
xor
adc
xchg
xchg
aad
fs
ja
iret
xor
ss
and
xchg
jne
std
jne
inc
push
popa
xchg
inc
negb
add
xor
outsl
enter
push
adc
sbb
jle
adc
mov
stos
adc
lods
daa
push
mov
aam
ret
pop
aad
inc
mov
mov
mov
xor
mov
test
xchg
dec
xchg
and
je
inc
adc
ljmp
aad
int
cltd
lret
mov
push
flds
xor
testb
pushf
add
mov
pop
scas
cmpsl
inc
into
mov
fcomps
iret
cltd
cmp
mov
sbb
popl
xor
cmp
test
das
cltd
das
mov
test
dec
imul
loope
addr16
push
sub
mov
insl
cmpsb
lock
fimull
sbb
cmp
inc
jmp
ret
in
js
sub
sbb
xchg
aam
subb
add
push
sbb
cltd
iret
push
xlat
and
xor
leave
xchg
mov
and
add
jne
mov
ja
rorb
cmp
or
testl
jno
sub
ds
jecxz
mov
rorl
sbb
out
mov
aaa
daa
test
add
mov
or
cmovge
pop
into
inc
cmp
cmpl
add
cmp
pusha
ret
js
push
or
sbb
int3
dec
xchg
sbb
jge
test
out
sub
cltd
imul
mov
add
call
add
xchg
dec
rclb
addr16
cwtl
in
push
inc
xor
dec
fwait
cltd
add
les
mov
out
push
sub
jle
lret
mov
and
xchg
xchg
adcl
inc
aas
mov
jmp
mov
sbb
jle
add
add
push
in
xchg
xchg
shl
mov
and
aas
jnp
adc
out
lock
mov
mov
lret
cmc
pushf
fildl
clc
shl
jns
mov
daa
lds
pop
xor
loope
adc
psraw
sub
dec
mov
or
call
xlat
pop
test
int3
xor
ljmp
mov
or
neg
test
inc
jl
shll
loope
jb
lock
shl
pop
mov
xchg
lahf
push
fwait
pushf
ficoml
leave
jmp
inc
push
fs
hlt
push
sbb
sbb
push
mov
cmc
xor
xor
ret
pop
jecxz
or
fwait
daa
les
mov
enter
pop
dec
jg
imul
push
loopne
pushf
add
mov
rorl
lds
add
lcall
cmp
lock
pushf
sub
cmpb
sub
pop
dec
adc
inc
pop
int
jge
xor
mov
fimuls
ja
aam
cmp
das
mov
xlat
mov
lahf
xchg
popa
xchg
stc
pop
mov
aad
push
lods
negb
mov
imul
adcl
or
jge
enter
push
jb
dec
adc
mov
push
in
xor
mov
loopne
jle
xchg
cmp
dec
cmp
mov
test
loopne
outsl
push
mov
cld
in
cwtl
dec
jp
rolb
add
dec
cs
push
add
adc
scas
adc
dec
xchg
push
pop
out
test
out
mov
jmp
movb
sbb
pushf
pushf
repnz
sbb
xchg
lods
popf
cmc
loope
add
ljmp
fimull
sbb
rcl
stos
ljmp
inc
mov
std
ljmp
cmp
inc
cld
enter
ret
mov
addr16
movsl
adc
add
hlt
push
lret
cmpsl
ja,pt
jg
jl
xchg
popf
lods
jo
cmc
fs
gs
in
rorb
pop
les
cmpsl
jle
jbe
mov
sbb
pop
lret
fstpl
mov
xchg
mov
xor
push
xor
push
mov
and
dec
fbld
outsb
jl
imul
xchg
in
je
nop
jae
dec
xchg
push
pop
xor
out
lods
inc
mov
fs
jmp
shll
test
ljmp
xchg
int
lcall
mov
es
push
pop
jo
mov
push
addl
out
pop
fcompl
adc
and
adc
sbb
add
ds
out
fcomps
aad
ljmp
fdivrs
mov
out
pop
out
fs
fbstp
insl
inc
inc
cmp
sub
cmp
xchg
fwait
mov
mov
push
scas
pop
pop
inc
mov
mov
push
add
jg
adc
pop
cmpl
jns
les
jg
pop
sub
jg
insl
fdivl
mov
dec
pop
loop
add
sub
rolb
lods
adc
cs
js
cmpsb
jl
iret
icebp
cli
stos
sub
pop
cmp
push
in
lret
imul
sbb
stos
push
push
lods
mov
notb
sbb
call
xor
ficomps
enter
pop
pop
sbb
lret
jne
adcl
imul
xor
imul
xlat
xchg
mov
add
gs
jno
cmp
inc
aam
addr16
loop
testl
ss
dec
scas
je
and
adc
dec
daa
or
push
loope
outsl
imul
lret
enter
sbb
in
push
jb
testl
test
cmp
fsubs
push
mov
mov
xchg
sbb
mov
cltd
cmp
int3
inc
jae
add
shl
mov
push
data16
cmp
lret
mov
xor
pop
mov
ds
popf
mov
xor
popf
clc
es
mov
dec
or
jecxz
rcrb
fldt
sbb
bound
push
daa
push
mov
pop
add
cwtl
inc
mov
pop
pop
push
pushw
insb
push
xor
stos
jne
mov
int3
jl
loopne
sbb
sti
std
adc
enter
and
stos
out
and
sbb
cmp
iret
pop
mov
std
cwtl
push
adc
sahf
or
imul
xor
gs
xor
add
dec
das
inc
lret
mov
and
rcr
std
pop
imulb
aaa
scas
ja
jle
pop
out
faddl
inc
sub
shll
rcl
push
cmp
test
inc
pop
out
adc
dec
add
pop
pop
push
lds
in
fcmovne
test
mov
pop
mov
cs
cmp
jo
pop
pop
inc
sub
or
mov
inc
ljmp
pop
cmp
shrl
push
mov
cmpsb
add
mov
cli
fldl
cmp
lea
pop
popa
mov
or
sub
mov
xorl
aaa
ficoml
movsl
xlat
mov
stos
pop
dec
or
repnz
mov
jmp
andl
flds
pop
addr16
or
mov
xor
roll
out
add
inc
ds
mov
and
and
lret
icebp
adc
je
add
jg
pop
int
fldenv
ljmp
sub
xor
fwait
mov
leave
pop
notl
push
add
jnp
cmpsb
push
pop
hlt
cmpsb
jno
cmp
lcall
xchg
negb
cli
pop
mov
or
push
fadd
mov
jno
add
fstl
inc
shlb
test
xchg
pop
clc
sub
mov
ficoml
lahf
call
xchg
stc
dec
sbbb
sbbl
jno
dec
cmp
rorb
xchg
nop
outsb
dec
sarl
mov
cli
or
adc
and
in
out
add
xor
dec
arpl
mov
les
mov
add
xchg
leave
pop
pushf
mov
mov
popa
jge
icebp
and
lods
xchg
mov
adc
mov
ret
lret
hlt
push
jae
sti
in
ret
or
mov
mov
and
jne
out
mov
or
push
mov
scas
lea
inc
insb
mov
xlat
ja
cmc
outsl
aam
dec
pop
pop
imul
mov
in
int3
sbb
iret
mov
mov
shr
sbbl
loopne
adc
movsl
sahf
jns
mov
pop
add
jg
sti
xchg
sti
mov
cmp
cmp
into
iret
gs
out
dec
in
cmp
and
insb
call
enter
rcrl
out
imul
cmpsl
movsb
aam
loope
in
push
adc
shl
cmp
xor
pop
pusha
push
mov
fs
sbb
sub
call
decl
xor
cmp
pop
mov
pop
int3
daa
jle
data16
shrb
loop
testl
inc
push
push
jno
and
jge
sbb
cmpsl
fstl
push
xchg
cmpsl
cmp
lods
dec
imul
test
lods
jne
ja
push
lods
add
inc
dec
mov
pop
xchg
orl
dec
fs
xchg
xchg
adc
mov
test
dec
push
movsl
movsb
mov
push
xchg
sub
dec
fwait
ret
push
in
aaa
movl
push
popf
add
inc
xchg
rclb
out
pop
sbb
cmp
push
ror
lea
xchg
pop
test
sbb
orl
out
aad
adc
jl
fidivrl
adc
jecxz
add
and
mov
push
jmp
lret
fcmovb
fwait
ljmp
pop
dec
inc
xchg
sub
sbb
rorb
scas
dec
and
les
gs
dec
insb
mov
mov
sub
mov
movsb
pop
incl
scas
aam
in
cli
sbb
cwtl
dec
pop
mov
cmp
push
out
aam
mov
mov
outsl
shlb
pusha
pop
mov
xor
cmp
inc
fildl
and
cwtl
push
imul
jno
and
xchg
add
add
mov
push
mov
xchg
scas
adc
in
test
mov
sbb
fcoml
int
fucom
sub
mov
and
call
sbb
xchg
cltd
shlb
mov
push
mov
mov
loope
fidivrl
cmpsb
pushf
fiadds
movzwl
loop
push
inc
dec
dec
jge
or
pop
ret
out
adc
sarl
scas
add
mov
or
shl
xchg
mov
mov
xchg
hlt
xor
mov
lods
and
mov
popa
sub
xchg
popf
rclb
pop
adc
push
sub
stos
enter
pop
pop
lret
shrl
rclb
into
cmp
popf
mov
pop
dec
enter
sti
xor
jg
mov
adc
lcall
popa
mov
inc
mov
cld
out
lret
push
imul
dec
sub
pop
ja
aad
jmp
loop
arpl
push
out
ret
pop
cs
xlat
sub
imul
insl
subb
push
aad
mov
out
inc
mov
mov
xchg
jmp
je
incb
mov
pop
mov
fwait
dec
push
and
fisubrl
lahf
jl
adc
push
mov
mov
loope
cmp
mov
dec
sub
shlb
push
inc
xchg
pop
cmpb
lahf
pop
mov
sbbb
addr16
push
adc
and
ret
push
insl
fisubrl
out
mov
ljmp
xor
jl
cs
das
or
in
inc
.byte
.byte
