or
ror
int
xor
je
sti
cli
divb
xchg
and
stos
dec
dec
vpmacsdqh
test
movsb
sub
repnz
test
insl
xor
and
call
and
and
inc
ds
mov
ss
rcl
push
fistpl
cwtl
xchg
shll
test
cmp
std
xor
push
scas
in
cwtl
cmp
inc
or
and
cmp
movsb
test
mov
jne
push
shlb
addl
mov
fstps
push
mov
test
pop
ljmp
div
icebp
out
sub
push
pop
cmpsb
dec
push
popf
inc
and
test
inc
lock
ja
jb
fildl
push
push
fcomi
repnz
aas
fistpll
shll
popa
mov
icebp
adc
jmp
add
test
vpmaddwd
loop
cwtl
int
add
add
adc
pop
add
andl
push
leave
dec
dec
inc
addl
mov
jo
cwtl
xchg
inc
dec
int3
lret
mov
hlt
icebp
imul
in
xchg
daa
or
dec
inc
mov
xor
rclb
out
iret
aad
leave
daa
sbb
hlt
mov
imul
xlat
lock
push
mov
int
shlb
pop
xchg
push
in
xchg
jbe
lods
and
sub
into
or
pop
cld
stc
mov
jg
lret
pop
sbb
dec
mov
ja
sub
mov
cltd
into
lea
inc
add
mov
out
out
daa
out
add
mov
inc
add
ss
popa
and
fs
pop
push
push
xchg
popa
scas
stc
sub
mov
or
scas
out
mov
push
mov
subl
bound
cmp
fcomps
pop
push
push
cmpsb
and
subb
ficompl
pushf
roll
cmpsl
jp
mov
sub
fwait
pusha
out
dec
jno
sbb
mov
test
ss
insb
cmpsl
data16
repnz
aam
ret
jbe
xor
out
or
paddw
inc
xor
and
inc
push
mov
fisttps
jnp
mov
scas
lods
lock
sti
rcrb
enter
lret
enter
xchg
popa
cmc
repz
sbb
xlat
mov
mov
aas
aas
cmp
cltd
lahf
push
add
in
mov
out
or
inc
mov
fimull
xchg
add
sbb
push
addl
popa
cmpsb
mov
aaa
test
cmp
mov
ja
mov
xor
movsb
loop
inc
fisubl
or
dec
or
insl
add
clc
stos
movsl
imul
es
xlat
push
sbbb
es
inc
andb
outsb
stos
jmp
fcompl
lret
leave
xor
sarl
add
dec
push
sbb
shlb
lods
jge
test
aas
test
lret
cmpsl
mov
ficoml
rolb
mov
lock
fistpl
xchg
inc
add
insb
sub
test
mov
pop
test
pop
fadd
in
push
pop
sahf
fcmovbe
sarb
mov
jns
ljmp
push
imulb
push
adc
std
add
imul
pop
jl
aam
inc
or
icebp
hlt
cltd
push
pop
mov
outsl
stos
loopne
jno
loope
cmp
adc
mov
adc
xlat
pushf
push
icebp
push
lds
xor
adc
push
mov
inc
push
ret
push
cld
js
pop
scas
cmp
ja
popf
scas
xor
lret
push
jns
int3
jnp
cmp
and
jp
pop
fsubl
aas
add
xor
adc
hlt
bnd
add
push
sbb
sarb
push
cwtl
push
xchg
cmp
pop
xchg
aaa
xor
icebp
imul
jb
in
nop
mov
ret
leave
or
inc
scas
mov
sbb
nop
adc
pop
leave
push
add
or
adc
sub
ficoml
push
mov
addr16
cmp
stos
pop
mov
xchg
incl
dec
fsub
add
cld
pushaw
pop
xchg
mov
mov
push
dec
je
test
cmp
outsl
mulb
je
push
rorl
jge
lcall
adc
dec
sbb
jmp
inc
or
lcall
pop
loop
mov
jmp
mov
out
mov
push
mov
sbb
inc
orl
imul
mov
xlat
loopne
pop
push
push
dec
jbe
stos
mov
je
sub
in
out
pop
loopne
jae
sub
sub
jae
jmp
adc
cmpb
pop
stos
mov
or
ss
pop
fdivp
dec
pop
fst
xchg
xchg
xchg
lea
movsb
xor
addr16
call
fadds
fbld
push
mov
inc
das
cs
loop
stos
cltd
pop
rcll
test
mov
sub
mov
dec
popa
ror
leave
xor
negl
sub
push
and
or
push
lcall
jp
mov
in
fcompl
lret
enter
stc
mov
call
fstpl
adc
xchg
jg
insb
adc
xchg
das
sub
jmp
xchg
lea
xorb
movsl
pop
bound
aam
add
sub
clc
jae
xor
and
movsl
jg
push
add
adc
nop
mov
fldl
sbb
push
mov
cmpb
cmc
repnz
and
xchg
mov
mov
cmp
insb
loop
sub
popa
int
loop
imul
jnp
sub
aas
mov
jmp
mov
into
push
sub
es
jb
add
mov
fidivrs
decl
mov
fstpt
xchg
sbb
push
jmp
lds
jb
jno
hlt
icebp
pop
add
test
push
cwtl
aam
rclb
mov
inc
inc
lock
mov
jb
mulb
lcall
xchg
cmpsl
push
icebp
out
popa
and
dec
xchg
cwtl
out
adc
mov
aaa
call
cld
arpl
or
xor
cmc
xchg
sbb
sub
cmpsb
jecxz
pushf
sbb
or
jnp
cmpsb
std
stc
mulb
and
outsb
or
clc
test
add
imul
mov
xchg
rcl
mov
movb
aam
stc
cmc
repnz
ret
push
and
subl
cmp
mov
mov
outsb
insb
imul
shr
add
mov
adc
fcmovu
aad
mov
and
loopne
adc
xor
sbb
mov
mov
or
cmpsl
jb
outsl
aad
leave
pop
sti
xlat
xchg
data16
rep
jmp
arpl
mov
xchg
inc
push
imul
popf
les
xchg
hlt
xor
add
repz
add
and
dec
repnz
push
pop
in
insb
dec
mov
popf
loopne
jae
bound
jecxz
ret
inc
mov
mov
fwait
enter
ror
or
fsubrl
xchg
xchg
cmp
mov
ficomps
int3
cmp
sarb
in
xchg
sub
sbbl
jne
rorb
ret
shlb
jb
repz
in
jmp
std
pop
sahf
or
ret
aas
cmp
cmp
ds
pop
lcall
xchg
mov
scas
lods
popa
and
cmp
test
cmc
cmpl
outsb
fisubs
mov
call
out
jmp
mov
push
aam
adc
cmp
subb
push
out
jb
ja
sbb
sub
addl
outsl
insb
add
fstpl
lret
or
lret
jmp
jo
adc
in
mov
ja
sbb
add
pop
or
aas
jecxz
out
cmpb
sahf
mov
fwait
pop
and
iret
mov
jmp
sbbb
pop
pushf
mov
scas
int3
imul
jns
das
pushf
mov
ja
les
dec
adc
aam
int
push
xlat
xor
mov
repnz
pop
jmp
test
adc
lea
cmp
data16
pop
orl
xchg
hlt
mov
xchg
inc
loopne
rorb
xchg
fimull
jae
sti
pop
mov
pop
dec
sub
arpl
dec
dec
mov
test
ljmp
sbb
rol
dec
xor
movb
lods
repnz
icebp
xlat
incl
dec
xchg
repnz
mov
dec
fidivrl
outsb
imul
mov
mov
movsl
mov
ret
shll
in
and
loopne
pop
sbb
bound
vfrczps
cmc
push
fs
or
pop
jmp
ljmp
ss
mov
sub
or
ja
cs
xor
pop
decb
pop
aam
insl
dec
inc
mov
out
mov
ror
popa
fs
push
jb
lods
xchg
ror
int3
xor
pop
sarb
sub
out
adc
jns
inc
sar
mov
idivl
leave
test
jmp
cmc
icebp
sbb
sub
mov
jmp
cmp
fadds
loopne
or
cltd
pushl
das
sub
push
xchg
pusha
cmpsl
dec
push
fimuls
cmp
aaa
lods
test
and
sub
mov
jo
sbb
test
xchg
jo
mov
xor
daa
xchg
mov
nop
sbb
cmp
rorl
fstl
push
ljmp
xor
gs
push
int
mov
in
stos
inc
out
mov
mov
xor
out
adc
ss
outsb
pop
std
sti
jne
dec
nop
mov
cs
sub
dec
dec
dec
clc
mov
repz
mov
fwait
or
cmp
inc
sub
out
push
in
sbb
pop
add
cmp
out
movsb
into
mov
sti
push
xor
add
or
call
adc
xor
push
fsubl
out
jbe
add
es
or
das
sub
mov
sbb
sbb
leave
test
stos
flds
push
xchg
cmp
ret
cld
js
and
push
stos
pop
outsb
fidivrs
stos
push
ja
push
mov
push
mov
outsb
and
aam
dec
mov
ret
mov
cld
lcall
fists
push
mov
sub
xchg
xlat
fdivl
pop
pop
push
xchg
fisubl
inc
pushf
mov
lea
or
cld
dec
lea
add
sti
test
movsl
stos
test
daa
and
xor
leave
or
jbe
scas
js
add
sahf
xchg
inc
or
push
add
inc
sub
hlt
jge
imul
mov
inc
outsb
mov
shlb
jae
pushf
sarl
mov
sqrtps
pop
scas
out
xor
mov
cmp
mov
adc
fs
add
cmp
lods
in
and
xchg
idiv
pop
jg
jbe
inc
adc
push
fdivs
movmskps
es
sbb
imul
sub
enter
dec
inc
mov
or
jne
inc
mov
mov
push
insb
xchg
lret
enter
mov
vandps
fldl
jle
cmp
or
stos
inc
lahf
lcall
pop
mov
les
in
push
in
test
loop
inc
inc
xlat
pop
int3
into
adc
out
mov
jge
js
daa
scas
pop
xor
mov
dec
sarb
jnp
jecxz
sti
jno
xchg
xchg
push
fistpl
pop
int
out
sub
aaa
div
jl
in
adc
dec
pop
sbb
iret
or
inc
ret
xchg
xchg
es
jno
xchg
xchg
xchg
add
lock
shr
fwait
and
jmp
add
dec
or
testl
mov
dec
dec
jne
jmp
xor
stos
xlat
pop
in
pushf
fcmovbe
sub
inc
push
fdivl
xor
xchg
pop
cmc
rep
jmp
js
push
sub
jl
jno
movsl
mov
outsb
imul
outsl
popf
les
int
and
call
loop
push
ljmp
into
add
mov
fnsave
xor
lds
xor
xchg
repz
ljmp
test
fisttps
das
rolb
into
cmc
dec
imul
scas
mov
sub
nop
rcr
xor
push
movsb
inc
mov
fidivs
and
sahf
fwait
pop
rcl
iret
int3
cmp
fwait
ret
and
out
push
sbb
pusha
pop
xchg
out
sbb
push
jp
mov
movsl
lahf
loop
inc
push
outsl
js
lea
mov
lds
dec
xor
addb
push
push
xchg
sub
rcl
xor
push
mov
mov
sbb
test
fcmovbe
add
push
jecxz
lds
aam
div
pop
pop
add
aam
dec
inc
inc
lods
cmpsl
stos
mov
movsl
gs
into
xchg
mov
mov
repz
push
ljmp
incl
dec
or
mov
hlt
popa
pop
pop
in
adc
les
repnz
shrb
cmp
int3
or
cmc
xor
ja
xchg
fwait
xor
sbb
dec
inc
subb
clc
mov
fwait
adc
mov
rclb
repnz
mov
sbb
imul
push
lret
jg
out
mov
fisubs
dec
push
cld
add
mov
mov
adc
cmp
push
adc
div
insb
inc
add
mov
pop
loope
pop
pop
pop
lods
dec
mov
mov
sub
mov
shrl
enter
aam
in
lret
bound
divb
and
dec
mov
jle
cmp
scas
addl
jns
je
insb
mov
in
rcll
enter
mov
repnz
icebp
push
pop
sbb
push
loopne
dec
xchg
mov
jmp
xchg
aam
fistps
xchg
in
mov
mov
stos
test
fwait
sbb
dec
pop
addl
cmpsb
int
xchg
push
inc
addr16
cld
mov
jb
insl
fisubrl
nop
cld
bswap
adc
cli
divl
out
sbb
sub
pop
sbb
adc
leave
inc
cmp
cmp
popa
mov
dec
mov
mov
pop
bound
dec
inc
cmp
push
or
ja
test
ficoml
pop
sbbl
cmp
lods
and
scas
sti
and
push
adc
cli
jo
fldenv
jns
sbb
push
push
lcall
mov
into
sub
lret
or
adc
repnz
arpl
cmp
adc
test
mov
cli
stos
mov
fadd
adc
loopne
nop
ja
xchg
cmpb
mov
or
mov
or
shlb
xor
sub
jae
mov
rcrl
dec
addb
jl
jbe
push
stc
xchg
sbb
jne
or
push
aam
lret
enter
in
repnz
call
in
addb
int3
ss
xorl
popa
mov
mov
xchg
sbb
lods
jmp
call
push
adc
leave
popa
je
cmpsb
call
dec
call
fmuls
outsl
dec
in
js
jb
push
push
pop
pusha
or
push
test
cmp
or
pusha
hlt
cmp
sub
jae
adc
sahf
inc
inc
cmp
lods
imul
add
aad
inc
dec
enter
mov
jl
in
jmp
inc
push
adc
into
xchg
ss
mov
xchg
sub
xor
ret
cwtl
pop
push
pushf
dec
into
inc
push
mov
mov
stos
adc
dec
nop
pop
clc
jp
mov
xchg
dec
lea
sub
and
xchg
jg
push
cwtl
mov
aam
stos
andb
mov
sub
mov
cld
xor
call
gs
pop
xchg
jg
pop
sahf
inc
and
cmp
in
lods
aaa
mov
jne
clc
xchg
xchg
add
mov
mov
fldl2t
out
loop
add
ret
mov
mov
arpl
mov
js
or
stos
test
xchg
lret
sbb
add
cld
outsb
xor
xor
add
push
ret
jnp
mov
scas
arpl
push
decb
sub
push
jp
out
mov
push
add
dec
cli
cwtl
aas
xor
mov
stc
testl
mov
mov
in
mov
pop
or
fists
bound
cmp
add
cld
cmp
sbb
and
test
pop
aas
lds
push
add
add
lahf
es
xchg
mov
les
sti
loop
push
sub
arpl
push
adc
inc
jae
popl
data16
scas
outsl
insl
hlt
outsb
cmp
imul
mov
popa
adc
pop
sahf
or
add
push
add
mov
cmp
imul
mov
in
jecxz
xor
jge
mov
cmp
stos
sub
pop
and
jb
les
push
sbb
dec
xchg
jne
stos
shll
sahf
and
sarl
sub
popa
mov
pop
add
inc
push
insl
sub
mov
jno
inc
test
sub
jmp
and
lret
data16
into
cmp
pop
xor
clc
cmc
pop
xor
popa
mov
fs
mov
stc
test
jl
lcall
popf
sahf
fwait
add
cmp
icebp
iret
hlt
imul
sbb
je
sbb
pop
int
roll
imul
jo
lahf
fisttps
out
mov
popa
adc
pop
sahf
addr16
pop
adc
cmp
aaa
popf
xor
lea
push
ficoms
and
cmpb
mov
pop
and
fs
aam
inc
push
lock
pop
pop
movsb
pop
and
popl
shrb
xchg
in
test
pop
fsts
in
sub
cmp
adc
pop
lock
pop
dec
and
cwtl
fisubl
jnp
xchg
cmp
push
cmp
lahf
xor
movsl
movsb
fs
or
iret
popl
dec
adc
or
push
ljmp
push
cmp
mov
push
out
mov
fcompl
pop
push
push
push
pop
xchg
cmpb
mov
push
test
adc
aad
dec
sbb
cmp
fs
ljmp
jle
adc
xor
mov
shll
popa
sarl
std
xchg
mov
call
in
lods
cmpsl
xor
dec
dec
jo
push
jb
js,pn
ja
popf
xor
mov
test
mov
js
xchg
ja
jne
mov
loope
loopne
sahf
and
lret
popa
clc
negb
push
sub
cwtl
xchg
xchg
aad
inc
jns
sahf
js
cmp
cmpsb
shlb
cmp
xchg
es
and
outsb
shl
jecxz
dec
daa
cld
pop
xor
and
sti
jp
mov
out
arpl
fisubs
fdivr
mov
stos
pop
sbb
rcl
cmp
pop
add
pop
push
insb
sub
popa
das
nop
rcl
inc
push
push
dec
mov
test
ja
cwtl
jb
loope
sbb
push
loopne
int3
leave
cmp
enter
pop
cwtl
popf
nopl
pop
add
ds
inc
inc
xchg
mov
inc
popf
bound
adc
jecxz
fiadds
mov
scas
lods
addr16
fwait
push
adc
add
jo
jne
mov
popa
pop
fsts
push
cmc
test
and
dec
or
push
ret
dec
shl
dec
ss
ja
incl
sbb
jbe
pop
mov
mov
lret
hlt
and
rcll
sarb
in
ljmp
iret
inc
or
adc
lods
jno
mov
bound
loop
mov
addb
sub
stos
cmpsb
jecxz
daa
leave
inc
aam
add
push
cld
f2xm1
xor
cmc
movsl
stos
sbb
daa
and
xor
lret
pop
jo
int
push
adc
jb
aam
jmp
sbb
pushf
cltd
xchg
add
mov
inc
sti
pop
and
dec
pop
in
dec
xchg
inc
push
adc
dec
xchg
xor
aas
insb
ss
arpl
adc
sti
mov
ss
mov
scas
call
fcoms
adc
mov
das
sub
xchg
outsl
mov
mov
sub
insl
jns
jb
push
orps
fs
aam
inc
leave
jge
pop
mov
scas
jmp
pushf
and
pop
mov
sbb
jp
sub
iret
scas
test
mov
add
add
mov
cmp
adc
inc
push
adc
push
jb
push
imul
xchg
lret
fdivrs
add
or
cmp
or
push
cmp
int
ret
hlt
call
fs
xchg
mov
leave
cmp
stos
scas
inc
subb
sub
sbb
std
std
xchg
std
inc
mov
mov
out
pop
fwait
pusha
ljmp
or
mov
test
xchg
aaa
inc
pop
bound
sbb
or
push
je
ret
shlb
mov
out
loop
aaa
ds
adc
rclb
xor
xchg
shll
fnstsw
mov
enter
push
in
ja
or
test
mov
aad
jle
enter
xchg
data16
repz
mov
and
xchg
push
and
dec
pop
lds
scas
test
lods
imul
sbb
imul
leave
hlt
xor
dec
iret
mov
sbb
dec
push
jo
xchg
outsl
jl
mov
fs
push
rcrl
lret
jge
pop
loop
stos
and
sbb
aam
arpl
pop
sbb
cmp
push
sub
fmuls
jae
ret
subb
add
pushf
cltd
sub
ss
lret
divl
dec
cli
xchg
dec
sbb
add
stos
adc
test
push
sbb
notb
in
mov
sub
pusha
mov
fcmovnu
imul
inc
loope
jae
call
ljmp
xchg
cs
push
mov
mov
scas
lods
test
lds
jg
fdivs
rorl
push
sub
nop
xchg
xchg
sbb
inc
inc
inc
cmpsb
push
in
jno
fistpl
cltd
jmp
aam
shl
add
adc
out
fidivs
adc
push
jnp
test
cmp
test
push
pop
push
ret
lods
testb
scas
sub
sbb
or
jnp
fisubrl
test
adc
sub
nop
nop
mov
sbb
cmpl
sahf
pop
shl
cmpsl
pop
popa
iret
dec
icebp
rcl
iret
mov
jne
mov
push
cli
adc
sbb
nop
int3
inc
mov
cmp
lahf
mov
enter
push
test
xchg
mov
lea
mov
lea
push
cmovp
cmpl
xor
adc
lcall
scas
mov
push
shll
or
mov
xchg
int
enter
fdivr
div
icebp
mov
mov
push
cmp
pop
jl
jp
xor
mov
push
movsb
jl
enter
mov
xlat
in
and
cwtl
fimull
xchg
mov
sbb
aaa
xor
clc
repnz
into
push
xchg
jns
nop
xlat
sbbl
jo
push
mov
movsl
loop
dec
push
das
jmp
fnstcw
pop
lahf
movsb
cmp
push
mov
test
aas
insl
jmp
jb
insl
add
cmp
mov
push
in
insl
xor
pop
pop
ret
sbb
cltd
aad
dec
inc
movsb
add
cmp
test
pop
adc
mov
lcall
cltd
call
out
pusha
and
inc
flds
jle
dec
or
sbb
cs
iret
mov
fimuls
and
in
lods
sbb
pop
movsl
sahf
fldt
inc
ror
lret
cmp
ret
stc
jae
sbb
pop
mov
jns
into
js
gs
scas
outsb
out
xchg
adc
pushf
cltd
xchg
jmp
mov
mov
mov
mov
ds
test
outsl
movsl
cmp
xchg
stos
push
and
mov
pop
orb
leave
mov
mov
inc
mov
stos
cmp
stc
adc
inc
gs
inc
add
fdivr
xor
test
and
and
dec
enter
and
jbe
sti
nop
xlat
sbb
andl
xor
fisubs
cmc
jl
ret
mov
pop
cltd
aad
mov
or
stos
dec
ss
and
pop
lcall
test
cli
rcrb
sbb
test
ljmp
xchg
xor
push
mov
cltd
pop
lret
arpl
dec
mov
int3
jge
js
push
add
or
ror
dec
test
pop
mov
icebp
js
sub
xor
popf
inc
ret
test
inc
imul
je
in
jle
fnsave
mov
std
xchg
mov
cmp
mov
jmp
sbb
xchg
insb
insb
adc
and
cltd
arpl
pop
mov
ljmp
cmpsb
wbinvd
push
mov
sarb
cld
stc
hlt
xor
sub
push
jbe
inc
add
dec
inc
subb
rcl
push
mov
rorb
mov
cli
and
xchg
xor
call
sbb
test
push
test
data16
scas
outsl
out
call
sti
imul
repz
insl
insb
adc
loop
push
cmp
mov
add
insl
adc
xor
stos
jmp
aaa
pusha
pop
push
mov
xchg
lahf
push
adc
data16
lret
ficompl
hlt
icebp
sub
jp
repz
scas
push
jp
movsl
sbb
insb
test
fs
nop
push
add
cltd
in
xchg
clc
out
sub
jnp
sub
jb
fists
cmp
jbe
jo
adc
add
aaa
js
mov
cltd
imul
ret
mov
scas
adc
mov
rcr
add
cmp
pop
jne
push
negb
push
lahf
dec
dec
jbe
stos
mov
xchg
and
push
sahf
adc
mov
divb
sub
out
xor
jo
dec
sbb
or
mov
cltd
xchg
sub
fidivrs
sub
lcall
cmp
mov
and
dec
inc
bound
fstp
fildll
mov
mov
les
cs
loopne
popa
pop
pop
sub
imul
cli
ficompl
pop
mov
fldt
xchg
adc
cmp
add
sti
stc
inc
hlt
push
xor
out
mov
and
inc
into
dec
lods
in
repnz
fcom
jp
fcompl
cmp
mov
in
ljmp
adc
jne
jb
sub
mov
addr16
cmp
or
mov
push
out
xor
add
fisttps
jnp
iret
int
or
addl
lahf
movsb
pop
xor
and
addl
insl
stos
and
int
push
or
rcl
cld
mov
and
in
push
icebp
cli
push
prefetch
inc
insb
outsb
cmp
enter
bound
pop
cmpsl
cwtl
push
xchg
mov
cmp
mov
les
loopne
pop
xchg
or
add
addr16
xor
and
leave
into
les
mov
icebp
mov
aam
test
push
sbb
lods
fcom
add
jl
in
jno
jl
addb
adc
mov
clc
cmp
fdivl
mov
nop
std
mov
add
mov
dec
xchg
pop
push
in
sbb
mov
aaa
mov
fs
fistl
test
or
repz
push
nop
mov
shll
sbb
fisubl
call
push
xor
xchg
fwait
aaa
lahf
xor
push
push
ret
xchg
int3
jmp
xlat
and
test
sub
cs
dec
repnz
and
lock
xor
lock
bnd
jecxz
ds
xchg
cmc
push
rclb
ret
sub
mov
sbb
ficomps
or
mov
and
test
mov
lods
add
add
xor
mov
insb
xor
sbb
stos
push
int
enter
mov
shlb
lock
sub
pop
push
mov
xchg
lret
sub
mov
stos
imul
data16
mov
inc
adc
sbb
pop
pop
adc
sbb
adc
fwait
mov
cmc
lock
pop
push
adc
repz
lock
out
stos
out
and
push
data16
sar
imulb
jns
test
mov
insb
addr16
and
push
mov
mov
cli
pushf
jnp
je
insl
stos
cmpsl
and
lahf
loopne
adc
dec
rol
cmp
lds
dec
imul
adcl
xchg
inc
mov
jo
arpl
cmpsl
insl
sub
mov
out
mov
lods
sbb
iret
mov
test
jo
mov
cmp
das
cmpl
jnp
dec
dec
mov
jge
jl
and
lds
rcl
iret
int3
loopne
add
inc
mov
fldenv
sbb
mov
mov
fcmovnu
aad
sub
ss
xchg
lret
enter
and
mov
scas
insl
or
pop
cmp
sbb
insl
cmpl
das
imul
mov
mov
cmc
mov
sbb
push
xor
orl
xor
sub
pop
cwtl
push
int3
dec
dec
dec
inc
mov
pushl
cmpl
rorb
leave
or
xchg
hlt
icebp
out
lods
call
push
push
mov
ds
cmp
in
jo
addr16
fs
nop
mov
mov
sahf
dec
scas
pop
sbb
das
jmp
push
movq
jo
mov
pushl
das
sub
sub
jle
dec
enter
stc
jg
jbe
mov
lods
push
movsb
imul
fcom
sar
cvtps2pi
jbe
std
pusha
lcall
sub
jle
push
xlat
inc
dec
inc
inc
insb
movsl
inc
jne
push
movsl
cmpsl
pop
lea
aas
add
push
jnp
insb
push
repnz
in
add
fistl
cwtl
je
adc
push
lea
cmp
sub
jmp
mov
in
repz
fidivrl
xor
lret
adc
inc
addb
add
fwait
pusha
pop
sbb
fstps
shll
repnz
je
outsb
cmc
cmp
adc
mov
xchg
sar
int
ret
mov
out
push
sbb
je
inc
inc
cmpl
xchg
loop
popf
pop
fwait
and
ds
mov
jb
jecxz
inc
inc
flds
add
dec
or
loopne
js
xor
andl
sbb
lock
xchg
cltd
ret
leave
ror
leave
in
jnp
ss
jnp
add
and
addb
inc
scas
cmc
push
add
pusha
jno
inc
jp
mov
add
mulb
sbb
xchg
and
lock
testb
mov
fcom
inc
aas
cmp
mov
xor
imul
push
jge
mov
xchg
sti
loope
mov
in
test
loopne
dec
push
pop
ror
or
sbb
push
sub
fwait
push
push
dec
mov
jl
je
fiaddl
push
pushf
ret
fst
or
dec
notb
xor
out
add
and
sub
push
adc
enter
inc
xchg
lret
jbe
jb
inc
sbb
push
sti
or
adc
mov
shrb
push
fstp
inc
out
adc
add
mov
imul
lcall
mov
je
adc
pushf
xlat
ror
xor
std
cli
arpl
enter
sahf
fimull
rclb
dec
dec
mov
mov
lds
pushf
push
movsl
gs
loopew
lret
ret
add
sub
loope
inc
insl
adc
fdivl
inc
ds
cs
mov
rcll
stc
mov
mov
cmpsb
lods
shr
pop
sbb
scas
jle
dec
adc
or
cmc
bound
lahf
push
aad
pop
push
dec
dec
rcrl
repnz
ja
jno
stos
xor
mov
fxch
int3
cmp
pop
lds
leave
in
jmp
xchg
dec
adc
lret
inc
int3
ss
icebp
xchg
lods
insb
push
aas
js
movsb
xchg
xchg
clc
in
mov
sub
mov
pushf
or
fadds
mov
pop
add
mov
outsl
xor
feni(8087
fs
pop
scas
sub
lods
mov
shl
or
rorb
push
sbb
iret
int3
leave
push
fisubrl
outsl
je
hlt
icebp
out
pop
sub
sub
ret
ljmp
mov
addb
popf
loopne
xchg
negl
ror
lds
push
xor
pop
fisubs
adc
add
jp
das
sub
mov
push
mov
out
jge
mov
and
loop
pop
in
mov
int
mov
jno
xor
and
mov
popa
adc
push
push
dec
addl
xchg
lods
in
neg
adc
jns
ror
xor
xorl
stc
cmc
repnz
rolb
sbb
movsl
dec
inc
inc
inc
scas
sarl
ss
int3
popa
mov
xchg
rclb
ret
shr
xor
mov
mov
cmp
adc
or
popf
sub
fisubrl
push
push
dec
pop
inc
je
mov
in
lods
adc
adc
push
pop
rorl
incb
jmp
xor
insl
cmc
and
sbb
scas
lods
test
stos
imul
popf
jmp
ficoms
mov
leave
out
cltd
mov
pop
cmpsb
test
icebp
inc
adc
adc
lret
jge
lods
mov
sub
lcall
lea
xor
pop
push
sub
frstor
inc
cmp
pop
stos
stos
adc
daa
and
sbb
push
dec
dec
loopne
cmpb
or
inc
inc
sbb
pushf
in
add
sub
sti
loop
icebp
sub
fwait
mov
xchg
mov
push
dec
inc
jno
jb
xor
loop
jne
push
pop
cwtl
xchg
shll
test
cmp
test
scas
call
add
cmp
xor
das
push
and
mov
push
mov
in
repz
ret
or
add
fwait
cld
stc
idivl
movsb
jne
cld
fisubl
dec
aaa
inc
inc
aad
addr16
fiadds
xchg
mov
dec
rorb
inc
mov
mov
es
out
xor
vmread
jbe
cmp
mov
push
jo
into
mov
mov
cwtl
mov
push
rcl
mov
and
out
clc
cmc
cmpsl
jmp
sub
pop
dec
fisttpll
out
hlt
jp
jno
in
aam
sub
int3
xor
ds
sti
clc
dec
popa
pop
ret
sbb
pop
xchg
sbb
push
jae
mov
mov
inc
push
cmpsl
bound
push
mov
sbb
aas
xorb
mov
cmp
cmpsl
cltd
fcoms
pop
std
mov
mov
or
scas
icebp
jecxz
and
lods
dec
call
push
ja
je
ds
sarb
add
jle
mov
jno
add
sub
push
push
sbb
jns
int3
cmpl
iret
jne
mov
xchg
add
xor
mov
sbb
je
sbb
inc
jmp
mov
mov
ss
jno
ret
sahf
lahf
pop
push
aam
push
pusha
lea
mov
inc
clc
cmp
dec
dec
adc
fisttpl
add
hlt
xor
jb
push
pop
push
leave
scas
push
inc
cmpl
xorl
mov
aam
sahf
inc
inc
shll
repnz
sahf
and
out
xchg
xchg
or
vunpcklps
out
je
ds
in
jbe
popa
adc
ds
aad
ss
cmp
mov
bound
mov
fisttps
xchg
mov
add
das
fisubs
xlat
and
add
cs
jle
daa
pop
mov
mov
ror
jle
adc
pusha
push
movsl
stc
sub
adc
lods
cmp
insl
imul
data16
lcall
ret
shll
je
repnz
imul
mov
xor
test
fs
repz
push
xchg
push
mov
stos
xor
mov
stos
pop
and
inc
call
push
scas
push
pop
push
mov
iret
or
dec
fisttpll
mov
mov
cmpsl
and
call
ror
xor
cli
div
inc
jmp
jle
jp
sbb
adcl
push
inc
addb
cmp
lods
jae
pop
fstps
cwtl
xchg
repnz
mov
mov
inc
jmp
mov
aas
mov
jae
add
addr16
repnz
and
pop
pusha
jmp
mov
jo
mov
icebp
sbb
sub
cwtl
je
int
xor
idivb
sti
stc
imul
pop
push
inc
pusha
sbb
ret
pop
jae
cmp
fadds
loopne
inc
fstp
cltd
xchg
push
xchg
mov
cmp
repz
adc
and
dec
dec
sbb
adc
inc
daa
test
jno
call
ss
push
xchg
nop
xlat
xchg
pop
sti
cli
jl
ficomps
mov
scas
test
fldcw
jp
or
xor
sub
and
ret
push
pusha
cmpsl
mov
fucomi
insb
stos
into
or
loop
or
cmp
hlt
sub
out
push
xchg
xor
inc
inc
inc
mov
insb
lret
jno
inc
sbb
mov
mov
mov
jmp
outsl
cmp
or
add
mov
xor
rcrl
inc
mov
mov
jne
xor
pop
mov
lods
je
mov
test
or
bound
outsl
xor
arpl
sbb
mov
xchg
push
clc
add
sbb
stc
dec
cmp
imul
leave
adc
cmpsb
xor
xchg
lret
enter
ja
mov
out
xor
pop
outsb
call
adc
push
mov
sbb
imul
fwait
pop
aad
xchg
fimull
adc
andps
in
stos
adc
push
fmul
push
faddp
add
sti
clc
bound
and
lea
mov
or
jp
jnp
outsb
xchg
jmp
ficomps
lret
into
fsubr
sub
lods
push
push
dec
and
adc
xchg
xadd
fs
test
popa
mov
cld
rcll
ret
xchg
fucomp
scas
lods
adc
in
pop
inc
adc
cmp
hlt
add
cmp
cmp
or
xchg
push
idiv
xor
jbe
xchg
pop
add
shrl
clc
enter
clc
stc
xor
push
sub
test
repz
nop
inc
jg
les
inc
inc
cmp
mov
cmpsb
rclb
pop
dec
cltd
xchg
xchg
and
cs
cmpsl
cld
icebp
out
sbb
jecxz
sbb
lahf
or
jne
jp
imul
jbe
popa
rcl
dec
pop
xchg
nop
mov
jle
xor
stos
and
sbb
dec
pop
ja
pop
sbb
cmc
mov
xchg
mov
int3
sub
jp
dec
inc
pop
hlt
mov
sbb
or
xor
daa
out
jbe
repz
out
push
fistps
push
adc
aas
aas
data16
lcall
popa
mov
xor
cmp
xchg
adc
jmp
xor
or
rcrl
pop
add
fstps
rorb
jmp
pop
lock
and
mov
sub
mov
and
into
xor
sub
add
sub
mov
xor
adc
int3
or
mov
push
push
cltd
out
mov
or
cmp
xchg
cmpl
lds
adc
push
mov
cmp
sub
pop
pop
or
push
lea
stos
cltd
mov
push
cmp
loope
frstor
dec
loope
or
xlat
xor
pop
add
pop
sbb
outsb
sub
fidivrl
lods
mov
jecxz
test
cmpsb
movsb
push
pop
fisttpl
out
scas
int
sbb
pop
jge
xor
das
in
cmpsl
sbb
adc
jne
cmp
xor
fwait
cmp
sub
fwait
lcall
cwtl
ret
sarb
jmp
nop
jle
cmp
lods
lret
es
fisubl
sub
dec
or
pop
test
mov
into
aaa
loopne
adc
inc
imul
and
adc
pop
mov
clc
dec
sub
fcomp
shll
fwait
add
xchg
adc
jge
lds
insl
ret
mov
inc
sbb
pop
jbe
or
cmpsb
test
push
adcl
xchg
jae
mov
lods
shll
sbb
es
xor
xor
les
cmc
movsl
push
pop
cltd
sahf
xor
pop
pop
lods
cmp
add
js
lock
mov
pop
sbb
sahf
cltd
xchg
add
cmp
inc
loope
data16
in
or
sbb
lret
enter
jmp
data16
loope
arpl
out
push
fmuls
xor
lea
jmp
loope
mov
push
adc
mov
ss
mov
mov
bound
push
push
sbb
xchg
std
cmpsl
test
mull
inc
dec
mov
xlat
add
div
movsl
test
daa
and
test
lods
imul
sarb
popf
lcall
rol
jo
in
sbb
mov
out
loopne
ljmp
adc
clc
mov
sub
bound
rcll
addb
scas
sbb
loopne,pn
fiaddl
dec
fxch
or
clc
xor
pop
add
and
sbb
push
dec
dec
fnstsw
mov
mov
cmpsl
mov
sbb
fcompl
jbe
push
mov
negl
popf
jmp
sbb
adcl
sahf
dec
inc
inc
push
out
mov
hlt
bound
jno
xchg
dec
or
mov
enter
in
inc
inc
flds
add
dec
or
imul
sub
xchg
mov
popf
or
jg
xor
out
lods
stos
mov
cmp
dec
dec
push
ror
leave
xor
div
sbb
fisubs
sbb
inc
cmp
mov
push
out
xchg
xchg
mov
ds
mov
push
inc
lea
or
inc
outsl
outsl
mov
divb
and
pop
mov
das
lea
jae
dec
scas
scas
lods
sarl
popa
lret
and
aas
xchg
jne
int3
out
insl
jecxz
sub
xchg
test
xorl
idiv
sub
ljmp
pop
or
inc
das
mov
dec
movsb
mov
out
inc
lahf
pusha
hlt
divl
pop
adc
scas
or
cmp
cmp
popf
pop
repnz
fnstsw
cmpsl
xchg
sbb
mov
push
pop
and
push
push
call
pusha
dec
add
fs
fwait
mov
sbb
arpl
mov
test
mov
lods
adc
arpl
sub
dec
aaa
fisttpll
pop
push
xor
jne
cld
xor
sbb
mov
popa
sbb
test
lret
shlb
sbb
push
lea
lds
mov
insb
sbb
iret
xchg
inc
fisubrs
or
jge
insb
cmp
xchg
stos
push
fistpl
jmp
jecxz
mov
stos
pop
and
rorl
int
push
enter
lahf
idivb
pop
pop
in
pop
sbb
push
sub
lods
push
repz
ljmp
jbe
fists
ret
rol
jbe
leave
jmp
call
jg
adc
popa
test
cmp
cmp
inc
pop
lea
cli
mov
jmp
mov
jmp
pop
and
loop
cmovs
std
out
inc
push
jp
in
jb
fwait
movsl
data16
test
push
xchg
add
in
roll
ljmp
push
sub
cmp
add
sub
outsb
ds
in
popf
clc
mov
push
dec
jns
int3
mov
ljmp
scas
iret
je
es
nop
daa
inc
add
xor
scas
and
out
push
cmc
inc
and
adc
mov
cltd
aaa
xor
popf
inc
movsb
outsl
pusha
pop
icebp
push
or
lock
out
mov
sub
pop
pop
adc
fcmovbe
imul
add
push
scas
jo
mov
rcr
mov
push
mov
jg
xor
add
or
rcl
and
les
sti
loop
push
sub
gs
and
sbb
ret
mov
ja
insb
scas
cmp
out
inc
scas
mov
or
mov
jne
add
in
or
push
adc
jg
cli
add
xchg
dec
outsl
cs
inc
inc
outsl
pop
pop
int3
roll
pop
scas
addr16
xor
andl
dec
xor
sub
out
mov
fisttpl
push
cmp
xchg
and
push
in
cltd
xchg
pop
lods
jmp
add
mov
xor
jecxz
movsb
sbb
inc
mov
test
addr16
enter
xchg
nop
or
incb
mov
mov
push
jb
loop
loopne
cs
insb
shrl
or
sub
fwait
pop
pop
mov
dec
cli
push
repnz
lds
jno
test
movsl
add
lret
sub
div
out
push
pop
out
ret
adcb
cmp
jno
inc
xchg
mov
dec
arpl
stos
gs
lock
sti
add
push
xchg
rclb
mov
sbb
sbb
sbb
xchg
imul
cmp
arpl
dec
les
xchg
cmpb
test
or
aad
iret
push
mov
jne
inc
cld
div
pusha
out
mov
daa
and
rep
imul
add
inc
js
mov
mov
clc
jmp
sub
out
stc
ljmp
fsts
incb
mov
out
ja
sub
mov
push
push
xchg
add
pop
mov
cli
lods
stos
and
roll
dec
fst
or
cmc
bound
ja
daa
dec
sbb
xchg
push
faddl
xlat
ja
int
out
hlt
xchg
outsb
fidivrl
sahf
sahf
fwait
cld
inc
or
int
clc
cmc
bnd
pop
out
lcall
or
mov
lea
ja
repz
fwait
xchg
lret
popa
xchg
mov
mov
and
test
out
pop
lcall
lds
subb
out
daa
ficompl
stos
dec
sbb
mov
add
jmp
pop
loope
lods
jle
bound
cltd
ror
leave
xor
imulb
xor
push
sbb
popf
mov
pop
nop
cmp
hlt
xor
mulb
lcall
cwtl
sarb
outsl
movsl
jb
loope
mov
mov
mov
aas
out
jno
pop
ret
pop
xchg
mov
sub
stc
mov
test
aam
mov
jns
divb
pop
add
adc
ficoml
outsl
push
jl
dec
xchg
mov
mov
jle
cmpsl
loop
inc
test
jg
leave
int3
outsl
lahf
cmc
sbb
jmp
in
push
icebp
pop
pop
prefetchwt1
cld
test
movsl
jmp
cli
jno
push
cmp
inc
repnz
ret
or
and
mov
loop
xor
push
loope
push
std
fs
scas
add
sub
lods
or
mov
jns
mov
les
mov
lret
add
cmp
xor
and
cwtl
fsts
enter
inc
hlt
popf
aas
jmp
jb
sti
insl
ror
adc
or
xchg
outsb
mov
imul
in
ljmp
inc
inc
jge
adcl
lret
sub
mov
rcll
addb
sahf
ss
lods
aam
pop
mov
ja
inc
stc
mulb
mov
sub
xor
lret
pop
je
std
dec
cmpb
mov
push
test
push
and
cld
ret
dec
pop
enter
clc
and
outsl
mov
push
ja
dec
push
adc
xor
add
arpl
fisubrs
arpl
sbb
cltd
xchg
xchg
add
mov
out
lods
sbb
inc
mov
add
jmp
xor
xchg
arpl
push
mov
stc
mov
mov
test
xchg
rep
or
lret
enter
jae
cli
aam
cmc
pop
push
fwait
movsb
es
mov
inc
test
clc
add
jb
popl
add
enter
push
mov
repnz
add
sbb
int
or
ret
add
mov
xor
pop
pop
pop
loopne
mov
cmpl
lods
test
fsts
cld
addb
adc
push
pop
sub
lcall
dec
jp
jno
rcl
aam
mov
mov
inc
mov
les
cmpsl
data16
jmp
push
adc
popa
inc
cmp
xchg
mov
fs
int
shr
clc
cmc
cmp
sarl
insl
or
loop
faddl
cmp
dec
or
mov
imul
bound
pop
cmpl
jns
or
fsub
cmpsb
mov
xlat
ror
cmp
xor
imul
sub
sub
push
inc
xchg
aam
into
pusha
cmpsl
in
repnz
ja
insb
imul
ficoms
dec
or
call
lahf
or
xchg
out
adc
jnp
icebp
inc
cmp
cs
xchg
sahf
pop
pop
jecxz
push
test
jle
cmpsl
mov
scas
pusha
in
fsubrp
xchg
and
out
or
jge
adc
push
imul
pop
mov
push
dec
rcrl
jb
aam
mov
push
cmpsb
pushf
leave
inc
xchg
inc
mov
into
pushl
bnd
dec
dec
jne
fidivl
push
dec
or
mov
xor
and
xchg
out
mov
mov
mov
inc
lods
inc
fucom
insb
rcl
sub
push
inc
std
scas
fildll
out
movsl
xchg
pop
mov
pusha
xchg
pop
lods
push
add
mov
imul
add
adc
push
cli
jne
jno
xor
stc
cmpsl
inc
and
push
or
pop
cmp
gs
fldcw
out
stos
aam
stos
lret
or
jmp
inc
jmp
dec
push
and
fisubl
enter
jge
idiv
imul
int3
cltd
pop
push
sbb
dec
int
cmc
mov
sbb
bound
dec
or
addl
jo
cmpsb
xor
mov
leave
or
je
mov
test
out
fcompl
es
xchg
addb
sub
mull
push
leave
arpl
cmc
rolb
and
push
scas
inc
inc
movsl
mov
movsb
sarl
fwait
cwtl
xchg
clc
add
adc
and
pop
loopne
add
mov
or
stos
xor
push
fmulp
pop
pop
push
or
incb
scas
lods
test
fcmovbe
sub
cmp
push
flds
dec
aam
into
xor
cld
pushf
and
stos
jge
dec
mov
sarb
ret
push
mov
loope
lea
in
pop
mov
lock
mov
sbb
jmp
jb
scas
mov
xor
cmp
lods
pop
pop
adc
loop
repz
cmpl
in
fcom
sarl
cld
stc
pop
bound
pop
ja
and
bound
stos
mov
xor
sarl
jno
fidivrl
mov
fwait
dec
push
stos
ror
lret
fcoms
div
imul
icebp
jnp
prefetch
or
jns
into
xchg
cltd
loop
shrl
adc
das
repnz
inc
lock
xchg
cmp
pop
pop
inc
or
adc
or
hlt
cmp
xor
mov
and
push
pop
sub
out
dec
jle
jns
fldenv
outsl
sub
push
sub
cmp
enter
aam
inc
repnz
out
lahf
loope
aaa
test
inc
stos
mov
adc
push
cltd
xchg
xchg
nop
std
mov
cmp
sti
pop
fs
fimuls
adc
or
jne
jp
imul
mov
ret
rorb
cmpl
sbb
add
push
xchg
repz
jge
add
cld
stc
andb
sub
push
xor
jb
dec
inc
inc
inc
cmpb
cli
bound
and
leave
std
std
mov
adc
sbb
jbe
out
nopl
xor
hlt
gs
into
rcl
shlb
mov
sbb
mov
adc
in
inc
inc
adc
adc
jne
fwait
push
mov
bound
jle
mov
je
or
arpl
lret
loopne
lret
es
sti
insb
sub
push
jne
stc
or
mov
scas
test
testb
imul
enter
pop
int
lret
mov
es
mov
in
ljmp
incl
dec
or
ss
mov
pop
je
mov
push
xchg
gs
addb
adc
in
fcom
push
mov
adcl
cmc
movsl
stos
enter
mov
xchg
mov
mov
jae
and
mov
xchg
inc
dec
fs
mov
out
sub
cwtl
pop
out
dec
mov
add
jecxz
inc
aas
stos
mov
rcr
fidivrs
pop
fwait
cwtl
std
shl
mov
ret
xor
aas
faddl
call
lea
and
dec
or
in
add
imul
pop
mov
andl
mov
push
add
xor
xor
jle
popf
repnz
xchg
icebp
adc
mov
js
or
jmp
mov
xchg
xchg
inc
dec
sahf
leave
xchg
mov
into
cmpsw
fcomi
sbb
adc
mov
aaa
mov
fs
push
nop
cld
add
jle
out
test
pop
cmp
fcmovbe
sub
or
pop
xor
push
div
scas
jmp
jo
sub
lods
push
dec
dec
inc
int
lods
in
icebp
lret
jae
stos
xlat
movsl
insb
cli
sahf
cltd
xchg
stos
data16
leave
movb
insl
jb
repz
in
push
push
xchg
lcall
lds
ret
inc
mov
fs
jne
xchg
xchg
xchg
add
xchg
mov
lods
sbb
push
shrl
push
outsl
adc
xchg
cmp
das
sub
xor
push
push
mov
jg
nop
ljmp
push
pop
ss
sarb
mov
std
test
lret
jbe
sub
mov
push
lea
test
repnz
testb
imul
enter
xchg
nop
mov
mov
sbb
out
push
cmc
xchg
sub
adc
aas
mov
icebp
insb
push
and
nop
mov
jle
repnz
movsl
cs
lcall
add
inc
ja
cmpsb
out
pop
pop
pop
push
fisttpll
jge
add
movsl
mov
xchg
ror
lret
sub
add
jmp
jo
xchg
xchg
in
adc
jge
xchg
xor
imul
data16
popa
ds
popa
pop
fwait
adc
movsl
add
cmpl
scas
call
fcoms
xchg
pop
add
lcall
fcomp
out
pop
push
push
mov
pop
push
ja
das
imul
fildl
inc
dec
xchg
into
leave
xor
in
push
jo
out
jbe
xchg
pushf
negb
jo
mov
js
cld
xchg
ret
mov
cltd
xchg
xchg
nop
std
mov
push
mov
insl
jnp
ljmp
pop
add
or
cmp
sub
pop
lret
ret
jmp
movl
stos
out
push
sbb
cmp
cmp
lret
fadds
xor
js
int3
and
adc
jnp
adc
daa
cmp
jbe
iret
xchg
rclb
inc
add
dec
out
ja
bnd
inc
adc
pop
repz
adc
inc
outsl
jg
adc
jb
shl
es
mov
xchg
xchg
sti
jecxz
icebp
add
out
lods
pop
repnz
sbb
cmp
insb
mov
add
push
mov
xchg
and
lods
mov
daa
mov
jle
adc
stos
nop
sti
sbb
sbb
cmp
lds
test
lock
jnp
pop
push
sbb
repnz
orb
jp
xor
test
lahf
pushf
cltd
or
and
mov
xor
jmp
inc
push
adc
clc
je
mov
mov
stos
push
dec
fsubp
pop
push
in
mov
mov
scas
scas
stos
mov
cmp
xor
jle
jg
jb
das
ja
xchg
mov
test
lret
push
dec
dec
lods
mov
insl
stos
xlat
jl
mov
cwtl
push
mov
les
ret
ljmp
lds
or
xor
inc
fs
or
in
xchg
mov
mov
ljmp
fldcw
or
insl
add
add
insb
sub
xchg
push
add
out
test
mov
adc
rep
out
stos
and
cmp
and
add
std
test
arpl
and
push
dec
and
inc
cmp
jmp
iret
je
dec
xchg
xchg
mov
mov
in
adc
jecxz
fnstsw
xchg
in
mov
aas
mov
lcall
xchg
push
pop
mov
mov
sahf
es
sub
ret
orl
xor
imul
mov
pop
add
addb
outsb
push
xlat
movsl
mov
jae
adc
mov
ja
push
sbb
and
sbb
or
mov
cwtl
int3
mov
push
jno
stos
mov
sti
dec
add
loope
or
call
loope
fcmovnu
add
dec
or
imul
lahf
pop
xlat
sbb
outsb
add
in
mov
lret
pop
and
mov
js
int
das
xor
negb
lods
push
jb
pushf
pop
cmpsl
push
jle
cmp
mov
sahf
insb
movsb
rcll
xor
lret
repnz
mov
jae
daa
out
fnstcw
jl
jns
lret
ret
cmp
mov
aam
fistpl
xchg
push
enter
mov
mov
add
adc
gs
call
push
xor
xchg
movsb
out
stos
cltd
mov
jg
dec
dec
aam
outsb
push
push
fldl
add
push
stc
sbb
add
cmc
sub
ds
popa
push
xor
sahf
loopne
dec
nop
cmp
lods
insb
fsubrp
jg
je
cwtl
xchg
xchg
fisttpl
adc
sarb
inc
adc
jmp
data16
incl
std
cmp
fdivs
insb
sub
fstps
adc
test
mov
sahf
lds
aam
into
int3
push
gs
add
inc
outsl
lock
sbb
or
pop
xchg
push
lea
sub
mov
in
xchg
sbb
sbb
xchg
lcall
movl
push
je
xor
hlt
cmp
adc
addl
je
xor
push
imul
rcll
xchg
cmpb
out
jbe
fsubs
mov
scas
or
add
cmp
mull
lods
fldt
es
adc
dec
xor
dec
repnz
out
stos
movsl
stos
repnz
sbb
cmpsl
add
lret
js
call
call
push
push
jmp
ljmp
ret
pop
in
insb
addr16
cmc
not
rcll
ret
jns
aas
loopne
and
adc
xchg
dec
push
adc
xchg
sbb
mov
imul
pop
pop
push
ret
push
js
xchg
cmp
ljmp
fcmovnb
dec
rorl
inc
test
jb
or
lock
lahf
pop
sbb
negb
cmp
cmp
or
xlat
loop
adc
xchg
dec
into
mov
ss
jecxz
xor
fnstsw
fstpl
or
mov
scas
lahf
stos
push
scas
pop
mov
pop
aas
ret
or
add
lods
shl
loop
fdivrl
dec
lea
jbe
js
imul
mov
mov
push
push
dec
dec
jae
cmpb
movsl
fwait
and
sahf
fwait
dec
adc
dec
in
leave
cmp
mov
sub
popf
dec
cmpsb
xchg
push
fstps
mov
cmp
fnstsw
cmp
ljmp
fwait
inc
lock
rolb
jo,pn
xor
push
dec
mov
adc
or
jge
add
ljmp
cmp
mov
ss
mov
out
push
and
movsl
fcmovu
pop
lods
cmp
leave
push
cli
add
movsl
divb
lock
jae
jns
pop
push
adc
inc
inc
cmpsl
clc
cmp
push
cmc
iret
rclb
sarb
cld
push
cmp
loope
dec
sbb
xchg
push
dec
or
cmp
ja
lods
outsb
xor
lea
les
repz
nop
lea
lret
mov
imul
pop
xchg
cltd
pop
xchg
rorl
int
jp
add
sti
clc
inc
jmp
pusha
and
xchg
orb
mov
sub
ror
rcrl
les
jmp
cli
xor
std
cmpsl
dec
xchg
lock
test
scas
mov
mov
mov
cwtl
fistps
push
pushf
pop
cwtl
icebp
or
xchg
in
clc
mov
call
or
fistl
aad
add
js
xor
pusha
das
jbe
xchg
lahf
pop
mov
out
jb
dec
pop
inc
js
mov
fsubrp
test
or
rcrb
mov
cmp
push
push
xor
in
addb
dec
stos
stos
ja
inc
fwait
inc
jnp
ja
dec
or
rcrb
jno
ret
mov
dec
dec
lcall
ss
mov
imul
mov
push
mov
in
adc
out
adc
pop
adc
mov
add
cmp
mov
ljmp
xchg
mov
int3
mov
jg
cmp
je
sub
in
mov
repnz
int3
inc
xor
cmp
daa
cmc
jl
in
adc
pop
sbb
lcall
inc
mov
dec
lods
aaa
imul
fistpl
xchg
mov
cmp
mov
aad
imul
or
das
pop
add
mov
daa
movsl
shrb
fwait
cwtl
push
mov
lds
xor
incb
xor
sti
cld
ficoms
xlat
add
pop
ret
pusha
popa
sub
lret
mov
sub
mov
lods
scas
nop
mov
inc
lret
jne
cmp
jge
mov
mov
inc
lret
mov
loopne
and
in
fisubs
push
test
popa
mov
stos
push
push
ret
dec
push
mov
cmp
mov
or
daa
add
les
dec
icebp
outsb
shr
inc
xor
test
test
shrb
xchg
add
inc
jb
jne
sbb
imul
push
call
icebp
and
pop
jge
and
sub
jp
lret
inc
lahf
mov
shrb
jge
mov
pop
xchg
mov
jns
xchg
lods
ret
fidivs
fnsave
std
arpl
push
mov
jns
movsl
mov
mov
mov
lods
addl
pop
mov
pop
ds
ja
das
imul
fisubrl
dec
ror
lret
leave
lock
gs
idivl
xchg
sbbl
jns
xchg
jle
shrl
fidivs
pop
into
loop
in
mov
push
nop
lret
stc
push
jecxz
xor
sbb
adc
dec
sbb
lea
aas
pop
cmp
mov
gs
enter
xchg
add
test
sub
lods
mov
push
aaa
pop
sub
pop
gs
xor
sub
test
cmpsb
mov
jge
loopne
jno
sahf
test
popf
add
cwtl
dec
mov
inc
or
clc
cmc
out
jns
jle
jp
xchg
mov
scas
adc
aaa
jae
jmp
jmp
lea
stc
mov
dec
loopne
push
adc
loope
push
call
cmp
mov
cmp
in
aas
pop
into
ds
fildl
mov
xchg
stos
cmpsl
movsb
or
pop
movsb
jmp
pop
cld
outsb
xor
pop
push
push
scas
clc
and
sbb
and
inc
inc
cmp
adc
mov
lahf
lahf
pushf
out
movb
div
cmp
cmp
icebp
out
imul
fldenv
daa
or
xchg
mov
cmp
call
xor
rcrl
roll
add
mov
sub
pushf
test
xor
loope
jbe
js
fwait
and
sahf
sahf
fwait
xor
out
in
and
divl
out
sbb
daa
pop
pop
sbb
push
daa
andb
cmp
in
xchg
lods
insb
out
fs
sbb
insl
aas
dec
jbe
mov
scas
jmp
pop
fs
pop
and
ss
mov
movsb
test
rcll
mov
jbe
pop
adc
cmpsb
and
iret
into
lret
adc
insb
jno
imul
sub
and
jg
push
lret
ret
cmp
stc
les
loopne
pop
xlat
imul
cmp
jne
mov
insb
dec
and
pop
in
or
push
stc
mov
insb
push
nop
xchg
cmovge
ret
fldt
mov
xor
fcom
roll
cmp
sub
sub
lea
dec
ret
pop
mov
jo
stos
cmpsl
pop
sbb
test
stc
sahf
in
fistpll
jmp
icebp
push
xor
or
mov
lds
int
mov
dec
or
in
shlb
mov
in
aad
addb
dec
andl
stos
jmp
push
lods
sub
aaa
push
push
dec
std
les
sub
and
cmpsl
movsb
push
or
inc
outsb
rol
add
repnz
pop
out
das
fnsave
push
xchg
mov
and
inc
inc
cmp
insl
imul
pop
lahf
lcall
ret
shll
call
je
push
clc
call
lret
lds
mov
in
fucom
pop
mov
xchg
test
mov
stos
test
ret
add
or
outsb
xor
sbb
hlt
xor
jmp
aad
sub
sbb
outsb
xlat
divl
or
mov
adc
out
push
dec
push
cli
hlt
cmp
push
jp
jge
lock
inc
ds
jmp
jb,pn
push
cmp
mov
xchg
adc
mov
xchg
mov
sub
adc
outsb
sti
xlat
aad
mov
jo
dec
imul
cmp
addl
jae
xor
fnstsw
sbb
ret
das
testb
mov
sub
xor
cltd
add
dec
inc
inc
cmc
enter
std
fs
in
sahf
in
daa
movsl
test
inc
pop
enter
fisubrs
mov
push
sbb
add
mov
or
inc
mov
xor
mov
xchg
aad
push
push
xchg
nop
popa
xchg
push
test
xor
es
jns
aam
cmp
mov
test
jmp
sub
xchg
cmp
jl
push
dec
push
mov
inc
jle
jl
fldl
mov
add
xchg
or
xor
jmp
pop
xor
repnz
xchg
xchg
aad
adc
push
aad
inc
inc
aas
stos
jmp
adc
push
int
test
mov
mov
sbb
mov
xor
jecxz
pusha
add
adc
cmp
jb
pusha
inc
fnstcw
je
jg
adc
in
lods
fnstcw
pushf
ficoml
adc
add
arpl
and
push
push
jg
les
inc
ds
js
popf
je
imul
dec
mov
ret
shlb
dec
in
cltd
aas
push
adc
or
inc
pop
jle
xor
push
push
popa
pushf
pop
mov
pop
dec
out
stos
jge
popl
lods
stos
pop
and
or
stos
rcl
int
xlat
ja
lret
idiv
lret
mov
push
push
push
rol
dec
addl
outsb
stos
xlat
jl
lcall
xor
mov
inc
or
xchg
iret
inc
push
int
inc
inc
aas
jno
inc
xchg
stos
imul
aad
add
out
xchg
out
xchg
std
fidivs
mov
rcl
aad
gs
cmp
push
fwait
das
push
les
ss
in
mov
mov
dec
test
mov
int3
leave
xor
mov
pop
lcall
add
icebp
mov
arpl
cmc
shll
outsl
fistpl
and
jbe
lcall
pushf
lods
out
mov
or
scas
pop
ficomps
sbb
push
jb
mov
or
xchg
mov
jle
ss
push
xchg
mov
lcall
dec
movsb
in
or
leave
std
divb
xor
insl
mov
fnstsw
jb
std
jb
cmp
lods
movsl
mov
shl
xor
sar
and
mov
out
sbb
push
dec
ja
sub
cs
insl
xor
push
adc
lret
mov
mov
ljmp
push
adc
je
pop
jg
imulb
xor
fwait
xchg
xchg
jb
mov
pop
push
push
add
pop
mov
clc
jbe
jb
movsl
mov
nop
lds
sbb
das
push
dec
pop
xor
add
push
fisubs
xorb
nop
dec
mov
ds
dec
dec
fwait
insl
imul
xchg
adc
movsl
cwtl
xchg
xchg
ficoml
fnsave
insb
fstps
adc
adcl
inc
cmp
sub
outsb
lahf
push
aad
lcall
aaa
js
mov
sub
pop
lcall
mov
xor
das
sub
inc
lcall
add
nop
dec
cmpl
add
or
fwait
int3
pop
push
dec
dec
out
cltd
leave
ret
div
out
and
pop
icebp
mov
prefetchw
stos
iret
out
out
mov
xor
fidivs
cwtl
xchg
sbb
jecxz
fldl
mov
scas
lods
pop
bound
test
or
pop
cld
cmp
sub
mov
jmp
lret
mov
cmp
stos
fiaddl
test
mov
xor
push
dec
pop
iret
dec
mov
sar
cli
notl
sub
adc
push
out
lea
inc
hlt
std
dec
js
outsl
testl
add
push
movsb
xchg
lret
enter
stc
mov
call
ficomps
adc
or
inc
insb
adc
pop
das
sub
pop
pop
enter
mov
mov
scas
cmpsb
jecxz
mov
add
rorb
out
stc
divb
cmpsb
mov
sub
xor
push
jl
mov
inc
pop
dec
jl
jbe
flds
cmpsl
rorb
adc
scas
pushf
xchg
shll
int3
leave
movb
in
hlt
das
out
mov
push
adc
je
mov
lahf
inc
popf
xchg
bound
adc
xchg
mov
out
in
shlb
popa
bound
and
dec
or
sub
das
xchg
shlb
pop
mov
jns
dec
mov
jns
or
popf
push
push
adc
int3
pop
test
std
cld
stc
jae
sbb
into
push
sbb
dec
inc
inc
cmpsb
stos
iret
inc
aam
imul
mov
xchg
inc
inc
jbe
vunpckhps
repz
xor
push
pop
pusha
aas
push
into
and
inc
inc
xchg
data16
insl
lds
or
movb
mov
and
in
scas
jecxz
xor
ds
cmp
scas
jae
sti
xor
push
pop
aam
inc
scas
lods
xchg
add
jmp
out
adcl
add
enter
jae
dec
std
cmc
repnz
pop
lahf
dec
out
jg
out
or
or
mov
js
jb
inc
sbb
bound
push
sbb
mov
mov
cmp
pop
bound
xor
fistl
and
aaa
mov
pop
add
and
cmpb
push
mov
adc
cmpsl
or
popf
fcom
aam
push
cs
lds
cld
div
pop
pop
add
aam
vunpcklps
lods
lods
push
fs
jo
rcr
sbb
add
add
dec
pop
dec
daa
out
pop
movsl
fstpl
adc
sub
mov
cmc
sub
xor
jge
repz
mov
fildll
fnstcw
stos
lret
pop
pop
inc
push
movsl
clc
cmc
xor
sub
jnp
sbb
mov
dec
clc
std
pop
jg
ja
loopne
mov
mov
dec
dec
push
iret
lret
xor
data16
icebp
push
pop
fwait
mov
xchg
inc
dec
xor
in
xchg
lods
insb
fsub
sub
fwait
rol
mov
mov
fdivl
jmp
out
insl
inc
sbb
mov
insl
jo
adc
xor
stos
out
fcomp
out
pop
push
rol
outsl
addl
mov
stos
push
movsb
sub
fcmovnb
sbb
or
movaps
dec
dec
cli
sbbl
and
sbb
lods
push
xchg
jne
insb
push
outsb
aad
pushf
sbb
mov
add
nop
add
outsb
xor
lock
ljmp
adc
addl
outsb
sub
pop
pop
ret
loopne
mov
xor
lods
adc
fcom
cmp
test
stc
andb
pop
insl
mov
rcl
lahf
pop
push
dec
mov
jl
jbe
and
outsb
test
sbb
xchg
pop
add
add
cmp
jae
out
out
jmp
out
pop
sbb
mov
cmp
loopne
cmp
call
addr16
les
mov
test
cmp
das
push
ljmp
push
jo
push
jae
cwtl
and
xor
test
mov
pop
push
push
mov
cmpb
lcall
mov
inc
or
cmp
lock
cmp
push
test
std
mov
mov
jne
dec
push
cwtl
inc
adc
jle
aam
push
out
lahf
sbb
lea
div
mov
not
and
push
adc
pop
lock
xchg
sbb
aas
insb
adc
bound
sub
pop
push
xchg
jg
add
mov
push
pop
js
xlat
aam
gs
inc
add
mov
xor
test
and
nop
jl
dec
incb
leave
jnp
jno
sbb
pushf
cltd
and
daa
subb
ret
sub
out
push
sbb
push
pop
jae
cmp
and
cmp
dec
jb
insb
sar
sahf
pop
or
mov
cmc
lcall
fstpl
lods
in
faddl
ljmp
mov
mov
sub
mov
and
xor
mov
stos
cmpsl
cs
xor
aaa
cmp
test
cld
jbe
pop
mov
and
dec
dec
mov
idivb
mov
jecxz
xchg
inc
or
enter
mov
hlt
or
pop
mov
cwtl
add
shll
push
xor
xlat
fsubl
pop
pop
push
mov
addb
jbe
test
nop
add
shlb
jp
leave
add
stc
xor
sub
test
movsb
mov
jns
outsl
aad
stos
sarb
popf
fwait
cwtl
dec
dec
imul
xor
pop
xor
in
out
ja
sbb
adc
inc
mov
add
addr16
data16
rclb
ret
shlb
mov
mov
aad
adc
dec
data16
das
sub
cmp
cmp
ret
add
adc
jns
loop
negl
fisubrl
or
int
in
sub
xchg
rcr
push
dec
dec
scas
mov
adc
jbe
out
sub
popf
lcall
les
outsb
xor
lock
sbb
outsb
adc
add
mov
cmp
xor
gs
mov
cmc
mov
mov
es
jecxz
or
scas
mov
int3
or
xor
jns
sti
divb
pop
sub
popa
jg
push
leave
out
inc
subl
sub
or
aaa
pushf
xchg
sar
push
ret
es
int3
out
dec
lcall
sbb
adc
jge
xor
ds
xor
addr16
jb
adcb
inc
mov
cmp
call
fmuls
pop
ret
push
outsl
stc
test
mov
scas
cmpsl
mov
mov
decl
jl
fsubp
xchg
movsl
mov
out
rcrb
jb
shll
leave
out
sub
xchg
push
jns
les
inc
inc
ds
dec
push
pushf
insl
imul
mov
pop
popa
cltd
xchg
xchg
cli
cli
lahf
ret
mov
mov
out
push
fisubs
adc
add
sub
mov
xchg
push
add
test
jle
scas
mov
or
int
sbb
ror
or
add
pop
clc
jae
ss
sbb
mov
daa
inc
andl
adc
xlat
jl
jge
cltd
cld
stc
aas
inc
mov
sarl
push
es
idivl
adc
sbb
mov
ljmp
rcl
shll
test
out
mov
mov
mov
bound
addr16
jo
add
push
sub
xor
out
pop
push
rol
je
and
mov
stos
push
movsb
sub
fcmovnb
sbb
or
sub
movswl
mov
movsl
add
sbb
mov
fnstcw
jno
imul
in
xchg
pop
cltd
xchg
xchg
nop
inc
adc
mov
imul
sbb
adc
jnp
xor
lock
imul
mov
or
in
lock
out
mov
sub
ljmp
add
inc
sti
pop
incl
jecxz
gs
xor
imul
pop
mov
dec
addl
mov
in
or
push
pushf
lcall
clc
mov
out
push
sbb
or
ds
jno
xor
int
test
ljmp
aaa
int3
loope
mov
mov
iret
jae
xor
xor
sub
mov
xchg
pop
mov
pop
divb
jb
and
sub
pushf
popf
fiaddl
dec
cs
sub
push
clc
cmc
repz
adc
mov
stos
push
movsl
dec
dec
jno
movsl
mov
outsl
add
leave
outsb
or
mov
inc
xorb
out
in
je
in
icebp
inc
push
adc
cltd
xor
shrb
xchg
loope
xor
cltd
imul
ret
mov
jmp
mov
ds
jecxz
out
daa
aam
notl
dec
or
movb
sti
clc
idivb
pop
pushf
mov
pop
lahf
insl
dec
push
jns
jecxz
mov
cmpsb
movsb
push
pop
mov
int
das
xor
push
pop
sahf
arpl
and
sbb
push
outsl
test
mov
aaa
jae
aad
ds
xchg
pop
lcall
xchg
shlb
out
and
inc
dec
flds
mov
pop
je,pn
ja
cmpsl
lods
ds
xlat
sub
push
mov
jle
sti
mov
orps
lods
sahf
fcom
rcrb
cmp
dec
repz
test
lret
cmp
sub
mov
or
jp
sbb
jp
mov
into
clc
notl
imul
enter
and
repnz
in
aas
jecxz
jnp
sbb
or
sub
mov
loope,pn
push
aad
int3
mov
mov
jmp
rcr
and
mov
sti
dec
test
xchg
pop
movsl
stos
push
test
xchg
int3
xchg
mov
pop
mov
je
test
movsb
movsb
mov
dec
or
lret
fcoms
clc
cmc
bnd
add
and
sbb
jge
adc
cmp
inc
mov
inc
lret
outsb
sahf
jns
mov
cli
pusha
xchg
mov
cmp
mov
push
and
dec
mov
adc
std
push
dec
es
data16
add
jl
pop
loop
daa
loope
movsb
mov
ror
int3
loopne
cld
jbe
pop
mov
and
push
dec
aam
sbb
cmp
xlat
insb
xchg
xchg
mov
lret
xchg
mov
test
mov
mov
je
xchg
pop
pop
ficomps
adc
add
xor
mov
in
jle
or
into
xchg
lea
sub
lods
sbb
xlat
stos
mov
mov
divb
sub
push
pop
pop
lahf
or
dec
dec
inc
andb
insl
call
je
add
cmp
sub
jmp
lock
adc
mov
mov
mov
xchg
iret
mov
ret
popf
cmp
mov
jmp
stc
sbb
sub
pushf
ljmp
js
sub
mov
adc
mov
test
mov
xchg
add
or
xlat
cs
icebp
ja
inc
add
cmp
bound
push
pop
sbb
xchg
testl
xchg
sahf
pushf
push
jle
insl
lds
mov
les
ret
or
mov
and
xor
movsb
fs
xor
lea
mov
decl
or
roll
xor
sti
adc
cs
in
and
sbb
jns
mov
adcb
jne
pop
xor
cmpsb
movsb
mov
insl
decb
leave
sahf
or
mov
jge
sbb
pop
sbb
jle
xchg
out
pop
or
pop
mov
rcll
ret
mov
mov
cmp
dec
sbb
in
mov
or
cmpl
and
pop
pop
mov
ret
mov
mov
mov
mov
xor
mov
iret
int3
leave
push
movb
jne
xor
out
adc
mov
rorb
into
js
rcl
scas
outsb
push
jecxz
data16
nop
cli
lahf
outsb
mov
mov
outsl
int
add
xchg
push
sbb
xchg
in
jb
mov
aaa
xor
popf
imul
arpl
jo
xchg
mov
inc
scas
xor
idivb
dec
jns
loopne
mov
imul
and
mov
and
mov
adcb
sub
test
jb
add
inc
inc
add
out
and
imul
adc
mov
stos
push
movsl
push
insb
out
xchg
cli
add
les
sahf
and
and
in
dec
fsubl
loope
add
std
mov
and
xor
ljmp
sub
jnp
fsubrs
popf
add
lret
mov
jb
jmp
sub
and
adc
push
inc
jb
jp
xor
out
addr16
cltd
push
imul
leave
sub
xor
mov
ljmp
push
adc
enter
mov
xor
lods
push
fs
sbb
mov
xlat
test
loope
mov
stos
test
sub
rcl
and
ffreep
cmc
std
sti
stc
andb
cld
pushf
mov
scas
lods
mov
pop
shrb
es
outsb
test
rcll
push
cwtl
xchg
rcl
int
mov
xor
and
and
cmovnp
inc
scas
adc
cltd
pusha
pop
fwait
cwtl
les
and
mov
dec
dec
xor
ss
aad
adc
add
mull
add
bound
xchg
mov
jne
test
mov
lods
add
fdivrs
js
sar
cli
testl
stc
push
inc
pop
adc
inc
inc
fmuls
in
je
inc
jl
mov
xchg
xchg
and
cs
and
icebp
out
popa
mov
in
packuswb
enter
mov
lahf
addr16
mov
rcrb
jge
rcll
loope
je
mov
aaa
cwtl
xor
cmp
jnp
add
push
das
test
lds
push
push
fsts
dec
jp
jno
ss
mov
sar
movsb
fdivrl
push
jmp
sbb
add
ss
int3
xor
in
aaa
jae
jmp
mov
bound
pushf
imul
fs
out
push
add
or
sub
std
sbb
leave
push
push
push
dec
mov
js
mov
lods
mov
cld
pop
xor
dec
cmp
movsb
gs
and
adc
inc
fnstcw
gs
scas
outsb
insb
xchg
icebp
enter
rcrl
mov
add
sub
in
adc
dec
sbb
inc
addl
xor
mov
and
cld
jge
mov
jl
lods
test
aam
sub
jl
xor
xchg
adc
popa
daa
rcl
jae
push
dec
loope
mov
xchg
jno
jbe
sub
stos
cmpsl
movsb
adc
mov
xchg
sar
and
ss
ljmp
movsb
and
insb
inc
adc
outsb
addl
loopew
push
popa
mov
std
rcll
pop
adc
pop
sub
inc
pop
mov
adc
subb
cmp
call
push
push
push
dec
popa
or
jbe
arpl
out
std
sbb
stc
dec
fistl
inc
movb
jbe
pop
jae
jecxz
out
daa
sbb
push
push
dec
dec
and
inc
mull
out
shrl
xchg
xchg
xchg
nop
movsb
or
jnp
mov
jecxz
hlt
sub
adc
adc
popa
or
lods
mov
dec
imul
xlat
jle
xchg
ss
fnstcw
mov
scas
mov
xchg
rcl
rcll
add
sti
pop
or
das
sub
in
push
sbb
lcall
popf
andb
mov
and
das
cli
in
or
leave
cmp
mov
out
in
pop
jge
jns
sbb
push
lea
cmp
cmp
call
sarl
xchg
xchg
xchg
or
repnz
mov
daa
out
adc
jno
inc
inc
adc
subl
movsb
test
mov
mov
push
add
jmp
movsl
scas
scas
lods
sub
mov
in
iret
int3
leave
js
sbb
cli
testl
adc
push
push
ret
test
repz
xchg
jp
jb
imul
push
xchg
fwait
cltd
adc
aaa
cmp
sarb
mov
xchg
rolb
inc
mov
mov
xor
pop
fcomps
fnsave
mov
jno
sbb
loop
fiaddl
stos
sti
or
imul
xor
mov
and
andb
into
jo
push
dec
enter
jo
jmp
je
outsb
xor
jae
popf
ror
xor
mov
in
cli
xor
addr16
push
push
sbb
add
adc
mov
test
in
cmp
fs
push
iret
cltd
mov
mov
cmpl
adc
or
xor
data16
mov
mov
xchg
sub
les
bound
jnp
fidivs
out
adc
mov
iret
rcl
dec
xchg
xor
sub
test
hlt
sbb
dec
fs
sbb
inc
aas
pop
lahf
addl
xchg
or
dec
dec
clc
aas
fwait
inc
xchg
mov
mov
sbb
lret
jns
nop
push
ret
inc
inc
test
sbb
mov
jecxz
inc
xchg
xchg
cmp
dec
mov
mov
cmp
out
or
test
shlb
outsb
imul
jnp
push
stos
pop
aaa
add
and
das
mov
ret
lods
nop
pop
scas
out
mov
lret
mov
jns
cltd
xchg
xchg
dec
mov
ss
push
sti
sti
loop
push
sub
popf
cmc
lahf
and
leave
add
inc
mov
insb
iret
sub
popa
mov
push
pusha
test
mov
fcmovnb
adc
cmp
rorb
jbe
add
cmpsb
popf
jno
mov
loope
push
mov
roll
mov
mov
or
pop
sub
aam
nop
lret
lds
rorb
inc
sbb
ret
dec
inc
inc
aad
jbe
jno
fsubrs
xchg
lahf
ficompl
negl
mov
jmp
add
mov
push
mov
push
das
sub
mov
jg
ffreep
xorb
in
push
shr
xor
xchg
jp
in
outsb
lcall
push
xchg
cmp
dec
push
push
mov
or
jp
mov
ljmp
lcall
hlt
cmp
cli
div
cmp
je
dec
xchg
xchg
fstps
adc
jp
mov
jb
jb
cmpsl
jno
pop
xchg
mov
leave
xchg
push
ret
out
mov
aad
in
fimuls
jg
or
cmp
cmp
dec
mov
add
dec
dec
test
mov
mov
shl
add
rcrb
leave
lock
cmp
in
sub
outsb
fidivs
push
sbb
dec
sbb
jns
shl
fisubl
jecxz
or
icebp
icebp
sub
mov
inc
and
dec
inc
inc
dec
addl
ja
mov
imul
mov
test
sti
sbb
scas
lods
xor
xlat
push
fmul
xor
add
xchg
imul
pop
push
push
mov
jl
jl
int3
scas
insl
daa
arpl
mov
testl
sti
loop
push
sub
jmp
xchg
jnp
adc
test
je
mov
les
lcall
cmp
or
mov
lret
clc
push
test
adcb
cmpsb
call
and
push
push
dec
mov
jl
lods
mov
mov
cmpsl
and
push
xchg
aad
int3
cmp
add
std
cli
imul
sub
mov
pop
sbb
pushf
inc
repz
int3
lret
pop
leave
add
out
lea
sub
ret
dec
xor
lock
pop
xor
pop
sbb
ss
mov
test
int
dec
mov
out
cmc
es
or
aas
jmp
inc
push
aam
gs
pop
inc
add
or
das
sub
fwait
pop
xor
mov
dec
inc
sub
hlt
lret
into
loope
lahf
test
and
arpl
fimuls
jl
in
mov
adc
mov
movsb
aad
xchg
lods
insb
push
mov
std
cs
inc
icebp
mov
xchg
dec
push
ret
ja
inc
push
mov
subb
pop
mov
jbe
mov
xchg
int
sahf
lods
fucomi
scas
clc
mov
pop
xlat
and
adc
decl
cmp
daa
jo
gs
dec
cwtl
cmp
mov
shrb
repz
pop
lcall
lret
mov
repz
xor
sbb
addr16
sub
sub
pop
adc
sub
addl
scas
xor
sbb
add
push
jp
adc
mov
pop
xor
mov
dec
inc
sub
sub
mov
or
xor
arpl
cmp
clc
fimuls
jge
in
mov
adc
mov
movsb
aad
cwtl
lods
insb
push
mov
std
jb,pn
lds
dec
icebp
mov
xchg
dec
push
ret
inc
jno
push
mov
cmpb
xor
popf
jbe
mov
xchg
popf
lds
clc
int
add
xlat
and
adc
decl
cmp
daa
jo
arpl
mov
scas
addl
jp
int3
lds
test
hlt
stc
sub
nop
mulb
sub
mov
inc
sub
dec
adc
push
pop
adc
addl
mov
jo
cs
xchg
les
leave
mov
mov
icebp
mov
shr
enter
fldenv
adc
idiv
es
jo
leave
icebp
mov
push
push
jecxz
mov
dec
inc
adc
lret
mov
jno
pop
outsl
jmp
xchg
ror
and
pop
add
es
mov
call
push
push
adc
movsl
push
lcall
scas
outsl
insl
push
mov
shlb
repz
pop
movsb
or
mov
mov
lds
gs
or
mov
cmp
js
lea
xchg
push
fsubrl
mov
rcrb
loope
fdivrl
or
push
stc
or
fs
xor
jl
das
in
pop
xlat
push
fdivrl
dec
dec
dec
inc
inc
fadds
outsl
push
add
xor
scas
sbb
dec
divb
and
loope
and
les
or
lds
jp
add
pop
mov
xchg
rolb
ss
or
xor
pushw
int
movsb
in
cmp
stc
fisttps
mov
push
cmp
in
pop
fisubrl
jmp
outsl
adc
push
mov
push
push
dec
xor
push
mov
dec
pop
pop
sbb
mov
loope
movsl
js
ss
cmp
cs
rcll
mov
xchg
pop
sub
xor
sub
aas
push
adc
push
sub
addr16
adcl
outsl
mov
jns
mov
mov
jo
mov
sti
mov
sbb
and
push
mov
mov
div
lock
sub
jne
sbb
out
stos
jge
lds
outsw
xchg
push
gs
cmp
rclb
mov
inc
aam
and
loope
fistps
aas
xchg
add
mov
xchg
imul
sub
aaa
repnz
repnz
dec
clc
or
ret
jg,pn
dec
or
mov
neg
xchg
es
loopne
mov
ljmp
xchg
sti
insb
test
add
shll
push
test
inc
pop
sbb
add
mov
or
mov
dec
leave
popf
pop
aaa
cli
into
mov
dec
movsl
iret
and
mov
out
hlt
int
dec
push
fisubs
sbb
push
dec
inc
sbb
mov
insb
inc
pop
ret
xchg
push
fildll
insl
xchg
jmp
mov
cmpsb
das
iret
loop
and
cmpsb
ret
int3
repz
cmp
sub
xchg
pop
adc
into
inc
jle
shlb
push
sbb
mov
lret
adc
pushf
inc
add
and
dec
mov
pmaddwd
mov
push
dec
mov
mov
addl
scas
adc
rorl
shrb
bound
insl
sahf
cmpsb
popa
xor
or
and
dec
dec
xor
sub
mov
shl
cmpsl
movsl
mov
sub
sbb
movsb
dec
mov
sub
push
ret
pop
sbb
std
test
lahf
test
out
mov
jo
sar
sahf
pop
ret
xor
test
mov
pop
adc
mov
dec
add
and
loop
xor
pcmpeqw
cmp
mov
subl
pushl
ret
push
cmp
fadd
and
scas
lods
xchg
pop
xor
icebp
xor
enter
orb
pop
lret
popa
and
add
dec
mov
mov
mov
movb
gs
cmp
rcll
sub
mov
out
push
ljmp
jge
ss
add
mov
xchg
pop
adc
sahf
pop
pop
inc
in
lret
mov
and
push
out
cmp
pop
cmp
ror
mov
adc
cmp
popa
shl
xchg
imul
scas
xchg
push
mov
addb
insl
roll
fistpl
and
sub
dec
pop
xor
repnz
jnp
pop
test
dec
icebp
pushf
adc
xcrypt-cbc
cmpsl
shlb
jge
cli
into
mov
add
mov
mov
icebp
or
fisttpl
xchg
or
cmp
aaa
and
and
xchg
push
orl
lds
popf
and
loope
or
or
stc
subl
daa
adc
adc
addl
std
ja
jno
mov
fistps
nop
shr
dec
es
mov
in
jmp
push
pop
add
add
jae
popa
jmp
movsl
jle
mov
add
fcmove
pop
jmp
xor
jmp
rcrl
sub
cmp
test
and
mov
lods
mov
cld
fdivl
fwait
and
fptan
mov
cld
add
je
sub
je
sub
jg
adc
jnp
les
arpl
jl
mov
adc
leave
loop
pop
repz
fsubr
movsb
das
or
cmovp
mov
lock
in
push
pop
mov
jmp
stc
mov
subb
pop
ss
add
mov
add
cltd
or
out
aam
nop
ja
sbb
dec
inc
sub
je
or
into
loop
mov
into
repz
sti
mov
inc
daa
out
jge
inc
push
adc
clc
arpl
mov
insl
sub
mov
pop
mov
xchg
mov
dec
mov
pop
ret
cs
dec
or
mov
neg
ss
cmp
mov
stos
mov
xchg
xor
out
lock
bswap
sbb
or
testl
pop
pop
push
xor
dec
test
cmp
popa
jns
cmp
mov
mov
adc
jl
scas
outsl
scas
pushf
adc
out
loope
fistpl
jbe
jo
or
sbb
lds
js
jb
cmpl
add
ror
inc
jmp
sub
push
rorb
in
sub
cltd
sub
movsb
pop
stos
sti
mov
daa
shlb
lret
scas
outsb
aam
in
enter
sub
and
sub
mov
cltd
xor
dec
sbb
dec
push
xchg
das
dec
and
mov
lea
push
pop
addl
mov
callw
jae
cwtl
push
jmp
cmpsl
movsl
loop
xor
sub
jl
inc
add
adc
das
sub
into
jp
sbb
ret
inc
stos
sbb
loopne
jae
push
add
sti
fistps
or
lret
pop
push
cmp
pop
mov
push
and
test
adc
fwait
stos
jle
cmp
int
stos
imul
xchg
xchg
jnp
rcrl
add
call
mov
xchg
aas
clc
cmp
inc
mov
ss
or
in
cwtl
sbb
lret
jmp
mov
xchg
mov
mov
ja
out
or
sbb
adc
sarb
cmp
xchg
cli
pop
sub
inc
fiaddl
xchg
insb
mov
mov
gs
fsubp
mov
push
into
or
fisubl
cmc
mov
xor
dec
sbb
xor
jb
add
mov
dec
stos
test
jle
inc
adc
mov
stos
inc
mov
shrl
add
push
or
jo
sub
and
mov
subl
inc
into
mov
inc
xchg
or
sahf
pushf
sbb
mov
pushf
and
testl
notl
or
ds
xor
lods
insb
push
ss
rclb
mov
dec
sub
adc
lret
ss
jo
adc
test
in
push
mov
les
dec
aad
pop
jbe
cmpsb
fs
scas
dec
mov
loopne
xchg
aad
cmp
into
lret
add
push
xor
icebp
fcomps
mov
mov
sub
je
or
int
mov
jmp
repz
sti
mov
inc
daa
out
jge
aas
push
adc
clc
push
sub
dec
cltd
insl
sub
rol
xchg
push
fidivs
lods
bnd
stc
outsb
cmp
mov
fsts
insl
int
inc
add
stc
lcall
xor
sub
es
mov
push
push
cmp
push
lea
xchg
aam
into
mov
stos
push
cld
lods
neg
cwtl
outsl
das
xor
mov
add
push
pop
cs
mov
pop
pop
push
ss
cmp
insb
sub
jbe
packuswb
cmpsb
data16
cltd
mov
mov
mov
out
in
xor
jno
adc
or
jnp
pusha
rorl
push
call
sub
in
roll
in
lods
adc
push
sbb
fdivrs
lds
pushf
dec
pop
xor
icebp
xlat
andb
dec
ja
dec
dec
xor
je
repnz
mov
push
fimuls
in
and
mov
push
xor
dec
sbb
xor
jo
add
rcrl
push
adc
pop
cmc
test
mov
cli
mov
add
and
ffree
dec
fistl
gs
cmp
pop
xor
test
popa
and
dec
dec
xor
adc
jecxz
and
mov
mov
out
movsb
jecxz
inc
pop
sbb
push
adc
mov
mov
inc
jmp
popaw
pusha
pop
or
test
fcoms
divb
xor
loop
stos
cmp
or
add
xchg
xchg
inc
xor
int3
rcll
dec
mov
mov
call
pop
shl
arpl
push
into
push
sbb
or
cmpsb
imul
sub
adc
inc
inc
stos
lock
ja
jb
aam
shlb
test
mov
in
or
xor
cmp
ljmp
adc
or
popf
orb
cmp
into
aam
pop
pop
push
xchg
mov
mov
mov
addr16
inc
push
pop
and
adc
scas
jae
xor
sub
sbb
dec
dec
mov
std
jg
jp
fsub
fisubrl
mov
xchg
dec
mov
adc
mov
cmp
inc
or
cmp
dec
bound
xchg
xchg
sbb
adc
movsl
cmp
cmpsl
inc
jb
fsub
arpl
fwait
rol
push
rcrb
outsl
shl
cmc
xchg
dec
push
fisubs
sbb
mov
std
cmp
xor
and
push
push
mov
cmpb
loop
cli
movsb
and
xchg
hlt
sbb
scas
sub
cli
inc
rcll
sub
sbb
mov
push
dec
jp
fsubp
jmp
enter
push
enter
ja
cld
std
lret
push
es
xor
and
mov
cmp
sub
pop
pop
ret
mov
mov
subb
and
xor
add
pop
jb
mov
and
mov
jg
in
icebp
jae
outsb
stos
rcl
push
lahf
shrb
inc
jg
add
ret
pop
cs
ja
out
out
push
push
mov
mov
jbe
mov
arpl
adc
hlt
clc
bnd
or
addr16
sub
cmp
or
fs
stos
scas
xor
sub
mov
sub
mov
jp
mov
fcoml
cmpsl
fdivs
dec
xchg
or
sti
pusha
idivb
out
xor
into
xchg
adc
scas
sarl
stos
dec
dec
inc
outsb
imul
sbb
cld
add
lret
adc
outsl
stos
or
xor
inc
pop
sbb
adc
insb
addb
cmp
xor
lds
xor
gs
idiv
add
in
scas
ss
mov
lock
repz
idivb
fwait
sbb
push
xchg
push
decl
jae
and
add
add
sbb
mov
ja
adc
imul
adc
push
adc
inc
test
fs
cltd
mov
pusha
pop
fwait
cwtl
std
sar
adc
mov
insb
fstps
in
dec
in
and
or
add
rcr
pop
xor
pusha
push
push
in
jbe
ret
in
sub
xchg
sub
mov
movsl
das
jle
stc
sub
aam
in
icebp
cmp
dec
imul
push
dec
dec
mov
je
aaa
js
je
jbe
repz
ret
cltd
lret
mov
and
mov
and
xchg
dec
fimuls
inc
mov
leave
mov
pop
fcoms
insl
test
push
call
sbb
push
aad
push
fistpl
je
adc
divb
xchg
and
push
roll
jns
bound
sbb
pushf
or
test
enter
outsb
stos
setnp
jne
jno
sahf
dec
or
cmp
push
shlb
addr16
xchg
add
sub
lcall
push
lcall
fiaddl
xchg
pop
add
insl
adc
add
fisubs
xchg
aaa
xchg
gs
push
inc
sub
mov
fistps
and
movsb
mov
mov
push
push
pop
clc
div
icebp
sbb
lea
imul
dec
rolb
int3
mov
test
pushf
cltd
adc
aam
lret
adc
cmp
mov
cltd
loopne
xchg
pop
out
packsswb
adc
xlat
mov
pop
lds
pop
mov
mov
cld
mov
mov
stos
lret
pop
xor
cmp
push
sub
xchg
cmp
push
push
mov
inc
xchg
aam
mov
call
cmpsl
cltd
xchg
test
test
data16
jmp
sbb
adc
inc
mov
cmp
outsb
les
fcoms
cmp
cwtl
mov
mov
insl
sbb
aas
ljmp
mov
cwtl
fwait
inc
clc
xor
scas
push
push
lret
in
pusha
mov
jne
xchg
cmpsb
mov
jo
iret
int3
leave
push
into
das
aam
pop
rep
out
mov
sub
adc
sbb
inc
cmpsl
stos
dec
ret
imul
xchg
lods
cmpsb
or
lret
lret
cmp
mov
ljmp
cwtl
in
jns
add
les
xchg
shlb
add
dec
push
xchg
pop
das
sub
adcl
dec
loopne
das
and
pop
add
mov
das
sub
mov
lods
arpl
cmp
insl
jecxz
outsl
add
fcomps
lret
push
in
insl
xor
pop
pop
ret
sbb
and
cltd
aad
insl
or
or
cmp
int3
mov
jp
leave
mov
and
mov
jmp
pop
and
aaa
push
dec
inc
std
jnp
inc
push
orb
test
popf
xor
lea
mov
cmpl
lods
adc
xlat
push
fxch
push
lods
xchg
cld
stc
arpl
and
inc
dec
mov
dec
mov
sbb
sti
test
loopne
rcll
push
xor
lock
push
sbb
or
aas
push
adc
in
or
je
cltd
cs
stos
leave
sahf
pop
fsubs
fiadds
mov
jle
loope
sbb
fwait
adc
dec
lea
xor
je
adc
divb
pop
xchg
sub
test
jg
mov
addl
outsb
stos
rcl
or
iret
stc
pop
push
sbb
negl
sbb
dec
bound
pushf
and
inc
pusha
push
dec
dec
jno
mov
cltd
pushf
shlb
pop
ret
shr
mov
divl
dec
and
pop
jecxz
push
mov
or
mov
cwtl
fwait
xchg
es
pop
rcll
shl
incb
jg
add
add
xchg
sahf
fldt
pusha
pop
or
cmp
jbe
cld
stc
imul
rcll
sbb
test
lret
inc
inc
mov
dec
je
sbb
mov
xchg
xchg
and
cs
sbb
repnz
imul
mov
xchg
inc
sub
xor
fs
mov
or
cli
fisttpll
sti
mov
stos
test
pop
pop
push
repnz
xor
jns
test
xor
push
stc
and
mov
lret
sti
dec
dec
fisttpll
dec
stos
subb
cltd
xchg
sub
ret
xor
fisubl
pop
ret
cli
stc
and
je
push
adc
rol
out
aas
xchg
adc
dec
ja
pop
pop
push
fadds
xor
xchg
in
adc
out
mov
adc
iret
and
ficoml
std
test
scas
sub
sub
xchg
mov
push
mov
push
xor
sbb
stos
push
or
enter
rorl
leave
idivb
cli
mull
test
repnz
push
cmp
fnstcw
jns
jb
cltd
dec
loop
sbb
lcall
mov
sub
insb
lock
xchg
rolb
inc
aas
xchg
test
cmp
sahf
pop
mov
rorb
jge
test
sub
lahf
pop
and
pop
aam
cmc
jae
ds
js
idivb
xchg
sub
test
and
lods
out
add
sub
add
or
inc
xor
xor
mul
in
and
adc
out
addb
cmp
push
mov
bnd
iret
mov
add
test
mov
lods
sbb
push
sar
addb
push
bound
sub
pop
push
push
shlb
jnp
jge
fdiv
popf
cmpsl
into
sbb
pop
xlat
ds
iret
leave
movb
js
xor
pop
out
adc
into
push
dec
add
flds
inc
sarb
mov
push
xlat
xchg
inc
or
mov
pop
mov
push
push
mov
push
or
nop
and
cmp
cs
popa
pop
pop
enter
mov
lcall
pop
pusha
sbb
fstp
inc
stos
js
or
jns
into
sti
clc
cmc
pop
test
insl
daa
mov
stos
push
ror
sarb
outsb
aad
js
pop
push
sbb
fistps
jne
out
cmp
jge
xor
outsb
outsb
pushf
popa
push
lahf
movsb
jp
pop
dec
xchg
cmp
ljmp
ret
outsl
inc
pusha
mov
and
add
mov
adc
jle
pop
stc
jge
inc
xor
sahf
cmp
cmpsl
dec
ret
sub
mov
mov
arpl
adc
ds
mov
jns
inc
test
pop
add
icebp
and
or
ja
dec
xchg
push
movsb
mov
inc
in
jg
sahf
mov
or
lret
rol
mov
les
jecxz
xchg
gs
push
push
or
xor
sbb
in
dec
push
pop
cltd
mov
daa
sub
faddl
pop
or
inc
lock
cmp
xchg
mov
sbb
dec
dec
enter
mov
stos
sbb
out
popf
daa
lret
fwait
lret
leave
movb
jmp
jno
ljmp
pushf
or
jno
xor
cmp
and
imul
inc
imul
jl
push
insl
jo
sub
fisttps
push
pop
hlt
add
push
or
iret
stos
mov
inc
aam
into
xchg
outsl
addb
xorl
ret
rcrl
ficoml
sub
mov
add
sub
push
pop
ja
xchg
inc
nop
iret
cmp
cmp
dec
shrl
mov
jo
mov
nop
lea
sub
push
repz
shr
loopne
sbb
mov
and
push
aas
cmp
inc
out
cmp
push
jecxz
or
pop
popa
sbb
jecxz
lods
and
lret
or
faddl
movsb
and
sbb
mov
cmpsb
push
dec
dec
scas
mov
cmpsb
enter
test
cmpsb
enter
pushf
cltd
xchg
inc
cli
cwtl
ds
ds
into
sti
clc
pop
data16
inc
fisubrl
fisubl
sbb
dec
push
mov
insb
call
bound
jne
fwait
xchg
xchg
add
inc
mov
mov
in
inc
nop
dec
fstl
into
push
cltd
ja
adc
sub
pushaw
bound
sarb
pop
push
pop
cmpl
pop
test
xor
inc
dec
into
int3
leave
pop
sti
stc
mulb
in
es
and
je
mov
inc
dec
dec
dec
jno
inc
mov
outsl
insb
imul
pop
mov
xchg
rcll
add
daa
pop
pop
out
loope
pop
bound
push
mov
mov
fucom
bound
ret
mov
movb
cmp
scas
add
mov
out
int
ret
sub
mov
test
push
out
lcall
inc
inc
insl
arpl
mov
sub
or
pushf
ret
pop
rorb
shr
divl
icebp
out
push
sub
pop
xchg
shlb
int
or
test
xor
cmpsl
data16
pop
test
into
mov
lret
sbb
pop
or
aaa
fiaddl
adc
enter
push
scas
lcall
and
push
xchg
push
dec
mov
nop
movsl
mov
ss
xor
leave
lock
pusha
mov
test
and
mov
lea
dec
mov
outsb
add
mov
mov
fwait
add
test
fimull
es
leave
jno
adc
out
dec
inc
daa
loope
test
imul
mov
ret
daa
icebp
movb
xor
scas
stos
adc
cmp
inc
dec
and
rorb
pop
add
cli
divb
xchg
mov
cmp
push
dec
aam
cmc
mov
js
sbb
pushf
ret
mov
or
adc
inc
jmp
jnp
jne
outsl
adc
adc
ss
ljmp
adc
jb
pop
int3
xchg
sti
cmp
xchg
out
es
ljmp
int3
iret
or
mov
std
adc
mov
lods
dec
push
js
in
roll
push
imul
rcl
sarl
sbb
or
pop
cmpsb
aaa
negb
xor
call
dec
jl
pop
mov
gs
je
loope
or
mov
nop
lret
mov
sar
imul
in
ljmp
adc
add
xor
add
pop
mov
lock
mov
repz
loop
in
fadds
add
pop
add
jns
sti
divb
pop
lahf
movsb
lret
push
mov
fimull
pop
jg
divb
cmpsl
and
outsb
rcl
adc
aas
mov
jo
ret
shlb
outsl
xchg
imul
jmp
gs
push
adc
xor
cmp
gs
inc
rcl
cmp
lcall
out
jmp
mov
addr16
popa
jae
adc
jl
lahf
add
cmp
fwait
out
hlt
dec
gs
pop
adc
xchg
clc
or
mov
push
movsb
lret
rcr
adc
lret
das
std
and
repz
cmpsl
out
and
icebp
push
push
dec
mov
stos
js
jno
test
sahf
lcall
outsb
xor
lock
inc
dec
imul
out
push
or
fnstsw
xor
xchg
lcall
lds
xorl
mov
daa
in
inc
sbb
sbb
imul
add
pop
xor
lea
popa
and
push
adc
jno
jns
xchg
mov
stos
aam
fcompl
fdivl
cmp
and
lock
ficomps
mov
mov
xchg
leave
jg
mov
sbb
rolb
leave
outsl
pop
shrb
loope
enter
jg
loop
mov
in
arpl
adc
pop
outsb
inc
add
jle
add
xchg
push
fsubs
addb
or
imul
xlat
dec
inc
cmc
add
ljmp
out
movsl
xor
daa
bound
xchg
push
and
cmc
xchg
mov
jo
imul
or
pushf
push
cmpsb
inc
add
stc
ret
mov
ljmp
xchg
jg
ja
mov
ficomps
jg
shlb
mov
jle
lfs
pop
cmpsl
fcmovbe
inc
call
push
std
xor
sub
insb
mov
dec
loop
aas
lret
sahf
sarl
pushl
sahf
fwait
cltd
jle
or
mov
sbb
push
and
fwait
sbb
mov
push
cmpsl
data16
call
mov
insb
shlb
in
mov
mov
adc
add
cmp
xor
xchg
push
ljmp
jnp
or
cmpsl
mov
push
push
xchg
ror
and
dec
inc
ljmp
sti
shl
in
popf
bound
push
xchg
xchg
or
push
push
movsb
xor
push
push
jno
call
unpcklps
lahf
push
cmp
cmp
ficomps
insl
pop
inc
setbe
push
sub
lea
leave
or
sub
test
rcl
sbb
mov
std
xor
lahf
sbb
cmc
pop
push
push
add
jg
cmp
cmpsl
aam
pop
and
xchg
inc
dec
jl
mov
hlt
and
or
in
pushf
fdivrs
pop
mov
or
stos
out
mov
xor
sub
lcall
adc
mov
test
loope
flds
and
int
aaa
xor
sub
es
jl
push
push
shrb
or
jmp
xor
fdivrs
addb
test
jo
cmc
es
pop
sub
dec
rclb
push
dec
dec
cmpsl
inc
lret
dec
shlb
pushf
data16
lcall
mov
mov
push
mov
pop
out
mov
adc
js
mov
aaa
pushf
mov
popa
stos
inc
movsl
pop
xchg
jp
out
ret
cmp
stos
xor
fistpll
fidivs
xlat
xlat
xor
jns
jnp
stc
es
or
es
addl
jmp
loop
lahf
sahf
or
leave
mov
sub
in
adc
dec
pop
sbb
lea
rolb
cmp
aad
imul
cmp
sbb
inc
divl
dec
and
pop
jecxz
push
lea
jnp
cmp
xor
and
dec
push
mov
add
jg
adc
jle
mov
fimull
adc
das
push
cmp
ss
es
jnp
andb
and
into
xchg
jns
push
dec
lahf
inc
mov
sub
ja
out
sub
add
div
sub
xor
xor
jne
dec
clc
jmp
pop
adc
ja
xor
addr16
cmp
xchg
stos
push
and
fstps
push
push
mov
loopne
fsubrl
adc
movsl
jecxz
adc
adc
dec
xlat
push
pop
ja
repnz
jnp
fs
pusha
ja
push
mov
jg
hlt
dec
ja
outsb
add
mov
lods
iret
int3
pop
jbe
sarl
mov
in
dec
push
cmp
mov
aas
cmp
lock
jae
push
cmp
sbb
mov
push
jbe
mov
dec
pop
and
push
pop
cmp
push
punpckldq
outsb
bound
hlt
test
mov
jecxz
dec
rcll
std
xchg
xlat
jle
xchg
mov
scas
lods
jae
sub
popf
add
lods
das
into
lret
enter
ja
adcl
test
mov
dec
movsb
jmp
push
push
push
jno
call
int3
jno
xchg
nop
cli
lock
ss
jmp
sbb
xchg
int
and
mov
xchg
jo
jbe,pn
aam
pushf
pop
lock
pop
pop
bound
xor
movsl
and
pop
lahf
or
push
out
cmp
adc
pop
aas
sti
sub
pop
pop
sub
sbb
flds
mov
clc
aam
movsl
mov
xabort
hlt
mov
std
mov
jns
jmp
sbb
cmpb
cmp
mov
aaa
imul
bound
fs
ret
or
daa
out
or
data16
pop
sti
jbe
xor
addr16
or
fwait
das
push
push
sbb
dec
push
js
xchg
xor
jg
out
or
enter
shll
addb
xor
in
mov
and
arpl
dec
into
out
dec
dec
dec
ja
jmp
xor
daa
out
enter
dec
adc
clc
dec
or
inc
adc
jb
pop
hlt
or
popf
push
mov
xor
pushf
pop
outsl
dec
xchg
mov
pop
add
mov
add
and
mov
rcl
gs
inc
add
int3
clc
cmc
xor
aaa
clc
pop
push
push
movb
pop
imul
cld
xchg
loope
xchg
fmul
push
cmp
ror
and
inc
add
aam
div
icebp
inc
sti
imul
xchg
dec
or
mov
pop
ljmp
nop
xchg
mov
inc
push
adc
xchg
mov
jmp
jmp
cmp
lahf
mov
mov
push
add
mov
sahf
je
xchg
stos
mov
add
mov
xchg
fdivl
ret
pop
mov
cmc
xor
push
bswap
loopne
pop
xchg
cmpb
lret
sbb
testb
cwtl
nop
dec
and
jp
outsl
leave
dec
out
cmpsb
gs
mov
ja
lret
sub
jae
jmp
sbb
iret
cmc
push
or
fwait
jae
in
cmpsl
or
iret
mov
ret
addb
divl
dec
pop
fdivl
adc
mov
add
movsl
cmp
cmc
sub
sub
sbb
push
dec
dec
inc
inc
jg
jp
icebp
dec
cmc
xchg
stos
cmpsl
rorl
pop
call
mov
and
clc
push
sub
push
cltd
pop
call
or
test
outsl
cmp
push
in
fstpl
or
cltd
ds
mov
xor
popf
sub
in
call
fcom
inc
or
add
or
and
xchg
imul
in
dec
pop
test
mov
pop
test
mov
lods
mulb
dec
je
into
lret
jnp
dec
add
cli
imul
lods
gs
movsb
data16
mov
push
xor
jecxz
je
icebp
sub
into
lea
stc
mov
push
jb
xchg
dec
push
and
cmp
addr16
fs
mov
aam
inc
repz
push
pop
mov
sbb
out
or
jmp
orl
arpl
xor
popf
or
and
push
dec
dec
inc
int
lods
jp
cmpsl
jno
mov
pushf
adc
and
inc
shr
dec
repnz
in
das
dec
ljmp
push
xchg
adc
dec
mov
int
mov
push
popf
jns
dec
repz
out
scas
loope
fisttpl
xchg
add
test
inc
clc
popa
pop
pop
sarb
test
adc
cmpsb
or
pop
add
ljmp
idiv
stc
data16
in
ja
jmp
sbb
mov
xchg
sti
mov
push
push
outsb
add
sbb
mov
loopne
cmpsb
outsb
fsts
repnz
dec
mov
mov
in
popa
enter
xchg
cwtl
mov
xchg
push
call
frstor
or
cmpb
or
mov
mov
xchg
dec
mov
cwtl
jno
outsl
mov
or
add
mov
add
sub
mov
jmp
adcl
sbb
movsl
addl
out
pop
dec
les
xchg
shll
test
out
cmp
adc
in
bound
adc
xchg
and
insl
addr16
shll
test
mov
or
in
orb
nop
fnstenv
xlat
push
movsl
mov
aam
into
popa
in
cmp
lret
dec
pop
sub
and
sub
dec
dec
dec
dec
sub
not
dec
jno
fidivrs
pop
cli
push
lea
lcall
repnz
test
pop
push
call
test
js
jge
insb
xor
xor
mov
rolb
test
roll
xchg
add
adc
sbb
aas
inc
inc
arpl
xor
outsb
cld
loop
cli
mov
cmp
push
push
mov
fadds
jo
push
or
pop
add
sti
xchg
cld
rcrb
in
fwait
mov
or
popf
cmc
cli
mov
sbb
jp
mov
imul
sub
jno
xchg
xchg
xchg
sti
cmc
icebp
xchg
mov
cli
mov
pop
in
dec
push
arpl
adc
adcb
fsubrl
push
pusha
cmpsl
push
cs
inc
test
and
fmulp
or
iret
cmp
add
cld
cli
cmp
popa
and
xchg
lret
dec
sbb
inc
cmp
inc
movsb
mov
or
mov
adc
cld
mov
in
jmp
fstpl
adc
push
lea
cmp
sbb
jp
jmp
xchg
lock
adc
xor
mov
xor
jecxz
mov
lea
xchg
mov
xchg
fwait
sub
cwtl
dec
rolb
loop
scas
insl
fidivrl
mov
dec
pushf
int3
mov
cmc
jl
in
jae
cli
xchg
sbb
nop
int3
popa
movl
fs
icebp
addr16
mov
cld
rcll
ret
xor
mull
or
jno
adc
scas
lcall
inc
push
fmul
push
push
push
add
jg
cmp
sti
aam
xor
mov
stc
iret
push
hlt
xor
xlat
call
jmp
xchg
xor
sbb
push
gs
fwait
aad
jp
pushf
cltd
xchg
adc
les
sub
add
jae
movsl
sarb
adc
addl
mov
xor
popa
fistl
mov
mov
sub
mov
push
jo
push
and
loopne
push
xchg
int
roll
movsl
fldt
sub
loop
xor
adc
test
mov
bnd
fstps
leave
movb
outsl
mov
push
push
dec
movsl
push
xchg
repz
in
xor
inc
int3
ss
cmp
insl
hlt
pop
sbb
pop
lcall
std
mov
mov
cmpsb
fistpl
mov
mov
push
cltd
mov
mov
xchg
inc
mov
mov
mov
jne
lcall
xchg
add
pop
ljmp
cli
orb
mov
pop
sbb
jl
jns
je
stos
jge
fdivl
out
ljmp
icebp
xchg
nop
test
mov
loopne
idivb
jnp
cmpl
mov
cmpsl
fbld
aad
nop
xchg
cmp
sub
invd
fucomp
dec
dec
aam
or
pop
mov
cmp
or
stos
inc
iret
fiaddl
mov
fiadds
cmpb
fst
aam
xor
ror
sbb
clc
cmc
dec
scas
addr16
idivl
push
adc
inc
aas
cmp
movsl
fwait
pushf
inc
loop
fs
adc
fwait
adc
mov
mov
mov
dec
andl
ret
or
add
cmp
lcall
rcll
add
adc
jle
mov
dec
iret
lret
movb
sub
arpl
cmp
sub
cltd
pop
and
cmp
push
inc
int3
bound
xor
ret
pop
inc
dec
or
cltd
mov
xor
repnz
out
pop
push
fisttpll
adc
xchg
mov
negl
push
mov
pop
xchg
nop
idivb
insl
mov
test
fstp
aam
gs
shll
sub
pop
mov
or
ja
imul
push
pushf
cwtl
rcl
and
inc
add
sub
out
and
sbb
jge
jbe
pop
mov
aas
cmp
mov
jo
mov
fisubs
cwtl
in
leave
mov
lcall
pusha
gs
loop
inc
dec
ds
out
mov
mov
jno
mov
pop
pop
push
stos
insb
or
xchg
or
mov
cmpsb
push
mov
std
testl
dec
rcll
das
inc
cmp
jb
imul
mov
inc
cmp
mov
lcall
ljmp
dec
push
jnp
cmp
xor
push
lds
inc
lea
or
daa
sub
scas
test
pop
inc
call
push
std
scas
jae
cmc
xor
xor
ret
xchg
mov
jmp
insl
test
stc
mov
xchg
add
push
mov
out
in
push
push
dec
dec
hlt
ret
adc
test
xchg
mov
mov
xor
loopne
pop
lret
jge
mov
test
mov
sbb
xchg
mov
mov
inc
add
inc
lods
mov
xor
sub
stc
fistps
cmp
mov
xor
jg
jbe
adc
jnp
xchg
fcmovnu
dec
or
int3
pop
or
div
mov
imulb
add
mov
jnp
movsb
fcmovu
inc
mov
mov
dec
int
pop
clc
xor
mov
push
cmc
rol
adc
or
cmp
sbb
adc
cld
add
add
in
stos
sbb
sub
orl
imul
out
sub
fcomps
xlat
adc
inc
cmpb
xlat
in
jmp
xlat
jl
mov
inc
int
vcvtsi2sdl
and
nop
loopne
out
fstpt
jnp
fs
ret
aas
cmp
jns
lods
insb
cltd
lcall
xchg
rolb
es
fldpi
xor
mov
lret
sub
mov
add
das
push
lods
mov
mov
dec
mov
pop
add
jbe
mov
push
adc
lods
mov
aad
cmp
jae
lret
sbb
test
cmpsl
test
test
enter
outsl
mulb
lcall
hlt
xor
xchg
sub
fistpl
and
jbe
dec
insl
adc
xchg
sbb
sub
js
in
xor
push
xchg
fistl
jl
mov
loope
shrb
adc
cmp
gs
mov
xor
lea
dec
push
flds
or
cmpb
popl
out
int3
adc
ror
int3
push
stos
or
inc
dec
cmp
jp
jmp
sbb
adc
xor
test
test
imul
cmp
fwait
cwtl
filds
ret
or
addr16
xchg
xlat
fsts
dec
push
insb
xor
scas
or
sub
mov
sub
mov
jnp
mov
negl
int3
test
jg
and
divl
and
jge
push
pop
dec
ror
mov
jno
pushf
in
mov
pop
leave
test
dec
es
mov
addr16
loope
mov
jecxz
hlt
inc
aas
cmpsb
lods
mov
xor
imul
into
pop
jecxz
xchg
fiaddl
aaa
jae
outsb
repnz
xchg
cmp
lret
and
lds
cmc
xor
lahf
ret
pop
dec
sar
dec
dec
dec
add
add
jne
repz
cmpsb
xchg
and
dec
xchg
ficoml
inc
enter
jno
push
sbb
fbld
pop
sbb
mov
and
inc
inc
ds
cmp
mov
inc
push
data16
inc
adc
xchg
gs
mov
hlt
mov
outsb
ljmp
aad
lcall
js
or
sub
loop
jecxz
jno
or
mov
cli
pop
sub
in
mov
fcmovbe
aam
cs
push
cld
stc
testb
push
cmp
xchg
push
and
mov
dec
cmp
imul
call
arpl
lret
das
div
inc
loopne
cmp
and
outsb
jne,pn
xchg
push
adc
jg
lea
xchg
out
cmp
adc
xchg
fs
cmp
cmpb
xor
mov
stos
daa
pop
add
jl
sti
or
cmp
ljmp
stc
std
mov
add
call
fcomps
leave
sub
negl
pop
mov
adc
or
leave
xor
lock
aaa
insl
push
cmp
dec
cmpb
mov
mov
arpl
jmp
arpl
inc
add
xor
arpl
sub
mov
jns
loop
pop
test
xchg
add
sub
jno
hlt
out
sub
push
je
sbb
mov
dec
roll
imul
aam
loopne
push
jno
test
fdivs
outsb
sarb
pop
mov
inc
jmp
imul
mov
popa
enter
xchg
cmp
jno
fbld
subb
mov
inc
inc
cmp
into
pusha
daa
ja
xchg
fs
sub
inc
mov
ret
stos
cmp
insl
stos
repnz
sbb
pop
dec
sbb
jmp
pop
xor
insb
scas
ja
jnp
and
adc
pusha
inc
inc
inc
mov
pusha
cmp
fldenv
pusha
int
cwtl
cli
testl
outsl
out
mov
bound
enter
lds
mov
add
mov
fs
orl
repz
jne
lods
fldenv
xlat
dec
xchg
incl
les
incl
and
in
daa
and
pop
sti
iret
cwtl
push
movb
jp
scas
jge
insb
mov
lcall
cmp
mov
out
in
data16
sbb
push
sub
call
in
mov
rcll
repnz
push
mov
rclb
faddl
xchg
aaa
pop
dec
fbld
sti
mov
cltd
push
xor
pop
pop
pop
test
xor
add
jns
fisubl
and
movsl
mov
dec
repz
pop
ret
daa
pop
repnz
call
pop
negl
sarl
mov
lds
lahf
js
orl
and
mov
in
ljmp
and
je
or
or
popf
inc
insl
push
out
lds
pop
cltd
xchg
pop
pop
add
cmp
mov
add
push
xchg
enter
iret
movb
pop
lods
dec
jmp
in
sub
and
xchg
idivb
call
inc
iret
paddq
inc
dec
mov
mov
in
cmpsb
adc
test
pop
adc
xor
add
and
sub
es
adc
xchg
fisttpl
xor
mov
xor
ret
popf
rcl
lret
mov
idivb
adc
scas
fwait
pop
sbb
dec
dec
loopne
cmpb
dec
mov
pusha
shl
nop
xchg
ror
pop
in
das
jbe
in
clc
cmc
repnz
dec
push
adcl
ss
mov
aas
cmp
xor
out
imul
shl
xchg
popl
dec
ret
and
jae
scas
push
add
fimuls
or
add
ss
xchg
xchg
mov
inc
add
xchg
jne
fcoml
adc
adc
inc
adc
fmull
ret
in
sub
jp
test
sbb
fisubrs
dec
inc
inc
dec
sbb
jne
mov
mov
xchg
jns
cmp
mov
xlat
inc
movsb
jmp
push
pop
push
adc
mov
jge
lret
leave
leave
push
mov
shrb
add
xchg
shlb
and
fmull
adc
lea
mov
add
jne
cld
lods
push
add
cmp
mov
dec
inc
cmp
icebp
arpl
stos
jl
sahf
fwait
or
andl
xor
das
out
sahf
and
cltd
and
mov
pushf
cmp
shlb
leave
xor
dec
xchg
xchg
add
mov
js
sub
sub
loope
dec
dec
mov
cmp
xor
hlt
mov
fnstsw
pop
pop
push
rol
jne
jmp
mov
scas
lods
test
dec
adc
jne
add
arpl
sub
sbb
test
js
addl
inc
int
in
inc
push
mov
push
or
into
daa
int
mov
cmp
outsb
jo
push
sbb
test
xchg
mov
or
int3
fcompl
mov
dec
xchg
mov
sbb
cmpsb
jecxz
or
mov
dec
pop
adc
sti
clc
cmc
movsl
push
pushf
mov
mov
or
adc
orb
dec
shrb
test
pop
pop
fwait
cwtl
xchg
dec
xchg
lret
push
hlt
inc
sti
int
clc
das
stc
out
add
ljmp
xor
pop
repz
sbb
pusha
mov
sarb
mov
fsubp
insb
loop
add
dec
or
mov
sti
mov
push
leave
xlat
imul
add
pop
inc
jle
js
std
cmpsl
add
jne
pop
test
add
cli
jne
lods
in
sub
mov
lret
leave
or
jnp
sbbl
movb
push
add
or
mov
sub
xor
loopne
js
jb
ja
pop
xor
sub
sub
push
xchg
dec
pop
xchg
mov
mov
xchg
push
and
pop
pushf
pop
lret
clc
xchg
jnp
stc
or
cmp
mov
loopne
shrb
sub
dec
dec
mov
test
hlt
dec
jp
outsb
mov
cld
popf
popf
fwait
cwtl
push
ror
int3
leave
xor
push
ljmp
jp
inc
pushf
popf
mov
cmp
mov
enter
or
popa
xchg
mov
push
mov
test
jecxz
flds
aas
or
cmp
xor
test
xor
inc
push
push
or
jmp
lds
repz
lods
fnstcw
xchg
popf
fimull
mov
sbb
in
div
addr16
xchg
cltd
sub
cmp
inc
movsb
jg
fildl
add
fwait
inc
dec
lcall
xor
pop
les
jecxz
nop
xchg
out
adc
arpl
cmpb
adc
and
sub
push
out
dec
int
mov
and
mov
sub
or
adc
inc
in
mov
sub
idivl
ljmp
lahf
dec
es
inc
andl
call
popf
fwait
cwtl
add
and
jae
sarb
call
inc
pop
adc
cmovne
fisubrl
imul
xchg
rclb
mov
fisubrs
mov
jmp
adc
pop
jmp
adc
addb
push
out
xor
stos
out
cmp
xlat
sub
std
add
jl
shrl
lods
fnstcw
xchg
popf
ficoml
inc
inc
fmul
add
sub
into
or
in
sub
xchg
cltd
sub
aam
inc
imul
out
push
mov
enter
sub
mov
arpl
call
popfw
jle
mov
or
adc
and
loope
loop
or
nop
aas
sbb
in
mov
mov
shlb
fistps
loopne
cmp
roll
cld
stc
idivb
pop
sub
push
xchg
push
mov
cmpb
ja
outsb
cmc
lahf
movsl
int3
loop
aad
dec
xchg
int
repz
jmp
and
xor
add
in
lcall
pop
jnp
dec
lret
jo
push
out
insb
pop
test
adc
repz
lock
and
ss
adc
adc
cmc
jl
pop
push
cmp
lods
xor
es
ret
push
cmp
lods
stos
adc
mov
cmp
jle
aad
add
sub
jle
out
adc
test
shlb
push
dec
dec
mov
pop
call
sub
popf
lcall
and
mov
mov
insl
setbe
fistps
adc
add
xor
push
pop
out
push
jge
icebp
movb
mov
scas
xchg
movsb
pop
loopne
int
decb
pop
gs
pop
pop
in
out
pop
mov
pop
pop
push
cmpl
in
jl
xchg
sti
or
sahf
push
mov
inc
loopne
sarb
les
and
inc
sub
or
ds
mov
jo
cmp
adc
outsb
add
addr16
mov
call
in
lods
pop
and
adc
push
cmp
insb
sub
mov
push
fmuls
push
push
push
inc
lds
sub
lods
push
movsb
lret
adc
movsb
enter
sub
mov
in
sub
dec
and
rorb
aas
leave
push
inc
je
loope
ja
fsubp
out
push
call
cmp
in
push
repnz
in
pop
popa
mov
fmuls
push
repz
popf
scas
lock
mov
xlat
fdivrl
pop
pop
push
ljmp
cwtl
outsb
mov
sbb
imul
or
dec
push
mov
ror
aaa
aaa
faddl
sti
clc
stos
insl
imull
and
lods
icebp
lds
ss
lock
sbb
pushf
add
leave
sub
jo
shl
repnz
pop
push
out
arpl
adc
mov
inc
jl
pusha
out
addr16
fwait
adcb
lret
mov
inc
and
and
push
pop
in
xchg
fmuls
inc
add
and
and
lret
mov
jnp
jno
and
test
scas
loop
into
lret
das
xor
div
pusha
push
sub
push
nop
inc
js
and
hlt
jl
aad
adc
mov
xchg
sub
or
popa
xor
loop
out
inc
cwtl
fidivrl
pop
or
ffreep
addl
scas
jno
in
lcall
and
inc
jnp
mov
push
aas
pop
and
push
push
mov
aam
aaa
cmp
outsb
mov
sti
jne
sbb
iret
in
and
test
test
int3
sub
inc
orl
jns
jae
and
lret
aam
sub
int
sub
js
cli
cmc
repnz
ret
dec
jl
and
or
aas
mov
ret
jecxz
jge
xchg
cld
push
ret
or
mov
fiadds
daa
out
jmp
pop
sub
or
xchg
gs
mov
mov
pop
aam
dec
lret
push
add
lods
in
js
jb
arpl
add
inc
enter
bound
mov
mov
iret
push
mov
iret
fldcw
push
nop
sbb
xchg
nop
dec
mov
mov
and
add
outsl
data16
xchg
or
inc
xchg
subb
and
pop
mov
out
inc
adcl
jle
test
jecxz
in
out
cmp
inc
mov
sub
sti
jnp
pushf
popa
sub
test
cmp
rorl
andb
pop
sbb
pushf
cltd
xchg
add
daa
and
jb
repnz
in
lahf
push
outsb
adc
je
pop
push
repnz
mov
xchg
int
lret
sbb
xchg
arpl
or
das
sbb
dec
and
pop
pop
xchg
std
pop
push
pop
fcomp
icebp
imul
rcrl
lcall
mov
js
outsb
mov
push
sbb
int3
repz
cmp
ljmp
jle
push
dec
loop
and
adc
mov
mov
mov
xchg
nop
dec
xchg
jne
cmp
fnsave
mov
aaa
xchg
je
sbb
out
inc
pop
test
sbbl
mov
ret
adc
in
mov
sub
cmpsb
iret
rcll
add
and
in
push
pop
sbb
add
mov
and
jbe
fisubl
and
add
jp
daa
lret
ret
js
mov
sub
mov
adc
adc
test
je
imul
pusha
adc
cmp
test
mov
dec
fs
adc
adc
pusha
outsb
inc
add
pusha
sahf
mov
enter
int
mov
cltd
jp
js
mov
lods
out
lods
pushf
fcmovbe
push
push
ror
push
pop
das
jno
testb
test
pushf
bound
xchg
push
call
dec
inc
stos
repz
inc
pushf
pusha
mov
arpl
mov
and
mov
lock
es
sbb
or
ret
scas
je
mov
scas
gs
xchg
inc
push
fisttpl
mov
pushf
inc
bound
rcrl
sarl
std
cld
and
popa
lret
mov
mov
push
dec
jbe
stos
mov
movsb
jmp
stos
test
js
cwtl
cwtl
xchg
inc
or
jns
mov
out
jmp
mov
adcb
lea
aaa
xchg
sbb
mov
inc
fs
or
and
arpl
add
and
adcl
sbb
aas
inc
test
cmp
mov
and
xchg
sub
mov
rol
inc
inc
test
in
aas
fcos
out
mov
int
or
js
push
int
xor
pop
add
aad
inc
enter
inc
stos
shlb
and
in
mov
int
hlt
enter
outsb
repz
pop
les
jecxz
lcall
sahf
inc
jb
xchg
cmpsl
xlat
pushf
cs
or
mov
jge
xor
es
loop
xor
aad
rolb
ljmp
or
mov
rcll
dec
mov
lods
out
sahf
movsb
insl
call
popf
cltd
xchg
sub
adc
xor
shll
test
pushf
pop
out
or
or
aas
cmp
int
insl
insb
imul
sqrtps
mov
mov
decb
dec
push
adc
inc
add
das
mov
xchg
rcll
js
in
roll
and
scas
mov
rorl
leave
idivb
cli
stc
mulb
insl
sub
and
sbb
enter
fdivrs
outsl
xchg
mov
loopne
leave
leave
or
add
mov
sub
pop
sbb
pop
movsl
addl
cmp
loopew
push
push
xchg
and
inc
addl
push
lods
xor
adc
cmp
mov
inc
je
lret
gs
mov
in
movsb
mov
movsb
jb
lods
insl
sbb
push
xchg
add
daa
js
push
in
sub
in
pop
push
out
andb
imull
aas
jbe
pop
xchg
jmp
lret
add
pop
push
test
xchg
insb
mov
sub
push
sbb
or
std
psrad
xchg
xchg
aaa
adc
push
int
jle
mov
in
cli
js
rcrl
punpcklwd
outsl
jle
add
aam
scas
repz
movsl
out
adc
push
xchg
push
inc
outsb
mov
mov
lahf
popf
and
xchg
mov
sub
sub
mov
mov
jp
cmpsb
mov
xchg
imul
fwait
pop
or
and
fdivr
les
mov
adc
rcr
fs
sti
mov
inc
add
aad
clc
cmc
xor
jle
fwait
pop
adcl
or
jp
out
aad
stos
shll
xchg
sarl
jae
out
daa
imul
pusha
adc
xor
jp
pusha
pop
jl
jmp
out
jae
push
arpl
lcall
inc
jle
add
mov
xor
push
adc
xchg
roll
add
insl
lods
jb
popa
das
mov
cmp
rorl
jl
add
jmp
cmpsb
cmpxchg
popf
sub
and
jo
dec
gs
repz
sbb
stos
addb
jnp
pushf
ljmp
call
xchg
fisttpll
sub
js
es
leave
jp
jmp
fstps
pop
mov
jb
cwtl
jbe
or
push
push
mov
pop
lods
mov
sbb
loopne
pop
pop
fstp
xlat
inc
sar
push
insb
inc
add
inc
fidivrl
out
test
rcl
xchg
push
push
dec
mov
mov
cmpsl
daa
sub
adc
int
ss
cmpl
idivl
push
adc
sub
pop
movsl
call
addr16
lret
push
nop
mov
mov
je
in
lcall
or
pop
fwait
cmp
xor
repnz
sarb
test
cmp
lods
sub
mov
push
sbb
iret
pop
jmp
lretw
lret
daa
mov
stc
push
dec
dec
movb
xchg
test
and
xchg
shrl
test
mov
int3
aas
or
nop
xchg
negl
adc
or
add
xchg
push
push
lret
xchg
popf
loopne
adc
adc
test
sbb
mov
es
dec
push
xchg
aam
or
jbe
sti
push
sub
lcall
or
jge
add
and
or
lret
mov
popa
data16
jmp
jl
adc
dec
xchg
hlt
sbb
or
xor
xchg
xchg
pusha
fistpl
mov
bnd
mov
sub
adc
dec
xor
in
or
or
or
lea
xchg
movsl
sti
dec
and
pop
pop
test
mov
pop
insl
inc
jle
fisttps
mov
movsb
lret
xor
adc
inc
mov
leave
pop
bnd
leave
pop
arpl
enter
sahf
fimull
rolb
cld
jnp
js
movsb
jb
mov
movsb
lcall
aas
icebp
mov
fidivrl
and
and
mov
or
jb
mov
cmp
lds
fsubl
sbb
lret
add
lahf
lods
cmpsb
jecxz
daa
mov
xchg
or
add
divl
xor
repnz
ficoml
inc
int3
add
inc
mov
add
ja
jno
mov
xor
shlb
jb
jmp
icebp
ret
call
sbb
cltd
test
sbb
cmp
data16
fadd
imul
mov
cmp
popa
fmuls
or
add
fidivrs
frstor
mov
das
sti
mov
std
push
mov
pop
shrb
mov
cld
stc
cli
push
jne
pushf
int
sub
pop
push
shll
mov
sub
xor
flds
popf
adc
add
movsl
addr16
rcll
sbb
mov
and
cmp
adc
inc
sub
xor
mov
pop
cltd
pop
fldl
or
push
inc
xchg
pop
ja
mov
jb
cmpsb
loop
in
adc
sar
fisubrs
add
xor
pop
into
lahf
movsb
xchg
and
push
mov
iret
add
xor
mov
xor
loop
lods
sbb
mov
mov
pop
sahf
arpl
and
sbb
cmovnp
mov
cmp
repnz
sbb
pop
lret
repnz
mov
dec
mov
pop
adc
call
fadds
jecxz
fnsave
mov
add
dec
xor
sub
inc
mov
iret
jg
cmp
lock
divb
fdivrs
add
adc
daa
jmp
and
cmpsl
push
rolb
rcrb
test
mov
clc
repnz
cmp
in
daa
out
fidivrl
rcl
aas
xchg
mov
mov
dec
lret
scas
push
mov
mov
dec
imul
mov
test
roll
add
enter
stc
mov
pop
push
fwait
je
mov
inc
jae
fidivrs
jae
nop
sahf
or
push
xchg
ror
and
push
mov
add
out
in
dec
dec
dec
jne
sbb
jne
dec
les
jbe
data16
lea
pushw
fisttpl
cwtl
xchg
dec
or
xchg
xlat
mov
cmp
sbb
mov
jle
cs
xor
fisubs
mov
push
dec
jne
ljmp
xchg
lods
test
and
cld
inc
jle
cld
inc
pop
daa
jl
sub
scas
dec
push
cmp
addl
pop
in
jl
jmp
mov
mov
inc
push
enter
and
out
stos
rcrl
mov
xchg
cmp
aaa
dec
fs
dec
bound
rcrl
nop
lea
mov
jmp
mov
std
jge
xchg
pop
cld
mov
xor
pop
daa
scas
push
push
movsl
dec
sub
sbb
imul
pusha
dec
test
sub
dec
adc
sahf
pop
cmpl
and
sbb
push
dec
je
inc
outsl
pop
cmp
pop
adc
fs
maxps
mov
mov
cmp
adc
into
mov
jno
cmp
or
push
xor
add
sub
ret
shlb
inc
in
repz
testl
add
jnp
pop
add
cli
dec
dec
movsb
imul
mov
adc
inc
idivb
mov
mov
push
cwtl
hlt
adc
adc
cmc
push
xchg
pop
jno
sbb
push
inc
inc
adc
push
xor
ljmp
shr
xchg
nop
repz
mov
mov
test
ficoml
clc
mov
push
std
pop
ss
ss
pop
sub
aad
push
push
dec
mov
jl
add
aam
push
adc
repz
xchg
rcl
pop
aad
jbe
push
sti
clc
cmc
and
mov
out
and
ret
adc
push
xor
mov
fs
call
mov
cmpsl
test
dec
adc
fnstsw
popa
add
pop
add
push
cmp
pop
aad
imul
in
jmp
pop
cmpl
lret
in
ficoml
sub
sub
icebp
out
in
add
and
rolb
dec
scas
clc
dec
rcll
insb
imul
xor
push
cmp
enter
sub
insb
mov
add
inc
aas
cmpsb
cmp
xchg
stos
push
out
xchg
pop
pop
pop
out
or
popaw
or
mov
ret
movsl
or
fldcw
aam
or
or
pop
cmp
lods
std
scas
xor
sbbb
mov
dec
mov
jp
lret
pop
sbb
cmpsl
aam
sub
dec
mov
adc
dec
frstor
outsl
and
insl
lret
dec
mov
ja
or
cmp
ss
out
push
loopne
mov
mov
popf
add
mov
lds
in
inc
inc
inc
std
decl
push
mov
mov
jp
sub
xchg
push
add
data16
subb
mov
xor
mov
sarl
jle
cmp
add
push
mov
out
jmp
sbb
xor
arpl
jb
insb
repz
rclb
pop
leave
xchg
xchg
xchg
std
lret
push
clc
ret
shr
xor
data16
sbb
imul
mov
cmpsl
addr16
dec
xor
xrelease
push
and
mov
adc
fisubrs
cmp
cmpsb
fs
and
sub
test
pop
aas
shll
mov
ja
or
adc
sub
rorb
or
and
and
jmp
dec
mov
je
or
in
fstpl
or
lds
add
mov
aad
dec
push
arpl
ljmp
and
cwtl
in
int
popf
pop
sbb
push
dec
std
add
xchg
cmpsb
mov
dec
add
sub
std
test
hlt
sbb
dec
fs
es
shll
dec
dec
dec
movb
inc
jl
outsb
cld
sub
jecxz
mov
xchg
lret
scas
cmp
lret
push
out
js
pop
pop
inc
jmp
imul
fbld
ljmp
add
xchg
jae
stos
punpcklbw
push
or
mov
jne
mov
xchg
scas
dec
dec
inc
subl
mov
mov
sub
pushf
ret
sbb
cmp
mov
jmp
xor
mov
mov
jbe
lret
imul
xchg
push
dec
scas
iret
adc
fsubl
sub
and
jmp
in
lret
nop
inc
adc
jno
cmp
fistps
dec
int3
rol
push
dec
mov
jns
mov
lret
sbb
es
jae
add
sub
sub
out
push
dec
leave
add
lahf
ret
loope
fsubrl
mov
inc
dec
cli
enter
mov
in
shl
loope
xchg
roll
test
outsl
adc
sahf
xor
xchg
imul
rclb
fcoms
mov
fldt
lods
push
out
add
pop
xor
gs
lods
push
sti
in
cs
xchg
pop
pop
pop
lahf
pop
stos
dec
xchg
inc
cmpb
in
mov
stos
cmpsl
sbb
ret
xchg
sarl
mov
fwait
mov
mov
pusha
in
leave
dec
icebp
cmp
adc
aas
cmp
jae
pop
adc
mov
xchg
xchg
jmp
out
in
mov
lods
sbb
iret
jmp
adc
or
xchg
sti
xchg
cld
cmp
pushf
xor
loopne
sub
stos
dec
mov
loope
jne
insb
and
scas
aam
sbb
xlat
aam
xchg
dec
rol
add
in
je
out
lock
aaa
out
pushf
mov
dec
cmp
cmp
outsb
push
jecxz
data16
mov
xor
out
mov
sbb
out
mov
pop
pop
inc
adc
aas
or
cmp
popf
fucom
pop
push
add
test
in
xchg
cli
ja
scas
pop
and
cmpsl
loopne
or
add
or
xor
outsb
adc
cmc
movsl
stos
and
daa
and
lea
nop
sbb
inc
jne
cmpb
out
pushf
jo
test
jns
pop
cwtl
xchg
dec
mov
inc
xchg
cmp
adc
mov
pop
je
inc
sbb
inc
push
mov
xchg
xchg
out
xor
mov
sub
push
and
mov
add
sub
pop
push
push
in
int
sub
scas
sub
push
sbb
aad
iret
mulb
add
jg
mov
pop
jae
adc
jno
inc
mov
outsb
test
sahf
lcall
mov
repz
addr16
pop
push
adc
xchg
pop
mov
mov
push
mov
lea
xor
mov
lods
adc
aam
loop
jp
sub
cld
stc
or
rcr
inc
pop
push
push
movsb
inc
mov
mov
or
shll
pusha
xchg
shlb
and
daa
daa
int3
loopne
jmp
mov
mov
mov
sub
outsb
into
loopne
sbb
xchg
rclb
ret
mov
ljmp
inc
inc
addb
lods
mov
cmp
sub
jmp
jns,pn
dec
mov
lods
icebp
mov
in
ljmp
fcmovnu
add
and
xor
jne
test
div
pop
pop
popf
mov
mov
cmp
mov
sub
outsb
imul
lahf
ficompl
aad
mov
in
shl
push
push
inc
push
pop
inc
adc
jae
addl
aad
imul
in
movsb
add
xchg
pop
push
loop
xor
and
xchg
mov
lods
shrl
xlat
and
dec
pop
mov
cmp
daa
js
jle
pop
sbb
dec
mov
sbb
mov
ja
test
xchg
ja
fistps
or
jecxz
pop
xor
jl
sahf
arpl
call
mov
mov
bound
ss
cmpsl
sarw
sub
lods
xchg
shr
mov
ljmp
inc
ljmp
xor
aaa
popa
mov
test
cmp
pop
push
sub
sbb
fbld
repz
or
mov
or
cmpsb
jl
lds
sahf
lock
jmp
enter
test
nop
dec
mov
adc
mov
jno
add
cltd
out
sbb
or
icebp
pushf
and
daa
arpl
xchg
xchg
jp
pop
xor
insl
addb
lods
jno
popf
popf
imul
fwait
pop
rcll
adc
adc
out
pop
enter
fldcw
test
jne
add
scas
icebp
sub
es
or
dec
dec
mov
jns
je
test
fstps
push
bound
enter
pop
icebp
out
jmp
dec
out
imul
je
mov
popf
loop
cmp
ljmp
xchg
or
lcall
test
pop
dec
pop
out
mov
test
out
aaa
pop
xor
push
pcmpeqd
into
roll
std
mov
push
test
aaa
aas
nop
arpl
mov
mov
mov
xor
sub
in
cmp
paddq
mov
mov
test
mov
and
push
inc
inc
sarl
imul
imulb
pushf
cltd
adc
xchg
mov
in
shr
loopne
sbb
dec
ja
or
dec
jmp
cwtl
fistpll
jecxz
push
pop
pop
push
pop
lret
out
sbb
in
xchg
je
lods
test
pop
ss
int
pop
add
push
sub
pop
insb
jmp
pop
aam
inc
test
adcl
jge
xor
shl
movsb
sti
adc
sbb
lret
fcomps
sar
cmc
insb
scas
push
lahf
pusha
out
adc
mov
xchg
cmp
imul
mov
mov
enter
in
out
adc
imul
xchg
and
xchg
cwtl
cmp
rorl
test
test
adc
jl
or
in
lods
push
mov
fistl
into
lret
pop
cmc
jns
js
xor
mov
and
jle
push
int3
push
dec
shll
ds
mov
xchg
nop
mov
xchg
mov
lock
fs
loope
dec
outsl
int3
mov
or
push
outsl
inc
cmp
call
into
push
shl
xchg
nop
lea
mov
lods
test
push
loop
ror
cmp
faddl
sti
clc
mov
inc
mov
fnstcw
push
int3
dec
jl
pop
test
sti
cmpsb
add
mov
ror
sbb
popf
mov
mov
loop
jae
cli
add
dec
jb
cmpsb
clc
cld
aaa
cmp
lea
jne
and
movsl
jae
icebp
mov
sbb
pop
test
cli
fs
cmp
jb
das
mov
cmp
rorl
test
jae
mov
mov
test
mov
add
dec
sub
movb
inc
and
sub
sub
push
cmp
cmpsl
cmpsl
dec
pusha
cmp
int3
rclb
pop
stc
xchg
xchg
xchg
std
lret
adc
repnz
hlt
ljmp
decl
mov
pop
sub
test
sbb
jns
xorl
or
sbb
push
popl
test
add
push
and
push
pop
test
add
ret
aad
cmpb
out
add
adc
adc
xor
sti
jbe
popa
scas
js
and
jb
js
fwait
imul
jo
cltd
inc
pop
fwait
cwtl
les
scas
rolb
mov
in
xor
push
fcom
adc
inc
pop
mov
sub
xchg
push
adc
mov
jbe
sub
stos
xlat
pop
adc
iret
cld
inc
add
std
cli
xor
insl
out
pushf
pop
and
shll
dec
inc
inc
stos
repnz
incl
outsb
imul
add
lret
lret
push
mov
repnz
ljmp
adc
add
fldcw
cs
imul
cmpsl
lea
mov
es
scas
jecxz
frstor
call
jle
and
pop
sub
test
and
rolb
pop
xchg
or
in
sub
ja
mov
add
jae
sub
cmc
repnz
sti
movsl
arpl
dec
hlt
lock
adc
test
mov
scas
dec
cmp
pushf
lahf
jne
pop
lret
and
in
std
mov
scas
jmp
adc
stos
movsb
fcom
lret
sbb
cmp
sub
fnstsw
pop
push
je
dec
mov
js
sub
mov
shlb
push
std
cli
idivl
cmc
push
cmpsb
and
push
shl
movsl
push
push
dec
mov
mov
leave
outsb
push
gs
xchg
std
std
mov
cmp
and
aas
pop
dec
xchg
fcompl
aam
and
push
inc
movsb
aaa
rorl
mov
push
in
push
xchg
nop
inc
add
mov
lods
test
inc
aad
cmp
inc
test
std
inc
call
popa
xor
and
push
adc
dec
in
xchg
jmp
fsubl
dec
or
ds
jb
cld
out
in
push
push
cli
hlt
mov
push
mov
xor
cmp
jae
inc
push
sti
arpl
adc
jecxz
addb
in
xchg
jp
mov
addr16
ss
push
adc
bound
cli
pop
jg
cwtl
adcl
mov
or
jp
jg
sub
popf
in
lret
sub
rcl
sti
pusha
mov
andl
and
adc
mov
scas
std
add
jno
mov
mov
les
out
mov
xor
loop
out
inc
cwtl
fidivrl
add
add
je
dec
cmp
addr16
loopne
out
inc
les
mov
xchg
jne
loop
and
bound
stc
orb
mov
dec
sub
mov
adcb
jbe
xlat
sub
out
mov
pushf
jecxz
cmp
int3
lret
push
cli
clc
aas
sbb
in
and
outsb
stos
int
dec
dec
xor
jae
sub
fwait
or
mov
push
lock
ret
shr
mov
lods
ljmp
into
lea
or
add
std
cmp
shr
imul
pop
mov
add
cmpl
sub
cmpsb
mov
cmp
iret
int3
xor
mulb
and
aad
stos
xchg
in
into
inc
inc
ds
imulb
adc
xchg
add
and
sub
cli
in
ficoms
daa
or
inc
xchg
mov
inc
repz
fs
rcl
je
xchg
nop
mov
jle
out
cmp
sub
aam
addb
adc
loop
and
mov
jo
push
adc
out
xor
fwait
and
lahf
pushf
dec
adc
inc
hlt
mov
and
dec
scas
sub
add
xchg
shll
lds
inc
ds
jae
insl
fdiv
bound
sbb
bound
adc
xchg
inc
dec
mov
pop
push
push
push
inc
loopne
adc
jbe
push
cmp
fwait
jbe
xchg
fbld
push
mov
pop
scas
inc
js
mov
movsb
es
mov
aam
dec
xchg
js
adc
cli
imull
push
cmpsb
es
pusha
and
dec
inc
inc
lret
gs
repnz
insb
fdivrs
xor
adc
mov
out
ljmp
pop
xor
or
cmp
addr16
loope
leave
or
addl
xchg
cmpb
dec
push
ds
into
pusha
es
mov
je
nop
popf
pop
pop
dec
push
push
dec
mov
jl
add
and
mov
dec
rorb
idivl
sar
cmc
jl
stos
add
and
push
mov
test
test
add
pop
mov
adc
mov
insb
or
es
filds
cmp
dec
or
pop
aad
std
popa
mov
cwtl
mov
sbb
pop
cs
incl
push
mov
sbb
int3
in
and
rcrb
das
aam
enter
movsl
out
lods
sbbb
dec
add
cmp
pop
jmp
data16
test
mov
cmp
out
pop
in
jmp
sbb
adc
or
aas
cmp
mov
xchg
mov
pop
pop
push
push
xchg
lea
cmpl
adc
jecxz
inc
inc
lods
outsb
aam
or
adc
movsl
stos
dec
sub
and
aaa
push
scas
inc
push
mov
std
rclw
jo
and
or
lret
sarl
jmp
mov
cmp
inc
aas
cmp
lock
push
sbb
icebp
fwait
cwtl
xchg
sar
jecxz
addb
xchg
std
mov
aaa
in
fistps
loope
add
popa
stc
je
insb
sub
pop
and
push
dec
mov
js
sub
movsb
imul
mov
stc
negb
lods
push
sbb
pop
xor
je
jle
ja
jb
sti
imul
xchg
nop
hlt
inc
xchg
mov
dec
mov
bnd
out
loope
repnz
adc
jb
lds
mov
loop
scas
bound
rcr
xchg
nop
filds
mov
in
jecxz
fwait
mov
mov
or
mov
xor
fwait
pop
into
popl
or
inc
andb
xor
out
xchg
rcl
and
addl
aad
mov
icebp
push
data16
adc
push
mov
dec
inc
inc
outsl
mov
jae
outsl
insl
xor
fwait
pop
in
clc
int3
mov
inc
mov
mov
cmc
test
in
stos
es
adc
jg
push
or
arpl
dec
enter
out
push
pop
push
push
push
clc
stc
sub
mov
out
sbb
fadds
loop
leave
pop
subb
and
out
sub
mov
lea
out
dec
inc
ds
mov
call
mov
xchg
xchg
std
cmp
mov
out
ljmp
inc
jmp
outsl
mov
push
cmp
ret
pop
xchg
cmp
push
pop
pop
adc
add
mov
loope
es
or
sahf
sbb
add
repz
jae
movsb
lahf
aad
and
mov
arpl
dec
nop
add
mov
movsb
in
scas
test
cmp
and
ret
rclb
fucomip
out
sub
cli
clc
and
ja
mov
inc
mov
and
xchg
mov
mov
test
in
test
out
pushf
push
add
cli
pop
subb
xlat
insl
push
push
push
add
roll
std
mov
lods
lcall
dec
pop
iret
int3
leave
push
or
pop
and
icebp
and
jmp
dec
jl
shrl
jnp,pt
stc
outsl
insb
imul
xchg
dec
mov
mov
out
data16
out
loope
adc
lahf
dec
or
aaa
xor
xor
and
pop
pop
shr
dec
lret
pop
push
jge
fisubrs
jno
fsubl
cmpsb
movsl
loopne
dec
dec
pop
ror
or
xchg
loope
addr16
and
pushf
jns
jg
mov
pop
cmp
stos
test
stc
ds
xchg
stos
fs
leave
sub
jge
call
jmp
sbb
adc
or
ret
rolb
in
call
out
jge
push
xor
sbb
stc
mov
jmp
iret
int
sbb
inc
push
lret
fisubrl
cmp
cmpsl
lods
inc
sub
es
rcl
jne
push
push
dec
push
xchg
rolb
jo
lods
fnstcw
cmp
ficoml
and
sub
sbb
cld
stc
idivl
and
adc
inc
stos
mov
mov
imul
xlat
popf
lcall
les
in
xchg
cmp
out
addr16
sbb
adc
ficoml
push
inc
inc
scas
mov
cmp
cs
lahf
pop
lret
jo
das
mov
mov
stos
test
pop
dec
loop
xlat
mov
add
cld
stos
mov
xor
rcl
inc
pop
push
dec
mov
jl
mov
daa
sub
lods
movsl
mov
dec
jae
lret
cmp
sti
clc
cmc
and
add
and
je
aad
adc
jno
inc
ds
lock
push
xchg
shlb
add
cmp
data16
sbb
mov
inc
inc
cmp
inc
add
cmp
sub
insb
sub
fmul
gs
pop
lods
or
cmc
cli
sub
out
scas
clc
shr
inc
inc
mov
ror
leave
pop
or
cs
std
and
adc
test
arpl
repnz
insb
fdivr
push
pop
ficompl
fmulp
adc
xor
pop
fs
loope
dec
out
iret
scas
push
or
cmp
xor
test
ficompl
cmpsb
stc
lret
mov
cmp
mov
and
adc
dec
push
add
mov
add
gs
pop
and
mov
es
inc
andb
push
fldenv
cltd
xchg
rcrl
repnz
sarl
jmp
mov
shll
inc
sbbb
data16
aaa
int3
mov
mov
inc
and
loop
or
pusha
sub
bound
cli
pop
sbbb
in
bound
xchg
fwait
xchg
test
enter
push
shll
mov
jl
in
mov
addr16
lret
das
or
cld
icebp
out
mov
sbb
dec
mov
mov
scas
outsb
jecxz
mov
rcll
les
jle
daa
and
out
sbb
scas
xchg
rolb
inc
aas
cmp
jno
xor
pop
pop
pop
in
lret
mov
pop
push
sbb
mov
sub
lods
test
shrl
test
sub
cmpsl
push
jo
scas
gs
pop
scas
mov
pusha
sbb
jl
mov
xlat
stc
iret
sbb
int
sub
pop
ret
shlb
pop
jge
pop
fwait
mov
xchg
inc
and
imul
mov
scas
or
lds
out
das
hlt
mov
enter
in
sbb
nop
cmp
aas
jg
cmp
push
jg
push
icebp
es
sbb
fnsave
enter
es
lods
stos
sbb
jmp
xchg
adc
ror
enter
inc
adc
fs
sub
jl
fstpl
test
and
dec
inc
idivb
mov
divb
pushf
cltd
adc
dec
mov
jmp
mov
jne
fistps
pop
fs
loope
dec
sbb
out
roll
inc
mov
mov
cmp
les
es
or
addb
and
out
loopne
dec
sbb
bound
pop
jo
or
hlt
xor
sub
push
mov
adc
or
jno
stos
xlat
cld
jmp
stos
pushf
xchg
lret
mov
clc
cmc
dec
ds
es
idiv
jecxz
adc
jp
ret
aas
cmp
jae
inc
gs
data16
cmc
mov
rclb
ret
sarb
divb
pop
fiadds
pushf
adc
std
arpl
jg
push
cld
add
rcll
orl
out
add
cmpsb
sbb
lds
iret
daa
lret
xorb
std
cli
lretw
stos
lea
daa
xchg
pushf
push
sbb
push
stos
aas
or
emms
je
sub
popf
lcall
add
fisttps
pop
fs
loope
jb
rorl
jnp
js
aas
cmp
repnz
sahf
push
cli
cs
popl
dec
in
add
mov
scas
sbb
pop
jnp
faddl
push
in
stc
fbld
sti
mov
push
xor
aad
sub
int3
orb
loop
test
stos
push
fistpll
push
ror
lret
fsubr
xchg
div
sub
movsl
sbb
xchg
dec
adc
push
dec
xchg
insb
jno
sbb
xor
push
fcmovnbe
fwait
cwtl
xchg
rorl
mov
in
movsb
jge
ficomps
and
pop
les
cld
cmp
cmpsl
lods
sahf
cmp
mov
push
sub
out
mov
jns
fcmovnu
pop
and
mov
sahf
or
jnp
xor
std
cli
dec
xlat
pop
imul
cld
lods
mov
sbb
push
outsl
ret
les
cmp
jb
insb
popa
loopne
rcrb
icebp
cltd
sub
push
data16
push
add
pop
call
inc
inc
cmp
imul
xlat
sbb
xchg
nop
or
cli
mov
mov
lods
adc
dec
push
add
mov
add
gs
pop
and
mov
es
inc
andb
sub
cmpsl
movsb
or
lahf
pop
adc
cmpsl
bound
ret
daa
js
push
in
and
in
ja
xchg
push
adc
mov
mov
jns
imul
xchg
imul
cmp
das
xor
ljmp
aad
fs
push
push
mov
bound
sub
push
sub
cld
loop,pt
xor
sti
mov
sbb
lods
adc
enter
arpl
jb
fs
sub
std
ficomps
sub
lods
mov
jl
outsb
imul
sbbb
outsb
mov
aas
andl
iret
mov
lods
push
or
add
mov
test
sbb
pushf
pop
jo
das
mov
add
scas
ss
sbb
ror
xor
jbe
xor
xchg
and
adc
push
dec
mov
add
lods
jae
add
fistps
iret
xor
dec
push
sti
cmp
out
in
jmp
fsts
lods
or
cmp
ss
cmc
addr16
pop
in
insb
fidivrl
mov
fists
push
inc
push
movsb
pop
fidivs
jae
push
sub
ret
aas
subl
mov
sbb
test
in
stc
jb
lods
sbb
push
xchg
cmp
leave
xchg
or
mov
test
cmpsl
fcoms
sahf
xlat
add
outsb
imul
out
xchg
pop
fistpl
jecxz
sbb
out
inc
push
cmpsb
and
hlt
imul
adc
add
aas
adc
aam
xor
pop
and
loop
lea
jp
mov
ret
movsl
mov
cmp
in
lret
fldz
cltd
clc
cmc
pop
stos
in
nop
mov
and
cmpsl
push
push
dec
loope
mov
jmp
jle
mov
into
pop
pop
mov
push
jbe
out
sub
adc
inc
mov
xchg
dec
divb
fs
repnz
push
iret
mov
arpl
mov
cmp
jmp
out
xor
imul
lret
cwtl
jmp
jecxz
sub
mov
push
call
lcall
sahf
xor
sub
mov
cmp
int
repnz
sub
mov
in
dec
dec
lods
mov
jne
mov
cmc
cwtl
icebp
sub
lea
addr16
mov
lock
inc
xchg
movsb
push
adc
adc
jb
lds
mov
xchg
ret
lahf
pop
xor
xchg
repz
ljmp
pop
add
and
mov
jne
shlb
push
test
push
notb
or
jae
add
jbe
aaa
xchg
shl
inc
mov
add
in
jle
jp
fstl
imul
sbb
cmp
sahf
lret
cmpsl
cmp
cld
lcall
lods
ret
dec
or
aas
and
sbb
jo
rorl
loopne
push
add
arpl
inc
mov
pop
pop
rcl
mov
jb
adc
push
jl
jbe
test
leave
loopew
xor
movsl
mov
push
in
mov
lock
test
hlt
addl
aad
cmp
mov
les
add
les
push
ret
jp
repnz
loop
out
inc
cwtl
fidivrl
add
add
je
dec
cmp
addr16
xchg
xchg
mov
cmc
mov
mov
movsl
or
inc
pop
dec
iret
inc
or
insl
pop
mov
int3
sub
mov
and
ficompl
mov
dec
cmp
pop
add
push
inc
or
leave
das
sbb
mov
call
or
jo
sub
out
insb
imul
adc
sbb
mov
lods
ljmp
add
or
pop
test
shrl
sub
aad
push
dec
mov
cmp
mov
scas
lods
adc
arpl
into
push
data16
into
xor
test
cmp
lock
push
mov
xor
ficoms
les
or
mov
jmp
jecxz
iret
unpcklps
lahf
outsl
push
insl
or
ljmp
lahf
popf
or
lea
adc
in
xor
mov
hlt
imul
xchg
push
mov
adc
popa
aaa
sbb
fnstcw
sub
pop
fdivl
lods
out
xchg
sbb
subb
and
out
xor
fwait
and
ficomps
xchg
or
sahf
pop
popa
mov
push
sbb
sbb
sbb
outsb
outsl
rorb
cmp
in
mov
hlt
push
int3
mov
and
jae
fisubs
and
fiadds
aam
or
pop
movsb
add
popa
mov
cwtl
pop
cmpsl
in
bound
mov
adc
and
xor
in
mov
bswap
mov
arpl
and
xchg
xlat
nop
dec
and
out
inc
movsb
cmc
aaa
frstor
fstpl
nop
movsl
mov
js
jecxz
fisubrs
out
dec
jne
fsts
out
stos
add
popf
lods
xor
addr16
sbb
xchg
bound
xchg
movsl
sub
or
hlt
fwait
adc
call
push
scas
lcall
sbb
push
sub
in
dec
inc
test
out
add
stos
cmpsl
or
xchg
stos
outsb
leave
sub
jge
call
call
push
push
jmp
scas
dec
inc
stos
mov
pop
mov
imul
xchg
insb
adc
mov
stos
xor
cmp
mov
mov
or
shlb
jae
sub
pop
cs
incl
lods
hlt
fcomi
scas
lods
adc
stos
arpl
fisubrl
das
add
in
jne
xor
lock
sbb
push
roll
outsb
mulb
outsb
aam
jge
fstpl
icebp
inc
test
out
aaa
xchg
clc
repnz
push
inc
ret
adc
adc
jb
lds
mov
xchg
ret
lahf
pop
xor
xchg
repz
ljmp
pop
add
jns
shlb
inc
cmp
xor
fucomp
popa
and
mov
or
add
stos
std
sahf
stc
bound
xchg
sub
pop
lcall
mov
les
int
xchg
xchg
mov
jo
insl
mov
cwtl
pop
sbb
or
mov
push
rcrl
and
popa
cmovg
add
stos
ret
jnp
addr16
movsb
test
mov
sbb
push
shlb
test
into
mov
stos
cmpsl
movsb
or
iret
int3
leave
push
not
inc
push
hlt
mov
gs
sub
sbb
iret
or
jge
cmp
lods
imul
adc
mov
mov
sub
loopne
inc
xchg
aam
aas
xchg
inc
aas
movsl
xchg
sahf
imulb
inc
xor
popa
pop
ret
mov
addl
scas
orl
xchg
cmp
mov
push
xor
jo
add
lret
test
pop
mov
inc
subb
test
dec
movsb
mov
ret
dec
inc
push
mov
push
or
mov
and
fnstcw
mov
inc
inc
stos
xchg
sti
mov
inc
loop
data16
sbb
test
jmp
loopne
hlt
mov
cmp
in
pop
fwait
aas
push
mov
push
or
insb
cwtl
sub
iret
sub
xchg
sub
ds
mov
push
test
add
push
notb
lret
enter
mov
xchg
sub
mov
push
dec
dec
scas
fwait
dec
add
imul
pop
add
lret
xchg
cmp
int
xchg
in
jmp
or
jno
push
add
push
cmp
sub
or
mov
mov
test
jmp
pop
hlt
cmp
and
cld
stc
xor
sub
push
pop
mov
dec
inc
cmp
icebp
jae
stos
xlat
jl
in
cltd
mov
jmp
lea
rorl
int3
nop
xchg
jmp
cld
in
sbb
rorl
cmp
pushf
in
das
rcrl
out
pop
lcall
popf
push
fs
adc
arpl
cltd
sbb
dec
add
xor
sub
push
mov
sub
cld
loop,pt
xor
mov
shlb
cmpsb
or
lds
es
pop
and
sbb
daa
and
test
lea
call
xor
lahf
out
mov
lahf
popf
and
jmp
push
or
pushf
mov
mov
push
fisubl
sub
sbb
pop
add
int3
addl
fbstp
xor
fisttpll
cmpsl
pop
push
xchg
fidivrl
inc
mov
mov
adc
gs
pop
pop
and
ror
push
negl
cmp
or
lea
popfw
dec
dec
dec
shlb
dec
xchg
mov
mov
adc
inc
dec
mov
dec
in
push
outsl
mov
mov
pop
adcl
inc
inc
aas
push
imul
mov
add
iret
mov
dec
xor
in
outsb
sbb
jo
jg
dec
cmp
xor
jmp
cld
push
push
mov
inc
jmp
cli
out
jne
mov
cltd
aaa
fs
scas
adc
lret
das
add
in
jne
inc
lock
sub
jns
fists
sub
inc
stos
mov
pop
mov
hlt
std
pop
rcll
shll
test
out
loope
or
aad
or
or
repz
pop
out
jae
pop
pop
jecxz
ljmp
and
mov
sub
adc
popa
adc
xlat
pop
add
lret
inc
add
in
lahf
cmc
xor
jmp
imul
pop
out
jl
sbb
shll
fs
pop
fwait
in
iret
int
negb
xor
xchg
jmp
dec
popf
filds
or
xchg
scas
cld
mov
inc
loop
data16
sbb
test
ret
or
ret
loope
inc
push
xchg
cmp
mov
add
incb
imul
pop
mov
add
jle
jns
mov
mov
aam
dec
mov
idivb
or
sbb
push
repz
push
dec
mov
push
stos
jno
lock
negb
cltd
outsb
mov
aas
andl
adc
sahf
push
adc
push
mov
add
scas
dec
jle
addr16
mov
fs
addl
sub
stc
movsl
loop
daa
leave
notl
sti
pop
mov
push
sbb
sbb
jbe
xchg
inc
and
jbe
jmp
rcrl
cwtl
xchg
sbb
add
aad
pop
hlt
icebp
push
data16
adc
adc
jl
push
call
loope
mov
and
mov
mov
cmp
out
pop
sahf
inc
or
pop
mov
xchg
cmp
jb
push
mov
and
mov
xchg
aaa
in
lods
sbb
push
xchg
cmp
inc
sub
add
std
test
dec
add
sbb
jl
btr
ret
cmp
jg
jecxz
ja
inc
xchg
xchg
testl
adc
inc
mov
adc
adc
jb
lds
mov
cs
mov
insl
data16
mov
stos
xor
xor
aaa
les
jae
add
jns
pop
es
xor
es
dec
mov
sbb
cmpb
fisubl
mov
adc
movsb
pusha
outsl
ret
shlb
call
icebp
push
lea
or
xor
or
mov
inc
cmc
arpl
aad
or
pop
mov
mov
jmp
pop
loop
xchg
dec
adc
std
std
cmp
iret
mov
nop
push
mov
mov
cmpl
cmpsb
push
jno
mov
dec
push
iret
leave
pop
jg
stc
mulb
mov
daa
and
cltd
aaa
sbb
push
cmpsl
enter
mov
push
out
jno
push
jecxz
mov
test
inc
mov
jo
repz
ljmp
pusha
adc
lcall
cs
pop
fs
pop
adc
pop
push
nop
loopne
iret
jle
mov
pop
xor
loop
push
and
ror
or
jg
std
sti
clc
mov
pop
and
xor
cmp
fidivl
inc
insb
stos
cmpsl
or
xchg
stos
fs
sub
jge
call
call
fstl
add
ret
xor
insb
inc
out
pusha
pop
repnz
pop
iret
mov
adc
jl
mov
ss
in
inc
push
cwtl
cmp
mov
xchg
out
cld
jb
push
mov
and
mov
das
dec
mov
mov
adc
or
add
or
or
loopne
insb
cld
pusha
jno
push
push
movsl
insl
and
push
mov
dec
inc
stos
test
mov
or
jecxz
jbe
cwtl
xchg
xchg
sub
cmp
mov
popf
xchg
jecxz
inc
inc
out
or
push
or
cmp
scas
lock
in
pusha
mov
push
add
jge
cli
sti
or
mov
jmp
sbb
aam
or
mov
sti
pop
mov
push
ja
fistps
push
push
dec
dec
pop
jl
mov
jae
stos
sbb
in
sub
in
mov
sbb
jmp
std
xchg
shlb
mov
ss
loop
in
push
popa
cmc
sbb
xchg
ret
xor
mov
scas
inc
sub
and
jns
sbb
cmp
mov
add
movsb
bound
adc
dec
mov
sub
adc
xor
cmp
leave
lock
cmp
imul
fsubrs
sbb
mov
gs
in
mov
mov
mov
out
sbb
loop
push
fisttpll
or
sbb
mov
fs
das
push
fdiv
jno
push
mov
test
mov
aaa
test
int
mov
shrb
xor
jle
out
pop
das
adc
dec
dec
scas
add
insl
hlt
cmp
jo
mov
push
ret
fptan
test
add
dec
repz
stos
mov
and
pop
arpl
mov
inc
inc
mov
xchg
ss
jecxz
pop
test
adc
jg
cmp
adc
mov
addr16
push
dec
cmp
fs
push
push
mov
xchg
push
mov
arpl
pusha
pop
mov
jnp
mov
add
in
adc
dec
xchg
fdivr
std
cld
stc
idivl
out
mov
and
dec
sub
cld
jno
aaa
shlb
das
jecxz
jbe
cwtl
xchg
xchg
sub
add
mov
mov
jecxz
sbb
lret
outsl
nop
cmp
xor
in
sub
mov
add
or
cmpsb
mov
mov
ja
add
jns
pop
subb
ja
jl
aaa
mov
pop
push
mov
adcb
jbe
xlat
sub
out
xchg
lahf
shrb
shll
sub
jle
icebp
mov
fnstcw
movsb
push
insl
das
nop
xchg
jo
popa
shll
lock
imul
inc
fistpl
loop
mov
aad
or
std
push
dec
movsb
sub
pop
push
push
mov
dec
or
mov
mov
sahf
push
xchg
les
pop
xchg
stc
int
lock
sub
call
push
dec
dec
mov
mov
xchg
push
outsb
imul
lea
xchg
nop
lea
add
push
jnp
pop
std
push
xor
ljmp
adc
push
inc
mov
cmpsb
cmpsb
leave
das
inc
mov
shll
mov
into
xchg
test
mov
fbstp
or
or
or
pop
int
cld
push
sub
jnp
test
decl
cmp
insl
xlat
test
movsl
lahf
data16
rcl
int
mov
clc
jno
push
data16
sbb
loopne
adc
jg
push
stos
sahf
lret
cmpsl
cmp
or
repnz
leave
and
inc
lret
mov
mov
jb
loop
pusha
push
adc
faddp
cmpsl
lods
dec
sub
mov
ret
push
cmp
je
cmpsb
mov
adc
inc
inc
in
add
sub
sti
test
in
push
dec
imul
push
enter
cmp
insb
imul
setno
dec
packssdw
repnz
ljmp
jnp
enter
inc
inc
cmp
cmc
test
cmp
or
dec
repz
insb
sahf
jge
mov
jo
loop
ret
shll
mov
cs
jge
sbb
cmc
xor
add
adc
push
dec
mov
add
xchg
jae
outsb
cmc
xchg
cld
inc
data16
leave
sub
jae
adc
jmp
mov
pop
pop
int
test
xor
ss
pop
rcll
sahf
pop
jb
add
jmp
mov
scas
xor
sbb
in
data16
or
shlb
push
sub
mov
mov
and
test
stc
cmp
cmpsb
cs
test
xor
bswap
mov
arpl
and
pop
cmpsb
dec
lods
xchg
xlat
mov
pop
out
cmp
aad
in
ret
lcall
les
sbb
push
pop
pop
or
sbb
adc
int
aas
adc
out
xor
add
xchg
nop
xlat
jns
adc
mov
stos
punpcklbw
hlt
ror
or
pop
push
ret
ss
or
pushf
sub
mov
arpl
dec
inc
int
aam
ds
test
pop
movsb
mov
ret
dec
cmc
ljmp
pop
mov
xchg
pop
sbb
xchg
shll
mov
inc
ds
gs
cmpsl
cmp
or
dec
repnz
mov
sbb
loope
insb
mov
adc
xchg
insl
xor
sbb
pop
rcrb
add
mov
inc
call
mov
lods
xor
sti
fsubl
xlat
lods
adc
enter
arpl
jb
adc
sub
outsl
adc
loopne
push
daa
bound
cmp
push
icebp
ficomps
lea
and
jne
loopne
testl
pop
insb
pop
dec
or
popf
scas
lock
pop
jecxz
test
pop
loopne
out
push
les
mov
sub
pop
ds
aam
std
bound
int3
aas
shr
cmpsb
xor
xchg
movsb
out
push
fsts
js
mov
cmp
insl
stos
into
pop
popa
add
iret
int3
lret
pop
loope
xor
call
addb
xor
inc
int3
outsb
xchg
fs
mov
inc
loopne
arpl
adc
daa
scas
test
rolb
push
jecxz
sub
mov
aas
nop
shlb
std
test
add
cmp
and
int
push
mov
add
std
lahf
add
outsl
loope
mov
dec
aam
xor
jnp
and
repz
js
jg
ljmp
dec
mov
add
jno
insb
repz
cli
outsl
xlat
xchg
imul
jle
jmp
jmp
mulb
mov
stc
popf
lods
bound
fs
jmp
int
popa
pop
xor
je
fbld
mov
loop
frstor
mov
mov
sti
clc
pop
lods
out
xchg
sbb
pop
lahf
inc
cmpsb
aaa
adc
adcb
jbe
xlat
sub
xchg
sbb
rcrl
mov
mov
out
push
arpl
inc
adc
push
xchg
aaa
pushf
add
jns
dec
out
insb
imul
adc
mov
int
mov
fs
mov
cld
popa
into
int3
ds
adc
in
push
fsubs
ja
xor
out
lods
test
lret
push
idiv
into
lret
leave
push
repnz
pusha
sub
or
pushf
daa
and
cltd
fstpt
into
dec
cmp
inc
lret
insl
shlb
mov
mov
cli
rorl
call
jmp
sbb
shll
test
xor
cmp
shll
rep
cmp
pop
push
mov
ljmp
mov
add
rorb
xor
imul
mov
ja
jle
jmp
les
scas
add
insl
cmc
int
jo
stos
repnz
stc
dec
fs
xchg
stos
fs
leave
sub
jge
call
call
xchg
fists
and
movsl
mov
pushf
arpl
stos
pop
data16
mov
adc
mov
and
jae
fisubs
aad
arpl
push
fistpl
lods
out
xchg
pop
loope
push
pop
pop
push
fiadds
adcl
daa
imul
sti
pusha
pop
mov
lock
push
mov
and
dec
dec
aam
fwait
pushf
push
mov
imul
pop
add
lret
mov
and
pop
out
inc
cwtl
fidivrl
add
add
mov
xor
popa
pop
ret
mov
addl
scas
lods
in
mov
push
outsb
mov
or
dec
icebp
push
outsl
shll
loop
and
int
inc
dec
inc
or
shrl
xor
mov
stc
rorb
ret
sarb
sub
std
xchg
shlb
adc
cmp
shlb
xor
xchg
clc
or
mov
data16
mov
cmp
inc
rep
pop
fidivs
jae
push
mov
das
mov
mov
cs
incl
lods
hlt
or
sarl
mov
push
jg
lds
jp
pusha
daa
outsl
pop
sub
daa
and
ficoms
inc
inc
movsb
cmc
aaa
scas
arpl
mov
pop
or
lahf
mov
mov
push
frstor
loopne
fstpl
bound
add
inc
add
ss
pop
pop
pop
push
fnstsw
test
adcb
es
fcom
roll
add
adc
mov
cmp
flds
shrb
test
xor
mov
inc
dec
xor
mov
hlt
icebp
inc
iret
push
arpl
ja
loop
adc
cltd
push
sbb
jecxz
cmp
shlb
add
cmp
and
jmp
aaa
ds
adc
add
and
mov
pop
push
js
in
roll
or
shlb
dec
or
or
add
and
hlt
icebp
out
adc
jne
sarb
dec
dec
mov
js
in
mov
xchg
xchg
mov
cmp
sub
mov
sbb
out
push
nop
xchg
inc
ljmp
aas
insb
adc
scas
xor
flds
jl
lock
jb
stos
test
rsqrtps
jecxz
shll
cmp
add
cmc
movsl
stos
pop
ss
and
lea
in
push
dec
mov
clc
std
scas
push
jp
jecxz
outsb
xchg
jmp
ficomps
pushf
int
das
xor
mov
out
push
jmp
sbb
test
inc
mov
cmpsb
inc
cmp
mov
arpl
sbb
arpl
inc
ret
jne
cli
adc
pop
neg
adc
push
or
cmp
xor
mov
jg
or
push
test
mov
adc
les
inc
xchg
push
jb
negb
lods
push
sbb
push
popf
aas
movsb
lds
addl
aad
sub
xchg
sbb
cwtl
xchg
xchg
inc
sbb
inc
or
out
aaa
pushf
popf
repz
je
cmp
pop
in
adc
mov
sub
ss
push
xchg
mov
dec
in
push
cmpsb
out
pop
jle
scas
pop
and
movsl
loopne
or
test
cmc
aad
dec
cmc
xor
pop
dec
es
and
dec
mov
mov
insl
sbb
jbe
aad
loope
fwait
cwtl
sub
ss
int
fmuls
jb
hlt
cwtl
mov
in
and
and
jne
mov
cmpsl
inc
ss
pushf
xor
xchg
xchg
add
hlt
xchg
ret
rclb
icebp
mov
ret
loope
pop
xchg
cmc
pop
int3
addl
dec
loop
xor
lods
push
pop
in
mov
test
mov
idivl
fimull
cmp
jne
hlt
div
mov
gs
imulb
xchg
adc
mov
js
ret
mov
loopne
hlt
mov
lret
mov
daa
sti
mov
cmp
ds
pop
sbb
punpckhwd
inc
add
ss
popa
jno
insb
in
or
adc
push
test
mov
lods
test
pop
xlat
aam
leave
idivb
sbb
or
fwait
mov
pop
push
cmpsl
dec
mov
jge
xor
and
lahf
pushf
dec
push
fwait
int
ss
pop
popa
cli
test
and
sbb
pop
xorb
jo
jno
out
fs
and
mov
mov
mov
arpl
ljmp
test
push
adc
lods
xor
fisubs
mov
pop
mov
jle
cmc
jno
sub
push
sbb
fcom
add
adcl
div
push
test
dec
jo
xchg
xchg
rcrb
push
jl
push
push
jle
push
xchg
in
jno
shl
and
ds
into
lea
mov
arpl
out
popf
inc
xchg
xchg
test
cmp
lahf
out
in
push
out
xchg
lea
ss
mov
mov
push
pop
loop
frstor
mov
add
idivb
out
je
pop
sub
mov
lock
div
and
in
sbb
mov
iret
mov
insb
icebp
out
mov
xor
mov
mov
cmp
lods
aaa
jecxz
or
pop
and
pop
iret
mov
orl
cli
mov
xor
inc
dec
insl
cmp
sbb
cmp
mov
sub
sub
push
rolb
cmpsb
mov
cld
lods
test
push
dec
fcmovbe
iret
jle
aad
jb
cmc
std
hlt
icebp
pop
pop
jg
sbbl
adcb
dec
test
lock
jb
and
or
adc
add
lock
loopne
jo
adc
add
and
outsb
sub
pushf
pop
outsl
mov
loope
dec
mov
mov
repnz
mov
sbb
dec
popa
pop
add
jae
add
sub
rclb
push
dec
inc
cmc
cli
aam
ja
andb
stos
xor
leave
mov
cmc
jno
int3
imul
in
add
pop
sbb
mov
dec
inc
inc
push
jl
xor
loope
gs
fwait
cwtl
pop
sbb
cmp
and
test
out
loop
jmp
adc
add
sub
cmp
pusha
pop
mov
into
insb
push
mov
jns
or
out
adc
ds
inc
in
add
push
in
lretw
push
jnp
daa
mov
sbb
adcl
jb
fcomp
std
push
sub
cltd
add
xchg
mov
xor
mov
xor
loopne
pop
aam
nop
adcb
fdivl
aaa
xor
mov
mov
push
rorb
insb
jge
mov
or
ja
movsl
mov
sub
int3
or
ja
sbb
stc
testb
cmp
push
push
into
or
test
jo
mov
fisubrl
mov
xchg
sar
int
push
into
dec
or
jmp
pusha
ljmp
push
dec
mov
cmp
jae
mov
insb
inc
jnp
xchg
shrb
mov
scas
xor
loopne
ljmp
sbb
das
sub
pop
fistpl
into
loop
rorb
inc
outsl
leave
mov
testb
adc
push
fcmovbe
cmp
xlat
int
add
divb
push
out
sub
xchg
cltd
repz
push
push
push
xlat
aad
inc
inc
lods
push
cmc
jno
insb
xor
mov
inc
dec
and
xchg
mov
mov
push
int
inc
cmp
mov
addr16
cmp
fstpl
mov
test
test
stos
test
sahf
out
push
push
ror
jge
aam
jno
aam
xor
pop
pop
jle
out
pop
test
ret
xor
cmpl
mov
dec
push
inc
sbb
dec
ljmp
sbb
lret
sbb
dec
dec
test
cmp
and
insb
cltd
mov
outsb
movl
mov
cmp
popa
and
mov
cmovp
jo
inc
push
cld
cmp
mov
das
mov
fcomp
jnp
pop
push
stos
and
enter
stos
std
js
fbld
daa
lds
fildl
cltd
push
leave
movb
inc
in
into
jp,pt
sub
adc
roll
lds
in
pop
jo
data16
pop
cltd
xchg
xchg
sbb
inc
inc
pushf
mov
out
in
data16
mov
xchg
cmp
sbb
imul
lds
pushl
test
and
stos
test
pop
xchg
fcmovbe
fwait
push
ja
pop
dec
jl
add
negb
mov
pop
aam
and
mov
daa
shlb
out
add
fisubrl
nop
imul
dec
popf
filds
popa
dec
dec
jg
mov
mov
dec
mov
fwait
xchg
cmovg
or
nop
mov
sub
pop
push
xchg
jecxz
fstps
mov
xchg
jle
jb
add
aam
movsb
cwtl
push
add
outsl
rclb
fcomps
and
test
add
mov
lds
rorl
push
in
cmpsl
jecxz
sub
inc
fcomps
cli
mov
dec
inc
inc
push
es
jno
push
scas
outsl
mov
ss
xchg
lret
enter
pop
cs
ds
lods
pop
sbb
mov
push
or
lcall
gs
aad
nop
push
fldl
mov
mov
mov
xor
ror
or
or
sbb
xor
push
pop
inc
fdivl
std
inc
cmpb
mov
pop
iret
loopne
or
or
sti
out
in
jle
adc
sbb
lds
dec
inc
aas
stos
push
or
push
push
scas
rorl
cmpsl
jl
inc
sub
ja
scas
jmp
hlt
adc
adc
insl
push
mov
mov
and
es
pop
push
push
push
dec
pop
cmp
jbe
ljmp
fisttpl
test
int3
leave
jp
add
add
icebp
out
lahf
bound
cltd
and
dec
inc
inc
repz
jge,pn
jb
fildl
push
and
or
xchg
and
and
ljmp
adc
mov
cmp
push
mov
popa
jnp
mov
in
pop
lret
insl
ss
outsl
movl
sub
inc
popa
mov
add
cld
cli
xor
hlt
gs
and
mov
adc
jge
jmp
test
insb
xchg
js
mov
cmc
repnz
pop
fwait
mov
outsb
fimuls
ret
cmp
mov
notb
sub
mov
aaa
popf
mov
mov
push
pop
lahf
adc
popa
cmp
std
addr16
and
push
push
out
xchg
test
es
jmp
inc
fcmovu
aad
incl
in
call
negl
in
in
push
inc
add
nop
dec
jl
out
jle
push
mov
jb
aam
pop
and
mov
outsb
inc
cmc
mov
imul
out
daa
inc
out
nop
ss
or
lea
adc
mov
xor
fistps
push
fnstsw
pop
pop
insb
add
mov
mov
push
out
fimull
scas
in
dec
int
jl
je
pop
sti
divb
pop
test
hlt
popa
and
dec
enter
dec
insl
cmc
mov
sarl
pop
sahf
fwait
adc
sarb
ffree
shlb
and
icebp
out
cs
and
pop
orl
loop
or
pop
cmp
lahf
lahf
insl
hlt
mov
js
sbb
xchg
xor
in
lods
ret
loop
inc
lock
nop
pusha
dec
std
cmp
mov
pop
test
dec
mov
js
or
cmpsl
cmpsb
mov
adc
ds
push
in
pop
jnp
aaa
test
in
sub
stc
lcall
inc
inc
cmpsl
test
out
scas
outsb
pushf
in
mov
lahf
rorl
loopne
mov
in
jmp
out
adc
setbe
inc
adc
adc
ss
test
ret
pop
xchg
mov
scas
cli
inc
scas
dec
dec
int
add
das
lods
adc
das
xchg
add
jg
push
dec
mov
clc
sub
jl
jecxz
fisubrl
or
xchg
sub
daa
mov
out
ret
mov
test
dec
xchg
adc
cmp
icebp
hlt
mov
cmp
lcall
stc
call
mov
aas
or
lret
js
cmpsl
lods
dec
sub
xchg
aaa
jg
push
push
mov
cmpb
jns
mov
xor
and
int3
leave
fdiv
cli
pop
hlt
sbb
fs
test
push
dec
dec
push
sub
cmp
in
inc
imul
mov
inc
mov
lock
loope
lea
mov
cmp
loopew
mov
fistpl
lret
dec
mov
mov
test
fcmovbe
aam
jmp
leave
or
divb
xor
mov
pusha
and
dec
dec
loopne
adc
clc
insl
stos
aam
sbb
sahf
cltd
xchg
sub
cld
mov
ja
adc
imul
push
jmp
push
dec
inc
scas
scas
xchg
jae
mov
cltd
mov
xchg
or
jbe
mov
mov
stos
popa
pop
insl
sbb
lcall
mov
or
add
mov
test
push
pop
pop
lcall
xchg
sub
scas
andl
mov
ror
popa
dec
jl
roll
cli
div
jnp
popf
mov
mov
inc
into
js
es
je
outsl
ss
mov
or
movsl
cmp
mov
jmp
movsl
negl
adc
jecxz
xchg
mov
ds
dec
fucomip
push
push
xchg
nop
pop
popa
mov
mov
and
cmpsl
loopne
or
sahf
in
or
outsb
fstps
stc
negb
lahf
movsb
inc
and
mov
loop
dec
mov
jl
jmp
test
xchg
push
jae
sub
iret
dec
test
cmp
int
clc
cmc
fs
pop
cwtl
popf
jmp
sbb
addb
stos
test
pusha
push
stos
imul
cwtl
jmp
fimull
xor
sub
in
lods
shrl
test
add
xchg
dec
cmp
xor
insb
sub
pop
xchg
push
shl
push
ret
insl
popf
jne
pop
lods
test
pop
lahf
aad
aaa
cmp
js
cld
push
div
lock
popf
mov
sbb
iret
inc
inc
lds
adc
jno
data16
push
cltd
xchg
or
inc
nop
enter
push
cmp
repz
jle
fbstp
sub
gs
sar
add
adc
add
xchg
movsl
sbb
push
push
push
dec
into
filds
jnp
jb
stc
mulb
mov
and
movsl
dec
stos
rorb
aam
addl
outsb
sbb
pushf
dec
pusha
xchg
cwtl
int
ss
lret
imull
repnz
jae
cltd
lcall
adc
cmp
addr16
add
aad
shll
test
jmp
mov
inc
rcll
xchg
fcom
lret
and
addl
mov
mov
test
lret
out
jg
mov
lock
and
test
loopne
into
lret
or
test
repz
xor
les
pop
sbb
shrb
xchg
inc
push
inc
subl
push
jmp
pop
or
fwait
movsl
mov
bound
out
in
aas
inc
inc
inc
jmp
insb
mov
gs
dec
xchg
cmp
add
xor
add
xor
push
add
xchg
push
add
sbb
sahf
popa
daa
and
dec
addl
xchg
and
dec
cmpsl
lahf
pushf
dec
push
out
ror
lret
or
cmp
and
mov
idivl
push
adc
pop
inc
cmp
mov
ss
mov
or
mov
sub
call
in
push
jbe
cs
js
test
es
push
xchg
dec
add
clc
or
mov
movsb
rcrl
mov
leave
lock
cmp
lret
or
sbb
daa
bound
mov
in
dec
and
inc
inc
sar
ljmp
int3
enter
push
nop
hlt
cmp
imul
xlat
sbb
dec
outsb
loopne
inc
mov
push
lea
insb
adc
xor
gs
pop
push
sbb
repz
enter
pop
into
pop
and
test
fstp
popa
add
es
add
jae
cld
idivb
mov
lds
pop
push
mov
shrb
negl
and
add
andl
lock
int3
dec
jp
call
xchg
xor
adc
ja
cmp
add
xor
fstp
mov
cwtl
pop
int3
sahf
sti
cmp
xchg
test
dec
faddl
or
jns
or
cmp
sub
fcmovne
loop
push
fnstenv
and
js
cmpsl
cmp
sahf
bswap
loopne
in
stos
cld
aaa
mulb
lea
aaa
sbb
push
jg
sbb
fildl
jb
in
sbb
cmp
test
push
mov
js
out
in
aas
daa
pop
pop
in
sbb
rcrb
cmp
fldcw
test
or
lods
lret
nop
or
adc
daa
sub
mov
cmpsb
or
mov
rorb
push
add
imul
stos
xor
daa
and
sbb
leave
jecxz
inc
addl
fstpl
pushf
xor
bound
dec
mov
or
jmp
icebp
outsb
adc
mov
loop
cmp
push
fstpt
pusha
cwtl
xchg
jecxz
jg
mov
call
push
imul
inc
cli
mov
test
imul
dec
imul
orl
aam
jns
scas
scas
ljmp
xlat
adc
and
or
icebp
out
jne
cld
add
ret
testb
imul
jno
imul
mov
push
enter
cs
xchg
push
lods
xor
sbb
lods
pushl
fbld
pop
push
xchg
add
orl
pop
and
dec
js
or
jns
push
jb
cltd
clc
xor
fwait
pop
lret
push
dec
dec
fldl
dec
mov
stos
cmpsl
rcll
mov
xchg
shll
sbb
cli
je
cmp
mov
push
es
inc
push
inc
inc
stos
stos
rolb
scas
insb
shll
lcall
xchg
push
jae
mov
mov
cmpsl
pop
arpl
sbb
popa
cld
push
scas
test
mov
pop
xor
shll
pop
pop
xchg
push
push
test
inc
in
lods
addb
mov
bswap
mov
std
test
pop
icebp
sbb
bound
cltd
rcrl
jnp
int3
in
test
pushf
cltd
push
imul
lret
jge
xchg
jge
repnz
inc
gs
loopne
mov
adc
popa
add
xor
sub
pop
pop
aad
andb
xchg
mov
movsb
loop
or
cmp
int
ret
clc
dec
popa
pop
test
mov
cmp
push
push
mov
jae
out
hlt
es
outsb
fidivrl
lock
fwait
cld
rcrl
lret
jae
out
mov
call
cmp
adc
ret
mov
ss
jo
loope
pop
fwait
or
cltd
add
shrb
mov
sbb
push
out
flds
aaa
popf
inc
push
mov
pop
std
cmp
and
push
push
mov
cmpb
in
cld
or
push
push
inc
xlat
iret
int3
jnp
shrb
outsl
je
sti
icebp
out
push
push
jl
push
pop
sbb
inc
addl
outsl
ret
mov
or
inc
push
add
dec
call
lock
fisubl
add
sbb
adc
pop
or
popa
pop
xor
das
cltd
pop
insb
sbb
xor
jbe
mov
adc
data16
imul
add
pop
xchg
lods
xchg
sti
xor
daa
mov
call
es
inc
cmp
imul
pushf
cltd
rcl
das
aad
aas
adc
jl
in
jae
cli
hlt
movsb
sbb
enter
dec
stos
xor
loop
xchg
imul
mov
repnz
adc
sbb
jmp
dec
loope
fistl
pop
add
add
sub
inc
mull
push
push
dec
aad
fadd
sub
lods
test
lret
push
aaa
ror
lret
jnp
incb
in
sub
and
adc
inc
idivb
fcmovu
inc
cli
cmc
mov
xchg
xchg
mov
lahf
inc
sarl
jmp
ljmp
adc
addl
std
xor
loop
jb
bound
aad
mov
dec
inc
add
xchg
mov
mov
and
test
frstor
imul
js
sti
jne
cmpsb
cmpsl
cltd
sub
and
push
into
test
push
mov
jp
je
jp
cwtl
push
jns
and
xchg
stc
inc
inc
cmp
hlt
outsb
xchg
gs
in
jmp
and
adc
cwtl
ds
lds
cmp
jae
out
insb
fs
adc
add
mov
mov
lods
ljmp
jns
adc
mov
mov
pusha
mov
sub
aad
jle
sub
into
mov
stos
cld
into
adc
dec
xchg
jl
jg
cli
mull
lahf
and
andb
stos
jnp
insb
jno
imul
in
dec
fmul
lret
jle
cmp
out
cmp
sub
sbb
push
cwtl
dec
cmp
sub
dec
pop
xchg
push
ret
sbb
adcl
idivb
movsl
mov
aam
pop
or
add
cmc
or
js
mov
ret
dec
mov
xor
stos
repnz
mov
sbb
int3
stc
cmp
fadd
sti
clc
cmc
mov
and
adc
sahf
dec
inc
inc
xchg
push
or
clc
arpl
adc
jecxz
test
mov
enter
in
mov
aad
mov
sbb
mov
sub
pop
mov
xchg
adc
xchg
sbb
adc
std
mov
movb
dec
cli
div
mov
outsb
cmpsl
sbb
ja
dec
cmp
mov
scas
test
xchg
sbb
mov
adc
add
adc
das
mov
mov
mov
bound
shll
push
adc
add
cli
jno
flds
ja
or
ja
sbb
stc
testb
and
dec
dec
mov
std
fwait
jg
ja
insb
aas
call
cs
xchg
inc
dec
call
aad
out
repnz
ret
pop
jo
pop
cltd
aad
mov
ds
movsb
push
js
outsl
insb
mov
push
xchg
xchg
out
pop
add
xchg
mov
rcrb
std
loope
fldcw
mov
push
nop
cmp
popf
or
sub
push
test
fisubrs
test
push
jl
jne
repnz
cmpsb
mov
clc
ror
jle
and
add
sub
ret
imul
cld
add
pop
dec
dec
inc
stos
inc
or
inc
push
les
sbb
lea
mov
lret
or
mov
or
out
loope
add
movsb
dec
or
add
or
mov
push
fnsave
add
xchg
out
scas
sbb
inc
ss
inc
scas
dec
pop
int
test
icebp
jns
sub
sti
stos
test
dec
dec
dec
lods
jae
sub
stos
movsl
mov
adc
xor
mov
out
jmp
out
fwait
push
test
data16
rcr
add
xchg
popa
pop
pop
push
mov
test
and
lods
ljmp
in
xchg
pop
or
jnp
addr16
pop
pop
sbbb
andl
pop
outsl
aad
jnp
jno
fadds
lcall
lds
xlat
rolb
sub
and
dec
into
nop
cmp
mov
ds
iret
xor
imul
push
in
pushf
cltd
in
push
fmul
lret
ret
inc
xor
stos
inc
out
dec
inc
jb
cmpsl
dec
push
loop
push
inc
inc
sbbl
fs
jmp
rclb
xchg
sbbl
loop
inc
mov
pusha
ror
test
imul
rcrb
cmc
xor
mov
and
pusha
adcb
mov
sti
cs
das
inc
jmp
sarb
fwait
cwtl
sub
fcmovne
leave
sub
lea
xor
push
inc
out
dec
test
out
or
aas
sbbb
data16
pop
in
insb
inc
sbb
add
sbb
out
dec
ss
stos
push
adc
push
std
fisubs
jne
imul
pop
rorl
jl
fsubrl
or
mov
cltd
arpl
mov
shll
jnp
mov
adc
mov
sbb
mov
inc
inc
test
jno
sub
push
movb
mov
mov
lock
ljmp
adc
cltd
aas
and
mov
push
outsb
sub
pop
jo
pushf
mov
jge
test
bound
scas
stos
test
mov
fs
pop
inc
rolb
mov
stos
jno
sub
and
jle
push
jbe
sub
sub
stos
movsl
mov
sar
movsb
sbb
insl
jb
hlt
out
in
push
push
dec
and
out
mov
lods
cltd
ss
jbe
dec
cs
push
loopne
mov
cmp
xchg
mov
sub
mov
sbb
inc
cmp
loope
data16
push
add
js
cmp
mov
aaa
repnz
push
add
mov
push
adc
lods
adc
leave
das
sub
lea
or
and
mov
cmp
dec
add
jnp
mov
jge
in
pushf
cltd
std
fmuls
mov
mov
loopne
out
xchg
cwtl
sbb
addl
std
lea
xor
gs
pop
jecxz
push
fimull
loope
xor
outsb
ljmp
push
mov
mov
adc
subb
sahf
mov
andl
jge
add
stos
xor
mov
es
lret
xchg
cmp
daa
int3
dec
inc
jmp
cwtl
popf
cmp
sbb
imul
dec
inc
je
leave
xor
leave
outsl
insb
ror
push
fstpt
and
test
xchg
call
mov
sub
cmc
mov
mov
adc
add
sahf
add
bound
shrb
idiv
lcall
stos
xor
mov
sub
lret
enter
sub
sarl
sub
outsl
adc
push
js
mov
cmc
xchg
ja
outsl
ret
push
jno
and
lea
loopne
mov
andb
dec
clc
sbb
adc
mov
outsl
nop
jo
loopne
ret
cs
gs
xchg
addr16
xchg
aam
ja
xor
loopne
dec
push
out
ror
or
xchg
cmp
push
sub
scas
dec
in
dec
pop
sbb
adc
insl
test
shll
xor
jp
mov
out
jmp
mov
xchg
adc
or
mov
insl
push
adc
jecxz
test
mov
mov
into
dec
and
pop
fwait
fs
test
jo
mov
cmp
das
feni(8087
xchg
xor
mov
and
sub
scas
fstps
adc
aad
int3
xchg
push
add
std
cli
andl
and
nop
dec
int3
iret
inc
cmp
in
lock
xchg
ja
outsl
ret
in
loopne
int3
jno
in
nop
icebp
out
sbb
push
stc
mov
jmp
inc
or
dec
cmpsb
dec
mov
aaa
xor
mov
pop
pop
pop
loope
xchg
xor
or
in
stc
sub
mov
dec
fs
xor
add
divb
pop
mov
and
dec
pop
sarb
jecxz
cmp
jae
ret
rcl
dec
test
orb
cmpb
jmp
sbb
adc
jns
test
test
sub
mov
mov
mov
cwtl
pop
add
mov
sbb
aas
cmp
out
inc
push
insb
sbb
test
aas
cmp
or
cwtl
mov
lock
sahf
fcmovnu
sbb
pop
je
inc
jp
icebp
out
das
in
pop
cmpsl
jle
xchg
pop
int3
mov
scas
repnz
iret
jp
out
cltd
xchg
cli
add
mov
and
mov
pinsrw
sbb
out
lcall
pop
dec
or
ficomps
xchg
adc
scas
fildl
clc
mov
sbb
sbb
lods
leave
ror
or
xchg
cmp
lgs
das
sub
xor
sbb
dec
dec
std
push
test
int3
xor
or
push
mov
rcl
stc
stc
sahf
dec
push
mov
imul
adc
dec
xchg
dec
jno
push
les
jae
insl
hlt
pop
cmp
mov
or
in
xchg
out
inc
mov
addr16
iret
inc
lock
jb
jle
add
cmp
cmp
or
popa
leave
push
jg
adc
jmp
cmp
lds
sub
test
lret
stos
jg
daa
cltd
icebp
test
jl
lret
mov
fsubr
mov
jl
mov
xchg
nop
dec
xchg
push
xchg
mov
jecxz
sbb
int
or
insb
imul
lcall
je
xchg
nop
mov
jge
jae
mov
mov
lret
cld
int
xor
xchg
das
xchg
outsb
jecxz
push
fnstcw
push
push
mov
xor
test
mov
imul
sti
repnz
push
pop
std
idivb
sbb
dec
inc
mov
mov
fimuls
fwait
cwtl
inc
data16
test
cmp
lods
or
arpl
in
in
fbld
cmp
into
pop
add
scas
jb
lcall
rcll
mov
xor
mov
stos
sbb
mov
dec
gs
xor
mulb
test
sub
sub
ret
lcall
jecxz
jb
push
mov
mov
pop
aaa
adc
mov
in
and
xchg
nop
xchg
push
inc
inc
aas
xor
cmpsl
addr16
movsl
clc
pop
xchg
nop
jge
cmp
jle
lds
movsl
mov
fldl
rorl
int
pop
cmp
cmp
paddusb
sub
push
pop
pop
push
faddl
pusha
inc
mov
jge
into
mov
mov
roll
rol
les
icebp
out
push
fwait
mov
outsb
imul
ja
lods
lcall
in
imul
adc
cmp
or
lods
ljmp
aad
dec
adc
cmp
sub
iret
aam
pop
push
dec
mov
jl
in
sub
lods
cmpsl
movsb
cmp
jno
aam
cmpsb
leave
and
add
je
div
out
adcb
stc
xchg
mov
shr
jnp,pt
scas
inc
ficomps
jecxz
push
popf
push
push
jmp
fisttpll
icebp
cs
out
popa
pop
xchg
jmp
and
push
or
mov
xor
pop
pop
mov
dec
jle
mov
roll
mov
shrl
inc
sub
dec
pop
xor
cld
sub
frstor
jecxz
inc
push
je
cmc
inc
mov
test
sub
icebp
xchg
ror
and
rol
sub
push
inc
out
jmp
loope
idivb
pop
adc
and
scas
adc
jae
rcl
mov
rcr
out
pusha
add
xchg
mov
xchg
lods
pop
bound
in
fmull
and
cmpl
lods
mov
rcl
jne
push
push
dec
aad
mov
dec
pop
jns
mov
negl
fistl
movsl
push
mov
add
idivl
pop
sub
stc
xor
sbb
iret
or
inc
test
or
pushf
icebp
ljmp
sarl
sub
arpl
loope
push
punpcklbw
or
imul
addr16
movsl
mov
test
mov
addl
fistps
push
stos
xor
add
mov
xor
push
fsubs
iret
push
push
popa
dec
jbe
stos
mov
lret
les
cmpsl
jnp
mov
clc
int
ljmp
imul
adc
push
adc
inc
mov
sbb
push
pop
int
ret
out
mov
xchg
jo,pn
fnstsw
jno
or
pop
neg
jnp
push
popf
and
sub
pop
add
xchg
push
test
xchg
jnp
lock
mov
adc
aaa
popf
ficoml
cmp
jge
hlt
add
gs
dec
lock
sub
orb
ds
dec
mov
repz
scas
js
jb
imul
cltd
push
inc
or
enter
mov
mov
lahf
dec
out
pop
fsin
out
aad
jno
xchg
cmp
mov
xchg
pop
fsubl
bound
jo
jmp
addl
cmp
aas
stos
mov
pop
rorl
cmc
pop
xor
sahf
jle
push
mov
loopne
cmpl
jmp
sarb
fwait
cwtl
sub
fcmovne
leave
sub
lea
xor
out
push
fs
pop
pop
sbb
mov
xchg
xor
popf
pop
fwait
adcb
push
mov
jmp
out
pop
xchg
xor
add
xor
lods
cltd
pop
sub
mov
sub
out
lods
test
and
lret
enter
icebp
sub
leave
imul
push
add
sbb
mov
lea
cmp
mov
outsl
insb
sbb
mov
adc
enter
dec
mov
std
pop
push
xor
sub
mov
roll
inc
imul
inc
xchg
nop
popa
pop
ret
push
mov
pop
sti
mov
inc
out
push
pop
clc
aam
in
addr16
jnp
sub
push
divl
xchg
fwait
jns
pop
push
push
inc
or
je
mov
lahf
sbb
dec
call
aad
repz
repnz
and
sbb
and
rolb
test
pop
imul
inc
jmp
jmp
das
pusha
fsubrp
out
cmp
pop
add
imul
fs
sub
sub
pusha
pop
ret
and
mov
loopne
mov
add
inc
loope
mov
mov
adc
add
bound
lods
imul
outsl
adc
push
js
fucom
addl
xlat
ret
inc
loopne
popf
and
imul
xor
mov
test
imul
outsl
or
inc
xchg
mov
inc
mov
fs
rcll
lret
call
in
mov
jecxz
push
sbb
push
adc
add
cmc
xor
pop
andb
mov
shlb
dec
dec
fisubrs
push
pop
test
jae
imul
test
inc
dec
xor
mov
and
out
pop
push
out
pop
sbb
push
enter
push
aas
cmp
jmp
arpl
mov
repnz
mov
ljmp
push
adc
sbb
sub
test
inc
sbb
mov
push
mov
mov
and
fistpl
pop
idivb
mov
add
cld
insb
jno
clc
out
sub
stc
ljmp
push
jb
cmp
jp
out
push
imul
nop
or
cmp
or
mov
aaa
in
jg
pop
sbb
mov
adc
push
imul
xchg
xor
int3
push
shll
and
nop
lea
mov
and
test
fstl
rcr
into
or
sub
stc
or
fcomps
rcl
cld
push
dec
dec
std
rorb
sbb
and
or
into
xchg
int
ss
sbb
pop
out
out
ja
xor
adc
inc
stos
out
mov
xor
sarl
lret
push
dec
sarl
inc
mov
mov
sbb
inc
inc
push
push
and
loopne
pop
sub
mov
lahf
dec
dec
mov
inc
clc
std
das
add
mov
lock
inc
cmpsb
sahf
fcmovne
dec
or
add
cmc
divb
lock
sub
or
stos
das
out
inc
sbb
jnp
jmp
mov
cld
test
and
and
mov
out
inc
repnz
or
cmp
stos
stos
jmp
push
mov
lea
inc
lds
scas
lods
xor
push
pop
pop
loopne
aam
cmp
bound
inc
mov
and
mov
mov
jmp
insl
test
push
push
dec
adc
xchg
ror
stc
sahf
ret
cli
je
sbb
and
dec
icebp
mov
or
inc
cmp
cltd
cltd
mov
addr16
fwait
insb
loopne
mov
cmp
xor
loop
nop
arpl
test
mov
push
add
and
mov
push
add
dec
stc
add
clc
xor
sub
sbb
pop
sahf
aad
inc
mov
add
sub
shrl
sub
fcmovb
sbb
jl
ret
dec
inc
inc
aad
xchg
mov
fiadds
leave
mov
scas
xchg
mov
sbb
sub
pop
pop
xchg
jecxz
sbb
rorb
cmp
xlat
xchg
cmpsl
fs
lret
pop
orl
aaa
xchg
push
imul
stos
test
lahf
push
pop
dec
bound
rcrb
push
cmpsl
mov
lods
push
sub
es
push
dec
pusha
pop
inc
insl
sub
jecxz
inc
inc
in
js
lcall
mov
loopne
pop
inc
in
lcall
xchg
xor
xchg
fldcw
arpl
pop
mov
mov
sub
jmp
in
push
push
push
fcoml
adc
jbe
push
fwait
cmp
test
es
sbb
pusha
fisttpl
jle
sub
sub
stos
mov
lods
mov
enter
std
cli
mull
and
adc
inc
inc
cmc
mov
jecxz
insb
and
adc
cltd
xchg
mov
mov
hlt
ljmp
adc
push
inc
imul
lcall
in
loop
lret
pop
push
loop
mov
and
stos
cmpsb
jecxz
xlat
or
test
and
lods
sti
xor
lahf
fs
rcr
push
pop
push
push
mov
mov
fwait
movsl
stos
in
push
adc
xchg
shll
adcl
outsb
jae
jp
call
mov
gs
push
inc
imul
ds
dec
pusha
fistpl
leave
mov
cmp
and
cmc
movntq
out
pop
lcall
inc
std
add
push
push
push
das
sub
icebp
insl
scas
pop
pop
push
cwtl
pop
flds
jnp
mov
adc
popf
fists
lds
das
std
test
hlt
mov
and
push
dec
movb
push
jle
ja
adc
pop
call
dec
push
rcrb
stc
mov
test
cmc
or
mov
push
and
sbb
mov
mov
lahf
pop
push
shll
xchg
push
adc
xor
push
int
in
fs
xchg
bound
jp
cmpl
mov
shlb
inc
out
je
imul
sar
lret
sarl
mov
and
mov
adc
sbb
inc
inc
xchg
cmp
cmp
int
cltd
cmc
scas
xor
xchg
arpl
mov
lds
in
inc
pop
loopne
cmp
popa
lahf
ds
rdmsr
mov
fnstsw
pop
push
ret
push
call
mov
mov
xlat
ror
int3
push
leave
xor
xchg
jne
cld
xor
and
inc
inc
lds
jne
jb
xor
mov
test
and
lds
repz
cmp
in
fisubs
adc
push
inc
mov
adc
xor
inc
sub
bound
dec
push
xchg
jp
mov
or
inc
mov
scas
mov
pop
outsb
ljmp
addl
js
das
sub
fwait
sub
cwtl
push
add
into
mov
shll
push
outsb
stos
cwtl
pop
push
xchg
fwait
cwtl
add
xor
push
cli
cmc
repnz
roll
jge
adc
jp
ret
aas
cmp
shlb
insl
xor
fs
pop
fwait
loop
imul
cmp
mov
sub
popf
pop
or
xor
data16
das
fisubs
mov
lock
pop
outsl
call
sahf
xchg
pop
cmpsl
movsb
shlb
mov
pop
inc
pop
and
sub
sbb
repnz
mov
push
int3
jnp,pt
jne
bound
aam
mov
insb
pusha
lret
enter
mov
cmp
out
js
sbb
adc
out
imul
imul
fldpi
pop
push
xchg
add
std
incb
mov
fs
lods
push
push
ror
subl
aam
and
sbb
scas
sarb
testl
sbb
dec
data16
xor
push
pop
hlt
icebp
pop
sahf
arpl
and
rolb
addr16
lock
push
sahf
jo
or
mov
cmc
sbb
stc
mov
sbb
pop
ficoms
or
std
cmp
lods
fbstp
stc
dec
push
dec
mov
xchg
js
js
shlb
mov
fdivrs
xor
test
daa
sub
imul
push
mov
jnp
shlb
imul
xchg
xchg
or
mov
out
sbb
out
in
adc
dec
sbb
adc
js
xor
jp
mov
push
pop
loopne
mov
and
out
jl
lods
test
mov
inc
ror
out
mov
bound
and
test
pop
lahf
inc
dec
fs
pop
mov
mov
lahf
pushf
cltd
xchg
sbb
vpsubd
out
testb
pop
adc
cwtl
adc
inc
aas
push
les
jae
insl
hlt
pop
cmp
pushf
cwtl
imul
mov
pop
ds
pop
lods
sub
adc
sbb
cmpps
xchg
mov
xchg
cld
push
cmpb
das
lods
test
std
xlat
aam
mov
leave
nop
dec
add
cli
imul
mov
sub
scas
dec
inc
clc
jnp
rorb
scas
outsb
loop
jno
mov
inc
dec
mov
test
insl
out
lock
adc
add
push
xor
rorb
cmovnp
mov
pop
and
inc
sub
jmp
xor
jo
mov
push
mov
pusha
dec
dec
dec
lea
lock
mov
mov
push
sbb
sbb
shr
divl
icebp
ret
add
adc
pop
pop
sbb
inc
sbb
adc
ss
fs
pop
fwait
loop
imul
divl
call
popf
pop
or
mov
cmp
and
push
push
add
int3
push
jl
jbe
sub
lods
cmpsl
movsb
push
sbb
int3
leave
jp
jns
ljmp
and
cmpsl
lods
repnz
mov
sbb
pop
xchg
sub
movsl
leave
push
pop
mov
les
addr16
ret
push
out
pop
mov
lret
jbe
add
cmp
ret
mov
pop
adc
add
xchg
loope
cmp
cs
addr16
xor
add
repz
jae
movsb
lahf
xor
adc
push
dec
nop
add
mov
lcall
mov
adc
jmp
cli
xor
adc
and
dec
outsb
xchg
adc
cmp
jns
lods
insb
fsub
jg
pop
fwait
out
fsubrl
int3
mov
popf
add
mov
or
fisttps
popf
pop
or
xor
xchg
xor
test
inc
cmp
fwait
mov
mov
js
loop
daa
lds
jne
sarl
mov
sub
repz
sub
outsl
and
push
push
dec
dec
shll
lcall
jg
pop
mov
and
dec
aam
sbb
outsb
in
cmc
inc
jp
adc
lds
insb
xchg
xor
outsb
sub
test
push
cmovnp
push
clc
mov
cmp
adcl
loopne
inc
sub
out
mov
lcall
cmpsb
xchg
and
mov
repz
dec
and
dec
test
push
mov
adc
int
mov
clc
dec
lea
out
sbb
push
mov
shlb
div
addr16
pop
in
insb
xor
mov
jg
cmp
add
test
fs
inc
add
shll
arpl
scas
jl
shr
enter
sbb
cmp
sub
rcll
cs
popa
stc
imulb
push
jbe
stc
incb
inc
call
out
add
outsl
insb
imul
icebp
aaa
cmp
mov
sbb
pop
dec
loopne
xchg
rorl
out
push
stos
dec
or
cmp
subl
adc
ss
lea
inc
add
fstps
in
xlat
aam
dec
rcrb
add
sti
scas
mov
xor
and
test
sbb
mov
imul
push
cmp
jo
adc
repnz
inc
pop
test
dec
icebp
jnp
adc
inc
cmp
lret
bound
pusha
sbb
or
cli
mov
sub
sbb
ss
adc
cmp
or
sti
add
lods
cmpsl
add
sub
mov
push
cwtl
or
mov
adc
aam
lret
aad
sbb
repz
cmp
sbb
sub
push
jbe
mov
push
es
inc
inc
test
jno
mov
mov
pop
mov
mov
out
push
pusha
mov
in
sbb
add
or
cmp
repnz
pop
pop
or
ficoms
cmpb
mov
rcrl
lret
aad
or
divb
movsb
addr16
pop
pop
leave
mov
ret
inc
inc
cmpb
adc
mov
sub
cmp
mov
jmp
adcb
jge
lds
inc
aas
shll
dec
cld
test
data16
adcl
mov
add
mov
scas
pop
pop
cmp
and
fadds
adc
add
inc
add
das
sbbb
pusha
pop
pop
sahf
adc
iret
add
les
jne
lods
xor
cmp
sahf
bswap
loopne
in
stos
cld
aaa
mulb
mov
cltd
aaa
sbb
push
jg
sbb
ss
mov
data16
movsb
cwtl
xchg
cmpsl
aad
enter
divb
out
pop
cmp
sbb
add
or
fdiv
lods
out
pop
pop
push
xchg
pop
fdiv
lock
sub
mov
das
jmp
pop
dec
ds
jecxz
inc
pop
daa
test
push
js
cltd
pop
pop
int
jo
dec
dec
loopne
aas
mov
fildll
and
xchg
push
mov
int
push
inc
pusha
cmp
into
lcall
mov
into
push
dec
mov
cmp
jo
push
cmp
lcall
mov
jne,pt
mov
mov
in
out
mov
adc
mov
xor
es
mov
push
xchg
push
rorb
orb
jbe
pop
pushf
data16
mov
cmp
das
push
sub
adc
repz
out
adc
sbb
pusha
mov
add
jb
push
sub
adc
xchg
xchg
fcom
xor
shrl
insl
jecxz
out
pop
fs
in
loope
dec
outsl
lods
into
dec
or
nop
ss
lret
xor
call
into
mov
cmc
rorb
cmpl
ret
and
push
movsl
and
into
or
mov
sub
insl
cwtl
push
pop
pop
inc
int3
add
dec
inc
ficoml
mov
je
add
add
mov
sti
shrb
iret
into
push
out
jmp
xor
out
clc
jne
dec
dec
cmp
lods
insb
inc
fmulp
pusha
pop
pop
push
mov
dec
pop
std
cmp
sbb
pusha
gs
in
fisttps
or
xchg
aaa
sbb
jb
xor
arpl
push
dec
aad
pop
js
jl
pop
cmp
mov
aad
mov
jns
inc
lret
sub
fstpl
ret
les
push
cmp
sub
in
fstps
aam
movups
lret
outsb
mov
add
ljmp
adc
mov
shll
mov
scas
pop
push
xchg
mov
cmpb
mov
lods
test
jp
shl
jg
mov
or
sub
daa
and
movsl
inc
push
faddl
mov
sarb
loope
jo
and
aad
mov
int3
leave
inc
lds
out
in
cmpsl
lcall
sbb
cmp
dec
lcall
outsl
insb
out
xchg
cmpsl
shlb
decb
pusha
cli
mov
jmp
in
shlb
mov
xor
xor
mov
push
push
push
fdivs
test
mov
xchg
test
rcrb
pusha
stc
mov
daa
or
sub
mov
test
enter
stos
outsl
insb
in
mov
fwait
add
xorl
lret
pop
mov
outsb
rcrb
jecxz
xchg
push
movd
subl
cmp
ret
pop
xor
ret
js
xchg
mov
jecxz
out
test
sbb
sbb
push
xchg
pop
push
inc
fildl
add
xchg
es
push
stos
lds
repz
jp
fwait
add
in
push
cmpsb
pushf
dec
adc
rorb
ret
shlb
dec
lock
mov
je
adc
adc
mov
cmp
pop
shlb
fwait
jno
xchg
sbb
mov
xor
in
sahf
ljmp
or
inc
add
sub
ds
push
fadds
mov
lods
stos
xor
adc
pop
mov
xchg
add
std
jo
jecxz
out
jne
and
adc
dec
inc
inc
aad
xor
fsubs
arpl
xchg
add
mov
data16
movsl
cmp
pop
mov
les
jae
jecxz
inc
xchg
xlat
fsubrl
pop
pop
push
mov
ret
in
lahf
test
adc
rcl
int
sarl
xchg
mov
push
fwait
mov
pushf
dec
jae
cmpb
pop
stos
in
shl
cmpsl
push
adc
cmpsl
lods
cwtl
enter
iret
hlt
imul
pop
sbb
sahf
dec
push
xor
cmp
cmc
dec
and
pop
test
ljmp
mov
lds
adc
loope
push
adc
cmp
jnp
addr16
sti
xor
cmp
fiaddl
lret
loopne
mov
jl
xor
shll
add
push
iret
dec
lret
dec
hlt
ljmp
adc
pop
repz
aam
scas
dec
insb
imul
mov
nop
daa
inc
add
mov
pop
in
adc
dec
sbb
mov
xchg
ss
clc
cmp
xor
cs
mov
sahf
pop
jo
jmp
add
xchg
fdivrl
jle
push
sbb
scas
lock
mov
add
jns
jae
scas
jo
mov
and
mov
dec
jbe
dec
jl
jbe
cmp
subb
add
icebp
dec
and
insb
mov
jmp
push
push
subl
jle
inc
stos
mov
cld
cmp
ret
cmp
lahf
lcall
test
cli
insb
adc
scas
lods
ljmp
popa
dec
jae
std
mov
push
cmpsb
pusha
mov
pop
int3
xchg
das
rolb
dec
xchg
in
jmp
mov
roll
mov
stc
idivb
jmp
pop
push
cmpsl
test
xchg
aas
pushf
xchg
inc
push
inc
jp
gs
lahf
pushf
push
or
push
mov
xchg
cmp
mov
insb
test
pop
pop
movsb
icebp
sbb
jge
jle
push
push
sub
js
scas
jle
xchg
aam
pop
insb
push
xchg
mov
stos
rcr
mov
mov
xor
ret
int
pop
push
mov
add
sub
and
dec
dec
adc
ja
in
shl
cmpsl
movsl
sub
pushf
ret
push
testl
aam
div
pop
push
in
adc
js
jnp
push
iret
pop
xor
cmp
mov
pop
lret
int
push
sahf
ds
insl
sarb
mov
fcmovnbe
aad
packsswb
push
add
std
sti
aaa
and
cs
fneni(8087
or
pop
pop
lods
push
shlb
test
sub
cmp
dec
pop
or
in
sti
popa
imulb
outsl
and
xchg
xchg
add
push
push
jl
adc
pop
mov
test
and
out
xchg
pop
dec
sbb
mov
mov
cmp
rcrl
loopne
inc
insl
adc
cmp
or
push
test
xchg
fsubrl
pop
cltd
pop
adc
fadds
xchg
pop
in
mov
mov
xor
paddusw
jne
jae
or
neg
xchg
jmp
push
movsl
dec
sub
mov
mov
push
insl
movsl
sub
pushf
jecxz
xor
xadd
cli
jb
jl
ret
xchg
and
sub
int
cmpsb
or
incb
lods
mov
mov
jb
insb
imul
or
test
out
jns
aas
or
out
loope
push
aam
push
prefetchwt1
cmp
cmp
popf
pop
mov
jns
dec
mov
jno
movsb
jns
mov
movsb
mov
sarl
mov
jns
ljmp
ja
mov
cmp
idivb
mov
jecxz
xchg
push
push
push
lds
add
pop
mov
pop
adc
js
lret
aas
cmp
aaa
clc
inc
shlb
addr16
push
xchg
mov
cmpb
test
jmp
push
push
in
aam
aaa
cmp
psraw
and
addr16
loopne
cld
push
push
dec
xchg
lret
dec
int
out
mov
jecxz
mov
lahf
rclb
idivb
inc
ret
icebp
out
sbb
mov
pop
sbb
or
cmp
test
mov
jl
jae
pop
out
pop
imul
enter
or
pop
bound
inc
ljmp
xor
sub
sub
fisubrl
pop
push
push
rorb
daa
mov
mov
lods
and
das
xor
mov
xor
xor
lret
out
sub
mov
push
push
push
mov
addl
scas
outsb
fsubrs
ret
cltd
outsb
adc
mov
repnz
test
cmp
loope
or
push
adc
or
push
inc
xchg
push
hlt
je
popf
jne,pn
push
cltd
pop
xor
adc
pop
mov
ficoms
rcl
fistps
fldcw
xlat
mov
xor
dec
push
popf
jo
or
sub
and
push
xor
push
dec
enter
andb
mov
fcomps
jnp
jne
cwtl
cwtl
xchg
stc
xor
mov
in
jmp
adc
mov
movsl
cmp
aam
imul
xchg
xchg
xchg
in
cmp
sahf
and
cld
loop
out
lods
adc
push
sbb
xchg
adc
push
or
cmp
movsl
mov
es
sbb
sar
push
dec
mov
mov
lock
pop
in
adc
dec
dec
lret
enter
aam
xor
xchg
push
push
jl
rcll
sti
jg
aam
inc
sub
lods
imul
out
add
mov
into
jl
cli
lahf
inc
hlt
mov
sub
dec
dec
push
cmc
dec
adc
addl
daa
mov
bnd
sbb
cltd
dec
or
ds
paddw
ss
sbb
adc
faddl
dec
mov
or
xor
mov
shl
das
sub
popf
scas
in
inc
mov
or
jp
xor
dec
inc
jo
stos
test
movsl
adc
call
mov
sarb
xchg
and
lcall
adc
test
loope
loope
cmp
sbb
cmpsl
popa
lods
out
xchg
cmp
xchg
es
push
and
aas
cmp
gs
popa
sahf
mov
jnp
loopne,pn
ficoml
push
push
dec
pop
inc
js
das
sti
add
mov
fistps
or
adc
cmp
cmp
cmp
popa
and
dec
mov
idivb
leave
mulb
cmpsb
shlb
rcll
lret
xchg
test
hlt
lock
jns
sbb
push
jmp
cmp
call
int
out
push
lea
repnz
stos
test
scas
jp
cmpl
cld
scas
jo
xchg
jne
and
shr
shll
cld
lds
sbb
jne
outsb
pop
mov
cltd
xchg
inc
or
icebp
cld
clc
cmc
pop
pop
push
jmp
sbb
push
inc
insb
mov
mov
pusha
pop
rol
mov
jmp
divl
and
inc
sbb
mov
gs
cmp
dec
sbb
imul
cmpsb
xor
add
jl
mov
mov
sbb
xchg
lock
or
roll
cld
stc
mulb
push
pop
inc
nop
jnp
dec
or
pusha
inc
push
faddp
rcrb
lahf
je
insb
xchg
xchg
mov
mov
push
ljmp
adc
inc
daa
aad
jo
jb
mov
jmp
hlt
leave
mov
ss
in
mov
dec
jecxz
loop
into
fisubl
xchg
or
add
cmc
xor
xchg
xchg
jnp
pusha
xchg
push
push
fwait
dec
jbe
stos
mov
adc
movsl
sub
dec
adc
ror
stc
cmp
xor
sub
pop
std
jmp
sbb
xchg
iret
inc
enter
stos
xchg
push
insb
push
mov
fmuls
mov
lock
dec
inc
faddl
add
xorl
insb
sbb
pop
xor
sub
mov
jl
mov
imul
adc
into
cmp
mov
lret
sub
stc
stos
popa
sbb
inc
outsb
jo
mov
insb
imul
jmp
mov
pushf
cli
xchg
mov
les
jecxz
lcall
or
movsl
popf
sub
pop
lret
pop
loopne
nop
ja
jmp
cmpb
mov
cld
and
fcompl
loopne
rcll
aam
std
push
sub
cmc
movsl
push
jg
xchg
and
mov
dec
add
enter
or
fs
jns
jae
xchg
stc
fmull
pop
scas
mov
jp
in
outsb
cmp
mov
ret
lret
rorl
clc
xor
pop
arpl
push
jbe
inc
lods
adc
mov
jle
sti
push
nop
jg
cmpsb
ds
cmp
pusha
jmp
add
push
xor
mov
stos
push
sti
sahf
fcmovnu
xlat
aad
sub
add
mov
push
pusha
test
fbld
divb
pop
push
push
xchg
adc
jp
xor
insb
xchg
xchg
mov
imul
lret
jmp
mov
add
adc
loopne
sbb
rol
dec
or
popf
lcall
pop
out
insl
mov
in
subl
sbb
or
int
test
cmc
pop
mov
aad
das
sub
xor
mov
sbb
mov
in
decb
sti
or
sahf
push
adcb
mov
mov
push
inc
test
and
sbb
mov
mov
cmp
aam
imul
xchg
xchg
xchg
out
mov
loop
in
lods
cmpsl
aad
fcmovnu
fcom
push
lds
mov
xor
movsl
mov
fsubrl
push
push
mov
or
jg
lock
lods
test
mov
add
stc
dec
sub
jbe
hlt
and
pop
cmpsb
push
enter
lahf
ds
inc
jp,pt
fnsave
pop
into
loop
sbb
lcall
lds
inc
lods
and
aaa
cltd
out
push
test
xchg
je
je
mov
popa
rcl
insb
pop
xchg
nop
mov
jle
sub
test
fsubs
rcl
test
pop
rorl
cmc
cmpsl
bound
aad
mov
sub
cmc
cli
push
jl
je
fldl
mov
movsl
cld
dec
hlt
mov
sub
and
xchg
pushf
mov
xor
jnp
insl
push
mov
mov
sahf
mov
es
cmpsb
sub
mov
cmp
in
jle
sti
add
mov
fisubs
mov
or
outsl
mov
cmpsb
mov
gs
or
stos
iret
int3
push
test
jb
leave
stc
hlt
icebp
pop
sub
xor
push
dec
movb
repz
dec
jl
jb
inc
dec
andb
repnz
icebp
ret
sbb
sbb
mov
or
daa
sub
jno
xchg
ja
stos
popf
jp
mov
push
dec
div
xchg
in
or
test
push
arpl
leave
iret
in
shll
push
bound
cmc
mov
add
and
jle
xchg
xchg
in
mov
stos
out
cmpsl
cli
xchg
inc
add
cmp
fisubs
int3
or
jmp
mov
popa
arpl
mov
pushf
lcall
xchg
lcall
in
lcall
bound
add
mov
flds
jnp
mov
mov
add
mov
std
mov
jecxz
stos
pushf
icebp
mov
ret
decb
ss
jge
xor
jns
cli
repz
push
jecxz
sub
sbb
jae
xchg
pop
adc
cmpsb
jo
push
push
ficompl
stos
movl
popa
stos
sub
jbe
inc
pop
rcrl
mov
mov
rol
pop
rorl
push
or
or
pop
addl
loop
jmp
adc
pop
scas
aas
jge
or
jl
movl
aad
loop
mov
pusha
int
loopne
in
or
mov
pop
arpl
gs
push
dec
test
inc
aaa
adc
jns
cmp
shl
xchg
repnz
mov
sar
cmp
cmp
xchg
sbb
imul
in
inc
add
dec
add
lock
js
mov
sub
jp
in
jg
fildl
and
mov
mov
into
lret
inc
shr
inc
inc
inc
popf
cs
outsb
or
movlps
and
sbb
inc
cmp
ret
lretw
iret
pop
mov
inc
sbb
ret
mov
or
and
fiadds
jnp
ret
jle
cmp
stc
ret
xor
imul
xchg
fcomps
loope
nop
lea
mov
mov
fsts
push
into
or
add
das
add
pop
pop
dec
faddl
adc
repz
outsb
stos
test
sub
pop
lea
iret
mov
mov
inc
push
sbb
fldl
test
mov
insl
push
push
aad
mov
adc
sarb
ljmp
aad
xchg
add
pop
cmpsl
clc
jnp
lea
push
or
bound
adc
ret
xchg
nop
pop
out
scas
lods
lcall
cmp
lds
sarl
jecxz
pop
arpl
mov
mov
xor
out
call
xchg
js
les
dec
out
inc
stc
insb
and
xchg
ljmp
xor
movsl
jns
mov
clc
and
movsl
fs
pop
and
mov
sti
mov
iret
sbb
push
cld
loop
or
or
mov
mov
loope
and
mov
sti
rcrb
std
mov
sbb
jge
jae
adc
iret
xor
shll
sbb
fs
jmp
pusha
pop
adc
rolb
ret
insl
dec
push
scas
imul
mov
idivb
mov
ljmp
mov
or
aaa
xor
push
xchg
dec
in
lahf
xor
test
jb
cmp
xor
rcr
pop
lahf
inc
adc
push
rcr
add
insb
repnz
sbb
adcb
sarb
enter
jae
insb
iret
enter
xchg
stc
push
sti
inc
sahf
cmp
mov
aam
movsb
aas
loop
push
adc
mov
psllw
mov
pop
pop
or
xchg
mov
mov
stos
and
inc
dec
out
insl
testl
clc
cmc
pop
pop
xchg
pushf
popa
push
mov
mov
dec
jb
dec
scas
add
jne
jge
lret
daa
outsl
mov
xchg
shlb
dec
jmp
add
push
mov
and
adc
lcall
pop
ror
arpl
orb
xchg
icebp
ret
inc
lods
sbb
push
roll
imul
inc
iret
xor
cs
cmp
mov
lds
subb
out
sbb
mov
lret
sar
ja
inc
add
sub
and
fistps
dec
adc
sbb
shrb
cmp
lahf
pushf
push
push
movl
adc
sub
mov
in
jmp
jp
adc
xor
jns
mov
xor
fnstcw
mov
loop
mov
and
or
adc
inc
in
dec
add
jnp
sub
lods
popl
sub
mov
xchg
push
dec
mov
clc
std
fists
ja
jmp
ficomps
dec
sbb
mov
push
push
push
dec
and
adc
cli
inc
inc
inc
mov
cwtl
dec
jae
fldenv
pusha
int
rcll
cmp
or
mov
sahf
pop
fcom
test
cwtl
lods
jp
xor
push
jl
and
shl
arpl
fists
lea
repnz
test
dec
dec
test
jp
int3
div
pusha
add
je
lret
rcrb
xchg
ss
mov
push
arpl
push
je
cld
mov
in
stos
fwait
push
fldl
push
push
or
mov
popf
mov
popa
fistl
orb
out
pusha
mov
fs
mov
adc
pop
pop
aas
mov
xlat
inc
cmp
ds
js
negb
out
mov
pop
aas
int
mov
jl
jnp
je
fwait
add
in
push
xchg
jp
dec
xchg
int3
leave
pop
lock
dec
icebp
pop
ret
sbb
pop
cltd
aad
insl
or
or
xor
mov
gs
int3
cmp
mov
and
mov
and
dec
flds
jle
dec
or
xor
test
fneni(8087
ret
pop
mov
sub
jle
cmp
adc
js
cmpsb
mov
adc
xchg
addr16
add
sub
sub
and
pushf
nop
dec
mov
ds
jae
outsb
fildl
push
push
mov
and
mov
hlt
sub
nop
xchg
ja
adc
jnp
push
sub
js
lcall
xchg
push
lahf
dec
in
jmp
cmp
out
scas
pop
jecxz
adc
rcl
lret
inc
push
cmp
mov
addr16
fwait
jge
pop
push
test
mov
mov
imul
clc
aas
inc
es
icebp
out
jmp
cwtl
pop
inc
dec
sbb
dec
inc
mov
shlb
push
cmp
aas
pushf
cwtl
or
mov
std
mov
adc
sub
cmp
push
pop
cmp
push
pcmpeqb
mov
lods
or
aam
push
sarb
inc
mov
jbe
add
push
insl
jbe
aam
and
jnp
rclb
sub
mov
in
sub
and
cli
inc
imul
je
in
jbe
fldl
xchg
add
mov
and
mov
mov
inc
nop
push
out
add
or
scas
movsl
jns
stos
cmpsb
sbb
and
popa
pop
fsubs
or
or
mov
xchg
test
flds
sbb
pop
pop
xor
jae
es
push
push
dec
dec
shll
scas
je
outsb
xorb
mov
jne
int
sbb
mov
out
dec
xor
adc
leave
sbb
cmp
sarb
push
rorl
mov
icebp
mov
addr16
loope
fcmovu
aad
sbb
or
cmp
mov
aad
or
push
push
call
mov
test
daa
pop
test
mov
sarl
addb
pop
mov
jmp
js
and
negb
insl
mov
repnz
jb
insb
rcl
cli
out
fcoms
mov
mov
sub
data16
push
clc
and
push
lea
xchg
outsb
sub
pop
pop
bndldx
mov
lcall
adc
push
mov
or
add
sbb
xor
mov
xor
cmp
ja
jne
es
dec
fidivrl
out
fwait
adc
lret
sub
jbe
cltd
out
jmp
lcall
ja
sbb
cmp
ror
push
imul
push
dec
adc
mov
mov
jmp
in
ljmp
or
aaa
xor
sub
jo
bound
adc
lock
cmpl
pushf
test
scas
push
test
int3
lret
enter
std
inc
cmp
lahf
dec
sbb
push
push
inc
inc
inc
shrb
aam
std
or
pushf
add
aas
orl
sub
inc
pop
sbb
lea
inc
out
dec
add
jno
mov
popa
adc
lea
ja
stos
push
mov
xchg
push
int
sbb
cld
push
sub
pop
aas
or
testl
pop
loop
push
jae
iret
xor
or
dec
repz
or
inc
dec
xchg
cmp
lock
ss
sub
loope
arpl
insb
into
jae
mov
xor
hlt
mov
ljmp
aas
adc
jo
inc
add
test
insb
shll
inc
mov
rorb
jne
scas
lods
aam
or
popf
push
xchg
and
es
mov
push
sbb
cs
popf
mov
mov
lods
stos
inc
enter
sub
test
jp
idivl
aam
movsl
enter
mov
lock
sbb
jnp,pt
xchg
aaa
xchg
sub
xor
imul
push
fldl
cmpl
subb
mov
out
inc
add
jae
xor
sub
popf
cmpsb
and
popf
sub
aam
incb
dec
out
stos
jno
sbb
test
pushf
into
int3
leave
das
jmp
and
cmpsl
bound
cmc
outsb
addr16
out
push
adc
cltd
cltd
or
idivl
jg
inc
push
int
fs
sbb
mov
out
pop
mov
push
or
push
jae
adc
aaa
xor
ljmp
scas
push
push
lret
popa
dec
mov
jbe
mov
fsubr
fcmovnu
push
cli
jle
fld
add
sub
cli
xlat
out
sub
fisttpll
lea
sbb
cmp
jbe
addr16
mov
lret
sub
dec
imul
jae
jmp
jb
cmp
outsb
xchg
xor
out
pop
bound
out
les
imul
movsl
loopne
xor
rcl
int
fildll
sti
jne
and
mov
lret
push
dec
dec
inc
int
lods
jp
cmpsl
jno
mov
pushf
adc
popf
leave
vpsrld
repz
push
fistpll
pop
popa
jl
popf
mov
dec
mov
in
jbe
pusha
pop
lcall
cmp
or
sub
fcom
cmp
jno
xor
xor
and
push
push
mov
xchg
or
movsl
in
xor
rorb
pop
ret
loopne
adc
pop
mov
and
push
mov
inc
stos
mov
out
ljmp
jecxz
xlat
mov
sub
shrl
xor
icebp
out
in
pop
and
mov
inc
data16
inc
inc
insb
xchg
xchg
fbstp
xchg
imul
fwait
pop
rcll
ljmp
mov
out
adc
cmp
inc
or
nop
cmc
in
sub
mov
and
mov
aam
fcmovb
cs
mov
pop
loop
adc
js
rcl
cld
mov
and
cmc
jl
in
adc
dec
pop
sbb
inc
mov
or
das
jbe
mov
arpl
les
and
mov
sbb
das
aad
data16
push
mov
aaa
xor
fwait
inc
inc
or
ror
push
mov
jle
adc
sbb
lods
adc
xlat
dec
xchg
pop
or
lret
sub
test
cmpsb
sbb
jne
dec
je
test
cmp
movb
mov
xchg
lea
mov
in
jmp
ficomps
dec
je
or
sub
inc
push
pop
push
shll
pop
pop
int
mov
xlat
xor
cmp
dec
push
mov
ror
or
xor
xchg
jge
add
cmp
ficoml
inc
int3
cs
dec
inc
mov
add
je
nop
xchg
mov
ror
int3
xor
mov
jmp
xchg
pop
ja
dec
les
xor
mov
mov
fadds
cmp
ret
pop
and
mov
out
pop
lcall
pop
add
cmp
lods
push
pop
in
sub
stos
cs
jne
lods
fnstcw
mov
xor
cmp
sbb
gs
ficoms
cmp
cmp
dec
push
fs
sbb
cltd
xchg
xchg
adc
mov
mov
push
fisttpll
jnp
test
cmp
mov
lahf
inc
mov
enter
mov
cmc
xchg
in
fstps
or
popa
xor
cmp
imul
daa
mov
mov
mov
das
mov
mov
scas
pop
loop
adc
js
rcl
xor
mov
imul
insl
inc
jb
mov
inc
int3
outsb
stos
cmp
data16
popa
fidivs
mov
ret
shr
cld
popf
mov
adc
mov
nop
dec
adc
add
cmp
cmp
popf
xor
negb
mov
add
pop
loope
or
into
xor
or
jmp
and
imul
sub
push
popf
inc
dec
aam
sbb
js
sub
mov
jnp
lret
out
sbb
es
popa
mov
inc
inc
mov
aas
cmp
aaa
jg
sub
inc
adc
adc
int3
mov
mov
mov
and
test
sbb
rorb
ja,pn
imulb
pop
mov
gs
xchg
mov
mov
xlat
cld
adc
jp
lret
hlt
mov
popa
and
dec
je
dec
push
adc
test
jno
aas
and
xor
test
mov
aad
shl
jp
ret
movsb
mov
frstpm(287
dec
dec
fsubl
adc
or
inc
add
adc
xor
loopne,pn
push
mov
or
jns
ret
mov
and
adcl
ret
or
sbb
test
sub
adc
and
lods
mov
mov
cmpsb
sub
jnp
fildl
and
push
xchg
sbb
lds
mov
in
jae
clc
fmull
popa
add
cmp
pop
addl
cmp
sub
pop
addr16
in
or
test
add
mov
scas
xor
fidivrl
mov
mov
cld
and
jnp
sbb
mov
stos
stos
cmp
out
dec
lock
lahf
xor
dec
adc
fwait
dec
add
imull
push
xor
push
sahf
fcomps
push
enter
test
dec
mov
loopne
rcll
fists
mov
aas
mov
mov
loop
nop
sbb
mov
and
fwait
shlb
pop
jbe,pn
mov
xchg
in
mov
stos
xchg
push
pusha
sub
fdivrs
xor
test
fldcw
mov
jo
mov
dec
roll
popf
jp
je
sub
out
xchg
jl
sbb
mov
inc
xor
fwait
and
clc
sbb
insb
mov
cmp
ljmp
jecxz
xchg
cmp
addl
or
ljmp
gs
mov
pop
add
dec
mov
and
fldl
mov
stos
lods
out
int3
scas
sarl
ss
movsb
lock
rclb
das
lds
add
sub
or
jo
les
imul
sbb
sti
in
push
ret
repnz
dec
sub
ja
insb
lcall
adcb
stos
mov
or
xchg
inc
push
push
push
dec
add
pusha
andb
jbe
fildll
popf
dec
adc
xor
cmc
pop
pop
test
fsubs
mov
jns
lea
iret
pusha
repnz
jmp
mov
lahf
pushf
lcall
cmp
dec
clc
mov
daa
out
or
add
jnp
xchg
repz
adc
mov
enter
mov
hlt
inc
inc
icebp
cmp
scas
sbb
pop
lds
fcoml
cmp
push
add
stc
push
sti
push
sub
jnp
sbb
xchg
dec
xor
rcrl
scas
fistps
fst
int
movl
mul
ja
fistps
adc
dec
ret
jno
cmp
jne
in
scas
icebp
pop
out
inc
lock
les
sti
mov
stos
mov
icebp
mov
pop
sahf
pop
add
jbe
jnp
cmp
xor
and
decb
fwait
cmp
clc
orb
mov
je
sbb
lods
pop
mov
pusha
pop
pop
lods
mov
mov
push
sbb
cmpb
mov
out
xlat
inc
in
je
adc
add
mov
mov
pop
mov
cmp
jle
sbb
sub
mov
and
mov
jle
jecxz
push
loopne
xor
sbb
loop
aad
inc
xlat
and
dec
pop
fsts
adcl
stc
out
cs
sbb
push
mov
rolb
mov
cmpsb
push
insl
popf
cli
fwait
jae
push
push
fucomp
int
std
push
mov
notb
inc
fcompl
adc
orb
shll
dec
pop
mov
repz
fsubs
dec
int3
xchg
stos
addb
mov
mov
and
mov
adc
psubusw
push
je
or
jb
jne
pop
mov
int3
xchg
addr16
cmpb
in
clc
test
shr
mov
pop
out
rcr
out
std
cli
cmp
loopne
sub
sub
dec
inc
cld
jnp
jo
je
in
je
addr16
div
cmc
test
mov
mov
jb
adc
push
or
mov
xor
xor
xchg
fidivrl
test
sbb
fucomi
cltd
lea
dec
icebp
mov
ja
fwait
xor
call
push
add
mov
mov
movsb
adc
lcall
in
pop
insb
stos
xor
cmp
push
push
subb
push
mov
xor
addr16
nop
int
inc
cmpsl
xchg
mov
adcb
mov
mov
out
adc
sahf
cs
pop
mov
ss
fs
jle
and
scas
push
inc
lret
mov
andb
scas
sub
and
repz
push
hlt
xor
div
stc
xorl
icebp
jns
or
jl
rcrb
cmc
mov
iret
int
pop
pop
mov
sbb
ret
ret
mov
out
in
jmp
inc
mov
jle
outsb
cmp
ret
mov
push
mov
mov
ja
in
sbb
fcmovbe
ror
int
aaa
fsubl
out
and
mov
jmp
push
dec
mov
mov
push
cmp
je
xlat
stos
repnz
mov
ror
int3
xor
lret
fdivs
add
hlt
outsb
stos
pop
popf
fiadds
test
ret
sti
int3
cmp
outsl
insb
scas
and
xchg
adc
mov
in
xor
call
ss
or
or
std
addb
push
and
pop
pop
push
lcall
stos
cmp
popf
ljmp
int
mov
cmpl
lock
jne
cld
lret
pop
sbb
pop
lea
rolb
jne
outsb
cmc
mov
cltd
xchg
xchg
inc
add
pop
xor
imul
mov
xorl
ja,pn
mov
pop
pop
adc
cmp
lds
push
out
xor
cmp
xor
adc
into
push
jl
cmc
jmp
cmc
stos
push
pop
fldenv
dec
outsb
push
push
into
or
jo
sahf
shlb
stos
test
cltd
clc
adc
mov
jmp
iret
ret
jmp
loope
jne
data16
jp
mov
xchg
xor
popa
in
mov
pop
sbb
mov
ret
sbb
sbb
arpl
xchg
jbe
insb
xchg
sub
icebp
inc
sub
arpl
mov
and
fsubrl
cmp
adc
mov
pop
lods
pusha
pop
lret
enter
push
mov
pop
out
in
sub
and
jle
push
movsl
inc
mov
inc
mov
jmp
jle
xchg
stc
fcompl
and
and
es
sbb
dec
inc
adc
add
push
xor
sub
mov
dec
jp
mov
jge
mov
add
xor
shll
jp
sbb
cld
stc
lea
push
xchg
sti
xlat
je
push
rorl
int
out
icebp
mov
stos
test
pop
push
dec
adc
rcl
int
mov
mov
or
or
push
jp
jo
inc
cmp
call
mov
adcb
mov
mov
jl
xchg
sbb
int
mov
push
jno
push
jae
mov
xchg
mov
insl
push
push
dec
aad
idiv
xchg
jle
jbe
filds
adc
leave
enter
mov
movsl
outsb
jae
and
lret
inc
inc
stos
lods
ror
cmpsb
mov
aad
lea
add
mov
outsb
pusha
jne
jecxz
or
rolb
push
push
inc
xchg
aaa
cmp
xor
mov
rcll
xchg
out
scas
sbb
inc
cli
push
xchg
pop
out
or
add
pop
outsl
das
sub
jne
pop
push
test
mov
call
sahf
scas
out
push
sub
iret
lret
dec
mov
push
add
and
sub
cli
addr16
mov
push
cmp
push
pushf
cwtl
xchg
sbb
arpl
ret
and
mov
fucomp
and
inc
mov
mov
cmc
add
add
xchg
sarl
iret
sbb
push
push
dec
push
and
or
adc
std
cmpsl
add
cmp
dec
pop
or
jl
xchg
cld
stc
testb
and
pop
sub
sbb
adc
inc
inc
repz
jmp
int3
int3
push
or
fcmovne
ret
jecxz
sbb
cmpsb
outsb
or
and
decl
lea
adc
pop
xor
xchg
xchg
push
pop
ret
pushf
mov
mov
loope
cmc
test
fsts
push
cmc
or
add
cmc
xor
add
inc
and
jle
xchg
inc
mov
je
sahf
and
sbb
xchg
ror
enter
mov
mov
jno
pop
jecxz
mov
ja
mov
cmp
pushf
in
das
shl
lds
fwait
and
or
fsts
ret
imul
mov
fcmovu
fmuls
pop
jo
mov
inc
cmp
das
in
je
pusha
pop
mov
mov
test
mov
fcos
sahf
adc
ss
leave
lsl
js
xor
icebp
js
ljmp
adcb
dec
test
insl
in
mov
inc
sbb
adc
xchg
mov
inc
xorb
push
out
out
jbe
inc
insl
adc
inc
and
mov
or
cmpsl
fldcw
pop
pop
loopne
nop
ja
in
rolb
scas
adc
in
xor
rcl
rolb
ljmp
lods
xchg
aas
xor
daa
fstpl
mov
pushf
pushf
inc
cmp
movsl
jmp
test
notl
mov
roll
loop
push
sub
jmp
ds
adc
dec
xor
jl
jmp
dec
lds
mov
rcl
push
xchg
mov
call
repz
inc
push
and
mov
into
xlat
adc
add
inc
cmp
xor
fs
pop
adc
lahf
push
mov
js
das
imul
fildl
leave
ds
adc
in
inc
popa
ss
cmp
adc
sbb
dec
sub
lods
ds
outsb
ret
push
adc
cwtl
xchg
mov
idivl
push
sarb
out
inc
cmc
data16
adc
dec
inc
cmp
mov
scas
bound
nop
repnz
lret
mov
and
pop
and
decb
pop
add
sbb
das
xchg
xchg
daa
dec
push
sbb
dec
jbe
stos
mov
dec
jbe
stos
cmpsl
or
lahf
enter
idivl
lcall
pop
arpl
dec
dec
sub
fistl
movups
aas
cmp
lock
push
arpl
cmpsl
dec
pop
or
mov
add
aas
out
cmpsl
loopne
in
in
or
cmp
arpl
pop
push
mov
test
enter
xlat
push
pop
sahf
shlb
xor
xor
pop
xor
mov
pop
mov
xchg
add
mov
imul
cmc
or
inc
int3
ret
and
out
push
fisubs
adc
add
outsb
out
xor
xchg
pop
out
push
jge
xrelease
mov
scas
adc
pusha
cmpsb
in
fiaddl
rcrl
or
std
arpl
clc
mov
xor
xchg
rcr
push
pop
push
push
mov
in
jns
jnp
sahf
and
cld
cli
cli
mov
icebp
stc
div
fs
push
lcall
ret
rclb
inc
inc
scas
stos
test
lods
aaa
mov
arpl
fcomps
pop
cltd
nop
mov
mov
ljmp
nop
rclb
jl
ja
mov
das
inc
es
rcll
rorl
int3
pop
xchg
jge
jle
loop
mov
cmp
push
int3
repz
daa
cmp
outsb
fidivs
out
sbb
lret
nop
inc
test
inc
lods
jnp
mov
stos
imul
lahf
pushf
cltd
or
fwait
sub
mov
bound
lds
push
dec
sbb
xorb
mov
mov
imul
fwait
pop
sbb
mov
stc
pop
cmpb
jmp
xlat
aam
mov
testl
xchg
cltd
sahf
cld
and
mov
andl
cmpsl
movsb
adc
ja
xchg
shll
sbb
xchg
push
hlt
icebp
push
data16
insl
dec
cltd
pushf
sbb
inc
mov
test
stos
imul
aad
roll
fs
shr
sti
shlb
dec
inc
mov
aad
or
push
cmp
fwait
popa
mov
pusha
mov
push
jle
mov
xchg
inc
scas
sub
orl
mov
ror
and
jp
lock
popf
mov
mov
add
xchg
cmp
jmp
and
mov
icebp
ret
sbb
loop
jecxz
or
pop
push
adc
loopne
inc
aas
scas
je
mov
gs
inc
ret
xchg
mov
add
xchg
xorl
pop
inc
sar
push
insb
inc
add
jae
cmc
xor
jne
push
subl
cmp
je
sub
dec
adc
ss
call
popa
data16
call
add
adc
mov
inc
mov
out
data16
adc
jecxz
test
mov
in
sub
dec
dec
xor
inc
imul
xchg
or
xchg
cmp
xor
sahf
sub
insl
bound
pop
enter
pop
jle
js
loop
xchg
in
loope
sahf
and
int3
repz
cmp
and
xchg
push
jg
sbb
ss
dec
outsb
imul
xchg
mov
xor
fwait
mov
das
and
push
cmc
dec
sub
adc
add
inc
lds
pop
imul
pop
push
mov
addl
bound
fcomp
imul
add
js
sbb
call
rcr
push
pop
push
push
mov
in
jns
xor
xor
mov
xchg
stc
cld
int
inc
sub
mov
push
mov
hlt
xchg
sub
lret
mov
adc
jae
cltd
shll
mov
adc
mov
cmpsb
scas
call
aas
popa
or
out
insl
and
fisubs
xchg
aam
jmp
dec
lret
jg
sahf
mov
out
push
sbb
mov
jns
and
mov
sub
and
inc
test
shrb
push
dec
dec
inc
push
or
test
xchg
je
mov
mov
cmp
mov
mov
cwtl
stos
pop
adc
jne
enter
pushf
pop
je
sub
out
sbbl
xchg
cld
mov
jecxz
or
mov
sbb
aad
cld
stc
add
call
and
push
push
leave
pop
dec
inc
subl
outsb
ficompl
pop
jno
pushf
cltd
add
xor
into
cld
cmc
repnz
jae
arpl
dec
hlt
jge
adc
pop
adc
add
movb
cltd
cmp
pop
fwait
loop
roll
sbb
add
xor
push
sar
addb
adc
xor
sub
xor
push
mov
je
mov
and
sub
sahf
popf
fiaddl
sub
mov
icebp
out
mov
sbb
ljmp
inc
jnp,pt
int3
outsl
insb
imul
sti
add
xchg
push
push
sbb
aam
cwtl
push
mov
dec
push
push
push
js
sbb
adc
or
mov
loope,pn
xor
xchg
push
push
xchg
mov
jl
adc
mov
push
push
fmul
sti
andl
sti
mov
xchg
sti
push
pop
push
rorl
adc
jp
mov
loope
adc
shrb
ljmp
mov
cld
dec
pop
pop
sbb
mov
mov
out
cwtl
dec
sub
je
icebp
or
add
xchg
ret
stos
nop
pop
repz
lods
sub
in
push
push
lret
mov
cli
js
xor
gs
leave
mov
mov
cmc
fisubrs
out
push
into
or
dec
mov
icebp
js
push
push
stc
imul
dec
mov
jo
inc
icebp
mov
lret
in
dec
jge
mov
cmpsl
lret
int
cmp
out
sbb
adc
inc
pop
sbb
dec
ret
bound
mov
cmc
or
inc
out
fs
push
arpl
push
jge
repnz
fs
paddusw
cmp
cmp
mov
add
lcall
dec
dec
jbe
stos
mov
and
sbb
push
sub
aas
inc
cli
vcvtsi2ss
ret
jmp
pusha
dec
dec
mov
ja
and
cmp
in
mov
lods
int
in
xchg
in
add
negl
push
call
lcall
insb
jo
mov
xor
clc
sbbl
push
push
lret
push
cmp
mov
sub
push
sbb
fcmovnu
aad
out
loopne
sub
std
push
insl
cs
mov
xchg
xchg
mov
push
push
jl
into
fs
cmp
test
int3
unpcklps
xchg
xchg
mov
fcomip
ret
mov
jmp
xor
dec
add
sub
xor
test
lods
push
loop
mov
rorl
mov
test
aas
adc
inc
addb
pushf
jecxz
das
pop
add
rorb
dec
dec
mov
jp
das
mov
xchg
lahf
movsb
xchg
mov
and
xor
arpl
dec
cmpl
imul
cmp
rorl
jnp
lcall
popf
fidivrl
or
in
movsl
fcmovnbe
aad
cmp
dec
cmp
xor
sahf
xchg
inc
pop
and
ja
or
out
aas
lea
dec
test
mov
xor
add
and
xor
cmp
and
and
fcmovbe
jle
dec
xchg
xor
dec
cmp
jno
and
cmpsb
adc
scas
lret
inc
mov
cmpsb
push
mov
sub
jle
add
or
jb
test
lcall
sbb
aam
cwtl
adc
mov
cs
pop
lahf
inc
inc
aas
ds
ds
mov
jo
sti
stos
mov
xor
daa
adc
test
dec
dec
hlt
inc
cmpb
xchg
jb
insl
and
pop
sub
or
clc
cmc
jl
push
sbb
or
les
lds
cmp
jae
test
frstor
out
xchg
xchg
test
test
rclb
jmp
das
cmc
mov
push
cwtl
bound
or
inc
lds
or
in
pop
pop
push
push
fisttpl
sti
ds
mov
stos
xor
cmp
decl
mov
aas
cmp
mulb
test
and
and
cmp
test
mov
push
rcl
shlb
lods
xchg
xchg
inc
xchg
aas
outsl
aas
ret
inc
icebp
not
jne
cmp
jbe
inc
inc
in
and
or
and
inc
call
in
push
aad
ret
fistpll
outsb
cmp
cmpsl
sbb
das
adc
mov
inc
mov
jne
cmp
je
push
test
push
frstor
inc
lds
int3
ja
xchg
rcrb
pop
sub
xchg
hlt
sbb
pop
in
adc
out
out
out
insb
sbb
pusha
bound
repz
push
sub
jno
nop
xchg
xchg
sti
cmc
cmp
sarb
scas
or
push
ficoms
mov
add
and
js
loop
addr16
pop
push
dec
fstpt
jg
add
das
jb
stos
cmpsl
movsb
lahf
sub
nop
pmullw
ret
div
out
push
movsl
mov
push
sbb
pop
mov
sarl
jb
negb
push
aam
movsl
clc
inc
mov
ret
push
inc
sub
fwait
push
fucomp
push
xchg
aam
or
push
cmp
ja
imul
dec
rorb
les
mov
jecxz
jbe
sbb
stos
cld
dec
nop
push
or
stc
cmp
push
mov
sbb
dec
enter
cmpb
les
mov
or
int
ss
in
clc
cmc
bnd
andb
jns
or
inc
cmp
repnz
jecxz
push
inc
enter
iret
in
inc
pop
ret
sbb
and
outsl
cmpsl
scas
hlt
jo
add
js
aaa
xor
jo,pn
mov
rorb
sub
test
cmpsb
xchg
fcmovnb
call
inc
lret
insb
xor
xchg
pop
sub
mov
setnp
xchg
pop
cmp
adc
jno
out
imul
cmp
jmp
dec
jmp
jmp
cs
push
adc
inc
xchg
jae
mov
sbb
push
pop
push
mov
cmpl
scas
lods
ds
adc
push
cmp
out
mov
push
mov
cmp
push
push
into
or
sarb
jge
jb
insl
xlat
aam
fdivl
or
mov
lret
fdivrs
sub
pop
cwtl
popf
pop
and
pop
subl
push
dec
inc
xchg
sahf
lock
pushf
in
xchg
jno
fs
cmp
testl
xchg
xor
mov
adc
hlt
loop
fsts
sbbl
sub
xchg
rcl
cmc
pop
push
push
mov
pop
out
jbe
fistps
and
cmpsl
mov
stc
ror
leave
xor
div
icebp
mov
pop
out
push
push
push
dec
adc
inc
inc
jnp,pt
js
loope
adc
mov
dec
movsl
shl
cltd
sbb
mov
pop
and
lahf
cmc
adc
jp
or
imul
cs
xchg
mov
in
xchg
lea
adc
mov
and
loopne
sahf
cmp
mov
aad
sti
clc
cmc
pop
icebp
lods
sub
and
push
dec
loope
mov
xchg
sahf
jns
lock
daa
ljmp
or
sarl
negl
or
mov
cwtl
aaa
mov
cmp
pop
sbb
test
xchg
test
lods
adc
mov
scas
adc
sub
fcom
cmp
loope
pop
aaa
in
jnp
or
repz
and
fs
sub
mov
jns
test
xchg
aad
ret
cmc
fisubrl
pusha
mov
pop
mov
nop
sbb
add
addl
outsl
mulb
cltd
or
enter
es
es
leave
jno
sub
out
xchg
pop
adc
arpl
stc
cmp
cmp
mov
lea
push
mov
mov
clc
push
fcmovbe
loopne
addr16
popf
jns
and
ss
xor
pop
add
and
dec
dec
fiadds
lret
insl
daa
outsl
movsl
sbb
lahf
and
sarl
xor
mov
repnz
inc
sbb
pusha
pop
dec
icebp
jnp
adc
loope
cmp
jae
mov
and
cwtl
xchg
pop
cli
mov
jne
mov
sbb
lock
adc
mov
sahf
add
fs
pop
and
push
push
dec
lock
jle
mov
pushf
test
mov
xor
cli
and
push
push
movsb
sub
test
mov
dec
mov
mov
leave
push
push
cmpsb
shlb
ret
xchg
xchg
or
sub
sbb
cmpsb
call
inc
adc
or
mov
aaa
mov
bound
outsb
mov
or
mov
incb
mov
jno
cmpsb
jecxz
sbb
xlat
aam
hlt
incb
add
gs
push
cltd
sahf
fsubl
pop
pop
test
lahf
lods
ret
test
aad
sub
movsl
mov
sar
movsb
sbb
pop
pop
cmc
repnz
push
dec
jo
dec
xchg
sbb
push
dec
shlb
aas
cmp
call
shll
pop
lcall
ret
cmp
in
jo,pn
jmp
adc
sub
fcmovbe
adc
sbb
das
aaa
xor
xchg
cwtl
sub
pop
lcall
mov
pop
mov
mov
fcmovnu
add
cld
mov
jbe
mov
sub
push
and
jge
push
movb
and
scas
and
mov
pusha
outsb
nop
nop
lea
mov
and
jecxz
xor
sbb
jg
sbb
xor
cs
ficomps
cmp
inc
mov
xchg
stos
or
or
cld
rcl
sbb
fdivrp
pop
push
cmc
xor
call
inc
push
push
dec
pop
or
pop
mov
jns
jo
add
mov
xchg
pop
iret
lret
add
sti
clc
pop
and
push
cmp
pop
pop
xchg
push
test
int
ljmp
dec
mov
pusha
pop
add
xchg
lea
xchg
mov
sub
iret
mov
sbb
outsl
mov
loope
sub
std
mov
sub
sub
pusha
inc
sub
shlb
mov
mov
test
jecxz
push
sbb
int3
leave
pop
lcall
adc
daa
mov
mov
add
ljmp
pop
sub
cltd
push
imul
lret
cmp
and
push
mov
repnz
mov
popf
add
jp
cmpsb
or
fcompl
ret
push
mov
xchg
jge
loope
mov
cmp
das
aam
aaa
rcl
ljmp
fisubs
pop
push
push
mov
dec
jo
in
jns
ljmp
fnstcw
dec
adc
es
push
jno
cld
push
mov
adc
and
inc
fwait
mov
adc
lods
adc
mov
push
fstpt
data16
test
xor
xchg
or
and
addr16
sahf
push
fcom
test
xchg
dec
push
arpl
sub
fcompl
jmp
in
jg
call
test
movb
dec
pop
int3
leave
xor
jb
div
xchg
popf
bound
push
dec
leave
add
jnp
jne
xchg
sbbb
into
jb
add
outsb
xor
mov
xchg
sarb
xor
lods
mov
xor
imul
push
jge
icebp
movb
mov
cmpsb
subb
loopne
fs
sti
mov
inc
add
sub
jb
pop
lahf
movsb
loop
and
pop
mov
xor
xor
cmp
jno
stos
movsl
movsb
mov
ror
dec
test
or
sti
clc
cmc
jl
pop
fwait
mov
pop
fidivrs
dec
je
mov
lahf
insl
xor
popaw
pop
jb
mov
xor
mov
out
fbld
in
incb
add
xor
and
or
mov
xor
jle
test
rorb
jb
mov
hlt
icebp
out
jne
push
xchg
cltd
push
sbb
push
jg
les
dec
inc
rorb
addb
pushf
push
push
mov
xor
enter
fsubs
ljmp
adc
pop
inc
inc
insb
cmp
repz
imul
push
pop
pop
aad
jle
pop
dec
mov
mov
lods
jae
jecxz
fnsave
xor
xor
sub
clc
jae
pop
mov
push
pop
push
cmpl
jbe
xrelease
mov
std
pop
data16
leave
js
jo
jae
repnz
pop
jle
out
mov
adc
mov
mov
aad
outsl
insb
push
test
push
mov
or
mov
lods
jmp
loopne
sbb
flds
xchg
jne
or
jnp
add
xor
and
push
push
int
jle
daa
mov
iret
fcompl
and
stos
mov
ror
int3
cmp
mov
icebp
mov
imulb
push
push
int3
or
mov
movsb
dec
dec
ss
mov
xchg
test
ret
mov
loopne
out
sub
pop
pop
nop
fistps
sbb
gs
push
inc
inc
aas
imul
into
xor
inc
jp
jns
ds
mov
push
stos
cmpsb
jecxz
lods
cmp
shlb
inc
je
mov
mov
inc
jg
push
into
push
dec
shrl
imul
in
mov
rcl
pop
rcrl
outsl
imul
gs
sbb
inc
stos
xchg
mov
enter
pusha
pop
fwait
adcb
cmp
mov
sub
mov
out
clc
push
add
mov
cmp
das
sub
dec
arpl
mov
into
hlt
dec
mov
jl
mov
in
cmpsl
movsb
push
pop
pop
lahf
aad
mov
std
les
jo
and
cwtl
aam
jg
aaa
cmp
inc
jp
je
jecxz
mov
cltd
xchg
les
enter
cmpl
insb
jmp
xchg
das
adc
jge
aaa
cmp
xor
test
fists
pop
adc
fstps
lea
out
mov
sub
pop
sbb
dec
push
or
xor
imul
loope
insb
sub
out
ror
pop
push
push
icebp
jb
test
xor
hlt
idivb
outsb
mov
pop
fs
or
mov
push
mov
pop
and
incl
inc
aas
cmp
mov
outsl
insb
cltd
iret
mov
aam
xchg
sbb
add
lock
pop
and
sub
aad
pop
scas
and
add
fs
sub
movsl
in
pop
pop
push
push
orl
icebp
imulb
mov
faddl
dec
push
iret
out
int3
leave
jl
shrl
push
icebp
out
pop
incl
push
sbb
dec
inc
mov
clc
out
jp
jb
inc
lcall
push
push
mov
mov
repnz
push
repz
sbb
cmp
repnz
popa
pop
pop
ficoml
mov
daa
scas
cmpsb
jecxz
jg
rol
test
bound
movsb
sub
push
adc
rcll
dec
inc
pop
fisubl
xchg
and
push
sbb
stos
sbb
rcrl
sar
xor
jae
jp
cmc
repnz
push
jmp
sbb
dec
je
jns
test
sbb
gs
cwtl
les
mov
lods
add
mov
jmp
add
push
pop
fstl
adc
push
scas
aad
sub
xchg
arpl
fcomps
push
push
cmp
lods
stos
push
jnp
push
fdivrs
test
lret
add
insb
xor
pusha
pop
adcb
or
jle
cmp
inc
repz
out
jp
jb
push
mov
mov
xchg
xchg
and
cs
cmpsl
out
out
pop
fs
in
fimuls
rcr
adc
cmp
xor
bound
shrl
xchg
mov
stc
fadds
scas
lods
test
jl
into
les
cmc
andb
in
ja
pop
push
leave
icebp
enter
push
outsb
jnp
jmp
sub
movsl
sbb
sbb
mov
lea
mov
stos
enter
dec
sbb
inc
inc
inc
leave
inc
jmp
out
jne
push
stc
pop
int
test
xchg
mov
inc
test
mov
xor
adc
aam
inc
addb
cmp
lea
imul
add
icebp
mov
in
jecxz
out
jp
lahf
fcmovnu
aad
sarb
mov
sub
lock
xor
imul
and
adc
leave
push
jno
jp
jne
xlat
insb
xchg
and
fcompl
mov
les
dec
mov
push
dec
sub
pushf
cmp
mov
inc
cmp
sub
mov
push
ljmp
mov
xchg
lods
cmpsb
jecxz
ds
add
cmc
mov
sub
push
push
insb
pop
pop
push
lea
push
push
scas
loopne
jns
je
mov
xchg
ror
int
loop
jae
inc
inc
xor
pop
ret
cli
sbb
pop
xchg
push
xor
lea
ds
cmp
or
mov
fnstenv
pop
lds
inc
lock
test
push
cmp
jnp
jg
mov
pushaw
mov
add
loop
test
subb
cmpsb
mov
aam
dec
pop
leave
movb
inc
add
sub
and
adc
lcall
outsb
insb
xchg
xchg
mov
incb
dec
fwait
les
dec
out
in
je
cmp
pop
pop
adc
cmp
aaa
mov
pop
ja
es
aam
fmul
add
lods
jge
scas
xor
test
out
inc
aas
xchg
or
add
cmc
bound
lahf
sbb
int
push
push
dec
dec
dec
shlb
jge
push
sti
movsl
xorb
mov
push
mov
mov
pop
cwtl
sub
outsl
mov
xchg
aaa
push
mov
inc
hlt
mov
imul
pusha
pop
fucom
jmp
fimull
mov
lods
pop
test
flds
adc
dec
or
mov
nop
ss
test
fsubrp
movsl
scas
pushf
pop
sar
fcmovnu
lret
es
stos
hlt
imul
pop
fcom
cmp
jnp
jle
cmp
outsb
xchg
js
addr16
pushf
ret
into
cmpsl
push
adc
ret
cmp
stos
imul
mov
clc
int
inc
jmp
sbb
scas
sbb
push
xor
sub
dec
push
mov
mov
movsl
adc
daa
lret
in
pop
cwtl
xlat
dec
sahf
lea
push
out
mov
mov
inc
dec
out
cmp
jmp
lods
push
xor
lods
mov
and
xchg
pop
cltd
mov
outsb
add
ljmp
repnz
push
jbe
cltd
xchg
rorl
xor
sarl
jbe
cmp
mov
adc
mov
das
xor
repnz
shrb
jle
mov
mov
mov
mov
bound
sbb
int
mov
lods
inc
jbe
inc
pusha
mov
ficomps
movsl
push
push
push
lret
or
and
insb
and
pusha
or
push
test
int3
lret
enter
aaa
adc
inc
incl
dec
push
sbb
push
lcall
mov
mov
sbb
xchg
sbb
push
movsl
divb
out
pop
flds
in
cmp
cltd
das
mov
cmp
mov
mov
mov
add
test
scas
pop
and
popa
add
push
sti
add
xor
xor
sbb
es
andl
test
ljmp
push
add
ja
inc
inc
xor
arpl
pop
xchg
xchg
xchg
lahf
dec
or
jnp
out
in
ljmp
jmp
xchg
or
ds
lds
xor
out
dec
inc
jno
cmp
jg
jns
mov
jmp
es
movsl
xchg
aaa
pop
ror
add
mov
js
push
fnstcw
pusha
fiadds
adc
cmp
xorb
call
or
and
fidivl
dec
int
cmpsb
jge
sbb
jo
cmp
mov
lahf
mov
icebp
push
mov
adc
dec
or
insb
jb
movsl
adc
xor
out
push
fcompl
add
xchg
xchg
jae
mov
and
pop
scas
cmpsb
jecxz
mov
rcl
addb
stos
mov
xor
shrl
pop
push
test
mov
pushl
jae
imul
xor
leave
cmp
cmp
pop
ret
mov
in
xchg
inc
sar
xchg
xor
xor
pusha
pop
lcall
pop
cmp
mov
out
scas
aad
dec
push
ficoms
loope
pop
jg
push
jo
adc
stos
out
fcomps
mov
roll
fadds
lods
fcmovnu
add
cmpsb
sbb
lds
es
imul
mov
inc
pop
jp
dec
leave
push
inc
lods
lret
imul
shlb
sbb
xchg
loopne
movsb
dec
mov
mov
push
push
ljmp
dec
add
push
inc
cmp
sub
pop
pop
aad
xchg
jle
out
cs
lods
test
push
cs
std
int
or
std
cmp
outsl
scas
xor
lods
or
mov
xchg
dec
test
leave
sbb
adc
mov
stos
xlat
pop
sbb
lahf
cltd
xchg
sub
in
xor
push
repnz
outsb
stos
sbb
mov
ss
inc
aas
cmp
std
jb
insb
cltd
fstps
mov
mov
sub
lahf
mov
jmp
mov
mov
push
mov
dec
imul
xchg
push
jmp
jmp
mov
adcl
cmpsb
mov
cmp
jge
sub
xchg
cli
hlt
icebp
cli
lds
loop
sbb
adc
push
repz
cmp
ss
imul
or
xchg
addl
sub
loop
jmp
sbb
adc
cmp
movsl
lods
mov
xor
imul
ljmp
pop
cmpl
xor
xor
fnstcw
cs
cmc
scas
jmp
pushf
popa
jmp
mov
mov
cmpb
ljmp
sub
cmp
iret
int3
xor
jbe
xchg
mov
push
hlt
dec
pop
pop
xchg
flds
repz
repnz
mov
gs
pop
fwait
loop
shll
test
cmp
lods
std
push
cwtl
fidivs
xchg
imul
arpl
pop
add
mov
addr16
daa
sub
loop
push
mov
dec
aad
idiv
jl
jbe
cli
nop
fnstcw
fstps
adc
add
imul
lods
cli
mov
cwtl
dec
dec
dec
movb
lods
stos
in
repnz
mov
cwtl
xchg
xchg
std
cmp
mov
nop
dec
and
loope
fidivrl
adc
mov
enter
fs
rcl
mov
xchg
nop
mov
jle
in
push
sbb
push
xchg
dec
or
push
dec
xor
push
xchg
data16
loopne
push
scas
xchg
cmp
gs
mov
lahf
repz
adc
cld
mov
outsl
inc
rcrb
push
jge
leave
pop
sbb
push
test
hlt
test
xlat
ds
inc
popf
pusha
arpl
rcrl
adc
in
das
xor
mov
hlt
jecxz
fmull
lea
add
cmp
daa
arpl
sbb
mov
jp
lods
aam
or
popf
fcom
stc
jmp
inc
add
xchg
clc
hlt
icebp
add
test
mov
movsl
movsl
test
dec
cmp
pushf
imul
xchg
pushf
cltd
add
stc
and
sbb
jecxz
pop
sub
data16
in
pop
ljmp
fwait
xor
mov
popa
fistl
mov
dec
lret
xchg
mov
mov
push
adc
xchg
add
or
adc
shrb
add
xor
inc
push
dec
adc
cmpb
jecxz
sub
fstps
lret
ret
pop
cltd
fs
add
popa
and
cwtl
push
pop
mov
xor
cmpsl
jne
and
test
outsl
mov
mov
loope
mov
pop
adc
xor
push
push
add
nop
cmpsl
or
popa
sub
rcll
iret
test
push
sbb
cmpsb
or
aam
push
mov
lds
add
div
pop
add
xchg
push
sub
dec
pop
mov
xlat
jb
je
sub
mov
or
fxch
inc
cli
int3
jo
jo
push
mov
bound
jle
or
mov
mov
inc
cltd
pop
ret
orl
int3
insb
xor
test
iretw
int3
push
jp
imul
sub
das
pop
sub
push
push
cmpsb
lahf
xor
subb
add
mov
ror
leave
add
inc
jl
sub
in
inc
clc
into
pusha
pop
xchg
mov
adc
push
test
inc
into
nop
pusha
pop
pop
push
mov
out
lcall
cmpsl
sbb
push
roll
or
add
std
punpckldq
sub
adc
push
or
idiv
data16
mov
js
adc
aam
xlat
cmp
mov
loopne
std
cld
arpl
or
in
sub
idivl
scas
inc
imul
insb
repz
ja
mov
lahf
push
mov
mov
xlat
gs
and
sub
out
mov
popf
mov
pushf
xor
int3
mov
xchg
pop
cmp
pop
lods
shll
sbb
dec
adc
inc
addb
mov
addr16
mov
leave
xor
adc
ja
jae
test
push
fdivl
dec
jecxz
insl
jb
hlt
out
in
jmp
sbb
dec
cmp
out
cmp
xchg
dec
pusha
fwait
cwtl
les
and
xchg
cmp
mov
inc
stos
sub
popa
ds
push
aad
push
jg
and
std
bound
xchg
fidivl
mov
in
jmp
add
or
cmc
jge
cli
xlat
push
adc
push
lret
push
test
add
adc
add
andb
hlt
dec
jae
outsb
fisubs
inc
mov
pop
xchg
lock
scas
mov
sbb
xchg
jno
xchg
nop
lea
adc
sub
fistl
lret
adc
jno
mov
sub
ljmp
push
fnsave
xchg
lea
jg
cmp
pusha
jecxz
out
fs
push
adc
push
add
data16
inc
repnz
out
fdivs
mov
jg
mov
dec
fildl
jnp
in
mov
sbb
mov
or
inc
mov
insl
sbb
dec
jae
sub
movsb
dec
mov
cwtl
dec
dec
push
leave
out
je
loop
push
push
sbb
int3
add
push
in
iret
pop
or
lds
sbb
jp
pop
movntps
imul
scas
push
mov
mov
loop
adc
mov
mov
or
xlat
dec
rorb
xor
hlt
lock
mov
sub
jg
rcl
lods
cmc
shrb
jne
imul
cltd
adc
shrb
cmp
cmp
lcall
ds
cmp
or
je
push
push
mov
jg
mov
es
into
xor
in
pushf
scas
addr16
pop
jl
dec
and
push
add
mov
or
insb
and
cwtl
in
and
push
xchg
xor
or
ljmp
push
and
inc
and
ds
fcmovb
popa
cmpsl
push
inc
cmp
lods
sub
popf
sbb
fcmovu
aad
test
addr16
imul
call
sbb
xchg
js
mov
and
stos
fnstenv
popf
pop
and
inc
movl
mov
repz
jne
cltd
sbb
sbb
pop
aam
cld
push
inc
lea
divl
jo
outsb
push
in
ja
rcrb
inc
mov
mov
out
cmp
jge
loopne
sbb
inc
jecxz
test
inc
adc
mov
xor
out
pusha
ljmp
mov
jbe
scas
cmp
push
push
les
test
inc
cmp
xor
sub
sti
fadds
fdivl
push
lahf
popa
ret
inc
lds
lret
outsl
out
mov
and
cltd
shlb
mov
cmp
fdiv
pop
mov
sbb
add
inc
cmpl
inc
jle
icebp
add
cmp
hlt
in
push
loopne
pop
cmpsl
push
or
ret
cmp
sub
ss
pusha
jmp
xor
rcll
prefetchw
xchg
xor
sti
cmp
xor
mov
fwait
js
mov
lods
into
insb
xor
or
std
inc
or
clc
sub
imul
add
pop
sbb
mov
xorl
jno
fistpl
loopne
mov
insb
mov
enter
in
mov
insb
test
out
mov
xchg
mov
jno
mov
xchg
mov
inc
inc
ja
jno
imul
lahf
pushf
cltd
or
push
or
lret
add
mov
out
xchg
pop
dec
fisttpll
or
hlt
xor
popa
pop
pop
pop
push
push
mov
das
ds
inc
and
data16
je
push
call
adc
mov
int3
aaa
cli
dec
jae
rolb
pop
ficoml
test
mov
mov
mov
mov
fldenv
in
or
mov
insl
lods
out
mov
lcall
mov
jmp
lea
jnp
js
popf
and
rcrl
xlat
aam
xlat
test
lds
incl
imul
add
jb
cltd
pop
push
lea
sbbb
aaa
out
popf
out
daa
addr16
xor
fwait
cwtl
adc
inc
xchg
mov
insb
cmpsb
in
jecxz
fcompl
xchg
pop
rorl
inc
hlt
xor
cs
pop
push
pop
pop
push
xchg
fiaddl
scas
cwtl
test
cwtl
mov
sarl
rcl
test
faddl
dec
in
jb
mov
sub
jmp
sbb
dec
into
pop
inc
mov
jbe
out
and
add
pop
mov
xor
icebp
outsl
sub
data16
popf
movsb
xchg
into
sbb
pop
adc
xor
xor
data16
mov
xchg
push
insb
mov
push
mov
pop
xor
and
push
xchg
sahf
adc
xchg
decl
cs
inc
loopne
cmpsl
fwait
pop
push
outsl
add
jg
sub
inc
sub
popf
mov
adc
ficoms
lds
scas
jb
outsb
in
cmpsb
sub
xchg
push
push
aam
dec
les
divl
jno
jne
negb
cmp
int3
lret
rcr
outsb
out
push
bound
in
negl
xchg
push
adc
inc
mov
cmp
jmp
scas
add
xchg
mov
cs
ss
scas
jp
cmc
sbbl
add
jbe
sub
sahf
xchg
push
mov
xchg
mov
insl
mov
xlat
dec
mov
or
aad
xor
arpl
lcall
dec
ret
xorl
jmp
lahf
adc
roll
mov
sti
sub
lods
ljmp
jp,pn
nop
inc
add
xor
mov
and
fimull
jecxz
xor
mov
cmp
cmp
cmp
jno
repnz
push
fcmovne
adc
mov
jbe
stos
insb
jecxz
mov
testl
lds
aas
mov
out
imul
out
adc
cmp
xor
xchg
push
out
pop
or
movsl
stc
inc
push
mov
and
loop
fcoml
iret
pop
add
cld
adc
sbb
rorl
xchg
push
shll
inc
mov
stc
scas
insl
and
mov
rolb
mov
cmc
dec
xor
inc
lea
mov
or
sub
test
sbb
cwtl
adc
or
sub
jmp
dec
shll
fadds
cmc
jnp
cmp
sub
lahf
popa
push
xor
mov
pop
test
push
jnp
jg
mov
movsb
mov
in
jns
dec
add
jb
stc
mov
das
in
fisubrs
push
adc
and
jg
dec
std
mov
jp
cmpsl
gs
and
cltd
or
inc
mov
add
pop
adc
xchg
or
inc
mov
sub
mov
or
sti
mov
and
movsl
loop
out
fmul
es
xchg
mov
sub
test
sbb
adc
inc
idivl
sub
sbb
cwtl
dec
adc
xor
mov
daa
call
push
pop
mov
outsl
stos
incb
mov
jne
in
stos
insb
loop
fs
fwait
adc
xchg
or
mov
jo
push
adc
sbb
xchg
je
mov
or
add
aaa
das
out
rolb
add
pop
subb
out
mov
or
loope
cltd
sbb
cmp
fidivl
fxch
or
in
sub
dec
test
mov
shll
push
test
cwtl
pop
pop
push
push
dec
dec
xchg
jb
lods
test
out
mov
pusha
cmp
add
xor
pop
pop
pop
push
pop
mov
mov
test
fidivs
fcom
push
pop
in
inc
or
xchg
push
jnp
shlb
and
dec
dec
dec
roll
je
loope
mov
xlat
xchg
inc
add
jge
cmp
imul
mov
add
repnz
sub
out
mov
xlat
jl
adc
dec
ds
mov
cs
cli
in
enter
popa
or
cmp
lods
in
lock
and
cmp
add
jle
push
jbe
lods
jl
and
das
ficoml
adc
pop
aam
add
cli
pusha
mov
ljmp
or
adcl
ret
inc
push
cltd
xchg
nop
dec
leave
or
mov
mov
popa
movsl
popa
loop
mov
or
stc
mov
pop
xor
xor
jecxz
pop
rorb
push
sar
adc
sub
cwtl
scas
add
or
push
sub
mov
sub
sbb
push
dec
sub
aas
cmp
fwait
xor
ljmp
xchg
ror
sbb
cmp
incb
stc
inc
lret
xor
stos
je
jmp
sbb
push
adc
cld
cmp
mov
pop
cmpsb
mov
push
inc
inc
cmpl
pop
sbb
inc
push
ljmp
divb
jb
cs
mov
movb
sub
push
in
jne
sub
popf
cmpsl
push
jl
stos
pop
int3
inc
or
out
insb
xor
pusha
subl
aas
dec
push
sbb
or
push
testl
in
mov
aam
or
insl
aas
add
xor
bound
leave
lahf
push
hlt
pop
sbb
adc
out
xor
aaa
cmpsb
or
cmp
fdivs
fs
shll
mov
stos
push
cltd
ds
xchg
inc
cmp
xor
sub
int
insl
sub
test
push
out
lods
dec
andl
cmpsb
jecxz
cmpsl
movsb
cmp
fcompl
lods
roll
cli
xor
mov
mov
mov
xchg
inc
xor
test
add
pop
sbb
ljmp
mov
dec
push
xchg
and
push
mov
mov
xchg
stc
mov
mov
pop
cmc
jno
aaa
adc
pop
imul
insb
loop
jb
sti
enter
mov
cmp
fbstp
add
roll
notl
mov
push
xchg
imul
jae
jge
mov
cltd
adc
inc
subl
and
and
push
data16
in
push
push
scas
push
popf
or
aam
ret
inc
pop
jge
popa
enter
xor
mov
xchg
iret
mov
sub
pusha
mov
aam
sti
jg
sub
sub
sub
mov
leave
or
movsl
jl
jecxz
cmp
pop
pop
pop
push
push
mov
das
xor
jae
insb
js
push
addr16
jno
xchg
imul
sbb
mov
outsb
lods
ja
cmc
xchg
fbld
jmp
jnp
mov
sbb
adc
stos
movsb
pop
fistpl
and
pusha
out
mov
jl
mov
sub
cmpsl
adc
dec
shrl
mov
mov
lcall
adc
cld
insb
das
hlt
push
push
mov
cltd
fiaddl
les
leave
ja
stos
out
fisubrl
jo
mov
xchg
push
notl
fnstsw
dec
out
mov
popa
fistl
lods
fistps
or
or
sbb
mov
xor
push
loop
popf
movsl
push
out
push
lds
xorb
sbb
sub
sub
in
sbb
jns
xor
pop
sub
test
push
pusha
add
mov
lock
cmpsl
jnp
mov
pop
retw
and
dec
mov
jp
ja
ret
cmp
cmp
out
pop
mov
addb
adc
mov
rcrb
adc
dec
dec
fdivrp
mov
subb
dec
sub
mov
push
add
cmpl
and
pop
pop
or
push
add
and
inc
jl
stos
out
mov
popf
inc
ret
test
jp
mov
jmp
bound
dec
push
sbb
inc
or
inc
lds
cmp
in
cmp
imul
push
jp
or
xor
ss
pop
loope
push
pop
or
xchg
in
jp
mov
in
cmpsl
das
push
loop
pop
fstl
pop
inc
push
cmp
and
jle
inc
imul
mov
mov
scas
pushf
sub
and
xchg
fwait
dec
adc
inc
dec
icebp
inc
les
xor
ss
out
repnz
sbb
push
inc
inc
mov
mov
inc
sbb
jecxz
cmpsb
dec
rolb
and
sbb
ljmp
pop
xor
inc
jle,pn
mov
mov
xor
mov
in
dec
lret
push
mov
js
fldcw
insb
adc
fsts
mov
out
shll
std
inc
fcmovb
push
and
adc
and
jle
inc
leave
xchg
outsl
dec
outsb
outsb
imul
pop
sbb
call
xchg
fdivl
dec
outsb
or
xor
ds
scas
jg
xor
scas
push
sbb
or
stos
test
rorl
sti
mov
mulb
popa
testl
pusha
js
es
or
xchg
jl
and
in
push
dec
jbe
inc
sarb
loope
test
jle
rorl
adc
int3
sub
mov
dec
mov
out
mov
sub
das
sbb
je
push
addr16
mov
cmpps
inc
pop
icebp
mov
scas
inc
jmp
int
xor
mov
mov
inc
pop
mov
mov
pop
lcall
add
lods
inc
test
popa
add
mov
aas
adc
xor
shrb
daa
bound
mov
xor
push
mov
je
sub
pop
bound
inc
sub
lret
shll
aam
ljmp
dec
xchg
ret
or
std
cmp
xor
inc
out
adc
mov
jge
add
mov
lret
mov
push
add
cmp
es
fisubrl
pop
shll
dec
cwtl
cmp
cmc
push
jo
test
fwait
xchg
xchg
push
sbb
mov
mov
out
jmp
gs
fstpt
jnp
rorb
mov
movl
sbb
insl
push
mov
push
stos
cmp
xchg
clc
xchg
ss
mov
je
jg
pop
push
xchg
xchg
xchg
call
mov
push
in
call
mov
adc
outsb
sbb
cmpb
insl
data16
xor
clc
mov
sbb
dec
jge
jno
ret
insb
out
xchg
pop
loopne
je
push
sarl
cltd
mov
mov
outsl
ss
push
adc
std
mov
mov
stos
cmp
mov
aad
mov
cmp
mov
and
lods
mov
fs
jns
mov
inc
jecxz
jp
sahf
in
fimuls
ficoms
insl
icebp
xor
mov
outsl
movsl
sub
iret
ja
icebp
xor
jno
out
push
je
lcall
addb
insl
mov
ljmp
mov
div
inc
dec
add
mov
and
icebp
iret
repz
adc
pop
add
in
mov
sahf
lods
adc
subl
scas
pop
cmpl
aam
mov
rorb
mov
fcom
iret
xor
stc
testb
sub
adc
adc
inc
inc
cmc
push
mov
pop
push
gs
nop
push
push
icebp
icebp
sub
popl
popa
mov
jmp
push
inc
aas
mov
popf
scas
xor
xchg
mov
inc
mov
xchg
dec
stc
loop
pop
xchg
add
incb
jbe
subb
sub
xor
mov
sub
mov
jp
repz
stos
sbb
sbb
daa
xlat
dec
psrlq
adcb
mov
and
cld
mul
and
andl
push
pop
mov
shrb
lret
jecxz
xchg
sbb
in
mov
dec
hlt
mov
sub
pop
jmp
push
loopne
add
mov
popa
or
js
sub
and
push
dec
popa
jbe
cmpb
adc
adc
xchg
xchg
xchg
mov
mov
adc
movb
push
sbb
push
movl
je
lahf
and
push
pop
call
lret
nop
xor
outsb
out
pusha
lock
aad
rorb
mov
mov
stos
jb
jmp
cmp
jle
xchg
lea
mov
rcrb
dec
pop
shl
add
add
clc
stos
jl
movsb
pusha
inc
sbb
pop
pop
push
push
fnsave
ja
sub
jmp
mov
int
cmc
inc
jg
xchg
in
call
sub
mov
int3
inc
fiadds
mov
mov
mov
push
xchg
xchg
mov
mov
mov
mov
pop
hlt
or
das
mov
insl
das
cs
mov
jb
mov
add
mov
frstor
fcoms
or
lds
sti
jge
cli
jbe
std
jno
cmpsl
push
pop
push
dec
dec
mov
mov
gs
mull
aam
test
xchg
mov
lret
loope
jecxz
imul
lret
xchg
arpl
mov
les
in
xchg
push
jo
popa
nop
lea
aaa
jae
mov
and
popa
dec
mov
push
stc
imul
pop
cmc
xor
popf
mov
ret
or
out
jnp
jbe
test
test
xchg
sbb
movsb
cld
sarb
jno
out
ja
in
pop
xor
pop
int3
sahf
dec
mov
lock
pushf
pusha
cs
xchg
sti
push
xchg
mov
adc
shl
sub
fsubs
popa
and
pop
sahf
pop
adc
dec
sti
or
push
add
sub
frstor
or
cmpsl
stc
mov
imul
notb
dec
or
pop
jl
stc
sub
sub
movsb
imul
and
subl
mov
jecxz
in
outsb
push
dec
xchg
jb
lods
test
pop
push
cld
or
sub
xchg
cmp
jnp
xor
push
insl
inc
roll
shrl
scas
jge
das
repz
pop
popf
int3
fldcw
fists
sti
xchg
mov
addr16
dec
imul
pushl
add
cmpb
cmp
imul
xchg
mov
mov
cmp
lods
in
stos
shlb
in
fistps
iret
push
or
mov
add
aad
pop
lods
insb
es
jl
fwait
subb
mov
mov
ljmp
cmp
or
and
push
sub
push
push
pop
xlat
cld
xchg
push
xchg
mov
cmc
push
mov
mov
scas
lods
jle
lock
lcall
mov
xor
jne
cltd
push
cmp
xchg
outsb
aas
pop
aaa
dec
push
cmc
and
ja
sbb
push
or
lods
mov
xor
aam
mov
stc
iret
lds
into
pop
sbb
or
in
xchg
cmp
out
xchg
mov
push
mov
repz
nop
push
xchg
cmp
xchg
add
mov
out
in
jmp
push
pop
loopne
inc
int3
mov
add
test
lods
leave
mov
call
test
sub
lock
adc
data16
and
stc
into
add
in
add
inc
add
xor
into
mov
outsl
mov
loop
shl
movsb
mov
sti
out
int3
in
sbb
cs
and
sti
and
pop
aaa
adc
dec
push
inc
inc
inc
cmp
xor
fcmovnu
fdecstp
cmpsl
pop
fdivr
int3
xchg
push
cli
add
xor
out
add
aad
sahf
pusha
cmp
inc
les
shlb
fisttpll
test
adcl
lock
fisubl
push
cwtl
sbb
push
and
sbb
pop
sub
inc
call
dec
xchg
ja
or
lahf
mov
data16
pusha
test
test
in
loopne
and
jbe
mov
push
sbb
push
es
jae
fiaddl
orl
pop
popa
aad
xchg
movsb
jle
jp
mov
sub
pop
retw
adc
arpl
push
or
stos
dec
int3
pop
lock
out
mov
repnz
xchg
sbb
adc
inc
mov
out
repnz
inc
ds
cltd
add
das
mov
xchg
aaa
push
lahf
push
push
add
movb
mov
cmpsl
call
fcomps
popa
xor
das
push
cli
idivl
push
sub
adc
push
sbb
mov
add
std
push
cld
jb
repz
jp
mov
mov
mov
push
dec
dec
dec
xlat
fcmove
lret
enter
cld
stc
mov
pop
sub
fists
or
jns
insb
std
fwait
mov
ret
stos
test
cs
lret
sbb
pop
cmp
lea
mov
stos
sbb
adcb
lea
cmp
xor
stos
cmc
test
push
mov
mov
xchg
inc
or
dec
out
lret
movsb
inc
pop
sbb
std
push
push
mov
sub
lcall
xchg
aaa
jns
outsl
xlat
pop
fsubrs
imul
sub
push
xor
das
sub
pop
fwait
inc
fildl
call
mov
das
repnz
dec
fisubs
pop
hlt
inc
push
add
mov
lock
cmpsl
out
mov
iret
mov
or
sbb
in
xlat
imul
cmc
fidivs
adc
rcl
pop
cmpsl
cld
mov
les
inc
in
or
mov
scas
lock
mov
int
incb
mov
ljmp
xor
shll
addb
popa
repnz
or
scas
xchg
es
adcl
mov
dec
fdivrs
jmp
test
xchg
cmp
int3
leave
inc
jg
js
inc
xchg
test
and
lods
pop
and
or
or
cli
sbb
cs
lret
sbb
lods
xchg
nop
ret
shlb
jae
and
out
popa
sub
mov
adc
data16
inc
inc
xchg
mov
jg
inc
ljmp
sub
mov
mov
cmp
jno
mov
sbb
incl
lds
incl
es
push
and
push
adc
cmp
xlat
imul
lret
in
call
fs
xchg
nop
int
add
iret
mov
out
in
pop
dec
pop
xchg
sub
push
adc
sahf
push
outsl
xchg
xor
adcl
fcompl
mov
or
mov
cmp
xor
aaa
cmp
mov
fldlg2
rcl
int
mov
imul
sbb
pop
fsts
mov
xor
xorb
subb
loope
push
int3
aad
add
inc
jge
mov
jl
pop
push
jnp
and
cmp
ret
push
or
or
in
insb
loopne
mov
and
mov
fidivrs
ja
adc
testl
xorl
pop
mov
xchg
push
lret
or
cmpsl
cwtl
repz
movsb
leave
in
mov
sub
jmp
lds
sbb
test
in
sub
mov
adc
bound
push
sub
fwait
lcall
in
mov
inc
jmp
sub
pop
pop
add
xchg
and
inc
sub
je
mov
lahf
pop
fcomp
mov
mov
xor
imul
lret
popf
adcb
sbb
xchg
inc
pop
jg
mov
lods
sub
mov
scas
and
mov
add
repz
outsb
fstps
out
in
pop
sbb
fnstsw
test
dec
dec
ja
cmp
imul
cmp
lret
out
nop
pop
out
mov
sarl
std
ret
and
adc
cli
rcrl
cld
jnp
jnp
xchg
and
xor
addr16
jle
add
xchg
fisubs
xor
push
and
dec
adc
inc
add
jle
daa
mov
cld
sub
jns
cmp
mov
in
cmpsl
and
mov
add
je
ret
push
outsl
inc
mov
out
sbb
fdivp
adc
add
xchg
sub
aad
pop
pop
adc
jge
add
shlb
loop
int3
push
xchg
cmp
mov
cmc
mov
and
sti
jno
push
pop
lahf
mov
jl
mov
jo
lret
push
xlat
xchg
in
enter
rcr
push
icebp
jbe
aas
inc
in
xor
sbb
push
mov
mov
ret
xor
data16
ja
mov
lods
or
sbb
repz
loope
inc
in
or
mov
xor
adc
xor
pop
push
jle
cli
stos
fcmovnu
test
add
lds
dec
adc
jecxz
mov
sub
mov
mov
sbb
lds
mov
mov
jae
add
fldcw
xchg
dec
add
lea
cmp
lods
mov
gs
bound
subb
mov
imulb
mov
iret
push
int
dec
add
add
pop
bound
call
pop
fcomps
rol
cld
pop
ja
push
lock
movsb
mov
mov
loopne
add
dec
push
les
loopne
cmpsl
out
test
cmp
push
adc
adc
test
out
dec
addr16
test
xchg
dec
add
or
jmp
and
fildll
lea
fdiv
addb
js
or
cmpsb
imul
mov
scas
ds
xlat
jge
add
mov
movsb
sub
lret
aam
int3
inc
shl
std
test
out
icebp
sbb
daa
bound
cltd
dec
test
jnp
aaa
out
xor
mov
pushf
cltd
std
adc
jle
scas
lods
test
push
push
xchg
push
or
cs
rorb
inc
add
fldenv
out
bound
idivb
loop
scas
xchg
push
fwait
cmp
lret
push
sbb
es
test
jns
rclb
inc
enter
jp
jp
ror
jnp
movsl
mov
jg
ret
sarb
push
std
stos
or
mov
je
nop
cmp
out
scas
inc
pop
add
nop
xor
dec
xchg
mov
mov
mov
jmp
add
fistps
or
cmpl
xor
out
xlat
push
xor
or
ret
cmpl
push
adc
xor
das
fs
or
pusha
cmc
scas
ds
push
xchg
repz
sub
cwtl
cmp
sbb
mov
test
pushf
scas
push
gs
dec
adc
add
cmp
lcall
mov
or
les
cmp
push
arpl
lahf
fs
push
mov
add
mov
fisttpl
pop
sub
mov
adc
dec
add
xchg
sub
inc
data16
dec
and
cmpb
mov
lods
movsl
mov
or
or
cmp
jmp
pusha
xchg
push
leave
adc
xor
cmp
outsb
popf
mov
int
mov
xchg
rclb
ret
shlb
push
and
sub
out
lea
scas
jae
adc
xchg
xchg
in
mov
sub
les
lock
cli
cmpsl
adcl
and
int
dec
pop
lds
push
std
stc
div
icebp
sbb
adc
push
xor
addl
mov
outsb
insb
hlt
rcrl
mull
mov
out
test
inc
bound
xchg
mov
sub
jmp
xchg
daa
mov
mov
nop
test
loop
push
shl
aad
incl
das
jne
cs
test
cs
push
scas
call
jbe
lcall
repz
and
sbb
ss
inc
mov
jns
push
std
xor
sbb
sbb
lret
scas
push
scas
jle
push
fcomps
or
mov
add
out
and
ret
loope
pop
xchg
or
addb
mov
fdivrl
jp
dec
lret
or
jp
lea
cmpsb
lods
loopne
cli
and
daa
int3
popa
enter
or
divb
and
adc
dec
daa
cmp
sahf
mov
shrl
pop
nop
adc
xlat
adc
sub
popa
and
loope
sbb
jmp
jg
mov
xchg
sub
xchg
push
push
xchg
mov
mov
test
pop
xor
push
add
xchg
incb
mov
add
fwait
xchg
xor
movsl
pop
popa
aas
xchg
mov
jbe
arpl
jbe
jne
out
xchg
and
es
xchg
mov
push
mov
in
cmp
fstl
push
adc
adc
dec
aaa
mov
and
data16
adc
or
xchg
ret
ss
sub
pop
dec
mov
cmp
loopne
std
add
sub
icebp
scas
push
dec
mov
fbstp
pop
in
shrb
test
mov
scas
mov
mov
test
jg
add
int
sub
sub
dec
push
dec
int3
jl
ret
push
mov
out
mov
cltd
pushf
cltd
push
cwtl
out
out
pushl
repnz
addr16
or
test
cmp
lods
outsb
adc
fs
rcll
incl
push
mov
sbb
fcompl
sub
jge
hlt
xor
lds
cmc
xor
xor
add
push
dec
enter
push
xor
and
adc
xlat
test
pushf
mov
jp
sub
imul
outsb
aas
pushf
push
push
lea
nop
xor
xor
cmp
adc
xchg
mov
mov
push
pop
and
or
xor
aaa
mov
scas
pop
cmp
pop
pop
pop
int
inc
add
insb
mov
mov
loop
sbb
mov
lock
sub
daa
lcall
rolb
adcl
xor
fildl
push
push
cmpsl
call
cmpb
dec
loopne
or
loop
add
add
out
xor
pop
pop
pop
adc
jge
daa
addl
out
xor
pop
mov
lret
int
or
cmp
dec
xor
push
fsubrs
fmull
dec
inc
addl
mov
jecxz
adc
pushf
inc
cmpl
data16
xchg
jge
jge
std
jl
cmp
xor
push
aad
dec
mov
inc
nop
mov
lods
xor
sub
mov
aam
mov
and
ja
hlt
imulb
sub
addr16
add
mov
mov
mov
sbbl
mov
loope
push
les
add
push
ljmp
hlt
sbb
mov
dec
dec
mov
mov
mov
mov
into
pushf
dec
mov
jp
mov
roll
mov
in
or
pop
cmp
or
push
cmp
pop
pop
pop
mov
xchg
mov
pop
and
loopne
push
adc
out
or
add
cmp
push
sub
int3
mov
add
cltd
dec
mov
mov
sbb
mov
pop
lods
mov
out
push
dec
and
adc
inc
inc
inc
fnsave
cmpsl
jno
cmp
pop
lcall
adc
mov
lods
pop
and
loop
iret
push
xchg
or
adc
mul
push
dec
sbb
rolb
ja
lock
lods
aam
mov
popf
dec
and
dec
mov
inc
filds
pop
insl
jo
daa
outsl
adc
push
jl
jno
and
jbe
notb
or
pop
xchg
mov
test
mov
outsl
scas
mov
in
xor
xchg
inc
adc
mov
cmp
inc
inc
bound
outsl
pop
xchg
mov
pop
fidivl
mov
andl
or
mov
xchg
or
push
xchg
popl
sbb
push
jns
icebp
sub
stos
pusha
fisttps
cmpsl
adc
mov
div
insb
movsl
jbe
lcall
adcl
mov
shrl
imul
lods
push
push
jnp
mov
and
fnclex
push
pop
inc
adc
add
cmp
and
jle
test
mov
ljmp
fcmovbe
aam
adc
enter
insb
xor
pusha
add
sub
xor
mov
outsl
dec
insb
jecxz
jl
lcall
lea
cmp
mov
fsub
loopne
in
pop
xchg
lcall
or
xor
xchg
aas
cmpsb
outsb
pushf
bound
je
lret
stc
mov
mov
stos
test
shll
call
push
add
addr16
mov
dec
inc
test
jno
insl
shll
and
inc
mov
cli
push
and
or
dec
sbb
cmp
outsl
jmp
lcall
jle
mov
jmp
push
xchg
or
fs
mov
ret
scas
outsl
cmp
das
xlat
sbb
dec
add
repz
sbb
fists
push
add
int3
leave
dec
mov
inc
out
jne
lea
push
int3
push
nop
mov
je
aam
and
adc
push
frndint
mov
out
out
push
in
imul
push
pop
nop
ds
mov
imul
pop
or
xorl
and
lods
scas
lahf
pop
sub
loopne
iret
pop
add
aas
xlat
adc
and
out
js,pn
loopne
ss
dec
pop
push
dec
xlat
jge
mov
dec
outsl
insl
stos
cmpsl
sbb
lock
xor
jmp
xor
and
jbe
dec
js
hlt
inc
adc
aaa
mov
adc
mov
addr16
cmp
jb
xchg
xchg
mov
inc
mov
jl
inc
fistpll
push
sbb
dec
fldenv
cmp
add
cmp
and
bound
xchg
inc
push
mul
subl
mov
and
xchg
pop
adc
sub
pusha
js
mov
lods
push
mov
nop
or
xor
inc
cli
ss
lock
je
or
cmpsl
add
lret
mov
out
pushf
or
lcall
les
popf
dec
inc
mov
popa
pop
fcoms
cmpsl
mov
test
sub
scas
cmpsb
jecxz
pop
lods
aaa
xor
outsl
inc
pop
movsb
xor
ja
push
pop
pop
rclb
xchg
mov
stos
rcrb
jne
push
int3
xchg
or
push
mov
repnz
repnz
sbb
movsl
notl
sbb
dec
inc
test
mov
pop
hlt
popa
loopne
pop
mov
dec
repnz
aaa
inc
fsubrs
stos
imul
aas
adc
xor
sbb
adc
xor
pop
fbld
dec
mov
xor
popf
sbb
pop
add
push
call
je
adc
push
popa
and
sub
ret
pushl
js
push
sub
and
jp
clc
clc
dec
inc
push
jecxz
ds
das
lock
pop
pop
cld
sbb
rolb
outsb
inc
imulb
addr16
pop
mov
xchg
push
dec
mov
pop
add
or
test
or
daa
int
mov
addr16
out
test
sbb
dec
sub
adcb
mov
insb
sub
xchg
imul
add
sub
shr
insb
out
sub
push
lods
fists
inc
dec
add
mov
scas
cmp
in
jo
cmp
lcall
mov
lock
sbb
ficomps
or
int
cld
je
or
jae
sub
test
xor
xchg
or
jp
sbb
sub
enter
cld
inc
divl
repnz
clc
int3
jne
push
test
mull
insl
movsl
in
cmp
sarl
xchg
cmpsl
in
repnz
push
push
mov
mov
lds
xor
lahf
insl
pop
xchg
cmp
mov
inc
ret
jae
clc
xchg
out
inc
pop
fsubrp
pop
push
mov
inc
push
insl
jnp
outsl
subl
insb
and
rorb
rclb
es
sbb
jge
dec
daa
lods
js
rclb
stc
das
inc
or
jp
inc
xchg
sbb
int
ss
outsb
movsb
jae
fwait
bound
xchg
les
inc
mov
jmp
fs
fisttpl
jle
xor
sub
mov
shrl
xchg
movsb
sub
aam
pop
iret
loopne
mov
pop
daa
and
fwait
sbb
cwtl
popa
ret
inc
popf
leave
data16
jbe
cli
pushf
imul
push
imul
sub
repz
shll
fldl
dec
in
lret
dec
andb
xor
push
pusha
fs
fistpl
xchg
icebp
mov
mov
mov
mov
fldenv
fstp
fsts
sub
xchg
add
sub
mov
das
sub
sub
xlat
pop
stos
fnsave
dec
xlat
jae
in
jbe
lock
sbb
int3
adc
lret
iret
int3
mov
push
push
push
push
jmp
xor
adc
pop
test
inc
sbb
cmp
xor
xor
cltd
movsb
sbb
mov
scas
jmp
mov
pusha
sti
test
jne
popf
or
and
and
mov
or
pop
js
test
mov
lea
cs
fdivl
lock
lods
sbb
mov
daa
dec
push
dec
mov
sbb
loope
mov
out
shl
inc
sahf
sbb
dec
lret
cltd
lret
cli
nop
cmp
inc
loope
sub
in
loope
out
or
or
or
decb
popa
jmp
nop
mov
loope
repnz
movsl
loop
les
mov
imul
jb
xor
and
sub
inc
dec
inc
test
pop
pop
jmp
sbb
xchg
push
xchg
sbb
ds
shll
jb
jge
in
and
lcall
and
mov
lahf
in
xchg
inc
inc
jecxz,pn
cmp
mov
push
xchg
mov
mov
mov
out
loope
push
in
inc
fildl
aaa
xchg
jno
insb
xor
into
ds
out
or
scas
in
test
mov
add
inc
test
sbb
or
out
sub
adc
test
pop
mov
insl
in
pushf
sti
sahf
int3
je
nop
xchg
nop
hlt
icebp
pushf
mov
mov
jmp
data16
fistps
add
sbb
adc
outsb
or
mov
pop
mov
xchg
sbb
fbld
mov
loop
pop
pop
in
add
pushl
in
jne
das
lahf
movsb
push
and
mov
mov
shll
mov
pop
scas
insl
daa
arpl
xchg
lods
push
mov
xor
lock
jmp
gs
fwait
adc
dec
and
in
sub
push
outsl
insb
fisubs
loopne
in
mov
xor
mov
mov
and
fcoms
ret
push
add
mov
xor
addr16
mov
xchg
sub
cmpsb
mov
xadd
jg
divb
out
std
and
xchg
inc
int3
mov
ja
out
push
lock
pushf
cltd
xchg
adc
hlt
lret
jb
iret
in
jne
popf
sbb
sbb
add
cltd
add
addb
xchg
xor
xor
adc
xchg
test
mov
repnz
movsl
push
xchg
fistpl
xor
push
adc
dec
scas
xor
pop
push
mov
pop
insb
jge
jns
test
cwtl
xchg
stc
mulb
fldcw
lcall
out
and
cli
push
pop
sbb
jp
cmc
shrl
mov
je
jmp
sbb
add
int3
mov
clc
lcall
inc
ljmp
xchg
into
add
das
mov
stc
mov
sub
mov
loope
fldz
mov
imul
and
push
fdivs
push
adc
or
add
shlb
xor
fsqrt
cmp
push
xchg
dec
mov
sub
sub
inc
sahf
das
sahf
pop
jno
subl
out
sub
std
lcall
mov
mov
inc
rolb
adc
and
jecxz
or
add
xchg
xchg
orb
addb
cmp
and
fsts
aam
popa
mov
add
in
pop
sub
mov
fldl
mov
hlt
movsb
in
adc
lahf
add
inc
lret
shll
enter
loopne
and
jo
hlt
and
arpl
mov
sbb
hlt
adc
cltd
mov
lock
aas
mov
out
fisttpll
adc
add
jge
sub
sbb
pop
ror
inc
dec
xchg
pop
push
jle
mov
loop
out
push
jnp
jmp
or
jae
xor
pop
cwtl
test
push
dec
dec
xorl
jne
mov
cmp
cltd
xchg
cli
not
adc
mov
mov
sbb
pop
adc
add
xor
lods
lods
cmp
in
in
or
mov
jle
mov
adc
out
mov
loope
or
mov
mov
or
add
cmpsb
sub
jnp
mov
faddl
lret
and
mov
outsl
sbbb
pushf
lods
mov
js
je
lret
jno
fsubrp
sbb
xchg
xchg
pop
or
cmp
out
sti
inc
fistpl
or
std
mov
mov
adc
aad
or
add
std
mov
and
and
shll
mov
jnp
sub
push
and
jnp
fcmovnu
xlat
dec
mov
xlat
sub
cmp
fldcw
in
sub
xor
lods
pop
jne
ficomps
mov
in
shlb
sbbb
sbb
scas
ds
add
and
aam
push
jbe
inc
out
add
or
das
aaa
mov
cmp
cmp
int
add
push
mov
pop
lods
out
aam
ret
pop
pop
mov
pop
or
cmp
lea
cld
subl
and
sbb
mov
pop
lcall
jno
outsb
aam
call
stc
dec
dec
mov
cli
div
sub
popf
pop
call
mov
adc
mov
jb
insb
jmp
adc
or
mov
in
jg
pop
pop
or
cmp
sbb
add
popa
pop
or
int
adc
shll
dec
or
push
incb
mov
sub
bound
adc
or
fdivl
lock
lods
sbb
sbb
subb
dec
dec
inc
stos
cmpsl
push
insl
push
sbb
imul
lret
cltd
xchg
xchg
or
shl
adcb
in
pop
into
dec
xchg
inc
out
sbb
mov
pop
jmp
ss
jmp
addr16
mov
cs
test
loopne
rcl
inc
aam
loop
add
bound
jne
sub
and
add
pop
xchg
lahf
dec
lret
cmpsb
and
incl
pop
jns
out
bound
cmpsl
and
lods
fwait
and
rorl
addb
rorb
das
frstor
rcrb
dec
or
cmp
dec
lock
mov
pusha
cli
adc
cltd
iret
pop
mov
divl
in
ficoms
push
inc
dec
shlb
mov
pop
lcall
movb
jbe
test
mov
or
cmpl
dec
ds
sub
insl
jo
sub
sahf
pop
xor
lret
aas
iret
lds
in
xchg
sbb
mov
lret
adc
mov
ljmp
adc
push
jb
sbb
inc
outsl
cmp
push
bound
fmull
aaa
cmp
and
sbb
loop
incl
stos
insl
jecxz
mov
out
cmp
jb
enter
insb
xlat
xor
mov
ret
inc
sbb
mov
imull
jle
enter
adc
lret
mov
mov
jmp
adc
add
mov
mov
stos
imul
fbld
pop
sub
xchg
pop
cmp
xchg
xchg
in
xlat
stos
js
mov
mov
inc
jl
jbe
ja
xor
push
xchg
cmp
jge
arpl
imul
mov
sbb
dec
dec
sarb
clc
jae
and
cmpsl
jp
adc
add
fidivs
mov
andb
insb
setp
adc
inc
xchg
aaa
or
mov
sub
icebp
push
mov
test
adcb
out
and
scas
sbb
loope
gs
out
add
cld
mov
es
push
pop
sbb
shlb
in
mov
out
xor
div
and
sbb
clc
aas
mov
jns
jle
dec
and
popa
mov
adc
cmp
ljmp
ret
or
or
sub
test
lods
mov
ret
loop
push
cwtl
cmp
or
jns
sub
cmp
nop
fcompl
addl
out
cmc
std
mov
hlt
es
movsl
add
adc
fadd
sub
ss
daa
mov
jo
dec
es
mov
inc
sbb
cmpsl
push
mov
add
xchg
adc
lea
mov
push
or
repz
adc
inc
in
xor
movsb
cld
imul
sub
push
orl
xchg
jae
test
add
movsb
or
mov
add
decb
aaa
dec
xor
jnp
xchg
jo
sbb
mov
mov
cmpl
repz
clc
xchg
std
mov
xchg
sub
inc
mov
cli
push
cmp
sbb
sbb
jp
push
xor
mov
shrb
push
mov
xchg
fisubs
mov
cs
xor
jecxz
pop
mov
cmovo
pop
xor
push
push
sub
or
inc
fadd
lcall
lds
clc
jo
adc
femms
arpl
dec
or
arpl
in
hlt
test
rorl
pop
jne
scas
inc
sbb
push
stos
divl
mov
call
int3
adc
mov
push
lcall
mov
push
roll
loopne
xchg
xlat
jnp
or
inc
jae
jae
pop
imul
push
pop
aaa
repz
inc
cmp
push
sbb
add
in
roll
add
ret
jle
testb
scas
outsl
rclb
ret
inc
add
in
ja
mov
mov
mov
mov
cmp
gs
dec
or
mov
aaa
cmp
insb
shl
es
cltd
outsl
xchg
xchg
mov
and
cli
jmp
out
subl
mov
lret
mov
sub
fxam
cmpsb
rcl
test
out
push
lret
mov
mov
or
pop
lods
cli
dec
push
out
lds
push
mov
add
push
jns
dec
ds
jge
mov
add
in
mov
pop
mov
sub
es
insl
inc
push
out
and
jnp
push
xchg
rcll
push
mov
cmp
ss
cs
cwtl
outsl
daa
xchg
mov
fstl
mov
mov
cmp
jnp
incl
sub
dec
pop
push
rorl
std
aas
enter
jno
add
xchg
test
push
and
inc
mov
inc
jecxz
clc
lods
in
jecxz
add
pop
fiadds
adc
stc
cmc
adc
pop
rcr
adc
ret
fbstp
and
in
loope
pop
lea
fxch
add
subb
bound
dec
mov
lret
adc
jb
push
shrl
adc
lcall
add
jl
cli
pop
mov
mov
mov
arpl
xchg
je
pop
out
xlat
jns
into
insb
sbb
xlat
push
sbb
fnstenv
out
jecxz
adc
into
xchg
ret
or
ds
mov
cs
imul
sahf
push
orl
mov
xor
addr16
inc
push
popa
pop
sub
cmp
sbb
cmp
xchg
dec
shr
push
dec
dec
notl
jbe
jo
in
mov
mov
movsb
xchg
adc
icebp
js
div
icebp
cmpsl
es
in
pop
sbb
int
and
int3
sarl
sub
sbb
adc
or
inc
jno
mov
jb
aam
ficoms
pusha
cmp
loopne
add
mov
xchg
mov
fbstp
push
in
shrb
aad
mov
push
mov
push
cmpsl
movsb
mov
jecxz
push
rol
add
cld
js
hlt
mov
sub
push
js
lcall
jp
repz
push
lcall
shrl
rep
lahf
imul
or
nop
xor
les
or
jle
fstps
fistl
mov
inc
cwtl
cmpsb
xor
mov
and
ds
xchg
subl
scas
insl
and
aad
cli
in
push
mov
mov
sub
sbb
dec
cmp
xchg
inc
aam
mov
les
call
mov
lcall
push
pop
lock
lret
xchg
cs
addr16
dec
pop
fwait
mov
add
push
sub
loope
add
xor
jb
cmp
pop
fdivl
je
inc
call
jecxz
xchg
rcll
or
lods
dec
int
enter
inc
inc
shrb
jb
adc
pop
xor
jns
je
pop
xor
dec
loopne
jecxz
and
or
push
mov
bound
rcll
or
push
adc
pop
cmp
ss
jo
sub
pop
adc
mov
shll
cmc
mov
into
movsb
outsl
sbb
int
out
ror
mov
mov
pop
aaa
or
jecxz
dec
dec
jbe
mov
mov
fwait
and
mov
rcrl
leave
ret
iret
push
aaa
add
pop
pop
jmp
les
add
cmp
jmp
and
imul
jecxz
pop
std
mov
push
fisubrl
mov
mov
fmull
push
sti
mov
lds
jno
in
xor
fidivrs
lds
sti
jns
std
imul
fwait
cltd
fcomps
lret
enter
fadd
cs
sub
and
call
adc
jle
fistpl
mov
imul
int
fistpl
sbb
inc
ret
mov
jb
jmp
push
jecxz
sbb
push
cltd
pop
outsl
sbb
int
hlt
lahf
sbb
and
mov
mov
push
fldcw
movsl
loop
push
daa
fstps
pop
sahf
sub
and
jmp
push
push
sahf
push
pusha
inc
add
sbb
fldt
sub
push
mov
iret
dec
ror
dec
lock
iret
xchg
sub
ljmp
adc
dec
xor
ss
aad
outsl
imul
popa
mov
or
fcompl
mov
call
fstp
fcom
iret
test
add
cmp
aaa
orb
and
dec
fdivl
loop
enter
inc
ds
ja
jne
insb
je
mov
ror
ror
mov
mov
mov
push
aaa
out
and
push
sbb
out
pop
or
push
or
cmpsb
imul
xchg
pop
or
jnp
insl
leave
jno
fsub
out
xchg
pop
out
inc
inc
adc
aad
inc
inc
daa
jne
jno
ljmp
pop
push
lahf
dec
dec
mov
mov
mov
lods
call
dec
adc
lret
or
cmpl
xor
push
dec
push
adc
aaa
out
cmp
stos
out
sarl
mov
mov
icebp
incb
cwtl
fldenv
inc
mov
adc
ss
push
test
and
xchg
add
es
scas
vpaddd
loope
fisttpl
or
dec
loopne
jb
sahf
popa
mov
pusha
mov
push
fwait
mov
test
cmpsb
js
or
mov
sahf
push
lret
xor
div
pop
pop
andb
and
sbb
push
faddl
inc
cmp
cs
sbb
mov
lcall
mov
bound
sbb
or
es
aaa
ret
in
repnz
popa
jle
add
xchg
lea
mov
jmp
in
cltd
sub
int3
pop
add
js
xor
push
test
popf
rclb
mov
cmp
out
jae
in
jl
push
cmpsb
cli
es
push
push
clc
inc
js
test
hlt
adc
cld
inc
hlt
cld
cltd
mov
faddl
clc
leave
cli
xchg
sub
lods
xchg
sub
and
arpl
mov
shlb
mov
jp
ljmp
mov
mov
sarl
add
arpl
mov
pusha
cmpsl
dec
push
fiadds
jg
xor
xchg
adc
or
dec
add
add
add
mov
sbb
std
cwtl
jo
inc
mov
jae
mov
notl
push
pop
rorb
jb
mov
push
mov
call
xchg
fmuls
shll
xor
stc
stos
and
inc
push
fdivs
xchg
pop
and
jecxz
ja
mov
out
fnstsw
add
lea
or
insl
std
cmp
mov
int3
adc
pop
and
dec
or
jae
xchg
stos
jo
xchg
xlat
mov
xchg
sub
xor
push
add
repnz
mov
and
pop
cltd
push
push
adc
or
sub
jbe
ret
xor
in
xchg
xor
inc
pop
mov
xchg
mov
call
push
fcmovnu
aad
int3
stos
cmc
sarl
add
sti
arpl
fcoms
mov
mov
jb
jle
mov
lods
aaa
lahf
and
scas
scas
loope
mov
jge
jg
call
pusha
and
pop
dec
int
addr16
inc
mov
mov
pop
sbb
mov
nop
ds
lds
outsl
mov
icebp
out
in
pusha
dec
out
xchg
push
ljmp
mov
cmc
cmp
stos
sahf
kmovw
add
cmp
stos
mov
call
pop
adc
pusha
hlt
mov
pop
add
jmp
stos
imul
cmpsl
lock
pop
dec
lahf
retw
mov
cwtl
divb
cmpsl
and
scas
push
or
inc
add
filds
out
in
pop
jo
xchg
dec
adc
xor
mov
push
loope
xchg
pop
adc
hlt
xchg
add
mov
mov
fs
push
test
or
insl
or
and
mov
push
xchg
sub
mov
and
lcall
xchg
cs
jp
jbe
add
das
sub
pop
push
sahf
movsb
sarl
jns
cmpsb
insb
cld
cmpsb
and
cltd
pop
mov
pop
nop
lret
xchg
xor
mov
mov
pop
loop
gs
inc
push
sub
sbb
sti
sbb
xor
sub
xchg
or
xchg
mov
jns
mov
mov
ss
adc
mov
jg
cld
jbe
imull
xor
dec
lret
xchg
mov
incl
push
jns
push
lock
cwtl
and
sahf
fwait
cwtl
dec
add
js
stc
jno
lock
fwait
sbb
xchg
push
adc
inc
mov
jno
movsl
fs
ret
sbb
xchg
xchg
adc
mov
mov
mov
inc
lret
sub
adc
cmpl
sub
movsl
xlat
adc
cs
and
subl
jne
lahf
pop
fiaddl
push
andl
mov
in
sub
call
inc
mov
mov
call
data16
nop
lret
mov
mov
int
out
xchg
adc
movsb
dec
adc
aas
sti
sbb
test
out
addr16
pop
mov
xchg
xchg
mov
mov
inc
in
mov
fwait
jne
loop
push
mov
mov
cmpsl
and
negb
aad
dec
aam
leave
or
inc
sbbb
inc
scas
jae
lods
lcall
or
inc
dec
std
mov
ljmp
xchg
sahf
or
cwtl
sahf
je
inc
aas
lret
insb
sbb
sbb
sahf
arpl
mov
xchg
xchg
fldcw
std
ret
cmp
xchg
je
loope
push
shlb
ret
scas
out
shl
sti
arpl
jp
rclb
lds
mov
scas
sarl
daa
ljmp
xchg
adc
mov
divb
sbb
sbb
xchg
dec
or
xchg
clc
jnp
pop
daa
add
das
xlat
pushf
cli
clc
clc
xchg
xchg
out
mov
adc
lods
push
sbb
or
mov
cs
mov
fstpl
bswap
bound
test
test
mov
push
popa
std
xchg
in
mov
inc
filds
mov
and
dec
add
mov
fbstp
lcall
shll
pop
mov
sbb
jns
sub
addr16
push
cmc
shrl
jno
mov
pushf
outsb
andb
loop
push
dec
mov
lahf
addr16
and
push
mov
fldenv
fisubs
xchg
iret
sti
subl
inc
pop
cmp
mov
ret
dec
rcl
test
cmpsl
lea
jle
sahf
popf
fimull
mov
sub
dec
jmp
rcr
icebp
lock
push
pushf
pop
adc
int3
xchg
dec
sarl
jno
loop
pop
das
xlat
pushf
push
rol
inc
mov
sub
pop
movsl
out
loopne
pop
xchg
inc
adc
subb
fnstenv
scas
ficompl
loope
xorb
repz
xor
push
dec
push
rcl
into
inc
or
insb
push
js
xor
or
xor
sbbb
cwtl
dec
fdivrl
jnp
jns
es
out
movsb
mov
push
aas
or
mov
addr16
out
jmp
add
xchg
lret
stc
es
inc
lock
inc
out
jae
fistpl
arpl
rcll
mov
sub
ljmp
cmpl
test
jge
bound
fxch
inc
cmp
hlt
add
je
pop
es
ret
pop
pop
sbb
dec
or
ja
hlt
outsb
sub
mov
ss
push
loopne
adc
mov
jg
in
jecxz
mov
mov
cwtl
dec
mov
sbb
addr16
or
fcomip
sbb
add
inc
ss
mov
fistps
paddusb
addl
mov
push
aad
dec
or
jb
sub
pop
sbb
dec
lret
dec
push
nop
js
lock
cmpsl
sbb
cwtl
xchg
and
xchg
iret
int3
leave
inc
js
stos
lret
out
cmp
xchg
ror
ljmp
adcb
cmp
insb
loope
pop
pop
call
dec
mov
mov
scas
and
fcmovnu
aad
inc
in
lret
push
add
jge
or
jp
sahf
xor
sbb
les
xor
subb
push
or
aad
push
aam
hlt
jp
insb
jge
cmpsl
das
jne
imul
sarl
xor
addr16
pushf
cltd
or
xchg
inc
ret
mov
scas
mov
adc
movsb
dec
adc
push
push
inc
incb
popf
sub
xchg
pop
cmpsb
inc
and
cmc
mov
addr16
cmc
mov
jmp
cmp
popf
inc
or
mov
xchg
fidivrs
ljmp
dec
fstpt
js
ja
push
cmp
cmpsl
pop
in
sbb
or
cmp
inc
or
or
and
sbb
jns
xor
xorb
lods
arpl
fwait
mov
mov
add
addr16
loop
sbb
pop
cmc
sarl
add
das
loopne
xchg
sbb
into
sub
add
ljmp
mov
fmuls
addb
hlt
repz
popf
mov
sbb
lea
mov
mov
insb
cmpsl
stc
ja
push
fwait
pop
jb
nop
pop
shll
mov
mov
out
push
ljmp
aam
push
mov
push
sbb
sub
fs
or
jg
rorl
mov
scas
pop
pusha
test
push
xlat
loopne
or
jnp
jno
cld
push
xor
mov
xor
jg
dec
addb
xorb
lahf
dec
push
lret
mov
mov
sub
cwtl
pop
adc
dec
mov
cld
xlat
outsl
insb
imul
cltd
push
or
cmp
stc
inc
mov
cmp
jo
in
pop
nop
int
call
sti
mov
fwait
cltd
cltd
call
fbstp
push
into
mov
enter
ljmp
cld
sarb
push
stos
fimuls
push
mov
icebp
lock
popf
fwait
and
sbb
int3
test
sarl
test
fs
mov
sbb
cmpsb
mov
aas
sub
mov
insl
and
jmp
out
test
or
xor
xor
ficoms
xchg
mov
in
ret
jmp
add
loop
cmp
xor
hlt
fisttps
cltd
bound
xchg
jb
mov
jbe
jo
push
jl
aam
dec
or
into
cwtl
jns
push
jl
cli
div
call
sbb
adcl
inc
mov
jno
lock
pop
adc
nop
rorl
sub
lods
pop
push
push
adc
xchg
push
inc
jg
push
pop
jge
jnp
xor
rolb
add
xor
movsl
sub
movsb
and
lahf
push
add
dec
or
inc
xor
or
testl
cmpsl
sub
dec
sbb
lret
inc
shll
shlb
arpl
imul
adc
xchg
add
shrl
mov
out
insb
pop
xlat
clc
sti
pop
pop
add
pushf
ds
cmp
mov
inc
loop
pop
pop
enter
add
stc
hlt
pusha
inc
mov
rcr
push
or
dec
or
orl
jnp
jne
idiv
pop
sub
xchg
sbb
lcall
cltd
push
pop
mov
xor
xchg
adc
xchg
xchg
rolb
fisttpll
jo
imulb
repnz
dec
xor
xchg
or
int3
dec
inc
jbe
jae
mov
mov
imul
or
sarb
and
sub
xor
cmp
decb
adcl
aam
inc
sub
faddl
loop
mov
movsb
cli
les
fstps
inc
add
jg
into
imul
sbb
inc
clc
mov
cltd
sahf
jo
rcrl
and
inc
sti
ret
cmp
xor
addr16
out
out
push
orb
jp
call
xor
addr16
mov
mov
das
in
mov
adc
and
shll
xchg
add
es
movsb
pop
and
lods
cmp
fiaddl
fnstcw
inc
cmpb
push
lahf
fwait
call
pop
iret
int3
leave
inc
js
rclb
jbe
cwtl
push
fstpl
push
adc
cmp
fildll
imul
xchg
xchg
mov
jne
mov
sub
aaa
fldl
aaa
aaa
leave
test
mov
andb
mov
popa
arpl
xlat
sbb
scas
inc
into
ds
sub
or
sbb
cwtl
inc
vhaddps
out
add
es
xlat
das
dec
ret
push
adc
xor
push
xchg
mov
imul
mov
arpl
fisttpll
leave
push
nop
mov
push
out
gs
pop
in
mov
or
jg
cmc
jg
mov
stos
mov
dec
adc
data16
jl
add
aas
sub
sbb
dec
jbe
inc
sarb
fnstsw
lahf
sbb
rcrl
inc
mov
into
ss
jmp
in
jne
adc
or
inc
je
jmp
inc
xchg
arpl
nop
stc
xchg
cmp
sarb
mov
push
ret
pop
push
mov
mov
xor
or
dec
xor
rorl
aas
leave
inc
cmc
out
andb
pop
fcmovne
push
xlat
sbb
incl
lds
incl
subb
arpl
pop
adc
lret
push
xchg
repnz
mov
mov
repz
pop
fimull
mov
rolb
sub
in
or
or
dec
dec
cmp
xor
push
pop
addl
mov
push
stc
cmp
xorl
out
fcoms
bound
xchg
dec
cli
lea
mov
sub
jb
xor
xlat
inc
flds
je
insb
cmpsb
adcb
and
stos
ffree
leave
movb
jp
cmc
out
out
push
adc
pop
cmpl
cmp
gs
fcomip
mov
push
xchg
xor
fisttps
xlat
inc
mov
cmp
rcrb
js
adc
lds
mov
xor
stos
jecxz
xchg
les
push
rorl
int3
pop
jae
cmpl
lahf
imul
push
pop
int
enter
lret
mov
dec
lcall
adc
dec
mov
jbe
jae
ljmp
loopne
ret
inc
adc
mov
jne
sbb
jmp
push
insl
adc
jecxz
cmp
aas
mov
push
xor
xchg
mov
shll
mov
loopne,pn
pop
mov
dec
loope
or
push
mov
aad
push
pop
push
les
dec
js
jne
mov
push
popf
out
cltd
ficoms
dec
cmp
sbb
icebp
out
outsl
fcompl
sbb
bound
mov
test
in
inc
jno
addr16
rclb
xchg
cwtl
mov
test
mov
sub
xchg
pop
or
aaa
inc
js
test
sub
lret
push
push
dec
xchg
or
adc
mov
pop
fwait
push
jp
aam
into
lret
enter
xor
int
lock
sub
prefetch
pop
sbb
lea
add
js
popa
outsl
negb
xchg
rcll
ss
outsl
cmp
data16
icebp
mov
pop
push
adc
inc
xchg
push
aaa
sub
push
cmp
mov
adc
cmp
stos
cmpsb
jecxz
xlat
push
jbe
shl
or
add
inc
scas
cwtl
insl
xor
ds
xor
icebp
xchg
jge,pt
sbb
jbe
jo
stos
and
mov
daa
int3
leave
ret
ret
pop
mov
movsb
or
in
inc
flds
sub
cmpl
aaa
dec
fs
pop
sahf
pop
cmp
fwait
insb
adc
inc
rclb
mov
or
out
mov
nop
ss
call
pop
mov
push
xchg
push
push
js
xchg
cmp
out
out
adc
rorl
push
add
std
test
sub
mov
adc
jl
xor
inc
idivl
iret
fdivr
mov
adc
xchg
adc
mov
lock
push
dec
clc
adc
fcoml
mov
repz
add
push
das
stos
in
mov
ficoml
xchg
push
or
mov
mov
jae
loopne
and
sub
paddsb
xor
out
sti
scas
sub
insb
sbb
lret
push
clc
ja
cmc
sub
and
xchg
sbb
rolb
dec
mov
test
outsb
and
mov
cmp
push
movsl
sbbb
ds
imul
sbb
stos
movsb
orps
pop
or
xchg
xor
push
lahf
inc
and
mov
jl
mov
das
in
scas
imul
mov
repnz
inc
push
cld
sub
je
jmp
push
pushf
clc
mov
push
dec
jns
rcrb
push
inc
adc
outsl
pop
jle
xor
cld
xlat
jle
or
in
fs
and
sbb
jnp,pt
push
rolb
outsb
pop
cmp
push
dec
inc
clc
andb
mov
bound
mov
cs
fsts
in
xchg
push
mov
mov
mov
shll
push
xor
test
jo
xchg
dec
fmull
dec
cwtl
ret
sti
mov
sbb
push
xchg
dec
enter
leave
cmp
repnz
dec
jbe
es
adc
dec
adc
or
rep
push
test
jo
out
pusha
sbb
aaa
stc
mov
ss
add
out
pop
inc
fstl
or
es
xchg
popa
pop
pop
lret
adc
push
mov
push
sti
subb
pushf
dec
add
mov
ja
cld
pusha
cmc
test
and
and
mov
aam
push
test
insb
add
mov
inc
fcoms
js
jmp
mov
lret
push
mov
and
adcl
ds
cmp
and
rcl
es
fcompl
nop
jo
sti
mov
or
mov
push
push
flds
adcb
test
hlt
lcall
sub
xor
out
jmp
arpl
movsb
pop
jb
jg
lcall
jns
pushf
ljmp
sbb
adc
xchg
sub
ret
mov
xchg
leave
sub
inc
add
inc
popf
or
repz
fistps
dec
mov
scas
inc
scas
notb
loop
daa
xor
mov
lret
enter
xor
imul
fs
mov
adc
mov
mov
xor
lahf
sbb
mov
xchg
das
cltd
push
les
jp
insl
sub
ljmp
mov
or
xor
pop
imul
fbstp
dec
adc
xor
enter
frstor
call
jle
das
or
xchg
daa
scas
push
xchg
dec
push
push
dec
enter
loope
fdivl
je
leave
lcall
xchg
rcrl
call
in
sti
inc
adc
movb
lahf
aaa
and
add
aas
push
imul
pop
pop
out
mov
cli
sarl
and
in
lcall
mov
pop
mov
mov
movsl
test
mov
jl
aad
test
push
sahf
ja
mov
gs
pop
cli
int3
push
stc
add
rcl
cmc
icebp
out
call
and
inc
push
lcall
js,pt
out
sub
and
mov
cmp
out
and
mov
in
ljmp
in
shlb
das
sahf
lcall
adc
push
psubb
xchg
pop
cmp
les
xor
jmp
fcompl
push
xlat
cli
pop
sub
out
sub
push
and
cmp
sub
sbb
imul
test
leave
jl
jne
das
hlt
jmp
sbb
pop
xchg
mov
adc
dec
inc
inc
test
in
movsb
arpl
lea
xchg
in
sub
out
sbb
shll
mov
mov
sbb
dec
inc
cld
pushf
jb
jg
xchg
xchg
mov
fsts
push
jp
in
mov
and
aad
cli
shlb
lret
frstor
sub
sub
xchg
push
dec
jle
push
adc
fs
inc
cmp
cmpsb
imul
lahf
jecxz
ret
mov
xchg
pop
mov
out
push
push
pop
push
or
push
mov
adc
inc
xchg
mov
gs
mov
xchg
fiaddl
mov
stos
and
rcl
adc
daa
dec
stc
popf
sbb
dec
mov
test
pop
lahf
inc
ret
xchg
movsb
cmp
push
imul
leave
rcrl
inc
sub
cwtl
icebp
out
jmp
push
xchg
rorl
or
cmp
rorb
sub
mov
cwtl
imul
mov
xor
push
ds
push
repz
arpl
mov
cmp
mov
pop
orl
loope
mov
nop
stos
xor
mov
sub
shlb
loope
cld
jl
hlt
bound
sbb
ss
enter
inc
add
cmc
xchg
outsl
testb
ja
sbb
out
mov
out
addr16
sbb
and
andl
mov
xor
sub
adc
mov
aaa
ja
int
cmpl
loopne
xor
mov
add
or
out
jle
push
fs
orl
pop
add
fcmovu
stos
repnz
rclb
rol
sbb
cmp
outsl
mov
das
push
adc
inc
dec
gs
pusha
lahf
lahf
mov
arpl
mov
leave
mov
xchg
add
stos
xor
scas
jmp
sahf
mov
xchg
sub
jnp
sbb
mov
sahf
movsb
fs
pop
loop
pop
in
xchg
add
or
sti
shlb
cmpsl
mov
dec
xchg
xchg
cmp
fbstp
addb
pop
js
pushf
pop
sbb
loopne
dec
inc
rorb
call
in
ret
cltd
xchg
xchg
inc
lock
sarl
das
or
or
jnp
out
inc
mov
rcll
movsl
xlat
pop
ret
aad
nop
or
cmp
push
xchg
jmp
in
pop
popf
enter
add
sub
movsb
fs
fwait
adcl
dec
into
cmpsb
jg
cli
loop
iret
jne
and
outsb
std
mov
add
inc
pop
shll
sar
div
cmp
mov
cli
sbb
sbb
nop
int3
sub
mov
pusha
movsb
push
xchg
mov
xchg
sbbb
inc
mov
push
bound
add
dec
and
cwtl
mov
xchg
nop
mov
scas
pop
repz
test
inc
aad
iret
sbb
push
or
test
jb
mov
mov
sti
push
fnstcw
into
popf
ficoml
xor
ja
xor
ljmp
stos
aaa
inc
stos
push
push
cwtl
gs
inc
push
jecxz
in
mov
jg
or
pushf
ret
ss
jmp
in
inc
out
aaa
mov
mov
inc
add
call
jg
xchg
pop
push
dec
mov
mov
mov
imul
out
cmp
jns
testb
jnp
jae
and
lret
mov
loope
mov
push
mov
imul
clc
shlb
cmp
sub
ret
and
xchg
adc
pop
sub
cmp
cwtl
cmp
inc
sbb
xchg
adc
inc
mov
orb
shr
jmp
int
enter
push
call
jne
add
jmp
push
shl
mov
mov
xor
scas
lods
sub
psubusw
leave
xor
mov
daa
and
xchg
xchg
add
sbb
cmp
imul
loopne
adc
pop
sahf
mov
cmp
mov
mov
leave
jmp
pop
push
xchg
pusha
or
mov
adc
and
cltd
pop
jecxz
pop
enter
jnp
jne
jbe
cmpsb
repz
fnstsw
pop
rcll
call
and
dec
xchg
clc
idivb
sub
pop
pop
pop
sbb
dec
dec
dec
add
jae
mov
cld
mov
pusha
xchg
daa
xchg
lahf
lret
sbb
cmp
call
out
clc
daa
and
push
imul
push
or
mov
jg
mov
inc
ljmp
lds
or
mov
mov
mov
jo
loopne
fisttpl
cli
subb
std
cmp
test
mov
mov
xchg
xchg
hlt
jg
scas
lods
push
cltd
mov
pop
leave
inc
ds
jl
pop
fwait
xor
test
sub
rcrl
adc
sub
push
scas
outsb
push
pop
les
filds
loop
cmp
mov
sahf
divb
mov
mov
pop
iret
jmp
inc
subb
and
inc
pushf
pop
aad
xchg
popa
fxch
xor
push
outsl
mov
loop
call
add
mov
icebp
xor
and
sbb
dec
dec
or
jbe
ja
pop
mov
sub
fimuls
rorb
test
out
jmp
inc
and
sahf
inc
push
inc
or
jg
mov
xor
adc
pusha
sbb
push
outsb
movb
je
sub
cmp
aas
mov
push
adc
mov
sub
lcall
repz
mov
adcb
add
loope
add
xchg
dec
cmp
mov
cmp
cmp
daa
mov
data16
push
adc
jge
mov
sbbb
jmp
pushf
stos
pop
in
cwtl
loopne
push
fwait
inc
mov
outsb
add
jae
daa
or
lret
mov
int3
ja
cmp
cs
movb
lret
shll
add
xor
mov
repnz
xor
pop
lahf
sub
pop
popf
nop
cmp
jbe
pop
jle
data16
mov
mov
inc
mov
jbe
movsb
and
fistpll
sub
sbb
mov
insl
sbb
push
repnz
ret
in
mov
jmp
mov
cmc
xchg
cmpsl
mov
imul
xor
mov
enter
stos
loopne
dec
in
push
lcall
pop
scas
aas
ror
sub
push
or
insl
push
mov
mov
ljmp
push
dec
push
add
in
mov
mov
inc
and
add
mov
xor
leave
sbb
xchg
std
nop
xchg
aad
adc
mov
out
les
in
inc
xchg
cmp
mov
or
xor
std
test
imul
or
mov
mov
sbb
loopne
adc
insb
inc
pop
pop
std
std
sti
clc
pop
pop
xor
sbb
push
loope
push
lds
icebp
jnp
fwait
cld
stos
pop
outsl
pop
fsubl
stc
ss
fwait
xor
mulb
xchg
dec
out
insb
fmull
dec
mov
jge
mov
mov
pop
fwait
mov
cmp
xchg
xor
mov
adc
pop
fcmovnu
aad
dec
adc
inc
iret
aam
mov
pop
mov
pop
stc
mov
xor
enter
int
dec
push
lds
pushl
out
outsb
icebp
jns
sahf
insl
sahf
xlat
pop
iret
cwtl
inc
iret
xchg
sarl
lods
jns
hlt
ja
idivl
mov
lcall
inc
in
mov
push
jne
cltd
adc
or
mov
mov
insl
inc
pop
imul
ljmp
shll
mov
sub
push
add
mov
or
jnp
ret
insl
xor
js
daa
and
jns
insl
ret
test
mov
adc
sbb
ds
ja
repnz
push
sbb
lock
mov
out
jb
icebp
pusha
mov
xchg
mov
mov
mulb
loopne
popa
jge
ret
std
cmp
inc
push
scas
jae
mov
lahf
cltd
cs
rcrl
jge,pt
xchg
ret
das
shll
and
int
les
aam
jo
jmp
jo
xor
push
adc
ja
xor
repnz
mov
fwait
push
xchg
cli
int
mov
adc
inc
sub
out
push
pop
loopne
pusha
push
mov
aas
xchg
dec
mov
sub
mov
push
sub
adc
btrl
popa
fcomps
sbb
xlat
mov
cmp
testl
pop
pop
push
int3
pop
xlat
inc
lds
cltd
outsb
stos
test
mov
rolb
daa
and
mov
pop
mov
ret
pop
pop
dec
test
inc
scas
stos
mov
test
jg
mov
icebp
mov
dec
packuswb
sahf
sbb
hlt
mov
mov
ficoml
aad
xlat
push
push
aaa
jg
std
cmp
in
sub
leave
mov
pop
sub
add
subb
icebp
mov
xlat
mov
fdivrp
inc
xchg
add
push
inc
sbb
fs
inc
mov
nop
outsb
into
dec
xchg
xor
mov
outsb
test
leave
flds
add
div
hlt
cmp
fiaddl
mov
mov
cmpsb
adc
mov
push
mov
mov
jp
cmp
dec
adc
mov
jge
test
leave
dec
aaa
in
std
xor
out
push
std
cmp
stos
out
add
cmpsb
and
inc
dec
jbe
inc
sarb
mov
enter
rcr
fnstsw
jmp
cmpxchg
push
add
and
sbb
jo
sahf
pushf
inc
push
add
fstpl
rclb
aaa
jns
mov
jae
prefetchw
fwait
pop
in
push
aas
cmp
pop
add
std
cmp
inc
shrb
fnsave
dec
jmp
test
inc
out
bound
not
ror
jle
lds
cld
ds
adcb
test
and
push
sbb
dec
inc
jmp
adc
inc
cli
xor
outsl
jno
imul
adc
mov
add
rcrl
cmp
xor
frstor
jecxz
fisttpll
lret
cmp
leave
aas
cmp
stos
and
out
fs
pop
pop
popf
gs
cmp
jmp
sahf
insl
adc
cs
int
fbld
mov
jnp
cmpsb
and
in
xchg
pop
ja
dec
rol
inc
cmpb
add
and
enter
xchg
hlt
icebp
ret
ficomps
es
dec
adc
mov
add
in
in
adc
aad
clc
ret
mov
loop
fsts
filds
push
aam
ja
imulb
test
inc
xlat
pop
xlat
sbb
push
add
jae
call
sbb
push
xchg
sbb
stc
jae
fsubr
popf
xor
push
xchg
std
jl
dec
insl
jmp
mov
pop
movsb
push
xchg
mov
ss
cmp
ljmp
aam
add
or
mov
cs
sahf
jo
adc
xlat
jg
cmc
jl
mov
jecxz
sub
bound
push
nop
lcall
ss
xchg
xchg
mov
int3
sub
adc
rol
popa
scas
insl
stos
repnz
jns
mov
xchg
cmc
xor
cmp
adc
imull
in
and
sbb
adc
cmp
mov
cs
pusha
pop
lcall
loope
out
adc
ljmp
aad
xchg
or
add
mov
push
push
cmpsb
xchg
and
mov
fcompl
loop
xchg
fldenv
movl
ffree
fwait
push
adc
lret
repz
sti
stc
imulb
and
sbb
sbb
hlt
cmp
sub
test
lret
inc
inc
mov
mov
pop
push
adc
dec
or
push
xchg
add
inc
aas
cmp
repz
mov
les
inc
outsl
movl
cmpsl
pop
cmp
push
inc
xchg
rcl
adc
data16
pop
movsb
add
addl
sarb
jne
jae
insl
fwait
and
mov
lcall
jo
mov
jne
xchg
movsb
adc
sbb
insb
mov
in
xor
mov
clc
nop
pop
or
mov
mull
loop
mov
xchg
into
or
ss
insl
adc
stos
out
fcoms
mov
lret
popl
test
test
sub
mov
push
pop
iret
inc
lds
adc
xlat
sahf
stc
div
lock
scas
and
push
sbb
cmp
jne
jmp
mov
cltd
xchg
div
out
out
cmp
and
es
sub
out
add
add
push
cmp
out
or
inc
mov
sub
or
cltd
pop
fsubs
fiadds
std
shlb
repnz
ss
cmp
scas
sti
ror
or
pop
mov
jnp
sub
jnp
sbb
dec
dec
dec
lods
aas
stos
icebp
dec
cmc
xchg
stos
cmpsl
sbb
call
or
or
dec
bnd
in
xor
inc
lret
mov
iret
daa
inc
mov
sub
jns
in
xchg
imul
inc
std
rclb
add
ret
xor
jecxz,pt
in
arpl
pop
or
test
add
cmp
and
and
push
push
call
mov
jnp
mov
and
lret
cmp
iret
int3
pusha
push
stc
cmp
shr
dec
mov
js
mov
jnp
bound
outsl
insb
test
pop
loopnew
lods
inc
or
int3
enter
mov
hlt
pop
popa
inc
loop
sbb
or
ss
dec
test
push
or
repnz
lea
mov
lods
test
fcmovbe
cmp
in
xchg
add
divb
xor
xor
in
dec
dec
adc
and
shll
stos
xlat
jl
outsb
pushf
cltd
sub
cmp
and
in
call
sbb
nop
int3
popa
stos
sbb
mov
xor
call
push
stos
imul
out
cmc
ret
leave
adc
mov
xor
daa
fcoms
jno
movb
dec
mov
pop
sub
cmp
mov
add
jae
test
out
mov
lret
cmpsb
std
dec
aas
stc
jb
and
imul
int
dec
int3
stos
inc
inc
mov
nop
insl
mov
sub
ficompl
dec
inc
addb
ret
out
lods
mov
jecxz
pop
fsts
xchg
icebp
dec
enter
ja
mov
int3
mov
sub
pop
push
addr16
inc
or
push
push
inc
jmp
mov
cmp
test
add
mov
sub
xchg
pop
das
cmpsb
jle
dec
scas
and
sbb
xlat
clc
mov
pop
cltd
xchg
stc
faddl
mov
es
and
pushf
fdivrl
xchg
rorb
and
addb
test
stc
mov
cmpsl
data16
adc
pushf
mov
gs
xchg
mov
jmp
push
push
xchg
pop
or
add
cmpb
adc
test
inc
inc
push
dec
or
cmp
mov
js
lods
xchg
cmpsb
mov
dec
or
inc
mov
bound
sub
outsl
dec
js
mov
into
push
dec
inc
int3
xchg
jns
insb
sub
fcomps
add
lret
rcrb
mov
inc
call
sbb
adc
add
je
stos
in
mov
loope
push
pop
in
dec
mov
mov
mov
imul
pop
add
scas
dec
rorl
jle
mov
dec
iret
xchg
dec
xchg
or
inc
mov
fcomp
shrl
lret
fwait
and
inc
add
push
jnp
stc
push
jmp
mov
gs
or
push
add
ja
repnz
sahf
pop
pop
pop
xchg
adc
leave
jo
push
call
loop
rorl
push
mov
insb
xor
in
testl
lds
jl
fnsave
pop
push
mov
dec
xchg
fldl
out
and
lods
pop
sub
je
subb
jnp
ds
je
outsb
out
xchg
sbb
test
dec
int
stos
mov
out
jne
aad
sbb
sbbl
outsb
sub
ds
adc
push
mov
xchg
insb
cwtl
mov
push
mov
mov
dec
jmp
dec
and
xchg
leave
std
mov
outsb
or
stc
mov
sbb
int
sbb
xor
push
imul
sbb
dec
roll
xor
fs
loope
scas
mov
mov
push
mov
inc
mov
ljmp
fsubs
frstpm(287
sbb
imul
or
xchg
jnp
sbb
cmp
xor
or
pusha
mov
dec
xchg
push
in
xor
sbb
scas
faddl
fcmovbe
push
movsl
idivb
xor
jns
aam
cmp
imul
jg,pn
dec
test
fdivrs
outsl
xchg
sbb
pop
pop
and
aaa
cld
lcall
jmp
mov
push
adc
aas
cmp
mov
cwtl
or
pushf
popa
loopne
add
lods
lret
inc
or
scas
lods
xor
jecxz
int3
fisubl
rcrl
aaa
add
cmc
or
sub
mov
rclb
je
xchg
adc
insl
and
int3
push
or
ds
leave
movsl
fbstp
pop
out
pop
sbb
or
sti
xchg
in
xchg
jae
lods
data16
pop
xchg
mov
data16
and
xchg
sub
adc
mov
enter
xchg
cld
hlt
test
jb
fmull
fldenv
jl
movsl
mov
mov
vcmpneq_oqsd
lret
or
test
arpl
jne
and
adc
mov
inc
shr
popa
imul
add
decb
std
div
inc
jns
or
and
cwtl
fistps
mov
test
pop
cmp
pop
ficomps
push
insl
fs
mov
sub
fwait
aad
push
lret
into
into
ss
jl
pop
insb
out
sub
in
push
dec
or
inc
call
fs
imul
enter
mov
outsb
dec
in
lahf
pop
sbb
ret
add
cmp
fiadds
adc
push
lret
out
mov
sbb
sbb
out
lcall
dec
mov
lret
jb
repz
loopne
loop
outsb
pop
in
rclb
sub
sahf
cli
into
es
sub
adc
int3
or
xor
dec
incb
and
pop
xchg
push
les
push
std
lahf
dec
pusha
out
mov
or
mov
xor
rol
sarl
mov
sbb
or
je
jo
mov
cmc
cmp
ljmp
es
dec
data16
jl
ja
divl
in
jecxz
ljmp
push
dec
and
dec
in
jle
arpl
mov
ficoms
jl
iret
xorb
in
push
xchg
sbb
in
fmull
lcall
test
adc
push
adc
mov
push
jno
push
ss
arpl
orl
dec
pop
aaa
mov
jns
jmp
mov
cmpsb
loopne
push
xlat
xchg
popa
je
mov
jb
xor
sub
pop
pop
push
rorb
inc
cld
rcrb
out
ss
xchg
fcmovne
dec
test
mov
imul
mov
mov
mov
imul
mov
in
mulb
xlat
xchg
test
fimull
pop
insb
push
sub
movsl
in
sbbl
pop
adc
mov
or
insl
mov
mov
push
in
pop
xchg
jno
enter
mov
addl
movsl
and
mov
stos
or
or
mov
cmc
xor
fwait
adc
mov
orb
insb
in
push
imul
mov
xchg
cmp
das
inc
sbb
out
test
inc
sbb
adc
xor
push
ss
data16
outsl
xchg
lcall
jb
mov
pop
sbb
pop
loopne
pop
sub
mov
stos
xor
out
cmpsl
sub
jle
enter
cmpl
stos
test
push
cmp
mov
clc
stc
notb
out
sub
and
arpl
cltd
pusha
sahf
popa
xchg
rcrb
repz
imul
xchg
nop
nop
lea
mov
in
jmp
push
fists
adc
or
push
dec
mov
sub
test
pop
push
mov
jbe
lods
mov
mov
lods
mov
call
add
sti
lods
jo
icebp
lods
sub
and
inc
jmp
inc
dec
cs
lods
mov
movsb
cli
mov
enter
mov
cmp
stos
sbb
call
decl
inc
cmp
jno
gs
arpl
jb
cwtl
xchg
popl
inc
jae
add
pop
xchg
ficoms
xor
add
adc
fwait
das
mov
fcomps
arpl
push
mov
jns
cmpsb
shlb
and
lods
sub
add
mov
add
and
push
inc
in
push
sbb
andb
and
cmpsl
repnz
jno
imul
mov
xchg
shlb
dec
mov
sub
out
push
mov
mov
mov
cmp
cmp
ljmp
pushf
or
les
stos
aaa
out
in
fisubrs
fs
pop
pop
xlat
inc
sti
add
xor
cld
and
ficoml
dec
rcrl
ret
int
sti
mov
daa
cmpsl
movsb
mov
push
sub
push
stc
daa
and
pusha
int
out
fistl
xchg
sahf
cmp
outsb
cmp
inc
lahf
inc
popa
pop
data16
sbb
sti
sbb
ret
mov
cmpsb
fbld
inc
ljmp
cmc
cmp
mov
pusha
sub
dec
filds
xchg
jp
sub
ret
popw
add
mov
sub
test
and
adc
aam
decb
mov
jne
aas
gs
imulb
imul
xchg
xchg
sbb
pushf
mov
add
and
push
adc
aas
cmp
or
inc
popa
pop
push
pop
je
xchg
jo
mov
divb
ret
push
fmull
mov
int
call
aaa
cmc
dec
fisubs
xchg
pop
iret
lea
test
pop
jge
mov
lock
daa
pusha
mov
mov
fwait
mov
icebp
or
sahf
pop
lcall
dec
ret
mov
jo
jae
hlt
std
insl
cmp
lret
fildll
mov
lods
sub
sbb
mov
stos
or
cmp
stos
imul
or
and
adc
dec
push
push
mov
inc
nop
jmp
inc
test
popf
ds
jp
jns
insl
aad
das
mov
stc
xchg
push
lret
mov
dec
icebp
mov
inc
jecxz
sbb
fisttpl
xchg
inc
add
mov
pop
fists
push
push
or
push
pop
stos
adc
jne
in
xor
popa
pop
cmp
mov
repnz
adc
bound
pop
fsts
push
or
imul
cs
sub
push
mov
mov
jb
lods
outsl
and
pushf
adc
roll
les
daa
jp
insl
insl
inc
add
popa
outsl
das
jmp
push
adc
mov
push
pop
insb
jae
fs
mov
adc
int
cmp
aad
add
loope
xchg
sahf
adc
xchg
pop
xor
sub
loopne
aas
fwait
pop
push
outsl
add
imul
mov
cmp
fistps
mov
mov
mull
mov
iret
sub
lock
mov
loope
sbb
lcall
inc
xchg
mov
mov
lock
sbb
jg
in
dec
or
and
mov
push
iret
xchg
dec
arpl
mov
fst
pop
inc
fcmovbe
aam
fisubl
jnp
xor
mov
pop
sbb
mov
xchg
pop
mov
insl
into
xchg
mov
sbb
jb
jno
gs
cltd
pop
lea
dec
ret
xorl
jmp
lahf
adc
add
cmp
sub
jmp
push
xlat
mov
adc
or
push
add
push
mov
frstor
sarb
fwait
pop
xor
addl
movsb
or
pop
pop
dec
push
adc
dec
pop
enter
popa
pop
mov
cmpsb
addr16
mov
sbb
push
movl
loope
movsl
gs
xchg
or
lret
inc
add
cmp
mov
dec
mov
dec
inc
mov
nop
push
pop
cmpb
xor
cmp
dec
js
or
xchg
out
inc
mov
scas
adc
push
ret
sub
mov
das
rol
cmp
xor
sub
push
xor
push
push
dec
mov
inc
scas
hlt
loopne
outsb
shlb
je
mov
mov
push
shl
les
out
fisttps
push
or
inc
xor
mov
pop
pusha
mov
dec
incb
jge
mov
mov
mov
xchg
stos
in
notb
add
sub
dec
or
xchg
pop
jle
outsl
ja
arpl
clc
sahf
jmp
sub
int
aam
into
loopne
clc
add
cli
stc
push
push
cli
out
mov
adc
sbb
or
mov
cmp
gs
mov
pop
mov
xchg
cmpl
in
adc
xlat
push
pusha
lar
adc
inc
aas
xor
ret
imul
sub
pop
pop
mov
push
mov
cmp
mov
stos
xor
out
sub
sbb
pop
add
jnp
sub
and
adc
dec
dec
xlat
jl
dec
jg
js
stos
mov
pop
std
mov
leave
sub
cmp
sub
and
aas
ret
sbbb
cmpsb
cs
imul
cmp
mov
pop
dec
xchg
jle
xchg
jbe
scas
dec
pop
xor
add
jge
aaa
mov
mov
outsl
pop
mov
test
xor
rcrl
pop
mov
push
repz
jnp
pop
mov
push
aas
fst
add
dec
dec
dec
ret
pushl
fwait
out
cmp
sub
enter
fsubrl
jp,pt
sub
jmp
repz
mov
lahf
out
rolb
or
mov
test
cmpl
and
mov
adc
xor
jle
or
mov
insl
and
mov
adc
cmp
inc
mov
int
push
movsl
ja
jno
and
add
and
cmpsl
dec
mov
pop
sub
xchg
into
push
hlt
test
mov
hlt
mov
loope
pop
mov
mov
add
jo
sub
fistps
cli
xlat
inc
imul
les
push
mov
cmp
xchg
mov
fnsave
popf
or
cmp
mov
scas
mov
sub
sbb
dec
rol
dec
rclb
popa
mov
mov
push
pushf
clc
sahf
repnz
int
inc
jl
mov
arpl
shlb
and
sbb
xchg
xchg
xchg
nop
xchg
xchg
ds
xor
in
pop
mov
jecxz
rol
icebp
sub
pop
cmc
mov
jmp
cmpsb
cmp
and
push
cltd
jle
cmp
jns
addr16
mov
mov
jecxz
sub
imul
stc
gs
mov
fwait
mov
sbb
dec
jnp
xorl
in
leave
test
xchg
pop
jne
xor
addb
sbb
sub
push
dec
dec
adc
push
or
testl
cmpsl
data16
outsl
adc
xchg
add
mov
mov
sub
in
adc
xchg
mov
mov
or
add
mov
cmp
mov
xor
push
push
push
or
jne
insl
jnp
jne
ljmp
sub
mov
outsl
xor
arpl
ljmp
mov
pop
jl
jne
sub
iret
popl
mov
push
jge
loope
inc
in
pop
push
testb
jno
mov
cmp
pop
pop
push
add
pop
push
jg
mov
jecxz
adc
test
inc
xor
cmp
push
sub
fcoms
dec
lea
xchg
out
mov
jecxz
xlat
lods
test
mov
fwait
dec
aas
add
xor
push
cld
clc
cmc
data16
gs
sbb
outsl
adc
dec
inc
lret
shll
jne
fstps
insb
enter
in
jmp
sbb
ror
mov
dec
or
repz
aaa
mov
cmp
pusha
pushf
in
or
cmp
ja
movsb
xchg
fwait
push
or
sub
int3
fnstenv
icebp
jns
sbb
rcll
movb
std
aad
push
mov
outsl
testl
lret
inc
xorb
ret
loopne
cmpsb
push
push
dec
dec
sbb
addl
imul
push
lds
lea
jno
fbld
subb
lahf
or
inc
inc
rcrl
jp
cmc
outsb
scas
xor
bound
cmp
and
test
lret
mov
cmp
xchg
sub
or
or
stc
inc
push
mov
push
lock
cmp
aaa
mov
push
sub
xor
xor
test
pusha
imulb
inc
adc
shll
popa
and
push
push
xchg
cli
std
dec
or
xor
stos
push
lods
pop
pop
xchg
push
push
lock
xchg
cltd
lret
xor
shr
pusha
cmpsb
sub
sub
dec
mov
into
dec
movsb
shrb
push
lea
xchg
sub
bound
inc
lea
arpl
dec
scas
inc
or
lcall
fs
mov
rclb
mov
daa
mov
mov
or
pop
cltd
pushf
pop
dec
stos
inc
test
xor
push
mov
das
repz
js
xlat
push
push
or
divb
and
fwait
cwtl
xchg
push
ljmp
jno
clc
jge
xor
jno
xchg
jecxz
pop
adc
and
inc
ret
dec
push
jg
mov
icebp
xchg
movsl
dec
in
or
xchg
lock
push
xor
stos
lds
pop
outsb
jecxz
cmp
test
enter
sub
cmpsb
imul
cmp
mov
add
or
xor
push
dec
lret
ret
inc
xor
cmpl
cltd
push
adc
scas
leave
xchg
test
cmp
jne
es
cmc
cwtl
out
xchg
xchg
sbb
mov
mov
fnsave
dec
xor
lea
mov
mov
pop
push
sub
xor
mov
ja
jno
stos
gs
pop
cltd
inc
and
cmp
push
xor
es
movsl
pop
xchg
push
push
nop
dec
rcr
hlt
xchg
push
loop
pop
pushf
adcb
push
addr16
dec
sub
out
push
jmp
push
push
jl
xchg
call
fdivrs
in
add
pusha
sbb
mov
inc
or
push
sub
dec
fmul
mov
add
pop
and
orb
sub
std
xchg
pop
mov
mov
xchg
inc
pop
mov
in
add
mov
mov
inc
mov
sti
or
stc
dec
cmc
push
insl
out
movsb
icebp
imul
imul
fiadds
pop
mov
xchg
sbb
hlt
sbb
test
out
loopne
loop
adc
sbb
ja
cmp
pop
lcall
sbb
neg
sub
out
mov
sub
pop
fwait
inc
ds
and
push
sti
dec
stc
push
cmp
int3
negl
mov
mov
inc
adc
xorb
jns
inc
cltd
xchg
dec
xchg
int
push
ret
cld
jecxz
sbb
and
test
dec
out
fbstp
lahf
repnz
insb
mov
rclb
jmp
lea
loopne
ljmp
mov
dec
and
stos
push
daa
and
or
pop
mov
movsw
idivb
cmp
scas
mov
pop
lahf
lahf
into
push
sahf
aam
into
popa
das
das
xlat
mov
jmp
xchg
push
push
inc
into
and
dec
inc
fnstcw
cmpsl
cmpsl
dec
or
in
xchg
sbb
lcall
sub
mov
jecxz,pt
fstpl
mov
outsl
jb
xchg
test
xor
sub
and
mov
mov
mov
repz
jecxz
cwtl
or
push
shl
into
or
xor
mov
stc
imulb
and
push
outsl
pop
iret
push
shlb
cs
lock
pusha
lahf
sbb
rcrl
inc
mov
and
inc
in
call
pushf
pop
test
jno
addr16
cmp
lahf
inc
jbe
fstpl
xchg
mov
aaa
pop
fstpt
out
imul
inc
or
add
std
cmp
loopne
insb
sub
flds
xchg
pop
scas
push
push
fildl
jg
cmc
jno
and
or
cltd
fcoms
or
lds
std
pop
pop
stos
lods
mov
xchg
cmpsl
xor
pop
movswl
jbe
es
imul
int
lret
mov
mov
cmp
fnsave
fists
das
in
cmc
iret
sbb
rolb
lods
jo
mov
cmp
pop
pop
push
cmovnp
jle
scas
daa
jmp
sbb
mov
aam
into
xchg
clc
jl
xchg
imulb
arpl
xchg
and
dec
dec
inc
cmp
fdivs
and
or
jmp
sbb
sarb
adc
cmp
lcall
or
and
and
xor
fistpl
or
xchg
shll
xor
jne
rcrl
xlat
lea
push
xor
cwtl
stos
popa
mov
shrl
lds
mul
stos
lds
insl
push
fcmovbe
dec
incb
les
xchg
pop
push
sbb
cs
sub
pushf
dec
inc
inc
lods
push
sarb
jb
cmpsb
js
iret
ja
lcall
div
jb
mov
loopne
fcoml
mov
inc
adc
cmp
ljmp
lret
test
sbb
mov
iret
sub
stos
pusha
addr16
mov
sbb
icebp
mov
out
or
movsl
pop
and
pop
push
push
enter
adcb
jns
jae
sub
lahf
out
xchg
or
xchg
rcl
dec
add
push
leave
dec
mov
xchg
push
or
pop
or
sbb
fwait
in
pop
fstps
iret
popf
fisttpl
cmp
xor
mov
jmp
popa
and
xacquire
jge
lock
adc
cmp
loop
iret
xchg
push
insl
js
mov
scas
cmc
jns
clc
movsb
es
shrl
xlat
adc
jnp
cmp
jmp
test
and
xchg
das
and
dec
int3
dec
xchg
je
aas
jle
push
push
pushf
fistpll
adc
repz
cmp
cmp
mov
xor
xor
fs
mov
push
sarb
or
xchg
xchg
push
aaa
adc
test
call
add
int
sbb
adc
in
pop
push
aam
arpl
xchg
lds
enter
sar
daa
test
rcl
iret
dec
into
add
cmp
jae
call
or
mov
ds
cmp
xor
bound
sbb
int3
mov
es
jle
and
xorps
adc
mov
push
xor
enter
cmpsb
in
add
arpl
les
jnp
xor
test
lods
lods
inc
jb
filds
add
jge
cmpsw
cmp
daa
mov
inc
fistpl
rclb
shll
mov
out
cmpb
imul
cli
xchg
test
fadds
cmp
xlat
icebp
aad
adc
mov
or
out
jno
push
pop
enter
ret
test
popf
repnz
fcmovu
outsl
lahf
or
jnp
ror
xor
pop
add
stos
and
push
ljmp
or
data16
jge
add
fsubl
or
in
sbb
cmp
fwait
adc
pop
adc
adc
rolb
cmp
insl
push
mov
inc
fcoms
mov
dec
jl
jmp
jmp
dec
aaa
fldl
pop
xchg
mov
inc
add
imull
mov
pop
push
push
add
mov
sti
jge
sub
pushf
sub
pop
adc
xchg
mov
sbb
xor
orb
daa
sbb
stos
dec
and
shlb
outsl
out
movsb
jge
and
lret
or
insb
iret
mov
out
rcr
call
sbb
add
add
xor
lods
das
ja
popf
xor
aad
mov
fcomps
jmp
xor
cs
adc
pop
dec
pushf
int
pop
xorl
push
mov
push
subb
push
dec
dec
fidivrs
cmpsl
stc
subl
js
sahf
cltd
xchg
inc
push
mov
mov
out
jmp
xor
pushf
pop
mov
push
adc
cmp
movsl
dec
mov
jb
or
xor
dec
jl
mov
xor
add
push
cltd
jg
inc
repz
push
xor
scas
fiadds
xor
sbb
jg
dec
add
pusha
inc
adc
mov
cs
lods
int
int3
leave
sub
aam
outsb
jmp
sbb
ficoms
or
negb
dec
and
inc
imul
inc
sarb
mov
and
insl
or
fmull
xchg
or
inc
scas
jno
test
movsl
das
cmp
xchg
fs
xchg
mov
push
cmpb
xor
scas
ss
adc
call
xor
cmp
add
sub
rclb
pop
jl
mov
pushl
pop
insl
call
sub
ljmp
fidivrs
and
out
jmp
xor
push
adc
ret
mov
gs
pop
out
dec
pusha
jmp
or
test
sahf
cmpsb
and
fucomi
aaa
adc
xchg
divb
xor
sub
mov
mov
mov
jle
jecxz
daa
adc
xor
sbb
xchg
adc
add
add
loope
and
and
inc
inc
push
gs
mull
outsb
negl
out
loopne
xchg
mov
daa
roll
outsl
pop
xchg
adc
dec
ds
lods
bound
mov
xchg
mov
enter
mov
scas
pop
mov
sbb
mov
aad
incb
xor
dec
cld
push
pop
or
lret
pop
insb
cli
mov
xchg
fisubl
bound
and
dec
int3
leave
jecxz
pop
js
and
pusha
std
rcl
push
lock
or
push
das
xor
cmp
pop
fsubrs
dec
int3
bound
add
mov
popf
sbb
fcmovu
aad
test
dec
or
jmp
sub
movsl
push
mov
inc
fidivs
mov
stos
enter
mov
pusha
loopne
mov
mov
les
testb
jne
in
and
sbb
dec
mov
ja
cli
insb
jno
pushf
jno
mov
mov
test
clc
adc
imul
jecxz
popf
or
push
lcall
jb
mov
fsubp
push
pop
loopne
out
add
xor
mov
mov
lods
test
aam
push
sub
or
push
add
sti
nop
jmp
arpl
nop
xor
mov
test
cmpsl
cmp
and
je
jne
das
push
ret
leave
test
clc
push
ja
icebp
inc
ljmp
sbb
pop
add
dec
mov
cmp
inc
loope
pop
and
adc
bound
repnz
mov
mov
popf
shlb
dec
xchg
ss
sbb
insb
ds
inc
popa
pop
pop
sarb
sti
into
or
insl
arpl
iret
stos
mov
inc
jmp
cli
and
adcl
xchg
daa
push
nop
dec
dec
mov
xor
gs
negb
in
inc
jo
jb
repnz
sbb
adc
add
mov
xor
xchg
mov
xlat
xchg
pop
push
xchg
xchg
or
add
daa
cmp
pop
sub
jge
dec
adc
inc
imul
iret
add
or
xor
daa
pop
push
mov
and
sub
xchg
mov
test
pop
fldenv
daa
into
movb
testb
sub
in
pop
adc
dec
xor
orb
mov
imul
stos
and
mov
lahf
fistpl
inc
mov
cli
xchg
mov
jne
lods
in
inc
call
xchg
sub
xchg
aaa
xchg
pop
xor
mov
les
push
fwait
adc
orl
mov
xorl
adc
icebp
mov
decb
push
out
lock
stc
push
xchg
push
xor
jl
inc
or
jnp
lret
sub
dec
mov
insb
popf
adc
or
popa
or
xor
ja
mov
cltd
lahf
lahf
sbb
or
sub
cmp
je
xchg
iret
mov
cmp
fidivrs
std
fistps
add
and
and
and
push
push
dec
enter
cmp
out
dec
lock
xlat
sbb
xchg
or
int
inc
add
xor
bound
lds
dec
inc
ret
inc
ret
test
in
pusha
fstpl
or
mov
ss
out
js
ljmp
push
mov
jg
std
clc
and
and
xchg
fmull
pop
lret
cmp
jbe
mov
xor
movsb
fcmovnbe
push
add
pop
sbb
out
cmp
js
and
push
xchg
imul
clc
cmpsl
outsl
mov
lock
cmpsb
cltd
and
or
lds
sarb
xchg
dec
mov
out
arpl
xchg
sbb
dec
aas
add
inc
xor
ljmp
push
or
xchg
les
ljmp
stos
push
pmulhw
pushf
sar
xchg
cmc
xchg
mov
out
xor
and
xor
lret
pop
jl
inc
lret
jbe
mov
or
and
test
rcl
jmp
mov
in
pop
sbb
mov
mov
add
ds
mov
push
out
test
jns
in
pop
int3
jb
mov
cmp
stos
mov
ljmp
aad
in
data16
mov
sub
sub
and
push
movsl
jle
ret
data16
lods
daa
push
mov
mov
test
or
std
cli
sub
add
pop
cwtl
mov
dec
cmpsb
enter
mov
push
xchg
mov
xchg
nop
sbb
inc
inc
mov
dec
shr
imul
std
xchg
outsl
out
push
xchg
sub
les
lahf
cmp
insl
xchg
nop
arpl
cmp
jmp
cmp
ficoml
cmc
addr16
out
mov
scas
daa
cmpsl
bound
cwtl
and
nop
ss
xchg
ret
push
movsb
adcb
sub
movsb
and
cwtl
xchg
push
dec
test
inc
les
adc
imul
dec
dec
inc
mov
nop
and
ja
and
sub
inc
int3
mov
xchg
in
cli
fldl
or
sub
inc
sub
data16
decb
xor
pop
loop
mov
fmull
int
or
or
or
lock
and
push
and
arpl
imul
stc
lods
push
sbb
jns
pop
add
fcom
and
mov
or
sarl
or
pop
push
cld
adc
mov
outsb
mov
cltd
mov
ljmp
fwait
mov
leave
ret
mov
je
in
ljmp
pop
sub
fsts
push
pop
mov
rclb
mov
mov
fs
insb
jmp
mov
dec
mov
push
rcrl
push
pop
mov
push
stos
fdivl
fdivrs
jp
xchg
arpl
dec
pop
lahf
dec
hlt
jmp
jne
push
xchg
xchg
cmc
push
dec
in
push
mov
jmp
jmp
dec
inc
fwait
sub
fnsave
cmp
mov
push
sbb
cltd
sub
mov
mov
add
push
in
or
sub
push
xchg
hlt
mov
dec
call
jns
daa
and
cltd
fstpt
dec
test
std
sarl
scas
jae
push
sbb
xchg
repnz
push
jmp
mov
mov
mov
fsubrp
jmp
xchg
xlat
outsb
xchg
xchg
inc
pushf
mov
cmp
lock
loop
mov
xchg
push
ljmp
jge
mov
loope
and
movsl
loop
fcoml
idivl
aas
inc
stos
int
sub
push
mov
ret
addb
jbe
stos
xchg
add
push
movl
iret
adc
rorb
pop
jo,pt
mov
add
out
xor
outsl
and
pop
cwtl
xchg
xchg
xchg
aad
mov
mov
pop
in
loopne,pt
addr16
loope
inc
push
scas
test
cmp
sub
push
fiadds
or
jl
adc
mov
rol
dec
adc
lds
push
inc
sbb
pop
and
pop
cmp
aam
inc
lret
insl
rclb
repz
xchg
inc
or
icebp
mov
repnz
in
arpl
ret
or
mov
jno
inc
popa
shlb
shll
xlat
gs
test
add
movsl
loop
inc
fisubl
rcrl
or
incl
sub
daa
scas
inc
push
inc
cmp
or
or
fstp
outsb
cmc
xchg
leave
rcrl
lret
mov
push
adc
or
ds
inc
shl
fs
adc
outsl
or
out
insb
inc
cmc
ret
mov
adc
sub
and
or
in
inc
sbb
xchg
lcall
cmp
xchg
orb
xor
in
loope
pushf
sub
test
mov
pusha
pop
sub
stc
sahf
lahf
sbb
iret
or
fs
popa
lds
fildl
imul
incl
es
adc
ret
mov
cs
in
adc
mov
or
lods
data16
ret
adc
inc
lahf
jl
push
aaa
fnstcw
pop
out
gs
test
dec
jg,pt
mov
xchg
mov
das
mov
push
pop
push
ret
or
shl
imulb
sti
sbb
sbb
mov
in
xchg
fsubrl
out
inc
popf
and
cmp
dec
adc
xor
xor
lds
lea
pop
pop
push
mov
rolb
mov
jbe
fcmovnbe
stos
sahf
clc
xchg
int3
iret
cmp
xor
pop
sbb
mov
push
shr
mov
cmc
mov
mov
rcrl
int3
or
xor
arpl
mov
push
cmp
jae
sub
sbb
jle
push
icebp
jle
or
xor
frstor
loop
fnsave
jl
subb
les
mov
jmp
nop
ja
test
adcb
cmpsb
pop
add
sbb
push
jmp
lods
insl
pop
xchg
xchg
mov
test
pop
lahf
inc
cmpsb
imul
add
ja
push
insl
call
es
rorb
ret
shlb
mov
pop
in
std
jbe
sbb
ret
jg
test
test
ss
push
pop
xchg
sbb
fwait
xchg
mov
in
jg
pop
xchg
add
in
nop
arpl
sbbb
fwait
das
mov
lods
dec
pop
in
stos
jo
mov
mov
and
aam
push
fcmovbe
aam
or
mov
inc
icebp
insl
lods
daa
inc
sub
push
fwait
sbb
leave
stos
and
sub
lret
sub
out
adc
xchg
lret
or
dec
sub
fincstp
test
in
adc
sbb
mov
push
cltd
bound
pop
loopne
nop
xlat
jne
push
mov
mov
stos
pop
and
cmp
fcom
rcrl
popa
addl
andl
pop
sub
cld
pop
pop
rorl
push
jge
cmp
into
push
sbb
xor
jge,pn
sub
or
xor
add
add
jb
gs
xor
cs
insb
add
rorb
dec
rorb
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
pop
push
push
popa
jb
sub
imul
push
je
popa
insb
je
sub
arpl
je
arpl
jne
jo
jb
inc
ja
bound
insb
insl
popa
jae
gs
arpl
and
ja,pn
bound
insb
insl
popa
jae
gs
arpl
add
add
add
in
mull
inc
add
add
add
jmp
jmp
add
jmp
jmp
sub
add
jmp
add
sub
mov
nop
lea
mov
lods
stc
add
dec
sub
stc
sub
xor
dec
clc
add
add
add
clc
add
add
add
nop
add
sub
dec
add
sub
add
stc
add
dec
sub
stc
sub
xor
dec
stos
loop
jb
add
pop
adc
jae
hlt
movsb
fsub
xchg
cmc
push
inc
jbe
sti
mov
push
pusha
sbb
push
dec
inc
sub
mov
pop
push
inc
dec
cli
pop
jnp
lock
mov
xorb
cwtl
sbb
xorl
pop
mov
cmp
dec
outsb
in
jecxz
in
pusha
int3
stc
dec
pop
mov
jle
jbe
movsl
dec
push
adc
loope
mov
inc
mov
insl
cs
sub
roll
push
mov
inc
or
pushf
sahf
ljmp
mov
ss
into
sbb
push
mov
dec
std
cli
ja
pop
and
fs
cwtl
addr16
xor
ss
sub
cmp
jl
cmpsb
popa
insb
push
cmpsl
xchg
jl
jle
and
out
jle
fwait
xchg
ficoms
movsb
jbe
js
add
movsb
lahf
and
mov
in
call
iret
lret
cmp
xor
xor
bound
push
mov
cli
cmc
jns
jle
pop
pop
lahf
xchg
fs
jle
sbb
sub
inc
xchg
mov
inc
insb
push
push
dec
iret
hlt
imul
aam
jb
cmpb
xor
fstpl
mov
loope
pop
add
ret
dec
ds
sub
enter
or
xchg
sub
jbe,pn
pop
push
push
adc
adc
cmp
mov
pop
mov
cmp
mov
xchg
mov
jmp
stos
cmpsb
jno
xchg
xchg
add
scas
stos
movsl
clc
and
leave
inc
repz
in
lret
mov
es
inc
push
pop
pop
sbb
jne
xor
lods
outsl
sbb
push
pop
inc
mov
push
push
int3
inc
into
repz
push
scas
scas
jecxz
mov
ret
fnsave
mov
mov
push
cmp
sub
lds
out
fldl
iret
or
ja
and
pop
adc
aaa
jle
pop
das
xchg
movsl
and
push
jnp
mov
cmpsl
cmp
jno
in
jp
jl
sub
xchg
pop
aas
rclb
add
jbe
sbb
and
scas
inc
pop
aad
xlat
fisttpll
inc
pop
ljmp
pop
sbb
repnz
xchg
aam
push
pop
inc
sub
or
mov
xchg
ret
mov
xchg
mov
inc
ja
insl
adc
jns
and
pop
jb
movsb
xor
sbb
mov
pusha
push
mov
inc
cld
jb
in
call
xchg
test
and
aaa
in
adc
int
idivb
popa
dec
jmp
mov
test
pop
xchg
adc
call
lcall
ljmp
aam
enter
pop
es
rolb
fcom
dec
pop
ss
jb
pop
adc
pusha
fs
push
movsb
sbb
int
mov
popf
cmpsb
mov
push
xchg
ret
stos
xchg
mov
pop
fucomp
popa
mov
imul
out
andb
leave
stc
shll
cmpsl
jb
fsts
sar
movsb
xlat
lcall
cmp
lock
add
stc
hlt
cmp
xor
daa
xchg
incb
cmp
inc
fs
adc
inc
dec
stos
mov
inc
pop
pop
dec
mov
cwtl
xchg
cmp
jns
sub
icebp
fcmovnu
push
es
divb
pop
adc
or
xor
repnz
mov
mov
test
loop
xor
repz
and
xchg
cmovb
push
xchg
fistps
sarl
enter
test
icebp
ss
fsubl
fisttpll
js
cli
andb
xchg
std
aaa
inc
ds
xor
sub
jb
cmpb
jne
pop
in
jne
jl
jbe
jmp
bound
mov
xor
stos
mov
inc
leave
mov
testb
daa
inc
cld
add
les
aaa
aam
push
mov
xlat
imul
mov
mov
push
dec
xlat
lret
mov
jl
js
jecxz
flds
aas
inc
jns
jmp
mov
dec
mov
movsl
and
enter
stos
xor
ror
push
xor
adc
shl
dec
add
ss
ja
sub
loope
adc
pop
cmpsb
popa
cmpsl
insl
push
push
insl
mov
pusha
pop
dec
xchg
mov
stc
stos
daa
pop
pushf
cwtl
adc
lcall
xchg
push
adc
cmc
inc
xor
and
jecxz
inc
rcrb
jmp
cmp
ja
xchg
clc
xor
cmp
sub
jmp
cmpb
pusha
pop
push
mov
dec
sub
mov
cltd
xchg
pminub
jg
mov
pop
or
out
or
fisubl
loope
xlat
ror
cmp
inc
jbe
fisubrs
in
dec
ljmp
imulb
xchg
cmp
jecxz
pop
pop
aam
dec
xor
xchg
mov
pop
faddp
int
movsl
cmp
push
imul
sbbb
mov
lds
popa
lahf
sbb
cmp
call
fmull
add
cmpsb
loop
or
dec
lea
out
fisubs
dec
inc
aas
cmp
dec
xchg
push
push
jg
mov
fwait
xchg
pop
xchg
xchg
pop
xor
repz
fistps
shll
xchg
ss
fstp
jg
xchg
push
sbb
fisubl
cmc
gs
or
cwtl
mov
sbb
cmp
pop
add
loop
adc
mov
mov
jle
rcr
mov
movsl
out
daa
mov
in
cmpsl
push
lahf
in
adcl
stc
add
pop
xchg
ror
mov
mov
inc
loopne
dec
dec
adc
fbld
dec
push
push
push
xor
jno
js
scas
sbb
roll
xchg
testl
std
cs
imul
cmpsl
mov
in
out
clc
and
mov
cmp
mov
stos
aad
or
sbb
or
aad
cltd
adc
jmp
cmp
cmp
cmp
dec
xchg
sbb
sbb
mov
into
cltd
sub
push
cmpsl
shl
out
xchg
sub
sub
mov
xor
and
aad
xchg
out
push
test
mov
jl
push
push
dec
mov
mov
push
flds
cli
cmpl
cltd
cwtl
jnp
mov
push
imul
jp
lret
inc
out
dec
or
je
ljmp
pop
add
js
sub
sbb
cmp
xchg
imul
and
push
mov
jbe
insb
bound
push
mov
jo
jns
pushf
xchg
xchg
mov
mov
mov
jmp
ror
push
add
div
in
call
add
sub
and
inc
aas
cmp
pop
push
push
dec
dec
inc
jle
je
push
pusha
pop
xchg
xchg
mov
scas
test
nop
mov
sarl
iret
lret
mov
loop
fcom
push
or
cli
cmc
lock
and
adc
xor
sub
dec
inc
inc
cmp
fs
pop
push
push
dec
xchg
push
jnp
mov
cmpsl
mov
leave
les
out
ror
enter
hlt
out
ljmp
pop
add
clc
repz
sbb
cmp
xor
push
dec
dec
inc
inc
cmp
insb
bound
push
mov
jo
cmpsb
mov
mov
stos
movsl
mov
mov
jmp
ror
push
add
div
in
call
add
sub
and
inc
aas
cmp
pop
push
push
dec
dec
inc
jle
je
push
pusha
pop
xchg
xchg
mov
scas
test
nop
mov
sarl
iret
lret
mov
loop
fcom
push
or
cli
cmc
lock
and
adc
xor
sub
dec
inc
inc
cmp
fs
pop
push
push
dec
xchg
push
jnp
mov
cmpsl
mov
leave
les
out
ror
enter
hlt
out
ljmp
pop
add
clc
repz
sbb
cmp
xor
push
dec
dec
inc
inc
cmp
insb
bound
push
mov
jo
cmpsb
mov
mov
stos
movsl
mov
mov
jmp
ror
push
add
div
in
call
add
sub
and
inc
aas
cmp
pop
push
push
dec
dec
inc
jle
je
push
pusha
pop
xchg
xchg
mov
scas
test
nop
mov
sarl
iret
lret
mov
loop
fcom
push
or
cli
cmc
lock
and
adc
xor
sub
dec
inc
inc
cmp
fs
pop
push
push
dec
xchg
push
jnp
mov
cmpsl
mov
leave
les
out
ror
enter
hlt
out
ljmp
pop
add
clc
repz
sbb
cmp
xor
push
dec
dec
inc
inc
cmp
insb
bound
push
mov
jo
cmpsb
mov
mov
stos
movsl
mov
mov
jmp
ror
push
add
div
in
call
add
sub
and
inc
aas
cmp
pop
push
push
dec
dec
inc
jle
je
push
pusha
pop
xchg
xchg
mov
scas
test
nop
mov
sarl
iret
lret
mov
loop
fcom
push
or
cli
cmc
lock
and
adc
xor
sub
dec
inc
inc
cmp
fs
pop
push
push
dec
xchg
push
jnp
mov
cmpsl
mov
leave
les
out
ror
enter
hlt
out
ljmp
pop
add
clc
repz
sbb
cmp
xor
push
dec
dec
inc
inc
cmp
insb
bound
push
mov
jo
cmpsb
mov
mov
stos
movsl
mov
mov
jmp
ror
push
add
div
in
call
add
sub
and
inc
aas
cmp
pop
push
push
dec
dec
inc
jle
je
iret
xlat
into
rol
jle
out
in
scas
test
add
cmc
and
or
add
sarb
adc
aas
push
cmp
xor
fs
and
pop
jb
push
insl
popf
imul
cmpsl
jle
xor
mov
stos
xchg
arpl
hlt
loop
loop
fcoms
adc
cwtl
xchg
into
leave
les
es
or
out
cmp
int
ret
stc
push
push
dec
dec
es
inc
ss
add
clc
cmp
push
xchg
je
data16
xor
xchg
xchg
insb
bound
pushf
ror
loope
rcr
mov
cld
idivl
das
popf
.byte
add
