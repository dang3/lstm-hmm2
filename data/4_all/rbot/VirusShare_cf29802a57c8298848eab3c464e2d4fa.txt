fistps
mov
jge
jmp
mov
inc
cmpsb
ja
pop
mov
jae
fists
ss
cld
xchg
adc
xchg
bound
add
push
pop
shlb
or
xchg
popf
cwtl
jne
out
repz
imul
rclb
adc
jp
add
or
push
ja
xor
jle
aad
iret
inc
push
mov
imul
sbb
xorl
inc
js
shll
insb
fs
xchg
mov
out
incb
fwait
ljmp
pop
mov
mov
mov
repnz
lea
jo
inc
cld
sub
mov
adc
sub
sbb
inc
sar
int3
and
lea
pop
das
mov
je
fsubrs
ret
mov
insb
inc
cmp
andl
das
sbb
push
ds
or
add
imul
xchg
xor
arpl
stos
loopne
push
mov
call
jecxz
fisubs
in
push
push
xchg
push
lock
jae
cmovns
xor
mov
aad
pushf
jmp
sbb
adc
testb
test
xchg
clc
push
mov
sub
les
jae
xchg
jp
dec
movsl
scas
cmp
jle
add
cli
jne
dec
ds
icebp
sbb
xchg
orb
add
push
test
fcoml
cmp
into
sbb
mov
loopne
xor
jne
js
add
test
mov
cwtl
fcmovnu
xchg
rorb
pop
xlat
dec
out
cmpl
fildll
frstor
xorl
jns
scas
fsubl
and
lods
push
imul
lret
xchg
xchg
arpl
xchg
rcl
fstl
hlt
pop
sarl
push
inc
ja
fwait
cmp
icebp
arpl
or
cmp
sub
rorb
inc
test
test
sbb
pop
cmp
push
test
mov
mov
es
sbb
push
fisubrl
inc
pop
into
cmp
mov
call
mov
xchg
mov
outsl
scas
jl
xor
dec
insl
mov
hlt
xchg
gs
adc
out
insb
in
pushf
setge
sahf
sub
cmp
and
pop
xchg
ret
cmpb
jl
adc
mov
jle
xchg
sub
shlb
movsb
call
comiss
in
mov
sbb
shrb
rorb
inc
mov
test
mov
mov
int
pop
mov
stos
lret
lcall
and
xchg
cmp
dec
icebp
rclb
add
jle
outsl
push
pop
inc
xlat
fwait
mov
and
inc
cmp
rcrb
aaa
leave
jns
imul
in
in
mov
pop
leave
fsubrs
mov
call
out
lock
push
mov
loop,pn
and
int3
shlb
jmp
cs
xchg
icebp
or
push
sarb
jae
in
popf
popf
mov
cmpsl
arpl
sbb
sbb
sub
testb
sub
ds
sub
lds
add
enter
aam
ret
push
or
cmp
cmpsl
sub
imul
xchg
xchg
dec
inc
cld
hlt
inc
mov
sbb
inc
xchg
shl
xor
movsb
dec
xchg
rcl
aaa
add
pop
or
fisubs
jae
push
scas
sub
lods
mov
jl
mov
xchg
dec
loope
push
popl
nop
xchg
movsb
pop
pop
mov
pusha
or
adc
aaa
xchg
mov
ja
sti
mov
fstps
and
out
in
loopne
pop
ja
lds
cli
popl
xor
mov
addr16
xchg
in
orl
test
or
imul
cmp
bnd
dec
push
in
add
enter
lds
mov
sub
mov
jbe
jo
mov
lock
xor
lds
mov
repz
push
xchg
jle
es
xor
inc
imul
and
gs
cwtl
mov
jecxz
pop
fwait
xlat
arpl
test
cmp
inc
inc
out
jnp
and
xor
ja
addr16
mov
mov
ficompl
ss
insb
and
dec
pushl
xchg
ss
shll
das
call
pop
adc
rclb
fmull
inc
mov
xchg
sti
hlt
push
gs
out
mov
movsb
dec
push
xchg
mov
test
dec
int3
inc
pop
ja
sub
cmp
inc
in
ja
cs
aaa
push
pop
jnp
dec
stos
icebp
mov
shlb
rolb
push
mov
adc
inc
or
out
pushf
insl
jno
dec
mov
dec
int
or
es
mov
sbb
sub
mov
cs
or
mov
add
sbb
dec
in
in
mov
insb
arpl
test
mov
xchg
jmp
or
fs
jl
pop
and
mov
adc
push
add
jae
sub
ret
imull
xlat
and
leave
insl
insb
fdivrp
in
jnp
clc
push
xlat
cld
js
jp
fwait
inc
in
stos
mov
push
sarl
fbld
into
or
sub
sub
mov
xor
mov
not
mov
inc
pusha
insl
cmp
mov
jle
test
cmpsl
adc
cli
sub
jp
and
ds
icebp
xchg
test
pop
ss
movsl
sbb
out
cltd
pop
outsl
sub
shll
jbe
or
mov
mov
test
enter
push
shll
dec
ljmp
xorl
dec
dec
in
sub
push
ss
int
sti
cwtl
mov
movsb
xor
pop
je
outsl
cwtl
das
or
push
orl
je
sbb
bound
cmp
xchg
dec
add
sti
fcmovnbe
dec
add
adc
add
adc
hlt
fmull
mov
movsb
aaa
pop
jb
daa
mov
popf
mov
idivl
test
xor
jo
lods
and
adc
out
sbb
xlat
pop
sub
xor
or
cmc
pop
inc
arpl
mov
mov
mov
outsb
outsl
xor
xchg
pop
jne
fiadds
and
notl
mov
sbb
jmp
sbb
jno
inc
sub
push
mov
dec
cmp
outsl
jl
lret
lret
fldt
cld
movsl
adc
pop
pop
mov
mov
cmpsl
bswap
mov
ss
adc
sub
jnp
sbb
mov
movsb
dec
or
out
fstl
xchg
pop
xchg
stc
out
inc
jge
adc
sbbb
adc
fcomps
lret
or
jmp
push
jmp
xor
xor
ret
inc
mov
lret
push
sahf
scas
pop
mov
xchg
jecxz
pushl
adc
mov
and
icebp
popf
push
jmp
push
outsb
test
mov
xor
pop
push
cli
test
or
mov
insl
jge
dec
rclb
out
pop
in
aaa
xchg
xchg
fimuls
pop
das
out
hlt
ss
insb
mov
bswap
std
add
inc
pop
icebp
add
push
jbe
xchg
dec
icebp
ds
add
jmp
add
push
rcr
cld
mov
loopne
sub
mov
jb
dec
in
cmpsl
or
imul
jnp
fbld
sub
jno
das
ficompl
mov
pop
xchg
adc
les
adc
jmp
ret
cmp
push
cmp
popf
xchg
sti
arpl
mov
lret
ss
xchg
lock
rcrb
jnp
aam
jmp
test
out
scas
hlt
icebp
mov
mov
jo
popa
lea
sub
ljmp
icebp
and
movsb
mov
jno
pop
int3
mov
push
pop
insb
dec
cwtl
mov
add
fcompl
pop
aam
movsb
ror
dec
in
pop
or
out
arpl
inc
push
loop
jp
cs
or
sbb
fs
lahf
xor
stos
jg
inc
or
and
fdiv
xchg
sbb
popf
or
sub
test
mov
mov
sti
mov
fdivrs
sbb
mov
lock
xchg
fidivl
inc
or
popa
rcr
shlb
in
sar
test
jecxz
cmp
test
lock
push
cltd
rolb
fnstenv
loope
and
adc
leave
mov
xchg
das
orl
or
imul
dec
stos
outsl
sbb
adc
or
push
inc
dec
fldenv
jg
pushf
scas
push
and
out
es
test
push
push
daa
js
mull
enter
pop
fwait
mov
aaa
or
clc
mov
mov
adc
cmp
fisttpll
pop
sub
fstps
lcall
add
stc
imul
repz
mov
cs
loop
mov
test
mov
mov
dec
sub
arpl
icebp
mov
movsb
jecxz
lret
mov
cs
or
xor
movsb
or
mov
das
cmp
dec
mov
dec
jge
decl
out
add
jle
pop
xor
sub
std
pop
and
mov
or
sbb
ljmp
adc
mov
jb
jle
push
dec
faddl
dec
pop
in
std
pop
out
mov
rol
dec
iret
call
cli
mov
imul
lods
pushf
jbe
scas
and
mov
imul
cmpl
xor
and
jnp
movsb
inc
jle
adc
shll
and
xchg
inc
clc
int3
mov
mov
jmp
cmc
cwtl
repz
xorb
fcmovnb
flds
cmp
les
icebp
xchg
rorb
call
xor
sbb
jl
cmp
inc
mov
jns
test
mov
xchg
lods
add
pop
xor
xchg
xor
fwait
in
es
add
stc
jno
jne
mov
iret
out
adc
xchg
nop
and
jmp
jmp
xor
mov
push
ret
dec
hlt
dec
into
andl
mov
subb
xor
call
xor
rcrl
dec
cmp
mov
cld
or
xchg
push
and
rcr
in
jbe
out
or
xchg
movb
adcb
sub
mov
adc
push
sub
adc
dec
ficoml
dec
push
lods
and
loopne
insl
sub
nop
jmp
and
inc
add
dec
pop
dec
dec
fs
ret
pop
pushf
loope
std
loope
repnz
sbb
xchg
xchg
test
paddusw
mov
out
lret
pop
fildl
ss
das
ja
jg
jns
jae
packssdw
aaa
out
or
mov
jae
loop
aad
outsb
xchg
fidivs
in
adc
in
mov
popa
mov
mov
xchg
push
test
dec
ss
fwait
or
out
add
leave
adc
and
ds
fnstenv
jbe
add
xchg
mov
or
xchg
incb
jle
sub
push
mov
bound
adc
jae
test
lods
cmp
aad
xor
and
inc
mov
pop
sbb
sub
inc
out
in
sbb
faddl
rcll
xor
dec
xchg
dec
push
aam
popf
loope
dec
jne
pop
sbb
or
ds
jbe
mov
sti
inc
test
lret
or
xor
inc
repnz
call
dec
call
jecxz
cmp
jae
xchg
stos
inc
add
jg
arpl
or
push
and
test
cmp
sbb
ja
cmpsb
push
sub
fildl
aad
cmpsl
add
ja
mov
leave
lds
add
push
push
aad
or
push
mov
cltd
sarl
outsb
rclb
cld
rcrl
pop
in
in
sti
or
fsubs
daa
js
adc
outsl
lods
jmp
je
jbe
jns
sub
imul
jg
adc
dec
mov
sbb
and
loopne
add
lock
insb
push
sub
sbb
fstpl
stos
loop
shll
shrl
repnz
and
sub
orb
lret
cmpsl
push
mov
add
dec
mov
or
sbb
push
cmpsl
xor
rcll
jmp
outsl
xchg
fnstsw
fcmovb
int
test
cs
xchg
and
pushf
ljmp
lock
pop
daa
sub
mov
pop
aaa
clc
xchg
or
lds
dec
jl
int3
sbb
and
js
adc
mov
and
pop
sub
mov
test
sbb
jno
or
adc
cwtl
lahf
out
cmpsb
mov
jb
int
push
add
pop
stc
cmp
pop
add
xor
cmpsl
movsl
andb
xchg
jl
inc
fxch
insl
push
ficoml
leave
or
arpl
jle
ret
dec
lret
pop
cmpsb
ret
lret
sbb
cmp
dec
cmp
iret
fbld
sti
cmpsl
cmp
fdivp
xstore-rng
cmpsl
inc
stos
in
clc
scas
jmp
add
mov
mov
cmp
repz
fldt
and
test
dec
pusha
inc
jb
cmpsb
inc
add
int
jmp
lcall
mov
adcb
inc
adc
xchg
shr
movsl
cmc
fldl
mov
sub
aam
ss
push
jecxz
imul
out
sbb
cmp
insb
in
sbb
dec
cmp
test
lret
cli
jne
int
and
mov
jo
inc
in
rcrl
repnz
stos
lds
icebp
sahf
dec
insl
in
out
mov
add
dec
jl
aaa
enter
in
dec
in
cmc
push
es
xchg
nop
and
push
mov
mov
clc
push
iret
mov
fldt
cs
xchg
jge
xchg
xchg
inc
pushf
jp
adcb
js
sub
and
mov
xor
dec
sbb
sub
adc
jno
xlat
arpl
mov
gs
xchg
cmp
adc
test
pushl
cli
or
dec
pop
xor
mov
xchg
rcll
insl
push
daa
sub
xor
lods
xor
sahf
mov
mov
xchg
xchg
xchg
and
sbbb
imul
pop
xor
stos
mov
push
inc
adc
aaa
or
jg
adcl
jmp
adc
sbb
in
and
rorl
dec
jmp
push
lret
movsl
mov
pop
and
mov
inc
sbb
mov
iret
out
je
cli
and
ss
adc
shl
loope
pop
into
jge
sub
jp
add
cld
imul
jns
push
push
movsb
aaa
sbb
repnz
lds
mov
out
lcall
ja
cmc
sub
lcall
orb
adc
into
mov
iret
push
cltd
andl
mov
fs
lret
pushf
adc
adc
aam
fcoms
ret
leave
lock
xor
out
cmp
loope
push
mov
cmc
pop
call
dec
sahf
lahf
xchg
stc
inc
fsubl
sbb
mov
scas
mov
bound
push
rolb
jns
fisttpl
and
xor
fdivrs
hlt
sahf
rcrl
in
out
pop
movsl
push
dec
pop
push
cs
in
cmp
jmp
or
cltd
aad
aam
nop
jb
push
mov
addr16
in
ja
ds
addr16
jp
mov
int3
mov
mov
int
push
jnp
lahf
adc
push
mov
mov
scas
pusha
mov
scas
in
test
sub
or
mov
loop
mov
repnz
ret
lret
enter
or
int
lret
scas
mov
mov
fwait
xor
sub
pop
pop
lock
inc
push
loop
stos
neg
in
mov
mov
shl
shll
push
dec
jne
sub
popl
dec
stos
hlt
icebp
dec
fdivrl
andb
stos
mov
mov
and
mov
lcall
jb
movsb
cmc
xor
pushf
push
add
push
pop
lea
xchg
test
add
jnp
or
repz
pop
ret
loope
setnp
int
mov
gs
push
push
xorl
or
jecxz
and
into
sub
into
iret
jge
cmp
push
pop
mov
mov
mov
dec
loope
or
arpl
mov
pop
mov
imul
push
mov
mov
cld
imul
pusha
lahf
inc
mov
cmpsb
push
push
dec
mov
add
inc
sub
xchg
pop
push
xchg
jp
mov
cmp
rcl
adc
pop
add
lea
repnz
movsl
faddl
and
jge
push
jle
push
bound
or
adc
pusha
or
loop
xchg
sub
inc
or
adc
inc
fwait
add
inc
addb
aaa
loop
orb
adc
sahf
and
push
in
xchg
rcr
cmp
ja
mov
or
sbb
outsl
test
repnz
out
mov
xchg
cmp
jbe
mov
pop
lcall
inc
add
clc
jmp
jmp
daa
dec
test
lods
inc
jmp
std
adc
jle
xlat
sti
jns
jl
out
adc
mov
xor
lret
mov
dec
rcr
mov
imull
test
adc
movsl
xor
cmp
ja
push
outsb
es
repz
fwait
lret
test
and
fadd
push
jmp
shlb
mov
dec
push
adc
mov
xor
add
addr16
enter
outsl
stos
ja
push
xor
push
lcall
jecxz
insl
push
inc
cmp
xchg
hlt
cmp
stos
sbb
jb
jmp
pusha
xor
iretw
mov
arpl
adc
mov
mov
movsb
shl
fsts
mov
aaa
lret
mov
outsl
dec
or
ret
cld
outsl
popa
lods
jmp
sub
aam
test
sti
stos
mov
and
add
push
mov
movsb
push
shll
and
mov
dec
jno
jo
leave
jle
orl
lret
mov
ror
mov
pushf
jbe
xchg
dec
test
stos
sahf
sbb
dec
sbb
mov
call
outsb
xor
mov
dec
fadds
cmpsb
out
mov
mov
xor
je
pop
mov
scas
cld
adc
and
aaa
subl
pop
stc
int
pop
xchg
mov
roll
int3
popa
je
daa
out
and
push
jecxz
test
cmp
loop
aaa
mov
mov
inc
push
fsub
repz
repnz
mov
data16
aaa
add
dec
mov
adc
les
sub
xchg
rclb
push
mov
js
mov
jle
popa
es
pop
mov
inc
xor
or
out
mov
pop
push
pop
inc
popa
xchg
pusha
jb
cwtl
movsb
mov
push
mov
mov
mov
xchg
push
and
fdivp
xchg
xor
mov
sub
lret
ljmp
adc
or
loop
cltd
psllw
push
sub
pop
pop
stc
cmp
in
pushf
ret
daa
out
ja
pop
pop
sahf
aaa
jns
frstor
dec
ds
xchg
sbb
and
push
pop
lret
cmp
aas
dec
ds
xchg
scas
clc
xchg
inc
sub
xchg
fimull
push
stc
adc
es
iret
shl
push
pop
clc
int
sub
in
jo
js
mov
sbb
leave
mov
jae
ret
xchg
fstps
add
push
mov
lret
xchg
jle
sub
loopne
out
jmp
mov
and
inc
jmp
pop
ljmp
sbb
add
sti
jp
inc
or
ds
cld
push
mov
adc
fdivrs
loop
ljmp
mov
in
or
pop
dec
fcoml
xlat
loopne
fwait
lods
pop
cmpsl
inc
jnp
add
push
push
jmp
xor
adc
outsb
push
ja
and
sarb
or
ret
cmp
or
cmpsl
mov
iret
push
imul
repz
arpl
sbb
out
cmc
aaa
jbe
jge
push
push
push
stos
jp
lea
arpl
out
and
xor
or
or
mov
jg
cwtl
cs
call
scas
daa
push
mov
or
mov
cmp
imul
pop
xchg
arpl
jmp
cmp
test
rcll
sub
or
loop
xchg
or
push
mov
rcrl
mov
push
stos
xlat
stos
test
jge
sbb
mov
pop
bound
popl
cwtl
pop
mov
push
jmp
push
jp
lahf
jl
cli
xchg
fistpl
push
lds
sub
sbb
xchg
mov
in
notb
inc
int3
in
mov
les
bound
aaa
and
inc
mov
pop
ret
jne
pop
and
popf
jbe
dec
shll
xor
mov
cmp
imulb
std
add
cmpsb
and
inc
cmp
loopne
pop
testb
leave
lds
inc
cmp
mov
call
stc
cs
push
ja
movsl
lods
mov
jne
xchg
push
mov
mov
dec
mov
add
or
xor
mov
mov
das
cmpsb
sub
lret
orb
shll
jg
clc
or
iret
mov
cmp
jle
push
fldl
mov
stos
cmp
mov
or
add
pop
fs
sub
mov
fnstenv
sub
movsl
fadd
mov
jg
pop
jae
hlt
mov
xor
std
adc
cmp
stos
sbb
gs
pop
push
inc
adc
push
xchg
je
dec
ret
ljmp
movsb
inc
rclb
mov
push
rclb
lret
sbb
mov
fimull
xchg
sti
in
dec
mov
adc
jno
cmc
rcl
pop
rcll
cmp
mov
jae
ret
sub
lds
cwtl
xchg
int3
js
stos
outsl
xchg
ljmp
add
sar
repnz
mov
push
pop
jge
outsl
jbe
lods
das
or
and
mov
jg
fstpl
daa
adc
addr16
or
movsb
inc
xorb
jmp
adcb
dec
jnp
pop
shl
xor
mov
sub
daa
xchg
xchg
jb
xacquire
in
jb
int3
imul
pusha
xor
inc
cmpsl
adc
add
inc
mov
stos
mov
jb
int
inc
jae
add
imul
sti
je
fidivl
mov
mov
inc
sbb
add
push
daa
enter
lds
adc
or
cmpsl
fmul
js
les
pusha
daa
ljmp
popf
jmp
sti
jmp
xchg
stc
push
cmpsl
inc
push
fnstcw
cmp
jne
ds
mov
movsl
out
call
jns
incb
xchg
das
mov
icebp
js
xor
push
mov
dec
push
orl
mov
sbb
imul
loope
lods
hlt
xchg
pop
lahf
out
and
inc
icebp
aad
cwtl
jecxz
popa
push
loop
shll
and
je
jbe
das
mov
sbbb
and
jle
test
aas
pop
push
add
mov
popf
out
cmp
sub
xchg
jns
sbb
xchg
mov
inc
in
outsb
iret
incb
add
fisubl
imul
adc
mov
pop
and
ja
fidivrl
adc
lcall
dec
dec
sbb
pop
xchg
shr
dec
mov
loope
push
inc
and
pop
adc
testb
push
ret
lahf
imull
test
cmp
push
pop
pushf
jne
jno
popa
or
and
sbb
js
mov
mov
sbb
std
sarb
xlat
movlpd
jns
enter
imul
adc
mulb
notl
sub
mov
stos
int
loopne
cmpsb
stos
out
pop
mov
push
in
pushf
and
imul
js
jbe
cmpsb
fsubrs
loope
inc
movsb
ficoml
push
and
out
in
shll
push
add
sub
jns
jle
jae
mull
popl
cmp
mov
jbe
add
pop
es
jae
push
ljmp
mov
lahf
pop
loope
fldt
fbstp
add
mov
mov
ret
icebp
je
mov
loopne
add
cmp
xchg
jg
aaa
pop
cli
mov
or
push
ret
arpl
in
xor
pop
aas
mov
jecxz
or
outsb
sbbb
mov
push
mov
pop
push
or
arpl
add
mov
mov
es
out
dec
bound
add
sbb
add
add
xchg
shrb
push
sbb
daa
out
aaa
mov
shr
int3
sarl
movsl
push
sti
cmpl
rcrb
sub
cmp
test
xlat
mov
pop
psubq
and
pop
mov
xlat
mov
lods
jbe
inc
push
mov
xchg
mov
sar
jecxz
decl
push
cs
shlb
pop
lcall
cltd
imul
gs
aas
aad
sti
or
data16
sbb
cmc
sbb
push
xor
mov
adc
inc
add
addr16
xchg
dec
in
adc
and
aam
sub
pop
lcall
test
mov
test
sub
mov
xlat
mov
pop
aam
and
repnz
test
sbb
sbb
cld
mov
cld
movsb
dec
mov
xchg
sub
push
sarb
lods
outsl
and
loop
sahf
or
adc
mov
adc
out
ret
push
push
hlt
stos
push
out
push
lcall
daa
pop
inc
fdivl
mov
mov
pop
dec
movntq
out
mov
setne
or
das
add
shrb
pop
push
cmp
xor
and
cmp
push
jns
or
jecxz
adc
clc
in
xlat
adc
cmp
insb
lret
pop
xchg
mov
inc
pop
jbe
cli
mov
add
adcb
int3
js
dec
mov
popa
je
out
and
dec
in
sbb
push
ret
ljmp
andb
imul
leave
rorb
and
sbb
jbe
mov
daa
das
sbb
xchg
mov
aaa
jnp
repz
imul
xor
pop
insl
outsl
dec
ftst
sub
mov
inc
or
mov
fistpll
hlt
mov
imul
jle
fs
jle
push
daa
cmp
lods
aam
stos
mov
push
sbb
sbb
cli
push
push
xchg
int3
push
and
xchg
outsl
pop
sbb
pushl
and
sbb
jle
data16
sub
jno
mov
test
lea
mov
inc
or
lds
mov
and
cs
sub
inc
cmpsl
xor
mov
das
std
test
push
dec
xchg
dec
add
lahf
inc
test
inc
pop
add
lret
xlat
adc
mov
mov
pop
sbb
inc
push
mov
add
dec
adc
push
inc
mov
mov
add
pop
stos
sahf
lcall
mov
mov
vmwrite
lods
xor
dec
pop
fsubrs
cmp
xchg
jne
jbe
push
scas
jo
pop
fisttps
push
sub
and
pop
mov
fs
daa
subl
loop
out
popa
fsts
loope
fwait
pusha
stos
add
dec
imul
mov
jae
andb
aaa
xor
cmc
jae
sub
xchg
and
rcl
aad
and
clc
mov
negl
pop
cmp
cwtl
inc
into
in
repz
sbb
fcomp
mov
idivb
aas
or
rolb
adc
xchg
outsl
mov
pop
lret
xchg
xchg
lds
dec
mov
aas
pop
popa
fsubrl
inc
out
and
or
jg
jo
xchg
sbb
cwtl
imul
out
add
loop
mov
sarb
in
mov
push
jno
rep
mov
xor
mov
cmp
dec
mov
outsl
rcl
sub
sti
insl
stos
xchg
popf
sbb
add
inc
mov
mov
cmpb
jbe
movsb
cli
dec
jg
xchg
rcrb
dec
xchg
insb
les
adc
stos
lock
in
scas
mov
xor
push
stc
jle
and
adc
xor
jp
fs
fcoms
jno
or
push
ffreep
stos
adc
push
add
inc
cmc
mov
scas
push
dec
xor
in
dec
shl
jns
dec
sbb
outsl
dec
add
mov
push
inc
cmc
and
cmc
xor
push
jge
mov
into
rcrl
sbb
pop
and
mov
cwtl
and
pop
sbb
sub
cmp
mov
daa
add
out
jnp
dec
rorl
push
enter
ret
xor
and
xor
adc
ja
push
jne
sbb
dec
and
idivl
lahf
sub
lret
sti
push
mov
adc
shr
cmpsb
mov
adc
jne
mov
add
stos
rol
jmp
pop
jg
mov
mov
mov
mov
mov
fiadds
test
cmp
clc
fbstp
adc
fnstsw
mov
cwtl
sbb
push
pop
fxch
fwait
cmp
mov
nop
fs
xor
ror
jb
sarl
js
lock
arpl
push
fisubrs
or
insb
xlat
pop
jno
push
enter
loopne
dec
lret
test
pop
notl
pop
in
sub
or
dec
xchg
enter
jno
test
mov
mov
jp
ficompl
xor
pusha
in
push
aaa
xchg
in
jo
jp
fwait
jbe
fildll
cli
leave
pushf
sbb
push
loopne
stc
sar
xor
popf
stos
inc
pop
jmp
jne
out
pop
pop
ret
jl
mov
mov
sub
loop
stos
dec
pop
test
pop
or
pop
stc
movsb
mov
adc
sub
mov
ss
aas
sub
dec
mov
add
jp
in
jmp
push
cli
nop
ficoml
fstpl
jmp
fnstenv
mov
rcr
inc
sub
fwait
mov
sbb
test
adc
js
jns
jns
xchg
addr16
xlat
inc
iret
rcll
xchg
xchg
icebp
insl
aam
lret
icebp
mov
add
outsl
es
pop
add
adc
lret
test
xorb
xor
and
sbb
shl
in
dec
dec
xor
cmp
xchg
or
scas
adc
pop
mov
sbb
push
outsl
push
filds
ss
pop
outsb
popf
mov
into
subb
mov
mov
mov
out
xchg
call
or
xchg
test
jb
je
mov
icebp
mov
or
xor
lcall
inc
push
xchg
or
dec
test
insl
inc
nop
rcl
in
flds
clc
cwtl
pop
jg
sbb
sub
mov
insl
xor
cltd
mov
dec
idivb
rcl
mov
inc
pop
clc
adc
sub
test
inc
adc
cld
jne
dec
dec
lret
aad
sub
dec
pop
inc
mov
pop
sub
lock
repz
in
sub
mov
test
mov
js
xchg
jp
stos
loopne
inc
pop
jb
filds
pop
test
mov
sub
jmp
pop
xchg
sbb
mov
leave
adc
std
in
gs
mov
int3
jo
push
jb
and
push
mov
int3
mov
xchg
sarl
ss
pop
shrb
mov
lcall
lods
pop
repz
icebp
fldenv
xlat
loope
imul
lcall
mov
test
inc
mov
out
sub
into
mov
inc
add
test
sbb
and
js
dec
add
aad
aaa
in
scas
leave
ds
imul
ljmp
xor
dec
cmp
inc
mov
in
aaa
sahf
and
or
sub
xor
mov
pop
or
movb
ficompl
mov
outsb
mov
adc
sahf
sub
inc
es
inc
call
aaa
call
test
cwtl
cmp
jmp
je
scas
aas
out
xchg
loope
fdivrp
xchg
imulb
jecxz
sar
repnz
or
ret
ret
cmp
xchg
aas
xchg
inc
sti
jb
movd
mov
cltd
fcmove
test
sub
test
inc
pop
clc
cmc
pop
mov
pop
inc
das
push
int
ds
dec
call
jge
fwait
adc
add
and
loopne
insl
enter
ret
jbe
clc
jnp
sbb
shrb
push
sbb
or
jae
sub
push
fs
cmp
xchg
and
sub
into
fcomps
mov
and
aas
sbb
add
pop
sub
push
inc
orb
xchg
out
mov
rorl
mov
sub
mov
lods
pop
mov
or
aaa
pop
xchg
dec
cmp
or
movsl
enter
iret
test
fdivr
push
adc
stos
jecxz
add
cmpsl
int
lock
sub
insb
mov
jmp
dec
mov
daa
nop
outsl
es
pop
lods
mov
dec
in
in
cmc
addb
rorl
idivl
jp
xchg
js
arpl
or
mul
sbb
or
nop
jp
xor
or
sbb
lahf
rolb
rcrb
and
jo
xchg
fnstcw
mov
fs
inc
ss
jns
mov
popa
std
mov
jo
inc
rcr
subps
mov
in
push
cmp
out
ret
or
mov
xor
sbb
jnp
sub
and
xor
int
aaa
push
fcomp
mov
bound
popf
inc
hlt
mov
lcall
mov
xchg
xchg
je
dec
clc
aad
xchg
imull
out
roll
add
out
enter
call
cltd
and
andl
ljmp
movsl
pop
and
cmp
sub
xchg
jg
push
cmp
and
in
push
mov
mov
daa
sbb
inc
clc
cmc
lds
or
aas
rcr
pop
fbld
dec
sub
outsl
pop
mov
inc
push
ljmp
fwait
das
repz
sub
inc
std
ljmp
je
cmp
shll
rorb
divb
mulps
lret
rcrb
dec
cwtl
xchg
sub
jb
mov
fs
mov
or
sub
lret
out
adc
mov
lahf
jmp
shll
arpl
jecxz
rorl
loope
sub
nop
es
cwtl
pop
jae
lret
fcomip
lea
mov
out
aam
ja
add
shll
dec
scas
outsb
and
xor
out
mov
dec
add
pushf
ljmp
xchg
test
pop
aas
sub
or
lock
movsb
daa
jge
pop
sbb
arpl
mov
xor
fcom
xchg
mov
flds
notl
push
andb
xor
push
inc
les
sub
inc
lods
xchg
gs
inc
mov
out
idivb
in
xchg
adc
push
and
orb
ret
pop
insl
jns
imul
sbb
adc
push
xchg
lods
sub
test
mov
jbe
mov
add
xor
nop
stos
sbb
lea
gs
test
pop
and
arpl
jno
out
aad
daa
jbe
enter
push
cmp
and
jne
push
inc
cmpsl
outsb
in
cmp
inc
repz
and
mov
lret
xlat
daa
in
push
cmp
ret
mov
int3
push
sarb
push
or
popa
mov
jl
stos
pop
jb
inc
add
adc
repz
sahf
xor
sub
incb
adc
jo
cltd
adcl
dec
xor
inc
js
ljmp
inc
jnp
leave
out
inc
scas
mov
mov
mov
push
mov
dec
and
popa
dec
or
rcrb
in
and
daa
xchg
xor
adc
mov
bound
scas
lds
addr16
test
pusha
lcall
push
dec
push
push
je
out
adc
fldcw
mov
xchg
int
mov
pop
aas
test
push
jecxz
flds
loope
sbb
mov
pop
add
xchg
sub
adc
xchg
jno
imul
pop
add
jle
aas
cli
mov
rcl
push
jle
cwtl
mov
shrb
sbb
ret
mov
sti
and
leave
xor
push
mov
cltd
sbb
dec
sbb
push
aaa
mov
jbe
xlat
fstl
fcomps
cli
aam
lret
mov
jno
mov
cld
add
mov
pop
adc
pop
push
test
enter
xor
push
es
push
hlt
stc
dec
test
pop
push
or
mov
mov
outsb
inc
sub
adc
add
cmc
push
add
mov
data16
mov
add
jp
mov
test
sbb
fsubrp
xchg
mov
lea
imul
movsb
mov
dec
cmpsl
fcomi
lret
int
repz
movsb
mov
cmp
rolb
lods
in
mov
sbb
xor
and
cmpsl
je
and
adc
mov
test
cmp
jo
inc
cmc
nop
int
hlt
lods
rcrl
scas
sbb
shr
inc
or
in
aaa
fldt
sar
ret
xor
sahf
xchg
xchg
in
mov
push
xor
loop
daa
popa
cmp
xchg
enter
push
ret
repz
js
roll
jecxz
push
and
daa
stos
push
lock
popf
scas
lock
cmp
sub
inc
push
xlat
mov
jae
sti
cmp
dec
nop
cmp
outsl
subl
lret
daa
mov
out
repnz
rorb
lcall
push
std
inc
bound
mov
xlat
jbe
dec
xchg
jecxz
ds
sahf
test
mov
adc
adc
inc
mov
xor
jae
sbb
fadds
pop
jecxz
lea
jl
in
mov
out
jns
call
sarl
stos
mov
push
push
testb
xchg
pop
lret
jmp
jbe
mov
icebp
popf
inc
bnd
orb
dec
in
xchg
or
xchg
imul
mov
inc
xor
ret
popa
mov
mov
mov
and
jl
insl
mov
sub
leave
rcl
push
jg
clc
mov
mov
or
or
push
daa
leave
xorl
test
mov
std
ret
mov
push
push
mov
xchg
cmp
cmp
pop
jecxz
fidivrs
and
and
cwtl
push
daa
xchg
xor
cmp
jns
jnp
add
mov
jmp
mov
pop
or
in
sahf
push
xchg
pop
and
inc
add
repz
dec
xlat
leave
inc
hlt
mov
ljmp
and
ret
test
or
ret
ds
ficomps
lds
adc
sahf
jae
insl
cwtl
add
push
or
sbb
popf
push
xchg
add
or
decb
mov
clc
push
rcrb
xchg
fmull
mulb
sbb
cmp
mov
xor
xchg
cwtl
xchg
fmulp
push
mov
shlb
push
shrb
mov
insl
shrb
inc
xchg
pop
les
mov
adc
ljmp
push
bound
pop
pop
pop
lea
mov
sub
lcall
int
adc
sahf
bound
sbb
enter
aad
cltd
shll
add
push
add
fists
dec
popa
inc
jle
decl
xchg
mov
pop
std
xchg
loopne
adc
aaa
push
jb
fs
jge
aaa
mov
push
test
vpmacssdd
ja
or
andl
shr
sub
and
adc
or
lods
nop
data16
insl
mov
in
pop
stos
jle
lea
icebp
mov
cmpsb
ljmp
mov
popf
push
push
sbb
or
sub
mov
cs
push
jns
aaa
add
push
fldt
pop
repnz
mov
mov
push
clc
rol
scas
push
mov
ret
bound
sub
daa
ja
insb
fwait
in
or
ljmp
push
inc
push
outsl
jnp
jecxz
inc
aaa
and
inc
jge
insl
repnz
jo
enter
iret
test
shll
insb
call
in
jbe
push
mov
xor
cmp
out
mov
push
pop
add
sbb
ret
in
push
sbb
adc
push
mov
push
rorl
mov
mov
xchg
sub
aam
jmp
insb
icebp
pop
fs
mov
in
mov
add
loop
pop
jmp
mov
mov
imul
loope
out
testb
movsl
inc
ret
ss
and
add
lcall
and
pop
insl
or
jno
dec
popf
mov
jecxz
sub
les
push
cwtl
dec
add
sub
inc
je
mov
outsl
adc
aaa
lcall
pop
ja
jbe
fldt
mov
scas
movsl
inc
jbe
loopne
jne
sub
mov
mov
sub
mov
nop
xor
daa
mov
or
cltd
jbe
mov
call
ret
outsb
cmpsl
addr16
ljmp
scas
fidivs
mov
mov
dec
xor
das
mov
pop
mov
jo
outsb
or
mov
adc
sub
add
xor
sbb
lods
sub
dec
std
sbb
adc
or
xor
iret
aad
mov
out
pop
xorl
imul
or
cltd
xor
sub
or
pushf
xchg
mov
into
repz
xor
es
in
jno
bound
xchg
icebp
pop
xor
mov
adc
dec
mov
movsl
fldcw
insb
pop
out
testl
pop
push
fcmovu
add
sub
sbb
out
int
jg
movsb
fistpll
gs
test
popa
and
jo
sbb
imul
dec
lods
imul
shl
jno
imul
addr16
mov
adc
push
pusha
pop
lcall
aas
xchg
dec
cmp
adc
sub
fistl
mov
or
fs
notb
daa
jae
sti
test
xchg
ljmp
xchg
mov
cmp
repnz
enter
call
sbb
pop
aam
adc
lock
je
xor
neg
cmp
cmp
jp
out
scas
lcall
mov
lret
aas
mov
addr16
je
cmp
jae
sub
mov
xchg
addr16
scas
in
cmp
ljmp
push
xor
js
cmc
mov
xor
scas
dec
daa
push
jae
enter
cs
fdivs
data16
cmp
xor
push
idiv
icebp
push
imul
pop
nop
aam
pop
or
sub
xchg
jg
aad
xchg
fists
in
fcomps
shl
dec
mov
int3
mov
mov
in
jne
scas
xor
loopne
les
sub
pop
xchg
arpl
adc
lea
mov
into
lock
mov
scas
and
add
sub
dec
lret
mov
int
rcr
xor
sbb
adc
iret
leave
lret
cmp
xchg
mov
test
jo
outsb
test
addb
es
pop
xchg
shll
adc
jb
sub
add
das
pop
jle
icebp
pop
ds
icebp
mov
push
fucom
mov
fldl
pop
out
jecxz
pop
or
sub
rcl
push
xor
push
push
mov
xchg
rorl
loope
sub
lahf
push
jnp
pop
inc
scas
shll
jecxz
and
xchg
push
and
notb
je
mov
jnp
jns
or
in
mov
cli
clc
dec
pop
mov
xor
cmp
xchg
adc
lahf
shrb
insl
ss
inc
or
xchg
insl
jnp
cmc
push
mov
pop
inc
or
inc
jne
aaa
mov
out
fdivrl
scas
adc
daa
mov
xchg
push
imul
mov
out
ja
fcomi
fwait
call
stos
outsl
daa
sbb
cwtl
pop
pop
std
movntq
pop
sar
loop
add
pop
imull
ja
xlat
sub
jmp
pop
mov
push
push
cmpsb
push
jns
cmp
xchg
imul
adc
push
xor
dec
insb
in
cwtl
adc
jmp
repz
jae
xchg
pushf
popf
iret
insb
scas
and
sarl
or
jl
popl
and
mov
stos
cld
ds
cmp
cmp
mov
xchg
adc
cmp
clc
les
addr16
sub
fs
jp
cmp
push
pop
fildl
jbe
push
pop
or
fiaddl
xlat
in
je
sbb
xlat
cmpsb
fsts
popa
fadds
iret
stos
push
fbstp
and
jg
or
mov
fcmovnu
sub
stos
je
stc
loop
sbb
pop
rclb
sbb
pop
xor
and
les
pop
jb
jae
clc
daa
mov
outsb
sub
add
add
mov
jecxz
add
stos
lods
js
insl
add
fxch
mov
mov
mov
dec
lea
daa
sbb
xchg
hlt
test
sub
push
bnd
push
insl
xchg
cmp
movsb
mov
jmp
lods
cmp
lds
fcmovnbe
fxtract
inc
dec
pushaw
mov
add
mov
loope
push
insl
aam
mov
enter
cli
es
mov
or
js
cld
adc
movl
xor
jmp
ja
mov
lods
or
sbb
clc
hlt
sbb
mov
shrl
sahf
ret
loope
and
sti
dec
jns
pop
xchg
sub
lods
lds
mov
push
mov
outsb
fistps
outsb
dec
out
xor
in
jae
popa
push
jge
movsl
or
push
fwait
fsubl
mov
add
mov
jb
orb
or
pop
call
lods
aaa
xor
xor
insb
movb
andl
inc
ja
xlat
inc
push
sub
pop
cmp
xchg
std
adc
repnz
cmp
leave
bound
ret
xor
cmpsb
shr
cmpsb
adc
add
dec
enter
imul
xor
cmp
push
cmp
jnp
jp
cmp
adc
insl
inc
int
cs
cmp
cmp
push
mov
mov
sbb
icebp
into
mov
in
popa
mov
and
sarb
stos
imul
pop
xchg
in
sub
lds
std
movsl
add
push
pop
shr
addr16
lods
sub
ret
je
fstps
fildll
stos
mov
push
cmp
int3
aas
movsl
cwtl
inc
sti
adc
fcmovb
xchg
push
mov
std
mov
test
mov
shr
imul
adc
into
imul
ret
dec
ret
cmp
xchg
and
int
pop
adc
jnp
leave
enter
dec
gs
jne
add
push
cmp
mov
add
in
dec
out
pop
jne
cwtl
out
rclb
andl
pop
loope
pop
or
scas
sub
fstpl
sbb
and
push
popf
mov
xchg
hlt
or
out
inc
mov
in
shrl
mov
lock
outsl
out
test
adc
mov
and
outsl
loop
mov
das
xchg
pop
addr16
in
and
cli
mov
or
push
xchg
jge
je
sar
lock
fcompl
push
addl
sub
inc
scas
dec
or
pop
cmp
adc
and
inc
ret
add
adc
cmp
and
mov
sbb
and
sbb
shll
xchg
shlb
add
loop
jg
add
into
neg
xchg
test
out
xor
pop
push
add
sbb
test
pop
xchg
mov
int3
out
mov
aas
loopne
cs
xchg
hlt
subb
in
or
lret
sbb
std
mov
addr16
aam
repnz
daa
std
divb
cmc
pushf
mov
mov
imul
je
push
pushf
hlt
push
sahf
cmpsb
add
test
push
popf
sahf
lods
shll
or
sbb
adc
mov
push
scas
and
jg
es
scas
xchg
xchg
mov
stc
lahf
lret
flds
and
popf
pop
push
push
pop
out
xchg
inc
or
loop
push
sub
lds
sbb
cmpsb
inc
icebp
repnz
fwait
out
push
mov
adc
xchg
push
add
stc
jp
rorb
xchg
cmpsb
test
mov
cmc
loop
mov
inc
lods
test
lock
aaa
push
add
cmp
fwait
pop
rcrb
sbb
decb
pop
fstl
jl
and
push
ljmp
mov
or
fwait
scas
scas
add
lcall
cmpsb
pusha
stos
mov
mov
gs
les
mov
lods
icebp
xor
dec
out
stc
push
jp
mov
inc
ret
addb
div
rcl
test
mov
sub
into
mov
repnz
test
or
mov
mov
out
dec
repz
adc
insb
fildl
test
mov
cmp
mov
jle
in
sub
enter
aad
pop
xchg
mov
jmp
fistpl
mov
pop
push
dec
fisubrs
mov
addr16
lahf
outsl
xchg
push
enter
xor
cmpsb
mov
sbb
leave
mov
mov
cmovs
jle
xor
add
outsb
xchg
jnp
jg
pop
xor
loope
push
push
aam
sbb
sahf
sbb
xchg
cmp
jg
jle
out
les
and
test
aas
stc
push
push
daa
mov
sahf
into
jp
xchg
in
mov
notb
cmp
mov
mov
out
arpl
push
test
test
jge
sbb
push
cltd
adc
test
xchg
xor
dec
aaa
sub
xchg
les
iret
aaa
xor
jl
push
pop
out
cmc
inc
mov
pusha
stos
addr16
jl
pop
jp
and
xor
inc
sub
cmpb
out
cmp
jb
daa
sarb
out
adc
jno
mov
rcrb
fnstenv
inc
or
sub
lods
shll
and
xor
jno
nop
push
inc
pop
or
sub
add
rclb
pop
addr16
inc
push
pop
sbb
mov
rcrb
arpl
cmp
int3
movsb
std
add
mov
les
inc
fldcw
cmpl
cltd
fnstcw
pushf
mov
outsl
xchg
mov
xor
adc
lods
insl
pop
sbb
push
jbe
orb
xchg
cmp
mov
push
jl
pusha
out
sar
ss
fldl
or
pop
insb
dec
cld
dec
leave
xchg
int3
pop
sub
je
scas
or
cmp
out
shrb
jg
cmpb
das
aas
mov
ret
nop
in
pop
out
popf
xchg
mov
mov
inc
add
sbb
leave
sub
inc
in
xchg
xchg
dec
mov
sub
xor
mov
movsb
in
inc
jae
mov
es
push
mull
cmp
pop
jo
sbb
cmpsb
or
mov
jns
pop
jmp
mov
push
and
mov
arpl
push
seta
or
xor
and
mov
aas
pop
mov
sub
push
push
gs
leave
sub
in
xchg
je
push
sub
lock
js
add
imul
lods
or
inc
fisubrl
sbbl
pop
jmp
mov
addr16
pop
mov
ds
jecxz
jp
mov
jo
lds
test
mov
xor
int3
sbb
in
pop
jle
lea
push
xor
and
rorb
lret
mov
fsubrs
mul
dec
outsl
push
pop
xchg
sahf
hlt
insb
and
mov
or
aam
jbe
pop
cli
xor
or
ret
cmp
movsl
imul
or
daa
fnsave
iret
inc
gs
sbb
cmp
repnz
je
cmpl
and
jecxz
sarb
xchg
ret
call
adc
in
dec
xor
enter
fwait
insb
jecxz
cmp
sbb
push
sti
xchg
jbe
arpl
mov
jge
cmpsl
mov
mov
or
mov
xor
mov
loop
jle
subl
ret
mov
call
lahf
xlat
stc
or
out
imul
xor
dec
push
xlat
push
jnp
lds
push
xorb
scas
js
lcall
add
aas
sbbb
sbb
outsl
or
hlt
add
xchg
xchg
push
scas
ja
ret
jae
mov
stos
je
or
lcall
jae
mov
ljmp
orb
sub
stc
jg
or
int
out
gs
dec
cmp
into
push
nop
dec
pusha
in
mov
aad
push
pop
pop
dec
fadd
andl
clc
std
out
imul
inc
and
shll
outsb
stc
mov
ja
loop
push
sbb
cld
into
push
or
or
mov
push
das
push
fcmove
push
std
xchg
xor
mov
xchg
mov
imul
mov
lods
push
xor
xchg
orb
jmp
hlt
xor
orb
push
and
pop
add
lods
cwtl
mov
cli
cmp
test
sub
ret
hlt
sbb
leave
inc
insb
enter
mov
push
pop
push
push
xor
arpl
dec
mov
mov
hlt
pop
adc
sbb
pushf
sub
fst
faddl
dec
out
mov
jnp
nop
xchg
int3
jle
push
decl
lods
enter
cmpsl
pop
scas
testb
jb
mov
cmc
mov
lret
cmp
add
and
push
sbb
push
push
pop
cmpsl
out
xor
adc
out
gs
lret
pop
inc
pop
ja
ss
in
adc
mov
movsl
repz
cmpb
adc
ds
inc
jl
je
adcl
enter
sti
cmp
shl
adc
addb
mov
mov
push
imul
mov
or
adc
sub
cmc
cs
fstpt
shll
aam
out
cli
imul
sti
xor
ds
push
test
iret
loopne
js
and
xor
pop
inc
shr
shll
sub
jns
push
sbb
sti
jecxz
in
add
sub
scas
pop
je
mov
popf
negl
add
push
in
stc
xor
repz
push
mov
das
push
adc
clc
outsl
sti
rorl
mov
cmpsl
push
mov
jae
xchg
popf
sub
xchg
sbb
cltd
push
sti
pop
jge
sbb
stc
pop
pop
xchg
lret
jmp
imul
lods
pop
insl
rcll
mov
dec
push
xor
sub
sub
xchg
nop
loopne
ret
push
jp
lods
dec
inc
inc
push
hlt
cmp
xor
out
mov
movl
pop
or
dec
sbb
ja
not
dec
add
gs
popa
sahf
mov
ror
hlt
mov
sub
pop
dec
mov
ret
mov
sbb
cmp
jle
addr16
pop
in
or
mov
sahf
das
pop
mov
jmp
aad
int3
out
int
ss
loopne
push
cmp
mull
shlb
std
xchg
adc
push
add
fmuls
mov
lea
ja
add
pop
xchg
push
add
sahf
imul
mov
jae
sub
xlat
mov
xor
mov
loop
mov
test
cmp
insb
ret
fdivr
cmp
fwait
popf
adc
in
mov
push
xchg
sbb
lock
mov
outsb
dec
add
and
push
adc
mov
jge
pop
nop
add
xchg
popw
inc
xchg
cmp
lods
icebp
and
dec
jmp
out
das
add
mov
mov
repz
aas
pop
or
xor
push
test
xchg
lds
dec
outsb
sbb
mov
fsubrl
int3
mov
popf
ficoml
ret
mov
or
nop
mov
repz
lods
fcmovnbe
filds
fdivrs
adc
mov
xchg
aas
push
push
ljmp
add
in
mov
adc
test
punpckldq
mov
push
cmp
and
negb
data16
dec
xchg
nop
pop
cmp
sub
inc
ds
xchg
int
popf
jl
sub
and
jge
sarl
dec
push
jbe
or
sub
fs
mov
add
scas
sub
jecxz
idivb
fucom
in
mov
xchg
imul
imul
add
add
rorb
cmp
js
mov
xchg
sub
dec
mov
dec
cmp
mov
addr16
push
pop
scas
adc
mov
xor
icebp
cmp
dec
in
xchg
sbb
sbbb
xchg
mov
sub
and
inc
mov
daa
sqrtps
insb
xlat
push
lds
xchg
push
imul
jns
inc
mov
fwait
adc
jbe
pop
fstpl
xchg
xor
sub
dec
xchg
loopne
sub
xor
cmp
lret
cmc
fwait
adc
shll
xchg
in
sbb
sub
les
data16
mov
mov
pusha
movsb
add
loope
imul
push
ss
mov
in
xorb
adc
out
and
push
xorb
rorl
mov
push
jo
cmpsl
inc
rcll
mov
jne
stos
sbb
scas
and
mov
test
xor
and
add
add
dec
dec
jmp
aas
cmp
sbb
shr
iret
gs
jnp
jmp
loopne
mov
fdivrl
mov
sub
pushl
dec
add
daa
jns
adc
inc
rorl
out
jl
xor
imull
jbe
orl
push
xor
aaa
inc
mov
pop
jg
shl
repz
push
dec
dec
jns
fiadds
outsl
mov
in
rcll
sbb
sarb
push
mov
fwait
jecxz
push
add
pusha
sub
adcb
add
cmp
push
int3
fcoms
inc
cmp
orl
in
lds
aam
mov
cmp
xchg
mov
test
adc
imul
imull
mov
jecxz
adc
pop
into
mov
push
sbb
cmpsl
adc
and
pop
xchg
pop
ror
scas
lahf
movsb
push
xchg
lret
add
add
outsb
xor
cld
adc
lret
mulb
sahf
mov
scas
lock
mov
aam
mov
rcrb
xor
xchg
les
xlat
xor
xorb
repz
movsb
jmp
cmp
imul
movsb
out
dec
incb
or
or
les
int3
mov
adc
dec
sbb
sub
jns
fists
rclb
mov
sub
out
and
and
adc
xchg
pop
fiadds
add
xchg
int3
or
push
stos
jecxz
test
inc
xchg
mov
xchg
inc
push
cmp
fsubl
int3
jae
lds
sub
aad
cmp
cmp
imul
push
in
loopne
xor
out
fsubrl
jge
mov
xchg
fxch
sub
mov
inc
xorb
je
jge
es
fstl
pop
scas
testl
testl
nop
push
hlt
insl
sub
ljmp
add
out
jl
fbld
loop
js
or
shll
add
ss
movsl
hlt
repz
subb
gs
pusha
sub
pop
out
mov
dec
mov
sub
fmull
dec
flds
mov
daa
out
sub
xchg
cmp
loopne
decb
mov
add
pop
scas
inc
dec
xchg
bound
add
out
jecxz
add
inc
popa
dec
and
push
sbb
fstpl
add
push
das
sub
xchg
xor
and
lret
sub
mov
mov
mov
outsl
rcll
mov
push
dec
pusha
fstpt
or
call
test
std
fstl
mov
loopne
aad
pop
jae
push
mov
jae
jnp
lock
test
push
leave
dec
push
nop
test
mov
into
test
pop
sub
inc
inc
out
test
in
inc
ret
movsl
jbe
jp
sub
imul
and
or
lds
cs
fcoms
cmc
add
push
inc
jo
mov
mov
push
out
xchg
mov
fidivl
ds
lcall
fsubrs
mov
sub
sbb
test
adc
clc
dec
cmpsb
inc
aam
into
cmp
xor
add
iret
gs
jno
dec
xor
std
xor
orl
imul
movsl
imul
sarl
push
xor
xchg
roll
std
xchg
movsl
dec
es
xor
lret
clc
jns
lahf
dec
ja
out
xchg
in
adc
fucom
push
bound
mov
test
inc
stc
std
mov
repnz
push
pushf
xchg
pop
movsb
stc
test
loope
pop
mov
lods
jno
jecxz
jb
dec
dec
adc
mov
lods
cmp
mov
aaa
and
popa
lcall
aam
test
hlt
or
sahf
lods
fiadds
cmpsl
lods
pop
inc
into
jle,pt
in
mov
pop
mov
aad
jne
in
roll
jno
cmovno
add
pop
leave
nop
sbb
cmp
in
cmpsb
adc
out
and
and
outsl
adc
imul
rcrl
mov
pop
test
mov
mov
mov
jl
push
ds
shll
icebp
sub
into
fwait
push
sbb
jmp
les
testl
inc
xchg
adcb
sub
xor
cmp
into
dec
pop
pop
insl
push
pop
addl
adc
sti
adc
test
adc
popf
or
repnz
cmc
inc
or
pop
js
xor
or
pusha
and
sbb
mov
sbb
cmp
xor
pushf
sub
dec
sahf
jb
insl
stos
cmp
xchg
jl
sbb
lods
in
lahf
xchg
sarl
mov
add
fdivrl
pop
dec
jl
rcrb
or
jmp
aaa
inc
jb
insl
outsl
subl
out
jb
jp
std
push
mov
jp
pop
rolb
inc
inc
pop
inc
fisubl
mov
xchg
cmc
leave
notb
jmp
push
jg
pushf
mov
sbb
scas
sarl
scas
in
inc
dec
cli
xchg
xorl
adc
add
mov
mov
fstl
inc
movsl
cld
shll
add
dec
shrl
icebp
push
add
ss
mov
pop
aas
mov
fisttpl
int3
mov
add
push
add
mov
imul
dec
aas
mov
cld
mov
jne
popa
jge
leave
adc
mov
inc
inc
xchg
cmp
cmp
cmpsl
pop
lret
imul
or
pop
mov
dec
test
add
and
mov
mov
jbe
and
push
cmp
mov
push
mov
cmp
sbb
clc
pop
mov
dec
lea
lret
cmp
adc
cmpsb
scas
sti
sub
loop
mov
mov
cmp
adc
aam
pop
dec
scas
jb
hlt
cmp
jns
std
push
mov
cmpsl
xchg
dec
dec
shll
enter
aas
xor
mov
jecxz
jns
sub
jno
xor
jmp
cmp
insl
fsubrp
jl
and
sbb
pop
mov
js
ja
mov
xchg
adc
into
jle
in
lcall
ljmp
push
arpl
outsl
push
mov
mov
ja
push
adc
sub
pop
add
lods
orl
iret
mov
or
dec
push
jnp
cmc
movsb
cltd
fildl
aas
int3
mov
test
repz
sbb
leave
mov
aam
leave
or
aam
pop
mov
and
sbb
sub
stos
adc
out
mov
hlt
and
mov
mov
out
xor
push
js
icebp
push
inc
pop
xlat
sti
fs
or
loop
push
mov
ja
sahf
and
push
lods
insb
or
sub
mov
jl
mov
js
icebp
js
jl
pop
scas
push
adc
and
mov
pop
rcrb
mov
mov
ficomps
rcl
sub
out
sbb
adc
cli
iret
call
out
xlat
fs
dec
rcr
js
inc
xor
pop
sub
pop
fidivrl
inc
mov
in
inc
in
cli
xchg
xor
xchg
pop
xor
adc
data16
adc
icebp
rcr
mov
cmc
and
xorl
outsl
std
sub
and
mov
data16
xlat
ljmp
mov
fdivs
lahf
cmpsl
push
xor
pop
jge
setp
mov
sbb
xor
cli
mov
fisubs
pop
stc
call
das
sbb
xor
xchg
lea
repnz
stos
dec
sbb
sbb
sbb
outsb
and
lret
sbb
sub
sub
lret
or
cmpsl
rorb
xchg
fdivr
fidivl
jo
test
and
lock
sarl
xor
fdivl
push
icebp
movsl
js
jb
cwtl
cmp
cmpl
mov
repz
fnsave
pop
ds
in
pop
cs
sub
mov
mov
stos
pop
fucomip
lret
test
cmp
xor
mov
or
pop
push
cld
repnz
pop
pop
iret
sbbb
loop
testb
js
popa
cwtl
jns
sbb
mov
jae
pop
xor
cmp
pop
dec
aad
and
mov
xlat
xorl
xchg
stos
inc
nop
je
jne
ret
std
jbe
aad
addl
inc
andb
shlb
xor
jnp
cmpsb
adc
aas
inc
fsubp
jns
jge
pop
dec
fst
stos
mov
xor
cld
je
sahf
xchg
pusha
push
adc
and
cmp
cli
mov
xchg
sbb
pop
rclb
inc
shl
jecxz
xchg
lock
jp
loop
and
inc
inc
xor
insl
push
pop
push
std
inc
clc
xchg
loop
xor
add
pop
and
xor
xor
xor
movsb
mov
and
fwait
stc
adc
jmp
fs
push
cld
lea
cmp
jl
adc
sub
pop
lahf
jne
push
daa
aaa
addr16
pop
jge
dec
or
jae
test
arpl
testl
mov
enter
cwtl
dec
push
sti
jnp
out
mov
fsts
mov
adc
pushf
xchg
pop
pop
mov
adc
sub
into
ss
jle
mov
insl
sbb
outsb
test
mov
jne
mov
mov
lcall
test
aaa
popf
inc
test
xchg
loop
mov
add
cmp
pop
jle
pop
mov
sbb
iret
mov
lar
pop
add
xchg
or
lock
sub
cmp
into
mov
sbbl
mov
xchg
clc
sbb
push
shl
sub
inc
adc
mov
push
clc
adc
mov
in
sti
or
sbb
sub
lea
xor
sub
sub
adc
or
fildll
cmp
jbe
or
dec
scas
rolb
adc
popa
inc
out
dec
sub
ret
cmp
loopne
repnz
add
adc
dec
cmpsl
cmpsl
cwtl
ret
aaa
fs
sbb
mov
in
adcl
popa
fsubrs
sbb
push
movsl
orb
int3
popf
sarb
push
aas
iret
lret
test
out
jp
add
and
dec
sub
call
inc
sbb
mov
cmp
cltd
in
dec
call
sub
js
cld
popf
sbb
lea
cmpl
mov
jp
jns
adc
xor
jo
inc
loopne
cld
rcll
and
pop
mov
ret
adc
leave
stos
mov
cmpsl
push
xchg
xor
mov
adc
jo
cli
adc
jae
test
xor
aas
push
pop
repz
not
loop
inc
adc
or
out
int
and
mov
and
in
incb
cmpsb
xor
daa
inc
fsts
out
jne
push
jo
div
pop
jae
jp
jmp
mov
lret
ret
mov
push
cmc
test
sbb
out
xchg
push
aas
cwtl
mov
fidivs
mov
fmuls
jle
sub
shll
in
test
xor
gs
jo
sti
icebp
cmpsl
adc
xchg
and
lcall
fstpl
ss
icebp
cld
out
setb
push
pusha
and
inc
cwtl
sub
rcl
out
cltd
aad
jo
jge
stos
inc
shlb
ljmp
inc
in
pop
cmpsb
and
mov
ret
mov
and
adc
xor
inc
lahf
lret
sahf
xlat
mov
or
scas
in
inc
test
loop
aad
push
leave
and
adc
mov
or
dec
adc
aam
getsec
movzwl
loop
dec
fsubp
or
cmp
roll
push
jnp
inc
fwait
sub
in
sti
jns
daa
int
aas
aaa
inc
inc
insb
mov
mov
jne
jno
push
push
dec
or
js
jecxz
and
cmc
out
mov
inc
cwtl
jnp
sbb
mov
push
rorb
mov
pop
adc
sub
and
cmp
lret
fstpl
dec
sbb
cmp
icebp
pop
and
out
jp
or
movb
repnz
outsl
and
inc
call
leave
aaa
add
mov
pop
fstpl
mov
xorb
iret
outsb
iret
adc
ret
push
cmpsb
das
add
sbb
jl
or
push
inc
rcl
and
xlat
out
insb
fildll
mov
add
cmp
fmull
sub
push
dec
popf
stos
stos
add
cltd
inc
push
push
pop
lods
inc
inc
movsb
pop
inc
dec
cmp
cltd
sti
lock
nop
xchg
adc
iret
inc
push
sub
cld
mov
pop
filds
shl
dec
pop
leave
xchg
popa
cmc
stos
mov
loope
jbe
jmp
out
out
sbb
adcb
add
shrb
mov
outsl
sub
inc
sbb
push
mov
push
and
push
popa
adc
cmc
ret
xchg
pop
mov
jae
xchg
or
ja
push
movsb
movsl
in
arpl
loop
xor
jg
xchg
mov
dec
popa
mov
dec
lret
adc
out
mov
fmull
cmp
fdivl
rcr
mov
les
ss
pop
popa
stos
push
pushl
js
imul
adc
mov
shlb
and
lahf
add
xchg
mov
mov
push
sub
sbb
das
jecxz
in
enter
and
mov
cmc
sub
dec
push
pop
fists
cmp
das
mov
test
cmp
mov
xchg
dec
fs
mov
jae
mov
xchg
dec
add
jmp
pushf
jecxz
push
inc
push
nop
shll
xor
cmc
shrl
pop
jecxz
stos
mov
js
pop
in
push
out
pop
dec
push
mov
xchg
out
jmp
cmp
stos
xlat
pop
dec
cmpl
enter
fisubl
mov
mov
and
mov
rorb
sbb
repz
fistps
xor
and
sbb
pusha
cmp
dec
scas
imull
idiv
mov
lret
lea
aaa
jge
add
dec
pop
cli
xchg
and
cwtl
push
mov
inc
ljmp
lock
pop
pop
xchg
aad
test
je
lds
or
mov
mov
mov
shrl
mov
mov
iret
pop
xchg
jg
push
das
movsl
or
xor
inc
sbb
aam
test
les
sti
and
add
sub
dec
mov
clc
and
addl
adc
daa
mov
jb
fisttpl
leave
jp
lahf
cmp
or
xor
vpcmpeqb
mov
add
mov
mov
std
mov
leave
adc
pusha
bound
mov
push
lahf
inc
hlt
out
dec
imul
sbb
push
add
fs
add
add
xor
mov
jne
xor
inc
shrb
mov
add
mov
test
push
aaa
jbe
inc
cmp
inc
push
popf
sti
inc
or
sub
push
add
cmp
es
roll
cld
mov
jmp
cmpsl
int3
pop
rorb
xor
and
inc
sbb
or
lahf
push
sbb
mov
xchg
jns
outsl
inc
or
lahf
les
shlb
and
aam
xchg
sub
je
rcl
aad
hlt
jge
in
incb
xor
clc
push
movsl
pop
aam
lds
imul
lret
in
mov
lret
adc
loopne
mov
cs
rcrb
push
stos
sbb
rorb
mov
call
pop
dec
out
fwait
clc
mov
ret
xchg
int
add
lea
repz
dec
sub
pushf
xchg
xchg
aas
cmp
ret
and
xchg
mov
ljmp
or
xor
or
jg
aad
sbb
xchg
insb
aam
in
lods
aad
adc
sbb
cmp
cmpsl
sub
jmp
cltd
add
pop
repnz
int
xchg
test
push
add
bound
xchg
pop
in
push
mov
mov
inc
ss
aaa
dec
cmp
cmpsb
mov
and
js
mov
cltd
mov
imul
std
jmp
push
test
test
dec
shlb
xorl
sahf
cmp
push
fisubl
dec
and
test
cs
fcmovnb
fldcw
lods
cli
cmp
sbb
out
imul
xor
dec
lret
imul
add
push
dec
sbb
cmp
jae
ss
fs
sahf
mov
fwait
enter
fists
testl
add
pusha
leave
cmp
mov
pushf
dec
mov
sub
int
mov
mov
or
pusha
loope
cs
lds
adc
rorb
mov
in
test
adcl
fsub
jmp
adc
aas
fbld
or
dec
mov
movsl
addr16
ljmp
sub
jmp
cmp
lods
rorb
push
xor
pushf
dec
sti
and
inc
xlat
sub
hlt
pushf
test
shr
adc
sbb
leave
cmp
out
jl
int
dec
pop
adc
inc
xor
clc
sub
xor
adc
mov
bound
push
mov
mov
xchg
add
cmpsl
test
mov
jae
stc
xor
gs
jno
stc
inc
cld
jmp
daa
ss
fmull
popf
and
mov
lods
test
lods
fstps
mov
xlat
lahf
arpl
fnstenv
xchg
test
imul
xor
in
jbe
aam
sti
popf
ds
fstps
mov
mov
jne
inc
add
jmp
jo
lret
hlt
mov
mov
xlat
mov
cmp
fwait
jae
pop
jle
shrl
ficomps
xchg
fldt
imulb
loopne
sbb
test
repnz
jl
xor
or
pop
bound
cmpsl
inc
imul
fldcw
pusha
rcr
in
jmp
popf
addr16
lds
dec
pushf
pop
dec
fs
arpl
mov
divl
mov
adc
std
and
jp
sub
or
pop
jae
aaa
dec
loop
cltd
aam
loope
mov
push
inc
in
out
adc
xchg
inc
test
inc
es
es
push
inc
add
xchg
jmp
jge
mov
xor
cmpsl
mov
lea
mov
in
clc
ret
add
out
int
imul
fwait
gs
or
popa
pop
xor
cltd
das
jge
fstpt
adc
fs
mov
adc
test
idivb
xor
mov
sbb
rcr
sub
incl
mov
outsb
jecxz
das
int3
pop
insl
movsl
push
push
jbe
dec
sub
fbld
hlt
add
and
add
pushf
enter
cmpb
fldl
fcomp
mov
jl
cld
mov
xlat
push
inc
adc
xchg
in
and
xchg
rclb
jns
fildll
lods
dec
shrl
out
inc
and
icebp
push
mov
lret
and
xor
pop
jns
leave
or
pop
jmp
and
push
sarl
addl
xorb
push
ds
push
push
sbb
shlb
incb
dec
jle
adc
lret
std
test
inc
xchg
pop
adc
in
pop
fldenv
jl
mov
sar
mov
mov
pop
push
adc
cmp
pushf
repz
insl
mov
sbb
addl
movsl
adc
faddp
xchg
jmp
sub
jmp
dec
mov
mov
sub
sub
cld
daa
xor
dec
aaa
mov
sbb
mov
cmp
insb
mov
and
adc
out
xchg
outsl
jno
out
ljmp
repz
out
andb
push
mov
fucomip
cmp
jb
outsl
dec
iret
push
int
into
pop
test
pop
xchg
dec
pop
sub
sub
inc
sbb
dec
xor
cmp
xchg
or
lcall
mov
pop
jecxz
ljmp
scas
js
push
dec
jns
fs
iret
sahf
pop
or
stos
cmpsl
xchg
push
xchg
shll
js
mov
imul
lods
and
jg
pushf
and
cmp
movsb
loopne
mov
shrb
mov
cld
jle
xor
mov
out
lds
gs
or
xchg
movsl
lock
adc
popf
fbld
aas
adc
movb
cmp
sub
je
mov
and
std
jbe
std
ja
fisubrs
push
sub
out
sbb
xor
cli
ja
pop
add
cltd
les
mov
loop
flds
fst
adc
push
jg
sti
lret
loop
mov
sbb
pop
cmc
mov
lds
outsl
add
cmp
pop
mov
in
jge
stos
inc
add
inc
lcall
jle
js
aaa
in
repnz
popa
insl
mov
push
cmpsl
pop
mov
lahf
call
jg
adc
ret
dec
pop
sbb
push
popf
das
js
sub
push
jl
xchg
push
outsb
bound
aad
jb
ljmp
in
lock
dec
rorl
stos
insl
or
rcrb
iret
mov
rcrl
xchg
fildl
pop
loopne
adc
xchg
std
sbb
pop
pop
ret
xchg
pop
repz
xchg
repz
add
push
cmp
daa
xchg
mov
mov
scas
scas
jne
mov
stc
and
jmp
jmp
and
dec
dec
jbe
mov
divl
and
popf
mov
cltd
cli
fwait
add
cmp
jb
push
mov
sti
ficoms
xor
mov
push
outsb
es
pop
movsb
xor
jns
adc
fsubrl
shrb
adc
xor
mov
int
dec
mov
test
cmp
lods
mov
mov
and
fdivr
push
sub
or
mov
inc
sub
inc
stos
in
xlat
cmp
dec
xor
mov
int
sbb
aam
cli
fidivs
mov
fsubl
sbb
out
jecxz
stc
jg
setge
lcall
das
jl
sbb
test
jns
jo
push
jle
js
pop
jae
cmpsb
cmp
push
jp
add
orb
cmp
in
mov
cmc
dec
mov
lret
mov
scas
sub
iret
into
jl
lret
frstpm(287
shlb
out
std
in
sti
lret
iret
in
mov
xchg
mov
decb
nop
cli
fmuls
mov
jne
outsb
xlat
cmp
jno
push
repnz
sub
in
sbb
lds
xchg
rol
jp
jle
mov
xchg
inc
movsl
rcr
mov
orb
leave
xchg
jl
inc
pop
xchg
jle
jp
sahf
pop
mov
imul
xor
mov
lea
adc
mov
xlat
and
mov
push
insb
repnz
xor
lret
jmp
imul
dec
push
out
and
cmpsl
hlt
sbb
dec
lea
pop
push
mov
imul
gs
out
cs
repz
mov
in
mov
out
inc
scas
lahf
jnp
repz
and
and
inc
addr16
add
cmpxchg
sbb
pop
imul
sahf
pop
xchg
lods
inc
adcb
ret
jae
xchg
xor
push
inc
leave
pop
inc
test
imul
mov
pusha
and
sub
xchg
idivb
daa
jae
fsubrl
movsb
inc
daa
xor
push
mov
jmp
out
outsl
lea
jnp
pop
imul
or
shlb
daa
in
pop
loop
sbb
arpl
adc
push
dec
jp
shl
lahf
mov
cmp
and
jae
jp
xchg
jmp
mov
xchg
mov
mov
int3
sub
sbb
jl
or
nop
aas
sub
sub
movsl
dec
hlt
sbb
shrb
fs
mov
or
and
xlat
int3
cwtl
pop
jnp
cltd
jl
out
or
mov
lahf
dec
lods
lea
mov
jns
fmuls
dec
into
xchg
push
push
popa
push
jl
push
push
sub
mov
notb
inc
pop
pop
inc
or
dec
clc
push
lret
dec
cltd
mov
hlt
lds
lret
xchg
ficoms
mov
xchg
cmpsl
push
mov
xor
sbb
jnp
xor
mov
out
lods
punpcklbw
shll
movb
sub
or
mov
bound
cmc
vshufps
or
adc
pop
jo
pop
mov
adc
add
imul
jbe
pop
and
jno
in
jb
jne
shrb
int
jne
inc
xlat
push
mov
stc
or
cmpsl
pop
mov
sub
aaa
inc
imul
jne
lods
push
outsb
mov
mov
sub
xchg
test
cmp
push
mov
mov
pop
fdivrp
mov
pusha
dec
int3
jp
add
daa
pop
jo
push
leave
jmp
cmp
pop
lods
pop
call
arpl
xchg
addr16
xchg
fsubrp
ret
push
dec
imul
or
mov
inc
fisubs
jg
lds
ret
test
jmp
xor
mov
or
mov
cli
push
out
or
dec
adcl
push
pop
adc
mov
arpl
test
in
pop
lcall
aam
cmp
sahf
jns
cmpsb
push
aaa
push
adc
mov
arpl
aam
push
sarl
push
stos
ss
push
sub
lea
xchg
insb
fsubl
pop
and
outsl
mov
mov
shr
xlat
ret
jg
push
jle
push
and
cmc
xchg
mov
or
pop
ljmp
stc
sti
lods
sbb
inc
ror
xlat
add
push
sub
fs
aam
ja
cmpsl
fmuls
test
sub
addr16
in
imul
mov
dec
push
add
adc
cmpsb
mov
cmp
and
add
mov
mov
push
dec
xor
sbb
mov
xchg
sub
aaa
jge,pt
out
cli
fsubrs
adc
shll
mov
es
push
cld
arpl
pop
mov
pop
in
sub
and
sub
xor
adcl
mov
add
jns
adc
nop
out
and
stos
mov
adc
or
mov
xor
int
xchg
sahf
push
and
into
daa
inc
aas
test
push
sub
inc
int
sbb
xlat
push
mov
lods
mov
push
mov
mov
pop
push
test
fdivp
cmp
adc
cmpsl
scas
bnd
repnz
adc
jl
in
jl
lahf
mov
lcall
inc
mov
mov
mov
mov
test
movsb
mov
fbld
stos
ret
or
mov
lret
mov
adc
clc
cmp
add
sbb
stc
sbb
mov
loopne
fistps
jle
mov
jb
les
push
and
imul
call
xchg
outsl
lcall
iret
inc
pop
mov
fimull
std
mov
into
and
stos
nop
fidivrs
dec
jecxz
test
jno
pusha
scas
push
call
sub
jne
add
sub
mov
cmp
mov
shll
ficompl
jg
popa
fnsave
sar
mov
iret
push
ds
mov
mov
pop
lahf
mov
or
add
ficomps
daa
pusha
xchg
mov
or
lods
and
ret
cld
aam
and
jns
repnz
push
inc
cmpsb
xor
ja
push
add
into
lret
inc
mov
pop
daa
lds
sbb
ret
sbbl
pop
mov
sbb
pop
mov
xchg
daa
ret
adcl
xor
xchg
loop
jns
data16
mov
hlt
inc
inc
arpl
faddl
add
scas
mov
out
adc
xor
jl
jp
xchg
mov
dec
mov
dec
in
jmp
add
testb
pop
add
jecxz
dec
jp
dec
sbb
push
cs
out
mov
call
icebp
addr16
addr16
js
dec
add
jae
cmp
push
mov
movsb
or
sarb
push
mov
lock
out
jle
add
bound
enter
in
add
popf
lods
dec
fwait
jp
jp
nop
mov
imul
xor
xchg
rol
out
ds
fstpt
in
pop
mov
push
test
cmp
sbb
pop
hlt
das
movl
addr16
sub
pop
push
sub
sahf
add
xchg
sbb
lods
and
push
pop
and
call
sub
scas
push
xchg
push
rcl
imul
movsl
dec
or
dec
add
push
and
pusha
loope
scas
daa
mov
incb
fistl
cwtl
mov
loop
cmpsl
hlt
sbb
adc
add
ret
xchg
lods
mov
pusha
push
mov
and
fwait
xor
pop
xor
lock
inc
dec
pop
call
lret
cmp
sahf
ss
seto
call
inc
dec
add
loop
popl
je
push
aad
mov
pop
loopne
in
sbb
lahf
rcrb
nop
mov
lods
dec
mov
fsubs
js
icebp
cwtl
lcall
imul
pop
rcll
dec
mov
mov
mov
lea
aas
rorb
pop
gs
sub
scas
sub
shrl
or
push
jp
ds
test
out
xchg
push
pop
pop
pop
mov
inc
notl
fs
dec
into
mov
inc
pushf
or
or
adc
rol
inc
imul
cmp
fbstp
cwtl
inc
push
xor
adc
mov
sarb
jge
daa
lea
dec
dec
mov
xlat
outsl
sarb
mov
pop
adc
pop
mov
cmp
bound
mulb
dec
inc
pop
mov
jno
nop
test
jle
sbb
sbb
iret
loop
call
or
sub
movsb
sub
xor
adc
fdivl
xchg
ds
sbb
out
or
xchg
js
xor
cwtl
push
cmpsl
fs
mov
dec
outsl
push
dec
fsubrp
shll
jns
fimull
pop
iret
adc
mov
ja
xchg
jb
aaa
mov
in
xchg
mov
popa
inc
clc
negl
dec
fcompl
mov
xchg
aas
sub
mov
call
and
pop
lea
cs
imul
or
push
pop
inc
dec
xor
ds
pop
test
aad
add
sarl
mov
test
hlt
cltd
in
popf
sub
cltd
das
cmp
push
xor
out
pop
ret
ret
js
fwait
mov
es
cmp
pop
cmp
lods
sbb
xor
loope
xchg
xchg
push
inc
loope
negl
push
sti
lds
sub
mov
push
xchg
push
push
mov
sbb
xchg
xor
inc
stc
lcall
adc
in
gs
inc
shlb
in
loope
cli
ljmp
cld
and
sbb
in
mov
out
jne
mov
dec
cmpsl
jbe
idivl
test
loope
jge
mov
xchg
cmpsl
dec
cwtl
mov
xchg
rcrb
je
cld
add
and
fidivs
rorl
or
mov
lods
sub
lods
enter
mov
push
pop
mov
lret
dec
inc
inc
shll
cmp
fcompl
sbb
pop
mov
shll
jg
and
xchg
test
dec
xor
or
cwtl
dec
mov
jno
push
inc
push
ret
fldt
lods
xor
sub
mov
test
and
testl
rcrb
repz
pop
dec
jge
sbb
adc
lcall
cmp
ficoml
or
jne
pushf
push
pusha
daa
cmp
imul
xchg
aaa
push
mov
fs
pop
adc
xor
xor
dec
in
cmp
in
adc
mov
mov
jge
xchg
fcoms
push
dec
call
dec
sbb
push
repz
pusha
adc
adc
sbb
cmp
xchg
popf
mov
pusha
dec
clc
rcll
pop
aas
add
and
lods
mov
mov
testl
dec
push
lods
dec
mov
in
lahf
dec
pop
jnp
outsl
push
dec
xor
shlb
std
lds
dec
pop
pop
mov
mov
out
in
lret
rorb
fisttpll
int3
outsl
or
or
sub
cltd
add
pop
fists
pop
out
bound
jmp
dec
cld
mov
xor
roll
mov
jmp
xor
xor
call
or
pop
mov
bound
and
loope
cwtl
jmp
jbe
add
cmpsb
jecxz
cmp
lods
lea
dec
mov
lods
movsl
data16
popf
lods
xchg
cmp
jge
inc
insl
pushf
scas
test
sbb
push
cmp
pop
push
or
mov
pusha
mov
and
sbb
fwait
popa
lods
pop
inc
inc
or
inc
aad
incb
dec
lret
mov
in
pop
dec
sbbb
xchg
in
push
gs
into
xchg
or
inc
inc
daa
push
adc
aas
or
jbe
test
movsb
jp
test
mov
pusha
iret
push
lret
cmp
or
ret
iret
xchg
incb
and
dec
sbb
mov
xchg
out
xor
int3
mov
jnp
push
and
repnz
push
and
sbb
jne
fsubrs
subb
sub
pushl
and
aad
enter
in
lods
ljmp
cwtl
loope
add
ja
push
je
cmp
stos
sub
jecxz
cwtl
testb
jae
aaa
pusha
cmpsl
xchg
dec
inc
test
popf
in
insl
test
adc
loope
jne
in
and
cs
in
jo
in
popf
mov
lret
fdivl
or
jb
or
and
pop
cmp
nop
sti
jmp
mov
hlt
jecxz
pushf
pop
fstpl
sbb
mov
pop
mov
sbb
sbb
cli
and
mov
dec
loope
cmp
push
lahf
in
and
dec
mov
jns
clc
xor
mov
mov
push
sub
lods
in
jno
add
mov
pop
push
decl
cmc
xor
xchg
jg
add
into
fwait
adc
int3
push
aam
mov
fdivrs
repnz
push
pop
scas
dec
aaa
pop
loop
fldl
inc
loopne
add
or
jle
leave
insl
ret
ds
xchg
jnp
jmp
xchg
ret
adc
push
mov
cli
add
push
popa
pop
and
cld
pop
lret
data16
ljmp
imull
leave
gs
lret
out
sbb
pop
inc
adc
push
jne
inc
jnp
out
fs
cmp
shrb
hlt
adc
cmp
or
push
test
adc
mov
xchg
or
stos
lock
adc
adc
cmp
mov
pop
inc
sbb
xor
sahf
sub
mov
jg
jg
jl
sub
ds
inc
mov
inc
je
fmuls
mov
mov
cld
mov
mov
xchg
xchg
cmp
sbb
lret
mov
test
iret
addr16
cmp
dec
dec
sti
sub
in
mov
jle
cmc
sub
jb
or
negb
add
add
stc
push
cmp
xlat
in
adcb
push
push
insb
inc
inc
filds
imul
leave
enter
mov
loopne
ja,pt
xlat
dec
negl
xor
xor
mov
jp
jb
jle
adc
pushf
push
call
cmp
cmp
jno
lcall
pop
dec
xchg
mov
insl
mov
push
lea
in
call
add
daa
and
daa
test
cmp
inc
push
fstpt
orl
jle
push
clc
ret
loope
jge
es
pop
aad
mov
dec
xchg
stos
push
sahf
repnz
adc
popf
mov
xor
leave
adc
lock
pop
and
sbb
in
lret
pop
jne
arpl
add
adc
scas
lret
stos
jp
add
add
scas
scas
popl
out
iret
stos
lods
lcall
jge
pop
pop
mov
in
mov
mov
mov
dec
cltd
xchg
jecxz
jae
sub
jb
xor
hlt
aam
ret
jnp
das
adc
btr
aam
in
fnsave
stos
jo
fnstenv
pop
push
clc
push
sti
pop
mov
xchg
in
imul
or
mov
xchg
shl
jl
scas
mov
and
in
loopne
jnp
pop
or
nop
mov
arpl
sbb
jbe
je
mov
add
leave
loope
pop
test
pop
lret
xor
add
ret
fstpt
sub
mov
jle
imul
adc
sbb
push
stc
xor
movsb
xchg
pop
xchg
mov
int3
xor
or
addr16
mov
xchg
mov
fcoms
xor
call
addl
xchg
mov
adc
pop
add
sub
mov
mov
scas
cmpsl
jnp
inc
je
ja
push
sbb
fidivrl
sti
sub
mov
clc
xchg
push
cli
repz
or
mov
das
xchg
or
aam
js
adc
inc
test
mov
xor
das
arpl
inc
inc
insb
jg
sbb
cmc
xchg
push
inc
sub
jmp
fmul
inc
or
popf
lret
cs
dec
ljmp
dec
test
out
pushf
fneni(8087
movsl
pop
into
xchg
in
enter
negb
adc
fsts
loopne
cmpsl
jb
push
fnstsw
shlb
imul
mov
lods
add
mov
jmp
mov
sbb
mov
and
scas
adc
push
pushf
xchg
daa
je
dec
into
lock
pop
xlat
jne
je
rcr
lods
scas
in
nop
add
mov
push
jno
ds
movsb
xchg
sub
mov
add
imul
enter
repnz
pop
and
mov
pushf
mov
loopne
divb
push
xlat
mov
cmp
dec
sti
cmp
pop
cmpsb
sbb
outsl
loope
nop
stos
add
inc
insb
test
repnz
xchg
sbb
mov
and
aaa
insb
cltd
loope
or
xchg
xor
or
popf
ret
push
imul
or
fdivl
jmp
sbb
adcl
pop
inc
imul
out
loope
or
rcrb
scas
mov
xor
icebp
iret
cmp
jo
jp
xchg
or
pop
dec
sbbb
adc
lret
mov
popf
inc
dec
sbb
js
or
pop
out
mov
in
mov
push
or
mov
push
and
dec
pop
xchg
js
mov
mov
or
push
hlt
fsubrs
roll
cmp
jle
cmpsb
adc
xor
outsb
pop
out
xor
sub
or
jecxz
ss
fs
mov
xlat
pop
or
push
cwtl
dec
mov
jg
pop
push
mov
mov
mov
xchg
shll
jecxz
fcom
mov
maxps
adc
out
ret
pop
ret
mov
cmp
sbb
mov
inc
inc
xchg
mov
dec
add
or
jns
cmp
lret
mov
push
mov
push
cmp
shl
mov
insb
dec
rcl
jmp
pop
sbb
dec
inc
sub
scas
xchg
cmp
out
mov
xchg
cmp
sbb
push
repz
arpl
and
mov
cli
ret
sti
js
repz
add
mov
jmp
lock
push
out
loope
or
daa
dec
lods
or
mov
std
pop
inc
test
jnp
dec
add
rclb
ss
scas
data16
out
cltd
add
leave
jne
xchg
das
nop
xor
gs
in
pop
pop
inc
rol
mov
fbstp
pop
out
fidivs
cwtl
repnz
push
loopne
sub
xchg
mov
pop
fmuls
sub
mov
xchg
fs
jge
aaa
xor
out
out
dec
in
imul
insl
fistpll
mov
mov
mov
push
ds
mov
shl
xor
mov
cmc
xchg
and
jmp
in
fiaddl
jnp
mov
in
xchg
mov
xor
shrb
inc
stos
stos
xor
imul
cmp
repz
les
adc
jbe
pop
jge
mov
cmp
nop
cmp
lcall
fcmove
mov
adc
mov
ss
mov
inc
cmp
xchg
shlb
pop
mov
fisubrs
je
sbb
dec
popa
dec
xor
addr16
in
cli
rcll
out
pushl
lock
jo
arpl
repz
decl
push
cmpb
cmp
imul
jp
sub
movsb
sbb
add
repnz
pop
rcll
mov
mov
mov
and
xchg
aad
add
sbb
mov
xchg
movsl
test
shrl
push
mov
out
mov
and
jg
or
pop
sbb
cmp
push
push
mov
mov
inc
push
and
jle
xor
cmp
in
dec
push
adc
repnz
push
ret
mov
mov
xchg
jno
mov
fwait
xor
negb
movsb
or
push
mov
and
xor
outsb
mov
jecxz
repnz
dec
enter
inc
arpl
scas
mov
test
stos
js
loope
fwait
xor
stos
daa
imul
mov
neg
mov
adc
push
scas
daa
int3
sub
pushf
xchg
dec
mov
push
jb
jb
in
sbb
dec
loop
ja
jnp
xchg
cltd
sub
lods
mov
lods
jp
fidivrs
loopne
int3
mov
inc
hlt
add
xchg
sub
inc
repnz
loopne
jo
xchg
adc
scas
and
dec
mov
movsb
jge
roll
test
or
dec
xchg
loopne
cld
pushf
popa
cmc
daa
and
ja
mov
inc
out
cld
lret
ret
push
xlat
or
dec
sbb
aas
mov
js
xchg
ret
mov
fwait
cmp
xor
je
pinsrw
dec
lock
xor
sbb
adc
pop
jno
mov
out
mov
jnp
jp
cmp
pop
insl
push
enter
cmp
push
mov
aas
sbb
pushf
mov
std
pop
leave
mov
dec
out
cmp
mov
and
cmp
jg
sub
std
pop
inc
insl
push
scas
bound
adc
int3
lahf
xor
pop
out
dec
pop
bound
mov
mov
in
cmpl
scas
test
push
popf
out
dec
mov
or
movsb
mov
xchg
shrd
sbbl
in
push
push
or
dec
lcall
aaa
es
mov
or
jnp
scas
dec
leave
adc
dec
imul
icebp
mov
xchg
sbb
mov
aas
test
movsb
lock
stos
jp
mov
mov
add
ja
int
jb
cmc
ret
dec
push
adc
sub
les
adcb
incb
cmp
inc
xchg
fists
xchg
imul
or
loop
sbb
inc
sub
mov
push
outsl
mov
jnp
leave
jo
scas
push
mov
negl
mov
repz
mov
mov
dec
ss
dec
inc
mov
test
mov
clc
pop
aaa
aam
jns
lret
mov
xchg
inc
and
adc
inc
lea
add
cwtl
rcl
jns
add
mov
insb
xchg
jnp
test
jecxz
sbb
outsl
or
idivb
xchg
push
push
aam
adc
ret
jmp
mov
ss
mov
mov
jge
dec
dec
repnz
in
mov
js
sub
pusha
cmpsb
sbbb
sub
mov
imul
mov
test
scas
mov
xor
push
test
fs
stos
dec
push
int3
push
insb
pop
pop
fwait
in
mov
pusha
mov
pop
in
out
lahf
pop
fistpl
mov
jg
pushf
or
xchg
les
stos
push
lcall
loopne
std
jl
mov
mov
or
xlat
out
mov
and
and
mov
test
cmovle
jge
jbe
cmp
insl
fsubp
imul
jnp
ret
loope
add
pushf
sbb
in
sub
push
cltd
iret
pop
jno
lds
pusha
pop
xor
fmul
dec
pop
insb
test
sub
sub
andb
ror
call
dec
xchg
inc
cmp
loopne
lahf
nop
icebp
clc
aas
lods
inc
xchg
adc
aaa
dec
in
enter
xchg
jmp
stos
fidivl
idiv
pop
xchg
mov
imull
testl
subb
outsb
jne
xor
sbb
mov
pop
pushf
and
iret
jl
mov
ja
xorl
push
xor
loope
xchg
mov
hlt
call
ds
cmp
mov
stos
jecxz
loopne
dec
adc
bnd
dec
xchg
sbb
pop
movsl
sbb
enter
jns
pop
jmp
out
addr16
insl
int
dec
lret
sub
adc
and
cmp
fsubs
stos
push
add
aas
fists
lcall
push
adc
int
negb
xlat
lret
sbb
push
xor
arpl
faddl
fidivrl
pushf
movsb
xor
cwtl
jecxz
lahf
ret
imulb
cvtdq2ps
jne
inc
sub
divb
fsubrl
mov
pop
inc
xlat
mov
or
pop
scas
adc
sub
mov
jl
push
mov
add
cwtl
nop
push
jns
lahf
and
xchg
mov
jge
sbb
ss
pop
out
mov
inc
mov
mov
lahf
in
in
jnp
xchg
mov
outsl
push
and
push
jg
imul
cmp
sub
lds
mov
icebp
sub
jbe
stos
adc
pushf
mov
xchg
pushf
xchg
cmpl
mov
clc
fisubrl
outsl
sub
mov
cmp
push
jl
cmpsb
inc
sbb
aad
dec
xchg
sbb
xchg
bswap
ds
inc
xchg
jecxz
add
mov
dec
cmpb
icebp
stos
aad
push
cmp
fwait
cwtl
sti
jne
loop
ljmp
adc
add
into
jnp
push
push
loope
fwait
xchg
fcompl
mov
add
jne
sahf
dec
cmpsl
int3
or
lods
or
jle
jge
nop
pop
xchg
push
add
push
fnsave
mov
mov
fneni(8087
adc
xlat
xor
mov
mov
ret
subl
and
and
vmovntps
sub
sbbb
das
movsl
or
es
notl
in
add
xchg
shll
adcb
mov
xlat
dec
pop
call
stc
xchg
test
pop
notb
push
dec
outsl
or
and
mov
mov
lods
dec
aad
pop
jg
std
xor
int3
cmp
imul
fidivrs
es
lods
aad
aaa
xlat
daa
dec
dec
out
rcr
shlb
pusha
sub
dec
xor
add
sbb
ljmp
pop
mov
sub
mov
add
add
out
dec
jg
aam
adc
adc
adc
imul
sbb
push
mov
fcompl
enter
andb
push
xor
mov
dec
jl
and
fisttps
mov
addb
cmp
pop
mov
movsl
pop
mov
arpl
sbb
mov
cmp
out
jnp
std
pop
dec
cli
imul
out
add
pop
lock
or
jno
inc
pop
dec
dec
mov
sti
iret
jne
bound
cmp
inc
out
inc
test
adc
ss
imul
es
mov
leave
icebp
fidivl
fsts
push
xor
sti
add
mov
pop
ret
aad
shl
fsub
push
loopne
or
sbb
add
movsl
xlat
mov
xchg
sahf
pop
in
sub
nop
test
jge
scas
jl
mov
cmpsl
cmpsl
pop
xchg
cmpsl
xchg
stc
test
mov
ja
cmc
std
and
jp
cmp
mov
dec
mov
push
fucomi
pop
orb
fisttpll
addr16
dec
nop
pop
rcll
cmp
call
pop
jl
jle
cltd
xor
adc
and
adc
stc
or
pop
pop
es
dec
jne
sub
xor
jg
and
or
loop
ds
cmp
leave
mov
sbb
into
mul
cmpsl
dec
js
jle
jne
xchg
mov
ret
and
xchg
inc
popa
dec
pop
sub
pop
sbb
xchg
loopne
pop
inc
xor
lcall
jmp
sarl
push
mov
adc
cmpsl
loop
add
lret
subl
je
add
leave
imul
outsl
or
test
mov
dec
sbb
sub
pop
xor
cld
enter
jp
mov
cli
add
dec
test
pop
push
and
std
fisttps
cmp
push
sub
scas
cwtl
jle
inc
pop
or
rcrb
jb
mov
jae
je
repz
adc
dec
enter
andl
into
adc
dec
cmpsl
int3
xor
aad
mov
pusha
mov
gs
pop
subb
mov
addr16
xor
cs
adc
test
jecxz
ja
sbb
or
and
ljmp
sub
addl
xchg
addr16
in
into
in
or
or
push
dec
jae
and
inc
cmc
gs
jecxz
lea
jp
fsts
sbb
push
loope
sub
xor
daa
cld
pop
lret
or
clc
or
ds
or
cli
lahf
mov
in
std
jle
push
ljmp
cltd
cmc
mov
pop
rolb
je
ja
mov
ds
add
flds
push
mov
sar
jb
pop
cltd
addr16
lret
stos
cwtl
scas
jbe
cmpsb
sar
les
and
movsl
and
pop
test
xchg
sub
mov
fs
les
jne
cmp
movsb
xor
and
lea
sub
jo
adc
fwait
sub
shlb
cld
movsb
cwtl
xorl
xchg
sub
in
push
sarb
imul
xchg
cltd
mov
bound
and
stos
xchg
xchg
pop
sbb
or
pop
xlat
pop
iret
aad
sahf
fucom
addr16
push
cld
xor
nop
mov
adc
mov
sub
or
fnstcw
shlb
push
dec
aad
or
jb
jns
mov
rcr
adc
sub
mov
loop
add
push
lea
movsl
hlt
jns,pn
out
popa
sbb
icebp
adc
adc
divb
jnp
xor
arpl
xchg
mov
jnp
loopne
mov
push
imul
insl
bound
push
mov
xchg
std
xlat
arpl
popf
in
aas
xchg
mov
mov
sub
mov
pop
shl
cmc
out
cmpsb
sub
aad
adc
pusha
adc
add
add
aam
mov
cmp
shl
outsl
jp
test
pop
shlb
push
sti
dec
dec
jle
fdiv
js
push
repnz
jbe
adc
in
jg
xor
adcl
hlt
push
imul
stc
xchg
in
xor
inc
scas
cmp
scas
mov
pop
push
sahf
mov
outsb
mov
xor
insb
jl
shll
xor
pusha
es
and
outsb
sbb
jbe
mov
adc
mov
hlt
dec
mov
xor
cmpl
push
pop
xor
xchg
adc
mov
jb
dec
xor
adc
in
xchg
xchg
cmp
in
mov
and
mov
cld
iret
gs
scas
sub
xchg
or
push
pop
inc
jp
lret
push
adc
test
mov
loope
test
xchg
cmp
jle
sbb
imul
cmp
push
insl
xor
and
mov
cmpsb
mov
xor
hlt
sbb
push
push
cmc
jmp
std
pop
mov
lret
shlb
xor
icebp
popf
or
out
push
je
les
sbbl
movsb
xchg
lret
lcall
mov
xchg
adc
or
jae
push
scas
jae
outsl
sbb
lods
dec
stos
lods
mov
jbe
mov
out
ss
xchg
xchg
es
inc
inc
add
outsl
dec
push
mov
scas
jnp
nop
es
fisubrl
mov
pop
adc
jo
inc
mov
mov
mov
sbb
ss
lahf
or
loopne
hlt
fdivrs
xor
inc
addr16
stos
pop
xchg
xchg
je
xchg
mov
fisubrs
sub
and
arpl
lods
leave
stos
cmpsl
inc
lock
xchg
adc
mov
mov
test
insb
or
in
jmp
or
dec
icebp
pop
or
imul
inc
pop
pop
push
lock
dec
add
sbb
xchg
push
mov
cmp
insl
fs
stos
xlat
cmp
jo
decb
xlat
movsl
pusha
add
les
xor
jmp
jbe
icebp
out
sub
or
jne
inc
xchg
fs
imul
in
scas
outsb
add
jg
push
pop
jno
sbb
adc
mov
mov
nop
adc
and
and
ja
pop
or
jbe
out
iret
sbb
jb
dec
lret
sti
sbb
enter
fistpll
insl
push
sar
pushf
outsl
mov
stos
adc
leave
cmpsl
sub
sti
push
push
fdiv
xor
mov
enter
arpl
ficompl
or
lret
lret
lret
pusha
xor
push
adc
test
adc
jo
sbb
test
xor
mov
mov
adc
out
cmp
jle
or
jb
sbb
inc
or
add
mov
add
sub
and
enter
fists
in
arpl
mov
inc
sbb
lcall
addr16
mov
into
sbb
push
xlat
xor
test
ficompl
sub
sbb
outsb
jge
dec
clc
sbb
mov
xor
inc
lds
icebp
add
shlb
fdivrs
daa
inc
add
dec
inc
pop
rcll
fs
inc
aad
imul
cmpb
dec
inc
sub
cld
push
loop
dec
mov
movsl
and
adc
rcrl
test
sti
inc
inc
inc
incb
jnp
jecxz
insl
add
push
add
dec
and
push
aas
xchg
fildl
mov
out
movsb
movsb
pop
shll
inc
repz
inc
cmpsl
jne
stos
jmp
rolb
dec
adc
cmp
rcrb
xchg
popa
pushf
cmp
cmp
push
pop
enter
cwtl
bnd
das
sbb
add
sub
imul
xor
mov
adc
sbb
js
incl
jo
ret
ret
add
shlb
jg
jbe
ja
mov
jne
and
mov
mov
test
nop
xchg
or
or
out
mov
xor
out
jbe
mov
or
cmp
out
js
test
xchg
inc
push
xchg
xlat
filds
jp
adc
leave
cmp
aas
ja
pop
and
mov
shrb
stos
out
aad
call
jnp
test
iret
mov
jecxz
mov
mov
je
jmp
leave
add
mov
dec
pop
out
cmp
aaa
sahf
shrb
jl
nop
dec
aas
fs
test
xor
mov
and
pop
mov
push
loop
cltd
adc
dec
or
in
popf
test
cwtl
or
mov
add
insb
mov
xor
lock
or
outsl
push
xchg
dec
xor
test
jno
xchg
sub
or
call
mov
sub
jb
adc
mov
xchg
imul
mov
mov
bound
push
fdivl
jnp
divb
push
or
pop
add
add
mov
fsubrs
loopne
popa
and
inc
cmp
fmuls
mov
mov
insl
insl
movsb
pop
and
mov
xchg
ss
jecxz
dec
lds
push
cmp
cmp
imul
dec
or
cmp
cmpsl
adc
push
push
iret
push
ds
mov
js
cmp
cmp
push
cli
xor
jo
insb
adc
jmp
cmp
js
iret
xor
xchg
cmp
aaa
mov
call
push
aas
or
push
repnz
cmp
inc
or
xchg
mov
dec
cmpsl
in
cli
ret
push
push
fcmovnbe
sbb
icebp
sub
mov
pop
adc
mov
jge
dec
dec
icebp
sbb
cli
push
int3
xor
cs
pusha
divl
xor
incb
push
cmp
sbb
aad
cmpsb
cmpl
int
and
shr
inc
in
icebp
xor
adc
lcall
mov
gs
scas
lret
jae
jl
cs
jne
cld
mov
push
ror
jo
jmp
jns
stc
stc
push
cmp
out
pop
pop
lods
and
mov
fidivrs
leave
fbld
rcll
sbb
adc
mov
fistl
mov
imul
sbb
aaa
ja
mov
lret
mov
sub
pop
push
sub
jno
icebp
sub
jae
lods
jno
ss
fsubs
adcl
dec
gs
out
add
mov
cmc
daa
push
scas
test
add
loopne
cmpl
pop
call
push
mov
jb
inc
adc
sub
fs
and
gs
dec
cmpsb
inc
addb
add
in
ret
mov
push
jle
imul
fbld
hlt
dec
cs
sub
xor
sub
xchg
mov
mov
push
fadds
ljmp
ljmp
arpl
testl
pop
ds
jle
inc
repz
sub
mov
std
stc
lret
xor
stos
or
add
jno
jmp
test
pushf
mov
jp
test
aam
pop
sbb
pop
jp
mov
adc
in
aad
shrl
negl
movsl
xchg
dec
stc
dec
inc
hlt
jae
stc
jge
mov
xchg
and
mov
clc
shlb
or
xlat
dec
sub
or
sbb
or
js
stc
outsl
inc
aad
ljmp
mov
bts
test
mov
push
pop
mov
jns
push
push
jno
cwtl
sub
push
dec
xor
mov
sbb
push
sub
sbb
add
pop
dec
cld
lods
out
adc
dec
ljmp
in
lea
in
sub
movsb
movsb
cli
repnz
out
int3
xchg
inc
or
mov
adc
loopne
mov
mov
mov
test
push
mov
sbb
cmp
push
outsl
xor
sahf
inc
sti
xor
cmpsb
inc
pmuludq
sub
pop
sub
sarl
imul
in
fsubrl
sahf
jmp
dec
repnz
sarl
or
das
pop
lock
push
jno
gs
pop
test
outsb
and
mov
add
dec
sahf
cmp
mov
in
dec
stos
pusha
loope
mov
cli
mov
std
outsb
or
addr16
cmp
xor
sub
adc
fdivl
or
out
idivb
subb
sbb
dec
shll
hlt
dec
addr16
test
rorb
mov
or
sub
mov
sbb
mov
dec
jp
mov
xor
loope
mov
int3
popf
xor
push
and
pop
jg
js
push
cmc
jbe
rcl
add
stc
loope
xchg
shll
gs
add
or
jg
mov
stc
and
pusha
ret
or
call
and
dec
pop
fidivrl
pop
lret
dec
gs
push
adc
pop
pop
sbb
repz
repnz
aas
xchg
xorb
push
jmp
xor
dec
push
xor
hlt
loope
loopne
jns
loope
fists
cltd
cmc
jae
shll
and
cmp
ljmp
mov
xor
icebp
pop
mov
iret
lods
dec
ds
std
pop
jb
mov
data16
test
lods
lds
jmp
pop
stc
test
add
sub
popa
sbb
mov
push
nop
iret
lcall
xchg
cltd
in
pop
lret
pop
jae
add
lcall
xor
or
loope
sti
aas
push
inc
jns
push
into
lods
pop
mov
rorl
xor
cwtl
hlt
jp
fisttpl
jmp
mov
push
sbb
rcrb
xor
mov
pop
add
mov
fcompl
out
aas
rcr
dec
cmc
sti
in
addl
or
fs
adc
pop
mov
movsb
fxtract
push
mov
cmp
add
popa
rcr
push
fstpl
or
jmp
lret
mov
sbb
xor
ret
cltd
sub
fisttps
insb
icebp
cld
out
fstpl
test
pop
in
mov
stc
sbb
jno
jle
dec
jle
shl
jno
in
out
and
pop
sub
xchg
pop
push
outsb
fwait
movsl
pop
sbb
ret
mov
push
popf
fstps
pop
lds
lret
imul
sbb
ficompl
or
test
fisubrs
sub
cmpsl
pop
movsb
pop
outsb
adc
adc
inc
inc
mov
mov
outsb
cwtl
lea
dec
sub
xlat
jo
push
pop
dec
sub
mov
sub
stc
mov
mov
out
mov
push
fcoml
into
popf
mov
mov
dec
cmp
imul
xor
mov
mov
out
test
cld
mov
data16
inc
in
dec
add
jns
cmp
arpl
cltd
dec
sarb
inc
idivb
bound
jns
adc
sub
pop
jbe
xchg
sbb
daa
jo
cltd
sete
mov
sti
int
addr16
lds
cmp
add
mov
lock
cvtdq2ps
outsl
xchg
loop
cltd
ljmp
cmc
sti
push
xlat
mov
push
inc
dec
dec
pop
test
mov
or
mov
push
mov
mov
imul
push
xchg
or
push
push
pop
xchg
lret
gs
fidivrl
jp
imul
cli
in
imul
inc
out
inc
lock
popa
push
mov
cwtl
daa
mov
sbb
jnp
lahf
or
inc
int
jge
adc
pop
mov
sub
push
jae
jnp
enter
jmp
mov
mov
mov
imul
jge
arpl
mov
push
test
popa
into
call
popf
ds
xchg
fst
adc
mov
mov
fwait
mov
mov
xchg
xchg
xchg
dec
sbb
test
lahf
pop
adc
mov
and
pop
push
push
mov
sub
or
jmp
push
pop
and
pusha
xor
shrl
add
sub
inc
jnp
dec
iret
in
jecxz
mov
cltd
gs
xchg
pushf
dec
push
shll
sbb
xchg
test
jae
sub
mov
nop
or
push
xor
stos
push
aas
xor
popa
adc
clc
loop
nop
mov
icebp
xchg
popl
lock
fs
icebp
pusha
movsb
cmpsl
movl
xchg
fldcw
mull
sbb
pop
scas
sti
xchg
mov
jp
inc
or
pop
lock
mov
sbb
jg
hlt
pop
popa
xlat
ja
in
mov
lret
sti
sti
jo
imul
ljmp
gs
sub
lds
lret
ffreep
cs
data16
shl
cmp
cltd
ret
dec
cmpsl
inc
push
add
cmpsb
repz
mov
push
lock
inc
mov
stos
jl
jns
enter
xchg
mov
vrsqrtss
pop
add
xchg
sbb
js
arpl
xlat
dec
mov
sbb
push
mov
rcrl
jge
push
add
sahf
and
dec
movsl
test
test
cmc
or
popf
rclb
cmp
mov
out
lods
dec
cli
je
lahf
mov
jl
push
shl
push
rolb
mov
sub
mov
mov
inc
ss
push
out
mov
cli
and
cli
push
cmovg
ljmp
pop
movsb
loope
cwtl
nop
sbbl
cmp
fwait
dec
dec
inc
pop
mov
outsl
dec
sub
movb
push
sbb
add
xor
hlt
fnsave
imul
lret
mov
icebp
xor
in
loope
pop
fldl
cmp
sbb
ret
mov
or
fsubrl
into
lock
or
mov
daa
iret
or
adc
push
mov
imul
imulb
sub
add
cs
and
in
add
mov
int3
cmp
inc
fdivs
xbegin
dec
pushf
rorl
sub
cmp
cmp
aad
sub
adc
cmp
dec
fisubrl
mov
mov
fiadds
call
push
push
jnp
das
fwait
xchg
lds
pop
cs
test
lds
pushf
in
insb
xor
jns
mov
jbe
xchg
test
inc
add
lock
push
dec
or
mov
rorb
add
and
xor
mov
mov
ds
xor
xchg
gs
xchg
sar
es
in
jmp
dec
sub
and
popa
jl
test
sbb
dec
test
mov
pop
inc
pop
push
into
lahf
aad
je
divl
mov
movsl
pushl
in
xchg
or
mov
cmp
scas
add
lret
and
and
adc
dec
sbb
dec
ljmp
dec
sub
cmp
das
out
mov
cmp
push
popf
adc
leave
lds
addr16
xchg
in
mov
leave
jb
mov
or
cmp
adc
fisubl
pop
sub
jle,pt
ss
jb
xchg
testl
adc
jg
out
das
adc
add
loop
gs
jmp
dec
mov
jge
ret
leave
dec
ja
pop
cmp
cmp
mov
pushf
add
push
bswap
cmp
pop
mov
xor
je
sub
rorb
xor
test
sub
dec
xor
inc
repz
and
jg
andb
iret
mov
lea
popa
lods
fstp
int3
or
mov
out
dec
xchg
sar
adcb
ljmp
jnp
inc
sbb
in
mov
rol
xor
xchg
dec
adc
mov
and
cltd
rolb
or
mov
sub
push
xchg
mov
popa
inc
push
mov
sbb
repz
mov
nop
cmp
pop
push
lret
adc
jp
negl
fdivs
sbb
lret
pop
push
mov
xor
push
jp
arpl
test
in
je
out
loop
pop
lock
enter
ja
mov
inc
inc
sbb
ret
sub
and
test
sub
fsubrp
mov
outsl
repnz
mov
mov
lea
call
nop
xor
jle
outsb
adc
xlat
push
xchg
fnstenv
inc
jns
sub
add
ja
adc
mov
cltd
cltd
stos
leave
mov
arpl
and
add
and
cmc
mov
push
xor
dec
enter
push
jae
or
jmp
sbb
lods
popa
lock
mov
or
flds
mov
lods
add
jnp
icebp
popf
shlb
fldenv
std
popf
push
es
xor
rcl
data16
sbb
enter
scas
gs
ret
and
jecxz
pop
scas
imul
or
cmc
inc
pop
mov
iret
jns
movsb
sub
mov
adc
jle
pop
cmpsl
inc
jle
xchg
stos
xchg
pusha
and
mov
cmp
cli
xor
lods
sbb
mov
dec
xchg
sub
pusha
mov
aas
pop
xor
inc
sti
arpl
out
sub
push
push
shrb
les
mov
repz
push
outsb
adc
fists
push
cltd
andl
sub
pop
mov
sbb
and
push
mov
xlat
cmp
push
sub
jo
xchg
mov
push
ljmp
pop
test
pop
sub
adc
lcall
stc
aad
inc
inc
lock
sbb
cmpb
loope
jne
or
data16
subl
out
sbb
and
pop
xor
in
ret
push
xchg
pop
push
clc
mov
pop
or
mov
cmc
rcrb
testl
dec
js
enter
imul
inc
loopne
testl
test
lret
xor
test
push
cmp
repnz
test
sub
pop
cmp
push
pop
fwait
push
loope
adc
movsb
mov
hlt
cld
iret
mov
icebp
jle
into
cli
fwait
jg
mov
jns
jle
mov
dec
insl
hlt
cwtl
cmpsl
scas
dec
push
fdivl
imul
lcall
out
mov
push
mov
lret
push
adc
out
add
cld
jo
push
dec
stos
shll
inc
popa
out
xchg
pop
or
and
jle
out
and
fists
sub
sub
js
addl
test
xchg
push
enter
repz
xlat
test
movsb
sub
shll
add
pop
mov
jae
movsb
adc
xchg
lret
inc
jmp
jb
and
pop
add
lret
dec
adc
push
aad
add
test
mov
cmp
inc
ss
or
data16
and
rorl
pop
sub
or
js
mov
clc
cli
sbb
movsl
xchg
push
jg
imul
es
inc
fwait
cmpb
adc
aam
repnz
popl
hlt
push
ss
call
lods
sub
pop
out
test
mov
int3
insb
xchg
movsb
jb
and
push
jno
lock
fldt
rclb
aas
sub
shlb
push
mov
in
sbb
inc
js
push
mov
dec
xlat
mov
or
out
fists
dec
push
or
sbb
push
in
outsb
mov
into
clc
dec
loopne
bound
leave
pop
bound
and
adc
popf
popf
add
adcb
jbe
inc
mov
pushf
mov
lcall
and
cltd
jbe
js
int
pop
and
sub
cwtl
sub
rolb
insb
ficoml
daa
push
ret
imul
das
rcrb
outsl
cmp
icebp
outsb
pop
push
or
xor
orps
dec
jb
fldt
mov
push
push
insl
push
fsubrl
ret
std
out
test
dec
jns
mov
mov
cmp
in
dec
mov
or
mov
in
pop
push
jo
pop
in
imul
dec
movsl
icebp
or
icebp
lods
scas
sbb
in
inc
jns
stos
pop
mov
xor
mov
and
dec
jmp
fcmove
sbb
push
inc
mov
jae
cmp
dec
sti
push
clc
gs
and
lretw
mov
mov
push
mull
xchg
popf
aas
mov
cltd
lock
mov
push
adc
xchg
jnp
nop
sbb
aad
lret
pop
lret
scas
loopne
push
jb
sub
das
hlt
inc
ja
cli
ds
push
xchg
push
xchg
and
xchg
enter
movsb
inc
lcall
lahf
pop
dec
and
sub
ja
add
xchg
and
jno
xlat
mov
mov
mov
xchg
xor
js
push
push
cmc
mov
in
fbstp
sub
js
push
mov
mov
inc
dec
inc
sarb
or
add
sub
mov
icebp
lods
sbb
arpl
mov
repz
xor
lds
negl
cmpsl
or
sub
mov
out
adc
mov
les
xchg
xor
xor
test
stc
or
xlat
fwait
int
adc
xchg
popa
sbb
jno
jl
data16
aad
fdiv
lods
lret
dec
mov
inc
sub
mov
and
mov
sbb
dec
andb
push
scas
popf
mov
mov
dec
idivb
mov
add
mov
mov
xor
insb
movsb
or
jbe
popf
sub
adcl
enter
mov
stc
daa
xchg
mov
lea
xor
sub
aaa
fs
ds
sbb
mov
fwait
sti
enter
and
pop
xlat
shl
sti
sarl
adc
dec
mov
adc
cli
add
xchg
rorl
mov
push
lret
dec
mov
mov
lds
movsb
in
mov
arpl
mov
je
testl
mov
repz
cwtl
jecxz
fwait
push
bound
mov
out
or
add
mov
call
mov
lods
pop
andl
xor
clc
arpl
lcall
dec
mulb
mov
push
xchg
adc
sbbb
mov
mov
add
or
rolb
and
jmp
dec
xchg
in
andl
cmp
cmc
insl
testb
mov
ficompl
xchg
dec
sub
movsl
push
leave
divl
mov
outsb
ficomps
orb
fidivl
mov
and
xor
out
mov
fucom
es
sbb
pop
fidivrs
addr16
lcall
sbb
rclb
ds
lods
loop
xchg
loopne
in
mov
aam
or
aas
aaa
cmp
cmp
add
aaa
dec
cld
or
pusha
cwtl
sbb
and
and
jne
flds
mov
sbb
dec
mov
push
mov
or
dec
aas
in
mov
mov
shr
imull
icebp
outsl
cmp
jg
push
jp
mov
into
fnstenv
push
mov
cmpsl
xchg
push
dec
xchg
lods
ds
js
push
adc
movsl
in
ret
stos
xchg
out
dec
push
and
ljmp
and
or
es
bound
push
orl
sti
addr16
jo
out
leave
pop
dec
xor
sub
xlat
lods
sbb
inc
pop
scas
jle
js
mov
subb
or
sarb
mov
dec
jecxz
xchg
mov
mov
lods
and
push
xchg
push
bound
sub
cltd
aad
and
in
scas
je
and
mov
testl
pop
adc
addr16
jmp
sar
adc
push
sbb
in
inc
xchg
call
push
adc
andl
cmp
jmp
lahf
iret
push
out
mov
ret
push
sub
inc
out
mov
iret
bound
xchg
mov
xchg
fsubs
les
lret
cmp
movsl
outsl
imul
sbb
dec
fcmovnb
jg,pt
aam
jne
in
pop
xor
push
sub
inc
test
adc
jg
inc
fs
sub
adc
mov
mov
lods
movzwl
sbbb
sub
or
cld
mov
jmp
aaa
setae
inc
or
popl
push
xor
sub
mov
inc
mov
push
ja
cmpsl
mov
scas
idiv
imul
fstps
fst
cs
lock
shll
loop
pop
les
out
xchg
mov
add
call
mov
push
sub
mov
nop
adc
xor
jne
shl
test
lock
scas
mov
xchg
mov
inc
gs
pop
cmpsb
sub
addb
push
aaa
push
fsubrl
out
jg
dec
jb
and
notl
adc
imul
and
sbbb
shlb
cmp
and
movsl
xor
in
fstpl
pop
xchg
dec
or
faddl
and
mov
out
lahf
mov
push
cmp
sahf
nop
push
in
lahf
adc
sbb
cmp
ljmp
jecxz
mov
clc
xchg
lret
sbb
stc
mov
xchg
push
sub
mov
mov
fsubrs
ret
movsl
pop
adc
jnp
push
or
inc
or
xor
or
xor
dec
hlt
mov
add
push
jge
adc
aad
test
sahf
sti
add
mov
popf
inc
loopne
or
sub
mov
mov
and
push
cli
inc
or
js
xchg
mov
push
ja
add
aam
cmc
in
pop
mov
js
xchg
jno
mov
imul
and
insl
sahf
insl
xor
scas
mov
mov
cmp
std
std
push
sarb
lcall
leave
mov
lcall
loopne
add
addr16
sub
mov
das
lods
rorl
fnsave
jp
fs
in
or
repz
sbb
into
sub
loopne
mov
popa
xchg
jb
xor
add
xchg
xor
sahf
imul
imul
lods
push
push
xchg
ljmp
push
sub
push
mov
inc
push
inc
push
test
xchg
push
cmc
cmp
push
loope
leave
notb
or
and
cmp
xlat
xchg
ret
shr
mov
and
sub
fs
xchg
in
sub
out
or
lret
inc
mov
adc
sti
push
out
std
pop
mov
dec
aas
mov
sub
lock
jne
shrl
fistl
add
sbb
ficoms
ss
iret
sbb
rol
mov
fs
pop
xor
into
mov
aas
mov
pinsrw
movsb
dec
ret
aaa
shl
xchg
push
xor
lret
dec
aam
test
repz
fwait
cli
ret
ret
push
pop
jl
popa
xchg
addr16
fsubl
rcll
cld
or
mov
pop
sub
js
inc
shl
arpl
mov
arpl
ja
push
inc
sbb
sahf
enter
ret
mov
dec
popf
jno
mov
aas
xor
pusha
std
mov
cmp
sub
dec
push
sub
xor
cmc
insl
and
test
mov
mov
jmp
cmp
pop
test
and
or
lea
dec
out
push
mov
lock
mov
ljmp
mov
pushf
inc
sub
clc
movsl
sub
mov
hlt
adc
jne
mov
inc
sbb
jecxz
dec
pushf
jmp
jp
data16
mov
dec
mov
fwait
hlt
lret
adc
sahf
inc
add
pop
clc
cmp
in
push
fiaddl
mov
movl
pop
sbb
repz
aam
ss
inc
cltd
mov
clc
rcll
dec
in
mov
rolb
popa
sbb
push
push
pop
dec
sub
cmc
stc
lahf
or
push
lret
and
rcrb
or
or
add
das
fmul
or
enter
lcall
nop
lea
fmul
push
insb
pop
scas
fimuls
mov
adc
cli
mov
lcall
ljmp
xchg
cmp
xlat
or
out
test
mov
outsb
jb
ret
daa
jmp
inc
add
insb
jne
lcall
rcrb
gs
lret
push
push
push
out
push
in
pusha
es
stc
xor
stos
mov
push
mov
or
mov
movsl
mov
dec
rclb
outsl
or
fimuls
leave
or
dec
inc
mov
test
push
add
out
ljmp
mov
in
std
stc
pop
stos
adc
xchg
aam
sbb
sub
pop
sti
lods
xchg
in
cld
pop
cwtl
mov
xlat
es
cmp
cwtl
mov
sub
aas
cmp
inc
or
cmp
sub
push
dec
sub
sbb
adcl
and
lcall
loop
in
push
mov
add
fs
call
push
sbb
mov
pop
jnp
mov
inc
adc
inc
mov
xor
inc
sbb
leave
idivb
xchg
out
cmp
sbb
sbb
not
rol
cld
aam
fistpll
jns
mov
sbb
push
les
test
cmovbe
insb
and
mov
pop
or
shll
testb
jg
mov
adc
and
pop
clc
movsb
push
lock
xlat
pop
sub
into
push
into
sbb
mov
or
jno
inc
xor
ffreep
push
insb
dec
mov
jns
enter
add
cmp
pop
mov
pop
cmp
adc
pop
xchg
and
cmp
jle
out
cmpsl
dec
xchg
pop
cli
dec
cmp
ja
mov
pop
imul
jno
mov
popa
daa
pop
pop
jo
jae
pop
in
xchg
dec
loop
in
sti
loope
pop
bound
lods
sub
jno
mov
xor
dec
in
movsb
fcomps
in
mov
push
aad
ds
cmpsb
mulb
loop
sbb
xchg
and
mov
fildl
loop
test
sbb
jbe
pop
iret
rolb
cmpsb
aam
rorl
sahf
mov
adc
rol
shlb
jb
pop
xchg
rcrl
adc
cmp
imul
pop
aad
jns
or
jae
negl
cwtl
std
adc
cli
pop
orb
rcrb
push
push
fcom
test
dec
add
ret
pop
sub
inc
sbb
push
mov
in
dec
jns
mov
leave
adc
pop
mov
cwtl
int3
mov
and
faddl
or
mov
mov
loop
bound
test
ss
and
incb
sahf
sbb
jnp
fsubrs
jb
in
mov
push
or
incl
jecxz
jnp
movsb
jg
stos
mov
std
inc
shlb
mov
ds
mov
dec
out
scas
mov
aad
xor
push
and
or
cwtl
shrl
inc
jb
push
fcmovb
xchg
fbstp
movsl
imul
fldenv
sub
dec
jnp
inc
ljmp
sub
ljmp
jl
sar
jne
int3
jp
xor
adc
dec
movsb
pop
xor
adc
fcomip
stc
sub
pushw
pop
and
xchg
das
ret
sub
mov
inc
out
imulb
js
daa
movsb
pop
jb
mov
data16
add
or
aas
movsl
mov
sub
pop
out
xchg
in
jg
sub
inc
pop
cmp
xchg
clc
add
decb
mov
scas
popf
adc
imul
gs
pop
mov
or
cmp
daa
xor
sbb
inc
cmp
push
xor
jl
lods
cwtl
jbe
insb
cs
fsubrs
add
sub
js
cmp
mov
xor
push
inc
dec
dec
fidivrl
or
cmc
add
ds
xchg
rcrb
and
mov
xchg
mov
push
inc
dec
aam
push
dec
insl
or
imul
daa
push
jmp
sarl
xchg
testl
xchg
xor
sbb
mov
mov
lcall
or
nop
sub
lods
mov
mov
push
inc
enter
outsb
sbb
fs
inc
in
cld
cmc
jbe
pop
into
les
pop
arpl
or
jno
dec
pushf
mov
mov
mov
ret
sbb
inc
fsubl
imul
jae
dec
movsb
in
mov
xchg
push
sarl
push
andb
or
pop
popa
pop
in
lods
or
mov
fisubrs
sti
adc
lods
js
adc
stos
dec
addl
cmp
mov
mov
push
jmp
pop
out
out
push
dec
jmp
cmp
popa
cmpsl
mov
pusha
stos
pushf
dec
outsb
pop
xchg
xor
pushf
dec
jo
jmp
fwait
sub
jns
lods
jbe
adc
rorb
pop
hlt
call
mov
std
adc
adc
cmp
inc
rorb
sar
xor
loope
push
or
cmpsl
pushf
sbb
negb
jmp
dec
js
hlt
mov
xchg
xchg
in
aad
xchg
jo
insb
dec
jb
push
sub
jno
inc
dec
ret
push
mov
fcomp
sub
les
shrb
jbe
loop
sbb
fisubl
sub
and
roll
pop
add
es
inc
lret
cmpsb
and
clc
mov
in
push
insb
mov
aaa
jne
pop
call
scas
imul
lods
adcl
ljmp
ds
out
and
ret
fidivl
loop
rcl
push
fcom
out
pop
cmp
add
ja
cmp
in
test
push
jmp
inc
cmp
xor
xchg
icebp
jae
lea
sbb
sbb
adcl
mov
mov
test
mov
sbb
xor
stos
int
loop
mov
iret
testl
stc
outsl
xchg
adc
imul
add
repnz
sti
daa
mov
push
mov
sub
jb
cmpsb
mov
mov
js
mov
outsl
lods
push
adc
inc
js
sub
fs
lods
sub
fnsave
movsl
fdivs
xchg
adc
add
mov
jns
mov
jecxz
es
push
inc
cmc
test
imul
mov
mov
aas
mov
pop
movsb
xor
fmulp
sub
sub
rolb
pop
jae
stc
or
clc
or
inc
pop
idivl
add
push
add
lahf
cmpsl
addr16
push
and
and
or
dec
cld
mov
jno
adc
lea
out
mov
js
popf
push
aam
xor
push
mov
test
add
jl
pop
push
push
cmp
mov
ljmp
insl
jae
inc
fidivl
mov
jg
and
dec
iret
mov
cmpsb
xor
fstps
stos
insl
dec
cmpb
jnp
xchg
daa
pushf
mov
shll
shll
mov
in
faddl
fsub
mov
in
sbb
out
add
enter
loopne
pop
cmp
out
push
scas
cmpsl
add
enter
test
cwtl
xchg
arpl
jmp
pop
pop
add
inc
jnp
leave
xor
mov
roll
mov
scas
jge
out
sub
dec
in
pushw
sub
push
mov
ljmp
jae
in
push
fsubs
xor
inc
lds
jl
jmp
lods
mov
ja
data16
aad
inc
iret
and
jecxz
sbb
adc
sub
icebp
dec
leave
ljmp
sar
mov
mov
sub
sub
and
mov
adc
cmc
mov
add
dec
mov
test
mov
sti
les
pop
pop
push
cmp
adc
sub
mov
xchg
out
mov
dec
int3
pop
xchg
or
sbb
sbb
or
xchg
push
stc
ret
aam
inc
and
jns
jmp
in
lods
sbb
inc
repz
or
lahf
rcr
rcr
and
ja
negl
jnp
cmp
cmp
xor
cld
enter
push
loop
out
mov
xor
ret
push
clc
nop
xor
imul
inc
mov
test
pop
mov
int
movsl
out
mov
dec
mov
cltd
cmpsl
in
jnp
leave
adcb
xor
and
lock
mov
jns
aaa
xchg
jo
popf
inc
jne
stos
or
mull
or
xchg
icebp
loope
movsb
mulb
je
cwtl
fsub
sbb
pop
ret
repz
mov
inc
inc
push
ja
fbstp
push
or
pop
aas
inc
xlat
ja
dec
cmp
mov
in
in
enter
add
fcompl
inc
fsubl
pop
push
aad
in
test
insb
mov
pushw
cmc
inc
mov
out
aaa
js
jmp
mul
rcrl
mov
rolb
mov
arpl
add
sahf
jp
pop
mov
iret
xchg
inc
dec
sub
fisubl
mov
dec
hlt
shll
stos
enter
add
cmpsl
stos
push
add
repz
mov
cmc
out
loop
push
divl
add
div
clc
mov
or
pop
jge
add
pop
mov
push
cwtl
mov
cmp
outsb
sub
adc
xchg
ret
xchg
dec
ss
imul
or
addb
mov
adc
iret
into
in
lea
mov
pop
jmp
in
in
adc
adc
or
jg
or
loopne
adcb
aas
dec
mov
push
out
in
loope
notl
add
ret
out
cmp
scas
jp
rcrl
and
push
cli
xchg
pop
sub
xchg
ja
notl
cmp
ret
sub
mov
lds
in
clc
sbb
push
mov
test
cvtpi2ps
push
data16
out
or
jmp
movsb
movsl
pop
and
pusha
push
mov
jg
out
dec
aaa
out
adc
rcll
push
test
cltd
out
std
sti
adc
cmpsb
jmp
cmp
adc
xlat
hlt
lds
and
sbb
inc
lock
inc
cltd
sbb
fisubrs
fcmovnbe
clc
sub
lods
sti
xchg
jae
fxch
test
jge
mov
dec
jne
shr
pop
cli
inc
pop
cmp
dec
mov
lea
mov
test
inc
xchg
mov
pop
cmc
jmp
dec
push
mov
push
inc
fldcw
cld
mov
and
pop
enter
sub
out
and
into
or
cmp
into
sub
mov
fcomi
cli
xchg
xchg
mov
or
push
outsb
icebp
and
lds
xchg
lret
xchg
push
dec
or
lcall
addr16
out
ss
adc
dec
insl
xlat
xor
jmp
inc
xchg
iret
test
mov
adc
adc
jp
mov
loop
dec
lock
lret
ds
push
cmp
and
jns
fwait
out
rcr
cmp
pop
adc
pop
or
xor
inc
and
out
or
dec
jbe
ljmp
cmp
add
sbb
pop
divl
dec
or
int3
insb
push
cmp
call
pop
dec
push
fistpl
in
fisubrl
sahf
jmp
mov
arpl
jl
stc
and
int
rcll
jmp
or
add
mov
inc
lcall
sbb
mov
pop
add
into
lret
push
fwait
incl
repz
aad
inc
cld
inc
loope
mov
repz
js
sbb
add
mov
or
in
pop
cwtl
mov
lds
add
addr16
cld
inc
gs
mov
insb
iret
iretw
out
and
cs
cld
lcall
repnz
inc
sbb
and
iret
sbb
je
aad
fistl
push
bound
fwait
mov
mov
ror
lcall
and
xor
fbstp
mov
imul
adc
test
or
push
jae
in
fbstp
mov
sub
jns
and
ret
pop
or
push
mov
in
enter
inc
push
lret
fildl
inc
scas
adcl
leave
ret
les
xor
test
mov
and
dec
add
xchg
jno
das
loop
and
ss
lds
test
mov
ret
sub
inc
roll
out
xchg
pop
or
test
outsl
andb
cld
xor
lret
repnz
add
mov
xchg
out
shlb
int3
jo
fbstp
xor
insl
sub
mov
lcall
push
and
ljmp
lcall
repnz
jg
xor
mov
inc
les
push
mov
data16
loopne
dec
daa
lret
rcl
xchg
adc
cmp
adc
pop
fwait
sbb
mov
cmc
xor
dec
mov
add
in
test
gs
xchg
cmp
mov
push
xchg
cmpsl
test
sti
jmp
outsb
dec
xchg
mov
jb
addb
cmp
push
or
fmuls
mov
popf
shr
jg
add
jb
dec
mov
add
mov
sbb
cmpsb
mov
in
ror
imul
push
daa
outsl
adc
jbe
shlb
test
lcall
lods
das
xchg
jecxz
mov
cmpsb
ja
data16
mov
test
loop
jg
adc
jo
add
mov
cld
adc
mov
scas
test
ja
les
shl
dec
addr16
fists
iret
fst
push
sahf
scas
and
and
inc
adc
ret
mov
jae
jno
dec
jle
push
pusha
aaa
test
mov
adc
mov
push
pusha
pop
push
std
dec
jne
incl
mov
jecxz
push
push
inc
and
pop
test
dec
mov
cmpsb
push
adc
xchg
int3
fiadds
pop
inc
xchg
fcoms
pusha
adc
inc
jo
sahf
mov
dec
add
fwait
call
mov
inc
jmp
jns
dec
mov
hlt
sub
ret
mov
je
or
das
adc
pop
mov
test
stos
mov
std
mov
es
xchg
in
sbb
push
mov
rcr
stos
push
push
mov
movsb
and
pop
jbe
add
xor
aam
inc
sbb
int3
xchg
repnz
and
adc
gs
dec
test
jo
push
outsl
sbb
cs
push
mov
cld
cltd
xchg
lahf
and
mov
imul
sbb
cmp
daa
or
mov
mov
add
mov
push
push
xchg
pop
xchg
mov
sbb
cmp
rorb
rcrl
pop
jp
sbb
or
das
jnp
fadds
sbb
imul
and
call
pop
cmp
mov
outsl
mov
mov
sub
sub
push
adc
cmp
push
repz
pop
push
mov
sbb
ljmp
mov
and
mov
pop
iret
int
mov
xor
cld
cmpsl
sysexit
fists
addr16
mov
paddusw
mov
pop
sub
inc
xor
cmp
sub
mov
mov
mov
in
out
xchg
cwtl
ss
push
mov
pop
or
sub
pop
jg
cmp
std
shl
inc
sub
pop
ds
aas
push
lret
xor
mov
loopne
dec
loop
and
and
popa
lea
xor
fsts
sub
mov
sbb
enter
sub
popa
sbb
mov
ret
dec
mov
xchg
or
xorb
inc
mov
loopne
push
dec
std
aam
or
adc
add
inc
inc
pusha
roll
out
xor
push
push
and
sub
mov
js
jno
mov
xor
ljmp
xor
push
xchg
jge
xor
cmpsb
shrl
dec
mov
clc
shrd
insb
push
ljmp
pop
mov
call
adc
pop
dec
test
scas
jp
sub
dec
or
jl
add
iret
ss
or
es
pop
push
add
imul
mov
das
sub
xchg
jl
shrl
push
sub
hlt
or
arpl
inc
scas
mov
addr16
rclb
ret
cwtl
frstor
shr
sbb
lods
xorb
arpl
lock
xlat
insb
mov
xor
and
repz
das
jo
or
xchg
stc
out
movsb
push
in
push
and
xchg
sbb
les
cmpsl
cmp
or
jle
int
movsb
fwait
sub
decb
adc
insb
add
fs
dec
pop
popl
insl
push
pop
lods
push
dec
push
adc
mov
mov
lret
inc
pop
outsb
mov
in
fs
std
dec
fisubrl
cmp
mov
std
insl
popa
aam
mov
xor
push
mov
lret
push
xlat
lcall
cmpsb
mov
fcomps
mov
adc
and
jo
loopne
xor
lahf
aas
hlt
jno
jbe
cmp
push
pop
movsb
pop
or
mov
cmp
mov
adc
clc
std
out
push
sub
dec
push
sub
mov
cli
and
jnp
out
jg
lret
in
inc
mov
xor
sbb
in
out
idiv
stc
xor
cmp
cmc
mov
pop
mov
stc
jo
imul
mov
sahf
ret
lds
xchg
mov
ljmp
pop
xor
add
adc
das
andl
adc
mov
jmp
stos
stc
or
pop
and
mov
ja
outsl
loopne
dec
cltd
out
test
pop
test
xchg
jne
movsl
jnp
sub
daa
jb
shll
cld
ret
pop
out
loop
sbb
xchg
mov
enter
loopne
es
andb
ljmp
shll
lock
push
ljmp
enter
les
bound
fcomps
cwtl
adc
pop
mov
test
push
mov
mov
xor
pop
inc
enter
movsb
insl
sahf
mov
mov
mov
out
pop
stos
mov
scas
cli
add
not
jg
inc
sub
mov
cwtl
rorl
sub
iret
rorl
mov
mov
adc
and
iret
jnp
stc
xor
notb
rorb
rcrl
std
pop
sbb
or
gs
repz
arpl
dec
movsl
push
aam
mov
inc
jl
mov
xchg
popf
ret
xor
fnstsw
jmp
push
mov
daa
mov
push
aas
xor
sub
jp
and
neg
leave
xchg
andb
cld
adc
cltd
sarl
in
das
lock
mov
dec
sub
cli
push
mov
xchg
pop
es
push
addl
scas
stos
iret
adc
mov
push
iret
ja
jg
test
jg
push
in
fistl
repnz
daa
sbb
fxam
pop
mov
push
out
fldenv
roll
dec
push
cmpl
sti
adc
add
cmp
sti
push
sbb
xor
or
mov
cmp
stc
movsb
dec
mov
lret
and
or
outsb
mov
scas
pop
dec
out
mov
out
jnp
fdivs
shr
adc
popw
lahf
icebp
inc
adc
inc
xor
add
xchg
xchg
push
lret
inc
ret
cmp
mov
dec
mov
test
adc
mov
jg
mov
arpl
xchg
dec
loop
lret
icebp
leave
rcll
jne
lret
cmovnp
cmp
imul
cmp
lea
mov
jle
arpl
inc
nop
inc
mov
stc
push
daa
push
loop
out
loopne
cltd
push
aas
lods
lret
aam
xchg
mov
pop
cmp
and
faddl
push
pop
xlat
addr16
stos
jno
fadds
ds
add
xchg
test
push
or
pop
mull
jne
subb
lcall
xor
lds
pop
push
sub
xchg
lahf
dec
jecxz
decl
out
cs
xchg
inc
scas
xor
xchg
add
jno
add
insb
aad
xchg
adc
inc
mov
mov
repz
or
into
cmc
imul
push
lahf
sub
pop
mov
xchg
test
icebp
daa
mov
lcall
or
filds
sbb
hlt
or
xchg
pop
pop
pop
clc
sbb
nop
or
clc
xor
pop
sbb
adc
cmp
stos
jmp
iret
push
les
aad
adc
adc
xchg
dec
cli
cmp
dec
dec
mov
adc
sbb
insl
stos
leave
dec
inc
mov
orb
fwait
ljmp
mov
mov
pop
int
xchg
fidivs
out
or
loopne
mov
adc
mov
fs
mov
ss
cli
enter
popf
testb
shll
popf
push
outsl
xor
pop
xchg
pop
mov
pop
jg
test
sbb
int
into
cmp
ret
aad
mov
les
push
and
cld
test
movl
bnd
xchg
cmp
ds
aad
shll
sbb
pop
jle
mov
jno
adc
push
je
dec
pop
stos
push
mov
daa
inc
jecxz
or
lret
fwait
enter
testl
add
xchg
sub
push
mov
dec
jge
and
loopne
out
pop
pop
or
pop
pop
xor
jecxz
cwtl
sbb
mov
cmp
pop
mov
lret
mov
ds
mov
xchg
cmc
aaa
inc
push
pop
ja
stos
insb
mov
gs
mov
movsl
aaa
cmp
jecxz
clc
in
ret
mov
rclb
xor
sub
xchg
push
dec
push
outsl
test
out
rcr
sub
adc
xchg
mov
mov
stos
test
fcmovnu
stos
pop
call
sub
xorl
fisttpl
mov
mov
or
in
xchg
dec
bound
pop
xor
xchg
repz
or
addr16
inc
mov
pop
pop
bound
filds
and
push
aad
push
cmp
adc
clc
lret
cs
repz
test
and
add
xor
jbe
pusha
sub
in
xchg
mov
out
sbb
test
ror
and
ja
adc
ss
push
repz
fisttps
test
xchg
add
sarb
dec
pop
mov
add
jg
push
xor
inc
or
cli
jmp
test
movsl
cmp
aas
or
mov
dec
div
add
aaa
jle
loopne
mov
jge
adc
push
loop
pop
sub
xchg
mov
test
cmp
negl
cld
movsl
mov
xchg
test
sbb
leave
sub
lods
mov
sbb
imul
xor
jne
adcl
and
fdivs
es
xorb
xor
and
shll
pop
lret
insb
pop
jg
fisubl
mov
hlt
lds
jb
outsl
mov
test
xor
cld
pop
xchg
and
cmp
pop
mov
xlat
or
fidivl
cmc
dec
xor
sbb
mov
xchg
scas
and
dec
or
stc
lahf
cwtl
push
ss
aad
in
or
nop
stos
insl
ss
fs
lods
orl
jb
dec
and
jnp
sahf
push
cltd
cmpsl
pusha
sbb
inc
push
inc
sbb
loope
push
sti
pop
bound
push
stos
xchg
jecxz
shll
add
mov
ficomps
push
sbb
add
sar
inc
lods
pop
out
add
lock
stos
cmp
out
jns
inc
loopne
mov
imul
jle
and
lahf
xor
out
and
and
data16
inc
jne
arpl
dec
inc
pushf
push
xor
shl
dec
ds
fisubs
repnz
mov
test
push
or
test
push
clc
loopne
scas
add
inc
ficoml
and
mov
push
pop
pop
mov
cli
pop
cmp
jns
pop
out
xor
pcmpgtb
fsubs
pop
xchg
fwait
sbb
xlat
jle
sub
testb
jecxz
xchg
adc
lcall
mov
xor
mov
mov
add
das
aad
inc
icebp
popf
stos
mov
push
sahf
inc
in
jmp
shll
sub
sub
push
jge
inc
jmp
jge
in
mov
cmp
or
pop
sbb
hlt
fidivrs
pop
cwtl
or
and
jle
mov
imul
dec
jo
mov
xor
pop
pop
jb
popa
pop
adcl
imul
sbb
push
cmp
ljmp
or
lret
sahf
ja
push
mov
scas
rorb
mov
mulb
rcl
xchg
add
sbb
mov
xchg
sahf
shlb
push
jns
fcoml
ds
push
jge
lahf
aaa
enter
inc
sbb
xor
adc
sti
cwtl
enter
xchg
movsl
fcoms
dec
add
jge
rol
popa
decl
adc
pop
imul
fstps
xlat
push
dec
or
sub
xor
xchg
in
mov
loopne
cmp
push
jne
out
test
decl
add
mov
movsw
lcall
xor
sbb
inc
push
add
aad
cmpsl
les
jb
shl
inc
in
fstpl
mov
and
orb
call
subl
loopne
ret
ret
mov
ja
or
or
mov
in
and
sub
or
dec
pop
inc
mov
ret
inc
daa
push
loop
push
loop
adc
lret
lahf
jmp
pushf
ret
sub
xorb
fs
call
ljmp
push
jp
xchg
mov
loopne
jl
adcl
xor
mov
cs
add
push
sub
mov
mov
dec
movsb
push
and
mov
push
addr16
mov
ret
xchg
jmp
enter
xchg
ret
lahf
cmp
pop
jecxz
xor
xor
cmp
xchg
out
in
push
adc
add
ljmp
sub
sub
and
adcb
push
push
das
popf
stos
adc
inc
notb
dec
and
insb
mov
jbe
or
leave
ss
gs
sbb
xor
or
hlt
jecxz
adc
inc
aaa
cmc
xchg
clc
mov
adc
stc
sub
scas
cmpsb
sbb
adc
xchg
or
orb
mov
cli
in
inc
fwait
mov
adc
adc
jb
jmp
or
push
and
inc
and
je
pushf
fsin
jecxz
mov
cmp
cmp
or
cltd
adc
sub
mov
jle
jle
mov
xchg
and
daa
jno
sarb
jo
push
gs
sbb
mov
lret
pop
jbe
jg
out
dec
xorb
and
add
mov
mov
data16
hlt
mov
mov
pop
adc
inc
je
out
xchg
call
out
jecxz
dec
and
movhlps
scas
call
scas
xlat
test
cld
mov
jg
add
lds
push
jg
bound
inc
sub
fsubrs
cmpsl
lea
dec
cmpb
jnp
mov
dec
loop
js
std
cmp
test
jmp
aas
jl
test
sbb
push
mov
movsb
sarl
loope
add
and
test
inc
popa
sbb
mov
or
xlat
xlat
pop
dec
xor
pop
stc
mov
pavgb
sbb
out
mov
push
mov
jecxz
leave
jmp
mov
inc
and
out
in
adc
cwtl
je
cltd
adc
pop
xor
addb
lret
adc
insb
leave
mov
push
jne
leave
outsb
test
int
popa
xor
int
dec
push
fs
insb
packsswb
cmpsl
inc
ficoms
cltd
in
cmpsb
inc
sarb
mov
and
sbb
mov
pop
add
push
xchg
pusha
decb
dec
inc
pop
fs
xchg
inc
ds
enter
shrb
cli
push
mov
mov
sbb
pushf
test
shlb
stos
daa
push
jo
adc
and
fisubs
rcr
sbb
sbb
pop
sbb
out
dec
push
add
outsb
add
test
inc
and
pop
jecxz
xchg
sti
push
cs
sahf
loop
mov
pop
psubsb
out
xlat
rcrb
rcrl
cmp
lods
daa
push
lods
lea
int3
mov
mov
clc
fwait
xchg
into
xor
inc
jnp
inc
gs
fwait
mov
sti
fcmovb
xchg
cmp
mov
aad
cmp
incb
add
jmp
out
jecxz
rol
and
sub
jae
stos
movsl
stc
mov
ret
xor
or
jb
pop
and
pop
sbb
cs
mov
add
les
out
jnp
rol
cmp
mov
pushf
fldenv
xor
jge
fcmove
cmp
pop
xor
mov
cmpsb
lret
mov
adc
mov
mov
leave
and
decl
popa
ficompl
dec
mov
movsw
add
lea
cmp
jnp
mov
pop
sbb
add
stos
lahf
xor
cmc
cld
arpl
mov
lods
xor
ret
mov
add
in
pop
pop
mov
nop
pop
lock
sti
fsubrl
mov
lcall
pop
mul
sub
or
lret
mov
test
aas
das
stos
test
cs
cmp
inc
jbe
mov
mov
mov
stos
jae
das
add
fistps
cmpsl
xchg
or
rcr
mov
stos
mov
pop
dec
imul
rcrb
addr16
pop
fistpll
and
fnsave
cmp
push
pop
adc
arpl
add
mov
lock
lea
mov
xor
cmp
sub
je
xor
js
dec
je
or
xchg
sub
mov
cmp
in
test
pop
mov
push
cltd
insl
adc
mov
inc
sub
pop
ffreep
sub
push
clc
jg
stos
pop
jge
es
ja
loop
push
xchg
sar
and
sbb
ss
arpl
int
and
stc
int3
push
push
xor
movsb
mov
xchg
jns
add
add
rolb
scas
mov
inc
and
sub
daa
sub
into
pop
jae
or
sbb
pop
mov
xlat
aad
push
movb
out
inc
mov
xchg
pop
lea
mov
push
rorl
ljmp
gs
mov
lret
mov
jno
testl
dec
sub
pushf
add
inc
xor
out
xchg
push
ret
in
cmp
xchg
xor
and
xor
add
fildll
jnp
add
jns
add
mov
xchg
fbld
ds
lock
cltd
insb
xorb
xor
rcll
cmpb
push
out
leave
or
lahf
imul
and
fstps
jg
mov
ja
daa
or
pop
test
hlt
pop
gs
scas
dec
mov
cltd
mov
add
jp
dec
cmp
stc
pusha
dec
inc
add
mov
clc
xor
push
xlat
add
fdivl
shlb
loop
cltd
popf
dec
lods
lods
fs
test
cmp
pop
into
ror
mov
adc
xor
add
sbb
and
cmc
imul
sahf
push
sub
addr16
clc
mov
adc
jmp
jne
std
xor
sbb
inc
xchg
test
adc
cld
pop
sub
inc
mov
jp
repnz
mov
pushf
enter
push
jns
stos
and
ss
bsr
xor
jo
mov
jge
cli
ljmp
js
hlt
xor
sub
das
and
mov
ja
idivb
mov
push
dec
bound
mov
adc
sub
clc
daa
bound
pop
and
mov
dec
pop
dec
push
xchg
dec
mov
or
jle
in
mov
sbb
jbe
loopne
popf
ret
mov
js
dec
fcomps
ficoml
popa
test
push
dec
rcl
or
movsb
and
push
insb
lahf
add
inc
xchg
je
sub
jbe
sbb
push
loop
pop
push
mov
and
push
repnz
mov
mov
sbb
popa
dec
dec
mov
cwtl
inc
mov
cld
cmpsb
fidivl
int3
pop
aam
out
mov
icebp
insl
scas
sbb
in
mov
lret
mov
mov
es
adc
adc
adc
jmp
sbb
mov
sub
add
cltd
out
lret
dec
test
cmp
mov
add
cmp
flds
pop
inc
mov
fs
jl
ss
in
push
in
jb
call
jmp
inc
or
cld
push
addb
movsb
push
inc
insb
leave
sbb
mov
pop
cld
adc
mov
mov
inc
jb
out
sbb
cltd
rcrb
imul
and
arpl
imul
loope
jle
mov
inc
push
popa
and
cmc
leave
lods
pop
and
pop
ja
sub
shll
push
mov
bound
out
push
mov
add
lock
out
push
negl
push
aad
and
pop
cmpl
scas
js
shl
push
inc
scas
aaa
xlat
fs
popa
and
push
pop
pop
insl
push
ja
mov
sbb
pop
das
push
push
sub
gs
test
fisttpl
ret
push
ret
dec
dec
lret
xchg
movsl
add
out
in
sbb
cmp
outsl
push
aas
stc
jb
mov
daa
adc
outsl
mov
jmp
mov
test
sti
push
add
mov
add
movsl
gs
aam
aam
mov
or
je
dec
jecxz
rol
sbb
sub
mov
jp
adcb
filds
push
cmpl
test
dec
in
imul
data16
jne
adc
fstpt
insb
cmp
xchg
cwtl
stos
jo
xor
push
fwait
xchg
subb
cmc
jne
mov
test
jae
push
cmpsb
jecxz
pop
in
aaa
into
lods
aad
push
sub
aam
scas
inc
leave
movsb
lcall
insl
mov
mov
push
cmp
sub
addr16
and
inc
push
adc
sub
mov
sbb
pop
adc
and
xor
cwtl
push
call
es
roll
out
and
push
push
sbbb
mov
sbb
mov
int3
hlt
pop
cmp
addr16
movsl
lods
xor
add
jp
push
push
add
call
bound
fnstsw
cmc
mov
dec
add
adc
lods
xor
xchg
popa
sub
push
add
inc
jnp
add
cmp
pop
fisubl
jge
cmp
mov
pop
popa
hlt
mov
call
xchg
inc
rcpps
inc
jl
lcall
or
cli
mov
adc
mov
data16
nop
iret
nop
adc
adc
test
xchg
xor
push
int
adc
inc
pop
movsb
cmpsb
push
orl
mov
mov
inc
rorl
js
adcb
add
adc
inc
arpl
push
out
test
sub
push
jmp
icebp
out
fs
sahf
fwait
movsl
lea
push
sbb
pop
sti
imul
lods
pop
jne
out
rclb
cld
lods
xchg
mov
test
fisubs
mov
mul
mov
cmpsl
cmpsl
in
cmc
popa
push
xorl
out
add
lcall
jae
mov
cmovnp
sub
lahf
jecxz
roll
or
adc
add
ljmp
repnz
aad
pushf
loop
sbb
orb
fmull
xchg
clc
pop
lea
repnz
clc
jmp
imul
lret
sub
stos
lahf
add
mov
fistps
or
cmpsb
icebp
fistpll
add
inc
sub
int3
xchg
or
fstpl
add
or
test
jp
mov
jne
mov
lret
fistl
test
mov
cs
mov
mov
mov
mov
mov
pop
dec
inc
in
pop
ljmp
ret
push
or
add
add
lcall
scas
mov
aad
mov
pop
or
lcall
or
xorl
popf
lods
push
stos
cmp
xchg
and
stos
orl
mull
or
inc
pop
adc
xor
lock
cmpsl
jne
xor
std
mov
cmp
addb
iret
adc
aad
fldl
mov
push
int
test
je
lock
inc
daa
ss
iret
sub
pop
test
mov
sbb
movb
xchg
xor
fnstenv
cmc
outsl
cmp
push
jno
in
repnz
lret
pushf
mov
fs
push
push
fists
xchg
mov
in
push
mov
mov
cmpb
out
mov
popf
mov
xchg
mov
and
sub
imul
and
xlat
rorl
jecxz
in
mov
push
and
loope
and
popl
xor
rclb
jecxz
repz
mov
dec
jmp
hlt
mov
adcl
xchg
push
pop
or
mov
xchg
push
inc
mov
jmp
into
iret
aas
cwtl
jle,pt
imul
in
pop
or
add
mov
sti
dec
jno
js
incb
adc
ja
fsubrl
sahf
inc
cmpsb
pop
adc
xchg
mov
pop
enter
idiv
push
fldl
push
jl
push
xor
inc
jmp
lock
icebp
mov
add
jl
push
pop
mov
lds
bound
outsb
out
je
std
cld
int3
dec
popf
in
cmp
push
sub
jecxz
and
in
pop
mov
enter
lret
pusha
repz
mov
sahf
mov
mov
push
ret
mov
outsl
sbb
or
aas
enter
insb
flds
xchg
sub
data16
mov
adc
mov
out
xchg
int3
test
loop
les
fstpt
or
push
jne
nop
push
add
pusha
push
lcall
inc
adc
xchg
rcrl
leave
and
ljmp
push
mov
sbb
daa
mov
stos
cmp
in
lahf
in
push
and
lcall
stos
xlat
andb
inc
jl
arpl
jne
pop
inc
lahf
loopne
mov
xchg
shlb
mov
cli
dec
cli
enter
cmpsb
mov
add
fldl2e
arpl
dec
cmp
pop
pop
xchg
inc
or
jno
push
popa
fstpl
mov
adc
fs
xchg
lcall
enter
dec
pop
jge
dec
dec
sbb
inc
xor
add
add
out
jp
aaa
int3
lcall
or
and
divb
cmp
outsl
inc
push
das
ror
adc
les
push
call
insl
fsubs
xor
sub
dec
xchg
in
mov
pop
push
cmpsl
and
or
in
mov
loop
shll
movsl
dec
loop
sti
popa
sti
add
hlt
and
ret
mov
inc
cmp
mov
lds
and
loope
popa
pop
inc
sub
sbb
adc
ja
push
push
xchg
xchg
les
and
sbb
fsubrl
sub
mov
add
test
popa
push
sbb
ja
mov
jmp
jnp
jo
in
lret
mov
push
cs
pop
push
sub
stos
adc
in
push
pop
data16
clc
mov
ret
addr16
sub
xor
push
insl
dec
stos
call
jb
lods
mov
daa
sub
loopne
out
inc
ret
fs
xor
inc
movsb
sbb
rol
jecxz
mov
enter
andb
loope
lret
adc
dec
add
sbb
adc
mov
rolb
hlt
mov
int3
cmp
dec
test
std
inc
xor
jb
or
stos
cld
mov
and
xor
sub
stos
mov
fwait
sub
or
xor
xor
popa
push
arpl
movsb
jle
xor
in
xchg
sbb
sbb
dec
push
popf
mov
sbb
out
pop
daa
inc
jno
mov
leave
lods
es
ret
mov
sbb
lock
inc
fcompl
aad
xor
add
movsl
jb
sbb
and
mov
xchg
pop
sub
mov
xor
and
jne
in
mov
in
int
pop
push
in
jne
or
fcmovu
sub
test
scas
js
jmp
sbb
lea
or
cmp
or
push
imul
jg
mov
add
pop
add
popa
push
mov
sbb
xchg
sbb
adc
mov
loop
int3
push
test
mov
mov
xor
das
inc
mov
xchg
clc
xchg
xchg
pusha
lods
sub
xchg
inc
jb
dec
xor
or
adc
std
fisubrl
fildll
int3
cmp
cld
pop
outsb
xchg
pop
out
pop
xchg
shll
and
adc
in
mov
adc
jno
sbb
sbb
outsb
icebp
loope
sbb
push
loopne
push
inc
and
cli
cmp
stc
sbb
mov
test
out
mov
insb
push
aaa
cld
jg
adc
ljmp
inc
jno
push
negb
loopne
and
call
aam
das
fucomp
jmp
jge
adc
lcall
adc
cmc
rcrb
sbb
inc
testl
in
mov
jb
mov
push
ret
outsb
mov
or
ret
scas
stos
clc
or
push
mov
call
fiaddl
stos
mov
inc
xchg
xchg
lods
cld
das
mov
cli
cs
mov
add
je
adc
adc
sub
cmp
mov
pop
lahf
inc
xor
jb
or
add
xor
jbe
iret
pusha
sbb
mov
mov
pop
popf
call
bound
cwtl
sub
outsl
jp
mov
imul
mov
xchg
ret
pop
lahf
fdivrl
dec
ja
sbb
mov
repz
mov
dec
push
xor
dec
sub
repz
out
loopne
fs
lret
mov
mov
lds
stc
rorl
ja
sti
lahf
inc
in
test
idiv
outsl
rol
mov
rorl
push
out
je
pop
sbb
movsl
test
pop
fwait
xor
cli
cwtl
push
sbb
mov
mov
add
cmp
sub
lahf
das
mov
xchg
cmp
sub
add
in
loop
leave
lcall
cmp
sahf
pop
mov
push
inc
sub
outsl
aas
and
in
notb
mov
ficompl
or
ret
mov
adc
pop
mov
sar
sub
mov
push
dec
jmp
mov
mov
lea
xor
jmp
sbbl
jbe
sar
mov
aad
dec
lret
mov
psubd
push
xor
sub
jbe
adcl
test
jg
rclb
mov
aas
cmp
sbb
in
xchg
cs
idivb
dec
cld
jp
mov
leave
pop
xchg
jp
fwait
xlat
sbb
nop
negb
jge
jle
sub
push
fistpl
xlat
add
mov
sub
sub
sarb
xchg
sub
push
dec
add
or
push
pusha
mov
jmp
xor
and
push
adc
repz
push
inc
sbbl
sbb
mov
or
jl
mov
xchg
addr16
dec
frstor
es
push
xchg
adc
cmp
xchg
mov
outsb
push
inc
lods
aaa
fimuls
jp
gs
subb
mov
movsl
lods
iret
idivb
cwtl
shll
std
imulb
ljmp
mov
imul
rorb
adc
orb
xor
sub
mov
test
mov
jae
adc
lods
xor
aad
mov
mov
mov
cli
mov
xchg
dec
push
jle
mov
rolb
cltd
pop
jp
aam
sub
fcmovnb
dec
adc
ret
mov
push
jmp
push
sub
in
add
mov
mov
out
mov
mov
cltd
xchg
or
movsl
jns
inc
frndint
pop
mov
jl
pop
push
cmp
in
lret
jge
dec
jl
mov
clc
mov
xor
aad
and
imul
pop
cwtl
push
adc
dec
pop
movsb
les
jmp
lcall
orl
aam
dec
rol
push
sub
pop
or
mov
or
jmp
ja
aaa
mov
mov
movsl
inc
jmp
adc
jo
mov
mov
xor
cltd
cmp
sub
aad
roll
jno
test
or
mov
in
fs
inc
jno
repz
dec
test
out
mov
cmpsl
cld
add
sbb
add
dec
inc
lcall
int
ds
mov
enter
ja
mov
jne
int3
sbb
push
leave
cmp
mov
bswap
lea
shlb
and
pop
addr16
int
fxch
dec
enter
or
mov
push
and
cmp
xchg
push
sub
js
clc
aam
xchg
hlt
lods
cmpsl
adc
imul
sbb
rcrl
jnp
dec
xchg
dec
and
out
in
and
add
sbb
insb
cli
jo
mov
push
mov
and
aad
loopne
movsb
jns
arpl
and
pop
ds
call
jb
mov
in
loop
pop
mov
in
mov
mov
int3
inc
push
in
lret
pusha
jl
leave
cmp
dec
sti
pop
test
jecxz
incl
cwtl
and
adc
sub
aaa
fisubl
fdivrs
sbb
rcrb
mov
mov
jae
push
mov
fwait
dec
fiaddl
lds
push
xorl
pop
ret
add
insl
lret
aaa
mov
enter
stc
fisttps
out
ret
jo
ljmp
rcrb
pushf
sub
jecxz
xor
push
mov
fs
cli
imul
cmpsb
call
xchg
push
push
idiv
mov
scas
ljmp
jl
pop
cmp
fcmovne
es
sbb
dec
ljmp
or
leave
jo
mov
lahf
jne
add
xor
movsl
push
adc
mov
push
adc
or
stc
ljmp
imul
jg
and
out
rcrl
xor
dec
push
fisubl
xor
pop
jns
xchg
jae
xor
push
or
xor
das
cmpsl
inc
push
sbb
cmp
lds
outsb
jbe
sub
jo
out
and
shrb
andb
sbb
sub
xchg
ljmp
rcrl
inc
addr16
fdivl
pop
cmp
les
jecxz
fs
jne
daa
movsl
leave
stc
xchg
mov
fxam
mov
sbb
mov
jecxz
add
jp
cmp
and
enter
or
mov
les
or
scas
jp
aad
dec
sbb
fwait
or
mov
fcoms
push
lock
xchg
jle
ret
stc
les
aam
call
clc
and
inc
subb
inc
out
test
ja,pt
shl
mov
mov
dec
pusha
mov
fiadds
nop
mov
dec
jl
test
dec
adc
mov
cmp
retw
mov
inc
popf
mov
push
pop
jo
inc
jg
movsl
mov
fcomi
cmp
push
sub
push
jle
fidivrl
pop
mov
adc
xor
stc
mov
cmc
push
stos
jns
in
push
push
lret
icebp
daa
dec
lcall
inc
mov
sbb
outsl
mov
pop
xchg
ds
sub
sub
les
insb
dec
mov
xchg
jp
mov
add
pushf
cmpsb
fprem
outsb
test
push
fldl
icebp
mov
sbb
fstpt
mov
data16
test
lret
cmp
sbb
and
ljmp
pop
jo
loop
pop
lret
inc
mov
xchg
loop
push
jns
ljmp
push
pop
andb
repnz
fs
div
mov
das
ret
enter
sub
lret
loopne
daa
sub
loopne
cmp
jbe
daa
fidivrs
cld
mov
nop
cmc
sbb
xchg
pop
repnz
jmp
xor
call
orl
sahf
xchg
adc
xlat
push
popf
test
data16
xor
enter
in
test
mov
jecxz
sub
clc
ds
inc
int3
push
xor
int
decl
dec
pop
mov
or
mov
pop
adc
add
xchg
cs
lods
sti
lret
pusha
and
cltd
cmp
in
js
sub
ret
shll
test
addr16
inc
out
sub
mov
push
stos
movsl
shlb
aad
jae
mov
add
mov
xchg
mov
imul
sub
adc
into
or
mov
mov
cmp
inc
ret
subb
jmp
or
xor
ja
ret
aam
es
test
push
sub
adc
lods
xchg
or
popf
push
pop
mov
in
jecxz
out
mov
ficompl
mov
jno
fdivs
je
sti
sbb
inc
mov
rolb
cld
mov
adc
int3
fimull
and
rcll
mov
subl
movsl
in
hlt
fistps
and
rclb
and
jbe
clc
sub
jl
out
js
dec
push
jmp
lea
jg
mov
daa
addb
jae
imul
adc
out
out
mov
mov
sbb
and
cmp
push
cmp
jns
int
ds
popa
es
mov
in
pop
adc
add
push
add
divl
xchg
pop
cmp
xchg
mov
stos
and
mov
loopne
mov
ss
jae
pop
or
jp
push
push
loopne
xlat
je
fmul
sbb
and
xchg
lds
shrb
cmp
cvttps2pi
adc
ret
test
fstpl
insl
outsl
pop
mov
xchg
mov
dec
ret
stos
icebp
jnp
in
lods
jp
mov
ljmp
and
addr16
outsl
add
lock
out
icebp
popf
lret
cmc
fucomi
cmpsb
mov
sbb
dec
and
cmp
xchg
repnz
push
ret
jno
shll
test
scas
cwtl
loope
dec
jnp
insl
xchg
popf
mov
jge
adc
lret
sub
pop
fiaddl
dec
jmp
pop
sbb
rclb
add
divb
or
fsubl
sbb
cltd
clc
out
jecxz
insb
imulb
popf
xchg
xor
mov
xchg
cmpsb
loop
scas
adc
int3
cld
mov
gs
inc
or
push
popf
mov
pop
js
sti
pop
sbb
and
xchg
retw
pop
jg
jne
decb
lcall
xor
xchg
and
cmp
repz
shrb
int3
lods
mov
and
mov
mov
xchg
jae
pop
rcrl
out
mov
psubb
jae
sub
push
rcr
out
pop
rcrb
dec
pop
fldl2e
ljmp
push
inc
shll
cmp
imull
cmp
stc
aas
or
mov
sub
ljmp
inc
mov
sub
dec
sti
popf
pop
inc
pop
fstpl
hlt
ds
xor
dec
sub
aad
lock
sbb
mull
clc
jmp
dec
fs
push
insb
arpl
clc
loope
jmp
and
jg
call
pushf
or
ds
enter
inc
cmp
mov
pop
inc
inc
or
jo
adc
pop
cmp
jae
bound
jge
xchg
push
inc
lret
dec
push
sub
pop
jecxz
sbb
adc
pop
mov
adc
into
ja
sub
jns
adc
inc
mov
push
mov
sub
pop
imul
sarb
aaa
or
mov
repz
adc
mov
mov
stos
mov
popl
sbb
iret
imul
xchg
icebp
xchg
push
push
pushf
pop
jge
dec
movaps
andnps
xchg
insl
add
add
inc
clc
aaa
icebp
jb
jnp
bound
mov
dec
push
mov
add
insb
and
dec
popf
adc
jno
lcall
sbb
mov
pop
adc
test
jecxz
pop
mov
test
test
loop
sub
data16
rorl
lock
outsb
or
cltd
in
add
lea
jg
jnp
mov
jl
cmp
xchg
sbb
call
and
mov
inc
out
int
pushl
in
jge
or
stc
add
repz
mov
or
addr16
or
cmpsb
lea
add
pop
aad
std
xchg
lods
adc
sti
mov
insl
cmp
jae
or
or
test
scas
add
jo
rclb
dec
testb
imul
inc
sub
cmp
popf
ljmp
int3
popf
inc
jae
repz
cltd
loope
push
aaa
push
fmuls
xor
cltd
cmpsb
sbb
aad
out
out
movsl
mov
dec
xchg
stc
sbb
mov
adc
jo
inc
mov
cmpsl
xor
ds
aam
mov
jno
or
lcall
add
shrl
test
sbb
std
push
ret
sbb
lcall
dec
or
mov
leave
sbb
sbb
and
pop
into
cmp
pop
testl
cmpb
test
push
out
repz
add
xor
movsb
dec
sub
dec
insl
sub
pop
or
ss
adc
mov
lods
int
lds
push
pop
and
push
pusha
cmp
daa
jmp
adc
cmp
add
inc
aam
sti
or
jo
lds
push
in
ljmp
mov
nop
outsb
adc
iret
mov
adc
mov
mov
insb
mov
jle
fidivs
test
addr16
push
mov
daa
sbb
push
jp
mov
pop
ds
inc
cmc
mov
xlat
cmp
mov
jle
cmpsb
dec
es
fimull
dec
data16
or
in
int3
sbb
xor
pop
out
dec
inc
movsl
icebp
push
fsubl
nop
mov
sub
loopne
cmp
jbe
push
jle
mul
mov
inc
fldenv
or
cmp
and
dec
and
xchg
mov
sub
push
popa
ret
jbe
test
pop
fistpl
roll
cli
dec
jno
outsb
testb
scas
ret
adc
sub
cli
inc
inc
shll
rcrb
add
bound
jns
cltd
push
xor
mov
out
icebp
jmp
sub
jle
jnp
and
xlat
dec
negb
js
nop
aam
subb
mov
addr16
stos
je
xchg
cmp
mov
ret
dec
sub
xor
sbb
iret
push
xlat
je
jo
jmp
cmp
sub
lds
das
jns
push
out
movsl
gs
fsubrp
popa
cmp
inc
das
add
sub
push
js
dec
push
lcall
mov
daa
lods
out
rorb
jnp
cli
loop
or
sbb
pop
mov
sahf
out
sbb
mov
push
xchg
add
mov
add
pop
xchg
in
ret
aam
dec
stc
sahf
jnp
lods
pop
or
mov
aas
pop
mov
in
nop
add
and
xchg
mov
adc
add
mov
insl
ret
cwtl
jge
repz
pop
test
sub
jle
scas
out
scas
je
xor
mov
rorl
xor
idivb
mov
in
into
test
sbb
pop
mov
or
loopne
push
or
sub
mov
loopne
push
repnz
mov
mov
push
mov
adc
inc
das
push
shll
inc
dec
loope
xor
pop
adc
mov
mov
pop
fidivl
and
fcos
mov
inc
adc
dec
pop
mov
int3
loopne
inc
lahf
mov
jns
lret
push
outsb
push
sbb
loopne
or
idivb
ret
jp
push
repnz
shl
mov
jecxz
jne
jp
fcomi
fldenv
xchg
xlat
dec
inc
shll
add
cmp
pop
pop
shll
adc
jecxz
lret
sub
pusha
in
jns
ret
das
sbb
fistps
fimuls
add
push
icebp
fwait
scas
fdivl
xchg
add
cmp
sahf
push
dec
xor
cmp
sub
mov
inc
lds
push
and
or
push
rol
and
dec
lcall
aas
sbb
push
and
popf
loop
cli
add
push
jae
mov
inc
es
inc
nop
data16
repnz
lods
mov
xchg
popf
sub
xchg
js
out
test
leave
mov
testl
sub
mov
push
mov
add
push
mov
jecxz
movsb
inc
divb
ljmp
xor
jb
cli
xorb
sbb
cmpb
or
in
push
or
pop
rclb
jmp
xchg
jle
jp
dec
lcall
mov
fwait
and
mov
push
rorb
sub
fs
mov
mov
pop
mov
stos
add
cmp
jnp
mov
rclb
add
and
in
cmpsl
pop
in
movsl
shrb
xchg
xchg
mov
dec
mov
inc
les
dec
cmp
clc
int
dec
int3
out
fstps
inc
mov
ja
mov
dec
rcr
and
daa
gs
arpl
cmpsb
or
and
imul
es
fstl
rcll
out
fbstp
xlat
sbb
inc
push
pop
sub
inc
sub
or
adc
out
lahf
and
lds
test
adc
jecxz
mov
hlt
out
movsl
sub
dec
leave
pop
out
inc
dec
lock
gs
cmpsb
inc
push
push
fisttps
jge
inc
adc
sub
cwtl
lea
ret
mov
push
sbb
fsubl
std
mov
xchg
in
jl
jmp
lcall
dec
or
jbe
dec
cmp
lods
mov
int3
cmpb
sub
in
fdiv
fldcw
mov
lock
xchg
dec
loop
loope
sahf
fisttps
les
xchg
std
push
jle
out
nop
adc
inc
or
stc
cld
inc
push
cs
jg
inc
inc
inc
nop
test
popf
cmpsb
pop
add
sbb
cmpsb
pop
jo
inc
aas
push
ds
lret
js
push
pop
or
pusha
dec
dec
cmp
ss
inc
popf
test
xor
loop
xor
sbbb
scas
push
mul
fildll
jnp
xchg
jns
xchg
cmpsl
xchg
mov
call
cld
cmp
aas
jmp
cld
dec
out
cltd
adc
cld
arpl
lods
sbb
ret
jo
and
int
lock
lds
mov
jg
mov
lret
inc
mov
fbld
fadd
les
ja
push
cmovo
pop
or
clc
dec
sbb
mov
repnz
and
jae
pop
loope
loop
call
das
mov
dec
inc
push
adc
stos
xor
lret
mov
mov
hlt
mov
xchg
cmp
inc
sub
in
xor
insb
aaa
loope
dec
push
pop
lahf
into
cmpl
scas
imul
shr
push
fsubs
adc
add
sar
mov
and
inc
push
subl
fisubl
push
out
aam
js
orl
loope
outsl
and
xchg
xor
inc
sub
mov
add
subb
into
mov
mov
in
mov
enter
fimull
inc
cmp
mov
iret
popa
popa
shrb
test
pop
add
cltd
int3
xor
add
sub
jecxz
adc
jl
lods
mov
in
sbb
decl
inc
push
out
inc
jns
inc
adc
sbb
pop
mov
and
xchg
mov
stos
mov
mov
shlb
and
add
mov
push
fildl
test
notl
jns
xchg
fwait
ja
cmpsl
lahf
push
dec
out
test
in
lahf
insl
push
out
mov
adc
push
in
mov
mov
sub
fst
push
lds
out
insb
fistps
mov
addr16
fldl2t
mov
lds
mov
loope
stos
push
and
in
xlat
xchg
add
pushl
sub
test
dec
pop
lahf
mov
loope
jne
cli
pop
and
push
mov
rolb
mov
jo
mov
popa
notl
mov
mov
popa
out
shll
and
mov
adc
scas
or
cmpsl
hlt
sub
mov
jae
mov
push
push
jle
aas
test
cmp
ljmp
cmp
loopne
push
cwtl
or
cld
sub
pop
sahf
mov
sub
xor
ljmp
cmpsb
rol
popf
pop
push
shl
ljmp
fwait
and
add
inc
or
push
movsl
dec
cli
in
lock
fsub
insb
es
loop
or
movsb
iret
or
pusha
pusha
xchg
fcomps
jge,pn
xchg
push
subb
push
dec
out
xor
mov
imul
dec
out
mov
jle
aaa
or
sub
mov
rorl
or
loop
xor
repz
inc
xlat
pop
fisubl
sbbl
adc
hlt
and
int
jmp
pop
push
inc
jne
divb
mov
push
mov
jo
insb
aam
jmp
mov
jmp
mov
cmp
mov
movsl
ja
sub
add
jl
inc
iret
pop
hlt
xchg
xchg
daa
add
insl
into
lret
sub
xor
clc
cli
out
xor
pop
push
cmpb
dec
push
out
push
iret
jge
std
mov
xor
jg
push
mov
fmull
in
add
dec
lock
xchg
das
jo
mov
into
lods
inc
cmp
dec
pop
aas
jno
addr16
jl
in
mov
cmp
xchg
xor
dec
lret
push
imul
sbb
mov
push
fwait
mov
inc
add
call
push
adc
int3
and
outsb
push
xchg
cmp
fadd
xor
enter
push
xchg
xorl
out
sahf
cmpsb
push
divb
outsl
imul
cld
mov
push
jecxz
sbb
sahf
iret
xchg
pop
xchg
sub
cmp
sub
scas
inc
adc
inc
arpl
inc
sbb
js
dec
insl
shl
jmp
dec
clc
push
sbb
icebp
rcl
ss
push
and
add
jge,pt
cwtl
imul
xor
enter
frstor
pop
xchg
pop
add
jge
sahf
daa
push
sbb
inc
dec
mov
shrb
and
fnstsw
hlt
fwait
out
enter
mov
mov
loopne
aas
cmp
cmpl
js
xor
mov
cs
sarb
xor
xor
pop
ret
int
scas
inc
test
sbb
nop
sub
cmpsl
add
aaa
insb
push
push
repnz
or
pop
ret
cwtl
ljmp
lcall
sub
adc
cmpsl
mov
fcmove
add
jmp
pop
sbb
pop
push
add
mov
iret
or
hlt
cmp
sahf
jecxz
push
push
inc
sub
sbb
mov
js
rcrb
icebp
iret
or
dec
or
pushf
adc
cli
or
adc
push
arpl
mov
push
lea
or
imul
mov
pop
int3
xor
aam
xchg
xchg
xorl
cld
shrb
pusha
daa
ret
add
mov
sub
mov
sar
loope
das
repnz
sti
mov
jge
add
dec
stos
pop
imul
insb
lods
jp
adc
sbb
arpl
xor
es
je
sbb
ljmp
inc
lds
leave
xchg
xor
add
lahf
jmp
popf
sti
adc
lods
adc
lret
jge
adc
out
sbb
cmova
imull
xchg
dec
fmul
lods
in
repnz
insl
inc
jo
xchg
inc
xor
movsl
loopne
cmpsl
or
jecxz
mov
aaa
call
sub
popf
outsl
add
stos
or
jb
cmp
add
mov
and
sbb
mov
cmpsb
pop
sbb
pop
xor
mov
inc
scas
pusha
movsl
cmp
in
jmp
ficoms
mov
outsl
clc
outsl
mov
sbb
mov
cmp
pop
shr
dec
or
dec
dec
enter
pop
mov
mov
out
dec
and
jge
push
jl
pusha
jbe
ja
inc
add
test
cmc
mov
je
adc
sbb
push
push
xchg
ret
add
scas
add
scas
gs
and
icebp
sbb
xchg
insb
cli
sti
mov
out
mov
jp
mov
jnp
xor
sti
insl
scas
subb
or
push
in
jecxz
in
dec
int
sub
xchg
fsubs
mov
add
xchg
mov
jle
fbstp
pushf
jle
inc
pusha
movsb
sub
mov
div
xchg
sbb
lods
xor
push
scas
mov
and
jg
pop
dec
fmuls
pushl
xchg
sub
dec
and
pop
enter
addb
mov
pop
mov
neg
mov
ror
ljmp
clc
sbbl
outsl
mov
and
imul
ror
jg
cli
lret
or
mov
push
imul
xchg
in
mov
sbb
gs
out
sbb
cmp
push
add
sti
int3
sbb
or
hlt
aad
adc
call
adc
nop
into
hlt
and
mov
mov
mov
mov
cmp
dec
lahf
stos
pop
mov
jo
int3
inc
sbb
mov
inc
arpl
test
push
call
inc
jnp
xor
pop
push
fsubs
in
loop
pop
pop
rorl
sbb
lret
pop
les
dec
ljmp
daa
in
ljmp
dec
cli
jge
inc
cmp
imul
sub
insb
mov
in
js
mov
das
mov
cwtl
sub
and
div
mov
pop
notb
out
fidivrs
insb
and
mov
imul
addb
sbb
adc
xchg
xchg
out
cli
and
test
sbb
pop
lahf
mov
aaa
or
mov
xchg
xor
mov
fwait
je
iret
push
ss
inc
cmp
andl
inc
mov
xor
or
test
aam
clc
xchg
das
mov
outsl
pushf
dec
jne
mov
pop
pusha
rcl
inc
hlt
sub
ja
push
daa
mov
andb
out
jae
pop
jae
pop
xchg
stos
std
test
jl
lds
jbe
sbb
icebp
dec
sti
insl
negl
nop
pop
sbb
mov
push
xor
lods
test
std
js
pop
inc
adc
lcall
loopne
lahf
out
test
push
lret
out
push
mov
xor
mov
in
xor
adc
shll
subl
and
mov
ljmp
adc
testl
adc
mov
push
xchg
out
ljmp
add
lahf
push
and
mov
idiv
aaa
add
sub
ret
add
jle
sbb
mov
xchg
test
cmp
or
repz
fidivrs
in
xlat
dec
push
or
test
push
dec
adc
hlt
dec
cmc
add
and
or
idivb
clc
jbe
mov
jae
xchg
rolb
add
out
inc
push
sbbb
sub
clc
and
dec
cmc
xor
mov
sbb
mov
sbb
int
xor
adc
cli
mov
aam
jecxz
jae
push
scas
js
sub
int3
stos
scas
popa
lahf
pop
and
ds
bound
dec
mov
dec
rcrl
pop
mov
cmp
adc
add
rcrb
dec
leave
push
je
or
stos
dec
pusha
jns
and
imul
jmp
jp
mov
sbb
jns
push
adc
fsubrs
add
mov
pextrw
inc
xchg
gs
push
xchg
mov
cld
pop
inc
cmp
or
mov
cmp
or
es
cs
icebp
push
stos
fistpl
stos
das
out
pop
xchg
mov
xchg
add
repnz
lahf
xor
mov
mov
push
dec
iret
sti
js
inc
jo
fsubrl
fdivl
int
fmuls
arpl
rep
stos
xor
imul
and
jecxz
xchg
xchg
sti
scas
and
hlt
pop
jl
xchg
data16
sar
aas
out
jg
xor
and
mov
dec
data16
sbb
ljmp
insb
and
imul
mov
push
xchg
inc
inc
es
es
stos
mov
in
mov
pusha
mov
int
iret
ds
jg
or
and
xor
cmc
subb
pop
mov
lcall
add
adc
cmpsb
outsb
dec
into
xlat
out
xor
sub
or
int3
cmp
cmp
rorl
cmc
add
loope
aam
mov
xchg
pop
mov
adc
push
push
mov
and
sub
sub
push
fimuls
movsb
outsb
cwtl
push
sbb
imul
and
lds
inc
lcall
and
lret
jp
pop
sub
es
insb
or
loop
jecxz
xor
add
push
test
les
repnz
insb
test
or
xchg
mov
sahf
jge
lds
aaa
push
xlat
or
jno
jle
adc
add
mov
arpl
mov
movsl
adc
push
mov
sti
jnp
call
push
mov
ret
jp
dec
imul
and
add
mov
lock
shlb
rorb
sbb
ds
sahf
cmc
mov
xchg
inc
leavew
lea
pop
je
cli
push
in
mov
fimuls
adc
clc
adc
std
mov
add
in
gs
mov
insl
dec
adc
sub
mov
sub
xor
sysexit
pushf
out
jnp
mov
sbb
dec
and
dec
in
and
and
dec
pop
xor
jo
sub
dec
fs
sub
inc
out
mov
scas
xor
lret
outsl
inc
cmp
push
mov
xor
hlt
push
or
mov
fldcw
mov
xchg
iret
jo
in
outsl
push
sbb
sbb
jmp
inc
sti
mov
mov
mov
push
mov
gs
pop
fs
ss
rorb
int
mov
xorl
popf
repz
out
pop
dec
mov
mov
scas
fistpl
push
jl
lret
call
jmp
jo
dec
clc
and
mov
es
cltd
orb
mov
add
pop
and
pushf
call
popa
jp
and
xor
push
mov
cmpb
out
jle
push
shll
mov
mov
ss
pop
cld
mov
mov
jbe
pop
sbbb
in
mov
rclb
mov
loopne
add
push
push
lea
pop
inc
enter
and
stos
stos
xor
cmp
inc
ror
and
mov
push
js
fists
gs
mov
mov
xchg
flds
jo
insb
or
xchg
xchg
int
xchg
xor
pop
dec
iret
outsb
imul
xchg
ret
arpl
inc
jp
adc
xor
or
loope
dec
mov
out
in
in
dec
or
mov
outsb
je
cld
inc
aam
xchg
jo
les
cmp
pop
ds
mov
mov
rolb
pop
adc
fs
mov
imul
movsl
add
lods
ret
and
sub
pop
push
clc
loop
push
mov
into
xchg
test
cltd
cmp
stos
je
inc
ljmp
dec
shlb
mov
pop
or
lret
outsl
sub
lds
mov
jmp
and
lods
jae
pop
xor
repz
bound
mov
and
dec
push
dec
sahf
pop
shlb
cmp
xchg
sbb
and
dec
xor
pushf
js
sbb
ds
dec
jg
mov
sub
dec
iret
andb
leave
pop
cmc
jb
sahf
bnd
xchg
dec
pop
loopne
shll
test
pop
mov
add
mov
or
mov
inc
fldl
addb
inc
pushf
mov
lds
fxch
les
stos
fidivrl
xchg
test
ror
xor
add
das
shl
test
mov
ret
out
stc
shll
pop
jb
ja
arpl
push
mov
sub
inc
out
mov
xchg
out
jle
cmp
cmp
fadds
test
cmp
sub
add
lock
inc
aas
dec
add
nop
pop
lods
inc
pushw
mov
pushf
lcall
push
leave
scas
movsl
pop
xor
inc
pop
aas
xchg
mov
jo
mov
test
push
mov
int3
xchg
aas
ja
loop
pushf
loopne
adcb
lea
out
lcall
cmpsl
mov
dec
jnp
stos
jbe
ret
adc
out
or
fisubrs
push
and
push
leave
fcom
shrb
int
dec
xstore-rng
cmpsl
add
jbe
pop
push
mov
lods
ljmp
push
lcall
dec
jnp
ds
loop
mov
mov
push
pop
xchg
setl
fs
mov
inc
lods
push
call
and
cmpsl
xchg
shrl
aam
jle
or
enter
ss
fiadds
lea
jbe
jg
aad
mov
jae
stc
mov
or
jp
movsl
add
pop
cwtl
jns
mov
aaa
cmp
or
dec
xor
test
pop
push
lahf
pop
sub
mov
fcomp
xchg
sub
push
xchg
jp
mov
repnz
pop
stc
and
dec
and
mov
add
fidivs
mov
inc
fisubl
xchg
mov
lods
adc
xchg
push
and
sub
push
das
fsubrs
inc
lahf
jp
xchg
add
mov
fmuls
xchg
roll
push
push
pop
fisubs
push
leave
adc
or
and
sbb
sub
sbb
sbb
test
gs
pop
repz
les
inc
adc
xorb
popa
mov
je
aas
and
cmp
xchg
mov
lock
sbb
sbb
cmp
xchg
adc
cmpsl
jmp
repz
mov
sbb
push
arpl
add
int
adc
ds
fnsave
movsb
shlb
or
mov
into
outsl
xlat
push
jle
cmp
add
or
out
mov
pop
shll
mov
int3
rorb
push
push
cmp
mov
push
pop
nop
lods
stc
mov
negl
add
loop
outsl
inc
sbb
std
push
xchg
nop
test
outsl
jne
ds
or
xchg
add
imul
pop
cwtl
inc
add
ret
add
cltd
cld
xor
or
in
mov
jns
shrl
repnz
jbe
sbb
push
xchg
lods
mov
adc
imul
int3
push
jb
dec
pop
jp
and
jmp
das
loope
dec
jl
das
mov
test
mov
mov
nop
out
mov
ljmp
cmp
lahf
sbb
mov
lret
push
mov
test
es
jle
mov
scas
cmp
sub
push
test
push
xlat
sub
test
and
jmp
add
rorl
andl
push
lret
jmp
rorl
mov
push
hlt
push
or
pop
sbb
repnz
lahf
adc
pop
js
aam
popf
inc
lahf
mov
mov
pushf
xlat
call
inc
push
pushf
fisubs
imul
lret
pop
clc
xchg
mov
bound
sbb
xchg
mov
mov
lods
int
xor
test
inc
divl
mov
mov
mov
insl
mov
lods
pop
mov
daa
ljmp
int3
cmp
jne
mov
in
stos
aam
pop
popa
insb
cli
adc
dec
inc
push
loope
pushf
ljmp
push
mov
sbb
cs
icebp
lock
inc
xor
fiaddl
mov
mov
xchg
jns
nop
xchg
ja
scas
lea
ja
sbb
jg
xchg
loope
into
add
mov
fmulp
sbb
xor
inc
sti
pusha
ss
pop
push
sub
fldt
inc
jg
imul
sbb
call
rclb
test
jge
add
mov
or
out
inc
pop
test
xchg
lcall
fstpt
mov
lods
cmpsl
clc
xchg
outsb
pop
dec
adc
xor
test
xchg
leave
mov
jle
loopne
dec
lods
fwait
lock
dec
mov
ja
out
jecxz
es
enter
dec
or
sbb
or
sete
or
dec
xor
adc
das
rolb
mov
fwait
jp
out
pop
mov
adc
les
mov
pop
loopne
pop
daa
mov
cwtl
pop
scas
sub
cmp
mov
sbb
xor
push
outsb
cld
popa
mov
xchg
movsb
cmc
xor
dec
dec
lock
push
fwait
mov
inc
dec
les
adc
jmp
sub
add
andb
sub
pop
add
push
or
cltd
sub
mov
pop
dec
jae
xchg
popa
jns
cmp
mov
leave
mov
sbb
ss
mov
repz
xor
xchg
shlb
pop
cs
add
cmp
clc
sub
mov
pop
mov
pop
mov
xchg
dec
xchg
push
inc
dec
mov
orw
mov
xchg
mov
hlt
push
sarl
xor
sarb
push
fs
pop
mov
insb
scas
sbb
out
mov
int
cmp
mov
pop
xor
imul
mov
lret
xor
mov
push
mov
cmc
push
sub
enter
sub
pushf
test
sub
inc
and
cmp
mov
call
adc
cwtl
sub
loopne
addr16
outsb
mov
sbb
sbb
les
cmp
out
and
xchg
sbb
mov
pop
enter
loop
mov
loopne
add
shrb
rolb
mov
insl
xor
shlb
add
mov
test
imul
jb
mov
sbb
mov
in
push
aaa
jae
and
arpl
and
test
data16
push
daa
repnz
pop
cmp
xchg
mov
and
cmp
mov
push
data16
dec
and
sub
loop
das
pop
jle
out
daa
ret
or
pop
or
sti
fldt
icebp
inc
mov
in
dec
mov
sub
dec
push
shr
je
loopne
loope
inc
movsb
sub
pop
inc
cmc
popa
jns
dec
and
mov
inc
daa
dec
pop
mov
or
movb
outsl
jmp
xorb
xlat
ds
out
add
fsubs
jbe
out
gs
incb
pop
xchg
adc
nop
jecxz
pop
or
ljmp
hlt
cwtl
in
pusha
lea
dec
loopne
movsb
dec
inc
je
pop
pop
dec
fstps
or
sbb
into
leave
enter
mov
sbb
adc
test
loop
mov
inc
sub
push
lahf
dec
push
jnp
test
or
aas
xor
xor
and
jg
jnp
int3
les
add
ret
sbb
adc
into
xchg
dec
in
mov
movsl
jnp
test
sbb
push
lahf
int3
dec
mov
out
cmp
sub
mov
js
popf
hlt
and
adc
sub
dec
xchg
jmp
add
and
es
cmp
iret
dec
mov
fcompl
sbb
movsb
mov
dec
std
xor
cmp
jmp
mov
pushf
inc
push
mov
shlb
imul
cmp
rorb
shlb
jle
hlt
jb
shll
mov
push
rcrb
xor
cmp
or
cwtl
mov
cmc
mov
mov
push
hlt
add
or
in
mov
mov
or
outsl
lcall
andb
inc
stos
mov
insb
xor
in
repnz
xchg
les
xchg
roll
mov
leave
aam
daa
or
je
xchg
jnp
repnz
subb
popf
push
loopne
inc
xchg
sti
daa
andb
stc
add
nop
mov
push
ret
push
iret
test
sahf
inc
xchg
sarl
in
sbb
jb
test
xor
fdiv
mov
sbb
adc
pushf
in
mov
add
iret
xchg
stos
in
pop
mov
repz
je
mov
xchg
inc
out
in
jae
lret
test
in
cli
or
sub
or
xchg
inc
mov
lret
cmc
test
data16
mov
pop
xor
cmp
push
xchg
sti
mov
int3
jmp
shr
push
loopne
std
dec
leave
lods
and
insb
ret
test
repnz
fwait
in
add
test
push
test
mov
icebp
lea
movsb
pop
rolb
imul
mov
sub
addr16
cmp
mov
lds
clc
sbb
ss
repnz
test
jo
das
and
stc
mov
xchg
dec
in
push
xchg
dec
pop
ja
sub
fisubl
call
pop
movsbl
loopne
xlat
mov
push
jecxz
pushf
or
cli
dec
push
aad
push
adc
dec
or
or
and
inc
lods
je
push
rcl
in
popf
pushf
jae
adc
cld
fcomps
inc
push
jb
jl
mov
ds
cmp
std
push
bound
cld
jle
dec
mov
mov
or
fwait
sbb
addr16
pop
mov
mov
dec
out
shll
add
xchg
push
pop
aad
and
jno
sub
mov
lcall
sub
lcall
add
jb
fsub
scas
fnstsw
andl
dec
shrl
and
out
and
cltd
fiaddl
dec
mov
ret
mov
mov
pushf
leave
sub
and
push
cld
fadds
jb
ret
insb
xor
imul
pop
fidivrl
lret
lcall
loopne
ret
cmp
insb
or
test
addb
fs
pop
sub
mov
imul
and
or
aas
pop
mov
jb
dec
loope
fld
shl
push
fucomp
mov
cli
adcb
mov
ss
jle
lods
aas
aaa
mov
inc
sbb
dec
movsb
ja
aam
aas
sub
push
ljmp
repnz
fdivl
in
mov
fisubs
jl
rcrb
std
sub
mov
sbbb
push
and
ds
out
scas
lret
loop
xchg
cmpsl
jbe
jge
sub
sbb
fdivrl
out
mov
nop
fcomp
scas
or
repnz
xchg
pop
and
mov
int3
idivb
sbb
in
jno
test
add
repnz
out
and
addr16
and
mov
adc
add
and
or
or
stos
cmp
enter
inc
popf
sbb
mov
in
cltd
push
cmpsb
push
sub
xchg
ss
ja
sbb
in
shl
int3
jns
cltd
insl
sbb
jno
mov
mov
outsb
ljmp
push
rolb
daa
loop
and
es
mov
cwtl
fisubl
clc
out
xchg
mov
sub
fimuls
idiv
in
in
jg
mov
lahf
fsin
addl
adc
xor
sti
cmp
insl
pusha
and
in
sbb
sbb
ds
cwtl
push
cmp
jnp
in
mov
loopne
add
inc
jl
imul
xchg
sub
xchg
icebp
iret
cmp
push
into
mov
mov
push
and
and
movsl
lock
inc
push
dec
aam
movsl
pop
xor
sub
dec
jmp
sbb
in
xchg
sbb
imul
aad
and
xor
stos
in
xchg
scas
jp
sub
lea
cli
out
dec
sbb
mov
cmp
xchg
jmp
and
scas
imul
pop
push
xchg
cmpsb
hlt
mov
add
ss
push
cmc
xchg
out
leave
cs
in
dec
fisubs
mov
out
mov
jne
pop
mov
in
dec
mov
shll
mov
jl
inc
dec
pop
mov
scas
stos
cmp
push
pusha
cmp
mov
test
cmc
fcoml
jmp
sahf
fwait
sub
jbe
cmp
cmp
dec
and
or
push
jle
ds
mov
lock
pop
shlb
pop
ja
lock
fists
in
call
imul
clc
gs
clc
imul
aad
movsb
hlt
adc
out
insl
push
shrl
pop
das
sub
out
and
xchg
cltd
loop
pop
and
out
scas
test
or
jo
dec
stos
mov
add
inc
or
sbb
stc
jmp
jb
xor
pop
adc
or
addr16
fisubl
add
test
add
add
loope
and
loope
mov
leave
rorl
mov
int
int3
imul
and
rorl
cmc
dec
test
or
mov
fs
icebp
mov
pop
mov
sub
jno
fimull
cmpsl
rorl
and
and
icebp
adc
xor
sub
adc
jns
movsb
push
in
sbb
lock
call
jmp
mov
shrl
lahf
or
movsb
arpl
ret
aam
loopne
pop
gs
imul
aaa
pop
inc
adc
icebp
cmp
jp
dec
ss
pop
mov
cmp
xchg
mov
pop
shr
mov
push
xor
aad
lods
mov
lock
mov
popa
sbb
xchg
es
sahf
xchg
fcmovne
test
push
and
sbbl
ret
ret
rorb
fwait
cmp
push
movsl
loop
pop
jle
pop
stos
int
rcll
out
enter
cmc
push
jae
mov
jae
sub
xchg
add
add
jnp
je
and
push
aas
pop
and
lret
sbb
aas
sbbl
and
mov
mov
ljmp
pop
idivb
call
mov
popl
cltd
fcoms
sub
out
lret
adc
inc
xchg
pop
add
jmp
fsubrs
mov
mov
test
out
loope
mov
hlt
inc
lods
aas
pusha
scas
xchg
pop
mov
bound
push
in
sub
fsubr
or
out
je
test
in
mov
je
cmp
inc
mov
aam
je
loope
xor
fcompl
cld
cmp
sbb
jo
mov
xor
test
lahf
or
mov
jle
mov
sub
push
mov
mov
jmp
movsb
out
sub
bound
fnstcw
xchg
test
loop
ss
dec
mov
mov
inc
or
shll
jl
lcall
xchg
test
ja
mov
xor
out
mov
ss
and
mov
mov
xor
inc
and
lahf
pusha
ret
fsubrs
movsb
ja
cmp
push
xchg
dec
push
adc
mov
xchg
mov
cli
loope
jp
out
sahf
mov
test
vpsubusw
mov
sub
pop
test
jle
inc
enter
imul
jno
dec
push
mov
into
lea
dec
enter
test
add
and
xchg
into
sub
jo
dec
int3
in
scas
ret
push
mov
rorl
dec
and
mov
xor
andb
aam
jne
mov
or
mov
mov
sub
rclb
cmp
out
adc
jno
cmpsl
cmp
push
push
cli
push
fiadds
or
lahf
icebp
and
and
add
in
aam
mov
dec
dec
nop
rcr
pushf
and
mov
ljmp
mov
lea
cmp
ret
imul
dec
popa
sbb
add
dec
add
mov
jle
adc
push
in
jmp
inc
or
shrb
loopne
popf
jne
jl
in
rcrl
mov
pop
pop
jbe
scas
int3
mov
mov
es
sbb
pop
mov
js
xchg
loopne
add
xchg
pusha
and
jne
out
xorb
insl
cld
jp
cmp
negb
into
xchg
movsb
sub
mov
ret
ja
mov
clc
cmpsl
mov
pop
mov
ljmp
clc
fs
mov
lea
or
mov
sahf
je
in
mov
push
repnz
push
outsl
aam
cwtl
sbb
movsb
movsb
mov
mul
lret
cmp
inc
lahf
enter
pop
sti
sbb
jecxz
sbb
clc
mov
push
jbe
add
and
stos
mov
sbb
add
xchg
loopne
stos
mov
sub
fldenv
cmp
mov
cmp
out
movsl
mov
cmp
dec
cmp
cld
xor
call
retw
mov
mov
jbe
sub
cwtl
enter
xchg
or
scas
or
xchg
push
cltd
cmp
push
jmp
je
push
mov
in
aaa
js
ret
outsb
pop
stos
repnz
lods
pop
add
rolb
xchg
jp
xor
sbb
dec
cmp
gs
jge
dec
and
test
into
loopne
mov
push
shrl
fbstp
leave
and
cld
pop
jecxz
popl
sbb
sbb
std
nop
push
pop
jo
js
mov
adc
in
dec
push
mov
fcom
mov
int3
movsl
dec
inc
into
lahf
repz
mov
add
mov
js
add
add
xor
dec
ss
or
xor
mov
outsb
xchg
add
and
insl
scas
or
mov
jnp
loope
push
ds
sahf
push
push
push
mov
cmp
leave
lds
xchg
or
mov
pop
jb
nop
sbb
dec
inc
and
mov
and
or
jp
ss
inc
sub
adc
jge
sti
and
xchg
test
mov
cmp
and
into
hlt
icebp
mov
cli
sub
pop
je
sti
pop
test
sub
cmpb
pop
pop
push
jae
mov
xorb
jne
scas
xor
lods
xor
lret
lahf
mov
mov
pop
xchg
ss
add
and
sbb
cmp
loopne
insl
in
or
aad
mov
lahf
xchg
pop
and
dec
or
lea
or
pop
fwait
gs
out
in
in
push
pop
outsl
mov
into
js
gs
scas
pop
push
insb
cmp
fsts
inc
push
fisubl
ds
in
or
jmp
inc
jecxz
sbb
ret
shlb
insb
jne
sub
mov
inc
cli
dec
negl
outsb
jmp
pop
sub
add
shl
push
cmp
add
xor
lret
ljmp
add
add
add
imul
cmpsb
rcrb
adc
or
test
cli
hlt
ds
and
movsb
pop
push
icebp
xchg
sub
inc
xlat
out
loopne
faddl
adc
or
leave
sar
jne
and
xor
lods
pop
out
sbb
pop
out
adc
hlt
jmp
stos
push
mov
pop
in
cli
mov
xor
add
dec
sbb
xor
das
add
lahf
imul
mov
cmp
adc
mov
inc
gs
push
mov
inc
shll
fnstsw
mov
push
sub
imulb
imul
and
jmp
xchg
test
rcr
enter
test
mov
adcb
jns
jns
mov
aas
jns
js
das
fbld
mov
sbb
inc
jo
das
outsl
jmp
sbbl
lret
push
lods
add
fistpl
adcl
pop
repz
int3
inc
pop
loope
cld
jne
mov
mov
sub
jns
pop
mov
dec
fsubs
dec
pop
cli
popa
fprem1
aaa
or
mov
ficoml
jb
mov
mov
inc
pop
negb
inc
push
rolb
sub
inc
arpl
psubusb
xchg
mov
std
sar
insl
ja
in
pop
dec
mov
jmp
and
rcrw
add
scas
mov
pop
add
and
adc
in
sbb
test
mov
ret
mov
push
jg
add
orl
xor
dec
xchg
xchg
inc
sbb
sbb
lret
movsl
stos
dec
push
mov
test
jb
inc
leave
push
adc
xlat
sub
sbb
loopne
scas
int
sbb
iret
outsb
mov
pushf
or
dec
shl
in
add
lods
mov
mov
mov
fwait
in
sarb
stos
out
je
aad
aam
movsb
push
inc
stos
fists
pop
inc
pop
push
mov
incl
inc
mov
push
or
repz
xchg
xchg
ja
push
lds
mov
pop
cmp
mov
mov
mov
cmpsb
sbb
aaa
and
pop
jg
lds
inc
mov
shlb
fs
xor
xchg
ret
mov
test
imul
push
sub
popa
push
pushf
jmp
pop
rorb
or
dec
mov
or
xor
or
mov
push
icebp
push
popa
fildl
aaa
lea
shlb
xor
xlat
addb
xchg
div
xor
sub
aas
dec
call
out
sarb
inc
in
sbb
pop
mov
call
icebp
sti
mov
fdivr
int
loop
jp
int3
out
addl
push
fidivl
scas
pop
adcb
xchg
inc
into
xor
push
push
hlt
jg
outsb
xchg
lret
jmp
test
pop
dec
repz
aad
out
add
push
out
jnp
scas
sbb
jle
sahf
jo
movsl
jns
sbb
push
mov
jb
jae
cmp
lock
pusha
fldcw
stos
push
loopne
movsb
idivb
dec
or
jns
mov
jmp
iret
sub
xor
cmp
aam
mov
das
test
xchg
enter
dec
xchg
or
adc
test
movsb
xchg
dec
mov
lcall
sbb
mov
mov
xchg
push
and
fs
cmpsl
loop
movsl
inc
lods
xchg
mov
cmp
xor
sub
rorb
jo
inc
gs
dec
xor
insb
imulb
jae
shr
xor
mov
jnp
imulb
mov
push
movsb
xor
out
int
inc
xchg
nop
mov
mov
cmp
jnp
adc
jnp
arpl
movsl
push
loop
fildl
es
dec
insl
loop
in
lcall
xchg
and
in
fcoml
push
pop
dec
mov
addr16
imul
mov
jae
decl
mov
mov
pop
cwtl
jg
stc
push
and
mov
fwait
jne
mov
dec
jp
lea
push
adc
out
sub
cmpsl
lcall
gs
jb
lods
pop
shlb
add
insl
inc
cmp
mov
and
dec
add
stc
sub
cli
filds
sub
xchg
dec
cltd
loope
mov
repz
xchg
inc
push
fldt
push
mov
stos
sub
rol
mov
mov
pusha
sbb
pop
or
adc
ljmp
inc
pop
pop
in
data16
adc
mov
int3
push
ljmp
cmc
or
inc
mov
xchg
pop
cwtl
sub
fucom
fisubrl
data16
cltd
and
push
ret
shll
movaps
loop
xchg
sub
and
mov
xor
lods
xchg
insb
mov
inc
int3
in
push
fchs
cwtl
and
mov
imul
xchg
pop
pushl
push
adc
stc
repnz
xor
outsb
pop
inc
pusha
mov
adc
jno
mov
or
shr
sar
cmp
scas
jns
sbb
inc
call
cmp
push
inc
xchg
ret
rcr
sbb
fs
or
scas
xor
lea
and
fs
xchg
xchg
inc
inc
xchg
push
xchg
jo
xchg
mov
es
mov
pop
es
int
out
inc
insl
fisubrl
jg
xchg
scas
int3
mov
mov
cli
aad
cwtl
mov
es
lock
rorb
push
stc
xchg
xchg
cmp
rcrl
sbb
fidivrs
push
test
lods
repnz
hlt
fistps
pop
movsl
ror
ret
aaa
lock
and
jg
loop
push
jae
repnz
mov
mov
clc
pop
nop
mov
fstpl
mov
xor
inc
rol
sub
mov
lods
imul
jae
popa
mov
aas
ss
divb
push
enter
dec
mov
jbe
mov
mov
das
test
out
shlb
lahf
aam
dec
jo
imul
push
mov
and
xor
jmp
daa
mov
popa
fcmovnb
bound
sub
mov
or
and
jp
push
pop
lcall
and
negl
mov
push
cmp
fcoml
add
cmp
repz
sub
sarl
jecxz
outsb
jne
dec
lret
js
stc
outsb
xor
inc
stc
push
push
icebp
jae
je
adc
push
loopne
push
sub
out
lret
push
in
nop
imull
xchg
je
sbb
xchg
cli
ret
inc
inc
lret
shll
sub
scas
jno
adc
jns
es
add
insb
push
lret
andl
xchg
ljmp
dec
inc
test
pop
stos
push
aaa
inc
add
or
ror
add
sub
out
push
inc
push
popf
adc
cld
jmp
mov
xchg
adcl
mov
in
test
sar
xor
sbb
mov
inc
inc
std
test
cmp
shll
jbe
dec
fdivl
add
push
pop
lods
pop
xor
int3
cmp
rorb
subl
sbb
popa
in
dec
jg
or
filds
lock
orl
push
xchg
mulb
adc
xlat
stos
into
xchg
pusha
add
cwtl
jbe
or
jl
or
lret
mov
adc
pop
test
repnz
lret
adc
mov
data16
xor
sub
jle
mull
hlt
jl
stc
inc
ljmp
cmp
cmp
or
dec
mov
xchg
push
pop
push
test
pop
insl
test
pushf
push
mov
lds
ja
or
pop
sub
mov
int3
std
jns
cwtl
inc
jle
push
sbb
mov
push
add
cmpsl
jecxz
insl
mov
inc
test
lret
xor
loop
sub
inc
or
fisubl
mov
das
sbb
sub
xor
insl
js
cli
outsb
mulb
int
mov
sub
cmp
sbb
test
stos
xchg
adc
imul
pop
outsb
loope
add
aaa
fidivl
fs
and
cmp
stos
in
adc
bound
jno
jge
mov
je
mov
xchg
pusha
sub
stos
and
pushf
pop
testl
mov
les
incb
cmpsb
ljmp
add
pop
pop
mov
push
mov
and
fcomps
iret
je
jns
imul
or
add
xor
dec
jle
scas
pop
sbb
aas
ljmp
pop
in
mov
shll
sbb
mov
clc
jae
enter
mov
fdivr
jns
inc
push
jbe
dec
push
push
ret
xor
fs
lock
xorl
adc
pusha
je
dec
pop
sbb
loopne
dec
sbb
push
lcall
and
das
rep
dec
inc
and
inc
xor
aaa
fistpll
mov
dec
xlat
subl
ret
push
sbb
aaa
pushf
cli
lret
outsb
lea
dec
pop
data16
mov
jno
mov
mov
loopne
pop
and
aam
outsb
or
pop
mov
sub
jp
movsb
aam
hlt
push
fmuls
nop
scas
ja
lea
lret
call
nop
push
test
fnstcw
das
xor
xor
or
lock
pop
leave
cmp
lret
lret
dec
cmp
mov
mov
addr16
adc
fstpl
add
pop
out
repz
dec
les
sahf
xor
inc
sub
push
call
mov
pop
mov
jge
aam
hlt
inc
mov
ror
cmp
push
inc
daa
gs
ds
dec
inc
xchg
dec
xchg
std
mov
xor
mov
push
je
fdivrs
jle
iret
adcl
mov
adc
jl
divb
call
mov
in
xchg
sbb
lcall
les
movsb
pop
jae
add
pop
divb
inc
scas
xchg
mov
dec
andb
add
dec
int3
pushw
outsb
scas
push
addr16
xchg
out
or
cmpsb
cli
stos
sub
mov
cmc
je
repz
push
clc
mov
dec
dec
adc
xor
mov
xchg
lahf
sahf
sub
into
fnstcw
ljmp
jp
push
lret
jmp
insl
ret
jp
repz
mov
push
sbb
shlb
in
pop
mov
hlt
mov
cmp
cmpsb
lock
mov
mov
mov
scas
out
or
add
mov
pop
jle
mov
fimuls
sbb
aaa
scas
ss
cwtl
imul
daa
clc
sbb
dec
jecxz
shr
hlt
inc
adc
repnz
pushf
fcmovnb
sbb
pop
es
push
inc
jae
xchg
mov
rcrl
mov
dec
mov
in
dec
mov
cmc
jge
sub
ss
adc
ret
and
into
aam
and
mov
ljmp
jmp
fidivrs
aam
pop
pushf
inc
lea
leave
enter
loop
sub
push
and
jle
jmp
cld
out
lods
add
xchg
jp
xlat
das
outsl
or
fdivrl
mov
mov
in
call
mov
push
pop
bound
xchg
cwtl
pop
sbb
sbb
mov
out
dec
jb
inc
xor
jo
cmp
mov
add
jnp
jge
stos
es
fcmove
add
cwtl
out
dec
push
lret
int3
das
mov
ret
arpl
call
xor
add
sub
mov
fsubrs
jle
adc
addr16
adc
mov
sub
je
into
ret
mov
call
add
insl
ja
lock
lret
mov
clc
in
lock
mov
jge
std
push
jp
push
xlat
jge
mov
and
inc
hlt
movsl
pop
inc
scas
lret
pushf
cmp
ret
in
fs
repnz
enter
and
pushf
fdivp
loopne
mov
mov
or
sbb
dec
mulps
and
adc
lea
lret
cmp
mov
fmuls
icebp
stc
ds
mov
clc
mov
arpl
dec
sti
icebp
mov
mov
cmp
aaa
daa
xchg
movsl
imul
es
inc
pop
in
imul
inc
in
mov
cmpsb
xchg
daa
lds
call
mov
or
xchg
loopne
mov
or
gs
push
jns
or
add
add
data16
cmp
push
es
xchg
stc
rolb
aaa
pop
mov
xchg
and
push
cmp
es
pop
insl
imul
in
xchg
jo
jbe
jne
and
push
xchg
sub
pop
mov
sbb
adc
es
fidivs
mov
dec
mov
xchg
fmull
jge
pop
add
inc
or
xor
mov
and
add
out
test
lds
adc
jl
adc
push
out
xor
les
into
xchg
pop
add
push
pop
mov
jle
pushf
rorl
inc
mov
xchg
inc
and
jle
xchg
gs
decl
stc
cli
rcr
sub
and
out
jg
dec
xchg
jge
mov
xchg
bound
pushf
jge
cmp
sbbl
inc
out
dec
mov
arpl
hlt
popf
fnsave
cmp
cmpsl
jl
dec
xor
or
add
int
mov
faddl
xchg
cltd
mov
cs
fs
dec
rclb
les
ret
adc
sbb
fs
mov
pushf
xchg
jb
daa
pop
pop
and
div
outsl
loop
lds
arpl
xor
pop
mov
imul
cmp
dec
jle
push
mov
dec
int3
loopne
les
notl
fwait
dec
out
jno
mov
add
adc
decl
rcrl
add
mov
subl
mov
popl
mov
jg
int3
out
xor
aaa
shlb
jns
jmp
cmc
push
sti
pop
push
les
test
popf
popa
and
orl
cmp
add
data16
test
and
pop
xor
repnz
aas
mov
xor
mov
fadd
mov
insl
in
inc
hlt
add
je
shlb
addr16
xchg
mov
sbb
fisttps
sub
into
ret
int
sti
adc
negl
add
and
popa
mov
xchg
cltd
xchg
xor
pop
call
jbe
jae
inc
in
jg
jae
dec
pop
cmpsb
push
cmc
xlat
push
sub
or
int
leave
jg
cli
in
jmp
push
xchg
lcall
lret
adc
das
or
and
fdivrp
dec
mov
int
mov
lds
pop
sbb
fcmove
jp
push
out
popf
pushf
mov
in
mov
lcall
add
mov
or
stos
lds
sbbl
xor
and
push
pop
ret
jbe
xor
scas
and
mov
jmp
sbb
mov
cmp
sbb
cmp
dec
into
incb
subb
lods
hlt
push
add
jg
or
jae
scas
shlb
pop
addr16
xchg
sti
pop
es
ds
push
shlb
repz
dec
addb
mov
ljmp
mov
rolb
add
fisubrs
fstpt
lret
adc
ss
jae
dec
pop
ret
sbb
sub
push
aas
mov
pop
xor
inc
push
push
cs
mov
jne
pusha
movsl
xlat
add
popa
test
outsl
jne
imul
or
sbb
xchg
mov
stos
jecxz
or
push
pushf
push
loop
mov
test
pop
imul
repnz
xchg
mov
and
adc
fiadds
out
fisttps
pop
mov
dec
out
lret
cmp
push
movb
push
lods
mov
shll
fs
mov
mov
cmp
daa
cmp
jbe
cli
and
int3
jae
iret
push
sbb
fiadds
cld
into
call
and
sub
ficoms
arpl
mov
cld
lret
stos
andb
cltd
fbld
mov
cmp
push
dec
and
pop
lock
lds
out
xor
or
in
add
lods
mov
hlt
dec
push
orb
or
push
xchg
es
shl
ss
pop
daa
mov
lcall
bound
mov
movsb
jmp
fistpl
ljmp
mov
dec
aam
add
and
mov
or
loop
push
push
push
hlt
aad
ss
mov
jnp
mov
lcall
or
aad
push
add
ja
xchg
aas
addr16
and
lock
mov
das
cmpb
hlt
or
sub
and
adc
xor
mov
sahf
repz
lock
adc
dec
xor
sub
xchg
fnsave
jbe
test
xchg
add
mov
inc
push
stos
insl
pop
pop
in
test
into
mov
fisttpll
aaa
adc
fiaddl
ret
xlat
movsl
loop
jmp
repz
xchg
insb
xchg
adc
pop
lods
mov
add
insb
xlat
push
sbb
mov
scas
or
out
sbb
sub
adc
in
fimull
das
cli
mov
mov
add
or
dec
imul
loopne
movsl
pop
mov
fldcw
sbb
and
leave
push
push
gs
int
stos
jge
xchg
mov
insl
lods
daa
jno
fistpll
push
aas
adc
mov
push
pop
repz
iret
hlt
inc
andl
jbe
adc
fldl
and
jmp
inc
aas
inc
jecxz
mov
aam
cmp
ret
mov
mov
or
into
dec
mov
repnz
xchg
imul
ds
xor
or
movsl
movsb
and
enter
pop
add
xor
mov
enter
in
mov
jecxz
aad
push
mov
dec
jno
aam
int
ret
fwait
mov
push
out
pop
dec
std
sub
pop
mov
outsl
dec
push
out
cmc
std
or
mov
push
add
orl
xor
sub
or
gs
das
xlat
notl
adc
pusha
dec
repz
lock
mov
ljmp
call
push
faddl
adc
xchg
dec
dec
ljmp
xor
xlat
scas
lods
cmp
pusha
fst
outsb
cmp
cmp
imul
mov
fs
push
and
mov
loopne
test
hlt
push
clc
cmp
mov
pop
sub
shlb
jge
daa
mov
xchg
cmp
cs
mov
aam
ficoms
push
push
les
mov
pop
and
mov
andb
mov
repnz
js
stos
pop
dec
mov
gs
iret
push
dec
xor
call
lret
sbb
mov
enter
xchg
pop
dec
ja
sub
loop
cs
mov
jmp
jmp
lods
mov
xor
mov
test
outsl
sahf
gs
std
std
pop
sub
syscall
out
xchg
cmpsb
push
dec
sub
arpl
stos
xor
pusha
call
aaa
jno
jb
mov
divl
add
dec
and
xor
sbb
jg
clc
movsl
mov
addr16
cmpl
xor
fbld
xor
ret
pop
jmp
sub
pop
cmp
fs
jb
xchg
je
jle
test
jmp
xchg
lcall
repnz
jp
stos
out
adc
test
movsb
divb
mov
or
lock
arpl
icebp
in
lret
fsubr
in
faddl
xchg
push
outsl
out
mov
mov
xchg
inc
push
ljmp
or
scas
xchg
aas
enter
or
les
std
xor
pop
inc
pop
xor
push
xor
dec
mov
shll
pop
jge
ljmp
push
outsl
jge
mov
push
ret
xor
cmp
inc
xchg
jmp
mov
or
xor
cmp
add
mov
sbb
pop
mov
push
faddl
mov
fisubrs
dec
aam
int3
movsl
das
sub
cmp
adc
sti
hlt
mov
mov
pusha
loop
arpl
loop
je
jmp
xchg
pop
mov
mov
mov
jp
shlb
aaa
mov
mov
lahf
adc
mov
dec
call
shll
lods
nop
inc
aam
enter
xchg
push
inc
movsl
mov
pop
pop
xchg
dec
test
inc
jle
lahf
pop
out
xchg
xchg
jle
mov
jae
fcomps
arpl
addr16
push
pop
xor
ficompl
push
repz
mov
in
add
cmc
jge
bound
mov
pop
int
jae
jle
jb
outsl
lcall
pop
mov
pop
jbe
movsb
cld
lock
pop
sub
jae
and
mov
or
fdivs
and
pop
mov
pop
fildl
aad
xlat
int3
mov
sarb
rcll
sti
sbbl
ret
sub
sub
pusha
cmp
xsavec
sbbb
adc
inc
xor
cmp
test
aad
dec
add
add
in
clc
scas
inc
mov
lret
lock
fiadds
lock
shlb
and
mov
outsb
int3
push
xchg
or
push
sbb
cmp
xor
add
and
negb
mov
test
cmp
pop
xor
xchg
jnp
mov
pop
das
cmpsb
enter
lahf
lret
push
mov
xchg
mov
jmp
and
mov
xor
push
lret
mov
aad
lock
lock
and
sub
jmp
nop
sbbl
add
pop
lcall
push
inc
repz
sub
sbb
adc
in
je
mov
pop
inc
sub
in
push
xchg
sub
mov
test
into
pop
adc
dec
push
sti
adc
mov
incl
mov
stos
xchg
imul
and
sub
jge
loop
das
iret
dec
movsb
cld
sub
into
or
aas
inc
ja
or
mov
das
clc
pop
pop
cmp
sub
or
lahf
ret
test
cmp
and
sbb
add
ds
sbb
jl
insb
scas
push
dec
lahf
popf
loop
je
and
clc
mov
fildll
mov
sub
mov
inc
lret
jg
and
push
test
cs
xchg
pop
stos
addl
fwait
test
dec
cmpsl
in
or
stc
int
mov
mov
dec
int3
inc
dec
insb
lcall
adc
mov
adc
rclb
hlt
repnz
xor
xor
xchg
std
inc
xor
or
dec
aaa
cs
pandn
jb
or
pop
loop
pusha
lahf
cwtl
subl
jl
mov
loop
sub
cmp
sbb
pop
fcoml
push
adc
lret
imul
jp
mov
test
sahf
mov
aad
imul
push
push
lcall
jae
adc
lods
push
cmpsl
or
xchg
jp
inc
xor
sub
hlt
jno
movsl
cmp
adc
mov
push
loope
pop
lods
inc
mov
adc
jl
ret
jle
push
mov
repnz
fisubrs
lods
mov
jb
ljmp
enter
shll
xchg
jmp
add
push
mov
xchg
and
pop
movsl
lret
fstpl
xchg
sti
sbb
cmp
jle
scas
test
shrb
pop
push
popf
test
out
stos
cwtl
or
push
xor
dec
mov
addl
cmpl
cld
add
sbb
jns
insb
sahf
cli
cmp
push
dec
and
fbld
and
and
bound
pop
call
push
sub
lcall
sub
add
mov
out
jge
xchg
cwtl
test
lahf
inc
ret
xor
cmp
mov
ret
add
jle
frndint
pop
out
xchg
test
test
add
mov
adc
xlat
push
mov
jmp
pop
sub
pushf
test
jne
lea
and
push
xchg
call
in
sub
mov
out
adc
ss
icebp
fnstsw
xor
loope
and
xchg
sbb
and
xor
xor
inc
scas
addr16
ds
sbb
push
and
fisubs
clc
insl
xchg
inc
fisubrs
pushf
pop
and
jecxz
cmp
icebp
fidivs
jle
iret
js
daa
lock
xchg
pop
int
mov
loopne
mov
add
stc
lahf
push
pop
xor
pop
or
fcomi
aaa
mov
js
bnd
int
pop
sbb
cmpsb
inc
and
jp
movsl
adc
fnsave
and
push
fcomip
add
xchg
mov
mov
ret
cld
mov
test
inc
mov
xor
pop
lret
sub
ljmp
daa
add
fiadds
dec
fninit
ja
aad
std
unpcklps
cmc
xor
das
jo
jo
les
mov
popa
scas
js
rorl
add
add
stos
jge
lods
pop
push
test
xchg
iret
pop
scas
gs
pop
stc
ret
cmp
mov
pusha
add
jp
subb
jae
fbld
mov
push
or
jno
flds
lcall
adc
add
aas
mov
sub
or
and
jg
sahf
adc
inc
adc
xor
test
lds
cmp
cs
pusha
divps
xchg
jl
pop
pop
imul
iret
sbb
in
jmp
cmpl
jnp
inc
repnz
adc
adc
ficoms
jns
cmp
push
stos
fs
mov
lret
push
mov
lods
jp
lahf
xchg
int3
inc
mov
xor
into
dec
push
add
cmp
cwtl
cmp
or
into
data16
fmul
pop
sbb
popa
adc
cld
ret
ffreep
rorb
int3
xor
movsb
aam
xor
test
gs
mov
dec
sbb
adc
loopne
out
push
and
sbb
pusha
mov
outsl
mov
jb
sbb
ds
cmp
jno
outsl
aam
and
sub
push
pop
push
xlat
xchg
xor
cmc
aas
ret
dec
into
fcomps
idivl
pop
sahf
mov
cmc
push
fstpt
idiv
push
in
aad
push
mov
or
mov
cmp
dec
in
pop
rcrl
add
lahf
mov
cmp
jbe
jbe
stos
iret
and
into
loopne
mov
xchg
push
and
mov
in
sarl
mov
mov
pop
cmpb
dec
or
stos
in
dec
ljmp
jp
jne
rcrl
xchg
add
cmp
lea
inc
cmp
mov
push
sbb
lods
push
inc
mov
push
mov
daa
jmp
mov
jp
mov
lret
std
lea
pushf
dec
pop
mov
rclb
inc
ficomps
pop
sti
cmp
dec
pop
lahf
pop
or
dec
popa
dec
mov
xor
mov
sbb
and
das
addr16
loopne
xor
push
mov
push
and
add
jmp
pop
jge
roll
imul
aad
popf
adcb
mov
inc
mov
xlat
adc
lahf
mov
cltd
and
aam
mov
inc
cltd
add
ret
sbb
lods
mov
pop
das
sti
sti
add
in
sti
cli
enter
popl
test
add
mov
pop
adc
sbb
mov
xor
sub
adc
inc
divps
jnp
mov
and
lds
pop
ret
rcrl
push
jmp
pop
pop
scas
scas
jae
pop
xchg
mov
push
popf
int
notl
sahf
daa
pop
mov
push
mov
std
subl
inc
mov
mov
xchg
adc
jg
dec
scas
push
jno
aad
gs
subl
xchg
adc
adc
aad
cmp
adc
add
xchg
push
das
repz
xchg
mov
mov
ja
out
xchg
adc
rcrb
rcrb
repnz
cmc
scas
mov
jp
gs
xchg
sub
jl
xchg
icebp
orb
sbb
jmp
aad
icebp
sarb
push
xchg
push
xchg
inc
inc
sbb
cs
jae
out
dec
dec
stos
add
scas
push
xchg
mov
push
in
stos
fdivp
or
push
mov
stc
aam
ljmp
pop
cmp
lods
mov
jne
xchg
scas
inc
or
jecxz
out
les
and
pop
shl
loopne
outsb
and
inc
and
stos
sbb
inc
fsubs
jl
std
lock
rclb
mov
imul
inc
sbb
dec
xchg
movsb
add
xchg
push
xor
push
jbe
ds
ljmp
push
push
inc
push
dec
cmp
popa
std
cmp
xchg
mov
jb
jb
bound
and
add
shlb
cmpsl
jp
adc
xchg
mov
or
add
and
stos
push
arpl
stos
andb
mov
into
into
sub
cmpsl
sbb
or
mov
pop
dec
lcall
push
mov
mov
movsb
mov
jb
test
sti
jle
aam
jl
mov
inc
sbb
insb
mov
mov
repnz
lret
pop
cmp
xchg
jg
adcb
aad
dec
lahf
shll
adc
aad
or
sub
mov
cmp
in
rorl
xchg
push
fwait
or
push
mov
es
int
cmp
in
cmpsl
outsb
cvtdq2ps
loope
lahf
add
and
xor
adc
pop
loop
inc
push
call
sbb
add
jg
mov
fiadds
inc
js
popf
add
out
mov
ret
xchg
test
out
mov
xchg
pop
adc
test
mov
adc
cmp
jl
test
es
test
and
subw
insb
or
pop
fidivrs
mov
sub
stos
enter
dec
and
jne
movsl
insb
nop
cmp
ja
out
insb
adc
dec
mov
sbb
adc
xchg
or
arpl
mov
popa
cmp
andb
dec
loope
mov
xchg
mov
adc
frstor
mov
xchg
cs
xorl
sbb
and
sarb
lret
icebp
enter
push
into
scas
mov
loope
idiv
dec
or
clc
dec
xchg
iret
and
cmpsb
adc
or
mov
popf
mov
pop
cmp
int3
fbstp
cmp
add
nop
mov
pop
cmp
mov
adc
cwtl
imul
inc
pop
mov
ds
imul
xchg
lock
lahf
dec
mov
add
and
xchg
add
push
nop
sub
push
js
rcll
je
sub
outsb
add
dec
scas
aas
push
into
inc
mov
xchg
cmpsb
dec
test
movlps
mov
sbb
adc
and
es
and
push
or
jno
sbb
pop
mov
or
leave
cmp
sbb
inc
int
sub
sbb
arpl
mov
mov
sub
sub
dec
adc
pop
cld
cmpb
mov
mov
aad
dec
sub
fs
in
imull
mov
push
or
jg
jle
cld
jbe
bnd
mov
loopne
lcall
xor
jnp
push
pushf
test
mov
pushf
xor
dec
add
mov
mov
mov
repnz
mov
sub
mul
loopne
popf
add
dec
dec
fnstcw
sar
jg
aad
out
inc
insl
enter
scas
mov
stos
mov
incb
psllq
ret
cwtl
jecxz
fs
test
sbb
add
push
push
ljmp
add
push
pop
jmp
lret
int
push
lret
repnz
cmp
repz
sub
jo
sbb
or
push
loopne
hlt
inc
cltd
pop
xchg
out
push
outsb
insl
insb
mov
adc
cmp
jecxz
lds
fnstsw
cmpsb
and
xor
test
jno
popf
push
lcall
ljmp
es
adc
or
inc
dec
pop
sub
jecxz
lcall
pop
push
adc
xchg
mov
das
ret
pop
push
inc
and
rcrl
push
das
out
fcmovnu
cmp
sti
mov
test
jge
shr
shlb
in
push
jl
fwait
jns
insl
lret
dec
cmp
pop
jg
push
std
mov
in
aaa
ljmp
fdivrs
push
xchg
xchg
in
frstor
lods
cmpsl
mov
push
add
pop
outsl
stos
icebp
and
xchg
clc
or
pop
inc
push
insl
loop
sbb
out
push
rorl
xor
xor
ja
fisubl
loope
ljmp
sahf
loop
popf
sub
mov
lahf
pushf
mov
data16
idivb
ret
sti
cld
sub
sbb
in
scas
ficompl
xorb
push
pop
xor
push
ret
xlat
xor
shr
jl
mov
pop
lret
hlt
fists
dec
repnz
repz
insb
inc
add
add
adc
sub
push
aas
fidivrl
fs
shll
cmp
push
cmc
movsl
mov
or
xor
shll
ljmp
ds
or
xorl
sti
inc
push
xor
push
loop
dec
add
xor
jo
sbb
out
pop
outsb
inc
js
or
dec
in
mov
arpl
lods
ss
jge
and
push
rclb
cmp
fwait
push
mov
xchg
adc
cmpl
sbb
mov
jge
push
out
xchg
sbb
fcom
into
lret
arpl
enter
call
aas
push
in
mov
inc
pavgw
out
xor
push
or
or
cmp
test
push
and
push
into
mov
mov
and
jns
adc
or
pop
test
stc
adc
dec
sub
mov
test
adc
pop
cld
std
stc
add
out
ficomps
fdivl
jle
fidivrl
mov
push
cs
and
leave
ds
pop
pop
cmp
mov
orb
pushw
idivl
mov
dec
into
mov
lcall
sbb
addr16
insb
jecxz
loopne
leave
dec
mov
fbstp
xchg
jmp
add
insb
mov
mov
or
mov
sbb
xor
xchg
cmpsl
pop
lods
orl
mov
cld
jno
ret
cmpsl
or
pop
adc
adc
iret
ret
sub
mov
xor
xchg
jecxz
lret
lcall
sub
push
div
mov
shr
adc
ljmp
jp
imul
xchg
jmp
mov
push
lret
or
sub
pop
cmp
dec
pop
shll
aad
insl
dec
inc
lret
mov
sbb
push
jp
and
xchg
cmp
pushf
add
push
push
mov
cmpb
test
push
mov
jle
aas
imul
test
test
int
xorl
add
mov
insl
cli
and
push
and
clc
movsl
divb
out
mov
sub
mov
adc
insb
outsb
mov
or
lock
int
jnp
inc
inc
cmpb
cmpsl
mov
sahf
dec
movsb
cmp
cmp
fisttpll
in
inc
and
je
or
pop
cmc
add
or
jo
push
pop
stos
sub
jb
arpl
cmpl
xchg
inc
push
dec
fcomi
test
mov
jg
lret
push
cltd
pop
sbb
adc
add
lods
fxch
in
mov
mov
xlat
mov
cmp
cltd
pop
mov
rol
or
sub
repz
sub
push
jns
and
repnz
into
cmp
mov
loopne
mov
jle
and
adc
fst
fisubrl
mov
and
push
loopne
movsl
enter
ffree
pop
xor
jge
jb
xchg
dec
xchg
xor
scas
xor
inc
xor
lret
iret
lahf
das
adc
inc
sbb
aaa
lret
out
push
inc
mov
sbb
pop
in
mov
push
scas
int3
cmp
push
mov
mov
mov
sbb
dec
insl
fisubs
aad
pop
push
or
dec
pusha
mov
pop
pop
popa
int
loop
scas
mov
sti
mov
es
rcrb
test
lahf
jg
inc
and
pop
rolb
or
fistpl
and
cmp
fdiv
and
out
add
int3
mov
repz
imul
sbb
cmc
call
mov
pop
lret
fwait
push
js
cwtl
cmp
jp
mov
sub
dec
lock
adc
pop
fiaddl
das
lds
xor
mov
aaa
mov
jecxz
pop
call
xor
pop
push
jne
insb
push
fcmovnbe
lahf
and
out
jp
fcompl
sub
std
sub
shlb
cmc
push
stc
cltd
data16
pop
mov
mov
push
xchg
mov
out
add
and
jne
mov
imul
xor
dec
iret
sub
pop
in
inc
sub
xor
xorb
sub
mov
ljmp
add
addr16
fnstsw
mov
ss
jge
pop
leave
pop
push
and
xchg
ljmp
pop
scas
enter
push
hlt
push
cmc
movsb
jne
daa
repz
ret
lret
test
cmc
jl
mov
sub
add
sub
ret
inc
push
mov
movsl
cmpl
mov
mov
loope
mov
jno
out
inc
aad
les
rorl
inc
mov
stc
icebp
jle
inc
mov
std
int3
sub
jno
leave
imulb
stos
add
sbb
sbb
cmp
ss
xchg
imul
inc
push
sahf
in
pusha
xor
fnstcw
xchg
gs
in
stos
cld
mov
popf
push
test
call
ds
arpl
sti
add
out
xor
mov
add
rcrl
outsl
leave
adc
mov
and
lret
out
mov
mov
outsb
mov
mov
adc
hlt
fisttps
sub
sbb
pop
idivb
jge
loop
lock
js
push
and
arpl
mov
ss
mov
push
mov
mov
sub
into
test
sbb
cmc
jmp
outsl
loopw
sub
add
jp
mov
jbe
xchg
push
push
loope
xor
or
stos
data16
popa
push
arpl
jle
adc
sub
push
add
arpl
insb
aas
ret
and
imul
lock
xor
mov
cld
sub
jmp
cmpsl
test
push
dec
adc
mov
xor
and
sbb
add
fdivs
in
shlb
dec
leave
std
cli
int3
arpl
jecxz
nop
jb
adcl
inc
std
jp
ret
jne
jecxz
test
fsub
movsb
sbb
roll
jmp
repnz
cld
ret
inc
inc
cwtl
js
inc
inc
pop
push
mov
mov
xchg
mov
cmp
sub
pop
in
mov
xor
dec
or
push
ss
xchg
jo
shrl
loopne
and
aas
sub
ret
dec
movsb
stos
cmp
iret
adc
gs
shrl
call
mov
test
rcrb
pop
insl
jg
test
mov
pop
bound
pushf
xchg
pop
lock
cmp
or
xlat
xchg
mov
xchg
push
ss
lods
sbb
inc
mulb
xchg
xlat
int3
add
outsl
adc
lods
outsb
ljmp
jg
ds
cmp
jp
in
or
mov
push
pop
ss
dec
movsl
leave
lods
dec
sub
mov
xchg
test
loop
or
sbb
stc
push
xchg
shlb
outsb
incb
jne
mov
sbb
lods
hlt
pop
adc
cmp
add
lahf
pop
mov
mov
push
fs
fldcw
cmp
dec
pop
lretw
lret
cmp
in
mov
adc
call
mov
iret
lahf
out
fcmove
jne
cli
inc
sub
cmpsb
shl
hlt
mov
and
out
mov
les
imul
adc
decl
jns
pop
pusha
roll
clc
repz
adc
leave
ds
movsb
pop
mov
add
sub
push
outsb
mov
cmp
hlt
sub
loope
xchg
mov
jns
cmp
lcall
scas
into
pop
xor
fwait
movsb
mov
lcall
inc
pushf
scas
mov
lods
les
std
daa
lods
sub
push
leave
push
ss
ret
cmp
mov
sub
sub
jo
pop
lret
jno
daa
fadds
insl
or
mov
mov
add
fld
jae
jg
fisubrs
mov
repz
imul
or
adc
pop
mov
or
pop
imul
ret
cmp
push
sub
cltd
cmp
int3
shlb
xor
jnp
xor
lea
and
cmp
pop
fildl
pusha
cmp
imul
push
loop
int
pop
jge
mov
mov
imul
sbb
adc
add
mov
shrl
xor
mov
aad
cmp
stc
xchg
ficomps
loop
das
rcr
xchg
dec
push
lods
cld
add
mov
outsl
sub
mov
aaa
mov
xchg
mov
insl
cmp
and
out
and
frstor
daa
pop
and
cmpsl
jne
mov
mov
adc
jnp
fstpt
jae
in
enter
mov
jge
push
mov
mov
inc
jmp
es
ds
pop
mov
push
push
dec
imul
xor
aad
push
inc
addl
sub
dec
and
test
insl
or
pop
jl
or
outsb
mov
movsb
insl
enter
sub
rolb
jnp
in
adc
inc
mov
and
mov
mov
mov
mov
jge
int3
mov
adc
adc
cmp
lock
jge
fwait
push
xchg
pmaxsw
les
imulb
loopne
fdivrl
push
rorb
sbb
jne
out
es
add
xchg
or
xor
cmp
scas
mov
aad
push
lds
xchg
imul
jnp
push
ret
lods
mov
cmp
xor
jne
mov
inc
pushf
lahf
pop
ret
std
insb
xchg
mov
mov
sbb
mov
jge
or
ds
leavew
push
test
or
push
mov
adc
pop
jb
mov
jae
mull
jae
mov
jp
loope
cmpsb
jg
pop
inc
xor
cmp
cmpsb
lret
je
xchg
aaa
cmp
xor
fstl
ret
cwtl
cmpsb
or
bound
shll
add
ret
out
sbb
sbb
xchg
pop
xor
xor
std
cmpl
dec
push
lea
cli
pop
mov
mov
jmp
adc
xchg
fisubrs
push
test
scas
or
bound
push
mov
fadds
popf
dec
pop
cmp
out
jle
mov
in
mov
test
add
push
movb
outsb
mov
imul
cmpsb
cli
pop
lds
arpl
test
sbb
mov
mov
ficoms
jmp
xor
int
roll
cmp
insb
adc
xchg
push
cltd
rorb
lret
pusha
in
in
pop
fisubs
inc
inc
sub
jp
adc
jl
es
daa
mov
pop
adc
lods
mov
sbb
ret
or
dec
sbb
mov
jo
mov
lret
push
cmpb
sbbl
lods
stos
mov
push
sub
arpl
inc
lret
adc
hlt
adc
mov
sbb
mov
push
das
outsb
call
out
push
loop
testb
rclb
cmp
push
adc
jl
int
xchg
mov
and
adc
popf
push
aam
cmpsb
sbbl
mov
xchg
xor
mov
jns
lock
nop
cmp
mov
shl
shrl
js
call
rcr
xor
mov
pusha
out
pop
xchg
jno
pop
adc
test
sub
fldenv
pop
dec
ds
sub
leave
out
mov
hlt
xor
out
xor
shll
push
push
iret
push
fcoms
outsb
inc
xor
push
and
out
mov
mov
push
scas
ror
enter
xor
lock
mov
ljmp
pop
lods
cmpsl
pop
mov
repnz
xchg
pushf
pushf
push
push
mov
sub
lods
loopne
pop
dec
cmp
sahf
jl
sti
shrl
cli
or
lods
xchg
push
insl
shr
gs
mov
div
xchg
jge
stos
sub
idivb
orb
sbb
or
aaa
pop
jge
adc
push
les
adc
adc
cltd
lcall
push
pop
imull
ja
push
test
xchg
jge
lahf
push
in
loop
fwait
cmc
xor
cli
sti
push
xchg
pop
push
push
in
imul
and
push
jl
jo
repnz
dec
sbb
or
and
stos
out
lcall
sub
insl
push
inc
clc
mov
dec
aad
add
cli
in
fisttps
jmp
jae
inc
adc
push
je
sbb
fistpll
mov
sbb
sbb
jmp
stc
mov
inc
out
in
cwtl
sbb
cltd
jl
mov
stos
loopne
pop
cli
imul
aaa
sahf
test
dec
mov
les
dec
jne
add
pusha
shlb
or
pop
das
hlt
les
add
in
jl
push
out
push
out
stos
mov
out
xor
add
sbb
dec
mov
lods
add
test
popa
sub
lret
adc
ja
add
rcrb
pop
jns
mov
or
les
xor
clc
scas
incb
jecxz
imul
xchg
or
pop
int3
push
or
shl
push
hlt
mov
int3
dec
insl
jg
cli
cmp
int
outsb
arpl
cmp
pop
enter
mov
add
add
scas
mov
leave
aaa
mov
xor
sub
xchg
into
mov
fs
xor
cmp
loope
shr
jo
cmp
xorb
add
mov
outsb
mov
in
mov
ljmp
pop
dec
and
popa
xchg
xchg
xchg
data16
pop
jb
or
sub
push
xchg
mov
les
lret
jne
cli
pop
xchg
imul
ljmp
out
mov
aas
jbe
aas
rcrb
mov
dec
cs
mov
and
pop
mov
push
scas
mov
enter
push
je
mov
scas
mov
aam
loope
out
aaa
ljmp
gs
repnz
push
loopne
movsl
shrl
js
jnp
add
xor
pushf
sub
pop
sbb
ss
mov
lret
mov
xchg
and
jae
pop
clc
inc
inc
aam
aas
pop
adc
mov
push
mov
das
shll
enter
mov
arpl
jnp
fs
mov
pop
jg
faddl
das
dec
fsubrl
mov
sti
xor
scas
mov
fisttpll
mov
and
pushf
jbe
jb
das
out
clc
push
das
xchg
mov
jo
aas
mov
add
push
adc
xchg
popf
xchg
out
out
adc
dec
mov
and
jl
addr16
xor
pop
dec
inc
or
ljmp
adc
xor
cld
jmp
xchg
jnp
cmpsb
push
rcl
frstor
add
adc
xchg
pop
mov
mov
je
fmulp
inc
or
jecxz
mov
mov
mov
rclb
add
cmc
mov
into
or
out
out
or
ds
xor
pusha
js
add
push
loop
pop
xchg
inc
xchg
aad
lods
push
push
push
jge
popf
and
inc
or
ljmp
add
sahf
int3
mov
mov
cmp
popf
cmp
inc
jl
out
lods
rol
push
loopne
or
adcb
and
leave
xchg
xchg
scas
sbbb
adc
insb
ds
jnp
push
jecxz
mov
fwait
sbb
pop
mov
and
les
dec
ja
xchg
cs
inc
cmp
add
leave
iret
jnp
fndisi(8087
push
stos
int
jge
jp
xchg
hlt
leave
pop
or
test
dec
pop
ret
xchg
inc
push
push
mov
dec
sbb
stos
push
test
aam
clc
nop
mov
cli
enter
test
push
xlat
iret
lds
add
xchg
cs
inc
mov
mov
mov
int
cmpsb
repnz
insb
arpl
pusha
sbb
jp
adc
adc
add
sbb
mov
sub
xchg
and
cmp
dec
pop
xchg
outsb
sti
test
in
stos
shrb
mov
cmp
sbb
scas
fdivrl
or
xor
mov
out
push
jae
jp
jecxz
lock
push
cmp
movsl
les
mov
lahf
lret
adc
mov
add
in
jb
out
xor
mov
enter
jl
or
lods
aas
icebp
cmp
xchg
jmp
jno
jl
mov
dec
test
xchg
adc
popa
bound
popf
fdivrs
xor
outsb
adc
dec
das
in
and
add
jecxz
dec
cmp
movsl
inc
push
iret
cmpsl
fnstcw
jl
mov
jl
mov
jae
pop
aam
sub
jne
ret
jnp
out
mov
mov
sub
jl
loopne
cmp
mov
sub
dec
movl
popa
xor
add
pop
add
adc
push
ja
aad
cmpsl
mov
dec
out
sbb
mov
mov
jmp
or
mov
mov
mov
xchg
push
jno
or
loope
add
add
push
mov
xchg
js
test
adc
sbb
adc
sbb
jnp
push
jo
lea
pop
imul
pop
repnz
int3
dec
iret
in
shrb
xor
jle
mov
xor
inc
xchg
scas
xor
stos
lcall
sbb
imull
idivl
lcall
popl
mov
add
push
sbb
or
je
xchg
fld
popa
fdivs
mov
daa
test
mov
mov
sub
mov
aad
hlt
fdivrs
mulb
cwtl
add
or
hlt
mov
mov
inc
test
scas
adc
call
cmp
pusha
mov
adc
cmp
and
ret
push
insb
sbb
les
pop
push
mov
dec
push
mov
ljmp
data16
push
cmpb
mov
xlat
mov
ret
adc
dec
inc
push
add
mov
sbb
dec
out
in
or
pop
add
jp
xchg
lds
dec
or
sub
cmp
add
jnp
ret
mov
ret
adc
sahf
and
add
lock
inc
cmp
push
out
es
pusha
and
inc
jecxz
and
andl
in
loop
mov
mov
adc
jnp
adc
movsl
es
adc
out
ss
cmp
mov
or
subl
ret
in
ja
je
inc
cli
cli
in
cmp
push
mov
or
test
mov
and
cmp
lret
jno
push
jle
pop
push
cli
sbb
xchg
in
lcall
mov
pop
test
cmp
push
inc
pop
out
inc
xchg
cmpb
push
pusha
xor
xchg
push
add
add
cmc
jl
data16
mov
sbb
movsb
dec
lcall
aam
inc
into
pusha
dec
loope
or
dec
xchg
pop
fs
cwtl
fiadds
es
xor
js
dec
dec
pop
cmp
insb
adc
ror
cs
mov
lods
xchg
adc
mov
insb
push
in
es
cmp
xor
lret
xchg
or
jo
mov
xchg
adc
jp
scas
clc
insb
sub
dec
out
loop
pusha
fldl
pop
xor
aad
cli
mov
dec
iret
sbb
add
les
inc
cli
pop
shll
jb
lcall
jp
or
aas
sub
pop
cmpsl
popf
les
adc
int3
pop
jne
ljmp
dec
mov
add
lahf
in
insl
push
pop
lret
push
fs
pop
loop
rorb
sub
or
inc
xchg
int3
enter
xor
scas
mov
fdivs
jns
push
pusha
push
sahf
or
out
pop
out
sbb
in
mov
cmpsl
mov
push
stos
cwtl
ret
mov
rorb
cmp
fs
fdivl
fistl
insb
xchg
jecxz
popf
pop
enter
xchg
mov
xchg
add
hlt
push
inc
popa
pop
outsb
add
push
pop
inc
aad
stos
lods
mov
out
in
jns
xchg
adcl
arpl
xor
icebp
cmp
jl
xchg
dec
fstpt
cmpsb
mov
lret
cmc
push
fwait
sbb
fs
and
clc
dec
jbe
call
aas
and
fs
test
std
jno
movsl
mov
cmc
dec
pushl
cs
fisubl
stos
das
adc
dec
sti
movsl
aaa
and
mov
or
jmp
cmp
addb
jge
pop
out
pop
add
cld
lret
lahf
lods
das
aad
jno
sub
mov
xchg
sub
xor
mov
std
push
ret
jg
push
cmp
mov
out
mov
clc
test
rcr
imul
mov
imul
push
test
psrld
mov
push
sub
sbb
and
popf
sub
pop
hlt
push
mov
mov
sbb
fmuls
shll
cmp
sub
addr16
jg
out
rclb
fadd
stos
in
ja
and
sbb
jne
cmp
xor
dec
push
pop
shlb
roll
xchg
and
orl
out
mov
xor
mov
rorl
add
out
jae
add
loope
and
movsb
pusha
outsb
das
jns
pop
lds
stc
jbe
sbb
jbe
dec
jmp
rclb
or
mov
adc
xor
xchg
insl
stos
arpl
and
push
test
cmc
dec
adc
stos
inc
fwait
and
popf
idiv
cmp
mov
cs
fisttpl
fwait
pop
jecxz
jb
sub
pop
jae
leave
jg
jns
fmull
pop
loopne
push
cmp
mov
dec
mov
mov
pop
das
push
add
lret
cltd
sbb
pop
jecxz
push
mov
lahf
push
rcll
fmul
xchg
repz
xchg
dec
xchg
push
xchg
jmp
jl
into
aam
repnz
mov
pop
xchg
sbb
xor
push
adc
cs
sbbl
xorb
or
lcall
sbb
mov
push
xchg
lahf
fidivs
sub
add
inc
push
jno
fs
push
xchg
int
sub
xor
loop
fld
pop
mov
pop
loope
mov
pop
das
sti
xchg
inc
inc
and
lcall
daa
pusha
enter
jno
leave
inc
lds
or
stos
js
cmp
pop
adc
pop
idivl
popa
mov
and
into
xchg
mov
mov
jl
rcrb
shr
mov
push
push
ficomps
cmpsl
push
int
stos
jbe
sbb
ja
pop
int
adc
push
mov
aaa
daa
and
mov
fildll
pop
test
add
pusha
xor
in
xor
scas
pop
adc
in
inc
push
mov
jmp
push
cwtl
adc
mov
mov
mov
push
xor
push
les
jae
mov
icebp
cmp
repnz
sti
lcall
inc
scas
clc
repnz
mov
dec
inc
add
bound
insl
cmpsl
enter
lock
fsubrs
loopne
pushf
int3
pop
push
mov
sub
mov
mov
out
mov
cwtl
dec
add
stos
fstpl
and
pop
test
pusha
xchg
mov
je
or
mov
aaa
inc
out
xchg
jl
popf
ljmp
xlat
pusha
adc
jne
push
mov
mov
push
inc
or
fisttpl
mov
cmp
into
pop
push
test
es
in
adc
loopne
mov
scas
adcb
or
mov
sub
mov
and
shr
and
rcll
adc
and
je
ret
out
dec
cli
cli
and
leave
xor
lret
jge
and
fmul
pop
sti
movsb
jo
jo
mov
cmp
jns
sbb
xchg
mov
popf
test
inc
xor
add
xor
inc
test
lcall
scas
pop
mov
lcall
call
push
inc
stos
cltd
test
inc
cmp
mov
lcall
sub
fwait
add
jmp
cmpsb
jo
adc
loop
scas
loop
leave
sbb
lret
push
xor
repnz
out
mov
mov
movsl
out
lea
mov
inc
adc
xor
cld
xchg
lret
ficoms
dec
stos
fucom
inc
out
push
mov
test
pop
adc
in
mov
bound
lds
xor
out
and
rcr
lods
mov
jl
ja
int3
add
aas
sub
out
or
xchg
or
mov
mov
mov
sbb
dec
xor
sub
jb
mov
fs
sbb
dec
cmc
repnz
insb
rcl
out
mov
add
jne
mov
add
fdivs
or
imulb
jb
outsl
rcrl
nop
test
outsl
call
xchg
xchg
cmp
pop
or
sub
sbb
pushf
sbb
ret
sub
iret
pop
imul
enter
pop
pop
mov
dec
sub
cli
repz
lret
mov
insl
add
cmp
icebp
and
cmp
add
mov
ss
xchg
int3
mov
cwtl
out
mov
nop
push
hlt
dec
push
fs
lret
xor
jno
cmp
jecxz
mov
sbb
lahf
ja
push
loopnew
xchg
push
add
sti
sub
pop
into
call
sbb
mov
lods
test
movsl
loop
sub
cmc
cmp
and
mov
jecxz
inc
push
mov
shr
sbb
adc
mov
xor
in
dec
mov
ja
xor
test
divl
roll
pop
cltd
xchg
mov
add
ret
sub
sub
or
inc
outsb
push
push
scas
push
pop
xchg
mov
ficomps
jge
das
mov
leave
fimuls
jb
cmpsl
jno
and
xor
movsb
push
xor
outsl
mov
push
lods
out
lret
mov
shlb
push
jle
or
pop
jo
jl
bound
in
mov
insb
inc
jnp
das
lahf
je
fimuls
sbb
add
sbb
into
cs
or
out
scas
sbb
push
xlat
inc
cmp
mov
imull
xor
aaa
int3
or
fsubrl
repnz
addl
mov
lock
mov
xor
mov
cmp
lds
jp
leave
lahf
outsl
pop
jb
das
or
mov
sub
mov
mull
lahf
lcall
pop
shll
jne
sub
adc
icebp
mov
pop
aaa
dec
add
fimuls
dec
adc
push
fwait
dec
xchg
xchg
jp
push
xchg
jmp
mov
push
adc
xor
pop
call
lcall
std
adc
add
push
imul
add
pusha
mov
lea
push
or
push
push
push
push
mov
mov
mov
and
shr
xor
sub
shr
imul
not
inc
loop
pop
pop
pop
pop
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
