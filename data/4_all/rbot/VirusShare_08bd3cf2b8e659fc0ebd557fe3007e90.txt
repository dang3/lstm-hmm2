gs
inc
fimuls
repz
jnp
sub
jae
jle
jae
in
xor
mov
dec
or
jle
sub
int3
js
loope
ret
insb
dec
pop
repnz
cli
inc
fmul
adcb
or
ja
ret
aad
stos
lcall
fidivl
add
and
dec
xchg
fiaddl
scas
fisubs
ret
mov
in
jns
insl
add
bound
or
je
daa
cmp
rcrl
lahf
cmp
pop
mov
rcll
sbb
popf
mov
mov
lret
push
bound
pop
mov
push
and
leave
sbbb
ljmp
mov
mov
fadd
pop
rol
roll
add
xchg
pop
mov
das
nop
xorb
inc
adcb
sbb
jecxz
mov
pop
sarl
roll
ret
xchg
into
mov
inc
lcall
imul
cwtl
add
sub
push
or
sub
dec
ss
mov
or
out
push
pop
jb
jno
fwait
add
add
cld
xchg
mov
and
in
imul
lock
gs
mov
cmp
adc
stc
iret
fisubs
dec
adc
aam
and
out
xor
andl
push
cwtl
loop
xchg
inc
ja
ret
mov
es
pop
movsb
and
push
and
push
xchg
pop
push
idivb
inc
add
in
fnstenv
and
lret
sti
inc
daa
mov
sahf
mov
mov
roll
jo
das
dec
scas
pop
push
pop
in
and
out
add
ljmp
adc
add
inc
pop
leave
push
jno
mov
dec
xchg
xor
stos
in
ficompl
inc
out
test
lods
arpl
es
ss
subl
sub
and
js
add
sbb
call
and
jo
jne
inc
mov
aad
mov
push
lret
or
notl
enter
mov
hlt
out
sub
loopne
sub
add
adc
xchg
sbb
loop
int
xchg
test
xlat
mov
test
lret
adc
push
pop
sahf
clc
add
dec
lock
fwait
mov
push
adc
mov
out
fisubs
fisttps
push
sbb
sbb
stos
fdivrl
xchg
add
pop
icebp
mov
and
ja
mov
icebp
add
and
shrl
sub
stos
lret
movsl
push
out
inc
mov
or
push
lret
hlt
int3
sti
inc
clc
xor
pcmpeqd
mov
dec
inc
xor
push
push
out
add
repz
test
xchg
inc
xlat
sbb
and
pop
adc
mov
repz
inc
cwtl
in
inc
fisubl
mov
hlt
mov
movsl
inc
cmp
es
push
rep
je
jg
pop
cmpsl
inc
ljmp
int
pop
sub
mov
dec
fimuls
xchg
rcll
cltd
mov
jno
fidivrs
add
jg
mov
sub
inc
fildll
dec
clc
js
add
in
cmp
xchg
xchg
mov
call
iret
dec
bnd
sub
jp
inc
jecxz
std
push
inc
int
xor
test
int
in
scas
js
inc
insb
negb
lea
or
enter
ds
pop
sar
int3
sbb
insb
ja
sub
in
push
xchg
dec
pop
fdiv
xchg
shl
cmp
scas
divps
jmp
jne
jo
popf
add
jbe
jno
adc
cmpsb
pop
scas
mov
xchg
or
test
repnz
jp
add
mov
xchg
xlat
dec
inc
fdivr
cld
pop
jo
icebp
lea
push
xor
sti
aas
mov
or
push
sahf
mov
roll
mov
dec
mov
inc
stos
cmp
pop
add
dec
leave
xchg
shrl
sbb
cmp
inc
adc
and
sbb
icebp
xor
fisubrs
ret
fsubrl
xor
out
sbb
add
cmp
sahf
enter
cmpb
out
sub
push
fnsave
cmp
sbb
ljmp
mov
cmp
xchg
pop
push
in
mov
mov
or
dec
lds
pusha
out
dec
mov
insl
rol
sbb
inc
leave
xor
pusha
call
mov
out
mov
add
push
or
pop
movsb
pop
fsts
dec
cmp
mov
movsb
jns
aas
xchg
icebp
jmp
and
and
and
out
xor
test
fcmovne
leave
mov
cmc
dec
int
pop
sub
addr16
pop
mov
sarb
fsts
iret
ljmp
and
and
inc
sub
xorl
xchg
mov
int
test
jge
jecxz
push
cmp
pop
into
cltd
loope
mov
dec
subb
jbe
je
inc
xor
push
insl
pop
xlat
and
mov
mov
cli
nop
pop
cwtl
js
fs
jns
cmc
xchg
addb
std
enter
bound
fisttpll
jg
divb
sub
fstp
adc
push
cmp
fists
dec
scas
cmp
push
mov
inc
mov
daa
test
xor
add
xor
movsl
loope
adc
push
xchg
out
cmp
lcall
inc
lret
jmp
sub
hlt
adc
sbb
lahf
mov
mov
jle
cmp
dec
ss
xchg
push
lahf
mov
sub
jl
or
sbb
mov
xchg
fdivl
mov
xor
sub
push
cmp
mov
xor
jle
or
xor
insb
js
out
lcall
stos
ljmp
add
add
jle
push
sub
icebp
dec
lods
xor
addb
xor
rep
push
mov
popf
sahf
xchg
mov
pop
popa
xor
mov
xor
xor
cmp
adc
fsub
jle
test
imul
lock
or
leave
mov
in
enter
mov
cmp
add
sub
popa
xchg
inc
mov
mov
testl
cwtl
inc
push
sbb
pop
lds
push
jmp
xor
popf
dec
mov
pop
xchg
jns
stos
push
add
pop
ret
cli
lods
xor
and
int3
mov
iret
into
jl
lea
inc
mov
idiv
jbe
xor
data16
in
xchg
icebp
lds
icebp
mov
cmpsb
out
cmp
add
fstps
scas
pop
lock
subl
jle
pop
cwtl
rorb
out
jne
cmp
dec
jl
push
movsb
inc
push
cwtl
cmp
lds
lret
icebp
rcrl
adc
and
call
sarl
test
pushf
cld
loope
sub
push
push
sbb
jmp
mov
push
outsl
mov
sbb
jmp
jl
pop
outsb
icebp
aas
jmp
aas
pushl
loopne
push
orl
aas
pop
cmpsl
movsb
inc
dec
mov
xchg
mov
push
cli
cwtl
aam
cld
xchg
dec
lret
xor
orl
mov
outsl
jb
cwtl
cmpsl
adc
mov
xor
std
xor
dec
outsl
cmpsl
sar
stc
push
mov
dec
in
mov
and
push
nop
loope
in
inc
test
pop
scas
stc
ds
sti
stc
out
cmp
sbb
dec
stos
ret
adc
adc
mov
sub
cmp
adc
inc
shr
mov
mov
int
rorb
xor
loope
pop
sub
and
int
test
lahf
mov
dec
jl
or
push
dec
mov
jle
stc
jne
out
je
jno
lea
jo
aam
xchg
dec
jmp
test
addr16
add
mov
cmpsb
into
pop
icebp
xor
fnstsw
loopne
inc
adc
mov
push
inc
in
pusha
test
mov
mov
ss
xchg
sub
xor
inc
dec
pop
lea
sbb
mov
ja
dec
arpl
mov
push
scas
movsl
cli
fwait
xchg
divl
in
mov
jae
mov
mov
popf
iret
outsb
out
data16
sbb
add
je
lock
lcall
cmp
xchg
xor
and
sub
cld
add
inc
iret
mov
bound
mov
xor
pop
das
jo
cmpsl
pop
or
fcomi
add
mov
leave
int
mov
mov
mov
cmpsb
dec
mov
loope
xor
push
mov
dec
inc
or
jo
stos
add
sub
mov
test
iret
adc
daa
movsl
sbb
or
sbb
cmp
jnp
push
push
cmc
cmp
mov
aaa
fldl2e
sbb
les
shlb
add
adc
cmp
ds
add
je
dec
stc
push
ds
into
cli
loopne
sahf
mov
jg
cli
lds
and
jae
adc
fdivp
cli
cs
dec
lods
jecxz
dec
push
jnp
xor
loopne
cld
cmpsb
mov
jle
jg
push
pop
int
push
cmc
shrl
bnd
out
sbb
repz
xchg
mov
mov
lahf
mov
inc
test
and
lret
cmc
int3
out
icebp
aas
mov
cmp
in
mov
inc
push
movsb
cmp
shll
xchg
mov
push
mov
cmc
ss
clc
cmp
adc
ja
fistps
lods
dec
push
sarb
js
stc
xor
imul
mov
xchg
call
nopl
pop
sub
xchg
in
inc
jae
xchg
test
add
loopne
sub
rcr
lcall
push
or
inc
mov
mov
jno
in
or
xor
in
shlb
fmul
pushf
xor
pop
xor
aaa
adc
pop
cmpsb
test
pop
dec
std
rorl
addb
add
pusha
pop
clc
icebp
cmpsl
inc
testl
dec
aad
aas
mov
xchg
pop
sbb
daa
pop
iret
orl
imul
insb
sbb
test
cmp
test
push
jno
xor
mov
dec
lret
rorb
lcall
mov
fisttps
lea
scas
pop
cmc
mul
mov
adc
mov
and
push
xchg
es
sahf
popa
adc
cltd
popf
add
sahf
ja
jnp
push
pop
movsb
daa
cmp
sarl
or
lock
adc
pop
xchg
test
xchg
and
lods
jge
in
imul
popf
fdivs
xor
sub
out
push
push
out
cltd
cmp
test
lea
scas
sbb
inc
jne
lret
shrb
xchg
mov
cmpsb
push
sti
je
and
aad
cwtl
data16
js
cmpb
dec
inc
push
das
addr16
inc
iret
roll
fadds
lea
sub
cmp
mov
adc
mov
mov
pop
jnp
iret
aad
fisubl
mov
test
ss
push
stos
insl
mov
or
data16
jp
pop
push
cmp
mov
mov
lret
je
mov
rcl
popa
pop
adc
jnp
mov
xor
xor
jb
jbe
fwait
jns
mov
cs
mov
lahf
sahf
test
dec
popf
jne
cmpsl
xchg
push
pop
rcr
sub
into
ljmp
mov
adc
test
push
cwtl
imulb
mov
cld
pop
ror
je
mov
sub
adc
mov
inc
xor
fcos
fstl
pop
lahf
xchg
mov
push
xchg
mov
inc
aam
mov
jmp
ret
pop
fs
or
or
mov
push
pcmpgtw
mov
nop
loope
mov
je
mov
add
outsb
xchg
cmpsb
xchg
ds
cmpsb
insl
inc
inc
or
adcb
test
in
mov
enter
xchg
sub
int
test
fmuls
aas
popa
repz
sub
repz
pop
xchg
add
sbb
sti
mov
aam
jns
lds
in
jle
mov
in
mov
imul
mov
mul
ja
xchg
mov
jp
ja
iret
sbb
fdivs
or
nop
aas
jg
push
filds
xchg
xor
in
push
jmp
icebp
push
inc
jbe
aaa
dec
fists
repnz
cltd
jl
jp
data16
xchg
inc
sar
outsl
ja
sbb
jo
sbb
mov
inc
and
xchg
shlb
add
xlat
xchg
ljmp
lret
jb
in
out
rcll
stc
add
pusha
mov
add
imul
jbe
sarb
je
sbb
lcall
test
cmp
cmpsl
xor
mov
aaa
and
lahf
test
jmp
pop
pop
out
mov
sbb
fbstp
pop
add
sahf
mov
mov
and
or
mov
push
pop
xchg
xor
or
sub
das
mov
pop
pop
scas
int3
filds
ret
pop
jecxz
pavgw
movsl
es
sub
subl
push
insl
mov
out
movsb
aad
push
sbb
adc
add
xorl
mov
push
mov
jp
nop
xor
xor
mov
sub
inc
ret
cmp
mov
jbe
cmp
sti
iret
sub
ret
inc
inc
popa
iret
nop
addb
test
mov
cli
and
and
inc
fnstenv
ds
fdivrp
sbb
mov
mov
aaa
movsl
outsb
xor
or
jl
push
add
fcmovb
xor
popa
nop
addb
test
add
mov
xor
aad
lods
enter
dec
pop
popf
int3
push
pop
icebp
test
jle
xchg
push
daa
mov
xchg
sbb
xchg
ja
mov
mov
jp
clc
xchg
daa
enter
cs
mov
dec
fucomi
jp
and
xchg
cvtps2pd
mov
lea
sbb
push
in
rcrl
cmpsb
mov
lcall
movsb
adc
bound
lcall
outsb
pushf
adc
hlt
fs
or
sbbl
jecxz
shrb
add
dec
xchg
cmc
jnp
mov
add
in
out
test
out
aas
pop
cmpsl
mov
psubq
pop
push
pop
sub
xlat
pop
or
xor
mov
and
dec
nop
mov
cld
xchg
arpl
push
in
jmp
rclb
in
sub
cmp
push
sti
int
push
dec
xor
xor
adc
and
mov
push
inc
mov
test
push
imul
sub
jb
jns
or
cmp
sub
xchg
out
adc
pop
jo
jmp
mov
in
xor
cmpsl
sahf
ficompl
adc
push
in
inc
arpl
in
test
mov
movsl
loopne
cld
fwait
pop
push
xor
jns,pn
das
popl
lock
ds
sbb
jnp
insb
pushf
fdivrs
imul
add
jno
out
ja
cmp
mov
sbb
ljmp
rcl
mov
ret
ljmp
pop
mov
gs
or
lods
push
jbe
sarl
sbb
dec
add
pop
and
cld
imulb
arpl
cmp
xchg
ret
dec
xchg
rclb
sub
insl
push
sar
sub
fnsave
sbb
mov
adcb
push
jle
negl
fmul
mov
and
sub
in
add
adc
push
orb
sbb
lods
dec
mov
xchg
push
jne
scas
inc
push
add
or
sbb
add
in
lret
cmovns
xchg
mov
mov
insl
notl
stos
or
mov
jg
cmpsb
das
rcrb
jmp
popf
div
or
sbb
shrb
mov
or
stos
loop
in
or
js
dec
rcrb
push
movl
mov
push
push
aas
nop
inc
cmpsb
in
jne
imul
xor
js
shrl
imul
or
popa
mov
xor
xchg
mov
jmp
pop
xlat
jmp
adc
push
mov
in
push
dec
repnz
je
in
xlat
ljmp
jge
cltd
push
add
fiadds
int3
xchg
es
jbe
xor
fstpt
stos
mov
fidivrl
pop
sbb
in
xchg
aaa
int3
xor
dec
scas
fiaddl
pop
scas
pop
adc
decb
je
ret
test
or
fsub
call
fwait
jle
stos
rol
les
icebp
jno
lods
lods
sub
mov
fwait
dec
test
push
les
mov
xor
jb
sarb
adc
scas
jne
pop
inc
decb
aas
adcl
or
inc
add
mov
lret
or
test
fucomip
xorb
cs
add
xor
aas
out
add
mov
pop
cmpsl
sub
lahf
and
lods
cmpb
aad
xor
cld
or
xchg
add
cli
ljmp
fildl
push
gs
lahf
mov
sub
pusha
adc
shrw
xchg
sub
jg
xchg
pop
dec
lods
sti
ret
pop
dec
add
inc
fnstcw
xlat
int
ds
inc
inc
cmpsl
jbe
xchg
movsl
scas
aad
add
jne
push
lahf
cld
int3
aas
hlt
stc
out
cmp
fsubrl
add
inc
or
push
scas
dec
sub
imul
mov
leave
inc
shrb
pop
test
sarb
jbe
mov
das
jle
mov
and
push
mov
shrl
mov
test
fistps
fcmovnu
jae
inc
arpl
adc
mov
mov
stc
pop
pop
inc
adcb
jmp
jp
cmp
fs
scas
pop
add
xchg
and
cmp
xor
pop
jne
push
or
mov
stos
lods
and
cmpsl
push
mov
sub
push
ljmp
leave
mov
cmp
icebp
pop
je
sbb
imul
cmp
shll
xchg
call
push
mov
push
mov
jb
mov
jecxz
xor
sbb
fimuls
imul
dec
ret
cltd
fucomp
call
mov
jmp
xchg
mov
jmp
push
mov
call
out
sti
pop
mov
add
fs
mov
xor
push
lcall
es
cltd
notl
addr16
in
xchg
cmp
in
or
sub
adcl
sbb
int
add
ret
xor
fidivs
jns
mov
sti
es
mov
sub
add
ficomps
jno
mov
imul
cli
and
aam
mov
jnp
xchg
mov
stos
pop
cmp
mov
lahf
pop
sub
daa
fistps
inc
dec
mov
dec
int
sbb
std
jno
ljmp
dec
ljmp
inc
mov
dec
mov
mov
mov
enter
push
sub
cmp
or
mov
or
es
mov
imul
fwait
shr
sbb
xchg
xlat
pushl
sbb
pop
mov
mov
push
fsubrl
mov
dec
mov
je
ret
pop
incb
mov
in
popa
inc
cltd
mov
scas
or
lahf
adc
cmpsl
inc
sub
popf
les
xor
mov
push
mov
jmp
enter
cs
xchg
jmp
inc
and
mov
fwait
pop
addr16
mov
mov
mov
mov
clc
and
mov
insl
mov
lods
and
mov
outsb
push
mov
movsb
ja
lds
movb
xchg
sbb
or
out
fdivrl
js
or
out
and
jae
lret
hlt
jmp
adc
mov
xchg
cmp
or
popa
or
call
gs
sub
rorb
or
std
sbb
mov
push
dec
sbb
out
icebp
push
inc
movl
stos
iret
jp
negb
push
repnz
pop
push
frstor
jp
adc
out
ss
repnz
cltd
mov
push
mov
mov
repnz
icebp
add
and
or
pop
or
mov
inc
adc
cmp
lock
inc
enter
outsb
mov
in
mov
push
fwait
loope
ja
lock
jp
aaa
and
jge
xchg
scas
cmp
sub
jbe
adc
loop
push
xchg
push
push
lods
xchg
jle
push
mov
hlt
jnp
fdivrl
push
cmp
and
lods
push
cmpl
pop
test
cmpl
cmp
jno
insl
push
xchg
pop
push
xchg
and
dec
sub
sub
js
addr16
loope
push
jmp
adc
out
loop
data16
lahf
notl
std
les
sbb
mov
xor
ficomps
add
cmp
fsubrl
les
repz
loope
and
push
sbb
jle
inc
mov
insl
jmp
dec
insb
xor
repnz
shrl
mov
fsts
icebp
push
sbb
push
repnz
add
jno
mov
es
movsl
inc
adc
dec
pop
inc
icebp
mov
orl
scas
popa
dec
fists
jo
sub
je
lods
push
movsb
push
in
or
dec
fists
and
inc
mov
or
inc
jmp
push
mov
in
and
adc
or
sbb
das
sbb
adc
mov
xchg
mov
or
or
lods
inc
mov
adc
pushf
or
stc
andb
or
aas
test
jg
and
or
inc
stos
std
insb
sbb
orb
insl
xchg
mov
push
mov
mov
jae
xchg
cmp
jae
xor
mov
xor
mov
outsb
mov
cmpsl
repnz
sbb
sbb
push
scas
xchg
mov
sar
into
dec
dec
aas
imul
jne
sub
push
dec
rolb
fstps
fldenv
cmp
movsb
in
fmuls
mov
repz
adc
fisubrl
ja
pop
pop
dec
push
xor
fiaddl
cli
jne
jno
adc
out
push
ja
sarb
lds
add
je
jb
jae
mov
test
add
pop
movsb
add
mov
xor
ss
subb
les
add
ss
jle
add
inc
ret
dec
sahf
aad
or
movsl
jmp
and
cmpsb
push
jge
sub
js
fisttps
mov
inc
outsl
inc
push
aas
pusha
fcomps
mov
test
push
or
loop
lea
xlat
lret
xchg
sti
test
jns
pop
in
scas
dec
es
xchg
jnp
xor
out
in
stc
mov
adc
and
adc
mov
cmc
xlat
repz
mov
iret
dec
and
lock
fsub
les
pop
outsb
int3
and
mov
fsubrl
popa
cmp
sub
push
adc
fwait
out
outsb
push
cmpsl
hlt
sub
fs
push
pop
push
ret
pop
mov
icebp
xchg
loope
sub
or
mov
xchg
es
push
or
test
pop
pushf
push
jmp
or
add
xchg
dec
out
lret
or
cld
lcall
shlb
cmp
dec
pusha
and
jae
jecxz
stos
dec
int
xchg
push
js
shl
or
jg
push
push
cmp
adcl
call
arpl
mov
add
pop
stos
jae
or
pop
sub
cmp
add
test
jne
cmpb
arpl
ss
daa
aas
out
fwait
xchg
mov
loope
xorb
ret
push
inc
je
stos
push
xlat
add
test
mov
cmpsl
add
or
js
gs
outsl
jne
cmp
test
stos
push
pop
dec
mov
test
rclb
mov
sti
int
xor
shll
divb
icebp
in
ror
ret
jo
sbb
scas
push
pushf
shll
mov
fdivl
aam
pop
push
sub
sub
movsl
xchg
sarl
hlt
or
cli
push
sbb
test
adc
jne
sub
xchg
or
xor
cs
test
sbb
mov
push
lds
jp
jmp
dec
out
push
repnz
nop
mov
cmp
dec
in
fisubs
rol
pop
inc
jge
outsb
adc
sbb
xchg
cmp
dec
out
lock
fdivrp
jo
jge
lret
or
jge
ss
jno
cwtl
sti
das
push
sub
fcmovbe
popa
add
adc
mov
aad
dec
pusha
inc
neg
std
int
jbe
xor
orb
jg
jnp
into
cmp
aam
ficoml
jne
sub
pop
xchg
push
cld
xchg
add
mov
sti
or
fsubs
imul
out
mov
add
push
das
pop
sub
stos
sub
sbbb
pop
repnz
mov
cmp
pop
mov
and
mov
outsl
lds
mov
xor
lock
push
jge
andl
lods
push
push
into
outsl
dec
repnz
xor
jns
inc
popa
push
roll
jns
jl
cmpsl
je
inc
jne
shlb
and
xor
mov
mov
daa
sub
push
insl
mov
mov
bound
stc
add
xchg
pop
sub
iret
push
shll
cmc
outsl
fdivr
sahf
sti
cmp
xor
out
inc
repz
icebp
xchg
sbb
int3
xor
add
icebp
cmp
sbb
leave
or
mov
shll
jg
mov
or
bound
mov
cmp
ret
mov
pop
mov
ja
aas
mov
pop
aas
sbb
ljmp
cld
arpl
pop
mov
sub
cmpsl
dec
pop
mov
and
iret
rcrl
aad
enter
jg
shll
or
jge
inc
cmp
xchg
jmp
dec
call
fs
hlt
mov
imul
jmp
mov
push
cmp
dec
pop
jno
jae
xor
dec
lahf
cmpsl
popf
xor
mov
jl
imul
test
mov
mov
mov
or
loope
lret
dec
jmp
fstpt
cmp
fsubrs
push
sbb
or
jl
int3
and
or
popf
cli
sahf
adc
pop
movzwl
pop
pop
or
or
or
iret
aam
or
inc
mov
sahf
mov
adc
xchg
mov
imul
test
dec
js
dec
fcompl
ds
sub
cmpsl
mov
xor
pop
in
jnp
jle
test
sbbl
test
lods
test
iret
cmc
cmpsl
outsb
testb
in
jg
push
call
cmc
test
xor
into
sub
mov
and
push
pop
movsl
pop
mov
ror
lret
dec
jns
enter
js
shlb
lahf
fnstsw
xchg
jp
sub
lds
mov
in
dec
inc
sub
sahf
lock
push
arpl
mov
sub
add
cltd
lea
outsb
push
lods
popa
and
sub
imul
out
mov
decb
pop
shlb
or
rcrb
pop
sub
pop
ja
xorb
or
xlat
push
movsb
fistpl
xchg
fbstp
dec
cwtl
call
stos
in
push
or
jns
outsb
jmp
cwtl
adcl
fidivrl
push
rolb
and
jno
mov
in
push
dec
cmp
lcall
jae
movsb
loop
nop
loope
stos
lret
ds
ljmp
xor
xchg
jnp
dec
repz
stos
jg
xor
cmpsl
pusha
cmc
hlt
inc
ret
mov
pushf
jg
out
mov
dec
push
dec
addl
or
iret
ud2
sub
mov
mov
loope
mov
fisttpl
cmp
pop
ret
sar
icebp
xchg
test
ds
aad
inc
sub
push
divl
loopne
dec
nop
and
adc
notb
inc
cmp
inc
xor
sub
cli
incl
jp
dec
add
xor
adc
addr16
xchg
dec
call
je
sub
push
fwait
pop
stc
scas
loop
cmp
or
fiadds
pop
jbe
adc
gs
cli
stos
out
dec
icebp
repnz
inc
dec
pop
loope
out
test
adc
dec
push
rclb
pop
sbb
repnz
mov
out
mov
out
scas
movsb
arpl
xor
ret
imul
loop
push
cmpsl
mov
sub
sbb
test
add
fs
xchg
xchg
sbb
mov
fistpl
fucom
sbb
push
in
mov
mov
cli
mov
adc
add
xchg
jne
cmp
mov
lods
fsub
mov
lock
roll
add
in
lock
sbb
dec
sbb
sub
ret
cmp
and
jnp
push
cld
std
out
cltd
mov
call
out
adc
ret
jno
into
repnz
inc
pop
mov
jg
scas
cli
add
loope
adc
dec
sbb
mov
dec
xor
ret
insb
inc
dec
mov
sti
lahf
das
aas
sbb
jne
repz
mov
ljmp
test
inc
cltd
mov
lds
pop
ljmp
sti
je
dec
shufps
mov
jl
xor
jae
shlb
ja
in
out
pop
add
out
rclb
xor
jl
sbb
fwait
out
daa
mov
add
ficompl
cmc
scas
push
mov
sub
jno
out
jne
ret
push
cmpsl
test
insl
inc
aam
cmp
arpl
in
addr16
xor
add
mov
leave
adc
rorb
add
mov
ljmp
dec
sbb
push
int
pop
xor
push
push
push
add
fstpt
popf
jbe
scas
push
adc
xor
inc
xchg
rcl
shlb
sti
fisubl
andl
subl
into
pop
or
mov
jecxz
inc
sar
hlt
jns
xlat
sub
movsl
pop
pushf
and
lahf
stos
scas
jbe
jecxz
scas
push
jno
push
ja
add
ss
mov
js
jle
inc
push
rorl
in
bound
push
mov
imul
aaa
nop
lcall
adc
insl
popf
testb
mov
lcall
jo
sbb
add
sub
mov
pop
add
stos
in
xchg
push
fsubs
jb
out
sub
popf
push
int
add
inc
sub
inc
fwait
outsb
cmp
sbbl
adc
imul
dec
xchg
inc
sub
and
dec
inc
jl
inc
mov
push
arpl
cld
add
int
cld
cltd
pusha
mov
sub
cmp
mov
or
adc
loopne
popf
jae
push
xor
push
cmpsl
mov
cmc
push
cmp
xor
fistps
movsl
ficoml
bound
cmc
inc
add
test
and
inc
ja
sub
jns
aad
insl
push
dec
cmp
sahf
push
and
pop
lret
xchg
jnp
inc
sub
fistl
aam
pop
and
popa
lcall
pop
xor
clc
push
popf
push
and
mov
xor
or
sub
enter
cs
inc
std
cmp
addr16
adc
pop
dec
jne
sahf
xchg
stos
test
stos
inc
inc
add
in
pop
cmp
loope
imul
jmp
aas
jmp
mov
sahf
jns
stc
aas
in
test
outsl
sub
xchg
pop
mov
xchg
fistpl
adc
jo
repz
es
xlat
popf
pusha
ret
xor
mov
mov
leave
scas
or
inc
jmp
pop
in
arpl
stc
mov
popa
push
mov
ja
in
push
xlat
mov
push
int
hlt
jmp
mov
bound
ljmp
loopne
inc
cltd
mov
jno
sub
mov
ret
ds
mov
jno
lcall
gs
jge
mov
les
mov
sar
and
sbb
out
inc
int3
push
push
cwtl
dec
popl
daa
mov
adc
js
or
adcl
nop
fwait
std
xchg
int3
addr16
cld
out
pop
leave
mov
shl
or
arpl
xor
and
lods
jp
or
cmc
mov
fisubrs
lret
in
jmp
mov
roll
and
adc
mov
out
push
inc
jo
push
pop
mov
inc
cmc
jmp
dec
push
fcomip
dec
mov
lcall
xor
sub
mov
es
subl
enter
pushf
xchg
out
xchg
lock
fiadds
inc
aaa
hlt
dec
jnp
xor
mov
popl
adc
lock
push
les
mov
pop
lods
add
sti
nop
push
or
test
sbb
in
fwait
and
adc
mov
add
jle
jb
sub
daa
test
adc
adc
das
push
xchg
jno
dec
mov
mov
pop
in
xor
pop
cld
gs
insl
les
enter
push
push
adc
add
push
jge
call
js
or
bnd
mov
test
enter
and
xor
js
or
mov
loop
out
das
lods
mov
mov
dec
fistpll
pusha
lret
sub
mov
in
cltd
sbb
sub
sbb
and
pop
or
arpl
out
ja
sti
pop
xchg
mov
jne
repnz
inc
jb
call
in
rdmsr
sub
pop
call
jo
dec
cltd
mov
das
adc
push
jmp
loopne
ss
dec
fisubl
gs
repnz
xchg
xor
mov
add
and
xchg
sub
cli
xor
out
mov
sub
scas
nop
adc
leave
jp
add
push
mov
imul
rclb
cwtl
add
jns
sub
out
or
dec
in
or
jno
std
jecxz
fldt
sbb
arpl
adc
data16
leave
push
mov
cmpsl
add
aad
push
mov
inc
aad
adc
jecxz
push
lock
pusha
pop
mov
shll
adc
icebp
push
mov
sbb
pop
hlt
sub
mov
mov
push
cmp
sub
adc
pop
dec
fldt
jo
mov
jge
or
adc
inc
xor
cmp
das
shll
pop
push
nop
data16
jp
mov
daa
sub
repnz
sbb
cmp
pop
dec
es
jg
add
push
idivb
gs
mov
roll
test
loop
pop
jo
sti
sbb
popa
pop
movsb
push
aaa
jbe
cmpsb
mov
pop
fisttps
mov
addb
pop
mov
popa
lods
cmp
insb
add
xchg
push
xor
cmp
inc
int
cltd
xor
bound
lods
add
dec
xor
sahf
ljmp
iret
imul
stc
mov
push
cmp
mov
rcll
xor
pushf
insl
lock
insl
xchg
cmpsl
rcrl
bound
aad
mov
mov
out
cmpsl
mov
lret
pop
in
pushf
xor
or
insl
out
pop
or
repnz
cmp
xor
out
scas
faddp
mov
mov
add
sbb
and
fstps
and
imul
je
mov
fldenv
and
inc
or
jle
push
pop
dec
cmpsb
call
shlw
xor
mov
fbld
pop
sbb
sbb
cmp
cmpsl
les
xor
xchg
xchg
xchg
nop
mov
test
add
icebp
xchg
xchg
lret
mov
sub
mov
jmp
and
iret
outsb
push
imul
dec
cmc
lahf
add
cmpsl
cmc
sub
movsb
test
or
push
leave
test
outsl
loop
and
dec
jge
repnz
ds
clc
sahf
shll
shrl
test
mov
push
adc
or
out
fists
mov
cmc
jg
push
fisttpl
xchg
add
fwait
loopne
daa
xchg
cmp
cmp
add
mov
daa
out
mov
test
mov
cli
into
xor
jge
lea
cmp
or
mov
out
cli
dec
mov
das
cld
ljmp
repnz
pop
pop
fldenv
sbb
sti
sub
lret
sub
bound
lds
mov
mov
xchg
sbb
or
sub
adc
xchg
fiaddl
test
daa
push
jae
jmp
ja
mov
push
inc
push
cmp
test
fdivl
int
mov
pop
aam
das
mov
pop
sub
xchg
mov
or
pop
aad
cs
xor
fmuls
push
add
and
jno
sbb
scas
mov
leave
stos
rolb
adc
out
xchg
loop
mov
mov
jmp
outsb
xor
mov
outsb
int
or
bound
or
and
out
stos
cmp
test
add
mov
rclb
mov
imul
sbb
sbb
add
insl
jb
xchg
and
sbb
leave
scas
inc
aas
mov
add
xor
xchg
filds
test
ss
repz
pop
pop
test
imul
push
out
enter
add
dec
push
iret
stos
fidivs
jmp
or
loope
adc
push
std
repz
jbe
lock
mov
mov
mov
sbb
jns
int3
ficoms
mov
subl
insb
jmp
sahf
dec
jecxz
loop
outsl
ret
sbb
and
loope
mov
sub
ret
call
gs
leave
and
mov
push
movsl
push
fs
in
lock
outsb
ds
int
ret
xor
xchg
xlat
dec
fistpll
push
scas
leave
repz
cltd
in
dec
and
or
pop
inc
shlb
push
and
push
adc
and
pop
xor
pop
lods
push
xchg
in
fisttpll
mov
jp
push
rcl
bound
repnz
lods
jae
test
inc
ljmp
shll
adc
pop
ret
jne
andb
adc
pop
test
fnstcw
pushf
in
sub
adc
adc
js
cmp
insb
insb
jle
imul
ss
and
mov
lcall
inc
push
sti
hlt
sub
sub
js
stos
pop
lcall
into
inc
leave
ret
ficoms
enter
hlt
out
scas
imul
inc
xchg
cmc
jmp
fucomp
or
add
clc
mov
push
pop
sar
jecxz
daa
daa
sahf
adc
sahf
in
mov
xor
aas
shll
jge
cmc
ds
cmp
pop
inc
xor
insl
pop
mov
fimuls
andb
xchg
mov
adc
lcall
or
lret
mov
scas
pop
int3
jle
xor
cmpsb
lds
cbtw
mov
and
jno
dec
lret
hlt
mov
mov
int
daa
cmp
inc
pop
add
fs
jbe
pop
inc
mov
inc
ljmp
lret
xchg
ja
fucom
sub
mov
shl
stc
push
mov
sbb
popa
add
popa
add
repz
push
add
pop
mov
mov
inc
fcmovnu
jno
mov
sub
mov
add
je
adc
ss
int3
mov
int
lret
int
sahf
push
pop
jo
jnp
out
cmp
sbb
and
loop
or
dec
adc
sbb
mov
xchg
and
and
sub
jo
leave
movsl
push
add
loopne
mov
sub
imul
dec
fdivrs
nop
js
rorl
cmp
adc
popa
lret
cmpsb
sbb
add
scas
pop
arpl
push
clc
sahf
ljmp
dec
pop
ljmp
hlt
outsl
in
adc
add
add
fidivs
cmpb
xchg
or
movsb
add
xor
repnz
push
jbe
pop
orb
loope
test
push
inc
movsb
pop
insb
xchg
pop
fwait
pop
lds
iret
mov
push
adc
fisttpl
sub
inc
out
mov
cli
push
pusha
daa
adc
aad
shl
out
incl
mov
testb
jecxz
std
and
and
pop
and
loope
divb
stos
fisubs
gs
repnz
bound
mov
nop
dec
mov
popa
arpl
mov
or
movsl
pop
test
push
sbb
jecxz
mov
cmp
pop
xor
and
movb
or
sbb
mov
cmp
int3
xorl
das
shll
cmp
pop
cwtl
lret
xor
stos
xchg
je
fs
call
insl
jg
ljmp
xchg
mov
fidivs
mov
and
shrl
test
daa
rol
inc
out
clc
sar
or
int3
push
lock
jns
add
rcrb
pop
test
inc
fildl
je
std
mov
mov
nop
push
loopne
punpckhwd
mov
add
scas
add
or
shlb
pop
out
dec
pushf
sahf
test
push
add
das
pop
mov
push
pusha
icebp
fs
mov
jb
mov
dec
sub
mov
push
sub
inc
popf
adc
mov
or
cmp
scas
add
fstpt
inc
pop
movsb
adcb
adc
iret
push
xchg
arpl
fstps
test
and
cmp
out
aad
and
aas
out
je
pop
sbbb
hlt
sbb
repz
and
mov
mov
in
fcoms
enter
and
movq
cld
inc
cs
pushf
mov
cmp
cmp
pusha
sub
shrl
rolb
pop
push
es
frstor
mov
push
push
subl
dec
mov
cli
mov
jmp
lahf
or
scas
pop
sub
aas
lahf
xor
andb
out
int
push
insl
not
es
inc
les
std
jg
sahf
hlt
jg
das
or
call
outsl
jbe
mov
inc
cmp
jo
adc
push
sahf
cwtl
lea
out
sbb
scas
mov
xchg
lods
lahf
das
ret
and
xlat
pusha
mov
loope
mov
jmp
pop
ret
shr
lahf
arpl
sbb
dec
rorb
add
fdivrs
mov
pop
push
add
lock
dec
xlat
lods
inc
inc
pop
jge
mov
mov
cmp
sub
cmc
addr16
lds
in
sbb
dec
int
stos
jae
and
jle
loopne
and
adc
fldenv
sub
outsl
sbb
xor
aas
xlat
lea
lock
jecxz
push
sarb
shrl
insl
je
andb
inc
ja
mov
lods
xor
insl
pop
jns
xchg
xor
mov
pop
out
insb
ret
pop
cld
loope
and
or
das
xor
andl
pop
nop
xor
stc
pop
push
jns
cmc
mov
mov
push
jecxz
testb
mov
mov
subb
adc
stos
popa
ret
fwait
pop
cmp
xor
les
loope
icebp
test
mov
sub
sbb
addr16
hlt
sbb
jp
ljmp
push
out
cs
dec
outsl
push
dec
rcrl
jle
cwtl
aad
mov
lods
dec
push
push
inc
rclb
das
pop
push
lahf
cmp
out
pop
lock
and
addb
psadbw
fisubs
lea
cmp
xchg
add
ljmp
repz
ds
mov
push
xchg
push
xlat
cwtl
jne
repz
mov
shlb
adc
fbld
fnstsw
test
xchg
sbb
ds
mov
jb
xchg
adc
jle
ds
mov
jg
pop
jb
clc
subl
movsl
xor
and
int
cmp
imul
push
dec
push
outsl
adc
ds
jae
sbb
scas
lret
fnsave
cs
das
adc
mov
sbb
sbb
out
inc
push
jnp
sarb
pop
inc
mov
sub
xor
leave
fmuls
sbb
sub
outsl
sbb
sub
push
and
cmpsb
jge
cmp
sti
fbstp
das
inc
stc
lods
push
sbb
inc
push
shll
sub
cmpsb
jp
out
fnstenv
es
push
in
jecxz
sub
mov
divb
je
and
imul
loope
push
jo
xor
int
cwtl
xchg
mov
pushf
xor
loopne
std
lods
jb
sbb
daa
rcl
testb
push
scas
jg
xorb
sub
fiaddl
outsb
mov
je
inc
test
pop
jecxz
imul
push
jmp
mov
push
subb
jb
cmpsb
dec
xchg
dec
bndldx
sub
cli
jle
inc
out
test
stc
aas
pusha
pop
pop
jns
pop
nopl
les
icebp
mov
mov
mov
imul
add
loop
sub
popa
stos
jne
push
xor
out
mov
gs
add
cld
fimull
neg
mov
pop
testb
mov
cmpsl
xchg
jl
sbb
adc
test
and
xchg
inc
push
cltd
jp
sub
idiv
js
xchg
js
popf
cmp
les
pusha
subb
test
sbb
pushf
jo
mov
in
pushf
add
imul
or
les
push
aad
int3
and
sti
dec
jae
cwtl
or
adc
sub
jecxz
outsl
dec
mov
or
mov
test
sub
mov
push
jb
sbb
gs
repnz
imul
fcoms
pushf
mov
sti
in
rol
xor
jno
test
push
xor
fsubr
les
dec
push
stos
leave
sarb
in
sub
lods
mov
fldenv
pop
and
cmp
dec
movsb
fs
daa
push
call
loope
mov
jmp
je
test
popa
mov
xchg
jg
adc
mov
int3
sbb
xor
aas
sub
movsb
jg
push
pop
pextrw
dec
mov
push
inc
sub
add
vpcmpgtw
add
mov
xchg
xchg
in
lea
maxps
and
and
loop
xchg
xor
lret
inc
mov
scas
mov
out
xchg
cmp
repnz
lea
pop
std
mov
outsl
inc
sbb
das
xchg
jns
jge
pop
mov
pop
das
push
aam
out
ret
loop
fstl
jo
xchg
push
imul
inc
mov
enter
adc
hlt
out
mov
in
mov
or
sbb
xor
imul
inc
daa
psubsw
xchg
mov
inc
inc
adcb
or
iret
fdivrl
jg
pushf
ret
dec
or
jo
int
fwait
out
call
psllq
push
mov
stc
movsl
ljmp
outsl
in
jecxz
jae
add
xchg
mov
popa
lea
mov
inc
lea
nop
pop
xor
add
dec
sti
xchg
mov
adc
mov
push
push
xchg
push
pop
mov
xchg
and
ljmp
cs
popa
ret
adc
sbb
push
pop
loop
mov
js
repnz
lods
lods
add
mov
dec
mov
fiadds
mov
add
pop
adc
lcall
scas
xor
mov
int
mov
stc
cmc
cwtl
or
iret
cmpsb
adc
aas
mov
addb
ret
fidivs
add
pop
adc
pushf
inc
xor
and
mov
or
sbb
mov
in
push
lcall
add
ss
mov
dec
push
mov
jl
push
mov
add
and
push
das
and
mov
mov
ja
mov
cmp
and
push
fnstcw
inc
mov
cli
cmc
in
jp
mov
fsubl
jle
stc
and
lds
jnp
gs
lret
sub
sbb
pop
dec
fcompl
repnz
fsqrt
fnstenv
stos
gs
ja
xchg
jno
negl
and
cwtl
out
xchg
sub
outsb
jb
movl
lret
cmp
in
loop
adc
aaa
cmc
mov
ret
inc
repz
adc
xor
adc
mov
roll
cltd
xor
push
outsb
jge
mov
push
and
mov
xchg
imul
pop
stc
push
mov
xor
push
lret
stos
ret
xor
daa
shr
aam
push
and
icebp
jmp
xchg
push
int3
lcall
jnp
sub
pop
or
adc
mov
scas
enter
jbe
mov
push
in
cmpsb
xchg
mov
pop
insl
jb
ss
lock
or
pushf
cmp
dec
icebp
and
dec
stos
test
or
inc
inc
ljmp
cmp
fsubs
in
imul
jae
pop
ficompl
rorb
iret
imul
push
sbb
dec
inc
addl
sub
imul
jo
xchg
test
sbb
lret
and
das
pop
mov
setl
leave
imul
jno
out
jns
mov
mov
movsl
gs
push
jle
pop
pop
dec
cmp
in
mov
add
lcall
insl
cltd
fs
aaa
mov
push
mov
xor
in
call
subb
into
add
xor
int3
push
or
and
or
adc
mov
movsb
mov
sbb
sti
sub
xchg
and
or
push
dec
sbb
add
lea
and
imul
push
in
cmp
jb
in
sub
xchg
or
push
jnp
les
popa
jg
xchg
xchg
aaa
mov
frstor
pusha
pushf
ret
mov
insb
not
gs
inc
cs
pop
shrl
cmp
cwtl
mov
lds
in
pop
sahf
repnz
out
sti
cmpsl
pusha
mov
cltd
lahf
fdivr
mov
cltd
pop
lret
sbb
mov
push
dec
mov
cmpsb
lret
xchg
out
jns
por
gs
sbb
rorl
jge
pop
test
cltd
jmp
sub
adc
jmp
adc
push
fisubrl
jg
xor
and
mov
into
scas
xor
fdivl
sub
add
sbb
pop
jp
jns
aas
sti
xchg
push
inc
cwtl
sti
push
adc
test
cld
imulb
sbb
cmc
out
loopne
mov
adc
rcll
add
mov
xchg
sbb
loope
push
mov
inc
enter
mov
inc
mov
andl
adc
popf
and
popf
gs
andl
add
arpl
sbb
in
aas
dec
adc
push
pusha
lcall
add
repz
lods
mov
ss
icebp
pop
push
mov
or
fcompl
lahf
push
pop
lahf
inc
xlat
sub
jp
stos
pop
stos
adc
int3
jmp
push
ss
mov
mov
sbb
xchg
shr
cs
mov
roll
adc
or
shlb
adc
inc
in
jb
adc
adc
bnd
mov
mov
add
or
out
cmp
jo
addr16
jns
sbb
lcall
into
sub
insl
sbb
addr16
popa
aas
lods
loopne
stc
sub
shrl
cld
loop
in
call
movsb
iret
mov
push
outsl
clc
icebp
cmp
sbb
test
push
xchg
jecxz
shll
mov
xor
lcall
js
mov
adc
mov
enter
cld
clc
sbb
idiv
js
xor
jnp
cmp
ss
ljmp
sahf
mov
enter
dec
popf
add
dec
mov
mov
xchg
adc
in
push
add
cmp
mov
icebp
movl
adc
inc
je
mov
pop
aas
inc
movsl
int3
cmp
lods
xchg
lahf
fyl2xp1
std
out
cmp
stos
inc
scas
and
mov
push
mov
out
outsl
outsl
imul
mov
iret
pusha
cmp
in
stos
imul
add
jg
lods
add
xor
fwait
outsb
in
mov
test
and
mov
sub
stos
add
test
lods
adc
adc
ds
dec
ss
mov
mov
in
mov
in
hlt
sub
rorl
lret
xlat
dec
and
loop
in
lds
sbb
inc
mov
dec
in
scas
xor
cmp
popf
dec
mov
stos
out
mov
es
and
fwait
outsb
lret
pop
add
dec
and
mov
bound
pop
call
in
dec
hlt
mov
push
fs
adc
jmp
cli
push
cmp
fs
shll
xchg
in
jge
sbb
pop
push
insl
xchg
mov
mov
xor
jl
sarb
lock
jle
xor
and
xor
jg
or
inc
mov
test
inc
dec
inc
iret
jbe
sub
mov
xchg
cld
movsb
lret
out
mov
or
in
and
sub
pop
or
lret
test
dec
mov
mov
leave
andl
mov
pop
shrl
add
jle
mov
adc
inc
aas
fcmovnu
imul
test
inc
icebp
push
aam
push
mov
rdmsr
pop
inc
in
int3
jg
xchg
fsubrl
push
cmp
pop
mov
cmp
jg
xchg
push
stos
inc
lods
mov
and
gs
ss
test
add
hlt
in
adc
inc
mov
or
pop
sub
jnp
mov
sub
fwait
pop
push
stos
daa
imul
into
outsl
aam
rorl
jl
jae
mov
clc
mov
add
cmpsl
and
xor
cmpl
adc
pop
cmp
or
jnp
push
pop
fstpl
ss
and
push
pushf
sti
fs
ret
outsb
xchg
into
sahf
je
xchg
sahf
movsl
cmp
movsl
jmp
imul
out
mov
loop
mov
mov
mov
les
inc
lcall
and
aas
stos
jmp
inc
ds
jns
cli
shlb
push
lods
in
push
daa
dec
leave
test
jge
in
sbb
adcl
sub
out
jo
pop
cmpsl
jmp
mov
jl
adc
add
pop
dec
das
mov
mov
mov
les
sub
mov
loop
jl
or
add
orb
mov
in
pop
jle
inc
call
inc
sbb
out
dec
cmp
inc
clc
loopne
inc
jg
inc
outsl
inc
jnp
or
push
sbb
jmp
cmp
jg
sub
jb
loope
out
or
cmp
mov
fmull
jno
mov
hlt
cmp
cmova
daa
push
cli
or
pushf
xor
imul
cli
pusha
mov
loopne
push
movsb
xor
je
sbb
mov
push
insb
inc
and
lcall
dec
jmp
and
aam
mov
jmp
xlat
or
xor
adc
cmc
adc
rolb
xor
mov
add
addb
add
jns
aaa
adc
sub
filds
add
inc
fildll
hlt
out
andl
push
pop
shl
leave
in
mov
add
mov
mov
dec
iret
pop
shl
push
inc
pop
arpl
inc
mov
and
xor
mov
or
pushf
pop
arpl
cs
sub
cmpsl
jnp
nop
mov
add
cwtl
cmpsb
popf
mov
jge
sub
lret
mov
inc
fst
inc
movsl
leave
xchg
adc
std
jg
scas
mov
sbb
cltd
fs
testb
test
cmp
icebp
cmp
add
mov
stos
pusha
mov
fisubs
dec
roll
adc
adc
std
testb
lret
and
inc
xchg
stc
push
lahf
int3
mov
clc
pop
add
xchg
in
or
or
fldenv
aam
push
iret
jbe
ret
in
mov
sbbl
jb
and
xchg
add
add
mov
and
mov
xchg
mov
cmp
out
push
cmp
push
jne
and
ds
sub
or
jmp
aad
adc
imul
push
ret
dec
inc
xchg
xchg
pop
test
jnp
aas
sbb
xchg
test
iret
sub
adc
out
inc
lods
pop
stos
inc
add
xor
or
cmp
jno
pop
mov
mov
cld
into
or
ret
mov
adc
stc
sub
call
sbb
scas
sarl
push
outsl
adc
and
jbe
les
leave
and
xchg
mov
mov
push
adc
push
rorb
inc
loop
stos
lcall
arpl
leave
outsb
mov
push
xor
add
dec
cmp
push
leave
fistps
aaa
arpl
jne
mov
hlt
pop
stos
push
add
adc
xlat
xchg
jle
jge
cmpsl
xchg
icebp
mov
cmp
and
push
xor
or
enter
lret
shlb
pusha
dec
sbb
adc
mov
lret
in
cmp
int3
xor
fdivr
mov
xor
cmp
pushf
jne
imulb
ja
ja
loopne
jnp
scas
hlt
sub
mov
xchg
sub
adc
jne
loop
cmp
pop
pop
pop
dec
rorb
add
loope
nop
sub
jecxz
ds
outsl
xchg
push
or
push
dec
int3
push
test
mov
mov
shll
fisttpll
cmpsb
jge
push
push
getsec
inc
repz
dec
and
ficoml
rclb
fisubrs
icebp
stos
mov
or
lods
outsb
adc
filds
aas
popf
jnp
mov
mov
in
fisttpl
mov
cmp
adc
or
cltd
mov
push
xchg
xchg
es
pop
mov
xchg
pusha
das
xor
sbb
test
push
xor
fistpl
mov
int3
rcll
arpl
pop
add
das
in
add
lods
out
gs
xorb
xor
push
jmp
xlat
and
xchg
sub
dec
loopne
pop
and
xor
mov
movsl
pushf
in
and
arpl
sbb
fwait
movsb
xlat
xchg
cmpsb
andb
je
push
adc
test
and
aam
lock
mov
sbb
xor
or
cmc
mov
mov
rclb
ja
stos
sub
test
mov
adc
cmc
xchg
test
stos
push
std
loope
pop
divb
stos
in
lods
and
fsubrs
push
in
leave
push
adcb
add
or
loope
lret
and
outsb
mov
xor
pop
push
enter
xchg
add
je
jne
out
and
dec
fwait
mov
add
fwait
push
neg
pop
in
jno
dec
inc
cwtl
mov
ror
add
cmp
rcll
icebp
loope
mov
and
dec
clc
adcl
stos
cmp
icebp
in
adc
rsm
sbb
nop
js
cltd
inc
mov
rcl
shll
lock
sbb
pop
xchg
inc
jb
cmc
cs
cmp
jbe
inc
jle
adc
lret
jno
repnz
dec
testb
push
pop
addb
add
sub
imul
in
hlt
dec
jae
fmull
sahf
xchg
jmp
or
fsubr
and
mov
jnp
mov
xor
fimull
xchg
mov
sbb
loopne
xor
dec
jge
jg
idivl
xor
mov
xor
into
sti
int
rorb
inc
lods
test
fildll
dec
inc
cmpxchg
cmc
stos
push
or
sbb
out
mov
pmulhw
stos
sub
lock
push
adc
jne
test
lds
jnp
mov
outsb
jecxz
xchg
loop
sub
adc
mov
mov
sti
in
popa
das
mov
ss
add
bound
and
repz
ss
add
lods
xor
mov
jb
clc
pop
cmp
xor
mov
cmp
mov
insl
sub
xchg
mov
popaw
push
in
cs
clc
loope
xor
rcrl
fstp
cmp
sbb
sbb
mov
inc
jne
jmp
sahf
cmpsb
pop
mov
repnz
in
jmp
jecxz
gs
rcll
cmp
inc
in
sub
pop
subb
jg
rolb
jne
scas
inc
sbb
lock
pop
xchg
jp
les
scas
jmp
xchg
push
lea
or
adc
insb
int
fnstsw
rcrl
pop
leave
test
add
xchg
clc
mov
fidivl
mov
add
dec
push
sub
loopne
call
dec
push
xor
outsb
pop
mov
jns
lahf
loopne
aam
pop
fcoms
or
scas
flds
int
jne
mov
xchg
jb
xchg
mov
adc
inc
iret
cld
mov
ljmp
jp
jnp
push
dec
bound
mov
sbb
int
shll
mov
pop
add
pop
imulb
outsl
fstl
aam
push
mov
dec
shrb
scas
xchg
sbb
ja
jle
push
add
dec
push
sub
imul
dec
cmp
out
and
les
stos
cmpsb
lods
push
xchg
aas
dec
popa
mov
cmp
lret
cmpsb
mov
mov
enter
std
nop
dec
imul
sbb
popf
popf
les
outsb
ss
into
out
xchg
sbb
jmp
xor
test
popf
sub
xchg
test
push
call
sbb
fldcw
inc
mov
je
bound
xchg
rcl
scas
lcall
adc
adcb
stos
dec
fistps
xchg
push
outsl
pusha
in
inc
dec
fnstsw
sub
xor
js
cs
xchg
jp
sbb
xchg
addr16
aad
mov
cmp
mov
fucomi
push
mov
leave
jno
addr16
dec
xchg
push
fstpl
jne
repnz
in
sbb
sub
jecxz
shrb
push
shll
xor
clc
mov
jmp
jmp
sub
push
xor
push
pop
adc
jecxz
addr16
pop
sub
push
in
fsubrs
adc
stc
mov
or
inc
cli
lods
cmpsb
popf
push
mov
pop
adc
push
pop
jnp
jg
jns
mov
jns
push
add
bound
je
test
lods
je
insb
inc
dec
jne
inc
mov
mov
arpl
je
dec
imul
jbe
mov
dec
mov
or
dec
movsl
inc
shlb
std
roll
mov
jno
xor
mov
lcall
dec
sti
movsb
adc
popa
js
xor
jecxz
sbb
push
shl
aam
mov
sti
dec
inc
daa
inc
and
lret
mov
call
cmp
jle
dec
cmpsb
fists
mov
xchg
aas
call
push
vorps
mov
sub
cs
pop
cli
ret
ds
stc
js
add
fcmovb
in
inc
out
jp
or
lret
mov
ss
mul
mov
nop
add
sub
cs
push
push
subl
hlt
pop
pop
inc
pop
movb
mov
insb
mov
mov
shlb
out
pop
lret
stos
pop
movsl
jl
ja
pop
sahf
mov
add
or
mov
push
frstor
pop
test
arpl
xor
push
add
pop
xor
push
inc
das
repnz
sbb
pop
lret
inc
mov
cmpsb
mov
ds
add
lret
mov
mov
xchg
pop
subb
in
pop
popf
cmp
stc
push
mov
pop
test
dec
add
add
repz
pusha
add
jge
jl
dec
xchg
fcompp
mov
xor
sbb
mov
enter
lcall
movsl
dec
add
xor
out
es
add
hlt
ss
pusha
orps
ret
sbb
rcr
mov
cmp
out
jmp
cs
cmpsb
cmp
cmp
cmp
fcoms
adc
sub
sbb
mov
add
and
pop
shrl
aaa
pop
xor
sbb
loope
ficomps
lods
je
lods
shr
out
inc
lret
dec
and
imul
inc
lcall
add
test
call
jmp
mov
sar
insl
bound
nopl
push
into
stos
jbe
aad
cli
insb
loop
icebp
mov
pop
and
mov
aam
mov
pop
std
outsl
movsb
stos
pop
or
or
das
jp
lahf
ss
push
iret
push
in
movb
inc
push
cmpl
dec
movsl
inc
xor
xchg
lret
imul
mov
xor
aad
xor
scas
mov
lock
xchg
outsb
cmp
out
cmp
daa
pop
jg
push
mov
jmp
xchg
cld
xchg
sub
aas
sbb
push
jo
mov
mov
cmpsl
jl
dec
and
dec
mov
cwtl
mov
movsl
inc
jg
xor
xor
cmp
in
mov
mov
push
pushf
loope
xchg
jo
mov
imul
adc
outsb
mov
dec
sahf
dec
icebp
outsb
xor
mov
subl
fwait
push
notb
rol
pop
jne
xorb
or
cmp
mov
jo
rolb
or
rorb
jb
push
sub
mov
pushf
push
hlt
andnps
push
es
hlt
xor
pop
rcll
mov
add
push
pop
dec
or
mov
xchg
pop
pusha
ds
or
punpckhwd
leave
jl
in
or
push
notb
mov
lret
neg
adc
adc
jno
add
cmp
push
sbb
sbb
stos
sub
pop
mov
dec
cli
or
iret
fistps
mulb
sub
jno
loop
sub
lcall
dec
pop
adc
jge
sbb
fsts
jg
fiaddl
je
xlat
jno
mov
mov
xchg
es
mov
int
cmp
test
pushf
ficoms
push
and
iret
push
add
in
addr16
in
mov
loop
xchg
xor
xor
aam
ja
xor
int3
mov
mov
dec
jnp
adc
jbe
mov
insb
xor
out
xchg
cmp
add
imulb
lock
jae
imul
sarb
sbb
xor
js
ret
test
lea
inc
or
aad
test
lret
xor
mov
stc
stos
mov
mov
fcmovnb
movsl
fld
push
stc
pusha
loopne
inc
cwtl
cmp
or
pop
gs
sbb
int
mov
out
leave
mov
pop
and
pusha
xlat
ret
jne
pop
aad
pop
and
dec
mov
mov
mov
xchg
cmp
hlt
sub
add
xchg
pop
mov
inc
mov
xchg
push
aam
fistps
inc
test
xchg
sub
cmp
adc
sub
arpl
xchg
stos
enter
mov
stos
sbb
push
jl
inc
loopne
lret
mov
testb
out
add
add
dec
out
mov
jecxz
arpl
xchg
lods
inc
and
pop
cld
mov
rcrb
les
aas
or
adc
mov
mov
or
mov
cmp
jns
mov
fstps
mov
loopne
mov
mov
and
sahf
in
popf
add
outsl
call
push
inc
add
xchg
out
divl
cmp
js
shll
cmp
nop
call
loope
test
mov
addr16
or
test
call
push
js
js
pcmpgtw
shll
mov
push
cli
dec
cmp
imul
inc
dec
xorb
pop
pop
andb
in
pop
mov
mov
aam
sti
inc
xor
and
push
pop
ret
push
jge
sbb
xchg
push
rcrb
push
cli
stc
test
and
mov
xor
lods
inc
add
xchg
adc
dec
imul
and
dec
scas
sahf
xchg
or
jne
sbb
or
dec
xchg
push
imul
cmpb
stos
subb
loope
add
mov
stos
sbb
pop
or
add
mov
sbb
adc
in
dec
push
ljmp
push
ret
in
sub
rolb
jbe
inc
mov
inc
lcall
adc
in
or
adc
jb
sbb
jne
xor
mov
insb
lahf
and
xchg
rorb
or
pop
in
into
shl
pop
fidivrs
sbb
adc
clc
jge
add
jno
imull
loopne
xchg
jo
xchg
stc
cmc
fsubs
dec
js
push
push
out
out
stc
adcl
out
mov
into
push
xchg
shrb
adc
mov
inc
mov
cmp
inc
mov
into
fimuls
sub
repz
dec
lret
ret
sbb
push
bound
fstl
aaa
scas
cwtl
or
jb
pop
mov
jns
push
ss
cmp
mov
mov
jp
fnstenv
push
jle
xchg
out
adc
orl
call
mov
mov
leave
and
pushf
or
sbb
iret
das
fcoms
lret
adc
imul
sbb
and
mov
sbb
dec
out
in
mov
pop
sbb
test
jmp
in
fwait
sarb
push
mov
pop
icebp
and
cld
xchg
popf
push
add
data16
xlat
xchg
arpl
rol
dec
dec
test
stc
sbbl
xlat
adcl
xchg
xlat
test
call
das
pop
jnp
inc
mov
std
jnp
mov
xchg
adc
out
es
adc
lret
js
pop
cmpsb
xor
add
and
test
mov
loopne
jnp
repz
jb
xchg
xorl
xlat
xchg
sub
test
fs
jge
cmpsb
add
jae
scas
sub
mov
lahf
addr16
xchg
cwtl
insl
aaa
imul
cli
test
pusha
sub
jne
sbb
sbb
test
push
push
lods
into
push
lret
push
lds
mov
or
aaa
and
sub
test
xchg
popa
outsl
push
cmpsl
push
xchg
jne
js
in
lcall
cmp
cmc
bswap
mov
or
mov
and
imul
mov
inc
fidivs
sub
cs
mov
jb
addl
repz
fildll
mov
jb
imul
fdivrl
mov
pop
jecxz
adc
sub
dec
mov
pop
ficompl
sbb
lods
rolb
pop
shl
int3
mov
cmc
xchg
add
mov
in
mov
jge
fistpll
enter
stos
or
xor
xor
pop
dec
outsl
xorb
cltd
movsl
sbb
je
rorb
mov
hlt
mov
lret
das
push
push
mov
test
pop
dec
pop
or
cmp
xorl
jae
into
aas
hlt
sbb
fs
outsb
roll
hlt
inc
sahf
lahf
and
rorb
jae
cmp
pusha
sub
addr16
pop
into
decb
adc
notl
movsb
cmp
iret
cmp
fisubs
imul
in
dec
cmpsb
stc
cmp
data16
adc
dec
dec
xor
or
in
mov
add
or
fcmove
fcoms
movsb
movsl
mov
test
inc
orb
jo
cmc
dec
pop
push
jecxz
add
leave
add
jo
sub
testl
into
xor
cmp
test
cmp
sbb
inc
xorb
adc
sbb
push
add
push
mov
mov
mov
push
scas
sbb
add
sbb
inc
sti
mov
and
int3
sbb
aaa
test
add
or
xor
arpl
dec
cmp
xchg
scas
mov
jmp
rorb
ret
jg
mov
int
ds
fwait
adc
out
jne
push
stc
inc
es
outsb
push
ficomps
mov
scas
scas
es
pushf
cli
mov
cmpsb
aas
xchg
and
fistpll
xor
loop
pop
dec
ja
scas
insb
movaps
jecxz
cltd
xor
fs
jne
retw
sub
sti
or
push
nop
add
movsl
clc
inc
in
mov
sahf
sarl
cltd
gs
lahf
faddl
xchg
insl
and
pushf
iret
jecxz
cmp
jl
xchg
mov
sub
addr16
jb
rcll
outsl
sbb
and
push
xor
cs
js
outsl
push
xchg
mov
xor
test
add
push
loop
sbb
cmpsb
fisubrl
adc
andl
gs
add
imul
pop
xchg
insb
push
dec
test
popf
lea
xor
out
andl
out
mov
push
pop
roll
pop
rclb
xchg
maxps
jmp
cmpsl
xchg
imul
pop
dec
inc
movsb
cltd
adc
pop
cmp
loop
or
mov
xor
xlat
shlb
pusha
pusha
mov
cmp
fdiv
bound
mov
mov
adc
test
movsl
jmp
push
push
rcll
in
hlt
xor
cmp
xor
lock
push
cmp
pusha
pop
in
insb
sub
jnp
cmp
xor
cmpsb
xchg
sbb
mov
push
repz
cmp
or
fadds
test
imul
gs
cld
sahf
lock
iret
scas
xchg
insb
rorl
add
enter
hlt
jae
mov
arpl
addb
xchg
xchg
test
into
or
pushf
or
cmpsl
fnstcw
xchg
mov
lea
mov
jae
lcall
mov
fwait
mov
push
orb
fwait
and
xor
push
sti
dec
mov
sarl
inc
pop
test
or
fdivr
fs
lret
cmp
dec
or
or
jo
outsb
in
lret
hlt
add
xchg
push
sbb
jbe
je
rorl
or
inc
not
imul
pushf
sub
or
push
leave
jne
sbb
notb
push
incb
icebp
lods
mov
push
int3
jp
xor
cwtl
pushf
cwtl
adc
imul
sarl
mov
or
das
dec
lods
mov
and
inc
movsl
mov
pop
aam
shlb
mov
sti
dec
ficoms
xor
hlt
fists
sub
dec
inc
push
stos
gs
cmp
lods
pop
fucomi
jo
fstl
outsb
dec
enter
pop
data16
cmp
add
jb
add
adc
cmp
fwait
out
mov
icebp
mov
ret
adc
push
cltd
mov
push
lods
ds
in
or
jmp
inc
mov
inc
sbb
xchg
icebp
out
jle
ret
jne
sub
adc
call
jnp
cmp
addr16
inc
sub
push
dec
insb
jl
in
shl
or
test
or
mov
int3
lret
nop
popa
out
dec
arpl
popa
push
addr16
sbb
cmp
pushf
cld
orb
shl
xor
jle
mov
sbb
push
mov
mov
push
sub
sbb
jle
jp
dec
xchg
aad
int3
mov
into
std
cmpl
jo
push
in
leave
movsb
cwtl
sbb
aaa
push
stos
add
shlb
xor
jecxz
xlat
sub
fxch
push
xor
fistl
pop
xchg
or
aas
xor
pop
jbe
pop
push
mov
cltd
add
imul
cld
rolb
clc
jle
add
sbbl
pop
and
data16
adc
in
sub
ret
mov
decb
push
or
outsb
dec
sbbb
dec
cmp
std
jmp
sbb
jo
or
inc
leave
rclb
add
xchg
push
aam
jb
arpl
out
xorb
xor
sub
std
sub
into
inc
mov
xchg
push
xchg
sub
call
inc
push
sub
and
call
push
jno
cmp
into
aam
lret
sub
sub
push
fimuls
dec
rcl
shlb
mov
jnp
inc
insb
cmp
sub
dec
xchg
push
mov
aaa
sub
inc
mov
js
adc
mov
lea
cmp
mov
mov
iret
mov
and
add
and
in
mov
aas
lahf
xor
ss
out
in
inc
xor
cwtl
mov
adc
gs
out
sub
inc
push
pop
icebp
mov
jle
cmp
mov
sub
mov
push
movsb
jbe
xchg
mov
push
xchg
mov
loope
xchg
fidivl
push
aad
inc
or
mov
popa
js
jmp
js
and
lea
lods
jne
cwtl
mov
xchg
shlb
das
fstpt
and
mov
xor
xlat
cmp
jne
and
jg
xor
in
ja
cmp
sti
int
fsts
sbb
fwait
or
jnp
mov
sub
and
ficoml
pop
add
xor
mov
dec
fcompl
pop
fidivs
mov
or
cs
pop
pushf
jae
test
pshufw
jl
ret
jno
pop
lea
in
push
inc
jl
cld
sub
cmp
adc
movsb
scas
mov
mov
mov
insl
jp
push
pusha
mov
test
repz
negl
in
mov
jne
mov
mov
ja
out
jmp
mov
aaa
movb
jne
fldcw
add
inc
mov
shlb
jg
lods
jle
test
and
cs
sub
xchg
scas
xor
and
push
ja
outsb
aam
pop
mov
jno
pop
jno
jnp
jns
push
sti
or
push
aad
mov
insl
jmp
lret
sbb
xchg
nop
aas
sub
mov
sub
adc
stos
int
jae
mov
inc
dec
dec
cmp
js
sub
cmp
xchg
xlat
std
push
adc
imul
pop
mov
icebp
imul
lret
ljmp
cmc
sub
test
and
gs
xchg
push
adc
inc
das
push
cld
daa
cmp
add
in
sbb
mov
int
mov
rclb
jle
std
js
out
mov
scas
mov
test
out
dec
enter
and
xchg
ja
xchg
or
jg
jb
call
outsb
xchg
xchg
adc
add
addr16
scas
adc
lret
push
push
push
jle
clc
std
fcomi
sbb
adc
aam
cmp
mov
mov
lods
mov
cmpsl
sub
or
mov
dec
adc
jns
push
faddp
xor
sbbb
pop
push
fmul
shrb
add
dec
inc
stos
jg
xchg
popl
test
lret
arpl
push
dec
dec
je
es
inc
add
cltd
mov
test
shufps
or
sbb
lods
loopne
fnstenv
xchg
imul
and
jl
and
nop
push
pop
cmc
mov
inc
xchg
adc
sbb
inc
sbb
add
mov
xor
call
sbb
pop
mov
aam
icebp
mov
push
dec
rep
movsb
mov
inc
sbb
shrl
sub
int3
lods
xor
andl
pop
scas
pop
inc
dec
fwait
cwtl
or
jnp
mov
jmp
push
mov
mov
cmp
adc
push
xor
lcall
cmp
in
jge
insb
addr16
aaa
sub
fstpl
mov
fldt
push
push
js
in
mov
insb
cmpsl
cmpsb
push
xchg
or
cmp
jge
xchg
pop
inc
jno
cli
leave
dec
out
xor
stos
and
mov
iret
and
xor
inc
jl
je
jle
movsb
aaa
sub
cmp
cld
pushf
or
ss
cmp
icebp
andb
test
push
out
push
sub
popf
rorb
xchg
push
insl
add
mov
xchg
shr
inc
cld
and
and
mov
shll
and
mov
push
jp
lret
mov
lock
jo
cltd
xor
pop
mov
jbe
cmp
js
mov
adc
outsb
mov
cltd
nop
sub
loop
mov
cmp
adc
icebp
push
cmp
jmp
movsl
jbe
fisubs
hlt
and
sti
out
adc
sbb
stos
mov
roll
push
fiaddl
out
sbb
pop
and
pop
ret
cmp
jge
pop
push
mov
cli
fstps
mov
ror
rorb
pop
pop
mov
mov
push
push
out
fucomi
cmp
sub
imul
in
testb
dec
jo
test
push
rorl
je
ds
sbb
shrb
int3
clc
test
xchg
hlt
xor
out
mov
ds
cli
jo
out
rcrb
fs
mov
mov
das
sbb
loope
testl
mov
mov
loop
popa
movzwl
push
adc
jp
push
lret
and
adc
shlb
push
cmp
imul
jmp
cmp
out
jnp
mov
xchg
in
xchg
stos
aam
cmp
insb
scas
and
cld
add
ds
orl
aad
mov
adc
shll
test
sbbl
mov
sbb
notl
mov
mov
pop
inc
int3
lea
addl
std
sub
xor
sub
sbb
jb
jge
pop
ljmp
movb
dec
mov
xor
aad
popa
push
cltd
mov
adc
jnp
adc
inc
and
cmp
ja
xor
adc
aaa
push
jb
add
dec
pop
push
inc
mov
sbb
adc
cwtl
fistpll
push
mov
inc
jl
ljmp
push
sbb
add
pop
sbb
adc
ljmp
sub
lcall
jg
stos
mov
fwait
lds
leave
pushf
adc
xchg
inc
cmp
and
mov
mov
and
test
clc
int3
sti
sub
loope
icebp
lock
fidivrs
fisubs
and
add
sbb
push
or
pop
inc
lret
arpl
ret
pop
aaa
add
mov
push
rcll
push
das
mov
pop
mov
push
fldl
ret
dec
mov
pop
int3
mov
fnstenv
pop
mov
out
fidivrl
dec
pop
filds
and
clc
mov
push
push
xchg
cmp
jb
add
outsb
mov
fcmovnbe
push
cmp
pop
movsb
inc
lds
out
sbb
call
loop
sub
sbb
push
repnz
es
mov
xchg
loope
and
bound
xchg
jbe
leave
sub
mov
gs
fisubrl
push
mov
push
push
notb
pusha
push
frstor
rcrb
or
mov
mov
test
push
testl
cli
cltd
inc
out
fsubrp
ret
dec
popf
mov
cmp
mov
jno
sub
jg
fs
rcll
fidivl
jns
mov
lea
mov
inc
inc
hlt
dec
leave
ds
cmp
test
jge
shll
mov
push
add
xor
sar
jl
pushf
ds
scas
add
push
mov
inc
inc
mov
out
push
and
cmp
xor
xor
xchg
imul
rorl
sbb
in
das
sub
xor
mov
sbb
xchg
push
add
mov
lock
mov
sbb
cmpsb
xchg
cmpsb
fiaddl
jne
add
in
xor
or
outsb
test
sbb
adc
inc
sub
aas
jmp
fmuls
adc
sbb
xchg
ret
into
in
loop
rcrb
push
mov
sbb
movups
subb
lea
mov
lock
add
dec
or
pop
addb
cmp
test
cs
sub
xchg
jmp
add
pop
mov
addl
pop
mov
adc
cld
and
mov
sbb
dec
adc
mov
fisttpl
push
push
hlt
insb
out
enter
dec
sbb
xchg
mov
xchg
aad
scas
repz
in
mov
xchg
mov
mov
xchg
jo
push
adc
rclb
mov
mov
pop
push
mulb
sub
rorl
or
je
out
lret
fsubrs
mov
push
scas
add
xchg
dec
lret
lahf
adc
cmpb
adc
push
jmp
cmc
int
dec
adc
mov
aad
add
add
mov
or
lods
pop
or
pop
out
sub
mov
jg
inc
in
aad
dec
dec
fmulp
sbb
rorl
cmp
lock
push
cwtl
mov
sbb
test
movsb
xor
test
mov
add
testl
mov
pusha
out
rcrb
jge
sbb
xchg
sbb
adc
or
fldt
in
test
lret
pop
jno
xor
pmulhuw
jge
xlat
into
loop
js
outsb
popf
rolb
sahf
popa
xor
add
cli
and
jae
out
scas
inc
mov
or
mov
lds
mov
iret
cltd
dec
fdivr
xchg
dec
outsb
xor
fsub
and
xor
cs
dec
in
ja
push
outsb
movsl
test
orb
cmp
lock
dec
mov
stos
shlb
or
leave
loope
xchg
call
popf
in
in
fldenv
bt
arpl
push
push
mov
in
pop
les
xchg
dec
cmp
aad
stos
mov
mov
xchg
rorb
dec
repnz
jno
inc
jb
fcompl
fnstcw
and
jae
es
adc
xchg
out
sub
js
rolb
inc
push
pop
lret
arpl
test
mov
ss
out
xor
inc
xchg
jecxz
sbb
cmp
in
xor
sar
mov
ret
dec
cmp
insl
and
test
xor
pusha
fisubrs
sbb
fdivrl
lods
mov
sbb
jns
cs
daa
cmp
stc
fistpl
comiss
rcrl
call
sub
aad
mov
sahf
push
sbb
pop
adc
roll
jl
gs
into
into
ja
jmp
push
xor
xchg
adc
cmp
dec
and
aaa
std
je
mov
test
imulb
pusha
in
push
test
out
leave
repnz
mov
adc
dec
dec
or
inc
hlt
jae
jae
adcb
icebp
mov
and
jecxz
hlt
jg
xlat
jecxz
movsl
add
or
and
aam
mov
inc
hlt
inc
add
mov
xchg
lods
adc
adc
mov
inc
fildll
xchg
bswap
or
mov
out
jno
pop
repnz
cwtl
cmpsl
aad
sub
in
dec
ljmp
bswap
mov
es
push
xlat
jb
and
roll
dec
loopne
in
cli
adc
subb
add
mov
mov
aas
adc
fnstcw
sub
push
imul
in
subb
cmp
fldl
lcall
xchg
lret
fdivrp
out
repz
adc
in
and
loope
fs
inc
aas
mov
enter
jle
in
bound
pop
jo
adc
jnp
shlb
scas
andb
mov
and
xor
jmp
hlt
and
xchg
data16
cmpsl
std
sbb
popf
mov
cs
pop
hlt
jecxz
lcall
jb
fwait
loope
pushf
mov
fdivrs
jb
movsb
mov
mov
pop
mov
fadds
xor
add
push
lcall
mov
pop
adc
cmp
ret
lods
popf
fsts
aad
mov
fldt
jb
lods
lea
out
cli
xchg
jg
and
add
jge
or
imul
sub
fdiv
lods
jle
lock
xchg
inc
dec
or
icebp
jnp
hlt
dec
lods
and
push
mov
pop
push
or
push
adc
or
cmp
in
jne
mov
aad
adcl
add
scas
pusha
sbb
cmc
inc
jmp
popf
dec
bound
sti
gs
test
adc
sbb
xchg
push
js
jne
repnz
mov
setg
aad
aaa
pop
push
icebp
sbb
cmc
cmp
cltd
or
cmpsl
stos
pop
out
cmp
jae
leave
iret
imul
xchg
gs
pop
add
sub
jbe
cmp
push
mov
add
push
in
push
pushf
push
dec
xchg
or
enter
cmc
jmp
lods
push
mov
ja
pop
rclb
out
js
cmp
add
jmp
dec
lret
push
test
cwtl
add
repz
js
loopne
xchg
enter
ds
test
jle
daa
jp,pn
gs
sub
repz
cmp
xor
leave
or
ret
das
mov
lret
sub
stos
lds
jns
xchg
data16
pop
lods
xor
nop
cmpsb
ret
pushf
and
enter
lock
ret
xchg
adc
pop
push
aam
or
pop
cmpsl
divb
jl
inc
out
imul
test
ret
xchg
adc
popa
xlat
pop
push
sahf
jbe
lods
imul
in
push
sbb
sub
lds
push
hlt
dec
inc
test
push
xchg
out
cmp
inc
loop
xor
dec
or
cmp
adc
xor
sbb
inc
xor
sub
jecxz,pt
mov
movb
jae
inc
arpl
repz
lea
daa
jl
jecxz
sub
adc
es
and
add
mov
and
pop
sti
mov
mov
sbb
ficoms
xchg
in
mov
cltd
clc
mov
sub
and
cmp
ret
inc
jmp
or
lcall
adc
lcall
stos
push
loope
jl
inc
jo
cmp
in
jge
xor
push
sbb
fisubs
add
mul
mov
icebp
push
cs
mov
les
rcrl
dec
enter
or
icebp
xchg
imul
cld
pop
xchg
popl
fidivrl
into
and
stc
adc
ss
aas
enter
jb
stos
dec
sub
sub
sub
pop
lret
jnp
bound
imul
push
dec
in
mov
mov
nop
cmp
je
and
cmp
jb
push
xor
jmp
cmp
mull
dec
cmpsb
mov
mov
ror
push
lahf
enter
ret
test
outsb
mov
xchg
pushf
leave
ret
pop
into
iret
clc
mov
sbb
mov
lret
addr16
adcb
jbe
and
and
inc
into
pop
lock
cmp
push
and
es
ljmp
daa
stos
cmc
dec
adc
dec
lret
dec
nop
cmpsb
sti
mov
ror
mov
mov
cmp
xlat
xor
xchg
fsts
rorl
ljmp
js
mov
sub
mov
push
inc
sbb
jp
xor
sahf
mov
ljmp
cmp
test
hlt
push
testl
ret
xor
adc
ja
push
fwait
lea
push
xor
ja
std
push
add
lahf
mov
adc
cmpsb
pop
mov
lods
xor
xor
scas
outsl
nop
sbb
mov
adc
jp
ror
stc
jle
rorb
mov
fidivs
sbb
jns
mov
fnsave
cmpsb
decb
mov
adc
dec
adc
arpl
repnz
sbb
jg
scas
jns
aas
mov
adc
inc
adc
insb
cltd
sbb
sbb
adcb
pop
inc
push
shlb
xchg
mov
and
sarl
dec
and
mov
inc
inc
push
lods
and
sub
mov
xchg
xchg
maxps
inc
push
in
sub
adc
xchg
int
out
add
loopne
sbb
xbegin
lcall
insl
mov
cmp
sahf
lods
push
incl
and
cld
cmc
or
adc
sub
push
fcmovnbe
xchg
sub
and
test
jecxz
jmp
jge
sub
ja
orl
and
or
adc
add
adc
insb
fmul
cmpsl
inc
or
pop
dec
leave
lcall
clc
cmp
jge
adc
add
pushf
xchg
fsubrp
or
inc
or
jle
sub
inc
jg
vrcpss
xor
mov
sub
mov
and
shlb
mov
test
pop
jl
dec
and
cmp
adc
dec
lods
mov
pop
std
pop
sbb
lods
adc
sub
mov
mov
dec
sub
and
mov
fs
cwtl
dec
or
aad
popf
sarb
xlat
mov
imul
call
sub
sbb
mov
xor
add
jo
jae
push
cltd
pop
cld
dec
xor
shlb
inc
adc
or
lock
xlat
sub
int3
mov
lock
adc
and
inc
dec
xor
sbb
imul
dec
mov
orl
out
mov
fistl
jg
push
sarl
pusha
push
jg
mov
bound
cld
xlat
mov
add
dec
mov
out
dec
jge
stc
mov
ret
sbb
pop
xchg
cmpsb
lcall
inc
lock
or
inc
xor
inc
shl
xor
or
or
sub
lea
pop
outsb
aaa
mov
adc
or
insb
mov
mov
mov
add
ljmp
push
lds
das
popf
or
insb
fidivs
fldenv
pop
dec
adc
jl
pop
push
int3
aas
or
movsl
insb
mov
fstpt
je
icebp
enter
lock
mov
sahf
mov
push
push
in
fisttpll
cmc
pop
shrb
lods
clc
dec
sub
or
xor
xor
fimuls
pop
outsb
nop
pop
sbbb
stos
jae
test
enter
call
xchg
cmpsb
cmp
pop
pusha
add
mov
lods
rcrb
dec
nop
sbb
and
loop
fs
cmp
insb
stos
jmp
adc
clc
mov
add
pop
mov
fisttpl
sub
xchg
mov
push
inc
adc
mov
gs
xchg
imul
mov
push
pop
test
fdivp
push
pop
push
scas
jle
lock
js
and
dec
in
int
jnp
or
out
mov
divl
jo
clc
mov
mov
shlb
cmp
jne
sbb
push
or
xor
cmpsb
movsb
outsb
mov
and
or
jecxz
sti
dec
sti
cvtps2pi
lea
pop
mov
cmp
xor
jecxz
and
ljmp
imul
push
add
loop
sub
lea
cld
push
in
aam
mov
rorb
icebp
sbb
push
sbb
hlt
mov
adc
xchg
ret
dec
push
mov
cltd
push
cmp
addr16
fidivrl
addr16
mov
sub
andl
pop
mov
jb
or
xchg
leave
jecxz
adc
popf
ja
daa
jb
xchg
call
and
xchg
pop
cmpsb
ficoms
fdivr
push
call
xor
inc
lea
adc
int
inc
call
clc
mov
ror
inc
and
in
xchg
xchg
push
add
ljmp
es
xchg
lods
mov
prefetch
sbb
pop
dec
out
stos
mov
add
ret
in
mov
lret
fistpl
fidivrs
into
jg
ffree
push
push
mov
dec
and
add
inc
dec
and
cwtl
outsl
jno
call
jmp
hlt
lods
inc
sbb
ljmp
data16
push
add
push
xchg
adc
pop
adcl
jge
out
mov
lock
and
dec
cmc
in
or
push
mov
adc
sub
dec
or
push
lds
out
mov
jmp
lods
xlat
clc
cs
push
push
dec
push
jge
lcall
rcrl
pushf
xchg
pop
dec
mov
dec
inc
fwait
les
mov
push
mov
pop
pusha
mov
and
lcall
in
movsb
push
xchg
add
xchg
sub
ja
push
pushf
xchg
mov
pop
rcr
xor
aam
jns
fstpt
ss
inc
stos
add
icebp
mov
mov
gs
stos
pop
jae
xlat
xlat
jge
pop
pop
aam
jae
or
repnz
sbb
mov
mov
add
pop
xor
push
bound
or
popa
hlt
sti
jmp
cmpsl
add
lahf
sbb
sub
xchg
and
xor
sbb
pop
xor
sbb
or
xchg
aaa
xchg
int3
jnp
mov
adc
sbb
xchg
dec
gs
cmc
aad
add
enter
jp
sbb
bound
cmp
xchg
loope
orl
loop
jmp
sub
int
insb
test
mov
pop
mov
lods
je
dec
adc
pop
sub
xor
shlb
adc
sub
sub
push
subl
fsts
sub
mov
mov
es
insb
lea
mov
mov
adc
dec
jle
push
xchg
fwait
ja
add
xor
mov
xchg
push
ss
into
pop
ficomps
sbb
mov
cmp
inc
rclb
int3
cmc
jg,pn
js
pop
stos
hlt
js
jg
hlt
les
mov
push
xor
xor
shll
movsl
pop
pop
add
cltd
ret
fld1
push
lcall
sub
es
push
iret
pop
jne
js
mov
dec
shlb
mov
loop
mov
adc
xchg
jns
dec
shlb
xlat
mov
int3
pusha
sbb
movsl
test
pop
shl
xchg
mov
das
fstps
ds
inc
ds
sub
jmp
and
lods
pop
pop
mov
lcall
xchg
jns
or
clc
bound
outsl
loopne
jge
ficoms
xadd
imul
xchg
stc
sub
pop
test
and
iret
inc
sub
cli
sub
fistl
push
ljmp
mov
out
push
rorl
in
cmp
sub
cwtl
lret
in
les
push
and
xchg
pop
cmove
daa
sahf
sbb
jecxz
js
xor
aam
push
mov
push
dec
fisttpll
movsb
test
pop
sbb
xchg
xchg
inc
int3
in
pop
sti
cwtl
out
mov
jmp
or
inc
sbb
scas
dec
cmpsl
jmp
mov
les
cld
mov
xchg
xchg
int3
ja
aaa
push
dec
pop
mov
adc
mov
int
xchg
addl
rcl
fidivrs
inc
dec
test
pushf
cmove
jb
movsb
shll
xchg
mov
into
cwtl
or
push
int3
mov
xchg
insl
xor
sarl
into
or
xchg
push
hlt
adc
lea
push
add
inc
nop
cmp
mov
jg
repnz
xchg
jbe
push
cmp
jo
or
mov
iret
aas
mov
or
into
into
push
cmpl
or
push
movsb
sbb
xchg
mov
hlt
stos
lahf
loopne
adc
out
and
lods
lods
rcrb
sbb
incl
std
cli
jo
add
cmpsb
aam
xor
adc
dec
movsb
xchg
lcall
sub
push
adc
stc
hlt
aaa
mov
movsl
pop
xor
lret
arpl
xchg
inc
pop
mov
xrelease
std
hlt
sbb
loopne
loope
insb
push
sbb
es
js
loopne
lahf
aad
and
jne
mov
and
shll
xor
push
lahf
mov
sbb
jo
pop
mov
inc
enter
sub
pop
mov
cmpl
pop
pop
mov
cld
cmp
inc
cmp
push
mov
test
pop
xlat
xchg
mov
fwait
mov
adc
mov
sarl
cmpsl
rcll
lahf
cmp
stos
sbb
inc
mov
mov
sti
lcall
or
xor
or
arpl
inc
js
scas
ss
inc
inc
insl
dec
pop
stos
mov
clc
fidivrl
pop
pop
stos
xchg
cmp
pop
jo
xchg
jns
je
adc
xchg
ds
lea
mov
adc
inc
pop
xor
mov
stos
test
aas
push
scas
cmpsl
nop
adc
lods
mov
inc
out
sub
mov
dec
or
cs
sti
and
ljmp
sbb
orb
test
adc
add
data16
bound
sbb
cmp
mov
in
mov
js
jg
xchg
sub
xchg
cmpsl
test
popf
sbb
popa
out
add
ss
cmp
mov
testl
scas
push
xchg
mov
add
dec
push
pop
jns
stos
daa
js
mov
jnp
stos
jne
add
sbb
dec
mov
fsts
push
xor
mov
jns
hlt
mov
pusha
cmp
mov
fwait
test
lods
and
insb
iret
pop
insl
addr16
mov
daa
mov
mov
mov
lret
adc
sbb
pop
jno
jnp
inc
xor
adc
cmp
test
mov
sbb
sub
adc
push
push
pop
sub
mov
pusha
xor
ret
push
inc
cmpsl
imul
pop
ds
fldcw
inc
xor
fadd
iret
lret
sbb
pusha
jp
iret
lahf
cmp
aad
jbe
mov
out
mov
pusha
or
outsb
es
cmpsb
movsl
aam
sbb
test
xchg
out
inc
jno
stos
pop
inc
jo
fnstenv
pop
push
ss
and
push
mov
jb
iret
icebp
hlt
sahf
inc
bound
dec
or
jno
mov
or
test
popf
ljmp
xor
push
test
pop
lods
movsl
sti
mov
out
add
jne
jge
xor
popf
mov
dec
js
fidivs
shll
jecxz
in
lahf
cmp
imul
paddq
sbb
cltd
mov
movsb
xchg
xor
sbb
sbb
dec
cmp
pop
mov
push
nop
jmp
lret
jg
mov
sub
vpcmpeqd
cs
jno
cmp
gs
out
mov
xchg
inc
lock
mov
xchg
test
xchg
add
add
add
movl
xchg
sbb
or
sub
xchg
fcmovnb
xchg
nop
cmp
inc
and
ds
and
sbb
push
outsl
sahf
mov
or
mov
js
mov
icebp
inc
push
js
sarb
popa
ret
inc
mov
adc
sahf
inc
popa
cmp
jmp
dec
mov
mov
pop
cmp
leave
arpl
inc
xor
mov
lahf
insl
lds
inc
sub
add
inc
imul
dec
mov
mov
data16
cmpsl
lock
pop
data16
push
jg
push
popf
iret
push
xchg
cmp
iret
pop
pop
cmp
je
and
bnd
or
call
mov
jge
ljmp
mov
das
imul
sbb
mov
stc
test
or
lret
and
xchg
insl
xchg
inc
sbb
pop
cltd
test
dec
orl
lcall
adc
into
jbe
dec
das
loop
rorb
jl
out
pop
push
xor
or
mov
or
in
test
rclb
mov
push
sub
aas
out
pop
repnz
xchg
sbb
es
or
out
negl
jmp
aam
shrb
mov
addr16
imul
mov
adc
in
add
cmp
and
jb
pop
pushf
mov
mov
lcall
loopne
pop
lret
inc
lods
mov
cli
scas
xchg
cmp
push
sbb
into
sar
test
and
add
hlt
ficomps
scas
jl
int3
mov
jae
adc
mov
inc
bound
xchg
or
add
add
in
rcrl
sbb
enter
jl
sbb
adc
outsl
lods
movsb
jbe
cmp
lods
pop
xchg
pop
xor
mov
sti
dec
fists
sub
ds
pop
xor
push
subl
and
jg
push
lock
mov
inc
popa
movsb
cmpsb
inc
add
lods
cmp
ficoms
es
mov
aas
mov
testb
mov
mov
aad
andps
ret
iret
or
mov
push
test
scas
inc
clc
sarb
mov
dec
rcrl
cld
lahf
push
pop
push
popa
enter
adc
daa
xchg
outsl
pop
mov
push
gs
xchg
sbb
in
popa
jb
jns
xchg
lods
and
cmp
cmpsl
or
inc
out
push
jl
loopne
nop
jb
repz
in
ficomps
jb
push
int3
outsl
push
ljmp
outsl
ret
cmp
iret
sub
in
jmp
xor
push
lcall
xchg
daa
ss
push
xchg
jo
cld
lcall
gs
adc
test
dec
or
nop
les
out
push
sub
gs
push
dec
into
ljmp
test
add
lock
lret
call
mov
cmpsl
pushf
repz
push
push
dec
sti
ja
mov
jno
xchg
movsb
shlb
mov
jmp
mov
jnp
leave
push
dec
or
in
mov
add
fidivrl
lods
xor
mov
sti
je
enter
push
int
arpl
jl
sbb
lret
rcll
lds
push
stos
frstor
jmp
dec
icebp
enter
out
sub
adc
cs
jmp
call
cmp
adc
push
outsb
mov
inc
adc
push
xchg
lods
xor
popa
adc
lcall
dec
aad
mov
cwtl
mov
pop
jne
rclb
loopne
and
scas
lea
decb
mov
stos
jnp
in
mov
sahf
leave
push
cmp
test
mov
push
pop
insb
inc
mov
mov
add
add
inc
dec
and
or
std
outsb
std
icebp
enter
and
into
loope
push
nop
and
fildl
dec
fst
sub
shl
into
and
mov
mov
sbb
je
ja
cmp
ret
jmp
out
jbe
and
push
cmp
fisubs
jb
push
addr16
mov
sbb
cld
inc
movsl
pop
pop
and
rcll
inc
xchg
or
push
push
sbb
mov
mov
enter
add
fcomip
mov
ret
mov
mov
xor
cmp
inc
sti
mov
pop
mov
pop
mov
pop
inc
mov
sub
xlat
aas
dec
pop
dec
push
insb
subb
rclb
fiadds
aas
popf
cmp
inc
xor
fdivs
ss
mov
sbb
dec
cltd
lods
sub
or
lock
mov
ror
sub
fbld
cld
push
inc
je
or
adc
bound
mov
hlt
jle
push
xor
push
cmp
jno
daa
ljmp
cwtl
aam
test
test
and
in
mov
ret
mov
dec
push
hlt
inc
xor
enter
bound
sub
push
or
and
jns
addb
xchg
mov
mov
lret
jp
push
jb
pushf
leave
mov
xchg
fs
fucomip
dec
pop
icebp
out
mov
lds
out
jb
xor
push
jecxz
push
push
enter
arpl
imul
adc
push
mov
shrb
xchg
cmpsb
xchg
xchg
sub
cwtl
sbb
cmp
gs
or
ljmp
pop
sbb
clc
loopne
push
inc
ds
ljmp
xchg
sub
bound
and
loop
push
xor
push
push
sub
pop
mov
jle
jg
mov
ss
mov
pop
cld
push
sbb
sbb
add
lahf
call
loope
jae
xor
push
pop
pushf
cmp
mov
push
loopne
out
push
clc
pop
rcl
pop
sarl
inc
and
sub
or
dec
data16
imul
cmp
push
cli
out
or
or
and
adc
cmp
sbb
ss
jnp
pop
dec
add
sbb
push
inc
push
add
shlb
in
je
addl
inc
mov
mov
push
sbb
aam
fwait
les
cmpsl
inc
xor
lret
loope
push
fnstsw
inc
bnd
sub
xchg
dec
ret
lret
aam
xchg
ret
pop
sbb
movsb
jno
icebp
std
fs
dec
push
rolb
mov
cmp
int3
pop
mov
mov
mov
movsb
mov
lahf
iret
dec
or
jno
gs
inc
cs
in
out
in
popa
daa
cli
inc
ss
and
cmpsb
pop
addr16
das
out
sub
out
adc
ljmp
dec
inc
std
or
rclb
jbe
jne
adc
test
loopne
shrl
in
dec
and
jge
lock
inc
int
mov
sub
mov
sbb
jno
fwait
clc
les
fildl
fnstsw
jo
xchg
hlt
repz
and
lea
jmp
lods
pusha
pushf
fidivrs
mov
and
inc
xchg
stc
inc
idivl
jl
fstpl
repz
mov
test
roll
in
jecxz
jb
icebp
cld
sahf
mov
mov
fbstp
imul
jnp
inc
outsb
jge,pn
xchg
add
push
adc
andl
std
push
sti
mov
dec
iret
xor
mov
mov
inc
jae
daa
out
test
sbb
push
imul
mov
sub
fdivs
jbe
shrl
dec
test
cld
test
xchg
sub
js
push
mov
xor
fsts
outsl
int3
xor
in
addl
cwtl
data16
adc
sub
scas
out
loop
lea
orl
cmp
or
pop
repnz
push
cwtl
aam
sub
push
notl
es
cmp
call
inc
call
xor
lods
data16
adc
jle
divl
cltd
call
imul
and
and
je
lds
or
adc
pop
mov
sbb
sub
mov
cmp
push
fistl
into
xchg
jle
sub
push
mov
jl
cmp
imul
push
sbb
dec
pushf
add
fsubrs
xor
scas
push
or
pop
lock
sarl
data16
mov
repnz
add
test
sub
pop
xchg
mov
adc
cmpsb
icebp
out
repz
imul
push
in
jmp
in
cld
mov
push
movsl
out
mov
es
mov
imulb
inc
fs
jns
test
sub
rorl
mov
jg
push
mov
inc
ret
pop
sbb
stc
mov
scas
cmp
sub
xchg
jnp
and
imulb
xchg
adc
ljmp
das
minps
cmp
cmp
repnz
mov
das
test
in
imul
std
fists
pop
mov
mov
inc
mov
lahf
cmp
cmpsb
xchg
cmp
faddp
enter
push
and
test
pop
icebp
push
cmp
daa
and
and
push
adc
inc
mov
mov
fadds
mov
in
ljmp
inc
jae
jns
in
mov
jg
loop
sti
call
xchg
mov
mov
jecxz
imul
push
push
jg
push
lahf
mov
pop
imul
pop
in
inc
sbb
mov
jbe
inc
mov
sub
nop
xor
push
or
xchg
xor
cmp
ror
mov
mov
jle
xor
das
jmp
xor
sbb
jecxz
shrb
clc
es
sbb
iret
cmpsl
inc
fimuls
scas
aaa
frstor
movsb
outsl
mov
xor
cli
ret
xchg
pop
pop
daa
lret
das
stos
sbb
sar
insb
lret
adc
loop
das
mov
int
xchg
daa
fiadds
mul
shr
rcl
stos
push
data16
imul
imul
sbb
jb
test
mov
sahf
sub
push
out
in
shrl
mov
out
stos
push
out
nop
outsl
cmp
ds
mov
push
jb
dec
lahf
and
inc
cmp
or
push
cmc
ret
push
inc
mov
xor
mov
add
sub
loop
add
cmp
mov
cmp
adc
lret
data16
popf
out
enter
xchg
inc
pusha
test
push
pushf
lahf
jnp
stos
sbb
mov
movsl
adc
cmpsl
shll
jae
stos
mov
mov
push
mov
jo
push
lds
aad
jnp
sbb
sbb
mov
aas
lret
rol
mov
inc
addr16
repnz
insl
stos
sub
xor
cmpsb
push
pop
inc
mov
sbb
pop
and
cwtl
adc
gs
mov
imul
scas
iret
rcl
sahf
test
dec
imul
push
xor
jmp
pop
mov
out
arpl
imul
cmp
push
lock
cmc
repz
lret
jmp
mov
lods
lds
stos
ret
test
pop
and
adc
pop
scas
imull
test
jne
xchg
push
pop
fadds
xchg
xorb
addl
dec
and
mov
xchg
clc
or
ds
test
pop
pop
sbb
dec
sarb
std
mov
xchg
xor
dec
movl
ja
fsubrl
test
pop
mov
mov
xor
test
je
mov
sub
mov
test
sbb
pop
sub
insb
movsb
cmp
jle
rolb
and
and
sti
fimull
je
pop
mov
mov
lods
into
pop
pop
ja
popa
cmp
rcl
jbe
mov
jg
jae
push
test
xor
movl
xchg
add
jae
xchg
mov
sub
xchg
lret
lahf
cmp
inc
rcrl
jge
sub
dec
enter
es
cmpsl
or
clc
jp
push
rorb
mov
int
lcall
and
jnp
cmpsb
stc
mov
ljmp
and
les
enter
popl
shll
fdiv
fucom
and
inc
jg
clc
xchg
jae
dec
jb
or
mov
inc
fwait
xor
decb
ja
sahf
test
loopne
dec
jns
jecxz
or
push
sti
mov
cmp
push
sar
inc
icebp
cli
rolb
loope
pop
imulb
cld
mov
add
or
or
or
movsb
lock
sti
into
cwtl
xchg
shlb
sbb
dec
dec
aas
addr16
sub
cmp
adc
add
jl
push
cwtl
cmp
dec
out
rol
adc
xor
push
scas
inc
sub
xor
outsb
lods
in
repz
bound
ja
lahf
xor
mov
mov
negb
js
push
mov
xchg
shr
adc
hlt
jbe
lret
lods
xlat
ficomps
jne
lahf
sahf
aaa
jp
and
fcmovne
inc
hlt
cmp
fists
or
xchg
fcomps
adc
stos
pop
imul
jns
scas
cmp
ljmp
and
mov
sti
or
sahf
inc
les
dec
stos
pop
jb
adc
out
cmp
loope
subb
mov
cmp
push
xor
push
mov
fs
jno
pop
sub
xorl
jo
dec
imul
xchg
ds
or
pushf
cmpsb
fimuls
pop
sbb
mov
push
dec
mov
and
repz
or
and
mov
sub
cmp
sbb
jmp
shll
or
out
jp
shl
mov
mov
les
aam
clc
mov
shl
and
fnstsw
dec
pop
dec
push
inc
push
daa
mov
and
inc
push
mov
out
aam
insb
repz
lods
push
add
sbb
push
ret
cmp
gs
sub
xchg
ss
jg
xor
call
jae
clc
shlb
lods
fdivl
adc
ss
mov
add
mov
pop
or
jo
sub
loopne
cmp
pop
xor
mov
mov
push
cmpsb
scas
jae
cmpsl
inc
xchg
mov
mov
xchg
aad
iretw
cmpsl
repz
shll
mov
outsb
or
adc
jp
jmp
jp
je
adc
nop
cs
xchg
je
cmp
shll
sub
fwait
mov
repnz
js
ret
popf
jmp
lods
aad
or
or
mov
and
stos
inc
pusha
cmp
adcb
pop
sarl
sub
push
aaa
xchg
pop
iret
xchg
mov
push
lret
cmp
dec
sti
jecxz
loop
mov
stos
movsb
out
and
cli
pushf
xchg
clc
or
jae
fwait
ljmp
aam
scas
ljmp
xchg
scas
lcall
jp
xlat
cmp
inc
sahf
pop
xchg
lods
ljmp
testl
push
xchg
nop
jns
jp
scas
push
ret
or
jne
gs
adc
pushf
rorb
cmp
sbb
add
or
mov
test
lcall
sub
comiss
jge
inc
mov
mov
fwait
movsl
cwtl
jp
cmp
xor
cmp
stos
pop
jae
or
test
mov
pusha
cmp
mov
ficoml
mov
mov
and
sub
mov
bound
xchg
mov
and
dec
sub
stos
mov
jnp
out
in
mov
sub
pushw
dec
or
or
and
mov
jnp
lock
push
leave
mov
lret
fcmovne
stc
add
cmp
and
and
push
pop
rorl
adc
movsb
ja
mov
mov
or
cld
negl
jb
xor
dec
pop
jl
insb
aaa
fwait
xor
inc
jecxz
bound
fwait
jbe
sub
outsl
mov
sbb
or
and
dec
int
addl
fwait
test
adc
outsb
lods
int
or
lret
push
call
push
jecxz
mov
sub
mov
add
pop
push
cltd
lock
or
sub
add
and
adc
movsbl
mov
xchg
cmp
inc
jb
stc
insb
adc
imul
loopne
mov
mov
ss
popa
sbb
push
int3
jge
rcrl
xchg
movsb
pop
or
push
adc
arpl
pop
aam
sti
call
out
fisubs
sub
push
arpl
imul
aam
cmp
sub
loop
and
sub
dec
xchg
test
pop
and
and
dec
data16
int3
stos
lcall
xor
leave
hlt
sbb
mov
cmp
xor
xorl
ret
and
cmp
push
scas
adcb
push
push
cld
push
push
dec
mov
scas
sub
and
in
sbb
lods
ljmp
stos
popa
insb
popa
cld
aas
sti
dec
aaa
shl
loopne
sarb
add
repnz
ja
xor
pop
inc
mov
xchg
testl
lret
pop
mov
xlat
daa
rorl
test
mov
shl
dec
aad
js
imulb
xchg
idiv
and
inc
or
jge
fbstp
ljmp
lret
test
outsl
int3
add
add
xor
mov
cwtl
sti
dec
pop
jmp
cmp
push
jno
push
mov
aas
scas
andb
sbb
sti
in
scas
pop
insl
push
mov
shll
adc
lea
cmpl
jno
jp
aaa
loop
fmull
cmp
sub
inc
xchg
lock
add
add
xor
push
or
arpl
and
push
movsb
mov
lret
push
push
test
mov
mov
pop
mov
cmp
fnstenv
mov
xor
js
mov
xchg
cmpsl
add
or
loope
les
in
push
pop
mov
jge
push
into
and
mov
mov
jbe
push
movl
jo
dec
xchg
dec
jp
cld
imul
jle
adc
or
test
inc
sub
movl
jg
fmulp
shlb
es
notb
aam
jmp
test
xchg
movsb
ficoml
dec
xchg
sub
and
add
lret
push
mov
jnp
outsl
pop
cltd
jl
cmp
call
cld
ja
mov
mov
cmp
mov
dec
aam
dec
int
test
das
scas
mov
and
mov
or
popa
mov
mov
lcall
fldt
and
jno
int
ret
out
cmp
jbe
andps
mov
enter
or
sbb
jle
jno
insl
adc
xchg
fistps
dec
xor
enter
jmp
xchg
sbb
mov
subb
xchg
imul
repnz
test
sbb
fistpl
adc
pop
adc
lahf
daa
stos
lods
data16
stc
fdivr
xchg
mov
jp
mov
popf
push
inc
lods
insl
add
mov
pusha
sbb
or
dec
fs
mov
adc
and
inc
adc
ja
aaa
mov
pop
jg
mov
andb
or
daa
add
mov
mov
addr16
mov
cmp
push
mov
mov
adc
sbb
repz
mov
daa
inc
ret
fisttpl
jge
fsubs
push
loopne
mov
imul
clc
sahf
jno
and
inc
sbb
int
push
aam
and
sbb
pushf
ja
insl
pop
loop
cli
cmp
cmp
mov
sbb
jecxz
sti
ret
push
aaa
std
sbb
roll
ret
pop
inc
mov
pop
js
imul
mov
adc
gs
out
movq
and
add
imul
push
into
mov
notl
aaa
testl
sbb
add
mov
push
push
push
adc
shll
inc
and
inc
sbb
stc
test
lods
add
xchg
stc
fldl
mov
push
push
les
and
and
add
ljmp
jge
jo
out
ds
jg,pn
xor
leave
mov
lahf
fwait
out
xchg
pop
addr16
pop
dec
int3
inc
enter
sub
ja
lret
outsl
lahf
adc
fmuls
mov
testl
xor
mov
dec
push
mov
pop
mov
sub
roll
mov
mov
mov
xchg
jns
aas
cltd
fbld
mov
jmp
push
xchg
icebp
push
cmp
aam
pop
sbb
push
jae
cmp
mov
leave
push
cmp
xchg
cmp
aas
pop
and
cmp
mov
mov
into
cltd
nop
xor
jmp
or
fistps
pop
popf
sbb
lahf
adc
test
sbb
cwtl
pop
mov
pusha
pop
mov
enter
imul
loope
lret
loopne
lret
cmp
xchg
movsb
sbb
xor
or
rorl
jmp
call
cmp
jae
scas
mov
je
jne
inc
int
rol
out
push
sub
icebp
mov
jmp
sub
test
jae
add
andl
xchg
pop
adc
gs
jmp
rcrb
icebp
sub
stos
sub
bound
rorb
inc
int
pusha
jmp
mov
cmp
pop
push
jp
push
adc
push
in
int
jmp
dec
pop
pop
das
lds
or
fldcw
iret
xor
clc
xor
inc
call
test
jle
push
mov
jno
push
lret
mov
lahf
nop
lock
dec
clc
add
mov
pop
lods
dec
add
xor
int3
xchg
movsb
push
push
xor
cmp
jl
insl
xchg
jns
sbb
ret
push
sahf
pop
inc
out
and
test
inc
test
insl
cld
jp,pn
inc
cmp
sub
pusha
sub
loopne
ret
and
mov
jp
testb
andl
cmp
mov
mov
adc
movsl
and
and
fadd
dec
inc
sbb
add
xor
sti
inc
xchg
inc
roll
sbb
push
or
mov
stos
sbb
in
sub
popa
int3
sub
pop
inc
enter
push
sarl
enter
cmp
or
lret
jmp
loopne
imul
or
cmp
in
mov
and
xchg
outsl
ret
xchg
in
mov
push
sbb
mov
aas
lcall
std
test
jp
or
lods
aam
int
push
jg
lret
cmp
es
outsl
xor
out
out
jmp
push
daa
or
lock
clc
repz
hlt
loopne
jns
and
pop
std
leave
mov
sub
push
mov
add
aam
loopne
sbb
pop
add
sbb
das
or
cli
xchg
orl
shl
sub
mov
call
scas
fldl
mov
cld
push
push
jp
fcoms
add
fwait
add
ljmp
or
inc
cltd
test
in
cmp
movsb
xor
dec
aaa
sub
loop
cltd
scas
shl
jo
lea
xchg
jo
push
mov
sub
out
insb
push
rorb
cli
fstp
movsl
pop
xchg
iret
aad
imul
xor
sbb
xchg
in
xchg
dec
jmp
ja
jb
popa
push
mov
out
push
xchg
jle
lock
aam
push
cmp
or
jge
cwtl
xor
sub
pop
xor
pusha
orl
inc
cmp
jne
ss
push
insl
sub
pop
and
dec
dec
testb
lods
add
mov
mov
loopne
mov
shrb
push
loopne
sbb
cmp
push
aam
dec
sbb
push
sbb
mov
and
sub
sub
stos
rcll
orl
mov
sbb
shl
inc
adc
int
cmp
imul
xchg
cmp
jne
mov
insl
push
mov
cmp
push
stos
in
lret
push
int
jb
popf
inc
and
ficomps
mov
pushf
aaa
mov
mov
ljmp
fmulp
inc
popf
rcrb
outsl
sbb
fnsave
mov
cmp
rolb
fcomps
inc
jo
repz
or
test
out
fwait
insl
sub
stos
negb
dec
clc
cmp
inc
xchg
lea
jecxz
outsb
imull
or
jnp
adc
mov
xor
add
les
inc
sbb
mov
push
xchg
adc
out
negl
add
add
in
sahf
xlat
xor
into
repz
inc
xor
call
arpl
and
repnz
popa
sbb
or
push
xchg
ret
push
sbb
sbbb
pop
xor
adc
fistpl
nop
lock
cld
mov
inc
enter
movsl
push
mov
out
fwait
jne
add
sbb
ss
mov
or
data16
fisubrs
hlt
fisubrs
scas
mov
insl
jge
xor
subb
inc
jo
jmp
sbb
sub
out
and
mov
nop
inc
aam
mov
cwtl
jecxz
repz
inc
sahf
pushf
leave
jg
inc
sub
dec
push
sub
lret
into
or
lds
push
push
sub
outsb
inc
inc
mov
xchg
imulb
fsubl
mov
mov
sub
je
pushf
nop
rclb
sbbb
je
dec
pop
sub
repz
and
dec
paddq
mov
popf
mov
dec
add
std
xor
hlt
mov
fisttpll
imul
out
imul
out
jmp
inc
adc
ret
jg
je
sub
pop
insl
mov
mov
sti
or
pop
pushf
push
add
sub
jns
sbb
enter
stos
sahf
jmp
bnd
xor
daa
jae
sbb
sarl
clc
fwait
or
fdivs
imul
ss
out
pop
pop
mov
cli
loopne
mov
rorl
test
int3
scas
fisttps
or
push
fstpt
pop
xchg
mov
shrb
jno
jle
pusha
das
adc
lock
bnd
push
mov
xchg
mov
int
jmp
mov
adc
mov
je
xchg
or
xchg
sbb
aad
push
mov
pop
cmp
xor
data16
xor
mov
adc
mov
ja
push
hlt
inc
or
push
pop
inc
mov
add
lods
sbb
iret
mov
ror
fwait
cmp
out
jbe
sbb
cmp
and
sub
inc
rorb
in
mov
fnstsw
loop
dec
loope
push
sbb
cli
ja
push
fisttpll
int
sub
pop
addl
addr16
sbb
mov
int
xchg
adcb
loopne
cmp
daa
fdivrl
lahf
sub
and
sbb
jmp
je
mov
push
in
push
ficomps
leave
push
inc
push
loope
xor
dec
fwait
in
add
push
lcall
sbb
les
xor
pop
out
inc
push
push
int
xor
add
adc
mov
jbe
dec
lea
ret
jb
cwtl
adc
imull
xor
dec
divl
pop
adc
dec
lds
hlt
shll
inc
xchg
dec
pop
or
mov
lock
out
cld
nop
or
xchg
push
cld
les
sbb
cmp
lret
and
out
sbb
out
addb
out
popa
add
loope
xchg
sub
or
sub
add
or
push
mov
adc
mov
add
js
test
aam
adc
into
fimull
push
push
stc
hlt
xor
lods
in
test
cltd
pop
mov
test
lods
mov
mov
cmp
inc
sti
lcall
xchg
add
jb
inc
std
ret
xchg
ljmp
mov
pop
or
xlat
xor
ret
xchg
aam
inc
fucomp
loop
cmp
adc
sub
stc
xchg
mov
jns
fldenv
test
ja
mov
sub
ret
sub
lcall
ja
sbb
jne
out
pop
movsl
sub
push
daa
in
lcall
xchg
aam
cmp
out
xchg
xor
xchg
out
les
popf
adc
add
fistpll
fidivl
ds
pushf
stos
cmpsb
lret
push
jb
jl
loopne
mov
sbb
push
push
cld
push
sbb
adc
stos
jnp
lahf
sbb
inc
jmp
lcall
das
rep
fwait
add
out
sbb
repnz
push
addr16
and
mov
subl
xchg
pop
jmp
addr16
dec
mov
pinsrw
insb
or
scas
mov
adc
inc
scas
or
into
icebp
ljmp
lcall
repz
daa
dec
cmovne
dec
and
and
hlt
or
shl
push
lret
orl
pop
scas
sub
fistps
cli
push
jp
pop
notl
enter
fisubl
ljmp
adc
out
jb
inc
add
shlb
clc
mov
jne
cli
inc
cmpsl
sarb
inc
mul
ret
ja
sbb
mov
stos
and
pop
mov
sbb
mov
imul
popf
stos
xor
xor
lock
mov
dec
sbb
out
mov
and
sub
pushf
cmp
xchg
and
cmp
lret
ljmp
call
int
loope
jge
daa
je
add
push
jbe
xchg
inc
inc
sub
enter
jl
cmp
rep
in
pushf
fwait
cltd
aas
fcoml
jg
mov
movsb
push
mov
xorl
out
xlat
test
add
cmp
ja
inc
jmp
dec
cmp
shlb
xor
icebp
fadds
lahf
call
cmpsl
dec
leave
insb
mov
fstpl
push
mov
xorb
sti
sub
mov
dec
popf
cltd
pop
bts
shll
push
jbe
or
std
mov
jno
sub
das
imul
sbb
lret
repz
xchg
sti
jl
mov
repz
inc
cs
xorl
subb
mov
mov
jge
add
dec
rorb
dec
pop
jmp
xorl
movsl
enter
andb
leave
dec
xorb
cmp
add
je
mov
btl
scas
cmp
bound
and
stos
and
and
sub
rcrl
or
fldcw
dec
rolb
or
mov
sbb
les
or
cmp
fcomp
push
sbb
insb
mov
mov
pop
or
cmp
hlt
jp
xchg
sarb
subl
lods
jns
or
sbb
push
push
cmc
pop
lahf
and
out
mov
sti
and
pmuludq
sbb
add
adc
js
arpl
in
rol
dec
fcmovb
jo
es
mov
sub
mov
sbb
aaa
jb
lret
mov
repnz
ror
fnstsw
xor
pop
xorb
fisubrl
sbb
inc
add
mov
aam
sub
pop
mov
nop
mov
or
rcrb
mov
adc
pop
xchg
fsubs
cwtl
stos
pop
adc
loope
enter
shrb
pop
pop
add
and
mov
mov
or
jns
lds
test
push
repnz
cmp
stos
xor
xchg
call
jae
insb
mov
xchg
pop
add
pop
inc
leave
in
sub
cmpsb
jbe
shrl
sub
nop
ljmp
jnp
rclb
mov
xor
adc
mov
cs
loopne
insl
add
hlt
mov
dec
lret
dec
sbb
test
inc
insl
pop
addr16
repnz
or
cmp
mov
clc
or
dec
jno
mov
xlat
sbb
cltd
sbb
mov
dec
je
arpl
lcall
test
addr16
inc
jae
push
stos
divl
movsl
mov
sub
in
fnstcw
mov
les
in
or
xor
aam
das
daa
testb
popa
jbe
mov
and
cmpsb
test
mov
cltd
add
sub
pop
add
fcoms
bound
js
jae
out
mov
jbe
out
lock
icebp
dec
js
sub
stos
cmp
test
cmp
and
and
or
mov
mov
push
into
mov
fdivrl
push
fs
xlat
test
sti
cmp
movsb
out
xchg
test
daa
add
popf
and
pop
daa
pop
and
jg
push
mov
mov
xor
aad
cmc
test
js
in
pop
sbbb
cmp
int3
xchg
mov
arpl
test
outsl
and
mov
dec
js
loop
and
es
cmc
rcl
stos
jbe
lods
in
aas
aam
lcall
les
jmp
enter
mov
mov
addb
push
es
test
jmp
mov
inc
sti
push
idivb
imul
cs
sub
idivl
mov
out
cld
dec
cmp
mov
cwtl
xor
jae
xchg
rolb
loopne
daa
mov
imul
mov
adc
popa
imul
mov
sbb
repz
rolb
adc
jle
sbb
sti
test
imul
mov
pop
mov
lock
sub
ja
das
jl
fidivs
xor
inc
test
std
rcrl
outsl
cmc
ds
mov
mov
jecxz
clc
xchg
std
cli
js
jge
cmpsb
jg
pushf
push
ficomps
js
dec
iret
pusha
sahf
imul
leave
das
fistpl
pop
decb
and
dec
sbb
nop
adc
jge
popf
ljmp
mov
cwtl
lahf
test
movsb
test
insl
sbb
cmpsb
jl
adc
jp
xchg
sbb
out
jb
stos
test
sahf
bound
cli
out
imul
jge
daa
sbb
gs
sbb
mov
mov
in
sbb
dec
xchg
mov
xor
dec
mov
mov
lahf
pop
push
leave
call
push
cwtl
inc
lods
push
repnz
push
ret
movsl
scas
enter
loope
loopne
mov
ljmp
or
stos
pop
push
mov
pushf
rolb
sbb
lods
cmp
popf
dec
ficompl
jmp
push
les
jnp
xor
pop
dec
lea
stos
in
cmp
lcall
js
dec
xchg
cmp
xchg
cmp
mov
sbb
cmp
in
jmp
test
fstps
imul
outsl
mov
pop
lds
push
test
jo
jae
test
mov
mov
ds
lahf
lret
orb
xor
jnp
sub
in
into
mov
and
mov
push
dec
lods
mov
inc
or
xor
imul
and
aad
pop
leave
xor
iret
mov
xor
mov
mov
and
outsw
sbb
mov
out
pop
mov
cmc
mov
xchg
rclb
pop
adc
pop
iret
and
cs
mov
fisttpl
popa
adc
arpl
nop
scas
mov
push
mov
sahf
adc
mov
lret
sub
mov
pop
and
cmp
mov
mov
adc
and
fcoms
or
jmp
xchg
mov
push
insl
add
lret
jecxz
mov
inc
addr16
ljmp
fldenv
mulb
cs
in
mov
or
jb
testl
xchg
mov
mov
cli
dec
loopne
pop
push
ret
xchg
mov
add
cmp
pop
push
in
pop
imul
mov
xlat
mov
sarb
fdivp
inc
dec
add
pop
call
fs
pusha
mov
popa
pop
repz
and
in
xchg
jp
sbb
lock
in
adc
subl
test
jbe
push
mov
jg
push
je
xchg
jb
cmp
outsl
mov
std
aad
out
lret
in
les
jo
pop
cmp
aas
lods
scas
and
subl
inc
nop
push
or
int3
sbb
js
mov
pcmpgtw
aam
pushf
dec
out
xchg
sbb
out
test
js
dec
ret
cmpsl
jl
lahf
push
int
aam
mov
push
and
mov
popa
xchg
pop
push
or
andb
jl
aaa
pop
pop
cli
mov
aaa
sti
rcl
adc
mov
mov
push
dec
cltd
xchg
add
dec
or
pop
xor
imul
sbb
and
xchg
aaa
mov
imul
jge
bound
lcall
es
cld
lret
dec
inc
xor
sbb
inc
cmc
imull
in
ds
pop
sbb
in
jbe
sti
or
lcall
sti
adc
int3
insb
pop
enter
les
shr
xor
pop
popf
pop
test
add
ret
xor
pop
lods
jle
pusha
cwtl
mov
mov
xchg
mov
or
enter
pop
movsb
mov
lds
loop
pop
arpl
negb
or
dec
jl
movsl
xor
jbe
out
imul
in
arpl
out
or
mov
aam
cmp
lods
fcoml
shrb
mov
dec
push
mov
push
cmp
sub
mov
insb
mov
into
test
gs
popa
sbb
push
sbb
jl
cmpsl
out
add
outsb
andb
rorl
xchg
jb
test
lcall
pop
push
subb
and
sbb
pop
dec
push
pop
aam
xchg
popf
test
sbb
bound
sbb
hlt
adc
pushf
and
popf
mov
lcall
pusha
dec
cmpsb
stos
insl
jne
sbb
outsl
fcom
clc
add
ret
aas
xor
adc
test
jno
insb
sub
mov
mov
dec
dec
insb
dec
mov
mov
or
div
ffree
int3
xchg
mov
mov
pop
fwait
out
scas
test
and
leave
add
xor
push
pop
push
test
inc
pop
and
add
lcall
or
mov
mov
stc
lret
test
test
ja
push
adc
jge
mov
jmp
sbb
movsl
pop
sub
pop
outsl
data16
ret
mov
sub
outsl
or
std
adc
int
inc
jge
je
ret
popf
testl
mov
jb
xor
jle
jae
aam
fstps
inc
xor
aam
mov
loope
fcmove
cmc
sub
daa
mov
dec
loopne
aam
push
mov
push
inc
cli
rcll
sub
jns
sahf
push
adc
aas
adc
mov
mov
pop
std
call
sub
je
cmpsb
pushf
or
push
add
sbb
adc
cmpsl
les
fwait
push
add
mov
movsl
dec
pop
inc
xor
sub
je
add
fbld
add
jnp
call
int
aas
dec
scas
mov
mov
pop
dec
ficomps
jl
nop
test
lret
sarl
and
cli
inc
jmp
add
pop
pop
xchg
mov
enter
xor
cmp
js
xchg
sub
lods
mov
enter
test
and
push
decl
aas
mov
mov
call
stos
daa
sbb
cmp
call
mov
sbb
xchg
mov
xchg
inc
cli
loop
aad
leave
pushf
cmc
lds
push
pop
cmpsl
repz
xor
push
clc
out
sbb
loope
cmpsl
stos
dec
push
fisttpl
pop
test
xchg
in
xchg
sahf
icebp
dec
cs
imul
pop
lods
mov
adc
fnstcw
sbb
repz
and
sub
dec
mov
inc
cld
bound
adc
stos
dec
outsl
out
mov
dec
js
jbe
ret
inc
and
in
rolb
mov
test
test
mov
jecxz
mov
jne
std
andb
repz
stos
pop
inc
lock
fadds
dec
movsl
negb
test
xorl
data16
pop
sub
test
imul
and
js
add
pop
mov
xor
jp
test
popa
mov
inc
mov
jae
sbb
lock
icebp
cmc
sar
andl
sbb
adc
shlb
push
hlt
cmp
pop
ret
ds
add
mul
mov
ss
mov
and
jge
ljmp
cld
insb
mov
decb
scas
xchg
fsubrp
sub
arpl
les
les
insb
mul
test
fcompl
or
aaa
leave
repnz
and
sub
cmp
push
fdivrs
mov
add
std
iret
cmpsl
daa
xchg
std
sub
aas
int3
ljmp
icebp
cwtl
push
add
scas
in
hlt
pop
sti
sub
push
mov
lds
sar
mov
or
lret
xchg
xchg
cmp
mov
movsl
mov
push
cmp
lods
test
jmp
dec
inc
mov
mov
sbb
repnz
mov
mov
or
loop
pop
mov
ja
push
fstpt
xchg
cli
and
cmp
cmp
adc
dec
dec
das
adc
div
inc
adc
inc
mov
movsl
mov
out
test
or
add
jae
sub
in
flds
mov
mov
jmp
xor
test
in
adc
ljmp
cmp
mov
inc
jecxz
lea
pop
clc
sahf
cmc
xor
mov
xchg
in
cld
xor
inc
mov
add
pop
jns
mov
bound
test
in
adc
pop
lcall
sub
add
inc
repnz
shrb
outsl
jp
jo
jge
push
and
pop
pop
lods
loopne
loopne
or
add
fs
jns
pusha
test
sbb
push
jbe
xchg
mov
xchg
out
int
loopne
jb
inc
and
dec
add
pop
xchg
adc
xlat
lret
xchg
adc
les
xlat
mov
jne
pop
mov
xor
and
sbb
les
cmp
fisubs
sub
mov
jp
out
aaa
and
xor
sbb
add
pop
fsubrs
nop
add
sbbb
mov
stc
mov
std
cld
in
in
int
mov
in
shll
fwait
or
movsl
cmp
daa
push
xor
in
stos
stos
inc
inc
imull
jle
and
add
je
push
xchg
mov
mov
sbb
lcall
iret
xor
pop
add
nop
lcall
icebp
stc
mov
mov
pop
sub
mull
xor
lahf
inc
pop
mov
mov
scas
iret
js
cs
in
aas
xchg
enter
inc
por
loop
mov
aaa
mov
sbb
test
lcall
push
or
fildll
stos
arpl
mov
xor
in
sub
adc
xchg
adcl
mov
out
sub
jae
lahf
sbb
mov
add
test
cmp
popf
xor
inc
push
lret
mov
jg
out
std
mov
mov
push
mov
adc
mov
cld
imul
stos
dec
cli
add
mov
mov
pushf
in
orb
cltd
ds
sbb
mov
inc
sub
mov
fadds
xchg
testl
adc
xor
pop
xor
jne
rcrb
sbb
add
in
nop
fldenv
scas
inc
bswap
jl
add
lods
lock
xchg
scas
loope
sti
fldpi
xor
popa
sub
fcmovnbe
roll
pop
and
cli
or
mov
pushf
testb
xor
out
shlb
repnz
pusha
in
xor
je
push
jbe
in
inc
movsb
pop
imul
lods
pop
jmp
cmc
push
add
icebp
mov
mov
push
fs
out
clc
cmpsb
push
ja
shll
sti
add
imul
lds
lods
popl
jnp
fbstp
cwtl
cltd
fnstsw
inc
sbb
inc
enter
subb
mov
pop
sbb
or
inc
clc
out
gs
sub
dec
jbe
or
jae
ret
stos
lods
mov
loop
lods
mov
push
mov
mov
dec
dec
add
and
std
push
sub
pop
push
lea
mov
xchg
mul
push
mov
loop
fadds
inc
or
test
in
cld
xlat
in
push
or
in
push
push
into
mov
pop
push
xlat
jp
out
xchg
sbb
fucomi
mov
fnstenv
adc
insb
jp
mov
shl
inc
cmp
int3
rcll
repnz
dec
mov
push
cmp
aaa
xor
insl
push
mov
fs
loopne
fdivrs
push
in
jp
pop
mov
andl
mov
fsts
jge
hlt
or
jg
sti
enter
shlb
ds
and
mov
mov
jmp
dec
mov
jnp
jl
add
sub
mov
dec
push
lods
rcll
dec
jl
or
mov
std
jnp
mov
inc
push
or
lcall
in
dec
and
cmp
xor
dec
andl
scas
xor
or
out
pop
add
sbb
dec
jnp
insl
dec
jl
iret
mov
cmp
nop
aas
mov
test
rcrb
adc
cwtl
pop
lcall
movsb
idivb
ret
cs
fs
movsl
cmp
adc
mov
or
inc
push
out
lock
out
xchg
inc
sub
aas
mov
aad
xor
xor
dec
xchg
jne
pop
repnz
fsin
push
cmp
arpl
out
xchg
out
push
dec
jb
cli
cmp
loop
xchg
repz
xchg
mov
and
push
mov
ja
push
addl
mov
inc
shlb
adc
xchg
or
mov
adc
push
fninit
aad
imul
or
cwtl
enter
dec
mov
movsb
pop
sahf
loope
imul
insl
mov
dec
int3
add
jo
aas
popa
rcl
sbb
dec
mov
sub
iret
inc
adc
sub
sbb
ss
pop
fcomip
addb
inc
mov
cmp
mov
pop
jge
idivl
sbb
xor
inc
xor
xorl
jge
scas
add
lcall
addl
xor
scas
flds
or
and
mov
inc
bound
int
into
test
add
xchg
imul
pushf
inc
testl
sub
idivl
or
int3
into
xor
loopne
mov
cltd
xchg
js
mov
imul
popa
lret
in
adc
mov
add
bound
cmp
sub
gs
or
outsb
jmp
mov
scas
sti
ds
cwtl
pushf
mov
aam
adc
rep
sahf
jne
mov
aaa
or
pop
cs
inc
gs
xor
push
xchg
inc
mov
cmpsl
inc
sub
stos
sbb
or
lds
scas
in
inc
loope
xor
dec
jnp
sbb
mov
push
outsb
lret
stos
inc
outsb
cmp
jmp
xor
mov
aas
stos
cli
fbstp
dec
inc
xor
fidivrs
lahf
clc
add
add
jl
pop
add
fistps
add
aam
sub
jp
mov
mov
rorl
add
cltd
ret
pushf
lock
cli
insl
xchg
fidivl
xchg
bound
dec
or
lock
or
flds
xor
jae
fiaddl
mov
ret
push
aam
shlb
in
mov
pop
lahf
add
jnp
sub
sbb
jecxz
sbb
mov
dec
inc
mull
and
or
inc
nop
cmp
scas
pusha
aaa
and
je
pop
notb
and
xchg
scas
xor
scas
or
push
loop
xor
in
add
cmp
xor
and
xchg
mov
cmp
and
xor
pop
pop
xchg
ret
addr16
sub
test
jno
add
add
sahf
sahf
adc
push
sbb
sahf
aaa
int3
push
push
mov
movsw
sub
mov
fcomp
lret
fsubs
push
inc
sub
sbb
outsb
push
cmpsl
xor
mov
inc
dec
inc
test
fcoms
cs
xor
cmp
or
int
cwtl
bound
fstps
jb
sbb
loop
and
or
insl
or
leave
int3
sub
adc
ljmp
and
cld
insl
cmc
ret
jnp
dec
mov
inc
and
dec
push
add
mov
test
jb
js
fs
push
xchg
mov
push
jp
push
or
xor
dec
std
loop
arpl
push
cmc
iret
js
ret
fwait
loope
les
jmp
str
inc
jbe
xor
cli
xor
jb
xchg
pop
inc
mov
cmp
addr16
lcall
insb
and
lods
cwtl
and
sti
or
push
dec
fdivrs
bound
jmp
in
out
lods
pop
lock
sbb
xor
and
adc
mov
inc
inc
mov
int
sub
push
pushf
lret
sbb
mov
cltd
call
mov
iret
sub
or
push
int3
cmp
jns
test
xor
pop
cmpsb
cli
xor
mov
add
loopne
push
mov
adc
cmp
jle
jae
aad
mov
call
sub
jg
je
clc
mov
pop
int3
or
inc
sub
xor
mov
stc
inc
mov
inc
das
sub
in
cmp
jbe
in
icebp
jmp
movsl
rcll
mov
pop
jnp
xchg
lds
lods
pop
xchg
in
mov
cmp
inc
inc
in
or
cmp
mov
or
push
ja
adc
pusha
nop
and
xchg
cmc
jp
add
lock
imul
lock
das
dec
xchg
jmp
sbb
push
loope
popa
xchg
xchg
imul
pop
push
sti
loop
rcll
mov
inc
push
pusha
cmp
push
mov
das
scas
cli
jecxz
jb
fsts
lods
cmp
push
loopne
jae
pusha
outsb
sbb
dec
loope
jo
stc
push
inc
das
or
xor
fcmovnu
pandn
pop
dec
or
mov
pop
inc
outsb
push
mov
loop
inc
dec
pop
pop
pop
pop
xlat
push
xor
mov
dec
pop
lret
test
stos
ds
xchg
push
movsl
dec
out
into
mov
cmp
push
cmp
sbb
fisttpl
mov
fwait
arpl
and
cld
inc
imul
jmp
in
xchg
out
jle
cli
ret
dec
cmc
out
or
gs
add
add
sbb
imul
lods
mov
fs
push
dec
repnz
push
imul
push
es
ja
jle
pop
out
dec
lods
inc
mov
inc
add
out
mov
push
lret
pop
mov
and
fcomi
xchg
xor
xchg
mov
or
dec
dec
mov
idivl
and
inc
push
js
stos
hlt
mov
outsl
aas
fmuls
iret
enter
add
jae
mov
dec
push
stc
sti
addr16
js
xchg
or
pop
mov
push
movsb
test
and
ret
das
xor
cmp
sub
pop
mov
xor
stos
sub
stc
ror
cmp
and
loope
in
cmp
jge
mov
lods
mov
out
xchg
cmc
push
inc
test
pop
cwtl
and
xor
js
and
scas
and
fmuls
cmp
movsb
mov
mov
aas
insb
xor
loope
stos
das
mov
das
out
out
outsb
adc
pop
lcall
cld
loopne
dec
jecxz,pt
fimuls
aaa
insl
pop
in
pop
ret
sahf
das
add
mov
mov
inc
loopne
jnp
and
adc
stc
and
push
sbb
mov
sbb
ret
rcl
test
jecxz
sti
and
jecxz
and
add
enter
loope
fsubrl
fimuls
pop
cwtl
outsb
fidivs
adc
fiaddl
lods
lods
nop
jno
push
pop
mov
and
fucom
ljmp
pop
cmc
es
mov
fwait
dec
nop
imul
mov
pop
ja
scas
call
dec
xchg
cwtl
push
ja
aaa
lret
xlat
gs
or
mov
mov
fldz
pop
sbb
xchg
and
inc
lods
or
xchg
mov
xchg
idivl
lds
jg
insb
pushf
out
mov
xchg
and
xchg
pop
mov
mov
jg
cmpsl
pushf
xchg
arpl
pop
push
pusha
lahf
and
push
ret
pop
pop
out
or
or
loopne
popf
mov
push
shlb
adc
inc
aaa
rolb
mov
xor
ficomps
sbb
aaa
popa
inc
pop
enter
inc
lds
je
faddl
dec
aam
adc
cmp
insb
sbb
fs
cld
mov
pop
stos
mov
jmp
fxch
inc
jne
scas
divb
and
enter
push
cltd
jb
sti
idivb
in
enter
ficoms
sub
mov
mov
push
nop
mov
jae
fnsave
cmp
dec
in
push
mov
mov
test
mov
imul
dec
or
cmp
push
js
lds
xchg
lret
jbe
std
ljmp
imul
pop
push
ja
pop
push
xor
in
mov
mov
dec
add
push
adc
add
sahf
orb
or
or
ss
cltd
les
into
shl
mov
flds
pop
iret
rcrb
inc
int
xchg
add
in
ret
dec
cmp
loope
clc
inc
fmul
xchg
ja
daa
mov
mov
loop
in
sub
xor
add
and
out
cmpl
mov
int3
leave
sarb
aas
pop
daa
sbb
mov
subb
jge
mov
xlat
push
loope
lea
mov
insl
inc
ja
cmp
and
mov
push
shrb
repnz
push
std
aam
mov
mov
inc
dec
lret
mov
imul
add
mov
jne
insl
loope
jl
pop
adc
repz
ss
jb
jl
or
push
stos
xchg
mov
xchg
or
fiadds
cmp
insl
mov
outsb
inc
push
jecxz
jmp
outsl
xchg
push
xor
ja
mov
lcall
leave
and
fcmovnbe
sub
shlb
cmc
and
rcll
stos
mov
hlt
push
jg
push
dec
lods
call
sbbl
lret
mov
hlt
add
arpl
aaa
fldcw
mull
mov
int
flds
lcall
or
loope
adc
hlt
jg
lea
cmp
mov
fdivrs
inc
and
mov
inc
adc
pop
cltd
test
and
pop
call
ficoml
ja
leave
xchg
mov
xchg
ror
xchg
ja
push
int
ret
inc
gs
out
push
pop
jne
pop
jns
push
cmp
push
sar
sahf
sub
sti
repz
mov
mov
lods
cld
adc
inc
inc
out
and
sub
jne
xchg
push
lods
or
add
data16
mov
add
outsl
repnz
jmp
push
pop
test
pop
xor
divl
mov
fstl
mov
inc
stos
add
add
sbb
subb
mov
push
aad
cmp
xor
add
xchg
push
sub
sub
mov
aad
dec
pop
popa
dec
enter
cmpsb
outsb
fistps
std
inc
cmp
push
in
push
nop
sbb
fsts
and
test
or
lcall
enter
fwait
insb
pop
imul
or
or
je
mov
fisttpl
lods
push
inc
sarl
subl
mov
cmp
cld
ds
xchg
in
xchg
inc
loope
jmp
int
mov
insl
ljmp
xchg
cs
jbe
cmp
popf
mov
movsl
jge
mov
cmp
sbb
ja
mov
or
and
adc
xchg
cwtl
jge
daa
shll
pop
sbb
mull
stos
jb
mov
jbe
pop
loop
pushf
or
dec
or
adc
jae
fwait
dec
sbb
pop
outsl
dec
ret
sbb
gs
popf
shll
and
jns
shll
pop
fs
or
xchg
dec
pop
int3
dec
sbbl
adc
jg
sbb
in
xchg
mov
lds
into
arpl
enter
adc
xor
mov
xor
sub
sar
push
jge
call
sbb
cmpsl
loop
faddl
pop
in
lret
in
jnp
lods
pop
mov
insb
mov
fs
mov
jg
in
xchg
into
or
sub
mov
cmc
mov
xor
push
popf
jo
mov
and
rcrl
rolb
pushf
js
lahf
and
scas
int3
and
outsl
test
arpl
push
je
mov
push
jne
insb
pop
pop
add
push
and
incb
push
popa
les
mov
mov
sub
mov
or
pop
mov
lret
push
cmc
mov
push
fsubl
fdivs
pop
push
jecxz
mov
leave
out
dec
nop
add
mov
std
ret
loop
xchg
rol
shl
jle
cmp
loop
jge
sub
xchg
fcoml
leave
js
xchg
dec
fcmovbe
out
cwtl
pusha
stos
out
pop
sbb
lcall
push
mov
cli
dec
pop
cwtl
in
xor
mov
sahf
rorl
loope
loopne
xor
xchg
addr16
inc
mov
fstpl
push
icebp
adc
or
out
popa
add
add
lock
mov
and
es
pop
sbb
adc
mov
dec
pop
and
je
lods
cmp
sbb
mov
sbb
inc
std
scas
aam
jecxz
inc
popa
scas
sub
inc
ljmp
cmc
jbe
pusha
pushf
xlat
rcl
test
mov
hlt
push
xchg
stos
enter
lahf
js
jo
adc
fnstcw
or
fnstsw
dec
pop
pushf
xchg
dec
mov
and
loopne
adcl
xor
jp
test
fstl
add
lods
mov
and
or
jge
sbb
lcall
push
add
dec
push
shll
stos
aam
pop
lods
xchg
jmp
cmpsl
and
add
pusha
adc
repnz
rclb
cs
inc
in
dec
roll
test
outsl
mov
push
roll
mov
mov
mov
in
orl
sti
ss
and
jl
shll
les
sahf
fimull
hlt
lret
lcall
movsb
push
aad
test
movsb
mov
cmp
mov
xchg
xor
test
das
ja
into
inc
std
lods
subb
popf
xor
xchg
inc
pop
cmp
mov
pop
xchg
xchg
xchg
in
mov
aam
or
push
in
int
mov
cli
adc
imul
stos
fdivrl
push
jne
call
adcb
cmp
dec
xor
cli
cli
fiadds
dec
mov
bound
xor
cmpsb
xchg
sbb
add
xor
push
lret
call
gs
jge
sbb
dec
dec
cmp
cmp
shr
aas
aas
loopne
pusha
notb
dec
sub
xchg
push
mov
jecxz
add
out
jl
popa
lahf
aas
stc
sbb
shll
mov
sbb
inc
sbb
aam
dec
movsl
aam
mov
and
out
fcoms
imul
xchg
dec
add
mov
jo
sbb
test
mov
leave
inc
ss
out
out
popa
mov
or
cmpsb
sbb
pop
lock
decb
mov
mov
pop
xchg
push
stc
fldt
push
xchg
ss
seta
cmp
and
add
arpl
push
jns
and
pushf
bnd
gs
sahf
pop
cli
pop
add
loope
mov
dec
sbb
mov
dec
or
jl
dec
push
mov
mov
cs
rcrl
mov
xor
cmp
dec
outsb
stos
out
psrlw
pusha
mov
ror
icebp
sub
jo
fs
shlb
mov
adc
cltd
pushf
sahf
roll
negb
jno
sub
push
mov
lods
cmpl
pop
repnz
mov
mov
outsl
sbb
jge
pop
iret
cmpsl
popl
dec
in
cmc
lahf
or
fcoml
test
stos
nop
xorl
xchg
or
out
pop
bound
lods
in
cmpl
popa
and
dec
lock
mov
lret
and
bnd
pop
mov
lcall
lea
or
test
inc
sub
xchg
rcrb
xlat
lods
rcl
lock
sahf
or
push
ja
das
sub
movsl
xchg
ss
cs
pop
in
cmp
cmpsl
test
cmp
sub
add
cmc
and
xchg
orb
jno
inc
outsl
nop
fiaddl
cmp
je
dec
imul
sub
adc
pop
dec
and
mov
adc
mov
add
popf
hlt
jmp
popf
fistl
jp
ljmp
xchg
cmp
cltd
daa
setge
ret
cmp
pushf
mov
aam
shll
jns
ret
xchg
js
jp
enter
push
mov
fistps
iret
outsl
sahf
jl
subb
pop
test
jmp
outsb
mov
inc
out
nop
test
repnz
test
xchg
mov
lret
push
iret
mov
xchg
xchg
mov
push
jne
jecxz
ss
fidivs
jae
je
jl
jp
scas
jo
es
clc
jge
fwait
lret
aad
sbbb
and
add
std
inc
push
pop
int3
jbe
mov
sub
aam
sbb
adc
xchg
inc
mov
sub
push
jb
lods
mov
enter
or
xor
mov
cmp
in
inc
add
jmp
add
and
cli
loope
mov
lret
pop
jnp
ror
in
push
out
frstor
xor
add
mov
mov
push
adc
ret
cmp
xchg
push
rolb
jg
stos
mov
mov
cmpsl
pop
add
fstps
stos
shll
ss
inc
lcall
adc
dec
or
adc
popf
pmaxub
out
gs
lret
iret
push
scas
push
js
icebp
sbb
popf
xchg
ljmp
push
sbb
cld
jbe
adc
fxam
outsl
adc
sub
mov
pop
dec
add
dec
sbb
aam
stos
pop
loopne
add
fs
mov
enter
jae
mov
js
in
loope
in
fsubrl
mov
mov
subl
test
sub
shll
hlt
test
push
push
jno
mov
jae
pop
loope
push
subb
aas
lods
test
cmpsl
ss
mov
adc
test
lods
jnp
xchg
lret
mov
jp
ds
mov
into
jo
test
lods
dec
sbbb
repz
push
add
adc
rcrl
sub
pop
emms
fldt
jb
push
test
popl
push
movntq
mov
fmuls
mov
fiadds
aam
sbb
adc
or
jnp
gs
jno
xor
dec
or
push
lea
inc
adc
and
imul
xchg
and
rsqrtps
and
xchg
lock
imul
sbb
sbbl
stos
jg
movsb
rcrb
cld
scas
or
push
jnp
cld
lods
xchg
ljmp
sbb
addr16
and
mov
nop
add
cwtl
push
movb
mov
push
stos
add
adc
lods
sbb
lidtl
mov
jo
cmpsb
aas
cmc
lods
movb
dec
pop
ss
jecxz
neg
mov
xor
xlat
dec
in
add
pop
and
arpl
filds
mov
orb
sti
xchg
add
xchg
mov
inc
dec
imul
aaa
mov
mov
stos
mov
bound
add
test
inc
cmp
insl
inc
inc
lret
sbb
dec
in
mov
sbb
std
cli
mov
add
shlb
cmp
loopne
xor
pop
adc
push
push
lahf
xchg
out
mov
adc
mov
fldl
pop
pop
adc
ljmp
add
jnp
and
rorb
or
clc
mov
arpl
inc
fwait
fwait
mov
jne
adc
repnz
mov
xchg
cmp
cs
sbb
pop
xchg
cs
fdivl
out
cwtl
add
test
inc
ja
repnz
nop
lea
into
stc
or
jmp
cmp
stos
pop
add
sub
mov
mov
into
mov
pop
mov
jnp
stos
loopne
sub
inc
push
subb
pop
mov
cmpsb
mov
leave
sub
push
sub
stos
jecxz
sbb
arpl
xchg
fnstcw
pushf
pop
mov
adc
filds
scas
sbb
dec
xchg
xor
mov
out
jnp
in
jge
leave
jae
mov
sbbb
imul
andb
xchg
cmp
mov
jg
icebp
push
jge
sub
xchg
push
pop
lods
je
ljmp
iret
shrb
push
lahf
in
lock
repnz
enter
leave
sub
popa
dec
js
scas
negb
pop
hlt
lea
inc
or
or
mov
cld
std
inc
ss
pop
sbb
push
lds
dec
ret
icebp
dec
sbb
in
adc
sti
insl
xchg
or
inc
cmpsl
popa
sbb
pop
sarl
pusha
lock
jnp
or
mov
outsb
cmpl
pop
mov
sbb
cmp
fldt
adc
mov
xchg
sub
ljmp
and
jns
push
dec
aas
out
adc
iret
add
bound
xchg
lcall
loop
push
cmp
cmc
sub
xchg
xor
lret
loopne
xchg
insb
jle
inc
mov
or
dec
xor
lret
xchg
out
fistpl
cmp
bound
adc
addr16
cmp
jbe
jp
xchg
je
popa
insl
mov
inc
movsl
dec
mov
aaa
sbb
cmp
inc
or
jle
inc
pop
pop
js
adc
inc
cmpsl
fwait
adc
mov
add
pop
xor
inc
ret
int
dec
jno
lret
jo
adc
mov
inc
jns
jl
popf
xchg
cmp
pop
mov
or
insb
mov
movl
aas
out
sbb
jecxz
cltd
mov
and
jmp
ja
inc
fistpll
jne
xchg
jno
int3
test
out
add
cld
ret
push
dec
out
mov
adc
mov
push
mov
mov
push
jmp
fs
shl
or
mov
sub
dec
repz
jae
push
and
xor
daa
scas
movsb
mov
mov
nop
add
lahf
jecxz
dec
inc
mov
mov
mov
in
add
push
jmp
jge
jne
pop
addr16
mov
mov
sti
inc
test
inc
mov
cmp
lcall
xor
jl
or
mov
les
mov
inc
pop
lret
gs
pop
daa
mov
jmp
stos
mov
mov
lahf
out
hlt
lahf
or
push
xor
sub
add
sub
loop
mov
mov
xlat
loopne
inc
xchg
fstpt
outsl
or
mov
bsf
jmp
mov
xor
lahf
lock
dec
aad
les
icebp
pop
je
cmp
in
lock
inc
or
dec
clc
pop
mov
loope
jg
je
pop
shr
aad
int
mov
pop
jo
xlat
movsl
rorl
aas
clc
push
xchg
mov
fsubl
pop
sarl
and
enter
cmp
adc
adc
cmc
imul
pop
push
or
stc
xchg
js
add
pop
mov
fldenv
xchg
mov
xor
sbb
mov
pop
mov
xchg
inc
loopne
mov
gs
arpl
movsl
cltd
mov
cli
clc
mov
aaa
lret
xchg
jne
in
or
enter
lods
fst
cmp
add
dec
sub
sub
inc
in
cltd
xchg
push
lock
movsl
es
movsb
sbb
dec
subl
add
adc
push
mov
fdivr
pusha
jp
or
push
mulb
ds
int
mov
inc
or
iret
mov
dec
add
outsl
cmp
jne
add
mov
das
jne
jnp
in
mov
js
push
xor
clc
mov
push
xchg
test
sti
lea
test
xlat
out
cmp
subl
cwtl
fstl
ror
lret
or
imul
dec
sub
mov
repz
sbb
pop
rcr
movsl
arpl
sbb
stos
fbstp
out
push
adc
je
dec
xchg
repz
pop
mov
popf
sub
mov
mov
shll
stos
sbb
push
cmpsl
je
fbstp
dec
stc
test
jno
adc
mov
xor
lret
push
icebp
add
orb
hlt
add
fisttpll
ret
or
scas
push
jg
fldcw
cmp
xchg
mov
dec
or
jmp
mov
push
or
psrad
mov
loope
iret
leave
dec
sbb
movsb
cld
jne
int
pop
insl
xchg
adc
in
scas
xchg
sbb
loope
pop
add
punpckhdq
inc
inc
push
into
add
jne
lds
sbb
sahf
inc
adc
test
lods
sbb
es
dec
imul
icebp
loopne
jmp
jg
mov
insb
stos
fnstcw
mov
push
jge
sbb
stos
shrb
repnz
or
in
cld
push
pop
xchg
inc
int3
push
cli
jb
hlt
sub
xchg
scas
sub
in
xchg
movsl
mov
cmp
jmp
fdiv
push
nop
add
mov
push
jecxz
xchg
loopne
popa
sbb
lock
int
das
in
test
xchg
add
inc
xchg
push
lea
aaa
xchg
ds
xchg
mov
pop
mov
xchg
and
cmp
pop
jne
into
sti
push
addb
push
xor
add
rorl
jnp
vmread
mov
pop
mov
push
or
lea
xor
mov
mov
pusha
lret
aas
fstl
and
sub
dec
dec
popf
icebp
mov
adc
add
pop
lcall
insl
adc
jle
ljmp
clc
aas
adc
push
into
pop
fst
aaa
pop
fs
cld
jmp
dec
je
xlat
arpl
pop
jecxz
add
add
popf
fdivr
and
sti
cmp
ret
fwait
cwtl
adc
mov
pop
or
push
out
iret
call
jl
xchg
loope
das
int3
fcmovne
cmp
add
jg
dec
jbe
out
or
pop
cmp
icebp
shlb
inc
lds
cmpsl
xchg
xchg
push
jne
adc
dec
xor
leave
push
xorb
mov
jge
repz
loop
pop
xchg
xchg
inc
xchg
and
mov
xor
fsubr
xor
xor
cltd
inc
shl
outsb
add
add
idivb
ret
sub
sti
aas
xlat
stc
pop
test
inc
or
pxor
sub
pop
push
dec
add
adc
xchg
sub
inc
iret
dec
adc
push
inc
inc
mov
aad
mov
and
andl
fidivrs
shll
push
mov
in
call
dec
out
pushf
push
loop
fimuls
das
test
mov
aad
out
cmp
xchg
inc
dec
adc
xor
inc
nop
inc
push
std
fmulp
push
and
mov
mov
xchg
adc
and
push
push
std
cmp
test
sbbb
lea
std
pop
loop
adcb
and
out
cmp
loopne
inc
dec
dec
movsl
insl
jp
mov
mov
mov
cmp
xor
notb
ja
lret
pop
sbb
aam
xchg
push
push
enter
fs
mov
rcll
shlb
fdivp
or
out
and
inc
icebp
mov
test
sbb
adc
add
sbb
pop
ja
loopne
push
or
push
jns
mov
cmpl
std
aad
pop
aas
inc
xchg
out
insb
jae
jnp
push
xor
mov
push
or
pop
sbb
mov
xchg
sti
sarb
lds
les
jp
aad
rorb
sub
dec
and
icebp
icebp
inc
orl
cmc
adc
or
rcl
popa
mov
xchg
call
cwtl
in
inc
xchg
and
pop
xor
xor
mov
int3
test
dec
sti
stos
daa
adc
cs
push
outsb
add
outsl
pop
fadds
xchg
and
pushl
lahf
nop
jae
pusha
dec
into
dec
fisubrl
lea
and
es
sahf
sub
adc
out
sub
adc
pop
jae
sbb
in
pop
add
jle
fildll
or
pop
inc
mov
out
ret
dec
sub
add
xchg
cld
dec
addr16
mov
fcompl
add
out
adc
jl
sahf
and
pop
scas
xchg
mov
xchg
push
andb
pop
stos
rorb
loop
fwait
bound
adc
loopne
jo
mov
jnp
pop
out
and
jo
jne
inc
mov
dec
jp
sbb
mov
enter
or
push
insb
jl
sbb
loopne
pop
ja
call
movsb
inc
loopne
enter
sub
adc
push
cs
icebp
out
aaa
lahf
mov
xchg
cld
outsb
cmp
out
leave
xlat
rcr
imul
stc
sahf
mov
aad
pop
ja
in
mov
push
js
sub
dec
jnp
pop
adc
inc
cwtl
adc
pop
repz
stc
scas
adc
or
fidivs
dec
xlat
ja
orl
imul
xorb
mov
pop
or
push
stos
mov
fisubl
sub
roll
push
mov
js
test
icebp
add
inc
dec
or
jg
pusha
popf
jo
imul
cmp
sbbl
hlt
jp
pop
sub
pop
js
lahf
mov
or
sub
mov
test
jl
mov
xchg
icebp
out
mov
mov
repz
fistps
xchg
jb
jecxz
out
cmp
xchg
mov
add
push
outsb
jo
jns
call
add
fwait
mov
jp
popf
pop
cld
aam
insb
stc
into
in
mov
sbb
and
mov
mov
pop
jmp
adc
sub
and
xchg
inc
leave
rolb
fildl
dec
jle
je
stc
icebp
adc
sub
fwait
push
and
pop
inc
jp
xchg
ss
push
mov
repz
aaa
or
outsl
mov
mov
fcompl
in
icebp
jecxz
stos
popf
jns
mov
stos
add
fsubrp
pcmpeqw
add
leave
sti
push
push
push
lcall
mov
in
das
or
ficompl
sbb
xchg
or
inc
test
imul
roll
inc
fisttpl
push
adc
pusha
nop
mov
or
lahf
xchg
add
cmpsl
pop
arpl
fwait
cmc
xchg
mov
cmpl
movsl
dec
push
and
lock
xchg
rorb
add
mov
xchg
mov
daa
push
jge
fstps
adc
cmpsb
lock
jecxz
push
xor
rclb
sbb
or
mov
jb
jae
push
mov
call
xchg
out
xor
xchg
inc
das
xchg
inc
cmp
in
repz
stos
dec
xchg
push
inc
xchg
daa
aad
dec
and
jp
mov
icebp
testb
out
gs
and
cmp
push
outsb
push
loop
xchg
int
push
xor
icebp
call
popf
inc
mov
xor
lcall
xchg
in
fidivrs
mov
scas
cmovg
xchg
out
mov
sbb
or
sub
sti
adc
sarb
or
xchg
loopne
into
cmc
xlat
arpl
sub
inc
push
mov
push
aad
xchg
sub
xchg
mov
aam
ficomps
add
inc
cwtl
sbb
icebp
or
inc
test
lods
or
cmp
sahf
pop
sbb
negb
xor
adc
mov
cvttps2pi
jp
sarl
sbb
out
xchg
and
pop
outsb
and
out
dec
cmp
xor
clc
pushf
jne
test
push
loopne
sbb
shrl
or
sarb
hlt
leave
das
pmovmskb
loop
fdivrl
push
test
dec
cmc
leave
rolb
add
sbb
jl
jle
loopne
mov
add
cmove
cmp
jl
push
aad
mov
xor
mov
lods
pop
movsb
xchg
jle
frstor
arpl
or
xor
sbbl
in
into
pop
or
popa
mov
inc
out
cmp
pop
adc
mov
mov
jg
sbb
sub
lea
sub
inc
aaa
dec
mov
cmc
movsl
push
popf
cmpsl
mov
jmp
push
xchg
mov
mov
mov
lods
xchg
scas
mov
ljmp
jg
filds
xor
sub
and
divl
push
es
pop
lock
mov
cmc
lret
and
loope
pop
push
jo
sbbb
dec
add
clc
bound
clc
xor
imul
pop
jno
push
mov
or
arpl
sub
out
mov
cmp
pop
aaa
pusha
inc
jb
sti
cmp
and
push
iret
test
in
ss
fwait
pop
push
std
cmp
dec
call
mov
xchg
and
ljmp
rcl
mov
xor
stc
dec
sbb
jp
pop
dec
fsub
adc
inc
pop
jmp
lret
mov
mov
mulb
lods
push
fdivs
sub
add
ljmp
mov
pop
xorb
push
add
repnz
mov
insl
in
push
mov
jl
icebp
popl
out
push
inc
sbb
loope
sub
das
push
push
movsb
sub
cmpsb
xchg
jbe
leave
adc
imul
lret
mov
dec
mov
negb
iret
jno
dec
cmp
arpl
mov
cmc
clc
mov
push
fdivs
xchg
push
sbb
test
lods
sbb
cmp
pop
push
sub
ljmp
push
dec
adc
addr16
sub
ja
jl
xchg
idivb
jmp
test
les
sbbb
lods
jne
inc
push
xor
fs
in
lds
aad
xlat
bound
mov
fwait
gs
jp
ja
lock
fwait
cvtps2pd
inc
out
in
ljmp
push
in
hlt
xor
int3
or
aas
mov
mov
into
fldenv
xor
call
out
mov
addb
scas
popa
fiaddl
notb
adc
daa
addr16
insl
insl
pop
in
xor
les
jnp
leave
jbe
mov
fmuls
pop
dec
push
push
loop
dec
test
or
cli
clc
not
je
fadds
sti
cwtl
fcoml
push
lock
push
or
or
fwait
mov
push
push
adc
psrlq
sub
imul
push
sbb
arpl
test
out
jg
cmpsl
and
int3
jmp
dec
ret
cmc
push
cmpsb
scas
mov
add
mov
pop
inc
or
iret
jns
out
aam
js
cmpl
mov
and
mov
sub
shrl
flds
xor
jge
sbbl
cwtl
ffree
daa
pop
jecxz
sbb
xchg
cmc
xlat
das
test
fxam
in
je
rcll
pop
aaa
cmp
mov
outsb
call
lea
mov
push
aam
sbb
or
shlb
xor
sub
test
jmp
mov
test
mov
dec
sub
and
add
xor
sahf
mov
push
hlt
sahf
into
jno
das
lret
mov
adc
jo
mov
mov
out
jge
xchg
cmp
xchg
mov
add
jl
sbb
pusha
dec
mov
roll
daa
ja
cmc
xchg
dec
in
pop
je
loope
xor
in
cmpsl
mov
testb
or
inc
mov
push
call
mov
outsb
rorl
push
shrb
inc
je
mov
pushl
in
sub
test
cmpsb
push
cltd
jmp
fstpl
add
jbe
lods
inc
orl
lods
or
pushf
fwait
pusha
inc
push
out
adc
sbb
jne
icebp
stc
jae
mov
cmp
xchg
push
les
aaa
imull
and
js
call
imul
jmp
mov
or
shll
lret
sti
in
cmp
les
lahf
mov
clc
loope
clc
pusha
adc
mov
inc
lea
cmp
idivb
mov
dec
sbbb
and
scas
mov
aad
sahf
jbe
cmp
mov
fildl
ret
sub
cli
popa
aad
mov
clc
das
mov
cmp
cmp
lds
jno
push
ret
stos
lea
sbb
push
jle
add
inc
or
test
popf
loop
xchg
lods
jl
lds
adc
xchg
cmp
cmp
dec
rcrb
mov
cltd
mov
jno
mov
mov
inc
pop
pop
pop
and
ds
cmp
call
jnp
mov
xchg
and
sti
and
mov
adc
xchg
dec
stos
jl
and
add
loope
push
push
dec
int
push
mov
les
stc
shlb
out
or
push
and
add
in
or
xchg
testl
inc
push
aad
scas
fiadds
xchg
add
pop
rcrl
dec
in
push
ja
cmc
sti
addr16
xor
in
test
sahf
xor
rorl
xor
jecxz
nop
ja
scas
int3
add
mov
pop
aad
and
pushf
ficompl
push
outsb
jae
jo
shl
dec
and
out
lods
sub
mov
into
aad
push
or
outsl
mov
push
adc
movsl
cmp
clc
out
pop
sbb
rol
cmp
xlat
aad
ret
dec
js
and
xchg
shlb
flds
xor
push
pop
leave
imul
mov
pusha
sbb
lock
jle
lods
call
push
scas
or
std
cld
enter
jnp
das
pop
popf
std
mov
jb
gs
pop
shlb
outsb
ss
in
inc
sti
je
int3
fmull
mov
pop
and
mov
xor
int3
add
leave
xor
xchg
and
mov
push
mov
jge
in
jecxz
xor
rol
pop
push
cltd
pop
sub
inc
push
mov
test
cwtl
dec
cs
sbb
mov
icebp
int
in
sbb
xchg
pop
pop
arpl
repnz
sub
or
inc
mov
std
or
fnsave
pop
cmp
mov
jbe
cmp
movsb
pushf
adcl
loopne
xchg
out
icebp
lods
lds
mov
into
and
pop
mov
insb
xorl
adc
sub
add
nop
sbbl
in
fsubl
mov
lcall
in
jb
inc
adc
push
es
js
push
mov
jno
push
adc
sti
fistl
jle
dec
fidivrs
sub
rcl
imul
jp
repnz
ljmp
pusha
pop
cmc
sahf
mov
enter
ds
sti
xor
pop
fcomps
into
mov
scas
shl
cwtl
pop
ret
mov
sbb
xchg
push
sub
xor
out
mov
dec
test
mov
add
out
xor
loop
in
add
out
fisttpll
jo
add
popa
aaa
and
sti
pop
rclb
mov
and
and
mov
in
xchg
mov
fs
add
in
adc
ret
rcrb
addr16
mov
xchg
idivb
stos
push
repnz
adc
add
jns
push
mov
add
xor
adc
jp
cmp
clc
test
dec
pusha
mov
test
xchg
hlt
loopne
mov
push
les
aad
inc
inc
icebp
cmp
lret
push
fwait
xchg
lret
hlt
push
and
mov
lcall
cmpsl
push
adc
mov
dec
cmp
dec
rcr
imul
xor
cmpsb
enter
and
xchg
sub
je
mov
pop
cmp
sub
and
lret
test
sbb
call
orb
nop
out
mov
and
or
mov
lahf
sbb
inc
sti
inc
sbb
in
inc
shlb
es
mov
cs
sub
addb
fwait
jb
mov
out
mov
and
mov
xchg
in
repnz
nop
jmp
imul
jl
sub
sub
inc
sub
jb
sbb
in
out
popf
in
outsl
sbb
xor
pop
insl
add
xchg
jno
rorl
out
test
add
aas
mov
inc
mov
inc
js
outsb
pop
sbb
push
lea
insl
sub
jno
addl
imul
inc
imul
xchg
xchg
mov
and
sbb
sbb
push
mov
in
call
inc
leave
sub
cmp
lcall
ds
xor
movsl
xchg
xorl
data16
aam
leave
mov
loopne
pop
test
repz
in
cli
push
xchg
mov
popf
pop
out
testl
jae
idivb
pop
lods
sarl
stos
sbb
aaa
cmp
outsb
fwait
test
mov
or
pop
sahf
sti
mov
scas
jns
sub
add
dec
into
aad
pop
pop
mov
and
outsl
ja
ficompl
adc
adc
ret
adc
outsb
add
js
cmc
int3
jae
out
mov
push
icebp
add
bound
hlt
hlt
dec
xchg
iret
gs
idivb
ja
imulb
lgs
xor
sub
mov
mov
pop
aam
mov
out
movsl
xchg
repz
nop
sbbb
fdiv
out
add
aaa
add
pop
pop
sub
aaa
mov
mov
loope
mov
fadd
xor
inc
mov
or
sbb
test
lret
repnz
int3
mov
mov
outsb
mov
es
cmpsb
lods
es
jmp
in
or
repnz
mov
inc
sti
push
lahf
mov
lret
add
dec
xchg
divb
adc
aaa
sub
push
pop
inc
mov
mov
cmp
push
pop
sbb
pushf
js
stos
push
test
cmp
out
add
icebp
cmpsl
mov
mov
mov
pop
test
aam
pop
or
cwtl
loope
jecxz
pop
data16
jmp
xor
fwait
adcb
xchg
outsb
in
jle
adc
scas
int3
inc
dec
mov
sbb
mov
leave
and
notl
add
dec
leave
and
dec
mov
xor
pop
cmp
mov
and
imul
mov
pop
xchg
and
and
je
push
mov
push
xchg
and
jnp
fstl
fmulp
imul
jg
pop
fildl
scas
in
shlb
push
jg
xchg
xor
out
lods
popa
dec
cld
inc
cmp
add
mov
imul
aam
ja
scas
adc
leave
into
ret
insb
out
sub
loop
mov
enter
cld
and
add
imul
bound
aad
out
stos
mov
pop
lcall
add
jno
enter
scas
push
test
ret
adc
pop
mov
push
jne
mov
jmp
dec
lahf
imul
test
inc
xchg
ds
mov
scas
pop
bswap
test
nop
rorb
std
cmpsb
shll
lock
in
xchg
jne
fstp
jb
lock
stos
or
stos
push
jns
jmp
add
mov
jl
mov
sbb
xchg
test
out
add
or
je
int3
xor
in
ljmp
push
and
push
pushf
incl
jl
movsl
fdivs
and
xchg
mov
add
cld
scas
fwait
popf
jle
mov
xchg
fsts
fcmove
into
lret
rclb
push
and
dec
mov
aam
cmpsl
rcll
dec
jg
jg
data16
test
add
mov
ror
rorl
pop
jno
cli
adc
jno
jne
push
pop
mov
push
cmc
pop
imul
push
nop
push
lcall
jbe
xor
adc
dec
popa
cld
popf
jmp
adc
es
scas
or
pushf
sub
jp
cmp
or
fimull
popl
push
cmpsl
push
mov
mov
cmpsl
dec
jmp
inc
mov
pusha
sub
pop
xchg
jns
or
insb
xlat
stos
push
push
pop
lea
push
test
add
fdivs
jo
pop
or
cmp
mov
jnp
sbb
inc
das
loopne
inc
lret
ds
lds
inc
repz
insl
mov
fnsave
add
in
add
lcall
mov
cld
lods
sub
add
sub
xchg
jbe
js
adc
push
insl
sbb
and
gs
or
add
out
inc
xchg
jle
pcmpgtw
cmp
cwtl
aad
popf
pop
mov
fwait
ja
insb
mov
inc
fists
sbb
ljmp
mov
ss
outsb
lock
adc
push
hlt
sbb
hlt
loop
add
mov
push
inc
andl
mov
push
lahf
mov
inc
mov
repz
pop
mov
cmp
pop
test
mov
test
sbb
jb
jp
out
push
aad
aas
bound
xchg
jb
push
aas
dec
fimull
rclb
out
inc
pop
lods
and
pop
imulb
aaa
fsubp
shll
fmul
jle
lahf
sub
frstor
and
xor
mov
rcl
pop
adc
jbe
push
enter
popf
call
xlat
shlb
lret
pop
inc
lret
gs
dec
inc
mov
and
push
test
out
push
pop
in
or
fildll
into
dec
add
into
mov
pop
lret
sbb
mov
dec
stos
mov
and
cmp
les
pop
data16
pop
call
cmp
imul
mov
mov
jo
cmc
and
inc
and
mov
sub
pxor
add
jmp
fisttps
leave
cmpsb
xlat
aad
mov
push
jle
loopne
adc
popf
cmp
testb
cmc
scas
dec
int
cmp
xchg
adc
stos
mov
mov
ds
adc
test
push
pop
mov
ret
cmp
ja
popa
es
les
fldenv
cltd
imul
sbb
int3
stos
rcll
lea
iret
sti
fwait
lods
mov
or
pop
rclb
dec
jmp
insl
and
adc
mov
add
sub
push
jbe
and
sbb
jae
cmpsb
test
lcall
scas
or
pop
pop
xchg
pushf
xchg
fisubrs
test
fnstsw
xor
mov
sub
and
dec
jbe
popa
mov
jmp
or
inc
or
push
ja
cmpsl
pusha
xchg
imul
stc
addr16
pop
enter
imul
call
and
mov
adc
or
push
pop
mov
stos
cmp
inc
dec
fwait
inc
rorb
mov
cltd
cld
inc
adc
das
addl
adcb
add
shrl
adc
jne
sub
stc
leave
pop
out
cmp
mov
pop
push
xlat
bnd
aas
loopne
mov
jmp
xchg
ficomps
outsb
into
out
js
pop
pushf
pop
in
jg
fdivrs
lret
insb
arpl
outsb
outsl
rcrb
aam
lcall
jo
outsb
bound
loope
test
jns
jns
sbb
mov
pop
mov
insb
rcr
mull
and
cltd
call
push
sub
and
push
repz
sub
scas
push
inc
add
pop
inc
add
xchg
push
cmpsw
xlat
lods
push
and
dec
and
lock
les
adc
push
mov
xor
cs
lret
lock
std
lret
jno,pt
iret
lods
insl
fcmovnbe
xchg
jg
push
dec
mov
clc
sti
ficoml
ljmp
push
iret
call
mov
adc
inc
adc
cs
jmp
xchg
repnz
jle
jno
popa
loop
add
pop
bound
sbb
fwait
sbb
mov
sub
cmpsb
ret
movsl
xchg
fcmovnbe
push
aad
cmpsb
adc
pop
les
aad
es
divb
push
rclb
fists
sbb
jmp
arpl
leave
push
cmpsb
into
pop
jmp
sub
cwtl
fcompl
lods
jle
mov
xchg
icebp
adc
cmp
adc
adc
insb
pop
sub
mov
dec
mov
jecxz
sbb
push
aaa
push
js
and
insl
pop
int
push
add
and
ds
fbstp
pop
mov
shlb
aam
mov
jl
adc
mov
ficoml
and
or
or
cwtl
sbb
or
jno
add
lret
test
cmp
orb
xor
adc
cli
add
in
push
ljmp
frstor
sbb
mov
idivb
icebp
push
xchg
jg
dec
iret
hlt
popa
mov
add
xchg
lods
popa
inc
and
das
adc
cwtl
jbe
dec
inc
xor
mov
pop
mov
fnstsw
pop
sub
push
mov
sbb
cltd
inc
out
cli
fcos
aam
adc
insl
int
inc
sbb
push
cmpsl
call
movsb
loop
inc
lea
xchg
int
scas
xchg
divl
aad
fists
mov
and
push
and
mov
enter
ds
cmp
enter
outsb
jo
cmp
iret
out
xchg
inc
shll
ret
lds
scas
push
ss
xor
or
sub
sbb
scas
dec
sub
int3
ror
jecxz
test
dec
jnp
mov
insb
or
pusha
movsl
shrb
dec
mov
push
stc
shlb
jecxz
dec
fsts
fidivrl
pop
jecxz
test
cwtl
in
pop
test
add
rcrl
fwait
mov
mov
xor
sub
xor
ret
sub
jmp
xor
shll
inc
push
and
in
ss
aas
dec
in
nop
dec
stc
cmpsb
push
scas
test
sbbl
js
mov
inc
jo
adc
addb
test
add
movsb
push
lock
sub
jecxz
add
outsl
fcmovb
ret
xchg
dec
fildll
fs
idiv
adc
scas
int3
iret
pushf
add
mov
lods
lods
repnz
mov
and
pop
and
xchg
jmp
inc
nop
fcomp
xor
pop
arpl
xchg
push
xchg
bsr
push
test
popa
rcl
lcall
test
jno
jns
jns
and
xor
inc
jmp
push
dec
fwait
fs
addb
into
jns
sbbb
push
mov
pushf
das
cmc
aad
or
sub
lock
mov
mov
enter
mov
fsubs
sarl
loop
pop
addb
roll
mov
push
xchg
or
cld
sub
dec
iret
sbb
fiadds
faddl
addr16
push
lods
test
push
ss
mov
and
xchg
dec
jno,pt
xor
test
scas
addl
cmpb
sub
stos
xor
icebp
jle
mov
pop
mov
add
adcl
xor
xlat
iret
negb
rclb
cmc
sub
inc
fnsave
mov
jae
mov
or
pop
hlt
mov
mov
inc
push
lret
mov
loope
div
in
mov
adc
dec
xor
xchg
or
int
inc
or
dec
nop
pushf
pop
rorl
mov
pusha
aam
pop
mov
pop
push
mov
xsha256
and
testl
bound
pop
xchg
push
inc
fidivrs
das
mov
in
add
idiv
sub
dec
clc
mov
ss
aaa
iret
pop
mov
clc
adc
inc
addl
cmp
pushf
sub
push
lock
sbb
pusha
jb
shll
into
jge
dec
fnstenv
mov
mov
fs
cmp
add
push
xor
sti
movsl
sub
adc
hlt
xor
pop
test
lret
mov
mov
lahf
repz
pop
push
sbb
hlt
jmp
out
nop
ljmp
test
les
daa
jge
push
ljmp
loop
cwtl
jno
or
or
test
push
nop
imul
add
lret
pop
xchg
dec
or
hlt
dec
popa
mov
sbb
sbb
push
sub
mov
pop
mov
shll
xchg
mov
cmc
sub
push
mov
cmc
push
in
test
xchg
sub
mov
sbb
push
and
cs
rcrb
in
adc
cltd
mov
jo
and
sbbb
aad
push
cmpsl
or
in
and
dec
xorb
xchg
mull
int
js
cli
mov
repz
iret
inc
pop
repz
push
clc
clc
cmpb
mov
jle
add
movsb
mulps
lds
lock
mov
pop
aad
ja
or
jb
orb
and
xchg
inc
cmp
cld
in
mov
insb
jle
cmp
addb
mov
fnstenv
jmp
jne
ret
mul
cmpsl
push
lahf
and
sbb
pop
aam
inc
popa
into
iret
inc
sahf
xchg
mov
and
loop
popa
pop
mov
push
mov
out
iret
and
test
in
fiadds
lahf
xor
fsts
sub
xor
test
jnp
lret
push
out
xor
cmpsb
hlt
aam
jg
int3
mov
testl
popf
adc
addr16
rorb
icebp
popa
int3
dec
add
push
lret
jge
cmp
xchg
dec
jmp
cli
lea
xlat
cmc
xlat
movsb
sub
andl
push
mov
push
jo
adc
dec
xchg
js
inc
in
cltd
xor
aad
dec
jecxz
frstor
mov
mov
or
scas
xchg
mov
loop
out
pop
inc
dec
aam
lock
and
mov
sub
sbb
addl
imul
sub
imul
adc
fwait
es
xchg
lahf
mov
mov
das
adc
xchg
test
add
ja
sti
mov
movsb
ss
ljmp
mov
fs
ret
out
pop
adcb
inc
cli
ljmp
fs
xchg
xorl
cwtl
cmp
inc
adc
rcll
lds
das
lods
push
aad
add
pusha
pop
into
aam
mov
iret
cmp
aam
xchg
jnp
mov
cmp
shlb
jbe
in
test
jmp
inc
xchg
js
or
or
cmp
pop
test
mov
mov
stos
frstor
aas
cs
outsb
rcll
sti
push
dec
hlt
push
xchg
adc
aas
and
lcall
fidivrs
test
icebp
pushf
mov
mov
sbb
xor
add
push
jl
insb
stos
jg
jge
mov
fadd
dec
jp
push
test
in
and
cmp
int3
cmp
in
and
push
adc
lock
mov
mov
sub
or
loope
xchg
and
inc
lods
dec
or
lods
mov
dec
dec
out
jmp
xchg
xor
adc
push
jp
dec
mov
pop
ljmp
scas
cmpsb
in
inc
dec
cld
mov
or
ficoml
mov
jae
sbb
rorl
or
mov
xor
sti
mov
inc
ficomps
jle
popf
cmpl
sub
jno
mov
cli
xor
mov
pop
into
adc
pusha
xchg
jno
or
outsb
dec
dec
outsl
sbb
pop
mov
push
inc
in
and
pop
push
cli
gs
cmp
xor
dec
sbb
mov
sbbl
js
mov
repz
das
cld
mov
push
or
dec
xor
xchg
popa
xor
daa
test
sbb
push
dec
adc
xchg
test
mov
and
sbb
cltd
sti
dec
notl
mov
pop
orb
push
mov
pop
or
xor
xchg
xor
mov
das
scas
inc
pusha
arpl
add
dec
imul
in
sar
insl
mov
orl
lods
test
mov
xor
xchg
scas
xchg
pop
out
xchg
push
dec
cmp
mov
sahf
lret
fistpl
rcll
cmpsl
shlb
jmp
add
lock
js
shll
into
fadds
mov
and
test
xlat
and
sarb
inc
fisttpll
addl
mov
mov
inc
mov
or
mov
das
in
push
adc
and
xor
pop
add
nop
mov
add
xlat
mov
mov
rolb
js
xor
mov
sbb
xor
repz
cld
xor
inc
mov
push
jno
xchg
lea
mov
inc
nop
sub
jb
into
xor
sbb
or
push
mov
mov
pop
pusha
or
xor
lock
sar
scas
and
push
inc
mov
addr16
arpl
cmp
cs
push
aaa
and
shrb
xchg
xorl
daa
xor
inc
xchg
repnz
jno
test
mov
out
and
cmpsb
or
js
ljmp
mov
add
lods
fnstcw
xor
ffreep
adc
inc
xchg
outsb
cmpsl
jb
adc
shll
dec
aam
push
add
in
repnz
lcall
mov
sahf
dec
fcomps
addr16
xchg
xor
push
popf
jns
cmp
daa
idivl
fdivp
ret
push
or
fs
sbb
testl
push
outsb
in
xor
push
fadds
stc
rol
nop
loopne
dec
hlt
push
hlt
mov
fiadds
mov
add
push
lret
or
js
aaa
xor
repnz
rcr
dec
int
pop
mov
ljmp
mov
les
out
mov
pop
out
int
cs
push
pop
push
flds
js
lock
popf
negl
aas
pop
inc
mov
mov
dec
mov
push
lock
int3
pushf
into
mov
or
sub
movsl
jl
cmpsb
in
daa
test
iret
lcall
xor
lods
sti
mov
push
addb
dec
jo
jecxz
jmp
fstpl
stc
jne
xchg
imul
xor
xchg
cmp
fildl
dec
stc
rcl
popa
mov
mov
arpl
or
pop
test
mov
mov
adc
adc
mov
pop
es
fadds
mov
sbb
roll
adc
cmp
jg
test
rorl
and
push
mov
outsl
and
cmp
in
addr16
in
call
mov
xchg
and
pop
in
jg
cs
addr16
out
mov
sbb
ficoms
mov
stos
xchg
out
dec
ds
idivb
ss
xchg
aad
mov
and
mov
fs
cltd
jp
and
dec
lret
js
inc
ljmp
fs
jnp
xchg
rcll
insl
leave
mov
hlt
scas
mov
test
stos
test
sarl
adc
mov
push
movsl
aas
dec
mov
icebp
mov
push
mov
pop
es
aaa
rcrb
dec
mov
xchg
cmp
xor
sti
movzbl
adc
les
adc
scas
js
push
test
stos
xchg
imulb
lret
adc
lea
arpl
xchg
movsb
and
into
fs
movsl
jl
lahf
dec
enter
ds
sbb
inc
das
cmp
xchg
les
add
mov
lea
dec
mov
cmp
sub
mov
xchg
inc
push
mov
mov
add
loopne
push
mov
hlt
cmp
mov
out
movsl
fistl
enter
pop
fadds
movsb
pop
mov
jmp
sbb
cmp
test
mulb
inc
adc
xor
mov
into
cli
jns
sbb
fwait
jne
ss
dec
cwtl
mov
movsl
xor
addb
xor
mov
pop
mov
scas
mov
out
hlt
xchg
xlat
jno
pop
ret
andl
ljmp
and
cmp
and
dec
and
fcompl
dec
cwtl
or
ret
add
popf
stos
mov
xor
mov
sbb
sbb
xor
sbb
cmc
fstpl
rcll
lahf
and
xchg
pop
clc
ljmp
inc
mov
mov
fmuls
std
in
pop
cmp
jp
popa
or
sti
dec
pop
data16
rcrb
xchg
mov
outsl
cmp
dec
push
push
mov
xchg
adc
cli
mov
mov
nop
rcrl
push
push
add
cmp
inc
sbb
enter
enter
ss
ds
icebp
push
jo
xlat
fmul
cli
push
inc
or
add
cmp
popf
mov
xor
cli
inc
mov
fisttpll
std
and
mov
sbb
mov
fistpll
lcall
jge
loopne
test
int
pop
les
xchg
int3
inc
adc
mov
arpl
aaa
dec
jl
dec
fs
jb
inc
sub
push
mov
rcll
cmc
out
rcrb
cmp
mov
cmp
adc
fstp
and
std
hlt
not
inc
xchg
lahf
call
and
leave
testl
pop
lods
adc
xor
mov
add
mov
sbb
push
pop
clc
cs
in
aaa
pop
icebp
push
or
cmp
inc
mov
mov
cmp
xor
and
mov
movsl
push
xchg
add
bound
arpl
xor
mov
les
mov
mov
push
ja
ljmp
lods
jecxz
pop
jmp
cmc
outsb
rcl
inc
in
stos
or
pop
jp
rcrl
es
dec
aas
dec
push
inc
lods
pop
notb
inc
lret
stos
in
std
scas
popf
dec
sub
mov
push
ret
aaa
jmp
and
mov
jmp
xchg
shrb
out
or
leave
mov
mov
lods
into
aas
dec
inc
push
call
jge
call
pop
lds
sub
add
leave
bound
add
xchg
add
fidivrl
lcall
std
and
cmp
sub
int3
add
mov
or
ja
daa
lds
jl
jae
cmpsb
movsb
sbb
in
pop
movsl
into
jbe
jbe
push
cmc
dec
push
ljmp
cwtl
xchg
dec
push
popf
ret
xchg
jmp
and
dec
xor
popf
mov
sahf
fdivrp
sbb
pop
pop
loopne
pop
inc
xchg
sub
sub
inc
imul
pop
inc
mov
push
scas
jl
insl
sub
out
xchg
mov
inc
mov
mov
adc
push
imul
arpl
inc
inc
xchg
push
jg
fsubrp
bound
mov
hlt
mov
xchg
cmp
jmp
xor
sbb
xchg
mov
sub
aas
cli
in
orl
xchg
jge
or
push
pushf
xchg
push
mov
inc
test
sub
mov
jecxz
inc
fwait
getsec
inc
jecxz
mov
pop
test
test
sbb
sbb
fst
jbe
dec
add
cmp
mov
sbb
jns
and
lcall
sbb
mov
mov
jno
loope
pop
jecxz
loope
sbb
insb
popf
pop
jg
test
cwtl
cmpsl
pop
lock
jmp
adc
push
jle
adcb
inc
ds
pushf
test
inc
inc
mov
imul
pop
jecxz
inc
inc
test
fmulp
cmpsl
out
jp
jge
mov
pop
lcall
std
loopne
out
jge
nop
loope
fiaddl
xor
insl
add
adc
mov
add
aaa
mov
daa
mov
mov
imulb
or
enter
inc
add
jg
push
sub
xchg
or
sbb
jmp
jp
aam
test
iret
test
add
cmp
lods
jns
cmpsb
xchg
xlat
inc
xor
inc
or
cmpsb
xchg
mov
shlb
stos
lcall
ror
outsl
mov
jle
and
dec
call
adc
das
mov
sti
popa
mov
arpl
xchg
adc
inc
insl
in
imul
push
das
add
daa
adc
test
mov
mov
aam
add
xor
or
xchg
data16
jl
lcall
aad
iret
es
fcomps
add
or
mov
and
in
sarl
cmp
bound
pop
icebp
loopne
inc
jle
loope
je
sub
in
pop
mov
jecxz
xor
xor
int3
ds
pop
lds
lock
popf
inc
outsb
insl
xchg
cmp
icebp
in
cmpsb
and
add
cmp
jno
outsl
jne
pop
call
adc
lret
jb
cld
cwtl
test
aam
mov
stos
or
lods
xor
aas
leave
aam
ret
aam
mov
das
out
adc
dec
push
add
dec
push
scas
jns
in
in
xchg
jne
enter
inc
sbb
pop
dec
shrl
iret
mov
inc
adc
call
loope
ret
jmp
popa
stc
mov
call
pop
adc
lds
loop
mov
lret
ficompl
jmp
mov
pop
hlt
xor
push
sub
imul
test
das
cli
mov
sarl
daa
jb
les
out
je
push
or
arpl
lahf
inc
dec
stos
sbb
and
dec
popf
mov
xchg
jg
xor
add
xor
rorb
mov
inc
adc
xorb
pop
xchg
mov
cli
jo
mov
scas
lahf
clc
fdivr
inc
into
bound
sub
xchg
gs
adc
adc
xor
fs
adc
pop
jge
stos
sub
test
push
insl
ss
sub
out
aas
cmp
call
sub
fisubrl
mov
nop
loopne
mov
hlt
outsb
fcompl
iret
pop
outsb
adc
dec
or
pop
stos
shlb
inc
mov
xchg
xchg
in
cmc
jbe
icebp
aas
enter
add
and
or
xchg
sti
mov
push
or
out
js
lcall
lods
lea
es
pop
adc
movsb
adc
rcrl
push
jns
push
xlat
out
cmp
fnstcw
ret
push
xchg
jmp
scas
jecxz
xor
xchg
or
mov
mov
outsl
lock
and
movsb
mov
aad
cmpb
jmp
add
data16
sarl
adc
add
inc
out
repnz
mov
scas
mov
mov
ss
xchg
mov
inc
icebp
ja
aam
fsubl
xchg
push
sub
incl
daa
xchg
sub
xlat
push
push
push
xlat
inc
xlat
add
ljmp
mov
adc
jle
das
ds
outsl
adc
cmp
ja
mov
sarl
xor
mov
bound
ficoml
mov
pop
and
rcrb
ss
fmull
stc
mov
js
in
push
jo
xor
imul
and
js
pop
ds
fstps
leave
or
and
mov
inc
imul
insl
pop
push
lods
xlat
mov
ret
fldln2
jmp
insb
sti
push
inc
out
arpl
addl
dec
jl
fwait
push
sbbl
test
insl
add
test
test
xor
orl
pop
stos
sub
mov
shlb
in
addb
in
cmc
outsb
dec
call
mov
jae
into
lahf
test
test
into
mov
xor
mov
dec
mov
rcrl
ja
mov
fmulp
adcb
and
sbb
dec
call
xchg
int3
movsl
lods
leave
imul
clc
ss
in
cs
icebp
xor
add
cmp
aas
xor
nop
push
pop
and
mov
xor
dec
ret
rorb
mov
imul
popf
incl
dec
call
mov
es
mov
dec
fs
pop
into
in
lods
mov
dec
adc
jmp
xor
pop
aaa
inc
insl
test
loope
test
data16
jp
pop
adc
in
inc
adc
or
out
adc
loop
or
stos
xor
inc
pop
lods
xor
ret
test
xchg
or
mov
inc
int
sub
xlat
pop
ret
gs
popf
pop
dec
rep
andl
or
and
in
jbe
lock
jecxz
mov
jg
pop
in
jle
fsubr
sub
shll
jg,pt
test
push
lcall
loop
dec
mov
add
push
adc
pop
and
pop
out
pop
cmpsl
repz
mov
lods
in
mov
in
subl
add
sahf
pop
adc
xchg
stos
test
mov
cmp
pop
or
jge
shlb
mov
push
sub
scas
push
inc
cli
cli
rcr
fs
cmp
mov
mov
in
cli
push
ss
js
inc
mov
jecxz
pop
sbb
mov
cmp
or
jecxz
adc
and
xchg
std
lahf
sbb
mov
push
mov
nop
shrl
xor
mov
mov
test
adc
aam
adc
lock
out
stos
fnstsw
sub
pop
jp
add
push
leave
rorb
xor
out
hlt
adc
mov
ljmp
xchg
add
fwait
sub
dec
mov
add
dec
add
push
mov
sub
les
inc
sbb
push
pop
jmp
repz
mov
mov
xor
jno
sub
lret
sub
or
lahf
jmp
stc
inc
mov
int3
hlt
mov
adc
mov
adcl
sbb
fimuls
shll
shll
cmp
pushf
or
imul
repnz
aam
pop
ds
addb
mov
push
add
mov
xchg
sbb
push
and
das
fidivrl
loop
xor
lock
repnz
mov
outsb
xchg
test
or
test
arpl
ljmp
pop
sub
clc
and
mov
inc
test
inc
and
icebp
add
pop
add
push
mov
sub
pop
mov
push
inc
arpl
mov
das
adc
mov
int
int3
movsb
jno
push
push
sbb
inc
imul
mov
in
xor
adc
mov
lcall
add
inc
ret
jne
std
out
lods
faddl
sub
ljmp
test
arpl
fwait
and
aam
xor
sub
push
mov
divl
loopne
jmp
aam
adc
outsb
loop
cltd
scas
lcall
dec
inc
mov
and
fwait
int3
popf
insl
cmp
out
sbb
test
xchg
packssdw
xchg
repnz
insb
outsl
mov
shl
iret
xchg
fimuls
mull
fwait
or
xor
jbe
cmpsb
lods
mov
shl
in
xor
jmp
stc
ja
sub
mov
je
and
out
lahf
adc
ficompl
xor
sbb
inc
ss
mov
lods
mov
movsl
out
movsb
inc
mov
lods
inc
adc
nop
sub
pop
subl
adc
and
ffree
sahf
outsb
iret
and
lahf
mov
addr16
mov
push
divb
and
pop
adc
xchg
repz
inc
popa
pop
cmpsl
out
lods
push
out
lret
ja
out
aaa
addr16
sub
dec
jl
jp
push
adc
and
sub
ja
sbb
hlt
sbb
mov
mov
jne
xor
xor
insl
dec
push
push
std
dec
jo
stc
repnz
jg
jp
push
dec
xor
dec
imul
addr16
insl
inc
mov
insb
into
push
cmc
xchg
imul
daa
fldenv
sti
hlt
clc
cs
test
xchg
inc
in
xor
sbb
xchg
sarl
cmpsb
add
lds
shl
dec
or
aad
and
test
mov
dec
insl
stos
stc
fdivr
and
push
dec
cmp
jge
lret
cltd
out
pushf
fs
dec
jle
pop
cs
test
mov
mov
lahf
out
arpl
or
jle
push
bswap
loope
adc
imul
mov
test
mov
movl
movsb
in
and
jle
insb
dec
or
push
stos
fldl
cli
pop
fucomi
in
and
xor
rolb
and
mov
loopne
mov
cmpsb
pop
daa
inc
cmpsb
clc
test
pop
jb
mov
sub
fsubl
js
dec
push
popa
mov
xchg
rcrl
stc
sahf
scas
sub
pop
lock
pop
fnsave
lods
lcall
or
pop
movsl
rol
cmp
call
int3
push
arpl
inc
mov
pop
dec
adc
pop
mov
outsl
fwait
insl
jge
xor
mov
dec
add
jle
jg
fdivl
mov
hlt
pusha
je
push
pop
imul
inc
mov
imul
inc
test
inc
sbb
shlb
fidivl
sub
xchg
nop
xor
sbb
jl
faddl
pop
mov
pop
test
cmp
icebp
and
fists
repz
push
push
jnp
push
popf
pushf
cmp
and
rcl
jecxz
dec
xlat
ficompl
xorb
daa
push
adc
mov
mov
mov
jg
sbbl
mov
addr16
aaa
and
jae
rcl
lds
insl
jl
stc
xor
push
scas
add
mov
mov
bnd
cs
flds
jecxz
push
pop
test
pushf
sub
mov
notb
push
sti
loope
lock
insl
in
or
fnstcw
ja
bound
pop
bound
push
jmp
jmp
or
fnstenv
jl
cld
jl
stos
pop
sub
push
inc
ljmp
mov
cltd
xchg
push
cmp
iret
jmp
mov
add
or
xlat
loope
xchg
out
inc
shll
stos
hlt
xor
adc
pop
mov
cs
pop
aas
popf
cmp
dec
mov
pop
push
lods
cmc
movsb
adc
inc
insl
lret
fs
sub
push
mov
jne
ds
seta
aaa
loop
nop
dec
push
xchg
add
push
cmp
mov
aaa
add
call
cmp
xor
adc
bnd
cld
mov
insb
dec
xchg
mov
sahf
inc
push
cmp
xchg
mov
mov
sbb
ror
hlt
loop
insb
mov
sub
inc
sbb
hlt
mov
ss
out
into
lret
jmp
jo
les
pop
jne
jbe
dec
mov
jne
stos
getsec
sub
push
jnp
dec
les
hlt
or
push
mov
inc
push
fbld
xchg
adc
push
icebp
dec
pop
mov
lahf
push
outsl
lret
leave
out
xchg
cmp
adcb
push
mov
lret
mov
mov
inc
arpl
dec
sbb
ror
addl
jg
ja
xchg
int3
in
ret
outsb
fnstcw
xchg
orb
add
mov
ljmp
loopne
cwtl
mov
outsb
xchg
mov
jecxz
and
jle
adc
repz
popf
push
push
pop
lods
jg
scas
fdivp
test
push
es
and
jno
lds
jl
inc
inc
inc
jl
push
es
push
add
push
and
cmp
mov
mov
and
mov
lea
jb
out
xchg
pop
sub
xor
jbe
stos
jns
sub
or
pop
jl
fists
push
repz
aas
xchg
enter
mov
lahf
xchg
test
cmpl
int
pop
push
cs
xor
adc
aam
sbb
adc
or
adc
les
cmpsb
mov
shr
shlb
fcomps
jge
cltd
ror
add
outsb
xchg
sbb
jge
addr16
dec
dec
add
pop
push
enter
jge
cmp
cmc
sub
xchg
xchg
in
xchg
mov
sarl
or
cmp
data16
push
pop
subb
xchg
testb
adc
cmpsb
adc
xchg
and
scas
cmp
jbe
daa
jmp
inc
and
add
clc
jnp
loop
sbb
call
popf
scas
aam
adc
pushf
mov
push
add
addr16
and
jb
xorb
inc
inc
xchg
pop
mov
push
test
jnp
and
push
movl
shl
and
or
lcall
stos
arpl
aas
in
sbb
mov
sbb
xchg
aad
or
adc
in
daa
stos
or
pop
or
jle
fwait
pop
adc
stos
mov
cmp
call
xchg
add
jge
int3
testl
adc
jb
je
mov
cmp
mov
push
ljmp
mov
jb
or
fbstp
bound
adc
movsl
push
jne
fmuls
out
test
cmp
jge
xchg
je
cmc
dec
fimuls
pusha
dec
btc
flds
pop
mov
mov
js
mov
push
mov
mov
jmp
add
jo
or
push
sub
add
xchg
jmp
fisttpl
xchg
jmp
clc
arpl
inc
lret
repz
scas
mov
dec
stc
arpl
mov
push
and
mov
fisubs
push
or
fmull
subl
cmpsb
sahf
mov
movsb
mov
dec
in
mov
outsl
test
push
jle
add
inc
and
xchg
mov
notb
les
jb
call
lret
jge
incl
add
push
dec
cli
adc
and
dec
hlt
stc
movsb
sub
dec
dec
loop
mov
jl
lahf
test
js
movsl
xor
das
dec
clc
or
cmp
push
test
xchg
push
insb
adc
sub
push
sub
sti
mov
jg
xor
aaa
xchg
repnz
les
jmp
xor
mov
dec
or
mov
adc
add
int
orb
clc
pop
push
fst
stos
addr16
mov
pushf
adc
push
cmpsb
mov
xchg
mov
push
push
cmp
jbe
dec
jb
loop
fildl
sbb
sbb
dec
inc
pop
iret
jns
cli
push
cwtl
jp
mov
jo
or
xor
jbe
shrb
or
stc
sbb
cmc
sbb
and
xorb
push
pcmpeqw
and
push
nop
mov
and
icebp
cmpsb
movq
sub
push
inc
cmpsl
dec
shll
stos
imul
das
mov
cmp
jmp
into
in
jg
and
pop
and
add
fimuls
arpl
and
sbb
shlb
dec
push
add
push
inc
cmpsb
pop
fldcw
jns
jnp
subl
das
and
sbb
imul
sbb
lea
cmp
icebp
xor
je
lds
mov
adc
push
cmp
xor
or
add
repnz
addr16
sbb
sbb
loopne
outsb
mov
cwtl
rcrb
mov
jae
in
aas
les
lods
fwait
mov
cmp
cwtl
xor
jae
gs
jne
sub
cmp
lods
adc
xor
cmp
ret
xor
pop
scas
fstps
cld
xchg
cltd
push
scas
xor
adc
mov
push
lods
into
xor
xchg
xor
pop
movsl
push
and
mov
adc
mov
xor
test
andl
frstor
xor
or
inc
or
pop
or
test
mov
push
fidivl
or
dec
sub
mov
and
daa
adc
cmc
filds
movsb
cmp
push
pop
xchg
cmp
jge
in
jnp
inc
pop
xchg
xor
arpl
inc
jns
cmp
add
scas
movsb
enter
xor
or
xor
mov
leave
insl
push
or
sub
shrb
xor
fnstenv
shrl
std
cli
movsb
ret
pop
inc
or
cmp
mov
jge
mov
out
push
sahf
mov
adc
mov
icebp
outsl
xor
fsts
lock
jmp
daa
bound
push
adc
sahf
adc
sbb
xor
adcl
mov
mull
and
jae
push
or
ljmp
movsl
inc
hlt
push
xchg
aas
test
adc
pop
mov
lock
mov
xor
cmp
enter
fmull
push
inc
jmp
mov
mov
push
jge
push
xor
mov
sub
xchg
add
inc
test
mov
inc
mov
stos
mov
xchg
cmpsb
daa
mov
fsts
sub
test
loop
push
test
and
test
aas
pop
xlat
cwtl
nop
pusha
outsl
cmp
jnp
adc
cmp
ja
ja
mov
nop
out
rcrl
sub
jge
or
xor
jecxz
shlb
outsl
push
sar
jl
cltd
aas
pop
pop
inc
mov
test
cwtl
pop
ret
jae
and
mov
add
add
add
pop
enter
sbb
ret
push
int
sub
jmp
or
inc
jbe
fimull
sbb
jns
test
rorl
xlat
sub
and
cmp
or
pop
cmpsb
test
lret
mov
test
jb
sbb
cmpsl
je
cltd
popf
repnz
imul
mov
adc
mov
mov
mov
ficomps
mov
ret
fistps
jns
cmp
cs
push
pop
add
aad
popf
sbb
lahf
add
push
lds
dec
out
nop
mov
pop
sbb
or
out
adc
repnz
add
rcr
adc
inc
pop
dec
mov
call
pop
push
ss
xor
cmp
sub
inc
add
xchg
and
cmp
in
add
setns
mov
shlb
inc
inc
inc
dec
pop
and
pusha
mov
push
pop
pop
rcr
out
mov
out
fsubs
fiaddl
leave
rorb
js
add
loopne
lcall
cwtl
nop
ja
jmp
add
sti
xlat
sub
enter
dec
mov
test
pop
lock
fucomip
jg
jle
and
xor
ss
mov
and
es
fistpll
leave
in
xchg
bnd
mov
out
xor
cltd
inc
jns
aad
out
xchg
pop
movsl
dec
mov
fcom
adc
nop
bound
dec
add
sbb
adc
lret
pop
push
nop
sahf
repnz
push
test
adc
dec
jecxz
nop
mov
outsb
hlt
pop
push
insl
adc
scas
and
mov
or
mov
inc
mov
sub
and
push
out
mov
popa
mov
addb
clc
mov
outsl
cs
pop
mov
push
mov
xchg
in
jmp
in
and
push
mov
jg
aam
mov
add
arpl
xlat
pop
lock
nop
gs
sub
testb
or
or
std
jl
cli
sub
add
int3
mov
pushf
xchg
push
jl
sub
test
jmp
movsl
push
mov
push
scas
pop
xchg
add
jmp
cmp
cmp
clc
jmp
fldl
mov
pop
cmpsb
push
mov
jno
mov
and
mov
test
clc
push
mov
cltd
pop
out
je
pop
inc
mov
fucom
dec
pushf
popl
iret
sub
scas
bound
sub
inc
add
sahf
aas
mov
add
dec
cmp
iret
or
push
cs
out
jo
gs
nop
pop
pop
aas
lahf
outsb
jnp
lock
pop
inc
lcall
call
cs
pop
imull
out
das
ficompl
in
add
popf
into
negb
mov
jge
incl
mov
aaa
es
test
inc
mov
stc
dec
and
arpl
clc
sbb
adc
mov
popa
clc
pop
jg
ja
pop
xchg
leave
in
out
mov
fsub
cmpsb
notl
inc
add
aad
dec
cmp
mov
and
cmpsl
add
cmp
test
add
add
sbb
out
and
shl
push
pop
fcom
adcl
repnz
loopne
push
push
faddl
mov
xor
push
sti
out
rolb
cltd
mov
adc
sub
push
scas
cmp
mov
mov
icebp
adc
lahf
outsl
pop
dec
dec
adc
andl
xchg
clc
cwtl
dec
stos
addr16
sahf
sbb
incl
sub
dec
mov
out
xor
jnp
pop
loopne
inc
in
out
aaa
sub
and
in
cmp
cmp
pop
std
mov
idivb
in
xor
test
and
scas
sbb
or
jmp
add
sub
dec
daa
cmp
jge
jns
adc
out
out
adc
dec
decl
mov
sub
jae
outsb
pop
push
xchg
movsb
xor
vpminub
test
mov
in
jbe
xchg
jmp
push
adc
gs
dec
nop
push
adc
inc
mov
xsha256
cmpsb
push
aaa
popf
cmp
or
gs
out
add
xchg
idiv
sbb
jo
mov
aas
add
fwait
jmp
xor
fldenv
popa
add
push
dec
inc
and
mov
lret
in
sbb
test
outsl
adc
xor
lds
mov
jg
gs
push
xchg
add
dec
icebp
or
inc
outsl
dec
sbb
cmp
ljmp
or
mov
leave
push
cltd
sub
repz
cmp
push
mov
repnz
adcl
pushf
out
sub
jbe
in
pop
lahf
popa
dec
lahf
addb
outsl
inc
arpl
test
loop
push
jmp
push
pop
adcl
cmp
pop
push
jmp
in
sbb
inc
pcmpgtw
pop
sahf
cmp
aad
mov
xchg
xchg
jne
inc
imulb
pop
insl
outsb
shll
cltd
addr16
sub
imul
repnz
jno
pushf
inc
shrl
sahf
mov
rcrb
inc
cli
testl
mov
inc
sbb
mov
adc
sbb
in
mov
mov
mov
jbe
mov
mov
icebp
dec
lcall
push
xchg
sbb
sub
cmpsb
mov
adc
push
push
mov
in
push
inc
push
out
push
cwtl
and
mov
dec
dec
popf
lods
out
popf
jne
aaa
inc
xchg
jp
into
movsb
sub
sbb
jbe
or
sub
js
push
lahf
mov
shrb
out
and
sahf
aas
fstps
out
sub
or
ds
cltd
and
sahf
dec
fcompl
pop
mov
and
scas
sub
fiaddl
mov
rclb
in
xor
dec
sub
dec
mov
loopne
ret
ficomps
sbbb
mov
mov
push
es
jle
xchg
xchg
sbb
cmp
xchg
dec
pushf
andl
movsl
jno
dec
mov
test
push
arpl
xlat
scas
adc
jg
dec
mov
daa
add
frstor
fwait
push
loope
fwait
adcl
inc
adc
lcall
call
and
pop
popf
data16
pop
push
xor
cmp
outsb
cmp
pop
popf
addr16
dec
das
push
xor
repz
pushl
xlat
es
pop
jb
xor
push
outsb
daa
xor
adc
fisubs
es
mov
in
lock
mov
adc
popf
mov
mov
testb
hlt
adcl
mov
ja
adcb
mov
inc
fcoml
je
repz
in
adc
jb
stc
stos
xchg
inc
daa
daa
push
sti
es
sbb
or
and
lret
inc
arpl
imul
mov
aam
add
xor
imul
popf
jbe
aam
inc
movsb
imul
mov
xchg
jno
add
subb
lcall
lock
jae
jmp
sbb
les
scas
or
and
jge
stos
stos
mov
jp
jae
fildl
lods
jmp
negl
xchg
xor
and
fcomi
mov
xor
std
sbb
scas
in
mov
js
shlb
mov
aaa
inc
popf
icebp
pop
mov
insb
pop
jnp
sub
ret
mov
or
inc
dec
pop
mov
and
sub
sahf
mov
rcl
add
inc
push
ljmp
cmpsl
and
dec
sti
dec
sarl
mov
jbe
cmp
mov
jnp
fsub
push
pop
add
out
cli
inc
mov
push
shl
popf
out
adc
or
shl
cmp
ret
cli
pop
ss
cmp
daa
pushf
jae
mov
xchg
data16
out
ljmp
pop
das
inc
lea
filds
mov
mov
lods
sub
mov
test
xor
mov
mov
ljmp
insl
jo
pop
pop
push
sarl
xor
and
inc
xor
cltd
push
add
enter
lret
xchg
mov
adc
jbe
or
add
mov
inc
cmpb
popa
push
in
dec
sbb
pop
and
push
jbe
pop
leave
sbb
shlb
mov
or
xchg
and
xorl
loop
push
lock
inc
mov
mov
lea
adc
test
pushf
inc
inc
push
jae
adc
test
cmp
push
pop
gs
in
leave
push
pop
cmp
or
aas
rcr
push
les
mov
xchg
pop
repnz
xor
and
and
fwait
push
mov
daa
flds
iret
outsb
cmpsl
idivl
inc
repnz
mov
cwtl
mov
xor
pop
push
xchg
xlat
adc
or
push
in
push
lea
adc
lock
or
inc
sub
mov
test
mov
outsl
dec
bound
dec
dec
mov
nop
outsl
pop
pop
inc
arpl
cwtl
sbb
mov
outsl
shrl
pop
mov
add
cwtl
fnsave
fstp
adc
pop
cs
das
sub
sub
pop
jmp
dec
dec
movsb
movsl
std
faddl
aam
scas
ja
xor
popa
sbb
je
lret
mov
cbtw
push
pop
push
adcl
popf
push
dec
and
pop
xor
subb
cmp
lods
orl
mov
mov
sub
popf
xor
fcmovbe
ret
call
xchg
mov
dec
roll
das
adcb
inc
push
inc
inc
lret
fs
das
ljmp
mov
dec
mov
cmpsl
mov
mov
xchg
push
cwtl
jns
inc
mov
cld
sbb
and
outsl
out
xor
pop
cli
aas
mov
movsl
xchg
cwtl
adc
jecxz
mov
add
sarl
ljmp
inc
adc
pop
lahf
sbb
inc
or
sahf
and
adc
rcr
pop
fs
dec
cmp
push
stos
test
mov
std
sbb
push
mov
push
lods
cmp
pop
xchg
mov
mov
aaa
aaa
in
mov
in
cwtl
shr
xchg
dec
fcmovbe
mov
loop
jo
add
les
inc
lock
push
imul
cmp
sbb
dec
test
popf
stos
jge
sbb
sbb
sub
inc
jb
xchg
clc
test
scas
es
mov
sub
mov
xchg
movsb
stos
mov
add
addr16
pop
mov
mov
arpl
iret
scas
int
adc
out
into
pop
cmp
rclb
and
in
push
jbe
addb
and
outsl
push
xchg
dec
pop
adc
test
out
out
in
aam
push
sub
addr16
mov
fwait
inc
add
xchg
lods
adc
dec
pop
and
jbe
arpl
jmp
cmc
clc
lock
je
inc
jge
mov
push
push
pop
mov
leave
test
lahf
or
stos
testb
mov
lods
ret
mov
popf
js
out
sbb
sbb
ljmp
jp
push
fs
fwait
mov
sarl
fchs
mov
in
imul
fisubl
xor
xchg
push
std
div
jne
pop
jnp
xor
cs
int3
testb
xchg
add
inc
daa
sahf
xor
iret
mov
xchg
xor
sbbl
mov
inc
sub
cmpsb
and
dec
mov
ret
sbb
push
pop
lret
sbb
ficoms
int3
mov
fwait
cmp
cmp
mov
mov
test
mov
imul
scas
fwait
cltd
shr
pop
stc
jp
lret
std
in
stos
push
ret
add
enter
stos
dec
mov
aas
xchg
insl
push
add
lea
add
jecxz
icebp
addr16
push
lret
jo
cmp
jbe
pop
and
ret
and
lret
pop
adc
inc
push
push
mov
sub
sub
std
mov
cmc
testl
sbb
push
dec
loopne
out
fisubs
jl
js
ret
cwtl
xrelease
inc
jge
push
shr
jmp
fcmove
repnz
es
jo
mov
pop
loopne
add
and
add
repz
pop
stos
test
pop
repnz
jnp
fisttpll
jb
pop
cmpl
xor
fimull
mov
nop
xchg
cmpsl
not
or
inc
imul
pushf
mov
mov
or
dec
loope
mov
inc
push
sahf
mov
lods
adc
cmpb
xor
fstpl
fs
dec
aas
fsubr
mov
pop
scas
bnd
and
aas
add
pushf
adc
loop
lcall
stc
orb
aad
mov
push
xchg
dec
cmp
xchg
push
lds
ret
xchg
in
dec
dec
fidivrl
cltd
arpl
sbb
push
inc
dec
lods
outsl
test
sub
jns
ds
scas
mov
js
scas
jle
mov
cwtl
cs
inc
call
sub
sti
pop
sbb
nop
cli
movsb
mov
cmp
mov
jnp
imul
lahf
negl
lds
into
xchg
movsl
gs
lods
adc
jg
mov
pop
es
lods
test
rorl
stc
aam
aam
jge
xchg
xchg
dec
ret
cwtl
sbbb
iret
xor
mov
test
out
pop
sbb
int3
mov
jge
aaa
xor
sbb
js
ljmp
stos
pop
cmpl
mov
nop
or
ror
or
std
xchg
stos
xchg
or
int
mov
xchg
xorb
inc
lahf
out
sbb
jns
adc
xor
mov
cmp
in
sbb
push
ret
clc
lods
mov
test
scas
insl
and
jmp
pop
loopne
cmp
sub
sub
xchg
in
fcomi
std
sub
xchg
add
fsts
xor
mov
push
testl
das
pop
std
inc
das
int
ss
cmpl
xor
lods
scas
xchg
push
test
xchg
xor
das
ds
cs
jnp
push
mov
daa
sub
mov
scas
xorl
and
lds
fcoms
sbb
xor
and
push
int
jae
lcall
aaa
add
cs
mov
xor
pop
jnp
sbbb
sarl
push
cmpsb
movl
fistpl
pop
stc
sbb
jle
imul
and
insl
xor
xor
jns
jb
orb
mov
add
add
dec
mov
cmpsb
in
jo
mov
sub
jmp
in
and
insb
dec
add
inc
cmp
xchg
mov
pushf
lock
pop
aas
cmpsb
addr16
iret
fcoml
push
mov
stos
mov
jo
inc
sub
repz
imul
pop
jge
rorb
push
xchg
das
cmpl
cwtl
and
mov
cmpsb
outsl
pop
or
add
icebp
inc
jae
mov
movsl
cwtl
inc
sahf
xchg
scas
jbe
sbb
sti
int3
insb
dec
cmp
cmp
and
bnd
incb
mov
fnstcw
push
ljmp
xabort
data16
lea
sbbb
lock
addr16
hlt
pop
ret
dec
xor
inc
popa
stc
or
out
add
rcll
cmpsb
es
mov
xlat
sub
jbe
js
ss
xlat
mov
cmpsb
into
cltd
push
mov
xor
sub
addr16
mov
dec
push
jne
jg
int
enter
cmpsl
or
mov
shr
pop
gs
leave
and
jae
outsl
add
imul
add
lock
data16
dec
push
mov
mov
jo
repnz
mov
jnp
hlt
idivl
push
inc
or
push
adc
lret
iret
pop
imul
std
ret
and
fs
lahf
pop
push
hlt
leave
mov
jle
or
iret
sub
mov
es
std
popa
mov
cld
pop
addr16
mov
mov
cltd
cli
sahf
imul
stos
xchg
sub
out
add
aaa
mov
push
loopne
inc
and
cld
push
cmp
dec
or
pop
sti
lods
sbb
push
stc
jl
add
fdivs
leave
test
sahf
enter
mov
cmp
xchg
and
adc
jns
adc
lret
sbb
aaa
jbe
mov
xchg
mov
cmp
push
shlb
xchg
aas
ljmp
enter
lret
push
mov
xor
pop
sub
sbb
sub
enter
popf
repz
sbb
push
jge
mov
sub
push
out
imul
ret
xor
call
cmp
fsubr
mov
rorb
pop
mov
jecxz
mov
aad
inc
into
xchg
into
xchg
add
and
repz
test
jnp
mov
mov
pop
cld
push
sub
jge
stos
aaa
lahf
in
fildll
xchg
xor
clc
mov
jmp
cmc
lcall
pop
push
loope
fcompl
cmp
mov
pop
popf
or
cli
pop
sub
xor
cltd
mov
insb
jne
lods
repnz
and
dec
leave
test
cmp
mov
mov
test
ljmp
mov
push
outsl
jae
stos
sub
and
test
mov
repz
ftst
fdivrs
mov
and
into
imul
cmp
data16
push
jge
xor
sbb
adc
jbe
xchg
imul
pop
sub
and
jg
mov
push
fmul
inc
es
out
fisttps
movsl
js
push
lea
adcl
xchg
lret
dec
mov
orb
lds
push
mov
mov
int3
and
inc
dec
int
xor
adc
jg
jmp
cli
inc
add
in
out
inc
jmp
or
jp
fisubs
jne
shr
jl
test
mov
aam
insl
mov
ja
xchg
mov
lahf
push
cmp
xorb
shrl
and
push
pop
inc
data16
insl
out
movsl
pop
repnz
mov
push
push
inc
mov
xor
out
cmp
mov
lret
mov
lahf
inc
inc
jmp
sahf
adc
std
fs
lock
xor
pop
ret
orl
jmp
je
sub
stc
cmp
lods
dec
int
hlt
lret
inc
sbb
inc
hlt
nop
and
sub
lods
lcall
push
push
jecxz
frstor
dec
push
andb
xor
or
cli
cmp
test
push
pop
sbb
lods
jg
faddl
bound
mov
mov
push
daa
push
imul
mov
jo
jnp,pn
xor
push
adcb
mov
int
lahf
inc
aam
sub
insb
arpl
sbb
xor
jp
pop
ds
adc
mov
inc
nop
xchg
mov
dec
aad
pop
clc
scas
ss
das
imul
ja
xchg
les
lcall
mov
ljmp
or
lods
and
iret
add
inc
jo
xlat
pop
add
loopne
jnp
adc
aam
jge
sub
jne
rclb
jae
push
push
mul
sub
add
das
aas
add
testb
ss
and
sarb
xor
jecxz
loopne
cmp
std
test
test
sbb
aaa
lods
andb
insb
push
add
inc
daa
xchg
xchg
adc
mov
outsb
cld
adc
daa
addr16
push
pop
push
icebp
xor
lds
cmc
mov
lock
sub
mov
fstpt
xchg
jl
std
ljmp
int3
dec
mov
pop
ret
add
stos
aaa
aad
mov
iret
adc
cmp
mov
jl
ljmp
pop
rorl
lea
aas
ljmp
cmpsl
ljmp
mov
pop
push
dec
sub
mov
roll
pop
add
sti
push
lret
popf
mov
sub
in
adc
cmp
shll
iret
rcr
sarb
mov
imul
sbb
sbb
rolb
sbb
mov
and
sbb
or
leave
aad
or
mov
cwtl
xor
daa
mov
out
inc
push
or
dec
repnz
mov
mov
push
xor
outsl
pusha
and
cltd
fbstp
push
push
push
pushf
mov
add
inc
jno
out
test
cli
pushf
inc
and
pop
call
das
mov
imul
mov
cs
mov
push
inc
sbb
in
mov
imul
jbe
imul
or
pop
loop
lea
adcb
jecxz
jbe
pusha
fwait
jae
in
les
loope
popf
pop
push
in
sub
inc
cmp
aaa
and
fildll
int
or
insb
fstps
adc
dec
mov
rcl
sub
pop
les
test
lahf
cmp
cmp
push
nop
push
push
addr16
adc
cmpsb
subl
insb
xchg
jae
jge
lcall
mov
mov
bound
adc
push
xor
add
lea
imul
mov
cmp
or
int
sbb
int3
adc
cmpsl
fistpll
test
cs
add
stc
cwtl
or
lods
call
jmp
test
jecxz
mov
adc
pop
insb
fidivl
cs
ja
das
pop
dec
mov
jns
cmc
dec
iret
xor
nop
ret
cmp
mov
cmp
inc
test
outsl
or
adc
sarl
loop
jl
out
lcall
cmc
ss
icebp
sub
repnz
fdivrs
cmp
cmp
and
in
fidivrs
ds
xchg
hlt
shlb
mov
mov
shrl
js
aad
mov
inc
sub
mov
jge
lock
shlb
rol
sahf
imul
addb
stos
imul
aaa
xchg
fldenv
stc
stos
jns
sub
ds
fisubrs
sub
popf
or
aam
xchg
jle
xchg
jns
das
add
notl
push
xchg
iret
das
hlt
push
insb
int
adc
lea
test
dec
roll
cmp
and
mov
sbb
jmp
aaa
xor
call
pop
or
pushf
scas
out
insb
cmp
decl
fimull
in
jg
sub
ret
cld
outsb
mov
cmp
scas
rol
aam
jmp
xchg
pop
jbe
jecxz
push
mov
mov
fcoml
pop
mov
mov
cs
shll
movsb
scas
shrb
adcl
fdivp
mov
out
cmp
insl
stos
test
ret
and
mov
inc
clc
repz
sbb
dec
mov
jns
rorl
out
in
aad
mov
outsb
mov
mov
mov
test
addr16
mov
mov
xchg
lock
xchg
mov
push
xchg
mov
lea
fidivs
cltd
mov
lods
fidivs
mov
mov
das
shrb
jp
es
stos
scas
push
cmp
mov
call
not
mov
jp
mov
cmp
add
sbb
push
cmp
js
scas
sbb
sub
repnz
pop
push
pop
das
js
pop
outsb
xchg
mov
xchg
daa
xchg
add
add
push
mov
ljmp
lock
loope
test
cmpsl
sub
ja
pop
in
jno
out
mov
inc
mov
int
aas
stos
push
sbb
push
sbb
jae
cld
int
clc
dec
pop
xor
xor
or
stos
adc
loop
lock
cmpsl
pop
repz
xor
xchg
sub
cwtl
bound
mov
mov
je
int3
jne
repz
jo
ja
xor
les
sub
inc
push
push
das
cmp
or
cmp
add
inc
xchg
mov
pushw
mov
negb
int
mov
or
pop
sub
adc
push
int3
in
mov
leave
mov
mov
orb
addr16
dec
popf
cld
int3
jp
inc
js
xchg
loopne
and
in
cmp
stc
xor
mov
mov
lret
bound
mov
fadds
or
cmpb
and
mov
jo
sbb
xchg
sub
add
leave
and
dec
out
mov
pop
push
clc
daa
popf
xor
mov
imul
mov
add
addr16
cmp
cmp
nop
cmp
push
pop
push
push
mov
pop
bts
in
insl
sti
mov
jp
rcrl
add
lds
xchg
dec
adc
int3
xchg
or
xchg
dec
xchg
jnp
ss
movsb
sub
nop
popa
sub
outsl
inc
lods
les
pop
jne
rclb
pusha
xchg
sti
cli
mov
in
jbe
xor
jecxz
push
int
std
notl
imul
ret
jge
pop
cmp
sbb
inc
xchg
nop
xchg
loop
mov
fisubs
jne
mov
inc
test
sbb
add
cmp
insl
movsl
dec
daa
mov
lods
fnstcw
in
jbe
jg
add
leave
data16
scas
jge
outsl
insb
fnsave
xor
iret
inc
push
xlat
fbstp
jae
or
repnz
add
ffreep
fistl
push
outsb
jmp
je
inc
push
sbb
pop
fimuls
inc
xchg
jp
popa
dec
mov
sbb
aas
outsb
scas
push
lahf
mov
or
ljmp
jne,pn
jno
in
stos
pushf
lea
iret
fdiv
or
into
psllw
scas
inc
pop
mov
or
leave
jb
bswap
test
xchg
js
cmp
cmp
in
in
fisttps
sub
jge
cmp
sbb
pusha
xor
data16
or
mov
cmpsb
jecxz
outsl
jno
sbb
adc
push
mov
mov
adc
addb
les
inc
mov
js
sti
and
add
push
jg
lret
sbb
negl
inc
mov
aaa
bound
jmp
cld
inc
dec
xchg
repnz
push
repnz
adc
orb
sahf
ret
cmpsl
test
push
push
add
cmp
jb
xchg
push
cmpsb
fsub
shlb
dec
mov
adc
cs
std
ret
adc
jae
je
aas
xchg
outsl
push
mov
push
aaa
xor
jl
xor
stos
stos
sbb
adc
mov
adc
lret
pop
and
jbe
adc
mov
mov
leave
inc
xor
out
shlb
inc
xchg
jno
and
lcall
sub
xchg
jecxz
mov
test
fcmovne
mov
mov
sbb
sahf
in
in
xor
or
pop
aaa
mov
insb
push
push
ret
sbb
ds
lods
test
lahf
adc
js
jns
mov
pop
lcall
inc
xchg
lret
xlat
in
inc
lock
or
mov
xchg
adc
dec
in
and
dec
int3
push
inc
pop
mov
inc
or
or
lods
das
jae
inc
xor
fisubrl
jg
sti
ja
sub
mov
mov
sbb
jb
ret
rcll
ds
dec
pop
push
dec
stos
pop
jns
neg
lds
mov
push
mov
test
adc
mov
add
push
jns
stos
roll
xlat
xchg
in
push
and
dec
cmp
cmp
std
xchg
loopne
int3
adc
adc
pushf
jg
push
int3
sub
xchg
pop
cmpsb
insb
lds
out
xor
jl
jle
int
lods
add
adc
in
daa
and
fprem
mov
mov
cmc
jl
mov
dec
call
xchg
cmp
cmp
sub
stos
adc
cld
ljmp
push
adc
cmp
jp
sarl
ljmp
pop
mov
pop
push
lods
ja
xor
sbb
adc
lcall
mov
cmp
das
aaa
loop
hlt
mov
test
ret
popf
arpl
add
pop
push
adc
lret
subl
addl
pop
aas
repnz
ret
fcoms
add
test
mov
xchg
cwtl
sbb
xchg
jg
jmp
lea
dec
add
inc
mov
test
xchg
stos
sub
rcrb
push
xchg
lea
insb
push
sub
sbb
or
cmpsb
jge
mov
cmpsb
js
jae
or
mov
push
aas
push
fnstsw
push
movsb
imul
sub
les
std
or
fidivs
dec
rcll
or
fnstsw
das
iret
popa
lcall
ljmp
jmp
fists
lret
popf
xchg
cmpl
in
jle
mov
or
shll
stos
xor
sbb
adc
mov
fwait
cmpb
cltd
push
mov
cli
call
sbb
dec
pop
inc
inc
pop
mov
or
dec
push
add
es
inc
xor
sub
je
lahf
mov
adc
adc
sti
mov
in
mov
shr
inc
xorb
sub
jp
ficoms
add
rol
outsb
lahf
lret
mov
xchg
ret
das
and
mov
sub
and
and
negb
daa
fnstenv
mov
inc
sahf
mov
and
adc
filds
addl
hlt
and
dec
iret
fstpl
sub
jb
outsl
call
xor
jb
pop
scas
aaa
test
test
jmp
pop
and
notb
stos
popa
mov
xchg
pop
shl
add
test
inc
pop
lods
mov
jne
push
out
add
push
mov
fdivrs
sahf
stos
inc
shll
fcoms
jno
inc
jns
inc
push
lret
enter
mov
pusha
out
iret
xor
xor
lock
inc
xchg
mov
mov
pop
pop
lret
sbbl
lcall
lret
popf
leave
mov
jne
jle
lahf
scas
notb
mov
pop
mov
mov
jecxz
jl
mov
push
sti
mov
mov
addr16
jo
icebp
push
sub
and
int
push
lret
and
sub
add
adc
pop
loopne
and
push
stc
dec
cmpsb
xchg
sub
testb
std
pop
fwait
ret
jbe
xor
stos
std
gs
cs
shrl
and
push
fldln2
shrl
xlat
fiaddl
xlat
stos
repz
mov
xlat
call
adc
frstor
sbb
xchg
xchg
mov
addr16
cltd
jno
xchg
ffreep
insl
repz
fidivs
lahf
xchg
stos
iret
push
mov
jbe
imul
cmp
repz
xorl
or
es
jl
stc
mov
std
cli
scas
lret
jmp
rcll
sbbb
stos
sub
sub
imul
inc
mov
pop
addr16
ljmp
outsl
movsl
xor
xchg
pop
push
cli
addb
jg
clc
push
add
dec
jle
push
fucom
xchg
adc
inc
dec
sarl
pop
mov
movsl
pop
aam
rolb
lret
lock
cmp
sahf
insb
and
outsl
and
sbb
mov
lret
sti
cmp
out
lods
lods
push
xchg
xchg
xor
fiadds
call
push
les
loop
in
js
divl
push
cwtl
xadd
push
jb
jp
dec
mov
out
or
icebp
pop
ja
and
mov
push
lea
out
insl
xchg
clc
mov
sub
aad
dec
lahf
sub
mov
ret
insl
les
cwtl
in
or
xor
jae
cmp
push
js
mov
dec
inc
push
repz
sbb
stc
icebp
and
stos
sub
cwtl
jne
and
inc
jnp
test
sbb
push
jno
jmp
xor
sti
inc
rorb
in
jb
and
and
ret
dec
cwtl
sub
fidivrs
les
add
xor
sub
push
jno
or
addl
call
ljmp
jne
jno
mov
out
push
std
arpl
iret
dec
jbe
jne
das
xchg
sti
xchg
pop
cmp
and
movsl
daa
dec
jmp
pop
adc
loopne
jmp
xchg
xlat
fdivrs
movsl
cli
add
addb
xor
mov
xchg
arpl
imul
and
faddl
mov
cltd
clc
sub
arpl
aas
sbb
pop
push
sbb
cmc
insb
or
mov
sbb
rorl
jl
push
and
outsb
push
or
add
mov
or
bound
je
nop
sti
les
and
xchg
pushf
push
stc
lods
ljmp
and
add
xor
xor
dec
xchg
test
push
repnz
mov
and
dec
adc
repz
aam
sub
rorb
jmp
or
and
out
mov
mov
cmp
scas
in
jb
xchg
andb
cs
mov
pop
jge
hlt
xchg
mov
repnz
or
push
mov
repnz
jp
popf
mov
cmp
out
cmp
cmp
lods
out
mov
mov
ret
pop
or
outsl
testb
hlt
setno
arpl
cmc
popa
les
inc
add
clc
inc
lds
outsl
lds
mov
cmp
xor
and
movsb
lock
jnp
and
mov
loope
sub
push
ss
xor
testb
push
shl
sbb
adc
out
pusha
cli
jg
xor
xchg
aad
mov
dec
test
push
push
xchg
adcl
in
add
jmp
imul
repz
xchg
in
imul
jmp
pop
or
jns
dec
imul
addr16
aas
addr16
push
rcl
scas
add
push
jno
push
les
test
mov
nop
push
test
or
xchg
sbb
add
shl
lcall
mov
ret
roll
mov
sub
out
aad
lcall
ss
xor
outsl
aad
bound
outsb
cmp
xchg
xor
pop
fcomp
cld
cmp
pop
xor
iret
jmp
push
xchg
pop
mov
sbbl
push
ljmp
sub
inc
mov
jg
push
mov
cmpb
mov
js
jl
xchg
inc
add
jecxz
inc
sub
push
cmp
out
push
imul
sub
sbb
shlb
and
mov
les
incl
dec
test
aaa
sti
es
ret
adc
lahf
xlat
push
daa
xor
pop
push
push
stc
add
adc
fsubrp
dec
test
in
aad
iret
and
xchg
rorb
pop
pushf
fnsave
das
test
js
xlat
call
bound
fstpt
sarb
add
adc
mov
xor
lock
sub
or
insb
xchg
adc
aad
test
push
push
loop
int
sahf
cmp
add
pusha
clc
or
mov
nop
lret
jmp
aas
test
cmp
xor
inc
jle
push
cmp
pop
push
fbstp
iret
jge
insb
repz
imull
andl
dec
testb
lods
and
loop
pop
dec
pusha
sub
inc
cmc
sti
or
inc
jae
add
cmpsl
and
js
dec
mov
cmp
sub
fstps
rorb
xor
stos
cltd
adc
jg
push
push
lea
push
sub
out
pop
xchg
xchg
ret
or
out
push
sbb
dec
lcall
jbe
repz
push
cld
mov
mov
gs
push
test
ret
xchg
xchg
push
iret
lea
inc
je
sbb
cli
jecxz
pop
cmp
sub
fwait
inc
and
xchg
mov
jb
test
loope
nop
ss
inc
popf
sbb
xchg
sbb
xor
push
dec
stos
xchg
xchg
outsb
or
orb
mov
xchg
jg
data16
repnz
pand
dec
mov
pop
les
adc
mov
xchg
test
dec
jnp
add
lock
xor
jecxz
ds
cmp
mov
pop
pusha
mov
or
xchg
mov
push
mov
cwtl
xlat
push
mov
xor
sbb
mov
loope
int3
mov
mov
cmp
mov
adc
mov
loope
adc
rorb
lcall
cmp
or
xchg
adc
add
mov
push
fsubrs
push
neg
or
repnz
add
loopne
xchg
imul
aas
mov
sti
ja
mov
add
lods
or
push
adc
jmp
inc
psrlw
out
push
in
mov
jle
mov
sahf
mov
sub
and
test
dec
xor
pop
xchg
test
jle
adc
daa
test
sbb
shr
jns
test
cwtl
dec
pop
jp
rclb
in
repz
stos
xor
jecxz
ficompl
es
add
scas
xlat
sbb
and
leave
and
aas
test
shrb
sbbb
mov
cltd
mov
mov
fwait
jbe
push
dec
cmp
shlb
sub
jg
outsl
pop
mov
repnz
repz
or
movsl
sbb
popf
add
call
leave
ret
out
jecxz
les
and
fs
pusha
mov
addb
pop
inc
lret
insl
enter
repz
mov
sbb
repz
pop
jl
sbb
or
mov
iret
sbb
incl
imul
cs
fs
icebp
movsb
loope
jb
add
sahf
adc
scas
mov
in
insb
fbld
mov
xchg
mov
push
fistpll
pop
imull
adc
lock
outsl
leave
mov
cmp
clc
fldenv
sbb
mov
and
insl
cli
jns
lods
leave
xor
and
orb
loopne
inc
inc
aad
lahf
xchg
cmc
and
pop
push
frstor
pop
fwait
xchg
data16
sbb
insb
push
es
test
aas
mov
xor
or
out
mov
mov
sete
jge
pop
fdivs
xor
pusha
cld
jl
xor
in
int
jae
add
arpl
test
jmp
or
sub
jb
sub
es
dec
addr16
je
fwait
pop
sub
out
out
push
hlt
dec
add
push
rclb
pop
push
movsb
sub
ret
pop
inc
add
stos
movsl
in
rorl
push
idivl
add
jns
adc
leave
push
push
xor
div
sbb
call
bound
in
or
in
es
ror
scas
xor
std
adc
dec
mov
add
inc
stos
lds
pop
adc
xor
leave
and
enter
fwait
les
push
dec
dec
adc
cwtl
dec
outsl
pop
arpl
fnsave
test
cmpsl
int3
gs
sbb
xor
cmp
test
jne
sbb
xchg
mov
inc
mov
mov
xchg
mov
scas
cld
fiadds
mov
sub
int
repnz
rclb
mov
mov
mov
sub
push
sub
pop
jae
loope
cmpsb
orl
mov
dec
or
out
cmp
or
ds
jne
gs
jo
pop
incb
inc
sub
adc
cltd
ss
pop
mov
push
cmp
pop
xor
inc
push
xchg
cmp
or
test
loopne
mov
stos
out
or
popa
inc
pop
sub
stos
jge
jbe
test
testl
xchg
iret
jecxz
jae
and
ljmp
xchg
shlb
or
inc
gs
xlat
sbb
jecxz
loopne
stos
loop
jecxz
mov
std
and
mov
aaa
test
out
repnz
push
in
push
mov
mov
mov
jo
inc
movsb
cmp
repnz
pop
lcall
leave
fistpl
cmpsb
adcl
jge
stos
sub
sbb
lods
sbb
xor
mov
mov
add
mov
push
inc
and
mov
jecxz
xchg
pop
popf
xor
xorb
push
mov
mov
std
test
shll
xor
cmp
aas
dec
dec
fnstsw
stos
test
mov
or
mov
xor
jg
lds
push
arpl
scas
dec
mov
adc
mov
mov
sbb
sub
mov
jno
jmp
shl
cmc
jno
or
or
fdivp
mov
cmp
mov
dec
cmpsb
lods
pop
fsubrs
adc
cmpsb
or
mov
outsl
sub
out
sub
mov
sub
or
lds
and
xchg
jb
xor
add
dec
loopne
sub
fmul
arpl
mov
or
inc
int
mov
push
into
add
outsb
jmp
movsl
clc
mov
add
sub
xor
or
xchg
aam
dec
stos
cmp
js
sub
cmc
push
adc
and
daa
fwait
loop
sbb
push
into
cmp
movsl
das
push
aam
movsl
jno
ret
push
xchg
xor
jbe
push
mull
out
test
jmp
jns
out
adc
jb
pop
jle
fistps
inc
push
jbe
in
sub
inc
xchg
subb
stos
cld
movd
loope
mov
push
lcall
jl
lahf
hlt
jp
es
cwtl
jp
andl
or
hlt
mov
das
jno
mov
xchg
lret
pusha
sahf
dec
mov
xchg
mov
call
ret
adcb
sbb
jle
jge
or
in
clc
iret
sbb
in
mov
andl
inc
jge
ss
insl
fwait
sbb
jle
jge
xchg
ja
jle
sti
cmp
push
push
cmpsl
fdivrs
mov
pushf
ljmp
and
data16
xor
fbld
imul
adc
xor
dec
inc
inc
mov
mov
jne
imul
arpl
pop
xchg
cmpsl
or
pop
adc
lods
outsb
cmp
xchg
div
repz
cmc
mov
jns
xor
into
or
pop
jmp
lods
and
mov
aam
sti
pop
in
popf
rolb
fwait
xorb
out
push
jns
movsb
loope
and
fldcw
mov
add
cmp
cmpsl
adc
mov
and
mov
ljmp
fcomi
mov
je
pop
mov
jb
in
mov
xchg
insb
ficoml
adcb
jmp
iret
mov
outsl
lret
ds
out
xchg
pop
jae
rolb
cmpsb
mov
or
std
cmp
cli
jo
xchg
je
call
call
cltd
jecxz
mov
out
and
outsb
rcrl
pop
jle
lcall
jo
pusha
pop
rclb
lcall
scas
pusha
fidivrl
gs
jl
push
gs
dec
jmp
push
outsl
add
cmp
shlb
lea
jns
shrb
cltd
out
test
dec
mov
das
movsb
add
and
inc
or
shrl
addb
cli
jmp
rolb
adc
leave
jge
jge
cmc
insb
idivl
or
fsubs
jge
iret
movsl
hlt
leave
mov
inc
push
mov
ret
xchg
lcall
outsb
mov
pop
pop
sbb
cmp
pop
lods
push
push
imul
adc
rolb
and
jns
cmp
popf
arpl
int3
inc
xchg
cltd
movsb
xchg
xor
daa
push
scas
dec
loopne
sub
jns
pop
dec
cld
and
pop
push
dec
repnz
xor
imul
xorl
cmpsl
in
hlt
test
pop
mov
pop
insb
jmp
push
or
inc
movsl
lock
jp
pop
mov
orb
loope
nop
sahf
xor
mul
xor
jb
push
nop
outsl
cmp
add
jo
std
repz
dec
cltd
mov
jbe
push
sbb
mov
gs
mov
jns
sub
dec
sub
in
sar
pop
adc
push
fmul
fisubl
push
repnz
jno
inc
and
or
xchg
cmpsb
lret
sub
jnp
pop
imul
andl
shl
das
or
lods
jns
sbb
cmpsb
dec
stc
or
out
outsb
and
or
cmp
out
mov
outsl
jle
pop
sbb
push
inc
jle
popa
inc
xchg
inc
ficoml
popf
xorl
insl
fdivs
and
repz
ljmp
mov
ret
movsl
xchg
and
cmp
push
lahf
push
ds
push
mov
andb
jne
imul
inc
into
outsb
xor
stc
pop
mov
mov
sbb
and
mov
int
rcrb
add
xor
icebp
jbe
into
lret
icebp
and
mov
mov
inc
scas
adc
aad
jl
adc
cmp
out
mov
lahf
popf
push
cmp
js
adc
rcll
pushf
xchg
shlb
das
sarb
mov
xchg
das
cmpsb
mov
int3
push
sbb
sub
aaa
dec
jae
aad
jo
push
mov
ja
cmp
inc
mov
mov
or
mov
xor
sbb
pop
sub
cmpsl
lods
mov
outsb
mov
jbe
sbb
mov
ss
cltd
scas
jle
mov
sub
push
push
dec
push
insb
filds
out
sbb
mov
xor
sub
or
fnstsw
and
mov
sub
ret
sub
outsb
lods
jb
shlb
xchg
fldenv
mov
push
dec
hlt
or
mov
cld
cmpb
fsub
gs
sub
ret
jbe
xor
paddq
xchg
mov
sar
loope
or
or
rorl
adcl
stos
fcoms
dec
aam
je
inc
insl
lret
sbb
dec
in
mov
add
sbb
xchg
pushf
xor
mov
ja
decb
inc
fadd
mov
rol
or
mov
scas
jnp
push
and
inc
mov
leave
loop
mov
mov
dec
jae
pop
dec
inc
xchg
sub
cmp
test
jne
push
pop
jl
mov
push
sbb
mov
lret
out
cwtl
jae
xor
push
nop
mov
aas
inc
mov
orb
or
mov
nop
rorb
dec
cmpsl
mov
out
mov
repnz
jns
aam
and
xor
outsb
jmp
mov
cmp
xor
jp
jns
fiaddl
out
dec
add
in
xchg
adc
int
std
mov
inc
mov
and
sbb
mov
enter
int3
pop
push
push
shl
dec
fdiv
or
stos
test
aad
mov
push
mov
js
add
add
mov
outsb
xchg
jae
mov
adc
sub
fmul
cmp
or
fldl
sbb
test
cltd
rcrb
movsb
test
jl
sub
jb
call
jae
aas
inc
divl
push
fadd
lret
inc
test
jo
aaa
ret
movsl
mov
sub
sub
cmpsl
mov
push
sbb
jnp
cmp
negb
jno
jae
jae
rol
imul
lock
fisubs
push
filds
pop
add
fs
daa
push
sar
sbb
shrb
inc
sahf
test
lods
test
inc
hlt
push
xchg
push
cmp
lods
movsl
mov
pop
insl
xchg
xor
sbb
lods
xor
push
movsb
push
add
fs
scas
mov
ja
pop
lods
xor
ret
inc
sub
jg
cmc
mov
aad
out
push
test
jne
pop
das
gs
scas
inc
jg
repnz
cmp
sub
inc
fdivrs
mov
xor
sahf
or
setno
scas
lret
aad
popa
mov
mov
in
xchg
rclb
inc
sbb
pop
push
scas
outsb
cld
xor
cmp
js
and
popf
sub
std
dec
pop
lds
inc
mov
mov
push
lret
into
or
mov
sub
cltd
jb
sarb
clc
and
inc
repnz
js
push
xchg
jo
popa
cmovb
jp
jne
and
jge
jl
cmp
sbb
push
ficompl
lods
ss
int3
sbb
xchg
sbb
into
xchg
clc
repz
cltd
push
ret
out
jae
mov
sbb
push
data16
xor
pop
sub
sti
nop
sbb
cmp
outsb
lahf
fdiv
sub
inc
test
jmp
push
popf
mov
roll
push
sub
adc
mov
mov
xorb
lds
sbb
xchg
or
ljmp
mov
stc
repnz
inc
jecxz
and
aas
inc
fdivrs
and
jge
cmp
push
jne
insl
scas
arpl
add
aam
lods
cld
mov
cmp
xor
inc
clc
call
aam
orb
mov
add
int3
dec
mov
daa
fdivs
ret
lods
mov
decb
pop
sbb
jp
popf
lods
call
push
xor
cmp
xchg
frstor
cs
or
mov
int3
rcrl
add
push
shll
lret
cmp
pop
push
and
sbb
mov
jl
sub
jecxz
cmpb
fwait
xor
clc
mov
sbb
ja
test
and
cli
out
cmp
push
shlb
lods
test
jno
in
adc
mov
into
std
cmp
in
cmp
xorl
mov
loop
es
call
adc
mov
out
and
lods
sbb
cmovge
push
in
inc
xor
or
arpl
inc
xor
jno
dec
inc
mov
in
mov
push
jbe
lcall
and
or
sbb
push
gs
cmc
test
push
ljmp
mov
cltd
out
loope
out
push
cltd
and
add
loopne
fwait
shlb
cmc
mov
fldenv
aad
dec
sub
and
dec
pop
enter
loopne
sbb
dec
rcrl
xchg
sti
xor
inc
inc
xlat
mov
cmpsb
repnz
lods
je
push
fucomip
pusha
pushf
sub
and
push
shll
xor
mov
lea
mov
jbe
mov
scas
cmp
mov
push
cmc
ss
xor
shlb
stos
and
mov
lock
sbb
sub
int
cs
jb
cs
xchg
sbb
cmp
popa
ret
cmp
call
sbb
test
rcr
mov
fwait
lahf
mov
mov
jecxz
jmp
push
imul
or
adc
jno
stc
jmp
pop
lods
adc
jo
push
les
adc
push
jnp
leave
add
cmp
and
divl
add
insb
adc
or
test
std
enter
ret
push
xchg
push
sub
pushf
jmp
stos
icebp
sbb
shll
mov
add
xchg
clc
int
xchg
sub
fimuls
xor
arpl
sbb
xor
test
inc
cmc
cli
out
or
pushf
push
jo
mov
shll
jmp
mov
stos
cmp
cld
ljmp
jecxz
loopne
rcll
xchg
clc
pop
out
addb
outsb
lods
stc
fisubrl
arpl
out
or
clc
cmp
inc
jecxz
adcl
jge
mov
push
in
cli
or
fwait
enter
cs
flds
imul
rcrl
jo
in
cmc
andb
jae
jge
into
inc
sti
out
aad
xor
fimuls
jno
addr16
mov
push
mov
push
test
push
adc
loopne
jmp
and
mov
xchg
jns
lds
push
sub
int
push
xchg
xchg
push
fwait
jo
mov
shrb
ficoms
fwait
ss
and
aas
mov
ret
movsb
mov
xchg
lods
lock
cmp
adc
xchg
fistpll
mov
lods
mov
hlt
and
test
pop
fists
inc
mov
ljmp
maxps
jp
fwait
cmp
jp
inc
mov
dec
mov
sbb
stc
insb
repnz
mov
es
push
xor
fldenv
adc
sbb
stos
jg
je
out
dec
jno
mov
je
sbb
sbb
push
mov
sbb
inc
sahf
adc
fmull
xor
sbb
aaa
sbb
mov
fsubrl
dec
mov
xchg
movsb
jbe
movsl
int
pop
inc
lret
jnp
stos
in
rolb
iret
sbb
xor
stos
rolb
adc
xchg
mov
xchg
scas
inc
lock
push
shlb
scas
jmp
insb
mov
mov
ret
jl
jnp
mov
fimuls
mov
sub
insb
xchg
loop
call
mov
push
call
push
dec
push
jecxz
pop
leave
test
stos
sbb
insb
lret
outsl
jle
sub
cmc
loopne
mov
jb
sub
hlt
or
mov
cli
cmp
mov
js
addr16
ret
cmp
pop
or
push
pushf
or
hlt
sbb
mov
mov
sbb
out
and
mov
in
xchg
inc
push
jmp
or
fcmovnb
xchg
and
jecxz
test
push
inc
int
mov
sub
icebp
sub
push
cmpsl
push
lea
ret
jecxz
in
mov
test
push
rcl
push
decb
dec
cmpsl
or
jle
fldl
mov
punpckldq
or
stos
sbb
pop
jnp
dec
cli
hlt
sahf
xchg
mov
int
sahf
xchg
fdivs
mov
push
je
or
out
shll
std
sbb
cwtl
dec
mov
loopne
xchg
mov
movsl
dec
popa
or
push
cltd
sub
scas
add
enter
rcrl
pop
and
sbb
test
xchg
push
mov
rorl
subl
movzbl
mov
or
pop
shll
aaa
in
stos
dec
sbb
xchg
adc
jbe
les
sub
add
je
push
sbbb
lcall
fcmovu
cmc
pop
int
xor
cmp
ficoml
mov
dec
jg
push
in
ds
xchg
ror
and
push
xor
xchg
pop
xor
push
ljmp
out
cli
jge
sub
cmc
leave
shrb
addr16
ds
push
test
mov
repz
hlt
or
jmp
in
xchg
test
enter
sub
mov
and
movsl
mov
ja
jmp
mov
push
cwtl
fisubl
cmp
mov
call
mov
cmove
jbe
adc
adc
clc
ljmp
mov
jne
mov
movsl
nop
imul
or
addb
and
sti
mov
sbb
mov
adc
adc
call
jae
sub
loop
adc
mov
stos
loopne
ds
es
or
icebp
xchg
add
into
pop
ljmp
rolb
addr16
stos
pop
pshufw
push
repnz
sti
cmp
adc
aad
xchg
cmpsl
pusha
mov
jb
cmp
or
mov
fwait
ds
dec
xchg
test
mov
xchg
cs
pop
dec
fsub
pop
push
cmp
dec
sbb
loopne
jbe
jg
cs
add
xor
xchg
fdivrl
cwtl
ret
and
cs
in
push
mov
enter
int
pushf
sbb
mov
cmc
push
sub
dec
jge
pop
cmp
cmp
add
insl
add
pop
mov
iret
rcr
leave
lahf
cs
mov
lds
and
add
pop
inc
jge
cmp
mov
lret
inc
push
mov
pushf
and
shlb
hlt
xor
aad
mov
les
les
adc
lret
sbb
cmp
mov
fsubr
pop
aaa
fwait
dec
cld
xchg
and
enter
add
mov
iret
jge
sbb
int3
lret
or
mov
js
sub
inc
mov
pop
les
dec
and
or
enter
or
movsb
push
ja
lret
add
arpl
jl
xchg
repz
inc
es
arpl
hlt
cld
mov
int
out
lret
jp
or
movsb
dec
push
sub
adc
or
out
aaa
mov
popa
sbb
mov
mov
cmp
push
dec
mov
loopne
jp
or
push
les
and
dec
cmp
hlt
add
sahf
cmpsl
ljmp
xchg
ror
shlb
nop
adc
mov
cmp
inc
sub
xor
sub
mov
call
shrl
pop
lahf
jno
pusha
icebp
xchg
andb
clc
lcall
mov
dec
push
xchg
sub
lret
jge,pt
cmp
xor
je
and
int
mov
inc
sub
stos
mov
jmp
pop
lock
daa
aas
and
mov
ret
pop
mov
pusha
sub
hlt
jp
movsb
xchg
mov
ja
ret
js
mov
out
jp
mov
jno
adcl
pop
or
pop
mov
loope
add
push
sub
test
push
mov
fisttps
sbb
ret
in
fdivrp
mov
cmp
cmp
in
into
stc
lcall
pop
xchg
in
std
adcl
and
sbb
daa
shrb
outsb
push
sub
add
mov
int
lods
imul
sub
filds
rcrb
adc
push
addr16
subb
dec
and
mov
shlb
das
call
xchg
icebp
lock
mov
dec
jae
add
mov
mov
movsl
cmp
mov
mov
push
pop
cmpsl
notb
pop
es
sbb
mov
shll
sub
loopne
lea
sarb
insb
adc
out
mov
and
mov
repnz
push
mov
insl
inc
dec
ret
call
out
mov
cmp
hlt
lods
push
popa
mov
push
jne
fsubs
adc
or
int3
jle
lret
pushf
mov
mov
clc
shld
dec
jae
imul
shll
sbb
cli
or
mov
mov
cmp
dec
mov
mov
fadd
aas
ss
xchg
add
push
stos
lea
mov
lahf
mov
aam
xchg
mov
fwait
dec
xchg
imul
sub
or
mov
inc
jnp
ja
pop
pop
fsts
adc
jo
test
mov
in
jno
cwtl
mov
out
nop
mov
fldt
pop
rcrb
fdivr
repz
in
pusha
outsl
push
aaa
jnp
ljmp
les
pop
xchg
lods
into
dec
dec
dec
mov
jecxz
pop
mov
popa
movsl
and
jle
adc
pop
js
les
dec
test
add
inc
sub
test
lahf
xor
xor
cs
pop
out
jle
xchg
or
or
add
push
ds
out
aad
pop
scas
pop
insl
mov
mov
pop
pushf
fadd
nop
push
fistpll
pop
xor
dec
push
dec
or
sbb
push
xchg
popa
push
sub
lret
mov
xchg
jno
jb
sbb
leave
lds
je
pop
repz
jnp
xor
fisubrs
cmc
pop
imul
movsb
addr16
stc
popl
cmpsb
addb
mov
out
aaa
pop
mov
addr16
aam
loop
rol
fdivrp
dec
push
stos
sub
sbb
dec
sti
lods
inc
rcl
aaa
lea
xchg
add
cmc
and
movsb
mov
cmp
leave
and
mov
dec
cmc
arpl
loopne
xchg
repz
and
scas
cmp
or
xor
xchg
shrl
jl
push
sub
insl
je
cmp
cmp
daa
fbld
mov
mov
mov
dec
and
std
push
mov
fs
stc
mov
adc
rclb
mov
cmpsb
arpl
dec
loope
mov
xchg
ljmp
xchg
mov
adc
push
xchg
sbb
stos
arpl
cmp
sub
dec
movsb
push
mov
outsl
or
data16
sub
iret
lock
inc
jp
jg
inc
bswap
ss
nop
push
inc
cs
hlt
popf
dec
adc
sti
ret
ja
fiadds
inc
push
or
push
and
push
adc
out
add
addr16
jae
lret
int3
ds
leave
movsl
shl
push
cmp
add
pop
mov
cmc
mov
or
or
out
fsubrs
lods
in
dec
sbb
std
jb
push
aam
test
adc
jmp
add
mov
callw
xchg
push
adc
xor
adc
aas
divb
sbb
adc
sbb
in
jl
push
jl
mov
mov
xor
lods
movsl
scas
add
mov
xchg
mov
mov
popa
bound
mov
mov
andb
lea
cli
test
mov
mov
xchg
adc
scas
cmp
jnp
jmp
adc
pop
adc
or
iret
call
in
xchg
jbe
fdivrs
insl
push
loop
idiv
sahf
and
daa
pop
out
mov
mov
mov
xchg
pushf
rorb
and
loopne
jecxz
test
cld
inc
fbld
std
mov
dec
jmp
sbb
into
jbe
add
test
data16
cmpb
aad
lods
pop
ss
add
xchg
nop
jno
cmp
add
or
mov
cmp
in
and
ret
push
jns
icebp
pusha
je
std
shll
pop
push
repnz
cmp
cmc
fnstenv
shlb
lret
imul
sub
jo
and
sub
xchg
fsub
xchg
fstpt
inc
xchg
lret
dec
push
mov
addr16
dec
or
jmp
xor
pop
movsb
pop
xor
pushf
stc
and
and
sbb
inc
xor
in
push
cmp
add
dec
add
mov
push
insb
or
xor
insb
data16
subb
das
inc
or
push
and
nop
fimull
dec
in
aaa
stos
lret
test
jns
jo
mov
sarb
aad
cmp
cs
jl
cli
pop
fisubs
adc
add
sub
mov
pop
jno
lea
cmp
and
jg
xchg
sbb
cmp
arpl
imul
stos
dec
sbb
jbe
inc
int
idivb
ds
stos
or
rol
mov
jmp
lret
bound
xchg
js
cld
notl
xchg
mov
sub
inc
js
dec
mov
popa
sbb
out
out
xor
test
std
das
add
cmpsl
push
and
dec
dec
pop
or
push
dec
stos
fistps
fcom
lcall
fstp
push
or
push
das
jno
js
add
mov
cmpsb
fisttpl
cmpb
push
aad
mov
scas
pop
mul
sub
scas
das
ds
mov
out
push
mov
stos
jno
xchg
mov
in
shrl
repz
add
add
sbb
or
sahf
enter
sbb
cs
pop
push
pop
clc
shrb
jp
push
and
lahf
xlat
dec
lret
mov
ret
push
rcrl
xlat
and
add
std
or
and
xchg
outsl
cld
and
movsb
cld
push
push
sahf
push
stos
pusha
dec
jle
inc
fmull
icebp
cmp
push
xor
rcl
loop
insb
push
push
ljmp
xchg
pop
inc
adc
mov
popa
repz
imul
jae
es
rcl
push
mov
push
mov
fwait
pop
popa
std
mov
mov
mov
pop
jle
xor
xchg
shlb
js
aad
enter
xor
mov
lcall
std
mov
jecxz
dec
popa
jns
cltd
in
das
xlat
sbb
and
lods
mov
xor
sbb
fstl
fisttpll
filds
cmp
aas
in
xlat
mov
pop
popa
mov
and
loopne
pop
dec
xchg
xor
cmc
stc
mov
cmc
cmpb
adc
sub
cmpl
mov
jg
gs
cmpsl
sub
xchg
xchg
fiaddl
cmp
pusha
fdivl
enter
test
add
outsl
lods
addr16
ljmp
test
cmp
fdivrs
fmul
lahf
mov
insb
out
xchg
mov
pop
mov
adc
push
ret
jne
out
dec
rorl
mov
pop
cmp
iret
push
cwtl
sbb
imul
mov
enter
aaa
es
jno
cmp
rcl
mov
mov
sub
mov
loope
or
mov
cltd
and
pop
push
adcl
xchg
mov
jecxz
and
nop
aaa
and
mov
rcll
stos
inc
jmp
scas
orb
mov
adc
fld
lods
cmp
or
out
js
test
fldenv
push
dec
mov
jp
cli
pop
icebp
sahf
scas
repz
or
test
pop
mul
addb
jmp
dec
mov
push
mulb
mov
add
xchg
xchg
jo
aad
stos
test
sbbb
shrl
inc
std
and
push
data16
outsl
aaa
fs
sbb
mov
jmp
inc
outsl
pop
lcall
add
sbb
popf
repnz
cmp
cmp
push
out
cmc
out
xor
push
cli
mov
insl
out
inc
test
sbb
fsts
loopne
lock
pop
sbb
js
xchg
jb
dec
shlb
mov
sbb
push
push
adc
out
dec
xchg
insl
adc
lcall
mov
or
push
xchg
insl
cld
fmull
push
xchg
jb
lahf
xchg
jbe
push
sub
out
pushf
and
dec
mov
rolb
lock
and
sbb
cmp
aad
sbb
sbb
cli
add
addb
pop
ror
mov
dec
mov
mov
iret
mov
loope
xchg
pop
inc
imul
std
or
adc
jmp
cmpsl
js
push
popa
andb
scas
stos
ret
call
out
into
repnz
mov
mov
pop
pusha
stos
pop
mov
jmp
and
in
push
shll
cmp
sbb
mov
sbb
addb
inc
cmpsb
cmp
mov
lods
call
pop
rol
lcall
cld
jb
inc
dec
adc
and
jge
xchg
pushf
test
movsb
aad
mov
pop
lods
loopne
leave
jo
mov
and
cmc
add
cltd
lock
xchg
cmp
jecxz
xor
stos
cwtl
cmc
jg
dec
aas
and
push
dec
mov
inc
movsb
or
push
fldenv
mov
cmp
pop
adc
repnz
outsl
aad
dec
pop
inc
xchg
fdivs
in
insl
cld
mov
xor
loope
and
imulb
jbe
fs
popa
add
ljmp
into
loopne
dec
inc
push
mov
stc
mov
xor
cs
outsb
outsl
das
mov
mov
outsb
fimuls
push
movsl
enter
insl
pop
lcall
dec
sbb
into
xor
pusha
ljmp
sub
mov
inc
rcrl
sub
sbb
jl
inc
cmpsb
enter
mov
add
sbb
and
push
subb
adc
les
push
movsb
pushf
in
aas
das
lcall
loopne
rcrb
fsub
jo
jmp
adc
popa
pop
call
inc
fstl
cs
int3
cmp
inc
loopne
and
addr16
and
pop
sahf
add
dec
pop
lods
out
fldl
inc
or
addr16
cld
das
rcr
pop
xor
adc
ret
imul
dec
stos
mov
ds
movsl
in
or
dec
or
sahf
lods
dec
aaa
mov
pop
mov
add
xor
push
sub
test
lret
fldcw
sub
outsb
push
xor
push
out
push
xor
dec
test
pop
bound
dec
stos
xor
pop
push
cmp
add
movsl
adc
push
jle
jno,pn
mov
ret
cmpsb
imul
mov
jae
sub
mov
lods
xchg
mov
clc
loop
pop
mov
push
lcall
movsl
das
or
jno
cmc
int
xchg
jp
inc
int
xor
inc
lea
cli
mov
dec
fs
imull
sub
add
adc
dec
xor
loop
mov
xchg
nop
addl
in
mov
in
xor
push
inc
or
add
or
dec
xchg
fucomi
adc
push
sbb
mov
cmp
mov
jo
test
dec
movsb
xor
adcl
test
lds
test
ja
cmpsl
clc
pop
inc
push
xor
cmpb
popa
sbb
cmp
popf
pop
sub
sub
mov
mov
xchg
cmpsl
out
and
cmp
jae
push
mov
xchg
cmp
jo
pop
mov
cmp
jne
jg
mov
inc
adc
jae
add
addr16
int
push
outsl
test
enter
out
out
xor
and
dec
xchg
outsb
ds
mov
imul
ljmp
aaa
ja
add
dec
push
sub
cmpsl
dec
pop
or
inc
clc
test
inc
cltd
divb
adc
jl
mov
rorl
mov
aam
mov
push
mov
cmp
cli
movsb
jecxz
dec
cmpsl
aad
add
sbb
mov
insl
and
cmc
pop
mov
inc
or
loopne
addr16
xchg
insl
push
adc
lret
std
fldenv
jmp
cld
cmp
inc
mov
testb
cmp
into
jge
in
xchg
bound
ja
mov
data16
pop
jecxz
shl
and
fadd
les
pop
in
xor
pop
outsb
ret
jbe
lcall
inc
sbb
and
mov
fildll
sbbb
or
sub
iret
pop
and
xchg
mov
in
std
in
mov
pop
fcomps
cmpb
lea
or
pop
jp
fldl
call
enter
inc
mov
cmp
mov
add
les
xchg
testb
mov
movsl
lret
mov
fs
sar
fdivr
mov
aas
ret
cmp
mov
sbb
loop
aaa
loopne
scas
lods
adc
push
xlat
mov
cmp
loopne
lahf
mov
push
in
add
test
and
aam
push
xchg
mov
leave
jl
cmp
or
inc
inc
fstl
fildll
nop
pop
lds
inc
gs
sahf
es
mov
fnstsw
mov
dec
adcl
or
mov
insb
inc
int
inc
jl
jp
test
mov
cmp
xchg
and
sub
pop
sub
mov
aaa
xchg
cwtl
inc
scas
sbb
pop
popa
add
je
push
pop
xchg
orb
adc
adc
push
xchg
ss
push
mov
pushf
dec
push
xor
add
fcomps
inc
inc
push
repz
adc
aam
dec
add
in
es
gs
gs
and
call
stos
mov
rcll
xchg
ret
out
or
in
adc
add
mov
shr
movsl
mov
jg
shl
arpl
adc
push
lock
jge
xor
scas
sar
xchg
cmpsb
cmp
xchg
pop
jne
nop
sbb
xchg
out
xor
lret
jne
adc
jne
ss
loope
inc
jbe
adc
jecxz
xchg
push
mov
and
mov
mov
fucom
pop
scas
enter
stc
out
pop
cltd
arpl
pop
in
loopne
lods
add
xor
push
cmp
inc
xchg
ja
xor
outsb
jns
sub
cmp
loop
cmpb
insl
test
fsubrl
add
out
jnp
jb
adc
and
jnp
push
fmulp
arpl
jns
sub
das
sbbb
or
push
mov
mov
dec
inc
push
je
inc
cltd
fs
call
nop
cwtl
aas
pop
sub
mov
xchg
iret
add
in
jge
popf
lods
and
lahf
jg
jbe
sbb
ret
cli
jl
xor
jg
rcrl
ljmp
adc
inc
cmc
adc
or
fcomps
jno
data16
addl
stos
imul
cltd
lods
dec
cmpsb
nop
mov
cwtl
int3
out
stc
mov
stos
cmp
sbb
int
add
nop
sbb
mov
repz
mov
fwait
xlat
push
cmp
push
imul
add
mov
movsb
jg
ds
push
cmp
stos
push
les
ret
mov
mull
pushf
pop
dec
adc
or
mov
std
dec
or
shrl
push
mov
jo
jne
rorl
stos
pushf
js
ret
pusha
mov
xchg
xor
jae
cmp
in
cmp
mov
loop
pop
mov
dec
rcrb
addl
xchg
jl
adc
rclb
add
jp
and
dec
dec
dec
add
icebp
arpl
push
adc
sbb
sbb
daa
lods
or
mov
fisttpl
cmp
pusha
test
je
add
xlat
ss
nop
inc
push
inc
inc
scas
lret
scas
inc
adc
adc
add
cltd
lods
call
xor
mov
jns
hlt
mov
xchg
and
xlat
cmpsb
and
clc
cld
fsub
repz
repnz
lea
sub
aaa
pop
mov
loopne
lcall
xlat
jnp
ds
jp
mov
mov
mov
dec
push
or
rclb
scas
sub
xor
lods
adc
leave
mov
dec
pop
xor
sub
ljmp
xchg
rclb
mov
inc
dec
xor
adc
lea
mov
movsl
or
int
sub
jp
xchg
inc
pop
es
mov
jmp
mov
jp
out
ss
jl
lret
rcrb
hlt
call
inc
and
in
push
cmc
push
lock
add
sub
push
xchg
or
ret
mov
jmp
jecxz
lds
pusha
mov
bound
mov
dec
mov
mov
xor
pop
outsl
ds
addb
mov
jo
and
mov
dec
sbb
ss
sbb
loope
fisttpll
adc
mov
and
sbb
ret
nop
cltd
xor
jp
xorl
jb
add
stos
jne
es
xchg
xchg
iret
sub
cmp
out
mov
sub
shlb
inc
mov
dec
ret
jmp
aaa
xchg
arpl
cmp
xchg
test
mov
xchg
fs
pop
dec
std
mov
push
aam
lods
jge
add
test
dec
rol
fisttpl
xor
cmpsb
test
loope
mov
mov
stos
jb
xor
mov
push
push
out
mov
test
in
out
sahf
imul
push
aad
pop
push
out
xor
xlat
adc
mov
into
mov
and
cmp
into
cmpsb
loop
mov
in
mov
xchg
or
xor
lcall
ljmp
jmp
loop
ror
or
mov
mov
sub
mov
xchg
add
mov
in
insl
fdivrs
mov
xchg
sub
xor
fisttpll
fimuls
lcall
cs
mov
cmp
scas
push
cwtl
pop
out
mov
add
inc
cmpsb
ja
push
pop
out
push
call
aam
push
push
fnsave
add
and
in
adc
adc
in
test
pop
sub
popa
call
ror
andb
xlat
inc
ficoms
jne
in
testb
es
pusha
and
mov
stos
pop
stos
jnp
loop
nop
bound
sbb
xchg
stos
test
cmpsl
jb
imul
or
js
mov
jle
pushf
jp
lret
cmpsl
aam
shl
imul
cmp
popf
push
cltd
xchg
xchg
pusha
lret
push
lods
and
fs
sti
xchg
ror
sub
in
cmp
dec
out
in
mov
sub
in
scas
pop
xor
push
push
addr16
pop
cmp
xchg
adc
pop
push
mov
mov
add
scas
mov
mov
inc
xor
xchg
les
sbb
pop
in
adc
and
mov
add
push
dec
dec
fmull
cwtl
fwait
nop
sbb
mov
testl
lret
or
jmp
push
pop
fadds
and
repz
out
push
ss
push
js
popa
push
cmpsl
adc
and
fcmovbe
or
fs
loopne
aam
mov
bound
add
lods
testb
cmp
mov
loop
and
movw
in
shll
cmpsl
add
pop
or
mov
in
push
push
sahf
sahf
pop
lahf
mov
adc
mov
push
jle
xchg
mov
clc
dec
iret
pop
push
sahf
mov
xor
cmpl
dec
cmp
dec
loope
cmpsl
lret
inc
sbb
ss
cmp
repz
je
jg
imul
dec
sub
cmpsb
dec
stc
add
lods
sahf
jnp
mov
cld
pop
xchg
out
adc
fs
pop
cmpl
mov
scas
pop
inc
pop
mull
xlat
fisttpl
repz
mov
pop
or
xorl
mov
fdivrl
mov
dec
fdivs
sbb
sub
out
out
cmp
movsl
lock
jns
adc
or
imul
pop
push
and
mul
cmp
and
sub
push
sub
ss
xchg
clc
data16
pop
ljmp
aad
stc
movsb
xor
xchg
jo
or
sbb
jp
pop
mov
loopne
or
dec
push
cwtl
cmpsl
cltd
es
aam
push
cmp
mov
mull
clc
in
mov
shr
mov
bound
jns
scas
xchg
fdivrs
loopne
ret
inc
xchg
hlt
movsb
jge
int3
add
iret
lock
test
neg
and
addl
sarb
aam
push
xor
fwait
mov
and
xlat
into
sahf
repz
mov
pop
imul
fnstenv
in
cmp
xor
cmpsb
ljmp
negb
stos
pushf
shr
xchg
fldcw
jno
xor
lods
lea
dec
loopne
push
adc
xchg
push
sbb
fs
stos
nop
jge
sahf
dec
cmp
jae
leave
ficomps
in
add
xchg
ret
cld
subl
mov
xchg
mov
jno
aas
cmp
mov
sub
dec
aad
divl
loop
clc
adcb
sbb
jmp
je
push
mov
push
jle
jne
adc
pop
add
cwtl
fwait
cmp
aad
mov
imul
mov
xlat
jmp
dec
ss
pop
ret
push
pop
in
es
sbb
jno
cmp
data16
call
mov
test
scas
mov
jo
or
out
jg
insl
mov
ljmp
add
in
add
dec
rcrl
pop
add
mov
and
loop
xor
clc
ljmp
neg
fcmove
daa
cmp
orb
jo
mov
lods
pusha
lods
xor
and
aad
shrb
pop
push
inc
arpl
imul
dec
out
bound
and
ljmp
adc
or
pusha
adc
inc
jp
cmp
scas
mov
fs
xlat
jb
jge
sub
mov
dec
push
xor
scas
pop
mov
neg
icebp
negl
pop
rcrb
cld
push
push
mov
pop
out
notb
leave
lods
mov
cmc
jae
int
loop
pop
dec
xchg
out
push
push
inc
cs
vsubps
fsts
stos
loope
push
std
xor
push
sbbl
in
mov
mov
or
fs
push
ldmxcsr
adc
fidivs
loope
sub
addr16
dec
sar
mov
out
fisttpll
pushf
dec
imul
bound
adc
lret
xchg
sbb
jo
mov
sbb
movsb
movsb
daa
lahf
and
push
lock
stos
cmp
push
movsb
push
loopne
xor
lret
sbb
popa
cmp
stos
mov
into
mov
rorl
mov
xlat
sahf
xor
cmp
mov
ljmp
movsl
push
arpl
sbbl
push
xchg
xor
lret
sbb
adc
arpl
xor
sbb
rcrl
in
pop
test
sti
mov
mov
orb
int3
sbb
add
sbb
adc
xchg
ret
and
sar
xlat
or
ret
loop
adc
jle
outsb
add
or
dec
mov
mov
test
int
ret
popl
xchg
mov
cld
xchg
sbb
xlat
into
lahf
adc
mov
cltd
inc
movq
and
mov
jle
insb
xchg
mov
test
sub
add
icebp
out
enter
sti
mov
jo
pushf
jl
pushf
scas
sub
lods
xlat
movsl
cmpsb
sub
push
shll
xchg
fmull
test
out
xchg
pop
cmpsb
ret
ds
sub
add
cmp
xchg
sub
int3
jbe
shlb
jne
or
or
loop
arpl
idivb
add
aas
loop
fstpt
jno
push
test
dec
inc
stos
mov
xlat
pushf
das
sbb
push
lea
hlt
cmp
add
mov
popf
shl
xchg
push
adc
push
and
or
iret
mov
test
daa
adc
gs
loope
sbb
lcall
fdivs
or
pushf
cltd
out
roll
out
jnp
imul
rcrl
push
xor
cmp
fmull
dec
insb
jg
mov
and
mov
xor
pop
inc
loop
pop
cmp
lret
in
adc
into
negl
and
int
or
add
sbb
and
sbb
push
nop
pop
mulb
jns
mov
xchg
xor
sahf
add
push
ja
inc
adc
sahf
into
repz
bnd
iret
cltd
pop
mov
cmp
push
divl
cmpsb
mov
cli
fsincos
aas
mov
sahf
xor
cwtl
jmp
aam
mov
xchg
sbb
pusha
in
add
out
or
aaa
xor
dec
mull
adc
lea
pop
mov
lret
mov
pop
jmp
and
pushf
imul
hlt
push
test
sub
jp
adc
pop
and
ja
fisttpl
sbb
dec
cmp
sub
add
pop
aaa
adcb
pop
jp
cmp
nop
and
cmp
stos
mov
test
or
sarb
sub
lods
add
outsb
xor
pop
lods
or
nop
das
adc
nop
adc
aas
dec
mov
pop
sub
cmp
subl
test
lahf
pusha
hlt
jns
pop
push
rorl
decb
xchg
js
ret
xor
mov
lods
xchg
xor
call
cs
dec
rorl
xchg
addb
pop
cmc
sub
inc
int
add
clc
push
orb
mov
insl
test
mov
inc
cmp
sarl
aad
xor
mov
adc
add
mov
mov
sbb
cmpl
imulb
sbb
lret
jbe
xlat
cli
cmp
ret
data16
mov
dec
cltd
jg
int3
jbe
cmp
lods
scas
clc
ja
sbb
popf
cli
jns
xchg
or
and
cmpsl
and
imul
add
mov
data16
test
in
add
pop
cmpsl
adc
cmp
push
ret
cmp
mov
repz
cmpsb
and
xchg
imul
daa
jle
testb
dec
adc
lods
pop
loope
pop
add
movsl
cld
inc
sub
leave
mov
add
imul
cltd
cmp
or
in
mov
push
repnz
aam
push
es
enter
xchg
fstl
ss
xlat
lret
and
and
mov
mov
push
pop
adc
test
shl
pop
nop
es
icebp
jle
mov
cli
sbb
addr16
fldcw
fwait
jne
fcompl
jnp
imul
in
push
adc
mov
mov
jp
xor
xor
loopne
int
mov
push
stos
cmp
insb
pop
dec
mov
out
outsb
sarb
or
xlat
mov
iret
lret
and
or
adc
insb
inc
stos
mov
mov
imul
test
xchg
jg
jo
push
sti
dec
shl
test
xchg
push
jne
ja
enter
fidivl
mov
scas
lret
push
int
and
dec
fisttpl
adc
xchg
mov
gs
hlt
test
in
sub
dec
add
fisttpl
jne
and
movsb
dec
out
xchg
mov
xchg
fs
inc
lahf
je
or
rcrl
mov
cmpsb
jp
jle
fidivs
cmp
pusha
mov
sbbl
inc
dec
sub
stos
sub
out
or
jg
mov
cmp
pop
cld
aaa
rorb
or
jg
jns
jmp
inc
jne
jne
inc
mov
mov
cmp
adc
mov
adc
sbb
jp
sbb
jl
cmp
cmp
call
iret
pop
shl
pop
push
aaa
pop
gs
or
lock
jo
jnp
dec
sarl
fsubs
es
push
lcall
or
push
pop
sub
xor
orb
mov
mov
lea
fidivs
dec
test
std
rorb
xchg
jle
popf
jp
negl
mov
push
lret
push
ret
jle
divb
loopne
xor
xorl
mov
adc
mov
adc
addb
or
add
xor
pusha
int3
mov
mov
xor
jmp
shlb
inc
push
and
push
pop
xchg
ja
call
clc
xchg
adc
jl
insl
mov
dec
loop
test
mov
push
in
out
shl
lea
inc
mov
push
xchg
out
in
cmp
dec
mov
sbb
int3
out
push
adc
jno
pop
mov
test
xlat
cli
pop
lcall
or
and
or
mov
add
mov
sbb
insl
cmpsb
arpl
sbb
hlt
imul
lock
je
stos
jecxz,pn
imul
xorb
paddsb
in
jl
in
cmc
dec
mov
and
cwtl
cmpsb
mov
dec
pop
fadd
push
adc
pop
ljmp
dec
xor
fldt
ret
lods
dec
movsb
fcoms
imul
icebp
test
push
push
sbb
fwait
push
pusha
fwait
jnp
ficoml
jle
insb
mov
test
mov
inc
mov
sahf
call
mov
add
in
dec
jno
sbb
decl
and
mov
jp
dec
popf
sub
pop
pop
adc
lds
std
fcmovbe
sub
fucom
dec
dec
xor
push
mov
push
xor
mov
xor
aas
jb
mov
insl
xor
outsl
cld
mov
push
sbb
dec
popl
jmp
inc
aaa
sub
hlt
adcl
lret
bound
lcall
lods
jbe
scas
rorl
push
pop
stos
in
and
mov
repz
sarl
adc
push
int3
or
bound
fwait
out
xchg
push
mov
in
dec
cmp
jnp
xchg
pop
fstpl
cmpsl
fisubrs
sub
loop
jle
pop
mov
jl
bound
icebp
scas
mov
lds
iret
push
push
mov
mov
jecxz
mov
sub
mov
push
sahf
jo
jmp
sub
or
push
icebp
std
dec
pushf
sub
or
aam
mov
sar
push
push
out
int3
push
jns
test
enter
pop
imul
mov
sbb
std
cmpb
shll
jne
subl
mov
ljmp
mov
ljmp
inc
loop
inc
popa
pop
fucompp
bound
lea
popf
pop
adc
adc
inc
cmpsl
or
sub
push
pop
shll
inc
sub
cmp
cwtl
push
cld
xor
or
jns
dec
pusha
int3
dec
cwtl
and
fs
and
xlat
lea
and
add
pop
inc
pusha
mov
fwait
ja
mov
sbb
test
xor
inc
clc
popf
int3
ja
jg
or
outsb
sub
fcomps
mov
adc
fistpl
cmp
out
sbb
jp
shlb
add
in
insb
add
cltd
inc
mov
adc
jbe
jb
outsb
sti
mov
cs
in
lock
movsl
pop
daa
pop
mov
lds
cmc
jg
mov
sbb
fistps
xchg
daa
or
pop
push
push
pop
test
loop
xchg
shrl
pop
push
loopne
scas
aaa
cmp
mov
sbb
pushl
and
cld
push
xlat
mov
push
mov
pushf
cmp
popf
call
dec
jge
sub
fidivrl
mov
push
dec
sti
add
mov
mov
inc
xchg
aaa
or
leave
push
sbb
lret
xchg
cmp
into
stos
mov
aaa
cmp
pop
test
dec
sub
sbb
dec
jno
inc
shrb
xchg
hlt
enter
cltd
sbb
test
mov
gs
lods
addr16
add
loop
inc
rcr
mov
fwait
jno
cld
fisubrs
inc
sub
xor
sbb
inc
xor
and
push
out
or
out
inc
cmpsb
imul
xchg
add
loopne
mov
nop
jne
sub
fwait
push
ss
xchg
test
jae
pop
mov
pop
cwtl
jns
xor
pop
daa
mov
pop
insb
adc
mov
jnp
andl
lahf
and
push
pushf
es
lret
mov
xor
pusha
bound
add
fsub
mov
adc
cmpsb
or
mov
or
pop
inc
addr16
xor
cmp
cmpsl
out
subb
std
adc
pushf
sbb
jne
push
shrl
ss
lock
xchg
xor
stc
pop
dec
dec
push
or
out
les
ss
scas
daa
nop
push
jnp
imull
mov
add
jne
int3
daa
jl
sbb
ds
in
imul
or
mov
sbb
es
mov
inc
and
and
adc
daa
mov
pop
fildll
into
inc
mov
test
xchg
scas
in
push
push
xchg
cmp
mov
ficompl
mov
sub
dec
shlb
dec
jl
scas
test
xchg
movsb
pop
pop
mov
mov
cmpsl
pushf
shlb
int3
repnz
xlat
xlat
mov
into
jns
lods
push
inc
aas
sbb
ds
jle
push
lods
int
mov
icebp
xor
loopne
lods
mov
mov
pop
lods
lds
xchg
cmp
push
adc
mov
mov
cwtl
xor
in
adc
call
push
pop
out
sbb
pop
pop
in
mov
jl
leave
pop
scas
jo
cli
clc
or
sbb
out
or
mov
cmp
movsb
insb
in
ss
adcl
notb
rcrb
xchg
inc
in
mov
sbb
test
jge
inc
fsubl
jp
subl
or
scas
divb
sbb
mov
leave
mov
enter
mov
scas
lcall
movsb
aaa
sbb
push
mov
push
imull
mov
cmp
lcall
rolb
aad
push
imul
pushf
ret
test
xor
stos
pop
pop
sub
sbb
cmpsb
popa
jbe
sub
xchg
inc
adc
mov
adc
cltd
test
fwait
jmp
gs
fs
pop
push
push
movsl
hlt
and
rcll
loop
lret
lods
orl
es
push
movsl
mov
in
cmc
loop
loope
cmp
and
xchg
scas
and
loope
dec
loope
cmp
scas
cmp
in
or
lahf
push
jbe
out
ffree
movsb
inc
stc
fcmovnb
stc
popf
lea
push
movsl
fdivr
add
je
mov
push
call
push
cltd
addr16
into
cmp
pushf
stos
jmp
jmp
inc
leave
outsl
insl
add
out
out
xor
fists
arpl
jecxz
out
rep
lahf
xor
or
pop
mov
jno
test
jne
repz
and
in
divl
or
arpl
and
jge
mov
cmp
cld
shrl
jnp
and
push
fbld
lcall
and
cmp
adc
jae
mov
frstor
or
orb
dec
xor
jle
jp
cmpb
and
mov
xchg
mov
sbb
dec
pop
rol
repnz
stc
cli
pop
and
adc
in
insl
loop
in
cmp
mov
lret
popa
xchg
lods
pop
mov
jle
sbb
and
pop
inc
jo
dec
cmp
cmpsl
dec
jbe
mov
cmp
inc
ret
fwait
xchg
mov
rorl
or
mov
testb
dec
cwtl
test
ljmp
xchg
ljmp
jb
js
movsb
add
jb
jne
addb
mov
pop
pop
or
iret
in
mov
push
mov
fldcw
push
push
mov
push
push
xor
pop
fdivrs
pop
repnz
aaa
into
mov
stos
in
iret
pop
push
xor
jno
xchg
jecxz
fcmove
enter
jp
lcall
je
jne
pushf
arpl
jl
push
pop
mov
pop
js
or
out
out
pop
mov
mov
and
sbb
jne
inc
push
or
xchg
aad
pushf
fldt
in
ret
mov
dec
es
rcrl
mov
sub
out
cltd
repz
lds
push
xorl
mov
iret
dec
aad
pop
push
loopne
lret
sub
mov
lcall
jo
aam
les
dec
cmpb
sub
cmp
leave
jl
ss
scas
or
loop
jge
dec
movsl
mov
nop
out
xchg
leave
sub
and
sti
leave
shll
imul
fsts
xchg
mov
rorb
int3
or
ds
loop
dec
ret
add
inc
push
sbbb
and
pop
dec
sub
jns
fs
rcrb
mov
dec
mov
sub
xchg
inc
clc
adc
push
jnp
inc
mov
jns
nop
dec
lcall
arpl
stc
cmpsl
shr
mov
pavgw
xchg
or
inc
push
inc
mov
pop
jmp
jecxz
mov
dec
cs
push
aaa
lea
inc
int
mov
mov
mov
fwait
pop
jl
mov
and
bound
push
rcrl
test
cmp
fsubrl
or
cmc
test
gs
pop
inc
scas
addr16
dec
inc
xchg
fldl
ss
popf
inc
xchg
loope
mov
sbbl
divl
jno
int
jge
ja
shrb
pop
in
out
mov
mov
dec
popf
stc
pushf
mov
or
aad
xorl
pop
mov
leave
std
gs
mov
popf
jns
jbe
cltd
xor
insb
out
push
and
gs
sub
cltd
jg
inc
popl
cli
scas
xchg
jge
in
jb
xor
mov
mov
and
xor
addl
call
aad
out
scas
mov
lcall
xchg
shll
or
jne
and
adc
movsl
xchg
push
mov
jne
push
mov
andb
loop
mov
pop
lds
lret
xor
mov
xchg
dec
inc
cmp
dec
pop
rcrb
clc
int
mov
popa
fwait
xchg
out
cmp
test
in
xchg
add
xchg
xchg
cs
mov
xor
jo
xchg
mov
sarl
mov
dec
ds
jo
mov
outsl
inc
xor
add
leave
inc
xor
add
scas
mov
jge
push
push
fisubrs
aad
mov
movsb
adc
inc
push
repz
cmpsl
jnp
adc
test
inc
dec
and
repz
inc
dec
sbb
jg
inc
fs
jg
pop
sahf
xchg
push
or
pushf
or
push
push
punpckhdq
sbb
mov
sub
adc
insl
scas
fmul
inc
adc
inc
fidivs
xchg
mov
xor
and
leave
bound
iret
push
in
xlat
cmp
iret
jecxz
inc
dec
imul
rcl
add
cwtl
jle
imul
sbb
cmp
sahf
ljmp
and
sub
jp
cmp
andb
or
pop
xchg
rcll
clc
xchg
cmp
int3
out
inc
pop
push
add
outsb
jecxz
lahf
xor
movsb
mov
cmpsb
adc
lcall
nop
scas
pop
je
mov
add
icebp
add
addr16
cmp
push
jnp
and
cmp
outsb
mov
jbe
cmp
mov
lcall
js
and
cmp
aam
mov
je
pop
mov
mov
pop
adc
icebp
ljmp
aam
pusha
popa
pusha
jne
or
sub
fistpll
xchg
inc
orb
fnstsw
xchg
sbb
mov
mov
cwtl
subb
sub
stos
add
fadds
ljmp
jmp
aam
enter
outsb
mov
xor
popa
out
int
scas
dec
mov
or
inc
lea
inc
mov
sub
xchg
fprem1
sbb
fists
popa
push
pop
mov
sub
fimuls
push
popa
dec
add
mov
mov
sbb
pop
xchg
test
bound
sbb
and
inc
and
es
mov
movl
daa
dec
outsl
pushf
push
in
roll
cltd
xor
jae
fldenv
inc
adc
dec
and
dec
push
lret
decl
into
out
insb
aam
mov
inc
inc
out
shr
mov
inc
leave
fisubs
das
mov
mov
out
aaa
out
nop
dec
jne
out
or
movsl
test
push
add
outsb
add
adc
or
push
mov
test
out
pop
push
scas
bnd
mov
adc
sti
in
test
cltd
into
sahf
int3
in
ja
jns
dec
ret
cltd
rcl
mov
jl
and
call
out
cli
adc
xor
push
lock
shl
into
sub
jp
and
mov
jo
jg
orl
mov
inc
shll
sub
jne
imul
test
mov
ds
push
sbb
aas
mov
nop
cmp
push
in
jge
sub
insb
loop
push
popf
push
mul
cmc
push
enter
ljmp
mov
xor
xchg
xchg
xchg
pop
lock
mov
push
movsb
mov
popf
jo
shll
test
adc
cmp
jo
xor
lcall
sahf
mov
stos
pop
outsb
ficomps
mov
ljmp
daa
ret
jno
inc
sahf
rorl
or
cli
push
mov
ret
ret
mov
xor
inc
enter
imul
wbinvd
sbb
mov
out
adc
pop
insl
je
xchg
std
xor
in
clc
lds
cmpsb
add
pop
cmpsl
dec
stos
outsl
aas
and
je
iret
mov
pop
lcall
popf
std
fmull
xor
mov
sub
in
add
in
push
imul
push
pop
pop
xchg
adc
xchg
lods
sub
add
scas
mov
cmpsb
scas
ja
or
jne
mov
insl
daa
imul
cmc
push
jmp
cltd
loope
sbb
sbb
loope
jg
xchg
les
mov
jae
cmp
test
sbb
or
clc
mov
aad
xor
int3
sbb
push
or
nop
adc
jmp
jbe
ds
daa
xchg
jg
inc
mulb
lock
fistpll
adc
push
mov
cmpb
pop
movl
xlat
cld
fnstsw
rdpmc
xor
adc
sub
add
mov
test
fidivrl
jmp
push
mov
mov
jp
sahf
dec
call
add
jno
xor
orl
push
int
rorl
int
add
js
push
push
and
add
lret
and
leave
imul
cmp
pop
pushf
jge
and
in
popa
insb
jns
cmpsb
out
jmp
and
ret
cmp
pop
ds
pop
xor
imul
out
sub
and
pop
movsl
inc
cmpsl
lea
jo
and
sahf
pop
bound
pop
inc
pop
ss
or
fs
test
daa
sbb
fcoml
xchg
pop
lret
popf
test
jle
je
inc
rcl
sub
rclb
push
pop
pop
rol
xchg
inc
push
push
sbb
js
add
pop
lret
xor
sub
pop
icebp
mov
scas
add
sub
out
jge
xorb
mov
sahf
inc
dec
lds
inc
xlat
adc
das
mov
push
shll
fs
push
xchg
pop
cmp
lock
loope
std
inc
add
jge
add
cwtl
in
mov
int
or
test
fwait
inc
and
into
loopne
or
push
and
je
lods
sub
mov
loopne
push
xchg
scas
icebp
iret
add
imul
jl
xlat
and
inc
sub
pop
and
pop
fidivrs
adc
mov
jmp
cmp
ja
xor
xlat
ds
loopne
and
jg
sub
dec
pop
nop
cmc
inc
cmp
das
mov
push
adc
and
ljmp
push
shlb
xchg
icebp
fdivrp
fwait
sub
mov
sbb
xchg
dec
lock
add
jecxz
test
repnz
pop
jne
cmp
or
cli
mov
idivl
test
pop
inc
or
notl
add
inc
loop
xchg
aam
adc
call
add
shlb
lret
add
outsb
in
mov
icebp
jbe
fwait
cli
sbb
rcrl
fstpl
adc
leave
push
mov
jb
and
js
je
xchg
fst
mov
push
push
sub
sbb
pusha
pop
pusha
aaa
add
push
js
jmp
cld
je
add
lock
pop
jle
or
test
out
lahf
mov
cwtl
lods
xlat
xor
xchg
in
psubw
xor
movsl
pushf
cltd
cwtl
dec
fstl
ret
jno
in
call
push
xchg
js
addl
cwtl
into
aam
mov
dec
and
mov
mov
mov
int3
dec
xchg
mov
jmp
sahf
js
imul
popf
loop
inc
inc
js
das
test
add
imul
aad
mov
jmp
imul
icebp
sub
sbb
push
insb
test
ss
ss
and
push
outsl
pop
outsl
fadds
jg
xor
dec
xor
adc
aam
imul
subb
add
mov
cmp
repnz
mov
xor
or
pusha
pop
cmp
lock
in
mov
ja
sbb
mov
or
xlat
adc
adc
mov
and
rcrb
test
test
jns
lea
inc
cmp
jne
add
stc
and
xor
sarb
lds
adc
pop
in
inc
cmp
xchg
daa
out
pop
in
js
inc
out
mov
mov
xchg
sub
ljmp
fistl
lods
xchg
dec
lret
std
push
mov
outsb
and
mov
je
aad
push
pop
jbe
mov
cmpsb
sbb
cld
js
jb
jne
icebp
fdivrp
std
mov
jne
xor
jmp
and
cs
cmp
cli
fsub
xor
xchg
dec
mov
push
movsl
jmp
inc
or
mov
push
es
mov
cwtl
inc
push
cltd
movsb
lea
fcmovbe
mov
push
mov
cmp
dec
pusha
cmp
push
xor
imulb
cmp
jle
cmc
icebp
je
dec
testl
jl
fildll
add
int
pop
and
mov
adc
ret
imul
dec
test
repnz
nop
jns
nop
lcall
and
mov
mov
or
loope
mov
sub
jmp
push
xchg
and
inc
pop
pop
jg
xor
sti
and
lods
divl
inc
cli
repnz
mov
clc
call
xor
into
outsl
push
sbb
icebp
xor
mov
push
push
pop
cmpsb
xchg
dec
mov
ret
test
popa
mov
xchg
sub
jbe
pop
jp
dec
adc
jle
xor
leave
fsubrs
pop
or
add
cmp
mov
xor
add
out
push
outsl
mov
and
das
cmpsb
push
sub
hlt
sub
out
aaa
add
add
in
inc
sti
mov
fstpl
clc
fs
add
sub
jp
xchg
adc
xchg
ret
xchg
inc
inc
jae
push
jl
in
fstpt
insl
popf
int
and
test
scas
adc
xor
lcall
jmp
les
ret
in
enter
xchg
push
sahf
xchg
cwtl
adc
inc
imul
and
aas
push
in
xchg
sahf
stc
pop
push
les
add
int3
jae
int3
repnz
in
mov
fincstp
movsl
int
push
mov
loope
or
ret
cmp
dec
data16
insl
aaa
inc
pop
and
xchg
jb
jo
mov
push
xchg
in
es
test
clc
cmp
pop
mov
pop
mov
int
jnp
adc
out
sbb
mov
dec
aaa
jbe
pop
xchg
or
outsl
test
popa
sub
ret
mov
mov
outsl
dec
ljmp
push
cmpsl
mov
in
jb
fists
push
or
ljmp
pop
movsl
out
gs
xchg
mov
test
mov
sub
test
out
mov
scas
pop
ret
into
and
push
jno
jae
cltd
stos
js
xchg
push
les
jecxz
std
stos
outsb
cld
xchg
mov
add
xor
stos
push
ja
pop
cli
adc
and
mov
cmp
out
ret
jge
cmp
ja
xchg
int3
dec
lcall
cmp
cmpsb
cmp
int
aam
shl
add
xchg
rcll
or
out
cmp
sahf
mov
pop
sahf
xor
pushf
mov
mov
xor
jmp
mov
mov
mov
add
push
pushf
pop
daa
and
xchg
ffree
sar
outsb
mov
adc
sbb
cmp
cld
outsb
icebp
sub
lods
mov
clc
mov
out
lcall
jge
dec
cmp
jp
addr16
orl
test
cmp
rorl
and
fsubrs
sbb
icebp
jo
mov
adc
xchg
je
je
mov
imul
daa
push
sahf
int
std
int
jo
jmp
mov
sbb
mov
jmp
fst
mov
mov
out
out
xchg
ja
lods
inc
lds
jnp
cmp
mov
cmp
push
push
dec
aas
or
and
int3
out
sbb
adc
mov
jmp
test
hlt
sti
jo
mov
mov
dec
mov
pop
int3
fsubl
aaa
add
inc
cli
push
mov
inc
xor
rcrb
cli
jae
insl
xor
xchg
data16
mov
push
pop
dec
sti
xor
push
mov
daa
add
lods
ljmp
frstor
xor
adc
mov
imull
mov
adc
pop
sub
pop
xchg
loop
add
pop
pusha
dec
in
pop
fdivs
add
lods
and
ret
and
xor
aas
adc
lret
xor
mov
mov
xchg
test
pop
and
arpl
aam
dec
push
insl
mov
xchg
stos
pop
jle
imul
jns
push
push
aaa
div
sub
ljmp
cmp
adc
ret
jge
sbb
or
movsl
jle
sub
les
mov
jnp
out
jg
sub
xchg
inc
sbb
imul
lret
xchg
mov
std
jge
cmp
cmc
xor
xchg
pop
enter
ds
fidivrl
jno
repz
ret
fdivrs
sub
pop
enter
pop
stos
loopne,pt
jo
imul
test
sub
data16
int3
mov
cmp
xchg
cltd
sub
stos
cmp
jle
jo,pt
call
xchg
jae
fistpl
stc
add
dec
in
jmp
and
push
sbb
and
jns
jge
xchg
scas
lock
push
stos
dec
jbe
shll
inc
cld
pushf
aas
arpl
fldl
xorb
jmp
dec
pop
dec
mov
lret
stos
shlb
ret
jle
xchg
mov
cmp
orb
call
jbe
mov
xor
jle
sub
ljmp
iret
call
ret
scas
xchg
pushf
popa
sbb
xor
cmp
mov
test
test
in
mov
push
cwtl
add
xlat
into
xchg
pop
repnz
das
fwait
cmpsl
jns
adc
enter
dec
lock
push
aad
fwait
test
push
push
push
and
mov
enter
or
vsubss
in
cmp
pop
and
mov
call
push
xchg
adc
push
push
sbb
lea
cmp
nop
rorb
mov
adc
ret
push
cwtl
and
mov
mov
xlat
inc
popf
add
call
fistl
stos
lds
imul
and
cmpsb
mov
int
and
rclb
jle
cltd
ds
lret
push
rol
or
rol
pop
int3
sub
pop
outsb
cmc
ret
mov
stc
inc
inc
cltd
enter
mov
daa
mov
xchg
xchg
sub
or
xchg
aam
lahf
scas
xor
sti
inc
push
scas
and
outsl
mov
jg
pushf
ja,pn
mov
enter
repnz
pushf
adc
jp
lret
cwtl
sbb
sahf
xorb
cld
inc
cmp
and
aas
mov
lds
mov
and
mulb
adc
iret
inc
std
push
mov
jmp
fimull
cmp
bound
inc
jns
cmpsl
in
outsl
inc
cmp
cmp
test
daa
je
add
aam
and
sub
shrl
sbb
mov
sbb
add
pop
mov
adc
loope
les
xor
fsts
dec
std
iret
push
sbb
and
xchg
lahf
add
sahf
negl
inc
push
or
xor
or
cwtl
iret
or
fstl
push
sub
es
adc
xchg
je
and
les
insl
push
sub
or
data16
test
xlat
rorl
jle
push
mov
jl
cmp
and
sbb
adc
cmp
cmpsb
cmp
mov
sub
push
mov
mov
in
loop
dec
xchg
mov
inc
pop
icebp
insl
cmp
lret
fdivs
or
dec
lret
in
push
or
xorl
push
mov
stos
jns
and
mov
pop
add
aam
dec
ljmp
inc
ret
cmp
fldt
mov
or
cmp
xor
inc
mov
fwait
movsl
aaa
in
mov
xchg
das
pop
push
sbb
out
lcall
cmp
addr16
mov
addr16
sbb
xlat
fwait
test
mov
push
andl
jge
mov
inc
mov
divb
sbb
aaa
mov
mov
pop
xorb
adc
iret
outsl
sbb
movsl
les
subb
cmp
mov
fsubrs
ljmp
sbb
pop
std
push
loop
not
lea
xchg
jmp
inc
sub
mov
aas
jo
sub
inc
cltd
pop
stos
std
lds
cltd
pop
sbb
or
mov
shll
inc
xor
out
pop
jle
pop
push
andb
add
xor
cmp
lea
stos
mov
sbb
and
ja
jns
push
cmp
jnp
fwait
jns
jmp
lods
add
pop
pop
imul
and
jge
and
and
dec
pop
aaa
das
int
add
dec
sti
shr
xchg
mov
mov
mov
pop
stc
int
in
enter
shrl
icebp
cmpsb
dec
pop
xor
xor
xchg
ds
xchg
jo
test
dec
mov
aaa
add
sbb
lods
aaa
popf
pop
sbb
dec
xchg
pusha
je
and
sbbb
push
fidivrl
mov
stos
stc
sar
inc
sbb
lds
jnp
add
in
testl
dec
jns
inc
mov
xlat
jo
cmp
pop
jge
mov
cmp
jecxz
inc
push
sub
inc
push
sbb
xchg
pop
xor
lcall
aaa
cmp
dec
rcrb
shll
lds
pop
and
xor
icebp
shlb
jg
mov
imul
mov
cmp
add
sbb
shl
adc
mov
dec
sub
sub
mov
fdivrs
fcmovbe
ja
hlt
icebp
enter
sub
xor
push
mov
mov
or
aam
int
or
cld
inc
pop
mov
add
cmpsl
stos
andl
sti
mov
mov
pop
adc
pop
or
mov
imul
jmp
testl
and
mov
push
jge
jp
adc
andb
fisubrs
mov
hlt
mov
divb
sub
or
sub
imul
outsb
addr16
repz
not
mov
cmp
loope
lret
imul
outsl
insl
imul
lods
cwtl
sbb
sbb
mov
adcb
cs
mov
add
mov
cmp
sub
xor
das
xchg
sbb
lret
jbe
or
push
popf
int3
mov
pop
stos
ret
pusha
xor
adc
pop
hlt
xchg
call
shrl
mov
mov
andb
jp
fwait
adc
insl
out
repz
bound
aad
jns,pt
shll
in
incb
jp
xchg
dec
sbb
mov
lods
and
add
jns
xchg
dec
rolb
dec
jp
sub
sti
sub
es
or
popf
daa
mov
and
inc
xchg
jns
cltd
mov
push
es
mov
mov
add
inc
ja
je
je
outsb
add
push
jo
mov
dec
filds
jmp
outsl
gs
sar
ja
mov
add
pop
pop
jae
cmpsl
cld
lcall
scas
add
movsb
inc
push
add
rcll
pop
outsb
out
jae
adc
shrl
push
fstl
jnp
dec
dec
outsl
in
addr16
hlt
mov
sub
adcb
sbb
lret
mov
xchg
sub
and
fisttps
jne
lods
mov
mov
mov
dec
mov
xchg
not
fnsave
cwtl
xor
mov
mov
xchg
lret
lret
test
jmp
rcll
in
aam
testl
inc
fimuls
stc
pop
and
or
inc
xlat
inc
js
or
sahf
xlat
cs
dec
or
jg
stos
and
in
pop
push
or
icebp
aas
push
sbb
pop
xchg
xor
mov
clc
stc
mov
pop
mov
aam
and
ret
insb
mov
adc
lcall
enter
jnp
xor
icebp
and
mov
jl
cmp
movb
mov
add
and
or
shrb
fildll
loopne
sbb
in
in
sub
jl
scas
les
or
loope
xor
fidivrs
pushf
jg
sarb
ss
adc
xor
dec
mov
mov
lods
inc
out
pop
mov
sbb
mov
inc
cli
and
repnz
fldlg2
xchg
iret
jecxz
dec
js
test
arpl
adc
xchg
lods
pop
negl
lods
xchg
sbb
sub
arpl
movsb
jbe
into
jl
fwait
jnp
xchg
and
nop
xor
mov
ret
jmp
cmp
fdivs
hlt
arpl
jecxz
popa
shrl
mov
add
dec
jae,pt
outsb
jne
xchg
pop
je
rcl
pushf
cmp
or
push
sub
js
mov
mov
sahf
push
test
test
int3
nop
les
aaa
sbb
iret
xchg
or
daa
inc
gs
je
test
inc
insl
jl
test
sub
enter
cmp
cmp
jmp
adc
test
pop
andb
inc
sub
lcall
mov
cwtl
imul
lahf
movsb
les
movsl
adc
push
je
adc
pop
and
xchg
jo
stos
inc
cmp
xchg
jle
inc
sarl
mov
cmpl
int
clc
lahf
sbbl
sbb
adc
sub
jmp
fneni(8087
fcmovbe
and
push
sbb
xor
jae
dec
aas
jb
or
xlat
mov
fldl
adc
push
xchg
xor
test
sub
repz
lods
push
xor
pop
sub
ja
ficomps
dec
ret
push
lea
jae
addr16
push
or
inc
or
cmp
arpl
pop
xchg
std
mov
std
fdivl
adc
adc
cmp
jmp
fcmove
mov
mov
pop
jg
dec
or
xchg
adc
fmull
mov
lret
inc
call
xchg
clc
sbb
mov
cmp
dec
fildll
mov
cmp
popa
mov
push
dec
and
xor
pop
fildll
movsl
or
sbb
mov
lret
setne
mov
jo
xor
xchg
or
xor
or
arpl
mov
xor
es
testl
hlt
adc
repnz
outsb
fidivrl
ret
sar
add
jl
push
xchg
inc
pop
idiv
sbb
sti
adc
popf
sbb
and
xchg
inc
mov
cmp
fstl
xchg
test
xchg
xor
jo
stos
adc
add
mov
es
incb
adc
nop
ret
sti
rclb
and
push
or
lahf
into
xchg
std
mov
xor
pusha
mov
cmp
cmpsb
add
mov
mov
push
cmp
loopne
clc
jmp
or
sub
sub
inc
dec
adc
pop
fimuls
iret
push
sbb
hlt
outsl
sub
push
lea
cwtl
int
push
decl
inc
mov
stos
xchg
lock
lret
push
jp
xor
inc
mov
ljmp
aad
and
nop
div
daa
xchg
shll
fstl
test
invd
mov
sub
mov
add
aad
dec
cmc
xchg
adc
mov
xor
icebp
out
add
pop
clc
sti
jp
out
clc
sub
push
add
jmp
divb
movsl
jns
filds
test
jp
or
arpl
popf
sahf
and
or
adc
enter
inc
xchg
pop
mov
lret
xchg
dec
test
movsl
cmp
cmp
std
fnstenv
mov
aam
insb
inc
sarb
dec
or
icebp
cli
shlb
pop
sti
es
adc
mov
push
fwait
aaa
ss
push
mov
pop
dec
out
mov
inc
sbb
mov
lods
cmp
sarl
scas
sbb
ret
or
jns
push
sahf
outsb
sub
pop
push
cmp
lcall
add
mov
ljmp
sbb
mov
mov
dec
cmp
inc
lcall
mov
add
ja
adc
push
cmp
sahf
jnp
adc
adc
adc
call
icebp
ret
jmp
or
mov
jmp
pop
jmp
sub
sub
bound
popa
mov
push
mov
and
sub
ljmp
mov
or
xchg
sub
cmc
mov
clc
cmp
sbb
daa
scas
sub
test
xor
out
mov
sub
iret
sub
jg
jecxz
push
adc
push
ret
push
mov
in
xchg
add
jne
pop
ljmp
pop
nop
fmull
xlat
xor
rorb
fcoms
dec
in
aas
add
mov
xchg
and
dec
out
rcl
aam
es
jb
sti
ds
push
lea
loop
movsl
xchg
pop
test
lret
lret
cmpsl
xor
cmpsl
adc
cmc
out
clc
push
adc
xchg
xor
jbe
jbe
stos
ret
stc
and
sub
loop
pusha
push
iret
xlat
clc
fsubr
sbb
cmp
daa
pop
mov
mov
cmp
js
push
mov
inc
sbbl
test
inc
add
scas
and
lds
dec
push
filds
andl
in
cmpb
cltd
dec
push
into
pushf
cmp
sbb
fsubrs
xchg
xor
lods
pop
aam
inc
decb
movsl
je
aad
mov
and
push
mov
sub
add
dec
test
lahf
bound
inc
jns
lock
xchg
pop
push
in
sarl
in
pop
push
xor
jo
ret
sub
and
sbb
adc
in
and
xchg
lahf
sbb
cmp
add
jbe
stc
aam
jnp
icebp
adc
and
repnz
or
js
cmc
xchg
inc
mov
outsl
out
fst
mov
movsb
bsr
in
dec
mov
adc
xchg
fdivl
adc
xor
xchg
roll
cmc
adc
dec
in
xchg
xchg
movsb
out
cmc
mov
jmp
add
ljmp
mov
daa
push
jp
mov
mov
add
jbe
mov
lods
rcll
add
popw
mov
lret
cmp
out
iret
add
push
mov
mov
mov
mov
fcom
fsubrl
rorl
mov
test
pop
xor
loop
adc
out
pop
xchg
pop
and
jbe
cmpsl
scas
nop
popa
mov
test
js
add
js
xchg
gs
dec
cltd
push
sarl
and
and
mov
hlt
int
sbb
push
mov
sub
out
sbb
add
xchg
sub
test
jb
sbb
hlt
add
data16
push
xchg
add
add
push
repnz
and
or
fwait
imul
add
xchg
push
cli
popf
int
pusha
fistps
or
pop
ficomps
test
add
push
push
adc
pop
mov
push
mov
push
add
pop
imul
test
add
xlat
or
xchg
es
or
fwait
repz
mov
mov
mov
rcrb
jbe
lock
and
outsl
sahf
xlat
popf
out
jl
inc
imul
or
test
shll
dec
cltd
and
fadds
or
addr16
leave
fldt
mov
mov
bound
sbb
xor
repz
ja
inc
mov
addr16
rcll
aam
mov
or
cmc
sub
xor
rcrl
cmpsb
cmpsl
pop
mov
sti
add
jnp
sbb
inc
mov
sub
daa
sahf
loop
push
inc
jg
ror
cmpsl
jle
sub
orl
add
daa
cwtl
notb
stos
xchg
cltd
fcmovbe
jb
test
xor
aam
cmpsl
sbb
lods
xchg
aad
out
ja
fistpl
push
fdivrl
sarb
inc
or
rcl
xchg
jp
vphsubdq
inc
lock
xor
jne
shll
inc
jbe
cmc
insl
pop
insl
or
loopne
add
dec
jne
jg
jae
out
insl
adc
mov
scas
mov
adc
push
minps
jno
fdivr
imul
cmp
imul
ljmp
sub
sub
push
pop
pop
lcall
arpl
sarb
pop
pusha
add
loopne
mov
call
mov
and
and
enter
shll
xlat
sub
leave
nop
adc
scas
mov
inc
inc
push
mov
adc
lcall
fdivp
inc
cmp
inc
imul
icebp
ljmp
inc
lds
jge
js
pop
mov
into
les
lods
sub
push
and
dec
fidivrs
in
int
cmp
xchg
je
fcompl
and
jmp
call
ret
dec
mov
movsl
fs
push
mov
push
fs
nop
fdivp
jle
or
sahf
sbb
pop
mov
loope
stos
les
mov
in
mov
inc
cmp
xchg
and
pop
shl
fadd
or
outsl
scas
out
aas
imul
xlat
dec
add
icebp
call
lcall
cmp
xor
loop
mov
pop
push
loop
lret
sub
data16
ljmp
into
mov
mov
inc
and
pop
cmp
xchg
out
cmpsb
ret
clc
dec
adc
cmpsl
or
loopne
inc
mov
sub
inc
push
ss
adc
push
mov
jnp
jbe
rolb
push
mov
pusha
rolb
sbb
pavgw
cli
sahf
fnstcw
inc
inc
js
mov
pop
sahf
mov
popf
cmp
push
clc
mov
cmp
and
ja
clc
lahf
testl
vrangepd
xor
xchg
in
push
pop
inc
dec
sti
push
and
outsl
ret
xor
xchg
hlt
outsb
insl
sub
popa
je
pop
dec
jl
push
leave
push
and
popf
pop
cmp
pop
cld
rolb
and
mov
and
jl
pop
clc
push
scas
push
cmp
outsb
inc
add
mov
mov
imul
and
xchg
testl
loop
pop
add
dec
jle
enter
adc
out
fnstsw
loop
and
fisttps
sub
andb
add
icebp
adcl
pop
daa
mov
es
jp
inc
movsl
cmp
jp
ljmp
movb
push
mov
loopne
in
in
cmpl
aas
inc
fnstcw
enter
jmp
jne
pop
adc
mov
call
sub
or
cltd
push
push
lock
out
stos
scas
add
lret
jo
mov
fcmovbe
daa
push
inc
leave
es
fildll
fistpll
rcrb
inc
push
or
push
jae
scas
icebp
mov
mov
cmp
xor
jb
xchg
mov
sti
xlat
repz
hlt
xchg
xor
orb
call
movsb
jne
pusha
ss
xchg
lock
or
jl
xchg
ret
aad
mov
sti
std
push
mov
test
hlt
push
dec
mov
add
clc
fwait
or
jle
pop
xchg
adc
pop
mov
and
sti
and
test
pop
push
lret
imul
das
lds
adc
sub
and
jmp
inc
push
sbb
ja
xor
push
aaa
or
cmp
insb
and
std
mov
jmp
in
xlat
lret
adc
xchg
xchg
cmp
adc
jb
lock
push
les
jle
or
mov
xor
sbbb
stos
std
xchg
jnp
sbb
ret
sub
rcl
shld
xor
and
mov
out
inc
mov
repz
inc
cmpsl
mov
add
add
mov
dec
mov
push
xor
jae
push
pushf
push
dec
xor
mov
or
xchg
xor
jno
mov
inc
loop
mov
lods
enter
pop
mov
dec
mov
or
and
jl
lcall
lahf
xor
dec
push
lcall
call
inc
movsl
loop
inc
outsb
in
mov
test
xchg
jmp
add
pop
mov
lods
gs
je
mov
test
pop
mov
call
daa
cmp
leave
popa
inc
sbb
jmp
or
int
pushl
hlt
in
ss
fildl
inc
or
das
scas
xor
fs
adc
cmpsb
cmp
xchg
nop
sbb
sbb
repnz
mov
scas
sahf
xchg
insb
popf
js
aad
or
jg
push
outsb
xchg
push
push
dec
imul
jb
xchg
cmpsb
add
cmp
aas
mov
push
int3
rorl
sub
hlt
aaa
dec
add
push
mov
dec
and
movsb
mov
cmpsb
jbe
ja
outsl
push
int
sub
iret
push
movsb
aas
cmpsl
fs
outsl
xchg
shr
mov
std
cmc
jo
mov
out
xorl
stos
aas
fs
sub
aam
mov
cmpsb
imul
ss
jg
xor
pop
xchg
imul
out
aad
xor
fisttps
sti
hlt
dec
int
daa
xchg
repz
xor
mov
sub
push
dec
in
mov
into
fst
test
add
push
fdivl
or
push
cmp
and
push
xchg
frstor
cs
notb
loopne
cmp
adc
sti
mov
out
dec
mov
lods
daa
sub
add
or
sbb
mov
inc
jmp
mov
stc
push
xlat
dec
push
jmp
pop
inc
cwtl
adc
ss
mov
lods
je
cmp
ss
push
call
mov
dec
cmpsb
mov
iret
inc
jnp
pop
xor
enter
scas
push
dec
add
sub
mov
cmp
mov
movsl
lret
leave
lods
shrb
sub
mov
xor
xchg
fldenv
pextrw
xchg
add
rep
jmp
push
roll
ss
xor
or
repz
mov
add
lock
mov
push
lods
lea
loopne
sbb
pop
pminsw
sbb
dec
jecxz
fbld
aas
xchg
jg
xor
stc
fnstenv
pop
jnp
jae
pop
es
jnp
aaa
and
or
jge
and
in
mov
sub
insb
ret
andb
popa
pop
jmp
or
push
pop
adc
mov
scas
fwait
sahf
bnd
andl
xor
cltd
mov
dec
mov
mov
mov
andl
cmp
sbb
mov
clc
sahf
and
outsb
aam
or
dec
or
pop
or
jmp
xor
outsl
adc
aas
push
pusha
push
test
cmp
xor
sbb
push
jecxz
pusha
mov
push
mov
iret
jns
pop
pop
test
cs
fists
xchg
mov
rorb
inc
pop
out
jae
adc
sub
popf
sub
dec
cmpsb
int3
cmp
cmpsl
flds
or
or
vandnps
xchg
or
arpl
push
cli
mov
insl
aaa
mov
xor
dec
inc
leave
dec
cmc
inc
xchg
pop
loop
shll
shr
adc
scas
lret
movsb
mov
inc
loope
mov
dec
adc
push
jg
scas
fidivl
std
or
xor
sub
pop
sub
inc
ss
ja
pop
out
mov
mov
and
gs
sub
jmp
mov
xchg
notl
lea
xlat
aas
arpl
jae
mov
xchg
clc
into
push
jbe
and
cltd
jmp
leave
fdivl
subl
pop
add
jno
mov
mov
xor
sbb
insl
pushf
fnsave
or
pop
jbe
and
cmp
dec
addr16
jbe
mov
scas
int3
pop
adc
sti
xchg
cmp
fwait
jge
enter
inc
ret
mov
sbb
jo
jo
bound
cmpsl
in
jo
inc
call
out
mov
notb
fs
cli
call
xor
jg
lahf
rorb
sbbl
enter
aas
push
and
mov
aaa
test
fildl
add
clc
cmp
mov
push
fimuls
dec
mov
stos
mov
sahf
into
ret
in
sub
sbb
in
js
in
cmpsl
pop
cwtl
cmpl
mov
sarb
mov
sub
jno
mov
push
mov
jo
aas
cmpsb
pop
xchg
ret
dec
xchg
and
xchg
pop
mov
and
push
movsl
andl
aas
dec
data16
lods
test
das
mov
movsb
inc
movsb
popf
jae
lock
pusha
stc
enter
iret
inc
cmp
mov
out
int
lcall
jp
imul
cmp
jge
ds
popf
rcrl
in
add
adc
sbb
mov
lret
clc
xchg
xchg
movsl
xchg
mov
test
je
push
ljmp
pop
jmp
mov
nop
sbb
in
sbb
push
xchg
sub
lret
popf
ja
movsb
pushf
mov
xchg
adc
add
dec
jne
cmp
mov
pop
xor
xor
bound
xchg
pop
pushf
push
lods
add
jp
xor
dec
xor
or
push
mov
push
xor
mov
push
pop
das
shr
cmp
sbb
sbb
jns
divb
jae
js
sub
shlb
daa
dec
mov
fsubs
test
cmp
in
mov
push
and
sbb
adc
adc
mov
inc
movsb
sub
ljmp
rol
push
mov
jge
out
inc
dec
jbe
push
pop
mov
mov
leave
roll
mov
icebp
fisubs
inc
enter
cmp
test
xchg
lcall
sub
xor
shlb
lods
lock
loopne
in
pop
out
mov
pop
repz
aaa
lcall
mov
mov
stos
orb
insl
mov
push
jp
pop
xor
nop
test
mov
ja
scas
fsub
cmp
out
js
movsb
pop
xchg
loope
sbbb
inc
sub
rcrl
or
out
pop
sub
add
js
outsb
movsl
aad
or
nop
cmp
push
xor
std
xor
sbb
adc
push
pop
outsb
cmp
lret
fisubrl
test
or
xchg
mov
pop
cmp
aam
dec
xchg
mov
push
jle
les
divl
in
dec
jp
mov
jb
xchg
fwait
xchg
fwait
mov
or
lret
sbb
inc
or
xchg
jecxz
jns
fnsetpm(287
push
mov
xor
sbb
cmpb
push
mov
push
jb
movsb
or
adc
ss
xor
insb
push
fnstenv
fisubl
aas
sub
cmpsb
xchg
and
sti
loopew
push
inc
int
jle
and
hlt
lock
test
push
mov
fisttps
jle
enter
rol
push
mov
jbe
and
push
push
loope
inc
pusha
popa
jbe
icebp
data16
mov
inc
ss
lret
push
lods
adc
add
xchg
push
and
cmp
outsl
or
inc
leave
cltd
int3
fmull
arpl
cmp
dec
pop
inc
dec
jns
test
jecxz
insb
mov
pop
dec
je
pop
xchg
roll
ficoms
mov
adc
push
jno
jge
add
jp
dec
jne
sbb
inc
add
call
and
icebp
xchg
in
aaa
das
inc
xchg
outsl
and
pusha
mov
mov
inc
cmpb
fistpll
sbb
test
into
ss
inc
dec
push
call
cld
and
in
add
mov
xchg
push
into
push
mov
and
fsubrs
cli
pcmpeqw
popa
mov
daa
mov
sub
sbb
js
push
add
xor
xor
push
and
outsb
sar
movsl
mov
pop
lret
pop
fwait
sbbl
clc
cmc
dec
mov
jp
or
xor
sub
pop
pop
nop
xor
xchg
je
fsubrl
das
xchg
pop
jae
fidivs
divb
insl
jbe
and
xchg
idivl
aad
mov
std
cmp
xchg
mov
mov
dec
lcall
mov
stos
or
xor
sbb
lock
sbb
insl
test
daa
outsl
pop
mov
call
jno
roll
outsl
xchg
mov
mov
je
movsl
xchg
and
jmp
rorb
out
dec
rorb
push
adc
ficoml
or
repnz
mov
dec
lea
add
icebp
pusha
xor
mov
shrb
xor
fs
mov
ds
mov
pusha
jno
xchg
subb
cmpsb
das
lahf
in
jnp
enter
sub
icebp
leave
mov
adc
xchg
push
out
out
adc
aam
adc
cmp
sub
jb
jno
xlat
xchg
movsl
push
jge
or
or
xlat
adc
jno
orl
add
das
sbb
aaa
mov
outsb
cmpsb
mov
dec
xchg
movsl
mov
jns
std
and
cmp
mov
sub
mov
pop
aam
adc
or
sub
sahf
movsl
stos
inc
or
adc
popa
fmull
xor
mov
popa
push
mov
push
enter
jg
and
dec
adc
aam
jmp
cmpsl
outsl
cmpsl
pop
ret
add
inc
sub
mov
pushf
pushf
sbbl
adc
jg
mov
push
pushf
sub
xor
and
sub
dec
and
jno
gs
shl
sub
xor
fs
xor
and
push
js
sbb
aam
jl
ret
dec
out
adc
shlb
mov
shlb
mov
mov
pop
pop
jmp
xchg
insb
in
ljmp
cmp
xchg
mov
jno
cs
sub
push
xor
ret
add
or
stc
subb
push
frstor
adc
adc
sub
mov
fadd
jl
pop
mov
pusha
push
adc
mov
popf
scas
daa
fiadds
sbb
dec
jns
les
sti
pushf
pushf
jecxz
sub
das
pushf
sahf
xchg
adc
idivb
cmp
xor
cli
or
mov
mov
lahf
clc
pop
sub
inc
push
xor
outsb
add
jb
test
sub
push
adc
sub
xor
dec
inc
in
movsb
push
and
sti
bound
or
dec
rcll
leave
nop
cmp
cli
in
cmp
aas
inc
add
dec
pop
repnz
pop
dec
push
icebp
dec
inc
int3
or
jnp
out
popa
jmp
adc
push
inc
add
lods
test
mov
rcl
aam
xchg
in
cmp
push
sub
mov
ja
inc
popf
nop
jl
das
mov
push
out
jmp
cmpsb
mov
mov
inc
std
mov
out
imul
imul
ds
sbb
movsb
cmp
ret
nop
pop
sar
pop
cwtl
xor
push
push
loopne
movsl
outsb
dec
test
popa
sub
xor
ret
lods
push
aad
flds
daa
and
and
lock
nop
into
mov
push
mov
xchg
imul
xor
or
pop
xor
ret
outsb
and
aas
xor
xor
mov
mov
popf
subl
xor
adc
int3
cmpsb
xchg
inc
dec
int
push
inc
jnp
sbb
cmp
mov
inc
pop
mov
lock
ret
icebp
arpl
pushf
aas
jle
fwait
mov
inc
push
movsb
rolb
dec
cltd
call
dec
jecxz
mov
xchg
sahf
xor
in
push
mov
scas
pop
mov
jg
pop
sbb
es
test
or
sti
pop
shll
xlat
inc
mov
jae
outsl
fisttps
in
xchg
jnp
cld
loopne
sbb
cmc
lret
xor
cmp
mov
fwait
mov
push
dec
ret
mov
xor
mov
fwait
stc
loop
int
xchg
mov
and
jle
fstpl
icebp
mov
pop
out
dec
rcll
xchg
in
jae
sahf
in
inc
pusha
mov
xchg
sahf
dec
stos
or
mov
fdivp
push
pop
lcall
lret
or
cmpsl
out
inc
psrad
inc
test
pusha
shr
outsb
xchg
mov
inc
jne
ss
je
test
int3
jo
adc
fs
pop
sbb
movsb
push
test
xor
adc
or
mov
shll
add
lret
imul
flds
fisttpll
lea
sub
pop
push
dec
shr
cwtd
mov
and
setle
sbb
nop
pop
js
nop
xor
stc
in
repnz
stos
and
sbb
xor
push
pop
mov
sub
pop
inc
sub
jmp
aas
orb
insl
insl
iret
mov
sub
les
push
enter
jl
int
sbb
ljmp
fs
insb
cmc
xchg
sub
cmp
addr16
xor
jl
or
xor
shlb
jnp
inc
loope
hlt
push
xor
outsl
cmc
fwait
mov
cmpsb
push
mov
call
lock
xor
dec
and
dec
sub
mov
out
dec
fimull
clc
addr16
scas
lret
jbe
mov
jne
lret
shrl
int
mov
pop
popf
pop
subl
mov
shll
and
lock
push
dec
orl
mov
loope
cld
or
fstps
push
cmp
lahf
iret
fwait
inc
push
mov
inc
rolb
fldcw
inc
hlt
fyl2xp1
mov
mov
push
and
sbb
fiadds
fisubrs
xchg
repnz
or
adc
jge
faddl
outsb
ja
and
add
inc
mov
out
test
lods
das
mov
cmp
add
daa
cmpsb
mov
sti
inc
pop
shr
bnd
arpl
popf
aad
adc
enter
out
pop
out
mov
mov
outsl
sbb
dec
jmp
fwait
push
sub
xchg
cmp
adc
and
insb
adc
dec
xchg
cs
icebp
sti
daa
sbb
dec
sbb
sub
fdivrl
inc
dec
call
mov
lods
and
std
pop
rorb
or
mov
call
xor
rclb
pop
lret
je
call
or
lds
repnz
or
test
icebp
stos
mov
sarl
push
outsb
aam
jg
cmc
sbb
pop
pop
test
popf
mov
sar
ja
cwtl
das
ret
lea
loop
sub
mov
aam
adc
pop
or
mov
lret
ffreep
lds
les
mov
ss
pop
cs
ja
lcall
xor
mov
cltd
pushf
mov
dec
out
bound
pop
sarl
mov
decb
push
pop
ja
adc
dec
into
in
inc
jp
ljmp
push
jge
xchg
jl
jo
adc
jo
and
sbb
ficoml
mov
mov
fistl
into
daa
push
jmp
sahf
mov
cwtl
inc
divl
xchg
movsb
add
int3
or
inc
push
jb
je
xchg
cmp
mov
aad
jne
std
out
cmpsb
lods
mov
cmp
add
aad
aam
movsb
or
adc
scas
dec
xchg
or
les
aas
jb
inc
fnsave
jmp
push
jge
inc
fistl
xchg
adc
mov
cltd
pop
jno
lahf
cld
push
ret
and
mov
xor
mov
loop
scas
cmp
ja
xchg
or
xor
xchg
fwait
xor
sub
cltd
xor
inc
add
fdivp
xchg
sub
xor
inc
push
aam
push
fcoml
shl
mov
jbe
inc
mov
bound
dec
iret
pop
lock
pop
pusha
loope
pop
in
cmp
or
lods
mov
mov
jo
lods
inc
in
out
stos
divb
and
test
scas
push
xchg
int3
shrl
in
test
xor
inc
ja
test
mov
inc
jno
lret
xchg
daa
negb
xchg
xchg
inc
cmp
ret
les
xor
cld
xor
popa
inc
cmp
jo
jo,pn
adcl
loop
call
ficompl
ret
arpl
inc
dec
stc
movl
and
and
cld
fists
sbb
jecxz
xchg
add
test
mov
sub
xchg
cld
ljmp
ljmp
and
fistl
or
adc
insb
jle
mulb
add
xchg
mov
add
sbb
cmp
sbb
hlt
aad
clc
std
push
dec
aas
fadd
jle
xor
cld
xor
inc
pop
out
pop
cmp
data16
jecxz
xlat
icebp
int
add
fucomip
xlat
push
outsb
and
orb
insl
sti
dec
cli
mov
add
fsubl
arpl
pop
aam
cmpsl
out
dec
sarb
sub
rcrb
enter
jl
xchg
addr16
push
lahf
adc
jns
jecxz
dec
div
add
pop
hlt
add
aad
std
mov
imul
mov
mov
mov
push
sub
mov
aas
push
xchg
pop
dec
cltd
imul
inc
fimuls
sub
and
testl
sbb
pop
add
xchg
mov
rep
roll
xor
shll
and
movsb
or
fists
iret
lds
lds
jg
shr
pop
jle
addr16
outsl
int
dec
cmpsl
or
inc
push
inc
mov
jno
cmpsb
and
into
nop
loope
jle
and
fwait
icebp
jecxz
cmp
jl
fisttpll
jg
cwtl
adcl
fbld
das
and
js
ds
int3
jmp
nop
push
cmp
mov
dec
out
add
stos
lods
or
lret
loop
adc
test
stos
js
xchg
jmp
add
inc
lret
fsubl
mov
sbb
es
or
rolb
push
mov
xlat
pop
ret
fstps
xchg
jae
push
mov
inc
outsb
loop
icebp
pop
ss
shll
jno
dec
popf
cmp
out
sub
adc
mov
mov
inc
aad
push
pushf
dec
add
daa
dec
mov
dec
popa
and
pop
mulb
jne
cmp
cmpsb
xor
mov
cld
add
sbb
cmpsl
push
adc
out
xchg
outsb
sbb
sti
jo
out
out
lock
enter
call
jge
int
xor
aaa
int
rcrb
cmp
rol
jno
xchg
cld
sub
mov
mov
fucomp
push
idivl
lcall
xor
popf
xchg
lahf
mov
cwtl
fwait
mov
fnstenv
fdivrl
xchg
or
cli
cmp
sahf
push
cltd
in
in
add
mov
inc
add
mov
mov
cmc
pushf
je
leave
hlt
std
mov
sub
cltd
or
xor
pop
outsl
push
stc
pop
and
lods
xchg
ljmp
mov
repnz
aad
aas
fidivrs
dec
push
sub
leave
xlat
les
clc
imul
inc
mov
outsl
cmp
stos
cltd
inc
pop
inc
aad
sbb
hlt
out
and
adc
xchg
out
ret
int
in
cmc
xchg
mov
pop
pop
mov
mov
aaa
incb
aam
pop
inc
jae
lea
pop
sub
xor
adc
jo
and
pop
out
mov
idivb
mov
into
out
xchg
call
adc
aad
pop
stc
push
repz
movsl
push
fnstcw
or
fxch
pop
and
mov
mov
sbb
loopne
and
aas
outsl
xor
lret
ja
inc
imul
cltd
pop
mov
ret
clc
js
in
xchg
push
roll
xchg
dec
adc
push
cltd
fsts
in
mov
mov
jge
cmpsb
mov
int
scas
sub
stc
popa
cltd
shl
jp
shr
fcoml
pop
mulb
xor
test
push
add
inc
testb
mov
sub
les
das
cmpsb
aad
inc
imul
mov
shr
test
cltd
mov
repz
rolb
xor
cmp
pop
mov
dec
inc
xchg
out
xor
push
xchg
pop
ror
sub
and
adc
clc
add
jmp
cmp
dec
add
and
push
fwait
jmp
jae
movl
ret
or
cmp
push
push
lods
mov
aaa
xchg
sbb
pop
mov
sub
leave
daa
add
rorl
cld
xor
es
shl
sub
scas
gs
aam
mov
cmp
xchg
aam
ret
ja
add
iret
mov
lret
in
mov
cmpsl
push
outsl
jmp
lcall
adc
adc
cmc
xchg
add
mov
out
leave
dec
in
lahf
xchg
inc
ss
xchg
mov
insl
xchg
or
cmp
cmp
inc
lock
inc
jl
sub
inc
loop,pt
push
ret
mov
fwait
ret
xchg
repz
sub
pop
in
das
movsb
aam
sub
inc
dec
cmp
ds
push
mov
shrb
or
test
and
or
pop
mov
mov
gs
add
into
pop
inc
xchg
lcall
cmp
stos
iret
sbb
mov
pop
movsl
test
cmc
jo
lcall
xlat
sti
dec
insl
jae
pop
aaa
cmp
bound
rcll
push
movsb
stc
sarl
xlat
xor
lods
sub
dec
daa
mov
mov
xor
mov
pextrw
jg
xlat
jmp
insb
mov
jg
test
popa
push
xor
fcmove
cmp
xlat
push
gs
jmp
sub
cmp
jp
pop
sarl
sbb
js
mov
ret
test
aaa
or
lds
jb
ljmp
loope
push
ret
pop
shrb
je
in
mov
or
or
adc
fwait
inc
ds
in
adcl
push
adc
push
jge
fwait
lret
hlt
mov
aam
addb
fwait
arpl
mov
sub
push
shlb
fldenv
clc
pop
mov
sbb
mov
movsl
pushf
clc
sbb
mov
imul
mov
sub
ja
mull
pop
pop
mov
imul
lahf
daa
push
xor
pop
push
push
push
lret
pop
mov
loopne
and
xor
les
outsb
test
inc
mov
fisttps
cmp
inc
or
inc
out
push
ds
cwtl
ret
fmulp
mov
pop
cmpsb
insb
test
movsb
fimuls
adc
sbbb
dec
xchg
scas
into
xchg
mov
mov
sbb
xor
fstpt
psllq
and
in
mov
mov
cmp
jns
mov
std
xchg
push
inc
adc
je
sub
in
ljmp
dec
jbe
jo
push
cltd
popa
into
out
scas
aam
mov
dec
rcr
push
enter
pop
cmp
jecxz
adcl
cmp
inc
sahf
cmpsb
je
or
test
and
inc
pop
adc
ss
lahf
pop
mov
pop
lret
ret
scas
jae
mov
xor
lea
push
cwtl
xchg
jmp
mov
xorl
cmp
xor
insb
sbb
in
mov
inc
movsb
fldcw
cmp
or
pop
jbe
fs
ja
inc
test
fidivrs
movsl
lds
aas
push
ss
cmc
cmp
mulb
inc
sbb
insb
sub
pop
das
rcrb
xor
fisttpll
inc
jl
loop
sbb
sbb
incb
out
adc
dec
mov
xchg
mov
stos
add
lods
sub
jnp
cwtl
mov
movsl
cmp
jae
and
inc
fwait
enter
dec
cmp
dec
pushf
popf
insl
pop
sahf
mov
and
cmpsb
out
lods
add
in
ds
mov
jmp
call
adc
adc
js
es
sbb
and
cli
mov
loope
mov
out
adc
dec
or
and
scas
and
sub
pop
and
lret
pop
adcl
lcall
adc
cmp
flds
andb
test
dec
inc
sub
call
jns
jl
xchg
fistps
in
jne
mov
repnz
inc
add
adc
xchg
lret
imul
clc
pop
add
inc
mov
insl
jmp
arpl
lret
xchg
or
gs
cli
data16
into
inc
inc
ljmp
add
je
jo
gs
gs
inc
test
mov
mov
xorl
mov
and
sbb
dec
push
pop
in
rclb
sti
pop
xchg
sbb
xchg
adcb
stos
or
test
fld
fcoms
mov
js
xchg
insb
dec
aas
mov
mov
dec
inc
nop
jge
out
lcall
in
rolb
ss
pop
inc
je
popl
mov
iret
lret
stos
inc
cmpsl
ror
cmp
pop
sub
gs
pop
shlb
aad
stos
rorl
icebp
adc
int3
data16
cmp
aaa
mov
cwtl
lret
sub
daa
jg
jg
push
xor
imul
imul
adc
shrl
xlat
dec
dec
xchg
inc
sbb
mov
out
outsb
jnp
lock
rol
arpl
mov
xor
cmp
dec
dec
add
cli
scas
outsl
sub
xchg
jle
daa
xor
add
imul
imul
mov
mov
aaa
leave
xchg
movsl
dec
xchg
jecxz
test
jo
stos
pop
push
leave
std
cmc
push
outsb
out
sub
add
repz
jecxz
mov
cmp
iret
in
scas
repnz
xor
repz
push
fs
pop
mov
pop
cmp
push
stc
lahf
and
arpl
out
sbb
or
rorl
loope
mov
push
cmp
pminsw
mov
mov
mov
orl
out
xlat
paddw
mov
mov
adc
ds
pop
mov
lcall
push
test
jb
mov
enter
lds
dec
subl
pop
or
lea
and
pop
push
add
add
or
out
xor
mov
sub
cltd
xchg
adc
adc
and
adc
xchg
push
cmp
and
lock
inc
xchg
cmpsb
nop
cmp
sbb
movsl
aam
outsb
flds
lods
push
and
inc
std
xchg
mov
xchg
enter
ja
cltd
outsl
fldcw
test
push
jbe
call
in
jb
adc
fwait
lods
es
lret
popf
pop
insb
fisttpll
mov
imulb
imul
out
shlb
mov
movsb
xchg
jno
cmpsl
jp
aas
cmp
insb
loopne
add
lds
aas
in
insb
cwtd
pop
mov
pop
dec
enter
fcoml
and
ret
lahf
ret
xor
sub
dec
cltd
fndisi(8087
pop
jno
lods
dec
adc
push
push
jmp
addb
leave
in
mov
jge
imul
stos
das
cld
pop
xchg
not
das
pop
shrb
cld
lds
fs
or
adc
test
xor
fsubs
in
sub
xor
jo,pn
add
cmpsl
and
jge
cmp
sahf
push
pop
lods
and
jp
and
loope
xor
jecxz
gs
cli
or
push
sarl
xor
jnp
mov
jg
and
lcall
push
mov
rcrb
mov
rorl
jge
adc
addr16
std
pop
push
sbb
andb
lret
dec
push
xor
or
and
out
cltd
sti
out
das
push
xor
cmp
and
inc
xor
pop
js
mov
shrb
out
int
in
imul
jns
sbb
xchg
mov
sub
daa
leave
inc
imul
sub
cmp
sub
mov
sarl
pop
pushf
add
ss
or
mull
lods
cld
inc
xor
pop
out
mov
xchg
pop
push
mov
repz
mov
mov
cltd
mov
xor
mov
mov
xor
into
and
and
jle
out
mov
pop
inc
mov
and
pop
fidivrl
cwtl
lods
adc
mov
pusha
push
xchg
sub
mov
mov
jbe
cmp
or
push
mov
test
pop
push
and
sti
je
sbb
and
nop
mov
xchg
mov
push
dec
mov
jge
sub
jge
pop
cmp
inc
pop
fcom
insb
push
sbb
je
and
es
adc
test
mov
add
mov
cmp
idivb
imul
xchg
sub
scas
jg
out
jo
dec
jmp
xchg
test
sarl
fisubs
mov
movsl
test
and
movsb
cmpb
dec
pop
mov
enter
ljmp
je
popl
das
notl
jl
call
outsl
dec
pop
lock
mov
pushf
jb
jae
inc
inc
dec
adc
sbb
jne
icebp
loop
sub
lahf
nop
adc
ja
rcrb
mov
cli
cld
lods
push
cmp
in
jecxz
pop
sbb
xor
cmp
fstpt
in
divb
std
pop
or
orl
aam
push
cld
mov
dec
xchg
jno
repnz
lods
mov
or
icebp
adc
push
xor
cmp
ljmp
and
icebp
xchg
push
cmp
ljmp
in
mov
mov
jecxz
adc
jp
insl
lods
in
or
push
cld
dec
push
inc
aas
sarb
shlb
icebp
insl
xor
in
push
in
idiv
dec
sub
cmp
lahf
repnz
xlat
mov
leave
xor
test
sub
fwait
pop
aad
and
mov
adc
or
mull
jae
popa
scas
sbb
aad
sub
dec
cmp
fwait
popf
lock
data16
rclb
imull
fnstcw
cmc
outsl
mov
pusha
pop
data16
ror
ret
jno
aaa
aam
into
ds
pop
xor
mov
push
mov
ficomps
pop
mov
fmuls
jne
push
out
fadds
mov
fmul
sub
and
mov
dec
inc
hlt
ret
jo
dec
stos
pop
mov
int
pusha
mov
jecxz
sbb
ret
pop
daa
pop
sbb
mov
xor
cld
ret
popa
sbbb
js
bound
add
loop
and
lea
xlat
popa
iret
mov
add
and
ds
pop
idiv
addb
pop
sub
sbb
test
imul
data16
jno
cld
push
cmp
imulb
mov
mov
or
pop
divl
ljmp
pop
movhlps
add
dec
stos
ret
push
xchg
clc
add
in
out
inc
fistps
dec
mov
jmp
sub
mov
aas
sub
insl
je
xor
lds
jae
push
mov
cmp
aad
adc
js
or
push
andb
fisubrl
sbb
cmpsb
out
pop
mov
mov
xchg
xchg
rclb
jnp
mov
add
dec
or
dec
cmp
imul
inc
xchg
lea
push
js
mov
addr16
dec
imul
mov
je
fstpl
ss
lods
enter
xor
xchg
ret
icebp
lcall
shrb
inc
mov
adc
dec
adc
xchg
lock
adc
data16
inc
popf
lods
add
test
adc
pushf
inc
or
outsl
and
add
mov
jmp
push
mov
ds
mov
shlb
test
jnp
cld
xor
pushf
outsl
xchg
xor
adc
cli
xchg
shrb
out
cwtl
ret
push
cmc
xor
les
push
xchg
flds
pop
in
push
adc
or
mov
in
dec
rolb
mov
clc
xorb
lock
push
jle
rorl
jno
test
push
sbb
fnsave
rcll
inc
les
and
xchg
repz
and
and
jge
push
gs
jns
sub
inc
in
dec
hlt
and
gs
xor
push
pop
mov
ret
dec
js
test
inc
imul
pop
pusha
mov
movsb
fcoms
jmp
jo
mov
mov
mov
cmp
lahf
sub
stos
push
xchg
mov
cltd
lods
repz
loop
in
xchg
sbb
mov
fs
insb
lcall
sbb
mov
mov
jp
cld
call
xchg
push
inc
iret
mov
add
rorb
imul
sub
pop
push
aaa
push
gs
out
int3
je
mov
mov
pop
inc
test
scas
adc
pop
add
int3
cwtl
unpcklps
bound
and
lods
push
cmp
js
jno
mov
mov
mov
in
sbb
fsub
jmp
inc
mov
in
popf
cli
stos
mov
sub
xchg
mov
enter
aam
lock
xchg
cmpsb
xchg
push
jnp
xor
cmpl
adc
scas
lods
in
aas
sbb
push
jle
testb
jge
stc
clc
arpl
and
das
fsub
adc
cmpsl
adc
and
dec
lret
dec
aad
test
addr16
outsl
adc
push
test
jp
inc
xchg
out
fisubrl
sub
push
add
push
dec
sbb
lcall
and
fs
cmp
and
adc
sbb
jp
add
loop
sub
adc
dec
xchg
mov
mov
clc
sti
aaa
mov
jp
inc
sbb
push
jno
fsubl
ljmp
shrl
and
out
cmpsl
sub
inc
imul
test
xlat
fnstenv
sbb
lcall
lods
fnstenv
ficoms
mov
cmp
sub
sti
and
mov
add
add
in
call
jbe
mov
jb
sub
sbb
outsl
mov
aam
lcall
mov
push
push
pop
stos
scas
xorl
adc
xor
push
ss
into
adc
packuswb
push
add
push
sbb
cltd
dec
xorb
and
sub
lret
mov
mov
adc
std
jg
xchg
mov
in
mov
jl
sub
xlat
jp
and
mov
bound
mov
fstps
mov
lds
push
cmc
or
in
inc
dec
scas
sbb
movsb
testb
inc
pop
push
fcmovnu
sbb
aam
jbe
sub
xor
inc
jnp
sbb
out
or
or
cmc
test
jg
fldcw
cmp
pop
mov
xchg
or
sbb
in
xchg
jbe
sbb
xlat
cmp
jns
subl
pop
jmp
mov
loop
or
pop
cmp
xchg
push
aaa
lds
jnp
xor
lcall
xor
cli
lea
inc
push
adc
pop
test
outsl
jnp
push
jno
adcl
add
insb
and
inc
cli
push
sbb
sbb
lds
cld
orl
cmpsb
dec
cmpsb
sub
dec
movl
sbb
aas
stos
inc
xchg
shrb
bnd
cwtl
add
mov
jbe
jl
lcall
addb
push
and
jge
pop
adc
imul
sbb
push
mov
xchg
aad
sub
popl
inc
ret
jge
sub
rcr
shll
cmpb
push
jb
add
mov
xchg
data16
push
mov
pop
sub
xchg
bound
xor
mov
pusha
or
sbb
adc
imul
mov
dec
loopne
pop
jmp
jae
cwtl
lahf
das
loop
xorb
sub
rclb
jb
dec
sbb
enter
xchg
ljmp
xchg
lods
mov
xchg
xor
outsl
inc
jno
adc
push
mov
mov
addr16
loopne
pop
loopne
into
xor
cli
sar
faddl
cmpsl
adc
add
test
sbb
xchg
popa
mov
in
int3
xlat
mov
add
inc
jb
xchg
and
outsl
sub
push
mov
or
add
xor
and
xchg
rclb
jmp
add
loopne
inc
push
jae
inc
movsb
mov
cmpsl
pop
loopne
ds
js
shlb
jno
mov
pop
xor
cmp
jp
sarl
aas
in
mov
scas
mov
xchg
cmpsl
mov
sub
xor
loop
stos
pop
clc
push
push
push
mov
cmp
sahf
das
fstl
mov
inc
jg
test
push
mov
mov
xchg
inc
sbb
jmp
into
outsl
jbe
loopne
inc
or
xchg
dec
mov
xchg
push
push
mov
push
or
in
pushf
mov
hlt
repnz
cmp
adc
push
out
jg
mov
pop
jmp
scas
shll
mov
sub
xor
jge
xor
sbb
pop
mov
adc
cli
rclb
fstpl
or
shrl
adc
jo
or
sbb
shll
mov
inc
inc
inc
sbb
and
dec
dec
push
mov
aad
das
ret
clc
lea
es
ja
mov
sbb
nop
or
jne
mov
cmpsb
inc
add
ret
ret
std
daa
push
xchg
mov
xor
cli
lods
cltd
push
jle
cwtl
or
jecxz
pop
jg
mov
loope
adc
sub
repz
adc
fdivs
xor
out
adc
int
inc
pop
jns
cs
pop
pop
mov
arpl
mov
iret
sub
or
mov
dec
dec
xchg
sahf
lods
xchg
imul
mov
jnp
push
sbb
addps
imul
push
add
mov
xor
mov
aam
sbb
push
mov
push
jmp
push
ja
mov
and
js
sbb
lods
stos
pop
and
aam
cmp
insb
fistl
loopne
cmp
add
stos
iret
lea
sbb
arpl
push
lret
movsl
push
pop
fwait
jge
or
imul
js
lods
inc
xor
aaa
nop
rorl
call
enter
push
loope
mov
jle
or
xchg
imul
cltd
pop
jb
fcoml
cmpb
and
lret
cmp
cltd
dec
cmpsl
pop
insb
inc
js
mov
adc
test
call
xchg
or
mov
leave
outsl
jecxz
in
fistpl
mov
popf
js
fs
cmp
pop
pushf
in
pushf
dec
movsl
pop
xchg
sahf
sub
and
jae
mov
fucomip
popf
out
addb
sub
not
xor
mov
fxam
jmp
ljmp
adcb
sbb
lds
flds
inc
push
pop
repnz
inc
out
int
rcll
sub
push
xor
pop
inc
clc
aad
sahf
jge
mov
push
test
out
stc
pop
fists
xor
adc
adc
pop
jnp
and
mov
insb
mov
mov
aam
loopne
scas
lods
lahf
jl
imul
mov
mov
push
movsb
dec
pop
rcrl
adc
xor
mov
loop
jp
cli
stos
or
out
aad
adc
ret
push
scas
mov
pop
jb
inc
pop
xor
aad
fcoml
fildl
cld
push
fstl
push
jns
mov
or
loop
mov
push
push
cwtl
jne
in
and
inc
sbb
lds
cltd
sbb
shll
repz
cs
jmp
push
cli
cltd
cli
scas
mov
lock
into
loope
cmp
repnz
ret
xor
jle
mov
pop
scas
mov
jno
test
xchg
into
mov
mov
push
rolb
daa
cld
insl
mov
adc
pop
jo
xlat
xchg
cld
sbb
jge
shlb
aas
lahf
jl
fmulp
movsl
sub
fmul
jmp
sahf
shlb
popf
data16
inc
pop
xchg
sarb
scas
mov
inc
paddusb
pushf
subl
jbe
shlb
adc
bnd
movsl
rorb
xor
mov
imul
cli
inc
mov
mov
xchg
adc
imul
xlat
in
and
scas
xor
arpl
rcl
mov
negb
incl
scas
rolb
sbb
xchg
ret
out
cli
fldl
and
arpl
cmp
hlt
mov
adc
lods
test
rorl
mov
mov
push
mulb
or
mov
mov
mov
inc
xchg
dec
or
push
outsb
repz
imull
xchg
and
lock
inc
inc
les
call
scas
jbe
pop
sbb
out
and
pop
or
add
and
je
cmp
out
mov
enter
aaa
repz
out
hlt
pop
jle
negl
cmp
sbb
hlt
cltd
mov
sbb
je
mov
aaa
pop
addb
mov
sub
popa
imul
push
decl
ss
xchg
jecxz
mov
sub
sub
lods
aam
into
cmp
pop
loope
insl
into
inc
popf
cmc
loop
add
aaa
mov
std
fmul
and
sub
xor
and
push
adc
sbb
cmp
push
jne
xchg
xor
addr16
fwait
mov
mov
and
fxch
push
and
jns
adc
dec
and
out
inc
xadd
hlt
jp
les
mov
dec
rorl
xor
stos
mov
jbe
mov
lods
lods
ss
shlb
xchg
xchg
iret
dec
xchg
or
pop
mov
push
jbe
xchg
push
insl
inc
mov
cld
jmp
repnz
mov
adc
lret
inc
inc
adc
mov
cmp
in
leave
add
push
xchg
lret
fdivr
xchg
pop
push
pop
std
mov
out
lods
fcos
push
mov
stos
pmulhw
cmc
test
and
hlt
adc
push
sub
aaa
in
enter
ds
into
push
inc
or
push
adc
inc
sub
dec
outsl
mov
into
das
mov
inc
lods
cld
iret
pop
cmc
xchg
dec
test
push
mov
inc
dec
adc
mov
mov
inc
xchg
pop
ljmp
pop
dec
or
push
mov
out
mov
add
nop
jb
arpl
cmp
aad
neg
adc
pop
xchg
mov
out
add
test
adc
push
adc
sti
in
mov
cwtl
stos
mov
fs
nop
or
call
adc
pop
dec
test
aad
sub
add
inc
mov
mov
mov
mov
push
cwtl
mov
mov
stos
incl
push
icebp
fs
iret
jmp
fisubs
push
rorl
pusha
jb
lahf
inc
mov
fs
xchg
ljmp
rorl
or
pop
dec
test
fsubl
aaa
mov
gs
and
pusha
mov
fnstenv
rorb
jp
pop
addl
pop
shlb
loope
add
pop
sub
daa
mov
and
adcl
sar
xor
ret
pop
pop
decb
cmpsb
push
call
adc
and
lods
mov
xor
inc
sub
dec
fld
push
mov
pushf
xchg
and
fcomps
adc
push
sub
pop
ds
nop
sub
pmullw
fstpl
adc
sbb
mov
inc
mov
out
sbb
outsb
filds
mov
mov
popf
xor
lea
stos
pop
shlb
mov
jl
fsubrs
nop
cmpsb
sub
mov
das
push
daa
sahf
pop
mov
adc
pop
dec
aas
imul
out
push
adc
and
mov
sub
lods
push
sub
mov
ds
rorb
cli
inc
scas
ret
outsb
xchg
xchg
mov
divb
test
stos
cltd
sbbb
dec
nop
cmpsl
xchg
fsubs
xchg
out
sub
shlb
ja
frstor
packuswb
mov
adc
dec
jnp
xchg
lret
int3
outsl
inc
inc
fs
movsl
scas
mov
and
sbb
jmp
arpl
mov
and
cmc
mov
and
xlat
mov
loope
aaa
and
out
add
popf
push
dec
inc
sbb
cltd
push
sbb
movsl
mov
push
dec
int
add
sub
sbb
mov
loop
ja
in
jne
fsub
push
into
cli
stos
and
inc
mov
cmpsl
xor
aam
cld
adc
leave
dec
div
push
fisubl
ljmp
xor
xchg
mov
mov
jno
jg
fidivrl
mov
push
cmovnp
subb
jo
repnz
daa
leave
fbstp
xchg
or
fmulp
stos
dec
push
and
out
insl
push
adc
int3
and
fidivrs
or
clc
jmp
push
xor
and
ret
and
jmp
into
fmul
out
jle
sbb
xlat
dec
leave
mov
lods
out
mov
fstpt
jbe
dec
daa
mov
loopne
inc
in
es
gs
push
xchg
jbe
mov
mov
jmp
iret
nop
loopne
push
mov
ljmp
movsb
pop
setno
mov
cltd
testb
out
cmp
lods
sbb
mov
add
mov
lahf
jg
in
or
js
xor
jo
adc
test
mov
call
repnz
jne
sbb
imul
inc
adc
push
add
sub
fxch
js
inc
adc
insl
or
test
dec
xor
mov
ficompl
in
mov
sub
jp
cmpb
and
mov
or
cltd
push
push
add
enter
cs
and
push
mov
and
addr16
mov
les
mov
fmul
xor
mov
sbb
stos
or
pop
push
inc
pop
mov
add
fwait
adc
jno
mov
cmp
mov
movsb
mov
sarb
scas
das
mov
cs
sahf
or
loope
call
add
cmp
jno
mov
lods
lds
or
add
das
insb
adc
cltd
or
jg
das
xchg
mov
mov
mov
sub
stc
inc
xorl
stos
jnp
jg
or
dec
ja
call
pop
negl
sti
add
lea
inc
adcb
movsl
ja
push
adc
mov
arpl
adc
push
shll
jae
clc
mov
jl
inc
pop
les
or
mov
test
stos
test
jge
mov
inc
cmovae
xchg
int
test
out
mov
shl
inc
loop
xchg
test
int3
fwait
jae
dec
mov
add
jl
cwtl
in
test
outsb
jb
mov
mov
and
int3
push
cmp
add
xchg
movsb
js
xor
xor
add
jge
sub
cmp
push
lret
sub
insl
arpl
jnp
mulb
int
xchg
retw
loope
enter
pop
stc
and
push
mov
inc
imul
push
lods
jmp
inc
ds
pop
sub
jo
and
xor
lahf
insl
into
and
out
pusha
adc
adc
inc
jno
cmpsb
pop
inc
hlt
outsl
pop
jmp
scas
lahf
rcl
push
roll
mov
cmp
popa
or
sub
mov
dec
lds
adc
arpl
ficomps
into
lods
pop
ret
jbe
pop
repnz
xor
loop
jae
or
int3
jp
and
inc
leave
or
add
orb
pusha
push
je
sub
clc
repnz
lahf
pop
pop
dec
mov
lcall
and
cmp
cmp
lock
loopne
loope
jno
jbe
insl
xor
pop
sbbl
hlt
cli
rorl
inc
ret
je
cmp
lods
mov
movsl
xor
lea
xchg
into
rolb
and
xchg
push
mov
div
out
dec
add
daa
sub
lahf
push
jp
pop
fimuls
aad
hlt
lods
sbb
sub
jae
and
xor
popa
pusha
mov
jp
gs
inc
adc
add
jns
xchg
push
inc
push
sub
push
movsl
mov
mov
mov
iret
lods
daa
push
sub
pop
cmp
xchg
mov
inc
pop
int3
cwtl
cmpsl
mov
repnz
jecxz
out
sub
js
arpl
mov
fcoms
in
mov
mov
sub
jge
jmp
and
fldcw
xchg
mov
jecxz
sti
ret
cld
clc
pop
mov
negl
jg
sub
sbb
and
adc
movsl
incl
cmp
push
cs
xchg
inc
inc
aaa
nop
or
rcll
bound
cmp
jp
outsb
inc
iret
jge
jmp
mov
mov
xorl
das
adc
push
out
stc
mov
punpckhwd
jle
and
dec
daa
mov
xor
mov
cmp
mov
insl
mov
cmp
pop
cmp
cmp
sahf
in
sub
dec
test
lea
imulb
cmp
rorb
mov
ror
les
arpl
cltd
mov
lret
lea
inc
jb
fdivs
int3
adc
xor
jl
mov
or
cld
fadd
idiv
inc
inc
aam
jnp
push
sbb
jno
or
jg
gs
sbb
orb
aaa
xor
and
xor
mov
cwtl
cmp
push
xor
jae
daa
cwtl
mov
mov
sub
jns
or
dec
xor
clc
mov
stos
enter
fisttpl
mov
push
ja
sub
loope
inc
and
ret
pop
arpl
jo
mov
test
dec
fdivs
jbe
pop
sarb
iret
test
sbb
js
jle
mov
jmp
aas
sbb
dec
sbb
scas
cmpsb
rcll
mov
lcall
adc
mov
jno
fucom
dec
mov
and
xlat
mov
push
xorb
and
je
inc
sub
sub
fsubl
xor
mov
push
int3
or
andl
gs
std
shl
shll
iret
jmp
mov
mov
adc
adc
mov
xchg
mov
mov
popa
les
pop
nop
sub
pminsw
inc
out
test
sbb
add
stos
cmpsb
sahf
xor
sub
jmp
pop
cwtl
sarl
mov
cmp
pop
jp
and
cmpsl
ret
jno
sbb
hlt
stos
cmp
lahf
xorb
jb
adc
das
fimull
outsl
pop
jmp
dec
imul
es
push
or
les
ret
jno
hlt
dec
shrl
lea
dec
jne
mov
and
add
arpl
popf
mov
adc
sbb
dec
addr16
push
add
push
push
leave
addr16
loop
or
jg
push
pushf
leave
mov
mov
sti
enter
dec
rorl
and
or
xor
repnz
push
rcrl
decb
daa
cmpsl
xor
daa
sarb
or
push
push
sub
test
in
out
jp
fnstcw
packssdw
xchg
jnp
daa
cmpsl
mov
and
xchg
push
fcmovnbe
adc
jle
inc
loop
mov
stos
cmp
imul
scas
ja
outsb
imul
xor
cld
xlat
cli
adc
fwait
int3
xlat
push
les
inc
xchg
jns
jecxz
xchg
mov
dec
loope
mov
mov
jne
rorl
jmp
adc
fcomps
dec
sub
loop
mov
xchg
lahf
rcll
dec
int3
mov
pushf
jp
cmp
xor
jmp
loopne
mov
ss
pop
callw
xor
xor
les
cmpsl
push
leave
cmp
jle
cmpsl
dec
xchg
push
xchg
aas
ds
loop
loop
cmp
push
mov
ljmp
mov
fs
dec
aaa
scas
adc
das
jns
scas
lock
mov
stc
sahf
jae
dec
sub
adcb
dec
in
test
in
in
xchg
jge
loopne
and
mov
sbb
pop
inc
add
xlat
add
lret
adc
imul
cli
mov
jmp
dec
add
sub
sbb
cmp
sub
in
mov
mov
sbb
rol
mov
sub
push
jmp
and
or
into
aas
mov
ffree
sbb
xor
pop
pop
gs
insl
jb
inc
xchg
dec
in
in
pop
mov
dec
xor
lea
add
out
js
xchg
out
or
lahf
je
dec
or
add
test
out
cmpsb
out
jmp
es
sbb
xchg
sbb
mov
in
lret
stos
sub
jecxz
adc
push
mov
push
iret
sbb
enter
dec
cltd
scas
cmp
mov
and
push
sub
stos
sbb
ds
cmc
sbbl
mov
std
mov
and
dec
fnsave
rcr
sbb
nop
or
mov
xor
lahf
xor
xchg
xor
sbb
out
ljmp
mov
xchg
fld
enter
adc
mov
jl
gs
cli
xchg
das
mov
int3
pusha
jge
xchg
inc
insl
jle
dec
popa
push
push
mov
jnp
xchg
jp
cmp
mov
push
cwtl
data16
movb
jecxz
sub
and
mov
jae
stos
push
adc
nop
cli
push
inc
jno
mov
lods
je
jl
mov
sbb
sub
shr
sti
addl
adc
mov
or
sub
rorl
mov
fstps
sbb
cmp
sub
iret
jo
pop
cmp
sbb
dec
dec
sub
test
fs
mov
gs
aas
xchg
mov
sub
test
lcall
icebp
xchg
rclb
leave
xchg
xchg
sub
push
or
scas
test
sahf
aam
push
repz
xor
adc
cmp
push
ret
jbe
leave
jg
adc
scas
adc
xor
repz
lock
cmp
popa
sahf
push
pop
and
dec
fisubl
pop
test
sub
popl
pusha
rolb
lret
and
push
cmpsl
xchg
inc
jmp
xor
sbb
jp
aaa
and
lahf
dec
gs
or
dec
xor
or
xchg
aad
mov
fdivrp
jnp
ret
js
jbe
in
loop
xchg
mov
sbbb
ljmp
inc
inc
lret
arpl
pop
adc
xchg
mov
fwait
inc
mov
cwtl
xchg
nop
dec
std
sub
lcall
lds
xor
int
dec
lock
mov
orl
repz
sarl
sub
in
inc
inc
push
gs
out
xor
scas
inc
or
mov
inc
or
mov
in
or
and
and
xor
sub
mov
shr
ret
outsb
aad
adc
int3
cltd
mov
adc
mov
loope
insl
add
lds
sub
add
dec
dec
fcompl
or
dec
adc
cmc
loope
sahf
lcall
gs
mov
cmp
leave
sub
or
xor
add
xor
cmp
sbb
and
testl
inc
xchg
mov
sahf
cmp
cltd
cmp
add
repnz
mov
inc
outsb
xchg
dec
rolb
repnz
ret
aas
add
fsubs
push
pop
dec
scas
or
mov
xchg
je
lret
push
mov
and
cld
inc
push
adcb
and
and
push
sarl
add
pop
add
inc
xchg
push
loop
ja
jecxz
mov
xchg
pushl
pusha
mov
movsl
fadds
xor
sbb
movsl
lods
and
xchg
lahf
pusha
call
shlb
jecxz
and
xor
add
and
in
push
das
outsl
cmpsl
lea
jno
xor
fwait
jge
mov
or
lds
sub
pop
pop
pop
int3
push
xchg
cmpsl
inc
stos
cwtl
loope
dec
clc
add
push
sub
and
xor
sahf
mov
mov
add
clc
repz
or
cmpl
mov
push
test
cld
ds
cmpsl
sarl
in
cltd
pop
xlat
dec
or
rsqrtps
cmp
and
les
in
xchg
xchg
mov
or
or
arpl
fidivl
xchg
adc
andl
pop
andl
inc
aam
adc
pop
xchg
cmpsl
outsb
cmp
pusha
jl
ret
aad
cmp
sub
push
rcll
mov
pop
add
mov
arpl
cmp
mov
lss
fmul
xlat
sbb
cs
mov
je
add
stos
cwtl
push
jo
sti
jno
in
sub
dec
jb
std
cmp
frstor
cs
jl
cwtl
xchg
test
leave
lret
sub
test
mov
icebp
leave
sbb
mov
jno
test
dec
pusha
and
aam
sub
inc
cmp
xchg
add
mov
sbb
mov
inc
jbe
jecxz
fisttpll
addr16
xchg
popf
mov
lret
lahf
adc
clc
in
mov
pop
andl
xchg
popf
mov
cmp
ljmp
test
es
mov
adc
and
lods
inc
test
cmpsl
ja
into
pop
mov
cltd
xchg
clc
insb
movsl
into
cmp
and
dec
cli
and
dec
or
arpl
jne
pop
ret
pop
sub
or
adc
jmp
jge
jno
sbb
clc
adc
loop
insb
pop
cltd
dec
lea
stc
inc
add
lods
push
and
and
inc
icebp
fdivrs
cmp
dec
in
iret
push
fidivrl
je
movsb
cmp
inc
pop
jnp
mov
add
cmpxchg
lock
pop
popf
cmp
inc
in
mov
fcmovb
sub
in
mov
adc
jns
xchg
push
inc
int3
jmp
xchg
in
out
xchg
fisttpll
scas
aad
jnp
cmpsl
jmp
cwtl
adc
clc
in
dec
aad
andb
dec
inc
inc
addr16
xchg
mov
push
notb
or
and
cmp
xchg
add
xor
push
repnz
and
pop
int3
aaa
daa
fmuls
inc
repnz
xchg
outsl
xlat
in
test
push
jge
mov
push
daa
out
daa
push
lcall
les
cmp
lods
fstpl
pop
pop
mov
fstpl
stos
mov
adc
or
inc
pop
mov
lcall
pop
das
mov
fdivr
stos
and
bound
and
adc
or
ds
rcrb
rcr
outsl
ljmp
push
jo
sbb
inc
dec
fwait
pop
sub
dec
adc
cli
jne
xlat
mov
pop
push
pusha
shr
adc
sbb
add
fadd
inc
xchg
mov
jb
sub
ljmp
xlat
negb
inc
cmp
sbb
push
inc
pop
daa
pop
pushf
das
push
pop
add
das
sub
call
cmp
ds
aas
mov
mov
pusha
inc
or
push
pop
lret
aam
scas
pushf
or
iret
iret
fcmovu
xor
cmpsb
inc
fidivrl
and
std
out
adc
xchg
pop
call
hlt
int
sbb
push
mov
add
cmp
sbb
adc
ret
hlt
and
pop
insb
push
xor
sahf
shlb
repnz
cmp
in
fldl
out
mov
add
push
mov
mov
xchg
jl
sbbl
jno
push
push
push
xor
rcll
movsl
mov
lea
fisttpll
push
rolb
mov
or
loopne
ret
pop
inc
mov
shlb
loop
stos
xor
data16
das
and
xor
or
pop
adc
or
adc
call
repz
mov
dec
movsb
mov
mov
into
mov
insb
add
pop
add
xlat
mov
or
es
aaa
jns
cmp
jge
decb
sub
sarl
and
or
or
or
mov
mov
xor
sbb
inc
jmp
or
sub
jle
in
rorb
jmp
inc
popf
cmc
bound
xchg
stos
pop
addb
mov
mov
sub
notl
notl
push
sub
jns
adc
and
pop
mov
into
jne
xor
bound
int3
sbb
pushl
shr
or
mov
pop
pop
sub
sbb
sub
imul
inc
ficomps
inc
adc
pop
jnp
and
mov
int3
xchg
cmp
xor
xlat
adc
arpl
pop
aam
icebp
orb
and
scas
pop
sub
in
pop
mov
jne
dec
push
xor
movb
mov
xchg
out
and
sub
imul
xor
jb
jae
loope
sub
ljmp
push
test
cltd
lds
fs
mov
bound
in
jne
jns,pn
add
xor
aas
or
sbb
cmp
add
jae
test
icebp
cmp
test
fadd
xchg
sub
leave
add
hlt
fdivl
incb
mov
sbbl
pusha
scas
xchg
jmp
shll
pop
scas
aam
imul
jecxz
xor
cmc
idivb
sbb
test
xor
xchg
cmc
push
jnp
sub
or
mov
jg
inc
sbb
scas
xlat
test
push
in
lds
ror
push
rcrl
fstl
jge
rcll
pop
sub
add
sbb
and
ret
add
lahf
push
mov
sub
mov
dec
mul
jmp
sub
mov
adc
mov
lods
lock
mov
adc
inc
or
stos
in
inc
sbb
lods
xchg
jmp
pop
xchg
push
repz
mov
cmp
mov
cmpsl
rcrl
xchg
adc
cmp
add
adc
pop
jbe
popa
jmp
sub
or
subb
add
faddp
int3
xchg
sahf
add
popa
or
idivl
sub
lahf
sahf
jne
dec
inc
cmpsl
sbb
dec
adcb
jecxz
fdivrs
mov
pop
push
and
or
add
loope
or
rcr
pop
inc
loope
neg
lods
cmp
mov
fnstsw
cmp
jne
xchg
jg
dec
mov
lds
pop
sbb
adc
aas
or
inc
inc
and
in
fwait
jle
mov
int3
xor
fcoml
mov
imul
sbb
mov
mov
dec
clc
or
mov
xor
push
adc
mov
mov
lret
div
jbe
mov
mov
loope
stos
push
lahf
cmpsb
dec
aam
imul
ret
xor
lahf
sub
sub
adc
out
and
inc
hlt
ror
mov
ret
cld
ja
jmp
mov
nop
add
pusha
jns
dec
loope
mov
jnp
xlat
pop
lock
adc
add
pop
mov
je
cmp
push
mov
inc
outsb
adc
arpl
ja
cmp
and
adc
aad
sub
std
pop
push
mov
push
pop
es
cld
inc
mov
pop
ret
sbb
insb
cmp
mov
int
ret
clc
mov
mov
mov
rolb
pusha
inc
outsl
pushf
pop
insb
shrl
arpl
jecxz
insb
popf
lret
in
cmp
add
pop
push
mov
stos
dec
mov
or
stc
dec
xorl
jmp
cwtl
push
test
add
into
and
cli
sar
xor
sub
mov
push
and
push
fldenv
jmp
jno
out
fsubs
xchg
cs
in
hlt
sbb
ja
push
stos
bound
ret
in
outsb
and
gs
ffreep
popf
cwtl
push
sub
nop
mov
icebp
cmp
or
or
dec
add
pop
jne
aas
adc
fwait
xchg
cmp
sbb
xchg
fwait
aas
or
ljmp
and
cld
lods
and
pop
cmp
rcrl
adc
lea
cmovp
inc
fcompl
lcall
dec
jns
sahf
and
mov
lret
ljmp
pop
or
inc
sub
xchg
je
leave
lds
mov
andnps
cmp
stos
test
imul
xor
cli
push
ja
fnsave
dec
mov
jo
or
add
xchg
cmp
movsb
pminub
gs
rcll
shll
xchg
xchg
mov
arpl
lret
cmp
xchg
sbb
fstps
mov
mov
aas
loop
inc
jns
xlat
dec
jno
xchg
into
sti
jae
push
ss
xlat
aad
aad
fstp
push
outsl
ret
mov
add
imul
stos
inc
mov
repnz
mov
sub
cld
addb
dec
mov
loopew
lahf
push
mov
js
push
adc
pop
gs
ret
clc
xchg
xchg
shll
add
xor
push
cmp
xor
imul
out
in
icebp
sub
adc
cmp
cmp
int
mov
insl
mov
ficompl
cmpsl
cmp
adc
cmp
pop
mov
cmp
rolb
xchg
test
xchg
xor
push
lret
popa
inc
js
into
lds
sub
dec
mov
stos
push
repz
xchg
call
fmul
sbb
lahf
jo
lahf
shrl
movsb
sahf
mov
sbb
jmp
cmp
mov
inc
mov
pop
mov
popf
sbb
push
mov
add
xor
jae
mov
jb
and
fdivrp
int3
loope
pop
mov
add
in
pop
mov
sbb
fistpll
jmp
sbb
jecxz
sbb
mov
fnstsw
push
mov
push
pop
mov
rclb
mov
in
fdivrl
sub
cltd
or
lret
orl
inc
mov
test
inc
clc
cmp
fs
mov
fdivl
cmpsb
xchg
in
outsl
xchg
cmp
fsubrs
or
cmp
xchg
scas
lcall
mov
xchg
pusha
push
or
js
ja
dec
clc
or
pop
xchg
fldt
rol
add
dec
push
jbe
jp
inc
or
lcall
popa
loopne
mov
frstor
cmp
jecxz
test
sbb
sahf
mov
push
pusha
pop
vmaxpd
shlb
aad
add
push
lret
frstor
dec
xchg
cmc
imul
jge
out
pop
bound
jl
mov
push
push
dec
mov
and
adc
fists
cmp
fucom
rcll
push
jb
jb
enter
mov
clc
xchg
imul
in
stos
jae
mov
mov
jns
out
call
rol
push
into
rcrl
popf
jmp
jp
xor
in
cmp
pusha
inc
adc
sub
mov
rcrb
sub
adc
sub
call
fmull
push
adc
push
and
xor
or
imul
mov
add
stos
cmp
ret
pop
orb
pop
addr16
lea
aas
mov
out
jge
push
xor
sbb
xchg
stc
fiadds
rcrl
mov
aam
fstpl
ja
sub
and
mov
subb
leave
lcall
ljmp
xor
fidivrl
aam
jno
sbb
adc
jl
xchg
push
icebp
test
test
and
xchg
into
mov
je
push
pop
adc
shlb
or
repz
mov
sub
fiadds
pop
cmp
mov
lods
mov
divl
pusha
movsl
dec
and
adc
scas
fcoms
stos
push
cld
movsl
sbb
fucom
or
pop
and
cmp
ljmp
jl
sbb
ret
sub
jle,pt
sub
shll
mov
stos
add
pushf
cmpsl
stos
pop
ljmp
or
jp
in
mov
fs
jge
popf
cmp
jge
jae
insb
insl
fwait
pushf
in
lahf
xchg
dec
sub
ss
hlt
mov
int3
mov
ffree
add
lds
jno
sub
icebp
cmpl
loop
or
push
lcall
movb
or
stos
clc
scas
jmp
push
rclb
jo
lahf
mov
mov
daa
es
cmp
push
popf
in
mulb
fbstp
sbb
lret
jmp
aad
jge
pop
lods
pop
fcmovu
mov
mov
xorb
stos
mov
adc
jl
imul
xchg
std
sahf
nop
hlt
push
les
filds
sub
insb
pop
movb
lock
sub
fnstenv
xchg
sbb
xor
or
lods
fidivrs
jg
mov
into
mov
push
int3
es
lods
add
cltd
mov
ret
and
fs
loop
cs
mov
negl
dec
sub
aas
add
add
and
jle
or
jns
jl
mov
xchg
imul
pop
xchg
fldl
aam
add
daa
daa
adc
xlat
dec
push
cld
pusha
or
pop
dec
add
in
push
dec
jno
lahf
leave
dec
mov
popa
test
mov
sbb
shlb
scas
clc
cwtl
sbb
add
jbe
pop
xchg
cltd
test
dec
and
mov
or
mov
mov
lahf
jbe
dec
jbe
fsubl
test
lock
dec
adc
arpl
jl
mov
mov
bound
mov
inc
cmp
rclb
and
xchg
stos
push
jnp
stc
int
mov
xchg
xchg
shll
stos
imul
push
and
mov
lds
shlb
leave
repnz
mov
xchg
add
movsl
mov
aaa
dec
sahf
or
sbb
or
xlat
mov
shll
push
mov
dec
testb
and
push
mov
jns
xlat
stos
mov
cmp
pop
data16
mov
fcmovne
movsb
roll
jge
inc
mov
iret
aaa
cltd
pop
jmp
jno
enter
dec
mov
fidivs
fldpi
cli
xor
inc
pop
xchg
pop
jns
xlat
adc
inc
dec
pop
sahf
add
pushf
adc
ja
lock
scas
movsb
stos
jecxz
inc
lods
dec
mov
mov
out
fdivrl
movsb
into
lcall
lcall
repz
xchg
in
arpl
test
repnz
jmp
cmpsl
or
jns
dec
dec
fwait
xor
scas
mov
test
inc
aam
or
fwait
push
lock
jp
cwtl
cmp
sti
bound
push
xchg
idivb
je
mov
stc
aad
divps
push
test
aad
xchg
lods
xor
mov
push
sarl
jl
sbb
jg
jae
ret
push
inc
jmp
jge
out
mov
cld
sbb
flds
in
int3
adc
mov
xchg
bound
pop
sahf
xchg
outsl
xor
in
inc
and
push
push
test
loope
fldl2e
adc
push
pop
fs
popl
loop
xor
imul
adc
add
sbb
sahf
mov
jnp
mov
xor
xor
add
out
into
test
in
shll
jb
inc
lcall
aad
ja
push
shl
mov
rolb
data16
push
xchg
cmc
lret
imul
lods
inc
iret
sbbb
cmpsb
lea
iret
js
jecxz
outsl
jmp
ja
cld
not
stos
add
jmp
fdivr
faddl
leave
mov
insb
outsb
mov
xchg
cmp
push
or
adc
push
sbb
loop
pop
inc
jnp
mov
push
xchg
push
sub
addb
lods
cmpsl
or
xor
leave
lret
ret
add
mov
dec
stos
out
cmp
or
popa
pop
pop
lcall
popa
mov
mov
push
pop
ja
out
cmovge
pop
cmp
xor
aaa
adc
psrad
mov
sub
cmpsl
mov
push
inc
repz
dec
jecxz
mov
pusha
jg
push
fsts
pop
xchg
ljmp
and
push
mov
negb
xor
movsl
mov
jmp
ficompl
notb
pop
adc
test
mov
jo
inc
out
pop
test
xchg
inc
test
sahf
dec
push
stos
lods
jno
dec
xor
xchg
xor
cmp
adc
jae
aad
push
sub
or
js
push
lahf
cmp
push
loopne
add
mov
mov
mov
sbb
arpl
push
xchg
in
xchg
jnp
xor
sub
in
adc
or
cmpsl
std
or
mov
xchg
lods
jp
or
or
sbb
movq
dec
lahf
mov
movsl
sbb
xor
imul
xlat
in
inc
pop
lea
jmp
rep
sti
add
cltd
mov
test
dec
push
jle
pop
into
test
lret
mov
mov
and
and
insl
and
sbb
push
stos
call
mov
clc
fistps
ljmp
mov
xor
dec
mov
pop
into
cmp
mov
push
lea
xchg
mov
mov
mov
add
cmpsl
pop
push
and
add
pop
inc
shll
jb
enter
add
ret
push
outsb
ds
xchg
and
aaa
scas
into
stos
mov
jge
xchg
popa
test
loop
fldt
das
popf
rorl
ret
in
std
and
mull
pop
daa
sub
loopne
je
imul
in
push
mov
mov
push
cmp
xchg
inc
cmp
push
cmpsl
in
add
fdivrs
in
sub
or
mov
push
repnz
mov
mov
cmpsb
aaa
push
mov
aad
ljmp
mov
xlat
lds
push
mov
pop
cmp
stc
xlat
lahf
leave
fisttpl
andb
adc
inc
stc
dec
lods
or
std
mov
popa
cwtl
mov
cmp
sub
in
scas
mov
sub
pop
jno
outsl
fisubrl
pop
fucomip
enter
mov
jne
mov
adc
dec
orl
in
nop
fsubrs
add
dec
push
ljmp
mov
lea
daa
out
loop
jle
push
ja
dec
inc
xor
pop
xor
pop
in
mov
lods
and
pushf
lcall
dec
in
push
movsl
fcompl
pop
cmp
cwtl
mov
clc
roll
pushf
mov
test
xchg
inc
or
cmpsl
repnz
insb
push
ds
jg
mov
cmp
cmp
fidivrl
sbb
stc
fsubr
test
pop
not
xchg
cmp
jno
mov
cmp
rorl
adc
adc
sub
cmpsl
mov
test
add
cs
lds
mov
mov
mov
mov
pushf
mov
iret
dec
jmp
fwait
and
or
call
enter
int3
mov
mov
in
jp
test
jle
jo
std
in
or
push
xor
into
mov
sbb
push
xchg
scas
mov
xchg
aad
dec
outsl
jg
and
mov
adc
sub
outsl
add
sub
cmp
fwait
push
add
inc
jae
lock
sub
xchg
add
std
fwait
dec
mov
xchg
pushfw
inc
mov
aas
cltd
jg
fsubrs
iret
push
out
push
pushf
mov
into
xor
loop
rcrb
cmp
cld
fwait
push
sub
mov
jge
mov
push
sbb
xor
pop
dec
sub
xchg
repz
in
add
and
xor
xchg
mov
push
test
movsl
bound
scas
lahf
xchg
icebp
xchg
movsb
test
push
lods
hlt
cs
lret
cmpb
scas
out
gs
jno
hlt
iret
lea
lods
sti
and
pop
xor
rcrb
mov
icebp
adc
sub
leave
dec
push
sbb
sbbl
out
and
jns
mov
xor
cli
push
fsubl
lcall
push
push
sub
outsl
cli
iret
mov
in
popa
mov
and
mov
sar
fiadds
xor
test
pop
xchg
inc
enter
add
jae
mov
mov
push
nop
mov
dec
scas
mov
mov
jb
jge
fnstcw
out
or
pop
or
fdivl
xor
xlat
nop
inc
in
cmp
push
jmp
jmp
ficomps
mov
and
rcl
pop
xor
call
es
mov
xor
fucom
pop
test
cltd
loopne
std
enter
cmp
testb
pop
mov
push
fwait
jbe
ds
pop
enter
push
ds
insb
scas
pop
mov
mov
add
xor
mov
cmpsl
cli
xchg
sbb
es
arpl
cmp
mov
mov
push
dec
xchg
fistl
sbb
data16
mov
rcrl
xchg
enter
jecxz
enter
repz
pop
es
and
cs
jno
add
addl
pop
mov
mov
sbb
inc
scas
mov
mov
out
dec
ds
hlt
and
stos
pop
lods
pop
dec
sbb
dec
test
jo
adc
xor
add
dec
imul
aad
fdivl
shll
xchg
cs
in
lahf
mov
xorb
mov
xor
fidivrl
out
inc
adc
dec
rcrl
cmp
rcrl
cmpsl
add
sub
xor
sub
jo
addr16
sub
push
cmc
mov
hlt
call
bound
push
sub
mov
jp
loope
ret
add
in
outsb
movsb
adc
cmp
and
ror
mov
shrb
stc
test
hlt
roll
push
xor
psubw
out
jbe
add
sub
sbb
notl
add
dec
int
adc
mov
mov
cmp
movsb
int
inc
push
aaa
cmp
mov
cmp
jmp
inc
xchg
stos
and
sub
cmc
mov
jns
lods
cmp
xor
push
jl
sbb
std
and
mov
adc
aad
jb
sbb
xchg
adc
incl
pop
leave
or
cltd
cmp
data16
push
sti
insl
outsb
mov
mov
test
add
mov
out
inc
popf
dec
loope
bound
cmp
xor
add
inc
jne
pop
mov
pop
add
les
sub
push
cltd
mov
sbb
and
mov
mov
outsl
ljmp
cmp
rcll
pop
adc
pmaddwd
xor
xor
jno
imul
and
popf
add
xor
cmp
adc
movb
subb
sub
daa
cltd
dec
adc
cli
stos
jge
or
mov
xor
pop
repnz
push
rolb
jecxz
push
jbe
jge
cmp
push
sub
stos
and
ret
jp
adc
repnz
subl
and
lods
xchg
in
xor
hlt
sahf
out
inc
cmp
jge
xor
or
clc
mov
movsl
or
arpl
xlat
sbb
enter
dec
popa
xor
or
xor
stos
dec
shll
shl
jnp
aas
push
sarl
jne
mov
pop
cmp
shll
ds
adc
add
cmp
add
xlat
push
test
lock
dec
jecxz
fisubl
cld
jg
js
add
mov
leave
popa
push
test
popf
xor
mov
lds
xchg
sbb
inc
movsl
jae
dec
iret
fs
outsl
push
dec
loop
into
hlt
mov
jbe
push
imul
dec
pop
push
mov
sub
outsb
sub
pop
mov
mov
ffreep
ret
xchg
in
into
xchg
adc
lret
cmp
cmp
mov
mov
mov
jae
cmpsl
mov
shlb
cli
dec
enter
mov
cmp
dec
mov
dec
test
call
les
jge
sub
sub
dec
fwait
xchg
mov
pop
xchg
repnz
shlb
pop
cltd
and
add
or
fnstenv
dec
sbb
cmp
in
lods
mov
mov
and
lcall
loope
data16
ja
xor
or
stc
add
mov
or
xchg
or
mov
inc
mov
mov
sub
mov
sti
pop
movsl
xlat
push
push
test
imulb
mov
leave
mov
in
repnz
mov
or
pop
mov
mov
sub
call
jl
aam
icebp
es
mov
scas
or
cmp
lds
push
mov
cmpsl
push
aas
pushf
loope
out
cmpsl
xchg
adc
cmp
xchg
push
lods
sarl
xchg
icebp
cs
sub
jmp
inc
es
mov
es
jo
xor
mov
mov
xchg
sub
inc
ja
jo
and
xlat
xchg
fs
pop
dec
jno
mov
xchg
movsb
out
adc
hlt
xchg
push
jp
jnp
cmp
out
fnstsw
jo
adc
mov
or
cmp
jg
outsl
std
push
movsl
add
and
xchg
pop
add
xchg
jbe
test
sbb
lds
and
out
mov
lahf
xchg
cld
dec
pop
loop
fbld
arpl
push
pop
adc
faddp
pop
lods
cmp
sarl
push
icebp
mov
loop
sbb
jbe
shll
arpl
lods
decb
dec
push
imul
lods
mov
jo
jge
mov
cmp
dec
incb
ss
inc
loope
adc
aad
rolb
push
inc
inc
ficompl
mov
inc
inc
mov
enter
iret
ret
mov
movsb
cmp
sbb
push
jo
push
mov
xchg
fildll
pop
adc
mov
inc
out
xor
mov
test
push
test
mov
xchg
iret
jmp
ds
pop
push
pop
cmpl
inc
test
movsl
pop
outsl
imul
sub
lret
add
pop
adc
insb
xchg
cmpsb
mov
das
jno
mov
fldcw
xchg
xlat
cmpsb
inc
aam
pop
ret
stos
pop
sbb
popl
movsb
xchg
cmp
cmp
jmp
adc
fdivrl
jb
test
aas
scas
xchg
sub
xlat
sti
repz
dec
inc
das
adc
pop
jne
fmul
xchg
and
mov
test
std
std
fldt
inc
cld
movsl
inc
or
dec
cmovs
mov
sbb
sbb
mov
cld
lcall
loop
popf
and
dec
out
mov
add
das
inc
xor
lcall
mov
push
es
shll
xor
cmc
stos
xor
mov
fcoms
inc
popf
mov
in
adc
cmp
cmp
pop
push
and
inc
fxrstor
jbe
icebp
pop
xor
int3
xchg
inc
push
js
pop
fs
xor
in
shll
xor
xor
daa
shlb
andb
loopne
insl
fcmovne
adc
add
repz
cmpsl
pop
jns
out
sub
in
fistpl
mov
cli
xchg
insl
fnstenv
das
popl
and
and
lods
mov
and
push
daa
xchg
or
lahf
jbe
les
rorb
das
xchg
movsl
cmp
mov
out
xchg
jl
mov
xchg
and
mov
xor
dec
loop
inc
mov
inc
das
jge
mov
imul
subb
movl
addb
cmp
push
cld
push
mov
xor
iret
repz
xchg
push
sti
movd
xor
std
addr16
dec
test
jns
ja
subb
add
push
adc
or
push
lret
adc
push
dec
sub
loop
fldcw
int3
xor
mov
js
scas
stc
outsb
shrb
out
fdivrs
popa
mov
fistpl
int3
in
test
mov
loop,pn
rcrb
sahf
out
push
lret
shlb
daa
stos
or
pop
jae
mov
nop
push
mov
test
lret
jmp
xor
pop
ret
inc
jnp
cltd
fistpll
flds
out
push
pop
mov
push
sbb
push
push
stc
xchg
sbb
lahf
mov
sbb
inc
adc
pusha
out
icebp
leave
xchg
ror
inc
xchg
jo
xchg
out
ljmp
sbb
sub
jbe
movb
aas
inc
pop
mov
xor
dec
pushf
pop
inc
inc
xchg
ds
mov
aaa
iret
sub
pop
push
lcall
cmpl
sbb
inc
pop
mov
stos
popa
movsb
cs
cmovns
maskmovq
imull
inc
mov
lcall
addr16
out
out
jb
jb
pop
jp
mov
add
bound
push
in
lret
roll
jmp
mov
xchg
out
arpl
movsl
je
push
imul
push
lds
add
test
les
movb
push
pop
push
in
push
aas
fcmove
outsb
mov
enter
insl
fwait
scas
in
out
mov
mov
lcall
jle
das
sub
cmp
mov
fucom
leave
add
mov
loope
scas
loope,pt
xlat
roll
pop
sub
jno
in
lcall
arpl
mov
xchg
jnp
rorl
sub
mov
jbe
stos
or
sbb
addr16
inc
adc
xor
push
sub
inc
xor
cmpsl
cld
loop
adc
mull
fidivl
mov
lcall
or
pop
shll
cltd
pop
add
cltd
jbe
shll
dec
sbb
es
sbb
vunpckhps
sbb
cmp
loopne
das
jge
clc
jecxz
paddusb
lahf
push
inc
cwtl
fistpl
xchg
jae
mov
mov
mov
mov
adc
mov
pusha
jge
dec
cmp
adc
mov
cmp
fnstcw
xchg
xchg
aad
inc
dec
sahf
js
call
lods
xchg
jno
mov
sbb
or
add
push
cmp
or
xchg
out
jp
test
dec
push
adc
aad
jg
lahf
push
cmp
int
inc
add
or
add
dec
pop
pop
pusha
pop
iret
mov
shlb
xchg
push
aam
mov
jne
xchg
test
or
pop
cmc
js
loop
movsl
xchg
nop
pop
lcall
pop
sub
jnp
ret
add
jp
fdiv
adc
mov
push
cmp
fxam
push
mov
sti
gs
or
push
std
mov
xor
pusha
fcmovbe
stos
xor
jbe
scas
mov
dec
pop
xchg
xchg
push
push
gs
add
fmuls
and
in
nop
scas
data16
jno
addr16
dec
jg
add
pop
into
daa
stos
cld
mov
xchg
xchg
into
js
xor
arpl
and
inc
mov
daa
dec
les
pop
dec
push
cmovno
jg
out
cs
mov
inc
pop
aas
dec
mov
cld
aaa
jnp
add
mov
cmp
loop
jmp
repz
mov
out
or
enter
test
push
sahf
mov
shl
mov
and
aam
sub
adc
push
int3
push
inc
mov
cmp
jbe
inc
and
hlt
xchg
out
hlt
adc
out
insb
sti
adc
xlat
jl
push
aam
shrl
xlat
nop
cmp
insb
xchg
sbbl
jne,pn
daa
out
ficomps
das
ret
push
divb
cmc
rcrl
leave
test
push
xchg
lcall
mov
mov
loope
test
ret
dec
daa
lea
jne
je
fwait
push
jp
loopne
daa
xchg
scas
movsb
dec
lods
or
cmp
add
ljmp
rcrb
xor
pop
adc
notl
fnstcw
sub
rcl
push
xchg
add
addr16
aas
jne
out
aaa
mov
push
xchg
cmp
divb
mov
sbb
mov
insl
cmpsb
xchg
inc
gs
jo
iret
daa
das
push
push
sub
pop
inc
push
js
and
lock
bound
addl
mov
in
and
out
scas
adc
dec
cli
dec
add
xor
push
cmp
or
or
inc
stc
jb
push
pop
ja
mov
addps
xchg
push
cmp
daa
fadds
stos
pop
rcr
cmp
shr
das
mov
dec
movsb
pop
dec
xchg
inc
or
add
dec
and
dec
leave
sti
or
popf
ja
loopne
xchg
pusha
int3
dec
mov
popa
mov
dec
inc
dec
jne
push
sub
aad
mov
nop
ret
xor
or
inc
fmuls
movsl
in
lock
jle
fadds
jo
not
push
cmp
lret
mov
pop
push
push
loop
xchg
adc
inc
pop
insl
fdivrl
xchg
add
inc
hlt
pop
jle
loope
inc
dec
push
push
pop
sbb
xchg
push
mov
addr16
mov
ja
mov
inc
out
imul
out
in
sbb
arpl
jg
in
daa
add
mov
cmp
fwait
movsb
sbb
inc
stc
mov
cmp
icebp
gs
cmp
dec
cmp
mov
out
flds
loop
adc
cltd
add
out
lea
jnp
add
inc
ret
leave
imul
sti
es
xchg
ret
mov
mov
mov
sti
aam
cmp
adc
adc
push
cmp
imul
adc
mov
adc
dec
and
int
mov
or
repz
jge
imul
mov
mov
adc
jecxz
sub
push
jle
inc
dec
int3
fmuls
aad
sub
bnd
mov
enter
mov
int3
test
das
pop
shlb
pop
imul
mov
sub
jae
je
stos
ffree
and
adc
jae
out
mov
sub
sbb
ficoms
out
stc
pop
push
pop
pop
push
popf
lds
mov
cltd
adc
mov
hlt
sub
cli
mov
xor
cltd
imul
cmc
sbb
out
ret
jecxz
lcall
xchg
rcr
sbb
imul
mov
popa
sbb
mov
clc
push
push
bound
sub
fwait
xorl
hlt
mov
mov
aaa
and
fmull
dec
jns
pop
add
cmp
xchg
lods
sbb
mov
add
int3
nop
jle
xchg
jge
das
imul
fsubr
es
sbb
xchg
in
lds
in
cmp
xchg
fmull
xchg
jmp
or
es
pop
lahf
cmc
inc
cmpsl
mov
shll
sub
insl
iret
outsb
push
inc
stc
mov
incb
ljmp
sbb
inc
aad
push
lds
lock
lods
add
mov
stos
mov
fadd
call
sbb
jg
sahf
pusha
add
test
mov
inc
repnz
sub
mov
mov
mov
dec
inc
sub
inc
outsl
pop
mov
shr
pushf
repz
cltd
jg
mov
cmp
lret
lret
mov
daa
xchg
fsubl
dec
inc
ds
fisttpl
cli
leave
push
les
mov
jmp
bound
adc
or
pop
addr16
jp
sti
jl
filds
cli
aad
fbstp
in
movsl
pop
add
xchg
bound
pop
addb
add
add
cmp
leave
in
test
and
push
or
dec
cmp
dec
pop
mov
dec
movsb
aaa
inc
ret
dec
in
aaa
xchg
xchg
fmuls
push
pop
movsl
insb
lds
adc
mov
push
scas
pop
push
adc
mov
and
mov
mov
add
xor
inc
test
jp
jp
lods
fdivl
dec
dec
es
outsl
lock
mov
push
inc
add
test
mov
in
xchg
repz
add
pop
fildl
enter
lret
sti
rcrb
and
aad
jecxz
fcoml
inc
push
repz
shll
push
movsb
scas
cmp
pusha
jae
insb
push
push
push
pop
dec
push
dec
jo
pop
mov
or
jne
mov
sub
sarl
sbb
cld
mov
and
dec
cmp
xor
or
arpl
ds
mov
inc
mov
push
hlt
in
xchg
aas
mov
lahf
jmp
xchg
push
sub
mov
add
sbb
lods
mov
xchg
jl
xchg
mov
fwait
shrl
popf
or
lret
add
sbb
jae
cmp
jns
mov
adc
cmpsl
jmp
in
leave
bound
jge
mov
adc
aad
inc
lea
das
add
in
outsl
sbb
in
add
mov
inc
and
pop
mov
push
test
in
mov
mov
or
cmc
les
out
xchg
push
movsl
es
xor
aam
xchg
pop
aaa
jno
mov
jb
fistps
add
arpl
and
mov
clc
cmp
insl
cli
addb
insl
rorb
sbbb
pushf
bound
push
mov
aaa
jle
xor
add
inc
push
fidivrs
dec
jecxz
ljmp
jno
ret
mov
je
in
sbb
rcrb
test
lock
sbb
add
jmp
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
push
add
add
add
add
add
subb
mov
loope
cmp
lahf
mov
dec
stc
int
add
rcrb
cmp
dec
jmp
push
cmpl
jae
xchg
dec
mov
imul
mov
in
mov
pop
inc
fs
and
in
xor
sbb
data16
add
adc
idiv
imul
pusha
inc
ss
inc
sub
clc
arpl
adc
add
xor
icebp
mov
lea
or
repnz
jo
add
sub
pop
gs
scas
jl
inc
push
addr16
push
insl
push
sbb
pop
andb
fisubs
mov
mov
nop
ds
lock
dec
cmp
lret
push
mov
out
pop
push
mov
sub
push
adc
mov
and
fmul
xchg
cmp
pop
daa
jge
sbb
cmp
xchg
dec
xor
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
