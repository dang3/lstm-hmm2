push
bound
push
sbb
add
push
adc
and
lea
les
gs
add
shlb
xor
jae
xor
sub
mov
outsb
shr
cld
pop
cmp
stos
inc
mov
cmp
pop
adc
ljmp
leave
stos
fisttpl
call
pop
dec
outsb
imul
gs
lcall
mov
dec
movsl
inc
popa
insl
popf
push
fcomps
pop
out
sbb
fnstsw
cmp
test
pop
cwtl
test
pop
outsl
lds
lods
pop
in
sub
jns
xor
xchg
arpl
push
mov
outsl
cwtl
and
dec
mov
xor
jns
loop
ds
negb
jns
fs
push
dec
rorl
jo
jge
test
ret
aaa
mov
cmp
pop
sub
fld
lahf
jb
pop
inc
ja
in
push
hlt
test
inc
test
in
xchg
out
loop
mov
jecxz
xchg
adc
xchg
test
inc
movsb
push
mov
cltd
xchg
sbb
or
or
shr
shlb
pushf
mov
aad
jg
and
adc
and
adc
fsubl
in
xchg
rcll
pop
sbb
insl
lods
rcr
shll
xor
or
aas
xlat
pop
out
clc
jmp
mov
mov
mov
xchg
mov
iret
and
push
mov
or
jo
gs
imul
sbb
mov
adc
in
jecxz
adc
xchg
xchg
into
mov
lds
jno
out
pop
pop
js
popf
ficompl
mov
jne
mov
xchg
sbb
dec
xor
cs
lds
pop
mov
ss
orb
jp
mov
repz
dec
cmpsb
loopne
cli
test
mov
mov
mov
inc
fwait
and
jns
ret
into
push
in
in
xor
pop
fildll
pop
in
lret
push
push
repnz
add
cmp
jg
fiaddl
das
mov
jnp
fisttpl
rcrl
call
mov
lods
mov
push
les
push
into
jne
lods
aas
les
test
jbe
xchg
shlb
xor
pop
int
fiadds
das
xorl
inc
inc
adc
shlb
mov
sbb
adcl
xor
push
cmpsb
cmpsl
mov
cmc
int
or
adc
pop
iret
ror
inc
jmp
or
test
or
in
mov
js
movq
hlt
inc
mov
ret
and
ret
in
mov
lret
add
aam
pop
sbb
dec
addr16
pop
movsb
js
loop
addr16
outsl
mov
out
dec
aas
xor
daa
xor
and
mov
push
xchg
pusha
out
pop
xor
lds
sti
mov
les
inc
cmpsl
in
xor
cmpsb
and
sub
clc
jge
scas
sar
rcl
stos
dec
movsb
jmp
sarl
loop
lods
popf
sub
cli
pop
mov
cmc
imul
cmp
push
filds
xor
cli
out
push
mov
popa
cmp
rclb
negb
ret
inc
stos
dec
stos
popf
jge
into
in
cmp
push
daa
push
or
repnz
and
movsb
sub
jnp
shl
push
fnsave
les
das
jae
fsub
arpl
aam
xlat
stos
je
sbb
xchg
rorb
stc
mov
push
movsl
mov
imul
jb
sub
sbb
mov
subl
int3
dec
mov
push
int3
sub
cmp
js
cmp
fisttpll
dec
and
std
es
clc
rclb
fwait
add
stos
and
sbb
jae
push
mov
lret
js
lods
jge
push
mov
jno
pushf
mov
in
push
add
fisubrl
je
data16
pop
mov
nop
dec
pop
pushf
inc
cmp
enter
cmp
addb
fists
sbb
and
fcompl
ss
popf
repnz
lods
aaa
adc
mov
js
lret
shlb
sbb
mov
pusha
in
rcrl
push
loope
sub
mov
sbb
add
pop
and
inc
lock
mov
sub
adc
loop
jmp
les
loopne
mov
push
xchg
xchg
in
pop
and
lods
sub
pusha
pop
imul
orb
push
aam
cmc
rclb
lahf
fwait
cmp
push
cmpsb
pcmpeqw
into
cmpsb
dec
cld
inc
test
call
lret
pusha
cmc
push
in
jnp
sub
imul
test
add
mov
and
notl
pushf
hlt
in
push
loop
dec
sti
push
bound
cmp
loop
mov
mov
loop
and
mov
test
stos
jl
ja
jnp
add
jbe
nop
inc
cmp
mov
pop
sbb
mov
out
push
int3
bound
jnp
sub
dec
xchg
fwait
or
push
and
pop
bound
and
jmp
dec
in
lcall
sbb
icebp
sbb
or
mov
mov
fimull
stos
cmp
in
sub
mov
dec
and
hlt
sbb
jb
and
mov
sbbb
adcl
fidivl
sbb
dec
inc
dec
inc
ds
jle
mull
or
pop
int3
test
fdivr
mov
data16
sub
jmp
mov
push
sbb
adc
jmp
mov
and
fstp
dec
addr16
push
shr
call
xchg
pusha
fsubrl
xchg
adc
fdiv
dec
sbb
fs
dec
nop
xchg
ret
sbb
ja
loope
dec
jecxz
sub
xor
vxorps
add
sub
aam
fwait
je
ret
xchg
mov
sbb
testl
cmp
int3
xorl
xchg
pop
clc
inc
adc
ret
aas
imul
loopne
or
push
push
push
scas
mov
sbb
push
bound
sbb
loop
cli
pop
adc
inc
jle
nop
push
xchg
xlat
pop
sarl
data16
cmp
inc
in
mov
xor
cmpsb
ror
repnz
test
test
cmp
fwait
push
mov
mov
cmp
push
pop
sub
dec
xchg
cwtl
push
add
sbb
mov
mov
jge
lahf
ds
xlat
ja
outsl
lods
sbb
data16
sbb
add
jmp
imul
ja
push
fmull
add
push
dec
xchg
sub
cld
push
xchg
push
pop
repnz
js
cld
bsr
add
out
jle
jne
ds
lea
ljmp
cs
gs
into
jecxz
lret
daa
mov
lcall
lea
cmpsb
push
aas
mov
mov
aas
cmp
or
jp
pop
repz
pop
dec
cmp
mov
insl
jmp
xchg
xchg
fistl
sti
std
or
push
pop
fstpl
xor
xchg
pushf
repnz
aam
repz
inc
lds
outsl
push
cmpsb
js
jmp
cwtl
ljmp
push
sahf
mov
sbb
in
add
cwtl
mov
push
ljmp
xor
imulb
jno
scas
rclb
sub
fprem
rcrl
ret
push
fadds
cwtl
adc
push
adc
call
push
fs
outsb
push
mov
pop
mov
adc
sahf
xor
stos
ficompl
dec
push
subl
popf
pcmpeqd
rcrl
ja
fisubrs
cmp
out
xor
mov
xorl
pop
int3
add
and
nop
or
mov
iret
in
inc
and
push
in
jl
das
inc
cli
out
jne
lcall
rcr
ja
xlat
addb
shll
cmp
or
mov
jae
inc
jle
shll
loope
pushf
fldcw
xchg
xchg
shl
or
aaa
pop
test
pop
push
ror
cmp
mov
es
inc
outsb
mov
movsb
ljmp
neg
sahf
subb
daa
bound
dec
stc
int
popf
movsb
pop
mov
outsb
pop
inc
ffreep
cmp
cmp
addb
inc
add
jb
pusha
sbb
cs
pusha
hlt
push
inc
sete
bound
mov
xor
cltd
and
movsb
rcll
sub
je
sbb
rcl
cli
enter
std
popa
xor
fldenv
insl
dec
push
mov
mov
hlt
shrl
xchg
dec
adc
out
dec
in
leave
outsl
popf
shlb
pop
loope
pop
filds
jno
or
add
test
inc
idivl
pop
and
or
stos
sub
mov
fistl
aam
dec
fcomp
xor
cwtl
loope
ret
sub
popa
cmp
aas
xchg
inc
sbb
cs
adc
sub
movl
insl
mov
xchg
jae
jle
jmp
add
fs
cmp
fisttpl
sub
scas
hlt
xor
push
dec
jge
mov
shrb
mov
sbb
in
enter
inc
or
add
testl
dec
insl
cmp
sbb
lock
sbb
pop
cmpsb
enter
lods
das
cmp
cmc
sub
int3
inc
adc
repnz
aad
fwait
jg
adcb
adc
cltd
insl
sbb
xor
cltd
sti
and
inc
mov
cwtl
cli
popa
outsb
sbb
ljmp
mov
imul
xchg
mov
jbe
ja
arpl
or
scas
daa
or
in
add
mov
rcrl
add
dec
adc
inc
mov
xor
ss
mov
jae
fbstp
mov
sbb
jb
adc
sbb
outsl
repz
jge
and
add
or
mov
adc
pop
dec
ficomps
loopne
xor
push
test
jbe
sbb
xchg
sub
aaa
je
stos
subb
adc
xchg
repnz
mov
inc
cmp
xchg
loop
imul
mov
push
push
inc
clc
pop
jge
in
in
push
push
fimuls
pop
es
rorb
testl
mov
xchg
inc
mov
repz
mov
sub
lds
test
mov
inc
mov
pop
sbb
pop
mov
jle
adc
out
shll
inc
mov
pushf
dec
inc
dec
test
ret
sbb
push
popf
fcmovu
sub
jnp
notb
ficoml
ret
push
daa
push
jne
inc
push
dec
and
push
pop
xor
stc
nop
out
sbb
mov
movsb
imul
jmp
lcall
scas
jno
cmp
pushf
stos
loope
test
pop
adc
dec
in
hlt
push
or
aas
pushf
dec
inc
setnp
xchg
and
pop
inc
push
fistps
push
jns
mov
in
inc
rorb
mov
jmp
pop
lcall
andl
push
xor
jg
xchg
das
sub
adc
jae
add
cwtl
mov
pop
inc
xchg
lods
testl
xchg
in
das
push
pop
fs
dec
vmovntps
pushf
push
add
xchg
push
mov
cmp
mov
mov
adc
adc
inc
or
ret
add
xor
xchg
jge
inc
or
inc
lret
sub
jle
loopne
sub
sti
ror
jmp
jl
lock
sub
add
dec
cltd
add
test
decb
dec
cs
mov
es
test
shl
aad
mov
pop
das
or
xor
jnp
fwait
sbb
int3
xchg
adc
push
xor
dec
ret
mov
push
mov
in
adc
jno
or
mov
xchg
cld
rcll
mov
movsb
int
ficoms
sbb
dec
xlat
lret
jge
loop
into
lds
mov
xor
cmp
pushl
jl
push
lret
sub
repz
in
xor
popl
sbb
out
add
mov
int3
xchg
sub
mov
das
pop
push
sub
dec
jo
repz
push
lods
imul
lea
addr16
pop
or
adc
pop
lret
or
xor
popa
mov
out
int
loop
push
loopne
int3
adc
mov
cmp
dec
push
mov
push
or
into
ds
bound
dec
cmc
adc
test
and
inc
push
in
or
test
sbb
shlb
mov
icebp
mov
bound
mov
insl
add
lea
scas
rcll
repz
cmp
pop
test
push
in
mov
sahf
jnp
jge
aam
cmp
int
sub
or
jb
cmpsb
and
in
cli
mov
inc
inc
loop
movb
pushf
test
sub
push
jp
out
jnp
cmp
pop
sub
sahf
push
fldcw
ljmp
jg
je
lret
lret
cltd
inc
subl
push
push
imul
sub
test
jno
xlat
std
jns
and
sub
mov
lahf
xlat
and
shll
mulb
dec
jb
sub
mov
nop
lods
mov
push
add
xchg
mov
pop
jmp
and
pop
dec
inc
mov
mov
mov
and
jge
outsb
xlat
into
pop
sub
iret
mov
loope
adc
aam
fldpi
mov
mov
es
fmuls
lret
xorl
adc
rorb
and
mov
notb
pusha
adc
pop
xlat
push
pushf
call
mov
fstl
mov
insb
dec
pop
lods
xor
iret
mov
fisubrl
movntq
xor
pop
mov
sbb
mov
cld
ljmp
popf
push
popa
test
jb
in
andnps
and
xlat
ss
xchg
in
push
icebp
adcl
test
cmp
cmp
add
lret
push
pusha
daa
fistpll
xlat
stc
jge
jne
pop
or
xchg
in
sbb
lock
xor
xor
mov
sbb
sahf
je
fisubs
inc
fcomps
or
aas
shll
add
push
ljmp
inc
mov
pop
mov
mov
mov
mov
push
bound
pop
pop
idivl
sub
lret
lahf
adc
addr16
in
and
icebp
js
xchg
pop
enter
jmp
mov
lret
lods
and
jno
ja
aam
cli
loope
out
fists
clc
push
and
test
lret
mov
ret
movsb
and
lods
test
fisubrs
std
jbe
cmpsl
pop
push
add
pop
cmp
arpl
mov
mov
mov
mov
push
jne
icebp
mov
pusha
adc
nop
or
ret
dec
movsb
add
fs
or
pusha
sar
adc
jp
xchg
lods
pop
jmp
lea
rol
ret
mov
xchg
xchg
lret
add
fistps
clc
pop
xchg
test
cmp
inc
in
mov
iret
or
jnp
push
das
jnp
push
add
in
and
mov
inc
push
dec
shl
add
inc
sbb
stos
pop
cmp
dec
mov
shll
adc
movsl
icebp
ljmp
out
push
xchg
and
add
pop
cmp
dec
ss
stos
icebp
inc
decl
cmp
sub
rorl
icebp
pop
mov
or
imul
cmp
pop
inc
push
movzwl
leave
imul
xorb
shll
notl
dec
push
cmc
jne
in
mov
jnp
leave
pop
out
adc
aaa
clc
cmp
xchg
loopne
ficoms
xor
cwtl
js
aad
mov
inc
mov
popf
addl
and
int3
test
imul
dec
fcompl
adc
bound
in
or
cltd
inc
movsl
lahf
mov
sub
mov
out
repnz
sub
roll
stos
into
add
sbb
js
add
cmpsl
shll
cmp
bound
xchg
cmp
adc
mov
inc
and
test
push
inc
jb
loop
xchg
mov
stc
push
ss
mov
icebp
pop
cs
mov
xor
arpl
adc
call
pop
lret
cs
jl
ja
sbb
ljmp
mov
push
mov
xchg
xchg
push
push
jo
ret
sub
cwtl
cmc
sahf
loopne
sub
lret
jecxz
and
sbb
sahf
xchg
ficoms
fsubs
mov
stc
inc
mov
add
sub
shrd
ja
jp
out
daa
mov
or
cld
sahf
jns
das
decb
in
jg
mov
mov
divb
sbbb
mov
cltd
inc
daa
cld
inc
push
js
stos
sbb
cmp
mov
test
hlt
pusha
adc
clc
sbb
es
xchg
sbb
nop
or
fcomi
or
or
dec
sub
fstpl
pop
or
jecxz
clc
fwait
mov
push
test
push
and
lret
mov
mov
pop
jb
jmp
movsb
jno
scas
or
cld
xchg
rcrb
dec
mov
adcb
into
stc
add
mov
pop
adc
xchg
jecxz
mov
das
jns
cmc
test
jnp
lods
cltd
sbb
stos
cmpb
mov
ror
dec
and
cmpsb
push
dec
pop
mov
in
pop
push
jne
inc
or
aad
fnstenv
xor
enter
jp
mov
lret
lahf
stc
jb
mov
xor
mov
addb
scas
out
out
cltd
int3
xchg
std
inc
xor
bound
inc
or
ret
cmp
xchg
cmp
pop
loop
jnp
cmp
incb
mov
sahf
jl
and
lock
ds
and
and
push
jecxz
pop
xor
mov
push
mov
cmpl
inc
push
rcrb
push
fldenv
push
stc
xlat
outsl
push
ret
sub
dec
addl
xchg
aam
mov
into
pop
mov
pusha
es
push
std
insl
mov
xchg
lods
lret
mov
jnp
jl
inc
adc
dec
dec
pop
loop
adc
mov
das
shl
test
push
mov
push
xchg
movsl
inc
cmpsl
mov
hlt
jns
dec
adc
repz
aam
test
in
mov
sbb
and
pop
lret
mov
enter
adc
pop
cmp
data16
mov
inc
mov
inc
cmc
mov
aaa
or
dec
push
jp
shl
fs
sbb
gs
jnp
dec
outsl
gs
inc
jecxz
add
fcmovnb
ficoms
in
and
xor
rcll
xor
daa
stos
andb
xchg
cli
int3
loopne
mov
push
xchg
cmp
ss
cmp
scas
adc
icebp
push
adc
cmp
mov
pusha
xchg
pop
cld
ret
lods
push
insb
xchg
inc
repz
jno
mov
push
mov
les
fwait
or
pop
cltd
lret
jg
aas
test
fmuls
sub
mov
loope
cmp
cmp
cmp
jnp
jmp
shll
adc
push
orl
pop
dec
scas
inc
jl
stos
dec
pop
aad
cmp
pop
mov
cmp
mov
mov
xsha256
cmpsb
adc
out
imul
push
push
mov
pop
push
mov
mov
pop
inc
imul
sbb
and
ret
ds
add
push
mov
inc
imul
mov
sbb
hlt
jno
and
out
lods
mov
jo
lods
addr16
xchg
ret
jb
mov
cld
fs
das
cmp
bnd
aad
pop
in
mov
dec
out
sbb
mov
pop
insl
inc
inc
mov
adc
jl
adc
inc
in
aaa
ret
fld
mul
push
movsl
out
pop
mov
add
push
cmp
movl
cmp
test
mov
dec
je
notb
ljmp
sti
std
les
mov
adc
dec
scas
xchg
cwtl
xchg
mov
movsb
sbb
adc
push
incl
out
clc
pushf
jns
cwtl
dec
jl
jl
dec
std
inc
inc
or
fists
dec
push
push
leave
jge
js
cltd
icebp
icebp
mov
arpl
lods
xchg
xchg
adcb
jge
fwait
imul
pop
lods
cld
sbb
cmp
shlb
ds
pop
rcll
loopne
outsb
repnz
push
std
fsubr
lret
xor
fwait
hlt
repz
iretw
mov
dec
popf
inc
cmpsl
add
mov
shll
sbb
mov
lcall
mov
test
xor
push
cmpsb
cli
mov
stos
cwtl
adc
lcall
movl
mov
aam
adc
inc
mov
adc
popf
jne
test
xor
lea
in
dec
or
lods
mov
push
sahf
jl
push
dec
out
mov
dec
lret
movsl
sub
add
aam
aaa
jbe
cwtl
test
aas
push
aam
aaa
dec
imul
add
inc
pop
hlt
sub
xor
jne
cmp
insb
mov
mov
add
lods
scas
jbe
cmp
dec
or
push
jle
xor
mov
cwtl
ja
scas
test
pop
xor
in
sub
mov
mov
add
pop
inc
lahf
mov
test
loopne
aad
test
ret
sub
in
xchg
gs
add
outsl
aad
ljmp
stc
jge
mov
sub
cmp
push
push
adc
paddusb
lods
mov
xlat
arpl
dec
in
sbb
mov
mov
repz
outsb
mov
pop
xchg
pusha
mov
and
testl
lods
fstpt
and
or
push
and
dec
pop
movb
lret
sbb
loopne
in
add
xchg
cmp
ret
push
add
mov
cmp
sbb
mov
cld
cld
aas
jge
popf
or
inc
xlat
push
xor
add
dec
fidivs
push
movsl
xchg
aam
mov
sbb
lds
or
mov
push
inc
jmp
out
mov
xchg
lret
xchg
daa
sti
roll
and
push
pusha
add
int
imul
sub
int3
jmp
and
test
sub
js
cmc
es
lds
fcom
in
jnp
leave
ret
cmp
rol
test
stos
sarb
roll
loopne
lods
jno
cmp
and
mov
call
loopne
push
lret
cmpsl
jnp
std
sub
insb
hlt
mov
out
fists
cli
iret
mov
push
mov
sbb
cmp
or
inc
xor
cmpb
cltd
mov
xor
push
fistpll
cmpsl
adc
add
imull
mov
in
sub
loopne
push
je
mov
dec
ret
inc
mov
subl
pop
mov
add
lods
mov
aam
push
add
rcrl
popa
stos
sti
nop
inc
mov
lret
sub
lods
out
fldl
aad
cld
cld
lds
mov
sti
add
bound
add
xor
jno
mov
mov
push
std
jns
sbb
ficomps
fwait
lahf
jg
in
lcall
jns
mov
inc
jbe
mov
xchg
gs
adc
jno
sub
add
mov
int3
jns
in
or
xchg
mov
sti
fwait
mov
dec
je
push
in
popa
push
out
cwtl
xchg
pop
sub
push
mov
adc
and
sarb
mov
out
int
cmpl
xchg
fdiv
bound
mov
in
fs
nop
and
lds
sbb
fimull
outsb
pop
mov
leave
cmp
push
add
add
mov
or
dec
jmp
pop
sub
and
repz
mov
insl
mov
pop
xchg
and
mov
sahf
cltd
add
push
fisttps
in
jnp
pop
imul
cmp
outsb
andb
daa
cmp
push
or
in
xchg
sub
sti
cli
mov
mov
mov
int3
shl
shll
xchg
mov
aad
mov
fmul
sub
xor
dec
or
arpl
fdivrl
lret
inc
inc
fadd
sbb
pop
lret
std
lret
testb
jbe
fadd
mov
pop
iret
jp
sarl
mov
cwtl
movsb
sub
sub
jne
fisubs
cmp
cmp
gs
lods
add
ds
andl
fstl
pop
inc
cmpsb
fsts
jne
loope
push
je
pop
mov
movsb
shl
in
fdivrs
shll
pushf
out
aaa
stc
jecxz
inc
movsb
or
dec
imul
or
sbb
dec
adc
and
sub
xchg
dec
stc
mov
fildl
hlt
mov
bound
in
inc
gs
in
and
pusha
outsb
add
push
sti
das
adc
inc
sbb
pop
mov
sbb
cmp
fcmovb
sub
push
mov
inc
adc
out
fnsave
mov
add
push
push
fbstp
lret
cmp
cmp
add
leave
jbe
popf
stc
mov
inc
fidivl
inc
inc
mov
sub
in
sbb
jge
and
mov
daa
stos
idiv
mov
pushf
fcoms
pop
sub
lods
popf
insb
insb
loope
inc
jle
fadds
jecxz
lret
lods
add
jne
je
jl
inc
push
dec
and
pop
lods
adcb
lock
adc
dec
inc
leave
je
in
fstl
sar
and
cmpsb
mov
fidivrs
adc
stos
outsb
sbb
mov
inc
in
ret
gs
jno
insl
clc
xor
mov
pushf
sahf
out
stc
dec
fbstp
js
mul
mov
mov
into
mov
and
push
je
repnz
mov
das
lret
out
and
xchg
xchg
mov
hlt
aad
mov
stos
or
mov
mov
adc
lahf
cs
mov
into
cld
mov
cmp
jl
pop
addr16
mov
decb
sub
jecxz
dec
mov
push
mov
test
fdivrp
mov
popf
lods
les
push
xchg
jp
jb
arpl
jnp
or
sbb
data16
mov
aad
push
aad
mov
idivl
fdivrl
rcll
enter
rcrl
lret
inc
pop
inc
movsl
or
dec
and
pushf
sub
xor
sub
xchg
subb
push
adc
ror
icebp
and
and
inc
mov
pop
test
cmpsb
pop
cmp
fldt
stos
xchg
mov
emms
out
push
icebp
int
add
fdivs
xchg
jmp
movsl
jmp
arpl
adc
fcom
stc
jo
enter
hlt
stos
call
jnp
lahf
cli
sbb
mov
pop
mov
sbb
inc
pop
scas
sub
loop
inc
or
mov
outsb
lcall
je
loop
push
ds
hlt
inc
cmpsl
std
loop
adc
mov
call
sub
pusha
popa
mov
test
jmp
clc
daa
mov
push
dec
aad
push
imul
pop
dec
movsb
pusha
enter
mov
leave
push
adc
or
sarb
leave
mov
jecxz
pushf
inc
test
jae
cltd
ljmp
inc
mov
pop
pop
lds
xchg
dec
xor
rcrl
xor
rol
cmc
ds
shlb
mov
jbe
cs
mov
adc
jbe
or
mov
jne
addb
jbe
roll
mov
imul
test
ret
or
push
mov
cmp
ds
rol
dec
cmp
pop
pop
imul
dec
in
xor
cmp
lahf
jne
or
aaa
push
data16
adc
loop
add
lock
add
cmp
in
jle
jmp
cld
xchg
mov
mov
leave
mov
popf
add
in
sbb
daa
jae
iret
mov
lret
inc
roll
push
adc
aaa
dec
repz
inc
mov
and
data16
adc
rcrb
fmull
push
cli
push
sahf
icebp
xchg
jecxz
int
adc
icebp
mov
sbb
std
and
pop
popa
adc
xchg
push
repnz
sub
into
jl
cltd
popf
scas
filds
push
jnp
iret
imul
fs
pop
fwait
mov
mov
lods
cmp
stos
adc
sbb
aas
jns
inc
or
call
fst
in
adc
into
and
pop
dec
add
jno
and
outsb
pushf
dec
and
sub
and
addr16
jns
fisubrl
cmp
xchg
cwtl
mov
cmpsb
ret
aad
mov
lret
repnz
outsb
jg
out
test
in
lock
cwtl
push
or
hlt
cli
sub
jl
pop
aas
add
adc
in
fbld
roll
rcrl
jl
sbb
or
shlb
cmpsb
test
push
cltd
mov
cmp
decl
xor
loop
xchg
scas
out
sbb
mov
push
sbb
and
data16
add
lcall
repz
ljmp
popf
xor
sub
jge
jbe
lods
jbe
and
jbe
pusha
in
inc
pushf
jecxz
insb
cmp
gs
xchg
jns
pop
jbe
xor
int
xor
mov
stos
xchg
and
and
sub
idiv
fwait
pop
mov
adc
ret
scas
stos
mov
jmp
nop
jno
loop
push
in
xchg
sbbl
gs
ljmp
sahf
aam
pop
mov
imul
gs
rolb
stc
insl
jmp
scas
mov
stos
xchg
jge
push
sub
dec
cli
mov
inc
fwait
cmp
sbb
data16
jo
cmp
stos
cli
outsl
stos
xchg
xlat
inc
cmp
lods
mov
sbb
pop
jo
adc
ja
fcompl
stos
jmp
xor
mov
add
loopne
cltd
mov
vmptrst
pushf
ljmp
cld
lret
mov
lret
mov
pusha
pop
fstpl
jmp
lds
out
mov
mov
jg
dec
repnz
ficoms
sbb
or
and
push
jo
shll
cli
pop
pushl
pop
and
push
adc
pop
mov
jecxz,pn
sub
xchg
pop
or
stos
pop
xchg
lods
inc
jge
pushf
nop
cltd
pop
dec
inc
ss
sub
lods
mov
mov
leave
fildll
addr16
sub
jmp
in
lcall
or
movsb
pop
sbb
adc
xlat
lea
push
fmull
sub
clc
pop
xor
cmpsl
add
cmp
sbb
pop
test
cmp
mov
lock
aaa
ja
mov
mov
pop
add
addr16
daa
lcall
aaa
cs
jbe
test
outsb
mov
ja
push
movsb
movsb
mov
push
push
iret
into
mov
inc
xor
sarb
cmp
lret
popf
pop
insb
inc
aaa
xor
lds
loopne
outsl
cmpsl
ljmp
test
dec
subl
push
js
ffree
push
adc
call
clc
adc
aaa
popf
pop
xchg
mov
jbe
lea
shlb
fdivl
cmpsl
test
mov
sbbb
mov
stc
sti
in
jmp
sbb
lcall
sbbl
push
push
iret
pop
lods
in
sub
ja
jge
xchg
in
nop
fs
mov
arpl
fdivr
mov
cmp
test
sbb
push
xorl
push
jo
lahf
jae
push
or
movsl
test
bound
mov
xchg
addr16
out
fistps
rcl
push
fsubl
or
inc
aam
adc
xlat
or
stos
dec
add
leave
cmc
xor
or
int3
pop
fmulp
imul
and
je
cs
cmp
aas
movsl
lahf
lret
daa
sbb
xlat
out
add
fistps
pop
mov
or
jecxz
xchg
lahf
and
add
mov
or
jne
jbe
sub
inc
insl
and
sahf
dec
push
jo
xchg
decl
je
jmp
loop
ficompl
pop
push
mov
jge
outsb
aaa
jg
mov
mov
xchg
popa
dec
lods
mov
jl
mov
pop
mov
cmpsl
adc
or
out
xchg
fistpl
jnp
sub
inc
daa
push
cli
aas
test
add
aad
cli
movhps
icebp
sub
pop
pop
add
push
clc
ss
lods
mov
pop
inc
daa
pusha
push
in
inc
jecxz
fmulp
lahf
xlat
orps
mov
and
lods
xchg
jcxz
fwait
shrb
shll
jmp
push
and
pop
sahf
pushf
mov
fcmovu
pop
popf
dec
cltd
enter
movsb
out
dec
jb
mov
in
xor
sbb
push
pop
iret
adc
hlt
inc
push
cwtl
push
lock
mov
sub
fsubl
add
insl
pop
nop
faddl
or
fs
mov
or
and
jmp
push
outsl
roll
xorb
lret
push
xor
in
movsb
out
inc
test
das
jle
test
stos
sbb
pop
fstpl
out
mov
xchg
into
dec
rol
or
xchg
jae
mov
rorl
test
push
lret
sar
shrb
call
cs
fwait
xchg
dec
and
outsb
inc
je
ror
adc
mov
xorb
or
out
mov
stc
ret
mov
in
jle
out
xchg
lds
test
fistl
leave
out
outsb
ret
rorb
fs
inc
or
inc
mov
mov
push
movsb
rcll
adc
cmp
fdivrs
inc
jg
sub
or
aas
iret
adc
rol
test
jb
dec
push
and
xchg
xor
add
add
gs
dec
loope
data16
push
inc
inc
jg
inc
sti
dec
addr16
cmp
jno
xchg
loopne
add
sahf
cmp
dec
add
cmpl
add
jno
and
jecxz
push
cwtl
or
xchg
push
es
rcll
in
js
loop
mov
dec
and
fsubr
jge
or
push
mov
lcall
enter
add
jmp
mov
mov
arpl
lea
inc
repnz
xor
jno
xor
push
add
mov
inc
add
in
xchg
fwait
push
add
sbb
sbb
jge
sbb
xchg
push
loope
in
or
sti
add
mov
lea
pusha
pushf
and
arpl
xchg
negb
sub
loope
xchg
pop
pop
xchg
push
subl
fistpl
pop
xchg
dec
aas
sbb
or
xor
in
ret
fmulp
push
adc
shrl
or
xor
lea
sbb
xchg
lds
adc
ror
pusha
arpl
inc
dec
or
fcoml
xchg
sub
mov
dec
push
ret
outsb
pop
inc
and
pop
mov
filds
dec
enter
jno
jne
into
mov
addb
cs
dec
and
and
int3
adc
dec
das
rorb
jno
push
nop
inc
dec
mov
insb
xchg
push
rclb
insl
add
shlb
xor
xor
scas
mov
xchg
xchg
or
inc
mov
push
cltd
cld
adc
in
mov
mov
lods
clc
xchg
shl
jp
inc
xor
jp
addr16
cwtl
mov
jno
add
stc
subb
jecxz
mov
test
test
jae
cld
pop
mov
xchg
out
jp
out
xchg
cld
xlat
xor
mov
jb
xchg
adc
cmp
mov
std
rolb
cmp
cmp
and
aam
or
xlat
stc
add
in
inc
repnz
xor
cmp
sub
enter
sub
push
in
lock
jns
jge
sub
out
stos
sbb
mov
stos
lds
or
pop
or
inc
sub
pop
iret
pop
aas
xchg
xor
ss
ds
mov
repnz
xchg
inc
rcrb
js
xchg
sub
xchg
xor
mov
in
sbb
mov
mov
dec
js
fsubl
gs
hlt
scas
dec
cwtl
ds
and
fnstsw
adc
dec
fadd
push
cwtl
fbstp
call
movl
aad
adc
pop
mov
cmpsl
cmp
xor
or
fldcw
into
shlb
lret
rolb
pop
and
out
out
out
cmp
and
outsl
inc
mov
adc
lcall
scas
cltd
je
in
xchg
insb
xlat
mov
jae
outsl
fdivrl
inc
rep
push
sub
adc
out
std
ljmp
xlat
stos
daa
shll
push
add
orl
test
fnstenv
aas
dec
push
mov
stos
cli
mov
repnz
andb
shlb
xchg
inc
in
xchg
imul
adc
std
xor
push
ss
fnstsw
mov
pusha
cmp
sti
nop
inc
fmulp
push
fcomps
stc
mov
xlat
inc
xor
notb
push
xchg
addr16
cli
push
hlt
adcb
lcall
lods
or
push
mov
inc
adc
dec
daa
push
das
add
outsl
and
cmp
icebp
mov
test
jge
mov
ret
cmpsb
push
insl
fidivs
js
test
enter
mov
into
sti
push
pop
or
dec
jmp
nop
and
mov
outsb
aad
push
fcomps
fidivrs
and
fstps
mov
push
push
stos
inc
out
sbbb
cmp
push
mov
shrl
cmpsb
test
or
mov
notb
in
pcmpgtd
je
int
xchg
hlt
mov
mov
mov
imul
add
jbe
jl
jb
lods
jbe
int3
push
adc
fwait
shlb
jbe
add
mov
mov
and
xchg
xchg
popf
dec
push
xor
testb
xchg
divb
pusha
jno
push
orb
xor
dec
adc
xchg
test
std
dec
scas
cmp
roll
in
mov
in
push
shlb
sub
push
test
iret
xchg
in
jl
rcrb
gs
sub
push
add
sti
inc
ja
push
push
jbe
xchg
sti
test
stos
clc
add
sbb
cmp
inc
lods
jb
xor
dec
mov
mov
iret
js
int3
mov
mov
ror
push
dec
repz
ljmp
leave
aam
mov
or
pop
cwtl
int
cmp
js
pop
in
out
and
out
imul
sahf
or
cld
push
sub
pop
scas
lea
jae
mov
and
xor
daa
pop
mov
sbb
cmp
push
lret
push
push
fs
xor
mulb
sbb
or
loopne
imul
repz
aad
frstor
sub
xor
xor
mov
xchg
pop
xchg
inc
adc
mov
cmpsb
lods
and
pop
addr16
testl
cmp
or
shlb
popa
push
or
push
push
ss
lcall
movsl
loope
in
jle
loop
mov
mov
mov
sbb
stos
or
stos
inc
shr
pop
mov
loopne
cmp
daa
fwait
xor
leave
mov
xchg
loopne
xchg
stos
jl
fcmovu
test
push
xchg
or
arpl
std
sarb
popa
pop
jecxz
lds
into
cmp
fimull
lock
aaa
mov
xchg
pop
int3
stc
int3
stc
mov
mov
sbb
lret
das
aam
and
add
imulb
inc
das
addr16
jo
sahf
and
mov
rcrl
out
mov
cmp
ja
lret
or
ds
pop
push
push
int
push
inc
mov
sbb
sar
cs
test
leave
loop
fisttpll
cmpsb
incb
inc
es
test
popa
mov
mov
in
fst
inc
inc
and
add
aaa
inc
sbb
psubw
inc
out
fadd
and
pop
movsb
mov
and
dec
cmp
push
test
inc
sub
pop
push
test
pusha
mov
mov
cmp
mov
sbb
jno
add
dec
stos
sar
std
mov
xor
int3
repz
dec
sbb
mov
test
add
inc
xor
add
mov
or
insb
lcall
xchg
aaa
jbe
jbe
push
xor
fdivs
insl
outsl
sub
adc
aad
or
test
xchg
mov
or
adc
in
sbb
adc
loop
sub
pop
xchg
or
hlt
add
xchg
adcb
xchg
inc
je
cmp
push
sbb
ljmp
cld
hlt
shrb
push
pop
lcall
xchg
mov
notb
or
aam
push
shll
cs
inc
insb
aaa
clc
into
incb
mov
cltd
lret
jo
inc
call
dec
xchg
enter
sahf
sarb
and
test
lcall
or
xchg
sahf
mov
mov
push
in
rorl
stos
add
jo
clc
pop
cmc
nop
mov
jp
pusha
repnz
test
adc
wbinvd
cmc
push
add
sbb
inc
sarb
rorl
sti
js
xlat
test
movsb
insb
nop
xor
xchg
sub
sti
call
outsl
inc
stc
enter
add
rcrb
cwtl
mov
sahf
fisttps
insb
cmp
xchg
sub
cmpsb
or
xor
mov
xchg
cmp
dec
mov
and
int
dec
push
les
jb
cmpsb
jg
pop
fwait
and
pop
mov
lds
cld
gs
gs
ret
lea
ljmp
scas
xchg
mov
fmull
mov
nop
ss
stos
push
cwtl
adc
gs
cmpsl
repz
and
dec
mov
in
jbe
mov
inc
imul
xlat
sub
jae
adc
das
pop
lcall
bound
cltd
fimull
divl
aam
xchg
iret
xchg
jae
addr16
pop
loopne
loopne
jns
xchg
or
movb
dec
sub
or
sub
lds
xor
repnz
and
rorl
xor
cmp
ret
push
sbb
push
loope
loop
adc
sub
mov
addr16
faddl
xchg
stos
leave
jbe
cmp
cmp
add
ficoml
mov
pop
incb
je
jne
insb
and
push
popa
inc
jnp
lea
cmp
mov
sarb
sarb
fisubs
lcall
cld
and
pusha
or
stos
xchg
shlb
pop
push
into
into
add
pop
in
int3
inc
subl
je
mov
jl
sub
xchg
dec
mov
jmp
push
jg
insl
movsl
pop
xor
shlb
xchg
mov
dec
cmp
inc
jae
xor
lcall
subl
mov
sub
in
iret
movsl
jmp
cltd
cld
cmp
ffreep
jmp
jno
xor
clc
mov
push
add
cmpsl
jnp
adc
push
repnz
icebp
outsb
js
js
cmp
add
push
inc
loop
std
ss
fld
aaa
mov
cmp
dec
xor
cmc
mov
outsb
ficomps
lea
cwtl
add
dec
ffreep
xchg
subl
addr16
jle
mov
dec
scas
cmp
outsb
mov
mov
mov
js
decl
pop
push
shll
mov
arpl
fcoms
mov
inc
pop
lods
outsl
xchg
sub
cld
cmp
ror
push
inc
popf
cmpsl
sub
in
mov
jnp
sub
out
scas
adc
xor
ret
ret
jnp
inc
repz
popf
popa
push
movsl
cmpsl
data16
sarl
xor
adc
sbb
or
imul
into
pop
xchg
sbb
test
push
aam
mov
cmp
lods
adc
movsb
push
roll
sbb
lahf
cmc
fidivrl
dec
mov
sub
jecxz
xor
cmp
sub
xchg
sub
sbb
sub
and
push
xchg
into
ds
xchg
or
gs
test
and
and
cld
cli
divb
mov
push
and
int
pop
out
mov
and
popa
jg
sarl
addr16
jb
nop
xor
add
sbb
sub
cmp
out
out
or
sbb
jp
push
gs
cmp
mov
arpl
lret
dec
loop
sub
jmp
push
mov
into
les
jae
addr16
das
movsb
ret
imul
push
mov
lods
outsl
mov
aam
mov
cmpsb
add
fucomip
shl
ja
and
xchg
in
out
jecxz
jo
cmp
sub
mov
xchg
mov
aad
movsl
push
inc
int3
inc
jp
dec
sub
xor
mov
push
push
fnstenv
or
je
fisubrs
out
out
jo
enter
int3
test
or
sbb
push
sub
lahf
mov
adc
mov
pop
mov
and
push
subl
ja
loopne
out
sbb
loopne
shl
repz
lahf
mov
imulb
add
adc
pop
mov
js
in
mov
jne
jo
fisttpl
cmp
mov
ret
in
scas
push
sarb
mov
rclb
xchg
push
movb
mov
push
cmp
fildl
sahf
iret
xchg
fmuls
or
daa
movsb
icebp
sbb
out
mov
sbb
cmp
test
lods
leave
test
push
and
mov
inc
fldlg2
cmpb
inc
push
add
inc
adc
out
pop
cli
loopne,pn
out
dec
sbb
in
sbb
xor
jp
cmp
dec
mov
sub
add
jp
fnstsw
int
adc
lea
push
int3
dec
cmc
out
std
mov
mov
lret
fstp
movsb
adc
mov
or
je
pop
and
xchg
out
loope
nop
or
das
mov
rolb
gs
test
jne
inc
gs
sub
mov
fsubrl
jg
xchg
xchg
ss
out
arpl
pop
mov
int
jp
dec
inc
mov
lcall
xchg
mov
and
arpl
insl
sub
mov
subl
cmc
das
and
call
ss
es
out
es
out
hlt
cltd
jge
dec
ljmp
push
sub
inc
mov
pop
jge
cmp
push
fisubrl
lret
add
pop
sbb
aam
jae
fdivs
movsb
inc
stos
cli
movsl
or
adc
dec
lock
or
jno
test
sub
cmp
adc
jb
adc
stos
test
or
imul
and
adc
in
fiadds
out
sub
push
js
pop
sarb
mov
mov
mov
and
jle
dec
push
ss
in
cld
xchg
jne
fsubs
rolb
in
sbb
sbb
mov
mov
add
out
orb
xlat
push
pop
inc
loop
pop
mov
fdivs
mov
xchg
jns
fs
lods
push
or
adc
add
punpcklbw
dec
cs
aas
out
mov
dec
ret
mov
ret
shlb
push
pop
js
insb
jne
insl
rcrb
out
aaa
rorl
mov
loope
adc
cli
or
scas
fs
inc
ja
sbb
mov
idivl
lcall
ret
mov
push
push
cmp
jmp
add
jno
sub
xor
test
outsb
je
mov
and
sbb
jmp
cmp
ds
pop
into
xchg
imul
ljmp
adc
popf
jns
push
scas
cmc
stc
sbb
in
mov
cmp
lcall
jb
test
insl
out
or
fidivrl
jae
mov
dec
mulps
or
mov
inc
push
in
pushf
mov
xor
xchg
bound
and
sub
arpl
xchg
inc
lahf
sbb
pop
jle
lcall
add
cmp
scas
jle
outsl
mov
add
addl
add
jae
mov
mov
inc
or
ds
lret
inc
xor
out
mov
sub
push
cmc
xlat
mov
or
mov
sbb
int3
cli
shlb
movsl
mov
mov
ret
push
or
pop
ja
or
imul
into
push
inc
pop
inc
push
cwtl
pop
jno
lret
cmc
in
jno
push
insl
sub
sub
aas
nop
inc
and
xor
mov
inc
mov
push
popa
leave
addr16
dec
add
scas
adc
dec
xor
xlat
sbb
or
cmpsl
xor
fidivrl
fdivl
loopne
push
xchg
fwait
cmpsb
stos
pop
adc
pushl
mov
loopne
xor
aaa
adc
loopne
rcrl
int
std
mov
movsb
jmp
int
jbe
mul
jle
xor
loop
gs
repnz
div
lahf
jle
inc
lds
sti
dec
pop
jge
into
insb
cmpsl
jg
cmp
movl
dec
imul
mov
pushf
mov
fldenv
adc
cmp
adc
fldl
xchg
in
icebp
pushl
dec
ret
push
divb
mov
sbb
data16
sub
shlb
pop
jg
ljmp
fmull
adc
test
loopne
inc
lds
es
out
mov
cmp
add
addr16
int3
sbb
int3
add
loope
ds
pop
adc
emms
sar
shr
inc
add
xor
out
inc
mov
inc
xor
xor
sbb
inc
mov
cli
mov
mov
ret
cwtl
leave
int3
or
cmp
adc
and
jl
push
fucomi
xor
mov
lods
sub
jo
mov
scas
mov
jecxz
adc
movsb
ljmp
mov
mov
out
outsl
ljmp
scas
or
sub
cmpsb
out
and
sbb
inc
mov
lcall
xor
push
adc
daa
testl
cmp
cmp
mov
arpl
cmp
and
mov
fiaddl
inc
loopne
call
sbb
ja
jp
test
xchg
cli
jo
in
inc
sub
sub
loope
xchg
icebp
xor
or
jns
lahf
lcall
xor
mov
jge
pop
xchg
lret
rolb
pusha
cmpsb
ss
shlb
enter
jmp
xlat
ss
jecxz
enter
adc
inc
cld
sub
sub
xor
ret
out
or
fiadds
sahf
mov
iret
ret
push
sbbb
push
sarb
xchg
leave
jmp
jg
ds
movsl
out
mov
into
adc
or
pop
mov
push
lcall
or
xchg
testb
xor
fdivr
mov
shrb
imul
mov
xlat
xor
nop
jne
mulb
std
xor
inc
dec
lods
xor
mov
inc
mov
fsub
sbb
aaa
push
inc
pop
push
popf
push
ret
adc
dec
dec
push
inc
pop
mov
clc
xchg
clc
pop
inc
or
mov
and
pop
add
in
xchg
movsl
mov
cmpsb
out
lcall
dec
sti
into
out
cmpsb
iret
jno
xor
shll
clc
int3
cmp
adc
pop
sub
aaa
into
adc
jge
adc
test
or
sahf
lods
div
jmp
xor
nop
cli
nop
inc
test
sub
fwait
sub
in
cmpsb
sbb
dec
mov
cmp
mov
mov
lret
xor
xchg
xchg
ljmp
cli
nop
add
xchg
lret
sub
gs
loope
sahf
xchg
or
int
cmc
sbb
lahf
xchg
xor
mov
icebp
das
lods
jmp
je
out
inc
push
testb
iret
pop
mov
loop
movsl
xchg
bound
rcrl
or
mov
repnz
test
and
push
cs
jae
sar
pop
lret
pop
lahf
push
fildl
movl
mov
pop
mov
aad
or
mov
cmp
jbe
mov
mov
in
ss
lret
mov
ret
mov
shll
shrl
lahf
xchg
or
ljmp
ja
dec
pop
daa
push
jge
sti
jg
lcall
sub
mov
xorl
filds
cmpsb
pop
pop
andb
pusha
daa
out
sbb
nop
fildl
jg
or
xor
cmp
sarb
mov
jbe
rorb
adc
mov
adc
push
xor
cmp
roll
mov
stos
add
push
hlt
inc
jecxz
ja
jl
push
push
or
adc
pop
dec
movsb
fwait
pop
mov
mov
test
and
inc
aas
test
add
xchg
adc
call
jae
push
adc
jae
sub
ljmp
adc
add
dec
jne
dec
sbb
xchg
enter
dec
ss
aaa
xchg
scas
pop
inc
push
fadd
ret
cmc
mov
scas
pop
inc
jge
or
imul
adc
pop
int
movsb
xchg
les
mov
dec
repz
je
xchg
pop
push
add
lret
test
es
cltd
sub
std
ss
sub
dec
sbb
pop
aad
inc
sbb
sub
dec
adc
test
je
outsb
dec
mov
pop
and
imul
xchg
mov
xor
and
cwtl
push
icebp
or
aam
fldenv
lock
std
xchg
pushf
cmc
lods
fidivrl
mov
jle
dec
jne
lcall
paddsw
mov
rclb
ljmp
add
xchg
fadds
sbb
scas
movsb
xchg
or
xor
scas
pop
cli
cmp
jmp
mov
lds
pop
push
sub
scas
xchg
mov
jle
pop
xor
mov
xchg
mov
enter
dec
int3
sbbb
je
outsl
clc
mov
jg
ds
xor
push
pop
leave
jecxz
lret
aam
sbb
loopne
adc
test
repnz
mov
addb
push
dec
adc
and
mov
pop
push
loop
mov
mov
out
add
and
aas
or
and
mov
popa
repz
mov
pusha
sbb
mov
xchg
aaa
or
pop
cli
stc
lods
enter
std
jle
mov
xor
in
std
cmp
add
or
push
add
jbe
and
push
inc
and
adc
pop
aam
pushf
aas
hlt
inc
mov
subb
lods
int3
cmpsb
cmp
jmp
pop
enter
lods
in
mov
or
xchg
testb
mov
dec
cmp
fcomps
in
in
pop
jle
out
sub
inc
mov
cmpsb
mov
push
mov
ja
mov
out
xor
mov
sub
fisubrl
xchg
outsb
and
data16
clc
nop
inc
mov
leave
sti
pushl
xchg
or
insl
ret
adc
cmp
sbb
into
les
lahf
lcall
or
push
mov
jecxz
xchg
xchg
add
pop
cmpsb
ja
test
das
idiv
mov
add
mov
or
data16
fwait
test
cmp
imul
push
sub
pop
repz
fstl
jmp
cmp
sub
insl
jo
xor
mov
xorb
jne
mov
lds
lds
mov
or
jl
jne
cmp
mov
popa
xchg
rol
cmp
or
add
pop
ret
aad
sub
sahf
and
insb
test
pusha
popl
dec
in
aas
jl
mov
pop
scas
push
jae
sub
push
mov
mov
das
ljmp
push
sub
xchg
cmp
stos
jne
mov
imul
bound
push
sub
xchg
rcr
jp
movsl
ss
orl
mov
in
dec
pushf
rorl
cs
fistps
stos
clc
out
ret
push
arpl
cmp
mov
movsl
or
pop
ljmp
sub
jmp
mov
cmc
stos
dec
out
dec
stos
sti
push
inc
pop
or
popl
jnp
lock
sbb
repz
cmp
sbb
imul
pop
addb
cmpl
cld
xchg
pop
cmp
les
inc
mov
adc
jnp
jle
jecxz
subb
and
ficompl
dec
cmp
in
js
pop
shr
jl
mov
push
inc
in
jo
mov
enter
stc
lret
es
mov
jecxz
push
mov
inc
mov
enter
aas
xor
test
push
adc
sbb
nop
and
std
in
adc
sub
add
lcall
jns
call
adc
out
out
push
iret
push
cmp
mov
add
sti
rcrl
inc
pop
xor
ja
or
pop
mov
inc
ret
fcom
mov
mov
lcall
lea
or
xor
movsb
add
sbb
and
push
xchg
rcll
and
adc
push
add
imul
imul
mov
outsl
jge
xor
jne
rorb
xchg
push
dec
mov
push
xor
push
aad
fs
roll
ret
mov
insb
xor
std
fidivrl
ss
mov
xchg
mov
sbb
pushf
add
pushf
ret
stos
enter
jbe
dec
sub
sub
outsl
add
fisttpl
xor
cmp
movsb
xor
es
dec
cltd
mov
sub
das
shll
xorl
dec
sbb
mov
push
jnp
cmp
sarl
cmp
xlat
rcrb
mov
scas
push
xchg
adc
repnz
out
and
nop
rorb
mov
out
nop
xchg
cmp
sbb
dec
in
popa
jmp
ret
adc
xchg
divb
sahf
clc
xchg
pop
or
mov
mov
loop
mov
push
xchg
aam
mov
or
xor
mov
addl
pop
mov
adc
sahf
loope
push
call
xchg
aam
jno
or
loopne
fimull
int
jb
out
adc
sub
mov
jo
cmp
leave
jb
xor
pushf
int
xchg
sahf
pop
popa
iret
jb
mov
cmp
ret
lods
insl
pop
into
xchg
lods
lock
int3
sbb
sub
out
adc
push
or
nop
icebp
rcr
loop
scas
mov
or
fptan
or
in
jp
ficompl
mov
jbe
cs
push
insb
in
addr16
or
cmp
cmpsl
mov
mov
inc
aas
xchg
mov
rorl
jge
lods
mov
ds
xchg
movsl
sbb
inc
mov
mov
loopne
push
ss
push
xor
dec
jae
lds
mov
jecxz
push
stos
gs
ds
stos
pop
lret
sarb
insl
popa
push
rcr
pop
pop
xchg
add
in
xor
mov
test
cmp
mov
cltd
test
cmp
andl
cltd
loopne
dec
ljmp
adc
imul
push
loope
out
test
lea
jle
adc
stc
mov
pop
shr
ss
add
jp
sbb
popa
add
sbb
dec
lods
call
cmp
xchg
push
cwtl
and
int
lds
cmp
popf
push
and
mov
sbb
into
test
inc
decl
jmp
fwait
cs
jne
mov
cli
xcrypt-ofb
cmpsl
test
shlb
dec
cwtl
mov
mov
or
idivb
les
xchg
mov
out
pop
adc
add
jge
add
pop
xchg
push
jb
push
sub
mov
xchg
xchg
jno
and
cmpsl
cld
int
cmp
subl
call
or
movsb
iret
push
ret
push
movsb
jle
adc
mov
fcmovnb
pop
mov
jle
mov
es
rolb
ss
adc
call
pushf
sub
jg
test
inc
daa
cmpsb
clc
scas
test
jbe
push
add
and
dec
je
loopne
adc
cmp
js
popf
pop
aas
jo
jb
adc
test
adc
inc
inc
sbb
insb
lds
inc
fcom
pop
mov
mov
cwtl
sbb
sbb
out
pop
rcrb
xchg
out
cs
dec
ss
cmp
es
sti
and
outsl
dec
movsb
add
outsl
test
cmp
lock
push
orb
sbb
icebp
iret
mov
dec
rcrl
xor
xchg
sub
shl
push
add
shll
jae
xchg
xor
dec
pop
pop
je
and
addl
in
adc
inc
addb
inc
jecxz
dec
add
popf
xlat
pop
mov
jno
xor
and
in
jge
xlat
cltd
leave
push
inc
jl
mov
dec
repz
mov
lahf
popa
bound
mov
std
pop
ret
scas
data16
jl
push
bound
nop
movsl
ret
mov
sub
testb
push
dec
jmp
stc
repnz
cmc
popf
add
jle
out
movsl
fisubrs
jecxz
aad
pop
mov
and
lcall
jbe
fsubrs
je
rcl
add
gs
xchg
into
mov
dec
add
mov
push
jmp
mov
subl
xor
jns
xorl
push
jae
mov
xor
out
scas
xchg
loope
jp
fldl
cmpsl
inc
cmp
ficomps
inc
ljmp
sbb
repnz
js
mov
jmp
call
les
inc
sbb
ret
into
test
stos
movsb
scas
push
in
xchg
xchg
outsl
xor
add
test
test
int
mov
xor
xchg
inc
pop
test
and
leave
add
mov
fwait
popa
test
sub
add
arpl
xchg
xor
test
inc
sub
jo
cld
cwtl
sub
test
out
or
shl
out
mov
outsl
cmc
mov
cmp
sbb
lock
out
rcrb
adc
insl
ss
lea
fildll
inc
out
xchg
xchg
movsb
out
sbb
sbb
xorl
in
dec
mov
daa
hlt
lcallw
ret
sahf
cwtl
push
sub
xchg
jge
or
jecxz
push
into
xchg
sbb
loopne
xor
test
adc
cmpsb
rclb
inc
mov
in
test
and
std
jecxz
inc
and
into
inc
repz
js
adcl
mov
rolb
inc
sahf
mov
jp
and
push
jo
mov
cmp
push
and
stc
roll
arpl
lcall
stc
inc
mov
out
push
adc
adc
fcmovnb
fmul
mov
push
aad
adc
pushl
xchg
sti
aaa
sbb
and
push
inc
push
fwait
cmp
lods
fidivrs
sbb
aam
out
sub
add
das
mov
mov
cli
add
sbb
sahf
mov
sbb
and
dec
xchg
pop
sub
push
sbbb
push
mov
and
mov
fistps
jl
sbb
or
movsb
mov
push
add
cs
adc
and
jno
aad
cmpsl
jmp
add
mov
movl
jne
jnp
insl
inc
negl
scas
xor
inc
mov
jle
inc
xor
jg
sbb
ljmp
push
aaa
andb
xor
xor
sti
push
adc
icebp
inc
js
sbb
int3
mov
stos
and
xchg
sbb
xchg
imul
jmp
xchg
mov
lds
adc
xchg
orl
mov
mov
sbb
cwtl
dec
add
js
pusha
imul
sbb
rcrb
and
mov
push
enter
xlat
ja
dec
insb
adc
fwait
mov
inc
xchg
or
pop
push
push
adc
movsl
fidivrl
or
into
inc
pushf
pop
clc
and
dec
popa
lds
rolb
cltd
push
jge
mov
imul
sub
sbbb
mov
mov
mov
out
fnstsw
dec
xchg
fbstp
cmp
outsl
in
and
xchg
sbb
or
loop
pusha
dec
jo
insl
mov
clc
pusha
movsb
pop
jno
test
lock
xor
pop
ljmp
loop
popf
pop
sbb
pop
dec
lods
push
xchg
pop
lahf
xor
insl
hlt
mov
inc
clc
in
sub
in
lods
out
loope
sub
add
and
gs
cmp
jge
cmp
xor
arpl
out
rcr
into
pop
repz
jge
popf
inc
addr16
xchg
outsb
and
mull
mov
mov
mov
or
mov
cmp
dec
stc
and
mov
sahf
xor
out
cmpsl
push
inc
xor
lcall
or
dec
in
adcb
cmp
add
call
cmp
cmp
incb
and
ljmp
popf
adc
sbbl
es
xlat
fidivl
dec
adc
mov
sahf
insb
jb
cmpsl
inc
sbb
std
lods
int3
xor
adcl
push
cmc
inc
std
xlat
pop
shll
and
out
into
daa
and
aam
add
sub
pusha
sbb
jbe
or
jb
leave
shl
and
jbe
mov
fistps
idiv
pop
fimull
call
push
cmc
cmpsb
xchg
mov
mov
mov
xor
pop
ss
xchg
in
mov
dec
jecxz
lock
lock
repnz
ss
mov
lret
cmpsb
out
jge
out
in
mov
out
ds
sarb
sub
movsl
std
or
fistl
sbb
push
xchg
sbb
nop
jmp
adc
xor
pop
xchg
shr
cmpsb
cmp
aad
ret
cmpsl
jb
arpl
popa
je
inc
aam
ljmp
push
mov
mov
sub
mov
std
js
js
out
push
dec
pop
xchg
cmp
cli
xor
mov
dec
into
nop
rcrl
and
stos
std
mov
sub
leave
jle
xchg
or
jge
inc
test
cmp
lahf
fstps
int
imul
mov
inc
inc
sbbb
movsl
mov
pop
lret
scas
dec
fsts
pop
pop
scas
icebp
inc
cli
movl
xchg
lret
sti
enter
push
mov
and
fbstp
cmp
stos
stc
mov
dec
out
cmp
shrl
sbb
enter
mov
inc
xor
int
divl
xchg
cmpb
out
rol
jne
mov
sbb
pop
and
xor
push
adc
push
cmp
xchg
lahf
and
mov
sti
xor
mov
movsl
and
stos
rol
mov
inc
inc
lahf
mov
pushf
test
stos
negb
mov
xor
cmpsl
pop
int3
push
mov
mov
push
xor
fmulp
pop
ja
xchg
fstl
mov
jne
insl
out
movsl
test
das
dec
xchg
sbb
stos
aad
xchg
fists
pop
dec
mov
add
sub
popf
push
sub
mov
cmp
push
sarb
jnp
push
stc
ficoml
and
push
push
loope
addr16
xor
pop
popf
rorb
jg
mov
adc
cmp
xchg
loopne
inc
inc
sbb
push
fidivrs
out
mov
ja
and
pushf
movsb
sub
xchg
ret
out
push
inc
xor
dec
lret
cltd
xor
mov
xchg
inc
mov
ret
and
fs
into
dec
lods
sbb
repnz
jb
xor
outsb
inc
lcall
insl
jle
mov
jns
pop
popa
pop
int
xchg
push
xorb
call
xchg
movsl
lcall
dec
in
jbe
insl
sub
inc
and
jp
imul
movsb
add
sbb
loope
out
jb
cmpsl
jns,pn
dec
push
fdivp
sbb
or
jb
pushf
testb
aaa
adc
dec
xchg
push
sub
bound
fisttps
fisubs
fists
insb
loopne
mov
fisttps
xchg
ficompl
add
xchg
insl
push
xchg
fsubrl
or
mov
sahf
mov
mov
and
inc
pop
insl
push
insb
inc
lock
sub
jle
sarb
cmp
aas
add
or
xchg
repz
dec
std
imul
subb
popf
and
adc
imul
mov
xor
ss
hlt
sbb
dec
pmullw
stos
arpl
xor
int
ficoms
push
adc
out
ret
jge
inc
ret
outsb
mov
insb
aam
jle
sbb
dec
add
push
lods
fidivrl
repz
lds
add
imul
dec
jmp
ljmp
or
xchg
stc
mov
in
movsl
push
or
ja
mov
mov
add
and
pushf
mov
stos
stc
cli
movb
js
addr16
loope
pop
push
lods
call
mov
aam
sbb
test
test
mov
and
dec
xor
sub
sbb
lods
sub
sti
mov
sub
jo
popf
sub
call
cmpsb
mov
jp
int
js
xchg
stc
dec
imul
sub
js
nop
xchg
sahf
cli
out
mov
orb
and
fstps
rcl
xor
mov
addr16
xchg
int3
xor
inc
pcmpgtb
out
sbb
cwtl
sti
add
push
jl
js
leave
movsb
int
mov
std
call
lods
data16
dec
mov
xchg
ja
repz
sub
xchg
push
push
jg
push
xor
cmc
scas
add
movsb
xor
pusha
fsubl
adc
jecxz
movsl
lock
and
xor
xor
hlt
in
lret
sub
aaa
xchg
and
xchg
lods
mov
cltd
and
lcall
pop
pop
clc
js
std
fnstenv
xchg
adc
into
push
sub
or
jo
mov
adc
std
pop
inc
into
aaa
xor
xor
outsl
fistl
movsb
aad
nop
mov
lock
mov
mov
loopne
mov
sbb
test
lret
out
xor
sub
pushf
aam
jns
cmpsl
jb
jg
sub
notl
aaa
mov
loop
arpl
fwait
sub
filds
sub
enter
fwait
aas
push
in
popf
rcrb
aas
out
loop
and
lcall
repz
je
add
cwtl
loopne
or
ret
and
arpl
test
sbb
xor
je
fldl
fwait
ret
inc
call
xchg
cmp
imul
outsb
mov
pop
aaa
mov
repnz
addr16
adc
out
push
xchg
mov
int3
out
mov
fsubl
jae
outsl
out
mov
jae
and
mov
pusha
dec
punpcklbw
jle
insb
fimull
xor
adc
in
lods
iret
cwtl
push
fidivl
mov
sub
sarb
xor
mov
sub
out
mov
or
daa
add
mov
dec
int3
ror
mov
fscale
lods
nop
popa
cmc
or
jne
fistl
sti
cmpsb
in
je
and
and
xor
add
mov
andl
shlb
inc
jbe
add
ljmp
mov
mov
push
mov
rol
lcall
and
pop
lds
and
xchg
ja
mov
mov
ds
mov
cmp
cmp
sarb
idivb
mov
in
sbb
icebp
shr
xchg
shrb
fs
xor
mov
mov
cmc
inc
das
daa
push
out
into
mov
cld
mov
enter
fsts
xor
test
enter
mov
sub
in
data16
xchg
ret
mov
inc
paddd
insl
int3
lods
aad
sbb
shrb
adc
lea
popa
shrb
inc
adc
imul
ret
test
xor
mov
pusha
jne
mov
sbb
mov
daa
fdivs
clc
mov
jge
fs
cli
adc
mov
xchg
fs
or
bound
adc
test
fsubrs
jl
sub
iret
inc
pop
rorb
icebp
and
xchg
xchg
add
mov
insb
es
clc
sbb
sahf
cld
pop
mov
dec
jl
jle
fmulp
rcrl
decl
dec
out
or
sbb
mov
es
inc
pop
fwait
mov
xchg
clc
ss
inc
pop
xchg
fwait
je
lods
xor
xchg
into
ret
mov
adc
push
aaa
neg
xchg
imull
lods
jae
pop
addb
xor
xchg
pop
fiaddl
outsb
nop
push
cwtl
sub
cmp
ret
lret
xchg
sahf
icebp
pop
jno
inc
push
mov
sub
xlat
xchg
clc
aaa
inc
cmp
jns
xchg
je
addl
dec
insl
mov
and
pop
xorb
outsl
sub
and
fwait
or
xchg
icebp
mov
cs
mov
sub
ret
pusha
inc
test
or
sbb
test
aam
ret
cmpsl
sub
cmpsl
aas
mov
and
cmp
jns
inc
dec
sbb
aad
mov
push
jmp
test
insb
shrl
rcll
shl
pop
out
fsubrl
test
jmp
into
movsl
sahf
gs
xchg
pusha
and
sarb
jno
popa
push
repnz
add
jbe
lcall
mov
das
xor
jl
jp
dec
daa
jno
sbbb
leave
mov
ljmp
xor
fucom
pop
loop
jl
jnp
loopne
cmp
cli
mov
in
xor
ja
inc
arpl
jle
in
in
xchg
fcomps
dec
orl
cli
outsl
sub
mov
sti
mov
add
js
jo
dec
lahf
jno
push
scas
jns
fs
outsl
idivl
pusha
dec
push
out
push
cmp
jbe
addr16
js
jns
loop
in
mov
into
add
add
ljmp
arpl
cli
push
pop
pushl
fistpl
jle
inc
push
jno
in
cmp
mov
push
and
pushl
lods
hlt
test
cmpsb
sbb
inc
mov
or
outsb
out
test
inc
out
dec
mov
daa
dec
push
jns
mov
mov
adc
adcb
fildll
push
mov
xor
mov
leave
imul
dec
jmp
notb
into
imul
mov
outsl
cs
popa
cmpsl
mov
xchg
xor
pop
cmc
mov
lods
pop
mov
and
or
les
movsb
dec
rcrl
mov
push
dec
sbb
int3
or
repnz
mov
lcall
xchg
xchg
sub
sarb
stos
and
mov
mov
in
andl
sub
pop
nop
in
gs
popf
sub
dec
xchg
call
jno
mov
mov
cli
mov
sbb
pop
fisttpll
adc
or
sub
sti
cmpsb
pop
aaa
lds
add
adc
pop
repz
js
push
mov
sub
out
and
lock
jmp
pop
lods
or
xor
inc
mov
les
cmovnp
cli
mov
mov
enter
add
mov
daa
fstps
xor
inc
cmp
or
aam
imul
or
sub
jbe
mov
jl
pop
outsl
sbb
mov
and
jno
insl
insw
inc
fbld
or
xor
push
shrl
aaa
cmp
stos
pop
std
enter
dec
inc
imul
inc
sub
xchg
iret
push
push
mov
insb
jl
imulb
repnz
pop
sbb
dec
into
ret
and
icebp
sub
dec
inc
sub
or
fmuls
gs
fs
sub
inc
lea
daa
fwait
repz
inc
adc
cltd
dec
jecxz
int3
ja
fnsave
mov
mov
push
ret
data16
cmpsl
outsl
cmp
mov
test
stc
push
xor
inc
pusha
mov
jne
inc
xchg
loopne
insl
jae
push
std
jp
aas
pushf
xchg
mov
push
push
test
mov
jae
std
aad
pushf
sbb
xchg
pop
rorb
clc
fcmovnbe
xchg
dec
dec
mov
mov
lahf
adcb
mov
dec
in
xchg
sbb
cmp
in
ss
adc
sbb
in
mov
add
fcompl
xor
test
sub
insb
fwait
or
cmpsb
lea
cs
icebp
mov
xchg
dec
xor
dec
mov
mov
sbb
lock
cmpsb
divl
pop
and
xchg
movsl
cltd
pop
xchg
fstps
rclb
rol
mov
mov
fucomi
sub
testb
pop
outsl
fldcw
test
inc
clc
mov
mov
mov
and
jno
cmc
rclb
inc
out
xchg
inc
inc
inc
movsl
sbb
pop
pop
sub
inc
fisubl
test
adc
mov
int
lods
or
popa
stos
pop
sbb
xchg
mov
or
clc
jbe
movsl
adc
dec
cmp
outsb
push
shrd
mov
sbb
or
sub
dec
inc
cmp
shr
mov
ljmp
xchg
call
dec
xor
mov
dec
ds
or
stc
xchg
or
and
inc
subb
add
mov
dec
sbb
adc
mov
jl
cmpsb
lods
fstl
mov
inc
std
pop
mov
lret
mov
test
mov
and
cmp
jnp
mov
mov
arpl
jg
cmp
add
inc
push
mov
jecxz
pusha
mov
mov
in
negb
and
lcall
mov
fisttps
xchg
xchg
push
xchg
pop
and
gs
outsl
in
push
xchg
inc
mov
movsl
repnz
pusha
aad
xchg
push
xchg
push
icebp
push
or
sub
pop
mov
dec
mov
push
jb
push
jl
sub
clc
out
sti
insb
sub
mov
fcompl
sbb
sub
cmp
hlt
icebp
nop
dec
sub
or
xor
fcmovnu
mov
pop
pop
ds
mov
inc
cmpsl
stos
inc
data16
pop
dec
in
loopne
out
xorl
inc
mov
sbb
mov
adc
push
dec
jb
aaa
adcb
jo
rol
test
dec
dec
inc
push
mov
push
push
out
mov
adc
loope
mov
xchg
or
dec
xchg
push
shrl
bound
pop
out
in
daa
push
imul
rorl
or
divb
push
insl
lcall
negl
or
xchg
es
or
mov
xchg
pop
ja
test
push
cmp
repz
push
cmp
ljmp
in
inc
ret
dec
scas
jp
js
dec
test
jns
jle
outsb
nop
repz
bound
xchg
mov
int
rol
imul
mov
popf
xchg
sbb
and
repnz
cmp
lret
add
or
fcomps
out
lods
les
jns
imul
and
lds
push
clc
int
mov
cli
repnz
jbe
push
inc
fmuls
jmp
inc
jl
dec
mov
clc
popf
fnsave
xchg
shrb
popf
mov
pop
mov
nop
and
je
clc
mov
dec
sbbb
cs
stos
cs
nop
pop
mov
gs
xor
mov
jg
test
mov
dec
inc
cmp
fidivs
shrb
fbstp
inc
adc
sub
mov
push
les
rorl
mov
xor
outsb
mov
lret
pop
xchg
or
inc
pushf
dec
push
test
mov
lods
and
inc
xor
nop
push
jg
mov
mov
repz
das
lds
push
sbb
cltd
nop
mov
stos
push
inc
jge
jg
ds
out
lock
data16
cmp
out
and
add
es
in
hlt
mov
lock
mov
dec
jae
mov
mov
shlb
mov
add
movb
mov
adc
mov
in
sub
add
popa
adc
stc
cltd
insl
ret
test
dec
mov
xchg
mov
add
pushf
test
out
lods
adc
test
addb
mov
ret
cmp
ret
xor
int3
xlat
jb
testl
mov
cli
loope
aad
mov
aas
in
sub
ror
lea
enter
clc
mov
jp
shr
sbb
ljmp
add
push
fnstenv
insb
push
cmp
cmpsl
and
mov
adc
xchg
lcall
add
mov
xchg
int3
lods
enter
sbb
dec
jecxz
sbb
leave
iret
leave
mov
sti
xor
or
es
loop
cltd
cwtl
and
and
in
frndint
pop
les
jnp
xor
lahf
xchg
push
insb
jnp
xchg
ja
lret
adc
stos
push
jmp
cs
cmpsb
cld
loope
jb
jmp
ret
lea
lahf
push
out
xchg
mov
paddusb
test
inc
mov
into
dec
dec
or
and
xlat
sahf
add
lahf
inc
lahf
or
mull
inc
mov
push
mul
pushaw
movsl
adc
pop
mov
push
and
sub
cmp
popa
out
mov
push
aaa
or
lahf
jne
push
inc
dec
fidivrs
iret
enter
cmpsl
loopne
call
xlat
jb
outsl
cwtl
adc
jg
orb
sub
cld
xchg
jo
lock
outsl
mov
dec
stos
popa
jmp
mov
sbb
jle
inc
iret
push
jecxz
xor
fdivl
call
jne
dec
sbbb
mull
jge
or
dec
xchg
adc
clc
fiaddl
ja
bound
stc
or
ss
ret
inc
jmp
pop
fldl
negw
push
repnz
outsb
sub
inc
or
test
ss
pop
sub
inc
jge
pop
call
out
cmpsb
popa
push
divl
xchg
fnstenv
add
scas
sbb
in
fisttpl
pop
add
pop
in
jg
adc
fadds
stos
cmp
je
fwait
sub
stc
ja
xor
out
jnp
loopne
out
movl
lock
sbb
inc
pop
outsb
call
cli
lds
call
movsl
fs
out
ja
jg
icebp
xchg
rorl
fstps
or
adc
push
mov
nopl
lret
push
stos
jno
stos
mov
stos
in
mov
adc
xor
pop
cld
cmp
sbb
fdivs
xor
mov
dec
jo
sbb
mov
or
jne
mov
jbe
jnp
xchg
or
sub
push
test
mov
inc
icebp
inc
mov
push
and
shrl
call
into
mov
es
mov
enter
dec
iret
addl
movb
push
mov
mov
je
push
mov
jno
addr16
push
sub
jno
xorb
cmp
jns
adc
sbb
fdivl
cld
aas
insb
in
sub
xlat
in
dec
aaa
dec
inc
jecxz
out
addb
mov
mov
fdivrl
mov
add
add
pop
lock
pop
sahf
push
popa
into
sahf
std
sub
mov
dec
loopne
mov
adc
pop
test
lock
in
cmp
jbe
ss
adc
cmp
mov
jb
pop
mov
testl
and
rcrb
xchg
adc
lret
sahf
movl
insl
ret
stc
dec
sub
mov
sbb
xchg
cmp
repz
xor
std
push
ss
jo
xchg
mov
xor
cmp
test
add
or
or
jnp
pop
or
shll
and
jno
stc
rol
sbb
je
cli
scas
sub
xor
ds
cmp
in
sub
add
or
scas
sub
push
in
sub
cwtl
jo
negl
outsl
xor
cmp
pop
dec
ja
push
je
mov
dec
cmpl
das
cmpsl
xchg
push
sub
cmp
pop
insl
xor
push
pop
mov
inc
pop
cs
lea
roll
inc
cmc
jg
and
test
sbb
loop
fsubs
mov
mov
pop
xor
and
dec
test
inc
inc
xchg
mov
subb
addl
mov
and
in
aam
pop
mov
cmpl
adc
cwtl
jg
push
movsb
mov
popa
pop
xchg
movsb
dec
clc
sub
inc
lds
outsb
pop
ja
or
sbbb
push
sub
fiaddl
popa
push
lock
sbb
push
movsl
mov
mov
pop
jmp
lahf
data16
pop
mov
add
xchg
xor
popf
xchg
addb
mov
mov
adc
mov
dec
out
out
incb
negl
sbb
rolb
arpl
push
xor
xchg
mov
push
ret
stos
mov
sub
inc
insb
or
rcll
lods
dec
pop
jno
out
gs
arpl
mov
xorb
bound
popf
in
clc
jg
pop
or
fs
dec
vmulsd
in
test
ds
test
scas
ret
adc
jns
or
adc
push
int
jmp
mov
mov
ds
sbb
mov
mov
push
insl
and
or
jne
lret
mov
xchg
xchg
cmpsb
jl
pop
sbb
divl
mov
cli
fiaddl
xor
and
xchg
cltd
fimull
loopne
in
scas
shlb
aas
leave
mov
push
pop
jmp
inc
out
sbb
add
stc
movb
inc
add
repz
mov
sub
cmpsl
jno
jne
test
push
cmpsl
out
mov
pop
sbb
mov
lret
xchg
mov
jmp
out
and
xchg
ja
in
mov
mov
mov
mov
int3
xchg
mov
jg
and
dec
jbe
test
in
cwtl
insl
scas
xchg
push
add
iret
dec
es
call
lds
xchg
mov
xlat
push
cmp
push
mov
rorb
lea
jp
je
or
mov
js
mov
dec
cli
out
push
cmpb
daa
daa
mov
lfs
stos
sub
dec
dec
cs
mov
es
pop
test
mov
inc
leave
mov
cmpsb
mov
jnp
scas
jbe
jne
je
push
adc
pushl
dec
sub
int3
into
addr16
rol
sbb
ds
xchg
mov
addr16
mov
or
and
arpl
or
dec
cmp
movsb
fwait
es
mov
clc
rol
jnp
clc
stc
addb
xor
sub
imul
andl
and
cmc
push
adc
fnstcw
sbb
aam
mov
shll
jns
sub
rclb
cmp
aaa
cmp
xor
adc
movsb
shrb
jae
mov
mov
leave
inc
cmp
movsl
inc
and
xor
push
pxor
aas
or
xor
ficompl
lret
dec
ja
sti
stos
shlb
andb
and
enter
dec
mul
cld
push
shl
hlt
mov
adc
cmp
popa
ret
or
test
ret
std
cmp
mov
pusha
jns
pop
cmp
mov
sahf
mov
mov
rcll
inc
rolb
push
sbb
mov
push
cltd
cld
lret
mov
sahf
outsl
in
cmp
add
lahf
popa
push
lcall
movsl
fiadds
xchg
push
mov
daa
push
call
stc
dec
lret
or
xor
or
lea
sbb
iret
jmp
lret
addl
idiv
enter
xchg
cwtl
in
jo
insb
flds
fdivrs
add
mov
jg
lcall
js
jp
cmpsb
daa
mov
call
pusha
xor
inc
dec
divb
or
inc
sub
cmpsb
xor
fcomip
and
xchg
loop
aas
insl
lea
push
jb
jecxz
push
sub
jnp
cmp
mov
test
add
popa
nop
js
xchg
mov
xchg
imul
inc
stos
in
flds
inc
mov
xchg
push
imul
sbb
lahf
out
sbb
std
out
fs
aad
vcvtdq2pd
add
icebp
mov
dec
dec
ret
adc
lea
clc
push
fisttps
stos
das
es
mov
sub
test
sti
cmp
ret
mov
jbe
fwait
mov
clc
inc
dec
inc
fistps
ret
xchg
fwait
daa
jae
arpl
jb
sbb
adcb
mov
add
add
pop
pop
xchg
call
sbb
call
add
cwtl
push
ret
sbb
and
mov
das
pop
sub
mov
sub
add
movsb
arpl
lahf
cmc
lea
fstl
push
test
cld
in
shrb
sarb
fsts
cwtl
lahf
test
mov
push
scas
pop
stos
ror
jp
jb
cmp
sub
xchg
dec
fucomp
in
fisubl
cvtps2pd
xchg
mov
js
sub
pop
cmp
xor
mov
loop
inc
cltd
lds
push
mov
mov
xchg
popl
mov
nop
sbb
aam
push
pusha
jle
mov
pop
sub
mov
sarl
in
testl
jmp
movsl
adc
lcall
mov
push
loop
xor
aad
jg
xchg
xchg
stos
in
add
stos
mov
loopne
pop
pop
add
jo
sub
sbb
lock
dec
lea
es
jo
es
scas
cmp
lds
mov
add
mov
or
daa
xchg
jo
mov
mov
sbb
aas
sti
stos
lds
inc
dec
out
sub
add
cmp
leave
push
lahf
pushf
sub
imul
jae
mov
mov
sbb
into
jge
in
mov
push
adc
roll
xor
push
arpl
incb
mov
movsb
jmp
stc
mov
cmp
or
cmp
jg
dec
cmp
ds
mov
mov
mov
jmp
daa
or
mov
gs
mov
inc
cli
jl
push
add
mov
xchg
sub
ffree
movsb
sti
jp
add
push
popa
nop
lcall
rcr
imul
adc
xchg
jp
inc
xorb
cltd
enter
jecxz
ret
lret
push
cmp
ljmp
xchg
cld
pause
outsb
pop
inc
xchg
sub
adc
xchg
and
imul
mov
shlb
dec
outsb
dec
andb
sbbb
icebp
lret
in
seto
pop
or
push
repz
inc
les
mov
shrb
lods
mov
push
add
out
or
or
cli
in
faddl
icebp
adc
out
xchg
inc
aam
lods
push
sbb
xchg
rolb
call
xchg
mov
mov
das
push
rcrb
fwait
sbb
dec
cmp
jmp
shlb
add
test
sti
or
bound
add
sbb
dec
or
xor
and
pop
push
bound
add
add
scas
xchg
aas
adc
out
addr16
mov
mov
testl
or
mov
dec
mov
inc
movsb
xchg
jp
pop
neg
push
roll
mov
sub
cmp
push
xlat
mov
mov
push
push
push
jnp
fadd
in
js
jg
xor
movsb
jmp
inc
cmp
popf
je
pop
test
pop
xchg
bound
mov
lds
jo
pop
sbb
lcall
jo
xlat
jle
fwait
sub
adc
pushf
cs
xor
sbb
daa
mov
cmpl
dec
icebp
push
test
mov
mov
xchg
inc
cmp
inc
push
sub
sub
lret
add
sub
or
das
loopne
pop
add
jns
out
dec
and
cwtl
fcmovu
cmp
xchg
cmp
outsb
in
les
mov
mov
outsl
popa
xchg
pop
shl
test
add
xor
mov
mov
test
shlb
push
jmp
fistpll
lcall
sub
test
mov
add
mov
dec
je
cmp
std
add
test
xlat
outsb
or
mov
popf
rcr
cmp
sbb
roll
xchg
dec
push
mov
incl
cltd
push
cli
pushf
mov
mov
pop
mov
xchg
popf
mov
iret
iret
sub
out
call
popf
nop
in
test
bound
xchg
mov
sub
or
dec
adc
aam
cmp
mov
aaa
faddp
pop
xchg
push
mov
loop
xchg
das
imulb
in
xlat
pop
daa
or
and
enter
fsubs
push
jb
cwtl
sahf
cmpsl
push
cltd
pusha
cltd
sub
stos
adc
pxor
sub
mov
jne
or
mov
dec
jle
push
lahf
inc
ret
mov
mov
js
or
cld
ss
or
mov
push
mov
cmp
pop
or
jge
lock
dec
mov
ret
ret
xchg
jp
push
and
mov
gs
pop
jge
dec
cmp
jbe
fimuls
adc
adc
push
stos
and
rcll
notl
lret
movsb
iret
xchg
popa
adc
stc
and
test
in
jp
popa
rcrl
jbe
jae
arpl
sahf
adc
pop
sbb
pop
nop
push
jmp
adc
popa
adc
inc
jg
jbe
lea
sbbl
dec
jecxz,pn
sub
movsb
dec
inc
unpckhps
inc
adc
jae
pop
leave
pop
lahf
sti
xchg
add
rolb
mov
fsubrs
shrb
fdivrl
jns
dec
cwtl
loopne
add
push
sub
mov
clc
scas
lds
mov
mov
das
xor
cmp
movsb
jbe
divl
lret
push
jbe
push
nop
nop
hlt
aas
mov
xchg
aad
mov
repz
iret
insb
dec
dec
push
imul
movsb
cmp
xchg
push
mov
or
ret
sub
pop
or
dec
imul
cmpsb
movsl
loop
repz
scas
aad
repnz
pop
int3
repnz
outsb
mov
dec
jnp
and
mov
js
xlat
fwait
shlb
stos
mov
loop
jmp
jp
inc
or
push
jns
call
mov
pop
sub
sbb
mov
aad
es
mov
push
in
inc
fstl
pop
icebp
mov
iret
das
or
push
pop
push
ret
jae
pop
cmc
add
daa
mov
cmp
pop
mov
movsb
fwait
or
fwait
out
addr16
loope
outsb
inc
ret
xor
or
dec
in
xchg
add
int
adc
in
gs
xchg
pop
cwtl
ljmp
sub
lcall
fbstp
arpl
scas
ds
imul
lock
popfw
lds
pop
call
xor
push
mov
repz
xor
mov
mov
lea
inc
js
lret
mov
add
xchg
mov
mov
cmpsb
xchg
in
mov
cmpsl
outsl
fnsave
cmpsb
or
adc
jne
cmp
adc
push
mov
aas
ss
mov
mov
cmp
add
adc
sti
inc
mov
insl
fwait
add
inc
out
fwait
dec
or
fcomip
xchg
std
inc
sub
insl
cwtl
mov
icebp
jp
jo
enter
dec
inc
pop
idivl
test
cmpsl
inc
gs
push
inc
popa
sarl
cmc
ss
push
lret
jle
movsl
out
adc
sbb
cmp
cwtl
fistps
cmp
stc
and
movsl
pop
mov
out
xchg
pusha
fwait
xor
sub
inc
pop
pop
add
fs
mov
add
mov
sub
mov
jp
shl
xchg
aam
outsb
jle
or
aas
arpl
sub
rcrl
adc
sub
shrb
test
popa
push
and
push
test
test
sub
cmp
pop
lea
mov
cs
int
mov
lret
jle
jns
push
sub
scas
cld
xor
mov
into
test
adc
pop
mov
icebp
ficomps
loopne
adc
and
lret
xor
pop
lret
lea
cmc
fsubp
adc
push
cmc
inc
push
call
jne
pop
daa
lahf
sub
xchg
push
push
and
test
comiss
adc
mov
lret
insl
jbe
cmc
add
imul
ds
adc
and
js
jg
mov
mov
lret
test
clc
mov
sahf
push
in
sbb
icebp
xchg
mov
cmpxchg
movsb
or
mov
adc
scas
cltd
mov
gs
cwtl
add
mov
mov
out
xchg
add
pop
cmp
push
aad
ljmp
jo
jae
push
fisttps
push
cmp
mov
mov
test
xor
mov
inc
push
arpl
dec
shlb
test
cmp
xlat
outsl
mov
ret
push
sbb
mov
sbb
dec
test
or
pop
fidivl
push
out
adc
mov
popa
fidivrl
in
push
testl
pop
cltd
xchg
mov
add
cmpsl
pop
xchg
repnz
test
test
push
push
cmp
mov
scas
outsb
lahf
imul
or
cmp
out
dec
insb
xor
cwtl
and
out
icebp
test
aam
push
and
mov
mov
mov
fisttps
sbb
addr16
sub
gs
data16
dec
mov
lea
cli
push
sbb
pop
aad
push
and
dec
mov
or
push
insl
cmp
fldcw
cld
imul
pop
adc
test
cmp
shrb
push
adc
lret
jmp
shll
stc
pop
out
dec
lcall
xchg
cwtl
sbb
jmp
inc
andl
pusha
adc
adcl
cld
loop
and
insl
push
dec
out
push
ja
dec
xchg
rol
and
push
les
mov
iret
pusha
fildl
pop
xor
adc
mov
mov
or
xor
data16
cmp
pop
jnp
sahf
inc
call
dec
js
and
jp
addr16
ds
int
mov
add
bound
shr
std
insl
in
ss
or
adc
loopne
xchg
nop
sarl
sub
dec
xor
inc
jno
xchg
pop
sbb
xchg
sub
jnp
hlt
mov
cmp
pop
andnps
outsl
xchg
dec
lret
dec
inc
pop
pop
movsl
cmp
out
ds
jle
and
or
fdivrs
xor
in
in
inc
int
dec
std
or
inc
dec
stc
mov
enter
mov
test
push
cli
pop
out
ljmp
jle
test
xor
xor
pop
mov
jp
mov
pop
add
in
mov
gs
outsb
aad
adc
cli
jno
lea
nop
insl
je
mov
add
loop
sub
push
jne
or
lret
cmpl
jnp
pop
xor
mov
divl
jge
mov
adc
mov
ja
leave
cmp
int
test
jne
ds
das
xor
jl
pop
mov
xor
push
xor
mov
das
imul
pop
lds
movsl
mov
ss
fnsave
stos
adc
test
sbb
sbb
scas
xchg
push
repnz
cli
cmpsl
scas
adc
mov
jl
adc
jg
je
mov
test
xor
popf
cmp
dec
mov
cs
lods
pop
lods
cmp
xchg
loop
xchg
mov
mov
dec
mov
out
out
int
inc
pop
daa
dec
movsl
sti
testb
and
int3
mov
bound
jb
dec
sub
xchg
icebp
xchg
test
sbb
xor
cmpsb
insb
inc
in
add
cmp
movsb
je
add
fs
fnstcw
cltd
and
ret
xlat
nop
or
js
xor
sbb
adc
mov
lret
test
stos
sbb
out
imul
lea
ret
test
ficoml
inc
lods
outsb
and
adc
fidivrl
addr16
mov
in
nop
adc
sbb
mov
lods
pop
sbb
pop
sbb
in
mov
mov
js
js
xchg
hlt
nop
xor
push
xchg
mov
imull
cmpsl
lea
sbb
adc
cmpsl
and
test
aad
pop
int
push
sbb
push
jns
lock
or
scas
in
adc
iret
mov
ljmp
mov
scas
sbb
sbb
je
dec
sub
inc
fwait
pop
inc
jecxz
push
inc
js
push
pop
hlt
aaa
fnsave
pop
adc
or
fdivrl
iret
push
insb
je
int
lcall
insl
or
cvtpi2ps
jnp
xor
mov
add
add
mov
enter
lds
adc
mov
pusha
ret
push
cli
add
dec
jbe
cmc
lcall
rolb
inc
sahf
mov
push
arpl
mov
add
icebp
int
dec
sub
std
in
test
mov
enter
daa
xchg
shrb
scas
xlat
cli
repnz
cs
in
push
push
lods
fwait
arpl
mov
jmp
loop
lods
ljmp
shrl
lea
add
mov
call
scas
movsb
ds
sbb
scas
call
jmp
mov
mov
jmp
push
cmp
movd
mov
push
mov
outsb
lret
mov
test
or
pop
pop
imul
mov
sbb
pop
mov
gs
sbb
stos
es
jo
dec
stos
cwtl
in
mov
imulb
fldcw
loope
rcrl
mov
test
movsb
mov
ror
je
xor
sub
rorb
test
sbb
fs
jmp
movsb
inc
and
xchg
push
adc
iret
lds
push
in
lods
movsb
add
mov
iret
rol
push
imul
jp
mov
outsb
fisttps
inc
mov
dec
pop
mov
add
adc
add
insl
cmp
fs
sub
in
jl
int
inc
mov
or
xchg
dec
shr
call
pop
fists
jns
pop
pop
pop
iret
dec
xchg
push
push
enter
ss
xor
scas
and
iret
mov
outsb
jge
add
and
push
ja
lret
repz
cmp
add
and
les
mov
sub
cmc
enter
jbe
add
xor
pop
data16
fcompl
sbb
lahf
adc
int
imul
sbb
repz
xor
mov
mov
mov
pop
mov
jle
push
push
sbb
repz
clc
fsubs
movsb
jl
subb
mov
lret
and
repnz
jle
imul
sbb
add
out
out
mov
aad
push
push
imul
sbb
jg
call
out
in
ret
or
mov
dec
dec
in
adc
mov
je
mov
cmpsb
dec
int3
lock
jge
and
ja
xchg
cmpsb
movsb
mov
lods
rcll
sbb
mov
pop
aaa
add
sub
call
or
outsb
mov
leave
mov
loop
pop
lret
fbstp
pusha
push
les
jl
in
imul
mov
test
and
mov
rcrl
ficoms
dec
xor
xchg
xchg
fwait
mov
ds
movsl
ret
mov
je
push
das
vmread
fldl
cmc
xor
add
jae
or
aam
enter
mov
cmp
lock
pop
xor
or
mov
cmp
sub
ja
mov
inc
inc
cmp
and
adc
out
std
push
icebp
fdivr
sub
cmp
movsb
adc
mov
sti
mov
or
mov
lret
inc
sub
icebp
and
sub
ljmp
xchg
insb
nop
subl
push
or
insl
lods
pop
xor
pop
mov
pop
lret
add
adc
and
ja
shrb
loopne
adc
in
mov
lahf
sahf
xor
inc
or
mov
lea
insl
pop
pushf
in
outsl
push
in
mov
jecxz
push
repnz
push
and
gs
sahf
hlt
add
mov
divb
rcrb
cli
pop
or
pushf
aaa
iret
sti
repnz
dec
fidivs
shld
inc
sub
adc
mov
stos
cmp
xor
mov
icebp
mov
shrl
test
fistpll
mov
addb
outsb
mov
cltd
mov
aam
test
repnz
inc
lret
stc
mov
mov
out
adc
xor
add
test
pop
mov
inc
add
cltd
sbb
mov
pop
bound
leave
xor
mov
push
stos
jne
mov
arpl
add
dec
int3
cld
dec
sbb
cmp
sub
in
into
out
in
xchg
rclb
mov
subb
mov
repnz
ret
push
adc
push
aaa
lods
shll
cmp
xchg
je
sub
popa
stos
adc
mov
pop
mov
cmpl
cmpsb
xchg
test
fists
out
xchg
aad
add
repz
lods
sub
loope
subl
inc
xor
testb
mov
loopne
sub
push
cmp
gs
outsb
popa
inc
mov
add
jno
in
add
stos
nop
out
push
test
cmp
pop
xchg
inc
mov
sbb
xor
jmp
dec
mov
inc
mov
push
clc
pop
mov
adc
inc
in
and
mov
push
jp
cmp
pusha
cli
mov
pop
bound
mov
orl
xlat
out
mov
inc
sub
loop
dec
add
pcmpeqd
popa
sub
lret
lods
adc
sbb
sbb
jle
push
fidivrs
clc
inc
test
cmpsb
and
pop
dec
dec
mov
testb
push
adc
dec
dec
cwtl
lock
popf
pop
gs
dec
das
mov
cs
mov
add
hlt
nop
and
mov
fnstcw
pop
mov
xor
push
mov
ss
sbb
out
lods
jmp
adc
xchg
mov
inc
mov
jl,pt
xorl
xchg
mov
adc
add
mov
dec
xor
push
jmp
or
cmp
ds
les
xchg
push
mov
push
mov
pop
insb
pop
aas
xor
inc
imul
cmp
aaa
lea
lahf
leave
stc
ret
push
std
loope
sbb
stc
out
test
aas
mov
xor
cld
test
xlat
xor
movsl
sub
cmp
lahf
decl
adc
gs
push
mov
fisubl
std
pushf
test
shl
scas
jne
icebp
pop
or
xor
cmp
das
sub
add
xchg
mov
and
mov
sub
jns
pushf
mov
das
xchg
cs
leave
into
dec
out
and
testl
mov
mov
xchg
sbb
addr16
sbb
push
es
sbb
add
jl
lcall
mov
mov
fistl
mov
outsb
int3
lock
das
cmc
mov
dec
sub
loope
jb
out
xchg
sti
sbb
cmp
xchg
test
shlb
dec
leave
cmp
sbb
xor
mov
cmc
shlb
in
mov
notb
or
das
inc
enter
dec
insb
pop
push
cld
mov
sbb
popa
scas
pop
mov
add
ds
ret
push
cli
xchg
cwtl
cmp
in
jp
mov
les
inc
fstpt
adc
mov
sbbb
xchg
xchg
jl
movsb
repnz
cmp
mov
dec
jmp
sti
pop
mov
adc
rorl
mov
or
push
push
xchg
mov
add
sub
daa
xchg
int
add
xor
bnd
fwait
mov
and
pop
scas
mov
imul
lods
xchg
push
xor
sbb
lret
aam
jg
cmc
sbb
lock
test
push
sbb
stos
nop
cmpb
decb
adc
cmpsb
push
out
mov
rorb
popl
mov
cmp
clc
test
pop
and
loop
outsb
test
dec
jle
jns
or
or
sub
ret
dec
sub
sbb
xchg
les
xor
fwait
adc
iret
lret
or
and
add
xor
out
fwait
stos
fldt
mov
ljmp
dec
inc
shrl
adc
cmp
sub
ljmp
mov
insl
ret
mov
stos
ja
mov
leave
mov
cmp
sarb
jo
add
dec
aam
mov
mov
arpl
loop
mov
mov
out
mov
xchg
mov
icebp
jb
mov
pusha
fstpt
cld
xlat
adc
jb
lods
inc
and
inc
cltd
js
pop
daa
addl
push
out
lods
lods
mov
jb
pop
popf
repnz
push
push
ds
or
push
jg
repnz
sbb
jne
inc
js
sbb
pusha
out
jae
je
jmp
pop
push
js
inc
les
push
ds
pop
test
leave
cs
fnsave
mov
les
xor
les
or
iret
es
hlt
jb
cmp
push
sbb
xchg
hlt
cmc
out
lret
push
jge
cmp
ja
aas
cmpsb
pushf
ljmp
fildll
aad
arpl
cmp
push
iret
outsb
xchg
hlt
scas
rcrl
ficomps
aad
jge
lcall
je
push
add
or
mov
add
insl
adc
adc
jne
les
shlb
or
push
mov
jbe
mov
mov
cmpsb
cmp
int3
adc
inc
lds
jae
or
ljmp
push
and
sub
gs
sbb
sbb
test
cld
filds
rclb
lods
out
mov
les
das
outsl
mov
xchg
jg
cltd
xor
mov
xchg
mov
or
cld
inc
and
leave
mov
fcomp
dec
cmp
add
cmc
xchg
adc
xchg
xchg
mov
or
adc
add
fbld
pop
frstor
fiaddl
loope
cwtl
xchg
sub
sbb
xchg
popa
mov
pusha
push
xchg
inc
mov
sbb
sbb
repnz
aad
mov
inc
jle
push
addr16
insl
hlt
pushf
in
inc
mov
adc
lds
dec
les
cmpsb
out
sbb
sarb
mov
dec
test
mov
sbb
repz
push
push
cli
ja
rorw
xor
loopne
mov
jp
fbstp
mov
pop
mov
cltd
cwtl
rcrb
dec
mov
mov
sub
xchg
lcall
ljmp
jne
adcb
imul
or
orl
cwtl
push
dec
sub
jecxz
scas
add
lahf
mov
out
stos
add
idivl
scas
scas
insb
cmp
cmp
jg
xchg
and
divb
lcall
cmpsl
pop
rcrb
sbb
rcr
inc
mov
imul
or
mov
mov
data16
mov
roll
fwait
pushf
sub
xor
and
jne
ljmp
sbb
nop
loope
inc
jae
xchg
or
xchg
add
pop
push
sbbb
shll
pop
orb
mov
mov
das
jbe
lock
rclb
cmp
int3
insl
sbb
push
dec
xchg
sbb
popa
push
pop
pop
std
int3
aaa
jo
xchg
dec
jg
push
mov
mov
faddl
adc
aam
into
adc
lcall
cmc
jo
sub
xor
xor
int
mov
lods
xchg
push
mov
test
ret
cmpsb
shrl
imul
leave
cmpsl
stos
jno
pop
jp
dec
bound
xor
jecxz
jae
jb
mull
and
fidivs
sbb
jns
jo
loopne
mov
xor
lds
xor
test
adc
pop
out
movsl
pop
xchg
inc
setno
lret
inc
mov
loopne
idivb
fldt
movsb
jl
rorb
push
push
pop
mov
andb
jae
sbb
das
stc
pop
mov
jne
add
call
incl
jnp
fcompl
iret
stc
mov
cmp
aas
pop
cltd
clc
movsb
mov
pop
cli
cmovne
jbe
cmp
cmpsb
pop
mov
or
loopne
cmp
inc
cld
push
repnz
int
push
cmpsl
and
loopne
pop
sbb
push
sbb
add
std
or
pusha
sbb
and
inc
cmp
popa
mov
inc
and
imul
pushf
jecxz
push
rcrb
or
insl
xor
add
jne
xor
out
lea
cmp
xchg
outsb
push
sub
stc
push
fmull
xchg
in
sbb
pop
pop
hlt
push
jo
jl
sub
js
fidivs
push
daa
sub
push
add
mov
and
xor
or
adc
out
push
jp
mov
pop
lret
jb
xor
xlat
jge
cwtl
lods
inc
fidivl
sysret
stos
insl
lret
enter
fildll
fdivp
in
sub
mov
add
inc
xlat
aas
ljmp
jecxz
jl
imul
jmp
mov
xor
data16
inc
or
sbb
inc
in
mov
push
mov
xchg
xorb
and
inc
cmp
addb
out
cltd
je
jmp
hlt
scas
cs
pop
jno
add
or
into
popl
pusha
ret
cmpl
add
aaa
mov
xor
push
out
sbb
pushf
push
call
xor
sub
xor
cmp
cs
out
int
fstl
cmp
enter
jns
negl
mov
test
jno
sbb
push
ret
lcall
std
add
mov
mov
loopne
inc
cmp
in
push
das
je
popf
or
out
fisttps
xchg
mov
mov
jne
loop
out
rclb
push
aad
out
jbe
rcl
sbb
pushf
pop
inc
jne
mov
mov
xchg
enter
fsts
ret
mov
pop
and
mov
or
dec
push
subb
test
sub
test
out
pop
or
loope
xlat
xor
shl
clc
cmp
xor
inc
mov
pop
cld
ud0
mov
adc
xchg
mov
jns
lret
out
cmp
or
loope
mov
sbb
test
push
sub
je
inc
pop
js
add
js
mov
movsl
scas
mov
fs
rcrl
jge
fildll
or
pop
jo
push
xchg
xchg
xlat
jecxz
inc
or
ljmp
cld
ss
out
stos
xchg
and
inc
push
mov
pushf
pop
stos
aaa
test
imul
sbb
andl
inc
pop
xor
and
inc
xchg
mov
mov
mov
sar
and
cmpsl
sbb
out
sub
push
xacquire
les
shrb
push
mov
data16
hlt
adc
aas
mov
ror
rcll
push
or
push
mov
and
stos
icebp
adc
call
sub
clc
fnsave
mov
shr
sub
pop
mov
test
dec
add
movsl
push
rolb
and
jl
mov
mov
inc
shlb
bound
xchg
ljmp
in
mov
or
pop
mov
int
xlat
mov
push
cmc
or
adc
push
jge
adc
pop
sub
es
pop
xor
das
out
ret
call
xchg
push
or
inc
imul
out
mov
cs
jae
nop
or
pop
mov
jo
pop
in
mov
bound
lret
shrl
pusha
or
push
fs
inc
insl
pop
je
or
mov
inc
add
pop
cmp
cmpl
push
mov
push
call
call
ficomps
add
stc
rcll
mov
mov
cltd
pop
add
jmp
lahf
iret
mov
push
mov
xchg
lea
sar
push
or
pop
xchg
repz
int3
dec
pop
lret
jne
sbb
rclb
stos
xchg
xchg
aam
pop
data16
push
xchg
test
lods
lahf
data16
bound
push
mov
and
stc
xchg
jle
pop
es
sub
out
mov
ficompl
jbe
sbb
in
dec
cs
enter
fildll
jmp
sub
repz
sub
xchg
mov
ret
mov
and
je
das
mov
cmp
jne
mov
pop
pop
subb
add
push
mov
loope
ds
frstor
push
and
jne
xor
push
pop
cmp
addb
adc
cltd
and
or
test
jge
sub
mov
loope
fisttpll
mov
sarb
push
mov
mov
outsb
sub
pushf
and
data16
sub
rcrl
push
inc
flds
jecxz
imul
xor
sti
adc
pop
add
sahf
outsl
jns
fstl
insb
lret
fcmove
mov
lods
jns
mov
push
add
imul
ret
jge
pop
enter
xor
pop
jle
mov
out
push
das
xchg
lret
pop
bound
adc
popa
in
sub
pop
cli
pop
imul
hlt
mov
shlb
popf
aam
out
das
dec
sbbl
xchg
xchg
hlt
jle
push
cs
mov
xor
push
mov
mov
stos
popf
mov
jecxz
mov
fbld
decb
xlat
scas
rolb
mov
out
dec
fcmovb
sahf
xchg
rcrl
mov
loope
outsl
icebp
inc
rcrl
inc
mov
hlt
vshufpd
les
inc
ficoms
or
xchg
iret
sub
mov
xorl
imul
std
sub
mov
out
ds
pop
jl
clc
mov
jns
pop
push
xlat
or
cmp
push
sub
fcomps
mov
mov
aaa
pop
mov
imul
pop
lods
in
dec
inc
fldl
popa
test
dec
pop
jbe
mov
dec
fidivrs
add
movsb
imul
sub
pop
outsl
pslld
adc
testl
cmpl
push
inc
lret
jle
test
adc
mov
cmp
dec
mov
sti
clc
mov
add
imul
imul
push
hlt
push
into
std
repz
cmp
aad
test
jmp
inc
jg
test
lock
andl
arpl
adcl
mov
in
mov
hlt
or
cmp
push
dec
or
xlat
sbb
jb
cwtl
sub
xchg
pushf
adc
mov
cwtl
xor
and
push
lods
mov
xor
notl
test
jmp
adc
pop
je
push
cwtl
pusha
popa
pop
insl
sbb
push
jge
add
sbbb
jne
pop
push
and
lret
sbb
or
or
dec
mov
xor
sbb
mov
xchg
mov
lods
ret
sbb
push
sbb
xlat
roll
adc
sub
in
or
mull
cwtl
add
mov
sbb
mov
adc
sub
div
arpl
sbbb
roll
sub
dec
mov
push
or
ret
dec
aad
cmpb
imul
cmpsl
or
test
ret
sub
fldenv
out
sub
lcall
shrb
or
in
jno
fisttpl
cmp
rcrl
sbbl
cld
push
cmp
inc
sbb
movsb
lea
mov
and
data16
dec
push
pop
sbb
test
mov
xor
xor
sbb
jno
jno
pop
push
stos
push
ret
ret
stos
jg
aam
jae
and
leave
or
and
xor
xor
adc
lcall
jo
sbb
jp
cli
lods
add
jmp
loope
cwtl
dec
cmp
add
mov
daa
enter
add
test
push
xor
enter
mov
or
call
in
adc
popa
cltd
adc
sbb
xor
enter
out
sbbl
push
test
jae
cmp
jecxz
and
int3
jb
cmc
sub
push
and
dec
jecxz
call
inc
and
inc
xor
int
jl
es
ror
jmp
iret
cmp
and
arpl
dec
mov
mov
and
pop
ljmp
sbb
and
ljmp
add
ljmp
scas
lcall
or
mov
mov
mov
ja
mov
stc
rcr
pop
push
inc
pop
jne
int3
jno
pop
xlat
lods
add
mov
cmp
dec
dec
mov
int
xchg
dec
sbb
xchg
mov
loop
lods
xchg
or
nop
or
sahf
push
sti
les
js
jmp
das
sub
sbb
add
aas
mov
mov
ja
cmpsb
jl
scas
push
clc
bound
push
cmpsl
bound
mov
fs
mov
lcall
pushf
popf
or
jne
stc
xchg
mov
arpl
fidivs
mov
pop
out
add
mov
iret
cltd
push
loope
test
xchg
nop
dec
push
dec
dec
shl
inc
push
jno
push
jecxz
adc
repnz
neg
xchg
cmp
lea
fbstp
into
nop
and
pop
ret
mov
pushf
push
adc
data16
repnz
pop
sub
xor
cmp
fnstenv
adc
aad
mov
mov
jbe
mov
mov
push
inc
push
dec
and
adcl
push
mov
cltd
and
mov
jle
test
addr16
mov
xchg
loope
or
xchg
mov
cld
sub
jne
cltd
jbe
fldt
loopne
in
loop
push
adc
dec
fucomip
sbb
sub
stos
cmc
pop
jno
sub
jl
ret
pop
xorb
mov
je
in
and
out
pop
mov
xchg
ror
cmpsb
inc
clc
aam
or
int3
jg
jo
popa
mov
jle
je
mov
inc
push
inc
cmp
int
lods
xor
nop
add
jmp
cmpsl
inc
adc
dec
jp
sub
mov
testb
pop
insb
mov
sbb
inc
push
fildll
or
mov
jp
sbb
pop
mov
pop
mov
roll
adc
mov
arpl
pusha
mov
mov
cs
loopne
or
mov
push
push
stc
mov
rcrl
cmp
mov
mov
jne
dec
sti
xor
arpl
aas
in
pushl
lret
pop
lock
insb
push
test
mov
fcmovnbe
popf
push
mov
dec
pushf
mov
sbb
mov
sbb
je
std
cmp
aas
sbb
lock
mov
in
sub
inc
jns
pop
adc
clc
push
jo
xchg
push
data16
inc
and
cmp
mov
push
aaa
mov
or
push
sbb
loop
dec
fimuls
pop
push
add
adc
scas
movsl
outsb
push
out
insl
cmpsb
xchg
repz
push
addl
loop
orl
andl
inc
scas
dec
add
inc
cmpsb
in
clc
or
test
mov
scas
scas
out
mov
sub
and
shrb
sbb
cltd
inc
mov
and
jnp
mov
mov
scas
xor
lcall
out
fnstenv
fiadds
mov
xor
jg
mov
push
jb
insl
mov
jns
mov
xchg
mov
push
ja
icebp
lcall
xor
cmp
popf
mov
out
test
pop
xor
loop
cld
arpl
mov
test
sbb
or
addr16
dec
fcmovnb
movsb
mov
and
fiaddl
in
stc
dec
push
or
mov
sti
push
testl
mov
add
sbb
xchg
xchg
ja
push
sbb
test
jno
lahf
cmc
xor
mov
testl
xor
daa
sbb
and
xchg
add
or
jp
push
movsl
add
cmc
addr16
ja
aad
sbb
call
loope
cmpsl
loope
stc
and
inc
pop
push
loop
lahf
int
imul
jo
xchg
or
in
pop
mov
ss
xchg
test
insb
push
mov
shlb
sahf
leave
xchg
xor
bound
xchg
xchg
xchg
inc
popf
lods
cmc
shrb
jae
adc
repz
xchg
fisttps
and
xor
adc
or
cmp
hlt
jo
cmpsb
dec
shlb
sti
inc
jns
je
xchg
stc
dec
cmp
out
mov
stos
roll
popf
sbb
sbb
adcb
inc
stc
in
xor
inc
arpl
insl
sti
sbb
sub
dec
cmc
pop
fsubr
cmp
or
cmpsb
xor
repz
xor
es
pushf
xchg
and
dec
iret
or
inc
sub
mov
in
jae
addl
pushf
jo
andl
push
adc
shl
fstpl
int
pop
sub
ja
lcall
push
pop
cmp
das
xor
push
imul
mov
add
gs
xchg
add
test
xchg
popa
aaa
pop
xor
shrb
and
shrb
icebp
pop
stos
pop
dec
notb
pop
inc
loop
mov
punpckhdq
scas
loope
ljmp
ja
xchg
or
mov
dec
sbb
pop
pop
out
push
out
mov
pop
adc
ja
or
push
mov
sbb
xlat
pop
pop
xor
aam
push
dec
popa
vphadduwd
shr
je
loope
pop
dec
repz
cld
stc
int3
sub
cs
movsl
mov
sbb
jmp
loopne
enter
imul
jae
xchg
sti
sbbb
cmp
icebp
mov
cmpsb
adc
cmp
cld
popa
or
enter
out
jae
loope
pushf
xor
mov
jne
or
inc
xchg
ret
aaa
enter
push
sbb
insb
mov
ret
xchg
cli
lahf
adc
xchg
push
cld
or
xchg
in
pop
cmp
cmpsb
leave
lret
xor
leave
aaa
mov
enter
lods
sahf
mov
out
xor
and
xchg
cmp
rolb
imul
adc
xlat
dec
stos
out
daa
sbb
and
pop
sbb
inc
add
mov
shll
or
fwait
mov
sahf
int3
setb
scas
lcall
lock
xor
call
dec
sbb
ret
push
add
aaa
mov
inc
cld
lahf
ficomps
inc
nop
pop
stc
jmp
xchg
sbb
jp
jle
mov
pop
stc
pop
repz
push
or
mull
hlt
sub
adc
sub
int
leave
test
js
imul
negb
mov
inc
xchg
jg
xor
in
inc
mov
xor
mov
stos
xchg
popa
into
into
leave
cmpb
imul
add
sti
in
mov
or
sbbb
push
addr16
rcrl
pushf
sbb
sub
out
mov
dec
fiadds
cmp
fdivs
into
lock
cmp
inc
hlt
pop
rcl
xor
xchg
pop
icebp
nop
mov
fwait
xchg
popa
test
jnp
jle
gs
jp
icebp
lret
lea
cmp
mov
adcb
xor
test
push
pusha
je
or
stos
aas
mov
cmc
push
xlat
push
pop
pop
mov
pop
cmp
mov
jmp
pop
dec
lds
sbb
lcall
gs
addr16
fsts
out
test
cmp
jb
cmp
je
pushf
pop
decb
mov
or
add
and
bound
adc
sbb
mov
push
decl
scas
adc
xchg
test
and
and
ds
jmp
xchg
test
xchg
in
add
and
and
inc
int3
sub
sbb
outsl
jp
mov
aam
dec
jp
cmp
gs
add
and
jno
pop
push
jno
adc
add
inc
fwait
test
jns
sbbl
cmp
sar
sbbb
mov
adcb
test
xchg
loop
push
push
adc
adc
ljmp
jge
repz
xchg
addb
in
pop
ss
adc
stc
inc
mov
adcb
int
push
pop
les
pop
in
mov
push
cwtl
loopne
sbb
out
xchg
jbe
fwait
xchg
mov
mov
push
pop
cmpsb
fdivrs
call
mov
ja
xor
inc
aad
cmp
ret
and
pop
jno
movsl
push
lds
sbb
mov
sbb
pop
dec
and
pop
pop
sbb
in
stc
test
jns
xchg
cmpsb
or
out
inc
je
mov
push
outsb
dec
lret
arpl
jge
push
mov
cmp
sub
mov
and
sub
xlat
clc
jbe
xchg
mov
fisubs
cwtl
pop
cmp
mov
jg
xor
hlt
ljmp
lret
dec
clc
enter
lcall
jbe
insb
and
bound
cmp
inc
dec
push
jnp
or
or
mov
push
cmp
ret
or
push
lret
rclb
rcrb
pushf
jo
mov
jge
push
and
jge
xor
or
aaa
into
dec
in
loope
adc
in
repz
mov
mov
in
sarb
inc
stos
pop
enter
cmp
add
add
cmpsb
imul
rorb
les
jno
mov
push
pop
add
cmovle
sbb
jnp
add
rol
dec
jmp
xchg
icebp
fcmovb
dec
sub
or
out
ret
add
push
out
pop
mov
sbb
mov
jo
jne
mov
fnsave
inc
cld
icebp
int
cmpl
or
in
jl
sbb
xor
xor
and
push
adc
sbbl
jmp
xor
test
popa
ror
ret
sbb
mov
xor
mov
jnp
mov
std
popf
xor
jb
xor
pop
sbb
hlt
outsl
decb
clc
repz
push
cmp
lret
add
add
jbe
xchg
inc
iret
inc
mov
adc
push
imull
or
out
xchg
cmp
mov
inc
inc
push
jae
roll
adc
insb
xchg
sbb
xchg
pop
insl
jmp
and
jmp
push
lods
test
mov
sub
pop
mov
filds
orl
xor
bound
pop
mov
xor
rclb
dec
push
and
pop
cmp
pop
mov
int3
add
scas
lret
mov
inc
nop
das
pushl
dec
mulb
mov
mov
sbb
int
hlt
stos
cmpl
fmulp
into
adc
movsl
insl
push
fsubrs
movsl
lods
in
ret
sbb
icebp
mov
and
or
fwait
enter
xchg
arpl
movsl
dec
std
das
movl
pop
outsb
mov
out
push
data16
add
mov
add
or
imul
add
lods
mov
je
inc
xor
add
sbb
and
insb
lahf
ja
and
sbb
popf
out
outsl
neg
aaa
dec
popf
push
pop
mov
adc
aam
push
or
sub
cmp
in
pushf
enter
pop
test
subb
mov
mov
pop
cmpsb
or
data16
imul
les
jb
push
xchg
adc
addr16
inc
bndldx
sub
stc
daa
cli
jmp
jo
aas
jae
rcr
mov
sbb
dec
ljmp
add
pushf
mov
call
int3
xchg
dec
faddl
cmp
shlb
xchg
jg
sub
lahf
aas
mov
pop
leave
std
pop
or
mov
sarb
cwtl
push
or
mov
loope
inc
adc
xor
popa
lods
ret
mov
js
lods
cmp
ja
pop
lock
dec
popa
lds
adc
pop
mov
push
mov
rcll
sbb
mov
cmp
mov
jl
push
sti
dec
mov
sahf
jno
sub
scas
dec
jb
mov
enter
or
xchg
clc
xchg
xor
inc
lret
or
fst
insb
add
pop
mov
sti
pop
ljmp
scas
pop
mov
push
in
dec
sub
pop
je
xor
lahf
jp
pop
cmpsb
lahf
test
lock
nop
or
lret
lds
mov
cmp
cli
jle
push
es
cmp
mov
add
mov
xor
mov
test
jg
push
mov
sbb
in
jecxz
sub
cltd
negb
xchg
and
sub
sti
movsl
sub
stos
dec
sbb
movsb
inc
nop
mov
pop
inc
and
ja
pop
aad
lea
test
std
adc
jl
bound
and
rol
push
lret
sahf
frstor
pusha
cmpsl
sbb
or
mov
add
hlt
xchg
jg
cmp
aaa
add
orl
adc
dec
pop
fcmovnbe
mov
jo
dec
dec
cli
adcb
push
sbb
rolb
ljmp
jmp
mov
dec
jns
sub
jne,pn
mov
fsubrs
mov
repnz
jg
imulb
push
cmp
or
mov
sbb
test
pop
push
data16
fcmovnu
xchg
call
dec
adc
out
mov
mov
push
test
sti
xchg
sbb
ss
xor
jmp
js
xor
call
xchg
shl
ret
add
push
cmc
pop
cwtl
lret
xchg
and
inc
jnp
mov
dec
pop
ja
xchg
lahf
movb
xchg
leave
jg
add
inc
add
or
push
inc
mov
add
mov
push
bound
mov
popf
inc
xchg
xor
lret
cmp
orb
out
orl
in
fbstp
lret
mov
js
xchg
and
mov
or
sub
mov
jae
movsl
sbb
out
outsl
sub
sbb
jb
je
loopne
pusha
loope
push
pop
std
outsb
stos
and
xchg
dec
xchg
dec
fwait
popf
out
jns
fwait
mov
cmp
push
mov
insl
das
ja
cmpsb
sub
xor
test
in
jle
sahf
mov
loope
cmc
movsl
inc
shlb
and
mov
xor
loopne
mov
ljmp
aam
lret
push
mov
cwtl
xor
jmp
push
bound
pop
stos
icebp
jb
jle
mov
dec
inc
jg
xor
enter
inc
xor
jae
sahf
pusha
jmp
rolb
xor
add
imul
or
je
fmuls
or
bound
jmp
loop
shlb
lret
push
xor
sarl
inc
popa
mov
adc
sub
nop
cs
push
rcrb
sub
jle
dec
adc
pop
mov
in
pusha
repnz
and
cmp
orl
mov
xor
loop
add
lock
adc
jnp
xchg
cwtl
add
fisttpl
nop
inc
push
and
inc
dec
pop
pop
fisubrl
mov
xchg
add
add
and
inc
ja
cmc
push
aam
xor
xor
out
loope
sbb
movsl
pop
add
xchg
xchg
hlt
add
mov
out
out
loopew
daa
mov
enter
repnz
int3
lods
and
pop
jg
imul
les
stc
cmp
in
in
lds
mov
dec
dec
pop
add
out
ss
test
stos
fxtract
adc
push
fisubrs
sub
jge
inc
xchg
fiaddl
mov
jne
cmpb
test
stc
pop
xchg
xor
out
pop
xor
test
sub
mov
daa
shlb
icebp
jno
mov
pop
xor
cmpsl
pop
and
jne
fsubrs
cmc
sub
and
pop
push
aas
das
xchg
push
jb
cmp
push
inc
das
shrb
stc
push
fwait
in
adc
ror
push
out
pop
pop
cmpsl
mov
daa
jmp
lret
mov
mov
enter
mov
cmp
add
xor
xor
mov
dec
pop
lahf
test
testb
addl
push
jbe
test
and
jbe
push
clc
fcompl
cmp
jo
lea
in
xor
cwtl
jno
mov
xor
and
outsl
xchg
adc
ja
push
bound
out
jmp
scas
outsl
sub
pop
sbb
mov
jge
mov
adc
cmp
inc
clc
inc
xor
js
xor
aad
sbb
xchg
xchg
out
mov
dec
xor
shll
rcll
jmp
cwtl
popa
test
ror
jecxz
in
mov
jmp
cmp
mov
negl
adcl
sub
inc
iret
fistps
rorl
repz
addb
adc
loopne
sub
outsb
fsubrs
xor
icebp
cmp
je
xor
inc
mov
clc
jle
jo
cmp
dec
sti
mov
add
pop
cs
or
shl
mov
bnd
adc
mov
sbb
std
push
inc
lahf
adc
jge
mov
sbb
inc
push
les
jl
in
gs
xor
rclb
push
inc
mov
test
cmp
rolb
xorl
add
mov
and
imul
sub
push
imul
or
lcall
aaa
aad
adc
nop
xchg
fsubrl
fisubrs
cltd
lds
dec
sbb
movsb
ljmp
imul
icebp
xchg
lock
push
sti
adc
add
out
xchg
fisubs
jle
dec
pop
fisubrl
jne
or
scas
push
xor
add
in
lods
sti
mov
stos
lds
xchg
push
std
in
pusha
pop
cwtl
mov
mov
and
sub
inc
mov
loope
icebp
cwtl
push
fisttpll
mov
sub
pusha
loope
fst
cmpsl
cmp
jb
xor
and
xchg
stc
fadds
cmp
xor
or
mov
push
aam
sbb
pop
inc
mov
fs
inc
imul
andl
xor
aad
stc
inc
test
add
push
xor
pop
lock
pop
add
movsb
imul
sbb
pop
mov
mov
jmp
add
and
xor
mov
or
mov
mov
xchg
out
xchg
inc
fwait
rcrl
es
ja
sbb
daa
xchg
mov
mov
outsb
cmp
loop
cmp
adc
rcrl
adc
push
push
out
gs
lock
ret
rclb
mov
shlb
flds
xchg
popf
mov
sub
add
sbb
pop
outsl
shrb
loopne
mov
or
pop
and
popa
inc
stos
shll
dec
xchg
sbb
dec
pop
jno
mov
push
fiadds
push
sub
xor
test
clc
lods
dec
outsb
das
cmp
arpl
add
jb
xor
fisubs
pushf
xchg
xor
cmp
jb
lods
repz
dec
mov
mov
dec
sbb
je
mov
aad
mov
fldcw
and
sub
push
pusha
rorb
adc
xchg
inc
jge
xor
enter
and
cmp
test
enter
fisubrl
add
mov
push
push
mov
test
in
int3
stos
mov
icebp
adc
std
push
xchg
js
xlat
or
mov
lahf
mov
and
jl
cli
int3
mov
pop
xor
leave
cmp
les
sbb
add
sbb
cmp
xlat
pop
xor
inc
lcall
clc
jnp
lcall
pop
ror
lea
ja
lahf
xchg
test
imulb
push
adc
lcall
adc
xor
notb
mov
jge
popf
or
mov
jl
mov
loop
aaa
lods
jno
push
mov
negl
fwait
mov
adc
jmp
stc
sub
jbe
testl
mov
cmp
or
xchg
lea
lret
leave
sub
test
repnz
imull
sti
aam
out
pop
push
mov
in
push
pop
push
add
cmpsb
sahf
mov
sub
jns
xchg
test
xchg
mov
icebp
fistps
jbe
lcall
lods
mov
stos
inc
iret
inc
pop
xchg
pop
xchg
out
popf
addl
cmp
push
ljmp
lret
xor
add
dec
cmp
jb
sbbb
xchg
ret
or
mov
pop
mov
push
cmp
in
dec
repz
dec
mov
jl
out
fsubp
xchg
inc
adc
or
or
or
dec
or
mov
lods
add
dec
stos
mov
hlt
cs
inc
out
inc
mull
sbb
jno,pn
inc
cmpsb
imul
sbb
pop
sar
pop
test
fidivrs
test
dec
pop
xor
test
repz
cltd
shll
xor
cmp
out
cmp
jg
outsl
mov
icebp
xor
xchg
into
sub
dec
daa
test
repz
loop
das
mov
insl
push
repz
repz
and
icebp
push
outsl
dec
jmp
push
in
add
fs
pop
xor
rcl
jne
insl
dec
out
clc
test
sub
shr
push
mov
insb
or
push
and
leave
sub
cmp
mov
ret
pop
aas
dec
je
cmpsl
repz
in
sub
testb
int3
or
in
jae
mov
jl
sub
lea
filds
enter
mov
xor
insl
aas
xlat
int
sbb
stos
inc
sbb
and
outsl
inc
shlb
dec
push
inc
jne
addr16
inc
dec
inc
rclb
mov
rorb
pop
out
cli
adc
jb
iret
mov
add
sub
mov
ss
shlb
sahf
sbb
dec
jl
mov
aaa
jnp
cmp
sbb
fcmovb
negb
std
pop
and
test
ja
inc
loope
jg
sub
cs
or
orl
cltd
cli
arpl
ret
shlb
xor
test
je
xor
insl
iret
ss
stc
xchg
loope
mov
push
add
pusha
or
mov
in
orb
sti
ds
jp
jmp
in
mov
aas
xorl
or
push
mov
mov
inc
test
clc
pop
ret
test
push
nop
mov
movsl
xchg
and
sbb
dec
in
enter
xchg
fcoms
in
ja
pop
stc
gs
cltd
jmp
imul
test
pushf
rclb
and
das
stos
mov
fs
imul
add
mov
in
xchg
sbb
aam
xchg
sbb
push
lret
mov
sub
add
std
mov
mov
adc
push
add
mov
jge
mov
mov
mov
mov
mov
and
fwait
mov
push
and
aad
rorl
inc
jb
dec
fisttps
divl
mov
mov
mov
push
mov
sbb
dec
pop
xor
xchg
mov
in
mov
add
push
call
sub
arpl
and
mov
xor
outsb
jge
push
mov
jle
add
cmp
mov
xor
mov
lret
adc
mov
in
addb
stos
pop
and
mov
jge
cs
mov
lock
test
sahf
test
cwtl
xor
in
inc
push
inc
fisubs
dec
fldenv
add
notl
scas
aad
push
mov
cld
mov
insb
cmp
out
iret
int
sbb
icebp
out
jge
push
lret
push
lret
inc
push
sub
xchg
out
mov
fidivl
and
insb
sub
push
pop
mov
xchg
daa
or
cmp
push
push
xchg
mov
cmp
mov
lds
pop
xor
dec
mov
pop
jb
adc
sbb
lods
filds
mov
pop
jmp
adc
arpl
cmpsb
idivl
ret
clc
aam
inc
data16
stos
xchg
mov
add
mov
jns
pop
push
sahf
das
jae
pop
dec
push
rcll
jbe
bound
push
xchg
fdiv
push
les
sahf
subb
push
jns
mov
outsl
icebp
mov
add
lret
add
jl
jge
inc
lcall
or
inc
and
in
jne
lahf
pop
and
inc
adc
or
dec
aad
xchg
mov
imul
daa
fsts
mov
sarl
out
outsb
sub
add
mov
sub
movsb
dec
dec
cmp
std
mov
call
lret
imull
out
add
pop
dec
mov
add
push
and
adc
xor
mov
pop
dec
push
or
imul
leave
sahf
int3
push
leave
fstpt
repz
cld
fcmovnb
xchg
jge
into
mov
mov
push
imul
xchg
add
movsl
lea
out
and
push
xchg
lcall
fidivrs
and
lret
test
popf
aad
testb
call
inc
mov
lret
lea
xchg
mov
lret
imul
and
add
xchg
inc
nop
inc
jg
and
mov
push
test
and
loopne
sbb
cld
out
loope
iret
pop
push
inc
sub
jb
jno
mov
les
ret
mov
jl
gs
pop
push
ss
imul
cwtl
xchg
xor
fnsave
mov
add
jbe
xor
and
jns
or
fsubrs
aas
push
sbb
imull
cwtl
aam
mov
clc
mov
xchg
push
in
clc
sub
sub
inc
repnz
add
cmpsl
inc
gs
push
mov
pop
xor
mov
data16
fcmovb
jnp
cmp
ss
mov
or
cmp
xlat
insl
in
dec
jg
pop
mov
or
push
lds
adc
and
dec
scas
sbb
jns
mov
mov
imulb
dec
test
push
outsl
leave
daa
shl
out
xor
test
stc
add
mov
ret
sti
pushf
leavew
adc
cmc
dec
xlat
int
pop
lock
mov
dec
xchg
and
xlat
inc
push
clc
out
fs
popf
cwtl
inc
lock
es
xchg
xchg
popf
sub
and
repz
gs
xchg
or
dec
jo
inc
data16
icebp
repz
xor
daa
movsb
sub
sub
and
mov
add
or
sahf
pop
sbb
outsb
pop
outsl
mov
cmp
mov
sbb
jnp
lods
mov
call
mov
fs
xor
sbb
mov
push
loopne
das
lret
inc
pop
imul
popa
das
mov
sub
bound
adc
fsts
dec
movsl
dec
aam
xchg
push
cmpsb
dec
or
arpl
repnz
test
mov
pushf
lcall
ss
mov
loope
or
sbb
fnsave
or
daa
push
jmp
add
pusha
jecxz
loope
fsubr
nop
cmp
jecxz
out
lds
and
into
add
push
mov
add
xor
or
imul
jmp
lods
shl
xchg
pop
int
push
fists
js
jecxz
cwtl
sub
mov
dec
dec
pop
add
out
mov
cltd
jno
in
add
dec
scas
repz
rolb
add
stc
dec
lahf
jge
xorb
sbb
inc
pop
cwtl
ljmp
sbb
or
smsw
inc
scas
lds
mov
mov
sub
mov
adc
call
lret
and
cmp
test
cli
or
lods
add
mov
sub
fsubp
or
xchg
xor
adc
jmp
dec
orl
std
into
hlt
flds
lea
sahf
xchg
das
xchg
pop
andb
int
imul
mov
mov
out
add
divb
call
mov
mov
xor
xor
cld
dec
into
ds
arpl
jecxz
cmp
or
rcrb
bound
js
push
sub
mov
xor
cmp
push
push
mov
inc
pop
stos
das
push
pusha
push
daa
xor
dec
in
cmpsl
mov
cmp
xor
es
and
push
es
subb
mov
movsb
mov
test
test
dec
cmpsl
mov
add
iret
cmp
inc
mov
push
mov
pand
adc
loopne
jle
pop
mov
cwtl
jmp
xchg
adc
dec
dec
push
icebp
icebp
mov
lods
cmp
xchg
sbb
mov
pushf
ror
mov
xchg
andl
add
enter
imul
cmp
jge
cmp
sbbb
les
addr16
mov
ds
jne
xchg
mov
shll
cmp
cmp
ja
out
cwtl
inc
add
shl
and
sarb
bound
inc
call
xor
fnstcw
out
and
xor
movsl
inc
jg
leave
adc
pop
mov
cwtl
xchg
aam
mov
push
les
add
push
aad
dec
xor
pop
sub
add
arpl
jns
or
movb
xchg
std
jmp
orl
mov
adc
push
mov
cmpl
aad
inc
insb
sub
mov
pop
ss
cmp
xor
cmpsl
cmp
add
imul
cmp
xchg
dec
imulb
in
add
shrl
lret
fldenv
add
ret
pushf
push
cld
and
sti
cs
ffreep
jae
sbbb
mov
xchg
jecxz
push
jnp
xchg
xor
imul
mov
les
lret
das
jle
or
test
xor
cwtl
sbb
pop
daa
loope
cmp
push
pmulhuw
jnp
inc
push
daa
jl
out
and
pop
mov
xlat
imul
in
push
or
cmp
aam
mov
cmpsl
fs
lods
arpl
stc
lahf
pop
js
add
jge
push
int3
or
dec
cld
out
mov
sbbl
iret
popf
sbb
addr16
cld
push
repnz
sbb
inc
xlat
cmpsb
int3
xchg
or
shll
adc
inc
inc
mov
xlat
xchg
dec
ficoms
add
in
cmp
sbb
in
subl
dec
repnz
hlt
bound
xchg
pop
fsub
aam
fadds
test
lods
ljmp
jle
mov
addl
mov
int
mov
jnp
paddq
or
add
inc
and
ljmp
mov
dec
pop
enter
mov
mov
xchg
adc
mov
iret
and
sbb
xchg
sbb
jecxz
aad
lahf
out
adc
pop
mov
and
lahf
jmp
and
or
mov
fldt
dec
dec
xchg
ss
mov
and
pop
pop
in
jnp
mov
or
mov
adc
sbb
movb
mov
call
scas
rolb
mov
fwait
shll
adc
cmc
daa
cmp
lock
sbb
dec
mov
jp
inc
negb
xchg
nop
data16
sbb
mov
dec
stos
add
xchg
cmp
jl
pop
fucomp
mov
xchg
cmp
xchg
cmp
dec
mov
add
xor
add
in
and
pushl
or
pop
iret
jle
add
cmpsb
and
cld
fcompl
cld
in
mov
repnz
add
loopne
mov
or
inc
push
cmp
inc
repnz
repnz
stc
call
push
xor
pop
push
push
xor
clc
cmp
cmp
cltd
jb
enter
pop
pop
inc
lea
pusha
jecxz
loope
leave
sbb
andl
dec
add
and
shlb
jbe
add
bound
xchg
mov
stc
adc
out
jne
int
movsl
add
adc
mov
dec
in
mov
and
ss
cmc
dec
sbb
mov
jg
fucom
sub
lds
and
rclb
inc
shrb
inc
loopne
push
xor
push
mov
jbe
inc
and
lods
cmp
dec
fdivl
and
adc
fisubrl
pop
cmpsb
pop
sub
dec
scas
xor
push
sbb
mov
stos
jg
xchg
mov
lods
ljmp
xor
mov
outsb
inc
pop
xchg
movsl
icebp
push
mov
cmp
xor
push
pop
jmp
mov
push
movsl
sub
sbb
pop
aad
addr16
daa
xchg
aas
lea
sub
aaa
add
jl
in
cwtl
lds
test
or
into
pop
aas
lock
xchg
fnstsw
fimull
into
dec
test
jae
xor
je
mov
dec
sub
mov
out
adc
stos
mov
mulb
and
in
call
pushf
sub
sbb
cmp
jb
in
push
adc
or
jg
aaa
or
mov
push
sbb
nop
iret
xchg
aaa
mov
int
cwtl
dec
push
xorl
test
movsb
fmull
xor
and
gs
lret
in
pusha
inc
inc
fcomps
movsl
rcrl
inc
scas
repz
mov
mov
push
push
pop
sub
xor
rcrb
or
add
js
xor
lea
imul
jle
mov
pop
add
nop
inc
les
add
fbld
and
jnp
fnstenvs
roll
cld
das
jge
rorb
dec
add
nop
js
test
xor
clc
mov
push
repnz
outsb
push
or
add
or
sub
sti
test
fcomp
adc
sub
test
rcr
sub
lret
sar
xchg
div
test
clc
test
scas
or
shlb
shll
aas
xchg
adc
andb
pop
nop
bnd
dec
imul
decb
jne
pushf
insb
es
xchg
test
jnp
mov
loope
in
cltd
jle
lods
jmp
test
inc
ja
xchg
popw
repnz
pop
jmp
mov
lock
stc
daa
xchg
xchg
sti
out
rcl
inc
aas
sub
ret
xchg
mov
movsl
mov
sbb
lods
fldcw
xor
or
mov
mov
sbbl
jmp
sub
frstor
push
daa
popf
testb
xor
rolb
cs
imul
push
sub
iret
sub
add
dec
sub
mov
dec
xchg
fisubrs
out
testb
pop
mov
dec
xor
pop
ljmp
imul
hlt
or
lock
mov
pop
inc
fs
enter
cmp
in
sbb
jl
push
mov
mov
xchg
mov
mov
mov
add
sti
mov
hlt
and
adc
pop
add
push
or
les
push
fbld
mov
and
or
scas
mov
jae
idivb
lock
dec
adc
lods
jmp
inc
pop
adc
test
xor
dec
pop
fidivrs
in
mov
add
movb
movsl
sahf
repz
xor
add
enter
aad
leave
xor
js
aam
pusha
mov
ja
ja
jl
add
add
pop
pop
outsl
cmp
mov
idivb
push
add
insb
lahf
clc
ror
mov
or
cs
imul
xor
jmp
dec
enter
cmp
adc
pushf
xchg
pop
and
call
dec
mov
cmp
mov
xchg
pop
mov
in
in
fmuls
jne
sbb
cmp
xor
pop
mov
mov
outsl
into
inc
aam
push
addl
lea
push
inc
gs
add
pop
push
jle
and
leave
sbb
jl
sbb
lods
jo
xchg
cmpsl
out
cs
popf
lock
jo
iret
adc
not
and
jle
outsl
pop
adc
xchg
xchg
mov
xlat
rclb
jbe
and
xor
aaa
fabs
mov
or
xchg
adc
dec
ss
lret
jns
cmp
sub
in
ds
rcrb
adc
pop
cmp
xor
push
jle
dec
imul
loopne
xchg
sti
inc
cmpsb
in
stos
fwait
add
stos
test
outsl
xchg
or
dec
loop
add
jns
into
in
notb
stc
ss
fwait
sbb
adc
clc
pop
fucomi
adc
in
loop
not
add
mov
test
stc
mov
test
and
dec
jbe
popf
stos
repnz
xchg
inc
sahf
addr16
shll
in
and
fwait
mov
test
xor
cld
dec
fisubrs
jecxz
ja
add
in
xor
pop
xchg
cs
in
or
pop
inc
adc
adc
add
subl
jnp
dec
or
or
insl
aad
inc
sub
shlb
iret
cld
fldt
mov
cmp
pop
imul
push
push
pop
insl
scas
add
pop
mov
shll
in
dec
xchg
je
inc
pop
popa
sbb
mov
jno
adc
adc
xchg
mov
sti
pop
scas
out
jg
mov
stos
cltd
or
test
mov
mov
out
xchg
insl
mov
and
jle
cmp
adc
cltd
faddl
nop
dec
xchg
shrl
insb
push
out
pop
pop
js
mov
insl
scas
xor
subl
lret
test
inc
out
inc
roll
lret
or
in
out
shrb
jl
xchg
push
adc
or
xchg
imul
inc
push
sub
inc
shlb
add
push
stos
enter
mov
mov
jbe
std
or
fdivl
cmpb
lods
xchg
dec
lods
or
mov
int
int3
orb
xchg
sub
subl
lcall
icebp
mov
mov
lods
jns
das
cmp
jbe
es
mov
sub
inc
scas
and
sbb
pop
rclb
pop
pop
add
adc
fistl
lods
push
mov
loopne
mov
data16
or
inc
std
cmp
sarb
fisttpl
mov
mov
adc
push
mov
test
insb
inc
and
js
data16
dec
inc
aas
movsb
push
in
mov
gs
loopne
inc
xchg
int
fdivrl
push
mov
add
dec
pop
scas
hlt
jecxz
jp
pop
cmp
jb
lods
loope
std
cli
test
fistpll
mov
xchg
cmp
pop
cmc
cmp
push
loopne
mov
pop
cmp
push
pop
jbe
in
mov
rorl
cltd
ljmp
mov
adcl
push
jp
lret
iret
repnz
loope
sbb
mov
aas
mov
in
xchg
or
jne
iret
dec
into
xor
cs
adc
xchg
mov
outsl
inc
xor
adc
sbb
orl
push
aas
in
dec
or
jp
mov
pusha
in
insl
push
aad
test
mov
xchg
add
jg
insl
rolb
or
leave
and
sbb
xor
push
enter
imul
push
adc
movsl
cmp
cmp
pop
xor
lret
mov
loop
adc
ret
push
lods
lds
add
pop
in
insl
aam
jno
imul
aaa
imul
and
jge
std
xchg
pop
test
sti
insl
aas
addb
es
adc
outsb
mov
incb
out
mov
push
in
aaa
stos
stos
inc
icebp
movsl
adc
push
adc
mov
sahf
dec
or
fs
adc
push
decl
pop
jecxz
or
and
flds
out
mov
push
mov
pushf
jne
adc
sbb
push
lahf
cwtl
in
fs
loop
daa
mov
aad
or
and
fucomi
inc
mov
shlb
xchg
aad
ss
inc
mov
pop
add
cmp
inc
mov
addl
push
cmp
pop
pop
mov
les
push
ja
inc
add
and
inc
into
xor
enter
adc
idivb
cmp
test
dec
cs
mov
sub
xchg
xor
push
aam
cltd
push
bound
imul
scas
fwait
iret
inc
notl
in
lret
inc
push
or
popa
mov
sbb
das
scas
lock
or
lahf
sbb
mov
mov
addr16
sbb
dec
cmc
inc
push
fcomi
pop
jmp
movsb
dec
mov
push
sub
cmp
rolb
push
mov
and
into
inc
inc
fbld
or
rolb
test
jmp
pop
fidivrs
mull
xchg
lods
push
push
xchg
xor
jg
cs
in
mov
es
shl
mov
sahf
mov
cmp
jp
and
imul
fmul
mov
loope
les
lock
push
out
xor
clc
cmp
sbb
or
dec
push
jp
out
cmp
sbb
inc
in
subb
mov
sub
ljmp
jmp
lret
cli
lret
mov
mov
mul
loopne
or
ja
xchg
inc
les
cmp
testl
or
mov
pop
ret
adc
lods
pop
pop
enter
pop
ret
cltd
sub
sub
pushf
or
mov
jge
jno
pop
pop
dec
xchg
cmp
push
or
in
ror
push
stc
es
nop
insl
cs
enter
hlt
mov
lods
ficompl
adc
daa
fsubp
in
imul
xchg
pop
xor
das
jnp
test
push
mov
les
or
push
xor
loope
xor
stos
dec
push
cmp
fcomip
push
out
clc
lods
lret
or
mov
aas
or
cwtl
dec
and
mov
xchg
mov
mov
jecxz
mov
fwait
sbb
sub
sbb
push
mov
lods
xor
pop
push
divb
outsb
int
cmp
cmp
xlat
jle
mov
hlt
add
adc
adc
pop
jp
roll
nop
out
cmp
in
sbb
jmp
sub
mov
ret
inc
xchg
push
ret
inc
mov
fcmovnb
je
xchg
inc
popa
mov
mov
shll
push
push
sti
bnd
scas
and
dec
mov
fidivs
cmpsb
into
out
mov
cmp
shrl
test
push
movsb
lods
test
lea
jno
test
arpl
icebp
jae
and
pop
sahf
fnstsw
out
xor
inc
push
dec
out
faddl
sbb
lds
xor
sbb
pop
jne
mov
push
mov
and
mov
outsl
es
cwtl
inc
stos
or
enter
ficomps
addb
and
pop
cmp
lods
aad
lods
test
mov
cmp
call
es
push
push
idivb
cwtl
mov
xchg
andb
rclb
sbb
or
not
sbb
rcll
mov
jl
repnz
mov
and
mov
pop
mov
test
sbb
cwtl
cwtl
inc
adc
jo
adc
pushf
mov
stos
mov
add
int
mov
cmp
xchg
jnp
js
shl
mov
fmuls
xorl
cmp
jl
dec
ljmp
xor
push
test
xor
and
rcl
mov
add
sbb
and
les
andb
cltd
or
data16
test
and
xchg
hlt
outsb
mulb
adc
mov
mov
test
push
xchg
lret
cltd
cmp
repnz
insb
leave
xor
mov
negl
mov
push
pop
jecxz
mov
xor
cli
iret
cmpsl
movsl
std
cmp
outsl
mov
xor
push
popf
or
fists
cs
loop
adc
imul
mov
pop
inc
lock
pop
jb
fmull
xchg
loope
or
mov
jp
xor
mov
push
jl
mov
popf
or
div
cs
mov
mov
enter
pop
sbb
stos
jge
mov
xchg
sbb
push
call
cwtl
fcmovnb
repnz
jnp
pop
mov
mov
aaa
sub
decl
movsl
mov
and
cmp
rcll
repz
ret
push
hlt
loopne
adc
sahf
pop
mov
or
xchg
xchg
out
mov
rolb
add
fimull
aaa
jmp
scas
cltd
movsb
in
fcmovnbe
adc
inc
pushf
pop
and
movsb
jecxz
cwtl
jp
cmc
push
inc
cwtl
fnsave
in
inc
pop
push
push
ds
addr16
inc
out
subb
sub
popf
mov
imul
inc
ja
imul
insb
dec
or
sub
into
adc
iret
adc
repnz
aaa
daa
addr16
cwtl
ret
out
nop
in
xor
mov
jg
xchg
test
daa
mov
xchg
xchg
aas
es
lcall
outsl
sub
insb
ret
push
shll
stc
shl
inc
adc
jo
xchg
add
addr16
shl
add
lahf
sbb
push
mov
push
pop
fsubp
lods
push
xor
adc
add
cmp
sti
mov
push
ss
inc
add
sti
out
dec
popf
pop
add
pop
inc
in
movsl
mov
add
xchg
addr16
push
andl
cmpsl
shlb
adc
repz
xor
out
jmp
mov
pushf
push
jb
pop
sbb
or
cmp
add
cld
push
inc
fists
std
aaa
out
leave
inc
into
sub
mov
pushf
outsl
imul
int
push
dec
int3
loop
sbb
xor
sbb
add
sbb
pop
stc
out
icebp
addr16
sbb
lds
inc
mov
fisubs
repz
mov
or
fisttpl
movb
xor
movsl
loopne
ljmp
and
test
dec
aaa
js
movsb
dec
xchg
les
cmp
adc
cmp
lea
xchg
cli
add
inc
mov
adcb
jb
pop
xchg
cli
pop
les
xchg
aad
jo
jmp
repz
scas
mov
pop
sar
cli
mov
xchg
pop
push
xchg
jnp
jb
gs
es
push
xor
xor
icebp
adc
stc
les
test
sbb
inc
cmp
mov
add
sbb
and
fisubs
sbb
and
or
scas
xchg
fistpll
inc
imul
jnp
cld
in
mov
jp
cwtl
loope
jne
xor
sub
pop
in
cmpsb
stos
and
sahf
push
mov
add
inc
or
fwait
cmp
aad
adc
dec
scas
into
stos
fsubrl
dec
aam
lock
cmc
sub
je
adc
pop
mov
fbstp
mov
orl
jnp
cmc
mov
fsubrs
and
or
dec
movsb
test
std
mov
in
scas
xor
add
pop
fwait
dec
adc
push
aam
pop
nop
subb
and
xor
repz
ret
xorb
int
pop
insb
xlat
adc
in
mov
pushf
imul
insl
push
sub
scas
daa
sahf
ret
and
sbb
scas
lret
cmp
mov
inc
popf
pop
popa
xor
andb
cs
inc
fnclex
cmp
inc
dec
cmp
jo
add
rcrl
jbe
mov
popa
pop
loop
xchg
cmc
ljmp
enter
xchg
stos
pushf
push
mov
sysenter
dec
cmp
mov
stos
cmpsl
and
int
mov
sub
sub
push
jg
sahf
add
sub
loope
mov
or
mov
fwait
std
pop
dec
and
push
dec
jl
mov
test
jp
xor
xchg
xchg
pop
or
lahf
fisttps
pop
jnp
arpl
dec
fwait
insl
push
fimull
out
push
testb
jbe
inc
mov
mov
mov
mov
and
push
pop
pop
pushf
gs
shrl
fidivs
sti
jno
mov
rcrb
aam
testl
pop
movsl
in
shll
stc
push
fsubrl
into
lcall
pop
rorl
sbb
mov
jne
xor
leave
jne
cmpsl
cltd
jg
xor
jbe
and
fdivrs
aad
jb
pop
mov
push
sub
mov
loopne
ja
lahf
int3
ss
push
fstpt
inc
daa
mov
popf
and
pushf
adc
out
fidivrs
push
mov
orl
xchg
daa
mov
addr16
shll
cmp
push
xchg
dec
orb
xchg
leave
mov
pop
jl
pop
pusha
jge
cmp
inc
hlt
lods
xchg
sbb
out
cld
sub
xorl
lods
pushf
xchg
sub
push
pusha
inc
push
mov
inc
dec
pop
sarb
xchg
cmpsl
fucomp
or
test
mov
es
lock
imul
sub
or
fsubrs
stos
inc
lock
aam
dec
push
pop
push
in
adc
test
dec
sbb
loopne
sbb
ffreep
jno
fdivrs
icebp
cmpsl
jl
sbbb
fldenv
test
cmpsb
les
push
mov
call
xchg
jnp
js
adc
push
mov
lock
dec
jg
pop
clc
mov
test
or
dec
add
popa
mov
jecxz
mov
lock
shrl
dec
mov
cli
and
xor
out
test
jno
or
add
stos
mov
mov
jle
lret
cmpsl
mov
mov
pop
inc
faddl
notb
bndldx
inc
jbe
xchg
ret
je
ljmp
out
pop
pop
js
push
outsl
pop
xchg
aad
negb
clc
mov
insb
rorl
cmpsb
adc
jp
popf
dec
stos
xor
shll
and
sub
adc
jbe
push
pop
dec
jo
loope
adc
icebp
jge
dec
out
jl
mov
xor
and
add
mov
imul
mov
pop
or
xchg
xchg
out
xchg
adc
mov
xor
lahf
stos
clc
inc
lods
or
push
or
cmp
std
jae
add
inc
in
shll
loope
push
fs
divb
cmpl
shl
stos
outsl
lods
xor
add
cmp
pusha
insl
movsb
data16
pusha
out
fbld
ret
movsb
or
adc
xchg
jge
sbb
lea
loop
push
jno
out
lcall
daa
out
jbe
gs
out
mov
popf
push
jg
es
loope
inc
shll
adc
xchg
sarb
mov
sbb
int
mov
fisubrl
mov
push
rclb
into
stos
aaa
sbb
cwtl
xorl
std
xchg
mov
pop
inc
and
popf
ret
sbb
mov
test
iret
dec
push
jecxz
inc
mov
inc
xchg
add
mov
push
dec
xor
orl
pop
dec
loop
test
or
out
push
xchg
movsb
cmp
mov
inc
or
mov
fwait
mov
shll
cwtl
lahf
sahf
push
mov
dec
mov
pop
in
cmp
mov
push
mov
call
cmp
mov
rcl
arpl
mov
add
xor
jmp
inc
mov
stc
data16
push
fwait
sub
jmp
pop
out
inc
pusha
adc
stos
mov
jnp
mov
lret
cwtl
push
ljmp
lods
mov
nop
movsl
scas
add
dec
lock
or
out
jmp
shll
add
adc
dec
scas
in
add
pop
sbb
lcall
roll
jg
pusha
rcll
icebp
xor
jb
fmulp
or
add
xor
ljmp
mov
add
xor
sub
shlb
js
mov
mov
jae
popa
lods
js
sub
mov
out
pop
push
rorb
xor
fisttpl
sbb
std
and
enter
adc
lea
sub
fldl
mov
fcoml
mov
icebp
rcl
add
mov
mov
cmpl
stos
out
ljmp
xchg
xor
push
popf
ret
jb
lret
hlt
imul
out
mov
cmp
xor
cmp
shl
xchg
mov
jns
pop
imul
enter
popa
cs
sub
push
mov
cmpsl
adc
cmp
jecxz
cli
and
loope
or
sub
inc
or
imul
testb
pop
lea
add
mov
das
add
out
sbbl
aam
or
repnz
cwtl
gs
test
xor
aam
or
and
lahf
lahf
xor
mov
pop
imul
mov
xor
jl
pop
jecxz
sub
test
xor
arpl
inc
es
cmpsl
loop
cmp
xchg
movsb
jns
jg
ret
insl
pop
and
pop
mov
mov
icebp
cmp
ljmp
jp
clc
fcomip
leave
cmp
xchg
inc
add
out
add
hlt
sub
mov
mov
lock
hlt
mov
lds
mov
or
pop
lcall
mulb
xor
ficoml
mov
in
hlt
and
adc
es
out
add
fimuls
ficompl
jb
into
pop
lock
mov
sbb
loop
jo
inc
arpl
in
mov
or
popf
or
lods
sub
stc
sbb
aad
lcall
nop
sub
dec
xlat
cmovl
cli
cmp
sbb
jmp
sub
clc
outsl
outsb
push
fsts
stos
mov
mov
push
ret
push
dec
nop
add
push
inc
push
shlb
push
xor
pop
and
ja
lds
fimull
nop
mov
cmpsb
sbb
xor
repz
mov
or
jo
jl
in
or
div
daa
and
adc
sbb
jle
rcrb
aaa
jecxz
ja
test
dec
sarb
cmp
shll
out
fstl
sbb
jo
fnstenv
sbb
sub
das
push
nop
data16
xlat
inc
jns
std
xor
and
stos
fs
imul
mov
inc
pop
ret
pop
inc
push
xor
mov
and
bnd
cmc
aas
lcall
loopne
adcb
jmp
push
loopne
mov
jp
sahf
xchg
sbb
jge
ja
or
lods
mov
push
test
push
inc
sbb
or
aaa
mov
xchg
add
shlb
push
adc
data16
in
xor
mov
lret
or
inc
cmp
jb
sub
gs
xchg
pushf
mov
xchg
lret
jmp
mov
xchg
xor
pop
and
lret
sbb
test
and
int3
fnstenv
mov
clc
cmp
mov
mov
insl
mov
cmpsb
scas
inc
call
leave
arpl
adc
cmp
bound
adc
add
adc
sti
bound
fildl
mov
das
in
loop
jle
inc
dec
rcl
lds
jbe
xchg
or
fnsave
push
or
shlb
loope
cmp
test
or
push
lcall
ss
loop
jp
mov
mov
mov
jmp
pop
cmp
es
repnz
or
xchg
std
add
mov
imul
adc
push
ljmp
push
inc
imul
jl
inc
mov
test
mov
cmp
cmp
stos
jle
rep
bound
testb
jne
dec
pop
and
clc
fsubr
mov
cmp
ret
leave
jmp
xlat
adc
xchg
scas
inc
fistl
daa
jmp
ja
out
adcl
dec
or
cli
inc
ljmp
int
in
sahf
jg
push
and
subl
in
test
pop
fbstp
sbb
dec
scas
std
xor
in
sbb
cmp
adc
test
scas
mov
cmp
jo
mov
inc
test
negl
pop
idivb
and
dec
imul
jb
and
aad
imul
add
in
cmc
repnz
clc
xor
rolb
sub
cmp
pop
inc
ret
mov
push
fldenv
push
negb
xchg
add
mov
iret
iret
sbb
incb
push
cmp
dec
aad
jecxz
daa
loop
xchg
mov
fmuls
adc
jno
adc
cmpsb
ret
repnz
mov
rolb
pop
fimull
push
cmp
cmpsl
mov
add
jbe
xor
cwtl
inc
sub
test
sub
sbb
aad
lcall
or
leave
or
cmc
cmp
jle
mov
scas
popl
mov
and
and
push
cld
mov
dec
inc
insl
sti
jne
jecxz
fcoms
andl
mov
mov
or
movsl
aad
imul
lret
lods
data16
enter
aad
shll
sub
mov
inc
ja,pt
movsl
or
cwtl
faddl
jo
es
pop
push
or
lahf
ret
push
mov
cmp
insl
popf
sbb
out
sahf
cmp
cmp
dec
sub
sub
mov
outsl
xlat
xchg
jne
xlat
aas
mov
push
sbb
fmull
stc
mov
add
fidivrs
popa
push
dec
sahf
mull
rorb
aas
xchg
mov
out
sbb
xchg
lds
xchg
jo
rclb
dec
fs
js
push
repnz
fldt
xor
jmp
cmp
inc
and
inc
mov
xchg
mov
push
adc
adc
lds
pop
std
sbb
icebp
push
cmpsl
in
fists
mov
out
imul
das
jl
jge
mov
inc
mov
cli
mov
sub
out
xorb
xchg
loop
pop
insl
lret
ss
xchg
sub
inc
in
fwait
ror
scas
repnz
insl
fsubrl
sbb
stc
add
adc
bound
cld
fists
adc
int
adc
pop
cld
mov
ficompl
or
push
push
and
adc
adc
les
cmpsl
xor
icebp
jle
lret
sti
lret
or
movl
jb
cmp
cltd
add
imul
je
mov
or
lea
push
adc
mov
jns
add
push
imul
pop
incb
aas
fwait
mov
mov
xchg
inc
and
sbb
out
dec
mov
cmp
push
mov
pop
inc
mov
repz
ds
sub
and
gs
adc
xchg
in
or
shl
lahf
xchg
dec
push
mov
mov
push
popa
xor
xchg
xlat
xor
adc
jl
cmp
mov
fldcw
jge
ret
mov
cmp
push
cvtps2pd
lods
in
adc
xor
lock
xchg
jne
icebp
sbbl
pop
mov
jg
mov
leave
std
push
pop
outsb
mov
lds
push
jne
jmp
in
sbb
mov
or
bound
aam
outsb
sbbl
sub
xchg
cmp
popf
sbb
stos
sub
addr16
or
sti
adc
and
and
or
cmp
lahf
cs
xchg
ret
mov
ficomps
mov
sbb
ret
xor
mov
pusha
gs
cli
ss
push
and
inc
xor
push
sbb
xchg
addr16
repnz
mov
enter
xchg
cmpsb
bswap
int3
out
push
gs
push
sahf
fucomp
xchg
je
sbb
mov
popf
sbb
jae
insb
jns
fcmovne
sbb
mov
push
in
mov
lods
in
ficoml
inc
mov
test
std
cltd
push
pushf
jne
or
inc
inc
fildll
sub
js
imul
push
xchg
imul
lret
mov
sti
idivb
xor
stos
push
push
mov
out
movsb
cmp
clc
pop
loop
jmp
cltd
mov
loope
pop
adc
mov
movsb
dec
loop
push
adc
movups
push
ficoml
aas
xchg
mov
mov
jae
pop
xor
xor
dec
lock
std
std
in
sub
popa
rcr
in
stos
dec
bound
cmp
ds
sbb
add
sbb
push
fdivp
int
and
xor
addb
pop
pop
mov
fcomps
cmpsb
lock
pop
mov
ljmp
jno
jo
call
jbe
test
or
cmc
sahf
xor
adc
outsl
or
scas
out
adc
out
nop
ret
ds
notb
les
imul
das
ror
aas
call
arpl
and
sub
adc
test
sarb
fwait
pop
push
cmc
mov
xor
fildll
notl
dec
jge
mov
xlat
push
arpl
lret
movsl
pause
add
xchg
les
jno
punpcklbw
insl
aaa
push
cli
xchg
insl
outsl
xor
adc
cmpsb
sub
clc
jbe
inc
adc
cmp
fcoml
fstpl
inc
fcmovnu
sbb
or
negl
sbb
adc
mov
lcall
sti
xor
push
test
pop
icebp
gs
xchg
xor
sarb
ss
inc
push
sbb
faddl
aam
cmpsb
fdivrl
adc
stos
sbb
std
outsl
mov
in
jp
insb
pushf
rcrl
and
sub
loopne
pop
mov
loopne
xchg
ror
mov
and
xchg
or
sarb
mov
push
or
jno
push
pusha
ret
add
push
inc
and
or
mov
shrb
fnstcw
sub
jg
push
mov
orb
ret
xor
add
mov
nop
sbb
pop
mov
adc
push
nop
scas
push
inc
add
shl
lds
out
cld
test
xorl
inc
fstpt
int3
or
cmc
sbb
mov
and
js
aad
pop
fisubrs
sar
xor
pusha
pop
sbb
mov
adc
sbb
jns
sub
mov
xchg
sarl
inc
fucomp
data16
add
or
jp
push
adc
aaa
out
hlt
or
sbb
mov
mov
xor
iret
xchg
jp
mov
shll
pop
mov
je
push
sub
lret
cmp
inc
clc
ss
out
icebp
insb
dec
dec
add
and
and
in
mov
ss
sbbl
adc
cli
out
pusha
movsl
xor
pusha
jmp
lret
mov
mov
out
jle
add
pop
mov
mov
mov
xor
adc
lock
stc
or
mov
stos
mov
or
sub
mov
pushf
inc
insb
sbb
xchg
loop
adc
xchg
jecxz
add
push
mov
in
dec
mov
into
cmp
push
daa
lods
mov
mov
in
cmp
addr16
mov
and
das
or
cmp
rorb
push
cmp
sub
pop
or
hlt
add
ds
insb
sub
idivl
ss
or
mov
jae
adcb
jns
sbb
add
pop
movsl
adc
into
push
mov
lods
fidivrl
test
mov
in
adc
jmp
outsl
ret
pop
int
rorl
aas
pop
cmpsl
mov
stc
aam
aad
add
pop
movsl
sbb
adc
jp
sarl
add
pop
mov
icebp
std
je
push
popl
or
loopne
xchg
push
in
popf
inc
je
lods
filds
mov
lret
test
mov
cmp
cmp
mov
pop
mov
js
push
add
inc
iret
add
jl
mov
clts
ror
push
leave
gs
sub
mov
mov
mov
daa
jecxz
das
movsb
xor
adc
popf
in
int3
hlt
xchg
inc
sbb
pop
xor
xchg
insb
cmp
addb
pop
icebp
aas
lret
dec
les
add
cmp
and
cwtl
out
push
pushf
popa
mov
sbb
cs
inc
pop
xchg
and
fdivs
jae
adc
imul
icebp
add
and
sub
pop
out
mov
push
mov
jge
sbb
mov
int
fmul
sar
fldl
dec
sbb
mov
mov
cld
mov
repz
push
push
xchg
xchg
aaa
mov
je
pop
and
jb
cmp
sub
clc
or
cmpsl
loopne
out
push
rcrl
cmc
rcrb
pop
rolb
mov
push
jbe
fsubs
mov
xchg
rcll
pop
pop
mov
add
incb
jo
mov
cmc
and
pop
sbb
and
outsb
mov
inc
adc
rclb
js
mov
pop
push
dec
pop
sub
shrb
out
cmp
ficomps
jle
ljmp
and
push
int
sub
mov
jno
dec
xchg
movsb
loopne
jl
xchg
and
cmpsb
mull
inc
fldenv
rcrb
scas
push
xchg
inc
std
in
sbb
loope
orl
pop
xchg
sbb
xchg
mov
fsubrp
inc
cmp
test
ss
shrb
push
lods
cmpl
divb
iret
add
inc
mov
pusha
dec
xchg
push
orl
stos
aad
stc
or
push
add
xor
mov
jb
data16
andb
and
xchg
loope
xchg
pusha
popf
mov
vmwrite
out
cmp
cmp
or
scas
mov
aas
sbb
iret
pop
cli
adc
test
pop
cs
sbb
insl
sbb
push
sahf
cmc
or
je
js,pt
test
dec
nop
inc
mov
adc
sub
pusha
out
jb
mov
lock
dec
inc
xchg
lret
push
call
sahf
lret
pop
test
jb
jmp
jle
adc
push
leave
scas
pushf
inc
es
adc
pusha
jp
test
sbbl
test
sbb
inc
jae
lcall
rcll
sub
adc
lods
adc
lods
or
in
mov
mov
pop
jae
fisubs
jno
xchg
test
ficompl
inc
ficoml
cmp
add
mov
push
ret
lret
inc
pop
pop
push
sub
push
jle
fwait
sbb
mov
or
add
es
mov
push
sbb
adc
sub
inc
inc
push
or
test
sub
fdivrl
xchg
or
mov
sbb
xchg
shlb
fidivs
xchg
sbb
outsb
cwtl
in
push
push
jo
cli
sbb
cli
insb
cli
sbb
imul
movups
or
cs
in
xchg
pop
xlat
hlt
fsubr
ret
xor
int3
subb
adc
adc
rcrb
faddl
adc
dec
xor
or
mov
xor
dec
ja
add
into
ret
push
cltd
sarb
mov
jge
repz
aaa
cmp
cmp
pop
js
cmp
xchg
dec
add
or
das
push
sbb
into
sarb
and
push
loop
adc
push
adc
lahf
pop
adc
push
add
push
pop
mov
jbe
insl
cmp
push
push
fsts
xchg
xlat
out
sbb
dec
inc
fsubr
and
mov
std
jle
es
js
inc
movb
int
loopne
mov
push
sar
xor
xlat
adc
xlat
std
test
pop
lea
cmp
scas
aam
shll
in
outsl
xchg
and
stc
stc
cmp
iret
cld
loopne
imul
out
ret
idivl
cmp
nop
movsb
push
std
in
fmul
icebp
sub
dec
inc
cmpl
add
and
mov
sbb
addr16
sti
push
and
adc
rep
add
dec
xor
xchg
xorl
fcoms
lea
std
jbe
cmpsl
xchg
aam
fstp
outsl
mov
mov
dec
repnz
lcall
pusha
lea
fsubr
fmuls
jp
insb
xchg
scas
cmc
cltd
and
add
push
sbbb
enter
int
mov
hlt
mov
cmp
repz
or
push
xlat
push
scas
icebp
lcall
xchg
sbb
test
mov
pop
test
sbb
pop
stos
xchg
jnp
mov
lods
jb
ljmp
adc
mov
cmp
mov
xchg
inc
test
iret
inc
xor
repnz
into
dec
lahf
push
pop
aas
loopne
push
out
cmc
loop
adc
xchg
inc
sbb
dec
fisttpl
outsb
cmp
test
pop
sbbl
mov
or
imul
push
mov
rcrl
mov
sub
add
ret
adc
outsl
outsl
in
aas
mov
mov
xchg
mov
in
sub
pop
rcr
sub
xlat
rcrl
jno
andl
cwtl
ja
stc
pop
ljmp
push
stos
cli
pop
aaa
sbb
dec
arpl
nop
jb
loopne
popa
jmp
or
cmp
sbb
sti
and
and
adc
filds
fwait
pop
outsl
lea
push
iret
sbb
push
sub
pop
xchg
pop
and
pop
pop
je
lret
xchg
mov
adc
mov
inc
jbe
loopne
mov
hlt
mov
mov
pop
je
jbe
test
jg
jo
push
xchg
cltd
sbb
jns
mov
rcll
enter
lods
repnz
cmpsb
int
sbb
mov
popf
out
fistpll
adc
sahf
push
inc
add
aaa
mov
in
dec
rcrb
sar
xchg
push
inc
jne
pusha
imul
lods
test
mov
hlt
pop
outsl
out
add
push
enter
sti
xchg
adc
int3
inc
mov
push
jnp
insl
stos
into
mov
scas
outsl
popa
fnstcw
in
push
jbe
jbe
add
pop
cmp
call
push
inc
sbb
or
pushf
hlt
imul
les
loopne
cli
ficompl
push
and
loopne
cmp
loopne
and
cli
dec
lahf
mov
dec
push
adc
sub
and
stos
mov
mov
insb
stos
cmp
or
das
cld
sbb
and
icebp
mov
inc
ja
fisttpll
popa
adc
xor
loopne
ss
sbb
popf
fwait
cwtl
faddp
in
pop
add
movsb
stc
lock
icebp
inc
ss
inc
aaa
push
jo
jo
clc
out
scas
lcall
xchg
jb
mov
xchg
or
mov
in
fbld
ljmp
cmp
xchg
xchg
jb
sbb
movsb
movsb
fistpl
cli
mov
push
ja
jl
sub
xchg
int
fcomp
mov
sbb
das
pop
popa
mov
inc
insl
in
out
addr16
or
movsl
into
sbb
adc
jno
or
es
mov
lret
mov
dec
push
lock
in
ret
mov
xchg
out
cmp
sbb
push
mov
lret
stos
mov
mov
adc
jg
inc
xchg
cmp
test
in
fistps
inc
in
stc
cmp
inc
out
push
fidivl
pop
mov
popf
pop
or
not
push
xchg
aam
add
mov
lods
fcmovnu
jno
push
fiaddl
ret
push
pusha
push
cmp
sahf
shrl
jle
xchg
cmp
cmp
addb
fadds
loop
mov
out
fdivr
mov
sub
and
insb
push
test
insb
fadds
sub
adc
repnz
mov
popf
xchg
xorb
std
or
imul
out
leave
push
jne
data16
jle
cmc
ret
dec
test
push
insl
insl
sub
addr16
daa
cmpb
sub
push
mulb
movsb
jl
cmp
sahf
rorl
mov
inc
loop
mov
and
lods
adc
push
xor
sub
cmc
mov
add
pop
pushf
pop
imul
adc
mov
fcomps
pushf
pop
xchg
subl
in
movsb
dec
mov
adcb
xchg
xlat
sbb
mov
dec
fistps
pop
mov
std
inc
arpl
push
sub
pop
xchg
sbb
xchg
sbb
ror
imul
leave
or
adc
ds
jge
jl
or
insb
dec
push
jo
xchg
push
lock
mov
insb
mov
in
out
frstor
jno
out
idivb
scas
mov
jmp
aaa
fucomip
jecxz
mov
icebp
mov
sysenter
mov
mov
leave
inc
mov
push
in
adc
jo
adc
int3
mov
push
mov
push
add
add
cmp
xchg
sub
ds
xchg
add
icebp
std
in
idiv
fwait
into
push
mov
mov
push
jae
cld
addr16
mov
cli
aas
out
fnsave
aam
mov
inc
push
push
and
mov
les
or
inc
idivb
or
cwtl
notb
sub
hlt
in
testb
push
mov
inc
inc
sbb
lods
xlat
jnp
out
cmp
mov
ljmp
inc
addr16
add
pop
clc
pop
pop
jmp
mov
out
lret
dec
sbbb
dec
mov
dec
jae
mov
sub
cmpsb
xchg
jg
sub
ret
popa
mov
rcrb
ja
sub
outsl
pop
push
xchg
mov
enter
xor
sbb
cmp
movsl
pushf
arpl
xchg
mov
jmp
push
inc
jl
xchg
arpl
xchg
pop
fwait
outsb
aad
pop
pop
pop
cmpsl
mov
cmp
dec
xchg
xor
lods
pop
xor
popf
xor
add
fst
jae
and
adc
lods
cmp
xor
cli
mov
mov
sti
pop
inc
int3
xchg
xchg
hlt
sbb
add
sbb
nop
in
add
fmuls
sub
insl
cld
stos
movsl
movsb
adcb
aad
insb
mov
pop
adc
leave
jnp
mov
mov
push
xor
push
outsl
dec
ja
and
scas
lahf
hlt
push
fsubp
xchg
and
push
rolb
je
ror
rolb
cmp
nop
adc
push
movsb
inc
vmovapd
or
push
cwtl
jo
mov
out
inc
adc
pop
stos
cmc
or
xor
cmc
sub
push
jne
mov
rorb
pop
in
jne
roll
hlt
inc
jp
mov
sub
jo
fldcw
scas
sbb
mov
adc
daa
pop
cmpb
pop
xchg
sbb
jbe
popf
xchg
rorl
mov
loop
push
daa
xor
cmp
cwtl
jle
mov
arpl
adc
push
mov
adc
sbb
lods
jmp
xor
jl
push
mov
cmpsl
filds
mov
movsl
dec
or
jns
xor
xor
sbb
mov
in
out
enter
xor
push
fsubl
js
imulb
mov
lea
mov
lahf
adcb
aad
inc
jno
bswap
dec
ja
or
add
cmp
lea
mov
dec
data16
lock
enter
loop
pop
adc
ss
shlb
inc
cs
fwait
pop
xchg
mov
in
jg
scas
mov
xchg
and
pusha
jae
repz
mov
lock
div
mov
insb
sarl
call
mulb
cwtl
imul
push
pusha
fstps
rclb
and
xor
jl
cs
jl
int
hlt
jno
add
xchg
dec
outsb
addl
jo
sub
cmpsl
mov
addb
jmp
sub
push
jg
imul
adc
cmc
jbe
mov
add
icebp
inc
add
sbb
inc
xchg
and
push
fs
cli
arpl
fistpl
add
pop
stos
cmp
pop
and
test
xchg
mov
andb
cld
mov
push
push
push
pop
xlat
outsb
jg
lods
jb
enter
fcoml
jmp
jg
stos
lea
push
mov
push
xorb
fisttps
xchg
mov
mov
es
in
jle
sahf
clc
js
test
xchg
loopne
mov
dec
add
lahf
lods
aam
fcomps
xchg
add
cmc
xchg
int
pop
fldl
aaa
idivl
das
jmp
lock
inc
es
test
mov
in
mov
xchg
je
insl
mov
mov
sub
xchg
jns
xor
pop
xchg
stc
jle
inc
dec
push
fs
push
shr
sbbb
rcrb
jb
int
nop
adc
pop
inc
mov
sbb
push
enter
push
pushf
stos
push
add
js
std
jnp
lods
add
xchg
cwtl
xor
xor
gs
mov
js
dec
imul
int3
fdivrp
cmp
cwtl
cmpsl
mov
push
popf
rorl
movsb
or
shrb
inc
xchg
lock
sbb
aam
xchg
pop
inc
test
aas
cmp
mov
jp
push
xchg
out
scas
imulb
pop
sbb
ds
pop
subb
flds
pop
pop
cmpsb
into
mov
out
shlb
mov
roll
movlps
dec
ljmp
pop
cmp
jne
push
scas
subl
icebp
xlat
outsl
add
add
cli
js
mov
mov
scas
jns
xchg
shrb
mov
push
sub
sahf
and
sub
push
into
mov
xchg
sbb
lret
mov
mov
scas
ret
xchg
sub
std
es
sub
std
pop
stos
movsb
mov
mov
sti
and
push
dec
sbb
fdivr
aas
stos
adc
or
adc
andb
mov
faddl
mov
mov
xchg
cld
jae
mov
mov
cwtl
shrb
lods
push
dec
js
cmp
add
and
test
int
mov
push
test
in
popf
push
mov
out
xchg
xor
shlb
inc
icebp
call
dec
jmp
stc
add
dec
mov
mov
movsb
sub
shlb
jae
rcl
xor
xchg
push
adc
lahf
xor
data16
dec
xor
dec
sbb
pushf
ret
push
add
or
or
mov
xchg
mov
or
das
push
push
jge
xor
dec
mov
ret
xchg
ja
push
xlat
rorl
inc
dec
jmp
fidivrs
lea
addr16
inc
out
sti
loopne
into
std
movsb
add
pop
movsl
lcall
outsb
jbe
lret
xchg
mov
jmp
xchg
lods
push
jecxz
das
rcrb
imul
lret
dec
mov
adc
daa
es
aad
cmp
cmpsb
jecxz
cli
mov
jmp
pusha
int
ljmp
xor
jae
test
mov
sbb
sbb
dec
orl
imul
cmp
jg
bound
xor
add
movsl
jge
dec
enter
addr16
cld
out
sub
in
fistpll
jne
gs
mov
or
mov
mov
js
outsl
mov
and
bound
scas
lds
sbb
and
mov
adc
arpl
jle
pushf
in
into
xchg
ficoms
ds
jp
add
xorl
mov
testl
adc
and
ret
and
xlat
inc
cli
lret
push
adc
sbb
rcll
in
pop
pop
outsb
push
xor
ja
out
jmp
movsl
ds
mov
lds
jecxz
mov
push
popa
sub
sub
aam
fisubs
cli
shrb
lret
mov
and
add
xor
out
pop
xchg
outsl
add
insb
popa
ss
mov
es
mov
or
cmp
shrb
test
jmp
std
xchg
xchg
sub
inc
push
sahf
loopne
out
data16
pop
loopne
adc
scas
in
fnstcw
or
mov
push
ljmp
xchg
cmp
sub
pop
enter
loopne
into
mov
mov
and
sahf
xchg
in
int
in
into
fmuls
or
pop
fisubl
dec
rcl
jo
out
xchg
cmpb
pop
add
sbb
int
sub
in
xchg
cld
pop
adc
xchg
lods
add
cmp
cmp
jmp
pop
jmp
loope
mov
pop
fwait
push
xchg
lret
icebp
std
imul
xor
cmpsl
adc
test
mov
pop
cmpsl
push
mov
shl
jno
push
inc
pop
into
fnsave
sub
xchg
mov
pop
dec
int
cwtl
adc
pusha
addr16
mov
or
repnz
fsubrl
idivb
loopne
cmp
loop
ss
mov
xor
das
jecxz
int
mov
addr16
mov
in
sbb
ror
in
iret
jo
jp,pt
lret
rol
inc
adc
or
roll
adc
xchg
cmovnp
lcall
in
dec
movsb
push
xor
mov
das
jb
insb
call
and
adc
enter
sbb
mov
and
add
fldcw
stc
lods
sub
cmpsb
lds
shl
or
inc
pop
les
fstl
sbb
mov
das
xchg
pop
jl
sbbl
mov
pop
push
mov
pushf
loop
mov
mov
and
repz
enter
sub
pop
sub
pushf
pop
dec
jp
imul
pop
lea
nop
mov
iret
pop
cmpsb
js
mov
cmp
adcl
push
push
cmc
mov
mov
xorl
jns
adc
jne
nop
filds
push
mov
dec
lds
sbb
ret
cmp
out
ds
push
pop
add
test
insl
mov
adc
adc
mov
dec
sbb
mov
pop
mov
xchg
mov
and
sub
imul
adc
jne
pop
mov
shlb
data16
add
push
push
fstpl
std
int
mull
insb
fcomip
les
ss
aam
fwait
lret
pop
cltd
fwait
jmp
xchg
cmp
in
mov
xchg
jnp
jmp
cmp
push
xchg
jno
jg,pt
out
mov
call
in
insb
repz
add
mov
push
lret
es
scas
mov
mov
lock
ss
outsb
test
or
xchg
mov
inc
sti
jp
nop
loopne
xchg
test
dec
lods
test
xchg
cwtl
sbbl
cmpsb
adc
les
cmpsl
xor
and
sbb
out
fcmove
jp
pop
enter
mov
loope
scas
pop
leave
push
shll
xchg
shl
lea
pop
lds
mov
and
imul
xor
or
xor
mov
pop
rorl
inc
mov
cmpsl
push
iret
pop
and
inc
loopne
or
mov
repnz
push
test
cltd
mov
lods
adc
sub
cli
xor
std
das
mov
push
or
mov
aaa
push
mov
cmp
mov
jle
xchg
dec
mov
in
mov
sub
pushf
shrl
push
sbb
mov
pop
jbe
mov
mov
je
mov
incb
enter
and
fwait
outsl
add
das
mov
mov
and
mov
push
cwtl
fadds
jns
je
or
jns
pop
or
cltd
xor
popf
jg
test
sahf
push
in
fildll
into
xor
mov
sbb
push
arpl
test
dec
fs
and
dec
pop
mov
jmp
jae
test
ja
or
movsl
pushf
xchg
testl
dec
jg
sbb
xor
xchg
or
sahf
mov
xchg
or
test
cltd
mov
aad
movsb
cmp
mov
sub
or
jo
inc
fisttps
int3
int3
adc
cltd
subl
pop
add
mov
fldl
push
pushf
gs
dec
std
lret
mov
lock
into
adc
test
adc
inc
pop
fadds
ret
mov
aam
les
push
aaa
out
dec
inc
mov
jp
cltd
jns
loope
mov
jae
mov
test
std
or
add
cmp
aas
pop
jmp
push
pop
push
inc
enter
push
or
cmc
insl
mov
cmpsb
test
xor
push
xlat
dec
pushf
or
push
pop
psllw
cli
pop
lock
inc
mov
aaa
mov
out
inc
mov
adc
pop
fdiv
ret
jl
mov
adc
adc
lahf
insb
hlt
ret
xchg
jl
sub
push
jne
adc
xor
mov
idivb
xor
shrl
ret
xchg
into
mov
repz
xor
inc
subb
fsub
ret
dec
xor
ss
daa
sti
sahf
xchg
int
cmp
cltd
stos
clc
stos
insl
mov
jmp
xor
cmpsl
iret
gs
inc
push
imul
aaa
jbe
cmc
push
mov
and
cmp
push
sarb
inc
imul
dec
scas
test
pop
xor
cli
jae,pn
push
pop
adc
adc
add
xor
aas
dec
pop
mov
xlat
sti
add
es
inc
fcomip
and
cld
adc
adc
and
inc
xchg
xor
in
add
lret
sbb
in
out
and
iret
jne
pushf
or
pop
ret
jmp
outsl
mov
mov
ficoms
loope
xor
dec
mov
cmc
sub
scas
imul
cltd
mov
insl
outsb
test
enter
mov
leave
test
leave
daa
adcl
mov
jnp
imul
add
push
ss
cwtl
insb
jp
imul
inc
out
dec
mov
loope
decl
and
inc
mov
mov
push
add
mov
adc
ss
movsl
ret
test
inc
cmp
pop
popf
rolb
mov
mov
es
jne
loop
jecxz
mov
dec
repz
ret
mov
repz
popa
sti
rolb
pop
xchg
push
test
pushf
imul
in
pop
int3
xchg
fsub
int
outsl
pusha
and
mov
inc
notl
sarb
cmp
xor
ja
scas
sub
addl
cmpsb
ljmp
inc
dec
stc
scas
js
inc
jno
push
dec
xor
enter
pop
aam
mulb
mov
xchg
fidivs
fbstp
push
cmpsb
pop
mov
adc
xor
adc
mov
stos
scas
pop
rcr
bound
hlt
jmp
pop
fdiv
jno
fxch
and
push
imul
nop
mov
pop
sub
xor
and
cmc
or
xor
cs
ss
jge
dec
mov
pop
les
sub
lcall
fsubr
sarl
jo
adc
lret
adc
ds
pop
jo
pop
push
jmp
pop
mov
mov
add
frstor
daa
int
jp
sub
mov
call
adc
cs
enter
push
sbb
pop
ficoms
daa
movsl
push
cmp
int
call
push
dec
fcomps
das
pop
fnsave
int
fidivs
push
inc
mov
test
push
int3
sti
sbb
jecxz
punpcklbw
sti
sbb
and
adc
xchg
nopl
xor
push
push
adc
mov
data16
sub
pop
subb
xchg
bnd
dec
xchg
loopne
test
push
repz
stc
and
enter
sub
xchg
hlt
sbb
cmovns
mov
fwait
out
insl
test
stos
sub
test
and
bnd
loope
popa
in
cmp
ss
push
adc
and
or
sub
int3
xchg
call
pop
aam
adc
xor
jg
mov
cmpsl
and
test
mov
mov
es
je
push
sbb
popa
inc
cmp
push
jb
mov
fs
adc
push
adc
jecxz
mov
lods
ja
clc
lods
ljmp
inc
cmpsb
cmpsl
imul
mov
add
dec
jnp
cmp
insb
in
lret
mov
xchg
rcl
inc
leave
dec
xchg
into
or
inc
dec
inc
and
mov
sbb
cli
pop
lea
jmp
ret
mov
movsl
es
mov
adc
inc
loopne
adc
test
mov
call
and
ret
decb
pop
mov
loopne
mov
xor
lcall
dec
data16
dec
repz
sbb
cmp
lahf
pop
out
call
pusha
sbb
xchg
sbb
mov
xchg
iret
out
add
push
xchg
fucomip
mov
push
out
dec
popl
insl
mov
iret
add
test
pop
lahf
fcomps
xchg
mov
jne
sbb
inc
out
and
enter
daa
ret
scas
xor
scas
sbb
jnp
sbb
or
jp
into
jp
push
addr16
lods
mulb
int3
sub
push
sub
and
xchg
mov
jle
scas
lcall
inc
ds
ss
fdivs
xor
pop
inc
popf
dec
movsl
cmc
out
jns
lret
movsl
inc
xchg
das
push
lahf
adc
movsb
mov
aam
sbb
push
into
clc
lods
out
stos
cmp
adc
push
dec
xor
mov
int
lret
neg
cmpsb
xchg
mov
shrb
jmp
scas
push
aad
or
sbb
fdiv
repz
aaa
push
mov
loop
cmc
pop
jo
daa
cmp
add
and
cmpsl
rorb
sbb
dec
fldenv
jnp
scas
mov
or
xlat
repz
imul
pop
dec
mov
stos
mov
lcall
arpl
int
ljmp
push
jns
aas
and
jecxz
jg
in
mov
cmpsl
mull
int3
cld
push
mov
addb
repz
sbb
hlt
jbe
push
mov
cmpsb
iret
jno
clc
scas
cmp
adc
pop
or
mov
icebp
xor
fidivrs
inc
jg
das
cmp
and
fs
mov
dec
jl
sbb
xor
enter
add
icebp
push
jle
popa
xchg
cmp
iret
add
jnp
in
loopne
shll
mull
cmp
pusha
ficoms
mov
in
or
adc
cmc
inc
xchg
out
mov
cltd
or
inc
int3
push
gs
icebp
adc
int
inc
aam
std
adc
mov
or
xchg
pop
jge
les
repnz
cmpsl
ds
mov
out
ret
add
push
data16
fistps
div
call
push
scas
fisubl
sbb
push
mov
lds
pop
cltd
int3
cmp
std
add
lret
pop
dec
jge
sahf
pusha
jle
push
fstps
sahf
jae
cmp
mov
test
adc
lods
bound
call
mov
popa
rorb
xchg
bound
adc
sbb
jl
popf
or
xchg
leave
pop
add
jp
dec
test
push
das
fisubrs
into
and
in
sub
outsb
dec
dec
hlt
aam
rcrl
imul
adc
or
pop
movsb
push
iret
mov
lods
gs
pop
cmp
repnz
insb
cmp
das
push
out
test
out
sbb
cld
jge
sti
mov
jle
outsb
mov
loop
shll
dec
push
pop
push
jns
push
sarb
cmp
mov
pusha
hlt
mov
dec
arpl
test
popa
testl
cmp
outsb
pop
or
in
gs
xchg
sbb
lret
das
sub
push
dec
lcall
sti
fsub
push
push
std
xor
sbbl
cltd
rolb
lahf
daa
rclb
hlt
rolb
push
xorb
sahf
mov
pop
fptan
or
cmp
jns
insl
mov
in
enter
leave
push
xor
mov
pop
xchg
jl
pop
mov
mov
iret
mov
sbb
or
cmp
das
sub
mov
cmpsb
adc
popf
sahf
outsl
jo
imul
cmc
xchg
dec
lods
pop
fs
loop
sbb
sbb
xchg
in
push
cmpsb
pusha
xchg
imul
iret
mov
xchg
outsb
icebp
and
cmp
subl
aaa
pushf
xchg
cmp
inc
cmp
out
fisttpll
in
adc
lea
jmp
push
mov
xchg
imul
into
mov
mov
or
add
int3
cwtl
sahf
stc
xchg
rorb
out
arpl
jnp
movsb
hlt
lea
mov
lock
push
jnp
push
jae
sub
shll
int
mov
insb
mov
cltd
outsl
cli
out
and
scas
mov
jb
sub
mov
stc
jl
in
repnz
fnsave
push
lods
lods
xor
sarb
mov
jnp
add
push
lods
mov
xor
leave
popl
push
inc
xchg
movsb
jb
adc
call
jmp
pop
add
rclb
sbb
addr16
sub
movsl
mov
loop
inc
stos
cwtl
add
ljmp
cmp
addr16
cmp
lcall
push
dec
push
jge
rorb
or
mov
mov
data16
adc
sub
mov
rcrb
pop
scas
push
lods
inc
or
xchg
inc
jo
popa
xchg
xchg
lock
mov
test
jge
mov
push
or
inc
jp
mov
mov
lea
fnstsw
xor
dec
push
and
popa
jmp
fsubl
and
add
popl
imul
data16
inc
dec
xor
xor
rcrl
mov
loop
pushf
nop
and
pop
cmc
iret
insb
fidivl
inc
imul
inc
inc
or
inc
stc
and
out
sbb
pop
xor
xchg
pushf
cs
xor
mov
daa
sarl
mov
jl
in
mov
loopne
push
cli
xlat
call
adc
xchg
add
popf
pop
pop
xor
mov
call
dec
sahf
je
leave
test
mov
add
xchg
jmp
adc
imulb
mov
mov
shrb
mov
je
insb
xor
xchg
xor
add
jmp
rcr
repz
shr
lea
cld
dec
lods
pop
stos
out
push
xor
mov
jl
or
das
in
mov
cltd
sbb
push
cmp
flds
fwait
mov
mov
jne
inc
out
fsubrl
fwait
int
push
icebp
jno
xchg
sub
lea
mov
dec
cmp
mov
pop
dec
stos
add
inc
mov
je
test
scas
push
cmp
fadds
movsb
repnz
mov
je
lcall
out
ret
out
aam
mov
pop
jbe
pop
mov
clc
add
in
ljmp
sbbb
les
aad
gs
xchg
sbb
jecxz
xchg
add
test
mov
sahf
add
xchg
scas
lret
mov
dec
faddl
sbb
ss
lea
loopne
andl
popa
fdiv
dec
sbb
stos
adc
add
pop
jb
das
rolb
xchg
mov
xor
fptan
loope
notl
and
outsl
xchg
adc
testb
mov
aas
sub
imul
dec
out
mov
add
xor
and
loop
inc
test
adc
mov
mov
rolb
daa
clc
pop
xchg
adc
mov
push
sbb
pusha
dec
andb
es
lea
xchg
scas
xchg
push
shrl
insl
xchg
fldl
push
inc
mov
aad
imul
or
test
push
mov
pop
sbb
jmp
sub
or
in
sbb
sub
mov
aaa
push
daa
pop
pushf
outsl
adc
or
push
xchg
add
push
idiv
mov
pop
mov
aaa
pop
jg
or
das
adc
repz
and
or
inc
scas
es
cltd
pop
push
push
in
xor
stos
int3
lods
fisttps
push
sbb
loopne
xor
add
xchg
iret
cli
mov
add
xchg
test
jecxz
xchg
push
sbb
adc
mov
fs
fiadds
inc
iret
test
je
dec
insb
xchg
pop
sbb
mov
pop
mov
inc
movsb
test
push
out
leave
fldenv
stos
cwtl
out
call
cmp
and
jmp
jmp
or
cli
data16
iret
cmpsl
pop
movsb
negb
jmp
add
dec
cmpsl
iret
cmp
sbb
dec
test
ss
xor
jne
or
mov
pop
jb
pop
call
das
jno
mov
or
repnz
inc
and
ss
pop
icebp
cmp
rcl
shll
xchg
in
push
jo
dec
add
jp
lret
ret
push
push
sbb
fstpl
lahf
sbb
popf
stos
jge
arpl
xor
call
insb
cmpsl
or
or
ret
aas
mov
addb
aas
sub
jge
inc
xor
sub
push
mov
fcmovbe
pushl
adc
test
sti
xchg
int3
push
add
aad
dec
cltd
jns
xchg
and
jae
mov
adc
dec
outsl
or
dec
test
in
adc
and
and
popa
and
xlat
pop
sub
cmpsl
jmp
jecxz
test
mov
jo
into
outsl
and
push
test
movsl
test
into
inc
in
cmpsl
loopne
jecxz
mov
sub
push
int3
test
clc
ss
pop
mov
adc
add
add
push
push
lret
cmp
ljmp
outsb
cmp
lods
inc
xchg
cmp
in
jle
mov
in
push
and
lret
pusha
mov
push
clc
xchg
stos
sub
mov
cmp
push
enter
inc
pusha
mov
mov
int3
call
mov
or
mov
dec
mov
sub
add
add
inc
push
cmp
insb
jbe
jle
or
les
adc
js
ficompl
cmpl
cli
std
mov
mov
outsl
cmp
lahf
pop
dec
cmpsb
sbb
push
xchg
mov
imul
xor
pusha
outsl
dec
pop
call
inc
mov
rcrb
or
pushl
adc
clc
mov
mov
ret
adc
push
push
cld
adc
sbb
sbb
push
push
cmpsl
pop
in
ljmp
mov
xchg
jle
push
xchg
and
lahf
gs
es
pop
dec
mov
adc
add
in
lahf
in
jb
out
inc
out
iret
stos
mov
bound
popa
add
dec
jecxz
and
test
clc
inc
pop
cmp
lcall
cli
shlb
divb
inc
lret
xchg
notl
pushf
test
push
xchg
addb
enter
arpl
sbb
pushf
jle
aas
pop
dec
xchg
cmp
daa
insb
add
mov
mov
insb
imul
adc
sahf
dec
pop
xor
inc
sub
mov
jne
pop
ret
adc
push
xchg
add
shlb
into
mov
enter
xchg
cmp
fsubrs
sub
insb
rolb
xchg
xor
pop
mov
test
push
mov
pop
movsb
repz
dec
pop
rcll
or
pop
int3
fidivrs
fcompl
mov
adc
lock
pop
pop
dec
stc
mov
int3
jo
add
and
xor
in
dec
jo
cmp
cwtl
cwtl
mov
and
cwtl
rcll
and
jo
outsl
mov
enter
fsubrs
in
fistpl
pop
ljmp
fwait
mov
imul
insl
sarl
jae
aas
outsl
jg
inc
inc
xor
cltd
mov
jo
jl
int
daa
add
push
lcall
sti
pop
cmc
xor
jae
and
or
mov
xchg
sahf
gs
add
std
loope
dec
add
mov
addl
xchg
sbb
adc
xor
in
mov
dec
fwait
and
dec
pop
addl
xchg
sar
fadd
mov
rolb
aas
cmpl
inc
pop
dec
or
insl
std
sub
ja
out
sub
hlt
pop
loop
jb
xlat
xor
and
or
or
mov
mov
pop
les
sbb
cmp
jg
push
jmp
fnstenv
xor
aam
test
popa
ss
or
sbb
xchg
mov
jle
pop
xlat
cmp
adc
jb
pop
daa
cmp
jo
bound
xlat
add
lds
in
pushw
adc
jg
out
mov
pop
test
lds
addb
test
test
sub
not
dec
push
jg
sub
mov
clc
xchg
lcall
ljmp
mov
mov
fcompl
adc
int3
out
add
stc
mov
cmp
imulb
add
push
adc
or
insl
ja
inc
fldenv
cltd
jo
orb
xchg
insl
pop
jl
and
repnz
fsubl
in
lods
rolb
std
mov
jge
dec
push
dec
xor
mov
mull
pop
subb
and
xchg
jae
push
test
daa
out
les
ljmp
mov
cmp
adc
or
fbstp
xchg
pop
pop
inc
inc
push
test
push
sub
test
mov
jecxz
cs
mov
push
ret
in
adc
mov
das
ret
sub
loop
decb
int3
in
jg
lcall
loop
dec
and
je
or
mov
inc
cld
adc
fwait
add
out
inc
mov
test
pop
movsl
mov
cmp
iret
addb
add
insl
sub
sbb
imul
ficoml
jecxz
mov
cmpsl
pop
dec
icebp
movsb
push
cmp
loop
jmp
fiadds
sar
xorb
pop
ret
xor
pop
xchg
rep
cmp
repz
repz
dec
mov
and
jg
adc
call
imul
cmp
pop
ja
xchg
dec
or
test
push
cmpsb
dec
mov
ds
jl
loope
stc
or
jecxz
sbb
sub
test
pop
mov
addb
xor
in
sub
imul
fiaddl
pop
dec
jecxz
pop
fucom
clc
dec
adc
or
inc
movsb
mov
jl
add
out
or
nop
cltd
fdivp
clc
aam
xlat
lcall
cmp
jge
add
roll
pop
cmp
xor
popf
dec
pop
loope
xor
dec
js
sti
inc
jl
out
mov
cmp
mov
pop
cmp
push
sub
movsb
movsb
jns
out
jmp
xor
xchg
sub
jle
cwtl
dec
xchg
mov
add
sahf
add
lcall
sub
fs
fs
lahf
xchg
std
outsl
test
out
xor
jmp
cmpb
lcall
sub
sub
repz
mov
and
push
cmpsl
mov
ds
push
addr16
dec
iret
leave
popa
adc
cmp
call
cmpsb
sahf
xor
fistpl
xor
in
shlb
mov
mov
xchg
fs
imul
jno
pop
push
push
mov
inc
iret
sahf
subl
cwtl
ljmp
out
clc
push
ds
mov
hlt
jnp
xor
adc
push
cld
push
dec
sbb
mov
hlt
cmp
sbb
inc
push
adc
adc
jae
in
aam
adc
mov
xor
loopne
pop
mov
xchg
pmaddwd
insl
and
movsl
mov
fsub
xlat
call
push
adc
sub
and
pop
daa
or
insl
sub
cwtl
or
test
xor
fnstsw
push
stc
sbb
push
arpl
in
add
inc
mov
sbb
iret
rorl
dec
les
inc
mov
sahf
mov
cmp
add
inc
xchg
ret
sub
addr16
adc
xlat
mov
jmp
lds
cmpsb
cmc
or
add
mov
xor
pop
ret
ret
adc
xchg
stos
in
adc
add
scas
in
int3
lcall
adc
inc
adc
adc
inc
inc
mov
pop
pop
jo
mov
std
mov
xchg
int
push
sub
enter
incl
pop
inc
outsb
adc
mov
mov
fwait
or
mov
push
js
cmc
ds
pop
ljmp
mov
mov
adc
and
dec
addr16
fdivr
cwtl
jp
adc
cmp
loop
xchg
pop
mov
mov
mov
shll
sub
pushl
fidivrs
jae
pop
xchg
or
sub
imul
pusha
mov
or
sbb
mov
xor
dec
xor
dec
xchg
pop
adc
movsl
and
fldl
mov
arpl
sbb
mov
rclb
xchg
xchg
jns
jge
scas
pop
insb
in
adc
mov
enter
mov
out
stos
xchg
xor
gs
lods
inc
push
addr16
sahf
push
and
pop
scas
cmp
pushf
in
sbb
mov
xlat
aaa
mov
cmp
aaa
insl
shrl
mov
jnp
int3
and
outsb
lock
scas
loope
out
dec
xor
negb
and
xor
add
out
ljmp
or
ret
jo
xchg
adc
dec
xor
les
pop
gs
cs
sub
insb
cmpsl
xchg
inc
or
pop
cmpsl
or
arpl
cwtl
adc
dec
jb
mov
stos
cmp
adc
rorb
inc
jp
and
std
push
mov
imul
adc
add
jmp
cmpsl
xchg
sbb
sarb
cmpsb
pop
cmpl
out
orl
jae
and
hlt
jnp
and
sub
or
es
add
lds
cmpsb
sbb
xor
jbe
fcoml
mov
push
jecxz
cwtl
xchg
fwait
add
leave
nop
scas
pop
outsl
fwait
or
ss
cmc
mov
aad
sub
cmp
mov
jno
dec
push
stos
mov
jmp
pop
adc
xor
jle
jbe
pop
movsb
pop
stos
or
sti
andb
push
or
mov
mov
jecxz
imul
or
sbbb
sahf
loop
test
jmp
iret
inc
in
mov
mov
cmc
scas
add
push
shlb
fisttps
lret
ror
mov
jno
idiv
pop
and
addr16
mov
sub
xlat
mov
cwtl
fdivrp
pop
sti
or
pop
sbb
xchg
fisubrs
push
mov
cmp
or
fcoml
jle
dec
jnp
xor
mov
sbb
xorl
lahf
jb
inc
mov
jb
dec
push
adc
pusha
mov
mov
mov
cli
or
fdivs
or
mov
mov
add
adc
or
jnp
mov
sbb
cli
cmc
mov
jb
cmpsl
jo
or
cmp
adc
xchg
dec
test
push
fcoml
or
push
addb
sti
push
inc
xor
decb
adc
or
jne
movsb
adc
sub
jnp
aaa
lret
loope
mov
movsb
and
mov
js
rcrl
shll
mov
pushf
mov
or
jmp
test
aas
stos
hlt
mov
pop
repz
pop
movsl
and
ret
push
cmp
fucom
push
cmp
in
aas
jns
sub
mov
fucomip
adc
js
lret
jno,pt
add
adc
out
inc
nop
push
test
sbb
frstor
cmp
aas
sbb
imul
sbb
test
in
roll
sub
mov
out
adc
test
leave
mov
rol
ret
lods
dec
cmp
sub
mov
mov
stos
push
addr16
ljmp
scas
imul
jmp
push
ljmp
push
add
cmpsl
sub
xchg
es
rcrl
or
cli
dec
sub
shrb
mov
arpl
lret
lcall
add
mov
xor
out
ret
je
test
pop
adc
cmpsl
jbe
shlb
mov
fdivrp
mov
test
icebp
cltd
or
ja
scas
add
fwait
add
adc
pusha
nop
push
cmpb
out
lcall
cmp
mov
lahf
mov
ret
pop
mov
enter
mov
sbb
jmp
test
jle
mov
pop
dec
cmp
or
fcoml
cmp
sbb
daa
shrb
dec
xchg
idivl
aaa
pop
mov
out
adc
adc
int
mov
dec
sbb
cmp
adc
pop
mov
pop
and
xor
sbb
jo
decb
push
inc
dec
leave
xor
mov
xchg
mov
scas
fs
outsl
sti
sbb
imulb
xchg
int3
mov
loop
js
inc
mov
stos
mov
pop
insl
or
dec
mov
push
jne
jl
test
bound
fs
mov
dec
mov
inc
stc
xchg
push
jl
mov
pop
dec
imulb
sti
roll
mov
jb
sub
std
and
jle
lea
lds
scas
sbb
cmp
sbb
pop
sub
rorb
mov
pop
sbbb
dec
out
dec
xor
mov
stos
dec
cmp
into
push
jp
mov
iret
cwtl
mov
fcmovnb
pop
xlat
cli
in
dec
sbb
lret
cltd
adc
loop
xorl
pop
daa
aam
pop
rcl
into
and
ljmp
pop
lret
jle
test
dec
fisubl
mov
mov
xchg
into
repz
sahf
ja
jo
hlt
rcrl
mov
dec
inc
dec
xchg
sbb
inc
pop
sub
or
enter
test
pop
rolb
cmovp
fsubs
cmpsb
xor
stc
push
cli
mov
and
sub
movsb
lods
es
js
push
leave
jbe
push
cmp
int
test
sbb
les
das
xor
inc
and
inc
or
orb
sub
jb
push
and
xor
sub
stos
lods
mov
push
adc
div
jge
in
test
xchg
mov
ret
mov
jbe
in
rclb
lods
call
mov
cmpsl
repz
fcomp
pusha
data16
pop
xchg
mov
dec
lret
adcb
push
shl
jb
or
sub
push
pop
push
pop
mov
dec
pop
cli
mov
sbb
dec
push
cwtl
sahf
inc
adc
push
stos
push
push
fimull
jle
jecxz
sub
cmp
jae
mov
sbb
outsl
stos
adc
dec
mov
aad
fdivr
xlat
or
lods
rcl
out
jg
out
int
jnp
pushf
adc
and
lds
jge
push
dec
adc
lret
mov
cmp
inc
mov
jbe
stos
movsb
xchg
pop
lods
xchg
arpl
pop
ret
mov
les
jecxz
push
pop
pop
sbb
adc
jle
aad
cmp
add
dec
cmc
push
cmp
stos
cs
xchg
cmp
mov
add
mov
in
sbb
mov
fistpll
test
retw
les
test
jge
out
xchg
pop
inc
sub
stos
sbb
out
jl
popf
fisubl
lret
and
ds
rcll
mov
sbb
out
in
cmp
je
outsl
scas
stos
fidivrs
pop
sbb
aas
roll
scas
mov
gs
xor
inc
mov
xor
adc
ds
sbb
inc
popa
pushf
xor
xor
in
adc
or
xchg
mov
test
pop
xchg
test
inc
test
addr16
xchg
and
cltd
pop
wrmsr
je
fimuls
xor
push
inc
add
cmp
fucomp
and
fs
xor
insb
cmp
add
rorb
pop
mov
ret
xchg
idivb
mov
pop
sar
dec
fs
dec
inc
push
imul
xchg
pop
repnz
push
cmp
mulps
sub
mov
cmp
stc
scas
or
bnd
ds
mov
pop
mov
inc
fs
sub
lret
xchg
push
out
pop
aad
sahf
fidivl
add
xlat
loopne
adc
sti
fadds
out
stos
push
jnp
mov
xchg
ficoms
dec
jnp
jae
outsb
cld
add
in
cmp
addl
sahf
inc
adc
pop
sub
xor
repz
push
cmpsb
stos
xchg
sbb
mov
xor
js
pop
push
push
cmp
xlat
pop
data16
inc
leave
dec
jbe
aas
repnz
imul
ljmp
stc
mov
push
frstor
mov
sbb
sahf
int
cltd
push
stos
xor
std
aam
scas
xchg
fdivp
add
lahf
idivb
repnz
insl
or
shrb
sbb
pop
shlb
push
sub
aaa
loop
push
imul
lcall
and
shr
fcoml
ret
hlt
fnstenv
insl
lcall
inc
dec
adc
mov
and
rcr
outsl
jmp
sbb
scas
nop
add
sbb
cmp
lcall
popa
in
cli
mov
add
cmp
iret
rcll
cltd
aaa
out
xor
push
push
cmc
test
les
subb
test
sbbl
mov
inc
jns
mov
les
stc
rclb
sub
test
jae
mov
pop
xchg
aad
fnstenv
cli
ficoms
push
call
or
add
imul
sub
adc
fldenv
iret
xchg
jge
jnp
imul
popf
gs
fs
mov
insb
sbb
fldenv
roll
daa
and
jbe
lcall
addl
adc
dec
enter
fwait
movsl
lret
pop
mov
and
aaa
push
cmc
dec
nop
mov
iret
jbe
xchg
test
jb
push
arpl
sarl
repz
out
lcall
sub
jno
mov
add
cmpsl
stos
sbb
add
cmpsl
arpl
adc
xchg
into
cmpsl
es
cmp
movsl
out
jo
mov
sbb
mov
dec
dec
and
aad
cmp
popf
sub
enter
movsb
mov
pop
inc
pop
pop
push
mov
or
fwait
int
aas
sbb
sub
int
in
out
cmc
shrb
pop
rorl
bound
mov
dec
rcrl
xlat
arpl
flds
in
cmp
mov
cmp
dec
or
imul
jb
enter
ds
sbbl
idivl
cmp
mov
pop
push
test
je
hlt
and
cli
jp
fbld
pop
mov
jle
stos
sarb
jno
mov
add
mull
jle
pop
and
add
xchg
je
ja
jg
test
in
sub
mov
inc
xchg
add
lcall
out
lea
out
je
xor
popf
xchg
push
cmp
popf
jno,pn
sbb
cmp
adc
popa
jae
sub
xchg
sub
push
out
jmp
stos
scas
repnz
mov
lea
xchg
cmp
fs
je
jne
shlb
faddl
cltd
xchg
mov
xor
or
rolb
mov
xchg
jmp
push
cmpsb
add
sahf
cmp
bound
push
jno
into
in
mov
cmpsl
test
inc
sub
or
cmpsb
stos
mov
pop
test
push
push
inc
sbb
insb
ljmp
jbe
cmpl
hlt
mov
xor
stc
jae
xor
stos
pusha
xchg
inc
ds
ja
icebp
mov
xor
fs
or
xchg
jg
lahf
mov
sbb
mov
lods
lret
icebp
outsl
dec
pop
aam
mov
or
inc
cli
dec
pop
mov
mov
int
pop
push
xor
aad
pop
xorb
pop
mov
orb
enter
or
pop
mov
popf
imul
cmc
push
inc
mov
cmc
push
in
xchg
cmpsb
jbe
fidivrl
es
stos
lahf
clc
pop
adcl
imul
mov
imul
ja
test
and
or
add
out
mov
lea
inc
xchg
aaa
loopne
push
dec
icebp
adc
xchg
loope
jmp
loopne
adc
subl
movsb
aas
or
lcall
inc
inc
cmpsb
roll
xchg
or
xchg
cld
loop
inc
mov
nop
lahf
mov
mov
ror
jl
loopne
mov
jne
jnp
cmp
lods
adc
lock
jo
mov
inc
mov
pop
stos
xor
int
jns
jecxz
push
scas
dec
mov
mov
sbb
je
and
dec
ss
push
fdivrl
cwtl
and
dec
movsb
push
inc
jb
mov
adc
mov
mov
mov
gs
daa
imul
inc
mov
faddl
dec
lahf
stos
mov
push
aad
adc
fs
push
add
xor
lds
cmpb
cld
and
cmp
fnstsw
sub
push
jo
pop
in
fsts
les
in
add
aaa
mov
xor
jne
pop
mov
pop
pop
sbb
daa
popa
push
jecxz
sti
cmp
pop
gs
lret
leave
scas
aad
inc
lea
adc
inc
mov
mov
dec
stc
push
or
push
pop
or
cmp
xchg
sahf
dec
push
fxch
out
movsl
test
sbb
jns
add
pop
adc
call
mov
xchg
inc
push
xchg
inc
test
enter
cltd
inc
mov
xchg
cmpsb
enter
pushf
je
insl
mov
imul
lock
push
cmp
ffreep
inc
daa
add
mov
daa
dec
stos
xchg
rolb
lock
cmp
inc
push
test
stos
aaa
mov
push
std
inc
mov
and
cmp
ret
push
mov
adc
insb
loope
or
adc
and
inc
lock
pop
test
xchg
push
jp
jmp
lods
add
mov
out
pop
add
jg
imul
dec
sub
or
push
push
repnz
lods
mov
popf
xchg
fbld
cmp
and
xchg
fs
nop
xchg
mov
aad
xorl
dec
cmp
outsb
adc
popa
fiadds
loope
std
inc
jns
addl
pop
sub
mov
shlb
jge
jnp
sbb
sbb
lods
push
push
in
pushf
fstpl
ret
push
insb
hlt
and
into
mov
lret
push
xchg
out
pop
dec
movb
adc
cmp
sub
mov
bound
mov
mov
clc
sahf
inc
lock
cmp
shlb
xchg
push
iret
lahf
and
add
xor
inc
mov
bound
nop
sbb
pop
adc
mov
add
mov
divb
stos
mov
xchg
cltd
cmpsb
flds
dec
mov
xchg
pop
imul
pop
imul
test
pop
pop
mov
push
das
call
icebp
xchg
out
mov
cmovns
pop
repz
and
sub
jne
xchg
int
fstps
add
movsl
lcall
in
shlb
cmp
cmp
testb
xchg
sarb
and
jno
inc
xchg
addl
jge
loopne
sbb
fs
lahf
test
mov
lret
sub
cmp
cmpsl
test
je
in
loope
and
inc
sub
jecxz
push
adc
insb
sti
sbb
mov
xor
mov
xor
mov
cli
dec
mov
cmp
fmull
std
call
aad
sarl
dec
das
clc
mov
xor
fisttps
inc
js
subb
lock
loopne
jbe
xor
shll
and
mov
cs
dec
std
mov
outsl
test
xor
jle
stos
mov
sbb
test
mov
repnz
cmp
sbb
sub
mov
xor
sarl
push
xor
test
sahf
pushf
push
add
xor
stos
rorb
fsubrs
pop
fnstenv
fnstcw
inc
hlt
pushf
call
and
fwait
mov
pop
in
xor
lret
repz
add
loop
push
xchg
fwait
hlt
bound
inc
sbb
xchg
or
lds
xor
outsl
gs
adc
je
fldenv
pushf
lcall
roll
pop
mov
push
mov
loopne
bndldx
sti
pop
gs
call
sbb
jle
sub
push
xchg
xchg
and
mov
icebp
fimuls
mov
mov
add
das
out
inc
int3
dec
out
mov
sbb
repnz
fildl
mov
jmp
mov
icebp
inc
mov
lahf
pop
sbbl
fs
push
out
hlt
adc
adc
mov
test
inc
sbb
inc
cmp
adc
sarb
sti
inc
inc
mov
adc
jnp
jecxz
in
pop
pop
testl
pop
push
mov
fnstsw
ret
xchg
or
mov
mov
dec
add
inc
jmp
jmp
int
lret
mov
movsl
cmp
shrl
aas
xchg
nop
cs
lods
rcr
shlb
mov
addb
aas
sub
sub
jg
inc
push
iret
in
lret
fnstsw
push
push
add
das
xor
lods
into
ds
push
and
jnp
jb
adc
push
lcall
arpl
mov
cmp
dec
sbb
add
out
mov
in
sahf
test
fiaddl
ljmp
and
icebp
jno
mov
xlat
and
arpl
cmp
push
xchg
sub
test
or
jne
mov
sub
jo
es
ret
repnz
cltd
in
jne
add
sub
and
mov
xchg
cwtl
mov
sub
sub
pop
clc
adc
dec
sarl
or
gs
cli
fwait
add
add
nop
lret
aam
mov
jno
dec
push
push
clc
mov
call
lahf
mov
int3
mov
push
cmpsb
test
sarb
mov
mov
mov
inc
mov
jnp
cwtl
sbbb
pop
adc
add
push
pop
fcomps
mov
add
out
cs
call
pop
ficompl
add
or
and
loope
into
outsb
addl
insb
jmp
pop
roll
or
jne
insb
addl
bound
pop
jle
dec
xchg
adc
mov
xchg
adc
in
bound
sub
call
sub
or
ds
imulb
ja
popf
cwtl
aad
test
sbb
out
mov
out
es
cmc
cld
cli
fwait
push
add
ret
shlb
mov
xor
rcrl
testb
ret
dec
or
jmp
outsl
pop
mov
xchg
mov
lret
aaa
stos
inc
cmp
lret
pop
xorl
addr16
mov
xor
je
mov
pop
mov
jp
lret
xor
xchg
icebp
int3
mov
out
lea
xchg
das
ret
inc
nop
lea
push
mov
clc
ss
lret
outsb
mov
push
stc
pushf
cwtl
ret
imul
adc
adc
cmp
in
cmp
cmp
xchg
xor
icebp
xlat
sbb
and
andl
test
scas
push
mov
bound
mov
adc
maskmovq
inc
adc
gs
jecxz
cmp
outsb
frstor
pusha
lock
rcll
add
xchg
call
cld
loopne
pop
stos
imul
cwtl
sbb
mov
add
xchg
and
sahf
push
fildll
inc
out
iret
sbb
pushf
hlt
aad
or
or
es
sub
mov
xchg
loope
pushf
sub
mov
lods
loop
cmp
and
mov
nop
jp
stos
nop
packuswb
dec
pusha
jl
fidivrs
sub
loopne
mov
push
inc
sbb
jno
mov
lcall
js
sub
fnstenv
jg
push
insb
repz
cmp
dec
mov
shlb
xchg
inc
or
push
scas
mov
pop
xchg
sbb
jge
dec
push
push
fistl
out
cmp
mov
hlt
in
pop
lcall
sbb
scas
rolb
nop
or
cltd
shrd
jo
lods
fldcw
pop
mov
das
lahf
lret
std
lds
mov
scas
rcrb
pop
lahf
adcb
test
xchg
mov
popa
daa
jb
fs
jle
adc
stc
data16
jg
xchg
xorb
int3
jge
mov
adc
cmp
push
adc
in
xchg
mov
or
imul
sub
and
out
xor
cld
cmpsl
xchg
rclb
mov
dec
vaddsd
mov
out
shl
xchg
ret
jne
dec
xor
insb
mov
fiadds
jge
mov
or
out
mov
sbb
pop
push
repnz
std
out
cli
in
pop
gs
out
loope
decl
clc
cmpsl
pop
cwtl
jge
testb
ss
mov
sbb
rcrb
mov
in
jg
scas
add
std
fabs
xchg
negl
dec
xor
pop
les
outsl
xchg
in
cmp
sbb
sbb
jbe
adcl
imul
xchg
iret
movsb
push
pop
leave
icebp
int
lds
push
sbb
or
mov
ret
dec
mov
aam
daa
and
std
dec
insb
push
lret
ret
std
aam
imul
dec
and
add
filds
cli
rolb
int3
mov
jp
lret
push
rep
jle
in
mov
cmpb
mov
cmp
or
mov
jne
xor
xchg
xor
mov
cmp
adc
int3
arpl
sub
jp
rcll
dec
push
sbb
jecxz
popf
sub
pushf
js
sub
jno
test
jb
and
or
ficoml
loop
cmp
movsl
lret
lock
mov
lds
insl
mov
movaps
mov
adc
push
repnz
std
mov
push
and
and
jge
jo
in
ja
xchg
push
push
stos
mov
mov
and
sbb
pop
scas
mov
movsb
and
pop
adc
adc
dec
mov
mov
sub
pop
lahf
into
insb
fmull
adc
out
xor
jp
fiaddl
adc
call
inc
das
xor
imul
xchg
pop
sub
inc
cmp
pusha
fldl
sbb
sti
mov
fidivs
inc
pop
outsb
jb
and
cmp
adc
jbe
xchg
pop
push
repz
pop
leave
les
ja
aas
xchg
push
js
push
shll
clc
outsl
stos
cmp
lods
or
arpl
loop
inc
cmc
iret
mov
dec
iret
icebp
or
ficompl
jb
jle
repz
sub
fwait
mov
pop
or
roll
aaa
hlt
int
stos
add
mov
pop
lahf
sub
jp
lds
loop
pop
fidivs
das
cmpsl
test
add
or
push
sbb
or
into
jo
insb
loopne
mov
in
push
pusha
mov
cmpsb
scas
pop
mov
inc
xchg
pop
mov
xor
jae
dec
sti
pop
icebp
sbb
and
fsubs
popf
dec
mov
jge
jg
adc
add
flds
push
mov
idivl
or
dec
scas
test
cmp
adc
out
mov
sub
int3
push
in
sarb
fmuls
movsb
push
pop
fmull
adc
push
idivl
push
adc
bound
mov
push
lea
mov
js
adc
mov
test
enter
xchg
dec
cmp
mov
sbb
mov
mov
push
cwtl
scas
or
cwtl
jne
push
fisubs
push
popa
jecxz
rol
cld
fsubrl
adc
dec
popa
orl
sub
inc
mov
cmp
lock
mov
outsl
inc
repz
adc
mov
idiv
mov
mov
sbb
call
mov
mov
and
sbb
test
movsl
pop
jbe
dec
pop
sahf
orl
sbbb
dec
cli
sti
mov
jmp
jnp
ficoms
xlat
js
sbb
fucomp
mov
loop
and
clc
adc
fmull
jle
fs
aam
imul
icebp
and
xchg
xchg
lods
jle
pop
sbb
test
jmp
mov
scas
jnp
popa
stc
pop
sbb
inc
mov
in
sti
sub
jge
ja
lods
push
jne
push
loop
dec
setp
xor
mov
push
adc
lods
cltd
aad
clc
xor
push
mov
shll
dec
pusha
shll
and
adc
pop
jmp
push
xchg
fwait
push
addr16
test
cmpsl
xchg
mov
sub
add
inc
xchg
mov
pop
imul
sub
test
insb
mov
stos
sub
aas
cmp
fucom
xchg
sarb
xchg
xchg
adc
cli
rclb
dec
cwtl
fnstenv
mov
mov
sbbl
pop
xor
scas
pop
imul
enter
leave
jno
push
push
push
test
shl
cmp
in
lds
sahf
lds
sarl
fiaddl
pop
pop
movsb
fistps
ljmp
lcall
xchg
push
xor
inc
int3
dec
cmp
xchg
cmpl
xchg
push
lahf
jmp
jg
pop
sbb
cmp
inc
lods
jne
insb
lret
loope
xchg
cmpsb
popa
int
jecxz
in
sub
mov
pop
sub
sub
pop
xor
push
or
mov
xchg
mov
lahf
xchg
xlat
shll
int3
fdivrl
ja
gs
pusha
jmp
jnp
dec
dec
adc
int
lahf
mov
jecxz
jb
lods
fcoms
into
scas
test
inc
add
pop
push
arpl
mov
pop
pop
faddl
dec
mov
mov
adcl
gs
in
negl
jno
rclb
sahf
ss
and
out
dec
es
cmp
lods
ljmp
pop
cmp
repnz
mov
leave
xor
mov
iret
push
out
dec
inc
test
es
sbb
xor
mov
mov
xchg
movsb
xchg
mov
push
push
push
or
into
cmp
ja
xchg
mov
jae
mov
xor
dec
cmp
jbe
adc
xchg
fiadds
sahf
sub
std
mov
popa
fwait
mov
loope
add
mov
lahf
and
in
jb
jb
and
jmp
mov
loopne
push
ja
mov
iret
test
orl
pop
clc
push
int3
jl
imul
enter
adc
cmpsl
stc
mov
pop
or
repz
and
or
in
pop
add
ljmp
movsb
call
push
insl
xchg
fsts
xchg
inc
fstpt
pushf
dec
into
xchg
inc
movsb
js
scas
mov
jg
fldt
xchg
xor
test
dec
add
stos
rclb
bound
imul
lock
and
pop
and
ret
cmp
das
pop
sub
jp
enter
out
cmc
inc
jb
inc
jl
std
bound
inc
adc
sbb
stc
outsb
lret
jns
xchg
mov
mov
addr16
cld
sub
pushl
dec
popf
ss
inc
cld
sbb
mov
pusha
das
sub
or
adc
dec
sub
fists
sti
mov
idivb
scas
dec
decb
cmp
repz
imul
jp
mov
and
push
xchg
icebp
jnp
cmpsb
mov
dec
dec
or
aad
jne
aad
cmp
xlat
fnstenv
sahf
cltd
test
and
aam
int
mov
lds
push
adc
xor
mov
nop
mov
pop
push
mov
mov
les
pop
xchg
rolb
hlt
xchg
jge
add
adc
or
push
fs
push
stos
sub
sar
imul
xor
out
lret
rclb
fdivrs
and
xor
movb
fsub
lahf
fistpll
outsl
xchg
orb
std
cwtl
adc
jmp
dec
cmp
sbb
inc
pop
add
adc
cmp
adc
mov
rorl
ret
repnz
push
addl
sub
into
add
int3
movb
movsb
or
push
xchg
sbb
into
fwait
repz
nop
pop
mov
push
xor
mov
inc
leave
lcall
lods
mov
andl
mov
xlat
and
icebp
mov
js
push
dec
test
clc
lds
js
inc
dec
and
mov
ret
les
std
pop
pop
enter
js
loopne
mov
xor
add
mov
adc
les
xchg
fsubl
add
mov
push
push
inc
aaa
push
or
push
jbe
int
mov
fs
lret
into
mov
dec
or
pushf
inc
pop
scas
pop
pop
mov
loop
inc
mov
bound
fmuls
and
dec
cmpsl
and
in
mov
add
add
repnz
out
and
int
test
mov
std
jmp
arpl
mov
sub
mov
mov
xor
lret
cmp
mov
imul
push
imul
aad
jp
add
and
mov
mov
adc
mov
sti
arpl
or
repnz
sub
pop
clc
sub
fiaddl
adc
insl
gs
inc
adc
or
lahf
cltd
dec
xchg
sahf
jecxz
jb
fstpl
mov
jp
xchg
aaa
movsb
dec
pop
adc
adc
lods
insl
xor
xchg
mov
shlb
imul
lods
mov
test
push
sbb
and
jo
cmp
cmp
scas
pusha
fidivrs
inc
nop
dec
cmp
addr16
pushf
push
and
clc
jne
add
data16
or
loope
hlt
cmp
fsubrp
sub
fmull
imul
mov
jnp
push
or
mov
push
jb
pop
lret
mov
outsb
push
jne
cli
sbb
inc
mov
mov
cwtl
xor
test
orl
cmp
inc
xchg
adc
nop
push
add
xor
sahf
jbe
lcall
adc
fs
lock
pop
ja
loopne
push
pop
cld
stos
lds
lcall
push
imul
or
scas
pusha
loop
push
pop
mov
xchg
push
jmp
xor
and
ds
sub
in
shl
cli
cmp
cmp
add
mov
movsl
scas
movsl
mov
sub
nop
into
add
mov
outsl
sbb
push
movsb
mov
or
lock
faddl
fidivrl
jge
jno
dec
cmpsb
ret
jae
fwait
add
pop
pop
aas
or
test
jne
icebp
leave
loope
mov
or
mov
push
xchg
into
idivl
add
pop
xchg
adc
addr16
mov
mov
jbe
call
dec
out
cmpsl
iret
mov
dec
xchg
test
mov
cmp
fstpt
add
stc
loop
repnz
add
inc
push
js
mov
imul
test
repnz
jle
sti
push
jle
mov
sbb
shrl
mov
xchg
sub
mov
repz
fnstcw
popa
lea
sub
popa
push
enter
in
ret
mov
push
cmp
sbb
adc
daa
cs
out
rcrb
sub
mov
ficomps
pop
mov
outsl
fwait
xor
iret
jno
loopne
jge
add
sahf
bound
sahf
mov
mov
movsb
jecxz
ror
jg
xor
repz
adc
mov
mov
mov
fldcw
mov
lods
add
and
or
dec
loope
loope
jg
pusha
sahf
test
fcomps
jo
pop
jp
int3
xor
mov
mov
daa
int3
push
dec
adc
bnd
sub
aad
pop
jle
mov
cmp
and
xor
fmuls
dec
pop
mov
daa
mov
lods
xchg
pop
adc
clc
imul
mov
push
xlat
shlb
or
dec
cmpsl
fadds
insb
cwtl
jecxz
lds
insb
out
jmp
addr16
call
push
xchg
xchg
out
mov
imul
push
and
pop
loop
add
push
lock
add
jmp
js
rcll
jns
adc
or
sbb
rclb
xchg
call
jnp
aad
mov
movsl
sti
jnp
inc
or
xchg
sbb
add
mov
mov
xor
or
mov
sub
jb
or
add
ljmp
mov
pop
mov
stos
lds
pop
ja,pn
xchg
test
testl
int
inc
mov
in
inc
sbb
out
mov
test
inc
cwtl
add
dec
dec
lock
or
push
shll
les
sbb
inc
jo
hlt
push
dec
fisubrl
fwait
add
inc
jl
aam
popa
sahf
je
cli
out
xlat
into
popf
mov
adc
xchg
sbb
fidivs
xor
lret
fildl
ljmp
mov
adc
dec
xchg
adc
cmp
push
test
rorl
cmp
aas
lock
pushf
les
add
sti
mov
xchg
mov
sub
mov
mov
rorb
inc
in
push
std
aam
sarb
dec
push
dec
call
out
sbb
xlat
mov
or
mov
pop
ret
int3
xor
jl
push
mov
xorl
xor
and
jnp
sarb
imul
stc
icebp
pop
xor
inc
enter
cmp
sti
jae
movntq
out
mov
xchg
aad
sub
enter
pop
pop
orb
and
testb
gs
aad
and
mov
ljmp
push
aaa
or
mov
push
mov
daa
pop
enter
repnz
lcall
shll
in
stc
dec
cmp
lcall
shl
mov
mov
popf
add
adc
std
outsb
stos
ja
mov
iret
mov
repnz
test
push
idivb
imul
sbbb
pop
cmp
fstpt
mov
mov
dec
sub
out
dec
out
jbe
es
mov
cli
scas
add
jnp
data16
test
loop
cld
jecxz
popa
cmp
cmp
in
jge
adc
out
ja
push
push
imull
fcmovnu
mov
inc
mov
xchg
xchg
jnp
frstor
sti
sbb
and
push
inc
mov
or
subb
aam
insl
arpl
pop
xchg
fwait
outsb
ret
dec
lret
sub
jle
testl
subl
repz
lea
adc
jb
insb
jmp
cmp
cmp
jo
xchg
mov
cli
int3
js
js
push
decb
imul
test
mov
xor
adc
xchg
test
xchg
pop
test
add
mov
sar
pop
jge
push
mov
outsl
adc
mov
cli
pop
cld
repz
jnp
push
xor
add
fnstenv
imul
add
xchg
sbb
lea
call
sbb
test
dec
ret
jns
iret
imul
cmp
dec
cs
dec
inc
add
cmc
and
out
dec
das
add
cmp
das
inc
imul
fidivrs
filds
cmp
add
jmp
push
pop
xor
adc
dec
sbb
dec
and
jecxz
dec
mov
sbb
jle
or
mov
jo
dec
push
enter
pop
and
push
daa
jbe
add
cmpb
fwait
push
adc
leave
cmp
pop
ds
push
js
std
and
push
adc
jg
mov
push
jo
imul
xchg
jmp
mov
mov
push
and
stos
in
js
test
pop
pop
fwait
xchg
scas
out
lcall
jecxz
imul
xchg
add
repnz
and
inc
fidivs
sbb
jp
jg
xchg
and
dec
cmp
cltd
fstpt
or
aad
fbld
add
sbb
fcomp
sbb
roll
xor
std
push
pop
add
int3
lods
adc
mov
mov
mov
in
aaa
mov
je
faddl
gs
fiadds
sbb
rclb
cmp
add
subl
xor
or
je
pushf
pop
xor
ss
in
dec
or
inc
push
movsb
lock
das
clc
in
pop
mov
lret
inc
lock
repnz
into
sbb
pop
lcall
pop
cmp
arpl
dec
ljmp
cmp
mov
pop
sbbb
mov
aad
shlb
mov
loop
cmp
inc
adc
inc
push
sahf
cmpsl
mov
std
hlt
mov
cld
or
xor
add
or
pop
mov
pop
and
or
popf
daa
xor
jne
xor
pop
cmp
pop
xchg
dec
mov
sbb
jns
xor
imul
dec
sub
mov
push
push
push
adc
push
in
and
nop
push
dec
imul
roll
sub
ret
pop
sub
sahf
inc
pop
xchg
adc
adc
jl
mov
fwait
fs
pop
sbb
mov
xchg
inc
lock
lret
mov
dec
xor
jmp
pusha
loop
fcompl
in
sbb
jb
in
leave
fadds
cmp
xchg
cltd
cld
mov
lcall
push
xor
mov
mov
sbb
mov
arpl
inc
sbb
test
and
into
inc
adc
insb
pop
dec
jno
es
dec
cmpsb
sbb
aam
add
dec
pop
pop
push
pusha
dec
pop
shrb
mov
xlat
push
and
idivl
inc
sbb
stos
dec
lock
pop
push
mov
cmp
orb
test
ds
mov
adcb
mov
mov
adc
ljmp
movsl
pop
jp
xor
roll
in
out
out
or
mov
ja
leave
test
jnp
and
testb
imulb
cmp
rcr
pop
pop
push
test
stos
mov
or
add
pop
stc
sub
lahf
out
mov
fcmovu
out
dec
daa
jae
mov
xor
jg
stc
add
mov
push
mov
sub
mov
jg
fisttpl
fisttps
add
jnp
sub
xchg
add
inc
inc
scas
mov
js
pop
lret
adc
cwtl
mov
jle
loope
lock
add
inc
mov
lock
fucom
loop
jl
jbe
stc
xchg
inc
fwait
inc
and
subl
jne
xchg
add
or
adc
cld
mov
stos
mov
cmp
ss
lret
sbb
sbb
iret
popf
cmp
mov
rclb
testl
push
mov
in
mov
icebp
pop
test
xchg
and
rcll
fiadds
adc
xor
xor
jle
mov
push
mov
sub
aam
sub
jo
in
mov
jge
ss
jb
xchg
repz
mov
adc
push
in
inc
cmp
cmpsl
popa
fidivrs
scas
ror
and
mov
hlt
push
sbb
dec
cmpsb
jo
xchg
hlt
pusha
mov
fnsave
sbb
cmp
out
sbb
lods
psubq
rcrb
mov
cmpsl
arpl
mov
and
out
sub
mov
sahf
adc
popf
push
sarl
xchg
mov
scas
jne
and
and
cwtl
inc
xor
cld
or
jl
xor
sub
mov
sub
dec
mov
cmp
cld
cmc
or
add
pop
jo
mov
lods
std
popa
dec
dec
jg
jmp
sub
nop
push
mov
dec
jbe
add
test
rclb
xor
and
stc
js
lahf
int
cmp
mov
mov
pop
pop
mov
clc
xchg
icebp
push
nop
push
pop
lock
hlt
movsb
push
mov
pushf
nop
les
add
push
mov
ja
sub
dec
loop
shlb
push
pop
add
shll
into
fs
test
xchg
or
adc
shll
sarb
ja
jbe
or
cmpb
js
addr16
mov
mov
in
and
in
mov
out
sub
cmp
jecxz
push
pop
fimuls
ret
push
mov
movsl
test
sti
push
jno
ljmp
xor
jmp
or
out
pushf
or
sbb
pushf
cmp
ret
pop
cmp
push
aad
cmp
rcll
test
sub
or
lock
mov
test
pusha
sahf
lea
or
and
test
cld
cmpsb
inc
inc
xchg
sub
adc
sub
lahf
jno
fmuls
out
mov
and
or
pushf
daa
pop
ljmp
test
or
xlat
push
lock
leave
outsl
sbb
cmc
sbb
ret
jg
cmc
hlt
mov
adc
bound
push
mov
insb
mov
adcl
aam
not
push
cmpsl
pop
loop
pushf
test
cltd
inc
adc
ljmp
jae
outsb
imul
aaa
pop
out
pop
mov
int3
out
stos
mov
inc
cld
dec
movsl
in
call
shlb
leave
dec
insl
daa
cmpsl
jecxz
shl
or
outsl
fstps
xchg
xor
or
sub
xor
repz
jmp
pusha
push
lds
cltd
jnp
clc
out
lahf
leave
mov
or
jno
or
ret
dec
fistps
mov
jp
xchg
mov
out
shrb
stos
cmc
daa
adc
dec
fsubs
mov
sbb
or
lods
int
lea
call
inc
daa
mov
in
add
leave
sbb
mov
icebp
or
xor
hlt
adc
mov
clc
jg
cmpsb
loopne
out
adc
mov
cwtl
push
in
lods
add
mov
pop
fldl
push
test
xlat
push
sti
mov
xorb
jns
imul
in
iret
adc
add
nop
jg
nop
sub
in
add
or
arpl
shrb
btc
dec
stos
mov
pusha
pop
inc
mov
outsb
sub
and
fidivs
adc
jbe
in
sbb
xor
fucomi
cld
mov
loope
xchg
dec
mov
andb
gs
inc
movsb
and
notl
je
pop
fsts
pop
pop
ja
lods
sbb
lods
lahf
inc
push
inc
mov
scas
lahf
cmp
cmp
jne
pop
ficoml
pop
fistl
js
xor
push
mov
in
lgs
rdtsc
jge
jae
xchg
xchg
inc
test
push
hlt
insl
into
pop
and
mov
cmp
push
dec
xchg
movsb
fimuls
mov
xchg
lret
notb
scas
dec
push
adc
mov
leave
in
andl
popf
popl
bound
sub
lds
mov
les
lods
xchg
test
gs
xor
xchg
cmp
and
addb
mov
inc
inc
icebp
outsb
mov
or
imul
sub
arpl
pop
xlat
xchg
cmp
inc
ja
inc
outsl
pop
xchg
lahf
pushf
test
lret
cmc
sbb
das
xor
jge
cmp
jnp
int3
or
mov
popa
stos
leave
aaa
mov
mov
xchg
idiv
pop
ja
jbe
mov
fsubs
mov
sarl
sub
sbb
mov
pop
mov
sub
pop
sub
lods
sysexit
pop
mov
lods
push
mov
push
and
dec
cmp
outsb
and
cwtl
jne
push
and
xor
subb
adc
and
xlat
xchg
push
cmc
ror
cmp
and
adc
mov
jmp
in
mov
jge
fwait
bound
lcall
cmp
xchg
add
sbbl
add
fsubl
pop
scas
mov
fstps
mov
fwait
imul
add
hlt
dec
outsl
popa
fwait
or
xlat
cmp
jns
pop
mov
and
nop
je
inc
shrl
jno
call
jnp
dec
faddp
mov
daa
hlt
addl
dec
add
sub
int3
pusha
inc
push
stc
jp
mov
pop
adc
sub
rolb
gs
int
sub
fucom
sub
cmc
les
ss
and
pop
or
xor
aas
ret
jno
imul
push
fldt
jmp
icebp
sub
jecxz
mov
mov
jnp
mov
sbb
out
pop
repz
js
jmp
cld
stos
int3
inc
inc
mov
dec
sbb
jae
xchg
lods
lret
cmp
pop
int
push
fisubrl
out
subl
push
add
ds
sti
lret
adc
cmp
xchg
adc
dec
inc
test
pushl
movsl
in
and
cmp
arpl
pop
adcb
je
std
and
mov
cmpsb
dec
cwtl
test
xchg
add
call
les
xor
mov
adc
lret
fstpt
xchg
daa
sbb
xchg
ljmp
jne
fs
inc
repz
jge
fisubrs
fwait
out
sub
cmp
and
inc
mov
js
pop
add
lahf
and
aam
push
xor
add
stos
sbb
mov
lods
adc
ja
std
out
or
insl
lods
jp
or
cmp
pop
rorb
dec
mov
popa
xchg
inc
pop
fidivl
dec
push
inc
loop
icebp
dec
test
pop
mov
loopne
cmp
out
and
inc
mov
ljmp
mov
inc
shll
mov
pop
fwait
sub
mov
dec
pop
jne
inc
movsb
dec
sbb
ds
je
cmp
test
out
fldt
cmp
mov
hlt
or
sub
aad
xchg
idivb
orb
pop
jl
and
dec
add
or
popf
aaa
pop
mov
pop
and
adc
xchg
mov
cmp
inc
addl
lods
das
gs
jne
fdivs
push
aad
xchg
bound
in
dec
daa
in
or
lcall
inc
idivb
sub
shr
out
jl
xor
jecxz
push
fwait
lods
sbb
inc
jge
pop
shr
pop
mov
add
jmp
das
nop
xchg
int3
aam
jg
sahf
cwtl
jbe
mov
adc
jo
inc
leave
mov
sub
inc
mov
dec
bound
ror
inc
hlt
or
out
adc
scas
push
pop
or
lods
sub
cs
cwtl
sbb
pop
mov
notb
outsl
mov
xor
movntdq
mov
push
cwtl
lret
jbe
fwait
dec
testl
aaa
xor
xchg
push
sbb
add
aaa
lods
lahf
jmp
push
push
mov
test
sar
aas
cmpb
mov
iret
xchg
mov
adc
and
xchg
push
mov
dec
out
dec
testl
pop
pop
ds
jns
push
pop
enter
aam
mov
test
adc
or
stc
stos
ds
xorl
cli
imul
mov
addr16
xor
pushf
les
test
and
sub
aaa
fs
cli
lahf
xor
out
mov
adc
jbe
push
dec
add
add
stos
pop
inc
mov
in
dec
dec
and
cmp
mov
sub
or
mov
and
xchg
mov
or
jb
in
sbb
jecxz
in
inc
jnp
push
or
sbb
adc
bound
sub
sub
insl
xor
pop
shr
sub
adc
icebp
fsubrs
xchg
push
imul
dec
jle
mov
in
xor
sub
xor
inc
repz
fnstenv
leave
pop
push
push
sub
rclb
cli
dec
loopne
popf
jne
mov
das
popf
push
jl
xchg
push
xchg
xchg
and
and
xchg
cltd
pop
mov
xchg
sti
inc
inc
push
mov
sbb
jmp
movsb
lods
xor
add
negl
pushf
pop
mul
add
sub
rorb
pop
jae
mov
outsl
xchg
mov
cmpsb
insl
lahf
shrl
rcrl
sub
push
push
sti
cmp
add
sub
mov
sbb
cmpsl
push
mov
cmp
js
mov
iret
adc
mov
sub
pop
popf
cmp
flds
bound
and
aas
inc
loope
hlt
leave
add
xor
mov
cs
mov
loope
imul
jnp
aas
mov
adc
aaa
je
pop
sarb
lea
dec
and
and
add
jns
lret
or
add
orl
dec
push
jmp
sbb
cld
add
mov
jp
loope
imul
lcall
add
sarb
mov
rcr
xor
sub
aad
or
in
xor
test
mov
push
mov
mov
jnp
pushf
loopne
in
cmpl
mov
and
je
pop
pop
lods
dec
scas
add
mov
mov
pop
inc
mov
addl
nop
dec
out
and
xchg
add
cmp
adc
and
mov
mov
xchg
mov
jnp
xchg
mul
and
mov
or
cld
xchg
jecxz
jmp
ljmp
adc
xchg
je
and
mov
sbb
bound
mov
loop
out
mov
mov
leave
inc
mov
sub
rorb
mov
inc
mov
mov
jl
adc
sti
nop
movsb
push
sub
sarl
push
and
mov
sub
imul
xlat
jbe
arpl
sarb
scas
cld
or
xor
mov
ret
push
loop,pt
mov
add
insb
cltd
sbb
mov
les
inc
idiv
adcl
mov
mov
mov
scas
das
scas
sub
mov
mov
insb
in
or
out
inc
lret
clc
into
sbb
mov
sub
lret
cmp
test
sub
jecxz
addb
aaa
fisttpll
or
xor
in
fldt
xlat
aas
shrl
xlat
pop
sbb
push
sub
lods
mov
push
ret
add
pop
scas
xchg
fnstsw
mov
addr16
mov
xchg
loope
cmp
test
cmpsb
push
mov
mov
cmp
sub
jge
jns
sbb
mov
xor
inc
pushf
adcl
popa
sub
shlb
sub
lock
hlt
jecxz
push
xchg
xor
xchg
or
sbb
in
cmp
lcall
out
xchg
sbb
lret
mov
mov
fstpl
xchg
pop
rep
mov
pop
push
into
lcall
stos
test
outsl
enter
imul
mov
inc
ss
push
mov
jl
mov
jge,pn
sbb
pop
jge
mov
out
dec
popf
add
stos
dec
cmp
or
insl
adc
dec
sbbb
xor
inc
xorl
call
xchg
ljmp
cmp
cmc
pop
sbb
xlat
adc
gs
adcb
sbb
jae
mov
mov
inc
sub
pop
add
dec
add
test
lret
lds
adc
ljmp
repnz
in
in
pop
mov
xor
mov
jb
int
pop
xor
hlt
int3
xchg
lods
add
inc
jo
add
leave
push
and
fidivrs
sti
mov
orb
sub
ljmp
pop
faddl
shlb
enter
mov
push
nop
sub
das
cmp
xchg
dec
js
mov
aas
xlat
sub
outsb
and
incl
pop
pop
je
or
cmp
mov
ja
stos
test
adc
std
imul
adc
lahf
icebp
sbb
xchg
inc
ss
jae
lds
push
ljmp
dec
lods
mov
pop
out
push
test
pop
push
or
or
mov
sub
fadds
out
and
repnz
jmp
and
mov
outsl
loope
push
mov
mov
sbb
pop
idivl
dec
insl
std
sbb
push
adc
mov
cs
xchg
mov
push
jg
sub
test
aad
movsl
sti
pop
xchg
testb
sti
fcoms
or
adc
jp
mov
inc
movsl
int3
push
mov
dec
sahf
push
fisubl
inc
adc
and
rolb
stos
out
push
mov
stc
pop
push
fndisi(8087
mov
add
addb
pop
aad
scas
adc
movsb
mov
es
cmp
xor
mov
jge
jae
leave
out
out
loope
sbb
mov
push
pop
xchg
cwtl
or
pusha
push
inc
mov
xor
imul
push
sub
vmwrite
xchg
les
mov
and
les
insl
pop
aas
xlat
add
test
ss
jecxz
pop
inc
aas
mov
fisubrs
mov
pop
flds
jle
inc
adc
adc
aam
std
pop
pop
sbb
sbb
mov
jl
inc
repnz
push
sbb
lcall
daa
mov
call
stos
xchg
or
daa
cltd
mov
sub
push
or
push
xchg
aam
stc
pop
pop
and
sti
cli
jecxz
adc
mov
push
sbbl
aas
dec
mov
mov
pop
sub
add
xor
xor
push
sbb
arpl
pusha
mov
ss
push
add
xchg
fstpt
test
out
stc
xchg
inc
mov
ljmp
sbb
pop
shrb
lods
push
test
jmp
mov
sbb
ret
inc
pop
lods
movsb
add
dec
test
xor
and
mov
cmc
in
add
jle
cmp
or
jnp
push
dec
fists
shr
xchg
xor
xchg
cld
and
mov
stc
or
pop
sub
bound
aas
fistl
nop
jmp
enter
pusha
popa
adc
mov
cmp
in
mov
ja
dec
inc
jg
pop
daa
dec
pop
notb
mov
inc
les
jle
jmp
add
aad
and
mov
test
xchg
cwtl
daa
ljmp
xchg
out
pop
bound
call
push
addr16
jnp
mov
cmp
das
pop
pushf
push
lahf
pop
pop
xchg
lods
jo
mov
dec
icebp
hlt
mov
repnz
fwait
shll
out
lret
cltd
aam
pusha
fwait
inc
mov
or
xor
pusha
pop
dec
adc
loopne
lea
sub
cmp
out
mov
add
jne
lock
movsl
ficoml
sub
pop
jg
mov
ja
lcall
cmp
lea
cmp
sub
mov
movsl
scas
push
cmp
and
add
sub
inc
hlt
scas
dec
mov
jns
out
nop
cmp
rcl
lods
adc
arpl
xchg
cmp
xchg
subb
mov
jo
icebp
loope
sub
test
ficoml
mov
add
das
xchg
mov
or
and
sahf
or
andl
lods
cmpsb
and
sbb
mov
fs
xchg
pop
sub
mov
or
and
mov
inc
inc
daa
out
aas
add
xchg
in
stc
adc
or
push
loope,pt
stos
sub
inc
lcall
sub
cmc
bound
add
pop
imul
push
aam
cmpb
hlt
xor
flds
push
repnz
fimull
pop
sbb
outsl
lea
mov
repz
mov
je
mov
add
test
cmp
loopne
aas
mov
sbb
loop
repnz
repz
sti
testl
jno
and
adc
sbb
push
mov
xor
mov
mov
and
imul
cmp
dec
jae
push
loope
sub
loope
xor
dec
mov
cmc
xchg
or
cmpsb
sti
jmp
pop
movsl
inc
outsl
addr16
shl
leave
or
insb
mov
mov
or
add
lea
ss
mov
inc
dec
lock
movsl
jne
rol
and
mov
cmpsb
or
xchg
rclb
dec
adc
mov
xchg
cmpsl
sub
push
lret
cmp
lahf
pop
loopne
loope
sbb
jp
ljmp
cmc
in
sub
push
xchg
jle
jg
or
xchg
pop
cmp
movl
loope
lahf
mov
lret
cmpsb
inc
in
jns
outsb
mov
aaa
nop
dec
cmp
insb
mov
cmp
or
push
xor
movl
push
pop
push
inc
pushf
xor
aaa
test
inc
xlat
pop
xor
cmp
jp
in
sti
sbb
mov
inc
push
negb
test
or
movsb
pop
jl
fs
stos
jge
cmp
or
stc
xchg
mov
push
cmpsl
aas
mov
xor
adc
lret
iret
sbb
dec
nop
fwait
cmp
ret
data16
add
outsl
decb
push
nop
cmp
adc
dec
sbb
push
pop
mov
jne
mov
dec
divl
xchg
lret
stos
mov
jno
xor
shrb
mov
aaa
imul
ret
test
int3
fildl
and
insl
in
add
adc
lds
fistl
push
lock
mov
mov
jns
lock
adc
popa
xor
jg
pop
mov
sbb
aaa
sbb
pop
xchg
shll
and
lea
das
mov
push
js
mov
fwait
test
daa
mov
mov
push
or
xlat
pusha
adc
loopne
sbb
cmpsb
xchg
and
sub
mulb
rcrl
dec
insb
sub
xchg
sarl
inc
adc
rolb
dec
inc
add
mov
jmp
mov
std
ljmp
scas
cwtl
xchg
and
scas
dec
cwtl
mov
das
cmp
pushf
icebp
push
shll
xchg
dec
in
jo
and
jbe
inc
subl
and
shlb
lods
push
sbb
jmp
decb
cmp
sub
adc
shlb
cmpsl
and
sub
aas
popf
mov
cmp
inc
jno
xchg
imul
inc
cmp
and
mov
jae
mov
inc
std
mov
repnz
adc
xchg
mov
cwtl
rol
in
sbb
popl
cltd
or
int
xchg
jp
xchg
loop
scas
push
std
jecxz
pop
fdivl
in
push
test
mov
xchg
lahf
sbb
in
in
adc
xchg
add
stc
andb
and
jae
fcmovnbe
jle
cwtl
mov
pop
and
jnp
jg
popf
mov
aaa
das
dec
out
repnz
xchg
xchg
cld
dec
jb
xlat
push
pushf
pop
cltd
sbb
mov
mov
pushf
pop
fnsave
jle
mov
fists
ja
push
stos
in
in
pop
jg
imul
cmp
f2xm1
jmp
rcrb
sub
xchg
sbb
xor
pusha
mov
lahf
push
jno
push
cmp
divl
inc
xchg
mov
add
sbb
out
hlt
cmp
mov
je
ret
movsb
cld
in
mov
sbb
shll
adc
loope
ds
scas
mov
testb
mov
fbld
xchg
sbb
loopne
test
adc
scas
and
xchg
jbe
fdivr
push
loop
adcb
add
push
push
cwtl
cwtl
xchg
jmp
mov
and
inc
or
fmuls
test
jmp
fwait
adc
sbb
adc
adc
and
mov
sbb
inc
adc
test
mov
or
sbbl
aam
in
mov
mov
je
xor
jb
add
sahf
mov
rclb
push
daa
out
pop
movsb
push
lock
dec
xchg
mov
mov
sbb
fucomp
out
jne
mov
mov
outsb
es
sbb
push
fcompl
mov
adc
add
test
cltd
lahf
stc
cmpsl
xchg
outsl
inc
push
loope
lock
cmp
sbbb
xchg
push
jecxz
jp
mov
scas
mov
or
pop
testb
fists
mov
shr
call
mov
adc
jns
inc
jne
mov
mov
add
es
push
cmp
jg
jge
mov
lds
pop
sub
xchg
push
mov
leave
jmp
decb
sbb
push
popf
cmp
or
add
test
push
imul
jo
push
sbb
clc
pop
loope
push
cmc
and
jg
or
jns
arpl
inc
sbb
inc
xchg
aad
lret
out
shl
xchg
je
ds
sub
pop
inc
jl
outsb
xchg
scas
adcl
xchg
or
pop
cld
jge
jecxz
outsl
xchg
push
lahf
repz
cld
lret
out
bswap
lret
xlat
andl
gs
mov
fists
pop
ss
push
sahf
pop
mov
dec
aas
in
push
jp
out
jmp
nop
xchg
push
jns
inc
out
addb
or
push
mov
add
mov
fdivrl
test
dec
insl
or
popf
push
cli
in
xor
mov
jne
mov
jmp
push
dec
cmp
shl
rclb
add
fdivrs
es
and
icebp
out
push
lcall
mov
and
push
cmp
jno
loop
jnp
ss
cli
xchg
mov
test
inc
jl
xor
inc
ret
adc
pop
pop
cmp
fldl
sub
cwtl
clc
adc
mov
sbb
mov
jmp
hlt
mov
mov
jmp
xchg
cmp
int
cltd
jp
lock
or
test
xor
add
filds
sub
sub
lret
std
cmpsl
cmp
push
xchg
mov
in
fsubrl
mov
mov
inc
mov
mov
mov
rcl
add
jns
mov
inc
adc
addl
aaa
pop
js
iret
or
or
mov
and
mov
test
dec
pop
mov
mov
add
mov
out
or
cwtl
mov
jecxz
or
fiadds
sti
aas
xchg
and
and
push
xchg
fucom
test
cmpsb
pop
cmp
bound
dec
pop
sbbb
sbb
test
pusha
movsb
inc
jns
adc
pop
xchg
aas
testb
cmp
test
pop
ror
xor
mov
out
mov
inc
sub
mov
int
mov
mov
repz
jmp
fists
cmpsl
test
in
pop
sbb
or
jno
xchg
js
mov
mov
iret
jo
or
sbb
daa
js
test
mov
cwtl
cs
ss
je
into
outsb
ffreep
shl
icebp
xchg
and
pop
mov
add
jo
xchg
pop
cmp
jl
insl
mov
add
stc
jp
ja
jno
dec
xchg
icebp
xchg
arpl
jns
jb
xchg
pop
adc
sub
rol
lahf
lea
xor
and
stos
push
or
xor
pop
in
mov
lret
adcl
inc
inc
ljmp
jnp
pop
mov
arpl
jo
xchg
cmpsb
ret
mov
pushf
js
lret
fisttpl
adc
pop
cmp
repnz
inc
adc
mov
mov
in
les
jg
addr16
push
mov
sbb
mov
push
mov
inc
xchg
lret
fsubl
sub
mov
dec
lea
fstpt
sbb
cs
xchg
fldt
sbb
pop
aas
and
xchg
pop
pop
les
cs
and
into
mov
loopne
nop
pushf
add
pop
insl
pop
dec
sub
mov
test
and
push
sbb
lahf
jmp
xchg
std
mov
fisttpll
rcrb
dec
ret
xor
or
xchg
cmp
xchg
pop
or
and
and
and
popa
mov
jp
gs
nop
push
ret
imulb
inc
fwait
loop
dec
cmp
rcrl
xchg
lds
inc
pop
popl
mov
movsl
repnz
xor
adc
push
rcrb
mov
lods
fisttps
enter
sub
test
or
filds
xlat
repnz
jg
xor
sarb
lahf
jecxz
pusha
gs
daa
jg
repnz
xor
and
mov
jb
aam
nop
out
jns
and
loopne
into
xchg
inc
repz
repz
out
and
ljmp
ja
ss
xchg
xor
mov
xchg
cmc
jae
mov
xchg
sub
mov
cmp
out
ljmp
lcall
sbbb
mov
adc
scas
out
daa
scas
xorl
jmp
int3
movsl
lcall
adc
sbb
imul
lret
adc
jne
loopne
hlt
mov
lret
inc
mov
cs
inc
mov
out
xchg
add
and
scas
jb
dec
push
sub
sub
mov
lods
add
lret
xor
fprem
cmpsb
outsb
mov
int
mov
divl
std
push
jecxz
push
mov
outsl
imul
xor
sub
mov
cmpsl
inc
and
nop
jae
aaa
rorb
inc
adc
xchg
mov
or
add
icebp
pop
lea
popa
xlat
xor
les
xchg
push
sbb
hlt
je
mov
xchg
xor
pop
dec
je
nop
push
scas
dec
test
xchg
mov
pop
mov
or
idivl
into
cli
sub
pop
sub
and
out
clc
xchg
cmpsl
mov
aaa
movsl
repz
inc
push
adc
xorb
sub
jmp
pop
adc
add
outsb
pop
subb
adc
sub
jbe
sub
cmpb
pop
xor
into
jb
xchg
or
jecxz
mov
and
fdivl
mov
jmp
mov
loope
sbb
cmp
andb
fcoms
or
push
test
ss
fisubl
sub
mov
inc
or
je
xor
dec
jmp
add
cmp
mov
xchg
inc
in
ds
dec
sbb
cltd
aaa
xchg
push
movsb
rcr
and
arpl
scas
sbb
sbb
lds
test
inc
pop
loope
scas
xchg
xchg
ret
fcompl
arpl
cli
adc
ss
out
push
js
dec
xor
call
mov
xchg
sub
out
inc
aad
mov
adc
out
cli
testb
push
shll
out
cli
xor
add
dec
clc
and
lea
out
out
fadds
xor
repnz
fwait
outsb
mov
or
cmpsl
into
ret
cmpsl
out
xchg
cmpsl
xchg
xor
mov
cmc
inc
test
ljmp
rcrb
pushf
inc
adc
inc
xchg
push
es
fcomp
pop
sbb
ljmp
in
cmp
push
orl
int3
xchg
or
sub
adc
xor
mov
push
movsb
clc
cmp
aas
jne
mov
push
jp
pushf
adc
mov
pop
or
mov
push
ret
jno
xor
fwait
iret
loopne
adc
fstps
cmp
scas
mov
mov
fisubl
pop
add
mov
cltd
mull
mov
test
in
xor
js
pop
lea
cmp
ret
iret
push
lock
add
push
and
and
sbb
je
jecxz
inc
je
xlat
dec
inc
dec
es
test
testb
jno
mov
ror
push
repz
scas
push
inc
sar
jnp
popa
jns
cmp
loopne
ss
pop
jne
xchg
inc
inc
rcrb
add
test
add
jge
fsubrs
jb
int3
mov
icebp
sbb
pop
pop
pushf
outsb
inc
stc
das
mov
int
dec
icebp
ret
or
das
mov
mov
dec
xor
pusha
sub
add
pop
lds
jl
xor
push
fcoml
mov
and
mov
pop
or
cmp
jnp
hlt
jmp
scas
data16
add
sbb
mov
stos
push
push
push
rol
push
popf
add
out
mov
push
inc
pushf
dec
lea
notl
dec
lock
mov
sbb
insl
xchg
mov
pop
test
xchg
cld
outsb
test
mov
pop
lahf
aam
ret
sbb
jae
mov
dec
test
js
inc
dec
enter
mov
out
jno
add
mov
sbb
rcll
shl
mov
insb
outsb
aad
out
lahf
pop
jl
push
mov
dec
mov
jns
add
sub
cld
xchg
or
dec
pop
push
push
xchg
add
add
test
ljmp
mov
cmpsl
imul
mov
jmp
xchg
jmp
movsl
and
js
pop
xchg
ss
lods
push
inc
pop
lcall
or
add
jmp
out
adc
inc
jmp
sbb
lea
in
ret
cmp
jl
jns
adc
push
pop
sub
in
adc
pop
xchg
jae
xchg
popf
adc
and
lds
or
inc
push
jmp
sbb
xor
leave
bound
adcl
stos
js
out
shrb
dec
fidivl
arpl
jge
push
ljmp
or
jmp
int3
out
inc
lahf
call
pop
jb,pn
test
pop
jns
insl
pop
mov
lahf
popf
sbb
test
push
ss
loopne
xchg
pop
repnz
in
xor
pushf
push
fcmovnbe
test
and
stc
mov
ja
movsb
add
sub
call
xchg
insb
inc
mov
sbb
popf
push
mov
in
cmc
pushf
data16
xor
dec
ret
and
pop
jg
inc
mov
fcoml
mov
pop
add
xchg
shlb
mov
inc
adc
mov
outsl
push
dec
dec
or
aad
inc
inc
inc
icebp
jno
inc
out
test
pop
cld
lcall
dec
fistpll
stos
out
xor
push
pop
test
mov
mov
lret
outsl
lret
jl
int
dec
fildll
cmp
dec
push
cltd
xor
pop
int
imul
or
int
lea
sbb
xchg
psubq
loope
mov
inc
push
fildll
addr16
fcomi
cmp
pop
enter
cmp
adc
push
mov
insl
xchg
test
add
in
or
push
jecxz
pusha
into
pusha
and
xor
sbb
cmp
lock
iret
lds
inc
arpl
cmpsb
mov
addr16
pop
mov
or
jne
cwtl
jp
push
nop
inc
gs
sahf
sub
sahf
jne
sbb
sarb
pop
adc
ret
mov
cmp
cld
push
sbb
cmp
cmp
or
aam
push
inc
popf
jmp
xor
out
movsl
test
sbb
mov
dec
mov
pop
dec
dec
into
cwtl
mov
jmp
into
sub
push
cmp
xlat
inc
cwtl
xor
jp
cmp
in
popa
mov
cld
movsb
daa
popf
sub
sbb
xor
or
inc
xchg
and
jl
dec
or
shlb
fsub
cltd
outsl
or
ss
arpl
adc
jbe,pn
push
sub
push
gs
insl
push
and
inc
popa
cmp
pop
fsubr
lret
xor
pusha
adc
mov
es
inc
cltd
push
xchg
cmp
nop
xor
in
cmp
icebp
cmc
push
ja
push
jbe
xor
add
stos
inc
fidivrl
xor
sub
test
lcall
and
lahf
mov
shll
jnp
add
lahf
sub
fwait
cmc
and
aad
sti
inc
jno
je
les
inc
gs
cmp
dec
mov
enter
mov
mul
sbbb
loope
icebp
or
pop
loopne
xor
inc
mov
sub
in
cli
cmpsb
test
lret
inc
cmpl
pop
dec
outsl
mov
xchg
fcompl
xor
mov
mul
cs
xchg
js
cltd
inc
mov
pop
adc
jmp
shrb
rorb
dec
push
pop
mov
jge
movsl
or
dec
lret
push
inc
push
aam
loope
adc
fidivs
xorps
loopne
push
push
lock
mov
cmp
add
pop
or
pushf
ss
pop
shll
xor
leave
push
pusha
push
mov
ss
xsave
ret
cmp
fdivrl
fldcw
push
clc
cli
jno
mov
sub
scas
and
bound
pop
out
xor
mov
into
mov
and
dec
xor
ljmp
and
adc
adc
push
xor
cmpsb
and
insb
int
fwait
sub
fldenv
xchg
aam
and
lock
push
rcll
xchg
sub
mov
xlat
sarb
nop
ret
push
xchg
hlt
sbb
and
pop
dec
xor
fs
dec
mov
mov
bound
insb
adc
mov
and
sbb
mov
push
xchg
mov
pop
sti
xchg
loop
push
cs
xor
cli
adc
push
bound
loop
mov
dec
pushf
cmc
xor
aaa
fistps
sub
xchg
call
call
movsl
lods
rcrb
push
rcll
pop
sbb
push
inc
bound
and
xor
ljmp
push
cmp
push
mov
jg
lods
pushf
outsl
mov
xchg
or
or
repz
cmp
pusha
daa
push
int3
xchg
push
jge
push
push
test
sbb
dec
add
in
dec
jbe
scas
mov
sahf
jl
push
dec
cmp
jae
stc
cmp
sahf
pop
aas
ficompl
mov
dec
cmp
insl
insb
mov
test
popf
hlt
adc
jmp
lock
sbb
mov
mov
or
mov
mov
outsl
mov
jecxz
add
add
out
lea
std
mov
sbb
cltd
int3
pop
pop
jno
stos
scas
jge
and
movsl
daa
ljmp
outsl
outsl
cld
jns
sub
jmp
fimuls
iret
push
and
jo
adc
in
mov
daa
div
hlt
or
rcrl
lds
pop
jecxz
cltd
push
mov
fstpl
mov
or
inc
cmc
mov
mov
pop
mov
cltd
add
leave
loopne
insl
fldt
addr16
jmp
sahf
pushf
adc
dec
mov
cmp
fidivs
lret
adc
repz
add
dec
icebp
sub
sub
jge
sarl
push
push
adc
pop
movsl
out
jl
mov
xchg
sub
int3
out
push
or
pop
lock
shlb
xchg
fucomi
pop
imul
mov
mov
push
daa
cwtl
jmp
or
ja
mov
ljmp
test
jbe
adc
xor
iret
cmp
add
jnp
adc
fdiv
fwait
sub
push
sbb
or
div
orl
cmp
adc
stos
flds
cli
pop
ds
shl
in
leave
rolb
aaa
scas
jns
cmp
xor
gs
out
hlt
xchg
pop
push
js
in
lock
mov
inc
inc
push
add
mov
xor
jmp
xor
mov
pusha
mov
repnz
cmp
or
fs
mov
pop
sbb
dec
sti
dec
inc
mov
inc
pop
inc
inc
mov
and
sbb
push
add
jmp
stos
xor
cwtl
xor
cli
dec
outsl
mov
xchg
fbld
pop
mov
mov
test
xchg
leave
jns
js
aam
nop
sbb
push
adc
in
dec
xlat
inc
or
and
adc
pop
xlat
add
push
cmpsl
pop
mov
push
sbb
rcl
sti
mov
arpl
shrb
push
or
xchg
addr16
lret
xor
imul
adc
inc
lret
sub
adc
icebp
pushf
or
clc
adc
pop
aaa
inc
jae
jbe
inc
inc
and
lahf
add
addl
mov
ret
imul
lods
or
stc
dec
mov
nopw
push
inc
add
xor
jge
fnsave
rcl
rclb
das
xor
push
call
adc
outsl
or
pop
pop
cmp
test
cmpsb
mov
dec
mov
adc
mov
loop
repz
inc
clc
test
jns
dec
sub
lods
cmp
fs
lahf
in
mov
jl
lock
int
jae
xchg
cmpsl
xchg
push
pop
sarl
and
add
sahf
mov
mov
mov
gs
scas
lret
mov
sbb
mov
movsb
sti
loopne
les
call
cmp
je
push
dec
mov
inc
xchg
dec
mov
pop
jl
lret
xchg
pop
xchg
fucomp
adc
jb
add
js
and
sbb
pop
es
test
mov
dec
sbbb
test
sbb
aad
add
std
inc
out
cmpb
and
sbb
and
movsb
dec
mov
pusha
int3
xlat
xchg
pusha
push
insl
jg
inc
mov
xor
or
rcll
and
mov
mov
jns
loopne
xor
adc
xlat
or
and
shrb
mov
add
mov
cli
je
repz
test
test
cli
push
je
add
cmp
and
lahf
inc
aas
mov
pop
push
add
lock
shlb
insl
push
sub
xor
ficoml
cli
loope
cmp
mov
xor
pusha
dec
pop
stos
lret
cs
xchg
mull
icebp
push
mov
mov
cwtl
adc
imul
dec
dec
mov
xchg
repz
or
int3
aam
adc
outsb
insb
jb
xchg
insb
push
mov
cwtl
add
pop
and
push
lret
xchg
decb
rcl
and
or
inc
xor
out
int
bound
insl
pop
pop
mov
mov
push
cmp
jno
maskmovq
idivl
push
jo
pop
subl
fstps
mov
insl
jmp
incb
jp
xor
inc
inc
lcall
das
xor
mov
xor
mov
sub
fsubs
mov
lock
pop
cwtl
out
xchg
mov
sbb
pop
repnz
add
sub
pop
inc
add
sub
push
loopne
dec
and
movsb
mov
cmp
mov
sti
icebp
xor
mov
inc
inc
mov
add
bound
cld
divb
cwtl
mov
pop
add
sub
loopne
mov
je
jno
fisubl
mov
arpl
dec
mov
pop
lahf
in
jp
lods
cld
add
rolb
pop
adc
in
pop
icebp
fstps
inc
adcl
jbe
pop
popa
pop
jno,pt
mov
std
in
aaa
inc
mov
popa
or
add
inc
hlt
les
ds
inc
pop
mov
les
mov
pushf
sahf
scas
inc
movl
in
sahf
enter
adc
test
xor
into
or
mov
lret
loop
movsl
and
movsb
jmp
cli
fucom
outsl
sti
test
aad
jle
mov
jg
popa
xchg
xchg
addr16
rolb
bound
lret
push
dec
cwtl
sub
nop
cmp
movsl
jmp
mov
pop
out
pop
sbb
xor
pop
mov
idivl
lds
dec
mov
jnp
loopne
fdivs
es
mov
jmp
mov
cmp
pop
lods
ret
repnz
lds
test
mov
sub
out
and
add
pop
cmpsb
or
insl
fs
pop
movb
test
hlt
xchg
xor
jecxz
sahf
dec
sub
or
ja
inc
rorl
pop
imul
ja
ffreep
xchg
add
sar
add
sub
sahf
call
or
add
sub
popf
fdiv
fs
mov
xor
xor
mov
and
ja
fucomp
jle
es
push
outsl
sbb
movsl
cwtl
pop
icebp
push
and
fcom
or
iret
xchg
shrl
xchg
imul
repz
jno
outsl
jno
bound
xor
pop
je
pop
add
popa
rcll
inc
mov
ljmp
push
ficoms
or
fildl
lcall
jbe
mov
jle
sarl
inc
jb
pop
movsb
and
cltd
and
push
push
mov
arpl
mov
sub
das
pop
push
bound
xchg
adc
jnp
loop
add
jbe
sbb
or
dec
outsb
push
jmp
std
mov
stos
cltd
and
or
pop
xchg
dec
cmp
enter
bswap
pusha
adc
out
fists
jp
and
pop
inc
xor
mov
xorb
xor
mov
inc
sbb
out
enter
sbb
sbb
stos
dec
add
xor
push
fld
inc
insl
aaa
add
dec
mov
jae
mov
push
movsb
aam
rcl
outsb
pop
fucomip
mov
xchg
test
mov
loopne
inc
rcrl
aas
adc
inc
inc
int3
pop
push
or
jecxz
dec
dec
push
fsub
or
lods
arpl
xchg
mov
mov
test
dec
pop
sahf
mov
sub
repnz
loope
or
scas
pusha
fbstp
std
pop
aad
sub
aas
cltd
dec
jg
xchg
outsl
xchg
cmp
ja
cmp
popa
or
mov
psrlq
adc
imul
sub
rolb
add
cmpsb
in
orl
loopne
call
dec
lods
dec
or
or
scas
out
scas
jo
sbb
insb
cmc
mov
pusha
dec
stos
sub
pop
and
rorb
sub
jmp
test
mov
sahf
xor
je
dec
bound
mov
sti
or
or
ds
insb
cmp
push
je
dec
pop
or
sbb
or
out
sub
insl
fisubrl
and
mov
xor
loope
insb
shl
scas
daa
or
cltd
inc
fnstcw
test
fsubl
push
jb
insl
arpl
es
and
in
jbe
cld
ret
fldcw
and
inc
in
jecxz
je
sarl
fsub
mov
mulps
scas
cmpsl
out
push
sahf
or
xchg
fst
rcl
sub
mov
inc
xor
nop
out
aam
leave
jmp
xchg
mov
sub
push
cmp
adc
nop
cmp
dec
mov
fwait
adc
sbb
cwtl
repz
mov
cmpsl
insl
lcall
push
lods
mov
in
xor
mul
jae
jne
inc
push
and
xchg
fadds
jmp
jb
pop
ja
mov
mov
and
or
test
mov
or
add
sbb
addr16
jo
lahf
adc
sub
sub
push
dec
push
mov
push
sbb
clc
adc
inc
cltd
hlt
ja
jp
sbb
mov
int
aad
or
xor
sub
or
xor
add
out
mov
in
cmp
pop
fdivrl
test
fsubl
lods
jle
mov
out
pushf
cwtl
ds
js
dec
dec
imul
pushf
dec
in
in
stos
js
push
and
inc
adc
inc
lods
pop
xchg
leave
ret
clc
sub
cmp
cmp
testl
fwait
jne
sub
incl
fadds
daa
lahf
dec
and
adc
pop
and
sbb
scas
into
jb
inc
mov
or
mov
sub
aaa
dec
hlt
cmp
add
cwtl
mov
mov
xorl
roll
lods
clc
pop
mov
mov
jge
cmp
add
inc
out
cmp
nop
fcoml
push
cs
jmp
cs
mov
cmp
add
inc
gs
out
iret
enter
clc
imul
call
sti
xor
bound
cli
shll
stos
inc
inc
and
dec
pop
push
aaa
xchg
sahf
pushf
sbb
lods
mov
push
les
xor
cmp
aam
adc
jp
sbb
ss
adc
fstp
xlat
call
cmp
popa
pop
mov
push
imul
cmpl
mov
xchg
test
push
push
int3
xchg
sub
hlt
cltd
pop
scas
jle
stos
push
mov
and
int3
mov
dec
mov
sbb
lods
mov
fistpll
inc
aaa
cmpsb
std
divl
jge
mov
mov
pop
sbbl
lods
jle
xor
lds
push
adc
mov
popa
xor
sti
ljmp
jb
lret
imulb
xchg
sub
addr16
add
in
divb
in
push
in
imul
imul
fs
push
scas
or
pop
mov
daa
daa
repz
and
mov
sahf
daa
and
leave
xor
fwait
or
mov
push
ja
fnstsw
sub
mov
xchg
les
push
fsts
pop
pop
fisubl
mov
push
aaa
idiv
lds
xor
add
inc
imul
sub
imul
jg
inc
enter
movsl
pop
mov
in
mov
dec
cmpsb
aad
mov
mov
popa
pusha
bound
xchg
lock
adc
mov
add
stos
mov
sub
sti
js
popa
ljmp
lea
sar
outsb
pop
insb
es
mov
cmp
mov
lcall
mov
add
adc
dec
mulb
aas
iret
xorl
aas
mov
mov
mov
shll
cmpsl
and
stc
jle
imul
jmp
xlat
pop
cmp
iret
push
outsl
jg
cmc
in
shl
mov
sti
enter
mov
or
cmp
sub
sub
pop
incb
pushf
pop
lods
jns
stc
and
psadbw
enter
sub
xlat
call
jge
pop
cmp
fisubrl
outsb
dec
in
lahf
icebp
jnp
faddp
push
fdivrs
mov
loop
cltd
repnz
mov
lods
cld
adc
sub
das
lods
xchg
out
and
dec
xor
pop
repnz
rorl
or
int3
mov
cmp
fsubr
inc
sbb
inc
push
out
loop
js
aaa
in
push
jns
loope
hlt
xor
cmp
push
and
fnstcw
testb
enter
lret
into
xchg
les
flds
repz
cwtl
push
js
mov
or
push
js
sub
stos
cmpsb
mov
inc
jb
or
and
stc
mov
out
es
push
sub
mov
jmp
inc
call
mov
sub
inc
shll
jo
sub
mov
lcall
pcmpgtb
insb
fidivl
ds
push
mov
ret
test
orl
ja
fisttps
cmp
or
sbb
and
mov
lcall
scas
fdivs
jns
call
xor
mov
pop
mov
dec
stc
out
imul
mov
add
mov
insl
and
push
into
stc
in
iret
out
vrcpps
pop
push
adc
sub
repnz
xchg
lods
int3
xchg
test
repz
or
ss
addb
xchg
aad
shr
test
idivl
dec
inc
jecxz
jecxz
or
idivb
lea
addr16
fstps
sahf
pop
mulb
xchg
icebp
les
xor
ja
pop
je
adc
aam
insl
jae
jmp
xor
jge
mov
out
jmp
cs
pop
test
in
jns
adc
jnp
hlt
lret
loop
mov
sbb
push
neg
aaa
out
leave
ret
lret
mov
push
push
ss
xor
imul
sarl
data16
cmp
pushf
dec
shl
lret
shlb
sub
or
push
adc
push
pop
popf
cmp
movsb
sub
icebp
push
push
nop
mov
into
in
push
jae
pop
sarb
lret
aas
mov
test
loope
jno
scas
sarb
aad
or
call
mov
movsl
mov
jl
data16
dec
pop
fnstenv
mov
mov
cmp
push
ja
mov
out
mov
pushf
loope
out
addr16
testl
jbe
js
add
les
icebp
leave
add
shlb
mov
dec
popa
sub
scas
mov
dec
jne
jae
or
call
imulb
xor
lods
mov
pop
add
sbb
mov
in
ret
js
fs
int3
push
fnstcw
push
movsl
das
push
ds
xor
cmpsl
daa
pop
pop
mov
popa
stc
stc
mov
xlat
ss
push
dec
xor
inc
scas
cmp
icebp
jmp
pop
fisttpll
int3
and
cli
cltd
jo
sbb
cmp
sti
sub
mov
jge
jecxz
dec
pop
inc
push
jge
mov
es
xchg
and
shll
mov
pusha
pop
aaa
popw
mov
or
sahf
in
rcll
test
stos
sbb
lret
mov
jmp
out
bound
int
or
xor
push
mov
outsl
jge
and
cmp
cmpsl
enter
inc
inc
pop
add
mov
fdivrl
sub
daa
iret
imul
mul
rcl
add
sbb
mov
imul
sbb
jmp
cmc
jmp
pop
aas
mov
ljmp
insb
cmp
jecxz
shlb
repz
xchg
pop
adc
pop
dec
fsubs
rclb
cmpsb
mov
lods
dec
in
mov
pop
add
xor
outsb
shrl
mov
loopne
stos
fs
cmpsl
repnz
pop
jp
jmp
or
xchg
xchg
jmp
cmp
fnstsw
mov
cltd
mov
jo
popf
mov
out
movsb
jae
iret
push
dec
sub
test
sub
mov
cli
lret
push
inc
out
xor
pusha
inc
and
stc
bound
pop
add
push
push
leave
decl
das
mov
inc
mov
lods
fdivs
and
sub
sub
inc
push
inc
and
xchg
nop
and
stc
mov
stos
loope
cmp
dec
adc
or
sub
lret
test
xchg
loope
dec
lds
sbb
jecxz
test
iret
push
pop
or
pushf
negb
ljmp
lea
add
ljmp
movsb
and
and
cltd
frstor
push
mov
xchg
inc
inc
aaa
xor
sbb
stos
addr16
mov
movsb
ja
fwait
sub
cmp
cmp
xchg
aad
mov
movsl
jg
jp
pop
hlt
sbb
sub
stc
lods
xchg
xchg
nop
xchg
stos
mov
jge
jo
mov
or
scas
xchg
xor
movsl
mov
or
pop
stc
in
inc
mov
popa
push
cs
inc
fcoms
enter
adc
xchg
js
cmc
rep
adc
das
fsubp
in
bndldx
sub
jo
xchg
cmp
icebp
pop
bound
xlat
fisubrs
icebp
outsl
cli
fmul
aaa
jo
sahf
mov
popf
add
nop
push
rcl
pop
rcrl
push
lea
pushf
mov
enter
addr16
popl
inc
mov
sbb
push
push
cmc
jne
fsubrl
mov
scas
bound
out
push
cmp
icebp
or
ja
xor
xchg
into
cli
dec
jb
and
mov
mov
shlb
jl
adc
add
shlb
push
adc
pop
fiaddl
sbb
sub
rcrb
jl
xchg
sahf
test
and
mov
inc
fstps
pop
dec
cmp
sub
pop
xor
lea
xor
pop
inc
dec
jno
enter
enter
cld
mov
pop
cltd
jns
adc
fs
xlat
enter
insb
movsl
ljmp
adc
add
lds
xor
shll
arpl
imul
push
xor
fldl
jl
add
jne
call
loop
in
fnstcw
mov
decb
sti
cmp
aam
andb
xchg
out
call
in
push
das
pop
icebp
cmpsl
sbbb
out
rcll
addb
nop
inc
fstpl
jmp
jmp
mov
jbe
mov
push
sbb
push
stc
jbe
out
dec
int
mov
push
leave
ljmp
push
arpl
push
sbb
ffreep
fiaddl
fadds
cmp
sub
jp
add
outsb
mov
pop
dec
js
dec
out
jp
sarb
sbb
lcall
mov
push
jmp
xchg
lds
mov
or
dec
sahf
inc
test
jecxz
out
rcrl
xchg
sti
xchg
dec
shlb
mov
orb
cli
loop
and
fidivs
xor
inc
push
stos
test
cltd
clc
jle
add
dec
hlt
test
ud2
jbe
fisubrs
push
jne
adc
dec
pop
sbb
inc
hlt
ss
test
push
testl
iret
pop
movsl
jle
rolb
pop
mov
lea
shl
out
sub
in
arpl
dec
int
int
jp
sahf
xchg
jecxz
mov
jbe
addr16
insl
sub
imul
and
and
clc
jmp
adc
xchg
mov
xlat
mov
es
lcall
mov
push
loope
and
jmp
loopne
inc
add
out
inc
ret
gs
movsl
enter
xor
scas
fcomps
mov
fmull
ds
fstpl
add
dec
mov
mov
cmpsb
adc
jbe
sbbl
test
out
scas
in
cltd
sub
sbb
outsl
pushf
addr16
lcall
repz
xchg
rorl
dec
into
pop
inc
jns
add
nop
popa
add
mov
mov
xchg
jbe
xchg
adc
and
outsb
fldenv
adc
cli
mov
lcall
cmp
xor
sub
out
cmpsb
loope
lea
xor
cli
sbb
pop
pop
dec
add
nop
xor
jbe
lahf
push
ret
jno
fimuls
cld
loopne
cli
cmp
pop
jle
fildl
subb
sub
push
sbb
xchg
push
push
pushf
mov
jno
fstpt
adc
push
sub
pop
sub
scas
or
popl
mov
sbb
sub
cmpsl
mov
stos
lahf
fucomi
mov
jecxz
push
adc
repnz
dec
and
movsl
in
sub
adc
dec
in
pop
ret
mov
mov
ret
js
sbb
scas
insl
xor
adc
xor
in
mov
loop
pop
cmpsl
inc
mov
lds
xchg
jge
mov
jl
insl
insl
mov
add
and
add
hlt
es
dec
mov
lods
pop
adc
std
push
inc
movb
mov
and
and
testb
mov
sub
adc
mov
ja
loope
mov
shrb
cmp
mov
loop
mov
mov
xchg
arpl
cmp
xlat
out
xor
xchg
push
cmp
sub
leave
mov
pop
xchg
pusha
popf
jp
pop
jno
push
cmp
sbb
pop
rcrl
movsb
mov
in
shll
mov
pusha
push
adc
and
jns
push
fwait
rorl
das
daa
push
pop
imul
arpl
hlt
outsb
loopne
add
ret
orl
pop
out
and
adc
add
lahf
lret
sbb
mov
mov
stos
adc
scas
cli
and
xchg
mov
cmc
jle
js
lret
fidivrl
adc
sub
push
sarb
cltd
js
lods
inc
mov
mov
insb
sbb
outsb
sbb
fcoml
mov
aaa
and
arpl
jecxz
or
push
add
xchg
mov
mov
lahf
cmc
mov
adc
xchg
mov
icebp
pop
fldt
stc
push
sub
dec
pop
xor
sub
ss
ds
mov
or
dec
shlb
notb
sti
fisttpll
jbe
les
shll
sahf
popa
jg
cli
mov
outsb
sbb
adc
pusha
mov
fbld
lcall
out
lock
ret
icebp
scas
and
inc
sti
sub
pop
mov
aaa
loope
add
popa
dec
adc
ficoms
pop
push
mov
cs
outsl
out
cs
enter
lcall
in
movsl
shlb
cmp
mov
pop
inc
fidivrs
mov
add
and
movsl
inc
sahf
cmc
push
ror
sub
in
xlat
sbb
addl
jp
push
inc
sbb
iret
insl
and
inc
sbb
xor
adc
sbb
mov
pop
and
syscall
mov
cwtl
leave
mov
xchg
test
jnp
cmc
out
inc
push
cmp
cs
xchg
cmp
push
pushf
cmp
sbb
mov
stos
and
inc
pop
shrb
outsl
movsl
or
add
jne
and
pusha
ds
inc
shrl
xchg
imul
loope
sub
push
faddl
xlat
push
icebp
stc
cmc
jae
imul
scas
in
jg
xchg
xchg
fdivs
dec
xor
loop
xor
push
pop
pop
fists
test
xor
xchg
jo
mov
test
mov
sarb
retw
ja
xchg
negb
adc
popf
fisttps
and
xchg
sbb
test
cmpb
in
rcl
cmp
pushw
rcrb
fadds
xlat
jecxz
inc
icebp
pop
int3
cmp
dec
dec
ds
nop
or
fnstsw
subb
dec
fsubp
push
movsb
loopne
fldcw
sbb
mov
jmp
scas
mov
loope
pop
mov
fcoml
mov
movsb
dec
fwait
lds
add
rorl
sub
fwait
jecxz,pn
ret
dec
je
sahf
jbe
loope
xor
cld
outsl
or
push
cmp
add
leave
push
adc
sub
cmp
xlat
popf
mov
mov
dec
mov
ret
sub
pop
push
dec
mov
cmp
adc
mull
inc
pushf
jo
push
lret
arpl
daa
insl
sub
push
sub
xor
inc
or
sub
aam
in
cld
aad
sahf
ret
leave
in
adc
gs
ljmp
call
mov
cmp
push
mov
mov
cmp
mov
jp
mov
pop
icebp
orb
mov
sub
xchg
jb
push
mov
pop
ds
out
push
sub
and
popa
loope
push
orl
fcoml
loope
inc
mov
lock
pop
mov
cltd
jae
ds
inc
mov
mov
add
ja
cmpsb
lock
data16
in
cwtl
enter
xchg
cmp
cmp
push
ljmp
insl
lods
inc
fucomp
mov
mov
imul
xor
cmpsb
xchg
push
punpckhbw
mov
cmc
push
stos
inc
adcb
fistps
sbb
sbb
das
and
test
jno
mov
daa
xlat
pop
call
mov
mov
fwait
sbb
outsl
mov
shrl
test
adc
push
insb
xor
sbb
in
push
subb
mov
xchg
dec
pop
mov
aaa
shlb
jbe
pop
shrl
pushf
ret
idiv
xor
cmpl
and
push
jae
cld
add
push
pushf
pop
lock
mov
cmp
mov
movsb
mov
mov
pop
pop
pop
or
mov
outsl
clc
loopne
pop
add
and
int3
jns
leave
mov
sub
jge
incb
loope
mov
int
push
stos
frstor
and
es
xchg
scas
jns
adc
fs
push
dec
mov
xor
fstpt
bound
sub
arpl
popl
fwait
mov
add
insb
lea
ja
jo
adc
and
dec
adc
dec
dec
jbe
xchg
test
jns
mov
or
or
cs
fstl
aaa
sti
loope
outsl
mov
dec
jne
jecxz
push
pop
add
and
in
fld
nop
push
jo
pop
out
fsubrp
fwait
ja
lea
pop
inc
push
jne
mov
loop
rolb
mov
adc
xor
push
nop
addr16
dec
ret
insb
cmovs
fistpll
inc
mov
dec
and
sub
fwait
and
push
es
outsl
xchg
js
sub
xchg
adc
jmp
mov
mov
and
and
cmp
dec
xor
jmp
inc
mov
xchg
cmpsl
jae
lods
dec
mov
clc
jmp
lahf
fisubl
sub
adc
les
lods
insl
outsb
push
leave
repnz
jb
or
test
jp
cs
jg
jmp
push
jmp
mov
pop
insl
mov
test
lds
add
stc
jbe
cld
and
adc
dec
push
movsl
sub
xlat
pop
gs
cmp
mov
popa
fmul
ret
hlt
iret
fwait
pop
clc
jo
imul
aad
stos
fists
adc
sbb
pop
aam
pop
xchg
fnstenv
jmp
int3
aad
scas
push
sbb
lahf
and
fstpt
mov
sbb
jnp
aad
xchg
xchg
fsubs
iret
mov
jmp
adc
push
jno
mulb
sahf
inc
mov
xor
movsb
incb
pop
mov
push
pop
bound
inc
fisttpl
sti
subl
jecxz
dec
outsl
xor
jl
fs
inc
push
pop
in
mov
lcall
cltd
stos
in
dec
inc
inc
cld
sti
cmp
test
dec
jno
imul
cmp
repz
push
push
jne
xchg
mov
inc
shlb
cld
pop
pop
xlat
xor
jo
mov
mov
pop
int
push
xchg
sbb
cltd
pop
iret
mov
arpl
lret
xor
jecxz
mov
push
sub
mov
mov
sbb
mov
add
lods
xchg
clc
inc
js
xlat
cltd
push
and
jmp
out
cmp
adc
fcoml
aam
mov
push
jb
adc
xlat
adc
add
cld
out
daa
roll
mov
mov
cmpsb
push
xchg
lahf
xchg
mov
add
dec
mov
fidivl
ja
push
cmp
xchg
movsb
ror
pop
pop
adc
jne
data16
mov
jle
dec
or
and
inc
rorl
outsb
jecxz
pop
lods
inc
shr
xchg
ja
mov
daa
sti
push
add
movsb
mov
xor
pop
cli
sbb
pop
scas
cmpsb
cwtl
enter
or
mov
rcll
cmp
cmp
xor
lds
mov
mov
dec
jbe
nop
xchg
jnp
decl
cmpsb
in
jg
outsl
ud1
adc
icebp
xchg
pushf
xchg
fdivp
shl
sbb
outsb
int
xlat
movl
das
pop
add
in
sub
cld
sarb
mov
cmpsl
xor
push
or
mov
mov
jb
inc
push
xchg
fistl
sub
inc
cmp
cmp
add
jmp
xlat
stc
sbb
and
test
jo,pt
inc
pop
xlat
ss
iret
test
int
jp
dec
sub
outsb
outsl
xor
cld
jnp
jecxz
sub
pushf
jecxz
daa
push
sti
in
xchg
push
dec
notb
push
int3
mov
and
push
cmp
imul
cmpl
mov
cmp
pop
sub
jl
mov
pop
sub
fldt
int3
popa
fistpll
cmp
inc
in
mov
dec
sub
pushf
js
jne
mov
out
xor
cmp
pop
repnz
cltd
sub
ja
rcr
mov
nop
or
test
call
cmp
xchg
lcall
lcall
pop
adc
or
fistl
cmp
fildl
adc
inc
sahf
push
and
inc
repnz
sbb
popa
mov
insl
sbb
outsl
iret
inc
dec
rep
cmp
jp
cld
es
xor
adc
vpmullw
adc
mov
cwtl
idivl
add
rcll
jecxz
std
aas
movsb
arpl
pop
out
fbstp
adc
jmp
shll
mov
push
jp
sub
lea
mov
mov
mov
mov
inc
pusha
subl
movsb
ficoms
mov
das
push
sbb
adc
jbe,pt
mov
and
out
insl
dec
xor
scas
je
movsb
or
addr16
ret
pop
insb
popa
jns
movq
in
dec
dec
dec
sub
movsb
das
add
mul
push
jp
popa
mov
cmpsb
jg
clc
or
pop
push
aas
pop
mov
push
scas
fstpt
sbb
cmp
mov
out
or
push
mov
fwait
or
adc
mov
sub
fmulp
adc
mov
jmp
arpl
lods
mov
push
xor
sbb
jle
js
and
sub
cwtl
test
enter
addr16
push
push
xchg
and
mov
cmpsl
jnp
outsb
dec
pop
popa
and
mov
lret
pop
mov
out
push
push
into
in
jecxz
push
cs
rclb
or
rclb
pusha
lcall
sbbl
jmp
pop
push
fcoml
mov
jl
inc
fwait
ret
insl
mov
push
rcrl
lods
clc
fucomi
push
scas
out
xchg
icebp
es
xor
add
mov
mov
lret
pusha
and
je
jne
push
mov
rclb
cli
repz
cmp
roll
push
out
jge
push
add
inc
mov
mov
mov
bound
cmp
int3
lock
xchg
sbb
pushl
or
mov
xchg
cli
jmp
outsb
loopne
hlt
inc
cmp
fsubrl
scas
aaa
movsl
ljmp
divl
repz
inc
lods
xor
mov
add
mov
es
sahf
aaa
and
arpl
cli
cmp
mov
inc
xchg
shl
dec
ss
cmpb
cmpsb
mov
sbb
rclb
add
and
lods
cmp
out
cmp
pop
push
repz
loope
lods
mov
mov
mov
cmc
xchg
sbb
stos
ja
inc
nop
sbb
ret
insl
or
mov
cltd
into
in
sub
sbb
bound
jecxz
inc
shll
jle
cmpl
or
movsb
mov
dec
adc
js
or
inc
xchg
jnp
sub
cs
pop
sub
xorl
dec
xchg
sbb
ret
xor
xor
pop
xlat
xchg
fxch
mov
or
mov
mov
aaa
outsb
rorb
adc
or
adc
push
clc
stc
pop
loopne
and
sbb
idiv
push
in
add
jp
rol
or
int
push
stc
cmp
into
mov
leave
inc
add
aad
sbb
es
addr16
cmp
adc
pop
stos
insb
add
jp
sub
jmp
call
or
leave
inc
divb
adc
cmp
pop
add
test
repnz
fwait
bound
es
push
dec
les
inc
pop
inc
stc
jle
aaa
add
cmpsl
mov
jp
test
dec
push
mov
jl
adcb
pop
out
add
je,pt
test
out
int
inc
jne
xchg
mov
pop
fcompl
inc
into
sbb
pusha
outsb
cmpsl
mov
pop
jg
aaa
out
daa
pop
push
stos
in
add
add
mov
sub
adc
pop
lock
insl
fldlg2
stos
push
mov
inc
add
jl
shlb
cmpsl
adc
movsl
xor
sub
mov
mov
imul
adc
jb
jne
pop
dec
push
arpl
cmp
mov
test
sbb
jae
mov
or
dec
pop
push
arpl
loop
dec
xor
fisttps
adc
add
leave
and
sub
mov
mov
cmc
jecxz
xor
pop
ret
sub
in
in
cs
add
test
int
mov
xlat
xor
outsb
rorl
pop
xlat
or
inc
mov
idiv
jb
sahf
bnd
movsb
adc
dec
mov
pop
in
add
cmc
inc
aaa
repnz
sub
jb
in
pop
jb
fildll
ret
and
inc
xchg
xchg
dec
jb
inc
mov
xor
inc
xor
mov
xor
xor
int3
lea
arpl
std
xor
jle
push
sbb
outsl
lahf
mov
aad
inc
cmp
imul
inc
decl
enter
jmp
out
stos
int3
mov
fsubr
mov
test
into
xlat
cmpsl
movsb
fidivl
fcoml
clc
int
add
popf
adc
sahf
push
jae
movsb
cltd
cmp
dec
pop
inc
pop
jl
in
ror
add
iret
decb
mov
test
xchg
add
ss
mov
daa
adc
loopne
rcrb
xchg
cmc
das
sub
scas
push
add
std
xor
mov
mov
mov
sub
and
jno
lcall
xchg
cmp
cmp
ret
add
mov
mov
addr16
clc
mov
das
add
cwtl
jecxz
jae
shl
adc
out
adc
adc
pop
ljmp
lea
int3
pop
adc
sbb
xor
lods
sbb
stos
xor
mov
jle
xor
push
push
xchg
test
and
fcom
std
xchg
xor
adc
loope
clc
inc
push
aam
cmpxchg
out
cmp
pop
scas
rcl
mov
inc
movsb
jb
sbb
push
add
jle
push
leave
or
jecxz
mov
pop
addr16
push
shl
sbb
inc
xlat
popa
ret
pop
mov
mov
cs
inc
andl
xor
fnsave
jmp
shlb
loopne
loop
idivl
das
lahf
inc
cmc
fcmovbe
sub
xor
mov
cmp
push
adc
mov
push
jae
cmp
sub
aaa
pushf
fisubl
dec
mov
cwtl
sub
pop
or
mov
and
divl
jp
mov
pop
and
dec
repnz
mov
lret
mov
xchg
or
stc
ret
xchg
fiaddl
mov
pop
sbb
add
push
inc
jle
fdivrs
mov
mov
xor
lods
lret
adc
mov
mov
cmp
stos
int3
test
faddp
mov
jae
dec
inc
addl
jne
sub
adc
scas
and
xorb
cmc
xchg
push
fs
into
sahf
sbb
mov
mov
hlt
mov
add
mov
xor
xor
jl
xchg
jmp
loope
cli
das
rorb
cmp
ret
cli
inc
mov
int
mov
jno
test
iret
or
xchg
enter
sub
adc
and
stos
mov
lcall
aad
mov
push
insl
insl
add
mov
mov
bound
xor
dec
and
cmp
push
sub
mov
lahf
mov
imul
mov
test
dec
and
and
mov
dec
data16
dec
or
aas
das
hlt
and
lds
int3
call
mov
push
adc
dec
mov
rcrl
call
insl
pusha
xchg
cmc
daa
push
sahf
or
inc
xor
sarb
inc
fstpt
fcoms
movsb
insl
adc
clc
push
mov
push
pop
stc
add
pop
pop
mov
mov
pop
pop
add
movsl
xlat
ror
in
xor
sub
xchg
jo
shll
aaa
fcmovnbe
aam
pop
add
pop
cmpsl
cmp
movl
movsl
xor
fsubrs
or
xchg
mov
bound
in
push
push
hlt
cmp
daa
fbstp
inc
insb
pop
test
icebp
push
rclb
popf
add
jl
mov
out
and
clc
jle
into
jge
or
or
mov
sbb
out
sbb
outsl
js
and
sbb
xchg
imul
add
jae
ja
pop
test
imul
incl
mov
dec
and
aaa
shlb
dec
inc
or
adc
cmpsl
push
xor
movb
mov
sbbb
cltd
or
leave
sarb
scas
mov
sbb
fisubrs
lock
ret
sbb
cld
lahf
pop
mov
loop
enter
lahf
out
jo
aaa
push
adc
loopne
jb
fiaddl
sub
div
mov
jne
cld
inc
mov
mov
subl
cmp
lock
dec
test
xchg
arpl
int
aas
mulb
push
or
xchg
rcl
adc
pop
dec
incl
or
stos
inc
add
xchg
push
das
test
ret
fmuls
push
bound
adc
dec
push
and
dec
push
std
xchg
iret
push
ds
push
lds
lds
push
jg,pt
lods
and
mov
add
push
in
xchg
test
cltd
fwait
pop
adc
loopne
mov
inc
jae
adc
and
shl
jns
popf
adc
add
cmpsb
cmc
insb
xor
xchg
inc
xchg
xor
fisubl
cmc
popf
pop
aas
js
adc
fcmovu
or
sbb
aad
add
fnstcw
dec
jp
cs
fisubs
mov
cmp
jae
mov
sub
sbb
mov
jecxz
movsb
sahf
jge
out
stos
shrl
add
xchg
repz
sub
push
and
cmpsl
jp
mov
in
cmc
mov
and
jbe
mov
imul
fnsave
sub
push
out
jnp
mov
orb
jae
mov
fists
jns
iret
sbb
sub
sahf
pusha
data16
test
cmp
into
fcmovb
mov
sbb
into
xchg
and
das
sti
sub
in
aaa
in
aam
mov
and
push
cld
in
pop
jns
inc
adc
inc
lahf
and
fcmovu
ret
fs
sbb
fdivrs
jge
mov
fists
stc
sbb
or
cmpl
jnp
test
in
push
add
dec
js
jnp
loop
arpl
push
mov
out
aad
adc
adc
jnp
sti
dec
dec
cmpsb
adc
mov
and
and
addr16
mov
mov
inc
aad
divl
imul
jo
cmp
sub
leave
insb
ss
imul
push
dec
loopne
gs
and
jp
sub
jne
fisubs
ja
aad
xor
cmp
cmpsb
and
test
sti
inc
jno
incl
cmp
ja
int3
mov
mov
test
test
fiadds
jg
pusha
xchg
push
mov
icebp
or
loopne
lods
jns
sbb
jns
inc
mov
xor
adc
adc
movsb
addb
and
rorl
pop
test
or
dec
dec
xlat
add
pop
in
jl
xor
loopne
lock
stos
push
sbb
mov
outsl
je
cmc
enter
leave
lods
test
sarl
insb
adc
out
cwtl
or
loopne
jns
add
stos
outsl
inc
rorb
fsubrp
fsts
xor
test
outsl
loopne
imul
add
adc
jg
cmpsl
sahf
jl
aam
loope
fildl
lret
pop
or
mov
cs
sub
mov
jno
mov
fdivrl
rorb
dec
inc
jmp
sti
dec
arpl
outsl
xchg
pop
jmp
adcl
scas
mov
mov
imul
mov
and
fidivl
es
icebp
mov
rolb
popa
imul
roll
or
push
es
pop
enter
insb
ds
cmc
popa
pop
into
outsb
mov
in
fwait
notb
sub
or
xor
mov
mov
add
lds
push
xor
mov
and
sbb
mov
jne
xchg
push
jo
ljmp
test
test
xchg
fmuls
mov
pop
xchg
or
iret
dec
jbe
test
hlt
shl
in
and
jns
test
jb
insb
push
movsl
test
push
pop
mov
ret
inc
out
jns
loop
cld
aas
ret
bound
or
fsubrs
inc
push
dec
mov
or
mull
cmp
ja
aam
sub
inc
dec
shll
adc
insb
rolb
push
jle
fidivrs
xlat
test
call
pop
loopne
xor
dec
xlat
xchg
mov
xchg
sti
out
push
call
outsl
arpl
test
call
outsb
ret
fcmovnu
into
stos
mov
cmpsb
or
popa
sarl
scas
scas
mov
fidivrl
lods
mov
mov
enter
sbbl
ljmp
mov
xchg
mov
add
dec
or
scas
hlt
sub
sub
fimull
stc
or
mov
outsl
lea
xor
sbb
cltd
jo
and
insl
stos
movsl
jbe
pushf
sti
xor
mov
into
add
div
push
test
mov
shll
filds
xchg
in
inc
sbb
xor
lds
rcll
add
lret
push
push
outsb
shlb
mov
jns
roll
insl
and
cs
sbb
sbb
pop
jb
or
xchg
inc
mov
mov
cmp
loop
movd
lods
dec
xchg
fucomip
mov
arpl
pop
push
jns
jecxz
imul
bound
lds
out
dec
jg
push
push
and
sbb
shl
fwait
push
xchg
cmp
xlat
popf
push
iret
adc
and
jae
xor
mov
pop
adc
jle
inc
mov
fisttpll
fidivrl
mov
gs
push
push
fldenv
pop
mov
jnp
xor
das
xor
imul
movsb
ret
cmp
dec
addb
pushf
add
or
mov
xchg
add
hlt
dec
aad
into
sub
fnstsw
or
daa
inc
fadd
loop
lahf
xchg
mov
mov
rcll
les
and
sti
xor
repz
xor
pop
add
ret
imull
jecxz
push
aas
insb
add
es
rolb
mov
push
pop
mov
pusha
cltd
add
cmp
mov
cmp
test
push
test
xchg
flds
xchg
add
push
dec
dec
int3
jl
stos
sbbb
jmp
inc
pop
test
pop
daa
push
sbb
lret
push
or
addb
push
cmpsb
inc
fs
dec
inc
add
fcomps
xchg
or
sbb
mov
mov
inc
popa
mov
test
xchg
mov
jge
lock
push
cld
jmp
adc
repnz
ret
sbb
sub
jno
mov
lahf
iret
out
cmp
mov
aaa
outsl
popa
sub
xor
popf
jnp
xchg
test
incb
and
int3
mov
pop
arpl
movsb
dec
xor
stc
std
add
arpl
jno
mov
imul
mov
iret
stos
and
xchg
push
cmp
and
ja
aam
call
cld
push
jo
out
push
xchg
insb
and
xchg
int
jecxz
cwtl
add
jae
into
fisubrl
dec
push
jl
test
mov
fmuls
into
movlps
es
negb
test
out
sti
test
lahf
addb
popf
repz
xor
cmpsl
and
add
pop
add
cmp
xchg
lds
hlt
in
mov
cmp
aad
dec
shl
cltd
sbb
xchg
roll
push
lcall
adc
enter
clc
xor
push
stos
mov
mov
xchg
test
jmp
pop
mov
push
pop
push
sbb
in
out
lods
lock
js
movsl
xor
adc
sbb
testl
mov
bound
sbb
or
aad
jno
test
dec
mov
shlb
mov
mov
jecxz
rcll
nop
mov
jmp
dec
popa
dec
dec
mov
lods
test
dec
outsb
and
fdivl
xor
inc
fcoms
or
jb
les
add
into
fs
aas
scas
mov
sbb
lods
in
aas
xchg
daa
jge
ja
je
xchg
pop
dec
jo
sub
ret
test
leave
jmp
fdivs
push
inc
add
pusha
sbb
nop
es
and
or
mov
sub
push
lret
and
clc
out
jbe
out
inc
lods
cmpsb
sbb
mov
sti
cmc
incb
mov
jae
inc
int3
push
lock
inc
sbb
push
jecxz
in
pop
cltd
dec
push
dec
rcl
test
and
arpl
subb
lcall
jge
pop
int3
sbb
jl
mov
gs
in
subl
inc
cmpl
mov
divl
and
xlat
fistl
and
stos
pushf
mov
adc
xchg
adc
ret
lock
mov
jge
lods
mov
loopne
mov
xchg
push
loope
xor
pop
push
push
lds
test
scas
inc
out
dec
adc
mov
jo
jns
add
cbtw
jge
test
inc
inc
mov
cltd
pusha
xchg
out
pop
push
lret
rolb
shll
push
mov
cwtl
in
jb
dec
stc
test
cmp
sbb
gs
scas
sbb
leave
mov
pop
push
aam
add
hlt
push
dec
popf
mov
dec
and
repnz
andl
mov
adc
and
xchg
push
xor
xchg
in
into
xor
mov
and
std
rcll
jmp
cmp
jg
ret
push
sbb
mov
sbb
inc
dec
fwait
xchg
inc
xlat
jb
clc
lcall
xor
pop
jecxz
sub
lret
outsl
test
es
xor
lret
clc
push
ja
cmpl
loop
or
pop
lods
pop
cmp
and
adc
xchg
xor
fnstsw
outsb
data16
xor
mov
dec
add
popa
mov
xor
add
mov
and
fdivrp
pop
pop
mov
pop
lahf
jmp
and
sbb
mov
lods
push
push
push
cmp
mov
outsb
sti
sbb
fildl
les
sub
sbb
jl
sub
lods
test
jl
inc
add
jb
lret
pushf
xlat
outsb
and
mov
mov
push
adc
mov
insl
pop
adc
ljmp
pop
stos
lods
repnz
daa
jns
jle
xor
arpl
std
stos
call
push
jge
pop
aaa
cmpsl
iret
lcall
inc
add
or
lods
pop
pop
je
dec
popf
jno
jb
jmp
pop
jg
loopne
push
push
scas
cltd
jns
int
sub
movsb
fs
and
jecxz
insl
fs
inc
decb
inc
xor
xchg
lods
pop
pop
dec
push
lods
pop
jns
fs
scas
les
shll
scas
push
mov
or
inc
rcrb
xchg
or
insl
cmp
in
pop
sub
push
testb
push
or
xchg
or
add
in
data16
xchg
addb
js
mov
cmp
shll
xor
inc
outsl
push
adc
cmp
sti
jmp
xor
ret
rcrl
loope
add
and
cmp
iret
outsb
lods
cmp
nop
fnsave
or
push
icebp
loope
jecxz
and
push
das
fmulp
stos
or
push
ret
push
jmp
lock
jnp
pop
pop
mov
sub
jne
clc
jl
out
fadd
fists
push
and
js
mov
test
mov
gs
pop
mov
jae
lcall
xchg
lods
pop
sub
xchg
test
insl
push
mov
sbb
xchg
cmp
jnp
aad
xor
mov
ds
rcrb
out
xchg
pop
out
rorl
mov
lcall
sub
ljmp
push
lahf
jnp
add
jne
inc
xchg
and
xchg
aaa
lret
popa
pop
xchg
or
ss
movsb
imul
mov
cltd
add
dec
adcl
mov
faddp
leave
inc
test
jmp
cli
dec
jecxz
iret
pop
add
sub
mov
pop
push
ja
sbb
test
mov
xor
cwtl
xchg
mov
imull
addb
or
pushf
inc
lds
mov
das
add
inc
stos
cmp
ja
dec
and
jo
dec
test
subl
or
lcall
int
and
loop
outsl
out
ss
sub
cld
xchg
sti
loop
pop
icebp
and
loopne
xchg
push
cmp
jne
lock
cmp
shlb
jg
xchg
push
xchg
arpl
es
popf
repnz
in
or
repnz
scas
das
mov
lret
aas
in
fidivl
pop
lock
cmp
pop
adc
out
icebp
int
pop
push
lahf
sub
fadds
lods
mov
sti
lret
mov
mov
stc
pop
sub
inc
das
add
fists
icebp
ds
je
shll
pop
and
push
sbb
aas
aaa
sbb
inc
divl
mov
in
aaa
jp
xchg
jnp
jae
pop
loopne
push
sar
pop
iret
fidivrs
dec
cmp
pop
sbb
mulb
aad
inc
out
scas
sbb
push
lret
in
pop
cltd
lcall
add
frstor
imul
xor
or
mov
repz
and
sbb
mov
jmp
out
sti
push
nop
xor
xchg
mov
insb
inc
pushl
repz
cld
pop
cmp
jp
and
lcall
dec
fsubrl
jl
sbb
xor
imul
leave
inc
adc
call
cmpsb
xchg
out
mov
sahf
jmp
add
xor
xchg
cmpsl
cld
inc
int
gs
mov
or
sti
iret
clc
mov
sub
leave
iret
imul
scas
cmp
xchg
in
adc
cmp
mov
ds
xor
aaa
mov
je
in
sub
sbbl
rcll
lfs
out
dec
stc
jmp
int3
or
mov
add
push
push
mov
mov
and
andl
movsl
icebp
stos
sub
test
stos
inc
mov
inc
cmc
js
cmc
pop
xchg
fwait
xlat
dec
pop
jle
cmp
jle
pop
xchg
jns
lea
stos
cmp
imul
xchg
sub
jl
or
mov
addb
pop
test
add
ud2
rcrl
rclb
mov
lret
mov
mov
jg
jbe
add
pop
xor
insb
loopne
rcrb
xchg
stos
inc
jle
aad
push
lods
add
cmp
lock
std
pop
jno
iret
int
ljmp
outsl
insb
add
mov
in
jo
jmp
inc
gs
cmp
sbb
fsubr
cmp
lds
jae
xchg
or
sbbl
dec
scas
xchg
mov
xchg
out
jbe
adcb
aaa
jbe
add
jbe
les
adc
xor
mov
adc
xor
or
flds
movsl
push
imul
mov
vpacksswb
pusha
mov
mov
out
jnp
sbb
fwait
pop
pop
iret
rcrl
stc
aam
pop
mov
lcall
xlat
sub
mov
aaa
jb
sbb
stc
inc
dec
ja
sbb
popf
in
pushf
mov
jo
cli
jae
jge
icebp
pop
test
inc
dec
test
sub
out
inc
dec
or
out
mov
sub
bound
movsl
lds
das
add
sub
loop
jle
rcrl
les
push
xor
jecxz
sub
push
ljmp
jo
retw
bound
xchg
mov
xor
or
jbe
int3
dec
mov
mov
push
arpl
adcb
lret
out
push
xor
into
push
pop
pop
cli
xor
or
out
mov
in
hlt
mov
push
and
stos
pusha
dec
hlt
push
jo
int3
xlat
mov
xchg
lret
lods
sub
mov
cltd
push
xorb
out
cmp
mov
xor
ret
sarb
jecxz
or
adc
pusha
push
cs
testb
ja
or
pushl
mov
shll
jb
xchg
dec
imul
fcompl
push
inc
inc
test
test
push
lcall
sbb
pop
inc
push
sbb
adc
mov
mov
dec
xchg
jae
je
icebp
in
decl
sarl
inc
and
insb
popf
mov
mov
xchg
sbb
subb
push
sbb
adc
dec
xor
cmpsb
sub
shlb
push
pop
push
adc
push
fimuls
mov
mov
or
scas
nop
add
add
lea
push
aaa
imul
mov
inc
pushl
cmpsl
sahf
loopne
sub
inc
jne
sub
and
jno
lahf
repz
push
vpmacssdql
pushf
push
mov
aam
add
adc
pusha
push
inc
cld
inc
scas
mov
inc
cli
or
dec
lret
dec
inc
add
xor
jnp
enter
call
scas
bound
cmpl
loope
or
call
fsubs
fildll
adc
add
adc
cmp
mov
repz
inc
lea
push
or
cmpsb
cmp
or
push
or
fnstcw
adc
sbbb
jmp
cmp
jbe
mov
and
sub
mov
mov
xor
xchg
sahf
lds
jbe
in
int
inc
pop
xchg
xchg
les
push
push
fcoml
xchg
movb
mov
xchg
jle
sbb
pop
daa
push
arpl
jge
sub
sub
push
jmp
jo
popa
xchg
fs
push
aaa
mov
inc
jno
adc
dec
idivl
nop
pushf
sbb
and
mov
mov
cli
jp
lods
add
push
imul
push
push
or
cwtl
sahf
popa
call
lea
dec
lea
arpl
adc
jp
scas
add
cld
outsl
shll
bound
and
test
sub
sub
test
shlb
inc
pop
test
cld
jnp
jecxz
insl
mov
bound
cmpsb
pop
data16
neg
push
out
fmull
bound
or
sub
enter
dec
jl
or
arpl
mov
mov
cld
jne
je
repz
sbb
lret
jo,pn
push
cmc
ja
lea
push
fnsave
cwtl
inc
adc
inc
repz
add
lock
adcb
ljmp
mov
and
dec
outsl
push
cmp
test
mov
arpl
insl
mov
lods
popf
cld
lret
jge
cmp
or
aam
pop
cmpsb
dec
out
jle
in
mov
loope
lret
mov
push
or
mov
inc
mov
lea
dec
insb
inc
das
loop
in
add
lret
js
sbb
lcall
imull
or
jmp
imul
notl
mov
jp
sbb
sbb
addl
adc
dec
cmp
insb
lcall
lock
sub
rorb
jnp
jmp
jge
mov
push
movsb
jo
repz
inc
xchg
arpl
mov
mov
xor
mov
and
mov
dec
iret
mov
popa
idivb
es
sub
jmp
xchg
mov
xchg
and
int
xchg
lret
add
and
arpl
xchg
jbe
sbbl
dec
out
mov
jl
adc
lahf
add
mov
mov
pop
iret
dec
out
mov
popa
test
dec
iret
cmp
repnz
jbe
les
push
xor
xor
lret
lods
adc
jecxz
mov
in
sbb
xor
dec
dec
jne
push
imul
pop
xchg
into
cmp
pusha
or
sbb
pop
cwtl
sbb
ljmp
xlat
sub
mov
xchg
or
popa
adc
jo
push
xor
pop
cmpsl
sbb
xor
jecxz
out
or
add
xor
fisubs
aam
aam
xor
xchg
pop
mov
and
fiaddl
push
and
mov
mov
popf
cwtl
in
sahf
scas
std
adc
negb
add
lret
jl
clc
in
in
bound
daa
xchg
xchg
sub
mov
add
or
adc
insl
addr16
lahf
mov
inc
jmp
dec
out
sar
mov
fwait
jnp
sbb
imul
vrcpss
cltd
pop
mov
push
andl
xchg
xor
dec
sbb
popa
leave
jae
insl
call
pop
mov
popf
jbe
repnz
ljmp
mov
shrb
mov
lret
mov
sub
cmpsl
andb
push
push
std
xchg
movsb
and
pop
test
imul
in
mov
repz
lret
inc
js
or
dec
lcall
loopne
loope
addr16
sub
and
fldl
pushf
sbb
sbb
idiv
xlat
mov
xchg
jne
fiaddl
test
push
sbb
div
lret
pop
mov
dec
ret
pop
xchg
jg
mov
movsb
repz
imul
sub
or
pop
xchg
call
std
mov
xchg
mov
hlt
push
sbb
repnz
xor
or
rcll
shl
test
pusha
imulb
sti
cmp
mov
out
or
adc
lahf
adc
daa
call
pushf
fcmovnb
into
inc
jp
mov
pop
adc
lods
inc
mov
inc
push
adc
cs
sbb
rcr
popa
or
inc
xchg
leave
mov
ja
loopne
cli
sbb
push
cs
lret
adc
outsb
rolb
adc
lret
push
fldt
std
and
cmpsl
pushf
xor
shll
mov
mov
ja
xor
cmp
js
popl
call
jmp
icebp
test
int
pop
shll
mov
cmpsb
mov
push
std
call
mov
in
pop
cmpsb
fnstcw
lods
pop
sti
test
jo
clc
inc
outsb
adc
sub
mov
xchg
jns
ds
mov
mov
mov
add
push
pop
repnz
dec
mov
dec
cs
and
pusha
scas
test
sub
lods
lret
pushf
das
scas
int
mov
out
insl
stos
jo
sbb
inc
sbb
lock
sbb
fmuls
insb
or
movsb
ds
repnz
js
mov
dec
shlb
fstpt
jmp
std
push
fdivp
das
pusha
dec
pop
fildl
inc
cld
pop
xlat
mov
sbb
mov
iret
in
mov
clc
int3
lahf
cmp
and
je
pop
mov
cli
jnp
imul
xlat
jecxz
inc
scas
lods
iret
ror
push
inc
adc
stc
mov
mov
dec
inc
sarb
rorl
mov
subl
mov
sarb
inc
add
call
pushf
int3
testb
mov
pop
push
das
xor
pop
jne
jle
pop
test
xor
test
cwtl
es
and
adc
fs
call
adc
pop
and
and
mov
push
rcl
out
inc
push
adc
mov
jmp
push
xor
mov
pop
jl
jne
inc
mov
xchg
push
mov
fistl
push
mov
sbb
sub
inc
sbb
ret
lret
mov
dec
loope
cld
pushf
sub
xchg
dec
mov
mov
mov
jl
jl
addr16
in
movsb
and
jb
mov
dec
enter
inc
pusha
data16
cmp
fildll
sub
add
adc
mov
push
push
or
and
sub
or
aas
xor
fwait
cld
pop
sub
aaa
pop
shll
xchg
push
add
clc
sti
ret
jno
sub
sbb
push
sahf
mov
stc
and
jnp
add
mov
in
push
jmp
mov
dec
sub
xchg
stos
inc
xor
fidivrl
push
mov
rcrl
fsubr
inc
pop
and
mov
add
mov
pop
shrb
out
and
xchg
mov
mov
lahf
pusha
das
sub
daa
xchg
insb
or
add
icebp
dec
fldcw
xchg
jge
lret
mov
mov
outsb
or
jb
mov
jns
inc
or
mull
push
sub
sahf
aaa
adcb
in
sub
hlt
sbb
push
inc
lret
adc
lock
xor
iret
daa
add
jmp
ja
data16
ret
cmp
fcoml
gs
shll
lea
xlat
fs
int
cmp
scas
xchg
daa
insb
add
scas
addr16
or
jns
std
les
fisubrs
sub
cld
fdivrs
sbb
pusha
jbe
mov
testb
lcall
test
fs
pop
sbb
das
pop
out
mov
and
incl
scas
popf
push
scas
cmpsl
mov
nop
aad
xlat
or
ret
xchg
mov
xchg
mov
mov
fcomps
cmc
inc
sti
add
push
xor
xchg
lahf
xchg
cs
aas
ljmp
push
enter
mov
je
and
ds
cmp
into
xchg
pop
adc
add
lods
data16
jns
icebp
dec
pop
push
frstor
sub
xchg
cmp
sbb
test
iret
add
stos
or
lods
xchg
test
pop
add
mov
and
jae
mov
loope
fcomi
movl
arpl
or
mov
inc
imul
xor
enter
mov
loop
xor
popf
sbb
idivl
std
xor
sbb
mov
fwait
jnp
jbe
cmpsb
sti
push
and
mov
movsb
loope
pushf
push
arpl
jge
inc
cmpsb
xchg
fstp
dec
pop
mov
hlt
adc
add
xchg
pop
inc
mov
add
scas
lods
adc
xchg
xor
das
arpl
add
xchg
mov
push
inc
out
push
xchg
sub
or
movl
and
imul
loope
subb
jmp
mov
add
pushf
repnz
sub
das
or
xchg
je
pop
fs
outsb
xchg
in
in
pop
imul
mov
stos
pop
mov
arpl
and
sbb
mov
das
fstpt
fnstcw
and
or
xchg
ret
fcoml
mov
nop
dec
push
into
xchg
xchg
push
scas
aas
cmp
ljmp
pop
ja
ficompl
pop
ja
cmp
mov
mov
lahf
out
add
mov
pop
jae
dec
in
xchg
mov
repz
jb
fdivs
and
cmp
or
and
jmp
xchg
lds
and
cs
dec
adc
pop
add
cmp
je
sti
mov
add
cli
or
pop
loop
orb
xchg
xor
or
sub
roll
jnp
add
xlat
imul
xchg
adc
lock
sbb
adc
enter
pop
out
jno
mov
aad
mov
in
mov
cmp
jge
sub
mov
out
xchg
sbb
out
sub
xchg
lock
lahf
inc
dec
add
or
test
loope
adc
jne
nop
shll
loop
pushf
sub
push
into
jg
cmp
sbb
das
testl
ljmp
or
xor
sbb
jl
mov
cmp
jns
dec
jle
dec
sahf
push
in
clc
cmp
iret
push
mov
cmpsb
mov
dec
mov
and
sti
decl
pop
inc
cmc
mov
mov
ficomps
adcl
in
nop
js
clc
push
call
fisubs
loope
loop
jp
push
jo
or
inc
cmp
cli
mov
aam
cmpsb
out
or
dec
hlt
rorl
mov
bound
out
jae
mov
cmpsb
sbb
imul
push
int3
mov
or
int3
jo
rcrl
pop
xor
movsb
push
lea
xchg
rclb
mov
push
in
push
and
sub
loope
mov
popa
jp
lahf
and
add
cltd
cltd
adc
fcmovu
xchg
mov
mov
inc
xlat
les
push
pop
popa
sub
pop
shrl
es
cmp
add
testb
xchg
dec
xchg
aam
sub
xchg
aad
hlt
mov
inc
adcb
out
jle
inc
xor
ret
jo
mov
test
lret
or
shl
stos
dec
into
loope
xor
xor
hlt
or
mov
add
sbb
pusha
mov
sarl
lahf
stc
subb
cmc
or
xchg
addw
fildl
addl
mov
and
fcomp
xchg
jp
and
jg
cmp
or
fidivs
jmp
call
sub
dec
add
jns
mov
cmp
jmp
pusha
xchg
rolb
xchg
push
movsl
scas
out
js
cmp
js
outsb
lea
lret
add
jp
jge
jmp
mov
mov
gs
in
or
aam
and
xchg
loopne
cwtl
test
mov
lret
mov
inc
push
stos
mov
clts
pop
mov
xor
aad
addr16
hlt
dec
and
and
int
xlat
cmp
jmp
in
in
rcr
clc
mov
inc
arpl
pushf
jne
add
pop
jecxz
adc
push
sar
sub
adc
lret
push
pop
popa
pusha
cli
pop
add
lcall
pop
aam
cmp
and
push
fldenv
mov
pushf
shlb
sahf
add
and
fsubrl
pop
pop
test
sub
cltd
test
and
ret
cmp
xchg
mov
jp
pop
push
fimuls
push
outsb
cmc
push
dec
adc
dec
jae
xchg
mov
lock
sarb
xor
or
pop
push
fisttps
int3
sarl
pop
enter
push
gs
jo
cmp
int3
in
outsl
mov
sahf
faddl
mov
cltd
pop
ds
sti
push
fistpll
pop
sub
fmul
xchg
jne
inc
cmc
mov
imul
lret
hlt
mov
test
in
lock
jno
lahf
cwtl
daa
jecxz
divb
in
cltd
lcall
ds
fnstenv
push
cltd
lods
into
arpl
std
rorl
cmp
loop
xchg
jp
add
dec
inc
push
movsl
or
push
fwait
or
xchg
cmpsb
sbb
add
cmp
jl
jg
xchg
push
mov
fistpl
push
loope
jns
jle
lods
sub
mov
or
mov
sti
mov
dec
pop
xor
xchg
push
mov
popf
xchg
clc
sub
add
pushf
adc
jmp
sbb
iret
cmp
add
sti
jcxz
push
clc
movsl
movsl
sub
aad
jl
pop
shll
adc
mov
pop
cmpsl
push
fsubs
stos
ficompl
xchg
inc
xchg
push
sbb
sarb
xchg
in
mov
jae
bound
sbb
imul
fdivrs
xor
xchg
mov
mov
push
sub
dec
popf
fiadds
push
inc
xchg
bound
or
stos
icebp
jge
lret
jecxz
cmpsb
pop
dec
xchg
sub
jl
cmp
insb
sbb
movsb
rcl
inc
ret
or
xchg
cmp
dec
inc
call
push
or
sbb
mov
arpl
andb
imul
pop
mov
aam
pop
or
shrl
aad
xor
imul
cs
add
cmp
fwait
pop
pop
out
pop
lods
and
mov
fidivrl
pop
fs
sub
sbb
mov
arpl
or
inc
stos
flds
jg
idivl
ret
std
aaa
jo
in
ss
stos
jnp
xor
bnd
or
jne
and
ret
push
pop
out
aaa
inc
sar
mov
push
imul
push
sbb
push
and
mov
or
notl
pop
pop
shll
pushf
int3
fcompl
cs
push
pop
cmp
and
nop
scas
fdivrs
adc
call
pop
data16
xchg
sbb
bound
loopne
imul
jl
xchg
int3
daa
jl
jg
rclb
pop
sbb
loop
xchg
shr
mov
test
push
mov
xorl
jecxz
mov
push
push
push
xchg
xor
test
dec
cmp
lds
dec
insb
jge
divb
lods
xor
sbb
mov
sbb
adc
gs
ds
pop
dec
xor
test
mov
sahf
mov
les
push
xor
and
fists
push
pop
pop
out
cmpsl
ds
mov
push
jo
dec
cmp
in
out
mov
cmc
testb
mov
mov
pop
jmp
arpl
stc
shll
bound
insb
or
cmpsl
sub
sbb
pop
andl
adc
lock
mov
ljmp
lea
push
orb
out
mov
nop
cmp
in
loope
cmp
inc
sub
adc
xchg
xchg
mov
mov
fimull
imul
fadds
lds
push
loop
mov
out
sbb
neg
inc
dec
enter
shll
xchg
sbb
movsl
fisttps
inc
sti
add
popa
xchg
ds
les
dec
jne
dec
sbb
loop
call
push
inc
mov
mov
jns
das
out
xchg
fcmovbe
xor
mov
lret
mov
mov
imul
sbbb
xor
jo
fnstsw
movsl
mov
notl
lret
lds
jns
xchg
into
sub
roll
imul
mov
add
push
imul
pushf
dec
mov
repz
stos
jg
and
and
sub
add
ret
adc
sti
or
xchg
aad
add
repz
es
jecxz
pop
and
jb
sbb
mov
mov
sti
repnz
rorl
je
out
pop
lcall
and
les
repz
fisubl
ret
loopne
pushf
sbb
mov
push
sbb
dec
addr16
notl
cli
push
stos
push
ret
inc
mov
cmpsb
lea
xchg
test
into
jp
jecxz
scas
sbb
jne
lret
sbb
mov
pop
and
jb
push
fnstcw
jbe
lods
outsb
jge
mov
std
adc
push
lret
inc
add
idivl
fs
xlat
and
jno
lcall
and
mov
popa
adc
cli
sbb
cmp
test
mov
fsubs
sub
push
add
mov
mov
jge
pop
mov
aaa
add
mov
inc
mov
addr16
xor
xchg
lret
mov
vprotb
adc
and
arpl
cmc
push
adc
aaa
ljmp
bound
xchg
rcrl
mov
sti
cmp
nop
push
dec
icebp
mov
or
push
icebp
push
mov
cmp
push
popf
jecxz
test
out
and
cmp
dec
mov
popa
in
sub
ret
in
mov
dec
pop
xchg
dec
cmpsl
xor
ja
jns
pop
js
jg
jmp
or
mov
inc
add
int
movsl
adc
push
dec
mov
jo
mov
sub
jo
sbb
jle
loope
fsubrs
push
pop
pop
xor
or
int3
mov
imul
or
mov
adc
mov
xchg
add
in
sbb
mov
jne
aad
hlt
jb
sub
cli
push
sbb
iret
inc
jo
ljmp
daa
add
aas
jno
push
jbe
jle
fnstenv
test
sahf
lock
popa
mov
nop
mov
popa
dec
mov
sub
pop
psubsb
nop
jle
cmp
cmp
mov
adcb
aam
shlb
xchg
in
imul
sbb
jmp
fisubs
movsb
push
ret
push
scas
mov
in
repz
loopne
adc
or
push
cmp
pop
push
ds
sub
and
mov
je
scas
ficoms
sbb
loopne
sbb
mov
pop
test
add
inc
sub
and
test
or
sahf
jl
scas
mov
rcrl
imul
out
int
pop
lods
cmc
mov
jge
ret
push
jne
pop
rcl
aaa
mov
sbb
xor
data16
nop
test
cmc
mov
push
cmp
cwtl
adc
inc
cwtl
and
cmp
ficomps
loope
cwtl
in
cmp
and
mov
mov
test
add
aaa
lret
add
imul
aam
xor
jno
fcompl
test
decb
imul
notl
loop
inc
or
flds
cmp
jp
jecxz
jne
rcl
jg
adc
dec
in
adc
jo
js
popa
ss
lea
mov
add
cli
mov
lods
push
sbbl
lret
mov
cwtl
or
adcl
stos
mov
jmp
cmp
cld
jg
pop
insl
sti
sub
mov
mov
das
cld
stos
push
outsb
mov
mov
rcrb
pop
mov
and
push
icebp
sub
and
cwtl
test
xchg
popf
stc
sub
push
dec
pop
pop
pop
and
out
shll
aaa
jae
pop
xchg
jns
fadd
sbb
cmpsl
js
cmpsl
mov
xchg
or
decl
ljmp
cmp
mov
push
xchg
in
pop
int3
push
fstl
repnz
movsl
test
inc
mov
fdivl
lea
lods
push
popa
insb
je
psllq
xchg
aam
cmpsb
fiaddl
jns
jne
pushf
pop
mov
push
jge
add
movsb
xor
adc
xlat
mov
push
leave
pusha
fs
jmp
dec
sub
add
push
or
pop
cmp
xlat
mov
iret
mov
lret
push
push
into
dec
fnstenv
ds
lds
or
sub
or
push
inc
mulb
cmpsb
lods
divl
movsb
fidivs
mov
iret
dec
test
gs
mov
push
push
jecxz
and
sub
mov
jmp
xchg
pop
outsb
cmp
sub
adc
xchg
sbb
das
pop
movsl
adc
and
int
imul
dec
cmp
addr16
fildll
imul
ja
dec
ret
lods
lods
mov
dec
sub
dec
jne
jb
in
pushf
mov
dec
push
cli
mov
sub
popf
xchg
jge
or
jp
scas
mov
mov
jb
ret
xor
aad
out
scas
push
stos
cmp
sarb
test
pop
sub
into
adc
and
inc
add
xchg
jecxz
inc
xchg
ljmp
data16
dec
inc
sub
ret
mov
mov
insb
cmp
mov
inc
xchg
fcomi
or
ret
xchg
rcll
das
sbbb
xchg
mov
mov
push
sub
push
fs
push
negl
pop
js
mov
cmp
in
repnz
jne
bound
test
add
fsubrs
lahf
and
xor
gs
test
popa
stc
cld
int3
inc
sub
adc
cmpsl
push
ljmp
mov
clc
aad
or
mov
popa
mov
adc
push
xchg
dec
dec
outsl
stc
add
add
push
dec
ljmp
mov
fiaddl
jl
push
stc
push
xchg
sbb
jno
insb
jl
in
cmp
mov
fistl
test
inc
mov
dec
dec
cmp
adcl
add
cwtl
dec
arpl
xchg
je
loopne
sbb
pop
cltd
divb
jge
das
out
push
shlb
in
dec
adc
xor
scas
adc
xor
lcall
and
cmp
cs
mov
cmpsl
xchg
sub
cmp
cmp
and
jbe
jge
rdpmc
inc
test
std
rclb
and
xchg
jp
leave
pop
loop
sub
andl
dec
inc
push
push
push
cmp
pusha
fmul
sub
push
xor
and
and
or
repnz
cmp
add
mov
mov
es
sub
insb
jnp
jae
mov
mov
dec
jae
sarb
push
mov
aad
andl
push
lods
mov
rolb
pop
inc
in
out
outsb
fistpll
or
mov
fldl
adc
cmp
stos
sbb
pop
inc
or
xor
dec
js
idivb
ljmp
fwait
jge
pop
sbb
mov
lods
push
or
pusha
jo
mov
push
add
das
mov
imul
test
cmove
inc
mov
jecxz
cmovnp
jecxz
in
sub
mov
mov
insb
sbb
add
sub
addr16
cmp
fisubs
scas
dec
jne
mov
stos
shl
xchg
dec
inc
add
mov
sub
add
lahf
jae
cmp
pop
mov
cmpsb
add
into
add
std
ret
cwtl
stos
pusha
pop
lds
xor
cmp
cld
jl
add
and
pminsw
mov
sbbb
mov
xor
sbb
test
rorl
jbe
je
orps
mov
subb
ds
inc
xor
iret
xor
adc
rcl
sub
push
test
push
xchg
and
sub
rclb
cmp
cmp
ja
add
shll
mov
jle
mov
pushf
mov
gs
loopne
jne
and
es
data16
or
add
mov
mov
fcoml
sub
aaa
jno
cli
enter
jg
and
add
cmp
mov
dec
jno
test
cwtl
stc
mov
outsb
dec
pop
add
insb
pop
pop
push
mov
push
mov
test
add
jl
test
repz
pop
adc
enter
out
bound
in
mov
clc
jnp
fs
subb
repz
lret
xchg
adc
flds
daa
mov
stos
xor
popa
xchg
adc
xchg
cmc
cmp
data16
cli
gs
nop
das
inc
adcb
sahf
stos
push
xor
lods
pop
cmp
imul
or
inc
fstps
sbb
dec
lahf
jmp
xor
mov
imul
test
mov
cmp
imul
test
cmp
inc
xorb
pop
out
mov
adc
icebp
push
notl
dec
ljmp
jbe
mov
out
mov
dec
adc
and
je
mov
jecxz
jmp
lds
push
adc
mov
jns
out
inc
xor
clc
jae
xor
mov
test
jmp
test
sub
cmpsb
ret
xor
sbb
in
aam
push
out
hlt
xchg
mov
je
lcall
xor
cmp
loop
inc
cs
iret
lds
pop
mov
aam
inc
xchg
data16
call
jb
aaa
fisttps
fs
push
pop
jb
mov
in
lret
pop
movsl
mov
outsb
out
into
lock
jge
mov
mov
jno
out
push
or
sub
push
imul
out
js
xor
mov
sbb
leave
xor
xchg
xchg
scas
jp
int
and
jmp
ret
call
enter
aam
lcall
push
mov
scas
jo
popf
fsubs
inc
in
dec
outsl
cmp
icebp
icebp
arpl
shlb
xor
test
and
push
movsl
outsl
pop
aaa
daa
cmpsl
and
cmp
xor
xchg
cmp
adc
aaa
mov
mov
pop
inc
xchg
sbb
hlt
add
pop
sti
jae
add
daa
jmp
pop
mov
add
mov
xchg
dec
add
jb
out
pop
test
adc
rcl
outsl
push
or
imul
nop
out
clc
outsl
adc
push
loopne
xchg
decb
ja
jp
push
jecxz
lahf
and
arpl
mov
cmp
adc
mov
ret
fs
leave
stc
inc
add
leave
jne
pop
fsubrl
insl
rcrl
mov
sub
jge
jne
addr16
xchg
pop
or
xchg
push
loop
cmp
cmp
xor
arpl
mov
adc
clc
and
das
into
insl
out
cmp
lret
mov
ffree
dec
test
ja
lahf
aad
out
xchg
xchg
aam
sbb
add
dec
mov
gs
nop
int
pusha
call
add
aam
cld
pusha
mov
xor
xchg
jl
push
je
addr16
imul
sahf
push
imul
fwait
mov
nop
int3
daa
mov
lds
idivl
loope
mov
fldenv
std
int3
inc
imul
xchg
sub
pop
insb
jmp
add
push
loop
sbb
xchg
and
add
mov
out
add
inc
pushf
test
xor
mov
lret
adc
mov
jecxz
push
dec
jbe
shll
mov
movsb
jno
mov
sbb
cmpl
loope
xor
and
stos
xor
add
xor
mov
inc
add
sbb
test
cs
iret
sarb
aas
mov
jno
mov
and
mov
add
pop
pop
lret
cmp
leave
les
jecxz
bound
mov
pop
inc
push
stos
pop
inc
adc
icebp
add
bound
rcll
adc
sbb
int3
adc
in
ret
in
cmp
cmp
incb
jno
adc
xor
gs
mov
push
xchg
or
cmp
cli
add
fimull
jnp
ret
jge
pop
fidivrs
xchg
stc
mov
push
sbb
sub
sub
test
or
std
mov
pop
test
xor
and
pushf
daa
lock
xchg
data16
mov
fwait
repz
movaps
mov
inc
call
cmp
in
sub
lods
xor
mov
lds
fidivrs
inc
in
cmp
mov
mov
loopne
out
dec
sbbl
arpl
negl
aad
in
xchg
mov
xor
in
lcall
push
imul
test
xor
movsl
or
sub
push
push
xor
mov
and
dec
push
xchg
mov
cli
mov
inc
fstps
jp
jg
popf
cmpsb
and
into
sub
push
ret
ret
adc
xchg
shrl
mov
push
add
push
daa
xor
sbb
imul
xchg
in
loope
addl
out
popa
insb
cmp
test
nop
aam
sub
pushf
xchg
fs
pop
xchg
sahf
orl
and
ljmp
repnz
pop
shl
push
adc
jmp
pop
cmp
lcall
sub
into
arpl
jmp
inc
scas
jnp
cmp
pushf
call
push
dec
ss
dec
inc
loop
in
popa
fsts
lret
add
clc
add
lods
xchg
mov
imul
add
sbb
bound
push
ret
ret
ds
sbb
mov
mov
inc
push
inc
out
xchg
fwait
scas
pop
out
movsb
lcall
cmp
mov
xor
decb
mov
xchg
mov
push
lret
add
out
sbb
mov
push
fcompl
popf
or
mov
mov
lret
xchg
xor
or
sbb
push
sub
push
and
nop
sbb
push
mulb
rolb
stc
cmp
xchg
ret
pusha
pop
xchg
and
shrl
das
cmp
sahf
dec
and
sub
nop
rcrb
fwait
hlt
jl
fidivrl
pusha
mov
mov
inc
or
mov
aaa
push
xchg
fldl
std
shlb
popa
out
cmpsb
mov
xchg
sub
mov
add
stos
lret
adc
pop
bound
adc
sub
or
xchg
mov
js
jb
xor
mov
adc
test
or
xchg
cltd
cmpsb
daa
mov
shll
sub
addr16
bound
cmpsb
shll
jge
inc
cld
cmp
and
mov
shll
jmp
out
mov
sahf
insl
xor
shlb
rorb
pushf
or
dec
push
jb
stos
or
lcall
aam
mov
lock
sub
inc
in
mov
push
mov
xchg
push
xchg
fwait
cld
xlat
ljmp
scas
scas
std
ss
and
or
mov
js
push
or
push
js
test
xchg
mulb
pop
inc
scas
movsl
add
nop
mov
sub
jno
mov
pop
sub
adc
loopne
fisubl
mov
push
aas
shll
push
sahf
inc
in
sbb
cmc
out
add
jne
pusha
sarb
jno
xchg
pusha
aaa
add
fimull
fcmove
mov
mov
sbb
adc
lock
adc
mov
aad
movsb
or
mov
dec
push
push
sbb
icebp
clc
in
and
cwtl
push
mov
js
gs
fistpll
out
aaa
push
ret
sub
je
xor
xchg
mov
cmp
lock
ljmp
inc
icebp
xchg
orb
pop
lret
fisubs
lret
inc
in
ret
dec
fidivrl
cmp
mov
fisttpl
cld
cmp
push
pop
pop
or
pop
mov
jbe
fxch
stos
mov
dec
test
insb
shl
and
jmp
sub
jl
iret
jne
sub
movsb
xlat
sub
jo
mov
scas
int3
test
xor
xchg
popf
stos
add
add
jb
jo
jno
adc
or
lret
or
dec
hlt
sbb
icebp
cmpsb
and
cmp
or
adc
pop
ss
add
and
cmp
inc
cmc
sub
fyl2x
das
xchg
adc
sarl
pop
xchg
jno
out
dec
sub
enter
sub
rcrl
setnp
xchg
xchg
sub
in
call
inc
mov
pop
xor
ret
shl
xor
pop
fs
jmp
out
adc
xor
push
inc
xlat
nop
mov
xor
sub
jle
pop
out
pop
lahf
ljmp
addb
cmpsb
sbb
mov
push
mov
pop
dec
and
xlat
cmpsb
repnz
aaa
push
cmpsl
pop
fs
sti
xchg
add
rclb
fwait
jp
add
dec
subb
jg
loope
pop
adc
xchg
stc
leave
insl
adc
jecxz
out
inc
cli
mov
std
fisubrs
sbb
push
negl
add
adc
and
sub
pop
mov
inc
cltd
mul
test
out
roll
imul
popa
mov
cmp
mov
pop
cmp
clc
fdivrs
xchg
fcoml
pop
sub
fisubrl
mov
dec
popa
jge
mov
dec
mov
je
outsl
mov
sbb
out
imul
scas
inc
shll
js
gs
in
shll
mov
sbb
mov
in
xchg
stos
in
add
cmp
or
pop
xlat
cmp
or
mov
or
rcrb
push
imul
cltd
lock
addr16
cltd
loopne
in
ficomps
cmp
adc
cmc
gs
mov
dec
int3
mov
inc
ljmp
sti
mov
or
sub
mov
jne
pop
xchg
das
or
loop
insl
push
inc
lods
and
movsb
inc
push
push
adc
cmp
inc
add
xchg
dec
adc
imul
loope
push
sbb
dec
mov
ljmp
cli
stos
and
pusha
pushf
jo
xchg
xor
xor
or
mov
sahf
ss
or
dec
std
and
inc
cs
stos
xchg
les
or
movsb
push
push
and
jb
dec
mov
xor
mov
addr16
cmp
fdivr
or
mov
sbb
test
cmp
repnz
fwait
pop
mov
push
add
mov
mov
jbe
adc
add
inc
pop
inc
enter
fdivs
dec
jg
dec
mov
out
or
jp
mov
fs
andb
adc
push
in
jne
ret
push
push
dec
iret
and
mov
push
adc
adc
adc
xor
jle
sbb
notb
addb
push
sbb
sbb
xchg
in
xor
jecxz
or
push
mov
rclb
js
mov
and
cwtl
out
fld1
addb
outsb
xchg
cmp
mov
rcrb
lret
stos
test
fmul
push
vmwrite
lret
mov
scas
mov
cli
or
mov
shrb
pop
idiv
std
in
insl
dec
dec
mov
fildl
cmp
dec
xchg
dec
fstpt
dec
dec
and
inc
push
pop
cmp
push
lret
imul
jne
daa
push
jno
test
pusha
push
adcb
cmp
push
mov
dec
mov
jne
push
rcrb
push
mov
add
cmp
mov
cmp
movsl
and
je
push
ljmp
xor
or
in
ja
push
xlat
scas
outsl
scas
pop
inc
or
inc
gs
add
testb
aad
in
pop
fisubl
or
std
aaa
fimull
xchg
lcall
xchg
pop
shrl
sbb
and
in
xchg
mov
mov
loop
cmp
jno
xor
mov
xchg
nop
mov
lret
pop
sub
js
cmp
popf
pop
ljmp
jl
dec
fildll
cmp
xor
xorb
call
mov
inc
imul
out
mov
mov
or
or
sbb
inc
lods
xchg
cwtl
push
inc
dec
mov
in
lods
adc
mov
lret
cmp
sti
mov
pushf
jmp
arpl
fcomp
or
call
mov
pushf
scas
call
xchg
dec
insb
cmpl
pop
dec
or
scas
sti
mov
addl
lcall
andb
in
jge
lea
push
clc
push
or
cmp
les
jg
jbe
into
mov
push
xchg
xchg
lods
jns
cs
mov
stos
lcall
jno
push
pop
stos
sbbb
mov
lods
in
es
mov
mov
mov
fsubr
imul
insl
sub
or
in
imul
fsubl
fcmovbe
push
ret
fwait
gs
cmp
and
jns
dec
mov
sarb
sbb
aas
jns
add
fidivrs
in
shll
mov
jno
pop
push
mov
lret
addl
dec
int3
mov
xor
mov
jle
subb
sub
push
outsl
dec
ds
popa
mov
push
aam
out
xchg
adcl
sbb
add
mov
or
hlt
loop
movsl
mov
adc
xchg
incl
lock
hlt
es
int3
xor
ss
dec
ret
in
loop
sub
je
out
and
jle
fdivs
out
clc
jo
stos
cs
inc
int
incb
cmp
xchg
jnp
jns
jne
lds
pop
lock
pop
mov
daa
addb
mov
scas
pslld
adc
lea
or
pushf
cmp
jnp
mov
fbld
or
adcb
cmpb
lea
xor
adc
repnz
aaa
outsl
icebp
jns
daa
adc
ret
adc
int3
xor
mov
pushf
mov
jo
ret
jg
lock
cli
or
dec
testl
sahf
pop
dec
fsubrs
mov
pop
popf
nop
js
nop
stc
or
jne
xchg
sub
mov
scas
lret
and
cmpsl
mov
push
out
decb
pop
adcl
mov
inc
mulb
out
lcall
insl
arpl
mov
pop
shlb
and
cmp
dec
pop
popa
data16
add
int
cmp
pop
int
insl
ficoms
fcmove
ss
push
pop
stc
pop
movsb
push
in
or
inc
das
dec
inc
test
ja
rclb
cs
cld
pop
xchg
out
stc
popf
in
mov
les
stos
cmp
test
ljmp
adc
fidivrl
mov
and
idivl
mov
repnz
adc
mov
xchg
and
jno
and
lret
and
cltd
xor
add
cmp
push
mov
cmp
xorb
cmp
mov
xchg
dec
cwtl
in
lea
sub
out
mov
lcall
iret
arpl
push
add
scas
xorl
das
sub
push
fldenv
bound
xor
in
fldt
push
jp
leave
pop
xor
dec
dec
push
inc
sub
lcall
enter
dec
sbb
push
mov
bound
daa
pop
int3
adcl
push
lret
mov
lods
test
cmp
inc
fiaddl
ljmp
test
popa
dec
mov
mov
mov
sbb
out
fs
fdivrl
or
jb
rorl
lgs
inc
lods
mov
popf
jmp
mov
aad
jbe
sub
mov
mov
mov
cmp
enter
pop
lahf
je
scas
mov
mov
cwtl
arpl
pop
jmp
stos
pop
sub
sbb
jp
test
aaa
xchg
cmp
xchg
out
add
jecxz
xorl
lea
mov
jns
andl
push
cmp
mov
sub
mov
lcall
fidivrl
in
cmpsl
pop
pop
fwait
cmp
pushf
xor
push
jmp
push
inc
add
xchg
xchg
xor
rclb
or
mov
ja
ljmp
add
inc
in
fsubrl
divb
mov
xor
and
andb
push
test
outsb
xor
and
dec
cld
push
stos
add
pop
xor
je
inc
pop
mov
mov
rorl
add
daa
cli
and
es
push
fcoms
dec
mov
out
icebp
push
pop
xchg
call
insl
xchg
inc
cmp
jecxz
mov
sub
mov
and
mov
xlat
and
sarl
dec
and
in
pop
xchg
enter
int3
cmp
inc
lods
lea
cmp
in
xchg
repz
or
adc
sbb
mov
mov
adc
or
test
repz
add
pop
jnp
xchg
sub
int3
xchg
ret
scas
outsb
jae
mov
dec
add
mov
lret
xor
xchg
cmp
pop
jp
pop
insl
es
pop
je
lea
jmp
roll
xor
xchg
int3
subb
ret
adc
mov
mov
pxor
sub
push
dec
add
sti
test
outsl
rolb
rolb
scas
pushf
mov
jp
sbb
adcl
int
add
out
out
into
jecxz
adc
jb
pop
jecxz
xchg
lods
cwtl
xchg
jp
sub
testb
xor
push
jmp
pop
push
xlat
rcll
roll
xchg
out
inc
pop
int
ret
pop
nop
sti
xor
inc
shlw
in
mov
aam
mov
xor
mov
mov
imul
sub
add
mov
jbe
jecxz
push
jne
xor
jo
iret
movsl
sbb
cmpsb
leave
push
mov
outsl
imul
pop
dec
daa
loopne
push
andb
stc
pushf
loopne
ljmp
sar
or
add
ret
mov
int3
lret
inc
lret
subb
das
outsb
jmp
out
inc
outsl
mov
push
stos
fsts
dec
aaa
jge,pt
jno
sbb
or
test
dec
movsl
nop
pop
mov
scas
push
mov
in
lret
fwait
xchg
xchg
jg
dec
adc
jecxz
xchg
xchg
pop
ss
loop
rolb
loope
mov
sub
adc
lock
dec
sbb
xchg
imul
rcrb
loop
and
iret
movsb
inc
in
xchg
bound
push
mov
pop
out
sbb
xchg
cld
xchg
add
fwait
test
loope
push
cmp
addr16
outsb
mov
push
mov
lret
xchg
adc
sar
mov
int
adc
mov
stos
mov
pop
ds
cltd
pop
call
jb
lret
negb
pop
and
jg
test
scas
jge
dec
ds
xor
cmpb
inc
aad
mov
mov
stos
rclb
out
xchg
in
cmpsb
push
xchg
xchg
imul
sbbl
mov
add
and
into
jne
cmpsb
nop
jbe
or
test
mov
repnz
mov
cmp
mov
xlat
outsl
fstl
jo
or
push
pop
es
cmp
mov
sbb
aad
stos
xor
xor
push
in
cmp
andnpd
push
mov
imul
divb
mov
enter
int
pusha
cmp
cmpsb
and
sub
mov
xlat
rcll
sbbl
push
lea
arpl
stos
lret
mov
lcall
clc
push
rorl
bound
inc
or
or
or
movsb
cli
cs
mov
push
movsl
mov
mov
cmp
imul
fsts
in
cmp
jmp
addr16
mov
jo
push
rclb
jle
cmp
cwtl
mov
mov
scas
mov
rorl
sub
mov
cld
adc
add
pop
push
shrb
lahf
push
ss
setne
dec
sti
andl
mov
sub
jmp
sbbb
aaa
popa
addr16
stos
jl
cmc
aas
jae
cli
inc
arpl
shlb
je
gs
sub
add
inc
ds
xlat
add
sbb
mov
imul
jecxz
or
pop
out
pop
fs
push
stos
ljmp
aam
out
dec
inc
add
les
das
dec
adcb
std
mov
test
loop
sbb
lock
ja
fildl
lcall
cld
xor
cmc
popa
xor
in
pop
stos
test
in
mov
dec
call
push
lods
cltd
or
xchg
subl
pop
sbb
dec
push
jno
xorb
xchg
fadd
fs
fidivs
cmp
push
arpl
mov
pop
loopne
rcll
clc
jecxz
cmp
fmul
mov
mov
bound
outsl
cmp
in
imul
clc
ds
xchg
dec
pop
ret
cmp
mov
sbb
and
rorl
sub
mov
pop
movsl
jl
test
movsb
ror
mov
out
pop
inc
cli
leave
jno
adc
jne
or
hlt
push
pop
xchg
aaa
shll
push
or
leave
cld
into
cmp
mov
dec
pop
and
pop
add
cltd
outsb
mov
cmp
pop
push
sbb
dec
sub
rclb
insl
xor
lcall
test
addb
mov
loop
mov
xchg
jl
icebp
lds
dec
pop
inc
in
mov
out
mov
adc
xchg
push
mov
test
and
ds
shll
dec
lock
xor
pusha
jbe
mov
cmpsb
imull
mov
lock
mov
and
cmp
das
fsubl
cmp
xor
sbb
xor
mov
cmp
addr16
dec
pop
xor
test
cmpsb
mov
or
mov
pop
jno
and
test
dec
jne
idiv
clc
jne
lods
cmp
xchg
pop
xchg
mov
sub
cmp
push
pusha
lcall
test
fisubrs
enter
pusha
jb
lret
fs
cmp
cmp
js
adc
xchg
dec
and
push
xchg
sub
push
sub
in
add
in
and
outsl
jno,pn
fdiv
xor
adc
add
repnz
jo
mov
inc
inc
in
movsl
lea
jg
mov
mov
les
pop
mov
push
mov
hlt
nop
add
mov
sahf
cmp
sahf
or
sbb
leave
and
lock
arpl
and
rorl
jge
cmp
popf
sbb
sarb
ret
sub
inc
sub
loopne
dec
mov
test
into
adc
pop
sub
cmpsb
jl
stos
std
push
fwait
imul
xlat
push
jp
fidivs
ret
ja
cmpsl
subb
adc
jge,pn
ljmp
or
pushf
mov
loop
mov
and
insb
nop
add
pop
std
mov
scas
dec
jp
test
orb
sahf
jl
push
cmp
and
fisubrs
dec
dec
add
push
cmp
lds
js
dec
loopne
jnp
rcl
stos
pop
dec
inc
mov
fisttps
pushf
mov
sbb
jecxz
rcrl
cmp
insb
ljmp
scas
les
push
in
lret
orb
stc
jl
insb
sbb
jo
pop
inc
call
and
insl
icebp
jge
sbb
sbb
lret
pop
xchg
pop
jge
jbe
fstps
outsl
int
sbb
inc
cltd
jne
push
les
push
pop
aaa
stos
lcall
xchg
mov
pop
ret
mov
xorb
std
xchg
push
sahf
push
lods
mov
aam
xor
mov
dec
aam
aaa
into
fistpll
jbe
jbe
add
and
lret
add
pop
dec
shll
test
repz
xchg
mov
push
icebp
lahf
or
shrb
push
ja
leave
int
and
stos
outsb
call
push
sahf
pop
aad
aaa
adc
adc
jns
pop
pop
add
pop
pop
stos
jecxz
fadd
punpcklwd
fmul
mov
popa
lods
mov
jb
and
xchg
dec
xchg
or
sbb
mov
insb
push
pop
lods
and
sub
adc
sbb
mov
cld
cmc
push
xchg
xlat
mov
cmpsl
sbb
movsb
add
add
addr16
repnz
out
push
and
inc
aas
shlb
lea
sub
call
in
aaa
inc
push
cmp
mov
call
hlt
scas
inc
repnz
nop
mov
mov
rolb
push
adc
cmp
sub
mov
xor
mov
mov
or
xchg
test
cmpb
gs
push
shlb
ss
xchg
xor
cmpsb
sbb
dec
mov
xchg
das
add
add
outsb
pop
nop
jg
cli
cmp
testl
and
sbb
fsub
sahf
sub
inc
imul
and
fcmovb
add
movl
mov
push
jbe
divb
push
iret
xlat
mov
xor
xchg
xor
sbb
ds
fwait
sbbl
out
sub
daa
mov
mov
je
push
jge
aad
jecxz
mov
aas
es
outsl
cmp
nop
leave
inc
xchg
jae
pusha
adc
aad
rcll
arpl
insb
int3
push
repnz
inc
mov
lret
test
jno
rep
inc
cmp
mov
rolb
xchg
dec
adc
inc
push
call
icebp
test
insl
cmp
shrb
lods
adc
pop
cmp
pop
lcall
cld
insb
aas
icebp
cmp
imul
pop
xor
xor
cmp
pop
inc
leave
leave
test
mov
mov
mov
xchg
or
cltd
cld
xor
mov
data16
stos
sub
fmuls
mov
sbb
adc
inc
sub
fcomps
jae
sub
add
push
fsub
fidivrs
js
in
mov
xor
jbe
lea
pop
mov
xchg
inc
cmp
inc
rclb
mov
pop
add
xchg
sbb
daa
xor
cwtl
outsb
mov
inc
out
sbb
jg
repnz
and
push
divl
repz
pop
fcoms
in
push
icebp
in
mov
push
fwait
mov
pop
movsb
ficompl
pop
sbb
and
inc
push
mov
pop
movb
rorl
cmc
mov
add
leave
outsb
imul
mov
fnsave
xor
push
test
lock
mov
arpl
shll
stos
aaa
call
mov
push
cmp
xor
repnz
mov
cmpsb
js
in
frstor
mov
inc
push
sbb
mov
cmp
pop
xchg
and
push
sbb
mov
and
push
add
inc
sbb
jae
adc
test
ja
ljmp
loop
hlt
in
loopne
fistpll
in
pop
shll
aas
mov
clc
mov
mov
cwtl
xchg
fs
fisubs
jno
xchg
cwtl
inc
mov
pop
pop
pushf
sub
add
add
xchg
jbe
pop
repz
inc
loope
lds
imul
xchg
imul
cmp
sub
pushf
mov
or
jnp
cwtl
xchg
inc
xor
clc
mov
or
mov
mov
je
hlt
xchg
xor
iret
out
pushf
or
mov
mov
ret
mov
cmp
push
xor
scas
cltd
xor
mov
mov
test
push
lret
mov
mov
sbb
movsl
out
movsb
notb
push
sub
rolb
xchg
mov
lock
adc
pop
mov
icebp
sbb
pusha
jne
add
sarb
ret
call
outsl
dec
push
enter
pop
test
cwtl
stc
sub
inc
repz
incl
cmp
jmp
jl
lods
insl
add
add
adc
mov
mov
push
xchg
lock
js
push
jle
jo
and
ds
aas
pop
gs
and
and
in
xor
ret
je
cmc
mov
adc
cli
and
push
jne
xchg
pop
adc
push
mov
mov
fwait
pop
nop
jo
xor
fs
fimuls
bnd
pop
xchg
out
outsl
js
push
and
test
sbb
jae
out
out
pop
xchg
cmp
jae
adc
out
sbb
adcl
popf
jle
dec
or
in
pop
out
and
cli
ja
add
jbe
arpl
inc
add
pop
mov
movsl
sbb
das
lret
sbb
mov
mov
jo
les
dec
sbb
jp
out
inc
mov
arpl
or
jns
mov
aaa
mov
mov
ficoms
insl
jle
movl
imul
pop
popf
outsl
or
cli
mov
and
rclb
jns
fwait
ljmp
hlt
push
push
add
fisubl
orl
leave
ja
jns
mov
enter
daa
lret
shl
repz
inc
adc
mov
cli
xchg
fcmovb
sub
and
pop
xor
sub
mov
mov
mov
in
adc
pop
mov
or
pop
xor
lcall
xlat
jns
mov
cmp
jb
cmc
test
mov
xchg
scas
cmp
xor
jmp
sub
push
sub
idivl
lods
dec
aad
mov
nop
ljmp
sar
das
pop
ret
scas
jnp
jge
pop
pusha
and
sahf
mov
xchg
pop
insb
xchg
adc
sub
loope
aad
lds
jle
in
or
sahf
pop
jns
mov
mov
rcrl
sub
aad
lret
test
xchg
lods
out
push
xor
cli
xor
cli
adc
inc
rolb
mov
rol
scas
imul
sbb
cmc
push
repnz
xchg
and
jns
sbb
jg
cmp
push
and
pop
push
jmp
ret
mov
test
das
andb
gs
xchg
sahf
test
outsl
call
mov
fsub
popf
repnz
inc
and
mov
cs
cwtl
or
jne
xchg
sbb
call
fildll
lds
inc
aas
push
jae
leave
jns
out
push
pop
lods
pop
outsl
arpl
cwtl
addr16
cmp
icebp
fsubs
xchg
aam
mov
xchg
shll
push
xor
mov
js
jmp
pop
adc
ss
andb
and
sub
cmp
xchg
nop
xor
dec
inc
cmp
jp
fs
aas
mov
dec
pop
inc
out
testl
jmp
mov
push
imul
or
push
mov
cmp
mov
mov
ret
xchg
pop
test
mov
imul
ljmp
push
sbb
shrl
cmp
aad
fildll
push
fxch
ljmp
cmp
push
mov
mov
das
mov
fcmove
mov
fadds
mov
int
aaa
jnp
movsl
xorb
mov
sbb
fstl
jl,pn
inc
test
lcall
pop
shll
dec
in
cmc
or
ljmp
idivl
jl
add
je
sbbl
icebp
loop
fwait
popf
sbb
lds
sahf
loopne
addr16
jbe
and
ljmp
or
popf
sub
adc
pop
cmp
gs
movsl
leave
or
shlb
push
jne
jmp
data16
aam
or
iret
add
rorl
pusha
mov
jmp
ja
shrb
inc
sub
jmp
xlat
mov
into
xlat
iret
dec
ss
adc
and
jb
push
fsts
int
xor
mov
jns
lcall
pusha
in
mov
cmpsb
lcall
lds
cli
jg
mov
xchg
dec
test
and
addb
fisubrl
icebp
arpl
lahf
and
xchg
xchg
push
push
shlb
jle
mov
sbb
fcmovb
ds
sub
inc
sub
rclb
mull
pop
pop
cmpb
or
je
and
inc
xchg
ret
sub
xchg
xor
xor
push
cmp
fistps
sub
push
inc
mov
dec
xor
jp
les
fistpl
add
aas
les
mov
xor
xor
push
fsubp
sbb
pop
xchg
cmp
mov
push
mov
fyl2x
dec
mov
ljmp
int
sbb
cmp
icebp
xor
das
adc
mov
mov
rcrb
push
lods
jge
into
insl
popf
enter
sub
out
dec
push
out
xor
stos
movaps
jb
lds
inc
in
lret
dec
or
mov
aam
sub
mov
std
in
repnz
xchg
pop
xchg
mov
adc
cs
or
subl
mov
mov
mov
xor
mov
dec
in
mov
ret
jnp
jmp
pop
cld
xorl
cli
pop
mov
ret
cmpsb
call
jo
lcall
sahf
imull
dec
test
inc
adc
and
push
xor
and
mov
sbb
sub
pushl
dec
xchg
cmc
jb
ss
xor
pop
lahf
pop
sub
dec
jnp
add
out
into
xchg
xchg
add
adc
xchg
pop
and
fldcw
push
push
sbb
inc
nop
mov
or
mov
nop
scas
mov
icebp
mov
sub
or
test
xchg
lock
push
fmulp
jno
loop
push
inc
adc
xchg
cmp
jg
mov
xor
and
xchg
mov
push
xchg
add
and
in
jp
stos
cmpsb
adc
test
and
mov
cltd
sub
mov
cmp
mov
inc
or
jg
aad
cmp
xchg
lock
movsl
addr16
adc
cld
xor
call
outsb
push
lret
cmp
call
inc
rolb
xchg
mov
je
in
jnp
loop
and
add
adc
add
push
ror
pushf
inc
scas
dec
aaa
xor
movsl
jmp
sub
and
jae
clc
mov
inc
sub
cmc
push
push
sub
out
inc
enter
jge
add
cmp
dec
mov
jnp
je
mov
lcall
add
test
push
cmp
outsl
scas
mov
push
rclb
leave
fcmove
lock
shlb
and
push
sub
push
and
repnz
add
sub
popa
add
cmp
ret
cmp
ljmp
mov
arpl
in
in
sbb
cmpsb
or
aaa
jnp
out
inc
popa
sub
push
sbb
mov
mov
iret
cmp
cmp
inc
dec
sub
pop
mov
push
mov
fcmovbe
sbb
into
pop
adc
pushf
jnp
inc
popa
mov
mov
adc
adc
pop
mov
mov
adcb
and
inc
jg
enter
test
js
sub
xor
repnz
xlat
mov
pusha
and
aaa
icebp
into
and
jns
clc
mov
imul
and
iret
jo
dec
test
mov
inc
mov
xchg
inc
dec
pop
inc
xor
insb
repnz
pop
cmp
xor
mov
popf
scas
out
divl
imul
mov
in
push
fisttps
xlat
push
mov
push
aad
push
pop
jle
cld
add
data16
ljmp
iret
xor
arpl
outsl
and
leave
pop
push
dec
pop
lret
mov
xchg
inc
fdivs
test
das
push
int3
cmpsb
lods
mov
xchg
pop
inc
inc
inc
in
cmp
test
mov
in
mov
sbb
jne
xor
pop
cld
shll
and
mov
mov
push
inc
cmp
pop
dec
imul
dec
cmp
mov
test
jle
cltd
sub
or
cmpsb
cwtl
popf
insl
imul
loop
add
aaa
movsb
xchg
jne
pop
dec
add
pop
leave
mov
nop
lahf
sbb
inc
int
ds
sbb
jge
or
cltd
popf
xchg
xor
imul
cmp
daa
mov
mov
sub
popa
sub
repz
pop
lds
xor
fwait
add
repnz
in
in
dec
scas
xchg
iret
or
jnp
jmp
movsl
pop
adc
push
call
nop
xchg
or
and
pop
mov
repz
push
xchg
repnz
leave
mov
cmp
pushfw
jbe
mov
inc
push
mov
gs
and
and
push
ret
mov
mov
push
dec
xchg
lock
sbb
push
jne
and
cmc
pusha
sub
or
repz
mov
mov
addb
test
aaa
out
shrl
lcall
cmp
out
mov
inc
push
jp
pop
testl
mov
loopne
push
mov
jae
imul
mov
stos
xchg
mov
daa
inc
cmp
rcll
js
push
es
es
faddl
outsb
daa
inc
and
stos
imul
mov
pop
dec
cmpsb
push
push
mov
inc
push
lret
prefetch
lds
mov
daa
xorl
mov
mov
dec
push
cmp
imul
adc
outsb
dec
jl
push
lds
iret
hlt
mov
push
cmp
sbb
mov
xor
jl
je
mov
leave
ret
and
mov
sub
loope
in
mov
sub
xchg
mov
or
out
outsl
add
and
mov
dec
xchg
add
clc
cmp
jmp
lahf
jp
inc
mov
mov
stc
cmp
sub
xor
or
repnz
sub
ss
mov
cbtw
arpl
adc
xor
stos
shrb
add
pop
movsb
dec
mov
scas
jg
ja
cs
jnp
aaa
or
jge
enter
pop
cltd
pop
pop
insl
insb
adc
mov
arpl
jmp
inc
cwtl
aam
dec
bound
fimull
xor
movsl
aad
cmp
cs
dec
or
sbb
stos
xchg
loop
jb
push
movsl
inc
rolb
and
je
adc
mov
movsb
sbb
xchg
sub
ja
scas
out
push
out
leave
mov
lahf
mov
sbbb
fdivl
arpl
outsl
pop
dec
and
push
imul
push
mov
xchg
outsb
out
sub
ss
int3
mov
shll
addr16
fldcw
xchg
leave
mov
jnp
mov
pop
xchg
and
ja
sar
xchg
pop
dec
loope
push
xorw
fnsave
mov
add
fdivrl
mov
add
sbb
push
and
repz
out
outsb
cld
push
dec
cmpsb
outsb
stos
jbe
jb
int3
mov
jb
pusha
dec
xor
jo
push
pop
sbb
pop
pop
xor
ja
arpl
xor
jge
pshufw
xchg
cmp
xor
sbb
dec
test
push
adc
or
adc
fistpl
inc
and
sub
xor
or
mov
cmp
repnz
flds
mov
pop
jno
mov
test
mov
xor
mov
rolb
mov
cli
inc
push
cmp
pop
jmp
aas
in
pop
mov
mov
ret
dec
and
mov
jmp
les
fwait
mov
cld
mov
mov
out
push
lods
xchg
mul
jno
stc
repnz
out
mov
pop
mov
dec
jne
out
push
ret
ret
repz
or
sahf
xchg
addl
popa
inc
add
xchg
xchg
sub
dec
lods
or
stc
mov
in
outsb
movsb
jle
js
jb
jle
addr16
or
push
lds
ja
clc
xchg
mov
xlat
div
lret
into
mov
enter
jmp
mov
es
xchg
jne
out
lods
mov
pop
out
mov
jmp
xor
add
push
push
mov
out
sub
icebp
jo
cmp
add
ljmp
subb
xor
cld
cmp
jmp
jns
inc
ficomps
mov
cld
cmp
insb
arpl
sub
test
inc
stos
notl
add
sbb
mov
fsubrp
push
mov
xlat
pop
push
jbe
pop
ljmp
aas
incl
mov
shrl
loopw
sbb
jno
mov
push
push
sbb
push
xor
pop
sar
jnp
cmp
int3
flds
ja
mov
fdiv
pop
cs
dec
cmp
lret
push
mov
cmp
insb
cmp
cltd
add
push
imul
js
sub
shrl
ffree
and
repnz
mov
push
lock
xchg
decb
jge
inc
insl
xor
xor
mov
lret
hlt
sub
sbb
push
out
gs
sbb
mov
mov
jnp
or
mov
jno
add
pop
pop
lods
lcall
sbb
mov
out
inc
inc
adc
in
push
jne
and
push
xchg
cmpsl
sbb
adc
mov
xchg
push
pop
and
test
leave
pop
xlat
scas
mull
pop
enter
mov
test
pop
call
and
emms
sbb
push
lahf
fcoml
cmp
aas
dec
xor
pop
enter
cmpl
int
aas
testb
fidivl
movsb
cmp
fsubl
test
xchg
or
fidivrs
jg
mov
lods
cmp
enter
mov
bound
pushf
mov
inc
in
jno
lcall
movsb
lret
adc
xchg
jnp
xchg
rcll
jp
iret
add
pop
jge
mov
aad
push
bsf
cmp
adc
push
or
sub
mov
sbb
rol
fistpll
ja
je
jp
mov
add
in
roll
pop
insb
lods
das
loopne
dec
movsl
stc
dec
mov
sub
loope
cmp
hlt
add
icebp
lods
mov
popf
mov
push
dec
fstpt
mov
jbe
jl
clc
out
and
sbb
dec
hlt
shll
andl
adc
jl
and
add
leave
push
pop
out
cs
xor
xchg
xchg
iret
dec
jo
mov
add
cmpl
fcmovnbe
cmp
ficoml
cltd
sbb
fcoml
scas
mov
push
and
push
add
jp
mov
sbb
push
pop
cmpsb
or
inc
in
ret
in
mov
mov
push
xor
jp
jo
mov
adc
je
mov
out
repnz
mov
scas
stos
mov
jge
movsl
stc
fsubp
cli
push
cli
test
pop
stos
cmp
daa
aaa
inc
cmp
push
vphadduwd
stos
push
mov
inc
out
push
dec
xchg
jb
insb
jmp
dec
adc
mov
cmp
sbb
mov
push
pushf
loopne
xchg
push
jmp
push
rclb
sub
sub
and
dec
mov
jl
adc
push
pushf
arpl
sbb
inc
xor
lock
sbb
or
loop
fwait
mov
xchg
popa
jl
push
pusha
xchg
cmc
push
xor
mov
pop
pop
jbe
fstpl
dec
inc
xchg
aaa
insl
jmp
lock
jp
int3
out
cs
int
cli
in
push
mov
sub
sub
and
xchg
mov
repz
sub
enter
scas
arpl
shr
jge
mov
aad
or
adcl
in
sub
jecxz
adc
repnz
xor
adc
cmp
add
fstpt
inc
sub
lcall
and
dec
enter
es
lcall
or
lods
cmpsb
xor
pop
push
dec
and
popl
and
push
std
mov
adc
mov
add
ret
lcall
mov
adc
sbb
mov
adcb
add
aas
scas
lods
and
push
rcll
ljmp
adc
scas
cmp
jno
daa
sbb
jno
xchg
add
add
call
fnsave
xor
cs
mov
lds
subl
lcall
push
adc
or
mov
push
inc
jae
shll
fcomps
mov
outsb
cmp
pop
and
add
cmp
in
outsb
sahf
lea
in
ficoml
std
jns
fmuls
test
je
imul
pop
mov
dec
repnz
fmuls
mov
inc
cs
test
cmp
add
jl
mov
pop
add
and
add
push
cmp
pushf
in
xlat
mov
mov
scas
pop
adc
mov
mov
loopne
jge
movsl
xchg
iret
add
fs
movsl
push
popf
maxps
xor
ss
adc
hlt
adc
dec
dec
jg
pop
push
cmp
outsl
mov
mov
repz
out
cmc
insl
lock
aas
or
js
arpl
int3
mov
push
aas
loope
xor
and
mov
ret
adc
nop
repz
repnz
repnz
stos
jecxz
mov
push
rolb
aaa
sbb
ret
incl
jne
jns
mov
popw
stos
movsl
test
and
xchg
sbb
loope
retw
adc
ret
pop
mov
jle
rorl
cmp
fcompl
xchg
gs
mov
iret
mov
dec
mov
stos
push
jae
add
es
push
sub
ja
imul
in
xor
sbb
ja
out
fimull
or
insb
add
popf
pop
push
sbb
data16
sbb
aas
int
paddsb
sbb
sbb
fildl
cmp
in
inc
enter
pop
call
inc
cld
ret
mov
repnz
adc
mov
pushf
add
push
xchg
sub
lret
ds
movsl
xchg
push
lcall
stc
pushf
xlat
push
xor
sti
jbe
clc
subb
jmp
repnz
test
add
cmc
out
lds
fsubl
or
fwait
xor
in
pushf
into
repnz
aaa
push
pop
xchg
movl
movsb
aas
push
dec
mov
push
stos
xorl
inc
mov
xchg
cltd
mov
cli
lahf
xor
loop
icebp
mov
pop
lods
in
add
mov
mov
insb
dec
mov
mov
lods
movsb
and
mov
popf
dec
cmp
icebp
pop
or
mov
gs
mov
cmp
movsb
inc
push
jge
in
call
loopne
int3
add
ds
das
mov
sub
push
fisttpl
js
adc
adc
into
fs
xchg
push
aad
push
sti
mov
mov
dec
aaa
loopne
xchg
es
aaa
mov
leave
mov
jnp
push
pop
jmp
jle
in
fisubrs
mov
xchg
push
jne
jp
adc
movsl
mov
sti
push
cs
push
mov
adc
cmp
mov
xchg
std
xchg
pop
repz
cmp
inc
fwait
movsl
negl
pop
adc
mov
hlt
cmp
add
sbb
mov
fcomps
scas
mov
push
pop
lret
lret
push
pusha
cwtl
das
and
add
ja
xor
lahf
cli
xor
fisttpll
push
pop
add
xor
stos
mov
addr16
lods
or
mull
mov
popf
out
jns
pop
mov
in
mov
jo
test
or
mov
dec
dec
rcrb
loope
shll
fcmove
or
in
xchg
push
jne
call
dec
and
fmull
arpl
cmp
mov
inc
lods
sbb
add
mov
dec
ljmp
pusha
xlat
jmp
inc
push
sub
and
testb
and
mov
mulb
loope
adc
hlt
cs
mov
popf
inc
sub
push
sub
nop
xchg
or
push
leave
adc
repnz
shr
and
out
jge
test
add
shl
jne
xor
inc
jp
add
pop
daa
cmp
rclb
movsl
scas
inc
inc
popa
leave
xor
mov
lods
mov
add
sub
mov
sbb
enter
scas
pop
imul
jge
jmp
xor
loope
outsl
repz
jmp
js
aam
lret
sahf
inc
fs
lret
vmovss
pop
subw
mov
xchg
xchg
lahf
cli
js
pop
pop
adc
notb
mov
push
push
jbe
and
adc
ficoms
je
cltd
cs
push
daa
ret
jl
add
adc
mov
test
fadds
pop
mov
sub
mov
negl
and
xchg
xorb
sub
xchg
subps
cwtl
adc
mov
arpl
out
pop
out
bound
mov
bound
cs
dec
js
or
shrl
sbb
cmp
popf
adc
mov
lods
xor
movl
jl
subb
push
jp
mov
mov
out
push
pop
sub
cmp
ja
rcrl
clc
push
adc
cmp
push
aad
or
jge
js
lock
mov
sbbb
test
dec
in
jo
xor
jns
xchg
adc
les
cmp
adc
pop
xor
jle
mov
mov
lock
stos
mov
jno
roll
sbb
lock
test
jecxz
std
add
inc
cmp
dec
push
adc
mov
pop
out
and
pop
sub
inc
mov
daa
sub
fisttpl
sbb
stc
adc
push
scas
dec
into
jg
repnz
cs
jno
jae
mov
mov
nop
xchg
mov
icebp
lcall
or
hlt
leave
rorl
cld
notb
imul
arpl
xor
ror
mov
jae
inc
sbb
or
ss
jecxz
mov
cmp
ficompl
mov
setns
inc
jecxz
addr16
je
addr16
pop
loope
fadds
dec
cld
scas
outsl
pop
add
push
push
add
add
dec
xor
ds
ja
scas
xchg
pop
orl
pop
sub
jns
push
add
mov
inc
xchg
mov
jne
test
or
stos
pop
jmp
ja
or
xchg
fisttpll
imull
cmpsb
and
ds
mov
cltd
pop
cmp
mov
sub
mov
sub
sahf
enter
inc
xchg
add
into
add
xchg
repnz
or
dec
jecxz
cmp
lret
and
sub
push
dec
dec
sti
popa
dec
or
int3
sub
test
pop
sbb
aam
cs
data16
sub
ja
xor
sub
dec
jge
sub
repnz
shrb
sub
and
aam
inc
cmpb
sub
test
lods
jnp
and
js
adcb
pop
aaa
xchg
inc
or
lret
pop
jg
call
xchg
fucomp
cld
dec
sub
adc
in
ret
dec
sub
dec
or
adc
pop
ror
and
rcrl
xor
mov
jbe
test
add
sub
jns
fs
xchg
iret
sbb
push
out
add
xchg
push
arpl
andl
dec
adc
pop
outsl
add
pop
loopne
loopne
fldl
roll
dec
adc
lods
in
inc
rolb
frstor
pop
testl
iret
lret
rcrl
pop
mov
in
mov
mov
imul
fucomi
xchg
pop
push
fldt
sbb
pop
adc
jae
mov
in
adc
ss
stos
push
sbb
push
iret
cmp
loop
aaa
xor
fimuls
mov
adc
jo
xor
pop
ljmp
push
inc
xchg
mov
in
cmpsb
hlt
rcrb
dec
rcl
data16
ret
dec
aas
jbe
cs
jns
jne
xor
cmp
dec
mov
lock
jle
or
push
pushf
gs
jmp
inc
mov
lcall
xchg
sub
mov
sbb
lock
das
arpl
arpl
sbb
sbb
inc
dec
insb
mov
je
pop
or
fnsave
repnz
fcomi
jp
pop
adc
inc
mov
pop
dec
xchg
jmp
bound
outsl
pushf
call
aas
add
das
jo
insl
sub
lock
pusha
leave
sub
jae
popa
push
imul
ret
mov
shlb
dec
shl
cmc
push
xlat
stos
dec
repnz
fistpll
sub
out
mov
mov
mull
push
mov
out
fbstp
gs
or
stos
fistpll
sbb
jno
ficompl
arpl
lods
xor
mov
iret
push
cltd
or
ds
jne
xchg
xor
mov
fdivs
shlb
add
repz
and
lods
xor
cltd
or
fstp
dec
add
in
cwtl
add
lods
repz
add
out
std
dec
filds
sub
xor
loop
cwtl
push
je,pn
aas
daa
rcll
test
mov
jbe
test
sub
out
data16
iret
cmp
outsb
pop
jmp
mov
int3
cld
lods
xorb
fildll
rcrb
stos
adc
outsb
call
in
mov
leave
jg
sbb
jecxz
lahf
js
xor
rcr
out
ror
mov
stc
inc
ljmp
shll
mov
or
test
xchg
aaa
call
lcall
sub
insl
jecxz
ffree
sbb
gs
xchg
fwait
dec
jo
popl
mov
sub
pop
gs
out
xchg
shrl
insb
mov
push
fisubs
rorl
dec
loop
cmp
jae
into
adc
push
mov
xor
mov
ffreep
test
or
or
mov
lea
mov
flds
std
mov
imul
add
inc
cmpsl
stc
call
leave
out
mov
or
out
call
sub
leave
clc
std
cmp
int
adc
fs
cmp
fmull
pop
int3
mov
ret
imul
fstps
or
cmp
xor
lods
andl
push
inc
sti
in
xchg
movsb
shlb
fwait
pop
addr16
test
dec
dec
ljmp
lcall
addr16
cltd
nop
notl
xchg
inc
jmp
icebp
add
mov
adc
out
movsl
xchg
sbb
xor
dec
push
pop
or
xchg
icebp
xchg
pop
sub
sbb
jle
sbb
cld
add
shl
xlat
push
pop
pop
xchg
enter
fldt
xchg
adc
xchg
dec
pop
out
mov
mov
outsb
test
lret
flds
ja
cmp
ret
popf
or
or
lock
push
shrl
inc
mov
push
push
jecxz
sub
xor
insb
lock
adc
imull
mov
jl
scas
mov
jmp
fcomp
adc
or
gs
loopne
push
xor
pop
incl
inc
ficoms
in
add
fistps
shll
aaa
dec
pop
rcr
mov
insl
or
mov
fwait
sti
sbb
stc
mov
sbb
dec
sahf
aas
sarb
mov
xor
sub
lods
inc
js
mov
mov
scas
pop
pushf
xor
or
je
sbb
push
inc
movsl
xor
fisttpll
insl
xchg
and
mov
push
jno
in
xlat
mov
and
sub
lcall
inc
and
std
pop
jge
int3
or
dec
sub
lahf
jl
incb
test
jle
push
pop
dec
xchg
aas
shr
xchg
les
and
roll
add
out
daa
aam
jae
sub
pushf
mov
mov
insb
xchg
popa
lret
inc
inc
push
aaa
adc
xlat
jmp
aaa
loope
mov
fs
adc
enter
mov
shlb
arpl
mov
popa
pop
stos
pushf
sbb
cld
jns
mov
jns
xchg
jl
xchg
mov
mov
xchg
and
divb
xchg
xchg
xchg
mov
enter
lcall
andb
jp
xchg
xchg
push
daa
add
fwait
dec
jne
repz
in
xor
test
dec
push
jo
push
out
int3
inc
iret
and
push
test
sub
mov
in
adc
outsl
mov
jl
push
sar
pop
stc
sub
jg
mov
cmpsl
shll
xchg
das
sti
or
jne
jge
aaa
mov
cmpsb
inc
mov
pop
push
imul
fisubrs
fcomps
sub
jbe
pop
int3
sub
add
dec
int
cmp
dec
adcb
inc
lods
add
shrl
addr16
std
sahf
adc
xchg
fbstp
mov
xchg
inc
mov
push
xor
mov
enter
push
stos
pop
mov
mov
mov
mov
sar
mov
shll
jnp
imul
shll
call
into
adc
shrb
adc
adc
addr16
mov
adc
inc
lahf
out
add
xchg
sahf
cltd
mov
ja
pusha
imul
xchg
jno
shll
ror
adcl
in
repnz
cli
lods
mov
sub
pop
add
mov
mov
xchg
lret
jns
add
xor
xchg
pop
mov
pop
xor
lea
int
cmp
or
rclb
inc
push
push
ss
add
loop
mov
cmpsl
ds
jo
in
lret
dec
cmp
dec
repnz
movb
mov
test
or
mov
pop
test
fsub
inc
lock
mov
fisubl
cltd
push
xor
mov
cs
scas
icebp
inc
mov
pop
rcrb
es
cmpsb
add
push
syscall
xlat
push
or
or
pop
scas
pop
lea
loopne
xchg
cmpsb
insb
add
mov
test
inc
stc
lahf
mov
push
cmpl
clc
cmpsl
xchg
mov
adc
hlt
and
insb
ja
ljmp
push
xchg
add
test
dec
mov
xor
mov
jne
inc
and
mov
sub
out
pop
xor
stos
xor
sbb
fbstp
iret
fwait
mov
ret
dec
xchg
push
pop
xor
jae
jae
cmovl
and
lea
add
jo
ja
nop
push
or
xor
imul
dec
cmpsb
dec
out
push
add
mov
jbe
add
xchg
fstpl
jmp
sub
int
sbb
aad
imul
mov
fstps
out
sar
out
sbb
cs
jne
sub
out
push
jle
fsubrs
inc
pop
leave
aas
pusha
lahf
adc
mov
inc
pop
das
mov
inc
add
imul
mov
inc
sbb
std
shll
cli
aas
cltd
add
sbb
mov
xor
fiaddl
nop
mov
push
iret
lret
jmp
popf
sahf
mov
inc
mov
push
mov
test
jno
cld
or
and
shlb
call
or
cmc
scas
ds
fisubrs
sar
xor
fdivrs
fwait
imul
lods
pop
adc
and
add
into
mov
into
pop
iret
lods
adc
sub
jno
mov
jecxz
popf
adc
je
xchg
xchg
cmpsb
jbe
inc
adc
dec
mov
xchg
mov
adc
popa
or
lret
fwait
push
jbe
pop
bound
mov
ljmp
sub
lods
push
inc
cmp
xor
lea
and
mov
scas
xchg
push
xchg
jbe
push
adc
xor
cmp
jbe
lret
in
andl
cld
sbb
jp
pusha
adc
pop
pop
xchg
cmp
adc
fisttpl
or
cltd
in
adcl
rclb
mov
mov
sub
cmc
mov
lahf
lahf
and
add
mov
subb
nop
and
pop
js
ret
adc
sub
cmp
cs
cmpsb
int3
pop
pop
and
and
nop
stos
shrb
sbb
inc
or
push
loope
clc
or
ret
push
bound
xchg
and
ret
aad
xchg
dec
or
aas
cmp
cmp
add
mov
jecxz
dec
xchg
rcr
ljmp
jno
cmp
adc
fmull
mov
inc
inc
dec
inc
lret
mulb
mov
push
test
inc
sub
mov
icebp
sahf
idiv
dec
adc
in
push
pusha
mov
hlt
fistl
lret
mov
jl
inc
or
adc
adc
cmp
ljmp
xor
cmp
jg
mov
not
pop
sub
mov
jo
cld
lcall
repnz
xlat
inc
test
inc
ficompl
pop
arpl
adc
push
pop
dec
inc
xchg
and
fistl
push
pop
js
imul
push
sbb
inc
enter
xchg
stos
xchg
push
push
mov
add
sbb
aas
inc
int
and
std
inc
inc
mov
cmp
mov
pop
ja
pop
xorl
js
daa
sarl
cmp
inc
inc
sub
mov
sbb
sbb
movsl
outsb
cmp
jb
jge
mov
fstp
push
jnp
repz
cmp
jle
leave
in
inc
loope
test
ja
or
inc
mov
scas
jecxz
cmp
and
dec
mov
ret
mov
aam
daa
cmpsl
idivl
cmpsl
sbb
lods
ss
outsl
aas
adc
mov
mov
lret
lods
pop
ljmp
mov
mov
insb
cs
stc
mov
inc
mov
sbb
jmp
push
mov
scas
mov
jnp
je
cmp
xchg
lds
mov
xor
add
lock
pop
mov
xchg
push
jo
test
aam
inc
std
mov
inc
pop
sar
xchg
fidivrl
pop
xchg
push
das
jae
shlb
sub
mov
js
stos
imul
nop
in
mov
mov
inc
push
xlat
insb
enter
xor
or
aad
and
sub
jle
add
leave
add
lds
dec
andb
add
adc
test
mov
pop
xor
pop
adc
or
stos
shll
divb
fwait
mov
hlt
push
push
mov
mov
ret
addr16
wbinvd
or
pusha
dec
fwait
mov
ret
lahf
lds
cmp
aas
enter
xchg
xor
popa
jmp
mov
sbb
mov
sbb
stos
fldcw
push
and
mov
mov
jno
jbe
inc
add
push
adc
lret
sbb
enter
jmp
xchg
xchg
icebp
push
or
out
test
aad
lods
je
notb
or
pop
jp
sbb
jno
fdivs
xor
popa
out
cmpsl
fwait
and
scas
mov
xchg
aas
popf
loopne
bound
inc
xor
aaa
stc
mov
jle
sub
rorl
ljmp
inc
ja
push
das
inc
fstpt
fiadds
mov
push
test
mov
je
and
and
dec
fucomip
lret
rorb
lret
cmpb
ljmp
fcomip
mov
fcoms
out
test
jbe
imul
push
or
cld
add
sbb
notl
sbb
and
sub
aas
ret
outsl
cmpsl
scas
pop
fs
xor
movsb
xorl
sbb
std
mov
dec
mov
mov
mov
addl
jg
push
insb
jecxz
dec
roll
mov
or
out
ds
outsb
xor
clc
sbb
xor
flds
lret
mov
cmpb
xor
lds
cwtl
sahf
imul
cmc
in
mov
and
mov
or
push
xor
pop
repnz
push
cmp
pop
insb
or
push
lahf
clc
mov
and
int3
cmp
or
and
repnz
fldenv
daa
stos
xor
xchg
movsl
loop
xchg
and
jbe
ret
clc
enter
inc
repz
push
imull
ds
mov
pop
ss
pushf
mov
pop
push
push
push
popf
mov
mov
cmp
and
fcoms
ljmp
mov
pusha
je
xchg
lods
cltd
pop
sub
adc
pop
mov
out
jle
lods
ret
jle
pop
mov
add
fistl
popa
enter
leave
repz
or
jmp
push
jns
fmul
add
pop
repnz
dec
cs
cmp
mov
push
mov
add
lods
mov
push
mov
mov
imul
iret
push
call
lods
stc
dec
cmpsb
aas
or
stos
lds
ja
push
popl
loope
test
and
lcall
mov
imul
mov
mov
push
sbb
inc
cmc
imul
or
data16
sqrtps
leave
mov
sub
scas
ss
xchg
imul
adc
jp
adc
shlb
ret
enter
lods
dec
bound
int3
xor
or
imul
sub
imul
aas
mov
call
aas
inc
test
es
cmp
xchg
bound
lahf
cmp
xor
or
call
roll
rcr
mov
iret
iret
call
add
cwtl
fstps
sub
push
push
repnz
push
push
cmc
mov
push
pop
call
dec
mov
push
pop
stos
jmp
or
bound
divl
xchg
add
outsb
or
push
xor
mov
aaa
in
jbe
inc
popa
jae
cmc
sti
xor
xchg
xor
gs
jnp
dec
xor
or
jns
cmp
push
pushf
addb
pop
dec
push
lods
int3
test
mov
fisubs
push
out
rcrl
jle
mov
adc
ret
cmp
ds
jns
cmp
or
daa
pushf
gs
in
push
shr
mov
iret
daa
adc
mov
insl
jg
unpckhps
xchg
xor
pop
int
push
xlat
rorb
add
add
jge
subl
stos
xor
int
cmc
push
xchg
popa
ffreep
ret
nop
aam
lds
jno
pop
xchg
dec
xlat
ficoms
push
push
sbb
mov
sti
adc
insl
sub
stos
lock
fcompl
cmpsb
inc
dec
xchg
pop
les
rcll
add
push
sub
divb
mov
repnz
inc
aaa
fdivs
adc
daa
dec
ret
xchg
sti
aam
ret
in
and
movsb
dec
lea
pop
scas
sbb
sahf
faddp
and
sarl
sbb
movsl
nop
scas
ja
mov
push
ret
jns
push
jae
addl
cmpsl
jnp
cmp
mov
cmp
dec
inc
stos
cmpsb
lods
push
mov
pop
dec
sbb
adc
stos
mov
dec
cmp
mov
fadd
rcrb
inc
push
push
xlat
jns
jecxz
mov
cmp
lret
pop
aam
mov
xchg
sbb
sbb
xchg
pushf
push
push
mov
notb
fisubl
pop
dec
movsl
and
lret
mov
xor
lcall
or
cwtl
add
jle
loop
xchg
add
cli
add
sahf
sbb
imull
mov
lcall
inc
mov
test
lods
sub
add
int
stc
adc
aas
ret
dec
xchg
push
xchg
inc
or
mov
iret
jnp
inc
cwtl
scas
push
inc
int3
cwtl
mov
lret
popl
shll
cltd
xchg
sub
push
jg
dec
jne
idivb
jbe
jge
adc
prefetch
or
adc
pop
push
or
int
testl
sub
pop
jno
xor
add
or
mov
push
pop
dec
notb
sbb
rolb
cs
fwait
inc
in
push
dec
ret
cmp
jp
loop
es
movsb
lea
fwait
jno
add
sub
in
fwait
push
jne
pop
call
nop
icebp
mov
repz
je
shll
hlt
xchg
popa
inc
cmp
mov
mov
arpl
jno
jge
sbb
rcrl
rclb
dec
inc
sbb
shlb
mov
mov
push
outsb
notb
sbb
insl
sub
lahf
lcall
dec
repz
stos
ds
popf
int3
push
add
dec
adcb
fimull
mov
pushf
aas
mov
sbb
scas
pop
shrl
xorb
out
pop
adc
fistl
int3
jmp
cli
pop
jg
pop
lahf
into
adc
nop
adc
adc
adc
pushf
into
push
push
push
push
lea
add
mov
daa
pusha
into
mov
int3
or
jmp
mov
sbb
lds
cmp
push
ja
or
mov
bound
shl
xor
in
outsl
cmp
popa
xchg
xchg
int3
dec
cli
out
fnstcw
jo
repnz
mov
sub
xchg
fs
xchg
notl
popa
enter
jp
pop
stos
clc
jno
mov
call
xchg
shll
or
dec
pop
shl
lds
fst
inc
ffree
in
out
and
insl
daa
mov
notb
pop
xchg
iret
sub
das
enter
jge
fdivl
push
leave
mov
addb
cmp
hlt
mov
mov
test
push
std
je
out
rcrb
movsb
pushf
mov
ret
mov
jmp
sbb
out
pop
pop
popa
jle
sbb
mov
iret
inc
cmp
iret
jp
popf
adc
xchg
das
lahf
sub
push
pop
dec
adc
ss
ss
and
dec
jge
popf
sbb
ss
adc
jecxz
loopne
adc
out
outsb
lcall
xchg
pop
adc
roll
cmpsl
sbb
mov
push
pop
dec
and
imul
adc
inc
jecxz
test
xor
dec
pop
add
scas
jmp
es
xor
cmp
test
iret
jg
add
orl
mov
mov
addl
sbb
into
ror
filds
and
and
js
scas
xor
mov
test
addr16
in
sub
mov
sahf
mov
out
in
pop
xchg
popf
add
jns
inc
out
or
repnz
cmp
mov
sbb
aam
jae
clc
mov
cmpsb
pop
and
push
push
or
out
cmpb
lret
mov
jns
in
pop
decb
sbb
add
jl
arpl
in
mov
inc
dec
mov
mov
push
xchg
jg
inc
sbb
adc
push
inc
push
in
scas
push
dec
add
push
les
jb
scas
push
inc
mov
inc
mov
jp
ljmp
js
cmc
call
mov
mov
add
sub
pop
push
lcall
ss
mov
sbbl
std
out
shl
push
test
jge
insb
dec
sbb
push
jmp
mov
fwait
lods
mov
bound
movsl
in
fldcw
loope
cmp
fsubs
sbb
mov
stos
fwait
lahf
cwtl
cmp
push
jb
and
mov
and
dec
ret
insb
pop
push
cs
jl
cmp
outsb
jo
xchg
repz
lea
xchg
test
add
or
jno
adc
iret
mov
movsb
bound
movups
shl
fnstsw
push
push
cmp
cmpsb
dec
sbb
sbb
bnd
lret
dec
mov
or
std
in
out
inc
push
icebp
adc
imul
mov
jp
inc
in
es
ret
or
mov
imul
out
mov
testb
mov
pusha
jne
xor
jecxz
in
or
or
xchg
jns
mov
jge
cltd
mov
adc
add
inc
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
or
add
add
add
add
add
adcl
addr16
adc
sarl
mov
and
hlt
repnz
cmp
out
cmp
movsl
jp
test
push
push
rcll
clc
jo
jb
dec
push
jg
sub
xchg
imul
push
dec
adc
int
out
sub
adc
iret
xchg
push
mov
daa
ljmp
nop
pop
jmp
inc
fcoml
add
jne
dec
ds
lea
lahf
mov
subb
xchg
fdecstp
fs
cmc
je
push
inc
popa
mov
mov
bound
icebp
subl
repz
xor
sub
or
ja
dec
inc
mov
fwait
adc
ret
sahf
out
and
fisttps
sbb
fidivrl
push
pop
vmovapd
push
in
call
mov
sub
outsb
test
cli
fstl
scas
outsl
xchg
loop
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
