inc
lods
mov
das
fwait
dec
insb
pop
stos
pop
pushf
cltd
mov
call
ss
mov
data16
sbb
jge
xchg
push
pop
inc
pop
jns
sti
add
sbb
mov
xor
add
push
xchg
and
das
mov
xor
cmp
inc
lret
bound
leave
ficomps
icebp
inc
es
icebp
and
mov
pop
dec
sub
cmc
and
jne
xchg
xchg
xor
js
adc
cmp
push
dec
sub
xor
iret
push
sbb
pop
rorb
push
outsb
stc
mov
lret
pop
cwtl
dec
inc
jno
cltd
push
sub
push
sub
mov
imul
clc
into
insl
xchg
add
inc
out
jp
rsqrtps
inc
lods
jnp
add
xchg
rclb
aad
mov
loope
inc
mov
insb
popa
lea
add
push
mov
addl
cmp
shll
pop
and
es
cwtl
xor
js
in
mov
popf
aaa
xchg
mov
sbb
mov
cmpb
pop
cltd
cltd
cli
adc
sbb
pop
cmp
lahf
hlt
incb
hlt
xorb
pop
lds
adc
test
inc
ficomps
inc
fmul
testb
inc
ja
pop
pop
aam
lock
je
fists
incl
lret
icebp
push
pop
xlat
jg
movsb
push
rcll
movsl
push
shlb
adc
addb
mov
testb
faddl
add
jp
nop
mov
xor
lahf
jmp
pop
xor
sti
and
scas
loopne
hlt
fldcw
iret
push
cmp
push
aas
sub
push
xchg
add
test
mov
lea
icebp
add
pop
xor
sbb
mov
mov
test
out
add
scas
mov
js
or
xchg
sbbl
pop
mov
jnp
dec
lock
jne
inc
addr16
les
sahf
lods
out
dec
bound
in
stos
xor
sbb
iret
add
xchg
sub
orl
add
xchg
cmp
clc
ret
or
test
dec
fwait
push
es
pop
mov
imul
rclb
add
sub
lods
fs
popa
lahf
or
xor
fadd
leave
aaa
sbb
fdiv
push
cltd
ret
fdivl
lahf
rcll
dec
jnp
and
repz
jns
dec
call
lcall
cmpsl
or
mov
sbb
cwtl
push
xchg
adc
jnp
cmc
cmc
sahf
rcl
push
push
pop
rcrb
lods
sub
popf
sbb
nop
cltd
push
rolb
into
imul
jp
lea
add
jg
cld
push
enter
pop
movsl
xor
leave
inc
cs
hlt
jge
dec
lods
int3
sub
dec
mov
pusha
mov
push
mov
fdivs
mov
xlat
cmp
pop
call
jl
movsl
xor
xlat
jge
cli
sub
mov
mov
adc
mov
mov
pusha
fs
inc
sub
cmpsb
dec
cld
push
mov
in
ja
mov
xchg
xchg
cs
add
incl
dec
movsl
or
clc
inc
in
fidivrs
mov
ljmp
adc
sbb
stos
out
mov
dec
fsubr
sarl
jg
mov
or
ss
dec
test
aad
mov
dec
into
pop
mov
orl
es
add
xor
sbb
fmuls
test
push
sub
dec
sub
xchg
popf
or
ljmp
mov
test
in
dec
xchg
xchg
push
test
test
cmp
sub
cwtl
jns
pop
js
inc
insl
shlb
push
fnsave
xchg
in
subb
popf
mov
jl
xchg
inc
jb
lea
xor
jne
xor
lods
je
shll
xor
mov
lods
cltd
adc
lea
pop
movsb
cmp
jl
mov
sbb
in
aaa
stos
push
xor
add
aas
xchg
mov
xchg
test
mov
loope
mov
mov
push
xor
or
insb
repz
mov
cmpsb
dec
loop
push
icebp
xlat
nop
dec
or
cs
je
pop
lds
aaa
lods
xchg
xor
fldl
mov
jmp
popa
outsb
xor
inc
repnz
cmp
jecxz
push
shll
sbb
xchg
loope
push
sub
insb
xchg
add
enter
sbb
frstor
lock
stc
insl
or
addb
loope
or
imul
dec
fwait
xor
cmp
add
lea
xchg
inc
xor
push
adc
adc
xlat
ja
adc
pop
push
mov
jno
pushf
pushf
pop
cmc
daa
loop
stc
xchg
das
mov
les
ja
sbb
dec
cmp
outsl
inc
imul
adc
call
pop
repnz
stos
xor
pop
xor
inc
jmp
mov
adc
jg
je
add
push
das
fmuls
and
dec
jne
ljmp
sub
cmc
ljmp
cmpsl
mov
push
or
sbb
mov
mov
into
lret
xlat
inc
cltd
std
outsb
sub
sbb
into
xor
int3
imul
rorl
out
hlt
daa
xchg
mov
test
dec
repz
loope
aad
imul
inc
std
jl
push
sub
ss
movsl
cltd
cmpsb
push
pop
jno
movsb
insb
push
fdivl
das
in
frstor
xchg
scas
lret
pop
xchg
outsb
xchg
xchg
adc
les
sbb
das
pop
push
int3
jo
xchg
in
sbb
xchg
mov
mov
lahf
dec
pop
jno
dec
cld
sub
sub
push
inc
outsl
fcomip
jae
push
pushf
test
and
adc
jmp
push
pushf
repnz
mov
mov
repz
popa
call
cld
xchg
stos
repnz
dec
inc
cmp
aad
outsl
pop
mov
and
pop
add
dec
mov
jle
push
imul
lret
and
or
push
fbstp
scas
mov
stos
test
in
pop
ret
fdivl
andl
imull
push
sub
inc
rcr
sub
ja
fnstenv
cs
mov
aaa
mov
dec
adcl
fs
sub
cmp
jecxz
arpl
jo
or
subb
or
push
mov
fwait
adc
scas
ljmp
ds
mov
mov
pop
mov
xor
test
cmp
jne
pusha
pop
jne
push
scas
mov
dec
adc
stc
fdivrp
rcrl
dec
call
test
sahf
jno
sub
pop
fs
imul
sbb
test
sahf
inc
xor
xlat
fs
dec
sub
adc
xor
pop
stos
hlt
adc
xchg
or
dec
out
mov
pop
pusha
lods
dec
push
aas
inc
push
scas
bound
xor
pop
add
sub
adc
lret
sub
rolb
jg
jmp
shl
pop
shl
es
jecxz
add
pushf
dec
and
ja
clc
push
js
into
and
and
push
lea
fildl
pushf
mov
jmp
adc
pop
faddl
adc
mov
sbb
xor
cmp
jns
mov
mov
jl
jnp
push
popf
ja
jns
repz
or
lods
icebp
adc
and
sub
xor
mov
xchg
aas
in
mov
ja
xor
int3
xchg
out
inc
xchg
mov
add
nop
lds
xchg
shl
pop
pop
mov
sbb
icebp
pop
mov
jge
mov
dec
je
pop
pop
adc
pop
scas
jo
int3
dec
mov
jecxz
adc
fildll
insb
xchg
adc
pop
ljmp
std
mov
cmc
adc
xchg
test
and
mov
iret
dec
nop
test
sub
add
fildl
orl
gs
xchg
insb
in
pop
adcl
mov
ret
jg
ret
ret
dec
pusha
cvtps2pd
cmp
sbb
jmp
bound
fs
sub
sub
lea
jecxz
cwtl
incb
jl
outsb
movsl
or
out
dec
sbb
ljmp
sub
testb
arpl
dec
loop
fdivrp
jge
jno
jg
aas
push
push
xor
mov
push
xchg
add
and
mov
mov
pop
test
or
mov
push
aaa
loope
pop
fs
mov
mov
cmp
sbb
xchg
adcb
fildll
or
sbb
aaa
out
ss
subl
sbb
inc
mov
xchg
cmp
je
fcoml
xor
test
and
jno
jne
orl
int
fnsave
adc
enter
xor
adcb
aad
movsl
sahf
stc
xchg
test
test
inc
enter
cmp
popa
xchg
int
ljmp
cmp
pop
cmp
scas
cwtl
repz
hlt
push
pop
clts
xchg
jno
jmp
mov
and
push
in
xchg
or
clc
adc
adc
adc
in
cwtl
cli
mov
sbb
test
loop
ss
cmpl
ret
testl
test
mov
inc
xor
imul
into
pushf
adc
cmpl
sahf
fwait
mov
outsb
jmp
jge
rcll
or
push
xor
dec
decl
addl
mov
hlt
sbb
out
ja
sub
push
sbb
add
and
mov
and
jg
xchg
cmp
icebp
inc
inc
cmp
movsl
add
jmp
sbbl
pop
outsl
pop
sbb
pop
into
dec
sbb
call
lock
push
inc
js
outsb
movsl
adc
popf
dec
sbb
jne
aam
lock
push
xchg
or
xchg
dec
fucomi
xor
xchg
xchg
dec
lret
push
sbb
adc
mov
addr16
push
fwait
mov
cmp
sbb
popa
add
sbb
xchg
fcoms
jp
xchg
push
mov
xor
dec
or
pop
mov
out
push
loopne
jno
push
or
push
cltd
test
js
repz
xchg
sub
cs
or
pop
mov
xchg
mov
adc
jecxz
pusha
mov
push
mov
dec
mov
lret
aam
cltd
adc
sbb
adc
xor
pop
adc
lahf
stc
jae
fsubrs
pop
je
mov
cs
jp
addr16
pop
pushf
push
lods
mov
jno
dec
sti
dec
scas
stos
popf
icebp
inc
sub
dec
inc
scas
mov
out
mov
movsl
add
stos
xor
std
mov
or
lods
adc
out
push
std
insb
pop
notl
lea
je
jbe
jl
push
shrb
mov
xchg
mov
insl
subl
cs
pop
push
outsl
jns
push
clc
int
push
inc
add
sahf
test
inc
xor
fdivl
cmpsb
and
or
push
aas
popa
fldcw
loopne
inc
mov
mov
in
xchg
neg
test
jmp
lods
test
in
scas
and
cltd
cmp
test
int3
jge
cmp
pop
rcrb
decl
pop
loope
ja
dec
push
gs
mov
aam
mov
popf
push
inc
mov
jge
fimull
test
xor
std
lock
in
jecxz
mov
xor
mov
aas
icebp
add
push
mov
pop
and
jle
pop
mov
stc
jne
and
cmp
jns
nop
cli
cmpsb
icebp
loop
out
xor
dec
fwait
xchg
icebp
scas
dec
sbb
test
jl
lods
dec
mov
das
fnstcw
in
sbb
xchg
fidivs
in
scas
test
js
mov
negl
movsb
mov
icebp
scas
push
xor
jbe
cmp
es
das
daa
rclb
fsubs
sub
mov
mov
add
xor
in
int
fs
movsb
outsb
push
jge
or
fistl
test
dec
sbb
push
mov
push
mov
lret
mov
cwtl
or
repnz
cltd
lcall
addr16
xchg
test
adc
sbb
lea
ret
jne
mov
sbb
ret
lcall
test
cmpsb
hlt
aam
pop
add
mov
pop
xor
mov
dec
aaa
sbb
jle
hlt
bnd
push
mov
jge
data16
sbb
aam
adc
leave
test
xchg
rclb
sub
das
inc
add
jns
insl
cmp
mov
jae
sbbl
mov
cmp
inc
mov
cmp
loop
inc
xchg
pop
xor
jge
push
xchg
and
cmp
iret
aam
push
leave
jno
xchg
aaa
pop
ret
cmp
mov
bound
jno
or
rcrb
push
xchg
sbb
xchg
xchg
in
mov
dec
xorb
xor
popa
sub
adc
jmp
and
and
ss
dec
loope
xlat
fwait
arpl
push
movsb
movsl
push
sarb
in
xor
test
cmp
mov
ljmp
in
xlat
pop
mov
push
pop
aas
lock
push
loope
dec
pop
andb
xor
adc
hlt
imull
xor
cmp
cmp
pop
mov
imul
and
cmp
xchg
in
xor
mov
jecxz
mull
xchg
mov
xlat
aaa
stos
xchg
orl
and
sbb
inc
lret
add
cmpsb
xchg
xchg
jno
loope
dec
sarb
ss
inc
and
cmp
pop
out
sbb
hlt
pop
outsl
pop
ss
inc
sbb
dec
xchg
dec
pop
sbb
out
subb
aam
loopne
mov
mov
repnz
orb
xlat
divl
outsb
test
out
jg
pop
jl
sub
out
mov
fadds
aaa
jnp
dec
sahf
ds
ja
xchg
pop
push
jo
sahf
push
daa
mov
sbbl
fnsave
icebp
fidivs
jae
dec
sbb
rcrl
or
lahf
shlb
sub
jecxz
jo
mov
dec
mov
xor
daa
mov
fwait
std
xor
popf
fnsave
cmc
lcall
pusha
jp
xor
data16
cltd
sahf
cmpb
in
cmp
push
jle
jle
sub
push
pushf
jno
pop
jmp
mov
clc
adc
rclb
fwait
and
add
out
push
xor
cmp
jge
pusha
jne
jo
rep
add
les
repz
push
inc
outsb
rolb
mov
dec
aaa
cltd
repz
aam
enter
push
fcoml
dec
sbb
pop
push
jmp
jmp
enter
pop
inc
rcrb
sbb
sbb
pop
aad
ret
xor
mov
lds
push
sbb
pop
ss
test
adc
aaa
push
pop
sbb
adc
cmp
mov
mov
push
cmp
push
es
add
push
cld
mov
sbb
cmc
mov
push
stos
movsl
movsl
jne
xor
xchg
inc
xchg
dec
movsl
adc
movsb
dec
jge
pop
hlt
mov
cmpsl
ljmp
ffreep
pop
or
in
sahf
xchg
imull
js
cwtl
and
cs
sahf
sbb
pop
stos
cs
sbb
xchg
push
mov
in
int
mov
in
mov
cmp
dec
sub
jbe
loopne
addr16
cs
inc
aaa
and
rcrl
adc
jle
inc
jge
ret
jle
push
inc
ss
or
cmc
adcl
cmpsl
js
cmc
aaa
lea
cmp
outsb
inc
sub
xlat
xor
add
fldl
sti
pop
mov
call
fst
sub
ret
stos
cwtl
pop
mov
and
add
test
imul
cmp
decb
inc
adc
or
xchg
outsb
stc
or
fistpl
leave
loopne
lret
imul
addr16
jno
bswap
inc
mov
daa
adc
out
add
out
stc
ret
inc
lret
popa
adc
xor
push
pop
test
cli
jbe
cmpb
or
xrelease
test
imul
aaa
nop
pop
mov
mov
jge
daa
dec
mov
dec
mov
mov
out
cmpsl
addl
test
xlat
push
int
outsl
push
xor
sbb
xchg
pop
jp
jle
sub
stc
fsts
dec
add
mov
mov
push
das
lods
inc
int
dec
and
pop
les
and
or
in
push
out
jge
lret
bound
out
clc
inc
nop
das
pop
cli
call
es
stos
rolb
mov
fiadds
mov
cltd
fwait
popa
scas
std
xor
test
js
dec
xchg
rcrl
push
dec
stos
adc
mov
lods
xor
loope
lds
lock
sbbl
sub
push
arpl
lock
mov
icebp
outsb
xor
sbb
sub
sub
clc
mov
out
stc
or
add
jle
xchg
cltd
adc
sahf
aam
cld
and
adc
rcr
pop
outsb
lahf
mov
push
int
jge
fdivr
lret
jns
inc
lods
test
rsqrtps
adc
or
outsl
or
ret
inc
cwtl
lds
pop
or
push
or
jp
rclb
aam
rcl
outsl
push
inc
enter
inc
xchg
adc
xchg
xor
push
jbe
test
mov
pop
out
inc
jbe
movsl
push
pop
test
or
cmpsb
cmc
cmp
xlat
pop
ds
adc
cmp
push
outsb
inc
mov
or
leave
xlat
loope
mov
dec
addr16
out
adc
aaa
mov
mov
cmp
pop
imul
and
sarl
in
fwait
enter
lahf
push
mov
test
jmp
lret
lds
jae
sub
inc
jp
xor
mov
dec
and
or
cmp
aaa
mov
imul
fisttpll
pop
adc
aad
dec
or
int
aaa
cmp
and
repz
inc
xor
push
arpl
gs
repz
imul
inc
cmp
div
xor
loop
add
jp
inc
push
test
sub
jb
jo
outsb
xchg
sar
xor
mov
xchg
jle
test
fmul
inc
xorb
pop
mov
adcl
sub
pop
js
clc
jecxz
test
std
cmp
or
or
aaa
mov
push
xrelease
hlt
clc
jl
mov
stos
push
lods
adc
cmp
or
fimuls
daa
dec
ja
test
xor
cmp
xchg
add
cmp
rep
sbb
mov
pop
jno
cltd
frstor
lret
xor
int3
gs
push
std
popf
lea
jg
lods
sbb
pop
and
jl
fistpll
mov
xor
sbb
insl
repz
add
flds
popf
cwtl
jle
sti
int3
dec
cmp
xchg
or
push
mov
loope
push
sub
or
push
movsl
andl
adc
loop
inc
xchg
out
int3
sbb
scas
cmc
shrb
push
je
push
ret
loopne
and
jns
movsl
in
repnz
das
push
xchg
dec
lds
mov
add
sahf
imul
shl
loope
lret
repz
push
mov
dec
test
lods
test
xorl
outsb
rcrb
ror
repnz
mov
cmpsl
pop
inc
mov
lea
js
cmpsl
les
push
sahf
push
scas
gs
out
xchg
pop
shlb
cltd
xchg
pop
or
sahf
orl
inc
pusha
shll
xchg
xchg
adc
iret
add
outsl
jecxz
mov
pop
add
test
outsl
xor
pop
dec
push
push
and
mov
shrb
xchg
push
sbb
mov
cmp
sub
inc
push
pop
aam
jle
leave
mov
dec
push
imul
daa
daa
lret
push
jb
adc
xchg
inc
mov
in
push
insb
out
push
rclb
std
sahf
jecxz
das
dec
xchg
dec
cld
pop
xchg
mov
inc
add
popf
loopne
ss
imul
mov
mov
outsb
jmp
imul
test
and
sbb
sub
push
jmp
test
rep
xor
and
dec
aas
int
push
out
sbb
jns
imul
lods
push
cld
sub
shrb
sbb
cmpsl
sbb
xchg
jno
loope
xor
dec
in
iret
push
inc
sbb
nop
shll
int3
ret
inc
and
xchg
lock
or
jno
test
jnp
or
nop
cmc
in
xchg
into
mov
jns
ss
and
inc
loopne
es
and
and
push
mov
sarl
decl
leave
add
mov
rclb
push
lcall
dec
mov
mov
jp
sub
in
or
push
adc
sarb
lret
and
lock
loop
or
cmp
cwtl
jno
or
es
dec
sbb
rol
ss
pusha
push
in
in
and
data16
sub
enter
in
dec
out
jns
addr16
add
push
ljmp
sub
stc
jle
ds
test
shll
xor
add
jno
and
mov
xchg
popa
mov
cmpsl
mov
inc
xor
popf
dec
and
pushf
cmp
jmp
out
jne
jge
outsb
hlt
pop
out
adc
divb
jmp
mov
inc
cmp
bound
and
pushf
push
es
push
inc
int
out
inc
jnp
loope
cmc
cmp
test
loopne
loopne
test
xchg
in
mov
inc
repz
nop
out
or
pop
add
mov
jns
jl
scas
jns
repz
push
jnp
mov
pop
cmp
push
test
ret
outsb
sub
in
sub
aad
adc
iret
xor
fucom
jp
insb
or
xchg
fdivrl
cmp
cmpsl
add
fdiv
push
inc
inc
clc
xor
out
mov
pop
cmp
lock
push
cmc
xor
pop
xor
dec
xor
sub
lret
and
popa
loopne
sub
push
das
mov
sub
aam
pop
fidivrs
inc
xchg
push
and
adc
inc
push
add
mov
test
cmc
xor
in
jns
rorb
dec
addr16
xlat
push
jmp
mov
add
push
cmp
mov
aad
popf
or
notl
push
sbb
lahf
or
push
mov
nop
adc
cmc
in
imulb
xchg
fistl
aaa
arpl
jecxz
ja
inc
adc
dec
dec
repnz
add
lods
adc
std
lahf
in
ds
push
loop
inc
or
data16
adc
push
int3
pop
ss
int
cmp
adc
sub
inc
mov
movq
xchg
jo
mov
xor
xor
fnstenv
cvtps2pi
sub
inc
sbb
fdivrs
fwait
pop
pop
pop
pop
jno
jge
adc
out
and
in
jo
cmp
int
dec
dec
pop
call
jnp
mov
lea
sbb
outsb
mov
out
ja
dec
out
rcl
adc
xor
add
popf
push
std
aas
dec
fwait
popa
dec
cwtl
mov
cmp
lret
aas
xor
loope
shl
dec
mov
js
mov
and
pop
pop
jecxz
push
or
cmc
sbb
dec
push
fisubs
pushf
popa
sub
mov
xchg
dec
adc
jno
mov
mov
mov
sbb
sbbl
push
shrb
jle
enter
les
fwait
mov
pop
les
inc
inc
jno
loope
cmp
ds
jmp
mov
ja
xor
jns
imul
cld
pop
out
sub
cmp
in
inc
outsl
and
jle
inc
cmp
push
ja
add
nop
xchg
int3
lret
or
inc
inc
jle
popa
sub
jmp
lret
xchg
fcomps
cmp
jne
sbb
in
xchg
je
jo
inc
inc
xor
lock
aaa
mov
or
test
fwait
inc
mov
xor
cli
insl
and
adc
fadd
jl
leave
mov
aas
sti
rorl
adcl
push
add
jno
add
cld
fidivl
sub
xchg
adc
cmp
lcall
insl
adc
ds
stos
inc
dec
push
jmp
shl
popf
cmc
cmc
addr16
idivl
shll
nop
cmpsb
jl
out
data16
mov
xchg
add
cmp
cwtl
add
xlat
dec
inc
data16
into
or
jno
roll
jle
nop
push
adc
sbb
cli
adc
adc
jne
jecxz
jns
jno
addr16
mov
scas
test
outsb
jne
sbb
in
cmpsl
insl
add
aam
bound
jae
loopne
mov
cmp
xor
enter
push
dec
cmp
push
jecxz
stc
push
popf
push
je
scas
xchg
jne
jmp
mov
mov
out
pushf
sbb
movsb
jnp
ret
pop
filds
mov
shl
in
and
lods
pop
test
jns
xchg
repz
sub
dec
mov
sahf
in
sub
clc
test
push
cmp
jl
pusha
inc
jno
imul
add
sahf
or
sbb
cmc
jbe
cmpsb
dec
pop
jecxz
sbb
xchg
push
push
pop
pop
dec
push
je
stos
loop
loopne
adc
or
gs
popf
and
out
xor
imulb
push
sbb
jae
jne
jno
push
rcll
dec
cmc
popf
add
cmp
cmp
cmp
add
jmp
xchg
push
dec
cmp
add
insl
cmp
cltd
mov
lcall
fldenv
pop
mov
aaa
divl
or
out
iret
sbbb
mov
mov
mov
mov
in
pop
or
sub
int
pop
dec
sbbl
js
rorl
jecxz
sbb
jge
xchg
inc
dec
out
ds
fs
and
jecxz,pt
fwait
adc
aas
xorb
jns
mov
nop
add
jb
leave
dec
dec
pop
shlb
add
adc
adc
test
push
mov
jl
test
shlb
inc
or
cmc
shl
and
shlb
ficomps
push
hlt
lods
mov
inc
pop
stc
clc
ret
fdivrs
ret
mov
push
cltd
bound
inc
repnz
jl
inc
in
push
roll
cmp
adc
jmp
lds
sbbl
inc
cwtl
bnd
ret
das
cmpsl
popf
mov
pop
and
sahf
js
loope
test
flds
int
fstps
pop
dec
ficompl
sahf
adc
dec
jl
mov
push
push
movsbl
or
jbe
rcll
or
je
inc
popl
sub
xor
xor
hlt
pusha
popa
pop
clc
push
lds
int
lret
jmp
mov
push
inc
rcl
xor
popa
iret
sub
arpl
and
je
jns
pop
rcrl
arpl
and
testl
outsl
and
divl
cmc
cmp
mov
cmp
dec
fs
cld
xlat
add
mov
push
jns
jge
cmpsl
mov
ss
pop
mov
sbb
xor
add
mov
stc
cmpsl
and
inc
and
out
jmp
sahf
std
pop
jnp
add
sbb
repnz
jmp
sahf
ret
aaa
inc
cmp
mov
fstpl
xor
or
mov
fistpl
into
fcoml
es
and
cmp
add
sahf
cmc
jnp
data16
sub
es
adc
or
adc
push
je
cmp
push
push
or
jecxz
mov
lcall
dec
fbstp
rcll
lea
sbb
fisttps
jno
movsl
jmp
cmp
lret
xchg
sub
xor
stos
pop
xchg
mov
xor
jnp
inc
xchg
lcall
sarb
cld
mov
jne
adc
or
vpand
and
mov
movsl
cmp
jns
dec
arpl
inc
mov
xor
add
xchg
lds
push
lods
sub
push
adc
mov
xor
inc
jp
or
daa
adc
inc
dec
lock
xlat
test
fwait
add
sbb
xor
icebp
int
leave
test
cmp
aaa
cltd
xchg
pop
std
jg
cmp
pop
cli
into
sbbb
test
lea
in
movsb
scas
mulb
sbb
sbb
cmpsl
loope
add
popa
sbb
add
call
test
add
xchg
fisubs
rolb
mov
xchg
xor
cmp
cmp
mov
scas
lret
ds
mov
cmp
fstpt
pop
fisttps
cmp
repz
into
and
push
jge,pn
icebp
add
sbb
jne
pop
rcr
fildl
pop
mov
mov
pushf
inc
mov
aaa
and
xorl
adc
jnp
ret
rolb
xchg
mov
cmp
movsb
and
jno
jmp
xlat
sahf
dec
xchg
mov
data16
lcall
inc
loopne
cltd
mov
hlt
pusha
push
aas
arpl
int
gs
out
into
out
xor
sbb
imul
jge
lea
mov
pop
pop
inc
addr16
add
jp
mov
xchg
ds
sub
out
jns
lret
or
test
mov
ficompl
call
ja
popa
cmp
xchg
sub
ljmp
cmp
aas
dec
out
pop
and
test
addr16
mov
rorb
and
mov
dec
movsb
or
repnz
in
shrl
xor
jb
rcrb
xchg
xor
pop
xchg
cmp
movsl
inc
inc
fdivl
sub
mov
jne
imul
cmc
cmp
or
xchg
and
xchg
ret
adc
xor
sbb
pop
fstps
ss
jl
fs
outsb
out
gs
arpl
roll
cmp
sahf
minps
mov
cwtl
gs
jle
and
aas
xchg
xchg
dec
ljmp
xchg
clc
jmp
pop
push
divb
add
inc
and
outsb
mov
jnp
mov
in
dec
divb
aas
mov
add
popf
daa
push
push
jne
pop
in
adc
jno
in
push
aaa
mov
nop
cmp
in
popf
test
jge
jae
shll
pop
sbb
aad
aam
icebp
mov
clc
dec
hlt
fiadds
dec
push
stc
ja
imul
scas
pavgw
cmp
xchg
mov
add
jb
xchg
popf
popa
shlb
or
xor
push
jl
hlt
into
jne
xor
mov
push
xor
dec
pop
jl
fsubrs
sub
pop
pop
je
xchg
cmpsl
mov
leave
ja
ffreep
repnz
or
inc
mov
pop
jne
push
xchg
mov
xchg
mov
rcrb
cltd
mov
std
dec
xor
jno
jle
mov
sti
mov
call
clc
ss
and
jl
mov
pop
sbb
mov
dec
mov
pushf
xchg
and
and
fdivr
nop
and
sub
dec
mov
cmp
sub
outsl
sub
or
stos
jo
jns
mov
xor
ss
sbb
xor
and
aam
inc
rcrl
fildl
fistpl
sub
clc
mov
sarl
inc
adc
inc
das
aaa
loop
push
nop
jge
outsb
xchg
or
cmp
jns
push
cmc
outsl
pop
clc
pop
cld
jno
xor
in
xor
fwait
inc
push
testl
popf
mov
mov
jne
loop
fdivs
test
clc
inc
push
xor
outsb
cmpsl
inc
dec
jnp
add
push
in
mov
cmp
les
sub
mov
adc
or
xor
cmp
arpl
dec
and
jge
mov
lahf
in
mov
mov
pop
push
int3
fdivs
ret
cmp
cmp
sbb
test
testb
das
inc
pop
ljmp
ds
addr16
cmp
push
outsb
fdivrl
mov
call
push
addr16
out
inc
jecxz
js
popa
push
into
jp
cmp
outsl
pop
lcall
scas
mov
or
mov
clc
nop
jle
cmpsb
subl
add
mov
fstps
fwait
and
dec
mov
mov
outsl
inc
or
scas
inc
movsl
outsb
lds
lock
adc
cmc
xchg
or
into
out
or
je
adc
and
mov
hlt
adc
jae
popf
ljmp
mov
iret
xchg
int3
aam
mov
push
inc
adc
xchg
loopne
xchg
jae
jb
insl
jb
movsl
adc
push
insb
std
icebp
pop
nop
xchg
out
lds
popf
jg
scas
sbb
push
out
mov
jnp
fsubr
inc
jbe
xor
pop
sub
mov
xchg
jg
mov
mov
je
movsb
inc
xor
or
dec
pop
xchg
add
adc
mov
push
add
pop
imul
mov
xchg
xlat
xor
push
stos
iret
mov
clc
imul
or
jb
lret
inc
jl
push
cmc
mov
push
stc
adc
jge
cmc
dec
or
lods
jge
or
shrb
push
inc
xor
sub
daa
jg
out
pop
xchg
adc
loopne
andl
push
xchg
inc
pushf
std
imul
xchg
mov
cmpsl
adc
lds
into
pop
push
fs
lahf
or
push
inc
test
out
ret
addl
mov
push
add
or
jmp
fs
orl
xor
daa
pop
pushf
mov
inc
jle
in
push
mov
lods
mov
jle
jmp
push
push
mov
cs
push
icebp
lcall
lea
out
xor
js
cmp
aam
xor
lea
sub
jno
movsl
xchg
std
mov
out
pop
xchg
adc
movb
xchg
xchg
mov
adc
sbb
subl
mov
out
sahf
jmp
dec
adc
sbb
movsb
mov
adc
addw
lret
movsl
inc
and
mov
adc
lds
mov
pop
and
cli
sbb
jmp
scas
xor
xchg
mov
cltd
adc
mov
mov
xchg
or
dec
lock
push
push
sti
push
fildl
xchg
icebp
cs
xchg
sub
inc
sbb
xchg
dec
pop
je
mov
hlt
adc
scas
ljmp
or
xchg
xorb
ret
lock
mov
sbb
in
cld
ffreep
dec
push
jle
ss
jo
stos
xchg
xor
loope
xorb
lahf
dec
sbb
data16
les
jnp
popf
test
fnstcw
leave
add
cmp
scas
jg
filds
fs
jbe
xor
or
or
inc
stos
push
aas
fistpll
stc
push
xchg
jg
in
jno
mov
adcb
and
iret
xchg
mov
inc
scas
push
adc
sbb
jne
push
addl
pop
call
xchg
lock
insl
jnp
push
dec
pop
sbb
xor
xchg
adcb
popa
mov
pusha
shlb
push
cmpsl
and
or
lret
and
inc
scas
pop
mov
mov
lods
mov
dec
js
or
adc
loopne
insl
in
dec
popf
shrl
orl
inc
test
xor
sbbl
xor
imul
std
xor
mov
in
cmpsb
cmp
cmc
scas
xchg
in
inc
pop
sub
daa
int
xchg
dec
loope
es
cmp
ffreep
mov
xchg
test
push
sbb
cli
leave
xor
repnz
push
popf
push
jnp
test
jns
lock
shl
jae
or
cs
jmp
lock
in
xchg
stc
push
adc
out
mov
mov
add
lock
fwait
adc
inc
shll
mov
test
pop
fnstenv
cmpsl
addr16
pop
aad
movsb
nop
cmp
cmpsl
xor
shrl
cmp
jae
aas
cmp
cmp
fisttps
stos
push
dec
jmp
icebp
mov
inc
lods
mov
fdivrs
xor
aad
mov
in
movsl
lods
mov
sbb
mov
add
sarl
or
jmp
fmull
xchg
xchg
adc
clc
lods
scas
cmpsb
push
nop
mov
inc
fstpt
test
jns
fisttps
and
mov
mov
mov
sbb
xchg
jns
push
cmp
lcall
jo
ds
xor
cmp
or
and
into
cmp
popf
out
jno
push
arpl
xor
scas
movsl
dec
dec
fnsave
mov
lock
addr16
das
xor
jbe
sbb
les
add
pop
lcall
dec
stos
clc
scas
inc
push
in
js
pop
loope
mov
cmp
jle
cmpsl
pop
dec
cwtl
adc
inc
fadds
stos
add
lea
cmp
addr16
insl
cmp
cmp
mov
inc
cmc
int
ljmp
dec
sub
loop
mov
jb
loope
or
aad
dec
inc
push
dec
dec
jno
and
cmpl
mov
mov
rolb
dec
ja
adc
popa
dec
in
aam
cmp
scas
and
roll
nop
gs
jbe
out
mov
cmc
arpl
test
push
ss
pop
push
movsb
fs
andb
stc
jo
out
mov
mov
xor
push
sahf
push
aam
mov
add
push
xor
add
hlt
test
add
mov
scas
dec
stos
adc
fcomps
aas
mov
push
sub
mov
sbb
inc
daa
inc
testb
sbb
dec
inc
cwtl
inc
mov
or
movsl
movq
es
inc
test
push
cltd
dec
cmpsl
xorb
jp
adc
jb
sub
enter
inc
loopne
fwait
sub
add
fwait
jae
mov
pushf
loopne
aad
cmp
imul
and
mov
sbb
jl
pop
dec
stos
lahf
inc
test
sbb
add
inc
sbb
imulb
test
xchg
inc
jbe
dec
cs
lret
js
xchg
incl
mov
aaa
ret
cld
gs
pop
mov
push
sbbl
repz
cltd
jl
fld
aam
inc
mov
icebp
test
test
lods
mov
mov
out
dec
dec
sub
cld
test
pop
push
mov
mov
mov
adcl
rcrb
loopne
icebp
lock
mov
dec
jno
insl
out
xlat
push
loope
pushf
daa
imul
push
addb
in
lds
xor
xchg
outsb
jg
in
or
popa
pushf
bound
bound
jbe
sub
repz
test
nop
movsl
cltd
xchg
sub
stc
inc
and
push
sbb
bnd
fs
jnp
out
loope
mov
xchg
jmp
cmp
xchg
das
push
scas
lea
addl
push
sbb
bnd
testb
xchg
mov
adc
adcl
repz
push
mov
cmp
mov
insl
loop
es
xchg
ja
insb
push
adc
push
pop
xor
dec
inc
rolb
push
in
icebp
inc
jno
int3
and
in
adc
mov
inc
add
push
and
orl
add
and
jno
sbb
int
test
xchg
add
cmpsb
test
nop
js
add
popa
xchg
push
dec
fs
mov
sbb
xchg
lds
out
mov
and
xor
movsl
add
inc
lds
test
leave
repnz
rorl
pop
push
mov
add
sbb
std
in
fbstp
push
js
dec
mov
push
rcrb
jg
push
jno
ret
inc
das
fsts
lods
roll
lret
loope
cmpb
mov
scas
dec
pop
add
pop
mov
push
shll
in
pop
mov
lods
std
pop
jge
inc
dec
mov
mov
pusha
jecxz
push
movsb
jo
mov
ss
or
mov
add
xchg
push
dec
lds
loop
decl
sub
dec
scas
mov
lock
mov
xchg
or
inc
and
mov
cmpb
int
push
add
jge
xchg
xor
dec
and
xlat
inc
push
jno
test
xorb
fstl
inc
lea
aaa
mov
jae
xchg
mov
nop
ds
xchg
insl
cmp
mov
mov
data16
adcb
sti
and
clc
faddl
inc
sub
inc
aaa
dec
push
and
sbb
flds
mov
pop
xchg
addr16
cwtl
ja
mov
xchg
xchg
xchg
scas
and
mov
fdivrl
pop
pop
xor
adc
dec
jb
sbbl
ja
xchg
popf
lods
xchg
dec
pop
enter
jge
roll
cwtl
sub
scas
adc
xchg
add
or
pushw
aas
xlat
icebp
push
jp
mov
mov
rcrl
inc
fisttpl
or
sub
ret
xor
in
repnz
nop
pop
sub
inc
pop
out
mov
dec
xchg
and
fldt
loop
lret
repz
test
imul
test
repnz
mov
jle
pop
jo
addr16
je
fstl
and
ljmp
pushfw
js
add
push
adc
dec
inc
icebp
popf
pop
cmp
aad
lods
push
data16
cwtl
xchg
aaa
xor
mull
mov
fnstcw
add
push
addb
mov
hlt
adc
mov
test
cmpsl
add
enter
dec
and
and
leave
and
nop
repnz
add
mov
xchg
out
adc
inc
mov
inc
push
xor
jb
nop
lahf
dec
pushf
mov
popf
sub
scas
mov
insb
xchg
add
xchg
mov
sbb
pop
jle
lock
cmp
clc
ret
mov
stos
mov
icebp
ror
in
xchg
stc
sti
jmp
loop
add
mov
cmp
jno
mov
mov
add
enter
cmp
adc
xchg
test
mov
repnz
xor
sti
push
daa
loop
cwtl
mov
cld
cltd
jb
or
popf
pop
je
imulb
xor
push
mov
jo
loope
sti
test
nop
pop
mov
jnp
pop
xchg
outsl
sbb
pop
cmpb
xchg
cwtl
daa
iret
test
lahf
lods
mov
jae
nop
rclb
fsubs
je
es
aad
push
ret
dec
add
stos
xor
iret
test
leave
inc
lret
cmpsl
daa
lea
in
dec
and
mov
add
dec
xchg
ficoml
mov
xchg
xchg
or
fidivs
jo
and
push
call
and
adc
jecxz
push
xchg
xor
or
xchg
test
add
inc
shll
xchg
imull
jp
dec
shl
clc
addr16
push
cmpsb
xor
and
repz
outsl
or
xorl
lods
pusha
aad
enter
pop
push
subb
jg
push
jge
add
jg
push
push
mov
call
lea
stos
sbb
xchg
test
xchg
mov
bound
leave
or
test
jp
leave
sbb
insb
jge
sbb
lret
subl
pop
iret
dec
xchg
cli
inc
scas
xchg
jg
or
dec
pop
call
and
movb
orl
push
cmc
ficoms
push
scas
or
mov
sbb
jle
dec
sarl
inc
and
cmp
in
sbb
iret
dec
mov
push
or
ds
or
pop
daa
js
dec
add
std
cmp
popa
push
xchg
popa
pop
js
repz
out
xor
and
sub
mov
push
imul
js
jl
pop
lahf
or
xor
icebp
push
pop
cmc
das
cmp
popa
lock
xchg
sub
loopne
aam
in
subb
cmp
ret
or
test
jmp
roll
ret
imul
mov
sbb
lock
jecxz
adcb
jp
cmp
imul
pop
jb
jae
jnp
xchg
pop
nop
fnsave
mov
xchg
pop
ret
sub
xchg
mov
sub
dec
lods
shrl
or
test
xchg
jmp
aas
mov
xchg
xchg
sti
mov
sbb
adc
inc
in
aaa
mov
inc
movsb
xchg
nop
enter
sub
cmpsl
inc
mov
notl
or
js
in
jo
data16
inc
pop
xor
mov
pop
ljmp
test
inc
push
push
push
xchg
sbb
adc
and
imul
mov
dec
push
sub
rorb
cmpl
pop
imul
pop
adc
aaa
mov
sbb
dec
jae
adc
inc
cmp
loop
or
xchg
push
cmp
pop
push
nop
fldl
xor
lods
add
out
imul
lahf
insl
pop
aaa
cmp
cmpl
cli
cltd
imul
leave
jns
push
lods
jne
push
orl
cmp
sbb
sbb
mov
loope
push
sub
pop
pop
mov
jb
xchg
xorl
sti
in
arpl
inc
pop
insl
xchg
sbb
faddl
dec
cltd
cmpsl
mov
bnd
scas
movsl
push
test
insl
push
and
inc
cmpsl
mov
xchg
xor
das
cmp
sub
ljmp
and
das
mov
mov
fbstp
cmpb
inc
jp
movsl
xchg
jl
iret
lret
in
or
out
mov
bnd
dec
popf
test
daa
xacquire
adc
fadds
es
int
pop
pop
dec
add
push
imul
sub
imull
cmc
mov
push
sub
adc
jne
sahf
shlb
xor
xlat
and
inc
lods
fsubl
out
outsb
mov
out
add
jg
lds
divl
dec
xchg
imul
push
imul
lds
lret
fs
test
popf
shl
in
adc
add
mov
sarl
pop
xor
outsl
aad
dec
in
inc
ja
ja
or
inc
xchg
xchg
cmc
jg
test
jo
mov
scas
into
in
dec
xor
add
leave
divb
ds
jmp
and
push
out
pop
divb
push
push
out
leave
sbb
out
insl
mov
lds
daa
rcr
or
push
add
sub
jbe
push
mov
sbb
jmp
xor
imul
sub
adc
sub
push
push
jne
lds
xlat
pop
mov
sub
and
sub
sub
inc
adc
pop
test
adc
imul
pop
or
lds
sbb
sbb
dec
movsl
mov
jne
out
pop
cmp
testb
push
cmc
add
repz
mov
inc
ret
add
fstp
into
sub
dec
gs
imul
lret
out
mov
blcic
fs
inc
pop
xchg
mov
lock
add
cmpsb
loopne
cmp
lods
adc
in
sub
xchg
repz
xchg
je
dec
icebp
jge
stc
mov
outsl
mov
dec
pop
push
adc
sub
cltd
aam
test
sub
lods
or
repnz
popf
scas
jbe
xchg
cmpsl
dec
or
icebp
jno
mov
jae
xorl
add
sbb
test
xchg
push
push
in
mov
adc
repz
inc
xchg
push
mov
imul
xor
jae
add
aas
push
rolb
loopne
aas
dec
push
nop
adc
inc
and
dec
repz
mov
ret
ss
test
sbb
inc
cmpsl
xor
dec
fnstsw
jno
dec
xor
aad
cmc
xchg
sub
inc
xchg
js
jp
test
gs
cwtl
pusha
stc
jb
add
mov
dec
je
dec
popf
movsb
pop
fsubrs
leave
aas
ffreep
jae
lret
rorl
stc
push
inc
lret
je
push
and
roll
jmp
push
xor
jp
dec
jno
mov
or
dec
aad
mov
ds
or
mov
cmp
inc
mov
and
ds
nop
popa
xor
movb
xchg
lret
push
enter
or
aam
sbb
jg
cmp
pop
sbb
jno
loop
iret
cmp
push
std
das
icebp
sbb
sbb
leave
pop
push
xlat
or
data16
xor
xchg
pop
cltd
sub
sub
cmc
lahf
les
push
adc
dec
xchg
xor
adc
in
mov
mov
mov
jnp
mov
testl
sub
mov
dec
cwtl
inc
fldenv
xchg
and
out
rolb
jne
mov
jg
jl
mov
push
add
mov
stos
negb
inc
fnstenv
das
mov
sahf
mov
je
inc
mov
jae
inc
rolb
daa
or
dec
mov
fmuls
mov
mov
insl
jnp
mov
or
imul
sub
dec
imull
mov
push
xchg
ja
inc
lds
out
mov
mov
pusha
dec
cs
jecxz
jnp
mov
adc
sub
inc
repz
fwait
add
leave
fiaddl
popa
sub
loope
jmp
xchg
pop
jne
xor
add
jg
mov
or
adc
in
inc
lods
pop
outsb
movsb
sbb
mov
aam
addr16
dec
jmp
push
pop
insb
sahf
xchg
xor
sub
cwtl
push
cwtl
stos
mov
pop
decl
popf
cmpb
clc
and
das
testb
icebp
scas
icebp
cmc
loope
jmp
pop
leave
xchg
mov
and
mov
daa
xchg
insb
xor
insb
push
xor
cmc
adc
stc
xor
push
push
daa
cmp
in
or
add
mov
imul
iret
mov
cmc
sbb
jle
aam
inc
loop
testb
in
fistps
aad
adc
je
pop
mov
lret
or
loopne
ja
fcomp
repnz
xor
and
in
add
jb
shll
cmp
dec
push
int
xchg
xorl
sub
mov
rorl
enter
ja
jg
pop
jae
sub
insb
je
and
fiadds
push
ja
in
sub
aad
mov
sbb
leave
inc
mov
push
insl
mov
add
xchg
into
dec
mov
decl
ja
fcomps
movd
pop
mov
mov
fmuls
lea
sbbl
mov
fs
mov
xchg
sub
test
pop
push
and
psubusw
bnd
mov
mov
cmpsb
pop
into
or
xchg
xor
insb
pop
mov
lahf
jb
pop
loope
adc
in
mov
jp
cmpsl
push
xor
cmp
out
cmpsb
test
mov
jnp
adc
and
sahf
mov
xchg
push
push
jns
dec
mov
xor
test
int3
push
aaa
rol
rclb
jmp
je
or
mov
mov
orl
xchg
leave
hlt
out
jmp
mov
lea
fdivrl
adc
sbb
insb
or
mov
ljmp
test
sub
frstor
sarb
add
fs
into
in
pusha
push
cli
dec
adc
push
cmpsb
loop
movsl
sbb
sbb
add
push
dec
cltd
and
ss
les
hlt
test
cmc
push
or
adc
ret
jecxz
aas
cmp
inc
lcall
and
pushf
test
add
fwait
popa
pusha
push
imulb
shl
or
or
jl
sbb
sbb
cmp
xorl
loop
jl
divl
ljmp
mov
xor
mov
mov
cmp
fdivs
or
push
push
mov
icebp
bound
and
xchg
fsubs
xchg
mov
pop
add
mov
js
ret
into
fsts
inc
aad
fldenv
push
repz
mov
add
je,pt
mov
ret
pusha
push
xor
mov
sbb
sub
sbbb
mov
push
mov
push
mov
notl
loopne
mov
add
xchg
rcrl
mov
inc
icebp
cmpsb
mov
inc
sbb
mov
mov
mov
ss
je
ret
jo
push
lret
fadd
mov
cmp
mov
popa
rorl
sti
cmp
jns
pop
cmp
push
mov
xchg
fdivrl
cmovbe
cltd
imul
push
loope
add
in
fistps
mov
xor
dec
fstps
add
adc
into
mov
push
pop
fs
mov
das
add
sub
shll
movsl
dec
mov
cmp
repz
and
push
mov
fwait
xor
outsl
cmc
cmc
xor
sub
sub
push
aad
in
lcall
arpl
jnp
insb
sti
sti
lds
xor
push
dec
cltd
sub
jge
in
mov
sub
mov
add
pop
cmpsb
lods
in
push
sbb
inc
and
push
repnz
jae
sbb
cmp
into
sub
add
mov
fdivl
or
sub
aam
rolb
lds
test
jl
les
pop
roll
mov
mov
aaa
pop
jnp
cld
dec
jb
outsl
ss
scas
aad
std
dec
inc
ds
leave
cli
inc
js
orb
adc
sahf
je
mov
ret
outsb
pop
jmp
mov
pop
jmp
test
aad
add
rcrb
jl
or
sbb
sub
dec
push
cmpl
imul
movl
je
push
sbb
outsl
sahf
iret
or
jne
test
mov
aas
xor
cmp
movsb
or
adc
dec
adc
lcall
sahf
push
mov
mov
xchg
mov
push
loopne
ret
mov
mov
xor
jo
inc
inc
add
push
scas
mov
sbb
bound
nop
popa
outsb
scas
ret
fsubrl
cmpxchg
mov
in
mov
adc
jl
xlat
mov
dec
xor
jge
jmp
daa
insl
sub
sbb
xor
stc
dec
lea
cmp
std
jnp
je
add
repz
cmp
pop
pushf
pop
lds
push
xor
test
xor
sub
pop
add
pop
push
adc
or
cwtl
ljmp
loopne
or
aaa
shr
and
push
push
jb
jb
jnp
and
mov
imul
cmp
xchg
sbb
push
or
bnd
ja
ds
into
sbb
cmp
movsl
cmpsb
sti
mull
adc
je
cmp
mov
in
mov
fists
xchg
into
dec
lods
mov
lcall
dec
push
sub
pop
lds
cmp
fisttps
insl
fdivrl
imul
adc
mov
or
outsl
imul
mov
mov
das
lds
inc
dec
ja
andb
push
and
dec
test
jp
xchg
jmp
lea
inc
xchg
out
xchg
mov
adc
cmpl
mov
test
daa
cld
jp
push
popa
add
cld
negb
adc
loop
shrl
stc
or
adc
or
sbb
mov
repnz
pop
adc
sbb
mov
push
out
fsubr
sbb
add
rcll
fs
or
sbb
pop
ror
loope
testb
push
cmpl
mov
out
mov
jnp
stos
loope
jmp
cmp
testb
jb
enter
cmp
andb
test
mov
sbb
ss
test
jno
filds
adc
or
push
sub
cmp
jle
bound
icebp
dec
jmp
test
xor
stos
movsl
sbb
test
xchg
fisubrs
lret
xchg
daa
pop
push
xchg
into
es
jle
mov
pusha
inc
mov
cltd
and
xor
into
mov
push
jl
lock
aas
out
pop
test
push
mov
cmp
pop
ja
xchg
test
nop
xchg
mov
sbb
xchg
sub
addl
scas
add
outsb
dec
xor
and
int3
ficoml
mov
outsb
movsb
adc
xchg
movsb
push
sbb
mov
xchg
popa
mov
sti
mov
jns
push
insb
cmp
mov
andl
shrb
test
pop
adc
xor
dec
jp
addl
pushf
pusha
incl
add
test
and
popl
stos
sbbl
xchg
mov
adc
xchg
lea
fldl
dec
int
mov
xchg
shlb
xor
stc
cmpsl
dec
lea
push
test
cltd
lret
push
movsb
xchg
aam
and
ret
cmp
jae
pop
adc
js
pushf
ret
rolb
arpl
ds
sahf
jae
pop
cmp
pop
movsl
sbb
cmp
pop
gs
sti
sahf
in
test
pusha
or
pop
jo
dec
test
dec
fildl
add
adc
mov
cmp
popf
push
add
xchg
iret
pop
addr16
xor
pop
arpl
mulb
jbe
add
aas
aam
mov
enter
jmp
aam
pusha
loop
test
mov
loop
xor
push
insl
or
cmp
jp
adc
inc
dec
nop
add
and
pop
insl
cli
std
repz
xchg
dec
inc
pop
addr16
push
push
aam
lahf
jg
pop
out
lds
mov
cmp
repnz
sahf
aaa
or
sahf
inc
icebp
mov
in
adc
aaa
pop
sbb
jl
scas
inc
addr16
hlt
push
xchg
rol
pusha
pop
lds
cmc
bound
xchg
cmpsb
out
inc
ja
lret
dec
in
cmpsb
push
cwtl
adc
pusha
inc
fisubrl
sub
loop
lods
pop
add
xor
ljmp
nop
inc
out
movsl
insb
push
out
fimull
xor
test
xchg
push
shlb
int3
repz
repz
pop
push
xchg
pop
mov
add
push
shl
cmp
mov
and
lods
fisubl
lds
jle
ss
mov
inc
mov
inc
add
and
push
dec
jmp
movaps
fbstp
jp
dec
mov
outsb
mov
and
pop
add
fisttpl
stos
dec
and
jae
scas
mov
pop
dec
xchg
or
lods
mov
kmovb
clc
into
xorb
fcmovb
imul
sbb
insb
int3
test
push
sub
push
jne
mov
xchg
es
pop
mov
adc
pop
cmp
inc
cld
or
fstpl
push
cmpsb
xchg
cmpsl
add
lea
or
cmpsb
icebp
mov
js
lds
or
in
xchg
pop
jbe
or
add
repnz
push
push
movsb
out
ficoms
push
push
sub
rclb
andb
adc
shl
sub
ret
or
cmp
or
adc
xchg
ret
sub
fsubl
mov
bnd
insl
push
mov
xchg
xor
jne
mov
xlat
cmpsl
mov
adc
push
lods
arpl
sbb
cli
pop
inc
jnp
cmc
imul
xchg
cltd
xor
movsb
je
xchg
scas
fistl
push
sahf
xchg
mov
xchg
adcl
scas
nop
test
or
push
aam
pop
jne
nop
mov
out
bound
arpl
jmp
fs
popf
vaddpd
jle
pop
adc
push
test
mov
jo
cmpsl
xchg
frstor
cmpb
lret
lock
add
adc
popf
aaa
clc
jge
js
repnz
mov
or
aaa
sub
pop
xchg
push
cmp
shrb
push
sub
daa
add
shrl
push
or
dec
aam
or
jecxz
add
jecxz
pop
sbb
imul
sbb
mov
ret
dec
in
mov
jb
xor
ss
shll
pop
adc
push
and
fsubrp
inc
adc
test
fwait
sbb
ds
inc
rorb
dec
test
cmp
push
dec
push
pop
dec
mov
mov
xchg
pop
xor
loop
push
adc
sub
in
mov
push
inc
xchg
mov
jnp
out
or
xlat
fsubl
and
rorl
xor
dec
in
int
push
test
dec
or
in
inc
mov
fs
sbb
inc
and
adc
in
lods
in
pop
jbe
lods
insb
adc
xor
cmp
jns
arpl
gs
out
test
add
push
fimull
es
jns
js
sbb
cltd
mov
fdivrl
scas
mov
fs
bound
dec
or
push
pop
push
leave
jle
mov
cmp
mov
mov
jle
jge
xlat
loop
lahf
add
xchg
ret
cmp
sbb
adc
pop
dec
push
movb
pusha
sub
xor
adc
mov
addr16
in
fadd
sub
inc
mov
repnz
mov
divb
clc
jl
faddp
mov
scas
mov
adc
addl
shrl
and
outsl
lret
xchg
sub
pop
ret
jbe
inc
cltd
leave
fcomi
into
pop
xor
add
xchg
jl
std
and
dec
lock
pop
inc
mov
xchg
xchg
pusha
sbb
test
mov
xchg
cmp
call
sub
inc
cmp
push
insb
ja
dec
and
andb
and
xor
leave
mov
push
add
in
lods
adc
into
mov
and
jmp
shll
mov
add
es
jns
lret
int3
ja
xchg
mov
mov
and
mov
movl
aas
stc
pmaddwd
int
or
sbb
sbb
dec
push
push
jge
arpl
xchg
pop
pmuludq
dec
jge
mov
scas
fndisi(8087
insl
fstpl
add
nop
cmp
add
pop
testl
in
inc
cld
cltd
xor
dec
cmp
inc
outsb
imul
stos
imul
pop
loope
pop
or
lret
mov
cmc
pop
mov
inc
addb
inc
gs
mov
sub
mov
lea
cmpsl
test
test
lock
mov
enter
sub
inc
fcom
jno
pop
lret
xlat
out
and
push
sbb
movsb
repz
xchg
sub
sbb
mov
jno
fbld
and
popf
out
sub
adc
cli
cmp
jno
sub
xchg
dec
dec
icebp
push
jl
xchg
sahf
or
adc
push
repnz
inc
imul
stos
mov
adc
inc
inc
stos
push
dec
aam
mov
xchg
das
pop
xchg
not
dec
and
xor
mov
dec
mov
push
pop
shrb
pop
mov
xchg
mov
fsubrl
in
xlat
mov
notl
inc
test
jge
mov
mov
sahf
div
mov
loope
and
aad
cltd
push
xor
test
aam
mov
stc
xor
dec
test
mov
sub
sbb
gs
jae
and
xor
ret
dec
lods
add
out
notb
mov
push
rorb
inc
push
imul
xchg
or
jnp
adc
push
test
jnp
out
popa
daa
xchg
les
jno
push
add
push
das
pop
iret
mov
in
lock
cmovns
push
mov
data16
andb
sbb
rorb
leave
in
mov
mov
aam
dec
mov
inc
leave
xor
aad
in
jae
outsb
inc
jb
repnz
sub
or
adc
cmpl
iret
pop
xor
xorl
add
lea
call
cmp
mov
xchg
xchg
push
lret
cli
icebp
outsb
lds
lods
jne
je
out
inc
push
adc
or
filds
lea
mov
and
jge
or
rcrl
push
mov
jg
imul
xchg
mov
insl
lea
xor
inc
push
pop
adc
mov
iret
pop
sbb
in
lds
pop
jge
pop
and
jae
xchg
jecxz
cltd
push
and
or
aam
sub
pushf
xor
push
pop
pop
lods
push
lret
pop
pop
xchg
imul
sahf
outsb
and
sti
mov
sbb
adc
dec
mov
xchg
xor
cmp
cli
cli
xchg
mov
mov
enter
sbb
imul
test
mov
loop
mov
mov
insl
arpl
inc
les
sti
pushf
in
lods
scas
xor
inc
xor
mov
jns
push
push
xor
push
and
out
jns
xchg
jg
dec
jo
mov
popl
xchg
int
xchg
sbb
pop
xchg
add
mov
adc
push
lods
pop
outsb
popa
insb
inc
imul
cltd
sub
jno
fsubrl
pop
sub
push
pushf
mov
in
xor
enter
pop
mov
sbb
jle
lret
popf
inc
shlb
cmc
mov
lods
cltd
fwait
int3
inc
inc
int
xor
and
push
sbb
adc
adc
pushf
push
fcoml
push
cmp
sbb
lcall
into
dec
lea
sbb
and
cld
stc
dec
jbe
sbbb
fmuls
adc
jle
xorb
push
aam
lret
dec
or
push
inc
int
popa
test
xchg
jp
dec
mov
push
xchg
incl
cs
shll
cmc
pop
cltd
jns
mov
ret
dec
sub
cmpsb
filds
imul
mov
lock
jne
and
sarl
mov
dec
in
mov
mov
lea
test
clc
mov
imul
sbb
in
neg
dec
arpl
jge
mov
sub
mov
jge
out
jae
xchg
loope
pop
push
sub
test
aam
and
xchg
mov
xor
out
mov
mov
sub
or
lcall
call
orb
sbb
jnp
adc
xchg
jns
push
ljmp
in
ss
cld
pop
mov
xlat
mov
cltd
push
out
push
loope
cli
jo
dec
push
scas
enter
aad
xor
aas
jg
dec
pop
xchg
scas
dec
xorl
clc
adc
movsl
lds
pop
repnz
push
lds
jnp
ds
adc
mov
and
or
andl
scas
mov
xor
inc
pop
add
int3
push
imul
rcll
flds
outsl
pop
sbb
jnp
leave
xchg
inc
outsb
testb
aam
mov
clc
or
mov
leave
mov
es
fisubrs
ret
xchg
sbb
leave
lds
jae
sbb
ja
dec
mov
stos
stos
incb
xchg
inc
and
dec
push
jle
jnp
in
repz
insl
mov
out
mov
sbb
popa
arpl
adc
into
jns
lds
mov
and
loop
movsl
inc
movsb
fsts
cmpsl
fcmovbe
mov
scas
and
addr16
mov
push
mov
xor
imul
lret
insb
nop
arpl
mov
js
sarl
pop
inc
es
and
sar
cmpsb
std
pop
data16
and
mov
jp
hlt
lods
or
pop
out
insb
stos
dec
sub
xchg
inc
jg
out
xchg
dec
int
pop
icebp
iret
fld
aam
mov
mov
push
mov
pop
add
mov
fildll
lock
jae
iret
mov
notb
xchg
push
divl
pop
add
sahf
dec
insl
jns
loop
inc
push
sbb
cwtl
loop
push
out
adc
adc
add
cmpb
mov
pop
enter
mov
lods
in
pop
jo
fsubrl
jo
push
push
dec
jno
push
adc
clc
cmp
pop
xchg
push
pusha
adc
cmpb
xor
shrb
dec
lret
push
rcrl
cmp
dec
mov
in
out
fldl
mov
inc
inc
gs
push
iret
test
cmp
data16
fistl
push
cmp
add
mov
pop
pop
sbb
xchg
sbb
mov
ja
xor
test
xchg
fidivs
cmpsl
mov
andb
fcoms
ljmp
push
data16
mov
enter
and
inc
std
aad
and
or
pop
rclb
cmpsl
es
pop
imul
fisubrs
sarb
push
push
inc
add
push
xor
dec
fadd
add
xchg
inc
test
mov
mov
dec
jnp
or
pop
mov
dec
jp
mov
pop
arpl
ffreep
sarb
test
dec
stos
and
cmpsb
in
icebp
jno
dec
mov
movl
pop
out
add
and
xchg
rcrb
andl
push
adc
testl
cmp
dec
mov
and
push
inc
push
and
xchg
out
fiaddl
add
adc
sub
and
iret
cmc
movb
sub
stc
outsb
add
psrad
cmp
xchg
push
inc
and
fildll
leave
shlb
cltd
jg
lcall
pop
and
jmp
adc
into
das
dec
cmp
ret
sub
ret
scas
pop
dec
int3
inc
loopne
jmp
inc
jp
movsl
cmp
adc
jno
adc
fcmovu
scas
sbb
repz
push
pop
bnd
xor
inc
leave
push
movsl
cli
sbb
mov
inc
xor
or
fiadds
clc
cmp
sti
mov
fmull
push
push
lahf
push
dec
inc
and
lea
dec
pop
mull
mov
inc
inc
inc
adc
cmp
mov
idivb
aaa
sub
or
sub
xor
divb
pop
ret
xchg
jo
cld
ja
or
mov
subl
test
jb
sahf
push
ret
mov
jg
shrb
mov
add
mov
cltd
mov
test
cmc
push
xchg
cwtl
pop
mov
popl
cmpsl
mov
xor
xchg
hlt
lret
push
xchg
loopne
sbb
mov
dec
xlat
ds
out
inc
cs
mov
jp
pop
cmp
call
or
jg
stos
dec
test
mov
fsubrs
repz
mov
or
dec
leave
or
enter
loope
jb
inc
dec
push
mov
mov
insb
cmp
js
adc
fisubrl
enter
push
mov
fdivrs
dec
xorb
in
mov
mov
add
push
adc
push
cmp
loope
repz
arpl
cmp
and
or
in
push
sub
cmpsb
cmp
stos
and
jns
pop
cmc
push
mov
lock
mov
sub
ss
xchg
rcrb
cmpl
and
inc
mov
arpl
inc
push
pop
inc
mov
jns
add
mov
loopne
test
lcall
cmpsb
push
iret
std
fnsave
nop
cld
filds
sub
xchg
and
lea
ja
add
stos
pop
in
adc
cltd
pop
mov
jo
cmc
mov
fcoms
popa
or
sub
ftst
pop
daa
xchg
icebp
pop
rcrl
in
out
iret
sub
js
insb
jns
decl
cli
inc
andl
sub
jnp
cmp
aas
aaa
pop
leave
inc
mov
sbb
aas
hlt
test
or
add
leave
and
aam
jb
cmc
movsb
and
xor
cmc
xchg
imul
dec
xchg
mov
and
icebp
xor
push
fisubrl
nop
dec
xor
jnp
xchg
jnp
fst
fcmovnu
push
pop
daa
cltd
sbb
aas
daa
cld
jno
es
jp
lods
fnstcw
sahf
jb
int
add
and
push
out
adc
fbld
ds
test
jns
xor
mov
in
dec
fisubl
cmpsb
into
inc
xchg
data16
and
pop
insb
cs
cmp
adc
imul
xor
sbbl
mov
ja
movl
fcmovu
sub
imull
xchg
adc
dec
or
push
add
and
cmp
dec
bnd
lock
ja
popa
xor
stos
xchg
sub
gs
inc
mov
fidivrs
inc
lcall
inc
sahf
pop
inc
and
inc
mov
add
push
test
add
icebp
aad
arpl
pop
xorl
imul
push
dec
cmpl
insl
fcmovnu
push
sub
je
push
dec
imul
dec
stos
in
mov
mov
movsl
push
dec
mull
xchg
push
out
cmp
es
xchg
inc
inc
loop
mov
mov
push
test
scas
dec
mov
jecxz
cwtl
notl
or
or
push
xor
call
lods
xchg
adc
push
scas
jno
mov
mov
out
inc
and
push
pop
fistpl
push
jno
pop
fisttpl
cmp
scas
mov
and
xchg
fisubs
cwtl
xchg
or
dec
xor
shr
in
enter
inc
jb
imul
xorb
adc
jno
int3
jo
inc
xlat
stc
cmp
and
repnz
lret
and
in
sar
xor
and
ss
out
fs
lahf
dec
outsl
jne
ror
add
and
ficoms
mov
pop
dec
xlat
test
add
mov
inc
lcall
clc
incb
hlt
hlt
adc
std
add
mov
and
out
aaa
hlt
or
add
cmpsb
inc
mov
sub
test
xor
movsb
jecxz
mov
es
testl
mov
pop
in
add
fistpl
and
mov
inc
icebp
mov
xor
gs
cmp
or
xor
sub
ss
inc
loope
jecxz
push
xor
fcmovnb
add
icebp
sub
loope
cld
or
dec
stos
out
mov
out
push
dec
in
fcompl
testl
sbb
push
fwait
adc
stc
mov
adc
mov
hlt
sahf
xor
push
pop
lock
add
xor
or
dec
pop
xchg
pop
and
mov
mov
jb
sub
mov
ffreep
sub
mov
mov
in
addr16
inc
pop
into
das
callw
pop
jne
jge
jo
fs
push
rolb
mov
push
push
dec
out
pop
nop
push
push
adc
dec
stos
repz
leave
fiaddl
inc
lret
mov
mov
xor
dec
dec
insb
cmp
inc
xor
into
shl
leave
fmuls
insb
and
jno
rorl
lods
dec
pop
pop
mov
cmp
push
push
shlb
or
mov
jle
or
jns
call
mov
pop
jbe
jb
xchg
popl
cmpsl
rep
sbb
mov
in
in
cmpsb
cli
iret
add
movsb
jnp
dec
test
inc
adc
pop
in
mov
inc
call
jno
ljmp
fdivl
sub
ficoms
jbe
lea
jne
repz
stc
popf
dec
xor
push
fistpl
jmp
arpl
aas
std
adc
arpl
xor
dec
nop
jge
pop
xor
test
and
mov
and
sbb
mov
mov
push
push
xor
notl
lret
pop
pop
jne
push
test
mov
enter
sub
fnstenv
bnd
mov
mov
dec
je
jno
push
stc
outsb
call
push
mov
mov
inc
shrb
icebp
sub
enter
xor
push
stc
inc
loop
movsb
push
xchg
push
data16
jle
inc
cmp
dec
mov
mov
add
mov
sub
fstpt
mov
jb
cmp
sbb
xchg
mov
test
mov
add
jb
mov
sub
mov
outsb
mov
push
jno
sbb
mov
test
fnstsw
dec
cmp
testb
fwait
rcr
sub
cmp
add
xlat
jl
jns
cwtl
cmp
inc
addr16
cmpsl
shlb
mov
fiaddl
jb
loope
stos
xlat
cmp
shrb
dec
add
inc
ljmp
pop
mov
jbe
aad
xchg
insl
push
scas
adc
pop
jns
cmp
loope
pop
mov
clc
push
aaa
mov
imul
loopne
dec
repnz
enter
jge
or
sbb
inc
hlt
icebp
incl
gs
mov
sbb
adc
mov
dec
xlat
or
lods
dec
sub
mov
cmc
mov
lock
lods
fisttpl
cwtl
out
sbb
rcrb
mov
mov
imul
jnp
pop
icebp
mov
sub
and
sbb
add
and
and
xor
dec
inc
mov
xchg
adc
arpl
and
cli
xor
fcomp
push
and
mov
xor
xor
or
aad
pop
cmova
sub
test
jb
cmp
mov
jmp
xchg
add
hlt
dec
mov
sbb
jae
sub
int
pop
add
pushf
and
mov
jb
fsubl
enter
test
loope
add
scas
insb
push
sub
mov
push
mov
test
xor
daa
lcall
mov
shrl
les
aad
outsl
xchg
pop
adc
cmp
lods
aad
fwait
xor
out
sub
xor
dec
cltd
inc
jne
test
push
mov
adc
imul
sarl
jmp
and
xor
adc
rol
mov
mov
dec
movsl
mov
sahf
dec
push
arpl
dec
xor
and
cmp
lret
mov
loop
in
loope
outsl
push
push
sub
mov
sbb
imull
cmc
xchg
mov
adc
adcl
mov
aam
jbe
mov
popl
js
sub
or
sub
pop
lods
lock
sub
pop
push
cld
jne
movsb
das
popf
push
dec
mov
inc
into
adc
subl
adcb
inc
jns
cmp
mov
lea
repnz
inc
dec
sbb
pushf
mov
or
ret
mov
dec
jge
adc
mov
aaa
ja
sub
shr
xchg
xor
fcomps
and
xor
mov
lods
xor
test
adc
push
in
ss
xchg
or
or
aad
inc
pop
mov
mov
dec
lock
sbb
sub
in
lods
xor
ss
rcrl
bound
lds
inc
dec
shl
les
int3
test
or
mov
lea
out
xchg
dec
and
jns
adc
sbb
imul
popf
xchg
dec
adc
push
pop
ljmp
stos
push
inc
jo
push
xchg
pop
jl
loopne
cmp
lds
iret
std
push
or
inc
inc
add
ja
call
add
pop
popa
and
push
out
or
out
repnz
roll
xor
mov
mov
push
int3
add
jp
cmp
data16
pop
addr16
popl
int3
mov
je
cmc
fs
sbb
inc
push
pop
cmp
sbb
or
repnz
aas
negl
jle
rcrb
stc
sbb
xor
add
inc
and
sub
enter
and
lock
mov
lea
pop
pop
pop
cmp
insl
insb
call
push
in
sahf
mov
ss
push
cmp
sbbl
jbe
mov
jg
push
test
jns
push
ljmp
adc
imul
std
inc
divb
nop
popf
loope
mov
insl
xorb
insb
push
and
mov
add
repz
notl
lea
sub
mov
inc
rorl
movsl
jle
inc
xlat
test
sahf
int3
jmp
imul
pop
and
mov
jb
aaa
fs
jmp
jecxz
je,pt
adc
imull
push
or
cmp
xchg
jno
inc
faddl
icebp
xchg
ss
mov
lods
push
xchg
fs
mov
nop
jb
inc
icebp
mov
xchg
jp
in
out
in
dec
rcrb
pop
pop
cmp
bound
andl
sub
mov
sub
in
mov
lcall
dec
push
test
shlb
and
icebp
or
or
out
iret
jg
rcrl
cwtl
or
mov
push
lds
fmuls
icebp
xor
jns
std
push
xor
sub
mov
in
imul
pop
mov
sub
test
je
sub
fwait
xchg
jmp
push
inc
call
iret
push
aad
fimuls
jge
ret
adc
je
dec
push
outsl
lret
outsb
addb
popa
push
aad
test
jb
mov
stc
insb
imul
inc
movsl
lods
jb
sub
and
es
or
push
add
sbb
ficomps
xchg
cmp
pop
in
fwait
jmp
xchg
push
push
jnp
xor
dec
pop
in
sbb
mov
scas
mov
call
or
fistps
ret
sub
outsl
inc
mull
pop
add
jno
inc
mov
add
xchg
fdivs
mov
mov
inc
mov
xor
sti
pop
and
xor
adc
inc
push
addr16
add
and
or
jno
add
jecxz
stc
mov
mov
rcl
sub
addr16
lret
mov
cmp
popa
in
cmp
sbb
xor
fwait
ljmp
sub
gs
adc
inc
roll
and
push
data16
mov
and
roll
jo
adc
dec
insb
mov
roll
lods
lret
mov
or
jno
das
mov
sub
xchg
lods
subb
insb
jl
mov
mov
and
sbb
call
xchg
xor
in
popf
inc
push
mov
dec
push
cmpsl
test
cwtl
cmp
inc
jecxz
and
ret
cmp
push
fs
cmpsb
rorl
test
dec
add
jbe
push
insb
pop
lds
fmuls
ds
lock
dec
in
stc
mov
sub
leave
push
pop
sub
loope
enter
dec
sti
sbbb
int3
jl
sbb
lahf
or
movsl
in
cmp
gs
loopne
imul
adc
xchg
movsb
sub
bound
xchg
shl
std
jle
sbb
cmp
add
pop
pop
ror
sbbl
lret
jl
xor
jno
mov
rcll
xchg
push
mov
out
inc
sub
inc
or
lock
xchg
dec
and
push
testb
pop
and
popf
int
inc
sbb
mov
mov
xchg
popf
enter
adcb
mov
insb
mov
or
add
hlt
gs
fdivs
insb
and
and
orl
sub
mov
cmpsl
loope
hlt
inc
rcll
rorl
or
pop
lock
inc
mov
out
add
and
and
jp
nop
cmp
push
fs
xchg
adc
or
cmp
and
jmp
pop
sub
fldenv
addl
and
xchg
rolb
ljmp
je
push
mov
xor
popa
cmp
lea
or
lahf
xchg
stc
mov
xor
push
sar
or
out
fdivrp
adc
add
push
popa
and
xor
in
xor
fsubr
mov
mov
and
xchg
out
jg
outsl
mov
roll
sub
push
loope
gs
es
lds
xor
bnd
pushf
imul
add
xor
stc
dec
xlat
mov
lcall
inc
or
mov
mov
mov
sbb
aam
dec
leave
mov
adc
out
loope
rclb
repnz
xor
adc
fnstenv
das
add
jnp
xchg
and
pop
outsl
add
xor
xchg
mov
inc
jae
movsl
aaa
mov
in
das
dec
mov
dec
scas
sub
scas
fcmovnbe
sub
rolb
inc
inc
mov
leave
repz
sbb
pop
dec
push
mov
push
sbb
push
inc
test
mov
into
cmpsl
sub
add
mull
outsb
xchg
out
stos
adc
orl
pop
icebp
or
test
xchg
jmp
cmc
ljmp
cmp
daa
pop
pop
out
mov
dec
mov
push
stos
inc
pop
push
jmp
lods
aaa
orl
mov
pop
pop
out
jnp
int
pop
outsl
adc
aas
dec
sbb
lods
out
xchg
pop
arpl
cs
xor
mov
cmp
or
stos
dec
or
dec
xchg
cmpb
sub
stos
es
insl
cmp
dec
mov
aaa
xchg
dec
movsl
lret
shl
outsl
inc
test
clc
sbb
pop
cmc
icebp
je
push
jns
push
ret
push
xchg
lcall
lock
gs
outsl
inc
movsb
andb
shlb
int
imul
xor
mov
and
stc
adc
andb
pop
and
das
inc
aad
push
push
rolb
inc
test
sbb
inc
pop
loope
push
sbb
adc
xchg
adc
lea
insb
les
fwait
xchg
mov
clc
dec
xor
jns
cs
or
inc
pop
add
shll
jmp
xor
pop
insb
arpl
shl
into
jnp
adc
pop
call
xor
mov
loope
gs
push
or
xchg
inc
insl
xchg
aam
xchg
rcrl
je
inc
mov
or
outsb
push
cmpsl
movsb
test
std
nop
ds
push
mov
sbb
jmp
sub
outsl
jbe
stos
std
jecxz
or
imul
pop
mov
test
xor
adc
popf
or
xor
popa
adc
xchg
jns
adc
dec
js
in
loop
xchg
fbld
iret
push
push
or
pop
inc
jmp
roll
mov
adc
xor
pusha
enter
xchg
mov
sbb
popl
adc
gs
xlat
jb
mov
xchg
adcl
push
imul
loopne
jg
cmp
inc
push
mov
pop
test
je
mov
daa
or
daa
inc
test
es
dec
insl
push
push
xchg
push
mov
lods
lds
xor
xchg
fidivrs
fidivl
xlat
mov
xchg
pop
push
sub
lods
inc
add
in
lret
jne
aaa
js
test
xorb
in
inc
add
jecxz
cmp
sete
or
dec
shll
add
mov
push
jno
loope
add
sub
outsb
mov
push
stc
stc
mov
mov
xchg
lret
pop
cli
cmpsb
push
in
sub
mov
jg
add
lock
cmpl
push
jnp
inc
jge
add
movsl
pop
insl
cmp
jp
jge
push
add
adc
inc
movsl
je
mov
and
adc
xor
adc
fs
movsl
adc
andb
lds
stos
inc
daa
repnz
jecxz
mov
cmp
cmp
mov
jno
insl
and
movsl
jnp
jne
aaa
dec
test
jno
pop
add
inc
outsb
mov
push
int
xor
test
mov
xchg
pop
vpshlb
popa
test
outsl
mov
popf
mov
pop
cli
jno
stc
add
add
imul
jnp
jne
aaa
nop
test
add
rcll
testl
aad
in
mov
negb
fnsave
and
inc
jp
sbb
incl
sbb
sbb
cwtl
add
sbb
hlt
xchg
sahf
das
imul
popa
fdivr
in
mov
jg
or
aaa
ljmp
gs
pop
inc
jle
ljmp
shlb
pop
jnp
inc
lret
xchg
push
lds
inc
mov
push
out
call
sbb
sbb
mov
ret
aaa
inc
lret
adc
sbb
add
shll
mov
dec
shl
sbb
addl
pop
mov
sub
xor
xchg
call
sub
out
lods
pop
jnp
mov
ljmp
aad
adc
lret
fiaddl
in
negl
sbb
push
les
cmc
dec
push
repz
adc
or
adc
inc
mull
or
sub
cmpsb
mov
arpl
insl
je
cmpl
pop
xor
xchg
mov
dec
int
jno
add
fs
pop
mov
jo
mov
das
sbbl
mul
test
cmpsl
out
pop
cld
shlb
hlt
outsl
sub
inc
cmpsb
xchg
and
push
aad
jno
pop
jmp
call
xorb
subb
in
add
sbb
cmp
popf
dec
pop
lock
test
dec
xchg
pop
daa
add
adc
icebp
popa
pop
mov
outsl
gs
mov
inc
scas
jno
add
pop
fdivs
in
lea
mov
cmp
in
leave
xor
cmp
jnp
xchg
pop
xor
es
xlat
cmpsl
test
adc
push
sbb
push
inc
push
dec
xchg
out
lods
test
je
mov
cmp
lods
sub
clc
mov
ss
dec
mov
mov
or
cmp
push
ljmp
in
mov
fwait
push
js
adc
test
xchg
movsl
mov
or
je
xor
jnp
pop
add
and
in
jl
mov
adc
arpl
xchg
sbb
jno
push
cmp
jb
test
mov
pop
cmp
mov
push
cmp
loope
addb
jno
idivl
mov
inc
sbb
adc
adc
adc
or
or
data16
clc
mov
push
out
xchg
loopne
adc
dec
add
inc
js
cmc
stos
jb
cli
icebp
pop
xorl
es
xchg
pop
fwait
jne
or
ret
aaa
xchg
jmp
notl
dec
repz
loopne
icebp
adc
lret
sahf
adc
add
mov
push
sbb
push
xchg
xchg
xor
push
insl
or
leave
scas
insl
pop
add
lret
cmc
rcll
xlat
push
sbb
adc
pop
hlt
test
mov
adc
jno
sub
xlat
push
sub
cmp
movl
stc
dec
std
inc
pushf
jbe
mov
jae
ficoms
mov
add
test
mulb
cmpsl
add
xor
stc
pushl
repz
outsb
adc
mov
and
mov
jns
data16
dec
test
fidivrl
fdivrl
cmp
test
adc
imul
stc
test
push
das
insb
faddl
jl
sbb
icebp
addr16
imul
out
aas
pop
push
scas
inc
pop
pop
outsb
add
mov
pop
sub
push
mov
add
mov
xchg
and
lea
push
push
scas
lcall
or
add
rclb
xchg
and
mov
push
pop
cmp
repz
jmp
dec
adc
imul
hlt
test
stos
jne
test
repz
push
push
and
xorl
ret
sarl
xor
es
pop
pop
lods
pop
stos
popa
jg
cli
jns
js
xchg
push
sbb
das
add
stos
ret
loope
lfs
push
pop
add
or
aad
mov
test
xchg
pop
add
push
push
mov
pop
loope
xchg
mov
push
push
or
sub
cwtl
decl
stos
mov
mov
divl
test
insb
adc
sbb
lods
incl
or
jmp
xor
inc
add
dec
jae
sahf
fsub
sub
cltd
pushf
aas
das
aam
cmc
hlt
cwtl
fdivl
fisttps
xchg
sbb
shl
push
add
fisttpl
inc
cmp
adc
xchg
loope
and
pop
xor
add
repz
jecxz
mov
sub
popa
jg
ljmp
xchg
dec
xchg
or
pop
jmp
popf
push
subl
fldcw
push
movsl
inc
lea
mov
adc
out
jle
lea
push
outsl
sub
cmp
xchg
pop
ss
lods
dec
sarl
xchg
push
xchg
add
rorb
pop
cmp
xorb
ret
std
and
push
inc
mull
stc
inc
jmp
inc
adc
xor
mov
jmp
addr16
jge
arpl
adc
outsb
jno
out
xor
rcll
outsl
adc
pop
jnp
daa
scas
or
insb
cmp
xchg
xchg
pop
out
mov
sbb
xchg
enter
roll
lods
adc
test
sbb
out
jnp
xchg
or
jnp
xchg
pop
xor
cmp
stos
cmpsl
cmpsb
repnz
cmp
outsb
imul
push
jae
jg
and
cltd
xlat
mov
jne
rolb
pop
adc
xor
nop
movsl
outsl
pop
test
jnp
subb
pop
or
xchg
pop
adc
loop
jo
cwtl
addl
repz
je
imulb
mov
inc
mov
add
add
fs
ja
push
jmp
sub
jne
test
adc
cmpb
in
and
lea
in
fldenv
push
mov
jo
ss
dec
fwait
sbb
sub
or
xor
push
outsb
push
adc
or
adc
in
popa
mov
outsl
xchg
jle
mov
mov
gs
popf
inc
nop
sbb
mov
rcrl
outsb
jno
out
sbb
rcll
outsl
and
icebp
xor
xlat
hlt
jge
xor
dec
inc
bound
mov
pop
hlt
inc
or
sub
dec
ljmp
jge
xor
cmc
push
dec
sbb
imul
fndisi(8087
xchg
xchg
sbb
stc
push
cmpsl
fldenv
and
mov
sub
pop
xor
adc
jp
or
xchg
jae
jg
push
add
push
adc
addb
jp
das
fimuls
jl
insb
or
pop
jl
adc
mov
add
scas
push
pop
sbb
inc
and
ret
mov
jns
scas
call
lock
inc
push
sub
mov
jae
clc
outsl
inc
push
mov
ljmp
mov
mov
int3
lods
sbb
or
jno
xchg
mov
out
inc
call
ds
add
or
dec
inc
lds
xor
jbe
xchg
xchg
dec
push
aas
sti
sub
mov
es
loopne
std
jb
cmp
and
push
xor
sub
stos
mov
das
pop
mov
push
mulb
xchg
mov
jno
repnz
fstpl
scas
xchg
in
inc
mov
movsb
pop
pop
add
jo
gs
out
adc
stc
mov
xor
out
pop
cmp
xor
lods
data16
mov
dec
adc
jne
xor
int3
imul
repnz
out
jne
insb
loope
sbb
dec
sub
sub
and
adc
ljmp
jecxz
and
in
es
fildll
mov
std
addr16
in
idivl
sahf
ljmp
or
push
loope
repz
cwtl
icebp
inc
pop
fiadds
test
and
xor
adc
dec
fisubrl
clc
aad
mov
push
test
in
mov
rcrl
jnp
inc
mov
adc
call
sub
scas
jb
xchg
fwait
jb
mov
cmp
je
mov
mov
pop
push
add
xor
clc
push
bound
popf
cwtl
ret
xchg
lea
xor
cmp
loope
sbb
push
cmp
je
dec
push
mov
inc
imul
je
ljmp
dec
dec
repnz
es
in
mov
das
cwtl
in
sahf
xor
jbe
js
pop
mov
mov
stc
sub
mov
push
pushf
test
dec
jmp
pop
test
pop
fbstp
fld
sub
lods
ja
lds
cmc
fs
fiaddl
popf
lcall
aam
lret
cwtl
mov
mov
and
ja
mov
insl
negl
jns
iret
jns
insl
add
insb
js
mov
outsb
negl
adc
adc
mov
mov
push
mov
xchg
movsl
mov
mov
push
fwait
sti
or
dec
test
loopne
push
cmpl
xlat
testl
mov
dec
sbb
or
push
aaa
fcompl
add
dec
jns
mov
or
fwait
stos
fsubl
push
dec
je
sub
je
push
pop
inc
mov
loopne
sbb
sbb
jecxz
jmp
in
jno
add
push
cltd
out
cmpl
inc
xchg
loope
pop
dec
xchg
push
sub
scas
dec
inc
push
and
and
leave
dec
push
mov
insl
push
jno
mov
dec
inc
pop
or
xlat
dec
inc
xchg
jmp
dec
push
enter
imull
aaa
pop
lcall
xor
lea
je
hlt
aam
push
jge
mov
add
xchg
pusha
mov
repnz
mov
push
aam
in
cs
iret
mov
xlat
push
shl
xchg
in
jne
mov
pop
pop
mov
clc
mov
ss
mov
mov
scas
add
fcmovnbe
push
adc
xchg
push
daa
invd
out
jmp
hlt
mov
mov
add
andb
or
sbb
and
and
cwtl
push
lods
push
pop
pop
js
pop
sub
pop
cmc
cmp
sub
stc
mov
sub
icebp
stc
add
cs
mov
hlt
incb
stc
cs
add
gs
int
sbb
or
dec
nop
shld
jge
shlb
mov
int3
faddl
dec
pop
das
push
test
es
roll
leave
popf
pushf
dec
push
push
pop
lds
lahf
push
ficompl
lods
sbb
sarb
shr
fstpl
xchg
ds
fiaddl
int3
xchg
pushf
mov
enter
xor
pop
in
sti
xor
jns
and
push
ljmp
push
lea
cmpsb
xor
sbb
push
pop
sbb
popf
adc
out
pop
inc
outsl
popl
js
add
popa
xor
test
lcall
in
fnstcw
adc
pop
sub
gs
and
imul
insl
insb
int
addl
sub
mov
dec
mov
add
dec
add
loope
sub
xor
xor
or
insl
les
pop
rcl
sub
mov
daa
ds
dec
fwait
xor
outsb
add
stc
sbbl
push
push
add
aas
stos
mov
shl
xchg
enter
xor
sub
xchg
pop
cs
jb
add
pop
mov
mov
mov
or
addl
mov
popf
pop
cmpsl
andl
dec
pop
dec
and
call
icebp
dec
add
jle
repz
sub
inc
mov
sti
mov
mov
lock
jbe
cs
fisubs
xor
test
outsb
adc
divl
mov
setg
popf
movsb
add
movsl
fdiv
aad
cs
cmp
xor
cmc
xchg
mov
pop
rorl
or
mov
mov
test
jle
pop
pop
pop
pop
mov
mov
cmc
fnstcw
adcl
loop
stc
sbb
into
push
inc
push
dec
pop
out
jns
mov
lahf
fadds
inc
and
adc
xor
repz
cwtl
pop
and
lret
std
ds
aas
ror
add
mov
push
faddp
xchg
inc
push
jp
sbb
test
dec
and
rolb
fadds
and
push
adc
pop
and
rorb
stos
lret
test
pop
out
cmc
mov
repz
jmp
cld
pop
fdivrs
adc
xlat
jbe
xchg
lods
xchg
stc
insl
lret
xchg
lcall
mov
in
and
xor
iret
pushl
out
or
js
xchg
in
sbb
stos
icebp
mov
mov
xor
addr16
cmc
add
and
add
dec
mov
mov
pop
movsl
xor
insb
push
pop
mov
fwait
out
push
stos
jle
inc
pop
stos
mov
outsb
imul
lea
addr16
dec
addb
fucomp
adc
xor
iret
jb
out
xor
divb
xchg
jge
insl
add
xchg
aad
adc
enter
pop
icebp
leave
mov
adc
inc
clc
pop
in
outsl
movsl
and
fdivs
nop
cld
jmp
dec
xor
cmp
daa
arpl
jl
mov
xchg
mov
inc
mov
test
inc
adc
insl
sarb
cltd
aaa
ss
mov
inc
pop
fstps
xor
lret
xchg
loopne
repz
std
repnz
jg
jge
push
iret
cmp
adc
jno
cmpsb
insl
repnz
mov
mov
fsubrs
pop
mov
and
enter
icebp
xor
ja
std
add
adc
lret
jle
ss
loop
sahf
push
dec
or
adc
imulb
das
shrb
push
inc
loopne
mov
mov
das
les
inc
add
sub
sbb
cwtl
and
push
test
test
lcall
aam
lds
test
jns
pop
xor
adc
mov
xchg
stc
jl
stc
subb
xor
add
lea
test
js
int
stc
les
xor
mov
imul
aad
jo
iret
xor
test
fnstcw
and
inc
dec
out
jg
imul
push
ret
pop
int
test
xchg
mov
inc
stos
sbb
and
cmp
sahf
add
cltd
inc
dec
addr16
aad
aad
xchg
fcoml
outsb
sbb
cmp
scas
pop
and
ja
in
incb
inc
sub
push
push
shlb
addl
xor
test
cmp
mov
dec
add
loop
sbb
mov
outsb
xchg
or
aad
out
shlb
rolb
imul
je
lods
rolb
jnp
cli
insb
push
mov
stos
pop
lds
push
fldlg2
xor
aas
out
icebp
popf
shrl
idiv
sub
sbbb
hlt
add
lods
push
test
filds
mov
cmp
repnz
js
xor
mov
imul
dec
pop
ret
adc
aas
mov
pop
fldcw
sub
or
ljmp
pop
mov
xor
push
dec
sub
sub
loope
push
mov
sub
inc
push
xchg
cmp
mov
add
out
orb
pop
and
in
icebp
data16
dec
imul
xchg
mov
dec
lret
add
shll
or
jns
cmp
jecxz
push
add
and
inc
outsb
repnz
jo
dec
push
rorl
out
addr16
data16
mov
pop
xor
aad
mov
push
js
adc
jl
xchg
and
subl
push
xor
xchg
inc
push
or
sub
in
stos
dec
mov
arpl
dec
daa
rol
int
fsubrl
aaa
lcall
loopne
adc
in
outsl
popa
call
enter
out
sti
or
pop
sbb
sbb
push
jmp
into
jle
data16
and
je
pop
aad
leave
pop
addr16
aam
cmpsl
adc
and
jmp
and
dec
cmp
outsl
push
jp
jl
pop
jle
xlat
pop
pop
mov
enter
jnp
nop
pop
imul
repz
js
inc
arpl
mov
xchg
negb
dec
rclb
mov
xlat
cs
xchg
faddl
sbb
adc
rcl
xor
dec
mov
dec
xchg
adc
lods
pop
rcr
out
loopne
jae
ds
stos
sub
into
and
fdivrl
jle
loopne
icebp
lods
push
pop
and
aad
sbb
pushl
and
enter
loopne
insb
inc
jecxz
loopne
idivl
add
imull
cmova
adc
popa
or
in
not
add
pop
andl
clc
mov
or
lock
scas
add
mov
xchg
pop
mov
pop
inc
pusha
stc
jge
insb
xchg
and
imul
repnz
scas
mov
repnz
rorl
push
imul
stos
jl
ja
jb
pop
bound
repnz
adc
lods
jnp
xor
or
jge
adc
movsl
out
mov
sub
mov
mov
jl
dec
clc
xor
add
cmp
lods
test
sbb
rol
xor
add
sub
test
adc
out
ja
mull
insb
inc
xor
scas
or
xor
fistpll
jl
adc
mov
jecxz
rorl
ret
pop
mov
das
push
lret
test
push
or
cs
rorl
push
add
sahf
xchg
sub
lret
addr16
mov
xchg
or
sub
negb
xor
jge
add
mov
dec
jb
jge
cld
xor
scas
nop
dec
fwait
pop
imul
mov
sub
sub
dec
call
adc
enter
inc
test
dec
jns
leave
xchg
icebp
push
pop
icebp
mov
cmpsl
out
lods
popf
mov
flds
dec
bound
push
hlt
mov
jo
outsb
pop
jl
fwait
add
fldcw
xchg
mov
jne
jmp
arpl
js
test
cmp
inc
adc
arpl
insb
enter
mov
mov
addb
ret
and
xchg
pop
or
inc
sbb
rcll
mov
outsb
jp
and
and
lods
jns
adc
lea
outsb
lcall
mov
int3
mov
dec
ss
pop
rolb
icebp
jnp
imul
addb
dec
sahf
jl
mov
adc
cmp
movsl
mov
jmp
mov
les
aam
mov
mov
sbb
pop
inc
adc
and
nop
or
jno
les
jb
sbb
gs
xchg
mov
dec
test
dec
imul
fnsave
mulb
push
adc
add
sbb
push
arpl
mov
cmc
out
ret
mov
fistps
js
push
ss
adc
shrl
subl
daa
xor
or
push
mov
jecxz
or
aaa
jle
pop
cld
or
nop
jmp
aaa
cmp
adc
mov
gs
or
shll
aaa
iret
mov
mov
lcall
lcall
insl
mov
adc
mov
dec
dec
aad
push
mov
mov
xbegin
xor
movsl
test
imul
mov
insb
inc
pusha
inc
sbb
mov
rcll
pop
sbb
sbb
rcl
dec
cmpsb
syscall
movsb
xor
mov
dec
xor
mov
inc
push
xchg
out
dec
cs
dec
adc
dec
popa
jb
add
hlt
sub
dec
mov
stos
mov
icebp
imul
lahf
std
add
imul
pop
jno
xchg
loope
sub
ja
adc
fs
jbe
mov
in
xor
fstl
cmp
xorl
add
arpl
imul
adc
insl
ljmp
sarb
repz
cmp
push
pop
push
test
movsb
add
jecxz
mov
clc
mov
and
mov
xor
and
mov
or
push
push
and
mov
or
popf
ss
mov
ja
call
and
dec
pop
mov
sbb
sbb
repz
rcrl
dec
clc
lock
inc
mov
or
imul
push
in
insb
xor
adc
or
jb
roll
fnsaves
xchg
push
push
inc
in
xchg
adc
lods
mov
aam
stc
inc
inc
jg
jno
and
int3
fistpl
in
rsqrtps
ret
flds
push
xor
loop
addr16
add
xchg
mov
popa
pop
stos
mov
cwtl
arpl
rorb
dec
add
js
stc
cwtl
xchg
repz
push
sub
rcrl
fmuls
xchg
push
dec
and
dec
cli
or
inc
fadds
push
mov
lods
cmc
repnz
and
sarl
pop
leave
or
dec
idivb
sub
cmp
sub
clc
inc
sub
movsl
cmp
mov
or
inc
dec
lds
sbb
push
into
in
sbb
sti
jnp
into
cmp
adc
jle
cmc
dec
sarl
dec
mov
pop
and
push
mov
shlb
outsb
cmp
imul
dec
mov
lods
insb
xor
aaa
jmp
jle
out
hlt
cmp
adc
or
mov
dec
ret
mov
mov
adcb
mov
fdivrl
inc
sbb
and
push
cmpsl
sub
insl
pop
scas
or
mov
push
idivl
aam
idivl
add
loope
push
add
fildl
xor
sar
sti
jge
dec
dec
in
das
movsl
stos
pop
push
pop
jns
jno
cmp
or
xchg
cltd
js
mov
xchg
push
xchg
push
xor
xchg
std
jno
mov
imul
mov
push
in
faddl
in
push
push
pop
arpl
into
jp
test
daa
cmp
xchg
and
into
jecxz
xor
fwait
inc
jae
cmc
mov
mov
adc
inc
inc
jo
out
cmp
test
sbb
jbe
loope
cmp
mov
cmpl
inc
cmp
fildl
xchg
test
xor
cmp
mov
inc
imul
cmp
inc
mov
pop
dec
stc
rcr
xchg
loop
lret
inc
cmp
sbb
pop
mov
inc
adc
mov
mov
cmp
jns
inc
adc
add
movsl
mov
sub
jno
mov
ja
dec
inc
sbb
in
jmp
inc
xchg
cmc
dec
outsl
dec
and
sub
push
dec
push
dec
mov
dec
pop
mov
mov
stc
jbe
pop
test
faddl
add
pop
adc
or
je
sub
jae
fnstcw
not
jb
insl
ds
dec
jmp
lods
ss
pop
nop
sub
inc
aad
adc
sbb
inc
test
add
int3
inc
push
xor
mov
movsl
inc
jle
push
dec
jge
mov
fsub
pop
in
test
adc
sub
sub
jnp
jg
adc
nop
and
sub
int
or
sbb
mov
andb
push
xchg
xor
pop
inc
jae
jae
dec
sbb
scas
rclb
sbb
sub
test
icebp
aas
sahf
or
jp
jb
sahf
cld
xor
add
push
out
xchg
xchg
xor
sub
and
mov
jb
roll
aad
test
push
mov
pop
xchg
sub
sub
daa
mov
out
clc
loop
adc
stos
fnstsw
stc
pusha
dec
fs
jae
enter
mov
clc
sbb
pop
dec
push
sub
add
int
add
iret
dec
and
push
test
in
sub
add
adc
xchg
leave
daa
test
in
jge
push
xchg
mov
aam
sbb
xchg
push
js
mov
cmp
lods
stc
push
mov
in
pushf
mov
fstl
cmp
xchg
or
pop
subb
pop
inc
xor
lcall
enter
fimull
outsb
repnz
aaa
adc
cltd
sbb
xor
cmp
sahf
test
jno
popf
sahf
test
in
xchg
call
popa
push
mov
xchg
jg
inc
inc
push
orb
repz
cmp
push
push
mov
ret
mov
mov
jo
mov
pop
lahf
push
and
and
out
ret
rcrl
cmp
sarb
cli
sbb
rolb
dec
mov
add
movsb
xchg
movsb
fs
jmp
jnp
inc
mov
stos
out
aas
dec
repnz
icebp
add
aas
mov
dec
imul
cmp
pop
xchg
cmp
and
xchg
int3
xchg
mov
cmc
arpl
call
out
mov
mov
stos
aas
sub
movl
adc
push
cli
aad
pushf
dec
mov
pop
push
adc
xchg
lock
les
jns
hlt
jg
hlt
negl
and
movsl
push
mov
adc
subb
pop
shlb
enter
cs
jno
fstpl
or
inc
pop
mov
or
incb
push
mov
lods
cmp
xchg
scas
xchg
xlat
lock
add
insl
stos
push
push
int
inc
cli
jmp
orb
or
pushf
outsb
ss
test
cmp
aaa
mov
mov
test
out
inc
pop
push
cli
pop
dec
cwtl
sub
fdivrs
dec
into
mov
sahf
jb
stos
stos
cmpsb
mov
push
mov
push
sub
jae
sbb
push
jnp
in
jno
ds
adc
nop
lds
add
xchg
dec
clc
aas
hlt
stos
pop
xor
adc
movsb
mov
dec
cmpsb
stos
or
ret
jb
mov
fimull
lea
mov
jecxz
loop
xchg
add
repz
ds
cld
xor
add
dec
test
add
lcall
xchg
cld
xchg
fimull
imull
pusha
push
insb
mov
sbb
mov
test
lcall
push
lds
xor
or
xor
mov
adc
fwait
inc
out
inc
xchg
push
xorb
loopne
cmp
adcl
xchg
xchg
subb
iret
jne
cwtl
mov
test
testl
xor
mov
dec
xor
push
bound
xchg
mov
loope
dec
sbb
sbb
stc
xor
lods
insb
fsubrs
repz
mov
sbb
lds
mov
call
push
pop
je
outsb
cmp
nop
sub
mov
push
pop
inc
adc
and
or
xchg
ficomps
rcll
jecxz
lea
pop
push
adc
inc
mov
push
or
loope
jne
or
jecxz
icebp
jl
adc
inc
jb
scas
xchg
mov
cltd
adc
and
cmp
pop
arpl
push
push
mul
ret
xor
pop
xchg
push
test
rolb
jp
fisubrs
mov
sbb
cmp
shl
xor
inc
lcall
or
inc
push
sti
loope
sbbb
add
clc
push
dec
mov
fsubr
inc
xor
ss
pop
ss
setbe
faddl
mov
and
cmp
in
mov
cmp
mov
int
xchg
pop
dec
xlat
and
shrl
loopne
add
and
xor
testb
sbb
mov
push
repz
xor
popl
ret
and
lock
rolb
push
sub
mov
fisttpll
jo
and
pusha
cmc
push
pop
add
jo
sbb
jmp
xor
out
mov
xchg
js
stc
and
xor
push
and
and
and
sete
dec
cli
mov
stc
pop
pop
out
orb
and
jne
mov
jg
aas
mov
mov
jg
clc
imul
or
aam
inc
loope
cmpl
add
cmp
and
mov
shl
cmp
addl
mov
jo
repz
loope
sbb
dec
mov
test
cmp
add
shl
sbb
arpl
xor
test
jl
mov
cwtl
jp
jne
aaa
fistpll
xor
lds
leave
mov
lods
je
jp
in
or
cmp
and
test
repnz
jae
push
movsb
fsubl
sub
out
mov
sahf
sbb
xlat
std
or
je
bound
cmp
dec
jecxz
ljmp
sub
gs
pop
daa
mov
mov
xchg
imul
jge
loopne
int
mov
arpl
rorl
push
movsb
adc
lods
push
rcrb
mov
addr16
imul
xor
loope
or
shll
and
sbb
popf
lcall
stc
adc
mov
testl
pop
xchg
mov
mov
cmp
nop
outsl
pop
sbb
arpl
add
cld
movsb
mov
in
outsl
sub
mov
cmp
sub
jmp
pop
jnp
xchg
xchg
push
rcll
out
pop
xchg
sahf
mov
xor
fs
scas
lock
aam
xor
mov
xchg
stos
xor
aaa
and
sarl
pop
xor
mov
sbb
fstl
lret
adc
lds
movsl
cmp
and
pop
jl
add
clc
lret
xor
or
inc
push
sbb
cs
into
js
jge
adcb
aas
jno
dec
std
mov
inc
std
mov
push
shrb
jno
sarl
pop
ljmp
icebp
mov
fistl
inc
movsl
out
inc
icebp
pusha
pop
push
dec
xor
daa
insl
or
leave
adc
lahf
dec
or
xor
jmp
mov
cmc
add
fs
dec
mov
pop
push
lea
xchg
ret
cli
lds
add
jae
jecxz
jo
ret
ja
cmp
jno
lret
mov
adc
or
pop
aad
jno
and
push
into
outsb
fstpt
adc
mov
testb
and
es
pop
dec
jno
in
out
jmp
out
lcall
mov
popf
and
daa
or
push
or
or
xchg
push
jno
int
sbb
jb
jg
xor
int3
mov
xchg
push
add
jle
gs
sub
ds
int3
xchg
sub
out
enter
sbb
fnstenv
ds
ljmp
addl
or
dec
and
push
imul
cmpsl
or
repz
movsl
mov
ja
hlt
jae
mov
subl
ss
subb
out
add
mov
add
shrl
sbbb
sbb
mov
pop
adc
adc
sub
inc
test
push
and
fsubrl
fstl
addr16
jge
cmp
inc
inc
sub
jge
movsb
mov
inc
lods
xchg
lods
sub
xchg
aaa
insb
jle
pop
mov
xor
mov
xor
lcall
jmp
ja
adc
xor
inc
cltd
jno
push
pop
xor
in
xor
dec
push
add
sub
shlb
sbb
or
aam
pop
or
mov
mov
popa
mov
jb
jbe
push
fcmovb
test
cmc
stc
jge
ss
xchg
dec
divb
push
stc
mov
fnstsw
subb
add
nop
inc
jno
mov
ds
mov
outsl
jl
and
xchg
xchg
inc
add
pop
jbe
sarb
add
dec
subl
les
push
ss
jae
jle
adc
push
dec
pop
push
pop
or
sub
sbb
leave
cmp
pusha
add
cmp
addl
sysenter
jle
popa
pop
outsb
lds
mov
orb
enter
pop
imul
stc
ja
push
dec
lock
xlat
cli
and
arpl
rcrl
repz
sbb
jae
or
insb
inc
and
mov
and
out
dec
adc
lods
push
in
mov
sti
pop
pushf
test
push
pop
idivl
inc
adc
lods
fsubrs
nop
pop
mov
push
leave
in
and
lret
andl
mov
mov
jle
lret
xchg
std
stos
jge
notl
daa
pop
roll
cmc
xchg
or
pop
xchg
lods
push
xor
fsubrl
push
mov
mov
loopne
adc
addr16
shll
pop
push
sbb
fdiv
idiv
and
sti
in
push
mov
or
test
cmp
xor
repnz
push
js
or
rclb
mov
add
jo
scas
sub
stos
adc
scas
add
int
mov
and
cmpsl
xchg
mov
into
loope,pn
xor
add
mov
and
cmp
aas
and
jno
inc
fdivs
xchg
mov
mov
inc
add
sub
pushf
push
jge
jno
scas
jmp
and
sub
into
xchg
xchg
jnp
fs
xor
rorb
push
aad
popf
mov
inc
push
and
adc
or
ss
add
repz
xchg
cltd
out
cmp
movsl
js
loope
xorl
insl
rcrl
xlat
sbb
or
dec
and
lea
fiadds
pop
ss
jo
push
mov
sub
add
sub
inc
inc
test
add
xor
jno
add
subl
dec
xchg
cmp
iret
aaa
xchg
into
lock
cltd
cwtl
xchg
xchg
sub
ja
xor
aad
inc
and
repnz
cmpsl
mov
push
jg
pop
mov
test
rcll
loopne
dec
sub
out
in
pop
dec
mov
stc
mov
lea
and
fcmovnu
mov
aaa
pushf
lea
std
jns
int
je
jb
jno
std
sub
inc
aam
mov
aas
xchg
pop
je
inc
xchg
roll
gs
push
jae
mov
fs
mov
outsl
fs
lds
and
mull
rclb
out
flds
dec
popa
sbb
repnz
ror
idivb
jle
adc
lret
mov
xchg
add
dec
push
mov
jo
add
push
mov
int3
xor
sub
sbb
mov
shr
je
icebp
div
imulb
xorb
imul
out
mov
mov
xchg
sub
fwait
xchg
and
cwtl
push
add
pop
in
hlt
xor
cld
addr16
pop
inc
out
lods
xor
js
jnp
out
fstpl
adc
int3
fcoml
out
and
leave
xchg
pusha
inc
loope
ds
sbbb
push
push
testl
imul
mov
pop
popf
inc
fcomps
xor
pop
add
push
pop
xchg
or
push
test
cmc
stc
test
aam
jge
scas
xor
shll
cmp
adc
int3
jge
and
int3
jne
ja
push
in
dec
adc
and
lea
outsl
pushf
hlt
cmc
sub
scas
inc
push
fistpl
stos
xor
out
inc
adc
adc
xchg
fdivl
cmpsl
imul
inc
add
in
popa
rcrb
pop
push
aas
dec
mov
dec
xchg
std
sub
mov
daa
fnstsw
cmpl
les
fnstenv
test
rorb
add
jb
in
dec
in
mov
fsts
ret
insl
and
cwtl
rcr
dec
into
push
pop
jg
movsb
cmp
jbe
aam
into
cmp
push
es
mov
repnz
sbb
andl
sub
cmp
xchg
addr16
mov
inc
mov
pop
js
orb
dec
test
jbe
cmp
call
xchg
pop
nop
hlt
mov
pop
mov
inc
pop
pusha
cmp
and
xchg
mov
or
mov
aas
adc
std
imulb
pop
xchg
scas
in
mov
xor
das
inc
aas
sub
dec
cmp
cmp
popa
inc
movsb
insl
inc
inc
outsl
jge
cmpsl
sub
out
shlb
orl
inc
outsl
xor
push
vmovlps
outsl
rcrb
adc
stos
adc
push
dec
outsl
mov
ret
xor
int
notl
dec
pop
pop
sub
imull
ret
daa
cmp
pop
or
hlt
push
neg
fs
pop
mov
or
inc
inc
or
pop
add
cs
or
push
lock
testb
mov
fsubrl
jp
dec
and
out
lcall
lret
and
xor
pop
xor
fldl
lods
rorb
pop
loopne
movsb
and
sbb
cmp
sub
push
mov
inc
pop
mov
insl
sub
jo
fnstsw
push
inc
xchg
cs
sub
pop
pop
scas
shr
jb
out
call
inc
mov
fsubrp
sbb
mov
push
mov
out
lods
repnz
inc
jns
iret
pop
xchg
fdivrs
rorl
or
test
fldl
mov
stos
bound
jmp
fsubr
loopne
push
dec
jae
push
pop
cmp
mov
sahf
mov
xchg
xchg
mov
pop
dec
push
xor
adc
insl
xchg
push
or
inc
sub
arpl
pop
push
popf
lahf
xchg
xchg
cmp
addr16
sbb
dec
scas
lea
jnp
sub
xchg
outsb
dec
dec
popf
cmpl
pop
mov
pushf
pop
pop
cmpsl
add
mov
test
xrstor
sbb
stos
xchg
movsb
rorb
call
out
pop
loope
or
pop
cmp
scas
push
jg
inc
int
mov
call
imul
mov
aam
loope
pushf
xchg
fists
pop
xorl
bound
pop
mull
dec
pop
xchg
and
dec
sti
outsl
mov
jp
into
jecxz
or
push
into
mov
sahf
fisubl
push
push
rcr
mov
lea
outsl
mov
pop
fldenv
xchg
dec
lea
mov
or
sahf
je
or
mov
xchg
push
mov
out
out
dec
xchg
aas
mov
roll
adc
add
and
mov
and
fwait
outsb
addr16
insb
push
sub
ja
xlat
insb
jnp
sbb
das
ret
lods
dec
adcb
test
pushf
out
test
dec
adc
dec
push
addr16
aaa
and
shrb
loope
sub
movsb
aaa
mov
xchg
mov
cmc
push
loop
mov
push
mov
inc
or
cmpsl
sbb
into
xchg
pop
outsl
and
jge
int3
inc
pop
insb
rep
dec
mov
push
pop
pop
push
dec
sbb
andl
xchg
ljmp
add
fcomip
adc
lods
aas
push
sub
add
rcll
xchg
sbb
aad
loop,pt
lret
ret
ret
adc
icebp
stos
pop
mov
adc
dec
pushl
into
xchg
popa
ffree
xor
adc
negl
lea
sbb
imul
addr16
sti
pop
pusha
xor
test
xchg
and
pusha
shlb
add
mov
popa
jbe
add
and
lcall
aaa
stos
push
dec
add
aaa
pop
pop
cmp
popf
adc
inc
cld
pop
cmpsl
nop
fcomi
test
loop
out
mov
or
jg
add
sarl
js
fisubrl
ss
je
sub
cmp
icebp
xor
dec
jno
loop
popa
arpl
cmpsl
inc
xor
xor
imul
insl
ds
xchg
jb
and
bnd
popa
or
outsl
and
mov
adc
daa
inc
test
dec
xchg
push
stos
mov
cmpsb
in
and
dec
inc
or
push
adc
jl
ljmp
int
popf
xchg
mov
mov
jg
sti
aas
aas
nop
iret
add
sub
sbbl
adc
mov
mov
lock
inc
sbbl
gs
pop
sbb
gs
shr
int3
pop
loopne
js
push
and
jg
cmpsb
or
hlt
and
or
sbb
lret
cmp
push
movsl
cmp
addr16
and
mov
mov
fadds
adc
lods
sahf
testl
sbb
mov
aad
xlat
push
pop
adc
xlat
sbb
or
cmp
mov
xchg
les
lods
aaa
and
adc
aaa
ret
xor
shrl
dec
cmc
imul
call
out
mov
pop
mov
cmp
xor
pop
es
test
jne
addb
cmp
cmp
cmp
mov
push
ds
ds
jge
sbb
gs
cmp
stos
enter
or
adcb
add
test
popa
and
jo
push
stc
mov
inc
leave
xor
mov
mov
jns
andl
mov
sbb
and
cmp
push
xchg
call
mov
out
pusha
jp
rolb
cmpsb
enter
mov
cmp
push
out
dec
out
and
cmc
out
test
jne
add
add
jno
lcall
out
aaa
jae
mov
ret
test
xchg
aad
fidivs
sub
dec
stos
or
loop
inc
jecxz
popa
test
or
je
outsb
or
rcl
cmp
sbb
mov
inc
xchg
xchg
loopne
or
inc
xchg
stos
addr16
push
or
cmp
fcomps
jae
dec
push
ja
ss
clc
sar
push
inc
in
inc
lods
test
xchg
aas
pop
and
gs
adc
adc
outsb
sahf
cmp
icebp
outsl
and
and
insl
push
lock
std
mov
leave
push
mov
pop
ljmp
in
aad
push
mov
sbb
adc
aad
pop
mov
adc
xchg
loope
fildl
mov
mov
inc
pusha
enter
push
mov
add
cmp
test
add
push
or
test
xor
mov
add
leave
cli
push
dec
add
test
mov
xor
add
mov
cmp
adc
mov
test
mov
xchg
nop
push
jmp
lret
divl
repz
outsl
dec
pop
sub
inc
mov
fbstp
jne
arpl
push
test
push
mov
sub
jp
push
test
and
jp
insl
adc
jg
jmp
jns
jno
add
inc
xor
adc
cmc
or
dec
adc
mull
xor
mov
xchg
add
nop
fwait
add
jno
xchg
mov
add
int
iret
push
or
jno
outsl
sbb
add
in
pop
test
inc
jle
push
mov
sbb
dec
xchg
jle
cmpsb
fiaddl
or
inc
jmp
adcl
lahf
scas
lahf
into
lcall
popa
push
sbbl
je
or
lahf
rol
jnp
test
inc
jo
fcoml
sub
addb
sbb
sbb
pop
inc
gs
adc
or
out
movsb
imul
mov
sub
dec
and
enter
stos
loope
and
jmp
jp
mov
pop
inc
les
daa
pop
jmp
jmp
mov
xchg
mov
cmp
push
dec
push
sbbl
cltd
push
mov
call
fistps
fwait
dec
inc
mov
das
jg
sub
jne
lea
or
xlat
sbb
xor
shll
ja
dec
out
mov
jg
push
pusha
adc
fnsave
dec
mov
lcall
cmp
sbb
push
rcr
dec
cmc
adc
popa
rcrb
lock
nop
pop
mov
sbb
xchg
push
xchg
push
lret
aam
jle
pop
enter
push
cmp
xchg
xor
in
sbb
xchg
scas
adcl
dec
mov
or
jno
inc
out
push
test
adc
jnp
pop
xchg
push
movsl
mov
inc
and
orl
je
into
jg
cmp
dec
dec
xchg
sub
out
xchg
sub
mov
fwait
adc
cs
lea
gs
cltd
mov
scas
adc
adc
xor
mov
es
out
cli
in
lahf
movsb
inc
sub
push
shl
imul
repnz
scas
std
popf
gs
push
mov
cs
int3
rcr
inc
bound
lds
lods
push
pop
dec
pop
adc
pop
fs
cmp
jo
cmpsb
fdivl
mov
and
ret
pop
sbb
pop
js
out
gs
jecxz
lahf
fmull
fistpll
and
pop
fidivrl
icebp
sbb
sbb
adcl
push
test
sub
inc
test
pop
jle
jmp
scas
aam
fstpl
in
push
push
mov
stc
pop
push
push
hlt
or
push
push
mov
xchg
xorl
fstpt
xorb
fldcw
out
popl
sub
lret
xchg
sti
xlat
ja
inc
mov
les
jae
fisttpl
mov
push
sub
sahf
dec
pusha
fldl
pop
inc
sbb
dec
jl
inc
jbe
xchg
push
xchg
out
ds
jg
hlt
jns
xor
sbb
cwtl
iret
inc
js
pop
ficoms
jne
sub
jp
cmp
fcom
adc
rolb
je
xor
stos
pushf
mov
aad
lods
push
xchg
hlt
adc
adc
xlat
in
jmp
test
imul
dec
jg
inc
icebp
lahf
cwtl
out
add
inc
inc
xchg
insb
mov
jnp
xchg
test
repz
adc
movsb
cmpb
insb
in
mov
xor
arpl
in
ja
aaa
cltd
negb
adc
je
jb
inc
in
fcomps
inc
push
cmp
adc
cmp
testl
jmp
cmpsb
pop
jns
shl
or
push
mov
addr16
sub
dec
sbb
jbe
add
fwait
mov
xchg
stos
outsb
push
push
in
push
das
lods
and
pop
mov
scas
xchg
das
cli
and
inc
sahf
adc
sarl
xor
in
jns
roll
adc
dec
add
mov
mov
std
setne
and
jno
or
sbb
loop
xlat
rcr
and
inc
ljmp
hlt
xchg
daa
xor
xchg
jnp
or
mov
js
mov
scas
xor
inc
daa
sbb
rorl
push
and
jl
pop
adc
daa
stos
shlb
pop
mov
shll
push
jno
loope
pusha
pop
ljmp
dec
mov
mov
test
cli
faddl
lock
pop
aas
pop
mov
mov
or
inc
sub
push
xchg
insl
dec
and
scas
rcl
and
lock
pop
cltd
insb
cld
imul
inc
sti
arpl
adc
pop
aas
jb
sbb
nop
adc
dec
test
sahf
shll
sbb
out
lea
pop
icebp
sub
stos
cmp
xor
inc
das
popa
int
mov
lcall
pop
jnp
dec
add
lock
movsb
cltd
dec
insb
xor
mov
das
inc
inc
call
out
cmp
sti
mov
xchg
mov
cmpsl
cmc
mov
jae
add
xchg
lods
lock
divb
pop
cmp
aad
loop
ja
pop
ret
add
rorl
sbb
mov
addr16
cmp
fistpll
mov
and
jae
jno
jg
mov
sti
push
or
lock
test
inc
push
mov
mov
mov
or
outsl
sarb
mov
push
loope
mov
imul
dec
cs
dec
jge
fists
xchg
lahf
pop
mov
jno
js,pn
add
movsl
push
mov
mov
sti
inc
sbb
cmpsl
insb
enter
mov
imul
inc
lds
sub
fistl
cmp
mov
shl
gs
or
loop
sbb
add
cld
push
pop
jno
mov
rcrb
rol
dec
adc
or
enter
push
scas
sub
enter
inc
popf
push
nop
sub
shrl
pop
dec
std
jle
int
neg
mov
aam
cmpb
push
mov
cmpsb
mov
flds
and
or
test
cmp
xchg
jmp
xchg
roll
mov
inc
dec
push
andb
loopne
mov
inc
xorl
aaa
pushf
xor
push
js
mov
inc
loope
in
jns
and
adc
and
cmp
cltd
in
repz
test
mov
mov
popa
and
fisttpll
cmpsb
outsl
movsl
addb
aaa
mov
and
es
daa
rcrl
push
shll
and
dec
sbb
mov
in
fcmovb
mov
push
jecxz
xchg
sar
adc
sbb
pop
pushf
xor
mov
aas
scas
jle
movsb
mov
popa
jmp
sub
bound
mov
in
sub
add
jnp
sub
aam
ljmp
ficomps
mov
and
mov
jnp
arpl
jns
mov
add
add
sub
and
call
cmpsl
push
imul
mov
test
pop
sub
pop
in
ss
rol
mov
cmc
into
xchg
nop
or
jp
andb
pop
mov
jne
repnz
scas
dec
fildll
aaa
out
mov
ss
sarb
fdivr
out
cmp
and
adc
add
dec
in
mov
loopne
push
stc
sub
scas
and
or
addr16
test
pop
repnz
sbb
cmovne
add
jne
imul
adc
mov
pop
pop
fldenv
sbb
fwait
sbb
pop
int
fwait
insb
adc
mov
aas
sbb
aas
into
jl
or
icebp
popa
xlat
jne
or
or
jns
xor
xor
jnp
pop
leave
mov
jo
out
loopne
mov
fs
test
sbb
popa
fidivl
and
jecxz
sbb
jp
xchg
push
out
mov
jne
insl
jb
sbb
notl
sahf
into
jle
into
mov
mov
push
cmp
aad
jg
xchg
test
mov
aam
sbbb
aaa
pop
mov
ret
andb
sbb
in
add
xchg
call
cli
sub
cmpsl
xchg
push
rol
xlat
mov
popf
cmc
sti
xor
andl
jnp
jnp
imul
xor
js
dec
movsl
stc
sbb
jne
add
mov
divb
jnp
shrb
aaa
push
stc
negl
cmc
jp
cwtl
std
stos
xor
stos
cs
repz
inc
jge
xchg
mov
scas
pop
dec
jp
pop
fcoms
push
mov
notb
int
add
arpl
bound
or
test
mov
jno
jnp
loope
mov
mov
jb
mov
xchg
dec
xor
inc
xchg
pop
test
mov
jns
mov
xlat
push
push
sub
scas
adcl
dec
sbb
lea
add
xor
rcl
stc
sub
push
cmp
in
add
mov
dec
jb
mov
push
ret
and
mov
loopne
lcall
pop
call
cs
and
lret
cmpsl
decb
mov
jp
xor
push
dec
imulb
subb
jge
cmp
nop
nop
cmp
push
push
and
xchg
nop
test
mov
lds
sahf
lret
inc
repz
push
mov
push
xchg
xor
lods
in
cld
hlt
loope
fs
inc
sbb
inc
push
pop
fs
dec
sbb
sahf
jne
xchg
test
bnd
mov
sbb
pop
cmpb
lods
push
popa
push
cltd
aas
push
sbb
cmpsb
ss
rolb
xchg
scas
mov
and
add
add
cltd
inc
jae
jl
les
ds
mov
sbb
and
xchg
movsl
or
lret
adc
sub
repnz
dec
hlt
cld
div
xchg
sub
xor
ljmp
jl
lock
in
sysenter
addr16
loopne
jns
dec
mov
push
lea
out
xchg
adc
add
loope
dec
stos
xor
decl
rorb
jae
movsl
dec
andb
nopl
inc
mov
cmp
xchg
andl
add
les
mov
fiadds
jno
add
sub
or
fistpll
mov
popa
adc
xchg
and
push
adc
jg
xchg
lea
ljmp
pop
or
ficomps
and
lock
inc
roll
jge
aad
xor
dec
pop
push
pop
fcmovne
test
fsubr
cmp
inc
imul
popa
test
insb
add
daa
icebp
xor
push
add
dec
jg
std
push
or
and
push
jmp
test
stos
push
or
push
fdivrl
mov
lcall
stos
cmp
popf
pop
cltd
mov
in
dec
sbb
sub
fisubl
jl
sub
test
jb
scas
stos
mov
inc
or
push
pop
inc
adc
adc
add
add
dec
lods
cmp
dec
add
jle
adc
adc
leave
addr16
xor
jo
lea
shll
pop
add
sbb
push
fists
fwait
icebp
rclb
mov
cmp
notb
js
scas
pop
mov
sbb
dec
and
sbb
jnp
aas
xor
sbb
test
imull
inc
xchg
jb
sub
adc
mov
xchg
xor
in
sbb
cmc
adc
or
xor
inc
shlb
pop
push
cs
out
or
jno
mov
xchg
outsl
iret
inc
push
add
aas
xchg
dec
add
push
in
jne
push
test
add
xor
pop
xor
aad
or
or
sub
fdivrp
fwait
jae
sub
imul
push
pop
sbb
lds
bound
pop
fdiv
pop
movsl
mov
mov
popa
xor
lahf
mov
into
xorl
xchg
jno
pop
in
imul
es
popl
inc
into
int3
sub
xor
and
ds
mov
sub
dec
out
xchg
out
les
movsl
jmp
cmp
dec
js
inc
scas
cmpsb
jbe
mov
dec
loope
cmp
loope
sub
outsl
mov
mov
xchg
or
fs
pusha
fdivrl
push
lea
mov
mov
nop
mov
movsl
mov
xchg
pop
push
xchg
negl
cmp
xchg
push
fnstcw
sbb
shrl
movsl
notb
fs
fisubrl
call
rorl
fxch
mov
roll
cmp
add
int3
int
cmpsb
rol
bound
sbb
test
xor
imul
movsl
test
pop
loopne
jns
adc
fidivrs
push
ss
popf
imulb
jp
push
jne
cmp
mov
mov
aam
lods
mov
icebp
adcb
das
mov
test
movsb
mov
jne
sbb
in
daa
mov
add
fwait
icebp
testl
iret
push
push
ret
lods
xchg
xor
adc
mov
gs
and
push
dec
int
arpl
xor
mov
adc
sbb
leave
add
aas
int3
mov
inc
lret
lret
dec
lea
out
subl
lods
jl
cmp
outsl
jb
xor
mov
outsl
cmp
test
popa
lret
inc
lods
and
xor
arpl
pop
popa
decb
lret
jecxz
popf
bound
cli
std
sbb
fcomps
fisttps
pop
mov
or
pop
xchg
jmp
dec
scas
jb
addr16
push
dec
push
and
bound
mov
test
inc
dec
das
or
enter
fimull
rcrb
or
xor
push
adc
xor
sti
fstl
icebp
or
bound
popf
lock
xchg
mov
jp
xchg
xchg
sub
lea
jp
call
mov
arpl
sbb
mov
sarl
inc
popa
mov
jbe
dec
sbb
adc
fs
pop
cltd
test
mov
out
adc
cwtl
pop
add
adc
sbb
push
dec
in
sub
cmp
add
dec
inc
mov
movsl
jne
xor
inc
add
int3
gs
xor
outsb
jno
bound
mov
inc
call
call
testb
cmp
in
pop
cmp
lock
mov
imulb
mov
xor
inc
mov
jg
mov
add
mov
mov
out
dec
adc
jbe
popf
push
lcall
push
cmp
insl
xor
mov
push
push
and
mov
push
jp
out
jecxz
dec
fcmovnb
jmp
jo
dec
mov
mov
dec
aaa
jne
jmp
inc
lcall
pop
or
mov
jnp
ds
loope
pop
mov
sub
adc
sub
mov
adc
adc
ret
aam
or
bound
in
lcall
cwtl
dec
lods
adc
lods
subl
mov
fwait
out
mov
xor
jns
rcrl
cmc
mov
js
inc
push
sti
mov
or
addl
jae
jmp
and
in
mov
shll
pusha
je
int
mov
gs
fs
adc
xchg
dec
lods
cmpl
inc
int
ud0
jns
rcrb
and
pusha
inc
push
mov
ja
pop
pop
jl
stos
cmp
popf
and
lret
sub
addl
aad
or
sub
inc
sub
cmp
out
jecxz
mov
push
sbb
cmp
jle
aad
xor
mov
mov
ret
adc
add
loop
data16
cmp
add
fcomps
jp
pop
mov
mov
xchg
out
cmp
or
push
add
popf
test
inc
cmp
xchg
test
pop
mov
in
sbb
adc
inc
leave
inc
dec
inc
pop
imul
jo
xchg
push
test
leave
and
sub
push
dec
pop
push
cmc
jns
fcomp
es
cli
outsb
xor
jnp
lods
outsb
push
push
jnp
jo
jle
push
into
roll
mov
and
jle
pop
sub
or
adc
jno
enter
popa
jns
mov
ja
je
cld
sub
mov
roll
out
xlat
mov
sbb
loop
mov
arpl
dec
cmpsb
into
add
sub
mov
jno
dec
sbb
icebp
push
out
cmp
cmpsb
jle
cmp
loope
stos
mov
lahf
adc
lea
mov
repnz
fwait
lahf
insl
push
cmp
jbe
filds
jge
xchg
cmpsb
sahf
and
aad
int
fnstcw
xor
cmp
xor
push
leave
pop
xchg
loopne
cltd
iret
mov
mov
adc
push
mov
loope
cmp
stos
mov
sub
out
pushf
lcall
xchg
aam
inc
lahf
ret
mov
xchg
jo
add
mov
jp
cld
mov
daa
and
insl
rorl
stc
movsl
xchg
movsb
pop
xchg
scas
mov
dec
arpl
fists
xor
or
je
cwtl
push
dec
movsl
pop
xacquire
xchg
imul
fdivp
jge
and
loop
mov
and
mov
out
jnp
sub
xchg
xor
push
and
push
mov
adc
and
ret
mov
add
std
inc
add
mov
mov
cmc
jle
dec
sbb
xchg
out
stc
cmp
push
loopne
sbb
popf
stc
xor
cli
push
dec
inc
adc
outsl
or
arpl
cmc
mov
push
bound
jge
arpl
pushf
fs
hlt
add
xor
and
pop
mov
jne
cmp
inc
aaa
jne
popa
add
mov
mov
and
repz
inc
pop
dec
jbe
xchg
scas
lea
pop
das
sti
mov
push
xor
mov
test
and
test
int3
push
ds
push
fcompl
push
inc
ret
jmp
out
sub
fnsave
dec
ds
movb
mov
push
in
cmpsl
pop
push
jl
add
inc
mov
xchg
stos
aaa
stc
add
lods
jb
leave
add
push
mov
ja
decl
dec
repz
int
aam
fwait
dec
loop
push
pushf
xchg
subl
push
jle
lret
mov
jmp
sti
fs
cld
push
shll
jmp
mov
cmp
mov
xor
out
aam
fisttpl
jne
repz
xor
fstpl
aad
and
sub
sarl
sbb
and
lods
inc
loope
pop
fstsw
pop
and
adcb
and
mov
or
adc
sub
outsb
ljmp
jb
mov
sbb
mov
mov
add
enter
subb
mov
fwait
push
movsl
jae
loopne
or
sbb
popa
xor
fidivs
add
rolb
dec
xchg
xor
mov
sub
xor
or
inc
stc
inc
push
mov
rcrl
xchg
mov
push
les
xchg
and
int3
and
fcoml
pusha
push
push
and
dec
pop
cmp
and
cmp
mov
jne
xor
cmp
push
pop
loope
cmc
cmpb
jo
aas
ja
cld
fwait
mov
in
neg
xchg
adc
dec
jmp
out
cmp
mov
push
push
pop
popf
arpl
sub
push
or
inc
lret
xchg
dec
nop
clc
in
mul
mov
jl
out
nop
xchg
jnp
rorb
mov
or
mov
xor
xchg
jp
aaa
add
pop
lcall
push
loopne
jle
mov
jno
mov
dec
hlt
adc
mov
outsb
mov
and
hlt
jmp
aam
ret
mov
or
mov
cs
add
movsl
mov
jno
aas
sbb
ja
or
mov
and
cltd
jmp
mov
nop
leave
sarl
outsl
mov
mov
pop
xor
mov
pop
jo
shrl
cmp
sub
test
test
jmp
rcrb
pop
mov
push
sbb
jo
ljmp
mov
and
lods
mov
loope
sub
push
sub
mov
jo
test
push
dec
shll
hlt
dec
test
testl
jb
mov
cwtl
cmp
in
dec
lea
je
jae
push
mov
notl
ss
xor
stos
leave
jg
shrl
pop
adc
mov
mov
push
or
adcl
pop
int3
fstl
sbb
shll
iret
sahf
cwtl
fmulp
inc
xchg
mov
andl
popa
mov
sub
scas
and
fisttpll
dec
flds
sub
aad
cmpsl
or
aas
fs
aaa
movsl
mov
gs
add
jle
mov
in
fisttpll
daa
dec
in
mov
jle
jmp
or
adc
test
lcall
xchg
fidivrs
test
sub
adc
pop
pushf
mov
pop
test
imul
cltd
cltd
sub
pop
stc
sti
xchg
xor
push
mov
fxch
push
sub
and
jo
and
fidivrl
mov
shlb
mov
fwait
inc
aam
xchg
sarl
mov
pop
rcr
sbb
mov
icebp
jl
or
lret
addr16
sbb
js
xor
sub
xchg
cmpl
sbb
xchg
outsl
xchg
xlat
das
push
lahf
sbb
fs
adc
out
scas
ja
filds
cltd
mov
imul
xchg
loop
jno
fadds
inc
cmp
sbb
or
test
mov
jno
movsb
push
jge
jle
mov
mov
adc
add
sub
orb
adc
jmp
mov
stos
mov
loopne
movsb
rolb
pop
imull
jae
imul
dec
imul
sbb
lea
jbe
lods
mov
pop
ss
jecxz
jmp
cltd
cmp
testb
jne
push
push
pop
pop
test
mov
sar
dec
and
sub
push
cs
shlb
test
aad
cmp
fcmovnbe
jne
test
jnp
in
jl
or
roll
mov
mov
xor
dec
je
inc
and
clc
jne
in
mov
in
dec
adc
dec
dec
bound
imul
sbb
mov
scas
dec
adc
jge
adc
ss
jbe
sarb
dec
push
jno
adc
and
jmp
or
mov
gs
jns
mov
adc
test
push
mov
and
ret
out
ficomps
mov
or
popa
and
sahf
pop
fisttpl
out
jae
xor
shll
fs
dec
inc
out
ljmp
lea
mov
insl
cwtl
rorb
or
subl
loop
lock
and
insb
sbb
ret
ret
mov
je
pushf
jne
subb
cmp
hlt
xor
mov
mov
mov
push
or
nopl
aad
int
addr16
enter
in
push
out
pop
sarl
cwtl
dec
push
mov
inc
fwait
add
push
dec
push
mov
rorl
addl
rclb
ja
or
mov
inc
lret
add
inc
mov
aaa
or
mov
lea
xlat
into
insb
cli
jae
cld
add
insb
inc
shll
pop
jae
mov
xor
dec
lea
hlt
and
xchg
mov
xor
or
jae
adc
cmpl
add
xlat
jns
mov
loope
push
sbb
xor
lahf
mov
jb
fwait
mov
inc
mov
lock
jmp
or
lea
cmc
dec
mov
cltd
or
mov
dec
sbb
sub
inc
lods
repnz
jns
inc
negb
adc
pusha
dec
popa
cmpsb
hlt
test
mov
lea
dec
scas
faddp
mov
push
lret
inc
ja
test
imulb
mov
ret
mov
sub
push
test
push
sbb
into
xlat
or
mov
mov
leave
push
pop
push
loop
stos
callw
adc
xchg
nop
push
xchg
dec
xorb
or
dec
add
sbb
push
notb
leave
add
scas
lock
mov
sub
je
sub
lcall
jne
pop
pop
push
dec
sub
mov
lcall
pop
in
pop
insl
lahf
or
jb
clc
xchg
fdivrl
icebp
lcall
push
xchg
test
pop
xor
lret
or
add
test
add
repnz
pop
ss
xchg
pminub
push
push
fisubrl
in
push
gs
or
fldcw
cwtl
push
imul
mov
push
jnp
mov
ss
xchg
mov
push
test
scas
loope
and
add
mov
sub
cltd
scas
cld
negb
test
xchg
ss
xor
nop
cmp
mov
test
inc
pop
mov
int
xor
adc
pop
push
inc
and
jne
outsb
mov
daa
scas
leave
rclb
mov
dec
xor
mov
xor
jns
and
test
js
lcall
push
ret
popa
fidivl
lods
sahf
testb
loop
xlat
xchg
sahf
cwtl
ss
mov
popl
imull
fcmovu
adc
xchg
test
lcall
push
xchg
inc
mov
cmp
outsb
xchg
sbb
xchg
leave
dec
push
push
pop
and
sub
pushf
or
jl
pop
cwtl
pop
cmp
xchg
ret
in
adc
pmullw
stos
les
jecxz
adc
mov
insb
pop
fcompl
icebp
mov
sbb
cli
fs
inc
xchg
push
and
int3
test
cli
inc
mov
sti
or
or
xor
jge
pop
repz
lcall
cwtl
jbe
xchg
push
push
inc
hlt
rorb
into
ja
in
sub
js
add
cmpsl
cmpsb
filds
push
negb
cmp
sub
test
mov
or
xor
repnz
pop
repz
test
jecxz
dec
repz
sbb
shlb
adc
jecxz
or
inc
mov
sbb
lret
add
das
and
in
orb
pop
aaa
push
jne
les
std
stc
cld
xor
cmp
jge
jge
pop
sbb
adc
dec
pushf
inc
mov
jns
leave
popf
cwtl
jae
xchg
inc
sub
lahf
rorl
stos
aas
mov
fwait
or
sbb
sub
sbb
jns
das
pop
test
mov
iret
test
test
fisttpl
lret
xchg
adc
push
movsl
sbb
movsl
fnstcw
pop
and
dec
dec
mov
add
push
dec
lods
in
jae
mov
jnp
enter
push
dec
xchg
shrb
mov
into
std
lahf
add
outsb
xchg
loop
xchg
cltd
shr
push
and
jae
pop
dec
std
sbb
mov
inc
mov
sbb
adc
sbb
mov
sti
out
sbb
daa
hlt
pop
pushf
or
dec
inc
or
jb
push
push
lahf
in
push
pusha
inc
inc
xchg
mov
mov
jbe
aad
or
cmpsl
lods
mov
aam
mov
addl
add
xchg
jb
ret
cwtl
jb
sbb
leave
mov
into
fstpl
in
movsb
aam
sub
stos
adc
mov
rcr
dec
or
notb
add
push
in
jbe
and
xchg
lea
aad
mov
fucom
sub
sub
cltd
xchg
adc
jmp
mov
cmp
push
aam
pop
adc
les
pop
push
repnz
pop
imul
xchg
push
adc
fldz
inc
sbb
pop
jnp
mov
int3
jae
clc
push
clc
insb
mov
jecxz
sahf
frstor
lret
mov
sbb
sub
scas
add
fwait
pop
cltd
cmp
mov
sbb
push
in
aaa
add
lcall
out
js
and
jge
test
mov
xchg
add
xchg
mov
add
mov
mov
sub
inc
shl
lods
mov
js
add
mov
leave
lods
cltd
movsb
sub
and
aad
jns
aad
or
xchg
mov
push
shl
rclb
pop
orb
xor
test
mov
dec
out
jp
outsb
jp
in
xchg
lahf
ja
inc
mov
insb
xorb
jmp
call
cmp
xchg
dec
shrl
push
push
test
int3
fcoml
jno
dec
jge
and
sbb
or
mov
into
and
mov
mov
mov
iret
push
sbb
pop
stos
fidivrl
xor
test
inc
mov
push
mov
vsubsd
push
sbb
push
rclb
push
addr16
pop
push
mov
cld
push
out
push
sub
adc
test
in
fwait
das
mov
in
shlb
mov
jns
leave
daa
and
clc
std
lret
mov
jge
xchg
dec
and
jb
sahf
xchg
xor
popf
ja
mov
sbb
aaa
pop
or
add
jl
sub
or
jbe
mov
adc
imul
testb
rcll
inc
ret
mov
mov
mov
xchg
test
mov
push
and
jecxz
lock
negb
add
cli
aaa
aaa
sub
paddsw
mov
insl
cmp
jecxz
insl
xor
inc
ds
adc
imul
cwtl
fs
test
push
jge
jns
into
dec
mov
xorb
js
push
mov
jle
aam
into
and
push
dec
xor
adc
xchg
gs
into
fmull
dec
dec
cmp
add
cmp
shrb
inc
mov
jb
aam
dec
arpl
xor
mov
out
lahf
dec
fstpt
lahf
into
xchg
in
ss
cmp
pop
add
mov
dec
loopne
mov
lods
sub
xchg
cmp
dec
mov
data16
dec
mov
ljmp
xchg
jmp
or
or
push
cld
scas
xchg
inc
dec
xchg
or
cld
cmp
lahf
ret
test
movsb
mov
mov
arpl
inc
xchg
jnp
ret
lret
inc
jge
jnp
out
sub
insl
ret
test
pop
aas
sub
or
std
leave
fnstsw
push
out
xchg
mov
xchg
dec
fldcw
jp
pop
xchg
ds
push
jb
push
call
dec
xchg
xor
jp
les
adc
orb
fwait
push
inc
adc
ficoms
inc
pop
inc
imul
aas
not
adc
adc
xchg
faddl
mov
push
insl
rcll
mov
sbb
adc
rcll
jmp
popf
movsl
pushf
clc
xchg
lcall
mov
mov
mov
inc
xor
fs
js
push
stos
add
test
push
xchg
and
add
add
stc
test
shl
test
jbe
push
sbb
and
scas
addr16
push
addl
iret
mov
in
mov
inc
fisttpll
call
mov
scas
sub
scas
lock
pop
in
or
and
das
mov
lret
ja
inc
and
xor
add
push
push
lock
outsb
jl
fbstp
inc
add
mov
and
cmpsb
mov
jae
vmwrite
and
jno
mov
mov
popf
and
faddl
dec
ds
push
jo
cmpsl
pusha
out
add
pushl
xchg
stc
mov
adc
push
mov
mov
mov
repz
popf
outsl
repnz
xchg
inc
in
adc
jno
jle
dec
jno
sbb
push
out
addl
in
lds
dec
insb
xchg
add
ror
fstpl
add
lea
lock
xchg
cltd
mov
adc
xor
push
loop
mov
sub
aaa
mov
push
dec
dec
les
jno
inc
bound
cmc
popf
mov
add
pop
jb
inc
xor
inc
addr16
negb
push
lret
inc
sbb
push
pop
dec
repnz
out
push
sub
enter
xor
icebp
shrl
punpcklbw
inc
mov
popl
and
mov
mov
inc
mov
scas
pop
ss
mov
pusha
outsb
addb
hlt
enter
lahf
imul
popa
repz
mov
ds
mov
pop
aam
sbb
fwait
out
push
fsubr
xchg
cmp
hlt
cmp
out
ret
lea
lret
xlat
outsb
aam
aad
jne
jg
test
clc
xchg
cmp
pop
dec
xchg
sahf
mov
jnp
addr16
fstpl
pop
cltd
es
mov
loope
or
sbb
mov
jne
and
outsl
lods
shll
jb
sahf
or
ret
nop
jae
mov
pushf
in
arpl
sub
xchg
add
xor
or
dec
xchg
xor
insl
push
fadds
scas
mov
aad
adc
push
cmp
xlat
pop
dec
mov
pop
pop
push
fstl
test
test
xor
and
dec
jbe
mov
lods
xchg
aad
inc
add
lods
push
jns
movsb
push
das
xchg
jg
mov
test
or
mov
cltd
and
pop
ljmp
rcrl
xchg
lea
sub
test
push
push
cwtl
cmp
cmp
cmp
push
mov
aam
or
sti
fsubs
jmp
jmp
jae
xor
xor
mov
xor
mov
pop
pop
cmp
jecxz
out
out
adc
mov
xor
out
in
movsb
mov
mov
pusha
test
iret
xor
fcomp
jmp
jp
inc
popl
cli
or
cmp
test
mov
push
jb
cmpsl
sbb
mov
adc
je
or
pushf
imul
mov
add
mov
xchg
lods
adc
in
pop
imul
dec
and
xchg
xor
ret
imul
add
xor
inc
dec
lods
iret
popf
fadds
dec
test
xor
pop
push
sbb
sbb
xor
outsb
mov
mov
mov
mov
cltd
adc
out
rcr
bswap
ss
xor
out
int3
push
sbb
mov
xchg
adc
es
push
xlat
push
jno
dec
out
mul
inc
jbe
lods
mov
icebp
pop
arpl
ret
sub
pop
xor
sbb
adcl
jmp
lcall
gs
mov
iret
ret
xchg
xchg
adc
frstor
mov
mov
hlt
cld
add
shlb
adc
lds
in
xor
test
outsl
pop
gs
jle
add
in
sub
mov
test
shl
xchg
push
push
aaa
or
sbb
jno
scas
je
pop
sti
mov
dec
shrb
adc
test
inc
push
dec
adc
movsb
ja
jno
mov
lahf
das
mov
xchg
push
test
cmp
push
int
insb
pop
ss
cmp
mov
repz
movsl
lcall
jns
fs
testb
xchg
jge
iret
invd
add
pop
cmp
shl
xor
add
les
adc
push
arpl
leave
push
sbb
cmp
adc
and
inc
leave
ljmp
jp
inc
xchg
es
sub
aam
and
xchg
fwait
and
mov
pop
aaa
sub
movsl
jg
ror
test
fstpl
in
test
out
or
mov
xchg
xchg
push
push
or
sbb
outsb
shlb
mulb
sbb
in
cwtl
cmp
shlb
lock
adc
aas
mov
mov
mov
jl
outsb
ret
out
imul
insl
xor
pop
adc
push
push
dec
inc
xor
fldt
pop
int3
jnp
outsl
daa
xor
mov
jecxz
test
dec
rclb
mov
popa
inc
mov
and
jg
popa
push
push
int3
xor
xchg
cmp
push
sbbb
inc
and
jb
mov
or
push
sbb
mov
jb
xlat
arpl
cmpsb
pop
xor
xchg
mov
adc
inc
mov
mov
inc
and
lods
ret
lret
mov
sti
jmp
or
data16
xchg
lods
aas
push
adc
or
out
inc
cmpsl
out
adc
or
and
pop
jl
sub
push
inc
mov
push
jb
pusha
imul
ds
dec
sub
pop
fcomip
out
mov
rolb
iret
xchg
cmp
jb
adc
push
int
and
in
sbb
fstpt
test
mov
cmp
orb
sbb
mov
push
rolb
or
mov
stc
in
or
ret
repnz
aad
and
xchg
test
test
daa
adc
js
scas
insb
xchg
sub
bound
je
add
cmpsb
push
add
push
aad
repnz
aas
xor
cmpsb
ret
inc
cmp
jb
ja
loop
ljmp
cmc
rorb
jo
outsb
xor
inc
inc
aam
dec
fsts
pop
push
add
mov
push
scas
add
imul
adc
or
push
xchg
mov
fs
inc
add
lods
scas
push
xchg
push
push
cmp
and
dec
in
dec
icebp
movsb
inc
xlat
push
and
ljmp
add
clc
sbb
aam
xorl
gs
inc
test
lock
sbb
fimuls
into
push
ss
aas
out
push
in
xchg
ljmp
dec
imul
lea
iret
movsl
pop
mov
fiaddl
mov
xchg
mov
push
add
enter
mov
lods
dec
out
jmp
pop
push
or
iret
ret
popa
pop
cmpsl
mov
lds
dec
xor
adc
mov
dec
sub
divb
jg
mov
pop
push
mov
mov
jbe
mov
rcr
movsl
and
ret
cmpl
sahf
out
cmpsl
mov
inc
xor
push
sub
lds
cmp
lret
sub
push
jl
ja
jmp
shll
inc
xchg
mov
scas
testb
xchg
dec
fsubl
pop
data16
xlat
sahf
movsb
cmp
in
jb
fstps
rclb
cmp
fldcw
sub
push
dec
cmp
cmp
je
into
add
inc
xlat
push
popf
pushf
sub
xchg
xlat
lcall
bound
fldenv
jbe
inc
cmp
dec
xorb
xor
cmp
fidivrs
add
inc
and
sbb
mov
hlt
std
xor
push
mov
xchg
push
add
or
clc
xchg
shl
push
cmp
je
insl
dec
sbb
cmpl
jo
hlt
movsb
push
xor
adc
adc
pop
jo
add
push
xor
xchg
test
ss
inc
gs
dec
aas
ja
push
outsb
dec
int3
pop
test
lock
pop
dec
jne
push
imul
pop
movsb
push
pop
shll
pop
aam
inc
push
jge
push
or
icebp
sbb
stc
sub
push
sbb
or
cmp
repnz
inc
mov
cwtl
fisttpll
lods
scas
stos
and
mov
jge
sbb
ficomps
push
push
stos
or
mov
clc
fistpl
jns
sbb
lea
scas
and
in
push
add
push
pop
loope
sbb
cmpsl
movsb
push
mov
xchg
adc
push
xor
jb
fiadds
test
xchg
ja
or
call
xchg
js
test
aam
adc
movsb
arpl
mov
mov
ret
push
push
pop
into
aam
mov
je
and
sti
inc
movsb
mov
xor
cli
and
add
dec
push
push
or
push
and
das
or
jle
mov
push
add
pushf
pop
mov
and
mov
rcll
push
fisttpll
test
loope
jbe
fidivl
sti
xchg
in
mov
mov
shrb
xor
add
pop
ss
lds
adc
sub
je
mov
scas
jno
add
dec
stos
bound
sbb
test
stos
and
jge
or
or
xor
test
push
jp
push
jo
ficoms
mov
mov
add
xor
mov
xchg
int3
push
push
mov
outsl
mov
mov
sub
lcall
decl
dec
or
sbb
cmc
mov
aas
fldenv
sub
stos
xchg
adc
pop
ret
mov
repnz
sbb
jns
adcb
mov
shll
pop
out
adc
xchg
popf
mov
fxch
inc
push
mov
hlt
jae
xchg
fistps
movsb
mov
xor
roll
add
mov
xor
jl
push
add
push
mov
mov
push
decb
inc
xor
ds
sub
lea
fs
je
xchg
stc
jmp
test
sbb
popf
popf
mov
dec
mov
outsl
push
xchg
push
mov
rclb
fidivl
xchg
and
mov
xchg
or
ss
add
gs
push
cwtl
lock
and
lods
je
or
sub
gs
lea
mov
mov
sub
scas
jb
xlat
icebp
mov
xor
pop
adc
je
push
adc
and
arpl
xor
mov
adc
mov
mov
push
movsb
fmuls
push
popa
xchg
shll
cltd
push
add
adc
or
lods
jecxz
pop
or
int
test
xchg
or
ljmp
pop
mov
adc
mov
fidivl
mov
movsb
xor
sbb
pop
and
scas
outsb
jns
pop
xchg
sub
fs
and
xchg
pop
push
dec
push
es
inc
jo
jmp
in
sbb
add
mov
cltd
loope
movb
sbb
xchg
push
stos
out
lods
sub
addb
ljmp
adc
out
sbb
test
add
pop
fstps
mov
ficompl
les
bsr
rcll
jbe
sub
call
sbb
cltd
dec
adc
in
cmp
pop
test
fdivrp
pop
clc
lods
add
adc
fptan
popa
sub
dec
xchg
push
add
pop
ja
jmp
jns
lret
std
or
aam
push
popf
xor
mov
filds
mov
fwait
lcall
int
xchg
inc
call
push
xor
mov
notb
dec
sbb
pop
jb
dec
or
inc
shlb
jecxz
inc
setb
lret
mov
stc
insl
adc
sbb
cmpsb
test
mov
cld
pop
xor
adc
insl
lahf
movsl
cmp
lret
lods
inc
test
ja
dec
pop
out
jno
mov
mov
adc
mov
shll
mov
and
pop
pop
ds
aaa
cli
cmp
adc
lret
js
jno
jle
or
fsubr
jno
jle
or
jno
jbe
xchg
pop
mov
mov
dec
fwait
and
movlps
hlt
psubsw
leave
fildl
mov
xchg
fmull
bound
and
insl
xor
aas
xlat
sbb
mov
inc
push
pop
cmpsl
jns
or
cmpb
push
stos
test
ljmp
mov
and
adc
jmp
push
cmc
sarl
int3
push
mov
jbe
xchg
ret
negb
loope,pt
add
jmp
push
mov
xlat
add
popf
pop
mov
add
pop
fstp
repnz
mov
in
iret
loop
pop
sahf
mov
mov
inc
rcll
sub
ljmp
xchg
mov
push
imul
pusha
xor
fwait
sbb
in
cmpsb
push
dec
flds
xor
pop
popf
xor
lock
ss
jno
jmp
sub
mov
bswap
rep
aaa
cmpsl
mov
xchg
fstps
mov
ljmp
jo
jns
dec
inc
push
fdivl
icebp
outsb
test
sbb
outsl
or
loope
pusha
icebp
int3
add
sbb
frndint
aad
jne
or
sti
stos
jecxz
xchg
add
sub
mov
push
aam
cs
lds
jb
xorb
or
or
cmp
das
xchg
in
cltd
aam
or
mov
scas
enter
punpckhwd
dec
xchg
sub
rolb
pop
popf
xchg
leave
call
cmp
add
fwait
imul
mov
and
pop
mov
test
imul
cmp
pop
pusha
jae
test
call
rcll
xor
push
xchg
sub
in
movsl
push
ror
mov
mov
jle
mov
and
jnp
pop
xor
shll
mov
push
jo
add
stos
dec
xor
fsubrs
gs
push
mov
xor
mov
mov
les
sub
mov
sbb
lods
lods
dec
rcrb
je
pop
and
or
mov
pusha
add
out
jmp
lcall
gs
sbb
mov
subb
lahf
loopne
pop
xchg
shlb
in
push
dec
push
pushf
mov
mov
cmp
and
mov
xchg
test
dec
aad
pop
mov
xchg
movsl
xor
lock
mov
push
in
test
mov
sbb
push
sbb
cmp
int
movsb
nop
xchg
mov
cltd
push
shrb
hlt
xchg
clc
xor
out
movsl
mov
xchg
es
jmp
loop
fistps
jb
fs
jmp
sbb
insb
or
jl
outsb
subl
push
xchg
out
vmwrite
add
pop
jg
movsl
std
push
mov
cmpsl
xchg
mov
andl
xchg
pop
cmp
scas
ja
or
add
sbb
icebp
fstl
sbb
xchg
inc
push
inc
adc
mov
stc
mov
xchg
jmp
adc
int
mov
add
lcall
cmp
push
lods
inc
shll
and
jl
dec
mov
into
cmpb
jno
ret
mov
push
popf
push
and
out
and
fs
mov
shll
dec
outsb
push
adc
or
and
push
test
loope
je
test
adc
stos
adc
jbe
negb
mov
insl
leave
into
add
mov
push
pusha
xchg
int3
inc
or
in
imul
add
jl
dec
jbe
stc
add
sub
cmp
mov
push
daa
xor
sbb
xor
adc
and
jg
adc
add
shr
notb
mov
lea
jnp
and
test
popf
pushf
cld
mov
jl
jae
add
iret
pushf
or
in
addr16
loop
popf
pushf
push
inc
lds
fstl
popl
lods
mov
dec
fimuls
hlt
sbb
insl
inc
aas
jnp
dec
addr16
cmp
or
push
mov
pop
outsb
push
mov
aam
xor
sbb
push
adc
popa
or
dec
dec
aaa
movsb
stc
loopne
mov
pusha
imull
call
push
mov
rcrl
dec
mov
cltd
adc
jo
fsubrs
test
mov
movsb
dec
sti
push
pop
subb
repnz
xor
sbb
stos
push
icebp
jae
mov
sbb
and
out
cmp
cmpsb
stos
loop
in
inc
popa
xchg
sub
and
push
add
lcall
outsb
ds
idivb
inc
dec
decb
nop
sub
daa
mov
js
jbe
sbb
les
xchg
dec
inc
mov
mov
jl
mov
in
hlt
dec
stos
sbbl
xor
dec
dec
jae
test
aam
sub
aad
enter
repz
pop
dec
insb
and
inc
sbb
inc
fidivs
xchg
pop
std
inc
addb
inc
repnz
mov
sbb
adc
fcom
movl
mull
popf
add
xchg
call
adcl
out
fildll
insb
aam
pop
inc
mov
imul
push
cli
xchg
xchg
std
inc
mov
mov
fmuls
or
dec
xor
mov
repz
test
adc
notl
dec
or
xorl
mov
inc
mov
in
add
test
repnz
int3
aaa
cmpl
dec
addr16
mov
jno
or
dec
fxch
and
add
andl
in
sub
outsl
push
data16
fidivrl
lods
push
mov
xor
mov
mov
addr16
sbb
mov
push
push
add
cmp
inc
notl
movzbl
sbb
dec
xor
movsb
shll
mov
iret
cld
fstl
nop
dec
push
or
insb
push
inc
and
sub
test
test
xchg
in
pop
test
ret
mov
cltd
dec
int
repnz
mov
daa
je
push
cmp
push
negl
aaa
aaa
cmp
ja
test
into
ljmp
mov
cmp
ss
and
jns
test
fdiv
pop
push
xlat
iret
fsts
mov
leave
jmp
fcomps
mov
inc
data16
push
ret
sbb
clc
imul
popa
fdivrl
xchg
pop
lods
je
sbb
mov
xor
cmp
pop
xor
cwtl
push
sbb
cmpsl
jge
leave
add
jbe
xchg
cmp
aas
sub
std
outsb
push
dec
sarb
in
insl
dec
inc
stos
pop
jg
aaa
test
jno
mov
push
jo
mov
out
in
lea
push
pop
faddp
jb
push
dec
xchg
pop
out
cmp
sar
and
add
sub
icebp
jl
mull
repnz
jp
das
cmpsb
pop
test
dec
or
xchg
cmp
mov
out
add
mov
out
fs
fldenv
addr16
xchg
imul
cltd
push
fistl
pop
shl
test
and
mov
call
orb
shl
sbb
repnz
js
aad
sbb
outsb
push
pop
mov
das
cld
inc
push
or
sahf
in
adc
repz
push
push
inc
rclb
mov
pop
rorl
inc
pop
and
lret
cmp
push
and
adc
mov
dec
mov
data16
jg
pushl
dec
testl
sbb
insb
mov
insl
sbb
mov
lods
fimuls
cmp
imul
jne
pop
mov
hlt
jo
mov
cmp
sysexit
test
aam
or
pop
mov
jmp
inc
cmc
mov
aad
stos
ja
xor
dec
sub
mov
cwtl
adc
mov
addr16
in
fwait
cmp
int
mov
ja
ret
inc
adc
stos
mov
rorb
in
out
inc
lock
je
cmp
popa
fcomps
xchg
pop
test
dec
sub
dec
inc
push
fmull
lret
sub
dec
cmp
lods
loope
es
mov
xchg
maxps
mov
inc
and
xchg
stos
mov
cmp
cli
mov
mov
add
dec
hlt
jle
pop
adc
mov
loope
call
or
mov
push
in
cs
pop
push
inc
repz
notl
cmp
js
inc
aas
and
push
cmp
jno
jne
jmp
lock
push
ljmp
hlt
enter
dec
sbb
popl
mov
rorl
pop
pop
out
sbb
mov
lock
mov
push
mov
dec
mov
adc
out
arpl
jbe
xorl
push
int
lock
ss
jge
sbb
cmp
add
lret
sahf
cmp
test
xchg
rorb
pusha
cmp
dec
pop
add
test
fcoms
push
scas
mov
lcall
add
aam
std
imul
imulb
add
mov
fisubrs
pop
inc
xchg
xchg
mov
adc
ja
stc
push
daa
cpuid
decb
push
add
movsb
dec
out
and
push
cmpsb
icebp
stos
aas
add
pusha
dec
in
loop
iret
dec
mov
ret
scas
add
movsb
push
and
decb
sarb
sbb
lret
fs
shl
dec
and
push
or
fs
dec
sub
outsb
xchg
scas
in
ret
cmp
add
leave
mov
nop
and
mov
mov
jne
mov
loope
mov
xor
inc
jae
roll
mov
outsb
arpl
dec
xchg
das
js
cmp
into
add
sub
pushf
inc
push
sub
jo
xchg
jbe
cmp
daa
sbb
mov
ja
push
aad
or
sub
add
lods
mov
lea
stc
pop
dec
in
fsub
fdivrl
inc
pop
dec
lea
ret
mov
inc
cmp
and
adc
sbb
stc
popf
cmp
push
add
sbb
mov
stos
leave
dec
popf
inc
jae
in
lods
adc
xchg
addb
push
mov
jle
shlb
popa
or
pop
xchg
popf
rcll
ficoms
addr16
dec
leave
cmp
jb
inc
dec
imul
and
ljmp
xchg
sbb
mov
jg
xchg
and
pop
call
dec
fcoml
fnstcw
jecxz
cmc
dec
ljmp
mov
outsl
fwait
jle
xchg
inc
dec
test
sub
adc
xlat
sahf
sti
pop
dec
insl
pop
out
inc
mov
or
aad
loope
data16
out
mov
pop
loope
adc
ds
inc
jp
sti
xchg
fistps
dec
pop
fsubrl
adc
ljmp
test
mov
and
sbb
into
push
xor
pop
add
pop
cmp
pop
pop
xchg
xchg
nop
cmp
cmp
jg
xor
fists
pop
sbb
inc
stos
js
jg
in
or
iret
or
int3
test
ret
clc
out
mov
loop
mov
fnstcw
icebp
nop
fcmovu
pop
xchg
cmovs
push
xchg
subl
repnz
hlt
shr
sbb
xlat
jbe
fs
out
lahf
push
adc
imul
mov
clc
enter
push
in
xlat
xchg
ss
fcmove
push
inc
inc
sub
icebp
push
or
aam
sub
loopne
mov
scas
push
movsb
inc
into
cmp
sbb
cmp
fldl
mov
fistps
ljmp
sub
mov
fsubl
bound
pushf
push
andl
nop
incb
test
cmp
inc
outsl
mov
xchg
adc
mov
inc
mov
loop
or
cmpsl
je
jl
or
call
mov
popf
pop
mov
mov
icebp
fwait
hlt
dec
inc
enter
aas
fs
jmp
push
das
jl
inc
nop
push
mov
lea
mov
test
imul
test
cmpl
adc
mov
div
dec
jl
lods
call
leave
mov
insb
jmp
mov
jno
clc
add
ja
insl
int3
prefetcht1
das
push
xchg
and
jns
int
or
notb
mov
xchg
inc
stos
je
aad
lahf
add
bound
adc
hlt
test
mov
pop
test
cmc
or
pop
leave
shrd
popa
xor
mov
add
xor
jmp
lret
pop
xchg
sub
lcall
dec
das
xchg
jle
adc
lcall
scas
mov
sbb
loope
jle
sub
rol
nop
jbe
xchg
fnstsw
adc
roll
push
nop
mov
jbe
insl
popf
movsb
or
lret
mull
pop
cwtl
ret
loopne
lea
cmp
mov
cli
push
hlt
bound
adc
xor
out
push
popa
hlt
or
out
dec
nop
loop
popf
mov
and
inc
xchg
std
dec
mov
or
fstpl
pop
xchg
lock
scas
pop
jg
sti
sub
xor
sbb
add
repz
dec
hlt
xchg
imulb
mov
test
dec
and
mov
pop
mov
fimuls
mull
mov
sti
push
addps
or
imul
ds
inc
add
cmpsl
ja
notl
xor
xchg
enter
ss
dec
jno
in
and
addr16
popf
mov
sbb
call
add
pop
sub
or
das
sbb
cmp
outsb
test
xchg
pop
mov
adc
and
push
jo
dec
cs
pop
repz
and
testb
push
call
movb
out
das
add
test
fwait
adcl
adc
andl
or
xor
pop
and
insb
fistps
test
push
mov
lock
push
cs
inc
popf
xchg
test
inc
gs
andb
jnp
call
and
mov
ja
stos
out
sub
ja
pop
xchg
loop
adc
jmp
fwait
outsb
add
popa
push
xor
fidivl
movsb
aaa
adc
shr
jnp
cmp
add
scas
lds
sub
hlt
dec
jne
imul
loope
bound
mov
dec
mov
out
push
rol
rorb
sahf
pop
mov
sub
pop
jp
test
inc
xchg
mov
or
push
mov
loopne
ljmp
aas
pop
hlt
mov
xchg
xor
popf
enter
sbbl
out
sbb
mov
xchg
outsl
into
insb
test
mov
mov
jge
xor
js
add
mov
mov
je
fsubl
add
push
xchg
rcll
jo
push
inc
scas
mov
out
loopne
add
popf
adc
dec
xchg
jg
push
inc
xchg
push
mov
xlat
out
inc
xor
test
sub
dec
adc
leave
jp
je
xor
pop
testb
push
lds
scas
xchg
mov
stos
inc
fildll
ss
dec
mov
cmpb
test
push
sub
xchg
mov
pop
mov
data16
lret
dec
or
xchg
enter
les
or
push
jo
mov
int3
jge
aam
hlt
jle
rdpmc
xchg
ret
loop
sub
out
ljmp
xor
popf
mov
dec
xorb
cmpsb
sbb
mov
adc
leave
clc
jbe
inc
popa
push
dec
or
sbb
popa
add
punpckhwd
negl
pop
push
popf
xchg
inc
inc
xchg
pop
mov
js
push
dec
xchg
pushf
movsl
in
cwtl
mov
sub
sub
mov
dec
shrl
push
imulb
out
fndisi(8087
in
fs
pusha
pop
aas
and
lret
sarl
aad
or
or
push
adc
stos
push
fwait
cmp
inc
inc
cmpsb
cs
or
icebp
out
push
cmp
mov
mov
lock
add
mov
inc
cwtl
and
leave
loopne
lahf
popf
lea
pop
cs
cmpsl
mov
pusha
xor
mov
ljmp
push
jb
mov
dec
enter
leave
inc
adc
push
or
and
mov
lret
add
ret
jnp
int3
xchg
scas
ret
aam
adc
xor
add
push
pop
adc
xchg
mov
xchg
pop
in
inc
sub
adcb
aaa
cmpsb
inc
mov
sahf
insb
sbbb
xchg
ret
jp
pop
jg
push
mov
jbe
fwait
shll
cltd
lock
nop
sub
push
inc
jbe
jno,pt
dec
mov
mov
mov
out
mov
add
test
sbb
pop
aas
popa
and
inc
jo
cmp
outsb
mov
push
push
mov
jnp
mov
xor
mov
jl
pop
arpl
dec
add
inc
dec
ljmp
mov
dec
adc
inc
sub
cmp
sub
mov
add
add
push
pop
xchg
mov
xor
pusha
dec
mov
fwait
jp
jne
jno
sbb
cmp
mov
in
mov
jge
ret
and
orl
repnz
shl
ret
test
xor
mov
xchg
cmc
push
jmp
pop
in
fdivrl
pop
pop
movq
adc
and
xor
xchg
dec
xchg
icebp
call
sub
in
jb
popf
test
sbb
pop
dec
xchg
inc
mov
stos
xchg
adc
in
push
iret
pop
or
lods
fildll
mov
sub
push
inc
loopne
mov
in
mov
mov
repnz
nop
in
fiadds
jp
or
and
push
lea
mov
divb
dec
sub
sbb
sbb
cmpl
xchg
lcall
es
inc
fcmovnu
lods
mov
pushf
push
dec
cltd
int
testb
xchg
dec
mov
dec
ds
repz
jle
push
cmp
cld
test
ror
sahf
sub
mov
stc
mov
jne
add
adc
int
mov
sahf
mov
stc
sub
dec
jecxz
out
leave
sbb
rclb
jne
and
or
das
jbe
cmp
idivb
jle
or
jae
cmpsl
cmp
pop
xlat
pop
test
lcall
hlt
stc
push
out
shl
sub
arpl
dec
mov
inc
xchg
xchg
mov
xlat
mov
popf
xorl
enter
or
loope
mov
bound
xlat
cmp
pusha
dec
adc
clc
ss
cmp
ficoms
clc
insb
sbb
jp
fcmovnbe
ja
test
movsl
mov
add
add
repz
cmp
test
mov
mov
clc
out
pop
fdivrs
push
repnz
call
je
lret
jecxz
pop
movsb
shl
pop
sbb
jp
pop
rcll
inc
jb
pop
inc
cmp
sub
int3
add
gs
push
xor
or
mov
push
enter
daa
pop
sbb
sbb
xor
insl
push
insl
inc
repnz
add
or
dec
jns
sbb
lea
aaa
mov
mov
pop
lock
in
dec
jne
dec
add
jnp
mov
mov
jle
jno
xchg
push
dec
dec
pop
stos
mov
jle
stc
mov
imul
shrb
cmpsl
or
shll
jne
mov
cli
push
cwtl
stos
les
xor
jle
add
gs
add
sbbl
sbb
jp
sub
cmc
fwait
sub
outsl
push
xor
dec
insb
lds
lcall
fistpl
int
sti
stos
mov
cld
mov
inc
push
lcall
sbb
scas
mov
or
jmp
cmp
inc
call
jo
loope
push
loopne
xor
jb
jecxz
add
fs
push
addr16
and
adc
insl
aaa
mov
push
sub
das
pop
jg,pn
cltd
faddl
pop
pop
sub
fistl
xor
movsl
or
into
xchg
ja
push
and
incb
bound
outsb
icebp
movsb
jo
lret
js
pushl
loopne
push
rorl
popf
sbb
mov
lods
pop
rorb
popa
in
jecxz
adc
call
cwtl
cltd
jmp
mov
sub
jo
aad
push
jmp
mov
xchg
jl
adc
rorl
sarb
xchg
enter
dec
xchg
adc
neg
sub
mov
lock
outsb
add
inc
jmp
add
std
inc
xchg
mov
je
movsl
lcall
and
or
cmp
push
xchg
jbe
stc
and
lcall
test
in
pop
pop
rclb
and
sbb
push
sti
scas
lahf
or
mov
mov
test
add
test
inc
fwait
push
outsl
inc
mov
repnz
push
push
dec
and
addb
cli
mull
sbbl
push
xor
xchg
adc
mov
sub
lds
or
and
mov
dec
xchg
fmull
fs
push
notb
sub
cld
fldl
js
testl
in
jne
mov
mov
js
jnp
cmp
mov
loope
lock
and
popa
arpl
pop
movsl
in
xor
notb
jo
arpl
mov
pop
testl
rol
cltd
ret
test
lcall
pop
adc
imul
mov
adc
stos
fisubs
lret
imul
jmp
addr16
jns
or
outsl
test
out
daa
aas
push
notl
sbb
shll
adcb
inc
sbb
fwait
jl
pop
in
test
push
cmpsb
xchg
cmp
adc
roll
cs
mov
xchg
insl
cmp
adc
xchg
jno
nop
or
mov
test
sbb
and
add
pop
hlt
stos
xor
add
je
aaa
mov
jne
sbb
in
push
mov
aam
hlt
faddl
xor
mov
pop
pop
fldcw
loop
aaa
adc
fsubs
int
xor
imul
pop
rol
or
jo
pop
mov
aas
dec
popa
sub
dec
pop
jmp
leave
jle
add
pop
iret
rcr
xor
test
cmpsb
out
leave
pop
mov
fistl
jge
jae
aad
xor
lds
inc
test
jnp
rolb
add
pop
cltd
in
loop
lcall
xchg
cltd
je
pop
shlb
test
int3
mov
jnp
jmp
data16
rol
testb
lret
lret
fildll
rclb
faddl
xlat
and
or
dec
sbb
mov
lds
in
js
jle
adc
cmp
in
dec
mov
in
ss
pop
mov
test
outsl
adc
pop
adc
imul
test
pop
jno
and
push
rcrb
mov
jbe
daa
test
add
adc
loop
mov
push
test
ss
ds
inc
dec
fdivr
scas
xlat
in
shlb
push
in
das
imul
jle
sub
lock
sub
pop
add
data16
shll
mov
out
xchg
outsb
adc
hlt
bound
or
decb
int
outsb
test
sahf
out
jp
pop
call
pop
mov
hlt
int
out
lods
xchg
cmp
jl
add
push
or
pop
xchg
pop
loopne
xor
mov
lods
jns
jmp
xchg
xchg
andb
scas
daa
hlt
shr
in
push
inc
xchg
sub
add
mov
iret
repnz
inc
fnstenv
add
sbb
ja
jmp
lcall
cmpsl
or
int3
scas
lret
imul
or
cld
js
into
les
ljmp
test
push
negl
cwtl
movsb
sub
push
lret
insb
xchg
jl
inc
add
dec
fnstsw
pop
xchg
lods
adc
outsb
out
pop
addr16
aam
test
rclb
pusha
cmpb
xchg
rcr
inc
cld
cmp
rclb
mov
das
xor
in
jmp
xchg
adc
stos
aad
and
jae
add
mov
in
xor
or
aam
in
popf
inc
mov
push
or
dec
adc
insl
hlt
mov
dec
ret
mov
xor
movsb
lea
mov
push
rcll
jecxz
xchg
adc
pop
bndldx
pushf
add
sarb
out
or
xor
daa
push
iret
jbe
sti
mov
add
in
and
xchg
push
and
outsb
lea
or
xchg
xchg
movsb
dec
sbb
cmp
stos
movsl
push
push
je
inc
test
dec
inc
xor
out
mov
inc
mov
lea
inc
ret
cwtl
xchg
cmc
outsb
out
xor
push
and
ljmp
mov
out
stc
sbb
loopne
jnp
xchg
push
hlt
sub
orl
pop
cmp
push
rcll
std
xchg
sbb
jnp
pop
cli
popa
xor
data16
es
jecxz
das
addb
mov
je
shlb
arpl
jns
pop
subl
cltd
jge
jp
das
cwtl
dec
mov
les
das
mov
dec
bound
aad
fildll
inc
gs
mov
loope
popa
xchg
imul
or
sub
fdivrl
sbb
sbb
dec
test
out
ret
shll
push
in
fcom
mov
jb
xor
dec
ss
mov
mov
gs
sbb
xchg
mov
daa
pop
jmp
xor
test
inc
cmc
fwait
inc
mov
fsubl
adc
mov
ds
les
mov
sbb
mov
jns
xor
adc
ficompl
push
ret
inc
jno
push
lea
cmp
in
rcrb
inc
arpl
nop
add
xor
mov
add
popl
mov
push
sti
sbb
out
fisttpl
adcb
pop
lds
add
cmc
or
dec
xor
jecxz
add
xor
inc
aad
push
push
pusha
cwtl
or
push
and
movsb
shl
pusha
fptan
cltd
push
xor
inc
bound
jnp
mov
into
mov
test
push
jne
jbe
hlt
mov
addb
pushf
sub
pop
jae
and
cmpsb
fwait
imul
data16
cmp
cmpsl
sahf
xchg
popa
jns
xchg
mov
in
orl
pop
jbe
jge
outsb
jge
mov
lods
sbb
and
js
xor
sub
cmp
hlt
repnz
outsb
xchg
xchg
inc
jmp
es
mov
addr16
cltd
movsl
pop
fwait
dec
sbb
jmp
mov
push
dec
or
xor
mov
out
outsl
push
cmc
loopne
loop
ret
shlb
and
sti
lahf
mov
push
jge
testb
adc
mov
xor
int
fcompl
jo
mov
jns
lds
data16
popa
push
sbb
mov
nop
pushf
jge
pop
out
fdivl
inc
subl
and
and
test
mov
jecxz
cmp
insb
jge
xchg
add
ss
or
ljmp
cmp
sub
dec
adc
mov
dec
outsl
xchg
xchg
dec
hlt
xchg
test
cld
aas
fnstsw
pop
dec
clc
test
inc
xchg
les
lret
cmp
addb
sub
fwait
ror
lahf
dec
fnstcw
mov
fistps
and
push
aaa
std
xchg
dec
jno
cwtl
dec
fwait
pop
or
loopne
push
xchg
orl
sub
pushf
push
sbb
pusha
push
sub
jp
hlt
loope,pn
lds
push
lret
fst
rcrb
dec
out
mov
jecxz
jb
and
fstl
mov
lcall
and
jbe
sub
lds
xorb
pop
lods
cmp
sub
xor
ss
sub
sbb
cmp
fldcw
hlt
jg
mov
stos
addl
es
lcall
inc
cmp
jno
adc
rolb
dec
cmp
jmp
stc
cld
repz
push
push
dec
inc
jnp
lods
sbb
push
shll
adc
push
xchg
dec
daa
rcll
dec
mov
sbb
push
dec
sub
mov
xchg
inc
sub
push
es
addr16
sti
or
daa
xor
mov
push
inc
dec
inc
or
movsl
adc
push
ss
outsb
loope
dec
push
pop
out
mov
jb
mov
loopne
loope
popa
sahf
enter
int3
push
pop
adc
pop
cwtl
xlat
xchg
inc
jbe
push
daa
loope
aam
rol
or
and
add
popf
pop
mov
or
jo
or
jl
pop
xchg
push
dec
test
icebp
sbb
insb
xchg
in
jl
jne
push
and
xor
mov
les
fsubrs
pusha
cs
mov
dec
xchg
adc
loop
sub
mov
mov
fwait
add
xchg
jecxz
rcrl
shll
inc
xchg
mov
push
cmp
adc
mov
adc
cltd
xor
push
inc
jbe
xchg
pushl
stc
mov
popf
gs
jae
xorb
outsb
fistps
roll
shrb
or
cmpsb
fistpl
es
cmp
lock
clc
call
fdivs
xchg
pop
sub
xor
rclb
fbstp
outsb
xchg
adc
jl
dec
xchg
and
sbb
sbb
loopne
in
test
jo
es
outsb
pop
pushf
xor
push
or
shrb
daa
push
inc
and
sbb
divb
pushf
mov
cmpsl
stc
cmp
pusha
lods
cmp
dec
cld
addr16
sbb
adcb
mov
ja
mov
in
hlt
dec
pop
push
jle
cld
sti
rcrl
push
cld
adc
lods
rcr
jp
pop
jecxz
mov
cltd
add
fmul
xchg
push
sbbb
in
xor
rcll
jge
jmp
mov
xor
pop
adc
shrl
sar
pusha
std
xor
pop
adc
cmpsl
scas
inc
sub
ljmp
scas
and
mov
scas
xlat
sti
mov
flds
hlt
and
cmp
and
into
clc
mov
imul
push
aad
mov
mov
sub
dec
cmp
adc
cmpsb
addr16
inc
mov
cmp
or
xor
push
inc
adc
repz
fwait
xchg
fimuls
loope
lcall
dec
jns
mov
loope
lods
cltd
rcr
pop
rorb
jno
fwait
rclb
jae
loopne
in
inc
or
hlt
mov
cli
dec
xchg
insl
int3
dec
subl
sub
cmp
sub
inc
xchg
xor
call
adc
lods
adcl
ss
push
mov
pop
test
mov
ficoms
xor
stc
and
or
aam
xchg
xchg
or
sbb
repnz
pop
dec
aaa
mov
jge
mov
adc
stc
lret
mov
leave
xor
inc
ss
unpckhps
xchg
and
bound
movsb
sub
push
jns
loop
jle
cmp
inc
push
ret
xchg
cmp
pop
mov
jp
mov
test
pop
das
ss
sbb
cmp
push
fsts
loope
mov
pop
or
cmp
mov
inc
pop
push
call
fs
fidivs
or
dec
xlat
adc
jle
jns
in
dec
sti
or
sub
or
loope
out
cmp
pop
addps
into
cltd
mov
jecxz
sbb
sub
xchg
jmp
fimull
inc
xchg
xor
scas
enter
pop
dec
add
dec
jbe
sbb
std
rorb
cwtl
adc
fnstcw
push
jnp
cwtl
jno
or
fndisi(8087
loop
add
mov
js
fucomip
xor
fiadds
movsb
push
cwtl
fsubr
push
mov
xor
xor
fs
adc
adc
cld
inc
mov
in
mov
jmp
hlt
jmp
aam
mov
adcl
cmp
or
out
std
jle
adc
out
ss
add
push
cs
leave
loopne
ret
out
sub
imul
dec
lret
dec
push
xor
movsl
mov
add
sbb
sbbl
cltd
ja
xor
xchg
pop
pop
mov
xchg
outsb
and
mov
jae
xchg
pop
inc
pop
jbe
mov
arpl
jne
stc
shrl
arpl
sub
mov
fisttpll
xchg
ret
rol
sahf
push
push
sub
dec
mov
xchg
xchg
xorl
push
jmp
cmp
adc
pop
sbbl
mov
inc
xor
cmpb
scas
and
ja
insl
cwtl
cmc
fwait
pop
and
mov
and
leave
jnp
mov
inc
test
out
sub
push
test
sbb
rdpmc
pop
cmc
mov
sbb
mov
sti
jbe
cltd
pop
xchg
inc
lea
jbe
fiadds
cmp
ds
outsb
ds
mov
cmpsl
rol
cwtl
sahf
dec
mov
in
push
inc
mov
ficomps
pop
sub
mov
or
dec
adc
xchg
sub
pop
push
dec
inc
das
xor
inc
out
in
gs
or
cmp
mull
in
sub
int3
test
sbb
push
inc
cmp
jecxz
iret
dec
jle
in
or
pushf
scas
jge
decb
lret
out
xor
push
push
lods
mov
or
pop
fwait
in
cmp
and
dec
jmp
popf
pop
lds
pusha
push
call
adc
cltd
add
sub
mov
mov
and
mov
xchg
cmp
dec
insb
sub
push
adc
add
test
aaa
mov
mov
dec
jbe
dec
ja
es
pop
int3
xor
push
je
inc
xchg
repnz
arpl
mov
and
aad
and
das
sbbl
cld
addl
mov
jne
sub
movsb
dec
add
stos
cmp
push
sub
push
gs
scas
mov
push
scas
stc
and
ljmp
rorl
or
lret
movsb
pushf
xor
pop
inc
shl
lods
cmc
js
mov
dec
sbb
ss
or
inc
or
push
std
ret
adc
mov
dec
ss
out
cmp
ret
pop
es
or
subl
jg
mov
dec
jne
dec
ret
loop
test
pop
cmpsl
inc
sarl
mov
adc
mov
dec
push
or
xchg
cmpl
and
jbe
xlat
movsl
xor
inc
sub
divb
jne
mov
lcall
mov
call
xor
cmp
rolb
sub
fisttpl
pop
inc
mov
jne
lcall
push
imul
xchg
mov
cmp
jno
mov
jg
test
push
call
fidivrl
jmp
inc
test
xchg
xor
lods
and
outsl
fnstcw
fwait
jbe
icebp
cmp
mov
insl
dec
sbb
mov
sbb
inc
push
inc
mov
leave
ret
cmpsb
rorb
mov
jne
xchg
je
dec
adc
and
cmc
xchg
sti
out
jl
out
and
push
cmp
ret
je
push
inc
test
jae
mov
jmp
dec
cmpl
xorb
push
dec
or
sbb
sarl
sbb
fwait
mov
das
rolb
int
xchg
dec
std
xchg
add
jno
arpl
jbe
adc
add
hlt
mov
push
xchg
clc
xchg
mov
adc
adc
loope
gs
jb
add
inc
dec
jno
or
lods
pop
pop
ret
xor
inc
inc
and
dec
dec
dec
nop
mov
mov
mov
cmpsb
sbb
jge
jl
cmp
mov
out
mov
mov
push
ja
lds
bound
sahf
cmc
lss
loop
aaa
cmp
xorb
and
jecxz
xchg
outsl
sub
jmp
jns
pusha
push
lock
xor
xor
dec
testl
add
out
cwtl
push
jmp
icebp
sbb
ja
pop
pop
lahf
sbb
mov
xchg
insb
mov
and
mov
dec
icebp
aad
adc
push
dec
cmp
and
inc
out
pop
xchg
dec
jns
in
fucomp
mov
or
lods
pop
xchg
mov
popf
sahf
or
popl
pop
lock
cmp
cmc
push
gs
mov
pop
or
imul
lea
pusha
xchg
aaa
lock
sub
sbb
cmp
jp
test
arpl
pushf
ss
mov
xchg
jno
fstp
jns
lret
push
imul
das
rcll
xor
bound
sub
lret
sahf
ss
adc
popf
add
inc
mov
dec
jne
and
decl
sbbl
push
mov
push
in
mov
push
scas
dec
aam
or
or
cmpsl
or
mov
ds
xor
enter
dec
sub
movsl
adc
mov
push
mov
and
into
lret
pop
imul
pushl
push
mov
mov
flds
mov
and
mov
addb
dec
push
sbb
push
jno
pop
mov
test
cmp
aad
sbb
and
mov
std
push
xchg
shrl
cmp
iret
out
lock
int
dec
xchg
and
orl
pop
dec
cmp
pusha
ss
popf
pop
adc
repnz
aaa
xchg
jg
ret
xor
cli
pop
and
xor
cmpsb
cs
call
out
loope
sub
mov
adc
push
les
fcomps
jecxz
iret
test
jl
mov
filds
out
cmp
sub
push
mov
lret
or
stos
shlb
mov
idiv
sbb
loope
testl
pusha
xchg
je
xor
sti
mov
outsb
push
mov
push
pop
int3
sbb
fidivs
dec
mov
shll
stos
pop
sbbl
sub
pop
fisubrs
push
fs
movsb
mov
xor
scas
cld
sarl
push
jnp
rcr
xchg
cld
sbb
mov
push
jb
leave
cmp
add
inc
jne
add
sub
cmp
mov
jno
jo
mov
or
add
je
dec
mov
fisubl
shrb
jmp
lods
inc
cmp
pop
out
mov
insb
push
or
add
scas
div
sbb
je
aad
out
es
add
mov
pop
push
cmp
cltd
mov
mov
fwait
mov
out
les
sub
sub
ret
es
arpl
jne
sahf
xchg
ffreep
inc
lods
xchg
push
pop
fists
sbb
or
out
inc
pop
das
jo
mov
dec
mov
sbb
test
sbb
inc
push
enter
hlt
ljmp
testb
push
dec
mov
pop
lods
enter
mov
rol
int3
pop
and
pushf
jo
jnp
lret
pop
ret
or
inc
mov
clc
pop
inc
ficompl
dec
in
sti
test
das
add
jne
cmp
dec
lret
or
pop
cltd
lea
or
pop
flds
add
cltd
divl
and
jbe
test
sbb
sub
inc
inc
and
jmp
ljmp
das
rol
push
hlt
insb
orl
push
scas
xchg
scas
sbb
sbb
inc
add
jne
xchg
or
test
xchg
ss
xchg
in
adc
into
cmpsb
stc
repnz
mov
loopne
repz
add
cmpsl
cld
std
lret
pusha
es
out
xor
add
mov
das
inc
test
pop
pop
cli
js
push
addr16
and
mov
push
jmp
arpl
frstor
dec
sub
or
pop
and
push
out
mov
arpl
enter
mov
cmp
lcall
inc
les
pop
rcll
test
stos
mov
ss
push
adc
clc
xor
aaa
in
adc
jle
andb
pop
es
inc
xchg
subb
aam
xchg
outsl
inc
xchg
enter
mov
adc
or
or
imul
jae
adc
dec
push
lahf
mov
ret
popa
arpl
hlt
xorl
jle
es
aaa
cmpsb
sub
pop
pusha
jg
push
adc
mov
push
and
outsl
faddl
sub
inc
sarb
pop
and
fcomps
xchg
push
pop
inc
push
pop
sbb
mov
add
and
mov
js
or
mov
fsubrs
xor
mov
inc
mov
outsb
mov
mov
aam
sbb
pop
inc
ds
or
loope
push
adc
outsb
sti
xchg
cmp
adc
cmp
mov
add
enter
dec
clc
mov
mov
in
ret
lds
mov
jl
inc
push
sbb
shrb
sar
rcll
cmp
inc
pop
add
or
push
and
push
cwtl
jp
aaa
scas
pop
mov
jns
cmpl
mov
xor
ss
out
test
push
xor
xor
cli
jbe
jge
insb
add
sub
pushf
aam
dec
faddl
and
push
jae
movsl
test
xor
in
cld
repz
inc
inc
test
data16
cmpsl
xchg
unpcklps
test
mov
pop
pop
popf
cmp
arpl
insb
int
xchg
loope
sbb
xchg
xchg
es
dec
push
xchg
mov
scas
cmc
xchg
mov
mov
test
test
push
inc
decb
xchg
mov
leave
dec
push
inc
fdivs
outsb
shrb
push
xor
inc
cmp
xor
outsl
loope
sub
int3
cmpsl
pop
xchg
scas
and
das
mov
icebp
test
sahf
sbb
shrb
cmp
sbb
scas
insl
jne
xchg
xor
iret
cld
lcall
enter
movsl
add
cmp
mov
mov
cmp
mov
testb
sbb
xchg
jnp
add
roll
or
sbb
out
stos
push
pop
leave
addr16
sti
xchg
push
test
add
in
xchg
ljmp
decl
mov
push
outsb
pop
bound
jle
add
inc
push
lcall
dec
movsb
pushf
sarb
mov
faddl
outsl
outsl
dec
sub
dec
xlat
ljmp
outsl
test
mov
clc
movsb
fldcw
orl
iret
sbb
and
jge
jne
int3
arpl
xchg
push
ja
xor
cmp
and
cmp
stc
lods
sub
gs
icebp
imul
cltd
and
xor
xor
sub
fisttpll
jnp
sbb
notb
jl
add
in
orl
xchg
sbb
ret
pusha
aad
push
into
sub
add
mov
or
cmpsb
push
dec
ss
cmpsb
out
mov
mov
aas
test
lcall
outsl
lcall
push
inc
inc
out
and
negb
inc
in
scas
stc
popf
and
in
adc
jl
adcl
adc
cli
jg
push
popf
push
shll
icebp
mov
rcrl
jp
movsb
outsl
mov
sbb
shlb
cltd
sbb
lock
xor
push
sbbl
jp
and
pop
lods
sbb
xor
xor
fsts
and
testl
lds
pop
mov
and
pop
jmp
aas
push
lcall
cwtl
in
mov
test
call
stc
mov
into
jmp
adc
mov
rorl
in
in
mov
lods
das
and
jge
fwait
loop
out
out
leave
mov
or
pusha
inc
cmpsb
loopne
cmp
mov
xchg
ss
in
mov
loop
pop
xor
aad
inc
pop
inc
cmp
jo
push
pop
ret
popf
shlb
dec
mov
es
cltd
or
xorl
add
cmc
fnsave
cmpsb
sbb
xchg
testl
xchg
xchg
fnsave
adc
jg
pop
mov
ja
movsl
mov
pushf
mov
push
sti
fsts
bound
mov
dec
lret
add
sub
xor
test
fistpll
mov
jo
mov
mov
xchg
aaa
cltd
lret
add
xor
dec
push
test
icebp
outsl
adc
mov
and
arpl
dec
pushf
and
push
loop
jle
pop
xchg
push
inc
fs
pop
pop
cmpb
data16
or
pop
mov
pop
pop
stos
cmp
inc
fwait
add
addb
xchg
adc
or
jmp
jne
xchg
nop
scas
inc
or
inc
jnp
jecxz
mov
add
pop
xchg
int3
lret
shl
pop
ss
mov
sub
jae
data16
or
push
add
loop
pop
or
lcall
push
test
xchg
pop
mov
push
xchg
aad
fwait
insl
inc
inc
call
enter
pushf
xchg
and
sarl
insb
out
sub
and
xchg
jge
inc
xchg
lea
dec
popa
xchg
inc
adc
pop
push
inc
push
xor
inc
mov
iret
mov
sbb
adc
nop
dec
mov
inc
push
xor
imul
mov
cmpsb
in
ret
js
js
lds
sub
and
int3
or
les
push
imul
mov
mov
out
xchg
sahf
sahf
popf
mov
popf
lcall
aaa
test
add
and
xlat
mov
aaa
pop
test
leave
insl
mov
sub
push
dec
hlt
cwtl
ficomps
sahf
cmpsl
testb
test
or
imul
outsb
shll
popf
xchg
push
ds
xor
fcompl
mov
mov
dec
mov
or
push
pop
loope
mov
lock
or
dec
je
jno
out
cwtl
or
fs
call
xchg
pop
mov
iret
push
adc
movsb
dec
push
out
jg
mov
negl
dec
jae
pop
mov
mov
mov
xor
sbb
int
jne
leave
les
imul
sarb
jns
mov
lds
daa
jp
lret
cmp
inc
cmp
jns
sub
rorl
dec
insl
pop
pop
add
adc
add
cmp
adc
jg
stos
xor
mov
cmp
or
scas
fnsave
add
scas
xchg
pop
sahf
or
mov
fistl
mov
cld
outsl
mov
data16
or
fsts
scas
insl
dec
mov
fstl
xor
mov
in
jmp
pop
inc
iret
insl
mov
and
test
pop
sbb
stc
adc
sub
push
insl
jae
lcall
push
mov
in
repnz
lcall
xor
mov
xor
lea
mov
in
mov
jl
loopne
test
or
cmp
xorl
popf
mov
pushf
sub
gs
and
sbb
add
ds
aad
stc
dec
incl
movsb
hlt
push
pop
cmpsl
outsb
adc
sbb
loope
add
ljmp
dec
in
xorb
imul
les
inc
push
xchg
mov
fmulp
pop
dec
jg
fwait
or
das
fstp
jle
aad
xor
push
gs
insb
mov
mov
imul
es
xchg
mov
aam
mov
sti
cli
std
sub
adc
mov
or
ja
mov
mov
xchg
loop
mov
js
gs
push
test
xchg
lods
arpl
xchg
sub
push
loopne
das
xlat
cmp
mov
inc
addl
pop
notb
jbe
out
shll
inc
cld
mov
dec
sbb
test
or
in
nop
dec
cmpsb
movsb
je
xchg
test
sti
mov
and
lock
pop
adc
cmp
xor
andb
in
nop
add
out
jp
xchg
fmulp
xchg
das
cmp
or
jg
push
mov
push
jle
mov
sub
fwait
xor
out
jns
add
jno
push
mov
addr16
jns
sub
mov
jmp
mov
aad
out
jecxz
adc
add
inc
mov
dec
mov
clc
rcl
push
mov
mov
scas
xchg
pop
cmp
mul
flds
add
movsl
jnp,pt
push
sub
sbb
in
test
or
xchg
inc
shrl
inc
icebp
out
sbb
dec
or
clc
add
mov
dec
sbb
add
or
arpl
decb
cmp
test
dec
test
arpl
in
mov
add
popf
push
add
dec
and
sbb
inc
fchs
inc
jle
jmp
add
test
lcall
fcoml
ret
jg
pop
shlb
hlt
rorl
push
sti
xor
sub
mov
stos
and
pushf
jmp
and
jb
loop
rcl
rcll
mov
loope
lea
mov
jge
insb
mov
imul
push
sbb
xchg
xchg
xor
and
lret
adc
cmp
lahf
xchg
mul
sub
mov
inc
xlat
addr16
in
push
inc
loopne,pn
mov
lock
dec
test
mov
dec
in
mov
dec
inc
enter
jne
and
inc
cmc
jns
cmp
fimuls
push
adc
sbb
fwait
pop
lahf
inc
jae
test
xchg
imul
pop
lods
mov
adc
jle
lahf
jbe
pop
adcb
xchg
cmp
lret
mov
andb
dec
mov
scas
mov
mov
and
testl
push
pop
mov
out
jp
int
out
jb
and
mov
mov
aaa
lea
popf
bsr
orl
fdivr
dec
inc
mov
sahf
xchg
cmpsb
jnp
lret
mov
pop
dec
and
cmp
test
movsl
popl
sbb
lods
xor
mov
popf
movsb
aam
fdivrs
pop
addb
insl
popf
out
rorb
rclb
jne
and
push
insl
adc
and
pop
clc
lods
xor
fcoms
mov
out
dec
dec
lock
in
andl
adc
pop
arpl
add
mov
dec
shrb
sub
push
mov
jg
sub
shlb
mov
mov
or
jecxz
mov
movsl
xchg
jae
in
in
mov
jmp
adc
stos
cli
mov
sbb
or
insl
xchg
lods
and
xor
xchg
call
mov
lea
mov
push
mov
pop
daa
pushf
frstor
xchg
xchg
inc
jnp
jle
xchg
cmpsl
xor
mov
mov
jp
out
jg
push
stos
jns
scas
leave
cmp
lret
arpl
add
cmp
repnz
jge
mov
and
mov
push
in
push
lods
mov
lahf
lea
cmp
xchg
and
arpl
imulb
jl
in
mov
stos
jmp
addr16
lods
test
mov
and
jnp
iret
push
add
sub
insb
mov
mov
or
or
dec
mov
lock
mov
pop
dec
inc
mov
jecxz
or
stc
fwait
sbb
add
orb
push
loop
in
mov
test
pop
pop
insl
jmp
imul
pop
cmovo
jns
or
imul
hlt
ds
adc
popf
inc
mov
fsubrs
inc
rcrb
cmp
movsb
rclb
ss
sub
addr16
xchg
nop
into
sahf
lds
das
jae
cmp
jecxz
dec
adc
repnz
mov
push
dec
test
sbb
push
aas
cwtl
xchg
mov
xor
pop
ja
das
stc
sbb
lds
pop
jns
xchg
lcall
cmpsb
cmp
cwtl
inc
adc
xor
outsl
cmp
jge
pop
pop
je
sahf
in
xchg
pop
mov
push
enter
xor
ljmp
test
mov
flds
mov
xchg
cmp
or
mov
cli
out
stc
mov
adc
or
jl
ficompl
aas
and
xchg
insl
data16
pop
fisttps
cli
push
inc
inc
filds
lock
jns
adc
roll
into
pop
data16
push
popf
out
adc
dec
push
push
into
mov
jnp
xchg
pop
ja
fsubrl
sub
roll
cwtl
xchg
mov
cmp
clc
cmp
mov
out
adc
sbb
or
insb
and
mov
push
adcb
insl
or
sbb
in
xchg
push
mov
dec
mov
out
scas
shlb
popf
sbb
lahf
push
add
mov
ljmp
xor
mov
loope
into
movsl
or
cmpb
pop
ja
ja
pop
sub
pop
dec
jne
mov
xchg
mov
mov
push
sbb
icebp
ljmp
push
jecxz
dec
iret
push
dec
jnp
pusha
aaa
outsl
outsl
and
and
sbb
fildl
xchg
cwtl
xlat
in
mov
call
in
cld
cmp
or
jbe
pushf
inc
adc
out
leave
fdivrs
or
jnp
scas
loopne
push
xor
out
stos
xchg
mov
insb
sidtl
fisubl
push
xor
or
mov
movsb
sub
adc
ret
mov
sbb
test
roll
in
mov
popa
inc
test
pop
jle
subb
push
sub
adc
pop
repz
test
int
mov
gs
std
in
loopne
or
xchg
rcrb
mov
mov
jmp
into
out
adc
test
nop
xchg
xor
push
sub
aam
add
or
aas
nop
dec
div
test
stos
sbbl
mov
lods
jo
mov
sti
sbb
hlt
or
xor
inc
dec
je
fcoms
push
lods
cmp
lcall
jnp
faddl
push
xchg
clc
or
and
push
push
sbb
sbb
jge
and
jno
adc
lds
sub
fwait
mov
jo
xchg
mov
andb
loop
push
sbb
mov
mov
cmp
jp
enter
nop
pop
mov
cmpsb
rcl
pop
in
insb
push
aas
or
or
test
mov
pusha
and
sbb
jmp
add
cld
mov
sub
dec
sbb
or
shlb
push
add
aaa
sarl
test
js
add
iret
xchg
fwait
int3
cmp
clc
add
lods
sub
cmp
dec
xchg
ss
popf
xor
lds
jle
insb
movsl
lahf
out
rclb
dec
gs
inc
lret
or
push
add
mov
sub
mov
shlb
mov
adc
in
lods
icebp
dec
mov
divl
ret
adc
out
insl
fcoml
lcall
pop
adc
outsb
sub
sub
mov
aad
push
loop
inc
inc
and
hlt
pop
sbb
cmc
mov
inc
cmp
mov
stc
loop
loop
push
push
or
add
pop
jne
dec
mov
in
call
dec
xor
cmp
mov
iret
sbbl
sbbb
cmc
lret
fdivl
pop
ret
inc
es
lret
xor
test
orb
cmp
into
sarl
cltd
push
inc
movsl
push
cmp
pop
fnstenv
dec
std
adc
dec
adc
push
cmpl
sahf
cmpb
add
add
int
jnp
jnp
mov
pop
push
fidivs
add
fdivs
adc
test
pop
push
leave
out
jle
out
stos
aas
jp
cmp
mov
push
dec
test
jp
push
lea
loope
cltd
inc
sub
test
jno
xor
sbb
and
inc
popf
icebp
pop
mov
xlat
or
push
push
push
call
push
fisubs
add
imul
scas
ljmp
test
imul
xchg
mulb
roll
adc
sbb
inc
xor
loopne
pop
adcl
inc
dec
repnz
lds
fstpl
adc
clc
or
imul
inc
mov
mov
jl
add
movsl
js
xor
jnp
adcb
pop
dec
mov
aas
cli
pop
fnstsw
mov
sbb
mov
out
bound
sahf
rclb
test
adc
or
sub
xchg
loop
xchg
fwait
add
cwtl
jl
jne
add
xlat
xorb
pop
dec
adc
cmc
add
adc
jo
addl
push
dec
cwtl
mov
and
cmp
je
aaa
xchg
fucomi
and
sub
mov
mov
and
mov
xor
mov
dec
out
loopne
adc
cmp
inc
jg
icebp
movsl
and
sti
hlt
sub
mov
pop
inc
or
jae
inc
cwtl
cwtl
es
arpl
mov
call
es
ja
inc
ss
and
mov
nop
inc
ss
pop
dec
js
cmp
mov
xchg
scas
cltd
mov
rclb
nop
fnsave
roll
inc
lock
xchg
xchg
sub
shr
stos
gs
inc
adc
and
std
inc
test
sub
push
xchg
pop
xchg
push
pop
js
mov
mov
cld
push
push
add
cwtl
sub
gs
xchg
lods
adc
and
cwtl
into
inc
dec
shll
add
xchg
jnp
loope
in
scas
add
push
or
aam
dec
mov
gs
ds
hlt
cwtl
rcrl
jle
lds
sti
fcomps
and
dec
xchg
mov
lods
cmp
push
mov
add
xor
push
std
xchg
loopne
push
je
sub
add
push
nop
push
rclb
popf
push
bound
out
ljmp
pop
dec
xchg
out
into
fnstcw
daa
imul
add
jne
lods
lea
pushf
xchg
les
test
insb
add
scas
lea
lret
sbb
xchg
hlt
in
and
js
sahf
enter
mov
or
dec
sbb
cmp
push
cmpsb
adc
popf
or
cmpsl
add
dec
dec
inc
push
clc
mov
jge
je
mov
pop
push
xchg
xchg
inc
cmpsb
push
sub
or
jns
push
sbb
sbb
jno
fiadds
fsubrl
sub
movsl
jno
add
mov
xor
push
adc
lock
outsl
lock
push
imul
jmp
inc
repz
popf
jmp
dec
mov
jg
cmp
or
xor
cltd
pop
sub
test
out
xchg
mov
add
sbb
mov
in
loope
lods
jae
sub
mov
in
mov
adc
sub
push
or
cltd
push
cmp
add
xor
jl
sbb
shl
push
out
in
adc
ljmp
lea
in
mov
jg
testb
cmc
xor
adc
out
ja
sub
mov
push
shll
pushf
pop
adc
sbb
dec
sub
push
jp
rclb
ficompl
xchg
xor
jno
mov
inc
mov
sbb
test
fiadds
and
iret
les
notl
pop
inc
pushf
aam
je
lret
fstl
add
dec
test
cmc
in
js
mov
push
and
mov
arpl
sahf
orl
jno
cmp
xchg
and
pop
icebp
outsb
and
lret
fnstsw
pop
lea
inc
mov
daa
inc
push
mov
js
popl
mov
mov
mov
push
lods
loop
and
data16
imul
cmp
and
test
out
cmp
mov
push
push
gs
pop
ds
in
sbb
cltd
sub
clc
push
outsl
loope
sub
fldt
xchg
inc
add
inc
dec
push
mov
aad
dec
mov
adc
push
pop
add
leave
xchg
aam
jns
rclb
stos
mov
mov
leave
push
dec
xchg
ja
insl
pop
popl
adc
add
stos
test
enter
insl
sub
xchg
inc
leave
adc
cmp
ss
pop
lds
ja
push
popa
lret
sub
sahf
add
fsubl
jecxz
int
repz
outsl
jmp
jns
push
xorb
jp,pn
cmp
inc
add
and
or
das
in
sbb
ret
add
jmp
in
xor
sub
sbb
adc
mov
mov
nop
in
ret
pop
clc
pop
out
daa
shlb
jno
sbbl
jge
lock
cmc
lods
sbb
xchg
cmc
sub
outsb
cmp
mov
and
mov
jge
ds
inc
push
xor
mov
cmpsb
fisttps
add
jmp
gs
addr16
xchg
aad
xlat
cmpl
adc
mov
jo
sbb
push
jle
cwtl
dec
xchg
inc
iret
jl
jle
out
mov
sub
adc
icebp
push
pop
mov
adc
lea
sbb
pop
mov
xchg
push
test
aad
and
xchg
mov
pop
sbb
in
call
je
mov
jecxz
out
ja
out
out
mov
xor
dec
pop
mov
hlt
mov
in
xchg
xchg
jae
mov
jno
xchg
test
ja
lods
test
push
mov
pop
movsb
mov
cmp
repz
lods
xchg
loopne
aad
push
jbe
mov
repnz
xchg
jg
or
cmovge
add
sbb
push
notb
gs
je
sbbl
cmp
push
dec
imul
sub
sub
xchg
pushf
cmp
js
cmp
lds
test
or
xor
jns
jle
push
aaa
faddl
adc
and
std
pop
lahf
push
xchg
sbb
test
mov
mov
jl
cmp
xchg
sub
int3
dec
in
shlb
add
lea
hlt
lock
shll
mov
jmp
ja
lea
jp
xor
sbb
out
pop
add
xchg
mov
test
stc
iret
inc
out
test
push
dec
mov
cmp
test
xchg
sbb
mov
sub
push
icebp
pop
inc
mov
jne
jae
jns
jecxz
data16
xchg
sbb
out
out
xchg
push
xor
sets
ljmp
imul
adc
gs
push
out
fs
inc
or
psrad
sbb
mov
pop
mov
xchg
sub
fcoml
xor
xchg
movsl
loope
push
adc
pop
mov
xchg
mov
sub
xor
arpl
lea
inc
loope
mov
loop
adc
xchg
mov
fdiv
icebp
jge
lcall
add
or
jnp
push
and
xchg
in
or
sbb
mov
jae
jp
fmull
dec
sti
inc
pause
lahf
test
xchg
or
pop
cld
push
pusha
fistl
out
mov
in
dec
inc
xor
add
mov
or
jns
imul
xor
pop
sbb
adc
insl
xchg
push
push
adc
mov
xchg
pop
sbb
jns
push
sbb
nop
mov
xchg
push
int
out
fs
and
and
xchg
icebp
mov
adc
jnp
jp
pop
push
imul
jo
xchg
xchg
loopne
sub
outsl
and
jmp
inc
push
xlat
cmp
mov
call
shll
enter
pop
xchg
mov
outsl
cmpl
imul
mov
into
mov
jle
cltd
in
jp
mov
xchg
orl
in
pop
gs
pop
rcll
xorl
xor
outsl
stos
leave
fistps
ret
add
popa
mov
adc
dec
jne
adc
xor
xor
xchg
jns
lahf
and
jno
cwtl
jg
push
roll
xchg
adc
sub
lahf
cltd
inc
icebp
std
test
and
or
mov
leave
or
adc
fs
mov
pop
imul
inc
dec
shll
int3
fidivrs
sub
lods
sbb
fadd
clc
test
mov
pushf
test
movsl
loope
into
fimuls
sbb
sub
sti
pop
xchg
test
sbb
popf
inc
subl
adc
inc
adc
rcll
adc
xchg
add
inc
cwtl
and
mov
pop
lahf
fs
test
cltd
cltd
arpl
inc
stos
fstpt
xchg
and
orb
jo
in
dec
mov
insb
shl
js
pop
and
dec
xchg
sarl
sub
cmp
or
jb
xchg
mov
mov
mov
dec
mov
orl
hlt
add
dec
mov
fwait
jmp
jne
add
mov
sbbl
mov
jecxz
shrb
fistpl
xchg
test
push
adc
push
popa
adc
fistps
cmc
outsb
jns
sbb
inc
jecxz
adc
sbb
push
fidivl
push
in
add
iret
xchg
loope
jp
fwait
pop
inc
push
add
cmpsb
inc
fmull
push
fwait
mov
cltd
adcb
adc
fidivl
xchg
cli
lds
mov
and
js
loope
xchg
mov
mov
xchg
inc
inc
pop
jle
scas
push
jmp
lea
add
cmpsb
jmp
and
xchg
mov
xchg
rorl
mov
shll
add
jbe
push
mov
mov
pushf
fisubrl
mov
fcoml
dec
push
lods
inc
mov
cmpsl
mov
push
sarl
mov
nop
xor
cmpsb
sahf
movsl
pop
outsb
xchg
repnz
push
into
pusha
fdiv
fisttpl
mov
icebp
sbb
or
fdivrl
add
stos
nop
cld
sarl
imul
repz
adc
lds
mov
aaa
ret
dec
mov
loopne
test
jb
mov
push
addb
movsb
mov
jae
mov
loop
ds
lea
mov
lret
aam
or
test
data16
mov
pop
lahf
lea
orb
jnp
xor
mov
adc
es
inc
push
das
addl
lock
in
rcr
dec
rorb
rcll
jmp
inc
push
and
push
dec
push
mov
xor
loop
adcb
lea
xchg
cs
popa
loop
xlat
subb
sbb
jb
dec
mov
adc
mov
mov
or
push
fwait
stos
jnp
inc
jecxz
xor
sbb
xlat
push
pop
int3
xor
lahf
cmp
sub
pop
sub
cwtl
xchg
loope
stos
pop
jo
nop
add
push
mov
into
xchg
into
aaa
decl
in
xchg
mov
jg
pop
aad
cmc
repnz
push
addr16
pop
idivb
mov
repz
jge
dec
mov
arpl
loope
pushf
sub
mov
fs
ss
push
adc
das
scas
jae
jl
movsb
fwait
pop
das
roll
hlt
inc
sub
rolb
in
pop
cmp
sti
or
mov
fadds
ljmp
pop
push
push
mov
jmp
sub
cld
push
add
mov
mov
jno
cmc
pop
cmpsl
test
cs
pop
outsl
dec
in
or
call
dec
insb
push
xchg
xchg
movsb
cld
jl
dec
and
adc
scas
push
and
fdivl
mov
ljmp
mov
addb
or
lds
cmpsb
cmc
icebp
data16
pop
pop
scas
cwtl
lahf
jae
mov
or
mov
cltd
fsts
nop
outsb
gs
and
repz
addr16
gs
jg
xor
push
lods
dec
in
int3
fsub
call
adc
adc
sbb
or
scas
sub
stc
mov
jb
push
sbb
xchg
fdivr
es
das
cmp
sub
add
in
hlt
push
xor
or
xor
imul
mov
decb
xorl
jnp
rolb
xor
push
outsb
sbb
lret
sub
jne
test
pop
mov
outsl
push
jbe
jmp
js
sahf
pop
adc
sahf
js
pop
push
adc
cmp
jmp
pop
bound
xchg
add
shl
popf
js
aam
mov
add
sbb
push
.byte
