insb
push
jp
mov
push
or
xor
fldt
pop
aad
jns
xlat
adc
test
and
mov
push
fnstenv
dec
cmp
iret
sub
or
dec
std
dec
ret
cld
ret
cmp
sbb
inc
xchg
jle
mov
inc
pop
push
dec
mov
cmp
sub
and
add
sbb
lock
ds
sbb
dec
pop
ficoms
arpl
sbb
jg
jg
imul
mov
push
cmp
mov
sbb
mov
xor
mov
jecxz
arpl
mov
scas
outsb
inc
aad
out
fimuls
ret
sub
sub
ljmp
inc
in
test
push
gs
cmc
rcll
enter
mov
insl
clc
jne
insl
sbb
jg
shlb
stc
sub
int3
adc
inc
sbb
xor
dec
xchg
in
sbb
sub
push
in
leave
sub
stc
aaa
loopne
sub
sub
pop
cmp
pop
lods
and
pop
pop
jg
sbb
push
adc
mov
xchg
arpl
inc
in
add
mov
outsl
in
arpl
xor
mov
mov
cmp
int3
and
fdivrs
pop
ljmp
and
jno
cmpsb
and
add
dec
out
shll
inc
mov
ljmp
stc
jo
pop
fwait
rcrl
imul
clc
popf
push
clc
jo
cld
fcomps
popf
insl
iret
mov
rcr
push
push
sub
inc
shrb
movsl
push
push
fisttpl
ret
pop
mov
sahf
xor
pop
ds
pop
mov
mov
sub
test
pop
fcmovnbe
in
jb
std
or
cmp
sbb
add
jmp
jmp
adc
jle
jo
xor
or
xchg
push
sbb
movsl
adc
dec
add
cmp
popa
loope
or
jno
pushf
popf
adc
xchg
and
xchg
push
adc
lret
jg
and
jns
mov
xor
xor
inc
call
fnstenv
push
ljmp
adc
xor
call
pushf
push
cli
jecxz
cmp
cmp
and
xor
cs
sbb
dec
ljmp
push
rolb
popf
int
xorl
imul
stc
movsl
dec
les
aam
sub
adc
adc
sbb
loope
push
andb
in
cmp
mov
xor
clc
dec
stos
lds
pop
sbb
mov
jge
adc
insl
or
jle
scas
jae
lret
xchg
mov
lods
hlt
cmp
xchg
imul
fs
push
pop
cmp
sbbb
or
sti
add
cmc
pop
les
mov
sarl
add
add
xor
mov
inc
add
cmp
push
xchg
addr16
sbb
mov
nop
sbb
out
mov
push
pop
cmpsl
mov
mov
jg
pop
adc
pop
xor
cld
mov
mov
cli
je
push
mov
lods
pop
pop
stos
xor
cs
pop
adc
mov
ja
or
adc
loope
xor
add
in
mov
adc
dec
aam
arpl
insb
jp
jmp
xchg
jg
ficomps
fsts
jne
js
push
popl
daa
faddp
je
mov
loope
jns
sub
pop
call
sub
ret
xor
mov
push
clc
stos
mov
jg
fstps
or
push
fnstsw
js
inc
mov
fwait
test
push
rcl
inc
aam
inc
rolb
sbb
mov
enter
and
pop
and
adc
push
xchg
add
fidivrs
shll
movsl
sti
aam
jno
rorl
insl
stc
inc
sub
or
jns
mov
inc
cmpl
adc
cmp
or
aad
sub
out
arpl
mov
gs
and
mov
mov
inc
insb
out
stos
sub
and
push
jmp
push
pop
pusha
adc
dec
push
xor
inc
jno
popf
and
xchg
es
and
cmp
sbb
mov
loop
sbb
outsl
add
lock
dec
out
out
lahf
mov
push
loopne
lods
cmp
fs
adc
adcl
sahf
xor
sbb
es
adc
data16
mov
ficompl
es
scas
mov
fwait
pusha
lret
push
dec
pop
push
dec
lods
hlt
lahf
or
movsl
pop
frstor
sub
sub
jmp
push
pop
and
cmp
enter
and
inc
out
lret
inc
sub
sahf
xor
jp
pop
mov
push
repnz
sbb
addr16
insl
push
shr
imul
cltd
in
xlat
sahf
arpl
loopne
xlat
stos
push
inc
jecxz
push
stos
nop
ja
dec
sti
shrl
jmp
aas
lcall
push
dec
and
fistpll
xchg
pop
sub
shrb
std
dec
sub
mov
cld
add
in
xor
jg
cwtl
lahf
xchg
in
in
aaa
pop
sub
ja
push
dec
cmpsl
cltd
rcll
aam
lcall
or
push
mov
mov
sbb
popf
dec
subb
in
pop
push
dec
lahf
mov
imul
pop
xor
xchg
cmp
leave
call
pop
dec
das
bound
cmp
in
js
loop
or
subb
les
jge
sbb
inc
pushf
sbb
dec
add
test
setle
data16
or
cmp
in
adc
mov
sbb
insl
sbb
push
repz
pcmpgtw
add
mov
mov
mov
xor
std
jmp
ljmp
mov
arpl
rcl
and
movsb
fcoml
mov
loopne
ret
insl
mov
sbb
or
sbb
sbb
dec
jbe
adc
xor
lods
sub
dec
jb
add
out
xchg
or
jno
ret
enter
or
xlat
sbb
js
js
pop
loope
sbb
icebp
or
mov
sbb
aam
sub
or
aaa
out
add
mov
xor
or
inc
lcall
les
pusha
nop
cmp
and
rol
mov
mov
mov
and
cmc
jno
push
inc
pop
jbe
jge
push
test
pop
cmc
nop
or
js
push
add
pop
push
push
cmp
pop
pop
jb
rol
jmp
jmp
call
and
add
or
push
and
pop
jmp
clc
jmp
mov
lahf
xorb
push
mov
xchg
int3
mov
add
mov
push
cmp
pop
mov
and
push
add
mov
pop
jbe
jl
add
and
push
call
aas
sub
enter
pop
jle
lds
gs
push
push
cli
jnp
push
add
push
pop
pop
mov
push
sub
pop
jmp
rcrb
and
mov
rcll
out
scas
sbb
and
out
adc
sahf
dec
mov
mov
pop
loop
jecxz
sub
jno
push
cmp
les
loop
sar
pop
filds
ret
xchg
inc
push
dec
pop
nop
pushl
pop
push
sub
pop
push
movzbl
jae
push
push
pop
pop
cmp
and
cld
loop
pop
push
push
jns
push
or
pop
pop
pop
push
jnp
and
pop
jbe
push
add
push
pop
and
cmp
je
loop
jecxz
mov
es
inc
push
call
xlat
jle
pop
push
call
shrl
cmpsb
jle
call
xchg
mov
inc
int3
add
fwait
add
pop
pop
push
mov
add
pop
and
rol
jmp
test
test
adc
sbb
or
sbb
dec
sbb
mov
xor
rcl
imul
mov
push
push
loop
inc
sbb
repnz
lds
bound
push
xor
pop
pop
cmp
add
jp
cmp
push
mov
pop
push
xchg
pop
push
pop
xchg
pop
cmp
push
call
sub
sarb
inc
in
push
cltd
mov
nop
lods
loope
cs
int
mov
insb
mov
outsb
pop
insb
xor
in
hlt
in
cmp
adc
jo
and
add
pop
push
push
pop
add
pop
push
call
enter
testl
pop
sub
push
add
mov
lret
addb
jecxz
addr16
mov
js
push
adc
in
pop
dec
push
jmp
loop
sub
push
and
mov
jne
push
jl
push
ja
cmp
pop
pop
stc
add
test
jae
jg
push
addr16
addr16
pop
neg
neg
sub
xor
je
jge
xor
jmp
cwtl
int3
inc
mov
pop
ficomps
in
or
mov
cmp
dec
cs
lods
loope
push
stos
pop
mov
push
push
decb
lods
lret
ljmp
mov
mov
jns
in
enter
xlat
pushf
mov
jp
loope
mov
imul
mov
jmp
ret
pop
xchg
movups
jl
push
pop
fwait
and
cli
cmp
jecxz
cmp
es
or
sti
sub
int3
fisubrl
inc
je
rol
push
and
ret
jecxz
ss
mov
sti
pop
jne
push
and
in
or
in
pop
add
subb
mov
fmuls
icebp
arpl
loope
add
mov
clc
lret
mov
cmc
out
pop
or
out
sbb
enter
adc
pushf
pop
pop
or
outsl
test
push
popf
cltd
aas
sub
mov
mov
sub
ljmp
add
mov
jo
mov
cmp
lret
mov
push
insl
mov
mov
mov
jge
mov
jmp
insb
dec
hlt
aam
mov
pop
das
or
dec
cmpsb
and
pop
dec
subb
sarb
mov
out
xchg
adc
cmp
lods
adc
movsl
mov
dec
mov
repz
rorb
sub
es
or
leave
lret
or
or
dec
hlt
push
or
inc
into
adc
sbb
sbb
jnp
ficoml
das
xor
cli
fwait
shl
movsl
sti
xchg
mov
and
jb
ja
mov
fildll
pop
data16
mov
js
mov
subb
lret
repz
add
xor
inc
ret
push
pop
int3
shrl
test
mov
shlb
add
or
dec
add
jmp
or
sbb
and
cmp
adc
jp
into
pop
mov
loope,pt
mov
aam
xlat
jecxz
std
ret
push
push
or
psubw
add
aam
dec
and
dec
xchg
sub
pop
loop
gs
ds
xchg
mov
mov
pop
xchg
lds
int3
fldenv
mov
pop
xchg
mov
sbb
ds
imul
mov
les
ss
xchg
dec
inc
jp
xchg
dec
adc
shrl
pop
stos
out
gs
jecxz
fistps
adc
js
ljmp
xchg
adc
aaa
popf
cmp
cmpsb
mov
mov
arpl
je
ja
mov
cli
aam
sbb
fisubrs
inc
ljmp
jp
inc
jno
jno
mov
xchg
movl
call
mov
push
int
int
sti
sbb
movsb
adc
aas
es
jmp
jne
inc
jl
or
fmuls
fwait
scas
and
mov
or
loopne
cmp
cwtl
or
iret
andl
pop
dec
xor
jmp
pop
adc
out
jae
dec
xchg
adc
cmp
and
fcom
sub
out
push
lea
push
sub
mov
arpl
dec
pop
dec
push
xchg
fs
loope
jg
ja
xchg
ja
test
or
sbb
out
and
insb
or
test
cmp
dec
jge
sbb
pop
push
ja
data16
mov
outsl
stc
mov
xchg
subb
sub
rolb
or
xor
ret
fcoml
int3
xchg
xor
int3
call
inc
mov
lods
test
std
inc
xchg
fists
mov
cmp
mov
ss
iret
loope
push
fmul
movsb
pushf
loope
mov
ljmp
jge
cmp
enter
adc
and
pop
xor
sub
jno
ds
test
inc
mov
and
mov
mov
adc
add
cmp
dec
mul
add
or
das
adc
jp,pt
and
lds
imul
aaa
xor
cmpsl
icebp
dec
jmp
cmp
inc
roll
gs
clc
sbb
js
and
cwtl
dec
dec
xchg
add
popf
je,pt
es
mov
xor
jbe
outsl
mov
inc
mov
fcoml
jo
mov
sbb
jno
test
pop
stos
mov
insl
sub
shlb
or
lret
les
movsb
ret
xchg
pop
dec
fstl
rcrb
insb
fsts
xor
xchg
jle
jle
add
js
addr16
pop
mov
js
repz
cwtl
les
dec
mov
jmp
cmpsb
pop
dec
loop
bound
xchg
push
int3
push
mov
push
jno
pop
cmc
xor
mov
mov
fwait
jb
cmp
mov
push
sbb
inc
or
adc
inc
fcom
xor
push
out
xchg
orb
data16
ret
xor
scas
pop
shlb
loop
es
bound
mov
stos
in
jecxz
sub
jmp
add
gs
rclb
pop
mov
sahf
lahf
jnp
push
or
mov
mov
mov
hlt
fldcw
pop
sub
js
push
cmp
pop
das
gs
outsl
push
jo
loope
lcall
sbb
je
add
sbb
pusha
nop
in
add
mov
adc
push
mov
cmp
mov
cmc
cmpsl
push
cmp
cld
jecxz
mov
xchg
sub
fs
mov
sub
xor
mov
fidivrl
movsl
int3
xchg
push
imull
jb
ror
jnp
ja
adc
in
into
pusha
inc
xchg
push
call
sub
inc
jg
pop
or
cs
dec
or
add
mov
add
or
push
popf
push
js
push
add
sub
ret
dec
sti
mov
ds
pusha
imul
gs
sahf
cmp
cs
push
lds
mov
mov
sbb
dec
aam
sbb
mov
xchg
cs
fs
das
and
bound
xchg
mov
sub
stos
pop
aad
pop
cmp
out
out
inc
dec
fsubr
test
jge
dec
pop
notb
cmp
in
cmp
lahf
dec
in
lds
add
fwait
scas
and
les
mov
mov
ja
sbb
sbb
pop
jmp
int
inc
pop
sbbb
jne
data16
lret
xchg
lcall
xchg
loope
sbb
and
jbe
pop
loopne
mov
sub
sub
fcoms
mov
fdivrs
test
mov
sbb
add
inc
push
stc
movsb
xor
mov
es
jbe
inc
pop
repz
jae
outsl
jmp
pop
mov
cwtl
stc
dec
lret
sbb
pop
push
addr16
cltd
cmpsl
add
sahf
push
fwait
cltd
cmp
and
stos
lahf
pop
adc
xchg
bound
lret
jnp
jb
add
add
jmp
add
fistl
mov
mov
insb
dec
cmpsb
push
pop
inc
dec
gs
addr16
or
pop
dec
jmp
ret
imul
mov
movsb
loopne
jb
add
mov
cmpsl
push
cmp
dec
imul
rcrl
xchg
cli
faddp
mov
ffree
xchg
ss
inc
fcoms
ljmp
push
pop
int
push
sub
testb
pop
xlat
andl
dec
fiaddl
dec
mov
jbe
scas
lret
push
enter
push
inc
adc
and
push
xchg
cmp
shl
dec
popf
in
pop
cltd
aas
jae
leave
fildl
xor
inc
or
sahf
dec
inc
add
pushf
out
jbe
pop
inc
xor
scas
stos
pusha
cld
enter
pop
xor
sbb
adc
sub
mov
outsl
lods
in
pop
xor
lcall
dec
xor
sbb
push
mov
test
adc
or
mov
addr16
mov
xchg
je,pt
aad
cmp
inc
insb
inc
dec
mov
daa
fsubrl
xlat
insb
xchg
and
pop
jmp
in
sbbl
dec
movsb
mov
test
das
pop
negb
xor
xor
popf
in
int3
repnz
sub
pop
repnz
or
clc
dec
je
xchg
xor
dec
sbb
push
sub
dec
cmp
fists
mov
in
loop
pop
push
xor
pop
jl
repnz
inc
bound
in
mov
stc
inc
dec
or
lret
pop
mov
xor
xor
clc
jl
mov
enter
cmc
cmp
pop
int3
or
out
sbbl
popf
int3
xchg
push
inc
cmpb
jns
cltd
rcr
cli
pop
pop
adc
push
and
clc
loope
int
push
shrl
add
cwtl
mov
and
inc
sbb
cmp
sahf
out
push
data16
pop
pop
mov
cwtl
xchg
inc
and
fildll
test
xchg
scas
aas
call
enter
test
fnstenv
mov
push
fistps
pop
ficompl
mov
into
mov
adc
mov
cmpsl
arpl
xchg
sahf
mov
add
scas
fldl
vfmsubpd
sarl
dec
or
aaa
lock
sub
add
sti
inc
fs
sbb
es
push
nop
mov
push
sub
lahf
repnz
push
mov
es
cmp
or
jb
xor
shrb
push
jnp
and
bound
inc
push
ds
int3
into
arpl
in
in
into
dec
cmc
push
in
mov
xor
lret
dec
mov
pop
and
dec
adc
sahf
movsl
es
in
sub
addr16
out
add
pop
pushf
adc
pop
sub
sti
pusha
fiadds
insl
stos
cmp
mov
adc
adcl
xchg
push
sub
sbb
arpl
movsb
xor
sbb
push
inc
inc
ret
pushf
dec
sub
pop
outsl
fmull
dec
and
cmp
xchg
iret
cmp
sub
xchg
aas
cmp
sbb
les
mov
xchg
dec
imul
fwait
dec
das
inc
popf
nop
jbe
push
dec
fsubs
mov
mov
mov
lea
mov
std
push
shll
mov
jle
js
xor
xlat
roll
lods
testb
mov
sahf
cwtl
in
xchg
or
xchg
mov
icebp
mov
sub
sub
je
es
mov
in
dec
mov
sbb
rcl
in
xor
popa
sarl
loop
add
push
pop
add
test
adc
sbb
sti
stc
mov
icebp
push
fstpt
mov
aad
mov
pop
test
dec
fdivp
rorb
out
lds
cmp
push
decl
daa
test
sbb
dec
cmp
scas
incl
repnz
xchg
scas
imul
adc
dec
pop
lret
lahf
fidivl
jo
xchg
mov
jge
mov
test
popf
rclb
jbe
mov
mov
mov
sbb
inc
aaa
movb
repz
repz
or
fdivr
addr16
xor
leave
arpl
sub
ror
inc
mov
push
out
adc
dec
sbb
or
push
xchg
and
out
dec
and
mul
cwtl
push
add
pop
mov
push
mov
push
idiv
mov
into
test
in
bound
xchg
fisttpl
popf
push
pop
and
aam
movsl
inc
mov
mov
cmp
inc
insb
aam
test
das
leave
sub
sub
data16
stos
in
and
inc
inc
scas
sub
cmc
out
movsb
mov
pop
jo
mov
fimull
ret
daa
and
sub
sbb
pop
push
xor
lock
mov
jno
cmp
outsl
scas
or
iret
push
pop
cmp
scas
xchg
insb
cmp
pop
idiv
inc
mov
push
stos
scas
into
cld
cwtl
mov
add
sar
sub
pop
inc
iret
call
addr16
jecxz
xor
cmc
lods
out
daa
rcll
orl
sub
sbb
xlat
loop
jp
fs
popa
ret
jge
adc
sub
push
lcall
aas
addr16
mov
push
push
add
push
pushl
jmp
push
mov
mov
leave
das
loope
icebp
xor
arpl
aas
xchg
stc
push
pop
mov
push
mov
add
jle
test
mov
xchg
and
mov
push
xor
inc
dec
push
sahf
dec
jp
dec
pop
jecxz
sbb
imul
lret
xor
bound
pop
popf
mov
lcall
mov
gs
nop
push
shr
sbb
dec
repnz
repnz
lods
adc
add
out
nop
sub
in
jmp
and
jle
addr16
mov
ja
adc
pop
dec
dec
fcomi
or
mov
xchg
mov
cmc
mov
xor
adc
adc
sbb
mov
lcall
sahf
int3
push
out
enter
cmp
sbb
nop
fsubrs
mov
xchg
jne
pop
push
outsl
push
dec
mov
test
inc
es
push
popa
in
and
fstl
les
xor
idiv
pop
inc
ss
ljmp
popf
jb
js
jnp
cwtl
incb
mov
mov
fistps
movsl
dec
and
andl
mov
pop
or
push
fidivrs
jnp
and
xchg
in
daa
mov
pop
gs
lods
lret
test
dec
daa
xchg
inc
pop
push
xlat
sbb
push
or
mov
mov
jae
insb
add
or
and
xor
jg
pop
push
call
sub
data16
or
mov
pop
dec
cmpsb
js
mov
out
scas
lds
mov
jg
mov
dec
sbb
xor
lret
icebp
inc
sbb
fwait
bound
sub
loop
sub
push
call
mov
inc
xor
push
cld
fiaddl
out
or
jo
cs
mov
push
sbb
outsl
repz
loope
fcoms
and
mov
mov
ljmp
int3
jmp
sbb
int3
cmp
outsb
mov
cmp
or
mov
enter
ret
pusha
popa
mov
dec
bound
decl
je
jp
jle
inc
das
adc
aam
xor
inc
out
jno
icebp
je
mov
dec
repz
mov
out
jmp
jmp
pop
cmp
or
cmp
cmp
testb
cmpsb
bnd
and
jbe
mov
or
cmc
sub
inc
sbb
add
or
dec
push
in
std
mov
test
negl
aaa
push
popf
pop
lock
std
fs
jecxz
or
or
stos
mov
outsb
xlat
jae
fimuls
jmp
jbe
mov
dec
push
sub
mov
gs
push
jmp
mov
in
jno
mov
pop
cmp
orb
pushf
push
push
bndstx
push
jecxz
es
mov
dec
dec
imul
mov
jbe
incl
lahf
in
cltd
xor
sub
jecxz
pop
lret
and
shlb
pop
mov
lret
jb
adc
mov
jmp
cmp
movsb
int
movsb
jge
and
repz
pushf
hlt
or
jae
pop
sti
and
lcall
rclb
repnz
les
add
scas
sbb
mov
xor
mov
aam
jle
sub
push
aad
outsb
add
call
or
mov
cwtl
icebp
sub
nop
push
jp
pop
stc
lret
out
ds
neg
pop
jns
push
xor
mov
xchg
sub
mov
xor
stos
sub
fs
pop
sbb
push
mov
cmp
fcmovb
xchg
jns
dec
or
xor
sub
repnz
xor
or
ds
mov
cwtl
push
xor
adc
pusha
fwait
dec
mov
fistps
dec
mov
push
pop
xor
inc
hlt
mov
pop
loope
stos
stos
and
cmp
mov
pop
das
insl
push
pop
cltd
dec
mov
sub
test
mov
out
xchg
lock
adc
or
adc
notl
lods
scas
mov
movswl
in
out
add
push
mov
mov
out
dec
xor
cwtl
mov
cwtl
mov
mov
inc
cmp
arpl
or
lret
icebp
jmp
mov
push
das
push
jmp
inc
xchg
lods
aaa
jno
fstpt
test
hlt
mov
fs
call
popa
lods
inc
jne
xor
movsl
fmull
iret
inc
or
lahf
xor
xchg
pop
xchg
jmp
test
or
out
cmp
scas
sbb
cld
push
inc
push
and
leave
iret
push
pop
in
movsl
sbb
ss
pop
mov
insb
test
pop
scas
dec
out
popa
adc
sub
imul
test
outsl
popf
cmpl
mov
sub
or
sbbb
mov
jl
mov
lods
dec
xchg
inc
std
mov
out
push
and
push
fmulp
jno
inc
es
lahf
cmp
scas
mov
fs
xchg
push
dec
lds
jl
push
inc
sub
mov
pop
in
fdivl
hlt
iret
mov
sti
movsb
jns
push
pop
add
stos
repnz
and
push
inc
xchg
adc
int
cmp
mov
out
test
aam
les
loope
fimull
jecxz
rcrb
sarb
stos
cwtl
push
lock
shr
dec
cmp
push
ja
or
push
shrb
or
or
cmc
iret
or
flds
jne
hlt
gs
imul
out
jbe
mov
hlt
fdivrl
pop
push
and
jle
dec
test
inc
pop
jp
outsb
fs
into
adc
fwait
xor
imul
inc
jbe
lods
testb
and
xchg
lahf
movsb
jge
cmpsl
xchg
mov
mov
mov
enter
jmp
jle
sbb
mov
xor
insb
lret
js
mov
out
inc
xchg
adc
mov
mov
push
mov
clc
xchg
aaa
mov
dec
outsl
and
mov
dec
inc
mov
in
jp
cld
scas
loopne
add
adc
mov
out
iret
icebp
dec
dec
movsb
mov
add
xlat
imul
sub
mov
fdivs
jbe
repnz
add
add
inc
sbb
dec
js
mov
leave
or
adc
imul
outsl
xor
repnz
xchg
repz
xchg
xchg
mov
movsl
inc
int3
sbb
das
outsl
or
sbbl
mov
daa
ljmp
inc
outsb
mov
stos
or
push
or
insl
pusha
lret
dec
aas
xchg
test
inc
xor
scas
cmpsb
push
xor
imul
mov
imul
pusha
mov
jno
mov
push
roll
fcoms
rcll
out
cmc
pushf
ljmp
imull
and
je
test
aam
aas
stc
xchg
stos
adc
clc
fadds
add
imul
jo
ds
add
sti
push
movsl
add
push
sub
dec
iret
mov
hlt
add
aad
inc
lret
test
pop
iret
adc
adc
repnz
stos
inc
jno
daa
xchg
ffreep
sbb
push
mov
pop
or
push
cmp
fucom
mov
in
add
js
xchg
cmp
enter
in
ja
mov
inc
imul
ds
insl
arpl
push
adcb
aas
fadds
into
and
push
sbb
cmp
mov
stc
lahf
int
aas
ja
data16
sub
sub
dec
inc
es
push
mov
cmpl
cwtl
add
mov
jp
lods
cmp
or
inc
push
mov
add
insl
mov
rol
adc
xchg
addr16
push
pop
push
xchg
test
adc
fisubrl
stos
fcmovne
push
sti
sti
push
and
push
or
pop
fdivrl
rcrb
sbb
test
mov
mov
nop
xchg
lahf
into
sbb
call
outsb
lods
adc
mov
shlb
jg
jnp
cmp
loope
in
pop
push
jnp
cli
cld
ss
jge
push
aaa
fistpl
mov
cmc
xchg
sbb
xchg
ds
mov
mov
cmp
push
fs
pop
cwtl
ja
stos
popa
dec
clc
scas
iret
hlt
into
mov
pop
movb
movsl
push
faddl
and
clc
inc
xorb
mov
pop
cmp
mov
xchg
iret
cmpsb
add
imul
ret
jbe
jnp
test
sub
cwtl
jecxz
inc
mov
pushf
mov
fists
jo
mov
ljmp
mov
insl
scas
cmc
leave
sahf
adc
lcall
das
subl
push
sub
popa
dec
subb
and
mov
jnp
cmpsb
mov
imul
or
pop
loop
imulb
loopne
inc
sub
fnsave
adc
adcb
mov
jb
push
mov
mov
push
xchg
aad
int3
adc
xor
push
cli
and
fs
ss
imul
test
add
mov
mov
mov
push
ljmp
cld
mov
inc
pop
push
adc
xchg
ljmp
fs
and
sub
stc
inc
std
sarb
sub
jne
jb
shlb
repnz
jge
sbb
mov
pop
mov
mov
push
cltd
inc
call
inc
pushf
aad
cmp
leave
mov
or
jbe
add
test
xor
les
sub
adc
std
in
sbb
push
lret
adc
push
outsl
test
out
jl
pop
out
mulb
add
rorb
scas
jae
cmp
mov
movsb
xor
pop
push
je
dec
outsb
rcrb
les
rorb
icebp
rcrb
mov
fistps
clc
pop
push
addl
ds
and
cmp
xchg
cld
data16
or
stos
dec
jbe
aam
das
loopne
xchg
js
and
add
sbb
mov
fxch
jecxz
push
and
and
movsl
mov
jae
mov
mov
fstps
test
ja
ss
jecxz
cmp
jns
jge
jle
repz
cmp
pop
sbb
std
xor
mov
aad
push
mov
mov
mov
arpl
arpl
outsl
mov
xchg
adc
fisttpl
jb
jbe
inc
jge
out
xchg
add
inc
pop
inc
mov
mov
pop
lods
fidivs
loopne
enter
lock
add
push
mov
xor
repz
mov
pop
ret
aam
push
dec
fadd
and
ljmp
push
jb,pn
sub
add
dec
xchg
pop
out
mov
aaa
dec
and
sub
xchg
shrb
shrl
in
dec
rcr
loope
lret
xorb
push
lods
cltd
mov
mov
scas
popa
fists
aad
leave
fldenv
js
push
add
and
hlt
pop
xor
in
gs
push
js,pt
movsb
inc
inc
loopne
adc
imul
sbb
cmpsl
sub
adc
sahf
addr16
xchg
fwait
popa
imul
in
dec
add
dec
testb
mov
and
push
insl
lcall
jno
jb
in
cmp
shl
mov
enter
add
pop
scas
leave
pop
iret
sbb
shl
loop
cmp
jmp
fwait
aad
daa
mov
out
cmp
mov
add
sbb
lret
loopne
add
mov
adc
pop
mov
dec
mov
jmp
fst
cltd
arpl
push
xor
xlat
mov
mov
call
mov
ds
sub
or
mov
cmp
and
dec
xchg
stos
rclb
aaa
dec
sub
mov
and
xchg
imul
movsl
aas
jmp
aas
pushf
dec
push
mov
push
mov
and
mov
jg
or
clc
mov
rcrl
mov
shl
mov
push
sbb
in
push
int
call
push
add
lcall
insb
lcall
cmpsb
call
in
mov
lods
cmp
insl
xor
mov
jb
push
push
imul
ja
mov
pop
mov
pop
div
sbb
jmp
jge
icebp
add
fisttpll
inc
insl
mov
notb
sbb
test
pop
test
daa
popa
cmpsb
push
xor
shr
pop
ficompl
enter
fdivrs
hlt
mov
scas
push
jns
sub
hlt
sti
pop
lahf
psubw
lcall
cmc
mov
cs
imul
mov
incl
lock
enter
sarb
push
adc
fidivrl
stos
xchg
add
xchg
inc
xchg
loop
rol
in
cmp
pop
add
xor
sub
int3
dec
sbb
xor
test
mov
sbb
lret
adc
fisubrl
fisttps
popa
or
mov
mov
addr16
insb
or
push
stc
fidivrs
repz
out
mov
fmull
and
fwait
jle
cmc
fstps
or
lret
xchg
add
xchg
or
cs
test
in
cwtl
pusha
aam
out
ljmp
add
cli
pusha
push
rcrl
ja
push
sbb
out
jnp
lret
pop
xor
pop
mov
push
xor
add
stos
fidivs
repz
xchg
adc
or
sub
jae
xor
out
frstor
xchg
out
imul
nop
lret
dec
sub
out
push
lock
jbe
mov
add
loopne
loope
ss
ja
or
inc
subb
ds
xor
ret
lods
mov
jl
pusha
lahf
pop
lret
jo
scas
mov
pop
out
imul
sub
rclb
jmp
subl
outsl
inc
popf
fwait
sub
out
ficomps
dec
leave
movsb
dec
sahf
fnsave
repz
or
outsl
xrelease
cli
push
aad
xor
popa
loopne
cli
xor
inc
rcrb
rcll
sti
imul
pop
or
shlb
mov
popf
rolb
jne
xchg
dec
jne
dec
mov
xor
mov
xchg
repnz
sub
xchg
call
enter
dec
sbb
sbb
fisttpl
pop
stos
dec
and
inc
cs
stos
adc
enter
cmp
mov
in
mov
sbb
out
daa
lret
cltd
and
mov
cs
cmp
in
pop
cmpsl
xor
das
pop
pop
out
mov
fiaddl
jnp
mov
pushf
rcr
jmp
aad
push
or
decl
mov
sbb
lahf
mov
inc
push
sbb
imul
inc
arpl
mov
push
pop
xchg
cmp
js
aad
xchg
mov
mov
mov
popa
mov
leave
mov
outsb
mov
int3
inc
dec
add
push
mov
es
out
push
xchg
test
ficompl
leave
stos
push
scas
lea
andb
xor
mov
sub
push
icebp
xchg
push
std
pushf
and
lahf
pusha
loopne
sub
out
lea
push
mov
mov
push
mov
das
andb
stc
mov
int
jno
push
inc
aaa
mov
daa
pop
xchg
mov
mov
in
std
push
rorb
dec
jae
pop
mov
cmpsl
into
sbb
cs
mov
movsl
mov
leave
dec
sbb
add
in
cmc
test
scas
filds
adc
mov
xor
xchg
mov
fs
xchg
popf
push
jae
mov
insb
mov
cli
fldenv
outsl
push
mov
icebp
mov
divl
cld
leave
popa
cmpsl
and
imul
aas
clc
mov
ja
ja
insb
test
or
xchg
mov
mov
les
xor
sub
inc
sbb
in
fs
mov
sti
pop
mov
stos
and
jae
stos
cmpsb
fcmovnu
mov
or
lret
or
mov
sub
loop
stc
inc
push
rcll
fldl
lods
mov
sub
push
into
mull
jp
cmpsl
rorl
pop
rcr
and
push
adc
push
add
xor
repz
xchg
add
inc
hlt
pop
incl
add
fldenv
js
adc
insb
sub
sub
mov
inc
inc
xor
push
pop
rcll
addr16
jnp
mov
pop
addl
aad
jns
jno
push
sbb
stos
xor
sub
sbb
aaa
ret
mov
jecxz
jae
and
cmpsb
pop
push
rorb
add
xchg
iret
maxps
mov
cli
sbb
lods
cli
inc
push
mov
mov
sub
popf
or
fnstcw
aad
jecxz
xchg
or
je
mov
xor
xchg
jne
push
jae
stos
into
mov
fcoml
movsl
xor
scas
mov
and
xchg
cmpsl
insl
stos
fisubrs
or
insl
jmp
orb
push
xor
loopne
pushf
sbb
pop
push
dec
loopne
cwtl
rclb
dec
jl
lock
js
mov
pop
adc
push
cs
fidivrl
hlt
ds
movsb
add
and
pop
out
cmp
mov
xor
loop
xlat
sti
add
punpcklwd
lods
sub
icebp
xor
cmpsb
dec
imul
mov
mov
cwtl
add
xchg
fnstcw
jno
pusha
mov
rol
dec
stc
pop
sti
cmovle
and
lcall
loop
mov
ret
add
das
dec
ja
adc
ss
cmp
faddl
mov
or
fmull
push
aam
in
insl
pshufw
iret
adc
sub
aam
je
xchg
jl
push
lcall
and
sub
mov
ljmp
inc
repnz
cmp
pop
jno
call
cltd
cmp
xorl
mov
xchg
pop
int
lods
add
and
shr
fisubrl
lds
mov
stc
pop
pop
inc
add
cmpsb
inc
mov
pusha
jp,pt
repnz
nop
mov
leave
xchg
test
xchg
push
negb
mov
push
mov
in
or
inc
dec
push
inc
test
mov
pop
xchg
xchg
imul
pop
jle
jle
cltd
test
jnp
inc
sbb
sbbb
scas
jl
cmp
nop
mov
cmp
fldenv
fdivrs
xchg
dec
out
push
std
xchg
mov
mov
xor
mov
fdivrs
ja
xchg
push
ret
xchg
inc
jle
sub
scas
mov
mov
mov
jecxz
sub
out
loop
xchg
jae
cmp
out
mov
movsl
push
es
shr
daa
mov
andl
or
dec
ret
mov
stos
std
punpcklbw
iret
in
popf
mov
xor
sti
cmp
xor
std
outsb
sub
xchg
adc
testb
in
test
testb
arpl
outsl
pop
cwtl
or
push
jb
bound
or
addr16
lret
je
mov
xor
adc
scas
rclb
pop
outsl
lock
xor
mov
dec
fs
xchg
xlat
dec
pop
mov
data16
rolb
inc
pop
inc
push
test
aaa
fsubrl
mov
cmpsb
flds
dec
lahf
sti
shrl
cmp
mov
jecxz
pop
fmul
ss
movsb
mov
inc
in
and
pop
cwtl
xchg
nop
testl
lea
xchg
lret
fdivrp
add
mov
ret
lret
dec
scas
dec
sub
or
rcll
jbe
cld
adcl
mov
push
jno
ss
je
cmpsb
inc
push
dec
jl
add
xor
ss
fsubrp
mov
int
cmovne
gs
fisubrs
test
jns
aad
out
lods
jmp
lds
mov
das
xor
push
test
movsb
sbb
lret
dec
dec
mov
repnz
int3
mov
flds
mov
nopl
mov
cmp
das
aad
jmp
test
aaa
movb
add
mov
cmp
adc
ja
test
pop
shrb
mov
and
into
inc
inc
and
ss
add
sub
xchg
adcb
dec
mov
add
mov
les
stos
daa
aam
or
std
push
fstpt
aas
mov
mov
jge
sbb
xlat
mul
pop
xlat
mov
shr
std
call
fbstp
lret
push
adc
or
imul
cld
mov
mov
inc
aam
push
fdivrl
call
cmpsl
or
and
hlt
ficompl
imul
fs
addr16
xor
jge
pop
fildll
sub
push
mov
data16
pusha
dec
or
mov
mov
aas
lods
mov
xchg
test
lret
repnz
fdivrp
jae
out
scas
aad
shrb
ss
xchg
dec
test
aaa
xchg
push
mov
and
push
dec
push
loopne
imul
mov
adcl
cmova
xor
cmp
pusha
and
cmpsb
pop
inc
ror
icebp
inc
cmpsb
call
xor
jp
push
roll
dec
pop
sbb
fcoml
jns
arpl
push
mov
sbb
pop
push
outsb
xor
in
shlb
ljmp
cli
cmp
pop
sbb
pop
jmp
mov
sbb
xchg
test
jnp
dec
comiss
in
cltd
or
mov
lods
cmpsb
jle
xchg
in
sbb
sub
enter
mov
int
inc
xor
aad
sub
cmp
xchg
jae
inc
rorb
repz
scas
pop
mull
mov
imul
filds
test
xadd
scas
add
aad
sub
pop
insl
mov
mov
lretw
inc
test
test
dec
imul
fs
push
lret
pop
dec
dec
push
jne
dec
test
sbb
aas
enter
jmp
mov
pop
lods
fcomps
jb
pop
jmp
subb
scas
xchg
xchg
inc
js
xchg
jmp
cmpsb
xchg
sub
lret
inc
mov
rolb
pop
dec
out
sub
mov
cmc
addb
xchg
call
ja
popa
inc
leave
lock
push
cmp
test
sbb
sub
imul
pushf
stos
pushf
imul
aad
sarl
jl
cltd
je
mov
cmpl
lds
lods
xor
jno
loop
scas
mov
dec
xor
pop
shrl
jns
stos
ret
lea
sub
inc
mov
inc
mov
daa
sahf
lcall
add
sub
cmp
inc
int
ret
movsl
pushf
pop
lahf
ss
add
push
bound
insl
push
jns
push
das
cwtl
std
lret
test
pop
es
les
or
outsb
xor
adc
push
jbe
nop
jns
cmp
sbb
mov
incl
add
jb
lahf
pop
outsb
lock
popf
ret
push
cmpsb
stos
lea
stc
stos
jl
cmp
pop
jge
bound
sub
clc
in
lock
xchg
xchg
ss
or
xchg
cmc
subb
push
and
inc
cmp
jl
xchg
mov
mov
mov
or
sahf
xor
adc
and
pushf
xchg
in
inc
fcmove
adc
pop
cmp
mov
push
push
mov
int
inc
inc
and
stc
hlt
jmp
or
test
lcall
jge
lods
fisubl
mov
xchg
test
pop
test
jne
mov
addr16
int
mov
push
sarl
enter
in
mov
pop
sbb
pop
aam
jnp
jg
mov
jae
call
decb
adc
cmp
lds
jmp
das
rcrb
pop
xchg
divb
movsl
imul
sub
push
jl
loopne
pop
insb
data16
cwtl
fcmovnu
js
fs
in
fdivr
pop
loope
xor
xchg
inc
lock
mov
mov
jne
mov
sbb
leave
sub
sti
xor
icebp
cwtl
inc
push
ljmp
and
inc
mov
fsubrl
cmc
jmp
mov
int
loope
mov
sub
push
shll
dec
popf
cmp
mov
imul
popa
cmp
dec
sub
cmp
sti
pop
cltd
jl
sahf
mov
ficoml
cmp
in
xlat
xchg
arpl
jbe
adc
mov
pop
mov
mov
inc
enter
dec
push
mov
addr16
pop
sbb
ja
add
xchg
sahf
call
aaa
lods
xchg
test
imul
hlt
cmp
aam
add
rcrb
lcall
je
jmp
mov
xchg
adc
aam
adc
xor
mov
push
repnz
adc
sar
pop
outsb
or
cs
and
lods
push
and
and
jns
dec
or
roll
int3
loope
out
sbb
dec
outsb
les
jecxz
cmp
mov
pop
test
jbe
outsl
cmp
sub
cld
mov
lds
imul
mov
pop
xor
pusha
call
into
xchg
lret
fiadds
fbld
pop
cmp
cs
daa
out
rcrb
push
xor
std
or
aas
add
cmp
les
dec
ja
push
pop
mov
mov
out
mov
sub
sarl
test
es
cwtl
jg
in
lods
ja
lret
lea
pop
push
lods
call
imul
jne
test
add
adc
push
out
sub
popw
rcrl
into
test
jge
xchg
ds
sub
fisubrs
out
adc
jecxz
adc
push
es
or
cmpb
mov
mov
adc
jl
cmpsl
mov
mov
or
test
or
aaa
cmp
sbb
push
orl
incl
sub
nop
push
stos
fidivs
mov
inc
inc
std
nop
cmp
fadd
cmp
xor
add
cmpsl
fiaddl
fistps
xchg
repnz
push
mov
std
and
jg
fistpll
mov
add
dec
mov
int3
xor
sub
inc
ss
daa
inc
and
jle
push
dec
mov
fs
fldl
push
dec
xchg
dec
jg
mov
inc
lret
negb
enter
xchg
cmp
das
fwait
popa
inc
bound
or
movl
out
scas
push
fs
pop
sahf
in
fwait
xchg
and
sahf
mov
xor
cmpsl
dec
jge
cmpl
cmp
das
cmp
and
fsubrl
pop
je
ljmp
ds
jp
mov
sbb
add
loop
call
cwtl
jbe
mov
lds
fisubs
push
loopne
push
mov
jno
pop
mov
push
movsb
gs
pop
adc
sub
mov
mov
cs
test
fwait
cltd
dec
mov
fistl
outsb
push
or
adc
imul
inc
push
andb
imul
add
adcl
ret
sbb
and
xor
add
addr16
dec
sti
arpl
mov
int
mov
jmp
mov
mov
lcall
and
jmp
ror
push
inc
aam
sahf
push
inc
addr16
pop
lock
fmuls
pop
and
fdiv
inc
xchg
stc
stos
add
add
sarl
push
add
cmp
or
fistpll
xor
xorb
and
imul
aam
cli
outsl
push
push
add
pop
lods
nop
movsb
in
int
movsb
lahf
popa
cmp
int3
stc
pop
mov
dec
xor
faddl
add
loopne
subl
mov
std
mov
cli
or
ret
or
push
push
xchg
and
push
nop
sub
jbe
ds
cmp
insl
sbb
test
inc
sbb
loopne
sbb
jecxz
enter
into
sbbb
xchg
pop
stos
decb
xchg
push
adc
sti
adc
shrl
push
test
push
pop
in
movsl
icebp
inc
push
movb
jnp
pop
push
fidivrs
loop
cmp
xor
dec
imulb
adc
add
loope
adc
imul
mov
test
cmp
test
jnp
mov
jg
daa
pop
xchg
inc
in
adc
scas
and
xlat
push
adc
data16
hlt
sbb
jne
add
or
leave
rol
int3
notb
fnstsw
push
mov
add
adc
fidivl
sub
mov
rorl
sub
mov
mov
xor
cmpsl
fwait
dec
inc
or
jecxz
rcr
jmp
inc
mov
rol
xchg
insl
xor
pop
jno
std
pop
cmp
vcvtpd2dqx
jb
and
mov
lret
paddb
xor
call
xchg
sub
fimuls
or
lock
scas
xor
jbe
mov
and
push
adc
aas
adc
mov
pop
cltd
mov
xor
in
jge
sub
test
fstps
add
jle
aaa
mov
repz
xchg
add
push
ret
dec
push
rorb
jecxz
or
cmpxchg
sti
push
inc
push
stc
ss
push
mov
in
std
repz
test
mov
mov
sbb
insb
cmp
inc
in
push
divl
mov
aaa
ja
push
pop
leave
lret
add
out
mov
fidivl
cmp
xchg
xchg
popf
mov
pop
adc
in
orl
pop
dec
xor
cld
outsb
les
fistpll
cltd
mov
xchg
ficomps
insl
cmp
inc
or
movsl
lahf
jbe
int
outsl
dec
cmp
movsl
jmp
rorl
in
addr16
inc
clc
cmp
adcb
push
push
push
test
pop
jecxz
sbb
mov
lock
mov
mov
xor
pushf
jmp
in
dec
aaa
scas
orl
xor
dec
in
dec
sbb
push
jno
push
into
loopne
xchg
fisttpl
iret
xchg
ja
cwtl
mov
mov
pushf
cmp
pop
cmp
pop
stos
das
jmp
or
pop
mov
inc
jmp
imul
pop
cli
leave
jl
mov
jl
add
hlt
imul
jne
inc
xor
aam
and
or
adc
mov
inc
test
pop
stos
fistps
ss
cmp
lds
xchg
icebp
and
std
xchg
push
push
or
jnp
jns
push
xchg
jae
mov
sub
dec
movsl
rcl
aad
xor
movsb
pop
shll
fsubp
ret
add
test
jmp
ljmp
scas
jb
jp
sbb
jnp
adc
fstps
inc
call
out
loopne
xor
pop
out
dec
bound
fmulp
push
jns
or
test
pop
sbb
mov
xchg
sub
mov
jb
js
repz
lahf
or
cmc
xor
or
pop
shrl
inc
into
js
addb
push
popf
test
mull
mov
nop
mov
lock
popf
jb
repz
sub
punpcklwd
out
mov
sbb
and
das
lods
dec
sbb
jns
pop
dec
sub
pop
adc
xor
adc
into
xor
inc
dec
rcll
loope
cwtl
inc
jae
lret
aaa
ja
xor
divl
xchg
mov
fucom
sbb
in
das
insl
pop
jl
sbb
pushl
dec
dec
into
pop
adc
cmp
or
mov
add
add
in
xchg
cmp
loope
popf
xchg
add
daa
sub
dec
jbe
lret
add
jecxz
push
leave
dec
mov
sahf
xchg
sub
or
ret
cmp
sbb
loop
mov
iret
mov
and
lcall
dec
mov
enter
imul
push
and
loopne
pop
aaa
pop
out
fwait
mov
mov
mov
push
stos
mov
mov
ret
mov
stos
test
vpsubusb
shrl
mov
repnz
stos
pop
jbe
xor
lods
and
bound
pop
cwtl
int3
jmp
adc
xchg
jno
cs
mov
xchg
jle
xchg
int3
sti
hlt
ret
fisttpl
pop
pop
dec
daa
cmp
jae
in
scas
stos
inc
fisttpll
dec
pop
or
cmp
jne
cmpsb
insl
and
subl
push
push
aad
dec
or
and
out
inc
inc
repz
dec
adc
outsb
arpl
lds
xchg
stos
or
pop
xchg
xchg
mov
iret
test
inc
rcll
push
mov
mov
pop
insb
sub
in
pop
fdivrl
dec
mov
adc
pop
mov
sub
jns
lret
arpl
mov
jbe
pop
outsl
inc
xlat
add
movsb
sub
and
inc
jle
aas
lret
xchg
sbb
insb
mov
sbb
dec
daa
ret
jo
cli
mov
sbbb
mov
sub
xor
fcomps
out
aaa
adc
xor
test
or
sahf
testb
aaa
mov
lret
out
cltd
neg
pop
das
nop
lcall
mov
inc
mov
pop
rorb
adc
cmp
dec
pushf
lods
and
aad
dec
test
jl
mov
sbb
lcall
dec
sbb
xorb
int3
rorl
dec
inc
mov
js
sahf
lds
testl
hlt
jecxz
in
mov
push
mov
sub
jl
movups
lds
mov
loop
out
in
js
lods
rorl
out
lock
inc
dec
cld
data16
cltd
push
dec
cwtl
xchg
loopne
jp
xor
xchg
push
push
xchg
mov
mov
add
lods
lret
push
add
jmp
add
jecxz
sbb
test
push
and
scas
shlb
sbb
inc
sahf
shlb
jmp
add
jge
and
lds
lock
frstor
scas
dec
ljmp
pop
jle
xor
negl
addr16
fwait
lods
mov
jns
insb
mov
movsb
mov
cmp
ret
mov
bound
idiv
nop/reserved
arpl
test
cmp
cmp
cmpsl
and
sbb
fiaddl
popf
cmp
pusha
push
pop
inc
loop
jnp
hlt
out
addr16
std
cld
imul
out
push
cmp
out
pop
and
xchg
mov
dec
xor
repnz
xor
cmc
ss
insl
cmp
pusha
sbb
std
push
mov
fisttpll
cmp
lods
xchg
or
dec
add
sbb
mov
inc
mov
cwtl
pop
ja
outsl
or
jg
xchg
pop
jns
sar
xchg
inc
mov
jne
pushf
pop
icebp
xchg
sahf
ret
xor
popa
add
add
adc
or
jo
sbb
sbb
mov
imul
insb
inc
mov
fldl
cs
inc
mov
rcr
cmp
mov
add
scas
mov
push
imul
inc
in
dec
fildll
jmp
repz
lds
js
ljmp
or
sbb
imul
data16
cmpsl
and
mov
popf
jecxz
mov
hlt
cltd
std
dec
inc
cld
cs
pop
mov
inc
sub
int
xor
sub
dec
push
mov
xlat
ds
sbb
jl
jno
mov
xor
rolb
cld
mov
jl
push
imulb
into
xchg
mov
push
cli
das
fsubl
cli
push
movsl
add
les
pop
mov
es
test
cmp
inc
je
dec
xchg
xchg
mov
imul
or
adc
fcom
xchg
in
rorl
xor
or
mov
fistps
mov
repz
push
stc
ret
iret
gs
in
lock
adc
mov
arpl
in
dec
add
outsb
jno
inc
leave
jb
sbb
lock
jne
hlt
add
mov
mov
lods
fwait
call
dec
mov
rorl
push
push
or
fwait
mov
aam
sbb
jmp
shlb
mov
cli
pusha
sub
fists
adc
loop
fsubr
mov
jmp
jae
push
test
decb
jecxz
pop
adc
pop
cmc
sbb
mov
js
lods
sbb
cmp
mov
lods
adc
std
mov
and
pushf
jns
sti
loopne
dec
mov
jne
repz
or
ss
sub
mov
out
lods
lret
fsts
add
fisubs
sbb
test
or
xor
inc
arpl
arpl
inc
js
inc
ljmp
iret
out
xchg
fmull
inc
and
pop
dec
shl
pop
xor
mov
lret
std
mov
mov
jmp
dec
jg
push
dec
scas
add
adc
inc
repz
and
movsb
cmpsl
pop
enter
cld
test
lea
xchg
cmp
jo
sub
insl
or
fldl
push
into
or
dec
movsb
icebp
in
popa
and
dec
pop
movsb
jl
jne
mov
or
and
mov
xor
push
adc
mov
inc
insl
mov
mov
in
aaa
xlat
and
sbb
rorb
xor
xlat
sarl
xchg
jnp
pop
lahf
mov
pop
aam
mov
daa
nop
enter
daa
into
mov
lahf
add
add
dec
sub
push
add
js
aas
xchg
cltd
rcl
mov
push
mov
push
mov
sbb
into
arpl
mov
mov
xlat
push
dec
mov
hlt
add
repnz
in
add
xrelease
ds
jae
adc
mov
dec
enter
fucomi
loope
adc
iret
xchg
mov
in
sub
addr16
sbb
jg
cmp
mov
mov
dec
fwait
imul
aam
icebp
icebp
sub
or
pop
push
sahf
inc
aas
sub
dec
pop
lret
pop
ret
xchg
imul
pop
xchg
push
jge
dec
scas
lds
jo
adc
fmul
pop
sbb
and
pop
sub
je
mov
rclb
dec
out
dec
push
push
call
sbb
outsl
icebp
lods
ss
repz
push
lret
loop
mov
cmp
int
jbe
push
es
sbb
dec
pop
mov
rcr
int3
scas
repz
pop
and
mov
addl
adc
psubd
inc
xchg
idivl
mov
fistl
mov
xlat
jbe
dec
data16
je
loope
jmp
push
pop
je
outsb
add
dec
jg
inc
aas
cmp
das
movsb
test
and
dec
cmp
enter
lahf
sti
nop
mov
mov
inc
movsl
jp
cld
dec
insb
mov
xlat
adc
add
xorb
xchg
ret
jns
adc
out
aad
pop
mov
scas
fimull
popa
lds
inc
lock
insl
mov
push
fsubs
test
outsb
jbe
mov
loope
cmp
adcl
sbb
in
and
xchg
xchg
dec
mov
mov
push
add
shr
cli
shlb
xor
jno
sub
lret
sbbl
jbe
test
cltd
add
mov
fabs
les
cmp
mov
lea
lret
jae
push
or
or
popa
pop
arpl
nop
inc
adc
into
inc
xchg
push
xor
and
data16
cli
cli
lret
mov
xor
xchg
xlat
into
cmpsl
mov
xchg
pop
cmp
sbb
not
sahf
lret
mov
addr16
mov
das
hlt
mov
insb
scas
je
popf
xchg
push
cmp
pop
sub
push
ficoml
fiaddl
dec
or
mov
fnstcw
sub
mov
sub
adc
dec
cmp
mov
movsb
psubsb
out
sub
pusha
gs
xor
push
xchg
mov
and
xor
into
cmc
in
arpl
sub
add
sub
jecxz
add
bound
and
push
imul
dec
imul
xchg
aam
lcall
repnz
xor
pop
mul
pop
shr
cltd
nop
sub
fidivl
out
mov
mov
cmp
add
inc
jno
in
int
cmp
push
pop
sub
and
dec
push
out
xlat
and
dec
mov
and
sti
jmp
sbb
lret
in
inc
mov
cld
add
mov
push
call
inc
pcmpeqw
repnz
mov
into
pop
ret
pop
mov
jae
adc
call
mov
push
stc
add
fdivs
adc
lods
sbb
outsb
lea
inc
movsb
adc
movsl
xor
sbb
push
dec
lret
jo
push
repnz
gs
adc
and
xchg
inc
lret
sbb
xchg
push
adc
mov
stos
test
jns
lods
iret
xor
shl
xor
xor
dec
insb
push
icebp
flds
int
xchg
dec
xchg
imul
clc
adc
ds
mov
aas
sub
inc
and
cmp
fldenv
push
outsb
push
inc
xchg
sbb
outsb
push
xchg
sub
jns
test
inc
aaa
xchg
shlb
add
mov
adc
ljmp
xchg
aad
push
fsubp
jne
lcall
cmc
mov
or
lock
or
das
inc
xchg
adc
xor
out
xchg
pop
xor
add
fsts
jae
dec
cwtl
push
mov
and
sbb
add
inc
cwtl
sbb
jge
xor
xor
push
movsl
xor
inc
popa
lods
mov
pop
loope
imul
jmp
xlat
mov
int3
es
outsb
test
mov
mov
decl
sahf
out
and
cmp
add
cmp
shlb
scas
cmp
sub
loop
adc
mov
into
sbb
mov
test
cwtl
int
cmp
sbb
js
loopne
test
roll
dec
scas
in
ljmp
xlat
push
adc
cli
push
lcall
sahf
jge
cmp
enter
fmull
mov
cwtl
test
and
or
add
fistps
dec
add
stc
scas
fwait
lea
pop
cmp
imul
cmp
jmp
cmp
fwait
pop
mov
int3
sbb
out
sarb
fisttps
sub
testl
inc
nop
add
data16
inc
ljmp
adc
inc
sarl
lahf
inc
and
or
loop
pop
push
dec
in
inc
lret
inc
jbe
cmp
mov
jmp
lahf
mov
mov
mov
and
add
dec
iret
jge
jae
cmp
mov
div
loop
sbb
push
push
fsts
les
dec
mov
loop
mov
dec
imul
xor
enter
xor
call
push
cli
ljmp
add
push
mov
mov
aad
psubb
mov
repz
and
jp
cwtl
fistpll
idivb
mov
imul
sbb
pop
mov
add
les
xor
ljmp
xchg
xor
fsts
dec
push
aaa
push
push
cmp
xlat
mov
rolb
mov
call
ljmp
test
aad
push
mov
fidivl
movsl
sub
pop
mov
jmp
imul
cmc
jb
dec
add
loop
jle
test
iret
lods
adc
in
or
cmp
mov
lret
jbe
sub
push
adc
add
repnz
jb
xorl
lcall
popa
push
pop
add
cmpsb
mov
jns
or
add
imul
icebp
mov
push
mov
mov
push
jnp
aas
adc
xchg
hlt
gs
jl
adc
aad
lret
xor
push
push
xor
int3
push
add
sbb
pop
je
sbb
dec
adc
outsl
fcomps
aas
xchg
test
inc
sbbl
cmp
ret
mov
out
ja
addr16
cld
sub
insb
mov
adc
mov
jmp
add
cmp
push
adc
add
mov
pop
dec
pop
daa
jge
adc
jle
inc
loop
dec
lock
pop
insl
dec
psubb
ja
sub
je
jl
jmp
mov
mov
adc
pop
or
fistl
xchg
add
sub
in
push
add
jle
or
arpl
in
and
in
adc
mov
popf
cmc
fisubl
shr
inc
lret
add
mov
xlat
faddl
mov
push
mov
mov
daa
add
scas
cmpl
ja
pop
cmp
in
xchg
jnp
mov
ss
lcall
push
loope
cmpsb
xchg
xchg
push
mov
ds
inc
negb
andl
addl
adc
das
bound
jae
pop
push
sub
es
push
fwait
imul
and
lret
cmp
pop
hlt
adc
cwtl
push
testl
mov
sbb
pushf
inc
mov
lods
daa
stc
push
outsb
popa
lret
rcll
scas
adc
in
ss
add
lret
pop
imul
lods
mov
xchg
inc
sbb
shl
push
and
jbe
popa
leave
mov
pop
out
mov
dec
cmpsl
lods
sti
lock
xchg
mov
jo
clc
pop
dec
ds
fwait
pusha
xor
mov
adc
sub
cmpl
into
pop
pusha
aas
outsl
out
loop
dec
xorb
mov
xor
add
shlb
and
sub
test
sbb
xchg
mov
push
xor
loop
shl
sub
popa
inc
lret
mov
jmp
mov
movsl
loope
xor
repnz
jp,pn
cmp
mov
push
mov
addr16
leave
daa
test
cwtl
hlt
aad
mov
repz
jbe
add
pushf
mov
clc
lods
mov
cmp
aaa
cmp
js
int3
sub
les
cmc
fisubl
addr16
adc
adc
sub
enter
jns
imul
movsl
push
dec
mov
cmpsl
push
or
mov
jl
add
daa
and
push
inc
jbe
shll
or
jnp
loopne
test
mov
pop
pop
in
lahf
xchg
in
insl
stos
and
mov
adc
cmp
adcb
pop
dec
push
xchg
enter
lock
or
sar
xor
adc
lds
xchg
scas
andnps
add
frstor
xor
pusha
lret
mov
mov
stos
shr
push
or
testl
or
clc
ja
or
mov
jne
pop
shrl
ss
fs
cs
mov
sub
dec
loopne
add
rclb
jb
cmp
add
fstl
jmp
cmp
orb
xchg
pop
fcoms
cmc
int3
cmpsl
lret
gs
add
sarb
popl
sub
ljmp
mov
sub
orl
scas
and
stc
lahf
out
adc
sbb
xor
in
aad
push
push
out
mov
sub
lahf
dec
xchg
cmp
lods
and
and
sub
mov
enter
sbb
pop
lcall
aad
jge
sbb
push
jge
adc
jecxz
stos
mov
insb
ja
cmp
repnz
cmc
pop
cs
cmpsl
pop
mov
rorb
cmp
and
mov
jmp
test
cmc
mov
popl
jle
cld
movsb
inc
test
pushf
cmc
scas
addl
rorl
mov
dec
rol
or
pop
push
xchg
cmp
sbbb
or
add
cmpsl
inc
adc
cmp
fsubrl
psubb
inc
shrl
sub
testl
xor
ljmp
add
mov
loope
pmovmskb
ja
dec
bound
mov
push
pop
shrl
xlat
mov
cmp
outsb
rorb
jbe
ret
push
jb
mov
clc
hlt
sti
rorb
dec
out
popf
or
cmc
cmp
stos
ret
mov
and
xor
rorl
shl
pop
in
popa
pop
fwait
repnz
sbb
or
push
repz
clc
cmp
ljmp
cmp
push
fs
hlt
insb
adc
popa
dec
je
mov
dec
add
xor
xchg
dec
mov
repnz
sbbl
xor
aad
sbb
pop
dec
inc
push
cmc
addr16
stc
mov
faddl
sub
out
out
rolb
add
sar
mov
pop
fsubs
mov
and
and
sbb
loop
outsl
sbb
pop
insb
mov
fistl
pop
mov
adc
cmp
sti
push
fnstsw
add
jle
fists
pop
or
sahf
sahf
add
int
jl
xchg
shlb
scas
ja
adc
dec
aad
popa
mov
mov
cs
popa
bound
xchg
movsb
lcall
dec
sub
cwtl
lret
outsl
mov
negb
inc
lea
insl
ja
inc
mov
sbb
subb
mov
aam
and
push
mov
data16
jecxz
xchg
sbb
dec
lret
push
xlat
mov
mov
and
mov
mov
and
push
add
sbb
mov
scas
pop
push
mov
and
pushf
xchg
inc
out
ljmp
das
push
repz
mov
dec
add
lret
enter
xchg
shrb
andl
jg
xchg
mov
movsl
xor
add
ds
shlb
jmp
scas
insl
sub
dec
sbb
push
mov
mov
jmp
inc
test
xchg
adc
arpl
mov
jnp
mov
cmp
mov
xor
dec
sub
jo
mov
fdiv
hlt
je
cmp
dec
outsb
xlat
cmc
leave
dec
pop
fistps
mov
pop
repz
gs
mov
lds
ja
enter
scas
pop
and
push
push
add
fnsave
in
xchg
push
jecxz
sub
cmp
push
les
test
push
push
je
or
cmp
cwtl
fs
fstps
shrl
dec
popa
push
push
repnz
jmp
dec
and
sub
xchg
xor
xchg
aaa
push
add
inc
push
xchg
and
lea
cmovs
mov
push
cmpsl
sbb
cltd
jne
xor
hlt
out
imul
fs
xor
imul
sub
add
xchg
fldt
ljmp
mov
mov
dec
pop
sub
gs
ficoms
pop
imul
rcrl
cltd
pop
repz
pusha
int3
movsl
ret
fwait
sbb
add
leave
inc
rolb
aas
in
cmp
fs
xlat
jno
subb
scas
push
mov
jl
mov
dec
mov
jo
enter
and
adc
jge
in
push
aas
pusha
pop
ret
aad
sarl
mov
cmc
sbb
cmp
jge
mov
dec
jae
pop
movsb
leave
jo
loope
jmp
push
add
jle
mov
push
bound
pop
xchg
movsb
mov
mov
jle
mov
push
jmp
data16
xchg
lahf
fsubs
sti
std
cmp
cmp
divl
sub
xchg
inc
mov
in
xor
jbe
es
or
decb
push
xlat
inc
fsubp
test
mov
cmp
jne
int
or
mov
and
inc
mov
xchg
jnp
pop
cmp
pop
leave
xchg
pop
mov
repnz
call
js
test
xchg
pop
sbb
dec
mov
pop
jo
and
inc
outsl
shr
rcl
pop
fldt
adc
out
jmp
adc
xchg
inc
imull
jg
sub
out
clc
or
stos
push
jmp
int3
mov
dec
add
ja
mov
int3
pop
test
data16
fnstsw
jmp
inc
bound
mov
ret
or
push
dec
mov
lods
outsb
fisubrs
add
or
lods
mov
mov
xor
aad
pop
mov
les
adc
jnp
mov
and
push
push
pop
lds
out
movsl
dec
clc
insb
pop
cltd
bound
lds
and
inc
clc
cmp
loope
pop
sub
sub
xchg
pop
lcall
xchg
adc
and
sbb
or
xorl
gs
pop
mov
shl
scas
xchg
ss
cli
je
inc
int3
xchg
pop
mov
fsubl
es
jb
sahf
jecxz
ret
mov
and
test
popa
aas
and
jge
mov
jg
cmpsl
sub
stos
mov
and
mov
jbe
jne
scas
xor
pop
daa
into
mov
add
ljmp
mov
adc
or
or
int3
stos
sbb
adc
lods
push
xor
hlt
js
and
js
nop
dec
sbb
dec
lods
loop
mov
jb
pop
cmc
loope
sbb
pop
aad
inc
leave
push
adc
inc
mov
ret
add
push
sub
mov
dec
nop
cmp
dec
push
stc
das
fldcw
xor
mov
cmpsl
jmp
cmpsb
dec
push
fadd
cmpsb
fstpl
cmp
add
sub
fsubl
lahf
std
aaa
sbb
push
sub
sbb
loope
xchg
rorl
xchg
lret
mov
imul
push
lcall
movsb
cli
xchg
cmp
rolb
mov
xor
arpl
gs
xchg
iret
pop
loop
lock
icebp
ljmp
push
cli
pop
ret
mov
push
mov
rcrl
rcll
das
data16
stos
int
inc
sub
jns
out
fcompl
sub
outsl
hlt
lret
push
and
cmp
rcll
mov
sub
fcoms
insl
xor
sub
aas
pop
fdivrl
pop
mov
mov
sub
popa
out
dec
pop
or
gs
movsb
sbb
push
xorb
rcrl
loope
aad
pop
xor
scas
xchg
cltd
sbb
popf
mov
inc
pop
jge
add
and
xor
test
out
xchg
addb
scas
in
xchg
in
mov
mov
cmp
inc
loope
dec
mov
sub
out
and
xchg
sbb
mov
fs
sub
or
dec
inc
imul
dec
push
popf
fdivr
xor
sarl
mov
fmuls
out
lcall
lods
icebp
sub
into
inc
lock
mov
sub
mov
cmp
add
and
mov
lds
jb
xchg
mov
xor
fs
insb
cltd
jge
js
iret
enter
mov
inc
jmp
popl
scas
jmp
sbb
xchg
mov
jmp
and
push
aas
xchg
cmp
pop
mov
xlat
xchg
mov
insb
add
jecxz
xchg
mov
jecxz
pop
xchg
call
push
inc
push
sti
xorb
inc
lds
jecxz
inc
inc
xor
shl
les
pop
pop
push
ds
outsb
lds
sar
dec
ljmp
push
push
pushf
cli
xchg
jbe
fldenv
mov
out
fstps
ja
mov
xchg
sbb
fmull
cmp
push
inc
jge
lea
cld
popf
cmp
xchg
mov
and
xor
sbb
les
cmp
and
xchg
lds
inc
or
mov
mov
push
pop
dec
ss
mov
iret
mov
xor
inc
cmp
fisubl
jns
loopne
add
sub
push
pop
and
mov
test
mov
jg
jecxz
clc
lea
jmp
xor
and
loop
in
sbb
div
ss
push
push
out
adc
cmp
out
jl
lds
pop
call
xchg
stos
mov
lret
pusha
inc
outsl
test
mov
cld
out
ljmpw
inc
insb
aaa
std
and
adc
arpl
mov
cmp
or
mov
js
das
or
or
je
shrb
xchg
cli
mov
jns
and
or
xchg
pop
xchg
xchg
or
xor
scas
mov
testb
xchg
xchg
vorps
mov
scas
push
mov
test
xchg
mov
and
jmp
mov
mov
test
rcl
stos
in
rorb
popf
mov
or
dec
jmp
xlat
sbb
cmp
xchg
jmp
mov
mov
lret
fdivs
dec
les
lahf
in
rcl
cli
and
inc
negb
xlat
jmp
adc
mov
or
pop
insl
sub
mov
shrl
inc
dec
push
adc
in
inc
imul
adc
nop
mov
pop
pop
loopne
aam
cmp
out
sar
cmpsl
push
lcall
out
das
lock
cmc
pop
jp
dec
pop
pop
rcll
leave
es
xorl
ret
add
and
pop
xchg
test
cmc
stos
outsl
ret
xchg
out
mov
mov
cmp
adc
push
out
testl
adc
out
addr16
and
jp
sub
pop
dec
cmp
cltd
mov
sub
aam
and
push
faddl
fisubrs
mov
push
jle
arpl
pmullw
sbbb
sub
lods
leave
cld
mov
pop
dec
lods
mov
repnz
icebp
icebp
sbb
es
add
pop
sub
xchg
push
bound
mov
lret
jnp
fwait
jl
dec
cmp
cwtl
test
vsubps
add
out
pop
mov
imul
insl
or
jl
or
xchg
mov
xchg
push
mov
sbb
rcrb
sub
cmpsb
or
repnz
out
jmp
js
mov
insb
outsb
or
je
into
mov
push
test
and
daa
dec
aam
mov
inc
mov
popa
push
add
sub
sbb
or
fcom
xchg
cs
xchg
aaa
xchg
pushf
push
or
and
or
gs
rcrb
in
jmp
mov
mov
nop
mov
sub
pop
lea
add
or
pop
pop
into
stc
in
and
mov
add
scas
cmp
out
push
pop
bound
push
mov
mov
fimull
hlt
mov
imul
stc
add
ds
mov
dec
sub
cli
inc
mov
and
repz
fsts
lahf
rorl
imul
insb
ficoms
int3
sahf
and
jl
cmpsb
shll
push
sub
mov
lds
int
add
mov
int3
dec
sbb
add
pcmpeqb
pop
mov
xchg
inc
cmpsl
jne
mov
adc
in
ss
add
test
and
addl
inc
fsts
xchg
rorb
cmp
bound
inc
ret
add
int3
dec
add
mov
mov
add
scas
fsts
leave
sub
mov
and
sti
fstl
aam
daa
push
sbb
push
fistps
sbb
andb
jns
sub
and
mov
mov
lock
inc
ss
filds
mov
push
mov
mov
test
test
out
hlt
repnz
cmp
cmpl
lods
mov
jo
push
xor
into
movsb
dec
mov
movsl
mov
xlat
jl
mov
nop
xor
mov
lods
std
xor
add
mov
sub
loop
pop
xor
sub
jnp
pushf
adc
pop
fbld
rcll
out
jl
xorb
cmpsl
clc
mov
jns
int3
xor
aad
pop
in
test
jl
in
lcall
jbe
popa
jnp
sbb
and
push
mov
jae
pusha
pop
cmp
lahf
scas
outsl
popa
dec
pushf
jle
popa
rorl
xchg
lret
push
inc
fimull
xor
pop
lock
mov
mov
inc
inc
movsb
movsl
push
dec
adcl
cmp
std
outsl
out
test
push
lods
ja
rolb
andb
sub
inc
lods
loopne
movsl
outsb
call
cld
lods
addr16
add
xor
adc
xchg
cli
ss
add
js
adc
jbe
sub
jno
add
xor
inc
jl
push
repz
repnz
sub
xchg
or
jg
sbb
push
push
fcoms
mov
sub
hlt
lcall
dec
add
ret
pop
cwtl
movsb
ds
cwtl
add
loope
aam
dec
loop
jl
test
sbb
in
xor
es
fisubl
mov
in
les
fwait
xchg
xchg
xchg
nopl
and
test
mov
out
pusha
lcall
pop
xchg
push
mov
cmp
test
insb
out
xchg
and
ss
mov
mov
xchg
popa
mov
xchg
les
sub
fdivrs
daa
aad
testb
cmp
lds
or
jae
sub
outsl
add
in
lds
sbb
sub
insb
pop
xor
insb
shll
leave
push
dec
repnz
cli
dec
inc
repnz
jmp
push
out
jns
cltd
push
repz
jo
xor
pop
daa
inc
ja
sbb
and
sub
push
test
add
aam
ret
pop
adc
test
fiadds
inc
lea
mov
and
pop
repz
call
fwait
cmc
stos
dec
call
cmpsb
sub
or
jge
jns
sbb
out
fistps
pop
or
xorb
jp
add
xor
out
es
aad
add
cmp
pushf
mov
out
stos
in
push
mov
loop
aad
inc
mov
sti
outsb
jnp
ret
loopne
or
jl
adc
push
test
pop
pop
cmp
fcoms
cmpl
sbb
pusha
fistpl
mov
repz
scas
scas
scas
jmp
arpl
repz
es
aam
jle
push
inc
mov
sub
pop
jo
loop
pop
xor
push
cmp
inc
adc
test
push
xchg
mov
std
pop
mov
repnz
enter
mov
cmp
fs
ds
xchg
push
mov
mov
iret
enter
or
out
lods
and
cwtl
pop
jne
sbbl
sub
sbb
mov
call
xchg
mov
pushf
sub
dec
fiaddl
int
xchg
shlb
jae
and
out
mov
or
das
outsl
loope
aam
fistl
lock
enter
testl
add
int3
repz
movsb
cmp
nop
pop
fcmovnbe
xor
push
loope
lea
dec
xor
mov
les
mov
cli
xor
jge
fdivrl
enter
icebp
push
pop
jbe
sarl
jecxz
mov
in
mov
add
les
cmp
mov
mov
add
mov
inc
sub
and
cmp
mov
pushf
adc
mov
icebp
push
test
mov
jae
loop
shlb
jge
notb
xor
xchg
inc
out
or
scas
inc
arpl
lea
sub
jbe
and
xchg
xchg
sbbl
add
mov
pop
dec
rolb
xor
mov
bound
cmpsb
sbb
or
mull
aam
push
incl
jmp
repnz
cltd
mov
mov
testl
lret
sar
inc
in
fdivrp
loop
sbb
sbb
std
xchg
add
test
ds
adc
test
sarl
cmc
mov
inc
mov
and
arpl
sub
mov
pop
mov
orl
mov
sbb
arpl
es
sbbb
aas
int
call
jmp
mov
cmpsb
cs
out
mulps
jbe
loope
out
aas
xor
ret
and
scas
adc
mov
fwait
rcrb
lcall
out
mov
and
stc
out
mov
loope
sbb
pop
pop
test
jns
in
in
ds
jnp
or
push
xchg
adc
in
cmp
loopne
push
roll
push
push
xchg
scas
imul
inc
inc
fnsave
int3
hlt
divl
cmp
pop
pushf
ret
push
lcall
cmpsl
push
adc
sbb
mov
add
sub
aas
sbb
cs
mov
push
sub
mov
ficomps
rcll
data16
jle
lods
mov
mov
fdivs
clc
or
sub
ja
addr16
ja
adc
add
push
fildl
pop
sbb
outsl
in
dec
inc
add
mov
push
jg
xor
sub
pusha
add
repnz
pop
shll
ror
movsl
notb
shlb
sbb
nop
cld
sahf
sbb
andb
mov
sarb
mov
sub
sbb
pop
fidivs
sub
stos
adc
xlat
jge
jmp
add
xchg
lods
sub
pop
push
das
stos
mov
inc
inc
addps
and
fbld
loop
mov
mov
loop
adc
mov
dec
jl
adc
sub
test
dec
xor
pushf
adc
stos
hlt
mov
sub
shrb
aad
add
xchg
das
fidivrl
frstor
add
fcompl
mov
and
cwtl
jecxz
cmp
mov
mov
mov
sub
mov
pop
xor
push
add
aaa
hlt
stc
sbb
mull
aaa
cmpl
jo
mov
dec
lock
andb
xchg
push
enter
in
xor
cmp
lcall
push
adc
add
cmc
fidivs
rorl
xor
movsb
lahf
fisubrl
bound
rcll
dec
adc
pop
mov
stc
lret
imul
pop
outsl
orl
xor
stos
cmpl
shrl
fistl
rolb
pop
hlt
or
push
cmp
mov
cmpsl
jne
push
or
pop
aas
je
je
repnz
popf
hlt
imul
aad
leave
sub
xor
pop
stc
pop
cmp
jmp
in
xchg
inc
decl
popa
xchg
mov
add
movsb
ljmp
mov
sbb
sbb
lret
mov
bound
jae
ljmp
int
dec
pusha
lock
pushf
xchg
fadd
or
sti
arpl
add
andb
and
sbb
daa
dec
nop
dec
cmp
pushf
inc
movsb
push
or
fs
push
ret
or
lcall
inc
stos
adc
add
mov
shrl
cmpsb
push
mov
fstpl
pop
jl
dec
fimull
push
or
pusha
jae
push
jmp
cmpsl
js
inc
lcall
and
subb
gs
xchg
in
inc
outsb
mov
add
fnsave
insb
pop
int3
rorl
int
stc
stos
sbb
popf
stc
subl
pop
rep
push
int3
adc
mov
lret
repnz
sub
ss
jle
in
stc
cmpsb
es
inc
or
sti
or
xchg
mov
scas
pop
xor
jne
loop
adc
scas
cmp
mov
int3
test
into
pop
jmp
nop
lods
dec
cmp
jge
sar
decb
into
mov
inc
or
and
mov
call
sub
mov
sbb
mov
fbld
add
inc
in
xchg
sbbb
int
adc
mov
push
popa
jp
inc
scas
pop
data16
shlb
push
mov
test
fidivrl
sub
push
es
xlat
rcr
add
bound
insl
fwait
pusha
test
rorb
rcrb
xchg
xor
adc
clts
mov
mov
push
imul
outsb
lods
leave
ja
arpl
xlat
jg
insl
jne
in
rolb
int
faddl
int3
dec
stos
and
out
js
mov
loope
pop
icebp
xor
rcrb
adc
in
out
lds
mov
aaa
je
jp
jb
dec
lahf
jg
std
push
cmp
enter
lods
rclb
dec
jne
adc
xchg
adc
jns
mov
pop
pop
jns
mov
and
push
outsl
mull
lret
or
cmp
dec
pop
jo
mov
insb
andl
add
adc
push
xor
sub
cmp
call
mov
mov
repnz
mov
in
sbb
xchg
and
xchg
inc
arpl
loop
mov
rcr
in
lods
push
je
in
dec
or
out
data16
lods
jp
enter
push
xchg
mov
ret
inc
fsubrl
xor
mov
jp
push
cmp
pop
and
inc
aad
sbb
fisubrs
xor
sbbl
dec
and
subb
push
jo
pop
xchg
aas
mov
jb
dec
jl
hlt
mov
or
pop
xchg
aaa
xor
push
mov
inc
js
sbb
mov
aam
test
cwtl
dec
movsb
js
jns
call
xchg
cwtl
xchg
inc
cld
push
xor
sbb
push
mov
loope
xor
fildl
lret
dec
in
jg
ds
repnz
inc
sub
and
sti
pop
xchg
adc
fistl
jmp
test
dec
inc
fistl
outsl
outsl
and
test
shr
mov
sbb
pop
gs
subb
xchg
inc
inc
aam
push
mov
fwait
test
clc
inc
rolb
cmpsl
mov
cmp
dec
lahf
push
mov
mov
bound
push
addr16
lret
outsl
fisttpll
pop
and
or
cwtl
gs
in
in
fmul
push
jecxz
mov
adc
sub
and
mov
fwait
out
icebp
fidivs
movsl
das
in
mov
subb
out
push
bnd
lsl
cmpb
inc
inc
push
adc
push
scas
mov
and
fdivs
mov
add
push
fidivl
pop
mov
or
cmp
mov
shrl
rdpmc
arpl
scas
mov
mov
inc
mov
xchg
out
and
movsl
pop
push
push
mov
mov
jp
xchg
fnstenv
xor
imul
xor
loopne
shrb
stos
cmpsl
dec
adcb
mov
push
loope
adcb
pop
mov
stos
fwait
push
mov
es
lds
and
nop
inc
xchg
add
and
mov
ljmp
pop
test
jb
data16
sbb
enter
insl
enter
lock
push
adc
inc
xchg
test
aas
dec
or
xlat
repnz
mov
xchg
xor
out
xor
jne
push
mov
pusha
and
enter
repnz
cltd
inc
xor
fwait
movsl
mov
or
in
push
movsb
daa
push
xor
shr
jle
icebp
lcall
lods
cld
mov
gs
jle
insl
dec
stc
mov
pop
cmp
pop
sub
dec
xor
adc
xchg
mov
push
push
dec
adcl
test
ds
xor
mov
or
test
int3
sub
into
jg
cmc
jmp
cltd
pop
mov
and
dec
xchg
fdivl
imul
rorb
mov
mov
fisttpl
out
scas
mov
frstor
push
pop
cmpb
push
aad
sub
call
fnstsw
leave
ss
fwait
inc
and
pop
inc
aam
ret
fsubrs
aad
mov
mov
cltd
xor
mov
pusha
jl
inc
or
pop
daa
sub
jl
xchg
scas
leave
fildll
mov
inc
xchg
jle
insl
out
arpl
adc
ds
mov
xor
xchg
mov
lock
sarb
mov
adc
roll
mov
shlb
fwait
mov
dec
sbb
ret
jmp
sbb
cmp
loopne
insb
push
cmp
sub
stos
pop
gs
lcall
cmp
mov
mov
sbb
pop
lcall
cwtl
sbb
sbb
je
inc
or
and
pop
cs
push
jg
inc
xor
dec
ret
adc
shrl
lahf
jl
adc
jle
cmpsl
sbb
cld
cmpl
test
dec
out
sbb
xchg
xlat
inc
or
out
mov
sbb
notl
mov
mov
and
add
cli
jne
out
sub
bound
mov
in
xor
addl
and
dec
pop
mov
inc
mov
loopne
popa
dec
jns
mov
cmpsb
add
lcall
aad
mov
xor
mov
fwait
dec
sbb
sub
stos
push
fs
ds
aaa
mov
or
scas
fnstsw
aam
sub
icebp
out
out
adc
jne
jl
ss
jbe
cmp
mov
loope
aaa
mov
and
cltd
push
xor
ja
lods
add
leave
adcb
mov
xor
pop
ss
divl
testb
sbb
loopne
cmp
or
iret
sbb
inc
xchg
jecxz
or
lea
outsl
sub
mov
jge
pop
push
pop
mov
imul
test
cmp
mov
fistpl
lahf
scas
cmp
add
xor
les
fmull
mov
ret
jo
ret
mov
jb
pusha
loope
insb
mov
fdivrs
pop
and
loop
fistl
scas
std
add
cmp
into
cmp
pushf
adc
shrb
test
mov
add
imul
and
add
mov
or
add
cmpsl
push
dec
jg
pop
imul
rorl
enter
mov
rorb
test
cli
icebp
loope
push
inc
xor
xchg
test
lock
imul
filds
lock
pop
outsl
dec
sbb
sub
insl
ret
mov
push
jbe
push
out
aam
dec
mov
and
lock
dec
cmp
xor
jo
nop
aam
mov
jecxz
movsl
push
add
movb
int3
or
adc
sbbl
jo
shrb
test
push
jne
mov
or
pop
stos
jmp
xor
mov
jle
in
mov
mov
shrl
dec
int3
add
fnstcw
pop
sub
xor
mov
dec
add
sti
pop
push
mov
nop
xchg
mov
mov
mov
movsb
sahf
xchg
scas
std
pop
push
ret
push
mov
out
mov
sbb
xor
push
scas
lret
push
xchg
arpl
imul
test
repz
popf
ja
and
and
cmpsl
mov
cmpl
pushf
pop
pop
add
mov
fisubrs
jg
repnz
in
testb
xchg
dec
mov
or
pop
es
movzbl
aaa
movsb
int3
sub
icebp
rcrl
idivb
push
adc
adc
js
push
ficomps
in
mov
lock
dec
xorb
xchg
or
inc
push
sbb
xor
inc
sub
cmpb
pop
push
ljmp
scas
xchg
cmpsb
test
stos
mov
jbe
iret
data16
fidivs
xchg
lret
ljmp
jmp
orb
arpl
sbb
inc
int3
mov
ja
aad
add
push
or
addr16
dec
sub
xchg
push
pop
scas
stos
and
ja,pn
dec
js
insb
gs
and
inc
fbld
jo
sub
inc
mov
xchg
push
stc
fnstsw
pushf
popa
xor
or
add
out
sub
lret
stos
and
mov
call
xlat
loopne
in
stos
sarb
mov
xor
or
and
push
sub
hlt
mov
dec
xchg
xchg
cmp
ja
enter
sbb
mov
mov
or
pop
cli
push
fdivrl
enter
int
dec
roll
dec
dec
repnz
mov
sub
fbstp
mov
or
test
push
or
fbld
bound
push
outsl
orb
rolb
jbe
inc
mov
xchg
je
add
int
and
out
xor
push
push
mov
scas
stos
dec
cmp
mov
dec
nop
xchg
icebp
arpl
sar
cmp
inc
mov
data16
xchg
sub
jne
pop
fdivr
mov
and
out
mov
lret
rcr
mov
rcrl
sub
jae
and
jl
mov
dec
mov
movq
xchg
int3
dec
mov
and
vorps
cmpsl
filds
loopne
sub
data16
popf
mov
fldcw
test
insl
push
into
xor
repz
gs
loopne
shrb
pop
or
out
push
xchg
lods
scas
scas
aad
fs
mov
int3
push
or
nop
push
repnz
in
jb
mov
pop
fwait
test
cmc
jmp
push
jae
or
mov
in
jo
mov
repz
ret
movsl
sub
push
leave
adcb
sbbb
movsb
inc
sbb
ss
mov
lret
cmp
fsubs
into
vmwrite
lcall
stc
loope
movsb
fucompp
div
insl
inc
pop
mov
sub
fsts
xchg
mov
leave
lds
mov
sahf
aam
imul
mov
add
rcrb
cmc
repz
scas
xor
and
dec
cmc
movsl
rorb
cmp
lock
shlb
or
jecxz
sbb
mov
xchg
test
mov
rolb
push
lret
sbb
fisubs
fsubrp
test
adc
adc
insb
sbb
icebp
adc
mov
aaa
in
or
or
jbe
or
dec
gs
pop
adc
adc
lock
mov
add
aaa
dec
sub
pop
push
and
ficomps
inc
cmp
push
xchg
cmp
cmpb
cld
das
in
aad
loopne
adc
fwait
or
pop
jle
inc
mov
test
fbstp
jns
mov
push
rcl
loopne
imul
and
cld
inc
ja
ret
mov
xor
std
test
mov
arpl
mov
test
or
and
ret
or
mov
addr16
push
ret
insb
ljmp
add
cmp
lods
mov
mov
out
and
mov
ss
leave
lcall
push
xor
jno
iret
pushf
cwtl
xchg
stos
xor
jecxz
outsb
pop
ljmp
test
dec
sbb
pop
mov
push
mov
dec
sub
outsb
push
icebp
jae
mov
fwait
rcrb
xchg
sbb
sti
jp
push
in
sbb
mov
arpl
jnp
dec
mov
pop
dec
push
aad
push
xchg
jecxz
in
shll
dec
rcrl
inc
add
adc
cltd
push
sbb
mov
jmp
out
push
inc
ret
xor
outsb
jl
push
into
stc
imul
mov
cmp
dec
or
mov
mov
and
and
in
sbb
shlb
std
jecxz
aad
mov
push
aas
mov
jecxz
add
inc
sahf
dec
mov
cmp
icebp
mov
scas
into
mov
adc
lret
mov
arpl
mov
sbb
inc
addb
lcall
stos
and
sub
and
mov
testl
xchg
adc
sub
inc
mov
xchg
imul
inc
jno
add
jecxz
ljmp
xor
mull
movsb
out
mov
and
jo
mull
jg
add
cmp
pusha
call
lahf
push
inc
add
mov
scas
jae
idivl
adcl
sbb
mov
sbb
repnz
popf
xor
lods
adc
pusha
pop
push
aad
cmp
cmp
outsb
adc
adc
dec
jo
aam
test
in
arpl
jmp
pop
adc
cld
cs
adc
sarb
and
add
test
loopne
imul
out
or
mov
lret
imul
adc
fst
mov
inc
out
cli
jo
xor
lret
jnp
ficompl
mov
jnp
push
mov
les
adc
je
hlt
stos
rclb
sbb
inc
xor
add
fadd
xor
push
ret
and
sub
pop
mov
xchg
sub
fprem1
std
mov
insl
int
jb
orb
daa
movsl
cmp
inc
and
lods
ret
pusha
pop
rorl
testb
idivl
in
adcb
add
fs
cli
mov
ljmp
lret
lds
fwait
push
enter
rcrb
and
jl
ret
add
xchg
push
std
pop
mov
jge
sbb
pop
xor
push
les
lret
jb
push
and
sbb
push
jecxz
faddl
dec
icebp
insl
push
jge
stc
or
test
inc
sub
gs
ljmp
loope
lea
and
shrb
dec
inc
int
and
out
ret
popa
fmuls
xchg
cwtl
pop
pop
fdivl
and
call
push
ja
iret
sbb
cwtl
fmuls
out
jo
sub
mov
inc
ret
add
and
fistpll
test
iret
xor
jns
pop
fimull
mov
loope
and
mov
inc
pop
std
xchg
pop
mov
mov
jno
subb
movsb
xchg
notl
adc
or
pop
cmp
data16
push
dec
pushf
mov
add
and
insb
in
jge
movsb
inc
xorb
mov
scas
negl
movb
cmp
dec
lods
mov
pusha
inc
mov
insb
sbb
pusha
push
mov
pxor
pushf
dec
jmp
cltd
fs
shrl
sub
push
daa
loopne
mov
into
push
scas
push
push
lods
and
ljmp
xchg
and
pushl
jmp
cmc
adc
dec
dec
repz
movsb
dec
push
jle
out
gs
sbb
lret
and
lcall
fdivs
mov
fwait
aad
das
out
out
scas
leave
repnz
fistl
fcomip
in
mov
stos
push
pushf
sbb
aas
jns
or
cmp
adc
loope
leave
mov
mov
dec
aam
fimuls
xor
or
xor
jnp
inc
in
mov
pop
mov
mov
data16
cmp
and
fwait
aam
into
test
jge
into
fs
dec
add
sti
lea
movsb
inc
test
xchg
cwtl
shl
push
mov
jns
mov
xchg
push
adc
mov
sbb
jge
out
pop
call
sub
jnp
test
fs
fwait
sub
push
jge
test
lods
mov
cmpsl
add
xor
jb
sub
pushf
pop
cmpsl
ds
cmpsb
mov
call
ljmp
add
pusha
xchg
in
int3
adc
mov
and
subb
mov
cmpsb
push
fisubrl
fcoml
mov
addr16
adc
mov
or
pop
clc
pop
aam
mov
mov
jne,pt
les
inc
cmp
clc
adcl
movsl
jbe
mov
jb
pushf
mov
out
mov
sub
cmp
add
lods
mov
pop
sub
dec
sub
xor
xchg
imul
gs
fisubrs
sbb
jg
addl
jl
cmp
pop
mov
std
mov
or
xor
call
repz
aas
iret
shr
add
insb
js
push
inc
xchg
mov
cmpsl
pop
xchg
xchg
out
inc
icebp
lret
mov
sub
out
xchg
movsb
mov
stc
imul
les
fsubr
mov
out
cmpsl
sarb
push
pop
stos
xor
xchg
mov
in
xor
outsl
inc
push
pop
subb
in
pop
push
mov
stos
call
imull
sub
push
stos
adc
cmpsb
inc
and
shlb
ds
aam
jno
in
push
mov
dec
xchg
outsb
inc
add
push
mov
pop
lret
test
xchg
test
and
stos
das
sub
xor
cmc
mov
push
mov
adc
call
xor
xchg
mov
les
jns
pop
scas
arpl
cmpsb
sar
popa
and
cmp
push
adc
mov
sbb
cwtl
push
jecxz
inc
or
xor
dec
clc
inc
shlb
and
jae
stc
lret
xchg
leave
adc
push
adcl
inc
ret
shr
mov
fstl
push
imul
sbb
dec
cltd
ret
jge
mov
xchg
inc
mov
pop
pop
push
mov
push
shlb
je
xlat
push
pop
push
push
lods
popa
and
mov
and
mov
mov
lahf
enter
cltd
adc
mov
test
loop
cmc
push
fs
ss
pop
pop
jecxz
pusha
fmuls
mov
stos
and
ds
jne
arpl
mov
popl
and
fs
add
fwait
cmpsb
aaa
loop
xor
push
push
loope
cltd
mov
push
stos
adc
data16
dec
cmpb
imul
xchg
in
rolb
ds
out
mov
scas
stos
std
mov
mov
jo
jae
sbb
and
mov
out
out
cmp
jge
dec
adc
movsb
cltd
cmc
or
inc
pop
mov
dec
push
mov
xor
icebp
push
imul
icebp
je
shlb
inc
outsb
pushw
jge
mov
mov
jbe
int3
xchg
and
xor
or
int3
daa
dec
or
sub
jp
dec
or
ds
gs
icebp
jnp
mull
pushf
or
mov
fstpl
subl
sub
push
dec
mov
enter
dec
imul
out
popf
or
testb
dec
mov
xor
jg
mov
xor
leave
fwait
andb
sub
xchg
mov
adc
pop
je
stos
insb
int3
fsts
dec
push
jge
jle
cmc
ss
push
scas
push
cld
push
in
or
push
std
sub
inc
aaa
mov
lret
in
xchg
sub
mov
mov
dec
sub
pop
pop
push
push
lds
cmpsl
jmp
lret
test
ficoml
lds
addr16
inc
fs
add
in
test
mov
mov
sub
rorb
sti
mov
daa
stc
add
cwtl
daa
pusha
ss
push
inc
cmpb
adc
insb
cmp
int
mov
aaa
in
add
je
mov
mov
xor
dec
jmp
xchg
je
sahf
lock
adc
cmp
cmp
fcomps
loopne
jb
scas
jge
outsl
mov
testb
hlt
out
andl
pop
jnp
scas
data16
push
mov
dec
subl
jecxz
pop
mov
imul
lds
test
rorl
cli
lds
xchg
pop
stos
movsl
repz
std
movsl
icebp
adc
cmp
mov
into
jae
pop
iret
jmp
outsl
pop
repnz
shlb
jns
or
cmp
outsb
xchg
xchg
mov
sub
mov
lods
push
and
mull
lods
sub
loop
stos
sarl
push
inc
scas
clc
ss
push
sub
mov
xor
arpl
int3
jnp
es
stos
cmp
fidivl
dec
in
js
insb
movsb
mov
pop
lret
movsl
dec
jecxz
sbb
pop
mov
and
add
dec
lret
adc
sub
daa
and
lods
xor
mov
xchg
aad
cltd
or
cmp
mov
sti
lcall
out
xor
cmc
jge
fisttps
push
mov
adc
pop
imul
pop
mov
pop
and
jno
repz
xchg
jp
rorb
push
xchg
adc
jmp
cltd
push
push
mov
mov
test
mov
fistl
sbbb
in
addr16
jge
movsl
push
mov
fs
or
cmpsl
add
cmp
mov
fs
inc
lds
jle
dec
fcmovu
rolb
test
enter
push
stc
jb
push
mov
mov
dec
push
sub
loope
and
pop
mov
mov
shlb
nop
out
push
inc
je
lret
nop
cltd
mov
clc
data16
sub
js
inc
lret
dec
in
xor
dec
push
or
jbe
cmp
out
out
jl
pop
aas
lea
and
scas
aas
scas
push
sub
jb
int
hlt
jo
ja
jb
call
adc
jmp
negl
adc
inc
jmp
cmp
movl
push
enter
enter
pop
mov
xor
sbb
xchg
test
sub
xchg
imulb
insb
push
or
scas
in
aam
in
jmp
xorb
shl
in
xchg
repnz
hlt
ds
or
lds
cwtl
cltd
mov
in
mov
mov
cmp
fistpll
int
subl
insb
adc
dec
and
pusha
or
call
add
adc
mov
imul
push
adc
pop
mov
aad
cmp
mov
cmp
andl
or
mov
adc
andb
mov
cmp
arpl
mov
stc
call
pop
loopne
sti
pushl
fwait
sub
pushf
mov
lret
cmp
inc
xchg
popa
cmp
dec
jmp
xor
je
xchg
lahf
shll
aam
lock
xor
add
out
mov
std
js
aas
mov
jmp
aad
lcall
das
les
loope
pop
rcll
dec
sub
xchg
mov
push
dec
and
lcall
xchg
scas
dec
ja
push
lods
mov
sbb
inc
adc
jo
xor
fs
clc
pop
adc
or
dec
sbb
push
sbb
xchg
hlt
and
rol
inc
adc
mov
sbbb
xchg
jae
lock
and
stc
stos
lock
and
xchg
inc
imul
pushf
or
mov
pop
fsts
dec
testl
pop
rol
imul
int3
mov
xchg
cmp
pop
scas
hlt
adcl
xchg
mov
mov
shrl
mov
icebp
shr
sub
jmp
insl
mov
mov
dec
sbb
dec
pushf
cwtl
push
mov
fiaddl
into
mov
shl
enter
add
cmp
loopne
push
sub
xchg
cmp
rorb
sarb
xchg
mov
inc
mov
jbe
insb
shrb
call
cmpsb
cs
and
lret
jb
push
mov
xor
add
mov
push
push
out
aam
xchg
xlat
repz
out
mov
mov
in
sbb
xchg
xchg
aam
xor
bound
je
inc
jg
sti
test
es
call
mov
and
mov
cmp
sbb
imul
push
xchg
int3
sub
stos
cmp
shl
mov
xor
daa
outsb
xchg
scas
xchg
cmp
ja
xchg
mov
cltd
push
jle
imul
mov
jb
cmpb
push
pop
jle
fbld
fwait
insb
aaa
dec
push
imul
cmc
inc
mov
mov
out
or
sub
adc
lock
aam
shl
xor
sar
aad
fsubs
jb
pop
out
jns
jp
or
mov
xchg
out
cmpsb
push
add
xor
mov
jp
repnz
testl
add
fs
inc
bound
ret
out
xchg
mov
pop
jae
loopne
xchg
add
ljmp
repz
stos
loop
dec
mov
jb
dec
push
les
sar
push
insb
je
jbe
movsl
xor
sub
cmp
xchg
add
xor
push
insl
shll
movsl
in
dec
sbb
cmpsl
mov
mov
call
and
dec
xor
nop
mov
jg
stos
push
inc
ret
aam
cmpsb
neg
ja
xor
jne
loopne
mov
out
push
jge
stos
push
popf
xchg
adc
dec
outsl
cmc
lods
nop
stos
dec
gs
or
daa
loopne
sbb
mov
xchg
add
jae
mov
out
rorb
xor
xchg
mov
mov
jmp
mov
jg
and
mov
jle
aas
insb
dec
loopne
int3
and
xchg
and
jo
loopne
push
mov
cmpsl
pop
jge
addr16
lcall
lret
push
rcl
int
mov
in
xchg
push
push
cmpsb
aaa
cmpsl
mov
sub
pop
dec
fld
and
repnz
push
jb
aaa
push
push
iret
jmp
jns
pop
in
popa
cmp
cld
xchg
sub
in
xor
or
shl
and
cmp
push
push
or
mov
repnz
dec
jnp
push
push
xor
sbb
jmp
stos
push
and
xor
ds
cmp
and
mov
leave
aas
ret
pop
adc
cmp
insl
or
stos
jne
cvtps2pd
add
xchg
movsb
movl
lods
arpl
xor
push
inc
xor
rclb
stc
push
dec
pop
or
jno
sbb
xchg
icebp
adc
in
aad
push
mov
xchg
jo
push
aaa
aas
dec
mov
add
cld
data16
jb
into
ljmp
dec
pop
cwtl
dec
out
pop
out
or
add
mov
cmp
shr
insb
sahf
pop
pop
jns
adc
out
dec
mov
dec
xchg
add
negb
jp
repnz
rorl
mov
aad
xor
jbe
cs
xor
mov
adc
or
fwait
imul
aad
and
adc
in
xor
jmp
cmc
mov
sub
aas
sbb
mov
lret
mov
movsl
jecxz
ret
adc
in
arpl
add
incl
aad
rcll
inc
xchg
test
jno
jl
mov
cmp
ret
mov
jecxz
inc
es
out
insl
add
pop
repz
sbb
nop
add
xchg
sbb
add
es
out
std
insb
pop
test
sub
in
repnz
mov
sub
jle
subl
cmp
jnp
dec
push
jmp
fbld
jbe
lahf
fst
adc
dec
aas
mov
xchg
adc
jbe
in
jmp
into
sahf
loop
test
aad
dec
dec
jmp
pop
xchg
pop
jg
push
loop
push
adc
loope
and
lock
sahf
aam
inc
lds
cmpl
lds
icebp
fs
cmp
push
or
cmp
or
mov
movsl
scas
and
dec
lret
mov
pop
cltd
popa
push
push
daa
adc
jb
fldl
xchg
lea
sbb
inc
aam
test
out
cs
mov
push
out
ret
mov
ja
daa
addr16
fisubrl
cltd
data16
nop
or
cld
and
add
fildl
inc
orb
dec
or
or
movsb
sbb
shlb
rorl
add
cmp
pop
repnz
fdivs
sti
lret
test
inc
scas
inc
xchg
pop
dec
adc
pop
xchg
std
xor
and
jne
xor
mov
sbb
pop
shrl
mov
sub
cmp
iret
cmp
push
mov
or
push
push
pop
jmp
and
sbb
test
dec
fsubs
sbb
lcall
lods
es
xchg
pop
pop
in
pop
pop
xchg
dec
jle
in
or
mov
les
push
pushf
push
nop
ret
popf
lock
jno
stos
push
push
aaa
lds
pop
cli
test
dec
aam
fs
icebp
ficoms
jge
stos
sarl
xor
jmp
outsb
imul
popa
fwait
cmp
mov
stc
fs
mov
fldenv
adc
push
sarl
jno
lcall
adc
lods
enter
cmp
mov
mov
add
jmp
xchg
popl
test
leave
mov
jg
jnp
dec
ficoml
cmp
lods
cmc
push
pop
add
loope
lea
mov
or
cmp
aad
pop
lods
cmp
fsts
lock
pop
movb
xchg
add
dec
cmp
sbb
insl
dec
cmpsl
inc
mov
inc
xor
cmp
push
mov
imul
test
ljmp
mov
inc
xor
pop
cli
cmc
inc
movsb
xor
sarl
push
push
in
fdivrs
pop
push
dec
into
push
mov
test
int
test
jl
cwtl
je
or
aaa
pop
adc
mov
shlb
fsts
or
cwtl
xchg
jmp
out
fsubrs
jne
cmp
cwtl
ss
xchg
mov
stc
dec
pop
gs
xchg
push
dec
nop
and
xchg
leave
inc
lds
add
sbbl
jmp
cmp
pop
es
and
popa
outsl
xchg
imul
addb
ljmp
fistpl
cmpsb
cmpsl
sbb
rcrl
cli
test
add
clc
jb,pn
mov
dec
push
mov
dec
xchg
jb
xchg
test
mov
ret
shrb
mov
pop
shrl
mov
out
aas
adc
cmp
pop
fisubrl
daa
insl
fimuls
adc
movsl
jmp
cmp
rcll
aam
mov
cli
add
inc
dec
mov
fmulp
scas
out
add
clc
push
add
mov
test
cmp
jae
adc
cmp
pop
icebp
jge
xor
pop
jecxz
mov
cwtl
hlt
add
xchg
stos
inc
adc
adc
sub
sub
nop
outsb
xor
insl
fnstcw
iret
js
out
mov
pop
aaa
fwait
aam
mov
pop
adc
mov
dec
xor
cmp
shlb
insl
sbb
mov
addb
cmp
insl
and
mov
xchg
push
fdivs
mov
dec
jae
call
mov
cmp
out
lock
adc
fisttpl
xor
or
iret
icebp
addr16
lds
mov
mov
xor
insb
xchg
cmp
rclb
out
inc
sub
fbstp
push
fisubs
and
daa
lods
mov
sarb
mov
push
sub
push
orb
ret
sbb
dec
and
movsl
dec
out
mov
ljmp
lahf
xor
iret
push
fld
xchg
push
adc
pushf
sub
rcrb
stos
js
mov
ret
jbe
into
sbb
inc
sbb
fistpl
lods
cli
jae
fcoms
push
push
aam
push
cmp
adc
cld
movsb
mull
xchg
ret
inc
popa
sahf
mov
arpl
add
jns
sahf
jmp
push
in
stc
ja,pt
sub
test
sbb
mov
rorb
sub
addr16
inc
mov
or
les
mov
shrb
shl
cltd
dec
xchg
mov
loope
testl
fstl
fsubrs
lods
inc
bound
in
xchg
sub
push
jno
sarb
movsb
push
gs
mov
fisubrs
mov
jg
add
xchg
jnp
or
rol
mov
mov
fidivs
pop
popa
sti
mov
les
test
cmp
in
xor
fildll
ret
mov
cltd
fcomip
mov
insb
sbb
xor
xchg
test
push
mov
sarb
out
dec
lcall
cmp
movsb
shl
cmp
jbe
nop
bound
push
xlat
inc
jb
mov
xlat
cmpsb
sbb
mov
in
rorl
aad
mov
fistpll
dec
pop
cmp
je
repnz
outsl
fwait
lcall
mov
je
inc
lcall
test
ja
test
mov
enter
push
in
jmp
les
call
dec
rol
jge
sub
mov
pop
dec
adc
in
inc
in
inc
push
add
xchg
cld
sahf
loopne
dec
pop
adc
enter
out
push
sbb
sbb
and
jnp
xorl
sub
cltd
or
ds
jae
and
and
aad
pop
dec
mov
rolb
or
outsl
xor
popa
mov
jbe
pop
xchg
add
imul
cmp
out
or
lret
inc
imul
sbb
push
push
sub
jae
lds
popf
shl
popl
jp
cld
inc
and
mov
fwait
aaa
iret
mov
push
jb
ret
faddl
test
xor
push
inc
hlt
push
mov
add
add
gs
mov
subl
adc
sub
mov
aas
mov
loopne
mov
lds
sahf
cmp
cmc
xor
cmp
inc
push
and
push
sub
testb
rolb
add
sub
fadd
lea
pushl
loop
jne
out
fmuls
addr16
arpl
lahf
xchg
mov
or
fildll
jae
nop
leave
jecxz
cmpsl
shlb
ret
not
sar
mov
cli
or
or
jl
mov
mov
int
clc
jl
sbb
or
mov
dec
shrl
dec
pop
or
add
lcall
roll
jl
jbe
outsl
aam
mov
dec
out
sbb
daa
cmpsb
fisttpll
orl
jb
cmpsl
lods
nop
stos
daa
mov
arpl
imul
add
or
pop
stos
sahf
lds
lcall
xchg
cmpsb
mov
ret
xor
shr
dec
sub
out
jle
insl
pop
ljmp
in
add
js
int3
pmulhw
add
fidivrs
cmpsb
push
or
jns
xor
xor
je
jbe
push
inc
and
mov
jo
xorb
jne
jle
loop
sub
add
push
dec
sbbl
jge
sub
and
popa
test
mov
sub
addr16
insl
push
fldcw
cld
aad
mov
xor
repnz
loopne
lock
repz
dec
adc
daa
shll
faddl
xor
icebp
loopne
pop
pop
cmp
lcall
leave
lock
lock
pop
shl
icebp
fnsave
pop
dec
pop
pop
cmpsl
test
sub
pop
jp
mov
mov
cld
in
es
pop
shll
cmpsl
popa
xchg
dec
mov
cmp
push
notb
or
mov
hlt
jno
loope
and
pop
mov
jecxz
xchg
es
loop
cs
aam
scas
push
repz
imul
adc
pushf
xchg
scas
lret
js
std
hlt
clc
cmp
mov
xchg
lret
cmpsl
cmpsb
fwait
inc
sub
fdivrl
inc
xor
push
ret
enter
dec
mov
mov
shlb
ja
xchg
xchg
add
jl
mov
or
and
into
cmp
mov
pusha
push
fadds
pop
dec
fwait
add
xchg
scas
aas
sti
dec
add
inc
loope
mov
push
jo
movsl
xchg
movsl
mov
rol
and
push
xchg
mov
jmp
lret
jge
xor
adc
inc
fisubl
fs
je
cmpsb
cmp
dec
ja
ficoml
pop
xchg
dec
mov
movsb
cmp
xor
mov
lret
vrsqrtps
out
stc
push
jno
or
xchg
or
movsb
mov
jnp
cmc
dec
rorl
pop
sub
out
mov
aas
pop
shlb
and
cmpsl
cmp
pop
jmp
aam
push
jge
sub
lss
push
scas
inc
stos
jmp
jg
sbbl
test
test
sub
inc
cltd
imul
pop
std
scas
bound
popf
cltd
or
enter
lcall
jbe
adc
and
cmp
stos
loop
cmp
cmp
mov
mov
inc
gs
xchg
xorb
imul
cmpsb
fisubrs
xchg
mov
or
jge
push
into
ret
lret
lret
and
cmpsb
mov
jb
shlb
insl
push
sub
call
xchg
pop
push
mov
mov
lcall
popa
pushf
mov
nop
cwtl
shll
mov
daa
jge
mov
mov
mov
dec
ret
push
mov
lahf
lea
jnp
out
faddl
into
test
fbld
lret
in
pusha
adc
mov
mov
arpl
adc
pop
and
mov
jp
jns
xor
cmp
fdivs
cmp
shr
push
out
push
cmp
stos
mov
inc
add
fdivr
mov
xchg
outsl
repz
setno
cwtl
sub
clc
rcrb
xchg
jge
in
pop
jb
cmp
ret
incl
and
jp
xchg
add
loope
imul
push
je
or
rcrl
adc
pop
jb
icebp
dec
ds
add
jg
test
jnp
in
adc
cmp
inc
xchg
leave
sub
and
adc
jmp
sub
mov
je
jae
lret
daa
dec
out
or
insl
andl
push
rcrb
mov
sub
stc
pop
xorl
sbb
adc
mov
or
out
sarb
scas
fucomp
xchg
imul
sbb
pop
movsb
jb
mov
call
dec
mov
jo
jns
pop
sub
sbb
mov
addb
mov
inc
out
pop
dec
das
cs
test
or
test
lods
repz
cs
inc
sub
fidivrs
mov
adcb
daa
ds
mov
push
fs
jp
dec
add
xor
clc
stos
inc
dec
sub
jmp
jae
roll
enter
shrl
and
lods
lods
xchg
xor
stos
xor
pop
mov
inc
and
and
xor
pop
cmp
add
insl
adc
push
jnp
jg
or
ja
xchg
push
lock
fwait
inc
add
icebp
jg
cmpsl
sbb
cmp
inc
cmp
fnstenv
dec
nop
mov
movsb
xchg
mov
inc
ret
ljmp
and
or
xchg
push
push
mov
push
jbe
mov
mov
inc
xchg
mov
call
popf
out
push
mov
orb
ret
add
lods
imul
xorl
push
sarl
imul
sub
xor
movsl
cltd
in
push
cmpb
mov
xor
add
clc
pop
scas
lret
cli
out
xchg
inc
pop
push
rcr
bnd
mov
mov
push
or
dec
mov
mov
insb
fisubs
ficomps
fwait
aaa
in
sbb
scas
pop
popf
pop
jnp
cmp
add
ret
jb
test
rcll
mov
rcrb
movsb
pop
fs
cmpsl
xchg
adc
push
sti
adc
or
mov
and
or
lods
add
push
adc
fsubl
out
pop
mov
frstor
stos
push
rclb
cmpsl
insb
dec
dec
test
mov
push
stos
lcall
mov
xchg
cmpsl
xlat
mov
sti
std
test
jb
in
mov
jbe
es
cmc
dec
sub
jmp
sub
and
mov
rorl
cmpb
lods
lcall
out
inc
push
lret
inc
or
and
lret
aad
add
int
push
mov
jb
dec
cmp
sub
and
imul
lret
inc
pusha
jg
cmpsb
outsb
pushf
xlat
push
shll
dec
and
mov
rcr
inc
icebp
insb
sbb
xor
cmp
jb
dec
xor
repz
push
outsb
mov
adc
sub
jg
inc
dec
mov
xchg
fidivrl
xor
test
mov
inc
test
and
or
mov
adc
mov
icebp
pop
dec
subl
andb
fwait
test
loop
push
sub
adc
out
dec
jl
adc
testl
pop
loope
lods
sahf
jmp
sub
std
iret
scas
testl
inc
jmp
and
dec
mov
aas
stos
lock
cmpsl
mov
and
push
add
jmp
out
pop
loop
or
aad
dec
and
xlat
push
cs
adc
aaa
xor
leave
ret
sahf
mov
add
jg
mov
outsl
cmc
out
sub
mov
mov
je
sub
mov
gs
push
xor
fcoml
sbb
outsb
jae
and
scas
stc
in
and
dec
sub
inc
rolb
shl
or
lods
mov
loope
xor
push
cmpsl
jo
pop
push
inc
dec
lds
fisttps
xchg
push
sbb
bound
push
aas
pop
mov
inc
xchg
push
rol
aaa
inc
jbe
push
jg
inc
add
fiadds
xor
scas
fs
repnz
ds
insb
or
adc
jbe
ss
les
mov
sahf
xchg
cmp
negb
push
sbb
inc
iret
fisttps
sbb
outsl
lock
hlt
jno
decl
enter
push
xor
cmp
dec
loop
sub
pop
dec
mov
rcll
jle
orl
fs
sub
pop
subb
shll
daa
dec
adc
sbb
dec
lock
imul
jecxz
test
inc
shll
outsb
jge
push
pop
mov
lahf
arpl
jecxz
lods
cltd
loop
cmp
ljmp
add
or
cld
pop
xor
inc
mov
mov
hlt
adc
into
ret
int3
dec
fs
repnz
das
pusha
inc
cmp
das
jno
push
xchg
cmp
mov
add
adc
std
jg
clc
push
mov
adc
lret
dec
jecxz
mov
lret
pop
loope
stos
neg
frstor
inc
addr16
inc
and
and
dec
cmp
shll
xchg
sub
inc
and
xchg
test
xor
dec
sub
cli
enter
adc
fwait
pop
mov
test
stos
dec
in
daa
push
mov
rcr
and
jno
cmp
inc
add
pushf
and
test
jo
mov
xor
mov
dec
xchg
sbb
imul
sbb
aaa
dec
xchg
pop
test
push
cld
and
or
lods
inc
adc
pop
scas
ret
ss
inc
sub
adc
sti
clc
cmp
cmp
pop
testl
push
notb
insb
mov
in
cmp
push
or
push
cmp
mov
lcall
int3
jno
xor
fdivl
loopne
xchg
push
outsb
jl
xchg
adc
fidivrl
test
mov
cwtl
in
shlb
push
ja
test
rcl
decb
dec
sub
gs
pop
add
mov
rcrl
cmp
mov
cltd
stc
sub
cwtl
cwtl
loop
lods
and
aad
outsb
sub
or
sbb
add
cmp
shrb
mov
add
mul
dec
das
sti
mov
movsl
in
sbb
cmp
xorl
jmp
pop
mov
dec
jp
orb
mov
sub
pmaddwd
into
test
mov
jne
sahf
add
inc
scas
dec
in
adc
test
add
sub
les
mov
and
pop
ss
loop
push
adc
jg
dec
xor
push
sbb
mov
ret
es
arpl
xchg
leave
arpl
data16
roll
mov
fisubs
jp
push
sti
sti
dec
nop
imul
sbb
jmp
ds
in
push
rcll
out
pusha
pop
xchg
and
pop
mov
mov
nop
dec
sbb
std
mov
adc
and
xor
push
xchg
fldl
popf
inc
dec
int3
xor
push
popf
xchg
xor
push
or
in
jns
sbb
pop
mov
add
mov
jbe
inc
in
sbb
insb
jmp
xchg
aas
add
inc
leave
icebp
inc
cmpsb
es
push
cmp
and
sbb
jne
jmp
test
cmp
xchg
pop
test
dec
icebp
xchg
sbb
sbb
push
dec
xor
es
sbb
clc
sbb
pop
dec
inc
popa
xlat
mov
in
sbb
cmp
mov
inc
sub
xor
xchg
sbb
adc
pop
arpl
hlt
test
test
cmp
icebp
aaa
rcl
insl
jnp
insb
sub
adc
add
in
and
rolb
xchg
sbb
dec
sbbb
lods
dec
jns
pop
incl
leave
lahf
adc
shll
lahf
cmp
sarb
cmp
and
sub
shl
in
jne
xchg
fwait
popf
dec
pushf
hlt
sbb
or
iret
lds
dec
icebp
push
fmuls
sbb
stc
insb
test
out
fldt
push
aaa
jg
iret
and
sub
lret
cld
mov
jge
mov
cs
or
add
fisubs
mov
lcall
repz
les
loopne
sub
cwtl
xchg
popa
pop
fwait
sbb
imul
popa
add
jo
iret
sub
outsb
add
pop
add
mov
aas
and
loop
add
out
pop
fcmovu
cmp
adc
mov
mov
add
adc
stos
mov
push
popa
and
rcl
movsb
push
mov
sbb
xchg
sahf
cmp
movsb
mov
dec
icebp
cmp
sahf
fmull
jbe
pop
rcrb
scas
pop
xchg
or
fimuls
lret
jle
sub
daa
push
add
imul
mov
push
mov
or
cmpsb
sub
xchg
pushf
xchg
and
mov
std
xchg
sti
inc
mov
xchg
lea
xchg
mov
push
js
mov
cmp
outsb
fcmovne
mov
scas
mov
push
and
mov
sub
nop
jl
cli
or
lret
mov
push
cwtl
pusha
adc
mov
es
js
cmc
mov
pop
xchg
lock
push
add
dec
cmpsl
movl
test
insb
fistpll
outsb
cli
sub
mov
xchg
cmp
mov
scas
stos
ljmp
and
jo
popa
push
cmc
adc
imul
rolb
jne
fldcw
data16
sbb
push
lahf
pop
jb
lret
inc
and
sbb
ljmp
cs
nop
push
xor
mov
inc
ds
mov
push
aad
ret
mov
punpckhbw
imul
jae
jbe
test
test
add
mov
call
mov
xor
xchg
push
cmp
mov
test
loopne
push
mov
fcmovne
mov
shrb
push
xor
ror
push
lret
dec
dec
inc
push
rcr
fwait
lcall
inc
push
xchg
xor
frstor
pop
lods
inc
or
enterw
or
nop
mov
rorl
mov
jle
mulb
inc
subb
inc
mov
lods
pop
insb
or
arpl
clc
xor
xchg
testb
pop
daa
dec
cmp
bound
xor
cmp
movsb
fldl
xchg
adc
dec
xor
cld
inc
enter
shll
jmp
dec
add
cmp
sbb
and
inc
lock
push
imulb
dec
fsubrl
jno
jl
cmp
adc
icebp
shll
and
cmpsl
jl
sub
xor
addr16
sbb
dec
insl
mov
rcr
sti
sub
addl
mov
gs
pop
fs
pop
in
push
stos
clc
push
mov
movl
adc
sbb
add
add
xchg
bnd
shl
fst
xchg
fcoml
notb
imul
dec
dec
jge
pop
rcl
das
shrl
cmpsb
pusha
xchg
mov
xchg
loope
loopne
scas
imul
insb
rorl
int3
fsubr
daa
popf
in
jne
mov
cmp
push
in
test
mov
cmp
dec
inc
scas
mov
adc
gs
popf
inc
mov
clc
xchg
movsb
dec
inc
adcl
dec
dec
sahf
cwtl
or
inc
mov
mov
enter
enter
push
push
ror
push
fnclex
inc
xor
lock
aaa
pop
inc
test
mov
sub
or
out
movsb
adc
adc
nop
cmpsb
xchg
mov
mov
in
data16
jecxz
or
sahf
into
shl
sbb
cmp
jmp
je
jbe
cli
mov
push
pop
and
cmc
stos
and
cmp
push
mov
scas
and
enter
int3
je
out
xlat
or
rcrb
or
adc
sub
cli
and
sbbl
xor
inc
mov
std
jno
inc
sbb
xchg
out
cwtl
leavew
mov
adc
and
jnp
shlb
jns
mov
les
and
jae
pop
jl
mov
loope
imul
fcmovnu
sbb
les
fistps
mov
outsb
push
andl
mov
stos
push
add
xchg
dec
lahf
inc
jo
sub
mov
add
xchg
mov
cld
mov
push
ficompl
inc
sub
loopne,pt
xchg
mov
pushf
inc
xor
sti
add
outsl
mov
popf
mov
orl
cltd
mov
jne
inc
jl
xchg
mov
iret
add
test
mov
pop
jmp
sahf
call
cmpl
shl
ja
dec
pop
data16
dec
xor
mov
cmp
les
aaa
adc
pop
movsl
and
push
dec
out
cmc
or
push
aam
std
shl
mov
xchg
xor
sbb
pop
in
test
mov
test
movl
cmp
andl
inc
je
outsl
xor
sub
add
push
sbb
sbbb
jp
mov
arpl
mov
push
ret
ror
roll
gs
mov
sub
jns
clc
jp
and
fistl
pop
out
rol
pop
mov
sahf
sbb
cmpsb
fistl
jo
leave
les
arpl
int
pusha
xlat
setbe
or
inc
add
rorl
out
and
pop
jae
popf
sbb
mov
sub
xchg
inc
fimuls
lea
push
dec
and
imul
mov
inc
loope
loope
pop
repz
enter
jmp
or
cmpsb
adc
loop
rorl
sub
cld
cmc
mov
ljmp
loopne
pop
lahf
mov
sub
ja
jbe
orb
mov
pop
out
mov
out
and
orb
aas
jne
enter
mov
inc
fs
jmp
aam
jo
adc
sbb
adc
popa
icebp
mov
test
insb
inc
mov
cli
mov
sbb
push
push
xchg
push
adc
pop
int3
mov
cmpsb
cmp
jg
sub
aam
test
dec
mov
mov
jl
popl
xor
inc
inc
adc
jmp
pushf
fcomps
out
fcompl
test
cli
xor
and
xchg
arpl
or
sti
adc
inc
sub
imul
sbb
pushf
inc
pop
adc
mov
mov
sbb
and
sbb
jne
cmp
pushf
mov
inc
xor
xchg
pusha
outsl
movsb
popa
adc
sbb
push
jle
mov
filds
shr
jb
xlat
xor
xlat
test
pop
ret
inc
add
push
in
jno
lcall
shlb
push
and
mov
sub
cmp
adc
inc
rcrb
lret
lea
jmp
lahf
push
ja
mov
cwtl
xchg
mov
mov
aas
inc
mov
hlt
les
popf
out
inc
cmp
or
jmp
lods
and
roll
adc
jle
iret
push
add
pop
pop
call
leave
inc
adc
and
cwtl
stc
mov
xchg
addr16
subb
add
mov
incl
lock
push
mov
out
and
add
jl
test
mov
and
fmuls
mov
fdivr
cs
pop
mov
xchg
into
divb
mov
hlt
mov
jmp
xchg
push
ror
sbb
loopne
scas
sbbl
stos
jns
sub
dec
push
or
loop
rolb
adc
jno
xchg
mov
cmp
push
lcall
and
pop
int
pop
jg
adc
or
jb
push
cmp
popf
sbb
dec
hlt
in
jb
out
adc
cmp
in
jo
or
add
xchg
fcomp
push
pusha
xor
sub
imulb
shlb
sbb
jb
insb
inc
xchg
push
pop
sahf
iret
loop
sub
js
scas
cmp
daa
dec
fxch
testb
jg
push
xor
lods
jns
shll
rolb
push
dec
rorl
mov
and
sahf
xor
arpl
inc
push
sbbb
push
push
stc
adc
xchg
call
adc
sbb
add
mov
mov
or
leave
sub
call
jmp
lcall
out
lock
and
adc
xor
add
cmp
lds
iret
test
ja
addb
sbb
cbtw
mov
ja
add
lock
lretw
sbb
sbb
or
lods
hlt
fisttpl
push
orl
mov
xor
andb
xor
icebp
mov
stc
lcall
icebp
out
sub
dec
and
inc
xchg
out
psubsb
imul
cltd
popf
lret
js
inc
lods
scas
adc
mov
push
push
mov
dec
bound
aaa
daa
mov
push
mov
out
fmulp
sbb
fists
scas
into
aam
adcb
mov
scas
mov
push
jns
loope
mov
rol
fidivrl
loopne
mov
jo
jecxz
inc
fisubrs
dec
sbb
add
shll
adc
jno
inc
aad
movsb
testb
pop
cmp
insb
xlat
jmp
lahf
js
ffreep
in
lret
jns
add
push
add
jmp
pusha
in
push
icebp
test
ds
dec
fadd
inc
sub
lret
std
fnstenv
pop
jno
adc
cmp
out
inc
lret
stos
push
and
cli
repz
cmp
sub
jg
movsl
ja
jg
arpl
ljmp
pop
add
out
imul
push
jae
push
push
or
out
iret
cmp
lea
or
xorb
dec
enter
push
xchg
aad
mov
enter
loop
mov
mov
in
cmp
orb
lcall
imul
shlb
scas
push
lods
mov
sub
mov
lahf
jecxz
movsl
lret
mov
popa
mov
and
push
mov
lea
mov
std
mov
je
or
sahf
das
das
out
insb
mov
xor
mov
jno
repz
es
mov
add
push
data16
mov
rclb
sub
mov
test
adc
hlt
dec
dec
and
dec
mov
neg
sub
xor
cmpsl
pop
fmull
cmpsb
negl
imul
and
pushf
call
stos
dec
int
xchg
aas
mov
inc
mov
pop
pop
mov
sub
call
xchg
outsb
sarl
adcb
stos
push
push
xor
mov
movsb
adc
les
je
add
insb
ljmp
roll
cs
jecxz
test
icebp
mov
data16
cmp
push
dec
sbb
sub
test
mov
repz
mov
cli
divb
pushf
and
shll
xor
mov
and
testb
clc
inc
or
sti
jecxz
popf
jae
les
notb
dec
ret
out
cmp
add
aad
push
dec
mov
lods
pop
stos
fucom
dec
insb
or
call
stos
pop
pushf
std
lahf
int3
adc
xchg
movsb
fs
sub
hlt
mov
in
sub
pushf
fcompl
dec
add
sahf
cs
fneni(8087
shrb
cmp
int3
or
aam
int3
fwait
mov
or
stos
sar
adc
adc
adc
cmp
popa
or
ja
fisubs
cmp
xlat
js
pop
mov
sbb
pop
roll
lods
jecxz
stos
loopne
jge
xor
mov
add
push
sarb
push
pop
rcll
in
ficoms
mov
pop
outsl
int3
arpl
cmpsb
push
lahf
sbb
mov
dec
mov
pusha
xor
jbe
mov
ljmp
shll
pop
jnp
loope
out
push
push
es
repnz
fwait
push
scas
adc
dec
xchg
mov
inc
sarb
arpl
and
jge
ret
dec
enter
pusha
adc
xlat
fbstp
push
jbe
loop
inc
leave
ret
sbb
sbb
loop
adc
sbb
sahf
scas
push
popf
mov
or
xor
push
mov
rorl
pushf
pop
insb
jle
in
inc
mov
jle
out
insb
or
push
cmpsb
lods
mov
aad
stos
ja
xchg
sbb
dec
bound
adc
cs
popa
pop
ret
lods
ficomps
dec
pop
cmp
into
test
repnz
outsb
pop
adc
sbb
jecxz
xchg
ds
jmp
je
push
test
add
popf
xor
push
lahf
sub
repnz
or
test
mov
cmpsl
push
dec
aas
mov
mov
into
ss
rcll
push
int3
xchg
mov
pop
jecxz
inc
cmpsb
jne
xor
lcall
jg
addr16
mov
xchg
sub
jle
mov
mov
lock
jo
sbb
lret
mov
sti
loopne
imul
movsl
in
enter
xchg
out
stc
repz
aas
decl
or
pushf
push
repz
and
push
cmpsb
xchg
cld
cmpsb
lahf
jl
jmp
mov
stos
mov
pop
dec
lds
cmpsb
adc
fsubp
lcall
shlb
and
aas
cmp
cmp
popa
and
mov
xchg
fsubl
push
loope
sbb
sub
jae
xchg
das
dec
mov
mov
jo
xor
jp
mov
into
aaa
xor
dec
sbb
jns
pushf
clc
mov
cmpsb
inc
push
je
jl
jecxz
jbe
pop
repz
sar
mov
sarl
jle
push
jns
jmp
xlat
leave
xor
add
aaa
push
lock
mov
icebp
cmp
addl
int
pop
add
mov
add
sahf
es
and
pop
xchg
pop
mov
out
int
aam
mov
rcll
ja
jg
jns
loopne
pop
pop
push
in
add
sub
and
imul
push
lahf
push
push
ja
xchg
ds
dec
push
lcall
mov
dec
jg
pop
lds
jp
pop
in
mov
std
dec
inc
fbld
or
sbb
jns
aad
sti
lods
or
or
stos
pop
inc
psubd
mov
pshufw
mov
lds
in
mov
jmp
xchg
cltd
add
inc
fcomi
fsubs
andb
ljmp
inc
lcallw
adcb
pop
inc
out
mov
sub
repnz
packsswb
enter
movsb
lods
sbb
pop
fildll
cmp
ret
cmp
dec
cs
push
push
mov
loop
lcall
dec
lods
dec
lock
sbb
sub
ljmp
dec
outsl
add
ret
jg
pop
add
adc
rcll
sbb
out
xchg
cmp
sbb
push
pop
or
push
cltd
mov
add
mov
test
aad
jnp
clc
test
ljmp
add
lock
cli
xchg
shrl
xchg
rcll
push
pop
enter
movsb
mov
jno
jns
das
rcrb
adc
fwait
jecxz
dec
rcrl
movsb
mov
adc
cmp
add
add
test
movsl
insb
or
scas
dec
add
inc
fstl
xchg
subb
sub
mov
popa
aam
jno
inc
sbb
in
lcall
mov
rorb
dec
fadds
fnstenv
je
mov
mov
fildl
cmp
jae
ret
xor
ret
pop
xchg
add
lret
lock
jge
pop
cltd
outsl
stos
ja
adc
int3
jp
lea
repnz
cltd
iret
pop
or
insb
cmpb
mov
dec
int
lret
jmp
in
out
fnstsw
xor
cmpb
sahf
fldl
repnz
addr16
push
push
test
jnp
icebp
mov
aam
or
test
in
rolb
cmc
sub
test
lahf
out
ds
leave
scas
pop
sub
jno
mov
ret
mov
adc
sub
cmp
add
imul
sbb
dec
inc
or
div
push
cmp
inc
pop
rcrl
fisubrs
cmp
je
lret
mov
aaa
cmp
shl
jo
js
mov
push
lea
add
popa
aaa
mov
rcll
or
jle
add
cli
aaa
fisubs
daa
insb
lcall
loope
fidivrl
std
mov
push
lret
push
sub
repz
pusha
nop
mov
mov
jl
stc
out
sub
or
or
push
adc
jae
push
mov
test
mov
aas
dec
out
sbb
mulps
in
stos
and
lea
and
out
adc
xchg
out
jne
int
insl
mov
inc
fdivrs
fwait
bnd
mov
and
lds
dec
movsb
or
or
ljmp
cmpsl
jbe
and
mov
and
mov
nop
fdivr
test
dec
mov
xchg
shll
outsb
js
xchg
or
adc
notb
enter
or
sti
ret
cmp
test
fnstsw
xchg
lahf
jle
dec
cmp
es
sbbb
ret
cld
mov
mov
adcb
sub
bswap
jae
add
aam
add
lods
sub
sbb
pop
cmpb
inc
sbb
xor
push
dec
imul
add
push
mov
loop
inc
scas
mov
cwtl
cmpsl
imul
inc
pusha
loop
xchg
in
add
xor
dec
test
aad
stos
xor
ss
ljmp
out
jge
push
cmp
stos
mov
loop
pop
add
shll
addr16
enter
test
or
or
mov
shlb
lea
mov
add
add
arpl
jne
inc
sub
leave
ret
cmc
lods
dec
mov
into
sub
sub
mov
lret
push
push
push
cmp
pop
mov
mov
jg
sahf
outsb
cmp
xor
sarb
and
mov
in
inc
stos
lret
iret
mov
and
or
data16
loope
gs
sub
jb
js
nop
es
push
cmpsb
or
cmp
sti
inc
cltd
xor
fildl
add
hlt
clc
cld
enter
xchg
adc
mov
cwtl
and
out
clc
pop
bound
and
xchg
push
ret
xchg
notl
xor
adc
jmp
fs
jp
push
test
dec
push
andb
lods
or
mov
push
mov
or
pusha
inc
out
out
fmuls
aad
jne
push
adc
not
mov
sub
add
inc
icebp
pop
xor
pop
idivl
ret
das
je
fildl
push
and
pop
fwait
aam
mov
jno
clc
stos
mov
gs
int3
add
pop
daa
adc
push
lea
aad
scas
mov
or
xchg
jg
dec
loopne
mov
insb
pop
test
in
inc
or
pop
lret
mov
xchg
insl
lret
psadbw
mov
jno
mov
sbb
sbb
cli
inc
xchg
jae
xchg
outsl
adc
loope
mov
dec
jnp
enter
sub
js
dec
xor
sub
push
fstpt
dec
xor
jmp
call
xchg
or
movsl
pop
or
sub
and
repz
icebp
add
push
pushf
sub
es
fiaddl
hlt
nop
arpl
xlat
jne
dec
popf
push
sbb
jge
and
jmp
sbb
stos
add
inc
jno
stos
icebp
fdivrs
dec
push
sub
gs
outsb
mov
fs
inc
bound
inc
sbb
cmc
lea
fidivrs
add
dec
stc
push
or
mov
std
dec
mov
xor
dec
icebp
lret
push
xor
ret
push
div
mov
pop
xchg
fldenv
nop
loop
jnp
sbb
aam
mov
push
loop
xchg
movsl
inc
cltd
mov
xor
ljmp
inc
mov
push
sbb
fbld
cld
mov
or
or
xchg
test
or
and
hlt
mov
insb
cs
mov
mov
and
pop
pop
daa
sarl
sbb
hlt
inc
std
outsl
xchg
add
and
cmpsl
out
jmp
sub
pop
insb
inc
inc
into
ds
test
and
jg
outsl
mov
inc
imul
fidivrl
mov
jb
inc
outsb
nop
icebp
adc
pop
lret
mov
scas
lcall
push
push
push
adc
lock
sbb
mov
xor
pop
cmp
xlat
jne
xchg
push
add
rorl
inc
pop
mov
out
in
sbb
into
ret
mov
cmp
dec
inc
in
jge
dec
cmp
test
add
filds
cmp
inc
jbe
pop
pop
fwait
movsl
cmp
aaa
and
das
lea
aad
and
adc
fsubrp
push
xchg
icebp
jae
in
cmp
minps
push
sub
or
popf
jp
jae
jae
xor
int3
cmp
adc
mov
sbb
pop
xchg
mov
daa
out
incb
out
pop
jae
nop
loopne
aas
inc
xchg
stc
jge
push
jo
std
cmp
insb
add
ds
pop
and
fstp
mov
or
xchg
pop
mov
movsb
mov
xchg
cmp
xor
ljmp
daa
arpl
push
xor
fcomp
dec
and
push
insl
jne
mov
push
clc
cmpsb
gs
mov
roll
jecxz
ret
lcall
cmc
xor
rcrb
push
in
ret
aas
cs
test
in
pop
shrb
sub
loope
lods
xchg
out
dec
scas
test
cmp
lret
loopne
imul
adc
pop
dec
mov
add
mulb
sbb
insl
out
lret
adc
pop
cmp
test
loopne
lret
mov
xchg
mov
outsl
clc
add
lods
mov
cwtl
mov
rcll
xor
hlt
xchg
dec
add
stos
cmc
stos
mov
push
mov
jnp
inc
sbb
aas
js
ss
xchg
dec
mov
stos
sub
fiadds
mov
lods
jmp
and
cmp
ljmp
or
sub
fsts
push
inc
push
mov
pop
adc
clc
repz
ljmp
inc
and
iret
mov
adc
dec
shll
dec
and
icebp
xchg
mov
test
xchg
dec
in
mov
mov
sbb
inc
pop
lahf
std
xor
mov
aas
lods
jo
fcomps
inc
gs
out
inc
mov
lret
jp
ds
fsubr
sbb
pushf
sbb
int3
push
mov
gs
mov
add
push
cli
icebp
out
scas
in
daa
sbbb
mov
adc
mov
mov
and
hlt
adc
adc
jmp
and
insb
mov
in
mov
arpl
dec
in
xchg
pop
into
sub
add
pop
lods
or
ds
clc
or
andl
and
fst
movl
call
fs
jmp
or
in
pop
ror
sub
subl
stos
jno
xchg
xor
xor
rolb
mov
pushf
jmp
daa
jno
add
mov
push
sbb
gs
bound
movsl
add
sub
pop
loop
lock
cs
or
mov
repnz
scas
dec
cmp
idiv
jmp
ljmp
jnp
data16
push
jae
mov
loope
mov
cmpb
aam
cmp
mov
shl
movsl
mov
in
xor
es
mov
test
mov
sbb
push
dec
jns
or
cmpsl
xlat
sti
jne
dec
out
and
or
or
mov
aas
or
xor
in
xchg
insb
iret
movsb
fwait
add
jnp
inc
mov
stos
push
cld
or
sbb
cwtl
lcall
shll
clc
out
dec
dec
bswap
cmp
push
adc
push
push
clc
das
mov
dec
ljmp
push
push
test
scas
pusha
xchg
sbb
mull
push
or
cmpsb
out
ficompl
push
test
outsb
bound
lock
imul
dec
aaa
add
add
jae
mov
xchg
in
inc
fdivr
inc
push
in
add
or
inc
in
pop
mov
cmc
movsl
js
jge
pop
jecxz
call
push
push
push
outsl
outsl
xchg
test
test
int3
cmp
sbb
xchg
lret
jnp
lret
jo
mov
add
roll
cmp
or
push
pop
add
je
lahf
cmpsl
add
nop
cli
push
andb
je
and
loop
pusha
negb
mov
adc
pop
scas
push
xlat
lret
idiv
lds
jno
add
in
sbbl
outsb
sub
xchg
sbb
inc
mov
ss
pusha
lret
popf
pop
sbb
test
test
mov
sahf
mov
dec
or
cmpsl
push
or
jle
enter
cwtl
imul
xor
std
stos
push
xchg
add
iret
mov
notb
sbb
inc
xchg
inc
and
das
mov
rclb
adc
sub
jns
out
inc
std
and
mov
push
adc
mov
xor
aaa
inc
nop
pusha
xchg
add
jmp
cmpsl
xchg
xchg
test
push
popf
rcr
mov
pop
int3
or
popf
ds
or
fwait
xchg
fdivr
fwait
jg
inc
repz
cmpsl
mov
push
test
push
int
mov
fwait
icebp
jb
dec
adc
clc
sub
ljmp
cmpsl
sbb
mov
dec
mov
push
inc
lods
lea
xor
lcall
sub
jle
hlt
mov
push
punpckhwd
push
push
sub
and
mov
fstl
mov
mov
add
mov
jmp
test
in
call
inc
icebp
and
or
add
sub
dec
mov
cmp
lock
insb
or
out
inc
fnstsw
clc
cmpsb
and
pop
push
ss
adc
jno
bound
stos
jge
cmp
cmc
repnz
out
mov
lods
fadds
pop
push
or
in
push
sbb
ret
mov
xor
push
pop
loopne
loop
hlt
or
sbb
mulb
sub
jae,pt
inc
cmp
imul
jp
shlb
jg
xor
sbb
mov
mov
add
push
jecxz
xchg
cmp
xchg
cmp
xor
fucom
adc
daa
mov
lock
xor
inc
sub
sub
shll
shlb
test
push
mov
mov
std
pushf
insl
arpl
in
lret
fistpl
sub
jbe
jno
mov
cmc
pop
add
mov
imul
jae
jg
add
into
mov
push
sbb
cmp
pop
scas
adc
popa
fwait
inc
mov
lcall
faddl
outsl
bound
pop
ret
mov
jbe
sub
push
or
cltd
inc
insb
push
adcb
jge
fimuls
call
mov
add
xchg
lret
jle
out
pop
ret
or
mov
inc
jne
mov
sarl
cmp
push
and
jo
sbb
cmp
in
and
xor
cmpl
mov
pusha
movsl
pop
cmp
out
and
sarb
jle
sbb
scas
enter
and
push
jnp
mov
jne
jb
xchg
dec
cld
pop
inc
cmp
cwtl
repz
xor
xchg
je
fmull
jle
xchg
je
btc
xchg
push
and
call
jmp
push
mov
push
aad
push
jcxz
inc
popa
cmp
out
decb
push
je
mov
pop
or
aas
fstps
int
jo
pop
jle
push
leave
push
lret
sub
inc
call
sbb
push
cwtl
in
ja
push
pop
test
lods
mov
inc
sti
cli
sbb
js
and
mov
add
mov
pop
cmpsl
fmull
in
jns
xlat
notl
pop
add
loope
jg
mov
cs
pusha
jg
jns
add
lods
lds
sbb
and
aam
shll
cmp
mov
pusha
orb
sbb
mov
jmp
pop
mov
push
push
adc
and
out
sub
inc
xor
inc
xchg
or
add
mov
or
dec
aad
cld
out
insl
sbb
daa
lret
jge
jbe
or
outsb
xor
in
shlb
or
ja
jp
jmp
imulb
bound
sbb
mov
outsb
lods
xor
xchg
ds
adc
pusha
lahf
inc
inc
xchg
fwait
dec
xor
sub
jp
mov
or
xchg
cmp
daa
jbe
ficoms
sbb
repz
addb
push
imul
push
mov
xor
mov
movsb
test
or
mov
inc
repnz
xlat
sbb
inc
shlb
pop
cmc
sub
push
icebp
push
aam
adc
outsb
xor
jle
int
mov
sbb
push
cmp
shlb
xchg
push
inc
pop
pop
ficompl
hlt
in
popl
push
sbb
push
dec
cmp
mov
int3
push
in
xor
cmp
les
add
test
shll
adc
pop
push
outsl
xchg
ja
pop
mov
sbb
pop
and
mov
lds
dec
das
out
or
push
jp
es
xor
mov
out
lods
pop
jo
mov
in
orb
aaa
mov
push
out
push
inc
iret
rorl
sbb
xchg
imul
lret
mov
gs
xor
xchg
hlt
hlt
sub
dec
and
jge
into
cltd
xor
mov
stos
pusha
mov
cmp
xor
mov
fsts
and
ljmp
data16
sub
std
inc
sbb
xchg
ret
xor
cmp
icebp
shr
jl
mov
aas
inc
je
add
mov
scas
mov
clc
push
pop
repz
js
daa
insb
repz
aas
loope
lret
xor
and
repz
ja
mov
popf
aaa
add
aas
gs
cmp
loop
cmp
ret
hlt
sub
repz
stc
shrb
or
jae
orb
fistpll
add
jo
inc
inc
imul
and
mov
xchg
mov
xchg
fisttps
push
sub
testl
jns
insb
les
scas
mov
fidivrs
or
adc
ljmp
hlt
notb
lods
push
sub
mov
aaa
xor
test
pop
xorl
int3
fidivrl
sbb
sahf
movsb
fbld
xlat
fwait
jp
rep
cltd
cmc
jp
movl
adc
ja
stos
daa
icebp
xor
sbb
mov
or
in
movsb
into
mov
mov
int
pop
dec
pop
mov
jbe
push
fnsave
cmp
sarb
or
jns
pop
rcr
adc
imul
mov
in
lock
push
inc
adc
cmp
sarb
sbb
mov
pop
push
add
in
out
pop
test
imul
gs
lahf
xor
mov
movnti
xchg
icebp
mov
xlat
mov
mov
scas
mov
pushf
rorb
mov
mov
inc
push
repz
cmc
dec
dec
and
movsb
stos
dec
idivb
dec
fsubrs
jns
inc
fbld
leave
mov
adc
xor
inc
out
aas
jmp
adc
outsb
cltd
or
push
stos
pop
leave
imul
std
inc
subl
adc
sahf
cmp
xlat
shl
pop
mov
shrl
fs
cmc
pop
add
cwtl
mov
adc
xor
sbb
pushf
sub
xor
sbb
xor
pop
xchg
sub
rcll
out
nop
popa
xchg
jle
insl
xor
add
cld
push
cltd
out
push
mov
and
js
sbb
cld
ret
stc
jecxz
cmpsb
es
or
lods
jp
iret
adc
or
out
inc
push
cmp
repnz
push
add
movsl
cmp
pop
sbb
hlt
adc
dec
sbb
aas
dec
mov
mov
shlb
lea
div
pop
daa
adc
push
insb
lea
and
mov
out
cmp
stc
inc
xchg
add
icebp
stc
std
dec
mov
popf
mov
pushf
mov
nop
lret
xchg
sub
mov
and
mov
movsl
pop
mov
in
outsl
imul
dec
sub
or
out
push
call
movsl
sub
out
mov
pop
cmc
pusha
push
les
je
lods
xchg
mov
popf
jmp
dec
xchg
inc
and
pop
shrl
sbb
loope
lods
mov
negl
gs
mov
cmc
aas
fnsave
sbb
repnz
inc
xchg
ja
rcr
idiv
or
es
mov
out
popa
outsl
sub
int3
xor
push
outsl
scas
sub
dec
add
push
test
mov
imul
xor
mov
or
mov
mov
cmp
clc
jmp
and
in
add
or
jle
loopne
push
cmpsb
out
insb
xchg
es
adc
cmp
mov
dec
cmpsb
cwtl
and
sti
loope
out
sub
mov
jle
pop
adc
iret
movsl
sahf
std
sbb
mov
xchg
cmp
jne
adc
sbb
sbb
dec
popf
mov
and
inc
xchg
or
repz
mov
ffree
fisubl
xchg
jg
cmp
or
sahf
out
imul
mov
jns
pop
fs
stc
jae
call
xor
and
icebp
cmp
xor
enter
xchg
ja
push
in
fdivs
mov
add
loope
loop
dec
jge
fsubl
cwtl
sub
aas
mov
sub
cmp
fcomip
mov
pop
sbb
loop
es
adc
nop
addl
sbb
cli
lods
int3
cld
push
fnstsw
jmp
fcoml
mov
clc
pop
sti
adc
jge
movsl
pop
daa
stos
out
cmp
fidivrl
jl
ljmp
cmpl
mov
sbb
arpl
jge
faddp
scas
xchg
imul
je
sub
adc
mov
push
in
stc
sbb
add
in
movzwl
inc
pop
test
jno
lods
xor
jno
bound
or
add
fimuls
loop
repnz
ss
lahf
loopne
and
lds
jnp
sub
cs
jmp
call
inc
cmc
popl
lret
movsl
adc
mov
pop
cmp
sbb
std
mov
iret
loope
jno
and
cmpsl
mov
and
adc
and
mov
sahf
adc
ss
push
adc
fsubs
adc
sti
das
jno
icebp
rolb
adc
push
sbb
lcall
lods
je
sbb
loope
add
xchg
mov
test
xchg
push
jecxz
jo,pt
shll
shll
js
cltd
aad
test
jb
dec
xor
lods
jge
ret
dec
aaa
shlb
or
jmp
xor
sub
out
inc
cmp
or
idivl
popa
and
mov
cmp
push
mov
lcall
shrl
dec
mov
int
mulb
pop
mov
jle
out
adc
cmc
imul
ss
in
mov
ficoml
loope
fsqrt
aas
inc
mov
cmp
dec
inc
shrl
loope
sarl
inc
xor
je
aad
out
jbe
and
push
negb
pop
push
pop
cmp
mov
inc
cmp
test
or
nop
out
je
ss
dec
jmp
test
lret
xchg
sbb
icebp
mov
lods
sbb
inc
mov
daa
stos
push
shrb
mov
shrb
mov
jge
add
je
pushf
pop
mov
fidivrs
pop
sub
fs
repnz
gs
shlb
jecxz
ficoml
outsb
and
pminub
test
stc
movsb
xchg
mov
ja
xchg
jnp
scas
out
inc
lret
adc
xor
loopne
leave
loop
xchg
fidivrl
test
jmp
out
jg
fdiv
push
xor
lret
and
hlt
rcrl
aad
xor
aaa
mov
mov
and
lahf
sub
mov
xchg
ret
mov
adc
xchg
mov
xchg
das
push
sub
andb
push
xchg
sbb
cltd
les
test
jae
fisubrs
imul
imul
in
push
es
or
ret
leave
sub
or
out
mov
int
in
jo
call
and
dec
lcall
xchg
push
cltd
sbb
int
push
mov
add
jle
testl
mov
cmpsb
andl
rclb
into
outsl
lahf
mov
jbe
iret
pop
repnz
cmc
stos
cvtpi2ps
lret
and
inc
and
mov
push
mov
mov
cmp
pop
and
pop
in
push
nop
loopne
lcall
mov
jo
mov
mov
cmp
sub
sbb
cmpsb
mov
dec
xchg
cwtl
sbb
cmp
mov
cmpsl
inc
push
subb
mov
or
cwtl
sbb
or
loopne
aad
xchg
cmp
dec
and
lcall
xor
jnp
or
aad
adc
xchg
in
jmp
dec
addl
mov
ljmp
push
jbe
movsl
mov
add
lods
dec
popf
push
insl
adc
icebp
or
add
enter
push
mov
mov
mov
flds
adc
pop
pop
int3
xor
cmp
sbb
filds
arpl
push
sbb
xchg
sti
cwtl
xchg
cmpsl
test
mov
xchg
cwtl
add
mov
push
popa
adc
dec
stos
pop
xchg
xlat
sarb
fwait
pushf
in
es
insl
fistpll
cmp
cwtl
mov
sub
sarb
lods
fidivrl
xor
dec
fnstcw
arpl
mov
ret
add
push
jle
outsb
call
jp
movsb
adc
fnstenv
sti
es
sub
adc
mov
stos
jbe
outsb
and
xchg
leave
or
arpl
inc
push
lret
lcall
or
adcb
out
dec
dec
daa
int
incb
int
repz
push
push
cli
sub
fcoms
mov
repz
pop
std
andl
mov
xorb
jnp
mov
dec
cmp
lea
scas
mov
shlb
adc
lcall
sti
and
lahf
ss
dec
cmp
clc
sub
subl
and
jge
and
xor
aas
cmp
test
insl
pop
sbb
int3
mov
in
out
bound
enter
add
or
cwtl
icebp
ja
adc
insl
int3
sbb
and
cmp
pop
dec
das
sbb
mov
idivl
test
cs
jb
ficompl
lock
push
dec
push
insl
jbe
adc
xchg
pop
cli
and
push
mov
mov
das
cmpsb
sub
jle
inc
dec
mov
mov
les
mov
push
mov
lcall
and
cmp
xor
mov
enter
lock
mov
adc
adc
xchg
pusha
fisubl
outsb
sbb
mov
pop
jmp
mov
std
cmpsb
into
inc
xchg
dec
jno
mov
cmp
cltd
cltd
jnp
push
adc
cmc
ljmp
les
add
push
into
sbb
jns
push
js
and
pop
cmp
in
fstps
les
in
cli
mov
aas
adcb
pop
jo
cli
inc
xorb
fimull
sub
jns
mov
and
enter
push
sahf
repnz
test
out
cmp
mov
shrl
decb
adc
mov
xchg
imul
shl
js
gs
and
fmul
mov
movsb
or
out
mov
out
gs
mov
jecxz
pop
clc
imul
dec
test
jmp
mov
leave
mov
sbb
pop
cmp
mov
xchg
cmp
sbb
add
xor
sub
sahf
shl
or
xchg
add
into
add
nop
shrl
and
mov
xchg
push
pusha
add
mov
lret
jmp
fsubl
sub
or
jbe
push
xchg
sbb
sub
sub
shll
test
or
xor
add
cmp
inc
mov
nop
jecxz
add
mov
xchg
push
lret
jmp
or
cmp
mov
xchg
cmp
dec
and
sub
hlt
push
ret
in
xchg
mov
and
mov
cmc
sbb
int3
mov
call
ret
test
insb
je
mov
loop
ret
loop
jns
mov
and
push
adc
in
fsubp
inc
scas
and
adc
inc
fnsave
lods
xchg
lock
mov
shrb
nop
jmp
or
xchg
add
shrl
cmpsb
xor
sub
int3
xchg
out
push
ljmp
pushf
cmp
popf
add
dec
andl
and
lods
fistps
xorb
xor
jb
in
sbb
mov
movsb
jmp
xchg
jne
push
dec
outsl
mov
fdivrs
insl
mov
push
xor
test
inc
mov
fcomp
test
lret
pop
mov
int3
std
xchg
or
popa
xchg
inc
sti
pop
jge
and
sbb
jp
movsb
mov
into
in
and
adc
inc
pop
jns
inc
cmp
inc
fidivrl
movsb
cld
add
stos
xor
cld
and
pop
sub
nop
dec
push
cltd
daa
lock
icebp
adc
dec
jb
lock
xchg
jo
jge
pop
or
rep
sub
push
sbb
shl
jno
push
pop
cwtl
or
aad
sub
jb
and
stc
sbb
sub
sahf
cmp
jecxz
data16
scas
lcall
jne
cmp
inc
ret
xchg
movsl
sahf
pushf
sub
pop
shrl
inc
addr16
cmpsl
in
sub
add
shll
in
adcl
or
mov
or
pop
push
sub
stos
xchg
aas
jo
and
dec
mov
cmovne
rcrb
dec
and
dec
push
or
xor
adc
jno
or
mov
jno
mov
add
pop
fld
and
bound
cmc
fsubrp
dec
fstl
jbe
adcb
or
ljmp
jae
rcrl
repz
js
aad
int
ljmp
popf
jge
mov
leave
mov
inc
in
and
cmpsl
fwait
popa
lret
sbb
das
insb
hlt
jne
fdivrl
das
jno
mov
xor
or
out
cmc
mov
sti
push
mov
pop
dec
cmp
xor
insb
aam
rcr
xor
push
aad
cmp
out
divl
stos
dec
repz
std
out
test
shll
inc
mov
mov
pop
ficoml
aam
stos
xchg
inc
fsts
push
xor
inc
les
in
hlt
lock
shrb
js
push
hlt
and
fbld
adc
pop
sub
xchg
js
filds
adc
lahf
inc
stos
lods
in
pop
lods
or
and
nop
out
fimuls
sbb
das
fs
pop
insb
pushf
sbb
sarb
test
scas
cwtl
push
adc
or
mov
mov
push
in
jb
pop
fisubrl
push
outsl
js
push
imul
mov
imul
sti
cmp
fcoml
jb
adc
xchg
dec
out
cmp
adc
xchg
push
cmp
addr16
test
jns
bound
stos
rol
loope
inc
add
mul
ja
push
cmpsb
dec
cmpsl
adc
mov
jp
inc
dec
lds
pop
cld
pusha
int
jb
ss
push
mov
inc
jae
ja
sbb
pop
lahf
lock
adc
aaa
jecxz
cmpb
aaa
iret
xchg
xorb
lcall
jb
pop
sbb
mov
inc
add
adc
push
sti
aad
lea
cmpsb
roll
or
jg
sbb
inc
sarb
mov
inc
loope
jbe
std
mov
test
test
sbb
jge
nop
jb
add
aas
jge
dec
push
push
xor
stos
icebp
push
in
ss
fadds
dec
daa
inc
iret
ss
imul
cli
popa
dec
pop
imul
adc
pop
dec
mov
adc
je
dec
ja
cmp
fwait
outsl
iret
jo
ret
imul
data16
roll
pop
lret
loopne
xchg
mov
fmull
lods
mov
push
xchg
addl
icebp
ja
rcll
add
add
jmp
sub
movsl
out
adc
lock
into
fisttps
jg
shlb
div
jnp
sbb
fisttps
nop
hlt
sti
stos
fldt
and
movsl
inc
pushf
dec
aam
sbb
or
jp
es
xor
sub
mov
add
int
dec
or
fildll
ficomps
fmul
xchg
ljmp
rorb
ret
push
in
xor
stos
les
repz
xor
aad
push
hlt
mov
pusha
arpl
cmp
jge
and
jle
add
sub
sbb
je
sahf
fmuls
mov
cmp
movsb
sbb
inc
sbb
push
ja
mov
data16
adc
aad
mov
mov
cwtl
ficoml
xchg
mov
jne
cmp
lods
jle
mov
pop
pop
gs
fs
sbb
ret
rol
push
jl
jp
gs
test
or
lea
and
adc
lods
pop
jae
mov
pop
int
int3
xacquire
outsl
add
sarl
popl
es
or
ret
push
xor
mov
aas
fstpt
push
mov
sub
inc
pop
cmp
movsb
push
inc
mov
or
xchg
jne
push
pop
push
adc
xlat
sbb
mov
in
decb
mov
outsb
inc
ja
push
loope
cmp
in
test
inc
loope
push
fcmovnbe
fisttpll
test
insb
pop
inc
push
adc
pop
sbb
pop
sbb
or
add
inc
cmp
mov
pop
frstor
out
iret
add
mov
in
push
lds
imul
mov
xor
xchg
xchg
cld
clc
imul
jnp
sub
push
push
sbb
lret
or
xlat
mov
out
shll
jae
ljmpw
test
or
lods
push
cmp
jns
out
push
ljmp
sahf
test
mov
mov
adc
sub
test
jo
jnp
jmp
mov
std
roll
into
xchg
jbe
sub
sub
fisubrl
popa
inc
dec
mov
test
leave
adc
cmp
mov
movsl
out
pushf
jecxz
mov
into
stos
lcall
jo
sti
mov
adcb
pushf
daa
push
cli
iret
and
push
adc
fstl
movsb
test
sbb
cs
gs
cli
cwtl
adc
and
xchg
movsb
dec
sub
dec
pushf
add
dec
sub
das
lods
mov
test
push
sahf
dec
mov
gs
pop
or
sbb
jg
and
pop
or
movsb
mov
jno
cwtl
jle
mov
cmc
mov
pushf
mov
aad
xor
inc
loop
addr16
add
cmc
xor
xchg
xchg
nop
jg
sbb
xor
and
mov
add
dec
mov
cwtl
in
adc
in
bound
mov
add
mov
xor
dec
insb
inc
sbb
lea
addr16
ljmp
je
lods
fstps
push
outsb
popf
adc
ficomps
loopne
inc
lret
xchg
push
out
jbe
jb
push
mov
stc
fisttps
jecxz
out
ret
inc
xor
inc
mov
fisttpl
xor
sbb
push
jns
mov
les
into
mov
sub
gs
imull
mov
and
daa
daa
adc
xor
mov
test
cmpsb
sub
mov
popa
pop
pop
adc
dec
push
dec
jns
int3
cs
repz
push
inc
lahf
xor
cli
icebp
pop
movsb
inc
stos
enter
pop
fcomp
mov
mov
outsb
mov
insl
sbb
mov
xchg
and
jmp
daa
rcll
popf
leave
sbb
jl
incl
lods
lcall
jns
imul
mov
test
sub
sti
push
xchg
mov
shlb
in
jno
icebp
jno
iret
xchg
fisttps
lds
adc
out
popf
fcomp
sub
sub
jmp
or
mov
mov
ret
iret
mov
cmp
sti
xchg
push
shl
adc
or
notl
loope
and
and
jge
sub
outsl
insb
dec
leave
push
dec
cmpsl
mov
arpl
leave
cmp
bound
mov
mov
jns
fildl
cmc
orb
xor
scas
jge
jnp
xchg
mov
dec
out
push
xchg
repz
pushf
sarb
mov
cli
mov
jno
out
mov
dec
mov
mov
imul
insb
lods
cs
rcr
pop
mov
fdivs
mov
sbb
pop
dec
xchg
xchg
dec
insl
mov
movsb
adc
xor
xor
adc
mov
lcall
popf
scas
xor
or
mov
xsavec
aad
dec
or
dec
inc
cltd
dec
idiv
insb
aas
popa
sbb
imulb
mov
cmpsl
cmp
pop
push
leave
aad
repz
mov
jno
aad
cld
xchg
push
lods
jnp
les
adc
mov
stos
vpcmpgtw
test
push
lcall
cmp
leave
mov
mov
inc
dec
push
push
mov
dec
je
popa
xor
repz
cmc
jle
pop
sub
cltd
sbb
rol
clc
cwtl
push
rcr
cmpsb
inc
mov
xor
mov
cli
loope
out
pop
sub
sbb
mov
call
mov
add
jbe
xchg
cli
dec
jae
xchg
xor
lret
mov
and
stos
xor
ret
push
mov
add
arpl
lret
and
xor
push
outsb
sbb
add
repz
cmc
gs
inc
popf
enter
stos
dec
jns
roll
lret
pop
push
cwtl
aaa
cmpsb
lcall
je
cltd
add
mov
inc
jp
xor
pusha
or
insb
sbb
pop
add
vpsubusw
repz
jnp
cmp
xor
cmp
push
int
push
leave
xchg
pusha
mov
in
cmp
pushf
lds
test
push
cmpsl
inc
cmp
mov
mov
cmp
mov
aas
xor
xlat
and
arpl
out
into
cmpsl
mov
jne
idivb
add
rcrl
jno
mov
mov
mov
and
mov
mov
dec
pop
pushf
dec
or
jle
hlt
dec
adc
insb
jg
xor
jle
lahf
rorl
push
push
inc
pushf
enter
pop
cmp
inc
mov
push
add
xchg
inc
jg
scas
mov
or
push
xor
out
bswap
aas
jbe
out
sahf
out
sahf
lods
pop
fimuls
aad
cltd
mov
xchg
std
movb
cwtl
mov
pop
cmp
out
shrl
ret
in
add
or
pop
cltd
popa
xchg
lcall
js
sarl
cmp
add
sbb
sub
push
inc
mov
in
into
out
lock
imul
jns
jo
mov
popl
and
inc
dec
xor
test
loopne
mov
andl
pushl
fincstp
arpl
stc
je
subl
push
and
mov
sbbl
sub
lods
cmp
pushl
xlat
add
inc
or
push
xchg
cld
loope
out
xor
sbb
and
mov
dec
push
xchg
stc
loope
test
jmp
inc
push
sbb
iret
jbe
movsl
rol
ss
lock
inc
fbstp
loop
push
dec
out
es
cwtl
xor
filds
cld
dec
movsbl
andb
pop
jno
lret
ds
inc
mov
mov
cmpsl
add
cs
lea
sti
ljmp
movsl
cwtl
repz
pop
fwait
dec
adc
push
or
and
sbb
push
xchg
mov
inc
cmp
dec
mov
push
lock
pusha
jnp
sbb
xchg
add
or
push
mov
inc
rorb
scas
mov
sbb
add
sbb
jecxz
aaa
push
add
addr16
or
insl
jne
dec
outsb
mov
add
jbe
lret
xchg
fisttpl
mov
sub
into
jns
mov
insb
dec
and
add
aaa
jmp
lds
and
ja
or
imul
inc
adc
test
xchg
psraw
in
add
test
jecxz
sub
sub
or
mov
jmp
xchg
xchg
xlat
hlt
mov
and
lahf
mov
cwtl
jge
adc
inc
push
sti
mov
cmp
pop
scas
rcrl
fcomps
fs
jo
rol
int
pop
in
xchg
adc
sbb
pop
mov
aas
das
push
xor
pusha
mov
mov
add
pop
sub
std
pop
fdivl
rcrl
push
mov
pop
pop
stc
adc
or
sub
ss
and
cmpsl
aaa
xor
imul
mov
in
jg
faddl
out
pushf
sbb
pop
or
mov
add
loop
test
fwait
mov
mov
mov
imul
int3
or
cmp
sbb
cmp
ret
jmp
pop
out
fcoms
test
hlt
pop
sahf
mov
adc
or
xlat
ret
adc
loope
stos
enter
mov
stos
sbb
xor
push
shrl
inc
sbb
in
push
test
inc
stos
dec
inc
jg
push
data16
movsl
jbe
mov
mov
int3
or
loopne
lea
xor
xlat
repz
sub
js
push
jbe
shll
add
sbb
sbb
push
cltd
sub
xchg
imul
mov
jae
pop
add
pop
xchg
xchg
addr16
jae
lcall
mov
arpl
fdivrs
and
cltd
fldcw
push
mov
mov
jle
cmp
sti
xchg
xor
cwtl
outsl
push
add
xchg
mov
dec
ret
outsb
jno
cmp
cmp
lea
or
cmpsb
cmp
lahf
cli
push
pop
shlb
sti
cmc
lods
outsl
movsl
mov
aad
out
jne
sbb
movsl
sbb
cmp
xor
or
cltd
cld
ficoml
ficoml
sbb
xor
fdivs
les
ds
hlt
rclb
dec
fists
adc
xor
lret
aad
push
cmp
pop
jl
sub
jo
dec
ficoml
popa
movsb
push
jno
inc
pop
mov
mov
xor
cwtl
ret
test
mov
xchg
movsl
popa
add
dec
mov
mov
xor
push
jno
inc
inc
imul
dec
add
mov
rcrb
sti
add
dec
cli
dec
leave
mov
into
xorb
sbb
stos
push
sbb
cmp
pushf
mov
dec
and
pop
ljmp
mov
incb
mov
push
insl
mul
or
adc
mov
mov
outsb
jo
xchg
and
ret
xchg
inc
out
int3
pop
mov
push
loop
sahf
pop
mov
test
roll
pop
mov
enter
sbb
fs
mov
rorl
jb
add
out
cmp
pop
lea
cmp
jmp
fdivl
cmp
push
arpl
out
scas
and
test
das
nop
inc
imul
xor
mov
clc
push
jge
jo
mov
call
dec
imulb
mov
in
ret
inc
addr16
cli
and
push
mov
pop
aaa
sbb
fadds
dec
pop
incb
adc
or
int
pop
push
mov
pop
fstpt
mov
mov
cltd
add
cmp
inc
sub
loop
je
xor
test
add
jp
rorb
out
addr16
push
jb
mov
xchg
neg
rcl
push
fcomps
mov
clc
lret
push
push
adc
mov
das
sub
sub
xchg
cmpsb
rcll
sahf
jb
outsl
dec
jne
push
mov
pop
lock
cmpsl
xor
xchg
cld
or
jge
cwtl
data16
gs
lret
sti
xlat
push
inc
sub
push
fcomp
and
notl
xlat
push
sbb
outsb
addr16
jecxz
and
or
lods
ret
leave
aas
xor
push
arpl
cmpsl
mov
jmp
test
out
cld
mov
cli
lods
fadds
cmp
clc
mov
aas
and
mov
inc
or
iret
lds
stc
out
insb
add
imul
mov
jo
mov
pop
test
dec
outsb
sub
and
imul
adc
mov
fidivs
adc
rolb
push
adc
data16
hlt
xchg
ds
inc
or
les
or
push
shll
scas
push
sub
out
mov
dec
pop
inc
lds
push
jno
hlt
sbb
add
pop
or
cltd
pushf
inc
or
adc
push
mov
mov
popa
call
sahf
push
dec
rcrl
in
xchg
cmp
scas
push
pop
cmc
stc
call
and
adc
enter
rep
nop
outsl
cmp
stos
inc
cmpsl
hlt
lock
test
xor
mov
pop
dec
jb
add
inc
std
jg
aas
test
data16
and
fldl
xor
in
loopne
push
inc
inc
xchg
xchg
mov
sbb
js
test
sbb
mov
add
je
ror
loop
in
adc
icebp
push
xchg
fnstcw
sub
add
dec
dec
es
lock
xor
jne
jecxz
ss
and
jae
jae
shr
xchg
es
mov
cmc
pop
fwait
xor
cmp
mov
jge
popf
mov
mov
pop
sbb
ret
movsl
rolb
movsb
cli
pop
mov
test
fcoms
sbb
sub
dec
cld
cltd
xchg
adc
mov
mov
push
xchg
adc
xchg
lods
repz
sub
sub
mov
inc
dec
bound
std
sub
mov
mov
push
insb
int3
orb
sbb
stos
push
outsl
cltd
or
lods
movl
iret
sub
sub
jle
adc
dec
xchg
mov
cli
adc
push
dec
shl
and
sbb
jl
push
jae
inc
pop
in
adc
or
cmc
push
repnz
xchg
push
xchg
sub
adc
scas
idivl
xchg
and
popl
imulb
dec
cmc
out
add
sub
call
das
cmp
add
es
pop
add
lahf
das
lock
pop
addr16
lahf
out
mov
xchg
mov
subb
shrl
pop
inc
dec
adc
insb
sahf
lret
push
lea
sub
loope
stc
ret
movsb
and
adc
popa
push
daa
xchg
lret
and
xchg
dec
sub
lret
mov
push
je
rcl
out
loope
addb
inc
mov
or
mov
test
scas
jae
jp
mov
and
pop
push
push
push
or
lret
outsb
xor
fildll
repz
adc
fbstp
leave
cmpsl
fcmovnb
inc
scas
out
adc
imul
cli
aad
outsb
repnz
inc
sub
movsl
out
xor
jge
test
ss
sbb
jle
jle
jnp
jmp
ljmp
mov
cmpsl
mov
jmp
or
insb
hlt
adc
add
and
je
outsb
inc
jmp
inc
mov
pop
mov
sbb
lret
push
test
push
xchg
ret
fdivl
js
cmc
push
adc
fisubrs
pop
iret
mov
leave
sub
imul
push
fistps
mov
call
or
mov
pushw
shll
mov
cmp
mov
pop
int3
mov
incb
in
lret
mov
cmp
test
std
sub
repz
jge
ljmp
pusha
aam
jno
rorl
jne
or
faddl
test
push
testb
sub
in
mov
iret
xor
movsb
fs
ljmp
pop
enter
adc
insb
add
fs
movsl
push
add
sub
aaa
lahf
int
sbb
test
popa
cmp
push
xchg
scas
jnp
xor
add
js
cltd
jle
jno
fldz
js
xchg
sbb
sahf
repnz
dec
cwtl
pop
mov
cmp
pop
mov
pop
mov
int3
dec
repnz
jns
pop
in
inc
mov
xchg
pop
xchg
dec
push
iret
xchg
push
mov
pop
add
mov
es
sahf
xchg
pop
cmp
sbb
cmpsb
out
stc
xchg
call
or
pushf
push
icebp
call
sbb
jo
lods
xor
outsb
inc
leave
lock
inc
outsb
and
aas
adc
cmpsl
lret
or
xchg
cmp
iret
bound
push
fldenv
inc
inc
add
or
leave
int3
ljmp
idivl
jp
push
adcb
add
cwtl
stc
test
inc
dec
cmp
dec
jne
inc
jnp
mov
xchg
ret
js
stc
scas
sti
push
sbb
jg
daa
mov
stos
inc
jns
enter
fwait
imul
inc
inc
insl
int3
jg
std
xchg
xchg
loope
pmullw
hlt
pop
pushf
push
xchg
add
xchg
movsl
add
jg
in
fst
das
dec
xor
outsb
xor
pop
sbb
inc
dec
es
cmpb
mov
lock
pop
aaa
and
idivb
int3
outsb
fsubrs
xchg
outsl
mov
push
jae
cmp
jns
mov
push
adc
enter
jl
inc
shlb
lea
loop
mov
outsl
out
out
icebp
jle
mov
arpl
dec
inc
sahf
je
pop
add
pop
daa
push
sub
push
jne
push
je
and
call
push
inc
xchg
mov
push
les
ljmp
mov
arpl
xor
repnz
xchg
sub
add
fstps
jmp
not
mov
outsl
nop
cmp
xchg
xor
push
push
rcll
mov
dec
xor
mov
cmp
mov
xchg
push
pop
stos
data16
cmpsb
repnz
ss
pop
insl
sbb
jmp
mov
in
out
sbb
xchg
rcrl
sti
push
outsl
or
mov
sbb
sbb
xor
ja
loope
bnd
setb
or
sbb
xchg
repnz
shrl
cs
push
nop
inc
mov
cmpb
inc
scas
dec
jae
stos
pop
cmc
jnp
jmp
and
out
mov
cmpsl
mov
fisubrl
cltd
dec
out
out
sub
cmp
push
sbbl
clc
jl
adc
ja
adc
inc
jne
stos
pop
das
jns
mov
dec
jo
mov
lea
xlat
scas
or
mov
cli
ss
jmp
loope
or
rolb
mov
add
add
lods
fildll
dec
or
ds
dec
aas
push
sti
outsl
sbb
push
or
fwait
dec
scas
xchg
and
mov
nop
testl
mov
add
inc
loopne
mov
mov
cmp
repnz
popa
fsubrs
mov
je
or
adc
cmp
test
cmp
xchg
cwtl
and
or
sbb
je
hlt
add
aas
jecxz
ja
and
mov
in
push
mov
or
je
adc
sbb
mov
jge
jno,pt
dec
sbb
dec
jb
jle
mov
push
jmp
lahf
shrl
adc
dec
in
mov
scas
js
or
mov
pop
add
movsl
lods
mov
aad
pop
imul
sti
andl
nop/reserved
loop
jl
test
dec
ljmp
scas
xchg
or
fdivl
pusha
dec
int3
xchg
sbb
and
push
sbb
aad
call
cmp
mov
jecxz
arpl
inc
lds
out
popa
or
mov
cmpsl
fwait
push
xchg
fidivrl
lret
enter
dec
pop
test
faddl
xchg
mov
xchg
in
xor
cwtl
jnp
mov
call
je
pushf
cs
lds
pushf
inc
sub
cwtl
push
shrb
lods
into
jne
pop
xor
jbe
push
xchg
mov
sbb
dec
lods
dec
fnstenv
addr16
cmp
call
push
dec
psrlq
icebp
or
in
gs
out
mov
mov
inc
test
fstpt
or
sbbb
mov
xlat
pop
in
out
loopne
pop
inc
jnp
lea
int
xchg
movsb
adc
rol
sub
push
cmp
adc
aad
pusha
mov
pop
cmpsb
cmp
movsb
mov
push
leave
paddw
mov
test
ds
xor
jp
inc
sub
push
enter
popa
adc
push
gs
jge
adc
in
clc
popa
xchg
jo
lods
fsubrs
inc
pop
rclb
fildl
dec
fisubl
push
cmp
dec
xchg
add
mov
inc
std
rol
stos
test
jbe
out
fbstp
cld
dec
xchg
loopne
xchg
cmpsb
leave
sub
mov
add
scas
push
xadd
and
fmulp
sbb
jg,pt
sbb
clc
fmul
mov
push
jb
sub
xchg
sbb
ljmp
rorl
xchg
stos
cmp
mov
inc
pop
push
stc
sarl
out
cltd
inc
push
mov
rorl
punpcklwd
cld
testl
push
mov
xchg
mov
insb
arpl
ja
dec
jb
daa
bound
ss
inc
or
outsb
mov
jp
push
mov
fistpll
pop
sbb
dec
sti
sub
int
sub
lods
cmp
mov
pop
sub
inc
mov
inc
cmpb
xor
xlat
and
xor
xchg
in
jb
pop
xor
ret
imul
aas
xchg
lret
cmpsl
adc
out
push
lea
xor
sahf
sub
pop
pop
in
pop
test
aad
and
pop
mov
mov
mov
push
cwtl
cltd
into
loopne
jecxz
xchg
mov
cld
cmp
shlb
cmp
out
add
icebp
icebp
add
or
inc
mov
add
js
call
in
or
in
mov
test
aad
mov
jnp
xchg
movsb
cmp
dec
pop
ja
dec
add
negb
lds
fwait
test
and
test
xor
loopne
scas
out
push
xor
xchg
bound
xlat
adc
movsl
xor
loopne
pop
pop
lcall
fiadds
pop
cwtl
jge
test
stos
and
jg
jns
fcomip
leave
inc
cmpsl
mov
fs
stos
icebp
sub
pop
or
jmp
sbb
mov
loope
ud0
mov
xchg
xchg
jmp
jnp
fdivl
enter
jo,pt
dec
nop
stos
dec
xor
enter
adc
popf
add
les
lea
stos
push
jmp
data16
mov
aam
stos
mov
fistps
js
sarl
xchg
inc
push
sub
or
add
outsl
and
movsb
sti
jns
loope
xor
mov
fcoml
int
jmp
shrl
loope
aam
xchg
imul
popa
std
push
or
and
mov
fisubl
stos
jbe
mov
mov
xchg
dec
std
js
pop
sti
ljmp
fcoml
cmpb
jmp
and
daa
mov
out
repnz
pop
rclb
fldt
push
pop
and
or
es
pop
mov
test
cld
adcb
jg
aas
loope
jnp
fcompl
sbb
pop
mov
in
icebp
add
mov
mov
ja
xchg
das
lcall
inc
mov
test
scas
dec
xorl
out
sub
dec
test
cmc
test
rcll
pop
ret
mov
push
cmp
sub
cmp
mov
lods
pop
aad
fisttpll
jbe
call
xor
and
xor
xor
cmpsl
outsb
jns
nop
sarb
movsb
xchg
in
insl
fsubrl
in
xchg
pop
loopne
xor
stos
idivl
cmpsl
loop
cvtps2pi
out
push
xor
loope
push
sbb
xor
jo
or
fldl
and
push
int3
and
dec
mov
adc
repnz
mov
ja
mov
sahf
inc
jae
adc
in
xchg
dec
jno
xchg
cwtl
xor
addb
push
sbb
ss
inc
mov
pop
stc
mulb
pop
shll
fstps
hlt
imul
scas
sbb
or
test
jecxz
fcomps
or
xor
xchg
mov
insl
data16
aam
stos
inc
fisubs
jnp
movsl
dec
testl
inc
xchg
add
dec
leave
repnz
outsb
push
dec
adc
adc
add
sbb
xchg
js
dec
cmp
movb
scas
loop
sti
mov
stos
ljmp
pop
add
imul
das
pop
xchg
rcll
ret
xchg
sub
mov
cmp
test
pop
pop
sub
xlat
ljmp
xchg
dec
lds
inc
stc
cmp
cmp
in
pop
push
icebp
adc
into
mov
and
cmp
adcl
push
iret
xor
mov
push
cmp
aaa
inc
aam
cmpl
mov
loope
xor
mov
fildl
xlat
mov
mov
lret
pusha
mov
mov
pusha
cltd
lods
jg
xor
fmuls
aam
outsl
sub
jp
adc
orl
inc
pushf
orb
in
and
les
fld
pop
lods
mov
push
xchg
mov
shlb
add
fbld
mov
jge
add
pop
jo
xchg
xor
das
mov
xchg
es
or
mov
test
push
xlat
mov
inc
or
jmp
push
dec
fisttps
mov
push
sub
mov
xor
inc
test
sbb
pop
push
inc
repnz
inc
jno
push
stc
test
stos
shlb
push
dec
push
call
sub
mov
lods
xor
sub
xchg
sbb
dec
mov
push
xchg
out
ja
push
sub
inc
add
pop
int3
add
xchg
push
lock
cld
dec
inc
rorl
ss
jmp
jmp
jbe
arpl
or
mov
xchg
inc
scas
mov
jb
mov
addr16
push
push
push
negb
outsl
pop
cmp
inc
jp
outsb
call
mov
stos
adc
out
std
cmpsb
push
test
inc
data16
jns
mov
xchg
and
ds
fildl
fmuls
mov
lret
and
sbb
mov
jecxz
xchg
jl
cmpsl
add
in
repz
stos
pop
or
jb
and
cwtl
loop
rol
push
pop
iret
in
mov
loope
repnz
in
lock
in
or
mov
pop
and
ja
sbb
xchg
sub
dec
inc
mov
push
push
cmp
sub
out
cmc
loope
jg
ret
cltd
je
inc
lds
stos
lret
inc
or
fisttpll
test
test
rcrl
push
push
sbb
es
int3
lret
ss
adc
ficomps
sarl
shll
aam
test
or
xchg
pop
in
popf
pop
nop
mov
mov
cmp
inc
mov
or
mov
fwait
pop
cmc
pusha
inc
rorb
popa
out
in
stc
and
cltd
adcb
add
mov
dec
test
mov
xor
xor
mov
fdivs
in
push
loope
xchg
lds
test
cmp
jns
sub
aas
and
adc
test
and
mov
mov
flds
sbb
xor
frstor
flds
notb
in
popf
dec
pop
cmp
and
add
mov
jae
dec
hlt
xor
cmp
cmp
shlb
out
inc
test
nop
ds
xchg
mov
ljmp
and
testl
pop
cltd
xlat
aad
test
sbb
inc
and
cmp
cmp
push
adc
pusha
movsl
mov
xor
fldcw
dec
sub
xchg
mov
sbb
pop
mov
repz
mov
out
inc
into
enter
ja
pusha
and
popf
cwtl
sar
sbb
jmp
cli
mov
xchg
pop
adc
mov
dec
mov
daa
mov
or
movsl
aam
fs
loop
sbb
inc
movsb
cmp
inc
or
idivb
inc
or
pop
popa
and
xor
cld
mov
jae
mov
cs
roll
fcmovnb
lcall
mov
lods
and
push
mov
in
pop
outsb
ljmp
outsl
outsb
sbb
xor
sbb
cli
sub
mov
prefetch
into
cmp
shll
out
je
push
xor
sbb
add
or
loope
mov
int
jg
notl
scas
dec
cmp
sub
inc
popa
negl
jne
popa
out
jno
mov
movsb
pop
lods
rorl
mov
sahf
mov
mov
jns
insl
dec
test
into
dec
sti
xor
popa
out
xor
push
fistpl
mov
mov
lds
xor
mov
mov
xor
cmpsl
jnp
mov
inc
lcallw
sub
in
add
push
xchg
and
lret
dec
roll
bound
add
inc
inc
rcrb
loopne
and
jle
sti
jge
scas
fs
mov
sti
sahf
pop
fsubl
sub
dec
icebp
cmp
sbb
pop
jbe
sbb
pushf
loopne
and
mov
outsl
mov
fs
adc
out
cmpsb
fldenv
pusha
fwait
or
jge
ficomps
xor
pop
sbb
cmp
int
jmp
ds
in
imul
inc
sub
mov
shlb
inc
and
xchg
pusha
xlat
orb
jg
pop
xchg
das
pop
or
popf
lcall
movsl
out
movsl
mov
lods
add
sub
sbb
int
ficoml
adc
imul
dec
mov
pushf
push
in
push
clc
out
mov
cmpsl
test
pop
fdivrs
sti
js
mov
sysexit
sarb
sbb
add
pusha
mov
push
fdivrl
outsl
stos
mov
mov
jo
mov
sub
xchg
mov
push
lret
push
push
dec
pop
fs
jg
sbb
je
xor
enter
xor
add
mov
test
mov
lret
sti
mov
andl
cmp
fcoms
mov
push
dec
add
pop
jecxz
imul
ja
iret
push
clc
ja
mov
rorb
xor
lock
mov
inc
bnd
iret
test
pop
stos
bound
in
or
movsb
dec
mov
rorl
or
insl
xchg
jp
stos
cmpsb
hlt
xor
cmovbe
ret
pop
lea
shll
int
mov
in
orb
call
mov
cld
je
sbb
pop
dec
sbb
mov
inc
scas
flds
and
movsb
inc
dec
or
sub
xchg
filds
ljmp
out
jnp
sti
inc
mov
add
inc
fnsave
mov
mov
das
jmp
mull
iret
repnz
pushf
add
push
or
mov
xlat
test
xor
add
push
and
cltd
in
add
fidivl
xlat
leave
test
data16
sbb
and
jl
xor
js
rclb
pop
sarb
xchg
xor
rclb
jns
xchg
jg
or
mov
aas
lret
jb
mov
xchg
xor
dec
out
sbb
sub
add
pop
sbbl
xchg
test
cwtl
push
mov
mov
push
into
fdivr
mov
xchg
rcr
leave
pop
adc
xor
mov
scas
out
or
sbb
hlt
lret
lcall
jg
hlt
jmp
inc
cltd
sub
jbe,pn
mov
testl
repnz
clc
inc
shll
cmp
outsb
popa
push
outsl
or
mov
pop
daa
inc
shlb
insb
jnp
leave
push
jae
cmp
and
jbe
pop
pop
add
rcrb
mov
xchg
das
ror
cld
pop
je
out
mov
push
loop
clc
sti
push
adc
cmpsb
sub
cmp
dec
nop
dec
inc
int3
mov
jecxz
add
push
insl
ss
loopne
push
cmp
andb
movsl
jp
cmp
cltd
out
jecxz
xchg
pop
cmp
inc
mov
jmp
pop
mov
mov
test
ja
xchg
js
pop
aaa
add
mov
leave
pop
int
or
dec
and
mov
mov
xor
int
out
enter
and
ret
inc
data16
ret
mov
arpl
test
cltd
xchg
mov
shlb
cmpsb
push
sub
fidivrs
fwait
mov
sar
jl
lds
add
movl
sahf
in
mov
cmp
and
movsb
dec
popa
cmpsb
xor
adc
xchg
movsl
test
jl
ss
fidivl
data16
cmpsl
stos
xor
xchg
mov
push
loopne
pushf
and
and
add
inc
out
pusha
jbe
or
out
jnp
add
adc
pop
and
mov
mov
test
sahf
test
dec
inc
out
mov
inc
in
push
sbb
xchg
insb
arpl
nop
ror
jns
and
cld
roll
cmp
cwtl
adc
inc
dec
xchg
fdiv
cmp
inc
sub
mov
out
ds
add
lret
jb
imulb
sbb
pushf
sub
add
call
int
adc
pop
dec
xchg
ds
sub
lods
or
les
lahf
stos
int3
test
dec
lods
or
mov
xchg
push
addb
sbb
jge
mov
or
mov
pop
imul
pop
ss
jmp
aam
inc
push
mov
or
lahf
pop
and
add
mov
or
or
mov
dec
shrl
push
rolb
test
cltd
int
fcmovnbe
in
cmp
clc
cmc
fcomi
adc
mov
mov
adc
jne
jge
sbb
nop
das
mov
into
jnp
cmp
dec
repnz
fidivs
lods
pop
push
stos
data16
or
test
mov
into
lahf
out
mov
ja
cmp
mov
rolb
cmp
clc
dec
cmp
lea
aam
call
sub
daa
sti
cld
pop
add
cmp
shlb
insl
sub
jb
pop
mov
into
jbe
stos
aam
daa
push
lods
andl
testl
xchg
loope
jne
imul
jg
dec
jae
cmp
pop
sub
nop
fcompl
jne
mov
add
sbb
es
fincstp
shlb
push
loop
lret
sbb
cli
lock
ficompl
inc
sub
pop
fiadds
jo
loop
lods
xor
lahf
pop
mov
out
mov
push
icebp
inc
add
mov
fs
cli
fcompl
popa
testb
test
cmp
cmp
mov
stc
or
inc
mov
or
inc
dec
push
adc
push
pop
jecxz
inc
push
js
pop
xor
sbb
mov
sub
sbb
movhps
cmpsb
mov
in
xor
xchg
pushf
test
dec
lret
dec
or
mov
xor
aad
iret
loopne
mov
inc
mov
cmp
adc
stc
dec
mov
pop
rorb
ds
shrl
out
les
scas
adc
xor
push
mov
sbb
loope
popf
and
outsb
jle
in
jns
push
sahf
cmp
or
mov
test
jae
mov
lret
leave
pop
adc
in
jl
frstpm(287
shlb
push
push
xor
loope
mov
mov
sti
mov
enter
and
aam
push
and
bound
and
inc
dec
push
xlat
in
mov
and
pop
mov
dec
push
lock
jp
decb
sbb
out
lret
cltd
sub
stos
pop
inc
aad
add
fs
push
xor
cmc
outsl
add
push
jno
cs
jo
add
das
into
dec
cs
iret
jns
std
std
sub
inc
mov
or
jmp
loope
adc
cmp
jae
int
gs
sbbl
rcrl
or
pop
stos
sbb
pop
sub
lods
fdivl
bound
loope
push
jmp
ret
test
sub
imul
orb
into
xchg
mov
adc
xor
cli
nop
pop
push
int
jmp
sbb
cld
pop
inc
jb
cmp
aam
pop
add
nop
stc
inc
faddp
in
popf
push
jg
push
xor
mov
xor
cmp
loope
sub
lret
mov
clc
sbb
inc
nop
pop
cmp
loope
xchg
jp
jbe,pn
ret
adc
dec
daa
test
mov
sub
push
je
movsb
imul
sbb
adc
mov
jecxz
test
sub
sub
xchg
adc
mov
sbb
pushf
jecxz
outsl
push
dec
jp
sahf
jl
add
jnp
mov
pop
ror
pop
xor
fiadds
rol
sub
loop
cltd
adc
push
faddl
jno
xchg
fdivrs
jne
ja
mov
jle
push
xor
xor
gs
out
pop
lds
or
mov
adc
xchg
je
lea
push
movsb
shl
xor
ds
mov
aam
icebp
sti
fsubr
jmp
mov
mov
cld
stc
and
push
test
andnpd
test
lods
daa
sub
fmul
lcall
flds
mov
sub
jb
negb
addr16
adc
lcall
push
add
jg
sarb
pop
inc
enter
rorb
xor
sti
insb
inc
sti
jl
dec
loopne
add
mov
pusha
mov
or
dec
mov
fimuls
addr16
int
adcb
adcb
ret
push
mov
test
les
int
mov
pop
jno
fwait
push
int
jns
push
pushl
lods
add
gs
xchg
inc
mov
xchg
ljmp
or
pop
cmpsb
cmpsl
pop
mov
addr16
cmp
mov
out
mov
add
idiv
mov
jecxz
push
or
or
pusha
cld
mov
sub
leave
leave
les
fsubl
sbb
int3
jg
pop
ja
hlt
push
fldl
data16
ss
mov
dec
jl
addl
fmuls
xor
mov
addb
cmp
and
inc
test
mov
loop
ja
mov
subb
push
mov
and
les
push
popf
stc
ss
sahf
push
mov
sbb
push
out
lahf
aas
stos
mov
push
dec
pmaddwd
cmp
mov
ds
insb
insl
jae
scas
ss
and
pop
inc
push
popf
filds
jl
lea
out
xchg
andl
adc
mov
xor
in
xchg
xchg
dec
daa
adc
int
pop
icebp
sub
pop
push
repz
mov
ja
push
mov
enter
xor
cltd
mov
push
inc
mov
mov
xor
shll
xchg
pop
jne
rcll
out
out
or
push
xchg
pop
clc
fdivl
enter
mov
cwtl
pop
out
pop
inc
and
adc
mov
fld
iret
aas
imul
jge
push
mov
jbe
mov
stos
arpl
add
daa
pop
sub
add
nop
or
sbb
popf
dec
mov
xchg
in
cmp
sti
in
push
call
adc
iret
xor
lret
add
imul
js
arpl
jno
aam
cmovns
sbb
outsl
ss
loopne
loopne
int3
filds
xchg
push
mov
mov
mov
mov
hlt
push
cmp
and
xrelease
and
push
mov
xlat
mov
mov
mov
lahf
or
leave
lret
aas
mov
push
lds
and
fsubs
aad
test
jl
jne,pt
xchg
xchg
sti
mov
movsl
aad
push
mov
inc
pop
fldt
cmp
adc
pop
int
es
clc
sub
ljmp
push
dec
pop
sete
cmp
stos
push
push
adc
sub
add
int3
stc
pop
enter
jecxz
xor
rol
push
fcmove
xor
iret
fisttps
and
in
mov
int3
jle
adc
jmp
xor
rcr
mov
bnd
jge
inc
aas
es
es
mov
adc
add
xchg
mov
ret
shr
repz
lret
mov
insb
xchg
add
les
mov
mulb
arpl
mov
pusha
fiaddl
lahf
adc
pop
movsl
fdivrs
pop
int
insl
rorl
ja
loop
xor
cltd
xchg
in
enter
adc
mov
stos
iret
mov
hlt
rorb
test
adc
sar
pop
ss
pop
lahf
adc
jne
mov
je
sbbb
cmc
in
xchg
xchg
mov
lods
in
addl
inc
mov
sbb
fistpl
mov
cmc
shlb
cmp
repz
hlt
mov
or
xchg
jle
ds
pushf
pusha
or
xchg
xchg
xor
popa
popa
mov
sbb
repz
mov
fs
mov
stc
out
ss
inc
and
add
sbb
sbbl
in
jge
xor
jecxz
push
lods
cmp
xchg
test
cmpsb
adc
mov
enter
push
shrl
sti
fmuls
rol
pushf
daa
inc
adc
loopne
jle
enter
sub
rcl
in
cmp
movsb
dec
bound
pusha
lea
fnstcw
lods
jb
imul
outsb
mov
lds
loopne
add
sub
imul
xor
aam
fcoml
mov
pop
fcompl
je
out
xchg
mov
push
icebp
dec
scas
pusha
aas
test
adc
push
lahf
jp
dec
test
mov
add
jmp
inc
dec
push
mov
js
jae
loopne
adc
ret
push
ret
xor
or
cli
ss
adc
shr
push
cmp
push
shl
insb
out
push
icebp
sbb
lahf
or
incb
mov
push
fstl
fidivrs
mov
vmread
dec
sbb
aas
sub
xor
push
lcall
jno
insb
scas
insl
pop
add
or
fwait
lods
add
xchg
push
cld
pop
popf
xor
inc
fldenv
sbb
add
inc
add
call
adc
pop
xor
popa
lds
insl
jle
aaa
push
add
push
sbb
aas
sahf
jmp
stos
popf
or
lcall
push
jp
push
imul
push
cmp
notb
add
add
repnz
add
sbb
xor
sbb
mov
jb
cltd
leave
movsl
test
shl
cmp
xchg
and
shl
mov
xchg
mov
sbb
repz
dec
out
inc
cmp
xchg
int3
loope
pop
dec
scas
xchg
jnp
sub
hlt
mov
jno
push
inc
movb
dec
cltd
fwait
add
dec
xchg
into
clc
aaa
into
in
xor
adc
inc
test
fsubs
cmpsb
pop
xchg
insl
in
inc
pop
sbb
mov
daa
and
and
inc
mov
cmp
sbb
push
loopne
sub
mov
orb
xorb
sti
xchg
iret
cmc
popa
or
fdivrl
sbb
dec
les
dec
stos
mov
or
cmp
jno
add
test
sbb
fldenv
test
aam
sti
stos
mov
lahf
mov
mov
out
fistl
xchg
xchg
cmp
mov
cmp
movsl
push
jg
jl
xchg
nop
rolb
jmp
scas
lret
pop
loop
and
cmp
cli
ja
aaa
or
fsubr
or
mov
aaa
sub
out
and
ds
add
fimuls
jnp
imul
lock
sub
int
xchg
xlat
in
cld
fisttps
es
mov
xor
int3
fdivl
mov
imul
dec
bound
adc
sahf
bswap
and
push
and
xchg
jecxz
scas
xchg
dec
aam
dec
xor
push
xor
xor
pop
ret
jae
bound
call
sbb
mov
xor
repnz
mov
lcall
aad
aam
add
jns
push
arpl
fidivrl
sbb
notb
cmpsl
outsl
mov
test
pop
outsb
dec
push
out
push
xor
jmp
in
dec
loope
movsl
jb
mov
xor
mov
fmulp
mov
loope
rorb
mov
scas
jno
push
cmp
jb
jl
jmp
or
sub
pop
out
call
inc
lds
mov
xchg
pop
pop
jp
inc
and
mov
adc
xor
aaa
add
cmp
movsb
mov
jmp
clc
dec
mov
lahf
pop
sub
mov
add
out
inc
xchg
lods
stc
cmpsb
xchg
push
xor
aaa
in
inc
fdivs
cmpl
int
and
adc
jae
jge
push
test
mov
xchg
cs
xchg
out
lods
fwait
bound
test
inc
dec
mov
pop
repz
lahf
pop
ret
jge
ret
jb
push
cmpsb
or
stc
xchg
xor
mov
cmc
or
push
jo
or
pop
popa
js
iret
out
fstl
or
lods
test
out
mov
test
loope
dec
das
movsb
clc
mov
nop
mov
push
jb
jae
jg
or
mov
xchg
in
xchg
popfw
lahf
out
pushf
pop
aad
push
and
repz
dec
mov
hlt
xor
xchg
adc
sar
ljmp
das
ds
pop
sub
adc
lcall
pop
or
inc
push
ret
fiadds
addr16
sbb
shll
mov
les
std
add
aas
loope
add
aas
lcall
shrb
repnz
lahf
jb
mov
xor
xchg
mov
push
pop
xchg
lods
sub
mov
mov
fldenv
inc
push
out
gs
fcoms
in
adc
ja
sbb
jle
xor
pushf
nop
jbe
pushf
inc
or
in
mov
in
rcrl
jp
shll
rcr
sbb
fisubrl
dec
inc
xor
clc
xchg
aas
sub
pop
xlat
or
adc
bound
pushf
inc
add
imul
jg
xchg
push
or
rcl
inc
mov
pop
out
std
test
stos
pop
or
add
mov
fstps
pop
adc
shlb
sub
mov
inc
lods
pop
sub
fists
in
aaa
lret
jne
pop
iret
shl
stc
jne
adc
xchg
test
and
and
sub
insl
insb
lret
ror
and
loop
addr16
mov
mov
stc
shl
mov
xchg
out
cli
lcall
fidivrl
lcall
mov
mov
and
les
pushf
push
and
lret
mov
data16
repnz
scas
test
mov
lds
ret
mov
rcrb
lret
xlat
or
repnz
repnz
mov
mov
inc
fdivrs
mov
and
jle
and
insb
push
mov
adc
jp
out
and
cmpsb
out
ret
lds
jl
inc
mov
push
in
cmpsl
mov
ja
addr16
enter
mov
rcll
icebp
inc
call
push
xor
outsb
sbb
bound
sbb
outsl
js
ss
out
inc
sahf
push
insl
into
rorb
lock
test
cmp
cwtl
jne
aad
or
std
fimuls
stos
sub
fisubrl
pop
into
pop
push
or
cmc
popa
ret
push
push
in
or
lods
in
outsl
mov
jno
jg
lret
mov
cld
xchg
or
nop
mov
imul
mov
test
sub
ss
insb
cmc
adc
mov
mov
ss
push
ja
orb
in
mov
stos
push
lods
movsl
in
jge
mov
jbe
mov
mov
loop
aam
mov
mov
lret
xor
dec
sbb
xchg
mov
xorb
cmpsl
test
push
mov
cmp
inc
cmp
ljmp
fistpl
adc
jne
out
add
pusha
fucomi
dec
sbb
sbb
sub
inc
jg
movsb
ffreep
inc
repnz
stc
popa
pop
in
lods
mov
arpl
xchg
imul
cmp
cmp
data16
in
push
dec
mov
int
aaa
xor
mov
pop
inc
xor
mov
je
mov
and
out
xchg
mov
les
sub
cmpsl
inc
adc
jmp
out
xchg
sbb
mov
or
int3
movb
mov
lock
push
push
jbe
sarl
mov
scas
inc
shll
push
add
jp
mov
jo
icebp
lock
mov
fidivs
inc
addr16
xchg
fs
mov
stc
aas
xorb
das
jg
ret
mov
in
cmp
xor
aaa
add
sbb
sti
inc
lock
mov
or
and
add
xor
cmpsl
dec
push
adc
testl
dec
das
jo
dec
push
cld
jle
out
and
pop
ss
dec
popf
sbb
pop
and
push
sbb
shrb
sub
mov
int3
xchg
add
fst
xchg
cmp
aaa
lods
mov
xchg
rcll
sbb
int3
push
les
sub
adc
mov
jp
in
lds
and
out
out
mov
jg
and
aad
jb
cmpsb
adc
jb
arpl
pop
jecxz
add
ds
mov
push
stc
xchg
jbe
add
or
cmp
push
mov
sbb
xor
mov
lahf
xorl
bound
adc
pop
test
movsb
xchg
push
mov
scas
or
test
int
cmp
dec
scas
lods
mov
xchg
and
out
jmp
xor
push
xchg
aas
shll
jnp
cmp
loopne
xor
dec
cmc
and
mov
mov
dec
and
adc
rcll
mov
leave
in
add
lahf
pop
pop
in
icebp
add
or
inc
in
inc
mov
adc
lret
jns
jle
push
ficomps
mov
loope
pop
arpl
lock
dec
mov
pop
xchg
pop
or
daa
sbb
jp
scas
mov
fldt
pop
push
dec
mov
adc
out
push
sub
cmpsb
inc
add
dec
sbb
mov
loope
mov
inc
dec
call
push
out
pop
fdivrs
jmp
mov
fistl
in
and
lcall
pop
and
aas
add
test
dec
testb
nop
xor
mov
sub
inc
mov
mov
mov
nop
dec
and
out
fwait
daa
pop
mov
stos
insl
mov
and
test
inc
sbb
or
pop
ss
and
cmc
mov
or
sbb
jnp
repz
xor
and
das
out
adc
fbld
inc
leave
imul
loope
loope
push
aas
iret
fucomip
mov
sub
pop
mov
xor
pop
mov
sbb
and
filds
inc
ja
arpl
add
pusha
or
xor
es
cld
lcall
popa
mov
jnp
jbe
push
pop
out
inc
xor
mov
inc
inc
inc
jmp
or
es
push
je
sti
jg
imul
mov
mov
jne
and
je
sbb
push
sbb
inc
xchg
inc
inc
jl
js
jmp
or
add
scas
mov
sub
adc
cmp
xchg
mov
xor
in
xchg
rcrl
mov
jl
sub
lods
jmp
mov
dec
mov
adc
jne
inc
jbe
faddp
insb
pop
jo
and
jne
and
sbb
imul
pop
out
mov
jl
mov
shl
adc
cmpsl
sbbl
jecxz
lret
xchg
adc
arpl
xor
lock
and
shlb
pop
inc
stc
addr16
aaa
mov
adc
pop
loop
imul
jns
int3
xchg
aam
sbb
ret
xchg
xor
pop
arpl
sub
fisttpl
fmuls
inc
popf
mov
pop
inc
mov
jl
xchg
jl
lock
xorb
xchg
sbb
lcall
xor
mov
sbb
jmp
xchg
js
icebp
ds
aad
sti
sub
repnz
jmp
sti
jmp
dec
insl
mov
mov
add
cmpsb
std
arpl
xchg
sti
test
push
dec
lret
mov
add
hlt
sahf
sti
mov
sbb
decl
mov
test
mov
push
xor
daa
into
sbb
cmp
ds
mov
fwait
mov
jns
rclb
mov
out
movsl
cmp
pop
repz
lcall
jns
jbe
fwait
sbb
xchg
movsb
les
sub
ror
pop
dec
inc
paddd
or
pop
fidivl
movsb
insl
aaa
dec
pop
movsl
je
ja
dec
andb
sub
xchg
fcompl
mov
sub
and
mov
jne
add
sub
faddl
movsb
pusha
cmp
mov
jae
jl
mov
xchg
iret
test
outsb
jb
jo,pn
scas
shl
sti
stos
mov
pop
mov
xchg
lfs
sbb
mov
fldenv
xor
mov
lods
imul
ss
or
ljmp
jae
scas
dec
into
bound
fstl
push
call
ljmp
icebp
dec
xchg
and
xchg
push
jge
fwait
mov
mov
mov
sub
jae,pt
xor
cmp
inc
aas
push
enter
outsl
shlb
pusha
dec
xchg
pop
xchg
ljmp
repnz
fisubrl
inc
loop
in
fisubl
or
fstl
mov
and
in
and
xor
int
push
pop
loop
out
mov
popf
jns
xchg
mov
daa
jbe
ficompl
mov
lock
out
popf
cmp
mov
aas
shrl
jl
push
cmp
mov
lcall
lock
cmp
repz
xchg
ret
inc
xchg
xchg
jle
arpl
flds
mov
mov
pop
inc
aaa
dec
mov
movsl
enter
ja
mov
jecxz
push
push
out
mov
pop
sub
jo
es
xchg
mov
jl
repnz
pop
cmp
pop
jmp
int
xlat
sbb
xchg
mov
pop
flds
ljmp
dec
jl
pop
lcall
push
xor
imul
push
fiadds
stos
pusha
pop
mov
pop
lcall
xor
cmc
lods
dec
jl
inc
hlt
pusha
std
adc
adc
mov
xor
scas
cli
stos
loopne
pop
inc
mov
jmp
sub
push
xchg
mov
repz
push
fs
gs
jae
out
xlat
imul
xchg
push
jmp
ret
scas
xchg
rcrb
mov
or
mov
scas
loop
loopne
leave
loop
arpl
pop
aaa
clc
mov
cwtl
mov
add
iret
out
pushf
mov
cmp
rcrl
cmpsl
mov
sub
sbb
ret
jb
xchg
push
mov
jne
test
arpl
in
stc
cmp
mov
outsl
loopne
dec
data16
sahf
sub
jne
in
push
out
adc
es
pop
int3
mov
pop
pop
clc
fldenv
mov
dec
leave
add
rcr
xor
push
pop
mov
add
push
and
inc
stos
dec
aam
idivb
subb
xchg
pop
inc
bound
in
subl
xchg
call
dec
add
mov
jecxz
and
test
pop
xchg
mov
inc
loope
test
xor
or
lea
bound
in
arpl
hlt
ljmp
cs
lea
lcall
inc
scas
cwtl
add
mov
ja
push
insl
push
cmp
fmul
and
fimuls
data16
mov
inc
sbb
mov
sarb
sbb
out
xchg
pop
push
iret
xchg
stos
fbstp
mov
push
mov
sbb
clc
sbb
mov
jl
and
imulb
in
adc
cmp
imul
cmp
add
jb
cmp
jae
mov
fdivrl
mov
xchg
cmp
testb
cmp
mov
loope
dec
fwait
rol
dec
fimull
shrl
imul
es
ds
pop
lods
mov
sub
push
mov
test
push
lds
imul
xchg
shl
push
div
jne
mov
mov
mov
and
test
pop
and
bnd
adc
add
or
jmp
in
mov
push
jbe
dec
xor
push
mov
cmpl
adc
out
ret
loop
cmp
mov
mov
push
mov
pop
adcl
push
mov
add
shrb
pop
nopl
addr16
fbld
jo
fmull
js
imul
mov
loope
stc
pop
pop
out
sub
aas
inc
cmp
jae
mov
cwtl
sbb
dec
jmp
jp
add
mov
push
mov
adc
push
loopne
jae
dec
cs
cmp
data16
pop
cmc
aas
arpl
jge
stos
iret
movsl
addr16
xchg
mov
into
or
shr
in
pusha
inc
add
lods
add
mov
inc
mov
loop
and
aas
sub
sbb
mov
jnp
aad
mov
add
adc
add
cmp
add
arpl
mov
xchg
rcl
xchg
enter
mov
sbb
mov
in
mov
das
pop
push
xor
mov
mov
jae
add
mov
pop
pop
xor
int3
in
push
or
ja
push
rcl
data16
imul
pop
mov
stos
jle
push
imul
xchg
jns
xor
or
pop
daa
ficoml
push
test
jo
jle
mov
xor
push
cltd
or
mov
sbb
popw
mulb
cli
and
or
lods
cmp
adc
rcrl
mov
in
out
pop
inc
ja
lahf
std
xor
pop
add
mov
jle
iret
insb
jne
dec
sbb
or
cwtl
std
ret
test
pusha
cs
pop
popf
xor
iret
mov
popf
inc
mov
xchg
pop
push
sub
cmpsb
jns
adc
cwtl
sti
or
adc
mov
fisttpl
sti
adc
pop
mov
imul
and
test
lea
push
mov
pop
jecxz
xchg
inc
or
mov
mov
mov
mov
loope
jbe
daa
pop
push
jb
cwtl
cltd
pop
xchg
mov
sub
movsl
xchg
jnp
scas
test
or
in
add
pop
inc
mov
sub
sub
or
jge
out
pushf
xchg
clc
test
out
subl
repz
jecxz
or
lret
mov
jno
insb
call
sbb
jns
aas
ss
push
shr
insb
dec
aas
jbe
iret
jecxz
popa
mov
dec
in
lods
outsl
cltd
jae
ret
jg
testl
out
or
or
cmp
sbb
test
adc
andl
xchg
dec
flds
mov
push
push
add
jecxz
enter
adc
sub
dec
cs
int3
sti
cmp
dec
adc
cmp
es
xor
rolb
in
adc
bnd
out
push
je
imul
xor
sbbl
js
push
pop
test
jns
cltd
inc
xor
ret
rcll
sbb
xchg
xchg
inc
sarb
adc
imul
imul
sub
fidivrl
js
les
and
sbb
push
je
in
aas
xor
cmp
xchg
rolb
inc
cwtl
pop
or
gs
dec
jge
fistpl
dec
add
mov
gs
xchg
mov
lcallw
mov
dec
fistpll
sub
sbb
inc
cmp
sub
push
mov
fsub
or
add
add
xchg
jnp
push
fldl
cmpsl
movl
mov
pop
sti
xor
vpsubq
pop
cli
push
ret
push
mov
insl
pop
jne
sbb
xchg
push
jge
mov
adc
in
cmp
leave
imul
sub
and
lcall
jnp
sub
pop
outsl
xlat
or
mov
or
mov
xchg
aam
jnp
fcompl
out
outsl
lcall
lret
stos
fsubrl
imul
daa
insb
pop
scas
fwait
cmpsb
into
jno
std
jb
lods
cmp
jb
hlt
insb
inc
fistpl
loope
mov
push
cli
cld
and
mov
push
add
add
or
sarl
fbld
in
mov
pop
clc
xchg
adc
test
js
into
adc
pop
pop
ja
fdivs
lea
mov
arpl
leave
fmulp
mov
add
inc
jmp
adc
pop
fldt
inc
popa
in
inc
sahf
push
jns
cmpsl
adc
push
lea
mov
cmp
dec
add
std
inc
pop
mov
and
and
aam
jnp
xor
test
xchg
jg
and
dec
sbb
xor
insb
add
scas
fnstcw
rcrl
push
cltd
sbb
fs
negb
xlat
add
aas
mov
imul
push
mov
lcall
push
std
fldt
and
add
lret
cli
insb
call
jecxz
iret
push
fdivs
pop
xchg
ja
subb
jns
scas
test
xchg
xchg
sub
xchg
pop
out
sbb
mov
cmpsb
pop
dec
add
sub
das
addl
or
arpl
add
jbe
add
adc
pop
mov
push
xchg
and
shlb
arpl
test
sbb
mov
je
jno
test
jg
add
xorb
sar
sub
xchg
mov
sub
dec
mov
outsb
ret
ja
inc
lret
push
push
lret
pusha
jnp
testb
je
cmc
lret
sbb
fldcw
test
cmp
pop
outsb
cmp
int
sub
add
mov
pop
rolb
pop
xchg
ret
test
push
jne
out
sbb
jo
clc
adc
jae
cmpsl
inc
in
mov
leave
rolb
test
enter
fldcw
in
push
pop
sbb
or
mov
dec
lahf
xchg
hlt
js
mull
push
cmp
xchg
mov
lret
mov
fldl
jb
push
sub
or
adc
mov
xor
sbb
inc
adc
outsb
xor
adc
dec
adc
mov
iret
sbb
add
aam
test
loop
in
mov
xchg
sbbb
mov
lret
lret
jg
sub
inc
dec
imul
bswap
outsb
daa
movsb
cmp
jb
xchg
out
cmp
aad
cmp
cmpsl
jle
sub
daa
popl
dec
fadd
adc
mov
jmp
clc
mov
cmc
icebp
pop
and
mov
add
jne
cltd
push
push
repz
cmovbe
cltd
cmp
push
dec
cmpsb
pusha
jmp
jne
hlt
dec
stos
fs
adc
dec
inc
aaa
icebp
dec
dec
fdivrl
repz
jo
mov
lahf
pop
movsb
data16
outsl
stos
mov
mov
mov
jecxz
push
std
bound
mov
sbb
inc
sub
cmp
xor
repz
jae
or
pop
adc
sarb
or
mov
pushf
movsl
lds
pop
sub
mov
ja
adc
xchg
dec
adc
sahf
mov
insl
aas
fsubr
mov
mov
sbb
filds
sbb
sahf
add
dec
inc
inc
inc
aaa
adc
xor
aas
jne
mov
push
sbb
clc
popa
pop
andl
enter
testb
adc
jo
rcrb
and
mov
loop
cmp
inc
outsl
sbb
test
mov
addr16
jbe
addr16
add
test
scas
xlat
popf
aad
cmp
shlb
mov
mov
pop
dec
inc
mov
fisttpl
out
imul
jns
jecxz
ja
frstor
adc
inc
cmpsb
ss
fwait
dec
adc
test
mov
fcmovnb
cmp
cmp
mov
ljmp
xchg
cld
call
dec
and
sub
mov
fldenv
aas
push
and
mov
xor
aas
ror
cli
jg
adc
pop
hlt
mov
int3
loop
ret
push
out
pause
push
push
scas
and
fdivrs
xchg
inc
jle
lods
leave
hlt
mov
je
jne
jmp
aas
aaa
sbb
pop
add
aad
aam
xor
imul
roll
fildl
pusha
stos
loope
sahf
int
stc
lcall
bound
dec
add
std
pop
and
push
pop
cwtl
push
mov
daa
fs
sub
imul
inc
mov
lahf
stos
inc
xor
leave
mov
loop
mov
lds
enter
int
daa
xlat
faddp
imul
orb
inc
ds
cld
incl
add
insb
in
std
std
mov
pusha
push
mov
pusha
pop
pop
ds
shl
fsub
sub
mov
mov
mov
add
mov
or
sbb
in
dec
sub
and
dec
inc
loop
xchg
pop
lret
adc
ja
mov
dec
iret
mov
arpl
mov
shl
notl
sbb
sahf
adc
or
mov
loope
sbb
ljmp
and
push
dec
pop
mov
mov
jb
mov
stc
and
loope
je
and
sbb
fisttpl
movsl
je
out
fdivl
mov
iret
mov
clc
outsl
push
fnstsw
pop
cmpb
icebp
cmc
fldenv
pop
and
jl
sub
and
sub
mov
or
xlat
cld
xlat
dec
push
push
lahf
add
stos
cmp
lret
ss
pop
fs
pop
out
sub
push
xchg
mov
fists
loopne
mov
ja
mov
pop
mov
cmpsb
ds
addr16
stc
aad
data16
or
xchg
loopne
std
leave
sub
jno
pop
pop
mov
mov
mov
jno
sbb
inc
pop
pop
xor
push
push
loop
rcll
and
lods
cmp
mov
mov
inc
enter
add
fistl
xchg
test
sti
mov
or
jp
jl
ds
sbb
ret
jge
mov
dec
or
cmp
jp
cmp
xchg
mov
and
scas
test
test
loopne
mov
dec
sbb
loopne
insb
xor
dec
insb
cs
jno
push
ja
push
setl
call
mov
lods
test
mov
cmp
pop
stc
sub
stos
push
or
out
mov
mov
ja
lock
test
fs
mov
adc
mov
dec
mov
dec
push
sbb
test
push
daa
jmp
pop
in
sarl
and
jb
pop
into
lahf
cmc
push
adc
fptan
and
lea
lds
mov
push
das
std
into
cmp
adc
push
jnp
out
pop
lahf
jbe
pop
mov
or
pop
stc
mov
add
adc
adc
mov
nop
push
iret
daa
dec
add
shl
jne
out
mov
cmovb
into
lock
push
pop
in
clc
lahf
leave
movsb
fst
adc
xor
fimull
push
jge
dec
dec
scas
sahf
mov
xchg
divb
add
fxam
fldt
pop
std
test
ja
adc
std
lods
shrb
fidivrs
cmp
fs
orb
xchg
icebp
jns
sub
call
mov
shl
loopne
pop
pop
fidivrl
icebp
jmp
fiadds
daa
xlat
pop
mov
dec
pop
add
fdivrl
mov
xor
fimuls
jnp
sbbb
or
ja
cmp
repnz
add
jo
roll
outsl
cmpsb
cmc
cmp
cmp
adcb
int3
clc
xchg
aas
imul
cld
fdivl
js
stos
inc
pop
push
jmp
push
data16
ja
mov
xchg
sbb
mov
movl
lret
and
movsb
inc
je
ds
dec
sbb
pop
orb
push
pop
repz
push
lret
je
jb
lds
xchg
pop
cmp
addr16
icebp
sbb
mov
outsl
and
lds
jl
mov
dec
icebp
aam
lea
sbbl
jge
scas
cwtl
movsb
jbe
test
sti
xchg
adc
or
xor
pop
push
stos
push
popa
pushf
mov
call
xor
xchg
cmpb
out
push
test
aas
push
add
test
pop
fcomi
sbb
mov
mov
sbb
je,pt
das
pop
xor
and
add
je
push
push
mov
imul
sub
repz
imull
vpaddusb
jge
push
roll
cmp
inc
xchg
fidivl
dec
mov
lahf
lods
iret
ret
sbb
pop
cmp
cld
pop
sahf
divl
jge
scas
out
outsl
adc
xchg
jl
push
add
pop
mov
xchg
mov
dec
rolb
idivl
push
test
dec
jmp
insb
xor
inc
or
or
mull
mov
mov
les
mov
adc
shlb
out
imul
xor
adc
sbb
in
out
addr16
adc
xorl
mov
arpl
mov
pop
in
outsl
cmp
and
inc
fstpt
xor
out
pop
cmpsb
call
jmp
lods
or
mov
sbb
in
push
inc
lret
rcr
out
hlt
roll
test
rcrl
mov
lods
cmp
out
and
pop
hlt
jmp
sti
mov
xchg
shlb
bound
adc
fdivl
mov
dec
mov
push
ret
lea
aad
outsb
icebp
or
sbb
test
pop
mov
mov
xchg
jl
movsb
insl
sbb
pop
and
cmc
or
jae
sub
jp
inc
clc
push
jecxz
dec
jp
fcompl
ja
imul
inc
jne
sub
mov
sbb
or
jecxz
insb
movsb
outsl
sbb
jge
mov
inc
rolb
xorl
cmp
ss
aam
mov
jmp
pushf
cmpsl
cld
ds
xor
ficoml
cmc
or
lds
adc
mov
cmp
stos
xor
movsb
xchg
mov
sub
pop
cmp
jne
xorb
jae
or
mov
mov
out
cmpb
jg
shll
jle
jnp
enter
push
frstor
insb
xor
push
hlt
repnz
es
pop
bound
pushf
pusha
mov
pop
repnz
sub
int3
pushf
hlt
xchg
inc
xchg
arpl
fsubl
movsb
lret
mov
mov
push
adc
shrb
and
fwait
xchg
daa
cmp
sbb
movsb
jnp
sub
js
xor
jbe
movsb
jg
jae
ja
scas
std
call
adc
loop
pop
aad
stos
scas
test
and
jmp
jbe
cmpsl
popf
jno
push
xchg
dec
mov
dec
xor
hlt
dec
popf
or
sbb
shll
or
xor
aaa
inc
push
std
outsl
popa
pop
adc
push
add
mov
test
mov
pop
dec
lea
xchg
fstpl
loopne
and
add
cmp
shlb
jno
xchg
ret
cld
pusha
je
mov
xchg
pop
pop
loop
aas
adc
inc
call
shrb
or
inc
in
lahf
sbb
gs
imul
inc
push
daa
hlt
cmpl
lds
repnz
or
cmpsb
mov
sbb
ret
cmp
mov
cmp
cwtl
mov
push
hlt
sbb
movsl
jp
adc
jns
xchg
je
jbe
pop
xchg
jmp
loopne
sbb
cmp
push
fwait
sbb
adc
pop
xor
mov
in
jmp
xor
sub
call
es
mov
mov
mov
xchg
outsl
sbb
rorb
mov
cld
inc
ret
mov
mov
lret
dec
aad
scas
lret
push
in
jno
mov
inc
cli
push
push
jnp
or
jnp
push
mov
jp
bound
pushf
jl
cs
jb
mov
mov
jns
lds
xlat
int3
xor
in
lods
jo
inc
inc
rorl
ljmp
out
dec
adc
fstpt
xor
pop
repnz
adc
cli
xchg
test
jle
push
inc
xlat
loopne
and
add
in
into
mulb
ljmp
imul
enter
sub
inc
in
nop
popf
xor
call
xchg
mov
andb
mull
mov
outsb
cmp
xchg
or
sbbl
xchg
test
adc
xchg
ss
inc
loope
into
or
sbb
or
xchg
sarl
or
jo
push
mov
mov
or
xchg
mov
and
int3
sbb
xor
ror
cmp
push
test
xchg
aam
add
fbld
jmp
lock
dec
mov
rolb
test
mov
pop
repz
xor
test
add
sarl
lds
pop
cs
jmp
add
cmp
in
hlt
movsb
and
lea
lahf
enter
push
push
fwait
mov
jne
xor
cmpsb
jge
or
xchg
mov
jno
pop
in
adc
dec
dec
in
xlat
pop
xorl
aam
lock
lods
lea
push
xor
cmp
inc
cwtl
jg
mov
sub
in
cmpsl
jns
data16
faddl
mov
and
aaa
or
fisttpll
shlb
test
jmp
je
dec
and
lcall
fcom
loopne
cmp
cmp
fisubrs
xchg
and
sub
pop
jg
adc
mov
mov
fstps
popa
jl
rorl
orb
inc
add
pop
gs
ljmp
lret
std
or
inc
mov
mov
push
daa
test
fwait
dec
jmp
outsb
and
int
ljmp
add
repnz
cmp
jo
and
xor
andl
xor
testb
jns
add
pusha
fdivs
mov
mov
aam
jg
notl
adc
inc
cmp
cmc
in
cmp
cltd
xchg
outsb
jnp
popf
ja
adc
mov
jl
mov
sub
icebp
mov
icebp
fisttps
push
and
imul
lods
jo
push
push
cmpl
loopne
sbb
cmpb
jnp
scas
xor
sub
call
inc
adc
sub
cmp
ds
sbb
mov
pusha
dec
mov
sub
xchg
cli
fidivs
add
adc
push
mov
fucomip
xchg
mov
je
les
xlat
cld
insb
ret
xorb
push
jnp
xlat
sbb
jl
or
mov
rclb
pop
sbb
mov
in
mov
shll
sub
loop
fidivl
jae
int3
adc
mov
mov
inc
xchg
fwait
sbb
imul
xor
pop
stos
data16
mov
js
fmull
dec
mov
mov
out
dec
jno
sti
jne
cmc
lods
popa
ret
adc
add
std
sbb
call
xor
cli
jp
xor
inc
push
and
gs
stos
je
pop
pop
ja
xchg
out
inc
movsb
fucomp
test
push
ret
out
add
mov
shrb
mov
lret
clc
stos
dec
add
mov
push
xchg
ja
dec
loope
aam
jne
les
jb
rcll
fcmovbe
sub
dec
sub
push
fstpt
push
adc
loop
mov
push
leave
add
roll
adc
repnz
cmp
pushl
pop
jg
or
pop
push
pop
xchg
push
insb
mov
bound
enter
mov
dec
subb
mov
call
test
in
std
xor
jle
stc
sub
testb
lcall
mulb
insl
jo
aas
daa
push
mov
xor
popf
dec
sbb
cmpsb
push
ljmp
addr16
inc
mov
loope
pop
lret
das
add
frstor
inc
dec
popf
mov
dec
rclb
pushf
mov
push
ja
popf
jmp
in
mov
mov
add
add
je
dec
das
jno
aas
mov
mov
ds
inc
jmp
add
adc
outsb
cmp
jns
jg
test
xor
add
arpl
dec
xchg
sbb
push
jae
jle
or
sub
mov
mov
lock
push
push
pop
pop
add
dec
pop
jle
jg
ss
cltd
add
fs
andl
loop
jb
cmp
push
bound
inc
and
inc
hlt
mov
sbb
in
push
movsb
mov
test
out
mov
jle
mov
lock
sub
scas
or
jl
mov
mov
pop
repz
outsb
and
and
pushf
mov
adc
enter
std
mov
fcomi
in
das
push
sbb
mov
es
xor
xchg
push
xor
or
repnz
dec
and
cmp
jae
xchg
pop
mov
mov
scas
stos
cmp
jle
and
fbld
movsb
aam
add
and
adc
pop
pop
push
pop
add
out
loope
out
cmc
into
outsb
add
sub
push
sbbb
imul
stos
pop
mov
or
rcrl
aad
enter
mov
stos
sbb
adc
dec
popa
sub
and
add
sahf
lea
les
daa
in
jle,pt
push
push
cmpl
add
in
xchg
jnp
les
lahf
insl
jle
jae
ljmp
add
mov
and
jns
cmp
cmp
add
xchg
add
stc
push
lock
add
push
push
nop
mov
jecxz
sub
xchg
je
add
xlat
in
imul
xchg
in
imul
jecxz
push
cmp
dec
mov
sbbl
aad
out
aas
push
movsl
test
loop
repnz
jae
int3
into
movsl
adc
es
sbb
pop
dec
lds
sbb
pop
xchg
repnz
xor
pop
in
add
xor
sbb
push
jp
rorb
pop
pop
movsb
movsb
addr16
push
inc
das
push
or
pop
pop
enter
cmpsb
push
inc
xchg
and
and
jg
mov
clc
cld
pop
aas
xchg
dec
xchg
pop
js
orb
fisttpll
xor
add
mov
sbb
and
addr16
add
mov
adc
outsb
lds
push
fidivrs
mov
stc
dec
mov
jbe
push
pop
shrl
daa
std
je
mov
ljmp
ds
xor
fwait
cmp
xor
jnp
dec
lds
lds
cmpsl
cs
sub
hlt
in
fnstcw
testl
adc
call
dec
rcrl
aad
add
add
xorl
sti
ds
mov
sbb
pop
or
push
lcall
xchg
mov
rorl
flds
rolb
stc
insb
shrb
iret
jp
sbb
jbe
push
shrl
mov
adc
sub
mov
sahf
inc
mov
pop
in
mov
popa
ret
mov
push
sub
dec
or
add
icebp
mov
dec
data16
xchg
andl
jle
pop
xchg
push
addr16
pop
lods
mov
xor
mov
or
lods
pop
pop
pop
stos
cmp
lret
pminsw
sub
aaa
cmp
or
aad
pusha
jb
stos
lods
sub
xchg
dec
jg
cmp
aad
pop
and
pushf
xchg
rolb
insl
or
inc
jp
movl
pushf
xchg
jmp
out
out
jns
int
add
aaa
ljmp
inc
adc
notl
cmpl
arpl
xchg
daa
jmp
dec
orl
fdivs
mov
lahf
and
mov
mov
dec
lock
cs
ficoms
shlb
out
outsb
inc
scas
movsl
dec
sbb
test
mov
ds
mov
test
pop
cs
arpl
jbe
out
iret
inc
data16
inc
push
jne
ficompl
ja
cmpsl
pop
sub
xchg
or
call
sbb
jl
jmp
ret
pop
nop
leave
sarl
stc
iret
xchg
sub
scas
push
movsb
loopne
lret
fsts
ficoms
cld
repz
adc
es
dec
adc
xor
jg
jo
ret
outsb
out
mov
stc
mov
out
loopne
mov
scas
addl
pop
and
xlat
mov
pop
add
add
cmp
push
lods
out
das
push
cmp
jg
cwtl
cs
fbld
je
push
push
cmpsb
sbbb
jne
mov
mov
jmp
sahf
aad
pusha
and
sbb
and
shr
stc
jmp
leave
dec
aam
sbb
inc
xchg
out
sub
inc
jbe
int
inc
lahf
pop
pop
inc
lods
in
outsl
pop
xchg
cmp
xor
loope
sbb
js
mov
arpl
call
loope
inc
dec
sub
dec
inc
hlt
jnp
or
fwait
xor
das
insb
jae
and
lret
sarb
loopne
out
aaa
das
inc
xchg
lods
push
xorl
dec
jns
enter
sub
lea
push
add
fidivrs
jne
inc
pop
mov
pop
jb
mov
jp
mov
dec
inc
sti
pop
pop
scas
nop
adc
in
push
jnp
xor
inc
cmp
sub
pop
nop
and
je
xorb
sub
sarw
aaa
cmpsl
lcall
clc
sub
xchg
push
sbb
imul
cmp
imul
dec
ljmp
cmpsb
sbb
repz
mov
test
sbb
dec
out
and
lret
pop
cmp
stos
push
or
cmp
insl
aam
fwait
out
loope
pop
jl
das
mov
mov
add
cmp
inc
adc
lcall
outsb
dec
push
repnz
sbb
inc
adc
outsl
push
inc
sub
insl
in
xchg
movsb
loopne
jge
cld
jmp
pop
xlat
mov
es
pop
ja
ljmp
xor
pop
stos
or
int
mov
pop
pushf
ret
je
cli
xor
add
dec
push
cmp
or
lock
leave
inc
icebp
mov
mov
sbbl
and
adc
out
lea
ljmp
jecxz
push
xchg
testb
xchg
aas
addr16
mov
cmp
test
nop
sub
adc
mov
lahf
daa
xlat
inc
test
jb
imul
mov
fdivr
test
call
loopne
xchg
inc
hlt
mov
jae
fsubl
and
add
inc
inc
lods
js
cmp
xor
addr16
xchg
iret
sbb
in
cmp
dec
in
insl
pop
ja
in
lcall
mov
push
pop
fldenv
cld
inc
fsubr
sbb
jmp
fwait
mov
pop
xchg
jno
and
jae
mov
inc
adc
push
sbb
sub
mov
mov
jae
xor
push
cmpsl
push
idivb
cwtl
add
adc
aaa
pushf
push
fbld
push
aad
imul
std
fidivs
out
inc
mov
rcll
cmc
in
psraw
imul
int3
sub
dec
mov
cmp
out
fs
call
cmp
sbb
fucom
xchg
xchg
jbe
testb
adc
pop
test
mov
xor
sahf
bound
insb
addr16
or
insl
mov
add
xchg
lret
insb
mov
and
ret
pop
push
sbb
test
stos
push
mov
cmp
imull
pop
sub
jmp
fidivrl
ret
lods
push
pop
jmp
ja
push
stc
push
and
mov
mov
push
loopne
jp
ss
gs
insb
push
sbb
push
dec
cmp
mov
push
and
cs
xor
xor
fsubrs
dec
arpl
cmc
cmp
xor
xchg
pushf
test
push
and
dec
loopne
push
outsb
xor
imul
jb
aaa
cmp
jge
jo
test
mov
mov
ficoms
call
jmp
dec
cmp
sbb
fmuls
push
outsl
lret
insb
bound
dec
add
mov
cwtl
pop
lds
inc
movsl
mov
jl
xchg
hlt
mov
adcb
jnp
insl
sbb
ja
sbb
std
outsl
push
shr
int
das
mov
xchg
mov
fmull
int3
rol
dec
adc
in
dec
mov
lock
sbb
pop
loopne
jb
pop
fstl
jns
icebp
test
stc
push
lds
and
adc
in
in
mov
xchg
test
mov
dec
push
cmp
scas
dec
cwtl
fimuls
push
sub
jge
mov
sbb
jle
sti
ret
pop
sbb
xorb
or
scas
js
mov
inc
sbb
cmp
shl
adc
inc
or
pop
imul
cmc
test
icebp
jno
out
mov
adc
push
xchg
lcall
mov
mov
ror
xor
sub
pusha
pop
jae
adc
int3
jb
enter
sub
jb
xor
nop
in
xchg
fwait
dec
pop
lea
aam
insb
mov
jle
roll
push
jo
scas
shlb
cli
jl
pop
testb
lock
sub
rcll
mov
ret
mov
cmp
cmp
push
notb
scas
jmp
cs
ss
inc
call
std
ss
or
je
sub
daa
imul
mov
xor
fnclex
dec
nop
les
dec
pushf
repz
push
mov
mov
subl
inc
sti
cmp
xchg
out
insb
sub
and
out
mov
nop
je
cmpsl
into
or
add
lahf
cmp
mov
fstps
push
fcomps
cmp
jmp
jp
stc
xchg
mov
popa
movsb
aad
and
inc
aaa
popf
adc
inc
dec
xor
jl
daa
and
sub
adcl
out
mov
cmp
xchg
mov
lret
stos
lcall
adc
sbb
mov
lret
cmp
jmp
push
add
push
jb
icebp
dec
mov
outsb
sbb
das
or
push
xchg
imul
insl
add
mov
pop
lret
pop
int3
dec
cmp
pop
imul
in
xchg
loop
js
xor
xchg
nop
imul
arpl
cld
in
lock
xlat
sbb
outsb
pop
clc
fisttpll
xchg
and
sub
xchg
xor
xchg
cmp
cmpsl
adcl
fistpll
pop
mov
aaa
lahf
xchg
mov
je
lcall
cwtl
mov
in
or
pop
jecxz
iret
and
pushaw
aaa
fstpt
xchg
xor
xchg
and
push
mov
xor
cli
imulb
hlt
pop
in
test
roll
outsb
cmp
cmp
mov
cltd
sbb
jmp
loopne
bound
pop
mov
mov
inc
gs
and
sub
cmc
outsl
push
inc
pop
dec
add
cmpsb
adc
push
mov
sahf
inc
scas
push
test
sub
mov
mov
push
test
adc
sbb
ds
jns
add
sbb
inc
test
inc
insb
xorb
test
loopne
sub
test
movsl
in
sarl
in
cmpsb
adc
mov
push
mov
inc
outsl
icebp
addb
aam
imul
mov
lock
cmp
pop
loop
add
push
arpl
loope
ss
jmp
mov
or
pop
jo
jg
cwtl
adc
fwait
ret
fistpl
lcall
les
iret
add
mov
mov
lods
push
lock
sub
and
cltd
jns
pusha
fnstenv
or
js
or
enter
add
cmpsb
and
jmp
jae
out
jno
sbb
es
inc
mov
out
in
jbe
imul
movsb
out
imulb
cmpl
lock
loope
lahf
xor
mov
clc
mov
out
sbb
cmp
and
dec
out
fwait
jle
loopne
and
out
in
dec
test
sub
pop
add
repz
cmpsl
xor
pop
sbb
rorb
inc
aam
jo
sbb
mov
je
fld
mov
popf
out
cmpsb
loop
or
xor
jns
sub
mov
xchg
out
push
push
ret
push
ss
es
lds
pop
mov
leave
iret
and
in
lock
shll
ds
or
and
adc
sub
sub
orl
pop
arpl
test
inc
mov
mov
mov
xchg
ss
mov
addb
mov
mov
mov
jecxz
sti
jl
mov
cmp
inc
idivb
call
xor
popa
push
jno
call
sarb
mov
lods
dec
sbb
lea
adc
lahf
pop
std
jl
mov
test
in
rorb
and
stos
iret
lret
call
mov
pop
sti
add
aad
dec
cmpsl
sbbl
push
cmc
or
test
push
fwait
cs
mov
mov
fcompl
mov
js
movsb
mov
dec
popa
xchg
push
imulb
sub
or
adc
adc
mov
xchg
loopne
fiadds
test
into
rorl
sub
inc
insl
add
mov
dec
out
outsb
mov
cmp
mov
iret
mov
jns
es
les
ds
xor
ret
andl
inc
pop
cmp
mov
and
popa
jmp
cmp
cmpsb
push
jp
xchg
lods
out
rcl
popf
push
inc
sti
sbb
cli
or
movsl
cmpsb
pop
mov
fistl
mov
into
stc
fnstsw
in
jle
repnz
inc
push
lret
jg
aad
inc
out
mov
jp
mov
cwtl
aaa
mov
mov
rcrl
and
out
lret
clc
lods
xchg
or
lcall
out
push
jnp
pop
push
lcall
inc
aaa
mov
add
sub
jne
iret
push
or
fcmovb
mov
arpl
cld
xor
out
scas
fstl
bound
jne
sub
fidivs
shll
hlt
test
cmp
fnstsw
push
cmp
and
in
into
loopne
adc
adc
xor
and
or
ret
inc
in
pushf
push
mov
iret
cltd
fidivl
das
jnp
cmp
cmp
push
sub
mov
clc
icebp
sti
data16
adc
lods
fcoml
fildl
pop
jb
mov
jbe
jne
mov
dec
lds
jg
mov
push
fidivrs
fucomp
jle
mov
sbb
jno
adc
jp
test
pop
mov
xlat
fs
mov
sbb
cwtl
and
jmp
mov
das
out
mov
push
movsl
xor
adc
push
pop
das
mov
in
insl
daa
xor
ds
jp
adc
xchg
adc
pushf
scas
push
mov
test
sbb
inc
sbb
sub
lds
push
out
js
fisubrs
xor
addr16
imul
pushf
xchg
clc
or
movsb
sub
pushf
movsl
bound
leave
iret
push
and
mov
movsl
cmp
xor
mov
xor
out
dec
iret
pop
jne
lods
jae
outsw
mov
scas
add
jns
dec
lret
and
sahf
popf
mov
sub
sub
xor
cmp
cmp
outsb
mov
sub
popa
in
pusha
jne
popa
out
xchg
jae
into
pop
mov
rcll
test
xlat
fs
rcrb
stc
repz
cmp
lods
xchg
sbb
mov
pop
out
outsl
rolb
dec
dec
in
addb
lahf
xchg
push
in
push
aad
jno
in
sub
in
jge
xor
lcall
mov
inc
sub
repz
int3
mov
pop
mov
sti
stc
dec
stc
mov
push
add
push
inc
sbb
sbb
mov
test
iret
sahf
cmove
cmp
cmpsb
rolb
jbe
aad
icebp
mov
add
fnstenv
push
push
dec
xchg
and
fnstenv
dec
sbb
jb
sub
leave
leave
inc
push
mov
fwait
imul
push
addr16
sub
jg
inc
cmp
push
add
pop
pop
iret
and
xor
fs
xchg
push
ret
sti
cmp
dec
inc
out
lahf
mov
out
sub
add
imul
popa
push
pop
mov
mov
lcall
subl
push
push
xchg
repnz
push
iret
aas
std
cli
ficoml
and
in
xor
pop
mov
xorb
mov
outsb
mov
push
movsl
dec
loopne
sub
add
roll
push
int3
ljmp
call
gs
test
xor
pop
adc
mov
lock
aam
pusha
dec
inc
jbe
imul
push
js
mov
mov
mov
ja
sbb
xchg
scas
pop
movsb
sti
sub
or
xchg
mov
movsl
push
daa
jae
iret
outsb
sbb
int3
mov
sbb
push
xor
insl
mov
je
lret
sub
add
xchg
xchg
mov
xor
push
mov
mov
pop
cmp
pop
dec
int
pop
adc
pusha
jg
push
add
je
cltd
std
fisttps
xlat
jle
xchg
xchg
mov
data16
cltd
or
or
inc
adc
pop
fcmovu
lret
pushf
leave
insb
daa
add
xchg
mov
rclb
shll
pushf
and
xchg
jns
mov
xchg
das
mov
jecxz
rcl
and
adc
aam
add
movsb
add
mov
or
cmp
mov
enter
out
mov
das
rorl
stos
mov
sbbb
movsl
cwtl
hlt
negb
pop
ja
mov
mov
mov
push
jns
loope
in
lock
push
test
lds
aad
sub
stos
into
movsb
out
aam
push
cmp
loop
bound
mov
or
mov
xchg
sbb
or
adcl
sti
and
aas
dec
mov
inc
cmp
push
push
pop
lock
pop
push
or
data16
sbb
mov
or
nop
sbb
aas
mov
std
xor
cld
pop
and
daa
shrb
les
jb
arpl
xchg
and
or
mov
leave
jecxz
sahf
mov
iret
push
scas
jae
mov
add
int3
push
inc
stos
add
cltd
call
enter
dec
cmpsb
mov
pop
loope
add
inc
test
pop
out
movsl
andb
fwait
loop
out
std
inc
lds
add
leave
xor
pop
xchg
push
jbe
xchg
sub
pop
leave
mov
mov
shrb
sbb
mov
sub
imul
inc
rorb
jecxz
out
in
dec
inc
mov
pop
lret
pop
adcl
jnp
or
add
aaa
sti
xchg
cli
cmc
sarl
rcrl
mov
and
pop
mov
xchg
das
push
dec
jns
inc
mov
mov
scas
addr16
cmp
jbe
push
ret
cwtl
add
mov
mov
shll
lret
and
push
cs
jne
ficompl
lods
enter
call
mov
mov
je
popf
shll
cmp
mov
test
bound
call
inc
into
movl
ljmp
mov
inc
cmp
aas
cmp
dec
adc
mov
add
adc
and
imul
mov
inc
push
dec
inc
lcall
mov
out
push
pop
cmc
mov
xor
inc
sbb
icebp
test
jns
jle
inc
ds
inc
sbb
test
fyl2x
sbb
cmpsb
mov
jae
adc
cmp
rcl
mov
aas
in
mov
inc
adc
jp
fisubs
mov
inc
mov
mov
fcompl
pop
leave
or
aaa
mov
addr16
test
or
dec
pop
or
jle
test
ret
mov
popa
mov
dec
sbb
or
jno
inc
daa
fnstsw
in
fldl
jns
push
push
inc
and
fs
pushf
std
lods
push
aaa
sub
dec
push
ja
shll
testb
fsubl
cs
ret
iret
inc
or
xchg
arpl
push
stc
inc
test
mov
pushf
dec
ja
jmp
pop
daa
push
jge
mov
repnz
mov
push
cmp
or
push
data16
fucomip
or
into
aaa
rclb
pop
scas
add
mov
outsb
inc
sub
inc
push
xor
and
je
inc
test
fs
test
mov
sub
mov
add
sti
ret
mov
add
push
lahf
movsl
jbe
div
cmp
movsl
pop
jle
orb
scas
sub
and
nop
bound
out
pop
push
jo
cwtl
hlt
lcall
fwait
mov
into
sbb
push
xchg
push
pop
cmpsb
sbb
shlb
inc
mov
sarb
mov
bnd
cli
cmp
loop
jae
mov
xchg
je
push
or
mov
xchg
jge
inc
mov
pop
gs
dec
sub
das
pop
rorb
jle
jns
insb
mov
rcr
in
sub
dec
stos
lahf
decb
and
or
push
add
jne
ret
iret
and
notb
loop
dec
leave
adc
mov
testb
mov
xchg
aad
mov
fld
or
push
pop
pop
out
jge
popf
fidivs
dec
and
add
stc
and
add
push
fisttps
fs
repnz
jbe
jp
jo
push
push
andb
sub
dec
push
fdiv
xchg
sub
or
pusha
mov
ret
int
outsl
jo
hlt
dec
pusha
stos
hlt
loope
pusha
fdivl
fwait
sub
push
mov
pop
in
rcrl
add
mov
mov
and
fisubs
or
adc
sbb
push
dec
repz
arpl
sub
fadds
jns
aad
xchg
fnsave
sbb
or
cmpsl
lahf
adc
ret
sahf
pushf
mov
je
adc
popf
jecxz
ja
inc
rorb
mov
aad
mov
int3
sub
sbb
cmp
mov
dec
rcl
jns
and
cmpsl
push
inc
ret
mov
lret
mov
push
jae
shrl
in
clc
sub
jae
jl
movsl
xor
adc
das
pusha
test
mov
jb
cmp
mov
mov
dec
and
addr16
mov
inc
les
jp
loopne
cmovne
arpl
sub
popf
pop
push
jo
js
fidivl
cmp
mov
mov
push
fimull
lds
icebp
outsl
push
xor
fcmovbe
out
and
mov
mov
inc
jae
xchg
xchg
mov
mov
popf
xor
std
fcoml
adc
xchg
inc
rcrb
sub
push
xor
idivb
mov
push
inc
stos
aad
xor
and
sub
xchg
aad
mov
fdivl
push
imul
inc
dec
lret
and
mov
push
add
scas
test
js
loopne
cs
loope
pop
sbb
mov
sub
pop
loopne
mov
jnp
sbb
adc
cmpsb
sub
iret
mov
or
dec
push
ficomps
mov
test
fwait
lods
or
insl
ds
pop
mov
sub
jmp
inc
fiadds
inc
mov
inc
aad
mov
mov
loop
cld
mov
dec
mov
sbb
daa
lahf
pop
insl
aaa
mov
inc
mov
jbe
mov
mov
push
xchg
dec
rol
movsl
mov
sub
xchg
outsb
pushf
sub
cmp
add
hlt
int3
stos
pop
xor
sbb
mov
jbe
cmp
out
jne
xchg
dec
shl
pmuludq
lahf
inc
xchg
movsb
stos
nop
je
es
stos
shl
dec
push
pop
lret
int
and
lret
add
dec
adcb
shr
inc
lock
cltd
push
repz
mov
or
sub
sbb
ljmp
jno
stc
cmc
pop
loopne
pop
aam
mov
test
fwait
ljmp
addr16
cmpsb
fstpt
mov
xchg
sub
in
mov
sub
inc
and
fidivl
mov
outsb
fistpll
mov
add
jecxz
xor
sbb
mov
jnp
cmpsb
xor
sbb
push
lock
adc
ret
adc
lret
xor
mov
shl
sarl
ds
imul
sbb
nop
pop
leave
xchg
xchg
in
push
jge
cmp
pushf
jo
cwtl
mov
cmp
mov
test
cmpsb
aam
vrcpss
in
aam
adc
mov
lcall
rcrl
add
jne
or
sbb
es
int3
daa
call
dec
lret
jb
sbb
push
or
in
jno
dec
add
rcll
xor
add
push
into
test
add
out
xchg
out
out
mov
pop
xchg
cmp
mov
adc
andb
mov
and
sub
dec
clc
push
sahf
jae
nop
out
xchg
mov
xchg
push
nop
push
out
adc
negb
push
mov
add
pop
hlt
cmp
mov
xor
jmp
dec
insl
insl
aas
mov
add
out
dec
bound
ret
shl
lcall
jno
mov
xchg
jp
inc
shufps
ret
rcr
push
pop
jns
mov
idivl
ss
or
stc
adc
sbb
scas
xchg
scas
sub
pushf
push
lods
push
inc
jp
xchg
mov
push
filds
sub
jbe
test
int
xor
loopne
lret
push
add
add
in
loopne
jg
sti
and
xor
adc
popw
fs
addr16
movsb
in
cli
inc
mov
pop
dec
pop
xchg
lds
mov
divl
lods
sarb
out
or
dec
push
imul
or
and
test
xor
mov
cs
adc
inc
pusha
jb
jp
loope
fdivrp
out
inc
xchg
mov
outsl
test
mov
sti
inc
or
imul
or
loopne
pushl
jns
outsb
sub
push
shlb
jmp
dec
scas
push
jb
jo
jno
test
dec
pop
push
mov
stos
or
jb
mov
adc
sbb
xchg
fadds
dec
into
out
sub
sbb
ja
mov
push
scas
dec
cmp
xchg
fdivrl
push
dec
scas
xchg
add
xor
mov
repz
mov
mov
scas
or
xchg
insb
rcll
ret
daa
add
out
add
test
adc
lahf
xchg
mov
xor
inc
popf
mov
stos
scas
dec
dec
and
inc
mov
xchg
adcl
cltd
cwtl
stos
adc
test
xor
cli
outsb
ret
mov
push
push
cmp
xchg
xchg
inc
fwait
xor
xor
jns
les
adc
sbb
ss
xor
lahf
iret
stos
pop
cmp
mov
pop
add
lods
pushf
into
and
out
dec
adc
and
cmpsb
insl
data16
loop
xchg
les
jbe
fists
or
push
sbb
xor
cli
repz
les
ds
push
push
imul
fs
jnp
pop
fisttps
mov
imul
and
or
popf
dec
push
sub
adc
pop
mov
adc
xor
mov
in
out
fistps
ja
std
iret
push
or
inc
add
dec
aad
sub
hlt
jge
lods
xor
shl
mov
popf
lea
and
pop
mov
ljmp
into
inc
out
fistpl
sbb
stos
gs
xor
sbb
cmpsb
insb
and
call
ss
lods
push
dec
data16
pop
dec
adc
repz
jo
cmp
and
in
test
icebp
jle
cmp
add
add
dec
xchg
sub
test
sbb
ljmp
cs
dec
sub
or
out
cmpl
ja
cmp
add
xor
mov
mov
enter
setg
mov
and
mov
or
aaa
jo
repz
mov
js
ja
pop
push
jle
mov
inc
mov
lods
mov
lahf
dec
fidivl
pop
loope
pop
jns
sub
icebp
or
cmp
pop
out
mov
fcomps
xchg
cmp
fisubs
push
pop
fmuls
xchg
and
lahf
iret
dec
cld
inc
xchg
mov
add
pushf
push
je
push
ja
cld
ds
fisubrl
pop
enter
test
and
rcl
out
cmp
dec
lret
sub
xlat
gs
fs
fisubrs
dec
adc
call
and
ds
mov
lods
rol
xor
rclb
jno
cld
mov
cmp
sti
movsb
das
or
test
scas
cmpsb
fwait
mov
call
das
mov
push
popa
cmp
xchg
xchg
aad
ja
cmpsl
test
push
test
push
push
lds
mov
mov
ljmp
inc
add
in
ficompl
mov
push
jns
popf
es
sub
jb
mov
mov
not
adc
testb
adc
xchg
rep
stc
and
fcompl
movsl
and
sub
insl
mov
xor
pop
enter
dec
mov
clc
rol
or
repz
add
adc
add
pop
cltd
sbb
xchg
mov
dec
push
out
push
jno
xor
xor
in
pop
subb
mov
fists
mov
and
lds
iret
pop
jge
jl
lea
inc
xor
leave
fcmovne
fsubl
fnsave
mov
outsl
or
cwtl
dec
pop
or
jg
mov
or
xor
decb
popf
sarl
pop
cld
jmp
sbb
push
je
pushf
sbb
int
inc
mov
aam
mov
or
lret
cmpsb
ret
mov
push
push
movsb
stos
sbb
jnp
xchg
push
test
jns
cltd
or
les
mov
enter
rorl
aas
mov
adc
inc
fcoms
dec
daa
js
or
sbb
nop
test
dec
mov
mov
jle
pop
xchg
je
push
sti
test
push
sub
xchg
xchg
scas
outsb
pop
stos
xchg
jmp
rorb
dec
rolb
push
decb
and
fldl
adc
mov
push
mov
jbe
pop
fldl
xchg
mov
ja
rcrb
dec
sub
shll
je
fstps
mov
adc
xor
and
jne
mov
mov
popa
gs
scas
mov
push
fbstp
aad
cmpsb
fiadds
je
lock
mov
fisubl
int3
rcr
lods
fldenv
pop
mov
test
pop
loopne
xchg
into
add
fsubp
jecxz
rcrl
aas
pop
cmp
mov
scas
mov
and
add
mov
jne
fld
fldt
lcall
lret
dec
push
cmpsl
xchg
dec
or
adcl
add
stos
sahf
sub
shll
and
pop
push
push
or
out
push
test
dec
push
push
push
sub
sbb
fstpt
cwtl
inc
shr
pop
loop
and
ret
inc
outsb
xor
push
mov
inc
push
jle
dec
jne
lcall
cld
das
push
mov
lds
cmp
dec
inc
icebp
mov
cli
inc
jae
or
mov
cmp
das
loop
add
xchg
lahf
push
dec
pusha
scas
cltd
pop
pop
out
popf
pop
sub
test
sbbb
scas
out
cltd
push
push
push
movsb
jbe
pop
lods
cmc
andb
ret
xchg
enter
mov
in
pop
ljmp
imul
cmpl
adc
ficoml
and
sbb
sub
mov
mov
push
loope
loop
sub
movsb
cmc
jle
lret
push
jl
es
aaa
adc
lock
mov
out
stc
mov
cld
outsl
outsl
push
mov
or
push
and
push
push
inc
enter
daa
out
scas
pop
pusha
js
gs
xchg
mov
push
pop
and
mov
add
jno
adc
aaa
bound
pop
sub
vmwrite
cmp
fstl
inc
push
inc
lcall
jg
testb
rorb
cmpsb
xchg
nop
fisubs
movsl
imul
cs
mov
inc
mov
dec
adc
inc
shrb
outsl
push
xchg
or
mov
cwtl
xchg
jp
cli
push
xchg
mov
lods
lahf
scas
pop
pop
or
cwtl
dec
scas
int3
rcl
sbb
mov
mov
clc
icebp
std
cmp
xor
test
jo
iret
adc
negb
push
hlt
xor
filds
inc
dec
jmp
fsubrl
repz
cmc
mov
js
add
ljmp
test
or
xchg
push
or
stos
movsb
adc
mov
cmp
sbb
test
mov
shrl
mov
fisttpll
xchg
cmpl
xor
call
inc
xlat
notl
in
inc
popa
cmp
fnstenv
int
mov
sub
aas
pop
sub
cltd
mov
or
stos
sub
imul
lret
mov
mov
subb
jb
inc
cmp
pop
add
xor
mov
jns
adc
adc
dec
mov
dec
xchg
sub
mov
mov
xchg
fmull
push
mov
rol
inc
aaa
and
rclb
add
push
leave
sub
cltd
adc
addb
inc
sbb
mov
sub
out
dec
scas
aam
push
scas
push
inc
and
pop
addr16
mov
pop
inc
jl
pop
jl
jmp
addr16
lods
xchg
cmpsb
add
lods
aam
xchg
cmp
insl
pusha
mov
pop
xor
hlt
into
cmp
paddd
je
ret
lods
scas
popf
into
and
xchg
mov
iret
mov
xchg
mov
inc
js
mov
loope
jns
mov
mov
dec
lret
and
pop
cs
inc
push
scas
addr16
ja
lock
daa
pop
hlt
lock
add
rolb
hlt
add
int3
stos
popa
sub
dec
out
shlb
xor
outsb
add
cmpb
sbb
fnsave
in
hlt
jo
xor
loope
dec
orb
lret
mov
mov
loopne
ds
adc
or
jmp
mov
ljmp
repz
xor
ror
loope
aad
sub
jge
or
loop
inc
mov
std
jbe
mov
pop
sbbl
inc
outsb
int3
inc
push
xor
test
call
or
cli
push
add
sti
push
xchg
outsb
mov
mov
and
jbe
xchg
inc
jnp
int3
dec
es
mov
fldt
sbb
jbe
loopne
xchg
in
out
adc
cmp
inc
ljmp
ja
hlt
movsl
aam
fwait
xlat
push
mov
sbbb
int
jecxz
xlat
repz
ret
mov
fadds
jnp
lods
push
outsb
or
mov
ljmp
xchg
add
arpl
push
inc
loopne
sub
jg
out
sbb
hlt
lcall
sub
mov
sub
add
shlb
adc
dec
mov
mov
pop
dec
jecxz
xor
mov
dec
leave
adc
mov
sahf
xchg
fldenv
ss
jbe
daa
sbb
add
push
mov
les
mov
es
push
rorb
enter
mov
xchg
xor
stos
int
in
inc
ret
ljmp
fnstsw
mov
insl
add
xor
sub
dec
pop
xchg
shrb
nop
xchg
cmpsl
popf
aam
in
cmpsl
lret
sarb
mov
insb
jno
pop
xchg
sbb
pushf
decb
cmp
jle
ret
push
push
aaa
movsl
and
xlat
pop
jge
add
ss
daa
fs
add
dec
cmp
mov
xchg
int3
out
or
lcall
out
into
pop
hlt
shll
cmc
pop
aaa
inc
add
dec
scas
inc
insb
inc
xor
lcall
popa
pop
fnstsw
sbb
test
and
sti
insb
jp
add
psllw
rclb
test
clc
fidivrl
dec
mov
add
outsl
push
jle
cs
arpl
cli
xchg
xchg
out
inc
adc
inc
loop
fimuls
cmpsb
sbb
sub
xor
jmp
fistl
clc
pop
repnz
das
jmp
loope
sbb
das
cmp
leave
inc
ds
dec
mov
mov
inc
call
fisubl
push
loope
push
xchg
inc
add
ret
lods
jge
inc
adc
mov
mov
movsl
and
push
pop
sub
insb
sbb
shlb
jg
push
push
sub
mov
shrl
mov
mov
insl
xor
push
jbe
add
stos
imull
add
pop
loop
inc
dec
inc
xlat
xchg
inc
jmp
push
mov
dec
add
jle
adcl
out
mov
xchg
cmpsb
add
add
adc
mov
dec
xor
leave
pop
add
movsl
dec
xor
dec
pop
into
cli
subb
xchg
mov
out
mov
out
xchg
xor
inc
leave
xor
jb
sbb
mov
dec
xchg
fs
shl
xlat
adc
inc
add
jmp
in
and
push
and
dec
cld
push
inc
sbb
pushl
mov
out
xchg
mov
pop
popa
sub
pop
je
or
cli
addr16
lret
ljmp
aam
adcb
xlat
mov
mov
cli
hlt
roll
dec
data16
pop
xchg
sub
mov
xlat
xchg
push
jmp
int3
add
movsb
push
shlb
or
leave
ja
push
xchg
xlat
rol
mov
sbb
or
inc
fadd
cmpsb
aad
lret
xchg
jl
add
mov
stos
scas
in
lcall
mov
popl
mov
cwtl
xor
jns
xor
out
mov
sub
adc
jecxz
pop
inc
loopne
cli
outsl
xchg
enter
pop
cld
pop
and
push
inc
inc
xchg
dec
pop
pop
orb
ljmp
enter
insb
sbb
and
dec
push
add
das
arpl
or
gs
inc
pop
sbb
enter
scas
cmp
insl
adc
mov
cmp
sub
xchg
jle
mov
pop
jmp
pop
aas
dec
push
stos
push
jns
sub
cld
mov
sysenter
jo
xchg
mov
cmp
xchg
scas
sahf
jae
and
xorl
scas
addl
ss
pusha
push
sbb
jle
aad
in
xchg
stos
or
jl
incb
and
ja
xchg
mov
xor
test
sub
xor
lds
sbb
stos
ret
lcall
fwait
pushf
xchg
jae
pop
fnsetpm(287
sbb
and
adc
insb
pushf
test
in
mov
mov
jns
rolb
sarb
int3
pop
int3
push
mov
bound
xchg
mov
push
mov
test
fcmovnb
xchg
add
aam
pop
outsl
xchg
mov
sarb
mov
loope
pcmpeqd
cmp
jmp
adc
jbe
pop
mov
xlat
idivl
jmp
rolb
pop
and
push
icebp
shll
cmp
cmp
mov
push
push
in
pop
jge
insb
push
xchg
or
loope
inc
movl
push
xchg
or
js
popa
push
mov
add
dec
xor
dec
inc
pop
sahf
mov
cwtl
in
sarb
or
pop
mov
rorl
and
jae
es
add
push
cmpl
orl
xchg
inc
cltd
mov
fdivl
insb
jnp
xchg
adc
adc
fnstenv
fs
adc
pop
inc
int3
movsb
or
adc
ljmp
cmp
adc
pop
sbb
pop
adc
dec
dec
xor
rol
jne
mov
aas
jge
adc
fimuls
outsb
xor
jge
inc
xlat
scas
pop
test
sbb
mov
sub
inc
mov
xor
in
ja
sub
or
dec
ja
popa
pop
or
clc
fisttpll
mov
arpl
fisubs
ret
in
sahf
push
bound
push
jns
add
mov
mov
dec
sbb
mov
scas
dec
cmp
test
fisttpll
cmp
push
movzwl
shrb
pop
and
jge
push
cmp
rorl
cltd
gs
mov
arpl
pop
pop
dec
stos
xchg
imul
nop
ret
xchg
dec
sub
jge
adc
pop
test
mov
out
bound
rclb
push
outsb
gs
push
in
aam
sti
mov
ss
mov
mov
xchg
mov
push
pop
xor
pop
and
cltd
roll
fimull
fisubrs
lret
leave
imul
roll
pushf
and
pop
adc
rorb
mov
adc
add
sbbb
mov
dec
xor
mov
mov
mov
jns
and
daa
aam
out
pushf
popa
adc
add
xchg
ret
jl
xchg
cmp
xchg
pop
inc
mov
aad
mov
cld
sarl
insl
cltd
jmp
jne
inc
ja
arpl
xor
sub
fidivrs
pop
or
push
and
test
shl
jo
xchg
iret
inc
inc
mov
outsl
push
les
xor
cltd
jl
icebp
lret
xchg
push
daa
mov
insb
adc
inc
jecxz
es
and
movsb
out
xchg
out
mov
faddl
add
mov
mov
cmp
and
sbb
xchg
sbb
addb
fninit
clc
xor
stos
push
inc
mov
mov
pop
scas
inc
xchg
or
ljmp
jb
daa
jns
loop
jge
clc
je
sub
in
std
mov
sbb
jns
stos
ss
mov
sbb
mov
fisttpll
fmull
mov
call
jo
pushl
push
dec
or
outsb
lea
or
loopne
xor
xchg
inc
cmpsl
out
in
int3
out
dec
mov
in
push
loope
push
repnz
xor
sbb
ja
ret
mov
and
shll
mov
sahf
mov
jg
xchg
push
aam
xlat
xchg
adc
mov
and
dec
add
sub
cmp
je
cltd
into
pop
adc
dec
jne
jg
adc
loop
ret
add
nop
jmp
lock
int3
repz
push
test
inc
jno
fwait
cmp
or
cmc
dec
iret
in
push
pusha
outsl
push
xchg
adc
add
xor
mov
lods
mov
clc
loopne
xor
pop
mov
cmpsb
add
cmp
xorl
pop
mov
rcrl
mov
and
mov
xchg
test
inc
cmpsl
loop
std
mov
mov
push
mov
sub
cmp
add
mov
pop
and
pop
movb
stos
xchg
test
mov
in
ficoms
clc
cli
out
imul
in
jp
cli
or
inc
scas
pop
jge
dec
and
loop
fsubr
rclb
inc
xchg
iret
ret
scas
popa
ljmp
insl
dec
int3
enter
mov
adcl
sbb
lret
cmp
pop
adc
fcoml
not
repz
xchg
fnstenv
xor
fstl
leave
repnz
ds
mov
xor
mul
push
mov
in
in
adc
fs
push
mov
dec
dec
xchg
jmp
lea
lea
add
push
in
mov
cltd
cmp
push
movsl
out
sub
into
pop
aad
ljmp
push
fsts
stos
repz
pushl
ljmp
mov
pushf
mov
adc
test
or
aaa
out
mov
out
sub
cli
and
aas
daa
xchg
sti
pop
movsb
jae
mov
pop
sti
int3
ja
insl
mov
push
push
and
mov
xchg
xor
divl
aam
adc
into
and
cwtl
clc
jg
mov
movsl
ret
ret
jmp
mov
mov
lret
jb
inc
mov
lahf
call
push
ret
add
out
xchg
sub
cmc
xor
sub
push
xchg
lcall
jg
push
dec
pushf
sub
cmp
loopne
rorl
fmulp
or
mov
jge
adc
push
adcb
cmp
or
jle
sbb
ret
inc
add
jae
pop
add
or
sub
and
iret
pop
test
inc
mov
outsb
pop
inc
sbb
dec
mov
lret
add
lods
outsb
leave
pop
leave
cmpsl
bound
fiadds
xchg
cmp
fsts
pop
fcompl
gs
out
popw
sbb
shlb
sub
cwtl
cli
sar
pop
sbb
mov
es
leave
hlt
aad
adc
adc
inc
frstor
rolb
icebp
mov
push
movsb
xchg
sarb
cmpb
mov
loope
repnz
test
sahf
push
shll
pop
test
sub
sub
pop
sub
mov
mov
mov
out
icebp
or
out
push
xchg
sbb
jnp
xor
nopl
xchg
sbb
dec
aad
fildll
push
sub
pop
pop
outsl
add
cmc
in
and
shll
mov
adc
cmpb
cmp
ss
adc
dec
jns
cmpsl
mov
cmp
jbe
clc
sarl
pop
call
mov
mov
mov
cmp
test
es
inc
dec
decb
data16
mov
push
dec
inc
dec
or
xchg
cmp
rorb
lods
lods
pushw
or
fadd
pop
cltd
xchg
lea
pop
and
data16
in
fisubrs
cmp
mov
outsl
push
sbb
scas
hlt
push
test
sub
loopne
int3
pop
aam
adc
or
cmc
push
cmpsl
ss
mov
xchg
xchg
imul
scas
cmp
cmp
movsl
mov
inc
inc
push
and
in
subb
insl
adc
xchg
xchg
add
in
push
ss
mov
push
inc
cmpsb
pop
cli
lret
mov
adc
je
mov
loope
and
fldenv
js
fabs
adc
adc
addr16
pop
mov
pushf
movsb
inc
mov
xchg
scas
lods
mov
fiaddl
stos
test
pop
or
jmp
lock
push
mov
dec
push
sti
ss
data16
jg
mov
fucomip
loop
jo
xchg
sub
ss
add
cmpsl
jnp
mov
jbe
cld
inc
lret
fnstcw
lret
push
or
aas
add
icebp
aam
jmp
fcompl
inc
popa
xor
sub
insb
mov
pop
jne
scas
xchg
add
and
jne
loopne
mov
movsb
or
lcall
adc
mov
mov
xchg
sub
mov
xchg
repz
out
clc
mov
jo
dec
ds
pushf
ret
inc
enter
ja
or
xor
mov
and
jne
bound
lock
sub
jle
jae
cmpl
cmpl
mov
lcall
outsb
mov
dec
and
out
cmpsl
inc
adc
jae
ja
lds
nop
and
fcomps
sub
and
mov
in
sub
stos
aam
lods
xlat
sahf
pusha
push
in
adc
xor
sub
je
das
sbb
nop
mov
and
mov
pop
pop
mov
jbe
mov
popf
stc
sbb
icebp
inc
dec
ds
push
cmp
jns
cmp
mov
jge
rcrl
xchg
push
pop
pop
rol
jmp
lcall
in
outsl
jne
fstpl
daa
or
xchg
add
fs
add
inc
mov
xor
sbb
cltd
pop
xor
xor
js
bound
aaa
imul
pop
repnz
aad
adc
xchg
adc
adc
sbb
push
xor
pop
and
sbb
sub
ds
push
add
xor
pop
cli
and
ja
jg
addr16
call
aas
jp
and
xchg
test
pop
ficomps
mov
xor
std
movsl
xor
fcomi
mov
idiv
lcall
cld
fwait
lods
mov
mov
jne
sub
repnz
cli
xorl
das
out
sbb
andb
xlat
or
mov
inc
push
test
insl
sbb
xor
mov
push
add
push
lcall
pop
lea
dec
cmpsb
fwait
push
lcall
sub
dec
push
jb
stos
cmp
cmc
in
in
fwait
mov
call
xor
movsl
dec
dec
push
not
mov
mov
push
test
jno
rcl
mov
lds
xor
add
adc
pop
jge
pop
lret
push
enter
and
add
sub
not
lds
arpl
lret
in
dec
in
mov
out
mulb
rcll
jge
or
fs
int
xor
xchg
ret
fdivl
mov
lods
stos
in
add
insb
mov
add
cmp
sbb
push
sub
arpl
sbb
mov
popa
inc
cmp
xor
cmp
xchg
and
ret
aaa
push
xorl
rcl
jl
jecxz
adc
cmpsb
add
push
data16
sub
adc
fnsave
js
test
in
sbb
js
xor
or
lret
xchg
mov
mov
mov
insl
nop
mov
lock
lret
pushf
imul
adc
xchg
lds
mov
cmp
pop
xchg
loopne
xchg
inc
lret
cmp
mov
jne
mov
mov
jbe
xchg
lea
sti
adc
cs
sarl
sbb
xorl
lock
ss
push
sbb
or
cmp
jg
mov
dec
ljmp
push
inc
or
push
dec
inc
and
xor
pop
jp
mov
adc
fsubs
pusha
pop
stc
pop
imul
pop
loope
imul
lods
imul
jno
js
jle
std
leave
or
lahf
inc
lea
lcall
inc
aaa
popa
jno
dec
xchg
dec
xchg
sub
mov
dec
js
call
jno
push
adc
mov
cmp
pop
cmpsb
mov
xchg
orl
push
clc
push
sub
ljmp
scas
xchg
mov
pop
imulb
add
sub
sub
mov
lahf
addr16
dec
scas
pop
in
pop
addr16
daa
push
ljmp
div
or
xchg
add
stos
fnstsw
pop
ljmp
mov
iret
addr16
rorb
data16
in
cld
lret
lahf
mov
jmp
out
sbb
mov
sbb
mov
and
adc
pop
mov
mov
mov
xchg
pop
in
xchg
fistl
daa
jno
hlt
or
je
ds
test
mov
and
mov
fwait
in
xor
pop
emms
sahf
notl
loopne
es
and
lret
adc
inc
jnp
push
icebp
xchg
push
mov
sbb
outsb
jae
lea
mov
out
shrb
dec
add
mov
out
in
inc
lret
fs
loope
push
test
cli
rcll
out
inc
pop
sbb
push
ret
push
and
jle
pushf
adc
fiaddl
leave
cld
jl
fs
stos
or
jo
adc
inc
std
mov
xchg
test
xor
pop
and
lea
loopne
mul
sub
mov
lods
push
shrl
ret
outsb
cmpsb
sarb
xor
lock
lea
int
mov
jb
and
cmp
ja
loope
into
pop
push
insl
in
enter
sbb
lock
jge
push
xor
shl
dec
inc
iret
cmc
and
mov
cmp
mov
mov
lods
mov
popf
lcall
push
jae
ds
test
in
xchg
dec
es
adc
jae
fbld
add
rorl
mov
jnp
dec
es
mov
jle
pop
out
pop
sbb
push
icebp
and
cmpsl
mov
pop
xchg
xor
incb
and
jae
dec
fdivr
dec
movsb
or
inc
int3
nop
adcb
mov
iret
xchg
and
mov
mov
mov
jp
cmp
lahf
jecxz
dec
mov
lret
mov
inc
sub
sbb
rcll
cmpsb
and
jg
xchg
into
mov
bound
xchg
sub
push
fstl
out
fdivl
lods
sbb
xchg
xor
test
movd
pop
sbb
add
imul
mov
push
jns
aad
icebp
pop
outsb
sub
pop
cmpsb
jg
in
cmpsb
test
cmp
xorl
stos
lock
fisubl
mov
adc
xorl
jmp
popa
inc
leave
lods
push
mov
in
jnp
push
and
xlat
inc
pop
sbb
stos
mov
jp
push
mov
sti
mov
add
cmp
jae
fidivl
lret
loopne
xlat
xchg
sub
sub
bound
cmpsl
rolb
inc
dec
pusha
pop
or
dec
push
sub
cltd
jne
lret
insb
jmp
push
push
outsl
xlat
jp
cwtl
pop
scas
or
movups
fcoms
dec
imul
pop
cmp
data16
adc
loop
push
jbe
lret
dec
xchg
lods
inc
xor
cvtps2pi
repz
mov
sbb
clc
sub
xor
xchg
sarl
insl
aas
pop
cmpsl
popf
sti
jg
into
cs
push
push
adc
lods
mov
jl
or
fcmovne
xor
jbe
adc
dec
stos
imul
scas
shr
outsb
jle
cmc
push
cmpsl
mov
addb
mov
mov
bound
test
inc
xchg
aam
daa
sub
cmpsl
stos
mov
dec
or
test
adc
dec
dec
dec
cmp
cmp
lahf
push
insl
lret
add
xor
cltd
xchg
data16
dec
negb
sbb
or
cmp
or
test
fadds
call
mov
mov
fdivrl
data16
shll
jl
xor
adc
sbb
dec
fisubrs
push
sub
mov
jbe
mov
jb
inc
mov
xchg
jae
mov
into
into
adc
test
push
hlt
mov
sbb
mov
sti
push
insb
pop
cmc
adc
jmp
mov
pop
xchg
adc
inc
jae
sub
pushw
fucomi
stos
pop
pop
aaa
mov
adc
mov
shlb
clc
fimull
jns
daa
xchg
mov
leave
dec
mov
movsb
pusha
sub
cs
sub
cmp
sub
inc
lds
xor
aam
jmp
jae
imul
notl
xchg
repz
add
mov
sbb
test
in
stc
inc
call
repnz
and
pop
pushf
popf
mov
jp
test
clc
mov
or
mov
or
ja
shlb
sbb
or
lcall
inc
inc
bound
aad
jle
adc
jb
repz
pop
and
mov
shlb
cmpsl
mov
or
lods
loop
lods
into
add
ljmp
push
aad
imul
sub
inc
repnz
cmc
jnp
in
lcall
and
subb
stc
jl
jmp
sbb
add
cltd
jo
mov
imul
roll
out
stc
inc
xchg
imul
add
cmc
je
mov
adc
jge
lds
fwait
dec
mov
in
lcall
fwait
mov
sbb
in
cmp
push
pop
scas
pop
jl
inc
leave
push
fistpll
lcall
int
jo
mov
pop
lock
mov
iret
mov
mov
mov
adc
push
and
lock
sbb
mov
jae
lret
ljmp
mov
cwtl
jno
jae
dec
pop
dec
push
lods
imul
sarb
mov
pop
lods
nop
adc
ss
push
xor
call
dec
inc
pop
out
ficoml
repz
mov
cli
test
inc
or
push
jp
xchg
mov
jl
imul
fsubs
mov
in
add
or
int
xlat
sbb
out
ljmp
cld
push
js
mov
out
push
jne
cmc
pop
adc
adc
scas
stos
ret
cmp
sti
sub
dec
dec
mul
jle
jl
pop
cmp
xchg
call
inc
push
addr16
les
pop
dec
mov
adc
cmp
push
cli
lods
sub
in
jnp
mov
ret
inc
sub
dec
loopne
out
sahf
mov
sbb
scas
pushf
push
mov
push
insl
stos
leave
xchg
lret
frstor
icebp
imul
xchg
in
addr16
pop
and
lock
sbb
shll
xchg
mov
pop
ja
int3
sbb
pop
scas
sbb
test
mov
std
repnz
inc
decl
inc
mov
inc
rcl
sbb
inc
mov
lds
lahf
jo
mov
test
cmp
fsubr
into
xchg
ret
pushl
stos
jns
movl
inc
insl
pop
mov
jb
push
int
outsb
push
jmp
lret
jmp
or
mov
int
dec
add
lcall
lods
in
dec
mov
sub
cmpsl
dec
xor
inc
adc
jg
je
repnz
sub
pusha
nop
mov
mov
adc
int3
rorb
mov
and
call
add
mov
shlb
rcr
mov
cmp
not
stc
bound
mov
jo
in
pusha
fnsave
mov
xchg
push
int
or
out
lods
inc
pop
xor
pop
push
lock
push
adc
aam
loopne
stos
mov
rcl
hlt
rclb
scas
stc
inc
popf
rclb
push
push
movsb
and
std
imul
clc
ljmp
movsb
jg
lcall
shl
ficompl
lret
adc
orb
push
iret
addr16
push
inc
aam
outsl
les
or
mov
clc
sub
sub
and
cmpsb
dec
add
aad
jmp
loope
movsb
cmc
scas
mov
mov
xchg
push
cmp
push
jg
mov
sub
jns
mov
xor
push
sbb
push
popf
sahf
lahf
mov
and
push
push
out
mov
repz
sti
pushw
insb
mov
sbb
lock
pop
inc
das
in
xor
adc
xchg
sub
ljmp
pop
fildll
scas
test
lret
sub
add
fnop
pop
jmp
pusha
adc
in
fidivs
clc
mov
adc
lock
lods
sbb
and
lock
jno
push
addr16
mov
int
sub
andb
jle
ficompl
repz
mov
cmp
or
sub
lods
mov
add
adc
or
in
lock
or
inc
sub
jmp
rcr
mov
push
lock
test
and
sub
mov
lret
mov
lcall
adc
in
or
xchg
je
rclb
loopne
push
xor
xor
push
xor
cmc
addr16
mov
andl
or
mov
dec
mov
mov
incb
repz
arpl
repnz
insb
popa
xor
cli
dec
into
jbe
sbb
loope
loope
xor
fstps
dec
mov
sarl
pop
insl
icebp
call
data16
mov
pop
dec
pushf
fidivs
sub
xchg
add
fs
sbb
adc
xchg
or
push
sub
cltd
enter
orl
nop
lret
jl
push
xchg
add
cmpsl
daa
jo
cmp
pop
push
insb
movsb
cmp
sub
repz
adc
pop
iret
cmc
stc
call
test
xchg
jle
or
loopne
mov
fistpll
fwait
cmp
jecxz
into
and
out
arpl
mov
outsl
imul
mov
fcomps
fsubrl
insl
out
jecxz
cmp
daa
pop
mov
adcb
xchg
mov
sbb
popa
ret
jp
movsl
jbe
je
icebp
mov
mov
daa
rcrb
rorl
push
pop
aaa
and
test
push
inc
mov
repz
sahf
in
jge
sbb
hlt
mov
adc
and
enter
jae
jns
xlat
or
cmp
jmp
lock
sbb
xor
push
mov
sub
mov
cmpb
dec
cld
push
ss
mov
out
jne
jb
jns
mov
ss
pop
in
xchg
mov
sbb
sbbb
sub
cmc
sarl
jmp
js
aaa
in
insb
mov
lret
pop
aaa
cmp
jmp
and
push
mov
faddl
or
xchg
fs
div
aam
push
xor
xor
add
ret
jecxz
outsb
fldt
mov
pop
pop
cmp
ja
pop
insb
xor
xor
arpl
sbb
jle
sahf
inc
in
dec
out
into
rclb
aad
clc
nop
add
push
mov
add
fiadds
add
insb
adc
push
imul
xorb
jno
out
das
add
mov
push
pop
mov
push
enter
loope
fistpl
mov
xchg
fwait
js
xor
push
das
mov
inc
jmp
loopne
adc
pop
add
mov
mov
les
xor
es
nop
pop
dec
imull
jae
xorl
icebp
xchg
inc
sbb
sbb
mov
add
lret
cmp
sub
dec
sub
aas
and
movsl
fs
loope
sbb
pop
nop
rolb
jmp
xchg
push
aad
push
addr16
mov
fwait
das
mov
cmpb
jmp
sub
push
xchg
add
jae
imul
movsb
push
in
mov
cmp
mov
mov
adc
mov
jbe,pn
jmp
into
fdivl
aaa
ret
and
pop
and
in
add
stc
cli
test
mov
pop
popf
jge
dec
cli
push
cmpsb
call
sti
loope
test
mov
dec
daa
andb
push
inc
mov
fnstsw
sub
into
leave
mov
xchg
jp
out
add
lods
push
mov
imul
aaa
xor
out
int3
pop
xor
es
adc
pop
inc
jno
push
jl
in
cld
fsubrs
test
push
lods
and
sub
insl
add
cmp
mov
sub
imul
cltd
pop
dec
shll
pop
mov
mov
dec
push
xlat
ret
or
popf
add
shlb
mov
fiadds
pop
ficoml
jae
add
ret
adc
push
sti
mov
movsb
js
rcll
scas
sti
push
sbb
arpl
outsb
sbb
dec
and
addr16
cltd
sub
xchg
inc
push
shlb
popf
sub
lret
lret
or
test
bound
cmp
xor
xchg
mov
cld
pop
or
out
ret
lahf
cmp
ss
push
inc
subb
lret
mov
mov
and
mov
in
xchg
pop
fwait
mov
inc
cmp
mov
scas
push
cmp
jmp
loope
dec
aad
mov
aad
mov
lcall
imul
enter
loop
push
popa
pmaddwd
stos
adc
cwtl
xor
add
xor
cmpsb
dec
rcll
push
fmulp
popa
sarl
in
sub
pop
push
loope
lds
dec
push
mov
ret
and
divb
fstpt
xor
out
mov
jns
adc
pop
cmp
mov
and
in
popf
test
push
call
xchg
jecxz
mov
pusha
pop
mov
out
insl
repnz
sub
sar
adc
xor
cld
loop
mov
in
ds
sbb
cld
xor
pop
fs
test
ret
out
jnp,pn
insl
pushf
lock
sbb
cmc
push
fwait
out
sub
inc
xor
lret
pop
sub
xor
pop
inc
mov
push
mov
push
dec
fbstp
sbb
aad
idivb
add
add
cmp
fbld
ret
mov
jecxz
mov
or
std
loop
jo
loope
out
in
in
add
or
jl
jg
lods
pushf
mov
push
add
xor
cs
xchg
les
xor
shl
mov
shll
es
and
aam
pop
mov
fld
pushf
or
insb
pop
jle
push
jae
add
cmp
roll
push
jl
leave
pop
test
jle
xor
jge
popf
fcomps
jb
xchg
pop
nop
xchg
xchg
sahf
adc
pushf
aam
es
sub
push
sub
mov
leave
mov
fnstsw
cmpxchg
dec
pop
mov
lea
pop
xlat
jno
insb
aaa
hlt
push
in
addl
test
and
pop
sbb
sub
push
jno
scas
cmp
data16
pop
jb
bound
sarl
xchg
inc
mov
movsl
adc
push
xchg
fimull
enter
sbb
push
loope
xlat
cmp
pushf
sub
jmp
int3
fiadds
mov
jne
jbe
rorb
fdivr
add
dec
subl
sub
jne
bnd
fs
inc
aam
and
outsb
lods
jg
push
sub
dec
push
sub
jns
dec
out
sub
lods
cmpsl
pop
stos
and
mov
lods
jg
mov
nop
inc
add
fbstp
xchg
icebp
aas
sbb
jle
jae
jecxz
pop
push
das
enter
imul
mov
inc
les
gs
aam
mov
imul
adc
mov
inc
popa
add
dec
add
push
mov
mov
cmp
shl
pushf
insl
inc
andb
mov
fmuls
test
jae
rorl
enter
leave
adc
insb
jns
push
and
lret
pop
rcrl
xor
or
mov
sub
mov
rcll
incb
xor
inc
pushf
imul
or
and
stc
adc
fwait
jnp
cld
test
mov
in
movsb
dec
out
cmp
in
loopne
jnp
sub
leave
or
sbb
or
int
cmpsl
jns
or
out
xchg
fidivl
call
aaa
into
addl
and
push
insb
idivb
pop
movsl
xor
ja
and
xor
jae
cltd
cmp
dec
sbb
ljmp
cld
imul
jl
jl
shlb
and
or
cli
dec
mov
out
in
mov
mov
into
inc
test
int
dec
dec
sti
push
and
data16
xchg
mov
cmpl
imul
stos
xchg
aaa
push
scas
das
and
add
xorl
ret
jle
scas
out
cmp
push
clc
and
hlt
push
mov
mov
lcall
in
inc
and
adc
nop
inc
add
mov
inc
adc
mov
inc
mov
sub
push
push
inc
jae
push
mov
pop
enter
fildl
pop
fwait
out
add
xchg
inc
and
imul
aad
sub
movsb
movsb
xor
add
sbb
push
jmp
push
outsl
pop
xchg
mov
pop
mov
clc
aas
mov
data16
mov
inc
rolb
dec
inc
push
dec
das
push
mov
loop
int3
mov
mov
mov
out
gs
cltd
out
xor
xchg
push
jmp
aaa
xchg
cmpsl
or
xchg
xchg
lret
pop
dec
jl
pushw
cld
shll
in
dec
loope
pop
mov
rcl
fxch
sub
and
out
mov
in
cmp
ja
ds
pusha
mov
negl
dec
jg
dec
iret
xchg
shll
mov
pop
shlb
cmpsl
outsl
add
movsl
mov
in
mov
and
cld
or
sbb
shll
cmpsl
or
inc
cmp
inc
add
scas
and
fiadds
cmp
sbb
cmp
or
inc
add
ja
insb
js
js
and
dec
loopne
dec
mov
xor
fiaddl
jecxz
jg
aas
mov
int
mov
jmp
adc
ret
clc
pop
mov
cmpsb
cmc
pop
sbb
test
sub
movsl
fwait
inc
pop
in
inc
mov
mov
push
loop
jmp
lods
mov
addl
add
dec
scas
loopne
xchg
adc
and
jae
lock
testb
add
inc
rcrb
push
jnp
inc
addr16
popf
in
adc
sbb
rolb
xchg
cmp
xchg
push
shl
xchg
sahf
push
daa
popf
arpl
xchg
daa
xchg
mull
ret
arpl
ret
dec
fidivrl
push
mov
movsl
in
or
push
mov
aaa
mov
out
jbe
out
mov
dec
bound
pop
aad
and
jns
pop
push
push
stc
push
cmc
lock
in
out
int
push
mov
bound
sub
mov
mov
cld
xor
cli
jmp
and
xchg
test
lds
sub
rcr
out
pop
ds
repnz
mull
or
pop
sub
sub
xchg
and
mov
xchg
jno
loopne
inc
dec
sbbb
test
push
pop
mov
pop
shlb
jae
hlt
cli
in
sub
test
les
add
jle
pop
pop
testb
lcall
ficomps
add
rclb
sub
cmpl
xor
ds
shll
mov
inc
mov
dec
sahf
or
lret
jbe
cmp
fbstp
dec
sub
pop
cli
insl
xchg
push
inc
inc
xchg
sub
or
inc
mov
lods
or
sub
xchg
cmp
rcrl
es
test
cmpsb
les
inc
call
push
cmp
sbb
fidivrl
aaa
push
jb
push
hlt
adc
mov
int3
sub
xchg
pushf
xchg
enter
mov
mov
cld
jnp
cmp
push
xchg
mov
add
test
movsb
adc
iret
xchg
sbb
mov
aaa
sbb
inc
sub
divl
lret
pop
cmp
icebp
xchg
sbb
les
dec
adc
addr16
xchg
dec
dec
popf
mov
xchg
pop
insb
add
and
dec
stos
ja
xor
dec
jb
cmpsb
gs
push
into
mov
mov
mov
in
bound
sbb
or
mov
sbb
sbb
les
mov
icebp
pop
adc
lcall
imul
fsubrl
mov
push
add
clc
std
shrb
mov
add
aad
or
std
push
lods
cmp
sbb
mov
mov
sub
clc
push
push
ret
test
fldl
push
stos
xor
mov
lea
out
cmp
arpl
jo
iret
sub
into
iret
and
aad
cmp
aas
fs
int
dec
daa
add
xchg
cmc
xor
mov
and
or
scas
xchg
xchg
push
sbb
dec
rcrb
ds
jp
sub
push
sbb
and
xlat
addr16
fs
xor
sbb
dec
xchg
xor
cmpsb
lock
or
in
sub
outsb
mov
and
jecxz
mov
adc
pop
and
in
inc
icebp
leave
add
push
xchg
xchg
fcompl
push
mov
jb
dec
fistpll
data16
mov
gs
cwtl
mov
notb
cmpsb
pop
les
jnp
fcomp
cwtl
mov
mov
push
cltd
je
jno
jg
je
mov
js
cwtl
mov
and
pop
lods
iret
test
cmp
jl
sub
adc
lods
mov
repz
pop
push
pop
push
add
mov
loopne
and
add
outsl
cld
ljmp
int3
ljmp
mov
fdivl
ljmp
movsb
in
add
stos
sbb
es
or
pop
roll
fwait
sbb
in
mov
pop
div
daa
inc
movsl
loope
and
mov
and
fldcw
test
cmp
ret
ljmp
int
or
scas
lods
in
sub
lods
mov
inc
lret
out
dec
aas
dec
iret
push
movsb
jmp
mov
sub
hlt
push
fcmovnbe
dec
cmp
mov
mov
insb
cltd
ds
loope
mov
xchg
jmp
xor
ds
std
lret
push
out
dec
cmp
mov
lret
xchg
hlt
into
ljmp
js
fdivrs
fstpt
mov
adc
insb
aaa
mov
loope
mov
xor
aam
dec
lods
cmp
jo
in
loope
push
aaa
xchg
add
or
mov
test
dec
and
sub
stos
dec
addr16
fs
scas
subb
dec
fcomps
lods
data16
lea
imul
jecxz
jp
das
or
jns
pop
and
bound
xchg
pushf
sub
clc
cs
adc
mov
jbe
push
adc
scas
dec
mov
fs
out
sbb
jl
ficoms
cmpl
sbb
in
pop
lock
sbb
insl
add
xor
inc
or
push
pop
mov
adc
gs
or
pushf
inc
jg
jp
or
jg
repz
and
outsb
mov
push
mov
jle
adc
jl
fld1
mov
in
js
stos
pop
jns
or
jns
pop
subl
pop
pop
push
cmpsl
xchg
or
inc
xor
xchg
pop
in
leave
movsl
fstps
aad
sti
adc
pop
xorl
xchg
push
int3
push
and
or
or
jae
mov
or
mov
testl
lcall
call
pop
adc
adc
sub
xchg
add
mov
aaa
mov
lods
fldcw
dec
jns
fidivrl
movsl
sub
gs
loop
add
xor
int3
pushf
fdivl
inc
inc
jbe
sbb
test
std
sub
or
std
gs
enter
enter
mulb
mov
xchg
cmp
insl
lods
popa
sahf
in
arpl
cs
leave
mov
call
nop
or
mov
fnstsw
pop
shlb
imul
andb
cmp
or
or
mov
inc
mov
mov
pop
inc
jno
es
clc
testb
ret
movsb
and
loopne
sahf
lods
inc
leave
call
pop
adc
cli
jg
push
pop
xor
sub
lcall
xchg
mov
je
mov
gs
rcrl
mov
mov
jmp
sub
ret
or
push
mov
jo
pop
icebp
outsb
dec
popa
xor
mov
sub
push
xchg
cmp
loope
inc
fbstp
stc
sbb
push
arpl
repz
negb
in
or
fcmovnbe
dec
mov
xor
pushf
fs
pop
scas
js
inc
mov
aad
adc
ja
iret
in
cmc
fcompl
sbbb
dec
dec
inc
sub
xor
mov
pushf
lcall
xlat
dec
or
shl
ret
adc
in
loope
sbb
xchg
xchg
roll
in
mov
xchg
push
push
or
hlt
mov
bound
movsl
rcl
movsl
lock
rol
imul
mov
push
xor
cmc
sahf
test
jne
lds
add
loope
pusha
out
insb
ljmp
clts
loopne
clc
and
pop
lods
fmuls
mov
shl
cwtl
inc
stos
aad
mov
fsubp
xchg
incl
sar
inc
adc
push
push
ret
call
xchg
and
dec
cmp
popf
pop
int3
pop
dec
popa
push
dec
push
mov
leave
jno
arpl
out
bound
popa
add
outsb
fwait
clc
mov
add
xchg
bnd
pushf
adc
movsb
sub
add
or
and
xor
int
xor
ret
inc
or
fyl2xp1
icebp
dec
xchg
addr16
mov
pop
lock
das
xlat
mov
movsl
gs
push
jae
sub
int
inc
iret
test
push
clc
add
pop
or
loop
scas
or
dec
loop
fcoml
testb
pop
test
inc
cmc
mov
lods
jne
xchg
xor
xchg
lea
cmp
fwait
loope
or
cwtl
inc
cmc
inc
loop
out
testl
movsb
daa
ficompl
test
lea
ret
stos
punpckhwd
sarl
mov
push
inc
mov
fstps
sbb
xchg
push
fsubr
mov
decb
cmp
jle
sub
test
jge
sub
cmp
imull
insl
cli
cmp
cmpb
sti
xchg
xor
mov
int
addl
fdivs
or
repz
iret
and
push
xor
xchg
repnz
outsb
and
push
jb
cmpl
mov
xor
mov
hlt
mov
sub
stos
mov
dec
stc
inc
mov
inc
sub
movsl
ljmp
sbb
in
xchg
loop
xchg
sti
data16
data16
inc
jg
stos
into
test
xlat
inc
pop
pop
add
mov
cmp
std
lea
fldl
push
data16
cmp
pop
push
mov
mov
mov
add
je
call
in
mov
mov
lahf
loop
dec
sbb
xchg
imul
push
gs
or
cmp
pop
cltd
shrl
lret
incb
mov
or
hlt
push
mov
sub
not
and
add
add
enter
cwtl
mov
or
adc
adc
aam
arpl
pusha
insl
fidivrs
xchg
adc
sarb
lret
es
jnp
icebp
push
in
mov
mov
mov
negb
js
fs
lahf
fs
xchg
into
imul
insl
push
push
cmp
mov
aad
imull
int
push
cmp
sbb
mov
call
es
jp
adc
lods
ljmp
test
dec
mov
jo
mov
scas
sbbb
ficoms
mov
pusha
pop
movb
mov
inc
ja
and
roll
push
dec
or
push
imul
inc
scas
or
jne
daa
mov
mov
mov
jg
test
cwtl
pop
jmp
xor
imul
pushl
jecxz
or
mov
divl
or
aaa
into
pushf
sbb
cmp
sbbl
cmpsl
addr16
outsl
mov
pop
enter
ds
mov
mov
mov
push
mov
or
inc
shlb
mov
fbld
fistps
scas
cmpsl
shll
jns
push
xchg
lret
imul
jge
test
xor
sub
and
push
arpl
mov
dec
out
cmpsl
into
std
mov
or
sub
mov
push
xchg
pop
enter
inc
adc
sti
pop
jnp
data16
les
lds
cmpsl
pop
cmp
cmpsl
adc
popf
add
in
dec
add
fimull
add
imul
jp
add
xchg
ret
roll
sub
pop
lds
movsb
sub
cmpsl
stos
push
and
enter
sar
int3
add
mov
loope
stc
pop
les
sub
mov
fistps
cld
faddl
dec
jbe
lcall
xor
add
mov
outsb
jecxz
pop
xor
cld
sbb
and
push
pushf
push
movsl
sahf
dec
ret
mov
cmp
out
sub
cmp
push
add
sbb
gs
sbb
xacquire
jl
and
push
icebp
sub
int3
insl
dec
sub
pop
mov
dec
push
pop
ds
push
lods
iret
jmp
and
inc
mov
jmp
and
scas
pop
dec
je
adc
imul
dec
mov
sub
arpl
loop
xchg
mov
cmp
mov
jnp
shl
rorl
movsb
xchg
and
pop
dec
negl
mov
sbb
cwtl
sub
add
mov
mov
inc
inc
in
test
bound
cmc
jge
sti
or
arpl
clc
mov
cmp
into
sub
push
add
ljmp
inc
cmp
sub
cmp
and
add
cmp
dec
xchg
gs
insl
pop
aad
je
push
nop
jbe
loope
jae
push
mov
xchg
loope
and
xor
mov
cmp
aaa
shrl
or
mov
in
mov
insb
in
push
std
fwait
lds
jno
movsb
push
mov
rcll
out
out
hlt
sub
xchg
lcall
dec
dec
push
clc
aad
imul
rclb
loope
sub
int
jl
mov
into
fildl
lret
pop
out
lret
mov
jg
js
pop
mov
or
notl
data16
or
popa
out
sub
sahf
stos
mov
mov
outsb
sub
icebp
cmpsl
jb
or
insl
or
int
xor
xchg
or
dec
sbb
das
sbb
inc
daa
imul
cmp
xor
fwait
push
inc
bound
cli
mov
mov
mov
cmpsb
jnp
clc
lret
call
mov
mov
int
and
incl
jno
popf
dec
mov
loope
inc
idivb
mov
lret
js
fxtract
int
or
jl
mov
test
pop
popf
sahf
cmp
or
push
sbb
call
adc
xchg
push
pop
inc
mov
dec
mov
push
sub
pop
test
jg
inc
loop
jl
mov
jg
pop
xchg
pop
daa
fldl
mov
testb
cmp
pop
loope
aaa
mov
test
cmp
pushf
out
mov
xlat
sub
daa
insl
push
bound
jle
scas
xchg
xchg
addr16
push
adc
add
xlat
lds
imul
and
pop
shrl
icebp
mov
cmc
adc
xchg
jge
sbb
aaa
movsl
int
xchg
imul
dec
jnp
and
mov
pop
insb
test
orb
fdivr
and
jnp
je
xorb
dec
aaa
test
and
stos
mov
and
mov
or
cmp
adc
loopne
mov
cmpsb
pop
mov
mov
dec
xor
add
xchg
hlt
movsl
int
jge
or
cmp
loope
mov
dec
sbb
fisubrl
push
ficoms
movsb
jecxz
arpl
not
aad
dec
mov
sbbb
div
add
add
xchg
mov
sbbb
jmp
cmp
mov
lret
scas
cmpsb
sar
stos
inc
bound
rol
sbb
or
xchg
mov
push
pop
mov
lods
mov
cmp
cmp
jle
xchg
mov
not
pop
rolb
pop
adc
test
sbb
test
sbb
aaa
xor
push
add
in
lods
lds
xor
imul
popa
inc
movsb
mov
aad
fucom
inc
push
xchg
dec
pop
shlb
xchg
lahf
ljmp
rclb
or
xor
pop
and
dec
push
pushf
std
inc
lds
lcall
or
xchg
or
rcll
movsb
out
mov
inc
push
add
jo
cmp
xor
into
aam
pop
sbb
push
popa
inc
aad
sarb
pmaddwd
test
iret
aaa
scas
dec
jns
das
add
inc
cmp
xor
ret
mov
fidivrl
lock
lods
add
sti
cltd
fildl
fs
pushf
shr
std
push
sahf
ret
mov
inc
out
xorb
leave
pop
rolb
je
fs
in
cltd
xor
xor
mov
mov
dec
nop
and
adc
sub
rcrl
mov
addr16
dec
test
pop
int3
pop
leave
add
insl
and
fdivrl
mov
insl
xchg
insl
sub
loop
cwtl
xchg
mov
loop
jle
call
pop
adc
sbb
cmpsl
mov
lods
lods
cmpsl
fcmovu
ficomps
xchg
js
test
cmc
subb
imul
adc
mov
mov
lea
mov
mov
mov
mov
add
add
dec
ljmp
mov
mov
test
add
lods
push
dec
sub
and
fcmovb
and
out
xchg
lret
lahf
jns
mov
jmp
std
mov
outsl
and
push
and
xor
and
outsl
inc
jne
pusha
popa
inc
into
inc
xchg
cmp
mov
mov
lcall
pop
push
jo
arpl
and
and
mov
push
xor
xorb
dec
mov
gs
scas
outsl
push
dec
fstpl
popl
mov
jns
bnd
adc
cltd
jge
test
call
sub
and
adc
adc
je
rol
notb
shrb
mov
mov
sbb
pusha
les
jnp
pop
dec
les
mov
or
aaa
cmp
fdivl
push
fistpll
ret
js
scas
mov
call
dec
cs
sub
cmp
dec
mov
test
test
jbe
sahf
insl
sbb
rcrb
clc
push
lcall
add
iret
and
dec
and
loop
pop
xchg
jmp
ja
pop
jno
cmp
adc
cmc
addr16
push
cmpl
mov
icebp
fucomip
xchg
addr16
mov
sbb
shl
ss
sub
popa
mov
or
xchg
and
pop
add
ret
push
das
mov
push
mov
xchg
popf
test
push
sarl
dec
cmc
repz
loope
xor
or
nopl
jo
rol
lods
adc
cmp
push
insl
jae
pop
repnz
inc
shll
xchg
insl
fsubrp
adc
imul
mov
xor
mov
test
or
sbb
mov
mov
inc
push
bound
jmp
sub
mov
pop
test
cmp
int
xchg
es
adc
add
cmp
sbb
mov
repz
rcrl
and
and
cmc
jb
ds
jno
adc
in
clc
sbb
das
pop
and
mov
idivb
imul
inc
mov
cwtl
mov
fmull
jb
insb
aad
testb
xchg
xchg
subl
inc
pop
out
test
mov
movsl
lret
push
shll
add
xchg
dec
movsl
mov
jge
mov
lar
mov
cwtl
mov
inc
std
xor
add
into
adc
pop
pusha
cmp
dec
mov
fcoms
xchg
addr16
jle
mov
mov
sub
cmp
test
aas
jp
jae
mov
aas
push
xor
test
das
clc
leave
dec
inc
push
mov
mov
push
and
fdivs
in
div
rclb
jmp
dec
sbb
lcall
mov
pop
dec
clc
xlat
jle
inc
daa
sbb
pop
out
pushf
sbb
mul
call
push
movsb
addr16
pushf
adc
jmp
lds
es
sub
aas
in
decb
lea
cmp
fwait
lcall
cld
add
mov
push
aaa
stos
jbe
pop
stos
mov
fcomps
and
fs
scas
aas
es
sub
mulb
pushf
inc
fnsave
and
aas
or
fdivrl
jo
xchg
jno
addr16
sub
cmp
cltd
mov
jmp
inc
push
add
xchg
sub
sub
orb
das
fcoml
stc
lret
loop
roll
stos
mov
and
std
mov
cmp
xor
mov
aad
lret
inc
jmp
testl
cmpsb
jnp
fisubrs
adc
and
mov
shlb
jb
or
adc
lods
mov
scas
call
mov
outsb
dec
jnp
add
lcall
shl
icebp
cltd
in
push
data16
inc
pop
jecxz
leave
outsl
stos
adc
push
add
xor
fs
xchg
imul
cltd
fdivp
push
mov
into
adc
or
jg
dec
cs
add
xchg
leave
jne
daa
mov
and
sub
xchg
pop
insb
ja
xchg
jle
shlb
mov
sbb
add
lock
out
lock
flds
push
inc
ret
xchg
sub
xlat
push
adc
xor
stos
or
insb
mov
sarb
aam
iret
push
std
push
nop
mov
cmp
bound
pop
cwtl
adc
pop
pop
jnp
imul
sti
ja
js
les
push
mov
pop
mov
sbb
mov
fidivl
sahf
loope
movsb
sar
mov
jnp
add
jp
idivb
xor
clc
inc
jecxz
neg
test
xor
cmp
and
xor
aam
aaa
rcr
inc
mov
sbb
sti
cmpsb
pop
adc
inc
aaa
mov
mov
pushf
fchs
push
adc
mov
jns
xchg
push
mov
movsl
pushf
jae
stc
arpl
icebp
xor
adc
sahf
sbb
sub
xchg
pop
cmp
pop
cmp
fidivl
js
jge
jns
pop
fwait
mov
xor
je
pop
xor
pop
dec
mov
shll
fs
setno
inc
mov
and
dec
cli
lea
in
rorl
add
adc
iret
pushf
bound
mov
insb
or
aam
fs
das
stos
jl
shl
stc
add
xchg
pusha
lcall
idiv
gs
or
enter
pop
or
push
xchg
stc
rcll
loope
cs
push
pop
mov
jae
test
jmp
in
inc
xchg
shlb
mov
stos
popa
jbe
mov
mov
aad
adc
xchg
out
fdivr
insb
cmp
out
jnp
mov
sahf
mov
add
bound
clc
push
pop
jae
pop
mov
cltd
cmp
xor
fwait
xorb
imul
iret
cli
dec
iret
sahf
inc
cmp
fs
bound
adc
lret
xor
out
adc
xor
clc
cmc
lock
movsb
fstl
jnp
jl
jno
arpl
inc
popa
pop
mov
aas
mov
xchg
xlat
dec
xor
inc
push
fcmove
loope
cld
scas
push
frndint
cli
pop
mov
loop
add
int
sub
ss
xchg
adc
inc
cltd
cmpb
xor
xchg
lret
inc
fists
or
add
jg
mov
sub
data16
pop
mov
pushf
daa
dec
push
mov
lret
aas
pushf
sbb
xor
cmp
loope
jecxz
mov
mov
mov
xchg
adc
dec
xor
testb
addr16
rorw
pop
jge
iret
cmc
and
mov
push
out
xchg
mov
test
push
and
lock
cmp
insb
rcr
mov
cli
xchg
inc
imul
push
mov
mov
ss
jle
pop
and
pop
adc
inc
lock
loope
push
sub
dec
inc
es
bound
pop
inc
pop
push
jbe
les
movsl
lcall
dec
pop
pop
xchg
imul
aas
mov
inc
xor
fcmovnb
imul
adc
ja
cmp
les
pop
push
test
arpl
movl
mov
das
out
push
es
sbb
psubusb
popa
and
xchg
and
enter
pop
mov
shl
popa
repz
dec
mov
push
stos
add
sbb
sub
ja
xor
pop
jecxz
adc
push
mov
loopne
aas
jns
or
cmpsb
dec
jg
and
add
jae
sbb
xchg
lea
loopne
ljmp
sub
sub
lods
ret
cmp
adc
fadds
sub
ljmp
paddb
mov
push
sbb
pop
incb
cmpsb
or
xor
inc
lods
dec
stc
inc
jle
stos
dec
aaa
push
cld
and
pop
jl
inc
inc
fndisi(8087
call
mov
stos
jl
mov
mov
xchg
fsubl
mov
and
jae
fisubrl
lret
out
jns
je
data16
or
push
dec
mov
mov
mov
ret
cmp
add
rcl
test
sbb
leave
mov
sub
in
sbb
jp
pop
in
pop
adc
jp
repnz
andl
sarl
orl
mov
scas
lock
ffreep
xlat
inc
mov
jl
jmp
lods
fprem1
adc
jbe
test
psrlq
add
jnp
and
in
leave
xor
mov
pop
fisttpll
cmc
sbb
jne
pop
xchg
xchg
movsl
pop
jnp
jb
add
pop
xchg
jle
xchg
ficoms
dec
sbb
cmc
jbe
push
lea
test
loopne
mov
dec
inc
out
movsb
std
jp
mov
cmpsl
cmp
cmp
fnstsw
lcall
xchg
ss
sbb
fcmovb
add
rorl
pop
mov
mov
sbb
dec
js
mov
aas
in
adc
push
xorl
aam
xchg
xlat
insb
mov
lock
push
sub
pop
push
add
aad
aas
mov
fildll
or
push
subw
mov
add
loopne
xchg
xor
insb
pop
adc
xor
xor
push
fdivl
dec
movsb
push
addr16
dec
insl
mov
push
jle
fsubrs
fistpl
cmp
jno
push
ds
nop
adc
push
dec
mov
pop
xchg
test
cmp
xor
inc
and
idiv
pop
push
push
jmp
xchg
clc
adc
cmp
adc
push
xor
js
aaa
sub
pushf
mov
sbb
pop
rolb
sub
push
add
push
call
jmp
push
adc
push
into
mov
jge
test
lahf
jbe
mov
aad
movsb
xor
xchg
lret
aas
aas
es
inc
lods
mov
mov
add
jg
xor
aad
jp
jp
jmp
jge
mov
cmp
mov
test
arpl
lds
outsl
daa
xor
dec
jnp
lret
mov
dec
fwait
jmp
pop
mov
pusha
or
rorl
push
push
pop
adc
xchg
pop
mov
cmp
add
mov
mov
mov
stos
insl
fists
xchg
mulb
icebp
mov
sbb
icebp
push
into
mov
cmp
add
sahf
cmpsl
push
mov
ja
fcmovu
movsl
mov
and
repnz
add
mov
daa
jge
fdivrl
sti
dec
add
cmp
push
outsb
cmpsb
mov
dec
sbbb
lds
ds
mov
psrlw
jbe
cmp
xchg
leave
loope
outsb
or
jns
shl
adc
lret
xlat
insb
sub
into
lods
mov
stc
ds
mov
lock
lods
sbb
mov
cli
shll
sbb
leave
pop
sub
sahf
sbb
pop
testb
adc
jmp
imul
dec
into
test
insb
mov
add
outsl
in
rcr
xchg
les
dec
or
jb
xchg
xchg
and
das
out
inc
cmc
test
mov
faddl
inc
lahf
jg
rcrl
or
loopne
lods
pop
cld
mov
push
insl
lock
ret
jb
jle
or
xchg
aaa
or
rcr
pop
add
shlb
dec
enter
sub
dec
imul
btr
call
and
loopne
adc
mov
mov
sti
int
not
hlt
outsl
mov
add
cmpsl
push
aam
mov
push
push
cmp
xor
mov
std
jle
mov
lea
or
jmpw
or
mov
ret
mov
enter
inc
cmc
mov
rorb
fcoml
inc
sti
pop
ja
shrb
loop
ds
lcall
jg
leave
pop
rclb
sbb
mov
push
dec
cmc
inc
addr16
icebp
insl
jecxz
int
out
pop
mov
cmc
call
inc
icebp
psrlw
and
jae
dec
jnp
std
loopne
leave
sbb
cltd
dec
push
das
fmuls
loope
adc
sbb
in
mov
push
push
pop
and
dec
inc
fwait
enter
imul
lcall
dec
jge
scas
cmp
dec
xchg
loop
dec
daa
pop
fnsave
jns
movsl
jnp
jle
mov
sub
lods
test
cmp
inc
scas
lahf
addr16
and
cs
jg
adc
clc
in
inc
js
pusha
arpl
pop
sub
lret
aam
jp
cmp
rolb
sahf
loope
jne
dec
js
push
pop
in
cmc
into
testb
sub
mov
mov
mov
inc
out
fs
xor
movsb
add
sub
insb
dec
jl
sub
xchg
push
movsb
loope
sbb
or
jp
add
cmp
push
iret
inc
cltd
gs
pusha
sub
stos
lock
ss
dec
into
lret
pop
sub
mov
cmpsl
sbb
pop
into
lods
popf
sbb
pop
inc
push
imul
clc
mov
mov
and
pop
pushf
loopne
loop
or
push
mov
jns
loopne
push
mov
jne
outsl
add
adc
fwait
jge,pn
xchg
in
or
mov
aad
jo
dec
mov
test
lods
dec
addr16
loop
leave
loop
pop
pop
xchg
mov
push
fisttpll
fisttps
je
mov
aad
call
outsl
cmp
jg
and
dec
sbb
rcll
pop
xchg
push
inc
lods
mov
aam
xor
hlt
jb
pop
jns
dec
xlat
jp
lds
shl
pop
lahf
imul
scas
wbinvd
fwait
mov
dec
xchg
cmc
scas
fadd
roll
loope
jecxz
and
mov
mov
mulb
lock
jbe
stos
jno
adc
pop
mov
in
rclb
pop
hlt
and
sbb
inc
out
cwtl
pop
sbb
dec
jecxz
lods
jmp
cmp
popf
push
mov
mov
int3
cmp
testl
int3
call
jae
scas
fimull
xlat
js
mov
ror
mov
xor
stos
in
xor
jb
sti
lret
das
xor
mov
jecxz
dec
into
andb
ja
and
mul
call
testb
mov
test
les
inc
fsubrs
inc
xlat
and
pop
lods
ds
xor
shrb
test
add
dec
enter
xor
xchg
out
shll
mov
cltd
data16
sbb
add
cli
roll
insb
rolb
push
sub
cmc
test
test
flds
nop
xchg
cltd
out
mov
mov
fs
jne
mov
and
push
in
inc
pop
xlat
and
xchg
sti
pop
cs
mov
sub
lods
push
sbb
dec
or
icebp
mov
mov
adc
lock
xor
gs
fcmovb
gs
cmp
inc
pop
ret
xchg
ror
xchg
xlat
mov
les
adc
mov
jg
mov
mov
sub
push
in
inc
inc
xor
aas
pop
and
data16
popa
frstpm(287
jmp
or
pop
mov
icebp
sub
xor
inc
daa
out
hlt
dec
sbb
jo
arpl
inc
aas
cmp
mov
xor
push
jnp
pop
int3
jecxz
out
sub
xchg
icebp
iret
js
xchg
mov
push
push
or
mov
outsl
add
and
arpl
mov
jb
add
cli
aas
push
jno
data16
mov
sbb
stc
adcl
push
mov
test
jne
fidivrl
cmc
addl
mov
and
push
mov
in
outsb
stos
xor
stos
sti
aaa
cmp
enter
inc
pop
outsb
sub
daa
pop
mov
xchg
adc
out
lahf
test
sub
mov
sub
mov
jmp
cwtl
int3
fprem1
pop
loopw
lret
mov
out
jbe
hlt
les
adc
das
out
xchg
les
loope
mov
cmp
inc
jnp
cs
cmp
in
cmp
shl
sbb
adc
sub
mov
ret
mov
hlt
lret
test
inc
sbbl
test
repnz
pop
jbe
xor
xor
pop
repz
sub
mull
mov
or
and
pusha
lods
in
loop
pop
cmp
stos
call
andl
and
and
jns
mov
loopne
cmp
arpl
leave
xchg
jmp
sbb
and
test
push
jecxz
xor
jmp
push
mov
mov
outsl
fs
push
fcoms
imul
sbbl
icebp
jge
cmp
ja
lock
outsl
bound
xor
fisttpl
pop
movsl
mov
push
dec
xor
xor
int3
mov
lahf
scas
in
xor
lods
mov
inc
and
stc
cltd
mov
rolb
push
sub
push
pop
sub
int
testl
je
pop
clc
push
ds
or
pop
jno
inc
and
flds
adc
adc
test
and
pop
out
mov
cs
mov
cmpsl
push
mov
out
sub
das
push
mov
adc
xchg
dec
or
out
or
jns
xchg
pop
js
les
mov
push
test
and
add
notb
jne
or
test
popf
int
mov
out
lock
mov
xor
ss
scas
enter
xlat
cmpsb
ds
test
stos
mov
scas
int3
push
inc
adc
push
or
xchg
scas
mov
je
aaa
xchg
sbb
lods
imul
sub
inc
subl
inc
ss
and
push
or
mov
leave
push
or
movsl
notl
aaa
jo
jmp
xchg
inc
push
adc
mov
icebp
mov
and
test
ret
mov
into
xchg
pop
cmp
pop
aas
loop
cmc
pop
mov
ret
adc
pushf
xchg
mov
xor
leave
sbb
push
cld
mov
or
sub
mov
divb
aaa
cmpb
fmull
nop
dec
iret
stos
cltd
inc
idivl
push
fnsave
or
or
jg
mov
sahf
add
jno
cs
jae
lds
loope
in
jmp
cld
aam
jmp
loope
std
sahf
sbb
test
dec
adc
inc
dec
adc
sub
lock
addr16
in
xlat
push
push
in
inc
inc
lret
pop
movsb
icebp
mov
in
add
ret
jb
mov
inc
test
lods
jns
push
ja
call
dec
les
xchg
inc
dec
xor
repz
in
mov
sub
sub
addr16
bound
xor
lods
pop
mov
pop
sahf
push
aad
aad
xor
punpcklwd
cmp
inc
pop
cmp
arpl
xchg
jl
dec
lahf
dec
jb
fisubrl
inc
loop
and
sbb
sbb
jae
or
mov
int3
outsl
push
mov
je
and
cmpsb
jmp
das
and
nop
cmp
dec
fsts
mov
mov
push
xchg
mov
adc
leave
xlat
test
add
xor
mov
sub
fdivr
orl
pop
rcr
pop
out
pop
in
sbb
jbe
mov
and
std
jne
xor
mov
mov
and
mov
pop
pop
pop
out
divb
ja
shrl
rcll
fcomps
inc
les
pop
xor
mov
int
jle
aas
adc
cltd
sub
add
inc
cmp
pop
xor
mov
repnz
cmc
add
mov
adc
das
xor
ja
adc
sbb
and
std
jecxz
dec
and
sub
in
jl,pn
bound
adc
dec
dec
mov
outsb
aad
push
mov
aad
fsubr
jo
cmp
inc
loop
mov
pop
lea
outsb
jns
pop
shlb
test
loopne
scas
insl
gs
idivb
mov
cmp
imul
rorb
ret
daa
cli
cmp
or
enter
pop
cld
loopne
jne
cmp
xchg
inc
xchg
or
pop
jno
xchg
pop
ss
test
in
or
das
outsb
ljmp
jne
and
movsl
imul
sti
jno
jns
dec
sub
scas
jb
xchg
add
addr16
cmc
fsubl
adc
add
mov
mov
enter
cli
notb
addr16
scas
jbe
pusha
cmp
or
xchg
scas
fsub
cld
movsb
pushf
cli
pop
mov
cmp
lret
mov
cwtl
int
dec
inc
into
xor
xor
pop
imul
jmp
arpl
bnd
or
es
mov
popa
adc
fimuls
pop
pop
fnsave
and
xorb
jns
and
aaa
push
sbb
cmp
jbe
mov
pop
aad
jmp
out
pop
stc
cmp
pop
and
jp
cld
xchg
jmp
mov
xchg
and
out
cltd
mov
addr16
xchg
lods
pop
push
int3
rorb
sar
inc
clc
addr16
lock
push
inc
pop
incb
ja
subl
mov
xchg
or
dec
push
cmp
jp
ss
lods
sbb
mov
jmp
mulb
icebp
mov
jno
out
ss
cmpsb
insb
jne
cmpsb
test
dec
test
inc
rcrl
pop
jmp
push
fldenv
lods
decl
push
movsb
sub
or
das
call
gs
push
pop
in
mov
sbb
ds
mov
aad
inc
pop
negb
shll
ret
rcpps
call
dec
call
aas
popa
dec
xor
push
sub
or
inc
or
mov
outsl
sti
xchg
jae
xchg
insb
lock
mov
inc
stc
scas
jno
testl
pop
sbb
xor
pop
dec
stc
ret
cmp
iret
jmp
jno
movsb
pop
inc
lods
inc
aas
mov
inc
dec
mov
xor
pop
roll
jge
xor
mov
int
testb
das
stos
dec
push
cld
xchg
mov
pushf
nop
stos
cmpsl
popf
fisubl
or
jle
jno
ljmp
jb
nop
add
std
xor
push
or
mov
movsl
lret
lcall
lret
inc
inc
imul
dec
add
dec
mov
xlat
shlb
leave
je
jge
icebp
repz
dec
inc
aas
sbb
push
fildl
test
into
sub
fldenv
in
scas
and
cli
adc
popa
fwait
adc
ret
int
push
dec
movsl
pop
pusha
out
sbb
cltd
les
mov
jmp
pop
push
dec
lret
popa
hlt
push
push
repnz
aad
cmpsl
adc
or
xchg
jnp
out
aam
cmp
lret
push
dec
les
dec
jecxz
scas
mov
pop
mov
fcmovnb
jle
dec
xchg
iret
jg
xchg
lock
iret
std
mov
dec
jp
and
subb
movsl
push
cmpsb
sub
out
jb
out
inc
sub
mov
stos
shrb
cs
movsb
mov
jae
jg
js
xchg
int
call
mov
jns
jb
fsts
pop
pop
dec
pushf
into
ds
js
and
repnz
mov
out
sbb
dec
sub
in
pop
mov
test
dec
xor
mov
insb
clc
or
test
push
pop
movsl
xchg
pop
pop
pusha
es
cwtl
popf
fsubrl
mov
cwtl
xchg
aam
push
popf
dec
js
movsb
insl
and
add
cld
jecxz
or
js
adc
jp
popa
add
lea
in
xchg
insl
mov
sbb
push
add
nop
lods
cli
sahf
hlt
and
add
sbb
push
jp
sbb
push
gs
data16
scas
cld
fbld
mov
aad
push
and
xchg
mov
sbb
stc
inc
mov
mov
and
jne
mov
sbb
dec
cmp
push
xor
and
pop
sbb
cmp
lock
fsubp
add
sbb
inc
mov
pop
out
out
adc
rol
xchg
lcall
icebp
mov
mov
testb
jl
stos
sub
inc
pop
xor
fdivl
sbb
cwtl
clc
add
pop
cmp
mov
adc
mov
mov
adc
mov
xchg
push
pop
pop
lret
fdivrs
sbb
nop
cwtl
decb
insl
call
inc
jle
or
cmpsb
shll
jecxz
or
jnp
sub
push
adcb
or
pop
mov
push
push
jl
in
call
inc
js
test
clc
imul
faddp
js
xor
jne
cmp
pop
fcoml
dec
mov
or
or
sbb
ja
lods
cmpl
nop
dec
repnz
xchg
enter
cltd
iret
dec
je
int
mulb
lcall
add
into
rcr
ss
mov
outsb
add
cld
mov
cmp
ljmp
pop
orl
loop
les
cmc
sub
pusha
iret
cmp
insb
xor
test
adc
iret
mov
push
push
push
jae
xchg
lods
cwtl
inc
dec
fmull
je
push
cs
ljmp
jl
pop
dec
or
jecxz
or
ficomps
xlat
int3
dec
push
fwait
dec
lea
mov
lret
sub
adc
sub
inc
pop
loopne
pop
xchg
ljmp
pop
adc
fwait
jns
dec
arpl
lods
ss
mov
shll
nop
inc
aam
daa
ret
lcall
shll
and
in
push
lds
jnp
jae
xchg
xchg
fcmovb
addr16
xchg
mov
inc
xor
sti
mov
fimull
pop
push
adc
daa
mov
js
fstps
hlt
jo
adc
neg
in
ss
fwait
pop
and
jmp
xchg
loop
sbb
sti
into
lods
mov
pop
aaa
lds
cwtl
inc
inc
popa
mov
dec
shrl
std
cmp
mov
insl
push
pop
mov
out
dec
into
js
mov
xchg
mov
push
scas
pop
sub
iret
jg
call
mov
movsb
push
orl
mov
aam
jae
sub
jg
imul
iret
leave
out
lds
inc
repnz
pushf
xchg
in
mov
or
call
js
lods
push
xor
mov
xor
lahf
and
push
mov
push
mov
mov
ret
negb
lods
and
test
cmc
aam
push
nop
dec
mov
push
pop
ret
mov
hlt
mov
xlat
and
jbe
in
mov
mov
and
jne
pop
xchg
shl
outsb
sbb
decb
xchg
cmc
cmp
outsl
in
into
mov
lods
push
test
mov
fstl
testl
cli
adc
fs
rolb
push
frstor
icebp
or
inc
inc
or
pop
jne
ret
xchg
jge
fsubl
or
dec
dec
xchg
pop
addb
cmp
xorl
loop
dec
sbb
test
add
push
in
negl
push
jns
movd
dec
mov
fwait
push
lcall
arpl
je
es
or
mov
dec
jnp
inc
cltd
rcll
clc
adc
xchg
xor
pushf
inc
jecxz
out
sub
int3
or
pop
xchg
sub
xlat
cmpsb
outsb
nop
xor
shrb
push
enter
jle
jnp
xor
jae
xor
and
push
lock
add
sbb
jg
mov
cmp
lret
loope
sarl
cld
push
pop
sub
mov
test
pop
adc
mov
ljmp
stos
sub
dec
jne
inc
es
in
lds
in
lock
daa
inc
or
out
hlt
lods
pop
dec
out
enter
repz
sub
xor
xor
int3
dec
jmp
pop
movsl
mov
rorl
test
and
sub
orl
in
inc
dec
movsb
xchg
inc
dec
mov
and
xor
sbb
add
jmp
lahf
sub
sub
out
ret
dec
mov
int3
sarb
scas
inc
mov
lods
mov
mov
stos
rorl
data16
push
mov
xchg
add
inc
into
jecxz
mov
cmp
dec
pop
jne
scas
ret
mov
out
xchg
xor
push
cs
pop
push
push
dec
and
mov
mov
push
inc
mov
in
push
or
jno
imull
mov
sub
dec
xor
mov
sbb
mov
aaa
sub
pop
mov
push
arpl
push
es
iret
out
out
ficompl
xchg
sbb
xchg
mov
and
mov
sbb
ds
sbbb
aaa
sbb
push
mov
add
and
push
jp
sub
test
dec
cltd
incb
aad
imul
fdivrs
pop
jl
sbb
loop
xor
mov
fidivrl
subb
ret
push
mov
movb
xor
jnp
enter
adc
lcall
jo
loop
andb
inc
cmp
dec
rcrb
test
and
jge
mov
sbb
fsubs
decl
push
xor
je
or
imul
jle
xchg
out
leave
and
mov
scas
jg
jl
iret
clc
imul
inc
imul
mov
sbb
stc
push
sbb
mov
out
fisubrs
cltd
popf
jb
pop
mov
and
push
hlt
fs
mov
hlt
add
push
mov
cmc
arpl
shll
jb
mov
dec
jae
cmp
lcall
add
cmp
aam
mov
adc
cmp
add
inc
push
dec
push
dec
xchg
inc
mov
popa
pop
cmpsl
cmp
push
push
lds
jae
out
inc
sbb
push
push
push
jb
das
or
jg
pop
ds
xchg
xchg
or
push
add
push
stos
ret
jae
int
aad
jnp
adc
test
test
rcrl
orb
push
xor
mov
js
inc
push
inc
sbb
std
test
ficoms
mov
jecxz
jae
mov
jne
es
pop
fldenv
inc
mov
mov
cmp
leave
hlt
sbb
stos
test
mov
scas
enter
mov
jmp
jl
push
popf
push
fiaddl
lods
pop
stc
dec
into
imul
mov
xchg
mov
fmuls
stos
std
sarb
in
dec
xor
test
leave
sub
jg
lds
out
sub
push
pop
addb
xor
jnp
mov
jbe
int3
xchg
cld
lret
cmpsb
lds
cmpsl
and
fildll
sbb
lods
pop
aam
imul
adc
mov
xlat
xchg
lds
inc
pop
shrb
imul
jae
repz
aaa
subl
xor
add
cmp
push
insb
pusha
xchg
icebp
mov
sbb
lcall
mov
mov
add
xor
in
loope
pand
sub
push
inc
adc
testl
stos
fisubl
sarl
xor
iret
and
ljmp
or
cmp
or
inc
xchg
lahf
fistpll
jg
sub
add
mov
or
fs
add
mov
lcall
inc
jmp
loop
das
xor
andl
dec
inc
jns
mov
jecxz
mov
rorb
into
test
xchg
pop
mov
mov
push
ds
fiadds
mov
loopne
movsl
popf
jle
pop
dec
hlt
jle
popa
sub
jae
mov
cli
or
sti
and
fsubr
int
mov
sub
inc
adc
idivl
push
push
inc
sbb
ret
aas
ss
xor
shl
lods
es
jae
sub
adc
xor
ja
mov
out
outsb
int3
ds
push
lods
mov
enter
pop
push
mov
ds
int
stc
jne
jg
mov
fs
loope
adc
lcall
mov
in
lea
sbb
mov
lcall
push
push
arpl
cs
lcall
jmp
mov
add
fimull
jo
andb
stc
push
xchg
cwtl
xchg
or
mov
mov
add
jge
mov
dec
stc
sub
pop
push
inc
aas
jb
add
fistpl
nop
aas
lret
frstor
cmpsb
add
test
jae
xchg
test
frstor
rorb
fnstsw
sahf
iret
dec
popf
test
sbb
jmp
jo
dec
js
cmc
dec
add
jb
mov
daa
xchg
push
jae
mov
sub
mov
xchg
in
xchg
add
fdiv
cmp
push
in
stos
mov
popa
add
in
inc
mov
fcmove
sarb
stos
cmpsb
add
sbb
adc
add
or
pop
xor
xchg
cmpsb
int3
mov
dec
mov
aam
out
jmp
aad
mov
ja
mov
sti
sarl
pop
push
xchg
sbb
or
push
shrl
sahf
sbb
imul
les
and
dec
arpl
arpl
addr16
xchg
sub
mov
mov
shrb
lds
inc
lcall
stc
mov
icebp
fucomip
adc
or
pop
dec
stos
and
addr16
loope
shr
pop
cld
add
fisubrs
jecxz
add
xlat
mov
addb
data16
shlb
dec
into
or
imul
mov
leave
pop
push
loop
movhps
stos
nop
push
insb
mov
lea
jp
mov
dec
inc
sub
lcall
dec
adc
dec
es
or
push
vcmpsd
xor
lods
sub
pushf
stos
pop
xor
jno
sbb
mov
ror
jo
push
push
mov
sub
movsl
les
xchg
popf
xchg
pop
or
imul
icebp
cmc
inc
jmp
add
in
or
push
sub
mov
sub
pop
insl
imul
adc
lcall
push
addr16
cmpl
addl
jno
frstor
jo
insb
dec
call
cmpsb
push
adc
or
in
and
jns
div
sbb
outsl
dec
pop
fwait
call
cmpsl
scas
cmpsl
sub
inc
call
lods
dec
sbb
pop
mov
cmpsl
lods
insb
add
imul
out
sub
pop
push
cmp
sub
mov
cmc
mov
dec
mov
decl
in
mov
in
inc
fs
mov
hlt
push
and
lds
das
xchg
pusha
xchg
mov
lret
xor
mov
push
lret
mov
xorb
cmpb
cmp
out
xor
mov
add
pop
addr16
mov
ret
rolb
je
fwait
leave
popa
out
cmp
pusha
sub
or
sbb
adc
shr
lret
cmc
in
jg
loop
imul
mov
mov
pusha
sahf
mov
daa
inc
jae
pop
mov
sti
dec
les
sahf
movsb
clc
lcall
fs
cs
sbb
mov
add
jns
push
push
or
fs
jp
jo
ret
mov
loop
lret
cmp
cmp
jecxz
add
adc
or
int
inc
popa
or
jnp
loopne
jnp
and
jge
sarl
out
jp
aad
push
dec
pop
cs
mov
lret
mov
mov
fstps
insl
fsub
inc
xchg
int3
sub
add
mov
dec
lcall
movsl
sbb
sbb
movsb
cmp
jno
push
pop
repz
iret
sub
pop
adc
pop
dec
mov
dec
out
popf
xchg
clc
cli
inc
jae
mov
mov
shrl
lock
dec
xchg
test
inc
jmp
sub
shrb
xchg
outsl
mov
faddp
addr16
push
sti
mov
cmp
pop
bound
movnti
mov
shlb
ror
addl
dec
ficoms
xlat
popa
icebp
imul
push
xchg
cli
jb
test
psllw
gs
adc
and
lahf
aad
int
in
jl
mov
call
and
jns
mov
pop
pop
push
and
mov
sub
pop
push
test
xchg
mov
push
or
push
dec
xchg
xor
mov
repnz
pop
sub
test
scas
jge
sbb
syscall
cmp
push
mov
ss
lods
in
add
ficoms
mov
ss
lods
jmp
adc
lea
mov
fistps
fistpll
mov
rolb
add
into
jmp
or
and
sbb
movsb
ret
repnz
cld
call
out
pusha
es
pop
add
ret
jne
incl
jnp
mov
outsb
mov
shlb
inc
jge
or
mov
adc
or
push
mov
ret
cmp
sbb
sub
inc
jbe
mov
cli
loope
add
cld
pusha
scas
cmc
and
stc
sbb
scas
sub
push
mov
test
or
cwtl
inc
cmc
adc
pop
and
cmc
cmp
jp
xchg
xchg
pop
mov
and
fprem
lods
repz
pop
jp
ret
jnp
mov
std
lcall
adc
dec
fldt
icebp
shl
and
pushf
mov
stos
movsb
xor
mov
adcb
popa
mov
pop
xor
mov
insl
mov
mov
jbe
stos
dec
fstps
cmc
dec
stos
cmpsl
gs
mov
scas
xchg
lock
dec
and
loope
push
xchg
sub
xor
mov
arpl
xchg
ret
outsb
xchg
fidivl
cmp
out
in
cmp
inc
cwtl
xchg
loopne
cmp
sbb
fadd
out
movsb
ss
cmp
mulb
icebp
sahf
or
imul
test
cmp
icebp
clc
dec
icebp
cmp
push
test
or
pop
shll
and
in
in
es
xor
or
call
and
dec
std
bnd
push
imul
lds
aad
inc
clc
push
push
mov
sbbb
inc
cmc
sbb
adc
add
mov
std
xchg
adc
outsb
popf
lret
roll
ljmp
or
cmp
cmp
cld
push
and
cmp
lcall
cli
lret
add
xlat
dec
mov
sbb
cltd
test
cld
xor
ljmp
or
cmp
cmp
fildll
or
or
inc
mov
mov
ja
push
bound
xor
xchg
test
out
mov
sbb
and
icebp
jle
add
add
push
inc
dec
pop
sub
inc
cmp
push
cmp
lahf
mov
rorl
or
popa
jle
inc
jbe
and
adcl
ret
daa
subl
in
rclb
jp
pop
add
ror
sbbl
push
cmpl
insl
pop
es
fdivs
add
sbb
clc
jbe
aam
xchg
sub
daa
sahf
into
cmp
sbb
and
mov
test
scas
int
xor
jp
jns
ror
or
sub
lock
fildll
cld
mov
pushf
sub
mov
in
stos
and
imul
mov
inc
mov
mov
hlt
sbb
rol
jne
hlt
mov
dec
push
cwtl
push
cmp
inc
popf
fdivrs
loop
jp
call
jge
and
mov
dec
push
pop
je
sub
mov
outsb
dec
sbb
lret
xchg
cmpsb
inc
cmpsl
mov
test
sbb
xchg
xor
xor
inc
push
fidivrs
mov
icebp
push
mov
xchg
bound
test
cmpsl
push
cltd
lcall
arpl
push
aad
push
cmp
fildl
xor
mov
repnz
mov
pop
jg
pusha
xchg
pop
pop
ja
fwait
cwtl
lock
stc
sbb
rcr
xchg
out
aas
movsl
sub
lock
pushl
add
xchg
es
fs
cmpsl
jmp
jp
lods
xchg
pop
add
adcl
jbe
xor
sub
push
movsl
mov
push
pop
and
mov
cmpsb
les
inc
inc
mov
jb
mov
mov
sbb
and
je
xlat
roll
sbb
adc
in
push
add
push
and
mov
adcl
jbe
lcall
mov
xchg
insb
mov
fwait
loope
cmp
mov
mov
jge
pop
pop
lret
gs
add
insb
xchg
jne
arpl
xor
outsl
outsl
leave
jbe
ljmp
test
mov
and
mov
inc
mov
push
jb
into
scas
pusha
jg
stos
cs
jl
mov
ffree
dec
mov
hlt
shll
cmc
in
add
loop
rol
xchg
xchg
xorl
dec
xor
mov
mov
jmp
xchg
add
mov
jae
cmp
adc
aaa
push
jno
pop
adc
push
mov
dec
rorb
push
jl
mov
decb
xchg
pushf
pop
js
adc
insb
mov
jno
fisubl
mov
or
lock
cmp
xchg
jg
repnz
push
loop
lea
add
cmpsb
and
push
inc
mov
inc
enter
mov
dec
add
pushf
imul
mov
lock
adc
daa
mov
aam
sti
lcall
repz
and
in
imul
out
cmc
iret
xchg
rcl
dec
cmc
and
fisubl
mov
rcll
cmp
sahf
adc
xchg
lahf
fs
xlat
stos
imul
mov
cltd
sub
test
neg
rcrb
push
imul
jns
lcall
das
ja
nop
xchg
popa
icebp
pop
mov
lds
mov
sti
and
inc
ja
lds
arpl
jns
out
mov
push
jmp
pop
fsubr
add
push
jo
mov
leave
cmpsl
cmp
in
sbb
mov
icebp
inc
pop
testb
pop
iret
jmp
aam
push
in
in
aam
or
sti
mov
or
sbb
or
and
sbb
jle
aas
or
insl
xchg
pop
movsb
xchg
in
cmpsl
pop
out
lods
mov
push
inc
or
and
pop
sbbl
mov
mov
test
or
popa
inc
ficoms
xor
les
or
stc
jle
jnp
aad
cmc
test
nop
pushf
xlat
int
add
pop
sbb
inc
and
inc
pop
mov
jg
fs
sub
xor
jecxz
push
xchg
scas
lret
sub
je
sbb
mov
fs
dec
cltd
jp
fisttpll
and
lods
std
idivl
insb
adcb
pop
fstpl
loopne
fidivrl
xorl
or
inc
dec
jp
jecxz
andl
cmp
jle
and
mov
repnz
insl
ret
and
add
iret
pushf
js
in
add
mov
sbb
push
mov
fistpl
dec
mov
sub
mov
and
push
inc
lret
xorl
pop
outsl
jae
pop
int
and
rdmsr
es
jge
sahf
sub
adc
mov
add
pop
sub
pop
cmp
scas
ss
stc
nop
ret
aas
movq
adc
dec
pop
aam
xchg
lahf
and
push
fimuls
or
push
nop
jo
rcrb
jecxz
mov
into
and
insl
and
and
xor
fwait
into
cmp
push
push
outsl
sbb
mov
loope
jo
cmp
mov
imul
jo
jnp
mov
and
aam
repz
xchg
out
xor
dec
sbb
in
mov
das
inc
cs
addb
movsb
mov
int3
inc
adc
stc
xchg
shlb
rolb
mov
dec
ja
outsl
fildll
mov
dec
mov
push
lcall
and
xchg
sbb
jge
mov
pop
frstor
xor
int
xchg
push
or
or
sub
pop
cmp
outsb
lods
into
push
jne
mov
inc
lods
sbb
pop
cmp
mov
adc
je
adc
push
enter
cmc
inc
sub
mov
bound
outsl
jp
stc
shll
sub
je
mov
iret
mov
jecxz
inc
jae
mov
inc
mov
sub
or
aaa
sarb
neg
xchg
and
xchg
leave
or
cmp
sub
pop
xor
sar
cmp
jecxz
lret
cmpsl
push
or
inc
lock
xchg
test
popa
inc
das
sarb
xchg
inc
push
insb
popf
and
out
test
cld
subl
cmp
inc
xchg
sub
rcr
aaa
mov
fisttpl
jnp
and
fs
rorl
dec
out
xchg
daa
dec
cwtl
xchg
add
sti
int
xlat
xor
lods
mov
pop
xor
lods
mov
jecxz
dec
jno
cmp
iret
jecxz
push
adc
xchg
sbb
fnsave
xchg
mov
dec
mov
ljmp
imul
jecxz
fsubr
les
pop
jmp
imul
fwait
sarb
sub
sbb
or
mov
call
movsb
sub
xchg
cmc
cmp
mov
out
ss
clc
adc
dec
fstl
test
adc
fiaddl
xchg
cwtl
leave
add
ficomps
add
xlat
gs
or
sub
pop
mov
pop
ret
xchg
icebp
les
adc
test
addl
or
inc
lock
mov
sbb
fucomip
test
ret
cmp
cmpsl
loope
pop
shl
push
fmul
add
sbb
shr
jle
das
es
jae
outsl
mov
dec
push
dec
aas
cmp
call
incb
dec
in
gs
jno
pop
aas
pop
jecxz
int
out
out
divl
in
lods
stos
in
push
mov
dec
fwait
mov
pusha
cmpsb
mov
push
ret
push
dec
xchg
xchg
test
es
jae
jnp
outsl
mov
test
repnz
dec
dec
loope
scas
orl
stc
out
loope
fisubrs
mov
bound
and
test
roll
fwait
int
out
mov
pop
loopne
pushf
aaa
mov
addl
xchg
push
push
sub
daa
add
cmp
loope
pop
mov
pop
jae
addr16
cwtl
test
mov
jmp
adc
sub
inc
inc
adc
sbb
cmpsb
call
dec
orl
inc
movsb
fmulp
das
jecxz,pn
jecxz
ljmp
sbb
jb
cmp
cltd
arpl
and
dec
xchg
lahf
add
rcrl
mov
clc
imul
push
fcmovu
pop
mov
inc
in
stos
in
mov
out
jbe
mov
xchg
ljmp
sti
sub
test
in
repz
xchg
push
imul
mov
dec
std
push
in
pop
fdivrs
push
cmc
inc
push
sbb
fdivs
jns
pop
mov
mov
in
fmull
jo
inc
and
fwait
mov
call
lds
mov
sbb
movsl
fnstsw
push
dec
mov
inc
out
jle
dec
imul
lret
cmp
lret
pop
shlb
inc
in
pusha
mov
push
xor
xor
sbb
pusha
dec
pop
pushf
pop
and
test
clts
or
stc
insb
outsl
call
sub
cld
jmp
mov
ds
mov
push
inc
sahf
xchg
outsl
push
test
lock
mov
push
or
scas
sub
and
push
jno
mov
sti
movsl
inc
into
adc
cmp
das
mov
in
mov
dec
ja
adc
xchg
ja
pusha
mov
and
cmp
adc
sahf
repnz
insb
popf
mov
push
popa
and
sbb
push
fmuls
aaa
jae
ljmp
mov
pop
pop
fwait
push
pop
adc
das
test
cmpsl
xorl
jbe
or
xchg
das
adc
mov
sbbb
inc
sbb
pop
mov
loop
xor
xlat
pop
inc
xchg
xlat
pop
sub
and
xor
xlat
and
pop
int
popa
and
or
daa
xchg
jg
aas
push
jp
push
lds
loop
lret
sub
and
pop
in
scas
pop
movsb
or
mov
insl
cmp
shlb
and
std
mov
mov
dec
cmp
xchg
icebp
and
es
pop
mov
bound
jp
insb
jmp
pop
pop
ret
xchg
pop
pop
andl
jmp
add
cmpsl
inc
daa
pop
cmpsb
jbe
or
jno
cmc
sbb
cmp
test
mov
mov
cs
sbb
stos
pop
and
cmpsl
inc
dec
xor
jmp
sar
inc
fldenv
aad
dec
test
call
filds
dec
jmp
lahf
fdivrs
nop
dec
jmp
jo
dec
pop
stc
sbb
jmp
mov
into
push
aam
hlt
cmc
rclb
es
lods
mov
fsubrs
incl
push
push
push
or
in
leave
movsl
mov
shlb
loop
mov
shrb
mov
fldl
push
inc
dec
movsl
push
push
dec
repz
jb
push
mov
lcall
dec
fbstp
push
dec
dec
loope
push
pop
sub
adc
mov
pop
int
xor
gs
stc
xor
insb
xlat
clc
adc
dec
subl
mov
mov
adc
enter
sbb
decb
mov
int3
jbe
fdivp
xor
das
cwtl
lea
push
and
in
cmp
jo
push
subb
dec
lods
mov
sahf
lock
xchg
jae
adc
into
xor
push
cmc
pop
dec
cmpsl
movsb
push
pop
sbb
jno
adc
dec
pop
push
loop
pop
insb
outsl
mov
das
movsl
xor
push
ret
ret
pop
add
cmp
or
adc
fs
out
into
aaa
mov
mov
loope
add
push
fs
mov
notl
push
inc
add
mov
sahf
ss
addr16
cmp
fwait
push
stc
mov
sbb
jle
and
sbb
ret
or
lret
imul
int3
cmp
mov
flds
push
insb
imul
imul
mov
pop
xchg
sub
sub
int3
inc
fwait
and
jae
cmp
cmpsb
add
cmpsl
mov
inc
cmpsl
xchg
test
ja
imul
orb
sbb
sbb
and
sti
jp
jno
inc
jae
test
je
in
les
enter
push
outsb
inc
insb
fidivs
and
lea
cltd
fistpll
std
popa
je
and
popf
rclb
mov
or
ss
xorb
repnz
mov
mov
mov
int
pop
lea
jge
popa
push
ficoml
enter
or
jmp
test
ffree
adc
test
pop
sbb
jne
outsb
cmp
mov
loopne
cld
xor
aas
cwtl
pusha
idivb
pop
and
in
ret
andl
int
sarl
sbb
xor
test
mov
pop
dec
mov
addr16
dec
pop
gs
push
xor
clc
in
insl
clc
mov
in
dec
loopne
scas
adc
test
repz
nop
fadds
arpl
lret
mov
inc
sbb
sarb
adc
not
sarl
daa
add
es
jge
js
xchg
and
inc
in
adc
inc
jo
xor
bound
imul
int3
push
in
pop
bnd
adcb
or
daa
rorb
cmpsb
mov
shll
pop
pop
mov
fisttps
ss
ds
xor
loopne
sar
sbb
mov
sbbl
add
mov
or
jmp
sbb
push
and
das
mov
aaa
popa
inc
fcmovnb
stos
dec
lcall
cmpsb
xchg
jo
mov
cmovs
fsubrl
push
in
fsubr
lahf
jbe
je
xchg
xor
jmp
push
int3
stos
xchg
adc
lds
push
cltd
or
adc
pusha
pop
mov
mov
dec
mov
push
pop
pushf
inc
out
pusha
add
dec
sbb
and
push
add
jo
adc
jno
xor
addr16
dec
pop
xor
addr16
mov
xchg
hlt
xchg
insl
mov
arpl
cmpsl
fnstcw
call
out
inc
aaa
hlt
outsl
mov
rcl
mov
push
ljmp
shlb
jmp
and
cltd
shl
into
push
mov
add
sub
sub
adc
out
adc
adc
mov
add
aas
fimull
adc
pop
hlt
jecxz
cmpsb
sub
int
rorb
adc
adc
push
dec
flds
mov
pop
clc
rcr
jl
loop
xchg
push
outsb
dec
adc
pusha
ret
sbb
mov
sahf
mov
jmp
imul
add
or
out
lcall
jns
hlt
std
fstpt
xorl
xlat
lahf
rolb
repnz
popa
roll
mov
jae
ds
rolb
mov
push
mov
pusha
mov
sbb
insb
addr16
jbe
add
sarl
lret
bswap
adc
pop
aad
lret
ljmp
loope
stos
mov
out
shr
push
ret
movsl
dec
push
jmp
incl
ret
scas
dec
or
mov
les
jl
jp
xchg
and
mov
cwtl
aaa
or
ja
push
aad
push
sub
mov
aas
mov
test
push
push
xchg
adc
or
lea
add
test
cmp
clc
inc
mov
in
pop
cmp
add
test
les
xchg
mov
add
adcb
mov
fidivl
out
cmp
jbe
into
js
imul
ljmp
nop
movsl
jno
or
cmpsl
mov
or
js
xor
jmp
scas
or
push
mov
outsb
aas
xor
loope
gs
fwait
or
xchg
aad
ja
cmp
cltd
in
mov
in
sbb
or
jecxz
daa
add
sub
pop
sub
or
xorb
ss
sbb
jne
cmp
iret
add
mov
das
sbb
sbb
jno
lret
sbb
xlat
fwait
js
out
or
cmp
jg
outsl
mov
ret
pop
fisttps
ret
lea
mov
ja
xor
and
add
xchg
loopne
and
sahf
jne
sub
pusha
xchg
sub
stc
xor
sbb
push
push
out
std
adc
dec
sbb
adc
out
mov
addr16
add
dec
into
dec
out
stos
and
scas
ja
dec
mov
loopne
fs
sbb
push
inc
pop
mov
data16
pop
nop
jecxz
loope
fldt
mov
mov
test
dec
inc
flds
fidivrs
mov
cmpsl
pop
ljmp
cmc
outsb
ja
shlb
xor
cltd
mov
fiadds
in
popf
movsb
mov
adc
and
aam
mov
in
xor
add
inc
adc
cld
mov
hlt
cli
fcomps
add
xor
cwtl
or
mov
push
nop
xor
xor
jne
fs
sbb
jle
jns
jmp
adc
or
fstl
sti
lret
xchg
daa
fistpl
clc
mov
dec
and
sub
sub
insl
bound
pop
ret
pop
sbb
bnd
jecxz
mov
gs
add
sbb
mov
ret
movsl
and
adc
sub
push
in
sub
rolb
sub
mov
ss
push
sahf
adc
sub
mov
ja
scas
lods
sbb
cmp
add
cld
adc
aaa
dec
shrl
dec
cmp
stc
fs
add
cmp
push
adc
bound
movl
in
pop
xchg
fidivs
mov
das
repz
sub
das
or
fisubrl
cs
jmp
push
xchg
sti
inc
aas
jmp
add
adc
jne
ret
and
stos
ror
pop
sub
outsl
xchg
lret
fisubl
rorb
adc
in
mov
adc
push
mov
loopne
mov
and
sbb
movsl
mov
hlt
mov
xor
or
rorl
repz
out
and
pushf
orb
fisubrs
aaa
imul
out
xchg
into
jg
cmp
adc
sub
xor
jmp
and
inc
aad
out
jmp
arpl
mov
jp
stos
push
outsl
jg
sahf
adc
cmp
or
cmp
and
mov
std
mov
sbbb
je
mov
aam
inc
lret
xchg
hlt
jnp
xchg
dec
out
bound
int
outsb
jno
dec
push
jg
xor
add
xlat
test
sub
mov
fdivrs
ja
cmp
sbbl
dec
imul
repnz
dec
out
inc
inc
sbb
imul
inc
testl
lcall
fcmovnb
adc
fsubrs
mov
lds
das
hlt
in
push
ret
mov
mov
adc
aaa
in
les
xchg
enter
adc
push
jne
push
fwait
mov
push
xor
scas
adc
mov
dec
insl
and
cmpsl
lea
mov
cmp
ss
or
cmp
pop
pop
jns
aaa
dec
xor
mulb
and
call
dec
sub
lcall
test
mov
daa
test
pop
ds
inc
pop
fwait
and
sub
and
aam
pop
movsl
fistpll
adcb
push
adcb
push
in
xchg
push
std
test
xor
xchg
or
aaa
pop
xchg
daa
dec
lcall
pop
stc
hlt
jo
jnp
pop
jecxz
cmpsb
std
fistpll
push
scas
lods
js
inc
sahf
imul
mov
pushl
stc
push
insb
dec
sub
xlat
mov
notl
adc
loop
add
push
mov
das
ja
insl
pop
lret
scas
lods
aam
jo
xchg
lahf
xchg
pop
flds
pop
outsb
jb
mov
aas
push
push
iret
inc
pop
or
rolb
add
inc
aam
dec
xchg
mov
pop
sub
je
sub
repnz
cli
jmp
dec
xchg
loope
xor
xchg
mov
inc
jp
ror
fstpt
incb
in
bound
test
or
scas
in
mov
sub
rolb
xchg
and
cmp
cmpsb
pop
shll
dec
fbstp
and
and
in
inc
out
jle
jmp
fcompl
push
xlat
xor
test
push
pop
jno
or
rcrl
in
or
std
mov
dec
pop
sbb
insb
xor
stos
into
sbb
jne
sub
ret
xchg
nop
xor
ss
inc
push
or
sbb
fdivr
push
mov
sbb
addr16
push
sbb
and
movsl
inc
push
imul
and
mov
arpl
jnp
scas
lahf
pop
sub
jle
sub
loope
mov
dec
add
mov
daa
jmp
and
push
mov
or
sub
repz
mov
insb
or
js
sub
lahf
test
push
xlat
inc
sbb
mov
dec
in
adc
jne
and
in
xorl
mov
dec
dec
add
push
mov
ljmp
pop
ror
xlat
stc
cmp
cmpsb
scas
jbe
out
lds
dec
jp
orb
and
inc
pushf
stos
dec
and
pushf
hlt
xor
mov
lcall
test
repz
xor
out
jno
outsb
mov
lods
test
push
inc
jnp
fwait
or
sbb
in
int
test
rorl
fistps
add
mov
adc
cli
or
aaa
je
out
ds
iret
lock
sysenter
rcrl
push
hlt
test
jno
sub
sbb
push
sbbl
aam
xor
mov
ss
cmp
pop
push
xchg
inc
xchg
mov
pop
push
out
enter
sti
inc
mov
movsl
inc
sub
dec
mov
push
sub
popw
bound
test
pop
dec
icebp
in
sbb
xchg
or
mov
mov
mull
je
adc
and
lds
cwtl
adc
jp
rclb
jmp
sbb
mov
inc
lahf
mov
inc
pusha
pop
mov
inc
push
test
stos
cmpsl
push
fcomi
xor
test
in
push
aaa
cwtl
push
nop
dec
lcall
or
xlat
fwait
jecxz
insl
imull
mov
and
shrb
rol
gs
push
mov
xchg
xchg
or
nop
xchg
add
jp
repnz
ret
sbb
sahf
cmp
cmp
sub
outsb
jb
andl
movsl
or
cmp
xchg
jno
flds
iret
mov
and
in
pop
pop
jl
stos
inc
sbb
gs
fisttpll
dec
iret
lods
cmpsb
imulb
push
sbb
or
jp
repz
mov
rcl
pop
fildl
add
mov
scas
fdivs
adcl
cmpsl
stos
popl
xchg
dec
lods
cmp
movsb
xchg
mov
inc
pop
xchg
push
adc
test
mov
js
cmp
sbb
sub
or
add
lods
push
jmp
jb
leave
xchg
lds
shll
imul
arpl
ret
js
pop
lods
int
jecxz
outsb
pop
in
add
jnp
lcall
cld
stc
add
mov
dec
lret
gs
xchg
in
sahf
dec
xor
das
pop
cmp
pop
aam
shlb
push
popf
insb
mov
clc
sub
shr
pusha
cmp
repnz
fiadds
pop
mov
cmp
lock
dec
mov
fimuls
pop
sub
cs
push
insb
sarb
xor
pop
sub
xchg
push
and
sub
push
jo
lea
add
xor
dec
jp
push
lret
pusha
xchg
push
mov
cld
mov
inc
dec
jb
mov
and
daa
repnz
adc
mov
xchg
mov
push
xor
inc
leave
mov
movsl
gs
fs
or
insb
sbb
popf
xor
push
sub
popf
clc
xor
out
loope
cmpsl
fwait
mov
insl
test
mov
repz
mov
addr16
nop
inc
out
or
js
ds
je
fcom
dec
or
rcll
add
pop
int
dec
jl
adc
sbb
xchg
jnp
cmp
lock
pusha
xchg
mov
lretw
sub
stos
or
enter
sti
mov
dec
xchg
cmp
fistps
and
push
and
repz
shl
nop
ret
in
and
jno
in
push
cmc
pop
sbb
into
pop
outsb
and
mov
adc
repnz
sub
std
cs
adc
mov
stc
dec
imul
cmp
cmp
outsl
sbbb
jmp
jnp
je
clc
jge
insl
int3
push
daa
sti
pop
mov
jo
mov
stc
outsl
cmpsb
int3
cmp
add
jge
test
push
inc
insb
pop
aam
out
dec
decb
cld
push
lock
add
cmp
or
data16
jae
mov
dec
addr16
jp
add
and
adc
ss
ds
dec
mov
es
xchg
adc
inc
cmp
dec
jns
mov
sub
cmp
icebp
xchg
lock
jg
les
xchg
loopne
pop
ss
jge
push
out
xor
jbe
push
iret
call
test
pop
and
sub
and
xor
subb
mov
nop
jg
insb
xor
cmp
lods
adc
lds
mov
loop
adc
leave
mov
hlt
mov
fwait
insb
aas
into
inc
push
inc
sbb
mov
loope
loop
cld
movsb
mov
dec
idivl
mov
mov
aam
push
data16
into
rorl
sub
mov
loop
out
inc
clc
pop
push
fcoml
sbb
and
mov
dec
sahf
ja
cwtl
rclb
dec
dec
fwait
insl
mov
loope
lahf
dec
add
jg
fldcw
leave
mulb
cmp
mov
sub
and
pop
es
xchg
mov
xlat
ljmp
js
mov
retw
jns
pop
ret
and
in
dec
or
stc
sti
adc
hlt
sbb
outsb
mov
daa
or
not
dec
leave
test
inc
outsb
cmp
mov
jp
mov
xor
xchg
lret
fwait
movb
push
dec
loope
xor
mov
add
inc
loope
js
lea
subb
jo
mov
jbe
adc
pop
es
fabs
shlb
fistpl
mov
gs
inc
xchg
dec
jno
xchg
push
xor
inc
jl
jno
mov
xlat
sbb
add
xor
xchg
xchg
inc
repz
fdivrl
pop
gs
dec
jmp
aaa
cmpl
decb
mov
test
scas
ljmp
shll
out
movsl
dec
movsl
lcall
dec
ja
dec
inc
sbb
push
test
mov
daa
call
jmp
pop
test
sbb
pop
cmc
add
mov
jle
hlt
outsl
jnp
scas
sbb
mov
mov
sub
adc
pushf
in
mov
cmp
das
xchg
mov
inc
dec
lcall
push
mov
loop
pop
js
add
icebp
pop
xchg
fadds
into
inc
adc
mov
jge
int
sarl
add
je
shrb
js
adc
ret
push
cmp
test
fstpl
jp
sbb
movsb
mov
or
stc
push
sub
or
cwtl
xchg
int
push
rorb
loopne
mov
roll
jge
mov
sbb
cmp
push
cmp
sbb
xor
stos
add
cld
fidivl
push
aam
dec
mov
jae
out
lret
scas
testb
cmp
push
ljmp
out
pop
sarb
xor
pop
xor
xor
cmp
cltd
xchg
and
add
mov
jl
fsubrs
fdivs
stos
nop
fildll
pop
push
push
dec
pop
jge
aam
cli
pushf
sbb
jp
mov
xor
aas
push
cmpsb
push
stc
je
jmp
inc
cmp
xchg
and
xchg
dec
lret
xchg
psrlq
sbb
adc
cmp
fdivrl
cs
push
sbb
mov
sub
lret
gs
lods
scas
cmc
out
scas
out
mov
popa
fdivl
call
in
lods
stos
insb
push
push
sbb
mov
mov
gs
inc
mov
push
jo
mov
or
pusha
adc
sti
sbb
loopne
ret
jnp
inc
in
jl
lret
add
push
mov
jle
mov
stc
xorb
or
fs
or
imul
imul
xchg
sub
pop
sbb
add
aam
dec
js
push
or
or
cmp
fdivrs
inc
adc
xchg
rorl
aam
popa
not
sub
inc
sti
test
psubusw
push
ljmp
cmp
test
xchg
dec
mov
inc
sub
shlb
pop
sbb
in
mov
test
sbb
xchg
inc
add
ret
pop
xchg
nop
cmpsb
lods
xchg
xchg
cmp
fldenv
lds
ret
mov
jns
pop
loop
push
test
mov
lret
sbbl
les
push
pop
or
and
cwtl
out
les
insb
jmp
pop
int
mov
adc
jae
lret
jne
popa
push
mov
add
adc
mov
cmc
xor
cltd
sbb
repnz
sahf
xor
push
clc
lret
jg
push
or
int
adc
call
ljmp
adc
xchg
pusha
stc
popa
cltd
fcomps
mov
mov
cli
and
mov
lods
hlt
rcrb
and
and
fwait
sarb
enter
outsl
or
aam
mov
adc
in
push
add
shll
adc
jg
scas
std
lock
cmp
into
sbb
pushf
fistpll
add
fwait
rcr
shll
mov
pop
pop
subb
mov
xchg
loop
addr16
xchg
das
sbb
and
dec
std
xchg
mov
dec
mov
xchg
cs
sbb
add
call
xor
bound
sti
cmp
pop
jno
fsubrl
add
aam
imulb
mov
imul
ret
icebp
lahf
sub
pusha
cmp
dec
or
jno
int
into
in
mov
jge
pop
cmpl
dec
loopne
data16
cwtl
outsl
sbb
cld
test
mov
push
jmp
addb
adc
fucomip
out
rorb
nop
cs
ret
inc
bound
sbb
fcompl
push
pop
push
cld
popf
and
xchg
cmpsb
arpl
test
mov
xchg
mov
lret
mov
int
stos
stos
pushl
hlt
adc
into
notl
push
cli
ds
sub
out
ret
rorb
in
lods
jne
dec
push
cmp
add
fistl
cmp
push
push
pop
scas
jge
dec
add
jmp
ret
xchg
cmp
adc
lret
adc
lods
iret
push
mov
lods
lods
lds
sbb
mov
or
cmp
pop
int3
mov
xor
jb
add
lock
lods
dec
or
lock
jns
pop
clc
cmc
nop
mov
or
sbb
rorl
mov
lods
cld
fisttpl
xchg
outsl
push
adc
jns
sar
mov
sti
push
sub
or
or
mov
and
lock
out
pop
dec
rorb
dec
sub
or
stc
fwait
mov
sti
repz
jne
pop
clc
loop
stos
or
push
and
aas
xchg
mulb
xor
imul
enter
mov
cltd
lods
push
addl
lods
sbb
aaa
fiaddl
ret
je
outsl
mov
mov
jmp
cvtdq2ps
out
out
or
movsb
jge
xor
pop
sub
dec
leave
mov
ja
das
rolb
jg
test
cmp
lock
loop
sub
rolb
subl
out
push
push
jno
push
js
test
insb
out
mov
jl
fdiv
in
dec
lcall
movsb
and
and
push
xchg
daa
or
mov
sbb
es
mov
mov
mul
mov
adcb
adc
add
ret
mov
or
aaa
fimuls
jb
pop
inc
ljmp
pop
cltd
lock
push
fbld
mov
jge
cld
cltd
mov
push
hlt
mov
xchg
pop
cwtl
jg
sbb
icebp
dec
daa
inc
loopne
mov
das
icebp
out
jecxz
dec
push
dec
fs
in
fimuls
xchg
jge
rol
fadds
adc
pop
dec
jmp
xor
mov
dec
xchg
lods
loope
mov
pop
icebp
push
cli
mov
jns
jecxz
arpl
lods
fadd
jp
cmp
lret
ret
dec
xchg
fiaddl
xchg
sahf
loope
or
outsb
and
lcall
mov
adc
rcrb
mov
add
pop
jo
jno
fistps
addl
cltd
xchg
movl
ret
xchg
cmp
lods
div
call
push
aam
inc
or
sub
ret
ljmp
pusha
mov
rol
pop
cmp
stos
push
movsb
mov
aad
xchg
outsl
jp
push
pop
push
mov
in
push
jecxz
les
mov
pushl
loope
cmc
sub
xchg
or
jns
xor
ret
cmpsb
pop
cmp
mov
fucomp
inc
inc
out
inc
addr16
cmp
inc
dec
sub
pop
loop
inc
sbb
pushf
insl
adc
jo
mov
fdivs
mov
jmp
pop
push
push
push
inc
adc
inc
and
adc
sub
mov
cmpsl
out
repnz
icebp
inc
sub
or
cltd
imul
mov
jmp
mov
inc
or
ret
pop
sub
jnp
call
jb
xor
inc
push
add
out
sbb
jecxz
jno
xor
mov
sub
dec
ret
sub
int
mov
mov
in
xchg
jae
lret
fdivrl
divb
mov
jnp
xor
sahf
shlb
cmp
ds
and
xor
out
cmc
js
push
push
xchg
iret
jle
loope
lods
bnd
and
arpl
pop
daa
or
fbld
cmp
cmp
xchg
jmp
jbe
xor
shll
sahf
int3
push
sub
push
arpl
popa
popa
jb
cmp
scas
clc
cmc
punpcklbw
push
mov
jnp
jbe
and
push
mov
cmp
rcrb
pushf
movsb
imul
fcmovnbe
cmp
lret
nop
pop
jle
jle
push
js
fnsave
mov
sbb
sbb
sbb
mov
add
addr16
push
arpl
inc
cmp
dec
into
jne
data16
subl
jmp
xchg
lret
jge
lahf
xor
sub
in
sarb
xor
xor
in
loopne
jns
icebp
outsl
rcll
inc
lea
cltd
xor
int3
cmp
mov
jnp
xchg
mul
jns
aad
lds
and
cmpsb
dec
popa
mov
push
xor
bound
cmp
js
lret
sbb
sub
adc
xchg
ja
xchg
push
int
leave
pop
andb
stos
arpl
jne
ret
sub
xchg
push
sti
pop
lahf
add
pop
hlt
lods
and
shlb
pop
rclb
inc
flds
lds
pop
jecxz
jo
push
icebp
dec
push
stc
es
mov
adc
cmc
push
xchg
xor
loope
ret
cmp
push
outsl
add
xor
xor
popf
cli
mov
push
lcall
cmp
push
movsb
jl
or
ret
sbb
push
xchg
mov
cmpxchg
xor
inc
ja
inc
push
shll
jb
int3
xchg
sub
in
cmp
cmp
push
add
in
pop
xorb
sub
cmpsl
adc
fldl
sbb
outsl
iret
pop
iret
repz
add
sub
pushf
daa
jl
test
in
push
inc
fisttps
push
rcrb
mov
jl
xor
outsb
lret
pusha
lret
cmp
pop
test
aas
rcrb
sbb
jecxz
cmp
jo
shrb
sub
in
divb
pop
sahf
jmp
mov
insb
inc
fs
jle
push
popa
insb
adc
adc
pop
mov
mov
testb
xor
mov
xor
adc
cld
fwait
pop
mov
loopne
fldcw
xchg
lods
sbb
jno
cwtl
mov
pop
cmp
cltd
xchg
jg
je
cmpsl
jp
and
pop
xor
js
test
or
jle
sarl
test
pusha
jne
adc
or
pusha
cmpsl
lcall
aaa
push
pushl
daa
pop
mov
popa
les
out
jl
mov
pop
lcall
xchg
hlt
sbb
lret
enter
jns
mov
lods
daa
dec
add
mov
data16
xor
inc
or
sbb
iret
sub
jae
mov
mov
test
in
int
pop
cmp
adc
jne
mov
jae
sbb
aas
loop
push
mov
or
xchg
out
sahf
push
and
pop
out
cltd
jb
movsb
dec
int
pop
push
dec
push
push
dec
lret
pop
sbb
loope
gs
aad
jmp
imul
test
ret
sbb
jne
jmp
lea
aas
jmp
clc
and
cmpl
mov
dec
outsl
mov
cmp
jge
xor
cltd
roll
xchg
orl
shrl
icebp
out
push
subl
shlb
or
hlt
nop
push
fidivl
rol
jl
lds
pop
push
dec
mov
test
lds
jge
enter
dec
mov
jge
pop
pop
test
lahf
adc
outsb
xor
or
mov
mov
insb
lahf
test
iret
or
xchg
jb
pop
nop
or
daa
rcll
push
leave
mov
and
pop
push
adc
fstl
xchg
dec
mov
mov
lds
gs
sub
xor
shrl
pop
lods
les
mov
adc
jnp
jmp
divb
insl
jne
int
dec
fistpl
or
insb
lahf
cmp
mov
mov
mov
in
mov
fisubrs
pop
add
jg
sbb
adc
imul
arpl
cmp
aam
and
fs
imul
pushf
or
lock
test
xor
push
fcompl
jg
sub
dec
cld
sbb
int3
push
mov
in
imul
xchg
shlb
loope
pop
sbb
idivb
push
movsl
scas
xor
push
fdivs
jl
fucomp
mov
lea
fst
insl
and
test
push
test
xchg
mov
or
jg
push
xchg
rol
push
cmp
xor
iret
insl
cmp
inc
lock
cmc
cmp
jp
jno
add
lcall
pavgw
mov
or
push
xchg
aas
movsl
mov
aas
mov
jmp
jmp
ljmp
inc
add
pop
sbb
add
das
jl
in
mov
pop
and
gs
jns
es
mov
or
jo
out
jne
pushf
pop
inc
adc
xlat
lahf
in
loope
adc
lret
test
or
xchg
sbb
push
or
jle
adc
imulb
gs
cmp
popf
insb
rorl
decl
add
ffree
push
xchg
in
sub
add
data16
repz
mulb
aas
in
pop
push
mov
xor
mov
or
movsb
push
gs
push
add
jge
out
jecxz
lahf
aas
xchg
imul
aad
push
sbb
lock
jbe
mov
push
or
jg
adc
push
pop
cmovno
push
push
imul
popa
outsb
sbb
inc
sbb
test
sbb
jno
ss
inc
arpl
xorb
pop
fucomip
sbb
pop
jnp
sub
outsb
mov
mov
mov
xchg
std
das
rorl
push
das
mov
and
sub
dec
lret
int
xor
fmulp
leave
xchg
sub
jmp
pop
in
jne
mov
insl
mov
push
repz
cmp
mov
jo
pusha
dec
add
xor
sti
loopne
adc
pop
loope
ret
jle
mov
aad
fisttpll
sub
fcompl
add
fdivrp
pusha
mov
xor
fisttpll
int
adc
sub
lahf
inc
arpl
scas
das
aas
xor
cmp
mov
jns
clc
fs
and
jp
add
and
cs
add
fs
mov
mov
int
xchg
cmpsl
cmp
and
and
fbld
scas
push
jns
imul
jae
jns
or
fisubl
pop
sub
sub
mov
add
sbb
in
js
pop
movsl
testb
out
andl
mov
push
pushf
cmp
imul
loopne
scas
lret
test
mov
inc
int3
cmpsl
push
cmp
cmp
movsb
mov
jnp
jmp
dec
inc
push
leave
and
mov
and
xchg
xchg
int3
sub
in
sbb
cmc
mov
sub
push
fcos
nop
popa
push
xor
sub
mov
adc
adc
fs
push
inc
adc
jl
push
iret
mov
push
xchg
push
test
shll
jecxz
sti
subl
addr16
mov
lret
orb
sub
fdivs
movsb
sbb
xor
sub
xlat
pop
pop
pop
mov
cmpb
std
jmp
jge
pop
lahf
dec
icebp
mov
xchg
fsubrl
dec
shrl
pop
push
adc
inc
fildll
mov
out
pusha
xchg
aas
stc
mov
into
push
mov
pop
scas
cmpsb
and
sti
add
lods
mov
lock
pop
in
add
ljmp
add
mov
pop
mov
outsl
insb
sbbl
mov
jae
inc
xor
idivb
xorl
mov
aas
jnp
sub
and
addr16
cmp
js
sub
adc
xor
push
sub
jge
movsl
adc
and
cwtl
mov
xchg
adc
out
cmp
jp
scas
push
icebp
xor
loop
loope
lds
dec
gs
roll
push
test
cmc
pop
xor
push
fcomps
pushf
stos
cmp
scas
cli
adc
lds
sbb
push
stos
rolb
fstpl
dec
xlat
test
push
rdtsc
xchg
fistpll
add
fs
mov
jmp
jmp
cmpsl
dec
outsb
ret
test
pop
rcrl
out
lods
es
xor
add
jo
adc
in
mov
outsb
scas
cli
or
int3
lods
out
jge
pop
mov
sbbb
hlt
mov
xor
std
sub
jb
xor
scas
adc
pop
movsl
pop
push
insb
mov
popa
lret
pop
jl
pushf
cmp
movsl
mov
aaa
sub
lea
loope
lcall
movsb
stos
cli
mov
sbb
add
xchg
adc
pop
cmp
mov
je
xchg
into
rcrb
cli
or
cld
subb
and
ret
in
pop
jo
aaa
data16
jmp
xchg
rorb
xchg
jmp
rcrl
in
pop
jns
stc
mov
ret
repnz
aaa
and
in
push
pop
notl
sbb
pushf
pop
or
sti
mov
jg
xchg
push
fstpl
adc
adc
or
xor
dec
rcll
pop
and
xchg
out
add
aad
andb
jno
sbbb
mov
mov
cmp
mov
adc
sub
fidivrs
jno
insb
cmc
sbb
cmp
add
aas
fimuls
inc
pusha
pop
dec
pop
out
mov
ficoms
aas
scas
push
into
add
adc
push
repnz
imul
pop
pop
imull
cmp
push
fisubrl
xchg
or
scas
sub
mov
orb
push
adc
sub
int3
dec
fisubrs
push
mov
cmp
or
hlt
orb
cld
leave
xchg
cmpsl
inc
and
test
mov
mov
cmp
inc
addr16
sub
test
mov
pop
jb
or
cmp
xchg
mov
mov
in
mov
shrb
xor
movsb
cmp
in
pushf
jecxz,pn
or
test
test
in
mov
dec
fwait
dec
pop
mov
dec
imul
nop
mov
loope
hlt
pop
int
sahf
push
out
or
add
and
adc
sti
pop
push
jnp
xchg
jmp
ret
pop
jmp
sub
out
insl
jmp
shr
mov
cmp
mov
ret
mov
sub
sbb
push
lahf
outsb
in
xor
in
movsl
jno
pop
add
dec
mov
pop
jne
je
xchg
push
out
fdivp
xchg
xor
adc
jae
mov
adc
cs
test
daa
pop
xchg
scas
mov
iret
and
cmc
pop
lods
fwait
test
decl
inc
sub
pop
dec
les
outsb
adc
pmullw
stos
andps
adc
fstl
push
mov
stc
sub
aaa
cli
pop
push
orl
scas
mov
dec
adc
enter
xlat
jmp
mov
add
mov
jecxz
push
mov
ficompl
loope
mov
iret
fildl
cltd
out
insb
push
and
inc
test
movsb
or
mov
and
dec
out
daa
dec
push
mov
mov
jne
into
xor
lcall
test
inc
cmpsb
hlt
adc
add
cli
shrb
add
movsl
je
std
inc
pop
lds
mov
sbb
push
inc
out
adc
adc
repz
sbb
push
jno
fdivr
cmp
loop
xor
fisubl
sarb
cmpsb
insl
lea
dec
lahf
out
pop
add
loop
notb
lock
mov
xchg
jne
mov
test
cmp
cmp
mov
mov
mov
pop
xorl
in
and
pop
jge
test
repnz
jl
sub
pop
out
xchg
cwtl
add
jmp
push
cmc
mov
dec
inc
daa
mov
lret
call
or
jns
leave
clc
rcrb
movsl
xchg
fdivl
dec
mov
movsl
insl
adc
mov
sahf
dec
sub
xchg
xorb
lret
jmp
xchg
scas
pop
and
ljmp
jnp
mov
es
and
jne
fwait
loopne
rolb
add
dec
call
je
clc
lds
sbb
sahf
jae
inc
sbb
je
mov
xchg
mov
dec
jp
out
lods
imul
in
lahf
insb
in
movsl
loop
repnz
xchg
add
xor
mov
pop
push
xor
inc
jno
sarl
les
push
cmp
outsl
movsl
stc
dec
or
jecxz
fbld
push
fwait
inc
push
pop
adc
decl
pop
jmp
repz
movsl
push
jecxz
sahf
and
imul
pop
movsb
mov
js
movsb
add
and
test
sbb
pop
sahf
js
imul
fidivrl
lods
nop
jnp
push
and
repnz
aam
ds
sti
or
std
push
fcoml
jecxz
dec
add
fstl
jl
push
xlat
sbb
or
cmc
xor
stos
pusha
stos
lock
ds
push
hlt
ffree
sahf
mov
pushl
cltd
fisubs
adc
add
or
adc
mov
jmp
lods
mov
mov
cmpb
push
fsts
sbb
mov
in
add
jl
push
and
test
xor
sbb
pop
jle
or
stos
scas
xchg
xchg
test
inc
call
add
stos
outsb
mov
das
cmpsl
into
movsb
clc
mov
push
push
arpl
out
push
jmp
mov
pop
test
cmp
ds
jnp
dec
sub
imul
xor
or
stos
cmp
adc
push
in
enter
xor
add
jns
jle
xchg
out
push
pushf
dec
mov
in
jg
inc
mov
insb
fistpl
mov
aam
rcll
call
scas
das
jne
and
pop
jg
pop
push
ret
dec
and
jno
sbb
inc
cmc
dec
cli
dec
push
in
mov
sbb
cmpsb
inc
pop
mov
ret
mov
pop
adc
add
jo
insl
lods
mov
loope
dec
push
imul
push
sub
cmp
shl
fcos
fs
sahf
dec
outsb
lret
mov
mov
push
sarb
das
dec
dec
sub
das
mov
mov
loop
lods
mov
mov
rorl
cmp
shll
lcall
adc
adc
out
sbb
movb
clc
sbb
mov
cwtl
dec
mov
jns
fcoml
stc
inc
dec
push
call
mov
stos
es
sub
lahf
sbb
and
lds
incb
add
cmpsb
call
popa
outsl
sub
mov
jbe
add
xchg
lahf
mov
mov
scas
faddl
mov
mov
lret
sbb
dec
jb
fstl
cmp
push
adc
jns
mov
mov
jbe
lcall
scas
mov
push
mov
mov
fs
aam
stc
sbb
xchg
out
add
lock
lods
pop
stc
lock
add
mov
inc
adc
add
daa
sbb
es
popa
jb
mov
mov
int
pop
push
adc
call
cmpsl
xor
mov
mov
dec
rcrl
add
and
xchg
dec
add
cmp
cwtl
xlat
inc
fbld
and
mov
mov
imul
dec
je
int
jge
push
xchg
jnp
push
or
and
xchg
adc
adc
lahf
cmpsl
loop,pt
repz
in
mov
push
cmp
shll
addr16
insl
fucom
push
xor
mov
inc
add
dec
xchg
rorl
xchg
fwait
and
sub
push
mov
mov
xor
rclb
lret
pop
sarl
insb
out
in
or
outsl
adc
rolb
xchg
cmp
sub
mov
mov
fadds
enter
cmp
faddp
imul
aad
jb
ficomps
fwait
push
icebp
jno
mov
add
lds
pop
inc
into
pop
sub
imull
inc
fisttpll
inc
into
lret
xchg
xlat
dec
adc
loopne
pushf
and
inc
cmp
mov
inc
pop
push
mov
push
pextrw
arpl
out
xor
bound
jg
stc
xchg
enter
adc
scas
sahf
pop
push
xchg
pop
adc
cmp
insb
lret
fmuls
jle
loope
mov
xchg
fisttps
mov
and
dec
sub
sbb
in
bound
ja
pusha
fld
pop
mov
gs
fcompl
in
mov
and
cmp
bound
mov
cmp
push
mov
int3
push
dec
lret
lahf
fstl
inc
out
sub
or
mov
cmpl
mov
rcrl
sahf
xchg
xor
sbb
xorb
cwtl
adc
int
fwait
lods
lahf
ss
fists
ret
inc
jmp
pop
int3
fdivr
and
add
jb
mov
and
push
sub
pushf
xor
in
adc
xor
scas
jl
repz
pop
sub
xchg
loop
xchg
loopne
sub
test
push
add
idivb
adc
or
sbb
inc
push
xlat
xor
sub
stos
mov
int
add
xor
jecxz
cmp
out
jle
scas
outsl
enter
cltd
or
arpl
pop
mov
fwait
push
add
xor
xorb
jge
mov
call
push
or
lods
jne
repz
mov
adcb
test
gs
or
add
push
cmpsl
lret
pusha
jge
cmpsb
jmp
mov
test
or
scas
mov
fbld
stos
xor
shrb
test
xchg
cwtl
in
push
add
push
ss
loopne
xchg
cmp
jmp
dec
xor
push
mov
insl
std
popf
popf
into
add
jmp
loope
push
subb
imul
icebp
lock
xchg
dec
je
inc
sarl
es
cltd
push
jbe
sub
ja
jne
in
lcall
pop
insl
mov
push
jecxz
ficomps
cmc
xlat
popf
nop
pop
xor
shufps
lcall
lods
pop
sub
shr
aaa
not
cmp
dec
xor
jne
fmul
mov
cmp
or
js
cmpsl
dec
add
xor
xchg
pop
inc
sub
cmpsb
sub
inc
xor
or
inc
xchg
xchg
daa
dec
inc
jp
push
rclb
fisubrs
or
ret
mov
inc
add
fidivrs
pop
out
lahf
cmp
pop
test
hlt
jns
cmp
adc
hlt
xor
lds
or
sub
fsub
and
and
fcmovu
pop
push
insb
add
dec
sbb
mov
jecxz
cwtl
sub
add
mov
fmulp
or
inc
mov
or
xor
in
in
xchg
aas
aas
push
outsb
lea
xor
pop
popf
pop
out
mov
dec
hlt
adc
pop
xchg
xchg
in
rorl
mov
push
lds
icebp
mov
jns
cmp
fnsave
jmp
in
rcll
push
adc
call
sti
mov
jns
test
js
lahf
popf
mov
cli
cmpsb
lock
jbe
imul
push
imul
notb
jg
scas
ljmp
sub
mov
cwtl
out
pop
mov
imul
push
adc
jecxz
xchg
jae
das
ret
cmp
push
popf
sbb
div
jmp
sar
and
aam
push
or
and
pop
stc
mov
mov
pop
mov
mov
ljmp
dec
xlat
js
mov
add
inc
jecxz
mov
stos
outsb
pop
test
bound
pop
inc
stc
jns
fcomps
ss
js
test
jbe
push
out
cmpsb
add
test
imul
sub
out
shr
dec
pop
outsb
mov
aad
stos
sub
adc
sbb
icebp
ret
xchg
fistpll
cltd
push
pop
inc
sbb
insb
inc
clc
rorl
jns
or
stos
add
push
insl
loop
push
outsb
xchg
addr16
int
jmp
mov
lock
lret
mov
adc
ret
daa
jnp
cltd
jno,pn
mov
pop
out
fstps
insl
out
cmc
loop
aaa
cmc
adcl
or
or
les
ss
jnp
push
mov
fsub
inc
sbb
repz
jb
and
pop
cmc
add
jmp
and
mov
jp
stos
xor
mov
rcll
das
jg
adc
fisubs
js
xchg
sub
or
dec
imul
fs
pop
adc
xor
xchg
dec
push
xchg
sbb
dec
xchg
ret
jno
add
fcmove
mov
and
push
mov
lds
divl
popa
mov
sub
adc
test
arpl
out
add
pop
mov
lods
add
into
inc
std
ret
pop
rolb
sbb
in
push
loopne
test
jecxz
or
lcall
test
lods
cli
or
ss
jae
mov
mov
jb
addr16
shlb
jns
xor
push
jle
repnz
adc
pop
jp
push
and
lds
mov
outsl
and
in
movsl
gs
dec
ret
xchg
lods
or
mov
push
cmpsb
cs
scas
xchg
or
dec
enter
ss
cs
push
push
xor
rcr
pop
or
pop
xlat
push
insl
mov
and
dec
dec
jo
add
insb
xchg
and
mov
test
lds
addr16
cmp
cltd
pop
cmpsl
das
cmc
jle
fsts
push
test
out
nop
lret
scas
decl
add
mov
jnp
or
and
cmp
out
int3
ds
das
push
ds
pop
lea
adc
lds
lret
fs
or
sbb
add
outsl
out
lcall
or
inc
orb
push
cmpsb
adc
sbb
push
mov
repz
fnstcw
xchg
rclb
mov
sti
push
or
cmp
pop
cltd
dec
inc
int3
cs
push
mov
loop
push
int3
ja
popa
ret
jne
aad
jg
push
mov
mov
lcall
stos
loopne
and
mov
cmpsl
lahf
shrb
addr16
stos
shlb
lahf
push
cld
fstpt
inc
in
insb
xchg
out
loopne
fidivs
xchg
add
lahf
mov
sbb
push
cmp
jmp
int3
dec
mov
lret
mov
aam
sub
addr16
lea
icebp
movsb
xchg
clc
stc
xchg
daa
inc
add
stos
or
mov
push
mov
jo
dec
fidivrs
cmp
notl
arpl
push
and
xor
sti
subb
int3
jb
daa
sbb
pop
add
xchg
and
rorl
xor
add
cmp
cld
adc
outsb
xor
cwtl
imul
imul
jle
inc
jg
popf
in
les
mov
pop
mov
xor
divl
xchg
mov
loop
xlat
sarl
mov
mov
into
loope
jbe
dec
dec
adc
cwtl
mov
adc
gs
ja
nop
sub
scas
cmp
pop
rorl
repz
lds
mov
arpl
stc
mov
push
inc
jl
or
add
adc
enter
push
mov
sub
mov
ret
int3
neg
or
or
repz
icebp
or
test
stos
sbb
fwait
das
addr16
lds
xor
iret
inc
cmp
bound
dec
mov
pop
pusha
add
xchg
je
lahf
push
jge
mov
cvtpi2ps
aaa
sbb
rolb
sub
jo
ds
mov
push
mov
movsl
arpl
scas
and
sbb
jg
mov
xchg
enter
andl
cs
out
in
xor
xlat
cwtl
enter
adc
pop
mov
fcoml
ss
outsb
ss
inc
js
into
mov
cmp
and
adc
mov
sub
mov
inc
in
adc
das
aad
pop
jns
and
out
jae
icebp
enter
fwait
jle
add
mov
imul
shrl
jmp
sbb
mov
jg
dec
push
pop
dec
xlat
xchg
ficoms
mov
mov
jmp
movsb
or
in
daa
pop
sbb
mov
sub
pop
test
inc
je
push
pop
dec
mov
imul
xchg
jle
lods
faddl
xchg
jae
inc
pop
mov
sub
idiv
lahf
aas
dec
jge
dec
aam
xor
pop
out
enter
adc
ja
lret
loop
clc
mov
lea
jle
scas
aad
push
mov
sub
aam
pusha
cwtl
fucomp
int3
in
xchg
dec
xor
jecxz
jns
imul
mov
sbbl
pop
test
cmpsl
cmp
mov
rolb
ret
call
push
fucomip
mov
call
stos
mov
fiadds
mov
jne
sbb
shlb
pop
or
lret
xor
mov
cmp
pop
adc
loope
sub
jmp
scas
fs
xchg
aas
scas
std
push
stc
push
leave
dec
rcr
push
dec
push
andb
daa
sub
jne
mov
cltd
mov
loop
movsl
mov
arpl
ret
mov
xchg
or
xchg
loopne
xor
xchg
mov
leave
or
xchg
push
mov
mov
in
shlb
test
mov
mov
and
stos
lods
lret
cmp
ficomps
push
cmp
pop
scas
lock
adc
loope
jp
push
enter
out
ds
push
pop
sbb
or
cmpsb
and
cmpsb
adc
adc
cmp
push
repnz
insb
jno
daa
adc
loopne
jle
gs
stos
xchg
jl
mov
sub
and
scas
lret
loope
push
aam
sbb
pushf
movsl
int3
push
out
dec
sub
pop
push
loope
mov
jbe
insl
sarb
adc
lahf
cld
or
xlat
mov
xorl
sbbb
lcall
adcb
push
cltd
cwtl
sbb
repnz
mov
inc
xchg
jno
and
push
fisubl
mov
stc
out
scas
inc
xchg
ror
cli
push
loop
jge
add
jns
and
movsb
inc
shl
jns
adc
ljmp
cmp
inc
hlt
add
std
jmp
xor
mov
pop
xlat
in
les
or
test
jp
cwtl
lret
int
into
cmp
stos
push
repnz
int3
add
adc
dec
xlat
icebp
je
sub
ds
xor
mov
and
lahf
rorb
in
push
jae
fdivs
imul
push
xchg
loope
daa
jns
cmp
movsl
mov
xor
addr16
mov
or
fwait
dec
mov
cmp
movsl
add
mov
aad
insl
cs
push
xchg
subl
cmpl
aam
pop
in
loop,pn
stos
push
insl
sbb
mov
jbe
fcoml
cmc
or
insl
push
jno
xor
outsb
setnp
mov
mov
orb
dec
xchg
stos
jbe
mov
dec
jae
test
pushf
enter
sbb
and
sub
dec
fs
fisttps
std
lock
fisttpll
sub
inc
adc
jae
sub
call
cli
mov
jnp
pop
gs
cmc
cmp
sub
jnp
xchg
in
into
cmp
icebp
and
mov
insl
bnd
lret
imul
sbbl
roll
lret
inc
sahf
ds
enter
data16
pop
clc
push
cmp
outsb
mov
idivb
rclb
cmp
or
jnp
xchg
and
cmp
cltd
sub
inc
lahf
fidivrl
cmpsb
cmc
sub
lods
aam
inc
dec
lods
or
dec
xchg
or
push
or
xchg
inc
mov
ss
mov
mov
cmp
inc
inc
insl
insl
mov
ja
sbb
insb
insb
sub
mov
clc
jne
fcoml
fnstcw
cmp
mov
jbe
xchg
jns
ljmp
mov
xor
fcoms
imul
mov
in
jmp
ljmp
xchg
repz
popf
and
not
nop
iret
jbe
or
push
adc
xchg
push
fstps
lret
stos
or
sub
pop
sub
or
xlat
jno
pop
out
mov
out
inc
cs
loop
cmp
push
into
bound
sub
adc
mov
pop
xchg
mov
inc
fsts
mov
sub
xchg
aas
push
ss
test
stos
mov
outsl
fists
add
fs
jg
push
out
add
mov
std
add
xchg
adc
shrb
popf
lds
dec
sbb
hlt
mov
cmp
arpl
pusha
je
out
or
push
sbb
dec
addr16
xchg
scas
mov
mov
mov
fimuls
mov
sahf
jae
cmp
or
call
mov
xor
dec
xchg
mov
mov
mov
or
push
ljmp
xchg
jb
cmp
xlat
cs
cld
gs
std
pushf
cmp
jge
fs
aam
fstp
dec
lods
in
nop
adc
cmpsb
push
loopne
das
fists
inc
call
ds
lcall
jnp
push
fcmovnu
pop
popf
dec
xchg
out
out
sbb
insb
lcall
adcb
mov
push
push
or
sub
or
mov
jae
dec
cs
loop
mov
inc
and
hlt
daa
mov
push
jmp
jo
pop
pusha
pop
jo
pop
out
jb
push
lcall
dec
cs
push
mov
add
fnstcw
push
popf
jg
dec
cmp
das
outsb
mov
insb
pop
cmp
pop
or
and
mov
xlat
cmp
adc
pop
pop
loop
push
push
xor
inc
movsb
sbb
aam
xorl
sbb
jecxz
jns
les
dec
pop
mov
mov
ficomps
xor
std
enter
cmp
and
mov
or
test
insb
stos
shll
sub
xchg
repz
shrl
mov
pop
fcoml
data16
ret
mov
out
adc
lea
leave
inc
push
es
lods
or
imul
push
daa
add
sarb
fisttps
idivl
test
popa
ret
or
or
insb
and
jl
daa
xchg
push
adc
sub
fldt
push
push
sub
inc
cwtl
push
out
sar
dec
sbb
xchg
lcall
xchg
nop
jb
jne
adc
shrl
ss
inc
in
mov
filds
mov
pusha
sub
aam
adc
mov
cmp
in
aad
jbe
dec
mov
ficoms
and
mov
hlt
mov
jecxz
or
js
stos
ret
sbb
push
insl
pop
mov
out
rcr
sbb
lahf
je
adc
imul
mov
repz
inc
jmp
inc
jo
ds
xor
and
mov
mov
xor
dec
cmp
cwtl
push
aad
loop
xor
sub
jns
mov
popa
lahf
or
data16
cltd
adc
iret
and
sahf
dec
xorb
mov
loope
insl
add
jecxz
cmp
insl
incb
jbe
push
pusha
mov
outsb
xchg
mov
xorl
jecxz
xor
bound
cmp
cmp
xor
int3
mov
xchg
or
push
mov
jo
clc
mov
inc
xchg
push
loop
pusha
xchg
nop
sub
test
cwtl
mov
lret
push
mov
imul
cmpsb
xchg
push
add
add
cli
imul
jns
sub
enter
jbe
add
addr16
test
mov
aas
push
pop
mov
stos
rol
push
jp
cli
dec
iret
sub
dec
push
imul
mov
shlb
adc
orl
inc
cmp
dec
xchg
mov
jb
je
push
mov
roll
mov
pop
jecxz
xchg
and
sbb
test
js
das
imul
cmp
sbb
pop
push
shrl
dec
xor
cli
dec
imul
pop
sbb
int3
imul
and
mov
loope
pop
or
das
aam
sub
icebp
or
mov
jns
test
mov
add
jl
pop
lcall
je
call
outsb
mov
cli
mov
lcall
rorb
jmp
mov
cli
xor
rcr
jae
jecxz
leave
popa
out
dec
xor
in
imul
negb
fdivrl
nop
push
dec
sbb
jp
popl
adc
push
xor
shrl
pop
inc
dec
push
in
dec
subl
inc
aad
mov
sbb
mov
out
mov
mov
icebp
mov
xchg
push
andl
push
mov
push
sbb
push
push
pop
shrb
rcrb
repnz
outsl
jns
cmp
mov
jmp
mov
sbb
pusha
icebp
jle
jmp
or
inc
clc
xchg
sbb
test
xorl
cmp
adc
and
scas
sbb
lock
inc
xchg
sub
frstor
ret
sahf
xchg
stos
cwtl
icebp
push
int3
xchg
ret
test
je
add
lret
sar
shl
dec
adcb
in
dec
mov
inc
add
sbb
mov
out
insb
movsl
sbb
jbe
cmpsl
test
xor
or
mov
sbb
sti
sub
popf
js
inc
clc
add
dec
jae
sub
sbb
sbb
or
mov
lahf
adcl
in
lahf
test
dec
test
push
mov
mov
jle
inc
mov
nop
pusha
popa
inc
fsubrl
dec
stos
jae
push
jno
pop
loop
test
stc
push
cwtl
jnp
popf
mov
mov
dec
addr16
in
mov
pusha
fnstcw
push
lods
loop
fcomip
jmp
push
cmc
push
testl
cmp
and
sub
lret
adcb
enter
jp
movsl
arpl
std
repz
in
jle
out
inc
or
arpl
hlt
or
cmp
sbb
cmp
jne
and
out
fldcw
cmp
sub
mov
movzbl
add
dec
push
or
js
xor
xor
or
adc
xor
daa
adc
jbe
cmp
add
inc
pushf
lea
jle
sbb
das
aad
or
das
pop
sub
xchg
jnp
rcr
test
pop
sub
and
decl
stos
addl
mov
nop
sub
iret
and
lods
cmp
push
in
cmp
or
in
jo
xchg
xchg
mov
aad
jno
mov
mov
enter
rcl
push
popf
fidivrl
loope
jecxz
cmpsb
cmc
push
cmp
jge
jae
xchg
inc
aaa
sub
or
pusha
adc
stos
sbb
cmc
and
cmp
sub
mov
xlat
push
fadd
add
pop
in
rcrl
hlt
mov
out
or
out
mov
out
mov
popa
jnp
ret
lds
fcmovnu
pop
xor
gs
test
jl
dec
xchg
push
pusha
dec
push
pop
lea
push
push
icebp
xor
arpl
rorl
lea
xlat
insl
std
push
mov
and
sub
or
add
cmp
mov
pop
dec
fxch
movsb
push
mov
in
pusha
lods
imul
test
iret
jl
xor
xchg
das
dec
repnz
pop
mov
sub
or
imul
mov
scas
fdivrl
pushf
fnstenv
cmp
mov
jecxz
and
stos
mov
ljmp
imul
movsb
cmp
xchg
mov
sar
mov
push
cli
shr
push
dec
and
or
mull
test
xor
or
sahf
out
in
adc
fnsave
popa
fcoms
inc
mov
pusha
lret
rcrb
aam
das
neg
mov
pop
mov
jl
aad
fwait
andb
iret
dec
in
or
stos
mov
pop
inc
aam
sub
jle
adc
in
push
adc
fidivl
mov
pusha
mov
pop
imul
mov
jnp
mov
xchg
or
cmc
sub
mov
clc
cmc
in
test
dec
inc
inc
inc
inc
out
add
xor
push
imul
or
ret
pop
xchg
xlat
mov
cltd
out
mov
lods
fldt
into
mov
aas
sbb
mov
rcll
stos
icebp
inc
sub
xchg
in
out
mov
es
jno
xchg
clc
mov
pushf
iret
and
push
scas
jae
jmp
in
popa
ss
or
adc
or
jbe
nop
dec
add
clc
clc
gs
add
sbb
adc
and
addb
arpl
cmp
dec
inc
ds
pushf
int3
pop
stos
out
mov
sarl
cltd
call
adc
aaa
adc
xchg
es
push
cmp
push
jne
inc
and
xor
and
mov
mov
out
loopne
popa
dec
popf
jne
ljmp
jge
jge
jnp
xchg
lea
pop
push
cltd
pop
sbb
movsb
cmpb
insb
or
and
stos
dec
xor
mov
xchg
pop
cmpsb
mov
add
mov
clc
out
xlat
inc
out
xor
bound
jl
inc
push
pop
clc
pushf
pusha
push
out
jmp
out
cmp
test
in
jno
ljmp
and
sbb
dec
loopne
mov
push
mov
push
xor
inc
adc
aam
loopne
and
ja
xchg
mov
jne
sub
adc
cmpsl
or
and
mov
lret
push
xchg
jge
mov
shll
pop
cmp
and
pusha
int3
inc
arpl
xchg
jno
jae
out
rolb
and
fidivl
mov
cmp
mov
xchg
inc
pop
fucomip
mov
jmp
jnp
sub
xor
pop
fimull
sub
xlat
cmpsb
or
js
push
imul
sahf
insb
add
xor
jl
and
dec
lret
and
and
lret
shrb
xor
movsl
testl
sub
mov
xor
fimull
fs
and
push
repz
dec
lret
inc
and
fwait
pop
js
scas
add
jp
mov
pop
stos
inc
lret
jae
sub
sub
icebp
xchg
lock
jb
aad
cmpsb
mov
es
mov
ds
or
sbb
inc
push
xchg
ret
retw
jle
jl
icebp
and
cltd
call
dec
cmp
mov
jle
ret
idivl
orl
andl
clc
or
loope
mov
loope
inc
jbe
pop
sbb
lea
enter
stos
std
add
fidivrl
inc
dec
enter
lmsw
in
xchg
fsubs
mov
mov
xor
xor
push
sub
mov
dec
pop
sub
cmp
mov
movq
pushf
jno
cmpsl
sub
cltd
cmpsb
sbb
in
aas
leave
lds
insl
ret
mov
adc
mov
mov
adc
mov
xor
testl
mov
push
mov
push
leave
in
fstpl
cmp
adc
xchg
inc
jle
cli
sbb
jge
adc
or
and
inc
popf
das
mov
loopne
mov
aaa
jp
mov
pop
sbb
jo
clc
dec
mov
mov
inc
mov
mov
dec
scas
mov
mov
dec
pop
jmp
inc
iret
jg
cltd
add
push
push
adc
in
pusha
mov
xchg
jno
dec
test
mov
fistpl
outsb
cltd
xor
cld
rcrb
pop
stos
sub
lods
cmpsl
or
cmpl
ror
ret
cmpsl
cmp
outsb
push
xchg
xchg
sbb
dec
inc
sbb
mov
sub
negl
popl
nop
movsl
in
loop
jb
sub
dec
cmc
xor
adc
sub
or
dec
flds
cmpl
stc
and
sub
push
hlt
jae
push
sbbb
adc
inc
fwait
jb
adc
and
and
loope
cmpsl
jne
sbb
loope
mov
ja
xchg
enter
jnp
in
xor
pop
xchg
rolb
push
mov
dec
pop
xchg
repz
ret
ficomps
mov
aaa
fwait
ds
mov
lcall
cmpsl
push
test
mov
mov
lret
outsl
mov
xchg
mov
hlt
adc
sti
das
addl
mov
cmp
mov
rol
insb
in
mov
inc
xchg
mov
call
and
enter
mov
xor
loope
rcll
test
in
pop
mov
add
lods
sti
movsl
xor
sbb
pop
or
mov
int3
divl
or
mov
mov
push
rorl
push
cmp
jae
mov
inc
xchg
adc
jle
jne
lock
fisttps
repnz
push
mov
mov
imul
push
jmp
out
int3
pop
sub
in
or
clc
addb
das
repz
xchg
or
jo
insl
imul
addb
sbb
aas
push
jl
or
in
popa
in
das
lret
mov
iret
dec
fwait
mov
jae
data16
out
cmc
arpl
xchg
sbb
pop
and
push
mov
mov
jle
stos
cltd
inc
sbb
divb
iret
aas
lcall
call
dec
mov
sbb
es
push
int
mov
gs
lahf
lods
outsb
mov
mull
mov
jecxz
xlat
pop
adcb
lds
clc
iret
and
xchg
fisttpll
nop
and
rcrb
out
or
xchg
cmp
mov
push
jmp
pushf
mov
loop
fildl
hlt
fdivp
shrb
jnp
decl
mov
sbb
fs
fcoml
sub
push
push
pop
mov
aaa
imul
xlat
ljmp
int
enter
cmp
cwtl
nop
jge
xor
jae
mov
xchg
mov
inc
mov
iret
mov
sbb
mov
mov
mov
push
dec
fsts
sub
out
les
or
jg
fisubl
lret
mov
lods
push
mov
jae
in
rcl
jmp
clc
push
in
or
add
add
push
icebp
pop
pop
adc
add
or
fldcw
lahf
mov
aaa
inc
imul
dec
adc
inc
push
out
mov
add
mov
dec
xchg
jns
push
jge
xorb
out
adcb
popf
inc
stc
mov
sbb
add
fcmovu
inc
cmp
add
dec
fcoms
pop
rolb
lods
pop
push
cmp
xchg
jnp
ja
xor
push
xor
xchg
push
shl
jg
mov
lods
adc
into
or
ds
inc
mov
arpl
ljmp
push
xchg
test
decb
cmpsb
lret
add
xchg
xor
aad
sbb
inc
push
mov
ret
cli
fnstsw
repz
cmpsl
mov
fwait
sub
ljmp
or
jmp
sbb
imul
and
or
mov
sysexit
inc
rcll
lret
pop
aam
je
fldl
and
dec
pushf
push
clc
lret
add
jmp
or
ss
or
stos
lret
xor
jns
leave
add
inc
jecxz
testl
xchg
fisubrl
ret
and
jl
push
mov
or
push
inc
push
sub
imul
aam
sub
mov
dec
adc
std
push
gs
pusha
add
jno
cmpsl
pop
mov
jl
pmovmskb
mov
cmp
dec
jne
xor
popa
add
mov
rolb
jp
adc
repnz
insb
scas
pop
pop
jne
pop
test
xchg
cmp
mov
sbb
lods
jp
imul
ja
and
and
push
fcompl
shl
or
out
xor
ja
push
xor
cmpsl
mov
push
adc
sub
nop
in
and
movzwl
insb
lock
fs
add
out
sub
out
nop
stc
xchg
fistl
adc
xchg
mov
sub
fcoms
lcall
push
js
adcl
inc
pop
imul
jg
test
stc
mov
inc
popf
sbb
stos
leave
cwtl
int
pop
repnz
pop
stos
push
jecxz
cmpsb
or
mov
imul
je
and
cmp
or
pop
nop
pop
stc
mov
dec
aam
mov
push
pop
mov
test
enter
xchg
inc
pop
mov
test
jnp
insl
pop
xchg
xchg
jbe
dec
in
ds
js
jmp
fidivrs
loope
sti
scas
push
pop
mov
mov
cmp
or
rcll
sbb
out
xchg
mov
incb
mov
xchg
adc
add
sbb
mov
and
rclb
ret
stos
imul
call
scas
ss
rcl
int3
cli
out
sbb
stc
fs
shlb
inc
aas
inc
sub
dec
xor
fidivrl
dec
jge
inc
sbb
xchg
popa
mov
popa
ss
push
push
out
jae
icebp
out
push
out
mov
cld
sbb
xor
inc
push
and
pop
popa
sub
push
sub
or
inc
inc
dec
stos
mov
pop
or
dec
arpl
mov
mov
out
aad
or
cmp
sub
jp
xchg
xchg
lds
and
sbb
push
loop
jae
cltd
cld
jecxz,pt
or
ja
mov
imul
int3
mov
lds
mov
pop
fimull
aam
add
out
sub
sub
xchg
push
or
mov
movsl
imul
mov
inc
loope
cmp
xchg
sti
xchg
aad
adc
inc
and
loopne
cmp
mov
add
daa
push
or
or
pop
mov
and
mov
xorl
push
cmp
sub
push
cli
pop
int
inc
idivb
jnp
in
je
jle
jle
fwait
outsl
xchg
rolb
mov
add
xor
int3
sub
dec
jmp
push
adc
outsb
pop
or
insl
jne
divb
lahf
inc
adcb
mov
and
push
cmp
imul
sub
sarl
scas
xchg
out
xchg
mov
jns
int3
pop
andb
repnz
add
cmp
cmpsl
dec
daa
aam
adc
mov
mov
int3
sbb
insl
es
sub
xor
cltd
mov
pop
jne
mov
lds
cli
popa
insb
add
jp
fs
and
jp
inc
roll
ficompl
fs
xchg
mov
and
fs
outsl
jecxz
cld
sbb
fldt
cmpl
pop
in
xor
addb
sbb
pop
mov
push
mov
ss
jno
stos
int
in
insb
rcl
hlt
pop
mov
jmp
or
mov
ljmp
outsb
or
gs
jmp
or
movsb
jle
les
pop
inc
stc
lcall
pop
xor
cmp
mov
popa
adc
jge
pop
popf
in
mov
scas
lcall
ret
lret
mov
and
data16
insb
ficoms
xor
icebp
jae
dec
cli
adc
xchg
or
mov
je
insl
pop
push
out
punpckhbw
fptan
pop
push
pushf
test
sub
xor
loopne
and
mov
jne
out
pop
pushl
sti
mov
dec
jne
and
fadd
cwtl
in
testb
xchg
sub
cmp
into
mov
mov
test
mov
xchg
cmp
push
xchg
std
mov
cltd
xchg
iret
pop
jbe
arpl
lcall
dec
repnz
add
call
pop
sbb
inc
sbb
cmp
xchg
pop
out
sub
cmp
popf
subb
decb
xlat
fstpt
mov
leave
movsl
ss
fs
bound
arpl
lods
inc
in
cli
dec
aas
pop
inc
push
inc
imul
mov
outsl
jns
jle
xchg
push
sbb
xchg
fldt
sub
lods
push
in
sub
xor
mov
ret
push
imul
mov
mov
cld
call
test
mov
xor
roll
dec
iret
or
mov
jo
dec
mov
dec
mov
pop
cwtl
mov
movb
push
popf
ja
call
les
jmp
fistps
add
xchg
fwait
lea
test
cmp
bound
insb
sbbb
shlb
inc
loopne
mov
outsb
xor
mov
jp
pop
cmp
or
fucom
and
adcl
les
mov
or
aas
push
adc
mov
mov
jnp
cs
lea
inc
lods
mov
ror
bound
in
pop
jmp
adc
daa
cmp
js
into
jae
dec
push
and
ret
jmp
mov
cmpsl
xchg
mov
sahf
cmp
jmp
dec
mov
or
pop
jnp
adc
fidivl
jb
fwait
inc
jl
pop
testl
addr16
shll
mov
pusha
repz
into
outsl
push
fwait
arpl
aas
xor
or
jp
sub
or
adc
jbe
pop
cwtl
cwtl
test
pop
mov
ds
fst
mov
push
push
push
in
imul
adc
loop
pusha
dec
js
push
loop
cld
lahf
sub
popf
cmp
fisttpll
or
push
sub
inc
sbb
aas
push
das
cmp
xor
push
movsb
dec
rcrl
insb
sbb
adc
dec
xchg
xchg
pop
dec
cmp
xchg
adc
call
sub
stos
add
or
mov
inc
call
push
lahf
push
xchg
pop
in
aaa
addr16
xorb
int
add
push
xorl
mov
in
xchg
das
or
sahf
jle
inc
test
and
mov
cli
addb
out
lcall
mov
lahf
jb
call
test
icebp
jle
push
push
lret
sub
stos
pop
inc
test
mov
jl
mov
fistl
and
push
outsl
popf
xchg
jmp
subb
adc
adc
repz
mov
push
jnp
roll
stos
fwait
mov
mov
fisubs
lock
fs
loope
in
shl
leave
sbb
add
mov
mov
pop
sbb
imul
jae
cs
ffreep
xor
ja
xchg
out
imul
mov
clc
imul
mov
pop
push
push
sub
data16
dec
xchg
mov
cmpsb
cmpsb
cli
cmp
iret
nop
dec
ret
in
push
xor
sub
cmp
pop
or
pop
das
test
cmp
mov
sbb
jecxz
or
pop
mov
push
out
lods
dec
roll
notl
sub
cmp
cmp
jae
xchg
jge
add
and
mov
cltd
lea
lcall
divl
mov
jbe
bound
aaa
adc
dec
pop
loope
fs
cmc
daa
mov
call
mov
pop
sbb
fisubrl
fidivs
mov
sbb
fwait
push
sbb
roll
xchg
faddl
jno
out
insb
xorl
test
add
scas
or
jbe
push
adc
out
sbb
pop
pushl
xor
cmp
inc
ds
addr16
call
pop
pop
stc
es
jo
mov
cli
cmpsl
lret
je
addr16
or
inc
or
xchg
sub
inc
aaa
cmp
pusha
int
pop
jae
push
xor
pusha
push
mov
jae
aad
jl
in
aas
xchg
add
cwtl
jae
and
aaa
add
mov
daa
push
mov
xor
push
jp
fldenv
mov
hlt
aaa
xchg
scas
push
sbbl
xor
mov
push
bound
dec
outsl
cli
int
addb
stos
nop
loopne
lods
fucomi
repz
outsl
cld
add
mov
pop
es
cwtl
and
sahf
mov
pop
push
xor
jge
jg
lods
mov
pop
xchg
adc
mov
test
jmp
jecxz
cmc
ss
jne
fadds
movsl
and
adc
insb
sbb
mov
mov
add
jo
lcall
mov
push
popf
aam
pop
or
les
cmovle
pop
xchg
or
sbb
inc
clc
jnp
pop
aaa
add
sbb
add
test
mov
mov
mov
in
mov
mov
loopne
dec
or
and
sbb
jp
mov
aad
ds
out
hlt
outsl
xor
push
imul
ret
stc
sub
aas
lock
out
imul
push
outsb
sub
pop
push
mov
sbb
add
lds
xchg
inc
bound
inc
aad
repnz
out
fcoml
jae
mov
jae
push
mov
lea
push
std
jge
imul
and
das
and
test
dec
popf
loope
jmp
je
jo
dec
insl
loop
push
clc
cli
jl
sbb
rcrb
sbb
rcrb
inc
sbb
cld
or
push
inc
mov
mov
out
mov
or
dec
fst
lods
ljmp
addb
movsb
int3
mov
jae
xchg
arpl
push
add
mov
jmp
mov
sbbl
sub
push
xchg
js
aas
pop
loopne
ja
mov
std
mov
pop
pop
xchg
into
cmp
lods
and
mov
aad
jbe
das
jp
repnz
or
test
xchg
ss
jmp
nop
sbb
pop
mov
cmc
inc
movsb
vmread
pop
cmp
cmpsb
negb
pop
loope
xchg
inc
fsubrl
lahf
mov
add
add
dec
pmaxsw
mov
shrb
test
inc
fisubrs
out
xor
jge
shl
xor
ja
sub
out
out
lret
fldenv
push
data16
int3
inc
shrl
shlb
stos
and
mov
cmp
add
rclb
or
ds
add
and
popf
sub
add
mov
mov
iret
xchg
mulb
idivb
out
xchg
mov
mov
iret
std
xor
scas
divb
das
dec
cltd
add
divb
mov
ret
gs
sarl
mov
mov
cmp
or
adc
cmc
test
xorb
inc
out
sbb
cmp
out
hlt
aaa
out
outsl
cmpl
cmc
jmp
faddp
and
jp
add
fwait
pushf
adc
push
add
dec
ds
mov
pop
nop
xchg
cmp
or
jne
fnstsw
jge
lods
shrb
mov
mov
insb
sbb
pop
dec
addr16
out
clc
sbb
test
hlt
daa
icebp
in
nop
or
jp
aam
aas
in
fisubrl
or
and
out
aad
cs
aas
inc
ja
jb
mov
pop
xchg
pop
loope
cltd
push
mov
js
add
popa
or
xchg
mov
cwtl
adc
sbb
sub
cmpsl
and
xor
sbb
inc
das
jmp
jecxz
xor
xor
ficoms
xchg
enter
sarl
jae
cltd
outsb
movsb
leave
fs
adc
stc
or
inc
aam
aaa
push
mov
gs
and
fisubl
jge
insl
cmp
jp
inc
cmpsb
push
mov
arpl
sbb
xor
imul
arpl
xchg
sub
in
lahf
pop
mov
in
fisubs
jo
psubq
jp
xor
lret
and
popa
ljmp
ja
test
inc
lret
mov
adcl
sub
insb
stos
iret
cmp
testl
sbb
repnz
inc
and
mov
pop
mov
sarb
sbb
fldt
leave
roll
aam
cmp
ja
aaa
shrb
sbb
jecxz
sub
in
dec
push
loop
test
jg
sti
insb
ljmp
movsl
mov
fildll
mov
std
loop
xor
pop
mov
int
and
push
lahf
gs
cmp
testl
ja
jg
cld
adc
jns
pop
xor
lret
mov
add
inc
lods
pop
mov
xchg
lret
jmp
pop
xchg
push
adc
adc
mov
adc
arpl
lahf
daa
inc
clc
ljmp
sub
pop
mov
jg
icebp
or
mov
mov
cltd
sub
add
loop
and
scas
mov
rcll
pop
add
stos
sub
in
mov
cmp
cld
lds
adcl
int3
xchg
js
ret
cmp
cmp
mov
out
adc
adc
sbb
sbb
and
xor
mov
pop
outsb
ds
mov
push
lahf
pushf
dec
fsubs
in
pop
loope
testb
jnp
mov
pop
jb
sbb
pop
shll
cmpsl
icebp
sub
nop
jle
inc
lds
push
xor
adc
pusha
outsl
push
add
jns
or
mov
inc
test
popf
xlat
pop
ret
es
addr16
clc
lods
sub
mov
sbb
sarb
push
pop
fiadds
lds
and
out
add
mov
adc
pop
int
inc
xchg
in
xchg
lahf
outsl
jne
test
lahf
daa
mov
stos
je
jl
mov
into
loopne
push
xlat
xchg
sahf
loopne
add
jmp
pushf
cmp
popl
iret
jnp
cwtl
sbb
stc
loop
pop
fistpll
sbb
lea
lods
out
shrb
jno
mov
mov
cmc
cmp
cmc
mov
lret
pop
inc
xor
sahf
lcall
imul
sarl
jb
stos
aas
and
fists
sub
fsubrl
inc
and
jnp
cmp
ja
add
addb
sub
or
inc
leave
loop
xchg
aam
das
aaa
add
aam
divb
xchg
jp
pop
aam
testb
pop
repnz
daa
dec
test
mov
sbb
scas
lret
call
addr16
sahf
fdivl
fsubrs
xchg
cmp
sub
pusha
jne
mov
add
subl
out
test
lock
mov
fs
xchg
scas
mov
xlat
outsb
out
mov
test
jmp
shlb
int
std
push
sti
pop
xchg
adc
mov
je
jg
mov
mov
dec
movsl
loopne
jle
lods
fimull
mov
in
fisttps
incl
sbb
mov
and
fildll
aaa
mov
xorl
push
stos
mov
adc
call
stc
test
add
adc
xchg
aas
mov
dec
sbb
rcrb
xor
mov
inc
iret
movsb
dec
dec
push
iret
cwtl
push
sub
loop
push
sub
ret
jp
sub
test
orb
data16
lahf
test
sbb
mov
stos
sarb
sbb
sub
lock
and
mov
aas
cmc
cld
pusha
adc
sbb
push
je
cmp
cmp
outsb
jbe
leave
jg
test
hlt
sub
sub
mov
bndldx
leave
leave
std
adc
sub
fsts
pop
sbb
shlb
in
pop
dec
shl
jle
mov
inc
or
xchg
xchg
push
fcompl
jns
or
mov
adc
push
xchg
push
leave
in
popf
rolb
fcomi
inc
gs
push
pusha
out
push
push
jmp
jbe
add
sbbl
lods
stos
adc
mov
inc
cs
xchg
stos
cmp
stc
adc
dec
loopne
pop
push
imul
out
jle
hlt
test
mov
add
jl
mov
adc
psrad
out
xor
and
inc
in
xor
push
sub
pusha
or
imul
jnp
mov
test
fcoml
xchg
mov
sub
stos
add
les
fiadds
inc
pop
insl
mov
pop
cmpsl
cmpl
mov
shll
sbb
xchg
push
out
cmp
nop
pop
push
cld
cltd
test
inc
mov
bound
sub
outsl
mov
ror
xchg
or
or
adc
idivb
in
add
pop
insb
ja
clc
loope
ret
incl
or
lock
jb
mov
lcall
mov
adc
cmp
xchg
in
mov
stc
sub
push
add
setl
imul
dec
mov
lea
dec
push
cli
mov
push
scas
lahf
mov
scas
loope
sbb
pop
repz
pop
pop
and
scas
and
outsb
jcxz
outsl
pop
add
test
sub
ret
jl
loop
lods
push
cmc
dec
cmp
popf
and
mov
mov
pop
cmpsl
aas
xchg
lahf
xchg
push
add
mov
mov
ret
dec
mov
mov
add
jbe
cmp
insb
inc
inc
push
jbe
push
pop
jg
pop
movsb
mov
out
xchg
mov
cmp
popl
cli
add
and
mov
ja
and
movnti
sub
mov
in
fisttpl
push
add
mov
inc
mov
mov
dec
dec
add
or
mov
lods
stos
add
in
rcl
push
push
sbbb
vpcmpeqw
dec
mov
or
adc
popl
aad
sbbb
das
push
outsl
out
mov
mov
fsubr
sbb
ret
xor
in
jae
ss
popf
jg
sbb
fldenv
and
or
pop
in
add
or
or
out
test
dec
pop
inc
das
and
loopne
movsl
sarb
mov
mov
lock
jmp
add
cmpsl
mov
mov
and
mov
adc
jmp
out
jp
cmp
stos
cmovs
and
into
pop
aam
push
jbe
pop
cmpsb
repz
jo
sub
out
lods
and
call
in
aaa
lods
add
adc
std
xor
cmc
aam
ret
loope
rcrb
cmpb
mov
stos
hlt
cltd
pop
ret
push
mov
sbb
fisubrs
add
scas
adc
insb
out
dec
xor
cmp
mov
mov
test
bound
adc
clc
push
stos
call
add
and
sub
test
pushf
std
repnz
xor
cmc
das
jl
or
dec
and
xor
jecxz
aas
push
add
jle
or
fs
les
jbe
fstpt
andb
rclb
fimuls
movsl
inc
push
mov
pushf
pop
mov
imul
xchg
xchg
lret
cmp
jae
push
in
outsl
out
or
cli
push
subb
mov
xor
xchg
dec
cmp
ja
int3
mov
xchg
pop
mov
push
popf
lods
int3
jecxz
cli
aad
movb
cli
nop
call
and
sti
out
jo
xchg
push
pop
or
push
and
lahf
jmp
mov
push
mov
adc
push
out
loope
sbb
repz
mov
dec
fmuls
jmp
sbb
insb
and
stos
mov
aam
add
mov
lcall
icebp
xor
add
insb
lods
dec
adc
fs
jg
js
or
cmpl
and
lret
fistps
aaa
push
dec
jnp
push
sub
dec
pop
popa
es
gs
daa
outsl
sub
xor
mov
jmp
push
popf
push
mov
cmpsb
mov
cmp
decb
ror
dec
sbb
gs
sub
addr16
jp
movsb
xchg
xorl
fimuls
shll
mov
mov
pop
push
mov
js
ljmp
push
and
gs
int3
fwait
sbb
subl
add
sub
inc
sbb
cmc
fisubrl
push
sub
xor
aas
jno
pop
push
mov
rclb
push
fldenv
jb
loop
test
jmp
mov
jle
fs
pop
push
fsts
ret
in
pop
sbb
adc
aas
xchg
aas
push
jae
dec
dec
push
insl
pop
mov
add
fimull
hlt
xchg
subb
sub
sbb
and
and
fisubrl
pop
cmp
push
lock
iret
xchg
cmp
xchg
fcmovbe
push
mov
push
or
mov
orl
xchg
push
xor
sahf
into
push
cmpsl
cmp
xchg
ja
or
or
jo
mov
push
dec
and
jnp
pop
into
test
sbb
mov
mov
push
mov
test
outsb
mov
mov
int3
mov
jae
or
mov
jmp
das
push
hlt
out
mov
push
push
dec
xor
lods
popa
jg
sbb
lret
jp
sub
shlb
shrb
push
fldl
add
add
jecxz
cmp
in
mov
mulb
bound
or
insl
push
adc
pushf
sbb
lret
fidivrs
jmp
movb
adc
std
pop
push
sub
stos
pop
xlat
inc
cmc
gs
pop
inc
outsl
jne
mov
adc
jae
pop
mov
mov
inc
mov
add
ljmp
aad
loop
and
sub
push
adc
ret
pop
jno
push
push
inc
lea
sbbl
test
shl
sbb
sbb
mov
mov
inc
inc
daa
dec
into
cmc
cmp
loopne
test
ljmp
mov
xchg
into
mov
mov
jecxz
xorb
sbb
enter
lahf
pop
mov
push
jb
loop
movsl
inc
in
dec
mov
fdivr
push
jecxz
or
jo
test
add
and
xor
lahf
ss
pusha
ljmp
data16
and
fildl
adc
mov
stos
testl
testb
lcall
das
sub
xlat
jg
inc
xchg
push
dec
lods
mov
pop
inc
mov
loopw
jl
inc
sti
lds
push
adc
data16
xchg
mov
hlt
push
dec
inc
aas
sub
mov
cmp
adc
push
ret
or
stos
imul
inc
jl
bound
test
cmp
mov
call
inc
sbb
les
lds
jo
dec
fdivs
sbb
xor
xor
ljmp
push
jle
mov
in
xor
loope
mov
push
ljmp
mov
rol
jbe
hlt
sub
jl
arpl
in
fisubs
idivl
mov
or
fsubr
fs
pop
pop
mov
mov
mov
push
jg
sarb
mov
in
pop
fisttpll
adc
out
sarb
jns
adc
sbb
jecxz
inc
fldt
loope
ja
and
out
dec
ss
jl
pop
mov
mov
insb
cmp
jge
out
mov
fsts
in
hlt
iret
jl
pusha
xchg
mov
jo
clc
cs
sub
sub
call
movsb
inc
mov
cmpsb
dec
sbb
test
add
sub
out
jnp
mov
sub
divb
jge
mov
sahf
cli
push
push
xor
fwait
xchg
test
jg
mov
shll
call
loop
out
xor
sub
das
push
add
ja
data16
mov
jbe
jns
sub
rorl
push
ljmp
dec
adc
push
dec
sbb
iret
add
add
mov
leave
pop
cltd
outsl
fs
std
and
cli
mov
mov
dec
xor
xor
mov
fmuls
mov
or
push
dec
push
inc
andb
in
dec
hlt
and
scas
cmp
jmp
dec
addr16
mov
add
outsl
jb
dec
fadds
add
fldenv
mov
stc
out
shll
stos
fcmovne
dec
cld
inc
inc
cmp
adc
inc
mov
cmp
cmp
or
mov
insb
nop
pop
push
jne
je
jle
jbe
imul
nop
mov
loop
mov
bound
lcall
push
xor
adc
pop
sarl
fimull
addr16
sub
xchg
inc
out
hlt
xchg
inc
das
lahf
cmp
sti
mov
mov
movsl
push
std
xor
jo
mov
scas
sbb
adc
cmc
mov
cmpsl
test
outsb
ds
mov
push
add
enter
hlt
mov
sub
and
push
dec
cltd
loopne
sarb
and
push
inc
sub
jne
scas
xor
sbb
cld
lret
sbb
cmpsb
fbld
repnz
out
cmp
mov
sub
lahf
push
ljmp
insb
push
mov
mov
stos
pop
pusha
push
fimuls
jl
jmp
mull
inc
mull
and
test
mov
and
dec
inc
cld
addb
bound
dec
pop
cmc
jge
mov
sbb
jg
mov
insb
stc
push
xchg
dec
fcoml
lahf
jno
movsb
jmp
mov
mov
in
pop
mov
les
mov
out
pusha
mov
loopne
int
icebp
es
or
sub
jl
jle
aaa
repnz
cmpsl
scas
test
mov
arpl
mov
pop
rcl
outsb
test
je
imul
xor
add
pop
jl
enter
add
xchg
leave
shll
shl
mov
call
rcrl
sbb
imul
fldt
cld
mov
ds
ret
popa
mov
adc
cld
pop
pop
mov
hlt
ror
js
pop
cmpsb
ret
xor
loope
nop
xlat
fists
mov
pop
out
das
mov
pop
xchg
xor
mov
out
xor
xchg
dec
mov
clc
xchg
in
mov
out
dec
andb
stc
and
inc
add
out
ja
out
test
ds
inc
jae
scas
loopne
jmp
arpl
dec
inc
cmp
fsts
bound
pushf
dec
clc
pop
out
fldt
push
bound
inc
pop
pusha
xchg
lods
inc
aas
cmp
cmp
scas
insl
test
out
push
push
xlat
addr16
cmpsl
xor
out
jb
loop
pop
mov
push
xchg
jno
rcrb
inc
push
stos
popf
pop
int3
dec
int3
movl
pop
dec
into
rcr
cmp
pop
mov
jae
std
scas
jbe
add
jle
cld
inc
pop
xor
mov
pop
pop
xor
push
dec
mov
mov
mov
movsl
xor
imul
ret
aam
out
sbb
jbe
push
ss
sbb
xchg
cmpsl
test
gs
ds
stos
lcallw
imul
fldcw
cmp
sahf
add
add
push
sub
cwtl
imul
rcrb
ss
sbb
ss
sub
pop
push
idivl
push
mov
jns
adc
aas
stos
push
leave
ret
jg
in
lods
pop
ror
ljmp
or
stos
sbb
mov
jecxz
fcmovnbe
push
push
or
dec
js
push
aas
push
repz
push
es
icebp
pop
addr16
inc
pop
mov
pop
loop
or
leave
pop
mov
sbb
or
inc
and
jo
fdivs
sub
and
int3
dec
test
or
jmp
lods
out
pusha
mov
and
sub
lahf
std
dec
xorb
mov
cmp
xor
scas
outsb
mov
int
ror
cmovp
pop
leave
push
fisubl
mov
fdivs
mov
insb
push
rorl
pop
xor
dec
aam
test
jecxz
or
adc
xor
aad
xchg
or
data16
mov
mov
cmovle
repz
mov
mov
and
inc
pop
jo
aaa
loopne
sbb
test
mov
pop
leave
icebp
mov
pop
xchg
nop
pop
pop
je
flds
sbb
push
lret
inc
cmp
outsb
bound
mov
xchg
mov
pop
mov
bound
push
leave
outsb
or
jb
jp
repnz
jl
nop
movsl
pop
popf
std
cmc
into
out
test
insl
push
ds
jl
aaa
imul
scas
pushf
dec
jns
add
mov
loopne
fiadds
or
jns
fcoms
ficoml
or
pop
push
mov
cwtl
cld
mov
rolb
xchg
sub
idivb
insl
pop
cmpsl
daa
lahf
mov
stc
aad
scas
pushl
jnp
cmp
cmp
pop
jp
and
notl
fldl
loop
push
jno
and
inc
mov
fs
setb
gs
mov
jle
add
mov
mov
xor
js
jmp
bound
out
aam
scas
jb
lcall
jb
pop
adcb
inc
movsb
or
mov
stos
imul
pop
pop
loopne
mov
adc
sub
jmp
popf
fiadds
lds
inc
push
loope
rclb
mov
inc
je
idivl
add
lcall
jg
push
mov
mov
imull
dec
xor
imul
jo
div
lahf
out
and
inc
arpl
adcl
rol
or
push
pusha
dec
xor
pop
leave
add
out
jmp
ds
xor
addb
dec
jg
mov
or
lods
es
dec
icebp
mov
scas
mov
push
pusha
sahf
sub
xchg
sub
mov
loop
das
idiv
mov
rep
jl
xor
adc
repnz
ja
iret
fdivr
gs
pop
jnp
sbb
pop
lahf
mov
sbb
add
je
pop
cmp
sti
js
int3
pop
or
mov
in
mov
into
inc
mov
sub
outsl
pop
dec
jo
push
out
cwtl
cmpsl
outsl
stos
push
xchg
mov
mov
xchg
pop
inc
jo
es
arpl
movsl
adc
adc
xchg
pop
mov
dec
jo
xor
pop
cwtl
jmp
jle
adc
sbb
add
sahf
repnz
imul
enter
pop
sbb
andl
je
mov
imul
mov
xlat
mov
sbb
jmp
xlat
imul
int3
int
or
in
xchg
lods
jecxz
cmpsl
in
mov
pop
add
hlt
mov
scas
leave
int
lods
out
cmp
incl
jo
cld
sub
mov
add
sub
push
in
daa
add
xor
das
addr16
jl
imul
test
test
xchg
fiadds
mov
sub
adc
fisttpll
sub
fadds
shlb
pop
pop
xchg
inc
push
rorl
test
lcall
mov
aas
decl
cmp
pushf
cmpsl
sti
jb
mov
mov
lds
std
inc
ret
aaa
xor
mov
test
lahf
mov
rcrl
sub
popf
ret
jno
test
test
ffreep
sub
xchg
loopne
leave
bound
andl
mov
mov
mov
cmp
push
mov
pop
and
repnz
adc
mov
push
sub
or
sub
in
inc
cmp
ljmp
out
cmp
pushf
sahf
add
iret
jecxz
test
pusha
adc
sti
loopne
sbb
jp
out
incl
and
add
cwtl
xor
call
ret
lret
aaa
xchg
imulb
sub
loope
subb
rcl
fsubrl
pop
or
sub
popf
data16
leave
sbb
mov
lea
outsb
mov
push
adc
pop
or
jne
repnz
jle
in
mov
pop
call
add
mov
stc
cmp
dec
mov
xor
sub
call
stos
mov
inc
adc
rclb
sbb
out
dec
sbb
adc
aam
push
xor
mov
nop
xchg
stc
sub
sarl
mov
mov
mov
sub
mov
xchg
inc
jge
fimull
and
stc
xor
lea
mov
cmp
lea
inc
push
cmp
mov
jg
cmp
mov
lods
add
loopne
cwtl
outsb
sub
pop
pop
sti
pop
popf
subb
mov
sahf
jle
xor
lahf
bnd
dec
mov
icebp
gs
sti
mov
gs
pop
jo
xor
insl
gs
mov
mov
sub
sbb
movsl
xchg
and
pop
ss
out
stos
std
push
add
sub
cli
sbb
jle
jmp
mov
in
or
les
pop
cmpsl
or
cmc
pop
mov
aam
mov
jo
dec
pop
adc
jnp
flds
push
and
adc
and
lods
roll
dec
out
adc
int3
fbld
test
sub
pop
add
xor
lcall
mov
aam
cmpsb
ror
jl
pushf
int
pop
pop
frstor
inc
push
jae
cmp
ja
stc
and
std
mov
inc
xchg
jnp
rorl
or
inc
in
adc
push
ljmp
loopne
aas
add
jecxz
jecxz
rcll
xchg
pop
mov
mov
sbb
mov
mov
je
pop
add
xor
push
mov
repz
out
scas
ds
mov
insl
in
enter
add
subb
mov
and
repz
xchg
scas
push
push
loop
test
jbe
bound
nop
shrl
fcmovnu
jmp
daa
in
push
pop
je
mov
hlt
mov
push
and
xchg
fstpl
repnz
insb
xor
pop
cvtps2pd
mov
int3
and
test
dec
scas
jo
mov
xchg
clc
push
imul
adc
stc
es
std
nop
insb
xlat
out
lods
das
mov
fstpl
jns
in
xor
daa
pop
std
sbb
mov
shrl
dec
jo
add
mov
cltd
and
sahf
lahf
jmp
jae
sub
ja
fists
mov
sub
or
add
jecxz
inc
shll
nop
jb
or
out
fistpl
in
fcoml
mov
aas
or
lret
dec
orl
pop
and
sub
cli
insl
aas
sti
inc
out
popf
or
ret
xchg
rorl
or
aaa
movsl
stc
in
scas
dec
loop
mov
mov
lret
lods
sarl
mov
nop
out
sarl
test
jp
or
sahf
xor
xlat
cmpsl
mov
cmp
mov
sbb
int
lods
inc
inc
icebp
stos
adc
call
stos
sbb
aas
add
repnz
pusha
inc
popf
cmovo
outsb
and
mov
mov
mov
jb
dec
fimull
mov
daa
adc
cli
adc
lcall
jg
dec
icebp
sbb
sub
and
or
xor
pop
ds
nop
push
xchg
pop
cmp
sbb
leave
pop
fisttps
or
xchg
insb
pop
mov
movsl
out
ret
adc
ss
xchg
mov
xchg
fwait
int3
test
adc
in
ss
bound
cmp
push
dec
lret
sbb
jmp
fsubp
sbb
ja
cmp
psubw
mov
mov
add
mov
popf
es
je
jnp
inc
mov
sbb
ret
sahf
lret
inc
fwait
jo
push
ds
dec
cld
and
lock
jb
push
scas
or
notl
pop
sbb
cwtl
dec
ret
fdivs
imul
cmp
inc
or
testl
xor
les
add
int
xchg
xchg
and
lods
jp
mov
mov
inc
xchg
aad
pop
int
pop
and
popa
mov
cmc
daa
aas
sar
rcl
ja
xchg
loop
pop
test
std
and
clc
adc
lret
sbb
aad
dec
mov
imul
fs
inc
pop
outsb
push
fistpl
mov
jns
xchg
xor
lret
call
scas
inc
ljmp
xorl
dec
jnp
or
pop
popa
shll
mov
aaa
jns
orl
sti
mov
call
xor
xor
dec
nop
ret
mov
int
xlat
cmpsb
inc
add
mov
repnz
aam
in
lahf
add
out
ljmp
jno
and
push
adc
mov
sub
into
out
test
movsb
dec
adc
dec
std
pop
pop
jns
and
pop
imull
xor
cmp
jg
dec
push
sbb
pushf
and
aad
movsb
sub
mov
inc
jmp
push
and
mov
ret
outsb
or
fsts
aam
mov
lock
mov
add
mov
pop
sbb
adc
in
push
fs
ja
cltd
mov
cmp
fisubs
sbb
shrb
je
out
pushf
mov
popf
cmp
shlb
stos
neg
sub
mov
test
decb
xchg
int3
push
inc
push
pop
dec
mov
loopne
adc
sub
or
jp
nop
xor
mov
or
jne
and
sbb
mov
mov
flds
lds
mov
sbb
lods
loopne
iret
jge
testb
cld
les
add
push
mov
mov
stos
movsl
mov
sub
jmp
shl
rolb
mov
adc
or
cmc
fldl
ljmp
hlt
addr16
ret
inc
adc
lea
stos
imul
and
insb
mov
fisttpl
rorl
cltd
pop
dec
cmp
mov
shr
mov
add
adc
into
jle
adc
cli
icebp
and
pop
loope
cmp
inc
mov
sub
imul
jno
sub
dec
jo
mov
subl
jns
imul
xchg
test
xchg
int3
and
mov
ret
mov
mov
inc
cmc
pushf
rcrl
jle
imul
das
and
test
mov
cwtl
mov
aas
sub
scas
and
pop
sarb
mov
lahf
fdivrs
push
outsl
loop
xor
hlt
jno
int
les
jg
inc
lods
sbb
sbb
and
mov
movsl
add
mov
sahf
pop
hlt
rcrl
cs
sub
pop
in
mov
and
mov
outsl
pop
push
xor
bound
jg
xchg
repnz
sbb
mov
xchg
xorl
aaa
arpl
inc
and
mov
xchg
loope
push
cmp
xlat
pop
xchg
movsl
xchg
push
loopne
fwait
adc
add
sbb
rorl
cmp
or
jp
sbb
xchg
xor
out
cmp
mov
popf
sub
xchg
push
gs
xor
xor
jnp
mov
repz
dec
push
xchg
data16
dec
xor
sbb
mov
mov
rcr
mov
rorb
cmp
out
stc
or
push
ja
jecxz
push
in
jl
insl
cmp
fsub
inc
or
stos
sti
outsb
xor
insb
push
outsl
sub
xor
xchg
shl
mov
pop
jb
sahf
jbe
cmc
jae
pushl
ja
shlb
pusha
outsb
mov
pushf
nop
cmc
lret
or
shrb
in
cld
jns
inc
xchg
stc
cmp
adc
jo
dec
addr16
mov
add
stos
outsb
or
ds
sbb
lcall
das
push
lods
insb
cmp
jg
mov
sub
inc
push
fcompl
xchg
pop
out
sub
stos
jo
mov
jns
jg
addl
sti
testb
pop
aam
out
sub
xor
cmp
dec
dec
inc
inc
and
dec
popa
or
pusha
push
js
imul
fsubr
test
test
loop
mov
fs
stos
scas
push
shll
in
xor
mov
fdivs
push
int
push
clc
pop
pop
icebp
int
je
ljmp
mov
inc
or
test
and
and
pop
xchg
rclb
aad
in
repnz
in
and
in
and
pop
push
outsb
push
pop
push
xor
in
rolb
shll
sbb
lods
pop
fcmovnu
movsl
cmp
xchg
jl
cli
cltd
fnsave
jb
mov
push
mov
mov
jle
adc
sahf
xchg
xor
sti
jecxz
xchg
jp
ficompl
add
dec
cmp
cmc
jg
daa
sub
into
and
mov
arpl
mov
stos
call
leave
fnstsw
fucomi
or
and
jl
shrl
mov
pusha
add
icebp
lea
or
bound
cmp
in
outsl
hlt
xor
insl
cmp
and
adc
daa
lods
rol
jne
mov
test
lret
sbb
fwait
add
mov
mov
add
mov
mov
leave
jle
pop
cmc
scas
xor
adc
push
js
aas
adc
mov
push
mov
sbb
ds
pop
sbb
leave
xchg
fldcw
cmp
into
sbb
into
aam
in
lahf
into
or
sahf
negb
dec
ficomps
lods
lock
cmp
push
sub
das
fmul
mov
add
pop
cmp
dec
test
dec
mov
mov
shl
ds
call
or
into
js
pushf
xor
dec
cmpsl
dec
pop
mov
xchg
pop
pop
dec
ficompl
fs
ret
jbe
loop
nop
xlat
sub
mov
andb
and
ja
outsl
sub
sub
pop
imul
mov
dec
xor
mov
je
xor
xchg
repnz
inc
jecxz
and
xchg
fld
mov
mov
jnp
push
mov
sub
and
mov
movsl
pop
xchg
dec
sarb
inc
mov
dec
push
repnz
xchg
movsb
adc
enter
test
pop
xchg
sub
cmpsl
orb
and
fstpl
scas
stos
inc
aam
mov
lds
jo
mov
into
bound
lock
cmp
jle
xchg
fs
incb
adc
mov
mov
cli
add
ror
pop
mov
jl
test
mov
lds
test
out
dec
pop
jno
sbb
jmp
jmp
push
fiadds
sbb
movsb
dec
jecxz
pop
mov
sub
push
dec
ljmp
ficoms
mov
push
fldenv
jae
cmp
es
mulb
es
aas
addr16
adc
xor
pop
out
fidivrl
out
test
adc
pop
stos
in
mov
push
testb
fwait
jbe
sub
fadds
imul
adcl
addr16
cmp
test
cmp
jle
out
cmc
push
push
jmp
jne
mulb
sahf
outsl
scas
call
icebp
mov
das
lea
jp
aad
xor
daa
int
add
adc
out
inc
ret
fs
mov
pop
loopne
lret
jnp
mov
aam
mov
sub
int3
inc
jnp
pop
jbe
and
adc
flds
mov
fcoms
jp
xchg
pusha
cmovbe
mov
jmp
out
cmovge
rcrb
push
push
pop
gs
mov
inc
ja
push
adc
fstp
out
and
fisttps
xchg
push
cli
jnp
enter
xor
sti
and
sahf
xchg
scas
mov
sbb
movsb
test
mov
mov
int
or
fs
neg
dec
inc
out
int3
dec
scas
jl
pop
cltd
xchg
cmp
mov
mov
mov
pop
ror
hlt
and
fstpt
aam
sahf
int3
es
shlb
test
mov
aam
insl
adc
pusha
add
pop
imul
cmp
das
fisubl
pusha
das
jmp
arpl
and
jge
adc
test
mov
jmp
stos
xchg
shl
enter
jl,pn
rorw
pop
cmovl
imul
sbb
mov
xor
hlt
aaa
stc
in
fsubs
push
pop
sub
out
pop
fldt
cmp
xchg
test
ljmp
lcall
sbb
push
movsl
shrl
test
stos
add
pop
sbb
cs
prefetcht2
enter
mov
sbb
xor
add
mov
and
daa
sbb
arpl
cmpsl
push
sub
sbb
das
rorb
mov
imul
mov
in
xchg
out
sti
out
into
push
push
cltd
insl
inc
and
pop
xor
push
mov
mov
mov
add
adc
cmc
pop
in
out
enter
adcb
xlat
xlat
out
jp
je,pn
push
mov
jb
mov
fcomps
psubsw
aas
mov
dec
adc
inc
hlt
out
insb
add
sub
dec
jg
cs
sub
lock
jge
and
decl
sub
mov
mov
movsl
loope
outsl
movl
repnz
inc
mov
mov
sub
sbb
xchg
cmpsb
int
subb
jge
movsl
ret
es
or
fs
fmul
cmp
loop
dec
adc
adc
pop
out
cmp
xor
pop
and
rolb
xlat
int3
push
and
xlat
sbb
push
leave
pushf
sub
std
lret
subl
and
in
sub
xor
xchg
push
sub
call
or
xor
cmp
sbb
loope
insl
and
lret
xlat
jnp
inc
sub
lcall
insl
sub
push
jp
data16
inc
icebp
push
push
sub
or
jmp
pop
dec
and
cmp
mov
adc
mov
loope
fldcw
or
gs
mov
pop
cwtl
cwtl
push
mov
sbb
jo
push
xchg
vucomisd
push
movsb
test
movsb
test
pop
call
shl
lods
or
shrl
fmull
out
stos
pusha
in
mov
ljmp
arpl
xchg
outsl
cltd
flds
cmpsb
pop
inc
mov
inc
add
xchg
scas
gs
in
xor
xchg
jmp
int3
aad
in
mov
lods
jl
mov
aam
jno
negl
sub
fsubrl
xchg
cmp
xor
or
shr
jmp
fwait
pushl
mov
shl
push
je
push
mov
sub
xor
int
mov
loope
push
int
pop
andb
push
leave
insl
in
mov
inc
adc
jno
push
lret
sub
je
adc
div
xor
cs
xchg
shrl
adc
pop
lods
xlat
mov
test
ljmp
loop
testb
fwait
bound
jae
jbe
sbb
dec
add
inc
dec
cmpsl
cmpsl
add
loopne
jb
mov
jg
insl
movsl
cwtl
mov
es
imul
mov
outsb
jbe
jns
das
fnstsw
add
xchg
inc
adcl
lcall
hlt
xchg
mov
mov
xlat
int3
ret
push
sub
cwtl
gs
jp
int3
mov
jle
or
stc
mov
or
ljmp
dec
ja
add
test
jno
xor
cmp
dec
scas
inc
pop
pop
jp
and
cmp
hlt
nop
mov
mov
jno
jle
cmp
and
push
jne
lods
clc
sub
sub
xor
mov
sti
mov
lods
xchg
jb
aad
int
out
lret
pop
cmp
or
insb
or
pushf
xchg
pop
adc
int
leave
repz
fwait
mov
lcall
orl
dec
out
adc
ret
jns
sub
add
lcall
pop
repnz
or
cs
nop
ja
jp
test
stos
cmpsb
test
jmp
mov
mov
pop
add
push
and
out
js
clc
jle
add
xor
jb
mov
add
out
test
xchg
mov
fnstsw
mov
pop
loopne
adc
dec
or
in
push
addr16
fisubs
stc
test
popa
dec
mov
adc
int3
xchg
and
decl
les
stc
ds
mov
dec
imul
int
sti
xorl
and
cltd
je
in
imul
in
ret
sbb
leave
xor
jb
cmp
sbb
mov
dec
jmp
loope
testb
fimuls
cli
xor
push
mov
and
enter
clc
out
push
ja
bound
cmpsl
outsl
lcall
roll
xchg
int
dec
mov
daa
pop
mov
push
out
adc
jle
sbb
push
mov
out
test
mov
fldenv
adc
xor
or
int3
xor
xor
sub
outsb
loopne
orl
jnp
mov
sbb
jne
cmp
lcall
push
lret
add
gs
sbb
test
cwtl
mov
sub
xchg
in
call
and
jo
adc
adc
or
test
push
mov
cmp
xchg
cmpsl
ret
pop
mov
into
neg
je
mov
or
or
rcrb
add
cmpsb
xchg
sbb
lea
int3
jns
xchg
lcall
sbb
outsl
in
cmp
fidivs
negl
cmp
fisubrs
lcall
push
xchg
or
nop
cmp
insb
push
push
sub
or
out
add
sub
pop
add
iret
out
adc
scas
mov
push
xor
sbb
jno
in
inc
or
mov
adc
jne
pusha
push
fstl
push
mov
lods
jl
jb
iret
repnz
jae
out
xor
mov
sub
inc
andl
mov
jne
into
push
outsl
sar
fwait
or
fst
sub
and
rcll
jo
mov
and
in
sub
sbb
xor
push
rclb
ja
repz
cmp
repz
xchg
adc
ds
ret
frstor
movsb
mov
in
bound
scas
adc
push
mov
cvtps2pd
call
aas
andb
cmp
lret
movsl
push
adc
adc
add
sarl
sub
sarl
adc
movsl
daa
sarb
repnz
or
movsb
mov
sbb
addr16
lret
sbb
repnz
out
int
les
add
cmp
scas
pop
lods
add
inc
sub
xchg
xor
jo
cmp
cltd
sub
test
dec
into
sarl
sbb
push
cld
lahf
je
adc
jge
in
xchg
jle
sbb
and
sub
dec
stos
xor
push
stos
mov
push
cwtl
loope
pop
xchg
and
inc
push
outsb
insl
mov
cmc
add
cmp
out
nop
js
movsb
mov
imulb
xchg
mov
shl
fxch
xor
jmp
psubd
lret
or
push
sbb
dec
ss
push
dec
cli
test
xchg
cmpsl
push
push
js
fcmovbe
and
push
mov
ret
sysret
cmp
sub
inc
xor
mov
cli
jo
cmp
enter
jl
sbb
pop
dec
sti
sti
push
movsb
sahf
xchg
adc
mov
push
test
jecxz
add
pop
or
mov
mov
mov
dec
pop
movsl
push
std
test
xchg
fcomps
loop
xor
sahf
jmp
sbb
inc
xor
ret
mov
adc
insl
inc
mov
imul
add
arpl
sub
mov
dec
cli
ss
fstps
sub
inc
sti
sbb
mov
into
and
inc
bound
lea
inc
hlt
jns
outsb
dec
sarl
add
or
bswap
jnp
outsb
daa
mov
mov
sbb
push
or
ljmp
mov
xchg
inc
int
add
imul
jp
xor
xchg
out
cmp
pusha
pop
sub
sub
mov
icebp
movsl
insl
sbb
data16
push
out
fistpl
push
push
jbe
xchg
add
int
icebp
call
mov
mov
mov
fsubs
rcrl
pop
not
inc
std
cli
out
push
pop
outsb
push
cwtl
push
jge
push
dec
in
add
lods
xchg
fdivrs
push
mov
aas
pop
mov
jmp
fmul
sbb
shll
push
movsl
sbb
pop
decl
dec
mov
and
jns
lahf
aad
scas
sahf
fdivs
sub
cmp
xorl
nop
jnp
pop
loope
add
dec
adc
sbb
cmpsl
out
cwtl
cld
call
cmp
test
in
inc
and
cmpsb
fstpt
scas
cmp
ret
mov
fildll
sbb
or
lea
cli
xorl
lock
nop
ret
clc
pop
pslld
adcb
sbb
pusha
or
sbb
push
dec
jno
push
push
int
decb
aam
insb
sbbl
mov
and
jl
jle
nop
jmp
into
ja
and
mov
add
in
sahf
call
fucomi
jbe
stos
arpl
jmp
insb
xor
pop
jle
mov
pop
add
cmp
jo
pushf
lods
divl
lret
xchg
js
mov
fstpl
dec
or
inc
testl
rcrb
xchg
or
aad
test
mov
pop
cmp
iret
lcall
std
stos
ljmp
dec
xchg
add
cmpsb
mov
divl
mov
daa
das
inc
pop
test
mov
pop
mov
or
dec
icebp
into
lds
mov
dec
xlat
push
pop
xchg
hlt
push
lahf
cmpsb
or
mov
and
sarl
xor
dec
mov
add
pop
test
xorb
das
push
test
jne
hlt
filds
insb
jg
pop
lock
jg
xchg
inc
mov
jnp
repz
sub
testb
arpl
aas
dec
insb
sahf
sub
pop
and
inc
sub
xor
pop
cmp
mov
pop
cmp
in
push
adc
insb
push
push
call
mov
daa
pushf
ja
cmp
stc
lea
mov
and
test
mov
loop
lock
mov
test
mov
cmp
in
loope,pt
pop
ds
add
push
popa
add
pop
mov
mov
xchg
adc
cmp
sub
mov
mov
scas
xchg
push
lcall
cld
repnz
jno
sbb
fnstsw
mov
pushl
inc
xchg
fbld
lds
faddl
inc
mov
ljmp
mov
pop
sahf
mov
or
insl
fisttpl
cmp
mov
adc
mov
mov
jg
shll
arpl
mov
notb
int3
fisttpl
or
out
ror
fs
xchg
sub
jae
xlat
and
mov
xor
lods
jbe
xchg
xchg
or
lret
das
dec
inc
sub
clc
scas
xchg
in
out
dec
dec
shl
mov
push
enter
aad
pushf
in
out
xchg
pop
sbb
or
subb
in
pop
mov
insb
cli
scas
in
push
inc
lcall
fsts
jae
aaa
mov
out
ljmp
xchg
mov
pop
test
nop
cli
and
cmp
sub
shlb
push
rolb
mov
push
std
in
fnstsw
in
testb
fcomp
or
je
shl
jge
pop
shl
mov
dec
pop
push
or
cmpsb
lcall
les
das
into
arpl
and
loop
push
jbe
call
xchg
outsb
mov
andb
sbb
lcall
fdivrl
ss
sbb
out
in
int3
clc
xchg
xor
negl
pop
and
rorl
push
jge
aas
or
call
les
and
mov
adc
sbb
pushf
lret
adc
mov
push
cltd
inc
mov
rclb
mov
sub
movsb
sub
inc
cld
cwtl
pop
enter
repnz
xlat
andb
mov
les
sub
out
in
cltd
stos
stos
arpl
std
test
push
push
and
and
pop
mov
dec
lock
cmp
in
scas
jmp
sti
mov
sbbb
mov
add
out
andl
xlat
inc
or
add
shrl
repz
inc
cli
push
adc
xor
mov
test
fdivr
das
mov
cmp
xor
addl
dec
push
lock
cmp
xor
hlt
in
mov
push
test
xlat
add
cmpsl
jmp
sti
pusha
jno
jmp
loop
cmpsl
cmp
outsb
das
lcall
cmp
and
and
pop
xlat
jb
ss
pop
icebp
sbbb
rclb
adc
mov
ss
pop
call
push
add
jl
lret
and
jo
dec
adc
mov
jnp
test
lcall
in
jae
in
mov
cltd
pop
int3
mov
dec
or
or
imul
dec
notl
test
inc
sarb
cld
out
push
inc
lcall
adc
not
mov
pop
push
sub
stos
cmp
stc
add
test
mulb
ss
in
jne
mov
lret
mov
cmpsb
xchg
inc
in
popa
sti
rcll
clc
sub
mov
pop
rolb
sti
jl
jne
xchg
push
mov
add
ret
dec
lret
sub
cmp
inc
xor
lea
sahf
cli
adc
pop
inc
xchg
pop
or
ds
pop
rcll
pop
lret
test
loop
mov
push
in
cmp
push
adc
ret
sub
push
fidivrl
sbb
movb
mov
testb
inc
imul
test
cmp
jae
dec
adc
push
cs
jbe
sahf
hlt
or
fsubrl
nop
aaa
repz
repz
in
enter
in
aas
dec
sbb
jbe
in
add
pop
out
jmp
add
push
jmp
add
push
stos
xchg
inc
loope
scas
xchg
aaa
fs
sbb
outsb
cld
mov
sbb
or
leave
cmp
inc
movsl
dec
out
scas
sbb
fnsave
push
daa
add
and
rcl
vmread
xchg
mov
out
test
pushf
and
loopne
dec
or
leave
adc
in
push
or
bound
jmp
inc
inc
ret
leave
push
mov
out
xlat
aad
mov
fbld
pop
adc
jae
push
cmpsl
sbb
nop
push
mov
dec
inc
dec
dec
dec
cltd
xchg
std
mov
xchg
xchg
jne
sbb
outsl
dec
dec
mov
shlb
cmp
jge
xlat
cld
scas
pop
cmp
rsqrtps
push
imul
jbe
xor
std
mov
jle
mov
lods
mov
mov
das
or
nop
xchg
push
inc
mov
fsubrs
mov
loope
addr16
std
out
jl
mov
dec
sbb
aas
or
mov
mov
inc
popa
jmp
inc
push
les
js
leave
mov
jp
imul
mov
pop
je
les
ja
cltd
lock
push
add
inc
pop
adc
je
fstpt
inc
fisubrs
cmp
test
sub
push
pushf
addr16
es
mov
cmp
jb
orl
mov
mov
cli
adcb
movsl
add
mov
fnstcw
std
aam
mov
mov
addr16
inc
cmp
add
imul
lcall
pop
fs
call
enter
fsts
push
jno
xchg
movsl
repz
ret
mov
fdivrl
insl
shll
xor
mov
mov
pop
xor
mov
inc
mov
dec
notb
ret
inc
in
ffree
mov
les
jg
add
call
add
or
fwait
shl
lret
sbb
or
xchg
xor
jl
mov
ret
mov
enter
je
push
mov
dec
icebp
jmp
xchg
addb
push
divb
sub
mov
test
mov
mov
lds
lahf
stos
adc
nop
and
push
xor
xor
lock
add
cltd
mov
xchg
les
jno
inc
mov
jmp
ljmp
inc
bound
cmpsb
aad
into
fstl
aaa
mov
and
lcall
pop
in
fdivrl
mov
lcall
popf
scas
paddsw
insl
mov
fstps
sub
es
inc
sub
adc
jge
xchg
mov
lock
ret
jns
notl
ret
lret
sti
pushf
ret
xor
xlat
data16
mov
mov
xor
xchg
fiadds
sbb
lahf
jo
push
mov
sarl
hlt
sahf
mov
mov
mov
mov
jno
jp
push
push
sub
orl
fcompl
add
test
pop
and
add
and
ja
mov
mov
icebp
push
rclb
and
hlt
loopne
jnp
sub
or
dec
or
ret
sub
sahf
out
ljmp
mov
je
cmp
sbb
xchg
and
aaa
out
hlt
lret
imul
xchg
xchg
ja
movl
in
sub
and
jns
sti
mov
aaa
sub
sub
push
gs
mov
add
dec
mov
pop
pusha
lock
jb
fidivrs
xchg
sar
cli
mov
outsl
pop
pop
andb
aas
scas
or
movsl
xchg
dec
pop
aad
addr16
out
pop
aad
lea
aaa
arpl
cmpsb
jns
inc
mov
push
addl
out
mov
out
sub
and
inc
loopne
add
stc
loop
scas
pop
pop
mov
es
sub
ja
or
pop
push
xchg
insl
sub
mov
aam
imul
pop
cmc
dec
sbb
aas
int
jbe
fisttps
xchg
scas
fmul
bound
mov
add
std
dec
mov
pop
mov
dec
cmpsl
fs
and
and
push
sbb
adc
sarl
push
add
xor
loope
fldt
stos
divb
sbb
jno
pop
movsb
loop
adc
orb
mov
xchg
mov
xchg
ds
insb
mov
and
into
dec
icebp
inc
test
movsb
ret
rorl
loopne
fcmovnu
mov
push
jno
jbe
push
cmp
push
repnz
sbb
les
fwait
add
dec
lahf
call
inc
pop
adc
push
pop
cwtl
jno
pushl
xlat
or
push
out
push
xchg
xchg
popf
imulb
scas
inc
cli
inc
mov
xor
add
in
mov
nop
pop
sbb
sbb
mov
dec
imull
pop
jecxz
or
pop
pusha
les
gs
leave
shlb
rol
mov
ljmp
ret
cmp
cmp
sub
xchg
mov
mov
mov
loope
push
mov
scas
push
repnz
pop
or
dec
cltd
push
jae
ljmp
pop
pop
push
in
bound
pusha
aaa
ja
mov
sarl
in
jae
xchg
xor
sub
xor
cmc
cmp
sub
jmp
jp
mov
cmpsb
test
outsb
cmp
enter
out
jge
ficoms
lds
mov
pop
mov
scas
fadd
fcomip
add
sbb
adc
insl
pop
cmp
xchg
imul
loopne
sti
and
xchg
jmp
sbb
pop
je
es
stos
push
leave
mov
jnp
sub
imul
shrl
sub
mov
adc
and
pop
xor
in
popa
push
sub
and
mov
mov
mov
xchg
pop
xor
jns
roll
in
mov
aad
pop
int
pop
jl
lahf
or
push
add
and
mov
repz
cmp
jns
mov
cld
mov
mov
jle
int3
rcl
fucomp
aad
call
mov
adc
jg
push
mov
mov
inc
mov
cmpsb
add
enter
shll
lods
pandn
fimull
push
loope
push
int
insb
lcall
aas
dec
repz
dec
lahf
xchg
sub
or
loop
dec
ret
cmp
pop
ds
in
mov
add
inc
inc
pushf
es
fistpll
xchg
push
es
xchg
push
jnp
push
mov
call
fwait
and
push
leave
rorl
and
inc
jp
insl
inc
mov
es
pop
pushf
rorl
rclb
mov
mov
adc
add
rcrl
xor
out
xchg
inc
push
gs
rclb
mov
sub
cwtl
dec
data16
iret
mov
sbbb
push
cmp
push
jge
xchg
jno
dec
es
adc
pop
mov
stos
les
adc
jecxz
jae
int3
dec
ret
clc
or
clc
or
fdivr
ja
incl
add
jbe
subb
jno
pop
mov
mov
insb
call
stc
decb
leave
test
and
xor
mov
mov
dec
aam
shll
idivb
or
icebp
add
into
idiv
std
jae
adc
xor
test
fwait
out
ror
push
lods
push
sub
mov
fbld
sub
std
jecxz
dec
xchg
shl
dec
iret
idivb
push
mov
cmp
js
jo
decl
popf
hlt
and
pop
sbb
lea
movsl
pop
jbe
xor
bound
jg
lcall
ret
cmp
fnsave
aam
xchg
stos
mov
mov
lock
or
adc
xchg
jnp
gs
mov
xor
pop
jge
stos
popa
mov
xor
dec
mov
ds
stos
stc
jecxz
test
adc
push
adc
loope
push
xor
fisubl
cmpsl
popa
xchg
adc
mov
push
jae
mov
repnz
push
add
dec
fisubl
imul
andl
inc
sbb
fisubrl
xor
in
sub
fsubl
cmp
add
popa
add
dec
neg
pop
rcrb
dec
inc
arpl
dec
inc
and
add
out
jmp
dec
scas
int3
add
push
push
mov
sbb
cmp
xchg
hlt
xor
cmp
mov
pop
pop
push
js
insb
dec
pop
lock
popf
add
adcl
add
mov
inc
dec
daa
push
aaa
lcall
jg
inc
adc
cmp
mov
pop
scas
in
jno
add
mov
loope
and
xorl
ss
cwtl
ret
mov
push
mov
lods
clc
pusha
rorb
jne
xor
mov
cmp
in
jg
mov
mov
in
and
dec
aas
andl
push
and
outsl
mov
push
push
xchg
xchg
add
add
test
lods
jne
mov
add
into
lea
dec
ss
fwait
in
out
ret
dec
les
ss
daa
mov
add
pop
jbe
or
cwtl
add
jb
das
gs
lret
adc
cli
pop
data16
out
inc
xchg
xchg
cmp
fmull
pop
pop
add
sub
sarb
rorl
aad
shr
pusha
mov
sub
aad
mov
xor
lret
dec
sub
negb
jne
or
pop
enter
mov
mov
lea
mov
int
in
pop
jno
cli
movsb
pop
decb
push
or
sti
enter
sbb
outsw
jnp
mov
and
inc
pop
xchg
mov
lret
adc
push
inc
lret
and
out
pop
mov
sti
cmpsl
mov
mov
inc
xchg
test
mov
pop
int3
pop
xchg
mov
out
es
mov
cmp
mov
pop
ljmp
and
mov
je
in
fs
out
sbb
scas
in
mov
or
loopne
cmc
rcr
mov
cmpsl
lods
push
das
sahf
mov
daa
lods
pop
push
inc
inc
xor
pop
int
in
inc
adc
sbb
es
and
imul
ret
mov
or
sub
xor
inc
adc
dec
or
mov
ret
and
sub
js
pop
xchg
cli
adcb
cmc
adc
mov
cltd
pop
adc
push
mov
and
dec
stos
rcrb
push
rcr
mov
jmp
lcall
pop
aaa
insl
jne
push
adc
dec
mov
cmpsl
mov
add
shrb
mov
mov
mov
sarb
mov
loope
ljmp
das
jg
shrl
loop
gs
stos
dec
cmpxchg8b
pop
test
inc
pop
int
lods
or
lds
imul
push
xchg
pop
cmpsl
mov
dec
mov
stc
scas
test
test
iret
jge
loopne
fldenv
xor
cmp
sub
jo
cmp
or
mov
jp
pop
xchg
dec
inc
push
mov
mov
ja
add
mov
cmp
lds
icebp
cmpsl
jnp
xchg
add
jns
and
jmp
cmp
out
adc
movsb
pop
push
shlb
cmp
insb
addb
lock
and
inc
int3
test
push
cmp
ror
stc
int
imul
jg
decb
push
adc
mov
in
outsb
mov
xor
inc
cld
xor
dec
cltd
sbb
fadd
fisttps
jge
insl
inc
mov
xchg
xchg
xorb
fists
jno
jb
rorb
mov
or
mov
jae
popf
inc
out
dec
call
fcomps
sbbb
lret
enterw
aaa
mov
stos
xor
lods
nop
inc
test
xchg
mov
fst
stos
popa
scas
es
repnz
mov
push
imul
insb
jl
cltd
repz
add
jl
cmp
adc
andl
push
outsb
repnz
xchg
mov
mov
sbb
iret
in
fsub
hlt
cmp
jne
test
hlt
ljmp
push
push
adc
cld
sbb
inc
inc
and
mov
sub
stos
stc
rcl
add
fldt
adc
in
lcall
mul
push
add
orl
cmp
dec
fs
and
cli
aaa
scas
out
inc
ds
ficoml
and
pop
fwait
xor
mov
sub
jns
ss
adcb
mov
je
push
mov
enter
adc
inc
jo
lods
dec
out
notl
inc
inc
pop
in
mov
aas
jno
dec
and
push
outsb
test
mov
xchg
addr16
dec
mov
test
mov
sbb
mov
pop
dec
pop
adc
jo
pop
loope
jae
push
pop
repz
push
xchg
add
push
lock
mov
lahf
sub
mov
cmp
inc
xchg
cmp
loopne
adc
fisubrl
xchg
shr
jnp
divb
pop
xchg
movsb
or
out
adc
leave
cmp
insb
aad
and
loop
sub
jno
rolb
mov
cmpsb
jo
sarb
movsl
xchg
in
mov
out
jp
daa
clc
mov
mov
or
call
mov
das
movsb
outsb
aaa
cmp
ja
inc
bound
push
push
dec
mov
scas
addr16
jo
mov
popl
and
and
adc
pop
xor
mov
test
call
push
xchg
fstpt
in
imul
fstpl
out
out
test
incl
ret
sub
jmp
lods
imul
roll
add
cli
cltd
loop
add
jmp
adc
jne
std
js
loopne
les
negb
pop
lcall
repnz
jmp
cmp
mov
mov
in
in
es
in
pushf
das
dec
negl
sub
or
cmp
shlb
adcb
jmp
inc
xchg
clc
out
lret
cmp
cltd
or
shl
mov
dec
fs
insl
cmp
or
xchg
push
bound
sub
js
jno
iret
or
dec
in
and
push
inc
sub
jmp
cmp
jb
jb
jnp
pop
int3
test
je
xchg
popf
jg
and
imulb
jnp
inc
xor
rorl
inc
cmp
pop
pop
dec
mov
imul
jge
jnp
xchg
xor
ja
enter
adc
loopne
mov
sbb
shll
outsb
jecxz
cltd
and
jbe
insb
jbe
mov
jg
mov
dec
xchg
loop
xchg
fwait
jno
jecxz
call
cmc
jns
ss
shlb
pop
shll
out
in
mov
xchg
out
rcl
add
sbb
adc
shll
cmp
dec
xor
xchg
cmp
and
inc
nop
sub
dec
pop
xchg
jbe
cmp
lods
or
cmp
push
icebp
shl
mov
add
sti
ss
mov
sbb
lods
sub
or
scas
cmp
dec
inc
dec
fnstenv
fisubl
into
daa
push
cli
jb
aad
mov
xchg
sbb
bound
popf
cwtl
icebp
adc
mov
pop
dec
xorb
lret
cmp
les
cmp
lods
pop
repnz
bound
inc
insb
cmp
mov
and
and
in
outsl
xchg
mov
mov
movsb
jb
dec
lods
add
mov
jne
mov
out
jl
movsl
test
in
push
pop
out
or
test
cmpb
mov
pop
mov
cmc
push
and
xrelease
ret
dec
lret
test
xchg
aam
pop
loope
push
and
cmc
ja,pn
test
stc
sti
lsl
jo
or
jl
adc
enter
jle
xor
iret
cmp
mov
inc
mov
addr16
jecxz
mov
jns
inc
dec
jmp
out
jns
sti
inc
test
add
inc
pushf
rclb
xchg
and
xchg
push
sub
test
xor
dec
pop
out
pop
in
pop
bound
imul
scas
je
cwtl
cli
jge
lea
xchg
mov
fstps
insb
mov
mov
aas
add
push
dec
mov
push
out
mov
xor
jge
or
enter
adc
jns
stos
xchg
or
negb
pop
fisttps
mov
pop
and
sar
imul
adc
fstpl
dec
out
scas
lcall
xlat
add
jns
jae
les
jmp
cmpsl
mov
adc
mov
dec
sbb
aad
inc
sbb
call
mov
add
dec
testb
jmp
or
jge
sub
adc
jbe
mov
xor
mov
inc
loopne
movsb
dec
pop
dec
out
push
fisubs
push
fadds
repz
sbb
mov
gs
inc
or
sbb
xor
out
xchg
sub
fidivs
push
daa
ds
gs
xor
push
mov
or
adcl
xchg
mov
jne
and
jg
xor
mov
sub
xchg
xchg
cmp
popa
movsb
enter
aas
pop
stc
divb
inc
test
ficoml
lea
pop
push
mov
mov
js
aas
push
adcl
call
popf
xor
cmpsb
mov
jp
mov
aaa
mov
cmc
aam
scas
inc
fiadds
out
xlat
lock
and
icebp
pusha
imul
jae
or
imul
lahf
movsl
xchg
cltd
test
movsl
in
stos
lcall
leave
ret
ret
int
mov
pop
loopne
loope
jmp
in
cmp
add
push
xchg
sbb
pushf
and
mov
mov
dec
cmp
and
loopne
fwait
sub
in
jbe
xchg
mov
cmc
mov
mov
adc
cmp
sarl
iret
sub
in
ss
arpl
imul
scas
dec
scas
add
push
and
or
insl
repnz
jae
and
xchg
cs
push
pushf
add
out
call
mov
pop
or
dec
lock
push
dec
pop
pusha
pop
sub
outsl
in
push
inc
jns
leave
mov
shl
and
inc
out
sahf
psubq
mov
and
sbb
int3
add
cltd
aaa
jge
dec
dec
enter
adc
jb
sti
call
repnz
mov
sbb
test
dec
inc
insb
mov
cmp
pop
dec
fsubs
push
xchg
loope
imul
adc
hlt
nop
xchg
jns
fisttps
lds
outsl
sbb
pop
sbb
movsb
and
cmp
sub
cmp
imul
push
inc
jg
pop
xchg
mov
insl
mov
insb
add
inc
negb
and
sub
pusha
push
jbe
fbld
and
pop
or
cmp
andl
push
mov
into
gs
stos
sbb
mov
scas
addl
xchg
lcall
cmpsb
nop
jbe
mov
mov
xchg
mov
or
push
push
jae
pushf
pop
ljmp
jno
fidivrs
cmpsl
icebp
lret
fs
lea
popa
xchg
in
lods
lahf
jnp
imull
adc
les
and
int3
outsb
xlat
std
fistpll
ljmp
cwtl
cld
stc
adc
add
adc
lds
push
mov
mov
lret
jb
repz
leave
aam
rolb
xchg
iret
call
loop
adc
in
mov
imul
sbb
or
movsb
dec
adc
iret
loopne
and
sub
scas
jmp
cmovns
negb
pop
or
fs
cmp
and
testl
lds
fidivl
and
loope
xchg
cmp
fldl
sbb
jae
sub
addr16
push
push
jo
inc
mov
addb
mov
stc
lret
sahf
lods
push
pop
test
and
stos
adc
ret
mov
push
nop
push
out
dec
fstps
pop
and
lea
jb
arpl
test
mov
mov
popf
xchg
cmp
jmp
stos
incb
mov
ss
adc
fwait
pop
pop
iret
shlb
fsubs
mul
lock
jmp
xchg
mov
fiadds
inc
jecxz
xchg
jno
cs
cmp
into
fcmovnb
stos
sarl
sbb
int
enter
pop
mov
add
xlat
in
dec
adc
nop
xor
adc
adc
mov
aad
add
sub
pop
adc
lret
dec
rclb
mov
bound
cmpsb
lods
sub
pushf
inc
jae
mov
ljmp
dec
out
into
mov
stos
cmpxchg
ljmp
add
or
pop
stos
adc
cmp
int
out
xor
js
and
pop
mov
jp
fsubrl
push
outsb
mov
and
jl
jge
lret
sub
repz
cmp
push
jns
xor
into
push
push
jae
in
adc
fsub
dec
sub
mov
cwtl
pushf
and
xor
pop
je
pushf
adc
insw
inc
sub
imul
push
push
in
push
dec
mov
sub
pop
jmp
adc
aad
inc
jo
dec
data16
fdivl
mov
push
xor
jle
popf
cwtl
lea
jp
pop
mov
test
iret
mov
shl
mov
and
es
arpl
addb
dec
sbb
ljmp
mov
icebp
jae
das
jo
adc
push
dec
jo
out
xchg
pop
jb
adc
filds
jmp
jmp
xchg
and
xorb
iret
sbb
xlat
push
mov
or
fwait
add
sbb
xchg
jnp
clc
jp
movsl
jae
push
popa
call
stos
test
or
sahf
inc
mov
fdivs
out
xor
dec
je
popa
mov
out
or
jle
pop
cwtl
sbb
ds
and
lret
push
lret
ret
mov
inc
mov
inc
fdivl
pop
xchg
jne
sbb
fisttpll
daa
das
mov
incl
test
aaa
sbb
xlat
xchg
or
cwtl
int
aaa
outsl
mov
loope
mov
push
jne
mov
shrl
dec
dec
addl
into
mov
pop
and
cmc
insl
mov
or
sbb
les
and
sub
inc
push
inc
iret
repnz
jmp
jno
imul
ja
mov
lea
or
mov
mov
inc
les
push
jae
pop
dec
mov
push
out
out
in
hlt
insl
icebp
test
cltd
sbbb
movsl
xchg
mov
pop
push
pop
lods
sub
dec
dec
stos
pusha
sub
push
xor
dec
push
xchg
addr16
or
insl
in
jno
mov
aad
loope
push
mov
adc
lret
call
sbb
inc
int3
lcall
mov
mov
pop
xchg
pop
imul
jns
add
pop
test
jo
jmp
dec
sahf
xchg
adc
xchg
xchg
push
sahf
adc
inc
jp
inc
push
fwait
or
jnp
cmp
add
sahf
dec
in
addl
aad
xchg
jnp
divb
lock
cmp
test
xor
cmc
repnz
sub
faddl
aam
dec
cmp
or
mov
cmp
push
add
add
xor
jae
dec
js
sbbl
mov
cwtl
mov
dec
cmp
push
mov
sub
xchg
dec
sarl
cwtl
lea
lock
sbb
or
daa
fnstsw
das
pop
das
xchg
movsl
cmpsb
ret
shr
scas
push
mov
pop
mov
fcmovb
cltd
into
call
fistpll
fidivl
jns
lret
addr16
and
sub
daa
out
xchg
dec
xchg
dec
shll
sub
mov
sahf
stc
popf
shll
or
sbb
jno
mov
ds
addb
mov
mov
in
or
mov
inc
aam
daa
cld
std
push
mov
push
inc
adc
sbb
xorl
fisttps
add
sahf
ficoms
test
into
dec
lods
push
jecxz
mov
cmc
add
into
pop
sub
mov
add
test
dec
adc
pop
pop
dec
aad
sbb
fwait
push
in
xchg
loop
pop
scas
insb
cltd
jbe
out
sbb
cltd
enter
sub
lock
sbb
movb
rcll
push
mov
inc
sbb
aas
insl
jne
sahf
or
adc
fs
push
mov
mov
inc
jp
jae
add
or
out
test
pop
sarl
pop
jp
bound
test
sbb
and
pop
or
pop
out
and
pop
or
push
mov
pushaw
pop
sti
sub
jle
test
icebp
xchg
aad
sahf
fnstcw
sub
sbb
mov
jmp
je
or
pop
cwtl
lods
mov
xchg
stos
sub
orl
ljmp
mov
xor
mov
stc
loopne
int
dec
fucomip
jbe
jl
fdivr
ds
pusha
in
xor
xchg
mov
sbb
push
decb
test
xchg
jmp
shrl
cmc
dec
lods
call
in
shl
aam
mov
imul
fs
xchg
mov
jbe
xchg
and
mov
rorb
imul
fsubrp
pop
pop
in
fs
sqrtps
dec
clc
jmp
subb
cmpsw
aaa
outsb
out
inc
int3
sbb
inc
mov
dec
loop
pop
cmp
sarl
dec
paddsw
aam
js
push
xchg
xor
and
lock
lock
mov
call
arpl
push
push
out
cmp
or
mov
mov
jl
and
fucomp
mov
mov
test
xlat
push
ret
test
lods
sahf
xor
cli
repz
call
jo
inc
add
pop
aad
xor
jb
leave
inc
cmpsl
and
pop
rorl
fdivp
imul
xchg
mov
sbb
inc
fidivrl
hlt
jmp
lcall
mov
int3
push
and
es
les
lret
mov
dec
cld
mov
cltd
divl
lods
out
xchg
test
lods
outsb
loop
ret
mov
jno
stos
scas
or
cmc
adc
adc
aam
decb
jae
add
jmp
outsl
insl
adc
add
and
and
dec
push
sub
lock
xor
pusha
push
sbb
ljmp
iret
cld
inc
ds
andl
push
sub
filds
push
ds
sub
cmc
and
lea
mov
add
cmp
mov
push
inc
call
xlat
mov
ljmp
cmp
nop
pop
shlb
movsb
aaa
scas
and
push
mov
insl
jg
lods
pop
es
pushf
pop
and
lea
inc
cmp
add
jmp
and
mov
shlb
fmull
cmp
fcomps
mov
adc
mov
popa
gs
or
mov
repnz
test
les
stos
out
jo
dec
jecxz
inc
jle
and
fsubr
jnp
adc
loop
jns
cmp
jl
xchg
xor
jecxz
pop
and
movsb
sbbl
jge
inc
repnz
in
iret
push
repnz
jae
mov
or
or
stc
lea
sub
loopne
inc
fstl
divl
shlb
nop
ret
sbb
in
mov
mov
pop
sub
and
inc
mov
test
dec
push
mov
xor
jbe
xor
mov
or
or
xchg
cmc
cmp
jne
je
dec
jbe
mov
jg
int3
sbb
mov
and
scas
xor
cmp
sahf
shlb
pop
mov
insl
pop
jne
mov
in
sbb
pop
add
xchg
clc
xchg
xor
stc
pushf
mov
out
idivb
scas
mov
es
cmp
ror
jno
aad
imull
fists
mov
xlat
js
mov
icebp
mov
inc
xchg
out
daa
mov
cmp
mov
add
mov
mov
fstpt
insb
xor
pop
rcll
lock
bnd
and
push
es
pop
andb
sbbb
mov
sub
push
inc
jno
mov
into
das
dec
lds
inc
jne
cwtl
push
ret
fisubrl
dec
ja
add
insl
sbb
test
push
xchg
arpl
popa
imul
test
mov
sbb
mov
dec
sbb
pop
mov
leave
lods
and
jecxz
out
cmp
jmp
xorb
mov
jg
negb
mov
and
mov
xchg
adc
loope
aam
mov
adcb
xor
jecxz
jbe
dec
dec
adc
clc
cmp
ljmp
stos
ficoml
push
dec
mov
pop
push
mov
adc
push
testb
add
jge
sub
loopne
jo
aas
mov
pop
mov
xor
jno
lock
push
test
repz
and
jnp
adc
nop
add
das
sbb
pusha
xor
push
adc
inc
filds
push
jmp
test
js
movsl
fucom
mov
in
mov
cmp
dec
adc
stos
rcrl
fsts
pop
outsl
into
pop
bound
in
hlt
popf
fbstp
les
sbb
adc
mov
add
dec
faddl
dec
xor
pop
dec
xchg
xchg
in
shrb
push
loop
vpcomuw
test
sbb
push
xor
xor
iret
lret
aam
mov
fimull
jge
nop
dec
jno
adc
shlb
dec
aaa
leave
or
inc
adc
pop
push
mov
sbb
fimuls
arpl
jno
cld
xchg
inc
imul
fsubrs
cmp
test
cmp
mov
sub
outsb
sarl
inc
xor
xchg
loope
add
jp
pusha
xor
lods
jecxz
adc
push
xchg
cmp
cs
je
xchg
mov
and
lret
test
mov
and
and
fiaddl
push
jno
cltd
jmp
addb
js
push
xor
jnp
pushf
cmpsl
sahf
push
xor
mov
dec
push
mov
xchg
rolb
ja
mov
in
and
in
stc
mov
xchg
sahf
and
and
lods
lcall
ret
jb
or
fsubl
loope
imul
cli
inc
push
loop
xor
outsl
pop
js
mov
mov
jp
xor
fldt
mov
movsl
fldl
fadd
xchg
scas
stc
and
std
repz
sahf
push
push
dec
add
aad
inc
adc
lahf
lret
dec
pop
sub
outsb
sbb
lret
mov
cwtl
push
cld
inc
enter
lret
xchg
or
aas
adc
push
rcrb
mov
in
aad
bound
cwtl
sbb
outsb
pop
or
test
sub
adc
lods
mov
cs
pop
pusha
inc
mov
add
dec
sarb
pop
sbb
js
dec
shll
xchg
aam
lods
add
and
ret
add
xchg
out
mov
mov
stc
arpl
jp
cmpsl
dec
in
dec
xor
aad
rol
sub
pusha
icebp
pop
cwtl
jge
push
jmp
incl
lret
lea
rcrl
out
lock
iret
push
sub
push
sub
add
rcr
inc
xchg
loopne
lret
pop
mov
jnp
and
scas
lods
dec
and
and
ficoml
jno
outsb
fnstsw
cmp
loop
scas
call
or
ss
jle
aas
lahf
sbb
sbb
shr
stos
cltd
pop
imul
ret
lcall
jne
enter
pop
fsubl
add
cmc
adc
out
in
into
jo
cmp
adc
out
inc
jae
pushf
adc
mov
inc
jecxz
repnz
in
xchg
cmp
pop
les
sbb
mov
mov
jae
add
ja
aaa
push
push
cli
lock
imul
movsl
mov
popa
jns
pusha
mov
ret
lea
jmp
cmp
notl
outsb
xchg
out
fsubp
jae
jbe
sbb
jle
lret
add
mov
cmp
mov
adc
jl
lcall
daa
fst
int
mov
jle
mov
lods
mov
cmp
xor
ljmp
orl
sbb
add
mov
mov
ror
stos
sub
mov
lret
adc
dec
lods
inc
jbe
lret
outsl
mov
push
hlt
dec
sbb
movntq
imul
aaa
push
sub
mov
and
dec
pop
pop
jp
hlt
fldt
adc
jns
add
adc
sbbl
push
mov
xor
xor
jo,pn
pop
mov
ljmp
ret
icebp
orl
lock
add
sub
mov
xchg
push
cmp
adc
push
inc
daa
cmp
ss
inc
imul
mov
icebp
sub
xchg
mov
push
es
add
data16
push
mov
adc
loopne
jne
sub
rorl
jbe
imul
xchg
arpl
mov
inc
nop/reserved
xor
xlat
sub
ljmp
pop
gs
into
iret
test
pop
or
dec
jge
sbb
cltd
inc
mov
imul
sahf
frstpm(287
adc
psllq
jo
aas
loop
adc
lea
insl
out
popf
sbb
dec
arpl
adc
xlat
xchg
adc
lret
das
jge
mov
dec
mov
sub
not
mov
mov
bnd
imul
mov
inc
or
or
add
ret
cs
cmpsb
push
add
popf
pop
mov
xlat
mov
imul
sar
add
sub
rcrb
sub
mov
loopne
xchg
dec
push
pop
lds
lcall
sub
lcall
add
jge
mov
push
xchg
in
adcb
sar
mov
mov
push
lock
jecxz
pop
mov
popa
ficoml
leave
lahf
adc
fwait
xor
fdivl
sub
jb
popf
sbb
adc
push
xchg
cmp
mov
in
mov
adc
mov
mov
sbb
call
loope
pop
movsb
imul
fs
push
sub
testl
add
dec
jg
jns
and
add
lret
outsb
outsl
int
stos
into
neg
int3
lcall
mov
incl
and
xor
push
and
jp
aas
sub
xchg
cmp
or
les
sub
xchg
cli
js
pusha
aad
mov
pop
sbb
mov
int
cld
mov
and
push
add
sbb
add
adc
inc
sbb
pop
insl
dec
jecxz
mov
and
push
outsl
sub
popa
movsb
mov
xor
jne
movsl
fildl
mov
xor
mov
xchg
into
sbb
dec
sbb
dec
pop
popf
scas
lock
push
mov
or
jae
orb
jb
or
xor
xchg
mov
inc
jae
jg
cli
repnz
int
sbb
dec
popa
jmp
test
jns
imul
and
js
xchg
test
cwtl
xor
mov
pop
aas
lea
jg
adc
push
push
ljmp
or
call
imul
popa
test
lcall
in
adc
inc
rolb
stos
pop
leave
fdivs
pop
xchg
push
into
mov
adcl
por
cltd
clc
mov
das
fidivrl
ret
fldenv
mov
pop
and
mov
shlb
mov
fistl
lcall
mov
fldt
mov
inc
fdivl
xlat
je
hlt
pop
push
test
frstor
lret
cmc
push
adc
out
add
ljmp
push
or
out
xor
aam
arpl
inc
pop
out
push
pusha
inc
jge
int
cmp
fldl
outsl
add
push
add
and
mov
rolb
daa
push
ss
out
pusha
sub
out
jnp
repnz
or
push
push
and
testb
icebp
das
aaa
aaa
daa
aas
subb
dec
aad
pop
xlat
insl
mov
arpl
pop
pusha
dec
push
outsl
dec
into
jo
inc
push
pop
xchg
loop
cwtl
daa
jge
dec
mov
sbb
sub
pop
cmpsl
cwtl
clc
pop
jne
mov
out
sbb
jg
push
mov
cmpsl
lods
or
mov
mov
jmp
test
pushf
xchg
cmc
hlt
es
dec
cmp
adc
mov
xchg
test
or
cs
sarb
push
mov
xchg
sbb
mov
cmpsl
xchg
xor
inc
mov
push
imul
mov
cwtl
sub
cld
nop
adc
lea
xchg
inc
pop
scas
fucom
sahf
mov
dec
ds
out
imul
add
push
adc
jb
pop
rcll
xchg
sbbb
shrb
fdivrl
jl
cmpsl
int3
mov
lock
or
jae
pop
lock
out
xor
sahf
ficompl
cmp
leave
xchg
or
inc
or
jmp
popf
mov
fs
mov
mov
xchg
fcomp
popa
sbb
or
push
mov
add
inc
dec
cli
and
fsts
shr
adc
loope
cmp
out
mov
imul
xchg
jae
loope
shll
addl
loope
pushf
lods
popf
fs
stos
imul
pop
out
sub
or
mov
inc
adc
sbb
out
jno
std
sti
jbe
fadds
in
das
mov
mov
add
outsl
mov
adc
add
into
and
mov
pop
inc
rcr
fstps
idiv
or
mov
daa
pop
pop
ja
popf
mov
dec
mov
stc
popf
add
ss
sub
xchg
rorb
pop
mov
xlat
je
out
fldl
ds
inc
cmc
in
and
jae
stos
lods
pcmpgtb
mov
daa
jge
loope
aaa
sub
pop
nop
dec
sti
jg
sbb
jo
mov
movsl
pop
jecxz
push
dec
sbb
ret
inc
pushl
xor
das
jnp
pusha
inc
push
out
and
rolb
add
sbb
mov
es
add
shll
fucomp
shll
out
mov
mov
mov
jno
or
data16
pushf
test
cmpsl
add
pop
imul
aas
jp
mov
dec
pop
sbb
and
scas
jg
cli
outsb
add
xchg
mov
pop
cmc
mov
or
rcrl
lds
jl
pop
lret
pop
mov
mov
repnz
insl
push
hlt
aas
aaa
test
jg
inc
jl
lahf
sbb
dec
lea
jno
fldenv
jecxz
jb
mov
inc
ret
test
mov
dec
cli
ficompl
pop
rcrl
sub
xor
dec
shlb
inc
push
xor
fdiv
and
imul
cltd
test
outsb
mov
sahf
sbb
data16
mov
orb
movsl
loope
push
mov
out
or
out
scas
xchg
mov
std
clc
loopne
xor
sub
fwait
inc
mulb
shrl
lret
inc
sbb
out
fs
xchg
sub
clc
aad
leave
and
sub
mov
aas
cli
push
ror
cwtl
popa
jnp
pop
cmp
sub
xlat
push
in
push
test
jo
jae
add
mov
or
xchg
inc
popa
mov
or
mov
fcompl
sub
aam
dec
aaa
std
int3
xchg
shlb
or
fs
loope
add
mov
js
sub
inc
ficomps
insb
inc
sbb
inc
xor
stos
and
lret
cmpsl
pop
adc
popa
adc
xchg
std
pop
pop
std
inc
or
cmpsl
sti
mov
add
xor
jg
das
imul
jmp
fwait
jl
je
jmp
mov
inc
mov
sahf
cmpsb
push
mov
inc
roll
sub
sub
xor
and
lods
fimull
cmpl
pop
mov
insl
push
or
xor
negl
in
mov
dec
flds
mov
ret
scas
dec
dec
in
mov
fsubp
aas
into
fs
enter
mov
test
lcall
insb
push
cld
cmpl
orl
xor
movsl
sbb
jb
jae
loopne
shlb
les
pusha
xchg
xchg
fldcw
mov
cmp
mov
comiss
sub
jno
sbb
insb
mov
arpl
fs
inc
cmp
rolb
add
jge
frstor
jg
dec
or
jne
cwtl
arpl
adc
push
xchg
mov
stos
int3
loope
inc
mov
xor
mov
mov
loope
rcr
and
jmp
arpl
ja
sarl
rol
push
jmp
inc
dec
add
idivl
jmp
aaa
push
les
lcall
sub
insl
mov
les
loopne
lock
cmp
fs
mov
mov
and
stos
adc
xor
fadd
add
push
push
ljmp
mov
aad
inc
fisubrs
iret
adc
mov
int
inc
and
into
mov
fmulp
pop
and
sarl
or
cmp
jae
jecxz
or
lock
andl
insb
jle
add
xchg
pushf
sbb
lcall
xchg
jg
ss
add
icebp
clc
out
cmpsb
aam
in
jl
in
out
ja
iret
or
clc
or
mov
mov
dec
stc
adc
inc
add
dec
mov
mov
cmpb
sbb
push
fsubrp
cmp
fsubl
sub
add
sarl
imul
or
adc
sub
jns
xor
lcall
inc
inc
outsl
int3
cltd
and
ja
mov
add
outsl
popf
icebp
push
push
imul
jl
jmp
pushf
ret
stos
pop
xor
jo
dec
cmp
adc
lret
fsts
imul
pop
jmp
imul
imul
pusha
push
out
pop
fnstcw
cmp
pop
pop
outsl
leave
faddl
and
shll
inc
fnstsw
inc
pop
push
fildl
mov
out
in
out
mov
addb
dec
sbbl
hlt
mov
popa
xchg
loope
pushf
mov
scas
mov
flds
lock
xchg
jne
out
dec
stc
dec
cmpb
cmp
jns
les
and
jno
pop
inc
cmpsb
ja
popf
xor
decb
decl
cmp
push
sti
mov
mov
xor
ficoms
push
outsl
sti
inc
call
repz
fwait
jmp
dec
loope
pop
cmp
mov
mov
popf
dec
dec
pop
xor
popa
in
pop
inc
loopne
sbb
jle
aam
aad
dec
adc
mov
int3
mov
mov
and
cmp
mov
dec
xorb
mov
adc
arpl
pop
loop
loopne
xchg
icebp
jmp
xchg
pop
fwait
out
mov
or
xor
and
and
xor
cmp
lea
adc
shll
in
push
mov
push
jo
jne
and
push
ja
and
jb
ljmp
in
sbb
push
push
orb
pop
das
inc
imul
jmp
rcr
rorb
xorb
or
hlt
xchg
push
js
incl
add
xor
sub
and
xlat
fdivp
xchg
inc
mov
add
adc
in
movsb
push
pop
lahf
fbstp
dec
inc
out
lock
inc
jnp
or
pop
push
cmpsl
popa
ljmp
sti
and
dec
bound
sbb
push
mov
mov
mov
fs
xor
imul
sub
xor
sbb
push
aas
popf
or
sarb
scas
dec
fs
popa
pop
or
push
fisubl
cs
jbe
xor
lcall
pop
mov
jecxz
scas
mov
push
cmpsb
ss
and
xchg
sbb
iret
fwait
rcl
mov
push
pop
or
mov
data16
popf
mov
incb
aam
mov
outsl
mov
jmp
push
ret
jb
shll
inc
lods
das
repz
and
adc
dec
insb
lock
sti
outsl
data16
pop
adc
xchg
rorl
xchg
test
cmp
pop
shrb
mov
jge
xchg
cltd
mov
scas
pop
or
pop
jge
mov
adc
fcmovnu
bswap
jbe
pop
inc
or
aaa
xlat
enter
dec
pop
sub
push
cli
stos
and
inc
dec
adc
cs
push
mov
mulb
pop
imul
or
or
aam
clc
adc
ljmp
push
xor
inc
mov
mov
push
push
push
sbb
inc
ror
outsl
sub
xchg
mov
lods
hlt
popf
push
mov
fmuls
jae
and
xor
adc
mov
jne
cmp
dec
adc
loop
pop
add
inc
pushf
repz
adc
pop
push
add
mulb
jno
mov
xchg
jne
pop
lods
fdivs
fwait
into
sub
cli
mov
loopew
fiaddl
test
pop
dec
je
add
mov
fdivs
jb
add
subb
mov
into
mov
pop
jae
pop
daa
adc
in
lds
iret
xchg
push
inc
add
in
push
mov
fnstenv
out
hlt
jae
outsb
sub
outsl
jmp
mov
sbb
cli
cwtl
dec
ja
xchg
ss
xorl
aas
shll
pop
insl
mov
popa
shrb
int
pushf
mov
test
lret
mov
outsb
adc
jnp
or
ficompl
sbb
imul
push
bound
or
push
jecxz
jns
inc
ljmp
movsb
mov
inc
or
adc
cmp
mov
imul
in
rcrb
repz
in
dec
add
push
das
push
cltd
stc
push
jnp
mov
sbb
pop
movsl
xchg
xchg
enter
lds
pop
sarl
repz
inc
ret
movsb
gs
scas
std
pusha
lahf
insl
fists
inc
push
mov
pop
dec
or
xchg
ret
fwait
dec
outsl
jne
in
xchg
mov
loopne
jae,pt
in
mov
mov
xor
mov
test
enter
mul
cmp
cli
and
inc
sbb
dec
fstpl
dec
push
and
and
dec
mov
leave
cwtl
pop
adc
sar
xchg
and
mov
out
cld
ds
jle
adc
je
or
add
cli
inc
movb
pop
rcll
movsb
dec
jbe
in
ror
adc
dec
cmp
pusha
pop
sbb
lock
mov
cmc
enter
mov
lds
dec
repz
loope
push
cltd
adc
lods
cmp
add
jnp
imul
xchg
pop
sbb
inc
scas
sub
mov
ljmp
stos
cmp
push
flds
adc
jg
test
mov
lock
lcall
xchg
dec
pop
insl
test
mov
fstl
sub
jg
inc
sbb
or
stc
cmp
mov
mov
in
xchg
xor
pop
clc
ret
iret
cmp
jne
shll
bound
mov
mov
jno
mov
andb
lret
decl
repz
inc
lock
les
mov
orb
inc
xchg
cs
cmpsb
leave
xor
sahf
data16
outsl
mov
dec
cmc
xchg
cmpb
out
gs
jae,pt
mov
icebp
xor
xchg
lock
mov
mov
mov
cld
les
dec
mov
inc
in
stos
pop
fsubrp
mov
psrad
mov
insl
cltd
adc
mov
pmaxsw
xor
cmpl
outsl
aad
add
xchg
sbb
push
cltd
pop
sbb
add
fdiv
fs
pop
test
and
lret
jbe
movl
aaa
inc
arpl
mov
mov
in
push
movsl
dec
orl
pop
fiaddl
mov
sub
inc
mov
fsubrl
clc
cmp
std
xor
dec
es
leave
and
jno
jle
test
fwait
cmp
out
lods
stos
xor
push
aad
jnp
fdivrp
adc
icebp
jbe
sub
inc
mov
add
ja
push
sbb
repnz
push
call
xor
push
cmp
pop
push
mov
cld
jno
pop
lods
enter
adc
mov
loop
pop
push
stos
add
lret
sbb
stos
mov
loopne
push
sub
cmp
ja
insb
cmp
ficompl
push
jecxz
inc
pop
cmp
in
dec
pusha
scas
jne
mov
jle
sub
adc
inc
aas
cmpsb
mov
mov
ds
repz
out
out
mov
mov
repz
js
inc
sbb
push
or
js
xlat
jbe
sub
or
out
xor
aad
mov
and
imul
jae
push
orl
sahf
push
add
ds
data16
pusha
bound
cmpsl
sbb
into
xchg
dec
mov
int
in
mov
loop
mov
push
mov
int
notl
push
lock
dec
js
cltd
lods
and
sahf
insb
sti
or
xor
mov
mov
xchg
fsub
stos
add
int3
ret
mov
inc
lret
ja
cli
out
rcll
jge
ja
leave
and
adc
mov
rcr
clc
test
xorl
xchg
push
lahf
cmc
mov
mov
xor
and
cmpsb
or
jo
mov
jo
arpl
xchg
xor
movsb
in
sar
push
mov
pop
add
mov
sub
lods
adc
push
aad
in
or
cmp
cli
xor
movsb
pusha
das
js
cmc
xchg
push
imul
lods
sbb
sbb
lcall
dec
cs
jo
movsb
sub
jb
xor
sub
lock
gs
outsb
mov
pop
hlt
repnz
call
std
jae
dec
cmp
mov
mov
push
std
inc
into
mov
mov
lea
or
in
aas
mov
outsb
lahf
mov
insb
sub
jle
push
vpcmpgtb
shll
in
push
jg
sub
mov
xchg
imul
pop
mov
mov
push
push
popf
cld
xlat
jle
pop
icebp
fcmovb
push
push
add
xchg
xchg
divl
popf
pop
xchg
in
in
xchg
sub
in
sbb
fsubs
or
mov
push
inc
aad
dec
jo
test
cmp
xor
orl
jo
out
cmc
push
fldt
sub
jl
sub
mov
cmp
push
cmp
sbb
pop
cmp
ja
dec
movsl
push
test
xchg
repnz
cmp
mov
pop
adc
push
hlt
push
mov
sub
dec
sahf
and
mov
fisttps
das
push
dec
mov
pop
pop
adc
pusha
les
pop
insl
je
sbbl
mov
sub
cmpsb
addr16
loop
in
mov
cwtl
sub
jl
mov
sbb
xor
mov
add
push
pop
xchg
jmp
mov
mov
and
inc
cld
std
cmc
leave
fwait
mov
sti
adcl
fwait
ljmp
popa
jle
and
xchg
rol
fcmovbe
scas
cmc
lahf
pop
std
out
repnz
mov
ficompl
mov
data16
push
adc
shll
inc
sub
sti
popf
xchg
add
cmp
inc
mov
pop
xor
add
mov
dec
daa
xor
xchg
mov
out
cli
jmp
inc
repnz
dec
movaps
fsts
sti
fistl
jecxz
mov
jo
pushf
jmp
std
hlt
shll
popa
dec
test
pop
cmp
push
inc
leave
mov
add
mov
out
mov
or
cld
xchg
mov
in
push
inc
inc
ret
bound
and
test
mov
fs
std
dec
pop
mov
xchg
loop
pop
cld
sbb
mov
addr16
xchg
popf
sahf
push
push
push
cmpsb
xchg
pushf
lahf
lods
out
and
push
xchg
scas
xor
rol
ja
adc
arpl
jo
in
lea
mov
jge
and
xchg
insl
cmp
lahf
cmp
sub
movsl
stc
insb
test
out
ret
mov
ficoms
lret
mov
rcrb
push
orl
pop
push
les
pop
cmc
cmp
sbb
test
lret
sub
movb
mov
mov
sbb
inc
or
pop
decl
mov
jg
fsubl
call
pusha
sub
xorb
xchg
pop
sub
cmp
fldl
pop
loopne
cs
ljmp
mov
scas
jl
jp
jo
dec
mov
push
pop
popa
cld
xor
and
jne
movsl
adc
adc
shrl
cwtl
fs
mov
aam
pop
mov
cmp
dec
push
loop
int3
jnp
ljmp
dec
mov
jne
dec
ljmp
lea
mov
bound
xchg
in
sbb
mov
dec
sub
mov
stc
sbb
xor
cmc
fsubrl
xchg
test
sahf
test
jle
notl
mov
loopne
jns
xor
data16
jg
dec
dec
mov
pop
sbb
push
adc
push
pop
add
add
int3
out
scas
xchg
or
repnz
and
rcrl
mov
add
cmp
sub
push
mov
inc
fwait
shr
add
shll
loope
mov
adc
cwtl
sub
es
aad
mov
xchg
xchg
loope
adc
jmp
lea
call
xchg
adc
cmp
and
xchg
imul
or
sarl
xchg
push
pop
in
pop
dec
adc
rorb
lds
outsb
repnz
cmp
insl
mov
cmp
mov
imul
pop
pop
dec
das
sub
int
fs
sbb
out
lret
lds
push
lods
sti
or
xchg
xor
out
ret
stos
fsubl
or
stos
test
add
lret
and
lahf
pop
push
jmp
fucomip
and
dec
xchg
add
lret
mov
es
xor
add
dec
jl
jnp
and
or
lret
test
shlb
push
push
mov
inc
shrl
test
ds
mov
jnp
fidivl
cli
xchg
adc
mov
lds
jle
inc
shlb
mov
cmpsl
sbb
sub
fs
cmpsl
and
mov
jno
adc
scas
js
jns
jl
jbe
nop
outsl
xchg
int3
testl
sbbb
inc
and
in
je
mov
dec
movsl
pop
cmpsb
loopne
jb
hlt
dec
jl
sub
fildl
leave
push
orl
mov
inc
mov
frstor
nop
addl
jg
push
stc
sarl
push
cltd
mov
punpckhwd
std
bnd
scas
cmp
shll
sub
mov
inc
mov
imul
adc
inc
mov
mov
ret
add
xchg
dec
xchg
xor
and
add
mov
adc
mov
adc
push
lret
push
dec
in
outsl
pushf
pusha
outsl
nop
stc
push
mov
in
cmp
adc
pop
loopne
int3
mov
pop
lds
push
enter
movsb
add
lret
test
sbbb
mov
mov
cld
ja
xor
adc
inc
jo
in
into
fisubl
mull
jno
loope
arpl
xor
cmc
dec
int3
jge
mov
jp
dec
out
sbb
call
test
int
cld
dec
out
shlb
fiadds
fistl
mov
test
cli
mov
lds
filds
pusha
mov
sub
pop
mov
sahf
lahf
ss
jae
push
mov
imul
fisubrs
push
fsubrs
sub
repz
out
in
bound
dec
adc
ret
mov
sbb
jo
popa
cmc
sub
outsb
xchg
jb
decl
pop
dec
and
leave
jne
cmp
inc
clc
ja
mov
nop
fadd
hlt
mov
movsb
outsl
and
mov
xlat
mov
dec
or
xchg
push
xor
incb
mov
aam
out
dec
pop
rorb
js
insb
push
jnp
mov
mov
pop
cmpsb
xchg
les
and
in
push
in
in
sahf
and
das
aad
sub
test
leave
dec
xor
or
dec
add
xchg
or
stos
lods
rorb
pop
add
mov
out
fdivp
xchg
loop
pop
inc
cmp
xor
popf
push
stc
aaa
loopne
gs
sbb
xor
cmc
test
xor
and
pop
aam
mov
cli
mov
cmp
push
mov
sbb
cmp
std
or
shl
test
sub
arpl
bswap
inc
and
fsts
sub
xchg
pop
roll
push
test
cmp
orps
sbb
test
aas
ret
lret
jbe
cwtl
fsubs
popa
ja
and
and
andb
jp
adc
xchg
push
repz
fcomp
cli
iret
pop
inc
xchg
sub
stos
lret
int3
aam
cmp
fnsave
scas
fs
in
xor
stc
xor
add
and
push
push
jmp
sahf
push
cltd
cmpsl
mov
xchg
ret
lcall
and
pop
fbld
add
icebp
adc
cld
jmp
sub
dec
imul
enter
daa
andl
movzbl
sub
shrl
xor
push
xchg
mov
sub
arpl
sbb
sub
xchg
lea
enter
lea
cmp
mov
arpl
lret
cmp
sti
rol
sarl
xchg
in
xchg
loopne
pushf
mov
inc
ret
popf
mov
dec
leave
adc
lea
xorl
arpl
stos
gs
iret
inc
push
ficompl
aas
mov
andb
mov
or
mov
xor
push
stc
rorb
inc
jo
sub
adc
mov
jp
lea
mov
cmp
idivl
or
mov
ja
mov
pop
jno
jp
xchg
imul
ljmp
test
aaa
jns
loopne
fldcw
cli
xor
mov
or
dec
out
cmp
push
push
fnstsw
fstps
data16
jle
jg
xchg
mov
mov
dec
dec
out
sti
stos
call
imul
test
pop
mov
add
in
or
js
sub
mov
xor
fwait
das
fcoml
out
sub
pop
or
mov
lock
das
mov
lret
ljmp
dec
add
repnz
sub
mov
pop
push
add
or
xor
push
push
fimuls
cmp
stos
dec
and
jo
mov
sbb
adc
call
pop
sahf
mov
je
loopne
push
jb
mov
cmp
inc
mov
incb
sbb
inc
mov
mov
aas
int
xor
pop
pushf
sti
mov
orb
adc
bound
nop
test
or
jl
add
fdivrs
repz
mov
js
setae
in
jo
sahf
retw
pop
inc
mov
fdivrs
fcmovb
mov
xchg
jle
push
test
xchg
mov
or
ds
clc
sbb
jne
mov
push
das
cmp
loop
xchg
clc
jle
je
sbb
out
push
xor
or
xchg
pop
and
sbb
sbb
mov
push
sahf
lret
popf
ret
and
ret
and
jno
lahf
js
fsubrp
sbbl
jmp
and
pop
cmpsl
in
and
xor
sarb
cli
mov
push
movsb
xchg
mov
ss
add
jmp
pop
sbb
je
inc
loopne
push
lea
stos
push
int
xor
inc
mov
adc
xor
fdivl
ljmp
repz
outsl
rorb
incl
cs
insb
psubsw
sbb
mov
and
or
cmpsl
xchg
aam
pop
or
mov
cmp
bound
jecxz
add
scas
pop
mov
rcr
scas
cmp
popf
xchg
out
gs
add
repz
push
cmp
mov
mov
das
xchg
pop
pop
out
adc
mov
mov
outsb
xchg
hlt
dec
pop
push
ret
push
pushf
movsl
stos
jg
mov
adc
xlat
pop
mov
pop
icebp
sub
jecxz
cmp
or
dec
ja
xchg
pop
in
loope
imul
enter
mov
mov
mov
push
cmpsb
test
or
stc
xchg
scas
sub
lock
adc
sub
ret
cmp
sub
push
dec
bnd
dec
mov
push
jl
out
inc
test
subb
rcl
xchg
popa
jns
mov
mov
push
cmp
add
pop
sbb
dec
jge
lods
into
lds
aas
bound
cmp
fcomps
pop
mov
imul
repz
mov
dec
jnp
xchg
les
mov
icebp
mov
inc
int3
inc
mov
inc
lcall
sub
add
in
jno
ret
fcoml
adc
test
bound
xor
loopne
call
bound
push
xchg
das
lds
jg
jg
std
js
pop
adc
sbb
dec
and
imul
mov
inc
test
into
or
mov
adc
mov
dec
lds
ret
dec
negl
jnp
test
xor
cmpl
stos
gs
sti
push
out
adc
xchg
mov
insb
in
fdivs
std
sahf
push
ja
je
jo
jge
adc
loope
lret
lret
aad
std
insl
mov
jmp
jg
add
mov
mov
dec
pop
and
sub
aaa
dec
mov
notb
adc
xor
ror
jp
push
sbb
pop
scas
cmc
mov
pop
rclb
insb
pushf
add
mov
ret
jae
jb
outsb
cli
cltd
popa
sub
dec
into
dec
mov
or
stos
cmpsb
shrl
mov
inc
push
or
inc
pop
jge
out
adc
ja
jns
add
push
inc
in
icebp
mov
and
fisubs
sbb
lods
sbb
pop
out
bnd
mov
outsl
cld
xor
cmp
dec
jo
xor
inc
mov
lods
push
call
inc
or
mov
push
loop
inc
cli
testl
mov
inc
jmp
mov
lods
stos
and
sbb
ss
mov
ds
int3
mov
xor
and
fs
incl
jp
jnp
add
adc
das
fidivrl
xchg
outsb
adc
jno
repz
jns
cmc
in
sub
cmpsb
imull
out
add
cmp
add
adc
add
das
faddp
mov
rcrl
ret
or
and
push
jmp
inc
cmp
ret
or
or
push
lret
cltd
jmp
mov
arpl
dec
shll
push
xor
fsubrs
mov
aas
jb
ljmp
cmc
or
ljmp
in
enter
lret
inc
pop
push
add
cld
repnz
roll
xchg
sub
jb
stos
add
movsb
ds
sti
ffree
sbb
or
push
cmp
push
mov
jecxz
lea
mov
mov
mov
mov
fldt
mov
pop
in
mov
hlt
hlt
das
ret
lods
sub
aad
hlt
cmc
icebp
mov
adc
mov
add
mov
ss
js
lods
lods
push
mov
and
push
inc
dec
sub
imul
and
outsl
jns
mov
mov
dec
add
add
popa
xchg
cmp
out
add
cmp
cmpsl
xlat
fsts
call
in
movsl
push
xor
sbbl
lret
sub
outsb
loope
push
cmpsl
cmp
lea
push
xor
dec
jge
or
inc
push
popa
dec
xchg
lds
jmp
and
out
inc
jns
add
push
lods
push
addl
imul
lea
mov
cmp
dec
add
mov
sbb
aam
push
mov
test
in
jmp
divb
push
jmp
clc
int
xchg
mov
add
stos
in
sbb
sbb
out
inc
out
sbb
pop
shrb
and
out
insl
pop
jmp
pushf
dec
adc
popa
scas
das
dec
fs
notl
aam
dec
fs
scas
mov
jecxz
cltd
pop
fcmovb
ljmp
push
mov
insb
dec
xor
addr16
push
jne
rcrb
xchg
push
sbb
stos
and
xlat
xor
xchg
loopne
jl
add
in
inc
rclb
cmpsl
jno
inc
push
imul
jge
into
push
lods
xchg
mov
xor
dec
fistpll
lcall
push
into
je,pt
adc
mov
or
pop
jnp
loopne
in
imul
sbb
rcrl
sub
loopne
cmp
lea
ss
rol
xor
push
mov
sub
jmp
push
ret
out
mov
test
js
aas
jecxz
or
add
push
fdiv
fildll
xchg
mov
jae
loope
shll
pop
in
mov
dec
sbb
cli
cmc
jno
mov
mov
das
cmp
mov
andb
testb
testb
sub
cmpsb
outsl
push
inc
fcomip
cli
xchg
and
push
dec
xchg
andb
xchg
in
push
out
mov
movsb
and
push
mov
sbb
shlb
jo
xchg
add
sub
pop
mov
jnp
adc
mov
inc
outsl
sti
and
push
movsl
shlb
push
push
lea
cmp
mov
aaa
stc
testl
hlt
fcoms
rolb
or
vsqrtps
mov
xchg
push
and
ficoms
xor
out
and
add
sub
jo
rcll
sub
pop
inc
in
inc
mov
ret
pushf
roll
stos
or
mov
popf
mov
ss
push
inc
ss
out
ret
sub
aaa
cmp
lret
sub
bound
mov
xchg
inc
loop
jle
sub
or
fwait
cmp
fldcw
cmp
scas
jne
inc
cld
xchg
test
cmp
sbb
sub
pop
mov
cld
or
pop
mov
btsl
sub
mov
xchg
stc
mov
jl
aam
cmp
sub
bound
sub
ss
int
xchg
sub
add
sarl
mov
test
jle
pushl
add
xor
stos
xchg
inc
lcall
jge
xor
push
mov
lret
mov
pop
jo
push
std
lcall
add
out
adc
in
sbb
and
fdivrs
mov
sub
fstps
cwtl
push
ss
jnp
andl
sub
movb
repnz
pop
add
js
xor
cs
lds
xchg
divb
ret
ja
imul
cli
cli
gs
std
xor
cs
sbb
sub
push
add
push
jmp
loop
add
sub
adc
pop
lret
jmp
pop
jmp
ljmp
pop
push
lock
pop
adc
fsts
mov
lock
pop
or
mov
inc
sbb
adc
ljmp
sbb
lret
dec
jp
testl
xlat
or
in
pop
adc
sbb
orl
dec
cmp
aaa
xor
cltd
inc
iret
push
in
scas
das
push
sbb
loop
data16
push
outsl
sub
pop
js
push
movsl
orl
data16
xor
rcr
addr16
xorl
and
pop
sahf
mov
addr16
fsubrl
jno
imul
int3
out
jmp
xchg
cmp
out
test
in
cmp
out
lods
sbb
push
cmp
xlat
jno
scas
loopne
push
cli
jmp
inc
push
insl
std
inc
xchg
fldl
fmul
jae
or
mov
pop
fdivs
mov
pop
sahf
mov
cmc
dec
rolb
fnstenv
fdiv
in
fwait
sbb
shlb
pop
jg
inc
adc
xchg
gs
inc
mov
dec
jle
sub
fidivl
add
cmp
mov
inc
jns
push
add
fs
mov
enter
in
call
addb
and
int
mov
cmp
scas
mov
movsb
mov
pop
mov
sub
dec
jo
cwtl
jno
mov
mov
mov
jp
inc
cmpsb
les
add
adc
cmpb
jge
dec
in
sub
pop
cmp
testb
inc
jae
cmc
mov
push
cmp
mov
sub
stos
mov
mov
add
or
dec
cmp
mov
and
loope
fnsave
jmp
or
std
test
mov
jnp
movsl
mov
mov
insl
inc
lods
je
mov
mov
out
adc
jno
clc
gs
in
jl
in
popf
test
stos
push
or
jle
pop
test
stc
adcb
mov
insb
outsb
mov
lods
iret
inc
dec
je
mov
add
pop
mov
and
pusha
das
fisubl
mov
add
or
sbb
jl
jnp
loope
cmp
insb
pop
dec
out
test
leave
mov
aas
push
in
jp
jo
test
cld
push
iret
insl
js
jno
add
fsubrl
mov
cmc
loopne
mov
jne
cmp
xchg
push
popl
popa
int
push
stc
movsb
jae
test
jl
icebp
std
lock
xchg
adc
sbb
out
pop
mov
pop
fstpt
and
xchg
shrb
fstp
leave
loope
jecxz
imul
jge
pusha
pop
jb
cmp
pop
mov
sbb
xor
cwtl
jae
into
mov
xor
rcrb
leave
or
repz
fistpl
pop
push
stc
nop
out
mov
fincstp
js
and
sub
or
ret
xchg
lods
mov
jmp
inc
icebp
pop
jge
pusha
or
pop
cmpsb
sbb
stos
jo
aam
jns
pop
inc
add
in
adc
cmpsl
lods
imul
pop
mov
in
add
rcrb
or
add
cs
nop
mov
les
pop
loop
paddw
mov
xor
xchg
lcall
stos
mov
mov
xchg
mov
add
iret
dec
bound
push
je
adc
xchg
inc
rcll
xor
movsb
lods
mov
cmp
xchg
shl
aaa
out
and
insl
fs
cltd
scas
in
add
mulb
inc
add
pop
xchg
or
scas
pop
xchg
popa
sub
divb
jle
mov
mov
jp
jno
mov
jmp
call
push
and
cmp
out
cmc
iret
adc
lret
stc
stos
or
insl
notl
add
xchg
daa
adc
xor
clc
and
outsb
inc
or
jle
push
imul
pop
sub
mov
jnp
add
leave
or
in
pop
and
push
jnp
xchg
in
repz
inc
cmp
adc
dec
pop
push
and
jmp
sub
jl
je
adc
cmpsb
xchg
xchg
in
pop
sub
loop
inc
jp
jne
lds
xor
pop
mov
add
cmp
fists
push
mov
insb
insl
sbb
imul
mov
dec
fwait
dec
in
movsb
mov
loopne
push
cs
add
push
push
ret
int3
or
andb
xor
mov
out
mov
test
fsubp
iret
or
icebp
gs
stos
sti
lret
js
iret
inc
mov
mov
fmul
push
insl
sub
hlt
add
xchg
repnz
push
pop
push
cli
shl
popf
add
call
push
into
push
dec
loop
js
test
fistl
xor
jo
cmp
stos
inc
sub
dec
cwtl
aad
lcall
fldcw
insb
and
test
jo
arpl
shll
xor
sub
jnp
xor
adc
sbb
lods
adc
add
sbb
scas
pop
pop
sbb
enter
pop
or
jne
arpl
cmpb
and
ret
mov
mov
mov
mov
lods
mov
jns
dec
in
in
outsb
xchg
lods
pop
ja
inc
cmpsb
add
out
mov
dec
cmp
in
test
mov
sbb
mov
push
enter
pop
inc
aam
pop
insl
fmulp
xchg
out
mov
je
push
rolb
push
or
test
andl
xor
cmpl
mov
std
fs
add
sti
call
or
sub
and
sbb
and
or
sub
xor
stos
mov
inc
or
dec
and
jge
shll
leave
popa
add
imul
lods
jge
and
inc
nop
mov
sbb
and
cmp
pop
insl
or
pop
mov
add
push
xchg
aas
fwait
pop
mov
int3
movb
insl
lahf
popf
jp
repnz
lds
cmpsb
adc
out
mov
push
loope
rep
icebp
sbb
scas
or
xchg
lret
lret
icebp
jmp
sbb
cmpsl
dec
out
movsl
ds
js
shl
xorl
jo
popf
rolb
cmpsl
pop
mov
mov
dec
movsl
mov
negl
int3
imul
aad
jg
fisubrs
sbb
cmp
icebp
aad
cmp
push
out
or
pandn
push
daa
sub
cmp
cmp
test
inc
iret
notl
lods
mov
loopne
xchg
and
pop
dec
ret
test
in
fwait
lret
cmp
enter
adc
push
lods
sbb
add
fs
sub
xor
fstpt
mov
scas
pusha
add
notl
fisttpll
jmp
mov
jno
pop
lret
lcall
pop
sub
aad
idivb
inc
es
mov
arpl
gs
imul
mov
mov
mul
or
cltd
xchg
rcrl
cli
repnz
cmpsb
dec
test
js
outsb
call
pop
lret
arpl
movsl
aam
insb
repnz
add
out
subb
sub
xorl
mov
cmp
mov
test
dec
xchg
mov
mov
cwtl
in
int
jns
pop
mov
inc
inc
push
jmp
xchg
adc
mov
sub
pusha
mov
xor
jno
lret
movsl
sub
std
stos
xor
clc
mov
sub
sub
push
data16
push
es
mov
cmp
fidivrl
push
dec
push
lcall
sub
adc
add
mov
cmp
fcom
jns
mov
ret
mov
bound
les
andl
inc
mov
lcall
fiaddl
outsb
xchg
fidivrl
ret
sahf
lret
mov
or
xorb
pushf
sbb
or
pop
test
sbb
and
mov
daa
push
cmc
lock
inc
and
push
sti
mov
stc
pusha
call
jb
push
mov
nop
outsb
cli
adcl
dec
nop
jecxz
xchg
sub
jae
lods
or
ficomps
xchg
ljmp
xchg
aaa
add
add
orb
sbb
in
inc
mov
inc
jle
mov
ficoms
fiaddl
push
sbb
cmpsl
mov
xchg
sarl
loopne
mov
jae
cmp
lea
xchg
jle
rorb
push
cmp
mov
dec
xor
sbb
test
adc
ljmp
mov
pop
push
js
add
or
movb
ds
cmp
shl
mov
xchg
out
paddusb
mov
jp
mov
out
xchg
icebp
jle
lahf
adc
test
mov
pop
cmp
les
ror
std
cli
push
xlat
lods
imul
shll
mov
popa
cwtl
add
add
inc
xor
xchg
push
cmp
dec
xchg
imul
and
in
fabs
lret
jo,pn
add
xchg
scas
sub
xchg
shll
aas
int
push
xchg
adc
lcall
in
lock
mov
xchg
in
shr
test
clc
shr
add
mov
aaa
adc
fwait
hlt
sbb
inc
test
sub
stc
subl
sbb
xchg
inc
idivb
dec
lds
push
sbb
iret
fists
movsb
push
jo
aas
outsl
jnp
mov
xchg
jno
jmp
xchg
cmp
mov
adc
dec
pop
pop
cmp
div
dec
mov
inc
push
data16
pop
sbb
and
jnp
xchg
mov
mov
or
test
cmp
cltd
mov
jp
bswap
sbb
test
addr16
repz
mov
icebp
aam
push
test
cltd
mov
mov
jo
ljmp
scas
lods
xchg
mov
mov
shrl
es
jb
shl
cmc
or
call
sbb
or
cmp
movsl
mov
shll
add
mov
jmp
inc
nop
cmpsb
sti
dec
dec
cmp
dec
int
pop
popf
add
gs
daa
jne
jns
mov
jnp
enter
outsb
lahf
sbb
push
fwait
aaa
xor
int
xchg
inc
push
dec
rcr
popa
push
inc
imul
ja
jno
lret
jp
add
orl
and
xchg
leave
clc
mov
test
fwait
lret
repz
test
dec
movsl
jl
push
loop
lret
inc
adc
jae
test
jecxz
test
outsl
aas
pushf
or
push
stos
mov
idivl
movl
push
jecxz
xchg
fisubrs
in
jb
jnp
jno
push
aaa
lret
sbb
add
lcall
cmp
lret
mov
pop
sub
mov
repnz
in
jle
out
test
xchg
testl
sub
mov
inc
ret
add
es
mov
inc
sbb
cmp
lret
lcall
addr16
data16
mov
stc
adc
mov
nop
adc
xchg
mov
je
push
lds
inc
push
into
push
dec
insl
imul
sub
imul
rcll
test
sti
lods
xchg
in
mulb
inc
mov
and
inc
outsl
jo
out
or
bound
push
imul
lcall
jae
xchg
jnp
fcoms
mov
aad
stos
mov
pop
repz
repnz
fidivl
loopne
in
outsb
insb
in
outsb
or
add
test
loop
sbb
sub
dec
jge
scas
negl
lds
inc
sbb
add
cmpsb
shll
inc
out
fsubl
cmp
adc
xchg
and
add
lods
push
adc
aad
sbb
pop
daa
xchg
xor
mov
cmp
xor
inc
test
je
xlat
pop
rcll
or
mov
pop
push
push
inc
out
cli
rol
add
dec
orb
lahf
sbb
sub
enter
push
sti
cmp
sub
jb
leave
outsl
std
divb
or
in
jge
pop
push
mov
test
fwait
ljmp
xchg
jg
push
mov
mov
and
adc
inc
dec
xchg
lea
inc
clc
lock
mov
test
fistl
dec
adc
lds
mov
or
push
movsl
fldenv
pop
out
addr16
hlt
das
mov
cmp
pop
sbb
sbb
mov
push
or
ret
push
leave
outsb
js
shr
inc
jecxz
mov
or
jmp
dec
xor
xor
and
cmp
testl
lds
or
cmp
mov
invd
push
and
and
insl
jl
push
pop
std
les
aad
push
addb
push
test
pusha
je
mov
push
mov
lahf
movsl
cmp
push
adc
adc
xchg
lods
loopne
imul
mov
call
cmp
lcall
shrl
imul
sub
pop
stc
popf
into
jg
pop
pop
sub
xor
pop
mov
insl
jl
out
jecxz
sbb
test
scas
add
aas
adc
and
lcall
sti
lcall
popa
loope
and
idivl
mov
arpl
adc
pushl
mov
fcompl
cmpsl
scas
sahf
lods
rorl
inc
js
fwait
icebp
cs
test
leave
pop
repnz
arpl
daa
jl
imul
test
andl
cmp
dec
adc
cmpsl
lahf
add
bound
test
roll
into
xor
sub
addb
cs
jmp
fwait
add
pop
js
rcrb
hlt
push
lret
jne
test
push
push
mov
into
adc
inc
jae
mov
cmp
xor
popa
sbb
mov
mov
xchg
aam
dec
loop
loope
sub
out
stc
mov
mov
incl
loop
loop
out
cltd
aad
mov
xor
repz
lahf
out
mov
push
sbb
outsb
push
sbb
mov
rcl
cld
adc
and
jmp
cmpsb
mov
push
movb
sub
pusha
in
ds
notl
lcall
int
cmp
mov
jns
ficompl
iret
push
jno
inc
lcall
sbb
cmp
mov
fidivrs
cs
cwtl
mov
inc
cmc
outsl
std
pop
cmp
nop
icebp
movsl
mov
add
mov
call
shl
movsb
inc
xor
pushf
fcoms
jno
lock
mov
add
clc
loope
sbb
dec
and
push
xchg
mov
inc
adc
fbstp
hlt
in
mov
and
add
pop
sahf
hlt
leave
loop
std
andb
cmp
push
lret
out
dec
rcr
fldcw
jnp
xor
sbb
popa
sar
xchg
xchg
jae
push
xor
jmp
ljmp
mov
xchg
and
imul
jae
jns
je
cs
mov
pop
add
aad
jecxz
mov
daa
shlb
xchg
lock
sbb
push
into
fisttpll
xor
jb
mov
cltd
xchg
out
adc
pop
clc
imul
sub
out
add
sub
daa
fwait
into
lods
not
adc
cli
add
insl
popa
int
adc
loope
arpl
xor
dec
jbe
lcall
dec
imul
adc
aaa
icebp
cmp
push
iret
xchg
cmp
sbb
xchg
iret
cmpsb
call
test
daa
mov
adc
hlt
mov
dec
es
pusha
in
hlt
es
dec
jb
dec
lds
mov
mov
xor
cmpb
fwait
adc
pusha
fildl
xchg
les
addr16
mov
mov
push
andb
lret
std
sbb
outsb
mov
loopne
jo
xor
sub
lret
or
mov
ficoml
jle
in
call
call
cmpsl
adc
popf
push
lea
xor
fisttpl
pop
rorl
les
call
imul
add
lods
dec
adc
out
jae
cmpsl
mov
or
push
imul
xchg
push
add
ret
jno
cmp
repz
push
mov
sbbb
in
cmp
or
add
nop
int3
and
mov
leave
hlt
xor
shl
mov
sub
xor
jb
xor
jno
je
jmp
fcoms
mov
xor
fidivrl
aam
repnz
test
mov
and
fbstp
nop
inc
dec
jp
jne
inc
sbb
lret
add
in
sti
mov
mov
adc
ja
mov
cltd
movsl
popf
xor
jns
and
insb
lods
lods
mov
vpshufhw
add
imul
jmp
and
mov
xchg
stos
jg
push
mov
inc
sbbl
aaa
add
mov
cmpsl
bound
scas
push
mov
mov
movsl
mov
mov
xchg
mov
xor
xchg
clc
mov
sbb
es
sbb
fdiv
mov
push
push
jno
outsl
pop
xchg
push
inc
add
or
pop
sub
sahf
sbb
jnp
sbb
mov
xchg
ret
add
xor
outsl
push
stc
lds
popa
leave
in
sbb
cmp
adc
jnp
sti
es
cmp
inc
loop
mov
fwait
das
das
stc
loope
jnp
pop
rclb
je
mov
cld
jl
subb
pop
adc
xor
lods
ds
jg
mov
sbb
inc
sub
fmuls
cmpsw
adc
jno
adc
jno
adc
test
xor
pop
insb
pop
mov
dec
gs
clc
out
cli
int3
sbb
out
je
scas
stc
lret
mov
mov
mov
cmp
sahf
jo
mov
cmp
int
ret
mov
push
call
aas
pop
in
shl
imul
repnz
test
xor
dec
shrb
jecxz
pop
stos
pusha
sbb
dec
rcll
iret
in
pop
and
xchg
in
xor
mov
pop
mov
jne
inc
ror
jmp
xchg
jle
pop
test
xlat
add
fsubrl
add
mov
fdivs
cmp
xor
iret
inc
dec
inc
and
lea
sbb
aas
jp
mov
fsubl
in
mov
xchg
loope
test
mov
inc
inc
into
and
mov
dec
repnz
jae
cwtl
int3
adc
jg
addr16
sub
and
andb
sbb
shlb
in
inc
mov
push
out
aad
scas
stc
lods
push
and
mov
add
repnz
inc
sahf
mov
icebp
or
push
adc
ds
cli
pusha
addb
out
shl
xor
ret
in
xchg
aad
adc
flds
and
inc
jl
push
pop
mov
imul
scas
fwait
notb
cmpb
mov
sbbl
xchg
jmp
aaa
mov
decl
data16
jmp
hlt
mov
or
push
mov
mov
xchg
rorl
jne
stos
cltd
sub
cli
out
cmp
inc
dec
ss
add
cs
fldcw
idivb
xor
adc
add
and
jle
stos
jo
adc
popf
lret
dec
dec
cmp
aam
mov
sub
mov
sub
addr16
push
sarl
clc
loopne
inc
dec
jmp
and
mov
cmpsl
fdivl
test
out
xor
dec
jp
cmp
adc
shlb
dec
or
pop
xchg
pushf
into
ds
notb
sti
pushf
fidivrs
scas
mov
aad
sub
aam
sub
in
repz
sub
push
out
jbe
push
or
inc
sub
inc
and
pop
or
add
sbb
movsb
jecxz
lahf
ds
pop
add
mov
or
sbb
xchg
xor
adc
inc
testb
test
int3
stos
in
sub
mov
dec
std
cmpsl
adc
sbb
pop
jge
iret
push
daa
pop
jle
sbb
fdivs
mov
fisubrl
mov
popa
mov
out
iret
mov
push
sti
std
lea
sbb
push
cltd
mov
stos
sbb
aaa
lcall
pop
dec
fstl
and
addr16
insl
fdivrp
stos
xchg
cld
or
mov
lahf
cmpsl
inc
ss
imul
jmp
lcall
and
or
xorb
mov
fdivrs
and
inc
xor
xchg
pushf
fildll
cmp
arpl
jg
mov
or
push
popa
mov
das
enter
dec
lock
push
push
outsb
sbb
arpl
xchg
dec
mov
out
lea
push
cmpsl
imul
inc
call
aad
and
jecxz
and
pusha
sub
mov
sbb
pop
pop
jg
out
fcomi
add
mov
pop
int3
hlt
sbb
mov
sbb
or
pop
sahf
jns
xor
adc
ljmp
xor
inc
adc
push
mov
sbb
orl
popf
xchg
pop
cmpsl
xchg
jmp
or
notl
mov
mov
sbb
scas
mov
push
lret
enter
and
bnd
sbb
mov
mov
add
jbe
lds
mov
and
xchg
pop
mov
dec
movsl
sbb
nop
scas
js
fdivl
ss
lret
mov
int
out
pop
mov
clc
lock
add
vunpcklps
pop
push
push
mov
outsl
scas
mov
repz
mov
push
push
fcom
cmpsb
in
filds
mov
sti
push
or
pushf
or
pusha
divl
and
jnp
sub
add
xor
adc
sbb
inc
stos
scas
stos
dec
jp
cmc
push
pop
xchg
mov
xchg
aam
jbe
and
and
push
push
cmp
add
xor
cltd
sub
movsb
in
das
xor
js
sbb
cwtl
push
pop
fistpl
pop
arpl
mov
insb
dec
xor
jne
lds
pop
dec
mov
aad
sbb
inc
sub
movsb
mov
mov
loop
pushl
rcrb
pop
mov
sub
int
je
sbb
shrb
or
pop
push
cmpl
mov
xchg
testl
cmpsb
inc
aam
scas
add
mov
stos
jl
lret
cltd
sar
insb
dec
inc
fidivrs
fists
lock
jg
add
inc
mov
push
cmp
pop
sub
popf
sub
jmp
mov
movsb
popf
leave
int
loopne
xlat
ret
loopne
fisttpll
insb
mov
pop
inc
cld
ret
add
xchg
xchg
and
in
cmc
and
push
lahf
sub
nop
int
icebp
and
ds
test
inc
jge
sahf
push
enter
outsl
or
mov
stc
jne
mov
jle
ds
or
add
adc
add
and
stos
mov
and
popf
dec
out
add
mov
xor
jno
jecxz
idiv
xchg
repnz
les
clc
ja
cli
inc
nop
jl
pop
mov
lahf
daa
cmc
cmp
das
shrb
cmp
xor
add
mov
mov
inc
jns
jmp
fisttps
rcl
jne
jb
shll
jne
mov
ds
int3
int
ss
jl
sbb
in
into
call
mov
lods
add
sbb
or
pushw
and
std
fldt
test
jb
loope
mov
iret
jg
push
fsubr
stc
pushf
loope
mov
ljmp
jg
fisubl
lret
push
cmp
adc
sbb
or
sub
pop
inc
xor
mov
fadds
andl
pop
mov
mov
insl
lahf
scas
dec
jbe
cmp
mov
jl
push
and
cmp
cs
dec
cmpsb
inc
fdiv
dec
xor
mov
pop
ret
shll
rcrl
mov
fdivs
mov
ret
pop
dec
loopne
mov
fs
jns
ret
ret
nop
ret
pop
aad
push
movsl
fsubp
in
addr16
bound
jno
out
cmpl
iret
adcl
addr16
lcall
lahf
mov
std
test
jae
mov
call
les
sub
jmp
ljmp
add
xchg
nop
mov
add
mov
sti
lret
and
sbb
mov
fs
mov
cli
mov
decb
loop
sbb
mov
sub
inc
adcb
push
sahf
sbb
xor
mov
enter
adc
outsl
adc
push
lahf
stos
pop
insl
sub
mov
mov
lret
test
and
scas
mov
es
dec
lcall
addr16
mov
cmp
pop
pop
lds
addr16
push
pop
jo
fisubs
sbb
cmp
xchg
cltd
dec
rcrb
mull
mov
out
mov
push
jnp
hlt
pop
dec
int
dec
xchg
push
fabs
fists
sub
icebp
jne
dec
jg
jnp
or
insb
pop
movsb
xchg
or
out
mov
mov
xorl
adc
push
popa
fs
add
jp
loope
pop
dec
jmp
xchg
xchg
hlt
add
fdivrp
jo
es
inc
jo
adc
mov
and
push
sub
pushf
mov
jp,pt
ss
rcll
lret
sbb
in
lahf
pusha
in
push
sub
xor
or
adc
sahf
ficompl
xor
and
cs
aaa
dec
lret
in
push
push
dec
or
call
dec
inc
jle
mov
js
pop
adc
les
cmc
sbb
rcll
xor
fst
cmp
scas
push
cmp
enter
push
dec
push
inc
sahf
arpl
push
lock
pop
sbb
mov
ljmp
mov
lds
mov
pop
data16
imul
push
loope
hlt
ljmpw
imul
xchg
in
loopne
pop
js
mov
movsl
mov
mov
divb
shrb
xorb
xchg
sub
pushf
iret
cmc
icebp
and
call
or
mov
jnp
cli
sbb
xchg
inc
and
sbb
ss
xor
inc
mov
jae
clc
or
fdivl
xchg
cmp
lock
leavew
push
mov
mov
aad
aad
out
pusha
pop
sbb
test
mov
and
negl
push
xor
dec
mov
dec
mov
xor
mov
hlt
mov
xor
jne
pushw
jecxz
frstor
clc
icebp
lahf
dec
lods
xchg
sbb
mov
mov
cmp
mov
sbb
aam
aam
inc
or
jb
shll
or
sub
test
orl
pushf
mov
push
sub
fmul
faddl
and
outsb
frstor
lods
add
inc
outsb
xchg
mov
imul
aas
incl
mov
fwait
xor
loop
push
mov
pop
das
sub
rcrb
mov
xor
dec
ja
in
xchg
and
and
bound
aad
mov
sbb
xor
movsl
lea
or
inc
lcall
leave
aam
mov
outsl
shrl
out
push
imul
push
lret
jns
lock
mov
mov
negl
adc
in
dec
mov
hlt
cld
mov
mov
stos
push
ret
push
or
jl
ja
icebp
cmp
test
cli
sti
outsl
cmp
ljmp
add
cwtl
testb
sbbl
xchg
pop
das
pop
push
in
popa
add
push
cli
adc
pop
jge
push
xchg
imul
int3
jle
stos
cmp
push
mov
xchg
push
cltd
and
shll
cmc
dec
fisubl
pavgb
inc
xchg
sub
mov
jbe
xorb
xchg
rolb
fwait
lahf
xchg
movsb
movsb
sbb
lods
test
imul
or
rorl
fdivrl
mov
xchg
stos
std
out
push
cmp
jne
xchg
add
sbb
adc
mov
mov
xor
shll
dec
lods
cmpsb
aaa
push
sbb
sbb
mov
push
icebp
sub
popa
cli
xchg
add
sub
or
mov
push
movsl
inc
nop
pop
adc
fsubrs
arpl
xor
in
cmp
outsb
mov
dec
filds
push
rcrb
imul
jl
inc
test
adc
mov
stos
mov
adc
orl
shl
imul
mov
paddw
insb
scas
test
lea
lcall
push
js
or
shrd
pop
mov
and
enter
rolb
mov
mov
aam
sbbl
mov
lahf
jge
mov
dec
xchg
sub
xchg
pushf
pop
sbb
sub
cmp
jne
pop
mov
or
ss
push
aam
and
out
cmp
lock
test
xor
add
sbb
movsl
fs
outsb
mov
inc
xor
cmp
test
je
enter
daa
dec
or
fcoms
aam
sahf
sti
and
ljmp
inc
adcl
mov
in
xor
lods
cmp
mov
js
xchg
mov
cmp
lret
outsb
push
hlt
push
jne
inc
popa
inc
sub
jne
cmp
adcb
xchg
xchg
fldl
sahf
pop
cmpsl
jge
adc
loopne
je
dec
mov
scas
shrl
dec
jne
cmp
stos
pop
arpl
mov
dec
orb
sti
xchg
scas
sub
fnsave
dec
mov
mov
push
fmull
fisubl
and
ds
in
cltd
leave
adc
adc
out
or
dec
test
push
cmpsl
ss
ficompl
imull
int3
mov
xchg
aad
scas
mov
sub
iret
jbe
cs
sar
fisttpll
or
xor
pop
or
sub
popa
iret
cmp
jmp
inc
xchg
ss
in
mov
push
dec
stc
pusha
mov
gs
repz
out
mov
inc
jae
into
sarl
and
push
sub
jae
xor
jmp
cmp
fcom
jle
xchg
popa
lret
pop
inc
jmp
arpl
ja
insb
test
lods
jne
cmc
jle
pop
inc
mov
outsl
xlat
lcall
outsl
lods
insl
adc
rorb
cltd
push
jmp
mov
xchg
jnp
mulb
adc
add
repnz
inc
lcall
pushl
and
fldl
mov
mov
sub
cltd
mov
lock
lret
sub
cmpsl
xchg
ja
mov
les
mov
pop
test
les
mov
out
and
iret
int
sbb
cmp
addr16
lret
sti
dec
test
xchg
push
call
dec
sub
cmpsb
xlat
jae
adc
in
or
and
mov
pop
loopne
xor
mov
mov
lret
mov
decb
ljmp
mov
inc
and
xchg
in
in
sbb
xor
rdpmc
push
or
jno
or
cltd
push
fs
xor
outsb
call
lods
xor
inc
lods
jge
push
xchg
xchg
fcmovne
icebp
push
sub
mov
data16
in
sar
shlb
test
lea
adc
push
or
xor
loop
arpl
jnp
test
mov
shl
sub
dec
push
sub
and
adc
fwait
lea
cld
mov
inc
xchg
sbb
and
call
cs
adc
adc
dec
xlat
andb
inc
hlt
in
iret
add
fwait
push
cmc
or
fwait
movsl
cmc
stos
pusha
xor
mov
pop
sub
mov
mov
push
jecxz
mov
je
js
jne
pop
fwait
jle
out
cmp
int
ds
push
ficoms
repz
xchg
mov
bound
add
push
ljmp
imul
push
andb
lret
adcl
inc
test
jle
decl
and
stc
cmp
dec
stos
stos
out
orl
add
js
popf
ja
push
cmpsl
les
mov
xchg
jl
ret
adc
adc
ss
pop
lretw
jg
hlt
jo
stc
jp
mov
test
lea
movsl
xchg
or
popf
xlat
xchg
mov
and
add
les
cwtl
les
inc
xor
repz
loopne
push
jmp
loopne
pop
cld
dec
call
lock
out
adc
and
cmp
stos
sub
push
mov
fs
daa
dec
dec
xchg
loop
fxam
ja
loop
or
jmp
mov
ja
popa
mov
pop
adc
adc
mov
sbb
mov
sub
outsl
cmp
jl
test
sbb
dec
sbb
andl
push
scas
fs
stos
cli
insl
xchg
inc
inc
ja
aam
adc
fisttpll
jae
sub
push
push
jae
shl
and
pop
adc
into
movsl
popf
inc
lods
sti
call
push
or
sbbl
dec
pop
jo
loopne
jns
aaa
stos
addb
mov
cmc
mov
inc
sbb
mov
mov
mov
iret
lcall
sbb
pop
in
sti
out
xor
cmpl
enter
adc
notb
test
rcll
mov
mov
iret
insb
fdivrs
mov
scas
sti
add
or
and
std
jmp
loope
sub
sub
sbb
aaa
lds
pop
leave
cvttps2pi
cmc
mov
mov
jb
fcmovbe
add
sbb
neg
ret
mov
jge
decl
cmp
inc
xchg
sbb
imul
fcos
jne
mov
or
idivb
push
xchg
adc
adc
aaa
outsl
or
js
es
loopne
sbb
dec
gs
in
sbb
int3
or
mov
fiaddl
mov
push
pop
mov
pop
out
or
ficoms
and
lahf
jp
out
mov
xor
nop
or
mov
lods
popa
mov
inc
lods
mov
sti
sub
stos
mov
xlat
loopne
jmp
insl
jae
adc
jl
addr16
repz
fwait
cwtl
bound
das
stos
inc
dec
jp
outsl
jecxz
mov
dec
int
shrb
repz
mov
in
test
mov
or
popf
imul
test
add
pop
dec
sub
inc
and
leave
lahf
outsb
ja
ds
xchg
or
out
pop
mov
lock
aas
test
sbb
iret
sbb
sbb
push
stc
gs
cmc
xchg
mov
aam
std
inc
inc
jnp
dec
xor
xchg
push
mov
xor
jae
scas
bound
orl
mov
jo
push
stc
or
sub
sahf
xorb
xor
cmp
adcl
in
bound
lods
lods
push
jae
cli
pop
mov
outsb
nop
jb
fstpt
push
and
pop
call
mov
mov
jp
sahf
mov
iret
call
xchg
mov
enter
adc
mov
pop
imul
stos
je
lahf
idivb
clc
inc
xchg
lea
push
mov
mov
lods
mov
fstps
shrl
out
in
xchg
jl
inc
mov
mulb
pop
or
sub
repnz
ds
mov
aad
inc
sbb
stc
mov
pop
fmull
and
fdivrs
loop
push
movsl
sub
mov
js
xchg
lret
rclb
or
repz
push
daa
bound
out
cmp
jb
inc
outsl
pop
xchg
rclb
xor
pop
jl
fs
mov
inc
inc
test
xchg
jo
xchg
cmpsb
add
je
xor
mov
cmp
adc
stos
sahf
dec
pusha
aas
ljmp
subb
int3
jae
mov
jge
call
lods
cmp
negl
divl
fidivl
mov
push
dec
mov
jno
jecxz
push
fwait
in
iret
lahf
out
repz
mov
fcompl
leave
xchg
sub
pop
movsb
jmp
outsl
repz
les
rolb
mov
gs
ret
adc
jb
mov
clc
rclb
or
mov
das
sbb
sbb
lds
lret
movups
lcall
lret
xlat
mov
aam
and
ficoms
xchg
les
lock
push
cli
and
imul
mov
std
adc
ja
fbstp
cmp
add
jnp
ret
cs
pusha
mov
imul
aaa
jl
addb
sbb
and
stc
xor
adc
cmpsl
nop
inc
in
cmp
dec
cld
int
pop
stos
popa
jae
cli
hlt
mov
jne
jecxz
jle
jbe
xchg
or
nop
movsl
popf
xor
or
lods
mov
pop
mov
mov
mov
out
fprem
shrl
imul
push
in
fwait
xlat
in
pop
sub
outsl
orb
mov
xchg
movl
movsl
aad
in
test
das
mov
loop
lret
adc
inc
adc
fbld
cmc
out
dec
lret
cmp
add
pop
adc
cltd
jne
daa
cmp
add
pop
fwait
dec
cmp
mov
dec
in
sub
fbstp
ret
call
iret
imul
movsl
add
pop
icebp
or
cmp
test
or
shrb
ljmp
cmp
xchg
mov
pop
sub
dec
mov
dec
pop
in
xchg
popa
xchg
loop
push
jge
je
shll
mov
testl
cltd
scas
push
mov
sub
xor
fidivl
push
cwtl
pop
arpl
cmc
scas
arpl
sti
insb
aad
inc
jbe
outsl
xchg
jg
add
mov
xchg
and
fwait
mov
mov
scas
pop
jmp
mov
aas
lahf
rcrb
leave
imul
lret
fsubrl
xchg
leave
in
sub
out
pop
clc
xchg
adc
addl
inc
xchg
mov
pop
cmpsb
add
and
pop
in
ret
add
popf
push
push
aad
mov
out
mov
pop
jp
clc
lods
lds
fmuls
or
ss
pop
movsl
add
sub
xor
icebp
mov
mov
aad
xchg
sbb
dec
push
cmpsl
imul
sar
jmp
lret
ret
stos
dec
loop
or
sub
sbb
adc
and
or
cmpsb
xor
mov
inc
mov
dec
xchg
sarb
outsl
push
data16
arpl
xchg
xchg
fwait
and
pop
dec
sub
daa
xor
dec
add
icebp
lahf
pop
xchg
jge
adc
cmp
cmpsl
xorb
into
sbbb
push
mov
bound
sub
clc
movsl
mov
inc
scas
ljmp
shrl
jno
push
xchg
mov
out
mov
pushf
stc
ret
add
xor
and
jle
iret
popa
lret
out
adc
test
ret
sbb
inc
int
xchg
mov
cwtl
xor
filds
mov
outsb
repnz
sti
adc
add
jae
cwtl
pop
push
add
and
cwtl
xor
andb
cmp
push
adc
stos
pop
dec
insb
cmpsb
pop
lret
int3
lock
imul
aaa
push
aam
data16
pop
push
jp
adc
mov
fs
and
cmp
inc
lds
xor
js
out
ffreep
pop
cmp
or
sti
xchg
mov
jg
xchg
mov
adc
fwait
cmp
data16
push
scas
mov
mov
inc
dec
jno
nop
push
loopne
fcompl
sub
stos
je
in
mov
subb
sahf
xchg
imul
cmpsl
jns
mov
ror
mov
mull
addl
fsubp
lods
inc
call
pop
sahf
fdivr
into
sub
or
fcomi
push
mov
pop
adc
mov
es
jl
aad
leave
xlat
mov
adc
xor
ljmp
repz
inc
int3
ds
adc
movq
aam
dec
mov
and
mov
xor
adc
ds
pushf
dec
inc
stc
xor
pop
xlat
pop
sub
in
and
vpavgw
adc
add
or
cmpsl
adc
sahf
out
sbb
sub
test
sbb
inc
imul
jo
pop
test
xchg
xchg
outsb
xchg
fidivs
jnp
adcl
inc
or
cmpsb
mov
mov
aaa
inc
scas
call
int
insb
nopl
cmpsb
sub
mov
inc
xorl
mov
inc
fistl
inc
jbe
test
add
mov
loopne
lahf
int
adc
pop
test
jg
pushf
ror
repnz
adc
add
jns
notl
call
adc
xlat
mov
jmp
mov
xchg
and
fnop
dec
push
loop
call
out
in
into
das
decb
pop
sub
lds
or
and
mov
sub
inc
hlt
xor
out
mov
rcl
les
pop
add
imul
add
outsl
imul
ficoms
sbb
mov
ret
lods
or
inc
dec
xlat
movsl
dec
ja
icebp
push
cmp
xchg
xchg
and
outsl
repz
jns
or
mov
mov
and
xchg
outsl
leave
dec
sahf
into
gs
cmpsl
sub
dec
sub
lcall
push
clc
lcall
inc
ret
in
jno
sbb
jnp
test
test
int3
lea
fstl
xchg
mov
pop
scas
test
mov
jns
vmovups
into
fldt
jo
cmp
mov
hlt
push
mov
sahf
push
mov
jmp
sbb
mov
xchg
xor
iret
es
scas
mov
rorb
fmuls
in
jp
and
test
divb
adc
test
and
inc
out
les
jl
add
dec
xor
push
sub
pop
lahf
test
outsb
pop
outsb
js,pt
testb
lcall
sbb
xchg
loope
das
push
cmp
jne
xchg
inc
mov
loop
and
sub
pop
loope
les
scas
or
or
out
xchg
mov
mov
xchg
mov
pop
addr16
movb
int
popf
inc
push
and
xchg
pusha
rol
fisubrs
dec
sub
stos
je
loopne
rolb
insl
push
cwtl
mov
xchg
ljmp
js
mov
sbb
fnstenv
lods
loop
arpl
jmp
mov
mov
push
in
pop
ret
adc
xchg
mov
lods
lods
lea
mov
pushf
mov
push
xor
sbb
jle
dec
jae
in
call
es
pusha
testl
hlt
or
aas
adc
mov
inc
xlat
and
pusha
sub
pushl
add
jge
dec
push
in
ja
pop
pop
adc
lretw
jo
stc
jp
pop
xchg
add
pop
adc
mov
movsl
push
in
lock
xor
xor
arpl
inc
push
out
push
dec
scas
mov
push
adc
add
cmp
jb
cltd
xchg
jnp
xor
test
mov
ja
xchg
ret
orb
xchg
movsb
mov
rorb
sbb
mov
popa
fists
imul
je
ss
int3
sar
xchg
clc
nop
cltd
flds
daa
lods
aaa
jp
mov
pop
mov
enter
rcll
enter
arpl
jecxz
out
xor
xor
testb
pop
or
bound
std
xchg
lods
sbb
stc
and
mov
lea
out
and
push
fisubrl
inc
addr16
out
lea
mov
pushf
clc
add
and
xor
shrb
sbb
lods
pop
pop
xor
stos
cmp
filds
sbb
push
cwtl
add
pop
mull
imul
mov
hlt
and
test
dec
or
adc
loope
jo
sub
xor
push
ret
cmp
icebp
push
inc
mov
dec
cmp
cmpsl
push
ljmp
push
lcall
cmpsb
rcrl
push
dec
addr16
in
mov
xchg
jae
mov
add
mov
cmc
loopne
aas
sbb
lea
or
fstl
lcall
jle
pop
cmp
xchg
xchg
lcall
arpl
adc
inc
leave
push
lret
das
push
fstp
push
lock
out
in
xlat
mov
add
std
push
or
cltd
lahf
adc
mov
jle
mov
leave
cmp
inc
adc
lret
ret
aam
hlt
neg
orb
lock
jne
stc
insl
adc
add
pushf
insl
or
aaa
mov
pop
ficompl
sub
fwait
xor
loopne
inc
imul
pop
push
and
adc
sub
cmpsl
jb
adc
jnp
mov
mov
dec
jno
and
imulb
stos
pop
mov
dec
out
cmp
je
inc
test
cwtl
dec
lods
jecxz
push
xor
bound
sub
je
mov
pop
xchg
mov
cltd
filds
cmp
dec
xchg
xchg
nop
sbb
enter
sarl
roll
push
addr16
insl
int3
fbstp
pusha
sub
rorl
or
cmp
mov
and
shrl
into
rorl
jae
out
or
clc
icebp
inc
add
nop
or
mov
jb
mov
cmp
push
ret
mov
sti
out
popf
xor
or
sub
jns
icebp
lcall
add
daa
stos
or
daa
push
inc
and
mov
in
fdivs
xor
and
arpl
repnz
pop
mov
dec
popa
pop
mov
push
sbb
jae
scas
xor
xor
mov
cltd
imul
cmpsb
sub
jmp
cmp
adc
cmpsl
aam
cmpl
arpl
push
mov
mov
dec
dec
jg
aam
mov
loopne
sbb
sub
movsb
jp
ret
lods
pop
mov
mov
adc
xchg
out
rol
fidivrs
fcoml
shr
rcrb
mov
adcw
xchg
outsb
lods
inc
popf
sbb
xchg
fsubrl
sub
ror
jmp
push
fiadds
lahf
out
addr16
addb
and
arpl
lock
xor
int
cmp
push
mov
fmul
fimull
jno
js
mov
repz
push
cld
movsl
and
push
push
pop
xor
mov
jl
adc
sub
adc
and
iret
icebp
stos
inc
jle
testb
aas
pop
int3
scas
mov
inc
aad
sub
insl
jle
ret
mov
xchg
sti
dec
lcall
jecxz
jecxz
cs
aas
popa
xchg
les
aaa
adc
int
pop
cs
cmpsl
fs
repnz
mov
into
xchg
sbb
pushf
pop
and
scas
push
sbb
xor
xchg
rcll
sub
push
insb
jne
add
shl
push
or
stc
or
add
aaa
xchg
or
sbbl
sbb
mov
mov
add
jnp
ret
call
call
mov
jno
pop
bsr
mov
push
mov
int
and
xor
pop
jg
test
xchg
fdivs
xor
inc
hlt
rcrb
std
xor
and
nop
jmp
mov
sub
addr16
xor
jmp
out
stos
and
jnp
call
rcll
insl
cmp
add
push
cmc
mov
aas
xchg
and
aam
xorb
out
or
sahf
lea
dec
cld
dec
push
fistpl
pop
lcall
outsl
fcomp
ja
inc
pusha
ret
adcl
xchg
pop
xchg
push
push
cmpsb
popf
xor
cmp
mov
lahf
ret
into
imul
lods
cmp
lret
out
icebp
or
cli
mov
cmpsb
sub
mov
or
mov
shr
les
cmp
loopne
test
dec
iret
loopne
and
ljmp
scas
cld
mov
inc
inc
punpckhdq
xchg
sbb
repnz
sub
jae
fnstsw
inc
xchg
adc
repz
pop
mov
shll
scas
scas
lret
decb
adc
or
js
sbb
cmc
and
gs
sub
pop
jg
aas
daa
dec
mov
push
gs
mov
gs
dec
outsb
push
lret
cltd
ja
dec
out
mov
xor
ds
adc
pop
xchg
cmpsl
cmp
sbb
inc
cltd
mov
dec
or
push
xlat
pop
mov
and
shrl
hlt
push
incl
mov
xchg
xchg
pusha
scas
loop
ds
mov
les
lret
gs
int
cli
mov
fistpll
xchg
cmpsb
std
sar
inc
xchg
sbb
gs
xchg
xor
mov
adc
mov
int
mov
sbb
xchg
rcr
sbb
sub
hlt
call
cs
xchg
roll
sbb
sbb
mov
fs
jmp
clc
ds
dec
jo
mov
aaa
ficompl
shlb
insb
and
mov
add
push
or
jae
adc
sti
out
xchg
jge
lds
push
inc
adc
lods
push
jno
hlt
pop
and
inc
mov
push
js
sbbb
mov
pushf
add
leave
cs
cmpsl
cwtl
xchg
cwtl
mov
es
mov
inc
mov
jp
xchg
call
adc
std
pop
push
push
jmp
jp
jg
test
and
lea
rclb
cmp
push
dec
cmp
mov
addr16
into
push
test
xlat
and
jae
ljmp
push
std
rcrl
movsb
punpcklbw
cwtl
cmp
jl
into
mov
pop
sbb
test
sbb
fsts
dec
jecxz
adc
in
adc
sub
jmp
mov
mov
sbb
jle
and
jecxz
sub
cs
xor
in
lea
push
sub
arpl
mov
out
inc
inc
stc
mul
leave
inc
add
push
fsts
aam
and
xor
pop
cmp
lahf
push
inc
aas
inc
popf
dec
push
xlat
call
pop
dec
in
jl
sbb
jo
fistl
jp
outsb
pop
cmpl
stos
mov
sub
push
mov
aad
xor
imul
dec
xor
push
out
clc
dec
pusha
push
bound
jb
jp
jl
or
ret
mov
inc
sets
iret
pop
mov
out
repnz
dec
cmp
and
iret
xchg
or
loop
add
hlt
sbb
cmp
push
loope
cld
fldt
lcall
shrb
push
mov
xor
test
test
inc
mov
sbb
nop
mov
add
scas
or
cmc
sti
adc
or
cs
add
cmp
jno
or
mov
push
inc
inc
push
pop
fistpl
outsl
test
xor
add
xchg
adc
push
fildll
divl
or
sub
inc
dec
rcr
dec
sbb
push
stc
out
pop
pop
push
mov
jb
push
fwait
test
lahf
out
mov
mov
leave
test
iret
aaa
pop
mov
mov
cli
aas
pop
jnp
mov
lock
jmp
pop
push
cmpsl
lcall
jne
dec
cltd
in
cwtl
mov
adcb
loope
jns
pusha
add
sar
cwtl
pop
fisubrl
movsb
jecxz
out
in
sub
cmp
jp
xchg
fsts
or
in
adc
clc
mov
movsl
fs
lods
push
icebp
inc
mov
jbe
shlb
sub
adc
fsubrl
xor
push
clc
lods
inc
mov
or
jg
adc
or
sbb
or
sbb
out
cmp
scas
inc
inc
ret
stc
dec
mov
inc
push
arpl
pop
inc
inc
fsubl
into
daa
jno
pop
jb
pop
out
add
xchg
push
or
or
pushf
pop
fistl
call
xor
sub
inc
xlat
fs
dec
xchg
popa
push
mov
stos
pusha
fs
imul
mov
test
mov
mov
stos
cmp
dec
mov
int3
cltd
mov
dec
std
das
shrb
jl
push
enter
adc
pop
jne
xchg
cmpsb
jle
inc
xacquire
pop
mov
mov
fsubrs
jge
mov
in
adc
leave
cmp
xchg
mov
in
sbb
out
mov
js
xor
push
loope
or
outsb
pop
adc
sbb
xchg
and
jo
test
fidivs
push
fucomp
das
out
mov
xchg
stc
enter
test
sub
pcmpeqw
jne
or
and
push
xor
sbb
inc
popa
push
ss
and
adcb
int3
pop
pop
rcrb
imul
jmp
jnp
jbe
add
sbb
push
mov
xor
and
and
jbe
jo
and
pop
or
jmp
dec
xor
pop
push
add
xor
jl
dec
test
jge
das
adc
nop
imul
or
mulb
mov
mov
data16
enter
roll
mov
fs
dec
insl
inc
xchg
lcall
shrl
mov
pop
jns
lods
ljmp
pop
fistpl
push
repnz
lret
xchg
mov
sbb
out
shll
mov
xchg
movb
xor
or
std
xchg
adc
sbb
das
out
sub
fidivrs
xor
xchg
or
ljmp
aad
push
out
mov
xor
fmul
cli
in
sbb
or
inc
xchg
mov
and
std
pop
loope
dec
sub
xchg
xor
test
cmp
fidivl
cmp
mov
popa
jp
push
push
in
mov
jl
pop
aaa
xchg
stos
jg
adc
lds
sub
mov
xor
inc
stc
cmp
push
mov
xchg
and
sti
outsb
insb
lret
xchg
jg
rclb
dec
popf
xchg
daa
xlat
out
xchg
xor
push
mov
in
rolb
pop
leave
inc
sbb
cmovno
cltd
mov
sub
ja
mov
cmpl
mov
cmp
popf
call
imul
ret
jnp
push
mov
aam
inc
pmaxub
cmp
stc
sahf
push
cmp
or
test
adc
dec
jg
sub
or
mov
test
int
push
loope
test
sub
add
jmp
mov
or
mov
pop
push
mov
and
push
test
pop
cmpsb
iret
xor
xor
cmp
leave
imul
cmpsl
addb
jmp
fnsave
sub
scas
jae
adc
mov
sbb
cs
and
popf
sub
inc
jmp
aas
mov
dec
stos
or
push
or
pop
fs
pop
divb
mov
mov
ret
popa
and
add
outsl
movsl
jno
mov
mov
jle
lcall
xor
fstpl
sub
outsl
test
inc
pop
addb
cmpsl
mov
add
sahf
adc
mov
jb
and
mov
mov
pop
inc
add
cs
dec
cmp
call
or
sti
ljmp
or
mov
or
out
xor
and
cmp
iret
test
bound
into
shl
sbb
loope
fnstenv
repz
fwait
xchg
push
cld
sub
pand
and
ss
xchg
mov
mov
push
xchg
xorb
shr
andl
add
jbe
fs
cmp
mov
push
inc
sbb
and
inc
fisubrl
test
or
push
cmpsb
and
mov
ret
mov
jle
sbb
push
xchg
aas
out
pusha
popf
sahf
pop
lods
cmpsb
std
out
scas
pop
jo
mov
push
lret
sbb
outsb
fidivs
mov
icebp
aad
push
jp
in
cwtl
xorl
in
loop
das
xchg
jno
jp
and
lds
mov
pop
mov
int3
inc
hlt
int
sarl
sbb
loopne
enter
push
push
repz
loope
cld
push
mov
pcmpgtw
cwtl
and
and
xor
scas
jbe
mov
out
rcr
jo
fnstcw
lock
icebp
cmp
jns
test
sub
iret
pop
pop
mov
adc
sbb
and
sub
rorl
dec
xchg
aas
push
clc
fmull
subl
push
adc
outsl
jp
fs
add
push
ja
cmp
mov
xor
pushf
or
and
out
bound
inc
or
dec
repz
inc
lods
nop
pop
mov
fldenv
mov
outsl
jns
fdivrl
mov
xchg
sub
fucompp
call
mov
jl
xlat
stos
enter
adc
xor
dec
stos
fbld
inc
inc
repnz
mov
jns
test
and
sti
mov
insb
xchg
stos
fistl
dec
mov
popf
lcall
aad
iret
pop
jns
inc
lret
and
loope
hlt
push
insb
cmpsl
std
and
repz
xchg
mov
mov
inc
lcall
jle
push
ds
incb
jae
push
ljmp
jecxz
cmc
sub
testb
call
or
push
adc
int
sbb
cmp
and
les
xor
aaa
iret
sti
rolb
xchg
dec
dec
adc
mov
pop
sti
gs
js
leave
fldl
push
loope
xchg
inc
imul
add
xor
sahf
cmp
cwtl
jmp
and
adcl
cmpsb
adc
jno
mov
testl
push
ljmp
mov
jno
mov
lds
dec
fwait
xlat
adc
xor
dec
iret
jge
sub
pop
adc
cli
sbb
repz
pop
lahf
mov
and
adc
insl
shl
in
mov
push
pop
add
and
dec
in
add
cmc
pop
sbb
movsl
das
or
xor
int
lds
cld
daa
adc
mov
sub
stc
jmp
cmp
incl
fcmovnb
negb
out
orb
add
inc
dec
or
pop
loopne
push
lds
es
ja
in
fadd
cmp
or
dec
jmp
or
pop
xchg
aaa
addr16
and
les
xorl
mov
fyl2xp1
sahf
inc
fs
test
add
cmp
mov
mov
pusha
pop
aas
push
imul
push
xor
mov
int3
xchg
arpl
mov
shll
mov
out
inc
mov
pop
xlat
xlat
fmuls
loop
loopne
jmp
jne
hlt
dec
jmp
dec
pop
test
lcall
sbb
mov
adc
mov
mov
pop
enter
sar
js
fcmovu
in
cmp
in
mov
mov
add
mov
adc
add
mov
xchg
cs
loope
xchg
pop
sub
inc
out
ja
xchg
test
push
mov
minps
pop
out
and
clc
cmp
mov
rclb
leave
sbb
stos
pop
push
xor
sti
dec
inc
ss
xchg
dec
test
sub
je,pn
mov
push
or
pusha
int3
push
test
cmc
ljmp
incb
mov
daa
sbb
pushf
fs
js
mov
aaa
vxorps
cmp
jne
mov
arpl
jae
xlat
and
xchg
insl
jo
xor
mov
cltd
scas
or
lahf
sahf
stos
or
test
jle
or
enter
adc
push
jo
in
xchg
add
inc
call
push
mov
movsb
mov
and
rolb
lahf
aam
mov
dec
push
sarb
leave
sub
out
pop
out
fdivrl
jp
cmp
vaddss
pop
add
test
push
inc
repz
push
mov
mov
shrb
adc
push
cmp
jg
dec
add
add
mov
sbb
loop
pop
inc
sub
jecxz
jbe
das
dec
rorl
or
in
pop
pop
dec
in
movsb
sub
idivl
cmp
xchg
iret
dec
or
gs
cmp
std
jb
enter
pop
xchg
test
icebp
fimuls
insl
clc
jb
testb
mov
xchg
push
mov
ret
ja
aaa
pop
push
leave
andb
lret
imul
popa
jle
std
lods
xchg
nop
stc
nop
outsb
and
lcall
fldt
cmp
mov
mov
shr
push
fisttpl
popf
in
add
in
js
xor
aad
jg
adc
adc
cmp
hlt
scas
sti
fs
mov
loope
xlat
lret
and
cmc
jbe
fstpl
or
out
mov
dec
stc
daa
stos
cltd
add
aas
in
push
aad
adc
into
fadd
daa
sub
in
cmp
jp
inc
adc
icebp
dec
lea
pop
and
inc
pop
repnz
jno
mov
jge
std
or
cmp
xchg
and
jle
sub
mov
xor
ret
inc
dec
mov
dec
fwait
inc
push
pop
scas
test
popa
mov
push
lret
mov
jle
jmp
xchg
jg
nop
out
cmpsb
cltd
mov
out
mov
repz
mov
sub
mov
lock
imul
pop
jmp
lock
insl
int3
adcl
sub
jbe
pop
xchg
adc
mov
xorl
pop
pop
lret
popa
roll
lods
fdivl
loope
pop
xchg
sub
stc
aad
ret
add
ret
outsl
adc
aaa
mov
cmpsl
push
aad
mov
xlat
call
aad
pop
stos
fidivs
xor
jle
mov
icebp
cmp
add
and
jmp
mov
sub
add
je
cmp
add
sahf
xor
adc
leave
popa
jmp
rcrb
lahf
inc
test
add
insb
subps
mov
or
and
push
and
popa
mov
mov
inc
lcall
pop
clc
dec
fisubs
fildll
insb
outsl
jbe
aad
sarl
or
adc
pop
xchg
xacquire
mov
mov
mov
mov
int3
loop
push
stos
push
mov
push
sti
fnstcw
test
nop
ja
mov
and
es
mov
xchg
and
mov
cmpsb
loop
push
scas
xchg
les
shrl
lret
sahf
jle
aam
repz
fnstsw
out
and
ficoml
clc
add
dec
mov
mov
and
push
icebp
insl
mov
mov
testb
mov
pushf
pop
cwtl
in
dec
sub
jp
sub
sti
mov
adc
cmp
test
and
std
aas
sub
mov
cmpsb
add
cmp
xchg
push
inc
xor
ret
movsb
mov
jb
add
int
imul
cwtl
je
shl
jge
addr16
fldl
ja
jl
ret
or
and
cltd
pop
sub
das
cmpsb
xor
and
cmp
xchg
pop
or
cwtl
push
pop
int3
sub
jmp
ljmp
orb
xchg
xchg
push
push
call
movsl
insb
and
mov
or
stos
fcoml
fdivs
in
pop
xchg
aaa
data16
adc
repnz
sbb
adcb
add
cmp
cli
popf
das
push
stc
out
std
loope
mov
push
fdivrl
fwait
jns
int3
dec
push
mov
fisttps
sbb
pop
mov
icebp
jbe
jmp
xchg
mov
add
xor
fiadds
in
pop
sub
jge
mov
icebp
idivb
in
pop
into
dec
mov
xlat
lea
and
cli
mov
ljmp
add
mov
out
fs
xchg
es
sbb
xor
test
lds
xchg
adc
xchg
daa
pop
inc
inc
mov
xor
sbb
inc
mov
nop
stos
dec
push
into
mov
mov
mov
xchg
dec
and
sub
hlt
jne
das
inc
mov
pop
rcll
nop
pop
inc
gs
gs
jmp
ja
xchg
mov
mov
rcll
xor
sbb
add
cmpsb
push
inc
sti
mov
test
dec
nop
cld
sbb
fiadds
jne
xchg
or
stos
push
add
mov
xchg
pop
inc
aaa
pop
movsl
fiaddl
mov
out
cmp
shrd
xor
adc
inc
loopne
test
jmp
push
mov
cld
jno
jno
rcr
mov
sbb
push
and
jns
sub
out
cmpsb
xchg
mov
push
lods
leave
iret
int3
sub
loop
cmp
hlt
push
inc
ret
fwait
ljmp
mov
and
and
and
sahf
test
mov
dec
aas
loope
sbb
dec
jecxz
sbb
mov
rcrb
fs
dec
outsb
shlb
or
loopne
into
xchg
adc
or
push
shrl
sbb
mov
inc
incl
dec
not
std
push
aas
insl
int
xor
xchg
divw
adc
sub
xor
ret
test
lock
gs
push
xchg
mov
add
std
iret
int3
add
mov
xchg
mov
sbb
sahf
inc
jnp
cmp
fildl
xchg
clc
aam
mov
mov
or
test
sahf
jmp
fcoms
ss
ljmp
std
or
imul
int3
filds
cmp
and
andl
cmpsl
stos
mov
shll
lcall
push
xor
pusha
fistpll
pop
jl
or
test
sub
cmpsb
cmc
sub
cmp
aam
js
pop
push
pop
dec
insb
pop
imul
mov
gs
outsl
push
repz
js
adcb
push
xchg
sub
sbb
outsb
inc
adc
ffree
pop
cmp
icebp
dec
ljmp
pop
sub
sbb
out
push
add
decb
mov
fisubrs
lahf
pop
je
fdivrp
mov
into
pushf
add
dec
mov
jmp
pop
sub
int3
test
push
sbb
mov
mov
and
sti
stos
push
jno
mov
std
xchg
mov
daa
es
mov
mov
in
sti
inc
push
cmc
dec
into
sahf
test
divl
adc
jle
or
and
adc
and
sahf
lods
aas
cmpl
dec
and
inc
shl
cmp
fstpt
in
gs
in
loope
idivl
add
add
adc
test
xor
mov
jp
es
movb
adc
push
pop
push
xor
test
adc
xchg
pop
aas
jo
orl
sahf
movsl
push
mov
push
fsubrl
add
mov
dec
xor
dec
cwtl
cmp
jmp
cs
push
icebp
jbe
test
pop
xor
or
jb
sbb
test
cmp
dec
dec
shlb
or
data16
in
mov
jp
cld
lds
adc
xchg
fcoms
mov
jmp
xor
in
mov
xchg
push
nop
icebp
pop
mov
mov
incb
xorl
sub
enter
shrl
lods
fcmove
enter
je
in
xchg
nop
divb
lds
or
cli
mov
and
inc
mov
jmp
dec
ds
in
lret
lret
imul
out
stc
jno
clc
cwtl
pop
cmc
add
inc
or
jge
push
and
lds
sarl
mov
push
add
arpl
lock
push
pop
insb
in
or
push
insb
or
jp
cmpsb
je
mov
icebp
lahf
pop
sarb
inc
inc
rdpmc
aad
cmp
js
inc
inc
add
call
push
jmp
mov
xchg
jno
lods
loope
int
sub
lea
ret
cwtl
sahf
in
mov
int3
lock
mov
or
rcr
push
mov
addr16
mov
scas
cmc
int3
pop
sti
aad
inc
xchg
xchg
xchg
xor
fcompl
jns
jne
mov
es
mov
push
leave
cltd
das
lahf
rolb
push
xor
out
dec
pop
int
sub
pop
add
imul
outsb
mov
sbb
daa
inc
fcomps
fnstcw
es
push
outsl
dec
pop
iret
mov
fidivs
insl
fwait
lock
in
mov
xor
xchg
in
mov
lahf
leave
adc
mov
imul
pop
je
les
xrelease
outsb
aad
imul
imul
and
cld
popf
aaa
dec
test
popa
or
aad
mov
jecxz
repz
imul
rolb
pop
xchg
adc
iret
sbb
lock
fisttpll
jmp
scas
shll
jae
pop
or
insb
bnd
xchg
push
jne
sub
push
inc
xchg
js
push
sti
push
lods
inc
xor
je
je
bswap
jmp
dec
dec
pop
xorb
mov
pop
in
shlb
enter
adc
in
fdivl
cmp
xor
inc
bound
mov
psubw
push
jle
insl
daa
mov
pop
xlat
push
sbbb
or
mov
test
popa
sub
popf
mov
out
xchg
or
andl
negl
imul
mov
in
mov
xchg
mov
fcmovnbe
rclb
or
fimuls
and
in
leave
in
pop
pop
test
add
pop
xchg
or
cwtl
rcrb
push
fcmovbe
das
shll
dec
imul
arpl
dec
push
push
lds
loop
into
fs
inc
mov
fsubrs
pop
mov
pop
lock
mov
sti
cmc
cmp
mov
cmp
adc
inc
andb
inc
scas
sub
jb
je
ja
mov
inc
jne
cltd
push
test
gs
pusha
fmull
or
js
aam
mov
std
or
lahf
mov
xchg
cmp
clc
jmp
inc
sub
mov
sahf
out
mov
in
outsl
add
idivb
ss
sbb
xor
sub
cmpsl
idivb
push
test
cld
mov
ret
sub
mov
fadds
rolb
cmp
ss
adc
push
pop
sbb
jo
sub
pop
dec
into
pop
mov
repz
fcmovnu
sub
call
push
fisubl
adc
mov
lahf
fwait
adc
addr16
push
push
dec
popa
jnp
dec
and
roll
clc
sub
inc
cmpsb
jns
mov
jmp
adc
test
or
jno
ret
outsl
insl
inc
popa
aad
loope
fdiv
or
and
adc
push
jnp
lret
outsb
mov
aam
aam
fldl
shl
out
sbb
movsl
data16
inc
add
or
mov
fbld
pop
xor
mov
pushf
dec
or
jnp
push
ljmp
call
testl
sbb
xor
inc
lods
and
clc
sub
dec
inc
xor
outsb
fildl
ljmp
lea
mov
imul
push
hlt
dec
mov
std
clc
ds
sub
jg
push
loopne
and
out
xor
and
aas
push
and
pop
aas
scas
xlat
arpl
sub
insl
std
mov
jbe
push
mov
mov
push
dec
xchg
test
jg
movsb
aaa
stc
cs
mov
jnp
adc
stos
adc
ret
es
push
adc
movsl
pop
orl
outsl
das
push
xchg
out
roll
dec
imulb
sti
xchg
mov
stos
sbb
dec
mov
and
ret
sub
add
popa
ret
fidivs
or
icebp
mov
mov
add
or
or
pop
das
iret
pop
cmp
aaa
addr16
shlb
les
fs
xlat
push
fneni(8087
cmc
mov
ljmp
mov
push
bound
mov
and
xor
xor
jo
cmp
or
push
mov
popf
stc
bound
sbb
movsb
lea
aas
fdivr
and
and
aam
outsl
adc
loop
sbb
call
popf
ss
aas
mov
adc
pop
sti
cmp
gs
pop
outsb
cltd
inc
stos
ja
fdivp
xorb
mov
in
xchg
adc
or
cmpsb
roll
mov
ret
dec
lret
dec
mov
push
scas
push
loopne
or
sub
pop
jbe
popa
out
shll
push
xorl
adc
pushf
enter
arpl
test
flds
fldenv
minps
fldl
sti
xchg
lock
adc
jae
mov
mov
pop
arpl
sub
pusha
in
mov
fisubrs
int
dec
adc
push
loopne
sbb
ficompl
sti
adc
nop
push
xchg
into
fistl
ret
and
outsl
sub
icebp
add
inc
test
lahf
call
bound
cmp
adc
push
pop
pop
data16
sbb
inc
and
mov
or
and
mov
insb
dec
ret
stos
mov
push
xor
pop
cltd
lds
hlt
dec
lcall
arpl
xor
js
pusha
jl
xchg
mov
xchg
pop
movsl
jno
cmpsb
scas
int3
scas
repnz
xor
shll
mov
int
aam
js
sbb
xor
data16
ljmp
and
dec
sub
xchg
mov
mov
js
stos
mov
or
loope
push
ret
jl
mov
aad
jb
fistpll
test
push
adc
sti
jle
fs
sub
push
mov
xchg
sub
pop
fidivs
shl
mov
idiv
mov
fsubrs
push
loope
xchg
sahf
ljmp
ss
pop
inc
addl
das
pop
sbb
push
pusha
and
cld
divb
addb
adc
ficoml
and
arpl
mov
jbe
push
dec
jg
out
mov
imul
dec
out
xor
test
sub
mov
pop
inc
add
repz
mov
ds
and
gs
outsb
xlat
outsb
and
inc
sbb
fmull
into
icebp
ljmp
cmpl
ds
xor
scas
push
mov
push
fldenv
pop
jne
addr16
push
packuswb
aad
and
xchg
push
cmpsb
push
aad
call
aam
mov
xchg
lret
adc
or
in
movsl
pop
test
repz
sbb
or
imul
add
sti
imul
jne
xor
cmp
xor
outsb
fdivl
fwait
xchg
mov
fucomip
sub
dec
add
enter
pop
or
fists
jb
arpl
call
add
jg
sahf
xchg
lret
dec
leave
sub
push
xor
popa
pop
lahf
inc
lods
fs
cmc
insl
inc
pop
inc
ja
loop
fstl
es
jmp
xor
mov
test
rcll
pop
dec
call
xchg
rorb
adc
mov
xor
dec
inc
push
and
push
xor
idiv
dec
pop
je
sub
or
add
add
add
or
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
