pop
or
inc
pop
cltd
mov
pop
sbb
push
and
push
pop
fsubp
call
pop
lea
je
push
sti
aas
xchg
jne
imul
add
push
leave
loope
lds
data16
shlb
jo
dec
fdiv
push
std
adc
and
jae
pop
pop
in
orb
add
sub
es
dec
in
loopne
stos
aas
pop
mov
ss
mov
jb
dec
xchg
push
mov
adc
cs
and
cmp
loop
and
icebp
iret
mov
sub
add
mov
and
or
push
test
bound
xchg
push
sti
and
repz
xchg
mov
push
in
ret
int
jns
daa
in
jp
ja
cmp
orl
cld
test
lret
ret
inc
pop
shl
icebp
fiadds
lea
mov
mov
jmp
popa
ret
movsl
cmpsl
add
ss
sbb
inc
lods
cmp
mov
jge
cmp
imul
mov
sub
mov
add
fwait
cmp
fisubs
arpl
and
leave
je
popf
int3
xchg
popf
cmp
inc
adc
lret
xchg
sub
xchg
push
addr16
dec
ret
xchg
test
mov
push
lock
jecxz
fucomi
mov
sbb
jecxz
cmp
mov
cmpsb
lret
sbb
cltd
call
pop
ljmp
icebp
push
lcall
cmpsb
js
inc
test
cli
push
mov
mov
arpl
sbb
das
aam
xchg
jno
inc
daa
test
adc
rcl
push
jns
xchg
push
dec
hlt
icebp
inc
jg
adc
pop
mov
push
orb
or
inc
fcomip
in
cmp
sbb
mov
mov
mov
xchg
mov
popa
add
push
mov
sub
loope
scas
daa
std
sub
sbb
sbb
jp
adc
xor
mov
jae,pt
movsb
cwtl
sti
push
push
lods
mov
addr16
es
stos
cwtl
call
test
dec
imul
scas
arpl
arpl
insb
mov
ror
lret
sub
repz
mov
sahf
jb
cmpsl
mov
inc
cld
and
and
out
mov
dec
sub
xchg
pop
ljmp
movsb
test
mov
push
push
subb
mov
cmp
stos
mov
cmp
loop
adc
xchg
call
lock
lods
mov
cmp
sbb
icebp
xchg
inc
jae
fcom
ljmp
mov
mov
mov
scas
cli
xchg
push
xchg
movsb
mov
push
testb
pop
cmp
mov
insl
orb
rcrl
sahf
or
sub
lods
cmp
add
xchg
mul
lds
sub
lods
push
das
xor
imul
pop
mov
aam
sbb
leave
mov
rcr
lcall
xchg
or
scas
ret
push
push
or
xor
jnp
xchg
mov
pop
inc
fildl
pinsrw
pop
jmp
in
and
shl
mov
push
leave
lcall
pop
mov
leave
dec
xchg
in
inc
mov
adc
test
and
shl
mov
xchg
sbb
mov
outsl
add
shl
fnstcw
loop
or
sub
sbb
ret
or
mov
aam
stc
xlat
subl
pop
testb
push
int3
cltd
pop
and
cmp
pop
mov
cld
jp
cmp
dec
pop
inc
dec
inc
into
lods
mov
mov
ret
int
jmp
movsb
lds
inc
dec
or
ljmp
xor
lods
ja
add
xor
push
and
mov
pop
rclb
insl
js
push
sar
jo
into
repz
pop
inc
pushl
frndint
xchg
sahf
lea
xchg
into
pop
sbb
sbb
lret
ljmpw
ljmp
mov
or
scas
adc
cmp
ljmp
mov
cmp
andl
xchg
pop
sbb
dec
mov
rorl
xor
mov
iret
lcall
cmpsl
fs
sub
mov
mov
xchg
fsubrp
test
stc
mov
add
repz
cmc
sbb
mov
push
filds
push
testl
adc
cltd
fwait
push
add
cmp
sub
enter
mov
jge
fiaddl
outsb
fildll
or
cmpsb
gs
mov
sub
mov
addps
adc
and
inc
sahf
jo
out
dec
push
mov
mov
pushf
fcoml
or
jmp
je
xchg
and
or
jmp
jns
divb
xchg
stos
adc
mov
out
jle
cmp
pop
sbb
inc
cmp
orb
sbb
sbbb
in
pop
in
jnp
leave
imul
dec
jnp
out
jmp
rclb
cld
jp
push
aam
jno
fstpt
enter
fcom
xor
loopne
pop
sub
add
cli
xor
rcrb
ss
mov
movsb
arpl
sub
cwtl
mov
incb
call
xlat
outsb
cmp
enter
ljmp
mov
lds
pop
fdivrs
and
pop
pop
or
dec
popa
add
or
icebp
lahf
decb
jg
std
es
sub
inc
inc
sahf
test
adcl
pop
jo
scas
je
dec
sbb
push
sarb
pop
mov
xchg
sbb
movl
sbb
shr
fildl
dec
rorb
dec
popf
gs
bound
jmp
and
xchg
jge
xchg
adc
xchg
cmpsl
iret
and
add
pop
bound
fldl
mov
mov
xchg
sbb
test
push
movsbl
push
push
hlt
xchg
push
ficoms
insl
and
stos
cwtl
mov
cmp
mov
aad
inc
sahf
loopne
mov
adc
call
pop
sti
mov
cmpsb
ret
fucomp
mov
push
mov
or
scas
lret
mov
loope
icebp
fs
arpl
and
lock
push
out
dec
fdiv
push
and
or
mov
and
xor
mov
addb
test
lret
xor
adc
insl
subb
popf
aaa
jnp
pop
fldt
pop
mov
icebp
fisttps
mov
cmp
pop
mov
out
fnstenv
in
ret
mov
cli
cltd
pusha
stos
xor
insb
pushf
jg
pop
jl
sub
and
inc
inc
mov
fld
xchg
lea
xchg
jne
xor
and
mov
loope
xchg
cmp
adc
or
loopne
mov
add
lods
push
pop
and
pop
jmp
push
jo
or
sub
adc
xchg
cmp
rorb
stos
fsub
mov
frstor
mov
add
push
cwtl
loope
adc
fwait
xchg
sbb
rcl
into
icebp
std
cmp
xchg
in
mov
mov
hlt
xchg
add
mov
out
xchg
popf
xchg
inc
cmp
daa
aaa
inc
push
mov
data16
insb
sarb
jno
jge
adc
scas
sbb
hlt
ficompl
mov
repnz
lret
sub
inc
pop
sbb
mov
lock
mov
push
mov
data16
and
xchg
sub
adc
push
lret
mov
stc
mov
icebp
sub
mov
jmp
mov
inc
xchg
movsb
cmpsl
push
dec
mov
mov
add
jne
sahf
xchg
pop
xor
add
inc
jle
or
push
mov
andb
xchg
and
xchg
jl
call
and
mov
out
testl
jb
cmpsb
push
out
add
jle
jmp
or
loop
lea
std
lret
fdivp
pushf
das
add
jne
jb,pt
push
adc
sarl
negb
xor
xor
ds
push
addr16
xchg
jae
rcrb
jo
scas
je
xchg
dec
movsl
into
mov
jnp
hlt
lcall
push
shrl
xor
out
sbb
inc
ret
cltd
rclb
insb
call
jne
pop
xchg
jle
jp
and
sbb
mov
add
mov
in
ds
or
xchg
mov
mov
mov
cld
xor
daa
xchg
adc
xchg
jb
pop
jae
jno
out
add
ret
ret
jnp
fildll
rorb
add
inc
loope
in
cmp
sbb
mov
mov
mov
xchg
rorl
pop
test
add
decl
incl
in
sub
enter
ds
jno
imul
shl
lcall
aam
sahf
mov
cmp
movsl
mov
xor
xchg
imul
ljmp
out
mov
or
jmp
inc
pop
xor
movsl
mov
ljmp
stos
leave
cmpb
push
lods
jbe
push
sbb
ret
out
loop
push
aad
inc
popa
jle
or
fsubrl
inc
xchg
mov
cmpsb
pop
mov
push
mov
lods
dec
js
pop
scas
mov
cmpsl
lahf
sbb
aam
cld
ljmp
jno
pop
shl
rcr
add
loop
lret
fcmove
ja
sbb
mov
dec
test
xchg
mov
mov
mov
jo
xlat
xor
push
aad
mov
pop
js
jne
cwtl
xchg
or
xchg
xor
push
push
lret
fs
adc
addl
inc
mov
and
movsl
or
in
and
xchg
sub
pop
push
insl
jo
jle
pop
xchg
shll
fwait
jae
paddusb
pushf
and
scas
mov
inc
xor
jecxz
xchg
mov
mov
pop
push
callw
adc
adc
xchg
sub
insb
xchg
mov
inc
mov
mov
rep
stos
dec
dec
mov
jp
mov
adc
mov
popf
aam
mov
testb
mov
mov
lret
mov
sub
es
inc
loope
or
push
jne
push
mov
les
and
sbb
stos
mov
add
sub
mov
pop
jge
xchg
xlat
outsb
push
cld
in
cwtl
mov
ljmp
jmp
test
out
popf
into
in
or
imul
push
push
loopne
idivb
lods
push
loop
imul
aad
mov
sub
dec
xchg
lcall
cmp
jo
jno
enter
stos
fnsave
stos
cmc
mov
nop
cmp
imul
int3
repnz
inc
and
push
mul
jb
jl
fs
mov
jmp
imul
sahf
inc
es
lcall
push
xor
xchg
push
mov
into
push
inc
test
push
xchg
xchg
mov
mov
pop
test
inc
lock
hlt
xlat
ljmp
lret
mov
add
vpsubb
pop
notl
cmp
jg
xchg
fsts
stos
mov
xorb
xchg
push
les
or
xchg
mov
lahf
ret
push
inc
loopne
xchg
pop
lcall
sbb
lret
xor
cltd
cmc
pop
push
rcll
rorb
jle
and
xchg
sub
dec
sub
repnz
push
insb
xchg
xchg
pop
out
cld
ja
sbb
cmp
movsl
shl
lcall
add
xchg
xor
dec
add
and
cmc
iret
ret
sti
inc
or
std
mov
mov
scas
orb
mov
pushf
dec
jae
inc
inc
sbb
mov
mov
dec
test
mov
dec
push
xor
mov
or
jnp
xor
test
adc
or
andl
aas
adc
xchg
mov
xchg
pop
or
ds
ss
pop
pop
sbbb
jmp
imul
adc
je
push
and
sub
jae
or
push
mov
lock
sub
add
jle
pop
fcoms
jle
sbb
sarb
mov
mov
cli
or
adc
data16
adc
xor
ds
and
xchg
mov
gs
movsb
cmc
fadds
cmc
jmp
xor
rcrb
repz
jbe
mov
std
or
xchg
jnp
inc
jmp
pop
jns
ja
shlb
int
push
outsb
mov
fnstenv
lock
incl
int3
insl
test
cmp
dec
cmc
out
jg
or
jo
adc
push
xor
lods
mov
bound
dec
push
int3
imul
js
imul
cld
mov
fdivrs
icebp
rcr
test
jo
and
adc
xlat
imul
out
cmp
fcompl
sub
aaa
xor
inc
lds
arpl
dec
xchg
mov
mov
jl
jb
push
stc
xchg
sbb
mov
push
scas
nop
add
int
mov
adc
xchg
out
cld
sbb
inc
lds
jne
dec
push
hlt
xlat
ljmp
mov
xchg
mov
sub
jno
jo
sub
stos
lret
xor
push
jne
pusha
test
pop
pop
ret
repnz
js
and
js
movsl
into
je
ljmp
add
insl
lret
lret
and
or
call
mov
xchg
lds
jnp
in
sbb
bound
fidivrl
jae
or
bound
scas
pop
xor
mov
sti
push
das
out
and
orl
mov
inc
inc
fcmovnu
push
xor
gs
mov
lret
add
add
fs
pop
add
push
arpl
lods
addr16
and
lahf
mov
jecxz
dec
sub
hlt
sahf
lds
jb
in
ret
push
cwtl
adcl
test
jp
loopne
mov
test
add
testb
ds
jmp
std
inc
cmpsl
mov
ljmp
loop
ds
mov
mov
cli
adc
nop
lock
mov
add
mov
sahf
or
cltd
sbb
mov
mov
mov
push
cmp
jbe
cli
pop
or
shr
mov
adc
test
jle
xor
insb
mov
cmp
dec
icebp
subl
sbb
sti
dec
xor
pusha
in
cmc
pushf
jl
sub
mull
sbb
cld
andb
push
mov
mov
int
inc
cmp
and
inc
imul
mov
insl
imul
jb
out
and
inc
call
mov
lods
mov
rcl
call
jbe
insb
hlt
sahf
lds
xchg
xlat
add
xor
xchg
ja
or
push
clc
fwait
inc
enter
add
imul
add
mov
lock
push
add
dec
lahf
scas
xchg
fucom
imul
xchg
icebp
out
xchg
js
shll
out
pop
jno
push
inc
sbb
mov
add
je
sub
mov
inc
mov
fmuls
fbstp
sarb
cmpsb
xchg
das
sti
cli
adc
daa
xor
mov
test
push
pop
cmp
pop
pop
mov
sub
mov
not
adc
in
cld
add
aad
js
adc
cs
dec
mov
stos
sti
hlt
aam
sub
sbb
and
dec
cwtl
jecxz
sub
lea
dec
xor
es
push
hlt
add
cmp
mov
push
mov
jp
fsubl
je
pop
popa
loope
mov
and
shl
xchg
loope
pop
inc
xchg
fcomip
pop
iret
bound
iret
ja
cltd
pop
cli
mov
mov
add
test
ss
xchg
andb
outsl
jb
test
in
lahf
ret
repz
mov
push
xor
mov
mov
scas
pop
mov
iret
fidivl
lock
or
sbb
insb
ljmp
test
daa
push
jno
outsb
jp
mov
mov
xchg
mov
xchg
cwtl
stos
out
inc
inc
sti
repz
insl
out
cwtl
mov
inc
xchg
pushf
push
cmc
gs
pop
cmp
inc
inc
mov
aam
xchg
mov
into
movsb
and
mov
pop
cld
ficoms
jb
mov
gs
jnp
arpl
addr16
sub
sarl
mov
mov
gs
cmp
pusha
fimuls
gs
mov
subl
sub
popl
mov
and
fisubl
sub
outsl
dec
bnd
loopne
pop
pusha
sarb
cmpsl
subl
cwtl
ljmp
and
es
mov
scas
inc
push
jbe
addl
push
xor
jb
pop
xchg
hlt
sbb
xchg
cmp
cmp
sbb
inc
in
sbb
and
dec
pop
mov
push
xor
lret
loopne
rclb
fdivl
bound
adc
xor
lea
lcall
push
sbb
dec
insl
outsl
dec
or
js
popf
sarl
jmp
dec
addr16
cmp
and
mov
and
mov
loopne
inc
ficompl
or
and
and
dec
inc
adc
movsb
inc
call
jmp
mov
popa
popf
inc
movsl
push
jo
xlat
push
sub
sbb
repz
fsubrl
xchg
mov
in
xchg
test
adc
jmp
cmp
pop
cli
gs
ret
iret
push
mov
adcb
xor
sub
pop
mov
sti
testl
outsl
pop
popa
iret
fstps
lock
xor
xchg
cld
ja
shr
loop
or
test
xchg
pop
aaa
js
and
pop
ret
cmp
cmp
mov
adc
insl
aaa
sahf
push
lock
insb
inc
mov
sub
les
jle
jno
inc
fdivrl
aaa
fwait
cwtl
mov
js
arpl
xchg
push
movsl
imul
nop
ljmp
sbb
ret
xor
or
push
mov
add
pop
aaa
adc
lahf
jne
daa
push
int3
cltd
or
popa
mov
mov
mov
dec
jnp
cmpsb
cmp
push
jb
push
dec
sbb
push
mov
in
mov
icebp
scas
jmp
mov
lcall
and
adc
dec
aam
push
push
adc
cli
inc
push
stos
cld
jg
xchg
sti
imull
jno
mov
repnz
cltd
jp
sbb
inc
lret
int
mov
fstp
js
movsl
into
fsubr
ljmp
imul
les
iret
sub
xchg
mov
ret
popf
xor
xchg
in
cmp
test
imul
sbb
test
or
mov
repz
dec
dec
imul
mov
xchg
mov
jmp
lock
mov
mov
stos
mov
fcmovnbe
mov
mov
ljmp
mov
pop
jb
mov
ja
mov
xchg
std
fstpt
adc
jo,pt
imul
mov
mov
lods
xchg
maskmovq
notl
push
shll
ljmp
cltd
mov
lret
fildll
push
stos
cmpsb
fiadds
push
ds
stc
sbb
daa
pop
jnp
outsl
aad
sub
cmp
inc
mov
xchg
cmp
dec
out
lds
sbb
jns
into
fsubr
ljmp
xor
push
mov
sub
mov
sbb
or
xor
test
out
cld
and
push
aas
out
sarb
leave
push
out
and
stos
sbb
test
or
xchg
or
mov
dec
sbb
mov
dec
out
push
sub
add
xchg
gs
lods
jmp
xlat
push
or
jmp
push
xchg
lcall
xor
jnp
xor
jmp
inc
cmc
xor
testb
lds
push
cmp
jmp
mov
pop
mov
adc
sub
in
xchg
pop
lock
push
sub
fwait
pop
mov
and
sbb
or
inc
lds
cmpsb
mov
push
hlt
jo
jb
xor
testl
mov
dec
inc
pop
in
scas
sub
jo
loop
adc
out
lea
sub
jno
push
xchg
xlat
dec
sub
ds
sbb
sti
mov
xchg
cld
cli
daa
aam
cmpb
out
mov
lea
pop
push
xor
xor
sub
mov
cwtl
lods
mov
xchg
les
mov
loope
nop
ljmp
xchg
mov
mov
jno
jae
lods
leave
mov
xorb
adc
pop
bound
mov
sbb
cmp
dec
xchg
icebp
xchg
nop
dec
sbb
adc
pop
mov
inc
rolb
push
inc
rcrb
iret
jns
pop
outsl
cmp
pop
cli
jne
int3
shll
out
mov
adc
pop
push
pop
mov
mov
inc
and
addr16
mov
push
push
in
decl
jae
and
add
jno
scas
mov
xor
inc
sub
dec
mov
pushf
jmp
rorl
sarl
test
andb
pushl
test
and
data16
aaa
mov
xor
mov
pop
imul
inc
and
in
idivb
add
push
test
out
sbb
shrb
movsl
les
mov
dec
sub
or
fildll
cmc
dec
cld
add
jnp
lahf
or
mov
cmp
dec
push
and
imul
pop
mov
push
mov
loope
fnsave
insl
enter
je
ja
loope
add
or
add
mov
addr16
cmp
pop
int
jne
stc
aam
gs
sub
lcall
jp
push
subb
sahf
cmp
mov
xor
or
repnz
test
pop
mov
pop
push
ja
jl
and
pop
mov
jmp
iret
cmc
cmpsb
jmp
push
sub
pusha
cmc
inc
jecxz,pt
popa
out
adc
pop
sbb
add
pop
sub
push
sub
and
inc
cmp
into
nop
push
out
jne
pop
pop
jl
stos
xchg
sbb
mov
daa
jns
or
aad
xchg
push
imul
jmp
js
cmpsl
je
ss
mov
in
sbb
pop
or
xchg
add
sub
adc
and
jle
leave
sub
inc
movsl
mov
or
adc
jae
imul
daa
ljmp
sahf
mov
inc
push
out
int3
push
out
sub
test
jnp
popa
push
ljmp
pop
das
xchg
ljmp
cmp
clc
push
test
lret
scas
pop
add
add
or
into
lods
int3
pop
inc
push
fwait
dec
push
inc
cmp
lods
out
in
mov
pop
fdivl
stc
mov
pop
cmp
das
or
sarb
add
imul
mov
popa
xor
sbb
adc
push
jae
dec
out
fisubrl
shlb
in
movsl
xor
sti
sti
sub
movsb
mov
iret
shll
out
fdivs
mov
jno
pop
cmp
jg
jbe
negb
push
push
cmpb
lret
and
xor
push
push
jbe
push
shlb
sbb
jg
pop
lods
xchg
sub
popf
inc
sub
pinsrw
cmpsb
xor
dec
adc
adc
push
xchg
js
pmuludq
pop
inc
es
pop
js
cld
shl
mov
into
mov
rol
jmp
rorb
mov
ja
dec
sub
jae
pop
arpl
pushf
subb
mov
push
roll
iret
sub
sbbb
and
dec
ja
lock
jns
jnp
pop
adc
fiadds
inc
cwtl
pushf
sahf
mov
push
in
in
insb
bound
mov
dec
imul
testb
fnstcw
or
push
cmp
adc
mov
jbe
jnp
rol
mov
jmp
jg
fwait
or
adc
dec
jno
push
mov
jl
shrl
jne
lret
mov
inc
arpl
ds
or
movl
inc
and
jmp
les
mov
jae
mov
nop
notl
inc
sahf
bound
pop
xor
xchg
scas
daa
or
sbb
jmp
mov
fistpll
and
repz
pop
inc
addr16
cmp
arpl
and
outsl
les
pop
ja
lock
sbb
mov
push
jge
mov
cmp
shrb
jecxz
clc
cwtl
and
pushw
add
push
ret
out
dec
xor
mov
sbb
xchg
divl
mov
in
lret
sub
jns
icebp
push
popa
push
xchg
sub
popl
ss
addr16
mov
jg
arpl
sarl
loope
leave
mov
hlt
xlat
pop
rorb
pop
jno
push
sbb
inc
call
sbb
sbb
pop
movsb
arpl
aam
add
jmp
inc
insb
sub
xchg
into
aam
ds
lds
pop
pop
push
mov
mov
loopne
ss
in
sbb
leave
jecxz
lods
jns
inc
inc
ja
lret
mov
xchg
sub
xchg
add
das
adc
pop
arpl
inc
mov
cmpsb
addb
xor
ret
das
inc
mov
lods
jae
std
nop
cmp
roll
xor
mov
jae
mov
dec
loope
mov
and
inc
jecxz
ds
adc
inc
popa
sub
inc
jl
inc
cmpsb
aaa
inc
sbb
out
mov
ret
lock
icebp
je
pop
bound
stos
sub
dec
dec
bound
int3
jnp
sbb
xchg
jle
test
cmpsl
lret
xlat
push
inc
lock
in
fucomi
push
jae
lock
dec
sbb
scas
mov
rcl
xchg
leave
cmp
mov
dec
ret
mov
xor
dec
adc
mov
ret
adc
sbb
imul
add
inc
bound
outsl
add
fisubrs
sarl
jns
xchg
fldenv
fidivs
or
pcmpeqd
sbb
sub
stc
jle
pop
dec
pop
fsubrs
repz
pusha
mov
inc
push
mov
idivb
mov
mov
aam
pop
dec
fcomps
mov
push
mov
inc
ljmp
int3
jmp
cltd
pusha
sub
push
cmp
in
inc
lahf
jle
adc
addb
sti
dec
xchg
jle
cmp
mov
dec
movsl
out
cmp
gs
pop
mov
or
xor
mov
lea
sbb
lret
add
sub
push
xor
fsubr
and
jb
add
imul
or
lret
mov
push
arpl
std
aas
jb
or
repz
test
lods
jge
mov
hlt
xchg
cmp
out
push
mov
lods
pushf
scas
ja
add
sbb
mov
add
das
xor
inc
and
outsl
fwait
push
mov
iret
cmp
sti
out
dec
adc
adc
es
or
in
popf
xor
inc
test
scas
insb
ds
mov
pop
stos
cmpsl
xchg
daa
mov
push
mov
adc
inc
xor
and
es
cmp
xchg
out
cmp
pop
nop
cli
inc
or
jmp
subb
adcb
sbbl
and
js
iret
mov
cmp
inc
jae
cmpsb
or
scas
gs
jmp
pusha
xor
xor
ds
sbb
dec
cmpsb
mulb
in
test
xor
int
xor
rcr
mov
inc
fsubrs
pop
cltd
xchg
push
testl
push
lods
and
jnp
or
xor
or
sub
outsb
push
jnp
psrlw
int3
scas
imul
lods
push
add
add
xchg
sub
enter
mov
jb
xor
loopne
and
add
fmul
dec
push
push
sbb
idivl
movsl
dec
aas
out
mov
out
cltd
popa
sbb
fadds
mov
outsl
in
push
sbb
fdivrl
movsl
into
mov
ljmp
addb
fwait
sub
push
sbb
es
sub
fmull
icebp
cltd
subl
lea
adc
jnp
repnz
outsw
xor
scas
mov
cwtl
pop
mov
mov
push
mov
jo
adc
int
and
mov
jmp
or
test
jnp
insl
addr16
rcr
sub
pop
fiadds
lea
push
fsubs
or
push
and
push
cmp
pop
rorb
xchg
cmpsb
mov
fs
and
test
js
or
das
orb
push
les
maskmovq
negl
push
shll
test
mov
pushf
cmp
ret
icebp
mov
leave
je
ds
test
push
jae
fcmove
mov
inc
sub
push
aaa
sub
pop
scas
or
adc
pop
pop
loopne
in
mov
out
xchg
jno
lahf
mov
lea
mov
clc
out
lret
push
sbb
dec
iret
loop
or
and
add
jp
loopne
ljmp
xchg
jecxz
fdivl
adc
repz
adc
roll
fwait
mov
jnp
add
gs
jecxz
scas
xchg
ret
imul
adc
xchg
sarb
adc
sub
push
xor
xlat
inc
jo
cmp
mov
adc
fiadds
lahf
outsb
ja
lfs
jo
sbb
add
pop
sahf
cmp
cmp
push
insl
sarb
mov
rolb
scas
add
int3
std
int3
scas
cli
loope
addb
scas
lcall
dec
pushf
aad
sahf
xor
pop
popa
add
btr
das
push
imulb
ds
popf
xchg
xchg
arpl
inc
mov
pop
lcall
lods
cmp
out
hlt
pop
sub
icebp
mov
nop
je
mov
mov
lret
push
ja
mov
pushf
sti
sub
jmp
aad
mov
xchg
fnstenv
pop
inc
jg
sbb
cmpsl
or
pop
in
dec
mov
mov
inc
in
push
lods
jnp
sbb
sbb
js
rorb
inc
add
jl
test
ror
inc
mov
rol
insl
in
mov
mov
add
and
dec
mov
or
xchg
mov
call
mov
push
mov
sbb
mov
pop
or
mov
jno
cltd
je
dec
mov
push
in
std
pop
test
stos
sbb
lret
mov
xor
js
inc
iret
jo
jns
xor
adc
aaa
sbb
inc
outsb
rorl
and
scas
xor
lods
xchg
popf
jp
inc
nop
sbb
add
mov
push
sbbb
xchg
popf
fnsave
icebp
shrb
into
pop
or
aaa
icebp
adc
es
mov
jecxz
mov
cwtl
stos
iret
add
and
add
jbe
push
mov
mov
std
loopne
fbld
fucomi
cmpl
ret
lret
pop
jb
xor
cltd
ffree
in
in
xchg
inc
cmp
mov
andb
outsb
inc
inc
xchg
insl
lock
adcb
adc
pop
out
stos
lea
ret
cmpsb
cmp
ljmp
loopne
outsb
jp
mov
fwait
out
mov
pop
mov
les
cwtl
xor
enter
into
inc
enter
sarb
jae
fmull
imul
pop
mov
ljmp
xchg
push
dec
and
jle
cmp
pushf
es
sub
jbe
insb
push
jb
adc
fstps
mov
stos
mov
cmp
loopne
add
fildl
push
xchg
call
ljmp
insb
addb
xor
js
iret
mov
add
mov
popa
mov
shll
dec
sbb
jnp
data16
mov
daa
pop
lcall
jbe
shll
frstor
fsubr
ja
add
sub
push
or
scas
dec
cmp
pusha
aam
or
cmp
sbb
inc
mov
cmc
repnz
data16
push
xchg
testl
xchg
test
mov
outsb
negl
js
xchg
lds
pop
mov
mov
out
test
sub
mov
fbld
call
scas
mov
pushf
push
push
xchg
and
idiv
fsubrl
insl
sbb
push
cmp
icebp
and
xor
and
popf
sub
clc
xor
lret
in
adc
mov
dec
sbb
xor
cli
jns
test
popf
jbe
lea
sbb
jecxz
out
mov
and
js
iret
mov
add
inc
fisttpll
jle
testl
or
mov
sbb
int
ja
subl
or
and
push
inc
push
inc
and
in
lock
roll
sti
daa
dec
int
push
and
jmp
push
mov
stos
jl
cmc
or
push
mov
push
inc
mov
imull
inc
int
test
ja
fcomps
cs
sub
inc
je
lret
mov
mov
sbb
daa
push
pusha
jg
ror
shl
fldt
movl
arpl
xorb
shll
mov
adc
sub
jno
cmp
xor
sub
push
push
xor
and
iret
flds
ljmp
pop
dec
leave
sub
in
out
inc
iret
adc
orl
jne
mov
dec
inc
mov
or
mov
mov
inc
lret
jmp
and
ds
mov
cmp
shrl
adc
add
pop
jnp
add
pop
subb
xor
or
lock
and
xor
pop
mov
fbld
dec
das
push
fs
das
sarb
or
insb
aad
push
retw
adcl
mov
mov
fdivs
jg
inc
pop
push
into
icebp
xor
iret
fwait
jge
movsb
mov
gs
pusha
inc
mov
pop
push
les
cmp
stos
jp
popf
jns
mov
adc
jb
and
xchg
rcrb
sbb
cmc
cmp
dec
or
sub
or
mov
mov
and
sub
push
push
out
cmc
jno
std
pushf
jg
in
fwait
jae
add
mov
dec
test
jo
popf
and
xor
fwait
arpl
mov
int3
fisttps
xchg
mov
cmpsb
js
jg
js
xchg
lds
cmpsl
test
nop
shll
dec
mov
xchg
jmp
push
sarl
scas
inc
imul
adc
pop
sbb
sub
push
adc
cmp
mov
xor
push
sub
adc
xchg
add
in
nop
imul
xchg
mov
sbb
negl
and
mov
fdivp
pop
jge
inc
leave
cmc
inc
pop
imul
xor
ds
jno
std
icebp
js
imul
rolb
loope
fdiv
inc
sahf
test
push
sbb
mov
xor
xchg
stos
mov
pop
imul
mulb
mov
mov
pop
lods
and
pop
pop
pop
sti
mov
add
add
inc
sub
imul
xchg
andl
mov
arpl
push
clc
popa
xchg
sub
popa
je
jmp
fbstp
lcall
mov
aas
adc
lahf
mov
sahf
or
rcrb
sub
aad
xlat
ljmp
out
dec
adc
push
mov
nop
ret
andb
xchg
and
xchg
in
cmp
add
cmp
mov
xchg
les
ja
push
cmp
fs
push
or
scas
mov
lock
sbb
sub
nop
dec
cmp
loopne
pop
scas
jnp
popa
pop
pusha
hlt
into
int
pushw
jne
jecxz
mov
ds
into
pop
test
push
adc
incl
jnp
pop
pop
icebp
adc
jp
repz
mov
sub
pop
leave
push
ja
mov
xchg
rclb
nop
and
pushf
dec
icebp
fidivs
cwtl
jbe
add
jle
stos
inc
inc
decl
adc
ss
popa
xor
cmpsb
cmpsl
or
xor
pop
mov
jle
cli
adc
or
sahf
ret
iret
cli
frndint
ud2
aaa
clc
mov
push
pop
out
jmp
aam
push
inc
inc
push
fcom
xchg
sub
stc
or
lahf
jne
push
fmulp
pop
aaa
xor
int
jae
mov
arpl
sbb
popf
jle
mov
mov
push
inc
inc
xchg
divl
xor
daa
or
mov
leave
push
sub
loope
and
or
icebp
pop
cmp
adc
and
arpl
js
mov
std
fmull
jle
or
les
xor
adc
pop
mov
jnp
lds
jno
jge
pop
pop
loop
mov
push
mov
sub
mov
or
or
out
or
out
test
scas
subb
push
sub
xor
ja
shl
pop
adc
pop
pusha
pop
push
mov
cmp
or
mov
out
adcb
ja
add
cmp
std
adc
mov
xchg
mov
fstps
cmpsl
add
adc
out
add
pop
sbb
and
ja
je
popa
inc
push
push
mov
jg
add
sahf
outsl
mov
adc
add
not
addb
movsl
inc
add
mov
xchg
mov
sbb
aaa
mov
out
into
loope
dec
addr16
std
push
mov
loopne
jle
jb
stos
cmp
sub
mov
pop
jb
inc
adc
leave
shl
stc
cmc
fsubrl
mov
ficompl
mov
jbe
jbe
aam
jecxz
sbb
dec
push
popf
sbb
dec
lret
pop
add
pusha
lock
dec
decb
jne
cwtl
add
cmpsl
orl
mov
adc
je
cltd
shl
idivb
mov
pop
lods
nop
cmp
mov
lds
pop
push
push
xlat
aas
push
movsb
aas
dec
xchg
rolb
dec
mov
mov
std
jb
mov
sarb
xchg
stos
lea
popf
insb
cmp
add
and
sbb
fnsave
fstps
out
mov
jmp
xor
sbb
inc
enter
aam
cmp
das
cmp
xchg
sbb
lret
dec
sbb
cli
std
push
js
adc
enter
call
lea
rclb
jge
jo
int
mov
mov
gs
loope
mov
hlt
loope
xchg
ficoml
adc
iret
sub
inc
mov
jo
out
dec
inc
mov
in
push
repnz
scas
mov
cmp
les
adc
sbb
cmp
adc
pop
out
fwait
loopne
or
xor
mov
pushf
jns
jbe
jp
test
adc
jmp
and
xlat
jnp
push
mov
loope
in
pop
test
or
sbb
mov
cmc
dec
cmp
adc
jae
push
cltd
sti
cmp
jle
ret
mov
ss
jo
inc
cld
adc
mov
add
lods
xor
orl
dec
dec
mov
in
icebp
icebp
adc
jo
addr16
fnsave
pusha
pop
call
xchg
lds
push
test
xor
mov
xchg
add
sbb
xchg
sarl
dec
dec
int3
dec
fcomps
jb
loope
mov
and
fcompl
mov
xor
repnz
add
jo
scas
jge
jae
mov
nop
dec
xor
pusha
out
jns
fsubl
fidivl
push
sbb
push
out
mov
leave
mov
scas
stos
dec
mov
inc
jle
jecxz
add
push
sub
xchg
mov
outsl
sbb
adc
mov
cwtl
ss
pop
loope
cs
push
cmp
insl
adc
inc
sbb
or
mov
inc
rolb
cmpl
pusha
and
test
or
jmp
inc
outsl
and
imul
or
sub
jle
sbb
int3
or
dec
sbb
lret
sub
pop
pusha
hlt
jecxz
add
mov
push
sub
movsb
push
and
sub
mov
bound
js
es
dec
out
jb
fwait
xchg
sub
subl
mov
mov
loop
jno
cltd
fcomps
xchg
shl
ja
adc
sahf
aad
push
and
sbb
ret
and
dec
je
push
adc
je
fwait
dec
xor
mov
inc
sar
leave
adc
mov
sbb
fdivrl
int3
add
ffree
fiadds
hlt
sbb
iret
stc
and
ds
aaa
scas
jp
daa
pop
andb
inc
and
loope
dec
lea
xlat
cmpsb
ds
and
sub
push
push
xchg
xor
mov
push
or
frstpm(287
dec
loope
clc
lret
fidivrs
outsb
push
push
mov
xchg
adc
mov
sub
sbb
add
mov
lock
push
ljmp
mov
subb
out
xchg
cs
sbb
sti
insl
jno
xchg
mov
and
push
popa
cmc
push
outsb
cmp
inc
cli
pop
xor
or
push
std
in
xchg
cmp
out
jg
fwait
dec
xor
ds
pop
pop
mov
repnz
mov
mov
sbb
mov
cld
jl
lret
jecxz
cmpsl
xlat
cld
enter
sbb
xchg
sub
stc
in
das
cwtl
dec
pop
jno
push
and
xor
movsl
cmpsl
into
adc
rolb
dec
ret
push
or
push
stos
cmp
mov
jl
jb
stos
jmp
addl
out
push
jmp
push
xchg
mov
cmp
cs
shll
jae
fildll
in
mov
cli
ds
cmp
stc
mov
mov
push
inc
xchg
fcmovnbe
xchg
fcomps
scas
ret
gs
push
shl
jne
and
fcompl
mov
xchg
or
push
mov
inc
add
mov
ljmp
or
in
cwtl
mov
adc
jle
push
fldcw
aad
cmp
jp
ds
pop
xchg
sub
ds
imul
mov
jge
jbe
and
cmp
aam
fs
fstpt
xchg
mov
pop
adc
outsl
mov
in
add
subb
push
cwtl
inc
adc
mov
push
in
or
insb
jb
jmp
push
pop
cmp
testb
mov
sbb
ja
mov
loope
out
sub
inc
enter
fwait
and
add
daa
and
pop
xor
loopne
jge
and
mov
movsl
cld
movsb
push
dec
and
inc
mov
stos
push
and
jnp
ja
sbb
fstps
mov
stos
mov
xchg
clc
cmp
or
cmc
pop
jae
jns
movb
mov
mov
push
lcall
pusha
mov
inc
mov
or
mov
ficompl
mov
sahf
push
xchg
mov
and
xchg
jl
lret
int
aam
xchg
adc
xlat
xor
stc
mov
add
jnp
mov
daa
or
or
inc
xchg
stos
cmpsb
push
or
dec
in
mov
in
mov
pop
rcl
scas
into
xor
jecxz
sahf
sbbl
cmp
pop
pop
das
insl
call
mov
push
jns
cmpsl
sahf
and
mov
pop
loope
sbb
aad
push
inc
mov
daa
pop
into
rolb
loope
cmp
inc
sahf
test
pop
push
sbb
mov
jae
movsl
mov
mov
pop
imul
mul
xchg
and
inc
pop
xchg
push
bound
dec
cmp
pop
ljmp
cmp
cmpsb
push
dec
jle
test
ja
stc
divb
iret
jns
pop
lret
out
int3
clc
fbld
pushf
out
cmp
cmp
dec
and
jle
out
adcl
pop
loope
lock
xchg
fcomps
aaa
or
sub
jnp
or
aam
cmp
lods
sub
rcl
mov
mov
sbb
cmp
and
dec
add
jne
mov
pop
enter
movb
andl
dec
cld
rorl
dec
xor
push
sbb
inc
sub
jge
or
in
cmp
rcrl
push
cld
xor
out
xchg
hlt
out
outsb
notl
dec
mov
ds
rcl
mov
fsts
rol
outsb
mov
cmp
popa
adc
lock
cmp
cmc
jl
test
imul
pavgw
cwtl
jl
sbb
inc
leave
or
inc
or
push
mov
mov
mov
mov
in
lcall
jns
test
dec
bnd
cmp
not
push
sub
dec
outsb
mov
out
or
ret
jne
lret
addl
jbe
add
mov
mov
cmp
repz
push
lods
xchg
mov
push
and
les
mov
lds
in
fdivs
into
and
orb
pop
lock
add
pop
imul
jno
std
sbb
fwait
xchg
mov
ret
cld
sub
imul
sti
push
cltd
push
fcmovbe
jno
mov
rep
jb
mov
pop
mov
xchg
int3
lret
clc
test
inc
mov
mov
jmp
mov
jnp
scas
mov
lods
xchg
pushf
pop
std
inc
idiv
ja,pn
jecxz
or
in
pop
cli
and
mov
in
imul
xchg
fs
lea
into
nop
push
xchg
stos
inc
mov
mov
push
adc
sbb
mov
jns
popf
aaa
jb
cmp
out
aas
fs
xchg
mov
cmp
jge
dec
popa
cmpsb
mov
pop
fistl
daa
xchg
mov
sbb
punpcklbw
xchg
jp
sahf
inc
out
sbb
shlb
pop
inc
and
movl
mov
push
dec
pushf
pop
sbb
loope
ret
xchg
rcrl
loop
in
jb
repnz
mov
hlt
jp
insb
sub
xchg
mov
out
into
mov
test
fcmovnu
xlat
cmc
icebp
mov
xchg
sbb
dec
mov
daa
mov
xor
pusha
leave
and
in
shr
mov
jo
daa
mov
imul
test
mov
orb
dec
pop
mov
lret
mov
sar
leave
push
ret
or
adc
outsl
lea
push
in
out
push
lret
inc
push
inc
or
lea
ljmp
sbb
cltd
pop
jp
lds
push
shll
jbe
fidivrl
push
inc
jmp
push
mov
xor
pop
push
ljmp
push
addr16
sub
sahf
ljmp
arpl
loopne
cmpsl
loopne
mov
adc
hlt
addr16
or
pop
add
mov
cld
xor
in
popf
jns
xlat
mov
loopne
xorb
shrl
lcall
add
mov
mov
add
cld
lret
jecxz
ljmp
push
pop
cmp
and
mulb
jl
cli
data16
inc
cmp
insl
pop
cli
and
inc
repz
push
mov
fcomi
ja
adc
aad
cltd
pop
lea
xchg
movsb
dec
ret
pusha
push
mov
mov
adc
dec
in
popf
out
xchg
lods
inc
cmpsb
stc
dec
in
cmp
fidivl
daa
or
sub
sahf
jp
inc
jl
in
cmp
dec
repnz
push
lods
xchg
cld
cmpsb
in
push
and
push
push
xor
in
jle
push
stos
cwtl
mov
xchg
mov
sbb
ret
fisttps
add
movzwl
pop
sti
pop
inc
lahf
test
sub
in
cld
xchg
sub
in
dec
ret
in
adc
mov
xor
fstpl
xchg
xchg
cld
dec
stos
test
and
mov
mov
loop
enter
scas
or
push
fiadds
jle
pop
sbb
and
mov
mov
pop
sbb
jle
out
sbb
int3
fstps
outsl
cli
pusha
data16
and
mov
orl
aaa
pop
jp
sub
fucomi
push
sub
call
testb
sahf
scas
mov
or
dec
ss
pop
mov
les
mov
jbe
adc
jb
cmp
inc
loope
add
jge
push
xchg
vandnps
sbb
incl
repz
dec
bound
dec
or
lsl
mov
repz
sub
movsl
sub
movsl
mov
stos
pop
jo
push
int
fnsave
inc
mov
xchg
movsl
mov
mov
mov
jae
sub
jecxz
call
jmp
push
jmp
push
mov
out
out
stos
rclb
and
das
sub
cmp
xor
fcompl
inc
or
mov
inc
lret
aaa
jmp
por
and
into
loopne
cld
shld
adc
popf
rcl
xchg
daa
push
dec
leave
dec
xor
and
xor
sbb
push
insl
lock
faddl
adc
pop
scas
mov
mov
fwait
inc
gs
dec
sbb
jl
mov
dec
lret
sahf
adcl
dec
add
enter
mov
push
and
leave
push
lret
gs
mov
sbb
sbb
cmpsl
and
cmp
and
push
loope
lods
cmpsl
sub
pop
insb
push
jno
out
mov
repz
mov
mov
push
or
and
lret
fdivs
inc
cmp
pop
push
dec
dec
pop
lock
imul
xchg
jle
movsl
fmull
movsl
mov
leave
inc
lcall
dec
in
and
jmp
js
mov
je
adc
sbb
paddsw
jnp
in
xchg
adc
jb
mov
outsb
mov
ret
mov
sahf
loopne
jno
daa
push
pop
fcompl
sub
and
inc
mov
fiadds
dec
insb
dec
lcall
jae
subb
dec
xor
adc
mov
xchg
xchg
xchg
mov
test
fiaddl
and
bound
xchg
adc
popf
sub
mov
sub
mov
negl
mov
jnp
cmp
and
jg
inc
mov
lret
repz
outsl
loope
cmpl
dec
push
inc
cli
pop
lock
push
push
out
cli
jle
movsl
jg
xchg
movsl
mov
xor
jmp
sbb
out
aad
imul
out
dec
out
push
jne
dec
andl
in
js
jbe
sbb
jb
inc
adc
in
inc
cmp
mov
mov
pop
pop
jmp
cmpb
and
fsubrs
sub
jmp
inc
lcall
clc
in
cmp
jge
pop
aas
jmp
stc
mov
ja
xchg
jb
xor
xor
mov
cltd
cwtl
jl
jg
lock
aas
mov
pop
sbb
pop
out
lods
pop
das
sub
lret
and
shll
js
push
adc
sahf
xchg
push
adc
out
xor
jns
mov
out
sub
scas
scas
push
mov
cmp
mov
ja
mov
sahf
mov
push
std
jmp
mov
iret
adc
cmp
ja
sub
mov
insb
test
jp
push
xor
nop
xchg
xlat
cmpb
dec
mov
cmp
mov
dec
push
push
in
or
or
xchg
clc
inc
cmp
gs
js
jle
pushf
ljmp
test
mov
fs
out
sub
jmp
shrl
out
dec
sbb
stos
mov
jbe
fs
add
mov
xchg
push
cmp
popa
mov
shrb
sarb
jb
push
shll
cwtl
xlat
in
add
enter
je
mov
cmp
in
fcomip
pop
xor
adc
or
adc
pop
stc
std
pop
or
arpl
sub
xchg
pop
fstl
andps
pop
sub
dec
mov
lea
out
dec
pusha
aaa
imul
imul
pop
int3
push
lds
inc
ds
cmp
mov
pop
add
jge
outsl
imulb
shl
bound
lahf
loope
cmp
push
mov
ss
pop
push
jbe
in
adc
lret
add
or
push
sbb
inc
clc
push
out
jmp
xor
das
in
mov
pop
pop
lds
dec
cltd
int
or
pop
gs
shlb
xchg
ja
fmuls
push
jmp
and
das
orb
daa
adc
jle
lock
mov
pop
mov
adc
xor
xlat
mov
imul
js
leave
and
jo
adcl
test
outsl
jbe
jl
mov
inc
mov
xchg
ljmp
jo
movl
pop
pop
fidivs
lahf
ja
mov
test
cmpsl
xorb
pop
sub
cltd
call
test
adc
adc
lds
lahf
push
inc
test
lods
clc
je
mov
mov
mov
imul
mov
aaa
pop
js
cltd
xor
es
cld
lss
sbb
clc
mov
cmpsl
adc
movsb
xchg
mov
pop
outsb
imul
inc
pop
cltd
jnp
fimuls
pushf
jnp
je
les
mov
orl
mov
das
in
or
imul
dec
mov
dec
pop
out
cmpsb
andl
sub
xchg
into
xor
call
mov
pop
cmp
jmp
dec
jge
insb
pop
inc
mov
arpl
hlt
test
ret
nop
jno
push
push
sub
xchg
ret
inc
in
insb
lret
xor
arpl
in
aaa
mov
mov
fnstsw
mov
outsb
cs
fmuls
and
or
mov
ss
dec
ret
jnp
mov
fcompl
mov
outsl
inc
jl
adc
xor
into
dec
pop
pusha
and
sarb
pusha
test
shlb
add
xchg
movsb
cmp
mov
addr16
aaa
and
push
pop
adc
adc
jg
enter
sbb
insb
inc
jnp
xlat
insl
in
cmp
fdivr
pop
dec
and
aaa
xor
mov
test
daa
xor
cltd
adc
fildl
in
out
jge
pop
inc
aad
sub
cmc
popf
imull
jbe
pop
sbb
jge
out
mov
iret
repz
mov
in
cmp
sti
mov
cmp
fnstenv
push
jle
arpl
arpl
insb
mov
jle
outsl
cmp
out
jne
inc
test
ja
hlt
loopne
imul
mov
arpl
push
into
adc
out
lods
stos
xchg
call
addr16
das
aam
or
xor
push
and
adc
xchg
dec
addl
push
fwait
xor
lods
out
xor
dec
in
adc
dec
push
loopne
seta
les
and
popf
mov
imul
jecxz
mov
popa
and
cmc
jbe
add
fs
adc
mov
dec
outsb
cwtl
xchg
inc
add
cmp
pop
imul
movsb
mov
jmp
add
clc
cwtl
xorb
pop
out
sub
fistps
cltd
mov
xchg
or
data16
das
push
pop
mov
lock
mov
pcmpgtb
es
pop
add
int
jnp
dec
cmp
cld
fbstp
mov
mov
mov
aaa
xchg
lock
int
push
sbb
cwtl
jle
add
scas
loope
or
in
fstpt
xlat
out
push
repz
lcall
jl
inc
adc
int
cmp
sbb
mov
fisubs
xor
mov
mov
mov
jl
loopne
inc
mov
shll
pop
cmpsb
push
push
lods
mov
lret
ret
lea
outsl
les
inc
sub
pop
rep
mov
outsb
push
xchg
mov
out
xchg
cltd
lods
xchg
inc
popa
sbb
scas
cli
loope
and
in
repz
loopne
jae
popa
insb
mov
loopne
and
std
add
movsl
nop
addl
xchg
jge
gs
in
insb
mov
jle
outsl
addr16
xchg
xor
lahf
sbb
push
adc
or
and
and
jae
add
jbe
jno
lds
cmp
cwtl
arpl
inc
imul
das
sub
out
xchg
xchg
imul
xchg
nop
dec
jae
ds
in
inc
shrl
int
dec
repnz
or
aaa
xor
subl
fists
test
dec
pop
mov
ret
mov
test
push
mov
and
or
jnp
mov
or
push
jecxz
pusha
cltd
and
repnz
mov
push
cmc
fstpt
into
xchg
xchg
in
loope
icebp
imul
in
xchg
push
sub
mov
mov
inc
xor
fucom
inc
iret
into
imul
fsubrl
lds
addr16
xchg
es
sbb
add
mov
sbb
xor
jle
add
pop
xor
jno
pop
cmpsb
gs
ja
jecxz
stos
and
arpl
mov
lret
scas
cltd
data16
dec
lods
test
adc
int
lods
mov
ljmp
inc
or
mov
push
cmpsl
aad
lea
loopne
add
popa
cmpsb
out
pop
and
fildl
sub
add
mov
jno
fistps
lret
add
sub
xlat
add
insb
dec
lcall
outsl
pop
fsts
mov
scas
sarb
and
testb
adc
xlat
cmp
push
arpl
jg
sti
fildl
xchg
mov
or
cmpsb
mov
das
pushf
lcall
shll
daa
xor
jno
push
imul
adc
fptan
cmp
mov
pop
pop
dec
cli
std
adc
es
mov
sub
xchg
add
push
cmp
lds
idivb
pop
flds
stc
mov
fcmove
mov
lock
mov
movsb
mov
fmull
pop
or
mov
shl
inc
rcll
test
cs
mov
mov
sbb
sub
sahf
lcall
imul
cmp
decl
pop
nopl
xor
jnp
sti
rorb
pushl
arpl
jle
int3
ffree
lret
iret
cli
dec
loope
xor
add
stos
jmp
sub
inc
daa
dec
or
imul
lea
std
push
lds
jecxz
cmp
into
adcb
mov
movsl
sub
jmp
fld
or
push
arpl
xchg
aas
sbb
fnstcw
lcall
je
shl
add
stos
adc
jo
sbb
adc
or
xchg
frndint
popa
loope
mov
xor
sbb
fsubs
dec
stc
shlb
fucomip
inc
mov
mov
decb
into
lcall
adc
insl
lret
js
mov
popa
flds
sub
cmp
inc
mov
sbb
jp
mov
xchg
ror
cs
and
push
aas
inc
inc
inc
add
mov
sub
mov
pushf
lods
mov
hlt
das
pop
sbb
mov
pop
popa
mov
add
test
mov
dec
adcb
cmp
loope
lock
sub
or
imul
inc
or
sub
xor
ljmp
cmpsb
cmp
and
andb
addr16
cld
or
cltd
mov
addl
xor
cmp
xor
ret
bound
pop
rcrl
jb
xor
es
test
jne
push
inc
xchg
sub
dec
addr16
std
xchg
and
lods
lcall
fdivrl
cmp
jne
or
mov
repnz
xor
dec
sub
jns
dec
push
callw
adc
out
xchg
adc
xchg
in
xchg
push
inc
mov
dec
mov
in
loop
nop
xchg
fisttpl
pushf
mov
dec
imul
push
push
int3
push
fcmovb
rorb
add
aad
js
adc
xchg
push
sub
stos
mov
pop
sub
jns
out
add
loopne
pop
and
fs
or
sub
sti
fiadds
lea
je
pop
cmpsb
add
rcl
fstpt
andb
jmp
das
adcb
mov
cmpsl
leave
fwait
push
cltd
movb
sub
and
leave
iret
inc
loop
xchg
gs
inc
mov
int
pushf
popa
imul
js
push
push
xchg
sub
daa
inc
rclb
stc
out
pop
jb
inc
sti
mov
popa
or
pop
and
fwait
xchg
inc
inc
mov
sti
xor
loope
jo
add
dec
push
jp
cmp
and
mov
jb
adc
or
mov
mov
inc
fiaddl
push
nop
push
data16
lret
sub
jns
test
jbe
pop
aaa
dec
in
xchg
js
fisubrs
jnp
sbb
jnp
iret
add
cmp
test
fdivs
dec
leave
dec
repz
xlat
and
mov
push
push
daa
or
adc
adc
dec
dec
mov
mov
into
fnstsw
cmp
popa
inc
nop
test
popf
mov
jb
icebp
pushl
jmp
addr16
xchg
xchg
mov
dec
sbb
lea
mov
mov
cld
add
pop
test
jo
leave
das
adc
movsl
lock
xor
xor
ffreep
adc
les
pop
add
xor
scas
sub
fcompl
mov
subl
jnp
xor
shlb
mov
das
loop
pop
mov
adc
sbb
adc
out
sbb
mov
cs
lds
cmp
movb
or
adc
loope
add
test
xchg
sub
jmp
addl
jmp
ds
pop
es
xor
jnp
fstpl
dec
jmp
ds
out
add
or
add
aas
and
icebp
je
jno
push
push
dec
mov
idivb
pop
fdivp
or
mov
sbbl
mov
notl
xchg
add
mov
mov
sub
adc
or
mov
cmp
pop
pop
mov
sti
push
jl
gs
mull
movsl
sub
sub
jmp
jle
out
adc
test
inc
jno
jge
pop
ljmp
cmp
jbe
or
push
mov
mov
out
pop
xchg
mov
pop
lock
shr
xor
adc
adc
pushf
pop
xchg
je
ficoml
pop
in
insb
movsl
jmp
bound
push
add
mov
in
dec
cmpsb
js
fs
or
inc
add
push
rolb
adc
aas
mov
inc
stc
or
jae
fsts
or
jno
aaa
loope
inc
cmpsb
lea
mov
push
mov
fistl
dec
lods
jge
or
leave
mov
mov
mov
stos
cmpsl
insl
add
into
mov
pop
inc
test
sub
pusha
loope
adc
pusha
dec
fdivl
pop
xchg
adc
lods
push
jne
fiadds
xchg
xchg
psrad
cmp
jns
push
enter
shll
sbb
jno
push
mov
or
dec
wbinvd
popf
outsb
sub
aaa
lods
aam
or
shlb
mov
pusha
loop
jno
popl
push
push
push
aaa
fdivr
adc
fwait
out
mov
and
cmp
rolb
incl
mov
sbb
dec
dec
loopne
sub
pop
push
out
sbb
iret
xor
pop
in
mov
lea
popf
sbb
fwait
add
cmp
xor
jb
jmp
inc
ret
outsl
jns
aas
and
inc
call
ljmp
outsb
hlt
xor
cwtl
jg
enter
mov
enter
add
orl
xor
mov
dec
add
clc
jns
rcrl
jmp
inc
iret
mov
aaa
test
mov
fbld
in
pop
jne
dec
adc
popf
jmp
adc
sbb
mov
inc
xchg
fwait
inc
xchg
loope
sbb
mov
loopne
cmp
push
jnp
dec
imul
js
jbe
dec
rclb
pop
lock
shr
iret
scas
adc
cmc
inc
cli
cwtl
push
rolb
mov
mov
test
mov
neg
mov
js
pop
pop
int3
pusha
inc
test
in
mov
je
mov
pusha
adc
push
divl
out
adc
lahf
dec
ret
inc
xchg
xlat
xchg
outsb
sub
clc
ror
cltd
fmul
test
inc
lcall
movsb
cltd
scas
and
push
add
iret
mov
push
ljmp
xor
push
in
jle
mov
btrl
adc
jnp
sarl
mov
out
inc
repnz
addb
and
or
rclb
push
jp
ja
fs
sub
dec
pop
add
lret
xor
adc
insl
mov
mull
pop
rcll
cmc
mov
in
popa
mov
jg
adc
sub
pushf
and
jno
mov
mulb
mov
stc
pop
jle
cmp
mov
movsb
xor
mov
call
mov
cmc
cmp
mov
frstor
cmp
inc
push
in
daa
xchg
cmpsl
outsl
addr16
xor
test
lret
ds
aas
adc
dec
and
and
jno
pop
mov
insl
in
divl
fcompl
sub
or
scas
adc
mov
and
pop
fimuls
into
xchg
mov
mov
adcb
loope
sub
icebp
jmp
out
add
enter
repnz
in
jne
mov
ret
sub
dec
inc
lret
xor
mov
add
mov
in
inc
jl
xchg
pop
fistl
pop
mov
jbe
pop
mov
lret
and
sbb
mov
dec
cvttps2pi
mov
or
sbb
cmpb
push
data16
iret
call
mov
pop
inc
jmp
iret
int
pop
test
sbb
adcl
adc
mov
popa
fidivl
ds
inc
mov
lahf
leave
mov
cmp
stos
cmp
mov
push
xchg
shll
aaa
stc
mov
push
pop
jl
inc
xor
popa
aaa
lret
mov
lods
repz
push
adc
jnp
mov
xor
adc
push
pop
xor
sub
call
sbb
data16
loope
testl
cltd
adcl
xor
inc
fcmove
fiadds
mov
push
pop
fcomip
out
imul
add
xchg
cmp
mov
aas
aas
adc
movsl
sub
or
lcall
test
cs
into
push
cld
pop
dec
mov
cmp
xacquire
pop
xchg
hlt
icebp
subl
mov
mov
mov
pop
pop
lret
lret
mov
dec
imul
inc
lds
jae
add
mov
xor
inc
inc
mov
mov
fcomps
push
mov
inc
in
push
ss
sub
loop
pop
dec
and
leave
stos
std
sub
xchg
xor
mov
cmpsl
adc
test
aas
sub
sbb
jbe
negb
filds
sbb
mov
ficoms
add
xchg
pop
addr16
stos
ss
mov
loopne
fsubrl
out
ljmp
cmp
jle
mov
lock
sbb
mov
adc
mov
dec
popa
stos
insb
ljmp
js
sahf
in
jle
xor
sti
cmp
inc
test
imul
fwait
imul
push
gs
decb
mov
pop
pop
and
push
mov
aaa
mov
lahf
push
push
jecxz
int
push
andb
mov
push
inc
test
push
call
test
mov
push
sti
dec
popa
fucompp
xchg
push
mov
les
loop
test
lss
test
or
cmp
daa
movsb
xor
pop
pop
loope
out
mov
mov
shlb
outsb
cli
pushf
or
mov
fistps
push
pusha
ficompl
pop
ret
inc
cmpsb
inc
outsb
push
sar
pop
ljmp
dec
lahf
ret
dec
cmc
popf
or
xor
or
jbe
inc
hlt
lret
enter
cli
and
js
mov
or
add
lock
mov
sub
xor
ret
jno
scas
fidivs
stos
into
pushf
adc
dec
mov
test
xchg
jl
pop
iret
loop
in
inc
xchg
mulb
insl
js
add
sub
add
cs
mov
cmp
out
mov
xor
mov
repz
pusha
jb
mov
lcall
js
adc
mov
mov
xor
adc
out
mov
jne
mov
add
aad
push
xchg
sbb
sahf
adc
mov
mov
mov
cmp
jg
sti
and
or
es
push
push
lds
dec
jbe
into
cmpsl
xchg
inc
jmp
or
jo
sbb
push
aad
push
jnp
bound
pushf
loopne
stc
inc
add
pop
cmp
es
dec
and
sbb
fadd
mov
out
lds
mov
fucom
fadds
xcrypt-ofb
cmpsl
sub
fmuls
adc
cld
lret
js
fnsetpm(287
mov
inc
ret
jns
push
add
jmp
mov
jmp
shlb
test
jl
mov
clc
cmp
daa
ficoml
pop
in
xchg
cli
lahf
fisubrs
dec
pop
jle
and
xor
aaa
sbb
in
or
stc
xchg
popf
pop
es
mov
or
push
gs
push
mov
popa
xchg
xchg
adc
pop
jg
jb
mov
xchg
in
ja
jb
sahf
and
ss
dec
fcomps
into
push
fs
sbb
fstpt
js
shl
jmp
subl
ret
insl
add
imul
out
shl
and
imul
leave
mov
xchg
loope
js
cmpsl
dec
lret
sbb
mov
aaa
iret
pop
lds
into
imulb
dec
xor
pushf
test
sbb
fbld
push
lock
fistl
inc
fucomi
arpl
ret
push
jp
push
mov
mov
cmp
push
adc
jb
mov
xchg
adc
or
inc
test
add
cmpsl
rcrb
hlt
scas
stos
dec
adc
fcoms
je
or
loop
pop
cmpsb
cmpsb
jge
out
movsb
cmpsl
push
jge
mulb
adc
mov
sub
int
sub
stc
pop
cmp
inc
daa
or
xchg
sub
outsb
and
pop
inc
mov
pop
push
cmpsb
subl
int3
hlt
fisubs
xlat
push
sub
or
add
cwtl
loope
adc
fstl
lcall
adc
or
leave
ja
pop
imul
js
fidivrl
mov
clc
pop
jae
imul
cmp
inc
mov
push
sbb
jb
jnp
cli
sbb
or
js
int
hlt
shll
sbb
ret
push
rcrl
mov
jmp
pop
jno
xchg
rclb
jl
adc
add
pop
pop
cs
mov
push
mov
sbb
jns
hlt
mov
push
enter
push
mul
jbe
dec
and
fsubrs
xchg
xor
mov
cmpsl
adc
test
das
jnp
testb
mov
pushf
jb
mov
mov
jne
sub
push
orb
cmpsb
jns
dec
jnp
adc
pop
push
in
sbb
jge
lcall
xchg
adc
add
sbb
inc
xor
std
shlb
inc
ret
sub
dec
cmpsl
iret
or
or
pop
std
aas
jmp
or
inc
test
add
xchg
xor
stos
pop
pusha
in
insb
sbb
pop
ret
fwait
push
mov
pop
imul
mov
icebp
rclb
jne
pop
jo
adc
inc
insb
scas
repz
pop
fdivrl
push
or
lock
repz
or
dec
inc
dec
inc
push
shll
dec
jnp
ret
test
jb
pop
daa
test
pop
pushf
sbb
jl
in
add
enter
movsl
std
rcl
xchg
adc
rolb
or
in
or
jb
in
push
rcll
js
pop
push
ss
fisttpll
cmp
pop
aam
nop
inc
gs
jg
push
cmp
and
daa
push
sub
jae
pop
shl
inc
push
in
or
test
cmp
loopne
bound
gs
jp
mov
push
scas
out
inc
sbb
jo
xor
pop
inc
push
jle
scas
inc
dec
insb
aad
mov
js
es
mov
jb
jmp
xchg
push
mov
dec
xor
lahf
movl
mov
inc
add
popa
push
out
or
sahf
call
test
sub
cmp
inc
je
sahf
xchg
xchg
push
clc
mov
mov
xor
sti
out
adcb
ja
xchg
xlat
insb
sub
xor
cmp
shll
dec
mov
cmp
pop
scas
dec
sub
cmp
add
mov
inc
inc
arpl
add
clc
xlat
xor
cmp
pop
mov
mov
in
add
int
xlat
fstpt
addb
mov
add
mov
sub
cli
cwtl
in
into
in
or
add
mov
jmp
fcomip
jo
jbe
js
ljmp
pop
inc
out
loopne
sbb
and
ljmp
jb
stos
mov
ja
sbb
cmp
repnz
insl
xchg
hlt
mov
adc
in
mov
flds
out
lods
cmp
pop
movsb
add
ds
mov
add
mov
popa
std
test
mov
xor
jns
mov
bound
dec
adc
mov
jo
jge
cli
mov
sbb
vmwrite
shrl
adc
add
pop
sub
roll
sub
add
dec
mov
jnp
and
jecxz
sbb
push
adc
cmp
scas
out
xor
mov
std
das
push
or
jmp
mov
xor
cltd
mov
jl
leave
fstl
dec
das
add
pop
cs
lea
aad
pop
outsb
imul
pop
repz
test
es
or
jp
fistps
popf
dec
les
es
inc
push
jle
pop
test
lret
insl
cmc
fmuls
lret
pop
mov
pop
or
mov
stos
xchg
bnd
xor
xor
mov
mov
add
cli
inc
mov
leave
inc
imul
push
hlt
les
xchg
lds
sahf
mov
test
sbb
cmp
imulb
mov
mov
mov
imul
jmp
sbb
xor
push
sub
call
int
sbb
or
es
xor
sub
fidivrs
cmpl
out
add
add
cli
pop
call
jg
aas
cmp
outsb
in
push
push
cwtl
stos
inc
cs
scas
lret
rorl
in
push
xor
iret
pop
sub
add
dec
xchg
jne
push
ja
addr16
adc
jmp
inc
xchg
iret
aam
xor
imul
std
and
outsl
fwait
lods
jae
xchg
lret
jg
jmp
or
mov
bswap
cmp
dec
daa
out
cwtl
popa
andb
cli
adc
imul
jecxz
das
cwtl
mov
xor
nop
fiaddl
and
or
repz
mov
adc
cmp
test
mov
fldl
jmp
sbb
sub
fistpl
std
jp
lcall
mov
fdivrp
and
cltd
and
repnz
mov
or
fwait
inc
mov
in
scas
mov
enter
pop
xor
outsb
loope
xchg
push
pop
out
push
mov
mov
cmpl
xchg
in
fiaddl
push
fcomip
pop
orb
addr16
or
adc
data16
xorl
xchg
sub
ret
mov
jg
insb
mov
jle
outsl
mov
pop
sub
int
orl
int3
and
cmp
bound
or
inc
pop
aad
test
sti
adc
dec
xor
xchg
pushf
xchg
push
adc
fiaddl
ss
bound
inc
dec
imul
pop
or
sub
loop
jecxz
and
mov
movsb
ret
clc
mov
lret
mov
orl
inc
xor
or
out
xchg
insl
in
mov
mov
lret
sti
sti
xlat
cmpl
and
lahf
mov
sbb
adc
or
enter
add
es
push
xchg
adc
pop
mov
iret
out
popf
stc
inc
or
pop
cmpl
add
dec
cmp
inc
cmpsb
sbb
pop
adc
jg
dec
sbb
jno
mov
inc
cmpsb
and
ret
andb
int3
jns
outsl
fidivrl
popa
jmp
mov
imul
mov
pop
mov
sub
in
sbb
lret
call
mov
or
push
popf
insb
test
cwtl
fwait
push
xor
insb
mov
cmp
dec
mov
negb
or
inc
or
mov
fbld
daa
jecxz
cs
mov
or
packssdw
lcall
sub
inc
scas
fstpl
dec
jmp
lods
dec
xchg
or
jb
imul
out
jb
sahf
and
dec
stos
dec
fcomps
into
push
fs
rep
sbb
fstpt
js
rcrl
jmp
subl
ret
dec
xor
and
cmp
fdivp
jae
jmp
xor
popa
out
cmp
sbb
mov
lret
popf
sbb
daa
iret
mov
dec
pushl
stc
rol
pop
pusha
jg
pop
sbb
fists
cmc
hlt
pop
sub
bound
cltd
shrl
xchg
and
mov
mov
xchg
loope
dec
jb
call
rclb
insb
call
jne
inc
pop
xchg
mov
mov
jb
pop
sbb
imul
iret
push
jne
jo
dec
jecxz
xchg
js
out
enter
add
cmp
outsl
je
push
push
test
add
mov
icebp
dec
sbb
xlat
add
lock
lahf
jne
out
fidivrs
daa
or
stc
mov
pop
cmp
mov
sub
jmp
dec
int3
hlt
mov
adc
aam
dec
adcl
sub
enter
xchg
jbe
and
mov
xor
mov
cmp
imul
add
das
adc
adc
fistps
stos
inc
inc
mov
push
fcomps
sahf
sbbl
nop
aad
lret
xor
mov
cmp
or
gs
int
iret
pop
and
sbb
lock
and
es
adcl
scas
adc
fiaddl
imul
mov
fucomi
sbb
add
jmp
aam
jbe
xlat
aaa
sahf
fsubs
mov
inc
movsb
dec
insb
cmp
jbe
add
call
push
in
scas
xchg
inc
xchg
ret
movsl
cmpsl
popa
adc
sub
xor
mov
ljmp
push
gs
dec
fildl
push
cwtl
sub
jb
loop
lds
add
daa
ljmp
cltd
bound
cmp
lcall
cmp
ret
mov
fs
popa
add
cmpsl
dec
mov
fstl
and
insb
adc
aam
mov
xchg
xchg
aam
lret
ret
mov
and
out
sbb
adc
xchg
lahf
mov
mov
mov
or
jb
and
push
scas
shlb
xchg
in
adc
xchg
and
jl
inc
inc
mov
jg
xchg
mov
orl
or
out
in
dec
insl
movsl
out
stos
mov
cmp
mov
xchg
mov
gs
test
lss
es
jno
cmpsl
and
dec
jnp
fstpl
dec
jmp
mov
pop
out
dec
push
dec
leave
sbb
call
pop
and
xchg
and
pop
movsb
into
push
fs
jg
jnp
cmpb
insb
jg
mov
dec
scas
lods
lds
push
xchg
or
cmp
adc
sub
test
mov
pop
inc
es
mulb
outsb
rcr
sub
hlt
fldt
test
mov
pop
and
addl
das
outsl
xchg
movsl
mov
dec
mov
xchg
movsb
add
inc
or
popf
mov
cwtl
dec
sbbl
and
push
shll
jne
jg
xchg
push
mov
test
xor
mov
fistpl
jae
mov
mov
cmovge
cmpb
stos
mov
jnp
mov
mov
jmp
rcl
insb
sub
xlat
ljmp
dec
add
and
mov
adc
dec
int
cmp
jle
aam
cmp
jle
xchg
jo
jae
into
sub
xchg
sbb
xchg
push
sar
lcall
rdmsr
fnstsw
dec
cwtl
pop
ret
cli
mov
sub
cmp
inc
enter
mov
mov
aad
stc
dec
enter
inc
mov
cli
stc
std
or
mov
jmp
push
popf
xchg
popf
loopne
sub
xlat
pop
insb
push
jb
mov
mov
add
mov
mov
popa
push
rcl
mulb
andl
out
xor
in
cli
pop
jl
xor
pop
aad
imul
lea
aaa
sbb
push
inc
faddl
sbb
adc
add
dec
neg
andl
pop
mov
jg
daa
rolb
popf
push
sub
sti
add
mov
popf
sbb
jne
sarb
inc
shll
mov
inc
out
imul
cltd
andl
cmc
into
adcb
out
fidivrl
push
mov
adc
pop
outsb
push
jp
mov
adcb
cltd
dec
pop
out
jne
roll
outsl
mov
cwtl
add
xchg
pop
mov
xchg
cmp
ret
jmp
xor
inc
js
push
jbe
lock
and
xor
cs
push
xchg
xchg
lcall
test
fwait
pop
mov
das
cmpsl
push
in
xor
mov
lods
mov
paddw
cmp
imul
mov
shrb
flds
out
sbb
out
mov
xchg
xor
cmpsb
add
push
divb
inc
mov
js
xchg
inc
mov
fmuls
add
cmp
mov
int3
push
das
jle
fcoms
das
xor
inc
or
cmpsl
xlat
iret
cli
data16
xchg
jge
popf
lock
addb
xchg
push
movsl
jle
mov
inc
hlt
adc
insl
jl
dec
or
test
sti
rep
lock
fstpt
into
xchg
mov
xchg
fsubl
or
sahf
mov
std
xor
sbb
sbb
inc
out
ret
or
push
adc
outsb
cmpsl
sbb
cmpsb
push
pusha
jg
cmp
pop
movsb
test
pop
xchg
and
stos
sub
lcall
push
lock
jb
sbb
xor
repz
int
js
clc
or
xor
testb
cltd
push
sbb
lret
lock
or
jg
pop
iret
lcall
mov
dec
push
push
popa
cmpsb
scas
and
mov
mov
mov
andl
fildl
sti
sbb
enter
iret
divb
sbb
inc
roll
scas
or
xor
mov
scas
sbb
cmp
push
addr16
xor
push
mov
imul
jb
sub
scas
push
xchg
dec
push
and
out
mov
mov
add
fdivrp
sbb
sbb
or
mov
stos
mov
mov
stc
arpl
adc
shlb
xchg
lea
fsub
xor
pop
inc
push
jle
ret
shrl
pop
sahf
in
in
pop
mov
stc
fsubr
pop
aad
fwait
movb
mov
cmpsl
aam
xchg
mov
and
jecxz
adc
mov
inc
ljmp
adc
sbb
sub
roll
inc
sbb
sbb
pop
mov
mov
pushl
popf
loop
int3
dec
xchg
jns
push
int3
jnp
popf
in
mov
adc
lock
incl
cmp
pop
dec
mov
pop
pop
fs
inc
ss
mov
daa
dec
or
sbb
mov
lret
mov
sub
mov
push
cmpsb
pop
cmp
xchg
gs
jg
xchg
out
jmp
rorb
pop
pop
pop
mov
pop
maskmovq
divl
sbb
fwait
inc
enter
add
imul
add
test
lock
jae
sub
ds
aam
adc
inc
push
pop
jle
adc
shlb
shrl
xchg
xchg
insl
sbb
xchg
out
negb
pop
sti
push
shrl
test
arpl
jle
push
repz
cwtl
out
std
adc
stos
pop
adcb
pusha
cmp
xchg
cmp
xor
push
mov
inc
and
dec
daa
out
add
fwait
stos
icebp
sbb
jns
popl
pop
nop
je
repnz
jmp
or
aas
pop
sub
xor
dec
jno
jno
xor
int
mov
fdivs
push
je
mov
cmc
arpl
jg
imul
push
push
shll
pop
ret
adc
add
fstl
adc
enter
mov
pop
add
frstor
in
shll
out
out
cwtl
mov
insl
push
mov
inc
and
addl
jne
enter
sbb
push
sub
xor
mov
outsl
cmpsb
xchg
sbb
cmp
xor
sahf
aad
daa
jl
dec
ja
insb
mov
xchg
pop
adc
push
lods
mov
jno
dec
xchg
inc
std
ss
sub
leavew
addb
sbb
rcrb
mov
push
rorl
jmp
mov
lds
fucomip
cmpsl
xchg
orl
cs
add
rcrl
addr16
mov
push
ficompl
xor
jne
daa
fdivs
push
fs
mov
cmc
arpl
jg
mov
shrl
push
push
btr
ret
sub
es
add
mov
pop
enter
jno
enter
cs
das
frstor
js
shll
out
inc
daa
cwtl
mov
pop
push
mov
inc
and
addl
jne
enter
sbb
push
sub
xor
add
outsl
cmpsb
testl
packsswb
loopne
aad
daa
jl
jnp
xor
cltd
adc
testb
cltd
push
adc
ljmp
adc
or
stos
fs
mov
push
pusha
pop
inc
cli
xor
mov
inc
cmpsl
xor
int
in
or
std
pop
or
pop
mov
sub
hlt
aam
pop
fbstp
scas
and
jmp
repnz
test
jle
adc
dec
lahf
xchg
xchg
mov
dec
push
ja
jp
outsb
ja
cmp
mov
cmc
arpl
add
jecxz
mov
call
xlat
push
pop
out
xchg
dec
in
scas
rdmsr
push
sbb
sub
inc
in
jne
std
sbb
push
sub
lock
inc
cmp
inc
es
fsubrl
cmpxchg8b
lds
cmp
lds
mov
mov
sbb
mov
mov
lret
loope
mov
loope
daa
jb
and
sbb
mov
mov
fs
lods
cmpsb
pop
sti
adc
out
add
sbb
mov
cmp
enter
mov
mov
ret
cld
shlb
nop
dec
or
push
dec
sbb
push
adc
mov
out
lret
mov
pop
push
in
cmc
push
fsubrs
icebp
jno
loopew
jno
or
and
cltd
jnp
or
scas
and
mov
and
scas
cwtl
mov
into
out
lcall
out
mov
rolb
lds
pop
pop
mov
inc
les
fwait
and
xchg
lcall
shrl
jns
adc
push
and
lods
push
xchg
jecxz
ds
xor
fdivrs
ljmp
bound
push
fsubl
mov
hlt
cmp
cmp
push
sub
loop
hlt
fisubrs
lea
and
mov
jns
cmp
mov
inc
ds
dec
out
mov
adc
movsb
test
test
mov
inc
dec
sahf
mov
sub
xchg
adc
repnz
inc
xchg
loopne
imulb
dec
push
in
ja
add
popa
cs
movsl
pop
addr16
mov
ja
aam
je
popf
xchg
push
hlt
test
cli
mov
inc
xor
jmp
ret
push
or
push
ss
in
cmp
lds
jmp
stc
mov
stos
aam
jb
cmp
sub
cmp
nop
add
xchg
das
mov
sub
adc
sub
inc
push
adc
cmpsl
in
xor
sub
inc
subl
fstps
mov
pop
jo
sbb
or
mov
mov
lahf
cmpsb
push
enter
enter
push
stos
mov
mov
mov
insb
dec
push
data16
clc
xchg
fsub
cmpb
push
jne
inc
xor
idivb
daa
sbb
fsubl
popf
aas
sub
add
stos
xchg
jne
andl
jnp
jle
fs
adc
out
pop
jmp
inc
jge
push
cmpl
mov
xor
shlb
loop
lahf
leave
movsl
ja
push
xlat
jle
cmp
jle
xor
nop
dec
outsb
mov
aam
mov
lods
mov
stc
loope
cmp
jb
outsl
push
dec
lods
stos
pop
cmp
push
push
jnp
xor
mov
mov
jns
jo
sbb
lret
mov
stc
out
pusha
mov
addr16
adc
mov
lods
cmpl
mov
loopne
push
or
movsl
mov
shl
fistl
mov
insl
and
dec
push
movsl
pop
xor
pop
fisttpll
out
or
mov
xor
loope
add
add
loop
repz
cmp
bound
ljmp
jg
pop
mov
addb
xor
inc
mov
int3
dec
sub
shlb
pop
in
dec
inc
inc
loopne
push
insl
cmpsl
cmp
in
lds
stos
xchg
orl
lret
mov
xchg
xchg
inc
lret
sbb
push
jg
stos
cltd
loope
bnd
mov
inc
in
and
mov
inc
and
cmp
xchg
adc
sti
fisttpl
out
adc
mov
in
sbb
pop
push
repz
dec
cli
cwtl
xchg
or
sbbl
sbb
jge
daa
and
cmp
aas
cmp
xchg
fwait
mov
adc
cli
stos
jle
inc
std
mov
sub
mov
mov
addb
jae
scas
ret
movsb
cwtl
lds
xchg
dec
aad
dec
push
fcmovbe
cmp
sbb
mov
cltd
xorl
mov
dec
add
cltd
push
adc
pop
sar
add
mov
mov
arpl
inc
test
int3
popf
imul
scas
sub
dec
pop
shlb
movsb
mov
or
loopne
call
jbe
mov
outsb
addr16
cli
repz
rclb
test
xor
add
dec
iret
mov
cmp
lea
and
cltd
shll
jb
imul
add
in
call
in
mov
xor
aam
enter
cmp
mov
sbb
ret
stc
enter
out
fwait
pop
nop
loop
aaa
mov
icebp
sub
jp
lcall
add
and
daa
lret
repz
cwtl
call
test
xchg
insl
sub
nop
scas
repnz
add
or
pop
cmp
xchg
cmpsb
out
imul
mov
mov
je
lods
add
dec
xor
cmp
jns
cltd
incb
mov
ret
xor
out
test
ret
andb
imul
push
sbb
inc
mov
and
test
inc
out
cwtl
stc
idiv
jnp
fnstcw
jmp
inc
add
std
movsl
pop
movsl
push
mov
movl
xchg
push
hlt
test
inc
dec
sub
bound
or
pop
pop
add
cmp
pop
push
ja
cli
sbb
ja
roll
push
rclb
jae
dec
test
fsubrs
or
sub
sbb
adc
pop
cli
sub
dec
scas
mov
pop
xor
fwait
pop
nop
jno
aaa
lret
or
icebp
sub
lret
mov
mov
mov
push
adc
sub
iret
loop
leave
test
jae
inc
bnd
or
mov
and
pop
pusha
mov
insb
sbb
dec
sub
int
dec
mov
mov
and
imul
call
lock
cmpsl
push
fnsave
sbb
cmpsb
cmp
jle
mov
repnz
adc
cwtl
stos
dec
xchg
add
xchg
aad
rorb
loope
push
mov
lcall
daa
lods
add
inc
push
into
jecxz
jbe
inc
cmp
aam
jne
or
scas
sub
mov
jge
ja
arpl
iret
pop
stc
push
or
dec
cmc
or
fldt
popa
add
jae
leave
stc
aaa
push
sub
enter
popa
into
or
es
xor
jmp
adc
xchg
sub
mov
fistpll
cmp
jae
sub
test
push
lds
out
scas
jl
pop
add
stc
outsb
xchg
xor
ret
mov
lahf
pusha
pop
mov
mov
fs
xchg
out
mov
test
lahf
dec
out
xchg
jae
nop
mov
jg
test
js
jno
mov
mov
idivl
push
and
stos
dec
mov
sub
aaa
and
fnstcw
rolb
lahf
js
adc
mov
jns
scas
add
push
inc
mov
ret
ficompl
pop
test
mov
call
popa
lahf
xchg
mov
mov
cs
dec
xlat
cmpsb
lret
xorb
push
int3
mov
mov
aaa
rcll
out
dec
mov
enter
xchg
push
lret
fdivp
xor
ret
repz
adc
lea
subb
cmp
mov
xchg
sbb
push
xchg
xchg
mov
icebp
mov
adc
insl
les
pop
add
leave
sbb
fwait
jnp
cmc
jbe
pusha
pushf
stc
mov
or
and
rolb
popa
nop
mov
cltd
call
add
xor
out
cmpsb
stc
ret
andb
pop
cmp
sbb
fdivrl
repnz
and
bound
sti
mov
and
add
js
adc
cwtl
outsb
mov
outsl
push
lcall
mov
sbb
cmp
lock
aaa
mov
mov
push
and
aas
add
dec
pop
dec
clc
aaa
cs
cmp
cmpsb
lret
cmp
data16
add
pop
xor
in
pop
pop
dec
popf
mov
jle
testb
mov
and
mov
loopne
testb
or
flds
cmp
and
xchg
sbb
shll
cmp
sub
nop
scas
scas
push
cmp
adc
stos
cmpsl
xchg
cmp
int
stos
aaa
mov
push
pop
dec
push
stc
and
shlb
scas
xchg
lret
test
sub
and
pop
xchg
mov
jg
enter
jg
sbb
mov
mov
idivb
push
push
stos
dec
mov
inc
inc
loopne
sub
dec
ja
rorb
cmp
jno
test
jmp
outsb
rcl
push
imul
adcb
out
lea
jno
stc
push
movsl
ja
push
sbb
cmp
xchg
xchg
push
ljmp
js
mov
lods
mov
fs
cwtl
jbe
les
cltd
pushf
scas
ret
push
scas
jmp
xchg
iret
jns
sti
add
cli
ficoms
xor
xor
clc
psrld
sub
adc
or
xchg
lea
lea
xchg
gs
vcomiss
cltd
test
pop
in
sbb
push
movsl
mov
out
idivl
sti
pop
in
stc
mov
int3
or
mov
fldlg2
addr16
orb
cmp
adc
push
std
insb
call
frstor
or
imul
divb
rorl
jmp
mov
out
iret
cmp
cld
setnp
push
mov
pop
ffree
pop
movsl
das
repnz
daa
xor
and
out
dec
pop
roll
adc
mov
push
fwait
mov
mov
mov
cmp
mov
mov
fstpt
scas
rcl
lods
insb
mov
imul
subl
fsubs
xor
inc
pop
icebp
loopne
push
aad
repnz
pop
cli
cltd
pusha
cmpsl
insb
into
or
jle
cmpsb
and
sub
dec
pop
fsubrs
add
ret
pop
stc
jo
fildl
outsl
fnsave
push
adc
pop
or
push
xchg
hlt
aam
mov
arpl
pop
js
add
mov
inc
pop
aad
jle
sti
adc
push
jl
test
shrb
dec
xor
sbb
pusha
xchg
jne
mov
xor
loopne
adcb
nop
or
das
cmpsl
cmp
test
xchg
cld
cmpsl
adc
ret
sub
xchg
ficompl
inc
inc
sbb
adc
mov
insl
lock
insl
adcb
jbe
fs
call
mov
arpl
cmp
inc
cli
mov
insb
mov
aad
fstpt
jg
cwtl
into
scas
in
jb
xchg
icebp
scas
push
cwtl
cmpsl
mov
popa
das
inc
rcl
fdivp
dec
mov
fisttpll
repnz
js
xchg
adc
xchg
lret
ljmp
movsl
sub
mov
lahf
insl
cmp
je
outsl
in
mov
or
out
jns
xor
leave
mov
rclb
or
and
mov
add
lcall
push
repnz
test
test
sub
test
popf
std
add
int
cwtl
mov
dec
andl
test
dec
and
fbld
fucomi
cmp
cmp
dec
sub
daa
jle
out
rcll
add
ja
inc
mov
out
dec
pop
cmp
pop
pop
and
pop
or
sub
mov
mov
arpl
push
fs
sarb
ljmp
mov
sbb
add
push
ret
mov
lds
out
pop
in
cltd
jp
xchg
xor
jmp
xor
adc
jae
jecxz
adc
and
dec
inc
sub
xchg
cld
leave
mov
sbb
mov
jmp
cmp
mov
bound
jno
pop
hlt
and
dec
lods
pop
aaa
shrl
add
es
fidivs
orb
cltd
jge
cmp
mov
xchg
push
mov
addb
sti
dec
xchg
jle
sahf
mov
mov
mov
dec
dec
outsl
mov
filds
in
gs
and
daa
test
lods
sbb
shrl
jno
mov
hlt
pop
outsb
jg
cltd
adc
jb
jmp
test
xor
outsl
pop
cld
aas
and
sub
cmp
dec
sub
push
fwait
sti
rep
sbb
jge
js
sarl
sahf
subl
cmp
std
mov
pop
cmp
push
pop
lods
mov
fisttpll
mov
dec
xchg
fisubl
inc
imul
popf
sbb
and
scas
or
add
mov
aad
mov
xchg
mov
jne
test
push
loope
and
leave
push
daa
out
insb
dec
sbb
mov
test
ljmp
inc
leave
ret
fnstcw
add
movsl
xor
dec
xor
xor
loopne
jb
mov
insb
xor
sahf
jecxz
sbb
mov
and
jo
ss
inc
mov
pop
mov
or
mov
add
sub
jl
shrl
ja
bnd
aaa
movsb
outsb
sbb
testb
into
nop
and
mov
jnp
xlat
mov
cmp
popf
xchg
fisubrs
scas
sub
out
loopne
sarl
mov
sub
bound
sbb
add
add
pop
and
xor
sub
pop
xchg
sub
dec
js
add
pop
push
pop
xchg
or
push
inc
xor
lods
mov
test
inc
sbb
xor
shrb
or
sbb
push
in
mov
loop
sbb
popf
insb
sbb
and
cs
inc
leave
add
fwait
mov
dec
gs
and
mov
fdiv
jns
movsb
sbb
pop
mov
std
adc
data16
sbb
int
gs
sar
and
mov
ljmp
pop
repnz
dec
and
out
jb
and
inc
cmp
mov
outsb
push
jnp
and
mov
stos
call
or
xchg
jp
in
movsl
test
xor
xor
xor
ret
inc
mov
iret
jne
push
ficoml
aaa
sbb
pushf
loopne
jnp
xchg
xor
repz
push
xchg
sub
ret
jecxz
fcomps
cltd
daa
fld
pop
mov
je
xchg
inc
xor
shl
xchg
daa
loopne
dec
mov
mov
in
mov
out
enter
ficomps
adc
push
mov
movsl
jg
xchg
lea
test
hlt
sub
fiaddl
imul
or
jp
mov
loopne
fistps
movsb
sbb
xchg
jnp
xor
mov
mov
jno
mov
xchg
inc
push
bound
cltd
xlat
or
or
and
movsl
cmpsl
cmp
mov
xchg
arpl
xchg
cli
xchg
pop
movsl
or
jae
imul
movsl
or
movsl
mov
jb
xchg
test
push
mov
cmp
jge
out
jb
mov
xchg
dec
inc
es
cwtl
aad
fsts
xchg
sahf
and
inc
mov
push
lds
dec
arpl
mov
insl
out
je
sub
das
icebp
push
mov
sub
loop
sbb
out
dec
in
callw
ja
dec
mov
stos
xor
cmpb
lea
add
mov
mov
mov
inc
in
pop
rorb
int
neg
arpl
push
out
cmp
cmp
dec
pop
adc
adc
test
aam
iret
xchg
cmpsl
jl
hlt
xlat
add
xchg
movsl
data16
cltd
pop
push
mov
iret
outsb
and
testw
add
lds
imul
sbb
lods
mov
mov
mov
mov
or
jmp
pop
mov
into
negb
xchg
das
sbb
xor
iret
and
dec
fsubrp
aaa
or
inc
adc
xchg
repz
sub
xor
adc
jb
cmp
pop
pop
shrl
mov
inc
pop
sub
mov
push
dec
fisttpll
dec
or
nop
js
xor
movsb
mov
adc
inc
adc
adc
lock
cmpl
mov
sub
xor
frstor
mov
addb
int
xor
add
cmpsb
js
mov
jno
mov
sub
in
outsl
leave
cli
out
adc
cmc
push
xlat
push
movsb
addr16
sub
mov
mov
mov
fcompl
subb
lea
sbb
cmp
push
mov
push
jge
repz
faddl
or
push
dec
lods
mov
dec
les
pop
sbb
mov
sarb
imull
outsl
popf
push
sti
push
adc
lcall
adc
xchg
jns
fadd
push
xchg
jno
dec
jne
mov
pop
lds
es
into
push
mov
mov
push
adc
clc
out
pop
adc
mov
sbb
mov
mov
lcall
arpl
push
test
sbb
sub
xor
inc
subb
mov
nop
jns
mov
icebp
mov
out
adc
inc
sub
dec
sub
inc
test
jmp
andb
inc
inc
aas
mov
lahf
leave
cmp
popa
inc
cmp
lcall
adc
mov
jae
int3
jae
dec
push
arpl
dec
jle
pop
nop
mov
shlb
sbb
jnp
fs
cli
xor
cltd
inc
stos
hlt
shl
lock
cli
ja
pop
nop
jbe
lcall
lret
iret
mov
insb
fs
js
xchg
or
test
jecxz
fbstp
mov
xchg
mov
sub
stos
or
sub
cmpsl
stos
scas
shll
jo
pop
inc
les
xchg
xor
push
xchg
sub
in
lahf
xor
into
loope
adc
fsubl
data16
xchg
or
aas
inc
pop
xor
jecxz
loopne
scas
rcrl
ja
imul
ja
pop
mov
outsb
leave
dec
adcl
xchg
mov
testb
lret
rcrl
push
inc
daa
jb
inc
stc
inc
pop
add
push
inc
insb
sahf
jb
jne
fsubr
ljmp
cld
dec
pushf
pop
or
xor
stos
jno
lret
stos
push
bound
aas
mov
jbe
push
test
dec
imul
jo
push
les
sbb
xor
popa
push
enter
add
in
pop
add
lods
fdivp
jp
jo
mov
bound
cli
out
jo
sti
test
inc
bound
push
and
inc
push
gs
je
inc
sub
adc
or
adc
sub
out
aam
lahf
lret
mov
xchg
int
sti
pop
loop
dec
leave
test
mov
movsl
test
ffreep
rorl
sahf
out
xchg
test
push
test
push
xchg
xor
ret
mov
mov
mov
mov
ret
js
add
push
mov
pop
adc
outsl
pop
std
aas
xchg
lcall
fisubrl
mov
push
rcrl
test
pop
call
and
and
divb
ret
add
int3
adc
adc
pop
cmpsl
jmp
adc
cmp
inc
jmp
push
cli
iret
sbb
lock
mov
lahf
xor
xor
data16
or
jg
js
cli
push
loop
outsb
out
arpl
mov
jne
cmp
xchg
add
es
shll
popf
rcrl
cmp
or
js
xor
jmp
mov
inc
cs
shll
mov
imulb
pop
add
add
push
out
in
and
push
fldl
loopne
adc
lods
push
out
inc
out
dec
test
fwait
or
dec
scas
in
icebp
dec
jl
repz
lea
pop
mov
enter
adc
sub
push
ficompl
dec
mov
repnz
clc
in
inc
mov
and
or
push
jbe
std
mov
cmp
mov
arpl
cmp
repz
aam
push
cmc
xchg
xlat
jmp
mov
mov
xchg
scas
pop
add
sbb
lods
insb
repnz
dec
fstl
sahf
mov
popa
lds
cltd
lock
shlb
movsl
lods
push
pop
lea
ds
sbb
inc
cmp
adc
outsl
jb
repnz
fdiv
repz
push
test
mov
mov
xor
js
mov
push
add
les
pop
sbb
test
or
imul
lods
add
lea
mov
push
lds
pushf
mov
ret
sbb
jmp
mov
adc
jns
cmc
fs
dec
ljmp
gs
lods
shl
sbbb
in
rolb
int
cmpsl
cli
or
jne
mov
mov
scas
jo
lret
mov
dec
cmp
cmp
outsb
xchg
mov
push
lcall
mov
push
add
mov
enter
inc
sti
cmpsb
jl
in
lret
xor
xchg
gs
icebp
mov
dec
jg
and
fsubrs
ds
mov
inc
mov
cmp
lds
data16
int3
jle
pop
outsl
les
sub
arpl
pop
jno
mov
jno
mov
or
and
jae
ja
pop
test
cmp
and
dec
or
xor
loopne
aam
xchg
adc
xor
aad
dec
pop
pusha
push
push
mov
arpl
stc
int3
aaa
push
loop
cli
xchg
sub
fcoms
and
nop
mov
test
sbb
mov
add
imul
jae
xorb
and
push
aaa
movsb
push
jp
movsb
inc
pop
or
mov
data16
cltd
and
dec
pop
jo
xlat
imul
clc
xchg
lods
inc
ret
inc
cwtl
fwait
xchg
aas
add
or
adc
pushf
cmp
ret
sub
fidivs
mov
jo
sti
stc
arpl
es
mov
dec
sub
imul
test
test
push
mov
sbb
hlt
mov
es
lcall
dec
icebp
outsl
popf
into
loope
or
add
test
dec
dec
out
lea
jle
mov
adc
jg
stos
dec
xor
mov
mov
cmp
dec
sbb
je
add
dec
lock
js
add
xchg
xlat
dec
std
adc
push
out
xchg
adc
ja
rol
push
fsubr
add
ss
adc
lret
jne
mov
inc
jnp
and
pop
inc
call
jno
mov
xlat
cmpsb
ds
add
mov
cmp
pop
pop
mov
add
movlhps
jnp
add
stc
mov
in
mov
mov
sub
sti
push
lds
outsb
je
xchg
pop
mov
movsl
jb
mov
jg
push
pop
adc
inc
orb
xchg
aam
lret
ret
dec
and
mov
nop
out
pop
pushf
dec
inc
or
mov
fldlg2
call
jbe
xor
cli
aaa
cmc
rclb
insb
call
movsb
jg
xchg
lea
pop
lcall
sbb
cmpsl
mov
test
mov
out
popa
je
inc
cli
imul
push
ret
lret
iret
hlt
or
setnp
es
pusha
adc
inc
outsl
mov
sub
cmpsb
lock
push
jle
push
xor
lcall
add
out
adc
add
addr16
xor
insb
adc
push
or
clc
cmpsb
jb
outsl
cmp
xor
cmpsb
fs
aaa
push
test
pop
mov
jo
pop
cltd
movsb
jae
das
sbb
lds
nop
add
dec
dec
addr16
gs
repz
pop
push
loop
and
ds
popf
jns
sub
cmp
in
inc
sub
sti
sub
pop
in
fidivrl
outsl
fidivrl
js
pushf
cmp
loopne
hlt
popf
mov
loope
insb
into
loope
sub
inc
lcall
mov
inc
ds
scas
adcb
loop
cwtl
xchg
xor
popf
jp
inc
pop
or
bound
jo
dec
adc
js
pushf
jg
jnp
sbb
pop
jg
adc
dec
inc
lret
mov
sub
push
pop
incb
sarb
test
lock
adcb
outsl
sub
push
xor
mov
pop
mov
push
test
fisttps
aam
xchg
jl
and
pop
or
test
fwait
or
mov
cmp
ss
sbb
and
daa
ja
hlt
inc
gs
movzwl
stc
sbb
aas
jg
jg
inc
popf
xor
daa
adc
dec
pusha
push
mov
cmp
add
outsl
lds
jmp
mov
push
mov
sbb
xchg
sbb
inc
leave
or
cltd
clc
aad
loope
push
dec
shl
nop
or
cmc
inc
cli
pop
mov
hlt
xor
sbb
fs
rcrl
xor
push
jge
mov
xor
mov
sahf
popa
je
leave
in
dec
test
pop
ret
mov
jp
mov
fs
test
movsb
or
loope
push
inc
or
hlt
xlat
or
ret
jne
in
negl
sub
lods
cmp
mov
push
arpl
std
aas
jb
or
repz
out
lods
jge
mov
hlt
xchg
cmp
out
push
mov
aaa
lods
scas
dec
adc
enter
sbb
mov
cmp
loopne
imul
mov
and
pop
inc
mov
pop
inc
data16
stos
jno
inc
aas
stos
aas
mov
dec
pop
in
scas
jbe
aam
shrl
js
pop
jnp
jno
push
stc
bound
ds
fwait
mov
fsubrl
or
cmpsl
je
pop
mov
dec
adc
fs
inc
cli
pop
lock
pop
andl
orb
orl
dec
xchg
sbb
imul
aaa
dec
mov
xchg
js
xchg
test
mov
cld
test
loope
adc
mov
xlat
out
or
xlat
and
sbb
mov
dec
add
out
mov
push
shll
fistpll
push
adc
adc
mov
xchg
and
gs
das
push
or
cmpsb
or
imul
pop
pop
pop
outsl
aad
fisubrs
xor
lret
mov
push
and
cmp
loopne
lcall
push
hlt
jo
jle
xor
outsb
xchg
insb
aad
adc
jp
popf
leave
imul
pop
xor
pop
rcrl
shrl
mov
dec
stc
pushf
test
sbb
xor
in
xchg
dec
or
ficomps
push
into
and
movsb
mov
dec
loop
adc
jecxz
in
out
adc
inc
iret
or
sbb
rolb
mov
push
scas
sbb
xor
mov
cmpsb
or
loopne
push
pushf
jb
out
xchg
jmp
mov
push
adc
clc
imul
push
push
outsl
adc
inc
fdivl
cli
xchg
pop
roll
adc
mov
push
fwait
mov
mov
dec
scas
inc
mov
std
and
std
ljmp
xor
push
mov
xchg
cwtl
stos
lret
out
rcrb
sbb
dec
repnz
loope
data16
lret
negl
adc
xchg
adc
lods
mov
pusha
jg
add
test
add
cltd
xor
mov
cmpsl
dec
inc
pushf
push
add
and
jg
repz
popa
sbb
sbb
jge
lahf
les
xchg
cwtl
rorb
adc
jl,pt
xchg
push
lret
lahf
cmc
mov
imul
sahf
call
movsl
xlat
xor
sbb
fcoml
stos
cld
dec
inc
lret
xor
dec
dec
test
mov
cmp
and
into
js
jecxz
xorl
mulb
jle
sbb
push
test
stc
sbbb
popf
cmpsb
xor
ret
sub
pop
les
mov
sarb
xchg
std
loopne
sub
adc
pop
inc
mov
mov
jle
mov
xor
negl
cmp
imul
out
js
push
jl
rol
jge
sub
sbbb
orb
into
cli
mov
std
fdiv
adc
add
mov
rclb
lds
mov
mov
jb
cmc
pusha
stc
bound
out
mov
sbb
push
adc
rolb
movups
dec
mov
orb
push
callw
ficoml
ljmp
and
pop
jecxz
mov
push
pop
or
push
mov
jb
mov
pop
dec
jge
js
cmpl
mov
cmp
cmpsl
es
adc
daa
lahf
jnp
inc
push
ss
rcl
push
xlat
xchg
inc
add
jmp
add
add
cltd
pop
jb
add
or
mov
loope
mov
jnp
xchg
jmp
add
nop
mov
rcl
dec
and
adc
insb
jg
pop
flds
add
jmp
xor
push
ret
unpcklps
pop
imul
mov
jo
add
mov
loopne
push
cmc
rclb
pop
sub
add
mov
lods
pushf
ds
and
fcom
bnd
dec
jb
clc
movl
rcl
lahf
mov
out
jb
shlb
dec
sbb
je
jne
mov
sarb
out
lock
aas
popf
insb
add
mov
loopne
sbb
ds
mov
cld
dec
loopne
aas
stos
dec
neg
cmp
js
pop
mov
das
scas
adc
cmp
xchg
rcl
sub
mov
push
fcoms
push
les
add
fcompl
movsl
cwtl
mov
jge
mov
daa
std
push
idiv
sbb
cmp
cmpsl
cmp
test
aam
push
and
outsl
inc
mov
sub
test
push
mov
mov
incl
scas
into
clc
xchg
es
fidivrl
or
push
pop
arpl
movzwl
stc
sbb
stos
sbb
cmp
lcall
xor
arpl
lods
mov
outsl
jb
fadd
gs
sbb
arpl
mov
movsb
cs
inc
arpl
xor
movsb
sti
and
shrl
jne
daa
jle
out
in
cld
and
jmp
sbb
shll
or
push
mov
mov
dec
push
std
aad
lahf
dec
mov
mov
jnp
cmpsl
lds
xchg
sub
push
cmp
aam
aas
xchg
mov
ljmp
ret
mov
int3
mov
mov
or
jo
lea
scas
mov
cmp
fstpt
or
adc
lock
cmp
or
mov
and
fcoms
add
les
pop
xchg
aaa
inc
add
cmpsb
rclb
mov
mov
enter
loope
mov
add
dec
mov
stos
and
insl
jo
jmp
xor
pop
xchg
xor
push
mov
call
aaa
mov
cmp
loope
mov
data16
std
clc
test
in
push
inc
adc
es
scas
dec
pop
andl
mov
inc
push
push
mov
xchg
cli
and
pop
pop
loop
pushf
cmp
xchg
lret
mov
lahf
int3
jnp
push
jle
cmp
mov
lods
xchg
inc
aas
sbb
ljmp
mov
and
arpl
call
jmp
hlt
adc
nop
mov
mov
dec
and
ss
sub
sub
loope
sahf
pop
cwtl
push
add
cmp
cs
xchg
bound
cltd
stos
rorl
nop
dec
sub
out
sbb
movsl
sti
adcb
fs
and
movsl
sub
test
aas
call
mov
and
cmp
insl
out
jno
lods
mov
sbb
mov
or
fistps
push
insb
nop
shl
adc
sti
adc
mov
test
pusha
popa
pop
inc
jbe
sbb
push
imul
clc
test
adc
mov
clc
fistps
movsb
cmpsb
test
ja
adc
jnp
add
dec
jnp
jg
push
out
jnp
cmpsl
je
jbe
movsb
or
pop
adc
jae
cmp
xchg
pop
add
xchg
xorl
or
sahf
push
cmp
jmp
push
fdivrl
aas
mov
pop
shlb
rcl
push
add
mov
add
adc
ret
stos
pop
dec
loopne
mov
mov
push
inc
sbb
std
movsl
repnz
loope
testb
jl
add
pop
decb
notl
aaa
sbb
inc
jo
mov
dec
fcoms
repz
sbb
add
int3
xchg
into
mov
inc
gs
jmp
rorl
xchg
pop
std
int
or
int
and
xchg
sub
into
sub
pop
adc
inc
lahf
stos
out
ret
out
std
ss
mov
xchg
sbb
clc
cmp
enter
mov
inc
cwtl
pusha
jae
xor
mov
clc
sbbb
mov
adc
jbe
mov
cs
lret
addl
hlt
sbb
inc
jmp
pop
out
std
adc
out
jb
sahf
and
clc
push
xor
mov
mov
pop
mov
imul
push
mov
daa
shrl
cli
add
in
and
imul
pop
adc
mov
or
js
push
pop
pop
cmpsb
data16
sbb
add
xchg
xorl
jnp
sbb
push
xor
adc
es
test
aaa
push
add
inc
gs
and
fsts
repnz
arpl
cmpsl
psrlw
add
adc
shlb
sti
andl
popf
roll
pop
addr16
andb
push
xor
pop
xchg
or
xorl
cmp
popa
dec
sbb
and
sub
cmp
sub
or
loope
cmp
adc
sub
test
mov
inc
aas
jp,pn
xlat
sub
aas
in
data16
lea
and
orb
mov
mov
mov
jnp
inc
and
pop
xchg
xlat
mov
inc
dec
sar
in
mov
inc
imul
addb
mov
out
popf
into
sbb
in
fiaddl
sub
pop
imul
push
jl
loopne
stc
pop
pop
in
dec
mov
leave
gs
adc
popf
out
fiadds
mov
jnp
add
cld
icebp
int
push
lock
movsl
into
pop
cmp
lcall
xor
lret
stc
mov
cmpsb
pop
cmp
sti
pop
loopne
inc
loopne
inc
std
inc
pop
xor
cmpsl
jno
mov
cmc
sbb
push
lods
std
mov
xchg
and
mov
fnsave
aad
or
jmp
iret
ss
test
rclb
jno
jp
mov
mov
push
shr
lods
inc
leave
pop
or
ret
jne
xchg
pop
dec
xor
rclb
sahf
jmp
ja
icebp
mov
std
adc
mov
aam
rol
mov
cltd
jl
xchg
push
aam
incb
call
add
cwtl
push
pop
sbb
sub
dec
mov
lds
js
pusha
hlt
mov
dec
lcall
movsl
sub
stc
jle
or
ljmp
pop
js
push
outsl
mov
insl
xor
faddl
xchg
inc
cs
sahf
mov
sti
inc
aam
jecxz
push
push
cmp
iret
out
or
mov
lcall
je
pop
loop
cld
iret
mov
rcl
mov
inc
add
pop
xchg
jmp
shlb
leave
int3
fistps
adc
lcall
stos
addr16
adc
test
mov
cld
pop
or
rcl
adc
cmp
push
pop
rol
push
decl
nop
push
or
shll
outsl
stc
mov
and
sub
add
dec
imul
cmp
roll
mov
aad
out
cmpsb
xor
or
mov
mull
mov
lcall
mov
cld
fisttps
pop
xchg
and
popf
sub
mov
sbb
or
setle
inc
mov
shlb
lcall
push
repz
pushf
mov
adcl
fcoms
rcl
adc
mov
aad
fildll
sti
adc
xchg
add
and
das
adc
dec
push
mov
mov
adc
imul
out
dec
in
not
mov
dec
or
movsl
mull
sbb
lret
adcb
mov
loope
jo
jbe
fmull
pop
mov
inc
xchg
sbb
fwait
iret
loop
xchg
push
adc
inc
es
movsb
or
push
fbstp
mov
fcoml
scas
xlat
imul
push
or
js
push
inc
sbb
jbe
pop
les
inc
ficompl
subb
aad
and
pusha
hlt
mov
icebp
xchg
mov
jo
jle
in
cvtps2pd
dec
xchg
inc
add
scas
push
nop
push
add
adc
cmpsb
outsl
jb
js
int3
iret
xchg
movsl
jg
push
mov
or
mov
mov
mov
and
dec
ja
fimuls
jae
callw
mov
sbb
stos
fnsave
sbb
push
adc
adc
dec
popf
add
lea
ljmp
js
mov
fmuls
ret
sbb
fsts
jnp
test
jecxz
inc
pop
shl
jns
add
push
add
jae
mov
adc
push
fldt
int3
xchg
shl
sbb
fsts
adcl
aaa
sti
rcl
push
jecxz
dec
push
push
test
mov
mov
lret
ret
pop
xchg
sbb
inc
shlb
andl
mov
ds
add
cli
push
mov
das
pop
es
xchg
dec
xchg
xor
fidivrl
fdivr
push
sub
test
xor
adc
insl
js
inc
ds
mov
call
xor
repnz
sti
add
aam
aaa
cmc
mov
ror
sbb
arpl
out
sti
mov
cwtl
out
push
lcall
mov
add
int3
jae
cwtl
pop
and
add
dec
leave
mov
fwait
jne
fwait
and
imul
dec
jmp
test
in
or
in
lret
adc
test
inc
ljmp
cmpsl
lock
hlt
xlat
test
sub
sarb
repz
pop
aam
in
xchg
push
adcb
or
aas
push
xchg
jae
push
add
in
mov
clc
bound
sbb
mov
in
ret
mov
add
in
push
test
in
fwait
xchg
aas
sahf
mov
sbb
arpl
mov
cmp
aad
cmp
shl
hlt
adc
or
pop
lods
and
out
jp
loope
pop
aad
aas
xchg
gs
fsubrs
rcrl
jnp
sbbl
or
pop
xchg
hlt
aam
bound
add
ds
pop
xor
mov
xor
call
enter
and
jle
adc
addb
enter
movsb
cmpsl
mov
pop
jne
pop
dec
pop
mov
mov
sbbb
out
enter
adc
cmpsl
sub
cld
pop
bound
push
roll
insb
or
sub
data16
xlat
fcmovb
lods
push
into
add
jb
adc
ja
mov
adc
adc
scas
xchg
mov
lret
icebp
test
add
pop
gs
in
jg
pop
mov
xor
mov
sub
inc
add
sbb
pop
lock
lret
push
popf
mov
push
js
xchg
mov
sub
add
xchg
jno
in
aam
addr16
jnp
les
cli
int
shll
sub
cwtl
stc
repz
mov
xor
cmp
mov
add
push
xor
jl
mov
adc
dec
adc
jle
push
mov
je
pop
out
xlat
add
test
mov
jo
xor
pop
pop
sbb
jmp
pop
mov
notb
and
loopne
mov
std
adc
lock
mull
out
adc
movsb
mov
add
xchg
pop
daa
lods
cmc
repnz
dec
push
fcomi
stos
mov
scas
ret
mov
daa
insb
xchg
gs
mov
sub
mov
push
add
xchg
cwtl
outsl
mov
cwtl
repz
insl
add
into
mov
fsubs
arpl
js
cltd
sbb
pop
shl
imul
mov
push
push
pop
cli
and
shll
inc
test
mov
cld
xchg
xlat
cld
pop
inc
ljmp
push
jno
ret
push
js
es
hlt
xlat
xchg
mov
xchg
sbb
push
mov
shrb
or
push
jne
nop
sub
inc
ja
loop
std
push
jno
xchg
sub
pushf
fldlg2
shll
icebp
push
stos
popf
mov
mov
mov
aaa
outsb
loopne
or
sbb
aaa
jne
mov
shr
test
test
mov
imul
pop
inc
and
mov
jne
sub
add
aad
aaa
testb
arpl
lret
mov
adc
pop
xor
out
or
insb
mov
or
mov
dec
pop
out
or
aaa
cltd
lods
push
jmp
arpl
pop
sbb
jmp
mov
and
pop
sbb
loopne
repnz
adc
out
mov
or
sub
adc
inc
mov
push
lds
scas
sbb
jnp
xchg
push
jb
lock
mov
and
xchg
push
xor
mov
lods
sub
xor
push
out
out
sub
roll
mov
outsb
fwait
pushl
sbb
mov
dec
daa
in
test
xchg
int3
push
ss
bound
mov
sbb
cmp
aaa
adc
adc
jo
inc
push
out
or
push
arpl
aad
ret
xchg
aaa
aas
andb
push
or
cmpsl
stos
jg
jge
and
movsb
pop
mov
mov
sbbb
fsub
ss
lock
inc
push
pop
add
out
call
and
pusha
mov
lret
cmpsl
bound
or
scas
sub
inc
and
xor
add
pop
push
wrmsr
cmp
gs
fdivrs
sbb
xor
mov
cltd
fsubr
scas
out
stc
xor
xchg
mov
adcb
into
mov
push
fldlg2
or
aaa
cmpsb
ret
orb
jmp
mov
ljmp
mov
insb
nop
sbb
xlat
adc
push
std
mov
mov
out
inc
les
shll
jg
lods
xlat
sub
jo
subl
jnp
jle
or
sbb
push
dec
jno
stos
mov
ret
mov
push
or
mov
push
or
hlt
pop
mov
xor
mov
stc
pop
outsb
push
aaa
mov
mov
js
fsubrl
ss
inc
add
popf
dec
pop
add
daa
xor
push
add
ret
mov
pop
dec
mov
ljmp
cli
sbb
sbb
jg
adc
fistps
ds
xchg
fldl
sbb
and
pop
cmp
mov
fstp
sub
pushf
lahf
mov
xchg
shll
mov
and
shlb
or
jecxz
clc
jo
dec
icebp
nop
xchg
push
push
out
jl
pop
es
cmp
xchg
aaa
pop
xor
or
bound
push
and
mov
iret
fidivrl
pushf
pop
push
pop
hlt
popf
xchg
mov
mov
push
jns
fs
bound
inc
push
lods
push
xchg
sti
popf
and
aas
leave
pop
mov
cmp
jle
adc
cli
scas
xor
or
jno
pop
xor
es
lods
imul
insb
loope
xchg
xchg
cmp
imul
mov
lods
cmp
movb
inc
add
in
or
inc
adc
mov
push
adc
mov
test
xchg
fstps
insl
sub
pop
scas
ret
in
sbb
cmp
xor
pushf
cmp
xchg
inc
dec
ja
loop
std
in
mov
loop
jno
ret
pop
xor
inc
inc
xor
jg
jmp
divb
ret
lds
add
jl
sbb
leave
pushf
loop
js
bound
nop
mov
xchg
call
andl
aam
std
jp
leave
aad
cmp
rcr
ret
push
add
flds
sbbb
jbe
and
rorb
mov
sbb
nop
scas
mov
add
adc
test
mov
mov
sub
repz
decb
ret
push
cwtl
lods
out
mov
and
mov
cmp
adc
shl
test
test
push
fisttpll
aaa
sbb
rcrl
push
xchg
sub
xchg
ret
ja
mov
shlb
pop
bound
cltd
in
jno
test
repz
mov
or
sub
xchg
iret
out
add
jno
mov
and
add
jmp
adc
dec
xchg
mov
or
ficoms
iret
ja
mov
das
jns
fwait
add
imul
movsb
out
int3
adc
jns
mov
out
iret
mov
or
xchg
cld
test
idiv
mov
mov
push
mov
popa
inc
xlat
inc
xor
das
pop
sbb
pop
in
pop
and
or
and
cmp
pop
push
divb
mov
add
mov
cmp
imul
jnp
add
add
xchg
aas
sahf
lds
js
push
xor
int
shlb
xor
aad
cmp
sarl
lods
push
mov
xor
stc
sbb
sbbl
fldt
pop
or
inc
ljmp
rcrl
fdivs
frstor
inc
fcmovnb
mov
stos
xchg
paddw
or
jmp
push
fsts
sbb
jecxz
add
cmp
ja
rorb
cmc
jno
cld
pushf
jg
add
fldcw
popa
xor
adc
pop
mov
fcmove
mov
gs
int
and
mov
xor
dec
cs
adc
mov
mov
inc
inc
lret
outsb
jg
jg
stc
adc
pop
testl
ja
outsl
push
mov
fisttpll
mov
xor
dec
cmpsb
cmp
inc
push
cltd
popf
adc
scas
cmc
imul
jb
cwtl
and
in
je
das
subb
sbb
enter
sbb
repz
jmp
dec
arpl
insl
xchg
push
adc
add
push
mov
jle
or
cmpsb
in
dec
les
inc
push
loope
outsb
cmpsl
sub
xor
repz
jb
or
push
movsl
mov
adc
xchg
cltd
push
mov
or
dec
push
mov
adc
jl
pushf
cmp
and
lret
stc
cmp
xor
lcall
lcall
mov
mov
in
lcall
seta
cmpsl
adc
rolb
mov
add
inc
inc
in
lock
xchg
cs
and
cmpsb
fildll
jmp
and
sub
call
sub
sti
mov
gs
jb
push
dec
inc
xchg
add
jl
stos
hlt
shl
lock
jns
pop
mov
fcmovnu
cmp
or
repnz
mov
nop
rcll
movsl
sbb
dec
std
icebp
lahf
cmc
mov
nop
es
xor
add
scas
jbe
mov
bound
ret
xor
push
xchg
subl
dec
or
nop
mull
mov
out
shlb
adc
iret
sub
mov
add
jnp
jmp
shlb
add
sbbb
dec
out
xor
lods
adc
mov
mov
clc
outsb
fcmovne
loopne
add
aaa
xor
enter
popf
ret
add
dec
in
outsl
leave
cli
out
adc
add
jb
xchg
mov
lcall
adc
mov
rclb
jg
iret
and
loope
dec
add
push
dec
inc
stos
iret
mov
rcl
call
out
mov
sbb
xchg
scas
lods
lds
or
stc
out
outsl
out
sub
or
cmp
sbb
repz
dec
js
inc
lret
and
cli
rclb
mov
sub
push
jle
test
adc
cld
xchg
sbb
pop
or
xor
jnp
mov
add
repz
lahf
mov
mov
pushl
shrl
add
stos
sbb
jns
cmp
ja
rorb
cmc
jno
data16
jg
add
lahf
test
out
jg
fwait
dec
xor
add
mov
jae
sti
mov
test
dec
mov
js
xchg
sbb
xchg
nop
out
xor
adc
mov
push
scas
push
fdivs
subb
cltd
xchg
or
mov
mov
and
stos
adc
repnz
dec
cmc
in
and
xchg
gs
jae
push
jl
mov
jno
in
mov
inc
add
sbb
cwtl
addl
mov
rolb
jne
sahf
sbb
ret
and
hlt
mov
adc
pop
inc
jg
push
mov
xchg
ds
xchg
and
stos
sub
inc
cmp
test
xchg
into
repz
or
into
mov
ljmp
adc
mov
mov
mov
pop
sub
cltd
call
shl
mov
cmpsl
jg
xchg
fldl
jle
and
repnz
mov
xor
pop
mov
das
jne
adc
sub
mov
mov
xchg
or
lss
lods
xchg
adc
or
xchg
add
sub
inc
sub
or
icebp
mov
push
repz
xlat
pusha
outsb
push
fs
xchg
adc
int
mov
xchg
cwtl
sub
cwtl
repz
push
aaa
push
scas
mov
lock
inc
jae
int3
lret
out
sarb
dec
ret
and
dec
push
nop
and
sub
or
std
mov
pop
and
dec
push
lds
xor
lea
insl
je
push
adc
orb
sub
aad
lahf
and
popf
in
push
pop
mov
insl
adc
in
jle
call
mov
dec
mov
stos
xchg
mov
xorl
xor
sub
mov
dec
movsb
loope
lea
inc
inc
loopne
repnz
int3
pop
pop
andl
fcompl
pop
jmp
adc
divl
mov
add
inc
cmp
daa
mov
out
xchg
xchg
dec
push
loopne
cmpsb
dec
xchg
js
jecxz
xchg
xlat
mov
jecxz
and
adc
sub
aaa
push
addb
mov
shr
jg
enter
xchg
mov
negb
int3
dec
out
xchg
and
data16
ljmp
out
jg
test
fucom
rorl
lds
pop
pop
icebp
and
scas
outsb
jge
mulb
cmc
jno
add
inc
outsl
xor
or
mov
in
or
xor
add
adc
rcr
add
pop
gs
xchg
js
push
push
ret
cli
push
imul
dec
lcall
rorl
fwait
cs
inc
daa
rcrl
and
in
sub
xlat
jb
lret
cmp
aam
movsl
in
sub
adc
xor
or
jb
loopne
dec
xor
and
jp
ret
mov
or
push
mov
mov
mov
lock
or
push
xor
inc
mov
adcb
mov
xchg
cltd
fcoms
pop
push
ss
sahf
enter
popf
mov
pop
pushf
ljmp
xor
inc
pop
out
mov
inc
in
aas
arpl
dec
inc
push
cmc
lods
adc
std
les
lret
es
xor
fcoms
out
movsb
and
sbb
lds
pop
pop
mov
jo
movsb
mov
mul
dec
out
mov
daa
cmp
sub
dec
sub
or
jb
push
xor
inc
cmpsl
sahf
mov
jae
out
lods
mov
push
push
push
sbb
pop
dec
inc
test
pop
pop
fdivrs
mov
mov
lss
dec
jge
dec
enter
dec
popf
clc
dec
mov
and
jmp
std
aad
xchg
cs
cs
jno
mov
test
and
sahf
pop
test
push
addr16
insb
shl
inc
rorl
arpl
mov
ret
add
shl
maskmovq
divl
xor
enter
aaa
in
outsl
fnstsw
lcall
dec
xchg
inc
out
adc
jg
ds
into
pop
inc
sub
jecxz
adc
push
jne
jo
jmp
inc
les
test
aam
lahf
jne
jae
orb
scas
ds
mov
push
sbb
adc
ds
cltd
ljmp
cmp
icebp
clc
jbe
popa
popf
insb
test
xchg
out
xor
push
xor
clc
mov
dec
xor
jo
push
iret
subb
int
in
sub
sbb
scas
cmp
add
push
das
push
fsubs
std
imul
mov
lahf
pop
flds
adc
arpl
mulb
cmpsb
in
and
mov
pusha
call
mov
xor
outsb
cwtl
sub
mov
lret
lret
push
adc
sbb
cmp
sarl
lods
push
mov
push
jge
pop
push
es
movsl
dec
es
pusha
inc
push
cli
insl
popl
pop
lahf
insl
insb
xchg
push
lret
lret
stc
pop
cmpsb
ljmp
sar
mov
or
mov
cmpsl
flds
out
sbb
fiadds
test
cwtl
jns
adc
jle
fwait
inc
and
test
adcl
lret
xor
dec
dec
test
and
int3
jg
in
loopne
ret
outsb
std
stc
jnp
push
test
cmp
xor
xor
call
pop
roll
adc
pop
mov
pop
or
insl
mov
rorb
push
icebp
arpl
push
cltd
fisttps
aam
xchg
mov
loopne
out
mov
push
cmpsb
and
shl
mov
or
stc
aam
je
cs
int3
jae
sub
sub
xchg
pop
pop
movsb
sbb
adc
mov
outsl
popa
xor
jle
cmp
pop
in
scas
cli
arpl
mov
aaa
stos
jno
push
sti
test
adc
sbb
movsl
rclb
sbb
jg
nop
push
pop
pushf
dec
sub
enter
mov
jns,pt
xchg
mov
xchg
test
push
aad
jge
aaa
bound
jne
mov
daa
inc
and
shr
out
pop
xchg
dec
pop
stos
xchg
cmp
pop
enter
mov
fucomip
cmpsl
fs
test
mov
xorb
dec
push
push
jnp
dec
jmp
or
mov
je
call
adcb
cmp
pop
mov
jl
call
push
mov
inc
dec
mov
sbbb
inc
mov
push
inc
lds
cmc
fwait
scas
cli
loope
addb
sbb
cmp
fiaddl
das
cmp
mov
cltd
stc
add
adc
cwtl
push
mov
sub
inc
popf
jns
sub
dec
outsl
sub
lock
test
inc
jnp
or
adc
mov
mov
dec
xchg
push
std
add
js
fisttps
mov
enter
lods
cmpsb
push
xor
ja
repnz
std
cmc
jno
call
daa
lahf
jne
and
je
sahf
adc
dec
pop
pusha
in
stos
fistps
dec
js
mov
mov
call
aas
fs
mov
mov
hlt
cmpsl
cmp
jmp
std
add
jge
xor
jns
mov
push
out
adc
and
cmp
cmp
cmc
dec
push
gs
sub
mov
jl
mov
lcall
sbb
in
repz
xchg
sub
sub
ret
xor
loopne
negb
jle
pop
jae
and
pop
sub
pop
cwtl
add
push
xchg
xchg
das
cld
pop
xchg
and
rorl
lds
xchg
lds
sbb
sahf
imul
lret
subb
mov
adc
mov
sti
loopne
jmp
adc
pop
and
aaa
adc
out
push
sub
imul
out
pop
add
xchg
cltd
pop
xchg
mov
jle
je
jmp
mov
arpl
nop
ljmp
test
jnp
mov
inc
xor
pop
shl
mov
add
pusha
dec
fwait
mov
or
mov
adc
jae
dec
scas
repnz
outsb
lods
xchg
cmp
cmp
into
push
test
sub
mov
pushf
shll
mov
add
inc
push
nop
icebp
pop
cmp
stos
lock
dec
and
dec
lret
and
pop
fcoms
sub
cltd
add
jge
daa
pop
mov
lods
jmp
xor
xchg
aam
inc
jg
data16
fcompl
mov
hlt
pushf
insl
jo
adc
popf
call
sub
daa
out
or
jle
push
out
xchg
lock
fdivrs
aaa
adc
and
xchg
push
sti
adc
in
dec
jecxz
dec
pop
jmp
flds
sbb
mov
iret
adcb
jecxz
std
nop
mov
add
test
popf
pop
adc
adcb
sbb
loope
leave
and
inc
popa
call
or
dec
fwait
or
int3
movsb
xor
lods
mov
rolb
lcall
insb
js
and
xor
mov
orl
mov
add
fs
imul
cmp
loopne
fs
imul
pop
add
adc
jns
cli
cmpsl
xor
sub
inc
xor
mov
cmp
lds
inc
int
xlat
pop
xchg
jne
aaa
hlt
mov
jbe
je
popf
dec
adc
mov
ds
enter
clc
andb
xor
lock
imul
leave
inc
in
insb
xor
cmp
dec
inc
test
lret
call
popf
lret
jmp
rorb
or
mov
push
jno
jg
aam
jp
mov
popf
fcomps
mov
loope
dec
fs
jb
xor
or
xor
xchg
inc
and
lds
aaa
test
scas
js
pusha
sub
pop
xchg
xchg
add
mov
xor
inc
push
sub
stc
mov
insl
fdivs
mov
add
testb
lea
mov
xchg
jmp
fisttps
cmpb
test
sti
cld
cwtl
xchg
lock
and
add
xchg
cwtl
arpl
rcrl
pusha
int
sbb
push
sub
push
adc
xchg
mov
sub
pop
test
sbb
sbb
pop
push
mov
inc
lret
jmp
and
mov
add
jns
xchg
push
lret
add
xchg
cmpsl
jo
hlt
xlat
add
sub
out
or
pop
mov
lock
add
lea
mov
shlb
outsb
xchg
cld
add
pop
xor
fstpl
adc
xchg
fsubrl
push
daa
pop
sets
adcb
fwait
xchg
mov
sbb
dec
sarb
dec
and
and
lret
je
jge
aaa
and
sub
fdivrp
xchg
fistps
jg
es
sbb
mov
xchg
jb
jae
ret
jne
inc
test
ljmp
mov
pop
jmp
scas
pop
jns
in
inc
out
pushf
sti
cmpsl
mov
sub
test
cmpsb
xor
add
xor
add
mov
xchg
fyl2xp1
cmp
jo
aad
xlat
rorb
icebp
mov
lds
inc
inc
push
icebp
stos
push
fidivrs
std
mov
inc
dec
int3
or
outsb
jno
mov
and
jbe
fstpt
fs
pop
add
xor
push
dec
aaa
sbb
inc
shlb
adc
lea
notl
mov
adc
inc
and
subl
stos
xor
lret
mov
ret
gs
repz
lea
push
cmp
repz
inc
jp
add
pop
xchg
stc
in
scas
add
sbb
bound
jnp
mov
pop
cmc
mov
push
mov
mov
xor
in
mov
loop
repz
call
sbb
inc
daa
cwtl
imul
xchg
mov
add
ds
lea
inc
sti
jle
stos
jnp
push
in
xchg
mov
daa
fimuls
push
cmp
sti
call
shll
fsubr
jae
adc
js
pop
xchg
cmp
and
adc
inc
jbe
dec
scas
inc
movsl
mov
lock
loop
push
mov
stos
std
insb
mov
movsl
or
mov
cwtl
add
xchg
inc
lods
and
in
outsb
in
call
fistpll
pop
mov
fwait
push
adc
dec
ja
andb
jge
inc
sub
inc
sahf
cmp
in
ret
lret
insl
jo
cs
jno
xchg
and
and
repnz
insb
push
rcl
std
mov
mov
in
iret
jnp
daa
aad
icebp
add
sbbl
lcall
aad
pop
and
sbb
adc
cmpsl
mov
dec
pop
cld
ret
mov
lret
aaa
jmp
push
jmp
adc
cmp
stos
inc
jge
mov
out
adc
mov
aas
loope
pop
sbb
lods
inc
mov
or
cmc
jno
daa
cli
mov
adc
pop
popa
sahf
pop
scas
mov
bound
ficoms
sti
mov
lods
xchg
sbb
mov
imul
mov
div
pop
mov
xchg
xor
movl
dec
enter
icebp
mov
adc
sar
lock
mov
mov
jbe
inc
sbb
nop
lahf
adc
in
fsub
stc
faddl
mov
and
mov
mov
dec
pop
pushf
or
ljmp
mov
call
inc
inc
std
sbb
imul
testl
sbbl
and
ja
sub
mov
pop
out
adc
in
mov
mov
jb
add
std
adc
mov
icebp
rcr
test
inc
inc
push
and
dec
fdivl
pop
jmp
enter
fcoml
leave
pop
sub
sub
and
stos
lea
scas
out
xchg
jge
cmp
fcmovnbe
jg
insb
imul
xchg
cwtl
add
add
into
or
mov
mov
stc
cmp
xor
iret
sbb
leave
repnz
mov
or
lds
sub
inc
sub
push
mov
cmp
cwtl
dec
mov
inc
push
rolb
jmp
xchg
mov
adc
aam
push
sbb
dec
iret
loop
or
dec
icebp
add
jecxz
inc
add
add
pop
cmpsb
cmp
sub
jne
dec
movsb
xor
icebp
insl
jmp
movsl
out
or
js
push
int3
push
xor
rorb
mov
aad
dec
jno
sub
xchg
sbbl
add
insb
out
xchg
and
loope
inc
imul
pop
pop
jno
out
mov
or
aaa
xor
inc
lds
scas
inc
subl
popa
test
jl
sti
push
sub
jae
xchg
lods
shrl
lahf
movsl
imul
cmp
leave
mov
jbe
add
adc
push
mov
cwtl
cwtl
repz
xor
ds
xor
lea
rclb
fs
jo
jle
popa
fcmovu
jno
scas
pop
mov
fwait
stos
pop
jnp
jp
ss
cltd
xchg
push
mov
ds
data16
jnp
mov
pushw
jecxz
data16
cmp
leave
inc
jle
out
test
iret
ja
lea
mov
cmp
inc
lret
arpl
in
cmpsb
movsl
hlt
xor
mov
testb
inc
xchg
stc
or
mov
add
cmc
push
mov
sbb
jmp
test
in
dec
icebp
lea
mov
lret
xor
outsl
loope
aas
and
mulb
pop
aam
call
jl
push
fs
jnp
cmp
cs
mov
ljmp
mov
mov
and
sbb
push
adc
xchg
jmp
imul
int3
cli
or
pop
inc
es
movsl
nop
adc
xor
pop
dec
js
pop
fcomps
popf
xor
test
mov
xchg
movsl
mov
lock
jno
cmpl
clc
rcl
cmp
adc
xor
mov
push
jb,pn
inc
add
jecxz
jle
and
popf
or
fstp
and
or
inc
cmpl
or
mov
and
lods
adc
push
es
arpl
test
mov
mov
jae
inc
push
out
or
jns
adc
inc
mov
inc
and
cmp
mov
cmp
fildl
sbb
jge
mov
imul
cmp
mov
add
addr16
sbb
movsb
aas
daa
and
add
xor
and
testb
pop
dec
sbb
std
adc
add
fs
xchg
xor
fimuls
inc
dec
xchg
dec
in
scas
cmpsl
sub
and
lret
pop
mov
jb
xchg
movsl
jb
jne
cli
stc
mov
jg
push
stos
mov
and
cmc
pop
cmp
push
jecxz
mov
mov
mov
negb
sub
stos
dec
xor
mov
mov
and
push
mov
inc
in
push
loopne
int
dec
cmp
mov
lods
nop
cmp
pop
pop
adc
lock
mov
inc
mov
xlat
pop
lahf
add
fdiv
or
xchg
ret
pop
mov
cli
pop
xchg
mov
dec
lods
dec
addr16
ja
dec
jg
out
test
mov
pop
call
sti
cmp
cmp
mov
mov
push
fadds
imul
pop
inc
enter
xor
fcomip
out
imul
jns
push
cltd
mov
sti
in
mov
ds
popf
xchg
pop
mov
sbb
jmp
aaa
pop
mov
mov
jb
aad
int3
cmp
cs
jg
xor
or
push
shrl
xchg
and
and
jno
mov
div
aam
stc
and
and
or
dec
and
xchg
cmpsl
mov
mov
cmc
cmp
pusha
lret
dec
add
jns
inc
dec
in
jne
pop
mov
shlb
popa
mov
repnz
inc
inc
sbb
and
push
add
or
and
stos
int
jae
jmp
push
push
xor
js
and
mov
mov
cmp
into
nop
cld
stos
mov
and
mov
adc
das
ljmp
mov
mov
shlb
pop
repnz
pop
pop
dec
jnp
popa
pop
pop
cmp
jmp
cmpsb
cmp
jg
xchg
xor
cmp
das
jns
push
stos
in
xor
shl
mov
lret
lret
stc
jmp
push
pushf
sub
enter
pop
pop
mov
bound
aam
push
pusha
call
lods
push
add
dec
sub
pop
mov
in
ret
or
mov
mov
inc
shlb
inc
mov
fsubl
loopne
mov
xchg
addr16
movsl
xor
fsubr
sub
fadd
jnp
loopne
cld
mov
mov
fs
pop
xchg
adc
jno
ds
out
imul
fiaddl
sub
loope
mov
test
loopne
push
or
sub
or
push
sub
dec
outsl
cwtl
orl
popf
mov
test
xor
mov
loop
repnz
and
adc
push
cmp
pushf
mov
mov
mov
push
rclb
mov
xor
idivl
shrl
jg
out
loope
fisubl
bound
or
pushf
mov
fimuls
movsl
xchg
aaa
mov
es
loope
adc
in
inc
pop
push
add
fucom
cli
data16
cmp
jp
test
mov
insb
fs
and
inc
push
loopne
mov
icebp
push
js
mov
pop
addr16
je
or
pop
sbb
or
cmpsl
cmp
and
loopne
nop
mov
mov
sub
xor
add
imul
cmp
mov
movsb
loope
mov
rcrl
and
ljmp
cmpsb
cmp
mov
cltd
adc
daa
imul
in
xchg
loop
pop
and
in
cmp
lcall
jo
addl
pushf
icebp
and
mov
cwtl
mov
add
sub
stos
xchg
movsl
ds
push
pop
jge
test
sub
push
mov
mov
fdivp
dec
sub
fldl
sub
movsl
mov
gs
pop
lds
xor
and
lret
lods
mov
cltd
adc
mov
rcrb
notb
sbb
jae
mov
sahf
mov
cmp
pop
out
stc
outsl
dec
pop
jle
icebp
sbb
mov
jns
jecxz
inc
cmc
ss
adc
jb
aas
xchg
lcall
xchg
pusha
cmp
loope
aad
stc
cli
or
in
loopne
pop
cltd
xor
fsts
inc
and
and
mov
or
mov
dec
dec
jbe
movsl
lods
into
pushf
test
pop
rclb
int3
loopne
outsb
push
pop
mov
mov
push
call
xor
sub
xchg
repz
inc
rcl
fdivp
mov
mov
fbld
inc
and
gs
jmp
test
inc
dec
push
sbb
xchg
jg
xchg
sub
push
jb
mov
scas
push
push
pusha
aad
test
mov
icebp
push
cmpsl
js
jg
gs
loope
mov
les
ss
jge
sbb
fildl
insb
nop
mov
inc
insl
pop
cmp
inc
dec
insb
sbb
inc
aaa
sbb
cmp
popa
inc
cli
adc
dec
or
clc
jns
adc
mov
enter
les
push
xor
jnp
lds
in
lret
rcll
pusha
cmp
loope
lock
sub
stc
in
je
pop
jb
dec
push
popf
es
jbe
sbb
ja
jno
mov
arpl
imul
sub
sbb
push
test
daa
add
mov
and
out
mov
mov
leave
movsl
sti
add
aam
icebp
xor
data16
loopne
lcall
xor
mov
das
adc
sub
lds
test
pop
pop
inc
flds
fisubrs
inc
ret
scas
pop
jnp
add
out
iret
pop
fwait
aaa
jno
pushf
out
ljmp
lret
push
sbb
iret
loop
pop
xchg
lret
imul
adc
test
call
aaa
sbb
xlat
xor
ds
sbb
push
dec
jne
lcall
or
js
and
jmp
mov
mov
mov
xlat
mov
call
inc
push
fcoms
call
or
jb
dec
push
fmulp
pop
sub
sub
sbb
xchg
jae
mov
arpl
dec
sti
fstpt
lods
loopne
outsb
push
sbb
xchg
add
pop
push
nop
jnp
push
sbb
repz
in
and
dec
fsub
push
loope
mov
arpl
adc
add
cmp
mov
negl
jg
pop
dec
out
insb
ret
xchg
jl
dec
inc
cmp
jo
out
iret
push
xor
popf
sub
ret
ds
lcall
sbb
add
aaa
push
into
movsl
sar
cmp
js
xchg
push
cmc
xor
dec
cmp
pop
mov
scas
mov
int
xor
cmc
mov
in
ret
xchg
iret
and
cld
pmaddwd
ret
push
sub
rcl
push
ss
std
aas
pop
push
stos
movb
inc
cltd
pop
adc
faddl
adc
push
mov
adc
aaa
mov
out
push
gs
and
adc
jg
mov
pop
mov
das
cmpsl
push
push
xor
adc
sbb
lods
jle
xor
data16
repz
push
fadds
jne,pn
or
out
adc
movsl
sub
mov
loopne
repz
pushf
jecxz
insl
stc
fdivrl
cmc
fidivs
pop
fdivl
rcl
inc
aaa
insl
mov
test
out
and
cmp
clc
sub
cmp
ljmp
imul
mov
scas
outsb
lcall
adc
dec
xchg
pushf
and
dec
lcall
mov
jae
sub
push
xchg
mov
adc
adc
sbb
or
loope
mov
cmpsl
loopne
gs
sbb
adc
xchg
or
pop
mov
sub
lds
dec
aaa
cmp
fistpll
repz
jb
push
jge
sub
xlat
lcall
insl
pushf
gs
mov
mov
shr
fldl
inc
pop
mov
xor
inc
xchg
rcrb
sti
push
cltd
pusha
gs
nop
repnz
int3
leave
xchg
movsl
dec
es
es
push
mov
dec
out
dec
clc
mov
outsb
out
mov
pop
and
mov
icebp
pusha
push
mov
mov
and
inc
bnd
cmp
cmpsl
push
out
out
call
jne
add
add
cs
sti
sbb
lods
pop
pop
xchg
dec
inc
repz
mov
dec
fucompp
jl
or
dec
jns
in
lock
dec
jo
cmp
imul
into
cmp
fisubl
lahf
jnp
dec
stos
fabs
hlt
xlat
pop
mov
xorl
imul
and
aas
push
inc
fimuls
mov
ljmp
cmpsl
jmp
jg
jno
sub
test
fsubr
pop
mov
sbb
dec
cwtl
xchg
add
and
sbb
cs
dec
bound
jns
xor
dec
stos
mov
sbb
addr16
ret
arpl
push
cli
cwtl
jle
sbb
ds
cltd
dec
sub
pop
lret
scas
sbb
stos
enter
lds
mov
out
xchg
movsl
mov
stos
or
mov
sub
sub
int3
ja
clc
cltd
addr16
pushw
jecxz
in
data16
add
and
outsb
out
or
xor
divl
lds
mov
sbb
lret
pop
in
dec
dec
test
ss
subb
ja
cli
mov
sbb
sub
adc
push
cmpsl
sbb
loope
dec
add
sub
mov
inc
mov
mulb
xor
outsl
dec
mov
and
icebp
je
mov
loopne
lea
xor
mov
fucom
jb
push
out
daa
adcl
out
imul
cmp
shrl
lret
iret
jl
xor
cli
push
popa
sub
and
fsubrl
sub
dec
pop
sahf
test
push
push
add
ret
scas
pop
jmp
add
pushf
fiaddl
push
xchg
mov
and
push
decl
and
mov
and
dec
icebp
pop
loopne
into
mov
out
fwait
aas
sbb
stos
insl
inc
inc
lods
outsb
fidivs
das
pushf
mov
push
mov
inc
insb
out
leave
or
in
ja
sarl
jae
adc
in
hlt
mov
stos
push
pop
rcrb
cmp
xlat
test
adc
cli
jecxz
ja
dec
add
bound
xchg
loop
notb
mov
push
ret
xchg
movsb
in
roll
pop
fsubrl
add
mov
xchg
xor
mov
fs
xor
or
adc
dec
xor
das
dec
pop
sbb
sub
xor
adc
push
jne
jo
int
aaa
std
fbld
inc
subl
adc
xorb
mov
mov
jns
out
xchg
iret
call
and
or
stos
jne
cmpb
or
imul
es
sub
pop
out
push
lock
insl
mov
in
and
movsb
sub
dec
xchg
es
shll
scas
decb
andl
ljmp
add
outsb
inc
mov
lods
decb
in
mov
or
rorl
shr
call
int
in
xchg
js
data16
adcl
out
mov
add
mov
mov
fcmovnu
sbb
mov
orb
imul
popa
imul
in
insl
mov
jmp
xchg
sub
subb
scas
sarl
sub
cmpsb
jb
xor
sbb
out
xchg
js
notl
mov
mov
mov
mov
or
rorb
inc
les
sub
push
out
leave
insl
jne
imul
test
mov
aad
addr16
sti
mov
test
jno
jns
ss
in
shll
jp
xchg
xchg
daa
sub
sub
push
test
pop
cmp
pop
lahf
jge
sub
ljmp
inc
jmp
pop
aam
lods
cmc
scas
and
inc
sbb
call
sbb
outsl
sti
mov
into
mov
xchg
dec
imul
imul
sbb
mov
sbb
fwait
imul
dec
jmp
sti
orb
rorb
icebp
xchg
mov
aaa
sbb
xchg
fistl
mov
adc
out
daa
pop
sbb
push
scas
xchg
mov
orb
rorl
pusha
add
mov
add
loop
pop
cmp
ja
arpl
cmc
jno
mov
jg
ror
mov
lea
add
mov
mov
dec
dec
xchg
xchg
cmp
jl
int
mov
lret
ja
pop
fsubrs
in
mov
mov
cmpsl
inc
adc
aas
loope
leave
lahf
cmp
xlat
mov
fcompl
pop
jno
in
testl
dec
stos
lea
scas
inc
and
nop
mov
jno
pusha
sbb
ljmp
jl
push
or
mov
in
push
cwtl
in
out
lock
fcomps
cs
cmp
cltd
sbb
xchg
js
lahf
or
adc
mov
movsl
cwtl
jle
push
imul
aad
lea
and
pop
insl
mov
pop
pop
mov
loope
paddusw
and
das
ds
and
adc
sub
or
js
cmp
jg
das
sti
jae
mov
ljmp
repnz
out
icebp
in
outsl
fcomps
cmp
outsb
jno
mov
loope
mov
jo
js
mov
filds
dec
cli
into
cmp
sbb
sub
xchg
adc
adc
aas
loope
lock
cmpsb
adc
fidivl
cmp
mov
xchg
adc
ljmp
mov
ja
push
aas
push
push
fs
mov
pop
xchg
sbb
fcmovnb
xchg
add
adc
add
orl
cmpsl
mov
nop
icebp
pop
stos
cmp
mov
shlb
mov
test
adc
mov
mov
cmpsl
push
xchg
fistl
sub
outsb
js
mov
pop
jnp
xchg
vorps
incl
add
or
pop
mov
jle
and
in
adc
jle
dec
add
pop
cli
pop
dec
push
test
scas
repz
cli
fcomps
pop
xor
scas
outsb
lcall
lahf
push
push
mov
xchg
xchg
mov
cmp
mov
mov
test
test
scas
stos
stos
mov
mov
mov
fsubl
add
pop
add
cltd
or
and
addb
iret
and
insb
jmp
cmp
cmp
aaa
mov
xor
jecxz
lret
icebp
push
sub
sahf
sub
cmc
pop
xchg
mov
sbb
fldt
std
cmp
push
leave
lods
jb
imul
pop
cli
or
clc
lret
andb
sub
inc
addr16
xchg
jle
inc
push
jae
pop
insb
aas
fnstcw
shrb
ret
jno
inc
das
iret
xchg
movsl
pop
cltd
cmpb
mov
dec
push
or
lds
or
pop
cli
pop
mov
dec
testl
insb
jg
popa
vmovss
dec
pop
xrelease
test
sbb
add
mov
add
fs
push
pop
mov
scas
sarb
fildll
add
add
imul
jnp
jno
jns
movsl
ja
les
and
loope
dec
lea
loopne
cmp
pop
icebp
gs
dec
fistl
add
dec
add
cltd
je
ja
pop
inc
jecxz
in
mov
dec
mov
in
pop
fadds
mov
add
shr
cli
aas
clc
pop
cwtl
jbe
cmp
xchg
popf
xor
in
mov
out
jo
and
pop
outsl
xchg
insl
je
out
pop
std
or
pushf
cmova
cltd
hlt
clc
mov
mov
sub
adc
add
into
xor
push
sub
jno
cmpsb
data16
lcall
imul
mov
mov
push
clc
aam
push
mov
fs
ffreep
out
or
mov
repz
mov
lahf
leave
xchg
test
and
push
mov
mov
add
jo
sbb
mov
pop
jg
jb
mov
pop
add
and
loope
ret
mov
push
sub
push
rorl
mov
roll
sahf
subl
ret
push
addb
mov
sarb
mov
into
mov
icebp
jge
or
in
aaa
jbe
pop
movsl
loop
fmull
std
shl
lods
pop
pusha
jle
fs
jo
into
out
sub
mov
inc
xor
pop
pop
ret
repnz
stc
fdivrl
dec
dec
out
and
jns
adc
and
jp
jo
int
dec
sub
cmc
inc
pop
dec
push
jecxz
pop
lock
decl
out
test
push
imul
stos
sub
insl
mov
mov
push
data16
mov
sub
push
pusha
arpl
or
cmc
mov
and
dec
cmp
stos
inc
add
adc
sbb
cli
xchg
adc
xor
inc
sub
rcrl
movsl
rol
xchg
loop
adcb
or
out
je
in
hlt
clc
cmp
fs
movsb
jl
mov
int3
adc
push
jae
imul
mov
xchg
testl
int3
pop
mov
jno
jo
cmp
cs
subl
into
pop
test
ja
add
dec
js
ljmp
rcll
and
and
ds
push
sub
sub
out
jo
adc
sub
xchg
movsl
mov
out
sahf
mov
je
lods
inc
cld
stc
sub
in
sbb
insw
flds
lock
repnz
adc
aaa
xor
jae
pop
mov
addr16
cld
dec
dec
movsb
hlt
add
out
bound
push
jp
xchg
cmp
pop
in
lcall
cld
mov
test
pop
dec
ret
rcr
mov
and
inc
stc
repz
xor
daa
mov
add
inc
xlat
dec
in
cmp
and
and
mov
fcoml
pop
xlat
imul
push
les
mov
cwtl
fwait
inc
sub
jne
dec
into
gs
enter
pop
jge
or
out
clc
add
cmp
or
icebp
lahf
push
scas
mov
ds
out
or
ret
cmc
ret
outsb
stc
jg
pop
inc
push
es
out
fs
adc
dec
mov
jno
pop
xchg
sbb
outsl
sub
push
sbb
add
lds
mov
push
iret
sub
callw
adc
add
call
je
mov
sbb
mov
imul
mov
xor
mov
fildl
mov
insb
nop
mov
daa
pop
lcall
or
fsts
add
test
sub
and
ret
cltd
pop
pop
stos
jo
or
sub
test
daa
hlt
pop
adc
imul
daa
sti
mov
std
mov
pop
jmp
sti
lds
dec
fstpl
dec
lods
out
sub
pop
mov
fisttpl
jg
lret
iret
jl
lds
movsl
pop
mov
std
mov
sub
jne
xchg
xchg
sub
mov
js
or
pop
loop
jg
push
incb
mov
call
cli
leave
cmc
mov
xchg
adc
xor
imul
sbb
mov
jl
jns
cmpsl
push
es
cmp
sbb
aam
inc
sub
aad
divl
sti
mov
test
mov
ret
imul
and
dec
and
rcrb
aam
mov
rorb
cmp
fcomps
sub
jne
push
mov
xor
outsl
cmp
mov
cmc
arpl
fistl
push
xlat
nop
mul
fisttps
jg
orb
sbb
out
add
jle
and
adc
mov
loopne
mov
repnz
sbb
jmp
pop
dec
lret
cli
or
cmc
sbb
sub
or
inc
add
inc
mov
add
loop
mov
ror
push
jno
popf
dec
jae
mov
pushf
xor
xor
mov
lret
je
mov
jbe
loope
pop
out
mov
loop
scas
push
dec
icebp
add
mov
jae
std
jbe
xor
or
mov
xor
sub
xchg
nop
push
push
mov
loop
clc
mov
adc
ja
mov
or
pop
sub
sub
mov
daa
cld
out
adc
push
sbb
aas
loope
cmp
ficoml
rsm
cltd
sbb
jno
daa
lock
mov
or
lret
mov
rorb
lret
dec
lcall
xor
mov
pop
je
pop
xlat
repz
mov
or
cltd
ret
push
dec
add
clc
dec
and
in
xchg
xchg
imul
adc
jp
jbe
bound
mov
cli
or
inc
adc
push
adc
scas
adc
mov
push
insl
or
scas
sbbl
pop
cltd
dec
inc
test
arpl
mov
pushf
or
mov
fimuls
mov
sub
or
or
data16
xchg
dec
pop
lock
das
cmpsl
push
es
cmp
sbb
push
mov
pop
add
xchg
bound
or
mov
xor
mov
and
popf
mov
js
shll
fs
pusha
inc
cmp
jne
fidivl
sbbl
dec
sub
mov
pushf
fs
fisubrs
cmp
je
push
int
dec
or
jge
cmc
or
sarb
js
sub
mov
adc
or
mov
enter
jns
imul
ljmp
pop
cwtl
insb
cmp
sub
faddl
push
lds
dec
fcmovnbe
or
lock
jb
and
mov
mov
out
into
dec
pushf
jne
int
incb
pop
in
mov
mov
ljmp
cli
inc
or
adc
mov
arpl
into
cmp
rcl
rolb
cmpb
lret
mov
mov
cmp
mov
stos
push
test
pop
cmp
test
mov
fisubrl
push
pop
cltd
adc
je
ja
scas
subl
stos
mov
mov
je
xlat
gs
sbb
inc
fcmovbe
imul
pop
push
xor
sub
push
dec
clc
cmp
popa
fwait
or
push
std
jbe
jb
push
adc
or
mov
xchg
xchg
cmp
mov
lds
jl
repz
cmpsb
add
or
ja
out
and
mov
or
int
mov
push
jecxz
push
adc
push
xchg
out
test
imul
movsl
mov
enter
stos
test
xor
in
in
jne
xor
and
pop
lcall
push
loopne
mov
pop
and
mov
loop
decb
inc
xlat
pop
aad
js
shll
jne
lea
mov
sahf
je
addr16
rep
arpl
stc
push
call
loopew
mov
loopne
call
ret
push
dec
add
adc
outsl
xchg
das
xor
data16
loopne
jl
fwait
adc
adc
jge
ficoml
xchg
stc
xchg
xchg
xchg
cmp
xchg
ret
insl
xchg
inc
inc
sub
mov
lds
aam
test
ret
inc
mov
sbb
dec
inc
mov
inc
jne
mov
xor
cld
lret
into
cwtl
pop
cmp
rolb
movsb
cmp
sbb
hlt
jo
dec
cs
std
test
das
xchg
subb
xchg
insb
ss
ds
inc
dec
add
repnz
out
jge
dec
pop
test
fstp
pop
jmp
add
sbb
jnp
iret
or
stos
xor
int
pop
sub
jmp
sub
mov
es
testl
aam
push
mov
fmull
or
pushf
add
jmp
sbb
lea
aam
push
jns
mov
ja
imul
sub
and
mov
movsl
shr
out
jp
mov
lcall
inc
ret
gs
xchg
or
test
test
mov
push
xor
xchg
mov
pop
ljmp
pop
fcoms
les
sub
pop
mov
ds
lcall
and
push
pop
mov
jecxz
and
dec
adc
insl
pop
lret
test
data16
sub
xchg
xor
pop
pop
adc
push
push
pusha
jae
mov
icebp
xor
or
cmp
xor
mov
and
or
icebp
shll
and
inc
or
loopne
dec
aam
out
add
cmp
push
mov
rcrl
dec
mov
xor
jno
dec
mov
loop
inc
jmp
push
adc
loopne
inc
decl
cwtl
not
inc
add
push
incl
fwait
in
xor
mov
xor
pop
jne
orb
pop
loope
insl
jo
jge
lret
mov
movsl
ds
aad
sub
add
arpl
insb
xchg
xchg
scas
xlat
jno
push
sbb
sbb
add
inc
sbb
ss
push
pop
mov
cwtl
pop
cmp
add
inc
ret
add
sbb
hlt
jo
dec
adc
std
test
das
xchg
loopne
xor
push
inc
dec
jmp
jge
dec
pop
test
fstp
pop
or
jns
jb
fwait
push
fisttps
std
jnp
iret
or
stos
xor
pop
test
fsubr
jae
adc
cltd
loope
leave
inc
dec
push
mov
cmp
adc
mov
and
or
lea
aam
push
jns
mov
push
xlat
imul
sub
and
mov
jo
enter
pop
jp
mov
sti
xor
adc
in
imul
jge
enter
test
mov
push
xor
xchg
mov
pop
incl
pop
fcoms
xor
adc
xlat
mov
lcall
and
push
pop
push
mov
adc
insl
push
mov
inc
jg
sub
xchg
xor
pop
pop
cwtl
stos
push
mov
push
jae
jae
mov
icebp
inc
cmpsl
and
sub
pminub
mov
cld
jmp
sbb
bound
dec
sub
add
dec
push
subb
decb
int3
jl
in
cmp
mov
out
orl
mov
sub
sbb
mov
dec
jp
scas
ret
mov
fwait
sbb
lds
negl
loopne
scas
cmp
mov
pop
jg
std
adc
pop
mov
mov
push
push
xchg
fistl
orb
add
inc
scas
pop
jmp
add
pushf
fcmovbe
es
mov
ja
pop
into
xor
lret
into
aaa
or
add
or
fldenv
pushf
pop
test
xchg
mov
or
sbb
imul
mov
pop
test
inc
jne
mov
ja
mulb
sbb
mov
xchg
adc
mov
mov
lods
sub
inc
mov
rorb
cmp
out
dec
lcall
jecxz
ja
dec
add
xchg
adc
add
sti
mov
into
mov
adc
xchg
lods
imul
scas
ret
sub
enter
fs
sbb
cs
leave
bound
jns
jns
or
negb
jle
add
data16
xchg
xorb
ds
fstpt
ja
in
in
lret
xor
cmp
mov
test
adc
outsl
jb
mov
add
sub
sbb
sbbl
and
mov
and
shl
loop
cmp
sti
insb
into
out
xchg
jmp
fwait
jp
push
aad
sbb
jne
mov
mov
jbe
push
iret
mov
mov
dec
pop
jle
jns
inc
cs
testb
mov
mov
fbld
pushf
adc
mov
mov
stos
cmp
dec
xlat
push
cmpsl
outsl
ljmp
inc
icebp
mov
jb
imul
and
pop
or
lret
mov
lods
xlat
cmpsb
aam
lds
jmp
or
adcb
loop
sub
and
mov
mov
xor
jmp
xchg
loop
pop
fsubs
test
push
or
jns
es
stc
xor
xchg
ret
sbbb
pushf
jmp
pop
inc
int
pop
mov
push
mov
shlb
sahf
sub
orl
sbb
push
xlat
mov
fnstenv
mov
adc
push
xchg
rorl
lods
insb
jg
jmp
mov
lock
mov
into
jbe
add
pop
jae
mov
pusha
aad
aam
int
or
lret
mov
mov
adc
mov
xorl
push
push
jnp
sub
out
dec
sub
jo
insb
xchg
pop
pop
mov
add
xchg
and
pusha
and
mov
loop
inc
jmp
ss
in
push
ret
and
sub
jae
add
jle
and
sti
xor
fwait
scas
into
clc
leave
inc
adc
pop
inc
push
ds
xor
xor
push
inc
das
push
scas
bound
fmull
movsl
inc
loope
std
mov
sub
jne
xor
test
jecxz
jo
scas
jne
jge
int3
ss
fdivrl
jge
cld
daa
cmc
and
clc
mov
xor
jnp
loope
cs
jns
mov
or
mov
push
jne
adcb
xchg
mov
sbb
lods
scas
sub
dec
pop
pop
xchg
jne
inc
fs
mov
adc
mov
stos
lock
test
test
movsl
int
sub
hlt
pop
out
shlb
jle
fistps
sub
or
mov
cmp
mov
dec
aaa
fisubs
sti
xchg
bound
mov
cmpb
lock
pop
out
or
pusha
rcrl
inc
cwtl
sub
in
out
shlb
pop
fcomip
adc
sti
xor
hlt
iret
int
data16
call
adc
xlat
scas
ds
in
sub
mov
push
pop
insb
rcr
inc
lds
push
lock
js
or
mov
pushl
push
sarb
add
lret
sub
pop
cmp
ds
in
push
mov
insb
dec
or
xlat
fidivrl
mov
pop
mov
sub
mov
movsb
mov
and
jnp
loopne
seta
popa
mov
fwait
add
hlt
mov
inc
inc
fstpt
and
sbb
and
gs
xchg
sbb
xor
lea
outsl
jne
movsb
dec
and
cmp
dec
mov
nop
pop
sti
dec
cmp
pop
out
or
cli
mov
fmul
enter
xor
push
fucom
imul
sub
lcall
popa
jg
push
adc
scas
add
dec
xlat
push
pop
push
pop
xchg
sti
jbe
aas
cltd
mov
out
jmp
push
icebp
repz
jge
pushf
daa
cmc
lea
add
mov
jbe,pt
fs
mov
add
push
mov
jge
orl
insl
mov
hlt
adc
lcall
sbb
xor
std
or
fwait
inc
aas
je
dec
dec
dec
mov
mov
fistl
movsb
cs
stos
cmp
test
pop
mov
push
in
sar
xchg
out
add
pop
add
fwait
jg
pop
push
mov
adc
lea
fs
xchg
lahf
mov
in
inc
lea
aam
push
jns
gs
xlat
imul
sub
and
mov
daa
jnp
dec
sbb
bound
jge
pop
data16
push
xchg
bound
jbe
push
adc
push
aas
sbb
jg
dec
push
mov
cmp
std
mov
push
or
ja
test
pop
out
outsl
jl
mov
pushf
push
or
mov
jmp
lahf
dec
push
xlat
dec
xor
test
xchg
mov
dec
icebp
mov
stos
ja
add
std
sub
xchg
aad
imul
popa
xor
repz
pushf
lcall
jle
adc
mov
aaa
jmp
iret
mov
orl
ret
test
xchg
arpl
push
mov
popf
ret
das
ljmp
mov
jne
or
mov
mov
jne
xchg
stos
and
fiadds
cmp
xchg
into
nop
cmp
sub
push
insb
into
xchg
add
fldl
mov
insl
add
rcl
or
enter
es
call
mov
popa
or
dec
scas
and
cmp
jg
adc
jl
or
pop
adc
jb
and
mov
lock
mov
mov
sbb
adc
scas
sub
loope
cs
jns
mov
call
clc
push
lret
mov
fucomp
mov
hlt
xlat
js
xor
cltd
movl
scas
mov
iret
mov
andl
adc
call
or
repnz
push
fstl
jmp
in
out
jg
xor
in
adc
inc
and
sbbb
insl
scas
pop
fists
inc
loope
or
push
aaa
xchg
rcl
scas
mov
fwait
mov
imul
in
add
xor
xchg
imul
ficoml
and
bound
js
mov
mov
idivl
mov
roll
mov
repz
jle
arpl
sarb
sbb
xchg
arpl
xor
pushf
or
mov
fidivrs
cmpsl
mov
sti
cmp
mov
subl
cltd
icebp
add
jecxz
adc
dec
std
mov
test
cmp
pop
lea
iret
lea
mov
sub
repnz
fidivrs
dec
imul
int3
js
loopne
lock
loope
nop
ljmp
test
mov
in
enter
or
dec
sub
mov
xchg
jle
in
lock
xchg
and
jne
hlt
lock
and
mov
cmp
cmp
jl
jae
stos
adc
jb
push
stc
and
out
dec
aaa
push
addb
mov
inc
enter
jae
dec
fucom
xchg
sbb
pop
cli
or
mov
std
mov
xor
repnz
int3
add
subb
sbb
sub
pushf
or
mov
sbb
or
xor
jne
adc
in
sbb
icebp
add
sub
lock
out
out
in
sbb
xor
scas
out
fiaddl
mov
dec
pop
mov
mov
sbb
inc
cmp
sub
xchg
test
sub
sar
stos
daa
test
xor
dec
inc
lock
shr
out
mov
js
jo
pop
mov
popa
adc
bound
loopne
dec
add
and
cmp
xchg
sti
and
adcb
mov
sub
push
ret
push
aaa
xchg
scas
mov
lock
inc
mov
xor
sarb
mov
enter
imul
pop
inc
mov
add
push
cli
jnp
xchg
or
les
inc
push
loope
outsl
int3
dec
out
insl
add
subb
sbb
cmpsl
rclb
repnz
pop
into
xor
lret
into
aaa
or
add
or
jns
cmp
fidivrs
push
test
push
mov
mov
sbb
imul
mov
pop
test
jne
mov
ja
daa
and
mov
mov
dec
test
out
cmpsl
lret
adc
inc
push
mov
pop
out
add
dec
fistl
add
mov
nop
inc
xor
cmp
in
push
fisubrs
cmp
je
push
int
dec
mov
aam
ds
lds
add
orl
lret
mov
pop
shll
jp
mov
cmp
adc
in
imul
pop
inc
push
xchg
add
jg
std
mov
xchg
sub
dec
sbb
lds
ret
jo
jmp
mov
mov
out
pop
mov
repz
mov
sbb
mov
idivb
jmp
loope
and
into
inc
test
insl
cmp
outsl
ds
pushf
sti
cmp
cmc
cmp
test
inc
shl
cmc
xor
mov
fadd
ret
cwtl
pop
pusha
mov
push
or
pop
stc
jecxz
pushf
jbe
clc
jbe
les
xchg
mov
mov
stos
push
test
pop
cmp
xor
jp
sub
lock
dec
jno
jb
in
pop
nop
outsb
imul
push
scas
add
scas
test
dec
je
mov
jae
jle
dec
ret
stc
push
out
cwtl
sub
push
arpl
dec
mov
dec
and
fiadds
jecxz
out
sbb
cmpsl
mov
out
out
test
out
lods
fs
inc
mov
push
xor
std
in
js
lcall
push
and
xchg
ds
xor
sahf
popf
mov
daa
mov
ds
adc
push
mov
dec
push
sti
rcrb
arpl
lods
std
add
pop
stos
and
fsubr
test
pop
sbb
cltd
adc
outsl
mov
xchg
popa
ret
xorl
int
dec
repnz
ffree
sysenter
js
lcall
adc
adc
push
xchg
or
cli
sub
jno
pop
mov
mov
pop
outsb
inc
mov
adc
ja
adc
mov
rorb
lea
aad
xor
and
and
mov
imul
xor
pop
pop
enter
xor
lds
pavgb
repnz
aas
push
jl
int
std
mov
imull
adcl
jns
inc
mov
adc
loop
mov
mov
fadds
adc
push
mov
ds
lcall
and
popf
int3
add
mov
jns
mov
sti
cmp
scas
loop
out
push
add
das
xchg
push
xor
push
popf
cmp
ds
repz
bound
mov
xchg
hlt
das
inc
imul
xchg
rorl
enter
test
mov
xlat
adc
pop
ss
or
adc
out
testl
mov
sub
inc
jb
jo
mov
addr16
arpl
cmp
sti
mov
call
sti
jp
ja
xchg
cwtl
not
add
inc
push
nop
fwait
scas
lods
mov
sub
fcmovnu
add
and
bound
loope
xchg
jno
cs
adc
adc
adc
fsubrl
sbb
or
cmpsb
and
pextrw
mov
shrl
nop
sbb
cmpsb
pop
add
mov
scas
push
and
dec
pop
out
mov
dec
dec
mov
cwtl
out
jns
adc
jle
fwait
inc
and
test
adc
dec
fmull
dec
pop
loop
cmp
cwtl
stc
jbe
or
push
in
lods
mov
inc
mov
and
stos
mov
inc
mov
jne
inc
push
std
rcr
push
aad
and
lock
sub
dec
push
mov
cmp
or
pushf
add
mov
cmp
xchg
fnstenv
adcl
test
repnz
sbb
jg
cltd
or
daa
or
add
adc
jle
das
xor
lods
fdivl
adc
pop
xor
or
and
addr16
stc
arpl
stos
mov
cmpsb
lock
movsl
jle
jno
jp
push
in
scas
scas
inc
aad
arpl
pop
jb
or
aas
mov
xchg
cld
mov
pop
loop
dec
fcomps
xor
dec
enter
jecxz
add
push
popf
jl
imul
or
insb
imul
or
mov
enter
sub
fisubs
push
mov
sbb
cltd
aaa
jge
jns
mov
or
cmpsl
push
loopne
test
push
fiadds
ret
aas
ds
gs
ljmp
add
cmp
lock
subl
int3
inc
jle
in
cmp
adc
cmpsb
cmp
pop
xlat
mov
call
mov
js
sub
mov
adc
cwtl
fwait
mov
jp
xor
sbb
fdivp
pop
xor
jae
sub
cmp
popa
leave
clc
xchg
fwait
scas
test
test
mov
push
xor
xchg
xchg
das
cmp
scas
pop
cmc
outsl
pop
insl
cmc
lods
xchg
push
insl
test
adc
hlt
imul
loopne
xor
pop
pusha
dec
lret
into
sub
sub
clc
push
pushw
jecxz
in
jae
add
mov
and
das
fwait
cli
mov
inc
mov
pop
mov
push
cs
mov
je
cltd
cmp
js
and
test
lods
nop
cmp
inc
enter
mov
xchg
or
rorl
add
ljmp
out
fwait
pop
mov
mov
fcompl
sub
aaa
dec
cmp
mov
mov
cmp
inc
mov
push
jge
repz
xchg
fsubl
loopne
lret
sar
pop
xchg
repz
and
mov
xor
fcomip
pop
mov
bnd
inc
ret
stc
sbb
push
fbstp
adc
cmp
clc
xor
loopne
sub
in
insb
push
jno
inc
jmp
lahf
lock
mov
push
jge
push
mov
pop
mov
jbe
xchg
push
in
call
rclb
mov
jecxz
add
out
jg
fimull
imul
jne
lahf
inc
imul
cmp
dec
sbb
cmp
sahf
xchg
pop
test
orl
add
dec
js
inc
sub
in
ljmp
add
inc
sahf
mov
jnp
ja
push
pop
jecxz
sti
dec
jae
mov
inc
movsl
aas
or
push
sahf
fstpt
ljmp
lahf
mov
push
cwtl
stos
cmpsl
push
stos
insl
mov
fildl
inc
enter
imul
add
sub
pop
sbbb
sub
adc
pop
mov
mov
mov
cmp
mov
lds
push
popf
push
mov
xchg
stos
xlat
xor
sahf
popf
mov
or
push
xchg
in
iret
insl
and
cmpl
call
mov
cs
inc
leave
sahf
stos
push
add
add
lock
push
dec
movsb
imul
mov
mov
icebp
mov
mov
fidivl
adc
mov
shr
push
xchg
jge
in
lock
sbb
inc
xor
lods
jo
inc
mov
or
jbe
cmp
mov
nop
mov
mov
cmpsl
push
and
push
sub
sahf
sub
cltd
lods
push
jmp
ss
mov
sbb
loope
mov
leave
popf
sub
sub
js
icebp
or
lea
pop
daa
in
xor
fsubrl
aas
stos
clc
arpl
sub
push
ret
inc
mov
shlb
inc
push
rolw
mov
mov
out
jae
repz
pushf
push
sar
jecxz
repnz
int
inc
adc
movsb
dec
and
push
adc
dec
push
stc
ss
test
roll
outsb
enter
aaa
inc
inc
in
jb
cltd
xchg
and
push
mov
lret
je
fxam
fistps
js
out
sub
mov
setno
sbb
mov
pop
xchg
xor
shl
in
sub
out
xchg
in
lock
sub
or
mov
sbb
gs
repz
jae
hlt
mov
pop
insb
repz
cmp
jb
pop
mov
mov
jle
xor
insb
jg
lcall
fs
xlat
out
add
xor
hlt
test
icebp
int3
dec
fucom
leave
sahf
xor
add
fdivrl
jne
and
xchg
daa
mov
inc
into
in
sub
xchg
sti
add
pushf
shlb
out
xchg
outsl
sbb
push
scas
xchg
xchg
mov
cmp
fs
aad
shrb
sti
sbb
or
xchg
test
jg
out
lahf
cltd
imul
pop
dec
sahf
mov
mov
pop
mov
mov
js
jmp
test
out
sbb
cmpsl
cmp
adcl
cmp
shlb
sub
sub
inc
stc
shr
addl
insb
aas
and
jno
mov
pop
mov
cmp
ss
aaa
cmp
mov
sti
mov
pop
fsubl
mov
es
loop
rorb
das
cs
dec
and
cmp
push
aad
outsl
aaa
xchg
bound
cmp
jo
cli
sbb
repnz
xchg
fsts
xchg
fisttps
scas
ret
sbb
pop
xlat
push
pusha
sbb
xchg
movsl
xor
out
mov
lea
xorb
shlb
cli
adc
sti
lea
cwtl
out
inc
mov
cld
add
jl
sbbl
shlb
ja
lock
mov
mov
cmp
sub
and
mov
adc
adc
ja
pop
mov
xchg
movsl
add
shll
dec
mov
cmp
inc
dec
loopne
inc
mov
hlt
sub
dec
sub
adc
lea
or
push
push
bound
push
arpl
mov
shlb
mov
sti
mov
mov
mov
mov
push
push
cwtl
xchg
add
das
cs
dec
add
ljmp
testb
lret
xchg
movsl
xchg
adc
pop
jo
cli
or
inc
sub
dec
test
dec
xchg
scas
push
pusha
and
jno
ficomps
dec
xchg
hlt
xchg
inc
or
ja
in
addr16
jecxz
mov
push
jl,pt
adc
pop
test
ljmp
xor
nop
sahf
lds
sub
inc
cmpsl
pop
es
mov
sbb
push
mov
inc
aad
mov
subb
les
inc
mov
mov
daa
test
add
dec
ss
jg
leave
fdiv
test
jno
ficompl
cmpsl
adc
cltd
xor
add
lock
jmp
and
mov
rorb
cmp
aaa
nop
mov
jno
popa
sbb
ljmp
movsb
cwtl
sub
aad
cmp
add
das
add
shlb
jo
outsl
xor
dec
dec
out
xchg
and
data16
cwtl
jle
lahf
add
inc
popf
jns
aad
jnp
push
mov
pop
xor
leave
lock
out
xchg
cmp
and
add
or
sbbl
dec
push
jb
cmp
roll
pop
lock
cwtl
arpl
inc
and
divb
out
jg
sti
dec
xor
push
inc
xchg
jg
mov
dec
mov
jmp
js
add
xchg
xlat
scas
std
adc
setno
sbb
mov
mov
sub
shr
or
cld
or
adc
pop
mov
cld
push
or
dec
jecxz
movsb
std
mov
in
sbb
and
rolb
xchg
push
nop
dec
cltd
mov
push
into
into
test
mov
mov
cmp
add
notb
clc
imul
or
or
jg
sbb
mov
dec
dec
and
push
shll
in
clc
pop
push
roll
pop
xor
movsl
mov
xchg
mov
in
into
lret
cmpsl
sti
int
mov
push
icebp
iret
std
data16
mov
inc
test
inc
push
add
and
inc
in
jb
inc
sti
xchg
xchg
rcrl
jbe
xchg
js
arpl
dec
xchg
shll
push
sbb
mov
stos
in
lcall
fsubr
popa
sub
ljmp
daa
arpl
pop
loop
or
jecxz
shlb
movsb
sub
xchg
gs
jge
sbb
testl
sbb
aad
cwtl
hlt
inc
into
or
ret
clc
mov
sbb
xchg
jmp
jne
ja
sti
xor
inc
shlb
inc
jns
xor
or
cmpsl
in
rcrl
fwait
out
jg
mov
imul
xchg
pushf
popf
mov
mov
cmp
xor
jae
out
pop
or
jno
cmp
xor
adc
rcl
jmp
lcall
out
imul
push
push
sbb
jl
daa
cs
dec
push
jmp
stos
stc
rolb
dec
cmp
js
xchg
insl
cld
lcall
addr16
ret
add
in
scas
sahf
inc
jae
hlt
xlat
out
add
inc
pop
pop
or
mov
pop
outsl
push
cmp
stos
cmpsb
push
mov
dec
push
in
mov
mov
xor
and
jmp
push
jle
jge
and
scas
add
popf
dec
sub
vcomiss
mov
xchg
int
or
pop
xor
add
adc
insl
mov
lea
or
daa
cmp
push
mov
xor
fsubrs
adc
jnp
mov
out
xchg
movsl
pusha
hlt
xchg
dec
and
rcr
roll
xchg
in
jmp
jns
dec
cmp
pop
pop
cli
pop
fldlg2
cwtl
clc
adc
xor
icebp
mov
sarb
cwtl
sbb
cmpsl
mov
push
pusha
jae
cmpsb
or
icebp
ds
js
or
mov
jge
pushf
push
scas
cs
xchg
mov
push
fidivrs
aas
adc
mov
dec
ja
rorb
ret
jne
mov
or
or
mov
xchg
hlt
mov
mov
idivb
pop
outsb
dec
jp
fstpt
jl
jnp
push
retw
loope
mull
mov
jl
cwtl
fwait
in
lods
push
test
sbb
push
cmp
adc
mov
dec
popa
pop
lret
cltd
sbb
mov
mov
outsl
iret
cmp
inc
or
xchg
adc
rcrb
mov
test
out
rolb
call
mov
in
dec
mov
inc
pop
xchg
adcl
test
adc
scas
lahf
adcb
pop
sbb
fcompl
xchg
adcb
dec
dec
mov
rcrb
inc
test
aaa
in
ja
xchg
xor
mov
add
daa
cmp
in
pop
sti
sub
je
inc
push
mov
cmpsb
stc
inc
mov
add
jmp
xor
arpl
lock
outsb
jmp
lds
push
lcall
adcb
or
push
sub
fadds
addb
pop
mov
je
lret
fcomip
inc
dec
cmpsb
gs
adc
jo
xchg
movsl
mov
mov
fidivrl
arpl
cmpsb
xchg
push
outsl
vcomiss
cmp
pop
add
sub
frstor
lahf
xchg
xchg
cld
lea
push
adc
jbe
fs
mov
pusha
ljmp
mov
iret
pop
adc
sub
pop
push
jb
and
cmp
test
mov
fadd
into
hlt
call
in
in
test
mov
jge
jecxz
fildll
loopne
or
jnp
lods
xlat
test
daa
test
mov
js
xchg
fsubr
jg
push
inc
loope
pop
dec
push
mov
or
es
mov
xchg
mov
dec
arpl
mov
stc
popa
test
xchg
inc
imul
filds
psubsw
enter
jb
enter
out
movsb
test
dec
imul
add
adc
push
cmp
adc
mov
cld
lret
pop
addl
inc
push
dec
and
mov
ret
pop
pop
add
rcr
out
pop
mov
push
xor
mov
dec
mov
xchg
mov
insl
lret
lret
popa
and
popf
iret
loop
addb
jns
insb
or
pop
mov
fistl
lea
sbb
outsb
outsb
std
stos
popf
mov
xor
sbb
ds
je
cltd
add
idivb
mov
pop
jne
adc
in
lds
push
movsl
mov
shll
dec
stos
xlat
adc
xlat
ljmp
xor
xchg
pop
jge
adc
int
call
mov
mov
mov
rcl
scas
mov
call
mov
enter
push
push
cmpsl
cmp
sbb
mov
insb
and
enter
shlb
je
xor
push
mov
insl
lods
sbb
gs
jg
daa
loope
rolb
imul
inc
aad
push
cltd
scas
jecxz
fmuls
les
mov
lods
dec
cmp
fldl
lahf
mov
xor
mov
or
fsts
and
jecxz
adc
cli
cmp
out
leave
dec
xlat
xchg
push
popf
xchg
and
xchg
push
xor
inc
pop
sbb
lds
out
add
stos
in
pop
loop
lret
mov
nop
in
lcall
jnp
and
ret
mov
fstp
rcll
mov
leave
stos
in
loopne
pop
rcrb
dec
enter
push
inc
scas
and
and
loope
int3
out
mov
ficomps
cmp
lcall
jae
jecxz
mov
adcl
mov
jmp
cs
call
popf
sub
sahf
and
daa
pop
cmp
jmp
xor
mov
sub
popf
xchg
pop
mov
fisubrl
adc
out
jnp
xchg
xchg
movsl
jb
sub
adc
mov
or
mov
je
lret
mov
out
pop
rorb
push
hlt
lea
test
roll
jle
in
jle
jecxz
popa
out
sbbl
jl
pop
call
mov
orb
scas
ss
sbb
adcb
dec
pop
mov
lcall
data16
lcall
test
bound
dec
in
mov
dec
loopne
xor
cltd
rolb
push
dec
pop
adc
inc
or
xchg
stos
mov
jne
cmp
mov
shll
add
aam
dec
cltd
jl
aad
aam
sub
fwait
stos
jle
sub
in
sub
les
cmp
xchg
movl
imul
pop
xchg
imul
ss
out
pop
inc
sub
push
mov
pop
sahf
add
cmp
nop
inc
sub
fstps
mov
mov
mov
pop
add
repnz
jmp
add
add
mov
sahf
pop
rorb
add
popf
xor
dec
icebp
pusha
jae
xor
mov
clc
jb
pop
mov
jg
mov
movsb
clc
dec
mov
cmp
cmpl
hlt
lock
ret
fidivl
fdivl
testb
filds
adc
jno
and
mov
mov
mov
push
cmp
jmp
out
push
mov
adc
popa
ljmp
pop
cmp
pop
gs
out
mov
pop
cmp
aad
pop
int3
lret
dec
popa
stos
insb
xchg
adc
or
pop
inc
das
push
cmpsb
mov
test
mov
pusha
inc
push
addr16
xlat
ljmp
pushf
je
xchg
push
enter
sub
jg
rorb
repz
xchg
int
jecxz
sub
add
hlt
fldlg2
cwtl
arpl
adc
in
aad
add
sbb
xchg
inc
inc
inc
sbb
dec
pop
xchg
test
aaa
dec
bound
xchg
js
leave
fsub
ja
xchg
cmp
adc
adc
flds
addb
mov
lahf
loope
sbb
xchg
pop
cmp
xchg
or
pushf
outsl
lret
and
jno
out
mov
jmp
push
js
pop
repnz
fldt
push
or
mov
sar
xchg
and
mov
xchg
fnstcw
scas
ret
dec
cmc
pop
cltd
push
and
cmp
xor
adc
jp
sbb
cmp
jne
and
enter
loopne
push
xchg
lods
jbe
pushf
fwait
lret
xor
fisubrs
in
push
shrl
movl
lahf
lahf
mov
in
into
push
adc
repz
sar
adc
int
or
fld1
outsb
test
push
push
out
cmpps
jo
in
rclb
sub
inc
xor
jo
dec
stc
jnp
pop
adc
fbstp
je
dec
leave
dec
sbb
sbb
mov
cld
lock
and
xchg
cmp
aas
lcall
and
mov
das
aas
dec
pop
jno
lock
fildl
and
loope
sbb
mov
movsl
push
mov
fistl
subl
mov
pushf
jp
sbb
idiv
ret
das
add
fisubrs
shll
adc
pushf
xor
or
fistps
pop
sti
lahf
mov
push
jp
adcl
jle
cmp
push
xchg
cli
push
nop
scas
xor
arpl
lods
mov
insb
lahf
sbb
xchg
pushf
cmp
in
lods
xor
sub
jbe
hlt
adc
iret
pop
leave
sbb
pop
mov
adc
roll
adc
test
sbb
fldcw
add
mov
and
or
mov
imul
jmp
jbe
push
and
iret
xor
cld
pi2fw
sarb
xlat
push
mov
loope
in
push
sub
jne
inc
repnz
lock
rcrb
mov
jne
xchg
stos
and
fiadds
pushf
cmp
xchg
into
nop
cmp
sub
js
insb
into
adc
shrl
add
insl
add
rcl
mov
enter
es
call
mov
popa
or
dec
scas
and
cmp
jg
inc
xor
jl
or
pop
mov
shll
insb
mov
jle
outsl
loope
inc
push
stc
faddl
les
xchg
or
imul
rcrb
dec
or
rcrl
pop
inc
ror
shlb
fidivrs
fldcw
jecxz
mov
jns
mov
xchg
sbb
fwait
call
jl
arpl
ficompl
add
imul
mov
sub
xor
in
cmpsl
inc
mov
scas
shlb
xlat
mov
shr
pop
inc
inc
cmp
add
inc
lods
arpl
testb
loopne
and
jb
add
cld
scas
inc
ds
int
mov
jl
mov
pop
nop
sub
add
xchg
mov
scas
ret
into
or
test
icebp
lds
xor
test
popa
pop
loope
mov
clc
pop
shlb
repnz
ds
aad
sub
stc
in
scas
ret
outsb
int
insl
jo
cs
jno
mov
mov
sbb
mov
aaa
push
mov
or
xor
imul
imul
insb
sbb
pushf
xchg
scas
lahf
adcb
in
xor
les
fld
mov
dec
xor
add
jns
pop
fisubs
nop
ficompl
adcl
jl
jae
lret
hlt
and
lea
roll
inc
cwtl
fwait
pop
mov
add
out
adc
jl
or
inc
push
jae
arpl
movsl
cmp
out
cmp
push
sub
lock
repnz
add
cmpsl
push
dec
insl
pop
add
repz
xor
mov
fistl
dec
mov
and
cli
and
dec
adc
sbb
daa
lret
adc
fldcw
loop
xchg
inc
adc
mov
shrl
call
sub
lahf
sbb
mov
clc
push
xor
and
and
divb
mov
sarb
addb
push
jne
jg
or
mov
inc
test
add
cmpsl
and
pusha
sbb
jp
lret
fsub
jecxz
loop
push
incb
pop
inc
push
sbb
aam
jno
stos
mov
dec
sub
push
and
inc
rorl
or
jb
outsb
rcrl
sbb
mov
movsb
jg
or
pop
cs
shll
mov
shlb
mov
aaa
jb
push
outsl
mov
and
jmp
aam
mov
imul
sbb
movsl
les
add
cli
jbe
sbb
push
out
cwtl
jle
bts
shl
inc
push
pusha
jg
push
insb
aas
push
jmp
pop
xchg
pop
mov
pop
inc
add
gs
xchg
paddw
mov
pop
sub
cmp
mov
das
lock
rcll
sbb
and
das
ret
push
push
sbb
pop
lock
mov
mov
in
mov
add
fwait
sub
mov
in
int
js
lahf
mov
add
ljmp
adc
outsl
mov
cmc
inc
adc
dec
cmp
js
push
out
add
dec
push
mov
loope
ja
jne
aas
and
mov
scas
andl
movsb
dec
je
mov
xchg
int3
sbb
lret
push
not
pop
mov
and
sbb
mov
add
cmc
cmp
xchg
fcomip
pop
add
test
mov
test
sub
push
popf
jns
xlat
mov
push
pop
and
inc
fcomps
popf
subl
mov
mov
adc
lahf
mov
lea
dec
shlb
push
cmpsl
pop
and
and
inc
bound
add
adc
add
push
es
cmp
sbb
cli
dec
xor
mov
pusha
mov
scas
rclb
int
lods
icebp
inc
rclb
xchg
test
adc
hlt
mov
adc
cmp
sub
jns
xlat
ljmp
out
cs
lret
xor
movsl
cmpsl
mov
ss
int3
out
mov
arpl
rolb
rorl
push
mov
inc
jmp
xor
xchg
out
insl
mov
push
les
enter
mov
imul
mov
cmc
adc
push
adc
pop
test
mov
sub
mov
sub
xchg
inc
mov
sarl
mov
sahf
add
insl
xchg
es
push
sarb
mov
clc
bound
xor
and
add
cmp
test
cmpsl
gs
testb
test
jg
sub
outsb
into
inc
test
sbb
cld
xchg
sbb
push
pushw
mov
dec
xchg
xchg
stc
je
jmp
js
out
enter
lahf
enter
test
test
add
ds
push
pop
fsubr
sarl
sbb
in
mov
and
insl
cmp
and
outsl
dec
mov
and
scas
test
mov
movsb
pop
movsb
into
push
fbstp
push
sub
xlat
imul
sub
pop
add
pusha
push
cwtl
fwait
and
add
sbb
xor
gs
pop
pop
int3
dec
dec
popa
pop
out
ret
imul
sub
sub
addb
pop
mov
fucomip
popf
xor
pop
push
addl
push
lret
add
inc
pop
sahf
mov
xchg
mov
mov
loope
add
sarl
mov
ja
mov
std
cmc
jno
insb
jg
rcr
lcall
sbb
cltd
mov
jg
int3
cmp
out
dec
cmp
push
jne
fstp
leave
mov
mov
lret
ja
xchg
aad
inc
adc
movsb
sti
dec
mov
faddp
aam
ss
pop
jp
leave
mov
loopne
push
bound
arpl
daa
or
jle
cmp
test
negb
je
mov
test
gs
imul
pop
cltd
sbbl
pop
inc
inc
sbb
ljmp
adc
leave
shll
scas
and
lods
stc
pop
fidivs
mov
inc
pop
and
jl
push
mov
test
jbe
pop
add
mov
repz
xchg
adc
clc
ret
mov
nop
shlb
mov
and
fldlg2
enter
mov
adc
push
add
sbb
sub
and
inc
roll
ficoml
popf
mov
dec
loopne
dec
sti
dec
dec
mov
rolb
jb
xor
ficoms
adc
mov
and
rcl
adc
mov
sub
add
insb
push
mov
xchg
in
and
test
cwtl
pop
dec
push
push
repnz
cld
xchg
jg
int
andb
ret
push
sub
lods
scas
lret
shl
or
pop
loope
inc
sahf
inc
pop
xor
xor
inc
push
mov
mov
push
mov
dec
cmp
sbb
mov
in
cwtl
add
cmp
ja
ljmp
mov
or
cmp
mov
outsl
imul
dec
fcomps
mov
cs
fimuls
outsl
pushf
callw
cltd
pusha
call
mov
lret
sub
and
or
dec
cmp
fs
mov
pushf
pusha
sbbb
loopne
int3
ffree
jae
in
lcall
das
inc
test
pop
mov
ss
aam
sub
xlat
ljmp
out
sbb
mov
jne
xchg
pop
fs
dec
jbe
pop
lods
adc
stos
xor
or
sub
jns
cmp
pop
xlat
mov
call
jb
push
outsl
or
xchg
pushf
inc
scas
ret
into
mov
jge
cmp
pop
jnp
sarl
cmp
cld
fistps
lock
loopne
or
jmp
es
movsl
nop
es
xor
pop
dec
lret
xor
push
pusha
dec
jo
fucomi
inc
push
mov
test
nop
dec
add
mov
mov
out
hlt
mov
int3
sub
mov
or
jns
add
adc
call
jne
pop
jle
fistpl
jne
cmp
sbb
mov
decb
mov
add
je
push
and
inc
ja
add
inc
cmp
adc
mov
inc
rcl
xlat
push
and
daa
push
pop
leave
mov
inc
xlat
pop
aad
js
sahf
punpckhbw
lods
daa
or
adc
xor
inc
push
xchg
mov
into
push
mov
or
imul
lcall
out
insl
arpl
pop
cltd
jecxz
jb
inc
xlat
sbb
and
push
testb
adc
mov
rcll
adc
std
shrb
inc
mov
aaa
rcll
scas
cmc
fcomps
sbb
jno
sbb
cmc
out
pop
or
mov
mulb
lahf
rcl
js
fdivs
mov
lds
fnstcw
dec
icebp
iret
jnp
repnz
aam
add
sub
adc
cmpsl
mov
cmp
or
xchg
pushf
loope
mov
cwtl
scas
lds
lret
ja
add
xchg
cs
adc
mov
mov
jne
inc
push
std
rcr
push
aad
add
lock
push
iret
mov
adc
bound
in
jp
sub
and
pop
push
cmp
call
sahf
adc
loop
jge
call
adcl
std
or
mov
xor
xor
cmp
xor
jmp
imul
dec
cmpsb
ret
stc
sbb
repz
xor
rol
fldt
ds
negl
cmpl
push
aas
in
jb
fstp
pop
inc
add
cs
sahf
mov
cmp
sub
and
add
js
push
data16
xor
lock
out
pop
ds
stos
jge
in
xchg
sbb
cmp
popf
sbb
push
add
xor
cmp
xchg
nop
push
push
mov
das
mov
xchg
lods
fwait
sub
mov
fdivl
movsb
sti
and
cmp
aaa
xlat
push
inc
aas
lods
pop
leave
sahf
inc
inc
xlat
pop
rorb
push
jne
sub
movsl
xchg
jle
and
add
and
popf
pop
xor
and
mov
xlat
mov
inc
mov
xchg
fisubrs
adc
push
imul
jne
in
std
adc
lret
sbbb
sti
push
pop
pop
mov
cmp
cwtl
jle
mov
xchg
mov
in
scas
or
cwtl
xor
and
ret
jno
scas
jmp
mov
sbb
or
fsts
xchg
shl
outsb
mov
mov
mov
dec
out
jb
pop
aad
imul
mov
push
xor
mov
pop
fs
push
data16
repz
dec
mov
push
xchg
push
shlb
incl
and
int3
std
daa
cmpsb
and
scas
rcl
add
inc
lcall
mov
call
add
fists
jbe
lods
xchg
in
sarb
cs
xlat
cmpsb
ds
add
stos
loope
add
jg
imul
loop
lods
out
push
enter
sub
in
pop
in
pop
mov
and
repnz
aas
push
int
lcall
hlt
and
add
jns
mov
lret
scas
inc
xchg
int3
pop
cwtl
cmpsl
pop
jnp
inc
repnz
fiadds
xor
xchg
sub
jmp
loope
lret
movsb
mov
push
loop
rcll
sti
sbb
inc
or
sahf
call
mov
adc
push
loopne
mov
xchg
cli
and
xor
mov
filds
mov
data16
test
dec
cmp
rcr
cmp
stos
xchg
data16
ljmp
mov
mov
jb
add
and
xor
out
jb
sahf
and
or
push
in
mov
loop
or
fs
and
dec
shll
pop
jb
shll
sbb
push
jmp
jbe
pusha
andl
les
fldcw
inc
enter
fsubl
test
pop
mov
shld
push
dec
std
cmp
sub
fbld
mov
push
ljmp
pop
jnp
mov
test
movsl
jb
pop
loopne
mov
int3
and
lahf
jb
lret
mov
out
cmpsb
mov
je
out
or
ljmp
inc
or
push
jmp
sbb
xor
rcrb
pop
outsb
dec
dec
pop
push
shrb
dec
inc
mov
loope
in
pop
jne
adc
jl
lss
movsb
jbe
mov
shlb
dec
push
ss
inc
sub
sbb
ljmp
or
jb
mov
adc
rclb
imul
mov
js
jecxz
cmp
cmpsb
lret
xchg
xchg
cmc
jns
cmpb
xchg
fsubrl
pop
popa
push
scas
sub
icebp
fs
fldt
daa
xor
sbb
iret
and
fwait
xchg
aas
push
sub
xchg
mov
push
mov
xchg
pop
popf
xor
inc
scas
push
mov
pushf
inc
jo
xchg
popf
fsub
in
adc
fstpl
inc
mov
int3
iret
stos
mov
insb
push
shrl
xor
jecxz
gs
push
insw
fld
sbb
jnp
cmp
jne
std
inc
fdivrl
pop
fwait
dec
xor
cld
dec
pop
xchg
je
mov
push
shlb
xor
cld
push
push
jbe
loopne
lods
nop
dec
fs
out
mov
test
mov
adc
shll
adc
lock
push
sbb
pop
out
add
mov
dec
xor
xor
and
add
mov
movsl
fbld
add
outsl
shl
imul
shl
or
add
dec
xor
cmp
push
sbb
sarb
clc
sub
repz
cwtl
rclb
jge
scas
test
jecxz
push
jb
mov
ds
xchg
mov
stos
pop
inc
cmp
cld
pop
jl
cmpsl
movsb
and
cmp
sub
pushf
mov
sub
shll
dec
push
xor
shlb
dec
push
dec
out
arpl
cli
sbb
out
ret
pop
insb
jg
jle
insl
mov
je
ficoml
xchg
mov
xchg
cli
hlt
push
dec
imul
sbb
push
movsl
xor
outsl
mov
outsl
addr16
adc
test
jae
call
js
dec
sub
push
daa
sub
les
xchg
aaa
ret
jne
arpl
xor
pop
xchg
lds
cs
push
mov
dec
and
inc
insb
out
dec
push
xor
push
shrl
add
dec
add
iret
cmpsb
and
sbb
inc
cs
cmp
and
push
gs
cmpsl
ror
dec
cmp
sbb
daa
cmp
or
xchg
push
psubusw
mov
ror
lcall
xor
outsl
jb
mov
vpaddd
mov
lds
and
and
add
lret
addb
out
loope
add
andl
sbb
add
inc
lods
rcll
or
int3
inc
jo
inc
inc
lods
mov
pop
pop
mov
jle
arpl
jns
jnp
test
and
adc
xchg
push
inc
pop
and
aam
data16
pusha
inc
push
pop
adc
inc
ret
sbb
imul
cltd
orb
xchg
push
xchg
mov
jp
cmpsb
aam
jno
gs
or
test
adc
add
sub
popl
jecxz
shlb
scas
mov
into
cli
stos
xchg
mov
popa
add
mov
pop
jg
stc
sbb
orl
jnp
inc
push
mov
mov
sar
out
pop
mov
in
bound
sahf
in
mov
dec
cmp
jns
jbe
fs
mov
clc
mov
mov
pop
iret
loop
pop
adc
or
cli
pop
pushf
inc
sub
push
jb
mov
xchg
fwait
pop
sub
inc
dec
arpl
lods
stc
mov
fcomps
pop
in
mov
idivb
jp
ss
lahf
leave
call
test
pop
sti
imul
loop
mov
mov
pop
cmp
lock
dec
pop
sub
adc
lock
jb
or
jl
lea
jmp
cmp
fstpt
and
adc
mov
push
add
jl
sbb
and
mov
lret
cmpsb
in
addr16
dec
mov
rorb
pusha
hlt
in
add
or
sub
sub
test
leave
inc
xchg
jge
int
scas
rcrl
mov
cwtl
xchg
and
lcall
xchg
movsl
pop
lahf
shl
mov
dec
push
or
out
data16
xchg
sti
mov
or
push
bound
adc
mov
shll
mov
push
lock
push
pop
jmp
pusha
adcl
js
jl
push
ss
bound
ret
adc
cld
movb
mov
xchg
dec
pop
adc
ljmp
dec
xlat
fcmovbe
std
js
cmp
xor
mov
adc
push
push
cmp
call
cltd
mov
cmp
and
popa
test
adcb
mov
mov
inc
stos
hlt
lds
idiv
cmp
cs
and
bswap
je
das
fnsave
pop
pop
dec
pop
dec
popa
jmp
ljmp
test
sub
cmpl
inc
sub
dec
pop
sbb
ret
jbe
fsubrs
insl
faddl
fmull
adcb
ja
mov
adc
loop
mov
mov
jg
inc
jno
mov
idivb
call
push
and
jle
or
sbb
scas
les
int
sbb
mov
dec
adc
jne
dec
dec
mov
hlt
js
dec
leave
xchg
nop
idivl
arpl
sbb
mov
ret
rcrb
cmpsl
scas
inc
jns
push
sub
hlt
xlat
je
test
xorl
add
mov
sbb
and
outsb
daa
shlb
dec
addr16
movsl
lods
dec
cmp
and
mov
push
mov
in
add
lock
ja
push
out
scas
mov
mov
nop
loopne
rcl
fdivp
pop
idivb
xchg
or
fwait
pop
cli
or
sbb
mov
cmp
lock
mov
out
aad
js
push
mov
xchg
stc
insb
rcr
pop
push
rcll
fwait
ret
pop
imul
or
dec
mov
push
stos
mov
cmp
mov
add
insb
int3
cmp
ljmp
push
jle
lea
xlat
ja
sbb
cmpsl
mov
mov
jno
dec
inc
in
dec
fisttpll
int
pop
lods
sub
out
and
mov
mov
cmpsl
mov
leave
ffree
in
bound
dec
hlt
add
fisubrs
mov
call
lcall
aas
and
inc
scas
cmp
xchg
movsl
cmp
and
push
mov
jecxz
lds
add
fists
fadds
addb
dec
loope
xor
adc
add
jmp
mov
add
cli
mov
lcall
mov
adc
sbb
add
leave
adcl
add
or
test
int
jnp
lds
add
lahf
sbb
xor
mov
cmove
test
and
int3
bt
jns
sbb
fcomps
pop
movsb
adc
test
lahf
insb
jg
xchg
cmp
mov
xor
mov
mov
dec
cld
dec
xchg
daa
fwait
movsl
dec
jmp
outsb
cmp
movsl
in
lcall
pop
push
shrl
sti
push
in
ss
sub
xchg
cwtl
sub
je
cld
roll
adc
mov
push
fwait
mov
or
inc
push
cmp
mov
cmp
pop
push
loop
jge
pushf
mov
pop
pop
out
pop
test
mov
mov
rolb
adc
ficompl
xor
pop
clc
xor
pop
cmc
or
clc
push
jb
mov
adc
fsubrl
aas
stos
clc
sbb
sub
sbb
scas
jbe
int3
inc
cld
xlat
pop
movsl
lods
jo
mov
pop
fsubr
out
outsb
divl
mov
push
addr16
movsl
fsubl
lcall
adc
fwait
adc
in
test
pop
rclb
mov
mov
mov
dec
xchg
pushf
and
cmp
xchg
js
push
dec
loopne
cli
lods
nop
cmp
in
lds
cmpsl
inc
pusha
rolb
adc
add
loopne
push
mov
xchg
pop
jno
sbb
mov
movsl
test
sbb
push
adc
dec
push
je
in
dec
xchg
mov
shl
jb
push
sbb
mov
lods
mov
icebp
lcall
lds
mov
push
insl
jne
dec
push
je
lock
and
jns
or
shlb
inc
jmp
sub
xchg
in
push
shll
add
adc
push
xchg
and
xchg
sub
sahf
mov
or
or
push
shrb
xor
inc
mov
mov
cli
daa
adc
lcall
jmp
or
daa
and
inc
cmpsl
mov
lret
lds
cmpsl
jne
subl
jp
push
jecxz
mov
ja
icebp
stos
mulb
test
cmpsl
lret
cwtl
out
jno
push
std
xor
dec
imul
cltd
cmp
or
xchg
scas
and
pop
dec
call
push
jno
movsb
dec
pop
pop
xchg
nop
inc
movsl
cmp
fstpt
daa
jae
imul
xorl
pop
add
out
cmp
shrl
or
repnz
xchg
dec
popa
add
rolb
addr16
inc
cmp
sbb
cmp
addr16
sub
inc
pop
ljmp
and
cmpb
andb
adc
sbb
roll
lret
or
pop
mov
dec
into
loope
mov
loop
lret
pop
fldcw
data16
jb
mov
push
lea
pop
push
push
push
mov
mov
mov
xor
jle
je
pop
pusha
jg
cli
mov
and
movsb
iret
ss
xchg
seta
stc
mulb
sbb
loop
lock
xlat
push
and
xlat
ret
je
rcrb
push
pop
cmp
mov
jp
xchg
stos
mov
scas
pop
cmp
cmp
inc
rolb
rcrl
rorl
in
out
in
int3
push
aad
inc
addb
xchg
outsb
out
mov
cmp
pop
fcomip
sub
aaa
mov
std
adc
das
adc
push
cmp
inc
test
xchg
sbb
scas
push
xchg
xchg
add
adc
scas
outsl
jb
xor
sbb
out
xchg
pushf
dec
mov
ret
in
mov
negb
inc
aam
adc
fldenv
loop
jno
ja
pop
sti
mov
add
jle
cmp
sbb
jns
out
je
adc
mov
dec
mov
jmp
mov
fld
imul
mov
int
mov
dec
sub
push
pop
jp
dec
loopne
pop
insb
xlat
and
push
inc
scas
and
aas
and
pop
jmp
inc
push
xchg
jl
inc
lods
cli
pop
addl
mov
rolb
movb
dec
add
add
sbb
cmp
enter
jmp
fcomip
pop
xor
adc
pop
test
out
lret
shlb
inc
sub
dec
and
pusha
or
push
jno
scas
sahf
mov
stos
movsl
mov
imul
mov
outsb
incl
adc
and
fnstenv
and
cmp
add
mov
or
xor
lahf
and
jns
mov
mov
mov
or
mov
mov
add
mov
mov
pop
test
dec
xchg
mov
dec
stos
xchg
loope
xlat
xchg
sub
stc
data16
pop
cltd
pop
jae
mov
push
and
pop
lret
pop
leave
cmp
push
adc
outsb
push
jno
mov
add
cmp
stos
dec
mov
add
add
jg
and
out
sbb
jnp
lret
hlt
push
xor
inc
mov
and
add
lahf
and
push
mov
imul
movsb
inc
pop
xor
pop
in
jge
insb
add
or
mov
insb
sbb
jae
mov
pushf
mov
and
jmp
out
mov
sar
cld
out
loop
pop
ds
roll
pop
lock
lock
mov
xor
sub
push
sbb
inc
arpl
cmpxchg
push
xor
out
add
push
inc
loop
outsb
fsubrp
xor
shlb
adc
sub
popf
mov
stos
push
adc
jnp
adc
dec
sbb
xor
movsl
push
mov
ss
pop
mov
js
xor
nop
mov
fucom
jb
in
sbb
xchg
sub
pop
fists
fadds
addb
dec
xchg
das
xor
adc
cmpsb
jmp
mov
rol
pop
cli
mov
lcall
mov
adc
sbb
add
mov
xchg
sub
jle
stc
in
scas
xchg
add
or
test
int
jnp
lds
inc
mov
lahf
pop
faddp
data16
mov
pop
and
add
ljmp
iret
pop
jl
jecxz
adc
lock
adc
popf
sbb
sbb
xchg
in
in
dec
jecxz
dec
pop
add
lahf
mov
imul
movb
dec
sbb
cmp
fisubs
nop
mov
lcall
mov
lods
sub
cs
dec
loopne
rorb
mov
addl
jbe
sub
ror
xchg
ja
mov
and
test
cmp
add
inc
mov
mov
push
jl
rep
cmp
xchg
stos
adc
loope
mov
dec
jmp
cmp
mov
pop
imul
mov
mov
adc
pop
out
incb
xor
scas
hlt
xor
mov
das
inc
push
push
cltd
push
lds
sub
pop
sarl
ljmp
test
mov
jae
and
mov
sarb
mov
mov
in
addr16
orb
adc
cli
cltd
pusha
test
stc
cmp
imul
aaa
adc
sbb
popf
std
add
push
dec
xchg
xchg
js
jmp
cmp
sbb
sub
sbb
minps
mov
and
jg
push
ret
add
loopne
mov
push
dec
lock
enter
das
test
mov
cmp
outsl
xchg
pop
mov
xchg
gs
sub
cmpsb
cmpsl
jne
push
outsl
push
push
les
lds
fstp
inc
mov
inc
leave
mov
pop
imul
icebp
je
fldl
retw
fcoml
push
pop
cwtl
jle
in
push
sti
test
dec
or
push
test
movb
test
adc
fwait
sub
ljmp
rcl
cmp
lds
cmp
dec
lret
popf
stos
mov
repnz
mov
and
push
cs
xor
pop
andl
mov
and
in
inc
incb
in
push
cmpsb
js
ret
addr16
pushl
mov
stos
mov
test
leave
xlat
and
imul
data16
lea
fstps
daa
or
push
adc
and
mov
xor
cmp
lds
mov
jge
mov
pop
pop
xor
mov
outsb
lods
scas
pop
sub
mov
push
inc
mov
cmp
loopne
push
sub
loope
mov
adc
es
movsl
lock
fsubl
mov
cwtl
xchg
jbe
js
push
add
out
in
jno
mov
dec
call
dec
shll
lret
push
xor
imul
jb
call
out
xor
pop
aad
imul
lea
leave
sub
outsb
fcompl
mov
cmp
or
sub
mov
popfw
and
sbb
shr
pop
mov
data16
push
lock
sbb
enter
and
stos
pop
jno
stos
or
dec
fwait
or
xchg
stos
in
arpl
add
stos
xor
mov
adc
sub
mov
xchg
xlat
cmp
movsl
pop
cmc
bound
scas
mov
ret
push
icebp
mov
cmp
loopne
sbb
jmp
dec
arpl
insl
pop
push
adc
das
adc
movsl
pushw
int
xor
mov
mov
arpl
and
icebp
mov
jno
push
test
dec
push
mov
enter
mov
dec
or
imul
nop
pop
push
sbb
mov
lcall
daa
enter
lock
out
jbe
lds
aaa
sbb
cmp
cld
repz
pop
loop
cmp
icebp
in
fidivrl
fbld
xor
sub
mov
loopne
test
and
shlb
lret
xchg
ss
sub
shl
sub
xchg
aas
sti
in
lock
cmp
imul
jbe
loopne
sti
jp
stos
mov
scas
pop
cmp
xor
adcl
inc
jmp
sbb
stos
inc
ret
push
adc
pushf
jg
pop
iret
fisubl
in
add
test
les
je
shl
sub
mov
scas
xchg
popf
mov
cmp
cli
jl
std
push
stos
fisubrl
add
notb
aaa
sti
xchg
gs
mov
fsubs
stos
out
xchg
popa
pop
mov
ret
add
pushf
lahf
or
les
sub
cmpsl
mov
out
push
and
pop
add
jecxz
mov
mov
mov
push
out
cmc
jl
insb
mov
jp
mov
mov
andl
mov
lcall
jmp
popa
mov
adcb
fisttps
sbb
sub
add
ss
ss
mov
nop
movsl
and
popa
loop
pop
jb
in
pop
nop
movsl
mov
jmp
lea
sub
and
adc
repz
cmpsb
shrb
add
sahf
addl
rdmsr
call
add
cld
cmp
pop
mov
rep
inc
cmc
mov
int3
jo
inc
pop
inc
mov
lahf
add
mov
dec
subb
aas
push
and
enter
xorl
in
rclb
les
lock
inc
pusha
pop
sahf
mov
adc
lret
imul
cmp
add
mov
or
push
rclb
and
das
ret
addb
sbb
cmpsl
mov
cwtl
add
fisubrl
or
and
sbb
ret
ljmp
test
adc
jnp
dec
mov
rcll
xor
adc
pop
aaa
out
jp
xor
mov
out
aaa
enter
es
enter
mov
je
mov
iret
cld
mov
cltd
insb
jg
xchg
cwtl
sub
and
push
jb
scas
mov
hlt
sbb
fcmovnu
add
das
cmp
adc
bnd
adc
rorb
sub
lods
dec
jp
dec
in
scas
mov
aam
pop
repnz
push
jns
outsl
in
leave
sbb
push
or
cmc
hlt
std
ret
cld
stc
mov
repnz
aam
dec
sub
ror
rorb
dec
push
callw
pop
cmp
in
cmc
xor
test
loop
xor
mov
adc
and
mov
jle
dec
xchg
imul
dec
out
xchg
xor
xchg
in
in
stc
invd
test
daa
test
xorl
lds
sbb
mov
in
jne
das
xchg
imul
pop
pop
mov
aaa
or
int
movsb
mov
cmp
mov
loop
lahf
mov
sti
and
jg
shll
outsl
jb
loope
hlt
cmp
jg
gs
dec
sub
jbe
pusha
pop
jmp
rolb
jp
das
add
sub
into
dec
cld
and
jbe
mov
mov
mov
push
inc
in
xor
jne
xchg
fldcw
cmp
jb
lret
scas
rcrl
in
push
shlb
int3
fwait
stc
bound
inc
ds
fwait
mov
idivl
mov
nop
sub
xor
or
out
or
inc
xchg
cltd
dec
popl
aad
cmp
aaa
sbb
dec
or
outsl
cmp
inc
push
aad
inc
pop
push
jae
repnz
jle
out
inc
inc
loopne
icebp
or
jle
and
arpl
sbb
adc
sub
mov
aam
movsl
in
movsl
mov
dec
sub
fidivs
ficompl
jo
dec
adc
jbe
sub
mov
push
inc
pusha
cmpl
fildl
and
jge
je
mov
or
jno
loope
lods
mov
scas
mov
iret
mov
enter
sbb
in
pop
mov
push
jge
hlt
jb
adc
es
arpl
sti
hlt
arpl
sti
pop
xchg
mov
fistl
dec
mov
sbb
push
pop
add
xchg
jb
and
sub
push
outsl
loope
popa
mov
cltd
cmp
sbb
mov
mov
shrb
ljmp
icebp
xchg
jecxz
cltd
mov
fwait
ja
ds
sbb
dec
inc
pop
jmp
inc
pop
cmp
sbb
push
lahf
or
mov
daa
cmp
ja
sbb
ret
inc
aam
push
cmp
daa
push
pop
jp
loopne
pop
mov
mov
jne
daa
adc
or
das
push
or
stos
push
and
test
aas
or
push
sbb
mov
xorl
in
es
pop
mov
out
pop
fwait
scas
mov
insb
addb
and
in
repz
stos
lret
adc
add
loope
add
pop
inc
std
mov
lods
aas
out
syscall
sub
pushf
imul
push
adc
insl
stc
int
cltd
xor
mov
lahf
mov
pop
sbbb
mov
mov
lea
fldlg2
adc
add
cs
pop
sub
adc
ljmp
jg
xchg
sbb
xor
out
jg
or
dec
jecxz
dec
pop
jmp
fxch
popa
je
int
clc
adcb
in
in
jb
call
in
test
mov
mov
sub
es
and
hlt
stos
mov
or
je
xchg
lret
mov
cmp
inc
and
rorl
sbb
mov
xlat
mov
mov
push
inc
sbb
fsubr
xchg
into
add
push
push
xor
cmp
dec
out
xchg
and
lods
mov
js
xchg
mov
rcrl
inc
mov
push
lds
mov
pop
jnp
popa
movsb
daa
sub
shrb
mov
aas
mov
rcrl
mov
and
aad
jne
sti
cli
inc
push
or
std
sbb
pop
rclb
and
sbb
mov
dec
mov
xor
sbb
mov
ret
jmp
mov
fld
imul
mov
mov
adc
lock
dec
pop
inc
test
loop
mov
cmpsb
imul
loop
push
cmp
hlt
xorl
call
push
push
push
out
add
push
hlt
jge
sub
and
js
shll
es
outsl
popf
mov
enter
js
xchg
sbb
scas
ds
inc
sub
sub
push
mov
test
insl
jo
scas
add
cmpsl
test
dec
out
sub
dec
inc
sarl
pop
cmc
mov
add
inc
aam
and
mov
ret
dec
mov
int
inc
cli
pop
fldlg2
cwtl
xorb
imul
incl
imul
sbb
inc
cmpsl
rcrb
pusha
mov
bound
scas
xor
dec
xor
js
xchg
in
inc
cmpb
cmpsl
or
mov
pop
addb
cmpsl
lret
sbb
or
stc
testl
je
mov
adc
fwait
mov
xchg
or
cmp
adc
adcl
mov
push
or
add
orb
sbb
loop
mov
mov
cmp
in
jns
dec
fcomip
pop
xor
adc
sbb
adc
inc
sub
lock
pop
arpl
pop
aam
xchg
sub
mov
inc
in
shlb
jno
mov
mov
jae
mov
out
test
popf
mov
xor
out
test
add
fcmovnu
cmpsb
ret
shll
mov
out
stos
clc
push
pop
mov
sbb
cltd
pop
roll
jle
sahf
mov
mov
clc
rcrb
mov
and
dec
dec
repnz
mov
sarb
mov
shlb
imul
sub
leave
inc
aas
fwait
adc
jecxz
add
xchg
dec
bnd
xchg
push
ret
cmp
push
ja
subl
cmp
cmpsb
ret
push
aas
fstp
cmpsb
out
sub
pop
outsb
xchg
gs
incb
and
enter
insb
idiv
fucom
ficompl
inc
dec
aam
mov
adc
jp
popf
adc
xchg
xchg
xor
pop
inc
add
dec
roll
mov
inc
push
mov
and
mov
mov
mov
hlt
or
xor
frstor
lret
and
cltd
add
in
rorb
pop
iret
decb
and
or
dec
add
and
sub
sbb
xchg
rcrl
mov
repnz
mov
sub
out
xadd
js
shrl
adc
adc
in
jle
test
push
fldl
outsl
mov
pop
aas
shlb
loopne
push
cld
xor
xchg
jne
jo
xchg
out
adc
fwait
xlat
addb
lahf
inc
rolb
add
cmp
adc
dec
sub
mov
push
push
ret
mov
jmp
sub
call
adc
add
ljmp
cmpsb
gs
pop
ja
pop
cli
std
adc
xlat
xchg
inc
pop
aaa
jnp
xchg
sub
dec
pop
mov
stos
aas
sbb
add
xorl
or
test
mov
mov
mov
mov
nop
or
lret
out
cmc
bound
ljmp
imul
in
push
xor
mov
xor
cmp
arpl
dec
mov
dec
loop
jp
imul
mov
sbb
test
std
adc
jge
adc
xlat
adc
xchg
loope
cmpsb
sub
out
cld
xchg
pop
pop
push
push
sahf
scas
mov
idiv
stos
adc
orl
lods
or
sub
jp
ret
fcoml
mov
push
in
jle
cwtl
stos
btrl
ret
mov
test
cmp
sbb
jmp
repz
shlb
jo
pushw
pop
push
test
sub
popf
jns
adc
cmp
push
mov
jbe
insb
push
cld
inc
mov
fnstsw
pusha
pop
jb
jecxz
js
fldl
push
pop
dec
sub
and
rcrb
mov
pop
shl
push
fdivrp
adc
out
hlt
mov
xchg
and
sbb
push
and
fsubrl
lahf
mov
add
pop
bound
push
sub
nop
icebp
mov
cmp
mov
add
mov
jb
mov
outsb
mov
stc
or
jae
add
scas
and
aas
push
inc
mov
ljmp
xlat
lods
test
ss
cmp
mov
push
das
ja
fldt
dec
lods
cmp
xchg
adc
mov
jl
pop
in
sbb
sbb
aam
mov
test
adc
pop
pop
shlb
rcl
xor
jnp
into
in
sub
mov
cltd
in
insb
cmpsl
add
sbb
xchg
sarb
pop
inc
shll
rcrl
inc
adc
lret
into
jmp
cmp
inc
fs
cmp
cmp
jno
mov
sbb
add
sub
dec
xor
mov
fmull
ficompl
jo
stos
aaa
popa
ret
sbb
cltd
lea
fnstenv
loop
mov
cld
test
ds
mov
rol
rolb
jb
inc
mov
ss
adc
or
fwait
ret
jne
xchg
sbb
cltd
mov
or
stos
push
dec
jl
arpl
lret
cmp
or
je
rorb
cmc
js
inc
loopne
sbb
in
subl
lods
stos
mov
or
loopne
jmp
adc
cmp
adc
cs
sub
inc
aam
pop
pop
xchg
std
adc
pop
pusha
aas
jl
shl
ds
mov
inc
mov
rorl
lds
jne
sbb
xor
sahf
mov
and
and
mov
jns
mov
iret
fisubrl
jecxz
xchg
sub
xchg
rclb
add
out
xor
sbb
cmpsl
or
pop
in
dec
and
pop
cwtl
lahf
jne
or
push
fistps
movsb
cmpsb
addr16
ja
xchg
movsb
mov
outsb
nop
orl
repz
add
xlat
xor
loopne
adc
dec
xor
mov
push
fwait
mov
pop
popl
cmp
pop
les
aam
nop
mov
mov
ljmp
or
daa
sub
pusha
out
adc
inc
decl
fwait
pop
test
mov
push
xchg
dec
fisttpll
out
into
prefetchwt1
sbb
cmp
mov
sub
mov
inc
mov
mov
pop
jb
xorl
cmpsb
scas
jne
cmp
in
lods
xor
push
mov
jbe
and
xchg
daa
out
cmpsb
mov
mov
out
jne
ds
icebp
push
or
pop
xchg
std
icebp
inc
cmpsl
mov
inc
dec
push
push
mov
imul
jmp
js
fisubs
dec
outsb
nop
mov
add
xor
shrl
jns
xchg
push
hlt
sbb
inc
sub
lods
pop
jb
lret
xor
jo
cmpsb
or
into
mov
mov
xor
scas
xchg
sti
jno
push
push
cmp
rcl
popa
mov
movsl
adc
sub
xlat
push
lcall
scas
daa
pop
sbb
sbb
hlt
mov
xor
push
es
aaa
dec
js
out
jl
test
std
xchg
xor
cmp
xchg
push
ljmp
in
negl
lcall
icebp
in
loopne
push
sbb
cmc
lea
sbb
popa
and
or
push
mov
daa
out
in
dec
int3
sti
movsb
xorl
jae
inc
inc
mov
jbe
movsl
xchg
test
frstor
xor
push
lcall
xor
in
mov
jne
dec
push
inc
mov
movsl
xor
pop
xor
xchg
or
das
xchg
movsl
seta
popa
mov
ret
pop
out
fs
push
out
jl
cmpsb
xchg
addl
scas
ret
ss
xchg
jle
sbb
lret
mov
pop
pop
mov
mov
and
js
mov
int3
and
mov
dec
lret
inc
addb
scas
mov
jae
pop
mov
push
and
dec
fcomi
jo
jmp
fldl
pop
cmp
lds
mov
push
add
call
mov
ret
popf
jl
pop
sub
imul
lods
mov
cltd
shlb
jecxz
lea
lcall
ret
in
inc
xor
loope
or
sbb
push
sub
daa
cmp
out
andl
fwait
imull
movsb
cmpsb
cli
adc
inc
mov
fsub
push
repnz
lea
stc
sub
fst
mov
inc
inc
aam
fs
push
ja
inc
dec
mov
xor
inc
jnp
push
popa
pop
mov
cmpsb
push
sub
sbb
mov
fcoms
push
shl
cli
movsl
test
sub
sti
movsl
push
cmpsb
push
lcall
jb
jns
mov
cmpb
pop
cltd
cmc
faddl
addr16
dec
pop
enter
scas
cmp
call
repnz
sbb
testb
or
mov
jb
xchg
xor
ds
push
xor
push
cltd
mov
inc
lret
addr16
pop
movsl
gs
out
cmpsb
js
rolb
xchg
hlt
mov
add
pop
outsb
sub
push
popfw
sti
es
mov
mov
inc
pop
outsl
fstps
push
push
rorb
adc
and
test
andl
mov
mov
aam
cwtl
mov
or
jmp
hlt
loop
and
pop
or
into
div
and
fistl
adc
cmp
push
inc
dec
loopne
cli
enter
cltd
rcr
dec
std
pop
pop
and
fiaddl
or
bound
xor
push
arpl
test
xchg
and
xor
imul
push
inc
xchg
cltd
adc
icebp
scas
vcvtsd2si
mov
bound
jns
data16
xchg
movsl
jge
imul
sub
sub
jo
mov
mov
jg
repz
leave
leave
iret
mov
nop
scas
cmpsl
dec
adc
std
jge
outsl
mov
dec
or
ds
xor
add
mov
popf
dec
jecxz
ja
mov
add
push
dec
mov
push
out
cmp
fcompl
sub
adc
and
jne
test
sbb
or
pop
push
mov
js
push
cmpsb
inc
test
mov
dec
cmp
cmpsl
dec
dec
loopne
out
hlt
stos
stc
loope
jl
lods
adc
jbe
mov
ljmp
inc
das
xchg
lret
ret
jne
push
rcrl
xor
jmp
in
aas
push
inc
jle
mov
imul
mov
call
jmp
push
sbb
push
test
mov
in
call
das
push
xchg
das
xor
adc
andl
dec
jecxz
out
fwait
push
or
pop
push
movsl
push
loopne
hlt
mov
int3
dec
addr16
cltd
sbb
fsubs
leave
stc
pop
bound
mov
jne
hlt
mov
jge
xor
hlt
push
dec
or
iret
shl
jge
sbb
xchg
inc
and
dec
mov
out
gs
adc
cmpsb
jg
orb
mov
cwtl
sbb
inc
cmpsl
mov
bound
mov
imul
push
jmp
enter
div
lcall
bound
dec
dec
adc
sbb
fisubrl
imul
jns
cmp
pop
jno
repnz
xor
or
lret
mov
movsb
mov
fmull
xchg
cmp
dec
adc
insl
outsl
jb
mov
mov
push
fdivrs
into
mov
pop
push
clc
mov
adc
cmp
mov
sahf
adc
push
cmp
icebp
js
mov
mov
mov
or
scas
xchg
inc
jg
mov
xchg
and
imull
imul
in
lods
xor
or
int3
jle
lret
into
loope
xor
fisubs
pop
push
adc
push
mov
faddl
mov
push
popa
sbb
mov
ficoms
mov
xor
push
sarb
xor
cwtl
inc
out
and
push
mov
adc
outsl
lea
xchg
out
xchg
cmp
aas
and
inc
in
sub
cld
add
xchg
aad
jne
jnp
and
outsl
fildll
and
and
cmp
lret
push
gs
mov
jge
into
aam
outsb
cmp
inc
sub
mov
pop
mov
les
cwtl
mov
fwait
mov
imul
cmpsl
and
add
inc
pop
jnp
bound
frstor
imul
sub
jg
daa
frstor
inc
adc
jbe
sub
adc
decb
lds
mov
jecxz
mov
mov
fiaddl
and
arpl
rcrl
push
int
mov
dec
icebp
lahf
lret
xchg
ja
cs
jg
adc
xor
lret
sbb
divb
xor
dec
or
jl
push
jns
adc
loope
xchg
fs
out
mov
test
ror
adc
push
out
dec
aas
loope
mov
test
or
outsb
jno
jo
int3
adc
and
dec
addb
popf
lcall
int3
jge
gs
mov
movl
lods
stos
hlt
jns
lock
cltd
mov
sarl
xor
or
stos
adc
cld
shll
add
adc
lods
stc
arpl
adc
or
xchg
repz
rclb
mov
call
nop
scas
cmpsl
sub
xlat
pop
insb
push
jb
or
test
mov
adcb
mov
xchg
in
popf
dec
cmp
adc
dec
pushf
dec
icebp
pop
fstps
insl
ret
test
mov
xor
xchg
loopne
out
sub
movsl
sub
push
fnstsw
pop
data16
mov
out
call
xchg
and
insl
push
test
in
arpl
jp
rcrb
adcb
jne
pop
addl
jbe
je
mov
pusha
and
cmpsb
mov
std
jbe
rcl
mov
addl
adc
inc
sar
dec
add
mov
inc
xor
push
adc
xchg
jmp
jnp
stos
sarb
cltd
add
xor
mov
sub
shlb
cmp
pop
jae
push
outsb
aad
insl
jo
nopl
dec
mov
int3
mov
movsl
mov
mov
or
popf
mov
addr16
in
mov
adc
fidivrs
push
insl
ljmp
outsl
adcb
pop
sbb
add
mov
je
mov
pop
jle
stc
xchg
mov
rorb
pop
lcall
bsf
js
inc
gs
xchg
add
arpl
ss
aas
rorl
push
mov
add
imul
addl
jbe
adcl
or
ret
cmp
shlb
cmp
fistl
push
push
jge
or
cmpsb
or
aas
das
jae
mov
xchg
pop
insl
mov
lret
fstpl
mov
push
add
aaa
pop
dec
fsubl
cmp
pop
jo
dec
sub
pop
mov
pusha
push
adc
cmp
push
xchg
mov
pop
lds
cmp
lds
fwait
pusha
test
inc
pusha
sub
mov
push
cmc
xchg
sub
inc
shll
jnp
xor
cmp
mov
add
fsubl
or
mov
ja
ljmp
and
or
andl
dec
je
push
adc
dec
push
push
mov
lock
push
mov
mov
test
mov
xchg
movsb
sub
sbb
in
cmc
push
sar
daa
test
xor
dec
jmp
jg
daa
adc
out
or
inc
repz
sub
xor
xchg
jae
mov
and
test
mov
or
outsl
jb
push
rorl
lods
sti
out
adc
data16
push
xchg
lahf
sub
fwait
pop
push
dec
mov
xor
dec
clc
jne
sbbl
shll
les
mov
inc
es
mov
inc
sub
inc
add
fmul
inc
xor
pop
mov
out
xor
mov
adc
jl
lret
arpl
push
mov
mov
out
arpl
push
cmpsb
iret
sbb
sbb
call
aas
insl
test
fistpl
jne
rorl
jb
pop
sbb
mov
dec
jne
outsl
push
pop
imul
ss
loopne
xchg
jg
in
pop
lcall
push
test
mov
lret
add
dec
fcmovb
push
jmp
std
lods
inc
or
dec
jmp
or
dec
xchg
cmc
dec
pop
and
cmpsb
push
mov
dec
push
in
mov
in
and
cwtl
xchg
mov
jl
mov
push
xchg
mov
mov
cmp
inc
addb
mov
shr
adc
in
stos
jb
adc
fdivp
pop
lcall
aam
lods
or
sbb
jg
adc
add
mov
inc
push
push
jbe
iret
std
scas
pop
insl
jo
pop
add
pop
sbb
fimuls
adc
mov
out
or
test
int3
in
jecxz
call
call
icebp
cltd
jae
cmp
cltd
dec
out
mov
in
in
jecxz
shl
pop
cmp
mov
test
popf
sbb
bound
pushf
adcb
inc
inc
mov
sub
in
fnstcw
mov
movsb
cmpsl
lahf
enter
test
pushf
jmp
cmpsl
hlt
or
inc
hlt
xlat
ljmp
out
dec
sbb
mov
dec
jb
outsl
aaa
mov
and
inc
inc
jnp
inc
pop
mov
outsb
push
and
call
ror
imul
stos
pop
pop
inc
push
mov
mov
xchg
das
inc
rcl
fdivp
pop
jge
mov
daa
push
fs
cli
or
arpl
adc
xchg
inc
test
xchg
push
lods
pop
inc
ljmp
std
pop
mov
ds
mov
call
bound
js
lock
mov
aas
and
out
inc
test
or
call
fst
sub
fldz
movsb
test
les
insb
xchg
jmp
es
mov
repnz
je
or
or
out
paddb
fnstcw
cmp
inc
adc
bsf
sbb
rclb
test
daa
movsb
push
insb
pop
rol
jp
jmp
push
push
sub
inc
xor
dec
popa
mov
or
andl
or
pop
push
xchg
push
mov
jle
outsb
dec
test
pop
push
insb
std
mov
jg
js
mov
test
xchg
popa
nop
icebp
sub
jbe
repz
or
test
cmp
loopne
xor
in
push
jo,pt
cmp
adcl
xchg
and
fucomi
dec
or
sbb
xor
cmpsb
arpl
shlb
repnz
lods
and
addr16
fldl
or
xchg
loopne
push
jp
mov
fs
mov
stos
xor
add
cli
fcoms
xchg
adc
mov
jle
aaa
adc
mov
je
push
adc
pusha
jae
gs
icebp
ficompl
mov
test
pop
sti
push
lret
and
dec
or
and
push
jno
push
push
aas
sub
mov
xlat
ret
fcomps
push
mov
push
ss
mov
iret
les
inc
arpl
push
mov
in
fstpt
mov
jg
pop
rcr
popa
add
adc
push
popf
xor
lret
sub
adc
cmp
loop
repz
iret
mov
xchg
sbb
add
cmpsl
mov
xchg
sti
negl
push
push
xchg
sub
jge
imul
mov
negl
bound
xor
xchg
ljmp
sub
jb
mov
out
jle
cmpsl
repnz
push
jbe
mov
mov
fstps
mov
hlt
inc
mov
lock
inc
inc
incb
push
mov
or
cwtl
test
pop
cmpb
in
jb
sysenter
scas
push
repz
mov
or
loop
push
test
inc
test
sbb
add
inc
or
lea
adc
sub
jns
ror
pop
cmpsb
stc
or
adc
sub
pop
test
mov
push
loope
leave
jge
popa
pop
call
cmp
mov
jo
or
cmp
sbb
sbb
mov
loop
sbb
inc
ds
push
das
push
popa
mov
fidivrs
addr16
out
scas
jp
xor
sub
mov
out
adc
fisubl
push
sbb
addr16
in
lods
xor
sbbb
out
pop
lret
xchg
add
dec
aas
add
mov
ljmp
push
sbb
div
sub
inc
fdivs
dec
es
mov
pop
sbbl
fcmovbe
jge
lcall
sub
lds
jnp
inc
ja
out
sub
sub
dec
stc
inc
subl
pop
cmp
inc
cmc
lods
or
xchg
stos
lea
xor
dec
push
dec
inc
leave
cmp
inc
adc
out
jge
lock
add
mov
mov
mov
inc
mov
in
inc
jns
sti
add
cli
mov
xor
xor
repz
mov
and
cld
adc
std
adc
jle
movsb
data16
inc
push
xchg
pushl
or
imul
pop
repnz
dec
push
push
xorl
fldcw
icebp
aam
out
ds
pop
fcompp
jns
adc
and
mov
clc
aam
mov
mov
jbe
int3
in
push
or
lea
xor
inc
jno
cmp
jecxz
mov
lods
jnp
sbbb
dec
mov
jae
jae
leave
nop
lahf
jp
mov
popa
push
in
cmp
jne
loope
stos
ljmp
fistpll
xor
inc
dec
cmp
fcompl
outsl
add
lea
pushf
push
and
les
push
sahf
std
and
jmp
inc
int
sbb
ror
test
and
rol
push
cwtl
inc
cmp
outsl
out
in
arpl
in
sahf
cmp
loopne
loop
push
lock
add
pusha
add
mov
cmpsl
aaa
iret
loope
movsl
inc
cmpb
inc
xlat
mov
adc
cmp
insl
jo
pop
push
popa
aaa
cmp
test
adc
fwait
xchg
push
nop
pop
sub
fistps
test
push
cmp
and
inc
ret
dec
dec
mov
sbb
ljmp
and
jle
std
iret
lret
inc
test
cmp
add
mov
cs
fldenv
lcall
xor
mov
jne
pop
pop
test
ror
inc
pop
popf
rcl
lds
mov
mov
cltd
pop
mov
testb
ljmp
repnz
cmp
push
xor
cmp
mov
shll
lods
rcl
scas
mov
or
aam
push
mov
and
inc
lea
in
cli
daa
mov
loope
sti
fcmovnu
cli
sbb
imul
mov
cmp
test
sbb
sub
repnz
xchg
sbb
xor
ficoml
pop
ds
inc
or
xchg
movsl
pushf
lahf
ja
fdivs
ds
cs
mov
dec
and
out
test
mov
fstps
fwait
jle
jecxz
popa
test
sub
lock
jp
push
lea
int3
out
jns
dec
pop
stos
xchg
mov
imul
test
and
mov
je
stos
mov
adc
daa
mov
lret
add
mov
inc
cld
xchg
jp
push
cld
adc
and
bound
popa
jle
and
push
movsb
mov
pop
sbb
add
jecxz
pushf
xor
inc
xor
fs
add
shl
dec
push
inc
xchg
mov
inc
fdivrs
cmp
xor
gs
and
pushf
ss
pop
dec
imull
int
cli
fsubrp
jmp
jg
add
imul
sbb
xor
push
xchg
xchg
push
push
adc
addr16
sbb
and
aaa
scas
stos
sbbb
mov
inc
decl
subl
cmp
cltd
sub
sti
xchg
lea
repnz
and
xchg
aaa
bound
nop
fs
rorl
adc
aad
push
jae
xchg
mov
push
lock
imul
bound
data16
leave
aam
push
int3
add
jmp
je
lea
sti
xor
insb
popf
cmpsb
xchg
pushf
jle
xlat
fidivl
loope
jb
push
xor
fcomi
jbe
sub
cmc
sahf
fstpl
cmp
mov
leave
gs
sub
push
sub
inc
jp
mov
jl
stos
hlt
xchg
lock
inc
movsb
lods
loopne
xchg
fistpl
sarb
inc
sbb
repz
pop
dec
scas
and
dec
mov
mov
lods
sub
mov
mov
lds
inc
insb
mov
mov
outsl
pop
popa
fadd
mov
push
movsl
rclb
fldl
xchg
sub
jmp
mov
and
and
out
or
callw
adc
idivl
and
bound
cmp
xor
cmpsl
xchg
mov
cmp
xchg
push
mov
pushf
mov
int3
add
int3
jle
sub
pop
test
cmp
push
adc
push
cmp
pop
sbb
sub
cltd
xchg
push
fimull
xchg
sbb
and
adc
mov
js
and
popf
mov
out
insb
shlb
insb
dec
out
and
test
push
push
icebp
scas
push
ss
cltd
inc
les
cmp
loop
dec
sub
fisttpl
dec
scas
and
movl
xor
jl
or
push
mov
pop
jb
and
mov
fsubr
mov
mov
mov
sbb
mov
mov
lret
adc
lahf
mov
add
adcb
push
test
incb
inc
cwtl
add
cmpsl
orl
xor
pop
mov
loope
je
cltd
rcll
jecxz
loopne
cli
lods
nop
cmp
mov
and
cs
popf
inc
js
fadds
imulb
lahf
enter
aaa
cltd
pop
aaa
testl
sarb
mov
popf
mov
pop
add
aas
shlb
cmpsl
sbb
xchg
fnsave
adcb
and
loopne
push
cwtl
inc
xchg
mov
les
push
inc
pop
mov
xor
adc
xchg
pop
or
and
or
xor
push
adc
xor
xchg
push
xchg
xchg
das
ror
pop
in
scas
jbe
arpl
jno
aaa
stos
inc
push
jno
test
nop
jno
push
mov
lahf
mov
inc
adc
mov
and
inc
aam
cmp
sbb
fsub
loop
add
in
test
dec
fdivrs
ss
sub
adc
xchg
cmp
push
push
push
frstor
fildl
out
mov
mov
lods
fs
sub
xchg
cmp
mov
inc
and
xlat
out
int
loope
jmp
add
inc
jo
out
add
out
sbb
sub
out
push
jge
movsb
jg
lret
testb
mov
pusha
rcrb
pop
aam
jb
push
sub
jae
xchg
lods
insl
scas
ret
sub
xchg
lahf
movsl
imul
jo
mov
pop
lods
sub
inc
inc
int3
test
push
iret
and
sub
and
addr16
push
cltd
sbb
fsubs
dec
stc
shlb
loope
mov
cmc
xchg
loope
sub
adc
clc
dec
or
mov
fnstenv
shrb
orb
add
insb
rol
out
dec
dec
push
mov
and
push
mov
and
sbb
mov
clc
mov
push
mov
js
lock
xor
dec
in
daa
adc
sub
sub
sti
sahf
cmpsl
scas
jns
stos
push
lds
jmp
das
adc
push
lock
pop
cltd
xlat
cmc
shll
or
adc
aas
and
jno
dec
mov
and
into
nop
cli
lcall
loopne
fucom
int3
fstps
adc
icebp
scas
psubsw
dec
jecxz
vcomiss
movsb
sub
ficomps
or
fisttpll
jbe
imul
icebp
je
sub
add
and
sub
push
setne
pop
inc
push
fldl
pop
sahf
out
sahf
pop
jnp
pop
repnz
lock
scas
jb
in
jecxz
sahf
mov
jnp
xor
push
pop
mov
sub
jbe
add
cli
inc
and
sbb
xchg
es
pop
adcb
cmp
xor
repz
test
out
imul
jle
js
int
xor
in
fstpl
cld
movq
test
lret
push
into
dec
jbe
jmp
xor
insb
inc
sbb
or
outsb
jno
test
and
out
jb
dec
and
pop
cmp
lahf
fs
movsb
or
push
xor
out
xchg
push
dec
push
xchg
mull
push
add
out
mov
jo
sub
adc
cmp
es
dec
repnz
loope
sbb
sti
stc
arpl
xchg
outsl
mov
xchg
mov
pop
inc
ljmp
cwtl
lds
jno
out
fstps
mov
pop
mov
pop
imul
mov
loop
cmpl
cltd
mov
call
jne
gs
je
cmp
das
hlt
fucom
xor
lock
jge
lret
in
dec
dec
imul
fwait
int
je
jae
popa
dec
add
and
mov
cld
mov
clc
mov
mov
mov
stos
arpl
repz
adc
dec
jb
cmp
pop
inc
cmp
xor
lret
roll
xchg
add
cli
pop
loop
pop
mov
and
jge
adc
xchg
push
sub
ljmp
movsl
cwtl
mov
jecxz
repnz
lcall
data16
iret
arpl
lret
mov
or
aam
inc
cmp
fs
pop
sbb
jmp
jg
sbb
popf
shlb
jae
adcb
insl
mov
pop
pop
in
insl
mov
stc
fsubrl
iret
mov
xchg
add
mov
idivb
rcl
iret
push
sbb
out
arpl
xchg
jae
ret
xor
xchg
iret
pop
test
mov
sbb
pop
mov
in
pusha
jae
mov
mov
imul
js
jae
mov
addr16
sub
in
push
invd
test
mov
popf
pop
mov
fdivrs
cmp
lods
jbe
pop
jmp
enter
enter
adc
and
mov
arpl
jle
push
gs
mov
les
fsubl
push
imul
aam
das
xor
lods
fwait
repz
jbe
jmp
sub
fwait
and
mov
jno
stc
sbb
daa
xchg
hlt
cs
xchg
fnstenv
jno
cmp
xchg
and
arpl
shlb
add
addl
or
fsts
cmc
out
je
in
pushl
sbb
cmp
fldlg2
sub
jp
jmp
mulb
jl
call
add
test
subb
inc
mov
mov
dec
mov
out
mov
int3
filds
and
cmpsl
lahf
cmp
out
nop
mov
xor
adcb
sbb
loope
jmp
add
fisubs
test
cltd
movsb
push
jno
in
cmp
bound
or
leave
mov
cmp
mov
sti
fildl
push
pop
fucom
jb
inc
lods
mov
sub
pop
loop
outsl
push
repz
into
cltd
std
cli
push
test
mov
pushf
xor
pushf
cld
fisttps
pop
xchg
and
lods
lret
dec
insl
js
or
inc
xlat
sub
mov
pop
jmp
test
inc
xlat
pop
and
out
jae
inc
mov
les
lock
mov
mov
rorb
push
lock
insb
xor
cmpsl
test
sub
scas
jne
inc
lods
movsl
mov
xchg
xchg
in
nop
and
jmp
iret
pop
out
leave
push
push
idivl
add
sbb
pop
invd
test
mov
popf
pop
mov
fcoms
sar
inc
call
test
loop
jge
and
and
mov
jecxz
cmp
mov
push
sub
sahf
jnp
sub
add
add
lds
jmp
mov
bound
daa
fidivrl
dec
xor
and
loope
xor
repnz
es
push
xor
sbb
push
xchg
cltd
in
scas
mov
das
inc
xlat
lods
pop
pop
aaa
jle
das
aad
fsubr
shlb
xchg
mov
mov
jae
ds
js
push
js
cmp
jbe
mov
push
in
shr
iret
mov
xor
sbb
fwait
add
mov
dec
and
or
test
testb
push
pop
lcall
pop
jmp
adc
loop
dec
sub
push
data16
add
pop
xor
jb
dec
in
out
sbb
jg
and
lret
in
icebp
pop
dec
leave
test
cmp
lret
mov
cs
xchg
cmp
sub
lods
dec
mov
add
dec
cmpsb
ljmp
push
mov
xchg
push
xor
mov
jmp
lahf
push
test
sub
dec
addr16
cmpsb
sbb
pop
push
mov
pusha
mov
sub
out
jecxz
insb
push
aad
cli
dec
xlat
mov
arpl
in
fwait
test
mov
mov
cmpsb
pop
repnz
std
mov
andl
or
mov
in
push
data16
lock
out
dec
add
mov
add
int3
cs
sbb
adc
cltd
sbb
mov
loope
mov
mov
push
mov
test
iret
mulps
adc
je
sbb
adc
sahf
lods
dec
pop
rolb
lret
jbe
fs
mov
out
push
pushf
adc
addr16
xor
in
cmp
pop
push
aam
cli
mov
pushf
sarb
jo
repz
xchg
jmp
aas
cmp
mov
inc
inc
insb
loope
enter
es
cmp
loopne
pop
push
pop
xchg
mov
push
pop
mov
arpl
dec
cs
fdivrs
cmp
mov
xchg
add
mov
mov
outsl
add
lock
mov
or
insl
inc
adc
sub
inc
dec
or
test
pushf
or
repnz
ret
lret
add
or
jno
stos
insb
jg
in
out
inc
in
insb
fcompl
cmp
dec
mov
pushf
mov
mov
and
in
mov
int
jmp
cmc
shll
inc
nop
mov
and
mov
fcmovbe
ss
inc
lock
out
or
out
add
or
cmpsb
insl
push
and
lds
dec
daa
iret
lods
or
and
test
or
leave
mov
push
sarb
mov
jmp
add
pop
and
add
icebp
jge
movb
jecxz
mov
cmp
fdivl
cmc
jo
mov
cmp
xchg
mov
scas
rcrl
outsb
insb
xchg
rol
lret
lret
stc
bound
pushf
test
sti
pop
sub
mov
pop
aaa
push
mov
ds
add
jnp
addb
push
jecxz
pop
lock
jnp
jg
jne
fiadds
cmc
and
sub
mov
and
dec
pop
jle
mov
xchg
jnp
cmc
clc
mov
mov
movsb
adc
std
xor
daa
cs
fildl
and
mov
rcr
inc
hlt
xlat
ja
push
inc
pop
inc
loopne
outsl
test
mov
xchg
adc
sarl
xchg
std
arpl
sub
lret
repnz
out
lock
out
sbb
push
xorl
imul
pop
and
andl
mov
fwait
scas
sub
or
mov
test
mov
sbb
and
push
jnp
js
enter
shl
jbe
push
xchg
setne
pop
inc
push
xor
adc
inc
das
insb
shlb
pop
outsl
jb
mov
and
ret
mov
lret
jbe
aam
adc
fldlg2
iret
adc
dec
sbb
cli
pop
hlt
pop
mov
cli
aad
mov
fldenv
sbb
les
cmpb
sbb
xor
jle
test
sbb
shlb
mov
cmc
test
inc
jp
adc
addr16
mov
imull
ja
insb
mov
add
scas
jne
cli
scas
xor
sarb
lret
movsb
xor
and
dec
loope
pop
add
insb
out
sub
jge
das
lahf
push
aam
add
sti
bound
out
dec
sub
or
mov
jno
outsb
xchg
mull
push
mov
sbbl
add
add
mov
mov
adc
loope
cmp
std
cli
call
xchg
fs
sub
sbb
adc
ds
stos
pop
pop
inc
or
pop
lahf
out
outsb
push
pop
cmpsb
xchg
aaa
hlt
mov
dec
pop
movsb
xchg
pop
adcb
dec
sbb
mov
daa
icebp
sbb
fisttpll
mov
xor
out
loopne,pt
xchg
xor
data16
push
inc
xchg
imul
rcrb
jne
xchg
loope
xlat
ficoms
cmp
pop
adc
or
and
lahf
jp
pop
push
stc
mov
push
fmuls
movsl
cmp
cwtl
flds
lods
rcll
push
sub
sahf
or
shlb
in
in
xor
xor
sahf
fidivrl
lds
and
inc
jbe
jo
sub
insl
js
inc
jmp
cld
push
xchg
sub
popf
test
jo
fmuls
cmp
or
fsubr
daa
insl
jmp
pop
sub
xchg
ret
shrl
mov
mov
std
clc
in
xchg
push
dec
jbe
and
push
rclb
jl
adc
out
pop
aas
mov
sbb
adcl
loopne
imul
dec
xchg
or
mov
xor
mov
stc
sbb
xchg
adc
roll
in
fldl
hlt
xlat
jae
loopne
jo
and
adc
shll
jbe
sbb
cmp
in
cmp
add
ljmp
fstpt
adcb
adcl
stc
mov
jne
cmp
jmp
xchg
sub
xor
nop
lds
lds
xor
das
adc
adc
dec
fistpll
loop
test
lcall
cmpsl
dec
push
pushf
jb
and
mov
cmc
out
jne
xor
repz
dec
jae
mov
cmp
ss
jnp
and
loope
add
insb
jno
jecxz
xor
add
adc
sbb
fstps
cmpsl
rcrb
lcall
popa
je
pop
loop
fbld
fucomi
cmpl
push
xor
jnp
es
mov
sbb
mov
sub
cltd
pop
ljmp
out
add
xlat
repz
or
sub
push
stc
xchg
stos
lea
scas
inc
lods
sub
dec
fists
dec
sbb
xchg
inc
in
adc
dec
inc
and
jb
and
shl
fidivrl
add
divb
andb
inc
mov
fstps
les
xchg
aaa
push
inc
jl
pop
add
pop
in
inc
fidivrl
sub
cmpsl
mov
adc
jae
js
mov
mov
fsubp
ret
and
mov
sbb
ss
jnp
lods
jmp
mov
jecxz
daa
and
push
and
adc
lea
ffreep
test
pop
rcrl
jne
pop
es
jmp
loopne
subl
js
lock
lahf
cmpsb
insl
push
mov
divl
mov
or
clc
nop
rclb
xchg
adc
ffree
rcll
seta
leave
dec
rolb
and
icebp
out
dec
pop
jnp
jb
test
sbbb
xor
xor
rorb
dec
repnz
loop
jge
pushf
mov
divl
imul
cmpb
inc
dec
mov
jmp
cltd
lahf
jecxz
jmp
clc
push
inc
mov
fisubrs
std
adc
les
xor
pop
xorl
insb
push
jnp
stc
xor
or
push
pushf
sub
add
mov
sub
test
popf
scas
lret
pushw
int
dec
push
jne
cmp
fimuls
push
adc
test
call
aaa
sbb
sbb
inc
cmpsl
mov
dec
jne
lahf
cmpsb
pop
imul
mov
sub
nop
out
add
xchg
sbb
sub
paddd
ffree
inc
xor
inc
inc
ljmp
jle
pop
mov
pop
pushf
movsb
sub
add
popf
outsb
ja
rcrl
sub
push
jle
out
lcall
fistl
aaa
push
jge
or
leave
mov
sbb
mov
insl
add
jns
mov
add
inc
pop
loopne,pn
mov
fnclex
mov
dec
adc
jae
jecxz
pop
iret
and
mov
mov
push
in
scas
jbe
or
test
mov
fsubl
aam
lahf
cmp
arpl
popf
mov
repz
bswap
jo
sbb
rclb
pusha
pop
cmp
push
xor
leave
sbb
adc
jle
lea
adc
pop
mov
dec
pop
cld
ret
xchg
add
in
mov
ftst
ja
sbb
fstps
in
rcll
test
mov
fstpl
fsubr
ja
add
mov
hlt
ret
mov
and
add
ret
lea
sbb
loop
rcll
loope
out
outsl
or
xchg
push
in
mov
jnp
add
add
inc
add
xchg
fistpl
negb
iret
dec
rcr
sahf
jns
push
hlt
dec
sbb
sbb
sbbl
out
ror
sub
inc
cs
loopne
pop
insl
add
int
mov
stc
pop
and
movsl
mov
mov
hlt
xchg
mov
and
sahf
sub
cmc
lock
loop
and
and
push
nop
xchg
lods
inc
adc
imull
movsb
aas
clc
aaa
adc
sbb
xor
aad
jle
mov
hlt
push
mov
add
jecxz
sbb
lock
mov
into
enter
idiv
mov
movsl
hlt
nop
shll
loop
adc
lock
mov
fcomp
mov
cmc
dec
cli
push
ror
repnz
inc
jl
fstpt
push
mov
loop
inc
jmp
outsl
jp
jecxz
mov
xchg
xor
push
data16
xchg
mull
mov
push
cltd
mov
gs
fistl
or
in
pushf
add
bts
addl
fnsave
rcll
sub
mov
pop
dec
fcomps
lcall
dec
pop
lds
xor
sbb
jmp
mov
mov
adc
sub
cmpsb
ret
or
ljmp
or
jno
or
in
movsl
push
outsl
and
mov
lcall
testb
ja
je
notl
fistps
inc
jecxz
mov
daa
test
call
shll
dec
inc
lock
mov
mov
je
jge
jne
push
pop
leave
pop
sub
sub
mov
inc
lods
mov
cmp
xchg
push
mov
fcoml
ret
xlat
imul
dec
add
insl
cmpsb
mov
adc
jge
insl
rcr
add
xor
popa
orb
cli
mov
pop
mov
xor
sub
dec
pop
mov
cld
pop
xor
imul
hlt
mov
mov
mov
sbb
xchg
or
rcrl
fldlg2
call
dec
icebp
push
cmp
cwtl
adcb
push
mov
aas
xor
or
sub
cwtl
sbb
add
mov
dec
pop
pop
push
mov
cmp
or
mov
mov
fs
iret
ss
ud2
aaa
dec
scas
mov
adc
ffree
shl
inc
mov
xchg
dec
fistl
popa
lock
dec
pop
jnp
sahf
ret
mov
mov
and
pop
add
pop
into
gs
nop
dec
mov
mov
cmpb
or
stos
pushf
out
mov
dec
addb
mov
and
in
xchg
inc
ret
jmp
dec
dec
popa
hlt
adc
jne
add
mov
jp
popf
jge
sub
push
imul
sahf
addr16
in
pop
sarl
jo
push
jno
push
iret
jg
mov
pusha
stc
mov
jno
mov
pop
lea
pusha
int
jecxz
cwtl
cmpsb
aaa
mov
add
mov
out
decb
mov
mov
pop
pop
lods
pop
push
cmp
push
sub
mov
cmpsb
pop
mov
add
jno
int
fbld
xor
sub
cmp
in
mov
xchg
or
xlat
push
fwait
add
loopne
sub
sbb
jno
enter
sub
jb
mov
xor
je
cmp
xchg
sahf
cmpsb
push
mov
fcoml
dec
adc
gs
xchg
idivl
and
mov
push
sub
rcr
fsubl
je
lret
sbb
inc
dec
cmpsb
gs
ffree
and
pop
inc
out
sbb
dec
enter
leave
inc
xchg
sub
adcb
shll
in
cmp
ss
sub
cmp
pop
mov
mov
jg
push
stos
mov
and
mov
shlb
pop
lock
xlat
mov
mov
adcb
mov
test
aas
dec
sahf
mov
ss
incl
push
mov
sbb
or
mov
nop
adcb
nop
or
xchg
cmpsl
cmp
jnp
xor
mov
lret
adcb
cmp
loope
xlat
push
cmp
inc
imul
insl
add
or
scas
sub
sbb
push
cmpsl
stos
lea
sbb
in
mov
mov
das
mov
jge
cmpsb
push
sbb
jne
xchg
cwtl
cld
gs
and
cltd
aad
mov
test
sbb
addr16
repz
adc
dec
mov
sub
ds
push
wrmsr
stc
xor
xchg
mov
jb
shlb
je
idiv
adc
mov
push
stos
sbb
jb
and
mov
shlb
and
jle
stos
mov
pop
movsl
and
icebp
mov
mov
sbb
xor
dec
sub
dec
dec
movsb
in
fistpll
mov
dec
jno
cli
fs
jnp
sti
and
push
sbb
fnstenv
push
loopne
out
ffree
rcr
cmpsl
testl
in
dec
sti
pop
jb
mov
adc
out
clc
stos
lea
arpl
movsb
out
outsb
push
fs
and
roll
dec
insb
jg
mov
sarl
adc
cltd
lods
scas
push
repz
add
mov
subl
loopne
and
xchg
push
adc
dec
stc
arpl
xchg
sti
mov
push
mov
lret
cmp
insb
adc
sti
lea
and
rcrb
xor
iret
or
jae
std
push
divl
fisubs
out
lock
mov
push
daa
pop
jle
lea
out
fs
icebp
adc
cmp
les
in
or
int3
fisttps
and
lret
ja
lods
mov
sbb
sub
xchg
jbe
pop
mov
cmpsl
test
jo
ss
mov
loope
xor
inc
lods
inc
shrb
fwait
pop
adc
adcl
sahf
jp
ret
repz
mov
mov
xchg
jg
sti
and
roll
pop
sub
or
lds
js
scas
sbb
rorl
sub
sub
dec
adc
jno
and
adc
cmp
dec
cwtl
jle
cmp
xor
dec
mov
scas
push
aas
add
rclb
and
xchg
inc
cmp
mov
mov
out
rcl
pop
cmp
enter
shrl
fildl
pop
cmp
push
jne
sbb
sub
adc
cli
and
shl
fwait
jle
and
jbe
sub
cmc
mov
push
in
jae
xlat
xchg
push
outsb
or
call
rcl
xchg
mov
cmp
mov
es
gs
int3
or
push
test
stos
std
inc
and
xor
mov
add
or
xor
inc
in
rolb
push
xchg
cwtl
mov
addb
push
jmp
je
push
outsb
sbb
jo
sbb
fldl
xchg
cmp
ljmp
and
sub
dec
out
push
xor
nop
xor
gs
inc
in
clc
insb
sbb
shr
jo
push
lret
jb
insb
dec
sub
sbb
mov
push
pop
xor
mov
lret
mov
mov
inc
call
test
in
test
xchg
outsl
xor
mov
fwait
fs
push
jge
scas
std
add
push
cmp
xor
and
inc
push
loop
mov
push
mov
cmp
test
daa
faddp
xchg
es
rcl
mov
out
inc
xlat
ficompl
inc
xor
gs
jbe
cmpl
xor
mov
cmp
mov
subl
lds
xor
dec
out
add
scas
lods
stos
pop
push
adc
out
out
fstpl
mov
push
add
aaa
pop
repz
sub
fs
jmp
adc
xchg
mov
mov
jo
adc
scas
inc
push
into
fs
fmul
inc
xor
pop
push
pop
fisubrl
idiv
fsubr
pop
mov
pop
sub
call
js
mov
add
pusha
jne
sarb
cmp
dec
pop
or
and
test
fs
ret
test
xor
shlb
rcll
jle
je
lea
or
push
loop
leave
and
fdivrp
mov
mov
loope
popf
cmpsb
cld
mov
arpl
mov
enter
pop
adc
jb
lods
and
sbb
adc
repnz
dec
idivb
jnp
fs
fildl
and
jge
jno
xor
inc
in
aam
adcb
mov
adc
lcall
movl
adc
bound
addr16
pushf
fildl
pop
arpl
iret
mov
icebp
mov
sbb
pop
xor
fadd
xchg
insl
test
pop
mov
popf
push
fidivs
and
jbe
aam
jnp
push
cli
fcmove
shlb
push
leave
xorb
call
loopne
aas
inc
test
mov
jns
pop
test
inc
xor
shlb
cmp
mov
mov
loop
mov
rclb
out
mov
test
xlat
dec
mov
hlt
jl
and
xlat
cli
in
lock
repnz
leave
xor
sarb
and
xor
inc
push
cmp
mov
xor
jmp
shlb
cmp
jmp
out
mov
sub
pop
loop
icebp
int
add
enter
cs
dec
bound
fistps
testb
adc
test
jne
cwtl
jle
cmpsb
popf
sub
mov
negl
mov
fsubrl
sbb
das
pop
sbb
ret
cwtl
insb
ja
loop
mov
inc
sbb
or
push
pushf
sti
mov
mov
std
sub
std
adc
addb
fwait
fs
subb
fldl
clc
stos
out
loop
out
add
sbb
sub
out
sbbl
insl
mov
cld
push
loop
mov
mov
mov
into
test
add
inc
sahf
xor
cs
adc
inc
jb
xchg
jno
sub
pop
sub
or
sbb
jnp
mov
leave
mov
or
push
aad
imul
aas
mov
mov
addr16
add
enter
or
or
and
loopne
dec
adc
movsl
sub
and
scas
mov
fisttpl
xchg
and
and
dec
mov
test
pop
lret
dec
jbe
fs
or
cmp
adc
add
push
sbb
xor
xor
mov
or
mov
rorl
mov
push
nop
sub
push
ret
lret
jmp
rclb
sub
in
lods
pusha
or
addr16
or
ljmp
add
outsb
nop
jae
in
inc
stos
sbb
push
xchg
push
or
mov
and
loop
push
cltd
testl
notl
nop
xchg
cwtl
add
icebp
scas
push
pop
mov
cltd
loop
and
jge
repz
dec
lret
adc
mov
cli
or
jmp
fbld
and
sub
inc
cmp
enter
and
inc
jnp
lds
xchg
cmpsb
pushl
lahf
xchg
pop
icebp
stc
pop
mov
arpl
sbb
dec
loope
jmp
into
inc
dec
lahf
jns
dec
fstps
sub
push
out
ljmp
in
fsubrs
sub
loopne
xor
sbb
lcall
add
cmp
mov
mov
jle
ret
cmpsl
dec
dec
adc
in
outsl
leave
cli
out
adc
ja
xlat
push
mov
mov
negb
push
pop
ds
jnp
fcompl
sbb
or
std
pop
xor
mov
xor
aas
inc
movsl
mov
loope
lods
push
cmp
shl
xlat
add
pusha
adcb
mov
int3
js
scas
ss
fnstcw
sbb
jnp
mov
shlb
popa
fst
repz
pop
lahf
and
cmpsl
jecxz
push
aaa
movsl
mov
popf
sbb
jnp
mov
cmp
mov
jnp
sbb
pop
xchg
vcvtsd2si
jl
mov
xlat
push
rcl
lret
pushw
int
mov
push
data16
lock
mov
jmp
das
fwait
in
sbb
in
push
inc
mov
loop
je
jmp
in
adc
add
jge
cld
xchg
and
movsb
ds
mov
cmpsl
adc
inc
inc
push
and
cmp
popa
scas
inc
jle
adc
push
dec
adc
and
mov
repz
cli
mov
cmp
mov
fcmovnbe
mov
loopne
outsb
push
sub
jno
loope
lods
mov
push
inc
out
shl
or
shrl
push
inc
enter
mov
jmp
or
stos
insb
lahf
xorl
aaa
xor
ss
outsl
iret
loop
dec
xchg
lcall
cmpsl
sub
xchg
cmpsl
fcomi
dec
cmpsl
xchg
nop
not
sub
call
mov
pop
aaa
mov
lods
into
loope
sub
mov
adc
pop
cmp
push
ss
push
cmp
add
sbbl
push
jp
int
sbb
arpl
pop
fwait
mov
dec
imul
or
xchg
jne
pop
and
mov
mov
mov
mov
rcrb
sbb
inc
dec
xchg
aas
dec
pop
push
daa
cli
mov
adc
push
aas
fs
rclb
mov
push
pop
fidivs
dec
push
rclb
out
mov
mov
out
dec
scas
mov
incb
leave
addb
jmp
mov
adc
mov
andb
test
and
pushw
pop
push
movsl
push
mov
popf
xchg
inc
ffreep
insb
sub
inc
add
pop
ss
mov
cmpsb
or
sbb
lahf
mov
xor
or
push
xlat
push
and
rorl
mov
add
stos
mov
xor
xchg
push
sbb
mov
xor
push
loop
mov
insb
iret
pop
xchg
aam
push
bound
scas
aaa
dec
shl
xchg
js
fwait
lcall
int
stc
jnp
adc
test
cmp
mov
inc
lcall
aam
and
inc
jne
loop
ja
push
pop
and
cmp
mov
or
fwait
mov
and
jecxz
bound
xchg
and
xchg
daa
gs
sbb
scas
cmc
xchg
lcall
out
icebp
xor
xchg
mov
push
arpl
mov
js
sbb
test
dec
test
sbb
mov
and
in
jbe
dec
call
shrl
xchg
inc
dec
mov
push
push
jno
mov
fcomps
mov
push
decl
or
xchg
stos
pop
mov
dec
insb
jg
gs
das
fwait
add
sbb
in
push
out
dec
inc
lret
sub
dec
dec
icebp
jb
or
push
mov
test
push
dec
int
push
lcall
mov
daa
in
sarb
xlat
push
fldl
cwtl
push
and
add
jno
cld
mov
or
movsb
or
mov
mov
loop
cmp
sub
call
xlat
imul
sub
push
decb
add
loope
cli
fcmovnu
inc
pop
pop
iret
in
adc
mov
hlt
or
cli
loope
rclb
push
ret
xchg
cmpsl
or
xchg
push
cld
xchg
pop
lods
pop
inc
push
dec
ret
in
addb
aas
sbb
lock
iret
add
xchg
or
or
cmpsb
push
push
mov
outsb
mov
cmp
mulb
faddl
insb
jg
sub
xchg
in
aas
sbb
popa
xor
inc
jmp
mov
mov
push
test
pushf
pop
mov
mov
mov
scas
in
cmp
frstor
dec
scas
lds
cmp
call
in
sub
cwtl
pop
pop
cmp
fstl
inc
gs
out
or
dec
push
lea
clc
push
divb
ds
test
popa
call
mov
into
mov
jl
and
jmp
or
call
adc
jle
push
negb
xlat
stos
mov
popa
fld
sub
mov
lret
into
pop
push
fcmovnu
imul
stos
hlt
add
mov
nop
mov
out
rcl
and
arpl
cmp
mov
xor
sarl
mov
mov
push
mov
mulps
aaa
mov
rcr
inc
cmp
push
cmp
lcall
push
mov
out
lock
inc
adc
sbb
lahf
mov
sti
call
pop
mov
ret
mov
test
xchg
mov
je
fists
hlt
sbb
or
cmp
adc
scas
fidivrl
push
loop
sbb
or
or
inc
pop
mov
mov
js
push
dec
test
lcall
movsl
insl
adc
jp
mov
scas
or
in
notl
sbb
repnz
mov
repz
jo
mov
pop
test
test
out
sbb
cmp
mov
sbb
in
stc
inc
cmp
xor
sub
mov
inc
addr16
sbb
jbe
mov
mov
repnz
out
adc
adc
pop
pop
lock
mov
lods
xchg
mov
imul
pop
sti
adc
daa
xor
push
out
fisttpll
pop
frstor
and
and
mov
jne
incl
jge
inc
jnp
adc
movsb
cmpsl
int
fldenv
pop
in
repnz
enter
dec
fcmovnbe
and
sub
int
out
push
and
and
cmp
push
mov
clc
add
adc
out
movsl
imul
or
out
pop
jo
out
aam
in
aas
stos
mov
cwtl
outsl
icebp
xor
into
stos
test
xchg
js
shll
push
lods
mov
call
div
test
jnp
and
pop
add
or
pop
shrd
imul
add
sahf
movsl
fsubr
idivb
mov
jns
test
cmpsb
or
loope
out
hlt
sbb
mov
loope
or
adc
ljmp
jg
jmp
push
decb
pop
sbb
add
sbbb
inc
add
adc
insb
adc
lret
imull
sbb
and
push
testl
fldcw
xor
shrb
xchg
mov
std
mov
jg
sub
mov
or
ja
mov
push
mov
dec
push
in
mov
test
inc
cwtl
pop
mov
dec
cmp
daa
xchg
imul
out
cmpsb
add
in
xor
out
cwtl
push
iret
aas
add
sbb
lahf
xchg
mov
sbb
leave
iret
cmp
adc
int3
inc
and
cli
ret
popa
fsubrp
insl
cmp
pop
inc
push
es
out
scas
shll
xor
imul
das
test
fcoms
mov
mov
sbb
push
imul
xchg
adc
xor
dec
xchg
arpl
std
adc
pop
mov
xchg
inc
loop
dec
imul
cmp
pop
clc
and
imul
int
push
js
sarb
mov
dec
pop
in
add
jbe
insb
out
adcl
push
data16
aas
jno
fildll
dec
scas
fisubrs
filds
leave
lds
hlt
stc
adc
mov
addr16
imul
jb
jg
es
xchg
xor
mov
dec
sub
xchg
push
mov
lret
test
stos
mov
aaa
xor
sbb
loopne
cmp
adc
inc
adc
test
es
fimuls
cmpb
lret
sahf
or
test
insl
jo
addr16
jecxz
aad
mov
lock
sub
xchg
data16
shrb
jecxz
inc
cmp
sahf
test
adc
test
lcall
push
neg
aam
stc
mov
stos
cmpsl
cmp
xor
cmp
stos
in
loope
sbb
jnp
jne
or
pusha
adc
out
enter
insl
and
daa
rorb
cmpsl
mov
or
ja
test
pop
andl
mov
mov
mov
je
sti
or
je
test
insb
adc
test
rcrb
pushf
xchg
mov
sbb
or
scas
mov
or
fistl
fs
and
jb
jp
enter
jo
xchg
gs
addr16
inc
cmp
out
leave
loop
and
jnp
dec
mov
dec
cmpb
arpl
pop
push
push
push
and
lahf
inc
mov
in
pop
repnz
mov
mov
les
in
sbb
jbe
fcomps
stos
mov
jbe
sbb
aad
adc
push
jmp
and
cmpsb
fstl
mov
ja
sbb
push
fildl
loope
inc
es
movsb
pop
shrb
pop
js
adc
fldt
repz
dec
mov
or
adc
testl
enter
repz
ds
mov
movsb
std
out
cmpsb
jp
lcall
loope
xlat
jg
push
shrl
sti
leave
jb
dec
mov
adcl
or
pop
dec
push
fldt
cli
mov
xor
cmp
lea
lea
shlb
mov
mov
mov
or
and
in
and
popf
push
xor
jns
sub
jae
inc
mov
xchg
lcall
push
add
in
lahf
push
jo
or
cld
lret
and
into
jnp
jno
addr16
pusha
lods
insb
sub
test
iret
sahf
sbb
loopnew
aas
inc
psrld
mov
jle
popf
fmull
mov
jp
inc
pop
sar
loop
cmpsb
jl
mov
daa
stos
dec
adc
loopne
or
mov
in
testl
aam
rclb
test
in
add
jb
nop
adc
sbbl
pop
rolb
jb
pop
fists
and
sub
popa
and
repz
pop
loopne
les
jno
push
push
cmovge
imul
jg
or
inc
xchg
addb
mov
stos
jp
cs
push
out
addr16
mov
orb
pop
leave
gs
js
dec
mov
adc
mov
push
mov
mov
decl
shrb
pop
jnp
rol
ret
xor
jo
mov
cmp
mov
mov
mov
mov
aaa
roll
loopne
sbb
aaa
insb
fcoms
int3
test
clc
fs
xchg
adc
popa
fsubrl
int
hlt
inc
jmp
adc
flds
out
jno
push
psubsb
mov
mov
push
inc
imul
or
outsb
ja
pop
sbb
mov
and
pop
xchg
adc
popa
and
sbb
lret
loope
dec
fstps
push
and
xchg
hlt
mov
std
mov
adc
std
scas
insl
cmp
adc
sub
stos
mov
lret
sub
cmp
lds
mov
jb
sub
adc
or
lock
pop
add
pop
in
xlat
xor
js
add
clc
fidivl
sbb
in
push
sub
shrb
mov
loope
sbbl
ss
sub
and
xor
fst
divb
fadds
stc
leave
faddl
repnz
jbe
in
add
mov
fmul
mov
or
dec
jnp
mov
data16
test
mov
sub
jno
es
nop
push
jle
jnp
pop
mov
push
notl
dec
daa
out
sbb
adc
push
xchg
mov
fimuls
aad
cmpsb
cmp
movsb
sbb
cmc
push
xor
xchg
mov
gs
add
loop
lock
imul
xchg
jb
mov
scas
fldenv
push
loopne
add
roll
stc
int
cli
jne
shll
imul
push
ljmp
out
in
scas
add
test
sbb
jge
push
mov
jp
pop
inc
inc
push
ds
or
imul
mov
jge
sub
loopne
mov
sahf
cmp
sub
mov
sbb
inc
dec
push
popf
sbb
adc
mov
lods
jl
mov
pop
leave
stos
mov
das
dec
lods
push
leave
cmp
jecxz
fldcw
jmp
pop
adc
add
inc
les
cmp
cmovge
stos
jne
lds
subb
cmp
mov
fucomp
imul
icebp
jno
push
or
movsl
sbb
aam
mov
adc
movsb
xchg
or
shl
add
pop
add
lret
fucom
pop
dec
int3
int
mov
and
ljmp
outsl
xchg
xchg
movsl
sub
in
arpl
out
cltd
daa
xor
repz
mov
sbb
lcall
les
dec
inc
repz
mov
pop
mov
add
mov
popfw
std
lock
sbb
ljmp
in
push
out
pop
jmp
mov
and
jmp
imulb
std
cmp
xor
testl
clc
add
cwtl
jnp
in
sub
rcrl
pop
add
pop
inc
dec
fsubrl
in
neg
ficoml
dec
loop
mov
in
in
xchg
test
push
aaa
int
cmp
push
fisubl
lret
hlt
adc
pop
sbb
div
in
rorl
or
adc
loope
fnstcw
ret
and
dec
adc
in
mov
insl
fwait
arpl
into
mov
dec
push
gs
dec
xchg
xchg
dec
test
mov
lahf
pop
dec
mov
jb
xor
add
sub
pushf
dec
jbe
scas
jecxz
sub
and
aas
dec
int
push
adc
test
ja
mov
pop
into
leave
mov
addr16
sub
into
or
sub
in
and
jecxz
fisubrl
mov
jne
comiss
hlt
jecxz
dec
scas
push
sbb
int
jecxz
pop
jmp
cld
dec
xchg
mov
or
add
adc
push
fwait
ret
dec
notb
xchg
in
iret
mov
push
aaa
int
cmp
push
lret
hlt
adc
pop
sbb
fdivr
and
aas
lds
aam
jl
xchg
mov
imul
sub
dec
outsl
pop
loop
lahf
mov
jmp
cltd
rorb
mov
and
inc
lods
cmp
lret
sbb
andl
std
pop
pop
arpl
popa
mov
mov
in
test
and
sbb
xor
in
scas
or
mov
cmc
rcrb
in
mov
mov
out
enter
jne
ret
iret
sbb
add
inc
jp
xchg
aad
loop
leave
stos
push
sbb
xchg
sarb
in
jge
jo
dec
pop
bound
roll
aam
xchg
scas
outsb
data16
push
cwtl
ret
loop
dec
test
push
test
stc
inc
sti
sbb
das
add
xor
lahf
mov
push
aaa
int
cmp
push
fisubl
call
call
insb
lods
mov
push
mov
addr16
fstl
stos
cmp
pop
sub
add
or
scas
cmp
add
push
scas
test
ja
fwait
xchg
or
js
out
leave
ja
sub
push
sbb
jb
xor
jge
divl
stc
push
push
daa
pop
mov
sub
adc
outsb
mov
cmpsl
dec
lret
xchg
repnz
push
xchg
pop
fisttpl
int
inc
ja
jl
xlat
and
pop
enter
cmp
ds
push
out
loope
cmp
sbb
push
sbb
decl
jae
or
sbb
dec
adcl
test
test
and
mov
shlb
sub
fidivl
mov
xor
or
mov
and
cmp
insl
inc
int
cmp
aad
mov
lea
lock
or
adc
aaa
lcall
add
pop
fs
add
pusha
lahf
cs
fcmovb
into
ja
enter
mov
iret
fwait
mov
mov
push
fwait
aam
fwait
sbb
std
pop
mov
fcmovu
sub
in
fdivr
add
popf
imul
cmc
jg
in
sub
dec
fdivrl
ror
pop
or
mov
add
push
mov
mov
cli
imul
adc
stos
sbb
fldt
div
xchg
sbb
xor
push
inc
rorl
push
or
mov
adc
ja
mov
xor
mov
sbb
pop
outsb
pop
mov
push
adc
push
mov
clc
std
call
fldl
jmp
out
or
insb
in
lret
or
lods
cmp
aad
out
jnp
lret
dec
mov
jae
sahf
iret
lods
jmp
notl
inc
inc
adc
jne
cmpsb
out
push
add
cmc
das
push
jl
mov
adc
dec
ja
fwait
add
std
cmp
mov
xor
sub
int3
adc
xchg
movsl
jno
push
xchg
sub
gs
shll
mov
adc
or
cmc
es
mov
jecxz
jl,pt
sahf
aad
ljmp
adcl
cmp
fwait
sbb
addr16
sub
inc
lret
test
inc
lds
mov
dec
and
cmp
sarl
mov
mov
jb
push
aas
jns
jp
movb
add
xlat
jb
subb
shll
pop
popf
sbb
mov
cld
aaa
jbe
pop
jbe
mov
jmp
in
cmpsb
pop
in
fs
sbbb
push
test
mov
cmp
into
fsts
push
hlt
dec
shlb
fucom
push
jne
fs
cmc
jb
push
fdivl
jno
mov
movsb
rol
lret
add
popf
fdivs
data16
sarb
das
sub
lcall
ret
inc
pusha
subb
or
sbb
jae
int
mov
repz
out
cmp
inc
ja
dec
out
mov
out
out
jmp
into
push
push
mov
jns
sbb
in
xor
das
pusha
ljmp
data16
or
fadds
aas
mov
iret
outsl
jp
inc
pop
loope
cwtl
in
lock
jecxz
pop
push
add
push
fsts
pushw
test
stc
sbbb
mov
jmp
cwtl
and
push
lcall
fcmovbe
jno
inc
jp
mov
adc
or
cmp
sbb
xchg
loope
in
popf
cmp
and
push
add
add
out
mov
xchg
mov
call
enter
sbb
repnz
dec
mov
mov
loop
sar
or
xchg
movsl
sub
inc
push
or
inc
jmp
adc
das
outsl
jb
mov
cmpsb
gs
mov
rorl
and
mov
stos
js
xchg
test
sahf
adcl
sbb
cmp
cs
test
inc
dec
jmp
fisubrs
out
bnd
jns
mov
cmpsl
xor
mov
cmp
pop
jne
cmp
arpl
pop
outsl
mov
mov
mov
pushf
jmp
fsubr
ja
xchg
lods
mov
fs
inc
xlat
aaa
int
cmp
shlb
ss
cmp
adc
add
sarl
repnz
push
lods
xchg
cmp
std
shll
push
mov
mov
out
xchg
inc
lods
add
pop
das
or
xor
js
addr16
pop
orl
dec
cmpsl
iret
mov
inc
mov
mull
in
or
jne
jp
ds
negl
in
cwtl
push
pop
jnp
fildll
sbb
lock
push
pushf
or
mov
out
cmc
hlt
push
jno
and
and
sub
add
pop
ret
xor
jmp
pop
in
mov
fs
push
pop
lds
mov
adc
pop
cmc
jne
jnp
push
fildl
out
not
push
testl
fldcw
xor
ret
sahf
enter
fsubr
out
jmp
fldt
in
cmp
inc
inc
test
je
pop
mov
adc
xchg
cmp
mov
sbb
arpl
jle
adcl
jbe
push
aam
mov
rcrb
cltd
outsb
das
dec
and
shrl
out
out
inc
mov
jmp
enter
std
mov
testl
sub
es
sub
decl
push
xchg
pop
xchg
adc
add
orb
sub
mov
cmpsb
push
pushf
pushf
push
mov
in
push
mov
popa
decb
rcrl
std
cmc
mov
push
lret
ss
mov
std
xchg
adc
xlat
addr16
sbb
ror
dec
test
loop
fadds
jnp
push
dec
dec
daa
ss
jne
int3
jecxz
rcrl
popl
inc
jnp
mov
mov
jnp
adc
xchg
mov
inc
lds
lods
fsubl
aaa
ja
or
inc
fdiv
movsb
mov
ljmp
sbb
cmc
mov
jbe
popf
adc
xor
imul
add
lock
pop
int3
rcl
mov
ror
aam
mov
inc
mov
sub
aas
push
movsl
pop
pop
dec
std
xchg
adc
aas
jg
lds
inc
filds
filds
pushf
pop
mov
mov
movsl
imul
pop
sbb
add
mov
sar
jmp
and
stos
out
int
adc
fnsave
and
push
or
ljmp
inc
or
xor
sbb
add
mov
sbb
mov
adc
dec
pop
bound
mov
mov
cmp
outsb
push
fsts
bound
test
xchg
jo
mov
fdivr
call
fidivrs
ljmp
divl
pusha
movsb
ss
movsb
idivl
js
dec
jecxz
test
inc
roll
xor
adc
rcl
sub
icebp
lock
lods
scas
out
mov
iret
outsb
sub
enter
out
shlb
repz
sub
popf
repz
ja
popa
fmull
xchg
movsl
lock
pop
clc
daa
aad
ret
sbb
jg
sub
popa
out
lcall
fisttpl
xor
mov
adc
dec
loop
jnp
stos
mov
or
push
cmpsb
data16
inc
int
add
mov
icebp
push
sub
or
adc
inc
dec
xorl
xor
mov
push
sahf
lahf
push
mov
test
das
and
mov
repnz
sbbb
dec
das
add
xor
lahf
mov
push
aaa
int
cmp
shll
mov
adc
loope
aam
dec
push
gs
jp
mov
rcrb
cmp
xor
sti
fdivp
shll
pop
fmul
jbe
insb
jno
or
sub
adc
movsl
xor
jbe
pop
int3
adc
pop
inc
mov
mov
xchg
rcrb
addr16
jo
jg
adc
andb
inc
cmp
dec
andl
movsb
mov
xchg
xchg
iret
jg
orb
out
xchg
jg
rorb
out
insb
sbb
es
test
call
jecxz
fmull
or
jmp
cmc
cwtl
stos
mov
test
ljmp
stc
mov
daa
or
js
mov
adc
daa
lock
in
inc
sub
pop
push
mov
add
fidivl
lret
dec
sbb
out
xor
push
loopne
sti
cli
dec
xor
fcomps
in
cltd
adc
popa
or
xchg
xor
push
scas
or
lret
sub
dec
outsl
push
divb
into
mov
rcr
je
pop
sbb
fmuls
lea
mov
lods
mov
xor
sub
int3
push
mov
in
sbb
andb
stos
sub
insb
loopne
adc
cwtl
and
addr16
mov
fdivrl
mov
aam
bound
xor
and
mov
lods
dec
push
xor
jnp
or
add
lret
push
sbb
mov
and
test
mov
sarl
mov
sbb
xlat
in
ret
lret
adc
out
fsubr
loop
sbb
mov
xlat
push
adc
test
clc
sbb
inc
loopne
push
lods
frstor
inc
inc
or
icebp
and
ds
dec
push
mov
stos
mov
xchg
aaa
jl
add
mov
stos
cmp
push
popf
mov
inc
cmp
push
ret
pop
cwtl
push
scas
inc
vcvtpd2ps
imul
enter
jge
cli
xor
jle
adc
movsl
popf
js
std
jae
push
mov
ds
push
loope
push
inc
inc
sahf
test
cmc
sub
mov
out
scas
in
or
popa
mov
iret
in
pop
pop
ja
push
xchg
pop
mov
xor
int3
lret
and
out
inc
cmpsb
jecxz
or
xor
into
add
out
test
xchg
sbb
inc
aaa
pop
dec
clc
xchg
inc
xor
popf
mov
xchg
imul
int
sub
sbb
outsl
add
add
jnp
std
mov
test
lds
add
pop
movsl
lods
mov
xchg
inc
pop
inc
sbb
or
cmpsb
insl
mov
cmp
or
mov
mov
arpl
gs
sbb
les
shlb
daa
dec
ds
popa
loope
dec
push
lcall
gs
push
lods
lods
pop
push
ret
test
inc
dec
movsl
inc
mov
and
pop
xchg
inc
arpl
fisttpll
test
xchg
inc
leave
jmp
pop
into
popa
loop
fmuls
clc
sti
jl
stc
cmp
iret
adc
fsubrs
xchg
call
test
adc
and
adc
mov
pop
push
out
sub
dec
jmp
xchg
sbb
cmp
loop
outsb
bound
inc
fcompl
call
sbb
xchg
arpl
jp
psllq
in
push
mov
cmp
sti
test
out
push
outsb
cmpsl
les
xchg
xor
ret
dec
mov
ret
mov
xchg
jl
gs
mov
pop
sbb
test
cmp
mov
or
mov
cmp
ss
cmpl
cwtl
sahf
shll
stc
sbb
out
or
stos
dec
push
push
out
imul
mov
mov
mov
and
pop
push
jmp
push
ljmp
outsl
mov
mov
leave
jno
mov
mov
adc
jne
lret
fcoms
and
pusha
int
adc
mov
xchg
sti
inc
lds
sub
mov
inc
loop
dec
imul
fnstenv
lock
xchg
and
dec
fs
outsb
in
add
fildl
mov
mov
sbb
paddsw
jge
adc
les
iret
hlt
xor
repz
stc
cmp
mov
sbb
arpl
jnp
inc
aaa
mov
loopne
addr16
ss
inc
push
imul
inc
aas
xor
call
cmp
push
roll
je
push
mov
mov
das
jmp
icebp
xor
and
and
pushf
js
push
cmp
arpl
sarb
lock
fs
jg
mov
add
and
sub
pop
and
mov
icebp
mov
mov
loop
dec
mov
loopne
jno
mov
adc
insl
cmp
push
lret
aaa
fwait
adc
cmp
xchg
pusha
outsl
leave
rolb
loopne
aad
sbbl
imul
out
sbbl
jns
loopne
lret
xchg
shrl
jne
inc
mov
mov
cmp
mov
mov
adc
loopew
dec
dec
lea
xchg
add
das
and
arpl
scas
es
fwait
icebp
ds
mov
das
mov
push
adcb
and
sub
in
insl
inc
into
or
stos
pop
in
sahf
lea
outsb
cmpsb
xor
sti
movsl
lds
jae
bound
sti
aam
pop
mov
out
xchg
es
mov
add
and
push
stc
or
add
mov
jb
mov
arpl
lcall
xchg
test
cmp
jmp
scas
testb
sub
and
mov
popf
insb
add
lds
sbb
mov
cli
mov
enter
in
push
dec
or
sub
push
sarb
js
adc
fstps
addr16
test
shr
jno
jg
popf
pushf
jmp
hlt
xlat
ja
lds
sub
cmp
add
push
and
fcmovb
dec
scas
sbb
clc
xchg
adc
jnp
push
test
mov
pop
cmp
xor
sti
fdivp
shll
pop
fmul
jbe
pop
jns
inc
shr
xor
and
jb
je
cltd
lods
mov
xor
sub
rcr
cmpsl
sbb
sub
push
stc
or
add
mov
in
insb
paddusw
aaa
push
pushf
repnz
cmc
mov
stc
or
and
cmp
pop
lea
xchg
mov
adc
ljmp
add
adc
xor
jae
mov
mov
pop
pusha
jle
in
std
fucompp
pop
js
adc
inc
jp
push
push
mov
fnstenv
add
insb
out
xorl
test
imul
push
out
pop
std
cmp
mov
add
inc
test
movsb
jmp
dec
ret
or
scas
add
mov
lret
cmp
sahf
cmpsb
lock
inc
add
stc
mov
push
add
push
pop
cltd
iret
scas
lds
ds
jbe
test
clc
mov
cmp
loopne
and
jle
enter
cwtl
addr16
xor
es
mov
ds
or
shl
data16
out
stos
push
testb
mov
xchg
lods
lahf
mov
in
xchg
test
xor
gs
xor
pop
mov
outsl
add
sti
cltd
pusha
daa
xor
mov
xchg
cmp
fadds
pop
mov
pop
cli
hlt
orl
xchg
mov
loop
scas
in
push
push
sbb
adc
xor
adc
popf
xchg
add
pop
lds
sbb
js
in
lock
mov
jge
xor
dec
jbe
push
jle
aam
lret
dec
cmp
push
lods
push
cmp
jge
xchg
sub
imul
leave
mov
loop
jo
push
ds
mov
hlt
sbb
dec
mov
nop
adc
movsl
inc
xchg
fmulp
subl
aam
popa
stc
sbb
es
in
cmpsb
int3
sub
rcll
sub
insl
scas
arpl
push
bound
test
mov
mov
ljmp
mov
pusha
jl
xchg
stc
mov
xchg
push
jg
int3
fdivs
mov
push
mov
aaa
mov
mov
int3
pop
add
jecxz
scas
dec
mov
clc
cmpsl
test
inc
mov
fwait
or
mov
pop
dec
test
jp
mov
cmpsb
xchg
adc
add
pop
mov
popa
loope
xlat
adc
popf
pushf
es
test
mov
add
js
pop
cmp
arpl
sbbl
lret
bound
push
fwait
lods
mov
cmp
rcl
scas
mov
or
xchg
pushf
cmp
mov
int3
imul
dec
mov
xchg
rcl
mov
xor
mov
data16
cld
filds
xor
adc
push
xor
xchg
pop
jns
test
xchg
aaa
popf
sbb
ds
jo
lret
inc
aaa
xchg
xchg
mov
xor
imul
mov
sub
int3
insb
cmp
adc
insb
movb
cmp
mov
int3
mov
push
cltd
sbb
test
sbb
mov
out
aad
xchg
dec
daa
inc
adc
stos
int
in
pop
test
push
mov
push
dec
xchg
js
jp
in
nop
mov
inc
fcmovnu
jno
inc
inc
xlat
jo
aam
pop
pop
std
or
cmpsb
insl
mov
mov
pop
out
or
adc
add
pop
mov
enter
dec
pop
stos
push
jne
pop
cmp
lahf
int
pusha
mov
cwtl
enter
xchg
and
data16
lret
xor
mov
mov
scas
lahf
ret
adc
les
sbb
hlt
int
jnp
popf
ss
xlat
scas
mov
fisubrs
xchg
push
and
jge
std
mov
mov
push
xchg
pop
mov
std
lds
or
jp
adc
shl
outsb
mov
incb
in
out
std
add
pop
gs
mov
inc
hlt
hlt
push
outsb
xor
push
mov
aad
lret
mov
ficompl
mov
stos
cmp
ds
fsubrs
lahf
enter
test
push
cwtl
jnp
jno
daa
cmp
lcall
pop
sbb
pushf
push
je
ja
or
jnp
mov
cmp
mov
test
cmp
sbb
imul
je
pop
scas
lods
inc
imul
adc
stc
imul
loope
jge
fidivrs
or
pop
shlb
out
sahf
insb
lret
and
lds
icebp
adc
outsb
push
cld
sbb
andl
leave
and
add
in
mov
lcall
roll
test
adc
lcall
lahf
not
and
mov
out
mov
mov
sbb
add
adc
jg
adc
rorb
xor
ret
jno
sbb
addr16
pandn
dec
test
adc
stos
xchg
aad
mov
xchg
sti
cmp
aad
fidivrl
mov
push
daa
test
test
fimuls
stos
push
mov
adc
fadds
dec
jecxz
jecxz
dec
cld
pop
mov
loopne
push
adc
cmp
cmc
jo
adcb
jmp
jmp
ret
push
enter
push
sub
push
cltd
lods
inc
call
push
and
orb
dec
loope
divl
sbb
shrl
fcoml
and
movsl
sub
cld
popa
ljmp
hlt
cmp
add
or
xchg
pushf
add
jb
mov
jecxz
pop
dec
test
enter
inc
and
push
jg
dec
aaa
xchg
cmpsl
mov
xchg
add
sbb
or
sub
lds
sbb
mov
cli
mov
enter
in
push
cmp
int
push
aaa
push
sarb
js
pop
jne
cmp
dec
jo
daa
lock
stc
loope
mov
das
out
xchg
mov
sbb
or
scas
leave
mov
fwait
dec
cmp
pop
push
push
cmp
out
aad
jb
sub
xor
sbb
mov
xchg
push
add
lds
lds
pop
js
jbe
lret
mov
imul
in
dec
mov
lock
sbb
or
cmc
ds
stos
adc
sub
jae
fstl
jg
insl
jo
imul
dec
dec
daa
ljmp
enter
inc
sbb
mov
xchg
push
jg
dec
aaa
xchg
pop
sti
push
int
pop
xchg
add
sbb
xor
xchg
inc
js
adcb
push
sbb
ss
lahf
sbb
jmp
and
in
sub
cmp
int3
jecxz
jns
aam
cs
mov
es
jo
fdivrl
in
mov
xchg
push
xchg
outsb
mov
xchg
mov
push
shll
test
leave
ds
stos
addr16
mov
aas
stos
in
cltd
adc
xor
inc
ret
dec
dec
jg
aam
sti
fdivp
shll
pop
fmul
jbe
mov
sbb
push
pop
fst
cmp
dec
bound
inc
cmpsl
sti
xchg
jns
and
leave
ret
push
pop
mov
imul
jno
mov
rcrl
mov
fisttpll
or
adc
pop
mov
pop
and
sbb
sbb
sbb
mov
aaa
inc
jg
int
xchg
aaa
out
cli
dec
movl
xchg
sbb
cmp
sbbl
dec
fcoml
jns
dec
loopne
cwtl
sti
dec
lcall
jne
or
mov
or
push
jnp
mov
stos
and
dec
jnp
loop
xchg
mov
adc
or
fidivl
popa
ss
pop
jb
rorl
divb
sbb
pusha
jns
sbb
xor
cmc
arpl
xchg
nop
adcl
jle
je
push
push
xor
imul
out
xchg
fwait
jb
adc
cmp
rorl
fdivrp
xor
lret
push
aad
dec
bound
adc
sub
pop
dec
push
inc
dec
imul
xorb
pop
insl
scas
arpl
pop
pop
inc
pop
addr16
pop
movsl
lods
repz
repz
and
aaa
xchg
fldenv
roll
mov
mov
int
cmpb
clc
fs
jnp
cmpsb
and
sahf
mov
add
mov
loopne
inc
inc
fs
sub
push
sti
mov
sahf
mov
sbb
push
adc
pop
inc
jg
pop
sub
mov
test
pop
je
iret
sbb
stos
jge
ret
popf
mov
add
stc
or
push
jae
mov
xor
int3
popf
shlb
xchg
lods
add
arpl
xchg
into
xchg
rcrl
and
popa
loope
lret
cmp
pusha
jbe
loop
inc
sbb
pop
inc
xchg
icebp
mov
sbb
dec
cmpsl
iret
jbe
out
aaa
pop
aam
or
add
push
aas
movsl
sub
inc
push
xlat
lcall
aaa
lcall
out
outsb
js
xchg
inc
scas
pop
jo
repnz
out
iret
pop
enter
push
repz
std
mov
xor
sub
mov
add
insl
cmp
push
in
call
test
call
push
fst
ret
jg
test
mov
adc
dec
mov
ds
or
js
pop
jne
das
call
mov
mov
jnp
pop
pop
jle
xor
xlat
nop
in
xchg
cltd
xor
xchg
and
adc
mov
fimuls
aam
sub
ja
cmp
push
lods
sub
xor
or
push
imul
pop
jge
mov
test
arpl
imul
int3
enter
xor
lret
push
testb
push
adc
dec
sub
pop
pop
addb
pop
mov
popa
jno
ds
sbb
push
inc
jo
lahf
insl
and
xchg
push
cmp
sahf
sub
movsl
cld
mov
data16
insl
mov
loope
inc
cmp
dec
cmp
add
sahf
adc
test
call
imul
jne
add
mov
dec
mov
mov
adc
xor
orb
pop
inc
push
testl
fldcw
xorl
fsubrs
push
cmp
lahf
pop
insl
sbb
cmp
out
lds
neg
in
shl
mov
addr16
js
adc
popf
out
mov
jge
jns
imul
add
loop
fstpt
sbb
enter
fwait
inc
lods
jl
test
js
push
repz
les
adc
shr
and
sub
lock
pop
aaa
shlb
jns
or
test
outsb
xchg
pop
jnp
xchg
mov
fs
mov
mov
push
dec
cmc
mov
mov
in
inc
xchg
dec
adc
ljmp
sahf
fadds
xor
sub
loope
adc
call
push
jp
test
adc
sbb
imul
js
loop
addl
mov
scas
jg
popf
sbb
bound
cmp
mov
mov
mov
xor
ja
or
ja
int
jno
addr16
js
adc
sub
mov
mov
adc
push
das
adc
lahf
mov
jp
in
jno
mov
lods
jg
hlt
out
fdivp
jge
ja
xrelease
inc
sbb
cmc
mov
add
adc
cld
movsl
push
subl
out
xor
mov
push
in
jbe
mov
in
jecxz
mov
mov
fnstsw
lahf
lcall
aam
fcoms
mov
mov
xchg
mov
outsb
sbb
je
xchg
xchg
xchg
lds
out
jbe
std
test
sbb
sarb
icebp
lock
popf
sbb
imul
int
sub
cmp
out
les
pusha
mov
and
aam
popf
jl
add
inc
dec
lock
xchg
roll
in
mov
push
and
aad
xchg
popf
push
mov
xor
movsl
lods
mov
cmp
lahf
lcall
sub
lock
sbb
xchg
in
je
filds
fsubrs
pusha
jae
sub
add
sub
dec
out
movsl
push
arpl
addr16
std
adc
mov
xchg
xchg
movsl
jb
sub
test
repnz
ret
push
ret
and
scas
shll
jmp
mov
fstl
lahf
mov
in
sub
pop
in
or
adc
jecxz
lods
sub
jge
dec
icebp
call
sub
sahf
subb
pop
dec
pop
pop
mov
inc
inc
in
rorb
js
adc
mov
cwtl
push
inc
pop
or
ja
fld
imul
push
pop
enter
scas
jg
neg
std
mov
fwait
xor
cmp
pushl
sarl
cmp
or
bound
mov
or
mov
mov
rcl
jnp
lock
shll
cmp
mov
pushf
mov
mov
xor
cltd
lods
insl
xchg
and
enter
cs
dec
adc
lret
sbb
popf
gs
cmpsl
push
lods
sub
add
mov
sub
scas
mov
add
mov
jo
insb
sbb
fisttps
sbb
xor
mov
jl
out
xchg
outsb
flds
sbb
aad
xchg
jl
push
sti
push
out
std
cmc
pop
jle
insb
jg
xchg
pusha
sbb
cwtl
stos
bound
mov
lea
xor
dec
loopne
cwtl
sti
dec
lcall
jne
or
mov
or
sub
and
stos
inc
xor
mov
sub
push
xor
inc
xlat
mov
dec
inc
push
pop
gs
mov
inc
cmp
rorb
sub
sub
imul
testb
push
cwtl
fwait
jl
mov
adc
scas
cmp
popa
sbb
xchg
inc
push
and
cli
ret
popa
sbb
jle
movsl
sub
sub
cmp
inc
xchg
push
sbb
jnp
sub
and
jge
pushf
pop
xchg
mov
aaa
loop
mov
jg
or
inc
and
arpl
pop
pop
xchg
xchg
pop
out
add
and
cwtl
divb
push
sbb
clc
xchg
and
fsubl
mov
dec
pop
imul
loopne
cmpsl
xchg
mov
sbb
mov
mov
and
xor
ljmp
jno
adc
mov
loopne
pop
insl
mov
jb
lcall
mov
lods
lea
es
cmp
pop
cmp
push
adc
outsl
insb
sbb
push
or
push
adc
add
add
lahf
pmullw
add
jae
sub
add
adc
jmp
push
adc
shrl
jns
aad
outsl
cmp
imulb
and
lds
nop
jo
sti
pop
jmp
es
jne
adc
fdivs
shl
mov
into
scas
or
imul
data16
loopne
outsb
mov
insb
jg
loopne
dec
cmp
loop
jmp
jp
fs
xor
fwait
and
xor
sahf
dec
jae
stos
data16
rclb
push
outsb
jl
cmp
test
mov
popf
sub
cmc
jl
icebp
adc
test
pop
mov
out
mov
pop
dec
nop
jp
shl
jge
or
xchg
adc
cmc
push
imul
jbe
push
pop
mov
xchg
mov
or
add
lods
mov
pusha
pop
jo
push
fistpl
mov
mov
dec
sub
mulb
xor
sub
jbe
adc
sub
push
inc
jge
push
stc
or
add
mov
in
lods
paddusw
aaa
push
pushf
repnz
cmc
mov
stc
or
and
cmp
and
jecxz
jns
testb
cmp
adc
push
test
fistpll
jle
lds
fdivl
addr16
aad
xor
xchg
mov
lahf
std
mov
sarb
les
mov
jge
inc
iret
mov
test
in
icebp
xchg
jmp
dec
adc
inc
into
dec
in
sarb
pop
jb
fsts
bound
add
int
and
loopne,pt
addr16
loop
dec
scas
cmpsb
cmp
mov
and
insb
mov
mov
pop
int3
sbb
fldt
sub
push
push
and
repnz
adc
mov
call
and
std
mov
cmpsl
push
cs
or
sub
sbb
mov
add
dec
adc
adc
push
jb
mov
mov
adc
mov
std
and
divb
int
mov
out
jge
push
sbb
xor
insl
aas
mov
adc
jg
xchg
sub
sbb
push
iret
and
mov
push
adc
lods
jge,pt
and
mov
js
mov
adc
in
hlt
cmp
fstpt
mov
data16
or
daa
mov
inc
in
push
stc
lock
cmp
es
je
aad
outsb
sti
in
or
movsl
daa
push
cmp
pop
inc
mov
dec
cmp
push
adcb
out
mov
add
cmc
sbb
pop
lods
push
out
mov
inc
mov
xchg
xor
mov
call
cmpsb
add
ret
mov
cmp
push
into
in
sub
push
ret
and
fwait
or
xchg
ret
and
push
cmpsb
adc
lret
mov
mov
pop
xor
jo
sub
cmp
xchg
sub
leave
dec
inc
push
cmp
pop
and
push
dec
sbb
push
dec
pop
jmp
daa
inc
nop
xor
push
ret
jecxz
adc
subb
sbb
shll
stc
xlat
out
sub
leave
mov
sub
dec
jne
inc
lahf
pop
pop
mov
stos
dec
pusha
rorb
pop
adc
jl
mov
sbb
inc
movsl
mov
fldt
push
cmp
xchg
cwtl
xor
inc
jl
rcll
hlt
lock
ljmp
enter
xor
adc
bound
stc
xor
sub
rol
jle
inc
dec
xlat
mov
jge
inc
jge
push
stc
or
add
mov
daa
sbb
jnp
sub
mov
ljmp
or
adc
and
gs
jge
clc
and
lret
jp
iret
call
fninit
je,pt
and
test
push
mov
js
je
scas
sub
stos
mov
mov
fiadds
jnp
ss
aas
std
adc
sub
add
je
mov
inc
inc
adc
inc
add
push
mov
or
or
lahf
jne
xor
cwtl
mov
cmp
ret
mov
js
gs
ss
data16
mov
xchg
inc
int3
push
cs
dec
leave
xchg
pop
in
add
cltd
push
inc
cli
lret
jbe
cld
in
push
insl
sbb
mov
rorb
shll
es
dec
popa
mov
push
scas
std
jne
sarb
loope
in
ljmp
in
js
adc
pop
mov
inc
pmuludq
cmp
js,pn
popl
lds
outsb
push
arpl
sbb
psllq
xchg
add
cmpsb
ret
aas
dec
jbe
insl
pop
lock
dec
movl
gs
dec
or
adc
inc
roll
sbb
jp
and
mov
fadd
sbb
cmp
jns
cmpsb
in
jnp
xchg
in
dec
std
adc
sub
sub
sti
fcomps
add
in
rcr
lcall
loopne
pop
cltd
cmp
inc
cmp
inc
fsubr
shl
mov
addr16
js
adc
lock
rcll
movsl
xor
xchg
xlat
push
outsl
cmp
mov
push
cmc
fwait
mov
or
clc
insl
xchg
clc
aaa
add
or
loop
sub
cltd
mov
rol
loop
in
cli
and
mov
and
xchg
int3
sub
gs
or
adc
je
sub
lock
mov
rcr
cmp
mov
push
gs
outsb
mov
xchg
xchg
iret
jmp
movsb
and
push
sub
mov
lcall
sbb
pop
sahf
dec
clc
out
pop
jmp
push
inc
gs
sbb
dec
pop
loop
xchg
scas
movb
pop
inc
push
testl
fldcw
xorl
test
std
cmp
loope
xor
addl
stos
cltd
xor
sub
sahf
repnz
ja
sub
lret
sti
in
cmp
push
test
push
popf
cld
sub
or
movsl
mov
jbe
rolb
lods
insl
xchg
into
mov
les
popf
rcrb
js
xchg
push
fucom
cmp
lret
push
mov
ret
sar
pop
inc
imul
add
out
add
stc
or
add
mov
repnz
jnp
fists
fimull
xor
sub
xchg
add
outsb
xchg
jae
js
outsb
inc
inc
cmp
divb
icebp
out
adc
pop
sbb
and
push
cli
dec
imul
sbb
pop
add
sarl
js
pop
and
push
mov
movsb
das
jbe
fsts
cmpsl
arpl
mov
adc
and
mov
movsb
push
xor
cmp
mov
inc
rorb
shrl
aad
push
adc
sti
mov
addl
gs
in
mov
popa
jmp
into
jbe
jbe
push
pop
fsubs
xor
js
cli
cwtl
or
adc
and
pop
mov
lahf
mov
std
adc
mov
imul
push
in
sub
jg
mov
stos
mov
sbb
xor
fwait
push
gs
dec
out
pop
lock
pop
mov
lods
jge
dec
ss
std
sbb
into
clc
xor
shl
jns
ret
xchg
scas
fdivrl
std
jmp
in
cmp
repz
loopne
stos
cltd
push
xchg
inc
lods
mov
sahf
mov
fwait
xchg
pop
mov
cli
jns
pop
sub
mov
jae
or
jl
mov
pop
fsubr
inc
mov
adc
test
data16
jmp
mov
lret
sbb
xchg
inc
outsb
das
stos
aaa
testl
add
addr16
or
adc
lods
lea
nop
dec
sbb
mov
roll
lcall
in
cmpb
or
lcall
jbe
psllq
mov
test
std
adc
push
mov
jne
lret
xor
mov
aam
pushf
jle
and
pushf
jmp
ss
aas
lods
lret
gs
jmp
push
or
mov
dec
lds
and
or
sub
scas
lea
cmp
push
sahf
push
in
addr16
mov
xor
in
mov
mov
jle
test
jae
mov
inc
sarb
ror
stos
xlat
imul
mov
push
je
dec
fs
push
mov
mov
stc
jne
lock
aad
pop
testl
aad
cs
jp
fstp
and
stc
pusha
imul
fistpl
mov
cmpsb
ret
push
lahf
pop
xlat
mov
leave
mov
push
xor
ljmp
loop
xor
mov
or
fwait
popa
xchg
mov
fsubrl
xchg
adc
mov
fisubrs
xchg
xor
xchg
ljmp
inc
repnz
mov
js,pn
jge
je
cmc
sub
outsl
push
pop
push
inc
and
es
sbb
adc
rcrb
sub
out
sub
roll
cmpsb
mov
out
cmp
mov
xchg
fwait
jmp
sbb
mov
dec
cmp
out
int
jle
add
cld
cs
mov
test
pop
test
fimuls
ss
mov
adc
fmuls
dec
mov
enter
inc
out
mov
jae
push
push
pop
out
push
ja
add
adc
nop
idivb
mov
sbbb
push
rorl
sahf
xor
incl
lahf
sub
and
mov
std
movsl
add
adc
dec
pop
jo
inc
imul
mov
popa
hlt
push
ljmp
ja
and
ret
pop
xor
popf
in
adc
sbb
lock
xchg
mov
int3
pop
sub
dec
or
inc
jg
in
mov
sbb
loop
test
outsb
movsl
adc
out
add
sub
dec
movsl
loop
mov
inc
test
inc
fcompl
stos
or
push
je
movl
cmc
adc
ds
cmp
adc
ret
or
out
add
adc
inc
push
mov
push
add
push
cmp
adc
call
mov
aam
loop
jmp
xchg
jl
xchg
rcl
jae
mov
insb
jg
fdivrs
mov
dec
jmp
cmc
loop
inc
aas
jns
push
fcmove
lds
into
or
inc
pop
and
xor
fisubrs
mov
js
dec
xor
mull
aaa
ret
movsl
jb
sbbb
out
add
xchg
adc
std
pop
pop
pop
outsl
mov
int3
mov
imul
cmc
rcr
jmp
jl
out
xchg
add
retw
scas
dec
mov
xchg
rorb
fcompl
xchg
repz
jl
xor
push
pop
std
ss
fsubl
repnz
sbb
dec
pop
dec
orb
and
or
movsb
or
jne
cmpsl
cmp
adc
idivl
mov
sar
imul
add
cmp
adc
in
cmp
jns
jae
dec
push
adc
pop
sbb
or
insb
sub
mull
pop
loop
mov
pushf
cmp
xor
lock
mov
inc
int3
xchg
aas
mov
mov
mov
out
scas
ja
push
jbe
pop
push
jae
adc
lahf
or
cmp
push
popa
sub
in
push
movsl
das
pop
cld
mov
test
mov
inc
pop
in
jbe
das
es
pop
pop
outsl
cmp
bound
ror
add
lds
and
lock
mov
or
iret
mov
ljmp
inc
or
stos
test
pop
xchg
loop
insb
sarl
insl
test
adc
pop
inc
adc
mov
clc
inc
fisubrs
lods
lret
xchg
xchg
test
adc
hlt
jge
in
out
das
jns
or
icebp
xchg
orl
add
dec
sbb
in
push
cs
inc
test
xor
loop
and
loopne,pt
jno
jae
jnp
mov
mov
inc
mov
push
lahf
pop
lods
dec
daa
push
and
in
leave
xchg
mov
lret
ljmp
movsl
add
icebp
lods
cmpsb
inc
out
sbb
lea
sub
mov
das
js
adc
cmpsl
les
sbb
jp
jnp
fimuls
dec
push
mov
hlt
and
mov
gs
dec
out
fisubrs
push
je
jg
imul
int3
mov
mov
int
jecxz
mov
lock
dec
loopne
mov
pop
outsl
push
out
fisttpll
pop
popf
clc
out
inc
insb
imul
or
jmp
jno
or
dec
add
push
jecxz
addr16
shlb
xor
sti
enter
jnp
jno
daa
cmp
lcall
popa
ss
pop
jb
jle
push
and
scas
adc
lret
mov
mov
lock
or
adc
aaa
lcall
dec
xor
sti
fdivp
shll
pop
fmul
jbe
sahf
movsl
lcall
gs
test
mov
cmp
divb
and
push
addl
dec
rcll
xchg
push
dec
mov
filds
mov
adc
dec
sub
and
ljmp
enter
inc
and
pushf
dec
ss
push
jg
dec
aaa
xchg
cmpsb
cli
pusha
int
pop
xchg
add
sbb
out
stos
jne
pushf
mov
sbb
dec
or
inc
mov
rcr
mov
dec
xchg
pushf
mov
shrd
inc
aam
xchg
int
into
sbbb
inc
imul
inc
pop
into
sub
dec
roll
loopne
jmp
add
pop
add
std
ret
pop
iret
pop
cmpsb
mov
pop
pop
mov
addr16
jnp
movsb
mov
or
setne
and
xor
dec
xor
fnstenv
dec
jmp
scas
inc
movsl
pop
pop
fists
ljmp
int
sub
dec
movsl
insl
mov
icebp
dec
mov
outsb
xor
cli
test
rclb
cwtl
mov
pop
repnz
push
pop
movsl
mov
mov
add
pushf
cmpsb
mov
pop
push
loope
jae
movb
imul
in
push
dec
dec
mov
out
push
test
out
push
jle
sbb
adc
sub
jecxz
lods
addr16
pop
inc
mov
fcom
xchg
push
cld
pushf
and
xor
sub
xchg
mov
dec
dec
mov
xor
daa
dec
iret
rclb
mov
jl
jnp
xor
add
rcr
jecxz
mov
cmp
lcall
dec
dec
fisubrl
jns
mov
jae
je
mov
dec
jnp
lret
mov
loop
pusha
xchg
mov
jp
loopne
sub
and
inc
mov
jg
jmp
test
pop
fisubrl
jns
push
fwait
insb
insl
scas
jno
mov
inc
mov
std
sub
cmp
xor
and
inc
mov
pop
dec
pop
jns
test
or
aam
in
orb
loope
lods
sbb
in
mov
sbb
mov
dec
jbe
inc
sarl
lret
insl
jbe
test
sub
and
sub
inc
divl
sbb
inc
les
fisttps
gs
mov
push
mov
xor
fwait
push
dec
pushf
cmpsl
inc
pop
ja
iret
mov
mov
push
push
cli
ss
jmp
add
push
addr16
cmpsl
mov
cmpsl
popl
xchg
aas
xchg
shl
or
daa
arpl
sub
fadd
mov
pop
fld
cmpsb
cmp
les
mov
sub
mov
cmp
add
movsl
out
add
loop
sbb
mov
or
inc
movsb
pop
xchg
mov
sar
push
inc
sar
pop
lcall
bound
adc
in
setp
ret
inc
adc
cli
lcall
decb
or
jge
pop
addr16
hlt
std
and
xchg
mov
ret
pop
outsl
cmp
iret
pop
popf
and
mov
push
out
cmp
jg
out
jg
xchg
cmc
lods
push
xchg
sbb
push
fiadds
cs
jmp
pop
cmc
add
jecxz
mov
xor
add
movsb
adc
cmp
out
rcrl
movsb
outsl
pop
pop
out
adc
lahf
pushf
push
fmull
inc
or
push
cs
dec
push
push
sub
xlat
not
pminub
fcom
pop
inc
dec
test
cld
stc
push
jno
dec
sbb
xorl
xlat
imul
cmpsb
add
mov
jae
stos
push
fwait
iret
mov
iret
or
outsl
push
inc
pop
mov
stos
xor
adc
loop
cmp
push
push
js
stos
int
mov
mov
sbb
add
xor
popf
divw
sub
mov
outsl
cmp
xor
data16
or
mov
sahf
inc
mov
sar
mov
cmp
adc
and
addr16
insl
xchg
sbb
in
xchg
jne
icebp
sbb
pop
inc
jnp
iret
jle
sbb
and
and
repz
sbb
int
add
imul
loope
fcoml
jmp
stos
icebp
mov
mov
or
dec
xchg
test
or
and
loop
shl
ljmp
scas
data16
inc
aas
mov
inc
add
dec
lea
pop
jbe
clc
lahf
leave
out
cmp
popa
mov
rcl
cmp
in
add
mov
into
fisubs
cmp
outsb
bound
sbb
mov
sub
pop
cmp
bound
inc
xchg
sub
icebp
les
leave
jns
sbb
repz
mov
mov
hlt
mov
call
pop
repz
jl
out
xchg
add
retw
jg
cmp
cltd
mov
xor
test
jecxz
pop
leave
inc
inc
lds
mov
pushf
movsl
push
cvttps2pi
sub
sub
ds
js
sbb
mov
jg
mov
sahf
mov
shl
movb
lock
hlt
mov
and
xchg
sub
and
push
lods
test
out
sub
add
pop
call
mov
sub
jmp
call
cmp
mov
add
adc
imul
in
jnp
cltd
repz
icebp
xor
or
repnz
pop
mov
shrl
les
xchg
xor
into
lds
pop
cld
inc
pop
sahf
sbb
adc
jbe
mov
pop
pop
fcoms
push
and
andb
or
dec
inc
jecxz
mov
inc
out
xchg
jae
cmpl
std
sub
call
dec
push
and
fcompl
sbb
loopne
dec
mov
aaa
ret
or
and
das
jns
clc
xor
sub
lahf
or
push
shll
movb
pop
inc
push
testl
fldcw
xor
ret
sahf
xchg
mov
std
mov
xlat
loope
dec
pop
lea
jne
mov
rolb
lret
mov
push
cmc
subb
jbe
adc
pop
push
lds
adc
mov
pop
or
scas
dec
sbb
idiv
push
dec
aad
mov
pop
prefetchnta
xor
cmp
push
push
mov
inc
imul
mov
movsl
sub
fadds
adc
mov
outsl
mov
dec
mov
inc
inc
mov
mov
lcall
cltd
sahf
mov
adc
lret
dec
sbb
xlat
mov
jns
outsl
push
out
fstl
hlt
in
mov
xor
test
jp
test
adc
int
push
jbe
mov
arpl
lret
movb
xchg
jno
ds
pop
in
jecxz
roll
mov
xchg
mov
and
sub
pop
cltd
rcll
add
int3
outsl
xchg
and
inc
jmp
movsb
mov
ljmp
push
gs
pop
inc
shr
jge
pushf
cmp
xor
rcll
inc
mov
nop
cwtl
out
outsb
inc
push
xor
push
adc
orb
fildll
mov
hlt
gs
lret
lret
shll
imul
push
ljmp
sahf
or
push
push
stc
push
inc
mov
jge
cmp
mov
or
mov
xor
and
dec
into
shll
ds
sbb
sub
out
sbb
arpl
test
decl
popf
test
mov
jmp
pop
stos
sub
mov
lods
dec
cli
cwtl
mov
adc
mov
movsl
dec
test
test
mov
sub
stos
add
add
shr
lock
cmp
les
sahf
sbb
jbe
and
stos
jnp
adc
sub
adc
mov
sti
mov
std
clc
sub
in
test
push
add
scas
pushf
gs
pop
jmp
iret
out
sub
sbb
icebp
in
lret
dec
ss
orb
test
fsubrl
js
add
cld
mov
push
sbb
and
das
rcr
insl
sub
into
enter
mov
cmpsb
in
das
inc
mov
pop
xor
shl
dec
psllq
and
jns
dec
push
dec
sahf
cmp
movsb
and
inc
subb
loopne
insl
mov
jo
sbb
je
xor
out
loopne
jle
jnp
jne
or
push
lret
mov
jns
pusha
sbb
enter
and
jb
enter
cli
mov
dec
mov
push
adc
xchg
scas
add
or
push
adc
mov
and
sub
leave
xor
mov
pop
add
movsb
test
lods
push
fs
aad
cmp
and
adc
sarb
je
test
imul
mov
jmp
jnp
pop
sub
inc
int
or
pop
js
sarb
shll
push
ljmp
sbb
jae
pop
stc
rolb
sub
mov
xor
push
mov
dec
data16
daa
repnz
dec
inc
jmp
cmpl
sbbb
shl
xchg
mov
mov
mov
adc
hlt
ljmp
mov
mov
cmp
scas
sub
pop
ja
mov
mov
adc
in
hlt
sti
cmp
mov
jg
mov
sbb
push
fsubr
notb
inc
fsubl
das
fcoml
mov
scas
jnp
xchg
sub
mov
xchg
adc
jne
clc
call
pop
imul
shll
pop
fmul
jbe
insb
mov
mov
inc
enter
fwait
dec
lret
cmp
mov
repz
pop
sbb
loope
es
fwait
xor
data16
popa
inc
push
jnp
fabs
xchg
or
mov
rorl
ret
bound
pop
pop
or
and
mov
bound
mov
xchg
mov
and
mov
insb
hlt
mov
jge
ds
xor
inc
shr
out
xchg
and
and
mov
adc
or
jb
cmc
xor
ds
mov
scas
in
push
cmp
test
jb
aas
cmpsl
push
jns
pop
xlat
mov
ljmp
cmp
lods
sbb
out
mov
es
stos
adc
mov
sti
jl
lret
push
call
jb
inc
jg
xchg
lahf
inc
out
test
adc
outsl
sub
xor
jns
xor
pusha
fistpl
std
cmp
pop
pop
lcall
mov
sti
das
cld
cmp
jbe
push
loope
add
inc
arpl
loop
jbe
or
add
ret
loop
int
es
pop
ljmp
and
jmp
adc
cmpl
cmp
sub
pop
jge
ljmp
out
jne
sarl
inc
jp
mov
nop
xlat
dec
sbb
jg
cmp
aaa
mov
jecxz
pop
in
cltd
cmp
nop
mov
xor
push
jns
pop
xlat
mov
ljmp
cmp
fmull
cli
enter
xchg
inc
ss
cmp
and
aam
inc
and
std
shll
mov
negb
arpl
push
push
fstl
test
rcl
fdivp
jge
dec
inc
and
popf
mov
bound
sti
ljmp
nop
fldenv
mov
popa
hlt
push
ljmp
push
pusha
jg
ret
outsb
mov
rcrl
loope
and
ljmp
enter
sahf
xor
rcr
and
sbb
jns
sbb
sub
and
mov
test
sbb
add
ret
or
jmp
cmc
cwtl
stos
mov
test
decl
cmc
gs
or
aam
fs
and
push
testl
fldcw
xorl
aam
push
xor
pop
jmp
adc
in
cmp
mov
dec
lahf
cmpsb
stc
or
lret
mov
call
adc
jnp
push
lods
sub
scas
lcall
ds
lds
sahf
jno
stos
imul
dec
ss
xchg
pop
iret
outsb
sub
and
mov
rcrb
sub
xor
or
iret
lcall
push
ret
xchg
inc
sahf
sub
inc
fsubl
ljmp
in
jo
mov
pop
pop
lock
mov
xchg
pop
and
sbb
pusha
int
jecxz
jns
mov
icebp
add
ret
sub
push
test
lea
inc
aaa
sbb
sub
iret
pop
imul
fidivrl
cmp
lcall
pop
jg
movntq
andl
stos
sbb
mov
pop
or
push
dec
pop
mov
arpl
jb
and
push
jo
in
mov
jae
loope
push
mov
mov
aaa
lcall
ret
pop
mov
cmpl
inc
pop
test
add
push
jo
clc
xor
popf
inc
out
mov
adc
push
adc
add
jne
lret
std
rorl
leave
call
mov
stos
loopne
arpl
pop
sbb
pop
daa
or
nop
cld
pop
test
dec
sarb
movsl
fistpl
push
adc
xor
pusha
ret
mov
jp
inc
ds
int
xor
dec
xor
push
inc
lret
push
jb
int3
or
adc
sahf
mov
pushf
adc
add
adc
jo
stos
call
mov
pop
outsb
inc
or
mov
xchg
xchg
pop
jae
ds
push
icebp
mov
test
faddl
xchg
rorb
fimull
gs
mov
fcomip
sub
idivb
jmp
sbbl
sbb
push
popa
loop
dec
repnz
inc
add
or
icebp
mov
mov
iret
pop
int
notb
mov
cmpsl
hlt
push
push
adc
push
cmp
jle
push
out
jp
push
ljmp
mov
jbe
test
and
pop
outsl
jb
mov
inc
sbb
dec
enter
pop
mov
xchg
push
inc
sahf
addr16
loope
mov
mov
and
sbb
jl
dec
mov
lret
scas
jbe
sub
aas
aaa
cmp
inc
inc
sub
dec
cmpsb
hlt
fistpll
mov
idivb
jns
cltd
mov
mov
xor
cmpsb
shlb
pop
jns
stos
in
popf
sbb
add
mov
rorb
les
insb
mov
add
iret
dec
rorb
pop
jecxz
sahf
pop
iret
addr16
js
incl
lcall
test
hlt
cmp
jae
fucom
lds
jnp
and
jae
dec
movsb
int3
adc
das
push
push
adc
adc
xchg
push
and
mov
xor
cmp
mov
movsl
sub
lods
dec
sbb
hlt
imul
jno
pop
pop
cmp
lret
or
adc
jge
scas
jns
ds
xchg
aam
sahf
int3
iret
loope
mov
pop
outsb
pop
out
cmp
push
xor
daa
xchg
ret
pop
test
jl
xor
aad
push
ret
push
mov
xchg
movsb
adc
mov
loope
fldcw
or
xor
dec
fldenv
pop
mov
sti
test
xchg
insb
movsb
inc
or
add
cltd
xchg
or
cmpsb
insl
cmc
scas
push
pop
incb
pop
leave
mov
imul
adc
cmpsb
loopne
lock
push
imulb
push
xchg
ret
mov
lcall
es
mov
rcrb
icebp
repnz
xchg
hlt
dec
jmp
and
push
jp
testl
inc
push
inc
ds
push
pop
pop
mov
add
add
add
pop
add
jge
dec
adc
loope
or
mov
mov
mov
subb
jp
outsl
adc
shll
inc
fcompl
divb
adc
dec
test
mov
sbb
mov
mov
lds
mov
sarl
push
in
into
fstps
loop
lods
aaa
out
jno
jp
mov
push
adc
mov
xlat
ljmp
sub
pop
and
mov
mov
inc
dec
pop
js
hlt
jecxz
or
pop
sbb
int
mov
cmp
push
adc
test
adc
test
xor
leave
jae
pop
jge
cmp
movsl
add
shlb
insb
mov
dec
insl
out
jbe
call
push
into
add
cli
jne
in
inc
jbe
mov
movsl
lock
faddl
aad
cmp
mov
insl
je
mov
inc
mov
repz
mov
idivl
jns
and
nop
lcall
mov
cmp
inc
or
jecxz
repnz
testb
jmp
cmc
cwtl
stos
mov
test
decl
sub
movsl
or
adc
xor
lcall
add
jbe
insb
out
xorl
push
insb
ss
add
leave
fcom
ficoml
push
xlat
pop
addl
int3
xor
or
jo
addr16
sbb
lods
aad
cltd
icebp
and
xor
pop
arpl
cmp
xor
sti
fdivp
shll
pop
fmul
jbe
add
lret
cmp
cs
adc
mov
mov
xor
sub
push
push
in
jmp
f2xm1
pop
push
lock
pop
pop
sbb
jne
mov
lods
fstps
mov
insb
out
xor
scas
adc
lahf
mov
shl
sbb
psllq
xchg
jg
and
dec
flds
inc
roll
in
test
mov
aaa
mov
pop
inc
test
outsb
js
cmp
mov
xor
int
in
push
fisttpl
int
push
aaa
inc
rcll
pop
pop
sub
test
sbb
xchg
push
inc
push
and
add
mov
aaa
int
cmp
rcll
or
fisttps
sub
cs
and
cmpsb
fdivrl
imul
jno
test
or
leave
mov
xor
cmp
jmp
or
jbe
inc
das
outsb
sub
mov
and
lret
iret
lret
push
bound
pop
cltd
mov
sub
pop
xlat
es
filds
icebp
ds
and
lds
pop
xor
sbb
sbb
nop
mov
cltd
or
rorb
mov
insl
test
and
add
fdiv
out
out
mov
fs
call
test
movsl
add
sahf
call
jecxz
icebp
sub
dec
sbb
or
adcl
and
jo
adc
cs
lods
lret
test
push
and
jbe
out
ret
loop
fsubrl
push
lods
push
cld
les
pop
mov
imul
add
cmp
movsl
or
es
jb
fidivrl
pop
lcall
sbb
lods
rol
pop
imul
push
rolb
fdivp
shll
pop
fmul
jbe
mov
sbb
push
pop
fst
cmp
dec
bound
inc
cmpsl
inc
xchg
jns
mov
ffree
es
insl
imul
push
mov
loop
imul
fcomps
outsb
ret
dec
pop
and
mov
insb
sbb
pushf
or
enter
out
mov
pop
jmp
fs
mov
lods
cmp
xchg
test
sti
lcall
adc
sbb
sbb
jo
xor
inc
fwait
dec
pusha
jae
cmpsb
fidivl
cld
push
pop
in
jnp
fucom
and
daa
test
test
scas
xor
mov
leave
fmul
lahf
insb
inc
xlat
and
pop
lods
ljmp
ja
mov
pop
adc
xchg
cmp
sbb
aam
xchg
mov
pushf
mov
jl
into
xchg
stos
ret
push
inc
lahf
call
xchg
shlb
inc
enter
notb
dec
dec
aam
mov
adc
das
dec
insl
mov
push
mov
xor
scas
sti
or
or
xor
jne
test
mov
testl
or
cmp
adc
pop
loop
into
loope
mov
xchg
xchg
lods
les
mov
stos
and
notb
test
sbb
xor
mov
fcompl
dec
pusha
jae
mov
inc
push
mov
jmp
mov
push
ret
incb
addl
ficomps
mov
sub
xlat
out
add
dec
in
xlat
pop
scas
mov
aaa
int
cmp
push
fisubl
sub
xchg
bound
sbb
in
fistpll
mov
jge
ljmp
and
sub
fdivrs
jno
mov
in
fimuls
add
mov
mov
hlt
lcall
test
les
sbb
loop
popa
std
add
jns
or
adc
repz
stc
xchg
sbb
test
dec
or
and
test
data16
call
cmp
fiaddl
xchg
aam
sbb
gs
das
shlb
pop
pushf
lods
cmp
xlat
mov
inc
jb
fs
and
or
out
popa
xchg
jno
loopne
inc
fisubrs
ja
rorb
fcoms
and
rcr
sti
xor
les
movsb
das
aas
iret
in
or
je
das
add
fidivrl
mov
cmp
inc
arpl
jnp
call
dec
shll
dec
cs
sahf
outsl
stc
fldenv
mov
xchg
mov
cmp
push
add
out
fdivrs
cmp
xor
push
adc
mov
dec
lret
xchg
dec
inc
jnp
addr16
ret
fs
in
jmp
inc
fs
inc
lods
sbb
xchg
in
pusha
clc
vcvtps2pd
das
pop
or
nop
cld
pop
xchg
fnstsw
pusha
dec
sarb
movsl
fistpl
adc
jg
test
shll
divb
xchg
in
ja
sbb
xchg
xor
dec
xor
sbb
xchg
loope
lahf
pop
jp
sub
mov
inc
sub
arpl
add
idivb
mov
pop
push
in
insb
xor
mov
pop
outsb
add
scas
mov
jns
or
shl
mov
sub
jmp
push
pop
and
pop
in
clc
aaa
jae
lds
icebp
cmpsb
inc
dec
test
sbb
sub
push
lahf
in
pop
out
adc
fs
scas
ret
push
pusha
mov
ficoml
aaa
inc
outsb
mov
mov
adc
mov
aad
fs
sub
in
cmpsb
jge
push
and
fsub
xchg
call
lcall
xchg
mov
dec
cltd
sub
and
ljmp
enter
pop
sbb
dec
push
xchg
sahf
ljmp
sbb
dec
push
data16
insb
adc
ljmp
je
and
push
outsb
mov
outsb
pusha
jae
xor
fcmovnb
out
mov
jns
out
xor
pop
nop
inc
idiv
adc
scas
pop
ret
mov
iret
cltd
dec
pop
jg
inc
mov
inc
mov
pop
pop
jno
or
and
pop
or
jnp
push
adc
std
lahf
sub
and
jp
popa
xor
dec
mov
in
add
jmp
adc
push
cwtl
arpl
pinsrw
jb
jge
iret
fidivrs
loopne
lcall
sbb
adc
sahf
push
adc
das
sbb
xchg
mov
push
jle
jg
test
test
lret
scas
negb
ds
adc
dec
or
fnstsw
pusha
push
rcrb
xchg
inc
nop
sbb
push
int3
or
divb
pop
and
addr16
popl
shr
adc
mov
leave
cmp
arpl
int3
mov
test
loop
fadds
mov
push
mov
daa
inc
imulb
fildl
mov
push
int3
sbb
xchg
mov
ficomps
xor
dec
or
imul
lret
das
push
pop
pop
jno
in
jns
inc
add
or
mov
cmp
xchg
cmp
push
cmpl
rcl
js
xor
sti
aas
jmp
mov
in
add
les
xchg
mov
cmp
xor
mov
sub
mov
hlt
cmp
fsubrl
cld
movsl
add
adc
xchg
lmsw
cmp
xor
and
xchg
adc
data16
in
mov
xor
insl
mov
xor
inc
cs
clc
mov
push
xor
or
mov
xchg
jl
cmp
ficompl
pop
loope
add
std
mov
out
leave
sbb
inc
xorl
jge
testl
out
mov
movl
movsl
mov
shll
sub
in
add
mov
jge
adc
pop
mov
or
jno
out
mov
adc
cmp
jae
nop
mov
xchg
sahf
out
push
cmp
adcl
mov
inc
xchg
jge
les
enter
xorb
pop
fcomip
adc
movsb
inc
add
push
sbb
jl
adc
xor
adc
cld
imul
pop
in
adcl
in
pop
pop
scas
lods
inc
xchg
and
mov
and
icebp
pushf
pop
push
dec
je
fimull
jbe
std
shrl
jp
es
adc
std
xchg
outsb
test
mov
sbb
ret
loop
clc
ds
gs
inc
add
movsl
xor
movsb
lds
addr16
xchg
xor
insl
aam
not
iret
mov
jbe
orb
cmp
mov
mov
in
fidivl
ss
mov
cmp
xlat
ljmp
add
inc
xchg
mov
ss
ljmp
xor
aad
std
sbb
jle
and
cmp
pop
cwtl
flds
cmpsb
inc
dec
lahf
ficomps
sub
sbb
out
push
hlt
les
lds
pop
xchg
fistpl
ret
cld
mov
outsb
inc
repnz
mov
push
cltd
pusha
in
add
pop
xlat
aam
loopne
adc
jbe
cmp
inc
push
xor
jg
ret
outsb
mov
rcrl
jecxz
stc
leave
fdivrl
mov
stos
mov
pop
and
shlb
and
repnz
mov
je
ljmp
lret
jle
pusha
xchg
imul
repz
icebp
adc
sahf
pusha
xchg
adc
hlt
mov
lods
dec
xchg
ja
fucom
adc
or
cmpsl
rclb
stos
mov
hlt
test
inc
hlt
xlat
testb
imul
jnp
adcb
test
cltd
pop
jecxz
jno
es
mov
les
push
arpl
mov
movl
xor
cmp
rcr
mov
lret
imul
pop
push
cmp
notb
dec
jae
lods
cmp
inc
dec
dec
popa
add
int3
mov
stc
sbb
adc
adc
mov
lods
pop
inc
pusha
adc
shl
cs
movb
repnz
or
ret
push
nop
pop
shlb
dec
pop
lods
adc
xchg
andb
test
sub
push
out
in
jle
addr16
jle
jecxz
cmpsl
out
and
inc
cmpsl
out
in
mov
mov
andl
ror
ffreep
test
ret
into
aas
pop
or
pop
push
dec
in
mov
popf
jmp
sub
cmpsl
mov
dec
mov
pop
out
scas
jmp
jb
pushf
jnp
call
inc
add
adc
add
leave
mov
movl
repz
jb
mov
and
in
add
stc
lret
test
les
mov
cmp
dec
out
push
pop
imul
jb
sarb
push
es
sub
bound
or
inc
lret
popl
fimull
dec
iret
xchg
movsl
orb
push
push
mov
or
arpl
es
iret
jns
dec
icebp
jbe
sti
fnstsw
xchg
std
add
xor
adc
dec
push
ja
add
dec
nop
push
data16
jle
js
dec
dec
mov
js
add
js
pop
push
in
push
idiv
cld
mov
stos
stc
inc
repnz
inc
or
mov
sbb
out
add
fsubrp
cmp
xchg
or
mov
aaa
aad
pusha
pop
pop
orl
inc
lret
imull
xchg
mov
mov
xor
jns
inc
loope
in
add
cwtl
in
repz
enter
push
adc
mov
dec
sub
decl
adc
imul
pop
sahf
sbb
xchg
fiadds
and
pop
pop
mov
cmpsl
xchg
push
push
mov
inc
cmp
mov
or
or
repz
push
add
out
cltd
pusha
sub
mov
out
dec
sub
mov
mov
dec
push
leave
dec
out
shlb
jecxz
push
jno
lret
ja
adc
adc
test
rclb
test
pop
pop
mov
aam
fsubr
push
nop
cmpsb
stc
icebp
add
cltd
and
popa
lods
mov
and
outsl
push
inc
shrb
mov
cmp
dec
neg
nop
addr16
fldenv
xchg
xlat
imul
push
or
adcl
lods
mov
nop
sarl
fnstenv
lea
jo
pushf
test
movsl
cmp
lcall
int
cli
and
fiaddl
call
xor
push
mov
pop
xor
pop
push
pop
leave
pushf
mov
std
xchg
lahf
inc
movntq
clc
sbb
fisttpll
and
iret
loop
and
stos
popa
mov
push
notb
test
aaa
sbb
inc
lods
ret
scas
xor
test
mov
fwait
and
pop
push
pop
fs
pushf
leave
call
shl
js
lret
adc
mov
shlb
pop
sub
fsubrs
jge
push
fdivs
inc
adc
adc
push
add
push
sub
es
add
add
das
or
mov
xchg
ljmp
shll
aas
jb
out
dec
push
push
or
dec
inc
cltd
pop
int
out
adc
into
in
outsl
rcrl
sbb
lea
jo
pushf
mov
stos
popa
add
hlt
inc
int
retw
jne
jb
mov
sub
and
inc
cmp
xchg
sbb
pop
inc
mov
inc
call
sbb
pushf
outsl
inc
call
add
jb
insb
push
sarl
xchg
fldlg2
shl
jns
incb
scas
int
xchg
jae
out
mov
mov
add
ja
lea
ror
xor
sahf
mov
mov
leave
pop
adcb
sbb
popa
je
mov
mov
xchg
push
loopne
cli
lods
nop
iret
push
add
punpckldq
mov
sub
sar
ds
push
fsubr
imulb
nop
cmpsb
stc
sbb
push
adc
shlb
insl
aad
sub
xchg
jl
stos
in
mov
jae
pop
and
int3
xor
stc
aas
jb
xor
into
hlt
testl
cwtl
stos
sub
adc
into
in
icebp
rcrl
sbb
push
xor
cmp
test
out
mov
dec
mov
add
or
jl
adc
into
leave
addr16
sahf
movsb
sub
cmp
fcompl
jbe
insb
sub
inc
sub
lods
dec
fsubs
mov
enter
pop
shlb
pop
test
xchg
fbstp
out
flds
pop
sub
xor
xor
popf
adc
sbb
jae
int3
push
dec
pop
adc
roll
sub
mov
dec
scas
mov
dec
dec
daa
inc
adc
or
dec
nopl
push
pop
lea
iret
sub
lahf
mov
xchg
scas
mov
or
stos
cmpsl
xor
icebp
sub
jmp
enter
xchg
in
jns
xor
or
sahf
jmp
in
fadd
or
jb
cmp
shrb
xor
cmp
jb
cmp
pop
es
ljmp
nop
loope
outsb
cltd
ret
test
repz
cwtl
dec
mov
imul
and
inc
imul
mov
pop
movsl
sub
mov
lret
ret
outsb
fsubr
insl
jo
rcrl
inc
cmp
std
inc
gs
rorb
loopne
hlt
mov
fwait
insb
push
shrl
and
adc
pop
mov
cltd
pusha
call
addr16
jg
xchg
pusha
loope
inc
adc
mov
xor
insl
jmp
dec
pop
jl
es
adc
inc
mov
lret
ja
fcos
xchg
and
aam
mov
movsb
dec
clc
js
xchg
mov
rcl
hlt
jno
std
rcll
dec
loopne
mov
push
xchg
sbb
mov
and
out
inc
or
imul
mov
xchg
sub
xchg
jo
mov
sbb
lcall
scas
mov
data16
loopne
add
pop
cli
int
int
data16
adc
inc
pusha
adc
in
addps
clc
inc
out
mov
negl
stc
sahf
pop
ret
xor
mov
out
jmp
push
and
mov
mov
push
sbb
in
iret
out
and
pushf
dec
icebp
out
bound
push
loop
pop
push
inc
or
xor
dec
sbb
cld
pop
out
mov
jge
ret
out
imul
push
orb
pop
cwtl
cmpsl
xchg
lret
daa
pop
jmp
add
sbb
jge
mov
push
div
add
ud2
cltd
mov
daa
and
pop
pusha
jae
or
loope
clc
jp
nop
mov
xchg
movsl
test
adc
test
test
lahf
rcl
push
inc
inc
push
inc
xorl
movsl
jge
enter
xor
inc
iret
fdivrp
mov
out
adc
gs
add
ss
cs
jl
sub
add
inc
fstl
pop
sub
aaa
clc
test
mov
cmp
shl
call
daa
ljmp
jg
adc
sub
add
xchg
pushf
scas
xor
pop
xor
mov
mov
xlat
mov
jns
outsl
push
out
fstl
hlt
fdivrp
pop
push
push
rcr
dec
clc
adc
adc
and
inc
inc
fimuls
xchg
aas
in
cld
pop
xor
call
cmp
mov
mov
je
sbbb
sub
lahf
fildll
xchg
or
cmpsb
insl
cmc
scas
push
fldt
in
jae
push
cmp
cmp
add
lods
cld
xchg
sbb
fildl
xchg
cltd
xor
call
gs
pop
fmul
jbe
add
mov
gs
sub
leave
xchg
xor
xchg
lcall
dec
arpl
dec
js
jl
add
pop
pop
in
dec
mov
fdivrp
jae
inc
scas
mov
add
mov
push
inc
nop
das
sahf
cmp
fcmovnb
imul
repnz
jg
dec
pop
mov
lcall
xor
lcall
inc
push
pusha
dec
sub
cli
or
and
sti
mov
test
adc
jecxz
stc
adc
and
lods
leave
stc
inc
cvtdq2ps
add
jbe
insb
out
xorl
push
jb
mov
sub
insl
cmp
xchg
mov
mov
insl
inc
int
cmp
aad
mov
loope
or
mov
insb
mov
std
shll
push
sub
icebp
shll
pop
fmul
jbe
notl
enter
ss
pop
mov
mov
xor
sub
js
push
dec
pop
push
adc
out
into
cmp
scas
and
inc
xchg
sbb
sub
icebp
sbb
sti
iret
mov
jmp
xor
inc
repnz
lret
xor
sub
loope
mov
push
loope
push
sbb
psllq
xchg
jg
xor
out
sbb
push
in
mov
out
fildll
or
pop
mov
les
adc
inc
add
mov
pop
push
stos
dec
cmc
mov
mov
and
jbe
rcr
or
adc
dec
sub
addr16
pop
jns
adc
stc
add
leave
fdivs
inc
in
dec
pop
daa
dec
aaa
testl
xor
add
pop
lcall
js
adc
dec
sti
in
shlb
std
call
jg
enter
repz
shll
pop
fmul
jbe
jo
insl
jp
rorl
pop
insl
shll
fisttpll
fisttps
pop
arpl
or
cmpsb
lds
cmp
xchg
xor
cmp
sub
test
jae
lret
scas
add
scas
pop
mov
xchg
out
lock
xchg
add
xchg
imul
fbld
ds
shrb
mov
pop
xchg
pop
cmp
sub
nop
in
sbb
xor
dec
je
int
mov
ret
fwait
mov
jae
dec
xchg
into
xchg
mov
or
push
pop
pop
xor
xor
sub
adc
mov
lock
stos
in
pop
push
das
jno
or
and
ljmp
xlat
pop
mov
push
int
je
or
xchg
dec
mov
mov
adc
or
add
mov
loopne
frstor
add
jg
lcall
negl
xchg
or
jns
pop
fcomip
xchg
sbb
sub
push
adc
in
push
js
jle
mov
out
mov
inc
inc
mov
rcr
ret
not
bound
dec
pop
nop
jo
cmp
hlt
xchg
sub
mov
orb
fiaddl
mov
fdivs
aas
push
cwtl
out
popf
pushf
incb
pop
pop
cs
rolb
push
mov
mov
mov
lret
add
loop
mov
subl
pop
cli
sub
ficomps
lods
into
mov
rcr
and
xor
pop
jno
lods
cli
jecxz
adc
pop
mov
mov
dec
scas
jnp
jle
outsb
push
lock
ds
test
mov
imul
pop
push
inc
jge
in
fwait
adc
enter
in
repz
icebp
jmp
fwait
push
mov
and
loopne
sbb
adc
aaa
iret
stos
xchg
xor
fcmovb
pop
ja
xchg
mov
adc
outsl
popa
jbe
cmp
ret
pop
jnp
mov
push
jl
pushf
repz
aaa
test
idivl
cmc
cmpsb
mov
lret
stos
adc
hlt
inc
rcrb
cltd
lods
or
dec
rclb
dec
xor
sahf
mov
imul
imul
mov
aaa
inc
rclb
cmpsb
loopne
jb
movsb
mov
movlps
mov
cmpsb
dec
ret
sbb
fcomip
xlat
ja
test
ret
icebp
add
aaa
jbe
rcrl
sub
and
fs
mov
push
mov
out
or
push
pop
jp
jb
push
sub
xchg
add
repnz
jecxz
xor
inc
enter
push
mov
lcall
bound
outsb
mov
into
cmp
push
test
es
sahf
xor
adc
xor
lds
cmpsb
in
sbb
shlb
cmp
mov
ss
aam
push
jbe
xlat
rcrl
cmp
or
iret
sbb
xchg
or
cmpsl
mov
add
sub
sbb
out
into
push
cmovbe
popf
test
fists
js
adc
filds
enter
xchg
cmp
push
test
sti
stos
inc
popa
xor
es
sub
xchg
sbb
outsl
iret
out
add
mov
repnz
inc
movsb
inc
call
mov
xchg
mov
sarl
loopne
add
pop
sahf
andl
xchg
push
cwtl
stos
sub
jae
cmpb
sbb
push
adc
sub
xchg
stos
or
push
sub
shl
xor
add
or
in
pop
sahf
sbb
int
into
mov
and
scas
jmp
je
jnp
into
das
push
or
out
push
cmp
addl
sub
imul
cmp
cmp
test
jno
outsb
dec
add
xchg
mov
cld
outsl
call
shl
scas
scas
inc
add
push
cmp
sbb
mov
jnp
dec
imul
add
stc
mov
nop
in
xor
jl
loope
test
aaa
sbb
stos
xchg
push
sub
cmpsl
nop
jns
mov
subb
or
xlat
and
or
icebp
mov
fdivrp
fadds
idivl
jae
mov
inc
sahf
cld
mov
imul
cmp
mov
test
stc
pop
pop
xchg
mov
inc
pop
inc
cmpsb
cld
pop
sbb
mov
push
inc
popf
mov
sbb
xor
jle
and
bound
jge
xchg
sub
insb
inc
enter
xchg
icebp
mov
or
out
insb
mov
lahf
cmp
mov
xor
or
mov
addl
test
orb
test
dec
pop
fcompl
pop
pop
mov
aas
cmp
subl
ljmp
jl
fs
imul
xbegin
stc
mov
nop
in
hlt
xchg
cmp
mov
mov
push
cltd
ffree
pop
pop
jno
add
je
pop
loopne
inc
outsl
loop
add
inc
push
jno
popf
out
scas
and
add
sahf
cmpsb
stos
out
and
add
sbb
lcall
lahf
rcr
pop
sahf
orl
mov
mov
xchg
xchg
xchg
mov
dec
sbb
dec
nop
adc
movsl
and
in
shll
inc
outsl
mov
lcall
imull
xchg
out
xor
add
xor
or
rcrl
mov
cld
rolb
pusha
mov
mov
out
pop
hlt
cltd
push
push
rorl
cld
and
add
xchg
or
mov
push
lcall
xchg
repz
ja
sbbb
jecxz
rcl
push
cmp
mov
pop
lret
or
fsubs
dec
dec
sub
add
pop
mov
stos
cmp
or
inc
cmpsl
cmp
orl
jmp
add
sub
dec
lods
xchg
lcall
pop
std
adc
iret
stos
adc
pop
popa
pop
jp
xchg
nop
mov
jle
ja
ds
enter
arpl
cmpb
inc
jns
rcr
cmp
cmc
fdivrl
sbb
aaa
add
lret
out
shlb
pop
add
gs
aam
mov
aam
lret
shll
imul
push
ljmp
push
pop
hlt
lahf
jp
cld
pop
pop
in
adc
jb
test
xchg
inc
sbb
es
xchg
ljmp
push
sbb
psllq
xchg
test
push
push
jp
mov
mov
daa
sbb
add
fdivl
out
fstl
hlt
ljmp
mov
das
cmp
push
dec
inc
jle
outsb
call
lea
push
pop
in
loope
sub
adc
pop
test
dec
fstpt
fwait
test
mov
xlat
jo,pn
mov
out
and
jmp
mov
aas
outsl
xchg
and
and
je
sub
mov
gs
iret
cltd
call
or
in
shll
add
iret
out
call
jno
icebp
std
cmp
movsl
fildll
dec
xor
sub
orb
int
sub
inc
fdivr
stos
sub
push
and
arpl
arpl
aaa
movl
or
out
imul
ja
iret
frstor
jmp
adc
jo
mov
cli
add
jge
aaa
add
xchg
and
sbbl
leave
nop
lcall
sahf
cmc
loop
jmp
mov
inc
in
dec
push
jmp
inc
adc
or
jnp
add
ret
loop
fsubrl
sub
sub
add
lods
mov
cmp
das
fisttps
in
fildll
cmpsl
lcall
arpl
cmp
mov
ja
jo
inc
std
sbb
ds
add
popf
mov
push
or
dec
mov
sbbl
lds
adcb
mov
mov
fwait
shlb
adc
popa
sbb
adc
mov
push
sbb
lahf
adc
shll
imul
push
ljmp
out
in
adc
scas
xchg
mov
test
sbb
dec
enter
pop
loopne
mov
push
xchg
sbb
into
clc
ds
jns
add
negb
out
in
mov
icebp
pusha
or
pop
aaa
imulb
sbb
in
movsl
xor
cwtl
sub
cmp
loopne
mov
and
jmp
ds
mov
popa
push
adc
push
adc
out
push
sbb
or
lahf
push
lods
sbb
mov
subl
add
in
call
insb
lods
cli
sahf
jle
push
mov
adc
adc
shr
pop
sahf
adcl
movsl
lds
jne
scas
shll
jno
push
ja
inc
sbb
pop
ja
imul
fst
push
push
lods
xchg
sub
into
inc
pop
stc
stos
addr16
sub
mov
cmp
push
popa
sti
jo
movzbl
aaa
inc
adc
push
rcrb
shll
sub
push
dec
or
nop
jbe
daa
and
mov
insl
xchg
push
xlat
cmp
or
push
out
push
or
push
test
sbb
sbb
les
or
bound
inc
mov
test
cmc
pop
jne
rclb
sbb
mov
mov
mov
inc
xlat
rcrb
inc
mov
xor
sti
int
fisubs
sahf
loopne
addr16
jne
test
cmpsl
xchg
add
movsl
jge
mov
loope
xchg
mov
cmc
faddl
add
mov
mov
mov
movsl
sahf
outsb
ja
fdivp
xor
inc
rcll
and
cwtl
push
mov
cmp
sbb
outsb
into
cld
test
xchg
movsl
fimuls
jl
sub
dec
aam
inc
shll
xor
xlat
mov
nop
mov
fxch
jmp
lds
xor
sahf
mov
mov
adc
mov
or
mov
sbb
arpl
pop
icebp
add
cmpsb
adc
push
out
rcrl
dec
std
sbb
lea
mov
mov
lock
inc
notb
fsubrp
dec
dec
pop
sti
stos
in
std
lcall
and
ljmp
pusha
scas
pop
pusha
or
jns
sbb
adc
cmp
cmpsb
addl
sbb
inc
mov
xchg
stos
or
mov
dec
push
arpl
lods
test
xchg
pop
js
xchg
jo
pop
jbe
mov
jge
enter
mov
sub
call
inc
pop
into
push
add
lret
out
aaa
push
pop
jo
pop
shl
or
inc
dec
dec
push
push
cmpsb
push
and
xor
xchg
repnz
inc
sahf
inc
sub
xor
js
push
add
pop
mov
jns
jb
jecxz
mov
int
push
stc
jne
testl
ja
or
jmp
and
out
fstps
daa
divb
jge
rcrl
int3
xor
pop
out
and
ret
cmp
inc
pop
lods
dec
cli
xchg
cmp
mov
daa
icebp
andb
sub
mov
adc
sbb
ficoml
jno
mov
fcomp
in
cmp
inc
addl
enter
or
push
push
rcr
mov
push
arpl
js
add
fistpl
jl
inc
mov
xchg
divl
jmp
xor
mov
sbb
cs
adc
lret
xchg
lock
jo
insl
jnp
clc
movsl
jne
cwtl
fcoms
mov
xchg
lea
cs
add
pop
push
xorl
xchg
adc
rcr
pop
fists
sahf
sub
mov
les
xchg
jmp
and
insb
call
arpl
mov
xor
mov
xchg
mov
mov
jbe
sub
xchg
sub
daa
mov
cmp
push
jns
add
test
into
outsb
enter
or
xchg
inc
dec
loope
xor
icebp
insb
mov
push
das
stos
cmpsl
inc
mov
push
or
jne
or
inc
call
ljmp
xor
push
stc
jmp
shlb
inc
pop
outsb
adc
add
mov
cmp
sbb
les
xor
sub
sarl
sahf
pop
fdivr
movsl
sti
push
pop
dec
gs
sbb
movsb
lahf
loop
mov
xor
xchg
je
xor
ljmp
mov
outsl
jb
adc
out
jns
mov
mov
mov
mov
aam
popa
fnstsw
add
sbb
adc
jae
nop
sbb
call
test
jecxz
outsl
and
addl
inc
inc
fsub
cmp
pusha
jae
arpl
add
push
nop
push
and
mov
or
xor
insb
adc
test
adc
subb
in
cmp
and
popf
sbb
or
pop
cmp
xchg
dec
sbb
mov
xor
mov
dec
popa
dec
or
aad
xchg
and
inc
mov
push
push
fstl
jmp
in
or
sbb
out
fisubl
repnz
jno
shl
sbb
push
or
jmp
jnp
popa
mov
addr16
mov
xchg
gs
das
mov
aam
sub
pop
in
scas
dec
outsl
test
shrl
sbb
jl
sahf
stc
pushf
lahf
mov
ret
and
shrb
arpl
aam
mov
shlb
repnz
dec
mov
mov
nop
push
jne
fstps
and
jnp
and
xchg
insb
and
insl
ds
sahf
cli
mov
jl
inc
pop
imul
lret
xchg
push
push
mov
addl
and
cs
sub
cmpsl
lret
or
inc
mov
lock
in
and
push
cs
cltd
sbb
imul
mov
fcoml
scas
adc
std
jbe
ret
mov
mov
mov
in
add
push
cwtl
arpl
xor
and
and
mov
fdiv
sar
mov
pop
popa
add
cwtl
fistps
add
loopne
ds
push
and
scas
xor
daa
ret
test
mov
scas
xchg
mov
or
idiv
fsubrl
fcomps
jp
mov
and
sbb
es
scas
dec
dec
callw
aaa
cmpsb
mov
sti
dec
lahf
push
xchg
rcrl
fwait
add
sbb
or
xchg
xchg
cwtl
mov
xor
jae
data16
push
ret
lret
jmp
xchg
fstps
loop
in
add
fisubl
sbb
or
xchg
xor
gs
dec
aad
stos
mov
cmpl
rol
inc
or
cmp
inc
dec
lcall
cmp
and
mov
jb
out
add
pop
loopne
sub
xchg
mov
cmp
add
adc
cmp
leave
adc
cmp
fisubrs
jbe
loope
std
push
ficomps
push
inc
push
adc
jbe
xor
pop
insl
sub
icebp
or
lock
aad
lahf
mov
shll
or
mov
icebp
icebp
mov
rcrl
xor
inc
sub
mov
bound
mov
mov
faddl
shll
sbb
addr16
insl
imul
sbb
sbb
stos
data16
push
ret
lret
iret
mov
adc
or
mov
mov
push
mov
push
in
push
push
adc
loop
pop
jb
rorl
mov
jbe
sub
stos
in
push
das
nop
push
mov
mov
lock
inc
adc
iret
fmuls
jg
adc
jns
leave
sbb
mov
cmc
faddl
sub
mov
out
test
xor
mov
cli
sbb
fnop
sbb
ret
xchg
push
into
fldcw
or
pop
inc
loope
fstl
arpl
dec
pop
fwait
lods
inc
or
push
popa
jge
test
mov
sti
pop
add
out
out
repz
mov
pminub
add
rolb
xor
movsl
rcrl
add
inc
rcrl
jle
stc
movl
cmp
inc
sbb
ja
pop
or
sbb
insb
mov
adc
or
jnp
fld
out
in
and
rcll
fisubrl
leave
pop
std
aad
daa
popf
lock
mov
testb
mov
sub
cmp
or
xor
stos
mov
cmpsb
cmpsl
push
push
push
lods
sbb
add
aad
push
jbe
lret
push
das
xor
inc
dec
mov
insb
inc
repnz
dec
movsl
push
sbb
sub
aas
xchg
pusha
jbe
xchg
dec
sets
mov
js
je
pop
mov
out
ret
jno
fwait
mov
sahf
inc
stc
adc
mov
pusha
arpl
data16
andb
mov
jmp
lcall
jns
inc
or
ss
add
sub
insl
pop
xchg
or
out
cmc
jo
stc
mov
frstor
or
sub
bound
popa
cli
imul
arpl
test
jno
cli
dec
scas
loopne
sub
and
je
fildll
add
adc
xor
xor
push
sbb
push
movsb
mov
cmpl
jbe
cwtl
aam
xchg
mov
sti
mov
enter
mov
jae
out
and
loope
cli
add
pusha
fistpl
loopne
outsl
mulb
mov
mov
roll
push
mov
push
in
sahf
xor
ds
repnz
sbb
std
cmp
leave
adc
sbbb
repz
mov
lret
ret
xchg
in
mov
add
shll
xor
or
fldlg2
insl
lcall
pop
push
leave
jl
test
sahf
xor
jae
pop
rolb
inc
cmpsl
scas
leave
aaa
ds
mov
jg
jns
in
ds
add
call
cmp
sub
stc
dec
fsubrs
dec
mov
repnz
lret
and
cmc
insl
mov
push
es
testl
jge
mov
js
and
push
jp
mov
xchg
mov
mov
les
int3
fldenv
add
rcll
mov
jae
lea
jo
fldcw
dec
xchg
hlt
dec
mov
and
push
cmp
mov
sbb
imul
cld
fmull
insl
pusha
enter
aaa
fiaddl
shl
stc
es
push
jnp
lahf
cmp
or
insb
pushl
mov
into
outsl
into
icebp
shlb
mov
cmpsb
ds
out
dec
jnp
aad
imul
mov
xchg
cmpsl
mov
dec
pop
mov
pop
stc
movsb
mov
and
jae
cli
scas
inc
inc
add
cmp
out
stos
fldl
xor
pusha
loope
fstl
leave
pop
pop
sub
or
insl
adcb
nopl
adc
jg
lret
pushf
scas
inc
cmp
add
jge
mov
inc
rcl
fdivrl
inc
push
mov
mov
shl
enter
mov
xorl
or
leave
jbe
pop
imul
mov
pop
mov
cmpsl
sbb
inc
sub
pop
mov
mov
mov
scas
xchg
mov
cmp
jns
rorb
js
sbb
repz
outsl
mov
lods
mov
or
sub
sbbl
sub
sbb
push
push
insl
inc
or
jecxz
sbb
dec
xchg
ret
xlat
inc
dec
xchg
xlat
adc
pushf
sub
test
sub
lods
dec
xchg
icebp
mov
push
xlat
adcb
in
rclb
jno
mov
inc
mov
mov
dec
gs
cs
rcrl
adc
sbbl
adc
xchg
push
inc
std
and
scas
inc
mov
mov
fstpt
cmpsl
xchg
adc
dec
repnz
sbb
add
jmp
push
adc
cmp
js
loop
dec
jnp
cmp
out
std
cmp
ret
xlat
mov
iret
mov
hlt
nop
add
inc
js
fbld
rorb
sub
rcr
mov
mov
mov
add
nop
inc
pop
in
out
xchg
das
js
adc
mov
fucom
lds
or
sbb
and
jns
pop
enter
xchg
xchg
sarl
call
mov
sbb
and
test
pop
popa
rcll
pop
add
xlat
mov
jg
subb
stos
dec
clc
in
mov
push
inc
ret
adc
mov
add
cmp
rcr
jnp
popl
sub
imul
sub
adc
mov
cmp
cmp
fistpll
call
cmp
mov
jb
pop
push
imull
negl
das
lock
cmp
adc
and
or
dec
popa
mov
add
push
daa
push
xor
cmp
daa
inc
adc
divl
pusha
enter
aaa
fiaddl
shl
stc
es
push
push
lahf
cmp
or
in
pushl
mov
into
outsl
into
icebp
shlb
mov
cmpsb
ds
out
dec
jnp
aad
imul
dec
mov
insl
sub
jmp
and
jl
stos
xorl
and
test
push
sbb
push
xchg
out
push
mov
xchg
sbb
lock
xor
test
hlt
fs
or
adc
xchg
add
aam
cmp
cmp
cmp
shlb
into
cmpsl
cmpsb
xchg
dec
out
lahf
mov
shl
jmp
test
enter
ds
cwtl
fimuls
std
mov
mov
jg
dec
jbe
cli
or
sub
dec
push
inc
push
adc
push
xchg
jno
jg
cmp
or
shlb
shl
stc
insl
and
push
andl
xchg
fucom
dec
cmp
push
subl
out
or
xor
out
jns
inc
push
stc
out
and
inc
pusha
pop
dec
aam
and
js
cmp
or
pushf
lret
push
lret
xchg
test
mov
mov
add
daa
fnstcw
push
add
out
out
and
push
test
add
jnp
aas
loope
cld
imulb
rcl
stc
mov
jb
mov
mov
adc
mov
dec
arpl
sub
xor
iret
pop
cmpsl
aam
frstor
push
jne
pop
subl
rcrb
fidivrl
divl
loop
repnz
adc
jbe
xor
jle
mov
imul
xchg
fucom
push
push
imul
mov
xchg
and
addr16
xor
adc
xor
ljmp
or
or
shr
retw
aas
scas
push
std
dec
pop
lock
std
imul
mov
inc
inc
xchg
pop
push
leave
jne
ss
cmpsl
or
xlat
in
dec
cmpsb
lea
mov
js
mov
call
cli
imul
inc
in
in
daa
jcxz
scas
ds
popf
jmp
sub
cmp
jg
inc
and
cs
negb
subl
test
add
dec
push
cli
mov
lods
cmp
addr16
mov
fs
imul
test
sbbb
add
cld
pop
into
dec
sub
test
fcmovnu
cli
sbb
cmp
or
push
push
lods
push
sub
into
cmp
fidivrs
jp
ds
negl
mov
in
fnsave
mov
stc
inc
xchg
fisttps
jmp
int3
mov
xchg
xchg
arpl
andl
jle
cmpsl
jb
call
inc
ljmp
imul
xor
or
cmc
xor
fdiv
fsubs
mov
mov
xchg
cltd
andl
dec
cmp
stos
sub
xchg
or
cli
scas
rclb
out
pop
std
call
sub
aas
cwtl
sub
dec
or
rep
das
sbb
xchg
lods
sub
bound
mov
adc
loopne
push
clc
mov
aam
outsl
push
gs
ds
mov
mov
mov
push
cwtl
in
xor
loop
dec
jnp
cmp
out
jge
dec
mov
push
sub
mov
imul
insl
jns
pushf
sub
test
mov
das
jl
mov
lret
or
shrb
xchg
pop
out
or
jb
jecxz
adc
jns
mov
or
out
jl
or
xchg
fldlg2
lods
push
aaa
cmp
dec
mov
les
pop
int
std
leave
push
xor
mov
xchg
and
mov
fnstsw
inc
xchg
out
xlat
cmc
push
pusha
ret
mov
imul
dec
pop
popa
je
or
loope
ja
lea
mov
adc
rolb
push
addr16
inc
rcl
jmp
fsubr
out
add
push
sbb
xor
or
push
xor
ja
dec
mov
dec
fsubl
xor
xchg
adcb
sub
repnz
mov
add
enter
aam
jnp
push
fs
xchg
shll
jmp
test
cmp
mov
popa
hlt
push
ljmp
sahf
or
add
lds
scas
sti
and
into
fcoml
js
fnstsw
pusha
mov
push
nopl
cs
sbbb
xor
cli
divb
test
jns
xchg
mov
insl
lret
push
jae
dec
mov
clc
sub
mov
test
adc
inc
testb
inc
rcll
cmp
mov
outsl
push
cmp
ret
cmpsb
ror
fst
xlat
push
mov
popf
ds
lea
mov
subl
jg
pop
mov
mov
sbb
or
pop
lcall
lock
or
adc
aaa
lcall
add
ret
cld
popa
pusha
das
xchg
push
push
ret
or
pop
add
mov
xchg
jmp
mov
sub
or
call
clc
push
out
mov
negl
adc
cmp
daa
ljmp
enter
pop
popa
jge
lret
push
cmp
mov
dec
test
jo
push
aaa
hlt
loope
push
test
ds
test
aam
mov
inc
sbbl
sahf
mov
psubb
je
mov
js
sub
jecxz
arpl
loop
scas
outsb
cld
cmp
es
adc
mov
sub
adc
stos
aam
jmp
add
jnp
fmuls
jecxz
mov
or
dec
mov
xchg
fistpll
inc
mov
pop
jbe
daa
aam
mov
ds
mov
mov
fnsave
mov
scas
push
ljmp
push
sub
add
adc
xchg
add
inc
cmpsl
push
sub
push
mov
sub
mov
sbb
mov
pop
jle
arpl
jbe
jo
movzbl
sub
lock
or
sahf
mov
pop
call
and
es
fmull
jno
pop
adc
test
mov
scas
sub
pushl
movsb
and
orb
lock
enter
jecxz
push
sarb
in
jnp
add
clc
inc
dec
inc
iret
mov
cmpsl
mov
addr16
icebp
adc
into
dec
fcoms
rolb
inc
push
sub
pop
pop
cltd
pop
jb
xor
xor
mov
outsl
jnp
or
cmc
or
sbb
incl
mov
adc
cmp
lahf
ficoms
cs
xchg
out
and
cmpb
imul
xor
std
mov
out
xor
roll
xor
mov
cmp
lret
sub
sbb
repnz
or
div
pop
fisubrs
insb
xchg
jge
outsl
cmp
test
mov
mov
mov
leave
adc
scas
mov
dec
inc
rcl
out
cmp
ret
and
iret
xchg
mov
pop
inc
in
mov
jmp
addb
insl
sub
loope
jae
mov
sbb
cmp
inc
pop
sub
dec
xor
jbe
out
sbb
push
shl
cmp
xlat
push
lock
enter
push
sbb
jmp
pop
jge
fs
or
inc
inc
sub
jno
aaa
xor
mov
sub
mov
insb
dec
push
shrb
inc
in
mov
pusha
mov
das
test
cltd
lods
push
or
mov
lret
mov
icebp
fs
adc
ret
dec
outsl
fnstsw
aaa
shll
js
push
cltd
mov
sub
push
in
pop
dec
mov
cld
les
xchg
test
jnp
dec
push
ljmp
jecxz
mov
sub
leave
sub
jb
repz
cmp
dec
int
xor
std
fsubp
cmp
push
out
and
mov
jp
outsb
inc
iret
fstpt
push
into
mov
inc
push
orb
shlb
data16
pop
sbb
das
ja
jae
dec
push
nop
sub
lea
push
pop
cmpl
push
or
cmp
mov
sub
dec
rcr
add
inc
mov
js
fiaddl
jle
pop
cltd
pop
mov
lds
inc
in
hlt
jp
xchg
pop
cmp
mov
andb
into
cmp
push
gs
call
lahf
test
mov
jns
add
ljmp
mov
pop
dec
stos
in
lret
push
sub
dec
bound
xor
inc
ljmp
cmovo
pop
pop
sub
sub
ret
cmpsl
scas
add
dec
push
mov
fnstsw
pusha
inc
sarb
mov
outsb
push
arpl
sbb
psllq
xchg
aaa
mov
cmp
push
xor
data16
std
test
aaa
pop
sub
js
leave
pop
or
xor
dec
dec
pop
jle
das
call
lahf
xchg
roll
enter
add
mov
sub
cmp
xchg
sar
xchg
xor
movsb
or
mov
subl
aaa
jbe
mov
pop
shll
icebp
out
jnp
xchg
cmp
push
cmp
mov
gs
hlt
jno
xlat
imul
sub
scas
add
ret
arpl
out
repnz
mov
nop
sbb
jo
lret
out
dec
or
adc
mov
imul
call
xlat
imul
fwait
scas
xchg
mov
push
and
mov
rorl
sarl
add
sbb
fdivs
xor
int
mov
jns
into
aad
jg
adc
ljmp
jg
xchg
sbb
lods
jno
out
shll
inc
inc
fdivrl
mov
jle
adc
stos
jno
hlt
mov
sub
inc
outsb
push
repz
in
push
xor
test
sahf
out
mov
daa
cmp
lcall
xor
cltd
xlat
and
xor
out
sahf
xchg
and
xor
mov
sub
mov
nop
xor
push
sbbb
adcl
lods
jg
dec
into
mov
lret
sbb
push
mov
shlb
arpl
outsl
repnz
add
cli
or
leave
fcoml
and
fs
sub
add
dec
imul
mov
mov
leave
sbb
ret
int3
inc
mov
sbb
xchg
cwtl
fcompl
roll
mov
fldlg2
lods
sub
pop
outsb
cmpsl
dec
rclb
fdivrl
out
imul
pop
fdivr
and
lcall
fdiv
jl
pop
jne
es
aam
push
mov
sub
xchg
in
gs
inc
mov
movsb
mov
mov
inc
rcrl
imul
fiadds
inc
mov
add
or
or
xchg
ss
mov
clc
cld
pop
push
cmp
repz
lods
xchg
stc
xchg
rcrl
xchg
stos
jmp
das
adcb
mov
push
cwtl
adcl
pop
les
enter
jne
outsl
push
and
dec
bound
pop
shlb
adc
sub
push
std
loop
sub
daa
rcll
push
stos
jb,pn
pop
jo
pop
insl
mov
cmpsb
fstps
movsl
mov
rorb
push
lds
pushl
lahf
data16
fldlg2
cld
pusha
jmp
and
mov
push
xor
jg
add
sub
lret
dec
xor
dec
jo
data16
pop
jae
fimuls
mov
lds
push
pop
lcall
xchg
jb
in
outsb
mov
inc
mov
mov
aas
daa
ljmp
je
push
inc
ljmp
iret
adc
fcoms
inc
xchg
stos
push
cmp
adc
movsl
mov
fs
push
rcrl
bnd
push
sub
cwtl
scas
ret
push
cwtl
pop
sarb
cmc
cmp
jnp
cmp
xor
adc
pop
imul
sti
pop
cltd
mov
jnp
xor
clc
jb
push
xor
and
add
aaa
xchg
sub
insl
mov
stc
fsubrl
roll
mov
jmp
lret
mov
inc
rorb
push
icebp
add
xor
pushf
iret
pop
pushf
sbb
dec
fisttps
inc
in
roll
sub
movsb
xor
fisubl
pop
arpl
data16
icebp
pop
sub
cmpsl
jmp
push
cmp
push
in
pop
cmp
outsl
xchg
pop
lret
pop
mov
ret
mov
ljmp
xchg
and
mov
push
aaa
int
cmp
push
out
mov
lret
mov
xor
push
shlb
arpl
pop
mov
xchg
adc
aaa
lcall
ret
sub
jae
pushf
push
mov
mov
xor
fwait
loope
xor
fcmovnu
xchg
mov
mov
xor
sub
mull
fs
adc
jns
repnz
pusha
subb
sub
jb
cmp
pop
mov
xrelease
arpl
cmc
mov
fnclex
std
jnp
or
pop
add
mov
lods
jp
les
aaa
hlt
adc
movsb
nop
shlb
ljmp
iret
adc
push
pop
loop
lock
mov
and
nop
testl
pop
stos
push
push
lret
rclb
scas
outsb
cld
ljmp
cwtl
sub
mov
cmp
test
pushf
sub
mov
xchg
subb
mov
pop
clc
push
rorl
mov
jecxz
push
pusha
cmp
test
arpl
cmp
jle
lcall
bound
cwtl
pop
and
stos
lea
ljmp
fadd
loope
pop
fsqrt
xchg
imul
xchg
xor
mov
xchg
push
pop
or
and
ret
popa
nop
leave
mov
aaa
cs
ret
mov
ret
fwait
xor
loope
and
ljmp
enter
and
paddb
clc
jbe
and
mov
and
inc
data16
sti
mov
mov
pop
inc
in
aaa
imulb
adc
hlt
inc
adc
inc
in
sti
mov
test
adc
push
mov
or
push
iret
mov
inc
inc
add
ss
in
testb
mov
rcrl
xor
hlt
push
dec
and
add
jnp
lods
mov
add
and
and
shll
movsb
std
call
pop
cmp
cli
dec
sti
fs
mov
push
jl
int3
mov
inc
call
gs
pop
fmul
jbe
cmp
das
icebp
notb
divl
lods
cmp
dec
dec
push
mov
cltd
loope
scas
popa
xor
es
cltd
movl
jg
mov
add
lods
and
lret
inc
aaa
mov
decl
push
lock
cmc
sub
mov
push
pop
mov
and
mov
sub
cli
inc
dec
or
std
leave
lds
leave
jo
clc
test
mov
je
inc
fnstsw
pop
inc
sub
mov
mov
lods
fistpll
inc
pop
jne
das
cli
in
testb
add
mov
jno
clc
jbe
insb
pop
mov
cmp
mov
inc
or
aaa
and
mov
aas
and
add
inc
cmp
xchg
jl
mov
lock
push
ret
ficomps
sahf
jno
int3
push
je
jge
pop
add
testb
call
scas
notl
xchg
jmp
jl
xchg
js
push
cltd
pusha
movsb
rolb
ftst
push
xor
xchg
mov
sbb
repnz
fwait
scas
xchg
mov
repnz
dec
les
mov
xlat
lret
sbb
arpl
sbb
psllq
xchg
test
push
call
int
insb
sti
xchg
pop
push
out
or
or
loopne
jne
jmp
or
adc
cs
dec
inc
jns
xor
xchg
dec
pop
inc
scas
into
iret
outsl
mov
and
cli
test
adc
jno
inc
sti
ja
jge
inc
push
xor
sbb
out
in
push
jg
jb
mov
or
lret
mov
push
lds
dec
or
push
mov
cmp
lret
xor
insb
insl
test
xlat
loop
aaa
add
or
adc
mov
pop
in
jp
push
icebp
xor
and
push
shlb
sti
push
cltd
pusha
and
mov
pop
inc
jg
movsl
sub
sub
inc
mov
push
orl
pop
jb
mov
and
mov
mov
adc
adc
fistpll
aaa
push
gs
sahf
idiv
jb
cmp
aas
stos
das
sahf
add
ljmp
out
aam
or
dec
cmp
inc
loop
mov
inc
xchg
sahf
mov
pop
xor
pusha
jae
repnz
fldt
stos
jns
mov
int3
dec
add
lret
cmp
push
sbb
punpckhdq
stos
in
mov
aas
jnp
sub
dec
or
inc
cltd
sbbb
fadds
dec
cli
mov
adc
pop
pusha
sahf
pop
int3
and
push
xchg
cmpsb
cmp
mov
pop
test
xlat
push
popa
or
jl
lahf
test
cmpsb
lds
shl
or
sbb
outsl
test
fsubs
sbb
icebp
pop
ror
icebp
xor
cmp
dec
or
adc
adc
cli
or
mov
sub
or
loopne
out
jge
sbb
jae
adc
out
cmp
push
pop
jnp
mov
repz
push
mov
dec
inc
push
hlt
pushf
dec
inc
jmp
and
mov
or
sub
out
cmp
dec
fs
add
lods
shrb
les
dec
clc
pop
ficoml
mov
xchg
cli
mov
lock
jecxz
call
xlat
xlat
ret
loope
into
xchg
aas
cmpsl
arpl
lret
add
push
mov
mov
push
aaa
int
cmp
shrb
int
mov
mov
dec
inc
cmpsl
shrl
mov
stos
or
mov
push
sbb
jae,pt
pop
jge
mov
scas
xor
std
dec
jmp
push
shl
and
xor
mov
loopne
notb
mov
cmpsl
hlt
ljmp
xor
mov
xor
sbb
push
xchg
sub
or
stos
scas
shll
mov
xchg
repnz
int
cwtl
or
push
mov
aam
cmp
mov
cmp
cli
test
and
jp
out
pop
test
fwait
cmp
sbb
push
in
lea
cmp
bound
pop
dec
insl
jg
push
push
ret
lret
jmp
cltd
test
mov
test
push
mov
stos
mov
cli
cwtl
das
loope
xor
inc
and
popa
sub
inc
aaa
and
xor
rcll
mov
or
pop
xchg
pop
cmp
mov
cs
ds
call
push
jne
cmp
add
leave
mov
adc
scas
cmpsb
mov
aam
lds
lea
lret
dec
imul
cs
lds
mov
rclb
sub
fldt
popa
hlt
push
ljmp
loopne
inc
cld
or
insl
ret
imul
enter
lock
sarb
lea
or
aam
popa
xchg
stos
fwait
pop
cmp
push
push
dec
inc
shlb
and
dec
push
ljmpw
aam
push
out
dec
push
xchg
inc
js
adcb
mov
shlb
inc
rcrl
fistps
rcll
leave
mov
jne
or
stos
call
pop
imul
pop
fldcw
movb
arpl
mov
adc
and
sub
push
inc
mov
or
fildl
mov
cmp
xor
jg
cmpsl
push
jbe
add
inc
mov
jge
cmpsb
xchg
mov
nop
ret
jo
mov
aas
je
inc
fstpt
pushf
pop
decb
pop
push
sbb
sbb
imul
sti
stos
pop
dec
and
std
adc
out
bound
adc
call
out
scas
std
mov
cmpsb
hlt
jmp
nop
loopne
mov
jnp
mov
and
mov
repz
mov
into
xor
jns
and
stos
idivl
push
adc
mov
shll
or
divb
inc
mov
adc
cli
mov
and
xchg
mov
add
pop
bound
aaa
pop
inc
inc
adc
dec
das
lcall
cld
jp
shrl
or
in
push
popa
mov
inc
mov
lock
daa
sub
and
sbb
imul
push
clc
inc
push
js
pop
lock
clc
cmpl
jbe
fs
fst
dec
xchg
fstpl
jae
and
lahf
ret
push
cwtl
arpl
gs
out
cmc
in
xchg
xor
sub
fidivrl
jo
push
pop
adcl
push
in
mov
sub
pusha
jbe
movsb
mov
in
sbb
aaa
push
pushf
repnz
cmc
mov
stc
or
and
cmp
and
inc
shlb
in
pop
cmpsb
adc
call
mov
mov
xor
ljmp
pop
lock
testb
pop
jmp
mov
mov
or
mov
repz
stos
mov
adc
daa
lock
shlb
aam
pop
cli
jle
loope
xor
inc
pusha
dec
leave
in
lock
and
xchg
fwait
and
arpl
add
rcr
mov
push
arpl
and
sarb
fistps
jge
pushf
mov
adc
dec
xchg
mov
scas
ret
dec
cmc
pop
xchg
mov
mov
fwait
xchg
mov
imul
push
cltd
mov
cli
push
popa
cmpsl
inc
and
inc
cwtl
arpl
adc
adc
imul
jg
or
jecxz
lret
sbb
push
mov
mov
enter
pop
push
mov
in
mov
sarb
adc
or
pop
in
les
sub
sahf
call
sbb
leave
ljmp
pushf
iret
mov
adc
mov
stos
cmp
push
rcr
or
pop
aas
adcl
adcl
push
fimuls
mov
xchg
lahf
fmull
sub
lods
inc
mov
xchg
inc
lea
fsts
enter
lret
das
sti
jnp
jecxz
es
dec
aam
add
lock
jg
pop
incl
adc
xchg
and
insb
xchg
mov
stos
rcpps
xlat
loopne
into
jne,pn
adc
xchg
push
and
fmull
adc
in
jmp
push
mov
in
out
xor
push
sbb
pop
mov
add
mov
jg
insb
sbb
gs
in
mov
jnp
loope
mov
icebp
mov
xor
and
test
xchg
mov
jmp
dec
xor
sub
cmp
lea
jno
sbb
xor
xchg
outsb
mov
scas
sbb
iret
pop
bound
xchg
mov
sub
lret
or
cmp
and
fsubrs
std
adc
xor
test
xchg
xorb
push
out
pop
pop
mov
cmp
lahf
jne
or
setns
jp
ret
cmp
fcomps
lcall
pop
push
mov
xchg
cmp
mov
cwtl
cld
flds
cltd
je
add
fdivl
in
mov
ja
imul
xor
inc
mov
out
cmp
and
inc
push
filds
loope
mov
lahf
pop
adc
lock
mov
pop
es
xchg
pop
lret
aad
jmp
xchg
mov
fwait
add
sub
cli
pop
pushf
inc
stos
lock
mov
js
or
add
and
pop
in
dec
daa
nop
xchg
lea
add
jne
push
in
data16
cmc
aas
cmpsl
ffree
fsts
push
shll
fdivrp
cmp
push
sbb
notb
sarb
push
sbb
jbe
rcll
mov
jnp
add
ljmp
push
xchg
jl
insb
scas
imul
cmp
xlat
mov
inc
pop
mov
mov
sbb
or
xor
dec
sbb
push
cmp
jmp
in
bound
xlat
sbb
xchg
mov
mov
outsb
push
cld
fcmovnu
xchg
bound
jo
faddl
in
imul
scas
addl
lret
sbb
cld
imul
lds
adc
mov
lods
jl
push
outsb
mov
dec
fnstenv
xor
out
sahf
movsl
jge
mov
out
cmp
inc
dec
in
mov
jnp
inc
push
inc
cmp
pop
mov
mov
jecxz
imul
inc
and
aam
into
or
les
push
cmpsl
lret
pop
adc
andl
lahf
pop
in
daa
sub
jp
xor
pop
fdivs
in
fwait
jle
jno
addr16
js
adc
std
out
mov
jge
jns
imul
add
loop
sbb
xorl
shll
and
outsb
imul
sbb
cmp
adc
sub
adc
push
filds
loope
cmp
sbb
and
lock
lret
je
push
pusha
mov
rorl
xchg
hlt
xchg
inc
mov
dec
call
or
sub
sub
stos
mov
mov
sbb
fstpt
ljmp
lahf
cs
sub
pop
adc
into
lret
xor
mov
test
mov
mov
jns
aam
mov
outsb
insl
mov
test
push
scas
jl
mov
stos
movsl
xchg
notb
adc
mov
xlat
scas
jb
dec
push
ficomps
sub
xchg
fmul
mov
mov
xchg
sahf
movsl
movsb
add
stos
aam
or
adc
sbb
and
je
das
subb
push
ljmp
enter
das
in
outsl
dec
gs
push
jae
sub
push
jecxz
rcl
mov
popa
hlt
push
ljmp
dec
ljmp
insl
ret
imul
enter
lock
sarb
lret
sub
push
or
in
jo
adc
scas
mov
outsb
pop
and
movsl
test
stos
adc
ljmp
fwait
xchg
and
inc
cmpsl
mov
pop
pusha
jle
in
std
fucompp
mov
and
push
and
push
xor
and
scas
stos
cs
lds
scas
jp
aam
push
fs
cwtl
push
ret
fisubrs
out
add
jecxz
adc
or
and
inc
insb
mov
push
xchg
jl
sbb
rclb
xchg
fldl
out
sbb
and
shlb
xchg
add
and
repz
push
jno
scas
mov
enter
xor
int3
xor
icebp
push
dec
fucom
repz
jmp
cli
or
loop
push
xchg
movsl
sub
sbb
stc
or
add
mov
fnsave
xor
int
ret
push
mov
aam
cmp
inc
push
mov
sbb
cmp
fadd
loop
mov
pop
cmp
inc
ret
data16
outsl
push
out
fstl
hlt
fidivs
mov
cmp
repz
out
xchg
roll
ds
insb
jns
jg
in
push
imul
mov
dec
mov
xchg
mov
lea
insb
lret
pop
xchg
push
cmp
pop
jb
push
rcll
cltd
andb
scas
sub
mov
push
repz
inc
dec
push
gs
push
clc
call
xlat
imul
cwtl
add
cltd
push
hlt
jge
ss
jo
lds
pop
clc
aaa
add
xor
adc
shll
dec
sti
push
repnz
sub
or
mov
adc
lods
test
fidivrl
dec
xor
fisubrs
test
pop
rcrl
jb
mov
out
sbb
test
mov
mov
mov
jo
jge
ror
shlb
pop
sbb
in
sub
ss
out
lock
adcb
inc
cmp
in
sti
mov
test
filds
jne
mov
or
decb
add
adc
testb
push
sbb
or
xchg
mov
rolb
or
add
dec
jmp
dec
lret
or
jns
and
mov
dec
push
arpl
test
imul
push
andb
xor
sti
fdivp
shll
pop
fmul
jbe
insb
jno
mov
mov
mov
lret
sbb
lds
push
jbe
mov
add
push
xchg
and
jb
arpl
out
xchg
paddd
fcomps
test
loopne
pop
pop
cltd
jns
addr16
mov
push
arpl
sbb
psllq
xchg
add
add
mov
out
jl
xchg
addr16
push
pop
cld
xchg
sbb
sub
cmc
push
stos
sti
cli
leave
fs
xor
les
xlat
movsb
jno
mov
mov
lret
add
js
jbe
out
xchg
imul
mov
push
mov
adc
lcall
lret
dec
sbb
jb
insb
mov
inc
cmc
rorb
loopne
fdecstp
mov
mov
insb
mov
sub
adc
icebp
aam
xor
mov
inc
mov
stos
lock
repz
cld
mov
sbb
mov
cli
mov
daa
js
shlb
roll
dec
adc
xor
testb
lea
movsb
jo
cmpb
mov
outsl
cmp
cmp
stc
jl,pt
scas
cmc
test
sbb
and
out
sub
xchg
je
idivb
popa
mov
cltd
mov
sub
dec
push
pop
cmp
jno
and
sti
cli
jb
adc
or
jg
mov
xchg
mov
xor
inc
cmpsb
and
pop
jbe
aaa
iret
or
enter
ljmp
adc
push
adc
fstl
jmp
or
add
fdivl
repnz
xor
arpl
jmp
loop
dec
lahf
sbb
in
repnz
mov
adcb
pop
fsubl
cli
std
push
cltd
lods
scas
lret
imul
int
push
out
arpl
ret
push
test
and
dec
cmp
fisubrs
mov
mov
out
scas
rorb
cltd
cli
clc
mov
xorb
sub
and
repnz
int
cmpsb
jne
scas
sahf
fildll
and
mov
int3
sbb
xchg
adc
hlt
sub
movsl
xor
out
jns
test
cld
or
sub
xor
jbe
dec
and
shrb
and
mov
pop
pop
insl
xorb
cwtl
jg
dec
aad
arpl
hlt
lcall
mov
cli
adc
sbb
hlt
mov
andb
jg
jg
push
mov
out
fsts
rclb
pushf
add
aam
cmp
xchg
sbb
in
js
fistpll
push
sbbb
lds
test
int3
in
out
mov
imul
xchg
jne
mov
push
adc
mov
mov
hlt
inc
mov
call
jp
cmp
mov
sbb
inc
pop
fcomps
push
or
mov
in
push
sub
imul
xor
jo
out
xor
sbb
aaa
sti
adc
fcompl
xchg
js
rcrl
xor
jae
add
pop
dec
sbb
insb
in
das
cli
icebp
mov
add
sub
movsl
sbb
cmp
into
push
int3
mov
enter
fsubrp
ret
adc
daa
and
sub
ds
pop
jl
or
aad
lock
or
lret
dec
push
and
mov
sbb
es
add
inc
pop
jmp
in
xor
dec
pushf
mov
lods
cmpsb
adc
out
cmp
sub
iret
ficomps
nop
mov
leave
xchg
inc
movsb
inc
add
mov
in
popa
lea
inc
jne
iret
sbb
cmpsl
in
add
sub
add
push
cmp
or
push
loop
pop
clc
xor
lea
pop
sub
inc
push
mov
lods
mov
pop
in
testl
ret
popa
sub
imul
mov
callw
sbb
dec
xchg
xor
dec
dec
loopne
scas
cltd
in
sbb
push
clc
dec
jge
adc
or
sbbl
inc
or
fnsave
data16
ljmp
int3
jae
hlt
mov
es
inc
sub
lret
lret
jge
and
push
and
aad
mov
pop
push
mov
sub
xchg
lea
sti
mov
inc
inc
dec
lahf
dec
cmp
xchg
popa
loop
lret
ljmp
pop
sbb
aaa
test
iret
sbb
sub
adc
aam
mov
add
jmp
movsl
ret
mov
popa
push
and
out
lock
push
loope
mov
mov
pop
adc
sbb
add
mov
push
dec
pop
mov
and
fsubs
xchg
mov
jnp
lods
stos
ss
adc
adc
mov
or
cmp
push
lar
dec
mov
je
shlb
pop
dec
lret
add
fdivrs
dec
adc
arpl
cmpsb
pop
xorl
xor
mov
mov
movsb
adc
mov
jbe
imul
sub
loopne
or
mov
popa
lock
mov
mov
cmp
testl
push
filds
sbb
sbb
ljmp
jg
xchg
nop
sub
cmpsb
add
data16
into
div
dec
mov
pusha
icebp
std
jmp
ret
mov
pushf
cli
ds
cmp
cmp
jg
fsubp
rcr
aad
xchg
jns
add
scas
or
adc
mov
lock
into
adc
xor
loope
push
pushf
mov
mov
sarl
std
cmp
ljmp
jecxz
push
mov
iret
fadds
push
xchg
push
add
data16
inc
scas
or
outsb
pop
pop
and
fwait
and
pop
xlat
dec
js
dec
pop
mov
stos
cmp
dec
adc
adc
mov
enter
dec
mov
mov
push
addb
dec
push
cwtl
push
mov
xchg
push
xchg
dec
nop
sbb
jmp
push
inc
jp
int3
mov
mov
fstpt
dec
xchg
adcb
fnsave
in
aad
jle
mov
adc
clc
mov
gs
iret
pop
test
mov
hlt
roll
cmp
lret
mov
das
cld
fcompl
pop
jns
test
xchg
mov
sbb
push
movl
clc
sbbb
out
and
repnz
jne
addb
loop
hlt
jb
mov
inc
pushf
add
sub
jno
push
aaa
je
out
enter
daa
adcb
dec
test
xchg
icebp
aas
jl
in
ret
jecxz
dec
sub
aam
jecxz
outsb
daa
pop
aas
outsb
in
mov
test
ss
test
adc
pushf
out
xor
bound
addl
std
sbb
cmpsb
xor
and
loopne
jb
icebp
sub
push
jbe
aam
lahf
push
rorl
push
push
and
xchg
lahf
mov
fisubrl
cmpb
int
inc
push
sti
lcall
xor
test
js
scas
gs
aas
jl
push
push
mov
inc
push
xchg
dec
mov
inc
push
es
loope
clc
scas
sbb
test
and
aas
adc
mov
or
fldenv
cmp
mov
or
mov
les
add
shl
out
or
mov
lods
mov
out
and
stos
sbb
sbb
jo
jp
les
pushw
jl
stos
ficomps
and
idivb
push
pop
dec
icebp
stos
mov
movsb
cmpsl
and
in
jp
mov
scas
mov
adc
xchg
jnp
xor
push
and
lock
daa
in
lea
or
es
inc
rclb
flds
dec
mov
mov
stc
test
mov
pushf
cmp
pop
and
cmpsl
je
jge
pop
leave
out
fnstcw
loop
dec
sti
data16
dec
pop
sbb
mov
adcb
xchg
outsb
xchg
push
pop
sub
sahf
lods
pop
aad
jg
xchg
in
or
push
push
jecxz
pop
jae
fisttpll
les
bound
add
dec
add
xchg
imul
jg
sub
divb
nop
addr16
push
add
insb
sbb
dec
mov
jns
enter
mov
jb
push
mov
and
push
lock
rcrl
push
fstp
jne
or
push
daa
pop
xorb
ret
loope
mov
jcxz
dec
rcrb
push
insl
adc
xor
or
stos
xor
rcl
or
pop
mov
cmp
mov
xor
cmpl
jp
sub
pop
jg
mov
push
in
stos
push
or
popf
dec
inc
lcall
or
out
jne
xchg
movsl
push
pop
push
rorl
adc
dec
sub
in
int3
jge
addr16
out
rol
jns
hlt
adc
adc
pusha
test
and
cmp
pushf
fcmovnbe
fs
mov
cmc
and
dec
jmp
std
dec
clc
cmp
data16
jne
mov
cld
sub
xchg
xor
sahf
dec
push
testb
dec
popf
sbb
fcompl
adc
mov
vlddqu
sarl
mov
fsts
loop
mov
call
pop
stos
mov
cmp
popf
ds
div
xchg
hlt
mov
xor
jb
adc
lret
mov
jmp
mov
add
insb
scas
out
xchg
xchg
pop
arpl
mov
loope
in
stos
dec
data16
sub
ficompl
insb
sub
add
mov
addr16
ss
fucom
jmp
or
dec
pop
sbb
add
cs
mov
xor
dec
sar
add
jp
std
add
xchg
and
jl
lret
imul
jecxz
cld
dec
adc
fistpll
xchg
adc
hlt
sub
xchg
mov
dec
jge
sbb
js
insl
jns
push
mov
lea
sbb
divb
mov
adc
fldcw
pop
imul
sub
push
std
stos
data16
sub
inc
loop
mov
clc
mov
adc
test
inc
aam
or
scas
xor
inc
xlat
mov
xchg
test
or
bnd
in
fwait
jle
jno
addr16
js
adc
dec
sti
mov
dec
out
jge
cwtl
lahf
pop
pop
jecxz
xchg
and
aas
je
std
cmp
mov
lds
sub
or
jae
lods
cmp
dec
dec
shl
inc
pop
sbb
addr16
ret
loop
dec
xlat
divb
es
in
fcoms
or
add
xor
jmp
dec
inc
jo
xchg
xchg
and
mov
lea
cmc
mov
pop
imul
push
shrl
xchg
and
aas
mov
xlat
out
and
lcall
add
test
sbb
cs
fstps
sbb
cmpsb
mov
test
add
bound
lods
pop
jp
inc
mov
push
movsb
pop
push
outsb
mov
test
jno
jp
aam
push
inc
or
cmpsl
push
repnz
inc
xlat
mov
out
jno
daa
or
cs
or
lds
movsb
std
lahf
push
cmp
push
test
test
cmpsl
lahf
inc
mov
inc
pop
fsubrl
decl
fadds
stc
xor
enter
add
das
test
testb
jnp
push
sub
inc
arpl
mov
pop
sbb
pop
scas
ret
cmpsb
fnstenv
outsl
dec
cmc
nop
mov
cmp
aaa
mov
lea
pop
cmpsb
fwait
jb
jge
inc
xchg
push
clc
leave
aaa
cmc
jo
aas
dec
lcall
mov
jl
sub
and
ljmp
jmp
sbb
mov
dec
loopne
imul
je
fwait
ss
arpl
shlb
adc
cmpsl
cmp
test
xchg
test
sbb
xchg
scas
aas
jg
in
add
inc
fcomp
in
sbb
mov
inc
dec
inc
fsts
loop
frstpm(287
xchg
and
je
out
mov
cmp
pop
outsb
push
jno
lret
test
mov
pushf
cmp
call
sub
lods
mov
push
pusha
lahf
sub
lret
or
fdivp
std
cmp
lcall
sbb
push
add
repnz
push
adc
jg
push
sub
add
inc
inc
jge
cmpsl
jbe
lock
push
add
mov
mov
mov
adc
arpl
inc
xor
dec
testl
lods
lcall
flds
and
leave
dec
xorl
add
test
in
mov
sub
arpl
xor
and
pop
jne
and
inc
js
jns
test
in
fdivrp
lods
out
xchg
repz
add
lahf
pop
push
addl
sarb
mov
mov
pop
pop
add
cli
js
adc
lods
cld
push
in
gs
lahf
pop
in
dec
daa
xchg
add
popa
pusha
outsl
sarl
pop
inc
cmp
or
out
scas
mul
push
sarb
xor
adc
push
add
mov
out
dec
sarb
cld
testb
subps
fidivl
jge
push
ds
fcomps
cmp
lods
sub
or
sahf
mov
scas
push
lahf
testb
jmp
push
or
fists
mov
fbld
adc
icebp
cld
mov
scas
sub
ds
jle
mov
sahf
mov
pushf
xchg
and
lea
jbe
enter
jecxz
roll
sub
lahf
ret
arpl
push
roll
mov
sbb
sub
sbb
adc
lea
jmp
cmp
ss
add
addr16
cmpl
aaa
cwtl
out
mov
xor
inc
push
mov
stos
cmp
int3
imul
ror
enter
cli
rol
rcrl
xor
std
mov
incl
mov
jp
dec
rol
fs
fbstp
lock
sub
clc
inc
lds
dec
bound
out
test
enter
and
insb
cmpl
jmp
es
aaa
rclb
pop
cmpsb
aam
mov
push
pop
mov
sub
ja
cmpl
mov
mov
sbb
addr16
dec
fsubrl
loopne
enter
loop
push
aaa
leave
shlb
jge
aam
movsl
outsb
add
mov
inc
push
lcall
sbb
hlt
iret
dec
jl
mov
test
push
mov
cwtl
and
pop
sbb
adc
sbb
push
mov
xlat
mov
sbb
mov
sub
adc
jbe
ret
loope
or
mov
jno
dec
jp
daa
xor
lods
pushf
jnp
xor
stos
mov
jo
jle
mov
inc
shrb
xor
das
jnp
fldl
cs
roll
icebp
mov
push
push
mov
push
cs
enter
and
cmpb
xlat
inc
push
pop
in
mov
mov
fldcw
cmp
repz
mov
add
loopne
jmp
cmp
or
jb
js
dec
pop
mov
inc
fcompl
mov
imul
aaa
loop
sub
xor
sbb
pop
adcb
or
or
dec
pop
jbe
adc
lock
mov
xor
jg
or
push
mov
xlat
fidivrl
and
lahf
sub
ja
aad
insl
sti
jnp
mov
push
xchg
xchg
pop
insb
sub
movl
and
xor
icebp
mov
rcr
push
imul
arpl
mov
cwtl
in
movsb
loopne
xor
jg
xor
dec
sbb
and
xor
cmp
fbstp
sub
mov
mov
jns
sbb
xor
popf
mov
jmp
test
fisubl
sahf
mov
push
pop
or
mov
in
lcall
fistpl
or
mov
div
jle
mov
loopne
ret
dec
pop
pusha
cld
sbb
xchg
lea
int
lods
lret
xchg
jg
pop
pop
xchg
ret
jno
notl
test
hlt
jmp
icebp
adc
test
cld
or
stos
daa
es
or
pop
and
clc
xchg
jae
mov
and
imul
bound
ds
decb
daa
xor
xorb
jp
cltd
lods
cmpsl
push
push
or
adc
clc
jmp
adc
fs
xor
pop
mov
push
adc
leave
adc
sbb
dec
cwtl
shll
loop
jg
pop
inc
cld
adc
shlb
stos
dec
and
jge
mov
push
add
or
push
nopl
clc
pop
pop
jmp
push
jmp
adc
loop
lods
sub
std
ds
and
leave
enter
add
mov
pop
lahf
push
lock
push
xchg
xor
insb
pop
imul
jns
lods
lret
loop
or
mov
in
jno
std
call
sbb
test
or
mov
testl
in
xor
xchg
std
scas
lea
and
movsb
stos
push
gs
sbb
nop
movsl
fstl
pop
sbb
mov
push
push
imul
add
arpl
push
or
scas
add
lret
cmpsl
mov
test
pop
sbb
adc
sub
push
pop
jp
repnz
push
and
js
nop
add
mov
push
in
notl
ss
xchg
fwait
mov
fs
pop
bound
add
rcll
lret
add
push
sbb
xor
add
jno
mov
sub
cs
sti
cli
repnz
scas
dec
dec
pop
pop
std
and
push
sbb
sub
inc
or
jns
mov
pop
jbe
adc
insb
adc
test
popf
pop
in
popf
sbb
jge
out
popf
mov
xchg
or
lock
dec
rcrl
inc
cmp
shll
iret
dec
std
mov
push
arpl
les
push
int3
xchg
mov
push
xor
jl
movsb
scas
ret
into
or
hlt
dec
mov
fcmovnbe
cli
movsb
in
push
loopne
add
js
mov
rol
push
test
sub
pop
adc
lret
daa
repnz
in
dec
cmp
adc
insl
jo
pop
pop
adc
cmpsb
jne
lahf
das
xor
add
mov
das
or
cld
jge
stos
mov
rcl
xor
pop
xorb
iret
mov
adc
pop
test
jo
cld
lahf
cs
sbb
loop
jmp
jb
mov
std
cmpsb
jmp
dec
push
xchg
xorl
outsl
lea
push
js
aas
sbb
test
jno
adc
push
imul
jle
cmp
dec
sub
pushf
inc
std
out
and
ror
dec
std
mov
push
mov
dec
push
in
mov
add
out
sti
push
mov
sbb
adc
xlat
push
fdivrl
imulb
sub
add
xchg
popa
in
fmul
jbe
insb
daa
mov
pop
les
mov
jmp
enter
shll
jl
cmp
pop
ja
mov
xor
xchg
pop
adc
mov
inc
aad
stc
mov
jo
and
push
jge
test
es
jmp
xchg
push
je
or
mov
std
cmp
js
adc
mov
inc
pop
sbb
in
lock
cmpb
push
xor
mov
sub
xor
and
push
lods
mov
pushw
mov
adc
scas
xor
add
mov
addl
mov
test
adc
lcall
adc
fucom
inc
lock
inc
push
outsb
jno
or
and
jnp
and
cmp
addr16
int3
or
and
adc
call
jb
insb
jg
xchg
adc
and
lods
scas
ret
and
or
sbb
scas
scas
adcb
cmp
mov
pop
popa
add
mov
mov
sbb
outsb
into
repz
xchg
mov
sub
andb
rcr
insl
jo
shlb
mov
lock
mov
pop
stos
mov
jo
fldlg2
iret
add
scas
rcr
dec
pop
lock
out
jl
incb
test
cs
dec
jg
or
fmul
pop
sbb
cld
sbb
test
push
adc
testb
sub
popa
mov
add
test
in
loopne
stos
mov
dec
sub
mov
lea
stc
xlat
adc
shrl
jno
push
mov
sub
and
mov
pushf
scas
inc
lcall
fidivs
xlat
imul
pop
shl
in
add
inc
pushf
fsub
stc
clc
arpl
gs
arpl
mov
sub
dec
fcomip
mov
xchg
jo
cbtw
mov
in
sahf
xor
test
inc
mov
inc
adc
jbe
cmp
mov
shl
fdivrl
inc
fcomps
sub
das
and
shlb
mov
mov
push
push
pop
cmp
dec
add
mov
imul
adc
lea
mov
fistps
mov
les
jle
arpl
int
xlat
cwtl
jb
mov
addl
mov
dec
or
mov
es
mov
je
out
and
aas
jns
pop
dec
loopne
js
add
and
adcl
jbe
inc
or
test
cmpsb
cmp
dec
pop
outsb
mov
imul
mov
int3
loopne
cmp
sti
out
adcl
cwtl
fwait
jbe
pop
clc
pop
sbb
mov
movsl
inc
push
cli
sbb
rclb
fs
stc
sbb
xor
xchg
pop
cld
mov
push
int3
es
pop
in
scas
ret
and
sbb
mov
cmp
dec
aad
add
cmc
sub
stos
mov
jmp
lret
aam
fldlg2
lods
push
jbe
cmp
fdivrl
mov
out
leave
sti
push
test
addr16
loopne
inc
push
insl
test
dec
pop
subl
idivl
jle
enter
jecxz
inc
jae
jle
in
ja
popa
mov
mov
clc
mov
mov
pop
sub
pop
clc
mov
inc
js
nop
add
and
jmp
mov
inc
mov
test
cmpsb
cmp
mul
movsb
pop
sub
push
cmpsl
dec
adc
dec
out
cmpsb
push
clc
std
add
shll
in
mov
out
mov
cmp
jb
aad
movsl
rorb
out
push
pop
mov
call
pop
aaa
pop
xchg
xor
dec
or
repnz
js
push
mov
fwait
mov
jae
mov
adc
in
out
xchg
flds
rolb
add
insl
and
lret
xchg
adc
add
inc
pop
pop
in
xchg
call
jecxz
or
or
and
jb
mov
insl
dec
cmp
sahf
jp
mov
pop
fcompl
and
ss
dec
pop
je
lcall
sti
lahf
push
test
rorb
mov
xchg
mov
fwait
mov
inc
inc
push
push
mov
mov
aas
ret
sub
sbb
push
pop
sbb
and
sti
cli
xchg
pop
push
jae
dec
scas
hlt
jne
aaa
or
fs
cltd
xor
xchg
imul
cmp
mov
out
shlb
sbb
xor
enter
adc
repnz
sbb
dec
or
jmp
mov
sub
sti
or
xchg
nop
inc
inc
mov
out
jno
out
popf
repz
mov
mov
xor
push
shrl
shlb
cld
lret
jecxz
jns
cmp
inc
add
xchg
aam
sarl
mov
pusha
pop
dec
insb
push
sub
push
icebp
push
lret
push
jg
mov
xor
pop
outsb
out
int3
lods
fcomip
enter
jb
lret
cmpsl
fisttpll
test
cmp
adc
ffree
mov
push
add
pop
fucom
inc
mov
mov
xchg
out
out
xor
icebp
out
inc
xor
push
xchg
cmc
sub
push
js
mov
mov
loop
sahf
andl
packsswb
arpl
gs
je
mov
sub
cld
fisttps
inc
lds
mov
inc
inc
push
iret
fldt
popa
hlt
push
ljmp
sahf
inc
mov
ficoml
xor
jle
pop
outsl
cmc
adcl
cmp
lahf
sub
push
dec
inc
jae
psllq
xchg
add
mov
push
icebp
iret
imul
and
add
test
outsb
addl
adc
frstor
mov
sbb
cmpsb
and
outsb
add
int
xchg
aaa
insl
mov
mov
add
in
out
das
jp
and
inc
fistpl
jno
add
jo
lock
and
dec
mov
mov
outsl
cmp
mov
test
mov
movsb
arpl
test
jne
sbb
mov
mov
dec
arpl
add
jl
sub
scas
stos
or
fwait
adc
jg
sub
movsl
lds
mov
and
mov
mov
pop
jge
push
es
std
mov
lahf
sbb
pop
pop
push
jb
int
push
cmc
xor
sahf
je
xchg
fcmove
fnstcw
shl
jl
mov
lret
into
jmp
push
fs
push
sub
cmp
push
data16
imul
mov
inc
test
rcrb
hlt
test
or
push
insl
push
mov
icebp
orl
popf
lcall
and
pop
adc
loop
pop
rclb
test
push
aaa
aam
fisubrl
pop
add
mov
and
and
into
cmp
ja
or
sti
push
adc
cmc
xor
insb
adc
in
aam
push
ret
dec
add
xchg
mov
cltd
lods
scas
ret
sub
mov
inc
fcmovnu
clc
xor
rcrb
hlt
mov
pop
cli
push
pop
fstps
sbb
jbe
and
jne
sub
sti
mov
stos
mov
sbb
xor
outsl
push
mov
push
and
aam
mov
cld
inc
gs
leave
add
out
mov
arpl
mov
inc
std
ss
and
jecxz
mov
xor
sbb
pop
push
pop
and
pandn
shl
push
cwtl
js
cmp
jns
jns
mov
fistps
and
daa
lds
cwtl
jnp
jno
daa
cmp
lcall
lods
inc
shlb
out
out
mov
imul
mov
loopne
cmpsb
and
push
gs
xor
sub
mov
inc
cmp
or
cmc
dec
or
das
out
sub
or
lret
xchg
fidivrs
bound
fcoml
movsl
and
cli
std
jae
and
mov
aad
inc
addr16
sarl
sbb
pop
cmpsl
sub
popa
sub
and
sbb
inc
mov
mov
jb
imul
lret
and
xchg
in
testb
sbb
and
leave
dec
add
in
es
int3
movsb
dec
pop
xchg
shr
pop
mov
call
push
mov
daa
inc
psraw
inc
adc
or
ret
arpl
mov
call
mov
xlat
push
mov
push
in
push
push
roll
sti
mov
pop
mov
mov
jbe
rcll
mov
out
or
imul
cmpl
test
xor
cli
daa
out
faddl
or
dec
push
fidivl
push
or
shl
lds
inc
sbb
out
shlb
xchg
int3
inc
and
xor
sub
int3
nop
insl
cmp
lods
pop
clc
stos
std
movsb
inc
cmp
nop
pop
lea
fidivrl
or
and
std
js
push
shlb
lcall
mov
xor
out
lods
jl
mov
dec
ljmp
cli
pop
jl
gs
cmp
decl
inc
aaa
sbb
pop
fstpt
or
jno
xor
xchg
push
nop
inc
cli
mov
push
lea
xchg
call
aas
outsl
cmpsl
jb
out
xorl
push
fidivrs
adc
push
xchg
cli
scas
or
push
ret
test
imul
test
jnp
call
jno
dec
push
add
add
pop
shrb
rcl
call
cmc
test
xchg
xchg
mov
or
scas
cli
jae
cltd
mov
add
jo
xchg
jmp
lret
push
mov
xor
adc
and
xchg
cmp
xor
dec
adc
lea
xor
inc
aaa
pop
jo
pop
repnz
mov
mov
and
add
dec
push
mov
xchg
jne
jbe
data16
mov
les
pushf
add
out
and
sbb
xor
push
mov
loop
jge
adc
lret
sub
mov
cli
jno
lods
dec
stc
inc
pop
jbe
mov
xor
sbb
push
test
stc
cmp
test
xor
push
mov
dec
call
inc
dec
cmp
sbb
sahf
cmp
mov
jmp
and
jge
sbb
xor
dec
push
sub
nop
mov
push
xchg
outsb
test
shlb
popf
lret
ficompl
inc
add
gs
scas
mov
mov
in
je
push
pop
sub
mov
cli
mov
js
add
fisttpl
test
pop
stos
std
adc
sbb
fcompl
outsb
and
bnd
lods
jmp
push
or
mov
xchg
std
sbb
into
or
cmpl
mov
mov
cmp
popf
dec
push
push
mov
fsubl
mov
clc
not
add
popa
sbbl
pop
ljmp
call
and
into
jmp
mov
push
inc
aas
out
aam
add
fucomip
cmp
cltd
insb
out
mov
push
es
inc
rcrb
push
jno
in
sarl
jne
lret
push
mov
movd
nop
ficoms
or
cwtl
sub
add
push
aad
mov
mov
and
lea
jo
fwait
test
in
int3
dec
out
inc
mov
mov
mov
mov
ds
pop
repnz
into
notl
jp
call
shrl
cmpsl
mov
dec
mov
ss
mov
mov
loope
cmpl
mov
mov
aaa
repz
mov
test
push
imul
xor
jmp
pop
sbb
and
aaa
xor
sbb
inc
pop
daa
clc
mov
xor
adc
jnp
js
dec
push
test
lret
ret
pop
inc
push
fdivs
sbb
aaa
clc
xorb
sbb
or
jno
arpl
or
loope
or
outsb
test
test
cmpsb
les
mov
sbb
out
add
push
imul
sub
rcr
test
movsl
jb
loopne
dec
aam
xor
ja
fmull
inc
loope
pop
stc
mov
xchg
icebp
pop
out
scas
mov
jns
stc
sbb
lock
hlt
add
mov
int
dec
lock
mov
fistpl
pop
jmp
mov
repnz
icebp
shlb
dec
imul
cli
pop
jl
sbb
icebp
push
push
and
xchg
jecxz
lods
imul
xor
mov
sub
int3
sbb
or
jl
pushf
movsb
cmpsl
cmp
add
daa
xlat
push
jno
ds
sub
loopne
adc
lahf
fsubrp
sbb
xchg
inc
push
loop
jnp
and
pop
pop
cmp
push
out
mov
addr16
js
adc
lods
jl
push
jge
ss
les
ficoms
dec
gs
add
jge
mov
test
out
inc
cli
leave
pop
arpl
mov
push
rcrb
sub
sbb
cmp
mov
in
jle
fsts
mov
lock
clc
daa
repnz
ret
jge
sub
mov
add
dec
lret
adc
lahf
mov
and
fdivrl
adc
das
pop
int
jecxz
gs
xor
mov
mov
cmpsb
add
in
xchg
iret
out
cmp
pop
loop
stos
inc
aaa
xchg
orl
je
mov
js
int
call
xchg
int
mov
movsb
cmpsl
cmp
test
in
xchg
scas
mov
or
sub
mov
insb
lret
inc
mov
loop
mov
pop
clc
adc
dec
les
push
push
enter
dec
adcb
incl
jecxz
adc
xor
jnp
daa
add
pop
mov
pop
je
adcb
add
dec
shlb
inc
nop
adc
pop
sbb
mov
xor
lret
jg
leave
xchg
dec
loop
in
push
movsl
das
pop
cld
ss
test
sbb
cltd
jbe
inc
mov
inc
add
add
repz
mov
dec
std
mov
inc
jge
lret
push
lods
movsb
jg
test
into
loopne
cli
xchg
mov
nop
mov
dec
andb
lahf
add
test
mov
decl
mov
pop
shll
inc
cmpsl
cmpsb
xor
pop
add
dec
fcomi
cmpsl
and
adc
push
rcrl
mov
jl
jne
clc
inc
stos
adc
daa
jb
sub
sbb
jno
inc
inc
popf
mov
jg
sub
jne
test
push
cmp
pop
fldl2e
icebp
call
mov
in
icebp
adc
mov
mov
dec
enter
sbb
push
je
adcb
repnz
mov
loopne
mov
add
iret
pop
lock
sbb
cmp
jge
leave
test
inc
arpl
add
mov
sbb
pop
ds
fadds
push
mov
mov
mov
test
jae
std
push
lret
xchg
iret
test
pop
and
sub
ss
out
cmp
adc
dec
pop
cmpsb
mov
fcompl
mov
cmp
and
or
stos
mov
test
xchg
sbb
loop
vpavgb
testb
lods
dec
cmp
xchg
xor
sti
movb
cmp
test
arpl
out
xchg
mov
sbb
mov
mov
mov
dec
dec
inc
pop
dec
aad
out
sti
es
addr16
dec
push
cmc
xor
add
xchg
scas
push
insl
call
jg
xchg
lahf
mov
jmp
mov
xorb
rep
jne
fdivp
xor
xchg
out
imul
out
mov
mov
ret
loop
mov
stc
movsl
addl
add
addr16
xor
cli
xchg
dec
push
sahf
sbb
cmpsb
pop
arpl
scas
jg
ds
outsb
imull
mov
and
or
mov
repz
es
insb
and
dec
loopne
gs
adc
or
fwait
mov
sti
ja
les
ss
dec
pop
pusha
jae
push
xor
mov
nop
inc
pop
push
orb
fcoms
dec
mov
repnz
fst
jno
jg
pop
inc
push
addl
mov
and
out
insb
dec
push
and
rclb
push
jno
push
lret
cmc
xor
insb
adc
out
jp
mov
rcrb
cmp
xor
sti
fdivp
shll
pop
fmul
jbe
insb
xor
or
sbb
xor
adc
xchg
cmp
mov
ror
jmp
push
sub
dec
or
cmpsb
push
jno
fdivr
push
sub
and
scas
sub
jo
loop
or
xchg
sbb
vpunpckhqdq
push
repz
std
mov
jg
call
mov
loope
scas
push
movsl
call
pop
ljmp
fmul
cmp
sub
test
add
mov
xor
imul
xorb
orb
xchg
and
scas
scas
lods
sbb
cmp
aam
icebp
xchg
sbb
xchg
fucom
inc
sbb
in
pop
pop
xor
aas
ss
add
sbb
into
cmp
dec
in
cltd
push
sti
mov
push
adcb
xchg
cwtl
sub
insb
xchg
cltd
lods
scas
ret
lods
mov
test
test
mov
inc
adc
xor
mov
dec
sarb
xchg
inc
arpl
cld
ss
jmp
and
or
or
jae
imul
adc
inc
mov
inc
rclb
sahf
mov
jmp
mov
jb
pop
xchg
inc
pop
cmp
xor
sti
cltd
mov
fcompl
aaa
divb
in
inc
sbb
push
mov
pushf
aad
std
arpl
ds
inc
dec
js
int
lods
dec
test
sbb
add
cmc
inc
sub
iret
xlat
enter
xor
lods
or
push
imul
mov
mov
mov
dec
imul
push
mov
outsb
std
sbb
mov
pop
outsb
push
jno
dec
lcall
leave
es
mov
or
shll
sbb
sub
mov
call
in
out
inc
sti
push
adc
mov
sti
pop
cmp
loopne
stc
pop
ja
sub
dec
adc
sub
jae
inc
repnz
fwait
scas
xchg
mov
repnz
int
jnp
repz
mov
mov
fldl2t
daa
mov
dec
inc
jmp
filds
adc
sbb
in
cmpb
leave
enter
sbb
jae
dec
mov
sub
das
fisubrs
inc
and
sub
dec
pop
mov
stos
cmp
push
xor
mov
movsb
sub
adc
push
adc
sub
loope
jmp
add
fwait
push
or
test
and
lahf
outsb
cmp
pop
ffree
inc
gs
call
xlat
imul
xchg
xchg
cld
fisubrs
scas
cltd
mov
xor
dec
rcl
xor
lods
mov
stos
je
xor
adc
repnz
testl
lcall
xchg
aad
dec
inc
pop
arpl
adc
mov
mov
jno
sbb
mov
aaa
push
cmpsl
ja
shlb
or
cmp
jns
or
sbb
mov
xchg
adcl
cs
xor
lock
mov
mov
mov
sbb
sub
daa
mov
push
mov
mov
cwtl
loop
adc
jg
mov
mov
out
inc
sahf
or
mov
insl
call
dec
ljmp
aam
sub
sahf
loope
mov
cmpsb
subl
dec
aad
fstpt
jl
xlat
jp
xor
scas
leave
insb
xchg
adc
fidivrs
inc
cwtl
fbstp
addr16
adcl
inc
add
push
std
adc
bound
loop
ficoms
pop
jnp
cmp
jecxz
inc
or
popa
or
sub
cmp
scas
mov
push
dec
cmp
bound
jg
test
dec
aam
loop
enter
cmc
dec
cli
pop
pushf
iret
pop
insb
sbb
mov
or
sbb
xchg
cmp
and
mov
dec
adc
jmp
js
sub
mov
mov
daa
test
insb
cmp
or
out
or
pop
test
push
aaa
int
cmp
shlb
ss
mov
sarb
into
push
mov
push
push
pop
addl
dec
out
jge
inc
loop
adc
fdivrs
cmp
stos
cmovl
and
lds
push
lods
push
jne
add
jg
pop
xchg
mov
sub
push
mov
enter
mov
ja
mov
fidivrl
dec
xor
push
test
jne
and
mov
jmp
sub
cmc
fdivs
dec
or
sub
xchg
jl
out
xchg
add
icebp
jecxz
cmp
jecxz
adc
adc
je
push
xchg
push
sbb
xor
inc
int
xchg
loope
inc
iret
pop
mov
andl
out
int
jecxz
insl
mov
or
imul
int
stos
inc
rcrl
cmp
sbb
mov
lcall
add
jbe
push
xor
cmp
ds
jecxz
jae
filds
pop
add
out
sti
adc
mov
fs
mov
fnstsw
dec
dec
hlt
xchg
lea
pop
add
mov
aaa
adcl
or
fdiv
notb
dec
sub
mov
scas
push
add
xchg
es
or
dec
or
sub
mov
mov
push
cmp
fmul
pop
sahf
orb
pop
aaa
insb
cmp
xlat
ljmp
enter
out
nop
int3
jg
pop
cmpsl
notl
mov
in
shl
mov
leave
insb
sti
movsl
je
pop
stc
je
push
jmp
pusha
xor
mov
popa
xor
pop
loope
iret
pop
jne
jns
dec
imul
or
sarl
loope
adc
ss
adc
mov
stos
mov
sub
mov
std
js
fiaddl
jle
sti
push
push
aam
in
dec
std
mov
aas
pop
push
lds
test
in
cltd
adc
xor
les
movsb
pushf
cmpsb
xor
aas
cli
inc
or
popa
loope
scas
rorb
or
in
enter
sti
mov
pop
or
outsb
pusha
cmp
bound
xlat
jnp
cmp
inc
sub
cmp
loopne
in
cmp
add
push
mov
add
mov
scas
sbb
in
pop
mov
lahf
mov
sarb
jae
inc
mov
pop
or
mov
mov
xor
nop
pop
push
cmp
out
sbb
fbstp
jne
push
out
fstl
hlt
scas
jo
inc
lods
mov
inc
pop
iret
pop
mov
mov
js
sub
cmp
arpl
cmpb
xor
mov
test
out
mov
push
cltd
jns
xchg
push
xchg
lret
adc
add
lret
mov
cmp
in
mov
fs
rclb
mov
cli
js
adc
sub
scas
jbe
xchg
or
leave
mov
mov
loop
mov
mov
lds
xchg
clc
mov
std
movsl
repnz
iret
int
dec
test
fcomps
sahf
fstps
in
lret
aam
movsl
out
jo
arpl
ds
negl
xor
pcmpgtw
mov
and
stc
rcll
dec
enter
jb
idivb
xchg
movsb
std
les
mov
sbb
or
xchg
out
pop
inc
add
outsl
push
out
fstl
hlt
fdivrp
pop
pop
mov
xor
mov
imul
sub
inc
adc
or
mov
cld
cmp
leave
add
mov
sub
cld
out
add
lock
adc
in
fwait
push
scas
cmp
push
jo
mov
arpl
xchg
jl
add
ds
jg
or
sbbb
test
rorl
jne
dec
fdivp
shll
pop
fmul
jbe
hlt
jns
inc
shr
fadds
and
xor
movb
cmp
or
ret
inc
pop
mov
mov
out
aad
ss
loope
pop
cmp
inc
mov
jp
add
jne
mov
outsl
mov
leave
or
pushf
enter
or
insl
mov
dec
or
aam
push
add
lcall
callw
push
sbb
inc
and
fnstsw
jo
lds
mov
mov
jns
xchg
adc
push
sarb
xor
cwtl
lret
outsb
test
in
add
jbe
insb
out
adcl
inc
sbb
jmp
lea
nop
lock
lea
xchg
add
push
sbb
gs
es
fwait
icebp
rcrb
or
repnz
mov
xor
stos
or
mov
test
cmpsb
and
fidivrs
sbb
dec
mov
mov
imul
mulb
bswap
sub
ja
rclb
sub
mov
repnz
ret
ret
scas
ret
pop
rclb
sub
and
ljmp
enter
out
xor
and
insl
adc
cltd
rep
sub
jno
test
out
push
xchg
mov
jge
jno
test
pop
push
jb
dec
mov
cmpsl
mov
xchg
or
mov
das
adc
fidivrl
cmp
loop
test
adc
hlt
sti
out
or
repnz
jg
icebp
xchg
mov
jge
clc
xlat
fcmovbe
popf
inc
cmp
inc
out
cmp
or
mov
sub
or
inc
pop
mov
adc
xor
or
adc
aaa
lcall
inc
add
out
add
popa
loope
sub
xor
cmp
int
outsb
orl
jl
cmc
std
cmp
movsl
push
mov
test
sbb
imul
dec
push
adc
call
or
outsl
pop
dec
in
jne
test
and
jae
repnz
into
lock
pop
scas
movl
adc
lahf
into
inc
jno
mov
dec
xchg
mov
out
pop
std
xchg
jo
mov
insl
jns
test
pop
leave
dec
test
inc
lret
divb
scas
mov
inc
cmpsl
mov
and
int
arpl
mov
idivb
lods
leave
push
inc
jl
rclb
or
add
jbe
insb
out
andl
mov
push
mov
pop
or
outsl
dec
pop
pop
jb
mov
or
push
stos
in
hlt
jp
xchg
sahf
cmpsb
cmp
cs
jno
dec
sbb
pop
xchg
mov
pushf
cmp
cmp
mov
jnp
ljmp
adc
dec
sbb
inc
jle
fcmovnu
icebp
std
mov
jbe
dec
sub
or
inc
std
adc
push
inc
mov
leave
xchg
movsl
sub
test
inc
sbb
loope
mov
in
inc
sbb
repnz
int
cmpsb
loope
xchg
pushf
test
popf
push
mov
dec
or
dec
pop
aas
adc
xchg
xor
shlb
mov
pop
mulb
pop
inc
in
mov
jle
or
cmc
dec
es
pop
xchg
loope
fwait
out
xor
test
outsl
add
out
or
rorl
lret
lods
pop
jne
mov
hlt
aaa
daa
jb
cmpsl
push
arpl
lret
add
test
xor
mov
imul
sbb
rorb
pop
adc
jge
stos
in
hlt
mov
movsl
lock
fimuls
fistpl
inc
daa
mov
add
dec
inc
sub
cld
fstps
into
jbe
insb
xor
and
pop
test
lret
sbb
pop
arpl
bts
data16
pop
pop
arpl
popa
mov
mov
sbb
out
sub
pop
push
jg
cmp
dec
in
xchg
faddp
fistps
ljmp
xor
pop
jns
jnp
lret
add
sbb
lahf
mov
mov
cmp
imul
in
repz
cmp
pop
fmull
and
or
and
or
inc
cmp
xor
mov
loope
jnp
test
mov
sub
in
popf
sbb
hlt
fs
cmp
push
adc
pop
movsb
and
or
jb
pop
in
or
jg
lea
xlat
inc
or
fldcw
cmp
inc
mov
icebp
push
cmp
outsl
cltd
xor
add
in
fs
adcb
add
sbb
and
push
insl
sbb
icebp
xor
adc
add
lret
aam
loop
push
std
adc
push
adc
fs
ds
mov
xchg
bndstx
pop
mov
mov
mov
push
pushf
xor
push
std
aaa
insb
repnz
movb
xor
mov
jnp
jns
ja
jge
sti
daa
in
icebp
mov
imul
or
cmpsb
ret
inc
cld
sahf
mov
adc
or
xchg
jns
pop
add
in
stos
imul
xchg
mov
int
fstps
rclb
test
xchg
loopne
mov
sbb
imul
and
pop
in
mov
jno
dec
push
cmp
jae
mov
call
mov
aaa
lcall
gs
daa
pop
fisttpll
push
test
bound
mov
outsl
fnsave
cmpsl
jg
loope
push
xor
xchg
xchg
and
outsb
inc
push
mov
sub
addr16
imul
aas
in
mov
outsl
mov
icebp
or
pop
movsb
mov
lock
dec
push
jge
fistps
mov
out
enter
mov
fsubl
int
ret
data16
outsl
push
out
fstl
hlt
ljmp
mov
adc
xchg
xor
dec
sub
mov
leave
mov
cmp
mov
ljmp
iret
xchg
push
pop
xlat
jg
inc
lahf
fildll
xorb
inc
out
mov
jae
lret
jae
cmp
loop
xchg
jl
adc
cs
adc
pop
out
adc
cmp
fsubl
inc
clc
mov
call
dec
in
mov
adc
push
pushf
daa
ret
fildll
sub
push
sub
sbb
inc
inc
shrb
hlt
cltd
repnz
sub
xor
int
add
nop
inc
push
fmulp
lods
add
aad
jmp
pop
or
and
mov
or
mov
jle
adc
shrl
fcoml
cmpsb
adc
and
mov
outsb
fadds
incl
fistpll
test
jns
or
push
js
mov
fstps
mov
mov
dec
push
rcl
jle
xor
gs
xlat
fidivl
scas
shlb
mov
mov
ret
push
jo
cmc
or
xchg
fisubrs
sti
mov
push
jne
cli
rcrl
jmp
aas
push
movsb
scas
ret
push
add
shr
addr16
sbb
ss
enter
sbb
bound
xor
sub
lcall
mov
push
aad
mov
jmp
jg
popa
cltd
jae
inc
loope
or
push
jg
nop
pop
les
test
je
ss
data16
daa
mov
pop
and
stc
test
mov
sub
sbb
fcompl
mov
xchg
dec
lds
add
push
lods
movsb
xor
aaa
mov
mov
cmc
mov
ds
cmpsl
fisubrs
jnp
pop
fsts
xor
lret
repnz
jp
in
lock
sbb
jne
push
or
testb
insl
popa
lock
popa
mov
jg
cmp
rorb
popf
fidivs
in
mov
popa
cmp
insb
mull
xchg
xor
adc
xchg
sbb
pop
outsb
dec
dec
sbb
sub
imul
mov
or
mov
es
lret
aam
mov
pushf
test
sub
push
add
mov
inc
inc
shrb
in
scas
mov
and
pop
sahf
and
dec
cmpsb
data16
inc
sub
push
dec
aas
int3
or
xlat
pop
xchg
mov
outsb
jne
clc
movsb
mov
out
mov
aaa
je
pop
aam
cltd
fcoms
aas
cmp
orl
xchg
pop
push
sahf
mov
idivb
cmpsb
in
add
loop
dec
outsl
lea
dec
add
xor
or
fucomip
orb
shl
mov
lahf
sbb
mov
jne
pop
push
mov
and
dec
xchg
push
mov
sub
clc
jno
aas
nop
sbb
xchg
push
out
ret
mov
or
lods
or
addl
mov
test
mov
loop
cwtl
sub
dec
fldt
leave
sub
es
js
mov
in
push
pop
test
sub
hlt
inc
cmc
fcompl
xchg
xor
pop
addl
lea
mov
jae
lret
enter
and
dec
mov
icebp
movsl
xor
push
loopne
scas
xchg
stc
test
mov
lock
rep
cmp
icebp
fs
je
sbb
out
in
mov
aam
mov
lods
jmp
xlat
inc
ss
and
leave
aad
out
jae
xchg
mov
frstpm(287
push
dec
mov
scas
outsb
out
adcl
push
shl
in
inc
shll
mov
add
test
or
lahf
mov
push
aaa
int
cmp
push
fisubl
sub
xor
jae
popf
ret
lods
call
inc
mov
jge
daa
push
imul
out
cmpsb
add
sbb
cwtl
push
iret
aas
add
and
adc
sbb
leave
add
out
push
and
insb
movsl
inc
xchg
adc
mov
fisubrs
xchg
xor
xchg
ljmp
inc
mov
int3
cld
nop
ss
lahf
mov
or
and
ljmp
adc
and
ljmp
imul
mov
mov
sti
clc
movl
and
or
add
pop
pusha
jl
movsb
or
mov
imul
into
inc
adc
mov
das
ret
je
nop
mov
mov
test
fisubrl
neg
in
mov
mov
pop
jb
shr
fisubs
loopne
ljmp
mov
test
gs
call
outsb
jmp
fucom
ss
cmp
dec
lods
ss
mov
pop
in
and
cmp
lret
fsubrl
lret
push
fwait
inc
dec
xor
lods
pop
sarb
add
push
sbb
cmpsl
testl
rcll
mov
ret
dec
xor
mov
lret
mov
gs
pop
dec
xor
push
movsl
mov
jns
add
mov
jl
fldcw
mov
divb
sbb
jno
iret
ja
fcompl
and
pusha
mov
setae
int
jecxz
lds
data16
xchg
movsb
cmpsl
cmp
adc
rclb
jno
sti
mov
popf
loopne
fsubr
out
mov
outsl
dec
pop
pop
jb
mov
sbb
and
sti
jp
std
lods
pop
sbb
insb
mov
mov
push
mov
xor
rorl
leave
or
loop
mov
imul
pop
nop
loopne
lcall
lret
push
shl
mov
sub
push
sbb
mov
faddl
insl
ja
xchg
xchg
movsl
sub
sub
cld
inc
push
pop
in
mov
test
out
dec
inc
cmp
sub
outsl
aaa
loopne
sbb
mov
xchg
adc
sub
adc
popf
jecxz
jns
pop
pop
inc
add
xchg
dec
add
ljmp
pop
mov
ljmp
sbb
les
pop
and
and
sub
jmp
or
adc
mov
xchg
popa
jb
in
cmp
je
or
mov
mov
xlat
lock
lret
mov
and
pop
data16
ss
mov
repz
mov
mov
xchg
mov
out
dec
mov
sub
cmp
outsl
adc
ret
out
mov
scas
jle
jnp
sbb
addr16
lock
adc
jg
fucom
fs
adc
es
test
cmp
sub
inc
push
sbb
mov
fcmovu
outsl
mov
leave
fcompl
je
jmp
loopne
testb
lahf
loop
clc
or
or
cmp
adc
aam
stos
dec
jl
out
xchg
add
cmp
push
lcallw
out
dec
push
xchg
inc
js
adcb
cmc
bound
outsb
mov
jnp
cmc
sub
jne
xchg
mov
or
sub
outsb
insl
test
lret
mov
aas
jg
bound
sub
push
notb
roll
xchg
jo
add
pop
xchg
movsb
cmp
rorb
mov
pop
lcall
imul
xchg
lock
mov
fmull
add
mov
fstps
pop
dec
mov
lret
mov
pusha
sbb
rcll
inc
outsl
sti
and
lcall
aas
sub
leave
xchg
out
xor
or
adc
ret
add
fninit
jb
inc
adc
xor
dec
out
mov
xor
pop
and
shrl
xchg
and
aas
mov
dec
sbb
or
adc
pop
dec
add
dec
push
mov
pop
mov
rclb
and
mov
sbb
shl
pop
or
push
aam
add
ret
loope
mov
cmp
xlat
push
inc
or
inc
xlat
mov
outsl
jno
daa
or
push
ret
sub
jnp
or
std
add
ss
stos
hlt
push
clc
call
push
jne
outsb
dec
leave
sbb
pop
punpckhwd
je
push
daa
aas
scas
sbbl
push
jbe
call
lcall
bound
lcall
and
cli
std
adc
es
cwtl
cmp
jne
repz
jae
mov
jne
test
mov
roll
scas
outsb
mov
add
mov
lcall
js
xchg
test
sahf
adcl
sbb
push
push
test
sbb
xor
xor
inc
cmpsl
out
mov
cs
icebp
insb
pop
bound
cmp
inc
pop
or
enter
push
xor
movsb
adc
pop
mov
movsl
cld
pop
fsubr
int
inc
popf
mov
enter
and
and
mov
mov
adc
rcrb
or
sub
sahf
test
jns
inc
push
gs
test
jge
pushf
cmp
adc
dec
add
gs
add
popa
loop
shr
pop
push
mov
dec
cmp
xor
mov
popf
cmp
test
bound
pop
push
sbb
cli
cmp
inc
arpl
cld
call
outsb
repnz
insl
inc
arpl
mov
pcmpeqw
repnz
dec
scas
xchg
movsl
in
push
fldcw
mov
pop
push
fbld
cmpl
xchg
pop
and
nop
sbb
xor
jne
cmp
xor
ret
or
pop
pop
adc
xchg
jl
in
sub
insl
clc
fbld
dec
out
sbbl
xchg
in
addr16
loop
push
jno
movsl
mov
and
hlt
sbb
inc
jmp
stos
mov
sbb
jb
sahf
pop
xchg
mov
fiadds
movsl
cmp
adc
xchg
push
cmp
ret
daa
outsb
mov
scas
sbb
add
leave
pop
in
repz
cmp
pop
adc
pop
icebp
jmp
pop
and
movsl
adc
cwtl
inc
inc
push
pop
jae
pop
jg
jbe
mov
and
pop
pusha
mov
insb
sbb
gs
iret
in
negl
sahf
mov
add
addr16
clc
ss
push
shl
fs
dec
push
data16
outsb
adc
outsl
cmp
xchg
aad
aaa
repz
xchg
mov
ss
pop
cmp
or
mov
lock
bound
into
flds
and
stos
out
ja
cmpsl
adc
or
out
int
cwtl
lock
jecxz
pop
jb
mov
push
and
mov
jp
pop
pop
into
add
cmp
or
or
adc
aaa
lcall
andb
pop
daa
jmp
or
push
icebp
jae
sub
add
adc
jmp
push
or
dec
stc
sbb
sbb
movsl
aaa
stos
test
sub
push
mov
pop
scas
test
inc
dec
mov
push
pusha
xor
push
cmpsl
cli
imul
cld
cmp
xchg
cmpsl
dec
or
fiadds
cld
loope
mov
xchg
mov
dec
aas
add
mov
inc
sbb
mov
mov
jle
rclb
jne
loope
subb
mov
dec
dec
sbb
pop
or
push
nop
mov
negb
jnp
jbe
arpl
enter
lds
cwtl
jnp
jno
daa
cmp
lcall
lret
dec
sbb
lcall
jbe
push
addr16
xor
mov
cmp
out
mov
push
inc
ret
adc
in
xchg
or
fdivp
or
xchg
shl
int
pusha
mov
loop
ljmp
std
or
pop
fsubs
sub
xchg
lea
adc
int3
aaa
out
scas
rorb
lea
xchg
sti
stos
xor
inc
repnz
lret
and
mov
movsl
rcr
push
dec
or
cmp
dec
sub
and
scas
out
addr16
divb
adc
cmp
loopne
mov
hlt
outsb
imul
mov
in
lods
lret
stos
or
and
rcr
sbb
iret
cltd
push
push
mov
cmp
loopne
ror
lret
mov
inc
cmp
mov
es
pop
or
std
lahf
into
mov
rcrb
push
popf
cmp
into
fsts
push
hlt
imul
pop
jle
insl
pusha
into
or
pop
xor
jmp
add
sub
jb
loopne
dec
js
stos
adc
in
jp
hlt
movsb
cs
mov
and
test
and
dec
add
fildll
xchg
inc
lret
and
and
xlat
mov
xlat
ljmp
enter
data16
aaa
dec
cld
lret
int3
fists
ljmp
dec
push
data16
lret
jp
loopne
ljmp
dec
mov
inc
fstl
hlt
ljmp
mov
das
pop
jne
sbb
adc
call
ds
pop
dec
cltd
mov
and
mov
mov
sarb
xlat
push
fwait
ret
stos
notb
push
jg
mov
mov
pop
inc
xlat
aaa
int
cmp
push
sahf
jp
mov
nop
mov
mov
jno
incb
popf
in
push
ffree
xlat
imul
sbb
cmp
mov
test
outsl
outsb
add
adc
mov
inc
add
inc
imul
mov
inc
push
add
sub
ret
cmpsl
stos
js
xchg
mov
iret
and
ljmp
enter
pop
and
fisttps
xchg
xchg
and
hlt
add
xorb
add
and
int
jae
rol
adc
test
dec
jmp
les
sbb
insl
pop
pop
adcl
sahf
cld
out
push
jo
cmpsl
and
iret
lods
dec
inc
aam
xchg
push
in
push
pop
fstps
loop
lock
and
mov
sub
xchg
movhlps
jnp
jg
movsb
push
mov
ror
rcr
sbb
add
xchg
add
sahf
jecxz
in
mov
clc
jg
pop
pop
out
lea
dec
mov
inc
pusha
shrb
sbb
fdivs
inc
jle
fcmovnu
icebp
std
cmp
orl
inc
mov
ret
loop
xchg
inc
mov
idiv
loope
pop
sahf
sbb
mov
xor
xchg
movsl
xchg
pop
push
mov
roll
xchg
pop
sbb
rcr
lret
mov
popa
mov
subl
stos
pop
out
jg
mov
xchg
mov
cmp
repnz
xchg
push
push
jge
or
mov
dec
jmp
sahf
mov
mov
jb
jg
sub
inc
push
leave
fstps
in
jno
xchg
sbb
sbb
lcall
imul
jecxz
insl
insb
mov
ds
into
push
iret
sub
movsl
cmpsb
cmp
repz
jnp
mov
pop
ss
cmpsl
push
cmp
mov
lcall
sbb
lahf
push
out
ror
mov
call
adc
push
adc
shr
add
fldt
popa
hlt
push
ljmp
sbb
mov
adc
shll
jns
sbb
lds
ljmp
cmp
repnz
mov
cltd
xchg
mov
les
addb
out
sahf
movsl
pushf
sub
aam
loop
mov
mov
mov
lret
les
cmp
sub
daa
mov
jns
repnz
sti
jne
sub
add
cmp
popf
mov
or
and
outsl
cmp
stos
and
jl
gs
cmp
jno
imul
sub
cltd
ret
or
xchg
inc
shl
lret
imul
mov
mov
push
xor
ja
push
and
fcmovnbe
push
and
xchg
insl
jns
adc
call
div
xchg
inc
sbb
sub
xor
out
dec
sbb
push
inc
cmp
orb
add
int
jmp
xchg
ret
shlb
or
sbb
stos
and
orl
insb
push
popf
in
jmp
ficomps
xorb
sub
push
imul
decl
stos
imul
and
mov
sub
fmuls
insb
push
dec
sti
pushf
es
mov
pop
mov
lret
leave
add
sub
rcll
cmp
push
fwait
adc
push
mov
test
out
movsw
lock
jp
movsb
mov
sub
push
dec
mov
mov
dec
into
or
leave
scas
in
repz
push
cmp
pop
mov
jnp
je
int
mov
pop
sarb
lret
ret
mull
lret
push
call
inc
fcmovnb
jbe
and
pop
push
cmp
dec
jo
sub
xchg
movsl
in
mov
rcll
jmp
push
arpl
sbb
psllq
xchg
add
test
mov
aad
mov
inc
or
cmp
fwait
das
fwait
call
jl
add
out
mov
cs
pop
hlt
jle
mov
sbb
clc
cmc
js
sub
cmp
adc
es
test
out
xorb
scas
and
dec
mov
pop
or
add
stos
and
repnz
adc
sub
add
jno
mov
sub
sub
stc
or
cmpl
cwtl
fwait
scas
xor
lock
jbe
adc
adc
mov
jecxz
mov
cli
add
or
mov
lock
sbb
sbb
addr16
add
push
call
fstps
sbb
lock
mov
daa
mov
and
or
test
dec
fsub
and
pop
ds
cmp
push
in
sti
and
adc
xchg
jecxz
repnz
testb
jmp
cmc
cwtl
stos
mov
test
neg
pop
popa
je
sbb
ret
cmp
or
nop
mov
icebp
jbe
insb
out
andl
pop
fcompl
lds
insl
jmp
jmp
xlat
in
outsb
dec
pop
jb
mov
lret
pushf
mov
scas
jnp
movsb
mov
and
cli
cmp
inc
cmpsl
insl
out
mov
jge
xchg
jb
push
mov
xchg
mov
xchg
cwtl
fwait
scas
push
std
pop
repz
jmp
data16
lret
repz
stos
jl
cmp
pop
mov
or
movsl
push
push
rclb
std
dec
inc
inc
sahf
sbb
pop
ds
orb
mov
es
je
outsb
fisubrs
popa
ret
enter
call
push
jg
dec
jecxz
mov
jg
mov
fwait
add
adc
dec
jnp
pop
inc
test
add
test
and
daa
cmpb
scas
mov
cmp
dec
mov
or
xchg
cltd
cmp
lods
inc
jecxz
adc
cmpsb
lock
mov
mov
ljmp
dec
push
std
adc
or
out
push
and
rorb
pop
fists
rol
fists
scas
iret
stos
imul
jp
mov
jb
push
sub
add
jg
sub
xchg
cwtl
fwait
scas
mov
or
cmp
rcll
xchg
mov
sbb
fstps
jl
mov
call
fistps
sarb
in
push
shlb
push
popf
xchg
inc
jle
adc
or
pop
push
outsl
cmp
mov
cmpsb
data16
push
rcrl
mov
out
ds
pop
int3
mov
xchg
pop
and
dec
and
repnz
jmp
test
out
call
sarb
cmpb
adc
fsub
mov
adc
and
mov
mov
or
push
sub
aad
das
adcl
dec
into
push
shrl
push
inc
or
gs
aas
pusha
dec
leave
popf
lock
and
popl
add
sahf
pop
fwait
inc
sub
add
mov
fstpt
fstpt
xchg
mov
jno
push
enter
add
jge
stos
pop
add
or
enter
sbb
sti
adc
mov
and
leave
mov
fimull
sub
sub
or
sahf
sbb
pop
pop
nop
jo
sti
pop
aaa
push
lahf
sbb
imul
out
ds
pop
int3
mov
xchg
pop
and
cli
and
push
or
notb
call
mov
jle
fcompl
roll
lea
in
xor
inc
mov
add
jae
lret
jecxz
mov
add
stos
imul
out
cmpsl
pop
idivb
and
adc
daa
test
cmc
xor
mov
daa
cmp
lcall
lret
dec
pop
test
and
insb
fwait
xchg
add
setl
movsl
rcrl
dec
or
xor
xchg
mov
movsl
xor
or
pop
aas
lahf
inc
cli
adc
dec
subl
xchg
in
repz
les
repnz
testb
cltd
mov
push
sahf
and
inc
test
xchg
xchg
sub
xchg
je
add
test
ret
add
pop
mov
cmp
jle
jno
mov
sub
dec
mov
pop
fisubs
orb
cwtl
add
add
das
jle
mov
pop
inc
sub
ljmp
dec
mov
push
sub
jae
repnz
aam
je
notl
mov
add
addr16
movsb
cmpsl
xchg
imul
test
test
cmc
loope
xlat
push
mov
out
imul
call
pop
and
andb
cmpsb
mov
pop
jb
ret
push
lock
mov
fucomip
fadds
test
movsb
or
gs
dec
sbb
jl
or
xor
or
add
call
or
fldcw
sub
xor
jge
lret
pop
imul
lcall
stc
sbb
outsb
into
fistps
pushf
inc
jnp
xchg
sub
fxtract
imul
push
mov
stc
cmp
push
into
xor
aam
xchg
fucomp
orl
mov
and
shl
jns
incb
scas
int3
push
xchg
dec
movl
lea
loop
push
dec
xor
es
push
sbb
mov
shr
int3
sub
cmp
mov
inc
orb
sub
sub
add
and
loope
mov
xchg
xchg
pop
and
je
adc
arpl
sub
and
jb
lea
push
cmpsb
cmp
fstpt
jl
jb
outsb
mov
or
adc
sar
mul
cmpl
dec
and
fidivrl
or
mov
inc
xchg
addr16
sub
mov
xchg
sbb
dec
inc
jnp
xchg
sub
decb
scas
shr
push
add
mov
sti
addl
jb
fwait
xchg
add
mov
or
or
out
sub
rcrb
jns
xchg
mov
sbbl
inc
imul
sub
cmp
outsb
icebp
jg
popf
mov
xor
and
push
dec
fistl
js
mov
nop
mov
mov
or
mov
ss
mov
mov
ficoml
jnp
adc
adc
or
outsb
stos
lea
cmp
mov
jl
jb
xor
fs
out
pop
xlat
push
loope
sub
das
xor
cmp
icebp
xor
mov
test
in
mov
push
rcrb
push
push
rcrb
add
pop
lock
sbb
xchg
inc
inc
xchg
pusha
scas
shll
int
movsl
lods
repnz
je
lods
fstps
mov
mov
mov
mov
daa
and
adc
lret
loop
int3
sbb
adc
test
mov
scas
sub
leave
ljmp
cld
sahf
mov
sbb
addb
mov
jecxz
dec
int3
fistpll
repnz
mov
jb
cli
idivl
mov
dec
sub
mov
loopne
in
lock
and
jno
daa
inc
arpl
adc
cmp
pop
dec
mov
mov
push
add
cli
sbb
and
cwtl
mov
fwait
int3
test
fstps
into
jbe
insb
sub
enter
mov
xor
shlb
mov
jns
pop
imul
jo
sarb
subl
es
imul
fcompl
pop
push
nop
fisubrl
out
fsubrl
andb
int3
out
movsb
dec
lds
push
roll
iret
dec
or
mov
imul
pop
sti
sbb
addr16
rcr
in
ret
addb
cmp
loop
adc
mov
hlt
jns
lods
push
sbb
adc
cli
arpl
ja
frstor
mov
lea
cmpsl
lret
sbb
sbb
mov
xlat
ja
les
movb
out
xchg
adc
int3
and
xor
out
cmp
xor
push
mov
add
hlt
jae
sub
push
clc
mov
cmp
loope
cs
clc
xlat
loop
xor
pop
and
jecxz
dec
adc
cli
jbe
and
push
cmpsl
das
call
mov
push
jle
jg
or
lea
call
dec
lret
mov
movsl
mov
out
ja
nop
pop
imul
jne
lret
fdiv
jo
sub
mov
mov
lcall
xchg
mov
inc
cli
test
xchg
stc
sbb
add
pop
gs
ficompl
pop
imul
fidivrl
cmp
dec
adc
jmp
sub
insb
jmp
or
mov
sarl
out
or
pop
lahf
ds
jge
jno
push
sbb
lds
or
cmp
inc
arpl
pop
adc
mov
cltd
movsl
sub
iret
out
push
cltd
push
aas
inc
scas
lret
imul
push
inc
je
dec
fildll
pop
or
ret
cltd
mov
iret
mov
mov
nop
or
mov
pop
int3
sub
stos
adc
sub
mov
out
mov
xchg
push
inc
int
ljmp
adc
les
mov
int
jecxz
pop
test
iretw
lret
call
int3
loope
mov
clc
xor
xchg
lea
fdivs
andl
mov
adc
dec
pop
pusha
pop
inc
cld
mov
loopne
int3
filds
aas
lret
mov
push
mov
cmp
xchg
daa
mov
mov
ds
ret
xorb
or
cmpsl
testb
shrb
and
rorb
loopne
fldcw
lret
xchg
movsl
mov
insb
push
ja
fwait
mov
or
or
pushf
mov
aad
sub
cmc
inc
pop
dec
sbb
xlat
inc
test
loop
lock
fcmovnu
cli
cwtl
dec
mov
lret
mov
addb
dec
push
or
sub
fcmovbe
ja
fstpl
inc
loope
cs
push
and
addr16
xor
stc
fsubr
sbb
cld
mov
sar
pop
mov
mov
mov
mov
mov
jecxz
dec
rolb
cwtl
js
adc
mov
inc
in
xchg
inc
inc
shr
xor
aad
push
addr16
iret
pop
leave
and
icebp
pop
lret
jmp
jmp
mov
xchg
in
sarl
add
ds
je
inc
jns
movsl
loop
inc
rcr
out
ljmp
mov
outsl
shlb
sar
and
push
mov
cs
mov
fimuls
cltd
imul
les
jg
es
faddl
cltd
je
add
cmp
mov
xchg
fnsave
out
cmc
in
jns
aam
repnz
fchs
fcmovu
pop
push
adc
popa
in
cmp
ffree
shll
imul
push
ljmp
addl
xchg
mov
repnz
int
push
fists
outsb
jns
mov
mov
imul
or
pop
jne
jl
xor
xchg
push
int3
pop
pop
cmpsb
loopne
scas
mov
mov
sbb
mov
sahf
mov
xor
xchg
sbb
clc
icebp
or
loopne
testb
xchg
sbb
in
sar
movb
out
sti
cmp
mov
sub
inc
outsb
mov
cmp
imul
pop
cmp
lret
adc
ds
or
icebp
scas
cmp
in
fimuls
lods
xchg
jl
in
outsl
xchg
push
sbbb
insb
jg
xchg
push
sbb
pushf
pop
xlat
nop
push
dec
test
outsb
frstor
aas
jg
fidivrs
dec
jae
sub
mov
inc
test
sub
hlt
in
dec
or
and
sbb
call
mov
adcl
shlb
and
mov
mov
out
sbb
xchg
mov
add
mov
into
mov
or
pop
sub
mov
rorl
cmp
lods
or
mov
andl
lock
aad
jns
mov
adc
iret
pop
lcall
mov
popf
inc
loop
test
das
pop
test
dec
pop
lret
add
or
pusha
push
fmull
ss
lds
cmp
andb
inc
xor
cmp
jno
fistpl
mov
pop
outsb
push
div
xchg
sub
roll
lahf
inc
insl
ss
cli
cwtl
stos
dec
adc
arpl
adc
pop
push
cwtl
pop
imul
rcr
repnz
sar
orb
mov
mov
stc
sbb
inc
es
arpl
andb
inc
push
xchg
xchg
leave
sbb
fcomps
mov
outsl
add
nop
mov
cmc
sahf
add
mov
jmp
push
arpl
sbb
psllq
xchg
add
test
iretw
pop
xchg
xor
add
sbb
sub
sbbl
jl
rcll
and
mov
ret
adc
jecxz
cmp
inc
or
sbb
fld
out
dec
andl
push
test
xchg
lea
repnz
mov
xlat
cwtl
push
cwtl
mov
jne
stc
xchg
daa
or
dec
fisubs
out
cmp
push
push
shrl
enter
xor
fiaddl
xchg
cwtl
sarl
inc
xchg
out
mov
arpl
sbb
setae
lret
repnz
bound
sti
ljmp
adc
push
movsl
sar
cmpsb
ficoml
inc
pop
jp
je
sub
pop
scas
ret
and
sbb
xchg
and
cmp
fisttps
mov
mov
dec
xor
aas
and
inc
jmp
in
shl
out
dec
sbb
and
dec
jmp
test
jle
out
inc
push
push
jecxz
fmull
lcall
repz
mov
dec
pop
imul
xchg
aad
inc
push
dec
ja
test
push
and
rorl
or
incl
movsb
or
and
mov
push
rcrl
sbb
leave
cmp
and
in
dec
lea
repnz
stos
jmp
mov
jl
mov
shll
push
mov
mov
icebp
sbb
cmpsl
movsl
ficomps
fwait
lock
push
cmp
daa
in
imulb
xor
pop
jnp
test
in
scas
mov
imulb
test
pop
and
cmp
lock
popl
lds
outsb
push
arpl
sbb
psllq
xchg
test
push
sub
mov
sbb
dec
mov
pop
loopne
jg
xor
cli
daa
bound
mov
lods
int3
addr16
mov
push
loopne
clc
mov
sub
insb
enter
cmp
test
pop
add
stc
push
loope
mov
int
mov
in
lock
jmp
or
and
fildl
cmp
sti
in
sbb
fdivr
xor
or
pop
mov
cmp
or
pop
jge
mov
push
xchg
pusha
jae
sub
add
adc
mov
gs
mov
into
sbb
cmpl
cld
stos
test
add
scas
ret
mov
pop
fisttps
xor
pop
push
lock
sbb
dec
sbb
jge
fistps
sub
ja
out
jns
pop
enter
xchg
hlt
outsl
cld
dec
movl
inc
test
in
mov
push
pop
inc
in
mov
dec
pop
dec
mov
dec
pop
or
or
inc
dec
movsb
mov
mov
fstpl
mov
stos
mov
add
ret
cli
mov
inc
mov
sbb
xchg
enter
dec
and
movsb
mov
cmp
and
mov
xchg
jbe
insb
dec
mov
xlat
pop
out
es
add
lcall
sbb
mov
push
jge
mov
les
push
fcom
popa
js
push
int
sub
sub
sub
xchg
ss
rcl
pusha
xchg
adc
scas
xchg
mov
push
add
sbb
int
test
ja
daa
push
jnp
xchg
xchg
push
mov
inc
pusha
int
cmp
jp
xchg
jo
rorb
inc
and
jg
cltd
insb
jg
adc
sub
xor
inc
rcrl
pop
aam
sub
xchg
out
jl
dec
pop
stos
xchg
mov
inc
fimuls
lods
lret
or
movsb
cmpsl
cmp
aam
fmul
in
lods
pop
ds
xlat
jb
orb
cmpsl
mov
xchg
and
mov
push
aaa
int
cmp
push
sti
jp
ret
cmp
fcomps
lcall
fsubp
imul
fldl
stos
cmp
cltd
je
les
test
mov
jp
adc
xor
iret
pop
sub
popa
out
mov
and
outsb
out
arpl
xchg
movsl
jb
in
push
mov
adc
inc
ret
and
scas
stc
jmp
sti
aaa
push
add
jns
sar
icebp
movsl
rol
pop
mov
js
clc
ret
pop
mov
sub
jns
adc
mov
or
sbb
mov
mov
or
pusha
testb
jmp
cmc
cwtl
stos
mov
test
adc
dec
loopne
fsubrs
gs
in
jnp
xor
sub
inc
adc
inc
aaa
and
decb
das
movl
rorb
or
inc
add
jnp
faddp
rcll
mov
test
bound
mov
nop
std
sbb
gs
push
cmp
subl
and
dec
xor
sti
fdivp
shll
pop
fmul
jbe
insb
jb
mov
inc
lods
cmp
lret
sbb
js
stos
jl
dec
data16
pop
pop
arpl
popa
mov
mov
sbb
jbe
das
pop
out
outsb
fcomps
mov
xchg
mov
repz
mov
dec
xchg
iret
sbb
sub
stc
pop
adc
mov
inc
push
xchg
std
add
aaa
mov
mov
test
test
push
mov
cmpsb
pop
adc
icebp
adc
pop
bound
mov
inc
fwait
pushf
and
pop
jbe
mov
mov
sbb
enter
push
add
sti
mov
or
add
je
outsl
mov
push
and
outsl
cmpsb
inc
arpl
jnp
push
lds
pop
sbb
or
insb
sub
xchg
push
push
rorl
xor
int3
dec
out
jmp
mov
sbb
xlat
push
loope
pop
fyl2xp1
xor
lea
out
sbb
loopne
divb
mov
mov
pop
adc
es
cwtl
sahf
out
sub
leave
call
or
mov
movsl
sbb
movsb
jmp
add
mov
ds
sahf
test
pop
and
and
test
pop
lods
lods
mov
push
imul
aaa
repz
inc
pop
cmp
pop
dec
aas
cmc
and
xlat
iret
pop
mov
test
lea
js
int
xor
in
fwait
adc
stos
cmp
lds
scas
sti
cmpsl
dec
fidivrs
or
imul
lret
sbb
test
sar
out
out
mov
sarl
pop
lcall
cmc
xor
add
lcall
mov
dec
ret
shrb
scas
scas
ret
out
out
fidivrs
mov
imul
clc
xor
dec
sbb
mov
xchg
xor
cli
cltd
pusha
and
sub
add
adc
xor
daa
jle
jae
sbb
fcompl
pushf
jo
pop
lds
cmc
add
sub
adc
mov
mov
and
std
dec
xchg
iret
popa
inc
sti
fdivs
fcomp
xchg
lock
jge
dec
js
sti
dec
jmp
push
push
inc
movsl
loop
dec
push
jae
xor
push
dec
clc
adc
push
outsb
ljmp
add
in
and
ds
and
mov
cmp
dec
adc
test
xor
add
sub
rorl
lcall
insb
dec
push
ss
loop
cmp
push
mov
aad
jecxz
xor
mov
roll
cmpsb
incl
lcall
cmp
xchg
adc
imul
or
cltd
lods
mov
shl
fisubrs
mov
sbb
lret
fdivrp
sbb
xchg
loope
sbb
dec
adc
dec
jbe
mov
add
rcrl
ss
xchg
pop
aaa
xchg
dec
inc
push
pop
push
in
sbb
andb
sub
lret
mov
mov
cli
lds
mov
loopne
adc
fucom
cmpl
lds
sti
and
mov
jl
xchg
sub
rcll
test
inc
test
push
mov
mov
nop
dec
pop
pusha
fsubrp
dec
dec
pop
sub
arpl
sbb
testb
clc
xchg
pop
dec
cmpsl
cmp
mov
cmpsl
push
mov
xchg
fidivrs
stos
xchg
mov
stos
sub
lret
out
mov
push
lahf
add
shlb
mov
mov
aas
or
adc
call
lahf
fstl
sub
jae
pop
incl
fwait
scas
mov
stc
loop
dec
pop
in
fcmovnu
in
sbb
xor
outsl
and
sarb
jl
xchg
nop
adc
out
adc
in
rol
mov
cli
sub
jo
into
mov
out
mov
ror
inc
lret
cs
cli
ds
sub
jle
adc
jl
out
xchg
jg
mov
dec
or
mov
push
and
out
sahf
movsl
das
sub
push
jecxz
out
js
lcall
mov
icebp
add
outsl
add
push
or
cmp
sbb
jbe
mov
int
xchg
dec
call
jno
jp
mov
xor
movsb
or
mov
jb
notb
xor
aam
ss
pop
lcall
push
out
negb
cmpsl
sub
dec
cltd
mov
bound
mov
push
cmp
pop
test
aaa
rolb
dec
lret
cmp
test
adc
and
loop
std
sub
inc
lcall
fsts
lret
lret
addr16
mov
add
sbb
xchg
inc
sar
imul
mov
jg
jns
ljmp
cmp
stc
lds
push
adc
insl
inc
mov
pop
mov
push
jle
pusha
call
and
pop
out
jns
ret
test
xor
jne
push
out
fstl
hlt
ljmp
mov
cs
sbb
js
int
or
or
push
inc
fs
cmc
ljmp
jb
imul
inc
icebp
adc
mov
adc
orb
cmpsb
push
rcl
int3
fsubrl
cmp
bound
addr16
incl
mov
rcl
cld
hlt
aad
loopne
mov
subb
stos
xchg
xchg
out
cmp
fidivrl
push
xor
mov
push
jmp
in
sub
mov
xchg
push
pop
sbb
push
int
dec
mov
mov
je
sarl
jecxz
push
mov
lock
xor
rcrb
into
sbb
mov
push
mov
xchg
and
pop
sbb
sahf
call
mov
cmp
stos
mov
push
xor
pop
div
rcrb
xchg
dec
jbe
decb
lcall
push
lcall
scas
cld
pop
aam
push
inc
mov
add
xlat
mov
dec
pop
inc
xlat
aaa
int
cmp
push
fisubl
call
mov
jge
and
push
push
pop
push
and
sub
sub
subb
sbbl
add
xor
rcrb
adc
gs
pop
mov
mov
sarb
ds
push
pop
sbb
int
pop
in
scas
or
adc
fistpl
cmp
mov
add
mov
int3
mov
pop
and
pop
push
push
inc
push
lahf
pop
cmp
int
shl
cmp
out
repz
inc
inc
dec
jmp
fdivrp
adc
cli
push
in
mov
xchg
cli
sahf
jl
movsl
xchg
ficoml
mov
push
loopne
lret
add
or
jecxz
or
add
jbe
insb
out
xor
add
inc
push
fsubr
notb
lock
and
sbb
arpl
icebp
ja
cmp
add
loopne,pt
inc
and
sbb
filds
sbb
sbb
or
cmpsl
call
imul
test
shlb
pop
adc
sbb
fsts
cli
loop
or
imul
dec
pushf
repz
sahf
jle
nop
imul
and
adc
clc
pop
imul
jb
xor
cmpsl
aad
mov
push
in
and
mov
push
jns
pop
cmp
xchg
sbb
pushf
fisttpl
lds
fisttps
mov
pop
adc
lea
addr16
stos
stos
add
adc
movsl
pushf
sub
xchg
push
shrb
lods
sti
xor
clc
iret
jp
inc
jae
jmp
jo
sub
std
loopne
dec
jp
sbb
jne
clc
adc
scas
dec
mov
out
out
imulb
or
push
mov
and
popf
mov
mov
test
bound
icebp
out
dec
es
addr16
mov
add
pop
jle
je
sub
cmp
les
fstpl
out
adcb
sub
stos
mov
aas
scas
cli
mov
inc
lea
sar
movsl
jne
sub
fwait
pop
cmp
leave
test
push
xchg
outsl
aaa
cs
cld
mov
dec
aam
sahf
lea
push
sti
rol
pop
pop
mov
cmpsb
gs
jbe
pushf
lahf
mov
movsb
fistpll
dec
or
xor
mov
das
fldlg2
iret
out
push
lret
ja
icebp
call
pop
mov
es
sub
push
cmc
fidivs
sar
inc
cmp
mov
das
js
jae
dec
adc
vmovntps
inc
cmp
jge
ret
sub
in
and
inc
sti
jns
adc
mov
mov
aad
pop
aad
aaa
aaa
xchg
shl
xor
aaa
aad
jecxz
jp
mov
push
clc
xchg
in
mov
aaa
cmpsb
jno
push
in
add
iret
mov
pop
das
adcb
pop
cltd
lods
mov
nop
test
sbb
pop
clc
aaa
add
push
xchg
xor
cmp
stc
jne
nop
les
adc
dec
les
push
shlb
loope
xchg
sub
fcomi
mov
fmuls
imul
push
jae
into
repz
sarl
jge
insb
repnz
or
and
jno
mov
andl
mov
cld
mov
inc
xchg
inc
lds
mov
jl
dec
fstps
ds
mov
fs
fwait
popf
xchg
mov
jle
inc
jno
test
mov
pop
cltd
jb
sbb
jmp
out
or
pop
push
and
popa
adc
movsb
jle
dec
jmp
xchg
push
mov
test
arpl
cmp
jbe
and
adc
das
push
push
imul
push
mov
pop
pusha
lahf
imul
xor
jne
inc
pop
xor
iret
out
xor
sub
aam
test
xchg
dec
es
loope
pop
stc
notl
int3
inc
out
scas
cmp
adc
sbb
xchg
xor
popf
add
pop
jmp
std
inc
mov
sahf
dec
fsubs
ret
ljmp
ret
shrl
sbb
fcompl
mov
mov
decl
xor
inc
subb
pusha
jl
dec
xchg
jnp
sahf
mov
inc
cli
aam
xchg
scas
in
std
mov
scas
adc
cld
pop
cli
push
adc
ficomps
dec
rcl
push
or
and
imul
lahf
cmp
inc
adc
jb
inc
fsubr
shl
mov
addr16
js
adc
lods
mov
rcl
call
xlat
imul
add
cmp
or
repz
jns
mov
fucom
mov
inc
ljmp
test
insb
cmp
ds
push
repnz
dec
in
scas
or
jae
ret
jb
adc
call
into
mov
jnp
xor
insb
std
jnp
or
mov
xlat
push
and
aaa
xchg
loope
add
and
leave
dec
test
cmpsb
div
mov
and
shlb
jp
inc
xchg
mov
push
cltd
sub
in
xor
jg
dec
push
das
mov
adc
jnp
popa
enter
popa
mov
insl
xchg
push
add
fisttpll
push
sub
jg
xchg
push
mov
mov
mov
rcrl
mov
adc
adc
das
insb
mov
std
xlat
cltd
insb
jg
xchg
lret
je
cld
popa
pusha
sbb
mov
stc
jne
repz
jmp
addr16
and
adc
add
lea
xchg
xchg
in
or
jne
xchg
mov
dec
vcvtps2pd
pop
nop
inc
insl
sbb
lock
adc
jecxz
xchg
cli
jbe
es
push
mov
int
jecxz
or
mov
sub
in
sbb
ss
inc
cli
scas
lds
pop
dec
jmp
sub
and
shlb
jp
add
movsl
push
fldcw
sub
jmp
cmpl
inc
adc
inc
jb
stos
push
arpl
lret
add
mov
push
cmp
lahf
fisubrs
out
cmp
mov
enter
and
ljmp
sbb
mov
insl
das
sub
int
mov
aaa
sti
fdivp
shll
pop
fmul
jbe
insb
addr16
scas
pop
sbb
dec
pop
jo
clc
aam
ret
repz
popa
inc
inc
or
push
inc
addl
dec
sub
leave
xlat
out
xor
mov
scas
sub
jo
pop
pop
cmp
dec
dec
adc
jle
scas
out
xchg
test
scas
sbb
sahf
dec
mov
mov
rorl
repnz
mov
jecxz
ja
xor
out
sbb
and
xor
and
out
xchg
sbb
xor
ret
add
mov
add
adc
dec
pop
bound
fildl
adc
jns
push
pop
in
mov
andl
xor
add
sbb
hlt
mov
es
add
lock
ret
out
cmp
inc
in
rcll
mov
mov
cs
addb
mov
and
xchg
scas
jbe
call
jne
push
adc
ret
cmp
fwait
scas
mov
pop
popa
das
jmp
icebp
xor
jae
cld
filds
outsl
inc
mov
ret
std
or
dec
repz
test
add
lea
in
push
test
xchg
pop
xchg
mov
fwait
movsb
dec
outsb
xchg
sub
imul
inc
cmp
idivl
jo
sbb
pop
aam
inc
adc
call
jne
inc
push
nop
pop
iret
pop
in
mov
daa
movb
mov
dec
test
pop
mov
bound
or
aam
xchg
push
outsb
repnz
jbe
das
push
sub
out
mov
adc
xor
xor
lea
adc
mov
dec
push
inc
popf
imul
jb
xchg
sbb
or
add
cltd
ja
gs
jbe
jg
mov
pop
pop
movsb
mov
leave
jmp
add
iret
sub
mov
fs
add
lcall
jae
test
icebp
adc
sqrtps
lods
pop
mov
repz
test
filds
addr16
loope
fs
mov
dec
shlb
scas
les
push
sbb
or
lods
push
nop
xchg
ljmp
xor
push
jmp
jne
cwtl
pop
jns
add
mov
lock
jmp
in
sahf
inc
pushf
in
dec
in
jae
jo
mov
pop
jl
cmpsl
or
xchg
cmp
movsl
stos
cmp
sbbl
add
in
xor
cmc
pop
cmpsl
fucom
fstps
cmp
push
inc
mov
pop
out
or
pslld
ret
lcall
enter
add
lret
pop
cmc
or
adc
jecxz
nop
cmc
mov
cmpsb
lea
mov
sarl
jnp
ficompl
lret
ljmp
push
in
sub
xchg
shlb
movb
dec
aam
cmp
adc
popa
in
cmp
ffree
shll
imul
push
ljmp
ret
scas
ret
xor
js
adc
repz
pop
fisubrl
inc
je
icebp
mov
mov
or
inc
pusha
int
pop
xchg
or
sbb
xor
mov
fcoml
cmpsb
adc
inc
test
and
ja
push
lock
cli
js
dec
mov
xchg
jnp
sbb
add
inc
ret
sub
mov
movsb
mov
mov
xchg
jp
leave
fsubr
out
add
jno
or
fwait
pop
inc
xlat
aaa
int
cmp
push
adc
in
jg
dec
adc
lcall
cmp
sub
xlat
imul
xor
dec
pop
fwait
mov
mov
sbb
cs
enter
xor
lret
xor
cwtl
pop
cmp
lds
mov
int3
or
sub
sbb
xchg
sub
outsl
or
insb
sub
mov
lods
stos
aaa
loopne
lods
pop
shlb
fldcw
rcr
jmp
lods
pop
js
mov
jns
ja
in
sti
adc
mov
fcoml
jns
xchg
lea
inc
test
int
popf
std
add
cmpsb
int3
arpl
ja
inc
int
aaa
pop
sarl
loope
in
pop
loopne
push
adc
sub
jle
xchg
rorl
or
add
or
out
cmp
inc
jmp
and
dec
addr16
push
and
shll
movsb
pushf
push
jle
in
cmp
dec
push
gs
call
mov
insb
jg
aad
sub
ljmp
pop
cwtl
xchg
lahf
jo
stos
pop
push
dec
mov
mov
mov
fmull
repnz
jg
add
push
cmp
jmp
or
jecxz
sbb
jnp
sahf
inc
pop
negl
sbb
sbb
pop
cmp
cmp
push
ror
pop
ljmp
pop
sarb
mov
push
fdivrl
outsb
mov
aad
mov
sti
cmpsl
cmp
jecxz
or
imul
fwait
divb
cmp
add
sub
data16
hlt
jmp
fstpl
sti
add
shr
add
adc
mov
mov
mov
fnstsw
mov
and
or
push
jl
stos
cltd
xlat
xchg
xor
push
je
and
add
add
mov
mov
sbb
fstpl
push
push
pop
dec
mov
test
sbb
push
icebp
data16
sbb
push
rorb
push
and
push
push
inc
pop
loope
in
and
add
loope
cs
dec
scas
inc
clc
sti
pop
icebp
rolb
dec
lods
and
cmpsb
daa
adc
movsb
xchg
sar
loopne
adc
xor
test
outsb
in
clc
inc
and
iret
sbb
addr16
push
int3
cmp
das
repz
sub
sbb
cmpsl
out
mov
scas
jns
inc
xor
dec
sbb
scas
lods
dec
inc
push
and
pop
jbe
adc
inc
rolb
test
mov
popf
pushf
es
jne
push
add
jg
lods
mov
mov
fcmovbe
inc
aad
cmp
stc
test
mov
xchg
and
js
sub
mov
add
add
cmp
call
gs
pop
fmul
jbe
add
sar
push
pushf
lds
dec
or
add
jmp
adc
loopne
xchg
dec
and
push
cli
sub
jb
push
out
add
stc
or
add
mov
repnz
lcall
test
es
out
outsl
mov
lret
or
int
je
mov
aaa
jp,pt
loopne
ljmp
pop
adcb
fisubrl
clc
xchg
dec
push
out
mov
xchg
cli
loope
fwait
in
xor
jne
lret
mov
js
sub
mov
sub
cld
test
in
nop
mov
stos
daa
incl
movsb
or
stos
jo
int
pop
out
pop
pop
sub
scas
jbe
lret
mov
cmp
or
inc
cmp
outsb
gs
ficoms
jl
xlat
pop
insb
jg
fldl
enter
sbb
cmc
cmpb
enter
mov
icebp
pushf
cmp
ret
mov
pushf
aam
mov
mul
mov
movsl
lock
sbbb
out
dec
jae
cli
pop
scas
imul
mov
xchg
test
jle
movsl
or
out
mov
push
jg
orb
out
xchg
add
test
dec
jl
add
enter
repz
inc
test
sub
addr16
adc
and
mov
js
int
push
testl
imul
add
jbe
insb
out
xor
ret
sub
das
push
cmp
lahf
pop
lods
fdiv
mov
mov
cmp
mov
xchg
nop
pop
lahf
sub
and
mov
xor
lcall
aam
outsl
dec
dec
ret
popa
int3
imul
cmp
into
or
mov
sub
cmp
lcall
pop
sbb
pop
daa
cltd
adc
mov
cmpsl
mov
idiv
loope
pop
sahf
sbb
mov
pop
call
sub
cmp
mov
test
mov
xchg
in
leave
test
push
out
and
lods
cmc
or
ds
mov
fsubl
int
ret
data16
outsl
push
out
fstl
hlt
fidivs
inc
imul
adc
cmp
bound
pop
imul
jns
lods
leave
push
nop
pop
mulb
dec
outsl
lea
push
jno
cmpsl
lret
fdiv
adc
or
aas
sbb
in
mov
arpl
lcall
sbb
jnp
int3
push
adc
xchg
addr16
js
adc
mov
push
jno
mov
lock
fnsave
cltd
lods
insl
xchg
and
enter
inc
lea
enter
mov
adc
push
adc
fldenv
mov
popa
hlt
push
ljmp
sbb
mov
fs
sub
mov
stc
vpunpckhqdq
jge
or
inc
div
adc
lods
jl
mov
dec
push
or
cmpsb
jnp
add
sbb
dec
xchg
push
cmp
jb
dec
push
pop
sbb
dec
xorb
scas
fisubs
add
stos
stc
hlt
mov
sub
std
add
in
out
cmp
leave
adc
push
fadds
lds
jp
adc
push
mov
lahf
pop
lods
cmp
mov
lcall
sbb
adc
dec
push
ja
sub
test
lods
insl
sbb
imul
mov
mov
lcall
inc
mov
add
sti
lcall
jbe
inc
dec
push
popf
pop
test
test
out
ffree
shll
imul
push
ljmp
mov
jmp
into
fcoml
shl
stc
mov
dec
enter
pop
mov
pop
jbe
add
pop
lret
out
mov
inc
ret
sub
notb
movl
mov
mov
std
add
cmpsb
and
push
lea
lahf
mov
shll
pop
bound
ds
mov
std
cld
test
nop
mov
jg
add
int3
mov
jae
fsubr
lods
jecxz
dec
sbb
je
push
cwtl
sub
aaa
daa
movsl
push
fs
and
add
cmp
ja
filds
sbb
push
add
jge
jne
inc
mov
cld
pop
dec
gs
dec
lds
or
lods
stos
add
pusha
arpl
std
lds
out
sub
jo
and
enter
mov
aad
push
jbe
jb
jle
cmp
test
push
lock
add
mov
popf
test
pop
pop
push
mov
pop
mov
push
cmpsb
data16
cmp
mov
adc
lretw
into
loope
lods
cmp
aam
mov
jle
dec
push
mov
add
push
es
pop
fmull
cmc
inc
xchg
and
jnp
sahf
and
pusha
jae
dec
xchg
bound
xchg
sbb
cli
pop
loopne
ja
frstor
inc
or
imul
stos
in
popf
mov
add
es
lahf
fildll
nop
adc
dec
icebp
shrl
push
jmp
in
xor
fisubrs
cmp
lcall
mov
xor
xor
stos
push
jne
pop
jge
mov
inc
addr16
cs
xchg
lock
sbbb
arpl
mov
rcrl
lods
push
xor
leave
fldcw
xchg
and
mov
xchg
mov
mov
lock
shll
push
test
pop
movsl
jmp
ljmp
push
pushf
xchg
dec
lret
aaa
mov
jp
pusha
pop
cmp
dec
lret
into
and
cli
or
jl
xchg
xchg
sub
inc
push
xchg
pop
cmp
data16
outsl
push
out
fstl
hlt
ljmp
mov
xchg
cli
mov
mov
loop
xchg
inc
or
inc
sar
and
leave
das
fcoms
adc
jno
sub
dec
xchg
or
mov
inc
icebp
int
xchg
je
popf
xor
fidivl
push
pop
pop
sub
push
bound
jo
loopne
shl
aam
mov
adc
ret
imul
mov
daa
jae
les
test
inc
shll
add
ds
sbb
xor
xor
mov
lods
mov
xor
sub
int3
adc
xchg
movsl
lock
mov
dec
sahf
jb
xlat
mov
mov
dec
subps
dec
int
sub
cmc
aam
xchg
cmc
and
mov
repnz
fdivs
sub
or
adc
sub
cld
out
std
pushf
dec
test
dec
push
and
or
xor
fmul
pop
add
fisttpll
bound
cmp
dec
push
rcr
cs
stos
mov
mov
mov
fstpt
je
call
sahf
mov
adc
cmp
in
add
out
adc
adc
pop
cmp
mov
cmp
iret
lods
call
insb
in
ds
in
loopne
push
pop
gs
inc
mov
inc
mov
or
lds
sub
ficoms
xor
movsl
inc
pop
sbb
loope
es
or
xchg
movsl
ficomps
inc
loope
nop
dec
pop
sahf
test
adcb
aad
pop
insb
or
xchg
xor
dec
fwait
scas
xor
iret
in
sbb
nop
pop
imul
in
mov
mov
int
cwtl
push
mov
jl
cltd
in
xchg
lods
and
xchg
sbb
les
mov
sub
fadd
es
cmp
jl
push
cmpl
fnstcw
jecxz
pop
mov
loope
jbe
push
test
hlt
je
push
inc
inc
mov
sub
in
lock
cltd
movsb
data16
mov
lods
inc
sub
jnp
or
xchg
and
xor
add
mov
sub
mov
and
dec
or
push
or
mov
sub
jo
add
stos
ja
xor
sub
aam
mov
pop
in
add
fisttpl
lods
sub
out
xchg
mov
inc
inc
cmp
lock
stos
jl
pop
int
or
pop
int
mov
popa
and
cmp
inc
jecxz
stc
cld
mov
arpl
sbb
psllq
xchg
jg
mov
dec
or
mov
inc
and
addr16
dec
ret
inc
sub
stc
fstps
loop
push
push
outsb
pop
add
ja
jns
xchg
adc
sbb
mov
lods
lret
cmp
adc
fimuls
push
push
jecxz
sub
out
test
shlb
xor
movsb
or
push
test
ja
xlat
aaa
int
cmp
mov
rcr
out
addl
js
adc
lods
mov
rcl
call
pop
imul
add
xchg
push
xchg
ret
sub
pop
enter
enter
out
or
iret
cltd
xchg
fisttpl
push
mov
adc
mov
push
daa
daa
or
inc
pop
clc
jae
or
scas
or
ret
pop
aaa
push
loopne
out
ljmp
jnp
aam
pusha
xchg
pushf
dec
or
aam
push
scas
xchg
and
mov
jns
mov
push
pop
fsubp
adc
fcmovnb
out
stos
jne
and
sbb
decl
inc
sti
js
frstor
xor
dec
push
mov
mov
xor
mov
stos
cmp
dec
adc
pop
mov
sbb
cwtl
in
inc
aam
or
pop
jmp
xor
xchg
je
bound
dec
push
pop
lcall
loopne
adc
cmp
ja
add
adc
nop
idivb
push
sbbb
sub
or
inc
ret
pushf
sub
in
bnd
inc
xlat
scas
push
inc
in
mov
mov
mov
dec
xor
sub
push
xchg
outsb
repz
xchg
fcomp
or
add
dec
addb
mov
loope
test
mov
fwait
popa
movsb
jb
sub
sarb
loope
inc
mov
mov
std
sbb
into
or
ds
rcrb
mov
mov
xchg
call
clc
ret
adc
mov
add
push
pop
jge
xor
inc
fcomp
pop
pop
mov
dec
cmpsb
pxor
fimuls
lcall
dec
loopne
out
inc
push
data16
lods
pop
jne
popf
and
enter
mov
stos
xchg
xchg
xchg
insl
iret
dec
xor
xchg
cmpb
lods
in
movsb
cltd
xchg
jb
in
inc
mov
and
lods
sbb
adc
or
test
pop
lods
sub
in
inc
inc
adc
fnsave
mov
ret
cld
scas
sbb
jb
or
scas
push
mov
fisubl
xor
sbb
popf
iret
sbb
sub
mov
bound
inc
cwtl
jle
movsl
dec
ds
push
ffreep
sub
xchg
nop
lock
jle
ljmp
pop
push
sub
aaa
push
push
pop
xchg
push
nop
and
pushf
dec
popa
or
or
cs
inc
fmuls
callw
lock
pop
js
adc
test
je
fstl
hlt
fidivs
jle
jge
loop
and
mov
push
loopne
shlb
xor
mov
pop
inc
or
adc
mov
push
adc
mov
enter
cli
outsb
rcl
std
cmp
adc
mov
test
push
aaa
int
cmp
shll
outsb
in
insl
mov
cwtl
mov
push
ja
ds
add
jge
sub
outsl
clc
cltd
imul
sbb
cmp
mov
lahf
imul
outsl
add
mov
xchg
sub
inc
bts
cmp
sti
test
les
adc
cld
imul
jno
clc
stos
repnz
fidivs
pop
fwait
xchg
stc
jge
add
cmp
xor
push
mov
dec
out
in
imul
dec
push
push
int3
or
cmc
cmpsb
mov
loop
enter
mov
sbb
pop
in
test
pop
dec
mov
sti
ja
sbb
or
jg
adc
int
xlat
push
insl
test
jbe
cld
pop
bound
in
mov
je
inc
popf
pop
jecxz
test
in
testb
shr
lock
imul
inc
shr
loop
add
neg
in
shl
mov
addr16
js
adc
sbb
mov
std
mov
and
xchg
xor
stos
push
pop
loope
imul
fwait
pop
insb
dec
test
out
mov
iret
pushf
test
movsl
adc
push
mov
xor
rcrb
jg
mov
cmp
pop
sub
mov
cmp
sub
fldenv
call
or
sub
imul
pop
repz
jl
out
xchg
jg
sbbl
inc
fmulp
out
adc
icebp
jge
jno
js
push
jb
loope
in
mov
ja
shl
mov
push
inc
imul
stos
imul
pop
inc
push
testl
fldcw
xorl
or
mov
rcr
inc
lahf
fisubrs
popa
das
add
mov
out
rcrl
addr16
ret
xchg
push
mov
push
rorl
xor
pop
arpl
cmp
xor
sti
fdivp
shll
pop
fmul
jbe
mull
jnp
sbb
cmpsl
mov
iret
pop
aad
es
imul
js
push
ffree
mov
loop
in
push
xor
and
call
push
sarl
dec
xchg
and
xor
sub
and
ljmp
enter
out
in
imul
dec
push
push
int3
int
cmc
cmpsb
mov
loop
enter
mov
sbb
pop
in
test
pop
dec
mov
xchg
and
sti
ja
sbb
or
jg
je
jecxz
js
int
lar
aas
lret
mov
push
inc
loop
in
xchg
out
pusha
cmp
jecxz
fldcw
xor
inc
sbb
movsb
addl
mov
sbbl
push
mov
cltd
pop
in
scas
jmp
mov
std
pop
mov
daa
insb
jns
cmp
in
shrb
mov
incl
add
cltd
lods
insl
xchg
and
enter
sti
mov
or
fwait
popa
cmp
shll
movsl
repnz
cli
std
mull
xor
fcmovb
mov
or
fnstenv
ja
cld
pop
std
pop
inc
lcall
push
gs
in
mov
push
pop
cmpsl
clc
sub
mov
sub
shl
out
and
sbb
dec
sub
in
clc
and
mov
jne
push
push
push
sub
xchg
xor
add
xchg
hlt
mov
mov
lcall
loopne
fsubrs
gs
in
jnp
subb
iret
inc
adc
inc
aaa
and
pop
mov
pop
decb
das
movl
rorb
or
inc
jo
jnp
faddp
rcll
mov
jnp
add
ljmp
or
add
mov
sub
jecxz
cwtl
xor
push
fidivs
inc
call
gs
pop
fmul
jbe
in
cltd
dec
insl
mov
mov
outsb
lret
jp
pop
xchg
bound
cwtl
xchg
jo
inc
imul
imul
adc
ljmp
scas
sbb
lahf
sbb
insl
je
dec
mov
pop
lcall
inc
out
std
jmp
nop
push
xlat
and
pop
outsb
negb
jmp
sti
pop
and
add
xor
pop
xchg
adc
jp
int3
jae
clc
xchg
loope
outsb
stos
jp
push
movsb
push
jg
cmp
dec
sub
mov
pop
inc
das
ss
lods
enter
fistpll
mov
adc
jb
ds
div
lea
outsb
lcall
jns
add
xchg
popf
mov
or
std
ficoml
sub
lods
aad
cltd
xchg
clc
xor
push
das
dec
dec
inc
adc
leave
mov
popa
dec
enter
sbb
pop
iret
pop
pop
js
jbe
lea
or
dec
lea
dec
les
daa
in
sub
addl
pop
cwtl
sub
push
mov
stos
mov
sbb
xor
jnp
jnp
paddusw
aaa
push
pushf
repnz
cmc
mov
stc
or
and
cmp
and
sbb
iret
push
cmpsl
sub
mov
popf
insb
and
and
cs
jg
push
repz
jge
inc
mov
dec
pop
pusha
jle
xor
lcall
testb
push
ss
xchg
pop
fwait
mov
mov
ljmp
es
fimull
xlat
mov
rorl
stc
or
or
addr16
and
inc
rolb
sub
scas
push
cmp
imul
add
addl
das
mov
aaa
loop
mov
mov
mov
sbb
adc
aas
paddsw
leave
inc
pop
mov
mov
cld
test
cmp
inc
push
inc
hlt
adc
lds
sub
pop
in
or
mov
repz
outsb
cli
cmp
filds
or
mov
lods
daa
divb
fsubl
sub
in
cwtl
orb
adc
out
sub
cmpsl
and
fdivr
jp
inc
out
or
in
inc
adc
int3
sub
inc
mov
loop
xchg
aaa
ret
xchg
pop
test
sub
shlb
fdivrp
lods
gs
pop
adc
ss
pusha
pop
sub
sub
bound
rclb
test
addr16
fwait
into
cmp
repnz
push
and
ret
xlat
imul
repz
shll
pop
fmul
jbe
hlt
jns
xchg
xorl
jnp
icebp
sbb
dec
xlat
ja
sbb
fldcw
adc
orb
adc
sub
mov
ret
pop
aam
fsubs
pop
xchg
andl
test
test
pop
movsl
cltd
mov
dec
and
inc
inc
test
lods
mov
pusha
pop
sbb
cli
xor
jl
mov
enter
aaa
addr16
data16
dec
jne
cs
xor
lret
lret
rol
dec
js
ftst
cmp
std
jae
add
popf
mov
inc
fisttpl
jecxz
aaa
cmpsb
jno
notb
ds
scas
inc
mov
inc
pop
orb
icebp
pop
xor
rcrl
add
outsl
test
out
insl
jmp
xchg
add
mov
xor
ret
pop
jbe
push
cwtl
dec
in
lret
hlt
push
movsb
stos
push
repnz
pop
std
pop
cmp
jmp
cmc
aam
andb
cmp
cwtl
jmp
and
fisubrl
cli
mov
xor
lea
mov
sarb
jb
addr16
mov
pop
ljmp
inc
jnp
mov
fists
movsl
cmpb
shr
dec
insb
ret
cmc
jae
dec
test
inc
lahf
insb
dec
lods
mov
repnz
jnp
jno
xchg
mov
pop
das
stc
jnp
dec
jae
stos
push
fcompl
adcb
fsubl
enter
adc
mov
call
fwait
lret
lahf
mov
iret
fildll
enter
xlat
jmp
inc
cmp
fistl
cltd
xchg
jo
stos
push
inc
sti
pop
fdivs
sbb
cltd
les
jne
movsb
ss
xor
or
pusha
fdiv
rcr
bnd
push
mov
insl
pop
cmp
nop
into
data16
ror
data16
cmp
lea
cmp
inc
xchg
addb
es
pop
mov
outsb
mov
and
ss
dec
push
mov
icebp
loopne
mov
mov
or
outsl
inc
fmulp
mov
sahf
cmp
out
insl
imul
ljmp
jl
mov
mov
movsb
sub
add
cld
pop
mov
in
das
and
into
ljmp
cmp
mov
addr16
adc
iret
xor
dec
ds
xchg
fs
mov
addb
inc
das
insl
dec
daa
xchg
int
hlt
inc
jmp
adc
flds
call
outsl
pop
push
sarb
mov
xchg
sub
add
cmp
pop
mov
pop
inc
adc
andl
ja
pop
sbb
xchg
xor
mov
sbb
or
mov
aam
mov
jmp
xchg
ret
jnp
sub
fwait
scas
aaa
sti
sbb
enter
stos
mov
insl
pop
ljmp
mov
int
xchg
aaa
shlb
mov
leave
push
adc
or
aam
cmp
mov
add
mov
repnz
int
repz
pushf
cmp
xchg
out
cmc
xor
fnstenv
xor
or
leave
rorb
add
pop
xchg
lds
shll
push
sbb
xor
inc
push
sbb
push
addr16
imul
imul
loopne
movsb
sub
mov
mov
ss
mov
pop
and
repnz
pop
inc
icebp
adc
jb
adc
rorb
push
sub
bound
mov
and
mov
push
cmp
fidivl
mov
out
push
ja
ljmp
pop
sarb
push
popa
outsl
push
in
dec
gs
pop
in
daa
pop
xor
cwtl
fdivl
mov
and
fidivrl
or
sahf
test
dec
xor
sub
int3
roll
mov
xor
popa
fmulp
pop
dec
sub
cltd
aaa
xchg
sbb
fcomps
sub
into
enter
lock
cmp
inc
std
in
inc
imul
or
mov
mov
mov
int
sbb
js
sti
data16
push
lcall
sub
dec
les
jbe
fbstp
mov
pop
dec
dec
pop
sub
and
in
and
jbe
adc
into
or
cmpsb
test
inc
dec
aam
rcrb
or
and
add
cwtl
mov
pop
mov
jecxz
dec
out
and
pop
in
andl
into
add
repnz
outsb
lods
xchg
cmp
ds
loopne
in
mov
out
sbb
loop
lahf
jmp
fdivrl
fnsave
mov
jae
jmp
jmp
cli
pop
mov
push
pop
add
push
push
inc
arpl
call
xchg
iret
add
fistl
jo
mov
aaa
pop
jnp
into
dec
xchg
stc
xor
mov
pushf
lahf
mov
repnz
push
xchg
push
xor
gs
dec
and
xor
stos
push
push
int3
pop
xchg
leave
dec
inc
xor
pop
sub
clc
test
mov
mov
inc
in
scas
pop
ss
jae
cli
adc
cs
iret
inc
fisubrs
cltd
jecxz
mov
add
adc
mov
bound
xchg
sbb
sbb
xchg
xlat
ljmp
xor
and
out
insb
mov
and
xor
aam
cld
inc
test
in
fimuls
cltd
inc
outsl
cld
xlat
imul
andl
xchg
in
je
push
loop
xchg
pusha
jae
sub
add
mov
test
xchg
push
xlat
and
cli
ret
loop
mov
insb
inc
add
jo
out
insb
movsl
cmp
in
testl
mov
bound
pushf
fistl
insl
cmc
int3
imul
dec
cmpsl
out
out
push
xor
movsb
cmpl
fld1
stos
and
cmp
inc
in
loopne
and
div
add
mov
sbb
sahf
jp
inc
pop
pop
xchg
jl
lret
xor
dec
lock
bound
iret
xorl
xor
lds
stos
mov
dec
stos
inc
push
fsubr
out
mov
xor
inc
xlat
aaa
int
cmp
shr
add
dec
jns
and
mov
xchg
arpl
icebp
test
adc
mov
call
lcall
fcomps
dec
mov
and
out
vcvtps2pd
movsl
mov
hlt
or
push
mov
clc
out
cmpsb
iret
cmp
or
push
cltd
loope
push
push
pop
sar
and
xchg
add
xchg
or
xchg
lret
mov
or
xor
xchg
xchg
das
es
fstl
cmc
addr16
mov
and
pop
js
mov
pop
sub
add
mov
in
fidivl
sbb
sub
adc
mov
fcomp
jns
pop
movl
shrb
idivb
mov
push
jecxz
or
add
jbe
insb
out
xorl
push
fs
roll
or
dec
mov
orl
rcrl
sub
divl
or
sub
sbb
mov
lods
jl
jmp
lcall
sti
repz
enter
pusha
cwtl
stos
mov
dec
fwait
scas
mov
icebp
loope
sbb
icebp
jge
mov
mov
xor
sub
int3
shll
idivl
sbb
cltd
sarl
fstp
movsb
jo
fsubrs
lahf
xor
pop
jo
jb
adc
inc
dec
xchg
sbb
add
pop
dec
inc
scas
dec
or
mov
insb
cmp
divb
out
mov
dec
sbb
icebp
cltd
fisubl
mov
push
movd
cmp
sbb
cli
popa
push
test
iret
sbb
test
mov
arpl
ljmp
cmp
out
inc
lock
sarb
sti
mov
hlt
pop
jg
mov
stc
mov
cltd
pop
jb
andl
or
xchg
push
push
mov
outsb
call
add
insl
cmp
jne
orl
xlat
dec
gs
pop
leave
or
inc
xlat
arpl
cltd
mov
mov
xor
mov
testb
jge
popa
in
cmp
ffree
shll
imul
push
ljmp
cmc
pushw
mov
push
mov
cwtl
and
pop
jl
dec
fldl
scas
outsl
mov
pop
pop
mov
mov
push
sbb
sbb
jns
adc
mov
sub
inc
ljmp
fwait
jae
xor
mov
pop
mov
mov
data16
lea
cmpsb
sbbl
cmp
loopne
pop
push
movsb
push
ficomps
shrl
mov
inc
xrelease
jno
xchg
sbb
sbb
lcall
jne
and
repnz
insb
inc
popf
mov
dec
add
hlt
in
jne
cmp
and
scas
shll
xor
adc
daa
pop
fisttpll
push
test
bound
mov
outsl
fnsave
cmpsl
jg
loope
push
mov
popf
mov
stos
jg
xchg
outsl
mov
pop
jmp
daa
or
mov
mov
stos
fnstcw
mov
jl
mov
faddp
sbb
mov
pop
imul
mov
or
aas
dec
jne
sub
sub
cli
inc
aam
mov
jmp
pop
cmp
out
lds
adc
mov
sahf
mov
fwait
adc
or
loopne
popa
je
mov
testl
jnp
xchg
movsb
cmpsl
xchg
in
lds
pop
ds
shll
orb
cmpsl
mov
xchg
and
mov
push
aaa
int
cmp
push
fisubl
adc
lahf
sub
dec
out
ror
lcall
ss
insb
jg
dec
inc
add
int3
imul
xlat
test
enter
sti
mov
or
fwait
push
pusha
cmp
bound
xchg
inc
sti
and
cli
std
mul
push
mov
xchg
xchg
adc
sub
jp
sub
jg
mov
fwait
jae
pop
pop
int3
push
loope
mov
mov
pusha
imul
ss
inc
xchg
mov
or
sbb
loope
push
out
std
add
inc
rcrl
jp
nop
cmpsb
cmc
rorb
fst
mov
jmp
mov
cld
sbb
adcl
push
outsb
and
mov
shll
js
xchg
and
daa
push
addr16
sahf
clc
test
dec
cli
jge
loope
push
out
bound
fisubrl
mov
push
or
cmpsb
lods
adc
ds
popl
jo
decl
in
loop
loop
or
xor
dec
xor
lahf
test
xchg
xchg
insb
xlat
jecxz
sbb
cwtl
fwait
scas
xor
call
mov
mov
loopne
mov
jmp
push
adc
xchg
inc
cwtl
das
adc
movsl
mov
or
inc
push
pop
hlt
jp
pop
je
insl
jo
sub
test
jb
mov
push
in
das
in
adc
repz
mov
dec
dec
pop
and
xchg
pop
and
mov
mov
dec
jb
call
mov
fisubl
insb
scas
adcb
or
inc
and
imul
mov
mov
or
xor
jnp
in
push
test
fucomp
xchg
scas
cmp
aam
push
repnz
add
fnstsw
popa
aaa
cltd
pop
jb
xchg
movsb
dec
mov
or
and
lea
mov
dec
push
arpl
adc
sti
mov
imul
sub
add
imul
ret
mov
fwait
xchg
pop
or
add
lcall
or
inc
adc
pop
fisubrl
cltd
xor
inc
cld
out
dec
push
std
adc
es
inc
push
in
dec
pop
in
scas
sub
sub
fnstenv
outsl
cmp
pop
add
mov
sahf
mov
mov
fsub
and
mov
or
call
xchg
mov
lea
jae
xchg
je
loopne
out
mov
xchg
push
jecxz
mov
mov
lret
xchg
xor
mov
aaa
mov
push
js
mov
xor
lea
xchg
lret
inc
cmpsb
adc
aas
popa
fsubrs
inc
jne
fmuls
jb
mov
sbb
and
cmpsb
push
lds
js
pop
add
lret
push
popf
cmp
and
mov
jg
enter
fldl
imul
sub
xchg
aas
jmp
nop
adc
cld
cmp
lret
popa
and
adc
push
xchg
lods
add
add
add
pop
xchg
dec
pop
pop
sahf
ret
cwtl
in
pop
push
cld
pop
shl
cmp
push
rorl
inc
sub
mov
mov
into
loope
lods
sub
mov
decl
loopne
push
in
outsb
cmp
dec
xchg
jp
fwait
cmpsb
jae
dec
mov
adc
cli
repz
data16
hlt
push
mov
icebp
popf
fwait
stos
imul
pusha
mov
jl
push
jnp
js
mov
loope
adc
inc
xchg
fisttpl
push
sub
push
popa
das
sub
and
pop
inc
stos
and
cmp
pop
in
mov
xor
sahf
ret
cmp
push
mov
jle
lcall
jb
mov
inc
mov
outsl
mov
std
add
enter
xor
scas
cli
adc
sti
add
adc
cmp
or
pop
popf
adc
xchg
xchg
push
cmpb
push
ret
sahf
push
inc
aad
std
clc
repz
pminub
pop
mov
ret
fisubrs
sub
pop
cld
sti
add
shl
push
mov
dec
loope
adc
adc
add
pop
ja
lock
leave
enter
mov
pop
or
inc
inc
fdivl
addr16
adc
fldcw
mov
push
mov
push
inc
jg
xchg
test
call
inc
pop
pop
ffree
pop
movsl
insl
mov
loope
add
sub
or
jmp
sub
push
js
pop
inc
dec
popf
call
cld
addr16
jae
sahf
push
xchg
ja
mov
stos
test
xchg
lahf
ficoms
lods
les
test
or
lret
inc
add
jle
jo
lcall
es
sub
dec
push
outsb
aaa
movsl
mov
adc
dec
sarb
lods
sub
data16
cltd
sub
add
les
mov
pop
push
xor
lret
repz
cmc
clc
mov
jbe
or
and
test
sahf
adcl
sbb
out
xlat
rcrb
loopne
dec
inc
mov
js
xchg
lods
mov
mov
aad
cmp
xor
mov
idivb
cmpsl
jb
out
xor
ret
sahf
cmc
dec
inc
push
scas
mov
add
jne
in
lock
aad
pop
testl
fcmovne
aad
jecxz
lds
repz
mov
mov
rcrb
test
imul
cmp
ret
int3
test
fstps
into
jbe
add
les
sub
xor
jmp
test
dec
xor
sub
int3
nop
mov
in
dec
call
inc
mov
int
mov
xchg
pop
mov
mov
xor
xorl
clc
repz
jge
inc
cmc
ds
leave
test
scas
fdiv
mov
vpmacswd
out
adc
rol
std
leave
push
data16
outsl
push
out
fstl
hlt
ljmp
mov
adc
dec
pop
stos
dec
push
inc
fisubrs
add
fldcw
mov
test
in
mov
subl
out
adc
inc
in
lock
movsb
sbb
leave
xor
jecxz
mov
out
sti
jp
decb
cmp
popl
jnp
jge
ss
les
jle
push
inc
in
push
hlt
jge
leave
inc
add
fcmovb
mov
addr16
xor
mov
sbb
js
push
jbe
lock
inc
adc
sub
test
mov
mov
in
lods
in
lock
popf
fwait
mov
mov
fstpl
mov
into
pop
and
sahf
jmp
xchg
mov
and
dec
inc
mov
int
daa
mov
int3
or
sbb
cmc
aas
out
pop
xchg
loope
outsb
pop
push
pop
pusha
pop
mov
sahf
mov
imulb
js
mov
imul
test
lret
sti
sbb
or
or
cmpsl
xchg
or
inc
or
adc
and
popa
lods
xor
and
scas
pand
addr16
stos
lea
cmpsb
mov
sub
test
xor
dec
bound
sti
fdivp
shll
pop
fmul
jbe
insb
jno
inc
out
sub
xor
xor
popf
pop
lcall
sub
movsb
push
aad
das
pop
in
cvtps2pd
xchg
test
pop
fxtract
jmp
jge
mov
lock
jmp
cli
inc
fcmovnb
int3
pop
loope
push
xchg
fistps
decl
jge
loopne
sbb
sbb
and
ret
mov
cmpb
add
push
dec
mov
sub
cmp
orl
cmc
mov
sbb
xchg
add
idiv
stos
ja
xor
mov
lods
adc
orl
stos
mov
aad
icebp
push
imul
in
xor
mov
filds
es
add
popf
jbe
jnp
push
sbb
sbb
dec
sbb
pop
adc
xchg
shl
ds
cmp
aam
cmp
add
jle
cmp
cwtl
out
lock
ja
pop
sbb
xor
test
fstl
out
jae
mov
faddl
cs
mov
outsb
enter
adc
stos
lahf
add
nop
sahf
lea
ficompl
imul
jmp
mov
push
rep
jge
pop
imul
jl
out
xchg
jg
mov
out
cmp
sbb
push
out
sti
lock
push
pop
inc
xchg
lods
jmp
in
mov
shll
cmc
sahf
mov
cs
hlt
mov
lods
lret
cli
xor
jnp
dec
es
sub
fdivrl
add
adc
push
or
dec
inc
inc
push
out
pop
std
cmp
and
in
fwait
or
jbe
and
aaa
jno
in
std
sbb
push
push
iret
lods
sub
fstpt
and
xor
pop
shl
lret
ljmp
push
sub
add
adc
jbe
mov
mov
add
pop
out
lea
aad
jecxz
inc
adc
in
jl
insb
test
dec
inc
mov
rorb
mov
adc
sbbw
mov
out
stc
pop
adc
movsb
xor
xor
lret
lock
scas
mov
cmp
jno
inc
and
sub
fwait
sub
dec
pop
pusha
jl
cmp
fidivrl
cmp
dec
xchg
outsb
jmp
and
popa
mov
add
scas
cld
mov
cwtl
sbb
inc
inc
dec
lcall
mov
add
cltd
or
pop
adc
or
icebp
out
pusha
ret
ds
test
adc
or
fs
sbb
aas
xor
mov
das
outsb
push
loop
xchg
cwtl
xor
stos
push
je
decb
int3
adc
movsl
sahf
push
test
push
sbb
mov
xchg
mov
gs
mov
push
pop
sub
into
fidivrl
scas
push
sbb
lock
rcrl
pop
mov
negl
sub
into
mov
insb
cmp
xlat
ljmp
enter
pop
bound
cld
lds
and
jo
and
fildl
sub
xor
adc
in
jae
das
push
sub
xor
int3
mov
add
mov
sbb
stos
in
std
loopne
testb
xor
and
ret
arpl
add
cld
in
pusha
mov
add
popf
ds
or
stc
cmp
xchg
out
shr
cmp
pop
xchg
fwait
mov
sti
and
sub
std
inc
inc
lret
scas
pop
jno
leave
lcall
shll
cmp
sbb
cs
push
cmc
fwait
mov
or
mov
mov
mov
sbb
test
in
xor
fbstp
addr16
testl
ljmp
sbb
pop
mov
inc
pusha
stos
jb
mov
mov
in
mov
add
inc
pop
outsl
jmp
jnp
aad
mov
jne
clc
in
mov
cltd
adc
xchg
ror
ret
jmp
inc
fstl
hlt
fidivrs
mov
js
xchg
or
cmpb
cs
hlt
inc
fisubrs
mov
cmp
dec
fcoml
xorl
jo
push
inc
add
mov
or
pop
lods
xchg
shrb
inc
cmc
dec
int3
mov
jp
fcmovu
dec
xor
push
lds
cmpsb
cmp
cmp
shll
mov
add
mov
call
or
aas
mov
popl
inc
inc
dec
orps
clc
rorl
movsl
xchg
cmp
dec
les
fwait
in
push
mov
xchg
mov
psubusw
xchg
sub
outsl
or
insb
sub
dec
loopne
mov
xor
sbb
dec
sbb
mov
std
lret
pop
mov
pusha
out
lods
sub
adc
mov
sbb
fcompl
aaa
je
inc
pop
rcrl
xchg
loope
outsb
ljmp
stos
sarl
js
jg
imul
leave
rol
arpl
movsb
sti
sbb
add
xchg
mov
movsl
xor
std
mov
pop
outsb
or
mov
and
cmp
xchg
ja
or
push
or
cli
js
adc
lods
jl
fildl
pop
sahf
push
jg
mov
stos
in
fs
inc
aad
push
jbe
in
pop
push
das
xor
lods
cmp
test
sub
xor
sub
fwait
xor
loopne
imul
or
fdivrl
lcall
pop
mov
aaa
xchg
pop
vcvtps2pd
pop
adc
test
push
pop
add
mov
jae
mov
lret
adc
pop
mov
xchg
dec
icebp
or
mov
lock
mov
jle
pusha
mov
imul
icebp
lock
pop
cld
ret
lret
xchg
out
popf
fldcw
xor
mov
jns
fs
outsb
cmp
int3
inc
xchg
mov
andl
sbb
mov
dec
mov
add
fidivrl
and
inc
or
and
fildl
aad
out
inc
cmp
xchg
adc
loop
imulb
sub
decl
nop
or
mov
push
push
push
inc
sti
ss
imul
sbb
idiv
inc
iret
out
sbb
inc
and
or
pushf
cld
filds
jne
iret
test
hlt
sbb
xor
fcmovb
and
sub
jg
loop
fcomps
inc
mov
xchg
or
sbb
sbbb
push
pop
xchg
hlt
aam
loop
cld
and
out
lods
mov
mov
in
inc
cli
pop
pushf
inc
push
gs
sbb
testb
rolb
and
inc
inc
fdivrl
jge
dec
and
mov
cltd
push
filds
xor
pop
cltd
imul
aaa
sbb
pop
ds
pop
add
sub
in
not
add
push
pop
cltd
pop
inc
mov
inc
ret
rclb
pop
pop
outsl
icebp
std
lahf
cmpsl
int3
int
fs
push
gs
cmp
les
es
mov
shll
lret
jmp
arpl
jg
addr16
adc
repz
xor
subb
inc
aam
mov
aam
lret
shll
imul
push
ljmp
lcall
mov
and
jnp
mov
loopne
push
mov
push
add
mov
repnz
jg
dec
shll
test
nop
cwtl
sub
and
xor
push
jecxz
mov
ret
jge
xchg
push
out
jecxz
mov
adc
jl
lret
mov
sub
cmp
jo
mov
inc
add
pop
cltd
xchg
sub
jp
test
cmp
push
data16
and
push
push
xchg
jge
push
push
loop
pop
movsb
jno,pn
push
mov
pop
inc
dec
pop
test
mov
sbb
sbb
imul
jae
jge
loopne
imul
add
popa
pusha
outsl
lret
jmp
inc
repnz
in
sahf
out
dec
mov
jmp
pop
shlb
sti
push
pop
sbb
cmp
cmpsl
inc
arpl
adc
add
pop
insl
scas
arpl
pop
pop
xor
loopne
pop
in
lret
mov
in
pushf
sub
mov
nop
pop
xchg
sbb
xchg
mov
sbb
sub
xchg
ss
sub
and
xor
cs
and
sbb
add
pop
lock
iret
mov
pop
jmp
loopne
fnstsw
rclb
inc
fldenv
inc
push
testl
fldcw
xor
ret
out
sub
mov
sar
pop
in
xchg
imul
pushf
ja
push
cmpsb
insl
xor
sahf
cli
or
cmp
fcomps
scas
call
mov
aaa
lcall
inc
pop
fsubrl
ljmp
mov
mov
xor
sbb
mov
notb
sub
icebp
dec
data16
dec
xor
jbe
lods
aaa
push
jecxz
jno
fsubl
aad
into
add
aaa
xchg
sbb
fcomps
js
push
xor
ljmp
aaa
mov
dec
mov
xchg
fnstsw
enter
mov
insl
lods
jl
test
in
pop
xor
dec
xchg
push
xchg
push
pop
dec
in
out
xchg
int3
movsl
int3
test
push
mov
das
jns
out
repnz
sbb
mov
cltd
mov
xor
es
adc
pop
fists
lods
enter
aas
std
or
icebp
adc
fstps
cltd
rorb
sub
jmp
cwtl
outsb
jno
push
pop
cmpsb
xor
or
icebp
mov
addr16
xor
inc
movsl
test
sbb
sub
cmp
fsubrl
aas
mov
push
cwtl
in
xor
int3
cmp
mov
and
mov
sbb
adc
sti
or
repnz
mov
pop
mov
or
fucom
test
test
dec
lods
dec
sbb
insb
or
into
pop
xchg
addr16
xor
jmp
mov
outsl
rolb
or
push
nop
jmp
mov
xchg
ss
sub
and
xor
out
jg
in
lcall
repz
push
addr16
jae
push
call
lds
jo
daa
xchg
stos
fdivr
push
les
mov
aam
sti
or
push
mov
lahf
fildll
pop
jb
ficoml
in
ja
pop
movl
pop
ret
sub
cs
lock
xor
mov
add
out
add
popa
pusha
das
mov
mov
enter
xor
lret
sub
iret
xor
fldl
sub
hlt
pop
jns
and
mov
movsb
icebp
cmpsb
mov
popf
in
hlt
jbe
jo
fadds
popa
sub
mov
mov
mov
rol
shl
mov
xchg
loopne
lds
add
ds
push
out
cmc
jmp
pop
cmp
repz
ds
push
popf
clc
and
rcr
sahf
mov
shll
inc
and
cltd
daa
mul
pop
or
sub
cld
mov
mov
rcrl
daa
out
rcll
xchg
inc
popf
ds
out
loopne
orb
mov
out
fsubr
shl
mov
addr16
js
adc
mov
fistpl
inc
daa
int3
test
cmpsl
lahf
inc
xor
xor
pop
out
add
ret
pop
sbb
sub
mov
inc
enter
addl
lret
jne
push
inc
pop
daa
adc
test
inc
inc
jg
xchg
in
cvtps2pd
pop
sub
xchg
sti
add
jne
pop
mov
leave
popf
jg
jbe
pop
js
shlb
sub
dec
or
fidivrs
cmpsb
push
push
int
xchg
cmp
rorb
pop
cs
adc
inc
into
dec
push
sbbb
pop
xchg
xchg
adc
fidivrl
int
xchg
jne
std
inc
loopne
out
insl
jne
mov
and
xchg
movsb
das
jbe
mov
outsl
pop
sbbl
jb
mov
rolb
inc
xlat
add
push
dec
rcrl
inc
cmp
push
lahf
jp
mov
ret
dec
mov
cltd
adc
aad
pop
fs
pop
pop
out
cwtl
mov
aam
loopne
push
pusha
mov
pop
repz
sti
lcall
mov
mov
xor
pop
sub
movsb
fidivrl
push
push
sbb
xor
pop
or
jae
sbb
push
andb
mov
sub
jmp
mov
jno
mov
pop
cltd
icebp
rcr
sbb
incl
into
in
sub
and
push
push
push
out
cmp
out
push
sub
int3
push
pop
xor
jbe
insl
stos
mov
clc
aad
and
mov
mov
pushf
fwait
mov
xor
adc
sar
mov
jo
jmp
xor
mov
xchg
repnz
push
xor
and
push
lahf
fisubrs
arpl
push
mov
cmp
data16
jno
in
sarl
out
add
insb
lods
sub
push
shll
rcl
scas
mov
mov
loope
sbb
insl
dec
push
push
das
iret
ror
jae
xor
and
outsb
sbb
jnp
leave
mov
jae
sub
cmp
xchg
sahf
in
bswap
pop
cmp
sti
mov
lahf
pop
jmp
jg
add
jecxz
scas
jp
mov
hlt
sbb
pop
mov
jmp
es
hlt
dec
out
cmp
xchg
sbb
out
dec
xor
push
sbb
ss
jns
inc
mov
sbbb
shll
aaa
mov
aam
inc
rcrl
lahf
jp
add
leave
pop
ret
loopne
jno
pop
fildll
xchg
xor
push
mov
add
test
ficomps
mov
mov
adc
jg
cmp
or
ror
add
rorb
pop
xchg
loop
insb
pop
push
adc
sbb
cmp
sahf
data16
dec
mov
mov
xchg
mov
sbb
cwtl
in
mov
mov
adc
and
jge
pop
loop
enter
arpl
movsl
xchg
and
inc
imul
lock
faddl
sbb
push
stos
xor
movzbl
mov
pop
dec
outsl
sbb
xor
bound
out
lret
into
push
mov
push
arpl
inc
mov
sub
stos
cs
sbb
cmp
cs
test
mov
lock
inc
xchg
fidivl
mov
jp
jnp
push
dec
idivb
mov
pusha
pop
int
jne
test
aad
jno
jp
stc
out
adc
push
and
stos
imul
out
mov
enter
add
mov
push
cmc
mov
out
mov
jno
sbb
leave
jmp
addl
out
add
je
push
xor
cmp
or
dec
fbstp
out
ror
nop
outsl
ficompl
mov
iret
jne
sarb
mov
cmpsl
jmp
sub
int3
pop
mov
negl
cmp
dec
enter
adc
rclb
cmpsb
mov
rorl
dec
mov
mov
lcall
dec
mov
test
push
sub
xchg
div
scas
int3
pop
adc
add
lcall
inc
xchg
sub
cltd
fcoms
aas
sbb
jno
jge
adc
add
pop
bound
push
dec
push
mov
sub
fsts
push
jb
stos
mov
xchg
sahf
adc
add
and
cmpsl
test
int3
and
popa
imul
or
loopne
outsl
dec
pop
lahf
jmp
mov
gs
cmp
xorb
and
jg
ffree
sub
imulb
and
push
sbb
std
enter
jmp
mov
jns
jne
notb
sbb
mov
push
ret
popa
nop
into
mov
jg
xchg
test
and
fcomip
int
in
scas
or
aad
and
cmp
repz
mov
xchg
movsb
and
add
fdivs
mov
xor
ja
pop
call
or
sbb
lahf
cmp
dec
push
mov
mov
and
jae
outsb
call
adc
sub
jns
fdivl
fdivrl
fs
dec
push
test
ret
push
push
fdivrp
cmp
xchg
jb
inc
and
mov
pop
jbe
rcll
sbb
add
mov
dec
cmp
cmp
sahf
data16
dec
mov
mov
adcb
push
mov
mov
cmp
scas
mov
hlt
pop
in
sahf
xchg
push
add
sub
testb
jge
mov
es
or
lods
mov
ret
in
scas
ret
dec
jno
and
cmpsl
js
sub
cmp
sbb
push
in
mov
out
xchg
add
sti
sti
jb
call
addr16
inc
or
fs
jecxz
dec
mov
push
out
rclb
loope
push
adc
loopne
push
setns
rcl
xchg
aam
and
cwtl
inc
loop
outsb
mov
jecxz
test
or
movsl
push
fisubrs
inc
lock
movsb
sub
mov
nop
push
mov
lock
add
aaa
insl
cmpb
dec
push
pop
out
cmp
pushf
scas
out
xchg
mov
jl
cmc
ror
hlt
fildll
call
dec
push
das
mov
mov
in
xor
loopw
mov
stos
dec
rorb
rol
es
aad
mov
mov
or
inc
cmpsl
aas
pop
push
xchg
sub
das
inc
aad
lret
pop
sahf
test
loop
sub
xor
idivl
fnsave
push
pop
xchg
adc
outsl
sbb
sbb
mov
lcall
jmp
aaa
out
dec
outsl
xchg
xor
stos
shr
mov
inc
xchg
sbb
dec
roll
sub
loop
adc
mov
std
add
addb
sbb
adc
xchg
sbb
inc
stos
mov
scas
in
cld
pop
push
sub
lock
aas
aad
jno
mov
iret
cli
cwtl
xor
xor
sbbl
or
cmpsb
insl
cmc
lods
sub
lods
add
push
cltd
adc
dec
in
mov
lock
sbb
out
outsl
sub
loopne
in
add
pop
pop
stos
mov
fstps
or
or
inc
fs
out
popf
clc
enter
nop
loopne
adc
popa
sbb
jl
jecxz
idiv
pop
pop
movsb
pop
faddl
in
int3
shlb
push
cmp
fldcw
mov
and
inc
pop
adc
dec
into
mov
mov
mov
xchg
stos
and
cmp
xchg
dec
fdivs
std
mov
or
mov
jnp
bound
fiadds
les
adc
cli
and
imul
bound
setns
mov
xchg
aam
and
cwtl
inc
loop
outsb
and
adc
cmp
push
int3
scas
mov
pop
ds
je
lods
or
fsubr
out
out
jle
int3
or
cmp
out
in
ja
or
cmpsl
stos
ljmp
and
mov
push
gs
ret
xchg
stos
adc
mov
arpl
add
daa
or
or
inc
fs
outsb
popf
clc
pop
ror
fidivs
push
mov
and
xchg
addr16
std
and
fiaddl
sub
fiadds
pop
out
inc
ss
push
pop
dec
js
xchg
mov
mov
add
jns
inc
repnz
jno
repz
xlat
mov
pop
xor
rcr
jmp
into
mov
jbe
stos
in
sub
cli
mov
sbb
mov
insb
jg
xchg
stos
xchg
xor
hlt
in
mov
cmp
mov
cwtl
jns
pop
aad
pop
inc
int
les
test
sbb
xchg
movsb
das
jbe
fstps
out
lcall
hlt
mov
cmp
fistpl
xlat
fidivl
cmp
aas
push
sub
push
fwait
or
xchg
inc
aam
inc
adcl
mov
jns
in
xorb
add
xlat
mov
std
and
dec
jmp
lods
add
pop
mov
enter
iret
and
and
jb
out
dec
push
rcr
mov
xchg
and
cltd
pusha
in
sbb
lock
inc
cmpsb
fs
fsubl
xor
in
scas
ret
negb
pop
outsl
jb
add
xchg
push
sbb
mov
leave
leave
movsb
mov
mov
or
je
mov
add
out
xchg
mov
pop
inc
sub
lahf
lods
adc
xor
push
fisubrs
out
xor
out
cli
mov
testb
jle
add
adc
outsb
fcomps
sbb
inc
or
mov
popf
mov
xchg
es
add
je
outsb
popf
fdivl
bound
dec
pop
and
and
sub
lret
sub
pop
mov
cmpsb
cmp
sti
mov
sbbb
sahf
push
jecxz
push
xchg
xor
mov
and
and
and
imul
inc
pop
xchg
mov
out
addr16
std
adc
pop
pop
pop
es
movsl
sub
inc
and
push
pop
in
scas
inc
cmp
pop
insl
add
adc
call
gs
ret
mov
mov
out
loope
cmp
dec
in
repnz
cmp
call
sti
mov
xchg
sbb
mov
mov
mov
out
sbb
rcrb
cmp
sub
xchg
pushf
arpl
cmpsb
xchg
and
mov
sub
int
pop
shlb
mov
int
fsubrs
jmp
addr16
aas
in
xchg
cmp
xor
mov
and
adc
mov
aad
cltd
pop
cli
bound
clc
das
sbbb
xor
pop
cmp
das
cmp
rcl
mov
clc
adc
xor
fcmovnu
addl
mov
xor
sub
mull
lret
out
add
xchg
push
lods
sub
inc
push
cmc
insl
or
repnz
cmp
sub
push
nop
pop
ljmp
addb
push
sbb
add
iret
sti
mov
sbb
add
pop
aam
cltd
fcoms
loop
jmp
popf
jmp
adc
and
jl
divb
xchg
xchg
lods
jmp
mov
push
inc
inc
inc
out
std
adc
shrb
inc
mov
int
inc
fisttpl
mov
sub
sub
movsb
popaw
mov
cmp
dec
jg
cmp
push
adc
arpl
inc
cmp
xchg
sar
loope
xchg
xlat
mov
mov
cli
es
test
stos
dec
adc
adc
and
xor
adc
add
mov
out
sarl
push
dec
mov
in
pop
sbb
ja
out
out
shrb
jae
sahf
or
mov
mov
push
mov
pop
cs
fstl
mov
mov
lds
roll
dec
jmp
xchg
add
mov
out
mov
imul
xor
dec
insb
test
cmp
ja
inc
fs
cwtl
in
dec
and
mov
test
je
rorb
add
adc
in
hlt
sti
jb
ficomps
sbbl
and
cmp
add
cltd
pop
ret
pop
iret
pop
inc
cmp
push
fisubl
mov
ret
dec
sbb
adc
cmp
in
loopne
adc
ss
ret
sub
fidivs
pop
aas
cmpsl
int3
pop
sbb
lahf
inc
nop
jo
pop
test
ja
mov
aam
fstpl
popf
sub
mov
mov
dec
sarb
loope
in
jecxz
cmp
mov
push
out
push
xchg
fistl
and
hlt
and
inc
int3
popa
ret
mov
sahf
call
insl
loope
jecxz
mov
sbb
stc
xlat
data16
mov
psubusb
out
jecxz
rcl
xor
xor
pusha
pop
xlat
xchg
jg
int
jbe
or
adc
jecxz
shrl
lods
dec
stc
ret
cmp
test
sub
stos
add
sti
adc
std
ds
les
daa
xor
sub
inc
dec
xchg
jnp
sbb
push
pop
and
cli
dec
pop
cmp
adc
push
out
jno
lret
call
xlat
mov
orb
mov
popa
loop
dec
repnz
shll
mov
iret
icebp
jge
lret
movsl
inc
dec
pop
push
jne
push
mov
xchg
mov
fstps
sbb
pushf
ds
fsubl
vmovups
fidivl
popa
aaa
push
and
ljmp
bndldx
adc
pop
fldl2t
test
addr16
test
popf
call
addr16
adc
aaa
repz
inc
or
and
and
inc
push
cli
shll
in
fmull
bound
fdivs
inc
sub
movsb
adc
adc
in
hlt
mov
push
in
das
fdivrp
lods
mov
or
mov
jae
popa
cs
pop
jb
rorl
in
mov
jp
push
insl
cmpsb
addl
js
adc
mov
or
orl
repnz
cmp
lods
dec
jbe
inc
pop
xor
adc
push
iret
pop
sub
out
xor
and
jmp
inc
test
arpl
cmp
testl
sbb
push
inc
rcrl
mov
pop
pop
fcoms
push
and
inc
fsubrl
les
fs
jnp
arpl
ds
mov
rcl
jmp
add
xchg
add
sti
xchg
push
callw
xchg
cld
outsb
stos
mov
ljmp
jge
cmp
filds
inc
in
xor
adc
adc
jmp
ds
push
aam
scas
pushf
mov
push
sbb
cmpsb
mov
jno
aas
xor
xchg
mov
sub
push
mov
je
enter
push
fwait
rcll
jl
call
rcr
mov
sub
addr16
inc
rcrb
pop
cmpsb
add
les
cmp
xor
sti
fdivp
shll
pop
fmul
jbe
insb
mov
or
sbb
xor
adc
lret
dec
ss
cli
sahf
adc
out
call
adc
xchg
xchg
sub
mov
mov
and
xorl
sub
hlt
out
ljmp
cmpsl
jg
shlb
add
rorl
jbe
xor
sbb
insl
or
push
jnp
pop
sub
xchg
js
fdivl
dec
clc
mov
loope
imul
xchg
cld
insl
stos
aam
in
fwait
icebp
xor
enter
lds
ljmp
mov
or
fsubrs
scas
mov
dec
int
pop
out
xor
ja
xchg
movsb
mov
stc
shrl
test
mov
call
cmpsb
xor
sbb
mov
loop
lahf
sub
ss
jnp
stc
jne
in
mov
dec
fninit
cmp
loopne
loop
mov
push
cltd
mov
sbb
dec
sbbl
arpl
mov
aad
jns
sub
divl
pusha
enter
mov
mov
inc
sbb
push
hlt
sub
mov
pop
leave
xchg
xchg
pusha
div
push
loop
lret
jae
dec
sbb
jecxz
or
xchg
jl
sbb
jo
pop
cmpsl
mov
mov
cld
mov
push
shrl
enter
lock
div
test
pop
xor
loopne
testb
cmpsl
scas
xchg
cmpsl
stos
std
adc
sti
cmc
mov
ret
push
sub
pop
leave
lds
lock
inc
lahf
fucomip
inc
outsl
cmpsb
cltd
pop
aaa
testl
pop
and
and
ss
mov
idivl
rorb
push
cmp
pop
mov
dec
dec
inc
xor
and
lds
ds
jbe
fisttps
mov
fcmovnu
cli
sbb
rclb
pop
dec
bound
aaa
push
test
into
or
adc
sub
leave
add
dec
addb
jge
nop
std
insb
sub
pop
loopne
stos
rep
imul
int
cmpsb
in
aaa
mov
fninit
int3
fwait
data16
dec
aaa
out
push
lahf
notb
popa
jmp
push
or
or
dec
pop
xchg
add
outsl
sti
leave
inc
test
pop
sbb
loop
sub
js
push
cmp
imul
adc
adc
outsl
mov
negl
jns
push
loopne
test
fdivrp
pop
add
nop
mov
fimuls
inc
js
fdiv
cmp
xor
mov
loopne
add
jne
cmp
in
or
mov
ds
add
leave
mov
sub
stos
push
movsl
test
in
es
out
jge
mov
fstp
fs
loopne
or
xchg
scas
dec
mov
push
into
dec
sub
test
hlt
fdivp
xor
ljmp
push
add
cmpsl
mov
pop
rolb
add
push
test
popa
loope
clc
xchg
mov
negl
mov
cwtl
repz
test
push
mov
adc
push
scas
sbbb
cmpsl
lock
and
mov
rcr
pop
jecxz
dec
jbe
push
in
lock
xchg
mov
loope
xchg
mov
andl
mov
aas
jg
mov
dec
pop
pusha
cmp
bound
or
xor
inc
jne
lret
mov
push
lret
rclb
or
add
jbe
insb
out
andl
int
insb
iret
bound
cmp
xor
lods
mov
test
xchg
or
pop
fcmovnb
cmp
mov
and
and
mov
sbb
mov
jns
cmp
add
dec
iret
xchg
lds
loope
mov
sbb
pcmpeqb
subb
inc
push
in
lods
push
inc
jge
cmp
rcll
insl
les
cmp
int
stc
pop
pop
and
cmpsb
fldt
popa
hlt
push
ljmp
sahf
or
cmp
pop
pop
push
jg
test
xchg
inc
sbb
mov
or
lcall
fucomip
subl
rcrb
pop
clc
lcall
adc
out
jge
inc
rorb
repz
test
adc
call
leave
xor
das
test
mov
jno
jecxz
cmpb
aam
pop
jbe
das
push
xor
mov
xor
aam
insb
xlat
jp
leave
fdivrs
cs
data16
jmp
jmp
and
ret
and
jnp
mov
pminub
mov
cmp
mov
xor
xlat
jp
lahf
imul
jne
lods
scas
out
pusha
mov
xor
fwait
arpl
stos
in
lret
push
and
dec
bound
cmpsl
inc
mov
std
xor
int3
pop
sbb
xchg
mov
jbe
fcmovbe
inc
push
adc
js
inc
fcomps
pop
mov
push
push
pop
pop
cwtl
out
repz
mov
popf
lds
lds
and
or
mov
out
adc
push
pop
xor
push
push
mov
cmp
loopne
testb
and
mov
mov
js
mov
fs
loopne
test
push
mov
push
mov
insb
rcrb
or
mov
jbe
and
xor
xchg
ret
outsl
jne
sub
pop
adcl
cmp
xor
push
dec
xchg
push
cwtl
fimuls
inc
stos
cmp
orl
sub
add
xchg
add
enter
jae
aam
lahf
clc
push
iret
ficoms
jmp
mov
sub
jl
jg
stc
pop
pop
in
sub
xchg
xchg
in
and
add
popf
data16
mov
pop
aaa
push
mov
es
in
jns
push
nop
fidivl
pop
aas
mov
jnp
mov
push
jno
pop
addr16
xor
dec
xor
imul
icebp
jle
bnd
dec
xchg
aam
iret
mov
mov
fs
sub
pop
in
xor
addb
jnp
jno
daa
cmp
lcall
out
cltd
xchg
or
cmpsb
insl
mov
cmpsb
gs
lds
sbb
push
imul
int
scas
mov
ud0
add
nop
mov
pop
daa
pop
xor
cwtl
fwait
scas
mov
dec
mov
push
inc
enter
sbb
mov
adc
push
inc
lahf
mov
std
adc
imul
sbb
fcomip
mov
repnz
scas
xor
mov
sarb
push
lock
loopne
mov
mov
pop
and
push
sbb
sbb
mov
mov
repz
xor
lds
ljmp
pop
outsl
push
out
fstl
hlt
ljmp
idivb
pop
jmp
cwtl
cmc
stc
and
xchg
jne
add
dec
stos
cmp
cmp
mov
scas
cmc
mov
pop
and
inc
mov
xor
add
cltd
pop
sub
rclb
or
push
std
xlat
add
sbb
cmp
sahf
jecxz
test
jge
idivb
fucom
fs
inc
adc
stos
mov
xchg
mov
sbb
js
scas
adc
cmp
loopne
loop
mov
shrl
addr16
std
mov
sub
movsb
test
dec
out
sbb
and
pop
cmp
pop
mov
add
mov
jnp
lock
lret
mov
cli
ret
mov
filds
lret
fcoms
stc
xchg
mov
out
call
popa
dec
jno
pop
movsb
leave
push
mov
xor
or
mov
inc
and
ljmp
add
daa
nop
sub
int
repnz
mov
je
movsb
adc
dec
add
je
clc
sti
mov
or
inc
popf
mov
push
fcmovb
add
sar
xor
xchg
jno
jge
sub
mov
xchg
sub
test
inc
dec
test
call
ret
mov
sarl
daa
cmp
lods
outsl
mov
psubq
mov
mov
dec
and
daa
outsl
fisttpll
bound
and
jb
rclb
pop
popf
in
or
mov
sub
push
dec
ffree
arpl
cli
pusha
add
mov
push
jl
xchg
aad
mov
scas
sub
into
loope
aaa
ljmp
sbb
lret
iret
out
mov
sub
fwait
xchg
add
xor
mov
inc
ds
sub
pusha
cld
and
jne
jns
pop
inc
insb
jns
cmp
add
movsb
adc
mov
addr16
pushf
ja
cmpsl
xlat
mull
mov
mov
cltd
mov
mov
insl
mov
jp
add
cmp
inc
aam
sbb
fisubrs
dec
lcall
xor
mov
into
mov
dec
pop
rorb
dec
jbe
std
das
or
push
inc
cmpsb
sub
lret
jecxz
les
gs
sub
out
addr16
add
insb
xchg
sbb
jmp
mov
mov
fisubrs
cmpsl
enter
push
pop
mov
inc
gs
jmp
dec
pop
adc
dec
sbb
aam
dec
push
jge
lahf
les
shl
cmpl
mov
out
and
adc
pushfw
leave
mov
repz
jp
xor
jp
add
pop
mov
pop
shrb
jnp
repnz
push
imul
inc
push
testl
fldcw
xorl
mov
push
fldl
test
jbe
jg
push
rcrb
out
and
and
or
xlat
cmp
outsl
inc
ljmp
add
les
dec
xor
arpl
xchg
add
or
ret
lock
stos
pop
in
insl
movsl
dec
jne
xor
pusha
daa
les
gs
push
adc
popa
in
cmp
ffree
shll
imul
push
ljmp
sbb
inc
pop
insl
stc
rolb
pusha
test
or
das
xchg
es
mov
inc
pop
mov
sub
dec
push
sub
into
loope
cmpl
int
xor
fldl
dec
jno
adc
test
sbb
dec
insl
test
sbb
fs
adc
dec
dec
cs
dec
dec
test
mulb
out
insl
jne
in
pushf
adc
stos
das
inc
test
adc
in
popf
pushf
mov
pop
jmp
xor
jle
sbb
pushf
mov
mov
inc
andb
sbb
subl
aad
pop
fs
jnp
jo
xchg
cmp
jno
sbb
cmc
pop
xchg
mov
clc
aaa
jle
mov
adc
adc
popa
fsub
sub
and
mov
cli
sub
je
mov
mov
sub
jge
and
dec
push
test
jae
cli
call
stc
and
pushf
dec
enter
cwtl
orl
cli
and
inc
add
xor
in
inc
dec
enter
add
incl
loopne
and
gs
test
insl
sbb
jl
and
daa
iret
pop
pusha
jae
dec
shrl
mov
cmp
dec
inc
outsb
jmp
xor
inc
or
push
push
cmpb
or
push
into
rolb
arpl
cwtl
jnp
lcall
rorb
push
adc
subb
sbb
xchg
scas
fwait
les
push
call
aas
pop
in
dec
lds
xchg
mov
cmc
sbb
add
fdivp
jge
or
in
aaa
call
gs
and
addr16
xchg
mov
icebp
mov
or
cmp
push
aaa
and
mov
vcvtss2si
dec
bound
dec
xor
ret
push
mov
mov
orl
scas
xchg
and
sub
mov
xor
jbe
mov
js
fsub
xchg
outsb
mov
stos
outsl
push
out
fstl
hlt
ljmp
ret
fidivs
adcl
lods
dec
cli
xor
pop
je
frstor
iret
ss
cmpsb
adc
sub
rcrl
imul
test
enter
xlat
inc
cltd
xchg
cmp
pop
ficoml
mov
push
jo
mov
scas
out
xchg
mov
jle
mov
xchg
pushf
pop
lret
cmp
orl
pop
rcrb
stc
xor
mov
sbb
dec
lods
jg
es
mov
lds
mov
int3
nop
or
push
push
cmp
imull
sub
std
jns
loope
andb
or
hlt
cld
mov
xchg
out
xchg
mov
loope
jne
mov
and
lock
cltd
lea
cmp
sbb
dec
sub
mov
out
lock
sbb
pusha
lea
push
dec
xor
xlat
mov
aaa
dec
pusha
jae
mov
cmp
inc
pop
test
fiaddl
xchg
mov
jno
add
lret
faddp
aam
movsl
insl
repnz
aad
dec
ja
add
mov
stc
loopne
mov
adc
dec
call
outsl
xor
inc
subl
push
popa
insl
adcb
rolb
fdivp
shll
pop
fmul
jbe
insb
sub
enter
or
in
sbb
xor
mov
xchg
fcomip
pop
orb
cmp
adc
push
jnp
and
gs
rcrl
inc
push
adc
dec
sub
jbe
jo
pop
and
in
test
cmpsb
mov
dec
enter
pop
jecxz
cld
dec
or
and
and
mov
jns
dec
sbb
in
scas
lods
add
and
iret
or
mov
insb
sti
cli
jne
pop
jo
sbb
insl
dec
insb
jns
dec
jo
xchg
js
int
imul
sub
cmc
into
and
test
sbb
and
and
cmp
gs
lock
mov
lahf
jb
or
sbb
in
sbb
aaa
xchg
clc
cmp
xchg
gs
adc
jge
lock
add
mov
leave
ret
ret
rol
add
sub
mov
outsb
test
add
pop
mov
ss
cmp
mov
mov
inc
loope
clc
push
ljmp
movsb
mov
mov
add
pop
mov
lcall
inc
dec
clc
popa
jecxz
pop
loopne
lret
push
jno
and
xchg
and
lods
ficompl
test
jp
das
insl
xchg
sbb
clc
popl
jecxz
cs
pop
test
dec
sahf
mov
adc
orl
inc
testb
mov
rclb
mov
fstps
cmp
ret
dec
or
sbbl
sub
fwait
push
or
std
lds
or
mov
addr16
js
adc
lods
mov
rcl
call
push
and
cli
push
in
frstor
movsl
pushf
pop
xlat
test
jmp
outsb
call
insl
das
leave
sbb
jns
dec
pop
and
sti
movsl
and
inc
jge
test
shl
pushf
outsb
inc
adc
mov
lock
lods
fsubs
mov
xlat
xor
mov
push
sar
pop
mov
cltd
jns
imulb
push
out
push
arpl
sbb
psllq
xchg
add
cmp
push
data16
jle
aam
outsl
mov
fsubrs
xchg
pop
enter
cltd
mov
std
jae
sar
dec
mov
lret
mov
shrl
movsb
inc
add
fnstenv
xchg
and
lods
fdivrl
aad
dec
clc
test
sbb
ficoml
ret
mov
orb
mov
push
aaa
int
cmp
ror
ss
or
push
lcall
mov
mov
aaa
lcall
adc
lahf
mov
or
sti
jge
jae
sub
add
cmp
int
adc
push
adc
ffree
shll
imul
push
ljmp
and
dec
push
int3
inc
and
pop
movsl
lods
xor
int
ret
push
mov
ds
adc
cmpsl
dec
or
test
sub
mov
or
sub
and
mov
test
lea
mov
sbb
repz
test
pushl
int
imul
js
lret
jecxz
or
add
jbe
insb
out
andl
aad
std
lods
inc
lock
fsubr
out
mov
pop
cmp
pop
inc
xlat
aaa
int
cmp
rcrb
ds
or
push
lcall
mov
mov
aaa
lcall
adc
lahf
mov
cltd
lods
scas
dec
adc
sti
jge
jae
sub
add
mov
dec
fidivl
sub
popf
std
mull
movsl
jb
jnp
insb
es
in
scas
ret
mulb
pop
aaa
push
and
ret
push
mov
aam
and
lret
jl
and
out
lods
cmp
jge
iret
jmp
int
sub
rcll
pop
aaa
testb
push
aam
pushf
cmpsb
mov
cs
dec
pop
stos
sub
or
mov
sbb
xchg
cmp
adc
jp
test
jnp
jno
daa
cmp
lcall
sbbl
xchg
repnz
mov
es
or
stc
scas
or
js
nop
or
dec
and
out
pop
push
mov
xchg
and
pusha
mov
add
and
push
sbb
cmp
xchg
mov
testb
mov
mov
out
aad
cvtps2pd
stc
push
stc
or
add
mov
jae
mov
iret
jg
pop
fisubs
stos
mov
or
inc
mov
mov
int
sub
lret
pop
shll
add
push
mov
lret
fwait
out
push
sbb
test
push
iret
and
mov
lcall
popf
dec
add
mov
icebp
cmp
push
inc
clc
jle
lds
lret
inc
rcrl
dec
hlt
xlat
ja
add
out
add
daa
or
mov
es
push
xchg
bound
mov
fbld
lret
add
insb
iret
jae
jge
insb
xor
jg
xchg
cltd
sub
cmpsb
add
add
pop
mov
les
lock
fdivrp
sbb
pop
jle
testb
stc
leave
mov
stc
sbb
and
mov
xor
daa
sub
adc
shll
pop
iret
and
jge
test
push
pop
lahf
xchg
movsl
mov
stos
mov
loope
lahf
xchg
mov
and
ds
icebp
adc
lods
pop
lock
mov
into
add
jne
inc
ljmp
mov
cmpsl
mov
inc
int3
mov
out
pusha
je
jmp
push
mov
cs
jmp
and
test
cld
daa
fidivrl
leave
ffree
aas
xchg
mov
imulb
xchg
inc
stc
sub
addr16
sbb
xchg
or
sub
and
pushf
xchg
aad
inc
push
adc
test
sbb
ljmp
mov
add
imul
xlat
test
les
lock
sbb
dec
stos
add
es
and
xor
jecxz
jno
push
push
xchg
sub
mov
dec
ret
pop
insl
insb
mov
jle
outsl
cmp
mov
mov
xchg
mov
sbb
mov
push
jns
mov
shl
inc
inc
xor
cmp
mov
insb
jg
xchg
jecxz
mov
push
push
or
lret
lret
and
or
sarl
mov
mov
out
orb
mov
leave
fnstenv
add
insb
out
xor
sbbb
push
mov
push
mov
push
lret
inc
out
mov
xor
icebp
clc
iret
jno
imul
mov
call
cli
sbb
mov
or
sbb
fwait
mov
mov
push
inc
iret
lock
js
xchg
and
test
ja
mov
cli
or
xor
or
rcrl
je
xor
popf
imul
inc
pop
mov
mov
xor
fwait
adc
and
inc
sub
or
jmp
add
xchg
add
add
sti
decb
jae
mov
mov
jecxz
outsb
jae
sbb
fdivrs
dec
pop
sbb
and
imul
stos
call
rorl
dec
pop
fsubrs
and
push
fdivr
sub
jl
dec
popf
sbb
push
inc
ret
mov
and
and
repnz
push
popf
sahf
les
cmp
mov
push
std
sbb
andl
sub
aam
jecxz
ret
dec
lahf
pop
in
dec
daa
adc
cmpl
pusha
pusha
out
outsb
inc
xlat
lock
loopne
cli
cwtl
dec
xchg
lea
out
and
pop
dec
lret
lret
shll
imul
push
ljmp
aaa
aad
cli
mov
in
test
pop
pop
outsl
cmp
xchg
xor
push
mov
pop
mov
inc
in
mov
cmp
xchg
xor
clc
pop
in
scas
mov
push
add
mov
push
fisttpll
pop
push
cmc
mov
adc
push
insl
lahf
mov
les
mov
arpl
dec
stc
int3
fistpll
lock
inc
loop
test
paddsw
cmp
addr16
fstpl
sub
orb
pop
cmp
inc
jns
bound
cltd
pop
jb
push
and
out
xchg
pop
sti
jnp
jecxz
shll
les
mov
scas
and
cmp
xchg
shll
sub
je
mov
pop
pusha
pusha
out
insl
mov
sti
movl
clc
aaa
adc
mov
sub
mov
mov
fidivl
cmpsb
std
arpl
dec
repnz
or
fcomps
pop
xchg
out
loopne
pop
fbstp
inc
lret
enter
cmp
lret
mov
jmp
xor
inc
add
daa
mov
sbb
mov
aad
xor
mov
sbb
dec
sahf
mov
aam
push
pusha
jae
dec
leave
mov
jne
or
dec
imul
add
daa
mov
sub
daa
test
test
mov
sub
and
add
fidivrl
mov
out
fld
push
and
rclb
push
jno
dec
or
shrl
test
mov
ret
das
aad
lcall
dec
sahf
dec
lea
iret
cli
pop
out
in
clc
aaa
add
xor
jp
mov
andl
sub
pushf
jmp
inc
add
push
push
push
hlt
adc
xchg
push
and
addr16
xor
loope
int3
cmp
pop
jo
or
xchg
sub
adc
mov
int
cltd
xchg
cmp
stos
inc
arpl
pop
push
push
fadds
lods
jecxz
push
xchg
sahf
lods
push
jg
sbb
je
push
sub
mov
jle
xchg
xchg
js
push
fmul
jae
inc
nop
mov
jno
sub
or
test
mov
cmpsl
pusha
inc
push
fcom
push
push
xlat
fidivrl
std
jb
mov
xchg
ja
sbb
mov
fdivr
push
filds
lea
pop
sahf
fstpt
xchg
subl
dec
adc
in
out
lret
xor
or
add
push
enter
mov
pop
sbb
negb
aam
add
pop
cli
lret
xchg
mov
movsl
sub
mov
sub
push
mov
jbe
insb
or
daa
add
in
test
fmuls
and
add
stc
mov
sub
in
fs
call
bound
add
aad
aaa
imulb
movsl
push
cltd
push
adc
and
inc
inc
fdivrl
xor
jle
jae
adc
sbb
mov
repz
out
mov
sub
push
mov
scas
clc
rcl
xlat
push
xor
push
xchg
roll
ud0
cmp
imul
xor
pop
arpl
lret
mov
dec
lahf
ljmp
dec
int
fstpt
lock
mov
xchg
push
pop
mov
cltd
lods
scas
lret
jmp
inc
add
rcr
or
scas
lcall
sti
movsl
lds
iret
mov
pop
mov
pusha
shl
lds
sbbb
fwait
dec
inc
push
pop
dec
js
mov
add
ret
jno
cld
cmpsb
in
das
inc
mov
adc
pop
sub
into
adc
in
iret
outsb
mov
call
and
mov
jge
jg
imul
push
push
mov
pushf
inc
cmpsb
std
arpl
ds
ds
mov
and
rorl
adc
mov
daa
adc
adc
push
in
jns
xor
sbb
popf
stc
or
pop
jno
xchg
sub
or
popf
mov
cmp
jns
inc
movsl
cmp
ljmp
outsb
test
je
sub
scas
and
enter
inc
lahf
imul
xor
push
lret
cmpsl
movsl
xchg
or
and
jbe
lret
push
sub
ds
push
fistps
and
and
jbe
mov
sti
in
rorb
lock
jmp
in
mov
pop
push
repz
and
xchg
ja
jmp
xchg
push
jle
sbb
add
sub
int
xlat
and
aaa
adc
insl
sub
ret
sbb
and
sbb
pushf
mov
xchg
sub
ds
idivb
jns
cltd
mov
mov
xor
data16
push
pop
mov
repnz
rcl
sub
in
jne
lahf
cmp
testb
mov
scas
jbe
xchg
xchg
cwtl
es
inc
ljmp
mov
lods
xor
hlt
shlb
into
fldcw
loop
push
movsb
sahf
adcl
sub
mov
adcl
push
jmp
hlt
sbb
sti
cli
dec
dec
xor
lods
pop
pusha
sbb
xchg
xchg
repz
add
addr16
repnz
and
pop
jno
stos
sar
outsl
jb
nop
mov
cmp
sbb
ds
and
jmp
out
nop
fs
icebp
call
movsl
mov
sub
ljmp
dec
mov
fcompl
pop
lock
adc
stos
add
adcb
ja
les
into
je
adc
test
arpl
in
jo
fwait
enter
fsubr
out
or
rolb
mov
arpl
pushf
sti
ret
push
jns
mov
in
inc
repz
xor
sub
adc
ffree
rcrl
iret
cwtl
stos
bsr
mov
punpckhbw
jmp
fisubl
xchg
fcomip
pop
dec
movsl
test
cltd
ja
pop
in
std
adc
add
push
mulb
xchg
movsl
sub
sub
aad
and
pop
and
sar
outsl
jb
nop
mov
cltd
jns
les
nop
sbb
push
in
or
adc
retw
testb
cltd
xchg
ljmp
push
fmulp
xor
mov
stc
cmp
in
js
pop
pusha
jl
and
mov
cmp
dec
xor
orb
xchg
and
in
scas
icebp
sbb
add
ds
dec
xchg
and
popa
ss
fisubs
and
popa
dec
ss
xchg
xor
scas
jno
lea
scas
inc
movsl
cmp
adc
inc
mov
jge
inc
repnz
mov
imull
mov
cwtl
pop
add
mov
pop
sbb
mov
icebp
xchg
clc
xchg
xor
sub
push
stos
adc
in
out
rcrb
jg
mov
jge
push
inc
push
pop
in
js
arpl
popf
add
ret
jno
dec
cmpsb
gs
jbe
pushf
lahf
mov
jns
adc
dec
data16
dec
push
dec
or
sub
data16
jge
sub
push
popf
shrl
call
inc
pusha
data16
outsb
xor
int3
cmp
in
aam
imul
mov
push
jge
cmp
lods
pop
jbe
mov
or
push
shr
imul
rol
sub
orb
and
xlat
fiaddl
jle
jbe
jnp
fiadds
xor
adcb
jmp
bound
lea
lcall
pusha
push
pop
adc
roll
push
fs
adcl
push
cwtl
fwait
jbe
pop
dec
clc
dec
fdivrs
mov
push
mov
sbb
shll
loopne
sbb
adc
loope
jle
xor
orb
jmp
dec
pop
add
inc
sub
cmp
pusha
daa
jno
out
push
jo
inc
insl
lahf
mov
mov
sub
pop
in
mov
cmc
adc
or
jns
sbb
and
fldz
jns
ret
mov
call
xor
inc
dec
jmp
ljmp
fcompl
scas
mov
dec
dec
test
out
js
mov
adc
jns
push
fisttpl
push
movsl
inc
leave
and
ret
lret
and
lods
inc
inc
push
mov
or
shlb
cmpsb
sub
sbb
ss
push
xchg
sbb
cmp
ljmp
jp
pusha
xor
aam
fs
lahf
mov
shl
lret
ljmp
xchg
sti
cmp
out
in
in
mov
insl
clc
gs
clc
dec
popa
inc
inc
int3
cltd
mov
cli
orl
lock
in
lahf
aad
push
sahf
sbb
pop
mov
cwtl
inc
add
mov
mov
arpl
jbe
add
dec
mov
push
out
mov
cltd
in
stos
cmp
dec
icebp
dec
imul
pop
ljmp
shlb
jmp
fisubrs
out
jne
adc
les
inc
push
loope
lcall
scas
in
adc
mov
jbe
jp
mov
mov
popa
sahf
sub
push
fcoms
add
bound
aaa
fiadds
subb
adc
cmp
filds
sbb
popf
mov
pop
and
pop
fstpl
inc
jne
xor
test
push
mov
fcmovnu
mov
cmp
fucom
mov
test
faddp
int
lods
jmp
adc
sbb
arpl
movsl
std
stos
test
sub
xchg
cmp
insb
sub
xor
out
dec
pop
aaa
push
cmp
mov
cltd
jbe
push
shll
jbe
jge
loope
xor
test
loop
outsl
jmp
cmp
add
out
adc
call
test
cld
scas
mov
sub
stos
pop
int3
dec
jl
clc
mov
cmpsl
arpl
inc
push
int
pop
cli
jns
cli
daa
in
push
xchg
xchg
jg
ds
imul
ret
xchg
outsb
sub
jne
xchg
cmp
lock
in
pop
jb
mov
push
pop
insl
xor
enter
cmc
xchg
fucom
hlt
jbe
pop
outsl
cmc
clc
or
and
cli
or
mov
cmp
push
push
out
cmp
mov
pop
insb
sahf
addr16
sbb
out
std
adcl
cwtl
fwait
stos
scas
inc
pop
sbb
fcompl
ret
lret
fsubp
jae
dec
dec
pusha
jecxz
stc
or
loop
clc
sti
push
adc
and
and
adc
lahf
lds
mov
lods
pop
inc
push
pop
insb
outsl
add
xlat
jo
xchg
mov
or
or
mov
popa
daa
cmp
cld
cmp
aad
jmp
add
adc
fidivrl
cmp
dec
rol
cmpsl
mov
cld
aam
jp
jo
movsl
xchg
mov
jecxz
ljmp
mov
pop
ficoml
mov
jo
or
mov
pop
fldl2e
test
stos
adc
mov
adc
mov
test
cmpsl
lahf
inc
mov
mov
adc
in
or
fcoml
sti
pop
add
dec
sahf
addr16
mov
ret
push
cmp
lret
fstpt
push
aam
fs
imul
jno
or
xchg
sub
and
inc
insb
push
sub
mov
pop
outsl
jb
nop
mov
push
pushf
pop
add
push
jge
xchg
test
imul
fsubl
or
scas
dec
hlt
je
adc
sub
sysenter
push
aaa
stos
mov
sbb
inc
insb
push
jno
sti
ja
cmp
shlb
xor
jge
pop
sub
fcomip
jns
sbb
add
xlat
out
enter
test
xchg
sub
sub
je
pop
mov
sub
mov
sar
pushf
jno
pop
enter
ja
cmp
sub
mov
cmp
movsl
cmp
cli
loop
scas
mov
jge
xchg
lahf
les
xchg
mov
xchg
cmc
out
pop
cltd
lods
cmpsl
out
push
and
orl
into
jo
in
dec
orb
aaa
inc
mov
mov
jne
das
outsb
push
cmp
add
into
and
jp
sub
xchg
scas
ret
mov
pop
outsl
pop
xchg
pop
sub
pushf
mov
adc
push
push
mov
out
xor
adc
out
dec
outsb
insb
xor
stos
shrb
daa
push
push
jp
push
test
jl
xor
dec
and
js
rcr
lock
mov
sbb
xchg
or
mov
movsb
cmc
scas
faddp
adc
mov
adc
daa
test
xor
movsb
xchg
pop
insw
inc
lock
ljmp
inc
or
or
and
mov
jnp
aaa
add
loop
mov
lods
hlt
sub
shr
push
jl
xlat
imul
inc
clc
lea
mov
pop
mov
pop
sbb
mov
icebp
xor
aad
test
and
mov
js
aam
pop
push
data16
adc
jae
xor
mov
sub
mov
popa
dec
add
lret
xchg
test
lds
or
xchg
hlt
data16
xchg
adc
sahf
or
ja
popa
aas
imul
sub
cmp
or
jae
pop
out
stos
es
adcb
push
inc
fimull
faddl
push
dec
pop
xor
leave
adc
mov
add
mov
loop
inc
xchg
sub
std
pop
jg
jb
sbbl
lods
mov
shl
in
sub
pop
test
jnp
aad
loopne
mov
mov
test
ds
inc
push
mov
clc
xorl
add
or
ret
dec
mov
lahf
test
inc
enter
daa
xor
fucom
movsl
inc
pop
dec
bound
lret
mov
push
cli
std
cltd
neg
sub
out
stc
fcoml
aad
sti
sahf
sbb
mov
pop
lds
mov
cmp
inc
mov
mov
shlb
test
xchg
cmp
ja
lcall
stc
cltd
mov
sub
inc
lea
test
or
lcall
loopne
jmp
inc
sti
cli
xchg
fnclex
pop
pushf
push
pop
sarl
xchg
cli
push
sahf
mov
test
cltd
mov
and
pop
pop
push
and
stos
fdivrl
in
lea
push
mov
dec
mov
xchg
mov
stc
or
in
mov
mov
aas
jnp
dec
hlt
xchg
dec
int3
lds
test
sbb
aam
push
or
lahf
fstpl
sbbl
lea
dec
jnp
jecxz
pop
jbe
cli
jb
or
fwait
xchg
mov
inc
mov
mov
xchg
push
fisubs
pop
cld
dec
xchg
inc
mov
dec
inc
sub
xchg
fs
xor
sahf
in
pop
ss
call
jno
mov
cmpsb
data16
fwait
pop
and
cmc
daa
fistps
jae
jg
call
aas
mov
outsl
enter
pop
cmpsb
push
dec
xchg
lods
leave
inc
ret
mov
test
pusha
sti
js
in
loop
sbb
lea
xchg
aad
xchg
jge
aas
in
fwait
pop
scas
outsb
jmp
inc
sub
fsubs
ficomps
xlat
push
mov
mov
mov
or
cwtl
rolw
repz
lods
sbb
out
repnz
es
mov
std
sbb
fcomps
inc
or
ret
out
lcall
mov
and
pop
mov
lods
mov
aas
pusha
testb
or
add
adc
xchg
cmpsb
gs
std
adc
insl
mov
xchg
xchg
movsl
push
scas
inc
in
jno
lock
inc
hlt
adc
push
or
xor
enter
mov
sarb
loopne
rclb
imul
in
inc
or
sar
or
mov
jb
int
mov
dec
or
stos
es
inc
mov
outsb
lods
push
inc
cltd
adc
mov
adc
or
sbb
leave
mov
jne
or
mov
mov
fstps
mov
fdivrl
js
jb
popf
xchg
add
cmp
push
mov
adc
pop
mov
mov
adc
aas
jnp
or
xchg
jae
pop
insb
scas
sub
leave
sbb
pop
xchg
mov
pushf
cmp
ret
int3
in
addr16
dec
xchg
xchg
idiv
inc
pop
fsubrs
rcll
js
cli
sbb
movsb
sbb
push
adc
leave
inc
mov
inc
push
subl
add
stc
or
add
mov
mov
outsb
fwait
and
sbb
inc
mov
dec
or
and
repz
jge
cltd
aad
mov
les
sbb
or
cmp
lcall
xor
mov
addr16
sub
cmp
mov
xchg
pushf
mov
and
sti
scas
dec
inc
jg
flds
lods
add
add
adc
jo
cmp
mov
insb
lret
enter
pop
cltd
pop
jb
xor
pusha
cmp
dec
cmc
mov
sbb
sbb
inc
or
lods
popf
cmp
inc
ret
int
cs
daa
pop
fucom
inc
sahf
xor
push
cwtl
cmp
test
les
jo
sbb
movsl
xchg
xor
aam
inc
pop
jbe
repz
push
push
inc
repz
mov
out
in
and
pop
sahf
test
pop
loopne
pop
stc
rolb
popa
sub
fwait
sbb
outsb
mov
mov
push
subps
aas
cmpsl
xor
in
mov
fs
sahf
adcl
sbb
testl
inc
dec
lods
push
rcrb
sbb
xlat
sahf
mov
and
imul
mov
arpl
xor
jne
or
popf
scas
in
out
push
popf
lods
mov
cmp
mov
pop
fneni(8087
jno
mov
and
imul
fucom
and
add
jne
shll
sub
nop
jnp
and
cmp
addr16
test
test
pushl
dec
sbb
stc
sarl
inc
pop
movsb
je
mov
out
ffree
jmp
pop
and
and
xor
negb
pusha
sarl
sub
mov
adc
daa
xchg
cld
daa
mov
dec
pop
sbb
in
scas
jecxz
rcl
stos
insb
or
lcall
jg
jns
push
push
lret
mov
mov
sbb
std
add
fdivs
mov
sub
add
xor
adc
cwtl
js
iret
adc
cmpsb
xchg
andb
and
inc
push
lret
sub
inc
dec
test
mov
pop
lcall
push
scas
in
sub
movsb
cmpsl
cmp
stos
das
sahf
push
test
or
or
shll
jmp
xchg
sarl
imul
jne
or
out
stos
add
mov
lahf
push
fiadds
push
dec
pop
lcall
call
lahf
ficoms
mov
imul
cmpb
or
lea
or
cmc
mov
xchg
outsl
addr16
cltd
pusha
in
test
les
rcrb
mulb
sti
or
lea
xchg
ret
and
cmp
mov
push
sbb
xchg
inc
inc
xchg
jp
std
in
inc
mov
push
sbb
cmp
jmp
xor
adc
ljmp
scas
lds
sbb
ljmp
xlat
and
das
js
cwtl
push
leave
adc
insl
ds
ja
push
push
pop
mov
and
jbe
adc
mov
adc
adc
lahf
fisttpll
sub
inc
mov
aaa
jbe
rcll
cmp
mov
sbb
push
xchg
jl
pop
aam
inc
mov
lcall
fstl
sub
test
jne
mov
push
pusha
lahf
ljmp
js
scas
cli
adc
test
jmp
sbb
push
pop
push
cmp
jne
push
sbb
mov
add
mov
push
pusha
cmpb
fisttpll
dec
inc
cmp
cmp
js
mulb
jge
or
inc
data16
jp
mov
and
push
scas
int3
lcall
movsl
fcompl
rcrl
pop
sbb
cmpsb
push
add
sub
jge
adc
mov
repnz
sbb
stos
jecxz
xor
mov
test
adc
sub
add
jo
dec
loope
mov
or
mov
adc
aaa
jbe
rcll
cltd
sbb
or
xchg
addr16
js
adc
test
cld
xor
in
fs
cwtl
sub
dec
outsl
pop
cld
fstps
into
jbe
insb
repz
inc
movsb
sahf
lods
rcrb
sarb
loope
repz
sahf
jp
adc
push
jl
add
jo
xor
jg
mov
pop
scas
ret
sub
mov
pop
pop
outsl
mov
sarl
jge
insb
cmpb
ss
push
jg
sub
cmc
mov
ds
xor
cmp
push
scas
dec
cld
pop
add
push
push
out
mov
push
lret
dec
mov
insl
lahf
cli
loope
jae
popa
cmp
bound
or
stos
call
sub
jle
das
aam
mov
mov
xlat
outsb
call
sbb
aas
mov
push
out
mov
inc
or
inc
outsl
or
ja
push
pop
popa
sti
cli
int3
cs
lahf
dec
or
insb
scas
cmp
test
or
push
lahf
test
nop
sub
push
jb
mov
or
inc
iret
outsb
sbb
mov
cli
push
lds
dec
cmpsl
andl
add
testl
inc
iret
daa
repnz
ret
sahf
inc
pop
xlat
xor
stc
outsl
jbe
loopne
cmp
pushf
pop
aad
lock
xchg
hlt
aam
sub
jno
xor
mov
push
divl
inc
pop
lods
cmp
ret
or
iret
cltd
mov
fcompl
sbb
loopne
out
aas
push
xchg
inc
cmp
in
sti
mov
test
xchg
sbb
push
enter
lea
push
add
mov
mov
and
rcr
sbb
or
pop
xchg
inc
loope
aam
icebp
mov
mov
das
pop
xchg
cmp
lret
out
mov
jl
call
call
ljmp
sbb
test
in
xor
xor
ret
mov
dec
lods
scas
dec
adc
test
xorl
cli
sbb
cmp
adc
ljmp
shll
cmp
xchg
pop
jns
das
inc
push
add
insb
jmp
jbe
int
jb
mov
cwtl
xor
mov
dec
in
add
pop
xor
xchg
into
loope
lods
cmp
lcall
dec
mov
mov
sbb
test
sti
cs
nop
pop
in
jno
mov
sub
dec
adc
dec
jne
xchg
xor
lods
sub
or
leave
jns
pop
pop
call
push
jb
cmp
jno
aas
popfw
sbb
orb
push
dec
mov
shr
fildll
fwait
sbbb
cld
and
arpl
addr16
cli
dec
xor
cmc
iret
adc
imull
lods
jns
sub
call
cltd
enter
mov
mov
inc
dec
cltd
loopne
xor
jmp
leave
loop
lods
xor
in
pop
nop
test
divl
sub
sar
rclb
add
and
into
cld
ret
pop
stc
imul
addr16
sub
adc
inc
pusha
subb
fisttpll
insl
jo
adc
mov
pop
cwtl
movl
sbb
xchg
jmp
adc
fstps
xchg
xor
je
pop
sub
cltd
pusha
call
push
adc
adc
clc
test
mov
f2xm1
push
aad
das
sbb
test
pop
loope
pop
or
add
movsb
adc
jge
mov
push
push
jg
aam
mov
and
push
inc
mov
aaa
clc
popf
out
xor
lods
sub
inc
fsub
movsb
mov
ljmp
sbb
jge
arpl
lahf
ret
push
int3
imul
orl
xchg
aas
add
sbb
lahf
inc
pop
lcall
xor
divb
sbb
ljmp
add
loope
pop
mov
imul
nop
inc
push
loope
lods
int3
imul
insl
push
mov
jmp
insb
sbb
shlb
repz
jge
mov
lret
push
sbb
shl
out
push
std
xchg
push
in
dec
rcrb
daa
inc
gs
xor
decl
adc
xor
mov
jge
inc
rcrl
pop
pop
push
imul
andl
loopne
negb
push
ret
lret
insl
pop
std
adc
xchg
bound
and
inc
aam
std
outsb
inc
or
fchs
movsb
and
or
jb
dec
push
sbb
pop
or
std
mov
or
push
imul
negb
xchg
pop
in
push
xchg
lahf
mov
lcall
jbe
inc
jl
js
xor
js
pusha
adc
lret
sub
fmull
and
pop
xchg
or
cmc
movsl
sub
cld
adc
add
fildll
push
and
xor
cmp
addr16
int3
repz
mov
xchg
jbe
xor
fdivs
cmc
mov
mov
fs
call
xchg
mov
scas
sub
cmpb
mov
orl
dec
mov
or
mov
loopne
cmpsl
cmp
adc
outsl
lea
jo
movsl
aad
icebp
adc
pop
popf
ds
imul
aas
xlat
push
popa
xor
dec
enter
mov
call
jno
fscale
sbb
imul
gs
mov
jge
into
pop
repz
das
adcb
pop
cltd
lods
scas
ret
into
or
or
nop
adc
movsl
mov
mov
adc
adc
adc
sub
hlt
and
or
xchg
rcl
add
fcomps
mov
test
and
mov
nop
mov
cmc
cmpsb
daa
push
push
dec
xchg
mov
dec
enter
mov
dec
mov
lods
cmp
es
jp,pt
sub
std
add
sahf
data16
test
xor
imul
mov
insl
fcompl
and
mov
jp
pop
into
adc
cmp
xor
stos
mov
add
mov
xchg
aad
icebp
adc
xchg
push
and
lock
inc
pop
mov
jmp
cmp
and
arpl
ljmp
cs
adc
fs
push
imul
cld
in
popf
mov
inc
cltd
xor
in
mov
push
jecxz
pushf
push
ret
hlt
jae
scas
ja
jnp
aam
addr16
daa
adc
cmp
fnstsw
dec
cltd
js
cli
inc
and
cli
popa
adc
es
pop
xchg
js
mov
push
popa
inc
sbb
or
fmuls
stos
movsl
test
inc
cmp
lods
fsubrl
push
mov
mov
mov
sahf
and
cwtl
fwait
scas
mov
add
ficompl
jb
inc
dec
pop
lock
or
loop
pop
or
mov
adc
sub
das
sysexit
js
outsb
aas
rcll
fcomp
lods
aas
inc
push
pop
lea
xchg
scas
jb
mov
pop
int
out
xorl
push
push
ud2
sub
inc
repnz
cmp
and
aaa
clc
push
and
int
adc
cmp
adc
cmp
adc
out
inc
insb
js
jecxz
nop
mov
insl
mov
aam
pushf
dec
ljmp
shll
pop
fmul
jbe
cmp
das
jnp
ret
stos
icebp
xor
sub
lds
cmpsl
mov
sub
inc
out
adcl
lock
fs
jl
add
fildll
cwtl
xor
js
xchg
dec
mov
stc
xchg
lret
dec
or
lahf
loop
inc
shr
or
test
jge
sbb
push
out
mov
ds
sub
rep
pop
les
cltd
push
adc
clc
pop
inc
push
pop
out
cmpsb
mov
adc
mov
jecxz
cmp
mov
leave
mov
cmpsl
cmp
ficoms
icebp
jbe
insb
out
xor
sbbb
sub
jp
xor
lret
dec
sbb
push
popf
mov
add
scas
int3
push
xchg
nop
jg
cmp
inc
push
sbb
in
insl
mov
adcb
xchg
loop
das
ret
cltd
sbb
mov
out
mov
mov
xchg
xor
subb
les
adc
in
out
hlt
mov
add
mov
push
xor
sbb
mov
xor
ljmp
aaa
mov
or
insl
pop
arpl
mov
jl
out
xchg
add
dec
push
cmp
out
in
sahf
dec
insb
nop
mov
mov
pusha
mov
mov
dec
lret
mov
dec
pop
sub
lahf
test
inc
mov
fsubrl
testb
xor
cmp
stos
jno
jp
pusha
push
xchg
sbb
jb
mov
push
rep
das
imul
push
pop
jbe
cltd
fnsetpm(287
aad
out
jnp
sbb
test
sub
mov
in
insl
setg
and
jb
aam
add
cwtl
mov
pop
stos
imul
hlt
inc
dec
ss
xchg
and
jmp
push
mov
mov
pop
and
out
xchg
push
adc
outsb
cmpsb
in
inc
cmc
push
dec
mov
call
shl
dec
inc
inc
sbb
pop
ds
std
jbe
pusha
stos
mov
das
mov
pop
cld
or
sahf
ds
lcall
pushf
cmc
jno
jbe
mov
fidivrs
hlt
out
in
jle
mov
jb
leave
ljmp
cmp
sbb
jg
jne
mov
roll
fdivr
ret
arpl
sti
fdiv
xchg
mov
test
mov
ljmp
cmp
push
pusha
idivb
test
loope
xlat
hlt
jp
jae
cmp
mov
loop
push
lcall
mov
rcll
push
pop
fstps
mov
and
push
cwtl
daa
add
in
mov
ja
push
add
push
fcmovbe
aaa
ja
mov
test
push
mov
adcl
push
sbb
outsl
dec
lcall
ljmp
pop
in
jo
movzbl
push
jg
cwtl
mov
cmp
in
push
imul
shl
mov
into
loope
adc
mov
sbb
mov
and
int
pop
cltd
in
in
push
test
pusha
push
mov
mov
in
mov
rcll
mov
scas
mov
lret
sub
int
imul
jbe
bound
ds
ret
daa
cli
xchg
test
push
test
adc
arpl
add
or
dec
xor
xchg
xor
mov
cltd
xchg
jb
in
mov
icebp
cmp
push
mov
lock
cmp
and
fstl
push
in
add
iret
jle
sbbl
add
popa
sub
xor
in
out
sbb
cmp
adc
xchg
mov
mov
sub
clc
xor
sub
adc
jmp
inc
add
in
lret
test
xor
lcall
or
aaa
push
and
mov
sti
xor
mov
dec
mov
pop
orl
dec
jb
push
and
sub
dec
push
cmp
push
out
in
sahf
dec
insb
nop
mov
dec
push
mov
xchg
jge
lret
cmpsb
in
arpl
mov
js
xchg
push
lds
xor
add
enter
mov
dec
mov
mov
or
lahf
pop
insl
mov
jle
and
jb
mov
and
jl
inc
inc
sti
jp
mov
push
cmc
in
insl
xchg
jge
jno
jp
xor
jle
test
or
int3
aaa
loop
lahf
lret
imul
fistpl
std
dec
adc
mov
add
xchg
rolb
and
mov
imull
cmp
daa
jle
xchg
jae
inc
negb
ds
orb
cmp
sbb
fwait
ds
add
pop
mov
xchg
dec
popa
fnstsw
test
dec
out
jns
mov
scas
sub
out
push
pop
ljmp
testb
fistpll
xchg
loopne
cli
inc
fs
cli
add
adc
shl
stos
add
xor
dec
mov
test
fs
xchg
ret
loop
faddl
jno
imul
lods
xchg
jae
mov
dec
pop
ss
rep
fdivl
jbe
rorl
cmpsb
into
daa
rorb
pop
dec
xor
lea
lods
xchg
push
test
push
push
mov
cwtl
fstps
add
dec
inc
scas
pop
imul
fwait
out
pop
enter
xor
cld
call
add
sub
add
sbb
ret
lcall
das
xor
pop
pop
icebp
mov
int
bound
mov
popa
fs
mov
setb
mov
cmp
sub
ret
fwait
mov
xlat
fidivrl
or
orb
das
sti
es
cwtl
out
inc
inc
adc
in
mov
dec
aad
fstl
hlt
inc
ljmp
xor
arpl
sahf
mov
iret
mov
andl
push
cmp
adc
xor
loopne
mov
push
add
notb
push
fsubl
das
sbb
and
orb
scas
jnp
dec
mov
push
scas
xchg
js
les
aam
xor
shrl
adcb
pop
fsubrl
leave
or
aas
mov
push
cwtl
in
repz
lock
cs
xor
into
into
pop
cmp
mov
clc
faddl
ret
cmc
adc
sbb
xor
or
mov
stos
xor
outsl
jb
mov
xchg
movsl
mov
xchg
aaa
mov
sahf
into
loope
adc
divb
flds
mov
mov
rcrl
jp
int3
jae
clc
sbb
cmpsl
mov
pusha
pop
mov
inc
adc
dec
xchg
aad
or
mov
lcall
inc
mov
out
das
jp
pop
cmp
int
xchg
outsb
leave
mov
lock
and
jo
xacquire
lahf
jne
push
ror
xor
ljmp
pop
ret
mov
loope
cmp
push
push
call
xlat
imul
imull
add
popa
pusha
icebp
sub
xchg
mov
pop
cmc
cs
xorl
adc
dec
adc
push
cmp
pop
pop
cmpsl
les
xor
sub
inc
pop
jg
sub
stc
in
dec
sub
arpl
jo
pop
push
jge
insl
sbb
stc
fdivrl
stc
xchg
hlt
xchg
or
xor
adc
into
loope
test
roll
cmp
push
add
pop
lock
cmp
std
test
aaa
sbb
imul
mov
ret
test
cmc
dec
aam
je
test
js
out
aas
mov
cmpsl
mov
xchg
lds
cmpsl
scas
fst
xlat
push
xor
pop
lahf
sbb
cmp
inc
addl
enter
or
push
and
jno
lea
push
loopne
dec
sub
jmp
sub
ja
sub
jb
cmp
mov
aas
mov
into
mov
add
hlt
pop
and
negb
lds
mov
sbb
sub
jg
int3
fdivrs
sub
lcall
sbb
ret
aaa
pop
mov
icebp
inc
movl
idivl
push
and
xchg
push
push
jne
jecxz
xchg
call
shrb
movsl
cmp
mov
push
jecxz
and
outsb
fcoms
jb
xor
push
dec
dec
pop
cmp
mov
idivb
inc
sahf
les
mov
ds
enter
je
inc
jns
sbb
jbe
add
int
rcl
pop
mov
or
cmpsb
testb
popf
enter
mov
ss
dec
add
cli
cmp
dec
sbb
imul
jnp
xchg
xlat
xor
ja
enter
add
jge
cmp
cwtl
sahf
shll
push
lods
neg
icebp
xor
xchg
xor
loop
lea
adc
dec
or
bound
cmp
or
jne
xchg
out
xor
pushf
pand
mov
pop
jnp
push
decl
iret
or
mov
or
rcl
xchg
push
and
dec
and
repnz
jmp
sti
pop
cmpsb
mov
mov
dec
push
pop
ret
inc
daa
sbb
cmpsl
or
xchg
cmp
dec
xchg
cltd
js
insb
jne
or
iret
daa
jns
lods
leave
push
gs
inc
das
ss
push
jmp
push
cwtl
in
xor
jg
out
adc
dec
loopne
mov
pop
jb
shr
cli
lcall
lahf
jp
stos
lea
arpl
outsb
push
movsl
push
lock
movb
cmpb
dec
and
mov
add
sub
test
mov
aam
mov
and
push
js
es
dec
setns
xchg
out
scas
cli
push
dec
dec
jae
not
add
popf
lcall
inc
inc
dec
push
fisubs
sahf
mov
lret
adc
sahf
int3
insb
cmpl
mov
add
xchg
mov
sti
fbstp
scas
loopne
mov
xor
mov
push
jp
test
out
mov
xchg
aam
fildll
out
pop
in
setno
mov
sbb
vmptrld
or
inc
push
add
stc
or
cli
cltd
xor
ficoms
sub
sbb
jne
sub
mov
jo
inc
shlb
sahf
test
add
jmp
sbb
fldt
xor
mov
inc
inc
iret
mov
push
lret
sbb
xor
add
ret
jle
aaa
leave
and
mov
push
sti
pop
mov
jne
inc
sub
in
sbb
jnp
aad
cwtl
icebp
mov
sti
sub
dec
xchg
jo
push
addr16
cmpsb
jp
std
in
dec
mov
mov
xchg
popa
adc
pop
fs
daa
sti
adc
aam
pop
mov
mov
inc
imul
inc
jnp
and
pop
data16
sub
or
lea
outsb
mov
iret
stc
pop
or
push
test
xchg
xchg
cmp
call
rcr
push
movsl
ds
push
fsubr
pop
dec
loopne
decl
std
pop
cltd
pop
fimuls
xor
push
and
jbe
xchg
mov
sbb
mov
pop
push
push
jb
gs
movsb
mov
js
push
aad
fwait
out
add
jne
fwait
push
bound
inc
xchg
aam
bnd
xchg
movsl
pop
xor
outsl
aad
push
inc
dec
jl
dec
idiv
pop
pop
data16
dec
fildl
rol
out
jg
imul
loop
repnz
mov
sti
pop
dec
fstpl
xor
ljmp
in
push
and
outsb
mov
test
sahf
adcl
sbb
xchg
sub
add
fadds
es
in
mov
mov
pop
xor
int3
or
lcall
lods
adc
in
xor
sbb
jo
dec
mov
out
lret
pop
add
pop
cltd
pop
mov
push
xor
cmp
ds
mov
sti
in
sbb
push
lea
out
or
adc
aaa
lcall
gs
or
inc
xlat
arpl
cltd
mov
or
sbb
jmp
lds
pop
js
inc
subl
inc
in
push
int3
movsb
pop
aam
inc
xchg
cld
pusha
mov
jmp
and
and
repnz
jb
mov
sbbl
inc
cmc
jb
mov
in
sub
into
clc
movsl
cmpl
xchg
cmp
sbb
daa
push
notl
push
inc
jecxz
ret
div
les
mov
adc
shl
lods
test
push
adc
dec
fcoms
jl
lods
xchg
js
mov
flds
mov
loop
cltd
ror
push
test
lret
xlat
bound
sbb
stos
fs
jne
in
cmp
xor
or
lret
mov
es
dec
push
arpl
lods
cmpsl
dec
push
gs
xor
repnz
cmp
xor
das
push
stos
push
je
inc
lods
cmpsb
xchg
mov
imul
in
fiadds
fdiv
not
jne
sarb
and
pop
xchg
incb
ljmp
scas
cmp
mov
push
sbb
mov
mov
pop
outsl
jb
jne
push
and
js
mov
dec
shlb
addb
leave
adc
mov
rorb
push
cmp
les
inc
push
out
add
jb
insb
jg
cmpsl
jecxz
pop
sub
sbbl
xor
iret
dec
pop
pop
pop
jb
inc
imul
mov
xchg
pop
or
jnp
xchg
outsb
insl
mov
test
test
xchg
sub
push
sub
call
mov
out
jne
or
es
pop
and
cmp
push
adc
fimull
arpl
gs
mov
shlb
jge
mov
jb
xor
xor
decl
mov
test
loopne,pn
les
sbb
or
aad
pop
int
add
imul
in
jbe
xor
sub
lock
sub
xchg
sub
cmp
lea
dec
stc
mov
jl
int
cmpsb
jne
das
inc
mov
repnz
std
or
xor
out
cmp
mov
out
mov
sti
adc
push
push
test
fwait
lcall
es
fdivrl
es
dec
pop
pusha
cmp
bound
cld
xchg
aad
mov
repz
shl
loope
adc
outsl
mov
out
cmp
das
push
push
inc
mov
adc
addb
jbe
rorb
jnp
in
mov
cli
ds
or
daa
jb
cmpb
fisttps
jle
pop
cs
mov
and
jo
or
out
fwait
mov
mov
mov
in
pop
pop
nop
adc
movsl
popa
call
popa
inc
inc
int3
jbe
lahf
inc
orl
fildll
push
xchg
add
and
stc
mov
cmp
pushf
pop
adc
hlt
push
jae
std
push
push
adc
loope
mov
sub
es
push
dec
mov
mov
and
rcll
out
or
push
mov
mov
cmp
mov
fwait
popf
mov
xchg
sahf
sarl
mov
hlt
mov
lahf
and
xchg
push
lahf
int
lahf
hlt
out
in
aaa
xchg
pop
ficoms
in
iret
cmpsb
mov
mov
hlt
xor
ljmp
paddusw
mov
xchg
out
push
ficoml
adc
stos
in
hlt
jp
push
cmc
jae
test
inc
inc
rorl
into
cltd
xorb
lea
shll
pop
icebp
mov
vcvtps2pd
lea
xor
fisttpll
out
inc
mov
jbe
jle
sub
jo
and
sub
sbbb
arpl
jo
xor
pop
outsl
jb
pop
jnp
addb
subb
mov
lret
in
addb
adc
cltd
mov
in
sbb
test
ja
jns
and
gs
scas
sub
cmp
xor
mov
popf
imul
mov
mov
mov
nop
mov
push
xor
ljmp
mov
out
add
jmp
sbb
rcll
cmp
mov
ret
dec
push
adc
pop
fildll
push
ja
cmpsl
cmp
gs
dec
stc
out
jae
jge
movsb
xchg
xor
aam
dec
lret
mov
push
jecxz
leave
pop
fmul
jbe
insb
xor
ds
xchg
das
jnp
ds
mov
mov
adc
inc
pop
int3
adc
lods
xor
jmp
ds
out
dec
shlb
cld
mov
push
in
xchg
inc
lea
fimull
test
pop
movsl
inc
xor
inc
loop
inc
adcl
xor
mov
cmp
sub
inc
out
fdivr
iret
scas
dec
fldenv
mov
cmp
adc
aas
mov
in
jp
inc
adc
leave
mov
add
and
dec
les
jge
adc
push
or
sub
sbb
mov
dec
mov
xor
lahf
mov
push
aaa
int
cmp
push
sbb
sbb
mov
mov
dec
sub
into
push
movsl
test
dec
gs
dec
push
ljmp
arpl
ss
xchg
ret
pop
push
les
jo
adc
subl
xchg
and
popf
lret
mov
jne
out
aad
xchg
push
add
popf
test
ret
insb
sub
pop
mov
stos
push
sbb
mov
ret
mov
sub
dec
lods
insb
bswap
insb
pop
decb
int
fs
insl
cmp
test
call
icebp
cmp
inc
test
sbb
jecxz
shl
mov
dec
mov
push
lret
adc
dec
dec
mov
fimuls
popa
enter
jecxz
push
mov
stos
mov
outsl
aaa
daa
insb
leave
jg
xchg
fs
hlt
mov
push
cmp
add
push
xor
jne
bound
inc
mov
or
fstp
sbb
call
mov
sbb
dec
gs
sbb
stos
mov
sub
loopne
adc
fwait
fs
je
xchg
or
xor
or
fucom
repz
mov
push
adc
loopne
mov
add
addl
and
pop
into
lods
loop
fadds
in
mov
pusha
mov
insb
sbb
or
or
pop
clc
mov
push
xor
sahf
decb
int
and
and
push
sbb
and
add
dec
jne
add
sbb
in
mov
sub
or
jge
lahf
lahf
or
sbb
mov
jne
aaa
mov
jno
lahf
push
test
test
adc
xchg
pop
and
ficoml
ror
mov
out
add
lcall
into
cld
aas
jnp
dec
je
sub
or
xchg
sahf
movsl
addl
and
imul
jl
pushf
scas
ret
cmp
loopw
mov
sbb
sub
in
jecxz
or
cmpsl
push
stos
fmuls
jge
add
dec
in
cmp
cltd
xchg
lahf
pushf
add
jb
repnz
out
out
iret
sbb
push
jp
std
in
loopne
in
or
rcr
sahf
decb
int
inc
sub
mov
dec
out
loope
adc
mov
inc
loop
dec
imul
or
cmpsb
std
arpl
cmp
inc
xchg
jmp
std
mov
inc
sarb
lods
in
sarl
sub
pop
test
jmp
xchg
repnz
mov
cmpsl
mov
notb
push
call
push
sarb
clc
les
mov
in
jmp
gs
rorl
test
jge
mov
fwait
iret
cmp
sub
mov
das
test
pop
cmp
cmc
fsubl
iret
mov
xchg
mov
pop
subb
leave
push
or
add
test
jne
sub
or
sbb
mov
lea
jg
lock
mov
bound
loop
jmp
add
sbb
mov
push
mov
faddl
and
dec
jb
pop
aas
inc
xchg
pusha
mov
lods
jmp
xlat
cmp
hlt
fcoml
xchg
jge
dec
mov
cmc
dec
bound
push
xchg
or
iret
mov
push
out
jno
adc
fisttps
stc
push
loopne
mov
fnsave
inc
xlat
ja
add
dec
pop
cmc
add
dec
sub
or
ja
int
jno
addr16
js
adc
movsl
jmp
sbb
test
add
data16
shrb
xchg
xchg
idiv
add
xchg
sbb
movsl
mov
xchg
xor
cs
out
mov
ds
cli
std
mull
sbb
xor
xor
or
xchg
jp
ja
cld
pop
mov
pop
mov
add
cmp
adc
xchg
mov
mov
pop
movsl
out
sub
pop
push
jecxz
mov
iret
mulb
jae
mov
call
mov
negb
xchg
scas
sbb
fdivs
fadds
add
lods
adc
xor
xor
cmp
inc
jae
js
pop
jne
mov
ds
push
mov
test
add
jl
mov
mov
cld
sub
inc
lods
fucomp
loopne
xchg
add
in
lcall
push
adc
repz
bound
mov
roll
pushf
inc
or
repz
pop
bswap
scas
lds
lds
fistpll
mov
xor
les
mov
enter
ss
outsl
mov
cmc
or
ljmp
out
in
aaa
pusha
cltd
outsl
push
call
adc
pop
mov
std
dec
mov
mov
jmp
cmp
clc
jg
rorb
clc
xchg
xor
ss
leave
inc
mov
push
xchg
scas
sbb
fs
popl
dec
push
lock
leave
adc
nop
push
and
sbb
xchg
xor
add
je
sub
sub
cmp
out
mov
cwtl
xor
jb
movsl
push
push
shll
cmp
pop
jmp
mov
xor
fnstcw
stos
jno
fdivp
imul
mov
mov
insb
add
or
dec
mov
repnz
mov
xchg
test
adc
aam
mov
fidivrs
cs
call
cmp
jbe
sub
rclb
jb
scas
ret
mov
sub
sub
mov
pusha
ret
ffreep
mov
pop
and
and
push
xchg
mov
out
jge
pop
ret
inc
mov
mov
jge
or
cmp
jns
mov
aaa
sbb
insl
pop
jp
test
push
xchg
stos
dec
inc
subb
stc
xchg
and
jecxz
dec
mov
mov
jge
pop
data16
cmp
clc
sub
push
fdivrp
lods
or
decb
loop
xlat
sub
pcmpeqb
out
mov
cmp
lock
in
or
std
sbb
popa
xchg
pop
jl
dec
pop
xor
aam
jmp
insb
sahf
pop
xor
cmp
inc
into
popa
add
es
pushf
scas
ret
push
ret
mov
outsl
jns
pop
add
adc
jg
lret
xor
push
adc
dec
testl
mov
in
jle
aaa
sbb
addr16
jo
sbb
add
sbb
ss
dec
lret
sub
test
not
ss
nop
jp
or
in
or
jmp
mov
repnz
cmpsb
xchg
xorl
and
adc
imul
push
pop
push
jmp
push
push
or
jp
cs
pop
add
xor
push
mov
mov
dec
cmpsl
and
mov
inc
add
aaa
je
ret
jp
dec
leave
out
and
or
add
cs
sbb
es
shll
push
adc
sbb
inc
aam
sub
xchg
lea
inc
xor
or
push
pop
fsubrl
shrb
icebp
scas
sub
pop
push
jns
or
pop
cltd
insl
mov
ret
dec
fwait
or
mov
stc
xor
mov
testb
dec
fmuls
fistpll
inc
in
std
leave
add
mov
cld
call
mov
mov
addl
test
mov
mov
arpl
loope
lret
into
loope
sub
mov
mov
sbb
mov
pop
mov
shll
inc
sub
or
das
inc
mov
or
adc
jl
add
or
sbb
sbb
pushf
mov
sahf
fnsave
adc
cmp
stos
data16
sub
dec
mov
out
or
shrl
adc
dec
adc
test
sub
mov
cli
add
push
ss
outsb
vmwrite
cmpsb
sub
xor
aam
fwait
xor
mov
mov
das
test
add
imul
fwait
jbe
jns
push
sub
add
sub
dec
out
movsl
push
arpl
addr16
std
adc
mov
xchg
xchg
movsl
jb
stos
lds
sahf
or
cmp
add
test
pop
push
pop
add
test
sbb
sbb
jb
repz
stc
les
es
dec
or
fisubs
js
outsb
int
adc
outsb
rorb
lahf
mov
mov
mov
adc
xchg
push
jl
inc
test
sbbl
dec
cmpl
mov
pop
mov
adc
and
andl
and
jb
movsb
adc
movsb
insl
rclb
test
xchg
inc
aam
pop
hlt
xor
enter
xchg
lds
jae
lret
dec
pop
mov
testl
mov
push
rcr
mov
insb
or
add
mov
les
inc
push
add
popf
stos
insb
daa
je
aas
sub
pop
les
ror
icebp
xor
xchg
xor
pusha
cmp
xchg
inc
mov
pop
ja
sub
loope
rep
add
cmp
sbb
in
pop
sahf
out
in
pop
push
jg
leave
sub
fwait
jns
in
ficomps
and
cmp
xchg
fs
and
dec
adc
sub
ds
sbb
jmp
mov
jecxz
scas
and
mov
test
andl
cmp
push
dec
hlt
mov
loop
xchg
scas
movb
pop
inc
push
testl
fldcw
andl
sub
jmp
jmp
xlat
in
outsb
dec
pop
jb
mov
mov
scas
jnp
inc
pop
xor
cli
cmp
jmp
gs
cld
push
clc
call
repnz
push
push
xchg
mov
out
add
mov
leave
push
scas
into
neg
dec
mov
fwait
pop
and
outsl
fldl
lock
aaa
pop
add
inc
ljmp
pusha
pop
cld
imul
in
pop
repnz
add
pusha
jg
ret
rorl
push
test
test
into
aaa
xchg
insl
xchg
aaa
fiaddl
aam
and
cmpsb
cmp
pop
mov
cmp
out
push
dec
jnp
sub
xor
test
xchg
sbb
fcompl
out
cld
sbbb
out
mov
mov
push
and
negb
cld
lss
stos
or
pop
inc
push
fsubr
push
roll
or
out
pop
pop
enter
gs
lock
out
sbb
ja
les
push
mov
and
xor
fmull
mov
cmpsb
add
mov
hlt
sarb
iret
outsb
sahf
gs
pop
cmp
stos
and
notb
dec
sub
mov
aam
and
popf
stc
je
sub
lock
aad
xchg
insb
je
push
sarl
dec
xchg
xor
add
int3
dec
aaa
pusha
pop
add
lock
mov
xchg
test
rcll
jmp
push
arpl
sbb
psllq
xchg
jg
xchg
inc
sbb
sub
inc
xchg
or
sahf
call
sub
push
sbb
adcl
jp
cltd
cmpsl
jp
test
xchg
sbb
push
ja
push
loopne
dec
add
or
ss
add
add
sub
daa
out
add
pop
adc
xacquire
jne
ror
and
mov
scas
jnp
dec
mov
clc
jg
into
push
xchg
incl
shrb
sbb
test
fstl
movb
push
mov
scas
pop
or
test
xchg
xchg
idiv
add
loop
lods
mov
mov
mov
push
out
rol
cmc
sub
pop
xchg
inc
inc
inc
test
ds
fsubl
mov
cmpb
pop
mov
mov
fistpll
mov
and
pushf
pop
adc
push
out
push
arpl
sbb
psllq
xchg
jg
xor
out
jl
jle
sbb
inc
gs
xor
inc
mov
ljmp
inc
dec
jmp
fidivs
arpl
leave
aad
pusha
jae
xchg
mov
adc
mov
mov
orl
xchg
movntq
xor
cmpb
mov
ljmp
mov
ljmp
pop
pop
cltd
pop
adc
and
ja
or
add
inc
movsb
cmp
into
cmp
ss
dec
rcll
mov
jl
or
pop
loope
idivl
ret
and
in
in
sbb
idiv
das
out
call
xorl
sub
jns
inc
jge
mov
in
push
mov
inc
outsb
add
sub
addr16
imul
jnp
sahf
mov
xchg
push
pop
mov
loopne
pop
arpl
loope
mov
jle
adc
jl
out
xchg
outsb
flds
pop
insl
cmp
lea
push
out
std
cmc
pop
jle
insb
jg
xchg
pusha
popf
mov
stos
lds
cs
mov
cs
adc
mov
xchg
bound
testb
cmp
jo
xchg
loop
mov
mov
loop
mov
cli
or
cmp
jnp
hlt
stos
mov
inc
xor
xchg
das
mov
fistps
sbb
dec
push
lods
sub
xor
xchg
pushf
cmp
stc
add
cwtl
sub
pop
cmpl
cwtl
mov
jns
mov
movsb
mov
push
inc
outsl
icebp
xor
aaa
pop
or
mov
ljmp
mov
mov
lock
ds
or
inc
stc
fisubrs
test
cmp
add
inc
cmp
lea
mov
shrb
clc
mov
cmp
mov
sbb
daa
mov
and
adcb
pop
mov
push
iret
mov
movl
fcomps
divb
bound
xchg
cmp
cld
test
loope
cmp
sub
jmp
popa
into
fwait
popf
and
mov
push
rcr
xor
cmp
dec
mov
in
cmp
cltd
bnd
sbb
stos
jmp
mov
jl
mov
cltd
adc
push
cmp
sbb
roll
sbb
adc
movsb
fwait
xor
and
cmp
fs
aad
in
mov
pop
daa
in
cltd
dec
jae
mov
js
xchg
test
hlt
ds
mov
mov
out
fmulp
int3
mov
mov
into
loope
inc
cltd
jge
jecxz
inc
hlt
lahf
push
callw
add
xor
mov
pop
dec
test
test
sbb
faddl
and
in
mov
loope
sbb
test
pop
fcoms
push
xchg
leave
adc
ficomps
ja
xchg
pop
xchg
jae
faddl
push
mov
xchg
and
fdivl
clc
test
fnstenv
lret
mov
push
outsl
lods
repnz
dec
push
gs
rcl
push
mov
xor
xchg
dec
mov
leave
xchg
dec
sub
xchg
fisttps
stos
das
mov
pop
aaa
std
hlt
in
lret
xchg
testb
sti
test
lahf
pusha
sub
push
outsl
stos
pop
clc
and
adc
scas
shll
out
pop
pop
mov
ret
into
repz
mov
stos
mov
xchg
mov
xlat
insl
loope
mov
and
mov
or
sub
pop
and
leave
dec
sbb
mov
add
inc
imul
fcompl
and
dec
fnsave
jmp
subb
xor
mov
pop
xchg
cmp
mov
mov
jp
aam
push
mov
and
ficoml
xchg
ret
inc
sub
fistl
sti
mov
add
xor
lds
cmp
add
mov
mov
loopne
push
mov
insl
je
rcr
lahf
sub
clc
mov
cli
sbb
fucomip
adc
dec
enter
popf
std
xor
in
push
rclb
loop
add
push
cmp
xor
push
sbb
xchg
or
jo
test
push
cmp
testl
imul
repz
jl
out
xchg
add
retw
scas
dec
jnp
cmpsb
loopne
out
jl
dec
test
cmpsb
push
mov
jmp
popf
orl
jns
outsl
repnz
sbb
icebp
mov
and
in
push
dec
movb
fiadds
pop
jle
inc
xchg
out
sahf
notb
fmull
mov
xchg
arpl
scas
ja
mov
xchg
and
cmp
cmp
adc
dec
fs
xchg
sti
mov
aam
sub
repz
or
fsubrs
xor
js
jl
pop
outsl
cmpsb
stc
leave
shll
add
addr16
or
outsl
adc
sbb
ds
mov
int
dec
pop
cmp
jo
xchg
loope
test
jecxz
outsl
jb
adc
call
clc
mov
out
mov
jg
pop
cmpsl
inc
lods
push
into
loope
ds
cltd
adc
cli
cltd
pusha
call
push
mov
add
sbb
jne
int3
mov
pop
shl
inc
faddl
hlt
cmp
pusha
jae
dec
dec
test
cmc
mov
ja
in
mov
aad
ficompl
push
mov
pop
and
xlat
jb
ret
fsubr
xor
pushf
repz
cltd
and
cmc
enter
and
or
or
mov
xchg
fdivp
lods
mov
push
mov
add
push
stos
adc
fstl
out
cwtl
cld
out
add
cltd
je
decb
fwait
shr
enter
ss
pop
cmp
iret
pop
test
and
mov
pop
jo
push
jp
sub
cmp
scas
lds
sbb
loop
xor
push
jo
and
lea
in
xor
lret
pop
aaa
push
mov
pushf
dec
xor
adc
adc
sub
or
inc
jg
test
ffreep
mov
push
mov
aaa
cmp
arpl
outsb
cmp
pop
xchg
inc
loope
in
mov
and
out
cmp
lcall
lcall
outsl
xor
jg
add
cmpsl
cmp
xchg
shr
mov
push
daa
add
js
mov
jl
stc
cmp
dec
addl
gs
mov
cmp
push
xchg
push
std
sbb
fistpll
pop
aam
mov
mov
xor
imul
lret
cwtl
fwait
notl
enter
xchg
inc
enter
lret
cmpl
addr16
cltd
pusha
movsb
inc
sub
add
insb
dec
test
fucom
sub
dec
fistps
pop
inc
jne
pusha
subb
lea
gs
cmp
mov
mov
mov
xor
cmpsl
or
in
or
lods
cmpsl
xchg
mov
arpl
push
mov
cmpb
xchg
sbb
inc
sbb
jg
mov
loop
adc
dec
mov
out
into
cmpsb
cmovbe
popf
test
adc
popa
mov
or
push
iret
inc
imul
test
iret
or
daa
pop
ror
in
lods
je
lea
ret
inc
insl
dec
loopne
inc
lods
fcomp
dec
imul
sarb
inc
push
addr16
je
out
push
cmc
fs
adc
mov
pop
mov
pop
imul
shrb
cwtl
mov
push
das
xor
fwait
and
mov
std
movsl
adc
dec
bound
roll
dec
push
inc
loope
es
or
scas
xor
ds
pop
clc
test
in
or
insb
sub
and
push
adc
inc
or
sarl
mov
or
arpl
mov
push
xchg
push
push
clc
mov
loope
mov
dec
and
xor
stos
push
push
int3
fiaddl
cmpsb
mov
mov
inc
movsl
push
and
pop
xchg
js
les
cmpsb
loopne
stos
push
fists
js
fwait
mov
lea
lods
xchg
sbb
pop
jg
lock
lcall
icebp
std
dec
mov
orb
dec
fsubs
mov
in
mull
push
sub
rolb
fsts
movsb
fildll
xorb
inc
ret
push
repnz
leave
popa
jmp
into
jbe
mull
fisttpl
nop
adc
repnz
fldcw
imul
and
popf
lods
mov
out
aad
sbb
test
fbld
addr16
pusha
jg
and
fimull
pop
push
and
sbb
pop
and
pop
test
xor
dec
aaa
out
push
mov
gs
push
hlt
lds
orb
jnp
sub
cmp
aas
int
xor
and
pop
cmpb
orl
int
inc
testb
cmpsl
bound
mov
sbb
or
mov
push
outsl
lea
push
mov
popf
sbb
aad
aas
loope
jmp
pop
add
adc
xchg
subl
jnp
lea
xchg
incl
cs
xlat
mov
lcall
addb
mov
push
add
enter
push
push
or
adc
mov
mov
adc
sti
adcl
es
xor
mov
fwait
loop
sub
sbb
testb
lahf
cmpsb
cwtl
in
pop
jnp
pop
cmp
test
in
rclb
mov
and
imul
and
sub
in
out
scas
xchg
dec
sub
or
mov
loopne
imul
lods
add
lea
dec
movsb
xor
js
lock
mov
stc
rcll
sbb
js
cmp
js
fdivrl
sbb
outsb
std
cld
test
ds
mov
xor
rorb
adc
loope
data16
inc
inc
dec
test
xlat
pop
push
or
push
insl
dec
fwait
or
std
mov
push
scas
xchg
push
jno
push
push
xchg
cmp
gs
sbb
inc
xlat
fidivrl
xchg
push
cmp
fldt
mov
sbb
movsl
add
mov
cmp
loopne
sub
mov
out
addr16
cli
sub
sub
outsb
xchg
fdivrs
cli
pop
scas
scas
xor
mov
mov
pop
and
inc
addr16
hlt
cli
pop
out
mov
jl
pop
stos
mov
dec
mov
lods
cmp
les
sub
pop
inc
ljmp
mov
andb
sar
test
inc
cmpsl
or
dec
cwtl
clc
fimuls
cli
sbb
int
push
pushf
mov
jge
add
movsb
adc
push
adc
xlat
ss
inc
sub
fcom
and
mov
stc
and
in
dec
out
and
and
push
inc
jmp
movsl
stos
hlt
xchg
cmp
sub
mov
lret
insb
mov
in
jne
filds
add
mov
notb
jnp
test
es
cwtl
inc
ljmp
std
sbb
sahf
lret
jle
pop
outsl
adc
test
mov
inc
xchg
lock
lds
in
aaa
mov
mov
dec
or
into
out
cmp
pop
jg
or
sub
ror
sbb
lcall
mov
fstpl
pusha
jg
scas
sbb
adc
xor
movsl
fs
aam
popa
cmpsl
inc
adc
subb
xor
dec
js
push
outsl
adc
test
cmp
lret
stos
popf
sub
mov
xor
out
cmp
roll
in
jbe
fstl
cmp
cmp
jle
fwait
into
cmp
and
das
mov
push
and
push
inc
call
gs
pop
fmul
jbe
insb
xor
xor
lds
xor
adc
adc
shrb
ja
or
in
leave
les
imul
mov
aam
fnstsw
and
and
lcall
dec
mov
dec
mov
hlt
jge
push
leave
mov
addb
jno
sbb
ljmp
js
sbb
inc
lds
aas
inc
or
cmp
ljmp
aaa
add
xchg
loope
subb
jecxz
cmp
mov
jb
leave
lcall
lds
fdiv
pop
mov
stos
xchg
repnz
push
jmp
inc
cmp
inc
stc
filds
cltd
pop
cmc
in
add
sub
push
mov
in
cmp
inc
push
cli
dec
sti
xchg
and
in
jl
loop
call
sub
scas
xchg
and
scas
ret
push
cwtl
arpl
stos
iret
jp
fdivrs
cltd
jb
loopne
outsl
imul
test
idivl
pop
sub
arpl
into
test
sbb
jg
sub
pop
mov
ret
dec
mov
xchg
mov
shl
sti
dec
push
aam
into
loope
sub
mov
or
test
adc
mov
test
ds
mov
popa
or
adc
dec
pop
jae
adc
fwait
or
je
int
mov
inc
pop
push
das
jae
imul
add
jbe
insb
out
xorl
push
xlat
add
outsl
mov
stc
jne
inc
pop
out
mov
pushf
mov
mov
cli
enter
pop
pusha
pop
jp
xchg
nop
mov
jmp
cmc
and
add
int
scas
mov
cmp
in
inc
call
gs
pop
fmul
jbe
jbe
inc
mulb
in
fdivp
sbb
movsl
lds
dec
bound
sub
push
addr16
add
mov
test
or
repnz
ret
jecxz
lret
ret
xchg
fcompl
jno
sbb
or
and
std
or
addr16
cs
push
test
pusha
mov
insl
test
dec
push
jecxz
and
sti
cli
inc
lret
cmp
ljmp
lods
push
adc
xor
lock
orb
jl
lret
mov
js
adc
rclb
dec
push
jnp
push
cmp
lock
frstor
and
sbb
xchg
push
scas
mov
orl
dec
pop
inc
xlat
aaa
int
cmp
shr
add
push
cmpsl
push
cmp
mov
scas
adc
mov
pop
mov
cs
dec
sbb
cltd
cmc
lret
xchg
js
arpl
insb
push
and
hlt
add
std
cmp
sar
fcomip
mov
inc
mov
sub
in
jmp
daa
sbb
xor
sub
cmpsl
ret
mov
dec
push
in
inc
sbb
pop
movsl
lods
repnz
je
mov
dec
sahf
mov
sub
int
or
mov
push
into
shll
test
xchg
out
test
sti
xchg
dec
push
push
jecxz
and
sub
pop
fmull
or
jmp
cmc
cwtl
stos
mov
test
ljmp
iret
in
dec
sbb
or
js
mov
adc
daa
lock
sub
sub
xchg
roll
mov
xlat
nop
popf
dec
or
pop
cmc
jne
or
shll
js
push
movsb
ss
movl
push
xor
cmp
cs
sti
xchg
roll
pop
xlat
jmp
das
adcb
dec
sbb
pop
pop
sahf
stos
xchg
stos
pop
mov
lods
outsb
in
jae
ljmp
inc
mov
fisttpll
sub
idivl
mov
movd
add
mov
out
nop
xor
ds
orb
cmp
dec
out
sbb
icebp
adc
pop
imul
enter
jecxz
andl
jnp
sub
adc
aaa
xchg
sub
sbb
add
aaa
pop
fidivrl
mov
sub
xchg
mov
bound
adc
pop
pop
push
sahf
and
mov
adc
daa
jb
lods
pop
loope
in
jp
mov
enter
pop
or
hlt
addb
dec
pop
jnp
jno
in
cltd
and
or
adc
cmp
ja
movsl
cmp
lods
sub
mov
mov
jg
xchg
lahf
inc
cmp
int3
imul
mov
inc
popf
arpl
mov
fstl
loopne
loop
fnsave
adc
cli
mov
fstps
sbb
lock
aad
sahf
lods
and
ret
ret
movsb
mov
mov
jg
or
mov
fsubr
nop
inc
mov
mov
aaa
divl
cltd
xchg
arpl
out
pop
lock
jnp
lock
test
mov
fiaddl
sbb
cmpsl
mov
pop
movsb
inc
xchg
sub
js
mov
sbb
cmpsl
movsb
lods
dec
xchg
inc
pop
jbe
pop
ret
loope
sub
cmp
pop
add
mov
outsl
add
out
add
add
cltd
pop
xlat
mov
outsb
pushf
jnp
gs
cmp
addr16
clc
and
inc
push
jnp
aad
sahf
lcall
cmp
dec
mov
sbbl
cmovle
pop
jl
or
ret
add
cli
cwtl
and
stos
adc
out
insb
cli
mov
testl
cld
jb
fdiv
adc
inc
pusha
subb
lea
movsb
jb
pop
push
mov
pop
cmp
je
push
pushf
or
inc
rorl
sbb
call
mov
sahf
stos
mov
not
movsb
and
clc
inc
callw
inc
ljmp
data16
outsl
push
out
fstl
hlt
ljmp
pusha
imul
leave
pop
inc
adc
sub
lea
sbb
testl
ret
js,pn
dec
mov
lret
in
jo
push
hlt
xor
div
sub
cmp
add
stos
es
xor
push
mov
addr16
js
adc
xchg
fcmovnbe
aam
xchg
xchg
mov
push
lahf
inc
insl
sub
mov
inc
cwtl
int3
scas
mov
dec
loop
mov
fs
fdivp
faddp
fiadds
loopne
decl
or
mov
std
jne
mov
sbb
popf
popa
xor
repnz
xchg
sti
xor
cmpsl
popw
decb
xchg
xor
xchg
push
mov
loope
push
sbb
psllq
xchg
xor
add
pop
cli
pop
lock
inc
sub
pop
add
jb
gs
xor
cs
insb
add
mov
add
pop
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
pop
push
push
popa
jb
and
push
je
popa
insb
je
add
call
pop
sub
mov
add
add
jmp
jmp
add
jmp
sub
add
jmp
add
sub
mov
nop
lea
mov
lods
clc
stc
nop
sub
clc
add
xor
add
dec
add
dec
sub
stc
ror
stc
sub
add
nop
nop
nop
stc
xor
sub
add
stc
nop
sub
clc
add
xor
stos
loop
clc
jecxz
jns
jmp
mov
jmp
in
outsl
or
mov
cmp
iret
jecxz
sub
ja
jno
cmp
imul
out
bound
or
pushl
mov
cmp
and
jbe
outsb
out
push
int3
fwait
xchg
pop
ret
rclb
mov
imulb
pop
sub
lret
sbb
mov
pop
add
sub
mov
xorb
fisubrl
and
out
movsl
pop
out
out
push
lock
cmp
mov
jo
dec
xchg
arpl
cltd
popa
xchg
and
sub
jg
inc
jne
add
pop
and
movsl
xchg
cmpsl
push
outsb
mov
cmpsl
call
and
pushf
jns
test
les
sub
push
in
or
inc
inc
dec
pop
mov
adc
sti
movsb
pop
ja
leave
add
cmc
shll
adc
adc
cmp
cmp
mov
mov
fsts
xchg
push
call
cmp
inc
mov
add
out
xor
sub
aaa
lret
and
pushf
inc
xchg
ja
jne
in
enter
inc
psubusw
stos
jecxz
pop
xor
daa
pop
cmp
adc
push
fidivl
les
mov
mov
mov
orl
mov
push
sar
mov
cmp
xchg
sbb
inc
adc
push
push
jae
arpl
andb
js
stc
nop
push
xchg
dec
rolb
out
mov
loopne
xor
aad
xlat
jg
xorl
and
dec
xor
icebp
in
iret
aam
cmpsl
decl
int3
sbb
cmp
push
adc
hlt
lea
sbb
or
pop
or
daa
jge
xchg
shrl
sub
jle
lcall
inc
test
out
arpl
bound
mov
xchg
lods
dec
clc
call
nop
lods
mov
jge
ja
test
sbbb
cmp
push
cmp
pop
sti
popa
stos
cltd
xchg
sub
in
es
mov
mov
daa
pop
cs
mov
inc
mov
sbb
rcll
negl
or
insl
out
mov
push
jge
adc
jmp
hlt
or
loopne
scas
or
cmp
xchg
out
bound
fwait
mov
stos
mov
cmp
sub
xor
dec
out
out
dec
cmpsl
xor
dec
fdivs
stc
jmp
mov
xchg
dec
dec
movsl
push
push
stos
cltd
cmc
xchg
mov
fmull
std
in
andl
mov
add
push
mov
stc
or
pop
cli
adc
mov
call
jmp
std
sbbb
cmp
pop
shrb
imul
pmullw
fisubrl
jne
push
push
push
sub
mov
lds
call
push
push
mov
ja
push
int3
dec
xlat
std
pop
mov
outsl
pop
sbb
cmp
test
lahf
jg
addr16
sub
mov
mov
and
sbb
mov
data16
incl
ret
and
pop
in
movsl
mov
rorl
mov
cmp
jb
push
jb
in
out
push
outsl
push
lods
sub
jg
in
repz
mov
push
ret
adc
in
xchg
outsb
inc
mov
fdiv
and
cmp
movsl
test
int
add
push
aas
loop
cmpsl
push
scas
sbb
test
push
adc
and
test
and
mov
mov
mov
push
mov
sbbl
dec
add
or
sub
dec
push
pop
xchg
mov
dec
mov
icebp
or
ja
clc
push
push
inc
iret
sbb
lret
cmp
jno
sbb
mov
xor
jnp
int
jge
pop
insl
cmp
aaa
lahf
xchg
lds
sub
out
test
sahf
xchg
mov
cmpb
aaa
dec
sub
out
pop
push
shll
or
mov
lds
rorl
mov
outsb
inc
loope
jo
pop
mov
imul
mov
mov
clc
xor
out
clc
mov
ljmp
ret
sub
mov
cmp
sub
outsb
and
jns
and
lods
xlat
xor
mov
jge
incl
pop
in
and
int
fs
test
ja
mov
inc
mov
or
sahf
push
mov
lret
scas
jecxz
jmp
adc
add
push
pusha
mov
cmp
inc
loope
aam
fistpl
dec
and
loopne
mov
cmp
cmp
out
mov
or
sub
jg
iret
inc
gs
imul
push
pop
in
ret
ss
in
fdivs
inc
jg
mov
ja
xor
data16
in
ja
test
sub
pop
or
and
fisubs
stc
lods
ds
fcompl
inc
inc
lds
push
sti
cmp
jo
xchg
mov
clc
adc
std
loopne
nop
jbe
or
cmp
ss
movsl
nop
nop
cwtl
or
aaa
addr16
cmpsb
push
push
ja
jmp
lahf
int
fsubrs
das
jge
jmp
push
sub
jge
mov
fsubs
lret
jl
in
arpl
lea
sbb
or
stos
fstl
mov
mov
xor
ret
pop
mov
xchg
jecxz
ret
scas
push
into
jle
or
mov
inc
jle
add
mul
or
inc
xchg
out
fsubs
jnp
mov
shll
add
cmp
cli
aam
and
fnstsw
hlt
sahf
shr
aad
loope
inc
shr
dec
mov
xchg
mov
mov
xor
test
lret
jmp
and
into
mov
or
mov
mov
and
push
data16
fs
and
vsubss
les
stc
ljmp
and
push
cmp
push
mov
insb
dec
mov
add
lret
xor
and
addl
insb
cmc
xor
mov
or
idivb
xchg
push
sub
mov
lret
mov
and
into
mov
xchg
adc
fwait
mov
jnp
test
inc
in
jno
jbe
pushf
repz
sub
movsl
lds
xchg
mov
in
push
ret
jmp
ss
or
data16
call
xor
push
xchg
sbbb
and
pop
push
test
add
xchg
lahf
cltd
mov
repnz
loop
or
add
xor
dec
adc
xor
je
sub
arpl
add
cmp
popa
jge
inc
mov
pop
ror
add
jmp
jp
adc
inc
add
cmp
jae
arpl
mov
mov
ficoml
clc
push
call
stos
pushf
inc
popa
stc
xor
mov
sbbb
daa
loope
push
pop
jns
imul
shll
in
pop
xor
push
ror
cmpb
je
sub
sbb
les
jno
popa
cli
adc
mov
pop
ror
add
jmp
fwait
stc
adc
inc
adc
cmp
jo
pop
jb
bound
mov
mov
ficoml
clc
push
call
stos
cwtl
xchg
dec
inc
inc
cmp
mov
sbbb
daa
loope
push
pop
jns
imul
shll
in
pop
xor
push
ror
cmpb
je
sub
sbb
les
jno
popa
cli
adc
mov
pop
ror
add
jmp
fwait
stc
adc
inc
adc
cmp
jo
pop
jb
bound
mov
mov
ficoml
clc
push
call
stos
cwtl
xchg
dec
inc
inc
cmp
mov
sbbb
daa
loope
push
pop
jns
imul
shll
in
pop
xor
push
ror
cmpb
je
sub
sbb
les
jno
popa
cli
adc
mov
pop
ror
add
jmp
fwait
stc
adc
inc
adc
cmp
jo
pop
jb
bound
mov
mov
ficoml
clc
push
call
stos
cwtl
xchg
dec
inc
inc
cmp
mov
sbbb
daa
loope
push
pop
jns
imul
shll
in
pop
xor
push
ror
cmpb
je
sub
sbb
les
jno
popa
cli
adc
mov
pop
ror
add
jmp
fwait
stc
adc
inc
adc
cmp
jo
pop
jb
bound
mov
mov
ficoml
clc
push
call
stos
cwtl
xchg
dec
inc
inc
cmp
mov
sbbb
daa
loope
push
pop
jns
imul
shll
in
pop
xor
push
ror
cmpb
je
sub
sbb
les
jno
popa
cli
adc
mov
pop
ror
add
jmp
fwait
stc
adc
inc
adc
cmp
jo
pop
jb
bound
mov
mov
ficoml
clc
push
call
stos
cwtl
xchg
dec
inc
inc
cmp
mov
sbbb
daa
loope
push
pop
jns
imul
shll
in
pop
xor
push
ror
cmpb
je
sub
sbb
les
jno
popa
cli
adc
mov
pop
ror
add
jmp
fwait
stc
adc
inc
adc
cmp
jo
pop
jb
bound
mov
mov
ficoml
clc
push
call
stos
cwtl
xchg
dec
inc
inc
cmp
mov
sbbb
daa
loope
push
pop
jns
imul
shll
in
pop
xor
push
ror
cmpb
je
sub
sbb
les
jno
popa
cli
adc
mov
pop
ror
add
jmp
fwait
stc
adc
inc
adc
cmp
jo
pop
jb
bound
mov
mov
ficoml
clc
push
call
stos
cwtl
xchg
dec
inc
inc
cmp
mov
sbbb
daa
loope
push
pop
jns
imul
shll
in
pop
xor
push
ror
cmpb
je
sub
sbb
les
jno
popa
cli
adc
mov
pop
ror
add
jmp
fwait
stc
adc
inc
adc
cmp
jo
pop
jb
bound
mov
mov
ficoml
clc
push
call
stos
cwtl
xchg
dec
inc
inc
cmp
mov
sbbb
daa
loope
push
pop
jns
imul
shll
in
pop
xor
push
ror
cmpb
je
sub
sbb
les
call
loope
or
aam
pop
ror
add
addr16
popf
and
mov
imul
leave
jecxz
mov
cltd
pop
and
rclb
xchg
and
nop
stos
cwtl
movsl
and
aaa
shlb
lock
mov
cmp
loope
push
pop
jl
in
mov
js
dec
sub
in
pop
jge
pop
pop
or
test
push
ror
int
sbb
add
test
les
fcomp
clts
add
mov
xor
enter
sub
dec
inc
ds
imull
or
test
inc
in
jecxz
rorb
push
subb
push
cmp
add
add
push
add
