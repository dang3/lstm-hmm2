call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
rcrb
pop
mov
inc
push
mov
add
push
lea
fidivs
cld
add
and
std
fistl
cmp
les
jle
add
pop
pushl
push
and
mov
push
jge
ret
push
mov
mov
adc
or
or
daa
inc
sub
out
or
mov
ret
xchg
dec
push
jnp
test
pop
jle
mov
pushl
call
popa
mov
jnp
jmp
sub
mov
xchg
xor
icebp
sbb
fwait
popa
in
add
test
add
pop
lock
fcompl
imul
mov
cwtl
bound
dec
movd
jb
add
test
push
mov
push
mov
lahf
or
mov
sbb
mov
inc
das
add
mov
ja
pop
cmp
rcrl
jo
popf
cwtl
mov
iret
jle
add
push
mov
lea
sbb
jo
popa
movl
add
pop
jbe
mov
or
cld
std
and
sbb
pextrw
sbb
jg
out
loop
out
jns
push
and
mov
push
mov
gs
mov
pop
incb
mov
test
loop
pop
push
lcall
daa
lods
mov
add
and
sbb
movsb
or
add
pop
xchg
movsb
pushf
movsb
sub
xor
xor
cmp
inc
add
in
movsb
pushf
movsb
adc
nop
xchg
sbb
pushf
les
repz
pop
ret
sbb
xor
sub
sbb
mov
iret
mov
fisttpl
push
dec
xchg
stc
in
mov
jl
int3
jl
sar
ds
js
sub
mov
pop
inc
mov
sub
adc
mov
push
dec
repnz
call
pop
pop
mov
or
push
clc
sti
pop
insl
lret
cld
lock
imull
pop
jbe
xor
jmp
ja
cmpsb
jns
xchg
cld
clc
hlt
push
cmpsl
jbe
iret
lret
dec
sub
jne
pop
es
or
hlt
sbb
clc
cld
daa
cld
mov
sbb
and
je
mull
clc
or
sbb
add
mov
ret
fldenv
int3
pop
pop
jae
pop
js
inc
imul
jge
mov
jne
lock
cmp
pop
repz
in
into
call
out
cwtl
testl
add
push
daa
loopne
in
adc
lahf
jns
cmp
imul
pop
clc
pop
pop
xor
add
mov
mov
adc
push
mov
adc
xlat
cmp
setg
pop
pop
pop
adc
stc
ds
pop
pop
lea
add
rep
mov
movl
pop
sub
ljmp
adc
pslld
jge
fldl
bswap
mov
push
pop
jg
fiadds
jmp
orl
fidivs
mov
iret
int3
add
addr16
cs
in
adc
add
cld
xchg
sahf
jns
mov
inc
ds
fnsave
lock
sub
cmp
cmp
add
sti
mov
jmp
mov
les
push
or
adc
es
shrb
mov
adc
mov
or
repz
mov
adc
lret
lock
enter
repnz
add
loope
jg
pushf
lea
mov
mov
sti
jge
xor
rolb
or
sbb
cli
mov
lds
cmp
mov
inc
push
jno
add
inc
mov
cwtl
inc
ss
mov
dec
aam
dec
sub
arpl
mov
shll
sbb
imul
loope
insb
pop
mov
shlb
xor
or
fistpl
or
jne
push
xor
push
push
cmp
daa
loopne
push
ret
andb
mov
mov
jmp
aaa
push
sub
shlb
outsb
push
not
dec
push
jo
xchg
or
or
sbb
imul
mov
pushf
mov
xchg
dec
adc
lods
dec
fsubr
and
and
pushf
pop
mov
push
call
inc
cmp
out
loopne
roll
and
mov
xor
cld
je
jmp
js
add
mov
int3
test
rolb
xchg
rcrb
pushf
mov
data16
inc
push
out
pop
push
sbbl
or
jo
adc
repnz
icebp
ret
inc
or
in
mov
scas
push
lods
sub
jl
cmp
push
mov
iret
mov
scas
push
icebp
mov
inc
push
cmp
clc
jl
sub
out
pop
data16
push
push
pop
cmpb
je
mov
or
cmp
push
push
inc
addl
lcall
test
mov
cs
cmovae
das
pop
pop
inc
pop
inc
pop
jno
ss
and
push
sub
or
adc
push
and
ss
sub
dec
aas
xor
pop
sbb
stos
ret
xchg
in
inc
leave
popf
push
andl
mov
mov
in
mov
add
push
jnp
aas
sarb
inc
cld
add
cmp
inc
addr16
add
adc
push
imul
je
fistpll
mov
jo
push
mov
daa
or
push
incl
dec
mov
pop
mov
rorl
adc
insb
jae
addl
xor
xor
sbb
lock
and
sti
jbe
stc
clc
lods
dec
sbb
testl
inc
jge
out
pop
jae
or
outsl
pop
push
push
repz
in
cmpb
push
jg
out
jg
andl
jge
sub
cmp
jge
movzwl
cmp
mov
push
push
cli
or
lock
fnstenv
push
xor
in
subl
adc
je
jo
sub
mov
inc
lret
icebp
pusha
inc
add
fucom
ret
ljmp
imul
mov
jge
pop
std
aas
add
mov
pushl
incl
cmp
je
ret
mov
sub
or
aad
jmp
pop
mov
sub
push
nop
loopne
add
cmp
jb
inc
cs
loopne
clc
and
jmp
mov
cmp
xchg
adc
test
jg
dec
and
mov
and
and
xor
shr
loopne
push
mov
dec
jne
mov
cli
jno
rorl
mov
js
stos
and
and
loopne
sti
testl
jno
mov
in
push
pushf
inc
divb
mov
cli
div
inc
or
je
dec
dec
or
jle
insl
push
mov
xor
ret
and
stc
add
mov
orb
std
sahf
movl
jno
test
dec
cmp
hlt
std
sbb
fcomp
pop
adc
sbb
mov
push
and
and
out
faddl
hlt
jb
mov
sub
xchg
xor
mov
pop
push
frstor
test
pop
xchg
ss
test
pop
dec
ds
fildll
mov
stos
stos
sbb
js
out
dec
jnp
into
pop
push
jmp
cmp
cmp
push
punpckhdq
lahf
dec
lds
test
inc
loopne
test
fiadds
shrb
xor
aas
and
testl
adc
mov
jecxz
mov
movb
repnz
into
pop
jge
pop
rol
inc
aam
mov
scas
pop
aad
push
dec
fmull
pop
icebp
mov
cltd
mov
push
shl
mov
xor
ds
sbb
ja
push
mov
or
hlt
cmpsl
stc
add
push
push
jmp
push
and
out
cltd
pop
fisttpll
push
hlt
sbb
neg
sbb
and
add
mov
outsl
inc
adc
push
pop
dec
push
jno
pop
scas
loopne
mov
adc
mov
add
sahf
cmpsl
dec
and
lahf
clc
loop
jnp
cltd
or
insb
add
adc
lods
mov
call
insb
cld
ror
adcl
iret
jmp
push
fcmovnbe
mov
pop
cmp
or
push
aaa
outsl
adcb
ss
sti
xchg
lahf
fcomps
fcoml
mov
xchg
cmp
xchg
push
xchg
das
fmuls
mov
pushf
mov
and
push
ds
mov
and
xor
aaa
dec
push
fcom
je
inc
int3
push
addr16
pushf
add
imul
dec
sbb
in
sbb
push
pop
in
and
movsl
test
inc
add
inc
sbb
enter
mov
cmp
std
in
sbb
jb
fdivl
stc
rcrl
movsb
jmp
xor
int3
fsub
or
loopne
loopne
loope
repz
sub
mov
cli
sub
loop
mov
std
inc
stos
mov
push
inc
push
dec
push
ss
test
pop
inc
cmc
inc
js
enter
inc
pushf
scas
inc
cs
incl
xlat
dec
mov
stos
xor
pop
push
and
inc
pop
mov
push
push
cld
mov
jo
xorl
jns
sbb
sbb
cs
sbb
add
stos
dec
ret
inc
xor
cmp
cmp
pop
xor
lock
lock
repnz
cmp
inc
dec
dec
enter
pop
pop
pusha
mov
mov
lret
mov
add
or
mov
push
loopne
or
adc
lret
and
pop
test
int3
je
or
mov
leave
lea
ss
cwtl
mov
jae
xchg
sub
cmp
cmpsb
std
popf
jbe
mov
mov
or
jge
ja
mov
shr
dec
mov
and
ret
sbb
loopne
mov
xor
add
mov
add
or
xchg
cli
nop
mov
stos
je
sahf
je
sub
xchg
push
sbb
xchg
popa
and
xchg
jne
imul
cmp
shll
enter
lds
inc
sbb
push
xchg
in
add
pop
mov
or
lock
adc
cmp
ror
lods
sub
and
and
and
movsl
push
mov
and
movsb
pop
mov
fistps
fildll
jge
fmull
sbb
and
push
mov
sub
mov
or
rolb
cmpsb
fimull
aad
push
repz
ds
mov
jecxz
add
and
sub
mov
nop
test
dec
cmp
xor
pop
push
cmp
jbe
mov
push
mov
cmp
test
sub
push
sbb
jb
outsl
int3
mov
jne
fwait
jns
add
push
sub
lea
or
std
and
adc
pop
jg
dec
push
cmp
xor
aas
add
decl
leave
cmp
jle
mov
add
pop
daa
mov
push
jl
add
push
lret
mov
dec
push
xchg
rorl
arpl
push
fidivl
mov
iret
jo
add
mov
sbb
jmp
add
aas
int
fsubrs
inc
and
or
mov
mov
je
popf
push
cld
pop
cltd
idiv
test
outsl
lcall
inc
push
sub
jmp
mov
mov
mov
inc
dec
lea
cmp
sbb
sti
jae
andb
daa
xor
stos
push
into
call
sub
and
repnz
push
mov
ret
mov
enter
and
push
cmp
or
popf
in
mov
aam
sbb
les
inc
mov
lock
pop
aas
rorl
xchg
rcrb
ret
add
cmpsl
mov
rep
jno
loope
jns
add
in
pop
aaa
pop
repnz
mov
jl
call
sub
cmc
mov
cmpsb
pop
sbb
mov
stos
add
movq
bound
cld
push
jo
dec
jae
adcb
mov
fs
fisttpll
lock
rorb
push
dec
call
in
push
mov
cmp
lret
cli
xchg
sbb
roll
repnz
xor
jecxz
pop
clc
and
xor
adc
mov
std
iret
pop
jg
in
out
out
into
mov
adc
addb
ss
subb
outsl
pop
pop
popa
or
pop
out
add
xchg
leave
in
sti
addr16
inc
out
jmp
sub
pop
jnp
push
imul
loopne
ds
sti
push
sti
ds
cmp
int
or
pusha
pop
sbb
sbb
lret
pushf
mov
pop
xchg
jo
push
rcrl
fbld
cmp
mov
je
push
test
push
jo
lahf
mov
pop
cmp
jne
mov
pop
add
push
and
mov
scas
inc
les
stos
pop
mov
test
xchg
sbb
rorl
add
push
test
lock
lds
cs
movsb
test
inc
mov
call
imull
push
xchg
jnp
cmpsl
shll
sub
inc
push
rolb
adc
mov
lods
std
push
cmc
adc
xorb
and
mov
adc
lret
and
lock
add
jnp
loope
dec
dec
cwtl
fucomi
mov
jle
pop
sub
sbb
pop
xor
xchg
pushf
das
jl
or
cld
adc
lea
mov
push
fs
cltd
sbb
mov
inc
pop
dec
sbb
push
mov
cmp
aas
and
cmp
lcall
dec
icebp
sbb
dec
add
jnp
dec
sbb
cmp
jg
pop
cmpl
testb
cld
mov
idivb
jb
fdivr
adc
mov
adc
add
loope
jge
je
sub
je
pop
push
ret
in
sbb
push
or
ficoms
stc
lret
sbb
xchg
mov
dec
sbb
sbbl
pop
adc
je
pop
jo
loopne
inc
sbb
cmpsl
or
push
dec
and
cli
or
mov
cmpsl
push
or
mov
popf
jge
xor
sub
clc
adc
jle
cmp
add
xchg
lock
rolb
lahf
xchg
or
idivl
loopne
stos
pop
push
add
mov
rcl
add
push
je
dec
je
dec
xor
mov
add
mov
mov
add
loopne
jmp
push
imul
fisttpll
repz
mov
mov
pop
sbb
or
aad
xchg
or
adcl
xor
or
je
out
icebp
push
push
ljmp
add
lock
add
jecxz
pop
adc
emms
mov
jne
jge
xchg
inc
xor
sub
jae
push
jl
insl
je
imul
inc
or
cli
jb
popa
jg
sbb
cmp
das
pop
setge
inc
jmp
dec
idiv
jns
insb
aaa
cmpsl
mov
cmp
or
push
nop
pop
insb
or
test
and
leave
mov
mov
cmc
cs
mov
mov
dec
lods
cmp
or
push
lods
add
in
pop
rolb
scas
cmp
or
xchg
mov
fcompl
fsubr
xor
pop
movb
add
ffree
mov
xor
mov
mov
leave
jb
fmulp
sub
adcl
movsb
jge,pn
stos
test
jge
imul
mov
adc
imul
push
push
lea
inc
xorl
jmp
adc
aaa
cld
xorb
outsb
mov
in
or
mov
fs
movsl
mov
test
sbb
push
loopne
aaa
outsl
lock
adc
cmp
shlb
shlb
addr16
sbb
test
hlt
sarl
ds
cs
cmp
jbe
cmp
pop
je
inc
cmp
jb
pop
mov
mov
js
sub
pop
jle
out
push
push
lock
add
sar
scas
push
fwait
sbb
pusha
mov
and
into
jbe
cmp
mov
loope
insl
mov
push
inc
enter
dec
ss
pop
mov
mov
jp
xchg
push
shrb
cli
dec
fimull
and
setbe
les
or
int
jnp
leave
mov
dec
add
inc
pop
leave
or
push
or
xor
adc
inc
repnz
or
push
push
jo
and
je
sbbb
push
inc
xor
aaa
jno
add
jnp
and
inc
fadd
xor
rcrl
movsw
jmp
add
mov
sub
and
mov
lds
movsb
popf
jl
xchg
jmp
cmp
sbb
std
testb
push
in
xor
lock
lods
icebp
push
mov
inc
out
nop
cmpsb
sti
fidivrl
or
imul
mov
pop
jne
int3
lret
mov
frstor
inc
sub
popa
pusha
aas
ficoml
shlb
roll
lret
cwtl
mov
xor
push
mov
and
pop
jbe
push
and
push
jns
xchg
pop
push
lahf
addl
sub
inc
cs
mov
push
jne
push
jl
enter
mov
sbb
cmp
and
loope
in
and
jmp
shll
in
mov
pop
cltd
hlt
lret
or
add
test
fwait
inc
cmp
orl
add
shrb
ret
mov
push
jbe
imul
daa
push
mov
or
or
adcb
jmp
nop
daa
decl
enter
in
jne
and
faddl
ret
add
pop
xor
xor
insl
xor
cmpsb
push
out
loope
mov
inc
loopne
adc
sahf
cmp
adc
inc
push
call
push
adc
push
daa
insl
and
pop
cmp
pop
lret
add
lahf
js
leave
pop
push
je
rorb
cmp
add
mov
test
push
into
sub
push
fmuls
inc
cmpsb
sti
add
inc
je
add
adc
pusha
jb
fimull
lods
jne
mov
cmpsb
mov
aaa
in
sub
sbb
sub
mov
mov
xlat
icebp
push
push
movaps
je
push
or
adc
loopne
mov
mov
dec
loope
xor
aas
test
and
mov
andl
push
mov
int
sbb
fs
xchg
fxch
leave
dec
jmp
xchg
xchg
adc
mov
mov
andl
jo
sbb
jnp
addr16
clc
dec
xor
jnp
out
cs
inc
and
sbb
cmp
jns
movsb
adc
cld
or
jo
cmp
and
jmp
pop
in
mov
mov
test
call
jmp
or
das
cwtl
sbbl
xchg
adcl
jb
sahf
mov
in
jbe
xor
in
xor
hlt
enter
in
adc
xor
das
clc
pop
jo
ljmp
ljmp
ljmp
cwtl
ljmp
scas
repnz
js
mov
jmp
jnp
shlb
and
sbb
xor
or
adc
or
rcr
lock
dec
mov
out
inc
mov
clc
and
adc
lahf
inc
sahf
daa
hlt
shll
xor
adc
jmp
mov
loopne
sahf
aaa
mov
roll
pop
sbb
sub
test
fs
sbbb
jmp
fs
xchg
dec
cwtl
cltd
loopne
in
dec
sbb
add
pop
jge
cmp
jmp
cmp
in
add
mov
ror
inc
popa
inc
mov
ucomiss
adc
sarl
dec
sahf
daa
loopne
xor
sbb
mov
inc
mov
mov
je
sub
iret
push
lods
xor
lret
mov
cmovno
rcll
pushf
and
or
rcrl
inc
cmp
mov
push
mov
dec
mov
inc
call
pushf
int3
dec
and
cmp
lock
movsb
sub
xlat
adc
adc
sbb
mov
test
aam
and
and
int3
test
mov
addl
mov
lods
sbb
mov
fldenv
nop
xlat
sbb
or
in
roll
ror
sub
insb
dec
cmp
cmp
dec
pushf
mov
sub
mov
movsb
mov
mov
sahf
loop
or
adc
pop
add
pusha
jmp
xor
xor
fsub
movsb
aad
inc
fisubs
in
leave
loopne
sbb
mov
shlb
xor
xor
inc
adc
repnz
xchg
ljmp
iret
repnz
pop
jo
js
or
enter
fsubs
in
sub
ljmp
and
and
xchg
cmp
shl
in
rcl
shlb
mov
push
dec
jmp
and
xor
ljmp
and
jo
pop
dec
inc
dec
sbb
xor
pop
sub
jae
mov
jne
ljmp
pop
sahf
in
xor
sub
and
lret
xchg
xchg
xchg
adc
pop
mov
fnsetpm(287
sub
push
add
loop
shll
js
xchg
hlt
sbb
in
mov
mov
rolb
push
iret
out
or
movsb
cmp
iret
clc
sub
mov
sub
xor
mov
xchg
xchg
iret
in
leave
enter
sbb
cmp
jl
mov
pusha
jl
cmp
dec
sbb
sbbb
call
push
adc
mov
jmp
sahf
jl
sub
mov
mov
pushf
cmp
fs
xchg
into
mov
into
cmp
xchg
in
and
inc
int3
into
leave
xchg
inc
push
mov
mov
mov
dec
push
mov
xchg
out
sbb
in
sahf
inc
data16
lods
in
test
and
jb
ljmp
and
sub
addr16
xchg
sbb
mov
xor
pop
adc
and
int
pusha
adcb
int3
int3
or
enter
enter
scas
jmp
icebp
or
aam
jbe
cs
repnz
iret
pusha
cmpb
fs
pushf
int
mov
test
push
push
pushf
je
insb
push
pop
rcrl
pop
sbbb
mov
xor
cmp
pop
inc
adc
xor
fsubp
mov
push
push
iret
mov
outsl
or
and
and
jb
adc
sbb
pop
xor
and
sub
and
push
jb
and
dec
pop
xor
cmp
xchg
dec
push
sbb
aam
xchg
inc
mov
mov
push
push
mov
pop
pop
test
cmp
fs
inc
mov
popa
mov
push
dec
xor
jne
pop
pop
jne
pop
adc
sbb
aas
add
jge
cmp
je
test
movd
cmpb
insb
push
shlb
fmuls
test
je
push
push
push
mov
lret
inc
sub
push
push
inc
aad
dec
out
push
push
andb
insb
push
and
xor
xor
dec
push
js
lods
and
ficompl
mov
push
sbb
iret
sub
xor
cmc
xor
rcl
fcmovnbe
mov
and
pop
aad
or
pop
jmp
cmp
das
loope
jge
add
addr16
ret
jg
fisttps
mov
cmp
je
or
xor
enter
dec
sarb
sbb
fisttps
cmp
je
cmp
hlt
insb
jge
mov
sarb
gs
adc
mov
in
push
ret
add
and
or
cli
dec
cld
ja
stos
lea
jl
loope
cmp
aas
js
mov
pop
aaa
jmp
inc
mov
mov
dec
cmp
jle
pop
jnp
lods
movsl
lock
movsbl
pop
or
popa
pop
andl
jp
pop
daa
rolb
sbb
mov
or
add
fnstenv
adc
es
and
jne
ja
scas
js
scas
mov
mov
jmp
sbbb
mov
pop
leave
shll
or
pop
aas
jl
std
mov
mov
dec
jle
mov
add
mov
jb
cltd
jnp
add
adc
push
xor
push
jle
shll
dec
movq
fdivs
sti
imull
push
dec
popa
push
push
inc
mov
pop
push
iret
inc
adc
scas
repnz
cmp
pop
jg
stc
or
or
dec
lea
out
aas
or
je,pn
and
push
push
mov
rorl
xlat
cltd
into
jp
test
mov
into
enter
sub
movb
xor
gs
imulb
adcb
mov
adc
or
jns
cwtl
mov
out
pop
adc
idivb
push
out
cmp
std
call
jns
adc
jns
rolb
jp
jno
xchg
mov
mov
push
dec
sahf
jns
mov
lods
jl
enter
into
mov
addl
fiadds
cmp
in
movsb
fcmovnu
fs
sbb
xor
arpl
stos
add
or
pop
dec
xorb
imul
mov
xor
fwait
clc
mov
fdivs
mov
inc
loop
inc
add
push
push
imul
push
nop
loop
in
fstl
inc
adc
push
sub
push
or
mov
mov
repnz
pop
mov
cltd
jo
or
and
pop
push
sahf
xchg
cmp
int3
leave
call
or
mov
adc
mov
adc
mov
jbe
ss
adc
js
xor
dec
add
lds
push
mov
pop
jb
cwtl
loopne
push
xor
dec
test
push
push
jge
mov
lret
inc
mov
aam
inc
stc
and
lods
mov
dec
fs
sbb
and
adc
push
adc
xorb
dec
imul
xchg
adc
inc
add
lds
pop
nop
ljmp
rcll
aas
push
jecxz
xor
aad
out
ds
jbe
popa
mov
mov
jns
xor
inc
hlt
mov
sbb
push
jmp
push
cmp
sbb
jmp
lea
sbb
xor
push
and
test
push
xor
inc
inc
mov
rolb
divb
pop
fsubr
inc
push
faddl
cmp
push
jbe
pop
fucomi
inc
repz
dec
std
sti
or
or
je
jle
sub
sar
push
jg
push
arpl
push
xchg
imul
sbb
mov
pop
adc
mov
mov
dec
push
or
loope
push
mov
xchg
push
adc
pop
ret
add
and
out
std
sti
add
sub
cmp
add
sub
fbstp
and
test
xchg
and
fs
arpl
and
test
hlt
fstl
fsubrl
jl
scas
orl
inc
daa
je
lods
sbb
add
into
loopne
fsubl
lock
and
push
push
lock
popa
ja
je
lea
adc
movzbl
in
outsl
jecxz
sti
dec
dec
and
rorl
fstpt
aas
mov
ss
sub
lahf
lahf
lahf
fisubl
push
adc
or
sbb
xlat
in
pusha
les
jo
push
bound
add
dec
imul
mov
test
cltd
mov
hlt
push
jbe
xchg
outsl
pop
std
fwait
mov
add
or
pop
or
mov
inc
jbe
jne
adc
push
mov
aas
sub
mov
add
or
xor
add
int
daa
push
notl
cmp
xor
adc
inc
frndint
jle
pop
ficoms
adc
inc
or
inc
add
xchg
sub
adc
and
lock
pop
xor
fisubrs
inc
mov
js
insb
fisubs
xchg
and
push
or
data16
mov
pushl
mov
popa
enter
je
inc
pop
loope
inc
add
and
mov
sbbl
xchg
lock
pop
pop
movsl
pop
xor
pop
leave
jno
mov
pop
out
aaa
das
jle
lret
jne
push
push
inc
sbb
adc
add
push
push
pop
in
cmpl
sbb
cmp
lock
fistps
jmp
dec
push
mov
cltd
inc
call
dec
jne
jge
fildll
bound
inc
cmp
fisubs
ret
dec
popa
daa
cld
insl
mov
push
mov
loop
lds
inc
jmp
or
testb
jmp
mov
jne
orb
mov
pop
mov
push
pushl
inc
sbb
sbb
pop
pop
or
and
mov
add
nop
rcll
xchg
sbb
sub
pop
jg
cld
jo
mov
hlt
add
sbb
addr16
mov
leave
xor
xchg
ljmp
add
and
mov
add
push
cmp
call
loopne
mov
xor
lea
jae
add
add
pop
inc
rolb
pop
push
push
jl
insb
mov
lock
cmp
addr16
adc
sbb
mov
push
push
aad
outsb
push
mov
mov
imulb
mov
pop
cmp
aad
sti
pop
je
adc
insl
inc
mov
pop
lock
xor
fbld
ja
jmp
popl
jge
jb
fisttpll
pop
sbb
xchg
or
insb
jl
cmp
mov
add
in
push
mov
sub
loopne
xor
mov
lods
shrl
fcom
add
pusha
xchg
inc
jg
out
movsl
sete
leave
jns
add
adc
cmp
xor
sub
je
in
jne
jo
pushf
sbb
push
popf
inc
movsl
das
insl
mov
pop
pop
cmp
sub
mov
fs
mov
and
push
mov
inc
pop
sub
inc
movsl
fs
sahf
cmpsb
dec
push
xchg
adc
inc
repnz
inc
hlt
cwtl
enter
fidivrl
pop
mulb
inc
fcoml
pop
jecxz
cli
lcall
daa
rol
clc
pop
or
push
popa
mov
mov
ja
push
sub
stc
or
int3
sbb
ss
addr16
push
push
lret
add
push
push
bound
adc
mov
aaa
dec
pop
or
loop
nop
loope
sbb
ficoms
cmpsb
js
shlb
jo
popa
sarb
inc
push
or
dec
and
mov
push
xor
sbb
adc
out
fcmovnu
jl
lret
mov
loope
nop
mov
leave
mov
jl
xchg
fcoms
insb
sbb
pop
stos
fs
mov
fs
sbb
fs
stos
fs
add
jb
mov
and
enter
xor
in
sbb
cmp
sub
sub
test
sub
in
xchg
inc
xor
sub
addb
jg
adc
sub
push
and
in
dec
add
movsl
pop
cmpl
or
xor
inc
add
pop
push
inc
test
in
shr
jnp
and
outsb
pusha
loop
dec
push
cmp
test
mov
fcoml
fwait
imul
cmp
jno
push
shlb
push
dec
std
adc
imul
jno
cld
and
out
ror
adc
adc
xor
pushl
push
sbbl
movl
pop
adc
ret
jmp
cmp
arpl
xchg
inc
dec
jo
loope
inc
jge
loop
xor
test
imul
mov
xchg
in
loope
pop
push
cmpsl
or
xor
cmovbe
inc
adc
jle
jns
clc
jnp
pop
je
or
or
das
mov
xor
pushf
mov
in
adc
hlt
in
leave
and
loopne
mov
cmpl
enter
cmpsb
dec
sti
pop
mov
mov
or
outsl
jmp
push
or
lds
mov
std
ja
je
sub
pop
adc
or
inc
dec
push
je
push
aas
aaa
sub
pop
je
or
clc
mov
test
loop
fsub
enter
jl
movsb
loop
loop
out
mov
adc
test
les
or
push
or
mov
out
movsb
or
mov
movsb
popf
jne
cld
ja
in
out
adc
and
shl
sbb
push
pop
adc
shr
fiadds
in
sub
push
and
or
mov
push
push
in
push
mov
add
orb
lods
jp
sbb
pop
jecxz
jg
inc
or
add
prefetch
leave
je
mov
loopne
jmp
jmp
add
push
inc
push
dec
xor
push
jle
xchg
ror
iret
out
loop
clc
je
sub
lea
outsb
and
lret
js
sbb
insb
mov
cmp
push
jle
pop
ljmp
push
cmpsl
adc
sub
lret
push
mov
xchg
cmp
jbe
lea
dec
mov
cmp
jb
jmp
lods
fucomi
sbb
mov
andb
mov
cmp
data16
loope
lahf
push
pop
mov
cmp
mov
js
mov
repz
mov
push
or
push
dec
icebp
lock
xchg
sbb
stc
add
pop
lea
push
sar
lock
shr
lahf
neg
lea
int
movzwl
add
inc
inc
dec
negb
add
or
fsubs
add
mov
and
lret
ror
ffreep
call
ret
and
add
cltd
mov
mov
inc
mov
dec
dec
cmp
test
push
mov
adc
lock
jg
pop
movsb
xor
cmp
je
cmpl
inc
lcall
insb
dec
repz
cmp
mov
cmp
lahf
mov
adc
or
sbb
add
sbb
lahf
loopne
rorb
fsubr
fadds
rcr
push
sbb
jge
or
sbb
in
pop
sarb
pop
imul
loopne
jne
fldcw
xchg
ss
jl
sbb
mov
sbb
push
push
adc
leave
add
testb
xchg
dec
movsl
std
pop
push
push
and
fsubrs
stos
cmp
rcll
push
sub
jne
xor
or
mov
mov
jge
push
xor
dec
enter
sub
and
loopne
inc
jecxz
ja
jb
fcompl
mov
lds
stc
inc
push
cmp
sarl
fcompl
jne
jp
inc
dec
push
adc
cmp
push
inc
xchg
push
jnp
repz
shlb
xchg
jge
jle
fwait
incl
rcll
xchg
xor
jmp
xor
fisttps
or
push
push
push
call
sub
sbb
sub
add
dec
jne
push
push
or
orl
and
cmp
sarb
mov
nop
ficoml
push
loopne
cli
push
scas
hlt
roll
add
adc
mov
pushf
or
add
push
jmp
test
jne
clc
add
and
lret
mov
mov
mov
push
push
hlt
lcall
fdivrs
pop
sbb
dec
and
sti
stc
mov
je
repz
pop
cmpsb
fs
lahf
imul
inc
push
addl
jnp
scas
mov
xchg
or
cmc
out
rcrb
cwtl
cmp
daa
xchg
xor
fcmovnu
test
lock
cwtl
or
mov
cmpl
fdivp
push
pop
add
lcall
ficoml
shrb
fsubp
test
sahf
jns
lods
and
js
mov
xchg
sbb
jmp
and
int
faddl
push
pop
adc
lahf
movb
or
push
xor
cli
push
push
je
adc
arpl
mov
lods
mov
push
inc
popa
jns
xor
mov
mov
test
and
lds
pop
xor
push
sbb
pop
dec
arpl
and
or
shll
pop
or
add
outsb
jae
adc
or
push
hlt
clc
pop
jmp
pop
in
or
xchg
ret
or
add
incl
mov
xchg
push
and
insl
fdivrl
pop
push
pop
sbbb
mov
jne
fldlg2
mov
xor
sbb
iret
shl
mov
push
and
fwait
out
and
push
inc
jne
repnz
adc
xor
xchg
sub
or
push
or
jmp
pop
xadd
insb
mov
mov
pop
or
cmp
jmp
push
dec
shll
mov
cltd
mov
enter
push
or
sub
iret
and
push
cmpsb
fcompl
loope
jp
or
fiadds
mov
xor
shrb
dec
jle
sbb
and
lcall
add
rclb
shll
dec
inc
xchg
mov
enter
xchg
je
jmp
mov
rclb
mov
jp
push
shlb
or
in
mov
outsb
js
adc
cmp
dec
push
dec
mov
xor
inc
movsl
push
xchg
mov
clc
mov
imul
insl
lods
push
xor
faddl
call
mov
cmp
arpl
clc
jne
sub
inc
scas
lahf
xchg
push
out
sti
les
inc
in
out
inc
enter
aas
fisttpl
ljmp
fsubl
and
clc
push
and
sub
shlb
lea
mov
in
push
nop
inc
cs
push
sbb
push
ror
add
fs
push
jge
mov
in
push
js
aaa
and
push
pop
or
out
push
jle
cmp
jecxz
hlt
ret
sub
pushl
in
mov
cld
push
sub
das
mov
mov
in
mov
out
leave
andb
mov
dec
and
out
lea
sub
and
sbb
xorb
dec
shrl
cmp
adc
mov
push
fdivl
push
fadd
sbb
icebp
mov
sar
daa
inc
scas
dec
aad
lahf
shrb
scas
stc
rolb
xchg
out
jle
add
push
push
push
adc
insb
scas
mov
dec
jl
adcl
dec
xor
pop
fildl
fs
add
jle
scas
add
ret
adc
inc
cmp
jl
xor
pop
xchg
lahf
test
push
inc
mov
push
lods
jb
and
mov
sub
and
push
jne
cmp
fnstenv
mov
push
push
push
add
push
lcall
or
je
push
int3
inc
mov
sbb
cs
daa
xchg
mov
jo
add
jne
adc
int
jp
jne
adc
add
add
sti
arpl
or
mov
sti
idiv
pop
jne
mov
jne
lahf
push
in
outsb
iret
enter
les
clc
pusha
pop
sti
add
mov
or
pusha
adc
push
ret
push
shl
add
div
inc
daa
movsl
xor
jnp
push
cwtl
jno
and
jmp
push
faddl
inc
fwait
bound
sbb
in
mov
fists
pop
add
pop
insl
and
insl
sbb
int3
jb
or
cmp
xorb
inc
mov
add
jmp
neg
pop
sbb
pop
inc
jmp
mov
push
jne
or
out
pop
dec
fs
cmp
add
call
iret
inc
idivl
sbb
pop
dec
pop
pop
cmpl
ret
or
mov
or
adc
je
jge
add
cmp
jmp
std
int3
outsl
repnz
pop
add
push
push
lds
invd
inc
shlb
jnp
mov
mov
je
mov
cmc
add
push
divb
call
pop
push
push
and
push
and
jmp
mov
icebp
mov
xor
daa
je
and
iret
icebp
or
into
push
aad
andl
xor
pop
inc
jle
lds
sbb
cwtl
mov
and
push
inc
fsubrl
mov
test
push
call
incl
pop
stos
aam
xlat
jmp
xor
je
mov
sbb
mov
mov
cmpsb
aaa
mov
or
adcb
pop
push
xchg
cmp
or
pop
dec
stos
add
add
jo
add
jmp
pop
cwtl
pop
jno
add
inc
push
mov
adc
cmp
mov
and
jmp
pop
fsubl
sbbb
ret
push
pop
sbb
jmp
loopne
out
mov
xchg
lea
ja
aam
shll
aas
ss
std
push
leave
mov
rcrl
nop
or
pop
insb
lea
sbb
outsl
add
push
sbb
xor
das
das
shll
xor
pop
push
hlt
inc
std
push
ja
jo
xor
pop
cmpb
aas
adc
sbb
sbb
cmp
add
shll
daa
fs
add
sub
sub
inc
push
popa
push
std
je
inc
xor
mov
mov
mov
loopne
or
gs
dec
dec
and
pop
sub
push
dec
int
and
and
or
mov
shlb
adcb
push
inc
pop
decl
insb
cmpw
pop
jne
adc
lds
sbb
adc
xchg
sbb
cld
sbb
sbb
nop
andb
iret
test
jbe
scas
clc
movsb
add
iret
sti
das
cmp
xchg
jg
sbb
mov
jb
stos
js
sbb
test
xchg
adc
jne
in
pusha
sbb
xchg
cmp
adc
sub
inc
push
loopne
and
enter
and
sbb
cltd
pop
loopne
inc
xchg
inc
or
ret
fidivl
das
nop
xor
pop
pop
pop
stos
or
and
shll
dec
inc
sbb
jp
mull
shrl
or
sub
xchg
loopne
std
adc
push
jmp
cmc
jmp
ljmp
mov
rcl
inc
or
xor
add
in
push
push
inc
inc
cmp
lcall
repz
push
loopne
or
nop
xchg
mov
and
loopne
pusha
sub
icebp
mov
clc
add
mov
mov
mov
mov
rorl
pop
jge
inc
shrl
xchg
loope
in
in
sub
mov
loopne
push
adc
dec
rol
pop
rcll
insb
lret
push
lea
push
ret
fwait
clc
adc
imul
mov
inc
jns
clc
mov
stc
jge
jmp
xchg
inc
add
mov
mov
push
sbb
pusha
push
lea
fadds
xchg
jnp
je
jns
jbe
pop
push
add
and
fsubrs
add
add
inc
les
imul
int3
adc
dec
cmp
repz
lods
fst
and
jge
mov
pop
data16
mov
lea
gs
jecxz
pop
cmp
pop
pop
inc
push
xor
repz
mov
cmp
xor
adc
lock
lds
lock
test
lods
sub
pop
pop
xor
add
leave
jne
inc
mov
fwait
test
add
in
mov
ja
adc
or
pop
in
sti
shlb
inc
mov
jbe
mov
shr
cmp
or
or
jne
inc
cmove
or
andb
adc
mov
push
clc
cmp
mov
mov
rcrl
cmp
negl
fucomp
cmp
aas
test
mov
and
and
test
jge
das
orl
jge
jmp
std
pop
inc
mov
cltd
inc
imul
push
inc
pop
jmp
popa
push
or
cmp
lret
ret
inc
cmp
adc
daa
jb
out
cmpsb
mov
rclb
rolb
in
in
adc
in
repz
lock
fucom
xchg
fwait
in
dec
and
add
dec
stc
jo
in
loopne
mov
in
cmp
push
hlt
je
fs
rorb
js
push
fnstenv
add
mov
jne
movb
pop
xchg
in
loop
out
inc
call
dec
pop
ljmp
and
sub
cmp
push
pop
flds
sar
sub
aaa
fimull
add
xlat
nop
dec
add
rolb
adc
jb
sbb
int3
rorb
test
gs
pop
push
xor
or
push
fcoml
pop
in
lahf
push
addr16
ljmp
mov
aas
clc
xchg
add
dec
repnz
xor
and
sbb
xor
je
inc
or
test
cmp
sub
add
lods
jle
insl
xchg
cmp
push
insl
mov
testl
inc
sbb
mov
jmp
mull
mov
arpl
mov
xlat
out
jnp
cmp
inc
inc
paddw
push
loopne
mov
jp
sub
push
sbb
push
enter
add
fadds
add
fbstp
daa
add
shl
fs
lds
ja
int
leave
pop
ja
jb
subl
adc
push
and
ja
push
inc
inc
sahf
xchg
out
cmp
xor
es
out
imul
filds
lahf
or
jae
pop
sub
pop
sbb
add
adc
jne
jae
adc
push
aam
pavgb
xor
pop
rolb
cmp
sbb
push
cmp
inc
aaa
push
lret
fs
inc
jne
pushw
push
cmpl
dec
sahf
rclb
jne
int3
inc
mov
repz
push
enter
cmp
and
pop
add
mov
dec
mov
mov
shlb
stos
pushf
je
push
enter
mov
and
es
lock
aas
jl
fdivrs
adc
cmpsb
std
inc
dec
imul
mov
cmpsl
cmpb
lea
shrb
mov
mov
arpl
xor
nop
and
sti
aam
mov
mov
dec
sub
push
push
or
aaa
cmc
into
and
and
sbb
pop
add
lods
pop
sbb
call
call
cwtl
idivb
sbb
adc
insl
stc
mov
stc
push
jge
lock
cmc
rcr
mov
in
push
repz
insl
and
rorl
inc
fimuls
or
pusha
push
addr16
clc
jae
das
pushf
pusha
or
fnsave
outsb
or
rorb
imul
shlw
enter
push
jbe
insl
xor
aad
mov
push
rcr
cmp
int3
add
daa
aaa
push
xchg
movb
cmp
add
leave
arpl
adc
add
and
mov
xorb
movsb
je
jmp
sbb
ds
push
mov
inc
mov
jae
movsb
dec
ret
les
sub
ret
rcrb
shl
inc
add
push
and
std
cmp
inc
loope
enter
mov
inc
dec
popa
pusha
sub
jp
xlat
mov
and
cld
jne
leave
add
xor
sar
and
iret
pop
and
dec
cmp
jmp
sub
enter
push
push
sub
jns
and
call
or
std
sub
pop
loope
fildl
fisttps
and
cmp
and
insb
xlat
pop
jg
xchg
push
addl
adc
test
push
fs
push
mov
fcmovb
inc
fidivs
js
fs
shl
adc
jae
add
jmp
xchg
loopne
std
lret
dec
xor
mov
push
cmp
inc
add
jmp
in
cmpsl
aam
pusha
sub
loope
call
inc
pop
rcrb
adc
testb
cmc
add
pop
aas
rolb
add
jmp
mov
repz
add
repz
add
loopne
pushf
mov
xlat
sbb
cmpsb
insb
cli
push
clc
pop
mov
repnz
leave
movsl
push
cmpsb
lea
pusha
les
rcrb
mov
mov
clc
inc
aam
leave
and
je
insl
lea
mov
sub
and
fidivs
pop
cmp
dec
inc
adc
push
and
repz
cmp
inc
sahf
or
xchg
lock
and
mov
into
inc
jg
shr
push
scas
dec
or
and
jb
add
addb
push
imul
jge
mov
or
sti
dec
imul
out
or
mov
in
xor
dec
std
sbb
loope
leave
repnz
cmpsl
pop
pusha
aas
or
test
hlt
mov
add
sbb
lock
push
test
xchg
cmp
jns
cmp
pushf
test
xchg
mov
nop
dec
add
es
adc
in
add
lret
mov
push
and
or
rol
in
mov
addr16
pcmpeqd
push
rorb
idivb
or
pop
sti
sbb
adc
outsb
fisttps
and
sbb
leave
and
and
ret
xchg
push
mov
add
cld
pusha
cmp
add
pop
fwait
pop
mov
repnz
int3
add
js
mov
test
jo
lcall
sbb
enter
mov
mov
insb
mov
mov
cli
push
testb
adc
call
rcl
xchg
cmp
sti
sbb
lret
ror
rolb
jp
popf
sub
test
loop
sub
pop
lar
cli
mov
test
push
jnp
add
push
sub
adc
dec
xor
add
and
in
test
jb
adc
mov
inc
adc
cltd
add
or
rolb
mov
test
add
add
lea
xchg
add
cmp
pop
out
push
adc
shrb
lret
les
sbb
pop
int3
inc
fsubrp
add
mov
push
std
sub
pusha
and
in
xchg
dec
sub
int
ret
out
add
xchg
mov
jmp
cmp
jne
inc
xor
and
mov
mov
movzbl
add
leave
xchg
or
push
cltd
shlb
push
jle
mov
and
add
rcll
subb
ja
or
inc
jo
xchg
cmp
rorb
push
rorb
frstor
fisubrs
mov
pop
cmp
cmc
push
cwtl
push
inc
insb
add
je
mov
inc
mov
sub
syscall
inc
inc
cmp
xchg
dec
push
mov
icebp
sbb
movsb
aaa
pushf
push
lea
xchg
fstps
cmpsb
test
add
and
jae
xchg
andb
ret
pusha
pop
push
add
or
mov
xor
test
xchg
sub
inc
loopne
dec
nop
mov
call
mov
shl
movsl
mov
clc
mov
xor
aaa
cmp
cmp
add
inc
es
cmp
jle
xor
fsubrl
push
mov
mov
pushl
pop
enter
imul
je
inc
mov
sub
sahf
or
sarb
cmp
jbe
cld
push
cltd
pop
inc
adc
push
cs
or
sbb
mov
inc
pushl
pop
mov
pop
mov
pop
pop
pop
ret
js
adc
xlat
adc
addb
inc
and
jmp
cmpl
inc
cld
cmp
clc
es
sbb
or
ds
std
movsl
je
jne
push
xchg
add
xchg
inc
pushf
push
iret
push
pushf
adc
or
test
cmpl
dec
inc
out
testl
mov
pavgb
cmp
inc
xor
mov
pop
xchg
or
inc
and
and
inc
mov
test
xchg
jle
scas
test
mov
fwait
or
cmp
adc
add
sbbl
into
test
xchg
xor
arpl
fs
or
adc
addr16
sbb
mov
or
adc
cmc
xchg
push
and
lock
repz
rcr
jle
pushl
and
mov
mov
je
inc
ret
dec
bound
sub
loopne
mov
or
mov
pop
add
sar
ror
orl
add
cmp
shl
xchg
xor
sbb
movsl
fs
cmp
and
shl
push
jge
std
or
repnz
or
shr
push
lods
aaa
dec
push
and
jge
mov
push
mov
pop
mov
push
test
xchg
push
arpl
popf
leave
sub
sahf
xor
es
or
test
push
je
push
add
sub
add
xor
nop
push
dec
xchg
inc
lock
cmp
jb
test
xchg
xor
xchg
pop
or
mov
sub
xchg
hlt
pop
xor
and
call
je
jne
test
cmpsb
push
jge
cmp
mov
fwait
mov
jp
lahf
jmp
leave
sub
jnp
out
adc
sbb
mov
xchg
loopne
mov
jl,pn
jno
mov
in
aam
js
iret
sub
add
inc
lea
shl
enter
or
sbb
sbb
outsb
or
insl
dec
cld
sbb
or
mov
mov
dec
loopne
fmuls
pop
fisttpll
mov
add
mov
jp
xlat
dec
mov
in
mov
ret
xor
jne
jo
sbb
lret
imul
jno
jne
adc
invd
iret
inc
jno
push
test
mov
or
and
hlt
push
and
dec
loop
ljmp
pop
faddl
mov
arpl
mov
call
mov
adcb
mov
add
out
xlat
adc
inc
push
fs
jp
divb
andl
xor
push
and
jmp
push
sbb
push
loop
bswap
in
pop
add
mov
dec
and
daa
cmp
xchg
add
lahf
push
jl
or
add
popa
sbb
imul
negl
dec
cmp
cmp
sbb
lahf
inc
es
sbb
daa
andnps
push
inc
pusha
push
sbb
popf
adc
lea
push
repnz
pop
pop
inc
mov
sub
pusha
add
pop
pop
add
roll
lods
andb
fstl
je
aam
hlt
or
mov
nop
xor
add
stc
int3
gs
add
xlat
jle
mov
mov
mov
or
push
jne
lods
test
sub
loop
ja
loopne
push
cld
addb
push
add
mov
xor
hlt
ss
aaa
outsb
pop
inc
pop
clc
cltd
loop
xor
incl
mov
mov
push
in
fimuls
int3
cmp
xor
mov
adcl
in
add
pop
mov
add
pop
dec
jne
cmp
or
cmp
les
loope
add
jo
adc
jne
clc
and
xor
popa
les
imul
dec
aam
sbb
adc
lcall
mov
test
jnp
inc
fwait
mov
xor
sub
mov
push
lahf
xor
pop
jle
ja
pop
js
cmp
or
orl
rolb
pushl
insl
mov
mov
xchg
jle
xchg
fistpll
xor
std
je
or
je
or
add
repnz
mov
mov
jl
stos
and
int3
sub
loope
add
xor
mov
push
out
mov
mov
mov
loop
add
inc
inc
sbb
adc
sub
mov
pusha
pop
loope
hlt
mov
insl
imul
sbb
jl
es
rolb
dec
mov
mov
popa
in
shlb
mov
push
mov
mov
jl
mov
sub
push
inc
cmp
pop
pop
or
or
xor
jg
fists
and
pop
lea
cmpb
std
decl
add
movsbl
mov
movb
out
mov
add
jg
popf
ret
outsl
or
adc
cmp
dec
mov
or
cwtl
adc
add
fisttpl
mov
cmpsb
cmp
push
fwait
add
xchg
je
xchg
push
push
insb
sbb
inc
in
mov
jns
push
jmp
sub
add
ds
push
in
push
movb
mov
and
dec
or
add
push
movsl
pop
inc
push
add
inc
bound
and
adcb
lcall
mov
jg
aaa
push
lock
push
push
push
sbb
push
mov
loopne
push
jecxz
xchg
jnp
xchg
jb
or
push
lcall
add
lea
nop
and
pop
jne
sub
ds
cmpsb
inc
sub
cmp
je
and
add
pop
mov
stos
pop
sarl
inc
and
push
rcr
lock
insb
inc
and
push
jmp
and
fsubr
pusha
dec
sub
jnp
int
xchg
adc
inc
dec
andb
sbb
adcb
mov
inc
inc
test
inc
adcl
mov
push
out
out
mov
and
and
push
aas
inc
pop
mov
pop
fs
cmpsb
lods
jo
push
jne
cmpsl
push
rcll
je
pusha
xor
push
mov
mov
xchg
mov
mov
and
sbb
push
xchg
push
inc
add
add
jl
jmp
cmp
je
adc
xchg
add
mov
jp
add
mov
pop
ja
jle
out
xor
cmp
push
in
push
hlt
stc
test
mov
pop
cltd
loopne
pop
ss
add
je
push
or
daa
pop
and
adc
ret
pop
dec
pop
lds
fcoml
xchg
jb
cmp
insb
adc
inc
lds
mov
rorl
and
adc
mov
lret
imul
out
dec
stos
lcall
mov
rorb
cmp
nop
add
adc
shll
adc
inc
popf
mov
cmp
mov
mov
mov
imul
push
fmuls
or
call
js
add
inc
sbb
add
xorb
mov
mov
cmp
fsubs
push
cmp
test
pop
add
add
sbb
jge
pop
xor
lds
add
dec
das
sub
test
mov
jno
push
out
inc
adc
lock
jl
scas
mov
jl
push
ret
mov
and
movsb
inc
dec
fs
mov
xchg
add
out
mov
adc
push
loopne
fistps
dec
sbb
sbbb
loope
push
add
rolb
or
jmp
mov
in
push
fdivrl
sbbb
orb
lock
je
mov
or
pop
mov
jmp
or
push
push
in
test
xchg
aaa
xchg
test
and
jecxz
push
xchg
cmp
comiss
jl
in
sti
jge
mov
mov
adc
dec
add
adc
test
and
cmp
cmpsl
adc
sub
jl
pushf
mov
push
push
rcr
fisttpl
mov
push
je
cmc
xor
pushf
jne
inc
hlt
jp
ja
mov
popf
cmp
arpl
jp
sub
add
jne
scas
add
add
push
sbb
dec
adc
rolb
dec
inc
sub
loopne
inc
adc
push
xor
adc
dec
jg
out
popa
mov
pop
mov
pop
aaa
inc
movsb
into
push
add
inc
mov
rorb
dec
into
push
xor
mulb
push
inc
mov
xor
pop
inc
and
sub
mov
and
inc
jecxz
and
sbb
int3
adc
roll
jne
mov
jge
xor
cmp
push
cmp
mov
mov
ret
jo
bndstx
loope
adc
cltd
std
pusha
and
in
push
out
notl
push
imul
imul
xor
or
mov
pop
xor
jmp
mov
mov
push
icebp
sbb
jo
sub
jge
test
cmp
orl
roll
or
in
mov
xor
sub
or
test
inc
mov
inc
test
mov
push
mov
push
in
mov
loopne
aam
nop
xchg
or
int3
add
pop
add
les
fisttpl
mov
jmp
mov
push
sbbl
jl
pop
pop
or
dec
bnd
pop
inc
punpckhbw
bnd
pop
and
push
sbbl
inc
cmp
inc
addr16
mov
mov
fcoms
mov
sahf
daa
sbb
movsb
cwtl
push
jbe
sti
pop
fstl
xchg
mov
sub
push
nop
xchg
js
dec
push
mov
dec
fldcw
and
pop
repnz
les
pop
xor
cmp
cmp
xor
adc
add
dec
inc
mov
mov
aas
or
lods
jecxz
xor
or
xor
test
sbb
scas
sti
fdivrl
sbb
sub
or
push
nop
xchg
or
les
mov
mov
xor
mov
push
test
mov
and
pushf
push
test
fs
jb
nop
mov
pop
test
sbbb
test
je
sub
shrl
and
test
pop
adc
mov
shlb
inc
popf
push
push
lods
jne
mov
and
and
addr16
mov
mov
aaa
sub
and
fstps
pop
enter
adc
aas
cld
ds
inc
es
fsubs
test
sbb
fsubs
and
or
int3
sub
mov
daa
movsb
stc
mov
stc
and
lds
in
ror
test
mov
je
add
movsb
and
mov
cwtl
dec
and
xchg
in
inc
cmp
mov
and
movl
test
sub
enter
dec
nop
out
mov
jo
or
mov
sbb
xor
iret
in
push
push
xlat
dec
jb
and
arpl
inc
sahf
pop
xor
sbb
in
sub
sub
inc
negb
xchg
enter
and
mov
xchg
push
push
loope
jg
je
psignd
cmp
test
inc
in
movsl
and
inc
cmp
jmp
jecxz
push
push
aad
pop
inc
cmp
rcrl
fiaddl
es
dec
imul
xor
and
jp
aas
or
pop
push
mov
sbb
pop
adc
nop
pop
testb
add
xchg
xor
in
ficomps
dec
ds
xor
xchg
add
pop
loopne
insl
cmp
or
xor
jmp
cmpl
loopne
sub
fistps
and
mov
ds
orl
or
mov
add
xor
dec
inc
nop
mov
movsl
pop
adc
pop
shl
xchg
push
add
add
cmp
xor
pop
and
and
jb
jae
lock
jo
mov
xor
xor
inc
sbb
sbb
cmp
fs
jge
mov
dec
mov
enter
cmp
fcompl
movsb
cmp
cmp
sbb
in
sbb
pop
xchg
sub
and
dec
mov
pop
inc
inc
cs
filds
push
enter
push
jo
enter
push
mov
xchg
adc
pop
jle
fsubr
push
aad
xchg
shrb
push
into
scas
inc
mov
sub
cs
and
xor
adc
test
xchg
pop
lds
mov
push
into
or
xchg
push
fmul
test
xlat
adc
and
repnz
and
cmp
or
inc
repnz
nop
and
cmp
or
jns
and
sbb
adc
enter
in
or
insb
js
out
adc
push
enter
xor
jb
xchg
or
cmp
mov
xor
iret
mov
jns
and
xchg
mov
cs
sahf
jmp
dec
stos
call
and
or
push
push
aas
movsl
xor
cmp
insb
xor
clc
push
pushf
and
and
push
push
adc
repz
mov
add
sbb
push
adcb
leave
mov
cli
out
and
loopne
mov
ja
pop
cltd
sub
das
mov
xchg
jb
insl
mov
cmp
xchg
out
clc
xor
xorb
sub
pop
in
push
nop
add
and
add
aam
push
loopne
inc
cmpsl
add
pop
adc
popa
pop
es
or
and
or
push
or
fisttps
decl
pop
je
push
jecxz
cmp
rcll
ret
out
movsl
test
mov
inc
loopne
test
std
pop
mov
jb
mov
pop
and
add
insl
xlat
jae
xchg
mov
popf
ret
mov
shlb
data16
or
nop
outsl
sbb
std
cmp
cmp
or
or
ror
adc
mov
add
fs
jae
bound
xchg
add
add
test
fbstp
mov
and
fwait
or
rolb
dec
adc
mov
inc
push
insl
adc
xor
cmp
pop
pop
add
sub
scas
sbb
cmpb
pop
loopne
push
fisubrs
lods
sub
pusha
pop
jmp
in
fdivl
mov
dec
mov
mov
adc
sbb
out
sarb
sti
mov
lahf
mov
xor
sbb
arpl
jb
cmp
push
dec
or
jb
pop
repnz
and
imul
mov
xchg
adc
push
pusha
int3
fdivs
jns
cltd
dec
sbb
scas
lea
push
pusha
pop
adc
ret
add
push
or
fbstp
rcrb
jno
orps
insb
mov
push
mov
lds
scas
mov
xchg
mov
xchg
sbb
pop
pop
sbb
fdivrl
pop
scas
jae
sbb
mov
add
loope
dec
and
pop
cmp
sub
jo
xchg
pushf
sbbb
sbb
popa
mov
mov
and
mov
pop
or
outsl
fistpll
add
push
pop
cmp
jbe
or
idivb
dec
cmpsb
fwait
lahf
xor
sbb
inc
adc
ud0
pop
fmul
bound
adc
stos
sbb
cmp
pop
add
jne
jmp
pop
mov
lahf
fisubs
sti
imul
mov
or
jo
add
pop
xchg
iret
jo
jge
je
cmpb
je
or
sti
inc
daa
test
cmpb
nop
mov
mov
xor
mov
call
sbb
push
cmpsl
mov
mov
add
cmp
add
jbe
mov
cmpsb
and
add
push
cmp
pop
sbb
dec
cmpsb
ret
je
jle
push
pop
lock
xor
inc
xchg
dec
add
movsl
dec
push
pop
das
jle
lea
mov
js
push
cmp
inc
das
adc
cld
por
jl
cwtl
or
adc
test
or
popa
shlb
cld
jmp
sub
lcall
push
push
aaa
pusha
cld
ss
inc
roll
or
inc
inc
gs
add
fistpll
shlb
sub
or
inc
adc
out
xchg
jmp
rclb
pop
fsubrl
mov
push
imul
lahf
or
lock
pmulhuw
xor
cld
and
aaa
mov
enter
adc
fadds
stc
xor
jbe
das
xlat
sbb
stos
xor
imul
lods
clc
mov
iret
ds
lahf
cld
enter
pop
xor
dec
pusha
leave
lret
pop
nop
sub
enter
out
and
stc
in
sbb
lods
clc
and
cmp
dec
push
pop
test
xor
push
call
add
xor
dec
sbb
dec
imulb
pop
iret
repz
pop
lret
sub
or
dec
cmp
popf
adc
leave
add
xchg
cmc
add
add
xor
inc
outsb
jge
aam
add
mov
adc
pop
add
cli
sbb
dec
or
lea
inc
push
lcall
pop
push
add
push
mov
mov
aaa
mov
test
mov
lods
shll
mov
pusha
loope
pop
ficoms
inc
push
stc
pop
nop
ss
adc
sub
mov
enter
cld
push
ss
or
push
fiaddl
imul
ret
mov
dec
adc
fdivl
dec
rcll
dec
pop
mov
mov
mov
iret
and
and
or
or
mov
pop
leave
dec
ja
adc
jg
leave
call
adc
pushf
lahf
filds
nop
cli
adc
and
push
inc
mov
sbb
lret
cs
or
adc
mov
and
push
or
mov
mov
cmc
mov
sbb
mov
inc
inc
popf
mov
test
dec
xor
cmp
sub
sub
test
fwait
adcb
outsl
cmp
mov
pop
pop
mov
fbld
bound
pop
stc
inc
add
sti
mov
add
hlt
je
and
movups
gs
sub
or
cmp
mov
inc
cmp
cmpl
xor
rcrl
adc
cli
push
ret
push
jb
sub
icebp
in
xchg
inc
dec
xchg
adc
sahf
and
push
adc
or
test
lds
mov
mov
inc
inc
add
cli
mov
mov
pop
shl
movw
dec
imul
in
test
sbbl
add
sbb
inc
and
mov
test
sub
jge
mov
push
push
and
fidivl
cltd
cwtl
push
inc
test
cmpl
xchg
mov
or
adc
inc
xor
lods
xchg
dec
ret
add
add
mov
add
or
stos
nop
and
mov
pusha
nop
clc
cmp
xor
fs
xchg
push
push
and
repnz
xor
xor
jae
mov
and
sbb
add
adc
adc
les
aam
xor
js
cs
push
inc
mov
push
inc
sbb
inc
nop
jmp
inc
or
test
and
or
jge
je
sbb
push
stos
jecxz
or
test
jae
push
test
insl
jae
mov
or
jb
in
jno
add
push
addb
pop
pop
jb
pop
ret
mov
pop
lea
and
dec
imul
icebp
xchg
dec
icebp
xlat
aam
push
popa
adc
xchg
outsb
loop
test
aam
cmp
add
adc
addl
add
inc
xor
loope
ret
push
inc
push
and
xor
and
les
and
pop
xor
push
push
push
movsb
enter
ror
in
add
xchg
sub
sub
roll
out
aaa
add
or
adc
repnz
sbb
and
repz
jno
adc
pop
dec
push
push
add
sbb
dec
in
sbb
sbbb
xor
or
xor
pop
aad
popa
jbe
dec
or
pop
out
xchg
outsb
lods
lret
orl
add
inc
add
mov
xchg
mov
mov
or
jge
mov
and
mov
add
stc
push
mov
push
mov
add
sahf
jne
push
adc
add
push
add
pop
out
sub
movsb
sub
inc
sub
xchg
mov
adc
add
je
imul
and
mov
in
cvtpi2ps
push
cmp
scas
sahf
jo
xor
add
jb
or
movsb
and
mov
xchg
fsubrs
push
mov
scas
pop
mov
add
xchg
pop
cltd
adcb
mov
and
cmp
xor
jo
push
ss
subl
mov
cmp
xor
or
aad
xor
insl
adc
xor
je
mov
or
push
nop
rclb
lea
outsb
daa
mov
enter
mov
sbb
scas
ss
sbb
leave
jmp
or
xor
add
in
je
add
xor
loopne
icebp
sbb
mov
adc
xor
and
or
clc
jge,pn
mov
dec
push
pop
mov
js
jmp
inc
xchg
clc
pop
mov
movsb
add
jne
xlat
push
mov
and
imul
xor
fistpl
mov
inc
std
jb
add
pop
dec
icebp
inc
or
sahf
sbb
xor
jge
mov
ds
push
pusha
jnp
sbb
fidivs
sbb
mov
std
and
adc
jns
pop
push
leave
add
cmp
jne
xor
jnp
cli
fnstsw
pop
mov
mov
pop
cltd
idivl
out
jle
push
les
push
bound
mov
lcall
in
mov
mov
inc
add
lea
push
jae
movsb
sbb
stos
sbb
out
cmpsb
sbb
pop
enter
push
sub
aad
xchg
pushf
cmp
test
sbbb
push
jne
pop
aaa
pop
sbb
loopne
lods
mov
mov
xlat
mov
and
pop
push
cmpsb
pop
pop
push
mov
mov
mov
arpl
es
sbb
mov
inc
or
cmp
sub
test
scas
je
jne
xor
jle
push
mov
ficompl
stos
jle
aam
xorb
mov
fs
xor
jno
or
test
stos
push
and
push
jmp
or
call
inc
movsb
sbb
arpl
or
mov
inc
icebp
xchg
daa
add
jecxz
jb
test
js
test
mov
xchg
test
xor
push
sbb
cwtl
adc
scas
pop
push
std
xor
sub
add
test
iret
orl
call
sub
cmc
nop
sub
fwait
stc
or
push
jle
push
std
shlb
das
cltd
mov
push
inc
mov
cs
sbb
push
mov
inc
ret
out
xor
xor
xchg
jae
or
add
jecxz
aam
xor
push
lcall
in
or
push
or
xchg
jae
mov
cmp
sarl
sub
cmpsb
rcll
mov
sbb
js
push
ret
std
ret
pop
pop
scas
enter
mov
mov
or
jnp
jnp
xchg
adc
dec
cli
dec
sbb
sub
push
ljmp
or
mov
in
push
push
insb
cs
pushf
dec
inc
cmp
sar
leave
add
mov
mov
test
sub
inc
push
pop
or
inc
bound
add
adc
xchg
stos
xor
sbb
imul
adc
pop
sbb
adc
ja
mov
sbb
scas
addb
add
daa
pop
in
push
pop
inc
addl
mov
push
sbb
sub
jb
stc
mov
nop
sub
stc
sub
in
fisttps
cs
xchg
push
sub
jne
mov
sbb
bound
jo
or
and
daa
cmp
push
ja
xorl
adc
jnp
push
or
cmp
jnp
mov
pop
pop
sub
into
rorb
sbb
sbb
outsb
out
repz
push
sub
push
inc
xchg
and
mov
scas
in
push
lods
pop
mov
inc
sub
mov
jmp
arpl
lods
push
push
out
in
shlb
iret
call
sub
push
push
or
sbb
sbb
mov
inc
mov
mov
test
mov
xor
push
or
pop
xchg
enter
push
cli
outsl
jmp
xchg
mov
hlt
adc
shrb
dec
rolb
out
stos
or
dec
jmp
nop
ror
js
push
cltd
aad
xchg
sbb
loop
and
sets
ljmp
xlat
add
or
ret
add
mull
int
popf
shrb
xor
iret
sbb
setg
hlt
and
je
adc
ret
pusha
xchg
in
cmp
lods
cmp
add
push
adc
ljmp
dec
xorps
mov
push
lahf
sub
loopne
scas
or
aad
gs
andb
sbb
pushl
lahf
pop
aam
sbb
sub
jge
jb
xor
jmp
mov
inc
lock
mov
mov
fcmovnb
jp
hlt
nop
push
leave
jg
xchg
push
test
das
pop
leave
rsm
push
in
push
add
push
mov
sub
lret
add
lds
jmp
jge
call
add
or
adc
sub
or
je
pop
dec
cmp
inc
add
add
in
lock
adc
or
mov
cli
hlt
mov
jle
adc
sub
mov
leave
inc
dec
movl
aas
add
mov
mov
enter
sbb
dec
out
and
out
and
shll
jne
or
push
push
shl
jg
orl
and
lcall
or
out
pusha
repz
mov
cmp
jne
cmp
mov
sbb
jne
lea
mov
mov
cmp
jge
cmp
je
incl
das
mov
mov
cmp
jl
es
adc
fdivrs
mov
pop
push
add
sbb
cmp
incl
nop
cli
stos
jnp
test
cltd
clc
pop
pop
leave
out
stc
cmp
mov
xchg
fmulp
adc
pusha
test
pop
pop
push
outsl
nop
xor
mov
xorl
or
sub
adc
mov
mov
repz
add
push
nop
cmp
leave
jecxz
and
adc
mov
push
or
scas
call
push
adc
incl
mov
jmp
imull
jmp
je
sbbl
add
in
jne
jp
adc
or
add
jne
in
outsl
mov
popa
lea
inc
or
add
repz
or
icebp
cmp
inc
lret
mov
orb
mov
mov
or
cwtl
pop
pop
test
dec
or
dec
adc
mov
pop
pop
enter
fidivrl
mov
xchg
mov
fisubs
or
or
xor
jo
dec
pop
js
mov
add
push
pop
es
out
adc
movsl
mov
inc
pop
je
push
enter
mov
loopne
sahf
cltd
les
and
imul
pop
mov
mov
xchg
sub
lock
mov
push
and
jbe
enter
cli
pop
or
dec
add
mov
mov
mov
inc
adc
add
cmc
sub
pusha
adc
rorb
jl
add
add
mov
aaa
adc
cmp
iret
pop
mov
inc
jg
jns
repnz
movsl
add
mov
jmp
mov
rolb
scas
adc
std
push
addl
cltd
filds
sbb
jl
loope
jo
imul
jne
mov
les
xor
andl
test
cld
adc
push
cltd
lea
jmp
dec
cmp
cmp
push
sub
jge
xor
push
mov
dec
cmp
and
nop
shlb
jno
out
sbb
loope
mov
jns
mov
in
movsl
pop
shll
sbb
jns
pop
mov
roll
jle
xchg
inc
inc
or
addb
jge
pop
dec
lock
and
adc
icebp
dec
sub
sub
push
xchg
add
add
jnp
pop
rcr
movsbl
rol
shr
add
xor
roll
push
add
mov
sbb
push
xlat
mov
jae
and
push
dec
xchg
mov
push
push
dec
push
fwait
push
pop
push
mov
scas
test
jb
xchg
sub
dec
inc
add
cltd
sbb
mov
and
test
adcb
cmp
mov
and
pop
mov
xor
sbb
push
inc
push
divb
fmull
xchg
bnd
push
stos
rorl
mov
fsubs
xchg
rcll
or
mov
xchg
adc
push
arpl
or
cmpsl
lea
xor
test
cmp
test
adc
sarl
pop
or
or
lea
dec
pop
jp
es
mov
or
inc
mov
into
sub
add
mov
sub
mov
mov
scas
mov
pop
inc
mov
pop
je
shl
jno
mov
cld
out
testl
int3
sub
test
call
iret
mov
dec
ficomps
sbb
imul
mov
outsl
pop
test
push
sub
je
dec
lock
mov
jmp
shll
cmp
pop
lret
dec
les
subb
leave
ss
inc
subl
push
pop
clc
lret
xchg
add
mov
adc
xor
pop
jae
out
call
dec
adc
xor
adcb
call
lahf
mov
mov
cmpsb
and
test
lea
inc
movl
aad
pop
lea
shrb
pop
inc
mov
aas
jle
fidivs
add
mov
enter
jl
mov
insb
adc
hlt
mov
sub
imul
mov
adc
mov
popf
mov
push
mov
pop
xor
xor
pushf
add
es
ret
push
cmc
rcll
and
lock
cmp
push
inc
bound
mov
inc
aam
adc
and
push
repnz
popa
mov
add
adc
ret
cmpsl
jmp
das
mov
mov
or
cmovs
mov
in
mov
add
pop
xor
ret
lods
loopne
pop
or
test
push
push
aaa
nop
add
or
jbe
add
push
xlat
test
xchg
push
add
jae
mov
cmpsl
cld
fmull
addr16
adc
cld
movsl
rcl
push
sbb
int
cs
push
mov
dec
fistpll
mov
or
loopne
loopne
nop
nop
push
mov
shl
jbe
xor
and
jns
inc
mov
addl
xor
cltd
dec
and
aas
sbb
mov
mov
out
int
enter
and
lds
jne
push
and
push
inc
test
cmpsl
lock
gs
mov
dec
or
repz
add
or
and
notb
push
stc
dec
sti
loopne
cmp
xchg
mov
cmp
push
decb
cltd
sub
shl
or
mov
mov
and
mov
push
or
xor
enter
andb
mov
mov
xor
enter
int3
nop
popf
cmp
adc
pop
and
push
ret
bound
cmc
xor
xorl
or
ljmp
xchg
in
sbb
cmc
ds
cmp
add
test
rorl
sbb
enter
mov
adc
enter
fldt
push
lds
push
dec
push
push
push
lods
shlb
daa
mov
add
das
les
jne
fstpl
add
xor
sbb
cltd
enter
bound
dec
test
xchg
sub
scas
mov
data16
stc
lret
xor
jmp
sbb
aaa
fidivrs
icebp
sbb
bound
cmp
lea
mulps
adc
sub
lcall
push
mov
lret
js
andb
incl
mov
cs
xlat
pop
cmp
test
les
push
xor
jmp
inc
sarb
test
faddl
and
or
xor
add
loopne
dec
shrb
jo
and
addb
xor
cmp
ret
xor
add
pop
push
jns
and
jmp
in
push
xchg
in
dec
and
sar
iret
inc
sti
lods
dec
mov
jmp
dec
sub
adc
fadd
or
sbb
daa
mov
std
cmp
imulb
sub
adcb
inc
fldt
aas
cltd
push
jl
jmp
sti
insl
lods
push
rorb
xor
cmp
call
jg
push
mov
adc
xorl
and
insb
pop
pop
mov
leave
or
mov
push
subl
sbb
pop
jecxz
dec
mov
bound
in
int
push
jmp
fisttpl
stos
out
and
inc
pop
fdivs
in
sub
cmp
dec
in
sub
pop
cs
scas
sbb
ret
push
push
xchg
mov
fimuls
dec
xchg
push
leave
les
adc
push
inc
mov
outsl
inc
mov
dec
pop
jb
fisttpl
mov
leave
out
dec
cld
call
mov
pop
les
xchg
inc
sbb
xchg
push
cmp
dec
jns
rorb
cmp
ss
pop
push
fs
daa
sbb
cmp
dec
loopne
andb
cmp
and
push
push
dec
es
push
lcall
cmp
sub
fs
mov
imul
cmp
shlb
mov
in
sbb
push
and
push
enter
push
mov
mov
je
or
adc
out
addb
dec
fisubrs
jl
mov
dec
test
inc
xor
pop
dec
test
shrl
nop
dec
dec
cld
mov
and
xchg
dec
mov
pop
nop
xchg
jmp
loopne
fcoms
pop
sub
sub
fisubl
lods
add
insb
lcall
aam
pusha
pop
mov
dec
mov
clc
or
add
push
xchg
sbb
cmovns
and
cltd
cmp
cld
addr16
or
movsb
and
lock
sub
dec
iret
addr16
push
cs
lahf
in
mov
dec
fwait
daa
popa
in
leave
repz
mov
push
lahf
lods
notl
pop
repnz
dec
xchg
dec
enter
push
pop
pslld
xor
or
jb
dec
das
fidivl
push
push
in
jo
push
xchg
and
das
cld
in
xor
movsb
xchg
and
das
in
enter
push
add
movl
pop
fdivl
xor
sub
inc
scas
dec
sub
je
push
xchg
in
fistl
add
push
rorl
out
push
mov
fcoms
add
popa
bound
aad
push
stos
mov
cli
daa
mov
and
addr16
jne
mov
or
jne
sub
dec
out
push
mov
xor
xchg
subb
mov
sbb
xor
das
or
xor
inc
jne
cmc
cwtl
jge
cs
push
icebp
dec
adc
sub
xor
lock
cmp
xlat
incl
add
and
mov
loop
je
rolb
jge
test
insb
femms
or
lds
rclb
stc
cmp
es
sbb
adcb
in
dec
mov
fcoms
push
addr16
mov
xchg
nop
std
cld
pop
sbb
jbe
and
and
jo
or
pop
cmp
lds
pop
mov
incl
imul
rol
push
push
xchg
xor
cmpl
cmp
in
mov
jecxz
mov
pop
cmpsl
sahf
mov
and
adc
push
int3
xchg
mov
push
push
dec
shl
test
mov
xchg
mov
into
dec
push
sub
mov
clc
outsl
out
or
cmp
aaa
xor
adc
repnz
cmp
jne
or
jne
hlt
pop
cmp
add
sub
call
sub
xorb
adc
xor
mov
mov
add
fistl
icebp
sub
rorl
dec
add
fldcw
push
or
add
hlt
cmp
mov
mov
scas
jl
pop
mov
cmp
mov
jnp
rcrb
js
push
fs
nop
das
push
sahf
or
sub
pop
adc
fsubrs
jnp
adc
push
aas
mov
cld
ds
fcmovbe
dec
cltd
cmp
fiaddl
mov
sub
mov
cmp
mov
incl
andb
push
orl
add
cmp
rcrb
add
div
adc
inc
sbb
inc
jecxz
div
loopne
fnstsw
mov
push
sub
and
jo
fdivs
mov
popa
sbb
xchg
cltd
mov
stc
cltd
js
mov
cmp
push
ret
imul
test
push
repz
leave
sar
jl
sbb
sub
mov
mov
pusha
add
into
popa
ret
lods
cmp
mov
out
fadds
jo
sar
aam
in
fistpl
sub
and
imul
js
sub
adc
lods
cmp
loopne
cmp
cmp
push
cs
mov
rclb
push
xchg
subb
mov
add
or
cmpsb
xchg
aam
xorb
call
rorb
adc
inc
inc
js
mov
sbb
int3
mov
subb
adc
ficoml
jle
push
pop
add
inc
fdivs
or
loop
mov
lcall
and
mov
ja
or
jne
mov
add
clc
jbe
sbb
lds
rclb
loop
push
lcall
adc
cmp
inc
out
adc
pop
jns
les
adcl
sarl
jb
adc
loop
and
sub
das
xor
or
dec
jmp
mov
inc
or
jle
lea
or
in
or
testb
sbb
daa
push
cmp
aad
mov
test
sbb
popf
test
out
mov
mov
in
mov
adc
ficompl
adc
fmull
orb
sub
mov
sub
or
jg
orb
jmp
andb
mov
popf
lea
push
push
mov
adc
add
xor
imul
xor
adc
adc
jmp
pusha
sub
inc
xor
movzwl
push
in
subl
jne
push
xchg
cmp
jecxz
mov
sub
inc
call
adc
sub
into
add
sub
inc
push
loopne
and
cmpsl
push
jmp
cmovnp
add
sub
popf
out
imul
in
sbb
ret
pop
cmp
roll
push
adc
iret
push
leave
mov
int3
adc
cmp
cmp
adc
add
cmp
add
sahf
pop
jmp
add
pop
sbb
int3
into
aaa
jmp
push
push
xlat
jge
cmpb
shl
scas
mov
xchg
or
dec
mov
inc
mov
and
cmpb
sbb
movsb
mov
pushf
lock
pop
pushf
add
stos
mov
adc
cs
cmp
repnz
jp
ficoml
outsl
int3
outsb
adc
sbb
cs
dec
les
pop
push
stc
insb
jns
cmp
sub
dec
add
and
scas
cmc
daa
bound
xchg
push
dec
inc
popf
inc
xchg
xchg
mov
mov
mov
pop
add
add
xlat
adc
lods
xchg
push
popa
out
inc
dec
lock
popf
test
add
sti
jnp
popf
inc
pop
push
nop
add
or
xchg
movsb
aam
dec
add
xchg
pop
xchg
pop
loopne
dec
sbbl
or
sbb
jnp
push
xchg
add
mov
out
stc
push
inc
clc
aas
xor
inc
insl
xchg
pop
sbb
jecxz
test
and
rcr
adc
idivl
lahf
dec
hlt
je
sbbl
pop
into
cmp
popa
inc
push
jmp
inc
jb
jnp
gs
and
push
add
cmp
or
popf
pop
xchg
fadds
dec
jge
pop
loopne
inc
mov
adc
imul
inc
mov
inc
or
hlt
sub
adc
cltd
outsl
and
jb
je
sbb
adc
push
or
dec
xchg
cld
xchg
cld
fcmovnu
jge
inc
xor
pop
xor
add
add
and
mov
testb
push
push
fistps
and
push
in
stc
add
push
aad
xlat
jo
shrb
mov
jmp
or
jo
add
push
mov
add
leave
xchg
aaa
mov
cmp
pop
neg
mov
scas
faddl
or
lret
dec
repnz
pop
loope
pop
mov
shl
stos
aad
addl
lock
mov
xchg
lds
sub
jg
cmc
daa
pop
adc
int3
inc
mov
pop
pusha
rclb
mov
xchg
pop
into
daa
repnz
inc
adc
int3
je
je
push
scas
test
ljmp
jp
add
mov
aaa
sub
xchg
mov
std
bound
mov
dec
movsb
stos
adc
lock
add
inc
pop
push
ss
cmp
stos
je
ficomps
adc
sti
aam
test
addr16
lret
dec
ret
and
inc
add
mov
pushf
bound
lahf
add
mov
fdivs
add
jns
rol
fistl
add
int3
cli
xor
push
test
scas
or
rcrl
mov
std
mov
mov
inc
int
pop
jne
xchg
push
mov
mov
add
xor
xor
cmp
mov
std
xorl
test
outsl
and
je
sti
outsl
mov
or
iret
dec
jmp
sub
jmp
or
jmp
jg
mov
test
test
shr
in
mov
jmp
mov
inc
inc
xor
and
int
jg
jmp
mov
and
je
inc
cmp
add
dec
jne
mov
pop
pop
mov
add
lock
adc
adc
aas
rorl
mov
inc
mov
addr16
mov
js
test
je
test
sti
cmpsb
sub
adc
sbb
rolb
js
and
adc
adc
cs
pop
inc
daa
push
dec
inc
incb
hlt
sub
in
js
xchg
xor
repz
or
enter
pop
pop
xchg
scas
xchg
je
push
push
jmp
popa
in
mov
scas
sbb
push
decb
outsl
jmp
mov
add
ds
mov
jecxz
inc
cmp
add
dec
inc
insl
outsl
in
xor
aaa
xlat
je
and
xchg
insb
xor
popf
mov
xchg
dec
scas
sub
sbb
pop
xor
sbb
xor
mov
push
add
cmpsl
add
jnp
in
stos
or
mov
mov
andb
inc
lcall
xor
mov
aas
les
roll
cmp
jbe
cmp
jb
add
and
stc
or
scas
dec
les
xlat
and
sbb
stc
jge
hlt
jmp
add
das
test
add
mov
pop
cmp
lods
add
or
xchg
adc
and
pop
icebp
mov
mov
or
pop
fcompp
add
int3
mov
dec
lea
dec
add
mov
and
add
inc
mov
push
in
mov
or
out
push
in
mov
in
aam
mov
mov
xor
in
call
dec
shll
hlt
hlt
clc
clc
scas
aam
sar
cld
add
add
lcall
xor
cmp
imul
and
insb
shll
cmp
repz
adc
popa
clc
jge
push
fnstenv
iret
jl
cld
dec
jbe
xchg
and
std
cld
out
mov
divl
mov
lea
pop
stc
imul
sub
push
call
pop
adc
fildl
jne
add
dec
lods
sub
outsb
leave
mov
aas
inc
ss
cmc
out
add
shlb
dec
push
out
loop
xor
pop
mov
mov
or
dec
shll
mov
push
das
sbb
sbb
adc
adc
or
lcall
add
fimull
enter
pop
lods
in
push
das
lsl
pusha
mov
pop
pop
daa
popf
adc
lds
mov
shlb
mov
inc
icebp
add
sbb
mov
sub
clc
adc
rorb
pop
dec
loopne
daa
sub
xchg
push
adc
fildl
sbb
nopl
ss
add
rcll
mov
inc
and
roll
add
ror
rcrb
xor
je
leave
sti
std
add
int
inc
ljmp
std
jp
orb
and
push
test
sbb
stc
inc
mov
push
mov
jecxz
sub
test
out
cmp
sub
mov
enter
xchg
je
adc
pop
subb
adc
rep
je
inc
dec
shrb
and
jp
push
cmp
int3
ret
scas
adc
jmp
push
pop
sub
jae
mov
shrl
push
ret
push
add
pop
sarl
stc
or
add
add
or
cltd
cmp
and
adc
aas
cmp
jne
sub
fistl
das
push
cli
add
xor
scas
sbb
insl
outsl
fdiv
shl
inc
ret
jbe
add
inc
repz
ds
pusha
loopne
add
rol
ret
xor
xchg
orl
adc
or
pushf
adc
mov
cmpsl
test
ret
push
push
fbld
test
jle
jge
call
jle
not
psubsw
das
sbb
or
inc
push
adc
out
rorb
xchg
inc
jmp
sub
in
sti
cmpl
add
xor
xchg
mov
jo
adc
adcl
fwait
lea
xchg
test
pusha
jmp
cmp
ret
jne
neg
pop
cwtl
adc
and
jg
cmp
mov
test
idiv
mov
je
cmp
and
fwait
mov
jbe
and
push
push
mov
mov
arpl
or
insb
call
jno
or
or
adc
mov
movhps
push
movsb
sub
je
out
sub
cmp
negl
xor
pushf
mov
ss
movsb
pusha
sub
xor
add
xchg
fwait
pop
mov
add
imul
pop
fwait
jno
icebp
dec
test
dec
or
addl
sti
cmpsl
pop
idivl
or
das
sbb
shrb
cmp
sub
mov
jb
loop
js
lods
ss
nop
sarb
jge
sub
add
dec
filds
imul
cmp
jb
fmuls
shll
adc
fidivs
jmp
jge
pop
pop
lea
xchg
aaa
sub
fsubr
sbb
cmp
pop
je
mov
or
push
add
and
mov
addb
rorl
jmp
or
mov
sub
repz
inc
sbbb
push
cld
or
xchg
jns
or
loope
aam
inc
sub
addb
add
xchg
pop
or
mov
push
sub
insb
pop
ja
jle
dec
add
ss
mov
les
sub
ret
add
cmp
push
cmp
cltd
test
adc
cmpsl
push
sbb
add
jae
sbb
insl
dec
mov
xchg
dec
xchg
dec
inc
push
nop
fldenv
cmp
and
scas
xchg
inc
jne
sbb
adc
cmp
sarl
adc
dec
adc
xchg
mov
or
cmp
test
or
dec
xor
mov
test
inc
xchg
ret
jae
mov
shr
push
cmp
outsb
cmp
sub
push
aad
and
push
rcrl
test
jne
cmp
mov
ret
or
add
jmp
cmp
into
ret
push
inc
mov
sbb
push
ret
ret
imul
aad
cmp
or
push
adc
add
xchg
mov
inc
and
dec
cmp
jno
ret
push
sbb
push
jle
cmp
and
ret
adc
cmc
jl
adc
and
imul
push
cmp
or
sarl
inc
pop
mov
xchg
arpl
sbb
mov
mov
insb
insl
jle
or
pop
pop
ja
mov
pop
lods
push
jmp
or
mov
adc
enter
dec
pop
jno
mul
inc
mov
or
mull
add
loope
rcrl
pop
daa
pusha
xor
mov
xor
pop
aam
aas
adc
fnclex
ret
ret
mov
filds
in
adc
dec
push
xor
mov
xor
inc
jo
push
je
dec
pop
rolb
sub
fmuls
sbb
push
ret
jnp
push
loop
adcb
movsl
pusha
inc
adc
jmp
mov
stos
push
sbb
jge
sahf
adc
add
add
bound
or
shr
inc
pop
xor
call
shr
rcr
shr
rcr
or
jne
div
mov
ficompl
jge
pop
push
inc
push
out
shll
cmp
or
cmp
loope
mov
cltd
add
fistpll
fdivl
fcompl
ficoml
jmp
fdivl
push
sub
pop
jnp
enter
adc
or
or
sub
and
pusha
scas
push
cwtl
or
testl
push
push
push
xor
jge
inc
stos
fadds
sbb
mov
mov
sbb
sbb
sbb
sbb
dec
ret
jle
adc
xor
loope
mov
jmp
icebp
push
cltd
fs
adc
add
jne
gs
pop
imul
or
in
clc
adc
xlat
cltd
je
test
pop
or
push
inc
inc
dec
jmp
roll
inc
mov
mov
adc
inc
dec
xchg
mov
shr
sbb
aaa
lahf
clc
sti
loopne
sub
cmpsl
je
mov
mov
dec
adc
arpl
scas
cmc
movsl
sub
sbb
mov
xchg
sbb
les
std
mov
cmp
jne
sbb
out
jne
or
pop
es
fiadds
int
mov
jo
add
loope
nop
pop
mov
adc
jecxz
jns
gs
inc
scas
sbb
adc
sub
add
shl
dec
adc
or
or
jmp
sbb
dec
xor
jg
or
cmp
mov
lods
test
adc
jp
jmp
xor
push
or
xor
iret
in
add
pop
mov
cmp
jne
push
jne
aas
add
jbe
dec
negl
inc
scas
fcoml
mov
cmp
sarl
cltd
inc
mov
sar
lret
sub
loope
or
cmc
popa
imul
and
dec
ret
push
inc
sub
movsbl
jge
aaa
cmp
jae
lds
or
mov
inc
out
pop
addb
lret
add
or
scas
sbb
dec
and
mov
out
arpl
aaa
jecxz
xchg
jmp
test
aas
pop
mov
add
dec
loopne
xchg
cli
sub
cmp
sbb
add
and
cmpsl
aaa
sbb
and
fdiv
lahf
mov
testb
jns
pop
jnp
dec
repz
jmp
mov
pop
neg
push
dec
in
sbb
neg
add
mov
mov
mov
pushf
pop
cmp
pusha
or
or
xchg
add
jb
mov
push
cmp
adc
inc
dec
cltd
sar
loopne
clc
mov
push
mov
cmp
xor
cltd
sbb
dec
cs
xor
sarl
loop
adc
push
ret
inc
pop
mov
orl
cmp
adc
dec
filds
cmpw
or
mov
aas
pop
jmp
fcmove
mov
mov
test
adc
movsb
pop
sahf
cld
dec
icebp
mov
bnd
andb
mov
leave
out
call
js
or
push
movsb
and
inc
pop
jp
rclb
jns
ja
dec
inc
xchg
and
push
jns
sbb
or
jmp
std
jmp
pop
or
pop
in
mov
fs
vmovdqu
xor
add
xlat
loope
or
xor
aam
jno
mov
adc
nop
in
push
fisubl
sbb
push
push
mov
repz
decb
cwtl
imul
pop
inc
cmp
je
and
popf
or
mov
outsl
test
and
jne
lea
mov
sti
or
sub
je
loopne
les
xorb
mov
mov
push
adc
insl
push
repnz
adc
jno
sbb
or
aam
stc
das
shll
pusha
sbb
mov
in
mov
shrb
pop
sbb
and
in
pop
inc
push
push
popf
or
cmc
fucomp
add
ret
jmp
mov
aaa
icebp
lds
mov
testb
xchg
andb
jecxz
fisttps
mov
sbb
js
sub
dec
pop
stos
push
push
js
shlb
pop
pop
xor
out
pop
shrb
mov
or
pop
pop
imul
jo
add
inc
lcall
jnp
cmp
or
dec
lcall
adc
je
test
ja
scas
rclb
in
or
push
dec
jecxz
push
adc
cwtl
loop
or
lret
pop
add
jge
stc
xor
hlt
iret
xor
adc
das
lds
je
add
out
sti
sub
mov
cld
cmp
je
push
out
cmp
dec
adc
out
and
or
cmpsb
imul
pop
arpl
movsb
flds
outsb
or
cld
add
je
and
xchg
jne
inc
jno
adc
xchg
mov
xchg
push
sub
sar
dec
mov
cli
xor
push
les
rcl
jp
cmc
adc
add
xchg
jne
push
xchg
xor
or
pop
or
pop
adc
and
and
or
cmpsl
dec
mov
inc
inc
cmp
jb
adc
int
jnp
cmp
adc
pushf
aad
adc
jmp
int3
add
lea
mov
mov
std
add
jb
leave
add
inc
incl
jno
push
add
ficoms
ret
lcall
jne
jmp
pop
or
ss
xchg
scas
sbb
adc
mov
jl
icebp
pusha
jns
dec
jecxz
imul
push
push
imul
rep
push
js
addl
xchg
and
pop
rol
std
add
jecxz
inc
add
outsb
pop
or
push
inc
push
mov
clc
fimuls
mov
pop
push
shl
shr
mov
test
mov
add
loopne
fiaddl
push
inc
push
dec
inc
cld
cmp
dec
shll
and
inc
into
mov
ret
mov
and
sub
and
adc
and
sbb
je
mov
aam
out
out
jmp
inc
fwait
and
cltd
and
mov
adc
movsb
pop
gs
fdivrp
cmpsb
mov
push
add
inc
inc
cmp
pop
jle
das
sbb
pop
je
jnp,pn
adc
lea
adc
push
sub
iret
repz
sub
jecxz
mov
sti
sbb
fs
adc
xor
sbb
jge
and
int3
add
dec
adc
and
sti
jb
jge
pop
xor
nop
adc
pop
pop
mov
sub
mov
roll
cld
push
shll
cmp
adc
or
push
nop
add
stc
sbb
sti
hlt
xorl
mov
jae
adc
daa
adc
pop
and
push
icebp
les
cli
outsl
jne
dec
or
in
sub
pop
test
imul
and
inc
jmp
fists
test
add
push
cli
or
les
mov
fimuls
dec
jo
dec
je
shr
jne
ret
push
pop
ret
pop
rorb
call
test
mov
pop
pusha
shl
mov
xor
call
push
add
das
dec
add
dec
not
lahf
pop
add
call
rcr
call
push
xlat
out
or
jle
push
push
push
es
mov
and
or
push
popa
mov
cmp
cmp
ljmp
cld
mov
mov
xchg
push
cmp
pushf
lds
mov
mov
push
clc
notl
cld
lock
mov
das
sub
cmp
push
cmp
sbb
sub
push
pop
repnz
test
pop
mov
pushf
sub
sbb
xor
jnp
cmpb
jae
scas
movb
mov
cmpsl
push
and
sti
jg
cmpsl
mov
push
mov
pushf
cli
inc
pop
stc
push
ret
add
push
jmp
daa
les
sub
pop
adc
adc
testl
loope
dec
cmp
jne
add
lock
sub
mov
das
inc
xor
test
std
adc
pop
hlt
out
cld
and
movaps
push
xor
or
push
and
mov
dec
bound
sbb
jne
dec
or
push
ss
add
pop
loopne
adc
pop
mov
andw
sahf
push
test
adc
mov
jnp
xchg
jle
inc
inc
data16
icebp
pop
sbb
sbb
sbb
adc
fldenv
or
sbb
inc
inc
jmp
clc
shrb
icebp
aas
jb
hlt
fstcw
fwait
ja
or
sarb
jo
insl
cld
fistpll
or
and
cmp
sub
or
mov
cs
push
sub
fisttps
dec
push
mov
fidivl
pop
insb
xor
jg
mov
or
or
lret
call
nopl
idivb
push
int
test
outsb
add
rclb
pop
mov
mov
push
push
mov
cmp
inc
or
push
and
push
push
and
adc
inc
sar
movsl
dec
pop
sub
das
aam
or
sub
mov
xor
inc
mov
andb
sbbl
dec
sub
mov
fistl
cmp
ret
test
stc
sbb
mov
adc
cli
lahf
add
pop
dec
pop
dec
scas
pop
push
mov
fistpl
rcl
pop
pop
subb
pmaxsw
test
push
pop
push
andl
adc
sbb
mov
push
mov
jo
bound
or
iret
icebp
daa
shrb
sub
xor
ss
push
push
loopne
mov
add
loopne
inc
or
ds
js
shlb
dec
dec
pop
jle
add
pop
dec
or
xor
push
decl
cmpl
loope
pop
inc
push
adc
imul
add
push
loopne
jge
add
lods
and
mov
mov
jmp
popa
push
icebp
and
movsl
mov
fiadds
pusha
or
dec
jo
sbb
or
jle
ss
xchg
dec
outsl
or
inc
lcall
mov
hlt
push
mov
mov
rclb
cmp
jl
outsl
cs
jl
or
push
ja
adc
sti
popf
xor
test
hlt
sbb
mov
test
ja
negb
jmp
dec
xchg
mov
lret
jnp
int3
add
ja
cmp
inc
nop
sub
cmp
testb
je
or
adc
imul
xorb
dec
adc
mov
push
add
addb
sti
sub
sahf
cwtl
sbb
mul
inc
push
cmp
sbb
dec
pop
dec
adc
bswap
sbbb
imul
jns
js
roll
mov
jnp
fldcw
dec
je
or
and
xor
je
jecxz
cmpsb
loopne
jle
std
jno
xchg
call
adc
jg
xor
push
inc
inc
dec
sub
cs
adc
and
sbb
dec
pop
inc
fstpl
jl
cltd
ret
shlb
xor
movsl
clc
addr16
clc
ret
xchg
adc
and
adc
call
mov
insb
and
daa
mov
imul
jmp
sti
inc
add
xor
adc
imul
or
or
and
jns
cmc
dec
repz
outsl
cmc
inc
aam
adc
je
iret
jnp
inc
jmp
inc
int3
add
es
lea
cli
cmp
lret
push
iret
sbb
push
xchg
adc
pusha
sbb
out
or
or
movsb
adcl
jno
or
popa
xor
sbb
pop
jle
je
or
je
dec
stc
call
je
pop
mov
insl
out
push
hlt
lea
jg
fs
add
add
aas
sbb
subl
clc
ficoml
cwtl
ror
movsl
push
fsubl
sbb
sbb
mov
pop
add
cmp
sub
push
out
adc
lock
and
mov
lock
inc
test
dec
add
imul
faddp
and
dec
xchg
and
dec
inc
insb
xchg
imul
pop
mov
repz
or
sub
mov
ret
dec
addr16
cmp
imul
mov
xchg
jns
test
push
test
data16
aaa
inc
mov
leave
adcb
daa
cmp
popl
mov
in
fs
mov
sub
test
dec
dec
pop
rcrl
fwait
jg
sbb
notb
test
mov
movb
fdivs
filds
and
add
inc
or
test
jmp
das
ss
pshufw
mov
jmp
push
in
cwtl
inc
jno
jmp
inc
js
out
ds
pop
jmp
jp
das
jbe
mov
or
aaa
pop
ja
cltd
dec
cmpsb
jge
jmp
pop
mov
jmp
inc
or
loopne
pop
jl
rdpmc
shlb
je
jg
jl
les
lock
adc
ja
xchg
rorb
or
jne
and
push
jl
fidivrl
sti
aaa
mov
testl
out
jnp
sahf
js
ret
xchg
jg
xor
sub
xor
fdiv
test
xadd
mov
cmp
sti
cmp
jle
add
cmp
mov
or
imul
sbb
sbb
jge
cmpb
pop
mov
push
pop
adc
add
clc
shll
sbb
test
mov
movl
fists
je
and
jnp
pop
dec
and
sub
add
into
xchg
or
sbb
xor
sbb
mov
loop
cmpb
jl
add
cmp
mov
add
or
sbb
cmpsb
pop
mov
inc
mov
pop
xor
gs
lock
mov
dec
mov
cs
addr16
out
add
inc
outsl
je
pop
popa
test
div
out
adc
mov
in
fisubs
inc
add
data16
and
and
jmp
lods
inc
addb
dec
add
push
mov
mov
push
add
push
popa
or
pop
int
out
pop
push
into
jne
sbbl
ret
incl
pop
xorb
jo
push
jle
mov
xchg
or
and
push
cmpl
pop
inc
jg
fidivrl
ret
dec
jno
es
push
dec
adc
mov
push
insl
aas
ret
dec
sbb
jl
addl
add
sbb
flds
lds
out
ficoml
cmp
adc
mov
andb
push
mov
pop
or
xlat
test
lock
jns
xor
hlt
sbb
or
push
negl
rorb
mov
adc
fcomps
pop
dec
imul
adc
out
cmpb
jno
push
lret
push
inc
shll
ljmp
sti
add
loopne
fdivrp
dec
sub
add
and
adc
leave
mov
sarb
testl
dec
jg
je
or
inc
divl
and
je
popa
or
inc
out
pop
dec
jmp
cmpb
jne
lods
xor
inc
add
jnp
push
or
jmp
pop
jle
daa
inc
bnd
insl
push
je
loopne
aas
jnp
jmp
jbe
sti
jmp
decb
sti
cmpb
add
mov
repnz
xor
or
jo
test
add
sarl
sti
movsl
pop
push
cltd
inc
jecxz
inc
cmp
ljmp
xchg
add
incb
or
cmp
add
jle
packsswb
mov
sbb
fists
adc
add
je
cmp
fmul
ja
outsl
jg
add
jl
sub
fs
sbb
ret
or
loopne
push
and
jl
or
pop
aam
cmp
clc
and
jmp
inc
jle
push
loop
fsubr
cmp
sbb
out
arpl
and
icebp
jne
repz
add
dec
adc
dec
sti
insl
lods
test
jmp
sub
mov
testl
or
jle
adc
leave
jne
push
pop
mov
std
mov
scas
in
push
inc
mov
mov
jne
push
in
jge
fwait
pop
inc
mov
inc
sub
mov
les
dec
inc
adc
xor
mov
movb
insl
pop
movsl
xchg
sbb
jno
inc
outsl
in
xchg
push
daa
and
xor
inc
push
xor
ds
push
sub
mov
mov
dec
adc
andb
xchg
or
lcall
inc
dec
scas
push
je
mov
dec
or
imul
ljmp
cs
adcl
ret
mov
fsubl
xchg
ret
mov
stos
icebp
mov
leave
mov
push
jmp
jge
mov
cmp
ds
arpl
aas
pop
jnp
js
popf
cmpsl
jmp
xchg
loopne
bound
fdivrs
or
sbb
mov
cmp
add
lock
outsl
sbb
pop
ret
js
fisttpl
mov
outsl
push
pop
mov
push
mov
jne
in
pop
lock
jmp
subb
iret
test
mov
cmp
pushf
in
jge
jnp
fistpll
cmp
mov
or
and
mov
mov
xlat
pop
inc
cmp
ficomps
xchg
cmp
inc
cmp
jae
sbb
testl
mov
cmp
ja
xor
lcall
sub
inc
mov
mov
and
mov
cmp
pushf
or
inc
dec
jne
xor
jmp
pop
mov
mov
cmp
jmp
jmp
test
pop
mov
or
lcall
xor
shll
test
push
test
push
dec
xor
idivb
enter
pop
push
pop
call
out
adc
dec
or
shll
jne
inc
sub
mov
jno
rorb
xlat
js
or
mov
cmp
ret
push
jge
push
mov
aam
pop
push
xchg
push
daa
fmuls
push
sahf
push
fwait
sub
jg
add
inc
lret
or
js
aam
andl
scas
add
jne
sub
dec
jmp
int3
repz
rolb
out
add
push
fsubs
jp
dec
sub
aas
or
ret
sub
mov
xchg
ja
push
in
pop
sbb
push
mov
jl
push
xlat
popa
pop
mov
adc
lahf
les
ficompl
add
mov
inc
rcrb
add
ficomps
arpl
mov
fldl2t
add
fsubr
xor
dec
fmull
roll
lods
neg
mov
mov
push
mov
aas
or
cmp
iret
add
jbe
insb
shl
add
incl
jmp
lea
shl
jmp
fwait
je
push
add
loope
or
rorl
lea
mov
shrl
inc
push
movl
stos
cmp
xorl
inc
adc
aam
or
enter
mov
jmp
ret
repz
cmp
nop
out
ja
or
inc
jmp
push
adc
jo
and
push
clc
adc
xchg
in
adc
sbb
dec
lock
push
enter
in
loopne
pushf
push
jne
mov
pop
rcr
outsb
jne
mov
mov
rcll
lock
mov
lea
jg
xor
movsb
and
das
negb
je
mov
adc
jge
ret
cmp
or
loopne
jmp
jle
or
and
push
testl
out
out
pop
rcrb
inc
js
dec
add
or
pop
add
ret
push
add
jmp
push
cmp
and
cmp
rolb
or
out
push
xor
cmp
popa
ja
insl
mov
inc
jmp
jmp
shr
mov
stc
scas
pop
enter
push
pop
test
sbb
add
mov
sub
clc
rcrl
dec
or
ja
stos
subb
pop
insb
inc
and
ficompl
xchg
mov
add
xor
clc
jle
xchg
cmp
addl
lods
mull
pop
lea
out
add
adc
jecxz
add
je
push
sti
popa
fdivrs
in
mov
mov
mov
xor
sub
lds
or
fwait
cmp
cmpsl
in
cmp
cmp
mov
cmp
imul
jmp
out
adc
and
mov
add
push
pop
pop
xchg
iret
sbb
dec
sbb
jbe
sub
mov
idiv
jne
push
mov
inc
loopne
fildl
push
ja
int3
or
or
jmp
jb,pt
movsb
bound
inc
or
cli
or
sbb
xor
out
lcall
loopne
jno
adc
test
sbb
xor
add
pop
repz
inc
adc
pop
in
add
std
pop
push
or
pusha
dec
bound
in
xorl
ret
mov
push
jge
cmp
into
jle
mov
pop
or
fildll
xor
lahf
loope
dec
icebp
sbb
mov
inc
add
xor
cmp
lahf
cltd
jl
jno
iret
rcrb
js
outsl
and
xchg
cmp
fbld
cmp
or
sbb
mov
sub
pop
inc
sub
sub
xor
sbb
dec
bsr
repz
rclb
adc
or
xchg
mov
cli
loop
enter
ds
popf
adc
pusha
cmpsb
inc
push
and
std
xchg
jo
lea
loope
cmp
jl
adc
or
add
and
test
in
subl
push
fwait
or
or
jmp
xor
imul
sbb
fcomps
stos
xor
test
pop
scas
ds
rorl
inc
jmp
sbb
sahf
ss
cmp
mov
jmp
repnz
jp
dec
clc
inc
add
sbb
in
shll
adc
inc
es
sbbb
inc
xor
or
jo
and
in
sub
sbb
orl
push
inc
push
cld
out
sub
push
mov
sbb
xor
movq
mov
pop
ret
push
test
jl
or
sbb
je
fucomi
cmp
or
push
mov
std
jnp
cltd
push
lea
mov
lahf
js
les
push
or
cli
add
xor
adc
call
jo
sub
inc
jmp
aas
xchg
cld
sub
shr
mov
imul
bound
sbb
and
mov
push
pop
mov
add
xor
dec
cltd
mov
clc
mov
test
call
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
jae
mov
jmp
dec
add
shll
pop
mov
lock
jne
add
sub
lea
inc
cmp
pushf
mov
add
inc
cmp
dec
add
push
callw
imul
dec
hlt
mov
push
sahf
lcall
push
cs
pop
inc
in
add
sub
inc
mov
sar
xor
fidivs
jnp
adc
sub
xchg
lock
and
cmp
cmc
dec
daa
jno
in
jb
jno
cmp
mov
and
clc
xorb
add
xor
pop
xor
xlat
dec
loopne
cmp
into
push
mov
dec
pop
pop
arpl
pop
and
leave
test
push
pop
add
add
repnz
into
push
daa
pop
bound
outsl
or
sbb
sbbl
mov
mov
mov
sub
psubusb
jo
fnstcw
testb
sbb
sub
mov
lods
int
stos
push
mov
clc
ret
or
out
inc
mov
cld
fimull
jae
mov
cli
fimuls
insb
inc
faddl
outsl
shl
add
dec
sbb
call
aas
test
push
or
or
dec
push
decb
adc
dec
adc
add
and
pop
dec
imul
adc
dec
pop
inc
adc
jmp
adc
out
shl
enter
jecxz
enter
push
lea
ficomps
inc
pop
sub
or
pop
cmp
or
movsl
sbb
insb
sbb
mov
sbbb
jnp
fldt
popa
lret
cmp
pop
inc
mov
pop
and
inc
sar
dec
cmp
jge
add
sub
js
mov
cmpsl
loopne
push
add
sbb
mov
push
out
jae
inc
cld
mov
ja
cmp
push
and
or
sbb
adc
mov
imul
jne
mov
cmp
imulb
in
adc
jne
dec
repnz
out
jae
cmpl
outsb
jmp
sbb
pop
out
push
or
int
fdivrs
das
jle
mov
dec
pop
and
sbb
push
inc
inc
enter
sub
jnp
and
nop
les
inc
lock
and
xor
inc
or
mov
xchg
test
cli
pop
and
cmp
xlat
je
jmp
loop
arpl
mov
into
jne
int
hlt
insl
pushl
leave
jl
shl
inc
jmp
mov
stc
xchg
sub
push
xlat
cmp
pop
mov
add
cmp
jle
repnz
mov
add
dec
fld
popa
jmp
xchg
or
sarb
mov
xchg
pop
mov
decb
jne
repnz
jmp
or
xchg
dec
sub
nop
push
or
pop
test
pop
or
add
movsl
arpl
add
dec
imul
mov
ljmp
inc
cmc
mov
dec
inc
mov
adc
or
cmp
push
aaa
lret
push
decb
jge
subl
mov
and
mov
or
adc
push
or
das
push
or
jo
gs
push
jnp
bound
add
or
inc
and
or
jge
in
arpl
add
inc
add
fwait
inc
fmull
inc
call
call
iret
xchg
cmp
fildl
mov
lea
test
fwait
xor
add
xlat
iret
loop
jne
mov
xor
push
xor
adc
inc
dec
sub
xor
nop
jnp
xchg
rorb
xor
addr16
mov
je
xor
pop
cmp
mov
or
rcll
subl
add
adc
inc
mov
mov
add
and
sub
push
mov
add
loopne
inc
aaa
test
loopne
ret
outsl
imul
and
icebp
xor
add
push
cmp
or
out
iret
roll
jns
pop
adc
fmull
lea
fadds
cli
ja
lea
dec
in
mov
cwtl
mov
and
movl
xor
mov
in
adc
in
movl
sbb
or
clc
pop
imull
loopne
dec
mov
dec
or
pop
inc
pop
jl
fs
inc
test
mov
pop
pop
loope
jmp
shl
dec
inc
jne
or
mov
lock
not
and
ret
imul
ja
mov
jle
push
clc
lea
sub
shr
cwtl
ds
lods
or
mov
push
pop
cmp
sbbb
ret
xor
jo
fldcw
inc
add
loope
sbb
popf
pop
shlb
test
pop
dec
push
clc
xor
or
lea
nop
push
and
inc
fimull
mov
or
adc
jg
sub
add
xchg
inc
rcl
ficomps
stos
sar
dec
mov
subl
lea
mov
daa
jmp
pop
jg
or
dec
pop
dec
pop
pop
out
ja
pop
pop
add
xchg
adc
es
pop
jae
int
xchg
iret
out
in
pusha
xor
jno
and
and
adc
les
shrl
jp
inc
xor
push
sbb
inc
and
jle
pop
sub
xor
xor
lea
mov
stos
scas
lret
dec
insl
pop
xor
push
add
loopne
shlb
jbe
push
cmp
dec
adc
push
push
arpl
cld
xor
dec
mov
push
das
xlat
into
xor
sbb
je
repz
xlat
shll
dec
push
in
in
cs
push
bnd
ja
adc
pop
adc
add
push
ret
aam
aam
pop
inc
push
cmpsb
add
cmpps
dec
ret
or
ret
add
jae
bswap
add
jns
jns
dec
es
sbb
imul
daa
cmp
mov
adc
mov
imul
push
in
in
mov
filds
aad
pop
addr16
dec
add
push
push
xor
mov
push
repnz
or
adc
mov
sar
cmp
push
jmp
mov
mov
hlt
out
mov
lea
mov
adc
pop
jmp
aad
adc
xor
mov
icebp
mov
setge
dec
and
dec
inc
mov
dec
test
movsl
pop
es
lds
test
xlat
inc
cmp
jae
orb
pop
movl
mov
add
jmp
jnp
fcomps
outsb
std
insb
cmp
mov
fimull
or
frstor
pop
ds
push
test
adcb
mov
push
mov
mov
xor
jecxz
push
dec
push
adc
and
aam
or
jle
or
pop
xor
mov
pop
iret
lock
lods
aas
jb
cmp
sbb
cwtl
add
addr16
adc
pop
and
lods
push
inc
pop
mov
push
mov
das
mov
or
out
jg
pop
push
out
jge
inc
lahf
mov
cmp
lock
cmpl
xchg
xchg
pop
int3
or
mov
mov
punpcklwd
xor
pop
cmp
or
push
shl
js
es
clc
dec
cmp
jbe
or
cmp
lret
jmp
add
pcmpeqw
lods
xor
push
mov
out
mov
inc
lods
push
dec
fcoml
sub
test
outsl
popa
insl
mul
or
lods
and
lods
sbb
dec
scas
stc
or
add
hlt
sub
jns
and
andb
cmp
inc
add
cmp
pop
incl
ret
stos
push
daa
and
dec
jl
and
ljmpw
mov
rcrl
and
or
lret
sbb
adc
ret
or
ret
fbstp
mov
nop
sahf
icebp
lcall
cmp
jbe
push
dec
cmp
out
adc
add
sbb
outsl
jb
or
stos
inc
js
dec
jle
adc
push
js
cmp
test
sbb
sti
jbe
push
es
xorl
jb
mov
add
js
cmp
adc
sbb
mov
sub
test
mov
jg
sbb
xchg
mov
push
aas
fstpt
stos
out
or
mov
xchg
orl
dec
testl
ja
cmp
adc
sub
or
ds
je
movsb
or
xor
or
cs
fimuls
dec
std
push
stos
pop
jo
mov
jle
outsb
sbb
sub
sbb
mov
inc
pop
rcrb
cmp
add
cld
lock
push
jne
mov
enter
mov
inc
cmp
add
sbb
and
inc
or
jg
adc
sub
sub
bswap
xchg
mov
push
je
sbb
mov
hlt
push
sbb
jmp
jmp
shll
jo
jecxz
inc
shrl
push
sbb
popa
mov
sbb
cmp
outsb
cmp
dec
add
mov
mov
jae
add
sub
cmp
inc
xchg
loop
addb
xchg
jecxz
aas
mov
xor
cmp
jae
mov
test
jne
jbe
add
hlt
std
rdtsc
jne
inc
inc
jmp
mov
or
cmp
adc
cmp
sbbb
outsl
testb
add
jno
jbe
mov
cmc
push
or
or
inc
mov
pop
add
inc
inc
lea
in
cmp
or
push
sbb
mov
sub
ret
sub
jb
bnd
mov
add
jmp
outsl
push
mov
inc
jae
inc
mov
cmpsl
xor
rcpps
inc
out
fs
inc
outsb
test
js
mov
cmpb
jmp
mov
lea
jbe
sbb
pop
sbb
enter
setg
jmp
jae
sbb
mov
movsl
add
push
mov
adc
not
pop
hlt
gs
mov
mov
cmp
aas
test
std
ja
cmp
jbe
push
lock
scas
xor
loopne
lock
push
lret
inc
cmpb
lea
jbe
out
arpl
sub
rcl
add
jne
int3
daa
xor
and
dec
or
icebp
cmp
or
in
or
push
pop
mov
mov
pushl
je
rolb
lahf
sti
mov
xchg
xchg
insb
mov
inc
or
inc
scas
cli
test
jne
jle
cmp
mov
cld
repz
mov
mov
mov
or
out
mul
addb
in
jno
jle
or
mov
dec
mov
lds
push
or
into
cltd
mov
mov
push
add
sub
and
pop
lds
push
xchg
cwtl
jl
pop
shl
js
hlt
mov
xchg
mov
mov
pop
push
aaa
fsubs
lahf
mov
iret
xchg
das
popa
insb
test
add
or
inc
add
pop
push
adcl
movb
sbbl
rolb
xor
fs
and
cmp
pop
lahf
adc
inc
sub
dec
nop
cmp
cmp
popa
inc
das
cltd
in
add
jecxz
push
ja
add
cmpsl
test
aas
mov
jnp
or
aas
or
push
and
mov
out
sub
fs
add
leave
iret
inc
insb
and
or
mov
cmp
inc
or
mov
xchg
dec
mov
sbb
insb
lcall
loopne
out
adc
jmp
movb
inc
mov
jae
cmpsb
into
push
xchg
push
adc
insl
xor
or
and
inc
loope
call
cld
aas
adc
mov
inc
mov
jmp
cmp
jne
cmpb
add
fwait
sti
inc
dec
sub
xchg
je
out
xchg
scas
add
jle
ret
inc
xor
push
je
push
and
enter
sub
mov
andb
enter
add
loope
add
xor
sbb
xchg
lds
je
cmp
imul
xchg
mov
into
add
or
clc
push
into
mov
inc
xor
dec
push
neg
or
jg
pusha
sub
je
or
mov
ss
je
dec
cltd
lods
push
ret
xchg
adc
ret
std
repz
jmp
sub
cmp
iret
sarl
inc
jmp
push
push
cld
pop
add
icebp
pop
aam
mov
or
xor
lret
fwait
js
les
pop
cs
testb
dec
and
or
cmp
jl
cmp
sbb
sub
mov
add
cmp
subb
xchg
ret
xchg
pop
mov
xchg
mov
lret
jge
sbb
fdivs
mov
pop
add
sbb
or
sbb
dec
adc
call
mov
push
jle
mov
pusha
sti
mov
cmp
je
testb
incl
lret
inc
pop
cmp
jl
jmp
mov
or
clc
push
shl
jno
or
sarl
cmp
dec
lock
je
idivl
cmc
fisubrs
mov
jnp
add
sbb
push
mov
jecxz
sarl
mov
push
fldl
add
adc
lock
fdivl
fmull
insl
lock
cwtl
xor
adcb
fnstsw
sahf
jbe
sbb
sbb
sti
pop
push
adc
leave
imul
mov
aaa
rol
push
jp
mov
aas
and
jecxz
imull
mov
pop
add
or
loop
push
inc
adc
rorl
mov
repz
adc
or
lret
mov
inc
cmp
and
sub
or
cmp
aad
inc
in
pop
dec
pop
call
xor
adc
dec
mov
inc
orl
add
fdivs
and
inc
push
loop
sbb
xor
pop
insl
push
scas
movsl
inc
pop
push
pusha
cmpsb
cld
or
repnz
and
inc
pop
mov
out
je
daa
sti
movsb
daa
adc
fwait
decb
push
cwtl
cmp
dec
or
or
xchg
jp
xor
aas
in
je
insb
push
data16
and
jbe
mov
lds
pusha
fwait
clc
ds
rolb
lret
lods
loope
xchg
flds
xor
sub
cmp
pusha
ret
arpl
or
adcl
mov
add
addb
push
outsb
enter
inc
testl
cmp
pop
add
jns
neg
daa
sub
adc
notl
jg
fs
pop
idiv
jnp
cltd
or
push
pop
inc
inc
or
sbb
sub
sub
mov
sbb
js
inc
inc
push
lods
push
leave
cmp
sbb
mov
xorl
loopne
movsb
adc
xchg
push
inc
add
ret
adc
lcall
movb
ljmp
push
mov
pop
xor
jmp
pop
les
add
cmp
mov
or
add
add
add
jg
pop
je
neg
jmp
pop
cmp
jl
push
jge
push
push
pop
push
push
add
sub
rorl
ret
shll
fs
mov
sub
or
pop
jno
push
aad
icebp
push
arpl
std
in
pop
xchg
push
cmp
pushf
rorl
dec
adc
cld
mov
jge
xchg
or
jge
and
jo
adc
fisubs
sub
or
in
ret
dec
adc
add
shll
or
movb
cmp
sahf
and
shlb
or
adc
adc
jbe
and
out
pop
dec
test
subl
sbb
inc
addr16
and
repz
push
mov
sbb
add
adc
inc
push
and
notl
inc
pop
icebp
or
jmp
cmp
mov
scas
or
or
inc
cmp
icebp
cmp
aad
out
adc
or
sbb
cld
fcmovbe
jl
mov
push
adc
lret
out
dec
or
fldenv
or
lahf
fbstp
jp
cmpsb
mov
pop
lods
xor
inc
repnz
in
dec
dec
add
push
imul
and
pop
ret
xor
cld
mov
inc
cmp
movsb
cmp
rclb
negl
push
push
and
dec
jmp
xor
es
xchg
int3
cwtl
add
xchg
push
orl
xor
movsb
mov
mov
testl
shl
add
outsl
inc
push
lea
imul
lock
pop
add
add
add
ret
lea
or
ret
loop
enter
cmp
cltd
sbb
ja
xchg
dec
aas
push
test
and
pop
testl
push
jl
dec
pop
sub
or
add
imul
mov
push
ja
adc
and
lahf
adc
inc
push
lock
sbb
adc
ror
inc
push
push
pop
push
push
pusha
mov
or
js
or
lock
xchg
and
adc
je
mov
or
add
shr
mov
adc
mov
fldt
call
mov
cmp
xchg
push
jbe
movsl
std
xchg
jmp
dec
xlat
rorl
cmp
out
pop
and
xor
adc
inc
add
xchg
data16
pushf
mov
adcb
push
mov
mov
sbb
jmp
or
aaa
mov
and
data16
scas
call
dec
icebp
xor
into
out
adc
std
adc
testb
je
jge
icebp
mov
mov
adcl
out
shlb
add
jns
or
sub
test
rorl
fmull
push
sub
push
enter
pushf
or
pop
pop
jmp
sbb
pop
lock
in
fwait
ljmp
and
inc
push
rclb
dec
inc
call
das
icebp
dec
dec
repz
add
ret
cmp
lret
lahf
mov
dec
lahf
cltd
lret
inc
rcll
inc
icebp
mov
std
jns
test
sarb
xchg
jg
cmp
je
xor
xchg
push
adc
and
pop
call
mov
test
jmp
stos
pop
icebp
mov
loope
add
xchg
add
dec
and
out
add
out
mov
test
lret
fistpl
sti
inc
jp
das
cmp
ja
inc
jmp
movsl
clc
scas
icebp
pop
xchg
lea
add
lea
and
sub
je
mov
push
call
mov
cli
cmp
ja
xlat
jp
lock
mov
inc
and
rolb
aad
aam
ret
or
shll
adc
mov
mov
insb
pop
mov
push
movsl
movsl
pop
mov
cmpb
js
sbb
xchg
or
jl
inc
mov
mov
fnsave
pop
test
fdiv
push
test
or
aaa
inc
push
cmp
dec
sbb
inc
lea
imull
stos
decb
xchg
push
xchg
jmp
lods
gs
push
cld
jne
ret
xor
xor
sahf
xchg
sub
or
lds
or
ret
mov
add
or
pop
or
shll
cmp
fstps
shrb
das
mov
mov
xchg
add
data16
mov
out
mov
je
hlt
mov
pop
testl
test
push
lea
push
xchg
mov
sbb
xor
test
jns
mov
stos
rep
inc
inc
mov
sub
jl
rcrb
mulb
push
cmc
int3
inc
inc
pop
imul
imul
imul
cld
mov
nop
imul
sti
adc
je
cmc
adc
leave
outsl
xrelease
add
xchg
call
andb
sub
dec
sub
jb
mov
pop
ret
push
xchg
enter
mov
xchg
pop
shll
leave
ja
mov
std
lea
loopne
xchg
mov
pop
mov
and
std
adc
dec
push
pop
stc
xchg
imul
pop
pop
push
mov
or
cmpsb
rclb
push
xadd
push
xor
push
mov
and
xchg
pop
sti
xor
mov
je
inc
inc
xor
sub
sub
jne
in
adc
movzwl
shr
or
scas
cmp
cmpsl
inc
dec
pop
pop
popa
loope
lds
imul
mov
aam
daa
ror
jae
scas
in
xor
cmp
push
inc
cs
psadbw
push
push
movsb
ss
xchg
pop
jmp
loopne
js
xchg
or
dec
push
pop
xchg
mov
std
push
or
xchg
and
repz
push
mov
jmp
inc
fisttpl
and
sub
cmc
lar
sarb
aam
add
cld
jl
mov
test
sub
jo
mov
iret
and
mov
fprem1
add
xor
cmp
mov
sar
jecxz
mov
xchg
dec
je
das
cmp
jae
cmpb
jne
sub
jmp
popa
subb
mov
mov
inc
mov
sbb
push
loope
mov
xchg
outsl
cmpsl
xor
push
push
sub
add
and
arpl
aam
push
xchg
call
jg
inc
mov
or
jae
test
sbb
jnp
inc
or
je
pop
cld
arpl
jl
or
lds
ja
sbb
int
adc
or
filds
roll
les
ja
cmp
push
jmp
test
cltd
lods
pop
and
test
or
out
dec
adc
mov
push
orb
lods
xlat
lods
mov
cwtl
pop
or
adc
jge
scas
jmp
aas
mov
jle
ds
mov
orl
icebp
jecxz
sbb
data16
je
bound
cwtl
sahf
pop
adc
mov
dec
andb
andl
fs
cli
or
inc
inc
pop
push
pushf
or
pop
and
inc
push
insl
mov
or
es
or
jecxz
movsl
rclb
out
xchg
nop
mov
and
and
mov
fbld
and
mov
mov
std
mov
add
push
cmp
jge
lea
sub
or
pushf
mov
or
jne
mov
pop
cmp
stc
shlb
and
cmp
pusha
and
test
addr16
jle
cmp
lea
jle
andb
out
cmp
mov
nop
xchg
adc
rorl
adc
mov
or
push
and
mov
cld
or
or
out
push
xor
pop
shl
ret
push
mov
decb
or
add
adc
lea
pop
inc
aad
testl
je
pop
or
lret
mov
and
mov
push
adc
movl
movsl
out
out
neg
jnp
ds
or
jbe
inc
sbb
ja
imul
push
jmp
popf
into
mov
mov
mov
and
je
cmp
je
inc
aaa
rcrl
call
loope
mov
cmp
in
xor
paddusw
sub
testl
push
and
fcompl
call
xchg
and
add
pop
xchg
mov
sub
std
jnp
or
outsl
jne
pop
decl
out
cs
sbb
nop
add
pop
repz
arpl
pop
mov
adc
pop
xchg
pop
sbb
js
pop
push
mov
jo
pop
outsl
rol
push
mov
test
ret
pop
dec
dec
pop
xorl
push
push
imul
jnp
cmp
jl
jle
sbb
jne
mov
sub
mov
aaa
jge
mov
aaa
inc
mov
inc
cmp
push
push
loop
sub
fwait
sti
mov
and
push
inc
inc
pop
add
xor
jmp
sbb
inc
cmpb
inc
cmp
hlt
xchg
cld
mov
testb
xor
inc
or
add
dec
ja
callw
or
push
jmp
push
add
pusha
data16
enter
mov
scas
cmp
je
or
inc
mov
pop
jge
sub
mov
and
lock
push
mov
ffree
jmp
mov
sbb
sete
mov
or
or
jmp
rorl
push
inc
adc
push
pop
inc
sbb
jo
cwtl
sub
in
stc
shlb
imul
je
into
je
push
sbb
push
aas
aaa
loopne
pusha
addl
mov
popa
pop
sbb
push
test
insb
add
cmpsb
push
clc
popa
mov
sbb
sub
mov
sahf
sbb
sbb
stos
xorb
dec
ljmp
inc
in
and
add
push
jmp
lods
arpl
dec
ret
cmp
cmp
out
imul
xor
sub
jecxz
into
insb
loope
clc
sbb
insb
fnstsw
mov
mov
je
sub
js
push
fs
inc
mov
test
dec
sub
xor
xchg
xchg
dec
push
out
cmp
or
adc
or
cmp
fiadds
lock
movl
hlt
adc
aad
popf
inc
imul
or
lock
jno
push
cmc
mov
push
pop
inc
sub
in
inc
cwtl
shll
gs
jne
mov
sub
mov
and
iret
fstpl
fildl
and
mov
pop
and
ret
popf
lcall
jne
push
jmp
push
xor
cli
sub
lea
stc
lock
jge
mov
neg
xor
lea
andb
imul
shll
stos
xchg
jl
jmp
mov
orl
inc
mov
cmp
mov
int
mov
add
push
xchg
iret
push
mov
or
add
inc
push
setb
aaa
mov
or
cmp
decl
test
add
xor
push
pop
imul
xchg
ficompl
test
sub
push
int
push
mov
repz
rclb
mov
unpckhps
jne
add
aaa
inc
or
or
jl
pushl
xor
xor
lock
int3
or
hlt
push
cmp
or
mov
rclb
sbb
mov
mov
sbb
pop
rdpmc
pop
add
into
mov
mov
ret
cmp
push
mov
push
xor
sbb
jo
dec
cmp
sti
mov
jbe
or
mov
dec
lods
icebp
jl
add
xor
call
cli
push
ret
adc
ret
fs
jge
pop
push
mov
cltd
mov
jg
cmpl
push
das
push
or
push
jmp
mov
lods
mov
adc
mov
pop
pop
ret
icebp
dec
int3
int3
push
inc
xor
pop
inc
xor
mov
hlt
or
inc
fs
stc
testl
cmp
cltd
push
mov
push
jle
jnp
andb
jbe
je
push
push
mov
imul
pop
pop
pop
orb
xor
jbe
push
lret
dec
movsb
push
lret
add
in
pop
mov
or
mov
sbb
pusha
xor
xor
jmp
pop
or
adc
mov
jmp
mov
sub
jne
adc
mov
push
pop
sbb
add
push
nop
ret
mov
add
cmpl
cmp
in
and
jl
mov
mov
sub
movsb
or
xchg
ret
mov
or
iret
mov
lcall
xor
xchg
xor
sbb
fldcw
add
cltd
stc
loopne
bound
out
dec
roll
cmp
add
push
sub
loopne
inc
rcrl
or
push
sub
mov
xchg
cmp
sub
push
fcos
insl
add
sbb
add
push
ret
ljmp
and
cmpsb
sbb
inc
lods
pushl
nop
popa
arpl
and
ja
out
sub
jmp
lea
adc
adc
push
push
aas
dec
cwtl
jp
or
stc
popf
cmp
mov
cwtl
sbb
push
add
inc
adc
jge
pop
lock
push
xchg
sub
adcl
mov
mov
orb
fsts
out
adc
sub
fisttpll
lods
or
cmp
adc
movb
mov
enter
sub
int3
push
pinsrw
clc
xchg
jo
and
sbb
movsb
jbe
or
std
sub
jl
adc
sti
mov
imul
mov
outsb
pop
push
pop
push
jne
or
mov
pop
lock
lea
out
push
pusha
mov
leave
or
and
cmpsl
pop
pushf
xor
inc
pop
push
cwtl
cmp
push
push
aaa
inc
out
ljmp
sbb
cmp
test
loopne
add
rolb
pop
aas
lods
mov
repnz
cmpsl
xchg
orl
scas
mov
or
shll
sbb
ja
divb
add
adc
xchg
push
jp
add
add
cmp
sub
sbb
dec
xor
mov
hlt
pop
pop
mov
push
cmp
jge
and
and
jo
push
or
test
push
shlb
xor
repnz
inc
or
mov
and
mov
pop
ja
sbb
in
repnz
xchg
inc
test
or
add
jmp
js
pop
mov
ret
mov
lds
lods
cmp
sahf
dec
rclb
push
js
fldl
outsw
lds
jg
ja
push
pop
xor
test
jmp
jb
js
fcoml
pop
insl
movsl
add
cmp
push
mov
insb
or
push
pop
mov
cmp
xor
adcl
nop
pop
add
sbb
insl
jge
pop
push
cmp
popa
lret
pop
retw
sbb
add
aaa
add
loope
push
inc
xchg
rorb
push
add
clc
push
jl
popa
mov
inc
sub
push
insl
mov
pop
jne
push
jb
cmp
or
cmp
xchg
test
jnp
or
cwtl
jmp
add
push
add
jb
dec
cmp
and
xor
adc
shld
shl
pop
rcr
and
shl
mov
jo
xor
ret
push
je
rcll
xchg
test
add
mov
xlat
sarl
pop
dec
mov
inc
out
daa
mov
adc
decl
pop
xchg
sbb
and
adc
jle
mov
mov
incl
and
sub
mov
loope
clc
test
sbb
mov
mov
or
push
test
lock
int
add
sbb
aaa
and
movl
or
mov
mov
push
and
inc
xchg
pop
sbb
lock
sbb
andl
mov
je
test
arpl
lea
mov
or
or
mov
inc
or
sub
rcl
cmp
mov
scas
rcrb
or
sub
int3
push
ljmpw
mov
in
nop
xchg
lea
dec
test
pop
xchg
cmc
adc
sub
dec
mov
sub
aam
push
mov
or
mov
and
inc
jmp
js
les
xor
addl
or
popf
adc
jmp
shl
push
callw
or
add
jae
jmp
push
loope
cmpl
ss
inc
rolb
das
dec
cld
jle
loope
or
push
jmp
or
jmp
mov
mov
fnstsw
dec
add
lods
int
mov
dec
or
push
adc
push
dec
int3
xor
and
mov
stos
sub
repz
dec
jmp
push
push
orl
lods
add
add
mov
aaa
testb
add
roll
mov
add
jge
shll
pop
jge
pop
insl
cmp
loope
mov
push
adc
lods
enter
aas
mov
adc
jb
jae
push
loopne
add
add
adc
jae
or
add
mov
imul
push
xchg
mov
mov
lcall
or
and
adc
loopne
or
fcmovbe
push
fdiv
jae
inc
push
jb
push
jne
jne
mov
cmp
je
nop
push
je
mov
jne
test
push
jne
add
imul
add
add
lods
fstl
aas
pusha
or
js
jne
add
mov
icebp
lods
daa
ljmp
xchg
or
fnop
movsl
push
mov
mov
andb
in
push
mov
adc
test
sub
movsl
das
jne
add
incl
mov
pop
and
sub
je
ljmp
sbb
jnp
dec
and
sbb
leave
jmp
andb
adc
lea
jmp
add
gs
lock
mov
push
push
jae
add
sbb
sbb
flds
sbb
aas
jmp
mov
xor
je
movsb
mov
icebp
cmp
je
jmp
cmp
add
dec
push
sbb
clc
aaa
adc
fiaddl
cs
jmp
push
add
xor
push
movsb
push
pop
gs
or
cmpsl
dec
add
ljmp
mov
inc
shl
and
outsb
inc
sbb
push
or
testb
or
rorl
sub
sub
test
push
pop
pop
pusha
push
shrb
loope
das
iret
aam
fcom
cmp
dec
sbb
ds
aaa
shrb
hlt
sub
adc
inc
sub
jne
adc
cwtl
or
ljmp
daa
pop
or
lret
or
jg
loop
out
sbb
mov
or
pop
orl
or
or
popf
mov
sarl
add
shll
je
mov
or
lock
adcl
andl
outsb
add
mov
jmp
lock
loop
sbb
std
sub
pop
clc
adc
pop
sbbl
push
inc
popf
xor
loopne
repz
loopnew
je
leave
dec
xor
xchg
add
xchg
xor
adc
push
dec
cld
xchg
fcmovbe
and
and
lock
lock
ret
xchg
fldcw
mov
sbb
idiv
push
cmpb
fimuls
rclb
push
pop
lahf
push
je
mov
sti
jae
or
lods
imul
enter
aas
mov
push
mov
mov
icebp
inc
mov
jecxz
pop
dec
xor
or
cmp
jne
or
rorl
outsl
or
js
imul
adc
test
pop
mov
jecxz
shlb
hlt
mov
pop
ficoml
movsb
adc
add
add
bound
mov
inc
xchg
mov
bswap
mov
into
sar
xor
jmp
or
or
lcall
dec
or
xor
or
or
pop
sahf
pop
xchg
sbb
sbb
push
push
movsb
push
ret
mov
pop
sub
lret
call
loop
rolb
sbb
inc
or
add
insl
mov
jnp
add
sbb
add
jl
cmp
xor
xor
inc
xchg
lock
cltd
adc
iret
mov
pop
pop
push
mov
pop
mov
dec
js
ss
outsl
inc
dec
mov
sub
aas
inc
out
and
sbb
cmp
mov
call
pop
sahf
inc
bound
ret
pop
cltd
addr16
faddl
fimull
das
sti
and
repnz
cmc
loop
int
xchg
imul
orb
push
aam
lods
pop
inc
pop
mov
push
dec
jmp
xchg
inc
and
dec
pop
sub
sub
enter
cmp
mov
stos
pop
jg
dec
or
and
mov
adc
or
mov
cwtl
leave
repz
stc
shll
dec
inc
in
js
mov
xchg
cltd
push
rolb
rorb
xchg
das
or
into
mov
call
dec
insl
sbb
shrb
cmovns
fcoml
std
pop
mov
push
pop
inc
jecxz
setno
add
orb
pop
xor
mov
loop,pt
dec
add
cmp
xchg
dec
or
jo
test
push
push
or
das
lock
addb
rcr
mov
cmp
aam
ret
hlt
pop
add
sbb
mov
pop
out
fcomip
out
add
sub
push
ja
push
push
push
and
mov
cmpsl
pop
add
or
push
imul
cmp
jg
sub
pusha
mov
jmp
push
inc
sub
scas
pop
aam
inc
xor
negb
dec
sti
xchg
idivb
pop
jl
movsl
popa
or
dec
testl
add
inc
push
and
mov
idivl
add
inc
outsl
and
cmpb
dec
mov
daa
xor
hlt
ret
imul
or
insl
je
loop
inc
fldcw
hlt
jo
mov
or
jne
xor
test
pop
xor
mov
call
enter
push
add
mov
test
jns
je
insl
es
and
pop
mov
das
pushl
cmpsl
jle
movb
cmp
mov
jle
ja
fstpt
inc
addb
pop
mov
inc
test
test
insb
cmp
test
mov
cmp
mov
jg
cmc
sub
xor
incl
jmp
push
rcll
sbb
mov
mov
outsb
xchg
pop
xor
xchg
into
and
jge
adc
cld
movsl
decl
lcall
inc
push
sbb
mov
or
mov
push
sub
sub
ss
out
push
cmpsw
push
mov
cmp
popf
and
iret
inc
sub
rcll
flds
inc
setl
sbbl
imul
in
mov
jno
or
inc
adc
rorl
mov
mov
add
and
dec
outsl
adc
enter
dec
and
xor
or
incl
adc
leave
mov
shr
or
lea
mov
fisttps
lret
jmp
and
iret
cltd
dec
or
cmp
and
pop
or
incl
lahf
mov
xor
in
sbb
stos
jnp
jno
sub
push
adc
dec
pop
pop
add
cmc
in
sub
imul
xchg
pusha
aas
outsl
adc
and
or
cmp
mov
fistpll
imul
add
daa
inc
ljmp
mov
je
test
xchg
mov
mov
mov
or
fimull
pop
dec
push
push
orb
push
fidivl
sahf
and
pop
je
cmp
ja
aaa
leave
mov
xchg
or
lret
mov
test
add
push
xchg
jno
or
pop
inc
fwait
inc
es
arpl
pop
mov
jno
or
les
add
mov
dec
in
sub
sbb
or
adc
les
rcll
jne
aas
dec
add
inc
pop
push
cltd
mov
aad
leave
lods
mov
dec
decb
and
ret
jl
cmp
jg
xchg
out
sub
popa
cmp
inc
pop
xchg
fcmovu
fstps
dec
add
pop
push
rep
or
nop
and
arpl
pusha
pop
or
popf
leave
add
add
and
push
repnz
cs
xlat
add
push
outsl
pusha
repnz
cmc
es
mov
push
jg
cwtl
dec
iret
mov
cmp
mov
add
sbb
fmuls
cmp
mov
hlt
push
repnz
cmpsl
xor
sbb
in
xchg
xor
mulb
out
ljmp
sub
sahf
movsb
insb
dec
push
adc
shl
cli
and
xchg
push
and
setle
sahf
inc
fidivrs
lcall
inc
push
popf
mov
inc
cmp
pusha
inc
push
jmp
push
add
ds
sti
add
add
clc
roll
mov
sbb
sarb
incl
push
cmp
jl
jg
bnd
clc
daa
enter
ret
adc
jg
inc
push
out
jle
push
xchg
dec
push
mov
xchg
push
stc
icebp
jns
adc
xor
xlat
pusha
popf
rol
fiadds
pushf
sbb
push
pop
lcall
sbb
inc
jae
sbb
aad
andl
mov
sub
movsb
inc
sarl
imul
push
sar
and
jg
stc
push
add
lea
notl
inc
sbb
push
sbb
push
pop
sub
add
and
stc
jmp
sbb
jle
or
jno
jne
push
pop
mov
or
fwait
test
into
jle
sub
jmp
adc
or
adc
and
enter
ret
push
xor
xchg
sub
sub
fsincos
lods
xchg
repz
mov
mov
add
mov
add
adc
imul
test
mov
and
rolb
out
mov
and
movzbl
les
shrd
push
jg
lods
les
andl
dec
or
js
add
jp
fdivrs
stc
je
jo
jae
arpl
dec
push
mull
hlt
push
pop
mov
iret
into
arpl
dec
stos
sub
mov
or
mov
loop
and
mov
and
arpl
pop
lcall
stos
cmp
push
popa
hlt
js
ret
inc
dec
loopne
mov
add
popa
mov
ret
std
push
inc
js
in
dec
cs
xchg
cmp
leave
inc
adc
adc
insl
inc
aas
push
push
das
enter
jne
sbb
sub
jmp
aad
or
jmp
pusha
cmc
mov
aam
mov
pop
sub
dec
out
imul
pop
cli
shlb
pop
add
cmp
pop
mov
jl
inc
pushl
pop
sbb
jmp
sbb
and
add
mov
fiadds
hlt
and
sbb
xlat
adc
inc
testb
imul
lret
or
pusha
pop
inc
sahf
jmp
sub
inc
pop
sub
push
or
lock
add
jnp
mov
sbb
or
cmp
jge
push
add
and
lahf
jne
or
test
jp
int
or
dec
inc
lcall
testb
or
jne
ror
dec
adc
ficomps
testb
lods
mov
mov
jp
lahf
or
andl
and
mov
cmpsl
jnp
lea
in
add
orb
jae
push
push
xchg
jl
rolb
inc
rclb
push
outsb
addb
outsl
xor
add
mov
add
das
or
xchg
bound
mov
mov
mov
add
into
add
jne
aas
shr
or
mov
call
mov
xlat
mov
shr
shl
or
pop
arpl
push
aas
pop
repnz
mov
or
mov
or
out
shr
or
push
add
and
mov
adc
xchg
icebp
imul
push
lret
lahf
lods
scas
test
adc
push
adc
adcb
lea
movsl
movsl
push
in
and
mov
or
push
ja
mov
xchg
loopne
gs
sub
test
mov
inc
inc
imul
add
in
mov
pop
cmp
add
inc
cld
pop
xor
mov
out
adc
loope
js
or
mov
iret
cli
sub
jae
add
sarl
lret
bsr
insl
cmp
icebp
jmp
jecxz
dec
sub
pop
data16
inc
stos
pop
mov
movsb
lds
jge
clc
ffreep
pop
push
gs
lock
aam
jle
rcr
mov
mov
push
or
pop
pop
and
or
cld
inc
jmp
push
pop
loope
or
xchg
icebp
mov
ja
xor
jg
sti
xor
cmp
popa
sbb
dec
and
jnp
cmp
add
cmp
push
jmp
in
add
add
jbe
jp
jl
push
jo
jecxz
pop
jmp
rcr
add
pop
adc
inc
fwait
jl
mov
fbstp
xor
sub
gs
fsts
mov
in
fdecstp
xchg
jnp
jg
sti
dec
push
btc
cltd
orl
pop
add
pop
push
lcall
shlb
adc
xchg
fwait
std
inc
sub
xor
jmp
sbb
add
add
ds
sbb
or
sub
adc
mov
or
jbe
mov
fcoml
mov
jb
fwait
test
sbb
add
xor
outsb
in
lock
insb
jnp
and
into
inc
mov
rol
dec
pop
mov
dec
push
dec
adc
data16
sbb
fwait
rorb
jmp
mov
cwtl
add
pop
mov
test
das
ret
aas
pop
inc
push
or
pop
dec
adc
in
fstps
shr
sar
je
mov
mov
fdivs
bndstx
pop
pop
pop
dec
pop
mov
movsb
decl
stc
and
mov
push
shlb
sbb
std
jg
xorb
push
adc
jg
or
mov
jne
mov
outsl
rorb
push
mov
jnp
xor
call
rclb
sbb
cld
jbe
cmpb
test
std
add
mov
test
adc
movsl
jmp
add
xor
or
mov
cltd
push
in
sahf
and
jge
add
repnz
out
inc
adc
sub
sbb
sub
sbb
cmpb
movsl
sub
sub
popa
add
aam
xor
mov
and
sub
pop
cmp
dec
adc
pop
xchg
divl
rclb
scas
inc
data16
xchg
pusha
arpl
nop
pop
or
sbb
adc
cmpl
pop
mov
mov
sbb
xchg
xchg
inc
or
adc
into
sbb
sbb
stc
ss
mov
jo
cmpsb
lock
push
mov
add
inc
dec
or
push
mov
mov
cld
push
outsl
test
push
movb
in
cmpsb
imul
cmpsb
imul
aas
jmp
pusha
mov
add
sahf
or
loopew
sbb
and
cmpb
fbstp
pop
add
add
fadds
comiss
mov
outsl
jne
shlb
leave
maskmovq
jb
adc
lods
nop
jae
inc
or
pop
sub
adc
pop
jnp
inc
jne
push
and
sbb
cmpb
mov
sti
or
js
mov
aas
jo
loope
mov
iret
inc
jmp
dec
sub
or
clc
decl
aas
outsl
or
mov
dec
mov
lea
add
gs
and
mov
pop
and
jb
inc
xor
mov
sbb
xor
fs
and
push
add
test
cmp
insl
lods
aas
clc
mov
pop
or
sub
dec
or
jbe
add
xchg
sbb
jne
pop
mov
hlt
pop
neg
xchg
xor
or
inc
mov
mov
dec
cmp
jle
mov
out
and
addr16
xchg
ficompl
add
fidivl
inc
sti
mov
jg
jno
mov
out
mov
jne
popf
push
test
cmp
dec
cmp
add
xor
mov
stos
inc
lcallw
std
pop
cmp
add
ret
sub
mov
add
ret
mov
jns
xor
jecxz
sar
add
andb
jmp
inc
sbb
add
sbb
add
sbb
push
je
mov
mov
jecxz
mov
test
fadd
addl
or
add
les
push
sahf
fnstcw
cmp
pop
and
movswl
push
les
add
push
jg
lea
pop
test
rcrl
push
pusha
outsb
mov
sahf
add
lock
shll
add
and
jmp
andl
lods
jne
or
xchg
mov
or
pop
xor
rolb
and
jbe
pop
sub
pop
clc
adc
mov
push
insb
ljmp
inc
leave
stc
mov
cmp
clc
and
and
and
lea
aaa
or
push
inc
sbb
adc
lods
cli
std
mov
aas
ja
scas
inc
push
cmp
mov
loop
dec
test
aam
cmc
sub
jne
mov
adc
mov
or
outsl
push
cmp
push
cmp
sbb
iret
xor
push
andb
adc
add
in
and
cs
sbb
sub
imul
sbb
hlt
jne
les
inc
dec
rcr
cld
adc
and
inc
decb
subl
add
push
aas
loope
jne
and
aad
or
jg
add
dec
sub
orb
pop
or
mov
into
cmp
or
sub
subb
in
and
stos
fdivrs
mov
call
xorl
dec
in
mov
sti
and
sbb
jnp
scas
dec
add
sbb
inc
out
aad
mov
add
loop
sub
push
or
mov
pusha
iret
out
jmp
test
cmpsb
ficoms
fidivrs
das
pop
push
dec
jae
fstp
or
lret
sti
jo
add
pcmpeqw
or
push
and
ja
sbb
fistps
lcall
xchg
add
lods
cld
xchg
orb
icebp
jo
xlat
insb
mov
aaa
jecxz
popa
jmp
cmp
je
jge
mov
inc
pop
inc
fldcw
adc
inc
dec
cmpsl
mov
addl
pop
jmp
push
daa
push
fwait
dec
cmpl
inc
adc
loopne
push
shl
adc
pop
or
jl
mov
jbe
xchg
in
pop
ret
inc
pop
inc
in
sbb
call
mov
test
sbb
pop
insb
xchg
test
inc
loop
push
sbb
repz
mov
or
pushf
cld
daa
out
je
das
cmp
imul
xchg
stos
mov
insb
stos
push
jne
ja
xchg
or
stos
pop
lcall
inc
cld
sub
mov
les
pop
or
ja
ds
cmp
cmp
add
rolb
push
addl
rclb
pop
mov
inc
sbb
movsb
adc
sbb
lods
dec
negl
into
sbb
insl
test
stos
sub
stos
xor
pop
mov
or
movsb
movsb
xor
xchg
lods
lods
pop
xchg
jle
loop
sarl
idivl
sbb
push
pop
push
xchg
mov
add
lret
outsl
sbb
lret
inc
jmp
ret
js
jmp
or
push
mov
jbe
inc
jo
push
jmp
jp
sub
or
movsl
popf
xchg
sbb
mov
subb
lea
loop
test
push
add
or
xor
jb
jne
adc
iret
sar
mov
imul
and
ljmp
addr16
push
mov
xor
insl
ret
jecxz
out
repnz
and
pop
push
popa
mov
outsl
mov
andl
xchg
mov
mov
sub
bound
jbe
or
mov
aaa
fisttpll
into
je
push
mov
add
negl
dec
test
push
je
mov
mov
ret
sbb
mov
push
push
pop
pop
mov
mov
aad
sbbl
sub
insb
dec
popl
jno
add
je
mov
addr16
xor
mov
dec
ds
sub
in
pop
jl
cmpl
int3
incl
mov
cmp
sti
add
or
inc
add
mov
dec
jmp
lahf
xchg
ds
jne
out
fidivrs
mov
jle
xor
xor
jp
cmp
icebp
lock
fdivrp
mov
jae
loope
mov
xchg
pushf
add
jl
scas
or
andl
pop
xor
mov
inc
adc
dec
pop
mov
lds
in
cs
pop
sub
jmp
pusha
lea
arpl
fistpl
fcomi
shll
add
xor
pop
add
push
insb
xchg
outsl
xchg
push
pop
or
sub
or
mov
cmp
push
mov
sbb
add
pusha
dec
push
dec
ret
pop
cmc
jne
cmp
gs
shl
ret
xor
sub
pusha
or
lret
insb
stos
jne
scas
mov
into
movb
mov
or
hlt
inc
sub
mov
add
pop
test
ret
mov
imul
xchg
orps
xchg
lds
mov
add
ret
jnp
shrd
adc
or
sarb
or
jmp
mov
pop
push
jl
or
dec
inc
mov
sub
ret
cmp
sbb
adc
adc
mov
adc
scas
push
movsl
mov
mov
inc
inc
and
jmp
push
pop
adc
cmpsb
push
add
jo
push
mov
jg
pop
pop
push
cs
cmp
and
sub
cmp
sbb
and
add
add
xchg
sbb
test
jnp
cmpsw
add
daa
push
gs
fcomp
lret
movb
xchg
lock
js
ret
je
jae
decl
add
add
pushl
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivr
jns
jmp
rclb
mov
sub
mov
sbb
ljmp
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
jmp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
incl
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
fdivrp
call
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
lcall
and
or
adc
stos
sbb
data16
inc
fdivl
jno
incl
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
call
xchg
sbb
push
sub
insb
jmp
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
decl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
loope
rorl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fists
movsb
sti
hlt
shrl
imul
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
pop
mov
lcall
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
ljmp
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
push
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
call
mov
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
decl
mov
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
ljmp
es
lds
or
sub
mov
cmpsl
call
ret
shlb
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
call
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
jmp
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
mov
inc
mov
out
sti
jo
lret
sar
incl
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
call
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
faddl
lcall
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
xchg
sbb
mov
lret
mov
cmpsb
mov
sarb
ljmp
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
out
mov
sbb
add
sub
add
sti
ret
add
push
push
add
outsb
fistpll
mov
adc
arpl
sub
idiv
cmp
pop
or
aaa
xor
push
push
pop
push
and
add
pusha
push
mov
js
pop
sub
add
imul
add
sub
outsb
add
insb
add
icebp
sub
insb
insb
ljmp
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
cs
push
mov
inc
push
push
outsb
jg
sarb
inc
push
cmp
inc
inc
dec
jae
jb
arpl
jae
jb
gs
je
sti
mov
sbb
je
dec
inc
push
dec
xorl
and
xor
dec
pop
lahf
or
push
jg
sar
outsl
sbb
jb
test
and
mov
xchg
dec
or
push
push
and
std
cmp
push
dec
dec
inc
add
inc
and
push
xor
cmp
sub
insb
je
sbb
outsb
imul
mov
aaa
outsb
outsl
je
or
push
or
mov
imulb
jno
enter
sbb
ss
cmp
leave
je
xor
imul
inc
addr16
arpl
arpl
test
xor
push
sbb
fisubs
mov
les
xor
out
outsl
jo
mov
xor
fs
push
cmp
imull
dec
arpl
inc
repnz
inc
aaa
insl
lea
loope
jmp
jb
fs
arpl
sbb
imul
pop
add
add
addr16
lock
jb
insl
inc
xchg
insl
insl
pop
cmp
movsl
fdivs
cmp
test
out
push
cmp
addr16
js
notb
mov
xor
faddl
lret
faddp
outsb
addr16
and
loope
mov
decl
shll
push
sti
adc
lds
push
inc
sub
and
dec
imul
fidivrs
or
inc
sbb
and
adcb
test
add
adcl
rorl
fnstenv
clts
jo
push
incl
dec
mov
add
inc
jb
push
popa
jnp
mov
bound
inc
mov
sub
or
dec
add
gs
pop
push
sub
sub
jbe
aaa
push
push
pop
inc
gs
pop
stos
mov
jbe
std
jne
sbb
pop
push
lret
fs
scas
mov
std
stos
insb
popa
addr16
outsl
js
xor
push
dec
inc
dec
add
dec
dec
inc
scas
mov
xchg
add
dec
mov
cs
pop
dec
mov
sbb
push
decb
mov
call
add
inc
sti
daa
in
or
outsb
gs
imul
dec
dec
inc
add
addr16
popa
jae
dec
push
push
adc
scas
in
mov
fmul
mov
filds
pop
inc
pop
popa
xor
in
shrb
in
lock
fsts
ja
and
repz
xor
dec
fidivl
xor
add
pop
mov
xor
add
ja
shrl
xor
xor
cld
enter
jae
insb
dec
push
push
push
dec
sub
xor
and
enter
inc
inc
push
push
int3
mov
sub
ja
incb
jae
dec
je
gs
dec
aam
jle
fwait
inc
pop
and
cld
adc
clc
add
outsb
insb
imul
and
scas
ja
inc
shll
and
lds
loope
stc
push
mov
enter
adc
mov
clc
jg
pop
add
push
outsl
je
insb
cmp
and
sbb
jae
es
lcall
pop
add
pop
add
js
insb
outsl
jbe
lock
aad
arpl
arpl
andl
popa
sbb
shrl
lret
inc
jne
jb
push
stc
and
cmp
ss
xor
js
sbb
popa
imul
inc
jae
aam
mov
xorl
mov
sbb
aas
pop
outsb
dec
lock
add
push
dec
je
xchg
mov
mov
push
gs
gs
fldt
fdivs
je
loope
sbb
pop
jmp
cmp
pop
pop
outsb
int3
mov
fsubl
into
out
std
mov
jae
ret
data16
push
mov
lea
xchg
jg
adc
loope
ja
imul
mov
aam
outsl
xlat
sub
mov
jg
jne
sub
mov
xchg
or
insb
dec
cmc
addl
inc
insb
pop
inc
dec
dec
xchg
rcrb
mov
cmp
inc
test
dec
mov
mov
xor
xor
adc
and
rorl
pop
pop
cli
js
xor
mov
shld
ret
jo
bound
pop
fs
jae
loope
sbb
xor
cmp
outsl
mov
inc
das
dec
sub
dec
sub
pop
and
inc
loope
fisubs
fs
or
aaa
cmp
jns
xchg
adc
inc
insl
inc
mov
xor
loope
push
dec
mov
or
push
jo
ret
inc
js
sbb
rol
js
jne
add
xlat
mov
pop
gs
xor
sub
xorl
cs
lods
test
adc
dec
and
pop
insl
sbb
and
and
mov
push
inc
pop
push
je
push
sub
loop
adc
pop
push
jae
pop
movl
jb
cmp
or
dec
and
dec
jae
gs
and
adcb
add
loope
insb
outsb
daa
mov
call
dec
outsb
jbe
xchg
xchg
adc
ljmp
inc
fs
insl
movb
aas
fnsave
sub
out
jae
insl
add
inc
pop
pop
popa
imul
roll
aaa
je
fld
stos
or
xor
popa
jbe
pop
adc
jl
ja
or
je
mov
sbb
sbb
xchg
jns
inc
cmp
xor
or
mov
loopne
fldt
dec
inc
sub
scas
sarl
mov
push
orl
insb
push
pop
aaa
cld
adc
add
and
xchg
and
rclb
add
add
mov
leave
adc
sti
sub
sub
mov
sbb
lahf
call
scas
and
add
std
call
lret
adc
or
mov
sbb
stos
jns
fdiv
iret
call
and
bound
cltd
ds
repz
jo
jns
xor
inc
or
push
push
dec
test
xor
xor
pop
jo
inc
data16
clc
loope
push
rcll
dec
push
dec
dec
sar
adcb
pop
and
adc
cmp
flds
push
divl
and
lea
pop
mov
pushf
xor
movsl
pop
push
inc
dec
dec
inc
push
pop
and
gs
adc
xor
inc
push
push
xor
add
jg
push
dec
push
push
mov
out
jne
and
adc
inc
cwtl
fstpl
push
ds
sub
pop
pop
sub
sub
or
scas
add
jo
adc
dec
dec
push
dec
or
and
cmc
shlb
lahf
outsl
and
inc
stos
fwait
notb
push
push
outsl
add
jns
xor
pop
dec
pop
dec
in
sbb
inc
inc
outsb
push
pop
push
inc
mov
aaa
and
das
and
imul
loope
loopne
push
inc
add
mov
and
mov
push
mov
mov
in
xor
dec
jnp
mov
das
xor
out
add
mov
push
in
sbbb
xor
xor
lcall
rorl
mov
mov
scas
xor
push
andps
lahf
pop
js
rclb
push
dec
push
dec
sub
icebp
inc
inc
dec
jne
inc
mov
jo
mov
pop
sbb
pop
cmp
ja
jo
inc
ss
sbbl
push
jp
sbb
jmp
pop
xor
add
icebp
xor
fs
and
shll
xchg
pop
inc
jl
mov
pop
inc
push
outsl
arpl
sub
cmp
addr16
add
je
mov
pop
and
imul
arpl
push
dec
inc
push
xchg
pop
dec
out
data16
loope
rcll
sub
push
mov
push
xor
or
adc
xor
das
inc
call
fs
daa
push
roll
sbb
sub
dec
andb
les
and
xor
insb
push
movsl
push
xor
loop
pop
inc
cmp
jne
cmp
cmp
push
outsl
insb
int3
popa
arpl
pop
inc
aas
sub
mov
cs
jne
ds
cmp
rolb
outsl
adc
insl
pop
fs
pop
pop
es
lods
pop
aad
lds
lea
xchg
scas
nop
sti
push
shll
gs
outsl
bound
sub
mov
pop
rclb
aaa
push
push
scas
inc
outsb
pop
dec
arpl
inc
jecxz
cmp
mov
jae
repz
jno
icebp
cmp
imul
dec
outsl
jp
insb
popa
das
xor
fildll
cwtl
xor
lret
outsb
or
int3
jae
xchg
daa
push
and
jbe
or
sbb
push
jb
daa
push
mov
push
shrl
dec
gs
insl
in
shlb
data16
ja
call
xchg
jle
mov
jnp
js
outsb
ja
lock
std
arpl
outsl
addr16
add
ret
push
loopne
fdivrl
xchg
iret
bound
lea
cmp
push
inc
rcll
outsl
jo
popa
push
loop
mov
push
jmp
in
cmp
insb
repz
push
jbe
loopne
mov
mov
push
inc
aaa
inc
jae
sbb
pand
ja
imul
outsb
push
push
leave
mov
pop
nop
pop
inc
pop
push
lock
jecxz
cmp
or
fiaddl
or
push
inc
divb
popf
mov
negb
sbb
shll
dec
jae
push
inc
dec
arpl
adc
outsw
push
push
movsl
inc
pop
dec
jge
mov
cmpsb
ja
xor
xchg
dec
bound
cmp
inc
push
inc
imul
xorb
xchg
inc
jne
jb
daa
mov
addl
out
mov
in
push
pop
mov
add
lds
dec
inc
fs
cmp
pop
inc
push
dec
xchg
jo
cmpsb
les
divb
stc
jns
aad
sub
scas
push
sarl
jae
lea
pop
xor
sub
xlat
sbb
outsl
decb
or
sbb
sahf
sbb
pop
inc
dec
fwait
add
mov
push
jecxz
imul
ja
das
testb
lods
and
jne
jo
lahf
fmull
flds
arpl
inc
fistl
fcoml
push
dec
gs
inc
arpl
loop
je
push
jns
data16
mov
and
andb
add
cmp
sbb
fs
les
xor
scas
inc
imul
mov
js
pop
notb
jle
push
cmpsl
xor
fidivrs
popa
jae
mov
push
xchg
add
or
imul
inc
lahf
xor
inc
push
jae
jns
dec
dec
mov
mov
mov
scas
xor
into
jmp
pushl
fwait
or
scas
jb
inc
mov
ret
xchg
pop
jae
jo
sub
fcompl
pop
in
ret
aaa
out
loope
data16
push
pop
push
jo
ss
setns
sub
mov
adc
movd
loop
outsl
pop
or
jmp
jae
sub
mov
inc
jns
or
loopne
xor
mov
push
sbbb
xchg
es
adcl
adc
push
dec
dec
jns
and
jmp
pop
cmp
fdivs
pop
push
scas
gs
popa
cmpb
xlat
adc
xor
sub
or
rcll
mov
cmp
push
das
xor
cmpsl
xor
push
leave
ja
pushl
xor
xor
cmc
add
inc
mov
gs
icebp
shrb
xlat
scas
js
adc
jne
mov
test
jae
adc
das
arpl
pop
mov
sub
js
jecxz
and
or
lea
adc
imul
imul
adc
and
pop
dec
jae
popa
insb
andb
adc
bound
cmp
out
push
add
adc
sbb
sbb
cld
fdiv
fsubrs
cmpsb
cmp
in
or
enter
adc
loope
ja
pop
or
stos
scas
cmpsb
popa
bound
pop
sbb
push
cmp
and
pop
ja
fsts
pop
push
cs
pop
movd
mov
cmp
outsb
sub
pop
sub
adc
nop
mov
mov
dec
test
push
outsl
daa
jns
pop
int3
lods
daa
inc
lahf
aas
and
xchg
outsb
imul
xchg
cs
mov
push
loop
inc
subl
hlt
movsb
sub
mov
jae
add
outsb
mov
nop
add
inc
gs
dec
andb
sub
outsb
push
sbb
daa
pop
fldcw
jae
inc
cs
jne
xchg
mov
shlb
test
arpl
mov
outsl
dec
and
add
mov
mov
or
mov
or
ja
aaa
je
cpuid
mov
push
dec
lret
andl
pop
fs
bound
pop
out
mov
cli
adc
nop
jbe
mov
divl
and
mov
addl
sbb
out
xlat
push
shll
bound
inc
test
mov
test
popa
insb
stos
fildl
mov
lea
rcrb
jecxz
inc
fsubl
jne
xor
aaa
jo
and
inc
xor
jbe
fistpl
and
sub
loop
daa
sbb
insb
xor
arpl
and
add
xchg
pusha
ret
or
arpl
arpl
cs
push
sub
into
loope
and
or
push
pop
mov
sub
mov
imul
ljmp
call
push
cmp
mov
addr16
movsb
cmp
repnz
fsubl
xor
xor
jo
add
add
dec
pop
sbb
adc
das
or
loope
pop
push
dec
push
jns
cmpsb
rcr
outsb
pop
sbb
sub
adc
ja
lods
lds
sub
pop
dec
add
insl
adc
aas
adc
iret
test
push
lahf
dec
jns
sub
out
xor
and
xor
jne
xor
jmp
pop
pop
cmp
jp
mov
fcoms
cmp
sub
or
xor
and
enter
sub
rolb
jp
fstpl
or
cmpsl
pop
ss
push
lods
scas
inc
aas
loopne
addr16
mov
mov
mov
push
jae
or
jecxz
dec
mov
jb
and
xor
daa
pop
rcrl
arpl
inc
mov
cmpsb
cmp
adc
cli
mov
jo
imul
iret
xor
xor
je
outsb
add
add
xchg
dec
jne
bound
cmp
xorl
xor
inc
add
jb
loop
and
sbb
dec
outsl
loop
jae
orl
inc
insb
movsl
ret
loop
lea
adc
gs
insb
pop
xchg
incb
inc
sub
add
mov
inc
mov
out
mov
sub
shll
mov
daa
rolb
das
andb
mov
hlt
ja
push
xor
xlat
add
nop
loope
mov
ljmp
nop
fisttps
inc
sti
sub
sbb
adc
inc
cmp
pop
adc
mov
aaa
push
mov
lods
push
cmp
add
subl
lds
xor
roll
sbb
fsubrl
pusha
push
push
dec
movsb
outsl
jo
shll
pop
shlb
das
sbb
mov
jae
fistl
inc
pop
inc
add
test
push
sub
cmp
inc
insb
jns
adc
or
jl
insl
stos
mov
shrl
or
pop
and
pushf
leave
sbb
test
jbe
cltd
outsb
dec
shlb
rcrl
fsubrs
leave
repz
mov
jo
jge
in
or
mov
and
cltd
rorb
jb
je
jo
xlat
inc
dec
xchg
and
pushf
xor
add
push
add
dec
sub
subb
push
or
mov
dec
mov
mov
push
xor
scas
add
add
sbb
lret
sbb
pop
and
inc
clc
outsl
mov
cwtl
push
pop
inc
dec
push
push
dec
adcl
cwtl
idivl
pop
cmpsb
leave
bound
push
push
ja
mov
xor
inc
les
xor
push
push
jns
cs
lds
mov
or
testb
pop
xchg
push
xchg
mov
pop
push
adcb
jbe
dec
movl
lods
mov
dec
mov
jne
jmp
inc
cld
popf
popa
mov
cmp
mov
movsl
add
jne
imul
mov
jl
imul
imul
dec
shll
les
or
mov
or
pop
dec
cmp
shll
cld
setp
aam
mov
imul
pusha
push
inc
cmp
fwait
xchg
and
add
push
call
fmul
mov
xorl
insb
pop
dec
shll
sbb
cmpsb
pop
ss
or
imul
imul
imul
jbe
or
push
les
pushf
nop
test
lcall
popf
mov
lcall
or
or
shlb
imul
dec
cmp
and
dec
shrl
add
or
fmul
shlb
mov
dec
shrl
inc
sub
xor
sbb
lock
lcall
mov
cwtl
imul
imul
sub
add
or
int3
shlb
nop
test
xor
shrl
push
inc
xor
xchg
sbb
push
or
push
lcall
mov
cmpsb
imul
inc
lahf
pop
pop
imul
cmpsb
imul
imul
cmpsb
imul
xor
mov
add
dec
shll
inc
xor
dec
shll
sbb
cld
add
imul
cmpsb
sbb
imul
mov
movsb
or
lock
fdivl
lods
mov
rorl
dec
shll
adc
shll
push
in
int3
dec
shll
test
dec
shll
pop
dec
inc
xor
imul
add
pop
shlb
movsb
mov
dec
shll
pop
dec
inc
shll
clc
add
loopne
les
nop
test
pusha
jb
lcall
lock
dec
shll
cwtl
shll
fs
xor
and
cmp
and
lcall
push
imul
cmpsb
imul
lcall
in
std
imul
cmpsb
imul
imul
imul
cmpsb
imul
cmpsb
imul
int
lock
in
enter
xor
mov
xchg
mov
dec
shll
push
dec
cmp
int
dec
shll
or
cli
sahf
push
loopne
dec
shll
enter
shll
pusha
push
dec
shll
sbb
fnstenvs
hlt
stc
call
cmpsb
imul
cmpsb
imul
imul
dec
shrl
in
int3
shll
nop
test
xor
js
pusha
push
inc
cmp
dec
shll
and
clc
testl
loopne
les
xor
js
pusha
push
shll
and
int
dec
or
notl
shll
test
dec
shll
pop
dec
xor
shll
sub
adc
cmpsb
sbb
cmc
in
loopne
lcall
mov
cmpsb
imul
insb
lcall
lock
shll
lods
mov
nop
xorb
xor
rorl
sbb
cmpsb
imul
cmpsb
imul
cmpsb
imul
fisubl
repz
fsubrs
cmpsb
imul
cmpsb
imul
imul
dec
shrl
rol
mov
shll
jo
dec
shll
sbb
lcall
call
cmpsb
imul
jb
xor
xor
jbe
adc
xor
or
jb
xor
jae
imul
push
popw
push
sub
mov
addps
bound
popa
insb
imul
add
adcl
jae
jbe
fiaddl
in
push
iret
xlat
popa
inc
push
andl
inc
sub
dec
push
cs
pop
mov
inc
pop
neg
fimuls
or
push
dec
cmp
negb
das
les
pop
dec
dec
inc
inc
dec
inc
push
dec
insb
dec
jge
push
sbb
jnp
mov
push
dec
push
sbb
push
push
inc
sbb
adc
sbb
push
push
dec
sbb
inc
fbstp
cmc
mov
aaa
push
pop
push
imul
push
adc
inc
push
mov
xor
dec
mov
addr16
inc
inc
push
dec
div
mov
push
inc
push
push
gs
inc
inc
dec
dec
mov
dec
jp
fisubrs
push
daa
outsl
dec
push
dec
sbb
fistl
stos
cmp
push
push
dec
jecxz
add
addr16
push
push
in
lea
cmovbe
insb
aas
pop
inc
push
dec
ret
cmpl
push
or
and
push
sti
xor
inc
dec
outsl
pusha
movl
push
dec
mov
mov
add
das
sarb
xlat
call
push
dec
pop
das
sub
add
out
mov
in
push
dec
dec
dec
push
inc
push
inc
dec
mov
punpcklwd
enter
inc
inc
cmp
bound
pop
inc
inc
aaa
negl
xchg
push
push
inc
inc
dec
pop
aaa
sti
push
outsl
xchg
mov
cmp
xor
sub
push
dec
cmp
push
push
lret
mov
lds
pop
cmp
divb
pop
fs
push
dec
aam
pusha
test
dec
insb
xor
addr16
and
sub
inc
call
push
mov
cs
inc
dec
pop
inc
fcmovbe
scas
ret
jnp
mov
or
pop
push
out
dec
xchg
ss
mov
ret
push
xor
sbb
mov
out
or
arpl
cmpsl
rorl
cli
push
ss
xor
movsl
mov
adc
push
push
or
mov
pop
inc
cmpsl
mov
ret
mov
inc
aaa
and
cs
movsl
push
dec
clc
sbb
push
dec
push
lods
inc
push
add
xor
loope
xchg
movl
push
push
push
dec
gs
pop
ficoml
adc
mov
ret
subl
pop
cwtl
loop
lds
push
sbb
mov
sbb
jg
inc
pop
rcll
sbb
jno
mov
inc
fildl
inc
inc
leave
lahf
push
fmuls
pop
xchg
inc
inc
dec
dec
inc
push
and
mov
pop
cmp
movsb
frstor
sub
push
inc
pop
xchg
jmp
pop
inc
push
dec
dec
insl
arpl
cmp
sub
dec
xor
sbb
ja
andb
inc
pop
cmp
pop
insl
adc
cmp
cmp
int3
adc
adc
jb
and
xor
jecxz
xchg
xor
pop
push
loope
push
push
lcall
inc
push
mov
adc
fistl
or
mov
push
or
jns
fsubrs
nop
or
int
das
leave
inc
push
inc
pop
xor
xor
push
shll
xor
push
dec
push
fimull
push
pop
pop
pop
pop
adc
push
mov
dec
inc
mov
icebp
shlb
mov
dec
push
aad
pop
jbe
aas
cmp
dec
inc
add
stc
mov
push
inc
push
fsubrl
mov
xchg
inc
scas
inc
aas
dec
dec
jbe
or
adc
adc
inc
lahf
mov
jbe
xchg
sbb
dec
mov
pop
pop
inc
aas
pop
in
ja
outsl
aaa
push
inc
dec
orl
jo
mov
pusha
jle
inc
inc
pop
xchg
loopne
add
push
dec
mov
stos
cmp
jnp
adc
xchg
test
pop
rcll
cmp
xchg
dec
dec
cmovb
push
mov
test
fldt
cs
inc
inc
xor
inc
loope
cmp
mov
dec
pop
enter
pop
dec
xor
sbb
push
sbb
dec
inc
and
jg
push
ret
jb
lds
pop
mov
jbe
push
inc
push
dec
inc
incl
inc
push
inc
or
insl
pop
sbb
imul
inc
xchg
push
push
push
subl
sbb
mov
dec
iret
inc
pop
push
add
inc
ja
insl
inc
inc
fmuls
push
cmp
call
aaa
das
push
add
adc
mov
movsb
mov
dec
push
dec
ss
rcrl
xor
dec
push
or
jecxz
pop
mov
push
push
xchg
push
cmp
rolb
es
adc
pop
push
test
xor
jo
rorb
dec
push
pop
jnp
fstl
push
ja
pop
pop
or
jo
inc
cmpsl
iret
push
mov
push
inc
test
add
outsl
mov
rorb
add
xor
loopne
sbb
daa
push
arpl
xchg
pop
push
aaa
inc
sbb
add
imul
in
imul
imul
lret
inc
lods
pop
sbb
gs
pop
aad
pop
xchg
add
push
inc
push
lret
aaa
dec
lahf
loope
push
dec
imul
push
inc
jmp
or
jg
dec
push
xor
xor
aaa
pop
xor
call
mov
pop
jno
inc
inc
orb
or
mov
dec
pop
pop
dec
dec
add
stos
pushl
dec
pop
aaa
ss
xor
add
and
fldl
sub
pop
out
lea
jecxz
xor
mov
mov
sub
cmp
xchg
adc
jo
mov
xchg
addl
sbb
push
sbb
mov
push
push
mov
dec
aam
mov
ds
cmc
cmp
pop
inc
inc
or
add
push
stos
popf
cmp
ficomps
cld
xor
in
push
xor
mov
loope
stos
fimull
inc
pop
aas
add
aad
imul
dec
or
or
sbb
jg
imul
subl
sbb
pop
cmpl
aaa
std
lods
jge
or
aaa
add
inc
dec
cmpsb
ds
mov
cmp
daa
xor
pop
push
push
pop
mov
test
push
pop
pop
aas
pop
xor
test
out
push
in
pop
pop
pop
xlat
cmp
sbb
cmp
out
pop
xor
jge
aaa
inc
and
ja
push
lret
rcr
sub
inc
mov
cmpsb
jge
jecxz
cmpsb
repz
dec
push
incl
push
sbb
aaa
or
imulb
dec
xor
jns
shrl
dec
dec
inc
dec
dec
mov
or
push
mov
test
enter
push
in
popl
jo
inc
push
jl
inc
xor
test
jbe
push
xlat
mov
stos
push
push
inc
cmpsl
mov
push
dec
push
es
insb
mov
pop
xor
xor
pop
pop
or
pusha
mov
scas
lods
sti
pop
sub
insl
jecxz
cmp
or
push
mov
lahf
jmp
push
jne
push
mov
dec
shll
mov
sbb
pop
fucompp
mov
dec
dec
jo
add
dec
and
inc
push
pop
pusha
mov
scas
mov
rcll
outsl
xchg
das
dec
in
dec
adc
movl
push
push
mov
or
dec
mov
inc
xor
inc
mov
sub
mov
push
fldl
aaa
push
inc
ja
inc
js
adc
mov
push
sbb
subb
popa
fisttps
ret
sbb
dec
sbb
jg
xor
das
add
push
inc
push
sub
pop
in
inc
push
xor
push
xchg
pop
es
push
xchg
mov
inc
sub
sub
mov
data16
outsl
imul
inc
outsl
dec
dec
dec
inc
dec
push
pop
adc
or
push
adc
xchg
testb
push
pop
jge
adc
fsts
mov
je
mov
pop
and
adc
dec
or
mov
pop
dec
dec
dec
ja
push
cmc
test
out
dec
sbb
push
pop
pusha
imul
sbb
mov
dec
push
cmpsb
dec
add
pop
js
mov
movsl
dec
fstpl
ss
mov
dec
popl
sbb
and
push
dec
jg
lahf
adc
dec
dec
sub
xlat
test
sub
imul
adc
sbb
aad
inc
pop
pop
inc
adc
movsl
pop
and
sbb
mov
es
xor
testb
fucomi
test
mov
out
cs
jecxz
mov
push
jg
pop
adc
inc
sub
call
push
inc
xchg
push
inc
or
push
mov
mov
dec
dec
and
fsubr
dec
loope
mov
addl
ljmp
cmpsb
fwait
dec
adc
stos
xor
pop
cmp
sbb
ret
addl
dec
xor
xor
lahf
cmpsl
xchg
dec
pop
ret
nop
dec
inc
mov
add
pop
dec
push
inc
push
inc
mov
push
push
inc
push
push
imul
push
xor
fldt
dec
xor
inc
dec
pop
dec
test
cmp
jecxz
fsubp
aad
and
jp
sub
push
pop
fidivrl
aaa
sub
sti
push
and
cmp
inc
inc
cltd
add
add
jge
js
sub
dec
ret
ss
nop
ss
inc
adc
leave
inc
dec
inc
out
xor
dec
cmpsb
lods
rolb
daa
push
roll
fdivrs
inc
pop
push
dec
cwtl
or
lods
rcrb
aam
mov
dec
xchg
cmp
sbb
pop
or
jae
movsl
or
jmp
pop
adc
adc
pop
push
pop
mov
outsl
xor
add
mov
insl
jmp
fmul
pop
sbb
adc
and
dec
aaa
or
sbb
sub
mov
sbb
dec
fisttpl
mov
inc
xchg
movl
in
movsb
add
adc
jo
ret
stos
push
enter
lds
dec
dec
push
mov
push
pop
aas
mov
or
adc
pop
mov
xlat
xchg
xchg
add
aaa
mov
dec
iret
push
test
add
xchg
dec
in
push
pop
push
add
insl
push
sub
inc
adc
push
xor
jmp
pop
addr16
mov
xlat
mov
push
test
ss
pop
inc
adc
jnp
push
push
push
in
inc
addr16
jecxz
rcrl
pop
push
jbe
movsl
loop
imul
xchg
lea
xor
mov
icebp
test
js
inc
push
inc
push
fwait
xorl
xor
xor
negb
pop
sub
xor
pop
mov
and
cmp
test
cmp
jmp
sub
outsb
ds
mov
or
pop
inc
xchg
cmpsb
sbb
adc
dec
pop
inc
ret
mov
push
lcall
xor
inc
inc
dec
and
in
pop
adc
push
mov
push
es
pusha
enter
push
inc
push
dec
pop
shlb
xlat
leave
psubw
cs
push
mov
daa
pop
mov
xor
loope
stos
inc
push
dec
inc
push
xor
ljmp
push
push
rorb
mov
dec
pop
or
and
push
or
imul
ret
outsb
sub
pop
lds
inc
mov
sbb
subl
push
andl
cmp
js
inc
dec
push
ljmp
dec
addr16
aad
sbb
adc
inc
pop
in
inc
push
sub
pushf
adc
popl
ret
or
sbb
mov
insl
pop
jns
xlat
push
adc
dec
adc
ret
pop
fsts
sbb
lods
and
repz
pop
cmp
lahf
push
push
mov
xchg
xlat
xor
mov
inc
insb
in
test
out
stos
jg
ret
and
sbb
jg
rcl
sub
fisttpll
in
insb
cmp
out
sbb
jmp
sbb
lds
pop
stos
mov
aas
add
fcmovnu
pop
lahf
pop
aaa
adc
fstl
iret
and
jg
sbbl
arpl
ss
push
test
imul
pop
rorl
mov
pop
pop
mov
jno
adc
add
test
push
scas
ljmp
outsl
push
das
cs
subb
xorb
dec
sub
and
insl
mov
mov
cmp
xchg
popf
dec
mov
fsubrs
jmp
cmp
mov
xor
push
ss
inc
pop
dec
sbb
mov
xor
push
pusha
adc
mov
sub
addr16
push
xchg
cmpsb
jo
pop
stos
and
jno
sbb
in
test
daa
addr16
jg
inc
xor
push
push
pushf
divl
push
roll
rcrl
out
mov
pop
call
das
sub
or
inc
and
xchg
or
pop
sbb
nop
sub
or
pop
or
inc
xchg
fs
pusha
jle
or
inc
and
popa
jne
push
and
and
and
enter
pop
xor
inc
enter
adc
test
cmp
aas
daa
pusha
enter
jle
test
imul
nop
sub
inc
nop
and
and
pop
xchg
sub
inc
das
pop
inc
xchg
or
daa
pusha
sbb
nop
jle
cs
add
pop
das
or
inc
enter
lods
cmpb
jae,pn
gs
das
cs
and
and
das
and
or
outsl
cmpl
lods
mov
or
mov
and
subl
inc
dec
gs
dec
test
bound
cmpsb
dec
movsl
aaa
fiaddl
pop
cs
cmpsb
addb
add
sbb
jnp
pop
dec
jmp
pop
leave
xchg
or
push
push
add
add
fildll
jo
jns
mov
jb
insb
pop
add
dec
das
add
ret
jae,pn
pop
pop
insb
movsb
or
and
sub
cmp
fs
std
mov
dec
push
push
push
jbe
insb
mov
mov
inc
fistpll
jb
pop
push
cs
insb
imul
in
push
subb
push
in
mov
mov
xor
cmpsb
jae
pop
mov
test
lods
xchg
mov
mov
imul
lret
daa
cmpsb
daa
pusha
push
pusha
lcall
insl
add
and
movsl
jg
jl
pop
or
in
xchg
clc
repnz
add
dec
xor
jo
pop
dec
inc
cmp
cmpsb
push
xor
fisttpl
pop
push
push
dec
pop
mov
lods
cltd
add
mov
or
imul
nop
popa
sub
push
jo
imul
int3
punpckhbw
and
inc
cmp
ja
xchg
imul
sbb
rcl
push
test
xorl
and
ljmp
push
js
inc
pop
or
fidivrl
and
mov
inc
adc
jnp
push
daa
imul
inc
lahf
jae
push
and
jae
pop
imul
jne
bound
movsb
xchg
mov
in
dec
imul
add
ja,pn
mov
dec
xchg
dec
sbb
pop
fbstp
iret
rcr
mov
adc
fwait
xchg
jg
mov
mov
addr16
mov
adc
je
fimull
inc
notb
ljmp
cmp
popf
loope
shll
and
or
addr16
loope
or
fbld
mov
sub
sbb
mov
jne
jg
jo
add
lret
adc
ja
jmp
add
sub
call
adc
xor
mov
jae
incl
stc
das
mov
jle
ret
dec
or
fildl
inc
xor
xlat
push
push
test
ljmp
mov
inc
jl
inc
cmp
rolb
lret
js
inc
and
loopne
adc
cmpl
pushf
inc
jne
mov
adc
jb
mov
sub
add
incl
add
push
call
inc
gs
xor
imul
movsb
and
call
das
xorl
xor
lret
adc
in
ret
pop
pop
pop
push
sub
decl
test
xchg
test
xlat
rep
mov
stos
push
jmp
and
push
push
push
pusha
or
xchg
pop
add
test
ret
ja
outsb
addl
lods
bound
and
out
pop
push
pop
cmp
mov
inc
insl
pop
inc
push
push
or
dec
ss
dec
dec
jp
pop
add
stc
and
dec
jae
mov
push
cmpsb
cmp
cmp
aam
dec
lods
jno
push
loope
mov
lret
popf
jo
in
imulb
inc
sbb
sbbl
or
xorl
mov
stc
fsubs
push
imul
add
mov
cmp
add
dec
add
jns
or
insl
sbb
add
int3
mov
jmp
inc
js
pop
pop
xor
push
data16
cmpsl
das
inc
rcrb
mov
xorb
dec
mov
call
lock
jle
dec
xor
dec
cmp
adc
or
fdivl
int
push
and
jo
xlat
mov
mov
test
aaa
js
cltd
push
sbb
shrl
js
fsubs
jnp
dec
inc
xchg
push
dec
add
push
mov
lea
in
shlb
sub
sub
or
push
addl
in
imul
imul
pop
pop
les
rclb
adc
aas
dec
inc
testl
inc
push
add
xlat
movl
push
mov
or
fsubrs
and
xchg
shrl
popf
shrb
lds
es
cmp
push
inc
lcall
mov
cmc
sbb
mov
mov
add
leave
xor
cwtl
add
add
cwtl
pop
push
cmp
stos
fwait
out
lahf
cld
je
ja
frstor
cmp
or
and
call
imul
aas
push
imul
arpl
jns
bound
sbb
fwait
cmpsl
jae
jbe
bound
and
pop
fldcw
movntps
ret
sub
loopne
jp
scas
inc
and
dec
add
mov
pop
adc
or
pop
pop
popa
inc
or
inc
in
inc
cmp
pop
addb
sbb
ja
fmuls
pop
dec
mov
test
rolb
shll
mov
jo
pusha
push
dec
xor
shll
cmp
sub
in
xor
and
test
sbb
adc
int3
mov
add
sub
out
push
imul
in
loope
sahf
nop
push
cmpsb
int3
les
dec
shll
nop
mov
sub
pop
js
jo
dec
push
dec
shll
dec
inc
cmp
insb
fdivs
lahf
adc
fiaddl
add
sub
xor
roll
call
dec
shll
movsb
mov
pushf
xchg
mov
adc
xor
pop
mov
ja
ss
sbb
pop
lods
lea
add
and
sti
out
cmpsb
aas
add
sbb
arpl
xor
je
dec
fs
fsubl
jecxz
out
add
aaa
push
scas
or
or
and
aas
dec
and
inc
push
aas
dec
das
push
ficomps
movsb
dec
pop
push
push
sbbl
mov
lret
sub
inc
mov
dec
cmovs
xchg
pop
fwait
lods
mov
xor
jo
sahf
sub
mov
psraw
gs
test
push
xchg
roll
xchg
pop
push
cmpsl
frstor
popa
xor
and
out
push
xchg
insb
aas
jbe
mull
add
insb
gs
cmp
dec
jle
lret
out
inc
push
ja
add
mov
jne
adc
xchg
loope
jmp
mov
out
or
popa
data16
cltd
or
add
jo
aam
pop
dec
lock
and
cs
add
xor
aaa
add
inc
sub
loopne
loopne
pop
sbb
arpl
insb
pop
or
lret
repnz
scas
mov
adc
mov
and
sub
aaa
negb
inc
test
sti
cmp
xor
and
push
cmp
mov
xor
sub
hlt
int3
fmuls
dec
mov
pop
push
addb
and
push
arpl
xchg
movsl
mov
sarl
inc
cs
das
inc
sub
loopew
add
test
adc
sub
insb
pusha
aaa
mov
loopne
jmp
aad
adc
add
fs
jecxz
mov
xor
adc
shll
mov
fimuls
mov
adc
js
pop
xlat
jle
mov
out
push
fnstsw
add
jo
aaa
pop
dec
fadd
sub
ret
aas
inc
fidivl
fmuls
inc
mov
xor
insb
inc
jb
add
inc
adc
imul
cmp
push
jb
enter
inc
cmpsb
dec
dec
jae
mov
and
dec
inc
xor
sbb
inc
sbb
pop
ja
push
add
pop
jne
push
jne
out
push
push
add
pusha
jbe
add
bound
jmp
icebp
push
negl
adc
mov
leave
sbb
call
shrl
daa
arpl
xor
inc
jmp
cmp
out
outsb
adc
rcrl
and
sub
test
jne
sbb
xchg
andb
mov
and
mov
dec
sarb
shrl
filds
std
push
or
or
fwait
loop
add
imul
insl
inc
fsubrs
push
dec
imul
int
inc
outsb
pop
jmp
mov
jge
sbb
data16
fwait
xchg
jnp
dec
mov
arpl
push
push
add
inc
sub
xchg
mov
inc
arpl
sub
lds
mov
mov
jae
loope
insb
pusha
lods
and
or
rcrb
or
cmpsb
or
adc
push
mov
xchg
jo
lahf
dec
mov
xchg
scas
or
inc
add
addr16
dec
ret
or
jb
inc
int
inc
add
es
lock
dec
adc
scas
push
inc
mov
inc
scas
sub
movntps
jp
nop
push
aas
inc
jb
pop
aaa
es
sahf
jb
xchg
push
add
cwtl
sub
das
in
lods
add
roll
out
pop
fidivl
xor
mov
sbb
mov
push
push
aas
push
gs
fdivs
mov
and
addr16
fldt
sbb
rcrb
push
cmp
test
aas
fisubl
es
and
mov
icebp
push
cmp
aam
inc
add
add
sbb
and
ja
and
insl
jmp
imul
pop
out
or
xchg
fisubl
sbb
sbb
add
add
add
mov
int3
add
sbb
dec
ds
pop
imul
or
pusha
das
or
cmp
ss
outsl
mov
and
cmp
loop
inc
ss
fs
lods
push
mov
int
push
dec
insb
outsl
int
rclb
das
flds
fistps
mov
xchg
aaa
out
fdivs
fsts
stos
sbb
pushf
scas
cmp
add
push
outsl
popf
pusha
push
cmp
lock
adc
in
out
int3
cmp
sbb
push
mov
or
sub
insl
xchg
mov
mov
mov
fsubrl
leave
cmc
push
fcmovu
push
out
stc
popa
std
add
popa
jle
add
sub
cmp
and
leave
imul
or
out
popa
outsb
lds
inc
add
mov
lods
test
aam
addr16
and
dec
pop
aaa
adcb
popf
push
push
mov
ja
add
stc
jnp
addl
or
clc
xor
inc
inc
leave
pop
push
xchg
addl
xor
or
inc
outsl
sub
and
add
inc
outsl
mov
add
push
or
jecxz
addr16
mov
xor
ljmp
xchg
loope
pop
mov
adc
call
adc
or
out
mov
lea
popa
pop
or
pop
out
add
adc
add
pushw
xchg
jle
insb
test
pop
stos
daa
push
pushf
mov
push
jnp
mov
add
filds
push
and
aaa
cmp
ja
push
iret
outsb
xchg
outsb
test
xor
jl
xor
fs
popa
fisttpll
loopne
push
push
push
rorb
fiadds
pusha
test
rcrl
jae
sahf
insl
movsl
adc
mov
fsubrl
popw
ss
fmulp
push
loope
orl
or
xchg
lahf
arpl
arpl
dec
mov
sahf
dec
jo
adc
daa
xor
lahf
xchg
addr16
adc
ja
jne
sub
xchg
aaa
dec
sub
mov
or
inc
das
outsl
int
mov
sub
sbbl
add
arpl
sub
adc
mov
inc
mov
roll
xchg
dec
mov
sbb
push
cmp
mov
sbbl
push
cmp
lahf
popaw
imull
sub
arpl
out
push
rolb
sbbl
jo
out
bound
dec
movsb
shrl
lcall
add
ja
je
outsb
mov
push
outsl
mov
fmull
in
dec
and
inc
into
es
iret
fldenv
arpl
dec
aaa
adc
in
rcr
jo
push
arpl
int3
mov
imul
pop
in
mov
cmp
xchg
out
pusha
or
insb
inc
out
ja
shrb
add
dec
and
push
lods
sbb
dec
and
stos
loop
scas
fiadds
jae
xchg
xor
insl
push
mov
gs
notb
pop
pop
imul
push
aas
inc
sub
push
shlb
cmpl
fldcw
pmulhuw
cs
outsl
lods
jae
pop
jno
in
sbb
lahf
push
sub
pop
data16
ja
addr16
add
push
pop
test
rolb
cmp
inc
aaa
pop
pop
imul
push
pop
jbe
lret
mov
ja
inc
dec
add
adc
jno
add
fmuls
aas
aaa
sbb
cmp
test
inc
je
sbb
fs
leave
mov
mov
push
jns
mov
cmp
push
cmp
cmp
popf
adc
enter
push
inc
testl
and
sbb
inc
mov
inc
add
inc
jne
mov
xchg
sbb
jbe
cmp
pop
or
cwtl
test
fs
ss
inc
and
mov
push
pushf
mov
popa
mov
aaa
popa
outsb
out
pop
or
fs
cmp
mov
sbb
cwtl
fstpt
add
push
inc
mov
popa
in
add
and
insb
jmp
push
xor
cld
push
jmp
test
xor
cmp
outsl
add
aaa
add
popf
dec
outsl
lock
xor
inc
into
xor
movsb
and
xor
push
xor
insb
adc
dec
out
sbb
jno
sbb
and
and
jmp
pop
dec
xor
add
cli
fistl
incl
jo
cltd
std
cmp
call
adc
xchg
adc
popf
shlb
jnp
icebp
stos
stos
or
sti
jge
std
int
adc
sbb
jne
cwtl
bswap
icebp
cwtl
or
pop
jnp
iret
mov
add
add
out
cwtl
icebp
fwait
cltd
popf
decb
push
repz
lret
sbb
in
shl
cli
hlt
std
cltd
adc
test
movsl
mov
shlb
fs
fnstsw
movsb
adc
mov
adc
in
int
enter
pop
out
test
data16
call
xchg
test
lcall
fsubl
lcall
lcall
fdivs
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
in
jle
adc
outsb
jns
ret
mov
xchg
rclb
test
fwait
push
xor
rcrb
incl
jne
pop
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
push
sar
cpuid
inc
nop
insb
xor
pusha
xor
jle
pop
inc
lcall
jge
mov
cwtl
ret
flds
ljmp
xchg
out
bound
xlat
lea
adc
jmp
mov
push
imul
shrb
rol
pop
popf
fdivrl
rol
adc
shl
fistps
js
pop
mov
sbb
pop
js
sbb
arpl
sbb
adc
mov
negl
sbb
ret
iret
repz
mov
in
cli
push
repz
sub
ud0
sub
repnz
pop
adc
popf
stc
into
lret
sti
loope
popa
std
fstl
insl
cmp
aaa
rclb
pop
jnp
adc
mov
pop
fbstp
fwait
adc
xchg
iret
or
loop
fisubs
jns
lret
in
rorl
jge
xor
repnz
mov
ja
mov
fdivrp
in
leave
jmp
cli
fdivr
std
jmp
ljmp
cld
and
aas
jnp
fcomps
insl
lods
aad
clc
std
aad
sti
jmp
jmp
out
and
popa
fmul
push
repnz
in
sti
lock
cltd
clc
cli
jnp
sbb
pop
aad
cmc
imul
mov
cltd
test
jg
sbb
cld
xchg
ret
ret
bound
add
and
and
stos
add
jne
adc
ficomps
inc
in
dec
add
xor
dec
movl
add
lret
xor
and
imul
cmp
movsb
push
jae
pop
movsl
cli
jge
add
inc
add
outsl
cmp
je
loop
aam
imul
orb
daa
pop
in
hlt
add
jne
sbb
aaa
fs
ja
jne
ds
and
add
das
cmp
push
add
pop
leave
cmpb
and
push
imul
xor
inc
insb
inc
xchg
add
jg
push
adc
ds
add
inc
sbbl
dec
add
decl
sub
addr16
lret
pop
mov
jne
add
inc
cvtdq2ps
adc
cs
add
rcrl
xor
dec
pusha
xlat
dec
cmp
inc
add
and
fs
mov
add
mov
fiadds
push
lret
add
xor
mov
push
insb
mov
or
and
push
out
lods
sbb
push
es
mov
xchg
pusha
adc
aas
and
pusha
mov
push
sbb
or
adc
adc
fldcw
cmc
add
iret
inc
repnz
pusha
mov
mov
add
or
or
or
sahf
loope
xchg
in
setne
scas
jl
inc
lea
and
fiaddl
add
iret
or
jns
clc
das
decb
push
mov
push
pop
test
add
sbb
or
mov
mov
dec
or
lods
or
push
psubusb
add
enter
je
cmp
xor
insb
rsm
xchg
fwait
add
mov
popf
lods
jmp
pop
push
repnz
inc
dec
sbb
jl
mov
pop
and
sbb
push
jl
and
popf
add
imul
popa
mov
jbe
adc
or
int
rolb
out
push
push
xor
add
add
ss
std
push
aam
orl
cltd
xchg
sub
addl
add
xor
mov
add
adc
aaa
sbb
jmp
add
mov
jmp
pop
add
arpl
sub
jmp
push
adc
jb
add
test
adc
xor
add
jno
mov
lahf
in
adc
add
push
pushl
and
std
int3
iret
cmpsb
std
incl
dec
mov
pusha
pop
or
jl
jg
push
add
sub
adc
outsb
jb
daa
loop
mov
inc
push
inc
addr16
rol
jp
hlt
or
pusha
fiadds
dec
scas
outsb
scas
addb
jg
add
sub
orb
lds
fsubs
rolb
les
int
fs
pop
xchg
mov
out
pop
movsl
sbb
lods
mov
xchg
and
or
push
rcll
mov
scas
push
add
mov
incl
mov
dec
pop
data16
or
or
adc
or
int3
ljmp
jbe
neg
cwtl
xchg
cwtl
dec
rclb
test
pop
lds
adc
add
mov
adc
inc
adc
pusha
pop
out
xor
xchg
incb
lds
add
mov
jp
add
xchg
iret
add
jp
pop
cwtl
mov
and
or
mov
or
add
pop
dec
cltd
bound
jle
push
int
mov
jbe
xlat
clc
rorl
add
andl
ss
add
xchg
or
and
sub
mov
or
add
sub
and
pop
pop
fdivrp
arpl
int3
loopne
jg
xchg
add
push
fstpl
inc
cmp
add
fbstp
jo
pop
gs
popa
or
iret
stos
stos
xchg
stos
mov
and
xor
push
cmp
outsl
mov
add
sbb
mov
inc
add
int
je
imul
xor
sahf
fisubrl
sub
jg
pusha
mov
andb
pop
ret
jle
ret
cs
pop
mov
aam
or
or
roll
or
fildl
rcl
and
jnp
jnp
shrb
xor
xchg
les
dec
inc
adc
push
push
test
inc
sub
xchg
pop
adc
push
push
out
push
or
sbb
arpl
pop
mov
into
and
xor
daa
outsb
je
test
and
rorb
inc
and
rolb
loope
inc
jle
je
adc
pusha
jmp
pop
push
ret
ljmp
rolb
fcoms
xor
add
inc
add
inc
push
jg
outsl
and
ret
shl
shr
aas
xor
add
sub
add
inc
pop
xor
dec
add
loopne
popa
add
leave
sub
fldz
fnstenv
pop
xorl
sub
loop
cwtl
jmp
das
mov
cli
popf
fwait
imul
addr16
ljmp
or
sub
xchg
cmp
lds
arpl
iret
outsl
gs
out
xchg
pop
pop
and
in
inc
lcall
out
add
add
addr16
sbb
cmpsl
cmp
push
out
dec
xor
call
js
mov
insb
push
insl
in
sub
jmp
xor
popa
ss
or
jbe
cmp
mov
ret
lcall
cmp
or
popf
mov
fsubrl
movsb
push
popf
mov
push
xor
pop
inc
out
xor
pop
dec
addr16
clc
add
xor
mov
arpl
push
dec
std
aad
shlb
inc
subl
out
jg
xor
pop
push
xchg
jl
fists
outsl
outsl
push
incl
paddsw
outsl
xor
arpl
xchg
dec
lcall
icebp
jmp
mov
adc
pop
push
xor
xchg
incl
push
xor
or
xor
mov
pop
stc
loope
insl
inc
ficoms
add
test
dec
inc
xor
add
dec
mov
dec
pop
gs
pop
addb
aas
and
jo
pop
jmp
add
rorb
and
inc
inc
lock
arpl
push
xor
sub
ljmp
xchg
dec
sub
sub
mov
jae
gs
add
and
pop
insb
add
xchg
pop
stos
or
lea
insb
pop
sub
movsl
lods
push
insl
sub
jo
xchg
or
imul
adc
pusha
sar
ss
xor
clc
jle
pop
add
xchg
jp
jbe
aaa
add
fistpll
inc
add
loope
sbb
pusha
into
iret
mov
or
arpl
jb
mov
dec
and
orb
test
adc
adcb
add
add
add
subb
and
ja
push
jno
sbb
add
cs
nop
cmpsl
adc
push
push
incl
add
xchg
lock
pop
fs
or
andb
jb
or
inc
pop
nop
in
lcall
pop
sbb
cmpsb
push
or
or
and
push
sbb
or
or
jbe
imul
daa
push
jns
ficoml
push
adc
and
pop
inc
inc
push
addr16
xchg
xorps
popa
imull
push
and
or
push
pop
sbbb
insb
or
jb
or
test
xchg
sub
mov
fcoms
or
aas
into
aas
xlat
subl
aaa
mov
cmpb
add
stc
leave
sbbl
sbb
mov
jbe
decb
inc
mov
stc
mov
mov
sbb
in
call
testb
mov
ficompl
mov
repnz
xor
fcomp
loopne
jae
jle
int
mov
rorb
sbb
enter
mov
nop
enter
xchg
xchg
xchg
dec
adcl
pop
mov
sbb
add
fiaddl
test
or
xor
cmpsb
or
test
les
dec
shll
inc
sbb
sbb
cmpsl
sbb
je
dec
js
imul
imul
call
add
push
add
call
popa
inc
adc
or
add
mov
lcall
sbb
xor
push
or
jg
jo
add
dec
push
push
rolb
inc
push
inc
jg
outsb
sub
mov
or
inc
pop
scas
lods
jns
test
push
push
cmp
pop
xor
shll
xchg
mov
repz
dec
insl
add
dec
shll
mov
push
gs
adc
das
dec
insb
dec
dec
sti
test
mov
add
cli
or
or
ret
in
cmp
hlt
adc
mov
stc
daa
add
leave
sbb
into
sbb
jg
loope
lock
mov
sub
inc
rcrb
and
sbb
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
pop
loopne
idiv
dec
pop
js
inc
outsl
loopne
jmp
xchg
sarl
push
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
lcall
lds
mov
cmpsb
lock
mov
popa
sar
mov
fsubs
lahf
jmp
xchg
clc
repz
mov
subb
fwait
xchg
and
and
jbe
add
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
ljmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
ljmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
pushl
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
incb
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
ret
call
arpl
int3
and
call
cmp
jp
and
jge
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
sti
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
mov
ficomps
frstor
adc
orb
enter
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
inc
in
ficoms
fidivrl
mov
sub
adc
daa
add
or
inc
xlat
subb
je
mov
ja
sbb
add
push
pop
jno
dec
data16
clc
adc
add
mov
out
les
jae
or
gs
push
fs
or
fisubrl
jae
pop
xor
insb
push
outsb
ja
xor
nop
xor
cmpsb
adc
dec
cmp
jae
das
mov
cmp
dec
jge
pop
xor
in
mov
fbld
inc
jo
mov
imul
cmpl
push
in
add
insb
testb
push
adc
or
outsb
pop
push
jnp
add
and
filds
fwait
mov
inc
inc
gs
inc
xchg
fnstenv
ret
and
xor
or
aas
dec
or
add
lcall
int
clc
sub
or
xchg
push
and
dec
andl
mov
lods
mov
push
jo
dec
js
andb
mov
mov
or
xor
push
orb
jmp
popf
and
pop
cmp
pop
dec
push
inc
or
aad
mov
sbb
aaa
imul
or
xchg
fsubr
pop
pop
pop
jg
insl
sbb
mov
cld
jne
add
xchg
pop
mov
bound
mov
sbb
mov
push
imul
dec
insl
add
and
inc
sbb
add
pop
pop
inc
punpckhwd
and
pop
and
es
push
dec
jo
lock
ficompl
jle
inc
xorl
data16
mov
jns
lret
aas
bound
test
cmpsb
push
push
addl
jnp
and
arpl
jmp
loope
gs
or
add
andl
leave
mov
popa
sbb
mov
maskmovq
imull
outsb
sub
inc
sub
sub
js
jae
insb
in
sub
jns
add
jb
mov
jo
mov
dec
dec
xorb
jbe
jl
and
popa
inc
and
pusha
jnp
add
dec
push
jo
adc
adc
jae
sbb
push
inc
mov
pop
pop
jmp
mov
divl
mov
mov
outsl
fildl
aaa
sbb
jne
js
add
lock
out
cltd
pop
push
mov
push
sbb
sbb
push
xchg
pop
js
mov
into
add
andb
xchg
xchg
inc
ret
arpl
shlb
push
sub
push
adcb
sbb
inc
jns
out
jae
mov
pop
xchg
or
add
xchg
gs
xchg
adc
inc
pop
gs
add
fisttpl
fdivs
jg
mov
pop
ja
xchg
loopne
sidtl
repz
mov
add
adc
mov
jmp
push
or
out
push
cwtl
outsl
push
leave
enter
orl
jo
xchg
ss
push
adc
or
xor
imul
stos
lahf
push
push
mov
scas
fadds
xor
scas
or
insl
mov
and
jb
or
test
adc
adc
adc
imul
mov
dec
inc
stos
add
dec
rcl
shlb
fsubrs
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
