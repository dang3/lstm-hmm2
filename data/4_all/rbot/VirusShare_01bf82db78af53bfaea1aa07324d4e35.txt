rorb
rorb
int3
lret
lock
das
cmpsl
flds
in
into
adc
addps
pop
add
xor
xchg
std
ljmp
in
adc
in
xchg
shl
sbb
std
cmp
movsb
iret
fwait
and
imul
aam
in
and
mov
or
aad
dec
mov
fucomp
pop
lahf
loope
int3
fwait
cmpsl
xchg
mov
stos
inc
xor
xlat
dec
dec
enter
add
aam
loop
sahf
mov
in
xchg
and
sarl
mov
imull
pop
sbb
in
outsb
lods
imul
mov
cmpl
int3
mov
pop
push
rcll
xchg
aas
insl
fidivs
sub
popa
xchg
xchg
pop
xchg
add
xchg
iret
sub
mov
stos
movsl
push
mov
popa
fstps
dec
mov
inc
jno
push
js
inc
pop
pop
push
push
xchg
insb
dec
adc
mov
mov
std
std
cmp
pop
icebp
xchg
scas
and
mov
arpl
js
and
aad
arpl
sti
pop
cmp
lea
mov
mov
push
out
push
adc
push
rol
fyl2x
cltd
mov
arpl
pop
loope
lret
pop
jbe
xlat
pushf
enter
add
mov
cmp
jg,pt
cwtl
enter
das
xor
cmp
aam
inc
test
adc
inc
int
sbb
not
push
pop
xor
xchg
cmpsb
test
out
or
shl
imul
out
repnz
cmp
fsubp
adc
lret
cmpsb
sbb
and
and
sbb
into
xor
dec
adc
jae
sbb
into
mov
adc
add
add
push
adc
loopne
and
add
pop
popa
jne
shll
pop
inc
mov
and
mov
mov
mov
arpl
inc
in
sti
pop
cmp
xor
loopne
inc
and
or
mov
xchg
rep
mov
and
repnz
mov
repnz
out
jae
add
movsb
lds
dec
ljmp
stc
ret
mov
jmp
aas
xchg
outsl
inc
push
dec
cmpsl
add
stc
inc
xchg
xor
mov
mov
insb
icebp
outsb
ljmp
xchg
ret
xor
enter
popf
aas
mov
les
fdivs
dec
outsl
loopne
insl
int3
ljmp
add
dec
jns
inc
cmp
and
pop
mov
je
orb
mov
jle
dec
inc
int
xchg
mov
xchg
je
or
xchg
or
rorb
loopne
shr
mov
push
sub
push
push
test
ds
dec
mov
pop
lock
sti
daa
aas
and
sti
add
sub
addr16
mov
arpl
dec
and
sbb
sub
xchg
xlat
push
pop
and
pop
sub
pop
and
and
jmp
push
aas
lret
mov
imul
js
in
rcl
insl
cld
stos
test
test
push
add
xchg
fldl
xor
cmp
movsb
addr16
ja
bound
iret
divb
imul
jmp
loop
out
xchg
rcrl
inc
or
divl
repnz
sub
sbb
das
or
mov
repz
mov
fmul
mov
ja
ret
pop
out
cmp
shll
inc
das
xchg
push
push
es
sbb
fs
cmp
push
inc
pop
movsl
fisubrl
fdiv
ss
lret
mov
ja
aaa
lahf
mov
dec
push
mov
les
add
mov
jl
dec
popf
call
xor
pop
aad
adc
push
into
out
pop
out
int
dec
stc
or
std
cmpsb
inc
int
andnps
je
jp
scas
fists
jp
xor
into
ja
inc
mov
loope
popa
cmpsl
imull
mov
jecxz
jecxz
insb
mov
mov
sbbl
fdivrs
and
and
in
sahf
mov
lds
jnp
mov
cmp
xchg
pop
and
loopne
inc
bound
lods
cwtl
scas
add
xchg
push
or
in
mov
int
jg
push
sub
hlt
pop
fcoms
adc
je
jo
jge
movb
pop
or
lahf
dec
bound
pop
xlat
mov
nop
dec
mov
or
dec
sub
shrb
mov
and
cli
and
jno
test
lahf
aaa
push
mov
push
aaa
jno
cmp
or
ret
jno
xchg
mov
out
insb
inc
mov
std
add
dec
out
roll
and
or
cmp
push
dec
cmp
push
icebp
or
repz
fildl
adc
mov
pushf
repnz
daa
enter
fsts
cmp
adc
cmp
pop
imul
je
adc
aas
fcmove
and
jb
jnp
sub
push
adc
jecxz
ret
in
test
push
adc
mov
mov
movsb
mov
popa
scas
mov
jge
push
sbb
push
jge
jnp
clc
les
mov
hlt
xorl
aad
sbb
in
inc
and
xchg
popf
addr16
add
cmpsl
pop
lds
xor
mov
push
popa
add
push
arpl
pop
push
imul
xor
mov
sub
xor
adc
xlat
ja
insl
xor
cmp
enter
pop
sbb
pop
les
rcrl
cmc
add
and
bound
mov
mov
into
loope
testl
add
out
push
leave
pop
or
xor
fstp
fs
and
mov
or
lcall
and
jns
out
sbb
mov
test
jb
cmp
adc
pop
lahf
mov
xor
mov
push
hlt
pop
dec
and
outsb
inc
cwtl
js
icebp
inc
fwait
iret
addr16
pop
or
xchg
sub
cltd
test
or
repnz
xrelease
dec
ret
insl
jb
dec
imul
aam
je
shl
popa
or
ret
shlb
mov
sahf
scas
dec
or
lahf
sbb
push
shrb
movsb
aad
push
fs
lock
std
aam
xor
psrlq
push
clc
push
pop
popa
push
shrb
aas
xor
adc
sbbl
jl
mov
sti
add
data16
fwait
ret
subb
xchg
add
ss
pop
das
lcall
sbb
jmp
pop
dec
lds
adc
sub
push
mov
cmc
push
add
pop
in
aas
inc
hlt
xchg
stc
and
fmulp
jae
push
sub
ret
add
fisttpl
subb
fs
addr16
call
data16
sbb
ret
mov
bound
cmp
push
adc
inc
adc
das
mov
xchg
cld
hlt
jg
gs
repnz
xchg
pop
adc
push
ds
ja
push
ds
add
jb
pop
sbb
jp
xchg
lcall
sti
ret
divb
into
mov
jo
pop
adc
mov
mov
add
lods
inc
mov
push
mov
pop
cwtl
mov
sti
or
cmp
inc
cmpl
imul
test
rorb
dec
sbbl
ljmp
mov
aas
in
jmp
sti
or
push
jo
divl
xchg
pop
mov
xchg
push
sub
cmpsb
xor
jbe
xchg
enter
sub
jle
aad
or
pop
pop
mov
sbb
test
ds
fwait
popl
getsec
xor
pusha
das
inc
mov
loope
imul
pusha
add
push
jno
nop
int3
xchg
cmp
movsl
sbb
cli
or
xchg
push
out
mov
lea
inc
stos
outsb
test
mov
push
xchg
test
mov
leave
jge
cmp
roll
cmp
jg
lock
sbb
inc
test
popa
leave
les
int3
movsb
pop
xchg
push
pop
into
cmp
mov
mov
pop
bound
lds
gs
sub
add
jge
cmpsb
and
xchg
sbb
test
adc
repnz
add
cld
clc
jge
test
and
icebp
sub
test
dec
out
pop
cmc
mov
sub
adcl
mov
jo
xor
cmp
mov
ljmp
nop
pop
jae
add
mov
mov
jo
lret
sbb
call
aas
dec
mov
pop
ret
es
adc
cmp
inc
scas
lret
mov
js
movsb
xchg
decl
mov
subb
adc
mov
push
jmp
mov
sub
in
rolb
sbb
sbb
inc
mov
and
pop
out
out
daa
in
xchg
cld
dec
or
in
dec
call
jl
stos
leave
aas
out
aaa
jne
add
fstpl
mov
add
jb
aad
jmp
mov
xchg
jo
out
push
les
or
rclb
push
jp
daa
jge
es
fcoml
cmp
jae
inc
sbb
inc
fwait
mov
out
movsb
lret
mov
push
cltd
add
adc
stc
push
sub
out
cli
cmp
pop
cmpsl
outsb
outsb
shl
ds
jno
aam
cli
icebp
dec
add
xchg
into
pop
cmp
inc
jae
das
fildl
out
aad
mov
loope
jecxz
mov
mov
lock
jo
in
daa
mov
decl
cld
jns
push
mov
and
pop
inc
pop
cmpsl
pusha
test
ds
push
stc
or
ljmp
inc
push
add
sub
adc
outsl
repz
xchg
sahf
cwtl
inc
or
cli
test
adc
adc
ljmp
lea
mov
pop
xchg
out
push
in
mov
sbb
ja
inc
out
mov
mov
stc
jecxz
xchg
lahf
xchg
arpl
inc
jae
inc
lock
lea
cmpl
cmp
pop
jle
fstpl
arpl
sbb
cli
pop
cmp
in
xchg
sbb
mov
add
xor
or
mov
inc
mov
lret
fistpl
jecxz
mov
into
mov
cmpsb
or
fs
cmpl
jbe
mov
clc
les
dec
jp
push
stc
inc
aam
lds
addr16
dec
xchg
push
adc
daa
push
jb
insb
adc
or
lods
or
pop
mov
test
cmc
movsb
in
enter
or
sarw
fwait
mov
sub
pop
push
xor
dec
es
mov
mov
repnz
fisubrl
flds
sbb
mov
jle
dec
add
jnp
arpl
pop
inc
xrelease
setno
lds
movsb
mov
stos
cmpsb
mov
or
xchg
push
maxps
adc
clc
dec
add
xchg
inc
xlat
movsb
lock
lds
inc
adc
sub
je
test
lds
sbb
insl
xchg
add
out
pop
test
addl
js
mov
mov
xchg
test
mov
add
cmpsb
push
imulb
pusha
arpl
popa
xor
mov
cmp
jl
xor
sub
lds
mov
dec
test
sub
stc
mov
cmpsb
mov
imul
idiv
mov
leave
fwait
xchg
mov
movsl
push
mov
into
hlt
movsl
xchg
out
push
bound
pop
les
pop
and
mov
int3
outsl
mov
out
stos
xchg
ret
into
jmp
pop
mov
pop
lret
mov
push
dec
out
lcall
and
sbb
je
out
or
iret
cli
scas
incb
dec
movsb
sbb
outsl
out
mov
lock
sub
xchg
inc
mov
xchg
inc
cmp
push
xor
pop
mov
sbb
dec
xchg
cli
mov
loope
cmpl
lahf
int
insb
push
js
imul
ss
shll
test
cltd
int3
es
pop
mov
aas
push
mov
lods
into
mov
push
adc
shll
jp
loopne
xor
repz
adc
add
mov
lea
jl
lcall
stos
popl
jge
jp
pop
loopne
pop
add
push
inc
gs
add
stc
dec
mov
inc
pop
mov
jecxz
icebp
push
xchg
insl
mov
jb
in
cmpl
rorb
and
cltd
push
mov
mov
cs
lcall
and
andl
push
test
imul
sbb
push
insl
xchg
divb
add
sbb
adc
mov
xchg
or
xor
movsb
imul
pop
push
adc
jns
sub
sbb
out
lahf
mov
add
sbb
nop
scas
bound
sbb
bound
addr16
pop
add
int3
cmpsl
cwtl
cld
popf
xchg
loop
popfw
aad
mov
sti
jp
je
and
inc
and
add
aaa
and
fldl
sarb
add
xchg
sarl
ret
jae
out
repz
adc
and
push
rorb
aas
jl
js
out
xor
hlt
ret
or
cmpsl
in
add
loope
iret
bound
mov
and
in
test
sbb
jae
pmulhuw
jp
movsl
xchg
in
js
xchg
loope
lret
sbb
cmc
imul
lcall
cli
mov
adc
jmp
xor
pop
adc
test
int
cmc
and
bound
in
ljmp
jbe
decl
jle
jo
mov
mov
dec
fistps
mov
pop
inc
outsb
mov
ret
test
push
push
mov
lds
sarl
mov
sahf
scas
add
loop
mov
div
jo
bound
cmp
mov
inc
sbbl
imul
in
add
insb
jns
fs
fwait
dec
pop
cwtl
outsb
jmp
dec
test
out
imull
jno
sti
int3
dec
ss
test
repz
shlb
fwait
mov
or
mov
mov
pop
and
outsl
xchg
jo
or
dec
add
das
mov
mov
test
jecxz
rcrb
push
lods
sub
push
jns
scas
imull
adc
pushf
movsl
or
subl
push
mov
add
repnz
add
ss
loope
hlt
inc
fcoms
dec
fsubrs
pop
insb
dec
xchg
mov
mov
outsl
mov
in
lahf
in
jmp
cmp
ss
gs
inc
adc
arpl
and
ds
cltd
stos
adc
addr16
dec
sub
xlat
daa
lahf
dec
push
in
int
cmp
repnz
mov
cmp
pop
adc
mov
fwait
shrb
cmpsb
mov
cmp
fidivl
xchg
push
push
adc
jne
iret
pusha
xor
and
out
jle
xchg
mov
cmp
repz
sub
gs
jne
jge
push
adc
xchg
fsubrp
inc
jbe
cs
dec
add
sub
imul
cld
push
and
ret
and
jnp
mov
inc
nop
testb
push
mov
ja
hlt
mov
jnp
out
jecxz
aad
sbb
shlb
mov
cmpsl
aad
and
xor
dec
rorb
fisttpll
sar
add
pop
or
add
in
pop
das
movsl
push
adc
jl
push
mov
addr16
ss
sub
mov
test
jae
cltd
adc
jmp
lea
mov
loop
push
pop
in
test
mov
jecxz
jb
jmp
repz
dec
xor
ja
sub
cmp
push
outsb
movsb
cld
dec
lods
sbb
pop
in
cld
mov
test
es
scas
mov
cmpsl
inc
roll
mov
add
xchg
xchg
jge
scas
or
aas
sub
jns
jne
lahf
shrl
movsl
xchg
shlb
mov
ret
xchg
pop
test
add
or
sub
sbb
add
clc
and
mov
push
hlt
cmp
ret
xor
add
and
pop
lcall
add
lods
insb
xor
and
or
sbbb
sub
sub
int
test
mov
jbe
inc
mov
add
test
movsl
aaa
cld
dec
das
lcall
xor
daa
cmp
pop
mov
out
push
or
pop
repz
sub
mov
push
sahf
sbb
mov
loopne
jge
or
js
jp
repz
imul
das
test
inc
or
outsl
imul
jns
sub
fidivs
lret
popf
into
fstl
lods
aad
cmpsb
jnp
pusha
dec
inc
arpl
mov
hlt
pop
leave
mov
mov
clc
inc
fucom
out
rol
bound
aad
dec
pop
push
or
int
or
pinsrw
jb
xchg
imul
lret
xchg
ret
stos
loop
test
mov
sub
push
addr16
add
sub
test
add
jle
fwait
push
fisttps
cmp
mov
lods
loop
sbb
push
or
loop
push
enter
lret
popf
push
aam
fcmovne
or
int3
pop
stos
jbe
mov
out
adc
into
rclb
ds
mov
jae
jle
rolb
in
test
jns
and
sbb
mov
adc
mov
mov
popa
mov
add
pmaddwd
hlt
push
fsts
and
push
scas
add
xchg
cli
test
arpl
jge
mov
xor
push
jecxz
adc
int3
pusha
jmp
lods
push
xchg
xchg
inc
cwtl
sbb
xor
dec
xchg
mov
aaa
mov
dec
mov
adc
pop
mov
pop
pop
jne
daa
adc
xchg
leave
fstpt
pop
in
dec
in
pop
lds
xchg
dec
loopne
cli
stos
sbb
in
lock
or
inc
fs
sbbb
shrl
xor
cwtl
fstpt
adc
or
arpl
imull
mov
mov
addl
mov
sub
jne
jo
mov
ret
pop
mov
mov
adcl
out
cli
rorl
fcomi
dec
sbbb
mov
xor
pop
mov
ds
testl
shlb
test
test
inc
and
in
dec
mov
test
jnp
push
shlb
stc
push
jmp
dec
jg
scas
lock
xor
ret
jb
cwtl
jbe
test
sub
or
jnp
mov
pop
mov
scas
adcl
dec
popa
push
xor
rcr
and
mov
pop
dec
lods
jecxz
cmp
or
mov
push
pushf
aas
into
add
sub
into
cmp
scas
inc
sub
pop
sub
pusha
jecxz
and
clc
movsl
xchg
adc
xchg
push
jp
loopne
scas
xchg
in
push
sahf
arpl
mov
aam
dec
sub
cltd
stos
das
clc
mov
push
pop
dec
mov
adc
xchg
adc
ja
outsb
jle
pause
iret
mov
jb
or
stc
xchg
xor
cltd
jno
push
mov
daa
scas
mov
jg
shll
icebp
ret
add
pop
in
stos
mov
mov
add
mov
int
addr16
or
push
lahf
imul
test
popa
and
cld
leave
insl
push
in
xchg
pusha
and
or
fidivs
imul
aaa
imul
pop
or
mov
xor
psllw
pop
mov
call
in
jo
cmp
inc
fldenv
hlt
lds
iret
nop
or
nop
and
mov
rcrb
ja
xor
adc
dec
pusha
adc
sub
push
stos
data16
pop
lcall
pop
les
dec
inc
inc
pop
xchg
inc
repnz
sti
sub
xchg
out
pop
sahf
add
sub
or
xchg
push
inc
push
mov
jle
and
or
mov
xor
and
outsl
rcrb
push
dec
mov
in
mov
ja
loop
fldl
adc
jns
jecxz
daa
jb
and
in
fidivrs
in
mov
add
enter
adc
out
push
test
out
pop
lret
in
ret
push
push
add
push
or
jb
mov
mov
data16
outsb
sbb
cmc
into
int
jae
jmp
je
cwtl
imul
sbb
movsl
jp
stc
clc
pop
pop
mov
jae
mov
sub
loopne
sti
xchg
xchg
xchg
in
ficomps
cmp
test
fs
pop
ja
mov
jp
icebp
mov
mov
rolb
or
adc
pop
cmp
push
je
call
jl
sbb
and
dec
cmpl
std
push
and
insl
inc
xor
jo
ds
int3
int3
jnp
daa
inc
xchg
shll
mov
repnz
int3
add
dec
out
jecxz
repz
mov
pusha
popf
pop
xor
fcomps
dec
mov
cmp
jne
mov
jb
cmp
inc
pop
xchg
push
mov
and
ret
sbb
outsl
push
and
int
inc
sub
jmp
aam
and
xchg
movsb
pop
stc
out
cmc
pop
into
das
xchg
add
pop
add
inc
cmp
lret
dec
lcall
mov
mov
cmpsb
je
inc
insl
out
sbb
mov
add
jecxz
mov
dec
cmp
test
fcomip
gs
mov
pop
or
mov
dec
push
mov
les
sbb
xchg
mov
mov
sub
inc
jns
push
sbb
in
addb
fbld
mov
test
mov
lret
sub
fwait
popa
lcall
xchg
shrl
lods
sbb
bound
lods
xlat
sub
and
call
popa
outsb
adc
mov
ja
fwait
out
and
je
or
xor
out
lods
lods
aam
mov
pop
push
mov
loope
outsl
or
xor
mov
pop
pop
pop
and
sub
decb
sti
adc
add
dec
push
subl
aaa
enter
mov
push
adc
lods
dec
fs
movb
stos
sub
and
dec
mov
jo
cmpsl
fstp
cmp
mov
jmp
lods
xchg
jecxz
xchg
push
push
mov
repnz
xchg
sahf
insb
repz
mov
or
cs
pop
clc
ficompl
dec
jecxz
iret
cli
pop
and
lds
xor
aas
test
sti
xchg
mov
test
cmp
movsl
ret
cmp
arpl
or
xor
push
jle
ja
pop
cmp
loope
rolb
lret
cmp
sbb
imul
adc
scas
pop
in
dec
rol
sbbl
sbb
pop
lds
stc
mov
daa
cmpsl
xchg
mov
fadd
adc
lcall
pop
popa
lcall
sarb
mov
adc
sti
xchg
jle
test
mov
popf
in
and
jg
adc
loopne
adc
out
mov
mull
flds
das
shld
data16
rcrl
adc
aam
stos
incb
xor
dec
pop
ret
out
push
add
mov
add
out
hlt
cmpl
das
in
scas
sbb
mov
out
cld
push
fistl
fsubl
and
aas
sbb
addb
jp
aad
jl
ret
xor
lret
out
xor
in
or
xchg
pause
icebp
adc
outsl
stos
jg
push
jge
push
bound
scas
cltd
xchg
adc
pop
xor
stc
or
cwtl
mov
into
movsb
test
mov
and
pop
dec
ja
sbb
test
mov
ja
pop
sub
add
sbb
mov
cli
adc
dec
aaa
hlt
inc
cmp
xor
cmp
mov
and
cmc
jp
and
fmul
sub
mov
push
repz
out
sub
dec
add
pop
sbb
or
xlat
adc
dec
insl
jnp
flds
aam
dec
stos
subb
ret
fnsave
inc
mov
outsb
xor
mov
push
or
pop
jo
push
dec
scas
pop
in
ljmp
or
sarb
lret
xchg
sti
sub
cmp
les
xor
mov
fidivrl
out
jp
jne
ljmp
mov
ja
call
stos
xchg
addr16
xor
aaa
cmp
data16
inc
push
loope
clc
push
jge
aad
adc
mov
mov
insb
rorl
mov
dec
outsl
or
jle
push
xchg
in
mov
popa
push
notb
and
pop
adc
insb
xchg
push
mov
mov
mov
lret
jmp
xchg
punpckhwd
js
popa
test
cmp
jecxz
cs
pop
pop
imul
call
jp
int
push
fs
jge
inc
jg
fdivrl
in
xor
xorb
xchg
shr
rcl
ljmp
xchg
add
lcall
adc
push
data16
scas
pushf
mov
sarb
or
mov
mov
std
add
aaa
lcall
nop
mov
push
ss
out
hlt
gs
stos
mov
xchg
cmp
mov
sub
fcoml
in
pop
or
and
and
in
cmpsl
inc
jl
adc
dec
outsb
cmpl
test
pop
arpl
fisubl
add
cmp
sar
sbbb
jmp
xchg
and
inc
lret
call
mov
xor
test
cmp
cmp
mov
ds
cmp
out
clc
push
dec
aam
mov
jo
jns
push
xchg
push
fdivr
cmp
insl
arpl
or
je
fsub
push
adc
mov
fs
loopne
mov
mov
popf
test
cmp
in
addb
sbb
sub
adc
rcrl
mov
xchg
fs
push
pop
fistpll
mov
testb
dec
adc
inc
rol
lods
jg
mov
ss
push
enter
and
cmp
sbb
sti
jno
int3
movsb
ret
xchg
pop
push
mov
mov
and
push
inc
test
cmpl
cmpsl
push
bound
jb
pop
clc
dec
cwtl
imul
mov
xchg
pop
xchg
dec
mov
sub
pop
and
sub
or
int
outsl
and
out
shll
pop
lock
flds
push
mov
fs
cli
push
rol
adc
or
and
push
aas
ds
or
bound
shrb
shrb
loop
cmpl
jmp
ljmp
inc
mov
sub
add
leave
push
xchg
fiadds
pop
int3
test
adc
mov
aam
fs
xchg
push
movsb
popf
jl
and
lods
cltd
sub
in
pop
pushf
outsl
pushf
fcoml
out
sub
add
xchg
subl
pop
mov
inc
mov
decl
divl
cmpsl
lret
push
push
fmuls
les
xor
xor
sub
clc
fimuls
dec
xchg
nop
sbb
das
mov
inc
pop
jle
add
jb
stc
sub
imull
lcall
in
jge
inc
lods
lret
inc
jnp
leave
ret
jo
loop
or
mov
fs
test
les
iret
mov
xchg
push
add
sub
and
test
fimuls
cmp
sub
scas
je
and
mov
pop
jge
outsl
outsl
or
ds
dec
dec
int3
xor
stos
lock
jae
push
mov
and
mov
xchg
xchg
nop
dec
bound
inc
push
inc
loop
pop
mov
xlat
pop
mov
push
daa
fildl
sbb
sbb
fstpl
loope
push
pop
pop
popa
fnstcw
inc
and
out
mov
sbb
cs
lock
fwait
sti
loop
leave
pop
rorb
dec
movsl
cmp
andl
outsb
jge
adc
fisttps
data16
flds
fmull
stos
cmc
xorb
sub
addr16
lock
pop
lock
and
pop
cmp
bound
cld
dec
or
pop
push
push
mov
pop
push
outsl
dec
fcoml
add
nop
pop
dec
ss
push
inc
mov
mov
ljmp
mov
mov
fcomps
add
sbb
xor
aas
sub
jno
mov
xchg
dec
xchg
loop
inc
or
fimuls
inc
clc
inc
outsl
sahf
dec
pop
lcall
push
repnz
adc
cmc
aam
pop
jno
inc
shl
mov
popa
or
sub
outsb
sub
iret
jbe
mov
push
pop
mov
jae
mov
pop
xchg
xor
data16
sbb
push
inc
out
or
xor
popf
or
outsb
popf
div
decl
bnd
scas
xor
pop
xchg
in
addr16
xor
sbb
fwait
push
in
pop
test
xlat
xchg
outsb
dec
jge
xchg
movsb
xlat
pop
es
adc
mov
mov
mov
js
add
test
and
mov
lock
xchg
add
adc
lret
test
cmpsl
rorl
push
lcall
imul
xchg
fs
mov
jo
inc
inc
push
out
xchg
cmp
add
pop
lcall
dec
test
lret
dec
push
int
test
adc
add
xor
test
clc
loop
enter
sbb
data16
and
sbb
sbb
xor
adc
cmc
xor
cmp
sbb
xchg
icebp
pop
lods
popa
or
xchg
cmp
adc
rorl
imul
push
lret
jno
jno
fdivl
mov
repz
sbb
pop
dec
xor
sbb
out
adc
iret
mov
int3
loopne
cmp
mov
jl
into
pop
xor
insb
mov
mov
xchg
popl
mov
rcrl
pushf
add
pop
vpshaq
sbb
sbb
inc
cltd
insb
lods
ret
push
mov
sub
leave
repz
out
cmp
mov
sub
pop
push
xchg
ret
pop
pop
jle
xor
sbb
mov
mov
ja
adcb
add
ret
xchg
out
test
pusha
rclb
push
push
ljmp
fucomip
or
sub
jmp
aaa
loope
and
mov
shrw
xor
dec
loope
lods
xor
dec
mov
xchg
js
and
mov
imul
nop
ret
cmp
out
outsl
or
aam
lret
imul
jno
test
push
inc
push
push
or
jmp
add
popa
cltd
lret
into
imul
adc
and
addl
addl
xchg
sahf
out
mull
cmpb
inc
fadds
mulb
dec
cs
testb
fsubl
fxch
lret
jecxz
inc
or
sbb
mov
cli
adc
ret
jge,pn
sub
adc
mov
xor
into
scas
sbb
jne
cli
outsb
adcl
decb
scas
pop
lret
or
add
rcl
repz
lahf
int
pop
dec
repz
jl
nop
inc
sbb
aam
mov
std
push
jns
push
mov
ds
mov
fcomps
pop
movsl
cmpsl
repnz
mov
pop
dec
or
jns
loop
daa
push
xor
mov
ficoms
xor
rcr
repz
mov
fisubs
push
dec
or
fwait
insl
in
clc
fcom
notl
lret
mov
mov
incb
pop
or
push
ljmp
and
cmp
sub
mov
imul
movsb
gs
inc
mov
in
int3
mov
or
push
sbb
cs
jno
mov
lods
pop
pop
movsb
lahf
jmp
insl
jmp
rcrl
or
inc
fsubp
pop
push
sub
cmp
jns
arpl
pop
std
dec
sbb
pop
ret
pop
inc
xor
aam
test
pop
clc
push
mov
dec
push
bound
xor
out
xchg
arpl
scas
cmp
pop
insb
adc
cltd
in
iret
mov
insb
les
ja
lds
sbb
mov
mov
cmp
fsubr
lcall
std
lahf
ror
mov
scas
jl
jbe
jmp
mov
or
outsb
loopne
mov
pop
inc
xchg
push
sub
sub
jl
fdivrs
dec
adc
pushf
movsb
rcrl
out
pand
push
je
push
adcl
arpl
das
dec
js
pop
fidivrs
cmpsb
or
mov
clc
push
cmp
aaa
jmp
adc
pop
iret
jle
mov
xchg
jbe
cld
xor
sub
pop
xchg
lret
test
push
jl
pop
cmp
ret
outsb
xor
scas
mov
insl
movsl
subl
fnstcw
cmp
frstor
xor
loope
lods
out
sbb
and
pop
sbb
je
jno
cltd
insb
adcl
insb
je
mov
xchg
into
mov
dec
push
xchg
push
ss
loope
fdivrl
push
mov
sbb
jp
hlt
jb
push
pop
fistps
cmp
jno
push
add
dec
iret
mov
xchg
inc
mov
push
sub
and
das
pop
jl
std
cmp
aas
rorb
pop
icebp
insb
jg
or
mov
mov
pop
loopne
xchg
repnz
lods
mov
sub
fistpll
inc
insb
xor
adc
arpl
or
sbb
aad
inc
out
adc
sbb
mov
sbb
andb
mov
jp
jne
pusha
cmp
popa
push
push
and
xor
push
jno
mov
dec
sub
cld
mov
push
push
shl
shl
decb
adc
dec
lds
or
mov
xchg
pop
jle
fstpt
bound
xchg
xlat
in
adc
pop
jns
push
adc
rcl
push
fidivrs
stos
test
inc
arpl
fs
shlb
mov
insl
jecxz
mov
loope
idivl
mov
inc
push
enter
jge
aas
jp
jb
addr16
pop
xor
ficoms
xchg
hlt
pop
pslld
jno
aaa
push
jnp
mov
shrb
pop
stos
or
sub
arpl
pop
pushl
lret
pop
mov
jp
ficompl
mov
cs
enter
add
movl
lods
sti
roll
or
test
scas
pop
nop
fwait
add
xchg
xchg
repz
sbb
adc
adc
fwait
or
mov
clc
push
mov
outsl
or
adc
pop
adc
loope
jno
mov
icebp
arpl
jae
dec
notb
mov
sbbb
cmp
mov
js
imull
cwtl
or
inc
jns
jb
out
cmpl
sub
insl
xor
adc
xor
mov
xlat
out
dec
pop
test
mov
inc
or
sub
xor
sub
test
dec
lods
mulb
hlt
push
aaa
pop
repz
xchg
add
dec
inc
cwtl
arpl
mov
js
les
fs
inc
xchg
loop
sahf
jb
jecxz
loopne
jno
jo
popf
sbb
mov
data16
inc
outsb
cmpsl
ds
and
into
push
sarb
dec
cmp
adc
jg
lahf
pop
stos
loop
sub
adc
pop
push
in
sub
aad
jmp
or
mov
sub
pop
cmp
cmp
lret
mov
out
cltd
xchg
xchg
cli
lods
sbb
movsl
pop
xor
addb
fwait
inc
hlt
mov
ds
or
ljmp
push
std
adc
iret
gs
notb
or
popf
clc
notl
fldt
mov
jp
sub
mov
daa
jp
pop
lock
dec
mov
pop
cmpsb
js
adc
lock
add
jae
jle
and
ret
sar
or
cltd
push
mov
mov
pop
mov
nop
scas
jge
inc
aad
add
lret
in
bound
shll
into
ret
andb
andl
xor
inc
ret
pop
int3
lods
into
add
imul
push
adc
pusha
mov
inc
adc
push
jmp
insb
sbb
lods
push
les
ds
arpl
in
push
mov
jmp
loope
stos
mov
and
lcall
cmp
cli
aas
gs
dec
movsl
mov
gs
lcall
nop
pop
movsb
aad
data16
movsl
stc
std
push
ja
stos
jl
inc
cwtl
icebp
pop
mov
jbe
cs
lea
sub
loop
mov
insb
repz
inc
pushw
shrb
aam
mov
sub
dec
aad
sub
orl
or
jp
in
and
adc
stos
mov
je
xor
pushf
xchg
push
pushf
idivb
imul
ror
xchg
rorl
mov
dec
adc
int3
mov
mov
jmp
adc
mov
add
scas
test
xchg
pop
outsb
iret
push
pop
cmc
dec
aas
xchg
faddl
das
call
add
cmp
push
loopne
mov
inc
dec
mov
cmc
sub
pop
mov
inc
insl
push
jne
jns
sbb
cltd
cmpsl
cmp
adc
pop
push
nop
out
fwait
sahf
daa
rcrb
lret
cld
adc
fcomp
and
mov
push
mov
push
mov
jmp
arpl
repnz
and
je
jl
rorl
pop
inc
push
xchg
fmull
or
xchg
fs
push
xchg
cmc
adc
clc
dec
jnp
outsb
cmp
addl
push
ret
xchg
scas
jmp
xlat
push
jns
pop
push
cs
mov
push
xor
lcall
sahf
sbb
and
dec
out
shrb
data16
into
fldcw
aam
adc
out
pushf
inc
aas
cmp
fisttps
mov
adc
jp
pop
mov
xchg
mov
jmp
jnp
xchg
daa
xor
and
mov
cmp
or
in
js
ds
pop
mov
test
mov
cmp
mov
ja
dec
mov
lret
lods
test
cmpsl
jp
cmp
dec
lcall
push
jmp
in
aad
mov
dec
adc
cmpsl
arpl
in
addr16
xor
cli
and
arpl
aaa
dec
cwtl
cli
xchg
shll
xchg
lret
cmp
rol
into
cwtl
push
mull
mov
sahf
shll
mov
dec
or
subb
loope
insl
xorl
push
sarl
xchg
mov
jno
adc
cmp
movsl
lock
lods
add
pusha
jecxz
inc
popf
pushf
das
mov
jecxz
sbb
and
mov
lds
push
out
cli
dec
inc
push
pop
insb
push
pop
in
jecxz
or
or
inc
out
push
ret
add
mov
fucomip
gs
cmp
cli
add
adc
xchg
pushf
cmp
dec
repnz
mov
push
popl
push
ja
clc
ljmp
jae
cmp
cmp
addl
clc
jnp
les
dec
ret
lret
in
aas
cmp
push
rcrl
xor
xor
mov
bound
mov
or
sti
or
adc
mov
mov
push
das
lcall
pop
aam
dec
cwtl
out
out
inc
push
rcrb
shlb
int
repnz
lods
scas
xchg
mov
mov
adc
xchg
mov
dec
jbe
dec
ds
jo
sbb
jmp
test
fwait
mov
jge
loop
ret
or
and
lods
pop
call
or
fcomps
js
sbb
push
std
fdivr
xchg
or
and
in
loope
xorl
adc
shl
js
aas
stos
pop
xor
xchg
xchg
mov
mov
bound
jp
inc
int3
xchg
inc
scas
jnp
sbbb
xchg
sub
mov
jmp
sub
adc
inc
dec
xsha256
cmpsb
xchg
into
push
adc
fadd
bound
push
repnz
dec
divl
add
repnz
jnp
xlat
pusha
add
mov
push
ljmp
ret
or
insb
inc
push
mov
xchg
sbbl
scas
arpl
mov
sub
jp
jg
icebp
es
push
dec
jl
sbb
and
fadds
ficompl
sahf
mov
xchg
aad
xchg
int3
ds
in
lods
cmp
fldl
push
icebp
xor
data16
pmulhw
cmp
mov
mull
dec
mov
sub
mov
adc
sti
adc
add
es
loopne
daa
xor
cmpsl
lea
or
jae
std
lock
add
shr
das
sub
push
test
sub
cwtl
xchg
pop
push
push
and
test
jmp
xor
les
pop
cmp
sti
pop
ja
xchg
push
sbb
cltd
loope
sub
xchg
sub
rcrb
dec
xchg
test
les
shll
stos
sbb
push
mov
inc
sahf
adc
sahf
mov
dec
mov
roll
inc
inc
xor
outsb
sahf
outsb
mov
outsb
pop
lods
popa
test
push
dec
adc
xchg
andps
xlat
push
in
in
jnp
dec
ja
pop
rorb
fsts
cmp
call
test
xor
cs
loope
addr16
scas
out
dec
movsb
dec
js
roll
adc
lock
ficoms
dec
xor
pop
shr
sti
sbb
fwait
jmp
push
ljmp
sbb
sub
fstps
jl
loope
lock
aaa
idivl
mov
sub
lahf
dec
push
or
movsl
pop
dec
inc
mov
mov
into
add
or
sahf
inc
push
cmp
and
sub
cmpxchg
push
mov
dec
imul
pop
jnp
ljmp
idiv
mov
addb
and
mov
popf
ljmp
call
sub
sbb
sub
insb
cmc
js
test
cmpsb
add
stos
sub
xchg
mov
jne
das
fildl
jno
sarl
xchg
fcoms
mov
loop
cmpsl
jb
xchg
fstpt
out
xchg
je
pop
xchg
add
or
cli
inc
pusha
adc
inc
xor
sub
dec
shlb
lret
daa
adc
lcall
cmp
loope
push
into
fists
xchg
pop
fldenv
insl
enter
sar
icebp
scas
lcall
das
push
cmpl
push
push
pop
inc
sbb
test
mov
popf
je
push
loop
jae
mov
or
pusha
adc
mov
out
les
and
aaa
loopne
rcrb
push
out
testb
aam
shrb
test
leave
nop
out
dec
cmp
test
lcall
and
js
aam
jo
mov
jecxz
push
sub
mov
sbb
lds
shlb
xchg
lds
loope
pop
arpl
pop
jmp
es
rcll
insl
adc
outsb
lret
loopne
jno
mov
or
and
daa
cmp
outsb
adc
inc
hlt
jns
es
addr16
sbb
mov
mov
cmpb
stos
dec
sub
adc
enter
rolb
inc
pop
loopne
loop
insl
outsl
xchg
faddl
jg
cmp
cs
sbb
mov
mov
or
sbb
xor
test
loope
add
and
dec
movsl
int
cs
mov
mov
jmp
inc
and
adc
inc
aas
int
sbb
scas
mull
clc
nop
jp
and
sbb
xorb
mov
adc
adc
pushf
mov
inc
xor
fwait
enter
out
push
js
adc
mov
sbb
adc
inc
ds
push
dec
in
adc
jno
sub
mov
js
dec
lret
aas
dec
xor
movsb
lea
fdivl
or
pop
jge
sub
mov
jns
pop
popa
rcr
xchg
xor
enter
clc
repz
mov
or
push
and
bnd
xchg
movl
mov
mov
and
push
repnz
cmpsb
iret
cltd
mov
dec
ret
sub
fiaddl
in
mov
jnp
rclb
imul
xor
add
pusha
sbb
and
in
push
sbb
or
or
jne
int3
fdivrs
sbb
bound
sub
cmc
les
cmpsl
je
into
sahf
add
pusha
jnp
mov
cmp
cmp
dec
adc
dec
mov
test
push
push
xor
jno
mov
inc
xor
pop
adc
cmpsl
adc
push
stos
int
loop
popf
pop
iret
psraw
popa
dec
lahf
push
or
test
mov
and
sbbb
and
pop
mov
test
xchg
out
outsl
cmp
daa
xor
stos
scas
mov
push
repnz
lods
imul
xchg
icebp
jns
or
dec
cmp
jae
push
push
inc
adc
fsubr
insl
cli
je
test
mov
or
scas
das
fists
sarb
push
rolb
and
lret
push
push
das
dec
js
pusha
and
xchg
sbb
adc
jbe
dec
dec
push
arpl
mov
je
dec
sti
sbb
jo
mov
xchg
xchg
jle
adc
les
xlat
lock
and
push
dec
in
sub
leave
xchg
leave
enter
push
jp
test
sbb
outsb
jmp
stos
pop
push
add
clc
mov
adc
mov
jp
das
and
mov
nop
adc
dec
mov
loope
or
mov
sbb
or
test
push
push
iret
adc
jle
dec
movsb
mov
je
idivl
push
jmp
sbb
into
sti
scas
es
or
xchg
shlb
sub
mov
aam
or
pop
dec
jge
and
shll
sub
lret
lret
dec
jbe
pop
xor
pushf
pop
push
popf
sbb
shlb
or
pop
outsb
mov
fnstcw
lahf
mov
sub
sbb
jle
jb
nop
dec
inc
add
or
cwtl
xchg
mov
mov
loop
lock
cmc
imul
cmpsb
shl
jg
pop
jb
lock
jbe
adc
dec
jbe
pop
les
lea
lea
bnd
inc
out
and
popf
adc
add
and
xor
xchg
les
popf
int
cmp
sub
sahf
mov
mov
scas
scas
jns
jle
or
pop
pushf
mov
pop
pop
in
push
xchg
nop
pusha
inc
int3
int3
fdecstp
xor
mov
popf
push
jns
aam
pop
fisttps
mov
push
jp
inc
fsubrl
iret
jbe
pop
pop
shll
cmp
push
dec
cmp
and
dec
and
jbe
rorl
cmp
lock
in
loopne
cmp
pop
xor
cmp
push
cld
jae
movsl
mov
lret
push
xorl
mov
push
xorb
and
mov
mov
mov
mov
arpl
mov
rclb
je
lret
popf
jle
cmp
push
inc
sbb
sub
pop
sbb
push
lods
mov
adc
dec
stos
jl
push
scas
daa
pop
adcb
cmc
stos
dec
xchg
in
test
cwtl
jl
cmp
imul
arpl
and
sub
cmp
pop
push
data16
push
aad
scas
or
into
leave
or
pop
in
je
inc
cmp
dec
hlt
subl
inc
bound
in
movsl
hlt
pop
mulb
test
cmpsl
aas
dec
jecxz
addr16
dec
test
and
das
or
cmpsl
pushf
xor
mov
adc
iret
repnz
xchg
in
inc
xor
or
icebp
and
dec
mov
shll
jb
jl
call
add
repz
int
xchg
mov
mov
stos
sahf
push
adc
or
shll
popa
jp
movsb
jo
push
inc
xor
data16
addb
sahf
sub
mov
jb
lds
ja
loope
sbb
inc
into
push
mov
adc
inc
std
mov
xor
add
pop
jg
ja
jmp
pushf
add
xchg
js
dec
sub
bound
and
mov
add
dec
jmp
es
mov
mov
movsb
pop
les
jle
cmpxchg
mov
cwtl
testl
andl
xchg
cltd
nop
icebp
push
jge
out
rorb
or
aas
sub
fcmovne
cmp
and
stos
pushf
les
leave
sub
mov
popf
aam
cmp
repnz
lea
mov
rcrl
xor
fs
dec
mov
je
dec
jg
arpl
xchg
and
mov
xchg
imul
sbb
inc
shr
xchg
add
clc
push
adc
cli
rcrb
mov
or
pop
in
cmp
jg
outsl
add
rorb
sbb
cmp
mov
addr16
xchg
pop
aas
cltd
dec
push
mov
lcall
and
daa
xchg
aam
aam
ret
xlat
fs
adc
shll
mov
fwait
jg
cmp
pusha
lods
jecxz
xor
in
jecxz
loop
adc
in
inc
or
xor
jnp
aam
add
cltd
jge
icebp
sbb
call
or
insb
jmp
imul
lret
push
adc
jae
push
repnz
in
es
sub
icebp
cwtl
sub
imul
ficoms
rolb
jecxz
enter
mov
cmp
push
pop
sbb
mov
and
add
fdecstp
dec
push
dec
decl
pushf
sub
mov
flds
test
inc
adc
inc
shl
xchg
pop
fs
jg
xchg
xchg
int
inc
pushf
loop
push
mov
sbb
lea
push
cld
daa
lretw
les
mov
mov
push
dec
xchg
mov
bound
mov
cmp
and
mov
mov
outsb
dec
rcrb
sbb
mov
repz
dec
add
mov
aaa
xor
ss
test
loop
jb
push
ret
int
push
or
push
push
adc
pop
sbb
negb
sbb
xlat
jns
fsubrs
push
imul
negl
ja
jnp
add
shl
ja
fsubrs
jle
fldcw
mov
jmp
push
fisttps
and
ret
rclb
dec
xor
adc
dec
test
push
xor
mov
add
cld
push
xor
xchg
hlt
ds
addr16
fldl
cmpsl
std
xchg
fsubrp
xor
inc
in
fsubl
and
add
mov
fsub
fmuls
movsl
mov
adcb
cmp
sub
mov
fdivrp
dec
push
jmp
mov
cwtl
xchg
loopne
sub
mov
pop
pusha
add
insl
mov
jg
rcr
ljmp
jecxz
insb
mov
packuswb
lds
jno
pop
test
rcrl
jae
shlb
pushl
mov
dec
mov
and
jmp
pop
jb
xor
in
jge
out
mov
sbb
add
sbb
inc
push
and
nop
in
sbb
cmp
inc
loop
int
push
xor
enter
bound
push
stc
es
pusha
jmp
xchg
das
push
dec
arpl
shl
repnz
add
cwtl
mov
sbb
cmp
ficompl
sub
add
leave
inc
jecxz
push
ljmp
and
or
xchg
mov
mov
pop
aaa
out
mov
es
bound
int3
pushf
fs
icebp
sub
mov
push
cmc
or
inc
sub
pushl
int3
sbb
fxch
or
repz
loopne
fstpt
int
or
xor
add
and
addr16
popf
out
aaa
add
push
mov
push
xchg
lret
xchg
nop
sub
in
cmc
mov
scas
dec
xchg
addr16
pusha
loope
mov
sub
xlat
xor
sbbl
xchg
inc
insl
mov
stos
xchg
sub
loope
inc
xor
push
lods
fiaddl
sub
inc
imul
xchg
sti
and
inc
dec
pushf
or
aas
out
push
xchg
mov
xchg
mov
inc
ljmp
test
cs
xor
inc
xchg
add
mov
xchg
lods
sbb
rcrl
pusha
cmp
imul
and
jg
inc
stos
mov
pop
outsb
les
rcr
jo
mov
adc
pop
fidivs
pop
aam
mov
aam
add
inc
scas
sti
push
xchg
add
add
negb
inc
xor
out
repnz
cwtl
mull
leave
test
add
fadds
outsl
cmp
sbb
mov
aam
push
sub
ja
mov
adc
mov
jb
ljmp
adc
rcr
sbbl
stc
or
insl
test
in
mov
mov
inc
xchg
push
add
pop
lock
int3
cmp
xchg
dec
sub
int
pop
adc
sbb
call
xchg
scas
ret
aaa
ret
int3
adc
mov
jno
and
lret
cld
adc
stos
xchg
inc
dec
mov
dec
frstor
cs
add
incl
movsb
pop
mov
pusha
nop
add
outsl
insb
ret
ja
std
movlhps
mov
lahf
or
addl
cmp
sahf
push
push
shll
dec
jb
int3
xchg
pop
inc
sarb
cmp
jmp
adc
push
cld
ret
cmp
add
or
flds
arpl
xor
or
imul
sbb
sbb
js
insl
mov
pop
xchg
daa
test
sub
cltd
fwait
in
test
in
movsb
push
arpl
sbb
pop
mov
fiadds
movsl
aaa
lea
adc
xchg
bound
nop
int3
sbb
mov
out
dec
mov
dec
xlat
sbb
inc
fsts
scas
shr
dec
inc
xchg
dec
ljmp
pop
mov
out
mov
jp
pop
arpl
and
jmp
mov
scas
and
fcomps
nop
mov
push
and
jnp
outsl
xchg
push
cmp
mov
lcall
nop
pop
mov
sub
inc
ret
shlw
dec
xchg
gs
jmp
inc
sbb
xor
mov
sbb
push
lds
push
dec
fistpll
cmc
dec
scas
adc
shll
xlat
sbb
subb
xor
mov
addb
insl
xchg
add
cld
ja
pusha
lret
outsl
xchg
into
dec
dec
aam
les
mov
call
jnp
mov
push
jg
xchg
add
imul
popa
adc
movsl
fstpt
shl
or
sub
arpl
mov
call
insb
jne
and
push
loope
mov
outsl
jmp
pop
pop
loopne
sbb
repz
mov
in
fisubrl
sahf
test
jg
std
sbb
jnp
or
xor
mov
mov
mov
cmp
jmp
add
in
and
repnz
adc
inc
cli
push
pop
das
xchg
loop
xchg
clc
mov
dec
adc
mov
xor
pop
les
data16
lock
sub
jno
add
pminsw
xor
idiv
imul
and
cmc
dec
mov
add
inc
pop
pop
adc
imul
leave
mov
mov
pop
popa
dec
faddl
lea
mov
pop
fistpll
mov
xor
inc
sbb
xor
pop
jl
outsb
stc
imul
mov
xor
mov
test
aas
out
clc
xorl
dec
fdivrl
mov
aam
push
xor
out
mov
out
or
inc
push
test
dec
adc
or
dec
lret
ficoms
inc
pop
pop
lock
pop
sbb
xor
push
sbb
mov
aaa
in
dec
xchg
out
stos
sub
xchg
cmp
adc
dec
or
pop
imul
dec
dec
out
mov
idivl
cmp
in
xor
sbb
pop
sub
xor
sbb
dec
xchg
sbb
sub
or
iret
lahf
sbb
bound
sbbb
test
mov
sbb
cmp
xor
and
enter
or
sbb
and
divl
fwait
addr16
mov
dec
jge
sbb
or
pop
adc
aam
bound
outsl
cld
pushf
dec
aad
or
mov
out
stc
push
dec
cmp
outsb
xlat
movsl
push
popf
hlt
lods
fldcw
and
cmpsb
cmc
lret
stos
aas
lock
xor
dec
in
or
subb
mov
test
out
fcomps
add
pushf
mov
mov
cmp
mov
int3
push
lret
mov
aad
xor
arpl
and
imul
fcomps
das
decl
jae
sbbl
orb
adc
cmp
push
pop
ljmp
jge
and
test
mov
xor
mov
je
fildll
dec
lcall
xlat
and
shrb
data16
cli
pusha
pop
xor
cld
jle
mov
and
and
dec
mov
in
or
dec
leave
cmpsl
repz
pop
icebp
popf
leave
pop
sbb
add
push
mov
mov
add
imul
and
xchg
push
testb
or
ret
addl
push
mov
rclb
in
dec
outsl
cmp
jbe
out
mov
jo
sbb
push
lcall
insb
lret
imul
add
mov
ljmp
mov
in
jae
jae
lret
je
mov
dec
add
pop
xchg
jmp
cmc
cmp
push
add
inc
adc
ss
ss
iret
iret
adc
sbb
cmc
les
mov
push
adc
inc
out
test
or
aad
pop
dec
jb
sub
cwtl
add
dec
and
xchg
cmp
repnz
shll
stos
dec
pop
rcr
ja
mov
mov
mov
scas
mov
add
adc
movsb
ds
outsb
jle
push
sub
pop
push
out
les
iret
mov
jns
mov
mov
xchg
inc
pop
lret
fs
lods
xlat
ret
jmp
adc
inc
fdivrp
adc
jmp
cld
jp
and
out
dec
movsb
xchg
scas
xchg
mov
xor
imul
xlat
or
inc
inc
jecxz
mov
inc
orl
add
sarl
mov
add
aas
mov
inc
ret
xlat
dec
or
inc
pop
notb
int3
mov
jo
out
sub
jmp
stc
lods
dec
or
mov
das
or
add
or
inc
iret
stos
loopne
xchg
cld
push
lea
and
ror
jne
jno
dec
jns
mov
mov
jne
pop
fstps
insl
inc
mov
sub
sub
and
xor
add
xor
repnz
pop
or
mov
stc
fwait
push
and
scas
ljmp
subl
sbb
sar
jmp
into
dec
xchg
cld
and
push
and
xor
or
aaa
lret
movsl
pop
mov
ds
clc
lahf
jl
stos
lcall
adc
fnstenv
jbe
mov
insb
and
mov
mov
adc
out
js
mov
lds
cld
lret
push
dec
cmc
xor
mov
dec
pop
xor
xchg
test
jle
add
testl
repnz
sti
dec
pop
stc
sub
xor
or
out
push
xor
je
es
inc
mov
cmpsl
ljmp
testb
shl
xchg
repnz
fldenv
sbb
add
push
insb
fwait
js
mov
sbb
popa
xchg
sbb
sub
xor
or
jns
jl
jae
in
add
xchg
hlt
data16
jno
mov
movsl
jo
xor
out
fnstsw
popa
cli
iret
push
mov
fcmovb
loope
fcoml
pusha
pop
jbe
int3
add
mov
lods
xor
mov
nop
aaa
and
dec
in
or
xchg
mov
jecxz
dec
aas
lea
into
jbe
jp
fcmovbe
jb
outsl
push
pop
cmp
divb
shlb
jb
aas
jg
or
sub
aaa
daa
adc
mov
add
mov
mov
lcall
lea
filds
adcl
xchg
fprem
cmp
mov
add
movsb
push
mov
dec
mov
sub
lods
jg
mov
cmp
mov
cwtl
xchg
int
pop
lock
jmp
mov
jle
int3
arpl
inc
cmp
outsb
mov
dec
hlt
lret
add
das
rcr
cmpsb
xchg
enter
pop
out
cmp
add
outsl
rolb
mov
push
sahf
push
push
push
xor
cltd
sub
enter
cli
sub
idivl
daa
xor
push
loopne
outsl
cmpsb
xchg
push
imul
std
mov
daa
lods
ja
shll
out
scas
cltd
push
pop
movsb
jnp
hlt
aam
jo
pop
pushf
fucompp
mov
jb
repnz
movsb
out
scas
push
das
ret
adc
hlt
test
mov
add
or
je
out
cmp
test
or
cld
sbb
push
insl
arpl
dec
xorl
fnclex
pushf
push
push
popf
sarl
lods
pop
outsb
scas
sbb
pop
jecxz
pop
jne
and
popf
pop
imul
pop
lret
test
fdiv
and
stc
adc
pop
mov
push
sbb
pop
mov
enter
dec
mov
xlat
pop
clc
push
dec
rorb
scas
sub
repz
loop
dec
test
mov
popa
dec
push
xor
enter
add
push
outsl
int3
clc
sub
dec
imul
pusha
mov
xor
jle
push
fs
push
push
inc
notb
sbb
or
cmp
dec
icebp
push
mull
std
cmp
mov
push
or
or
andb
imul
pop
xchg
cmc
adc
jns
sbb
iretw
ret
jb
dec
insl
lret
sbb
std
jne
add
data16
adc
sub
or
jno
add
or
or
pop
aam
mov
jae
lret
xlat
movsb
pop
in
das
adc
pop
and
xchg
test
jne
loopne
sbb
add
cld
xchg
out
add
pop
inc
xlat
and
mov
push
adc
add
out
inc
mov
repz
ss
mov
sbb
dec
adc
add
sbb
and
mov
mov
mov
scas
dec
cli
sbb
imul
aaa
test
pop
xor
mov
adc
jp
adc
mov
and
cmp
int3
movsl
je
subb
xchg
popf
inc
cmpsl
test
das
cmp
loop
xorl
aad
repnz
push
or
rorl
mov
cwtl
pop
cmc
out
and
out
or
sbb
in
fcom
movsb
inc
jecxz
push
mov
rol
lods
fdiv
icebp
mov
sbb
repnz
jno
xchg
enter
adc
cmp
test
xor
popf
push
js
pop
push
in
xchg
xchg
cwtl
loop
dec
movsl
int
or
push
and
mov
cltd
scas
test
mov
popf
and
adcb
stc
nop
ss
imul
fildll
movb
xchg
pop
int3
or
mov
or
xchg
inc
fldenv
xor
movsb
mov
mov
fsubl
jns
cmp
jb
push
jg
iret
fldt
xor
xor
cmpl
sahf
mov
jecxz
inc
add
int3
inc
insb
cmp
int3
cmp
cmp
lret
fwait
cmp
mov
cmpsb
imul
inc
and
add
hlt
inc
out
xchg
push
sbb
xchg
jp
and
inc
lret
cmp
lds
out
sub
pop
cli
aad
sbb
leave
mov
test
jge
rolb
jmp
jbe
ret
pop
test
jl
xchg
test
pop
xor
push
mulb
add
lahf
mov
ds
insl
cltd
bnd
mov
inc
mov
stos
inc
cmp
mov
inc
aaa
shlb
jb
ret
lods
xchg
jae
sbb
outsl
cs
jns
es
dec
gs
inc
imul
les
pushf
dec
mov
inc
mov
sahf
lret
gs
movsl
cmp
pop
movswl
loope
pop
cltd
mov
lea
jns
adcl
or
mov
ljmp
enter
push
leave
ds
fsub
inc
inc
rcl
fwait
mov
sub
jnp
test
pop
stos
cwtl
cmp
push
inc
cmp
xor
pop
divl
je
add
bswap
in
pusha
cmp
xchg
faddl
in
ds
xchg
repz
imul
loope
mov
cs
dec
into
leave
ret
movsl
fldl
mov
cmpsl
xchg
arpl
jae
sbb
sbb
dec
sbb
popf
bound
mov
jmp
xchg
adc
out
mov
icebp
pop
and
fbld
and
imul
fidivs
fisttpll
add
xor
sbb
lds
xchg
mov
out
aad
cmc
jae
je
inc
xchg
ret
out
xor
cmpsl
ret
pop
cli
push
or
inc
mov
mov
andb
mov
push
scas
dec
lock
mov
arpl
mov
xor
aad
xor
cmpsl
add
sub
inc
mov
sarl
popa
stos
ficoms
add
mov
fstl
push
push
outsl
ror
cmp
push
test
push
xchg
sub
ds
sub
and
sub
rol
pushf
sahf
rclb
shrl
insl
bound
mov
pop
rcr
jle
std
sbb
or
cmc
push
mov
and
in
sub
jns
in
add
fisttpll
sarl
jae
jle
popa
sbb
and
in
jnp
mov
cs
push
test
adc
pop
xor
cmpsl
pop
leave
xor
sbb
and
jge
push
in
inc
sub
cwtl
push
mov
shll
test
pushf
sbb
into
jg
pop
shlb
dec
inc
xchg
xor
rcl
mov
sub
dec
pop
out
xchg
jns
aam
in
xor
incb
fisubl
dec
and
sbb
mov
int
sub
aam
and
repnz
imul
imul
pop
add
jb
mov
ret
fbstp
mov
stos
ja
ret
sahf
mov
pusha
xchg
jl
idivl
sbb
arpl
imul
xor
xchg
rolb
pop
les
or
push
pop
jbe
in
in
cmpsb
out
inc
jno
fcmovu
out
jmp
imul
mov
ficompl
mov
mov
stc
insl
mov
rorl
mov
sbb
jp
nop
push
xor
xor
in
je
cld
loopne
or
inc
sarl
inc
sbb
and
jecxz
in
and
jge
pop
sbb
hlt
cmp
int3
mov
mov
sbb
sbb
push
jge
jg
and
pop
lds
test
test
int3
jns
adcl
xchg
bound
cmp
pop
ds
stc
mov
es
loopne
adc
dec
std
and
push
daa
in
xor
mov
data16
mov
mov
push
xor
jge
std
aas
or
dec
outsb
xor
sbbl
scas
inc
or
cmp
jg
not
pop
push
mov
inc
cmp
jle
arpl
mov
adc
pop
paddw
dec
add
call
sub
mov
dec
mov
xor
clc
adc
scas
mov
scas
dec
pop
sbb
push
std
push
xchg
sarl
inc
dec
xor
int
inc
pop
mov
mov
aam
popa
inc
mov
les
iret
in
inc
loopne
push
pop
inc
push
orps
mov
rcrl
mov
movsl
movsl
bswap
lods
into
mov
icebp
xchg
inc
push
or
inc
xor
andb
pop
loope
sub
mov
add
xchg
dec
pusha
sub
sbb
cmp
sbb
roll
fiadds
mov
mov
sbb
int3
pop
cmp
mov
add
rclb
leave
adc
lret
aad
cmp
and
cmp
mov
ror
icebp
cmp
add
jns
adc
mov
test
frstor
jp
jb
movsb
fistps
addb
mov
insl
nop
xchg
paddq
cs
inc
insb
or
mov
loop
sub
rolb
push
sbb
inc
cli
sub
and
aaa
cmp
cmpsl
xor
clc
bound
rcl
sar
test
mov
xor
mov
mov
test
cmpb
jno
imul
cmpsl
mov
push
adc
std
inc
addr16
cmpsl
cmp
mov
sbb
pop
dec
je
fsubl
mov
cmp
or
dec
pushf
jno
push
stc
xchg
int
fsubl
negl
sbb
sub
insl
imul
lret
mov
pop
cwtl
mov
lock
loop
cld
pop
aaa
nop/reserved
mov
or
cmp
lea
gs
stc
xlat
sub
and
inc
fcmovne
xor
sbb
sbbl
hlt
sbb
sbb
push
xor
xchg
fcom
in
mov
xchg
aam
cmp
jg
mov
mov
dec
ficoms
scas
pop
mov
int3
jo
movsb
pop
jnp
ss
js
imul
ds
sbb
mov
mov
les
jle
sbb
stos
mov
dec
adc
push
add
fsubrl
mov
mov
fstps
or
dec
test
add
fcmove
mov
and
mov
das
out
cmp
loopne
xchg
std
jmp
fistpl
push
fwait
adc
dec
sbb
lret
sbb
sub
test
insb
push
orl
sub
pop
add
test
fcmovu
inc
mov
lds
cmp
jge
test
mov
xchg
fdiv
push
mov
das
sarl
lock
xchg
rcll
sbb
dec
arpl
push
add
adc
pop
push
xchg
fidivs
cs
xor
sub
fstpl
ret
sub
dec
xor
push
inc
adc
add
adc
out
fbld
ror
lret
stos
push
or
push
jmp
je
sti
sbb
nop
jle
incl
out
add
mov
lea
and
sub
and
push
cwtl
mov
shlb
lcall
std
push
jns
push
push
jns
js
jg
clc
aam
outsl
imul
fmuls
dec
cmp
pop
push
cmc
and
call
xchg
inc
adc
jns
enter
movsl
popa
fs
mov
inc
mov
negb
sbb
pop
aaa
inc
sub
test
dec
int
mov
mov
cld
fnsave
cs
adc
popa
cwtl
dec
dec
jl
sub
mov
sub
pop
ret
ret
lock
push
mov
jbe
adc
xchg
jmp
push
je
lret
inc
pop
mov
jle
dec
shrl
jl
cmc
sub
out
or
jle
add
xchg
jno
pushf
aad
iret
jmp
xchg
jnp
mov
fs
cmp
fisttpl
scas
outsl
ret
aam
jno
les
jbe
adc
inc
adc
jb
cmp
aaa
das
or
adc
in
test
mov
je
mov
jb
mov
xor
adc
cmp
movsl
iret
outsb
lret
push
leave
push
scas
call
vpsrlw
sbb
and
mov
pop
dec
sub
sub
xchg
xor
xorl
hlt
jae
fwait
mov
adc
cwtl
push
mov
adc
pop
popa
xlat
test
xchg
nop
in
push
sbb
push
fs
pusha
ljmp
shlb
push
adc
jb
aad
insl
mov
dec
scas
js
push
sahf
outsb
out
sub
adc
in
mov
push
ss
cmp
and
mov
int
adc
mov
dec
or
imul
adc
das
xchg
ret
in
pop
pop
push
movsl
sub
inc
push
add
ja
add
or
inc
sub
push
sub
movsl
ljmp
enter
call
rol
push
add
xchg
mov
inc
mov
push
xchg
adc
mov
leave
das
aas
out
xchg
sbb
out
sahf
sbb
cwtl
xor
loopne
fisubrl
rcrl
cmp
leave
and
push
dec
push
cmp
add
std
addr16
adc
inc
pop
mov
cmpl
nop
cld
push
arpl
mov
leave
xchg
hlt
testb
inc
addr16
mov
leave
jp
lods
jb
adc
inc
test
mov
imul
xchg
dec
add
divb
add
test
sbb
push
add
fmull
roll
or
dec
and
dec
sub
adc
ds
iret
push
imul
pop
push
inc
mov
push
jmp
and
clc
pop
popa
xchg
and
idivl
push
cmp
or
xchg
sbb
insl
pop
xchg
and
scas
mov
fs
mov
dec
jge
scas
orl
jge
xor
mov
test
mov
jmp
adcb
mov
stos
mov
cmp
addr16
lcall
xchg
fnstenv
mov
jle
jb
xchg
mov
loope
sbb
ss
dec
xchg
jmp
dec
adc
insb
jmp
clc
cmpsl
push
add
std
add
aaa
and
les
pop
mov
mov
popf
repnz
loope
dec
mov
std
jno
dec
inc
out
sub
fsubl
pop
cpuid
mov
aad
mov
jle
mov
mov
xor
or
das
cmpsl
xor
inc
sbb
mov
out
sbb
xor
cs
stos
stos
divb
stos
inc
mov
loop
inc
inc
dec
jo
lcall
popf
jo
jg
in
cltd
enter
adc
mov
jbe
jecxz
push
test
or
pop
loopnew
mov
out
push
icebp
dec
repnz
jnp
adc
into
arpl
sub
push
mov
rorl
mov
mov
mov
ja
mov
popf
in
int
cmpsb
sti
test
mov
push
inc
sbbl
shr
mov
jae
ljmp
and
repnz
gs
pop
mov
fldl
loop
cwtl
loopne
jb
jo
test
add
pushf
imul
shrl
xchg
add
fld
mov
dec
pop
bound
xchg
sbb
hlt
fcoml
ljmp
add
fwait
mov
pop
adc
nop
sbb
fwait
add
lods
xlat
xor
imul
jmp
fldcw
dec
movsb
rol
in
rdpmc
fs
pop
addr16
mov
push
lods
in
cmc
inc
pop
int
testl
sub
mov
in
push
xor
or
gs
push
enter
pop
iret
sbb
out
push
jle
fs
shlb
scas
pop
in
adc
into
loop
pop
mov
lock
into
cmp
cld
les
mov
xor
loop
sub
push
push
fyl2x
xor
lock
dec
ds
pop
jo
icebp
lret
xor
pop
scas
xor
les
xchg
fnstenv
xor
push
fstl
out
cs
mov
imul
rclb
push
into
add
cmp
or
lea
in
xchg
jns
add
shrl
stos
xchg
fildll
pop
and
aad
add
dec
test
mov
ss
fisttpl
xor
stos
mov
or
ja
lcall
or
xor
setge
push
push
ret
sbb
push
lahf
mov
jb
js
sub
ljmp
mov
int
cmovo
sub
pop
xor
loopne
inc
sti
fistpl
pop
xchg
adc
lcall
ret
rol
jecxz
enter
xchg
add
pop
jmp
popf
pop
dec
outsb
push
xchg
adc
sub
sub
je
xor
scas
into
pusha
xor
and
pop
mov
push
outsl
push
jae
sub
ds
sub
out
xor
loopne
sub
add
imull
adc
fwait
mov
pop
repz
jno
aad
stc
sbb
pusha
push
jle
dec
pushf
jmp
mov
pop
pop
lock
jmp
push
jne
cwtl
call
lods
daa
mov
fstp
es
adc
in
cmp
test
out
lcall
scas
cli
hlt
sbb
jno
inc
test
arpl
in
into
fsubs
lcall
and
inc
mov
pcmpgtb
das
pop
cmp
xchg
xlat
push
iret
es
and
enter
adc
out
and
out
inc
xchg
xor
in
int
hlt
push
jl
cmp
mov
push
hlt
arpl
cmovbe
jno
stc
ret
les
lock
add
ja
ret
jle
xchg
mov
and
sbb
jl
inc
aam
sub
mov
jmp
mov
adc
sbb
and
xor
daa
adc
xor
jnp
jg
dec
mov
push
lahf
dec
pop
rclb
mov
mov
cmp
jl
js
stos
enter
testl
cmp
out
lret
aaa
mov
pop
mov
xor
mov
jecxz
sub
testl
mov
ss
lret
scas
adc
jns
ret
mov
inc
xchg
stos
or
or
ljmp
pop
pop
jge
lret
ds
lahf
and
adc
push
push
or
pop
popa
dec
inc
sbb
shll
sub
test
pop
jno
repz
mov
inc
xchg
mov
ret
dec
mov
sub
int3
sarb
or
push
pop
xlat
mov
std
pusha
sub
in
jnp
jmp
sub
or
xchg
cmpsl
icebp
inc
jbe
dec
cmp
add
je
iret
loopne
add
mov
cmpsl
fildll
loope
jnp
xlat
adc
mov
inc
push
pop
pop
cmp
xor
fcoms
paddusw
mov
aas
add
ficompl
test
shlb
sub
pop
xor
shlb
sub
mov
cmp
loope
pop
jbe
les
and
sbb
push
cld
pop
push
mov
xchg
dec
push
adc
adc
sub
cwtl
cmpsl
pop
mov
and
test
xorb
or
sbb
ja
ja
sbb
cmp
or
adc
xlat
aad
dec
inc
and
ljmp
mov
das
adc
dec
xchg
ret
fstpt
xorb
out
das
stos
sub
xorl
lds
ss
xchg
jmp
popa
push
push
adc
hlt
xchg
jp
rcr
adc
push
dec
dec
sahf
pop
or
pop
out
test
stc
nop
sbb
mov
idivb
call
int
repz
adc
sbb
dec
jp
rorb
inc
sub
test
jne
push
push
sti
cmc
inc
and
cmpsl
push
test
mov
push
push
popa
std
faddl
fcoml
mov
repz
inc
cmp
sbbl
mov
fucomip
xchg
xchg
insl
sub
cmp
rol
sub
data16
cltd
jae
lds
ds
sbb
mov
cmp
sti
int3
nop
sbb
xor
fldcw
loopne
jmp
hlt
dec
movaps
les
bts
mov
inc
rclb
bnd
adc
xchg
lret
ljmp
in
mov
mov
jle
jp
pop
cmp
jl
idivl
dec
fmuls
pop
cwtl
hlt
sub
sub
arpl
xchg
xor
mov
pop
and
dec
xchg
fstpl
movsb
daa
scas
mov
xor
inc
cmpsb
sub
adc
push
pop
cmp
dec
inc
add
flds
cli
das
sarb
jnp
fmul
and
loope
push
push
cli
cmp
pop
pop
mov
push
aam
fmul
rorl
mov
mov
cld
mov
inc
cs
xor
adc
mov
mov
mov
or
mov
or
xor
push
mov
ljmp
adc
sub
out
scas
iret
or
cmp
out
test
jmp
mov
rcrb
sbb
movsb
xchg
sbb
or
test
xor
cmp
push
add
push
xor
std
outsb
test
sbb
jb
xchg
movsb
add
mov
pop
rol
cmpsl
or
std
repnz
mov
pushf
jl
out
out
and
cmp
ss
pop
cmp
mov
adc
adc
or
icebp
xchg
lock
loope
cltd
pushf
add
jno
ret
push
sbb
test
mul
in
dec
push
mov
insl
je
into
lret
mov
jp
xor
test
cld
in
jne
xor
nop
add
roll
test
dec
or
xchg
cmp
and
sub
cli
test
lock
mov
stos
xor
test
shrb
push
in
sub
inc
subl
call
fdivs
push
add
aam
insl
mov
dec
add
xchg
ljmp
ffreep
push
ss
aad
jmp
adc
cmp
outsb
mov
test
xchg
xchg
and
mov
sub
mov
xchg
stos
inc
imul
xchg
movl
out
loope
cmp
push
jmp
movsb
pop
mov
push
loopne
xchg
jb
cwtl
mov
testb
pop
xchg
dec
inc
push
xor
icebp
dec
out
popf
lds
adc
pop
jg
sub
scas
ret
shr
and
jmp
inc
xor
mov
idivl
push
repnz
jb
jg
push
js
pop
mov
imul
xchg
add
mov
pop
pop
popf
and
aaa
and
xor
xchg
les
xchg
rcrb
subb
les
sub
sub
pop
cmp
les
fadd
push
faddl
xorb
out
in
dec
sub
adc
dec
xchg
add
add
cmpsl
mov
push
sub
stc
ret
scas
inc
push
lock
dec
cmp
outsb
mov
fwait
lds
add
int3
ret
add
in
xor
and
std
mov
adcl
mov
pop
js
adc
or
inc
cmp
test
mov
lea
mov
pop
jmp
jmp
cmpsb
decl
xchg
lret
push
mov
icebp
or
xor
dec
mov
pop
test
pop
movsl
adc
loope
xlat
call
rep
inc
add
cltd
in
jge
adc
imul
sti
lods
dec
inc
std
mov
jecxz
push
fimuls
insl
fists
sbb
xor
xchg
fidivrl
sbb
xor
shr
cld
gs
adc
popw
sbb
ljmp
push
cmp
pop
jmp
or
adc
mov
icebp
inc
cmp
or
mov
mov
dec
inc
popa
add
loop
mov
jns
adc
pusha
pop
shr
sti
jmp
add
repnz
sub
pop
lcall
scas
push
and
and
aad
dec
cmp
je
mov
in
sbb
es
xor
dec
repnz
pop
pushf
jns
ja
push
push
jne
test
ret
lods
aad
lock
mov
adc
jmp
mov
orl
push
scas
sbb
fwait
dec
mov
insb
fs
mov
pop
inc
adc
shrl
cmp
jg
and
xchg
fs
lods
push
pop
dec
pusha
pop
cs
repnz
outsb
sub
stos
pop
shrb
and
imul
cmpsb
and
jmp
sub
jnp
cmp
fs
cwtl
loopne
out
pop
scas
add
or
aad
lock
add
in
std
enter
loop
mov
adc
pop
xor
lods
movq
paddw
mov
inc
xchg
fwait
adc
mov
lds
outsb
lock
fcmovne
inc
stos
sub
dec
loopne
jae
clc
push
iret
lret
rcll
adc
shrl
pop
jbe
cmp
xchg
jbe
in
ss
mov
in
push
inc
adc
sub
sbb
mov
mov
jo
cmp
jo
roll
insl
sti
lods
inc
jns
cmp
popf
lahf
outsl
das
push
ret
inc
push
push
inc
outsl
push
add
orl
and
fdiv
push
jp
or
mov
cmpl
repnz
and
dec
xlat
outsb
sub
inc
sub
icebp
mov
xor
popl
jno
fldpi
popf
ljmp
leave
adc
sbbl
stos
pop
test
sub
aas
outsb
mov
jl
shl
inc
outsb
pop
pop
jnp
cld
xchg
jno
or
xor
hlt
add
leave
xor
cmp
pop
int3
mov
dec
shld
lret
negb
xchg
fstpl
jl
subl
dec
xchg
ljmp
push
adc
les
or
iret
fpatan
push
cmpsb
lahf
pop
in
dec
mov
sbbl
sbb
xor
dec
add
add
pop
test
mov
mov
push
mov
jge
add
or
pop
dec
fcomi
repz
adc
es
fs
icebp
add
adc
sub
scas
fidivl
mov
mov
fisubrl
aad
cmp
pop
stc
and
sti
pop
scas
pop
mov
sarl
adc
xchg
out
into
loopne
or
mov
mov
pop
xchg
sbb
inc
mov
add
data16
out
jns
mov
fs
cmpsl
ret
imul
int3
ljmp
add
outsb
pushf
js
es
add
insl
push
cmp
aaa
mov
and
jg
cltd
jo
mov
insb
lahf
push
inc
xor
negl
scas
mov
lret
aas
sub
dec
mov
pop
jb
push
adc
int3
fwait
xchg
jb
loopne
aam
xchg
iret
push
add
bound
cmp
and
sbb
cli
jne
mov
sbb
push
and
test
loope
std
sub
imul
push
inc
cmp
xchg
sub
xchg
inc
pop
mov
mov
pop
add
add
or
sarl
test
push
push
and
insl
ret
loopne
sub
mov
cmp
test
adc
adc
mov
fnstenv
add
mov
stos
sub
or
mov
out
imul
pop
push
sub
xor
scas
push
std
test
fcmovbe
sbb
int3
scas
dec
sbb
cmp
lret
ja
adc
mov
xor
xchg
fdivs
nop
insb
rcl
mov
xlat
pusha
jmp
dec
movsl
out
mov
sbb
mov
jbe
cmp
or
jno
adc
mov
adc
mov
lods
call
sar
xchg
out
inc
lret
sbb
mov
add
sbb
adc
sbb
nop
push
sahf
jmp
push
int
mov
cmp
mov
sti
xchg
loope
dec
mov
pop
ljmp
sub
pop
cmp
pop
dec
mov
daa
dec
mov
inc
mov
mov
dec
pop
and
lahf
movsl
ljmp
pop
jl
in
loope
add
mov
jp
mov
xchg
xchg
or
xor
loope
jmp
pop
xor
test
mov
push
jo
or
mov
mov
out
lods
mov
mov
mov
adc
stos
xor
iret
sub
ds
dec
push
es
leave
cmp
fnsave
in
mov
mov
aad
popa
jmp
mov
in
cmp
pop
push
fsubrl
mov
xlat
lcall
scas
shrd
testb
sub
loopne
cs
test
in
inc
cmp
repz
mov
test
aaa
mov
test
repnz
or
mov
das
pop
cmp
nop
imul
scas
je
cmp
aaa
mov
add
mov
sahf
aam
jecxz
inc
inc
dec
pop
fs
pop
pop
ret
xchg
lock
or
lock
push
test
es
ret
sbb
pushf
add
inc
mov
incl
jl
xchg
fisubl
push
xchg
push
js
mov
out
ss
mov
sbb
xchg
ljmp
stc
mov
push
xor
les
inc
pop
lods
push
mov
inc
insl
adc
inc
and
arpl
sarl
in
sbb
or
sub
mov
sbb
push
es
mov
pop
es
mov
jb
jmp
test
fsubr
adcl
sub
test
pop
fistps
mov
jl
inc
mov
es
jne
daa
sub
xlat
imul
mov
push
insb
and
lods
mov
jo
dec
loopne
ret
jge,pn
sbb
outsl
push
fdivrl
xor
idivb
pop
mov
das
sub
ja
jno
pop
sub
sahf
push
dec
aad
sbb
sbb
sarb
cmc
test
dec
mov
cmp
das
ficoml
repnz
and
cmp
add
xlat
mov
pop
mov
jmp
pop
jg
stc
push
shlb
inc
lds
push
and
loope
stc
inc
jns
lret
cli
cli
sbbl
adc
wbinvd
dec
imull
aam
aad
pop
jge
or
loope
jb
push
jae
int
jbe
or
enter
gs
jmp
cmp
iret
sti
gs
add
sub
jnp
leave
mov
into
mov
sbb
xchg
hlt
insl
ss
mov
xlat
dec
sbb
out
xor
test
cmp
pop
rorb
ret
stos
das
lret
fstpt
rclb
in
dec
js
mov
sub
sbb
inc
cmc
xorl
and
push
out
add
xor
out
inc
loopne
inc
dec
push
jb
and
enter
jg
fcompl
inc
pop
cli
ds
dec
sub
push
inc
in
jle
pop
je
inc
ljmp
bnd
xor
nop
lods
mov
pusha
push
or
or
add
sub
pop
mov
jne
xor
mov
andl
jp
inc
out
and
int3
lods
inc
xor
xchg
cmp
pop
jmp
jmp
shrb
push
int
loope
pusha
or
in
jns
push
or
or
sbb
jo
hlt
mov
cmp
jmp
push
sbb
das
push
or
cmpsl
aad
pop
jo
pop
pop
adc
fs
pop
jne
pusha
add
in
sahf
rol
sub
frstor
test
pop
sysenter
nop
jb
mov
xor
mov
repz
cmp
pop
insl
test
mov
jle
cmp
mov
into
xlat
cmp
sbb
idivl
pop
mov
or
push
movsb
inc
xchg
fstpt
jo
inc
sbb
push
mov
dec
mov
psubq
mov
mov
cmp
mov
jmp
cmc
xor
dec
test
add
inc
pop
ret
inc
push
push
lahf
or
xchg
pop
and
pop
aad
fldl
insl
scas
cmp
cmpsb
cmp
insb
dec
insb
inc
mov
int3
xor
call
add
jg
out
push
ret
inc
push
pop
mov
jae
lret
pop
bound
nop
cmovbe
test
jp
js
sub
int3
sbb
mov
iret
dec
adc
jp
lret
pop
pop
jo
pop
in
mull
mov
pop
pop
cmp
mov
sub
mov
and
mov
dec
fisubs
push
test
xchg
ror
xor
popf
scas
clc
scas
pop
enter
fidivs
xor
lahf
add
shl
jns
pop
xchg
fdivrl
dec
sbb
jbe
shll
bound
inc
mov
lds
cld
stc
jecxz
inc
or
cltd
pop
adc
jle
inc
je
loopne
dec
lahf
movsl
cmp
jp
jg
popa
mov
das
orb
inc
aam
mov
sahf
xor
in
mov
cli
int
jbe
call
cld
ret
jae
xor
fmull
add
loopne
jle
add
mov
inc
xchg
jge
rcrl
inc
rorb
cmp
ret
cmp
xor
cwtl
test
in
jae
sub
cmp
shl
push
jb
lock
inc
push
xchg
xor
sub
stos
fldcw
cmp
in
jp
test
pop
icebp
sbb
lahf
xor
jns
xor
and
jp
loope
fcmovnb
stos
xorl
mov
rorl
ljmp
sbb
xchg
cmpsl
adc
inc
cmp
xchg
into
push
scas
les
add
push
add
lods
xlat
int3
scas
ret
aad
jecxz
mov
or
test
inc
popa
gs
sbbl
sub
sbb
xor
mov
mov
mov
in
sub
inc
pop
dec
out
add
sbbb
push
push
sbb
pop
push
xor
shr
mov
clc
jno
xor
add
mov
lods
inc
movsl
std
mov
loope
bound
adc
or
mov
mov
and
shlb
lret
jbe
mov
adcb
ljmp
lcall
adc
inc
dec
adc
sti
ror
movsl
add
sub
add
xor
mov
repnz
subl
dec
mov
insb
ja
xchg
pop
ja
jge
sbb
js
pop
sti
sti
repz
push
xor
mov
sysenter
je
and
pop
pop
outsl
adc
out
clc
mov
cltd
out
xchg
loop
mov
insb
jecxz
mov
cmp
mov
mov
jno
push
pop
push
call
data16
fsubp
lods
and
lods
mov
sub
pop
adc
test
lea
inc
sahf
dec
daa
mov
call
and
push
add
jae
and
mov
pop
popa
dec
adc
xor
out
rep
jae
pop
push
xchg
adc
pop
cmp
ret
mull
fidivrl
mov
mov
sub
mov
cmp
jo
call
frstor
into
ds
scas
insb
sti
and
sbb
inc
scas
jmp
imul
sub
push
fstp
pop
inc
roll
nop
push
mov
ret
mov
jmp
jecxz
outsl
in
jecxz
cmovae
bound
xchg
stc
and
imul
lods
sbb
or
cmpsb
xlat
les
and
ret
cwtl
jl
jb
aaa
inc
jmp
cld
jns
jne
mov
or
iret
lea
jecxz
inc
lock
adc
sub
in
rcr
jge
mov
mov
xor
das
pop
cltd
push
pop
int
push
mov
lcall
insl
bound
lret
pop
lcall
and
dec
xchg
add
cmpsb
cmp
lock
ljmp
cmp
lods
push
andb
add
cmp
push
aaa
daa
mov
or
xchg
lret
scas
mov
add
loopne
jb
aam
fstpl
outsb
dec
les
cld
gs
lods
mov
cwtl
fisubrl
test
mov
leave
int
cmp
inc
cld
adc
xor
in
jbe
leave
xor
out
pop
aas
gs
pop
dec
push
aaa
scas
out
jnp
mov
inc
jne
add
fildll
push
cltd
xlat
mov
ret
xor
sar
pushf
mov
pop
push
jb
int3
xchg
mov
mov
fisubl
sub
cmp
iret
sbb
add
dec
xor
push
cmp
jb
xchg
sbb
ret
xlat
fwait
lret
sbb
repnz
cmp
mull
jb
shlb
inc
into
cmp
lods
hlt
fstl
mov
rolb
in
shll
sub
addr16
insb
icebp
xchg
xlat
rolb
in
lea
jmp
flds
mov
mov
jnp
shlb
shrl
or
dec
arpl
or
inc
or
sti
ficoms
mov
nop
mov
ja
jae
pop
xor
pop
jbe
jge
ficoml
cmpsl
mov
mov
stos
add
jb
mov
jns
add
mov
jnp
fidivs
dec
pop
sbb
mov
mov
and
xor
and
sar
repz
pop
and
inc
shll
fs
rolb
adc
or
pop
push
add
out
push
jne
inc
jae
add
mov
out
fs
inc
into
ret
fwait
mov
jge
shlb
jo
lret
inc
sub
adc
int
enter
sbb
pop
movsl
fldt
insb
jo
xor
push
out
xor
xchg
cmp
inc
jecxz
add
ficompl
lcall
xchg
dec
pop
xor
lret
pop
and
mov
js
mov
enter
jp
and
das
shlb
jb
stc
js
popf
sub
push
xchg
ret
or
add
mov
cmp
xchg
xor
adc
out
fcoml
xor
shlb
xor
jnp,pn
xchg
cmp
cli
outsl
inc
jl
test
pop
xor
adc
je
dec
pop
or
xchg
es
and
movsb
push
mov
leave
ret
mov
bnd
jb
sub
mov
inc
cmc
push
sub
dec
xchg
decb
inc
jo
mov
shlb
sahf
outsb
dec
gs
stos
insb
andl
cli
movsb
rep
xor
imull
cmp
sub
add
xor
hlt
jb
fnstcw
das
je
inc
movsb
testb
push
popa
mov
add
and
std
imul
jnp
ljmp
movsl
into
add
inc
or
xchg
push
mov
decb
les
push
inc
cmp
cmpb
cmpb
mov
movsl
xchg
call
xor
sub
mov
pop
sub
xor
mov
sbb
into
ret
push
je
ror
mov
cltd
inc
stc
aas
daa
test
scas
adc
sub
call
scas
xchg
loope
fcmovnb
jl
jno
imul
jmp
mov
into
es
pop
or
sbb
add
rorb
push
mov
mov
ds
sub
lds
jae
leave
jp
inc
call
dec
mov
cmp
ret
es
js
mov
fiadds
ficompl
ja
hlt
jmp
pop
and
jo
adc
ret
aam
jns
insb
pop
xlat
mov
enter
pop
dec
into
xchg
inc
outsb
sbb
push
mov
and
mov
lret
dec
and
inc
lahf
inc
jb
cmp
push
cli
dec
mov
xchg
test
scas
inc
cmpsb
mov
dec
mov
or
ja
in
cmp
leave
cwtl
je
ja
mov
jp
lods
xchg
cwtl
push
push
ret
add
ret
aad
mov
mov
cld
xorb
cmp
sub
cmp
clc
mov
subl
sahf
sub
or
xchg
out
hlt
enter
mov
lock
push
loop
addr16
cmp
addl
xchg
xor
sbb
lahf
xor
dec
and
ss
mov
testb
out
lods
and
jl
mov
mov
dec
push
mov
test
sbb
pop
fs
fcompl
aam
sub
xchg
xor
in
orl
add
or
mov
jbe
lahf
popa
je
icebp
mov
xchg
inc
cmc
mov
je
into
xor
xchg
pand
inc
mov
push
push
scas
sbb
sub
xor
stos
or
outsl
inc
movsl
lret
adc
push
aas
fiaddl
lret
xchg
jne
fidivrs
fisubrs
adc
lods
test
jae
rol
mov
sbb
loop
ja
lods
and
add
or
jge
push
add
dec
fistl
clc
lods
mov
mull
push
fisttps
mov
or
mov
daa
mov
jb
push
cmp
sbb
mov
mov
push
test
push
sub
pop
xchg
xor
js
jmp
insb
int
sbb
adc
mov
push
mov
rcr
adc
fcomps
out
push
fsts
mov
out
test
cli
and
pop
shll
cmp
aad
sub
mov
cmpsl
sbb
jb
out
fs
and
sbb
push
movsl
adc
icebp
inc
inc
push
das
and
lret
lds
xchg
mov
adc
test
js
pushf
jge
jge
fsubrs
ja
add
test
stc
test
xchg
cmpsb
loop
lcall
jge
push
jno
add
mov
fwait
popf
mov
and
pop
push
add
sub
push
push
idiv
cltd
sbb
hlt
and
sbb
cmpsb
punpckhbw
pop
dec
arpl
fwait
scas
push
xor
les
jo
sti
outsl
sub
sbb
mov
xor
mov
mov
or
rcll
xchg
add
outsl
mov
arpl
mov
add
call
fnstenv
jge
mov
mov
nop
popf
ljmp
shld
adc
pop
fstp
sub
es
mov
adc
pop
mov
gs
cltd
or
lahf
hlt
lds
xor
jns
or
insb
stos
test
dec
int
aad
xorb
inc
ja
repnz
jl
mov
push
mov
xchg
inc
inc
scas
sub
rclb
push
int3
scas
lret
push
ret
xor
clc
loop
mov
mov
cltd
mov
adc
in
lds
out
push
mov
ret
test
sub
jle
ret
leave
adc
cltd
mov
mov
fsubrs
negb
xchg
mov
stos
test
dec
adc
or
sub
outsb
adc
sub
and
stos
cwtl
repz
cltd
icebp
imul
leave
sub
xchg
mov
testl
test
mov
pop
or
out
sbb
mov
push
pop
sbb
sarl
push
fdivrs
test
fs
clc
mov
jnp
xor
sub
and
in
rcrl
jne
movsl
inc
jp
es
out
mov
imul
pop
inc
ljmp
mov
xchg
sbb
popa
adc
out
dec
cld
sbb
dec
lds
aam
mov
filds
cld
pop
test
out
dec
jo
sbb
sub
jb
inc
dec
mov
adc
movsb
mov
ret
sbbb
mov
into
cli
xlat
das
nop
mov
dec
cmp
push
idiv
push
in
or
test
push
sti
test
hlt
cmpsb
jnp
mov
inc
xchg
add
iret
dec
inc
adc
test
push
sub
and
data16
jno
shll
leave
ss
push
mov
pop
popa
xchg
cld
in
out
adc
hlt
in
cld
jg
jmp
inc
dec
stos
mul
push
outsl
adc
inc
jbe
cmc
xor
pop
cmp
sahf
xchg
imulb
fs
jge
repz
xchg
cwtl
mov
jae
or
test
sbb
sbb
add
addl
out
sti
shl
and
shrb
in
or
pop
push
arpl
repz
xor
xor
or
fsubrs
mov
sub
xlat
push
pop
int
xor
cwtl
mov
lock
sti
sub
jbe
outsb
push
in
and
scas
insb
scas
mov
dec
je
cs
sarl
cmpb
mov
inc
push
xchg
mov
pop
and
push
or
out
rcr
push
test
fcoms
fdivl
and
mov
cmp
lret
movsl
loop
cmp
imul
mov
cmp
jnp
cs
lods
inc
mov
xchg
bound
adc
in
sbb
jae
lahf
movsl
rclb
cmp
loop
push
mov
enter
inc
jg
mov
add
and
int
cmp
jo
les
mov
js
cmp
pop
sub
add
pop
adc
clc
fsubrl
aad
js
sahf
mov
lret
testb
sub
fdivrl
xor
xchg
adc
ja
and
shl
aaa
lods
vsqrtsd
jae
stos
jecxz
ja
xlat
xchg
into
movsb
xchg
add
call
and
and
push
loope
cwtl
jne
cmpsb
neg
imulb
xorl
inc
jle
jnp
pop
mov
xchg
or
xor
cwtl
out
inc
sub
movsl
test
add
ljmp
add
sbb
mov
or
shrl
sub
lcall
pop
xchg
jecxz
shll
mov
xlat
jnp
mov
into
ds
out
scas
sbb
cmpsb
and
mov
pop
aaa
add
adcl
push
dec
adc
lea
cmpsl
mov
add
rolb
cli
and
loop
cmp
jp
dec
jne
aam
dec
adc
loopne
clc
clts
hlt
divb
std
dec
cld
xchg
add
sbb
pop
mov
mov
xor
je
xor
dec
test
roll
xor
daa
stos
pop
mov
stc
or
mov
adc
xchg
jb
shll
enter
jge
clc
push
mov
ret
xor
stos
push
xchg
jle
shll
xor
enter
fs
cli
test
lock
jae
out
pop
fwait
int
hlt
pop
sbb
into
loopne
sbb
push
ret
cmpsl
insl
push
sbb
sti
movsb
push
decl
or
gs
and
lods
out
lea
xlat
push
sbb
das
mov
test
fcompl
sbb
cwtl
leave
pop
mov
xor
pop
mov
jl
mov
adc
test
mov
xor
cmp
lret
and
out
jle
sbb
push
or
fs
cmpsb
mov
dec
mov
aaa
out
xor
mov
cmp
xor
mov
cmp
jae
inc
dec
loop
ja
jno
mov
icebp
pop
xchg
lahf
loope
dec
iret
inc
fcomps
xor
or
jae
ret
jle
popa
jae
ret
or
popf
push
sbb
cmp
ss
movsl
adc
lcall
sub
mov
mov
pop
pop
test
dec
stc
orl
leave
mov
cld
dec
pop
sub
int
fstl
sub
dec
loopne,pt
add
fisubl
insl
push
xlat
push
and
scas
imul
cld
inc
fsubs
fwait
sti
push
push
xchg
inc
out
arpl
cmp
or
divb
leave
mov
mov
add
cmpsl
inc
adc
cwtl
dec
jl
adc
xor
out
xor
loopne
add
inc
xor
pushf
ja
or
inc
and
scas
cmp
jne
jle
rorl
int3
pop
shlb
push
int
ljmp
add
fisubs
std
imul
sub
push
jne
mov
dec
cmp
adc
int3
test
int3
jmp
pop
sub
loop
cmp
cmp
adc
jae
xchg
adc
mov
lret
jge
in
mov
in
or
cmp
dec
push
andl
add
push
sar
aad
lcall
aas
xor
lods
mov
ljmp
add
jne
out
frstor
pop
or
xlat
sub
mov
cld
aam
inc
mov
stos
ljmp
xchg
xor
dec
mull
push
inc
aas
outsb
inc
or
ret
sbb
test
xor
jmp
ja
inc
cmp
insl
add
lcall
les
dec
ret
sbb
mov
mov
jo
stos
push
ljmp
pop
dec
inc
loopne
scas
sub
scas
mov
addr16
cmp
jge
test
xor
add
adc
cmp
jl
xchg
xchg
popf
in
scas
and
cltd
adc
clc
xchg
inc
jmp
not
push
aaa
adcb
adc
mov
mov
jle
nop
mov
jne
xor
sbb
pop
cmpsl
in
xchg
aam
dec
pop
jmp
pop
xchg
jmp
shll
cs
jle
call
aad
xchg
lcall
jmp
xchg
and
movsb
mov
daa
xchg
movsb
test
inc
and
pop
ret
out
dec
inc
add
clc
sbbb
mov
sub
dec
cmp
movsl
orb
test
jnp
hlt
test
pop
and
rclb
lock
ljmp
pop
jecxz
sub
loopne
and
or
xchg
adc
leave
add
mov
inc
mov
cmpsb
imul
loopne
inc
sub
fcoms
hlt
subb
clc
mov
pop
cmc
cmp
mov
aam
mov
sbb
shlb
jno
xor
mov
and
add
push
sbb
cmp
push
or
mov
popa
push
mov
adc
or
push
and
mov
fwait
sub
xor
pop
adc
mov
push
test
cmp
inc
lret
mov
pop
cltd
xor
out
addr16
xchg
test
ja
scas
adc
sub
xchg
pushf
dec
inc
cmpsb
push
mov
jae
jnp
pusha
js
fisubs
test
sahf
push
and
pop
outsl
dec
insl
cmpsl
adc
arpl
xchg
mov
sub
addr16
scas
xchg
dec
ret
adc
and
fdivr
leave
fistpl
pop
pusha
dec
xchg
outsb
mov
sbb
sti
icebp
outsb
lahf
pop
push
inc
mov
sbb
mov
and
out
fsubp
xor
add
aad
nop
cmpsb
iret
mov
add
sarb
and
pop
inc
xchg
cmp
mov
add
xchg
inc
das
xchg
shll
pop
jle
mov
sub
mov
lock
sbb
jb
mov
movsb
or
mov
mov
adc
in
jns
ja
and
adc
movsl
sbbl
push
add
movsl
mov
xor
out
ret
sbb
shll
inc
sbb
out
jbe
sub
push
rorl
pop
cli
push
into
mov
mov
or
and
inc
iret
xchg
sub
mov
mov
fsubl
sahf
jbe
call
ret
ds
imul
and
push
aaa
aam
gs
cld
mov
popa
fdivp
in
movsl
mov
and
xor
push
inc
mov
test
jle
bound
mov
xchg
xchg
mov
shlb
neg
xor
int3
scas
mov
pcmpgtd
loop
sub
push
mov
mov
cwtl
adc
mov
jnp
or
jge
mov
ret
int3
ret
jne
pop
xor
jno
es
int
rolb
pop
aaa
dec
daa
cli
jl
in
adc
pop
cli
and
mov
push
xchg
xchg
push
cmp
mov
lret
clc
mov
sarb
sub
les
pushf
pop
xor
cmc
cli
or
data16
fcmovbe
lods
testb
fildl
cmp
sub
push
mov
add
push
call
or
xchg
mov
and
out
lods
mov
int3
addb
in
pop
in
xchg
mov
scas
stc
xor
dec
cmp
aad
adc
aas
and
outsb
in
icebp
ret
sub
or
es
mov
add
outsl
je
adc
jle
xor
and
sbb
test
jnp
aaa
pop
lret
cmp
out
call
or
add
test
test
stos
push
adc
pushl
pop
jo
jnp
adc
push
jp
xor
loopne
add
pop
scas
call
aas
insb
mov
sahf
xor
xlat
cli
dec
shl
test
jl
mov
ss
movsb
mov
aaa
outsl
mov
adcb
outsl
push
pop
push
sbb
pushf
jmp
mov
arpl
call
enter
sbb
mov
sub
xor
es
mov
sbb
mov
inc
jno
or
push
fisubrs
fwait
mov
push
test
jbe
add
mov
or
hlt
or
jae
sub
mov
sub
fdivrs
jg
dec
in
or
mov
xchg
out
mov
pop
cmp
xor
xor
out
mov
nop
lods
mov
addr16
sub
loop
aaa
mov
aaa
jmp
mov
cmp
and
xchg
push
add
fadd
mov
xlat
orl
outsl
cwtl
out
fdivrl
xchg
inc
dec
dec
or
dec
or
push
sub
sbb
mov
mov
in
mov
sahf
mov
sub
call
scas
mov
mov
lock
dec
je
and
mov
xlat
push
into
call
insb
jne,pn
shll
cmp
cltd
dec
cmp
dec
adc
pop
int3
shr
mov
shl
xchg
push
iret
test
out
cld
inc
mov
cld
inc
dec
sti
in
rolb
cmp
sti
dec
test
mov
push
sahf
pop
push
js
xchg
test
nop
mov
jle
enter
inc
xor
mov
dec
xor
and
insl
sar
bound
xchg
push
sahf
push
test
shlb
mov
xchg
cltd
rcll
fcompl
ret
jno
and
pop
imul
cmpsb
push
sub
iret
jb
scas
cmpsl
cld
mov
cli
cmc
adc
out
inc
out
mov
jnp,pt
sbb
mov
sub
sub
mov
sub
sub
cmp
vmovaps
mov
jne
cld
mov
fwait
sub
jo
add
lcall
cwtl
hlt
mov
pop
and
test
orb
add
cmpsb
inc
movsb
push
push
push
jb
sbb
push
jl
popa
fdivl
push
loop
jo
addb
in
add
mov
xor
and
out
jle
inc
les
call
and
scas
sub
xor
out
mov
jmp
cltd
testl
into
imul
jb
arpl
push
mov
lods
adc
adc
jle
or
popa
pop
jg
nop
adc
xchg
xchg
cs
cmpsb
idivl
sbb
adc
pop
push
push
icebp
ret
std
fistpll
dec
pop
or
call
and
test
push
pop
push
loopne
std
lods
fs
sti
xchg
xor
aam
mov
test
mov
push
les
cmp
dec
imul
xchg
adc
sarb
dec
nop
mov
mov
dec
jne
leave
cmpsb
aaa
mov
cmc
test
dec
inc
test
pop
adc
cmc
push
hlt
add
je
cmc
jge
stc
loope
and
sbb
and
stc
imul
cltd
das
bnd
cs
xor
cmp
divl
daa
test
pusha
ja
hlt
andl
repz
add
mov
jecxz
sbb
cmp
pop
fldt
imul
cmp
mov
bound
jmp
aas
not
inc
adc
mov
sbb
and
pop
and
cmp
cmp
sbb
sub
mov
add
aam
push
sbb
jb
pop
pop
lret
pop
sbb
stos
lds
adc
in
mov
fists
lods
mov
or
pop
imul
bound
push
adc
cmp
loope
push
push
icebp
cmp
xor
xchg
xor
xchg
fstpl
cmp
push
cwtl
out
and
std
or
or
jns
and
jae
cld
lahf
dec
jnp
cmp
movsb
adc
and
pop
jne
jb
rorb
xchg
lahf
push
lret
roll
rcl
aas
pusha
jge,pn
aaa
js
or
sub
pop
cmpl
out
imul
push
stc
push
aam
mov
push
dec
test
or
arpl
sub
pop
push
movsl
jae
sbb
gs
aas
push
mov
and
inc
icebp
xlat
ds
xor
pusha
cmpsl
dec
scas
fsubrs
lds
and
lods
outsb
fsubp
mulb
mov
cmpsl
cmc
movsb
mull
cwtl
fimull
cld
push
jne
les
ret
adc
mov
leave
mov
cli
xchg
mov
out
pmulhw
cmp
loope
lods
outsb
cmp
pusha
std
or
cltd
mov
fldt
cmp
aas
xor
sbb
jmp
sub
js
fbstp
pushf
or
movsb
dec
insl
mov
push
and
popf
mov
dec
nop
adc
dec
aam
mov
aam
fdivr
aam
or
push
adc
mov
data16
push
and
aam
inc
mov
jae
filds
ret
imul
mov
mov
push
sahf
pop
aad
out
loopne
pop
inc
xchg
jmp
addb
popf
push
dec
jae
cltd
ljmp
jnp
nop
out
cltd
push
inc
jmp
xchg
inc
loope
push
add
fwait
mov
jle
scas
sahf
gs
push
and
mov
ljmp
jnp
mov
mov
leave
jne
sbb
or
or
shrl
data16
int3
movsl
pop
pop
sahf
pop
sbb
rorb
scas
stos
ds
push
mov
inc
out
fisubrl
data16
dec
ljmp
jecxz
adc
adc
mov
xor
test
mov
fld
shlb
sahf
test
mov
jg
movsl
adc
or
testb
je
loope
test
ds
sbb
cmp
mov
xlat
push
push
mov
and
stos
aaa
and
cmp
cmp
scas
pop
addr16
addr16
andl
sbb
shrb
iret
lods
mov
ljmp
xlat
cmp
int
or
or
je
jle
test
cli
andb
aad
cld
sti
movsl
mov
gs
aam
jbe
cmc
cli
sbb
shll
mov
data16
nop
jnp
mov
fldt
inc
or
std
fcmovb
lods
xchg
sbb
popf
and
es
lods
out
ljmp
adc
xlat
mov
add
pop
xchg
or
in
push
adc
adc
pop
cmp
pushf
orl
movd
xor
dec
xor
fxch
dec
cmp
and
sbb
dec
fs
jns
inc
inc
cmp
push
test
jmp
fstps
aas
push
xorb
xor
xchg
ror
add
fsub
lea
jmp
push
arpl
repz
es
jns
push
cwtl
mov
mov
fstpt
mov
cmp
mov
test
jb
and
push
or
aaa
popf
add
jbe
sbb
jae
jnp
fstl
add
mov
sub
ret
out
lods
jo
sbb
xchg
pop
cmpl
scas
outsb
cmp
ss
dec
stos
jnp
repnz
lods
dec
pop
rcll
mull
inc
test
sub
mov
sbbb
cmpsl
lcall
jp
insb
out
fimull
adc
push
data16
and
imul
fs
jmp
push
loop
inc
jg
imul
and
test
movsb
cli
fbstp
and
dec
jns
jle,pt
add
jmp
cmp
sahf
sti
insb
push
pop
sar
ds
movsl
cltd
sub
cmc
jle
jo
mov
out
aam
push
or
fdivs
sbb
scas
adc
fwait
inc
mov
insl
addr16
mov
popf
jge
scas
call
sub
test
lock
lcall
jl
or
xchg
das
shrl
frstor
xchg
xor
push
mov
in
loopne
imul
mov
je
xchg
mov
clc
das
clc
xchg
xchg
xchg
fnstcw
sbb
loop
psubsb
cmp
lcall
xor
mov
and
and
and
xchg
push
dec
setns
fdiv
adc
push
outsb
push
in
jbe
pop
cmp
jmp
test
dec
add
cmp
or
mov
stos
pop
ss
adc
fistpll
jmp
mov
rol
test
pop
lods
add
jl
test
xchg
inc
push
mov
idiv
xchg
cmpl
cli
aaa
xor
xchg
outsb
dec
das
cld
insb
mov
jo
aas
out
or
out
fiaddl
arpl
enter
adcb
xchg
subb
setg
inc
int
es
jo
aam
xor
jbe
aaa
movsl
cli
mov
cwtl
aam
pusha
arpl
sbb
in
xchg
aam
int
out
rorb
repnz
outsb
pop
inc
sub
fnop
cmp
imul
xrelease
iret
adc
arpl
repnz
cmp
mov
sub
ljmp
mov
mov
inc
or
out
mov
mov
jae
mov
cmp
mov
xchg
mov
flds
push
push
cli
jp
stos
sbb
orb
loop
lcall
shl
pusha
pop
mov
fcomi
mov
dec
jnp
jmp
std
je
test
push
mov
cmpsl
xor
and
std
and
lahf
iret
stos
mov
push
jbe
test
jge
sbb
movsb
mov
xchg
repnz
mov
pusha
mov
sbbb
jecxz
lcall
xor
lea
pop
push
imul
sbb
repnz
add
in
les
cmp
out
add
or
fistl
xor
mov
icebp
mov
mov
xchg
sti
fmull
push
push
ljmp
dec
test
ja
lods
pop
jle
jae
dec
int3
test
dec
jl
add
push
cmp
or
fcomps
fistpll
mov
call
jecxz
icebp
lods
inc
shlb
es
idivb
cmp
inc
imulb
push
xchg
add
test
mov
orb
mov
adcb
add
imul
dec
pop
xor
lcall
push
cld
rol
lods
xchg
inc
mov
push
mov
dec
in
pop
jmp
jns
enter
jmp
pop
push
adc
mov
pop
mov
jle
inc
test
xchg
loop
aas
mov
xchg
je
out
iret
push
lcall
xchg
dec
push
sti
xchg
ds
lahf
mov
and
mov
out
add
lods
jns,pn
push
stos
aam
pop
leave
and
xchg
adc
cmp
sbb
outsb
or
scas
or
lds
jmp
cmpsl
sarb
xchg
fimull
loopne
pop
xor
mov
and
and
cmp
mov
int
jmp
in
incb
mov
jmp
xchg
sti
test
ss
aad
ret
sar
imul
fistps
movsb
xchg
in
ds
fstpt
adc
scas
mov
xchg
sub
jp
test
ret
or
lock
test
mov
add
xchg
pop
pop
adcl
arpl
in
or
imul
mov
mov
sbb
pusha
pop
pop
push
cs
dec
test
in
push
clc
push
cmpl
add
jg
mov
loopne
in
mov
xor
mov
dec
call
adc
mov
xchg
rcrb
or
clc
mov
shll
orl
mov
jmp
xor
pop
jle
andl
mov
mov
lods
frstor
iret
cmp
mov
mov
xor
lahf
adc
imul
xor
ret
push
sbb
les
leave
jne
pop
ljmp
xor
arpl
scas
mov
mov
lods
jmp
add
nop
fwait
das
mov
dec
pop
int
xorl
jmp
imul
pop
in
add
push
cli
xchg
mov
gs
fnsave
ret
pop
ds
sub
cwtl
add
leave
mov
fucomp
add
mov
cmpb
lds
push
mov
fiaddl
sbb
ljmp
cltd
inc
inc
stos
push
xchg
push
ficomps
xor
xor
mov
scas
std
les
push
xchg
add
cltd
mov
pop
push
dec
dec
dec
mov
insb
mov
sbb
mov
neg
dec
cmp
pop
mov
out
sub
dec
fwait
mov
arpl
sbb
pop
jge
popf
add
mov
iret
dec
pushf
fsubp
out
adc
imul
cmc
push
mov
inc
ret
adc
movsl
repnz
lods
jb
popf
loop
mov
pop
lea
orl
sbb
daa
fmull
setno
data16
mov
ror
in
lds
in
ds
int
jle
cmp
and
inc
jp
cmpsb
jecxz
stc
sub
xor
cmp
pop
sbb
daa
repz
pop
mov
add
insb
xchg
nop
dec
dec
int3
jecxz
ljmp
outsl
push
adc
add
xor
mov
jmp
push
lods
mov
movsl
cmp
mov
dec
cmpsl
dec
data16
repz
mov
fstp
mov
mov
mov
ret
iret
fwait
loope
dec
xorb
mov
xchg
fists
rclb
dec
test
gs
mov
and
and
movl
mov
xchg
mov
jnp
xor
cmpsl
adc
in
insl
dec
adc
stc
outsl
fldt
dec
and
je
xchg
fildl
push
lods
call
test
rolb
xchg
fistps
pop
sub
mov
into
sub
aas
js
push
xor
popf
dec
data16
in
jl
jmp
adc
xchg
push
ret
push
iret
xchg
xchg
out
add
mov
test
mov
xor
adc
dec
outsb
mov
mov
hlt
mov
xor
outsb
fwait
loop
add
dec
inc
push
mov
jp
push
ss
hlt
les
pop
test
data16
sub
leave
xchg
test
fldenv
dec
leave
testb
cltd
loope
xor
lods
add
xlat
jp
sub
pop
fistpl
xchg
push
cld
divl
aaa
and
pop
int
popf
cmovb
je
push
dec
test
or
sub
push
xor
sub
jae
jecxz
scas
sub
push
movsl
dec
inc
xor
mov
mov
mov
mov
add
xchg
mov
sub
arpl
pop
in
adc
les
dec
jo
add
rorb
das
push
push
sbb
mov
xchg
sub
xchg
shlb
push
sub
shlb
mov
xor
sbb
jp
iret
rcll
cmpsl
in
jl
push
rcrl
flds
mov
or
loope
mov
add
sbb
push
shrl
xor
ss
push
inc
adc
rcrb
aas
clc
leave
mov
std
sub
mov
push
dec
shl
lcall
xlat
or
mov
imul
aam
xchg
imul
xchg
jg
pop
fistps
shlb
sub
push
int
mov
jb
mov
sbb
mov
or
sub
jne
xchg
lret
dec
les
mov
cld
inc
lahf
mov
ret
xor
jo
sbb
mov
mov
addr16
and
cli
jmp
inc
cmp
sbb
lea
push
sbb
imul
negb
or
jbe
jg
int
pusha
mov
loope
and
cmc
ss
lds
push
xchg
mov
pop
sub
outsb
lds
inc
stc
scas
xchg
cld
adc
mov
xchg
mov
xlat
inc
cmpl
pop
cltd
outsb
test
imul
andb
repz
out
ficompl
insl
pusha
xor
sbb
sbb
mov
mov
popa
iret
push
and
loop
aas
scas
sbb
pop
push
inc
ret
fs
stos
mov
jmp
stc
bound
scas
ficompl
push
xchg
and
xor
sub
and
sbb
iret
hlt
jg
dec
je
je
lret
imul
jae
jl
ret
dec
mov
addr16
movsb
xchg
push
or
in
mov
cmp
dec
and
push
add
push
sti
fbld
shll
mov
xor
loop
sub
pop
sahf
pop
vmaxsd
hlt
adc
repnz
ja
xlat
mov
aas
rcrl
cmp
sbb
les
add
cmp
out
or
pop
xchg
adc
cli
decl
movsl
and
insb
popa
lock
mov
push
aaa
xor
adc
xor
outsl
cmp
dec
pushf
sarb
mov
pushf
arpl
jbe
in
movsl
add
jbe
pushf
add
cmp
xlat
inc
decl
xlat
push
xchg
push
lret
xor
movsb
paddusw
mov
adcb
and
popa
mov
xchg
push
push
les
imul
nop
out
outsb
cltd
push
jo
sbb
pop
and
mov
mov
inc
dec
je
inc
dec
xor
add
fistpl
js
cltd
popf
in
lea
out
sbb
movsl
scas
pop
xor
inc
aas
out
fwait
popf
xchg
clc
lds
out
jp
repnz
paddusb
and
or
inc
data16
xor
sbbl
mov
stos
je
mov
pop
inc
out
leave
jbe
scas
imul
or
mov
fwait
mov
mov
shr
arpl
ds
add
mov
movsl
lds
fidivrs
aaa
dec
and
enter
mov
push
add
pop
movsb
std
jle
test
mov
jo
test
enter
pop
sub
test
es
pop
jne
mov
jmp
push
mov
call
jnp
daa
xchg
test
add
push
mov
xchg
popa
ds
sub
sti
lahf
pusha
adc
popa
cmp
lcall
and
loope
cs
loope
mov
clc
sbb
push
enter
shl
aad
pusha
jmp
pop
cmp
adc
cmp
test
lcall
lods
sbb
pop
dec
test
jbe
pop
dec
popf
rol
cmpsl
das
andb
adc
push
loope
mov
lcall
push
xor
dec
aas
xchg
addr16
mov
sbb
inc
daa
push
jge
push
and
pusha
mov
sbb
pop
sbb
test
ja
imul
inc
adc
mov
fcomps
leave
lods
pop
fisubrs
mov
xor
out
xor
test
mov
push
fwait
je
bound
adc
fs
inc
sahf
insl
cltd
xchg
add
cmp
inc
cmp
cmp
push
sbb
sbb
inc
mov
mov
data16
imul
je
inc
xor
jns
cmp
imul
fwait
out
test
push
adc
psrlq
lods
in
sar
sbb
and
ret
jno
pop
aam
std
jno
mov
jbe
sbb
push
dec
mov
or
xchg
sub
repnz
sti
push
jno
int
add
popf
dec
sub
dec
push
jle
icebp
xlat
loop
mov
icebp
mov
shrl
js
je
test
roll
stc
jg
aad
fbld
mov
ljmp
lds
in
jecxz
lret
mov
repz
insl
add
push
xchg
and
out
sbb
ja
aaa
push
inc
pop
js
mov
in
and
imul
sbb
jg
mov
or
push
rcr
cmc
test
cs
mul
stc
addr16
push
loopne
sti
aam
aas
or
cli
jl
xchg
popa
lahf
mov
sbb
pop
in
stos
scas
mov
mov
loop
sub
pushf
mov
jmp
popf
jg
add
mov
sti
xchg
push
and
pop
pop
or
rolw
pop
xchg
stos
shr
dec
aam
mov
les
cmc
mov
adc
jmp
dec
jb
jmp
xchg
adcl
jns
xlat
pop
dec
mov
movsl
cmp
mov
aam
dec
daa
xchg
sub
shll
xchg
jl
push
inc
xor
sub
inc
jp
mov
mov
fcompl
mov
jl
sahf
popf
add
add
mov
out
mov
enter
add
lods
js
into
stos
inc
cmp
inc
and
pushf
shrl
mov
imul
pushf
js
mov
pushf
mov
push
and
or
mov
jnp
nop
ss
hlt
in
mov
dec
test
dec
aaa
add
xchg
or
out
sub
fistpll
cmpsb
in
sub
fcoml
orl
jmp
rorl
fnsave
int
insb
xchg
pop
xor
jg
and
in
adc
push
sub
int
push
or
fnsave
and
pop
inc
jp
adc
gs
dec
push
pop
negl
dec
pop
push
and
sbb
dec
mov
fcmovb
xor
sbb
mov
and
xchg
es
sbb
or
dec
pop
lods
ljmp
push
dec
movl
jne
push
mov
jecxz
stos
imul
xchg
sbb
mov
in
inc
imul
shrl
test
gs
mov
jp
or
loope
jo
fwait
ja
lret
clc
ljmp
in
out
and
or
adc
clc
cwtl
addr16
sbb
dec
scas
shlb
imul
xor
or
ss
sahf
push
lds
gs
sub
aam
fmull
aad
jmp
pop
or
stos
xor
ret
scas
cmp
jp
out
int3
mov
lahf
jae
lock
dec
repz
mull
mov
ds
aam
mov
test
mov
add
std
cmp
imul
add
xchg
jecxz
int3
jp
lahf
sub
fisttpl
mov
js
sub
clc
sbb
mov
imul
cs
dec
shr
testb
test
repnz
dec
rorb
fistpl
rcrb
popf
shlb
mov
testb
adc
in
cmp
add
push
ljmp
cmp
jge
pop
mov
aas
lcall
xchg
js
movsb
adc
mov
inc
pop
pop
add
mov
push
ljmp
or
jl
mov
out
in
jae
mov
fisubl
push
dec
mov
ja
cmp
stos
das
aaa
cltd
xor
or
or
push
pushf
andb
dec
ret
call
scas
pop
aad
lea
cmp
lds
je
mov
dec
mov
push
daa
cwtl
cmpsl
fldenv
fstps
jbe
add
orps
adc
dec
sahf
push
pop
jmp
icebp
bound
roll
movsl
mov
aam
jl
and
push
in
icebp
cmp
adcb
cmc
sub
popa
sbb
sub
xchg
stc
inc
xor
loopne
dec
mov
loop
push
js
inc
mov
xor
in
or
cmp
mov
sahf
sbb
or
sbb
data16
adc
mov
aas
lcall
add
test
inc
hlt
mov
mov
lea
mov
in
ljmp
and
test
ja
in
pop
test
xchg
dec
jge
and
and
cmp
rorb
mov
clc
bound
std
jmp
shll
ret
imul
scas
mov
pop
fistpl
rolb
sbb
cmp
dec
and
std
in
fstp
outsb
gs
pop
fcoms
cmpsl
mov
sbb
ljmp
jl
fidivs
sbb
dec
cmp
and
stos
mov
lea
inc
sub
cmpsl
and
jae
pop
fwait
leave
cmp
jno
xchg
jle
cld
clc
fildl
lret
mov
in
sub
or
test
dec
push
pop
ljmp
xchg
mov
sar
sub
cltd
and
mov
iret
fisttpll
shll
and
mov
sbb
sbb
daa
mov
je
scas
out
jl
cmpsb
aas
sbb
inc
sub
adc
daa
and
test
mov
cmp
pop
imul
aad
and
push
dec
adc
pop
add
fidivs
jo
addl
xor
js
and
push
pop
loope
int
or
push
fidivs
cmp
adc
or
jge
repz
jge
imul
lahf
fldcw
inc
sbb
daa
test
les
inc
lds
mov
xchg
loop
xchg
or
pop
hlt
cld
std
ljmp
movsb
jns
mov
sub
xor
stos
push
ljmp
dec
mulb
repz
xchg
xchg
cld
jbe
cli
mov
lahf
test
mov
sbb
pusha
add
pusha
mov
jecxz
lret
int3
xor
or
inc
dec
jns
push
xchg
jb
mov
popf
adc
sbb
sub
xchg
leave
mov
inc
lret
sub
sbb
mov
sbb
and
sbb
sub
outsl
loopne
fsubs
push
in
cmpsb
jp
test
insb
incb
inc
into
aaa
and
pop
mov
adc
fwait
mov
aaa
sbb
inc
cmp
stos
test
es
add
stos
loope
and
sti
lahf
test
pop
dec
jnp
inc
dec
mov
leave
arpl
int
setp
cs
enter
adc
dec
mov
pop
in
test
fs
std
xor
mov
xchg
into
test
es
add
into
dec
sbb
xor
pop
pop
fld
mov
negb
clc
in
mov
mov
into
data16
cli
mov
mov
adc
shll
lds
lods
cld
int3
cs
out
jg
mov
push
loopne
sarb
fiaddl
rcrl
dec
adc
sub
ja
stos
subl
sub
dec
in
ss
sub
dec
xchg
enter
lods
push
test
sar
inc
fcom
sbb
xor
mov
repnz
mov
push
aaa
clc
rclb
pop
add
jns
push
add
iret
add
arpl
add
sbb
imul
sub
fcoml
cmp
push
add
das
pop
stos
outsl
xor
jge
and
ror
pop
add
ja
mov
mov
mov
sbb
movzbl
es
cmpsl
xchg
aaa
sbbl
sub
fs
cmp
hlt
mov
dec
adc
pminsw
push
sbb
xchg
mov
or
gs
mov
test
jb
sti
mov
addr16
rolb
je
stc
jecxz
add
sti
pop
icebp
jne
push
push
mov
enter
gs
sar
push
mov
lods
aaa
cmp
bound
and
xor
repz
fisttpll
mov
push
aam
mov
outsl
lahf
add
mov
jp
jns
mov
jns
addl
inc
jae
bound
fmuls
mov
mov
add
lcall
and
and
hlt
repz
or
ds
testb
xchg
mov
popf
xor
imul
and
mov
xor
pusha
mov
cmp
xchg
xchg
das
loopne
stos
mov
movsb
shll
push
fnstsw
iret
xchg
dec
fbld
cmc
cmp
jne
aad
sbb
or
inc
hlt
cmpsb
aaa
movsb
add
pop
es
or
sub
adc
gs
cmpsb
pop
mov
cmpsl
lcall
jl
inc
addr16
add
out
push
push
xchg
in
stos
sarb
mov
fiaddl
and
pop
inc
es
mov
xor
fcmovbe
mov
xchg
and
lret
jp
mov
rcrb
std
enter
jl
xlat
xor
dec
int
icebp
adc
movsl
add
fs
pop
sarl
sbb
adc
mov
inc
and
jg
repz
jecxz
dec
lret
inc
jno
adcb
and
xchg
clc
mov
pop
cmpsl
and
push
out
xor
xchg
mov
add
pop
rorb
cmpl
mov
aam
push
xchg
jp
mov
pushf
xchg
jl
push
ret
mov
jb
mov
mov
cmp
jnp
mul
dec
pusha
mov
mov
icebp
insb
jp
hlt
out
das
sbb
jmp
sub
rcrl
fildl
out
mull
insb
sbb
mov
mov
mov
push
xlat
push
insb
add
loope
dec
push
adc
ret
es
loop
inc
adc
or
and
mov
cmp
hlt
xor
lcall
mov
dec
xchg
or
jne
inc
call
jbe
push
pop
and
dec
mov
testl
ss
or
xchg
and
mov
lret
outsb
cmpsl
xchg
add
jl
inc
dec
mov
dec
mov
push
daa
call
ja
inc
les
mov
add
aad
adc
push
push
mov
cltd
or
jbe
lcall
push
aad
ljmp
hlt
sbb
fbstp
mov
dec
pop
jae
bound
loop
shlb
push
jmp
push
imul
adc
and
scas
pusha
xor
pop
insl
xchg
sub
dec
push
or
test
ljmp
int
shl
imul
int
inc
in
icebp
imul
ret
cmpsl
mov
pop
in
pop
pop
sub
es
lea
cs
aas
sbb
adc
mov
mov
xlat
sahf
mov
mov
sub
xchg
mov
xor
inc
ja
int
in
roll
into
and
cmp
outsb
mov
stc
jb
lods
shrb
and
scas
inc
xchg
and
pushf
add
xabort
mov
std
pop
lds
jae
sub
and
je
jge
js
mov
cmp
pusha
jg
mov
cmpsb
adc
xchg
push
lret
jno
das
xchg
or
xor
scas
ds
dec
fcmove
sbb
sub
mov
fimull
inc
les
or
push
stos
aas
outsl
shrl
inc
mov
int3
xor
mov
mov
rcll
jnp
sub
stos
sbb
xor
div
imul
sar
cwtl
cmpsl
ret
sti
mov
pop
fwait
mov
mov
push
mov
stc
xor
sub
lock
mov
ror
dec
or
mov
cmpsl
cmpsb
cs
or
adc
lods
inc
pop
mov
or
jnp
xchg
lock
and
mov
add
push
aaa
pop
mov
inc
jecxz
mov
jns
jp
jno
lcall
hlt
mov
mov
mov
pop
sahf
dec
mov
mov
js
xor
pcmpgtb
inc
insb
xor
cmpsb
and
nop
arpl
pop
imul
push
aam
pop
ret
pop
cli
mov
ds
and
stos
in
lock
push
shll
jbe
sbb
sahf
es
in
jns
jge
ljmp
xchg
les
push
push
icebp
test
or
inc
test
add
outsl
nop
nop
stos
daa
fisubl
in
test
jg
inc
and
mov
pushf
arpl
addr16
cmp
rclb
pushl
outsb
lea
dec
lahf
in
fiadds
lods
and
fsub
xchg
lcall
test
push
mov
repz
ja,pn
hlt
push
lret
cmp
inc
push
jo
pop
and
rcrl
add
inc
shl
aam
scas
icebp
into
mov
jno
mov
inc
add
stc
ja
loopne
push
dec
or
nop
push
adc
xlat
dec
arpl
jne
call
dec
or
shr
sbb
mov
or
or
jb
mov
sub
jge
mov
lcall
xchg
or
fdivp
cmpsb
lock
int3
or
into
push
mov
xor
loopne
jae
aad
out
movsl
cmp
lock
mov
pop
mov
les
test
pop
inc
mov
and
push
and
repnz
nop
addr16
pusha
scas
pop
arpl
jno
xchg
lods
pop
jb
pop
inc
movsl
cmp
pop
xor
dec
stos
lret
dec
mov
pop
mov
dec
imulb
movsb
xor
jno
jle
xorb
repz
mov
dec
or
jne
sub
cmp
xchg
dec
and
push
scas
je
dec
xchg
or
pop
sub
lods
call
mov
xor
sub
inc
je
jbe
stos
mov
cmp
dec
xchg
adc
into
imul
repnz
jmp
lret
jnp
rcll
es
and
add
loop
sbb
lods
xchg
cmp
cli
xor
cmp
in
or
out
and
add
push
stos
push
push
daa
sarl
out
xchg
leavew
push
or
movsl
push
jmp
pop
loope
mov
lret
mov
pop
push
adc
mov
call
outsb
gs
sbb
adc
test
inc
push
xchg
dec
mov
sub
jmp
jns
inc
inc
mov
out
bnd
in
testb
add
fs
inc
mov
xor
data16
inc
jnp
dec
sbb
and
fidivrl
divl
mov
les
pop
xchg
sti
mov
lea
cld
add
lods
inc
sub
rclb
inc
mov
push
inc
cld
lret
mov
or
scas
faddp
call
pop
inc
fs
add
in
cmp
sbb
pusha
cltd
sti
inc
notb
les
push
sub
je
loopne
jno
dec
adc
mov
pop
add
pop
sub
loope
pop
push
in
movsl
scas
push
inc
test
popf
outsb
mov
lea
pusha
stos
cmpsb
loope
mov
in
lea
cmp
mov
aas
xchg
in
push
jo
ljmp
cmp
fucom
and
inc
lret
ds
popf
hlt
fnstsw
mov
pop
mov
or
and
insb
and
add
fidivrs
xor
push
subl
imul
fimuls
sub
cld
and
push
das
into
movsb
scas
popf
not
imul
sti
sub
ficomps
xor
fsts
push
subb
fcompl
pop
pop
scas
daa
scas
inc
inc
or
stc
push
sbb
ss
xchg
cs
mov
and
push
add
insl
and
out
adc
dec
xor
mov
les
xchg
jmp
rolb
pop
pushf
jle
test
bound
es
out
xchg
mov
push
pop
sub
mov
pop
iret
dec
int
add
mov
adc
adc
stc
cmpsb
stos
jmp
js
mov
adc
jmp
sub
sub
mov
into
dec
push
push
out
cmpb
shlb
clc
jmp
leave
xchg
es
cmp
and
mov
daa
sarb
push
add
jmp
pop
scas
imul
in
cmp
das
aaa
cmp
mov
dec
dec
rcl
xchg
aad
dec
xchg
testl
sti
mov
xchg
inc
push
lock
jle
adc
pop
push
clc
int3
and
into
nop
mov
sbb
add
mov
mov
orl
lds
mov
mov
dec
stos
jb
xor
das
cmp
inc
lea
pop
fwait
xlat
mulb
cmpsb
cld
or
nop
pop
sbb
cmp
xor
ret
jecxz
inc
out
pusha
jb
lods
jge
mov
popf
pop
jmp
cmp
fwait
std
cmp
jl
es
jno
aaa
into
gs
in
xlat
pushf
jnp
iret
lods
xchg
inc
or
mov
jmp
stc
insb
inc
sub
data16
and
movsb
sbb
js
xor
pop
fxam
xchg
jg
dec
jmp
fisubrl
loope
cmp
scas
mov
xor
imul
jmp
and
das
lret
bound
mov
es
inc
mov
cwtl
jge
pop
fmull
fptan
inc
sub
out
lret
pop
fsub
mov
sbb
ret
xor
push
cmc
nop
and
fdiv
lahf
xor
jmp
gs
and
inc
xchg
scas
cwtl
cmc
push
add
addb
pop
adc
cmc
adc
pop
imul
push
push
das
out
std
cwtl
cwtl
cmp
pop
js,pt
jmp
pop
jo
inc
test
or
mov
push
loop
push
cmpsb
jge
mov
pop
leave
arpl
mov
cmp
pop
push
sbb
push
pmaxub
in
or
leave
les
push
inc
repz
iret
or
test
ja
push
dec
hlt
jp
cs
and
push
out
xadd
imul
xchg
add
xchg
sub
cmp
insb
add
pushf
push
movl
adc
mov
fdivp
incb
xor
and
test
aas
mov
inc
fsubl
out
mov
es
pop
fs
and
iret
inc
dec
add
bound
push
in
dec
cmp
out
cmc
mov
loop
inc
lahf
je
or
sti
or
ret
lret
icebp
icebp
out
and
pop
push
lods
cmpsb
jnp
xor
sbb
pushl
or
mov
scas
or
leave
cmpsl
jg
and
shrb
add
pop
movsl
int3
lcall
ficoms
test
sbb
jmp
xor
ret
adcl
mov
push
jae
jnp
push
aad
mov
mov
xor
mov
cmpb
push
push
nop
jge
sbb
int3
fs
lret
jp
fcoml
pop
dec
test
xchg
xchg
cmp
in
divl
mov
arpl
sbb
jp
push
mov
sub
mov
inc
sub
adc
dec
xchg
sti
fistps
jge
jnp
ljmp
faddl
loope
inc
xchg
add
std
sbb
repz
add
sbb
mov
mov
xchg
cltd
add
je
rcrl
pop
outsb
mov
iret
sbb
jae
lods
fisttpll
sub
push
ret
lods
aad
imul
add
jge
pop
loope
push
mov
pop
sbb
iret
loope
sti
mov
cmp
pop
mov
je
in
stos
dec
cmp
jno
hlt
mul
daa
push
loop
ljmp
int
cmc
push
sbb
cs
lret
ret
cmpsl
icebp
addr16
aad
cmp
mov
cmp
movsb
lret
cmc
jmp
in
mov
or
mov
std
in
inc
sub
xchg
mov
movsb
sahf
adc
test
in
fmul
mov
das
xchg
xor
popl
xchg
inc
flds
jne
out
repz
add
cwtl
pop
pop
setae
jl
dec
sahf
ficompl
es
and
outsl
mov
add
fs
inc
adc
mov
xchg
add
push
sub
mov
rcll
adcl
imul
mov
jno
mov
add
mov
pop
push
mov
xor
add
mov
pop
sbb
add
stos
mov
movsb
add
sbb
xchg
push
repnz
xchg
in
cmp
insl
cltd
and
sub
cmp
xor
aas
bound
mov
xchg
imul
sahf
sub
sub
test
add
outsb
mov
pusha
or
cwtl
imul
insb
out
mov
mov
ret
imul
mov
add
cwtl
int3
pop
mov
lods
xor
and
pusha
adc
out
stc
je
push
iret
stc
sti
cmpb
fndisi(8087
push
xor
out
cmpsb
aam
shr
xorl
jo
sub
ljmp
adc
push
add
mov
cmp
pushf
jnp
jmp
and
ss
sbbl
push
aad
insl
icebp
loopne
sub
popf
dec
inc
aas
dec
out
adcb
filds
mov
loopne
cs
in
mov
enter
cli
adcl
xchg
cmpsb
pop
sti
jbe
sub
fisttpl
sbb
dec
in
sbb
jl
mov
push
popf
arpl
pop
lcall
scas
lret
pop
sahf
or
enter
push
jnp
mov
pop
jo
mov
push
inc
pop
cwtl
lahf
pushf
test
fistps
shrb
rorb
fcmovnb
push
dec
fidivs
movsl
leave
add
cli
push
and
imul
cmc
fs
or
inc
or
push
aaa
ds
lock
dec
bound
xor
and
cld
add
jge
arpl
scas
cmp
xchg
shll
and
cmc
lods
xchg
or
dec
cmp
xchg
mov
insl
insb
pop
int
shl
inc
stos
test
xchg
aas
xor
mov
mov
pop
fcoms
clc
in
je
pop
push
and
cwtl
test
cli
jno
sub
popl
clc
pusha
call
call
loopne
mov
adc
loope
add
lea
mov
sbb
adc
inc
pop
jecxz
mov
out
stos
faddl
jp
je
mov
lods
push
pop
pop
xorl
cmp
xor
sub
jmp
out
pop
jae
cs
xor
fcomi
mov
rcrb
xchg
outsl
mov
sub
cli
pop
fisubs
mov
ret
test
ret
pop
xlat
pop
jmp
or
imul
cli
or
lods
lret
stos
aaa
testl
cmp
or
scas
jnp
push
push
daa
aam
push
inc
mov
repnz
sub
cmpsl
imul
jmp
mov
push
div
cmc
pop
adc
mov
push
aam
add
sub
mov
nopl
in
mov
xor
or
hlt
jecxz
sbb
mov
xorb
nop
jl
daa
inc
cmp
in
mov
sub
dec
sbb
out
jne
stos
scas
xchg
lds
rorb
adc
inc
xor
test
je
or
xor
fs
scas
sbb
mov
dec
jno
aas
xchg
xchg
pop
jg
mov
push
andb
pop
hlt
icebp
ss
adc
scas
imul
std
or
mov
jns
push
notb
aaa
or
xchg
push
cmp
pop
pop
dec
mov
adc
or
dec
lods
bound
hlt
mov
call
and
out
adc
hlt
aam
outsl
fistl
adc
sub
das
inc
xchg
pop
and
ret
negl
mov
mov
inc
or
pop
push
jecxz
aas
je
xchg
mov
pusha
sarl
inc
aad
cli
pop
cmc
sbb
jecxz
lahf
cwtl
mov
inc
lock
push
dec
mov
ss
insb
and
in
les
int
pushf
fwait
pop
repz
mov
jnp
dec
mov
cli
and
xchg
roll
mov
xchg
fwait
jae
aas
cwtl
imul
cmp
lahf
movsb
sbb
xchg
mov
dec
enter
sbb
sbb
bound
popf
imul
ficomps
scas
notl
pop
mov
push
add
dec
push
out
mov
data16
push
lret
ret
aad
dec
jle
mov
js
jge
mov
cmp
and
call
lahf
fidivl
fisubrs
lock
sahf
lds
pop
push
pop
mov
lock
mov
orl
lock
add
mov
ss
dec
mov
push
test
out
xor
pusha
jb
stc
push
pop
insb
scas
sub
stc
mov
enter
in
test
call
aaa
cmp
repz
mov
mov
fdivr
or
mov
mov
jno
std
xor
rolb
xor
leave
test
daa
fcoml
dec
sbb
pop
pop
sub
fsts
and
insb
jg
fmul
jmp
dec
cmp
cmp
mov
sbb
imulb
mov
mov
and
lcall
out
xchg
jp
ljmp
andl
push
sub
push
clc
leave
sub
fdivs
and
std
fcomp
cmc
mov
push
enter
and
arpl
pop
cld
cmp
std
and
push
shll
sbb
adc
notl
pop
subb
popf
cmpsl
adc
out
add
jl
add
pop
mov
jae
push
adc
sbb
jmp
push
stc
ss
cmp
out
mov
lea
lods
mov
popa
imul
mov
nop
and
in
shrb
pop
mov
lods
cwtl
fstps
sarb
iret
sti
out
push
mov
pop
test
fbstp
fs
insl
decl
mov
or
iret
aas
movsl
cmp
mov
xchg
sub
dec
arpl
dec
pop
pusha
sbb
push
or
xlat
xchg
sbb
or
fcomp
aas
cmp
xchg
sub
cmp
jnp
mov
xchg
fwait
mov
ljmp
adc
aas
lret
aam
mov
in
movl
jb
or
test
movsb
jecxz
test
je
inc
push
inc
mov
inc
jp
nop
push
pop
cs
movsl
cmp
mov
or
pop
pop
cmp
imul
jge
arpl
int3
xlat
test
xchg
bound
in
push
jbe
pop
add
inc
lret
jb
xor
mov
push
insb
xor
fcompl
mov
mov
jae
sarl
and
dec
lock
jo
inc
inc
jle
add
lahf
add
xchg
ljmp
rcl
les
incl
add
push
pop
mov
dec
lret
nop
loopne
sbbb
cmp
and
ljmp
sub
mov
mov
ret
cmp
mov
dec
mov
jbe
or
cli
fsubl
roll
popa
jae
movsb
dec
mov
das
adc
insl
imul
popa
data16
pushf
fstpl
push
pusha
movsl
sbb
mov
test
repnz
fdivl
repz
xor
in
pusha
adc
out
or
xchg
int3
add
adc
pusha
cmp
pop
mov
scas
lods
insb
adc
jmp
xchg
inc
ficoms
aad
inc
cld
xchg
fldenv
push
mov
adc
shlb
dec
das
cmp
insb
pandn
add
push
repz
loopne
mov
lret
xchg
adc
jae
enter
rcll
loope
stos
ret
lret
inc
std
fldcw
iret
sub
cmp
jb
cmp
ficompl
cmp
pop
cmc
es
xchg
cmp
push
mov
sub
jae
jg
pop
xor
mov
cld
or
mov
xor
fldl
adc
mov
and
mov
icebp
pop
sbb
pop
push
jecxz
mov
push
outsl
call
and
into
ret
inc
cwtl
and
sbb
xlat
xchg
mov
mov
pop
hlt
add
or
pushf
lret
sbb
test
scas
fs
inc
sub
outsl
and
movsb
add
gs
arpl
sub
call
pushl
xchg
or
sbb
test
loopne
scas
in
movnti
xor
fs
lcall
cwtl
iret
mov
mov
into
cmp
mov
push
cmp
push
pushf
or
cltd
lret
xchg
cs
enter
jb
push
mov
push
sbb
push
push
lods
insl
imul
sbb
sub
add
test
sbb
xor
sti
test
inc
loope
rcrl
int3
pop
mov
jnp
scas
jle
xchg
out
push
test
mov
jl
outsb
xchg
ja
dec
xchg
mov
fidivrs
push
xor
or
iret
fcomi
jbe
xchg
leave
fcomip
add
or
push
imul
inc
push
sbb
mov
jecxz
cld
jno
sub
sbb
out
hlt
jo
stos
pusha
and
pop
jnp
mov
pop
arpl
sahf
add
flds
cld
jae
fdivs
imul
ret
lcall
js
insb
push
ret
ret
sbb
mov
inc
xor
jno
push
fimull
pop
insl
lods
sti
iret
sbbl
mov
fists
idivl
push
cmp
or
jne
imul
add
in
or
in
imul
dec
dec
jne
test
cld
mov
dec
mov
push
lret
push
popa
les
mov
pop
in
cmp
pop
aad
fdiv
jmp
cs
jle
int
dec
test
shll
pop
js
out
sbb
loope
jnp
lahf
pop
add
mov
aad
rcll
xchg
mov
mov
repz
add
andb
mov
adc
pop
ret
mov
jns
cmc
int
xor
inc
push
cmp
push
add
icebp
jp
mov
jno
mov
pop
daa
mov
adc
in
mov
scas
cmp
ja
lcall
enter
fistl
cmpsb
jo
dec
add
loopne
andb
cmp
mov
negb
ret
lret
das
in
push
mov
pop
mov
lret
fdivr
repz
pop
ljmp
mov
ja
xchg
mov
jns
push
xchg
insl
ret
cmp
cmc
pop
cmp
adc
aam
test
sbb
in
sahf
punpckhbw
or
sub
xchg
dec
rcl
loopne
cltd
xor
pushf
adc
out
outsl
or
mov
mov
rcll
and
stc
into
and
cli
cs
inc
call
xchg
mov
xor
push
cmc
rorl
adc
repnz
xor
into
or
jno
mov
jecxz
movsb
daa
fdivrl
ja
call
mov
add
add
stos
ss
cwtl
inc
fmuls
push
fwait
ret
mov
mov
lcall
xor
mov
leave
jae
ja
add
jle
mov
mov
jbe
das
fwait
sbb
adc
dec
bound
pop
mov
jmp
stos
popa
dec
inc
push
jmp
mov
addr16
movsb
cld
adc
divl
hlt
mov
sub
inc
clc
xor
shr
lret
fs
stc
or
stc
mov
pop
inc
clc
je
fsub
test
sub
out
xchg
inc
pusha
and
jp
mov
or
insl
sbb
out
movsl
dec
clc
inc
je
mov
push
f2xm1
shlb
lret
les
test
dec
push
frstor
mov
mov
push
arpl
rcrb
xor
clc
mov
xchg
movsb
stos
xchg
mov
rcrb
shl
cmpsb
addl
add
fidivs
gs
cmp
mov
mov
mov
movsl
outsb
mov
lods
int
inc
inc
std
xor
popa
cwtl
dec
js
cmpb
out
and
clc
xor
inc
scas
cs
jb
sbb
mov
mov
out
in
daa
aad
lahf
incl
mov
idivb
xchg
inc
cmpsl
sub
sbb
imul
mov
popf
push
pop
fucomp
mov
test
rcll
cmp
jge
jae
jge
imul
dec
inc
rcrl
dec
rol
comiss
xchg
in
aam
add
adc
sbb
and
xchg
repz
push
sub
add
test
inc
mov
out
sub
mov
addl
inc
xor
jmp
aas
inc
fsubp
xchg
test
inc
fcomip
cmp
mov
jecxz
mov
mov
pop
xchg
or
mov
mov
popa
pop
test
js
or
in
scas
int
mov
xchg
sub
jnp
js
mov
jo
cmp
pop
fidivrl
fidivs
stc
arpl
out
fs
dec
push
pop
add
adc
push
int3
xchg
ror
aas
mov
pop
hlt
aaa
jb
adc
stos
mov
adc
mov
jne
movsb
dec
xlat
inc
les
mov
cwtl
ret
call
idiv
in
mov
shll
subl
insl
popa
dec
xor
arpl
cmpsb
test
mov
mov
and
sub
mov
mov
pop
fucomi
in
adc
in
clc
adc
imul
fs
push
out
addl
cmpl
cs
mov
ret
mov
loop
jmp
call
xchg
stos
cmpsl
sbb
arpl
pushf
sub
xor
test
test
mov
rcl
mov
push
inc
divl
inc
pop
sbb
push
lcall
xchg
les
xchg
add
push
sbb
ds
test
pop
mov
lock
loop
jecxz
jle
sarb
fdivs
dec
add
add
dec
jne
adc
nop
fdiv
and
push
xchg
inc
adc
xor
cmpsb
or
xchg
cmpsl
jae
cmpsl
lret
mov
jo
fbld
sahf
jbe,pn
jnp
cld
dec
mov
mov
mov
or
stos
or
add
jne
jno
pop
cmp
xchg
fs
movsb
rorl
inc
xchg
or
and
or
ficomps
jno
push
in
xchg
hlt
pop
hlt
aas
jecxz
sbb
enter
arpl
lret
dec
mov
inc
jp
xor
and
xor
stos
jl
lds
dec
outsl
lahf
mov
jns
ret
jg
cltd
sub
and
mov
and
stos
out
and
movsb
repnz
call
aas
and
mov
or
add
and
sti
xchg
fsubrl
pop
pop
adc
js
mov
sbb
jb
xor
and
aam
gs
hlt
and
aas
ja
inc
mov
push
stc
fstps
and
shl
shl
test
or
push
mov
imul
lea
out
lahf
ds
push
jbe
xor
xchg
jmp
push
push
or
imul
fwait
popf
sub
mov
mov
push
fistl
sbb
in
icebp
or
pop
hlt
movsb
fisttpll
enter
aaa
lods
cmp
jo
stos
xchg
in
push
mov
push
xchg
add
in
pop
or
loopne
mov
dec
mov
lock
aaa
jo
add
out
dec
insl
popaw
js
outsb
pop
ret
test
push
cmp
stos
inc
hlt
xchg
test
push
push
jo
adc
mov
sti
xor
and
adc
inc
sub
pandn
inc
pop
dec
cmp
mov
and
jecxz
stos
gs
cmp
or
cmp
and
cmpsl
mov
ja
jp
sub
lahf
xor
cmp
ret
aam
lds
add
lods
in
jmp
ljmp
fnsave
add
pop
outsl
mov
movsb
or
mov
pop
std
inc
ret
shlb
cltd
mov
jno
mov
inc
mov
add
mov
xchg
test
dec
sbb
popa
loope
outsl
push
cli
xor
roll
adc
movsl
jge
fscale
roll
out
sub
popf
lods
lock
jle
inc
pop
test
jmp
push
xor
fimull
outsl
cltd
ret
xorl
or
push
insb
push
add
or
push
mov
loop
and
or
in
aaa
cmpsl
dec
inc
adc
cli
ja
adc
das
xchg
push
lcall
pusha
lock
xor
xor
addr16
fdiv
xchg
pop
lods
pop
out
testl
adc
mov
lret
enter
addr16
imul
add
inc
ror
or
bound
lahf
pusha
jbe
mov
mov
sbbl
ss
rcll
pop
and
addr16
pop
cltd
fstl
hlt
shll
xchg
hlt
sbb
rclb
inc
mov
or
insl
leave
mov
xor
mov
scas
cwtl
je
frstor
sbb
cmpb
pop
js
enter
lds
sahf
inc
sbb
adcb
mov
cmp
xchg
pop
bound
std
push
popa
pop
movsl
push
xchg
cmp
jle
inc
call
xlat
scas
inc
inc
int3
cmp
or
leave
mov
movsb
jl
push
outsb
sbb
jno
std
push
or
test
lods
lock
adc
rcrl
jno
lods
xchg
aad
fs
popa
xchg
adc
inc
test
and
leave
add
mov
cmp
mov
mov
ja
shll
negb
push
adc
inc
push
fldt
push
out
outsb
bound
aaa
icebp
inc
xor
addr16
rclb
gs
jno
sub
mov
hlt
adc
adcl
ret
jns
jl
gs
shll
mov
xchg
adc
loope
lret
aas
inc
add
scas
sub
sub
nop
adc
les
mulb
sbb
adc
scas
mov
or
sub
jnp
mov
scas
int3
ret
insl
mov
std
fwait
mov
icebp
pop
repnz
mov
fdiv
push
fistps
xchg
mov
push
push
stos
push
mov
jp
add
fwait
outsl
jle
mov
xchg
sbb
cwtl
cmp
sub
test
and
mov
sbb
leave
pop
dec
push
and
addr16
xor
scas
pop
cli
cmp
jge
push
fisubl
sbb
inc
jbe
push
mov
call
dec
mov
cltd
repz
test
mov
pop
rclb
outsb
lret
cmpsb
mov
ret
and
adc
xor
cmp
loope
add
adc
stos
fiaddl
and
sbb
push
icebp
fstpt
mov
jle
stos
mov
xor
sahf
insb
std
test
cmp
shrb
jle
cmp
fs
dec
cmp
xlat
movsl
aas
dec
sbb
int3
xchg
xchg
in
in
add
lds
insl
add
aas
mov
push
pop
cltd
jge
mov
iret
mov
test
in
mov
jae
call
sbb
aad
stc
pop
es
fst
outsw
push
push
xchg
push
adc
jp
leave
pop
filds
arpl
mov
xchg
jg
setae
push
out
mov
push
jno
pop
jbe
shlb
mov
xor
cmpl
mov
nop
push
pop
xchg
xchg
out
sub
inc
cmp
addr16
pusha
clc
mov
jmp
out
xor
popa
mov
add
aaa
andb
push
xor
out
and
fisubrl
pushl
pop
data16
out
mov
into
sub
sbb
cmp
mov
arpl
push
xor
popf
adc
ret
push
rcrl
push
outsl
rol
adc
test
and
sbb
inc
jns
or
imul
iret
push
and
aas
ss
pusha
sahf
adc
cmp
or
shr
cltd
test
or
mov
adc
xor
jnp
fstl
ffree
push
lret
mov
pop
push
sub
push
fidivs
cltd
or
aaa
inc
mov
pushf
popa
jns
cwtl
adc
arpl
dec
jmp
sub
fadd
es
sbb
lods
ds
add
and
jne
cld
lods
inc
icebp
in
push
mov
and
sbb
pop
fucomp
ss
outsl
lret
arpl
xchg
xor
iret
mov
sub
les
pop
call
jmp
mov
xor
jns
fisttpll
ljmp
cmp
xchg
fstpl
xchg
arpl
jae
jb
sbb
mov
enter
das
int
or
lahf
mov
test
inc
sbb
daa
insl
lcall
sbb
lods
sbb
push
xlat
push
dec
jecxz
daa
jmp
and
icebp
andl
push
dec
mov
mov
sbb
jecxz
js
jecxz
je
daa
inc
and
pop
lret
sub
out
add
movsb
fsubl
inc
bound
pop
imul
popf
cmp
test
mov
mov
cmpsb
mov
adc
xor
mov
aad
sub
jb
sub
sbb
lea
je
dec
and
pop
pop
lahf
ret
xor
or
pusha
pop
bswap
and
mov
cltd
fwait
jnp
shlb
insb
in
leave
test
ds
mov
jo
cmp
pop
in
stc
xlat
into
push
in
sbb
inc
adc
shll
gs
inc
das
sti
leave
and
popa
aaa
les
jecxz
lods
jg
or
adc
xlat
mov
ss
leave
push
repz
cmp
sbb
inc
sub
rol
dec
cmc
xlat
cltd
jo
stos
hlt
mov
jecxz
testl
inc
gs
mov
insl
sti
nop
sub
sub
mov
dec
ss
mov
shrl
mov
std
sahf
pop
xor
cmp
sub
push
adc
test
daa
out
mov
xor
or
cltd
sub
aaa
loop
fidivrs
popl
mov
dec
inc
pop
pop
inc
filds
icebp
mov
push
testb
cmpsb
ljmp
jmp
cmpsb
testl
addb
pushf
out
fidivrl
push
cli
adc
or
jo
clc
cmp
lock
xor
sbb
cmpsb
subb
bound
cmpsl
mov
aam
icebp
addr16
es
into
mov
cmpl
push
mov
std
pop
daa
jb
cmp
push
arpl
inc
mov
mov
aas
das
and
push
mov
sbb
insl
push
cmp
xchg
mov
int
shrl
jg
stos
and
adc
push
mov
mov
data16
adc
mov
repz
cmpsl
dec
xor
adc
mov
pop
stos
add
add
ror
in
rcrl
mov
enter
mov
test
mov
cwtl
pop
sub
dec
xchg
mov
sbb
xchg
ret
sub
pop
jl
ss
imul
push
lea
pop
mov
inc
insb
mov
jno
jo,pn
jg
sub
mov
mov
je
sub
test
push
sbb
movsb
arpl
fists
mov
jmp
shr
push
pop
or
jbe
adc
mov
addr16
addr16
loopne
imul
incl
movsl
das
sbb
jnp
inc
xchg
shlb
cli
pop
mov
imul
nop
dec
cltd
xor
stos
or
xlat
push
xchg
and
push
dec
pop
test
dec
lods
mov
in
shll
shl
add
xor
mov
into
popf
inc
movl
mov
out
imulb
xor
scas
or
pop
sub
pusha
sbb
in
lds
mov
cmp
pop
inc
sub
sbb
insb
stos
mov
fsubl
mov
cmpl
adc
sub
jne
iret
jmp
xchg
iret
mov
imul
nop
stos
test
rorb
jmp
lds
scas
push
push
test
mov
xor
cmp
out
dec
in
xor
cmpsl
scas
ficoms
mov
iret
adc
fsubs
cld
lea
xor
mov
xor
add
insb
pop
lahf
push
pop
icebp
daa
xchg
push
je
ja
xchg
test
rol
jle
mov
out
xchg
das
sub
sbb
pop
in
xchg
sub
xor
or
call
repnz
shrl
sub
pop
shrb
mov
mov
loopne
pushf
adc
jecxz
push
cwtl
pop
dec
mov
jmp
jle
das
mov
notl
pop
dec
scas
add
xchg
pushf
out
jb
xchg
fnsave
jne
pop
or
adc
loop
xor
out
jno
add
and
bnd
cmc
jns
sub
jo
pop
in
insb
fldpi
adc
int
cli
popa
mov
out
test
stc
js
dec
fiadds
mov
inc
nop
inc
cs
mov
add
in
inc
cmpsl
xchg
pop
es
imul
lods
sbb
movsl
jecxz
and
shll
inc
outsl
ret
jno
divb
inc
xchg
mov
nop
mov
cmpsl
lods
nop
sti
push
mov
lret
inc
sub
lods
scas
fwait
push
sub
xchg
pop
pop
xchg
fldenv
pop
shlb
jecxz
cmp
and
push
cld
repnz
lods
sub
hlt
mov
push
fdivl
mov
inc
cmc
cmp
sbbl
inc
cwtl
ss
aam
inc
push
dec
in
and
int
dec
cld
and
cmp
adcb
add
out
iret
cmpsl
push
test
leave
je
jae
aas
les
fcomps
sub
mulb
hlt
pop
xchg
dec
inc
or
inc
popa
adc
andb
stc
push
cmc
leave
inc
in
scas
cmc
push
jp
movl
mov
inc
movsb
inc
out
dec
orl
insb
bnd
or
decb
xor
sbb
stos
lock
mov
adc
pop
imulb
sbb
sub
inc
pop
mov
outsl
loopne
and
xor
fnstsw
xor
or
mov
enter
dec
sbb
push
shll
frstor
or
push
adcl
in
adc
jo
ret
mov
inc
adc
dec
xchg
cs
inc
nop
decl
inc
add
cmp
and
sbb
outsb
sbb
sub
push
pop
mov
sub
enter
ficompl
pop
mov
push
imul
mov
jae
das
adc
mov
mov
jp
and
popa
mov
xor
push
fwait
aaa
out
fwait
xchg
jmp
scas
sbb
fistps
iret
inc
inc
rclb
lock
mov
jno
fidivs
scas
test
and
out
sub
in
push
xor
fldcw
ljmp
and
inc
popf
outsb
xor
sahf
pop
cltd
xor
inc
cmpsl
lea
cmp
outsb
out
dec
and
push
xchg
ss
push
xor
sbb
or
ljmp
addr16
mov
aam
loopne
dec
cmp
sbb
push
ret
jnp
pop
jmp
je
jns
or
mov
clc
aam
jno
testb
test
divb
cli
pop
cli
arpl
leave
xor
stos
icebp
pop
mov
std
fs
lcall
movb
lret
pusha
adc
icebp
or
push
push
ds
aaa
cmc
mov
adc
push
mov
add
pop
sub
xchg
xor
mov
jo
inc
inc
xchg
push
mov
xchg
dec
jns
mov
cmp
xchg
sub
rorb
fdiv
out
movsl
jae
outsb
xchg
lds
xchg
cmp
pushf
scas
dec
mov
inc
lds
out
loopne
sbb
sarb
jnp
cmp
call
mov
xor
cmp
or
popa
test
dec
imul
add
mov
lock
cmc
mov
in
cs
sbb
sbb
adc
cli
jecxz
into
mov
mov
mov
outsb
push
int
dec
dec
aas
test
push
aam
push
jns
das
xchg
je
lea
sahf
cmp
jp
add
imul
leave
sbb
int
and
call
pusha
mov
in
mov
cmp
dec
cmp
stos
or
hlt
push
in
clc
fisttps
ds
sub
aas
fcmove
ljmp
push
out
xor
mov
sub
inc
lods
shll
cmp
mov
insb
rcll
es
lock
jbe
mov
mov
push
out
cli
pop
scas
repz
cmp
xlat
xor
int
mov
add
cwtl
push
inc
push
xchg
mov
push
aad
cmp
push
jl
nop
cmp
repnz
sbb
mov
cmp
stos
push
mov
out
daa
sub
imul
cwtl
test
js
out
movsb
sbbl
sub
ffree
adc
mov
mov
out
push
jnp
cli
sbb
inc
add
adc
jmp
jne
test
fimull
lret
ffree
ret
test
mov
sub
inc
pop
xchg
jg
popa
dec
push
mov
pop
mov
inc
je
add
and
sti
add
loop
icebp
sub
hlt
cmpsb
ds
pop
pop
rcll
jecxz
aam
aaa
and
into
or
dec
push
andb
daa
xorb
lods
jp
dec
mov
outsl
decl
push
lcall
stos
add
rcrb
sub
icebp
sar
aas
mov
jnp
xor
int
jmp
push
sub
lahf
ret
push
stos
dec
jg
cli
hlt
cmp
cmp
popf
and
pop
xor
push
push
push
xor
pop
jns
sbb
popa
daa
ret
cmpsb
or
inc
aam
sti
scas
stos
mov
mov
cmp
jmp
jle
ret
xchg
sarb
mov
cmp
bound
dec
cmp
lcall
test
fmuls
pop
jns
sub
jo
push
sbb
cmp
or
add
add
xchg
add
daa
add
cmpl
movsl
pop
dec
negl
leave
pop
or
or
add
jmp
mov
inc
mov
mov
adc
sub
loope
mov
add
pushf
mov
jne
rclb
jns
pop
addr16
jo
mov
xchg
mov
jb
push
jecxz
pop
lret
lods
jne
lock
outsb
adc
sub
mov
sub
push
jmp
daa
out
jne
ds
xor
in
xor
ds
and
cmp
aam
mov
sahf
mov
cld
cmc
add
adc
iret
add
and
adc
in
xor
call
lcall
or
push
rclb
iret
sub
lock
fs
sub
out
push
dec
into
mov
push
or
bound
inc
xchg
outsl
dec
xchg
mov
xchg
popa
jmp
cwtl
jo
sbb
rorb
sbb
or
or
stos
outsl
sbb
lcall
push
lods
inc
imul
dec
mov
ficomps
fwait
add
in
cmpsl
inc
xor
xchg
setns
jge
pop
jge
push
push
rcll
imul
push
add
int3
repnz
sub
mov
mov
aas
movsl
mov
cmp
adc
xchg
cmc
or
mov
fwait
mov
int3
cmc
cmp
add
xor
pop
adc
mov
mov
test
lods
pop
out
mov
lock
rcrb
arpl
xor
jl
shlb
push
push
pop
push
mov
xor
pop
out
mov
cmpb
mov
xor
loopne
pop
jne
cmp
jne
fmull
inc
stos
cs
mov
rcl
push
sub
cmp
rcl
fwait
popa
into
cmp
pop
jno
ficomps
and
scas
cmp
aaa
cmp
pop
and
and
inc
pop
sub
movq
mov
fcoml
jmp
xchg
in
lret
outsl
iret
movsl
inc
dec
mov
imul
aas
out
jle
mov
rcrl
cmp
adc
pushf
pushf
jae
dec
push
scas
pop
mov
sub
adc
mov
in
or
fsubrs
mov
push
data16
fidivrl
mov
push
fidivl
cmpsb
sub
fs
mov
mov
mov
inc
and
outsb
pop
cld
outsb
data16
add
push
lcall
cld
enter
lods
mov
loopne
in
mov
popf
mov
xchg
mov
add
enter
cmp
lahf
sbb
das
add
sti
cmp
pop
mov
movsl
lahf
imul
nop
outsb
push
or
sub
cmp
in
mov
ljmp
daa
push
out
shrl
mov
aad
sbb
cmpsl
in
cltd
push
sbb
jecxz
sarl
fmul
lahf
push
rcrb
add
jae
ja
mov
in
aad
aas
scas
add
mov
repnz
xor
sti
pop
decb
movsl
iret
add
dec
popf
imull
inc
mov
sub
mov
xchg
sahf
mov
popf
shll
out
mov
lret
inc
cmp
notb
out
sub
cmp
rorl
jl
enter
outsb
mov
dec
lcall
cmp
dec
mov
hlt
std
adc
clc
orl
inc
call
add
int3
scas
push
arpl
xor
in
pop
popa
outsb
shll
push
ret
dec
push
mov
enter
adc
mov
mov
outsl
sub
in
sub
inc
leave
cli
ds
adc
cmpsl
pop
mov
adc
test
xchg
mov
repnz
lea
iret
out
xorl
and
outsl
mov
ja
add
popf
lods
stc
sub
mov
ret
out
and
into
sbb
sub
xchg
inc
rclb
les
loope
sub
cmp
clc
add
fstpl
roll
fstpl
dec
jb
push
test
inc
in
mov
pop
sbb
jle
add
mov
cmp
jp
arpl
dec
data16
jl
mov
movsl
dec
sbb
mov
mov
mov
call
xor
inc
fldenv
mov
inc
xor
sarl
mov
rcrb
adc
mov
pop
mov
or
scas
lods
sti
mov
xor
pop
cs
out
rorb
cmp
leave
pop
stos
dec
cmpsb
sub
or
cwtl
sub
sub
insl
add
pop
sub
out
mov
sub
ja
fdivrs
sti
sbb
dec
aam
push
add
repz
xchg
stos
shl
cli
cltd
mov
push
add
adc
hlt
sub
and
shrb
sub
push
cli
das
sarb
and
or
mov
in
lock
packuswb
adc
fmul
sbb
data16
add
xchg
pusha
mov
and
ret
mov
sahf
add
xor
mov
negl
fisttpl
xchg
adc
gs
jae
mov
and
xor
push
lahf
sbb
pusha
cmp
cmp
xchg
jb
aaa
sub
sahf
pop
dec
mov
xchg
add
dec
cmp
push
mov
jle
jne
lret
jb
rcrl
adc
cmc
push
push
mov
xchg
mov
test
push
push
lea
sbb
cmc
and
es
adc
enter
ljmp
jns
sbb
xchg
arpl
push
push
lahf
adc
sti
mov
adc
mov
aad
inc
mov
insb
sbb
stc
or
mov
subb
xchg
fwait
cmp
add
sbb
jg
sbb
jo
mov
sub
out
sbb
test
dec
in
inc
das
sahf
push
mov
outsb
jmp
ret
xchg
mov
pushf
outsb
andl
out
xchg
mov
pop
and
movsl
mov
and
insb
icebp
shlb
jb
sarl
fucomi
xlat
ljmp
pusha
mov
arpl
fs
sbb
sub
ret
jp
clc
lods
rcrl
les
and
outsl
xchg
xchg
cmp
push
lods
cmp
andl
fidivs
insb
and
movsb
scas
xorb
out
icebp
add
popf
out
or
push
jp
add
cmpsb
mov
aas
lods
xor
mov
sbb
jmp
pusha
movsb
dec
xor
in
push
mov
dec
pop
xchg
inc
jnp
into
enter
sti
jnp
popa
push
andl
cmc
in
xchg
test
mov
jle
inc
flds
fidivrs
mov
mov
pop
adc
faddl
mov
or
fcompl
xchg
jp
cli
lds
add
lds
mov
xchg
mov
lock
lock
inc
xor
sub
push
into
xchg
or
xor
imul
add
aam
adc
dec
or
sbb
lahf
arpl
insb
mov
fwait
repnz
repz
xchg
out
cmp
popa
test
pop
mov
sub
popf
sub
repnz
xchg
popa
mov
push
or
or
js
cmp
in
mov
pop
arpl
nop
and
jnp
or
inc
xchg
mov
xor
sub
add
pushw
imul
or
jne
pop
loopne
push
cwtl
push
or
js
sub
push
ja
mov
push
orb
loop
sub
adc
insb
jbe
sub
mov
mov
cmp
lcall
cmp
test
xchg
mov
xchg
adc
test
aam
repnz
push
or
sbb
dec
out
dec
ja
dec
gs
movsl
or
call
cltd
std
ja
call
insb
icebp
dec
imul
adc
dec
sub
imul
pop
jno
lods
lahf
test
push
add
ret
xchg
aad
push
xchg
mov
stos
shl
push
pusha
jge
or
mov
dec
hlt
neg
xor
mov
mov
in
fnsave
dec
mov
lock
mov
push
mov
cwtl
xor
xor
daa
jecxz
mov
cli
adc
jne
lcall
cltd
xchg
ljmp
shll
and
mov
add
outsb
xchg
and
shrb
mov
dec
arpl
mov
jo
add
les
jmp
fstpt
and
inc
push
inc
push
jb
mov
shll
ds
pop
cmpsl
pop
sub
icebp
jecxz
or
or
int
mov
or
xchg
insb
into
test
mov
fwait
shll
repz
and
xor
and
movsl
add
stos
dec
dec
ds
sbb
leave
and
add
lret
pop
push
out
inc
mov
mov
mov
adc
jo
outsl
sbb
xlat
mov
and
mov
cmp
mov
cmp
jns
and
dec
add
lea
or
popf
fmul
lock
adc
push
hlt
int
xchg
mov
das
inc
or
push
repnz
inc
mov
cwtl
xchg
jle
lods
in
repnz
jnp
pop
xchg
hlt
mov
add
pop
push
xor
jl
and
sub
mov
cli
inc
enter
xchg
ja
mov
movsb
daa
mov
loope
jecxz
push
xchg
popa
push
mov
jmp
dec
jg
add
std
std
es
cwtl
test
out
and
adc
adc
and
sti
fcmovbe
inc
ret
movsb
adc
cmp
lahf
daa
jns
faddp
xchg
in
fisttpll
mov
sub
xchg
stos
cmp
ret
scas
imul
sbb
xchg
dec
inc
jl
imul
pop
sbb
inc
mov
push
sub
add
scas
mov
aaa
xor
mov
nop
sar
jp
pop
stos
movsb
insl
lret
ret
iret
mov
mov
daa
inc
daa
sub
aas
dec
mov
nop
xor
insb
ja
stos
xchg
jno
popf
sbb
lock
adc
dec
mov
fcmovnb
adc
ds
inc
sub
xlat
mov
mov
imul
mull
sub
jb
pop
add
pop
xchg
and
mov
sub
sti
fisubl
jle
aaa
pop
add
mov
jecxz
mov
movsb
or
imul
or
xchg
repz
faddl
or
popf
dec
pop
in
jns
mov
xchg
ss
orb
jmp
cs
inc
sbb
sbb
fnstsw
jge
mov
mov
xchg
pop
add
adc
movsb
mov
inc
icebp
std
add
pop
adc
test
hlt
in
xlat
leave
mov
insb
push
lock
out
xchg
inc
mov
lds
xchg
dec
push
sub
pop
xchg
push
sub
push
sbb
inc
les
add
dec
gs
cmpsl
pop
int
sub
inc
je
cmp
shrb
hlt
xchg
scas
int3
test
shlb
mov
ret
pop
loop
push
push
inc
cmp
js
dec
push
mov
and
lret
or
lock
repz
clc
les
pop
xor
sbb
dec
test
jmp
arpl
add
and
outsl
pusha
xchg
and
cmp
sbb
ret
les
push
ja
lcall
aam
test
ja
jmp
mov
xchg
add
inc
or
fnstenv
inc
std
iret
sti
push
fidivrs
outsb
jge
stos
and
lahf
mov
loop
adc
cld
arpl
lret
push
test
clc
sub
sub
xchg
or
dec
lcall
fadd
jb
loop
pop
sub
stos
dec
stos
arpl
jl
sub
sbb
and
enter
sub
ja
mov
cmp
hlt
sub
sbb
cwtl
pop
orl
bound
add
cmp
aad
sbb
xor
cltd
push
mov
call
shr
outsb
add
xor
dec
xor
imul
inc
xchg
push
xor
js
jmp
push
xchg
sub
dec
loop
out
or
es
dec
inc
xchg
filds
jmp
mov
mov
dec
mov
pushl
lods
push
ja
repnz
cli
dec
mov
ror
sahf
dec
add
movsb
xchg
mov
or
fldenv
ror
fldt
repnz
jg
ja
outsl
fists
jne
out
aam
pop
lock
inc
pushf
shl
sub
inc
test
daa
test
add
push
cmpsl
push
clc
mov
mov
test
lods
test
into
xchg
adc
aam
dec
lret
cld
call
outsl
xor
jne
jnp
jo
mov
inc
loop
mov
mov
push
loope
and
inc
push
movsb
orb
or
rorb
xchg
mov
and
xchg
jb
int3
push
sbb
hlt
ret
jmp
push
popa
call
outsl
icebp
lret
insl
dec
popf
pop
test
fwait
xchg
fldenv
aam
pop
pop
fisubrs
sub
adc
imul
xchg
inc
shrb
jp
jmp
outsl
data16
push
test
subl
jb
push
jb
ds
in
xorb
mov
imul
test
adc
je
movsb
ss
cmpsl
imul
mov
cwtl
inc
or
insb
rcrb
xor
sub
jecxz
iret
sti
leave
dec
fisubrl
sahf
xchg
jmp
jl
ja
jb
sub
pop
and
jecxz
hlt
xor
sbb
sti
pop
mov
push
shlb
rorl
cmc
lahf
pusha
das
loope
enter
sbb
mov
iret
or
cmp
mov
fisttps
sub
fucomip
add
push
ss
into
sub
inc
inc
mov
cltd
pop
mov
pusha
xor
call
aaa
out
fisubrl
pop
mov
notb
stos
pop
sysenter
push
jb
inc
out
sub
sbb
fnsave
or
je
sbb
cmpb
test
inc
ret
xchg
rcr
jae
call
cmc
fwait
pop
rolb
jge
or
and
pop
xlat
jmp
pop
loop
stos
sbb
jo
stc
inc
mov
cltd
shll
bound
or
push
mov
push
push
cmpsb
sub
shrb
mov
rcrb
shll
js
pop
jne
inc
cmp
into
enter
dec
pop
shrb
stos
sbb
popf
loop
sub
push
inc
and
push
sbb
insl
cli
jnp
daa
scas
iret
mov
frstor
add
mov
xor
outsl
fdivr
jno
xor
push
cmp
inc
es
fistps
xchg
push
lods
dec
movsb
sbb
loopne
cmp
jecxz
push
push
add
jbe
add
mov
xor
fdivs
adc
cmp
add
pop
sub
and
jmp
daa
add
test
add
gs
movsl
xor
dec
lods
fs
push
in
testl
arpl
mov
aaa
lahf
bound
pushf
sub
in
faddp
fbld
clc
lahf
popf
fsts
fbstp
add
sub
or
mov
addb
aaa
imulb
xchg
das
pop
fsubr
mov
jo
push
mov
pop
fldt
mov
das
cmp
sbb
shlb
mov
mov
jmp
jns
cmc
dec
push
aad
in
jge
and
ret
movsl
sub
in
scas
cmp
loop
fnstcw
and
mov
push
fdivr
scas
xor
cltd
das
add
mov
das
jle
push
ljmp
pop
sub
pop
sbb
call
sub
in
mov
mov
repz
cmp
xchg
push
fnstsw
add
push
fiaddl
lods
lcall
sbb
out
in
aaa
lret
sub
mov
push
jo
movsb
adc
add
js
sbb
pop
lahf
test
or
sbb
dec
popf
pop
pop
and
jl
ds
jb
int3
sub
or
fnsave
ret
mov
data16
cmp
mov
imul
jmp
roll
cmp
daa
mov
es
lods
sub
fbstp
frstor
lods
xchg
push
stc
leave
xor
sbb
dec
dec
es
xchg
inc
push
test
cmpsl
cli
mov
test
loopne
inc
movsl
jnp
lods
dec
mov
mov
out
jne
outsb
sbb
dec
nop
push
pop
add
repnz
cmpsl
in
popa
dec
cmpsl
repnz
inc
jne
je
inc
jbe
inc
out
jmp
pop
and
adc
add
inc
add
pop
push
pop
sub
in
popa
xor
xchg
rorl
adc
jl
nop
mov
outsb
lods
cmp
push
out
inc
push
sub
daa
pop
mov
pop
inc
aaa
lcall
xchg
test
data16
nop
push
cli
dec
mov
adc
lods
jo
arpl
xor
inc
inc
pop
cli
jmp
pusha
pop
and
lock
fisttpll
jge
sub
outsb
mov
push
inc
mov
mov
sub
push
shl
sbb
xchg
or
vpsubusw
fldcw
ja
nop
mov
lahf
cmpsl
mov
mov
jne
dec
orl
popa
jb
lcall
cmp
mov
xor
scas
jge
mov
subb
rolb
sahf
lret
shrl
loop
add
lahf
xor
js
ss
or
xchg
jge
sbb
push
fsubrp
cld
cld
push
pusha
pop
pop
mov
adc
xor
das
cmpsb
cmpsl
data16
dec
sbb
out
sahf
dec
mov
jns
dec
je
test
mov
ficoml
jmp
enter
mov
out
push
repnz
decl
xchg
sub
cmpsb
ret
loop
mov
inc
sbb
push
inc
inc
dec
jl
hlt
loopne
fwait
repz
inc
dec
pop
movsb
sbb
dec
gs
es
cmpsl
push
mov
incb
add
dec
lret
push
and
mov
jecxz
pop
pop
xchg
outsb
fcomps
jae
xchg
call
dec
insl
lea
arpl
sub
jns
mov
outsb
jl
dec
cmp
cmpsl
push
push
js
cmc
fsubrs
imul
xchg
cmpsb
add
sbb
lret
sbb
jmp
cwtl
xchg
ret
out
add
cltd
adc
inc
pop
and
cmp
jp
out
and
push
mov
jnp
in
xchg
fidivrs
push
push
mov
clc
ljmp
vprotw
aam
subb
into
inc
or
mov
stos
or
push
bound
cli
cmp
clc
std
mov
dec
fs
leave
fisubs
mov
lods
and
mov
test
push
je
pop
or
ucomiss
es
adc
test
pop
packuswb
sub
adc
pop
sub
dec
and
push
and
ret
insl
cs
sub
mov
insl
add
xchg
or
xor
ja
and
or
insb
rorb
dec
adc
jg
lods
mov
and
adc
lds
add
lcall
hlt
and
fisubrs
ljmp
pop
xor
outsl
in
std
or
lret
jno
dec
repnz
push
sarb
push
pop
ficoms
shll
fwait
stos
push
mov
and
add
shll
mov
inc
sbb
cwtl
jbe
fwait
mov
cwtl
cld
rorl
or
adc
js
pop
jecxz
push
jecxz
hlt
add
push
mov
mov
add
in
pop
divb
or
fistl
ret
xchg
pop
lahf
pop
or
add
pusha
jno
jmp
push
lock
xchg
dec
xlat
push
in
cmp
xchg
arpl
push
push
cmp
pop
imul
sbb
xlat
xchg
bound
lret
pop
mov
test
push
dec
sub
dec
repnz
arpl
sahf
adc
adc
in
in
lret
fldl
mov
cmp
stc
int3
aad
dec
pop
int3
pushf
and
or
pop
icebp
pop
mov
ret
or
adc
ror
xor
xchg
loope
dec
inc
ljmp
pop
cwtl
and
repz
jbe
lret
xchg
stc
mov
and
pop
jbe
mov
mov
cmpsb
jbe
shrb
lods
pop
mov
cli
mov
paddb
in
mov
fisubs
xchg
sub
xor
adc
in
outsb
push
push
push
movsl
lahf
es
or
icebp
cltd
jno
pop
enter
loop
cmp
xchg
jnp
sbb
mov
loop
clc
jmp
jns
fnstsw
push
xchg
es
aad
sbb
push
jns
call
scas
fisttpl
xchg
loopne
mov
ljmp
xchg
fcmovnu
cld
std
pop
lock
mov
push
mov
mov
sub
mov
xor
stc
jo
adc
cld
push
cmpsb
and
xor
mov
adc
adc
sub
cmpsl
rcr
mov
mov
cmp
and
shrb
inc
fildl
mov
pop
mov
gs
cmp
icebp
ljmp
fs
mov
mov
int
sub
daa
pop
pop
add
std
imul
into
lret
mov
fisttpll
lahf
lcall
xor
into
mov
lock
cmc
jp
aad
or
mov
test
adcl
std
gs
cmpsl
mov
sbb
mov
aaa
push
cmpsl
shl
fdivl
jae
adc
push
push
test
adc
leave
outsl
push
sub
mov
cmp
pop
ds
nop
push
roll
pop
in
mov
out
fldl
pop
mov
mov
adc
mov
xchg
into
mov
sbb
sahf
repnz
out
pop
insb
test
cmp
push
mov
jo
jle
cmc
lods
inc
mov
fiadds
lods
inc
fisubrl
sbb
pop
mov
bound
out
sub
icebp
out
pop
or
mov
mov
leave
fsubs
or
push
mov
mov
or
lds
rorb
add
cltd
xor
lcall
ljmp
lret
out
xchg
scas
add
inc
insl
outsl
js
outsl
add
cmpb
sahf
sbb
ja
nop
je
cltd
shll
les
aad
popf
icebp
lods
rol
shlb
mov
xchg
xor
sub
add
mov
cmp
mov
mov
pop
mov
xor
cs
mov
cmc
cmp
ss
cmp
pop
or
movsl
pop
mov
lods
lahf
repz
inc
fidivl
pop
out
adc
ljmp
addb
ret
mov
or
lahf
sbb
push
repz
daa
pop
or
mov
mov
jp
ja
fnsave
jb
dec
pop
xchg
cmp
fwait
jge
cmp
mov
sub
xor
xor
mov
enter
mov
dec
sub
sti
inc
xor
adc
jb
fcompl
mov
cmp
mov
adc
xchg
mov
pop
fisubrs
sbb
incb
addr16
shlb
mov
adc
and
pop
int
test
cmp
dec
xchg
adc
jnp
jg
push
mov
sbbb
xchg
mov
out
pop
xor
nop
xlat
or
mov
adc
fistpl
and
xchg
or
dec
scas
sub
sbb
stos
jo
cmp
mov
add
in
fisubrl
iret
and
loopne
out
add
arpl
sub
sub
imul
mov
fsubrs
and
or
popa
dec
push
cmpsb
or
aaa
in
push
xor
data16
in
pop
stc
jb
xor
dec
cmp
int3
xor
out
push
loop
icebp
inc
or
push
daa
into
lock
cmp
push
enter
testl
loopne
icebp
add
ret
xor
fcmovbe
mov
and
sbb
xor
xchg
std
mov
insl
lods
icebp
insl
lret
lds
adc
xchg
push
sbb
push
sbb
jg
cmp
push
jecxz
pop
mov
jno
or
outsl
popf
jns
ds
sbb
xor
mov
cmp
inc
stc
mov
pop
ds
sbb
daa
pop
rcrl
hlt
xchg
or
jmp
arpl
test
cwtl
push
mov
pop
xchg
into
repnz
and
xchg
rorb
stos
jnp
push
pop
clc
or
and
xor
leave
pop
xor
sbb
inc
mov
pop
aam
ss
loopne
es
adc
js
shrb
sub
jnp
push
mov
or
xor
xchg
fld
push
mov
mov
cmpsl
sub
sbb
sub
mov
jo
scas
sbb
in
push
mov
aam
add
push
and
in
inc
adc
aas
adc
push
adc
lds
jb
cmp
push
mov
movsl
fbld
dec
mov
mov
or
mov
sbb
xchg
mov
jae
sti
out
rcl
or
nop
sbb
lea
in
pop
shr
xor
pusha
ja
inc
in
std
adc
ss
scas
into
sahf
loopne
xchg
and
add
pop
sub
inc
hlt
lahf
pushf
xor
adc
jmp
cmpsl
jmp
stc
cmp
lret
sub
and
or
sti
arpl
addr16
into
pop
and
mov
push
mov
shl
jl
jns
lcall
popf
xlat
out
jb
push
mov
loop
xchg
out
in
repz
fisttps
ljmp
mov
shr
call
sbb
and
test
add
inc
sub
stc
jae
push
mov
mov
adc
mov
mov
aad
in
sub
sbb
outsl
xor
adc
inc
push
mov
xor
adc
sbb
inc
in
jbe
lea
xchg
mov
fldl
sub
mov
dec
mov
test
int3
divb
mov
jne
mov
js
arpl
fists
pop
add
push
sub
idivb
stos
cmp
xor
cmp
test
out
aas
xchg
dec
in
sti
fisubrs
inc
cmp
movsl
hlt
ret
add
cwtl
xchg
push
test
dec
pop
repnz
fcoms
push
fsub
and
pop
mov
push
clc
cmp
adc
enter
mov
loope
fdivr
sub
outsl
mov
jno
shlb
lock
fdivrs
mov
in
test
lahf
rorb
xor
mov
ficoms
or
add
dec
add
add
mov
roll
aad
mov
push
jns
enter
fstpl
cmp
pop
fdivr
pop
inc
ds
mov
insl
loopne
cmp
test
mov
lods
jp
sub
test
icebp
jle
pop
cli
imul
inc
xchg
and
pop
jbe
loopne
fcmovu
leave
mov
mov
and
daa
inc
xlat
inc
lahf
je
test
jb
jae
xchg
shrb
jle
xor
push
andb
lret
test
or
pop
xchg
push
add
data16
xchg
sahf
add
sarb
mov
or
movsb
sub
mov
jg
mov
imul
xor
jb
stos
pop
mov
popl
sub
rcrb
cmp
fidivl
sbb
dec
cmp
pop
sbb
dec
les
ret
test
stc
mov
xor
push
mov
lret
int
cmp
clc
cld
jle
fwait
jbe
cmp
dec
push
mov
sbb
pop
jno
andl
iret
xchg
push
addr16
pop
inc
lret
jno
call
inc
addl
movsl
gs
lods
pop
daa
mov
add
sub
fdivrp
fdiv
add
dec
sbb
push
mov
std
in
add
pop
in
cmp
mov
int3
cmp
push
ficomps
mov
xchg
lds
push
popa
rcrl
imul
dec
cmpsb
or
adc
jl
out
adc
fdivrl
cmpsb
mov
lock
lea
pop
movsb
gs
dec
pop
mov
cmp
jl
shrl
xchg
loopne
in
imul
push
sbb
cmp
xchg
xchg
rcl
dec
push
sub
lret
push
jb
movsl
jns
inc
mov
int
adc
xlat
daa
xorl
add
addl
mov
cmpsb
pushf
int
or
jg
mov
jbe
push
inc
pushf
mov
fsubrl
or
aad
jbe
ljmp
add
adc
mov
ret
pop
dec
dec
iret
ds
add
adc
imull
rcr
lret
dec
dec
sti
outsb
mov
cmc
test
add
mov
dec
test
int3
ret
dec
js
cs
test
fcmovnu
inc
fst
shrl
mov
pop
jno
inc
stos
xor
jo
cmp
jecxz
dec
push
add
pushf
shlb
aaa
mov
xor
pop
dec
inc
cmp
sbb
fnstsw
adc
icebp
stos
sar
push
cmp
call
lods
dec
incb
insb
fwait
insl
jl
adc
aad
sub
inc
idivb
mov
add
mov
in
mov
out
fbld
pop
mov
ret
rcrb
sbb
cmpsl
xchg
xor
jo
test
popa
push
push
es
mov
and
enter
lock
icebp
adc
cmp
cli
pop
test
jae
mov
inc
sub
jmp
add
xchg
imul
xorb
out
test
cmp
jmp
xor
fcoms
ret
pop
mov
lahf
lods
daa
mov
adc
sub
mov
fldenv
orb
mov
fdivrs
adc
xchg
mov
or
and
dec
in
push
sub
sbb
lock
jb
lods
in
popa
mov
int3
push
xchg
mov
or
rclb
out
inc
mov
dec
add
inc
add
daa
mov
mov
jmp
push
dec
pop
jle
outsb
adc
xchg
aaa
shrb
pop
sti
loop
fstl
fnstsw
xchg
iret
mov
shll
fcoms
fdivrl
shr
gs
into
cltd
cwtl
lret
sbb
mov
pop
push
cmp
repnz
int3
pop
adc
jge
jnp
xchg
add
into
pop
les
or
pop
into
jae
jbe
fisubs
mov
push
ljmp
sbb
mov
psrad
xor
pushf
cwtl
and
push
cmp
adc
mul
pusha
cmpsl
je
outsb
lods
movl
sar
clc
leave
das
pop
cmp
xor
mov
dec
scas
pop
push
or
and
jle
cwtl
out
pop
int3
cmp
not
add
cmp
int
jmp
mov
lret
pop
std
inc
mov
ss
sbb
mov
aas
xchg
mov
xchg
repz
mov
sub
cwtl
dec
add
push
sbb
lcall
fmuls
push
js
subl
aaa
or
inc
mov
sti
jecxz
ss
xlat
push
add
out
mov
rolb
sahf
pop
push
pop
call
adc
inc
ja
push
fstps
cmp
out
in
mov
decl
push
shr
inc
add
adc
addr16
stc
cmc
cmpb
mov
sub
nop
mov
jo
xor
add
cmpsb
add
lcall
and
xchg
addr16
xlat
dec
insl
testl
push
mov
dec
in
push
jno
aaa
lret
in
ljmp
pop
lcall
jecxz
aad
mov
pop
mov
stos
push
mov
out
add
mov
mov
test
jp
ljmp
jns
push
inc
aas
ljmp
sbb
cmp
sti
ja
cltd
test
rolb
ret
lock
aam
outsl
int
xchg
mov
repz
es
or
cmp
test
aad
decl
in
lcall
lock
lahf
inc
push
inc
lahf
inc
hlt
pop
lea
push
rcrb
aaa
test
sub
xchg
nop
cmpsb
lcall
stos
cmp
pusha
sub
cld
sahf
mov
std
jo
js
inc
xchg
mov
lret
sbb
imul
fcompl
adc
push
rcrl
xchg
mov
pop
mov
rcrb
adc
pop
mov
and
arpl
dec
scas
std
or
mov
push
scas
cmc
shlb
cs
test
adcb
inc
hlt
dec
jle
pop
nop
in
sbb
or
outsl
pop
orb
push
and
xchg
inc
clc
xchg
push
and
fsub
cmp
js
add
popf
mov
std
jl
mov
add
mov
adc
jno
and
sub
xor
movsb
adc
movsl
fnstenv
xchg
aam
jg
xchg
nop
je
lods
loope
mov
les
insb
and
mov
jge
clc
mov
mov
movsb
loop
in
lods
mov
mov
js
in
movsl
fimuls
movsl
sub
xchg
ret
fwait
in
aam
not
adc
cmc
aam
pop
js,pn
insb
xchg
fsubrl
mov
mov
out
cltd
and
sbbb
pop
aad
insl
sub
adc
ds
loopne
sahf
sti
mov
in
sti
add
add
fwait
push
pop
push
lret
jmp
arpl
cmp
stc
ret
hlt
adc
adc
aaa
push
adc
lea
int
lcall
movsl
mov
cmp
sbb
test
sub
jg
jbe
das
pusha
leave
arpl
jno
xor
negb
outsb
pushf
dec
outsb
mov
inc
aam
cmpsb
in
into
mov
inc
push
mov
or
adc
inc
push
shlb
xchg
cli
lret
test
idiv
pushf
into
arpl
aam
xchg
jns
dec
aam
shrl
mov
pop
in
mov
add
test
inc
pop
adc
mov
movsb
pop
pop
mov
arpl
dec
and
out
faddp
lea
ds
xchg
cmp
scas
xlat
xchg
pop
push
loopne
ret
push
push
adc
jbe
ja
jnp
repz
mov
movsl
mov
shrb
or
sub
adc
xchg
cmc
mov
pusha
lods
mov
mov
mov
add
push
sub
data16
inc
xor
xchg
inc
and
jg
mov
xor
push
rcll
jmp
jl
rorb
push
push
dec
test
popf
mov
sbb
scas
fldt
pop
add
and
push
fistl
cmp
in
cmc
nop
jne
cli
fisubrl
int3
mov
cmp
mov
insb
out
nop
test
mov
dec
dec
ret
mov
pusha
mov
sbb
and
cmp
lahf
or
stc
or
xchg
lds
inc
popa
test
adc
ret
add
dec
scas
push
jl
jmp
mov
leave
xor
out
or
aad
push
nop
popf
adc
ja
jle
repnz
bound
fcmovnbe
xchg
insb
cli
sbb
stos
sub
and
sub
xchg
xchg
imul
pushf
nop
inc
jmp
dec
mov
jp
pop
lods
js
aas
push
std
sbb
mov
leave
je
push
adc
add
push
inc
enter
mov
sbb
mov
rcr
aam
jmp
pop
mov
int
roll
add
lods
jb
fisttpll
mov
repnz
mov
iret
dec
shll
fsubs
mov
mov
movsl
movsb
xor
call
sbb
pop
xlat
add
xchg
add
xor
jmp
jae
flds
out
push
aas
adc
xchg
xor
andb
ss
push
lea
mov
popa
adc
mov
pop
hlt
lods
outsb
lahf
cmpsl
push
insb
inc
outsl
mov
stos
imulb
rorb
fcmovnb
jmp
push
mov
inc
in
mov
inc
mov
outsl
outsb
ljmp
in
mov
imul
push
xchg
push
imul
cmp
push
es
lock
push
xchg
mov
outsb
push
jnp
push
negb
arpl
sbb
sub
mov
push
inc
mov
out
inc
data16
out
cmpsl
xchg
sub
push
jnp
je
les
outsl
andb
cmp
and
cmp
push
das
inc
cmp
xchg
fcmovb
inc
dec
pop
mov
icebp
out
pushf
and
xor
lock
jbe
sbb
sbb
clc
push
adc
daa
pop
dec
or
cmp
repz
pusha
mov
mov
cmpsb
mov
push
jle
mov
test
popf
pop
add
into
xor
nop
lods
out
loopne
cmpsl
push
repnz
dec
call
xchg
mov
subb
jp
cli
mov
dec
push
add
push
js
push
pusha
mov
icebp
mov
cs
pop
push
adc
call
cmp
lods
and
rcrb
fwait
insl
aad
push
nop
dec
xorl
lock
or
rorb
mov
scas
ret
fsubs
sub
out
or
push
jge
sbb
add
repnz
ljmp
iret
outsb
fidivrs
xor
jmp
lods
pusha
addr16
dec
mov
mov
cs
pop
xchg
mov
xchg
add
sbb
lds
outsb
mov
add
arpl
int3
fdivp
pop
sub
push
fidivs
add
pusha
xchg
jb
nop
dec
mov
fmulp
add
cmp
sbb
loopne
out
mov
dec
aad
test
push
push
jbe
pop
mov
jne
inc
into
and
sub
lret
xchg
adc
loope
or
jbe
cli
fs
sbb
cmp
inc
test
or
mov
fcomip
adc
cmc
mov
divl
fwait
pop
loope
sub
sti
and
xchg
mov
cmpb
rclb
add
sub
test
jg
push
popf
fsubrs
lds
pop
pop
sti
push
test
leave
aad
pop
inc
push
in
jge
jae
xor
dec
stos
mov
pop
lods
pushf
and
cmp
xchg
mov
shll
nop
cmp
sbb
adc
and
cmpl
and
or
aas
hlt
out
stos
add
mov
xor
push
mov
pop
pop
lds
iret
loop
bound
fadd
add
shrb
lahf
sahf
js
sub
cmp
or
cmp
fstp
sahf
inc
addr16
movsb
inc
in
stos
dec
je
pop
jmp
jne
adc
mov
push
xor
aaa
and
inc
repz
jno
sbb
rorb
test
push
cmp
adc
movsl
cmp
jns
ss
xor
and
push
dec
inc
addr16
pop
dec
scas
cmpsb
push
mov
jecxz
add
repnz
ljmp
lahf
jl
adc
das
push
push
pop
inc
mov
jne
push
fistpl
lods
cmp
imul
pop
xor
cs
mov
sub
mov
xchg
add
inc
clc
int
pop
lcall
shr
and
fcmovu
cmp
popf
inc
xor
ds
sub
xchg
das
mov
jae
cltd
jbe
xchg
mov
inc
test
gs
cmpl
into
mov
addl
cmp
mov
jne
mov
scas
stc
pop
jecxz
cmp
push
cmpsb
ret
test
sbb
out
sub
push
pop
ds
inc
test
call
in
in
xchg
add
jbe
xchg
xchg
std
iret
or
xlat
or
shr
inc
dec
insl
pop
dec
das
sarl
cltd
and
movsl
test
shl
pushf
nop
loope
cmp
push
movsl
jl
push
adc
loope
jae
xchg
aad
lret
outsb
mov
call
loope
jnp
sbb
int
dec
cli
and
or
ja
inc
cmp
mov
inc
sub
xchg
push
push
std
out
jbe
jb
push
xor
mov
rolb
sahf
loopne
cmpsl
inc
les
in
aaa
mov
aaa
mov
in
leave
rcrl
pop
dec
cmp
xor
pop
fldenv
das
sbb
leave
in
xor
loope
jmp
in
int
adc
pusha
repz
sub
add
add
pop
add
sarb
or
sub
aaa
insb
out
and
jl
ja
pop
fucomip
outsb
inc
out
add
popf
xor
jns
adc
dec
jl
out
mov
mov
jecxz
daa
fstl
fs
sub
lea
dec
imul
pop
xor
outsb
or
out
sub
pop
in
test
mov
jmp
stos
push
cmp
bound
pop
xor
or
stos
adc
mov
jnp
jle
dec
sub
mov
lret
and
cmp
loop
lods
ficomps
int
xchg
out
xchg
fidivs
aaa
aam
xor
add
das
add
jne
and
inc
and
xor
aad
sub
popf
mov
test
xchg
sub
jo
cmp
xlat
lock
das
and
aam
test
call
mov
pop
sahf
mov
sub
in
fs
push
and
mov
outsb
push
mov
inc
fsubrl
inc
inc
cmpsb
int
iret
pusha
cmp
push
mov
cmc
out
xchg
adc
xchg
cmp
push
pop
and
jae
mov
xchg
rorl
adc
call
ja
mov
add
iret
inc
call
cltd
cmp
popa
adcb
pop
mov
and
dec
push
rolb
inc
mov
push
pop
mov
stos
push
dec
mov
aas
jp
mov
iret
into
cmpsb
sti
pushf
mov
cmpsl
ja
xchg
icebp
sbb
repz
loope
xor
or
mov
push
das
les
mov
ret
daa
cmp
mov
repnz
sti
sahf
sub
fwait
psubusw
imul
aas
xor
jae
and
pushl
xchg
scas
out
call
out
int
mov
mov
loop
popf
sub
mov
mov
ret
and
cld
mov
or
mov
xor
out
cmpsl
xor
shll
aad
das
sub
dec
mov
std
mov
loop
mov
xchg
mov
mov
add
push
inc
jecxz
fistpl
fstps
pushf
rcrb
jns
sub
sbb
popf
fsts
cmpsb
cmp
sti
pop
or
jmp
loope
sub
cs
test
push
shr
dec
sahf
push
push
shlb
lods
pop
outsl
mov
sbb
mov
popf
push
loope
dec
add
enterw
sbb
adc
mov
out
mov
lret
or
add
and
out
nop
xchg
dec
mov
lods
xor
fstl
dec
shrb
or
add
inc
lds
cld
or
lock
ds
cld
stc
outsb
imul
and
pop
mov
cmpsl
loope
lods
or
stos
push
fucom
cltd
xor
aad
mov
cmp
sub
push
sub
cld
jns
push
xchg
les
fs
xor
rolb
shl
and
push
xor
mov
rorb
mov
dec
in
cmpsl
rcrl
adc
fidivrs
cs
push
xor
mov
add
dec
and
or
jae
fisubrl
in
or
dec
dec
xor
mov
stos
fdivl
sbb
sbb
inc
cmp
lret
pop
out
cld
sti
jle
inc
scas
mov
aad
in
cs
test
negb
fbld
push
jo
push
jge
adc
incl
jns
push
out
testb
addr16
fstpl
xor
mov
inc
lret
or
fwait
or
mov
push
fsubp
xchg
cmp
sub
sub
xor
adc
push
pushf
addr16
push
fstl
mov
movsb
pop
cltd
rcr
aam
sub
xor
adc
in
frstor
test
mov
add
and
jle
sti
cmpl
in
xchg
dec
lcall
add
daa
fxch
fstpt
mov
xchg
adc
movsl
roll
mov
lret
int
lcall
rolb
sarb
into
and
pop
fst
xchg
dec
add
dec
push
lret
dec
dec
cmpsb
lea
hlt
cmp
mov
and
mov
std
fs
push
adc
jg
cmp
scas
cwtl
or
sahf
xor
xchg
adc
add
pusha
dec
lods
jae
je
or
lock
in
pop
ds
js
fst
sub
xor
scas
inc
lcall
fistpl
add
mov
jl
cmp
aad
jne
mov
jno
dec
icebp
inc
into
inc
aad
adc
pop
es
test
pushf
lock
sbb
sbb
jb
and
pop
pop
push
test
or
add
mov
cli
ljmp
dec
pop
or
xor
incb
xor
xchg
out
push
pushf
iret
scas
and
je
clc
popf
sarb
xchg
aaa
pop
test
push
mov
adc
aad
in
adc
das
inc
jne,pn
xchg
dec
xchg
sahf
mov
int3
inc
mov
jbe
dec
add
fistpll
xchg
mov
pop
loope
sti
inc
ret
cmp
loopne
cmp
pop
mov
push
inc
push
in
jge
mov
jg
sbb
ficomps
inc
lret
push
push
fcmovu
mov
push
fwait
sbb
ficomps
sub
cmp
aaa
xchg
scas
add
add
aad
popf
insl
xchg
mov
or
pop
sub
mov
out
mov
aam
sbb
pop
xchg
jmp
xchg
or
es
sub
cld
loopne
mov
xchg
hlt
push
ret
cwtl
sub
dec
cmp
push
hlt
call
sbb
pusha
pop
inc
pavgb
mov
aad
int
jne
stos
imul
lds
pop
push
fndisi(8087
xchg
jl
jo
dec
pusha
xchg
cmpsl
lods
adc
dec
inc
xor
lret
push
lds
or
cmp
stos
cld
adc
out
push
call
adc
jbe
enter
sti
dec
testl
rcll
shlb
jge
shrw
pop
mov
or
add
outsl
push
in
dec
mov
ja
mov
out
lods
loop
fisttpll
daa
or
test
int3
shll
jne
shrb
cli
dec
imul
in
jle
popf
xchg
mov
pop
xchg
imul
lcall
pop
push
repnz
push
pop
mov
cmp
unpckhps
jmp
pop
ret
mov
popf
inc
in
adc
in
loope
sub
decl
cmpsl
pop
cmpl
jno
sub
mov
rcrl
stos
sub
xchg
stos
push
push
sti
icebp
lcall
add
dec
ljmp
je
or
adc
jne
sti
lods
aas
pushf
fsubrs
xchg
cli
mov
stos
jno
test
or
dec
inc
popf
dec
sbb
xchg
mov
inc
push
adc
pop
sar
add
ja
aad
jg
and
aad
sub
jnp
xchg
scas
clc
mov
inc
lods
stos
in
sbb
loope
sahf
lea
pop
test
mov
insb
shlb
js
test
push
push
ret
insb
push
cmovae
jl
clc
inc
mov
ret
cmpsb
fsubl
insl
pop
lods
adc
push
xchg
jae
xlat
mov
xor
popf
in
dec
dec
outsb
inc
inc
cli
sbb
jne
mov
subl
xlat
in
rorl
push
push
gs
in
int3
push
ljmp
mov
test
icebp
xor
nop
scas
rclb
loop
mov
aas
fcoml
iret
cmc
or
or
btc
ss
push
std
insb
or
mov
es
aad
imul
mov
das
mov
fimull
repz
stc
jp
mov
out
sbbl
icebp
mov
scas
repnz
sti
xchg
insb
iret
inc
inc
pop
push
push
jnp
pop
pop
jae,pn
add
adc
sbb
add
inc
lock
sti
add
sub
sub
push
push
add
stos
fdivs
movb
xchg
adc
jbe
lds
mov
dec
mov
jnp
xchg
dec
fisttps
sub
dec
stos
repnz
inc
inc
or
fsubrl
arpl
push
push
push
xor
hlt
lret
mov
sbb
ret
lods
push
pop
pushf
and
pop
mov
pop
test
fiaddl
cs
mov
cmp
test
js
sti
pop
and
movsl
jae
lretw
xor
add
cmpsl
insb
push
ss
ja
or
mov
cmp
nop
aad
adcl
push
push
loopne
xor
dec
xchg
sub
push
push
and
jmp
dec
mov
jmp
or
jbe
aad
inc
add
fwait
addr16
adc
jb
out
cltd
fs
jl
sub
pop
pop
jl
cmpsl
mov
sub
ret
lahf
dec
cmpsb
popa
xchg
mov
dec
cmp
push
add
jae
insl
mov
iret
add
and
jl
mov
jmp
inc
notl
inc
clc
test
xchg
mov
mov
repnz
lods
cmp
adc
or
jnp
lods
sbb
in
push
jo
outsl
jne
popa
cwtl
mov
pusha
stos
lea
cmc
inc
jns
shlb
pop
xor
or
mov
cmp
sarb
mov
arpl
insb
sub
dec
dec
mov
fldenv
cmpsb
jg
movsl
imull
cmp
bound
xorb
push
add
lods
imul
and
inc
das
ljmp
stos
add
loope
mov
outsb
or
iret
adc
push
jg
addr16
out
cmpl
dec
pop
rolw
stos
scas
dec
or
aad
pusha
loope
cmp
mov
push
ret
mov
out
je
es
xor
push
cmp
sub
mov
mov
inc
push
inc
push
sub
and
out
sub
mov
sbbl
test
pop
mov
jno
mov
addr16
imul
data16
out
repnz
xor
cmpsl
xchg
stos
sbb
into
mov
repz
cmp
sti
scas
int3
negb
mov
dec
lret
jle
jne
or
dec
stc
xchg
pop
jae
pop
and
aaa
mov
lods
add
lret
dec
lock
mov
addb
repnz
out
call
lret
add
jmp
ja
in
or
sti
sbb
rclb
adc
daa
leave
pop
repnz
lods
mov
inc
inc
sub
pusha
fmull
xchg
daa
cmp
push
scas
int3
dec
mov
rcll
pushf
insl
sbb
popf
push
and
js
or
out
adc
test
push
mov
mov
lahf
out
cli
pop
loopne
xchg
sbb
rclb
pusha
cmp
inc
inc
nop
sub
mov
fistl
adc
push
ja
sbb
sti
shrl
icebp
and
jbe
dec
inc
test
cmp
mov
imul
mov
cmpsl
adc
stos
outsb
cwtl
cmp
testb
adc
es
lds
cmp
cmp
cmc
test
repz
rcrb
pop
lods
mov
adc
mov
sbb
les
test
jne
sbb
out
pop
inc
sbb
xchg
andb
jmp
jae
jnp
jl
sbb
les
adc
pusha
lock
test
movsb
jmp
or
icebp
scas
xchg
cmp
cmp
rcrl
lret
sbb
pop
arpl
lods
or
mov
pop
sub
lahf
test
jp
in
adc
xor
mov
dec
pop
ja
push
inc
dec
call
rorb
jmp
xor
sar
scas
xor
jl
add
aaa
xor
or
stos
mov
fadds
cmpsb
fs
cmp
outsb
fsubrl
cmp
repnz
push
cltd
dec
sbb
jg
pop
or
andb
and
mov
std
jo
or
inc
add
dec
pop
fwait
sub
mov
pop
cmp
lods
insl
mov
lds
call
scas
mov
js
jmp
das
fstpl
fidivrl
cmp
pop
pop
push
cli
gs
loopne
or
scas
xchg
adc
mov
inc
fwait
mov
xor
cmp
jo
testb
pop
outsl
scas
push
popf
adc
iret
clc
lock
xor
aam
inc
fstpt
and
orl
xor
pop
adc
and
jnp
adc
push
out
or
add
push
loop
popa
into
lret
jmp
dec
inc
xchg
stos
cmp
jl
lock
pop
xchg
scas
test
pop
aam
js
push
rolb
fisubs
jg
insl
lods
cmp
sub
push
cmp
outsl
pop
xchg
popf
dec
lock
hlt
jg
out
fxam
into
fnstcw
outsl
enter
xor
mov
xlat
push
cli
sbb
push
push
sbb
dec
cmpsb
mov
mov
mov
sbb
cmp
adc
push
jae
cmp
lret
mov
or
xchg
stos
loope
outsl
sbb
jo
popf
cmp
sub
inc
mov
inc
pop
jno
jae
mov
sub
shlb
and
dec
testb
cs
xchg
xor
cwtl
imul
lock
pop
adc
test
lcall
mov
jl
out
mov
or
cmp
orl
add
fdivs
mov
push
in
sti
mov
dec
xchg
push
movsb
sbb
jmp
ss
jb
sbb
outsb
fs
pop
jecxz
inc
mov
jl
pop
pop
into
dec
int
sbb
or
push
lahf
mov
cmp
call
xchg
imul
mov
pop
cld
in
jnp
enter
mov
scas
and
sti
and
out
mov
mov
iret
mov
jecxz
mov
fcomi
jne
push
push
pop
jbe
add
mov
pop
lods
mov
sbb
mov
xchg
imul
cmpsl
pop
xor
push
out
jmp
cmp
mov
fbstp
add
insl
sub
mov
inc
jne
lret
pop
shl
in
stos
into
outsl
xor
fcmovne
jmp
fimull
mov
fimuls
sub
in
adc
add
pushf
ss
dec
fnstsw
cmc
inc
lods
sub
clc
scas
sbb
shr
xlat
jne
and
das
in
push
mov
cli
xchg
mov
push
rcll
inc
push
mov
jo
mov
dec
out
xor
rolb
dec
pop
les
imul
cmp
iret
dec
clc
add
sbb
andb
sbb
or
scas
xor
mov
xchg
dec
lods
loope
xlat
insb
xor
push
adc
mov
pusha
loopne
cmp
insb
loopne
jp
loope
adcl
aaa
inc
sbb
jne
sti
sbb
pop
movsb
filds
inc
pop
rcrl
push
cld
pop
push
push
stos
cs
pop
add
jg
lahf
dec
ret
xor
jmp
shlb
aaa
hlt
js
lcall
sbb
xor
pop
inc
gs
dec
or
lds
mov
sub
fstp
fsubl
and
popf
jmp
dec
sbb
dec
je
sbb
push
ss
cmp
adc
out
mov
dec
in
jns
in
dec
ljmp
sub
in
loopne
inc
xchg
jle
sub
pop
fwait
xchg
rcr
xchg
lods
inc
jne
pop
mov
sahf
call
mov
js
jbe
cli
in
pusha
shrb
ds
sbb
xchg
pop
out
ret
push
jns
rorb
mov
sub
dec
lret
mov
in
test
flds
adc
xlat
cmpsl
jno
ret
test
dec
jno
rcll
and
cmpsl
movsl
popa
mov
xchg
dec
fisttpll
add
xchg
pop
jl
xchg
js
push
add
idivl
xor
pop
testb
imul
add
out
enter
dec
bound
out
dec
xor
je
pop
call
ret
push
fimull
mov
je
xor
mov
popf
aad
in
out
rcll
jg
dec
inc
aam
mov
adc
rcl
leave
bnd
clc
cmp
mov
clc
jl
push
std
cs
shll
dec
adc
cs
stc
and
push
sub
xor
mov
sub
je
cmp
jne
mov
loop
test
icebp
fs
lods
lret
es
cs
dec
leave
les
or
int
inc
shll
pop
fldenv
or
mov
mov
pusha
push
mov
pusha
cltd
rorb
out
rolb
or
outsb
jl
jb
out
and
mov
mov
addr16
stos
fisttpll
xchg
mov
subb
or
popa
push
cld
mov
ret
push
in
xchg
icebp
mov
jno
int
adc
negl
shl
jb
xor
das
ficomps
mov
cmp
push
inc
xchg
movsl
es
inc
add
mov
aam
ss
ficomps
or
cmc
xchg
cmp
mov
sbb
loop
mov
add
les
xchg
inc
stos
imul
sub
dec
stos
push
add
pop
rcrl
mov
push
push
sbb
das
and
rcll
sub
icebp
subl
call
shll
xor
inc
mov
lahf
mov
cmc
loope
jl
pusha
cmp
repz
mov
scas
sub
jae
decl
xor
mov
jecxz
fcomi
fsts
loope
out
pushf
jle
inc
arpl
fwait
stos
xchg
and
cwtl
inc
rcll
iret
sahf
outsl
and
add
pop
xchg
dec
add
jge
out
inc
mov
sti
or
push
imul
incb
stos
add
mov
jg
push
xor
lods
xchg
cmp
add
sub
mov
cmpsb
dec
clc
sbb
out
xchg
jge
cmp
popf
jp
das
into
pop
fldt
push
jbe
pop
fisubrs
jmp
movsl
push
add
mov
xchg
orb
stc
ja
jmp
mov
fsubr
push
loop
in
cwtl
xor
loope
jne
push
movsb
inc
hlt
clc
push
aam
fcomps
or
push
out
movsb
aad
call
test
pop
dec
andl
imul
aam
jl
lahf
sbb
imul
xor
mov
jecxz
pop
movsl
mov
sub
lret
mov
popa
daa
mov
adc
xchg
ljmp
inc
xchg
insb
insb
mov
hlt
mov
or
add
dec
cltd
rcrb
push
or
shr
or
iret
jns
dec
adc
mov
lcall
testb
ja
fistps
jae
jbe
cwtl
es
add
andb
je
test
pop
inc
mov
push
sbb
test
add
out
or
jne
cmp
jmp
outsl
jno
mov
insl
push
cmpsb
leave
jge
fwait
push
sub
sub
int
sahf
and
loope
repz
jne
das
and
aas
push
xchg
xchg
dec
inc
xor
dec
mov
jg
inc
xchg
jne
sub
lret
and
jmp
sbb
daa
mov
ret
test
jns
push
ja
pop
xchg
mov
test
insb
mov
mov
sbb
mov
int3
add
pop
xchg
sub
mov
sbb
jge
pop
sbb
cld
shl
cmpsl
xchg
nop
push
add
jp,pn
ret
rcl
mov
das
sbb
cld
xor
mov
sub
fldt
cli
cmc
in
mov
mov
inc
mov
lret
jbe
mov
or
imul
stos
fwait
mov
dec
pushf
xchg
xchg
jbe
dec
pop
int3
cmp
push
jl
mov
inc
jg
fs
test
adc
loope
sbb
xchg
int
sub
jnp
xchg
xor
pop
and
adc
cmpsl
jecxz
jmp
jmp
lods
mov
inc
xchg
in
in
lock
xchg
push
inc
cmp
jl
push
xor
xor
adcl
jg
pop
jle
xor
inc
pop
sar
imul
addr16
aad
ja
shl
ret
mov
cmp
stc
inc
imul
out
jns
pop
xchg
fsubrp
out
sbb
ja
pop
and
sub
xorl
jmp
sub
les
or
mov
lret
push
cmp
jo
andb
rep
xor
pop
mov
jp
imul
jge
push
pushf
adc
push
push
enter
in
shr
fs
push
jmp
les
dec
loop
sbb
push
sub
insl
and
adc
out
pusha
jbe
mov
mov
xchg
loope
mov
cmp
or
ss
and
das
pop
or
xor
mov
fadd
sub
decb
es
stc
fdivrs
out
sbb
sbb
add
negb
ret
push
xchg
fs
xor
ja
mov
cmc
pop
jns
lret
inc
push
loope
mov
xchg
mov
inc
js
mov
sub
dec
imul
xor
add
fdivrs
lret
adc
mov
mov
pop
rcl
out
int
insl
inc
push
rcrl
cmp
push
jg
adc
call
add
mov
cmp
arpl
xchg
jno
or
xchg
mov
arpl
sbb
pop
add
jle
push
pop
push
ljmp
stos
cltd
cmp
int3
stos
psubq
push
pop
lahf
xor
sub
add
adc
fnstcw
rcr
imul
adc
add
imul
in
mov
into
dec
jecxz
push
xchg
aam
inc
insl
lock
das
cmp
sarl
in
mov
jg
incl
lock
das
fimull
mov
xchg
bnd
out
xlat
pop
andb
lcall
sti
shrb
hlt
cltd
jmp
cld
sub
mov
and
mov
pop
or
mov
fidivrs
jg
jns
stos
ret
jae
sti
adc
lods
push
xchg
jnp
cli
or
jp
ljmp
movsb
adc
aad
neg
scas
fiaddl
scas
push
and
rol
inc
jno
cmc
bound
mov
xchg
rorl
xor
pop
sbb
icebp
ret
hlt
dec
fimuls
repz
mov
inc
sub
mov
dec
ss
sub
test
mov
fadds
push
add
xchg
in
push
scas
mov
mov
movsl
out
test
jecxz
sub
mov
testl
enter
mov
mov
scas
sub
dec
into
pop
sub
pop
aaa
mov
xor
mov
add
out
xchg
cmp
stc
adc
lcall
fs
sbbl
jae
lock
fwait
mov
inc
pop
rcrb
popf
mov
pop
push
scas
jge,pt
sbb
push
repz
and
andb
mov
dec
push
dec
inc
cmp
outsb
fisttpll
mov
mov
test
adc
outsb
dec
push
inc
inc
lds
dec
xorl
push
jno
pop
call
fwait
aam
dec
cmp
xorb
in
lret
cmp
popl
mov
jb
push
ret
inc
add
imul
sbb
dec
lret
in
adc
xlat
and
fxch
xchg
cmpsl
mov
icebp
repz
fnstsw
pop
sub
xchg
jecxz
fiaddl
and
push
xchg
mov
nop
into
and
nop
xchg
jge
sbb
ficompl
xchg
in
xorl
jg
stos
dec
mov
stos
data16
sub
add
jmp
data16
aas
pop
push
out
mov
jg
cmp
test
push
in
pop
enter
stos
sti
pop
cltd
ljmp
inc
lods
sub
mov
pop
scas
enter
test
aaa
and
pop
shlb
test
fs
push
xlat
or
lock
jne
rcrb
fs
in
cmpsb
dec
mov
jecxz
mov
loop
push
mov
sub
xor
es
shrb
add
adc
shlb
or
negl
loop
mov
or
inc
rcll
jge
aaa
lods
pop
andb
sub
and
popf
push
jns
xor
adc
dec
jmp
out
xor
in
xchg
loopne
arpl
iret
mov
add
xchg
cmpb
loope,pt
fidivs
xor
shll
pop
jns
mov
inc
cmp
sub
jmp
ds
addb
fdivp
xchg
adc
les
jl
dec
iret
lds
cmp
xchg
rorl
movsl
ss
stc
hlt
in
sub
xchg
adc
jb
push
dec
mov
jb
push
sub
or
test
fmull
insb
inc
js
lock
sti
ret
xchg
aaa
pop
adc
or
shlb
pop
inc
and
pop
mov
pushf
xor
in
or
into
fwait
ds
xor
push
adc
negb
sbb
push
popa
enter
pop
jae
test
imul
fwait
int3
add
into
jne
mov
adc
bound
adc
popa
insl
lea
cmpsl
pop
jmp
mov
repz
push
push
lahf
in
ja
int
sub
pop
push
pop
or
insb
jmp
push
rcrl
popf
push
add
xor
stos
pop
pop
cmp
out
inc
mov
dec
adc
mov
in
xchg
cmc
aam
loope
movsb
mov
das
cwtl
movsl
jp
filds
fcom
dec
in
jl
out
jle
cld
lahf
iret
jno
outsb
push
sub
pop
sbb
cmp
xchg
or
dec
jle
insl
jbe
leave
es
xchg
daa
mov
ret
dec
pop
jl
enter
pop
and
aam
mov
sbb
scas
and
rorb
push
movsl
push
and
mov
xor
cwtl
push
push
mov
inc
fidivrl
push
inc
mov
mov
lahf
lret
jno
jg
cli
out
fstpl
pop
rcll
dec
xor
mov
pop
xchg
popa
shlb
cmp
cli
xor
ja
lods
sbb
icebp
and
adc
adc
sub
pop
mov
inc
and
ljmp
popa
in
fldenv
mov
dec
mov
cmp
outsl
mov
adc
testb
lods
mov
xchg
lcall
lods
test
into
test
into
jmp
clc
dec
jl
inc
jmp
sbb
add
dec
out
mov
outsb
out
dec
sti
sub
pop
mov
mov
daa
loope
mov
mov
in
fsts
sub
xor
xchg
inc
rcl
and
mov
mov
push
pop
aam
dec
mov
sbb
ds
aam
jp
mov
pop
pop
pop
mov
in
test
adc
push
das
sub
inc
lods
mov
xchg
mov
imul
fildl
push
push
adc
jbe
ljmp
mov
int
repnz
add
mov
aam
insb
sahf
ds
cmp
xor
loopne
pop
dec
add
loop
mov
mov
dec
aad
cmp
movsb
mov
dec
jo
jg
js
add
adc
int3
les
into
jl
xor
stos
jb
ret
lret
fsubs
cmc
mov
jl
outsb
test
arpl
mov
and
mov
insl
add
aad
cmp
sub
daa
xchg
lds
pop
nop
xchg
pop
mov
xchg
cmpsl
xor
or
mov
insl
xor
cmpl
js
jne
sbb
icebp
inc
fnstenv
push
sbb
rcll
test
xor
sub
adc
dec
push
mov
pop
add
in
or
loope
nop
push
push
sub
dec
out
mov
cmp
popf
pop
xor
pop
stos
pusha
out
mov
mov
es
repz
inc
xor
testl
push
pop
or
lods
push
out
sub
xchg
xchg
jp
dec
adc
sub
sbb
mov
add
inc
lods
xchg
mov
xchg
ds
call
mov
add
stos
lahf
ljmp
or
cmp
test
add
into
lock
xorb
dec
push
subb
cs
fwait
in
lock
mov
push
inc
ss
mov
aaa
cmc
xchg
iret
scas
aam
out
mov
shlb
cmpsb
adc
leave
fwait
mov
rorl
jp
cmp
sar
lahf
fiaddl
icebp
sub
stos
test
fstpt
outsl
xchg
outsl
push
xchg
jne
and
sbb
xor
out
cltd
cmp
fmull
out
add
and
lret
frstor
out
sbb
rorb
sbb
iret
add
lock
or
sbb
lods
jge
outsl
mov
jl
je
mov
cltd
enter
sbb
mov
mov
cmp
xor
stos
pop
sahf
push
or
push
lcall
call
mov
cmp
lcall
aaa
int
and
xchg
movsl
out
pop
pop
mov
popf
jo
sub
mov
lret
inc
push
inc
mov
pop
les
mov
vmwrite
add
popw
add
popf
sub
mov
pop
mov
inc
inc
pop
push
sub
pop
je
fmulp
rcl
pushf
xchg
outsb
dec
lret
outsb
jbe
mov
stos
and
push
push
lea
rclb
vpshaq
in
pusha
ljmp
jecxz
fmull
mov
mov
mulb
cmp
sbb
mov
pop
xchg
mov
mov
pop
mov
add
push
clc
jp
sbb
jno
mov
and
rol
sub
push
ja
sbb
popa
mov
dec
ret
test
push
negl
or
mov
jge
les
ljmp
jo
sbb
xchg
mov
mov
add
out
insb
testb
mulb
outsl
pop
scas
into
and
inc
loope
pop
ljmp
or
push
adc
push
int
divl
mov
add
cli
inc
sahf
jmp
mov
push
mov
jnp
cli
sbb
jno
xlat
int
decl
xor
stos
jl
or
sub
xchg
in
mov
jge
mov
stc
and
xchg
test
pop
in
insb
push
push
and
pop
out
stc
in
push
fsubl
xchg
ds
loopne
inc
xchg
xor
mov
in
daa
cmp
int3
in
jp
js
sub
mov
xchg
cwtl
insl
mov
fs
fstl
jle
in
pushf
mov
ficoml
mov
jl
mov
xchg
fwait
cmpl
movsb
shrb
hlt
aas
mov
pop
ja
pop
mov
cmp
neg
push
mov
gs
sub
mov
ror
and
pop
push
sbb
xchg
repz
and
xchg
cmpsl
sbb
cmc
adc
je
sub
mov
cld
dec
jb
jg
cltd
hlt
shlb
jp
jmp
jge
xchg
es
pop
loopne
jbe
inc
lret
pop
push
test
mov
inc
dec
data16
mov
inc
push
loope
lcall
lahf
sub
jg
lods
dec
xor
inc
and
xchg
loope
sub
and
es
xchg
ficoms
jb
pop
imul
push
leave
test
and
adc
popl
adc
add
inc
clc
mov
into
dec
nop
out
out
dec
mov
sub
popf
stos
push
aas
pop
addr16
push
dec
int
add
add
jp
add
or
and
sub
movsl
inc
dec
inc
icebp
mov
mov
sbb
imul
push
mov
mov
iret
xor
mov
lock
pushf
lods
adc
enter
lock
xchg
in
fs
xlat
sbb
sub
or
data16
jle
or
inc
shl
inc
and
mov
push
shll
mov
xchg
mov
cmpsl
jae
ja
scas
insb
outsb
addr16
jbe
aaa
xor
call
adc
repz
dec
repz
xchg
xchg
sub
xor
imul
mov
xor
push
cmc
xchg
push
rclb
pop
testl
out
add
enter
adc
int
popa
xlat
mov
or
adc
add
out
test
adc
outsb
inc
sbb
out
xor
lock
or
push
mov
js
out
mov
push
add
fiadds
cmp
shl
lock
ficoml
push
popf
cld
mov
jbe
test
dec
enter
and
pusha
mov
aad
xor
mov
and
std
sub
fistl
or
push
insb
mov
mov
test
lahf
js
mov
loope
adc
jg
les
in
mov
and
adc
lahf
xor
push
stc
test
aad
mov
inc
stc
test
jle
fistps
mov
jo
sub
adc
outsb
add
push
stos
dec
frstpm(287
inc
push
mov
repnz
sbb
push
mov
mov
cwtl
sub
lods
add
ljmp
mov
inc
call
add
or
adc
shll
sbb
mov
xor
roll
jo
mov
sbb
enter
in
test
inc
pop
dec
aaa
in
dec
int
inc
in
xchg
gs
push
test
add
dec
imul
cmpsb
imul
test
stc
sahf
pop
xchg
cmp
push
aaa
test
mov
sbb
dec
int3
mov
xchg
add
testl
mov
sti
movsl
mov
inc
jmp
cmp
out
lds
mov
hlt
rcrb
mov
xor
ret
imul
cmpb
xchg
inc
mov
jo
mov
sub
repnz
push
jmp
xchg
xlat
into
sbb
loop
call
mov
adc
loope
xchg
cmp
and
mov
imul
mov
rcll
xor
add
insl
int
subb
mov
jg
pop
pop
andl
mov
adc
shrl
cmp
pusha
cwtl
leave
repnz
out
popf
sbb
sbbb
loop
and
ds
xor
pop
mov
inc
dec
mov
nop
mov
mov
push
out
push
outsl
jo
sub
rcl
mov
mov
xchg
jns
mov
lea
sbb
lock
adc
jmp
fdivrs
pushf
sti
xchg
inc
popa
daa
adc
push
xor
arpl
leave
jge
push
xchg
mov
and
jle
shrl
cmp
pop
outsl
jns
or
jge
dec
stos
push
hlt
cmpsl
dec
or
pop
push
movsb
int
sti
xchg
sti
ljmp
jae
pop
test
shll
xchg
test
dec
lahf
xorl
mov
enter
lock
mov
jo
mov
push
sbb
inc
xor
dec
rorb
mov
stc
pop
ljmp
cmp
mov
lahf
cli
in
cmp
rorl
movsb
add
je
xchg
cmp
jp
dec
or
dec
jns
jmp
fbld
xchg
int
adc
xchg
sbb
sub
lods
pop
arpl
nop
pop
pushf
leave
ljmp
push
into
repnz
ret
mov
mov
das
test
in
mov
xor
mov
ss
xchg
movsl
sahf
shlb
push
test
icebp
ret
loop
pop
pop
cmp
adc
jge
addr16
cmp
cmp
rcrl
jne
push
and
rol
test
mov
and
push
or
sbb
sbb
rcll
jle
loopne
dec
movsb
hlt
sti
xchg
cmpsb
pop
jnp
sub
mov
pop
pop
ljmp
imul
dec
pop
mov
mov
gs
scas
add
shlb
inc
mov
and
lret
pop
fxtract
imul
or
push
ret
inc
jno
fisubl
scas
mov
jns
std
fnstsw
xchg
xchg
in
push
push
mov
adc
cli
dec
mov
test
push
das
push
adc
ret
fimuls
cmp
xor
cmp
inc
cmp
outsl
fstps
cmovns
lret
fdivr
xor
inc
mul
pop
mov
push
jp
notb
lock
pusha
xor
xor
sbb
nop
mov
pop
test
loop
mov
mov
cmp
sbb
cmpb
out
pop
mov
push
in
stc
cwtl
into
call
xchg
jno
faddl
cmp
dec
mov
and
ds
adc
movsb
shll
mov
in
into
cmp
andb
or
arpl
out
sub
sub
fldt
add
lock
dec
into
ds
push
inc
inc
dec
ljmp
jno
sub
pop
clc
loop
sub
sahf
loope
addr16
sbb
punpcklwd
jne
mov
jge
push
arpl
sbb
dec
icebp
addr16
jnp
jl
push
mov
and
imul
cmp
xchg
shrb
push
in
popf
xchg
push
loope
aaa
std
xchg
addl
cli
cltd
cmpsl
xchg
test
cmpsl
adc
enter
pop
sarb
jb
arpl
add
xchg
das
jmp
pop
inc
jne
sbb
cmpb
lods
sub
cwtl
call
out
dec
xor
jne
cmp
fildll
xor
or
imul
popf
shld
ffree
out
mov
stc
push
in
cmpb
mov
orl
or
and
pushf
pop
jbe
inc
lcall
aas
adc
fdivrl
movsb
fdivrl
fbld
add
std
jne
add
push
xor
mov
mov
cmp
xchg
jle
lret
sahf
add
lds
adc
pop
lret
lret
inc
pop
or
lcall
in
arpl
aad
stos
jne
repz
dec
xor
sub
aam
sbb
shll
ret
or
lods
dec
push
jp
dec
rcrl
pushf
and
sub
mov
mov
inc
std
imul
call
or
out
lods
lods
mov
dec
imul
pop
fsubrs
in
mov
sub
pop
cmp
push
pusha
leave
shl
iret
cmp
mov
addr16
xchg
push
out
shl
xorb
mov
ljmp
test
add
out
fldt
pop
ljmp
loop
xchg
mov
sub
sub
pop
or
sbb
pop
clc
mov
lret
fiaddl
mov
inc
dec
pop
stos
jnp
push
je
std
xor
icebp
jl
rcrl
int3
mov
mov
pop
xor
int
push
mov
dec
push
jge
jl
fwait
xor
ficomps
fsub
cli
inc
push
and
cmc
dec
inc
inc
xchg
jne
subl
adc
xchg
loopne
add
cmp
sbbl
adc
dec
mov
mov
and
xchg
xchg
inc
ret
mov
imul
icebp
jns
stos
test
scas
xor
lods
adc
adc
stos
aam
lock
push
push
fcoml
mov
pop
vcvttps2dq
popa
jnp
stos
adc
ret
mov
or
daa
out
cwtl
xchg
iret
enter
inc
sbb
lret
imul
xchg
dec
adc
xchg
out
or
mov
pop
lret
stc
inc
fcmovb
aad
cmp
test
cmp
xchg
fimuls
push
sub
xor
in
ljmp
adc
sub
push
test
dec
xchg
repz
lods
dec
sub
sahf
in
mov
addr16
fnstsw
push
add
xchg
mov
icebp
cmc
adc
stos
mov
fstp
cmp
out
ljmp
iret
push
mov
pop
outsl
je
inc
xor
xor
pop
sbb
scas
jae
fisubl
and
mov
xlat
cmp
mov
insb
jae
in
inc
push
sbb
jne
jno
pop
sub
pop
or
stos
ss
sarl
scas
mov
mov
das
sub
int3
adcl
lock
or
pop
ss
mov
shrb
cmp
fmull
jl
jnp
mov
lret
push
fwait
jle
mov
push
mul
aam
sub
ss
aas
cmp
add
loopne
rolb
and
adc
mov
cld
dec
xor
xchg
lret
jnp
adc
sub
leave
pop
pop
xchg
rcll
pop
dec
ja
cld
xadd
mov
int3
mov
pop
inc
pop
cld
dec
mov
push
js
rcll
pop
cltd
dec
mov
nop
jb
stos
mov
cwtl
push
jl
dec
pop
int3
sbb
iret
mov
sub
push
xorb
sahf
jmp
lock
cltd
mov
pop
inc
popa
je
sbb
xor
xchg
add
sahf
lret
or
loopne
bound
in
mov
jns,pn
adcb
call
push
and
or
add
cmpsl
iret
mov
insb
xor
das
repz
mov
in
sub
adc
lods
dec
cmpsb
mov
and
cmp
js
push
stos
adc
idivl
mov
ret
fildll
leave
lret
fisttpl
jbe
add
out
leave
out
mov
inc
ss
add
loop
jae
ljmp
into
jno
jle
mov
lods
or
or
fldcw
mov
fldt
sub
ret
or
sti
pop
sbb
fstpl
mov
jmp
mov
mov
je
hlt
lods
push
div
ja
mov
gs
outsb
stos
sub
test
add
fsubrl
imul
insl
daa
bound
push
push
je
es
xor
push
aam
add
sub
fcmovbe
mov
shl
aam
lcall
idivb
bound
adc
push
inc
aas
xor
add
daa
dec
inc
rorb
cmpsl
call
inc
into
inc
mov
iret
ret
add
std
loop
inc
jg
mov
xchg
adc
stc
iret
or
dec
into
jb
push
int3
and
popa
inc
stc
push
mov
clc
adc
jecxz
push
push
jmp
into
bound
jmp
jae
sub
mov
xor
add
out
pop
es
loop
push
add
movsb
cmpsb
jge
and
mov
adc
pop
add
repz
pop
fsubl
push
add
iret
out
sbb
popf
nop
dec
pushf
loopne
adc
fldenv
jo
pushf
or
inc
adc
popf
mov
cmpsl
shl
loopne
enter
shrb
xchg
or
jnp
inc
jg
jnp
xchg
in
add
stos
mov
xor
sub
imul
fistpl
sbb
icebp
je
cmpsb
xchg
jb
mov
stos
xor
les
inc
rorl
sub
xchg
xor
jmp
das
xchg
fistpll
rcll
mov
sbb
xchg
inc
mov
lea
sub
dec
mov
cmpsb
fcmovnb
or
rorl
sub
cmpsl
or
ss
orb
push
scas
sbb
dec
loopne
adc
sub
aad
cmp
jo
fst
or
loop
pop
or
push
push
push
add
loopne
aad
mov
je
pop
dec
push
xchg
mov
mov
dec
cmp
imul
cmc
xchg
testb
or
xchg
pushl
mov
in
decb
lahf
out
mov
andb
sbb
repz
adc
push
push
enter
into
inc
or
xchg
mull
mov
push
xorb
repnz
mov
roll
rolb
data16
and
xchg
jg
nop
xchg
pop
xor
and
or
mov
test
xor
xchg
cs
inc
dec
or
jp
repnz
jge
or
adc
push
je
sbb
jb
scas
iret
mov
in
in
ret
data16
pop
xchg
lods
or
mov
bound
subl
mov
cmp
push
fldl
fucomi
jb
js
dec
inc
iret
mov
xchg
push
testl
adc
lods
inc
subl
int3
xchg
inc
xchg
xlat
mov
sbbl
das
in
cmc
bound
or
insb
jge
pop
xchg
jle
rcrl
cmp
xor
cmp
xor
jno
push
mov
jle
shrb
pop
adc
mov
cld
inc
push
fwait
arpl
add
iret
push
cmc
lcall
adc
sahf
sbb
mov
roll
mov
cwtl
mov
xchg
push
cwtl
enter
test
lock
pop
xlat
mov
int3
dec
loope
loopne
in
pop
dec
mov
js
aam
pop
neg
loopne
ret
xchg
cmpsl
add
dec
sbb
ljmp
ret
es
sbb
addl
out
mov
add
pop
mov
lret
mov
rcll
mov
out
inc
mov
mov
shll
mov
jno
cli
push
pop
pop
aas
ret
cmp
ss
test
mov
dec
das
pop
ja
mov
lret
dec
arpl
imul
rclb
sbb
and
pop
stos
cmpsb
xchg
xor
test
icebp
mov
and
rorl
sbbl
xor
mov
mov
mov
out
push
jb
out
and
sti
xchg
loop
out
call
clc
arpl
loope
sub
int
loopne
push
data16
lods
push
dec
xor
in
cwtl
lea
jnp
pop
pop
jg
test
sbb
enter
ficoml
movsb
test
xchg
lods
addr16
lods
pop
mov
call
pop
ror
imul
shrb
loop
into
test
push
add
aad
mov
insl
out
push
test
xchg
test
lock
push
cmp
cs
lods
sbb
test
push
leave
data16
popa
shll
incb
xor
shlb
xor
cmpsl
ss
lods
pop
test
sahf
and
add
lcall
shr
add
jmp
push
and
sar
mov
aad
dec
push
sub
outsb
xchg
and
outsb
addr16
xchg
mov
js
pusha
insb
shrl
mov
pop
pop
add
loope
lret
pop
lock
adc
in
sbb
lods
fs
mov
push
sbb
pop
lock
adc
jae
xor
jecxz
sub
scas
pslld
pop
cmp
add
popf
stos
fcoml
or
sar
sarl
dec
sub
popf
shll
or
dec
call
mov
sub
adc
mov
push
test
xchg
cs
insl
adc
loop
add
mov
lods
sbb
mov
inc
dec
popl
jno
lds
sub
mov
push
jmp
bound
jns
xchg
inc
push
leavew
sarb
cmp
punpcklwd
push
or
jns
mov
jbe
inc
pop
or
mov
mov
in
adc
push
mov
notl
ja
push
dec
push
sub
fisttps
mov
sar
or
stos
addr16
ds
and
xlat
inc
fwait
stc
scas
mov
jge
out
out
fsqrt
dec
push
jg
lods
mov
mov
push
repz
lea
lock
in
xchg
dec
adc
xor
xor
cs
xor
xchg
movsb
lcall
and
mov
xchg
stos
push
or
push
adc
sub
les
add
repz
ljmp
in
xchg
push
inc
pop
sbb
dec
nop
into
mov
ss
or
dec
pop
add
push
outsl
movsl
aas
jg
ss
ret
mov
mov
cmp
scas
sbb
mov
push
imul
test
clc
xchg
and
push
addr16
je
xchg
lods
push
or
sub
fs
jecxz
ja
shrl
rclb
out
subb
test
in
nop
loop
in
xor
mov
sbb
stos
dec
push
sub
lods
lret
pop
dec
or
mov
or
xchg
and
cltd
pop
jne
lods
xchg
mov
cmp
add
xor
xchg
ja
sbb
jmp
sbb
mov
scas
icebp
inc
xlat
mov
jmp
xchg
lds
enter
ficoms
scas
pop
dec
stos
out
test
out
cltd
mov
out
aam
push
xchg
jnp
cmp
scas
arpl
or
iret
sahf
dec
add
je
js
push
and
cs
mov
xchg
and
ja
das
mov
int
sub
adc
add
fcoml
into
cmc
sub
sbb
fwait
sub
cmp
and
in
pusha
cs
fimuls
subl
cmpsl
mov
mov
mov
mov
dec
sbbb
jmp
test
int3
lods
sub
shll
int
int
xchg
push
scas
mov
push
cmp
mov
stos
ja
sbb
xchg
popa
pop
das
lods
sbb
icebp
sub
in
or
fcoml
push
pushf
dec
ljmp
mov
add
popf
mov
push
jmp
emms
dec
push
pop
xchg
lods
mov
scas
inc
mov
clc
dec
dec
ret
fmul
ss
fucomp
and
out
lahf
out
inc
lret
cmp
rcrl
dec
fsubl
sbb
dec
add
shlb
dec
out
cs
mov
xor
pop
xchg
daa
shll
cltd
add
leavew
push
sbb
cmp
addr16
fisttpll
ficompl
cmc
mov
cmp
cmc
push
cmp
dec
mov
push
gs
adc
shlb
dec
inc
mov
adc
int3
mov
dec
int
test
hlt
cmp
jnp
shlb
mov
arpl
jecxz
mull
fistl
sbbb
aam
cmpl
push
xor
int3
inc
cltd
and
push
into
inc
test
jnp
lret
in
dec
fdivl
stc
or
xchg
cmpsl
pop
sbb
lret
add
and
jl
pop
fdivrl
fs
pop
icebp
jb
aam
mov
ljmp
lahf
mov
push
int3
mov
mov
xor
mov
rorl
orb
pop
imul
fwait
je
outsl
outsl
daa
jge
xchg
ljmp
mov
outsb
mov
stos
xor
jp
sbb
lods
dec
scas
inc
push
xlat
xor
fmuls
sub
cld
and
mov
test
mov
mov
clc
mov
lahf
ss
je
inc
push
mov
mov
mov
cmp
sub
cltd
add
inc
ds
dec
mov
sub
es
hlt
push
sbb
mov
push
inc
xor
jb
pop
shl
div
insl
pop
pop
test
adc
push
and
cmp
rclb
sub
call
imul
mov
insl
mov
pushf
pushf
lock
jns
inc
add
filds
js
into
js
js
dec
adc
fcompl
pop
push
mov
push
loop
xor
fmull
popa
xor
arpl
cmpxchg
xor
dec
mov
rolb
or
and
mov
and
cld
pop
dec
adc
in
mov
addr16
dec
dec
in
into
js
mov
repnz
mov
sub
incb
test
xchg
xor
ja
add
inc
mov
dec
std
pop
cld
push
mov
mulb
lahf
daa
xlat
pop
mov
inc
movsb
xlat
mov
das
mov
mov
int3
jecxz
ret
pop
shlb
incb
pop
mov
call
cli
mov
ss
loopne
repz
cmp
xor
xlat
or
push
sahf
jo
xchg
cld
movsl
scas
inc
adc
push
test
jns
mov
pop
rcrb
pop
lods
test
ds
lods
and
lea
pop
sub
mov
loop
hlt
mov
mov
popf
divb
hlt
xchg
fiadds
jle
ja
test
cld
rcrb
cmp
fisubs
dec
loopne
cli
scas
mov
add
jns
pushf
rcrb
stos
mov
pop
ljmp
or
scas
adcl
dec
inc
hlt
mov
test
insb
mov
mov
sub
ret
and
in
adc
mov
popa
dec
sbb
jecxz
imul
shll
pop
adc
mov
incl
jae
xor
jmp
add
pop
loop
fistpll
and
push
std
dec
mov
fsub
pop
add
test
xor
mov
jle
sahf
xchg
xchg
or
lcall
cltd
out
insb
insb
xchg
addr16
sbb
sbb
mov
adc
lock
cmp
fs
sbb
dec
sub
gs
fidivs
aam
pop
stos
mov
xchg
mov
lea
mov
sub
push
pop
or
loop
sub
lods
cmp
mov
jg
cmp
sbb
mov
negl
sbb
test
jne
jmp
jne
stos
jecxz
into
je
jl
mov
jae
dec
bound
mov
jbe
xchg
mov
and
sub
pop
jl
xchg
sub
movsl
mov
dec
jle
ret
sbb
mov
adc
imul
mov
fcos
bound
ja
lods
inc
mov
rclb
jo
test
scas
insl
sub
dec
mov
push
mov
lock
mov
popa
and
cwtl
xchg
jge
insb
jne
cmp
lods
pop
add
outsb
mov
inc
or
or
lods
divl
inc
push
and
and
sbb
mov
fcmovbe
adc
outsl
add
sub
or
fisubrs
ss
out
pop
shlb
add
xchg
leave
sahf
push
mov
push
adc
hlt
dec
lds
insb
push
sbb
and
bnd
loopne
and
sub
cmp
xchg
push
in
call
pop
push
repnz
lea
ja
fwait
outsb
insl
inc
outsl
and
sub
sbb
mov
repnz
sub
mov
pop
fmull
push
sbb
arpl
fsubs
aas
shlb
aad
and
loop
stos
imul
test
sahf
dec
mov
pop
ja
or
pop
pushf
jp
xchg
xor
dec
push
mov
mov
decb
cmp
sarl
add
pusha
add
sub
dec
xor
stos
jne
mov
imul
push
rcrb
or
xor
loop
add
sbb
cmpsb
pop
cmpb
and
sbb
xor
mov
push
jp
dec
push
in
lcall
fisttps
mov
in
jp
mov
sbb
push
xchg
cmp
push
push
cmp
es
adc
mulb
inc
push
data16
xor
clc
out
xchg
or
push
inc
fsubr
push
out
push
rorb
addr16
hlt
out
stc
loop
out
in
push
and
fsubs
jp
cmpb
lretw
test
loope
addr16
jb
push
sub
cwtl
sbbl
dec
stc
and
in
mov
in
arpl
cli
mov
pop
xchg
js
adc
repz
dec
ljmp
pop
das
mov
mov
sub
sub
in
inc
clc
fs
imul
ljmp
mov
and
push
cmc
push
cmpsl
adcl
in
xchg
lcall
push
or
add
sbb
mov
aad
xor
xor
call
cwtl
dec
mov
push
jb
out
jecxz
sbb
in
lret
xchg
fistps
fs
shrb
shr
lret
sbb
ss
in
andb
dec
xchg
push
shrl
daa
sbb
add
cmp
lahf
jae
push
or
ss
sub
hlt
sub
or
stos
loop
mov
adc
jbe
addb
jnp
xchg
dec
jns
fisubrl
jecxz
pop
lcall
scas
ljmp
notl
jbe
mov
loop
stos
shrb
fwait
sbb
fcmovbe
mov
dec
jmp
mov
popa
sbb
repnz
sti
sbb
cmp
insb
rolb
test
push
aam
mov
mov
fdiv
je
ret
daa
mov
and
inc
sbbl
jo
jb
mov
mov
in
lahf
pushf
inc
add
jle
aas
popa
lcall
loope
cltd
pop
lods
pop
lret
sahf
lcall
es
fldl
repz
je
stos
ljmp
rolb
xor
xor
cs
outsb
movsb
push
jp
aad
cwtl
ds
sbb
push
jecxz
cmp
int3
enter
sbb
pushf
add
sub
enter
push
jmp
mulb
sub
repnz
popf
leave
adc
push
lods
movsb
mov
cltd
mov
out
mull
xchg
mov
sub
jg
add
mov
jae
pop
in
push
sbb
sti
add
xor
dec
jo
ret
outsl
sbbl
cmp
mov
loope
sbb
add
sub
add
cmp
mov
scas
xor
cmc
mov
loope
scas
insb
cmp
cmpsl
das
inc
and
lods
das
shlb
sti
jge
add
push
mov
imul
xchg
test
fwait
push
mov
insb
jns
divb
ja
call
push
sub
bound
fldt
ret
pop
fadds
inc
mov
loope
jecxz
mov
inc
mov
sbb
jmp
or
decl
add
repz
cmp
divb
sarl
outsl
pop
aad
add
outsl
shl
push
gs
popa
pop
lods
jbe
dec
insl
mov
mov
out
fwait
lret
bound
popf
incl
or
and
jae
sbb
jecxz
pop
xchg
loop
das
cs
xlat
test
jae
test
popw
push
cmp
mov
inc
dec
and
sarl
pop
mov
rol
or
ja
das
cs
jmp
and
bound
inc
fbstp
jecxz
push
stc
mov
iret
adc
add
ror
pop
in
lock
adc
bnd
lret
sarl
lea
cmpb
jmp
pop
mov
dec
dec
lods
dec
movsb
push
jl
xor
inc
push
mov
xchg
ds
mov
pusha
das
into
push
fisttpll
cmp
jno
sbb
inc
cmpsl
or
fistl
cmpsl
push
repz
mov
repz
mov
fnstenv
dec
jno
sbb
push
pop
js
adc
cmpsl
jo
popf
inc
add
add
push
mov
lods
add
jb
cmp
push
mov
mov
popf
sbb
lret
ljmp
movl
dec
push
mov
or
ljmp
addr16
push
lret
pop
imull
stc
lds
scas
out
cmp
das
rcll
sbb
repz
sbb
int3
pop
fwait
sub
jp
mov
xchg
adc
shrb
loopne
inc
mulb
ret
icebp
je
mov
loope
adcl
daa
jecxz
sbb
testb
pop
sti
movsl
testl
xchg
or
aas
inc
inc
add
cmpsl
xor
cs
add
sarl
dec
fnstenv
nop
loope
test
inc
jno
pop
data16
or
cmp
rcrb
sub
jne
test
pushf
cmp
xchg
sbb
stc
jle
adc
xchg
inc
paddd
mov
test
js
int3
dec
xchg
add
cmp
data16
mov
sub
or
pop
cmp
xor
cmc
enter
clc
gs
mov
inc
cs
aad
jg
mov
sub
in
mov
into
push
cltd
clc
loopne
ret
jecxz
stos
sub
shrb
dec
pop
mov
push
mov
fwait
or
push
mov
ret
mov
ret
sbb
lret
cmpsl
inc
test
and
arpl
mov
mov
jg
jne
movsl
sbb
aaa
test
fsubrs
loopne
cmp
movsb
jmp
xchg
cmp
fisttpll
lock
and
aad
cmpb
call
fstl
sbb
lret
ljmp
adc
cwtl
fildl
sub
aam
notl
and
mov
sti
xchg
test
cmp
dec
cmpsb
repnz
in
stos
test
jle
stos
addr16
mov
fmuls
mov
pop
push
ret
mov
sub
push
mov
or
jl
xchg
cmp
dec
push
mov
insl
ficompl
lcall
hlt
fsubs
pop
adc
scas
push
xchg
scas
jno
aas
add
lds
jl
sbb
xchg
icebp
daa
js
out
imul
sbb
ja
mov
mov
out
xor
add
add
and
dec
pop
insb
sarl
add
js
push
mov
outsb
outsb
rorl
jge
adc
add
in
and
scas
insb
adc
mov
mov
push
xor
ja
push
mov
jae
rcrl
std
loopne
sub
xor
out
gs
mov
rcl
sbb
xchg
pop
and
sub
and
fwait
jp
xchg
stos
fcomps
dec
mov
rclb
fwait
es
int3
mov
sbb
ds
jno
cmp
cmp
push
push
xor
mov
dec
popa
sti
pop
in
in
push
cmc
or
sub
pusha
adc
sub
mov
push
ds
xchg
xor
les
jl
movsl
sahf
or
sub
repnz
and
std
push
jge
lods
and
or
mov
cmp
mov
cmp
pop
and
adc
push
js
pushf
bnd
insb
push
and
push
ret
or
cltd
jns
daa
mov
pop
sahf
mov
push
aad
das
in
dec
fs
pop
stos
sti
cli
ss
cmp
fistpll
lret
mov
adc
fcoms
mov
mov
mov
insb
hlt
inc
fsubrp
orl
js
mov
movsl
popa
psubsb
xor
ret
and
xor
mov
sbb
inc
mov
bound
xor
je
xchg
xchg
mov
inc
jno
mov
mov
jp
pop
popa
jl
pop
dec
xchg
or
aas
sbb
clc
rcr
rol
mov
pop
sub
mov
adc
test
sbb
je
out
or
cmp
cmpsl
icebp
xchg
push
out
movsb
ret
test
jp
dec
in
roll
out
push
adc
rcrl
xchg
mov
sbb
repnz
scas
in
cltd
add
stc
xchg
popl
fmull
xchg
lds
fbld
test
jno
push
pop
daa
xchg
jp
xchg
push
ficoml
mov
clc
cmc
mov
or
cmpsb
sub
sbb
xchg
clc
xchg
jo
xchg
push
push
and
sarb
sub
jp
jmp
ret
fwait
mov
xchg
mov
mov
and
xchg
movsb
pop
aas
sbb
imul
mov
sahf
je
and
sbb
mov
je
fcomi
mov
loop
xchg
push
loope
sbb
repz
jle
mov
into
inc
adc
adc
jae
cmp
lock
mov
or
in
test
cli
or
stos
movsb
sbb
inc
inc
stos
push
mov
outsl
xchg
mov
inc
inc
mov
xchg
subl
fiadds
fcoml
cli
jbe
int
sub
mov
dec
jmp
mov
les
pop
jmp
cld
gs
jb
mov
arpl
jnp
addr16
je
rcrl
pusha
fsubrs
mov
add
cltd
std
fsts
mov
push
aam
inc
repz
pop
or
iret
xor
in
repz
fidivl
int3
mov
ljmp
loopne
jnp
lock
pushf
or
aad
adc
cwtl
xchg
sahf
cld
sub
nop
sub
and
vdivps
and
fwait
cmc
mov
arpl
pop
std
push
repnz
test
xchg
imul
aas
or
xlat
data16
js
sub
sbb
push
pop
mov
in
pop
adc
mov
nop
sbb
jg,pn
cmpb
push
xor
sbb
jae
in
cmp
adc
jnp
mov
ljmp
test
sub
sahf
pusha
rcll
jb
mov
or
mov
icebp
arpl
incb
pop
add
xchg
push
dec
bound
sarb
lcall
das
test
popf
jne
shr
cld
and
popa
pop
arpl
aam
cmpsl
jbe
xchg
movsl
sub
cwtl
or
mov
mov
std
inc
jae
xchg
mov
lock
xor
mov
pop
mov
sbb
mov
cmp
frstor
out
std
dec
movsb
out
add
mov
push
jge
out
stc
daa
test
add
rorb
and
rcrl
pop
lock
or
shl
dec
mov
test
pushf
repz
loopne
push
add
movl
sub
mov
mov
std
scas
pusha
pop
subl
out
ret
xchg
dec
jle
sbbb
pop
pop
jmp
sahf
jo
cmpsb
pop
fdivr
roll
xor
gs
test
in
xor
out
and
leave
and
fwait
cmp
outsl
cli
bound
xor
push
adc
stos
inc
jmp
insl
fwait
das
inc
mov
push
push
stc
mov
out
push
in
or
mov
jle
add
lods
add
cwtl
mov
test
mov
cmp
sbb
in
shlb
xchg
pushf
xchg
aaa
or
pop
sub
mov
addr16
lods
xchg
bound
shlb
pop
mov
fwait
test
addl
pusha
in
out
xchg
and
mov
mov
adc
adc
das
cld
xchg
push
jmp
inc
mov
out
fmul
push
daa
dec
std
push
mov
test
jbe
lds
or
inc
fsts
sbb
lea
xor
cld
push
cmp
stc
pop
and
ficoml
addr16
jnp
mov
pop
jle
push
insl
adc
pusha
aaa
xchg
movsb
stos
dec
xor
jmp
test
and
les
adc
fnstcw
mov
lret
shlb
xchg
movsb
lock
fimuls
test
mov
enter
xchg
or
push
ficoml
je
cmp
cld
subb
data16
lods
test
mov
mov
out
icebp
pop
js
rep
pop
cli
jp
dec
mov
test
cmp
and
mov
ljmp
outsl
cmpsb
or
mov
test
jne
mov
fisubs
sbb
fisubl
xor
add
add
popa
dec
mov
xor
es
push
iret
fwait
and
hlt
push
mov
mov
dec
shrb
cli
inc
out
jae
jns
call
inc
mov
cld
stc
xor
xor
mov
jne
xor
cli
es
icebp
data16
xor
aam
add
lcall
cwtl
popa
sbb
jo
repnz
lods
fimuls
into
xchg
jae
jno
mov
mov
xchg
cli
std
adc
xchg
call
aaa
dec
cmp
sti
sub
adc
xchg
jmp
mov
daa
mov
cmp
daa
push
popf
xor
pop
pop
add
cmp
xor
xor
mov
add
push
pop
mov
aaa
pop
push
fs
sub
push
shr
mov
jg
rolb
ljmp
popa
das
jbe
xor
mov
mov
mov
mov
inc
nop
jnp
fwait
lds
mov
dec
out
lds
pop
ret
push
fisubrl
fldcw
jle
pusha
mov
fwait
in
push
fdivrl
dec
outsb
in
jp
jno
aaa
xor
sbb
outsl
iret
adc
sub
or
test
sbb
ss
or
adc
mov
xor
mov
cmp
push
mov
add
mov
insb
sbb
cmp
or
add
lcall
mov
inc
pop
jmp
pusha
lds
or
jnp
stc
pop
xor
cmp
cli
out
les
ret
push
add
clc
stos
inc
cltd
and
jno
inc
shrl
sbb
pop
jp
xor
movsb
cmpsb
or
mov
std
pop
jl
inc
neg
rclb
in
mov
imul
xor
xchg
scas
mov
mov
int
aad
mov
lods
aaa
movl
pop
dec
mov
pop
test
popa
dec
lods
ds
imul
iret
bound
imul
hlt
mov
daa
sub
jb
xadd
adc
scas
jle
push
sbb
cmp
jmp
fmuls
pop
cmpsl
jp
add
out
fdivrs
insl
adc
xor
mov
out
adc
adc
xor
stos
in
cmpl
jl
inc
jp
scas
fstl
out
dec
sbb
mov
rorl
mov
inc
dec
sub
dec
jo
call
fwait
js
sub
add
adc
add
das
or
orl
movsl
cmp
sti
jge
or
in
gs
or
jne
fwait
repz
xchg
addb
lods
in
loopne
lahf
cltd
adc
jbe
jp
movsl
inc
popf
or
push
adc
addr16
leave
jle
aam
shll
inc
rcrl
sub
fmull
push
fucomi
mov
or
and
push
sbb
mov
add
mov
fdivl
mov
inc
sub
xchg
ss
test
xchg
cmpsb
mov
xchg
or
adc
jbe
in
mov
in
mov
in
xor
cmpsl
outsl
mov
aam
es
sub
cli
cmp
lods
jbe
dec
add
fwait
in
push
arpl
and
jae
and
sbb
mov
es
sub
fmull
fidivl
push
fldcw
add
pop
repz
test
add
jp
or
fsubs
jb
or
cmpsl
sbb
stc
in
or
push
fimull
loop
mov
or
inc
jnp
scas
imul
in
pop
mov
fwait
xor
call
adc
out
movsb
mov
lock
push
or
push
enter
aam
sub
push
and
or
testl
sar
inc
sbb
aaa
inc
imul
mov
inc
mov
mov
dec
repz
mov
sub
ss
xchg
mov
stos
push
pop
cmc
aam
clc
mov
fcmovne
pushf
les
pusha
fadds
rclb
mov
stc
add
xor
mov
lock
call
imul
sbb
push
cmp
adc
sub
faddl
aaa
push
xor
pop
xchg
mov
pop
mov
icebp
push
gs
mov
aam
cli
pop
sarb
pushf
std
dec
ljmp
jl
bound
shlb
or
test
aam
pushf
and
xor
pop
movsb
divb
insb
pusha
push
pop
adc
or
mov
sahf
lahf
dec
fwait
cmp
in
test
jmp
mov
jns
imul
inc
jg
mov
pop
xor
in
fadds
xchg
mov
inc
enter
adc
cmp
ljmp
pop
in
lret
sbb
xchg
mov
cmp
enter
xor
repz
mov
sti
xor
aam
movsb
addl
xchg
jo
xchg
int3
or
faddl
adc
jnp
inc
pop
jbe
outsb
lret
lcall
pop
add
jb
jbe
add
dec
lds
jle,pt
dec
jle
cmp
or
inc
ja
sub
inc
roll
out
adc
xor
dec
sub
shll
out
lock
mov
loop
fisubrs
ja
imul
sub
push
lcall
sbb
jbe
jg
dec
mov
add
push
icebp
pusha
lock
adc
dec
pop
out
subl
dec
mov
dec
dec
insl
pop
sti
sub
aad
mov
cltd
dec
mov
and
sbb
les
aam
out
mov
insb
repz
jb
jecxz
repz
ffree
pusha
daa
loop
inc
bnd
and
dec
daa
xlat
xchg
mov
sub
push
adc
and
push
pop
pop
or
dec
jmp
divl
sbb
and
xor
jp
jbe
xchg
lods
or
mov
out
mov
ss
in
fadd
mov
xchg
iret
and
loop
test
jecxz
imul
outsb
mov
rolb
decb
test
sarb
sub
pop
popa
or
iret
repnz
push
scas
outsb
push
les
pushf
out
icebp
or
fcomp
xchg
pop
orb
gs
or
scas
jb
cmc
inc
xlat
imul
add
xor
push
sahf
ficompl
xor
jl
jnp
pop
or
push
repz
enter
shll
pop
call
pop
bound
ret
lock
or
mov
rcl
adc
push
adc
in
pop
fdiv
aas
test
mov
fcomi
xchg
out
jae
inc
jne
sub
jne
jp
test
dec
nop
cwtl
xchg
sub
out
call
mov
sbb
mov
cmpxchg
cmp
mov
dec
jno
pop
jmp
je
icebp
mov
insb
aad
or
jo
cmp
cmp
add
stc
js
mov
dec
mov
pusha
fldl
xchg
xchg
mov
in
push
out
scas
mov
pop
shll
stos
loopne
outsl
jle
cmc
mov
lcall
xor
push
frstor
ret
and
mov
sub
js
jle
aam
jae
inc
sub
adc
mov
call
aam
dec
jns
push
cmp
mov
jge
dec
fsubrp
lcall
dec
loop
scas
in
popf
je
test
dec
mov
mov
and
into
push
scas
bound
jo
into
lods
sub
jle
cmp
test
scas
fs
daa
mov
mov
lock
jno
cld
push
push
lret
inc
jecxz
jecxz
and
mov
pop
cmp
rcrb
and
leave
xchg
test
les
inc
mov
or
ret
mov
jbe
mov
mov
into
pushf
jmp
int
in
pop
mov
cltd
mov
rcl
pop
divl
jle
mov
mov
das
imul
jge
adc
cld
hlt
filds
mov
push
stos
rolb
xor
pop
data16
test
push
loop
in
daa
jnp
dec
mov
ret
pop
sub
inc
das
mov
xor
sbb
das
rcr
daa
adc
rolb
flds
adc
out
ficoml
inc
mov
in
movsl
movsb
sub
rorl
sub
mov
xchg
ss
lods
loopne
mov
lret
push
sahf
into
pop
call
pop
fldl
xchg
rolb
jp
shrl
mov
sub
enter
fcomp
sub
sbb
mov
repnz
add
jo
mov
pop
push
mov
pop
and
rcll
jle
dec
lods
push
clc
xchg
sahf
ljmp
dec
push
xlat
scas
dec
cli
ja
pusha
and
xor
stos
int3
lods
sbb
cmp
mov
xor
pop
sti
pcmpeqb
lret
add
lahf
jp
outsl
inc
jnp
lods
jo
push
pop
sbb
cmp
inc
inc
xor
adc
xor
repnz
out
sub
or
ds
cmp
insl
in
popa
in
xchg
cld
mov
ljmp
and
fdivr
int3
insl
mov
mov
mov
add
xor
and
pop
fbld
or
aam
xchg
jle
lds
loopne
push
mov
lret
pop
mov
and
xlat
cmpsb
dec
cmpsb
bound
stos
ss
leave
xlat
xor
push
and
popf
sbbl
bound
xor
std
cmpsb
jae
movsl
sbb
pop
loope
xchg
xor
fsubl
jmp
inc
imull
inc
dec
xor
mov
sub
mov
lods
xlat
ljmp
jno
push
test
aad
push
push
adc
pushf
inc
pop
cltd
insl
test
xchg
popf
stos
rorl
or
cmp
push
icebp
mov
sub
mov
cmpsb
subb
mov
add
pushf
in
stos
pusha
imul
sbb
es
psubsw
hlt
aam
add
xchg
mov
dec
cltd
rorb
push
cltd
icebp
and
or
xchg
dec
stos
idiv
je
cmp
stos
bound
or
push
pop
jo
es
mov
pop
ds
aas
mov
jmp
sub
and
xor
pop
scas
xor
mov
jge
mov
repnz
inc
out
push
in
call
daa
push
rclb
xchg
dec
ret
test
mov
rclb
lcall
add
inc
outsl
or
jge
cmp
dec
or
pop
movsb
fisubl
dec
xor
icebp
xchg
bound
imul
mov
cmpsb
movsb
push
adc
or
insb
cs
sbb
and
adc
mov
sub
notb
mov
hlt
cwtl
cmpl
imulb
xchg
cmpl
push
mov
mov
sbb
adc
test
pop
inc
ret
lock
mov
pop
mov
stc
leave
dec
and
pop
stos
sti
sti
pop
push
push
mov
pop
mov
frstor
movsb
xorb
mov
scas
in
popf
stos
add
lret
js
pushf
subl
rcr
out
cmc
push
mov
imul
jae
mov
adc
jo
sbb
and
insl
mov
inc
in
mov
jmp
sahf
faddl
orb
inc
pusha
fimull
and
aas
push
dec
movsb
cmpsb
dec
cld
gs
jae
jbe
cmp
cmp
ret
movsb
mov
sub
sbb
inc
and
test
scas
adc
add
movsl
cld
mov
pop
push
jmp
jmp
jmp
inc
add
andb
xor
bound
icebp
sub
add
xor
mov
xor
mov
mov
test
pop
mov
pop
mov
sub
pop
push
loop
js
push
movsl
adc
dec
ss
add
mov
cwtl
xchg
int
sbb
fldt
shlb
sub
fstl
mov
jae
dec
fcoms
icebp
mov
mov
dec
mov
imul
xchg
fbld
aam
mov
inc
icebp
mov
cmp
lock
xchg
add
push
and
pop
cli
ss
test
cmp
testb
imul
push
and
jb
sub
and
scas
add
adc
push
sub
incb
mov
push
ret
in
inc
sti
repnz
push
pop
jge
sub
add
enter
push
pop
jne
jp
mov
iret
adc
mov
andb
jae
sbb
nop
pushf
pop
nop
jno
test
inc
xlat
jne
popa
lods
ljmp
cmp
sub
out
jg
daa
or
cli
sbb
sti
in
jg
mov
jle
wbinvd
shlb
mov
fdiv
incb
aam
ret
aad
mov
pop
cmp
insb
sub
push
cmp
mov
jnp
push
and
andl
test
ret
cltd
push
arpl
addr16
pop
shl
out
popa
mov
sahf
mov
push
pop
dec
hlt
xchg
lret
jae
fcoms
mov
jle
ljmp
fisubl
sub
add
ds
cmove
scas
mov
sbb
mov
adc
outsl
cwtl
or
rcl
mov
mov
rorl
sub
dec
mov
xchg
popf
jmp
jle
jno
test
push
add
sub
popf
pop
jmp
mov
lcall
jle
sbb
sub
or
inc
cmp
add
dec
push
rcrl
test
roll
and
mov
repz
xor
push
dec
add
shrb
inc
or
outsl
scas
push
ds
jg
cmp
ret
or
arpl
les
aas
mov
mov
test
dec
scas
mov
jg
stc
mov
outsb
xor
loop
push
inc
push
push
or
dec
stc
cmp
hlt
adc
push
xchg
cli
rcl
es
imulb
out
cmp
adc
xchg
movl
fcoms
out
imulb
shll
lret
push
lds
or
in
jmp
in
fsubr
test
jmp
jbe
xchg
adc
inc
dec
aaa
in
cmp
daa
addb
ss
and
jo
scas
lret
push
into
pop
pop
pop
mov
or
imul
cmp
ret
cmp
sbb
out
dec
sub
adc
mov
in
cwtl
subb
jae
imul
test
mov
popl
push
dec
mov
and
flds
popf
aas
dec
imul
push
sbb
xchg
pop
mov
aas
call
pop
pop
pop
je
insl
inc
orb
frstor
outsb
push
into
push
fldt
mov
leave
movsl
call
out
and
aas
xor
cmp
mov
aam
sub
shlb
cli
inc
sti
sarl
sub
push
out
test
add
jmp
out
pusha
popa
xchg
and
sbb
or
stos
cmp
lret
rcrb
mov
add
and
xor
inc
jne
mov
scas
data16
cld
adc
jae
cmp
mov
bound
fsubrs
push
mov
out
dec
adc
mov
ds
imulb
dec
sub
mov
adc
je
sub
mov
push
mov
cmc
jo
cmpsl
sub
push
fs
jecxz
cmp
xchg
pusha
call
data16
mov
out
scas
xlat
scas
xor
push
sub
push
movsb
pop
fwait
stos
fbld
xchg
mov
negb
loop
xchg
push
jle,pn
and
lds
push
lret
adc
aas
mov
or
sub
leave
xchg
imul
cli
idiv
fnstcw
adc
es
inc
mov
sar
sarb
xor
fbstp
mov
scas
adc
leave
lcall
scas
sub
ljmp
xor
loope
add
frstpm(287
push
in
sbb
je
xor
into
int
xchg
mov
fidivl
mov
and
outsb
icebp
rcrb
push
mov
dec
xchg
jbe
subl
out
fisubrs
xchg
jmp
sbb
dec
sub
adc
xor
push
cltd
addl
mov
sub
popa
pop
test
cmpsl
clc
jle
push
leave
outsl
stos
add
jbe
lahf
int
jo
iret
mov
jb
stc
and
dec
movsl
ficoms
sub
inc
mov
out
iret
xchg
mov
xchg
dec
dec
or
imul
roll
pop
sub
mov
xchg
inc
and
imul
push
aaa
jae
add
xor
test
pushf
cmpl
push
inc
mov
add
dec
pop
add
cli
xchg
push
dec
push
popaw
xchg
pop
fstpl
jecxz
push
enter
hlt
mov
incb
xchg
fcoml
fcomi
divl
push
shrl
pop
jns
int
push
and
xchg
sbb
pop
push
sub
lds
cli
dec
xlat
mov
mov
inc
test
cmp
sub
pop
imul
push
lds
xchg
pop
addb
mov
jnp
ss
out
sub
test
pop
test
xchg
jns
and
mov
push
mov
outsb
or
xlat
test
clc
ja
pop
ds
inc
fnstenv
adc
movsb
out
sub
xor
mov
mov
cmp
in
mov
pop
es
rclb
sub
xchg
test
sar
mov
cmp
mov
je
jne
out
sbb
pop
int3
pop
jb
es
std
push
push
ja
dec
mov
add
in
push
call
mov
mov
imul
push
add
ja
sub
mov
push
test
push
mov
jae
jns
hlt
sahf
in
pop
xchg
shlb
sar
push
push
jae
out
sub
bndstx
cmpsl
jns
push
sbb
xchg
rcrb
scas
cs
add
outsb
lret
imul
fwait
hlt
out
orb
dec
mov
add
or
adc
stc
pop
data16
mov
ficomps
into
cmp
aas
hlt
aam
enter
loope
and
push
mov
fldt
pop
xor
push
sti
sbb
cli
vunpcklps
aam
rcrb
sbb
jmp
lds
subb
out
inc
imul
lea
mov
lret
jne
pop
or
mov
nop
pop
cmpsb
xchg
mov
test
pop
cld
push
scas
sub
mov
test
inc
xchg
adc
jle
icebp
cld
clc
mov
sub
push
pop
add
dec
das
dec
and
scas
sbb
mov
sti
pushf
or
dec
jmp
xchg
push
fwait
dec
pusha
leave
pop
mov
and
cmp
mov
aas
push
push
mov
push
pop
popf
and
popa
cmp
pushf
jb
push
mov
xor
out
jnp
and
shll
popf
loopne
inc
cli
push
dec
cmp
jg
or
ja
test
push
imul
sbb
js
int3
cmpsb
pop
not
dec
add
sub
rcr
orb
pop
rorb
dec
sub
sbb
sub
fcompl
inc
mov
sbb
mov
inc
cmpsl
clc
sub
sahf
inc
or
xchg
jo
mov
or
pop
pop
mov
mov
jo
inc
push
iret
out
mov
insb
popf
aad
push
sub
mov
xchg
testl
cmp
inc
dec
xor
pop
adc
test
adc
ljmp
or
inc
lods
idivl
addr16
mov
jne
pop
adc
pop
insl
in
std
shlb
cmpl
push
mov
cmp
or
repz
stos
push
xchg
mov
movl
sbb
outsl
std
add
mov
test
fcmovne
pop
or
mov
imul
in
or
adc
cmp
sub
lock
adc
mov
ljmp
push
push
or
sbb
mov
insb
in
mov
mov
push
dec
push
jno
or
ds
insl
clc
push
add
adcb
in
ret
mov
ja
or
pop
mov
les
mov
xlat
pusha
test
clc
sub
sub
mov
and
push
inc
out
mov
xchg
cmc
jl
cmp
fnstenv
movsl
scas
and
sahf
xchg
mov
lret
pop
icebp
mov
sbb
mov
xor
add
loopne
lds
dec
gs
ljmp
xorl
dec
out
shl
ss
dec
push
cli
movsb
aad
inc
fidivs
idivb
dec
sub
jge
fsubs
xchg
push
movsb
pop
test
out
cmp
out
test
test
mov
sti
sarb
decl
jno
rcrl
and
lret
xor
inc
das
cmp
adc
dec
mov
jo
subb
mov
orl
ja
test
fdivrl
inc
shlb
arpl
mov
push
out
fidivl
sub
insb
dec
ds
xor
imul
or
push
in
push
adc
in
inc
aas
aam
inc
std
std
sbb
inc
lret
and
add
cli
inc
outsb
dec
inc
sub
aad
jmp
paddusb
dec
aaa
jg
mov
insb
push
popa
scas
iret
mov
mov
lea
sahf
popf
xchg
xchg
pop
ja
jno
sub
into
in
pop
int
push
cld
filds
mov
xor
lret
xor
cmp
movsb
jno
adc
cld
inc
test
or
loopne
xchg
mov
aas
push
cmp
push
xor
mov
mov
hlt
jmp
out
inc
loope
push
div
clc
repz
in
in
pop
pop
andb
add
loope
popa
.byte
.byte
.byte
jnp
clc
cmp
repnz
cmp
fldl
fld
hlt
mov
cli
addr16
sbb
mov
outsb
and
bound
popf
cltd
mov
sub
sub
insl
scas
repz
mov
mov
jg
jae
push
arpl
test
cmp
aaa
mov
dec
cwtl
or
test
xchg
sti
orb
jmp
inc
ss
dec
pop
popf
fidivs
xchg
aad
mov
and
sbb
cwtl
mov
xor
roll
leave
addr16
loopne
loop
loopne
jo
aad
mov
sub
test
clc
imul
xlat
dec
add
js
xchg
sub
jecxz
lcall
das
adc
es
mov
sub
rorb
sub
sahf
cmp
fisubs
loopne
cmpsl
cmpsl
imul
xor
jmp
inc
cmpsb
add
jge
lea
sub
sub
mov
mov
mov
push
insb
inc
push
lock
sub
das
and
jbe
push
add
insl
jne
sub
rolb
jmp
orl
mov
pop
jl
xchg
xor
lods
mov
stos
and
in
int3
xor
dec
or
mov
les
movsb
aad
jp
mov
mov
frstor
inc
xor
std
sub
adc
dec
push
xor
pop
adc
dec
nop
sub
out
testl
dec
pop
mov
mov
mov
std
push
pop
mov
subl
scas
sub
jns
mov
mov
or
jg
sub
imul
shl
bound
xchg
sub
and
das
cmc
js
mov
testw
jl
sbb
ret
or
cli
xor
add
jmp
xchg
adc
leave
mov
cli
xchg
cltd
les
mov
mov
sbb
fwait
div
mov
add
sub
arpl
add
or
js
pop
add
out
jl
push
and
imul
cltd
les
cmp
ss
lods
in
gs
jae
mov
xor
das
cmp
inc
mov
inc
mov
pop
mov
adc
sti
mov
mov
outsl
xor
xor
sbb
test
xor
sub
lea
enter
jge
mov
aas
mov
cs
out
or
inc
rorl
addr16
pusha
adc
ss
ja
test
mov
fimuls
add
pop
adc
mov
fistpl
lahf
mov
xor
mov
out
or
jmp
push
sub
dec
pop
mov
insl
nop
shll
leave
adc
xor
sbb
pop
xchg
sbb
fidivrs
jp
jle
imulb
xor
movsb
xor
jl
jnp
mov
sub
dec
jb
fldcw
inc
inc
mov
push
inc
pushf
inc
dec
jb
sbb
inc
fildll
stos
in
ljmp
push
movsb
aas
cwtl
cmp
push
sbb
xchg
mov
lcall
cld
and
and
jl
dec
fadd
sub
rcl
or
je
ljmp
icebp
mov
sbbl
out
std
ret
pop
pop
lret
mov
push
sub
enter
jmp
hlt
rorb
nop
and
leave
and
lret
cmpsl
in
fdivs
dec
hlt
cld
sahf
outsl
daa
outsl
mov
shl
or
xchg
or
test
add
push
pop
or
mov
test
xchg
jg
mov
pop
mov
insl
repz
mov
xchg
fdiv
pop
ja
outsb
fisttps
mov
mov
aaa
in
test
push
mov
jb
test
pop
lock
out
testb
push
push
push
add
push
jl
xor
outsl
mull
push
pop
mov
sub
pushf
dec
shll
pop
loop
pushf
sub
rcl
add
fisubl
mov
xor
call
imul
xchg
test
mov
jbe
dec
push
mov
or
cmp
sub
lds
out
mov
test
sub
test
les
psrld
and
sbb
loop
adc
push
aaa
divb
stos
ss
fcom
cmp
jo
sbb
popa
jp
cmpsl
or
dec
dec
dec
test
push
sbb
call
cwtl
insb
and
in
pop
out
cmpsb
mov
neg
or
inc
cmp
aad
data16
pop
clc
push
in
jne
std
cmp
add
xchg
cwtl
iret
clc
lods
or
sbb
mov
aad
lods
cmpsl
cmp
std
ss
stos
push
stc
jne
arpl
jl
outsl
leave
inc
ljmp
add
out
inc
inc
xchg
addr16
mov
lea
je
jle
in
mov
std
xor
mov
sbb
mov
cwtl
ja
enter
test
cwtl
mov
scas
jbe
sbb
cmpsl
sar
push
pop
ret
leave
fildl
ja
outsb
dec
inc
repz
insb
scas
mov
pushf
lea
sbb
andb
rorl
aad
fxch
xor
mull
outsb
push
rcl
js
and
insb
loopne
in
sub
mov
daa
lock
lods
fwait
loopne
fdivs
iret
adc
push
add
and
xchg
dec
out
ja
pop
fwait
andb
mov
inc
aam
mov
mov
jbe
movsb
aas
aad
mov
xor
sbb
adc
pop
arpl
pop
sbb
js
xor
test
lds
out
lock
push
adc
or
sbb
and
xchg
insl
inc
fnstsw
outsl
stos
xor
cmp
sbb
aaa
mov
mov
mov
mov
mov
push
push
pop
push
mov
sti
mov
mov
dec
jns
lcall
jnp
and
gs
pop
mov
fdivp
outsb
test
scas
daa
out
and
jne
push
dec
sahf
dec
cmp
stos
sub
js
xchg
add
jo
in
cmp
mov
and
add
repz
pop
in
orb
out
out
push
push
std
lret
arpl
and
mov
cmp
adc
sbb
div
bnd
loopne
inc
dec
push
or
mov
insl
ficoms
or
rol
xchg
inc
cli
sbb
and
mov
loopne
push
mov
pop
sub
sbb
gs
mov
dec
dec
dec
pop
pop
jmp
or
cmp
and
aad
inc
fldln2
adc
dec
shlb
dec
or
iret
iret
lods
sti
jnp
inc
push
and
inc
aas
shrb
fs
xor
loop
jecxz
sub
pop
xor
cmp
fisttps
xor
jp
popa
cmp
xor
nop
xchg
insb
push
and
sbb
movsb
push
dec
loopne
out
roll
ret
outsl
shrb
xor
aas
cwtl
cs
push
dec
sub
or
pop
mul
loopne
out
mov
mov
data16
push
and
cmp
cmp
push
es
sti
mov
cmc
ljmp
mov
pop
jno
pop
push
push
aas
inc
sbb
xchg
je
mov
xchg
ljmp
push
xorl
sub
ficoml
insb
aas
inc
adc
inc
les
repnz
xor
cmp
mov
test
inc
in
loopne
inc
mov
and
push
sti
inc
cli
mov
sbb
into
cmp
inc
pop
and
flds
fiadds
adc
push
adc
push
xor
es
dec
sbb
stc
cmpsb
fidivrs
insl
stos
push
imul
xor
sbb
xchg
inc
ret
popa
add
mov
aam
addb
nop
jns
sahf
sub
shlb
in
mov
hlt
mov
inc
xchg
pop
sbb
sub
pop
pop
cmp
mov
push
mov
in
pop
jp
fs
fst
mov
test
mov
enter
loop
jnp
mov
fsubs
xchg
xorl
sti
cmp
pop
dec
loopne
lahf
in
popf
mov
loope
lock
fs
shrl
mov
repnz
adc
dec
jge
cs
sbb
iret
imul
jae
mov
xlat
outsb
stos
inc
inc
sti
fildll
nop
push
stos
imul
mov
repz
loopne
lret
xchg
jnp
push
push
push
push
leave
mov
dec
ficoms
sbb
out
mov
dec
mull
lods
aam
jg
je
mov
add
aas
hlt
jae
add
sub
or
ror
xchg
daa
icebp
or
fcompl
cmp
leave
int
enter
sbb
mov
std
ret
xor
and
push
mov
mov
loope
adc
jg
rol
xchg
pop
push
fsubs
addl
imul
rolb
dec
fdecstp
stos
cli
aam
lcall
mov
in
ficoms
jecxz
push
mov
hlt
pop
pop
push
lock
fldenv
xor
lods
jmp
push
das
pushw
lods
push
pop
ljmp
movsl
inc
into
xor
fwait
mov
xor
lret
cld
push
adc
in
jae
scas
icebp
fiadds
movsb
push
mov
mov
pop
jne
lret
push
out
add
sbb
lods
outsb
jb
repz
adc
ljmp
nop
int
mov
sahf
shll
sub
jb
xor
jb
hlt
or
pop
xor
scas
and
xchg
xlat
and
mov
out
push
aad
lea
and
sbb
outsl
mov
xor
les
arpl
xchg
mov
add
mov
lret
pushl
cwtl
fisubrs
test
sbb
in
shlb
js
ljmp
inc
outsl
les
inc
movsl
dec
push
popa
jmp
xor
xor
fs
add
int
rorl
and
inc
aaa
subb
jb
sbbl
jns
fs
ljmp
jno
fldenv
ficompl
push
or
mov
mov
jg
shll
nop
int
fwait
sub
sub
xor
push
add
lret
push
add
stos
push
mov
lcall
movsl
push
dec
scas
jae
sub
repnz
movsl
jecxz
mov
out
push
mov
frstor
pop
and
xor
xchg
test
mov
out
lods
cmp
nop
jno
cmp
mov
cmp
xor
jp
xchg
shll
pop
andl
mov
lcall
push
fildll
mov
jle
in
movsb
sahf
outsl
xchg
daa
or
addl
dec
repz
int
mov
in
sub
cmp
xchg
xor
xchg
jmp
out
sbb
and
outsb
dec
cmp
les
add
and
hlt
cmp
jae
pop
pop
nop
xor
cmp
sbb
dec
or
sahf
bnd
mov
ret
cmp
out
shrl
imul
push
scas
mov
adc
test
jns
mov
repz
inc
inc
js
push
dec
dec
in
or
or
mov
cmp
mov
lcall
iret
orl
xchg
in
or
dec
frndint
out
shrb
jmp
push
fcmove
pop
inc
orb
or
cmp
sub
gs
out
mov
stc
cmp
orb
test
inc
and
and
out
jge
fs
jns
mov
sub
fyl2xp1
sbb
inc
push
pusha
cld
cmpsl
lods
adc
loope
aam
in
test
adc
fcompl
jb
test
aas
aam
dec
leave
jae
or
jne
jno
and
cmpsl
push
pop
je
pop
loop
jns
out
cmp
mov
int3
mov
mov
mov
loopne
ljmp
mov
pop
mov
dec
aas
aad
adc
xchg
jb
lds
jne
jg
scas
jb
iret
sbb
imul
push
cmc
sub
fidivrl
popa
xchg
adc
xor
in
in
aad
dec
ljmp
jecxz
jb
sub
popf
jnp
cld
aas
icebp
pop
into
add
cmp
and
sbb
dec
sub
iret
lds
xchg
daa
das
stc
mov
xchg
mov
test
add
and
cltd
leave
cmc
or
push
or
dec
dec
add
adc
or
xchg
push
sub
add
out
sub
iret
sbb
adcl
cmp
and
enter
mov
jo
aad
jmp
sti
insl
lcall
or
int
inc
ds
pop
lret
mov
mov
mov
adc
jns
shll
fnsave
outsl
jno
sub
ljmp
sbb
xchg
xor
sahf
dec
xchg
sti
pushf
dec
shll
cmp
aad
mov
pop
dec
in
cmp
cmp
sbb
add
add
test
pop
pop
mov
test
scas
pop
push
mov
std
sbb
aad
cld
dec
xchg
test
cli
call
cltd
je
cwtl
xor
push
fsubrp
pop
sahf
sbb
lcall
aas
pop
std
mov
push
sbb
je
insl
mov
shrb
sbb
xor
cld
push
mov
xchg
out
popa
shrl
into
dec
mov
mov
or
mov
fstp
cmp
inc
in
mov
fsubrl
repnz
stc
fldcw
in
pop
mov
xchg
hlt
jecxz
push
outsl
test
mov
adc
test
lret
or
sbb
je
push
xor
sub
xchg
mov
xlat
flds
dec
movsb
faddl
dec
mov
cli
loopne
mov
xor
lea
leave
sbb
add
add
jle
dec
in
insl
ret
popa
outsl
sbb
aaa
push
pushf
dec
jns
ja
pop
cmpsl
imul
adc
movsl
pop
outsl
sbb
pop
rorl
loop
fldenv
leave
popa
fimuls
adc
and
in
inc
and
stc
push
insl
mov
mov
pop
mov
in
jg
or
mov
xchg
push
pop
and
filds
ret
push
jl
pop
cli
in
jne
loopne
fildl
test
in
and
popf
sbb
mov
and
mov
bound
ret
jb
rcr
loop
cmp
or
mov
rcrb
cmp
in
in
or
aam
jno
lods
popa
pop
das
xor
imul
adc
stos
mov
jne
push
gs
lods
sub
push
out
fwait
or
in
std
mov
aam
in
push
pusha
cld
mov
mov
push
pop
insb
or
add
data16
movsl
sub
lock
and
cmpsl
xchg
icebp
xor
dec
inc
enter
stos
inc
cmp
test
cld
inc
cmp
adc
inc
sbb
push
xchg
push
mov
push
scas
sub
push
mov
pop
lret
pcmpgtd
mov
lock
cmp
cmpsl
jne
popa
ds
jb
mov
adc
outsb
test
or
xchg
jb
xchg
pop
lea
popa
pop
add
gs
jbe
push
cltd
mov
sub
in
jge
mov
mov
insb
lret
xchg
sub
repz
imul
mov
addb
dec
negb
mov
cmp
popa
lds
lcall
mov
xlat
sbb
testl
or
mov
sub
cmp
lods
loop
sbb
or
cmp
iret
and
repz
mov
xchg
mov
lods
inc
and
sub
or
pop
ret
push
sahf
push
in
stos
push
dec
sub
sub
clc
push
push
mov
in
mov
and
sub
pop
xlat
out
mov
leave
popa
dec
pop
inc
test
lods
push
ret
cmp
pand
test
lahf
ror
call
mov
out
xchg
dec
clc
adc
push
pop
cs
push
xor
push
daa
rclb
insb
out
xchg
cmc
mov
mov
in
int3
insb
sar
imul
jge
jns
mov
and
mov
cmp
cmp
pop
shll
out
pop
mov
add
pop
mov
sub
mov
mov
mov
lods
mul
out
sti
dec
pop
scas
pop
ljmp
inc
jae
dec
sti
xor
icebp
and
sub
mov
sbb
in
ds
inc
or
pop
fsubs
fs
nop
dec
push
xchg
adc
dec
je
repnz
test
jne
mov
pusha
ret
mov
arpl
cs
mov
popa
jb
and
adc
add
xor
cmp
adc
pop
inc
inc
jo
out
cs
pop
sbb
loopne
leave
shlb
rol
pop
data16
dec
inc
push
push
ret
inc
adc
int3
mov
popa
lret
inc
leave
sbb
pop
or
cmp
xor
lret
test
jmp
push
adc
dec
jbe
jmp
cmp
movsl
lcall
in
mov
out
sahf
shlb
inc
ja
inc
jno
pop
popf
das
push
push
or
out
enter
mov
and
adc
adcl
in
add
xor
adc
cs
rcll
inc
jnp
or
jp
fnstsw
mov
push
and
add
into
outsl
xlat
or
cmpsl
adc
or
sbb
dec
mov
mov
xchg
xchg
sbb
jmp
notl
and
gs
jnp
in
cmp
roll
ffreep
fidivrs
dec
dec
or
out
hlt
inc
add
dec
sbb
jns
test
inc
fldcw
jb
xchg
lret
lcall
sub
aas
add
adc
push
xor
gs
and
pop
pop
cmp
mulb
dec
dec
stc
mov
lahf
ret
jp
psllw
jae
fst
sti
lods
pushf
dec
sahf
inc
lock
xlat
jb
and
mov
pop
sub
push
pop
add
xchg
dec
mov
push
mov
or
mov
out
sbb
mov
imul
int3
jo
dec
loopne
outsb
sub
gs
or
add
shll
insb
or
imul
mov
mov
test
loopne
xchg
iret
sbb
loope
dec
push
push
push
mov
out
mov
lock
scas
sub
fistpl
or
mov
push
fucomi
dec
insb
or
decb
outsb
inc
xchg
lcall
pushf
xor
fstpl
lahf
dec
mov
bound
out
daa
dec
aas
test
mov
sub
adc
push
push
popf
or
stos
push
dec
jbe
lea
fldenv
xchg
fcomps
jo
dec
lcall
cmp
je
pusha
xor
push
pop
jbe
or
jmp
aam
add
push
loopne
jmp
sub
int
out
jnp
or
or
das
rcrb
shll
stos
ss
arpl
inc
shlb
cmpsb
ss
push
cmp
or
mov
fcmovnb
loope
jp
pop
fdivrl
add
inc
and
and
movsl
arpl
mov
mov
iret
cld
loop
dec
movsb
push
pusha
iret
jmp
repnz
mov
adc
outsl
mov
outsb
stos
daa
xchg
in
fildll
and
dec
out
lahf
loope
scas
mov
loope
sahf
icebp
notb
lret
pop
imul
cmpsl
movsb
push
push
add
and
mov
rcll
std
hlt
icebp
jo
or
jle
pop
cmp
ret
movmskps
jae
mov
sbb
out
sub
in
fsubl
cmc
das
fsubrs
jle
out
adc
jns
aad
cmp
es
push
dec
sti
movsb
xchg
inc
cwtl
push
push
loop
xchg
fwait
ret
dec
sub
sbb
movsb
and
mov
loop
jle
mov
jbe
xchg
dec
out
cli
cmp
loopne
shll
mulb
ds
movsb
imul
cmp
adc
in
out
jg
call
push
mov
and
mulb
lods
xchg
adc
cmp
xchg
int
fs
mov
out
xchg
pusha
aaa
sub
pop
dec
insl
mov
xchg
pushf
mov
loope
hlt
outsb
mov
shr
cmpsl
test
adc
movsl
rcrb
sbb
mov
push
push
pop
xchg
fbld
inc
stos
loop
xor
repz
icebp
adc
cmp
pop
out
or
cmp
seta
mov
xchg
pushf
mov
outsb
xorb
sbb
mov
arpl
outsb
jnp
scas
movsl
outsb
mov
movsb
mov
bound
into
xchg
sarl
xchg
std
push
xorl
inc
push
sbb
xor
popf
mov
loope
pop
pushf
mov
xor
daa
xchg
xchg
rolb
stc
fldcw
movsl
xchg
and
sbb
jge
push
dec
js
inc
outsb
cmp
int3
dec
movsb
mov
ja
inc
lcall
jg
jle
adcl
jno
movl
xchg
arpl
push
repnz
pop
sarl
and
in
fsubr
xor
cwtl
inc
dec
inc
mov
add
pop
enter
daa
sub
cmp
and
inc
push
leave
test
out
into
test
rorl
sbb
aad
gs
xlat
mov
out
jecxz
add
and
stc
mov
sbb
xorb
jg
add
push
lcall
mov
fisubs
push
mov
jecxz
data16
aad
push
ja
xor
mov
and
int
stos
cmp
je
pop
pop
push
add
push
cld
repnz
cmp
ljmp
xor
mov
push
ljmp
ja
gs
ja
xchg
xchg
daa
lods
dec
sbb
pop
dec
ret
inc
sbb
imul
inc
clc
arpl
fwait
inc
xchg
insb
mov
add
add
xor
out
arpl
jge
cli
mov
xchg
ja
fs
in
pushf
push
jnp
repz
sbb
push
and
push
loope
adc
xchg
push
fwait
aas
sub
es
pop
nop
inc
jb
cmpsl
and
popa
mov
cltd
addb
shr
mov
imulb
jp
outsl
inc
mov
push
fisttpll
pop
in
or
jle
mov
clc
adc
xor
inc
mov
xchg
add
mov
test
ficompl
pop
mov
repz
pop
add
cmpsl
dec
mov
popl
fs
icebp
rorb
fwait
or
movsl
push
das
pop
xor
dec
add
jmp
sbb
fs
bound
jle
roll
ficompl
fcompp
gs
xor
add
call
xchg
imul
aaa
loope
fsubl
adc
or
enter
or
inc
hlt
cwtl
sub
push
ljmp
outsb
xchg
jmp
cmc
daa
adc
or
inc
dec
mov
mov
cltd
ljmp
ljmp
push
aaa
cmp
call
int3
sub
add
cltd
pop
add
rcl
dec
sbb
nop
inc
jne
push
bound
sbb
lcall
pop
les
add
out
pop
pusha
sub
mov
push
push
ljmp
orb
imul
sub
mov
movsb
clc
dec
cmp
pop
loop
fdiv
out
jae
loope
cli
aam
pop
fistpl
mov
mov
loopne
roll
lret
bound
ret
adc
fmulp
and
clc
adc
dec
mov
xchg
add
inc
imul
lcall
jo
insl
push
or
or
mov
push
xchg
aad
sbb
or
sub
xchg
fs
pop
test
in
addr16
addr16
cmp
test
rolb
ficoml
cmp
mov
push
orl
add
inc
mov
dec
xchg
dec
cs
ds
push
js
bound
or
jns
fildll
lret
stc
arpl
xchg
imul
cltd
gs
test
pop
loopne
shl
ja
add
xchg
jne
jo
inc
push
scas
push
lock
dec
xor
push
sub
js
pushf
jo
mov
inc
dec
mov
inc
push
cltd
fisubs
sarl
imul
mov
mov
xor
mov
xorb
inc
imul
sbb
lods
stos
adc
push
les
bound
mov
adcb
dec
and
insb
call
faddl
lds
push
mov
es
sub
fimuls
cmc
sbb
je
mov
push
mov
mov
xor
out
pop
mov
insl
ret
pushf
mov
and
mov
repnz
adc
push
mov
push
pusha
loope
push
cmp
jge
ror
ficoml
imul
ja
movl
sahf
inc
inc
and
mov
add
js
ds
sti
xchg
adc
xor
data16
xor
cmc
sahf
xchg
pop
ret
icebp
fucomp
mov
push
sarl
cmp
push
xchg
push
lods
mov
call
xor
bound
lret
rolb
cmc
cmpsl
jle
adc
push
cmc
pop
enter
leave
jl
sub
movsb
push
inc
xlat
xchg
aam
lea
nop
sbb
pop
cli
mov
mov
push
cmpsb
pop
ja
leave
inc
mov
pop
shll
cltd
xor
push
jbe
sbb
xor
mov
inc
lea
xor
ftst
std
fisubl
xchg
in
movzwl
lret
cmp
nop
and
int3
lods
and
mov
lea
xor
stos
js
add
xor
js
jns
and
addr16
inc
daa
ljmp
push
sbb
decb
add
aaa
shl
cmp
mov
xchg
fisubs
mov
mov
ud1
nop
mov
sahf
and
sahf
dec
push
xchg
cmpsl
cmp
out
aad
jmp
int3
jmp
adc
rolb
jmp
clc
into
adc
pop
imul
lcall
xchg
cltd
push
icebp
adc
dec
popf
test
adc
inc
push
gs
or
and
movsb
imul
and
mov
dec
or
test
cmpsb
xchg
dec
mov
sbb
call
push
or
lret
mov
jg
xor
ljmp
fldt
mov
jnp
lods
and
add
stos
lods
jmp
insl
cltd
sub
inc
sbb
dec
add
mulb
sahf
ficompl
hlt
or
jp
push
nop
adc
adc
and
cltd
jecxz
js
sub
pop
fsubr
adc
cmp
std
rcrb
ljmp
dec
ss
fs
mov
inc
orb
sahf
lea
pop
jb
add
push
mov
ret
cli
pop
lcall
dec
mov
or
test
lds
in
ret
inc
imul
cmp
jl
popa
icebp
std
aam
es
sbb
jb
sbb
shl
ja
jbe
and
xchg
cltd
push
push
push
xchg
in
sub
dec
mov
idivb
clc
je
xor
ret
gs
lods
sbb
sbb
ret
test
scas
add
sub
je
addb
in
shlb
mov
xchg
xchg
xor
call
or
inc
daa
outsl
outsb
inc
fidivrs
xchg
mov
sub
mov
movsl
mov
mov
mov
lock
cmp
push
mov
sbb
mov
lret
xor
gs
dec
mov
pop
or
sahf
icebp
jecxz
sub
adc
cmp
aas
repz
mov
mov
push
fldcw
clc
fldt
ret
cmpsl
imul
pushf
ja
fimull
out
sbb
ja
jo
sub
push
icebp
and
jmp
rorb
xchg
pushf
test
push
sarl
mov
inc
out
jb
add
and
sub
mov
daa
adc
mov
jo
mov
in
scas
add
cs
jge
push
bound
sti
sub
repz
xchg
into
repz
adc
clc
test
mov
mov
clc
push
cmp
addb
aam
loop
mov
sbb
push
pop
mov
cmp
popa
mov
inc
cmc
ret
push
and
push
xchg
pop
mov
jp
push
test
xchg
mov
mov
push
adc
cltd
cli
push
or
pop
sti
or
xchg
sub
pop
roll
jg
sub
rcrb
insl
addr16
add
in
mov
jp
jmp
cmpsb
aad
jb
out
loopne
repnz
cmp
and
cmp
dec
in
sbb
adc
xchg
fistpll
cli
mov
mov
mov
adc
lcall
test
notl
push
fisttpll
sbb
int
pop
test
addr16
add
mov
add
or
pusha
xchg
jmp
lods
out
or
fs
cmp
jns
pop
clc
aaa
xchg
outsb
daa
out
popf
jecxz
in
movsb
push
push
icebp
xchg
xlat
and
mov
sbb
push
mov
adc
stc
add
je
leave
jg
in
inc
int3
and
popa
mov
cmc
daa
fmul
or
push
cmp
gs
dec
jne
inc
ds
pcmpgtw
test
or
pop
jmp
dec
cmc
leave
xchg
dec
mov
mov
enter
push
iret
jg
or
icebp
mov
dec
cmp
sbb
jns
test
cmp
ffree
push
pop
je
cmp
imul
xchg
int
lock
mov
push
dec
add
mov
inc
mov
mov
shr
lret
pop
fsubrs
sub
out
js
hlt
inc
jp
sysenter
push
push
imull
pop
test
imulb
adc
test
sbb
mov
jbe
stos
pushf
movntps
scas
stos
sub
sub
test
les
push
fs
adc
adc
xchg
js
in
mov
cs
lcall
push
dec
add
and
push
out
lret
data16
aaa
lahf
cltd
add
mov
pop
test
clc
fs
out
xor
sar
out
sub
imul
sbb
xchg
xchg
lret
mov
test
pop
or
mov
clc
lods
jnp
adc
aad
lods
pop
cmpsb
or
and
jae
in
sub
inc
nop
test
data16
pop
imul
inc
outsl
mov
push
cli
push
dec
xor
add
jo
mov
or
add
jne
sti
imul
mov
adc
push
outsb
aad
jmp
imulb
imul
leave
outsb
sub
push
rcl
push
aas
jo
xchg
and
in
out
pop
iret
aas
ljmp
mov
inc
dec
jl
inc
cs
dec
dec
or
scas
or
out
or
fistpl
cmpsl
loope
pop
movsb
icebp
xchg
in
nop
mov
adc
adc
repz
lock
pop
push
les
insb
inc
sar
jmp
pmuludq
cmp
outsb
call
rcrl
push
sub
dec
pop
test
fs
imul
pop
into
cmpsb
cli
jbe
scas
jmp
outsb
dec
shll
insb
iret
jle
xchg
fnsave
sar
lds
cmp
or
jecxz
stos
mov
xchg
sbb
data16
mov
nop
leave
shr
fnstcw
pop
call
mov
outsb
mov
jo
out
std
dec
cmp
movsl
popa
xchg
popf
pop
addr16
or
xchg
xchg
or
pushf
es
cwtl
mov
xor
in
stos
imul
pop
mov
test
mov
or
repnz
mov
cmpsb
sub
bound
bound
pusha
pushf
or
decb
mov
mov
ss
insl
cs
mov
xor
daa
int
dec
adc
push
stos
cld
leave
xchg
or
mov
cmp
push
inc
xchg
and
fmul
daa
mov
mov
push
pop
loop
push
lock
mov
lahf
xchg
cmc
test
add
sub
cwtl
adc
test
sar
xchg
sub
xchg
jecxz
push
add
aad
mov
mov
sub
sbb
adc
dec
add
fnstsw
sbb
fsts
mov
mov
je
imul
jge
pop
popf
outsl
xchg
addr16
inc
xlat
and
sub
dec
and
dec
cmpsl
jmp
lret
cwtd
pop
mov
jp
dec
sbb
fimull
dec
add
lds
cmp
jnp
jne
popa
aad
jle
pop
flds
sbb
mov
dec
xor
jns
ja
cmc
mov
outsl
addr16
pop
xchg
push
sub
stos
cmp
lret
cmp
std
sbb
or
dec
dec
sub
fildll
fwait
insl
es
testb
jp
add
std
pop
cmpsb
cmp
faddl
mov
stos
outsl
cld
lds
xchg
jge
lret
fidivs
mov
sub
clc
jne
mov
xchg
icebp
aaa
in
testl
mov
fwait
xchg
jp
pop
sub
roll
decl
pop
adc
or
lock
out
into
sub
arpl
inc
or
test
push
sub
jecxz
add
out
std
nop
pop
addr16
push
mov
int3
xchg
sbb
pop
sarb
xchg
cld
mov
xchg
cmpl
mov
ss
pop
outsl
xchg
mov
inc
insb
add
dec
addr16
adc
mov
div
jbe
call
jecxz
icebp
stc
xlat
jmp
dec
test
push
scas
xor
js
lret
sub
push
mov
cmp
mov
negl
arpl
mov
add
add
cmp
test
insb
pop
xchg
fwait
mov
popa
cmp
wrmsr
sbb
cwtl
pop
or
mov
lret
loope
shrb
iret
fdivs
pop
xor
cmp
sub
dec
mov
testb
stos
sbb
int
xor
mov
xlat
lcall
sbb
cmpsl
jae
test
push
and
sub
mov
pop
pop
and
xor
xchg
adc
pause
xchg
repz
lds
fdivrs
into
xor
pop
popa
mov
jns
arpl
xlat
jl
lea
sub
adc
push
hlt
adcb
adc
cmp
xor
cmp
mov
pop
xchg
pop
cs
out
les
int3
sub
xor
fmull
or
scas
pop
inc
aad
adc
in
daa
sbb
fiadds
add
add
and
andl
pop
mov
xchg
js
movsl
adc
aad
xchg
jno
adc
adc
mov
rorl
sbb
int3
arpl
js
mov
mov
sbb
xor
scas
dec
push
mov
ret
mov
jb
mov
jbe
add
cmpsb
daa
mov
mov
cmp
cmp
cwtl
mov
enter
sbb
sarl
cmp
push
mov
and
mov
cmpb
iret
add
pushf
movsb
test
push
xor
jge
adc
jl
cmp
cmc
inc
imul
sbb
sub
test
ja
scas
stos
xchg
mov
clc
test
fisubrl
movmskps
jne
add
jns
adc
dec
push
or
lret
test
mov
mov
jb
push
fistps
repz
mov
out
push
aaa
sub
mov
jo
or
cmp
int
dec
lock
mov
mov
jle
pop
rcrl
cmp
out
lret
push
cmpsl
sub
jae
in
sub
cli
fwait
xor
int
and
mov
mov
mov
inc
cmc
mov
push
subb
in
mov
cwtl
dec
xor
xor
aam
popl
push
hlt
xorb
mov
repz
fsub
movsl
mov
mov
xor
dec
xor
add
pop
sbb
fistpll
add
adc
cmc
push
aam
lcall
xchg
cs
pop
insl
adc
xchg
mov
shrb
movsb
push
or
test
negb
pop
loope
push
sti
les
sub
xor
or
push
hlt
bound
pop
lds
mov
inc
jmp
pusha
lcall
xlat
movsl
out
mov
mov
pop
fldl
adc
adc
jle
push
sahf
insb
jl
lcall
mov
addr16
push
ja
xor
jp
cmp
mov
mov
lods
cmpsl
int3
pushf
andb
neg
std
addr16
loope
cmc
pop
push
enter
cmp
inc
cmp
mov
cmpsb
icebp
add
imul
cltd
stos
cwtl
shrb
sub
das
mov
orl
cmpb
and
xchg
dec
ss
cmp
cli
or
shll
push
adc
cmc
jmp
pop
stos
inc
sbb
loopne
push
jb
fs
ret
xorb
xor
xchg
pushf
sub
aad
pop
out
add
cmpsl
jae
mov
aad
ret
and
sub
stos
cmpsb
sbb
jmp
andl
cltd
lret
dec
ss
adcl
push
add
mov
imul
pop
out
xor
and
mov
aad
ret
cmp
pop
fwait
push
dec
mov
pop
lods
dec
cmp
sub
popa
cmp
subl
bnd
cmp
lret
out
mov
jge
mov
jbe
push
push
test
insl
pop
repz
and
xchg
and
ret
mov
jo
push
arpl
sub
push
add
dec
or
hlt
add
loop
inc
addr16
cmpb
ror
jge
dec
in
fisubs
inc
mov
outsb
mov
lock
insb
and
mov
dec
mov
enter
loopne
test
jg
sbb
sub
or
add
mov
sti
mov
pop
cmp
add
add
scas
outsl
mov
enter
cwtl
fnstenv
push
loope
daa
lods
popf
sarl
mov
nop
les
jl
shr
xor
push
add
xorl
pop
je
push
imul
ds
cltd
adc
lods
push
mov
outsl
fcmove
mull
xchg
jae
fisttpl
pop
xchg
push
jmp
leave
fcmovnu
xor
mov
dec
jp
jmp
pop
jnp
rol
or
les
fbld
mov
push
or
inc
popa
pop
lods
xchg
and
aaa
pop
cld
mov
sbb
mov
int
mov
xchg
add
pusha
jecxz
popf
jg
fisubl
stos
xchg
lods
ss
mov
xor
test
leave
std
adc
out
ds
xchg
fcompl
das
sbb
int3
add
cmp
je
jb
adc
pusha
add
jmp
sub
out
icebp
test
mov
movsl
jge
dec
aaa
test
cmp
mov
aad
mov
negb
mov
js
cmp
and
add
icebp
pop
nopl
in
scas
xchg
xor
out
dec
nop
mov
inc
sbb
shl
ja
outsl
add
xor
std
mov
ret
aad
sub
fs
dec
es
dec
mov
call
std
ds
push
out
gs
push
cs
scas
inc
or
loope
cmp
jo
fdivrs
xorb
iret
push
ss
lods
push
jae
rclb
je
sbb
mov
out
inc
xchg
cmp
sub
sub
add
loope
scas
flds
add
push
mov
lock
mov
fwait
dec
hlt
pushf
xlat
mov
push
push
orb
lea
dec
lcall
jge
mov
or
aad
mov
js
addr16
push
and
mov
fstl
test
push
in
cmp
cmpsb
mull
mov
out
aas
sar
sahf
xor
jae
fwait
jb
lret
and
xchg
divps
int3
gs
sbb
inc
xchg
xchg
movsl
stos
push
push
xchg
insl
mov
sahf
dec
inc
adc
inc
sahf
xor
push
bswap
in
pop
mov
mov
xor
pop
pop
jns
jg
ret
es
jnp
mov
rcll
out
pushf
push
jle
aas
lea
mov
adc
jo
cmc
outsb
or
mov
jge
mov
icebp
fs
imul
dec
mov
sbb
mov
sub
jmp
ljmp
shl
test
fstpt
xchg
jno
jns
or
cmp
mov
xchg
loope
jo
jb
inc
mov
aas
or
daa
cmpsb
adc
insb
sub
mov
rorb
cmove
jmp
in
dec
js
bound
cmp
nop
sub
ret
mov
add
sbb
or
sbb
cs
cld
pusha
xor
nop
dec
mov
add
outsl
das
or
jae
mov
lods
outsl
sub
stos
sbb
xchg
inc
mov
mov
jl
mov
sbb
lds
sbb
sub
imul
inc
repnz
jecxz
sub
mov
pop
push
cmpsl
loope
cmp
jl
test
sbb
orl
mov
and
imul
cmp
stos
cmpsl
out
int3
cmp
sub
mov
lock
arpl
test
outsl
imul
cmp
or
loope
add
lret
mov
mov
pusha
jno
mov
and
je
push
push
sbb
idivl
push
pushf
xor
in
adc
jb
pop
stos
sub
das
mov
testb
lock
pop
xor
xchg
fidivrs
repz
push
jl
and
lret
cld
sbb
fmulp
adc
scas
inc
add
push
fadds
mov
jnp
dec
xchg
xchg
in
push
testl
mov
cltd
sub
sahf
lock
out
mov
jno
xor
inc
data16
push
or
pushf
cmp
jne
add
jno
and
outsl
add
dec
call
inc
cmp
push
in
ljmp
or
adc
cmp
or
pop
iret
push
bound
jno
jno
in
mov
adc
or
push
xchg
movb
xor
and
outsl
out
aad
jl
mov
and
or
push
stc
adc
and
mov
mov
push
sbb
inc
aaa
mov
mov
pop
mov
sbb
mov
jae
push
ret
add
sbb
icebp
outsb
adc
cmp
xor
mov
cmp
inc
xchg
ficompl
jp
mov
inc
fadds
dec
jp
je
outsb
repnz
lods
mov
subl
jl
lds
mov
mov
leave
push
stc
xorl
xchg
inc
leave
and
hlt
jp
and
xchg
pop
orl
ss
fwait
adc
call
pusha
addr16
xchg
xorb
shlb
pop
cmp
adc
ret
dec
sbb
push
mov
mov
pop
mov
cmp
mov
mov
mov
aas
out
push
jae
fsubr
pop
jmp
push
repnz
popa
dec
mov
sbb
add
or
in
or
adc
fsubl
xchg
test
int3
stos
mov
sahf
in
sub
xabort
jl
repz
adcl
inc
loop
mov
push
xchg
xchg
inc
call
je
mov
xor
test
push
cmp
mov
popa
ja
out
sbb
mov
sbb
mov
shl
sbb
adc
repnz
repnz
sub
mov
std
mov
pop
mov
and
enter
lcall
cmp
add
adc
out
and
aam
mov
push
add
ret
cmc
fbstp
jl
mov
in
lea
js
pusha
jp
ret
add
dec
test
add
rcrb
inc
cvtps2pi
dec
add
dec
jae
sub
or
xchg
hlt
dec
imul
into
stos
lcall
xor
or
mov
add
sub
movsb
mov
inc
fwait
pop
scas
test
fnsave
loop
lahf
push
sub
inc
test
fistpll
jg
fcos
and
or
lods
test
icebp
aas
or
out
xor
pop
jge
pop
cli
pop
addr16
popf
cmp
scas
adc
jae
push
mov
test
dec
outsb
enter
lea
add
pusha
fists
in
adcl
lret
add
lea
jne
xchg
fwait
mov
or
sub
add
lods
push
lcall
test
mov
xchg
mov
je
xchg
call
sub
shrb
jne
adc
and
xor
cmp
lret
daa
in
dec
inc
ja
xchg
pop
pop
cmpsb
sub
or
and
cmpb
dec
nop
push
add
lea
test
dec
cmp
cmp
and
mov
dec
pop
ds
mov
shll
xchg
pop
out
jbe
sti
xchg
sarl
es
sbb
and
js
dec
push
testl
in
lret
out
cli
and
mov
xlat
jae
cmp
int
pop
xchg
insl
mov
pop
or
adc
xchg
xchg
pushf
into
shl
mov
push
cmpsb
gs
push
adc
or
sub
mov
xchg
jmp
lods
stos
jae
and
test
in
add
fsubl
push
sbb
stos
fs
xor
mov
mov
add
mov
mov
fcoms
aas
or
xchg
lret
leave
in
fidivs
mov
or
adc
imul
loope
rclb
add
jge
jne
outsb
aam
cltd
ja
lahf
bound
ss
inc
scas
aam
jle
jl
sub
out
outsb
pop
cmc
call
xor
and
sbb
add
mov
negl
push
mov
fidivrs
out
mov
insl
lcall
cmp
mov
push
fisubl
cmp
add
insl
adc
cmpsb
mov
cltd
xor
roll
xchg
insb
out
mov
mov
pop
or
dec
adc
cmp
xor
icebp
mov
pop
addr16
mov
fldcw
or
xchg
mov
mov
aas
lret
and
fstenv
and
out
popa
inc
xchg
inc
test
addps
call
ss
and
add
out
jo
push
inc
into
sahf
shr
ss
sbb
pop
jne
mov
frstor
and
int
jnp
repnz
stos
clc
mov
xor
mov
and
mov
sub
arpl
mov
mov
mov
out
jg
jmp
shrb
imul
scas
xorl
shrb
jg
mov
inc
mov
popf
xor
sub
push
mov
dec
xchg
dec
pushf
xchg
xchg
js
ljmp
adc
daa
call
data16
mov
mov
repz
mov
adc
fildll
cmp
int3
incl
cmp
ret
cmp
pop
jb
leave
push
add
mov
pop
jg
pop
ljmp
or
mov
in
push
loopne
shll
testb
sbbl
xlat
clc
cmp
adc
cmp
lods
clc
leave
add
pop
pop
cld
xchg
aam
mov
xchg
mov
xor
clc
mov
subb
fs
mov
fmul
cmpsb
sti
and
rcr
notl
pop
push
or
and
mov
push
sbb
inc
daa
cmpb
fsubrl
mov
adcb
js
cld
loop
fistpll
push
sbb
lcall
fcmovnb
hlt
push
jl
jmp
insb
lret
push
adc
aas
inc
adc
xchg
cld
mov
sbb
leave
pushf
push
or
jecxz
and
daa
or
lcall
das
cmp
fadd
push
dec
xor
pop
jle
lret
leave
cmp
jle
sub
loope
cmp
jl
adc
jp
jge
adc
xchg
mov
iret
fidivrl
jnp
mov
mov
dec
outsb
ss
pop
push
stos
sbb
sbb
xchg
shlb
scas
dec
ja
push
dec
sub
flds
mov
xor
push
mov
sahf
test
pushf
repz
in
jl
int
scas
xchg
fiaddl
push
gs
movsb
movsl
cmp
push
jns
jno
or
mov
or
dec
inc
cmp
lods
mov
mov
insl
insl
out
in
std
pop
insl
sub
ret
pop
ja
adc
punpckhdq
xchg
xchg
mov
xor
cli
pop
mov
add
or
jno
call
cmp
sbb
jb
and
jmp
idivb
out
lret
test
push
das
stc
in
insb
or
jecxz
mov
in
scas
adc
dec
push
xchg
xor
pop
push
xor
mov
ljmp
ret
int3
xorb
sbb
lea
in
ret
cmpsl
jns
aam
popa
pop
pop
adc
ljmp
add
mov
mov
mov
xchg
fistpll
push
push
mov
cmp
out
cwtl
or
mov
imul
push
jle
mov
xor
jmp
sarl
test
jge
loop
je
cmp
inc
lahf
jbe
roll
js
ja
xchg
je
sub
ret
and
lcall
push
gs
xchg
sub
cmp
and
mov
mov
fs
sbb
cwtl
hlt
frstor
lods
ret
pop
cmc
cmp
enter
cmp
scas
mov
ljmp
cmp
xchg
xchg
inc
lds
add
in
lret
pop
sti
out
ret
adc
mov
addl
xchg
add
cld
gs
xor
lods
and
push
push
jle
push
nop
js
inc
jnp
cwtl
stos
movsl
scas
nop
adc
out
xor
bts
mov
gs
fistpll
mov
pop
stos
fwait
sub
push
fimuls
hlt
mov
jp
add
rol
sbb
out
pop
and
out
mov
test
cwtl
or
sahf
rolb
loop
pusha
in
movsl
inc
fcmovne
sbb
dec
add
fildl
daa
inc
or
pop
test
mov
mov
ret
pop
mov
out
adc
xchg
sahf
divl
and
or
out
mov
push
mov
rcl
rcrb
test
pop
imul
imul
sbb
mov
cmpsb
add
sub
or
notb
sub
idivb
pop
das
sbb
in
or
fildll
aam
xor
mov
rcll
pushf
jno
jl
dec
iret
adc
xor
mov
das
insl
fsubl
jecxz
pop
add
aam
test
in
sub
fsts
mov
pushf
imul
fadds
or
fsubl
push
inc
daa
or
jg
imul
mov
mov
mov
ret
mov
lret
sti
out
in
int
mov
rcrl
movsb
push
inc
outsb
push
or
sub
repz
lods
cld
xor
mov
mov
pop
loop
pop
out
push
mov
adc
mov
cmp
dec
les
or
stc
outsb
sarb
push
and
push
sbb
je
sbbb
cs
add
mov
notb
pop
xchg
add
cmp
mov
imul
sub
pop
das
pusha
xor
mov
rcl
ljmp
push
or
jle
xor
bound
inc
fcoms
cmp
mov
in
or
jo
xor
out
pop
push
pop
ret
je
xchg
les
and
sbb
sub
lret
sbb
sbb
sahf
insb
mov
cmp
mov
lahf
jmp
stos
push
mov
xor
push
ss
mov
add
ficomps
push
gs
and
cmpsl
jbe
jno
test
mov
push
jbe
push
cld
push
inc
loope
xor
xor
cmp
or
xor
cwtl
movsb
aad
rolb
mov
icebp
jmp
aam
xor
into
inc
xchg
xor
les
shll
das
mov
mov
add
sbb
mov
mov
outsb
frstor
pushf
mov
popf
adc
js
lock
lahf
addr16
es
xchg
data16
push
or
fsts
adc
xor
jle
xchg
push
jnp
cvtps2pi
aad
ljmp
cmovl
xlat
imulb
imul
cs
cs
mov
xchg
add
pop
inc
in
sub
scas
or
pop
add
fadd
cmp
out
push
lret
pop
sahf
lea
fidivrl
push
lret
ljmp
add
adc
es
pusha
jnp
ss
and
in
mov
cltd
sub
adc
js
sub
add
push
dec
test
adc
jp
es
jnp
loope
mov
mov
cmp
inc
add
lea
cmpsb
lret
pop
add
cli
xor
imul
dec
sub
std
mov
cltd
cld
sbb
and
or
sahf
push
xor
jmp
pop
mov
and
lret
push
out
sbb
jno
cltd
jae
add
cmc
insb
aas
jle
imul
adc
jp
add
push
idiv
and
movsl
lcall
fadd
rcrb
and
fisubrl
jge
adc
shlb
out
mov
pop
xor
mov
and
loopne
adc
pop
test
or
push
rcll
clc
jne
aas
sub
or
push
ljmp
pop
xchg
xchg
add
stos
in
mov
in
cltd
mov
add
stos
divb
ret
pop
fidivrs
xorl
insb
xlat
dec
ss
insb
je
popf
daa
test
dec
jnp
cmpsb
test
sub
inc
mov
mov
or
cmp
dec
add
jb
lret
clc
ror
pop
adc
sub
repnz
xor
add
bound
mov
lcall
lret
add
cmp
aam
pop
into
fisubrl
test
xor
rorb
dec
mov
adc
js
imulb
xchg
jno
dec
jno
or
or
adc
push
or
stos
jg
pusha
outsl
aas
mov
lcall
cmp
testl
sbb
cmp
xor
push
imul
shld
cltd
push
cmp
mov
jl
test
cli
rorl
test
add
mov
adc
cltd
jp
dec
int
pop
mov
xchg
dec
or
das
stos
cld
sub
sbb
mov
mov
ret
lods
push
sbb
test
inc
push
in
push
mov
cmp
daa
cmpsl
inc
lret
mov
negb
roll
gs
mov
mov
xchg
fmuls
mov
addr16
cwtl
or
pop
fcmovne
push
pop
sahf
add
adc
jne
call
and
mov
je
movsl
inc
arpl
out
or
leave
jns
fnstsw
mov
mov
and
push
inc
cmpsb
fucom
jnp
jle
mov
jno
pop
push
sub
or
rcrl
lods
xchg
dec
dec
movsb
add
cmp
lods
idivl
scas
sub
test
mov
imul
in
jecxz
mov
sarl
xor
ror
lahf
mov
mov
jecxz
pop
shrb
data16
mov
xchg
push
test
repnz
out
and
gs
iret
and
iret
outsl
cmpsl
mov
iret
fsubrs
jge
dec
mov
in
mov
adc
fsts
js
ficoms
add
jb
pop
int
or
jb
xchg
jecxz
add
dec
xchg
mov
les
cmc
testb
sti
cmp
test
dec
or
ljmp
inc
xor
into
pop
inc
xchg
add
leave
sub
lock
subb
lods
xor
pusha
cli
or
nop
add
lcall
jnp
inc
nop
pop
outsl
scas
cmpsl
sbb
mov
pop
pop
xchg
neg
cmpsl
bound
mov
adc
rcll
sub
ss
leave
nop
pop
push
les
inc
xlat
lret
mov
mov
repnz
rolb
jmp
rol
mov
add
sub
insl
push
das
mov
xor
cmpsl
pop
imulb
out
fadds
popf
jmp
lcall
imul
rcrl
data16
or
enter
xchg
xchg
mov
ds
mov
xchg
das
shrl
adc
cmp
repz
push
sbb
jge
mov
cmpsl
popf
push
faddl
inc
mov
sub
xor
fwait
cltd
and
ja
and
lock
xor
stos
add
or
xor
into
cmp
cmpsb
push
lcall
lds
xor
adcl
fistpll
loopne
rolb
push
pop
add
xchg
mov
xor
xchg
adc
mov
adc
repnz
adc
mov
or
jge
push
out
dec
lahf
out
fwait
sub
inc
dec
sbb
imul
sub
sti
or
jae
xchg
mov
sbb
pop
clc
cmp
add
or
sub
iret
xchg
arpl
bound
mov
pop
pusha
es
jbe
pop
mov
mov
mov
pop
cld
jle
cld
lahf
pop
add
cmpsb
push
inc
pop
arpl
adc
fisubl
or
push
je
adc
dec
in
xchg
inc
mov
bound
cmp
in
icebp
lods
sub
dec
dec
fbstp
pushf
jle
and
aas
xor
dec
nop
mov
xchg
cmpsl
pop
adc
mov
sub
ja
cld
out
imul
pop
ja
sub
and
js
sbb
test
jae
xchg
xchg
pusha
lahf
sub
jno
jl
lret
sbb
xor
sub
jo
mov
jne
sub
int3
push
sub
inc
data16
cmpsl
sub
mov
outsl
mov
out
test
dec
mov
adc
stc
data16
repnz
cmc
comiss
add
jo
pop
pop
add
lods
mov
hlt
jg
mov
stos
ficompl
jo
add
aam
stos
insb
shrb
lahf
in
sahf
xchg
sub
pop
fldcw
adc
cmp
xchg
in
xlat
sub
mov
test
mov
sbb
mov
push
xchg
mov
shll
ret
cmc
pop
xor
xor
daa
popf
stos
mov
adc
cmp
aaa
push
iret
inc
inc
loopne
xlat
xor
cltd
push
dec
subb
mov
in
push
not
mov
lcall
outsb
mov
mov
ljmp
jb
cmc
pop
add
insl
mov
push
inc
mov
jnp
mov
out
stc
lret
cmp
fdivrs
mov
xchg
or
push
popa
lret
stos
mov
lock
incl
or
pop
add
pop
push
in
in
cmpsl
pop
sbbl
in
pop
xor
add
arpl
cmp
bound
mov
cmp
mov
mov
xlat
scas
stos
fucom
testl
xchg
int3
pusha
pusha
fwait
sub
movsb
test
js
mov
lret
out
movsl
clc
ljmp
in
je
xchg
mov
cld
push
scas
in
dec
repz
jle
pop
dec
out
add
or
sbb
sbb
or
push
mov
xchg
daa
cmp
push
stos
dec
cli
and
xchg
or
fcoms
in
jne
mov
ljmp
hlt
lret
test
jb
lcall
sti
xlat
sbb
xchg
inc
xor
sbb
int3
ret
push
bound
mov
mov
adc
incb
mov
ja
clc
stc
mov
lods
push
push
pop
imul
sub
xchg
out
mov
lds
push
xor
or
decl
sbb
mov
sbb
jnp
rcr
cmp
decb
out
mov
mov
pop
mov
xchg
fnsave
or
adcb
aas
xor
cmp
push
int
jno
mov
add
scas
mov
sbb
test
dec
mov
insb
cmp
mov
jnp
push
icebp
int
test
sbb
hlt
jo
and
mov
mov
lds
scas
scas
daa
mov
mov
dec
pushf
popa
sub
pop
cmp
in
cmp
inc
shr
sbb
lods
fdivrl
cmp
fdivr
mov
add
aam
mov
sahf
adc
pop
sub
loop
xchg
gs
fsubrs
repz
or
adc
xor
rep
or
jmp
adc
fwait
sbbl
and
fisttps
pop
jbe
push
ja
adc
xchg
cli
xlat
inc
aad
sub
xchg
dec
pop
dec
mov
ss
mov
inc
movsl
inc
mov
jno
cmpsb
sbb
fs
sub
cli
ljmp
and
sub
pop
add
xor
cmp
bound
xor
dec
clc
xchg
lret
cmp
movsb
leave
sub
add
jecxz
sahf
cli
icebp
mov
es
sbbb
inc
ss
dec
enter
add
xlat
cli
sahf
sub
dec
popf
addr16
sub
aaa
mov
mov
mov
xchg
adc
insb
dec
repz
cld
loopne
repnz
sub
not
or
add
lahf
imul
xchg
iret
sbb
dec
icebp
mov
frstor
nop
ffree
lds
cmp
xor
pop
clc
push
in
inc
insl
int3
jno
addr16
popl
sub
lods
cld
inc
shrb
dec
sub
loop
or
mov
addl
sbb
lret
mov
std
sbb
call
dec
in
cmp
std
xor
ret
inc
pop
pop
and
mov
lret
and
sub
in
shl
dec
inc
mov
int
cmc
out
imulb
lods
xchg
pop
xor
in
movsb
mov
jmp
xchg
xchg
inc
pop
add
into
mov
out
fldl
xor
mov
add
ret
xchg
or
xor
ljmp
cs
sbb
dec
aas
sti
mov
in
cltd
and
mov
inc
and
adc
test
imul
je
rolb
aas
jb
push
sub
mov
xchg
jnp
int3
jge
jo
mov
es
movsb
mov
fisubrs
cmp
movsb
je
jg
or
pop
dec
je
nop
nop
fs
loope
inc
xor
dec
icebp
mov
inc
push
lods
and
mov
fs
inc
shr
jmp
mov
dec
in
jb
lock
sbb
cltd
and
xchg
push
xorb
leave
jecxz
movsb
stc
jg
insl
repz
rcrl
sbb
aam
mov
sub
dec
out
popf
or
gs
loope
stc
mov
cmc
mov
push
cwtl
xchg
insb
xorl
je
ds
aaa
cli
push
movsb
cwtl
scas
dec
lret
fwait
adc
outsb
cmpb
ja
fistl
sub
push
ficoml
pop
add
sbb
mov
psllq
icebp
or
les
lcall
mov
rcrb
scas
push
lcall
scas
popa
test
dec
test
dec
scas
std
js
negb
mov
cmc
fsts
adc
dec
ret
sbb
push
sahf
adc
jae
lods
ret
incl
push
cli
mov
mov
dec
jecxz
sarl
icebp
sub
sub
popf
leave
add
xlat
sbb
sbb
push
jg
mov
hlt
jmp
mov
jl
call
repnz
xchg
mov
cmp
fadds
sbb
cmp
frstor
and
ljmp
lea
jge
and
add
xchg
imul
add
jp
scas
and
daa
and
dec
ljmp
test
cmp
mov
ret
mov
push
pop
mov
jae
jmp
push
and
andl
jns
mov
mov
int3
sbb
je
xchg
jne
add
jb
xchg
mov
cmc
daa
dec
lods
sti
sbb
fnstsw
xchg
push
daa
test
addr16
jp
loop
jo
mov
loope
mov
mov
lahf
adc
lea
push
daa
adc
fmuls
jae
mov
out
jmp
or
popf
xlat
and
xchg
dec
sahf
jg
xchg
mov
mov
xchg
push
or
cli
dec
not
cltd
int
dec
and
xor
lret
sbb
pop
aad
dec
scas
xchg
mov
imul
or
stos
jl
mov
call
xchg
icebp
test
lock
lret
das
fsubs
mov
or
push
pop
enter
out
gs
pop
add
push
std
into
lahf
xor
nop
cmp
push
fstl
popf
notl
mov
and
cmpsb
mov
fistps
jbe
xchg
cmc
and
jmp
aaa
aas
sub
xchg
andl
out
mov
push
lea
xlat
mov
daa
cmp
cmpsb
fbld
sahf
mov
loop
push
das
nop
test
push
xchg
mov
popa
sarb
mov
cmp
incl
mov
fdivs
pop
ds
fnstsw
jb
pop
mov
push
pop
mov
dec
int3
insb
scas
call
movsb
inc
lods
lea
popa
lea
pop
jl
movzbl
mov
mov
test
push
push
mov
inc
xchg
imul
inc
nop
jle
inc
mov
into
pop
ret
push
flds
movsl
js
xor
jo
daa
push
mov
in
int
lcall
lea
std
ja
push
dec
xor
cld
xchg
fucom
sbb
mov
jnp
and
repz
mov
sbb
mov
sub
dec
cld
out
xor
inc
push
xchg
sub
adc
adc
je
ss
sbb
ss
inc
data16
arpl
sub
cltd
sub
test
xchg
push
cld
and
pop
inc
in
adc
pop
outsl
and
inc
std
push
pusha
cs
loopne
inc
cmp
adc
adc
push
ret
sub
and
add
nop
cmp
in
dec
xor
sbb
je
pop
stos
fiadds
cmp
cmp
je
dec
out
cmc
in
add
pusha
daa
sub
mov
xor
pop
lret
stos
pop
mov
add
pop
cmp
jle
out
pop
xor
iret
jle
mov
mov
mov
mov
cmc
pop
sub
push
lock
pushf
xchg
loopne
or
or
mov
ret
loope
add
or
pusha
subb
mov
sarb
test
roll
pop
jo
out
lods
paddb
movsl
insb
jae
dec
mov
mov
cmp
cli
cmpsl
cs
lds
inc
pop
lcall
adc
sbb
gs
std
jae
sbbb
sub
stos
addb
bound
adc
xor
cmp
xor
imul
add
cmp
jp
mov
out
lods
sub
movsl
cmpsl
push
fwait
repz
lcall
push
inc
aaa
inc
mov
mov
in
cmp
lcall
int3
imul
fwait
pop
xor
or
imul
mov
into
out
xchg
add
sbb
data16
jae
cmpl
in
lods
out
sub
hlt
leave
cs
sti
push
and
ds
xchg
and
testb
mov
out
jns
rclb
xlat
in
pop
js
mov
jne
add
inc
les
sbb
cmp
imul
xor
movsb
mov
mov
sbb
dec
daa
pop
push
pop
or
popf
inc
pop
movsl
jg
add
add
pop
sub
jno
push
jbe
daa
dec
lods
inc
movsl
adc
iret
pop
xchg
stc
jbe
mov
sbbl
loope
movsb
shll
inc
cwtl
or
cmp
lret
dec
mov
and
cmp
mov
and
enter
loopne
sbb
iret
mov
jne
adc
fsts
jmp
mov
fcmovnu
insb
sahf
jnp
arpl
in
add
inc
mov
mov
lea
jne
addl
insb
dec
jg
sbb
sub
data16
cld
fists
mov
das
leave
stos
lcall
sbb
inc
data16
out
out
inc
pop
xchg
sbb
aas
xchg
shl
loopne
and
add
nop
or
mov
jge
sub
fdiv
and
mov
imul
jb
sbb
cs
dec
mov
out
popf
inc
jo
out
push
lcall
inc
xchg
mov
lret
or
xchg
out
and
sub
dec
fimull
mov
pop
or
lock
js
test
xchg
in
or
pop
jbe
mov
xorb
inc
out
mov
mov
imul
cmp
sub
arpl
xchg
push
clc
test
imul
lock
inc
dec
ljmp
cs
push
inc
dec
cltd
mulb
addr16
cltd
aam
adc
ret
xorps
in
push
aam
dec
bound
jns
cmpsl
inc
lret
lret
cmpsb
push
insb
sarb
mov
jne
loopne
scas
pop
add
xchg
cmp
pop
scas
aaa
push
sbb
mov
xchg
lcall
add
jp
pop
add
cmpsb
push
or
jmp
or
or
push
cli
push
xlat
les
test
cmp
in
cmp
sbb
mov
std
inc
mov
mov
mov
in
dec
insl
mov
cmc
push
imul
sub
jnp
test
ja
jae
add
ss
aaa
jp
inc
cli
jmp
out
jmp
dec
mov
xor
jo
xor
lret
sbb
mov
movsb
jne
ja
ret
arpl
cmc
jne
movsl
stc
jge
lahf
pop
dec
fnstcw
imul
xchg
mov
dec
and
adc
xchg
pop
lret
cmp
xchg
bound
insl
ror
mov
mov
sub
sub
mov
fiaddl
xchg
gs
xor
mov
rcrb
dec
pop
dec
aam
std
rcrb
lea
addr16
subl
pop
ret
out
or
popa
ss
dec
icebp
lea
cmpsb
aaa
mov
adc
dec
sbb
push
test
repz
sbb
lea
rcll
cld
xchg
ja
shl
sbbl
xchg
stc
ret
fistps
pop
imul
mov
in
mov
mov
cld
cmp
xchg
mov
cli
add
mov
xor
mov
cmp
or
inc
or
idiv
mov
add
ss
sbb
push
enter
clc
rorl
clc
push
mov
sbb
push
arpl
inc
mov
adc
cmp
dec
gs
ret
mov
mov
insl
cs
iret
or
or
std
pop
and
add
add
mov
push
rol
sub
push
add
mov
fldl
pop
sahf
and
dec
cmp
popf
je
cwtl
sbb
es
lcall
popf
ret
ret
std
pop
add
pop
rorb
push
iret
daa
jbe
es
adc
mov
xchg
js
leave
jmp
xorb
and
add
ret
out
push
cmp
call
out
inc
ss
sub
test
sub
inc
rcr
jb
shl
push
test
lea
ljmp
mull
orb
ret
push
fmuls
push
xchg
mov
mov
adc
push
movsl
mov
ss
xchg
sub
lods
inc
pop
aad
jmp
stos
inc
into
jl
mov
test
sub
in
stos
jae
add
and
std
jg
mov
cmp
add
lock
and
test
pushf
aad
mov
push
shl
lods
outsb
lret
push
ret
xlat
ja
gs
mov
dec
scas
lods
cmp
xor
je
call
popf
mov
or
aam
lods
mov
xchg
lds
scas
iret
lcall
dec
vmovaps
add
dec
cmp
dec
es
out
dec
mov
aaa
jp
xorb
cld
call
roll
insb
mov
mov
icebp
outsl
aas
and
fmull
pushf
jp
mov
ja
or
sahf
inc
aaa
jp
loope
clc
fdivrs
cmpsb
xchg
pop
es
dec
mov
cmpsl
lods
mov
push
fldl2t
cwtl
movb
inc
sub
dec
xchg
dec
sub
iret
stos
fwait
cmp
in
mov
bound
push
jge
nop
mov
pop
or
jb
xorb
cmp
adc
push
imul
aam
lods
xchg
jp
ret
jns
int3
or
mov
push
push
das
test
cmc
sub
jb
les
gs
jbe
sub
es
loop
test
clc
adc
test
xor
addr16
cmp
adc
in
push
cs
sub
fidivrs
push
add
imul
cwtl
fisttpl
int3
and
jmp
jecxz
push
xchg
sub
xchg
xor
js
popf
imul
adc
cwtl
push
arpl
push
aad
lock
pop
cmp
fistpll
jge
stos
xchg
xchg
dec
mov
test
xchg
in
cmp
mov
inc
outsb
mov
movsb
pushf
add
dec
cs
adcl
mull
cli
mov
add
popa
adc
push
mov
mov
push
cmp
dec
add
fimull
rorl
scas
jne
dec
loope
les
xor
and
or
sbb
fcoms
pop
andl
js
mov
call
outsl
mov
cmpsb
push
imul
or
std
out
jnp
pop
lea
xchg
jmp
dec
mov
loope
xchg
fimuls
hlt
popf
into
jnp
pusha
outsb
jg
and
and
mov
push
pop
jl
pusha
inc
jle
or
xchg
lcall
cmc
subb
pop
bound
jg
fs
into
sbb
sbb
jno
jo
and
mov
push
mov
xor
xchg
dec
into
popf
fs
adc
sub
mov
adc
add
xchg
lds
or
mov
inc
jb
or
push
add
lcall
xchg
testl
adc
daa
jge
xlat
jno
xor
insl
rcrl
lret
pop
mov
js
add
gs
or
rcl
xor
sbb
and
stos
inc
jae
inc
xor
sub
lock
mov
sbb
dec
in
xchg
mov
cmpsb
mov
inc
jne,pn
inc
or
cmpsb
subb
or
lcall
test
cltd
icebp
loope
or
loopne
add
or
inc
hlt
push
or
cmpsb
dec
pushf
pop
sbb
in
pusha
fs
mov
inc
mov
mov
cs
sbb
and
mov
cmpsb
lock
jmp
scas
icebp
dec
sarb
ret
popa
or
xchg
xor
inc
pop
sbb
pop
popf
jno
push
dec
push
enter
mov
lcall
movsb
xchg
setnp
enter
outsl
push
negb
xor
addl
jmp
mov
xchg
push
out
push
cmp
test
test
sbb
andb
push
lock
cmp
fsubrp
ret
inc
test
cwtl
mov
cmpsb
xchg
pop
notb
hlt
gs
jp
js
movq
decl
inc
cltd
aaa
xchg
scas
ret
adc
insl
cmp
mov
dec
pop
ja
mov
js
dec
mov
or
sbb
xor
out
fcmovnu
cmp
out
adc
and
lea
outsb
je
pop
or
adc
scas
lret
aaa
push
fsts
js
repnz
and
int3
pop
fwait
inc
jg
pusha
inc
mov
or
jbe
mov
sbb
daa
leave
cs
lods
stos
mov
mov
and
sbb
cs
push
mov
out
pop
aaa
add
mov
repnz
pop
arpl
sub
xorb
mov
nop
movsb
jae
mov
roll
push
jns
or
sar
lahf
push
push
xchg
mov
stos
xchg
out
addr16
pop
mov
cmp
inc
mov
mov
aad
aad
out
cld
xchg
inc
add
jl
popf
clc
nop
es
nop
rcll
pushf
mov
mov
jo
dec
push
stos
lock
lret
push
cld
adc
sub
mov
sbbl
rcr
sbb
rolb
push
jg
jo
mov
push
or
repz
mov
es
mov
xchg
roll
push
rcr
out
push
aad
fs
push
mov
mov
sbb
lahf
fwait
push
lea
inc
sti
int
jnp
jp
leave
cwtl
cs
and
or
jbe
mov
stos
mov
mov
fidivrs
cltd
cmp
ds
call
shrl
and
mov
xor
adc
sbb
idivb
jno
insl
loope
loopne
addb
add
or
xor
or
jecxz
xchg
jne
xor
mov
cmpsl
pop
popa
and
mov
mov
out
and
repz
out
sub
or
scas
pusha
mov
clc
push
fisubrs
add
jb
ljmp
enter
add
mov
xchg
ret
mov
and
fcoml
rdmsr
jne
jecxz
test
lret
jecxz
stc
popa
hlt
or
stos
xchg
jp
lahf
add
mov
sbb
and
push
into
mov
dec
rcrl
cmp
push
pop
mov
and
push
jbe
adc
inc
mov
outsb
call
out
mov
daa
ret
lcall
pushf
xchg
imul
popf
ficoms
incb
das
repnz
fadds
mov
add
mov
jo
jp
and
inc
lods
cmc
fnstcw
mov
in
dec
out
inc
lcall
and
dec
outsl
sbb
in
cmpsb
mov
cmc
inc
xchg
ljmp
ja
sub
pushf
sbb
mov
sbb
mov
das
sbb
dec
daa
insl
int3
inc
xchg
rol
inc
mov
dec
fnsave
orl
jmp
jnp
inc
loop
mov
dec
std
movsb
addr16
push
rcrb
xchg
lahf
xchg
pop
pop
jo
div
into
enter
xchg
iret
cld
or
ror
loope
lret
fbstp
or
cwtl
cs
add
xchg
dec
pop
sahf
push
jnp
lret
pop
adc
lea
movsb
xchg
stc
push
inc
call
sbb
leave
sub
fcmovne
mov
stos
out
aaa
or
mov
or
and
out
sub
movsb
data16
add
cmp
sbb
sbb
in
imul
and
adc
loopne
pop
imul
mov
mov
gs
pop
jecxz
mov
add
in
pop
lret
add
je
fiadds
cmp
xchg
xlat
push
adc
xchg
cmc
mov
test
cmp
es
mov
lods
mov
popf
push
in
and
sbb
sub
scas
mov
imul
cmp
loop
cli
daa
dec
mov
sub
inc
sub
adc
push
test
cmpsb
leave
pushf
cwtl
sub
mov
dec
movsb
cli
ret
push
xchg
sub
shrl
push
jo
adc
or
lds
test
xchg
cmp
std
or
jne
sub
mov
adc
adcb
xchg
xchg
bound
out
pop
pop
sbb
mov
push
test
lods
mov
stos
xor
insb
in
icebp
addr16
xchg
lock
adc
or
cli
mov
add
pop
fidivrl
mov
pop
adc
dec
daa
lea
push
je
xchg
sbbb
repz
dec
push
lods
ret
xor
fucomp
and
fists
add
cwtl
pusha
or
sbb
jp
test
and
xchg
add
xorb
scas
pusha
fnsave
sbb
cltd
and
mov
aad
mov
push
daa
add
jne
sbb
pop
ljmp
adc
lcall
mov
test
push
flds
mov
out
ja
pop
push
shlb
inc
movsb
push
aad
je
mov
js
mov
and
test
hlt
popa
xlat
sbb
xchg
pusha
pushf
cmp
test
jne
mov
cwtl
idivl
sub
dec
stc
dec
icebp
xor
in
ret
fstl
adc
inc
push
ja
add
sub
mov
jb
xor
pop
in
xor
mov
lods
sub
jnp
pop
push
pop
mov
mov
mov
aam
lcall
or
rol
sbb
dec
mov
pop
sbb
bound
in
push
pop
jo
mov
and
mov
xchg
sub
cmpsb
subl
insl
adc
inc
jp
mov
aam
sbb
into
add
in
mov
add
mov
mov
js
or
add
xor
test
pop
popa
fadd
dec
stos
sar
stc
push
stos
push
scas
xor
mov
fstps
pop
push
add
xor
jge
sbb
jge
idiv
jle
test
mov
lcall
adc
jb
add
cwtl
cmp
std
push
loopne
mov
test
fwait
xchg
inc
and
mov
mov
pop
pop
mov
adc
lods
xor
pop
jmp
mov
or
pusha
imul
sbb
sub
rcll
jmpw
inc
adc
mov
xchg
jns
jecxz
pop
and
cltd
and
cmp
mov
lahf
push
fdivrs
jmp
loopne
mov
or
mov
in
fldt
ljmp
add
rcrb
fdivrp
sbb
sbb
cmp
loopne
lods
shlb
mov
stos
dec
popa
roll
xor
cmpl
lock
rorb
or
stos
pop
cmpsb
jp
ljmp
dec
icebp
add
stc
adc
xchg
adc
jo
dec
cmp
pusha
std
sbb
je
subb
mov
call
daa
aam
rcrl
push
leave
mov
jbe
aaa
jb
es
xor
movsb
loopne
or
outsb
nop
push
mov
mov
cmc
mov
add
mov
push
lods
scas
xchg
xchg
mov
and
pop
push
dec
mov
cmp
or
jns
add
pop
insb
add
inc
sub
popa
inc
jge
jl
cmpsl
nop
push
cmp
fs
std
jl
sbb
lret
fsubrs
jle
adc
jp
and
mov
stos
xchg
movsb
int
call
movsl
pop
iret
pop
movsb
sbb
lods
stc
popf
xchg
ds
cmp
jmp
cmp
lods
aas
lea
or
inc
mov
xor
add
fs
sub
sbb
scas
test
adc
pop
mov
mov
aam
inc
mul
gs
jb
lahf
xchg
rcrl
gs
out
fsubr
and
mov
fsubrs
sar
test
cmc
jno
cmp
scas
fcoms
outsl
fmuls
fisubrl
in
scas
jno
or
xorl
ljmp
push
jg
cmc
pop
mov
mov
mov
sbb
shl
adc
stos
in
xchg
xchg
ret
pop
add
das
test
pop
loop
xor
or
dec
outsl
lret
addr16
sarb
xor
push
push
cli
mov
jb
lods
ret
sub
xor
push
mov
jne
bound
jg
xchg
sbbl
mov
xor
sub
cli
push
sub
int3
inc
add
daa
xor
stos
sbb
jbe
aaa
mov
dec
sbbl
and
outsb
loopne
adc
lahf
inc
adc
aaa
mov
fbld
stc
dec
mov
out
push
cmp
push
lret
sahf
lahf
push
fisubs
enter
push
negl
push
mov
ficompl
test
sbb
pop
xchg
and
dec
nop
in
insb
repnz
xchg
jecxz
mov
scas
add
fwait
dec
sbb
imul
cltd
and
jmp
sar
js
out
test
sub
daa
aad
cmpsl
mov
ret
adc
pushf
jl
cmp
movsl
stos
scas
stos
mov
aaa
pusha
pushf
in
inc
inc
pop
addr16
pop
jp
pop
imul
cmp
sbb
pop
lcall
pop
jnp
pop
jne
inc
dec
popf
sub
dec
shlb
popa
andb
out
and
mov
dec
push
pop
adc
mov
das
mov
xchg
call
mov
and
arpl
lret
mov
xchg
push
rolb
adc
daa
data16
mov
fstpl
lock
movsb
mov
jecxz
gs
movsb
popa
cmp
jecxz
out
stos
aaa
fstpt
ds
gs
cli
dec
mov
dec
mov
mov
xchg
daa
push
sub
jge
andl
in
inc
imul
xor
es
inc
and
rcrl
inc
add
add
mov
jbe
mov
inc
call
mov
sti
loop
lds
adc
repnz
jmp
jno
add
mov
xor
and
jbe
in
sbb
xchg
adc
cmp
mov
fstl
test
cmp
adc
push
sbb
addr16
movsb
cmp
test
ret
loop
add
adc
lods
jno
add
roll
inc
sbb
loope
sbb
ljmp
lcall
shll
mov
mov
add
test
sbb
shlb
insl
dec
xlat
les
mov
mov
lcall
mov
mov
fsubr
add
push
or
mov
sub
mov
test
push
mov
jae
loop
addr16
rcrb
push
jp
lahf
mov
or
adc
xchg
pop
xor
sbb
fdivrl
mov
or
and
lcall
stos
xchg
test
push
adc
mov
outsb
dec
nop
jb
stc
push
cmpb
cwtl
jb
inc
lods
sbb
in
mov
sub
cmp
mov
repz
xor
xchg
jae
adc
push
mov
inc
fwait
pop
cli
jg
lods
sbb
mov
ss
daa
mov
adc
fucomip
test
iret
xchg
sbb
cmp
add
fidivrl
xchg
mov
lods
xchg
jns
cmp
es
sbb
cmp
out
add
lea
mulb
or
or
pop
out
les
test
nop
fildl
xchg
cli
lret
and
dec
daa
sar
sbb
out
mov
xor
xorl
scas
lea
test
and
add
sbb
or
adc
xchg
mov
xchg
in
jnp
push
enter
push
jne
lret
mov
aaa
cmpsb
movsb
imull
xchg
push
fimuls
lods
pop
cmpsl
out
aad
lods
push
mov
cmpsl
sbb
lock
push
sub
out
stos
add
cmpsb
aam
sub
dec
imul
rorb
xchg
fwait
lock
mov
nop
movsb
jnp
enter
out
pop
jg
or
scas
into
das
push
fists
loopne
cmpl
jmp
movsl
sub
es
bound
jns
rol
stc
das
add
adc
testb
xor
ss
mov
xor
push
mov
jbe
ret
and
or
lods
pop
rcrl
mov
cmpsl
ds
daa
gs
cli
idivl
repz
ficompl
shlb
jns
adc
icebp
inc
sti
push
add
adcb
add
cs
movsl
sub
mov
fdivrs
int3
xchg
addl
xchg
and
pop
out
lock
fdivr
mul
fwait
test
out
push
xchg
add
addr16
sbb
imul
jno
dec
out
aas
xchg
push
xchg
push
xchg
fnstcw
hlt
or
loope
push
pop
pop
adc
sub
fcompl
ret
fnstcw
jbe
xchg
ret
jb
leave
xor
std
pop
movsb
test
pop
xor
mov
into
push
adc
adc
xchg
outsb
push
call
lods
push
mov
ret
std
or
and
cmpxchg
movsl
and
dec
scas
xchg
jl
sub
lret
aaa
out
cmovg
outsb
test
rcr
sbb
mov
mov
call
pusha
ret
imul
mov
daa
mov
shrb
into
xchg
push
scas
cmc
and
js
mov
sub
sahf
mov
push
out
or
roll
pop
add
fcmovne
or
fwait
repz
or
push
sub
cli
pop
stos
imul
hlt
mov
cld
stos
out
push
js
add
cmp
jl
mov
adc
push
test
lds
add
incl
adc
cmc
adc
cmp
stos
mov
cmpsl
mov
dec
ljmp
mov
mov
xchg
orb
dec
adc
adc
xor
push
pop
sub
jl
mov
orb
out
mov
call
data16
jge
cwtl
pop
add
push
inc
pop
pop
rclb
or
imul
cmpsl
adc
popf
fnstsw
in
dec
lea
mov
mov
xchg
xchg
sbb
out
jp
push
cwtl
mov
sbb
push
mov
mov
mov
dec
dec
cmpsb
out
pop
mov
in
jp
dec
in
cmp
add
ds
aad
ljmp
pop
scas
sbb
pop
shrl
jle
sub
xchg
add
rorb
movsb
and
ret
cmp
jno
jno
dec
ja
shrb
fildl
push
xchg
adc
push
and
add
test
cmc
xor
push
xchg
aam
lcall
xchg
aam
gs
lret
jg
sub
pop
or
sub
out
lods
in
and
pushl
sbb
hlt
push
test
psubsw
cmpsl
in
fstpt
sub
and
sarb
sbb
jns
jge
hlt
loop
inc
outsl
pushf
sub
sub
xchg
pop
and
dec
push
leave
mov
clc
jg
push
fmull
psllq
into
mov
push
push
cwtl
pushf
icebp
mov
adc
and
ljmp
lods
inc
jge
test
dec
push
out
mov
push
adc
pusha
mov
cmp
cwtl
or
sbb
sub
push
jno
test
inc
inc
add
jp
mov
ja
loope
icebp
and
icebp
js
xor
jno
adc
jnp
addb
stc
cmp
sbb
je
lahf
or
std
mov
imul
in
inc
and
loopne
xchg
pop
mov
inc
push
jecxz
sub
cli
mov
sahf
ret
and
int
adc
iret
sbb
dec
pop
rcrb
push
jns
rorb
int3
mov
mov
dec
fstpt
sub
pop
cmp
jns
add
in
fidivs
sbb
movl
ficoms
cmpsl
inc
outsb
test
cs
clc
cmpsb
test
mov
xchg
pop
push
fwait
cmp
dec
xor
das
xchg
dec
pop
cmpsb
dec
lock
fists
in
sbbl
pop
icebp
out
mov
sbbl
jge
xchg
in
pusha
int
daa
out
or
or
call
jnp
scas
in
sbb
aad
testb
push
jnp
or
push
mov
call
icebp
cli
mov
pop
gs
cmp
jl
xor
fwait
shlb
push
insl
inc
mov
aas
stos
outsl
test
fldt
jb
xlat
pop
lock
ret
cmc
scas
push
adc
pop
fiaddl
lods
shll
lds
lret
jle
xchg
cli
ror
mov
cmp
lods
jmp
sbb
sbb
mov
mov
pop
adc
out
dec
mov
in
jmp
mov
dec
and
neg
sub
and
ds
fcmovnbe
and
cmp
shlb
or
inc
sahf
mov
movsl
stos
icebp
into
and
mov
dec
popf
outsb
mov
repz
sub
inc
add
inc
mov
xor
push
cmp
sti
and
and
mov
outsb
out
mov
mov
addl
pop
fstpt
in
mov
cmp
sbb
out
insb
mov
mov
push
mov
or
mov
cwtl
mov
dec
fdivs
or
or
sbb
cld
ret
sbb
orl
scas
lods
mov
lahf
movsl
lret
lock
loope
scas
pop
imul
data16
adc
stc
int
leave
shll
in
xorb
mov
mov
in
jnp
scas
push
lods
inc
inc
outsb
cwtl
loop
hlt
loop
aam
mov
movsb
xchg
idivb
add
lret
cmp
das
pop
fdivs
loopne
ja
sahf
inc
outsb
std
mov
inc
xor
jle
or
lods
in
pop
and
cltd
dec
mov
sahf
pop
or
int3
add
push
xchg
or
dec
cmp
pop
sbb
and
data16
add
xchg
es
push
cmpsb
loop
or
bound
in
js
nop
test
sub
ds
inc
add
or
fcmovnu
inc
pop
add
mov
push
les
cwtl
xchg
or
cmc
iret
test
push
xlat
popf
mov
xor
iret
fld
call
inc
jmp
mov
xchg
mov
testl
cli
gs
push
add
inc
and
cmpsb
push
add
test
xchg
push
fistps
cwtl
mov
mov
mov
pop
out
xchg
sub
xchg
lea
push
lods
or
sbb
cli
dec
test
cmpsl
sti
in
mov
jl
inc
push
mov
and
push
jmp
scas
pop
dec
ljmp
std
mov
push
test
adc
push
jecxz
test
ja
imul
pop
repnz
shlb
mov
pop
out
pop
mov
cmpsb
sbb
out
clc
adc
add
cmp
rcl
les
idivb
pop
outsb
nop
gs
xor
imul
xchg
mov
adc
mov
fwait
insl
jb
jmp
xor
push
rcrl
inc
mov
lea
lcall
cmpsb
outsb
call
in
push
in
inc
les
outsb
inc
mov
cmpsb
aam
jnp
add
bound
imul
stos
fwait
cmpsl
hlt
les
arpl
js
or
test
inc
inc
pop
fsubr
push
push
repnz
scas
loope
cmp
mov
xchg
idivl
jp
das
mov
cmp
pop
dec
push
sub
or
lcall
psrad
js
xlat
sub
cmp
inc
cmovno
ret
mov
jmp
adc
adc
mov
dec
orl
dec
xor
sbb
mov
pop
push
mov
mul
pop
lret
call
aad
lods
les
cwtl
push
push
push
mov
cltd
mov
cmp
dec
lret
cmpsb
xchg
cwtl
fdiv
lock
fnstcw
push
xor
push
and
test
mov
stos
test
inc
fwait
insb
push
ret
test
in
mov
lds
pusha
cwtl
fldt
xchg
adc
pop
sbb
or
sbb
dec
fisttps
cli
mov
push
dec
push
xor
mov
xchg
jne
cld
or
jo
aad
std
cmp
push
inc
pop
mov
mov
or
sbb
addr16
cmp
adc
imul
loopne
xor
addr16
outsl
adc
out
and
xor
stc
dec
inc
cli
icebp
loopne
mov
test
mov
mov
jg
push
mov
pop
dec
jae
push
push
sbb
loope
mov
fistpll
push
iret
add
mov
loop
hlt
out
jo
inc
call
mov
jecxz
lea
push
aam
inc
ret
cwtl
repz
test
or
ljmp
adc
clc
or
movsb
movsl
lods
push
xchg
xchg
xchg
add
inc
push
fisubl
aas
stos
mov
and
jg
xlat
or
jnp
lret
mov
aam
jg
shr
push
xchg
and
pusha
mov
xchg
call
inc
stc
aam
fdivl
cli
sub
inc
ds
inc
inc
stc
fidivrl
xlat
mov
ja
in
addr16
sbb
xor
into
sub
adc
inc
xchg
inc
cmp
ffree
or
arpl
inc
add
cmpsb
or
adc
cmp
mov
push
xor
out
lahf
and
and
cmpl
in
popf
inc
pop
scas
pop
dec
shrl
xchg
sti
sbb
inc
dec
adc
adc
cltd
rcr
fisubl
fwait
repz
imul
jp
cmp
mov
sub
jns
bound
adc
sbb
sub
cmp
pop
rsm
mov
xor
fldenv
xchg
in
icebp
add
dec
xor
xchg
sahf
movsb
in
scas
mov
or
adc
xor
outsl
push
push
out
pop
pop
das
pop
sub
loop
out
mov
jg
cltd
and
dec
mov
dec
dec
jo
sbb
je
adc
js
adc
out
jae
mov
xchg
mov
cld
mov
inc
add
mov
bound
mov
jb
sub
ucomiss
sub
das
ljmp
call
in
cmp
push
or
cmp
and
xchg
sti
je
mov
repnz
jp
addb
cmp
jb
ficomps
outsb
sbb
adc
pop
test
or
lret
shl
pop
jnp
pop
push
aam
dec
ds
mov
inc
mov
jl
outsb
pop
rol
insb
or
inc
sbb
pop
add
mov
cmpsl
jns
jmp
adc
div
cwtl
mov
enter
xchg
inc
jge
sub
je
push
sarb
scas
repnz
cwtl
ljmp
mov
inc
movsl
dec
jae
xlat
pop
jmp
call
nop
push
loope
jns
dec
cmpsl
aaa
sub
jns
in
mov
jle
sbb
mov
jmp
scas
je
es
jno
xor
insb
shll
lds
add
insl
mov
cmp
cld
repz
das
movsb
fwait
das
xor
pop
pusha
notl
push
jbe
lret
sbb
and
repnz
dec
pop
clc
mov
mov
push
sub
pop
cld
xchg
xchg
jmp
xchg
fs
mov
inc
mov
mov
pop
test
lahf
inc
sbb
outsl
dec
sub
sahf
data16
or
jne
inc
cltd
xor
arpl
push
outsl
dec
inc
push
dec
jns
xchg
divl
jl
repz
inc
out
data16
mov
imulb
inc
popa
iret
rcr
push
mov
xchg
aad
mov
xorb
mov
dec
fidivs
jle
mov
inc
xchg
ss
popa
int3
pop
sbb
jl
lds
nop
movsb
pop
sbb
or
mov
dec
adc
or
push
jb
cmp
pop
jl
and
add
jns
shr
div
daa
pusha
jge
pop
in
jmp
cmp
and
push
mov
fcmovu
jge
mov
sub
add
ret
outsb
add
sbb
push
mov
and
lcall
pusha
movsb
xor
shl
out
mov
or
adc
push
mov
sub
xchg
aad
cmpsl
dec
xchg
push
jmp
cmp
dec
inc
repz
jmp
pop
mov
and
mov
jo
test
cmp
imul
lds
out
cltd
pop
fiaddl
fldl
aam
pop
aam
arpl
push
bound
pop
leave
xor
jo
xchg
mov
imul
mov
notl
ja
pusha
dec
and
jne
fidivrs
lods
sub
insl
mov
xor
dec
inc
data16
adc
ret
adc
aam
and
fimull
in
ss
sbb
dec
pop
gs
in
cli
push
push
sahf
cmp
sbb
ret
mov
adc
jmp
inc
mov
roll
adc
xchg
cmc
xchg
xchg
inc
cmp
or
insb
jbe
dec
add
arpl
cmp
cld
or
mov
or
push
insl
cmp
imulb
jecxz
rorb
mov
sub
lock
mov
adc
and
fisubrs
sahf
sbb
add
adc
inc
stos
shl
push
lea
jecxz
js
in
call
mov
xchg
dec
lods
cmp
cmpsb
adc
dec
fdivr
mov
in
mov
push
sub
dec
dec
or
xor
push
lahf
shl
out
loopne
jo
insb
cmp
inc
insl
lock
jno
push
add
push
shlb
sahf
mov
xchg
inc
cmp
mov
xchg
adc
test
pop
xchg
jmp
bound
arpl
stos
imul
mov
pusha
ret
test
pop
mov
inc
lock
adc
clc
or
rcrl
jns
jbe
push
fincstp
lea
setbe
or
out
sub
jp
and
ja
sti
inc
jbe
push
out
notl
mov
xorl
in
leave
andl
jns
orb
nop
push
add
jle
int3
inc
inc
pop
xlat
fldt
das
pop
jg
lods
repz
push
into
sub
shl
jl
inc
xchg
in
pop
xlat
ljmp
add
lret
and
xchg
stos
ja
icebp
in
jne
push
jp
iret
sub
outsl
adc
mov
into
repnz
add
loope
sub
sbb
mov
mov
outsb
fsts
fucomip
add
cmp
scas
mov
cwtl
mov
movsl
push
mov
mov
inc
fsubr
jg
rolb
adc
hlt
push
fdivp
out
mov
in
mov
jnp
add
js
inc
ja
jbe
xor
dec
and
test
cmp
pop
jle
mov
rcl
repnz
mov
adc
daa
or
sbb
or
pop
insl
add
mov
shl
in
xorl
xchg
push
leave
push
xor
dec
jbe
mov
and
ljmp
jle
cwtl
sbb
les
sbb
push
cmp
sbb
jno
decb
lcall
movsl
fcompl
add
aam
dec
sarl
xor
jp
sarb
adc
or
inc
or
dec
ljmp
loopne
xor
ffree
imulb
push
fs
mov
int3
cwtl
out
jo
push
test
sub
pop
push
xchg
mov
push
pop
shll
hlt
sbb
cmp
pop
in
out
sub
sahf
cli
xchg
cmpl
outsl
loope
shlb
iret
sub
data16
jb
loopne
mov
push
mov
push
dec
dec
xor
adc
mov
mov
push
mov
adc
inc
sbb
sub
push
aas
int3
mov
stc
sahf
hlt
and
add
push
fisttpl
dec
sub
mov
push
mov
dec
outsl
pop
btc
pop
enter
mov
mov
int
clc
into
out
cmpb
in
xchg
inc
xor
inc
out
stc
sub
test
outsl
data16
jo
mov
sub
push
repz
das
nop
lods
stos
sbb
bound
repnz
paddw
sub
pop
bound
mov
mov
push
mov
out
sbb
mov
scas
inc
and
pusha
cmove
in
mov
pop
push
cmp
mov
shll
add
inc
sahf
xchg
jbe
cmp
cmp
or
mov
sbb
nop
cmc
test
aad
mov
loopne
ss
sbb
frstor
push
pusha
lds
imul
mov
mov
mov
shl
add
insb
xor
movsl
inc
in
pop
pop
and
jns
and
push
adc
insl
pusha
mov
out
jb
test
xchg
imul
std
movsl
push
loope
xchg
cmp
sbb
rcll
scas
jne
test
xorl
lds
iret
aas
or
dec
jbe
arpl
or
xor
and
jbe
lds
inc
popa
pusha
nop
iret
fs
mov
testb
fldl
lods
xlat
mov
cmp
mov
js
js
gs
push
pop
es
fistps
jg
sub
out
cwtl
xor
jno
fnstcw
xor
aad
push
cmp
insb
xor
adc
insl
out
xchg
movsb
xchg
xchg
lea
addr16
into
fs
ljmp
and
test
ficoms
nop
fldl
stos
jge
aad
sub
push
in
sti
out
pop
incb
xor
sbb
pushf
lods
rcl
and
push
push
jmp
test
testb
rorb
mov
aas
or
fwait
out
push
pop
lds
cmp
stc
pop
inc
dec
add
sub
loop
push
jne
sub
mov
xchg
xchg
clc
dec
mov
mov
lods
inc
jb
inc
inc
cmp
sbb
pusha
sub
nop
sub
cmp
test
ret
popa
jl
jo
mov
rcr
popl
das
or
shl
sar
sub
dec
add
pop
sub
roll
sub
adc
mov
inc
fimuls
out
out
int3
mov
cwtl
push
pop
adc
push
test
sti
out
sub
xchg
xchg
mov
add
shlb
and
jle
cmpsl
mov
adc
xlat
mov
pop
inc
xor
mov
push
mov
mov
stos
movsb
add
fisubrs
adc
xorb
pushf
mov
lret
adcb
test
int3
jne
inc
cli
dec
jne
mulb
jno
int3
xchg
push
add
fadds
sbb
mov
out
loope
xor
dec
mov
daa
bound
xor
sub
test
and
in
scas
sbb
jo
mov
lahf
out
mov
and
fwait
xchg
mov
cs
ret
mov
push
dec
mov
cli
xchg
hlt
out
pop
cmpsb
dec
sub
adc
ret
and
mov
rcll
in
jge
imul
mov
mov
in
aad
cwtl
test
addr16
and
into
fs
cld
mov
or
and
sbb
xor
sbb
xor
dec
ret
popf
sub
fs
xchg
addr16
jmp
orl
adc
xchg
sub
cltd
sub
sbb
ss
mov
pushf
sbb
icebp
in
mov
testl
loope,pt
ret
mov
sti
sub
faddp
xchg
mov
dec
clc
out
xchg
enter
shrl
inc
mov
ss
int3
popa
jo
jne
mov
xchg
mov
shrl
hlt
inc
lcall
daa
popa
lock
ds
pop
inc
mov
mov
es
mov
dec
sbb
imul
popf
push
adc
enter
daa
ficomps
push
loop
enter
add
scas
xor
cs
daa
xchg
bound
mov
xor
repnz
cs
mov
mov
adc
int3
xor
fcmove
pop
flds
movq
xor
movsl
cmp
mov
jge
xor
aad
aaa
add
pushf
enter
lock
in
push
cmp
add
fdivrs
sbb
mov
stos
arpl
mov
and
add
mov
adc
xchg
mov
in
test
or
add
jle
cmp
push
enter
stc
adc
mov
movsl
lahf
bound
ss
jmp
in
loop
ret
xchg
in
dec
xor
lock
lods
movsl
hlt
jnp
mov
adc
push
jge
pop
nop
fistps
push
sarb
das
jns
xor
lods
lcall
fs
sar
mov
add
std
pop
mov
pop
notl
jbe
mov
mov
cwtl
push
test
aam
je
cwtl
sub
mov
incb
or
push
data16
sbb
or
xor
cltd
repz
ja
shl
mov
mov
xchg
loope
out
mov
adc
shrb
push
mov
sahf
test
push
loopne
mov
out
or
jecxz
bound
mov
xchg
mov
shll
cmpsl
push
aad
adc
pop
scas
adc
jge
insb
jnp
fmulp
xor
mov
or
je
cwtl
daa
inc
popf
aaa
fisubrl
stc
jne
leave
pop
mov
adc
lds
in
add
insl
mov
imul
push
loopne
fmuls
cmp
pop
mov
mov
jns
shl
aad
sbb
lds
xlat
inc
inc
pop
inc
subl
xorl
cld
test
or
xor
push
enter
cwtl
popf
xchg
sub
push
jbe
clc
rclb
int3
stos
dec
enter
shl
sub
cmp
enter
jp
cmp
ficomps
adc
adc
imul
sbb
add
imul
and
xlat
sub
mov
ret
cs
or
aad
sbb
mov
icebp
into
cmp
inc
mov
cmp
sub
mov
enter
pop
and
dec
and
add
scas
repnz
sub
pop
xor
xchg
jae
xor
xor
add
fisubrs
imul
stos
add
orb
out
add
mov
in
add
test
cmp
das
mov
call
jl
adc
in
outsb
jae
push
and
das
xlat
dec
cmpsb
iret
hlt
mov
insb
or
dec
or
ror
pop
notb
mov
fdivl
inc
sahf
jecxz
nop
xchg
mulb
in
shlb
and
jne
ss
or
inc
stos
out
mov
dec
xorb
popf
push
cmp
lret
mov
clc
in
lahf
mov
push
out
sbb
adc
xor
pop
pop
jmp
pop
bound
or
dec
je
ljmp
sbb
int
addr16
aaa
jb
sbb
xor
clc
inc
test
imul
inc
jno
roll
dec
adc
sub
dec
mov
push
aam
repz
xor
pop
subl
fs
in
xchg
or
jmp
filds
cmp
pop
inc
add
or
mov
pop
sti
inc
mov
add
ja
pusha
and
push
loopne
filds
rorb
filds
mov
or
sbb
inc
in
xchg
enter
and
pushf
and
cmc
jnp
movsb
xorl
ret
push
sbb
test
lock
sub
mov
int
jbe
mov
or
ror
xchg
fwait
out
mov
dec
fnstcw
push
ljmp
test
sahf
pop
or
xchg
mov
shlb
xor
or
in
sti
and
adc
mov
cwtl
push
sbb
inc
cmp
adc
lret
cli
jp
std
mov
mov
xchg
pusha
and
lds
test
repz
pusha
test
push
les
cmp
lods
pop
cld
adc
sub
inc
inc
xchg
popa
mov
xor
cmp
or
lods
cmp
popf
and
jbe
sub
jl
out
xchg
fbstp
push
imul
sarb
sub
pop
and
call
and
adc
cmp
ljmp
in
jbe
fs
inc
adc
rorl
repnz
insb
mov
outsb
das
into
cmp
aam
push
packssdw
cmp
imul
jg
sti
inc
orb
mov
shlb
fmull
or
addl
sahf
je
mov
or
sbb
imull
js
cmp
add
jae
lea
cltd
fsubrs
and
pmaddwd
adc
mov
xchg
jb
aas
add
pusha
jmp
ljmp
xor
mov
push
mov
int3
adc
rcl
aam
jne
cmp
rolb
add
outsb
ficompl
dec
push
adc
das
sbb
pop
jae
int3
incl
shlb
xor
inc
fadds
lea
jb
cmp
dec
enter
sbbl
xchg
jnp
xor
mov
pmulhw
testl
dec
pop
fwait
push
lds
fdivrs
lea
mov
push
mov
js
adc
push
cmp
and
dec
xchg
daa
sub
pop
adc
pop
xor
and
aaa
inc
out
sahf
in
leave
dec
or
cmp
loope
dec
add
xor
adc
in
insl
lods
cmp
cmp
and
or
cltd
mov
int3
mov
pop
fldcw
mov
inc
sti
outsl
stc
push
or
pop
pop
sub
mov
lret
cmp
mov
jb
push
lock
mov
aad
add
push
cmpsl
mov
out
mov
xchg
cmpsb
add
cli
mov
sub
out
fcom
push
cmp
add
pushl
push
mov
ficompl
dec
scas
jl
cmpsb
mov
out
jp
sbb
std
xchg
loopne
lds
lcall
fxch
fdivrs
sbb
jp
testb
or
popf
aam
enter
mov
pushf
outsl
popf
pop
mov
hlt
inc
loopne
rcll
adc
xchg
cli
cli
in
push
sbb
mov
in
dec
xchg
pop
xchg
jno
int3
mov
xor
cmpsb
cmp
int3
sti
cmpsb
push
icebp
push
mov
pop
lret
mov
cmp
add
push
inc
insl
divb
xchg
add
add
adc
fsubr
push
inc
fisttps
stos
push
ret
fs
aaa
jp
mov
mov
cld
loopne
push
fs
jno
push
les
psadbw
icebp
sub
inc
loop
jecxz
dec
pop
lods
aaa
mov
xchg
cmp
jge
xchg
ss
mov
mov
mov
sub
xor
xor
test
jno
push
push
or
hlt
add
rcll
gs
and
out
xor
pop
push
call
jns
aas
clc
ret
xor
ss
and
in
lahf
call
jmp
inc
pusha
lcall
cmpsl
hlt
push
dec
test
cltd
lret
adc
jne
or
jo
cltd
lahf
pop
lea
push
inc
sub
dec
push
test
pop
int3
pop
int
push
jp
lds
inc
mov
ljmp
sahf
cmp
pop
cmpsl
rcrl
inc
xor
xchg
sbb
pop
xorl
jno
mov
cmc
jecxz
cmp
sub
jg
out
sbb
xorl
fildll
mov
push
or
mov
xchg
jnp
lods
rcll
out
fistps
gs
clc
ret
in
addr16
movsl
call
lea
sub
movsb
xchg
testb
ljmp
add
ret
sbb
daa
lods
sbb
pusha
xchg
mov
jb
ds
sub
add
jmp
icebp
outsl
std
inc
mov
fsubrs
js
mov
loop
stos
mov
shl
xchg
and
push
sbbb
xchg
mov
jg
lret
fmuls
int
mov
stos
test
pop
xorl
cmpsb
rorb
cmp
test
test
aas
jne
mov
repz
pop
mov
repnz
xchg
adc
inc
arpl
sbb
in
sub
pop
mov
sub
xchg
aaa
in
pushf
or
push
and
in
testl
mov
dec
jns
or
mov
pop
push
jecxz
cwtl
xchg
jge
dec
inc
ss
pop
jnp
mov
aaa
movsl
ds
jnp
adc
mov
ret
sbb
mov
jle
in
call
dec
jmp
and
call
jb
jle
cwtl
pop
pop
ss
in
rcrb
xor
cmp
clc
dec
dec
movsl
jge
and
xor
faddl
sbb
adc
inc
stos
mov
and
pop
sahf
dec
push
mov
or
push
mov
sbb
movsl
or
cmp
jb
add
add
mov
inc
and
xor
mov
mov
repnz
sub
adcl
mull
lock
test
call
xchg
ds
sbb
lds
mov
sahf
repz
insl
jo
push
and
mov
fisttpll
push
adc
cs
mov
mov
lcall
and
mov
stos
js
mov
movsb
pop
jbe
or
leave
outsb
jb
jle
dec
mov
and
cwtl
int3
xchg
rorb
aas
xor
pop
divb
ds
mov
mov
pop
arpl
pusha
sti
ja
inc
cmpsl
cmp
adc
mov
push
mov
test
or
mov
add
jp
pop
mov
movl
test
add
pop
jbe
daa
xor
dec
in
push
popa
gs
sarl
push
cmp
fisubl
mov
and
incb
xchg
mov
push
in
or
mov
ljmp
xlat
sub
mov
add
jl
mov
scas
xchg
cmp
mov
aaa
out
jp
fildll
sbbl
rolb
subl
xchg
cs
jg
push
adc
jnp
scas
pop
sbb
ljmp
not
sbb
dec
mov
jecxz
es
and
add
shr
mov
fstpl
fadd
fwait
lret
gs
in
ret
or
nop
insb
sahf
sti
pusha
loop
xchg
mov
dec
movsl
loopne
les
andb
xchg
or
sbb
repnz
jne
mov
repz
int3
int
into
or
mov
sub
push
dec
aam
xchg
ljmp
repnz
nop
adc
stos
pop
pop
cmp
xchg
cltd
call
jae
lods
cmc
test
and
ficomps
getsec
pop
mov
jmp
cmp
lea
and
sbb
das
ja
in
jbe
ss
adc
mov
cmpsb
sahf
and
and
jl
imul
lds
out
xor
adc
stos
out
sub
fcmove
sub
jb
cmc
and
stos
mov
pop
add
movsb
jl
test
mov
push
and
inc
es
dec
mov
xchg
inc
xchg
xchg
inc
sbbb
mov
in
out
mov
push
sti
jmp
into
add
mov
dec
in
leave
cmc
popa
ss
pop
out
sub
int3
push
pop
in
dec
or
adc
call
push
mov
jbe
movsb
movl
sub
sar
lea
in
out
xorb
stos
inc
movhps
js
ja
and
cmp
sbb
xchg
enter
sub
lods
fsubr
adc
jmp
xor
cmp
paddsw
imul
cs
stos
outsl
and
push
test
incb
sarl
test
iret
icebp
pop
pushf
das
jae
in
sbbb
repnz
mov
into
mov
stos
push
mov
imul
push
mov
and
xchg
in
mov
xchg
es
aaa
mov
imul
mov
mov
jno
ficoml
insb
add
xor
jp
and
call
stos
jne
adc
fcmovbe
mov
inc
jns
sbb
pop
or
adc
xchg
iret
outsl
sbb
clc
push
cmp
aam
xlat
movl
popa
sub
test
pop
inc
sub
cli
ljmp
cmc
hlt
and
add
mov
mov
push
loop
xorb
mov
mov
dec
jle
inc
pop
pop
or
xchg
push
jle
jge
repnz
pop
es
push
fcompl
lea
cli
pop
fwait
das
in
mov
dec
aas
fcoms
mov
iret
jge
cli
push
dec
lds
jge
cmpsl
inc
xlat
shl
or
scas
gs
mov
roll
jo
and
lock
jge
or
cs
add
hlt
mov
push
add
mov
xlat
push
xor
fstl
int
jmp
pop
mov
pop
pop
fwait
xor
push
aam
imul
shrb
lods
push
and
xchg
mov
mov
sub
test
mov
push
xchg
imul
les
fisttpll
mov
mov
bnd
sbb
scas
xchg
dec
mov
jle
ret
jecxz
xchg
pop
mov
mov
repnz
pop
out
inc
xchg
movb
aaa
or
in
aas
inc
aad
scas
sahf
insl
mov
jg
outsl
jge
inc
test
addr16
bswap
inc
stos
mov
push
adc
lods
xchg
pop
nop
mov
xchg
xchg
xchg
cld
xor
and
add
jno
out
pop
add
data16
jmp
mov
fisttpl
mov
hlt
xchg
mov
dec
xchg
push
cwtl
dec
sbb
xchg
cld
and
mov
jmp
pop
jp
add
cmp
mov
iret
push
and
xchg
sbb
dec
in
pushf
std
das
cli
mov
jb
jp
fcmovu
adc
enter
fimull
add
andb
repz
imul
xchg
jae
sti
sbb
jns
or
ljmp
dec
push
sbb
mov
add
test
sbb
cmp
mov
mov
std
out
ljmp
mov
nop
fs
xor
lods
mov
ret
call
and
jg
jecxz
cwtl
adc
or
lock
aaa
ds
ds
sbb
sub
adc
dec
stos
sbb
mov
sbb
movl
cmp
cld
lds
xor
data16
add
jp
add
or
xor
xor
sub
call
cld
or
icebp
bound
adcb
cwtl
loope
pop
adc
inc
subb
sbb
lods
sbb
and
pop
mov
lock
fidivl
dec
jecxz
mov
push
xchg
out
loopne
xchg
test
adc
mov
mov
or
jecxz
xchg
das
mov
imul
adc
imul
jl
mov
outsl
addr16
mov
lea
ljmp
jg
sbb
sub
rol
lahf
or
pop
test
cwtl
mov
lods
cld
repz
mov
fcompl
xchg
cld
add
or
dec
add
int3
loope
or
fs
lods
fxam
add
add
dec
outsl
push
incb
pcmpgtd
rorl
cmpsl
cmpxchg
add
sbb
decb
inc
test
andb
int
rorb
into
cmc
sub
and
jle
daa
pop
jg
sub
int3
sub
popa
or
aaa
ss
ret
cmp
mov
xchg
push
add
sbb
pusha
hlt
inc
lods
pop
lcall
jge
xor
scas
leave
fmul
scas
xor
jecxz
lods
xchg
xchg
in
iret
cli
push
out
inc
loop
jecxz
push
fadd
idivb
push
add
or
popf
and
xor
movsl
stos
mov
xchg
dec
sub
adc
sub
xchg
xor
loope
lret
xchg
and
fidivs
push
notl
adc
fnstenv
mov
mov
sbb
enter
lretw
jo
push
stc
mov
int
mov
dec
mov
repnz
cmp
into
add
in
data16
mov
jge
mov
mov
xchg
enter
call
mov
push
pop
mov
mov
rcll
repz
aaa
lea
jo
test
xor
addr16
sti
mov
xor
xor
mov
cmp
mov
jns
test
push
call
sub
lds
dec
insl
fs
push
ret
pop
and
and
hlt
add
das
jmp
sub
pop
jmp
xlat
cmpsl
cmpsb
add
in
sbb
mov
fnstsw
push
repz
cmp
mov
jo
test
fucomp
ja
fs
mov
jne
notl
sarl
pop
and
xor
mov
or
xor
pop
mov
dec
in
cmc
push
fs
mov
or
dec
jbe
into
xorb
fsubs
rcrb
aas
mov
loope
int
adc
add
push
in
fldt
leave
xchg
into
sbb
fs
push
test
mov
ja
mov
cwtl
xchg
lahf
hlt
loop
rcr
jno
add
xor
xchg
or
or
repz
mov
arpl
daa
sahf
es
mov
clc
pop
or
adc
ret
into
xchg
aad
imul
mov
dec
mov
rcll
pusha
mulb
out
sbb
or
outsl
enter
hlt
fwait
imul
test
js
push
xchg
dec
sub
dec
into
ljmp
mov
pop
push
or
sbb
movsl
sti
sub
or
imul
or
xchg
cltd
sbb
lea
inc
mov
add
mov
mov
mov
adc
adc
jae
lcall
pop
cmc
pop
test
jb
jno
xchg
cld
push
jg
or
daa
xchg
movsb
pop
xlat
cmp
leave
xchg
lds
test
dec
inc
popf
mov
aam
push
negl
and
aad
outsb
mul
xchg
popa
sbb
cmp
jo
and
pushf
adc
in
mov
fndisi(8087
adc
cmp
inc
rcr
outsl
mov
pop
sub
mov
js
cmpsl
pop
scas
sbb
adc
stc
pop
jecxz
enter
dec
std
push
cld
sarb
lret
test
lds
out
cltd
loop
and
filds
leave
jle
xlat
mov
jl
xchg
cmp
pop
push
push
or
add
std
pop
or
das
out
cs
sub
shll
lods
xchg
shl
xor
roll
jmp
lret
loope
addr16
sbb
rorl
sti
sub
dec
sbb
mov
dec
pushf
vpcomw
lock
inc
pop
xorb
pop
and
mov
lret
mov
jmp
dec
leave
push
sar
fcom
iret
pop
icebp
sbb
aad
xor
aas
lcall
and
jnp
in
lock
push
dec
out
outsl
cmpsb
pop
add
pop
xor
in
pop
inc
stc
sub
xchg
cmp
les
out
add
mov
adc
mov
ss
test
pop
adc
xchg
in
sub
loop
xchg
mov
jge
add
add
sbb
mov
xor
loopne
push
icebp
xor
or
negl
mov
mov
add
js
pushf
cmpsl
fsts
int3
mov
sarl
cmpsb
loope
pushf
lods
mov
sti
push
std
and
int
int3
insl
adc
ret
add
rcrl
mov
push
push
mov
mov
fdivl
inc
scas
jp
ret
mov
out
je
imul
iret
push
jne
push
insb
push
mov
xchg
adc
xchg
shll
dec
push
lret
bound
or
push
push
fdivs
mov
iret
push
roll
or
mov
lret
addr16
adc
std
test
scas
ja
std
popa
iret
mov
ret
jecxz
in
add
pop
iret
push
addl
rclb
mov
dec
lcall
iret
nop
jns
push
add
shll
sarb
sub
out
fdivs
and
jg
push
xlat
and
inc
dec
sbb
adc
dec
cltd
pusha
inc
inc
das
iret
and
xor
lds
xchg
jle
clc
cmp
rcrl
adc
push
jmp
push
fmuls
pop
and
mov
mov
cmp
and
loope
bound
push
outsl
aaa
xchg
mov
inc
inc
popa
xchg
sbb
inc
pop
imul
mov
sub
mov
xor
ret
arpl
test
adc
pop
rcll
lock
and
lock
negb
loope
jg
ds
push
cmpsl
jns
jmp
out
test
mov
inc
test
jns
cli
or
fiaddl
cmp
popf
cmp
pop
lret
fsubr
fcompl
push
icebp
sub
cmpsl
test
insl
lcall
jnp
jno
bound
fbld
cwtl
xchg
insb
andl
mov
adc
lea
rcrb
in
pop
pop
das
cmpsb
mov
leave
fcompl
clc
push
pop
or
out
mov
xor
mov
out
ret
pop
xorl
and
neg
xorl
fmull
aad
mov
inc
daa
je
gs
js
push
gs
das
int
mov
aas
pop
xchg
xchg
jno
popf
leave
aam
sbb
mov
enter
xchg
mov
mov
xor
add
notl
dec
sub
sub
mov
or
dec
fwait
push
xor
fimuls
push
and
popf
mov
push
jge
jge
inc
ffreep
jbe
jo
js
call
pop
mov
lods
push
ffree
jnp
cmp
dec
sbb
mov
add
or
jne
mov
cmp
into
and
clc
iret
push
rcrl
ret
pop
fsts
jmp
insb
xor
sbb
call
jp
popa
inc
into
testb
sti
pop
sbb
iret
mov
out
inc
cmp
xorl
mov
into
orb
loopne
dec
dec
dec
sub
jb
jns
lret
aad
lret
loopne
add
stc
or
popf
mov
add
std
mov
outsl
lods
adc
shlb
test
nop
pop
pop
mov
lahf
dec
pop
bound
pusha
push
xchg
jo
pop
mov
cli
cmp
pop
pop
test
in
rcrl
jo
mov
imul
xor
stos
or
add
icebp
imul
adcb
shr
xchg
pop
dec
adc
in
call
mov
sbb
bound
sub
cmpsb
decb
loop
and
rol
cs
adc
std
xor
pop
lret
mov
add
nop
lea
shr
push
lods
add
rorb
cmpl
movsl
and
add
rorl
popa
xor
int
and
pop
jnp
sub
dec
xor
xchg
jns
dec
pop
jg
jae
and
lahf
jge
sets
lods
add
ljmp
mov
mov
and
mov
mov
sub
dec
aaa
shll
jns
push
mov
js
fwait
fwait
sti
jg
or
jae
dec
inc
push
mov
push
int3
repnz
sbb
in
ret
add
adc
mov
cmpsb
pop
push
inc
xchg
dec
inc
ss
mov
inc
stc
sbb
add
outsb
pop
fwait
cmp
int
lods
data16
aam
pushf
and
in
call
mov
xor
mov
dec
cs
in
mov
pop
cld
pop
xchg
dec
pop
mov
stc
mov
rcrl
notb
sub
cmp
xchg
xor
xor
std
nop
outsb
addr16
int
test
mov
xchg
lret
xor
adc
movsl
mov
das
mov
add
outsl
cmp
aam
cmpps
pop
mov
jmp
call
daa
in
pop
add
inc
cmp
mov
inc
aaa
adc
mov
dec
mov
adc
mov
add
getsec
xchg
fsubr
add
ficoml
into
aas
sub
fidivl
push
daa
test
dec
lds
in
in
fwait
test
cmp
jmp
stc
push
addr16
pop
push
cmpsl
inc
mov
adc
mov
fimuls
pop
popa
addr16
xchg
bound
mov
and
xchg
adc
sbb
or
add
jbe
scas
jmp
dec
mov
test
and
add
sbb
sti
mov
jno
jecxz
pop
out
jmp
cmp
leave
sahf
lret
notl
out
cmp
scas
shl
xchg
and
dec
inc
shr
repnz
cmp
negb
and
or
gs
add
into
lahf
push
hlt
pop
jp
sub
cmp
push
push
mov
daa
pushf
pop
shll
mov
shr
mov
cmp
jnp
sub
cmp
pop
add
sti
popf
xlat
stc
lock
sbb
int
fildll
and
push
jmp
fildll
jbe
mov
outsl
jp
subl
out
and
out
and
sub
inc
mov
divl
xor
mov
pop
fisttpll
int3
or
mov
inc
loope
fisubs
add
iretw
dec
aad
out
mov
jno
les
dec
add
dec
mov
test
nop
jmp
dec
aaa
mov
popf
adc
pop
cmc
xor
adc
mov
dec
pop
xchg
in
insl
dec
adc
mov
cld
jno
jns
sub
dec
addl
add
push
inc
sbb
rcrb
aam
out
call
adc
mov
ret
jle
pop
adc
push
lea
sub
cmp
lock
dec
cmp
pop
add
sub
inc
es
inc
xchg
out
jbe
xor
gs
sub
xchg
cmp
in
cmpsb
das
jmp
sub
dec
cmp
xor
sub
subb
je
mov
or
mov
stos
mov
fdivs
and
adc
hlt
xchg
ss
stos
cltd
dec
dec
sbb
push
dec
stos
cs
lds
dec
aam
mov
sub
cld
jge
sub
scas
lret
fisubs
xchg
out
xor
push
sbb
jmp
icebp
lock
or
push
lds
xor
test
popf
sbb
add
cmp
bound
mov
mov
shl
aad
add
xor
jl
icebp
or
cmp
inc
mov
push
ljmp
arpl
mov
je
ss
aam
cltd
cmp
out
push
sbb
mov
mov
repz
push
sub
in
and
add
adc
scas
sub
mov
nop
call
or
add
adc
inc
push
rorb
mov
pop
shrb
xchg
dec
jo
fimull
fadd
and
aad
sbb
test
xchg
out
jae
sbb
pop
xchg
cwtl
cmpsl
cmpsb
pop
pop
into
cmpsb
mov
lcall
and
inc
sbb
adc
out
insl
adc
rolb
adcl
jge
ja
push
movsl
pop
lds
add
nop
adc
lret
sub
pop
cli
jle
push
mov
sbbl
inc
outsb
out
sub
mov
and
jbe
popa
mov
pop
shrl
mov
stc
adc
sti
xchg
xchg
add
or
dec
loope
lret
jns
sub
repnz
jns
cltd
xchg
clc
push
push
mov
mov
and
pop
xchg
ficoml
pop
loop
out
rcrb
mov
push
jbe
fstl
ss
stc
loopne
pop
mov
or
cwtl
pop
xor
enter
dec
fwait
push
fdivrl
cmpb
mov
pop
outsl
add
dec
bnd
mov
aaa
xor
imul
pushf
lret
jbe
or
out
shr
andb
insl
movsb
jmp
rclb
shrl
lret
xlat
inc
movsb
rcrb
lods
pusha
test
addr16
xor
aam
flds
mov
lods
xchg
and
test
jecxz
push
jmp
test
push
jb
dec
in
jl
or
push
pop
lret
cmc
fwait
stc
outsb
test
insb
and
push
jmp
jl
pop
idivb
pop
rorl
clc
int3
lods
sub
mov
jl
testl
fstpt
shll
cmp
inc
sub
dec
add
lea
inc
sub
add
div
pop
int3
xchg
stos
sbb
stc
movsb
stc
jbe
imul
inc
mov
inc
loope
aam
or
pushf
jmp
into
cs
pop
and
mov
jle
call
mov
inc
pop
adc
insl
mov
pop
cmc
mov
cmp
jbe
aaa
push
inc
mov
cmp
in
and
lcall
leave
jnp
xchg
sarb
inc
repnz
jg
sahf
pop
nop
or
jle
inc
cli
in
outsb
jl
aam
mov
loope
ss
jmp
cmpsb
pop
xor
xor
movl
ds
lcall
hlt
mov
lea
sub
inc
jno
mov
mov
jne
bswap
loope
adc
xor
and
and
fdivrl
ja
push
popf
mov
push
bound
mov
xchg
sbb
mov
cmp
ret
sub
sbb
or
cmp
xchg
rorl
cld
aas
dec
test
int3
and
add
shlb
out
pop
aad
jmp
cltd
jns
les
jbe
jmp
push
ljmp
cld
sbb
loop
adc
add
or
out
bound
push
mov
in
mov
and
into
push
and
jge
pop
ss
cmp
jp
inc
adcb
adc
aaa
les
sbb
popa
jns
cs
lahf
adc
cli
int3
ficoms
fst
pop
push
cwtl
inc
dec
pop
subl
leave
xlat
jbe
cmp
shlb
fmull
dec
std
pusha
stos
sti
movsl
call
xor
fwait
jl
out
cmp
mov
outsb
xchg
out
cmp
aad
jge
mov
xchg
jno
andb
cmp
adc
rolb
xchg
popa
test
xor
in
jb
fbld
lods
jno
ret
adcl
mov
push
shrl
incb
leave
lret
rol
mov
sar
loopne
rcll
push
mov
sub
mov
imul
ror
daa
daa
xor
jne
mov
stos
jl
aam
pop
inc
mov
lcall
lahf
xlat
mov
test
in
out
push
mov
pushf
mov
jno
add
dec
pusha
arpl
jg
das
sarl
mov
and
mov
dec
gs
sarl
add
leave
stos
or
mov
adc
js
insl
insb
xchg
cmp
out
movsb
xor
push
mov
mov
inc
in
lahf
inc
jae
fcomip
or
orb
cltd
xor
xor
js
or
vinsertf64x2
and
test
dec
ja
lcall
int3
shll
mov
ja
fdivr
jnp
xor
test
outsb
fwait
mov
mov
mov
fs
mov
pop
adc
cmp
push
mov
push
mov
std
shll
popa
das
lods
jne
loope
mov
push
cmp
outsl
and
arpl
arpl
test
mov
ret
in
addl
dec
add
sarl
xorl
jae
or
dec
cmp
ret
push
adc
and
mov
mov
bound
xchg
cmpsb
inc
repnz
in
mov
test
out
xchg
test
jmp
inc
and
nop
mov
mov
int3
sbb
in
in
shrl
mov
xchg
cmp
or
inc
movsl
lahf
arpl
inc
aaa
and
imull
popf
cmp
sbb
xchg
sbb
test
jne
fmulp
pop
out
push
jecxz
sbb
sub
or
sbb
xor
ret
push
sarb
popa
jle
jo
cmp
daa
or
daa
call
cmp
movsl
insl
ds
test
lcall
mov
mov
xchg
into
flds
test
addr16
ret
inc
xor
rcrb
mov
and
mov
jae
out
add
hlt
sub
mov
inc
xor
and
movsb
xorb
cld
mov
and
dec
shlb
lret
stos
jp
out
rorb
nop
pop
dec
dec
jno
mov
sub
and
cmp
pop
jnp
sarb
lea
xchg
adcb
faddl
rorb
cld
pop
xor
fldl
lret
or
inc
dec
jge
lret
jae
lea
mov
sbb
pop
mov
dec
or
mov
fwait
gs
pop
out
cwtl
imull
lcall
and
jae
aas
sahf
push
out
in
lcall
add
sub
je
xchg
jp
fwait
xchg
lea
lret
add
cmp
scas
jbe
loopne
decl
mov
xor
jnp
jno
repz
test
mov
cli
test
mov
test
mov
in
int
cmp
mov
and
test
adc
jne
fimuls
seto
outsb
fmull
dec
sbb
cmc
cli
lahf
iret
mov
sarl
inc
add
push
ja
dec
adc
push
stos
ds
cld
and
mov
outsb
xchg
mov
lock
dec
in
cmp
pushf
push
mov
adc
pop
movsl
int3
add
stc
jg
xchg
test
and
xchg
roll
insl
xchg
xor
mov
in
pop
pop
aad
adc
hlt
test
adc
aad
loopne
jae
faddp
jnp
push
adc
shll
fisubrs
mov
jo
or
fldcw
sub
dec
push
aad
xor
inc
outsb
gs
sbb
mov
std
push
add
je
cs
add
sub
mov
and
jns
test
inc
mov
insb
mov
xorb
sbb
push
jmp
sub
push
mov
adc
jmp
mov
iret
addr16
sahf
and
jle
shlb
mov
sbb
shrb
int
sub
ret
add
test
inc
cmc
std
dec
sbbl
lret
xor
je
repnz
ljmp
or
cwtl
aam
mov
and
dec
or
incl
stos
push
gs
xor
test
icebp
scas
roll
inc
out
push
xchg
fnstenv
test
popa
fs
jns
jns
cltd
and
adc
movsb
push
inc
mov
test
inc
in
loope
dec
dec
jno
or
dec
push
inc
mov
js
dec
mov
dec
xlat
iret
xchg
popf
and
ljmp
repz
mov
inc
mov
adc
inc
insb
and
aad
in
mov
rclb
loope
push
insb
es
mov
ret
sub
cmp
mov
push
dec
xchg
roll
call
stos
mov
adc
xchg
dec
cmc
test
pop
jb
inc
xchg
rcr
cmpsl
aaa
xor
mov
and
inc
insl
push
and
bound
in
or
clc
and
movsb
mov
enter
scas
mov
lret
push
and
loope
test
push
jp
push
shll
add
lods
dec
mov
fwait
in
test
inc
adcl
adc
jmp
cmp
push
pop
and
push
jbe
inc
pop
adc
or
sbb
and
jp
ret
lret
xchg
xchg
rcrb
sub
and
out
andl
push
mov
sbb
and
fs
add
mov
mov
and
xor
fsub
scas
outsb
xchg
xchg
add
outsl
mov
and
int3
rcrl
lcall
push
out
aaa
push
dec
dec
jg
add
gs
repnz
dec
inc
lcall
sub
jp
out
mov
mov
arpl
aaa
stos
mov
adc
xchg
mov
das
ss
fldz
and
cmc
sbb
fmull
xlat
pop
inc
lods
cli
out
lods
mov
imull
and
add
push
ljmp
jno
cmp
mov
imul
das
negl
pop
insl
push
add
mov
sbb
fs
xor
xchg
push
push
jno
xchg
and
jp
les
insb
popf
rcrb
xchg
xchg
push
cmp
jge
push
out
xor
or
fst
mov
jno
mov
mov
loopne
ret
and
xor
and
jb
sbb
flds
or
dec
or
pop
iret
mov
test
insl
push
xor
push
dec
push
and
es
push
mov
cmp
mov
inc
iret
jle
jb
sub
cmpps
add
xor
int
outsl
mov
lcall
fcomi
and
insl
imul
data16
inc
xor
cld
mov
or
test
lds
mov
xchg
inc
and
adc
add
shlb
lret
in
or
in
cmp
xor
cmp
and
mov
popa
mov
jl
xchg
lahf
jnp
mov
xlat
xor
dec
stos
daa
xor
pop
sub
cltd
pop
pop
or
mov
gs
aas
dec
pop
sub
cwtl
lcall
lds
fidivl
pop
xchg
nop
jne
repnz
lock
sahf
pushf
xor
cmpsb
adc
ljmp
and
lret
sbb
into
inc
cmpsb
pusha
pop
shll
sub
inc
rcll
in
popl
xchg
sub
dec
xchg
xlat
stc
sub
scas
jno
xor
and
pop
out
mov
sbb
test
pop
arpl
or
dec
sbb
dec
repz
sti
mov
mov
cmp
push
lods
adc
popa
push
add
sbb
movsb
enter
sub
in
call
xchg
adc
imul
out
add
push
andb
add
xor
mov
sub
mov
pop
cmpsl
xchg
xchg
add
inc
pop
dec
xor
or
lret
and
out
inc
rcll
andl
repz
mov
insl
sbb
pop
pushf
xchg
lds
fcomip
pop
in
push
jae
xor
xor
sub
xlat
jl
pop
xchg
ficomps
sbb
sub
xor
aaa
mov
xchg
addb
sub
jnp
mov
push
jmp
std
fiadds
pusha
lret
sbb
pop
ret
imull
add
xchg
movsl
mov
stc
cmp
inc
inc
movsb
push
cltd
outsl
mov
out
imul
jl
cwtl
xchg
mov
add
mov
inc
pop
xchg
or
cld
pop
incl
mov
sahf
jge
jecxz
mov
ret
xor
arpl
add
add
fs
cmp
fs
mov
cltd
pusha
fcoml
mov
jno
clc
jno
sbb
addl
js
ljmp
popf
sbb
or
mov
pop
sti
xchg
imul
cmovge
xchg
fcomps
cmpsl
inc
xlat
loope
scas
add
aad
daa
fmull
xor
jne
mull
xchg
cmc
clc
arpl
dec
pop
aas
dec
cmp
xor
adc
and
xchg
sbb
repnz
push
mov
lock
daa
or
xor
loopne
aad
or
cmp
or
sub
into
xchg
push
mov
dec
sti
stos
leave
dec
push
popf
stos
in
mov
leave
jecxz,pt
lea
and
and
movb
sbb
repnz
add
fbstp
sub
cmpsl
fstps
imul
cmp
push
mov
fdivrl
cmp
xlat
mov
scas
mov
or
cmpsb
and
loop
vmaxsd
stos
push
adc
jl
and
cmpsl
sbb
faddl
je
lret
insl
cmpsb
fldenv
ljmp
inc
add
loope
pop
ficoml
jne
push
sub
test
sub
in
sub
leave
adc
std
and
push
sbb
scas
pop
cmp
inc
cltd
popf
adc
sahf
push
mov
imul
inc
push
in
fnstcw
push
sub
out
neg
movsl
or
pusha
inc
pushf
inc
inc
repz
mov
incb
iret
jle,pn
daa
into
lcall
imul
dec
dec
pop
js
mov
cmpsl
arpl
pop
fwait
je
dec
pop
xchg
shrb
sti
inc
lock
pop
int3
movsl
incb
jl
enter
xchg
cwtl
jbe
cmc
adc
jns
scas
or
sahf
out
pushf
push
lods
call
cmp
imul
sti
pop
add
aad
mov
push
fxrstor
or
ss
pop
cmpb
imul
es
call
pop
into
shrl
negb
push
push
cmpsl
inc
pop
cmp
pop
test
cltd
adc
leave
call
push
pushf
and
or
clc
jp
mov
pcmpeqd
mov
xchg
int3
mov
ss
sbb
jo
lea
add
fimull
mov
arpl
dec
mov
push
pop
loopne
or
adc
loopne
ljmp
xor
and
test
or
mov
loop
shlb
fmuls
inc
lahf
inc
ret
or
sub
and
inc
fmull
pop
mov
rcrl
mov
mov
pop
dec
inc
dec
lcall
sbb
add
adc
ljmp
pop
rcl
inc
push
ret
outsl
mov
lock
scas
xchg
call
xor
into
mov
push
stc
movsl
inc
ljmp
and
xchg
sarl
std
iret
mov
xchg
je
pop
pop
rclb
or
ret
mov
mov
push
mov
lock
sub
push
pop
test
xchg
lods
stc
mov
inc
cld
or
mov
add
movsl
and
test
stc
bound
pop
mov
ss
mov
xor
cmp
mov
shrl
loope
nop
pop
pop
mov
test
sub
roll
jns
loop
or
imul
mov
std
sbb
into
lret
popl
lods
mov
imull
inc
dec
sarl
sarb
push
in
adc
or
test
dec
popa
push
movsl
sub
mov
sub
xor
aas
sbbb
sbb
inc
xor
or
sub
xor
bound
add
ret
stc
mov
pop
and
test
jb
loop
shl
push
xor
lods
lahf
addb
test
xlat
ret
fadd
pop
xchg
lods
sbb
scas
dec
cmp
mov
xor
cltd
sub
sbb
xchg
repz
push
mov
jle
and
shll
push
fwait
lods
adc
into
inc
mov
lret
cmp
shlb
mov
xchg
out
xchg
sub
out
adc
loop
xchg
push
pop
incb
and
sub
mov
or
xchg
mov
lret
cmp
nop
arpl
gs
inc
push
push
xchg
sub
jg
add
lret
lods
shrb
movsl
shrl
lcall
in
movsl
es
in
inc
sbb
fidivrs
rcl
pop
push
or
push
cmp
fiadds
addl
push
xchg
jo
sbb
dec
or
mov
cmc
cmp
in
cmp
sti
fistpl
icebp
pop
mov
cmpsb
sahf
push
repz
dec
dec
dec
push
dec
imulb
pop
fnstenv
test
in
outsl
pop
rep
push
pop
cmp
pop
jmp
or
jns
outsl
xchg
xchg
mov
xchg
std
push
sub
in
out
fcoml
lret
push
aam
cld
xor
test
sub
pushf
jecxz
dec
pusha
jbe
aaa
add
fwait
aas
outsb
dec
idivb
lcall
sahf
fdivrs
jl
aaa
int
insl
out
mov
rorb
faddp
stos
or
pop
or
inc
add
out
xor
dec
mov
push
test
out
nop
out
jae
int3
ret
stc
jecxz,pt
push
sti
jne
pop
cmp
cmp
mov
push
xor
push
call
js
das
rol
int3
imul
lret
cmp
cltd
push
fs
mov
in
mov
test
xor
push
repz
sub
shrb
jg
sbb
inc
or
insb
ss
ja
test
push
or
xlat
adc
iret
test
je
enter
out
add
int3
xor
call
loopne
adc
sub
mov
shll
xchg
mov
xor
and
pushf
lds
mov
xor
push
arpl
push
push
dec
loopne
movsb
pop
xor
int3
dec
dec
jg
dec
mov
jg
ds
cmp
rorl
fsub
je
pop
inc
xor
pop
xchg
dec
ds
mov
pop
std
xchg
mov
pop
ss
adc
sbb
shlb
jl
adcl
fcoml
jmp
icebp
cmpsl
cmp
jbe
push
pop
jae
push
in
or
outsb
cmp
mov
jb
add
xorb
es
jo
sbb
repz
sbb
adc
mov
aas
inc
sub
mov
nop
pop
andl
ret
jnp
xchg
sub
shll
sbb
insb
jg
jb
jge
sbb
lods
cmc
aam
mov
pop
in
mov
adc
fisubs
std
push
iret
aas
pop
lds
sbbb
jecxz
mov
and
lret
nop
into
jns
out
push
inc
ret
mov
inc
fwait
icebp
sub
orl
mov
imul
mov
lock
fstpt
push
and
inc
aad
sbb
mov
fcmovnbe
pop
add
dec
push
mov
hlt
xor
ret
jb
nop
popf
enter
dec
inc
inc
inc
outsb
ficoms
out
imul
in
les
and
out
mulb
push
cmpsl
movsb
or
jmp
push
cmp
loopne
sti
pop
sub
stc
mov
push
shlb
jmp
rorl
push
mov
adc
mov
jbe
jge
arpl
inc
ljmp
into
xor
fstpt
rcrl
sbb
adc
dec
sbb
and
mov
mov
outsb
fwait
sbbb
enter
ret
xor
adc
test
push
jae
sbb
push
push
jbe
or
mov
negb
mov
and
adc
mov
cmp
popa
jne
xchg
sbbb
adc
imulb
mov
mov
adc
jne
rolb
out
push
out
jb
mov
and
hlt
add
insl
inc
jg
ret
rcrb
adc
test
out
shlb
sarl
mov
pop
inc
in
jb
stc
mov
lods
sbb
jl
cmpb
cwtl
in
scas
mov
cmove
in
ds
imul
mov
mov
push
mov
inc
aas
push
cmp
hlt
jae
mov
icebp
or
or
or
push
daa
sub
xchg
mov
outsl
lret
xchg
inc
mov
mov
sub
cmpsl
xchg
and
inc
repz
test
add
stos
mov
js
gs
pushf
sbb
xlat
adc
das
pop
dec
aad
xchg
arpl
mov
mov
inc
cmpsl
mov
cmpsb
mov
jae
xor
fimuls
and
dec
xor
test
add
lea
paddusb
test
or
mov
mov
sub
int
pop
movsl
test
mov
test
sub
inc
mov
clc
adc
lods
cmp
pop
int
jb
xchg
faddl
ret
or
push
sub
arpl
adc
ss
pusha
shlb
dec
iret
adc
lock
cwtl
cmp
sbb
fcomps
mov
and
and
jne
xor
jne
into
mov
push
sub
mov
les
int
ds
jbe
and
insl
iret
jl
sbb
loop
push
dec
cmp
xchg
iret
orb
cs
xor
adc
or
or
lods
lock
cltd
pop
out
xor
loop
dec
pushl
test
mov
sub
test
cmc
pop
jnp
pop
fdiv
sub
pop
mov
dec
iret
test
enter
or
adc
mov
xchg
xchg
sbb
or
sub
dec
sbb
aaa
or
addl
out
sahf
cmc
dec
jmp
mov
test
inc
lahf
filds
pop
add
jns
add
in
sbb
sbb
out
bound
fbld
test
dec
je
data16
push
fisttpl
punpckhdq
es
dec
js
aad
cmp
int
or
out
adc
sub
mov
jnp
fs
mov
int3
sbb
push
sbb
rcrb
vmwrite
or
int3
cwtl
lcall
pop
push
xor
data16
mov
out
mov
sub
lods
mov
jmp
sub
push
dec
lret
insl
mov
arpl
push
je
leave
xor
jbe
test
shrd
pop
lock
pop
jg
out
pop
and
or
aas
jnp
or
push
mov
or
enter
mov
incl
jg
xchg
or
mov
leave
ss
and
popf
out
sub
add
mov
lods
mov
adc
ljmp
ret
sub
and
adc
add
fidivrs
loop
pop
std
jno
enter
inc
fdivrp
sub
dec
fisttps
pop
pusha
shrb
inc
mov
pushf
push
clc
leave
into
xchg
inc
nop
sbb
cmp
dec
js
jo
sbb
fwait
xchg
jp
dec
sub
cltd
push
popf
jns
flds
mov
inc
mov
lds
sbb
dec
lds
sbb
mov
icebp
push
popa
dec
das
out
cmc
or
xor
aas
pop
loop
cmc
stos
js
or
lret
jmp
pusha
js
inc
xchg
lods
insb
fwait
je
inc
add
jo
adc
faddl
rorl
cmp
dec
cmc
jnp
jno
faddl
mov
adc
xlat
es
lods
xchg
mov
pop
inc
test
pop
mov
jmp
jb
movsl
sbbb
xor
inc
jne
inc
adc
adcl
lock
cli
int
xchg
arpl
push
push
imul
lds
aaa
mov
gs
cmpsb
clc
sub
shrl
fcoms
push
jecxz
lret
sbb
mov
and
push
push
push
lahf
cmp
sub
adc
sti
ss
add
repnz
pop
das
pop
push
lcall
in
stos
js
hlt
or
rclb
imul
jb
shl
mov
mov
sbb
jp
leave
fldt
xor
inc
mov
cmpsl
mov
scas
lret
cltd
push
shrl
mov
out
add
xor
pop
clc
test
dec
adc
loop
scas
push
rolb
sbb
addr16
cltd
and
mov
scas
jne
or
int
push
aad
fildl
mov
nop
testl
stos
inc
and
jg
fmull
popf
and
lcall
mov
sarl
mov
fists
inc
pop
std
outsl
xor
and
repz
add
ret
je
dec
mov
mov
mov
add
addl
stos
dec
and
mov
jge
jno
jg
shlb
test
sub
jae
pushf
or
loope
icebp
in
add
pop
sbb
inc
es
pop
gs
test
gs
inc
xchg
inc
rolb
add
je
jbe
push
fmull
and
mov
fucomp
jle
mov
out
push
add
pop
cmp
cwtl
bound
dec
jns
loopne
or
jge
sub
in
fcmovne
movsb
xchg
xor
dec
add
dec
sbb
jg
xchg
addl
rorl
insl
int3
jo
xchg
xchg
lea
call
adc
jno
hlt
mov
lret
xchg
mov
pop
jle
insb
movsb
jb
sbb
scas
insl
in
xor
xlat
mov
push
repnz
dec
iret
pusha
mov
sbb
or
aaa
imul
mov
leave
mov
sub
out
xor
dec
test
out
push
push
mov
ss
out
loope
mov
push
jge
jae
jp
mov
out
in
add
mov
insb
mov
data16
pop
add
in
test
mov
jmp
in
sub
imul
dec
repz
xor
out
inc
jle,pt
xchg
jp
das
push
out
scas
in
sarb
in
fstps
add
hlt
std
jo
add
addr16
ret
mov
stc
or
dec
in
ret
xor
jae
test
lahf
orb
scas
imul
xor
pop
lds
pop
arpl
data16
dec
xchg
lea
adc
mov
jae
shll
fnsave
test
add
and
sub
outsl
mov
or
sarl
clc
test
test
fcoms
popa
cmp
push
adc
adc
call
inc
aas
fcoml
cmp
andl
out
pop
jmp
cmpsl
sbb
lock
adc
sub
sti
mov
dec
int3
ret
xchg
push
outsl
pop
push
sar
nop
bound
aam
outsl
or
outsb
daa
and
fidivs
aam
jnp
addr16
popa
add
jp
xchg
push
sbb
inc
clc
push
call
jle
xchg
cwtl
xor
repnz
das
lds
std
xlat
inc
xor
inc
lds
pop
dec
cli
stos
jg
movsb
lret
sub
into
or
dec
xor
mov
cmpsl
imul
pop
xchg
dec
push
stos
loope
jle
inc
xor
loope
les
bound
popa
pop
pop
fimull
in
and
hlt
fcmovne
mov
cld
mov
push
icebp
sti
out
pop
jl
mov
cmc
clc
fnsave
ret
dec
fwait
test
pop
xor
jl
mov
subb
xchg
pop
push
out
ja
rcrb
ss
or
add
mov
pushf
fsubrl
jge
adc
int
dec
sbb
jno
xchg
enter
xchg
scas
movsb
jecxz
push
shlb
int3
xchg
test
sbb
sbb
and
fnstcw
mov
dec
mov
mov
jb
divb
or
push
in
aaa
xchg
out
push
roll
push
shlb
mov
xchg
mov
xor
into
or
sbb
orb
mov
pop
or
dec
cltd
movsb
test
imul
push
push
jbe
rcrl
fiaddl
aad
cmpsl
repz
pop
jne
xor
sub
push
jecxz
mov
add
clc
clc
push
dec
mov
add
sub
js
stc
testb
cmc
repnz
dec
jp
push
and
lahf
fmul
mov
jg
xchg
repnz
movsl
or
jb
inc
mov
push
inc
add
pop
adc
cmp
notl
fwait
lahf
dec
cmc
sbb
add
addr16
lds
inc
and
dec
fsubrl
adc
and
mov
insl
fildll
sahf
and
mov
xor
adc
mov
lahf
xor
mov
js
push
cmpsb
hlt
imul
cld
push
push
scas
sbb
dec
out
cmc
addr16
fs
imul
sub
fbld
rolb
sbb
pusha
popf
cmpsb
fs
push
xchg
in
into
loopne
add
push
pusha
pop
mov
inc
outsl
jge
iret
imul
stc
data16
mov
inc
lcall
test
sub
jo
movb
push
lods
push
aas
and
dec
data16
pop
sub
jmp
jmp
jae
or
inc
addr16
out
incb
loop
cs
xchg
add
mov
or
fildll
stos
sahf
inc
or
mov
cmp
lret
imulb
mov
jnp
sub
clc
fimuls
or
mov
xchg
pop
scas
jmp
adcl
fidivrs
call
cwtl
in
adc
adc
in
stos
dec
and
push
shl
sub
addr16
rcrb
sub
add
mov
add
in
fsubrl
mov
adc
jle
loope
xor
mov
cwtl
insl
pop
stc
sub
mov
jbe
pop
and
push
cmp
cmc
push
mov
out
es
mov
shlb
aad
outsb
or
pop
enter
out
jecxz
xchg
pop
imul
loop
sub
and
stc
xchg
sbb
jo
cltd
mov
lret
ret
out
jl
jg
mov
dec
sbb
sub
jno
shll
mov
lahf
dec
jmp
mov
dec
xchg
movsb
clc
mov
mov
inc
xor
xchg
and
ds
stos
mov
popf
xor
mov
test
in
jmp
movsl
cmpl
mov
sub
and
stc
mov
out
xor
xchg
mov
sub
sbb
xor
dec
or
clc
cmp
cmpsb
adc
mov
aas
cmp
int
mov
rcrl
ret
and
ds
add
xor
aad
into
in
loope
movsb
aam
push
sub
js
xor
jle
fcoms
jecxz
sbb
test
jmp
ds
arpl
sti
mov
out
lret
or
stc
movsb
add
mov
outsl
daa
cmp
movsb
jb
mov
outsb
aad
sti
out
cmp
std
test
js
pop
into
and
inc
clc
out
jle
insb
call
sti
mov
sbb
ds
mov
push
pop
mov
loopne
xchg
arpl
xchg
dec
xchg
icebp
lahf
sbb
xchg
scas
adc
lahf
in
and
dec
xchg
movsl
les
pop
or
inc
out
test
jp
nop
shrl
popa
inc
sub
addr16
ss
arpl
push
mov
dec
cmp
mov
push
movsl
cmp
int
jne
jae
aas
and
dec
aad
insb
aad
popf
scas
push
fnstcw
inc
push
stos
mov
sub
fld
scas
mov
sub
test
arpl
vsqrtss
pop
jmp
dec
shll
arpl
and
pop
in
test
lret
pop
inc
or
push
popf
inc
cmp
out
ret
lds
mov
xor
int3
xor
sbb
ja
aas
push
add
sbb
mov
arpl
repz
movl
add
mov
sub
shr
inc
data16
adc
mov
xor
cmp
jmp
inc
repz
add
mov
fsubs
jmp
in
push
out
mov
xor
pop
loope
adc
xchg
xchg
cmp
std
and
bt
in
das
cmp
cmp
aam
mov
add
cmp
mov
dec
in
pop
adc
call
aas
addr16
dec
gs
stos
ror
cmp
push
fstps
daa
jb
data16
dec
cmp
dec
cmp
rorl
jnp
lock
cmp
xor
push
aam
pop
cmp
dec
xor
add
or
sahf
mull
icebp
popf
cmp
ja
out
mov
jecxz
jle
ret
mov
rcl
add
mov
icebp
xchg
lods
sub
or
dec
jle
dec
push
mov
fsubl
and
shll
test
mov
insb
push
sub
jp
xchg
push
inc
fidivrs
mov
xchg
out
and
lock
sub
sub
pusha
adc
loope
cltd
rcl
aam
ljmp
dec
test
leave
mov
outsl
stos
xor
fcmovbe
in
mov
inc
cmpl
ret
and
jmp
or
push
push
inc
dec
std
ljmp
mov
ret
jp
jmpw
dec
sar
outsl
xor
cmp
jo
pop
fildll
vmovdqu
jnp
data16
ret
and
and
hlt
stc
icebp
jl
in
mov
jl
mov
jmp
cli
push
mov
fdivr
pop
mov
fbld
jg
rcll
addr16
testl
or
xor
imul
lahf
cltd
nop
dec
push
adc
and
or
cmp
fidivs
push
insb
push
pushf
push
ss
cmpsb
sahf
out
lahf
mov
mov
mov
jecxz
hlt
cmp
sar
fidivrs
pop
pop
jns
gs
xor
cmp
jg
int3
mov
fs
sbb
loope
jg
and
pop
lds
scas
popa
lret
fwait
mov
fldl
jae
jle
dec
push
dec
xor
sub
mov
dec
loop
xchg
leave
lods
cmpsl
rcrl
popf
mov
xchg
fmul
pop
loopne
scas
lret
pop
jle
jne
iret
and
shll
rorl
pop
cmp
leave
stos
push
or
popf
leave
stos
or
icebp
fcmovnu
sub
jp
sub
stc
lds
gs
js
mov
jnp
pop
inc
mov
movb
clc
aas
add
dec
stos
xor
addl
inc
push
repz
lock
stos
xchg
stc
leave
push
mov
or
adc
pushf
mov
ret
cwtl
sub
lahf
sbb
dec
mov
cmpsb
xchg
ficoml
out
fwait
jbe
inc
icebp
ds
sub
adc
notl
jp
bts
jns
pop
insb
cmp
cmpl
mov
jge
xor
rcrb
into
inc
testl
icebp
test
leave
dec
out
icebp
shll
fcompl
shlb
insb
lret
mov
cmp
shrb
fistps
repz
fisubrl
mov
mov
in
pop
loope
aaa
dec
imul
ljmp
je
push
jo
inc
inc
repz
xchg
in
js
adc
xor
xor
arpl
or
add
fs
lds
mov
fs
gs
stc
outsl
setp
add
or
push
adc
insb
hlt
js
mov
sub
setl
mov
out
fs
arpl
iret
jns
lcall
lds
mov
xchg
mov
cmpsl
outsb
aas
popa
gs
and
ret
stos
repnz
xor
sbb
cmpsb
mov
repnz
jo
and
add
mov
cmpsb
and
mov
mov
xchg
xor
jne
xor
divps
xchg
mov
inc
arpl
out
add
pop
push
aad
sbb
enter
xchg
cmp
push
cli
inc
fsubl
enter
in
jno
je
or
shrl
cmp
rorb
mov
xchg
cld
dec
in
shl
mov
scas
cltd
push
icebp
or
xchg
sub
mov
std
mov
stc
adc
inc
cwtl
sub
jbe
push
ljmp
jno
push
stc
jae
scas
bound
repnz
jbe
xchg
mov
xchg
xor
lahf
das
jbe
sbb
mov
repz
imulb
adc
and
xorl
cs
pushf
jecxz
jbe
xor
inc
dec
xor
lcall
scas
adc
push
cmp
ret
add
mov
cmc
push
sbb
xchg
and
cmp
push
mov
int
sbb
push
cli
push
repnz
out
pop
movsb
pop
sbb
push
mov
fldenv
sub
lea
das
ss
dec
or
sbb
das
push
daa
andb
test
add
push
mov
and
lock
nop
mov
outsl
mov
fcom
jg
stc
jmp
hlt
cmpl
push
add
cld
movsb
sbb
and
dec
cmp
pop
or
mov
jle
test
cwtl
outsl
mov
mov
sbb
cld
lea
pusha
lahf
loope
test
inc
in
lock
and
pop
mov
lods
test
stos
cmpsl
jns
int
add
mov
sbb
mov
fnstenv
into
in
sub
mov
ja
add
mov
xlat
dec
in
out
inc
or
sete
xchg
ljmp
dec
adc
fsubl
pop
bound
mov
aam
push
sbb
fisttpl
dec
pop
test
or
pop
pop
icebp
or
jbe
and
loop
dec
mov
cltd
rolb
ret
push
mov
aaa
fwait
cwtl
insb
sub
pop
out
ret
cld
imul
aaa
and
jle
flds
jp
add
aas
fs
inc
xchg
jae
loopne
or
ds
cmp
jbe
mov
xlat
cmpsb
add
push
jo,pt
popf
push
jnp
adc
rcrb
add
arpl
add
sbb
cwtl
xor
xchg
mov
dec
inc
icebp
inc
cltd
pushf
loop
pop
jmp
sbb
cmpsb
push
data16
sbb
sbb
or
mov
std
test
stc
add
dec
int3
jmp
jp
sahf
sub
add
or
mov
pop
add
jle
cmpsl
sbb
mov
mov
mov
sbb
pop
xor
repz
inc
data16
into
sub
mov
jg
mov
push
mov
dec
mov
pop
scas
and
cmp
push
jmp
movsb
xor
mov
inc
inc
cs
or
ret
push
fcompl
add
aas
je
jle
les
ss
jl
adc
adc
sar
or
ret
lret
in
inc
mov
add
jno
or
xor
or
cmpsl
sbb
scas
push
mov
sbb
xchg
xchg
adc
xlat
lcall
or
adc
xchg
xor
icebp
out
pop
fs
push
hlt
dec
fwait
push
add
test
scas
jp
sub
and
dec
sti
cmp
loope
and
dec
and
lcall
imul
and
dec
inc
push
inc
add
into
sbb
mov
xchg
ret
xchg
sub
xor
outsl
cmpsb
sub
sbb
fwait
ds
pop
dec
imul
imul
ret
sbbl
imul
je
pop
sub
cmp
pop
imul
decb
jb
xchg
sbb
testl
or
add
outsl
add
aam
mov
cmp
repz
mov
sub
and
or
pop
add
pusha
and
sub
inc
test
dec
aad
stc
mov
cs
inc
pushw
ljmp
aad
lahf
push
movsl
mov
and
adc
dec
push
ficompl
and
dec
cwtl
xor
std
adc
mov
push
sub
xor
jne
in
dec
xchg
inc
mov
arpl
sahf
into
call
push
out
cwtl
inc
fistpl
jne
stos
js,pt
out
stc
xor
hlt
mov
sub
popf
jecxz
sub
mov
mul
outsb
es
out
inc
xor
ja
out
jo
imul
mov
jmp
xor
mov
and
push
inc
dec
pop
mov
movb
sbb
xchg
outsl
push
sub
test
or
mov
add
inc
cmp
icebp
pushf
adc
and
mov
pop
jmp
pop
adc
mov
fsubr
iret
in
push
or
pushf
xchg
pop
repnz
push
jb
push
movsb
rcrl
out
or
stos
insb
mov
and
dec
es
lahf
or
push
or
decb
mov
loop
add
orl
movb
lds
inc
xor
or
inc
je
aam
into
mov
fstpt
fcmovnbe
or
pusha
cmp
dec
dec
xor
mov
sbb
fidivrl
test
outsb
lock
aas
xor
inc
test
lods
gs
mov
fcoms
xchg
mov
dec
sti
loopne
push
js
mov
jecxz
js
jmp
movsb
xchg
inc
cld
pusha
sbb
add
test
sbb
mov
scas
jb
sbb
lahf
testb
bound
pusha
xor
imul
mov
imul
inc
movb
dec
adc
shl
imul
scas
enter
out
push
mov
ljmp
fildll
popf
dec
imul
dec
xchg
xchg
fisttpl
jg
jns
mov
sbb
insb
loop
cmp
lret
and
std
movsl
add
sub
xor
clc
cmp
pusha
icebp
pop
lahf
or
xlat
dec
xor
mov
rolb
enter
jle
aad
cmp
cmp
clc
ds
std
mov
out
mov
aaa
test
sar
inc
mov
mov
decb
cmpl
cmp
scas
mov
mulb
cmp
sarb
sbb
pop
iret
sbbl
sbb
enter
dec
or
iret
test
adc
inc
sbb
xchg
mov
test
mov
add
in
int3
add
lahf
testl
xchg
lret
cmp
sbb
rclb
mov
inc
ret
dec
mov
pop
xchg
cmc
push
aam
ficoml
cwtl
dec
xchg
loop
mov
aas
cmp
jle
xchg
xchg
fisttps
stos
movsl
or
mov
xor
jmp
nop
cmp
push
sbb
fisubs
and
sub
imull
sbb
sub
in
aad
xor
ja
sbb
mov
das
push
sub
movsb
jbe
sarl
pusha
dec
jnp
test
mov
push
sbb
ret
pop
jne
js
mov
stc
adc
mov
mov
ret
push
push
cli
loop
loope
ljmp
jae
xchg
sub
jnp
sbb
push
push
shlb
int3
xchg
adc
in
sbb
mov
sbb
int3
xchg
xchg
mov
inc
mov
nop
fdivl
mov
aas
jmp
mov
adc
pop
inc
jo
popa
clc
test
les
rclb
lods
ds
repnz
sbb
cs
daa
adc
jb
int
ja
popa
sarb
mov
imul
aas
dec
cmp
aad
push
rorl
dec
dec
or
mov
imul
jbe
sub
enter
inc
js
push
mov
iret
mov
ds
jmp
xor
sbb
rclb
dec
iret
and
stos
outsl
notl
pop
jp
sti
leave
fsubl
mov
lcall
cmp
into
dec
lcall
pop
lods
or
jne
and
sti
inc
dec
stc
scas
clc
sub
xchg
push
sbb
lods
sub
mov
call
push
dec
xor
imul
push
mov
and
push
dec
test
or
test
dec
fstps
fwait
sbb
jbe
or
xor
int
icebp
cmc
dec
faddl
mov
inc
mov
shl
repz
fcom
stc
push
dec
cmc
mov
aaa
lea
stc
movsl
mov
dec
enter
xchg
mov
jmp
jg
cltd
pop
pusha
cmpsl
xchg
inc
fwait
mov
ret
iret
in
xor
scas
mov
add
xor
fsubs
bound
and
shr
iret
mov
inc
insb
jp
push
mov
xor
loop
push
xchg
ret
mov
psubw
cmpl
mov
cld
je
cmp
cmp
fadds
xchg
push
bound
push
mov
test
jne
fyl2xp1
add
mov
sbb
outsb
mov
pop
pop
push
cli
mov
cwtl
mov
jno
pop
or
pop
mov
and
lret
fdiv
sbb
fwait
mov
sub
leave
daa
div
xor
adc
iret
jb
ss
xor
pop
test
cmpl
cwtl
fistpl
mov
jmp
lret
cwtl
inc
outsb
stos
sub
in
loop
or
inc
lret
dec
sub
test
adc
lret
ja
aaa
icebp
pop
cmp
imul
loop
mov
pop
shrb
pop
inc
inc
rolb
sti
scas
xchg
pop
popa
leave
shll
ret
loopne
push
jnp
insb
jmp
push
mov
fstps
cmp
push
je
mov
sbb
loopne
push
hlt
lcall
push
out
aaa
push
sbb
push
test
add
movsl
jno
insb
in
adc
and
cmp
mov
imul
add
negl
sub
mov
mov
xchg
push
icebp
sahf
lahf
adc
rcll
pop
xchg
in
mov
cmp
sti
or
bound
adc
xchg
das
popa
mov
dec
shl
jle
push
pop
cltd
js
mov
cmp
and
imul
test
inc
repz
fucomp
dec
mov
test
push
xor
cmp
mov
add
adc
push
rcrl
out
mov
aaa
push
xor
add
pop
cmp
loop
inc
and
out
in
out
lret
imul
loopne
jle
sti
xor
mov
mov
imul
sarb
xchg
mov
pushf
xor
repz
ds
arpl
mov
add
pop
in
ss
arpl
adc
push
jno
push
andl
popf
imul
xchg
leave
xchg
sbb
jbe
jae
adc
adc
addl
mov
scas
ss
pop
dec
mov
xor
mov
cs
aas
sbb
mov
jo
mov
gs
xchg
sti
aaa
mov
stc
test
cs
xor
ds
or
mov
adc
jnp
mov
jbe
xlat
and
push
xchg
imul
and
lea
arpl
pop
ficomps
mov
sbb
pop
xchg
push
enter
dec
and
jb
popf
mov
lods
gs
in
lret
jmp
fdivr
jb
jbe
mov
js
pop
or
fdivrs
pop
outsl
pushf
test
std
rcr
cmp
jns
dec
fcoml
push
stos
push
lods
or
jl
leave
mov
cmp
stos
in
xchg
scas
sbb
mov
into
lods
inc
jg
sub
cltd
mov
jno
adc
push
mov
call
sub
incl
push
jae
mov
cmpsl
mov
jl
xor
push
cmp
outsb
adc
lahf
add
mov
popa
aas
cmp
pop
sub
fwait
out
nop
xchg
or
push
push
rol
mov
adc
jl
dec
mov
icebp
mov
jmp
aad
int
imul
and
mov
and
out
pop
test
or
je
out
orb
loop
daa
push
pop
jmp
loope
imul
idivl
ja
repnz
iret
daa
adc
stc
dec
mov
push
std
in
fldcw
mov
imul
int3
mov
sysret
loop,pn
test
in
cld
nop
mov
pop
push
xchg
mov
lods
push
cwtl
adc
repnz
cltd
scas
push
cld
lcall
mov
xor
sarb
daa
lds
mov
imul
in
sti
rol
inc
sub
sub
mov
dec
ljmp
mov
fwait
ljmp
insl
mov
sbb
and
push
cmpsb
or
mov
stos
mov
fistl
jmp
ficomps
pop
lret
fdivrs
mov
lret
and
pop
sahf
cli
push
and
pop
cli
mov
mov
popf
lahf
dec
ss
pop
out
pop
sub
ljmp
outsb
hlt
decl
les
lock
outsb
xchg
sbb
outsl
jge
inc
dec
addr16
jnp
mov
aam
mov
or
add
jmp
fxch
jp
in
xchg
push
and
movsl
xchg
or
leave
fldt
test
and
popf
push
fidivs
push
push
icebp
inc
test
arpl
push
enter
ret
in
mov
add
jecxz
mov
cltd
xor
call
cld
and
hlt
adc
icebp
hlt
xor
and
adc
mov
cmp
jne
mov
lcall
repnz
and
enter
in
and
cld
aam
out
repz
sub
sbbb
stos
rcr
iret
jae
adc
push
xchg
inc
popa
popa
repz
and
dec
sbb
in
jae
loope
pop
outsl
hlt
lcall
push
sbb
ficomps
out
stos
push
mov
jecxz
mov
xchg
arpl
jg
lcall
inc
out
stc
mov
enter
or
mov
icebp
mov
sbb
test
inc
pop
test
dec
xchg
sbb
lods
clc
into
push
mov
ror
std
clc
adc
jbe
iret
dec
mov
xor
push
push
or
rorl
rolb
repz
or
xchg
inc
adc
cmp
loope
cltd
repnz
popa
inc
cs
cmpl
lods
scas
test
cmp
push
shll
ret
xchg
inc
mov
shll
ds
in
mov
mul
daa
push
or
pop
cld
push
inc
lds
rorb
and
mov
dec
mov
mov
cld
jle
jecxz
xchg
jne
and
aas
lds
mov
xchg
shrb
jp
xlat
push
jae
les
sahf
push
mov
sbb
push
mov
xchg
pop
and
aad
cli
push
mov
push
lret
pop
aam
mov
loop
xchg
adc
rorb
mov
inc
loop
lea
pushf
shrl
shll
xorb
in
or
stos
xor
stos
clc
xchg
mov
lahf
cmp
clc
xchg
es
arpl
cmp
cmp
or
xor
mov
push
mov
jmp
outsl
test
dec
push
add
jge
pop
dec
dec
rcrb
int3
in
movsb
shl
push
xor
mov
js
xlat
cmc
push
cmpsl
imul
push
and
sbb
fs
mov
push
and
pop
loopne
ret
inc
mov
sbb
cltd
cmp
repnz
dec
lods
pop
mov
push
mov
icebp
std
je
mov
loop
loop
push
sahf
xchg
xchg
mov
mov
mov
subb
push
shlb
xchg
rcll
int3
je
or
inc
sbb
mov
jecxz
iret
insl
cltd
test
mov
lods
push
mov
pop
and
fldt
pop
jno
out
mov
imul
cwtl
xor
fsubs
sarl
sbb
fisubs
mov
lret
or
inc
sub
fisubs
test
outsb
mov
xlat
sti
data16
daa
mov
out
int
setl
dec
xchg
sti
shlb
mov
add
sbb
out
push
or
enter
int3
cmp
jo
xor
call
int
adc
or
push
sahf
push
mov
dec
jo
dec
push
mov
ja
mov
pop
jbe
inc
shll
js
movsb
aam
mov
sti
pop
cld
jo
repnz
adc
push
adc
push
ror
test
cmp
pop
lock
or
and
shrl
push
inc
repz
push
adc
adc
jae
fs
push
push
lcall
inc
xor
fwait
xchg
popa
jnp
test
ljmp
or
mov
dec
into
dec
mov
mov
mov
and
xchg
popf
neg
dec
hlt
push
call
imul
imul
xchg
ja
mov
sahf
push
mov
fcompl
cmp
stos
es
mov
mov
xchg
test
dec
mov
jg
add
pop
aam
xchg
mov
push
js
dec
insb
fiaddl
bound
fwait
pop
mov
mov
dec
es
add
in
pop
xchg
icebp
fidivrl
xchg
cmpsb
cmpsb
test
jne
outsl
stos
pushf
sub
and
ss
pop
sub
push
add
adc
mov
test
lret
lret
jmp
jo
outsb
or
rcl
add
mov
dec
push
sub
xor
cs
sbb
inc
sarl
inc
popf
in
test
les
out
mov
cmc
sub
jno
scas
clc
lret
adc
lods
dec
jmp
push
xchg
mov
das
add
arpl
and
in
loopne
or
loop
mov
js
es
adc
add
aam
lret
pop
xchg
inc
cmp
sbb
xchg
add
or
mov
imul
mov
stc
mov
out
aam
dec
test
push
pop
and
test
clc
pushf
inc
pop
push
insb
jb
inc
push
inc
ds
testb
pusha
jmp
mov
add
jmp
jmp
xor
and
das
add
pop
xchg
xchg
xor
push
jmp
mov
pop
push
mov
add
push
push
jmp
adc
jmp
shr
enter
push
pop
push
pop
nop
mov
mov
rol
rol
ror
rol
ror
sub
add
add
xor
xor
sub
xor
xor
add
add
ror
sub
ror
add
mov
inc
inc
jmp
enter
jne
mov
add
push
mov
xchg
pop
push
mov
rol
ror
xchg
call
jmp
adc
push
mov
add
push
mov
xchg
pop
xor
push
jmp
mov
pop
push
push
call
pop
add
jmp
loopne
jmp
icebp
jmp
xor
call
jmp
lock
mov
add
xchg
xor
push
jmp
mov
pop
push
mov
xchg
pop
push
pop
jmp
mov
add
jmp
xchg
mov
sub
xor
ror
xor
sub
inc
add
ror
ror
rol
mov
inc
inc
xchg
jmp
enter
jne
nop
jmp
xor
je
incb
add
inc
add
add
notb
pop
sub
xchg
pop
call
jmp
adc
xchg
push
call
pop
add
jmp
loopne
jmp
test
push
mov
add
rol
push
mov
add
jmp
lock
rol
push
xchg
jmp
cvtdq2ps
icebp
jmp
adc
xor
push
jmp
mov
pop
push
push
dec
inc
jmp
pop
xchg
jmp
test
add
add
add
sarb
jmp
imul
fdecstp
sar
ret
push
shrb
roll
decl
lret
cmp
jne
mov
add
jmp
shr
enter
push
inc
add
xor
call
jmp
adc
xchg
push
mov
xchg
pop
dec
inc
push
pop
push
push
jmp
rol
jmp
adc
xchg
xchg
jmp
mov
push
jmp
lock
xchg
jmp
cvtdq2ps
push
and
inc
inc
jmp
xor
add
add
pop
add
jmp
loopne
push
pop
xchg
push
mov
xchg
pop
rol
xor
push
jmp
mov
pop
rol
ror
mov
add
sub
xor
add
dec
sub
xor
sub
sub
add
xor
ror
add
mov
jmp
roll
sti
jmp
cvtdq2ps
xchg
jmp
mov
cmp
jne
rol
inc
inc
mov
inc
inc
dec
inc
push
mov
add
push
jmp
push
mov
add
xchg
jmp
mov
call
jmp
adc
push
xchg
jmp
cvtdq2ps
out
add
push
call
pop
add
jmp
loopne
jmp
testb
inc
jmp
enter
add
mov
add
xchg
push
push
jmp
adc
push
jmp
lock
jmp
push
xchg
jmp
cvtdq2ps
ror
push
mov
add
push
mov
xchg
pop
mov
xor
sub
sub
add
add
xor
sub
ror
ror
xor
sub
sub
sub
sub
sub
xor
mov
inc
inc
jmp
lret
jmp
testb
sti
add
test
and
add
inc
jmp
enter
movl
pop
push
push
mov
add
call
jmp
adc
push
call
pop
add
jmp
loopne
jmp
xor
and
add
fistl
inc
add
add
push
xchg
jmp
mov
push
xchg
jmp
mov
jmp
adc
jmp
test
lock
jmp
testb
xor
add
jmp
xor
nop
dec
add
add
xchg
jmp
cvtdq2ps
and
add
jmp
xor
push
jmp
mov
pop
push
mov
add
jmp
imul
pop
add
jmp
loopne
jmp
imul
call
ror
sub
xor
sub
inc
add
sub
add
add
add
mov
inc
inc
jmp
leave
cmp
jne
xchg
jmp
shr
enter
add
rol
push
mov
xchg
pop
jmp
imul
add
jmp
xor
sti
jmp
mov
call
jmp
adc
push
xchg
jmp
cvtdq2ps
add
add
add
add
add
shr
push
xchg
push
jmp
adc
push
jmp
lock
add
push
mov
xchg
pop
mov
mov
dec
xor
rol
add
ror
xor
xor
sub
sub
sub
mov
jmp
ret
imul
jne
pop
push
mov
add
jmp
xor
push
mov
call
jmp
adc
push
xchg
jmp
cvtdq2ps
jmp
enter
lcall
add
add
pop
add
jmp
loopne
rol
xor
push
jmp
mov
pop
push
pop
rol
push
call
pop
add
jmp
loopne
xchg
mov
nop
push
mov
add
jmp
shr
enter
mov
pop
xchg
cmp
jne
push
xchg
jmp
cvtdq2ps
add
add
fisubrl
ret
leave
jmp
dec
push
push
cmp
pop
pop
je
jmp
leave
sub
movl
pop
mov
add
jmp
lock
adc
mov
jmp
shr
enter
jmp
xor
fmuls
push
mov
add
cmp
je
nop
push
mov
neg
sub
pop
inc
rol
rol
rol
rol
inc
push
push
rol
jmp
adc
mov
nop
push
push
cmp
pop
pop
je
mov
nop
push
mov
add
pop
jmp
pop
xchg
jmp
testb
add
xor
sti
jmp
testb
mov
neg
sub
pop
jmp
arpl
add
fwait
dec
add
ret
jmp
xor
sti
jmp
cvtdq2ps
movl
pop
mov
push
xchg
jmp
mov
add
jmp
sub
movl
pop
jmp
bnd
repz
shr
enter
jmp
icebp
push
pop
push
jmp
adc
push
pop
jmp
icebp
push
jmp
xor
add
call
xchg
jmp
mov
call
jmp
adc
jmp
jmp
daa
or
repnz
or
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sub
add
sub
add
sub
add
or
add
add
push
bound
inc
insb
insb
outsl
arpl
outsl
add
outsl
bound
inc
jb
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
jmp
push
push
mov
xor
add
add
mov
mov
inc
shr
mov
dec
je
shl
jae
push
mov
mov
shr
mov
mov
shr
test
je
and
shr
add
jmp
and
shr
add
and
test
je
dec
je
dec
je
and
add
jmp
and
add
jmp
and
add
jmp
and
add
inc
mov
add
sub
lea
cmp
jae
rep
mov
pop
shr
and
add
jmp
cmp
jae
mov
mov
inc
shr
inc
mov
jmp
pop
mov
pop
sub
pop
ret
jmp
push
outsb
popa
bound
je
and
js
imul
popa
bound
add
insb
jns
outsb
inc
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
