jmp
xor
and
add
mov
imul
add
jmp
jno
cmpb
add
jmp
popa
repz
jmp
js
jmp
jecxz
ret
aaa
pushl
jmp
out
adc
add
jmp
jmp
push
jmp
ds
jmp
ja
add
add
jmp
clc
mov
add
add
mov
jmp
daa
xchg
inc
jmp
clc
aad
add
add
nop
inc
popl
jmp
divb
jmp
ds
fsts
jmp
sub
int3
sbb
push
js
int3
xlat
jb
gs
cmpsb
ja
lods
ss
shlb
or
jnp
enter
shr
js
sbb
sbb
cli
xchg
decl
call
dec
or
test
mov
mov
cmp
pop
ror
and
lret
mov
adcl
icebp
aad
xchg
fsts
inc
stc
enter
test
add
mov
jns
ror
movsb
mov
fimuls
pop
adc
ss
cmp
int3
sarl
jnp
xlat
in
mov
sub
sbb
mov
subl
mov
lods
pop
pop
test
cmp
pop
cltd
push
or
iret
cmp
out
jnp
xlat
je
adc
add
aam
adc
ret
or
repz
out
fs
inc
fcompl
sub
imul
inc
sub
mov
xor
sub
jmp
sub
or
and
pop
testb
mov
iret
cmp
xor
inc
xchg
cmp
scas
sub
lea
push
js
int3
xlat
cmp
fsts
popa
dec
sub
mov
dec
xor
sub
push
aam
push
or
ficoml
xor
pushf
pop
cmpsl
loope
and
jl
out
insl
ja
jp
sub
or
mov
iret
cmp
jbe
subl
push
js
ror
inc
pushf
inc
cld
dec
rcl
pushf
pop
pop
inc
imul
or
shrl
dec
and
and
push
js
int3
repz
ret
add
xor
mov
dec
push
fcoml
ljmp
subl
mov
imul
cmp
cmp
sbb
mov
push
mov
stos
in
mov
adc
imul
cmp
ljmp
jge
cmp
repz
jno
inc
mov
and
mov
pop
pop
int3
or
out
dec
mov
daa
sahf
cmp
sub
test
sub
and
pop
push
jle
cmpb
sub
jmp
cmp
decb
js
ror
xor
dec
xchg
and
xor
dec
mov
dec
subl
push
subl
dec
je
push
js
int3
rcr
jmp
or
leave
test
and
int3
ljmp
iret
cmp
xor
jge
inc
xor
pushf
pop
dec
cmpsb
int
test
inc
push
aam
sbb
dec
pop
inc
xchg
mov
fcoml
push
dec
mov
or
jge
ret
mov
xor
enter
cs
imul
bound
rolb
mov
push
jge
push
mov
pop
int3
shl
sbb
mov
adc
xlat
mov
sbb
adc
js
subb
test
cs
sbb
out
jne
and
adc
add
aad
xchg
mov
ror
mov
mov
fcompl
push
clc
stos
fsts
push
inc
pop
cmp
sub
imul
xchg
push
outsb
cs
adc
cmp
cmpsb
inc
cld
stos
add
aas
pushf
pop
xor
icebp
push
dec
out
in
nop
and
dec
int3
ja
inc
sub
shrb
lea
les
sub
add
xchg
inc
sub
or
jae
stos
push
aas
push
faddl
and
adc
sar
cs
subl
sub
and
out
jbe
sub
xchg
pushf
pop
sbb
inc
into
mov
bound
inc
arpl
pop
or
imul
mov
in
adc
pop
shll
pop
mov
lret
stos
ss
subl
jno
xchg
sub
xchg
jae
and
mov
aam
push
popa
and
mov
xchg
and
outsb
lcall
and
out
dec
cltd
dec
ret
cld
aas
and
out
in
movsb
xchg
cmp
xlat
aas
push
fsubrl
mov
pop
cmp
sbb
cs
subl
imul
dec
js
ror
adc
xor
pop
dec
dec
sub
les
sub
mov
push
js
int3
fiaddl
sub
jge
rcl
subb
data16
imul
cmp
inc
test
dec
stos
sub
imul
mov
push
jle
and
mov
loop
ss
int3
or
sarl
inc
das
pop
dec
jl
push
mov
mov
dec
or
stc
popl
push
and
mov
clc
jnp
add
fwait
das
adc
js
mov
inc
sbbl
sub
fimull
loop
pop
jo
xchg
sub
cmp
movsl
ret
mov
subb
test
lods
mov
in
inc
je
push
jecxz
shll
ds
icebp
fisubrl
xchg
sub
xchg
xchg
push
add
lahf
or
push
es
aas
ss
mov
aas
cli
out
pop
push
loop
idivl
push
cltd
dec
dec
jle
out
inc
xor
cld
arpl
xlat
pop
mov
add
aaa
repz
int
lods
jecxz
js
int3
sbb
xor
mov
insb
shll
and
adc
out
aad
js
sbb
push
call
mov
ss
push
push
or
jmp
or
addr16
fsubl
mov
inc
dec
fdivrl
cld
dec
decl
scas
cs
inc
dec
test
je
aas
xchg
fdivrl
aas
hlt
or
jmp
xor
stos
into
xlat
inc
push
imul
cmp
sub
push
aas
push
fsubrl
push
aas
push
lcall
movsb
mov
in
mov
imul
cmp
imul
jg
fcoml
sub
stos
sub
pop
ds
fsubrl
bnd
insb
pushf
pop
xchg
imul
enter
mov
movsl
push
jmp
sbb
or
push
js
mov
pop
add
aam
ja
push
js
or
push
aaa
sub
setno
pop
fdivrl
lret
pop
testb
cmp
add
fstl
popa
imul
das
sahf
into
sar
repnz
add
aad
push
sub
and
ljmp
js
add
and
cli
sbb
pop
scas
cmp
dec
mov
cmc
mov
aas
xchg
fdivrl
outsl
lret
jl
mov
sub
imul
and
sar
cmc
lea
cmpsl
jbe
push
js
popa
dec
aas
jl
test
lea
rcl
push
insl
push
sti
imul
jle
out
mov
ds
fsubrl
loop
std
and
rcl
push
fistl
dec
shl
mov
pop
dec
aas
cld
in
das
mov
push
fcoml
fidivrs
cmp
inc
dec
aas
xchg
or
and
sub
mov
xlat
pop
repz
das
int3
js
ror
and
addl
inc
inc
dec
sub
mov
aad
xchg
fdivrl
or
imul
sub
shll
push
fcoml
ljmp
test
imull
or
cmp
stos
nop
movsl
push
jmp
outsb
dec
mov
call
imul
imul
aam
lret
pop
push
push
jnp
clc
fcompl
cmp
xchg
subl
pop
and
mov
push
add
in
out
push
and
fisttpl
lea
push
js
into
xlat
sub
sbb
sub
imul
shrl
aam
sti
imul
stos
aad
mov
rcl
pop
loopne
xor
inc
sub
inc
mov
inc
aam
xchg
incl
mov
cltd
push
pop
sub
jno
andb
rcl
shl
inc
das
push
jecxz
testl
icebp
rolb
cs
dec
stc
cmpsl
sbb
pop
lods
jg
jge
mov
mov
jnp
aad
iret
pop
int3
fdivl
int3
fdivl
insl
add
int3
or
pop
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
insl
add
int3
or
pop
int3
fdivl
int3
fdivl
int3
fdivl
lds
enter
pop
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
fdivl
je
data16
pop
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
jo
imul
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
mov
or
pop
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
int3
fdivl
gs
dec
hlt
pop
sub
hlt
mov
push
jmp
cld
pop
arpl
cmp
nop
in
test
dec
pop
shlb
adc
outsb
push
push
iret
jnp
arpl
xor
rclb
mov
mov
ljmp
fdivp
leave
mov
or
fsts
xor
or
lds
fdivrs
sub
sbb
xchg
je
xor
cs
mov
xchg
pusha
stc
xchg
add
cli
pop
addr16
orb
les
and
sub
and
imul
and
sub
in
movl
mov
aad
jl
cs
add
bound
adc
cmpsl
pop
adc
jo
lahf
std
sbb
inc
jbe
and
icebp
or
push
mov
add
mov
adc
sti
cmc
pop
test
fsubrs
addr16
pusha
and
cmpsl
jae
cli
and
jge
mov
stos
adc
push
mov
inc
imul
adc
mov
mov
sti
scas
hlt
ja
jmp
jmp
daa
fstl
adc
sub
icebp
jl
cmpsl
sbb
iret
fs
mov
mov
sbb
das
cltd
push
fs
jmp
nop
sahf
or
insb
jne
arpl
inc
pop
lret
cmp
dec
mov
sahf
xor
add
jg
adcb
and
std
dec
inc
ja
dec
popf
fcomps
testl
subb
jmp
sub
cld
outsb
sbb
mov
xor
cld
gs
dec
insb
add
fwait
icebp
dec
and
cmp
lcall
push
cld
adc
xchg
call
aad
add
enter
rcl
imul
cmp
shrl
xchg
mov
adc
push
add
cmp
call
jns
cmp
mov
xlat
stos
sbbb
lods
cmc
subb
dec
aaa
es
xor
add
lods
push
cmpsl
mov
lea
minps
pusha
loopne
int
xchg
andl
sarl
int
gs
cmp
and
or
pop
xor
adc
ds
leave
mov
pusha
cmp
push
pop
mov
xor
stos
sub
int
mov
adcl
push
ror
dec
pop
aas
fs
inc
jecxz
and
push
and
cmp
shlb
inc
testl
clc
sub
push
icebp
scas
ret
sti
es
jo
lcall
jb
inc
stos
inc
push
scas
out
icebp
sub
adc
push
lods
dec
mov
mov
insb
icebp
mov
cmpsl
ja
mov
fwait
dec
xchg
in
sub
fdivr
sbb
jno
fsubs
xor
pop
mov
mov
movsl
sub
pop
imul
sbb
stos
mov
push
sbb
push
push
push
push
dec
cmp
loope
ljmp
test
cmp
in
out
mov
mov
cmpb
test
sbbl
outsl
mov
sub
hlt
mov
mov
cli
push
cmp
cs
loop
jp
xchg
cmp
pop
lock
mov
cltd
mov
push
adc
adc
mov
or
xchg
in
das
xchg
dec
mov
loope
adc
cld
add
xor
push
cltd
xor
mov
cmpsl
lahf
pushf
or
pop
and
or
inc
jb
test
push
shl
lods
in
jae
push
sbb
xlat
fsubrs
dec
or
outsl
pop
dec
clc
in
loop
dec
jg
pop
lods
inc
push
mov
jae
shlb
push
insb
cltd
in
push
sbb
idivl
rcrl
das
leave
imul
test
aad
pop
lret
sub
jmp
mov
int
and
push
inc
popf
jno
loope
ja
flds
adc
and
xchg
addb
cmp
mov
test
mov
mov
mov
pop
jne
aad
sub
lret
loop
es
add
rorl
imul
cmp
add
or
incb
gs
aam
dec
in
dec
push
xchg
icebp
fbstp
popf
push
cmpsl
sbb
sbb
iret
outsl
insb
push
adcb
sbbb
push
clc
pop
test
jne
fadds
jg
clc
loopne
ficoms
daa
orb
inc
pop
testl
pop
movl
mov
jbe
movsl
cmp
xlat
pop
pop
inc
test
arpl
test
clc
test
cltd
or
inc
fbstp
mov
ss
cmpsb
mov
adc
add
mov
jle
lret
xor
test
mov
add
arpl
ret
cmc
mov
addr16
testb
or
lods
adc
and
aaa
mov
imul
fs
cmp
clc
push
push
leave
orb
fisttpl
fistpl
andl
cwtl
icebp
sahf
mov
test
cwtl
mov
add
adc
insl
gs
inc
aas
dec
inc
cmpsb
push
rclb
adc
testl
cwtl
push
ror
jnp
cltd
push
out
cmp
add
fcoml
xchg
fnstenv
xchg
add
js
and
xor
xchg
dec
aas
or
add
popa
dec
adc
cs
mov
out
lret
pushf
insl
pop
repnz
add
add
sbb
sub
mov
jle
cmp
enter
lret
pushl
pop
sahf
loop
int3
dec
xor
fcompl
adc
lds
int
outsl
sahf
cmpsb
adc
and
pushf
sbb
xchg
pop
jp
sbb
xchg
or
mov
or
out
inc
sbb
pop
and
shl
mov
push
fwait
mov
fisubs
in
cmp
out
je
xchg
out
icebp
sbb
adc
test
mov
rcll
mov
neg
mul
adc
ja
idivb
pop
push
ret
adc
sbb
mov
mov
leave
add
ljmp
or
dec
pop
push
pop
fistpll
test
sub
xchg
pop
or
xor
mov
sbb
add
hlt
push
jg
mov
lret
scas
out
scas
int3
jae
daa
rcrl
fdiv
jnp
and
call
xchg
scas
pop
nop
mulb
sarl
lret
cmp
loopne
jecxz
ret
push
push
in
adc
insb
mov
push
mull
xchg
sbb
daa
mov
sbb
nop
insl
mov
adc
sub
mov
fcomi
mov
xor
jmp
pop
xor
std
outsb
lcall
xor
pusha
xor
push
push
mull
xor
hlt
sub
dec
pop
in
jecxz
std
mov
addr16
mov
ficomps
bound
out
push
and
lcall
das
pop
stc
mov
aaa
std
test
mov
mov
jl
mov
push
push
pop
jle
mov
push
sti
jl
mov
shll
xchg
in
stos
xchg
aad
xor
jecxz
inc
push
xchg
inc
jmp
and
movsl
ja
push
push
fcmovnb
je
aam
mov
inc
js
sub
es
mov
daa
inc
inc
imul
pop
jne
push
pop
dec
ja
push
sarb
scas
cli
iret
cmp
rorb
sub
lcall
mov
push
push
jnp
orb
shrb
xor
sahf
fs
sahf
xor
lea
loope
pop
insb
dec
jg
fbld
out
nop
dec
add
push
out
loope
xor
mov
fwait
jge
divl
adc
lret
fwait
xor
rcll
adc
mov
je
or
push
jp
and
inc
fstpt
scas
addr16
mov
lahf
push
mov
dec
in
adc
jb
movsl
pop
sbb
xchg
inc
test
inc
in
scas
or
jo,pn
xor
inc
out
or
aas
arpl
mov
scas
cmp
es
push
jb
fidivl
loope
push
xchg
cli
sbb
movsl
fmuls
add
popa
aaa
lahf
jnp
add
lock
mov
imul
xchg
imul
xorb
dec
outsb
inc
sub
dec
into
es
popa
xchg
xchg
push
addr16
xchg
mov
stos
decl
pop
arpl
inc
invd
pop
xchg
loopne
out
jmp
sbb
jecxz
push
cmp
mov
mov
mov
fwait
bound
push
xchg
adc
sbb
out
outsl
shr
xchg
inc
jnp
add
jno
jns
mov
outsl
ljmp
push
cltd
xor
cmc
push
add
xor
popa
out
cltd
lds
popf
sbb
mov
jl
sbb
mov
add
mov
jb,pn
jmp
shlb
xlat
cltd
sub
repz
ret
dec
dec
aaa
cmp
sub
xor
sti
lods
mov
stc
add
and
hlt
fcoml
jecxz
mov
lods
and
test
stc
es
enter
fisttps
inc
sub
sahf
jb
sahf
adc
std
insb
lcall
adc
int3
popa
fucom
jl
add
gs
inc
cld
call
fimuls
jbe
or
loope
mov
cmpsl
loope
and
sarb
dec
pop
adc
pusha
add
cld
fisubl
js
fs
cmc
adc
inc
push
dec
prefetchnta
std
arpl
int
push
add
int3
sbb
lcall
xchg
neg
adc
jbe
cs
push
xlat
fs
hlt
jge
nop
add
fmull
pop
add
mov
lods
and
add
xor
je
cli
mov
mov
fnstenv
push
mov
mov
push
int
xchg
loopne
mov
or
mov
js
push
dec
clc
arpl
sahf
mov
and
inc
mov
cmp
rorb
or
adc
sbb
testl
out
mov
sbb
jl
inc
nop
push
nop
in
xor
xchg
js
mov
cmp
push
xchg
dec
sub
cmpsb
fistpl
imul
cld
repz
lcall
lcall
les
mov
stos
stc
cmp
push
xchg
loope
iret
jbe
lods
xor
loop
mov
inc
adc
mov
mov
sbb
add
das
mov
ret
and
mov
add
cmp
sbb
mov
mov
push
imul
push
movsl
mulb
jg
sbb
xor
cmp
pop
out
sarl
rcll
xor
jp
cmp
jl
sti
vpsrlq
pop
or
icebp
push
cld
xchg
pop
mov
adc
cmp
dec
pop
notl
sbb
cmp
sbb
mov
arpl
push
push
scas
cmp
daa
cwtl
clc
movsl
aaa
push
shr
jge
mov
push
sbb
dec
push
lret
daa
jg
mov
xchg
xor
loope
je
les
jne
stos
adc
lret
and
dec
inc
mov
aaa
cltd
push
popf
jmp
test
jg
test
imul
cmpsl
inc
jne
push
cmc
mov
dec
fstp
popa
sub
sub
popf
push
stc
testl
outsb
xor
imul
push
sub
lock
xchg
lea
push
repnz
insl
inc
xor
cmpl
popa
in
notb
push
arpl
and
dec
aam
fcmovne
incl
and
out
sbbl
xchg
or
gs
inc
divb
push
sub
cmpsb
sub
mov
jne
fdivrs
insl
inc
gs
sbb
aam
fdivl
push
fpatan
cs
shrb
or
fs
adc
pop
popa
cmpsb
or
ljmp
sbb
jmp
mov
dec
sbb
movsb
fsubs
cmp
js
repnz
or
xlat
lods
cmp
and
xchg
or
dec
gs
add
sarb
fmull
jmp
pop
xor
imul
lods
mov
mov
inc
dec
rcrb
mov
pop
scas
fs
add
xchg
sar
push
repnz
cmc
jmp
cmpsl
outsl
jg
dec
jbe
mov
add
decl
gs
ljmp
and
xchg
aaa
aam
jecxz
push
pop
out
test
gs
lahf
xchg
insl
out
sub
jl
pop
nop
add
push
std
adc
test
jl
mov
adc
cmp
cmp
mov
outsb
cli
and
jne
xor
mov
pop
cmp
addr16
jo
dec
jno
vmovsldup
mov
movsb
cli
pop
scas
pop
xor
sub
lock
shl
hlt
dec
out
je
xor
mov
fisttpll
lahf
loopne
andl
dec
add
adc
sub
push
lea
cmp
and
icebp
ficoms
vcvtsd2si
cwtl
cmp
or
bnd
push
sub
jle
mov
pop
mov
pusha
add
mov
ficomps
in
cmp
xchg
sub
cs
sbb
adc
mov
test
btsl
cmp
fsub
cltd
mov
xchg
and
lock
aaa
aaa
das
xor
add
pop
in
cmp
jmp
push
adc
les
fisubrl
sahf
jmp
pop
push
cs
and
sbb
sub
or
sub
in
lods
adc
in
push
adc
mov
adc
push
bound
sub
clc
rcrl
sub
sahf
pusha
pop
int3
lods
push
fdivrl
inc
in
pop
push
int3
je
rcr
xor
mov
push
mov
cs
flds
lds
fcmovnbe
insl
int3
out
sbb
fstl
jae
lret
fwait
enter
sub
jae
lods
push
imul
shll
mov
xor
lea
add
cmp
xor
jl
mov
ljmp
or
cli
test
adc
int
shrb
mov
inc
repnz
sbb
or
mov
mov
icebp
cmp
jno
dec
mov
scas
je
push
mov
lods
aam
loopne
jmp
stos
mov
xchg
inc
test
ret
shlb
add
int
out
ret
xchg
jmp
addr16
fdivs
fsubs
fs
adc
add
scas
mov
out
jnp
xor
jo
pop
sbb
xchg
push
pop
xchg
int3
pop
insb
pushf
roll
out
ds
test
test
dec
pushf
jle
mov
in
or
and
xor
inc
pop
jbe
push
or
imul
jl
mov
add
repnz
mov
pop
add
lret
loop
push
or
dec
add
pop
jle
add
xor
les
jp
in
scas
lods
test
fwait
or
pusha
testl
into
mov
inc
sahf
ror
popl
scas
fcmovb
mov
and
xor
add
pop
sub
daa
pop
mov
fimuls
fwait
inc
xchg
mov
imul
mov
mov
rolb
sarl
mov
adc
jno
adc
mov
pop
leave
sarb
in
push
andb
insb
and
pusha
jo
pop
or
jnp
sahf
icebp
xor
scas
popf
pop
mov
xchg
fcoms
inc
jb
in
cmc
das
lds
outsb
cwtl
mov
je
xor
ds
inc
mov
lods
dec
addr16
xchg
repz
sub
pop
stos
jl
cs
mov
mov
dec
dec
dec
cmp
mov
pop
into
sub
cld
mov
xchg
fcoml
pop
xchg
ljmp
cmpsl
test
js
push
lods
xchg
adc
dec
mov
lock
sub
pop
int3
icebp
push
addr16
xchg
jle
sti
jns
sub
mov
lock
jp
sbb
int
shr
aam
mov
test
call
loop
xchg
or
stos
jecxz
pop
dec
cld
xor
int
imul
jne
pop
push
push
mov
js
push
pop
push
jle
fdivrl
imul
into
xorb
mov
cltd
stos
sahf
inc
inc
cs
nop
cmc
test
lods
xchg
dec
mov
and
xor
xor
test
outsl
xchg
in
xor
cmp
and
jg
add
enter
jnp,pn
mov
fisubl
push
mov
xchg
je
in
aad
xchg
jg
imull
xor
popa
insl
xor
inc
fiaddl
cmpsb
jae
pop
and
stos
ret
xor
inc
pop
movsb
pop
add
pusha
sbb
or
push
enter
scas
aad
test
inc
dec
xchg
or
push
mov
enter
into
aas
dec
or
jae
dec
test
imul
mov
add
dec
jnp
jmp
xchg
hlt
sbb
insb
pop
stos
inc
pop
or
and
push
jmp
jg
aad
push
lods
out
mov
sub
ficoml
inc
jb
push
sub
push
jge
jmp
mov
popf
or
testb
mov
inc
lret
cld
jnp
sbb
jg
adc
in
ds
and
icebp
leave
sbb
dec
insl
mov
push
das
notl
das
mov
movsb
sub
mov
cmp
out
pop
and
sbb
stos
mov
xchg
lods
sbb
push
iret
aaa
xchg
jmp
mov
adc
and
jmp
dec
or
inc
iret
dec
dec
fst
and
nop
xchg
pusha
pop
or
and
dec
jnp
xor
test
push
sub
clc
and
and
inc
aas
aas
cli
rolb
je
shll
dec
push
popa
lds
and
push
xchg
scas
sub
repnz
cld
sub
jecxz
pop
stos
jno
orl
push
leave
jae
aad
out
fidivrl
xor
jb
ret
mov
push
adcl
subb
faddl
cmp
and
mov
data16
jge
lods
fdiv
fs
test
lds
mov
push
faddl
pushf
icebp
lods
or
or
add
jmp
in
popa
mov
inc
scas
sbb
inc
xchg
out
and
ss
loop
sbb
sbb
push
aas
shrb
cmp
icebp
rorl
inc
jl
push
jno
push
add
pop
roll
adc
ss
xor
jp
outsb
jecxz
lea
inc
mov
stc
or
fnstsw
jmp
sarb
sbb
mov
and
jle
fidivl
sbb
sarb
icebp
pushl
add
adc
aad
pop
dec
mov
daa
icebp
test
fisubl
xor
ficoml
jecxz
jns
dec
inc
jns
xor
lods
aad
sbb
sbb
addl
sub
push
mov
mov
dec
mov
loope
ss
dec
mov
pop
adc
sarl
pop
push
fldcw
insl
sti
adc
push
shll
pop
and
sub
sbb
das
roll
pop
jle
inc
mov
mov
inc
ss
mov
idivb
adc
divl
push
dec
ret
mov
cs
mov
stc
inc
or
out
mov
inc
in
pop
loop
sub
flds
movsb
pop
jmp
aaa
in
add
gs
xchg
dec
mov
out
xor
xchg
mov
stc
jmp
int
mov
nop
and
repz
and
outsb
mov
sbb
inc
dec
xor
and
add
cs
sbb
xchg
daa
ret
int3
inc
add
pop
lods
adc
pop
icebp
jbe
mov
xor
or
or
push
inc
push
xchg
lahf
out
cmp
pop
or
dec
aaa
adc
lret
mov
repnz
repz
sarb
je
insl
sbb
xchg
pop
inc
mov
xor
sbb
adc
rorl
fdivrl
mov
nop
jns
xchg
add
push
mov
xchg
lret
push
jbe
in
mov
movsl
in
pushf
jno
hlt
dec
adc
in
fsubrl
jne
jmp
mov
xchg
cmp
push
ret
test
sub
lret
cmp
jle
lods
loop
cmc
mov
mov
cmpsb
in
lock
out
aas
stos
or
sub
insl
fiadds
push
test
push
shll
aad
ja
test
push
std
enter
push
xchg
int3
stc
mov
arpl
push
loope
mov
inc
cmovge
jmp
or
adc
loope
fldlg2
cmpl
push
lcall
iret
and
or
lods
fs
in
in
jecxz
mov
std
out
aad
pop
jno
js
xchg
mov
xchg
push
cmp
clc
cs
imul
cwtl
push
inc
mov
rcrl
sti
push
xor
sbb
aaa
test
daa
lahf
push
lock
jns
movsl
push
push
loop
inc
adc
test
xlat
xchg
sti
push
jae
mov
xchg
fdivr
mov
inc
xchg
adc
inc
push
jp
xor
mov
lods
mov
dec
lods
sub
lahf
jb
and
sbb
test
lods
and
ret
jae
lods
adc
rclb
lahf
sub
cmp
inc
ds
rol
dec
fs
outsb
imul
das
xor
movsb
sub
and
mov
sub
mov
data16
xchg
int
loopne
outsb
cmp
adc
cmc
mov
mov
scas
sub
sbb
mov
out
fdivrs
xor
cmpsb
sub
aad
into
pop
sub
in
sub
pop
xchg
jg
lock
inc
jecxz
call
jne
xor
jb
pop
sbb
mov
mov
or
inc
or
cmp
xchg
mov
sbb
fwait
jbe
scas
lods
jge
lods
test
cwtl
adc
in
push
dec
scas
push
pop
dec
mov
lock
pushf
sub
xchg
mov
xor
sbb
xor
ret
push
lret
lods
cltd
push
movsb
and
loope
shr
lea
adc
pop
ret
mov
mov
adc
sbb
mov
inc
pusha
bound
sar
fcoms
mov
imulb
jbe
xlat
cmp
sbb
cli
add
rcrb
lcall
mov
xor
sub
and
call
js
jae
idiv
xor
pop
mov
or
mov
lods
mov
cmpsl
jnp
enter
aam
mov
ljmp
iret
int3
pop
fsubl
cmp
ja
xchg
xor
dec
jl
shll
aas
dec
xchg
clc
es
cmp
sbb
add
sbb
xor
dec
lods
decb
and
inc
out
adc
ljmp
icebp
insl
ss
loop
inc
jmp
aaa
push
and
test
and
push
rcl
push
or
cmp
jb
sbb
xchg
das
xchg
data16
int
cli
sti
xor
scas
gs
cmp
pop
test
mov
and
cmp
adc
sti
sahf
imul
adc
pop
inc
loop
sub
xor
cs
imul
ret
add
in
sbb
js
or
pushf
lret
pop
clc
and
test
sbb
cmp
imul
add
jg
test
mov
mov
xchg
cmc
or
mov
inc
inc
xor
mov
pop
and
aas
lock
mov
sbb
andl
out
or
pusha
push
aas
push
fcoml
imul
aas
push
fcoml
pusha
subl
jmp
in
or
and
jb
cwtl
call
and
jb
das
movl
jmp
adc
mov
roll
clc
jae
shlb
xorl
xorb
jmp
xchg
fdivs
rolw
addl
clc
jae
mov
add
add
xor
clc
jae
mov
call
jmp
jb
mov
cli
mov
xchg
es
push
pushf
jp
jge
or
dec
addr16
aas
loope
xchg
ffree
aaa
ss
out
rolb
repz
xor
jae
fstl
cs
daa
cmc
lods
stos
pop
lock
jbe
ja
lds
mov
jb
sahf
lock
iret
cmp
mov
std
addr16
push
jecxz
hlt
adc
in
add
scas
scas
dec
pusha
mov
aaa
insb
fs
mov
sahf
in
int3
xchg
jo
mov
aas
lret
jmp
mov
pushf
data16
push
icebp
sbb
inc
pop
mov
mov
popa
ds
xchg
pushl
packsswb
rcll
popf
pop
out
sahf
pop
jmp
and
repz
loopne
popa
cmpsl
xchg
out
clc
fsts
mov
sbb
popf
js
and
pop
scas
xor
inc
mov
loopne
enter
ds
je
ret
push
out
test
es
imul
into
outsb
sbb
or
xchg
clc
add
in
mov
jne
xor
mov
scas
lahf
mov
xorl
xor
popa
jns
lods
mov
mov
mov
lcall
cwtl
dec
push
add
and
sub
js
scas
into
pop
stos
sbb
out
xchg
cmpl
stc
dec
out
add
scas
xchg
pusha
or
pushf
ficoms
mov
cs
in
cmp
nop
mov
clc
add
mov
pop
test
cli
mov
pop
insb
orb
call
push
movl
add
adc
xor
and
mov
push
inc
add
adc
pop
mov
xchg
cmpsl
mulb
mov
call
fsubs
push
call
dec
outsl
test
data16
lret
xor
push
popl
mov
xchg
jno
jmp
jno
outsl
nop
outsl
xchg
sar
sbb
dec
dec
pop
inc
into
mov
loopne
push
fnstenv
pop
and
or
and
inc
js
push
mov
jmp
int3
mov
mov
icebp
cwtl
imul
jmp
xchg
repnz
mov
mov
andl
mov
rcrb
mov
dec
sub
add
nop
adc
add
out
notl
int3
ja
inc
jg
insl
ss
popf
add
add
sahf
add
add
add
add
fldcw
mov
mov
es
mov
mov
xlat
cmpsb
xor
nop
movsl
mov
dec
icebp
sbb
cmpl
push
cmpsb
test
cmp
jl
adc
pop
sub
adc
cmp
xchg
mov
jecxz
mov
cmc
into
xor
and
push
in
shrb
cli
leave
pushf
insb
fs
outsb
aam
inc
adc
negl
fldl2t
movsl
lods
pusha
xchg
mov
jmp
call
test
mov
mov
fildl
mov
xchg
es
imul
add
add
push
add
sahf
add
add
add
add
mov
ficoml
lock
sub
inc
jg
test
mov
leave
mov
pop
pop
adc
dec
jns
in
fsubs
aas
cltd
mov
add
push
push
in
xor
push
lea
mov
sbb
push
mov
or
insl
or
mov
mov
lods
xchg
lret
add
clc
pop
sub
inc
adc
lds
loopne
popa
hlt
push
pop
lds
jg
hlt
pop
dec
adc
xchg
fdivr
ja
fwait
cmc
inc
ss
cwtl
add
test
jns
inc
dec
adc
leave
daa
jg
pop
subb
dec
or
and
sbb
int
fcmovbe
push
popl
jno
test
push
gs
adc
test
aas
insw
ficomps
ret
cli
inc
fst
fwait
pop
nop
add
xor
jg
fdivrs
pop
mov
sti
das
int
push
lahf
dec
push
ja
imul
ror
out
and
xor
sub
or
pop
or
add
insl
ret
jmp
inc
shrb
inc
sbb
movsl
jmp
adc
test
sbb
mov
int3
in
lea
jg
ljmp
jo
nop
adcb
or
jle
iret
scas
mov
xchg
std
out
nop
push
mov
xchg
cmpsl
adc
out
ds
and
lahf
bnd
xchg
push
out
mov
insl
out
dec
int3
rorl
xchg
sub
fdivrl
adc
mov
out
push
or
xchg
stos
cmp
xchg
add
hlt
xor
jl
nop
scas
inc
and
fistl
dec
rol
scas
pop
push
scas
push
arpl
inc
inc
imul
jne
mov
test
out
in
and
jns
pop
test
fists
cmp
ja
pop
rolb
addr16
mov
push
adc
lret
test
jp
test
es
cld
lods
je
out
pop
push
in
inc
mov
jnp
xor
mov
xchg
add
movsb
mov
loopne
jne
orl
inc
ret
and
mov
cwtl
loopne
xor
cld
movl
mov
mov
or
lahf
dec
stos
pop
fldenv
push
xchg
lock
rcrl
xor
dec
mov
cmp
jo
movsl
daa
sub
pmovmskb
xor
lods
mov
js
movsl
pop
out
jl
or
inc
adc
movsb
gs
sbb
add
and
ret
rcl
mov
fildll
cmp
icebp
inc
lcall
sub
pop
fstl
adc
add
jecxz
push
add
fcomi
add
jle
jne
sbbl
xor
sbb
pop
loope
das
dec
mov
fwait
sub
sbb
jne
jmp
sti
out
pusha
ja
lods
or
popf
dec
data16
loop
repz
hlt
fwait
mov
rolb
sahf
xchg
jp
push
lds
add
cld
sahf
lret
lahf
insl
popa
test
xor
adc
fcmovb
and
jge
pop
xor
or
mov
or
jo
or
jecxz
adc
sub
jb
adc
pushf
lock
jns
sub
lcall
es
add
aad
fcoml
pop
rorb
inc
xchg
frstor
mov
mov
adc
addr16
xlat
fisttps
xchg
rolb
notl
dec
cmpsb
lahf
dec
into
fisubrl
cmp
imul
jmp
inc
push
stos
and
or
arpl
sbb
mov
pop
mov
mov
subb
mov
outsl
scas
adc
inc
mov
or
jnp
sbb
jle
inc
ja
outsl
xor
stos
cmp
pusha
push
push
mov
jb
in
in
inc
cmpsl
mov
cmp
fisttpl
jae
les
je
das
ja
inc
add
inc
lds
sub
aaa
xor
add
cmpsb
dec
pop
notl
inc
pop
cmpsb
dec
jbe
add
in
fnstenv
aam
stos
arpl
xor
jge
cs
jo
out
push
mov
dec
mov
dec
or
ss
out
movl
lds
jp
aam
cli
je
push
jg
repnz
mov
dec
jmp
jle
fstpl
test
xor
push
sub
out
add
pop
loopne
add
incl
add
add
shll
mov
gs
pop
ja
xchg
xchg
insb
stc
sahf
popf
in
mov
jnp
dec
lahf
pop
jg
je
aam
call
cli
add
divb
jecxz
in
jae
jns
int
incl
bound
fisttpl
bound
jecxz
test
or
jg
xchg
insb
push
inc
dec
and
bound
mov
stos
movsl
xlat
sarb
mov
cmp
in
push
add
loop
iret
push
test
mov
ds
pop
sahf
push
and
js
out
stos
fmuls
fimuls
lds
inc
prefetcht2
insl
pushf
dec
std
mov
push
fs
jne
push
sub
pusha
push
mov
ffree
je
fbld
jge
push
inc
outsl
scas
mov
popa
pop
ja
pop
mov
out
xchg
xor
fsubrs
dec
int3
and
arpl
int3
inc
adc
shll
lret
icebp
jmp
mov
lahf
or
call
cmp
jecxz
sbb
imul
cmp
lcall
xor
shlb
lret
icebp
jb
jecxz
xchg
cmp
dec
lret
pusha
jb
aad
mov
mov
cmpsl
mov
int
roll
fwait
sbb
out
je
pop
xchg
aam
push
xlat
int
mov
sbb
pop
out
insl
push
insl
xlat
jno
sbb
lock
aas
popf
and
xor
adc
int3
push
cltd
and
push
or
ret
or
roll
repz
push
in
ret
lods
mov
xchg
dec
push
les
or
pop
or
aam
push
push
fisubrs
div
gs
cmp
pop
and
cmp
js
pop
call
dec
ja
lods
es
scas
ja
in
jp
arpl
ret
push
mov
mov
out
xor
and
imul
lods
sub
or
jmp
or
jge
mov
inc
insb
cmpsl
adc
rol
sbb
loopne
mov
sub
pop
repnz
je
jns
sahf
adc
pushf
push
mov
jmp
ds
fbstp
xor
mov
lea
mov
mov
inc
mov
mov
rorb
rorl
add
mov
test
mov
leave
imul
mov
pop
mov
inc
arpl
and
test
cmpsl
cmp
jnp
jo
cld
test
ljmp
aam
jp
jmp
pop
out
pop
sub
pop
in
lcall
out
jb
lods
into
daa
pop
cli
push
icebp
fldcw
fisttpl
jns
sub
push
repnz
mov
or
xor
cmpsl
mov
xchg
push
pop
cmp
jbe
fldt
push
out
xchg
sub
fcompl
jmp
add
dec
sub
push
es
xor
mov
gs
scas
sub
movsl
mov
inc
frstor
inc
fwait
jbe
xchg
negb
clc
add
int
mov
and
insb
pop
daa
xchg
cmp
arpl
insl
mov
push
test
pop
jns
adc
jl
fiaddl
fwait
addr16
pop
push
xchg
or
out
push
int3
and
pop
mov
xchg
addr16
pop
cwtl
ss
je,pn
push
inc
pop
sbb
mov
lcall
addr16
jecxz
jmp
jae
cmpl
popf
mov
aad
pop
imul
lcall
mov
mov
cmp
add
fisubrl
mov
mov
enter
in
push
lds
and
xchg
leave
fistl
sub
mov
cmp
push
stos
inc
addb
dec
mov
and
mov
in
out
idivl
inc
test
rcrl
inc
jg
repnz
cmpsb
xchg
mov
mov
sub
xlat
sbbl
jne
lahf
cmp
popf
mov
aad
pop
jbe
xchg
xchg
sub
mov
dec
rol
sbb
loopne
mov
cld
leave
movl
rcr
sbb
sub
ret
push
lods
mov
sbb
iret
push
cmp
lahf
mov
xchg
dec
pop
cmp
or
outsb
add
jmp
or
cltd
adc
out
jg
test
int
js
into
dec
out
mov
add
mov
pop
pop
xchg
jb
cmpsl
in
lods
adc
adc
addr16
stc
cmpsb
sbb
pop
in
ret
lods
mov
call
mov
fisttpl
adcb
cmpsb
lret
in
adc
repz
dec
push
loope
shrl
mov
test
fistl
pop
lock
mov
pop
pop
mov
add
jge
lock
push
adc
pop
inc
por
xor
sarb
xchg
xacquire
mov
sub
sub
sub
negl
scas
fs
jge
xor
mov
insb
scas
inc
std
int
out
xor
fincstp
loop
data16
and
xor
cmpsl
push
ds
jl
sbb
fstpt
xchg
rcr
out
int3
pop
jp
jmp
dec
dec
or
dec
leave
pop
push
push
movsb
ret
pop
mov
out
test
lock
loopne
jnp
mov
dec
test
dec
fisttpl
hlt
sbb
cld
push
movsb
push
shll
cmpsl
rcll
cltd
stos
pop
into
movsl
movsl
inc
out
xchg
dec
push
hlt
fsts
dec
int
xor
es
cmp
xchg
xchg
push
test
enter
mov
push
sub
rorl
jb
push
push
jb
adc
xor
push
mov
roll
or
mov
pushf
shl
fisubrs
cld
push
movsb
push
shll
cmpsl
rcll
cltd
stos
pop
into
movsl
movsl
inc
out
xchg
dec
push
hlt
fsts
dec
int
xor
es
cmp
xchg
xchg
push
test
enter
mov
push
sub
rorl
jb
push
push
jb
adc
xor
push
mov
roll
or
int3
push
xor
sbb
cld
push
movsb
push
shll
cmpsl
rcll
cltd
stos
pop
into
movsl
movsl
inc
out
xchg
dec
push
hlt
fsts
dec
int
xor
es
cmp
xchg
xchg
push
test
enter
mov
push
sub
rorl
jb
push
push
jb
adc
xor
push
mov
roll
or
int3
ds
pop
cmpsb
cmp
push
stc
loope
in
inc
xor
mov
sub
ss
mov
fdiv
xchg
cwtl
daa
add
lcall
inc
dec
es
cmpb
and
mov
inc
cmp
mov
xlat
dec
jl
cmp
add
fwait
jno
jl
sub
push
jge
and
jno
stos
jns
sar
jbe
or
add
mov
imul
movsb
push
shll
cmpsl
rcll
cltd
stos
pop
into
movsl
movsl
inc
out
xchg
dec
cmpsl
push
in
ja
jp
sub
lds
ret
push
int3
icebp
in
push
mov
mov
sbb
shrb
adcb
sbb
lods
jo
das
data16
out
mov
push
sbb
int
lcall
mov
jl
rorb
shl
cmp
out
es
inc
in
orb
pop
das
mov
hlt
mov
mov
pop
sub
rclb
sbb
cwtl
gs
aas
mov
jno
xchg
push
push
dec
cmp
jge
mov
sbb
xchg
xchg
sbb
ret
gs
add
dec
movsl
and
aas
inc
add
lods
cmp
jmp
or
dec
lahf
jae
lds
xor
or
fmull
outsb
dec
add
movsl
sbb
ja
mov
cmp
repz
xor
ljmp
pop
xchg
mov
arpl
out
jb
popf
sub
jl
cmp
cmp
movsl
in
mov
add
mov
jge
xor
mov
insb
scas
inc
mov
icebp
stos
loop
xchg
or
sbb
cmpl
das
incb
stc
mov
mov
imul
cmpsl
cmc
test
stc
out
mov
push
sbb
int
lcall
mov
jl
rorb
shl
cmp
out
es
inc
in
xchg
das
add
addr16
cmpsb
lcall
loopne
nop
movsl
inc
insb
mov
pop
sub
rclb
sbb
cwtl
gs
aas
mov
jno
xchg
push
push
dec
cmp
jge
mov
sbb
xchg
xchg
sbb
ret
gs
add
dec
idivb
jecxz
lahf
pop
clc
loopne
xchg
xor
sti
sahf
inc
std
lret
bound
lahf
jae
lds
xor
or
fmull
outsb
dec
add
movsl
sbb
ja
mov
cmp
repz
xor
ljmp
xchg
mov
addr16
sbb
xor
ss
jae
mov
fnstcw
adc
jbe
push
fadds
lods
mov
sbb
rdtsc
xchg
decl
insb
scas
inc
mov
addr16
push
adc
test
xchg
daa
push
movd
jns
push
cmp
insl
lret
test
mov
push
jg
mov
les
adc
jnp
std
ja
xchg
add
adc
imul
ret
stos
movsb
mov
insl
mov
lods
push
sub
rorl
jle
aas
rcll
lock
mov
xor
sahf
jb
dec
das
ret
mov
lock
test
int3
iret
mov
stos
rolb
ret
add
sbb
xor
imul
repnz
addr16
jno
mov
lahf
jae
lds
xor
or
fmull
outsb
outsb
lock
cmp
fs
stos
xor
push
arpl
and
lret
repnz
cwtl
gs
aas
mov
jno
das
sbbl
push
in
cmp
xor
push
outsb
pop
xor
pop
arpl
lret
fimull
stos
pop
add
movsb
mov
insl
mov
lods
push
sub
rorl
jle
aas
rcll
lock
mov
xor
sahf
jb
dec
das
ret
mov
lock
test
int3
iret
mov
stos
rolb
ret
add
sbb
movsl
sub
lahf
mov
hlt
xor
clc
or
subb
or
jp
stos
xchg
push
push
add
dec
xlat
in
xchg
jae
lock
shll
add
das
int3
movsl
imul
sub
pop
push
and
dec
hlt
xor
jns
es
test
icebp
in
popa
popa
test
inc
push
mov
fwait
xchg
dec
or
test
inc
inc
filds
xchg
lret
data16
jo
push
mov
cmp
rclb
sbb
cwtl
gs
aas
mov
jno
dec
addb
adc
pop
mov
add
or
jp
and
iret
mov
push
add
push
jae
test
push
cwtl
int
popa
stos
add
add
lahf
jae
lds
xor
or
fmull
outsb
in
mov
enter
add
push
mov
fmull
fwait
sahf
int3
sbbb
sbb
lret
jp
pushf
push
add
push
sub
bnd
call
and
push
pop
jp
jmp
dec
dec
or
cmp
mov
sub
dec
lock
and
out
aaa
jae
subl
push
jl
dec
adc
jle
mov
pusha
pop
mov
mov
sbb
rdtsc
xchg
decl
insb
scas
inc
push
xchg
mov
dec
mov
cs
test
call
icebp
mov
rorb
movsb
jmp
jg
and
inc
mov
xchg
mov
test
std
popw
push
je
xchg
aad
ret
stos
movsb
mov
insl
mov
lods
push
sub
rorl
fildl
xor
fildll
js
xchg
adc
das
cmp
dec
gs
aad
push
pop
movb
push
inc
aas
mov
jae
sahf
inc
std
lret
bound
lahf
jae
lds
xor
or
fmull
outsb
in
mov
enter
add
push
mov
fmull
fwait
sahf
int3
rorl
xor
aas
pop
loop
push
xor
aas
inc
jae
and
adc
and
push
pop
jp
jmp
dec
dec
or
cmp
mov
sub
dec
lock
and
out
aaa
jae
subl
mov
xlat
pushf
xchg
dec
pop
and
push
cmp
xchg
pushf
mov
negl
scas
fs
jge
xor
mov
insb
scas
inc
push
xchg
mov
dec
mov
cs
test
call
icebp
mov
rorb
sbb
sub
mov
popw
push
je
xchg
aad
ret
stos
movsb
mov
insl
mov
lods
push
sub
rorl
cmp
lods
inc
add
pop
jnp
xor
inc
mov
sahf
stos
jmp
jae
and
xlat
lock
test
int3
iret
mov
stos
rolb
ret
jmp
add
mov
mov
mov
adc
xchg
mul
mov
jo
das
data16
out
mov
push
sbb
int
lcall
test
mov
xor
mov
stos
data16
mov
lahf
or
adc
mov
or
mov
mov
rolb
call
aas
movsl
sbb
or
jge
mov
dec
pop
es
rorl
insl
insl
push
pop
into
mov
mov
sbb
rdtsc
xchg
decl
insb
scas
inc
std
int
out
xor
fincstp
loop
data16
and
xor
cmpsl
push
ds
jl
add
add
lcall
das
push
test
mov
push
jg
mov
mov
mov
cld
mov
mov
addr16
jp
data16
out
mov
push
sbb
int
lcall
test
mov
xor
mov
stos
data16
mov
lahf
or
adc
mov
or
mov
mov
rolb
call
aas
movsl
sbb
shlb
lods
mov
add
add
pop
outsb
jmp
cmp
xlat
jmp
shl
out
rorl
mov
xchg
push
gs
mov
lods
xor
int
inc
aaa
rcr
pop
push
idivl
sbb
rcrb
je
mov
inc
stc
ret
pop
inc
inc
pop
inc
daa
rcr
das
lcall
sub
mov
push
xchg
xchg
inc
mov
movsb
cmc
call
push
push
in
fstps
mov
sub
lret
adc
xchg
test
sub
bound
push
lods
rorb
pop
cmp
mov
and
in
jp
icebp
inc
roll
mov
cltd
mov
rcll
popa
xchg
xor
or
scas
add
sbb
mov
je
in
and
stc
cmpsl
test
push
sbb
pop
xchg
or
jno
push
ljmp
mov
jnp
sub
mov
int
imul
push
lahf
fmull
cmp
idivb
cmp
popa
popa
sub
add
fprem
pusha
pop
inc
fdivs
sbb
mov
add
std
cmp
mov
cmpsb
sbb
sub
mov
ret
test
movsl
pop
in
jg
scas
aaa
pusha
mov
jns
dec
sbb
pop
stos
mov
sub
pop
jl
out
pop
mov
dec
xchg
int3
fstpl
call
cmp
sbb
xor
jo
scas
bswap
je
adc
add
hlt
stos
imul
xor
pop
out
lods
lahf
push
inc
loope
in
rcr
inc
lock
xor
push
fbstp
sahf
repz
dec
and
std
push
pushf
cltd
dec
inc
or
xor
sbb
inc
adc
js
pop
sbb
or
mov
iret
call
cmp
das
out
sub
jmp
fdivr
jb
sbb
and
dec
inc
push
push
xlat
add
fcompl
adc
mov
test
movsl
stos
sub
and
add
push
dec
xchg
dec
les
and
xor
aad
push
repnz
frstor
scas
rol
pop
or
mov
data16
push
and
mov
push
movsl
or
pop
lods
pop
inc
push
sub
out
inc
nop
cmp
xchg
xchg
lock
cmp
scas
lods
jmp
xchg
leave
sbb
aas
das
out
and
jno
sub
das
lods
pop
xor
lods
inc
shll
out
fildll
cmp
push
mov
mov
mov
xchg
jno
push
sub
mov
divb
xor
lds
mov
mov
and
neg
and
inc
into
lahf
push
rcrb
cmpsl
pop
inc
mov
jne
sbb
or
shll
notl
orb
mov
gs
inc
jo
xchg
rclb
push
cmp
imul
jae
mov
mov
dec
inc
dec
sbb
je
jbe
cli
iret
in
inc
add
pop
push
clc
lret
add
push
ret
jo
sub
loope
mov
in
jg
or
pop
mov
xchg
xor
ja
divb
in
stc
pusha
dec
sbb
loop
pop
fidivrl
mov
cmp
cmc
out
and
sbb
pop
sub
test
and
xchg
jl
cmp
add
pop
dec
jecxz
push
mov
cld
aad
xlat
push
fsubl
push
adc
in
xchg
sbb
push
lods
dec
mov
sbb
shrb
mov
xor
jnp
xchg
dec
mov
imul
decl
movsb
sarb
pop
jbe
lods
lock
xor
mov
jne
test
push
add
push
lsl
mov
test
mov
ret
repnz
mov
lods
popf
hlt
jl
xor
fstl
inc
in
dec
inc
fdivs
sub
sbb
xor
mov
add
enter
std
push
movsl
outsl
gs
aad
mov
mov
pop
xchg
lret
aas
cmpsb
mov
dec
sub
push
repnz
mov
cmc
pusha
iret
shr
outsb
inc
fiadds
and
add
pop
aas
push
mov
push
dec
lds
scas
inc
inc
sub
aaa
repz
mov
xor
int
loope
inc
jge
cmp
test
frstor
stos
mov
inc
inc
push
or
popf
ja
lcall
adc
jnp
jns
jle
add
stc
movsb
scas
sbbb
notb
or
pop
xor
repz
movsb
sbb
push
add
fcoms
int
lea
inc
sub
movsl
jno
je
nop
imul
pop
test
xor
in
mov
fidivs
gs
xchg
orb
shl
out
addl
andl
xchg
mov
subl
aam
cli
push
inc
push
nop
out
ja
lret
push
dec
dec
jo
pop
mov
leave
outsb
fistpl
lret
xor
xor
dec
dec
int3
test
fwait
js
lods
lea
or
mov
dec
aam
jecxz
or
mov
loop
dec
test
sahf
jnp
data16
pusha
sub
xchg
xchg
test
dec
fwait
xchg
mov
subl
sub
dec
dec
mov
int
roll
mov
fwait
pushf
xor
inc
add
movsl
cmp
sbb
inc
add
adc
sbb
jae
lahf
xor
xchg
mov
repz
icebp
and
cld
icebp
negb
mov
push
mov
sbb
xor
ja
int3
jp
bound
dec
push
test
xchg
cli
lret
gs
xor
lea
mov
leave
inc
push
mov
cld
daa
stos
test
sbb
aad
sub
popa
pop
pop
mov
stc
and
imul
rorl
mov
dec
cld
mov
inc
inc
insb
lods
mov
push
lret
in
sarb
pop
add
add
adc
aaa
jo
inc
push
inc
xor
dec
aad
dec
lds
jmp
test
ja
rol
jbe
ss
sub
sbb
testl
adc
cli
gs
mov
daa
arpl
lcall
push
stos
sbb
in
cltd
dec
cmpsl
inc
jl
or
xchg
mov
add
jo
cmc
pusha
adc
arpl
jmp
pop
jp
and
xchg
leave
jns
mov
sub
pusha
lea
sub
daa
aam
jbe
gs
push
in
gs
sahf
jl
movsb
js
popa
mov
and
enter
mov
int
cmp
mov
xchg
shlb
cmp
mov
add
xchg
push
out
lods
cwtl
inc
inc
or
aad
mov
or
popf
jbe
mov
int3
imul
cmp
stos
push
xchg
and
dec
dec
pop
aas
jo
stc
repz
adc
les
xchg
lcall
pop
xchg
pop
inc
mov
mov
push
loopne
shll
fwait
xorb
mov
hlt
inc
out
test
add
into
inc
jno
and
cmp
jo
mov
mov
mov
sbb
clc
fistpl
inc
adc
mov
jg
xor
mov
lds
sub
adc
scas
sahf
and
dec
pop
insb
mov
xor
sub
lret
imul
jecxz
add
xchg
dec
push
mov
popf
or
mov
sub
test
mov
stos
jbe
aas
stos
aas
mov
outsl
test
cmp
push
dec
mov
sbb
montmul
hlt
std
or
xor
stos
xlat
dec
lock
cmp
adc
out
fildll
jecxz
sub
ja
jo
mov
cmp
cmp
lods
push
cmp
lcall
push
aas
test
cmp
orl
out
in
subl
mov
emms
lea
mov
pop
sbb
pop
fisubrs
data16
push
pop
popa
push
in
cmp
sti
add
inc
push
mov
fsubrl
xchg
adcb
hlt
das
sbb
xchg
call
mov
mov
dec
inc
in
les
xor
pop
ret
out
int3
push
and
mov
stos
repnz
xchg
mov
sub
test
xchg
inc
test
mov
aad
xchg
adc
adc
shll
sar
fnstcw
lds
mov
fstl
xor
repz
popa
icebp
iret
imull
sahf
pop
lods
push
adc
push
out
jl
ljmp
or
jno
inc
ljmp
test
jmp
testb
jecxz
sbb
enter
xchg
outsl
pop
jp
mov
stos
std
pop
and
cmp
test
mov
pop
shll
aad
pop
rcl
xchg
push
add
mov
mov
jb
mov
cmp
outsb
pop
dec
jnp
cmp
mov
cmp
mov
adc
insb
pop
push
and
pop
jns
dec
imulb
rclb
es
or
inc
pop
pop
jge
hlt
or
cmp
pop
adc
xchg
inc
arpl
jnp
sbb
arpl
loop
in
xor
xor
movb
mov
fldl
sbb
je
imull
mov
push
mov
fmull
fcompl
push
mov
xchg
fadds
mov
fmull
fadd
fisttpl
popf
cmpsl
xchg
pop
roll
inc
shlb
outsl
test
fdivs
outsl
xchg
push
aaa
sarl
data16
cli
enter
pop
pop
mov
ret
jb
std
cmp
sbb
cmp
popf
sahf
stos
nop
in
test
fimull
sub
pop
and
xor
push
ss
ret
out
add
lidtl
cmp
es
jo
mov
xor
or
cmpsl
jo
punpckhwd
fisubs
xchg
insl
pop
lahf
mov
dec
fnsave
dec
pushf
adc
lret
cltd
fistpll
dec
adc
out
mov
stos
jne
dec
pop
dec
push
push
faddl
jge
clc
mov
push
filds
cmp
add
leave
jmp
cmp
dec
vunpcklps
ja
sbb
orb
out
je
lods
sub
xor
mov
or
test
push
cmp
pop
add
cld
sbb
push
cli
fs
std
hlt
jae
lock
mov
pop
dec
aam
dec
xor
push
mov
faddp
mov
jno
arpl
push
sub
xchg
cmp
lret
cmpsl
mov
imul
loopne
mov
adc
lahf
push
xorb
and
fmulp
jg
cmc
ss
and
mov
shr
int3
jbe
das
les
repz
in
notb
loop
cwtl
fcmovnb
dec
and
loop
cltd
bndstx
leave
cmpsl
sahf
cmc
xchg
cmp
push
xchg
xlat
or
pop
pop
push
stos
nop
dec
jo
add
cmp
div
xchg
jne
in
fldenv
and
lret
fistps
add
cmp
jecxz
push
adc
pop
jo
and
pop
fbld
xlat
iret
lahf
iret
test
sbb
and
push
cli
push
jae
and
lods
loop
jo
adc
xchg
push
and
cmc
daa
adc
lret
mov
pop
mov
adc
clc
sbbb
repz
xor
add
test
jmp
arpl
pusha
pushf
sbb
cwtl
sti
push
fcomp
or
jg
dec
aam
add
jle
clc
mov
enter
addr16
popf
push
aas
and
or
js
jnp
mov
scas
mov
subl
cld
or
xor
jae
filds
cwtl
ja
cwtl
mov
or
xchg
ds
fimuls
imul
out
js
sub
sbb
stos
aaa
mov
or
and
xor
mov
fmull
jecxz
test
cld
outsl
and
mov
sti
push
mov
das
jecxz
sub
iret
mov
xor
cli
aam
aad
adc
pop
pop
sbb
arpl
shlb
mov
mov
mov
call
cwtl
mov
bound
mov
idivb
loop
adc
rcrl
jb
test
clc
mov
test
and
test
sub
cltd
add
aam
inc
sbb
sarl
jbe
sbb
xorb
pop
cmc
idivl
cmpsb
push
dec
pop
and
jne
cmpb
sbb
inc
mov
pop
jge
outsb
daa
dec
js
ss
add
fldl
notl
pop
push
rorl
out
sahf
cmp
xchg
inc
lods
test
mov
adc
pop
cmp
int3
pop
mov
mov
ljmp
mov
nop
xlat
push
stos
imul
ret
pop
pop
inc
js
mov
dec
mov
mov
into
test
and
in
stc
jno
add
pop
dec
dec
arpl
sbb
adc
or
xor
out
push
mov
nop
or
dec
and
loop
and
stc
adc
shll
ss
mov
and
mov
int3
jge
dec
adc
cmp
out
les
and
scas
test
shlb
ja
sbbb
sub
xlat
data16
xchg
mov
std
test
xchg
hlt
push
sub
lock
cmp
xchg
loop
jb
cld
mov
inc
and
jnp
es
lds
inc
xor
lea
movsb
scas
pop
test
lods
fbld
push
data16
sbb
neg
push
and
and
loope
adcb
lods
lock
popa
sub
test
cmp
lods
mov
outsl
mov
imul
pop
lahf
sbbb
pop
cltd
or
push
dec
out
mov
out
fwait
into
fs
in
in
in
std
pop
cltd
divb
adcl
bound
sub
mov
aas
cltd
sub
aad
push
sahf
daa
sar
ljmp
mov
fadds
dec
cmp
push
das
jbe
out
roll
lcall
lock
jb
mov
iret
or
adc
sbb
push
inc
in
mov
or
arpl
mov
or
jle
imulb
add
jecxz
lcall
je
inc
pop
cmp
and
push
aad
loop
sbb
imul
lods
push
dec
push
adc
dec
push
push
push
pop
pop
iret
jb
jae
mov
mov
insl
bound
dec
pusha
jo
lock
jl
or
jp
fmull
pop
out
divb
add
addr16
mov
jle
inc
xchg
into
loope
xor
ja
sahf
mov
ljmp
imul
jp
jne
sbb
jb
add
dec
stos
jns
shll
adc
or
and
fidivrl
xchg
popa
decb
sti
push
xchg
jecxz
leave
jb
mov
sbb
push
fiadds
mov
out
push
xchg
lock
dec
xchg
jbe
je
sarl
add
xchg
push
pop
lods
dec
addb
neg
fs
stc
mov
iret
push
push
mov
cmp
xlat
jmp
data16
outsl
cmc
ljmp
std
inc
rorl
fbld
xchg
and
jo
jmp
jb
mov
std
sub
mov
push
add
sbb
or
rclb
mov
push
push
fdivrl
lods
mul
ret
mov
xor
xchg
test
sub
sbbl
div
je
mov
outsb
out
xlat
pop
push
stos
xlat
js
je
arpl
xchg
lret
push
or
xchg
ret
pop
xchg
fcompl
cmpsl
pop
xor
push
in
mov
xchg
sbb
mov
or
outsl
jo
pop
iret
das
xchg
sbb
dec
lods
dec
add
fcompl
std
std
or
xchg
pop
dec
pop
pop
into
fistpll
jne
mov
xchg
es
nop
pop
xchg
aas
pop
cs
fstp
jmp
sbb
sub
mov
mov
mov
xor
inc
scas
das
xchg
movsb
js
stc
enter
repnz
mov
loopne
fwait
inc
and
fiadds
or
dec
pop
fildll
lret
test
lock
push
xchg
mov
out
mov
and
icebp
pop
pop
mull
sub
mov
in
ds
movsb
or
push
mov
loope
test
mov
cmp
mov
adc
push
jl
fwait
test
stc
lret
push
lahf
add
jae
xchg
call
sub
or
out
fnsave
mov
sub
push
repnz
fsubl
xchg
sbb
add
daa
cltd
push
push
add
mov
stos
loopne
inc
mov
outsl
cmp
movsb
data16
xor
test
inc
jns
stc
test
sub
sub
pop
scas
subb
fs
pop
cmc
sbb
adc
push
cs
aam
cld
and
test
rcrb
sti
leave
sahf
inc
mov
dec
add
mov
mov
rolb
movsl
mov
sub
lock
dec
xchg
jl
pop
and
cmpsb
in
pop
pushf
sbb
scas
repnz
negl
and
cmp
jl,pn
addb
ret
mov
mov
pushf
jbe
xor
aam
mov
fdivrs
mov
bound
repz
stos
icebp
and
or
adc
or
lea
pop
outsl
mov
flds
cli
popf
es
adc
jl
xlat
adc
xor
mov
stc
je
sbb
lret
mov
scas
mov
jle
cmpsb
aad
mov
cmpsb
sub
and
cmc
in
mov
xor
lds
push
xor
pop
xchg
cmp
lahf
stc
jp
stos
lods
ss
cmpsl
movsb
test
int3
in
psubq
add
or
dec
or
out
sub
pop
in
adcl
dec
jl
push
mov
pop
int3
add
cwtl
mov
inc
or
inc
add
in
mov
std
jge
and
mov
enter
push
and
enter
outsl
push
int
push
jg
sbb
lcall
cmp
movsl
xchg
add
popf
jbe
mov
ret
arpl
imul
sub
xchg
pusha
ret
lcall
push
addb
movsl
jae
mov
sbb
sub
ret
and
add
rolb
adc
sub
pcmpgtb
cmp
arpl
testl
sbb
pop
insb
test
xchg
sbb
jmp
and
scas
int3
aam
ds
inc
stos
fmull
and
mov
dec
xor
mov
or
decb
fmull
jns
test
inc
mov
mov
iret
mov
cwtl
fs
movsb
jecxz
xor
enter
cmp
pop
mov
dec
cmpsl
adc
imul
cli
jmp
jae
add
mov
sbb
les
mov
outsb
mov
out
sub
gs
xchg
jne
loope
test
sub
push
pop
inc
sbb
and
test
les
sub
loope
scas
rcrl
xchg
sbb
cwtl
inc
xchg
popa
shll
dec
xchg
jno
push
xchg
pop
movsl
roll
clc
push
inc
arpl
aaa
rol
sahf
std
sub
movsl
ret
clc
std
scas
pop
loopne
cmp
ror
outsl
rolb
mov
or
dec
insb
cwtl
cwtl
sub
xor
fscale
das
jle
clc
in
push
sahf
mov
sbb
test
jne
int
lar
pop
mov
xchg
push
call
lods
out
adc
lret
sub
and
inc
aam
in
push
in
inc
sarb
icebp
pop
test
sub
xor
lods
fcmovne
inc
adc
movl
popa
inc
out
push
cmp
add
je
xor
aas
pop
jns
add
pop
ret
pop
stc
ficoml
stos
js
pop
arpl
cmp
cmp
cmp
rol
cmp
imul
xchg
neg
xor
xchg
or
inc
or
mov
negl
jns
and
cmpsl
and
aas
xchg
daa
fsubrs
imul
inc
sub
xor
sub
jbe
add
movsb
push
je
inc
cltd
sub
xor
adc
loop
dec
xor
in
scas
inc
in
fcmovnu
add
mov
mov
data16
pop
in
fdivp
ljmp
jecxz
jl
push
fs
addr16
mov
sub
out
fadds
inc
pop
adc
sub
jae
xor
mov
aaa
inc
push
stc
cmp
push
hlt
ss
and
repnz
mov
inc
push
ret
es
mov
push
mov
fadd
mov
or
mov
loope
dec
pushf
jg
test
outsl
rcll
fbstp
cmp
ss
and
je
sbb
repnz
divb
xchg
sbb
sti
adc
inc
jo
sub
jbe
fidivl
cld
hlt
call
sarb
mov
add
ja
sub
jecxz
inc
sbb
push
sbb
scas
mov
mov
jb
in
out
out
pop
cmpsb
pop
cs
mov
sbb
sbb
xchg
add
add
int
push
dec
movl
das
sub
gs
adc
dec
loop
mov
pop
jno
dec
insl
jno
sbb
xchg
xchg
mov
setne
and
push
movsb
xorl
shll
or
cmp
jbe
push
test
lods
mov
test
repnz
jmp
xor
jnp
mov
sub
sbb
or
mov
inc
scas
int
adc
ss
stc
push
jp
cmpb
popf
jl
ret
xor
jl
out
stc
shl
aaa
in
loopne
cli
cmpsb
sbb
mov
pop
push
adc
dec
adc
sahf
mov
inc
imul
xchg
std
xchg
sub
adc
jo
jno
mov
repnz
adc
jg
or
xchg
and
pop
inc
dec
xchg
aaa
pop
add
lahf
ret
or
or
or
popf
push
xchg
mov
notl
iret
popf
xor
or
stos
push
sti
fcomip
inc
push
and
outsl
dec
popf
add
pop
adc
xor
outsl
xor
dec
lds
inc
lret
jp
je
add
pop
dec
hlt
andl
loope
mov
and
add
jl
rclb
xor
aaa
lods
pop
push
sub
sub
decl
je
mov
iret
shr
les
in
popa
icebp
icebp
rcll
fidivs
mov
fwait
push
mov
ds
std
enter
mov
dec
xor
ret
or
xlat
inc
out
jmp
jle
mov
xchg
stos
fs
lret
xor
dec
mov
mov
dec
outsb
out
loopne
inc
xor
int
mov
jns
mov
adc
pushf
cmpsl
or
aad
ret
into
add
adc
leave
push
mov
xlat
stc
mov
pop
mov
jl
jns
jmp
fstpt
lods
dec
mov
cli
push
int3
cld
loopne
mov
imul
fnstenv
sti
cwtl
out
jge
dec
insb
insl
jo
pop
or
jecxz
sahf
adcb
push
pop
mov
push
fld
testl
rolb
xor
in
lods
nop
and
loope
xor
pop
lret
jns
xchg
jmp
pop
sbb
sub
add
sbb
subb
adc
jmp
clc
sbb
jl
es
jmp
xlat
cmp
inc
xor
sub
jecxz
xchg
das
xchg
add
and
mov
movb
mov
fldt
addl
dec
cmp
cmc
mov
sbb
sbb
cltd
or
popa
add
pop
or
test
and
xor
in
clc
stc
punpckldq
cmpps
xchg
shlb
loop
and
daa
in
cltd
inc
mov
mov
dec
jns
jne
and
loop
out
lds
je
test
inc
scas
add
sub
cltd
div
jle
shll
mov
movsb
rorb
inc
dec
jge
add
cmp
jae
outsl
insb
jmp
mov
and
leave
cmpsl
cld
fisubs
sti
xchg
and
lcall
cs
faddp
pop
xor
pop
insb
sahf
shlb
push
adc
cli
xchg
testl
sbb
call
pop
ret
je
ja
shl
test
mov
pop
jmp
rorb
push
adc
pop
enter
fisttpll
in
iret
sbb
stos
pop
lret
mov
inc
push
in
sub
or
lcall
je
pop
dec
lret
push
daa
mov
shrl
and
imul
push
pop
adc
mov
or
cmc
mov
xor
mov
gs
lahf
pusha
add
scas
inc
push
jnp
pop
lods
faddl
scas
mov
add
repz
lcall
and
clc
push
fldenv
mov
xor
inc
test
je
mov
pop
mov
xchg
loop
xchg
mov
xchg
outsl
and
nop
mov
pop
mov
dec
push
outsb
pop
cwtl
les
xor
lahf
adc
mov
aam
ret
cwtl
and
movsb
dec
cmp
pop
or
jae
xor
pusha
pusha
pop
pop
outsb
mov
push
inc
in
out
imul
mov
and
xchg
iret
mov
inc
into
lea
orb
mov
inc
das
jle
push
ret
pop
mov
sbb
in
clc
bound
pop
add
push
pop
xchg
sbb
faddp
add
dec
add
sbb
enter
lea
push
idiv
sub
aad
lea
xor
push
loop
fimull
pop
insb
rorb
cld
mov
sub
call
adc
sbb
sbb
lea
dec
dec
arpl
aad
movsb
cld
jmp
fcoml
pop
adc
lahf
mov
adc
jg
js
mov
fsubrl
lods
sub
es
in
pop
push
jl
js
shlb
sbb
rorl
sti
or
mov
jge
or
std
push
sub
pop
push
lret
arpl
popl
fsubp
mov
jp
cmpsl
enter
mov
scas
in
push
popf
out
call
insb
pop
mov
dec
mov
popa
out
mov
into
lahf
mov
mov
cltd
adc
sbb
inc
sub
jno
bound
leave
adc
fisubs
mov
mov
mov
sti
out
aam
adc
sbb
iret
ja
je
fbstp
jae
pushf
repz
lods
inc
ret
insl
int3
jnp
sub
xor
xchg
xchg
push
scas
mov
nop
shll
xor
pop
repnz
push
sub
popf
int3
jae
mov
inc
jmp
jecxz
jp
mov
mull
in
lods
in
outsb
ficomps
lret
mov
daa
add
mov
repz
js
xor
sbb
or
xchg
jae
std
loope
push
into
dec
xor
sub
xchg
push
pusha
out
scas
xchg
test
jnp
mov
out
add
rcll
pop
imul
dec
mov
fptan
loop
sbb
mov
les
or
out
or
xchg
dec
fildll
loope
add
je
movsl
enter
hlt
add
dec
andb
xchg
jg
lret
nop
mov
dec
rolb
pop
pushf
xorb
scas
arpl
adc
mov
jmp
std
mov
mov
int
mov
stos
testb
rclb
xor
fistps
data16
push
xor
aas
inc
sbbb
push
adc
into
jae
jmp
test
repz
cmp
sbb
mov
fcomps
xchg
or
xchg
sub
cmp
outsb
popa
fldenv
adc
pop
cmc
push
fbld
test
fwait
stc
dec
mov
sub
aam
sbb
clc
dec
addb
iret
je
fwait
mov
out
jo
fnstcw
dec
xchg
in
lods
push
adc
outsb
fcoml
cmp
pusha
or
inc
test
rcll
jo
mov
xlat
cmc
push
popa
lds
loope
mov
sub
movsb
dec
and
ljmp
xchg
test
cmpsb
mov
leave
ss
jno
int3
jb
pop
adc
mov
add
clc
cmp
adc
push
sarl
xor
fwait
xchg
mov
and
or
cmp
loope
and
mov
out
mov
adc
adc
call
add
dec
mov
jmp
cmpsb
into
xchg
and
push
test
mov
cltd
mov
rcr
imull
pop
sti
mov
dec
push
xchg
ja
cwtl
push
dec
inc
loop
in
sub
jno
xor
clc
ss
push
fistpll
xchg
mov
les
xchg
repz
js
into
shrb
xor
sub
outsl
mov
insl
sti
pop
mov
movsl
inc
fnstcw
adcl
xchg
inc
jne
jecxz
lock
das
pushl
xor
xchg
lret
stos
fs
out
push
dec
cltd
xchg
and
xor
pop
shll
pop
xor
inc
adc
jle
xor
xchg
lcall
addr16
jp
fwait
pop
hlt
pop
cmp
mov
fnstsw
sub
mov
stos
test
das
sub
mov
idivl
mov
xlat
clc
sub
or
xor
mov
lahf
push
cld
push
mov
adc
cmp
mov
xlat
mov
dec
xchg
xchg
shl
mov
imul
mov
movsb
jnp
daa
arpl
xor
jnp
sub
lods
inc
pop
xchg
sbb
repnz
cli
ss
dec
mov
xorb
jmp
xchg
xor
lret
enter
xor
adc
mov
insb
or
or
lret
lds
loop
out
aaa
flds
xchg
mov
cmp
mov
stos
pop
out
bound
cmpsb
adc
jecxz
movsl
cmp
loop
mov
jno
and
push
pop
mov
xor
xor
das
dec
sub
jp
mov
mov
fildl
enter
pop
loope
js
xor
pop
pusha
push
in
push
aam
mov
and
insb
iret
mov
add
ret
out
jmp
sub
jg
pop
cmc
mov
push
leave
cltd
jo
stc
mov
stos
jge
xchg
pop
jb
mov
scas
rorl
pop
and
fsubl
stos
out
xchg
adc
lock
data16
jne
lret
or
mov
xor
and
push
add
xor
sub
scas
push
lret
mov
lahf
clc
les
and
xchg
cmp
js
xchg
push
aam
mov
and
outsl
sahf
jmp
fwait
cmpsl
xor
imul
imul
filds
lret
cmpsb
ficompl
pop
mov
jl
dec
ss
xchg
pop
cmpsl
addr16
aad
sbb
xchg
cwtl
imul
out
out
add
jecxz
jo
inc
mov
add
pusha
aas
movsl
ret
or
mov
jecxz
dec
enter
inc
cmpsb
dec
xchg
push
imul
mov
and
iret
std
xchg
jo
stc
xchg
mov
out
pop
mov
xchg
js
inc
cmp
inc
out
add
gs
add
in
ds
fiaddl
sub
sbb
inc
bound
xchg
adc
enter
pop
pop
daa
xlat
mov
sub
cmp
scas
adc
dec
aad
mov
div
adc
push
sbb
dec
cmpsl
leave
adc
cltd
clc
mov
shrb
shll
xchg
stos
jno
pop
mov
xchg
jo
mov
jecxz
jo
xchg
and
movsb
and
mov
jnp
cmp
push
lds
sub
insb
lahf
pop
pop
mov
imul
mov
cmp
or
mov
lods
mov
and
adc
movsb
popf
pop
dec
mov
sbb
fistpll
shlb
push
adc
adc
cmpsl
fstpt
icebp
ds
add
push
sbb
es
or
add
repz
mov
jge
add
fidivrs
inc
in
jmp
sbb
sub
stos
loopne
jae
aam
xchg
inc
xor
sti
jno
xor
insl
in
xor
lahf
add
push
inc
jmp
mov
adc
out
mov
jo
adc
sar
inc
lods
sar
mov
mov
in
lret
outsl
mov
jno
and
sbb
fwait
xchg
mov
sub
repnz
push
inc
pop
push
cmp
mov
pushf
and
cmp
fmuls
pop
jnp
pop
cs
xchg
xchg
in
add
lods
adc
rcl
push
mov
add
shr
xor
xchg
lods
cmc
mov
push
xchg
lds
mov
dec
into
mov
int3
inc
cs
cmp
aam
lds
mov
lods
dec
ljmp
mov
sub
push
rcr
or
lods
dec
fs
xchg
ja
push
aad
add
into
inc
stos
pop
mov
jne,pt
mov
sub
pop
push
icebp
xchg
sub
add
enter
imul
dec
jl
flds
ffreep
mov
xor
pushf
out
addr16
std
out
aas
mov
je
popf
and
and
imul
push
push
sahf
fadds
in
repnz
movb
dec
xchg
xchg
dec
xor
out
adc
jmp
pop
dec
gs
mov
test
call
and
add
das
xchg
outsl
push
dec
dec
mov
inc
xchg
ret
jle
sbb
sub
push
sbb
mov
rcrl
sbb
iret
imul
mov
mov
add
adcl
xchg
aam
adcl
sub
movsb
mov
or
fsubr
popf
out
test
and
inc
mov
cmpsl
xor
xchg
loopne
lods
gs
enter
jo
std
inc
xchg
push
cs
cmp
cmp
jg
and
mov
sub
je
jae
dec
xor
xor
sub
jne
mov
adc
es
loopne
lock
fmuls
sbb
dec
push
add
inc
xchg
sub
or
pusha
divb
xor
mov
dec
pop
push
ret
push
imul
dec
idivl
fildll
xor
mov
xchg
jge
aaa
pop
sub
xchg
daa
leave
in
insl
cmp
movsl
pop
inc
das
push
mov
std
fcmovb
xchg
out
int
rol
mov
mov
push
and
ja
pop
ret
jno
push
push
pop
ret
dec
outsl
scas
push
fisubrs
inc
icebp
jne
xchg
cmp
flds
int3
xchg
inc
loope
es
mov
mov
and
outsb
pop
sbb
rcll
add
pop
outsl
fs
hlt
sbb
loop
cmp
lret
cmp
inc
cmc
clc
mov
popf
cmp
jmp
fwait
and
out
sahf
push
in
push
lahf
fidivrs
sahf
xlat
inc
sub
jge
sbb
das
jmp
adc
dec
scas
inc
out
xchg
inc
mov
dec
js
push
int
mov
fistpl
insl
dec
push
push
pusha
and
mulb
pop
pop
outsb
repnz
cld
mov
push
add
cmc
mov
imul
fwait
and
mov
mov
jge
jge
add
add
pop
loopne
add
add
add
add
add
jecxz
push
shll
jp
mov
shrw
out
sbb
loop
add
add
loopne
add
out
mov
movsl
repz
cmp
arpl
or
push
jbe
call
movb
xchg
punpckhwd
pop
sbb
shrb
sbb
lods
pop
mov
out
jae
mov
or
mov
stos
enter
cld
rorb
out
push
insb
popf
movsl
popa
cmpsb
push
jno
loope
icebp
dec
jmp
imul
cmp
dec
test
fistps
dec
sub
lret
cwtl
sub
out
xchg
and
cmp
dec
jg
js
adc
inc
in
lds
test
jl
xchg
push
daa
xchg
daa
ficoms
push
dec
outsl
jmp
test
iret
lea
loopne
push
pop
lret
ret
daa
sub
fcoml
xchg
out
ja
cs
and
push
incb
cmp
test
pop
and
shll
es
gs
stos
pushf
dec
sbb
xchg
sbb
cli
push
lds
lret
notl
xlat
movsb
cmpsb
enter
mov
pushf
xchg
and
cmp
in
xchg
push
jae
lcall
cmpsl
and
jns
push
inc
stos
dec
inc
movsb
sarl
popl
js
push
in
add
insb
cmovb
xor
rcll
cs
or
xor
hlt
lods
iret
push
pop
and
add
xchg
cmpsl
mov
jno
adc
dec
ljmp
xor
sbb
mov
or
scas
std
std
cltd
loope
ja
out
dec
addl
cmp
jge
cltd
sub
xchg
cli
sti
test
out
gs
and
and
ss
or
pop
sbbb
pop
push
xchg
int
adc
pop
cmp
arpl
test
xlat
ds
in
push
sub
and
inc
pop
jbe
xchg
push
rcrl
sbb
jmp
mov
insl
ja
popa
sbb
out
mov
icebp
test
push
jo
imul
push
mov
out
rorl
test
adc
popa
int3
test
adc
cwtl
and
and
sub
int
or
ss
notb
push
lret
aas
cmc
hlt
adc
adc
push
mov
dec
movsb
lods
fildll
ljmp
cmp
pop
pop
imul
sub
testb
mov
fisttps
fdivrs
rcl
leave
mov
sbb
xchg
in
jg
mov
pusha
mov
lahf
ffree
and
lods
test
jl
lahf
cmp
xor
and
je
loopne
popa
push
aad
push
insb
push
or
mov
jge
or
xchg
bound
test
shrb
xor
mov
outsl
insb
in
jecxz
adc
inc
test
aad
add
sti
or
bnd
test
ja
sub
fnsave
sub
add
pop
jmp
dec
lods
adc
mov
lods
cmp
addr16
jge
push
sahf
mov
rcll
and
push
fisubl
outsl
imul
fmul
je
testl
dec
or
and
cmp
add
cmp
pop
ja
push
loope
dec
ud2
mov
xchg
push
or
mov
jmp
lea
cwtl
xchg
push
jg
hlt
cli
lret
into
test
xchg
popf
repnz
pop
adcl
jp
jo
xchg
xchg
rolb
setne
mov
sub
sbb
push
xor
out
sub
sbb
dec
fwait
mov
loopne
inc
dec
mov
pusha
pop
loopne
and
mov
sub
in
faddl
cmp
cli
ret
mov
sahf
call
mov
push
js
mov
add
push
pop
aam
xchg
leave
pushf
test
inc
pop
daa
loopne
push
sbb
mov
clc
or
fdivr
dec
jbe
cmovnp
or
pusha
popf
jle
push
sbb
jg
pop
push
jl
data16
cmp
or
cmp
mov
nop
rcr
fbld
rcl
sub
dec
or
sbb
insb
outsb
imul
push
push
aas
pop
movsb
mov
out
loop
aam
bound
addr16
bound
dec
cmp
pop
sbb
dec
lock
ret
clc
jb
and
and
inc
mov
add
pop
hlt
pop
sub
and
add
pop
loopne
add
add
add
add
or
test
or
cwtl
cmp
clc
ret
data16
push
mov
notl
xchg
inc
or
movsb
cmp
popl
xchg
push
xor
and
fisttpll
cltd
cmc
rorb
xlat
repz
sti
inc
es
andb
pop
xlat
iret
rcrl
fsubs
mov
ss
and
add
incl
iret
fs
or
sub
pop
loop
les
sti
push
mov
mov
or
clc
adc
test
test
inc
mov
push
mov
or
pop
adc
leave
inc
xchg
add
pop
bound
lods
jb
or
mov
push
stc
incb
and
loopne
jle
out
jo
fimuls
testb
xorb
stos
add
fs
add
push
dec
rcll
ljmp
xor
cmp
icebp
fdivrl
or
pop
fcmovu
enter
loopne
xchg
add
je
mov
sbb
ret
jmp
ret
jge
cwtl
inc
jmp
sahf
fcmovbe
or
push
std
cmp
rorl
fs
fld
add
and
sub
jo
cmp
and
cmp
push
je
mov
inc
lea
rorl
sbb
pop
pop
mov
imul
lret
xchg
sbb
cwtl
jb
jbe
sbb
sbb
out
pop
mov
mov
jmp
scas
jmp
mov
shl
xor
lock
movsl
inc
mov
xchg
mov
bnd
pop
int
xchg
jo
sbb
scas
or
sbb
std
jns
sub
mov
icebp
pop
and
jns
add
push
mov
cmp
bound
lods
jb
or
mov
push
stc
incb
and
loopne
dec
xchg
pop
mov
in
cmp
inc
lods
ja
stos
add
fs
add
push
dec
rcll
ljmp
xchg
xor
add
pop
iret
xor
fmul
dec
xor
stos
xchg
add
je
mov
sbb
sub
pop
adc
sbb
lcall
sahf
fcmovbe
or
push
std
cmp
rorl
fs
add
dec
push
jns
scas
adc
jno
imul
repz
push
je
mov
inc
lea
rorl
sbb
xchg
iret
fildll
xchg
sbb
cwtl
jb
jbe
sbb
sbb
out
pop
mov
mov
pushl
iret
xor
mov
dec
add
mov
shl
xor
lock
movsl
inc
mov
xchg
mov
bnd
pop
int
popa
jne
adc
inc
sbb
std
jns
sub
mov
jae
repnz
and
dec
ds
mov
inc
stos
dec
cmp
fdivrl
or
mov
imul
out
dec
xor
iret
and
pop
xor
pop
es
stos
mov
mov
mov
dec
popf
idivb
cwtl
jecxz
ja
jge
or
sbb
sbb
pop
pushf
imul
fmul
dec
xor
push
test
cwtl
jb
pop
mov
xor
loop
pushl
push
nopl
in
fwait
dec
ljmp
adcb
dec
ja
rorl
sbb
cmp
xchg
out
push
int
sub
pop
das
sti
mov
adc
mov
pop
frstor
mov
decl
push
movsl
xor
lahf
xchg
or
sbb
adc
sub
mov
xchg
mov
bnd
pop
int
dec
out
push
out
clc
mov
int
or
loop
scas
and
clc
sub
jo
cld
sub
cmp
lea
sarb
and
sub
pop
shll
aam
mov
popa
pop
dec
dec
xchg
adc
or
incb
and
loopne
dec
xchg
pop
mov
xchg
push
out
movsl
setle
mov
mov
sub
push
js
test
cmpsl
out
cmp
lods
mov
dec
stos
dec
mov
call
call
jnp
add
ss
dec
push
mov
je
mov
sbb
in
xchg
sub
adc
mov
rcr
lcall
push
ja
sbb
lcall
fs
enter
cltd
je
add
push
jl
fwait
dec
ljmp
adcb
dec
ja
rorl
sbb
movsl
cltd
xlat
inc
dec
sbb
sub
pop
das
sti
mov
adc
mov
pop
frstor
mov
call
je
lods
xchg
imul
lods
sub
mov
sbb
addb
jo
test
inc
mov
xchg
mov
bnd
pop
int
inc
pop
fidivl
jnp
lahf
int
or
loop
scas
and
clc
sub
jo
cld
sub
subl
inc
popf
stc
or
xor
in
mov
popa
pop
dec
dec
xchg
adc
adc
sub
mov
xchg
xchg
pop
lods
lock
sub
scas
pop
ja
xchg
adc
movsl
xor
push
rcll
dec
jmp
fimuls
sbb
addb
jo
repnz
add
sbb
mov
adc
std
sbb
mov
pop
push
pushf
jl
cmpsl
sti
adc
cmp
add
inc
imul
push
pop
stc
dec
lds
das
ja
mov
es
mov
ret
cmp
jecxz
lea
inc
shlb
xchg
jne
sub
icebp
add
popl
adc
adc
add
ss
mov
cmp
insl
es
lahf
fwait
cmpsb
dec
mov
pop
and
or
sar
jp
test
jns
pavgw
repnz
scas
and
push
sub
cmp
ret
or
xchg
mov
xchg
xchg
xor
jno
or
scas
pop
ja
xchg
adc
movsl
xor
push
or
loope
or
dec
mov
cld
and
stos
dec
cltd
sbb
in
cmp
mov
push
imul
mov
dec
and
xor
lock
pushf
push
jo
jle
pusha
in
or
lods
lcall
or
ljmp
scas
and
outsl
adc
sub
jle
fistpll
fsubr
and
cmp
push
je
push
adc
outsb
adc
add
insb
xchg
ficoml
test
lahf
sbb
loope
and
sub
and
cmpsl
loop
jo
mov
inc
mov
mull
cs
fcmovu
enter
loopne
je
adc
adc
iret
jbe
mov
inc
into
ss
dec
int
daa
test
sbbb
negb
adc
clc
or
sbb
mov
movsl
addl
inc
inc
cltd
aad
mov
jo
xor
inc
repz
xor
test
loopne
movsb
and
push
imull
jp
and
sbb
mov
repnz
ds
pop
fdivrl
cmpsl
clc
pop
jbe
out
addr16
jnp
xor
cmp
mov
leave
sub
pop
inc
int
jp
cmp
addr16
cltd
mov
loopne
push
int3
xor
pop
mov
cmp
popf
mov
mov
sub
dec
stos
sbb
in
arpl
pop
mov
xchg
push
in
mov
lea
sbb
jne
mov
test
lret
sti
cmp
xchg
clc
movsb
sub
adc
cli
mov
xchg
add
out
in
push
pop
dec
or
sahf
outsl
mov
in
sub
jns
loop
push
pushf
pop
test
inc
das
sub
bound
fistpl
rcr
inc
test
ret
stc
adc
sub
rorl
jo
roll
aaa
push
movsl
test
in
mov
and
pop
add
aad
mov
jo
xor
inc
repz
shlb
adc
cld
in
aas
push
sub
sub
and
sbb
mov
repnz
ds
pop
fsubr
loop
sub
movl
repnz
mov
leave
sub
pop
inc
int
jp
cmp
addr16
cltd
mov
loopne
add
add
bound
gs
cmp
popf
mov
mov
sub
dec
pop
push
aam
fbstp
idivb
xlat
mov
pop
xchg
jecxz
lea
sbb
inc
jno
and
lods
cmp
in
inc
sti
lcall
adc
cli
mov
xchg
add
out
in
push
imul
pop
rcll
mov
jae
mov
pop
push
pushf
pop
test
inc
das
sub
loop
ret
sub
inc
mov
ret
stc
adc
sub
pop
bound
dec
mov
in
inc
lds
enter
pop
mov
imul
clc
jmp
enter
pop
fimuls
sub
popf
in
sub
cmp
push
sub
push
jbe
int3
iret
dec
rcrl
lods
aad
popl
jbe
clc
jne
push
xlat
jle
xchg
cs
and
adc
pop
push
sets
jnp
sti
add
pop
ret
pop
add
add
sahf
add
add
add
add
test
dec
and
sub
aam
xlat
mov
push
mov
scas
in
lods
xor
xlat
pop
jl
mov
pop
push
mov
in
push
jmp
jno
mov
add
jns
sti
sbb
add
inc
adc
fwait
jmp
das
call
lahf
jge
cmp
flds
xchg
shll
stc
iret
test
cmp
mov
hlt
lods
fcmovnb
pushf
jno
incb
inc
stc
mov
loope
ror
mov
int
js
inc
or
dec
pop
loope
movsb
cmp
outsb
jmp
faddl
sbb
rorb
jns
dec
push
addr16
sbb
mov
mov
sbb
lods
mov
cmc
ret
push
lret
sar
sbb
inc
sub
repnz
mov
inc
ss
cmpsl
and
iret
addb
xchg
sub
mov
std
shll
popa
inc
mov
adc
insb
mov
cmp
shlb
and
jnp
js
pushf
les
add
pop
cwtl
aas
jge
subl
into
rcrb
cmc
pop
xor
aad
cmp
and
lock
subb
sbb
xchg
shl
and
addr16
pop
add
cltd
outsb
mov
mov
aas
and
insl
jecxz
sub
or
jbe
lods
out
loopne
lret
push
fldl
add
icebp
int3
inc
sbb
adc
jne
aad
lret
sbb
pop
mov
xchg
sarl
pop
sub
test
dec
leave
jl
das
popf
add
gs
xor
loope
push
aaa
decl
mov
pop
dec
pop
out
out
mov
jp
lahf
xchg
js
mov
stos
push
movsb
mov
xchg
rclb
push
or
xor
inc
lret
and
test
pop
lods
cmp
loope
jne
stos
adcb
adc
lock
lods
inc
mov
divl
mov
cmc
xchg
ds
adc
sub
and
in
sti
popf
divps
or
roll
shrl
xchg
push
arpl
sbb
cwtl
pop
cmp
pop
loope
or
mov
hlt
mov
xchg
mov
and
xchg
popa
or
frstor
or
cwtl
cmp
test
cwtl
loopne
mov
addb
fprem1
cmp
add
jns
sbbl
push
fcomi
imul
movsl
or
fldl
xchg
mov
lods
mov
jg
loopne
push
test
add
cmp
ja
mov
cmp
or
jl
xlat
cmp
test
jns
lods
mov
loopne
cmp
clc
xchg
cmpsb
daa
mov
mov
js
js
inc
and
stc
jl
sbb
xor
xchg
nop
daa
add
adc
dec
sbb
mov
lods
xor
adc
wrmsr
sbb
fmuls
rorb
mov
ss
inc
test
stos
fucomip
shl
scas
lock
out
dec
out
bnd
pop
jl
cmpsb
push
and
mov
ja
shrl
mov
loop
cmp
jnp
adc
jp
mov
jne
out
fistpll
mov
jne
out
fistpll
mov
jne
out
fistpll
mov
jne
out
fistpll
mov
jne
out
lock
jne
pop
jno
repnz
aas
dec
push
aas
or
lahf
sahf
add
daa
or
addr16
push
dec
push
inc
stc
push
sub
xchg
inc
movsb
popf
adc
ret
rcr
cmp
sbb
inc
lock
dec
mulb
dec
ret
call
mov
daa
ficoml
pop
push
out
xchg
enter
loopne
in
cmc
push
xor
int
aad
fwait
sbb
mov
or
in
and
inc
mov
bound
and
cmpl
add
test
push
je
leave
fimuls
inc
nop
les
cmp
dec
jno
xchg
imul
mov
bound
sbb
sbb
pop
loopne
add
add
add
add
xor
and
cwtl
mov
sarl
test
dec
cmc
jecxz
movl
inc
div
push
xlat
daa
out
jg
push
push
mov
mov
xor
mov
lods
movsl
adc
fldl
xchg
lea
addr16
das
scas
ret
cmp
adc
sbb
xchg
fisttpll
aam
sbb
add
push
adcb
es
adc
scas
out
pop
out
pushf
inc
test
push
shl
loopne
repz
xor
stos
xlat
mov
adc
mov
inc
lcall
dec
xlat
xchg
xor
jge
jbe
dec
push
mov
pop
adc
mov
mov
std
mov
mov
mov
js
sahf
insb
pop
sub
add
add
outsl
pop
sbb
add
pop
xor
es
ret
ret
cmc
popf
adc
call
mov
jp
adc
test
adc
and
out
jne
aam
outsb
loop
loop
lock
cld
xchg
lcall
push
mov
push
and
push
cwtl
or
fsubl
jne
dec
adc
and
hlt
out
xchg
cmp
pop
js
fstl
xchg
xor
cmpsb
lret
xchg
or
and
adc
in
or
xchg
leave
lods
xorl
jmp
fwait
jle
cmp
pop
fcmovb
inc
and
mov
imul
cli
sahf
xor
push
cmp
popf
in
mov
jge
pop
mov
fcompl
and
adc
out
cmp
dec
mov
cwtl
ja
adc
jg
or
rclb
mov
jno
push
or
add
arpl
xchg
jmp
adc
imul
or
popa
mov
pop
sbbl
mov
ss
fsts
or
cmpsb
xchg
lods
outsb
inc
stos
pop
rorb
out
mov
lds
cmpsl
lahf
dec
cli
out
out
in
popf
cmp
add
push
pop
add
pop
loopne
add
add
add
add
mov
cmp
cmpsb
sbbb
rcll
sahf
test
push
in
push
outsl
aad
add
cltd
dec
into
mov
shlb
push
push
call
mov
scas
cmc
movsl
inc
pop
div
int3
cli
leave
lret
and
call
or
lcall
cmp
mov
aad
pop
jecxz
mov
mov
mov
cs
insb
adc
mov
daa
or
sahf
cmp
mov
sub
int
fdiv
testl
adc
jae
jo
dec
xor
sbb
pop
iret
mov
insb
in
vmread
lcall
lcall
popa
loopne
mov
lea
cld
push
into
jl
frstor
lods
push
push
xor
mull
popf
popa
xor
and
outsb
adc
sbb
or
xchg
vmovdqa
stc
mov
jno
rolb
addr16
adc
fwait
and
loope
lret
call
xor
ret
lods
shll
jno
jnp
jo
mov
sti
push
lods
das
xchg
pop
mov
rorl
sti
dec
ret
ss
les
add
mov
sbb
mov
iret
ret
int
xchg
inc
divb
jle
sub
and
jg
popa
pop
stc
xchg
outsl
nop
xchg
sti
mov
mov
cld
inc
call
xor
ds
sti
add
mov
mov
jmp
repnz
cmpsl
repnz
dec
cmp
loop
dec
fstl
jmp
jbe
js
scas
cmp
insb
jbe
pop
dec
pop
negl
xor
add
lahf
and
bound
add
cmp
sub
scas
fimuls
mov
ret
sub
push
ja
push
mov
lahf
daa
bnd
xchg
popa
aad
fwait
xchg
loop
jne
pop
dec
mov
test
mov
out
cli
lea
jge
jg
cwtl
movsb
push
fcompl
xor
enter
loop
mov
icebp
mov
popf
fdivp
push
rol
int
fistpl
pop
add
inc
mov
jbe
rolb
addr16
xchg
shl
push
jmp
inc
ficoms
xor
icebp
mov
dec
push
xchg
pop
shl
xor
pop
fstpl
movsb
adc
test
add
mov
xor
inc
ja
es
clc
xchg
aad
daa
cwtl
mov
sarl
mov
and
gs
xor
aas
mov
les
icebp
dec
loope
sbb
fisttpll
jg
mov
adc
aaa
and
mov
and
mov
sbb
test
loope
adc
leave
xchg
inc
jl
sub
fimuls
push
and
lds
add
cli
ret
lret
jae
outsb
cmp
into
test
mov
and
pminsw
cmpsb
mov
test
arpl
mov
sub
push
add
call
movsl
mov
imul
scas
xchg
mov
cmp
icebp
in
inc
sub
rolb
frstor
adc
pop
add
scas
sar
add
or
xchg
mov
sub
xchg
jle
xchg
pushf
and
lret
add
lret
or
test
mov
test
notb
inc
cmp
je
push
inc
test
out
push
adcl
stos
xor
sbb
sbb
mov
in
adc
mov
fwait
xlat
and
mov
sub
adc
push
jmp
fldl
jno
adc
mov
pop
insl
lret
icebp
lret
test
imul
fcoml
dec
xor
mov
idivl
and
xor
dec
sbb
ss
mov
sahf
vmread
jno
andl
int
mov
mov
icebp
das
push
test
cmpsl
cmp
jl
shr
or
pop
jg
mov
sub
cmp
scas
mov
add
push
cs
enter
fbld
das
sahf
xchg
je
mov
push
loop
divb
lea
rcrl
lods
cltd
aaa
xchg
cmp
in
fstl
jae
sub
mov
push
mov
sbb
adcl
sahf
ja
cmp
mov
mov
nop
cli
call
or
outsb
cltd
fs
push
test
or
sub
add
jle
add
aam
das
outsl
stc
push
insl
bound
data16
and
rcl
pop
pop
jp
sahf
lcall
cwtl
pop
std
subb
loope
lds
and
ret
lahf
add
dec
aaa
pop
ja
movl
out
popa
and
and
dec
shrb
inc
or
icebp
test
test
mov
xchg
sub
xchg
mov
xchg
fucomp
dec
jo
mov
xor
xlat
mov
cmp
adc
and
ss
jl
movsb
cmpsl
stc
xor
mov
iret
pop
out
jl
aaa
fistps
push
mov
xor
in
inc
dec
sub
sub
or
jl
mov
cmp
subl
fmull
andb
jl
cld
fistpl
push
inc
test
dec
jge
pushf
or
or
push
mov
pop
inc
pop
int
dec
fsts
sub
je
add
adc
dec
xchg
ret
fisubrl
fcmovnbe
jg
pop
inc
in
lods
and
and
push
negb
or
jp
mov
lahf
imul
inc
pop
ss
test
lock
rorl
inc
add
out
stc
addr16
sub
cltd
adc
sbb
or
mov
int
fidivs
inc
and
inc
or
push
aaa
mov
data16
sarl
xchg
bound
sarb
fsubs
popf
imul
sub
pop
ret
aas
xor
pop
push
repz
or
enter
xchg
loopne
in
dec
pop
test
ficoml
daa
pop
rcrl
ficoms
push
lds
jmp
sbb
adc
das
lret
ljmp
xor
loopne
popa
pop
fisttpll
ret
sarl
inc
jecxz
xorb
orl
xor
and
pop
pop
movsb
add
sbb
mov
push
das
in
stos
sbb
inc
mov
push
sbb
iret
cli
in
pop
ss
push
cmp
jl
cmp
into
jne
xchg
shll
cmc
jbe
movsb
xlat
dec
movsb
mov
dec
fwait
xor
imul
repnz
sub
call
lret
pop
mov
dec
pop
in
cmpsb
sub
jecxz
ret
mov
cmp
cli
jge
call
cs
daa
lea
sbb
scas
pop
jmp
aas
int
jl
imull
fcmovnbe
lret
jmp
sbb
push
jno
xchg
mul
and
xchg
repnz
push
fcoms
fbld
popa
xchg
and
aas
cld
xor
pop
fdivp
pop
cmpsl
pop
lds
and
lock
lds
and
iret
adc
or
outsb
adc
pop
popa
in
sarb
iret
cmc
adc
jne
adcb
ret
pop
das
mov
lds
and
lcall
stc
xor
push
push
repnz
imul
lock
dec
lds
rol
sub
xchg
adcl
jmp
xor
or
mov
cmp
inc
test
jo
mov
cmp
xor
cmpsl
mov
clc
cld
mov
mov
arpl
ret
shrl
pop
fldcw
jae
test
int
lret
pop
pop
dec
inc
jo
iret
and
add
mov
push
jmp
xchg
scas
mov
inc
repz
fcom
sub
std
inc
das
test
mov
xchg
or
cmpsl
mov
outsb
inc
aaa
add
movsl
outsl
jl
out
push
inc
andb
je
mov
ja
or
pop
f2xm1
mov
mov
ds
insb
or
fwait
rcrb
std
sbbb
dec
out
lock
sbb
jp
push
adc
adc
inc
sub
out
push
inc
add
out
repz
imul
xor
push
jnp
add
jge
mov
or
and
mov
repz
and
sbb
sub
mov
rorb
lock
pop
mov
dec
in
or
jle
lret
cmpsb
out
aam
clc
xchg
add
add
xor
cmp
jns
in
cmp
in
dec
sub
mov
mov
mov
aaa
sahf
loop
and
or
push
or
cmpsb
inc
sbb
fstps
ret
clc
dec
dec
jmp
andl
leave
lcall
or
dec
in
pop
out
push
into
inc
mov
loop
dec
xor
or
in
xchg
xchg
pop
dec
dec
incb
inc
push
test
mov
add
mov
xchg
pop
rclb
xor
dec
lods
inc
hlt
fistps
push
jl
add
in
push
sbb
aas
nop
cmp
lahf
es
dec
imul
out
jns
lods
jae
mov
push
lods
jb
fnstcw
jnp
jmp
jl
push
sbb
push
sbb
or
in
dec
push
fistpl
push
jo
mov
dec
sbb
dec
mov
lret
jbe
cmp
aaa
mov
movsb
cli
jle
mov
pmuludq
jecxz
push
into
or
and
add
leave
mov
fidivrs
mov
pop
addb
ljmp
inc
rolb
xchg
and
jne
push
imul
sub
int
pop
push
sbb
mov
push
lcall
jbe
mov
cmp
xchg
les
or
cli
dec
dec
sbb
das
inc
inc
push
sti
loop
clc
or
push
stos
mov
fldcw
sbb
data16
sub
adc
xchg
insb
push
pop
dec
push
jae
or
cmpb
mov
inc
out
add
mov
xchg
in
mov
jp
rclb
pop
mov
cmpsl
or
push
pop
lret
cmp
call
stc
movsb
fsubs
or
ss
enter
into
inc
scas
insl
lcall
mov
shl
xchg
and
push
adc
adc
xchg
out
lahf
or
call
repnz
pop
xchg
cmc
in
mov
ja
inc
lea
mov
out
inc
mov
and
inc
pop
or
rcrl
int3
divl
mov
rcr
sbb
aas
mov
inc
dec
pop
pop
mov
adc
mov
aad
xchg
inc
gs
mov
jp
insb
push
jnp
push
cmp
cmpl
or
pop
in
arpl
hlt
sub
or
outsb
test
mov
xchg
jp
lret
mov
sahf
xor
jmp
adcl
fists
enter
jbe
int3
dec
mov
mov
loope
inc
leave
bound
push
inc
xchg
and
mov
xchg
outsl
pop
imul
cltd
stos
jb
cmpsb
push
cmc
mov
xchg
out
pop
push
mov
sub
shlb
jns
adc
adc
lods
lret
adc
cmc
ds
or
je
push
inc
push
push
scas
std
out
add
jbe
sbb
jae
cmc
or
cmc
shll
xlat
into
movsl
cmp
sub
jb
mov
subb
ljmp
inc
insb
iret
das
fcomps
cmp
lods
mov
out
or
sbb
jmp
push
sub
test
jnp
addr16
roll
fdivl
hlt
hlt
addb
scas
mov
nop
lds
xchg
movsb
scas
bound
imul
adc
pop
insb
pop
cmpsb
push
js
pushf
fmuls
mov
leave
cmpsb
mov
sub
jle
popf
nop
xlat
add
fwait
incl
insl
inc
into
mov
stos
mov
push
lcall
and
fcoms
stos
rclb
xchg
mov
fwait
imul
sbb
aas
cmp
inc
or
outsl
or
dec
or
js
push
cltd
stos
cld
mov
mov
gs
out
dec
jns
cmc
in
subl
roll
in
dec
dec
add
or
dec
dec
pop
arpl
mov
jg
aam
jg
cwtl
mov
mov
or
sahf
insl
outsl
xchg
push
lods
xchg
loop
addl
int
lea
test
ret
fistps
cmpsb
and
push
pop
mov
or
sub
bound
sahf
testl
mov
cltd
cmp
scas
cmp
dec
rorb
nop
aas
insl
mov
mov
pop
cs
stc
push
js
and
test
sub
xchg
out
int3
je
movsl
and
add
ret
or
sub
and
mov
outsb
push
xor
sub
xchg
xorl
repnz
jb
incl
jmp
nop
add
push
stos
nop
shrl
cmp
fs
loop
daa
repz
cld
mov
inc
fdivs
add
push
cmpsl
gs
cs
dec
push
mov
or
or
pop
pop
and
mov
pop
mov
cwtl
scas
into
mov
add
xor
adc
test
lds
rcrb
xchg
xor
mov
xchg
sti
dec
add
sub
pop
mov
leave
jne
add
int3
iret
jne
pop
test
subl
das
repz
pop
cmp
mov
xorb
mov
hlt
pop
sub
cwtl
or
jle
fldt
mov
cmp
mov
xor
add
push
adc
mov
pop
xchg
or
cmp
inc
pop
mov
sub
xor
ljmp
xchg
mov
sbb
and
testl
dec
mov
mov
inc
pop
nop
xor
pop
sub
das
adc
cmpsl
jmp
mov
pop
push
imul
dec
jle
sbb
test
mov
push
pop
sub
lods
mov
jl
rolb
and
mov
adc
mov
adc
repz
lcall
push
movsl
out
sahf
jno
inc
pop
test
xor
fstpt
push
sub
dec
pusha
lret
mov
mov
dec
in
imul
in
imul
push
mov
test
xchg
mov
imul
add
pushf
sbb
sbb
push
ljmp
stos
aam
out
pop
mov
jp
add
mov
mov
leave
mov
jb
cmp
test
aaa
out
xchg
pop
or
pop
ficoml
ret
hlt
inc
gs
adc
aaa
pop
in
sti
sub
aam
pop
sub
cmp
push
pop
mov
daa
in
cmp
insl
int
popf
and
sub
data16
add
adc
fistpll
pop
mov
ret
mov
ret
and
inc
push
into
mov
xchg
mov
outsb
daa
test
pop
cmp
repz
add
ljmp
inc
and
mov
inc
or
int
out
loopne
jl
xchg
notl
scas
xor
out
jo
or
dec
ret
push
mov
cmp
or
ss
add
cwtl
mov
lahf
sub
loop
inc
in
mov
shr
mov
lcall
inc
push
ds
mov
lods
add
stos
shlb
and
adc
adc
xlat
notb
adc
fsubs
movsb
mov
xor
xor
cmp
rcr
inc
lcall
movsl
ret
cmp
dec
std
jmp
mov
sub
adc
dec
push
cmpsb
scas
shll
xchg
sarb
frstor
out
and
ret
push
lods
push
push
and
mov
test
jecxz
inc
ret
mov
xor
daa
ffree
or
insl
stos
inc
mov
xor
cmp
push
or
xchg
dec
sub
sbb
rorl
xchg
iret
mov
pop
mov
dec
or
daa
mov
jnp
push
stos
aas
pop
xchg
lret
fisubrs
push
push
sbb
imul
lahf
add
fstpl
jmp
in
mov
xchg
mov
cmpl
roll
ret
jns
jecxz
repz
fstpl
popl
adc
popf
sbb
iret
mov
xchg
aam
mov
jo
test
dec
xor
xchg
adcb
and
fnstsw
loop
lahf
stos
adc
inc
cmp
fndisi(8087
pop
repz
imul
imul
lea
repnz
subb
dec
xchg
mov
rcll
mov
es
mov
cmp
jnp
test
fildll
mov
pop
cmp
mov
cwtl
jmp
movsb
push
ds
sarl
mov
or
pop
lea
xor
hlt
les
psubsw
stc
jne
sbb
or
dec
mov
sub
inc
fstpt
jg
enter
ret
xchg
repz
push
cs
mov
mov
xchg
push
adc
cmpsb
movsb
ss
andl
jge
nop
mov
mov
cld
rcr
sarb
jb
cmp
sarb
movsb
mov
test
addl
and
or
mov
mov
lcall
mov
jecxz
sub
push
loope
maxps
dec
and
or
mov
ja
cs
cmp
mov
inc
mov
sbb
loope
mov
out
sub
or
test
mov
mov
shrl
xorb
pop
cmpsb
cmp
pop
je
add
fistpll
mov
push
fcoml
aaa
jl
or
jae
aaa
test
or
sti
icebp
add
add
inc
cwtl
lcall
push
imul
insl
pop
test
popa
cmpsb
xchg
jbe
aam
mov
sub
push
adc
fwait
xchg
or
rcl
cmp
repnz
adc
sti
out
sbb
lahf
sti
popf
or
xchg
outsb
gs
aad
sbb
sub
jge
push
pop
mov
test
adc
loope
or
jmp
fldcw
xchg
andl
inc
fimuls
xor
jo
mov
dec
push
loopne
mov
mov
pop
add
imul
xor
mov
cli
mov
scas
stos
jae
jmp
das
dec
scas
neg
frstor
leave
push
leave
pop
leave
gs
mov
ret
aam
out
fmuls
jo
aas
xorb
pop
int
dec
push
lret
mov
outsl
adc
fstl
mov
mov
aas
sbb
mov
lcall
clc
int
sub
add
inc
cmp
sbb
push
mov
movsb
xor
xchg
and
and
push
ret
cmp
or
inc
push
ljmp
push
mov
in
dec
pop
mov
pop
xchg
pop
pop
mov
test
aam
test
addb
imul
fnsave
clc
aam
out
test
and
pop
cltd
scas
das
inc
cmc
dec
lcall
xchg
mov
int
push
jbe
push
in
orb
iret
js
add
mov
je
sub
push
mov
mov
loope
inc
repnz
lods
int
in
pop
adc
cmp
ja
out
pop
xchg
add
jae
pop
das
movsl
movsl
dec
je
push
dec
cld
fisttpll
das
lods
mov
hlt
jge
lahf
mov
iret
hlt
push
scas
pop
xor
jns
adc
jo
insl
stos
jne
dec
insb
das
mov
mov
mov
add
or
mov
pop
imul
xor
sar
push
mov
cmp
fdivrl
pop
xor
mov
dec
cmpsl
sub
xor
cmpsl
pop
mov
popf
fcoml
stos
mov
push
testb
push
das
into
push
sbb
pop
into
xor
add
pop
add
test
nop
sub
repnz
je
lret
sbb
sbb
cmc
shlb
jb
mov
pusha
add
jb
sbb
fwait
punpckldq
aaa
push
incb
pusha
xor
pusha
clc
daa
je
sub
sbb
scas
imull
rcrl
mov
add
mov
mov
sbb
je
dec
cmp
cmp
inc
fisttpll
arpl
mov
or
scas
mov
dec
and
in
idiv
lea
inc
jecxz
jmp
call
pop
loopne
add
add
xchg
xchg
mov
mov
pop
stos
cmpsb
add
mov
mov
cmp
in
sub
rcrl
loop
fisttpl
jno
jb
dec
out
jnp
stos
sahf
and
sbb
jne
popa
inc
add
je
mov
mov
test
insl
dec
idivb
push
or
xchg
mov
cmp
jb
inc
pop
push
jl
es
fs
adc
cwtl
push
push
insl
xor
pusha
sbb
cltd
out
iret
pop
jg
cmp
cmp
lret
inc
outsl
dec
nop
xlat
xchg
mov
rcr
cmpsl
data16
or
cmpsl
outsb
mov
xlat
nop
dec
adc
cld
es
dec
cmpsb
rcrb
or
shr
out
sbb
xlat
fsubl
lahf
sbb
int3
repz
adc
pop
rolb
les
mov
push
xchg
xor
fcmove
push
lods
outsb
std
fwait
or
inc
or
dec
jmp
jg
cmp
mov
push
lock
ljmp
cltd
mov
push
int
insl
scas
xchg
pop
pop
and
cmp
mov
push
hlt
sub
gs
sbb
ror
push
pop
jmp
and
data16
lock
in
mov
mov
out
stc
insl
in
sarl
fsts
pop
aaa
adc
sub
adc
push
scas
lods
push
mov
dec
movb
sbb
or
inc
dec
imul
and
lret
mov
sbb
add
and
dec
sahf
stos
mov
mov
shlb
int
and
mov
lahf
fisttpl
xchg
sbbl
std
outsl
adc
mov
jge
and
data16
mov
call
cmp
scas
push
pusha
add
dec
imul
gs
cmp
sub
mov
or
xchg
pusha
lods
rcll
push
in
mov
pop
iret
dec
adc
call
xor
xlat
out
cmp
mov
pop
sub
fnstsw
jbe
xchg
xchg
sub
not
sbb
sbb
and
pop
mov
fidivrl
mov
jl
add
push
push
shrl
sbb
sbb
out
push
jg
xlat
mov
jmp
inc
xor
cmp
mov
fdivrs
fcmovb
sub
in
add
cmp
jb
or
and
out
mov
xchg
ss
dec
jle
cmp
pop
dec
mov
out
xlat
es
loop
fildll
pop
mov
dec
cmp
imul
out
jae
lods
cmpsb
jno
sub
inc
stos
dec
dec
or
out
in
filds
xchg
and
mov
sub
test
sti
xor
ficoml
xchg
lret
fs
mov
inc
sbb
out
sbb
ja
data16
mov
loop
mov
add
xchg
push
xchg
or
pop
fs
addr16
mov
popf
dec
fs
mov
xchg
cmp
lock
dec
fwait
dec
push
int
sub
xchg
jo
outsb
add
fsubrl
lcall
dec
add
lea
popa
or
mov
inc
push
add
lea
inc
mov
cmp
jo
inc
mov
cmp
cmp
sbb
dec
leave
icebp
je
mov
xchg
sbb
mov
nop
lods
dec
in
fsub
sbb
mov
in
mov
and
push
mov
push
and
push
mov
mov
enter
mov
jbe
das
inc
sub
pop
test
in
xchg
into
adc
add
jbe
call
insb
in
mov
inc
in
jo
sbb
mov
icebp
pop
jge
or
dec
pop
push
mov
dec
lcall
fxch
pusha
test
or
stc
or
inc
and
pop
fistpl
mov
mov
cmpsl
loope
adc
mov
addr16
sar
add
push
adc
jns
sbb
xchg
sbb
mov
stc
movsb
loopne
icebp
push
ja
int3
inc
loope
imul
cmpsb
call
xor
out
pop
negl
sbbl
les
xor
dec
xor
push
clc
push
aam
xchg
mov
nop
aam
daa
fsubl
ds
hlt
mov
mov
or
stos
add
inc
adc
fwait
mov
pop
jmp
jns
dec
nop
xor
fs
xor
jb
xchg
rorb
sbb
or
out
sub
jnp
mov
push
adc
mov
xor
push
sti
mov
gs
orb
push
sbb
inc
push
cwtl
roll
cmp
outsl
add
mull
test
popa
inc
mov
incl
es
orl
int
mov
cmp
hlt
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
aad
fwait
cmp
fs
add
add
jno
add
pop
loopne
add
add
add
add
add
inc
fwait
test
addl
mov
es
mov
mov
fldcw
shlb
insb
in
sub
subl
inc
icebp
push
add
cmp
sbb
call
das
pop
sub
arpl
pop
pop
push
jle
jb
idivb
jg
sbb
or
mov
int3
mov
inc
jge
jno
fisttpll
jne
pop
lahf
lret
adc
addl
adc
ror
ret
movsl
shr
addb
xlat
mov
push
mov
rcll
ljmp
rcl
cmp
and
adc
into
mov
pop
es
mov
cmp
cmp
dec
movsl
cli
or
outsb
sub
ljmp
lock
sbb
lcall
pop
xchg
ret
imul
addr16
add
cmp
adc
jmp
in
imul
les
jge
lret
fstps
imul
dec
add
sbb
sbb
mov
pop
mov
popa
icebp
cli
add
jmp
mov
mov
sub
shr
jecxz
cmp
dec
cmpsl
or
mov
mov
mov
adc
ds
sbb
push
push
add
sbb
sub
mov
cld
in
imul
lods
mov
add
rcrl
aam
sub
imul
inc
stos
test
fidivs
or
adc
mov
sub
mov
repz
adc
in
push
enter
add
pop
fwait
out
push
xchg
pop
lret
dec
cmpsl
out
das
out
sub
push
repnz
push
aaa
ret
xchg
popf
jb
bnd
inc
mov
pushf
pop
sbb
shlb
lods
xchg
inc
adc
enter
clc
outsb
mov
pop
fs
ret
xorb
pusha
pop
mov
pop
rcrb
xor
mov
inc
push
dec
dec
xor
out
rclb
roll
clc
je
mov
es
leave
mov
jae
ds
jae
mov
xlat
ss
mov
and
fisubrs
lods
fnstsw
mov
push
test
sub
cmpb
jmp
call
sub
fsubl
jg
dec
sub
aas
hlt
aas
shlb
stos
mov
dec
push
mov
adc
pusha
subb
pop
push
sub
xchg
repz
and
fadds
sbb
xor
mov
xor
repnz
in
int3
jmp
out
pop
push
inc
cltd
cmpsl
mov
scas
push
test
push
out
inc
jle
xor
xchg
push
sub
mov
push
mov
je
xchg
das
imul
jecxz
jecxz
mov
cmpsl
fdivl
pusha
jnp
pop
xchg
repnz
sti
adc
jbe
pop
jns
jmp
mov
pop
mov
jp
dec
mov
lcall
ljmp
push
inc
outsl
pusha
ds
jns
gs
dec
ret
fidivrl
lods
fistpll
aaa
add
int
cmc
sbb
outsb
jecxz
jecxz
sbb
popf
mov
cltd
cmp
leave
rcrb
ret
inc
pop
addr16
loope
cltd
mov
hlt
ret
addb
movsb
int3
flds
push
js
push
or
cmp
cmpsb
cmp
icebp
mov
cmp
mov
xor
push
in
jmp
mov
lret
or
out
mov
mov
mov
jecxz
sub
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
push
inc
aaa
push
jb
mov
cmp
mov
ljmp
sbb
push
stos
add
int3
mov
mov
lcall
add
add
sahf
add
incl
add
add
lret
xchg
or
xor
imul
pop
jo
cmp
loop
mov
rcrl
push
rorl
mov
inc
cmp
xor
stos
es
cwtl
pushf
mov
sbb
or
in
push
out
stc
data16
stos
and
dec
ljmp
cmp
sbb
xor
call
popf
cwtl
adc
pop
sahf
shll
test
xchg
cwtl
lds
scas
add
out
lahf
testb
push
iret
mov
cmpsb
into
punpckldq
mov
nop
lea
stos
ret
mov
sub
ljmp
jmp
mov
sub
repz
mov
dec
jp
inc
int
mov
add
pop
loopne
add
incl
add
add
sbb
out
jb
cltd
push
xor
push
mov
push
xor
mov
imull
or
push
mov
jne
lds
loope
rclb
mov
fdivr
pushf
dec
das
leave
negl
adc
insb
gs
lret
add
sub
leavew
iret
adc
sarl
inc
sub
cmp
push
dec
in
cmp
sbb
lea
jecxz
lahf
leave
push
in
mov
sub
aad
inc
or
adc
into
sub
or
cmp
cmpb
aas
inc
sbb
pop
clc
and
jo
mov
andb
mov
and
repnz
xchg
mov
jmp
pop
or
sahf
add
incl
add
add
xchg
and
inc
push
push
or
fsubs
sbb
cmp
push
or
fidivrl
mov
push
imul
ret
shrl
lahf
sahf
rcrb
mov
and
mov
in
and
mov
add
cmpsb
jmp
test
shlb
push
mov
insl
enter
jmp
cwtl
jle
jnp
jp
xchg
insb
insl
sub
mov
or
xor
and
push
sbb
add
add
sahf
add
add
add
add
jbe
pop
or
adc
dec
push
cs
pop
fwait
cli
pop
push
jle
stos
add
cmpsb
jno
int
add
jp
lret
int3
rcrb
sub
push
mov
int
cmp
insl
addl
push
and
lret
mov
ror
lahf
fcomps
fwait
test
mov
jecxz
dec
rep
xchg
dec
test
pop
int
pop
lds
mov
enter
pop
mov
inc
xlat
adc
aas
jnp
sbb
adc
loopne
mov
lods
lret
inc
pop
cld
popf
movsb
nop
sub
push
negb
repnz
or
pop
icebp
sarb
mov
das
pop
movsl
nop
out
lahf
shr
push
mov
sub
add
test
test
push
inc
pop
stos
rcl
dec
xor
pop
pop
movsl
mov
sbb
stos
sbb
dec
pop
xchg
mov
mov
and
sbb
popa
and
sbb
les
or
jp
dec
and
push
shlb
cwtl
pop
ret
or
ret
push
js
jge
mov
loopne
mov
add
leave
mov
repz
test
ljmp
hlt
and
or
jb
jge
fs
add
lock
cmp
or
pushf
pop
sub
pushf
or
cli
sub
ljmp
jl
cmp
shrb
stc
xchg
xchg
xchg
xor
adc
popa
cmpsl
pushf
fisubrl
into
js
ja
icebp
lahf
jno
push
lret
inc
cmp
std
sarw
or
pop
ja
sbb
mov
xor
out
hlt
in
test
fimuls
push
xchg
jae
pushf
mov
cmpsl
xchg
ret
dec
xchg
sub
int3
inc
mov
test
out
fcoms
addb
sub
sbb
repz
stc
sbb
scas
inc
outsb
mov
mov
cmpsl
jmp
push
sarl
lahf
outsl
pushf
adc
fstpl
mov
out
cltd
jmp
sar
mov
dec
add
mov
sbb
push
mov
hlt
movsl
sbb
cmp
xchg
lret
and
pop
loop
test
add
inc
mov
add
xchg
push
push
mov
aad
and
fldt
in
shr
cmpb
mov
mov
mov
mov
mov
xlat
das
je
push
cmp
je
dec
incl
cmc
dec
dec
cmp
add
cmpsl
mov
and
loopne
cmp
decb
dec
js
push
inc
dec
inc
push
pop
xor
ja
fildl
inc
push
push
sbbl
mov
pop
jno
and
cmc
lret
arpl
cld
adc
jg
das
std
push
sbb
lods
je
inc
in
dec
stc
cmp
push
loope
cs
adc
xrelease
push
test
rol
adc
popf
insl
movsl
movsl
rcrb
jmp
icebp
xor
cs
push
iret
pusha
dec
xchg
ret
mov
jae
adc
rcrb
out
pop
xchg
inc
clc
xor
jnp
subb
mov
xor
pusha
push
fwait
lds
sub
sub
push
add
xchg
test
mov
inc
scas
test
cmpsl
stc
jno
aas
mov
ljmp
ja
cmp
lea
arpl
jle
push
das
test
jge
jmp
mov
pop
loopne
add
add
add
add
add
scas
and
cmp
sti
int
xchg
pop
push
add
xchg
or
and
xchg
jns
daa
jo
stos
int
and
mov
cltd
mov
inc
mov
mov
movsl
pop
pop
and
int3
loop
push
repnz
add
es
sub
pusha
orl
rcrl
cmp
aam
mov
hlt
and
adc
jp
shll
push
pop
dec
sbb
and
ret
into
movsb
mov
xor
in
stos
enter
mov
aas
mov
push
mov
adc
mov
outsl
push
or
sbb
subb
push
dec
shr
lds
jae
or
lds
or
inc
sub
sbb
sar
and
pop
je
jge
jns
dec
inc
sbb
sti
push
cmpsb
lea
pop
pop
rcrl
inc
hlt
iret
lock
js
xor
pop
test
push
mov
icebp
js
dec
outsl
fcoms
push
mov
into
jne
outsb
push
repz
stos
and
rcrl
testb
repz
hlt
fs
lods
mov
lcall
ret
mov
mov
sbb
icebp
jecxz
imul
and
mov
pop
outsl
cmp
xchg
dec
ret
lods
mov
or
sub
adc
xchg
xchg
test
scas
mov
jno
pop
mov
inc
mov
push
xor
add
pop
loopne
add
add
add
add
testb
cli
in
pop
mov
jecxz
shufps
loope
add
pop
lret
int3
mov
test
scas
stos
xor
sbb
pop
test
mov
mov
jp
and
cmpsb
add
stos
bound
icebp
stc
test
filds
or
or
jb
je
inc
into
mov
pushf
repz
mov
in
push
push
xor
mov
push
bound
icebp
and
xadd
inc
popf
jae
cmpsl
repz
insb
repnz
sbbl
out
push
mov
pop
inc
xor
add
sub
sbb
sub
xor
adc
aam
pusha
push
insl
pusha
adc
and
roll
insl
push
std
fs
dec
xchg
push
xchg
inc
push
and
sub
clc
push
adc
sub
popf
dec
stc
mov
cli
push
dec
push
int
dec
scas
mov
into
dec
cwtl
cld
outsb
xchg
je
mov
and
pop
mov
pop
cmc
or
lods
addr16
enter
pop
cmp
push
cltd
jb
lods
fwait
or
jnp
and
and
push
sbb
mov
and
inc
and
mov
test
iret
mov
es
data16
or
sbb
lea
outsl
stc
int
rorl
mov
or
push
lds
jbe
insl
out
sbb
dec
or
popf
pop
in
in
xchg
ljmp
adc
out
jecxz
xlat
mov
adc
inc
dec
loope
push
jns
jb
xchg
push
add
inc
mov
cmc
test
adc
lock
mov
mov
sahf
pop
jae
push
pusha
fcoms
adc
push
insl
aad
push
push
cmpsb
fwait
jp
xchg
jno
enter
cmpsb
xchg
xchg
lds
in
adc
lcall
or
in
movsl
inc
test
adc
add
fisubs
push
sbb
cli
out
sub
jae
fistps
cmp
cmc
pop
mov
push
mov
push
or
fcoms
push
lret
adc
lock
xchg
xchg
xor
mov
jae
dec
push
insb
pop
and
pop
mov
add
pop
and
xor
in
pushaw
imul
xchg
sbb
scas
stos
cmp
imul
cmp
std
fs
loope
outsb
mov
aad
subb
jno
ja
dec
and
jle
cmp
dec
jae
testb
ficoms
ret
gs
clc
sarb
mov
dec
jne
clc
pop
data16
pushf
prefetchwt1
push
out
stos
add
add
outsb
mov
loopne
and
leave
mov
outsb
iret
test
push
cmp
aaa
les
xor
fwait
icebp
push
into
jge
movsb
push
js
ds
pusha
stos
jnp
cld
iret
leave
push
add
dec
xchg
vmread
xlat
mov
stos
cmpsb
testb
inc
nop
imul
fdivrs
mov
fsubrp
add
int3
js
add
pop
loopne
add
add
add
add
dec
adc
add
pop
ret
loope
xor
add
dec
mov
ret
outsb
jg
clc
cmpsb
inc
fldt
loope
xchg
xchg
je
add
cmc
fdivl
daa
mov
dec
add
mov
adc
in
cmp
sbb
pop
sarb
cmc
ja
insb
or
into
testb
cmp
jo
lea
popf
cmp
push
not
shl
jecxz
pop
aad
mov
cli
pusha
mov
shr
mov
shlb
inc
gs
cltd
sbb
cltd
pop
lahf
sub
xlat
in
jb
mov
fldcw
push
lock
push
call
test
test
aas
aaa
mov
out
push
fildll
push
pop
in
frstor
lret
stc
ret
insb
inc
pushf
test
mov
or
push
cwtl
jge
lret
mov
arpl
rcl
out
pop
scas
sub
test
lret
test
int3
insl
ds
push
repz
push
mov
pop
xor
mov
stos
xor
movsl
clc
cmp
nop
outsb
adc
xchg
or
jo
mov
imul
inc
xchg
movsl
pop
ss
jecxz
out
adc
stc
add
popa
add
iret
dec
aad
xchg
cli
fstl
ror
push
pop
pop
lret
mov
pop
mov
adc
jb
dec
xlat
mov
icebp
pop
lods
cmp
mov
jno
je
sbb
les
sub
xor
push
les
jle
xor
adc
add
movsl
loop
inc
xor
shrl
mov
fabs
add
pop
lret
mov
leave
push
pop
data16
xchg
into
pop
mov
mov
insb
or
cmpsb
lret
push
dec
dec
mov
and
aas
sub
jge
cmpsl
mov
inc
dec
mov
in
mov
mov
ficomps
fcomp
mov
outsl
pop
ret
jle
lahf
pop
add
xchg
cwtl
in
das
sub
adc
jne
cmpsb
ret
sub
jecxz
cmp
lods
sub
or
xor
cld
out
jbe
push
test
inc
jo
outsl
mov
das
out
aas
repz
ret
icebp
pop
sub
lods
pop
xor
data16
add
ds
xchg
mov
sbb
mov
pop
mov
loopne
mov
int3
mov
and
pushf
lds
mov
inc
xor
repz
jns
daa
sti
dec
shrl
in
cmp
repz
dec
and
je
add
aam
adc
pop
pop
dec
jns
test
bound
stos
scas
imul
rcrb
sbb
sbbl
inc
jle
xchg
or
mov
mov
adc
sub
rcll
cmpl
push
adc
xchg
and
mov
out
dec
sbb
inc
cmpb
fdivs
jmp
mov
pop
pop
lret
movsl
inc
xorl
mov
insb
mov
dec
insl
mov
xlat
nop
rcrl
inc
xchg
es
push
sbb
sbb
or
hlt
gs
outsb
fwait
add
aad
pop
pop
inc
or
sub
int
sub
aad
and
xor
add
cld
push
mov
fimuls
jge
sub
and
push
mov
add
fisubs
pop
xchg
iret
jp
inc
add
mov
jns
arpl
repnz
jmp
dec
sbb
xchg
test
fbld
inc
rolb
inc
and
je
lret
xor
stos
cmp
fisttpl
sarb
mov
out
pop
mov
sub
jbe
addr16
xor
pop
sbb
sub
in
test
sub
mov
ja
mov
mov
pop
sub
pop
mov
shl
sbb
pop
cmp
fnstcw
jge
sbb
mov
dec
cmp
xor
jle
push
mov
add
mov
cli
leave
xchg
icebp
xor
jns
dec
or
aaa
add
jmp
insb
xchg
hlt
scas
test
or
test
es
stc
xlat
mov
push
or
xor
pop
std
add
push
aad
ja
adc
out
pusha
inc
into
sbb
dec
ds
sbb
add
xchg
push
sbb
or
sub
adc
lcall
dec
lea
fisttpl
popa
dec
sbb
movsl
or
out
mov
and
push
fs
or
rcrl
scas
shr
push
out
mov
pop
mov
inc
inc
and
daa
sbb
mov
xchg
cli
sub
xor
pop
int
xchg
add
cmpsl
mov
cmp
mov
scas
stos
cmp
popf
dec
push
mov
outsl
mov
dec
lds
fucom
lock
addr16
cltd
push
and
sahf
imul
dec
dec
ja
lods
popf
inc
ljmp
and
dec
cmp
jmp
xchg
notb
mov
mov
jae
jbe
cmp
es
negl
push
jp
inc
push
mov
aad
jo
mov
aas
negl
inc
scas
dec
add
xchg
sub
xchg
cs
lea
das
nop
push
outsb
int
mov
sbb
ja
mov
rcl
inc
dec
fldenv
xor
loopne
mov
popa
push
xchg
repz
ret
push
js
adc
enter
push
xchg
push
es
lcall
mov
mulb
in
and
test
xlat
jl
je
rcrb
cmp
jle
ja
sub
pop
adc
or
insl
mov
mov
fistpl
out
cmp
je
and
and
testb
mov
sbb
mov
ficompl
and
push
std
in
sub
add
lret
fwait
outsl
cmpsl
jo
sub
mov
fcompp
pop
sbb
jmp
xor
adc
mov
jb
sub
jo
jle
addr16
pop
mov
ljmp
xor
push
stos
mov
jne
pop
cmpsb
rclb
jnp
in
and
or
aaa
aaa
data16
jno
jecxz
cmpb
lret
inc
cmc
inc
loope
sbb
jae
nop
adc
xchg
jb
or
xor
push
sub
cltd
dec
add
inc
fwait
loope
mov
fimull
push
sub
xor
in
out
ret
xchg
test
mov
mov
inc
jecxz
enter
lret
loop
mov
insl
mov
or
sub
incl
mov
fs
mov
insl
shlb
mov
out
aad
or
pop
dec
add
stos
jg
inc
add
bound
stc
push
dec
and
push
lds
scas
and
mov
daa
sub
inc
popf
scas
loope
mov
fucomip
iret
pop
ja
enter
pushf
adcl
xchg
jmp
fucom
mov
mov
jne
mov
loope
cmpsl
push
lds
adc
cmp
pushl
push
mov
inc
mov
mov
std
repz
dec
jo
int3
fisubrs
xor
xchg
loopne
add
pusha
arpl
scas
fildl
jmp
pop
fidivl
xchg
enter
sub
clc
add
andb
cmpsb
dec
xchg
movsb
add
xor
aam
lret
xor
or
in
xchg
xchg
mov
inc
loope
lds
cmp
bound
ret
rorl
xlat
or
pop
not
mov
jnp
int
fistpl
adc
js
mov
mov
les
imul
fs
out
test
cltd
ret
fwait
mov
mov
mov
fidivs
in
fdivrl
jp
add
add
sahf
add
incl
add
add
mov
mov
push
adc
and
dec
ja
pop
outsb
xchg
push
loop
js
das
xor
or
xchg
rcll
xchg
mov
fistl
sbb
add
xchg
outsl
mov
ljmp
dec
in
cmp
out
in
mov
push
jns
gs
out
mov
inc
jnp
outsb
xchg
pop
mov
ret
inc
rcrb
mov
lea
pop
add
add
sahf
add
add
add
in
dec
stc
add
push
popa
mov
jnp
jle
dec
sbb
nop
sub
aaa
inc
repnz
jbe
jg
and
hlt
hlt
jle
fidivl
bound
cmpsb
dec
xor
loope
mov
in
lret
repz
or
leave
adc
xor
add
pop
loopne
add
incl
add
add
popa
pop
ror
mul
movsl
adc
and
push
jl
ficomps
repnz
adc
lret
jno
aas
add
adc
out
mov
pop
sub
jnp
xchg
and
repnz
dec
js
pop
test
push
push
xchg
std
ret
popa
add
add
sahf
add
decl
sub
rcrl
pop
jl
ret
cwtl
inc
jo
repnz
enter
inc
lcall
les
sarb
pushl
xchg
imul
fs
dec
lahf
icebp
dec
mov
es
xchg
out
push
adc
sub
or
fildl
jbe
popf
xor
iret
sub
sub
scas
push
test
mov
outsl
aad
loop
icebp
or
clc
outsl
pop
and
mov
ljmp
mov
mov
ret
orb
dec
rorl
mov
movsb
cmp
lret
pop
cmpl
cmp
push
adc
mov
adc
pushl
sub
cmpsl
or
xor
test
lds
mov
mov
inc
pop
xchg
and
cmc
jbe
mov
jecxz
lods
pusha
ret
pushf
mov
sti
mov
in
cld
jge
aad
push
inc
mov
adc
fsts
jmp
mov
aas
xchg
mov
add
inc
popf
push
adc
js
out
call
andl
sub
stc
mov
cmp
rcrl
shrl
or
sbb
sub
in
mov
stc
xor
and
add
add
sahf
add
incl
cmp
into
shrb
sbb
xor
js
adc
movsl
push
mov
les
outsb
repnz
popf
jmp
out
jg
pusha
stc
mov
insl
insl
and
sbb
sahf
outsl
cld
lret
mov
data16
scas
test
js
ret
outsl
in
mov
imul
movsl
cmp
mov
inc
cmp
adc
int3
sti
pop
repnz
stc
mov
repnz
pop
sbb
mov
xchg
mov
push
adc
pop
push
jbe
out
push
mov
xchg
loopne
enter
arpl
loop
rolb
sbb
enter
ss
mov
jns
iret
push
xchg
outsl
inc
or
fs
ret
mov
jmp
mov
inc
aad
shlb
xchg
cmp
testl
fwait
stos
mov
jp
nop
imul
les
inc
pop
cmp
push
imul
arpl
xchg
aaa
dec
ljmp
div
inc
cmp
icebp
cmp
call
decl
adc
cmp
testl
out
jns
popf
cs
outsl
xor
add
outsl
lea
stos
xlat
cmp
adc
xor
jo
int
xor
jp
cli
in
push
xlat
mov
inc
cmp
out
sbb
add
push
insl
sub
stc
daa
mov
out
imul
mov
iret
xchg
popa
cli
hlt
jo
not
push
aad
dec
dec
test
aad
mov
ds
jmp
cltd
add
mov
popa
dec
popa
outsb
iret
pop
in
dec
xor
adc
push
xor
dec
adc
lods
mov
or
notl
in
inc
into
int
and
cmp
mov
or
pop
es
mov
shlb
sbb
sbb
inc
dec
mov
mov
cmp
xchg
dec
adc
or
push
call
stos
and
repz
dec
cmp
jmp
xchg
mov
push
xchg
js
rcll
mov
rcrl
cmpsb
stos
ss
dec
dec
jge
mov
aaa
cmpsl
xor
mul
aas
mov
xchg
fwait
mov
dec
jle
push
mov
push
sub
inc
in
jbe
les
ds
xor
lret
xor
fs
les
scas
fs
gs
ljmp
xor
insb
mov
iret
pop
stc
fistl
mov
enter
int3
mov
fdiv
mov
dec
and
add
call
les
xchg
popf
popa
lea
inc
dec
aad
dec
ja
push
pop
xor
adc
aas
jp
mov
int3
pop
jecxz
mov
aaa
lcall
xchg
cmc
sbb
xchg
xor
mov
mov
mov
pop
sbb
pop
shll
popa
push
shl
jo
lods
movsl
push
xchg
xchg
add
add
sahf
add
incl
enter
xlat
stc
pop
loop
bound
mov
lcall
dec
lock
fs
jge
pop
or
or
dec
mov
pusha
dec
adc
inc
mov
loope
xchg
bound
shr
inc
pop
jmp
sub
jge
imul
ljmp
fstl
mov
adc
pop
and
and
subl
test
imul
mov
mov
ss
popa
jbe
sub
pop
fwait
in
xor
dec
xor
or
push
pop
jmp
fndisi(8087
jno
clc
dec
xor
mov
int
mov
cmp
shl
shll
or
test
hlt
xor
ret
inc
inc
push
sub
xchg
add
mov
lret
shlb
inc
jl
adc
fwait
lock
mov
or
mov
pop
imul
popa
xor
jmp
not
test
popf
rorb
aad
dec
add
loop
pop
shl
mov
fwait
xchg
mov
or
imul
loope
dec
arpl
xor
push
and
jle
mov
sbb
or
clc
arpl
shl
imulb
jb
jg
pop
fcomps
and
add
add
add
sahf
add
incl
add
add
data16
xor
mov
mov
loop
mov
fwait
cmpsl
int
sub
ret
dec
mov
xchg
push
sbb
aam
lea
push
push
or
pop
mov
push
dec
xor
jns
pop
push
cltd
xor
into
leave
or
andl
mov
call
or
mov
cmp
out
lock
repz
addr16
jns
push
mov
je
js,pn
xchg
xchg
adc
xchg
dec
in
dec
mov
jno
jecxz
test
je
clc
outsl
repz
lods
into
das
xchg
cmp
adc
xchg
cmp
adc
xchg
cmp
adc
xchg
cmp
adc
xchg
cmp
adc
xchg
cmp
adc
xchg
cmp
adc
add
add
add
add
add
