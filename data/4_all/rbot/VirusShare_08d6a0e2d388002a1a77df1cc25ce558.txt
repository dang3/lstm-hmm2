int3
pusha
or
add
add
cmp
or
mov
or
or
add
add
add
call
popa
or
imul
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
or
jo
or
test
add
or
dec
pusha
or
pusha
pusha
or
jo
or
test
add
or
add
add
jne
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
pusha
or
hlt
pusha
or
sub
add
dec
add
add
add
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
inc
add
add
add
add
add
aad
movsb
cmp
mov
cli
rcll
cmpb
and
sub
or
daa
mov
pop
loopne
xchg
mov
iret
filds
daa
push
aad
add
xchg
test
jp
cs
clc
mov
pusha
mov
rorb
paddd
mov
push
roll
pusha
xchg
pop
pop
xchg
add
mov
inc
adc
dec
sub
loopne
push
cmp
pop
icebp
jmp
jmp
insb
rorl
out
push
mov
dec
out
popa
pop
loopne
dec
dec
add
inc
adc
pusha
mov
ljmp
cmp
or
cmpsl
or
adc
inc
cmp
dec
xchg
fistl
jbe
or
cld
or
cmp
inc
add
mov
sub
ficoms
daa
xor
dec
sbb
jp
test
mov
enter
aas
mov
loope
fnstcw
stos
inc
add
inc
cmp
imul
dec
fwait
add
imul
inc
movl
dec
pop
mov
mov
fimull
dec
sub
xor
jmp
inc
mov
outsl
push
cmp
popf
adc
adc
push
movsl
jle
pop
mov
je
out
scas
gs
dec
or
xorb
xor
adc
adc
aam
mov
orl
pop
cmpsl
mov
or
jecxz
inc
or
daa
mov
ret
add
xchg
fisttps
mov
and
inc
adc
imulb
loope
insb
mov
sbbl
dec
mov
ret
add
xor
push
notl
mov
call
add
dec
gs
xor
insl
inc
mov
xchg
mov
sbb
mov
call
jnp
cld
push
mov
ds
cld
mov
mov
sbb
dec
mov
loopne
sbb
mov
loope
mov
leave
jns
inc
fs
pop
in
lcall
pop
xchg
or
pop
es
insb
dec
pop
jmp
pop
xchg
sub
loop
sub
and
sub
or
roll
test
loop
add
xlat
adc
gs
jge
bound
pop
mov
cmp
adc
cs
sbb
inc
movsl
lods
dec
pop
test
add
add
jecxz
cmpsb
rorb
insb
add
enter
cmp
into
and
mov
lock
pop
mov
loope
jo
stc
stc
cmpsl
inc
arpl
add
and
popa
mov
jno
xor
subl
dec
roll
adc
add
xchg
pop
mov
aam
movsb
cmp
cmp
xor
pop
outsb
sbb
cmpsb
adcl
push
lahf
in
and
pop
mov
dec
dec
sbb
push
xchg
imul
xchg
inc
gs
enter
sbb
mov
and
lahf
jg
sub
bound
out
jnp
ret
inc
cmp
push
aam
aas
push
jae
out
lds
mov
jecxz
mov
mov
cltd
jns
icebp
cwtl
pusha
xor
enter
mov
push
movb
sbb
jge
movntq
cmp
mov
sub
nop
sub
mov
or
add
sbbb
les
cmp
push
in
sub
jp
mov
xchg
lock
mov
std
gs
or
jae
cwtl
inc
xchg
jg
rclb
xor
and
push
add
or
mov
cmpl
insl
mov
sbb
fdivrs
mov
into
cmp
subb
jmp
mov
iret
xor
xchg
xchg
mov
mov
and
test
or
test
mov
mov
rol
mov
push
push
adc
push
mov
lods
dec
insb
insb
or
fcoms
popa
shrb
adc
and
inc
inc
add
lahf
or
xchg
mov
push
pop
cmpsl
lret
out
stos
push
mov
fdivrs
inc
add
repnz
loop
xlat
inc
orb
aad
and
sbb
call
push
mov
aad
pushf
bnd
or
andb
add
mov
sbb
fs
sbb
push
pop
int3
push
inc
mov
sbb
orb
dec
sbb
mov
push
daa
push
pop
or
ss
inc
and
outsb
inc
out
or
pushf
loopne
fadds
subb
je
push
pop
mov
shll
insb
lahf
pop
sbb
add
pop
or
mov
xor
add
jecxz
popl
rcrb
data16
fldl
stos
mov
xchg
in
pop
stos
and
sti
jp
lahf
loop
or
je
cmp
out
icebp
xchg
inc
adc
iret
fld
ja
test
mov
push
sub
iret
mov
mov
dec
xchg
je
push
adc
rorb
pop
fwait
inc
loope
cld
addb
imul
pop
shrl
mov
add
mov
or
adc
nop
mov
jb
pop
and
jmp
je
cmp
test
inc
stc
mov
sbb
cltd
add
pop
rorb
sti
and
rorb
mov
inc
mov
rcll
push
mov
cs
adc
mov
fidivrs
jb
and
push
sub
jne
test
sbb
push
or
push
ss
push
mov
aaa
inc
dec
adc
cwtl
insl
push
shll
or
loop
adc
bound
cmpsb
cmp
inc
stc
pop
sub
sbb
pop
xchg
aas
mov
cwtl
adcl
cld
push
cmp
xor
mov
push
ficompl
mov
bound
and
es
cwtl
or
popf
and
sbbb
push
les
mov
inc
mov
inc
mov
nop
imul
cmp
xchg
or
mov
xor
in
sahf
sbb
inc
hlt
jno
pusha
mov
cwtl
rcll
loop
xchg
insl
lods
sahf
sbb
and
imul
push
lods
cmp
mov
mov
push
sbb
inc
je
mov
lea
rclb
push
adc
mov
cld
inc
cltd
cmp
mov
jo
or
loopne
nop
pusha
sub
leave
sub
inc
sub
pop
xchg
xchg
xor
lods
push
jns
push
adc
lret
inc
add
mov
cs
sbb
sub
xchg
insb
jne
xchg
repz
add
add
or
sbb
cmpb
pop
sub
fisubrl
dec
inc
ret
mov
fcomps
psllw
in
loop
lret
cmpsl
sbb
stc
mov
negl
xor
and
dec
add
inc
cld
subl
xchg
push
mov
mov
xchg
insl
dec
mov
mov
pop
lret
in
mov
stos
bound
push
adc
sbb
fs
adc
add
dec
mov
mov
pop
sub
es
fs
pop
add
xchg
sub
adc
or
dec
in
lea
stos
or
sbb
mov
pop
fmuls
rclb
mov
and
mov
aam
jno
daa
or
imul
inc
lcall
mov
lods
or
jl
xchg
xchg
jg
cmp
dec
mov
outsb
adc
rolb
fdivs
mov
test
xor
pop
sahf
dec
repz
adc
mov
mov
jmp
clc
shlb
stos
subb
adc
cmpsl
push
stc
mov
stos
sbb
call
lret
xchg
daa
pop
popa
xchg
lock
and
lea
jbe
push
push
pop
add
mov
cwtl
jo
and
push
push
fsts
add
sbb
dec
lods
xchg
dec
inc
rorb
cmp
push
mov
loope
dec
pop
in
mov
dec
and
push
cmpsb
cwtl
mov
and
fidivl
loop
js
sub
xchg
inc
orl
push
aad
aad
xor
stos
lds
popf
xchg
popa
inc
and
mov
es
inc
xor
mov
movsb
mov
aam
cmp
scas
and
ss
int3
add
add
idiv
dec
hlt
fiaddl
inc
mov
sbb
adc
xchg
sbb
mov
and
mov
daa
jp
pop
and
mov
ficompl
adc
loope
and
mov
call
inc
and
movsb
gs
rcll
pop
sarb
in
dec
add
mov
aam
push
adc
int3
jecxz
sbb
jnp
cli
outsb
pop
aas
call
sub
negb
mov
xor
insb
mov
fmuls
cmpsb
incb
dec
xlat
and
add
call
mov
pop
fcoml
fstps
flds
push
mov
sub
cs
jge
mov
mov
mov
daa
mov
mov
xorb
out
imul
daa
sbb
push
leave
inc
dec
jp
sbb
movd
lods
and
movhps
mov
inc
inc
pop
in
add
int3
mov
sbb
cmp
inc
test
imul
ss
mov
dec
push
xor
push
jp
or
test
xorl
adc
or
pavgb
sbb
insb
dec
cmpsb
inc
in
hlt
fsubl
add
cmc
insl
imul
fdiv
add
aad
mov
stc
js
repnz
adc
les
pop
sub
sbb
push
push
std
frstor
pop
fwait
bound
pop
xorb
sbb
mov
jg
pop
lods
sti
or
jmp
shl
fisubrl
xchg
or
push
cmp
jg
stc
adc
loopne
sub
mov
jmp
cmc
sub
or
cmp
xchg
stos
push
std
bound
into
lea
cmp
adc
cltd
inc
or
test
fisttpl
push
add
cmpsl
sbbl
push
adc
rolb
push
out
pop
jbe
push
data16
push
rorl
push
repz
ljmp
mov
lods
outsl
rcll
cmp
jmp
pop
test
sbb
in
das
pop
adc
enter
test
xchg
xchg
inc
inc
jmp
sub
xchg
sbb
testb
add
mov
test
and
push
sub
out
pop
insl
cmp
fimull
jle
or
mov
cli
jp
push
jae
ss
adc
lret
add
and
fwait
cmp
lcall
mov
lods
stc
lret
xor
xchg
int3
dec
rolb
sub
div
cld
dec
add
mov
or
push
pushf
ret
fmull
jecxz
mov
pop
fisubs
js
dec
shrb
or
andl
push
mov
lds
or
pop
test
add
dec
mov
inc
sti
mov
adc
pop
add
mov
and
pop
cld
add
mov
xor
andb
add
js
movsl
push
and
jp
out
out
jbe
sbb
jecxz
adc
insl
pop
sbb
shll
xor
pop
push
fadds
xlat
rcll
push
push
mov
pop
addr16
xchg
cmp
int3
dec
inc
and
pop
repz
mov
adc
jecxz
xorl
xchg
lea
push
lods
fs
leave
push
imul
nop
scas
fists
mov
lcall
mov
inc
int3
sar
pop
hlt
adc
das
imul
jmp
repnz
lahf
rol
test
cli
mov
roll
std
std
inc
std
inc
std
test
aaa
ds
repnz
rclb
adc
in
dec
out
jo
push
xchg
pushf
shrb
in
mov
dec
and
dec
or
mov
nop
loop
mov
and
xor
mov
add
mov
hlt
adc
sub
lret
into
arpl
in
inc
sarb
jne
cmp
rorb
fisttpl
jne
xchg
mov
push
mov
mov
loop
scas
pop
jne
cs
shlb
adc
pop
pop
andb
or
adc
jl
dec
push
shrb
push
es
jns
int3
pop
movsl
push
orb
or
into
add
in
in
or
or
andb
outsb
pusha
aad
dec
inc
mov
cmp
and
orl
add
rorl
jb
idiv
nop
sub
repnz
test
shll
stos
push
les
mov
xchg
cmc
fistpll
pop
xchg
int3
xor
and
out
xor
push
enter
adc
or
sub
adc
push
inc
mov
lock
or
adc
adc
enter
xchg
lahf
sub
test
inc
jno
sbb
pop
push
arpl
inc
les
mov
lahf
scas
lea
xor
pop
dec
jns
xor
int3
cmpsl
push
mulb
lds
es
add
shrb
dec
push
seta
hlt
jbe
add
sbb
push
sub
mov
in
or
repnz
repz
jp
in
sub
fdivl
outsb
fdivrs
sbb
pop
or
push
pop
test
or
pop
int3
lea
dec
mov
ret
cltd
sbb
push
test
xchg
pusha
pushf
insb
cmp
and
push
mov
jo
dec
mov
rorb
fsubs
add
pop
movsl
xchg
mov
stc
add
rcl
fisttpl
rclb
outsl
and
mov
test
sub
adc
insb
and
push
inc
movsl
push
xchg
mov
ljmp
pop
in
mov
sbb
pop
and
xor
cmpsl
stos
jns
sbb
andb
addr16
push
dec
xchg
inc
scas
add
repnz
xor
int3
repnz
pop
mov
aam
add
shll
push
je
pop
repz
xchg
mov
out
addr16
popf
imul
mov
inc
fwait
mov
addr16
mov
into
jo
inc
fmuls
or
push
loope
push
lods
js
pop
je
pop
imul
mov
insl
pop
je
jbe
loopne
push
pop
mov
pop
mov
sbb
insb
and
loopne
pop
icebp
pop
inc
cld
cmp
push
cmp
jne
mov
shl
mov
pop
aam
cmpsb
fwait
mov
es
loope
int3
xor
pop
xor
les
add
add
xor
sbb
dec
std
sbb
mov
pop
scas
movsl
push
mov
inc
test
cmpsl
gs
push
adc
jns
mov
sub
inc
lret
shlb
std
fstps
mov
mov
cmpsb
or
or
add
loop
mov
add
test
adc
insb
imul
mov
adcb
xchg
add
inc
lret
jmp
push
insl
jb
cmp
sub
cltd
and
add
movsb
icebp
cmp
das
sub
bound
push
xor
jns
adc
test
xchg
cmp
cli
aad
jno
cli
lds
sbb
add
in
pop
rcrb
shlb
ret
pushl
add
mov
inc
mov
das
out
dec
adc
into
loop
cli
mov
inc
ljmp
push
mov
lods
mov
push
adc
nop
pop
sahf
das
ret
push
cmpsl
insb
aaa
jns
add
mov
xor
ss
fmull
insl
mov
adc
mov
dec
in
dec
arpl
sbb
repz
scas
add
repnz
mov
scas
or
out
pop
movsl
loop
mov
xchg
ss
in
adc
cmpsl
int3
cmpsb
test
test
mov
int3
loopne
ret
pop
add
sbb
repnz
xchg
sarl
bound
mov
fisubs
jmp
imul
daa
mov
and
pop
push
enter
lods
push
dec
inc
outsl
add
arpl
arpl
stos
lods
stos
jmp
ja
mov
mov
mov
stos
sub
out
jp
and
lds
lret
out
or
and
out
jb
sarb
ficompl
into
cltd
cmc
xor
mov
mov
lods
mov
fcoml
stos
jo
jbe
sahf
int3
add
in
pusha
aam
mov
push
jecxz
xor
adc
xchg
jns
and
cmp
repnz
fildl
jmp
sbb
out
sbb
mov
xchg
add
dec
pop
jmp
insb
push
and
nop
ret
lods
cli
insb
shlb
pop
or
lea
push
push
push
daa
fwait
lds
adc
inc
mov
and
je
lock
lds
mov
enter
mov
insl
adc
fisubrl
xchg
punpcklwd
jo
lahf
push
loop
mov
add
add
push
push
pop
test
or
enter
push
bound
fnstsw
fidivs
ljmp
or
loopne
sub
mov
test
sbb
icebp
push
jbe
and
jno
ficompl
push
sbb
add
and
iret
in
imul
add
insb
push
clc
sbbb
insl
inc
leave
cmova
mov
test
xor
lcall
cmp
cmpb
dec
adc
addb
jmp
and
rcrl
or
outsl
dec
pop
xor
dec
sub
jecxz
push
test
jmp
loopne
mov
ss
loop
adc
inc
add
dec
inc
mov
adc
push
push
int
mov
inc
xor
jbe
cli
sbb
mov
ljmp
xchg
cltd
shrl
shlb
add
je
mov
or
jae
sub
inc
mov
or
jo
pop
fdivrl
pop
sbb
icebp
out
fwait
gs
in
xor
xchg
mov
lret
or
imul
pop
cli
mov
jmp
xor
or
mov
ret
push
dec
jl
mov
jmp
inc
sbb
inc
dec
dec
call
imul
add
dec
into
ljmp
mov
or
or
pusha
rcrb
dec
movsl
popl
insb
inc
mov
ret
ljmp
add
pop
sub
mov
xchg
push
hlt
adc
out
or
xor
jle
sub
dec
push
mov
movsl
mov
lea
lods
or
mov
mov
mov
or
push
lods
addr16
je
fidivl
sar
outsl
xchg
xchg
xchg
fldt
add
or
push
popa
fxch
sub
jg
mov
and
push
in
hlt
pusha
adc
xor
sub
jno
andl
data16
mov
adc
andb
mov
scas
or
arpl
fs
addl
xchg
ret
sti
ret
xchg
mov
adc
inc
mov
mov
loop
ret
call
push
imulb
dec
xchg
aad
in
adc
mov
addr16
mov
and
shlb
or
out
pop
pop
in
sar
add
insb
mov
mov
inc
xor
xor
sbb
pusha
inc
push
pop
add
mov
or
push
sbb
fstps
xor
stc
cwtl
gs
shrl
lds
scas
push
sbb
dec
out
aad
push
es
popa
push
inc
mov
jbe
pusha
jno
sub
and
scas
bound
jecxz
inc
sarb
push
test
rcrl
das
lods
mov
scas
mov
pop
insb
and
cmp
pusha
sub
xchg
add
push
cmp
xor
cmp
mov
popa
jg
lea
jnp
cmpb
imul
dec
xchg
rorl
bound
pop
movsl
jb
push
loop
jge
and
pop
xchg
into
push
and
mov
dec
push
adc
lods
fwait
jg
add
mov
inc
inc
jmp
adc
aaa
sbb
inc
orb
inc
orl
push
stos
roll
dec
sub
rolb
insb
gs
pop
inc
mov
inc
call
mov
mov
pushf
ret
adc
pop
mov
push
test
addl
stos
mov
xor
push
push
or
sub
xor
mov
int
outsl
add
xchg
xor
mov
mov
icebp
pop
shlb
mov
aaa
and
aaa
mov
fimull
mov
pop
inc
jne
jmp
pop
in
dec
adc
mov
repz
xchg
divb
loop
jmp
movsl
test
icebp
pop
or
test
xor
mov
into
mov
rolb
dec
frstor
mov
adcb
cltd
je
jo
sub
pop
int3
mov
jle
or
xor
adc
rcl
pop
dec
push
sbb
nop
out
ficoml
js
sti
test
and
aam
and
pop
xchg
cmc
cli
das
cmp
into
cmpb
xchg
outsb
fsub
rclb
sub
sbb
lods
pop
jno
shrb
xchg
mov
jecxz
sti
xor
pop
push
lods
mov
int
inc
and
sub
adc
inc
out
pusha
pshufw
push
push
out
xchg
aam
mov
je
cmp
lock
out
sbb
or
xchg
push
fstl
repnz
pushf
inc
dec
pop
sub
jl
out
adc
inc
jg
les
lds
mov
orb
fdivrs
mov
push
jl
iret
or
icebp
or
inc
mov
or
ret
pop
into
loopne
scas
push
ljmp
pop
add
imul
in
or
mov
mov
or
add
add
pusha
cs
fistl
or
leave
jl
mov
add
push
inc
adc
pop
addl
dec
mov
push
scas
cld
jp
xchg
imul
adc
sub
jnp
cmp
push
xchg
xchg
and
sbb
ss
mov
lock
inc
in
cmpsb
mov
or
cld
xor
notb
push
push
cmpb
fwait
push
mov
add
and
inc
hlt
push
ror
fmuls
gs
das
lds
rclb
sub
xorl
mov
jo
popf
stos
sbbb
sbb
mov
test
push
cmp
sub
xor
sbb
jno
stos
lret
test
mov
mov
shll
int3
jnp
mov
push
mov
das
push
xchg
test
sbb
cmp
mulb
sbbl
mov
lcall
sub
or
repnz
cld
xchg
std
imul
inc
clc
pop
mov
cmp
xor
xchg
not
aaa
inc
add
jge
dec
insl
jecxz
inc
rcrb
subl
adc
and
xchg
push
cli
aam
shrl
stos
and
or
lods
mov
mulb
pop
test
cmc
adc
ds
rcrl
dec
imul
clc
stos
je
adc
push
movsb
test
ljmp
and
sbb
test
pusha
sti
popa
sub
push
mov
push
fidivl
mov
arpl
mov
push
fists
lea
adc
pop
adcl
or
mov
out
mov
fcoms
stos
pushf
push
adc
mov
xor
je
repnz
adc
fdivs
cmovbe
jbe
scas
mov
stos
addr16
push
sub
shl
mov
push
cmp
jg
bound
mov
test
jmp
or
sbb
movb
popf
cld
dec
sub
stos
push
mov
cmp
imul
and
lret
mov
test
shrb
movsl
jmp
lock
mov
adcl
mov
mov
hlt
sarb
inc
fiaddl
mov
add
test
inc
pop
push
jns
mov
in
stos
ret
lret
inc
sbbl
ror
mov
mov
xchg
push
shll
sub
in
and
sarb
jl
or
pop
aad
fsubl
push
push
mov
and
shrb
jae
dec
loop
in
addr16
pop
jne
scas
lods
lock
in
inc
or
insb
and
cmp
test
xor
inc
or
fildll
daa
ss
and
mov
push
push
mov
repz
fdivrs
add
pushf
push
popa
orb
sbb
push
jo
in
add
cmp
sub
dec
xchg
adc
out
mov
adc
cmp
sub
push
xor
sbbl
data16
cwtl
inc
add
sub
mov
imul
pop
aad
inc
ror
sub
dec
push
xor
mov
push
je
jle
or
push
mov
scas
add
mov
inc
pushf
push
xor
mov
jp
fwait
pop
add
movsl
lret
xchg
mov
test
pop
shrl
sub
pop
sub
inc
mov
xor
dec
dec
iret
iret
or
fidivrl
or
scas
push
fmull
push
lods
popf
stos
les
insl
loop
jmp
sub
sub
jne
outsb
pusha
movsl
mov
pop
mov
xlat
jnp
icebp
jmp
arpl
test
mov
call
mov
mov
xlat
jb
test
mov
push
mov
mov
dec
lock
mov
imul
cmp
sub
push
inc
inc
xor
out
mov
pop
jecxz
test
test
lds
ficoml
push
andb
mov
and
dec
insb
cwtl
test
mov
fldenv
push
test
push
add
jo
aam
iret
leave
mov
inc
dec
stos
mov
test
dec
push
pop
sub
push
test
mov
cmp
push
add
lret
jecxz
sbb
aad
aad
push
mov
xchg
dec
jl
add
setns
xor
push
inc
push
mov
sub
movb
mov
add
outsb
mov
loope
int3
jl
leave
aad
fmuls
push
xor
mov
sbb
push
add
jo
push
popa
xchg
inc
add
jne
in
cmpsb
popa
inc
cmpsl
pop
pop
push
xor
inc
gs
aad
adcb
sbbb
add
lea
or
add
pop
jl
data16
mov
sbb
add
sbb
push
sub
ljmp
push
inc
shrd
flds
push
dec
xor
iret
scas
push
sub
jns
sbb
push
xchg
pop
or
imul
aaa
fidivrl
mov
push
push
mov
repnz
push
add
pop
test
jae
hlt
lds
push
xor
add
sbb
das
loopne
cmp
cmp
addl
movl
push
mov
lods
shrl
pop
ret
pop
loop
add
mov
call
je
popf
sub
cmc
inc
xchg
jle
jmp
cmp
mov
mov
shrl
add
mov
adc
mov
or
add
and
pop
inc
icebp
sarb
imul
ret
mul
roll
das
add
mov
int3
add
xchg
pusha
sbb
sub
adc
adc
or
nop
xor
loop
mov
mov
cld
sbb
lds
test
mov
and
arpl
jne
scas
add
add
xchg
add
xor
lret
adc
cwtl
xor
push
push
push
jecxz
push
adc
enter
or
add
rol
add
sub
inc
stos
bound
sti
fs
mov
dec
repnz
adc
sub
rcll
add
scas
ds
jns
mov
mov
aaa
in
sbb
inc
inc
ja
test
cld
sub
push
adc
jo
mov
aas
dec
cmc
add
push
dec
test
or
bound
pop
xor
sub
inc
test
cmp
sarb
and
icebp
pop
or
sarb
dec
stc
push
fst
pop
fnstsw
insl
outsb
jle
loop
mov
lods
rolb
push
jle
push
cmp
cmpsl
ljmp
mov
fildll
shlb
add
cs
xchg
inc
pop
nop
cli
sub
adc
dec
sbb
ds
mov
and
or
jmp
out
mov
sti
scas
int
mov
and
shrl
daa
add
mov
push
cwtl
aad
stos
or
out
xor
xor
xor
pop
sub
jmp
adc
lret
mov
and
add
xor
lds
sub
cld
scas
push
popa
mov
inc
xchg
out
adc
cmp
lock
cmpsb
mov
xor
lret
scas
cmp
adcl
xchg
jle
inc
sahf
jb
and
inc
or
dec
andl
adc
roll
std
sub
add
cmpsl
lcall
push
lret
push
lret
push
mov
or
sub
xchg
inc
adc
xchg
push
sub
gs
jecxz
adc
xor
or
mov
add
movsl
cmp
in
or
inc
mov
jp
test
cltd
add
repz
push
and
cmp
push
mov
mov
push
icebp
popf
push
out
xor
cmc
ds
xor
pop
fildll
push
mov
ljmp
xlat
scas
push
sub
cmp
int3
loope
mov
adc
inc
mov
push
aas
lcall
mov
or
or
and
push
pop
jmp
andl
lea
sub
add
outsb
insb
pusha
pop
mov
pcmpeqb
push
push
pop
jg
out
sub
pop
or
subl
and
sub
mov
cmpsl
mov
stc
pop
add
and
push
xchg
out
mov
add
add
add
push
sti
fsts
inc
out
and
fsubl
sub
and
adc
arpl
push
adc
push
stc
push
jb
testb
icebp
fisttpl
out
ds
sub
das
repz
ljmp
mov
add
push
sub
mov
push
test
clc
mov
cli
mov
lahf
pop
aaa
push
cmc
mov
dec
mov
test
mov
inc
in
imul
cld
in
xor
fsubl
mov
jmp
aam
xchg
push
mov
in
sub
sbb
push
jl
dec
jno
sbb
cmpsl
sbb
mov
cmp
mov
mov
roll
xchg
sub
push
add
mov
cmpsb
adc
test
mov
cmp
sti
insl
inc
and
mov
mov
mov
push
leave
push
sub
aaa
xor
bound
push
test
and
fwait
cmpsl
push
fldcw
out
cli
mov
inc
xor
repz
or
or
cs
mov
pop
inc
cltd
je
test
roll
pop
mov
mov
dec
cmpsl
inc
cmc
xchg
sub
and
pop
sbb
sub
jb
call
dec
loopne
rclb
loope
in
pop
fisttpl
mov
pop
lock
js
movsb
mov
or
inc
adc
mov
adc
sub
cmp
pop
stos
adc
push
vcvtpd2psx
pop
sbb
dec
std
sub
test
int
adc
bound
jbe
ja
call
xchg
stos
ljmp
movsl
jno
lcall
push
add
xchg
pop
pusha
addr16
inc
jl
pop
cli
fisttpl
jbe
mov
fcoms
and
test
mov
ret
add
inc
pop
out
enter
adc
xchg
cwtl
cmp
sbb
sub
xchg
inc
jg
dec
sub
fs
jecxz
dec
filds
push
mov
cld
xrelease
testb
mov
push
push
jmp
shrb
mov
add
mov
clc
in
ret
ljmp
in
dec
lods
xchg
mov
hlt
push
cmc
addr16
pusha
das
std
sar
lea
arpl
pop
push
lods
cmpsl
fmull
mov
test
sbb
adcl
cmp
js
dec
sub
ficoml
mov
test
xchg
and
pop
mov
xlat
adc
pop
daa
add
mov
rorl
lcall
and
push
mov
cs
les
jo
jno
lds
sbb
test
lcall
lods
push
and
fiaddl
mov
push
lods
mov
jmp
ja
mov
xorb
sbb
das
adc
xchg
hlt
mov
outsl
push
mov
sub
push
sub
and
mov
mov
call
lahf
mov
test
insb
in
outsl
sbb
inc
push
movsl
mov
ret
or
xchg
cld
mov
jb
xchg
fldcw
call
insl
fsts
mov
adc
or
test
mov
xor
dec
xlat
js
push
scas
push
sahf
or
iret
pop
lock
mov
cmc
add
mov
icebp
push
xchg
insl
aaa
push
adc
mov
aam
and
mov
ljmp
call
push
scas
adc
pop
lods
push
push
add
jno
popf
adc
push
imul
or
mov
mov
into
jo
xchg
enter
mov
and
push
lea
sbb
mov
jle
imul
pop
mov
mov
adc
test
ljmp
dec
sub
jle
lods
mov
jne
dec
mov
and
sub
mov
push
stos
mov
xor
cmp
xor
bound
andl
jns
inc
mov
lret
sub
jle
xchg
std
scas
xor
push
fisttpl
pop
gs
daa
scas
sub
xor
xor
mov
fstpt
lods
pop
daa
scas
inc
test
inc
cwtl
pop
cltd
in
add
push
xor
adc
push
jns
cli
sub
push
arpl
inc
xchg
or
jno
adc
sub
pop
mov
lcall
fnsave
fndisi(8087
data16
mov
das
int
and
fdivrp
jmp
cwtl
mov
fisubrs
or
mov
jle
push
divb
in
adc
std
insl
xchg
jle
imul
inc
dec
test
add
cmpsb
jecxz
adc
adc
or
sbb
push
cwtl
hlt
push
inc
pop
cmp
ret
outsb
inc
push
mov
mov
les
jg
ja
add
inc
cs
xor
jl
or
loop
mov
rorl
rcll
jbe
data16
mov
dec
push
das
movsl
and
repnz
lret
flds
mov
fidivrs
dec
ss
repnz
repz
aaa
inc
cmc
jle
push
cmp
mov
mov
outsb
sbb
and
adc
scas
sub
scas
inc
adc
mov
push
mov
mov
addl
mov
jns
sbb
shlb
add
lods
push
decl
out
mov
mov
xchg
clc
inc
cmc
add
jns
dec
les
jno
aam
pop
dec
adc
ja
xchg
or
imul
das
out
add
or
pop
jg
xchg
test
or
test
stc
sub
add
stos
adc
hlt
in
dec
add
adc
add
pcmpeqd
adc
sub
mov
and
mov
andb
lods
pop
pop
cmpsl
cli
insl
xchg
inc
std
sbb
cld
xor
cmovge
test
loop
and
shlb
cmp
orb
xchg
subb
in
adc
cli
sub
ret
push
xor
sbb
popf
mov
lods
lds
add
xchg
or
dec
dec
in
sbb
outsl
pop
and
dec
stc
xchg
subb
aaa
in
push
adc
sbb
push
pop
stc
lea
stos
xor
push
aaa
xor
push
fiadds
fucomp
cmp
ljmp
push
jg
dec
inc
std
leave
mov
or
jne
mov
cld
rcll
mull
je
dec
mov
fists
lahf
les
mov
pop
push
pushf
jmp
loop
and
xor
jl
sbb
fstl
add
les
mov
lahf
add
les
adc
shll
or
repz
scas
jl
fwait
xchg
jns
das
ret
mov
dec
cmp
pop
in
pop
adc
aam
adc
lret
xchg
ja
push
push
push
dec
ja
popa
adc
hlt
jbe
adc
ja
into
mov
inc
imul
push
cmc
mov
xchg
sub
xchg
jg
pop
iret
jne
jmp
ficoms
arpl
push
pop
test
insl
push
pop
mov
mov
pop
adc
rcl
sub
pop
out
push
dec
cmp
scas
add
jo
into
mov
test
jmp
ljmp
or
xor
and
dec
mov
test
pop
scas
dec
cwtl
dec
aam
ret
incl
stc
pop
test
gs
mov
adcl
mov
pop
push
stos
xor
sbbb
push
ror
mov
dec
xor
repnz
mov
mov
add
and
std
mov
sbb
pop
push
cmp
clc
inc
sbb
and
cmp
out
lret
stc
pop
int3
push
add
div
pop
dec
push
loopne
mov
stc
sbb
lret
pushf
mov
loop
cmp
not
rorb
xchg
lods
roll
sub
mov
push
and
inc
mov
jl
cmp
dec
or
jae
add
hlt
or
xchg
jae
adc
in
dec
sbb
mov
or
ror
orl
or
aad
test
xor
data16
scas
shrb
and
std
cld
fxch
inc
jmp
mov
fimull
cltd
popa
or
or
jg
cmpl
out
scas
sbb
repnz
mov
inc
push
scas
cwtl
push
or
or
mov
cmp
mov
loope
movsb
ds
add
shrb
inc
mov
sahf
jae
xchg
dec
add
es
out
inc
es
add
mov
addr16
enter
sbb
or
push
aam
test
xor
int3
out
in
add
xchg
push
hlt
push
jge
dec
pop
lds
dec
xchg
add
ret
adc
ljmp
jno
enter
data16
inc
push
cwtl
push
fnstenv
xchg
or
add
dec
cli
pop
aas
test
mov
xor
xchg
cwtl
fcmove
mov
cmp
add
cvttsd2si
inc
fs
push
jno
mov
xchg
dec
push
icebp
sub
pop
mov
add
adc
ss
jne
xchg
jo
rcll
outsb
imul
sub
push
dec
jb
mov
xchg
sub
add
cmc
int
nop
add
xchg
clc
mov
int3
xchg
loopne
sbbb
inc
mov
lret
sbb
adcl
imul
cmp
adc
push
pusha
mov
data16
frstor
cmpsl
insb
movsb
and
and
push
fsub
and
mov
es
pusha
and
sub
js
fimuls
or
hlt
in
push
adc
rcll
dec
pop
pop
push
push
xchg
shlb
pop
push
mov
xchg
dec
mov
ds
fxch
adc
xor
mov
dec
and
add
jno
pop
sti
mov
scas
and
jl
mov
mov
jae
sub
xor
xchg
xlat
xchg
outsb
xchg
mov
shrb
and
xchg
jbe
xchg
gs
les
int
xchg
fcoml
push
cmpsl
clc
loop
pop
test
mov
je
imul
pop
jns
xchg
jne
lock
mov
cld
mov
cmp
push
in
mov
adc
test
adc
cmc
add
dec
sbb
push
cmp
ja
js
add
jns
cmp
pop
outsl
mov
aaa
inc
dec
jge
cli
sbb
sub
in
mov
sub
insl
mov
mov
in
mov
pop
mov
ret
jb
mov
mov
push
sbb
repz
add
lds
lret
push
cmp
xorb
push
xchg
dec
in
mov
and
inc
mov
mov
fimull
jbe
push
xor
ret
notl
push
popa
sbb
adc
or
xor
call
into
mov
xor
mov
inc
sbb
push
in
add
cltd
test
inc
roll
push
adc
pop
int3
bound
and
cmp
cmp
push
and
push
insl
or
subb
test
push
shrb
out
pop
mov
jp
sbb
dec
xor
jle
push
je
push
and
push
xchg
cltd
jle
cmc
enter
mov
push
daa
loop
mov
lds
lods
arpl
sub
push
dec
jmp
testb
mov
test
into
fiadds
sub
xchg
nop
mov
nop
add
push
mov
xchg
add
lea
rcrl
sub
cwtl
inc
ficoml
inc
cmp
sub
fldl
or
xchg
push
add
add
ret
adc
dec
mov
mov
mov
push
in
inc
fnsave
push
insl
mov
in
add
pop
loope
add
pop
sbb
scas
or
xor
mov
push
popa
cli
fcoms
pushf
lcall
repnz
mov
jno
pop
and
lret
jne
push
jns
inc
cmp
in
cld
or
orb
add
je
inc
sbb
sahf
lcall
out
cmpsb
scas
lock
jns
stos
dec
jno
push
les
sbb
insb
inc
enter
and
sbb
dec
inc
lret
jb
xor
xchg
mov
cltd
and
push
pushw
add
mov
push
push
inc
jno
dec
lret
popa
or
jbe
add
and
jne
mov
icebp
daa
push
clc
stos
icebp
ret
int
pop
xchg
add
gs
lahf
sbb
cmpsl
ljmp
fidivrl
add
lock
inc
je
add
icebp
push
lea
dec
pop
mov
jno
cmpsb
inc
movsb
arpl
push
movsl
enter
inc
adc
add
or
sub
test
xor
inc
add
shlb
pop
dec
das
aad
sbb
lea
cmp
cmp
es
sub
rcrb
ret
cmc
sbb
inc
rcll
dec
shlb
pop
je
pop
aad
lock
enter
mov
mov
inc
ja
ljmp
mov
scas
add
adc
mov
repz
xchg
mov
push
or
sbb
cmp
dec
or
popa
pop
ret
int3
loope
jl,pt
ds
inc
add
pmuludq
stc
pop
add
inc
nop
or
add
ss
int3
dec
imul
in
xor
ja
mov
fisubs
test
mov
mov
les
mov
jg
pop
stos
sub
aas
testl
stos
and
cli
into
les
xchg
jmp
ret
pop
xchg
in
and
adc
cmpsl
nop/reserved
xor
sbb
mov
dec
push
lods
push
jl
cld
push
xor
lea
test
push
adc
mov
jp
adc
cmpsl
repnz
jnp
xor
aas
push
sub
mov
call
or
aad
add
adc
or
add
jle
mov
dec
adc
sub
rorl
mov
movsb
int3
mov
dec
adc
rorl
inc
or
sbb
adc
dec
sub
and
mov
jne
pushf
sbb
cmpb
jnp
in
xchg
push
jbe
lock
mov
out
clc
pop
jns
xchg
xorl
lods
loope
jne
shll
sbb
out
orl
dec
mov
and
mov
lods
cmpl
push
push
in
aaa
fsubr
dec
lahf
xchg
aaa
mov
mov
addb
push
mov
loop
inc
jmp
int
outsb
mov
nop
jecxz
dec
push
inc
mov
jnp
loop
mov
mov
xchg
cmpsl
in
lock
mov
shll
ss
push
pusha
jne
push
xchg
imul
push
shlb
lock
scas
out
dec
ret
and
mov
jecxz
insl
inc
cmp
adc
pop
mov
mov
jmp
fnstsw
jmp
jle
shr
cld
push
jp
mov
inc
or
dec
cli
loope
jb
imul
push
push
mov
adc
sub
sti
fs
or
add
and
out
dec
add
lods
bound
xlat
out
push
add
test
pusha
add
mov
and
enter
push
adc
out
sbb
mov
aad
mov
mov
movb
adcb
loop
int
jp
outsl
mov
outsl
out
sub
xchg
ja
mov
sahf
popf
push
repz
rol
sub
daa
add
pop
fstpl
and
out
test
jge
mov
adc
xor
gs
ss
mov
outsb
xor
bound
jne
in
pop
adc
cmpsb
test
mov
mov
in
push
ja
outsb
jae
adcb
lret
in
adc
fcomps
adc
andb
fidivs
sub
decl
mov
dec
adc
cmpsl
jno
int3
push
sub
leave
cld
inc
cmp
insb
setne
cld
lret
add
std
punpcklwd
jmp
pop
dec
rol
inc
insl
and
rolb
mov
push
movsl
movsl
lret
stc
jle
cmp
inc
jbe
xor
mov
mov
sub
push
add
stos
cmpsb
fdivrl
dec
mov
loopne
call
mov
add
or
jnp
mov
push
ds
xchg
xor
sub
mov
sti
push
pop
inc
xchg
push
and
out
mov
mov
push
lret
movsb
sub
dec
imul
outsl
jmp
daa
sarl
push
push
test
test
rorb
rolb
add
shlb
es
jae
cmc
pop
clc
mov
pop
inc
imul
jnp
jbe
mov
or
sbb
out
out
mov
hlt
sbb
jecxz
loopne
sbb
adc
push
add
sar
mov
push
lds
or
test
jmp
addl
push
xchg
lds
add
jbe
stos
add
push
push
cs
or
mov
xor
pop
xchg
cmpsb
or
insb
adc
xchg
mov
cld
cmpsl
das
std
inc
jne
and
sub
icebp
add
negl
push
push
fldenv
aam
cmp
repnz
or
scas
sub
jge
cmp
test
stc
push
cltd
mov
stos
push
mov
adc
sbb
das
xlat
sar
loopne
pusha
dec
pop
in
and
stos
sbb
ret
add
imul
dec
clc
push
out
mov
and
push
lahf
enter
lret
cwtl
and
jmp
fldl
push
lock
outsl
loope
sbb
cs
add
pop
push
orl
aas
or
jno
xor
jg
or
in
stos
icebp
push
shl
mov
adc
sti
lret
cld
or
and
mov
sub
jl
rorb
paddw
sub
push
xor
mov
push
test
adc
sbb
mov
push
pop
mov
mov
out
fadds
or
push
lret
and
xchg
add
ds
adc
xor
adc
movsb
rcrl
repz
frstor
xor
jge
mov
jmp
movsl
mov
mov
loop
mov
lea
lods
and
adc
lea
jnp
sbb
jb
in
jb
mov
mov
notl
xlat
in
pop
cmpsb
insl
shlb
mov
iret
sub
or
adc
shll
dec
mov
mov
xchg
mov
lea
add
inc
sti
mov
mov
gs
adc
mov
icebp
outsb
add
adc
xchg
jl
arpl
scas
dec
xchg
shlb
jae
xchg
aam
popf
cmp
in
scas
test
mov
xor
adcl
jbe
orb
pop
xchg
lods
outsl
and
jmp
lret
jg
mov
rcrl
xorl
sub
fcompl
add
sbb
mov
xor
mull
mov
ficomps
lret
adc
fs
notl
add
js
call
adc
hlt
mov
mov
sbb
outsl
test
pusha
or
or
pop
out
fimull
or
imul
xlat
cmp
add
inc
or
add
ret
add
push
loop
xor
jge
xchg
cmpsb
scas
adc
or
sbb
nop
mov
jae
push
add
jns
inc
pop
addb
and
stos
repnz
aas
arpl
sbb
mov
jmp
ss
stos
addr16
shlb
xorl
mov
mov
mov
inc
pop
cmp
push
mov
pop
mov
cwtl
pop
cmc
stc
sub
test
push
cmp
loopne
gs
ds
and
stos
push
in
push
dec
push
mov
or
fcomp
add
jg
lods
nop
sub
sub
inc
mov
push
popa
xchg
inc
dec
pushf
and
xchg
xchg
or
add
or
mov
lret
push
lret
jle
dec
and
push
sahf
sub
faddl
sbb
cmp
lds
movb
outsb
push
push
xchg
lock
jno
nop
pusha
mov
mov
sub
xchg
nop
mov
xchg
sbb
subb
mov
leave
pusha
das
mov
push
push
fisubs
pop
dec
xchg
jmp
sbb
dec
in
rorl
cmp
mov
inc
inc
push
adc
pop
push
add
frstor
mov
mov
adc
fidivs
add
lret
push
test
mov
and
pop
mov
mov
push
push
and
mov
test
push
add
loopne
add
cmc
and
and
cmc
and
mov
inc
and
subb
andl
pop
adcl
lahf
pop
cmp
dec
sub
xchg
add
push
mov
add
add
mov
fs
mov
andl
adc
dec
and
mov
pop
adc
testb
imul
roll
or
js
test
sub
adc
and
popa
push
dec
pop
test
and
mov
push
out
xchg
cs
hlt
inc
mov
ja
xor
test
xsave
cli
add
inc
cmp
adc
xchg
cli
sub
test
and
ljmp
or
mov
sbb
jnp
xchg
mov
cmovb
mov
inc
sbb
lret
inc
cmp
pushf
push
nop
mov
add
adc
sub
mov
add
sub
sar
xor
dec
mov
adc
in
or
xorl
inc
sub
lea
inc
jns
dec
and
sbb
dec
sub
cwtl
adc
sub
repnz
outsl
sbb
outsl
or
cmp
loopne
add
inc
sub
inc
dec
add
lahf
inc
cmpsb
add
or
xchg
xchg
lret
cmp
in
inc
sub
mov
xor
daa
xchg
cmp
push
in
bound
sahf
pop
jp
mov
rcr
or
sbb
xchg
xchg
sub
iret
repnz
cmp
ret
mov
xor
inc
pop
push
sbb
ret
lods
jg
and
scas
push
xchg
clc
and
scas
xor
es
push
and
push
cld
rorl
rcr
mov
fiaddl
pop
pusha
rorb
stos
ret
or
test
sub
adc
jb
sub
sub
mov
mov
cmpsl
test
mov
adcb
push
mov
add
pushf
jmp
mov
arpl
mov
mov
adc
mov
dec
add
add
les
sbb
pop
mov
and
mov
xchg
sahf
arpl
cld
push
jae
scas
testl
sbbb
call
dec
cltd
idivb
jecxz
mov
int3
pop
xor
adc
ljmp
cmpsl
outsl
test
imul
out
loop
fstl
imul
ss
sub
pop
mov
outsb
scas
cmp
lds
mov
cmpsl
push
mov
sbb
or
cli
cld
das
mov
push
std
mov
fs
out
sub
xor
shrb
mov
add
idivb
sarl
push
dec
cli
into
pop
jne
xchg
int
mov
insl
mov
xchg
xor
fildll
sub
xchg
push
fcoml
aas
push
fs
mov
into
hlt
pop
mov
cmp
mov
and
ljmp
and
aam
adc
add
fs
cmp
mov
hlt
cmp
mov
cmp
cmp
push
movsb
xchg
cmp
je
cmp
cmp
cmp
xor
jne
aam
mov
cmp
cmp
aam
adc
cmp
xor
cmp
push
mov
mov
and
test
jmp
sub
mov
notl
push
testl
clc
push
stc
nop
push
stc
dec
cli
rol
push
cli
sar
push
push
sti
dec
cld
push
aad
cmp
call
mov
cmp
sahf
xchg
incl
jg
fs
mov
shrb
mov
mov
mov
cwtl
or
xor
push
stos
push
xchg
hlt
jge
jne
adc
xchg
cmp
inc
hlt
mov
nop
xor
mov
inc
xchg
mov
jne
jp
pushf
negb
jo
pushf
and
int3
sbb
xlat
cmp
or
mov
pop
cli
lea
int3
in
sub
sub
nop
pop
cli
int3
pop
cli
push
mov
cmp
ss
mov
sarl
and
pop
xor
sbb
pop
shlb
push
addr16
add
dec
xor
popf
push
dec
sti
loopne
insb
fldcw
shrb
cltd
push
sbb
les
lahf
jge
out
sbbb
hlt
xor
icebp
loopne
popf
mov
mov
or
dec
orb
and
jns
mov
test
pop
pop
pop
int
inc
and
push
decb
sbb
mov
mov
pop
stos
scas
rclb
ljmp
scas
xor
mov
sub
add
test
loopne
and
or
arpl
add
mov
jg
rcll
aam
fldl
stos
pushf
pop
pop
lock
sub
movsb
push
mov
mov
popf
jns
stos
rol
lret
mov
adc
in
xor
es
mov
dec
nop
das
imul
xor
cwtl
mov
xchg
in
sub
aad
popa
inc
aad
jo
jnp
insb
dec
ja
int
sbb
adc
ljmp
and
adc
pushl
pop
lahf
jmp
mov
int
xor
in
and
clc
inc
jne
or
in
aam
rolb
sti
into
or
aam
and
mov
sbbb
xor
inc
out
test
lcall
addr16
mov
fsubrl
mov
lcall
jecxz
pop
aas
addl
andl
or
adc
mov
cmovg
scas
addr16
sbb
lock
and
xor
jnp
sub
out
cltd
add
shlb
nop
xchg
jns
sbb
pop
insb
pop
ret
inc
loop
adc
inc
sarb
movnti
adc
push
jp
rcrb
stc
pop
fadds
mov
sbb
icebp
cmpsl
test
jg
pop
mov
stc
out
add
jge
xor
repnz
testl
mov
pop
and
push
iret
in
jmp
jecxz
stos
repnz
adc
or
cmp
cs
test
xor
insl
and
icebp
loop
xor
mov
add
movsb
sarl
inc
mov
cmpsb
sarb
inc
bound
cmpsb
add
cmpsb
orl
aam
mov
aaa
cmpsb
bsf
xchg
xor
adc
sub
xchg
in
rolb
cmp
ds
jae
jge
dec
hlt
xchg
hlt
cwtl
lds
lods
das
andb
mov
sub
xchg
scas
dec
sarl
in
fisttps
das
mov
enter
ret
xchg
pop
loopne
fcoml
repnz
jb
mov
xor
clc
imul
dec
mov
scas
int3
dec
inc
pop
pop
adc
out
leave
mov
pop
cmp
ds
loop
lret
adc
les
jb
xlat
inc
sub
adc
push
inc
cmp
in
pop
fdivrs
mov
or
mov
mov
aam
xor
push
xor
xlat
or
inc
and
insb
lret
ret
mov
sub
xchg
mov
jae
adc
mov
mov
sti
in
fbld
pop
push
or
inc
jl
inc
pop
jno
xchg
push
push
cs
push
adc
push
mov
pop
or
sbb
popa
cmpsb
jo
adc
add
loope
and
jmp
ja
pop
adc
xor
dec
sub
lret
add
xlat
insl
cli
shlb
movsl
test
sub
xor
int3
or
xchg
xchg
pop
sar
bound
js
je
xchg
aad
sbb
mov
ret
sub
pushf
sub
scas
loope
adcb
cmpsl
dec
add
cli
stos
nop
jge
in
sub
addl
lods
or
js
sbb
and
mov
fwait
ret
push
inc
mov
out
mov
pop
jb
xchg
mov
inc
lret
xchg
lea
les
inc
test
cmp
iret
loop
xor
outsb
pop
fwait
or
ss
dec
mov
xchg
inc
inc
imul
mov
int
ds
mov
dec
cmp
pop
cltd
lahf
aaa
hlt
mov
jl
pusha
negb
lahf
insl
outsl
scas
jne
mov
stos
or
lock
cs
mov
mov
pusha
sbb
mov
mov
test
mov
bound
cmp
out
push
xor
aaa
jmp
jmp
push
pop
std
push
mov
ret
or
xchg
rcll
out
mov
stos
outsl
stos
aas
jae
in
cmp
scas
cmpsb
stos
xchg
mov
adc
notb
pop
and
inc
jno
mov
filds
pop
cwtl
in
test
outsl
rcll
ljmp
sti
mov
aad
call
loopne
xchg
in
sahf
push
stos
popf
adc
or
out
dec
jle
test
or
xchg
das
bound
push
sub
cwtl
jnp
sub
cmp
jns
aam
or
mov
xchg
cmpsb
fisttps
clc
jp
or
aam
rolb
push
loopne
add
mov
xlat
or
xor
adc
pop
pushl
insl
into
incl
or
rorb
add
mov
and
adc
add
int3
insl
push
dec
sbb
push
and
adc
mov
arpl
popf
les
xchg
xor
lea
or
fistpll
xchg
movsl
hlt
xchg
test
es
lock
push
jnp
cmpsl
js
cld
push
adc
adc
push
jg
and
jne
jo
cs
pop
mov
add
fdivs
scas
orb
in
push
inc
lcall
sbb
jecxz
pop
push
inc
mov
mov
jmp
test
stos
xor
and
mov
or
or
inc
cmp
jne
mov
mov
lret
pushf
int3
jno
push
jo
arpl
mov
lcall
adc
xor
sub
outsb
cmp
push
sbb
push
sarb
push
repz
add
dec
fsts
hlt
std
xchg
enter
xchg
in
xchg
gs
mov
jecxz
int3
lret
call
and
jmp
xor
lahf
lret
int
lods
lret
inc
sub
jge
ret
cmc
addr16
adc
and
stos
call
in
jge
std
inc
ficoms
enter
pop
xchg
test
int
jge
addr16
std
cs
mov
push
xorb
dec
sbb
sub
popf
mov
ja
adc
add
dec
dec
mov
movsl
add
push
movsl
push
jmp
sti
imul
or
or
fsubl
es
mov
mov
fcmovnbe
pop
sub
inc
insl
mov
inc
in
lea
adc
xor
pop
lds
push
jge
add
jns
lcall
iret
inc
cmp
js
lcall
in
add
mov
mov
in
cmpsl
test
xchg
lcall
sub
cmp
inc
js
pop
loopne
les
shlb
imul
outsb
pop
push
jbe
push
xor
popf
ret
inc
fildl
movb
jmp
andl
jb
xorb
push
jge
push
cmp
mov
xor
loope
push
cld
bound
call
roll
mov
popa
sub
dec
mov
movsb
jb
arpl
sub
or
jg
push
inc
pop
imul
xor
and
das
and
into
loop
arpl
cmp
xchg
mov
inc
int
pop
movsb
fcmovnb
push
cwtl
movsb
xchg
lret
sub
jb
leave
xchg
scas
cmp
or
sbb
je
fmuls
lret
lcall
daa
fsts
sbb
aam
or
or
xor
xchg
add
pop
scas
mov
lcall
mov
xor
dec
enter
pop
sahf
mov
pop
ja
sbb
es
or
scas
push
imul
push
rcll
jbe
and
in
mov
mov
in
add
and
not
daa
fcmovnb
push
add
lahf
mov
out
dec
in
pop
adc
jmp
fdivr
add
in
xchg
mov
cld
cmp
adc
pop
push
into
gs
aad
pushf
lods
aas
bound
xchg
xor
or
mov
popf
out
je
pop
or
push
inc
sbb
mov
lods
mov
loop
loopne
jge
fmul
mov
jge
mov
adc
lods
aas
fldt
cli
sbb
cmp
cs
sub
pop
sbb
mov
inc
dec
dec
pop
leave
mov
gs
pushf
sub
or
inc
add
lods
enter
loopne
mov
movsl
sti
xor
les
dec
std
icebp
test
test
repz
into
add
js
xor
orl
mov
and
out
subb
enter
push
outsb
mov
push
add
and
or
sub
sub
lods
test
mov
and
and
add
dec
pop
or
xchg
mov
sub
sub
es
add
add
xor
test
sbb
adc
xchg
sbb
pop
lcall
mov
loopne
push
dec
mov
cld
inc
xchg
insl
push
push
adcb
lret
adc
mov
cltd
pop
test
mov
stos
push
lcall
iret
out
orb
or
popa
in
add
mov
lret
enter
mov
pop
and
pushf
inc
cmpsl
lea
pop
and
mov
ds
adc
dec
and
and
mov
add
adc
sqrtps
mov
pop
cmp
ljmp
cwtl
jp
pop
inc
sub
mov
mov
mov
mov
mov
mov
insl
ds
add
cld
sbb
push
insl
and
imul
push
add
push
dec
xor
adc
inc
jae
inc
inc
xchg
cmpb
push
ret
mov
jns
jae
int3
and
xchg
popl
cwtl
jns
cmpb
inc
fcmovb
adc
inc
pop
cmp
mov
in
mov
outsl
fwait
sub
ljmp
test
and
pusha
mov
sbb
out
inc
lea
lods
in
mov
and
cmp
rcrb
inc
les
dec
idiv
mov
popf
cli
jb
sbb
cmpsb
adcb
mov
pop
push
int3
jp
mov
inc
std
dec
shll
stc
insl
inc
mov
push
adc
hlt
push
sbb
stc
pusha
sbb
out
cld
xchg
outsb
js
call
adc
insb
ret
xchg
jg
aam
cmp
negb
mov
sub
inc
and
push
inc
xchg
cmp
mov
call
jmp
or
int3
pop
pop
dec
cmp
pop
cmpsb
mov
stc
addb
pusha
adc
pop
jmp
into
or
xchg
out
jb
lahf
sub
pop
stos
and
btr
pop
xorb
cmp
adc
xor
testl
push
mov
icebp
dec
into
cltd
or
sahf
push
fstl
jg
sub
dec
outsb
test
add
pop
dec
sbb
movzbl
pop
pop
dec
mov
mov
daa
mov
xor
xlat
movsl
popa
push
sti
sbb
inc
cmp
pmaxsw
push
fcompl
dec
lds
push
xorb
sbb
lcall
in
dec
push
mov
sbb
mov
adc
sbb
inc
adc
ret
jmp
jecxz
push
push
xlat
xchg
mov
xchg
stc
subb
je
xorl
xchg
inc
push
mov
push
and
lret
loop
push
movsl
nop
or
pop
xchg
xchg
add
test
mov
add
loopne
cmp
in
or
xor
jo
cld
stos
and
cmpsl
sub
adc
aas
mov
mov
rcrb
sub
and
sbb
sub
out
mov
push
add
outsb
ja
mov
push
movsb
ds
lea
jmp
mov
and
xor
aad
add
psrld
movsl
dec
je
cs
aam
insb
frstor
mov
leave
loopne
pop
mov
mov
arpl
adc
dec
push
or
pusha
adc
pop
mov
fdiv
inc
add
and
jbe
fsts
dec
int
outsb
pop
nop
jo
adc
sub
call
lock
adc
add
ret
scas
addr16
pop
and
test
add
inc
mov
rorl
pop
add
dec
enter
mov
mov
push
sbb
jmp
push
div
mov
sbb
push
decb
aam
lock
pop
jl
jmp
push
dec
xor
movsb
cmp
ss
in
jns
jbe
jno,pt
inc
or
add
push
mov
sub
ret
jns
cmp
push
rclb
jmp
clc
inc
and
add
and
bound
or
pop
push
xchg
xor
push
pop
push
sarb
xor
jb
rclb
cltd
mov
mov
dec
insb
jne
xor
sub
mov
adc
in
pop
sub
or
pop
sahf
aad
lds
or
imul
gs
push
xor
xchg
adc
sbb
in
cmpsb
jne
or
adc
sbb
sub
enter
clc
inc
andl
jns
ret
rorb
repnz
cmc
andb
mov
outsl
in
sbb
push
sub
mov
mov
mov
dec
sbb
loopne
cld
scas
loope
cmp
fcoms
cmp
out
add
fimuls
push
inc
lea
fildl
cltd
popf
shlb
movsb
mov
fucomip
jecxz
or
or
fistl
lea
and
push
push
xchg
adc
pusha
mov
inc
inc
sub
xor
and
shll
xchg
mov
dec
shrb
mov
dec
or
or
movsb
sti
pop
fadds
mov
and
mov
sub
dec
sbb
mov
icebp
pop
popl
xchg
push
hlt
outsl
jp
mov
daa
movsb
adc
int
test
inc
aaa
jg
add
ret
or
scas
push
jne
xor
mov
out
fisttps
out
jo
pushf
mov
add
mov
xchg
je
push
dec
punpcklwd
int
rol
xchg
mov
int
inc
pop
add
jl
xor
add
in
fbld
in
xchg
xchg
adc
push
pop
out
or
fadds
sahf
shlb
aad
pop
sbb
dec
fs
mov
shll
lock
or
push
pop
aas
or
pop
xchg
add
lret
jo
xchg
sub
jo
popf
mov
and
push
mov
popa
mov
test
adc
addb
scas
mov
int3
cmc
push
mov
inc
fnstenv
pusha
mov
imul
inc
sbb
pop
pop
mov
out
lock
out
add
or
insl
push
mov
inc
sub
adc
out
mov
push
lret
mov
mov
pop
int
repz
mov
cmpsb
scas
sub
roll
repnz
adc
and
lret
inc
mov
fwait
mov
pop
push
xchg
sbb
push
lds
xchg
fnstcw
or
sti
jne
in
aaa
aad
leave
fstpt
into
gs
dec
clc
int3
mov
mov
clc
mov
xor
pop
push
enter
jle
addl
pop
sub
add
pop
pop
push
inc
sub
ljmp
sahf
mov
mov
bound
jb
movsb
mov
enter
push
mov
cli
fmuls
je
mov
movsl
nop
ficoms
ja
fs
add
aaa
cmp
js
bound
inc
mov
adc
repnz
mov
xchg
dec
jne
cmp
mov
stc
movsl
nop
out
mov
inc
out
js
mov
aam
push
inc
jecxz
and
addl
stos
out
push
xchg
addl
fstl
add
and
mov
test
lods
imul
aad
ret
mov
sbb
cli
out
jo
sbb
in
xchg
push
pop
inc
int
int3
sbb
and
lret
inc
sti
pop
mov
rolb
test
mov
cwtl
rclb
and
xchg
outsl
pop
xor
loopne
xor
add
add
fcoms
ss
cmp
inc
push
push
jecxz
mov
std
dec
xchg
lret
and
dec
cs
mov
push
or
mov
or
sub
and
cld
pushf
sti
pop
or
setle
cmp
lock
jecxz
push
jle
inc
test
mov
sahf
add
mov
ja
lock
loopne
loop
insb
lahf
mov
mov
adc
inc
out
lock
dec
xor
popa
lahf
mov
aam
mov
xchg
cltd
mov
xchg
xor
sub
imul
roll
jmp
jge
fcoml
push
lret
sub
cmp
push
sub
lret
das
push
les
icebp
popf
and
sti
lds
and
xchg
mov
add
lret
push
js
dec
cwtl
aaa
idivb
mov
xor
mov
cmp
xchg
dec
mov
nop
sbb
dec
out
mov
mov
sbb
push
push
ss
fwait
sbb
push
ss
rclb
lock
popa
clc
jge
nop
jne
lahf
rorb
pop
push
lcall
cmp
gs
dec
mov
loope
pop
push
shrb
pop
cmp
xchg
js
stos
xchg
lcall
or
xchg
dec
pop
and
hlt
andl
jb,pt
mov
fdivs
or
stc
push
mov
cltd
sub
hlt
aad
les
sar
cmpsb
test
sysret
lret
lea
testl
ret
popfw
xchg
adc
or
out
scas
push
pop
and
jbe
ja
jb
sub
dec
inc
or
or
sub
repz
xor
fldenv
sbb
cmc
nop
int3
push
stos
mov
pop
aam
mov
int
cli
pop
ret
inc
jmp
sbb
test
cli
push
jo
jp
xchg
add
xor
push
ret
mov
mov
pop
cmp
mov
push
adc
and
pop
sbb
mov
fisttpll
je
cmc
aad
mov
loop
jbe
repz
lahf
fwait
jp
imul
add
lods
cli
mov
les
cmp
dec
mov
xchg
bound
adc
dec
inc
fimull
inc
pop
fwait
cmp
das
and
add
jbe
stc
mov
xchg
push
lds
add
mov
sub
jb
push
aaa
or
pop
addr16
push
xchg
fs
xlat
popa
add
mov
sub
pop
push
mov
rolb
iret
xorb
out
mov
popa
adc
sbb
push
notb
sub
pop
test
jbe
shl
xlat
outsb
push
rcll
xchg
inc
and
mov
xor
ds
add
mov
mov
repz
adc
scas
jae,pt
nop
push
add
push
inc
jb
jae
and
mov
iret
inc
cmc
cltd
pop
int
jno
xor
jae
in
xlat
adc
loopne
ror
imul
stc
sub
mov
pop
sub
xor
cmp
inc
inc
jp
lret
sti
or
add
pop
mov
aam
push
fidivs
cmp
and
mov
push
sbb
mov
pop
fbstp
stc
push
mov
mov
xchg
movsl
sub
xorb
ds
clc
cmp
std
xor
nop
inc
mov
cltd
pop
xor
push
daa
jg
lods
mov
mov
xchg
add
mov
dec
fisubs
jnp
add
sahf
jbe
add
into
mov
cltd
fildll
mov
test
sti
cmp
popf
jb
push
stc
stos
cmp
mov
mov
push
or
dec
add
das
out
pushf
int
mov
sahf
sub
mov
pop
shl
aam
add
fcomp
and
push
test
mov
hlt
das
inc
xor
jae
pop
fsubs
pop
xchg
jne
call
add
or
ret
js
or
rorb
les
push
cmp
mov
jae
sbb
sbb
jns
pop
jg
add
dec
mov
loopne
xchg
xor
xor
or
sub
sub
repz
sub
dec
mov
in
cmp
loopne
imul
cmp
mov
jge
stos
rcrb
inc
inc
ret
mov
and
in
and
shrl
add
dec
repnz
push
jg
insb
outsb
mov
sbb
loope
pusha
lcall
and
repz
xor
cmp
and
ja
cli
mov
mov
xchg
xorl
das
jns
sbb
cmp
mov
mov
lock
inc
lods
sbb
mov
test
jb
xor
loope
in
sub
je
mov
lds
add
dec
ret
mov
ret
iret
bound
cmp
stos
loop
data16
insb
mov
cld
xor
pop
sbb
out
scas
bound
cmp
mov
test
cli
mov
xchg
gs
lods
movsl
adc
xchg
pushf
jmp
add
stos
pop
stos
cmpsl
fidivrl
int3
pop
lds
or
movsl
sbbb
insl
add
sbb
jno
push
jge
add
dec
jmp
arpl
xchg
sub
and
cltd
in
in
add
dec
pop
and
mull
cmp
iret
bound
xchg
fnstenv
fdivr
cli
rcrb
out
mov
dec
jge
clc
add
mov
jg
pop
and
cmpsl
aaa
lods
out
pushf
int
or
and
push
push
dec
int3
stos
cmp
dec
jno
and
inc
ljmp
cmp
lods
push
push
sbb
je
sub
outsb
insb
repz
jecxz
ficoml
pop
xor
and
or
mov
xchg
sbb
lds
jne
divb
xor
and
jmp
xlat
sub
das
popf
push
in
inc
and
addr16
lcall
dec
adc
pop
push
mov
rclb
lods
pop
cmp
int
mov
lahf
icebp
xchg
and
call
add
mov
jne
fdivrs
pop
inc
or
iret
pop
out
scas
andl
sbb
jnp
sbb
and
add
push
fmull
insb
pusha
xchg
inc
sti
lods
inc
jl
mov
hlt
inc
mov
or
push
push
pusha
xor
push
fadds
adc
jne
movsl
leave
adcl
lret
fildll
lcall
lods
sti
loop
sbb
out
pop
mov
idivl
or
inc
fnstcw
testb
adc
cld
cmp
in
jle
imul
xlat
mov
pop
cmpsb
jae
ds
jnp
jne
in
jecxz
jno
testl
pop
mov
pop
lods
jno
bound
jge
add
pop
push
lds
out
add
push
jnp
shll
xor
les
push
push
add
int3
mov
leave
push
arpl
jmp
xchg
rcll
leave
jl
scas
cwtl
roll
cmpsb
push
mov
pcmpgtd
lods
mov
mov
add
jns
jns
cmp
pop
cmp
mov
imul
push
icebp
dec
aam
jg
add
or
and
adcl
or
xor
jns
and
xchg
xor
lds
test
cmpsl
jnp
std
or
movsl
imul
xchg
mov
cmp
push
div
jmp
xorb
push
fldl
mov
ret
call
js
push
sub
cmp
xor
or
enter
mov
push
stos
mov
sub
pop
jnp
adc
xchg
or
sub
stc
ja
js
adc
dec
ja
push
mov
jo
popa
fs
sbb
loop
push
push
mov
les
and
outsl
ja
mov
cltd
insb
imul
mov
cmpsb
cmp
mov
add
push
or
inc
mov
jle
adc
sub
jne
incl
sub
repnz
loop
sbb
inc
pop
insb
mov
stc
xchg
inc
imul
add
sbb
shll
movsl
sarl
dec
push
fldenv
cld
jle
and
add
insb
add
adc
sub
push
pop
cli
loope
push
jge
aam
subl
fcompl
xchg
dec
adc
sbb
pop
stos
or
mov
jp
int
dec
lods
data16
into
fcmovu
sbb
lock
andl
push
test
stos
pop
push
adc
das
ret
add
xchg
pop
lds
mov
ror
ds
dec
mov
mov
mov
mov
cmpsl
xlat
xor
push
pop
sub
mov
mov
or
cmpsb
cld
icebp
xchg
es
dec
mov
jo
xor
jecxz
and
insb
add
ficoml
lret
jne
flds
cmc
out
sub
scas
push
es
mov
mov
fisttpl
adc
push
xor
lret
lea
stos
mov
pusha
adc
bound
cmpsb
add
imul
push
lret
sbb
mov
mov
sub
pop
push
cmp
adc
inc
xor
lds
out
int
sub
sub
sub
dec
addr16
lret
dec
mov
stc
xchg
push
in
mov
clc
mov
outsb
jecxz
sbb
and
xlat
adc
lea
mov
lret
popf
mov
xor
cmp
inc
popf
push
icebp
xchg
mov
cmp
adc
push
push
insl
stos
jmp
jns
jle
push
scas
lahf
int
jns
nop
adc
leave
and
push
int
stos
dec
xchg
mov
add
dec
sub
mov
push
insl
in
push
fwait
popf
inc
loope
out
pop
lock
mov
jecxz
push
call
data16
mov
jae
mov
xlat
clc
mov
or
insb
and
xor
imul
fldl
push
xor
cld
xor
dec
outsl
call
mov
in
cli
orb
adc
jp
push
jno
inc
add
pop
lds
mov
xchg
xor
inc
mov
pop
push
je
jns
fisubl
iret
test
testl
jge
push
or
aad
fidivs
push
pop
mov
ds
jno
lahf
loop
inc
mov
mov
stos
pushf
lods
sub
jbe
jecxz
push
xor
insb
sti
lock
out
dec
xchg
sub
and
inc
mov
clc
cmp
in
mov
or
sbbl
xchg
sbb
pop
mov
stos
loop
sbb
fsub
pop
push
xor
pop
jg
pop
incl
jo
or
call
xchg
sahf
pop
mov
scas
std
imul
xlat
mov
push
testl
lods
andl
out
cmp
int3
int
dec
stos
push
and
add
lds
testl
xchg
fdivrs
or
push
call
subb
cmp
sahf
mov
mov
cld
mov
jbe
les
sti
push
rolb
int3
xor
jg
and
jmp
xchg
ror
inc
stos
cmp
in
clc
outsl
add
sub
orb
pop
sub
inc
inc
movsb
ja
mov
and
outsb
and
mov
sbb
pop
cmp
sbb
bound
jg
stos
jl
into
mov
mov
sbb
je
test
lret
sub
jle
subl
mov
mov
pop
ljmp
and
mov
xchg
adc
sahf
clc
xchg
cmp
dec
inc
subl
popa
cmp
gs
add
stos
xchg
add
push
call
jle
add
imul
adc
inc
push
daa
in
leave
add
mov
xchg
inc
or
add
add
and
cltd
mov
mov
dec
or
add
cld
mov
and
shlb
sub
or
sbb
loope
in
loop
je
into
outsl
out
pusha
sub
and
xchg
lahf
or
imul
xor
xchg
sbb
xchg
cltd
scas
xor
imul
dec
xchg
test
mov
mov
mov
sub
jns
and
int3
mov
mov
jb
sub
push
push
aas
lahf
imul
test
nop
sub
subl
insl
pop
sti
push
shll
xchg
shrl
or
jg
pop
cmp
mov
idivl
cli
pusha
in
inc
insl
addr16
dec
jle
mov
or
sti
lahf
dec
push
mov
cmp
aad
adc
test
pop
or
aas
or
sbb
aad
cwtl
add
je
push
add
mov
sar
std
outsb
or
mov
inc
mov
mov
mov
scas
jns
repz
xorl
push
icebp
or
popf
lret
imul
aaa
jnp
shl
popf
gs
pusha
inc
and
push
es
mov
pop
mov
aad
cli
add
dec
js
and
mov
push
out
stc
push
cwtl
jge
test
sub
adc
std
loope
fstps
push
inc
cltd
dec
mov
push
movsl
movsb
dec
shl
cmp
daa
pop
pop
pop
push
pop
jle
sti
xor
inc
pop
push
push
cld
push
cmp
aas
adc
cld
pop
xchg
test
pop
inc
fistps
xchg
mov
jge
jg
pop
or
andb
fucomp
ret
cmp
pop
jge
pop
cmpsb
and
lods
inc
cmp
adc
mov
outsl
sub
jecxz
in
pop
test
incl
rclb
test
xchg
out
and
mov
sbb
sbb
in
xchg
decl
out
shrb
jmp
cld
nop
stos
xor
push
jp
andb
pop
push
rcrl
aaa
addl
add
out
push
xor
in
or
cs
lcall
dec
xchg
or
rorl
mov
cmp
dec
jge
xchg
ror
loop
fidivl
test
and
add
inc
jge
popa
sub
xor
inc
and
push
adc
int3
sub
popa
les
les
aam
addl
adcb
lods
mov
and
xor
int3
clc
int
divl
je
cmp
inc
stc
xor
icebp
mov
int
xchg
mov
or
and
std
lret
push
add
fwait
test
dec
pop
xor
add
stos
jge
or
cmpsb
mov
jmp
mov
and
mov
push
shlb
jbe
loope
mov
dec
movsl
pop
stos
test
add
subl
and
lods
inc
or
jle
imul
adc
shll
mov
dec
shll
inc
insb
insl
mov
mov
or
push
cmp
hlt
or
xchg
dec
lcall
adc
sub
dec
shrl
pusha
mov
sbb
inc
and
push
mov
xchg
sub
push
sbb
sbb
rcrb
clc
sub
push
aad
xor
subl
fisubs
jmp
push
les
adc
mov
xor
cld
cmpsb
mov
sub
jno
pop
adc
pop
pop
pushf
cs
pop
subl
fisubrl
rclb
orb
inc
adc
outsl
dec
add
add
and
je
andl
sbb
mov
dec
sbb
or
adc
popa
lock
loopne
inc
movsl
dec
cmp
andb
add
lock
push
inc
inc
clc
sub
fs
dec
adc
aad
or
mov
inc
out
les
adc
xor
xchg
scas
dec
je
or
jno
inc
sbb
push
add
daa
or
adc
movsb
loope
test
arpl
xchg
jbe
or
or
pop
call
rcr
movsb
jb
stos
xor
adc
fs
mov
jle
adc
pop
dec
sbb
or
mov
fwait
xor
fsubl
xchg
inc
insl
ret
cmpsb
inc
je
lret
and
jo
pop
lods
inc
adc
ds
mov
mov
xchg
and
scas
push
sbb
fwait
pusha
pop
and
jp
and
dec
sbb
rclb
shrb
dec
pusha
xchg
adc
jae
fidivs
daa
ret
dec
shlb
jno
es
adc
rcrb
sarl
imul
inc
mov
fstpt
cmp
push
inc
cmp
cmpsl
or
shrl
push
test
test
push
inc
dec
lea
out
lahf
jne
xor
popa
dec
cmp
or
mov
xor
xor
sbb
xchg
adc
sbb
pop
int
mov
nop
adc
and
imul
fwait
pop
add
loopne
jno
fdivs
daa
subb
mov
xchg
fs
adc
repnz
pusha
in
or
mov
roll
adc
mov
and
and
xor
popa
mov
adc
sbb
xor
adc
mov
mov
test
fwait
cwtl
adc
adc
xchg
dec
adc
ss
daa
rcl
orb
cltd
je
pop
and
cld
xor
xor
test
push
pop
test
xorb
mov
sahf
adc
xor
daa
mov
sbb
outsb
xor
lcall
in
loopne
test
mov
xchg
lea
movsl
mov
jnp
sub
test
bound
adc
push
sbb
in
xchg
mov
cmp
push
call
or
and
and
adc
sbb
mov
sub
mov
cmp
and
add
sub
fwait
loopne
add
shlb
inc
shll
mov
sbb
add
imul
test
fcmovbe
xor
ljmp
push
daa
xchg
in
sub
adc
sub
cmpsl
xchg
movsb
popf
aaa
cwtl
adc
test
dec
enter
inc
inc
inc
adc
pushf
xchg
ljmp
loop
push
cltd
jno
inc
adcl
jno
or
mov
pop
inc
fldenv
xorb
xorl
mov
push
lds
stos
xor
add
or
add
sbb
daa
loop
adc
clc
shll
aam
pop
dec
inc
insl
dec
mov
adc
dec
push
mov
push
fcomps
push
xchg
xchg
mov
jne
push
jne
ja
adc
ja
mov
sbb
sbb
mov
or
pop
mov
data16
mov
add
xchg
jl
mov
cli
cmpsb
shrb
pop
adc
mov
and
xor
loop
dec
pusha
and
std
or
jge
cltd
dec
mov
sub
dec
inc
js
adc
xor
clc
xchg
das
pop
rcrl
dec
or
inc
xor
adc
subl
int3
pop
push
mov
or
test
mov
sti
cmp
sarb
xor
arpl
vunpckhps
cmpsb
dec
test
mov
outsl
ret
clc
push
fisubrl
adc
push
mov
adc
mov
mov
mov
xor
pop
adc
xchg
dec
scas
mov
mov
mov
bound
clc
jge
mov
es
dec
push
mov
dec
test
sub
fs
jae
pushf
in
int
adc
xor
aaa
enter
xchg
mov
adcl
ficompl
stos
jae
insb
imul
not
out
lcall
pop
and
dec
sbb
aam
loop
cmp
mov
inc
sub
stc
and
mov
movsl
or
jg
xor
push
scas
adc
in
adc
xchg
and
mov
push
test
repnz
in
inc
adc
lret
pop
mov
pusha
decb
xchg
and
dec
cmpsb
or
jg
cwtl
adc
lret
out
inc
adc
adc
xor
or
cmp
mov
mov
mov
addr16
out
sub
test
pop
test
sub
add
fldcw
sbb
push
mov
ret
push
mov
stos
aam
or
cltd
inc
ljmp
mov
jp
add
add
outsl
or
mov
sub
and
sbb
dec
clc
adc
je
out
pop
and
iret
stos
fcoml
test
inc
shrb
mov
jge
cmpsb
aaa
push
icebp
jmp
movb
add
jmp
fiaddl
js
add
push
and
stc
out
pop
and
in
stos
adc
cld
cld
rcll
je
pop
xor
xor
int
and
aad
or
cs
nop
fwait
je
xchg
dec
lods
ja
lds
push
testb
int
andb
sbb
mov
pop
xor
inc
cs
jecxz
dec
xor
xor
je
aad
mov
sub
movsl
jle
pusha
mov
mov
and
push
pushl
mov
sub
jb
push
xor
mov
jne
xchg
sub
ss
and
push
movsb
insl
sarb
fbstp
dec
and
and
xor
xchg
xchg
scas
lods
xlat
mov
jecxz
xor
addr16
inc
mov
xchg
dec
push
in
xor
shlb
lea
add
jmp
xor
sbb
sub
mov
sbb
jl
lret
loopne
jbe
or
popf
ja
add
lock
popa
cs
adc
movsl
add
mov
adcl
int3
cmp
incl
ficomps
dec
sub
nop
jbe
scas
mov
into
mov
mov
jl
movl
cwtl
push
or
jne
pop
sub
les
inc
mov
rorb
or
lods
mov
add
xor
sub
mov
and
jp
rcl
out
dec
and
nop
pop
fcompl
lea
or
shrl
popf
scas
call
aas
xor
sub
mov
cltd
add
add
aam
lods
mov
aam
lods
stos
dec
mov
adc
stos
movsl
adc
inc
ret
aad
adc
add
aam
inc
out
ret
fwait
or
inc
cmp
adc
in
stos
xchg
jge,pn
xchg
push
add
lahf
stc
mov
shrb
sahf
xor
mov
adc
jge
inc
repz
and
xchg
das
add
movsb
jmp
inc
and
movsb
into
movsb
mov
mov
test
jb
cwtl
mov
fnstsw
pop
outsl
cli
pop
test
es
sbb
fstpt
mov
cmp
jl
add
push
sub
xor
xor
je
int3
sbb
mov
push
stc
add
test
mov
imull
adc
pop
mov
aas
jp
les
test
aas
and
fdivs
adc
lahf
repnz
pop
loop,pn
push
mov
cmp
frstors
aad
push
sub
lods
sub
mov
add
xchg
mov
push
test
jp
pop
dec
mov
js
sub
mov
jmp
insb
aas
jl
rclb
pushf
cs
in
xchg
sarb
jle
hlt
jno
cli
jg
hlt
xor
mov
andb
and
or
mov
ljmp
aam
jg
jecxz
push
adc
jmp
jle
push
test
mov
and
push
jmp
aam
cmp
std
inc
mov
iret
mov
dec
dec
lock
or
or
add
and
dec
and
mov
arpl
icebp
and
data16
int3
insb
push
loope
and
cmp
jmp
loop
in
push
imul
push
and
sbb
or
das
sarl
jne
jl
jecxz
and
test
dec
sub
pop
notl
leave
inc
mov
fidivrl
sbb
or
cmp
and
adc
xor
or
adc
jg
jbe
mov
clc
mov
nop
sar
addr16
fsubl
or
or
xlat
sbb
inc
push
add
or
dec
pop
std
adc
jno
or
mov
mov
hlt
sbb
xor
and
push
int3
pop
pop
js
push
js
or
inc
mov
lahf
or
sahf
in
repz
lcallw
cmpsb
push
dec
or
pop
imul
fimuls
nop
in
inc
lods
scas
pusha
or
xor
add
xchg
pushw
mov
or
int3
mov
sub
aaa
rclb
scas
xchg
inc
outsb
hlt
xchg
sub
pop
push
pusha
xor
dec
mov
movsb
popf
call
bound
leave
xor
xor
clc
cmp
sbb
or
add
sbb
cmp
jno
and
push
and
mov
lods
in
mov
in
or
in
or
in
or
sbb
in
inc
dec
inc
ja
mov
add
adc
mov
iret
dec
mov
push
inc
sub
mov
xchg
pop
int3
cltd
dec
and
dec
pop
and
out
inc
xor
adc
movsl
xor
or
or
sbb
and
pop
and
pusha
xchg
inc
enter
gs
out
int
mul
push
lock
adc
daa
jno
mov
push
cmpsb
jecxz
cli
adc
test
movsl
inc
jbe
lods
pusha
ret
jne
jmp
and
add
cli
mov
adc
cmp
cld
nop
sub
call
jl
movhps
and
sub
mov
sub
cmp
enter
add
xor
push
sbbb
lods
andl
xchg
aaa
xor
mov
les
stos
mov
mov
lods
cs
or
pop
arpl
adc
in
int3
pop
addl
or
in
mov
dec
xchg
in
jne
jmp
pop
pop
mov
ret
daa
cmc
shll
mov
jecxz
push
fwait
cmp
mov
cmp
add
push
jo
sbb
jmp
ror
or
sbb
xchg
sub
dec
rol
and
sbb
push
dec
fmuls
xchg
sbb
mov
pushf
scas
dec
popf
sub
dec
push
mov
jne
mov
rcr
fildll
popf
and
outsb
xchg
push
mov
jnp
les
fwait
xchg
gs
pop
pop
push
addr16
scas
sub
xor
fwait
mov
xor
mov
add
cld
out
lods
das
mov
movsl
int
xchg
xor
adc
add
cmpsl
lods
scas
andb
xchg
mov
out
xor
loopne
push
cmpsl
fcoms
fisubrs
or
int3
in
add
popa
fdivs
shll
mov
mov
inc
aaa
adcb
leave
add
movl
cmp
mov
int
push
mov
int3
jle
das
fadds
jns
jnp
cwtl
adc
jg
nop
lret
mov
pop
cli
adc
sub
jo
scas
inc
aam
cld
std
and
mov
jo
mov
sub
iret
mov
bound
ret
lods
pushf
push
pop
jnp
addr16
imul
inc
mov
xlat
push
or
adc
je
add
pop
and
sub
or
mov
dec
cmp
inc
enter
dec
cmp
andb
push
pushf
add
push
movsl
roll
mov
and
loopne
mov
rcrb
mov
inc
inc
cmc
mov
xchg
stc
push
jp
sbb
test
inc
lret
cmc
rclb
cmp
dec
fldenv
aam
sbb
nop
daa
mov
or
inc
jne
iret
movl
jns
push
mov
mov
int3
repnz
sub
mov
in
js
imul
adc
jae
add
inc
jns
sbb
out
or
subl
scas
mov
fcmovnbe
rcr
mov
sahf
fistpl
cmp
inc
outsb
addr16
push
mov
popf
into
xor
add
ss
dec
insl
clc
call
arpl
shrb
sbbl
adc
and
inc
jmp
cltd
lret
jl
and
jno
push
add
xchg
lock
push
cmp
push
xor
inc
mov
inc
jg
push
mov
and
out
or
xor
mov
mov
ret
xor
ljmp
add
add
and
fs
add
or
shrl
or
bound
sub
aad
sbb
lea
and
shll
mov
mov
push
mov
inc
dec
xor
xor
sti
push
push
mov
and
lret
aam
push
test
dec
aam
loop
pop
inc
inc
push
ds
and
adc
test
popf
mov
popa
mov
mov
out
movsl
dec
outsl
or
aaa
shll
mov
adc
lds
mov
sub
in
pop
cmc
adc
data16
icebp
sbb
push
xchg
insb
cmpsb
mov
rorb
cltd
jge
mov
or
movsb
loope
sti
xor
jmp
jge
mov
test
lret
iret
pop
adc
out
add
test
dec
jb
mov
adc
xor
mov
test
xchg
inc
loopne
push
sbb
scas
rorb
sub
inc
or
repnz
add
mov
push
andb
shlb
pop
dec
pop
loopne
inc
cmp
xor
cmpsl
cmp
xchg
xchg
daa
lock
pop
sarb
fs
out
aas
add
or
sub
leave
test
inc
add
aam
mov
push
sbb
fadds
mov
mov
cmpl
fld
mov
xchg
data16
or
or
orb
adc
adc
dec
fcmovb
xchg
sti
loop
adc
mov
sbb
bound
push
int
pop
push
fimuls
clc
mov
rclb
sbb
in
mov
push
cwtl
insb
mov
pop
fadds
mov
ror
shll
mov
ja
dec
in
into
and
add
pop
leave
add
jae
ljmp
and
cmp
and
popf
dec
test
cmp
fcoms
test
mov
ljmp
add
iret
add
inc
ret
mov
add
dec
xchg
fbstp
dec
jmp
add
inc
les
mov
pop
sub
inc
ljmp
ja
adc
cwtl
lret
or
outsb
xchg
lods
mov
mov
pop
xor
sti
ss
dec
xchg
in
add
xchg
movl
add
je
pop
inc
pusha
inc
mov
pop
mov
xlat
cmp
int3
loop
mov
into
jle
shlb
sub
arpl
sub
lret
shr
inc
and
sbb
inc
push
inc
sbb
sub
repnz
inc
xchg
mov
outsl
repnz
mov
shl
sub
pushl
pop
lahf
dec
ja
orb
inc
aas
pop
addr16
lret
test
push
push
popa
inc
add
and
sub
aaa
mov
stos
testl
push
cli
ja
jmp
add
rorl
push
in
aaa
gs
or
lock
jo
adc
call
mov
adc
fcompl
gs
mov
jns
push
in
loopne
inc
loopne
push
jbe
mov
and
dec
xor
push
add
xchg
pop
jecxz
cmp
xchg
add
adc
pop
cmp
dec
xorb
fsub
pop
cmp
clc
jecxz
mov
dec
call
inc
jno
fadds
mov
fs
jge
sub
dec
adc
fdivrs
xchg
std
or
mov
jp
bound
div
xor
mov
mov
sub
mov
mov
add
sub
or
imul
sub
cmpl
iret
cli
jp
shlb
inc
xor
mov
gs
ss
hlt
gs
inc
jecxz
fimull
test
and
lds
mov
xchg
aam
sbb
and
xchg
add
cmp
mov
and
mov
xor
cli
dec
dec
push
cmc
das
das
cmp
pop
mov
push
in
and
mov
pop
lds
push
subb
rcrb
cld
mov
ss
filds
cmc
subb
jmp
xchg
xor
pop
push
xor
push
stc
xor
fsubs
jbe
rcl
out
fisubl
xchg
les
jnp
repz
lock
sbb
push
mov
push
pop
mov
mov
clc
xchg
pop
mov
cmpsb
into
dec
xchg
movsb
into
das
fs
adc
inc
lds
out
push
xchg
jne
loopne
pop
pop
loopne
pop
je
or
test
or
push
jge
sbb
in
shlb
pop
loopne
sub
sbb
push
push
fdivrl
scas
fcoms
pop
mov
add
call
inc
and
or
cmp
test
sbb
xchg
sbb
dec
imul
mov
les
jnp
outsl
notl
inc
mov
fcmovne
xor
mov
add
shl
xor
jb
pop
xchg
pop
mov
sub
add
or
and
stos
test
pop
sub
xor
mov
inc
and
xchg
rclb
movsb
push
aad
cltd
aaa
pop
xor
and
and
mov
cmp
cmpsb
call
add
push
xor
inc
jg
andl
cli
movsl
and
iret
sti
xchg
leave
mov
adc
cmpsb
pushl
cmovo
fimuls
mov
inc
pop
push
inc
int3
push
filds
sbb
push
xchg
mov
fadd
xor
adc
pop
negb
add
xor
and
pop
cmpsl
sbbl
cmp
xor
or
mov
cmc
call
add
test
and
inc
jp
fwait
loop
lock
jge
sub
fildll
inc
pop
xchg
mov
shr
mov
pop
sub
rol
aad
cmp
xchg
and
sub
and
jb
les
inc
into
mov
test
dec
mov
mov
inc
out
stc
cmpsb
add
sub
push
xchg
pop
lods
xchg
rclb
mov
aad
test
hlt
pusha
xor
lods
mov
xchg
adc
mov
mov
xchg
dec
inc
cmp
cmp
insl
les
and
inc
arpl
dec
clc
in
jno
and
push
push
mov
sub
out
lds
mov
cmpl
cmp
bound
add
es
hlt
push
in
jae
add
jbe
xor
inc
sti
pusha
mov
mov
jmp
adc
in
shlb
sub
int3
clc
mov
nop
adc
clc
xchg
mov
push
sbb
cmp
std
test
lret
test
mov
dec
lods
adc
and
lods
js
push
orl
inc
sbb
push
xor
lret
pusha
and
xor
inc
pop
imul
or
loope
adc
pop
cmp
lret
xchg
std
mov
mov
and
xchg
and
into
mov
movsb
sbb
xor
jne
inc
stos
xor
sbb
inc
mov
inc
jmp
pusha
push
push
adc
aam
pop
lcall
pusha
adc
ljmp
in
int
in
mov
xchg
ret
or
mov
stos
pop
sub
and
lret
adc
or
xchg
mov
pop
data16
popf
push
push
xchg
fcompl
add
in
sbb
inc
push
inc
add
negl
sub
and
das
jge
mov
xchg
stc
inc
jmp
je
mov
addb
push
dec
pop
icebp
mov
out
pop
lahf
idiv
jbe
jmp
mov
push
pop
pushf
icebp
inc
add
pop
adc
movsl
sub
ja
jl
xchg
mov
push
jge
frstor
push
imul
jb
sub
push
daa
dec
cwtl
imul
pop
cmc
mov
cmp
dec
xor
in
cmp
xor
adc
jns
and
or
dec
movsl
mov
xor
cmp
cmpsl
jo
popa
pop
cmpsl
in
sbb
repz
cmp
ljmp
mov
or
stos
decb
clc
push
dec
lret
dec
insl
scas
mov
mov
adc
xchg
sbb
sbb
sub
shll
cwtl
sbb
aam
mov
mov
jbe
mov
call
cmp
pop
dec
add
xchg
jno
add
push
lret
outsl
mov
pop
in
mov
in
sub
loop
aas
add
scas
shlb
outsl
dec
pop
adc
arpl
ret
mov
pop
adcb
test
mov
idivb
jle
sti
mov
xchg
and
pusha
hlt
mov
jle
sbb
xor
lahf
jp
sbb
das
lods
cmp
out
leave
les
xor
idivl
call
lret
jb
hlt
push
or
gs
lahf
push
pop
and
sub
mov
lock
lds
ret
or
jne
mov
pusha
incl
mov
pop
test
jmp
push
sub
or
inc
jbe
mov
mov
adc
mov
stos
nop
test
popf
cmp
cmp
in
pop
xchg
sub
pop
inc
jae
add
movsl
mov
and
loopne
aam
xor
or
xor
push
push
dec
pop
and
cwtl
xor
ja
mov
adc
dec
add
jmp
fsts
out
sub
sbb
scas
add
xchg
mov
mov
pop
push
pop
mov
into
jno
add
and
add
lds
mov
cs
inc
push
in
mov
add
mov
adc
daa
data16
jae
lods
dec
sbb
hlt
push
std
pop
xchg
push
insl
notb
pop
jbe
imul
lock
sbb
push
loopne
orl
loop
mov
dec
cmp
cltd
sar
jae
ffreep
int
cwtl
sub
xor
fsubl
bound
pop
cltd
jle
sbb
je
push
xor
push
lods
out
stc
das
scas
adc
xor
pop
xchg
shll
and
sub
pop
subl
dec
xchg
je
inc
cld
dec
rorb
xchg
call
lret
and
lods
daa
and
mov
in
fildll
and
xor
imul
lods
or
int3
mov
mov
dec
jnp
roll
jmp
aad
xchg
repz
mov
cs
cmp
out
xchg
adcb
dec
sub
ljmp
push
bound
adc
dec
mov
hlt
mov
dec
adc
fdivl
inc
icebp
dec
aad
jno
mov
push
cmp
mov
mov
adc
jg
mov
push
inc
cld
push
rclb
pop
and
jne
lods
sbb
push
and
insb
mov
xlat
mov
shrb
cmc
pop
insl
fisubrl
andb
mov
mov
sti
cs
or
add
dec
push
ret
call
xorl
gs
pusha
jne
pop
stos
rclb
jge
lret
cli
sahf
sbb
movsb
sub
test
pop
rorb
mov
xor
push
adc
pop
clc
cmp
sub
mov
imul
sub
xor
xor
push
cwtl
pop
stc
inc
jmp
adc
add
andl
pop
inc
sarl
insb
test
aas
js
mov
push
cs
psrlw
js
pop
xor
or
xor
orl
sbb
xorl
jmp
mov
sti
or
addb
xchg
imul
inc
dec
outsl
outsb
cli
jl
adc
mov
out
inc
out
nop
fadds
jg
inc
jmp
push
jmp
pop
lods
loop
movsl
add
cld
dec
xor
int3
add
jo
dec
xor
lods
andl
and
xor
bnd
push
pop
xor
sbb
and
cmpsb
cmp
inc
push
aad
fstl
xchg
or
loope
in
add
push
rcl
sbbb
into
add
das
dec
sbb
cli
sub
popa
inc
xchg
dec
mov
outsl
out
imul
sti
dec
push
xchg
jne
mov
mov
into
dec
int
adc
add
push
and
sbb
mov
jbe
inc
push
mov
lds
push
and
cli
lock
cs
jmp
push
aaa
mov
mov
fmuls
inc
test
lds
ret
xor
lea
adc
ljmp
inc
je
xchg
xor
and
adc
adc
add
xor
test
sarb
fs
mov
sbb
add
and
hlt
push
jecxz
adc
iret
add
sbb
cmp
int
jno
stos
lcall
mov
popa
cmpsb
addl
int
sti
inc
jne
pusha
pop
mov
push
mov
call
stos
or
xrelease
sti
test
sti
mov
cmpsb
aad
mov
enter
out
jb
rcrb
jno
adc
xor
xchg
pushf
cmp
pop
and
adc
icebp
sub
sbb
in
xor
xor
adc
dec
addr16
sti
mov
mov
add
adc
mov
dec
add
ret
nop
movsl
push
test
lods
push
dec
sbb
dec
cmp
or
and
cltd
and
outsb
ja
pop
and
add
fdivrl
adc
jecxz
jmp
sbb
sbb
add
ret
les
popf
add
adc
lea
insl
aas
aam
pop
dec
test
and
bound
int
xchg
pop
ret
mov
fisubl
ljmp
xor
fldcw
mov
and
pop
fwait
mov
and
and
or
lret
mov
pop
sbb
sahf
notl
xchg
fisubs
add
ret
outsb
mov
mov
pop
push
sbb
das
aam
pop
sbb
pusha
push
jmp
sbb
pop
sbb
test
and
add
or
lods
ret
and
cmp
dec
sbb
sub
mov
xchg
mov
mov
sbb
inc
sbb
mov
rol
aaa
sti
cmpsb
cwtl
gs
xchg
fwait
adc
mov
adc
push
xor
ja
xor
sbb
sbb
arpl
add
xchg
mov
dec
roll
push
adc
ja
jp
testl
cli
dec
jns
int3
xor
iret
icebp
paddw
ret
je
ret
scas
jnp
pop
sbb
cmp
dec
imul
loopne
data16
je
add
lret
in
xor
adc
or
inc
mov
mov
testb
jnp
jecxz
addr16
inc
xchg
movsl
lods
stos
dec
ja
popa
mov
dec
xor
aad
push
sub
mov
mov
daa
mov
xor
mov
icebp
cmpsw
sub
fcmovu
cmp
cmp
cmp
int3
cmp
enter
adcl
in
ret
cmp
shll
push
loope
inc
mov
add
out
daa
jge
rorl
add
gs
fisttps
imul
sbb
and
xor
xor
xor
mov
sub
popa
addr16
mov
sbb
fyl2x
ja
dec
and
roll
mov
sbb
mov
inc
mov
push
cwtl
dec
lods
loop
insb
jle
dec
xchg
sub
xchg
jns
mov
lods
shll
insl
jl
out
push
pop
lcall
shrb
inc
add
push
or
rcll
cwtl
and
cltd
icebp
cmp
fisubrs
rolb
dec
gs
dec
cmp
xor
lret
enter
in
xchg
inc
lret
push
pop
pop
in
jl
daa
fadds
sub
sbb
xor
cmp
imull
pop
inc
sub
sbb
jmp
les
call
xor
ret
jg
rclb
push
pop
arpl
lcall
sub
cli
ret
jmp
shrb
stos
lahf
outsl
mov
test
scas
or
jbe
sub
sub
scas
popa
adc
fsubrs
dec
adc
fcmovne
and
mov
inc
mov
inc
mov
and
add
jmp
mov
cs
xor
cmp
sub
mov
sub
in
pusha
sub
xchg
sbb
dec
and
je
or
repnz
iret
xchg
mov
sbb
mov
sbb
repz
inc
push
and
lret
and
adc
scas
jmp
mov
or
inc
mov
lret
sti
fisubl
imul
dec
pop
bound
inc
sbb
inc
xor
lods
sub
jle
add
push
pop
or
ljmp
pop
mov
sahf
and
mov
mov
dec
fsqrt
call
jp
addr16
push
mov
out
popf
or
xchg
pop
push
pop
sbb
xchg
popa
sti
fwait
test
dec
inc
stos
sbb
fcom
mov
mov
insb
outsl
stos
dec
xchg
sub
mov
jne
cmpsl
cli
pop
jge
and
lcall
es
fwait
ljmp
clc
lret
in
or
lret
int3
pop
stos
lret
insb
xor
mov
mov
ljmp
ds
sub
cmp
das
test
aad
and
and
jl
push
je
out
dec
loopne
scas
test
addl
out
jb
cld
test
dec
push
add
cmp
in
inc
test
out
fimull
insl
mov
jo
shlb
popa
push
not
pop
mov
shl
lahf
int3
pop
shll
push
hlt
xchg
es
je
add
pop
fsubs
mov
sub
lods
outsb
ds
push
ret
mov
mov
loopne
fsubrs
xchg
mov
xchg
xchg
rorl
jo
push
cmp
or
mov
jae
cmpsb
aas
leave
mov
cmp
lahf
sub
pop
outsb
push
repz
into
push
test
pop
hlt
push
test
and
lock
repz
fisubrs
mov
out
mov
dec
std
arpl
push
imul
pop
jne
movsl
and
or
call
jecxz
xchg
push
int3
mov
sub
loop
mov
rol
or
adc
dec
mov
mov
sub
les
push
or
mov
mov
mov
or
popa
sahf
pop
nop
sbb
push
inc
movl
hlt
push
xor
push
mov
dec
push
shll
rcl
iret
sbb
push
adc
jmp
lock
je
mov
jmp
popa
inc
jns
stc
dec
inc
adc
xor
insl
jno
mov
add
roll
xchg
pop
xchg
into
adc
aad
cltd
mov
xchg
push
mov
or
or
xor
pop
mov
fstps
xlat
mov
nop
xchg
xor
pop
and
xor
xor
xchg
test
loop
mov
gs
pop
int
js
andl
test
xor
loop
jno
sbb
jmp
push
xchg
fwait
shlb
add
movsb
xchg
dec
sub
add
adc
js,pt
jae
mov
data16
sub
and
or
out
push
mov
push
std
or
in
leave
push
jns
or
ljmp
lods
or
mov
inc
inc
or
or
lcall
dec
jb
and
movsl
push
addr16
cwtl
aad
adc
cld
pushf
inc
loopne
push
jecxz
or
or
sub
xchg
sti
dec
cld
add
push
jmp
and
jg
in
jae
inc
int3
xor
cwtl
adc
testb
xchg
scas
inc
sub
pop
test
test
or
mov
fisttps
dec
mov
push
fdivs
movsl
fs
mov
mov
pop
mov
and
cltd
imul
mov
js
or
mov
test
lcall
pop
fwait
push
sub
test
lret
outsb
enter
cld
pop
sub
jge
mov
pop
stos
inc
test
mov
andb
mov
pop
jge
sarb
jp
ficoms
xchg
test
xchg
sbb
sahf
or
fldenv
mov
mov
push
cmpl
adc
in
mov
bound
test
cmpsl
lods
daa
lahf
push
pop
dec
push
leave
xchg
dec
movsl
les
mov
into
mov
mov
repnz
lock
xchg
shrb
and
ja
dec
subb
adc
cmpsl
mov
pop
xor
cmp
and
inc
ss
gs
push
jbe
lret
lock
or
cmp
loopne
or
xor
push
jne
aaa
and
cwtl
sub
inc
add
mov
push
dec
aas
aaa
outsb
or
cmp
scas
rol
data16
ja
fcoms
add
dec
sbb
mov
xchg
sub
pusha
jno
and
jne
xchg
mov
dec
pop
insb
add
jne
mov
inc
dec
jb
jae
cltd
xor
jbe
inc
js
cltd
jl
add
xor
fsubrs
inc
and
pop
push
sbb
add
jg
mov
or
popf
cmp
cmp
xor
cmp
aad
and
stos
es
ret
adc
outsl
aaa
hlt
loopne
rol
das
rol
xchg
push
lds
dec
inc
repnz
xchg
adc
lcall
pop
bound
push
mov
movsl
cmpxchg
fisubrl
loope
mov
dec
test
bound
dec
test
hlt
fsubrs
xor
xorl
aaa
adc
jno
and
push
jns
sub
dec
mov
pop
jp
xchg
adc
dec
sub
es
dec
inc
mov
nop
sahf
nop
rclb
inc
hlt
and
lcall
les
mov
inc
mov
adc
loopne
test
sarl
mov
arpl
and
push
jge
call
sbb
sbb
add
add
lcall
lcall
addr16
or
xchg
cmp
push
pop
pop
loopne
lret
movb
push
xchg
ss
out
xor
xchg
ja
loope
jae
je
jbe
adcb
imul
cmpsl
xchg
incb
push
imul
stc
add
adc
scas
cmpsl
jns
outsl
lcall
mov
or
mov
mov
cmp
dec
subb
adc
inc
cwtl
ficoms
sbb
sub
sbb
sub
or
mov
pusha
push
push
add
and
mov
jmp
or
pop
out
pop
adc
icebp
jns
lds
jo,pn
sub
cmpsl
inc
ljmp
mov
sub
hlt
shll
leave
push
mov
out
mov
fwait
iret
outsl
int3
inc
inc
mov
mov
aad
shrb
adc
sub
cmp
or
lcall
fwait
hlt
stc
divb
clc
jnp
push
xchg
dec
fwait
fs
mov
ljmp
add
pop
push
in
hlt
rclb
imul
int
pop
fldl
test
adc
pop
in
inc
xchg
addb
imul
sub
jo
cmp
or
xor
shl
jae
sub
das
inc
mov
insb
mov
sub
mov
sbb
repnz
loopne
clc
mov
and
dec
cld
jmp
xchg
dec
lcall
lock
popa
js
push
fwait
add
jns
xchg
and
ljmp
jg
lea
aam
sbb
shll
rclb
xchg
lods
adc
in
jecxz
rcll
jo
adc
cmp
loopne
push
pop
xchg
push
popa
xchg
scas
pop
jns
xchg
pop
pop
out
dec
jns
xchg
inc
popa
scas
mov
mov
adc
testb
mov
jbe
cs
dec
jnp
neg
sti
ss
movsb
pop
or
inc
mov
addl
in
fisubl
mov
jns
adc
add
shrb
pusha
push
insl
dec
pusha
inc
shl
xor
cmp
sbb
dec
dec
adc
ljmp
lret
mov
ljmp
xor
es
xlat
insl
cmp
lahf
mov
cli
jne
dec
stos
test
loopne
adc
or
push
aad
dec
andl
mov
cmpb
push
imul
fs
ja
adc
rolb
xor
mov
jp
fwait
pusha
repnz
inc
orb
mov
jmp
cwtl
and
cmp
xchg
add
cli
mov
mov
or
inc
push
fdivr
mov
insl
loop
mov
jbe
aam
lods
jno
xchg
sub
adcl
mov
mov
mov
sub
xlat
ds
sub
gs
orl
sub
mov
xor
xor
pop
push
xor
mov
mov
xor
lds
test
fstl
xor
negb
inc
push
sub
and
mov
cmpsb
cwtl
in
stc
xchg
xchg
subl
dec
cli
scas
addr16
pop
dec
mov
push
pop
sbb
jb
outsb
xor
xchg
lock
test
fs
xor
lcall
cmpsl
ljmp
lcall
xchg
stc
mov
scas
jb
inc
pusha
jge
loope
mov
xchg
mov
add
xchg
lahf
imul
sub
js
mov
mov
sbb
sbbl
enter
cmpl
xchg
mov
aam
push
inc
and
or
xor
dec
pop
test
int
aam
sbb
subb
and
mov
or
mov
mov
rcl
pop
mov
sahf
and
adc
aas
cli
out
add
pusha
incb
adc
loopne
mov
and
cmpsb
mul
test
ficoms
sub
lods
and
cld
push
mov
scas
cltd
in
movsb
mov
cmpsb
cltd
fs
jae
lds
mov
lret
sbb
stos
cmp
push
neg
enter
add
arpl
fucomip
adc
cld
xchg
sbb
clc
xor
jnp
stc
out
pop
int
movsb
mov
push
lods
cltd
xchg
sbb
jmp
cld
and
out
jb
out
fcomp
xor
and
xchg
iret
insl
movsl
sahf
scas
test
sbb
cmp
imul
pop
cmp
fcoms
cmpb
imul
adc
and
or
mov
repnz
jno
and
sar
mov
pop
sub
lcall
in
sahf
mov
push
subl
lds
add
int
jno
add
sub
clc
jns
ds
pop
in
fcoms
imul
cmp
scas
push
inc
fiadds
xchg
aas
add
imul
mov
loop
sub
xor
mov
sbb
add
adc
sbb
aad
iret
icebp
push
inc
out
sbb
daa
or
pushf
cmpb
xchg
ljmp
add
xchg
sti
mov
push
popf
mov
xchg
sub
mov
in
dec
repz
out
push
xor
xor
push
inc
ljmp
daa
dec
inc
test
and
mov
jmp
imul
jp
bound
dec
enter
aas
int3
rcll
mov
mov
xor
or
xor
fiadds
int3
add
cs
xchg
push
shlb
sarb
inc
xchg
mov
sub
dec
or
rol
mov
outsb
jne
mov
out
addr16
and
sbb
inc
pop
mov
lret
sti
jmp
push
jge
push
imul
mov
inc
data16
insl
push
int
push
jae
or
rcrb
les
sbb
lea
xchg
mov
push
sbb
jo
mov
mov
inc
fimull
dec
and
outsl
std
sub
mov
cmp
out
mov
push
add
ljmp
mov
aaa
xorb
push
cwtl
inc
push
jns
pop
or
or
es
push
inc
or
mov
push
pop
push
pop
jmp
das
mov
pop
xchg
push
and
stos
adc
or
mov
ss
xor
push
sub
in
adc
jp
jo
shrl
rolb
or
shl
out
push
mov
into
add
aas
mov
movsl
xor
push
loop
add
clc
jnp
add
jp
and
cs
add
pop
outsb
mov
pop
pushf
or
hlt
sbb
mov
push
push
mov
mov
lods
inc
in
mov
adc
push
adc
sbb
aad
in
loopne
aad
add
into
cmp
daa
sbb
push
adc
in
pusha
nopl
dec
aam
cmpsb
inc
add
dec
sbb
jmp
sbb
mov
test
fiaddl
pusha
das
inc
pop
cli
lret
push
dec
data16
lret
movsl
sar
insb
jnp
js
das
cmc
cmp
outsb
inc
arpl
movsb
leave
flds
adc
xor
fs
mov
je
icebp
xor
test
mov
adc
jp
dec
xor
std
sbb
pushf
sahf
in
or
dec
lods
dec
mov
inc
in
int
addb
cltd
add
jae
push
push
gs
or
push
mov
in
cwtl
and
outsb
in
mov
cs
mov
das
or
rorl
insl
mov
xchg
pop
arpl
xchg
hlt
fst
jl
jmp
out
add
add
stc
cmp
sbb
lret
add
mov
jae
pop
pop
jge
aaa
icebp
xchg
mov
fisttpl
jp
lret
fidivs
sarb
insb
push
cli
fstps
sbb
es
jl
aad
stos
sub
pop
das
xor
das
lock
or
out
sbb
cltd
test
sbb
push
inc
popa
and
xor
or
fiadds
sbb
rcll
jb
mov
lret
cmc
mov
ds
std
mulps
es
mov
in
test
push
xchg
sbb
sbb
cmp
or
push
fmull
data16
dec
cmp
icebp
imul
out
js
in
pop
pop
jmp
adc
pop
aas
jnp
pushf
insb
dec
adc
mov
jmp
ds
es
pushf
loope
or
cmp
cmpsb
daa
add
repnz
jno
mov
push
xchg
rclb
or
push
insl
sbb
fiadds
xor
scas
ss
inc
xor
pop
sbb
add
dec
hlt
in
pop
sub
gs
cmp
stos
test
daa
ja
adc
loope
rcl
fwait
sub
leave
xchg
mov
jne
mov
lret
les
cmp
in
ss
mov
mov
fwait
arpl
addr16
jmp
ret
int3
mov
add
mov
xchg
adc
cmp
lahf
xchg
adc
dec
loop
xor
mov
sbb
jo
cmp
jb
popf
rcll
inc
or
sar
sub
mov
mov
das
sahf
sub
loop
rcl
cwtl
mov
sub
sarb
mov
xchg
sub
scas
adc
xchg
xchg
and
imul
nop
imull
mov
arpl
data16
das
dec
loopne
mov
ficomps
in
jnp
jmp
in
aaa
xchg
into
mov
jb
or
es
aaa
jno
dec
movsb
mov
pushf
mov
movsb
xchg
xor
dec
dec
movsl
mov
in
out
push
repz
rorl
push
es
adc
stos
or
pop
js
loope
out
xlat
add
dec
mov
and
inc
xchg
fisttpll
adc
je
orb
add
lahf
pop
dec
cmc
lahf
sub
scas
push
fcompl
dec
shr
mov
loopne
mov
ret
jecxz
mov
add
dec
ja
push
ret
ljmp
je
out
lahf
cli
loop
adc
cmp
cmpsb
cmc
cmpsl
fdiv
and
cmp
dec
enter
mov
rcrb
shrl
in
mov
loop
cwtl
push
ror
push
mov
and
loopne
push
xchg
test
inc
outsl
jmp
or
rcll
sbb
and
pop
insb
mov
jns
lods
insb
jge
pop
dec
sahf
and
jg
dec
and
sbb
dec
mov
adc
popf
bound
cmp
sbb
dec
jl
imul
xchg
rolb
sub
xor
jbe
adc
cmp
or
add
sbb
aaa
lret
dec
rcl
add
xor
test
push
pop
adc
push
dec
pusha
aas
loope
cli
iret
aas
arpl
repnz
mov
pop
cmp
mov
insb
jecxz
mov
rclb
rcll
ljmp
pop
add
cmp
mov
and
xchg
lret
dec
test
push
shr
jmp
jne
ja
les
sti
mov
repz
inc
push
add
jo
inc
cmpsb
int3
inc
cwtl
mov
jo
fmuls
sub
or
cmp
and
imul
sahf
aam
fistpl
add
inc
stos
mov
sbb
arpl
dec
stos
je
xchg
scas
cmc
je
jns
in
in
sarl
add
add
or
in
iret
inc
sbb
mov
xchg
iret
aam
mov
imul
rorb
popa
rcrb
push
jmp
les
mov
xchg
xchg
mov
dec
dec
or
lcall
jle
sub
imul
adc
mov
fnsave
frstor
pop
mov
jl
adc
add
jbe
jbe
out
fbld
xor
into
dec
sub
cmc
repnz
cmp
scas
pushf
pop
int3
sbb
sbb
mov
xchg
mov
jne
enter
and
dec
mov
sahf
lock
sub
mov
xorb
mov
ja
sbb
dec
and
mov
inc
pusha
dec
xor
push
in
ret
pop
iret
inc
adc
iret
mov
rcll
dec
dec
lret
pop
xchg
dec
xchg
mov
mov
adc
xchg
xchg
add
push
xor
hlt
xchg
and
dec
mov
ljmp
mov
loop
stc
xor
sbb
cld
movsl
sahf
fisubl
dec
and
mov
push
pusha
or
lods
cmp
scas
inc
sti
mov
jns
push
mov
mov
addl
or
fisubrl
bswap
rcrl
xor
add
cmpsl
mov
mov
dec
cld
mov
out
or
adc
int
xchg
cmpsb
dec
je
or
push
push
je
or
push
mov
add
mov
mov
and
sub
push
sbb
in
fnstsw
out
adc
scas
sbbb
xor
stos
int3
pop
inc
adc
add
aam
inc
cmpl
pushf
icebp
into
mov
dec
out
sahf
pop
insb
jbe
mov
sub
outsb
inc
add
jo
ret
mov
js
xchg
push
or
cmp
inc
sbb
sbb
add
push
sub
push
adc
aad
cs
jge
pop
sub
setp
mov
xchg
repnz
int
mov
rcll
sahf
std
mov
pop
cs
adc
roll
lea
leave
movsl
push
movsl
cmp
jl
pop
out
push
push
sbb
xor
push
arpl
dec
stos
jle
sub
lea
lock
arpl
dec
mov
sbb
das
xchg
xchg
push
xor
inc
gs
jns
jno
pop
dec
pop
sub
or
push
xchg
out
in
test
outsl
ficompl
lds
stos
shl
mov
add
push
push
or
push
vandps
daa
aaa
ja
int3
xchg
push
cmpsb
jle
push
roll
or
mov
pop
cmp
out
cld
insl
popa
pop
sub
push
in
lahf
daa
xchg
mov
test
inc
imul
repz
sbb
sub
icebp
cmp
inc
fisubs
xor
mov
inc
lods
cmp
push
or
xchg
rorl
stos
xor
lods
dec
pop
inc
jno
or
fldl
ret
popf
into
adc
jno
and
xor
inc
adc
rcrl
insl
imul
push
mov
push
cli
xor
mulb
lret
imul
shll
shl
imul
mov
mov
inc
test
mov
ficompl
lret
add
bnd
sbb
aam
pop
xchg
mov
sbb
lea
rcr
pop
sub
sbb
cmc
inc
cwtl
sahf
clc
xor
shl
push
bound
lea
test
movsb
sbb
mov
jae
push
pop
andl
xchg
sbb
ss
clc
test
adc
mov
lret
xor
movsl
xor
lret
cli
pop
dec
out
inc
or
test
hlt
lods
aas
inc
pop
sti
xor
popa
jbe
xor
or
pop
fdivrl
mov
sub
lds
sarl
ficompl
dec
loopne
ret
je
cld
sbb
cmp
insl
sti
sti
in
loop
test
popf
pextrw
mov
cmp
dec
test
sbb
mov
xchg
inc
jge
jecxz
mov
or
movq
pop
bound
aas
arpl
fiaddl
adc
popf
jmp
or
inc
jo
push
inc
pop
mov
js
or
dec
cmp
pop
adc
cwtl
push
ret
jae
pop
xchg
outsl
gs
jge
cmp
jmp
ret
sub
or
in
mov
cmp
sbb
fmuls
cmp
jb
fmulp
mov
cmp
xchg
test
add
sbb
ljmp
cmp
jecxz
mov
cmp
sub
fadds
xor
fdivr
dec
add
ljmp
mov
dec
push
sbb
rolb
pop
in
vmwrite
mov
xchg
adc
adc
cmc
adc
mov
cld
aam
push
sub
sub
or
add
mov
adc
movsl
cmp
out
cmp
popf
test
xor
ret
mov
sub
fucom
adc
lea
jb
adc
sahf
mov
xchg
mov
mov
sbb
je
mov
sub
sahf
mov
xlat
sub
loope
mov
aam
leave
xchg
xchg
jno
fidivs
out
aad
push
fstps
das
lret
movsb
imul
icebp
int3
pusha
sbb
repnz
xor
fidivrl
jmp
mov
scas
sub
rorl
xor
dec
test
push
popf
mov
cmp
lret
dec
adc
orb
add
push
pop
add
dec
cmp
mov
xor
lods
test
imul
lret
xor
icebp
ror
sub
fdivr
mov
jae
pop
mov
mov
sbb
mov
dec
add
sub
imul
mov
xor
or
push
mov
int
push
addr16
rcr
xchg
shrb
sub
sbb
inc
dec
push
push
repnz
dec
inc
loope
cmp
dec
mov
mov
push
test
mov
jae
inc
insb
dec
daa
lods
pop
jne
cmp
dec
or
lcall
mov
imul
outsl
jae
clc
cld
or
adc
xor
mov
int3
xor
ficoms
fists
sarl
push
jmp
cltd
pop
jnp
sub
cmpsb
or
xchg
sahf
xchg
cmp
out
in
push
or
cmp
call
inc
or
int3
xor
sarb
lods
mov
jmp
xor
sar
jecxz
xchg
or
mov
roll
sub
sbb
gs
xor
ret
xor
jecxz
shll
ss
xor
and
js
loop
popa
cwtl
xor
lret
bound
daa
out
mov
pop
mul
dec
lret
pop
push
ror
mov
in
sbb
xchg
mov
or
jb
mov
les
xchg
jb
faddl
cltd
jp
push
jo
dec
dec
jbe
ficoml
int
xor
jecxz
std
cmp
sbb
fmulp
fwait
mov
jnp
jno
in
dec
popa
cli
loopne
inc
dec
add
lret
fwait
inc
in
stos
outsb
adc
sbb
xor
sub
fsubrl
cmpsb
popf
sahf
nop
jnp
out
repnz
imul
aaa
mov
lea
mov
or
inc
out
pusha
hlt
lock
nop
cli
mov
mov
rolb
aaa
push
fsts
inc
and
loope
xor
fimull
jecxz
dec
loopne
arpl
mov
fs
pop
push
push
jp
pop
add
jne
sub
mov
add
jmp
cwtl
jg
xchg
in
xchg
inc
insb
xchg
push
adc
pop
xchg
gs
mov
leave
in
xchg
jns
inc
sbb
inc
pop
es
push
imul
loop
repz
jp
push
mov
aad
add
sub
pop
inc
popf
daa
pop
cmpsb
mov
aad
adc
fld1
cmp
hlt
js
dec
add
imull
test
jmp
lcall
cmpsb
in
pushf
repz
adc
pop
push
push
int3
fidivs
hlt
push
mov
xchg
mov
xor
fidivl
in
mov
sbb
lds
sbb
jnp
sbb
or
imul
nop
fsubrs
push
je
mov
inc
pop
and
dec
ja
mov
jbe
xor
mov
insb
dec
cmp
or
pop
jno
shrl
or
mov
ds
shrb
mov
push
add
aaa
push
mov
sub
mov
or
sub
mov
outsb
test
mov
inc
test
dec
int3
pop
jno
ffree
lret
mov
pop
jge
leave
movsb
mov
push
rcrb
stos
or
sbb
push
cwtl
dec
adc
les
movsl
add
sbb
int3
popa
push
adc
les
jns
jl
rcll
cmp
loopne
mov
mov
mov
add
adc
add
in
lds
add
pop
inc
cltd
or
sub
jle
add
loopne
xor
clc
jb
add
xor
lock
ja
add
pop
sub
out
data16
mov
cltd
xor
lret
in
xor
sbb
and
repz
xchg
pusha
xor
pusha
cltd
sbb
adc
mov
or
pushf
adc
lret
fnstsw
sbb
aam
push
loopne
cmpb
sub
out
pop
dec
outsb
mov
adc
shll
rcr
adc
sbb
pop
mov
aaa
adc
adc
outsb
xchg
push
cli
rol
mov
gs
nop
cmp
xchg
movsl
sbb
pushf
scas
incl
int3
xchg
push
repz
les
inc
sbb
pop
loope
and
xchg
mov
pop
sahf
outsl
scas
add
pop
push
mov
mov
jp
leave
sub
fmuls
leave
cmp
lds
jns
or
inc
pop
fbld
fmull
dec
stc
jp
sub
movsb
fidivs
add
sbb
cmc
mov
and
mov
push
shll
jle
ret
sar
mov
test
lahf
xchg
push
xor
rorl
sub
push
xlat
mov
xor
and
cmpsb
loope
lods
pop
int
ret
movsb
cmp
ret
jns
xor
xlat
pop
rcll
mov
sbb
jmp
das
cmpsb
sbb
aam
pop
pop
add
adc
cmpsl
fst
cli
cmpb
popa
sub
add
cmp
xchg
pop
and
nop
jo
jbe
mov
adc
adcb
repz
rep
jmp
test
cmc
shl
loopne
popf
test
mov
daa
dec
cmp
fisubrl
aam
dec
pop
mov
xchg
mov
xchg
mov
cmp
bound
and
add
es
lods
das
mov
add
dec
mov
and
data16
xchg
jo
pop
pop
dec
icebp
pop
xchg
mov
dec
jae
in
or
rcll
mov
pop
imul
push
outsb
insb
mov
mov
call
lahf
je
scas
pop
cmc
mov
fwait
or
jb
adc
push
sub
jmp
mov
repz
outsb
nop
cmp
sub
cwtl
shl
xchg
rcll
mov
cmp
lcall
or
sbb
mov
pop
and
xor
inc
std
fldcw
cwtl
adc
int
push
mov
cmp
pop
add
or
xor
adc
or
mov
mov
adc
jae
out
push
xor
adc
adc
fcoml
add
cs
dec
dec
cmpsb
rcrl
lods
ss
add
cwtl
fwait
mov
xchg
mulb
stc
adcl
popl
repz
test
dec
dec
je
dec
sbb
add
push
lret
out
dec
aaa
push
jmp
or
imul
and
lret
or
movsb
dec
stc
or
xor
int
and
ss
push
shll
shlb
inc
hlt
mov
sbb
adc
fnstenv
jae
lahf
push
add
cmc
pop
int
jmp
pop
mov
inc
mov
insb
cli
mov
inc
jne
add
in
test
cmp
jecxz
enter
daa
test
movsl
inc
mov
inc
sbb
inc
mov
push
lods
sti
cli
lods
insl
mov
dec
cmp
bnd
dec
dec
cltd
push
mov
addb
orb
out
dec
mov
fsubl
in
jg
test
iret
std
inc
add
ds
fwait
xorb
mov
sub
pop
mov
sbb
repnz
stc
call
xor
addl
xchg
dec
test
pop
jg
stos
cmp
mov
out
lods
shlb
in
mov
andb
and
stos
repz
orl
or
xor
add
mov
movsb
push
pushf
dec
in
push
lcall
out
mov
sahf
sti
cmp
jb
or
fsubrl
mov
scas
stc
in
cs
fucomp
jecxz
adc
test
mov
fildl
sbb
xor
adcb
test
jge
std
into
inc
decl
cmp
mov
sahf
xor
insl
out
movsl
mov
mov
sub
repz
dec
xor
das
pop
xchg
out
jle
pop
out
xchg
and
scas
add
add
mov
mov
pop
mov
fcmovnbe
sub
lret
xor
ss
and
sub
mov
arpl
popf
enter
inc
xor
sbb
jb
push
dec
sub
sbb
movsl
xchg
jge
mov
loopne
sbb
xor
inc
outsb
inc
pop
and
adc
mov
and
jge
cmpsl
adc
lret
xchg
mov
mov
jp
pop
out
std
pop
inc
push
call
sub
inc
sarb
mov
cmp
cmpsb
push
sti
repnz
lea
ficompl
and
mov
shl
lods
jno
or
fcom
and
scas
rcrl
push
ret
dec
xchg
fdivl
out
jp
inc
mov
lcall
or
jns
mov
out
xor
rcrl
rcrb
stos
jge
mov
cmpb
stos
inc
mov
dec
inc
insb
mov
scas
into
pop
add
xchg
cmp
lods
sub
cmpsl
or
cs
xchg
xchg
adc
pop
aad
jge
pop
outsl
ret
dec
push
insl
sbb
xchg
push
jle
mov
das
adc
enter
xchg
xlat
inc
inc
enter
fwait
mov
loope
mov
popa
sub
sbb
mov
adc
jo
sub
mov
jle
mov
xlat
ljmp
cmp
pop
cmpl
fdivp
loop
out
js
cwtl
sbb
sbb
fldcw
je
pop
cmc
sbb
push
push
jb
iret
cmpsl
fcmovnb
add
dec
rcrl
loope
push
push
ficoml
inc
or
ja
test
cltd
leave
icebp
popf
fisttps
dec
data16
ret
arpl
pop
push
mov
out
sbb
cmp
or
jmp
xchg
aam
adc
push
cwtl
call
out
mov
shrb
lods
push
aas
int
inc
jle
rorl
mov
jno
and
adc
jnp
inc
les
inc
sbb
inc
sbb
decb
ljmp
push
xor
in
inc
repz
jg
pop
sti
jae
mov
ss
lea
mov
std
repnz
sbb
pusha
pop
fstpt
mov
not
or
mov
fs
movsb
pop
lahf
add
and
fistpl
sbb
sarb
sbb
and
sub
pop
xor
sbb
loop
cmpsl
iret
test
mov
movsb
cmp
pusha
cmp
mov
pushf
out
add
popf
fidivrs
or
cmp
stos
lahf
adc
fsub
lahf
in
mov
adc
dec
sbb
stc
push
mov
adc
xor
mov
pop
insb
xchg
incl
dec
fsubr
mov
mov
add
mov
scas
mov
jge
mov
cli
cmp
dec
sbb
xor
out
fwait
cmpsl
movsb
not
sub
add
xchg
mov
jo
fsts
andb
pushf
pop
adc
mov
or
sbb
decl
cli
andb
add
inc
xlat
cli
add
lea
int3
push
pop
pop
lahf
xchg
xor
push
dec
jne
pusha
scas
or
push
mov
xorl
pop
clc
jne
and
mov
aam
add
stc
or
add
js
ss
mov
je
cwtl
popf
xor
cmp
pop
adc
sbb
push
lcall
mov
mov
push
in
insb
xchg
stos
fcomps
xor
sub
insl
test
pop
pop
lahf
add
sahf
out
mov
pop
in
dec
mov
ret
divb
push
adc
pusha
test
push
test
push
addr16
lret
popf
popa
aad
mov
test
or
mov
or
aaa
xchg
add
dec
or
pop
je
shll
clc
into
lcall
push
inc
mov
add
sti
adcl
mov
xchg
cmp
popa
sub
inc
jmp
test
xlat
jns
cmc
cs
cs
sub
push
cmp
ss
mov
xchg
adc
mov
adc
or
das
mov
cmp
add
xchg
push
fimuls
dec
jle
push
sbb
loop
sub
enter
mov
dec
jg
pushf
and
dec
test
sub
sbb
faddp
adc
xchg
pop
sti
jecxz
std
ds
push
std
clc
stos
or
mov
pusha
fisubrl
out
hlt
lock
add
rolb
fstpt
mov
scas
add
testb
icebp
lcall
pop
inc
mov
subb
pop
push
lock
push
sbb
mov
test
loopne
arpl
sub
bound
and
out
sub
fildl
push
or
xor
insl
pop
test
lds
loopne
das
imul
jnp
std
xchg
push
test
push
adc
inc
mov
push
lret
push
test
adc
cli
mov
mov
shll
ljmp
lds
sub
and
repnz
out
mov
sbb
or
mov
test
subb
loopne
cmp
dec
adc
xor
cmpsb
push
lods
and
or
xchg
add
les
ss
hlt
cmpb
andb
dec
ror
stc
lret
shll
cwtl
insl
cmp
cmpsb
sbb
loope
shrb
sub
inc
lds
lds
int
ljmp
mov
sbb
mov
jecxz
std
cld
mov
les
inc
xchg
jmp
fistl
aas
inc
fwait
out
clts
je
inc
jmp
cli
pop
xchg
out
jle
inc
fldcw
mov
loopne
popf
xchg
adc
adc
adc
cli
jb
mov
cltd
cmp
scas
sbb
push
loopne
test
cmp
dec
inc
or
fwait
jl
mov
or
xor
push
xchg
inc
add
pop
jbe
mov
jae
adc
insb
push
jns
xchg
sti
pop
fisubs
mov
ficoml
jge
lret
gs
adcb
or
pop
fs
mov
aaa
dec
movsb
sbb
adc
push
ds
mov
test
cli
jb
outsl
nop
or
push
push
lahf
jp
rorl
and
bound
mov
or
pop
fld
aas
sub
in
or
sbb
std
mov
imul
adc
xchg
push
fistpll
inc
push
pop
mov
adc
stos
jns
adc
push
mov
pop
movsl
push
xchg
jmp
jne
scas
popl
pop
pop
add
das
test
movsb
jmp
pop
add
jno
xlat
push
clc
add
into
lret
inc
sbb
ret
cmp
add
sub
mov
rclb
cli
std
fwait
and
mov
jp
sarb
jl
lods
or
sub
std
imul
adc
into
test
inc
jge
inc
sbb
sbb
xchg
aas
rcll
or
lock
or
cmp
or
sbb
mov
push
push
xchg
mov
jmp
scas
into
repnz
outsl
pop
roll
dec
cmpsl
mov
adc
rcrl
inc
mov
add
pop
inc
inc
ret
xchg
mov
in
sub
mov
out
mov
sub
icebp
mov
mov
xor
out
xor
cld
popf
xchg
sub
inc
cmpsb
clc
mov
xor
pushf
jg
add
pushf
add
fwait
in
fiaddl
jne
xchg
mov
pop
pop
pop
out
pop
cld
push
in
sbb
pop
add
mov
mov
mov
or
out
mov
ret
out
and
jge
mov
jnp
and
loop
adcl
push
pop
xchg
movsl
cmp
sti
push
pop
ja
imul
je
push
pop
nop
xlat
inc
mov
sbb
dec
mov
pop
loopne
cltd
jle
pushf
push
xchg
mov
pop
movsb
into
mov
inc
push
jno
add
rcrb
insb
sbb
or
ja
add
adc
add
loope
adc
jae
push
mov
xchg
stos
imul
pop
push
sbb
adc
mov
mov
sub
pop
push
fldenv
arpl
and
shr
cmp
sti
xor
loopne
lret
cltd
mov
add
test
loopne
ss
mov
push
mov
popf
adc
adc
lcall
psrad
add
add
loope
in
dec
outsb
sub
ljmp
xor
inc
pop
adcl
std
and
sar
jmp
daa
adc
aam
fxch
out
shrl
dec
jb
enter
cli
testb
jmp
xor
mov
aas
add
xchg
ja
popf
loopne
fcoml
inc
addl
sbb
jecxz
out
inc
cmp
imul
aam
inc
pop
mov
xchg
sbb
and
or
mov
inc
pop
push
repz
inc
pop
push
inc
xchg
mov
cmpsb
aaa
jle
pop
leave
jnp
xchg
xchg
inc
xchg
sbb
xor
sub
roll
dec
aad
mov
es
notb
inc
sbb
and
sbb
fists
call
adcl
push
jae
in
mov
mov
imul
sbb
xchg
add
dec
mov
push
mov
mov
mov
xor
fisttps
xor
xchg
push
push
mov
adc
push
push
mov
insl
adcb
jne
lock
shl
fcmovne
lods
or
inc
adc
mov
jecxz
pop
pop
xor
mov
jl
push
mov
popa
pop
pusha
xor
cmp
mov
inc
lret
and
adc
mov
imul
lcall
lods
mov
jno
dec
popa
add
pop
push
pop
scas
and
in
int3
sub
icebp
mov
push
push
and
clc
jns
xchg
cmpsl
es
imul
jns
pusha
inc
mov
lds
and
test
push
cmpsb
into
adc
dec
fnstenv
xchg
add
inc
xchg
xor
enter
xchg
mov
inc
xlat
mov
push
test
jne
mov
call
or
pop
adc
adcl
jecxz
pop
cmp
jecxz
mov
scas
or
cld
mov
movb
inc
pop
out
repz
ja
imul
into
out
adc
in
jmp
push
add
cmpsb
mov
pop
sbb
dec
mov
sbb
call
popf
add
inc
push
ja
hlt
lods
shlb
call
icebp
pop
sub
in
xchg
sti
xchg
dec
or
add
pop
adcb
jns
push
adc
gs
pop
pop
lret
inc
icebp
sub
popf
in
push
test
xchg
and
pop
cltd
sub
imul
jl
add
hlt
ret
dec
fwait
ss
ror
cld
push
add
push
inc
sbb
mov
out
cltd
sub
xchg
test
jne
mov
aas
leave
movsl
aas
jne
or
mov
xor
mov
or
push
inc
ljmp
leave
ret
repnz
jno
cs
dec
and
andl
or
lret
and
pop
inc
jno
lock
pop
mov
sub
and
enter
and
push
pop
stos
or
jns
sbb
cs
jecxz
pop
push
xor
loopne
xchg
mov
shlb
loope
xchg
xor
or
shll
xor
lds
jmp
sub
add
outsb
in
mov
and
data16
pop
into
push
out
aaa
and
xor
movsl
add
add
clc
das
mov
orb
cmp
popf
sti
adc
js
andb
jns
add
inc
and
jmp
into
loop
xor
adc
arpl
add
mov
mov
inc
dec
or
fwait
jmp
fcomps
cs
dec
inc
or
repz
scas
or
je
lcall
sbb
pop
sbb
mov
cli
mov
or
insl
push
jnp
mov
mov
or
or
imul
push
cmp
jns
lahf
mov
add
add
push
inc
je
sbb
adc
popa
inc
mov
sbb
mov
pop
insb
jmp
xor
cwtl
xor
xlat
xchg
das
mov
or
pop
cmovs
push
mov
mov
es
mov
add
pushf
push
push
test
mov
stos
or
lea
in
mov
xchg
aam
ss
add
xchg
lcall
int3
and
shrb
xor
shrb
inc
sbb
cs
add
cwtl
lahf
iret
sub
movsl
mov
mov
xor
andl
mov
inc
rcrw
pop
mov
stos
ret
iret
cmp
sbb
outsl
dec
push
fiadds
push
dec
push
and
add
rcr
xor
fldenv
movsl
sbb
sbb
iret
cmpsl
pop
sub
mov
ret
adc
inc
loopne
dec
pushf
pop
push
fs
pop
jno
add
xor
adc
dec
in
mov
sub
push
sub
cmp
sub
aam
cmp
push
cld
sub
shl
xchg
cli
fadd
xor
sbb
mov
add
aas
inc
lahf
push
mov
mov
iret
clc
fucomi
xchg
mov
sbb
rol
jl
aad
push
cmc
insb
popa
mov
dec
pslld
mov
inc
jg
adc
lea
rorb
mov
addr16
lahf
lret
xor
cmp
pop
popa
loope
xchg
dec
cli
pop
push
int3
clc
pop
out
dec
mov
scas
cs
jge
and
ffreep
fcomps
mov
or
test
jmp
std
mov
and
sti
imul
jb
pop
jge
mov
fnstcw
inc
out
mov
inc
pop
cld
out
gs
hlt
pop
add
and
dec
data16
add
and
rol
adc
dec
test
sbb
xchg
stos
imul
jmp
pop
inc
or
fstpl
mov
adc
fwait
xor
mov
push
inc
imul
sub
test
mov
loope
sbb
jle
and
mov
call
les
in
push
sbb
test
cmp
popf
jo
ret
pop
es
sub
adc
jne
inc
xor
xor
loop
out
imul
xor
push
fidivrs
add
sub
imul
je
xchg
ljmp
mov
aad
daa
add
imul
inc
leave
bnd
les
mov
sbb
sbb
adc
add
filds
xchg
inc
repnz
adc
and
xchg
inc
dec
outsl
add
or
aam
test
sub
loopne
pushf
dec
jnp
nop
sub
inc
test
gs
xor
xchg
orl
mov
cwtl
mov
insb
cmp
fstpt
pop
ljmp
push
ja
dec
cltd
jmp
cld
int3
das
sti
and
test
in
in
sbbl
and
bound
pop
push
sbbb
adc
ds
leave
add
sub
push
pusha
adc
or
add
sti
cmp
repz
jno
jne
shrl
xor
arpl
es
pop
pop
sub
xlat
pusha
insb
ror
ss
cmc
pop
jbe
pop
mov
mov
push
dec
stos
rol
daa
or
cmp
pop
lcall
int3
xchg
lret
testl
add
cmp
aaa
ljmp
cmc
aad
imul
out
out
dec
push
xchg
lcall
mov
dec
dec
dec
cmc
loope
or
cmp
jmp
iret
xchg
xchg
in
xor
sub
jl
jne
loop
jp
mov
mov
out
or
inc
push
pop
repz
rorb
call
mov
pop
out
push
xor
or
dec
adc
sub
mov
dec
ficompl
enter
mov
cmp
xchg
test
imul
test
test
lret
pop
negb
out
and
xchg
jo
lods
stos
pop
lea
int3
scas
imul
push
int3
xor
cmpsl
int3
pop
imul
xor
inc
jno
mov
push
jb,pn
out
popa
pop
andl
ljmp
shlb
push
sub
mov
shl
xchg
lods
xchg
xchg
clc
dec
pop
and
jge
and
pop
dec
cltd
aas
jmp
xchg
jl
lods
ds
shl
out
ffree
jbe
push
mov
pop
je
jge
push
shl
lahf
das
fstpt
loop
cli
sub
mov
sar
cli
insl
popa
pusha
stc
or
leave
inc
test
inc
pop
pushf
xor
push
mov
jg
jp
jb
out
add
jp
jge
gs
ja
push
fwait
stos
jae
push
mov
mov
xchg
ds
sub
lods
push
stos
and
mov
call
addr16
negb
jp
test
popf
lds
pop
and
je
lds
pop
push
push
push
pop
stos
scas
arpl
das
inc
dec
and
out
aas
or
sti
push
add
scas
dec
mov
inc
aad
push
rorb
sarb
push
pusha
cmpb
dec
lods
or
adc
ljmp
jge
sbb
cmp
shrl
sub
adc
adc
imul
inc
sbb
inc
fsubrs
mov
test
mov
dec
ficoms
push
outsb
and
je
push
cmp
cmpsb
popa
aad
into
adc
pop
jb
sbb
repz
cmp
call
inc
aad
cmpsb
xchg
dec
add
mov
lret
or
ss
push
prefetchnta
sub
mov
mov
xchg
addr16
sbb
inc
cmpsb
fisubrs
add
lods
or
xchg
jecxz
inc
xor
adc
popf
mov
rolb
bound
pop
inc
jbe
pop
add
jge
int3
mov
movsb
sbb
pop
fld
loopne
test
aad
xor
sbb
mov
or
pusha
add
add
push
sbb
rorb
jbe
in
je
sub
inc
add
dec
mov
filds
popf
in
insl
test
xorl
xchg
pop
push
mov
lock
sub
icebp
adc
ror
xchg
add
add
xchg
jg
add
cwtl
jecxz
mov
inc
mov
les
push
and
mov
xchg
test
sbb
dec
mov
and
push
xor
mov
ret
lea
outsb
mov
gs
stos
and
mov
dec
ret
js
jae
pop
sub
push
mov
push
test
stos
mov
pop
shlb
inc
add
xor
mov
mov
rcrl
test
dec
movsl
xchg
dec
bound
cmc
add
mov
xor
fwait
ss
add
test
add
out
test
sbb
outsl
pop
mov
or
dec
scas
clc
outsl
add
jecxz
xchg
movb
sub
not
jne
mov
mov
shr
cltd
jns
lahf
daa
pop
or
loope
xor
adc
test
and
xor
arpl
push
aam
pushl
movsb
ret
scas
pushf
jge
pusha
jmp
push
sub
adc
sbb
dec
push
jae
or
lds
xor
inc
sar
hlt
cld
iret
test
shll
sbb
sub
mov
jge
int
ffreep
push
ss
push
dec
mov
rcrb
nop
mulb
repnz
pop
addb
lds
cli
and
aas
icebp
das
repz
int3
daa
je
or
push
fwait
cli
mov
fwait
lret
xor
mov
loope
xchg
mov
jne
test
sub
pop
jne
aam
outsl
xor
arpl
pop
xor
test
adc
mov
sub
jmp
or
leave
mov
cmp
int3
cmp
call
lods
jp
incb
loop
mov
or
jge
sbb
stos
xchg
daa
scas
mov
cmpsb
mov
dec
cmp
xor
and
adc
mov
jecxz
notb
xchg
jmp
jne
xchg
bound
mov
movl
loopne
iret
mov
xchg
xchg
jmp
bound
mov
mov
in
xor
jb
lcall
mov
ss
cmpsb
add
insb
jns
mov
push
scas
stos
scas
iret
xchg
mov
push
sbb
jge
push
adc
insl
mov
insl
mov
cltd
mov
sbb
lods
inc
aam
xor
jb
xchg
lds
push
pop
cmpsb
daa
pop
pushl
ret
inc
mov
mov
sbb
xor
fwait
outsb
pop
jo
add
in
in
faddp
decb
cmp
pop
jp
les
xlat
jne
xchg
xchg
and
sbb
lret
dec
fcomi
push
aam
clc
lds
scas
xchg
jmp
push
dec
mov
mov
jmp
in
push
je
mov
or
xor
pop
mov
fcomi
xlat
stos
xchg
mov
pop
test
movsb
add
mov
repz
fwait
push
pop
mov
jle
push
stos
mov
loop
jecxz
arpl
mov
test
dec
adc
mov
jmp
xchg
ljmp
push
mov
andb
bound
jg
inc
push
push
adc
cmp
lea
mov
mov
xlat
and
xchg
loope
lret
sbb
sub
enter
inc
mov
loop
into
jb
push
fsin
jno
mov
sti
out
adc
fcmovb
sbb
or
cmp
xchg
inc
ret
xor
jg
add
aas
xor
mov
fwait
push
inc
and
imul
adc
faddl
cmovp
icebp
mov
int
in
mov
mov
mov
mov
sub
mov
pushf
daa
xlat
in
or
iret
cmp
roll
sbb
pop
mov
jo
jmp
lcall
call
les
cmp
xchg
inc
iret
sbb
inc
aaa
adc
fidivs
cli
mov
cmp
jg
inc
jns
xchg
sub
mov
gs
jne
jmp
fcmovu
sti
jae
out
mov
lret
cmp
pop
cwtl
xor
or
in
ja
jge
sub
data16
xchg
test
jmp
movsb
jns
test
xor
dec
fwait
test
lods
xchg
push
subl
shrl
fs
mov
sub
mov
ret
xor
xor
outsl
xlat
jno
mov
mov
or
shrb
ror
cmp
mov
ja
push
les
test
sbb
cmpb
push
jne
ret
xorb
cwtl
push
mov
mov
fs
dec
sbb
bswap
jne
lret
test
shlb
add
lcall
pop
negl
inc
xor
insb
cwtl
add
ss
repnz
stos
into
push
mov
mov
mov
mov
xchg
pushf
jbe
icebp
bound
idivl
call
pushf
pop
cmp
arpl
sbb
ja
jmp
mov
dec
sti
cmpb
jb
stos
negl
sub
jg
stos
xchg
or
jnp
jne
jl
scas
orb
data16
mov
mov
jge
rcll
loop
int3
ljmp
dec
into
leave
sti
push
hlt
push
aad
pusha
pushf
pusha
daa
sbb
fs
xchg
scas
jmp
and
mov
and
scas
scas
mov
loop
mov
mov
mov
mov
out
dec
scas
sub
pop
popa
add
mov
pop
push
fsub
sbb
push
push
push
jp
pop
roll
inc
push
jns
out
stc
mov
gs
xor
and
push
mov
xchg
fimull
mov
dec
je
lds
pop
jg
and
lea
pop
dec
lahf
adc
mov
sub
addb
xorl
ret
pop
push
dec
les
sbb
adc
add
sbb
int3
add
cmp
xor
add
mov
popf
pop
xor
sbb
fwait
push
aaa
pop
gs
push
mov
ja
jno
xchg
push
mov
in
push
xchg
or
mov
out
ss
sbb
add
mov
jmp
cmc
shl
push
pushf
inc
adc
shrb
jbe
lods
popf
roll
adc
rolb
shr
and
fldt
fs
jno
flds
loop
aas
jmp
fimull
sbb
xorl
int3
jle
and
imul
xchg
jbe
bound
insl
bnd
ret
orl
xchg
sub
data16
xchg
stc
pop
mov
pop
jmp
pop
bound
and
shrb
sarl
adc
rclb
fldt
sbb
stos
fcompl
daa
aam
sub
inc
movsb
pop
push
pusha
cmp
ds
pushf
adcl
pop
and
mov
imulb
ss
hlt
sbb
add
adc
pop
xor
mov
mov
dec
aas
daa
outsb
pop
jbe
pop
add
hlt
and
scas
pop
xchg
aam
xlat
repz
fcmovnbe
mov
sub
xchg
pop
add
mov
sbb
stos
imul
or
cs
je
ret
pop
or
mov
add
pop
push
shl
push
cmp
xchg
scas
push
mov
pop
scas
dec
or
jno
jge
imul
dec
out
faddl
scas
add
push
scas
jle
lods
dec
pop
insb
xor
rorl
jno
imul
mov
xchg
sahf
ljmp
ret
inc
sub
nop
sbb
pop
jne
sbb
fs
adc
daa
sbb
push
push
insl
icebp
cmp
dec
xor
sbb
adc
scas
dec
cmc
and
inc
pop
es
or
rclb
mov
in
xchg
dec
les
lea
adc
jnp
sbb
mov
scas
pop
mov
test
and
testb
imul
dec
jbe
jmp
and
test
add
roll
add
das
cld
adc
sti
mov
ljmp
or
daa
add
lds
mov
mov
rep
test
sti
add
xchg
cmp
rol
mov
pusha
aam
mul
fcoml
jne
mov
pop
shrl
mov
fadds
repz
and
leave
sbb
hlt
xchg
iret
mov
push
and
mov
jmp
das
pop
xchg
lret
mov
push
add
jb
das
xchg
cli
sbb
jl
outsb
aad
sahf
jmp
dec
mov
push
push
push
mov
dec
push
xor
out
xchg
dec
adc
lds
add
imul
sarl
rcrb
mov
shlb
repz
mov
pop
and
popa
test
addb
ja
out
dec
lods
inc
subb
push
and
add
ret
or
push
ljmp
sahf
lea
mov
mov
xor
pop
mov
push
clc
ss
addr16
or
xor
and
rclb
gs
sbb
pop
sbb
xorb
sbb
in
inc
scas
dec
mov
lods
adc
ret
or
inc
mov
out
pop
xchg
fiadds
test
mov
push
pop
xor
fcompl
bound
dec
cmc
loopne
mov
dec
adcl
xor
iret
sbb
xchg
scas
cmpsl
cmpsl
shll
roll
xchg
xchg
in
sub
push
sub
jnp
roll
and
add
cmpsb
fs
sub
sbb
add
dec
lods
das
sub
xchg
dec
xor
xor
mov
mov
adc
mov
js
adc
jnp
push
fisttpl
dec
or
out
fwait
inc
sbb
push
add
add
dec
dec
dec
lret
sub
pop
or
sub
pushf
insb
stos
bound
call
push
clc
push
aas
jp
test
or
sbb
mov
xlat
cmpsb
jbe
roll
jg
and
adc
add
arpl
sbb
mov
mov
stos
push
fadds
cmp
inc
ja
mov
in
mov
orl
fdiv
call
xor
and
sbb
js
and
mov
xchg
push
icebp
sbb
sahf
jp
bound
stc
das
lret
cmp
mov
jmp
ret
mov
aaa
ljmp
mov
lcall
pop
and
lock
in
xor
xchg
jbe
arpl
daa
mov
scas
notl
add
imul
inc
xor
call
xor
adc
sub
mov
stos
mov
mov
xor
movsb
stos
into
mov
insl
and
cmp
jle
mov
sub
imul
sub
jecxz
in
test
pop
int
mov
in
subl
rclb
jns
in
cltd
xor
inc
in
xor
int3
xlat
jns
repz
add
jle
es
je
xchg
mov
mov
mov
or
fs
xor
repnz
gs
int3
and
push
and
lea
mov
sbb
cs
xor
cmc
adc
adc
jge
lret
subb
filds
in
sti
jp,pn
inc
inc
pushf
sbb
aas
pusha
jle
mov
sbb
das
push
mov
push
inc
mov
out
xchg
jmp
push
inc
mov
mov
cmp
repnz
adc
adc
insl
imul
loopne
inc
push
movsb
mov
pusha
mov
movsb
mulb
jne
adc
push
repz
lahf
push
mov
jbe
das
cld
fwait
pcmpeqb
into
dec
cmc
adc
dec
inc
jne
adc
cmpsb
and
cmp
lahf
mov
xor
ljmp
shrb
mov
mov
lcall
das
or
adc
fmuls
sbb
lahf
dec
sub
outsb
push
out
pop
int
bound
int3
push
sbb
pop
cs
ret
loop
or
push
sbb
cmp
call
mov
jmp
cld
dec
cmc
int3
cmp
and
sub
dec
shlb
xchg
xchg
add
jno
sbb
stos
popa
sub
in
cs
push
xchg
fwait
mov
movsl
loop
push
dec
mov
xchg
mov
mov
push
cmp
clc
test
and
shll
pop
push
push
in
mov
test
pop
dec
shl
faddp
push
dec
jne
push
jp
xchg
sarb
data16
pop
inc
jb
sub
xchg
fwait
adc
xchg
ds
push
or
jo
add
push
jo
adc
push
add
les
xchg
mov
adc
call
movsl
mov
popf
fisubrl
add
xchg
movsb
sbb
add
pop
sub
popa
pop
inc
or
mov
or
add
ffreep
iret
jmp
cs
dec
das
xchg
je
xchg
pop
aad
jmp
out
push
push
or
sbb
popa
andl
fcoms
xchg
xchg
pop
xchg
adc
test
popa
out
cmp
push
mov
push
scas
adc
pop
ljmp
je
dec
pop
mov
and
adc
sub
xlat
jns
xchg
lds
mov
nop
and
mov
scas
sub
or
mov
mov
mov
adc
and
mov
repnz
push
push
adc
or
cwtl
push
and
mov
jmp
sub
call
add
pop
sub
or
jge
cmpb
push
unpcklps
enter
shl
add
mov
cwtl
xor
and
popa
adcb
cmp
dec
mov
adc
leave
jle
movsl
jmp
hlt
xchg
or
cmp
cli
jmp
cwtl
lea
in
inc
rdtsc
inc
cld
pusha
ja
stc
jmp
xchg
inc
add
xlat
jle
sub
xor
or
ret
bound
sbb
xor
mov
icebp
jmp
subb
fldl
shrb
xchg
adcb
or
fimuls
and
push
dec
inc
adc
arpl
push
rol
int
scas
aam
dec
popl
ret
addl
repnz
int3
mov
shl
aam
into
inc
int
ror
lds
cltd
icebp
cmp
daa
clc
and
mov
mov
lock
stc
sub
and
jmp
out
jecxz
jmp
fisttps
daa
jb
pop
cmp
or
mov
ds
cmp
mov
add
pop
add
inc
sub
rol
pop
sbb
add
add
and
push
cltd
mov
xor
andb
ret
mov
lock
xchg
lea
sahf
adc
mov
lret
bound
push
dec
dec
xchg
and
and
and
push
inc
ret
push
and
fcmove
es
add
sub
dec
add
mov
ljmp
push
or
jns
pusha
lods
cmp
shrl
pusha
xchg
outsb
arpl
mov
mov
mov
std
sbb
or
nop
testl
dec
sub
fs
sub
fs
xor
arpl
daa
inc
add
in
add
aam
sbb
cmp
inc
adc
dec
xor
adc
fnstcw
pop
add
pusha
nop
out
lods
cltd
mov
movsb
dec
adc
and
mov
push
out
xor
mov
inc
ds
fadds
add
sbb
add
push
inc
and
push
inc
inc
bound
push
push
and
push
pop
inc
and
or
icebp
cwtl
loopne
add
repz
pop
sbb
rdtsc
sub
sahf
xor
sbb
mov
mov
mov
xor
ja
add
cmpsb
xor
test
mov
cmpsb
fsubs
xchg
sub
cmpsl
push
xchg
in
pop
stc
sahf
subl
inc
push
xor
cmp
sbb
pminub
pusha
cmp
push
orb
xlat
pop
push
and
jmp
fsubrl
lods
mov
adc
jnp
adc
roll
stos
inc
jo
int3
inc
push
sbb
dec
fnstcw
cli
movd
lods
cmp
mov
stos
or
int
push
dec
adc
and
inc
adc
pushf
xchg
adc
xchg
dec
mov
cmpsb
enter
or
ret
mov
fwait
test
cmp
and
add
add
jp
push
mov
sub
std
out
xor
lcall
mov
lods
out
addb
sub
pop
aaa
inc
mov
adc
repnz
add
lds
hlt
imul
ret
arpl
mov
rolb
jg
push
clc
out
bswap
in
xchg
push
xor
lods
test
cmpl
sub
nop
les
imul
sbb
lahf
xor
ficomps
add
repnz
movsl
inc
scas
mov
sbb
push
popa
bnd
cmp
adc
in
ja
or
sub
daa
fists
addr16
pop
data16
insb
xchg
inc
mov
mov
out
push
mov
test
cmpb
ds
in
test
popa
jge,pt
in
and
outsl
mov
es
sbb
mov
pop
xchg
sub
mov
push
push
push
hlt
inc
and
ds
pusha
xchg
push
pop
sbbb
push
and
add
rclb
fldt
je
mov
pop
in
gs
xor
lret
sub
jmp
sti
sub
push
xor
xor
or
dec
or
lcall
aaa
push
mov
dec
scas
xchg
scas
adc
nop
and
leave
xchg
lods
sbb
and
das
inc
push
cltd
mov
cltd
jg
leave
cli
push
mov
mov
xor
xchg
mov
fs
jp
mov
jle
loopne
add
aaa
ss
mov
test
je
jge
in
js
movsl
mov
mov
test
or
sti
cmpsl
fsubrl
xchg
add
mov
pop
sahf
push
push
adc
fldenv
loopne
sbbl
pop
popf
xor
fisubs
out
and
shl
sbbb
inc
das
mov
aam
stos
and
pmuludq
pop
cmp
lea
lcall
fwait
push
test
sub
ret
mov
popa
jb
add
add
enter
jmp
call
iret
bound
jnp
pop
sbb
cmc
or
jle
ret
jge
or
scas
or
aas
pop
inc
lret
mov
dec
xor
or
cmp
inc
fmull
mov
rcr
mov
mov
icebp
mov
sbb
dec
sbb
cmpb
sub
push
inc
nop
inc
scas
jecxz
or
and
test
push
xchg
add
add
fildll
insl
mov
add
mov
cmp
stos
stos
les
dec
push
and
les
push
push
fdivrp
mov
mov
aaa
nop
outsb
mov
mov
mov
or
or
push
pusha
cmp
stos
inc
fs
dec
lret
call
cld
xor
jle
adc
dec
adc
rcl
lahf
sbb
aas
pop
loopne
mov
mov
and
lahf
sub
add
mov
dec
lods
add
push
in
sahf
ret
arpl
arpl
pop
inc
dec
bound
push
cmpsb
pop
mov
test
jnp
inc
xor
repz
sub
sbb
xchg
push
sbb
aam
mov
pop
add
jbe
aaa
popa
sbb
push
pop
xor
das
dec
adc
sbb
and
inc
or
out
adc
test
inc
int3
mov
fisttpl
push
cwtl
and
clc
pusha
adc
mov
clc
loop
mov
add
jle
fs
xchg
pop
xchg
cli
clc
pop
lret
sub
in
and
mov
popf
xor
into
fstl
ja
pusha
loopne
adc
jmp
enter
pop
lcall
and
jnp
push
enter
and
and
lods
mov
mov
mov
mov
adc
cmp
outsb
cs
xor
rcrb
inc
test
pop
or
rclb
js
or
ss
xor
pushf
inc
pop
shrb
mov
aas
mov
imul
mov
push
in
push
dec
adc
dec
shll
fstpl
adc
cwtl
pop
clc
push
js
add
cmpsb
mov
add
in
xchg
aaa
les
je
lods
stos
push
mov
inc
and
push
mov
push
cmovns
sub
pop
loope
mov
and
aaa
sub
cli
push
or
adc
movsl
add
nop
push
mov
dec
xchg
nop
movsb
jbe
ss
js
ret
lds
das
sbb
jo
mov
add
cli
rol
add
ljmp
fsubl
bound
xor
xor
xor
mov
and
xor
inc
sub
nop
or
and
add
int
repz
ds
pop
xor
jo
add
lods
mov
scas
push
js
or
inc
std
or
les
fisttpl
mov
or
sbb
jge
outsb
rcrl
mov
movsb
inc
lods
fs
cmp
mov
add
push
sbbl
jno
out
ret
imul
rcll
in
adcb
mov
cld
and
and
ret
push
aaa
adc
push
lret
cwtl
inc
sbb
push
sub
in
push
or
sub
lcall
jae
or
adc
or
cmp
outsb
sub
ss
ja
popa
mov
cmp
adc
mov
and
add
and
and
cmc
xor
xchg
addb
rol
cmp
inc
sbb
inc
sbb
sbb
rolb
mov
scas
xchg
popf
jg
push
out
daa
jo
or
dec
punpckhbw
fistl
orb
cld
shrl
popa
test
bound
sbb
cmc
in
dec
sbb
xchg
xchg
repz
push
lds
adc
out
popf
pop
scas
repnz
nop
jb
test
iret
pop
pop
xor
stos
add
inc
push
jae
imul
pop
mov
push
or
divb
sbb
inc
pop
or
jno
xor
sub
sub
xlat
cltd
jne
push
incl
dec
loop
scas
dec
push
bound
and
pop
je
jmp
gs
pop
or
movsl
sbb
rcl
cmp
dec
xlat
and
cmp
xor
jg
movsb
shrd
addr16
cmpb
dec
int3
cmp
fnstsw
sub
xor
rorb
add
jge
sub
int3
mov
mov
mov
fsubp
jp
add
xor
mov
or
push
pop
imul
mov
int3
dec
and
pop
imul
xchg
adc
sub
ret
pop
cld
mov
sub
jmp
add
shlb
adc
out
push
xor
mov
sub
xlat
es
leave
sbb
fiadds
stos
int
out
jg
dec
sbb
loope
gs
mov
lret
sub
mov
dec
push
lcall
lcall
lods
inc
lods
sahf
movsbl
loopne
mov
iret
inc
and
call
cmp
imul
mov
inc
lods
inc
lods
into
cmp
test
inc
test
inc
mov
inc
fcompl
pop
das
mov
and
popa
adc
mov
addl
mov
xor
imul
mov
sub
pop
aam
cld
mov
ret
mov
addr16
jecxz
add
cmp
addr16
stos
rorl
adc
xor
mov
cmp
lea
hlt
mov
push
call
test
andb
fs
pop
out
subl
cmp
adc
push
daa
and
aad
scas
xorl
push
mov
and
sbb
jmp
mov
xor
cmp
mov
loopne
fiaddl
push
xchg
xor
and
and
jle
icebp
inc
movsbl
test
mov
or
mulb
scas
pop
fistpll
push
inc
out
mov
out
arpl
imul
sub
xorl
cltd
mov
cmpsl
inc
sub
xchg
jnp
gs
insb
jnp
imul
cltd
cli
pop
lods
fcoml
dec
lods
stos
lea
dec
js
cwtl
mov
stos
xchg
and
sbb
outsl
mov
shrl
xchg
fucom
test
pmulhw
inc
movsl
mov
jo
push
pop
outsb
bnd
mov
mov
mov
loop
mov
mov
test
lods
les
dec
movsl
mov
dec
mov
and
aad
stos
pop
mov
dec
scas
cltd
and
xchg
out
mov
movsl
bound
pop
dec
mov
jbe
ljmp
jns
or
push
jle
aaa
dec
movsb
imul
sub
inc
and
testl
loope
adc
cmp
mov
inc
lret
pxor
add
add
lahf
dec
bound
add
jne
jecxz
les
inc
xchg
bound
fisubs
dec
dec
test
dec
jo
mov
sub
add
mov
sbb
std
xchg
adc
dec
or
js
dec
rorb
stos
stc
test
js
and
push
sbb
test
mov
pusha
test
mov
adc
push
icebp
mov
push
insl
rorl
fcomi
ds
ficoml
test
ds
or
pop
mov
in
mov
jns
repnz
rorb
loopne
sahf
adc
lods
mov
sub
pop
pop
dec
mov
cwtl
outsb
pop
aaa
dec
imul
in
and
cmp
inc
cmp
mov
lods
adc
sub
jmp
rcr
cmc
aam
orl
sub
adc
sbb
jg
mov
cwtl
loop
cli
divl
sub
lcall
orb
popa
inc
mov
jmp
inc
gs
push
and
dec
in
jne
mov
shlb
mov
jmp
add
push
adc
scas
xchg
push
fsubrs
cmp
jne
divl
pusha
jno
stos
inc
lock
and
std
ret
popa
iret
loope
loopne
iret
stos
cmp
loope
ljmp
movsl
jo
popa
xchg
out
sub
mov
push
lret
clc
aaa
pextrw
fs
icebp
popf
dec
stc
mov
test
add
scas
pop
inc
adc
adc
and
inc
movsl
andb
sti
mov
push
or
sbb
push
iret
lret
pop
fs
mov
push
xchg
sbb
js
icebp
mov
shrb
fwait
in
in
je
add
sbb
mov
movsl
iret
xchg
mov
cmp
pushf
fidivrl
adc
leave
sahf
push
push
xor
jl
cmp
lds
das
sub
ret
in
xorb
dec
in
imul
test
into
cmpsb
addb
sti
dec
xor
mov
cmpsb
dec
add
fs
mov
pop
dec
movsl
pop
pop
mov
adc
inc
test
push
repnz
cltd
sub
out
add
or
js
jecxz
xchg
test
push
aad
cmp
arpl
inc
adc
ds
dec
and
push
adc
xor
mov
pusha
jmp
dec
lret
fiaddl
and
cwtl
imul
sub
push
icebp
jecxz
hlt
adc
pop
loopne
xlat
push
roll
inc
sbb
push
lahf
pop
bound
leave
rcrb
adc
arpl
filds
inc
mov
popa
cmpsl
cltd
sbbl
push
mov
or
mov
pushf
push
mov
cmp
mov
push
sub
pop
aam
sbb
pop
rclb
sub
sbb
sbbl
and
xchg
lret
pop
roll
daa
add
and
clc
bound
pusha
in
adc
arpl
xor
fcoms
mov
cwtl
inc
nop
cmp
cs
sub
sbb
inc
dec
sbb
ret
jne
inc
jmp
adc
mov
call
test
mov
pop
jl
popa
xor
push
push
imull
in
cmc
call
sbb
pushf
xor
in
daa
je
icebp
jmp
mov
sbb
inc
mov
jno
jp
mov
mov
and
decb
lods
pop
mov
popa
mov
adc
add
aas
xor
lds
cmp
fs
mov
std
jp
loopne
jns
inc
cs
shll
add
mov
push
pop
lcall
icebp
push
lret
movsb
push
mov
sbb
ds
jmp
mov
mov
pop
mov
push
sub
xor
int3
sbb
pop
cld
push
jb
mov
enter
jns
xchg
cwtl
pushf
movsb
jnp
push
clc
cmp
bound
push
scas
popa
movsl
jle
aad
mov
sub
add
mov
icebp
cld
mov
out
sub
pop
or
push
add
inc
mov
cmpsl
push
aad
movsb
int
xchg
gs
sbb
outsb
jecxz
inc
sbb
or
sahf
push
and
cmpsl
push
outsl
aam
cmpsb
sti
add
cmp
xchg
addl
adc
loop
stos
or
hlt
in
and
mov
or
sub
test
es
lret
lock
mov
pop
decb
lock
lcall
mov
sbb
call
sbb
mov
rcl
stos
stc
cwtl
bound
js
or
dec
es
je,pn
insb
pop
sar
pop
pop
inc
dec
pop
loope
and
xchg
mov
insb
into
lds
int3
dec
test
push
test
mov
mov
nop
or
scas
pop
es
pop
mov
jle
pop
mov
lds
or
mov
enter
jge
pop
addb
pusha
ss
movsl
adc
jmp
imulb
mov
rol
cs
leave
adc
push
sqrtps
rolb
jecxz
push
jp
mov
xor
dec
daa
fistps
out
jne
dec
push
aaa
cld
mov
add
clc
sbb
imul
mov
cmp
xor
mov
in
mov
nop
mov
mov
sub
inc
adc
jp
cmpsb
and
sarb
dec
adc
pop
adc
arpl
cwtl
xchg
mov
sbb
dec
loopne
mov
pop
mov
xlat
ja
les
sbb
mov
je
fsts
jbe
stos
jae
mull
call
scas
lret
push
dec
xchg
push
mov
loopne
ss
xor
imul
push
scas
sbb
fs
push
inc
mov
rcrl
sbb
popf
sub
push
add
stos
mov
in
jns
sub
popf
mov
xchg
lret
data16
ret
idivb
cmp
mov
jge
stos
sbb
push
rcrb
hlt
arpl
lret
mov
inc
and
sti
jp
xchg
pop
int
cmp
xchg
imul
pop
movb
bound
subb
test
jmp
out
xchg
mov
push
pop
push
pusha
add
or
inc
add
push
xchg
mov
cmp
test
imul
inc
sbb
inc
inc
lcall
xchg
push
inc
sbb
stos
iret
mov
das
adc
mov
push
out
xor
aaa
sti
frstor
sub
jae
orb
xchg
dec
add
cld
or
pop
addr16
mov
das
popf
mov
fists
dec
mov
test
cmp
outsb
or
sub
push
sub
fdivrl
lret
mov
fisttpl
std
std
pop
push
roll
xchg
push
mov
fmuls
out
in
test
out
add
adc
jne
arpl
ret
mov
mov
jecxz
inc
scas
adc
movsl
in
push
sahf
xor
cltd
mov
cmp
cmpsl
test
orb
gs
imul
jmp
dec
iret
addr16
jg
mov
fidivs
xor
cmp
ljmp
xchg
rclb
mov
push
or
jmp
adc
shlb
loope
jne
out
int3
lods
or
test
int
aam
insb
lahf
in
cli
rolb
inc
pop
rclb
and
test
sub
pop
adc
daa
int
insl
movsb
es
pushf
inc
sti
andb
xchg
hlt
movsb
jns
and
fcoms
mov
jne
add
xor
dec
add
lret
das
fistl
dec
ret
jne
sbb
add
punpcklbw
mov
imul
sahf
or
ret
lret
mov
daa
push
push
lahf
push
lods
outsb
sub
addr16
test
push
cmpsl
mov
les
mov
aad
outsb
sub
fisttpll
xchg
or
or
mov
dec
int
adc
pushf
fwait
inc
loopne
mov
adc
pop
outsb
pop
test
mov
xor
pop
lods
cmp
mov
mov
jae
les
lcall
fldl
sbb
call
and
cli
add
and
pop
jnp
mov
sbb
addb
mov
or
cmpsl
cmpsb
mov
mov
adcb
pusha
ds
orb
add
push
mov
orb
rol
shlb
dec
adc
jmp
testl
imul
pop
adc
movsl
adc
pop
pop
pop
test
and
xchg
cmpsb
jb
inc
test
movsl
dec
ret
dec
xchg
and
xchg
scas
mov
adc
dec
test
mov
adc
ret
pop
jl
ds
dec
mov
cwtl
push
ss
cs
add
mov
dec
movsl
sbb
mov
dec
lahf
stos
clc
rol
mov
xchg
fcoms
mov
insb
icebp
push
sbb
add
in
jb
adc
and
jp
push
insl
push
xor
add
cmp
add
inc
cmp
sbb
cmp
imul
sub
add
fs
xor
aas
inc
out
pop
sbb
orb
scas
inc
xor
mov
sbb
or
lods
pop
sub
dec
nop
inc
dec
mov
lds
mov
push
jns
add
inc
fcomps
orb
jl
fsubl
icebp
xor
shll
jns
adc
adc
jo
push
es
xorb
cwtl
adc
inc
xchg
pusha
adc
sub
inc
and
or
iret
and
push
and
stos
scas
adc
push
jecxz
add
nop
and
mov
fnstenv
xchg
sub
push
sti
enter
lods
pusha
sti
xchg
inc
jle
cmp
and
and
xchg
jne
cmp
sbb
rorb
rolb
sub
aaa
mov
rcl
lret
cltd
inc
push
add
pop
fwait
aas
sbb
scas
test
push
nop
inc
jbe
loop
int
push
xlat
sub
xor
popa
pop
stos
das
and
and
inc
xchg
das
cmp
jnp
insb
xor
stos
mov
test
xchg
lods
lods
xchg
cs
popa
jmp
lods
mov
and
or
je
inc
add
mov
daa
add
cmpsl
test
jmp
clc
clc
addr16
imul
pop
mov
pop
jl
loop
or
pop
daa
and
mov
adc
jno,pn
cmp
rorb
cmp
popf
xor
cmp
jmp
jp
cmp
mov
inc
push
jb
jp
push
xchg
out
in
pop
daa
nop
movb
scas
jle
hlt
xlat
jmp
push
push
inc
cmp
jmp
and
pop
add
cwtl
mov
rorb
xor
pop
shrl
inc
movsl
lea
mov
or
pop
mov
ret
adc
rol
xor
movsb
jnp
mov
pop
das
add
hlt
enter
lahf
sbb
sbb
in
loopne
lock
cli
pop
cmpsl
imul
add
enter
add
popa
lea
jbe
out
bound
clc
pusha
add
sbb
jecxz
add
ficomps
adc
xor
gs
push
movsb
movsb
dec
xor
add
inc
mov
push
mov
mov
dec
sub
call
xchg
lds
je
xor
xor
popa
dec
shlb
push
xor
cmp
push
dec
xor
cmp
addr16
adc
push
jg
or
cmp
js
push
iret
inc
ret
adc
and
lock
je,pn
pop
and
sub
lds
sbb
add
stos
xchg
rcl
xchg
xchg
pop
adc
popf
inc
or
inc
xchg
push
push
inc
xor
sbb
loop
sti
adc
mov
addb
pop
fstpt
adc
sbb
add
sarl
xor
and
mov
arpl
jmp
add
xor
pushf
into
iret
test
inc
addb
addr16
mov
cmp
xchg
dec
mov
gs
cwtl
mov
xor
sarb
lock
jne
lahf
jecxz
out
sti
push
idiv
inc
popa
push
scas
jg
jnp
ss
sar
lock
adc
push
data16
addps
add
sbb
mov
popa
inc
add
jo
icebp
jo
inc
idivl
out
jmp
sbb
or
fs
push
push
inc
in
les
mov
add
add
shlb
test
sbbb
js
ja
scas
das
or
pop
sti
cld
or
rcr
jo
ljmp
push
add
xlat
enter
nop
and
dec
mov
mov
or
shlb
mov
adc
and
rorb
push
sahf
fsubrp
mov
adc
insb
mov
push
and
sbb
xor
adcb
xor
mov
xchg
inc
fildll
pop
es
outsl
mov
lret
lea
mov
int3
lock
dec
nop
sbbb
jp
rcll
insl
sarl
xchg
cmp
adc
adc
mov
dec
test
mov
nop
std
iret
mov
xchg
es
loop
sbb
adc
adc
sti
push
cmp
test
rorb
ret
mov
shrb
stos
bound
xor
sub
jne
fs
jno
daa
jnp
jp
in
addr16
dec
test
or
aas
test
frstor
cmp
sub
sbb
xchg
outsb
inc
xor
xchg
mov
test
faddl
add
push
mov
jmp
out
int3
out
xor
xchg
push
int3
jno
adc
dec
pop
cmp
xchg
cs
lcall
jp
stos
sub
pop
sti
scas
mov
cmc
add
cmpsb
push
loope
rolb
push
sub
pop
push
mov
cmp
outsl
clc
and
int
jp
mov
cmp
shlb
adc
lock
sub
cmp
das
cmp
inc
or
pop
sete
test
movsb
shrb
jo
idivl
loope
pop
scas
push
shrb
inc
mov
cmp
mov
add
pop
xor
xor
inc
or
mov
cs
inc
push
scas
pop
ret
add
mov
sbb
xor
pop
sbb
repnz
cwtl
sub
ja
mov
rolb
icebp
bound
or
pop
push
push
or
mov
lret
xchg
jl
mov
push
xlat
jae
inc
add
arpl
cmp
xor
scas
daa
adc
mov
sbb
xor
es
sub
inc
sub
scas
jg
xor
xor
mov
pushl
and
push
xor
pop
lods
inc
aas
xchg
pusha
or
lret
cmpsb
inc
rolb
and
outsb
mov
push
and
dec
and
mov
adcb
adc
dec
pop
jbe
sub
bound
sbb
push
dec
jmp
les
inc
xor
adc
lcall
xchg
inc
mov
adc
outsl
push
inc
ret
mov
daa
mov
lods
inc
ljmp
push
sbb
inc
fstpt
push
jbe
mov
nop
mov
out
xor
xchg
adc
in
stos
mov
add
push
in
popa
in
bound
pop
push
cmp
pop
lds
arpl
testb
lods
daa
scas
mov
mov
pcmpgtd
sub
pop
mov
sbb
jo
cmp
jle
push
pushf
lret
repnz
inc
scas
xchg
add
nop
or
movsb
mov
inc
add
push
or
orb
adc
icebp
cmpl
and
dec
inc
mov
push
rolb
jmp
mov
jl
test
cmp
dec
mov
dec
inc
cli
stos
xchg
pop
imul
mov
jmp
je
outsl
dec
nop
pop
adc
stos
stos
in
arpl
stos
adc
sarb
mov
leave
movsl
xor
fwait
popa
sti
jmp
shlb
cmpsb
scas
xor
mov
push
dec
std
aas
or
popl
cmp
or
adcl
add
adc
pop
stos
int
popf
xchg
jb
mov
cmp
xor
pop
adc
in
movsb
push
xorb
test
mov
sub
pop
stos
xchg
mov
inc
pop
lock
dec
adc
sbb
ret
insb
ficompl
sub
decb
in
shll
shlb
xorl
adc
xchg
fiadds
movsb
mov
adc
add
enter
repnz
xchg
lcall
inc
shl
cmp
mov
fcoms
addl
adc
aas
test
jo
pop
adc
or
dec
push
es
shll
mov
xchg
add
ds
and
pushf
or
sub
cmp
and
jae
mov
cli
add
sub
adc
lock
lea
gs
in
inc
mov
ja
jl
jg
xor
xchg
and
mov
pushf
outsl
pop
leave
shrl
xchg
bound
movsb
test
push
inc
mov
bound
cwtl
lds
push
gs
loop
fsubs
popa
loopne
shr
repz
or
cs
pop
inc
addl
pop
lahf
and
pop
nop
stc
pop
push
cmc
fwait
jecxz
out
cmpsl
fisttpl
and
jl
pop
mov
jbe
lods
fwait
jb
dec
dec
rolb
dec
sub
cld
rolb
inc
mov
pop
shll
push
stos
mov
jnp
les
sar
divl
lock
pop
add
or
fdivr
stos
scas
insb
fwait
sub
adc
add
lods
addl
pop
or
hlt
xchg
je
sub
pop
sub
je
mov
in
push
stc
sbbl
mov
test
mov
and
mov
push
dec
sub
and
cs
xchg
mov
in
xor
add
inc
inc
pop
js
pop
jbe
cltd
sub
pop
add
les
pusha
or
pushl
mov
pop
outsl
jl
mov
sbb
jbe
mov
cmp
mov
and
jmp
imul
add
lods
mov
in
jno
xor
mov
xor
cld
repz
enter
or
cmp
jmp
jb
imul
clc
loopne
shl
lock
test
std
jg
fs
add
popa
daa
mov
cwtl
hlt
pusha
mov
pop
add
pop
rolb
sbb
add
or
add
adc
or
gs
addr16
add
dec
repz
pushf
xor
in
and
in
movsb
xchg
test
push
jp
xor
jno
push
jo
xor
fsubrs
fcoms
sub
push
bound
xor
jecxz
je
lcall
iret
xor
shlb
lret
stos
mov
cmpsl
pop
inc
lcall
ljmp
jmp
cmp
sbb
cmc
in
stos
adcb
adc
mov
pop
pop
popa
xlat
les
leave
cmp
leave
inc
cmp
call
cwtl
push
idiv
cmc
push
sbb
mov
clc
ja
adc
das
sarl
rorb
xor
mov
or
jle
add
adc
push
andl
das
or
cmpsb
push
movsb
mov
xor
inc
dec
sub
aam
push
mov
sbb
aas
pop
push
cs
sub
das
inc
outsb
test
sarb
mov
mov
and
das
fnstenv
add
pop
in
pop
inc
mov
lds
jge
into
out
iret
movsb
cmpsl
dec
in
mov
or
call
aam
mov
mov
repz
clc
imul
repnz
jg
shl
aad
pop
jl
and
aas
pop
inc
test
add
adc
fistps
stc
scas
or
mov
das
and
pushf
les
jbe
insl
out
adc
xchg
bound
sub
fwait
push
jae
and
nop
test
test
xor
data16
or
outsl
sub
mov
lock
xchg
push
stos
sub
and
out
add
xchg
in
fsubp
pop
xor
dec
fnstenv
mov
push
mov
daa
orb
out
cmpsl
cmp
fmul
test
and
pop
iret
sub
xchg
imul
mov
leave
out
xor
sarb
mov
clc
inc
cmp
rclb
inc
xor
xor
xchg
or
fsubrl
scas
jne
dec
dec
dec
mov
lea
or
cwtl
pop
or
roll
stos
adc
jl
ror
ret
lods
int3
insl
push
jno
sub
push
mov
xchg
and
pop
mov
pop
shlb
push
xchg
sbb
pusha
xor
xor
mov
inc
xor
sbb
subb
sub
stos
popf
pusha
pop
mov
std
fistl
mov
adc
shr
add
push
lock
nop
adc
mov
or
mov
push
dec
add
xchg
xchg
or
sbb
pop
insb
inc
xorl
inc
mov
insb
mov
sbb
ja
pop
sub
int3
jb
sbb
jmp
fisttpl
xchg
add
enter
ja
rorl
in
and
jg
xchg
ja
xchg
dec
lock
mov
adc
pushf
and
or
clc
xor
testb
es
mov
ret
cmpsl
sbb
test
test
sbb
sahf
leave
add
push
mov
lcall
xchg
mulb
mov
mov
aam
popf
push
and
mov
sahf
push
mov
sub
lea
dec
das
mov
aad
pop
or
cld
lahf
push
sbb
into
xchg
xchg
sub
sbb
ret
jle
and
push
or
pusha
ss
pop
inc
js
fcmovnbe
loop
std
mov
gs
in
push
sarb
jns
clc
cltd
push
push
fildl
cmp
in
xchg
cli
cltd
into
mov
data16
adc
cs
mov
sub
add
or
jl
fwait
test
stos
sub
inc
in
sbb
ja
mov
sub
add
inc
add
adc
push
shlb
xlat
mov
rorl
and
fmul
fldcw
sbb
pop
sub
lds
inc
mov
push
clc
push
push
ret
adc
lea
mov
inc
cmp
fnstsw
inc
push
in
mov
shll
in
dec
jcxz
sbb
or
xchg
push
es
outsb
pop
pop
mov
insl
shll
sub
jb
inc
jbe
mov
xchg
dec
jbe
pop
lds
mov
mov
jecxz
jecxz
sbb
pop
xchg
outsb
gs
xchg
js
xchg
xor
mov
je,pn
xorb
popa
push
js
fldenv
mov
sub
mov
cmp
bound
adc
mov
mov
sub
cmp
xchg
in
hlt
nop
enter
jb
gs
std
cmp
push
ss
xchg
cli
icebp
or
aam
jnp
or
cmpsl
adc
mov
in
adc
sbb
xchg
clc
cld
pop
mov
das
lds
icebp
rorl
fmul
xor
push
mov
push
gs
add
fsubrs
sub
mov
or
inc
cmc
movsbl
imul
in
mov
insb
xor
jmp
jne
and
fnsave
or
mov
into
dec
xchg
fdivl
xor
in
shrb
sub
out
adc
xorl
mov
mov
adc
add
mov
inc
lods
or
dec
add
out
sbb
add
pusha
mov
inc
xchg
dec
xor
xchg
dec
nop
sub
mov
push
dec
jge
push
xor
xor
loopne
lds
mov
loope
push
sub
dec
add
push
adc
mov
cmp
loop
mov
std
out
fidivrl
pushf
mov
mov
xlat
jle
or
sbb
cmp
mov
cwtl
adc
pusha
add
andl
or
adc
sbb
inc
inc
outsb
cmp
mov
push
ret
pop
int3
adc
rorb
cmp
mov
rolb
mov
pop
dec
fmull
dec
pop
data16
cmp
inc
addl
mov
add
lahf
xchg
repz
pop
shl
int
call
dec
pop
adc
aam
pop
inc
or
lds
incb
dec
int3
or
call
add
incl
and
cs
push
or
shr
adc
repnz
out
push
pop
test
push
mov
imulb
adcl
in
sti
mov
out
mov
scas
add
mov
les
loope
add
lret
frstor
dec
inc
push
je
fdivs
mov
sbb
repnz
push
popa
jae
fstl
leave
push
mov
or
movsb
inc
andl
xor
clc
test
cmpl
enter
inc
andl
test
dec
push
dec
mov
iret
mov
mov
dec
ja
mov
mov
mulps
sbb
inc
aam
sub
movsl
test
sub
shlb
sar
dec
cmp
and
inc
rcrb
inc
push
cmp
enter
dec
inc
or
or
add
fisttps
jbe
shr
popf
add
xchg
pop
int3
mov
rcrl
out
xchg
pop
loopne
inc
mov
push
aaa
or
inc
push
test
pusha
mov
pop
mov
mov
insl
sub
test
pop
popa
jb
or
icebp
daa
sub
dec
lret
bound
mov
add
add
aas
sub
xchg
mov
mov
mov
lea
sbb
adc
ret
add
push
pop
pop
inc
jo
xor
hlt
pop
test
nop
mov
add
fwait
test
sbb
sbb
xchg
pop
xorl
arpl
sub
inc
aaa
aad
aas
push
and
or
mov
push
and
mov
sub
lock
int
mov
into
pop
push
push
and
add
jg
sub
xchg
mov
adc
and
pop
enter
movsb
push
ss
pop
aaa
lods
dec
push
xor
and
pop
inc
adc
adc
mov
scas
icebp
fwait
inc
xchg
pop
pop
jge
daa
xchg
shl
adc
pop
dec
imull
inc
lods
add
pusha
pusha
and
adc
aas
addr16
push
dec
movsb
sbb
jmp
xchg
ror
mov
movsb
clc
jno
lahf
pop
mov
pop
adc
fadds
mov
cmp
das
jg
cmpb
rsm
and
push
cwtl
push
push
out
addl
das
sbbl
inc
adc
inc
xor
gs
sub
inc
or
in
pop
lds
data16
inc
mov
xor
lds
lock
lock
pop
and
push
aaa
mov
xchg
and
inc
aas
adc
iret
sub
xchg
adc
roll
mov
xlat
push
adc
out
inc
in
dec
test
mov
test
int
ficoms
es
nop
cmp
xchg
shrl
and
mov
aam
call
xchg
imul
popa
fld1
mov
jmp
and
or
xchg
add
ficoms
inc
or
inc
out
in
dec
cmp
bound
xorl
in
sbb
cmovb
xchg
xchg
dec
out
mov
xor
mov
roll
add
jle
mov
rcr
mov
and
inc
dec
push
inc
mov
daa
push
and
nop
pop
shrl
test
rcr
mov
ret
cwtl
jmp
les
je
adcb
imul
mov
push
sbb
mov
add
and
mov
jmp
dec
add
jb
push
inc
loopne
cld
jne
mov
andb
into
jle
and
cmp
pop
adcl
leave
sbb
in
mov
xchg
mov
sbb
sbb
sbb
sahf
sub
addr16
jns
push
shll
mov
cmp
xchg
andl
cmc
notl
adc
mov
mov
inc
loope
jne
lock
xchg
adc
pusha
fwait
xlat
stc
jne
roll
push
mov
xor
add
orb
fs
pop
jo
jb
xor
fwait
mov
mov
xchg
addl
or
ret
inc
pop
add
imulb
and
mov
loop
lods
scas
lea
xor
mov
ficoms
pop
push
lcall
and
xor
lret
cmpsl
int
mov
pusha
loop
xchg
dec
pop
adc
jecxz
lock
leave
decl
nop
jl
add
les
mov
xor
adc
pop
sub
mov
ret
pop
push
jns
sbb
loopne
jl
sbbb
adc
add
ss
pop
in
add
clc
lret
rcrl
adc
inc
inc
rcll
ss
inc
in
ljmp
sub
cmc
js
addl
inc
rsm
les
sub
and
negl
inc
loop
int3
jno
xor
inc
push
xor
dec
mov
mov
push
ret
xchg
add
shl
sti
xchg
int3
pop
and
int
add
out
jnp
addl
or
mov
sub
sub
adc
xor
fsts
inc
inc
cmp
dec
add
leave
and
data16
test
into
and
and
mov
jb
xchg
cmc
or
xchg
add
sbb
mov
mov
inc
sub
pusha
fistpl
sub
clc
add
dec
fmulp
scas
xchg
add
mov
mov
fs
pop
lcall
add
and
mov
fisubrl
pushf
cmc
mov
dec
nop
scas
add
xlat
jnp
cmp
or
bound
dec
mov
adc
fcomps
into
in
adc
movsb
lret
mov
adc
sbb
xchg
mov
push
or
nop
inc
dec
push
push
add
loop
add
fcmovb
push
stc
pop
pop
mov
lret
sub
std
pop
inc
out
cmp
push
push
inc
xchg
das
dec
pusha
inc
dec
push
inc
push
cmp
sti
push
fistl
lods
pusha
out
cmp
or
inc
xor
mov
movsb
pop
push
in
push
mov
mov
add
jo
and
or
and
fwait
sarb
push
sbb
sub
sbb
std
adcl
mov
add
shll
pop
mov
sub
in
sub
adc
stos
dec
pop
or
fstp
jl
jne
add
cmp
fdivl
mov
pusha
sub
mov
shr
xchg
dec
sub
dec
inc
mov
jmp
xchg
fs
jbe
mov
sahf
sub
fildl
sub
jp
mov
or
stos
pop
xchg
lcall
cli
xor
in
cmp
subl
xor
add
rcrb
sahf
subb
or
in
pop
jp
popa
ret
js
dec
xchg
cld
pusha
inc
or
or
and
mov
mov
dec
push
sarl
inc
pop
lds
test
mov
lcall
or
mov
lods
mov
aas
sbb
shll
test
test
leave
in
mov
xchg
das
lea
lock
int3
loop
addr16
cmpl
mov
xor
xchg
mov
xchg
push
mov
lret
into
dec
adc
into
add
xor
add
ss
inc
mov
push
sub
int3
sbb
mov
orb
fst
jp
adcl
and
pusha
and
out
or
lods
pop
pop
mov
int
mov
jnp
xchg
sub
adc
jns
cmpsl
push
xchg
fldenv
ret
test
xchg
shr
mov
mov
loopne
add
xor
test
mov
dec
mov
loopne
sbb
test
sarb
mov
test
mov
dec
pop
and
push
or
sub
inc
push
sarb
mov
mov
adc
scas
ljmp
adc
sub
mov
mov
data16
inc
mov
sbbb
xchg
cs
inc
mov
test
sti
xor
mov
dec
ljmp
add
out
ret
sbb
ljmp
xchg
or
shlb
pop
cli
gs
lret
push
and
in
ret
jmp
popf
sub
jmp
fnsave
aas
xchg
aam
sbb
orb
cltd
dec
jmp
out
sub
xchg
testl
push
push
enter
mov
sbb
or
icebp
pop
sub
cmc
mov
ret
fildll
push
adc
js
and
adc
sub
js
lret
or
movsl
add
xchg
movsl
mov
mov
cmpsb
test
pop
push
or
stc
fs
push
icebp
shl
fs
fists
roll
test
push
int3
dec
mov
mov
mov
shll
lret
shl
cmp
iret
sar
dec
xchg
inc
adc
test
mov
in
inc
and
adc
add
int
mov
int3
clc
lock
into
pop
in
xor
js
and
dec
mov
fadd
aam
jecxz
push
push
cmpsb
pusha
push
jmp
xchg
fimuls
dec
pop
mov
or
cltd
call
pop
xchg
das
sbb
mov
inc
in
xchg
bound
push
sbb
cmp
dec
repnz
cmp
mov
lret
les
cmpsb
out
mov
push
or
push
test
fldl
push
test
aad
mov
aam
adc
sar
scas
lock
mov
out
jecxz
and
inc
or
mov
mov
scas
dec
pop
es
in
jp
ret
shlb
shrl
roll
loopne
and
push
orl
jecxz
xchg
jge
das
or
xor
push
and
lea
or
xor
cltd
cmp
mov
ret
mov
mov
inc
xchg
adc
ljmp
lds
out
nopl
mov
cli
test
cwtl
mov
sub
popa
jecxz
test
dec
leave
movsb
inc
xchg
xor
jmp
mov
inc
scas
stos
cld
dec
push
lods
push
rcrl
mov
mov
out
int3
imul
test
gs
mov
or
adc
push
pop
or
ljmp
pop
paddusw
xchg
xchg
sbb
lea
push
scas
push
and
xchg
cmpsb
sbb
sub
xchg
in
add
lret
js
aaa
and
test
mov
pop
xor
add
sahf
lea
pop
out
dec
mov
fidivrs
test
lea
icebp
add
test
mov
je
ljmp
stos
lret
mov
sarb
and
mulb
or
adc
aam
xchg
push
adc
lods
xor
adc
data16
je
mov
addr16
add
pop
aad
push
push
cmpsb
enter
sub
adc
xor
aas
out
iret
movsl
js
imul
jo
fsubrs
cmp
mov
and
and
dec
repnz
ljmp
or
rorl
je
inc
inc
sarb
mov
xchg
outsl
sti
xchg
gs
mov
addb
in
dec
shlb
cwtl
int3
enter
std
das
rclb
inc
bound
jmp
inc
pop
xor
cmc
jmp
dec
xchg
inc
sbb
das
scas
in
scas
ret
aaa
pop
leave
dec
lds
jbe
sbb
sti
xor
or
subl
iret
pusha
adc
dec
xor
inc
mov
pusha
inc
jne
inc
test
aam
inc
lret
lret
pop
sarb
adc
loope
outsl
mov
call
aaa
loop
jno
or
jo
jbe
aas
xor
inc
adc
xor
enter
imul
fwait
pop
inc
push
xchg
jl
xorb
push
mov
bound
push
mov
lods
cs
popa
lds
mov
stc
pop
pop
and
int
adc
test
dec
ljmp
xor
loope
jg
add
mov
les
xchg
add
add
cmp
push
push
pushf
and
jno
push
mov
je
pop
adc
loopne
std
adc
mov
arpl
sub
sbb
fcoms
sub
enter
jecxz,pn
and
std
cmp
lea
in
je
test
or
inc
sub
nop
pusha
mov
sbb
or
add
cmp
mov
jg
inc
add
int3
jno
lock
adc
add
xchg
test
inc
xchg
mov
lcall
stos
mov
ret
fcoms
sub
mov
dec
mov
push
inc
push
rorl
mov
jg
jle
or
bound
outsb
shlb
enter
sub
leave
cmc
adc
ror
mov
in
xchg
cmpl
adc
push
ret
mov
mov
nop
xchg
pop
sar
movsb
enter
lds
mov
add
pusha
and
roll
pop
xlat
or
loope
arpl
adc
lea
pushf
sbb
rcll
push
test
pop
xlat
leave
insb
add
add
adc
ret
mov
mov
ds
cli
subb
add
ret
enter
fisubs
je
lahf
js
movsb
stos
xchg
cwtl
rcrb
and
mov
xor
inc
lret
stc
cmp
mov
mov
jecxz
sbb
pop
dec
ret
push
orl
iret
pop
xchg
pop
rcr
jmp
inc
xchg
cmp
lods
movsb
push
test
ja
pushf
cwtl
rclb
pop
fs
movsl
jae
cmp
stos
jle
xor
cld
lock
sub
popf
xor
dec
mov
inc
push
push
sub
sub
pop
cltd
pushf
mov
jae
shl
mov
testb
pop
sahf
or
xor
sub
mov
ret
sub
popf
mov
push
cmpsl
add
outsb
xchg
and
xchg
je
cmc
xor
negb
cmpsb
cmp
pop
aas
fs
out
int
int
sarb
or
mov
je
xor
or
pop
mov
gs
test
out
cmp
fucomip
mov
jl
pop
cld
dec
cli
lock
adcb
adc
inc
insb
mov
sub
lods
cmp
push
cli
mov
mov
movsb
fstpt
inc
in
push
test
lret
pusha
loope
push
jmp
repz
jle
dec
or
push
push
sub
sbb
jp
cmp
cmpsl
mov
jns
xchg
sti
or
loope
stos
ss
jg
ds
loope
jb
add
pop
out
push
and
dec
adc
xor
cmp
push
imul
xchg
adc
push
mov
jecxz
inc
push
sub
xor
jae
movsb
inc
xchg
mov
mov
dec
pusha
sub
out
sub
xorl
ja
and
jle
in
jne
js
ljmp
jg
pushl
and
ja
pop
ss
rclb
cmp
pop
pusha
adc
mov
stos
pusha
mull
xchg
push
shlb
mov
int3
mov
push
shlb
cmc
push
cld
or
lcall
arpl
xor
jns
roll
jecxz
and
test
mov
mov
cmc
push
shlb
inc
sar
or
jmp
scas
dec
and
add
push
or
pop
lcall
inc
xchg
cmpb
add
rol
xor
xchg
inc
mov
jb
cld
xchg
push
stc
mov
mov
add
inc
lret
pop
outsl
loope
clc
adc
mov
int3
add
dec
fisubrs
notb
ds
sub
repz
mov
jle
pop
push
xor
push
cmpsb
repnz
outsb
push
pusha
xchg
xor
sarl
inc
andl
jg
xor
les
ret
add
popa
add
imul
mov
test
mov
fstps
pop
leave
lods
push
jb
lahf
addb
jmp
loopne
jmp
int
popa
cwtl
repz
ds
push
and
and
pop
push
add
mov
test
sbb
jmp
pop
or
int3
sub
xchg
xor
dec
pop
in
pusha
add
mov
pop
leave
mov
xor
pusha
cld
adc
movsb
pop
adc
mov
or
jbe
cmp
add
xor
icebp
test
fcoms
mov
pop
insb
lret
mov
call
add
in
sbbb
shlb
lret
popa
jmp
mov
rcll
and
adc
mov
cmpsb
aas
pop
hlt
sbbb
xchg
jae
add
sbb
sub
mov
mov
inc
arpl
sub
dec
pop
and
inc
jecxz
sub
aaa
sbb
cs
and
push
int3
and
in
inc
adc
mov
inc
mov
mov
lds
not
adc
mov
or
je
xor
mov
imul
ljmp
jne
dec
cltd
and
xchg
icebp
pop
stos
rep
lods
inc
imulb
push
push
ret
and
repnz
mov
icebp
or
xor
fwait
pop
andl
stc
push
cmp
scas
andb
cmp
jge
movsb
add
aam
jne
pop
adc
adc
xchg
dec
mov
inc
jae
push
call
mov
push
cmp
dec
es
or
mov
inc
xchg
adc
sar
in
sub
stos
sub
rorb
add
movsb
pop
pop
movsl
add
aas
pop
test
mov
or
dec
out
bound
xor
inc
pusha
xchg
cmp
mov
insb
mov
adcb
out
push
push
push
dec
push
mov
push
cmpsl
pop
loope
js
jp
dec
sub
aas
scas
outsb
dec
lret
jno
js
in
cld
push
jns
adc
inc
xlat
xor
cmp
mov
and
push
stc
sub
jl
jl
jbe
xorb
test
xor
sahf
mov
das
call
jecxz
out
inc
push
xchg
test
add
roll
or
xchg
cmpsl
xchg
mov
xor
js
out
rorl
xor
jo
bound
movntps
push
mov
cmpl
xchg
add
outsb
xchg
outsb
hlt
ret
jae
push
popl
push
and
mov
sahf
mov
test
pop
nop
aad
xchg
push
cwtl
adc
jne
popf
push
xor
mov
push
cld
xor
xchg
xchg
cmpsl
mov
inc
stc
jne
cmpsb
and
cmp
pop
lret
or
mov
ja
dec
jae
dec
inc
leave
gs
aam
add
or
pusha
mov
subb
shr
lcall
sbb
shr
push
fwait
xor
je
mov
les
push
dec
cmp
dec
mov
push
push
xchg
jns
jl
mov
lds
ljmp
mov
ss
popf
mov
lret
mov
mov
dec
xchg
sub
stos
push
scas
lds
mov
adc
fdivrs
insl
dec
add
sbbb
test
or
shl
sti
xor
gs
mov
mov
lds
dec
std
dec
push
leave
mov
mov
icebp
mov
and
rorb
je
loopne
jbe
sub
pop
and
cmp
es
outsl
jle
gs
rolb
mov
xchg
sbb
pop
stc
ss
mov
loop
sub
xor
sub
int
mov
aaa
lea
pop
aad
daa
sub
loope
dec
cmc
adc
out
add
aas
sbb
add
clc
cmpsl
scas
sub
mov
dec
sub
shl
inc
scas
sub
push
add
mov
sbb
add
xchg
fnstsw
push
adc
mov
in
mov
insl
ss
mov
scas
sub
push
icebp
xor
adc
popfw
inc
lret
fs
sub
out
adc
rcl
int3
jbe
push
pop
repz
mov
pushf
cs
pop
inc
lock
inc
cmp
xor
mov
mov
pop
mov
decl
and
and
shrl
sbb
scas
outsb
test
cmp
fucomi
jo
and
mov
movsb
dec
call
mov
dec
push
and
pop
add
outsl
cltd
pop
xchg
mov
into
stos
push
inc
lcall
mov
lock
xchg
and
jns
pop
adc
scas
lret
and
sbb
or
ret
movups
push
xlat
dec
xchg
jbe
negb
nop
xchg
das
cmp
sbbl
or
dec
sub
sbb
inc
mov
xchg
sbb
pop
sub
or
imul
and
xor
gs
ret
cwtl
jmp
push
push
mov
push
xchg
or
xor
inc
mov
cld
scas
je
and
cltd
lods
sub
push
repz
js
lea
std
cmpsb
sbb
gs
mov
imul
or
inc
mov
mov
ljmp
dec
out
iret
les
push
xlat
fildl
clc
andb
sti
push
pop
pusha
test
fidivrl
jnp
roll
mov
inc
push
or
shl
subl
int3
nop
enter
add
inc
mov
jo
mov
mov
sahf
fistpll
hlt
and
inc
adc
ja
aam
cmp
mov
and
bound
call
in
stc
fistps
cld
pop
dec
imul
ljmp
orl
adc
sbb
fcoml
jnp
mul
pop
test
xorb
xor
push
inc
dec
inc
sub
sub
mov
add
in
es
sub
jg
jbe
in
lret
movsb
rorb
roll
cmpsl
and
repz
pop
imul
mov
aad
push
and
sbb
into
icebp
mov
es
dec
scas
je
and
xorl
pop
sub
fwait
out
negl
stc
lret
jmp
inc
bound
sarl
rcll
xorl
aas
aas
orb
jle
mov
outsb
xor
push
pop
mov
nop
pop
mov
jo
inc
jnp
sbb
fldt
dec
inc
add
enter
mov
pop
mov
pushf
cld
jne
sub
cltd
pop
inc
pop
cmpsb
lahf
push
sub
mov
adc
jecxz
mov
sub
in
jp
mov
xchg
mov
pop
leave
repnz
mov
lret
mov
xor
mov
loope
popa
dec
push
sbb
cmpsl
cmc
int3
pop
ficompl
push
fiaddl
dec
mov
sarl
adc
out
rolb
push
in
or
push
pop
sub
sub
in
jl
add
fwait
scas
lock
outsb
ljmp
arpl
xchg
dec
cmp
xorl
xchg
outsb
and
sub
pop
ja
xlat
imul
jle
mov
data16
enter
adc
test
push
inc
addr16
out
inc
fimull
xlat
es
xchg
insb
add
mov
loope
jp
add
push
jmp
xchg
xchg
jecxz
sahf
add
adcl
dec
push
inc
nop
js
cld
pop
cltd
shrb
and
dec
add
push
sahf
lods
pop
sahf
dec
push
mov
push
cmp
xchg
and
inc
xchg
sub
jge
sub
xchg
leave
mov
adc
sbb
add
push
add
imul
cmpsl
and
dec
add
lds
jnp
pop
ficoms
notl
push
or
push
dec
xlat
pop
into
jbe
cmp
inc
in
test
jmp
xchg
shlb
addl
notl
mov
stc
cmp
aaa
sub
dec
mov
jmp
xchg
add
add
and
jne
rcl
shr
lods
jl
fucomip
out
add
adc
cmp
jnp
out
sti
jl
divb
push
or
pop
dec
cmpsb
aas
mov
aaa
mov
push
int3
sbb
movb
sbb
cmp
pop
test
xchg
jmp
and
js
leave
xchg
mov
jl
add
push
mov
rorb
adc
push
or
xor
dec
clc
xlat
dec
push
push
ret
mov
sub
mov
fiadds
inc
and
mov
sbb
add
push
and
out
insl
mov
or
or
lds
popa
xchg
addr16
pop
push
inc
hlt
sar
dec
or
cmpsb
jo
imulb
clc
inc
dec
pop
lret
cmp
and
aad
mov
fisttpll
aaa
lock
or
push
orb
lahf
xchg
xchg
gs
xor
sub
pop
xchg
mov
lret
lds
jmp
shrb
add
aam
mov
push
xchg
xor
mov
dec
mov
add
lahf
shlb
mov
push
pusha
test
movsl
inc
adc
cmp
fsubs
push
neg
xor
xchg
xor
and
mov
xchg
adc
inc
mov
nop
cmp
hlt
cmc
pop
xor
sub
arpl
mov
sbb
jae
inc
leave
aaa
mov
ret
mov
add
call
xor
xor
inc
sbb
jmp
int3
dec
movsb
fwait
cmc
cwtl
inc
adc
mov
sub
jno
mov
cmp
pop
pushf
dec
xchg
and
sarl
pop
faddl
sub
test
scas
aaa
push
add
adcb
xor
fiaddl
pusha
adc
or
rolb
jnp
sahf
sti
int3
test
jae
in
stos
push
adc
int3
movsb
loop
mov
push
ljmp
mov
cmp
outsl
bound
clc
sub
pop
addr16
or
and
nop
fnstenv
ja
and
int
stc
mov
scas
push
add
repz
or
sub
sbbb
cmp
push
sbb
pop
and
push
out
lcall
test
or
out
xor
mov
insl
fnsave
mov
pop
dec
push
xchg
or
pop
sbb
dec
and
stos
adc
lock
rorl
mov
add
fwait
cmc
mov
xor
dec
adc
dec
adc
sbb
ss
fadds
sub
imul
sbb
cmpsl
push
test
inc
enter
fistpll
sub
lds
fisttpll
pop
push
aam
test
ret
sub
jle
shl
sub
mov
pop
lods
cs
push
mov
sub
add
aad
or
xor
sbb
je
rcll
sub
sbb
rorl
adc
test
pop
xchg
inc
add
bound
pop
popl
fucomip
xor
mov
and
xlat
push
mov
pop
arpl
jbe
lds
push
lods
mov
cld
xor
adc
add
push
mov
jg
fs
pop
rolb
jbe
movsl
push
fld
lret
adc
mov
dec
adc
movsb
stos
xchg
in
sbb
arpl
inc
cmp
mov
push
adc
push
mov
cld
mov
mov
add
sub
cmp
mov
sub
sub
enter
inc
das
sub
aas
jg
adc
xchg
jbe
lock
push
arpl
dec
pop
xor
shrb
mov
or
and
xchg
mov
jb
sbb
add
sub
push
ss
xchg
pop
and
adc
pop
add
mov
xchg
dec
mov
sub
test
cmpsl
pop
dec
cmp
jecxz
and
or
jg
mov
lahf
add
mov
cltd
mov
mov
es
cli
jg
jmp
mov
stos
cs
sub
dec
or
mov
push
jbe
leave
mov
inc
and
xor
cmpb
shlb
cmp
sub
xor
pop
add
insb
push
bnd
stos
inc
negb
mov
adc
mov
ss
fs
mov
andb
call
insb
sbb
and
mov
mov
cmp
add
or
xor
pop
pop
sbbb
into
sub
sbb
cmc
xchg
mov
pop
mov
and
mov
pop
jno
inc
mov
nop
fisttpl
insl
arpl
fbstp
popa
dec
or
fstpt
hlt
mov
lds
xor
xor
add
sbb
ja
into
or
subb
addb
lods
push
stc
sti
or
dec
push
fwait
out
lahf
lods
add
std
and
inc
sub
inc
lcall
fadds
dec
or
jp
aaa
pop
outsb
clc
sub
push
test
push
lock
decl
and
int
cmp
sbb
pop
outsb
pop
mov
or
mov
sbbb
xchg
cmc
daa
hlt
sysexit
mov
je
xor
ljmp
stc
dec
insb
sub
adc
pop
dec
rolb
or
dec
leave
add
add
nop
jmp
dec
outsb
mov
sbb
sub
xchg
or
nop
inc
mov
adc
jl
arpl
cld
rcrb
xor
xchg
dec
adc
xor
sub
flds
mov
dec
fs
push
ret
mov
adc
test
fidivl
lcall
mov
in
inc
fmul
sub
add
mov
ret
jns
add
negl
sbb
or
imul
test
push
movsb
sbb
negb
out
or
call
or
dec
mov
inc
or
lret
lods
and
mov
jge
fidivs
pop
jg
or
enter
sbb
hlt
call
in
fs
sub
in
pop
mov
inc
repz
pusha
jns
cwtl
fcoms
clc
inc
insl
mov
or
mov
les
xchg
jecxz
jne
jg
test
adc
je
sbb
mov
push
xor
mov
test
call
adc
mov
push
rol
push
mov
addr16
xchg
fbld
inc
push
xchg
scas
inc
mov
ret
rclb
push
cmp
sbb
push
add
add
dec
push
xor
pop
cmp
outsb
pushf
leave
in
mov
shll
jno
push
loope
popf
or
jnp
jp
mov
mov
ret
test
xchg
bound
push
add
gs
rol
fsts
aad
jbe
js
sbbb
and
mov
mov
pop
data16
sbb
fsubs
stos
call
sub
movsl
or
jp
pop
dec
in
mov
sbb
pop
lahf
lods
data16
scas
cmpsl
xchg
testb
lods
push
mov
mov
or
nop
bound
iret
push
pop
lods
mov
mov
lock
outsb
leave
lahf
sbb
repnz
iret
adc
clc
aam
aam
dec
shlb
sbb
les
loop
sbb
xchg
add
xor
pop
js
scas
rcrl
and
and
mov
dec
insl
ss
out
adc
jae
mov
int
ds
lahf
mov
cmpsb
or
or
xlat
nop
cmp
lods
test
pushf
xchg
or
jmp
cmpsl
adc
ja
pop
cmc
mov
xchg
adc
call
cmp
push
push
sub
test
nop
pop
add
sti
rcll
int
pusha
dec
mov
cmp
push
cmp
rorb
sbb
lcall
pop
inc
pop
push
addl
add
arpl
pop
icebp
insb
or
push
push
xchg
push
ficoms
cmp
jg
add
jns
xlat
inc
iret
mov
rclb
loopne
and
inc
sub
add
mov
sub
dec
sub
adc
ja
inc
xchg
pop
in
sub
push
sbb
std
inc
add
ret
lret
sub
xchg
lahf
test
sarb
mov
les
pushf
pop
mov
fs
or
jbe
xchg
or
inc
enter
add
rolb
inc
add
icebp
outsl
shrl
lret
fistps
cmp
mov
aaa
mov
mov
aas
lock
sti
mov
or
jne
out
lods
cli
jecxz
test
push
js
scas
iret
inc
push
stc
dec
push
pop
xor
arpl
out
cli
xchg
sbb
js
mov
movsl
and
mov
lahf
loop
cwtl
movsl
adcb
leave
popa
loopne
movsb
mov
mov
mov
or
and
ret
shll
lock
add
add
sbb
inc
xorl
add
xor
push
push
lds
push
test
mov
lds
or
das
clc
mov
xor
decl
or
xchg
arpl
sbb
lea
enter
or
repz
xchg
sarl
lock
movsb
dec
enter
dec
inc
mov
int3
ror
pop
data16
test
loopne
adc
add
scas
clc
add
mov
loope
mov
faddp
xchg
pop
pop
jmp
push
jnp
ficomps
jb
lds
lcall
adc
jo
push
pushf
das
sub
loope
nop
js
xchg
repz
ds
push
push
sub
mov
and
pop
leave
dec
jle
xor
fisttps
in
arpl
mov
fisubrl
mov
jo
or
xchg
pop
sbb
mov
pop
movsl
sbb
out
leave
xchg
iret
mov
bound
inc
loope
cmpsl
xor
fimuls
popf
cmpxchg
push
mov
addr16
into
sbb
inc
mov
sarb
fnstenv
enter
jmp
xrelease
add
jl
test
or
jne
call
jne
add
rolb
js
repnz
mov
push
add
xlat
loop
stos
sub
sub
inc
and
mov
bound
fisttpl
insl
sti
inc
and
add
sub
shll
xor
js
addl
cmc
loopne
jecxz
pop
fmull
cmpb
push
jne
mov
xchg
ds
lret
sarl
or
sub
test
push
jae
mov
aaa
mov
mov
fiaddl
stos
xchg
and
sbb
int3
xor
icebp
mov
jmp
rorl
xchg
negb
repz
iret
fcompl
movsl
rolb
pop
add
shlb
sbb
rol
out
jl
cmp
xchg
jl
or
shll
ffree
jbe
pop
mov
mov
mov
mov
stc
add
test
xorb
hlt
mov
jge
shrl
dec
loop
add
shl
mov
or
pop
adc
es
or
sub
add
xchg
or
push
mov
jno
inc
inc
fcompp
sub
je
add
mov
push
sub
out
mov
jl
push
dec
aad
fcomps
arpl
push
movsl
adc
mov
jecxz
sbb
xor
rcrb
lcall
xchg
pop
std
pop
jl
xor
pop
std
andb
or
jge
subb
and
mov
out
jns
fcmovbe
test
sar
xor
xchg
or
jmp
in
mov
popa
fistps
push
daa
jbe
fwait
lods
sbb
push
bound
pop
insb
adc
pop
dec
imul
mov
push
stc
add
cs
repz
jp
shl
mov
rclb
fldcw
mov
mov
push
test
sub
icebp
movsb
xor
loopne
ret
out
cmp
sbb
or
jo
rclb
iret
sbb
shl
pop
aaa
mov
lods
xor
movl
cmp
imul
inc
dec
pop
mov
test
xor
xor
sub
cmpb
cmpsb
lret
inc
in
xor
add
cwtl
jge
in
xchg
addr16
clc
jno
mov
movl
pop
push
inc
sti
mov
je
inc
mov
divb
fs
or
sbb
push
xchg
test
and
stos
push
movsb
dec
jno
lahf
mov
sub
and
in
sti
ss
sarl
dec
addb
jbe
and
or
pop
xor
ret
not
rcrl
cmp
dec
fdivs
mov
and
cmp
or
dec
das
xchg
iret
insl
or
sti
or
jg
push
in
pop
loope
xchg
sbbl
mov
jmp
dec
sbb
lods
movsb
inc
push
mov
xchg
or
dec
jle
pushf
add
enter
call
fistpl
xor
and
icebp
hlt
lret
pop
pop
sub
xor
xlat
mov
stos
sub
aad
mov
push
dec
popf
jnp
shll
or
pushf
out
jecxz
pop
mov
pop
inc
xor
fisubrl
sahf
mov
push
call
inc
mov
cwtl
sbb
xor
push
imul
arpl
pop
fisttpl
in
mov
inc
sbb
inc
loopne
dec
fs
negl
out
dec
jno
stc
dec
lods
clc
and
dec
pop
push
and
jp
mov
es
rcrl
mov
jae
add
push
jle
sub
ljmp
jge
dec
sub
call
xchg
je
and
pop
push
mov
and
and
scas
andl
ja
pusha
fistl
dec
pop
aam
jnp
xlat
inc
cld
xchg
dec
pop
shlb
loopne
jno
adc
cmp
add
sbb
cmpb
jae
sbb
shrb
dec
je
scas
xor
or
xchg
lods
sub
inc
mov
inc
scas
lods
jecxz
enter
add
adc
and
imul
dec
sarl
and
cwtl
movsb
dec
or
sbb
sub
xchg
mov
and
sub
inc
mov
lods
imul
pop
repz
jb
mov
test
sub
and
xchg
dec
dec
pop
mov
jae
fwait
and
orl
xor
test
xor
out
ret
xchg
outsb
jne
test
sbb
jl
sbbl
xchg
sbb
inc
xchg
push
mov
sub
orb
xor
enter
xchg
lock
inc
add
adc
mov
or
fcoml
arpl
ret
dec
sti
mov
jo
jge
xchg
inc
sarb
popf
mov
inc
push
cmp
sub
ss
cmc
mov
inc
fnsave
pop
push
xchg
mov
pop
sub
out
xor
cltd
sub
les
cmpsl
aad
je
or
iret
mov
mov
int3
addr16
fisubs
pop
rolb
das
inc
das
aas
or
mov
pop
mov
aas
mov
inc
and
mov
out
cmpsb
push
adc
popa
push
and
pop
cmpsl
jno
pop
or
jnp
clc
xchg
jge
aam
movsb
loop
adc
push
lods
add
or
loope
push
mov
out
sbb
scas
adc
push
sbb
roll
or
dec
ror
mov
inc
xor
cmpsl
sub
mov
or
inc
or
sbb
add
pop
lock
push
jnp
or
outsb
shrb
xchg
jno
push
int
stc
int3
xchg
jl
or
in
lahf
push
cmovo
mov
cmpsb
repnz
outsl
in
add
mov
push
lret
dec
mov
xchg
pop
xchg
gs
mov
pop
xor
add
into
add
roll
add
insb
adc
js
aaa
lret
stos
push
pop
mov
push
loope
loop
push
and
orl
dec
xorl
subl
or
mov
rol
push
nop
adc
fmuls
xchg
lcall
sbb
lods
lock
ja
js
mov
push
ja
xchg
int3
jp
loope
push
adc
dec
mov
ficomps
mov
adc
inc
fldcw
pop
into
mov
movsl
pop
fs
push
mov
push
sub
roll
pop
dec
movsb
pop
mov
inc
xchg
data16
cmpsl
pop
or
adc
xchg
jb
es
push
xor
cmpl
jns
add
rorb
inc
lock
pop
test
inc
inc
adc
sbb
jbe
sub
push
test
loope
cmp
dec
mov
stos
push
sbb
test
add
cmpsb
xchg
clc
or
and
sbb
pop
cs
jne
jnp
xor
adc
add
imulb
mov
dec
jno
cmp
xchg
fisttpll
dec
inc
and
stos
push
xor
in
sub
into
adc
adc
mov
push
jb
ja
stos
and
push
stos
xor
push
pop
sub
mov
sbb
mov
and
jbe
xlat
dec
and
jae
jne
sarl
xor
movsl
lods
enter
mov
cmp
outsl
into
sbb
scas
aaa
jecxz
scas
xchg
pusha
ret
dec
add
pop
shr
imul
rcrb
inc
fisttps
leave
xchg
cltd
les
and
ror
xchg
imul
ljmp
mov
in
mov
pop
rcrl
sub
daa
or
test
sub
fistl
mov
sarb
add
dec
rolb
arpl
call
out
or
mov
cmpsl
inc
jbe
sub
test
pusha
add
pop
and
lods
pusha
mov
dec
or
loopne
adc
scas
or
or
shl
sar
jbe
jb
mov
xor
xchg
xlat
pop
or
mov
sub
cmp
xchg
pop
push
mov
xchg
push
xchg
or
add
in
in
jge
fwait
icebp
inc
inc
dec
fstpl
fdivrl
push
loopne
mov
sub
mov
cmpl
stos
lods
or
xor
movsl
dec
inc
mov
or
push
or
incl
add
mov
jns
out
add
orl
adc
lods
inc
xchg
add
mov
mov
imul
outsb
popa
jp
xor
dec
mov
dec
push
aad
lock
incl
data16
mov
daa
popa
pmulhw
jecxz
je
xor
ror
jge
push
fldl
xor
fidivrl
test
repz
cmp
sbb
sbbb
sub
fstpl
push
cmp
xor
pusha
movsb
pop
out
fmuls
sbb
cld
pop
fists
mov
xchg
add
sub
push
mov
mov
mov
or
mov
mulb
addr16
jg
fs
int
stos
mov
repz
or
mov
fdivs
scas
add
sub
or
sbb
ret
sub
push
mov
push
jbe
xchg
inc
std
nop
mov
xchg
mov
mov
ret
mov
aam
inc
sub
push
dec
dec
jl
and
in
imul
inc
adc
cmp
enter
adc
jg
and
out
sub
xorb
ljmp
adc
out
push
shlb
xor
mov
orb
addl
push
inc
sbb
rolb
or
pusha
insb
jp
test
add
lret
popf
lods
ret
pop
pop
movsl
jmp
push
lock
test
stos
cmp
dec
xchg
ja
mov
lcall
test
xchg
push
mov
push
xchg
enter
enter
sub
push
in
sbb
jns
xchg
arpl
mov
test
decb
and
add
nop
xor
sbb
pop
stc
push
pusha
sar
aas
outsl
xor
bswap
rcrl
push
xchg
icebp
mov
fisubrs
imul
jae
sarl
gs
andps
jns
push
push
dec
mov
jne
jns
aam
xor
clc
push
pop
push
xchg
and
sbb
pop
mov
inc
icebp
xor
adc
mov
add
ss
and
cli
loopne
cmp
cmp
inc
push
xorb
cli
inc
cmc
inc
mov
adc
enter
out
out
int3
dec
dec
pop
pop
sbb
adc
ret
or
add
mov
adc
cmp
mov
xchg
test
adc
pop
inc
aad
mov
sub
or
jns
add
mov
cmc
add
or
sub
xor
stos
cmp
mov
cs
int3
into
scas
nop
popa
mov
mov
das
inc
gs
lahf
mov
aaa
nop
test
cld
std
xchg
inc
cwtl
sub
cmp
push
test
or
mov
stc
and
mov
sub
adc
mov
push
push
xchg
imul
in
sbb
add
and
inc
clc
and
pop
das
push
fdivs
xchg
ljmp
and
jmp
push
in
xchg
mov
fidivrs
incb
sbb
fdivr
int
add
outsb
js
ljmp
inc
lcall
lods
push
sbb
idivl
pop
add
mov
rorl
in
icebp
mov
shl
adc
jp
inc
inc
mov
es
icebp
adc
xchg
adc
sub
xchg
inc
pusha
bound
lds
sbb
sar
xor
movsb
test
gs
pushf
mov
popf
adc
cwtl
stc
cmp
daa
push
sub
lods
push
jp
mov
ljmp
repz
dec
add
inc
cli
push
add
inc
dec
push
xor
movsb
push
mov
sbb
inc
xchg
fsqrt
and
dec
lds
sbbb
sub
ds
push
in
xchg
imul
adc
dec
or
cmc
or
dec
pop
ljmp
adc
cmpsb
shlb
mov
inc
bound
inc
clc
cmc
push
push
jbe
nop
lcall
addr16
mov
negb
mov
xchg
mov
push
mov
decl
push
lods
adc
sub
jp
and
ss
cmpsb
adc
push
popa
nop
mov
lcall
inc
or
cmp
rcrl
clc
xchg
shlb
xchg
test
push
stos
in
test
jno
dec
inc
mov
or
jg
fcomps
mov
outsb
loop
mov
call
sub
clc
jge
sahf
mov
in
stos
xchg
mov
pop
sub
xor
push
mov
outsl
rcr
ret
nop
jge
hlt
ljmp
push
rclb
sub
ret
cmovno
lret
outsl
add
sbbl
inc
out
loop
test
sahf
push
jns
fsubrs
aam
popl
adc
shlb
and
test
jmp
pop
dec
and
les
aam
jnp
dec
mov
inc
inc
test
rcrb
js
jecxz
div
dec
rol
push
push
inc
call
or
leave
push
sti
adc
jp
fs
dec
jmp
inc
cmp
adc
pop
nop
add
dec
and
out
adc
or
inc
test
clc
sub
int
sbb
daa
or
mov
xchg
push
test
mov
fldl
jge
xchg
pop
mov
leave
enter
rcrb
and
push
repz
roll
mov
jecxz
leave
add
mov
mov
or
out
rep
sub
shrl
imul
lahf
out
mov
scas
sub
add
enter
in
push
or
mov
push
inc
loopne
adc
push
xchg
xchg
push
rolb
xor
mov
clc
jb
incl
push
jecxz
loopne
mov
jb
push
push
dec
mov
sbb
rclb
mov
xor
ss
inc
inc
fcomi
or
sub
adcl
and
mov
jecxz
cld
jp
inc
xor
cmp
hlt
je
jmp
xor
xor
push
icebp
lret
stc
pop
std
mov
not
sbb
movsb
in
dec
cs
mov
sub
call
adc
shl
mul
inc
xor
sub
lcall
push
pop
inc
mov
comiss
add
repnz
orl
xor
imul
pop
pop
inc
lahf
fldl
gs
mov
mov
mov
sub
cmpsb
js
mov
std
incb
nop
cltd
nopl
mov
shlb
pop
jle
and
lds
pop
shld
lcall
cmpb
pusha
pop
mov
mov
xchg
sub
pop
test
orb
es
add
dec
jo
mov
adc
xlat
and
icebp
add
fwait
add
or
test
idiv
adc
imul
mov
lret
pop
or
cwtl
adc
pusha
lcall
stos
mov
pop
out
inc
inc
push
mov
subb
sub
pop
push
inc
sub
cmp
dec
push
add
fs
push
push
inc
test
and
add
pop
mov
add
call
fimuls
lods
insl
in
push
push
popf
nop
push
lods
dec
adc
add
xor
arpl
pop
and
inc
and
jno
mov
mov
and
lea
and
adc
sbb
add
jne
pusha
cmp
test
cmpsb
cmp
or
and
subl
sub
jl
lods
test
in
dec
insl
out
pusha
cmp
mov
adc
xor
cli
and
mov
jmp
divl
lahf
jmp
mov
ror
mov
xchg
lahf
mov
pop
pop
inc
orl
addl
aas
bound
push
mov
pop
inc
ficoms
inc
test
xchg
es
add
lds
leave
dec
push
adc
push
mov
scas
adc
sub
addb
mov
cli
xchg
iret
mov
jno
lcall
lahf
or
or
in
mov
jl
incb
lds
xor
lods
ljmp
fistpl
xchg
je
adc
inc
cltd
mov
add
jbe
hlt
mov
pop
add
sbb
jmp
push
inc
pop
push
jge
or
sbb
cmpsl
pop
or
fcmove
loop
or
mulb
xlat
popa
mov
or
shll
jno
cld
mov
paddb
cwtl
movsl
jne
or
cmp
cmpsl
inc
cltd
cmpb
adc
lahf
jmp
inc
loop
stc
ror
xor
jno
mov
adc
and
mov
mov
ret
pushf
iret
or
jle
outsb
pop
in
mov
inc
insl
adc
sbb
dec
xor
mov
cmp
js
pop
push
dec
int
adc
stos
popa
mov
pop
nop
sub
mov
sahf
sbb
or
pop
or
sbb
bound
jmp
xchg
pop
or
fsts
cld
xor
pop
dec
jp
sub
push
xor
push
mov
fbld
aas
xor
and
sub
and
rclb
jg
cltd
jle
arpl
add
cmp
rol
add
cld
jle
xchg
mov
ds
bound
or
jo
pop
sbb
out
mov
inc
sti
aam
int
pusha
push
in
movsb
loopne
mov
pusha
icebp
ret
cld
outsl
pop
and
or
imul
and
add
mov
es
dec
addl
add
imul
sbb
jp
rol
xor
cmp
out
add
pop
dec
jbe
in
jge
fisubs
scas
xor
loopne
test
nop
push
pop
std
ja
mov
push
or
sbbl
add
dec
cmc
addb
xchg
mov
or
xorl
mov
push
push
inc
push
sbb
xor
jns
cmp
lahf
movsb
fwait
addr16
into
mov
sbb
mov
shl
sti
pop
xchg
sbbb
jno
dec
sar
fdivr
add
mov
pop
ret
xor
out
push
stos
push
pop
out
push
sub
adc
mov
sub
dec
xor
jmp
xchg
jno
loopne
mov
and
int3
xchg
bound
push
and
xor
push
mov
xor
fnstcw
stc
cld
jns
ret
cltd
aas
sub
jne
cmp
mov
inc
pop
pop
cld
jae
pop
dec
jne
push
mov
rcll
mov
ljmp
or
call
cmp
stos
jl
orb
xor
ret
sub
shr
out
or
inc
fndisi(8087
scas
push
jge
xchg
mov
mov
in
cmp
sbb
adc
lods
clc
pop
bts
das
or
pop
sbb
in
mov
test
xchg
cmpsb
jmp
push
jbe
cld
popf
adc
mov
shll
sub
mov
sub
notb
push
lahf
xchg
xor
cli
cmc
mov
mov
pop
cmc
stc
std
mov
pop
or
xor
push
push
jns
call
icebp
add
hlt
mov
in
inc
pop
mov
mov
mov
fs
stos
sbb
adc
dec
in
and
jo
cmpsl
add
adc
fisubrl
add
aas
push
lods
jns
mov
cwtl
pop
ljmpw
or
clc
and
xlat
subb
out
jp
subb
orb
lods
mov
in
ret
and
cmpsb
mov
imul
cltd
add
push
shlb
pop
je
icebp
adc
inc
lret
jne,pn
xor
dec
jp
push
test
insl
mov
fs
jmp
jge
arpl
jecxz
xor
popa
pop
insl
dec
ja
fs
inc
out
xor
jmp
mov
movsb
sbb
ss
mov
mov
fadd
dec
jecxz
push
pusha
rclb
pop
imul
xchg
dec
addr16
jo
sub
adc
outsl
repnz
dec
jl
mov
inc
jmp
andb
adc
jle
push
jle
pop
push
or
xchg
dec
popf
xor
jmp
mov
inc
add
sahf
xchg
mov
nop
test
fbstp
in
xchg
push
dec
negl
shll
mov
jne
les
ret
pop
leave
push
or
push
xor
fdivr
mov
loope
loopne
jae
fbld
cmp
inc
sub
repnz
or
jmp
mov
mov
dec
sti
adc
es
pop
ja
hlt
stos
mov
dec
jne
inc
xchg
mov
sbb
jb
stos
or
int3
repnz
rclb
xor
inc
nop
je
xchg
mov
repz
jbe
jno
cld
stos
lret
sahf
clc
sub
pop
out
inc
sub
pop
sub
jle
pushf
pop
adcb
aas
sub
mov
or
inc
aad
bound
cmp
pop
add
ss
sub
or
stos
cmp
push
inc
imul
mov
sub
out
out
in
arpl
adcl
sbb
adc
lds
jmp
push
cmpsl
bound
xor
and
mov
sbb
inc
sub
ljmp
insb
xor
mov
mov
inc
insl
fst
or
mov
cli
pop
cmc
mov
andl
test
or
mov
sbb
inc
or
call
lret
sub
push
xor
jo
je
rcrb
sbb
add
cltd
stos
push
push
inc
jmp
dec
fcmovu
and
aad
cmp
into
push
inc
in
sbb
xchg
add
add
cld
rcll
push
or
dec
mov
loopne
ficompl
or
cmp
inc
sbb
inc
andl
bnd
mov
add
pushf
das
and
daa
xor
rcll
aas
or
fimull
xor
scas
fwait
sbb
or
ds
dec
sarb
icebp
repz
inc
mov
je
push
test
scas
out
clc
sahf
std
dec
pushf
ds
pop
xor
dec
outsb
push
std
mov
pop
int
je
stos
inc
rol
idivb
ret
and
pop
and
int3
jl
xor
mov
sbb
and
and
pusha
call
test
mull
sbb
pop
mov
pop
fldl
add
sbb
push
mov
or
shlb
imul
xchg
pop
andl
sbb
adc
imul
shl
scas
mov
sub
cbtw
sbb
movsb
fdivrs
loop
iret
mov
xor
cltd
pop
mov
mov
mov
adc
sub
lds
test
out
add
xchg
mov
stos
and
adc
arpl
popf
and
or
push
pop
adc
pop
or
cmp
enter
cmc
mov
dec
ds
add
test
pop
loopne
daa
xor
sahf
movsb
sbb
sbb
cmp
xor
dec
add
shll
and
fidivs
xchg
add
and
or
int
adc
cmpsb
hlt
rcrb
xchg
add
mov
jo
inc
ficoml
and
mov
add
stc
mov
jmp
out
stos
push
rcll
outsb
shlb
cmp
imul
inc
das
push
inc
inc
add
mov
jae
jae
popf
test
or
insl
adc
mov
or
es
xlat
hlt
cli
xchg
mov
subl
pop
jbe
sbb
clc
and
ja
outsb
xor
cli
mov
arpl
cld
std
lret
or
insl
pop
popa
xchg
arpl
pusha
add
in
xor
cs
jno
test
push
or
push
and
mov
push
hlt
push
push
or
jmp
mov
push
into
mov
cs
or
dec
ret
jp
lcall
jle
mov
xchg
or
jge
movsl
scas
scas
pop
and
call
mov
call
movsb
gs
and
stos
mov
add
sub
in
and
sbb
xorb
lcall
adcb
roll
repnz
dec
cmp
clc
pusha
sbb
pop
push
add
ja
cld
mov
pop
sbb
scas
subl
adc
dec
xor
mov
bound
scas
adc
xlat
dec
add
inc
xchg
sbb
shrb
xor
adc
pop
cmc
jns
cmpb
sub
cld
nop
in
and
ljmp
adcl
xor
cld
lret
push
xchg
jge
or
loope
bnd
cmp
lahf
cwtl
lock
jo
test
sbb
ret
fisubrs
sbb
flds
dec
roll
xchg
mov
mov
sti
lret
jmp
mov
pusha
sbb
lods
xor
mov
pop
inc
push
outsb
bound
outsb
stos
dec
divb
ljmp
mov
loopne
jae
mov
and
and
mov
push
pusha
pop
fisubl
pop
mov
mov
aas
or
jae
andb
xchg
adc
sbbl
add
mov
add
xor
hlt
adc
pop
xchg
lds
cmp
mov
dec
mov
mov
repnz
push
sub
std
or
push
imul
leave
xchg
inc
das
sti
sbb
mov
inc
mov
es
pop
sub
xor
mov
ud0
int
push
lods
push
dec
pop
xchg
sub
cmp
xchg
movsl
popa
sbb
push
sub
dec
xchg
dec
adc
mov
out
push
lds
stc
push
movsl
mov
inc
stos
jb
sbb
mov
jg
movsb
dec
dec
sbb
jb
pop
dec
sub
mov
ss
movsb
sub
inc
lret
fs
inc
adc
ja
stos
or
jae
and
xor
sub
cmc
into
bound
test
mov
cltd
dec
fsubrs
clc
mov
dec
orb
stos
inc
sbb
pusha
das
and
fiaddl
pusha
shl
es
add
and
jo
lahf
and
dec
ret
data16
pusha
das
xchg
popa
xor
lds
sti
add
inc
and
mov
add
add
and
dec
inc
add
add
add
add
push
or
and
loopne
js
aaa
mov
lret
dec
adc
jmp
xchg
imull
cmp
push
cmpsb
test
inc
fsubrs
push
and
jl
xchg
mov
add
xchg
mov
dec
add
in
mov
icebp
jo
fdivrl
jb
inc
fwait
nop
or
push
orl
pop
or
mov
loopne
xchg
test
test
jg
pop
push
in
dec
dec
inc
test
jp
push
and
imul
sub
sbb
pusha
dec
sub
mov
in
pop
and
and
movsb
xchg
dec
jnp
je
inc
add
aas
test
xchg
out
add
out
incl
loopne
xor
test
xchg
add
push
outsl
and
cmp
iret
popf
popa
add
outsb
sbb
inc
cmp
or
xor
sub
sub
addb
inc
sub
or
dec
or
push
movsb
dec
test
inc
dec
pop
pop
xor
js
push
add
bound
jo
add
xchg
push
sarl
jecxz
mov
mov
pop
or
or
mov
add
adc
push
data16
lahf
inc
inc
xorb
and
lcall
xchg
cmc
xchg
fidivrs
jno
add
ret
push
icebp
inc
inc
jne
push
add
dec
add
adcl
sbb
test
or
jnp
cmp
jp
dec
daa
das
inc
pop
mov
cs
in
inc
popa
inc
ljmp
inc
stos
test
jmp
push
xor
sub
mov
out
add
add
cltd
dec
pusha
inc
movsl
push
and
pushl
test
sub
fstpt
mov
pop
loop
stos
xchg
hlt
arpl
test
adc
aam
aaa
imul
cmpsb
or
rcr
cmp
out
cmp
xchg
and
out
sbb
insl
mov
movsb
cld
mov
test
stc
test
jp
fiaddl
fistpl
jne
hlt
ret
lds
aam
mov
add
jbe
in
sub
imul
xor
pop
ja
add
stos
orl
cmp
pop
add
pop
in
jo
movsl
imul
or
mov
add
je
out
in
repz
setns
cmp
pop
sbb
das
mov
mov
sbb
add
stos
negl
jle
in
ret
or
fwait
jle
mov
scas
mov
aas
jl
mov
inc
mov
movsl
in
mov
push
dec
sarb
ret
xchg
psllq
in
mov
js
mov
mull
shrb
nop
mov
mov
mov
push
xchg
dec
in
ret
mov
xchg
fwait
cli
int3
scas
psrad
aas
int
inc
in
cwtl
inc
int3
sbb
inc
sub
popa
fistpl
cld
pop
scas
add
mov
es
jo
fcompl
dec
out
cmc
sbb
lea
pop
adc
jns
daa
mov
int3
clc
out
int3
ja
mov
stc
outsl
cltd
push
insb
cmp
pop
shll
dec
popf
repz
mov
inc
daa
sub
sbb
xor
pop
cmp
cmc
xchg
scas
sub
adc
in
std
std
movsb
mov
push
repnz
xchg
mov
mov
sbbl
stos
push
xchg
testl
add
adc
addr16
push
mov
dec
jns
js
int
dec
mov
out
call
mov
imul
jmp
addr16
cs
or
popf
jne
insl
jge
pusha
nop
ror
fstpl
js
lcall
dec
aaa
mov
ljmp
adc
outsb
mov
out
push
pop
pop
mov
or
pop
push
aaa
insb
repz
out
dec
fsubp
xchg
xchg
adc
mov
mov
idivb
outsb
mov
loope
jmp
mov
in
lcall
or
jbe
sar
outsl
mov
cli
dec
lock
aad
mov
jg
mov
and
arpl
test
addl
xchg
ret
cs
sub
jcxz
ficoms
sahf
insl
mov
imul
cmp
cltd
bound
imul
inc
or
add
cli
in
movsb
ljmp
repz
cmp
nopl
mov
xchg
jl
mov
mov
xor
mov
test
adc
xor
andb
mov
push
push
xlat
push
mov
fimuls
scas
movsb
lods
xor
fldcw
mov
iret
arpl
out
jns
out
scas
cmp
lret
cltd
push
pop
push
in
aam
fisttpl
daa
mov
repz
jne
jg
adc
xchg
scas
je
push
inc
pushf
jnp
fmulp
shl
xchg
mov
mov
cmpsl
dec
cmpsl
mov
sbb
sbb
in
mov
inc
in
mov
imulb
std
fsubl
mov
outsl
pop
movsl
jle
push
repz
push
cmpl
mov
inc
or
mov
lret
cltd
mov
mov
mov
adcl
cmc
xchg
frstor
mov
cmp
insb
into
push
out
lahf
ds
je
mov
dec
jnp
dec
mov
mov
jmp
mov
in
cmp
add
addr16
mov
push
imulb
pusha
jb
xchg
fdivp
mov
popf
cmp
dec
subl
jecxz
push
push
ss
aaa
push
jp
mov
adc
insb
mov
adc
stos
jb
mov
stos
jl
xchg
in
test
xor
fbstp
push
clc
mov
mov
lahf
xor
outsl
daa
cli
or
and
aad
sbb
inc
and
jae
or
sub
rolb
aam
int3
lcall
sbb
jae
add
xchg
add
mov
sub
adc
mov
and
adc
lock
addl
pusha
sbb
add
outsb
push
out
xlat
push
nop
bound
es
pop
enter
pop
push
insl
fisttpl
xchg
inc
testb
das
fidivl
inc
ja
int3
adc
insl
nop
int3
testb
mov
lret
push
sub
and
movsb
jbe
and
push
inc
and
adc
sbb
adc
dec
adc
and
push
pop
mov
xor
adc
int3
adc
mov
push
adc
or
xor
imul
xchg
xor
test
add
push
lcall
adc
imul
sub
adcb
popa
xchg
or
shlb
bound
add
shrb
mov
mov
push
in
out
lods
add
jmp
xor
fs
sub
pop
push
stos
xor
nop
into
jne
inc
add
xor
or
mov
cltd
lock
stos
popa
push
mov
jl
or
rorl
hlt
sub
es
or
cmpsb
mov
or
test
xor
rolb
push
fidivrs
push
scas
cwtl
push
pop
hlt
push
or
test
inc
add
sub
pop
pop
xor
inc
xchg
cmpb
xchg
imul
sahf
arpl
jmp
jmp
rcll
rcr
inc
add
fs
sbb
sbb
in
rorb
xchg
je
call
int3
push
xchg
add
push
xor
push
dec
addr16
mov
adc
rol
pop
mov
shll
popa
fldt
pop
mov
adcl
sub
lea
xor
call
sbb
in
inc
rolb
or
mov
xchg
pop
inc
and
es
mov
jnp
xchg
mov
pop
push
test
inc
push
pusha
push
rcrl
or
xor
lock
sbb
es
sbb
push
inc
cwtl
lea
jb
lods
push
dec
push
mov
xor
push
xchg
sub
mov
movsl
or
or
push
and
rorb
enter
rol
push
mov
cmp
lret
testb
add
sub
in
ret
sub
dec
add
outsb
and
push
jns
andb
loopne
movsl
adc
mov
jmp
dec
ljmp
shl
cmp
lods
outsb
pop
cmpsb
je
sub
add
test
popa
push
in
icebp
lcall
push
mov
fucomp
push
out
and
mov
shrl
and
inc
mov
push
lea
push
xchg
mov
add
push
push
inc
rolb
inc
push
inc
nopl
add
inc
pop
xchg
shrb
repnz
pop
aas
sbb
insb
or
test
and
and
arpl
push
xchg
push
mov
rolb
stos
adc
xchg
jno
jne
lret
test
cmpb
ja
push
test
subb
in
lret
cmp
iret
sub
popa
mov
shrl
and
stos
mov
push
push
cs
jmp
insl
add
xor
in
inc
add
pop
and
inc
push
add
mov
pusha
inc
add
xchg
js
mov
into
pop
sub
ret
xor
std
adc
mov
sub
cmp
pop
mov
sub
sub
in
add
lods
pop
adc
lock
repnz
loop
movsb
lcall
adc
popa
sbb
mov
mov
add
out
sbb
mov
mov
jb
int
add
aam
and
arpl
je
imul
xorb
ss
xor
mov
cmp
ret
dec
add
push
xor
bound
xor
es
mov
mov
mov
add
loop
fs
js
leave
pusha
cmp
out
dec
mov
fcoml
in
hlt
fiadds
rcl
int3
test
mov
orb
loopne
out
cwtl
sbb
lods
push
icebp
sbb
jb
add
lds
lock
xlat
add
add
add
add
add
add
add
add
add
add
dec
xchg
and
adc
inc
test
in
dec
add
testl
mov
cltd
dec
add
xchg
andb
push
jle
sbb
inc
pusha
int
or
mov
xchg
add
xor
insb
iret
xchg
push
inc
adcb
test
xor
jns
xor
mov
sub
insb
loope
in
test
lcall
adcb
sub
jg
js
pop
jae
pop
or
xchg
in
ret
cmpxchg
dec
ds
add
dec
jb
int3
or
mov
mov
add
out
cmpsb
ret
sbb
or
std
and
and
add
mov
mov
repz
push
shlb
stc
imul
push
clc
lea
mov
scas
sbb
cmpb
push
std
jge
mov
push
jg
mov
or
out
lods
nop
add
mov
lret
ds
push
and
push
ds
dec
cltd
lock
int
out
pop
or
cwtl
cmp
daa
mov
sub
and
stos
lcall
fdivrl
pusha
xorl
stos
mov
aad
and
push
out
vmovss
frstor
jbe
imul
in
inc
cltd
or
cmp
mov
cli
dec
jne
xor
test
dec
pop
mov
push
les
lret
sahf
ret
xchg
and
jl
add
test
mov
repnz
arpl
outsl
jg
mov
sub
rcrb
aas
push
cmp
jae
mov
ret
scas
hlt
add
mov
xor
push
cmpsl
xchg
out
inc
add
jl
outsl
push
std
clc
xor
lods
sub
push
lahf
dec
xchg
pop
addb
shrb
rcr
loope
add
jle
int3
mov
pop
push
mov
popa
pop
aam
jmp
jo
in
inc
pop
xchg
sub
mov
aas
or
cmpsl
lds
pop
std
and
pop
mov
mov
sub
rcl
shll
sti
mov
movsb
cmp
leave
pop
mov
imul
out
inc
jne
ja
fwait
xor
outsb
fnstenv
jmp
arpl
das
or
dec
xchg
lahf
cli
rorb
xchg
sub
fistpl
nop
push
xchg
sub
pop
out
inc
addl
inc
rol
adcb
xor
popf
push
in
add
loope
aad
xchg
inc
or
inc
add
pusha
add
push
and
sub
jge
xchg
inc
ja
stos
dec
gs
push
fcoms
pop
ja
adc
jb
mov
or
addb
pop
loopne
add
adc
sub
shl
adc
add
mov
push
lea
lods
lret
pop
cmpsb
lods
sbb
pushf
dec
rorl
mov
dec
adc
cs
aaa
add
mov
sub
sub
mov
out
leave
cmp
adcb
shll
mov
mov
push
push
mov
inc
push
xor
xchg
movsb
int3
mov
in
movsb
shlb
sbb
sbb
shrb
mov
subb
lock
sbb
mov
adc
pop
rclb
or
movb
test
inc
ja
enter
add
pop
pop
jge
mov
cmp
or
jno
mov
bound
lret
sbb
andb
add
lds
and
ret
adc
push
adc
xchg
xchg
fs
sub
cmp
cmpsl
imul
dec
stos
test
or
lea
pusha
test
inc
insb
sti
push
movsb
add
sub
xor
rolb
or
ret
mov
sbb
shll
loope
cli
ror
jge
dec
sbb
xchg
lds
bound
xchg
add
mov
push
jmp
dec
movsw
jge
push
jno
add
jmp
call
xchg
cmp
fadd
shlb
adc
orb
sbb
mov
mov
jge
sbb
mov
and
dec
add
xchg
xchg
mov
inc
push
inc
push
test
sub
ss
push
js
ss
pusha
lcall
xor
add
add
mov
push
sbb
inc
mov
rcr
cmp
xchg
push
or
pop
pop
addb
and
inc
mov
adc
mov
out
xchg
clc
daa
imul
or
mov
mov
push
stos
testb
fwait
mov
in
mov
enter
rolb
dec
iret
cmovp
add
cmp
data16
xlat
in
adc
add
jnp
pop
cwtl
insl
xorb
mov
incb
or
dec
fcoml
add
negl
dec
decb
imul
add
jne
cmp
cld
lea
xor
adc
fdivr
jae
add
xchg
cltd
dec
mov
or
pop
and
mov
jb
pop
sarl
fisttpll
inc
test
jmp
cmp
pop
movsb
movsb
std
stos
pushf
lret
sub
dec
repz
mov
int
notl
sbb
ret
icebp
fwait
add
in
add
dec
cwtl
pop
push
mov
xor
mov
gs
sahf
pop
mov
add
cld
or
repnz
arpl
call
push
insb
pop
push
jecxz
mov
pop
les
mov
sub
and
sub
dec
repz
aaa
or
push
and
cmpb
loope
aaa
cmpsl
cmp
notb
push
int
sbb
sbb
sbb
xchg
fstpt
xchg
mov
jnp
jno
stc
dec
aam
or
adcb
test
jno
movsb
mov
push
scas
scas
jnp
int
sub
mov
out
fcom
and
push
es
enter
pop
xchg
pop
sar
adc
inc
es
cli
jb
inc
adc
sahf
ret
and
jmp
mov
cmp
sub
cmp
test
push
test
adc
mov
popf
add
cmp
mov
cmp
lret
repz
sbb
aam
push
jmp
and
mov
outsl
pop
xlat
jp
cmc
sub
pop
cwtl
mov
inc
fwait
dec
std
pusha
push
add
sbb
ljmp
add
enter
movsl
pop
cmp
mov
push
sub
cmp
mov
frstor
push
xchg
imul
imul
mov
into
in
or
es
lods
and
data16
or
pusha
push
enter
xchg
mov
or
adc
out
sbb
movsb
inc
popf
adc
dec
subb
or
gs
cld
add
mov
xchg
lret
sub
add
adc
cmp
add
dec
cmp
dec
iret
push
pop
cmc
inc
aaa
shlb
orb
adc
mov
adc
dec
shll
inc
and
mov
add
mov
or
dec
cmp
test
dec
jne
or
andb
and
enter
rcrb
cmpb
xchg
cld
movsb
insl
lods
pop
cmpsl
mov
mov
adc
mov
cmpsb
xchg
js
jnp
push
push
into
je
aas
shr
fimull
pop
xchg
xor
subl
sub
stos
mov
push
push
push
mov
cmp
test
add
loope
adc
test
add
loop
mov
push
xchg
xor
add
fstps
sbb
add
shl
loopne
xchg
inc
mov
cmp
inc
or
xor
flds
lret
dec
sub
sub
gs
xor
push
adc
ffree
dec
pop
test
es
pop
jp
pop
push
jle
cmp
ljmp
and
inc
sub
addr16
add
xchg
add
inc
cmpl
cmp
mov
call
add
sbb
aam
xor
faddl
inc
mov
and
inc
or
mov
dec
mov
int3
add
aam
sub
mov
test
jne
add
push
test
popf
sbb
ret
jp
mov
mov
test
add
fwait
pusha
pop
and
sbb
arpl
gs
jnp
adc
loopne
inc
mov
cmp
mov
sbb
or
xlat
mov
dec
es
cmp
in
rclb
jnp
scas
ljmp
loopne
nop
and
sarb
ret
int3
jp
test
in
adc
loopne
mov
sti
jmp
mov
call
es
and
sub
push
loop
add
lea
mov
aaa
xor
xor
jmp
inc
inc
or
lret
test
sub
cs
pop
dec
sub
subb
cmp
sbb
or
sub
add
sbb
xchg
xchg
and
dec
sub
cmpsl
dec
push
popf
sub
or
fs
mov
xlat
stos
dec
imull
mov
mov
aaa
das
fidivrs
xchg
popa
xorl
movsb
jb
dec
pushf
pusha
cwtl
dec
hlt
fnstenv
sub
xchg
mov
and
popf
mov
lea
mov
add
adc
scas
inc
mov
mov
gs
hlt
mov
add
jbe
inc
lcall
adc
ret
adc
dec
out
repz
idivl
push
rclb
or
xor
lock
push
mov
push
mov
jmp
mov
cmp
lea
xchg
cmp
push
add
in
and
push
setg
adc
inc
loop
dec
ret
icebp
add
pop
mov
sub
les
mov
xor
mov
jge
xor
pop
mov
lds
lock
fbld
clc
mov
loop
cmp
jle
rol
ret
out
iret
loope
xorb
mov
xchg
push
nop
jle
cmp
and
in
aas
aam
xor
or
fidivrl
add
adc
pop
or
in
xchg
insl
xchg
sub
inc
and
push
movsl
test
mov
sarl
scas
iret
adc
out
xor
push
ficoml
ds
cli
jecxz
nop
in
xchg
adc
xlat
xchg
pop
mov
add
fsubs
cmp
ret
jb
jmp
hlt
lea
mov
ds
or
pop
mov
xchg
inc
and
cmp
and
insl
push
and
dec
ret
pop
subb
adc
shlb
adc
mov
or
mov
mov
add
adc
pop
xor
outsl
adc
xor
ljmp
aas
pushl
shlb
lcall
sub
mov
xor
test
or
pop
sub
xchg
adc
gs
decb
popf
inc
cmc
xchg
sub
rclb
pop
or
call
mov
call
sub
push
fistpl
lods
adc
shrl
popf
push
add
enter
insb
nop
movsb
push
cmp
shr
add
repz
add
in
insl
scas
les
pop
rolb
insl
inc
cmpsb
ja
cmp
mov
dec
mov
stos
ret
jle
sbb
pop
out
cmpb
out
ret
pop
out
inc
fimuls
lret
jmp
dec
jae
inc
push
xor
sub
pop
test
push
and
push
mov
xchg
push
lods
inc
sub
jb
ja
mov
adc
sub
pop
ficoml
sub
ss
leave
add
inc
arpl
cmpsl
add
into
dec
xor
out
sbb
sbb
push
pusha
inc
pop
mov
mov
pop
pop
gs
push
mov
ret
sbb
cld
mov
aad
xchg
or
inc
mov
or
push
cmp
fldcw
dec
xchg
mov
pop
scas
dec
mov
into
inc
cltd
xor
mov
add
or
or
mov
mov
fbld
insb
mov
push
jne
stos
insb
pop
mov
sbb
or
cs
nop
adc
bound
adcl
xchg
leave
mov
add
imul
push
pop
sub
ds
xchg
push
ret
repz
sbb
pop
adc
arpl
pop
and
dec
cmp
add
loope
aam
jns
or
or
add
and
stos
inc
adc
push
adc
push
pop
xor
dec
test
add
out
adc
enter
push
mov
mov
rcll
aad
aad
shr
adc
or
in
bound
push
test
jmp
sub
dec
adc
pop
pop
outsb
stos
push
sub
test
pop
loopne
cmp
sahf
cmp
enter
sbb
jb
nop
inc
dec
mov
pop
or
push
xchg
cltd
xchg
lcall
xchg
lds
pop
jne
or
loop
clc
cltd
and
arpl
jp
rorl
lahf
mov
shlb
cmp
test
add
fildl
sub
ret
xor
xor
in
ret
in
or
xorl
faddl
cmp
inc
jnp
loopne
fldl
ja
sbbb
ret
gs
cwtl
pop
inc
sub
jno
sub
sbb
mov
mov
inc
cmc
and
scas
inc
inc
in
xchg
je
inc
sub
push
dec
mov
pop
inc
out
rcll
push
push
push
lret
mov
or
sbb
test
push
ja
cmp
add
push
cmp
sub
adc
mov
dec
nop
push
adcl
jmp
out
mov
jne
js
cs
mov
add
lock
xchg
add
and
push
push
or
pop
add
nop
xchg
xor
adc
and
pop
sbbb
xchg
fcoms
pop
test
inc
cmp
fsts
push
xchg
sbb
or
dec
andb
adc
push
dec
cmc
and
or
adcb
and
stos
loopne
xchg
sbb
movsl
adc
mov
jae
and
mov
shll
or
in
inc
sub
and
and
push
lea
ret
or
fdivrs
jp
jge
jl
adc
imull
test
mov
mov
cmp
je
or
adc
ret
jg
jnp
gs
add
cmpb
pusha
lcall
adc
lret
out
int
pusha
pusha
in
add
es
adc
and
adc
and
dec
xorl
xor
adcl
dec
dec
add
or
cmp
movb
shlb
push
add
push
cmpsb
adc
inc
insl
cld
jb
frstor
loopne
pop
inc
sahf
les
sbb
and
scas
xchg
je
inc
push
iret
adc
pop
test
adc
jo
mov
das
push
loope
or
push
imul
aam
test
lds
xor
dec
das
lcall
pop
rcll
loope
mov
xchg
les
jp
lcall
inc
aaa
mov
jmp
mov
cmpsb
pop
dec
dec
push
out
repz
adc
mov
jno
orl
repz
data16
xchg
lcall
mov
aas
lret
cmp
es
aaa
dec
call
mov
fwait
data16
fwait
push
fwait
outsb
mov
xlat
or
fwait
mov
push
mov
stos
cmc
es
int3
push
fs
inc
cmp
cwtl
lea
icebp
and
movsb
mov
push
jmp
je
inc
xchg
jmp
mov
fwait
and
xchg
js
cmc
es
outsl
es
outsl
stos
pop
outsl
mov
es
fwait
sub
dec
mov
clc
lods
jb
mov
pop
xchg
cmc
inc
gs
test
aas
sub
mov
push
aaa
xchg
cmc
cmpsb
gs
jmp
lret
pop
ficoms
xchg
cmc
cmpsb
mov
test
dec
gs
pop
outsl
sub
dec
aaa
cmc
adc
dec
and
sub
scas
push
mov
arpl
xchg
push
or
in
std
push
dec
mov
inc
xor
icebp
inc
sbbl
out
pop
mov
out
imul
pop
sub
lods
mov
fdivr
nopl
and
xor
mov
gs
dec
xorl
stos
sub
pusha
dec
inc
push
or
push
dec
fcmovu
mov
push
shrb
adc
or
adc
outsb
stos
push
adc
xchg
pop
rcr
sbb
repz
xor
shlb
mov
shll
mov
iret
push
cwtl
xor
cs
add
icebp
sbb
subb
jb
xor
xor
or
pop
arpl
mov
scas
and
int
pop
push
jae
xchg
push
bound
xor
rcrl
push
scas
xchg
jecxz
inc
pop
push
pop
push
jb
xor
rcrb
adc
sub
xor
add
adc
movsb
jne
test
ret
pop
inc
sbb
jp
and
pop
sbb
rorl
pusha
sub
add
mov
scas
imul
push
mov
dec
mov
gs
jae
lret
movsl
jns
mov
loope
sahf
cs
sub
dec
ror
sub
les
sub
in
fadd
sub
and
cmpsl
cwtl
mov
sub
movsl
nop
add
sub
push
xor
hlt
push
cwtl
js
dec
cs
leave
xchg
fs
stos
sub
cmpsl
or
mov
push
pushf
xchg
test
mov
pop
mov
pusha
cmpsb
pusha
dec
cld
mov
dec
cmp
into
in
push
mov
bound
push
push
cmp
jecxz
push
aam
test
push
and
test
leave
aam
lock
daa
cli
jno
xor
dec
imull
pop
mov
sub
push
xchg
jo
out
sub
subl
inc
lea
mov
push
ja
sahf
push
pop
scas
bound
divb
outsb
sub
push
sub
or
js
sbb
cmp
mov
xlat
add
xchg
cs
lret
push
aas
dec
or
xor
int
cwtl
mov
xor
sarb
pop
stos
sbb
fsubs
sbb
outsb
fisttpll
testb
inc
sbb
mov
cmpsb
add
adc
and
sbb
or
mov
loopne
lods
sub
sti
or
fcomps
aaa
and
inc
aaa
inc
test
pop
adc
cmp
ret
add
stos
daa
inc
lock
xor
int3
int
xbegin
and
push
inc
mov
xor
inc
lds
pop
in
dec
dec
pop
or
mov
ficompl
pusha
pop
push
fdivs
jbe
cwtl
mov
mov
or
xchg
push
ret
inc
cmpsb
inc
jecxz
or
cmc
movsb
add
mov
mov
mov
xor
dec
pop
cmp
adc
push
aad
mov
fcoml
xor
ficoml
xchg
and
xchg
sub
mov
jno
adc
add
add
pushf
add
push
data16
push
mov
mov
xor
outsl
sub
test
cmp
in
lds
adc
inc
aaa
sub
int3
xchg
add
xchg
inc
xor
dec
aam
xchg
dec
popa
imulb
xchg
adc
sub
call
das
in
sub
mov
inc
mov
sub
sub
mov
lods
jne
pushf
jge
jb
aaa
inc
movsl
test
imul
mov
push
cmp
and
mov
in
mov
adc
repz
ljmp
xchg
xor
push
jae
adc
push
test
mov
cmp
addb
jnp
mov
lock
push
in
lods
and
adc
cmp
adc
mov
fsubs
out
adc
mov
push
inc
in
inc
adc
inc
sub
rolb
dec
adc
ret
ds
xchg
push
sahf
sub
mov
sbb
sarb
inc
pop
and
enter
pushf
adc
daa
int3
inc
add
rorl
cmp
and
sbb
inc
orl
inc
and
cli
sub
imul
fisubl
dec
adc
stos
test
out
repnz
cmpsl
shlb
popa
dec
or
and
jae
mov
add
and
popf
or
push
bound
adc
call
dec
je
add
jge
sbb
xchg
lock
push
and
cwtl
dec
jl
sub
js
sahf
jae,pt
rolb
jnp
xchg
sub
sarb
rcll
mov
add
into
xor
loopne
inc
fadd
mov
mov
clc
adc
or
inc
adc
dec
js
adc
nop
dec
int3
and
rolb
push
mov
mov
insb
rcll
or
push
inc
fcoms
mov
cmpsl
in
fwait
pop
in
mov
pop
jge
adc
jle
mov
lret
loopne
in
sub
push
jmp
xchg
pop
adc
push
addb
or
leave
push
aad
mov
mov
push
dec
inc
dec
and
loop
movsb
addl
popa
hlt
int
ljmp
cmp
push
sbb
sub
in
push
mov
jns
mov
in
gs
sub
pusha
stos
movsb
int3
xor
sub
pop
pop
mov
mov
cmp
add
jp
imul
cmp
in
xchg
xchg
push
xor
leave
into
xor
xor
sub
addb
dec
push
sub
in
pop
sub
cmc
iret
push
shlb
ss
add
xor
arpl
mov
or
or
arpl
cmp
mov
push
addb
sbb
sarb
sahf
mov
pop
lds
out
inc
jl
xlat
es
daa
in
xor
lret
and
add
cmp
and
es
popa
push
sbb
mov
adc
popf
add
sbb
or
xor
data16
sbb
fsubl
dec
stos
mov
xor
jbe
dec
cwtl
cmc
add
add
insb
test
mov
mov
xchg
cmp
out
push
pop
mov
sbb
ljmp
and
add
push
sub
es
dec
push
lret
push
int
test
or
dec
rorl
es
adc
dec
es
cltd
sub
pop
or
adc
mov
mov
adc
sub
mov
adc
fldcw
sbb
imul
xchg
jo
ret
cltd
jb
test
pop
lea
test
inc
xor
test
sbb
and
sub
movsb
popf
and
adcl
or
cmpb
sbb
nop
icebp
mov
pop
shl
pop
xor
inc
in
out
subb
mov
and
cmp
xchg
mov
jmp
psllq
clc
ret
je
dec
mov
jnp
or
mov
fildll
imul
pop
ret
sub
push
xor
mov
adc
add
cmc
loope
jns
lret
call
sti
ror
cmp
cmp
mov
pop
mov
mov
je
pop
lds
sub
cmpsl
enter
or
cmp
xor
mov
and
mov
mov
push
lcall
jns
jp
jno
cwtl
lcall
inc
xor
fidivl
inc
dec
xlat
and
jg
mov
mov
rolb
daa
cmp
rclb
mov
movsl
jmp
jecxz
mov
xorl
pop
inc
rcl
sub
adc
pop
jmp
cltd
das
lcall
adc
mov
jmp
sub
lcall
push
movsb
cmp
jecxz
int3
push
imul
mov
xor
movsl
stc
xchg
cmpsl
popf
mov
xor
and
popa
jns
out
loop
add
adc
popa
loope
jge
jb
adc
mov
je
aam
inc
xchg
mov
fmull
iret
mov
jnp
daa
lea
inc
pop
and
aad
movb
bound
loopne
mov
shl
add
call
inc
roll
mov
jb
mov
add
sub
adc
or
mov
ja
cmp
mov
in
jecxz
fsubs
imul
cmp
shl
loope
xchg
ljmp
cs
divps
cltd
sub
jmp
jns
and
fadds
clc
jbe
lcall
push
mov
cs
aaa
sbbl
fsubp
loop
xchg
scas
jl
into
int3
adc
xchg
jb
in
inc
mov
xchg
or
rcrb
imul
jle
mov
outsb
and
add
int3
push
cmp
je
push
enter
inc
cmp
sub
mov
aam
jp
jge
add
fcoms
popa
push
and
adc
loop
call
xchg
popa
bound
arpl
xchg
daa
add
cmp
push
mov
sbb
inc
pop
and
xchg
push
add
xchg
stos
sbb
and
mov
lea
xor
mov
jg
mov
xorl
lea
movb
inc
arpl
in
jmp
out
ret
sub
push
mov
or
push
xor
imul
bound
je
test
or
jecxz
insl
cmp
jnp
shll
rcl
jecxz
push
mov
cwtl
clc
push
inc
movb
sub
lret
lods
ret
ss
out
mov
or
inc
mov
pop
je
in
mov
bound
lock
adc
in
sbb
add
xorl
xchg
dec
sbb
in
jl
or
es
pop
inc
sbb
cmp
jns
inc
bound
xchg
lret
out
xor
xor
cli
ret
rcll
repz
xor
imul
out
mov
nop
mov
pop
call
xchg
out
inc
aad
jbe
mov
adc
lcall
or
sbb
outsl
aam
dec
lahf
xlat
and
add
mov
cmpsb
int3
mov
or
movsl
jb
movb
push
inc
int
mov
push
out
add
jbe
mov
mov
pop
pop
les
jb
js
pushf
xchg
xchg
les
dec
push
mov
cli
lea
test
mov
add
sbb
mov
cli
loopne
test
fists
test
mov
mov
and
add
daa
in
loopne
xlat
paddusb
or
int3
or
enter
add
xchg
bound
movsl
andb
dec
jge
repz
and
sarl
xor
clc
test
xor
hlt
jns
and
adc
add
xor
sbb
loop
inc
negb
sub
pop
and
enter
test
adc
xchg
cwtl
push
sub
jp
mov
cltd
xchg
cmc
arpl
inc
add
mov
divl
jl
push
dec
mov
call
lods
adc
xchg
and
push
dec
add
cmp
sbb
push
inc
sbb
gs
xchg
dec
pop
gs
clc
jb
sbb
daa
lcall
pop
inc
add
or
mov
into
jae
mov
xor
pop
lods
cmp
push
adc
mov
dec
push
repz
int
fdivr
jb
in
dec
sub
add
jb
sbb
jl
mov
pop
xchg
push
gs
jne
call
ljmp
test
add
cmpsb
aaa
jne
jne
adc
scas
test
xchg
sub
imul
pusha
or
mov
cltd
call
jno
push
jb
ret
and
sub
outsb
cwtl
sbb
mov
fimull
fdivrs
push
xor
add
out
pop
jae
loopne
push
stc
jne
cmp
xor
shrl
sahf
iret
pop
push
push
aaa
cs
xor
lock
ret
xorl
xor
adc
adc
add
loop
inc
mov
data16
push
int
lcall
gs
pop
mov
push
or
inc
adc
xlat
lods
mov
shlb
aam
push
mov
inc
add
or
mov
mov
add
mov
scas
dec
dec
imul
popa
sbb
dec
in
pop
or
pop
scas
push
cmc
dec
cltd
push
cmpsb
ss
mov
pop
push
pop
jb
mov
xchg
scas
sub
push
call
mov
adc
push
scas
xchg
shlb
cmpsb
in
sub
push
cmp
sub
xor
fildll
cltd
loopne
gs
mov
bound
jae
sbb
push
inc
push
adc
fsubs
add
mov
mov
and
push
test
dec
mov
jle
push
pop
pop
add
adc
push
and
lds
js
and
aas
mov
push
movsl
shrb
add
xor
sbb
push
rorl
inc
add
test
pusha
clc
je
xchg
add
stc
jns
add
add
adc
add
mov
pop
jp
pushf
mov
mov
dec
in
inc
jecxz
cmpsb
xchg
sarb
lret
mov
push
sub
mov
mov
sbb
dec
and
xorl
pop
mov
sbb
add
stos
xchg
arpl
mov
test
add
hlt
js
jb
inc
fdivl
adc
aam
or
mov
out
rcrb
imul
pcmpeqb
fsubrl
or
pusha
xchg
push
add
lock
sbb
jmp
lds
out
xchg
lock
inc
ljmp
adc
ficoms
or
jo
cwtl
je
mov
cmp
sarl
dec
rclb
and
lcall
xchg
jae
das
and
fcomps
dec
insb
test
out
addb
add
mov
rcrl
xor
andb
es
sbb
mov
leave
in
sbb
and
dec
push
movsb
dec
pop
xor
je
das
add
inc
cmp
xor
xchg
pop
leave
mov
xor
cwtl
js
push
scas
push
mov
ret
xor
rcrb
cmp
mov
cwtl
xor
cmp
add
lds
push
mov
loope
dec
mov
subb
int
push
insb
test
sti
xchg
mov
pop
inc
inc
push
test
adc
loopne
loop
push
add
jbe
push
nop
lds
ljmp
ret
jp
fwait
into
out
mov
bound
lds
inc
pop
push
mov
mov
xor
fwait
jb
int
push
inc
jmp
sub
fcomps
push
loope
add
pop
cmp
clc
pop
outsb
jl
aam
push
mov
pop
push
sub
addl
inc
add
jae
cmp
cmp
add
or
dec
notl
xor
test
or
push
pushf
mov
loopne
sub
mov
test
jns
sbb
cmp
mov
in
orl
jmp
xchg
sub
rclb
leave
cld
lock
cltd
pushf
jl
cmc
clc
inc
pop
cmp
stos
jmp
cwtl
xor
xor
jecxz
mov
pop
xor
dec
inc
inc
jbe
inc
ss
mov
xchg
in
push
verw
jbe
subl
mov
test
mov
les
into
lock
jmp
lcall
nop
movsb
push
mov
insb
mov
add
rorb
add
mov
out
les
dec
add
cltd
mov
add
rcr
add
lock
clc
sarb
pusha
xchg
add
fwait
sbb
bswap
add
mov
movsb
pop
pop
add
fadds
es
adc
ret
rorb
fs
popa
inc
sbb
mov
xor
xchg
add
int
pop
nop
xchg
add
dec
xchg
inc
mov
and
push
shrl
push
cwtl
or
mov
add
dec
adc
pusha
cmp
addb
push
mov
jbe
push
push
lods
in
aaa
push
lods
sub
data16
je
inc
adcl
add
mov
mov
and
mov
add
and
push
push
bound
or
mov
mov
pop
xadd
bound
or
mov
mov
cmpsl
pop
rorb
mov
add
mov
or
lret
cmpb
cli
pop
rol
inc
dec
adc
popa
rcrl
jo
les
cld
popf
sti
loop
xor
mov
jnp
or
and
dec
jo
inc
rcl
add
insb
test
pusha
fmul
or
mov
xchg
xchg
ja
dec
xchg
dec
jo
sbb
sub
xchg
push
jo
jb
adc
push
sub
movsb
mov
mov
push
or
xor
fwait
sub
dec
adc
je
adcb
test
lret
les
movsl
push
sbb
bound
loope
add
push
add
es
adc
movsb
jmp
add
adcl
addr16
arpl
sarb
mov
mov
push
movsb
push
in
push
push
xchg
mov
xor
movsl
ljmp
push
mov
fsubs
cmpl
push
in
jecxz
ljmp
imul
rolb
and
sub
and
mov
lea
pop
jl
popa
jno
push
add
hlt
lods
inc
dec
cwtl
xlat
xchg
inc
pop
mov
push
out
pop
fimuls
sub
mov
popa
sub
sub
stos
xchg
mov
cmp
dec
adc
mov
popa
sub
xchg
adc
cmp
xchg
mov
cmp
push
sub
test
add
cmp
add
scas
outsb
rcl
xchg
outsb
gs
mov
cs
cmp
inc
push
push
iret
pop
and
dec
jmp
movsl
xchg
jo
popa
and
ja
push
jns
in
mov
in
adc
pop
mov
add
out
push
mov
or
fdivrl
adc
into
cld
and
aaa
cmpsb
add
mov
mov
test
in
xchg
add
jb
cmp
imul
mov
mov
addr16
fstl
sbb
xrelease
inc
mov
mov
jo
mov
das
nop
dec
ret
xor
or
or
mov
out
rorl
outsw
lock
pop
dec
lds
in
push
push
xor
mov
mov
xchg
jns
add
xor
out
push
fldt
mov
repnz
pop
in
fiaddl
pusha
mov
test
lock
xchg
cwtl
movsl
call
sbb
idiv
or
ror
rcrb
or
or
stos
mov
push
push
mov
movsb
inc
inc
add
xor
test
inc
jne
addb
ret
or
insl
or
adc
sub
mov
popf
adc
xchg
sub
add
js
dec
sbb
sbb
cmpsl
popf
xchg
and
mov
rcr
or
lret
and
ljmp
xor
fs
mov
pusha
daa
in
cmc
cwtl
loop
int
popa
add
fnstenv
subl
mov
mov
ret
cmp
xor
loop
sub
arpl
addl
pop
xor
stos
ja
add
jmp
pop
sbb
addl
adc
ret
jecxz
std
repz
dec
pop
or
sub
adc
rorl
or
bound
and
lcall
cli
push
subl
pop
or
add
pusha
pavgw
push
lahf
lcall
fdivrs
mov
repnz
xchg
addb
jo
fucomi
test
sbb
es
ret
and
je
xchg
xchg
nop
imul
push
pop
popa
mov
subb
inc
pop
mov
test
andl
aas
call
sub
or
add
in
lret
in
sbb
push
or
rol
flds
adc
out
inc
loopne
cmp
or
sahf
or
xor
addr16
mov
fs
cmp
fcmovnu
daa
sahf
adc
xchg
inc
push
cwtl
insb
cwtl
inc
inc
inc
roll
push
dec
mov
popa
test
xor
loope
xchg
addb
push
pop
adc
mov
inc
adc
out
push
xchg
xor
lods
test
pop
sti
mov
push
cltd
popa
pop
xor
add
add
inc
loopne
shll
lds
jo
adc
mov
test
xor
cmp
popa
or
dec
subl
adc
int3
mov
ss
mov
rorl
nop
dec
push
sti
or
lret
cmpsl
lcall
xor
pop
xlat
addb
sbb
mov
and
mov
loope
popa
adc
inc
dec
jge
in
call
enter
fs
jns
or
lock
adcl
sub
scas
jg
mov
xchg
mov
sbb
in
xchg
pop
jae
cwtl
mov
jle
pop
dec
sti
and
push
ficoms
inc
out
insb
dec
pop
push
push
hlt
jmp
xchg
mov
out
push
or
adc
stos
fidivl
mov
xchg
pop
sbbb
test
test
sub
and
stos
push
mov
mov
inc
pop
addl
stos
popa
jo
and
mov
lret
pop
jnp
xor
and
loop
in
out
sbb
mov
xchg
rorb
lret
xor
inc
and
imul
pop
inc
mov
jb
movsl
imul
xor
lret
adc
sbb
sub
pushf
lahf
scas
call
testb
fsts
mov
push
shlb
dec
push
gs
das
pop
mov
xchg
das
push
jmp
push
sbb
push
je
adcb
and
test
test
xchg
test
call
or
or
cmovs
xchg
xchg
adc
pop
push
test
or
lret
rcl
xchg
mov
add
inc
add
daa
dec
and
inc
into
cmpsb
sub
pusha
fadds
mov
xchg
loopne
or
cmp
or
sbb
pusha
add
pop
dec
and
daa
or
and
and
and
push
inc
inc
mov
push
out
sbb
or
add
inc
or
in
add
sbb
and
jne
push
xor
scas
test
leave
jnp
in
in
mov
ds
push
std
andb
add
dec
or
mov
addb
mov
mov
xor
mov
xchg
mov
stos
push
mov
sbb
adc
rcrb
scas
negb
jae
or
jno
sub
push
xorb
pop
sbb
xchg
sbb
cwtl
lea
add
xchg
dec
adc
xor
lcall
or
cmp
mov
enter
stos
stos
daa
rorl
cmp
testb
fcoml
das
and
xor
ret
inc
mov
sub
mov
test
jo
adc
push
stos
and
jmp
lret
call
ret
mov
jae
jecxz
sub
lret
loopne
lret
jo
mov
cltd
mov
mov
sub
dec
test
rclb
sub
adc
test
adc
push
icebp
xchg
out
push
mov
jns
insb
push
fcmovbe
push
add
dec
fidivrl
dec
aam
lret
pop
adc
lods
mov
mov
ret
imul
popf
push
test
iret
mov
js
cwtl
sub
mov
icebp
lret
and
jg
xor
cmp
pop
push
fadds
into
ljmp
inc
in
call
cs
and
and
mov
sub
mov
sti
lods
jne
jbe
fildll
sub
mov
leave
mov
aas
mov
loop
aad
repnz
xor
adc
inc
mov
rcrl
fsubrs
cmp
and
pop
adc
push
jle
mov
cmp
js
sub
cmp
push
add
aad
xor
xchg
xor
insl
push
xor
dec
inc
sbb
add
lcall
mov
mov
mov
sahf
xchg
lret
movsb
adc
xchg
pusha
lcall
ds
shrb
add
cmp
push
rorl
adc
or
push
adc
mov
sahf
insl
sub
pushf
or
repz
sub
inc
xor
jo
ss
mov
lods
cmp
mov
cmp
addr16
xor
sbb
imul
and
lods
ss
movsb
out
pop
test
adc
gs
adcl
cmpl
dec
mov
xchg
sub
leave
pop
xchg
addl
sub
fdivrs
inc
pop
stc
jns
add
sub
jl
xchg
pushf
clc
cs
loopne
push
or
out
or
stos
or
imulb
int
sbb
aaa
psraw
jl
sub
or
mov
push
sbb
orl
inc
lods
push
xchg
sub
std
push
in
mov
dec
in
dec
movsl
mov
jne
jb
sub
lock
fsubrs
dec
nop
mov
lods
sub
sarb
mov
mov
ret
mov
fcomp
mov
cmp
in
outsb
mov
rcrl
mov
mov
sub
sub
loop
mov
test
xchg
loop
leave
mov
repz
push
pop
into
pop
rcl
mov
js
cmp
test
push
jns
inc
shll
jl
sub
xor
jmp
push
jmp
adc
int
sbb
mov
cmpsb
cmp
out
dec
add
int3
mov
test
cmpsl
push
mov
pop
fistpll
xlat
repnz
mov
inc
std
lret
add
fdivl
lea
adc
insb
bound
cmp
xor
lret
orl
and
shr
ret
and
mov
fisubrl
jne
int3
sub
mov
mov
dec
jne
lds
sub
or
out
mov
sub
inc
cli
sub
jo
ja
mov
mov
and
push
lods
mov
mov
mov
adc
jecxz
shrb
sub
jbe
sbb
jmp
hlt
cmp
aas
cmpsl
xor
pusha
mov
push
ret
mov
pop
arpl
dec
or
xorb
or
bound
xchg
inc
mov
les
mov
push
push
xchg
sbb
adc
jmp
adc
push
jae
sti
dec
add
push
mov
and
mov
test
xchg
push
xor
aam
sbb
les
hlt
adc
or
adcl
test
sub
xchg
or
adc
fmuls
and
push
ret
push
or
adc
xchg
call
sub
insl
mov
xchg
xchg
mov
dec
push
mov
and
mov
sub
or
adc
xchg
jo
inc
pop
mov
mov
orb
and
inc
xchg
mov
adc
jo
movsb
pop
subb
jg
mov
adc
and
pop
stos
les
adc
adc
and
mov
adc
dec
lock
test
and
and
adc
cmpsl
dec
fs
clc
mov
pop
mov
rorb
ds
xchg
inc
mov
movsb
cmp
xchg
adc
nop
dec
add
and
adc
scas
dec
mov
xchg
pusha
mov
adc
and
dec
dec
sbb
add
rcrl
nop
and
cmp
pop
and
adc
mov
add
push
test
cmpsl
les
stos
adc
lock
fs
subb
or
adc
xchg
mov
sub
adc
mov
dec
and
or
adc
mov
pop
and
push
inc
mov
cmp
sub
xchg
jo
add
mov
pop
dec
pushf
and
mov
jge
xchg
sbb
push
inc
sub
push
or
sub
xchg
loopne
inc
pop
inc
fcoml
imul
dec
les
adc
movsl
inc
je
mov
jno
sbb
pop
bound
and
repnz
adc
and
nop
dec
cmp
add
push
bound
lret
xchg
pusha
dec
les
adc
mov
pop
dec
and
or
adc
xor
pop
subb
hlt
and
push
bound
dec
dec
and
or
adc
nop
dec
mov
cmpsl
adc
and
and
popa
mov
adc
xchg
js
add
mov
mov
mov
stos
inc
push
and
and
pop
inc
sub
inc
nop
jge
adc
and
jo
add
mov
dec
dec
cwtl
and
mov
adc
mov
inc
dec
test
adc
stos
dec
andb
mov
adc
adc
and
push
or
adc
xchg
lock
test
sub
jo
mov
fsubl
ror
iret
push
loop
movsl
les
and
rorb
and
insb
mov
xchg
xchg
mov
push
mov
shrb
dec
pop
and
mov
adc
test
rcrb
jno
decb
xchg
rcll
mov
dec
mov
or
adc
or
popa
xchg
sbb
push
and
adc
cmpsl
dec
pusha
and
shlb
adc
dec
aam
aas
and
aam
and
push
sub
pop
or
adcl
mov
dec
call
xchg
push
loop
inc
push
mov
adc
fmuls
pop
add
dec
loopne
ljmp
std
daa
mov
dec
xchg
cwtl
dec
inc
push
and
popa
bound
lret
xchg
pusha
dec
les
adc
mov
dec
and
add
loope
pop
lea
test
push
bound
jno
mov
adc
xchg
jo
les
and
mov
orb
ret
xchg
or
adc
pusha
dec
mov
jge
mov
adc
and
pop
lods
inc
push
inc
ret
mov
xchg
and
or
adc
test
inc
les
sub
push
or
sub
xchg
lock
pop
ret
jno
enter
loop
rcll
or
adc
xchg
fmuls
pop
bound
insb
mov
rcll
mov
dec
xchg
test
dec
push
subb
jne
sbb
cmp
mov
add
in
sub
push
lret
add
fcmovb
sbb
push
lods
dec
movsl
in
stos
add
sbb
lea
test
and
decb
shlb
shll
cmpsl
push
sub
push
lret
inc
or
insb
mov
stos
loope
daa
sub
nop
adc
lret
sub
cmpsb
push
stos
imul
xor
cmp
or
add
pusha
test
popa
sub
sbbb
lcall
test
cmp
fcoml
cwtl
adc
orl
jne
push
pop
es
adc
clc
adc
xor
jle
int3
xchg
mov
and
xor
push
mov
sbb
mov
sub
loope
addl
xor
mov
mov
push
int3
fs
xlat
xor
iret
ror
mov
add
fs
pushf
ss
cmp
btr
or
mov
sbb
pop
insb
push
int3
pusha
xchg
xchg
push
rcr
pusha
int
loopne
outsb
aam
xor
test
cmpsb
sbb
jnp
mov
cmp
mov
xlat
lock
mov
add
mov
ret
xchg
shrb
loope
bound
imul
xor
jne
sub
push
rcr
iret
rorb
dec
cmpsb
nop
sbb
ficompl
sub
push
pushf
in
sbb
negb
fsubs
inc
fwait
sbb
cmp
mov
sbb
dec
inc
sbb
les
pop
ljmp
xor
and
arpl
jae
jno
or
cmp
into
sbb
mov
into
aad
fwait
mov
insl
xor
sbb
xor
or
sbbb
adc
lea
jmp
rol
int
rcrl
pusha
inc
pop
test
aad
hlt
lret
push
mov
mov
mov
xorl
sub
int3
in
sbb
pop
sbb
jo
lret
mov
mov
mov
insb
xor
rcrl
sbb
stos
pop
mov
inc
and
or
cvtpi2ps
loopne
or
pop
arpl
arpl
add
push
loop
mov
sub
mov
push
add
sbb
ret
fldl
lds
mov
xlat
dec
cmpsl
adc
push
popf
pop
sarl
and
inc
addb
jne
xor
leave
jb
cwtl
or
aaa
arpl
inc
mov
push
imul
pushf
mov
inc
imul
and
jno
lods
ds
ret
aaa
int3
orb
jecxz
or
push
xchg
add
pusha
aam
push
out
jge
dec
or
inc
sub
mov
xor
arpl
xor
xchg
sbb
push
adc
xor
addr16
cwtl
and
add
inc
inc
push
pusha
push
mov
rcrb
dec
push
add
sbb
xor
lds
dec
mov
xor
push
mov
sub
scas
addr16
push
data16
loopne
hlt
addb
inc
mov
ljmp
cmp
loope
loope
mov
or
fcoml
or
mov
cwtl
test
mov
dec
aaa
scas
lea
jle
nop
or
mov
inc
push
or
pop
js
push
aam
xor
pusha
cmpb
pusha
and
popa
sbb
cmc
aam
sbbb
addl
and
inc
xlat
push
xor
or
add
repnz
xchg
pop
imul
lds
ret
push
lods
ficompl
sbb
rcrb
push
pushf
or
add
pop
cmp
shll
xor
sub
cwtl
or
loop
insb
insl
jo
xchg
and
add
xor
add
cmp
lcall
mov
int3
shlb
sbb
xor
xor
xor
push
aas
sbb
leave
arpl
leave
lods
sub
or
shrb
sub
push
test
push
sub
lds
cmp
or
addr16
rcll
xorb
ljmp
popf
jno
jne
add
cmpsb
sub
jo
fldenv
dec
lods
sbb
adc
pop
ret
push
adc
and
mov
and
mov
shlb
lahf
sub
stc
pusha
adcb
mov
push
mov
es
mov
aad
sub
jb
cwtl
outsb
cltd
nop
sub
xlat
push
sub
adc
push
fsubs
inc
adc
mov
popa
xchg
sub
or
movl
push
xorb
rolb
mov
ds
sub
movsl
xchg
dec
call
mov
lret
ja
insb
loope
fsubl
inc
int3
adc
xchg
pusha
fsts
pop
outsl
fmull
out
xchg
add
add
dec
fbstp
jo
popa
push
ds
pusha
push
pop
push
dec
xchg
and
sarb
in
pusha
push
mov
cmp
add
cmp
push
xchg
push
sbb
and
adc
sub
int
mov
sub
in
and
fmul
out
xor
bswap
mov
andb
int3
xchg
or
push
sbb
jo
imul
lods
sbb
mov
sahf
cltd
dec
mov
mov
shrl
enter
in
cmp
add
push
shlb
push
cmp
leave
mov
xchg
std
addb
jo
fwait
and
jge
mov
push
sub
addb
inc
mov
jnp
andb
subb
add
icebp
sub
or
push
sahf
popf
rorl
sbb
sbb
push
inc
push
adc
sbb
xor
aam
push
addb
pop
fimull
adc
ret
mov
ljmp
pop
fsubrs
push
rcll
cmpsb
jo
loope
push
cmp
fsubrs
ficoms
in
add
add
lret
xchg
fiadds
je
pushf
adcl
pop
or
add
push
mov
or
dec
and
sbb
push
shl
aad
sub
test
and
outsb
cmp
or
sub
sbb
test
cmp
or
cmp
into
sbb
jp
hlt
mov
rolb
jnp
lahf
add
fistl
dec
cmp
add
popa
ror
xor
cmp
xor
stos
inc
in
jae
dec
xor
je
or
push
add
mov
outsl
dec
adc
cmp
add
out
movb
pop
dec
mov
sbbb
push
pop
xchg
addr16
and
push
sbb
inc
push
scas
or
mov
sbb
pop
jno
cwtl
push
adc
mov
insb
cltd
mov
and
cwtl
push
mov
add
cmp
aas
push
inc
fadd
shlb
rcrb
push
rorb
cwtl
rcrl
push
ja
test
scas
dec
dec
mov
push
icebp
pop
xlat
sbb
adc
pusha
and
xchg
loope
std
cmp
xchg
movsl
lock
mov
push
movsb
cmp
adc
mov
dec
addl
push
inc
pop
pop
cmpsb
and
mov
sbb
loopne
or
or
adcb
rcrl
and
push
inc
loopne
mov
cwtl
pop
fdivl
mov
add
das
fwait
movsl
lea
pushf
push
ja
imul
sbb
jp
xor
push
add
jle
cmp
inc
loopne
cltd
rol
rcll
push
out
add
pop
fbstp
and
imul
imul
push
cmp
sbb
mov
pushf
xchg
push
jae
push
ds
pusha
adc
dec
push
pop
insb
mov
sub
mov
addr16
fdivs
in
sub
and
ret
stos
hlt
cmpsb
rcl
scas
xor
push
mov
imul
popa
sbb
xchg
sub
cmp
push
jecxz
cmc
imul
cmp
pusha
sbb
cmp
shrl
jecxz
or
sub
pusha
pop
arpl
and
mov
mov
adc
aaa
insl
xor
hlt
jbe
push
mov
mov
inc
mov
ja
addr16
aam
je
adc
stc
inc
jno
xor
xor
pop
xor
pop
jbe
into
dec
mov
xchg
cwtl
push
dec
cld
xor
push
sub
popa
shr
subb
data16
pop
cmp
dec
loop
push
fs
movsl
pushf
add
in
add
xor
push
bound
adc
imul
push
xor
push
or
adc
jle
jmp
push
adc
adc
or
ja
fdiv
mov
cmp
ret
xchg
test
stos
orb
shlb
sbb
loop
push
jnp
sbb
sti
push
lret
andb
xor
imul
or
mov
xor
xchg
repnz
fs
xor
addl
ret
jno
sbb
dec
dec
roll
and
sub
out
mov
fstps
cmpsl
mov
int3
inc
rorb
mov
sub
imul
arpl
sbbb
adc
jno
adc
arpl
push
dec
inc
mov
push
cmp
js
add
mov
sbb
pop
pop
inc
aad
or
add
lock
addb
adc
adcl
or
sbb
sub
add
movsb
loopne
add
ljmp
push
xchg
es
int
loopne
insb
inc
dec
push
les
rcrl
inc
mov
xor
inc
xor
xchg
in
ror
loop
push
cmp
cmpsl
push
add
jo
shlb
add
sub
mov
js
jne
sub
loopne
adc
lea
xor
push
pop
mov
andl
out
js
or
jns
jno
fcomp
enter
and
subl
mov
arpl
leave
add
xchg
iret
mov
mov
adcl
sahf
ret
and
andb
push
pop
arpl
cwtl
sbb
sahf
xchg
imul
cmc
cmp
repz
cmp
mov
jns
iret
inc
loopne
sbb
jle
push
mov
add
pusha
les
fdivl
or
fyl2xp1
push
test
push
cmp
or
leave
push
ret
mov
push
lods
shrb
inc
xor
loop
push
xchg
mov
or
mov
cmp
jecxz
shlb
arpl
rcrb
mov
test
cmp
and
and
sub
add
pop
mov
loopne
cmc
xor
mov
cwtl
add
or
sti
rorb
add
sub
pop
xor
or
insb
sub
jae
xor
pusha
push
pop
inc
xor
or
push
adc
mov
add
jno
add
mov
cwtl
push
add
jecxz
imul
insl
cmc
movb
add
aad
dec
xchg
andps
data16
rol
add
mov
jbe
popf
bnd
sbb
mov
adc
test
mov
pop
int
push
xchg
dec
pop
inc
inc
movsl
stc
fdivs
cwtl
sti
sub
and
in
add
push
mov
pop
imul
lcall
push
pushf
jmp
ss
test
add
inc
mov
and
jbe
mov
jb
inc
inc
mov
mov
lcall
xchg
push
dec
dec
lods
insl
push
out
mov
mov
mov
test
insb
sub
addb
lret
jne
js
mov
movsl
loopne
lahf
or
stos
add
out
out
mov
les
stc
push
js
cmp
cmpsl
in
or
inc
xchg
push
push
ss
test
push
and
lret
in
mov
mov
or
adc
mov
cs
xor
ret
shll
insb
pop
pop
mov
xor
lcall
sahf
xlat
jns
mov
adc
pushf
push
jmp
add
dec
cld
adc
dec
push
xor
test
arpl
mov
inc
add
enter
and
sbb
jmp
cmpsl
les
mov
insb
das
or
push
cmp
dec
jle
rorb
std
enter
jmp
dec
aas
aad
pop
hlt
mov
pop
std
jmp
pusha
std
adc
bnd
pop
cli
in
rorl
aam
inc
hlt
and
xchg
cmpsb
add
jle
ljmp
inc
scas
jle
mov
hlt
jmp
add
inc
add
inc
in
scas
jle
subb
push
jb
mulb
aas
and
sub
xor
aas
push
and
mov
aas
mov
aas
cmp
aas
repnz
jae
and
or
test
ljmp
out
jecxz
pop
test
mov
sbb
test
pop
std
inc
cld
sub
icebp
popf
pop
pusha
pop
lock
xchg
in
and
test
pop
or
jge
push
sbb
push
and
pushf
jecxz
pop
add
test
push
popa
jge
sbb
inc
mov
lcall
outsb
or
outsl
popa
sbb
movsb
push
sbb
and
mov
add
popa
cmp
arpl
mov
andl
sbb
dec
mov
jbe
rcrl
stos
sub
test
lea
and
inc
lds
xchg
xchg
mov
fdivl
xchg
dec
ret
lods
leave
xor
sti
sbb
mov
adc
andl
lcall
aaa
sbb
std
into
mov
js
xchg
out
mov
and
jbe
push
pusha
sbb
nop
cmp
xorl
cltd
imul
sub
cs
jo
xchg
cmpsb
jb
dec
mov
push
lea
and
inc
sbb
xor
add
lret
mov
and
adc
popf
pop
cmpsl
popa
sbb
shlb
sub
test
xchg
imul
jnp
cs
jne
loop
pop
mov
adc
inc
inc
mov
and
and
pop
dec
sub
xchg
add
or
or
and
mov
dec
or
das
mov
adc
call
sub
les
adcb
cmp
nop
dec
les
das
mov
movsl
mov
insl
mov
imul
test
stos
pop
inc
push
push
add
psubsw
arpl
and
out
push
mov
pop
sbb
pop
sbb
mov
push
orb
dec
mov
inc
xchg
nop
lods
add
ret
pop
mov
dec
mov
mov
push
nop
inc
sbb
out
or
das
xchg
xchg
mov
and
cmp
push
and
adc
dec
inc
and
nop
scas
test
ret
mov
dec
mov
mov
adc
mov
int3
pop
inc
das
orl
and
and
and
cmp
adc
ret
xchg
mov
pop
xchg
adc
pop
ret
imul
add
and
jo
inc
pop
add
adc
mov
das
rcll
ret
adc
and
dec
dec
and
sub
popa
xchg
mov
sub
pusha
or
sub
les
loop
outsl
mov
dec
shlb
adc
and
and
js
adc
test
sub
xchg
call
into
adc
push
dec
movsb
and
or
adc
dec
loopne
loope
sarl
movsbl
jbe
mov
xor
hlt
and
pop
test
mov
dec
fisubrs
or
cmp
pusha
aad
cltd
jo
sbb
push
repnz
mov
push
movsb
pop
nop
inc
ja
jmp
out
push
xchg
mov
inc
daa
gs
jo
push
fimuls
jb
push
repnz
mov
mov
mov
adcl
dec
imul
orl
and
rorb
sahf
js
cmc
fcompl
add
sbb
lds
pop
into
or
mov
test
int3
cwtl
ljmp
sbb
jmp
jge
nop
xchg
cmpsl
outsb
orl
xchg
arpl
pop
cmp
scas
mulb
stc
mov
les
xor
into
lock
fs
pop
push
test
dec
inc
push
xor
jae
popa
jecxz
mov
inc
lea
mov
js
outsb
dec
mov
push
inc
pushf
insb
cmpsb
jne
pop
jbe
xchg
adc
mov
imul
dec
pop
fnsave
out
lds
sub
fldt
std
lret
stc
mov
mov
lods
pop
movsl
sub
push
mov
into
xchg
dec
es
xor
xor
insl
lea
mov
mov
sbb
push
add
adc
push
push
dec
mov
xchg
or
inc
xchg
int
inc
xchg
imul
lret
mov
and
inc
xchg
call
rep
jge
and
sti
mov
jb
push
rorl
cmpsl
sub
and
insl
fnstsw
push
add
stos
pop
pushf
mov
inc
and
pushf
insb
adcb
je
add
mov
or
mov
or
cmpsl
popa
addl
sub
aam
push
js
aaa
es
mov
pusha
push
bound
addb
stos
cmpsb
fisttpll
insl
dec
cmp
cmp
nop
dec
and
xchg
or
test
sub
or
xchg
ja
or
jecxz
pop
xor
dec
out
movsl
add
cs
insb
int3
sbb
dec
cltd
push
jne
out
daa
outsb
and
dec
pop
xchg
adc
add
push
cmp
aam
clc
jno
pop
xchg
pop
outsb
ret
inc
inc
or
popa
xor
mov
pop
das
or
push
sub
mov
leave
jp
xor
lods
pop
shr
mov
dec
into
sub
imull
mov
add
outsb
movsb
stos
lods
ljmp
dec
mov
xchg
test
xchg
in
xchg
into
lds
inc
xor
push
add
dec
loop
fdivrs
inc
sbb
mov
pop
test
stc
inc
cmp
pop
out
inc
dec
lock
shl
testb
repz
or
jl
push
int3
cmp
scas
test
add
cs
jnp
lret
jns
inc
sub
sub
xor
adc
sbb
addb
jne
adc
jbe
es
and
push
ret
sub
rorb
jp
gs
outsb
pusha
movl
sub
inc
shrl
jle
enter
sbb
outsl
add
popa
inc
stos
pop
pop
jne
lcall
outsb
movl
sbb
mov
pusha
stos
sbb
pop
mov
jbe
cmp
xchg
daa
lcall
pusha
xor
out
fwait
jg
aam
jge
cmp
adc
jmp
in
xchg
sub
minps
ljmp
adcb
sub
mov
cld
inc
aad
fcoml
jbe
scas
loope
adc
mov
mov
xchg
fs
ret
loope
sbb
sub
xor
test
mov
add
xor
inc
scas
add
sub
fmul
push
jecxz
mov
les
xchg
mov
insl
movsb
arpl
jp
mov
mov
hlt
fnstenv
ja
or
xor
mov
push
lahf
mov
cmp
pusha
inc
mov
xchg
mov
js
fstl
enter
stc
mov
pushf
aad
xchg
inc
popa
mov
jge
dec
sbb
mov
or
or
stos
or
sahf
in
mov
adc
xor
push
or
gs
mov
jecxz
inc
pop
hlt
push
test
xchg
mov
cmp
adc
cmp
add
mov
or
mov
pandn
sub
sahf
pop
sub
and
pop
xor
mov
es
xor
cwtl
movsl
push
mov
add
and
jae
inc
mov
loop
daa
cmpb
pop
wbinvd
cmp
sbb
xchg
and
inc
lret
mov
gs
mov
jns
inc
add
pop
jbe
loopne
pop
es
push
xchg
adc
scas
pop
inc
adc
adcl
add
rorl
out
outsb
imul
sub
sub
and
dec
xchg
sub
movsl
sub
push
and
xorl
add
lods
adc
sub
dec
xchg
test
clc
movsl
outsl
ficoms
dec
inc
pop
dec
add
cmp
enter
scas
push
int3
lds
jo
or
xor
ds
or
sahf
stc
push
sbb
into
or
outsl
add
push
xchg
sbb
out
mov
pop
add
fcomps
cmp
stos
fimuls
and
stos
rolb
dec
adc
or
mov
jbe
adc
xor
and
mov
inc
xchg
mov
cs
and
sbb
inc
sbb
sub
pop
aaa
out
mov
xor
lock
ds
inc
add
stos
les
cmc
xor
loopne
dec
or
mov
cmp
cmp
mov
adc
jp
adc
cli
sbb
mov
loopne
hlt
xchg
push
cmp
ret
xor
and
push
push
inc
gs
fcomps
xor
shlb
adc
pusha
xchg
mov
and
sub
lret
shlb
push
pop
cwtl
pusha
sub
xchg
cmp
test
or
jo
lcall
sbb
and
imul
lret
mov
push
adc
xchg
cmp
pusha
adc
cltd
std
dec
ljmp
sarl
push
jp
call
ret
adcl
xchg
inc
fadd
out
sub
mov
and
add
in
push
int
cmp
push
aam
xchg
test
or
xchg
and
lds
sbb
mov
push
jne
mov
xchg
mov
hlt
add
sbb
andl
xchg
ss
push
arpl
rolb
mov
loope
lock
mov
sbb
mov
mov
pop
shll
mov
shrl
add
sbb
repnz
inc
mov
adc
push
mov
movsl
or
sbb
push
add
add
std
sub
aam
cld
subb
add
hlt
push
push
mov
push
xchg
sub
ret
sub
lret
adc
mov
xchg
out
loop
pop
pop
loope
add
pop
xlat
push
int3
lods
bound
lcall
sbb
iret
xor
aas
mov
cs
ret
xor
dec
lea
js
xchg
pop
cli
pop
rorb
imul
add
dec
out
rcll
mov
lods
imull
lea
lds
pop
xor
test
mov
mov
sbb
xor
push
adc
dec
sbb
mov
aaa
jge
pop
stos
int
mov
push
cmp
xchg
cld
jne
push
sti
repz
cld
enter
lea
mov
push
push
push
dec
pop
inc
xchg
lret
out
leave
les
push
mov
mov
lock
fs
scas
mov
dec
fs
sub
mov
pop
push
sbb
shl
xchg
mov
xor
mov
add
mov
popa
arpl
xchg
dec
adc
shrl
push
jmp
inc
sbb
sub
mov
loop
pop
jmp
arpl
sbb
adc
hlt
in
mov
mov
adc
dec
adc
and
jno
test
sub
adc
jmp
out
cmp
and
dec
pop
mov
data16
sbbb
jb
lcall
dec
loopne
and
jmp
daa
push
cmp
dec
pop
add
sub
mov
cmpsl
and
out
pushf
pop
xor
xchg
je
outsb
jge
jo
test
or
sub
pusha
inc
mov
xor
test
dec
aad
pop
adc
sub
adc
or
pop
push
mov
or
mov
test
jmp
pop
pusha
popa
pop
movsl
push
pop
cmp
sti
in
pop
pop
inc
cmp
ret
adc
push
pop
sub
pop
sbb
pop
pop
pop
outsb
ret
mov
sbb
xor
inc
xlat
dec
dec
outsl
out
and
popa
or
jmp
cmc
aas
add
and
adc
add
out
aad
pushf
in
dec
sub
es
mov
sbbb
fisubrl
cmp
das
bound
push
cmovae
and
fistl
adc
bound
xchg
sub
addl
xor
push
mov
inc
lahf
rorb
enter
in
adc
jge
data16
loop
adc
or
dec
shlb
adc
sub
xor
mov
ss
mov
adc
sub
xor
push
into
mov
or
jecxz
stos
add
push
mov
jb
mov
pushf
or
or
pop
mov
pop
push
dec
mov
jo
cmp
jnp
xor
pusha
sub
imul
out
out
enter
mov
bound
sbbb
push
and
push
push
adc
inc
sti
ret
push
movl
scas
mov
adc
fsts
xchg
mov
mov
sub
mov
mov
pop
mov
xchg
inc
push
arpl
loop
push
data16
test
test
mov
xor
test
cmp
cli
fwait
imul
mull
cli
nop
dec
orb
imul
jne
or
enter
adc
xor
scas
mov
jo
and
pop
xor
sub
sub
mov
and
popa
leave
addr16
sub
xchg
push
pop
je
xchg
test
sbb
mov
pop
test
pop
push
sbb
pop
mov
rclb
sbb
sub
outsl
cmp
xor
popf
inc
add
pop
aam
inc
mov
mov
jl
push
mov
mov
mov
test
ficomps
xor
push
es
pop
or
into
and
adc
push
sbb
fists
inc
xor
sbb
xor
push
inc
cmpsb
in
pop
add
addb
jl
adc
mov
iret
ret
dec
adc
popa
repnz
xor
xor
ss
jno
ret
pop
mov
pusha
call
jnp
out
mov
repz
repnz
sub
mov
addl
orl
testl
xor
cwtl
pop
add
aad
inc
sarl
inc
mul
and
std
imul
xchg
jno
push
cmp
add
mov
shll
sbb
iret
xor
movsl
pop
mov
push
je
sub
arpl
into
jmp
push
ret
jmp
jecxz
mov
mov
adc
sub
jl
inc
into
add
mov
pop
add
mov
pusha
repz
or
xor
rolb
hlt
test
int3
mov
adc
stc
push
lcall
adc
fldenv
stos
xchg
push
mov
rcr
mov
clc
cs
stc
jge
mov
jae
cmp
pop
ds
sbb
roll
push
pop
shl
mov
pop
xor
stos
jecxz
mov
lret
add
mov
or
das
mov
jecxz
stos
or
mov
cltd
je
jb
inc
mov
sub
sub
adc
mov
xchg
ret
ljmp
cmp
test
sub
repz
mov
mov
shll
ret
fsubs
lea
dec
aas
sbb
loopne
xor
rcll
clc
pop
mov
mov
ds
arpl
iret
push
mov
sbb
loop
mov
adc
jbe
cmp
xchg
stc
and
mov
out
fdivp
push
sarb
add
gs
xor
pop
mov
jo
in
jecxz
pushf
fwait
ja
mov
andl
ja
call
push
mov
stc
shll
test
mov
loopne
and
out
lahf
sbb
mov
sar
sbb
cmp
mov
cli
lret
adc
mov
hlt
inc
dec
lahf
cmpsb
mov
inc
mov
and
inc
scas
hlt
imul
jp
std
adc
xor
inc
lds
jl
lods
test
mov
cmc
dec
lret
cwtl
push
rorl
xor
inc
mov
jge
pop
mov
fcompl
ljmp
xor
add
sarb
push
adc
jp
push
fs
lcall
sub
jmp
ja
jne
jl
js
push
sbb
fcomps
loopne
iret
sub
push
inc
rorl
ret
mov
sub
push
adc
xor
sub
sbb
das
popa
mov
mov
xchg
clc
adc
cmp
dec
inc
cmpsb
xor
neg
arpl
mov
pop
xor
cmp
xor
mov
rep
lret
mov
int3
sbb
in
mov
inc
mov
cwtl
test
test
mov
lahf
pop
jae
arpl
xor
push
mov
rcrl
mov
icebp
shll
pop
sub
add
sbb
enter
mov
sbb
gs
int3
stos
pop
mov
cs
pop
int3
mov
mov
addr16
mov
add
and
sbb
lret
cli
xorl
cld
pop
mov
sarl
mov
cmpb
leave
and
out
jl
aam
inc
sbb
push
push
or
les
cmc
cmp
adc
ss
cwtl
ret
idivb
mov
pop
icebp
pop
add
pop
lahf
outsl
cmpsl
adc
jecxz
stos
loop
pop
stc
sbb
aas
dec
jg
rol
adc
cmp
inc
add
mov
test
dec
rorb
sub
push
mov
clc
pop
pop
sub
call
xchg
bound
arpl
cwtl
sti
push
ret
fld
jb
pop
inc
add
mov
ja
ret
xor
lds
sbb
test
mov
mov
push
dec
scas
dec
fcmovb
popa
popa
jne
stc
iret
pop
outsl
fdivrs
mov
jnp
jns
in
sbb
adc
daa
xchg
loope
inc
mov
pop
jecxz
adc
sbb
scas
add
jnp
rcr
aad
xchg
jge
lds
mov
dec
pop
mov
push
ds
mov
xor
sbb
jmp
inc
mov
test
xor
push
ficompl
roll
jg
inc
push
repz
es
adc
xchg
push
push
pop
jae
add
data16
ficoml
or
hlt
pop
pop
mov
push
xchg
outsl
jno
inc
sbb
jae
scas
mov
push
test
popa
lods
gs
fs
cmp
add
les
fwait
add
shlb
sbb
mov
sub
adc
into
push
test
add
sbb
loopne
js
cmp
mov
mov
xor
add
xchg
imul
xchg
add
and
dec
outsl
shlb
dec
add
jnp
icebp
push
or
and
mov
sar
xchg
mov
mov
insl
fwait
and
cwtl
imul
or
xor
and
pcmpeqb
lods
mov
adc
das
dec
clc
cmp
xchg
repnz
mov
push
mov
sbb
dec
add
das
lret
andl
cltd
add
adc
mov
int3
sub
sub
cmp
mov
adcl
dec
mov
cmp
pop
lret
cmp
or
xchg
mov
push
hlt
stos
ja
das
arpl
js
cs
mov
repnz
sbb
mov
stos
into
push
insl
decb
xchg
xor
cltd
scas
sbb
sbb
sub
mov
cmc
push
addl
add
and
inc
xchg
jecxz
aam
xchg
fdivl
mov
mov
int3
cli
ret
movsb
lods
fs
or
add
xor
mov
shrl
mov
inc
or
mov
adc
sbb
xor
jno
mov
cmc
xchg
int
aam
and
aad
int
jmp
loop
call
stos
sbb
lods
sub
pusha
adc
and
xor
mov
add
lcall
push
mov
xchg
push
insb
sbb
push
cltd
mov
or
fucomp
repz
mov
repnz
pusha
mov
rep
sbb
pop
jge
sub
aas
sub
mov
sub
mov
test
mov
rorb
les
push
xchg
inc
bound
pop
idiv
xchg
and
cwtl
jne
pop
dec
test
nop
inc
rcll
mov
jno
in
pop
and
testl
xchg
pushf
push
loopne
cmp
ret
lahf
inc
mov
fnsave
pop
xchg
cmp
and
jns
mov
clc
xor
mov
repz
jle
sub
lret
cmp
ret
outsl
adc
xchg
mov
mov
popf
push
mov
lea
push
jmp
mov
mov
enter
xchg
add
sbb
in
sub
shll
mov
call
rclb
adc
jl
cmpsl
push
ljmp
jae
jbe
rcll
xor
xchg
and
inc
insb
push
icebp
sbb
out
jns
push
pushf
cmc
push
push
addr16
hlt
pop
and
push
rcr
dec
flds
imul
cmpsl
xchg
mov
xor
mov
jnp
les
hlt
lds
pop
mov
mov
adc
rcll
sbb
popa
divb
inc
movsl
or
mov
or
clc
mov
jp
mulb
aaa
repnz
jp
mov
loop
mov
push
lret
pop
or
push
push
or
and
loop
sbb
lea
ss
lahf
test
jp
popa
xchg
sbb
dec
sbbb
cwtl
cmc
sbb
jno
or
push
aad
adc
pusha
outsl
hlt
arpl
pop
jbe
xchg
out
test
jp
xor
jno
andl
imul
xor
fldcw
je
movb
jb
sti
int3
mov
stos
mov
lcall
fisttps
mov
cs
es
clc
hlt
mov
mov
rcll
dec
je
xlat
mov
mov
and
test
sbb
mov
aad
rol
jg
inc
add
and
aaa
filds
jbe
adc
add
inc
pop
loop
adc
mov
enter
popa
xchg
mov
adcb
or
dec
dec
sbb
ret
push
or
adc
xchg
fmuls
pop
add
or
add
inc
clc
adc
or
and
push
loop
push
dec
or
adc
mov
sub
pusha
or
sub
les
out
adc
loopne
call
xchg
push
orb
dec
or
adc
mov
sub
and
add
adc
mov
shlb
push
mov
and
push
lcall
insb
and
call
fcoms
push
orb
mov
mov
adc
aam
les
sub
dec
mov
test
mov
dec
jl
mov
mov
pop
and
cwtl
dec
les
cs
jle
mov
adc
inc
xchg
adc
adc
sub
mov
adc
clc
dec
je
bound
imul
orb
subb
jnp
mov
inc
xor
ret
or
jno
cwtl
mov
dec
andb
mov
pop
and
test
int3
pop
inc
das
adcl
or
sub
adc
rorb
and
or
adc
jo
mov
bound
adc
mov
adc
xchg
clc
dec
sub
test
movsb
les
lcall
and
mov
adc
sub
pop
and
enter
popa
xchg
mov
das
adc
mov
inc
dec
adc
subb
xchg
or
adc
fmuls
pop
add
push
and
mov
pop
ret
jl
mov
sub
and
jno
mov
adc
enter
mov
mov
pushf
and
dec
dec
add
ret
je
mov
das
rcll
loop
mov
adc
orb
mov
lods
les
adc
xchg
or
pop
ret
insl
or
das
push
xchg
cwtl
mov
adc
and
inc
dec
adc
subb
push
movsl
mov
push
bound
adc
scas
dec
pushf
and
dec
mov
adc
fmuls
and
inc
or
xor
and
js
adc
stos
dec
insb
and
call
fcoms
imul
ret
xchg
or
adc
mov
dec
les
sub
dec
mov
sub
inc
inc
sub
and
or
adc
rorb
push
ret
les
stos
dec
adc
mov
sub
xchg
pusha
stos
les
adc
add
and
mov
insb
xchg
mov
das
popa
jg
mov
adc
and
dec
test
adc
call
sub
xchg
or
adc
js
mov
bound
adc
mov
adc
fisttpll
inc
xchg
adc
jo
xor
mov
adc
add
pop
ret
outsb
mov
adc
test
add
inc
das
das
inc
mov
dec
dec
sbb
mov
test
adc
rorb
popa
mov
rcrl
dec
dec
add
mov
mov
and
xchg
fmuls
nop
adc
pusha
dec
sub
loope
and
enter
mov
mov
pushf
and
dec
mov
adc
enter
loop
rcll
dec
mov
adc
nop
dec
add
ret
pop
or
sub
les
loop
outsl
mov
das
jno
mov
adc
and
cmp
push
bound
adc
test
pop
and
enter
mov
pop
dec
mov
xchg
mov
adc
fmuls
push
loop
rol
adc
dec
adc
mov
stos
xor
js
adc
call
sub
xchg
mov
adc
js
mov
bound
adc
mov
adc
xchg
clc
dec
sub
cli
cmpsl
les
cwtl
dec
adc
loop
push
xchg
mov
adc
xor
pop
inc
sub
add
and
enter
loop
mov
adc
orb
ret
xchg
or
adc
adc
pop
loop
push
outsl
mov
adc
pop
subb
rcr
mov
dec
adc
movsl
mov
push
inc
sub
cwtl
and
inc
dec
test
sub
dec
in
out
es
fadds
mov
sub
push
mov
movsl
sub
sahf
lods
test
mov
sub
and
mov
pop
and
jo
mov
bound
adc
mov
adc
add
push
inc
xchg
adc
pusha
dec
sub
inc
sub
xchg
or
pop
xchg
add
pop
bound
imul
mov
pop
mov
mov
mov
movsb
les
sahf
adc
mov
sub
mov
adc
xchg
push
dec
les
adc
mov
push
adc
mov
adc
bound
dec
pop
mov
adc
or
pop
ret
insb
or
cs
xchg
nop
mov
adc
and
add
xchg
sub
push
and
jno
mov
adc
sub
pop
mov
mov
pop
mov
nop
dec
shlb
mov
adc
and
inc
dec
test
sub
push
or
sub
pop
mov
dec
dec
mov
xchg
mov
adc
dec
faddl
rcll
enter
and
push
test
adc
dec
push
xchg
mov
adc
orb
mov
mov
adc
push
xchg
adc
adc
bound
dec
and
stos
add
and
clc
dec
je
subb
or
inc
xchg
mov
pop
loop
adc
mov
sbb
inc
dec
add
mov
test
sub
xchg
fdivs
adc
pusha
dec
test
and
loope
or
adc
clc
dec
lock
sub
dec
or
sub
test
add
inc
enter
dec
dec
cwtl
and
mov
adc
clc
dec
hlt
push
test
test
sub
dec
or
sub
mov
les
pop
mov
dec
xchg
and
mov
adc
rorb
mov
mov
and
and
jo
inc
push
bound
dec
je
mov
mov
pop
and
mov
pop
mov
mov
adc
and
sub
sub
dec
adc
mov
adc
sub
pop
and
inc
aam
out
mov
pop
subb
aam
mov
orb
mov
lods
les
rclb
xchg
xor
pop
bound
inc
fsubs
rorb
subb
nop
jecxz
cmp
and
or
adc
rorb
ret
mov
adc
xchg
pop
dec
inc
pop
loop
adc
mov
sub
xchg
call
mov
adc
js
xor
bound
add
stos
add
and
clc
dec
inc
pop
bound
push
mov
adc
stos
mov
scas
mov
pop
hlt
sub
push
lea
add
cli
mov
add
xor
pusha
and
add
outsl
inc
mov
and
cmp
sub
and
push
add
in
cltd
or
cmp
je
pusha
push
sub
push
adc
mov
mov
inc
mov
insb
jno
scas
mull
sbb
ror
push
cmpsb
inc
jbe
or
xchg
pop
or
in
or
inc
cs
in
mov
xchg
sbb
push
pop
pop
or
push
and
bound
push
inc
adcb
dec
add
adc
lods
pop
jne
and
xor
cwtl
lods
and
mov
mov
lods
ficompl
sub
fnstsw
enter
scas
inc
sbb
cmp
gs
ljmp
mov
add
ss
add
pop
insb
mov
add
and
fmull
push
and
or
jae
mov
pop
addr16
pusha
push
mov
popf
cwtl
or
add
lds
cmp
xchg
fcomp
mov
bound
dec
xor
adc
mov
or
pop
mov
push
xorl
shlb
adc
rol
mov
mov
adc
add
mov
sbb
sub
es
sbb
pop
lods
sub
rolb
or
ret
add
mov
push
or
jmp
cmp
sbb
out
sbb
or
lcall
lods
xchg
pusha
enter
dec
lahf
adc
jle
add
add
add
push
sub
and
push
xor
cmpsl
cmp
mov
xchg
gs
int3
mov
dec
xchg
inc
mov
mov
shll
out
add
sub
lods
movsb
stos
dec
imul
mov
or
add
mov
inc
shlb
mov
xor
mov
int3
mov
jmp
dec
pop
test
or
lock
jl
jae
adc
inc
adc
mov
mov
sbb
repnz
or
ds
add
add
loopne
cmpsb
sub
xor
add
push
and
ret
adcb
mov
repz
call
sub
loop
lahf
or
push
sbb
xor
aas
add
loope
inc
cmpl
sbb
or
lods
xlat
inc
sbb
xor
xchg
or
sbb
pusha
int3
roll
or
lea
add
pop
mov
movsb
push
pusha
call
ds
add
sub
sbb
push
add
push
adc
xor
pop
pop
add
in
mov
add
je
mov
lock
inc
cmc
lock
sarb
popa
sbb
imul
aas
cwtl
adc
pop
xchg
lods
jns
call
or
in
cmp
inc
inc
adc
or
sti
adc
add
mov
cmp
dec
aaa
pusha
xchg
sbb
or
mov
outsb
gs
and
add
mov
jmp
stos
push
dec
enter
inc
rcrb
pop
or
inc
cli
and
and
inc
stc
push
addb
lahf
or
ret
pop
lret
mov
adc
popa
loop
pop
add
add
sbb
fwait
movsb
sbb
lret
add
add
inc
mov
sbb
mov
scas
dec
es
add
aad
addl
je
cwtl
adc
adc
dec
fsub
inc
out
jp
jmp
mov
bound
test
lock
les
fstps
cmp
orb
add
add
xlat
int3
insl
int3
ret
add
scas
and
orl
or
ja
adc
lds
pushf
xor
xor
cmp
xor
bound
aaa
xor
adc
fildl
pop
sub
adc
add
or
mov
adc
inc
jne
or
cltd
out
and
adc
adc
lea
rolb
push
jns
mov
mov
sbb
leave
aaa
push
int3
dec
cmpsb
sub
test
arpl
add
rcr
fdivrs
outsb
enter
sub
movsb
leave
pop
out
and
enter
dec
add
in
shlb
or
jmp
inc
add
arpl
test
call
jge
fsubrl
sbb
sub
in
push
adc
or
lret
add
shlb
pusha
das
repnz
add
xchg
ds
aaa
and
add
std
lret
pop
inc
andb
icebp
mov
addr16
ret
inc
outsl
pop
loope
cmp
insb
nop
les
es
dec
push
pop
add
add
or
andb
xchg
loop
dec
in
sbb
ds
bound
nop
cmc
inc
mov
xchg
les
adc
xor
push
in
fcmovne
mov
addb
dec
dec
mov
push
or
in
pusha
push
or
popa
cltd
jne
or
inc
jl
jo
jp
cmp
adc
push
add
xchg
addr16
dec
data16
movl
push
sub
xchg
loop
ret
add
and
pop
dec
lahf
mov
dec
cmpsb
cmp
rclb
adc
or
jns
mov
inc
mov
and
xor
and
ljmp
cmp
or
add
or
adc
clc
in
xor
andb
test
sbb
addb
fs
add
cmp
xor
jne
mov
cmp
ja
adc
push
cmp
adc
push
cmp
sbb
cli
xor
or
test
lods
jns
or
mov
enter
and
mov
sbb
adc
shlb
xchg
and
adc
dec
adc
repz
adc
test
cmpsb
jl
stc
jnp
repz
sub
sbb
jge
cwtl
and
dec
rolb
xor
movsb
pop
xor
add
or
mov
lods
xchg
pusha
mov
add
out
xchg
sbb
fcoms
mov
jne
or
pop
sub
pop
sub
sbb
sbb
add
push
add
repnz
push
adc
or
jnp
push
nop
and
inc
call
in
xor
lret
sbb
and
adc
fs
add
dec
or
add
add
or
outsb
movsl
adc
loop
fs
lret
test
adc
call
shrl
sbb
xchg
pop
sbb
mov
mov
imul
pop
data16
mov
test
xchg
add
pusha
add
icebp
cmc
xor
xchg
and
out
and
mov
pushf
cwtl
les
mov
ds
fldenv
push
test
pcmpeqb
test
cmp
imul
les
add
fldl
add
push
adc
xor
repnz
inc
imul
jecxz
add
xor
sbb
bound
mov
sahf
sub
repz
xor
arpl
adc
jmp
lods
mov
cmp
push
rorb
mov
push
lcall
orb
push
movsb
arpl
add
addb
add
aad
fmull
sbb
xchg
add
lret
cmp
adc
add
push
shl
enter
push
lcall
xor
sub
add
dec
add
imul
xor
addl
orl
push
mov
inc
cmp
mov
or
push
or
and
movsl
sti
mov
rcrl
and
pop
and
stc
les
sub
dec
sahf
cmpsb
inc
push
rclb
fmull
push
add
dec
dec
cmc
jle
add
sub
out
pop
stos
pop
fisubs
sub
inc
add
or
pop
pop
or
push
mov
nop
cltd
add
adc
xor
adc
push
test
outsl
mov
xchg
jno
or
xchg
pusha
push
paddw
or
push
cmpsl
xor
sub
adc
sub
ds
enter
mov
sarl
or
adc
push
add
add
add
mov
jecxz
xor
lods
je
push
or
mov
ret
pop
add
push
int3
pusha
xchg
lock
cmp
sbb
xchg
lret
cmp
or
shll
jnp
popa
shlb
add
mov
jge
adcl
fldl
ret
stos
pop
add
add
dec
mov
xlat
sub
jmp
fadds
sbb
adc
mov
jbe
xor
addb
add
into
gs
lods
add
push
mov
out
lea
adc
sbb
fldl
add
rol
addb
out
add
and
inc
pop
inc
cmp
or
sub
mov
and
adc
jge
jbe
jne
scas
arpl
enter
cwtl
add
push
and
sbb
mov
jecxz
add
rorb
enter
nop
mov
inc
pushf
ret
sbb
xchg
mov
dec
or
cmp
and
popf
enter
aam
xor
or
pop
dec
jne
out
cmp
mov
lret
sbb
xchg
jne
add
adc
add
fiaddl
ja
and
xor
add
cmp
or
sahf
cmp
into
cwtl
mov
add
test
jl
lods
mov
pop
addr16
movsb
lahf
or
add
push
and
addl
cltd
or
mov
sbb
push
push
xlat
push
cmp
xchg
or
add
call
cltd
ret
add
add
aam
insb
and
nop
push
sub
and
sbb
inc
insb
jns
jae
popw
push
mov
int3
repz
cmp
out
add
lretw
pop
stos
add
test
or
adc
adc
movsl
addl
addl
adc
xor
test
inc
cmpsl
and
adc
xor
inc
jo
int3
ficomps
shrl
cltd
or
je
test
and
push
mov
pop
jne
movl
into
xchg
ret
dec
push
inc
or
and
es
inc
fs
and
rcll
jae
repnz
inc
stos
fmulp
bound
cli
sbb
icebp
testl
ds
leave
sbb
movsl
mov
fimull
add
xchg
add
je
in
pusha
repz
pusha
or
mulb
inc
test
add
mov
sqrtps
add
in
sbb
dec
adc
xor
ret
push
cli
rolb
addl
addl
int
int3
popf
bound
mov
scas
decl
add
fildl
lretw
js
jge
enter
int
cmp
mov
icebp
mov
and
add
repnz
and
fcomps
test
sub
add
inc
and
fidivrl
push
cmp
sbb
adc
xchg
outsb
push
pusha
stc
sbb
pusha
test
sub
mov
aam
add
dec
out
inc
mov
adc
jle
int3
and
sub
xchg
inc
or
insl
pop
add
dec
add
lds
add
adcl
inc
leave
adcb
xor
mov
subl
jne
adc
sbb
orb
in
lods
sub
and
mov
mov
jnp
pop
add
fisubl
push
add
or
and
sub
adc
inc
adcb
adc
test
cmp
and
xor
enter
test
add
test
adc
jo
inc
les
sub
int
andb
lahf
insb
insl
push
push
sub
xchg
test
dec
or
jns
icebp
sub
dec
add
je
inc
push
andb
mov
pop
lods
adc
xchg
stos
test
cwtl
es
enter
pop
in
pop
or
jns
and
and
rol
or
push
shrb
jno
mov
lret
xor
aam
or
popa
shl
into
inc
rorb
mov
xchg
adc
rorb
enter
add
subb
xor
add
xchg
or
pop
and
or
xor
scas
aam
cmp
loopne
in
inc
inc
or
add
sbbl
movsl
call
mov
fs
xor
lret
iret
fs
sub
xchg
jno
sub
push
out
mov
add
add
fimuls
pop
arpl
add
aad
and
xor
jmp
ret
call
or
gs
es
push
arpl
out
popa
or
mov
shll
popa
call
sbbl
xor
or
xor
test
jnp
and
ret
adc
push
push
cmp
push
pusha
xchg
push
outsb
dec
jne
xor
add
mul
or
or
inc
add
xor
dec
mov
mov
cmp
sub
outsl
xor
sbb
lret
push
and
sub
or
pop
movnti
push
push
addl
mov
or
test
lea
mov
lock
cli
add
jecxz
inc
sub
push
mov
xor
and
or
xor
adc
adc
xchg
add
loop
or
add
jp
enter
sub
xor
or
leave
push
inc
pop
into
inc
or
smsw
jae
push
int3
test
adc
nop
orl
xor
inc
xchg
mov
or
push
push
xchg
or
adc
pop
sub
rclb
cli
mov
test
adcb
sahf
and
sbb
js
sahf
mov
jns
and
jo
lods
movsl
mov
lock
jp
mov
sti
mov
cmp
dec
mov
cltd
nop
xor
testb
add
and
das
add
testb
lods
push
roll
pusha
in
pop
test
dec
stc
popf
push
arpl
jb
sbb
ret
sub
and
lds
xor
jp
fs
mov
sbb
mov
movsb
test
stos
inc
shlb
jns
dec
and
push
smsw
scas
xchg
mov
add
fisubs
inc
das
add
add
ret
fld
mov
cmp
int3
adc
push
mov
addl
xor
movsl
jp
jb
repnz
lock
inc
orb
fimuls
jl
jge
push
int3
cmp
stos
xchg
and
xchg
mov
add
ljmp
cmpsl
jo
pusha
sub
adc
inc
shl
enter
aam
inc
test
notb
xor
inc
inc
add
dec
add
mov
xor
inc
pop
dec
xor
adc
rolb
adc
or
jno
fstl
add
push
or
mov
in
sahf
adc
inc
xchg
mov
fdivrp
or
insb
cmp
movsb
adc
sahf
test
shrb
ror
insb
lret
fadds
std
dec
sbb
xchg
test
test
lret
mov
sub
and
add
fcoms
mov
add
jne
sbb
ret
jg
pusha
inc
lods
negl
repnz
rol
stos
push
lcall
mov
clc
fsubrl
lret
imul
jns
inc
pusha
jmp
orl
push
pop
cli
dec
push
loopne
cmp
xor
roll
add
lods
lods
stos
dec
jne
mov
and
xor
cwtl
add
mov
and
addb
lret
mov
and
adc
cmpb
sbb
sbb
or
ret
loope
mov
clc
movsb
xor
and
cmpsb
fidivs
fld
mov
leave
pusha
test
stos
jl
das
push
add
mov
gs
faddl
cli
dec
add
cmp
xor
push
sub
sbb
pop
lret
xchg
aam
sub
and
xor
addl
push
iret
test
movb
mov
popa
add
jno
lods
cli
js
adc
adc
add
inc
add
jge
adc
inc
cmpb
cmpsl
sarb
sub
adc
adcb
xchg
out
push
faddl
push
pop
movsb
leave
movl
xchg
int3
fs
mov
out
pop
add
loope
pusha
mov
push
xor
mov
loope
mov
sub
inc
xchg
xchg
btc
daa
outsl
jp
sub
jno
sub
inc
push
sub
dec
loop
adc
or
mov
subl
faddl
gs
mov
out
icebp
lea
movsb
mov
mov
or
add
push
lds
imul
inc
repz
and
nop
push
mov
lds
pusha
shrb
adc
sub
addb
test
jne
xchg
fcompl
sbb
jmp
imul
cltd
ss
cmp
nop
repnz
cltd
iret
sbb
pop
xor
sub
inc
rclb
mov
cmp
push
addr16
push
mov
mov
or
bound
stos
pop
sub
sbb
add
push
fsubs
into
popl
dec
xchg
push
adc
das
add
and
insb
mov
jae
pusha
test
mov
push
imul
and
pushf
das
lret
sbb
sub
or
add
lret
inc
or
popf
adc
sbb
and
sub
xor
into
mov
call
jbe
enter
and
pmaddwd
bound
push
mov
test
mov
adc
xchg
xor
add
add
out
loop
gs
sbb
xor
loope
sub
aad
hlt
jno
or
pusha
xor
sub
dec
sub
xor
adc
and
or
bound
add
adc
push
push
jbe
test
mov
push
cmp
adc
cmp
incl
add
jge
pusha
repz
shll
add
ret
lea
aad
push
add
sub
add
cmp
dec
bound
mov
int3
lret
push
adc
fdivrs
dec
dec
push
cltd
dec
push
or
scas
inc
inc
test
cmp
pop
and
cmp
aam
rcrb
out
pop
sbb
sbb
out
jns
xchg
mov
lods
inc
fidivl
mov
add
out
xor
add
add
dec
lsl
jl
mov
movsl
cmp
add
sub
test
test
mov
pusha
sbb
xor
lds
adc
sbbl
jl
sub
insl
and
and
aam
pusha
in
test
test
leave
push
lcall
popf
inc
nop
or
jg
adc
cmp
adc
lret
stos
pop
imul
gs
push
add
inc
loope
xchg
push
inc
insl
lods
test
pushw
or
fnstcw
or
dec
ds
sbb
add
jo
add
sarl
adc
dec
fisubrs
jns
sbb
push
xchg
lea
or
fwait
push
add
sub
fdivrl
sbb
addl
jmp
mov
pop
lret
sbb
add
mov
roll
test
adc
inc
int3
into
repz
andb
pop
xor
mov
and
adcb
sub
adc
mov
test
push
mov
add
push
adc
nop
mov
pop
push
js
sub
mov
cltd
sbb
push
sub
push
ss
ljmp
jmp
add
and
add
popa
xor
cltd
add
sbb
pop
shrl
dec
jmp
call
stos
pop
fisttps
add
inc
xchg
mov
adc
or
and
mov
push
mov
jo
shrb
test
movsl
pusha
adc
test
inc
mov
es
xchg
add
popa
inc
stos
pop
adcl
and
push
sub
fiaddl
adc
jo
inc
xchg
repnz
add
popa
sbb
cmpsl
jb
add
mov
pushf
movsl
push
fs
test
add
roll
xchg
push
sub
lods
add
out
gs
jo
mov
sbb
adc
mov
mov
inc
mov
xchg
adc
aam
in
inc
xor
sub
lcall
jb
fbld
imul
push
sahf
pop
adc
lret
sbb
adc
push
adc
mov
jno
rep
fsub
cmpsl
stos
int
xor
add
adc
mov
cltd
ror
adc
adc
adc
loopne
mov
adc
pop
and
ljmp
push
cmpb
cs
push
pop
sub
pop
cmc
jns
sbbl
jge
and
sbb
sub
xchg
adc
pop
cmp
and
jb
adc
je
add
push
test
xor
mov
sub
bound
adc
sub
xor
mov
cmp
repnz
adc
or
mov
sub
sub
pop
pop
jnp
inc
add
adc
jmp
inc
xlat
cwtl
ss
shrl
mov
outsb
mov
and
out
sbb
jecxz
ret
mov
in
dec
cmpsl
mov
cmpsl
pop
in
mov
push
xor
mov
xchg
jl
je
test
int
inc
repz
sbb
add
mov
int3
sbb
cld
sbb
rcl
cld
inc
jae
jp
mov
or
mov
cltd
and
adc
ja
mov
hlt
cmp
jecxz
mov
xor
sub
jecxz
pop
xor
dec
test
sub
push
lret
mov
add
inc
xlat
out
mov
mov
cmc
sbb
cmc
jb
ss
and
out
rol
fcomps
insb
scas
pop
fwait
mov
push
and
bound
lods
aas
aad
out
pop
pop
cmp
mov
dec
xchg
sbb
push
cmpsb
sub
sub
mov
mov
xchg
adc
mov
adcb
jmp
aas
aas
cli
jns
lods
add
enter
jo
pusha
in
aas
mov
mov
addl
add
add
or
push
imul
lea
add
test
addr16
lcall
add
test
inc
outsb
push
xor
xor
and
ja
adcb
popa
lret
bsf
push
cmc
dec
in
popf
inc
hlt
jecxz
xchg
popa
mov
or
mov
pop
lods
pop
push
mov
cwtl
and
sbb
pop
mov
inc
xchg
std
pusha
repz
int3
daa
push
mov
cld
jmp
scas
or
rorb
call
bound
mov
ret
adcl
and
in
loop
inc
loop
iret
jnp
mov
shrb
push
or
xor
sub
mov
out
sub
sti
lcall
repnz
call
shrb
xchg
cs
das
jae
push
in
sub
stos
fs
xchg
idivl
in
daa
outsl
jle
sbb
loopne
xlat
incb
add
xor
lods
test
mov
jg
xchg
cmp
fimuls
mov
mov
sub
adc
repz
adc
push
push
or
movsl
sbb
dec
add
cli
sahf
sub
sub
push
std
outsl
sbb
mov
add
stos
xchg
lret
push
jmp
lahf
fcmovnb
mov
imul
pop
mov
std
out
cmpsl
and
inc
into
cmp
xor
or
into
xor
mov
and
sbb
mov
xor
jge
rcrl
pop
mov
test
ret
xor
or
scas
inc
jmp
jle
mov
add
subl
mov
in
mov
repz
xor
loop
jle
sti
js
sub
mov
xor
pop
mov
cld
pop
loope
pusha
fsubs
sbb
pop
xchg
pop
jge
gs
push
xchg
popl
xor
aam
and
pop
sbb
mov
jmp
das
xor
cmp
xchg
add
hlt
fisttpll
adc
or
scas
dec
insl
insl
lahf
add
jecxz
push
js
js
imul
pop
pop
out
inc
lcall
mov
loop
push
test
in
sbb
leave
lret
je
jnp
divb
push
pop
sbb
out
cmp
adc
dec
pop
ja
push
ret
adc
jno
data16
sbb
icebp
subps
mov
add
mov
icebp
divb
stc
dec
xchg
xor
or
inc
inc
pop
mov
add
lods
dec
pop
aad
inc
adc
xchg
add
add
nop
cmp
push
sub
test
or
xchg
sub
adc
mov
sub
xor
sti
std
dec
xchg
pop
push
incb
repz
iret
push
lahf
xchg
cwtl
jl
push
repnz
out
mov
xor
mov
fs
sbb
mov
lock
mov
daa
pushf
pop
push
inc
sub
stos
pop
mov
dec
clc
xchg
or
inc
and
add
sbb
or
aaa
leave
sub
dec
jae
jmp
cmp
push
adcl
sarb
pop
add
nop
adc
sub
xor
sbb
sub
std
pop
mov
push
scas
xchg
nop
cwtl
xor
xor
popl
mov
in
sarl
ja
out
mov
imul
movsb
add
push
add
jne
or
or
add
mov
popl
fsubs
mov
add
and
cmp
lcall
addb
sti
adc
sub
cmpsl
loope
xchg
add
adc
or
xchg
ss
add
cli
sub
imul
xchg
sbb
add
push
adc
rcll
sub
and
enter
add
adc
stos
dec
or
cwtl
cmpsl
les
lcall
and
mov
rolb
and
push
bound
lea
mov
shl
addl
std
and
adc
cmp
push
mov
add
je
out
jmp
sbb
jl
mov
xor
adc
xchg
mov
test
and
sbb
shrb
mov
cmpsb
repnz
push
cmp
dec
addl
xchg
inc
mov
jg
lea
dec
mov
xchg
test
popf
std
cmp
pop
lods
cmp
mov
inc
pop
or
cmc
scas
mov
js
loop
and
hlt
pushf
int3
mov
add
cmp
or
or
ret
xor
and
pop
or
fisttpl
or
faddl
je
cs
enterw
xor
hlt
stos
and
add
rolb
or
inc
test
mov
and
push
and
adc
call
sbb
sbb
insb
call
aaa
add
nop
or
push
or
aad
mov
popa
push
les
xchg
clc
sbb
sbb
popa
insb
jne
das
test
shrb
adc
inc
mov
xchg
inc
dec
mov
mov
add
inc
in
scas
add
out
call
xor
repz
gs
push
repz
fimuls
push
xor
insb
orl
mov
fildll
xor
aas
and
test
test
cmp
adc
mov
mov
jns
add
lods
push
push
jne
pop
jecxz
jne
mov
dec
sub
add
test
adc
xchg
adc
fucom
cmpsb
adc
xor
or
adc
addr16
inc
into
sbb
ds
mov
add
xchg
xchg
inc
int3
xchg
jge
push
dec
outsl
orb
xor
in
inc
adc
jo
jae
mov
je
imul
xor
in
pop
mov
pop
arpl
xchg
xlat
addr16
lret
jno
cmpl
bnd
sbb
je
mov
xlat
daa
or
ja
adc
mov
outsb
rcll
faddl
js
xorl
mov
shr
sahf
lods
sti
push
jns
ljmp
sub
imul
mov
out
push
mov
jbe
xchg
push
ds
add
jle
and
es
jge
pop
cli
mov
lahf
dec
std
hlt
xchg
xchg
jp
addr16
mov
rorl
and
lahf
adc
pop
xchg
outsb
xchg
bound
pop
fwait
and
xor
mov
push
fnstcw
inc
sub
mov
idivb
sbb
push
or
mov
sarl
cli
in
idiv
out
scas
lods
mov
mov
xor
xor
lret
mov
je
xchg
int3
fwait
fmull
jne
cmp
hlt
pop
lods
sbb
daa
mov
aaa
js
pusha
xchg
cmp
lods
loop
mov
std
testb
fmulp
mov
jmp
push
fidivl
mov
insl
mov
jbe
sbb
scas
pop
pop
popf
repz
jg
dec
jg
lea
lods
repnz
cltd
fildll
rcll
jle
lret
inc
jb
mov
aas
adc
adc
popf
xlat
lcall
pop
int
int3
repz
clc
dec
xchg
ja
out
out
loop
xor
dec
inc
negb
cmp
mov
jp
jmp
ss
bound
mov
addr16
rclb
stos
and
outsb
push
mov
sti
in
xchg
aaa
stos
frstor
iret
push
inc
xor
stc
jmp
mov
mov
mov
pop
cmp
add
das
pop
adc
mov
mov
and
js
ficomps
push
pop
aaa
mov
cmp
mov
xchg
cltd
sbb
lods
nop
xchg
mov
fisubrl
loopne
adc
adc
dec
hlt
mov
sub
fmulp
xchg
jl
xchg
lahf
shlb
cwtl
cmc
xor
adcl
mov
out
stc
inc
xchg
andl
addr16
mov
subl
cmpsb
mov
cmp
and
bound
hlt
cmpsl
dec
scas
lock
mov
in
test
xor
push
gs
stos
mov
test
mov
add
dec
dec
mov
xchg
icebp
test
repnz
fstl
add
in
out
sub
adc
bound
add
or
add
add
add
add
add
adc
repz
lahf
sub
lds
add
test
mov
pop
mov
jne
jae
adc
mov
movsl
pop
idivb
fisubrs
and
adc
inc
add
adc
cmp
add
ja
xchg
nop
push
jo
xor
push
outsl
pop
stos
adc
mov
pop
dec
pop
add
sbb
test
test
mov
sub
or
xchg
and
aad
xor
pushf
or
or
enter
jmp
sar
pusha
adc
xchg
or
adc
add
and
add
add
rorb
inc
jbe
add
add
add
push
js
and
out
es
cmp
push
xor
jmp
mov
cwtl
sbb
and
ret
lcall
test
into
push
mov
mov
mov
pop
add
pop
add
mov
jl
xor
xchg
outsb
lea
mov
out
jmp
cmp
inc
outsb
into
mov
xchg
test
inc
into
je
and
sarb
dec
and
inc
dec
mov
lods
popaw
es
rclb
pop
clc
out
mov
out
mov
in
jg
fadds
push
movsl
push
xor
push
jg
cmp
lret
sub
popa
arpl
pop
aas
jbe
mov
and
mov
mov
jnp
push
icebp
in
out
cld
repnz
clc
xor
xchg
push
sbb
ret
adc
mov
aad
mov
in
ss
inc
pop
je
jmp
jb
sbb
pop
xlat
jnp
dec
negb
pop
dec
xchg
nop
inc
addr16
push
jg
loopne
test
lock
out
jne
aas
cmp
mov
push
jecxz
add
lret
add
cmp
mov
in
shl
daa
xorl
lds
mov
xor
aas
paddb
and
push
and
add
mov
sbb
and
push
sub
pop
dec
sbb
sub
aas
pop
inc
or
xchg
daa
fidivrs
cld
inc
mov
mov
sbb
mov
out
xlat
negl
push
add
repz
adc
shrb
or
xchg
pushl
push
mov
mov
lcall
inc
jnp
scas
test
bound
inc
shll
xor
jmp
jmp
jno
in
ss
imul
das
inc
sub
sarb
inc
mov
nopl
mov
lock
sti
mov
adc
cli
bound
lods
ret
repz
jo
dec
lock
mov
or
push
cmp
mov
dec
insl
or
repz
out
std
and
inc
lret
add
aam
insl
popa
xchg
mov
sti
cli
scas
or
fwait
add
xchg
lds
jb
aas
pushf
add
mov
xchg
adc
lds
dec
mov
cmpsl
inc
or
xchg
cmp
out
inc
fs
sub
imul
ss
addr16
loopne
inc
push
out
movsb
mov
jne
scas
add
xor
bnd
movl
mov
xchg
scas
cmp
inc
das
mov
loope
pop
syscall
cld
or
mov
jbe
cmp
push
pmuludq
jae
gs
fdivrl
add
inc
sarb
jns
leave
lret
or
das
lea
ljmp
out
push
pop
cli
jns
sbb
and
sub
and
ret
add
aas
decb
ret
mov
nop
adc
push
xchg
sub
negb
pop
cmp
out
inc
test
fidivrs
or
mov
lods
int3
sub
rclb
mov
int3
mov
lcall
iret
shlb
add
mov
sbb
xchg
xlat
jmp
xor
testb
icebp
jbe
mov
sub
icebp
mov
ss
jp
inc
pop
insb
adc
test
je
out
loop
push
aaa
xchg
inc
dec
sub
pop
push
xor
push
inc
mov
hlt
or
dec
lods
push
sbb
pusha
push
insl
outsb
adc
mov
call
inc
pop
ret
and
roll
ret
stos
mov
add
loope
fs
lds
push
stos
lcall
jno
sbb
xchg
test
adc
or
push
pop
xlat
lods
xlat
lods
and
cmp
lock
mov
scas
data16
mov
pushf
scas
push
adc
adc
icebp
mov
out
dec
cwtl
mov
dec
jmp
bswap
mov
sub
fistpll
out
lahf
add
push
paddb
xchg
sub
gs
push
enter
jno
out
lret
test
std
test
lock
mov
jecxz
pop
pop
pop
mov
mov
inc
sbb
ret
jns
fwait
insb
or
mov
shlb
out
mov
mov
es
movl
das
mov
add
std
lods
push
and
addr16
pop
lock
sti
push
mov
lea
mov
jecxz
in
enter
jo
xor
ss
rolb
std
inc
xorb
mov
mov
movsb
jbe
cmp
jno
out
mov
jle
and
inc
movsb
ds
int
scas
or
sahf
arpl
dec
jo
add
leave
xor
or
fidivrl
iret
repz
les
divb
adc
pop
mov
pusha
push
fmuls
or
cld
in
ljmp
push
jecxz
stos
pusha
call
push
lahf
test
mov
adc
std
jo
pop
out
lods
xor
cli
ret
xor
and
rclb
in
xor
adc
insl
sbb
sub
jo
shr
ja
jecxz
arpl
or
shll
and
pop
sbbb
adc
std
mov
je
or
pop
push
push
popf
jle
movsb
popf
iret
in
jl
jns
fisubs
adc
and
test
ja
push
mov
dec
inc
ljmp
and
stos
mov
cmp
pop
push
xchg
loopne
call
lahf
test
stos
add
mov
or
inc
mov
push
icebp
jg
sub
mov
lret
cs
mov
or
mov
jecxz
adc
jp
int3
shlb
pop
xor
sub
jle
inc
mov
jne
daa
orl
pop
repz
sti
repz
mov
push
adc
pop
js
pop
xor
test
aaa
jle
add
cwtl
stc
pop
xchg
iret
jl
or
mov
dec
pop
push
lcall
lahf
mov
shll
adc
mov
cmp
in
test
mov
cmp
fwait
fwait
stos
insl
push
lret
out
pop
in
bound
or
stos
es
ret
sbb
xor
add
imul
or
std
and
ljmp
push
rcrb
or
daa
jb
dec
scas
dec
adc
adc
pop
pusha
or
ss
aas
xchg
jnp
ret
jns
cmc
mov
sbb
or
out
jae
push
push
insl
movsb
dec
idiv
jge
jne
jae
loope
cmpsl
adc
inc
dec
js
or
pop
jle
mov
sbb
cmpsb
or
and
add
adc
pop
daa
pusha
les
lods
lret
inc
mulb
sub
xchg
orb
rcll
mov
jmp
sub
push
call
stc
adc
sub
incb
out
cmc
mov
and
subl
inc
in
call
adc
repnz
in
jbe
mov
pop
inc
cld
jg
clc
fimull
cs
js
adc
test
test
mov
out
rcrl
mov
fstpl
mov
cltd
and
jmp
adc
lret
sbb
cli
push
jl
push
pop
inc
inc
push
mov
dec
mov
dec
data16
call
push
jns
in
clc
cmp
insb
mov
hlt
push
std
in
jbe
fdivrs
mov
mov
aas
filds
cmp
and
fs
push
add
lock
outsb
inc
ficompl
mov
or
adc
mov
arpl
cmp
pop
addr16
dec
aas
mov
xchg
fldl
enter
inc
dec
sbb
scas
lcall
adcb
jns
cld
mov
subl
stos
xchg
sub
pop
lcall
mov
scas
std
cmc
mov
xor
pusha
cli
mov
xchg
testl
jecxz
lods
jns
add
imul
arpl
xchg
sub
push
mov
ret
dec
mov
xchg
push
and
loope
pop
xchg
pop
bound
jo
test
sbb
add
dec
test
xor
popa
and
ljmp
cmp
lods
out
cmc
and
loop,pn
sbb
dec
dec
push
fimull
mov
mov
adc
in
or
pushf
inc
jmp
xchg
test
test
and
push
inc
pushf
sub
fimull
jo
cwtl
faddl
pop
sahf
cmp
outsl
jb
arpl
mov
cs
int3
xor
cld
stos
cmp
pop
jno
stos
push
popf
rorb
call
movsl
xor
cld
ds
ds
cmp
lock
rclb
rorl
lret
insb
dec
pop
pop
add
jecxz
dec
xchg
int
int
test
push
popl
mov
push
shl
mov
lds
xor
icebp
mov
inc
adc
and
icebp
and
repnz
xor
insl
pop
adc
ja
inc
xchg
xchg
sbb
push
dec
enter
mov
sahf
shl
imul
inc
mov
clc
shll
imul
pop
insl
movsb
enter
ja
dec
ret
xor
or
adc
dec
xchg
icebp
int
cltd
fs
negb
and
insb
sub
sub
shrb
and
pop
xchg
jno
adc
ret
push
in
call
mov
mov
nop
mov
mov
outsl
pop
mov
jae
add
pop
mov
pop
or
js
mov
mov
cmpl
mov
xlat
lods
sub
test
xor
jmp
loop
fs
jg
mov
es
lock
es
dec
lcall
jmp
pusha
call
push
and
mov
aam
mov
ret
inc
cmc
xchg
ja
scas
mov
fs
imul
and
into
popf
dec
rcrb
dec
mov
add
addl
pop
es
xchg
xorb
pop
add
cmpsb
push
xchg
mov
cmpb
add
dec
movsl
jne
pop
push
push
dec
or
sub
sub
popf
sbb
inc
fs
inc
outsb
sub
cwtl
es
out
loopne
inc
fisttpl
xchg
mov
sar
dec
sub
daa
pop
leave
adcl
jb
add
outsl
int
inc
stos
mov
in
jbe
xlat
cld
lds
inc
or
jg
jle
push
cmpsl
mov
mov
mulps
mov
and
cmc
add
cld
mov
pop
mov
adc
xchg
dec
lds
xor
mov
push
add
std
inc
jge
lock
das
mov
stos
test
add
sti
xchg
insb
test
push
push
pusha
jecxz
pop
jbe
mov
mov
cmp
xchg
pusha
inc
loop
mov
cwtl
sub
adc
push
jg
and
adc
aas
xchg
out
inc
rcll
dec
xor
push
xlat
mov
and
sub
cmpsl
dec
cmpl
mov
imul
xchg
lods
xchg
sbb
push
addb
sub
xchg
dec
jne
es
daa
push
add
jo
mov
add
int
cmpsl
and
push
pop
sub
xor
cmp
data16
inc
jge
mov
jo
inc
sub
jecxz
jno
hlt
gs
lea
add
xchg
and
and
add
add
imul
test
incl
jmp
push
jb
push
jecxz
rolb
xchg
cmpsb
push
lods
rclb
lock
xchg
cmpsb
imul
xchg
jle
mov
stc
sbb
xor
into
out
dec
dec
fdivrl
fsubr
mov
sub
inc
mov
test
sti
clc
rcl
fnstsw
les
push
imul
xor
mov
adc
add
lods
testl
rcll
jne
mov
mov
ds
sahf
xor
pop
scas
xchg
aaa
mov
sub
lahf
mov
mov
scas
data16
repz
imul
jl
cmpsb
fnsave
clc
aaa
fstpl
xchg
pop
jb
stc
roll
inc
or
mov
xchg
movsl
mov
rcr
sub
imul
or
adc
and
cwtl
rcrl
add
dec
inc
movsl
push
out
add
scas
sub
jno
xchg
mov
arpl
loopne
enter
mov
xor
cltd
mov
jae
or
dec
lahf
jle
sub
push
inc
dec
push
xchg
add
gs
es
push
into
xchg
out
mov
xchg
push
push
stos
add
adc
mov
or
mov
mov
imulb
jp
mov
cmp
testb
sbb
cmp
push
xchg
clc
loopne
cltd
or
scas
adc
and
xchg
adc
cmp
addr16
add
mov
mov
fists
mov
pop
mov
inc
daa
cs
cwtl
aad
sbb
push
mov
cli
sahf
cli
mov
les
dec
push
rcrb
sbb
ds
lods
sbb
push
and
inc
xchg
fcmove
cmp
imul
sbb
mov
pusha
xorb
cmp
jne
mov
jb
fistps
in
test
push
js
jg
mov
jecxz
call
sbb
scas
jmp
inc
ss
sub
or
mov
adc
jbe
sbb
iret
push
aam
add
dec
cmp
xchg
pushf
push
test
popf
push
hlt
adc
push
bound
loopne
into
push
scas
js
mov
cmpsl
ret
mov
leave
push
shrl
push
lahf
pop
jle
test
ficoml
stos
push
fsubl
add
test
or
lret
cmp
cli
add
pop
ret
out
xchg
inc
xchg
push
inc
std
sbbl
neg
xchg
insl
ret
adc
and
les
jecxz
adc
inc
lock
sub
push
xor
sbb
sarb
mov
iret
insb
in
jl
stc
add
mov
cmc
iret
xchg
mov
jns
sub
pusha
xchg
pusha
sub
out
and
rcrb
push
xchg
fsubrl
sti
aaa
mov
push
mov
pop
out
or
repnz
xchg
das
sbb
inc
mov
xor
dec
pop
add
clc
jge
mov
sub
sbb
mov
and
les
sahf
popf
mov
push
das
in
xor
sub
mov
dec
pop
ss
mov
mov
and
push
imul
push
adc
inc
push
fstps
mov
or
lds
adc
int
rorb
lret
add
push
repz
ret
movsl
cmp
fildl
stc
adc
xchg
movsb
movsl
mov
shl
ret
pop
insb
push
dec
add
jl
pop
dec
push
mov
imul
add
mov
jp
pop
and
mov
rcrl
xor
leave
jle
out
cmpsb
sub
ficoms
ja
das
addr16
push
or
enter
or
js
push
int
sti
sub
dec
fnstsw
sub
std
adc
mov
pop
out
divl
movsl
dec
mov
add
pop
jmp
push
mov
sbb
das
imul
mov
das
popf
sub
out
and
das
jns
loopne
pop
push
pop
add
add
stos
inc
mov
xor
pop
jl
xor
xchg
inc
dec
dec
nop
dec
frstor
jmp
inc
xchg
hlt
jmp
sbb
enter
popf
and
dec
sub
lock
ja
jnp
sbb
insb
mov
cltd
dec
mov
jo
add
loopne
fisubrl
fsubrl
lahf
pop
scas
adc
call
andb
jp
lods
push
inc
lods
sbbb
outsl
inc
clc
rcr
data16
mov
daa
cmp
mov
test
xchg
jae
mov
inc
pop
push
pop
cmp
cwtl
pop
push
or
negb
jl
out
dec
mov
cmp
xchg
je
shrl
push
pusha
fst
test
iret
pop
jle
mov
cld
inc
inc
mov
cmp
in
std
pop
push
fs
out
pop
shrb
and
aas
push
mov
lock
in
scas
scas
adc
in
pop
scas
and
jns
add
cs
aas
pop
cmp
cmp
xor
sahf
jo
ss
sub
sahf
sbb
push
aad
popa
mov
pop
xlat
je
jle
cmp
mov
cmpsl
sub
scas
pushf
or
inc
push
imul
inc
movl
jnp
add
ret
pushf
mov
sub
cmp
pop
xchg
sub
xor
mov
in
xorl
mov
mov
adc
mov
cmc
imul
jb
and
mov
mov
loopne
imul
pushl
dec
mov
cmp
xlat
lock
ds
in
into
jns
dec
jecxz
mov
cmp
push
xchg
pusha
cmp
jb
sub
scas
push
out
test
push
aaa
add
out
jmp
sub
out
pop
mov
sbb
push
jne
mov
push
ficoml
lock
dec
and
fcom
mov
pop
in
divb
nop
insl
dec
pop
sbb
add
sub
nop
mov
fucomi
push
idivb
pop
popf
xchg
ljmp
cltd
jae
leavew
jg
dec
rcrb
fwait
call
adc
sub
xchg
pop
pop
mov
mov
sti
pop
or
lea
push
mov
aaa
inc
pop
stos
das
outsl
pop
mov
test
cwtl
and
fistl
pop
xchg
sbbl
sub
fs
imulb
pop
pop
mov
mov
sbb
mov
setbe
cmp
jnp
in
sbb
vcvtpd2dqx
popl
nop
adc
js
setle
mov
inc
icebp
mov
push
sti
sti
lahf
add
jge
inc
scas
popf
mov
aas
pop
loop
jne
loope
test
mov
out
repz
test
mov
pop
jecxz
in
fsubl
pop
mov
or
dec
cwtl
pop
adc
push
push
xchg
shlb
fstl
or
in
rorl
sub
dec
mov
or
pusha
scas
inc
decb
jecxz
cmp
sub
inc
mov
inc
mov
sub
dec
mov
fcmove
and
jnp
cmpsl
sub
mov
mov
iret
cli
insl
pop
pop
lret
push
je
xor
pushf
add
les
jae
repnz
push
jle
in
ds
nop
and
push
mov
jge
and
dec
repnz
scas
pop
ret
add
cmp
sub
jmp
mov
pusha
push
repz
mov
fisttpl
lods
pop
lods
cmp
xor
iret
push
sarb
jmp
push
enter
stos
push
xor
test
out
outsb
lock
cld
push
fwait
call
mov
cmp
outsb
xor
dec
cmp
testb
mov
sbb
xor
or
push
std
iret
dec
enter
inc
push
sub
sbb
gs
test
cmp
add
jo
stos
mov
lahf
inc
adc
mov
cmp
mov
and
dec
and
popf
sti
loopne
out
scas
mov
dec
xchg
xchg
fistps
popa
xchg
cmp
ret
aad
movl
inc
mov
jge
sub
pop
rcll
inc
mov
pop
pop
clc
mov
push
dec
push
js
ret
add
lret
bound
mov
xchg
jno
call
jno
push
scas
mov
mov
sub
add
push
mov
cmp
fstps
dec
add
sub
inc
add
pop
into
xor
push
pop
mov
into
test
test
sub
pop
rcrl
xor
mov
std
scas
jge
mov
movsl
jbe
mov
outsl
mov
imul
rclb
cld
popf
ss
out
pop
mov
dec
in
push
popf
das
fstps
cmp
cmpsb
or
jae
fdivl
rorb
xchg
and
adc
fidivrl
ret
sarl
stos
mov
xchg
fsubrl
inc
xchg
mov
sub
xchg
ljmp
cmpsb
stc
clc
ds
pop
push
sbb
movsl
cmp
inc
mov
cmc
pop
mov
in
aam
sub
int
out
mov
sbb
call
mov
push
scas
push
xor
sub
mov
pop
fsubrp
mov
adc
pop
repnz
mov
movsb
int
stos
xrelease
push
int3
adc
out
out
sar
inc
into
push
xor
jmp
in
push
lock
pop
in
mov
scas
sub
dec
pop
add
out
test
std
or
cmp
daa
inc
scas
adc
pop
mov
lods
jp
loopne
push
out
xor
mov
mov
in
sar
and
mov
xor
add
jns
and
sbb
mov
shrb
mov
push
scas
cwtl
pop
cmovae
ret
cmpsl
push
xor
mov
pop
dec
mov
outsl
or
mov
sahf
or
pushf
push
add
sbb
push
std
sbb
mov
imul
dec
rdtsc
movsb
pop
sbb
xlat
sbb
mov
in
ficoml
inc
call
and
movl
fwait
in
imul
int
aaa
ljmp
mov
push
xor
pusha
lods
pop
dec
lret
fcomi
es
xchg
cmpsl
push
sub
xor
mov
fnstcw
push
add
stos
inc
cli
jecxz
pop
sbb
dec
push
jbe
icebp
push
mov
push
je
sbb
clc
pop
cmp
insl
je
rcrl
cmp
sbb
ficoms
xchg
loopne
movsl
popf
mov
sub
loopne
xor
dec
add
dec
data16
sub
pop
sbb
mov
mov
adc
jb
push
jns
and
adc
cmp
fs
jne
in
shll
push
in
enter
pop
mov
jmp
sub
sbb
cmpsl
leave
flds
adc
sbb
add
adcb
out
cmp
sub
xchg
cmp
popf
xor
or
pop
ja
jnp
cld
sbbl
shlb
adc
or
xchg
xor
sbb
adc
cmp
sub
cmpsb
fldl
cli
lret
pop
mov
sub
pop
inc
pop
and
stos
fstl
cmp
xor
pop
int3
add
fists
outsl
add
imulb
out
mov
sbb
pushl
pop
sahf
cmpsl
test
cld
lea
stos
pop
insb
mov
cwtl
lods
ja
cld
lock
mov
fdivl
dec
jns
jg
inc
movl
sub
push
addr16
rorb
insb
ljmp
aas
fmul
cmpsl
das
or
idivl
shrl
jo
mov
xchg
rol
xor
push
roll
push
outsl
ret
mov
jl
aad
adc
aaa
and
scas
mov
test
adc
and
mov
out
hlt
push
lret
pop
and
aad
xor
inc
mov
orb
add
fwait
xchg
shr
mov
jbe
ja
popf
outsl
ss
dec
or
in
fistpll
dec
sub
xor
cmpsl
or
jb
mov
mov
dec
lods
lret
dec
or
mov
ror
xchg
sbb
ja
dec
mov
es
adc
fisubl
push
cmp
movsl
orb
jb
jo
pop
mov
xor
push
fisttpll
pushf
add
and
mov
aam
dec
cmp
fisubl
inc
iret
xor
mov
repnz
xor
testb
add
cmp
cmp
mov
in
or
xchg
das
call
inc
sub
iret
or
pop
shlb
ljmp
push
jb
mov
int3
mov
jb
bound
jp
cli
mov
fsubrp
lret
andl
fs
test
and
test
jne
xchg
lods
nop
test
jns
test
jo
push
mov
xchg
jl
cld
mov
mov
pop
vpcmov
mov
sub
inc
jmp
push
push
fs
in
mov
adc
push
adc
pop
roll
xor
jge
lock
adc
push
fsin
mov
lcall
xchg
push
pop
adc
cmp
jp
cmp
adc
add
dec
movsb
pop
out
inc
push
fnsave
mov
jno
jns
mov
sub
xchg
fidivs
mulb
scas
xchg
cmpb
xor
mov
shl
imul
and
lods
insl
push
idivl
or
je
outsl
cmpsl
xchg
or
mov
out
cmp
es
xor
repnz
push
aad
das
cmp
jnp
pop
inc
mov
rcl
push
cmp
push
outsl
dec
popf
or
pop
dec
push
mov
enter
mov
in
push
mov
pop
out
push
xchg
xor
fcom
sbb
fisttpll
pop
test
and
fbld
or
stos
adc
lret
movsl
int
cmpsb
push
or
mov
cmc
mov
shr
pop
or
dec
addl
pop
mov
xchg
jge
cmc
push
xor
loope
mov
orl
popf
cmp
xor
and
push
mov
cmp
ds
xchg
stos
cltd
dec
popa
or
add
dec
rcll
sahf
push
jmp
xchg
lock
jno
pop
rorl
das
adc
repz
add
or
into
aaa
neg
pop
faddl
es
sub
sub
fucomip
leave
add
fidivl
imul
sub
sahf
jb
out
jle
outsb
ljmp
inc
sbbb
test
insb
je
cltd
mov
mov
pop
aaa
mov
mov
fcoms
aaa
outsl
jg
add
aaa
cmp
nop
pop
inc
mov
les
mov
cmp
push
inc
out
xchg
sbb
stos
push
movsl
sti
mov
aam
mov
testb
and
pop
jmp
shlb
test
cmc
mov
idivl
fcompl
out
clc
jno
sbb
push
jne
mov
divl
cmpsl
fidivrl
gs
sbbl
stc
mov
in
clc
daa
mov
aam
mov
out
outsb
jl
incl
filds
pusha
nop
pop
xor
bound
or
mov
fisttpll
fcompl
xchg
test
mov
out
cmp
pusha
xchg
adc
arpl
sub
adc
push
das
push
jne
stos
push
sub
les
mov
cwtl
and
popa
push
jge
push
or
lods
jmp
sub
xchg
cltd
cs
sub
sub
addr16
dec
mov
pcmpeqw
cmp
shll
adcb
stos
cli
xchg
inc
int3
jae
or
in
or
lock
xor
pop
loope
sti
sbb
popa
lea
cmc
adc
fisttpl
fcoml
stos
imul
jl
push
lcall
xchg
movsl
mov
sub
fmul
or
and
dec
adc
push
dec
nop
xor
push
jb
mov
stos
mov
mov
and
ljmp
daa
cmp
jle
out
inc
jg
std
or
test
cmpb
cmc
inc
imul
dec
and
ret
pop
fsts
mov
ds
or
or
and
push
fs
xchg
es
sub
stc
pop
and
stc
push
jbe
lds
mov
pop
stc
dec
rcrb
add
mov
gs
fcompl
pop
jp
mov
repz
mov
int3
fabs
jbe
mov
fldenv
cwtl
adc
sahf
add
and
cmpsl
xrelease
sti
ljmp
jbe
push
fsubrl
inc
xchg
pop
int3
mov
das
jae
imul
xor
or
rcl
scas
adc
jge
outsl
adc
shrb
gs
test
and
inc
and
ds
xchg
mov
jno
or
and
scas
lds
pushf
push
adc
arpl
jmp
jae
add
ja
testb
push
sub
cwtl
inc
push
mov
mov
sub
das
mov
cltd
out
insb
ficoms
xor
fisubl
or
sub
cmp
mov
sarb
inc
and
cmpsb
mov
and
outsb
xchg
push
dec
dec
xchg
bswap
sbb
xchg
test
push
inc
lret
into
jmp
jae
dec
inc
les
testl
mov
mov
pop
sbb
sub
es
pop
dec
fsub
stos
ret
mov
adc
xchg
les
mov
outsb
stc
orl
es
push
call
fsts
das
mov
aad
sub
test
lret
js
mov
lret
jl
xor
pop
dec
add
adc
aad
test
packsswb
pop
pop
cmp
ljmp
inc
shr
mov
rcrb
stc
or
cs
pop
jmp
enter
aas
xchg
sub
pop
int3
jne
jb
cmp
cmpsb
jbe
dec
call
outsb
fdivl
call
mov
xchg
lret
mov
pusha
cmp
test
jb
lods
mov
cs
repz
aad
push
push
cmc
xor
subb
mov
mov
jg
xor
cmpsl
pushf
mov
ret
jo
insl
jne
aaa
xchg
xchg
hlt
push
xchg
mov
sarb
clc
mov
shrb
cmp
jecxz
xchg
dec
fsubs
mov
sti
loop
stos
stc
push
mov
fs
or
push
adc
pop
sbb
roll
dec
sub
cld
jge
mov
xchg
arpl
ret
push
cli
push
or
icebp
test
mov
add
mov
push
xor
mov
std
adc
and
xchg
mov
fsubs
into
ret
fldcw
scas
pop
cld
sub
pop
cmp
inc
jecxz
or
ficoms
sub
mov
fsubp
popf
icebp
js
in
jle
dec
aas
dec
push
jbe
xor
ds
scas
enter
ret
loope
loope
adc
mov
pop
ds
inc
mov
jnp
iret
das
lret
lds
int
inc
std
xor
adc
lods
adc
decb
mov
pop
xlat
lret
int3
fmull
lods
mov
add
sarb
rol
into
out
cli
pop
dec
lahf
fnstcw
xor
jle
movsl
movsl
push
and
mov
iret
xchg
mov
adc
popf
mov
cmp
dec
lods
xor
leave
push
bound
add
outsl
xor
pop
dec
fistpll
and
clc
xchg
fbstp
dec
popa
out
xchg
mov
popf
mov
dec
cs
stos
repz
rorl
xchg
imul
mov
mov
mov
cs
mov
adc
leave
mov
es
jl
push
lods
xchg
vcvtsi2ssl
xor
ret
cmc
xchg
cwtl
call
pop
inc
push
xchg
mov
adc
loopne
popa
out
push
fs
mov
mov
fwait
mov
call
inc
sbb
dec
jb
cwtl
into
addl
fsubs
mov
add
or
loop
je
and
inc
mov
adc
lods
xchg
or
leave
dec
in
adc
and
jg
in
aam
pushf
scas
xor
push
jle
mov
scas
xlat
sub
dec
cld
jmp
and
sub
out
stos
push
pop
mov
mov
sbbl
adc
repnz
int
mov
cmp
sub
add
push
iret
mov
or
rcr
sub
mov
cltd
cs
clc
shlb
push
sub
cmp
addr16
sub
jnp
fistpl
push
andl
and
dec
xacquire
and
add
sbb
rcrb
push
or
add
fimuls
sbb
aaa
push
push
pop
push
loop
pop
out
aas
insb
add
mov
xor
and
rcrl
mov
pop
adc
popf
sti
cmp
out
or
mov
pushf
fldcw
inc
push
loop
sub
cmpsb
sahf
add
dec
mov
mov
stos
mov
mov
fstpt
sub
rorl
ljmp
xor
mov
imul
shll
adc
mov
les
shlb
xchg
jns
sahf
push
or
cmc
outsb
mov
fwait
mov
dec
insl
ss
jle
push
add
lret
shlb
jns
fstps
stos
movsb
fsubrs
out
mov
cli
loop
pop
push
ja
mov
push
les
inc
xor
popa
and
sbb
jnp
or
pop
push
aad
leave
pop
nop
les
push
imul
pop
xchg
xor
xor
push
push
pop
enter
inc
pop
add
sahf
lea
mov
pop
pop
ret
ss
lret
cmp
out
das
and
loopne
rcr
movsl
sti
mov
push
mov
jecxz
outsl
sbb
push
in
adc
test
repz
in
push
sub
and
xchg
sub
xchg
out
std
rclb
xor
xor
cmpsb
fldenv
lcall
scas
jnp
cwtl
adc
js
movsl
cmc
pusha
bound
out
dec
push
pop
arpl
jmp
outsl
movsl
mov
stos
mov
mov
out
int
shr
cmp
xor
in
push
fadd
bound
pusha
pop
pushf
andb
push
xchg
pusha
in
cmp
fldenv
int
ret
out
shll
or
out
xor
mov
negb
ja
and
ja
push
pop
iret
pop
test
or
sub
nop
jnp
dec
cld
nop
mov
xchg
mov
loopne
cmp
lahf
jb
cli
jl
xchg
sarb
adc
dec
or
xor
enter
mov
sbb
inc
icebp
mov
fsts
xchg
push
xchg
add
je
lods
rcrl
jae
fistps
ficompl
pop
cli
daa
add
adc
std
and
cmp
test
lahf
dec
or
clc
mov
ss
jp
cmp
mov
sti
jmp
pop
insb
adc
int3
test
cwtl
and
cmp
cmp
mov
push
mulb
xchg
inc
mov
iret
imull
hlt
push
int
roll
lods
jo
dec
loopne
lods
jae
mov
rcll
nop
cli
mov
and
cmp
bound
xchg
push
pop
rol
jg
jl
adc
imul
mov
sub
xor
pop
and
mov
xor
int3
shrl
xchg
fdivs
daa
cli
and
lods
out
test
dec
in
dec
insl
dec
jl
addl
test
pop
data16
adc
call
out
lcall
dec
test
mov
xor
xor
pop
dec
xchg
lods
jl
add
ror
push
bound
mov
icebp
sub
js
pop
sti
jge
out
pop
loope
loopne
adc
push
cld
jno
shll
jbe
xchg
xor
mov
fbstp
cwtl
jle
enter
fsts
loop
popa
mov
in
jmpw
dec
dec
mov
gs
adcb
push
xchg
fistpll
push
stos
das
out
fucom
push
pop
std
ss
mov
jmp
movsl
sub
pop
mov
and
cmp
imul
xor
xchg
push
pop
and
mov
shrb
popa
fwait
jg
jg
lret
jnp
scas
inc
lds
mov
mov
lret
push
movsb
cld
insb
fiadds
call
adc
jb
mov
xor
sub
fistl
cld
andl
fcos
repnz
cmp
jnp
lock
cmpsl
cmp
dec
push
movsl
clc
bound
std
stos
addr16
loopne
popa
cmp
cld
in
jbe
icebp
jl
cmpsl
ret
xchg
mov
test
icebp
ret
mov
add
pushf
inc
pop
mov
ficoml
div
cmp
out
adc
and
or
test
pop
popa
daa
jecxz
rol
fildll
jp
cltd
mov
add
or
adc
scas
pop
fisttps
arpl
jo
aam
xor
sti
out
push
clc
and
xor
and
xor
div
out
nop
data16
xchg
jo
mov
pop
gs
fisubrs
daa
rorb
clc
mov
adc
mov
aad
push
movsl
shl
aas
xchg
cs
sbb
mov
pushf
adc
sub
or
inc
cmp
and
clc
mov
ficoml
lock
mov
adc
in
pop
aad
dec
push
mov
cmp
push
shll
inc
mov
pop
ss
movsl
inc
nop
in
xor
roll
inc
sub
bts
adc
dec
mov
outsl
mov
ss
jo
push
mov
push
xchg
jns
push
xchg
hlt
or
sti
xchg
mov
adc
out
lock
xchg
sti
enter
cmp
push
add
mov
push
dec
popa
je
out
pop
push
mov
xchg
jne
push
popa
push
xor
cmpsb
std
xchg
in
and
mov
cmp
rcll
outsl
pop
nop
adc
das
pop
stos
sub
mov
cmp
jle
cli
jns
idiv
sub
test
xchg
adc
shl
inc
sti
jmp
mov
push
mov
jns
in
pop
push
pop
mov
or
popa
sbbl
sti
call
mov
pop
addl
mov
inc
mov
rcrb
sahf
lahf
and
push
lock
pop
test
sbb
mov
cld
push
cmp
es
dec
jns
out
xor
das
push
out
lcall
jge
sbb
call
jb
dec
mov
xlat
mov
into
ficoml
filds
popa
dec
dec
push
je
sti
inc
or
hlt
ds
xchg
popf
sub
push
dec
xor
outsl
mov
sub
andl
call
sub
xlat
ljmp
gs
jl
dec
dec
pusha
rclb
hlt
mov
fsts
sbb
pop
mov
mov
rclb
mov
cwtl
ss
loop
push
add
adc
ljmp
jmp
aam
pop
mov
loop
sbb
out
es
jb
mov
push
push
jmp
dec
shll
out
xchg
mov
pop
fs
add
insb
fs
in
add
add
adc
in
or
xor
push
movsl
mov
push
loopne
stos
add
insl
push
ret
mov
mov
lcall
roll
pop
fstps
add
cmp
jmp
xchg
int3
int3
push
mov
mov
fcmovu
mov
pushf
pop
jle
lods
inc
xlat
jo
mov
and
sub
shll
jle
mov
cmp
pop
sbb
mov
mov
clc
lock
mov
les
loopne
imul
ret
imul
pop
add
rorb
inc
mov
shl
mov
das
out
aas
in
repnz
push
sahf
xor
sub
sub
jmp
sbb
jp
call
adc
mov
jnp
shlb
subb
cltd
int3
lahf
mov
and
xlat
int3
fstl
aad
pop
sub
bound
adc
xor
or
dec
pop
pop
cmp
adc
jno
std
cmp
aas
out
sub
inc
push
call
repz
mov
negb
pmaxsw
dec
fsub
jle
cmp
sub
insl
ds
push
call
sbb
mov
inc
fdivrs
fistps
incl
push
jg
add
out
jbe
int3
mov
push
or
sahf
inc
aad
test
push
mov
or
jge
in
std
jb
dec
push
or
cmpsl
test
roll
or
push
rorl
mov
loopne
aas
lock
fistps
sub
lods
and
xchg
pop
mov
cli
xlat
push
mov
add
repnz
dec
or
imul
in
add
stc
bound
mov
cmpsb
gs
xor
popa
add
mov
jne
pop
mov
sbb
lds
jns
sar
fcomp
repnz
or
cmp
pop
test
fldenv
clc
mov
cmp
jo
fistl
popa
jae,pt
out
out
jmp
ljmp
jle
xlat
stos
xor
leave
cmp
jne
mov
sub
test
popf
and
sub
cmp
mov
cmp
pop
pop
push
js
xor
leave
fistl
jae
sahf
bound
lahf
fmul
rorb
movsb
ficoml
enter
int3
push
out
jp
outsl
mov
xor
lea
xchg
inc
test
mov
cld
mov
out
adc
xchg
mov
out
daa
fs
push
lcall
push
nop
cmp
fidivrs
mov
jp
lods
icebp
pop
dec
rorb
xor
mov
adc
mov
jecxz
inc
sbb
data16
cmpsb
int
in
es
pop
ret
out
mov
int3
pop
sub
push
hlt
lcall
std
popf
into
loop
rclb
test
std
mov
mov
and
jle
fwait
mov
mov
fistpll
jle
pop
sbb
filds
mov
hlt
addl
sbb
pop
repz
mov
mov
add
movsb
lcall
inc
mov
sub
int3
sbb
fsubrl
enter
fimuls
xor
mov
aas
xchg
ljmp
xchg
call
adc
or
jb
mov
enter
add
fdivrs
popa
mov
pop
lds
jb
mov
sbb
add
cmpsb
inc
mull
pop
test
cli
loop
sub
or
frstor
lods
push
jge
or
ja
out
pop
mov
out
pop
or
add
iret
mov
imul
xchg
pop
movsb
movsl
ret
scas
dec
ljmp
imul
xchg
aad
xchg
sbb
mov
faddl
dec
push
cmp
out
or
out
mov
out
cmc
pop
je
jo
outsl
sub
movsl
jbe
scas
mov
aas
and
in
ret
sbb
lock
cmp
loope
ret
cmp
loopne
or
mov
or
repnz
aaa
fisubrl
aas
jecxz
fs
daa
pop
cmp
mov
pop
push
jae
pop
test
and
adc
mov
shlb
xor
imul
cmp
aam
and
xor
dec
push
pop
in
cmc
std
popf
push
push
add
dec
sahf
mov
mov
ficompl
rsm
das
addr16
mov
jo
jb
push
mov
xlat
and
push
add
sub
jl
sub
dec
xor
dec
xor
call
aam
or
inc
inc
mov
addl
pop
or
jae
add
repz
imul
aam
pop
out
push
rcll
mov
in
in
pop
xor
arpl
outsl
adc
out
idivl
fmul
imull
iret
out
inc
cltd
pop
xchg
push
and
xor
sbbl
xor
lods
mov
nop
jb
sbb
pop
mov
shlb
pop
test
mov
xchg
xor
fmull
imul
aad
sar
jmp
popf
or
dec
shr
mov
cmp
push
adc
adcb
pop
les
xchg
sbb
js
sbb
dec
out
xlat
data16
popl
or
adc
and
sahf
mov
adcb
shrb
sbb
insb
rcr
mov
mov
insl
pop
sarl
xchg
sub
pop
mov
pusha
add
pop
rcr
mov
sub
hlt
rcrb
sbb
mov
or
or
pop
push
test
test
gs
push
jle
fwait
or
pop
fnsave
jnp
push
fisttps
mov
daa
insl
push
sub
lahf
mov
fwait
pop
cmpsl
fdivrl
push
mov
out
xchg
xor
movsl
leave
push
cld
push
repz
hlt
imul
push
js
iret
popl
shl
orl
and
dec
movl
inc
repz
pop
shrl
add
xchg
adc
mov
jp
data16
xlat
pop
out
push
pop
mov
test
cmp
call
movsl
sbb
das
jle
add
mov
xchg
rolb
sub
adc
pop
imul
lahf
rcrl
push
inc
aaa
mov
cltd
inc
xchg
mov
push
push
xchg
cwtl
sbb
push
fsubrl
jge
xchg
sahf
xor
aaa
jb
in
fcompl
iret
jo
mov
xchg
pop
in
ficompl
pop
loopne
in
repnz
dec
jle,pt
mov
fsub
divl
orl
or
push
push
in
insb
data16
fwait
mov
mov
cwtl
xor
arpl
lods
sbb
push
sbb
cmp
mov
cmp
std
lock
mov
sub
cmp
lds
push
inc
mov
mov
xor
cmc
scas
jb
daa
scas
mov
sub
in
iret
push
cmpsl
enter
jge
mov
sub
inc
xor
xor
mov
imul
push
aas
div
sbb
pop
mov
mov
jle
dec
lcall
push
sub
xchg
push
jno
shrl
push
push
jle
shlb
out
shlb
sbb
mov
or
sub
and
adc
and
inc
es
sarl
inc
std
jae
cmp
mov
mov
mov
jae
xor
push
hlt
inc
loope
in
sub
outsl
mov
xor
in
scas
scas
mov
sbbl
in
push
mov
lret
inc
cmp
ljmp
pop
ret
out
sbbb
fs
push
neg
dec
bound
cmp
lods
add
jns
arpl
inc
pop
pop
loope
aam
xchg
mov
mov
inc
xlat
pop
insb
xchg
mov
cmp
popf
insb
rol
mov
push
mov
cmp
test
int3
popa
inc
jmp
add
mov
out
push
mov
lahf
adcl
fnsave
rcll
ljmp
insb
test
push
mov
es
dec
rcrb
shll
pop
or
pop
xbegin
and
xchg
or
inc
daa
push
pop
arpl
notb
out
or
add
adc
dec
mov
in
cwtl
das
lret
cmp
and
stos
dec
jo
movsb
int
pop
adcb
mov
mov
mov
push
inc
xor
pop
loopne
pop
mov
jo
movsl
and
mov
loop
adc
push
ja
pop
xchg
lahf
sub
push
sub
sbb
ret
ja
cld
rorb
sub
pop
fcompl
or
mov
push
popa
cmp
pop
sub
dec
cli
push
jg
and
push
dec
fdivrs
mov
jl
jbe
sarb
mov
aam
adc
push
jo
sub
pop
push
mov
ds
mov
push
jp
dec
imul
mov
shll
pop
pop
xor
mov
xchg
add
pop
cwtl
arpl
jle
dec
xchg
out
out
or
fwait
mov
and
ds
push
lods
fsub
cld
jnp
in
and
stos
hlt
mul
xor
xor
lock
pop
fsubl
data16
mov
shr
icebp
xchg
jg
setae
push
addr16
arpl
mov
xor
repz
idivb
bound
dec
add
arpl
inc
jno
clc
and
push
xor
xchg
and
jmp
add
pop
mov
jbe
shl
xchg
mov
push
inc
jo
jb
mov
stc
arpl
pop
fstps
pushf
sub
mov
mov
iret
jno
loop
sti
clc
cmp
es
enter
andl
jne
cmp
stc
test
fbstp
pop
adc
in
scas
lret
sbb
cli
out
aam
sbbl
jle
mov
fstpt
fistpll
iret
scas
mov
test
push
aam
xor
repz
bswap
loopne
and
rcr
pop
int3
cmpsb
cmp
mov
mov
shlb
push
aaa
pop
scas
flds
adc
bound
rcrb
mov
test
sbb
icebp
loope
mov
mov
fdivrl
jecxz
insb
jo
jo
jge
fistpll
adc
stc
push
and
cmp
jle
shr
loop
ljmp
mov
pop
cmp
loopne
jmp
inc
rol
xor
dec
xchg
mov
bswap
mov
and
lock
sar
or
add
fidivrs
imul
in
pushf
mov
xchg
sub
jno
aam
jns
loope
sub
cmpsb
idiv
sti
lret
pop
pushf
or
stc
push
pop
add
mov
add
pop
jp
jmp
dec
inc
imul
fcmovbe
popa
loope
aad
sub
mov
clc
jge
inc
or
mov
cmp
push
push
cmpsb
int
outsb
andl
sbb
popa
pop
and
scas
or
push
jb
add
add
lods
repz
inc
int3
scas
xorl
xchg
lods
in
cmp
cs
push
ret
ret
lret
push
rorb
mov
into
stos
cmc
sub
fs
inc
movsl
or
out
fcmovu
lcall
dec
stc
dec
jb
add
cli
jnp
mov
sub
mov
cwtl
gs
loop
icebp
jmp
nop
or
aam
jo
in
add
mov
dec
push
jg
shll
shlb
jmp
lods
xlat
mov
or
mov
cltd
pop
push
nop
dec
stos
pop
mov
stc
js
shll
movsl
sbb
xchg
sbb
jnp
cmp
mov
adc
cmpsl
sti
sbb
fdivrs
data16
mov
xchg
or
imul
orl
dec
movsb
pop
sti
dec
adc
in
loop
int3
dec
movsl
jle
cwtl
sub
xchg
sbb
mov
or
sbb
ja
fsubs
shlb
push
push
loope
inc
add
mov
orb
mov
pop
mov
mov
icebp
mov
adc
and
push
mov
imul
xchg
leave
divb
sub
or
push
jl
xchg
jge
pop
push
call
loop
sbb
add
imul
setnp
push
out
fmull
mov
sub
and
and
lea
or
mov
sub
pop
je
xor
mov
dec
stos
xchg
pop
or
int3
hlt
leave
jae
xorl
ds
inc
cmp
push
je
imul
clc
mov
movsl
das
adc
jmp
mov
insl
push
sbb
lock
or
popa
jno
leave
adc
sub
xchg
popf
add
xlat
out
sbb
push
mov
insb
cmp
iret
jecxz
add
jecxz
or
cld
or
test
adcl
push
cmpsb
inc
les
mov
imul
sahf
rcrb
lahf
daa
pop
push
cs
test
jge
jnp
pushf
faddp
inc
ja
pop
dec
add
cmpsl
push
and
loop
jb
cmpb
mov
cmp
jbe
dec
in
cli
sub
mov
aad
loopne
xchg
adc
sahf
cli
insb
dec
xchg
jb
shll
cmp
test
cmc
push
mov
or
mov
gs
cmp
out
ljmp
mov
push
xor
mov
jnp
ja
dec
or
lods
sub
nop
stos
mov
cli
dec
stos
sbb
mov
cmp
cmp
repnz
bound
cmp
pop
repz
cmp
fiaddl
push
mov
movb
mov
int
fbstp
in
jne
rcrl
mov
mov
leave
aam
ja
pop
mov
mov
loope
push
mov
rcl
sbb
jle
decl
push
das
or
icebp
jno
mov
pop
data16
pop
cli
xlat
sub
or
add
mov
shrb
test
mov
iret
jl
sbb
out
push
add
pop
xchg
ja
push
std
call
daa
insb
rorb
jno
stos
out
push
insl
test
pop
mov
mov
jae
mov
xor
xor
cmp
mov
push
ja
xchg
mov
lcall
xchg
xchg
push
push
sub
adcb
scas
dec
dec
cmp
inc
int3
push
loop
icebp
pop
mov
aam
insb
push
jecxz
sub
push
in
lcall
outsl
mov
sbb
xor
retw
sti
push
test
rcll
cli
imul
movsb
out
push
test
das
dec
and
cmp
inc
cwtl
mov
sbb
test
dec
int3
dec
push
pop
xor
mov
adc
adc
xchg
jmp
scas
mov
mov
rorb
lock
jecxz
sbb
push
cmp
ja
cmc
fwait
in
mov
les
aad
push
xor
mov
lret
stos
stc
inc
in
mov
sub
negb
jnp
xor
mov
aaa
call
and
push
out
fs
or
cld
int3
stos
push
orl
cmp
and
rol
add
fisttpll
mov
mov
and
rorb
test
fidivrs
stos
mov
sub
mov
rol
mov
add
int
test
cmpsb
mov
jo
and
call
leave
cli
or
and
dec
pop
aas
add
lock
jp
sub
and
addr16
cmp
cmpsb
lods
rol
or
movsl
sub
jmp
mov
sub
xchg
popa
pop
inc
pop
dec
les
dec
pop
adc
cmp
idivl
aad
shrl
stc
stos
push
incb
mov
sub
mov
xchg
jp
mov
jbe
jae
push
xchg
sbbl
jle
loop
repnz
gs
push
aas
ret
push
arpl
or
mov
popf
xor
mov
cmp
sti
daa
inc
out
inc
push
dec
mov
mov
pop
lock
mov
jge
pusha
cld
sbb
repnz
cmpsl
sti
insl
iret
test
mov
sub
notb
pop
xlat
sub
test
test
pusha
cmp
and
push
loopne
sub
xorl
inc
aad
inc
mov
test
mov
sub
pop
imul
sbb
loop
cmpsb
pop
xor
inc
xor
jle
inc
push
cmp
push
mov
mov
dec
aam
cmp
les
mov
pop
jb
xchg
mov
pop
xor
gs
jmp
fs
aas
out
xor
icebp
push
xchg
pushf
dec
jns
int3
out
lahf
aaa
xorl
lret
fdiv
loop
das
fiaddl
aad
jo
mov
imul
lahf
arpl
fldt
jns
pop
dec
imul
std
fsubr
xchg
inc
inc
lods
repnz
add
movlps
repz
mov
in
std
ds
jnp
pusha
std
cld
dec
lds
mov
or
xor
xor
push
xor
xchg
fmull
mov
mov
stos
addr16
fisttpl
lods
nop
jp
dec
push
fadds
jo
sub
xor
jbe
jae
in
es
pop
imul
push
pop
loop
stos
push
daa
nopl
push
push
idivl
push
sbb
mov
test
dec
inc
push
outsl
lret
inc
testb
mov
icebp
loopne
daa
push
xor
mov
pop
imul
mov
stos
push
or
arpl
mov
movsb
jle
add
pop
cmp
mov
dec
and
faddl
mov
fists
sub
sbb
cmp
lcall
mov
mov
sbb
adc
das
add
ja
push
jg
lcall
ret
aad
test
leave
push
cmp
shrb
popa
mov
scas
cmp
and
push
pop
jl
pop
rcll
dec
mov
dec
aas
shll
jmp
das
fcompl
pop
addr16
inc
lret
push
jp
test
fsubrl
arpl
movsb
sub
or
add
mov
or
and
std
flds
ss
sbb
lahf
mov
dec
repz
push
shlb
nop
movsb
test
pop
std
cltd
sbb
leave
inc
cmpsl
ljmp
push
outsl
cwtl
pop
add
in
mov
sub
cmc
fwait
mov
mov
push
std
mov
or
fs
into
mov
shll
sub
shlb
aad
bound
aam
lock
or
out
test
add
adc
fldl
clc
mov
mov
fildll
pop
daa
add
mov
jno
nop
clc
mov
ret
lds
fcomps
call
mov
insl
bound
mov
repnz
in
cmpsb
lds
loopne
inc
pop
inc
enter
fisubrs
and
mov
pop
outsl
cmp
jp
adcl
loopne
or
jle
sbb
lret
fsubrp
jl
icebp
sahf
repnz
repnz
out
arpl
and
das
out
mov
add
pusha
push
mov
fwait
mov
sahf
test
mov
sub
in
sbb
and
subl
push
cmpsl
xor
adc
sub
dec
xchg
cld
adc
push
ja
int
push
lods
add
andl
shll
inc
xchg
fincstp
stos
shrb
decb
rcl
int
dec
lcall
xchg
push
xchg
sub
pop
jbe
inc
in
cmp
add
push
pop
cwtl
les
jmp
add
fisubrs
loop
divl
and
jbe
das
xchg
push
jg
mov
push
mov
dec
xor
lds
lret
mov
popa
pusha
jp
mov
mov
fsubrl
rclb
push
xchg
lea
dec
mov
jb
xchg
repz
push
in
push
sub
push
mov
ljmp
ja
cmp
pusha
add
push
sbb
mov
loopne
dec
xchg
es
int
dec
xchg
inc
stos
lods
aaa
inc
dec
sub
cwtl
popf
adc
mov
rorb
pop
fnstenv
jmp
jg
int
sbb
jl
call
adc
daa
jge
test
lret
and
cmp
movsl
data16
pop
dec
xor
pop
xchg
and
mov
movsl
ret
pop
lods
mov
lcall
xor
cmp
cmp
arpl
jecxz,pn
xor
dec
push
mov
test
test
ret
xchg
sub
xchg
imulb
or
cli
call
daa
test
sub
cltd
and
jge
lods
push
mov
aad
jle
inc
ret
in
stos
lock
mov
test
lret
mov
cltd
add
xlat
dec
dec
scas
daa
addr16
fdivrs
cmp
lods
pushw
outsb
sbb
sbb
pop
es
jne
mov
fldcw
clc
add
scas
inc
fwait
jmp
lcall
push
out
dec
ja
addb
push
in
jb
push
cld
push
iret
popf
jl
int
std
cmp
ja
and
adc
inc
jp
adc
das
shl
idivl
xor
adc
mov
sub
shrl
scas
dec
or
out
test
clc
stc
and
test
or
les
inc
sub
cmp
dec
scas
mov
sub
stc
out
sub
movsb
sub
mov
inc
xchg
mov
lods
or
je,pt
imul
pop
mov
add
sub
outsl
cmp
call
xchg
xor
add
mov
pop
lahf
or
es
sub
notl
gs
push
fucom
jno
mov
leave
inc
pop
xor
imul
xchg
movnti
jno
push
inc
lods
mov
test
shr
cwtl
icebp
inc
lret
shll
stos
scas
lret
jb
adc
pop
jbe
loopne
pop
adc
icebp
push
out
push
lahf
cltd
xchg
cmp
and
dec
pop
je
inc
add
push
in
shrb
sub
cmc
jge
inc
or
adc
mov
sub
stos
aam
ds
cmp
pop
cmp
cmc
rcr
jge
pop
es
not
inc
lcall
lret
mov
test
es
movb
leave
mov
rcrl
scas
lahf
xchg
rcrl
shl
xchg
adc
js
clc
lahf
in
or
and
inc
mov
fwait
cmp
xor
sbb
jg
out
mov
and
test
cmpsl
fldl
inc
mov
jecxz
or
xlat
ret
aad
sbb
and
pop
pop
aad
xchg
cmp
xlat
jecxz
or
push
inc
mov
or
mov
lret
mov
sbbb
popa
call
mov
fldt
repnz
out
std
cld
xor
mov
xchg
mov
xor
loopne
jns
dec
pusha
test
aam
jge
and
jno
lods
sti
adc
mov
jecxz
test
fdivrs
dec
aas
xor
xor
loopne
sub
mov
mov
or
add
lret
fcoms
ror
push
popf
daa
inc
movsl
jg
mov
mov
and
stos
filds
fldt
std
or
add
or
fcmove
neg
add
adc
icebp
push
fcmovnb
sbb
jg
mov
inc
testb
subb
stos
cmp
das
insl
and
daa
push
idivb
jb
xchg
rclb
sub
push
dec
pop
movsl
mov
mov
inc
mov
jle
scas
in
subb
xlat
hlt
jno,pt
dec
mov
push
mov
inc
enter
sub
test
jl
sbb
ds
mov
mov
cwtl
cmp
int
inc
push
mov
xor
mov
aam
sbb
in
mov
lahf
rcrb
fimull
add
sub
es
fistpl
mov
pop
xor
inc
cmpsb
cmp
push
inc
outsb
cld
sub
fsts
sarb
and
stos
arpl
mov
jbe
out
loopne
pop
test
sub
gs
inc
mov
jb
pop
out
pop
jae
je
dec
or
pop
push
pushf
sub
roll
shlb
sbbb
cmc
bound
and
cmp
aad
enter
pop
ret
stc
xchg
lods
add
xor
or
movsb
xor
lea
cmpsl
xor
sub
and
mov
idivl
mov
jne
arpl
int3
xchg
mov
inc
xchg
xchg
xlat
adc
sub
cmp
test
test
out
cltd
xlat
jno
stos
out
mov
das
ret
pop
js
js
mov
mov
dec
xchg
pop
cmp
mov
arpl
and
sub
hlt
sti
push
sbb
lret
loope
push
sbb
push
es
in
aas
cld
xor
cli
push
cmp
in
xchg
dec
add
mov
fdiv
popa
cld
inc
test
in
hlt
xchg
adc
dec
int3
and
je
rorl
and
lods
hlt
aad
nop
mov
sub
dec
adc
sbb
ret
movsl
pop
inc
hlt
test
imul
mov
fldt
test
adc
jmp
jmp
mov
bound
jb
and
jp
jecxz
push
push
rcrl
vmovapd
lret
ret
jecxz
sub
icebp
in
sbb
in
lcall
or
orl
jbe
lock
imull
les
fildll
ror
push
push
mov
leave
xlat
out
orb
cmp
testl
loope
and
jl
lsl
xchg
iret
adc
xor
sub
loopne
jbe
mov
sbb
repz
xchg
push
adc
stos
js
inc
inc
ret
push
jns
je
cmova
mov
int
push
mov
in
sbb
jg
sbb
mov
xor
ja
ret
scas
aam
jo
std
fildll
rorb
cmp
out
xchg
insl
mov
mov
push
jae
daa
push
sub
ja
push
movsb
sar
bound
mov
ret
mov
mov
repz
dec
pop
push
ljmp
sahf
aas
jo
mov
ss
shrl
cmp
mov
mov
adc
fldt
pop
imul
shrb
xchg
movsl
lds
xor
jmp
shrb
mov
out
mov
push
pop
out
adc
dec
cmp
icebp
loopne
imul
mov
xchg
add
jecxz
pop
jb
outsl
orl
mov
pop
adc
pop
and
push
jle
in
add
aad
fwait
and
cltd
in
and
insl
dec
mov
push
loop
hlt
mov
cmpsb
fwait
test
xorb
mov
mov
sahf
adc
mov
or
and
mov
add
jnp
cmp
cmc
sub
arpl
mov
or
sbb
ds
cwtl
add
dec
popf
pop
stos
dec
sub
cmp
mov
and
xor
in
out
adc
sbb
rcl
aaa
das
inc
sbb
inc
les
push
out
ljmp
outsb
aam
push
jge
loop
and
add
ja
scas
faddl
cmpsb
hlt
aaa
inc
les
mov
mov
xor
pop
jp
xor
mov
subb
mov
pop
fwait
cmp
add
mov
inc
iret
lds
test
cli
lods
push
dec
cmp
les
mov
and
movl
sbb
lds
sub
cmp
fidivl
ret
fdivrl
lods
or
scas
sahf
xchg
inc
loopne
pop
and
sub
mov
inc
in
push
ss
mov
and
leave
mov
insl
fstpl
stc
std
mov
mov
dec
outsb
ja
insl
push
inc
scas
imul
movsb
cld
xchg
jge
mov
inc
mov
or
cmpsb
lock
xlat
fnstenv
cld
sbb
push
je
pop
loopne
sahf
sbb
fwait
mov
ss
mov
mov
jg
lods
push
pop
aam
lods
inc
fidivl
add
sbb
dec
inc
mov
xchg
push
call
sbb
xor
inc
inc
mov
sbb
lods
cmp
xchg
cld
cmp
xor
and
mov
ljmp
jge
adc
loope
aad
dec
lret
orb
fmulp
lret
rcrl
xchg
insl
stos
jnp
sbb
out
movl
jge
adc
and
cmp
test
jg
lds
adc
mov
jb
gs
imul
mov
addr16
lds
xor
add
dec
enter
pop
filds
jbe
movsl
ret
adc
outsb
mov
xor
stc
fcmovb
xor
or
dec
dec
or
mov
fistpl
mov
ljmp
cltd
or
xor
jmp
sar
mov
in
icebp
mov
sbb
xchg
shld
cmp
cmpsb
scas
mov
in
repnz
mov
aaa
push
jmp
xor
les
sahf
xor
addl
test
inc
sbb
mov
lret
imul
movsb
push
notl
insb
rorl
pushf
xlat
push
in
ret
cltd
jg
cld
pop
lods
fbld
sub
adc
fst
dec
jno
pop
inc
test
stos
scas
test
cmp
mov
imull
hlt
jb
jne
orb
sub
imulb
int3
sbb
pop
mov
sbb
jne
sub
push
js
outsl
in
enter
lret
mov
inc
jmp
mov
lods
lcall
sbb
mov
mov
or
ja
clc
add
movsb
sbb
bound
test
sub
scas
dec
push
push
mov
pop
sub
ror
into
insb
enter
pop
fcmovne
fstpt
xorl
loop
adc
xor
stc
and
xlat
es
stos
mov
dec
shl
fimull
int3
mov
paddd
stc
jnp
lock
mov
jecxz
fsubrs
lcall
fs
pop
lea
jmp
fdivs
pop
mov
das
cltd
sarb
test
in
test
out
aam
adc
mov
push
inc
cmp
ja
outsl
dec
ret
push
xchg
fstpt
in
or
mov
scas
lods
add
push
mov
xchg
lds
cld
jne
add
stos
or
push
dec
fbld
jo
notl
inc
pop
sub
sahf
add
sub
jl
hlt
jns
incl
in
sbb
stc
mov
add
pop
leave
xchg
xchg
pop
sti
xor
int3
mov
mov
out
xchg
jl
hlt
adc
cmpl
aaa
sahf
leave
push
sub
cmp
cltd
mov
jmp
movsl
push
scas
cmpsl
fimull
mov
movsb
or
rcr
jnp
ja
out
pop
js
cmpsl
subl
cmp
repnz
sbb
inc
lahf
out
jae
rep
ret
fistpll
aaa
xor
inc
out
pop
nop
movsl
notb
nop
rorb
jbe
mov
mov
pop
inc
jle
std
sub
das
fiadds
cli
in
xchg
loopne
fbstp
mov
insb
pushf
add
pop
push
sub
or
ret
inc
xor
xchg
test
mov
sbb
negl
aas
sub
dec
cmp
int
push
js
pop
mov
lods
test
mov
mov
inc
cmpsl
jno
sub
mov
or
lret
jnp
js
fcoms
mov
push
loop
scas
cld
sbb
mov
pop
test
lahf
jne
xor
adc
pop
outsl
sbb
dec
arpl
sbb
loope
test
sbb
arpl
icebp
loop
clc
pusha
or
push
daa
push
jbe
cmp
out
bsr
out
mov
or
xchg
insb
lret
inc
push
repnz
vpcmpeqb
mov
jae
call
int
repnz
pop
xchg
add
jo
sbb
daa
adc
not
mov
xchg
rcrb
faddl
enter
cmc
adc
xchg
pop
ja
mov
xchg
std
push
xchg
pusha
rcrb
mov
cmp
retw
fidivl
pop
sbb
sub
adc
pop
mov
cmp
in
lret
cld
sub
cmp
add
int
and
or
hlt
cmp
pop
popa
out
movsl
popa
pop
dec
cli
fisttpll
cmpsb
dec
ret
mov
jbe
outsb
into
repz
inc
jnp
or
jmp
in
push
pop
sub
jno
inc
xchg
stos
fnstenv
mov
mov
in
pop
lahf
pop
imul
mov
mov
sbb
mov
out
xor
outsb
int
mov
and
dec
xor
out
sub
pop
jo
or
lods
add
out
push
fcoml
lea
cmp
outsl
pop
filds
jle
sbb
fistl
call
xor
pushf
lea
sbb
xchg
ds
rol
mov
ficompl
adc
cmp
dec
popf
fbld
in
sub
jne
push
ljmp
cmpsl
fldl
adcl
dec
test
int
lods
jo
out
lcall
movsb
or
test
pop
push
fwait
jl
push
divl
mov
rcrl
mov
test
jns
push
push
push
addr16
hlt
out
std
sbb
or
stos
fwait
cwtl
test
int
cld
fisttpl
imul
subb
mov
add
adc
jle
xor
and
xor
mov
in
sub
movsb
dec
rol
or
xlat
push
sar
mov
add
daa
inc
xchg
adc
int
jge
push
mov
lret
stos
or
aaa
stos
sar
inc
pop
js
jge
inc
fwait
pop
and
mov
push
aaa
xchg
js
dec
in
sub
shll
sbb
jmp
sti
push
scas
dec
clc
ss
mov
stos
jne
leave
add
push
cmc
loope
in
pushf
aas
out
push
arpl
sub
fiadds
lods
adc
sub
mov
push
xchg
hlt
aam
mov
stos
inc
add
lret
stos
lock
std
pop
lcall
xlat
shll
add
jo
inc
mov
push
insl
mov
lock
push
aaa
cs
xchg
ss
sahf
xorb
mov
loopne
jg
decl
jb
mov
pop
cmp
dec
in
push
mov
push
cld
ffreep
addl
shl
sbb
in
or
inc
out
ja
imul
cmp
cmp
into
shll
les
xorb
xor
ljmp
shll
dec
loopne
int
rolb
bound
addr16
or
cmp
sti
cmp
add
mov
jne
sub
in
adc
mov
and
pop
loope
es
mov
js
fists
jno
inc
add
insl
sub
cmp
ljmp
arpl
mov
mov
mov
add
add
mov
mov
cmpsl
fsubrl
mov
jae
jnp
sbb
jbe
push
adc
stos
jbe
lods
into
stos
pushf
daa
pop
push
lods
pop
add
sub
clc
mov
fdivrs
xchg
jmp
sub
ret
jmp
jb
add
repz
pop
stos
testl
or
xor
das
icebp
pop
push
ret
fisubs
jae
pop
xchg
dec
dec
fidivrl
mov
pop
cli
sub
dec
mov
adc
stc
cli
dec
cmp
or
jg
jecxz
inc
dec
aas
mov
ret
mov
xorl
adc
cmp
push
inc
pop
mov
test
inc
lods
pop
popl
fnstsw
leave
inc
mov
orl
pop
enter
int3
es
rcrl
insl
out
jmp
push
ljmp
gs
icebp
jge
cmp
sub
mov
push
aad
mov
aam
jb
scas
imul
jne
sti
mov
in
dec
jo
pop
rcr
mov
int
fs
push
stc
pop
test
mov
mov
pushf
fs
jno
pop
aas
lret
mov
insl
mov
jmp
insl
push
cli
shlb
mov
pop
mov
mov
mov
sub
jmp
lock
sbb
mov
decb
gs
cmp
in
dec
les
inc
or
and
lret
cmp
mov
pop
sub
movsl
fwait
sub
stos
inc
popa
mov
inc
inc
loop
mov
imul
out
jl
pop
sbb
sbb
jecxz
mov
mov
xchg
sar
nop
rclb
aas
xor
mov
or
in
jnp
ret
gs
cmc
cmp
data16
maxps
ds
sbb
xor
neg
mov
or
sub
daa
call
fst
mov
mov
cmp
adc
add
pop
add
push
and
leave
push
xchg
movswl
fldl
movl
push
ret
jb
out
push
imul
jl,pt
aas
scas
imul
test
add
fists
outsb
shl
mov
aad
jne
or
psllq
pusha
mov
aas
je
push
pop
popa
mov
out
sbb
lds
pop
fcoms
push
call
push
aas
cli
jae
idiv
stos
dec
push
sub
pop
mov
scas
pop
rorb
sub
mov
and
sub
adcb
sbb
enter
ret
outsl
fcomi
push
iret
cld
adc
xchg
and
fs
out
jge
mov
inc
clc
and
es
dec
jge
lcall
mov
xchg
pop
mov
push
mov
aad
pop
lret
cmp
aas
mov
out
sub
push
outsb
shll
or
sbb
or
gs
jbe
pop
je
lock
xor
sbb
les
mov
cmp
js
adc
jmp
push
cmp
ja
push
movl
dec
jmp
das
aas
rclb
pusha
adc
in
loope
pushl
test
jo
gs
ljmp
jo
fsubs
dec
aad
sbb
push
xchg
into
callw
notb
dec
push
xchg
out
repnz
cmp
repnz
mov
mov
stos
lahf
fbld
inc
aaa
sub
pop
add
aad
test
jnp
scas
jmp
jno
cld
gs
lock
jo
roll
popa
pop
fstp
cmp
push
jmp
push
mov
mov
cmp
dec
lcall
in
add
xor
mov
xchg
jbe
or
subl
js
jge
iret
outsb
loop
jnp
ja
jnp
or
data16
addl
mov
aam
das
or
add
jbe
adc
jno
and
or
jns
in
lods
jnp
push
and
js
inc
test
cmp
xchg
mov
xchg
inc
aas
mov
or
daa
fbstp
imul
sbb
xor
dec
adc
sti
js
loope
repnz
clc
sarl
je
pop
scas
cmp
jb
int
cs
push
push
repnz
xor
aam
xchg
inc
dec
or
test
pop
mov
jle
jecxz
in
bnd
out
adc
cmc
add
out
out
push
mov
cmp
imul
fs
sub
jne
out
and
fistl
or
icebp
jge
or
jmp
mov
adc
sub
inc
sbb
pop
xchg
push
lods
sub
mov
js
mov
adc
out
test
sub
movsb
lret
adc
lret
iret
or
mov
dec
fisttps
mov
scas
addl
adc
shll
pop
test
xor
lret
cmp
mov
adc
fst
lds
adc
fcomip
test
mov
test
dec
adcb
adc
fdivrs
out
mov
cmc
adc
pushf
pop
adc
scas
rcrl
lea
jae
sbb
jp
in
int3
outsb
or
lods
or
lock
int3
pop
sbb
movd
popf
pop
jns
jno
in
into
cmpsb
or
xor
rorl
shlb
cltd
adcl
push
jmp
mov
gs
pop
iret
in
sub
lret
sub
icebp
fisttpl
mov
ja
sub
jb
xor
add
in
jb
hlt
dec
lds
sbb
ret
adc
xor
out
adc
pop
sbb
aaa
imul
jmp
int
outsb
inc
xchg
testl
dec
mov
dec
mov
inc
adc
imul
aas
and
ja
push
inc
lds
sub
add
mov
call
ficomps
xlat
cwtl
or
daa
cli
cli
sahf
xor
pop
imul
dec
lods
gs
negb
cmp
push
dec
or
sub
xchg
stos
add
mov
lods
push
stc
aas
dec
fsubr
lret
adcb
dec
out
sub
in
sub
inc
js
mov
mov
pop
decb
lret
rcrl
push
imul
xchg
add
jo
outsb
cmp
jge
out
jecxz
sub
js
adc
mov
xchg
cmpsl
adc
push
imulb
xor
mov
je
mov
repnz
sbb
cwtl
or
cvtps2pi
loope
cmp
int
and
push
add
js
mov
imul
pop
pop
mov
les
mov
xor
push
cmp
lds
daa
and
scas
stc
or
push
aas
ljmp
mov
pop
jne
or
cld
pop
out
in
int
mov
push
jg
dec
mov
push
add
lret
adc
cwtl
inc
or
pop
pop
and
je
cmp
or
fwait
inc
push
cmpl
das
popf
sub
test
adc
inc
sti
jp
mov
push
popf
pusha
mov
fcomps
jmp
jbe
js
icebp
imul
cwtl
lods
in
rcll
pop
dec
and
leave
xchg
xchg
xor
pop
mov
xchg
cmpsb
popa
ss
pushf
enter
dec
jnp
leave
cmpsl
lret
popa
cld
pop
insl
gs
leave
xchg
mov
aad
xchg
mov
stos
into
out
push
pop
scas
or
mov
ja
aam
rcll
sub
stc
lcall
sbb
or
aaa
pop
jl
pop
push
jge
mov
aam
int3
cs
loopne
popf
lret
cmp
cmp
cmpb
jle
jg
or
sbb
aad
xor
scas
or
jl
lret
imul
nop
add
scas
push
int
loopne
add
mov
cmpsb
push
stos
adc
xor
adc
popa
lods
or
mov
mov
xchg
add
mov
outsl
dec
jmp
dec
jge
sub
lcall
lret
pop
xchg
add
pop
test
add
ret
or
jne
fmull
xor
dec
pop
sub
inc
pop
mov
shll
inc
and
jno
cmp
movsb
dec
scas
push
idivl
push
mov
inc
mov
loopne
insl
xorl
scas
rcrl
mov
sbb
mov
je
jecxz
push
fbstp
stos
cmp
inc
cs
int3
xor
lret
mov
insl
in
pop
cltd
add
jbe
outsb
jg
addr16
js
or
push
shl
cmp
div
imul
pop
daa
fstpt
loop
mov
cli
je
mov
mov
lods
mov
frstor
adc
xchg
sbb
fnsave
fs
js
dec
pop
imul
inc
mov
or
xor
jl
roll
pop
call
hlt
imul
cli
iret
or
subb
xor
lea
xchg
dec
sbb
and
mov
fadds
loop
ljmp
pop
nop
ss
out
repnz
or
in
call
add
insl
cmp
xor
push
pusha
repnz
sub
pop
iret
mov
push
rorb
or
xorb
out
cld
xor
je
mov
push
pop
pop
push
mov
pop
inc
mov
fstpt
pop
jl
cmpsb
jb
int3
jb
adc
push
push
push
dec
ret
scas
push
fnstenv
out
or
sub
fdivrs
mov
shrl
sbb
and
cs
fxch
xor
xchg
stc
xchg
stc
call
aam
test
jb
rorb
in
test
and
push
js
out
cmp
ret
inc
fistps
jl
or
nop
dec
imul
stos
dec
mov
xchg
push
push
addl
into
adc
lds
aaa
enterw
jmp
mov
rcll
ret
mov
lret
mov
lahf
inc
adc
int3
stos
stos
jl
and
xchg
push
push
xor
je
nop
int
out
ret
sub
into
sbb
dec
mov
cmpb
aas
sbb
lds
mov
sub
push
lods
or
pop
pop
sub
pop
std
dec
stos
mov
cmp
out
popa
jne
out
jb
hlt
mov
lock
cld
xor
bound
xor
rcl
xchg
sub
mov
mov
mov
incb
add
sub
ljmp
test
nop
test
sbbl
push
int
shl
cmc
shlb
call
test
sub
mov
fst
test
subb
out
jge
adc
adc
sbb
pop
stos
mov
loop
pop
mov
mov
and
out
xchg
loop
cmp
add
iret
fmuls
pop
clc
outsb
jns
xor
mov
or
gs
push
dec
int3
test
push
adc
dec
jb
sub
insb
cld
jne
movsb
hlt
orl
pop
imul
mov
ret
loope
push
arpl
and
test
xchg
jl
xlat
out
mov
xlat
fnstcw
es
insl
xor
hlt
add
pop
mov
or
shlb
lock
ds
cmp
popf
icebp
mov
add
mov
push
xchg
xor
cmpsb
mov
jle
hlt
gs
adc
movb
xchg
lret
push
fcoml
es
add
pop
adc
sbb
rolb
cmp
sub
repz
push
hlt
das
stos
jmp
mov
jmp
std
pop
ljmp
cmc
test
iret
clc
jo
mov
mov
nop
das
faddl
jmp
inc
jne
aaa
clc
cltd
in
adc
out
sub
fxch
cmp
jge
lret
fidivrs
mov
dec
rclb
fisttpl
iret
repz
shlb
jl
in
pop
je
cmc
test
dec
aad
movsl
pop
clc
cmp
ficompl
mov
fmulp
add
inc
jmp
lock
and
xor
test
lods
cmc
and
xchg
push
push
sbb
mov
icebp
pop
cmpb
pop
lahf
jge
cmp
or
cmp
fldl
jg
push
in
cmp
out
adc
jl
clc
icebp
in
cmp
cmpsl
cmp
arpl
pushf
dec
in
insb
lcall
imul
sub
fisubrl
sbb
cmp
mov
jp
out
xchg
adc
hlt
push
ss
jmp
std
mov
aad
movsl
pop
sbb
mov
xchg
aaa
les
out
popf
pop
jge
nop
shll
hlt
js
scas
xchg
jne
adc
mov
ja
mov
ljmp
popa
aam
mov
subl
jl
loope
push
out
or
xchg
adc
lock
cmp
divb
and
cmp
ja
subb
mov
inc
jae
popf
cmp
jnp
xchg
pop
or
cmpsl
clc
and
xor
jmp
add
je
repz
xchg
adc
push
mov
test
push
jge
call
jl
loopne
cmp
sbb
pop
cwtl
pusha
sub
jnp
dec
xchg
mov
push
out
jne
imul
inc
popf
repnz
mov
pushf
mov
or
es
lret
into
aas
cmp
jno
xor
lret
imull
outsb
hlt
push
jg
or
dec
xchg
sub
mov
mov
insl
call
mov
nop
push
sti
scas
outsb
jge
pop
int3
adc
sti
cli
ds
inc
dec
dec
fwait
mov
mov
pop
dec
out
fsubrs
mov
ret
and
outsb
cmpsl
jmp
cmp
cltd
stos
mov
and
pop
mov
fcmovu
xchg
add
jns
call
adc
or
ds
dec
jg
iret
and
xlat
cmc
andb
fldl
inc
mov
adc
dec
dec
je
jo
xchg
mov
sub
aam
pop
sbb
outsb
ljmp
call
movsl
adc
int3
int3
lds
popf
mov
mov
aaa
jns
or
xlat
test
ffree
lahf
jmp
push
xchg
xor
dec
lds
das
pushf
shrb
int
pop
std
adc
daa
dec
mov
jb
lahf
fwait
lcall
sub
jg
movsl
stos
mov
dec
aaa
mov
ja
pusha
jecxz
pop
pop
or
fidivl
call
xor
sbb
cmp
or
lds
xor
sti
inc
out
push
lcall
mov
call
mov
sti
and
divb
add
push
es
lret
stc
adc
lcall
mull
ljmp
iret
dec
insb
scas
inc
in
jne
mov
stc
aaa
add
cli
movsl
pop
stc
mov
jecxz
push
cwtl
mov
mov
aad
sub
jge
inc
lahf
jg
jmp
aam
sub
sbb
clc
out
outsl
dec
sbb
cmpsb
movsl
enter
mov
cmpsb
xor
shl
pop
pop
dec
inc
ja
mov
xchg
outsb
pusha
mov
cmp
pop
mov
and
outsl
rcr
mov
adc
dec
pop
push
cmc
icebp
mov
imul
sbb
or
pop
mov
sub
mov
into
sbb
sbb
test
cmc
mov
movsb
je
popa
pop
mov
push
cmp
dec
stc
test
fs
adcl
add
popf
xchg
aaa
std
cmp
rcll
in
xchg
cmp
inc
fdivrs
roll
ficompl
test
ret
mov
or
iret
and
pop
insb
sub
es
insl
rcll
dec
fwait
jg
in
inc
je
fwait
push
pop
jno
or
sbb
ljmp
mov
mov
callw
mov
lock
aam
and
dec
pop
and
lcall
push
test
or
mov
ret
dec
stos
jne
in
loope
ljmp
jg
pop
adc
rorl
xor
pop
add
decb
inc
popa
out
mov
mov
fildll
pop
pushf
ljmp
arpl
inc
push
mov
call
inc
cwtl
push
imul
mov
mov
loopne
cs
pusha
aam
test
xchg
sbb
sti
jb,pt
shl
negb
push
mov
insb
icebp
idiv
inc
mov
mov
push
mov
ret
inc
cmc
cmp
test
mov
stos
and
dec
rclb
sub
cwtl
push
xor
pop
int3
call
je
push
sub
mov
push
daa
jp
aas
and
scas
fcoml
rcr
cmp
sbb
xchg
dec
fs
and
enter
cmp
cmp
dec
push
aaa
cli
int3
ret
mov
mov
repz
arpl
stos
idiv
clc
stos
stos
add
lret
js
rolb
out
xchg
orl
addr16
xor
and
das
test
and
cld
dec
xchg
shrb
lods
pop
cmp
mov
cs
inc
test
adc
scas
popf
cltd
stos
cmp
sti
pop
and
lods
loopne
dec
scas
xchg
insb
mov
adc
lret
ss
loopne
cmp
pop
rcll
aas
sbb
inc
stos
jmp
ret
fists
inc
movsl
stos
jp
addr16
aaa
add
sub
lahf
push
jmp
cli
orl
xor
jecxz
xchg
pop
jmp
jp,pt
mov
xchg
xor
xchg
iret
int
loop
push
mov
cmp
mov
or
mov
daa
into
in
pop
mov
adc
inc
jmp
push
lret
cmp
push
lahf
push
add
pop
xor
xlat
mov
das
repnz
push
inc
les
in
insl
mov
test
popa
hlt
mov
pop
hlt
fiadds
movsb
mov
data16
fisubs
dec
test
pop
out
out
or
mov
insl
xor
inc
jne
in
and
ret
das
mov
in
shll
xchg
mov
jbe
rolb
pusha
das
push
ds
ret
in
sub
sub
sub
aas
je
das
in
pop
sbb
maskmovq
imull
fadds
add
je
clc
iretw
mov
aad
test
pop
push
pop
fwait
cs
icebp
mov
dec
jecxz
aaa
add
add
int3
mov
pop
pushf
and
mov
pop
xchg
adc
in
scas
xchg
outsl
add
inc
push
test
mov
lods
xchg
mov
push
pushf
inc
fisttpll
jl
stc
cs
pop
mov
mov
mov
push
in
jmp
sub
inc
adc
xor
ljmp
or
jne
fwait
cmp
hlt
pop
pop
jmp
call
aas
call
dec
imul
mov
test
insb
pop
jmp
fimull
sti
and
pop
rorb
test
lea
fwait
xchg
sbb
pop
sahf
enter
cmc
divb
imul
dec
jb
jne
ljmp
xor
jge
xor
sahf
ja
js
test
lgs
lock
inc
push
pop
pop
mov
mov
test
loope
push
cli
adc
lds
mov
and
jbe
stos
gs
xor
adc
sub
xlat
jae
pop
mov
lock
cmpb
dec
jg
dec
mov
jbe
pop
aam
lea
imul
mov
aas
fcomps
movsb
insl
scas
sbb
jge
adcb
mov
sbb
adc
or
out
cmpsl
testb
loope
out
xchg
jge
cli
jl
lcall
pop
sti
xchg
mov
pop
push
lock
mov
mov
aad
adc
loopne
pop
je
add
psraw
roll
sti
mov
test
cs
pop
dec
inc
aas
pop
pop
cmp
dec
push
xor
sub
test
pop
pop
jge
outsb
push
push
mov
adcl
mov
jb
add
cmc
jecxz
pop
mov
rcrl
stos
test
stos
mov
xor
mov
aad
je
pop
aas
into
es
inc
es
dec
mov
bound
addr16
inc
cmp
arpl
mov
out
sub
push
xchg
shll
jle
jae
mov
push
jns
fcmovu
mov
test
push
push
shlb
mov
push
imul
dec
das
pop
std
adc
test
fstp
push
adc
dec
lock
ja
pusha
je
push
sbb
das
out
pop
pop
push
test
cld
mov
xchg
pop
cmpsb
pop
int3
xor
and
mov
xor
sahf
jg
andb
lret
out
loop
es
scas
sub
loopne
scas
dec
jp
sbb
ja
xchg
sahf
repz
shll
pop
repz
and
push
aam
mov
push
pop
ficoml
cmp
dec
leave
push
adc
xchg
sub
or
sub
in
sbb
xchg
stos
mov
jne
mov
out
jbe
arpl
mov
icebp
sti
push
adc
jecxz,pt
gs
in
rclb
pop
pop
mov
push
clc
and
loope
mov
mov
sbb
push
fstpt
jb
ljmp
cmp
out
xor
sub
sbb
push
scas
xor
push
mov
insb
fstpl
xchg
imul
repz
out
int3
das
mov
out
mov
and
adc
mov
mov
ss
cmp
mov
add
ja
inc
add
andl
mov
loopne
outsb
cmp
mov
add
test
cmp
mov
sbb
outsb
mov
sub
adc
add
mov
jb
in
sbb
dec
mov
cmpsl
sahf
dec
xchg
mov
sbb
daa
cmp
je
mov
lods
and
or
cmc
jle
inc
jmp
push
or
ja
addr16
and
mov
enter
into
in
out
inc
dec
cld
push
mov
dec
pop
sbb
sub
ror
mov
jo
gs
stos
dec
cld
rep
lret
jns
stc
sub
xlat
stc
pop
mov
sub
call
lret
mov
es
not
addr16
fstl
mov
add
push
repnz
xchg
std
cmp
cltd
mov
les
aas
mov
lock
ficompl
inc
mov
jmp
jne
outsl
stos
rcll
push
mov
test
mov
push
pushl
aas
mov
cmpsb
pop
imul
xlat
out
inc
or
pop
jecxz
out
outsl
cmpl
shll
push
dec
je
insb
adc
lds
mov
je
inc
mov
fistps
test
popf
in
mov
push
sub
aaa
jle
mov
sub
push
xchg
xchg
lds
push
push
test
push
scas
dec
stos
fisubrs
loop
pop
mov
xchg
mov
cmpb
movsb
jge
xor
mov
and
mov
lds
mov
push
and
push
mov
leave
cmpsb
pusha
lret
mov
rorl
cmp
mov
xchg
xor
bound
mov
inc
and
fsubp
inc
pusha
insl
iret
mov
push
sbb
outsb
jmp
and
sarb
sbb
ljmp
fimull
sbb
mov
stos
pop
out
arpl
pushf
aam
sbb
ss
push
int
pop
es
loopne
out
sub
insl
insl
stos
scas
push
add
ucomiss
inc
clc
jnp
mov
jb
test
mov
rclb
cmp
cmp
and
or
adc
inc
shlb
cmp
push
push
ss
sub
mov
mov
xlat
fidivrl
ds
pop
mov
fwait
jge
inc
inc
mov
adc
push
dec
gs
mov
jno
dec
mov
xor
and
cmp
jne
fisttpll
lcall
dec
adc
popf
jecxz
sub
cmpsl
pop
jl
pop
fsts
divl
pop
mov
jge
pop
dec
fwait
inc
push
shll
lret
lret
xor
sbb
mov
sub
adcl
or
icebp
inc
loope
cwtl
cmp
mov
icebp
ror
mov
aam
adc
movsl
iret
xchg
jne
test
mov
insl
ss
xchg
test
and
jle
cmp
xchg
popf
divb
mov
push
loope
dec
loope
and
xchg
popf
mov
dec
mov
fwait
sbb
or
xor
mov
shll
dec
push
mov
lret
mov
mov
inc
das
fucomip
sub
outsb
xchg
mov
jae
pop
pusha
fimull
add
int3
add
jbe
pop
js
push
mov
mov
and
test
stc
rcrb
outsl
stc
pop
and
add
popa
js
jecxz
ja
pop
xchg
inc
loopne
dec
add
sar
push
es
sbb
call
rorl
push
dec
mov
cmp
push
xchg
hlt
push
mov
movsl
int3
cltd
mull
push
int3
lret
xchg
test
cmpsl
insb
mul
call
push
jne
xchg
cmc
xchg
fiaddl
xchg
cmpsb
jge
push
and
lret
aad
mov
fldenv
push
inc
test
mov
mov
lds
aam
outsb
or
jmp
xchg
pop
pop
jne
dec
xchg
adc
add
aam
int
dec
je
mov
fmulp
pop
mull
xchg
jno
insl
inc
in
insb
repz
and
out
mov
ret
das
mov
mov
cmpsl
push
sbb
push
xchg
loopne
das
or
cmp
das
sbb
addr16
pop
out
imul
out
jnp
ja
jnp
xchg
out
inc
jmp
cmpsb
add
out
fcmovnbe
and
cmc
psadbw
add
iret
fsub
mul
cmp
xlat
adc
mov
aas
xchg
jge
stos
mov
dec
int3
mov
adc
mov
pusha
xchg
lret
and
xlat
or
and
mov
loop
or
or
adc
push
jmp
add
popf
dec
push
push
mov
inc
inc
cmp
fs
dec
or
cmp
add
or
jg
cmpsl
pop
xchg
movl
mov
sbb
mov
pop
pop
fisubl
or
in
xor
sbb
jns
imul
lret
inc
lcall
dec
test
fldl
mov
divb
add
aam
or
popa
cmp
sub
loopne
out
pop
enter
repnz
enter
stos
xor
stos
loopne
cli
pop
jg
sbb
es
imul
dec
xor
mov
push
dec
stos
sbb
jne
push
in
pop
cmp
nop
jge
push
jmp
xor
mov
adc
imul
adc
ret
rorb
iret
popa
mov
mov
loope
mov
mov
jle
setno
push
push
cmp
pushf
mov
or
jns
mov
outsb
add
add
or
ljmp
cmp
add
add
inc
leave
add
pop
add
adc
inc
fwait
dec
imul
ds
fcoms
neg
cmp
push
data16
daa
sbb
push
idivl
es
ds
fcompl
inc
lret
mov
int
jg
in
mov
ljmp
adc
out
mov
in
fwait
sbb
dec
mov
mov
repz
jo
std
imul
ficomps
mov
lcall
or
sub
stos
jno
mov
xchg
sub
orl
add
gs
jl
es
dec
pop
jno
mov
sub
adc
out
cs
test
cmp
xchg
out
addr16
mov
pop
push
dec
loope
sti
mull
loop
mov
push
rclb
xlat
adc
or
mov
stos
cld
outsl
push
inc
or
sub
sbb
sub
pop
cli
or
pop
rcrl
or
mov
repnz
in
and
dec
and
push
addb
lea
ret
add
jns
mov
mov
and
inc
pop
mov
aas
jbe
xchg
fidivl
push
rcrb
das
es
lahf
fnstsw
xor
into
add
fdivs
push
jg
pop
sub
sub
bnd
popf
ljmp
in
add
dec
push
pop
shll
popf
pop
jno
jmp
and
rclb
and
xchg
jbe
mov
pop
ja
jmp
lret
xor
sub
out
mov
je,pn
faddl
mov
add
scas
dec
cmc
jle
scas
xorb
xchg
ds
sti
int
addb
iret
mov
mov
and
fcoms
aaa
pop
xchg
and
test
cmp
movsb
icebp
xchg
inc
mov
sbb
das
mov
sbb
push
test
bound
push
aam
mov
mov
pop
jl
sub
fstl
test
push
jns
and
sar
sbb
cltd
sbb
sub
inc
dec
or
clc
stos
jl
mov
bound
les
cld
mov
adc
outsl
pop
add
mov
cltd
in
cmp
mov
mov
inc
ja
add
leave
xchg
mov
fs
arpl
mov
and
or
lcall
mov
jmp
frstor
lds
and
or
xchg
or
cmp
xor
push
dec
loope
je
icebp
cs
push
lods
in
cmp
cmp
dec
mov
pop
ja
sbb
test
hlt
or
xor
adcb
fldl2t
or
aas
aam
mov
aad
sub
mull
pop
mov
xchg
or
cli
mov
xchg
cmp
out
sbb
and
mov
lds
lcall
adc
es
fstp
push
loopne
sub
add
and
and
xchg
mov
add
pop
sahf
dec
scas
clc
out
mov
inc
scas
mov
rcrl
mov
call
sub
pop
pop
or
sub
repnz
sbb
mov
push
jne
xchg
das
xor
xor
xor
xor
mov
push
lods
lret
das
fwait
pop
or
ljmp
add
sub
das
mov
lock
or
inc
xchg
fisubrl
bound
cmp
mov
sub
inc
pop
jnp
arpl
sub
repnz
roll
xchg
lods
push
outsl
dec
out
pop
loope
sbb
xlat
or
jb
cmpsb
jg
std
arpl
mov
neg
add
push
call
imul
std
push
jl
mov
jg
push
mov
ret
test
cs
jb
or
pop
lcall
or
jo
xor
enter
or
pop
add
mov
push
mov
push
add
mov
test
lret
stc
inc
stos
xchg
pop
xabort
or
cmc
xchg
outsb
js
xor
pop
outsl
outsl
hlt
fwait
push
cmpsl
dec
mov
ss
jne
mov
les
lahf
arpl
popa
push
adc
loopne
fistpl
lahf
arpl
sahf
mov
fs
mov
push
in
and
mov
fisubl
inc
mov
repnz
jo
mov
scas
sarl
mov
add
cs
lea
cwtl
push
repnz
bound
hlt
mov
bndldx
cmc
dec
cmp
sub
cld
insl
fisubl
pop
imull
lahf
jno
in
jns
sbb
xchg
stos
lcall
movntq
out
mov
scas
subb
into
lock
xchg
in
mov
sbb
not
jae
mov
sarb
out
dec
aam
push
shll
repnz
pop
jmp
test
hlt
cmp
loope
es
sub
ror
scas
cmpsl
sbb
popa
loopne
clc
imul
imul
fwait
cs
ja
pop
es
and
ljmp
loop
lea
std
xor
into
push
data16
imul
imul
mov
inc
stc
xchg
mov
mov
or
outsl
mov
outsb
dec
lret
push
sar
pushf
adc
mov
nopl
in
push
call
mov
loopne
out
xor
xchg
push
or
jle
in
jns
ret
xchg
xchg
scas
lea
and
es
adc
xchg
cmpl
or
jne
dec
mov
mov
push
xchg
xchg
fstpl
xor
jl
xchg
dec
aad
hlt
sti
aad
lahf
test
xchg
pop
and
pop
push
add
movsl
scas
shrl
cmp
shl
xor
test
rcrb
test
dec
pop
mov
dec
xorl
sahf
mov
ljmp
dec
stos
sub
sub
push
add
jbe,pt
mov
inc
out
clc
pop
aaa
mov
fcoml
scas
mov
xchg
or
and
fisubl
xor
pop
lods
movsb
test
insb
insl
ret
scas
mov
arpl
les
mov
dec
pop
cmp
sub
loopne
add
xorl
scas
push
scas
in
mov
or
adc
out
mov
and
fstpl
mov
cmp
cmp
push
inc
cmpsl
sub
fcoml
adc
loop
mov
pop
push
dec
cmpsb
int3
mov
pop
or
jo
lds
mov
incb
mov
aad
mov
gs
mov
int
into
addl
mov
cmp
scas
icebp
shlb
xor
cmpsb
adc
sub
sub
xchg
std
mov
adc
sub
popa
mov
jge
jne
jnp
adc
xchg
cmpsb
sbbb
lret
jns
xchg
shlb
or
leave
push
dec
jp
jne
fcmovu
dec
int
jno
das
sub
or
adc
jae
xchg
out
fcomip
std
mov
and
dec
jbe
mov
add
xchg
xor
add
stos
sub
push
push
adc
dec
in
push
sbb
iret
inc
or
in
jbe
fs
add
in
inc
push
fisttpll
aam
push
pop
xchg
inc
stc
aaa
jb
and
fistl
std
repz
out
jl
lcall
cmp
test
sub
jl
test
arpl
in
push
outsl
leave
adc
push
and
rol
data16
jns
mov
nop
mov
mov
cmp
dec
and
test
mulb
stos
shrl
shlb
mov
js
jge
cmp
stos
xchg
sub
push
xchg
add
hlt
jmp
mov
int
xchg
lock
das
test
mov
push
mov
jnp
xor
stos
mov
movsb
adc
fsubrs
cmc
fists
pop
pop
inc
cwtl
int3
dec
test
mov
mov
es
or
pop
dec
push
push
mov
inc
std
cmp
addl
push
mov
adc
lods
cmp
mov
js
inc
imul
in
ja
lock
and
pusha
adc
pusha
jge
sub
mov
mov
leave
push
repnz
sub
shll
sub
jecxz
pop
lods
mov
jg
scas
inc
std
fs
sub
sar
pop
add
in
dec
xchg
jg
rcll
jge
aad
adc
aaa
clc
cltd
dec
jg
mov
xlat
jmp
popf
nop
pop
mov
xchg
in
sub
push
cmp
jp
or
call
lods
jnp
fucomi
in
jbe
pop
sbb
dec
ficomps
fidivrl
arpl
jge
fidivrl
pop
pop
vmwrite
icebp
adc
rcll
out
cmp
pop
mov
adc
and
pop
cmp
and
sub
out
jecxz
scas
cmp
test
pusha
lods
xchg
push
lock
movsl
sti
scas
subb
test
xor
push
sub
and
jecxz
push
cld
adc
add
lret
xchg
repz
addr16
mov
mov
hlt
data16
fst
adc
lods
fcomps
loop
jmp
xor
xchg
sbb
xor
mov
mov
ret
cmp
fsubrp
xor
cli
sbb
jno
xchg
sub
mov
inc
jmp
outsb
scas
shrl
cmp
arpl
int
sub
loope
mov
mov
xchg
jg
test
mul
insl
out
in
out
adc
test
sbb
mov
inc
adc
xor
insl
out
ljmp
test
ljmp
idivb
cmpsl
loopne
cmpb
pop
pop
sti
imul
shlb
js
adc
aas
lods
jl
mov
sbb
lods
sti
mov
jbe
adc
or
mov
push
addr16
mov
sub
mov
jno
setle
push
adc
mov
cmc
es
jns
cmpsb
testl
mov
push
fucomp
jmp
cmp
and
aas
pop
jne
es
in
mov
jo
mov
popf
mov
pop
mov
mov
add
je
mov
or
stos
adc
sub
pop
mov
cld
push
popf
sar
xchg
out
xchg
sbb
in
mov
jbe
mov
test
mov
push
scas
xchg
fldt
clc
test
repnz
loope
fdivr
push
cmp
push
test
cmpsb
das
scas
jg
add
sub
out
aas
push
push
outsb
mov
jns
mov
sti
jge
into
enter
sbbl
loop
jne
jno
mov
jg
mov
adc
cmpsb
popf
push
cmc
pop
mov
shll
xchg
pop
mov
and
mov
arpl
repnz
or
hlt
mov
cli
arpl
sub
neg
adc
push
inc
jae
jecxz
jmp
xchg
cltd
pop
push
outsb
dec
lods
mov
cmp
add
inc
into
mov
stc
dec
ljmp
test
adc
popf
xor
xlat
ficompl
jle
jle
roll
mov
jnp
popa
jge
push
sub
push
xor
scas
mov
pop
xchg
ljmp
ljmp
push
dec
push
xchg
pop
pop
in
lods
mov
outsb
mov
mov
cli
fmul
mov
loopne
cs
pushf
jg
sbbl
jmp
ds
leave
xor
out
or
pop
xchg
daa
std
add
push
sub
sbb
sarl
ja
fimuls
xchg
cmpl
and
sub
pop
idivl
repz
sub
sub
cmpsl
pop
stos
pop
aad
fdivp
shrl
jne
push
mov
cwtl
ffree
data16
mov
add
out
and
popf
push
sahf
add
cli
sub
leave
mov
shlb
adc
addr16
jg
hlt
inc
mov
pop
push
pop
sarl
pop
aas
les
aas
push
mov
sbb
scas
or
mov
movl
scas
loopne
pop
cld
xor
int3
sbb
lods
out
pop
out
repnz
loope
sub
mov
adc
jbe
and
jo
jnp
aas
xchg
xor
in
sbb
mov
in
js
gs
jge
cmpsl
aaa
in
cmp
stos
in
jge
sub
adc
mov
mov
mov
sub
xchg
addr16
push
repz
or
sub
fcomi
jo
inc
loope
pop
movsb
inc
mov
xchg
inc
pusha
jge
idivb
lods
sbb
je
mov
mov
aas
lahf
mov
push
movsb
pusha
xchg
cld
jb
int3
jg
jns
push
pop
stos
shr
rcr
les
mov
pop
imul
or
pop
idiv
cmpsl
xor
mov
or
lahf
cmove
shl
ja
pop
flds
xchg
loope
adc
les
pop
sub
mov
xchg
mov
lahf
hlt
cmp
outsl
mov
sub
mov
mov
sub
pop
xor
adc
xlat
sub
popf
cli
cmpsb
or
imul
cmc
push
fidivrs
test
adc
sub
inc
fdiv
ficompl
les
movsl
sub
inc
dec
fldcw
mov
jnp
ret
movsl
sbb
sub
xchg
scas
aas
scas
sbb
jmp
and
jle
mov
sbb
in
scas
xchg
clc
ret
ljmp
pop
sub
sbbb
adc
dec
repz
xchg
aad
lods
push
andb
mov
add
xor
sti
outsb
in
jecxz
push
icebp
aam
mov
xchg
aaa
notl
test
and
sbb
push
jecxz
mov
lds
cmc
rorb
inc
lahf
push
sub
pop
enter
lods
out
adc
push
fldcw
cld
cmp
or
sti
testl
inc
mov
out
push
imul
out
cmpsb
jb
pop
enter
shrl
mov
inc
cwtl
pop
aas
sub
push
inc
mov
ss
loop
fldcw
outsb
mov
sub
pop
push
and
ss
and
cli
mov
out
inc
vandnps
xchg
stos
push
ret
popf
sub
pop
adc
and
push
inc
jmp
rcl
inc
jle
rclb
data16
or
dec
enter
push
mov
addb
push
mov
mov
out
jnp
jae
movsl
addr16
fisubrs
imul
jne
cmp
pop
aad
sbb
std
xor
inc
mov
fwait
cmp
in
outsb
es
dec
and
push
pop
imul
stos
add
mov
lods
or
dec
mov
sbb
loopne
cmc
adc
xor
dec
cld
cmp
dec
pop
add
out
mov
sub
in
sub
fsubr
stc
fbstp
jg
cmp
fbld
aam
lock
xor
or
out
jns
pop
cmp
inc
pop
cld
mov
test
mov
pop
mov
aas
test
insb
dec
jle
and
mov
jp
mov
movsb
jae
xchg
cmp
jmp
jno
pop
inc
cli
in
mov
cmp
inc
jnp
pop
inc
xor
dec
fs
es
jne
sub
and
mov
cmpsl
bound
pop
adc
cmp
push
push
jno
decl
scas
imull
cmp
out
daa
loopne
cld
xchg
test
cld
popa
cmc
pop
clc
and
xor
std
in
sahf
and
lahf
arpl
mov
jmp
sbb
ficompl
xor
jae
lea
push
pop
cmp
test
pop
inc
jmp
test
cmpsb
ja
cmp
popf
xchg
enter
fldt
and
push
std
cltd
insb
or
lcall
dec
lods
pop
mov
aad
xor
pxor
push
adc
mov
shll
jecxz
loop
out
lret
icebp
dec
pop
sub
or
dec
insb
rcr
xlat
scas
dec
push
mov
sub
jle
test
mov
stc
inc
mov
adc
scas
lret
jle
xchg
sbb
sbb
movsl
jl
repnz
jmp
jae
cmp
mulb
cmc
cmp
mov
mov
mov
and
int3
or
xor
jo
pop
cmpsb
out
std
inc
jp
mov
ljmp
jnp
divps
insl
cwtl
dec
loop
daa
inc
mov
mov
call
scas
cld
aam
imulb
and
push
insb
push
inc
xlat
clc
cmpsb
aad
push
in
inc
cltd
fdivrp
loop
ss
fadd
push
add
movsb
mov
inc
mov
pushl
jns
repnz
aad
sbb
adc
push
aas
das
popa
mov
and
repnz
test
adc
cwtl
cmp
int3
or
sub
push
xor
push
leave
ret
mov
push
adc
fs
jns
jae
pop
ss
pop
clc
add
ffree
add
fisubrl
repz
sarl
int3
add
gs
mov
movsl
out
sub
mov
ds
lods
stc
aad
mov
loope
adc
stos
inc
leave
jle
cs
movsb
pop
enter
jge
and
lock
mov
cmpb
pop
icebp
out
cmp
mov
fidivs
cmp
adc
aad
pushf
loopne
or
sti
sub
dec
mov
pop
imul
push
in
pop
add
stos
sub
outsb
fisubrs
sub
dec
scas
std
ja
cmp
daa
mov
mov
pop
pop
lcall
icebp
xor
std
xchg
sub
call
sub
mov
xorb
cmpsb
xor
outsl
jmp
in
dec
mov
sbb
mov
xchg
add
or
mov
ja
faddl
cmp
sub
addr16
mov
push
sbb
xor
roll
movsl
out
sub
mov
adc
call
popa
addr16
mov
pop
and
test
mov
shl
sub
test
cmpsl
pop
mov
stos
jmp
mov
sahf
mov
pusha
lea
je
pop
push
fnstenv
fucomip
test
out
in
sbb
out
or
lods
je
jb
dec
testb
sbb
mov
insl
fsts
lock
movsb
fs
ficompl
std
pop
movl
ret
cmpl
mov
sbb
mov
out
movsb
mov
clc
scas
fs
push
sub
ret
inc
xor
gs
sbb
loope
lret
add
cmpsl
clc
sahf
xor
jo
push
sti
and
iret
xor
pop
into
cs
shl
jnp
cmp
or
cmpsb
mov
jecxz
mov
pusha
mov
lods
call
in
cli
push
stos
lret
push
outsl
push
popa
adc
jb
mov
stos
sub
scas
pop
jb
loop
repnz
inc
or
imul
imul
fisubrs
enter
decl
cmc
out
jnp
jne
ds
loope
mov
sbb
stos
mov
push
cmp
movsl
xor
push
mov
add
and
xchg
add
push
mov
enter
mov
jne
jl
imul
mov
subl
hlt
das
inc
movsb
pop
out
int
popa
lret
or
xchg
and
sbb
mov
insb
int
shlb
in
inc
push
push
leave
out
enter
sbb
insb
addr16
inc
stos
jns
addl
js
pop
nop
leave
js
sbb
arpl
mov
popa
pop
loop
pop
outsb
sarl
shrl
push
xchg
movsb
data16
lret
enter
ret
movsl
imull
fdivrl
cmp
int3
aas
and
es
mov
sarl
xlat
mov
push
jne
mov
push
pop
jl
sbb
mov
mov
icebp
push
mov
addb
jl
lods
push
scas
push
in
pop
aad
xor
testl
jnp
xchg
lahf
shl
in
cmp
dec
cmp
js
jl
push
pop
stc
xchg
mov
testb
nop
scas
cld
sub
jo
inc
mov
lods
clc
dec
insb
aad
ljmp
push
mov
jecxz
aad
inc
lcall
inc
adc
sub
push
sbb
into
xchg
and
mov
xor
dec
sub
ljmp
mov
jl
das
push
out
inc
jle
aaa
lods
sbb
icebp
scas
sub
lea
fdivs
fs
das
loope
mov
fwait
jnp
jg
xchg
cwtl
jno
xchg
loopne
push
test
ljmp
leave
mov
add
mov
jge
shl
ficoms
mov
iret
dec
call
icebp
test
or
or
in
mov
inc
pop
fisttpll
fwait
addr16
lret
cmpl
stos
xchg
aas
cmp
mov
movsb
push
pop
jnp
jmp
sti
push
outsb
jg
lahf
pop
aaa
jp
pop
xchg
sub
dec
dec
addr16
or
mov
push
pusha
cmp
pop
fstpl
push
adc
repz
adc
loopne
mov
mov
aam
arpl
and
into
callw
sub
xchg
add
lods
lret
push
push
add
cld
jge
fisubrl
push
test
add
dec
or
push
stos
test
mov
rcrl
sub
xchg
cmp
xchg
dec
aam
stos
lods
fcoms
jle
cmp
negb
mov
or
jo
inc
and
loope
cmp
pushf
jl
nop
in
mov
dec
add
aas
in
pop
enter
jecxz
sub
or
xor
iret
gs
fldenv
je
sbb
mov
fbstp
sub
filds
les
xchg
sarb
pop
or
data16
arpl
xor
fucomi
popf
out
aaa
push
in
test
lods
popa
pop
fbstp
sbb
repz
mov
lea
addr16
sarb
pusha
push
sbbl
test
xchg
fwait
mov
cld
adc
cmpsb
popa
in
inc
lods
push
rcrl
sti
jmp
xlat
in
push
push
les
xor
xchg
testl
lcall
pop
fcomip
xorl
je
inc
leave
fdivrs
jno
stos
jb
popa
fdivrl
addr16
xchg
add
xor
jns
jmp
std
lahf
pop
fstpl
clc
loope
mov
sti
addb
sub
outsl
jns
jo
ljmp
imul
pop
fcomip
adc
pop
cli
fwait
out
and
lret
lahf
stos
iret
arpl
in
pop
idivb
in
xlat
aad
pop
xor
lret
pushf
idivb
or
fs
repz
xlat
lock
lcall
ret
sbb
das
push
xor
iret
repnz
sub
cmc
fcmovnb
movq
int3
mov
sbb
and
pop
or
mov
mov
imul
xchg
lea
mov
mov
es
dec
mov
mov
mov
xchg
pop
xchg
in
jp
cwtl
clc
dec
xchg
sbb
ret
lret
lret
inc
lret
mov
faddp
addr16
mov
std
inc
jmp
data16
popf
mov
mov
pop
xchg
adc
mov
jp
inc
int
stc
cmpsl
dec
lahf
pop
cmp
dec
adc
adc
push
lcall
das
or
xchg
stc
bound
sarb
xor
enter
movsb
sarb
arpl
xorl
in
xchg
popa
mov
sub
xor
push
insl
into
ret
xchg
mov
xor
push
cmp
xchg
rcll
cld
cmp
cmp
rorl
leave
les
inc
xchg
sbbb
sbb
cld
popf
cmc
pop
mov
cs
fildl
mov
or
iret
mov
hlt
mov
iret
gs
iret
out
fistps
pop
mov
jae
pop
adc
hlt
jecxz
push
mov
mov
scas
lods
xchg
push
icebp
pop
xchg
call
or
sub
stos
jle
or
jp
mov
jno
jp
orb
jge
in
cmpl
stos
cmp
pop
fstp
adc
or
ret
pop
xchg
adc
inc
adc
rclb
lods
arpl
loope
xchg
or
cltd
mov
mov
xor
scas
ss
inc
and
lret
add
movsb
lret
push
or
jecxz
pop
pop
xchg
outsb
mov
test
ret
mov
test
aad
sub
xchg
addb
or
outsl
mov
imul
test
mov
cmc
sub
les
stos
icebp
arpl
mov
pusha
xlat
insl
jae
pop
cmp
xor
rcl
inc
int
les
xchg
push
test
cmp
enter
pop
imul
sub
aaa
pop
popf
push
call
mov
sub
cs
lcall
cld
cmpsl
mov
add
xor
fdivrl
jne
test
xor
mov
pushf
pop
cmp
jne
scas
push
fsubrl
aam
mov
loope
jp
mov
int
cmp
xorb
jecxz
movsl
jge
mov
jmp
sbb
push
out
inc
imul
cmp
daa
jb
pop
in
pop
jg
scas
in
and
cld
das
rcr
js
xor
mov
into
mov
jo
and
in
aad
add
xchg
pop
mov
sbb
push
mov
cmp
scas
xor
and
loop
adc
dec
mov
ret
jns
or
out
shr
push
dec
mov
iret
sbb
mov
cmp
mov
test
fwait
mov
mov
pop
rcrb
ja
aam
cmc
inc
mov
jne
mov
in
mov
movsl
inc
cmpsb
jle
js
dec
pmulhuw
repz
mov
out
ficoml
mov
loopne
fstpt
sbb
sub
and
inc
ret
into
hlt
mov
jecxz
lods
fnstcw
and
mulb
bound
push
mov
mov
mov
push
jmp
test
cmp
fnstcw
ljmp
in
mov
gs
jno
or
or
jbe
sahf
sbb
sti
xor
add
sub
mov
cwtl
in
pushf
popf
push
pop
push
icebp
xchg
test
jns
pop
sbb
std
jnp
scas
or
adcb
aas
icebp
cmpsb
and
xchg
lret
sahf
incb
cmp
sub
movsl
cwtl
aad
int
ja
in
fbld
cmp
jmp
adc
or
fcompl
mov
mov
inc
mov
jecxz
and
inc
pop
test
mov
push
cltd
inc
mov
lret
cld
mov
and
scas
push
daa
iret
ja
mov
adc
mov
sbb
jge
sub
mov
dec
clc
adc
mov
in
es
inc
fists
jne
mov
pop
stc
and
stos
push
out
lret
mov
add
xor
xchg
lock
jle
xchg
mov
dec
jl
xor
es
jle
inc
fdivl
lret
cmp
imul
stos
cmova
jne
in
inc
gs
fstl
jg
push
push
add
lods
mov
cli
ds
adc
outsb
out
mov
ljmp
push
adc
xor
in
adc
outsb
pop
inc
lods
int3
adc
sbb
pop
imul
pushl
icebp
pop
dec
gs
bound
or
shrb
rclb
cltd
mov
fcmovnbe
push
aad
nop
test
or
leave
test
mov
mov
pop
xor
stos
adc
lea
cvtpi2ps
dec
mov
inc
mov
sbb
test
inc
xlat
sbb
cmp
loope
dec
imul
cmc
lods
fstpt
loop
shrl
clc
xor
ljmp
jo
add
loope
sbb
mov
mov
inc
popf
cmp
cwtl
ds
add
mov
sub
movsl
int
aas
test
adcl
dec
test
cmpsb
ret
js
xor
xchg
ljmp
adc
push
add
pop
inc
xlat
popl
clc
xchg
adc
bound
fbstp
aad
inc
cmp
lcall
test
dec
stos
and
movsb
xchg
mov
lret
jp
inc
popa
mov
adc
je
sbb
cmpsl
cs
ljmp
adc
push
cs
movb
xchg
jle
outsb
ret
xchg
loopne
aad
out
hlt
xlat
cmp
add
icebp
pop
inc
mov
mov
shrl
int3
ljmp
push
in
xchg
adc
adc
jmp
outsl
rol
daa
mov
stos
mov
pop
pop
pop
or
xor
shrb
sub
adc
cmp
mov
mov
arpl
cmpsb
arpl
mov
or
adc
ds
cmpsb
jo
mov
mov
jmp
rcrl
cltd
push
ficoms
push
sbb
and
in
cmp
insb
scas
and
idivl
fdivs
aad
push
xor
adcb
lret
dec
mov
movsl
pop
jbe
test
ret
cltd
jo
dec
and
push
fdivs
rcll
xchg
cmp
data16
das
popf
cmp
jle
out
test
stos
stos
pop
mov
jg
mov
pop
scas
clc
sub
or
pusha
mov
in
or
cmp
scas
inc
jecxz
mov
cmp
push
adc
aad
mov
pop
sarl
mov
pop
and
cmp
jge
test
stos
add
clc
mov
xchg
lods
sub
lea
fsts
jmp
pushf
pop
rorl
loopne
mov
sub
xchg
imul
cmp
out
jmp
mov
jge
lret
icebp
xchg
mov
rcl
je
mov
cwtl
cmpsb
jecxz
push
sbb
hlt
xchg
xchg
jmp
push
loope
stos
mov
into
add
mov
cmc
xchg
mov
ljmp
out
lods
in
pop
cmp
push
sbb
cmp
ljmp
icebp
sub
ss
and
insb
aad
xchg
stc
pusha
decb
in
imul
pop
cmp
sbb
xchg
stos
ss
sti
sbb
xchg
push
sti
push
or
icebp
xchg
lods
pop
xchg
add
jbe
cwtl
mov
or
xor
add
push
dec
mov
mov
enter
dec
movsb
xchg
sbb
jne
cmp
sbb
es
pop
cbtw
dec
mov
fcomps
sbb
jp
xchg
and
mov
inc
mov
sbb
push
sbb
mov
sub
and
mov
arpl
or
pop
pushf
jg
icebp
sbbl
push
std
scas
mov
fidivrs
sub
and
sbbb
push
pop
and
xchg
jns
faddl
int
loope
mov
andl
movb
jp
jmp
imul
les
xchg
insb
cld
imul
inc
test
mov
push
insl
jne
mov
fsubrl
jmp
jp
sub
test
push
lahf
dec
xor
outsl
adc
push
sub
idivb
jle
scas
ljmp
mov
jecxz
add
pop
lahf
cld
and
movsb
or
push
mov
loopne
xchg
pop
sbb
xchg
mov
sbb
xchg
sub
lods
xchg
ljmp
cmp
ficoms
pop
sbb
jmp
mov
xchg
rclb
inc
adc
jne
in
les
fwait
mov
sti
inc
sahf
incl
insl
xchg
sbb
push
xchg
adc
jae
cmpsl
popa
mov
jecxz
sbb
les
aam
xor
add
sub
subb
xchg
in
fisubrl
cmp
ret
mov
push
sbb
lds
xchg
mov
repz
lret
in
xchg
xor
aad
arpl
inc
loop
lcall
jne
repnz
inc
out
popa
mov
imull
decl
out
out
daa
clc
popa
inc
xchg
sub
sub
dec
dec
and
int3
adc
fs
mov
clc
daa
dec
daa
sbb
dec
test
rep
xlat
xchg
mov
adc
repz
jae
les
sti
popf
ds
jmp
in
in
mov
ss
out
xchg
bound
push
dec
lock
es
jp
in
pop
sahf
scas
sbb
roll
push
push
mov
sub
cmpxchg
lret
aas
jnp
push
fs
mov
sbb
inc
adc
mov
rcl
sub
cs
mov
fistl
mov
pop
mov
dec
fstpt
imul
stos
mov
jle
mov
xor
fidivs
adc
jl
fidivl
out
in
stos
sti
loope
mov
pop
jno
pop
shr
nop
mov
cmp
fcoml
addr16
mov
xchg
add
mov
jp
xor
jg
cmp
in
jl
inc
pop
xchg
inc
pop
mov
shrb
fwait
jo
rcrl
mov
bsf
push
mov
arpl
sub
jns
stc
mov
scas
and
clc
push
cmp
or
cmp
mov
mov
into
xlat
iret
pop
inc
dec
dec
lock
aas
imul
xlat
jb
push
scas
ljmp
pop
pop
arpl
lret
sbb
sbb
rorb
loopne
outsl
cmp
sbb
xorl
pop
mov
idivl
test
jne
std
sbb
xchg
insl
mov
pop
cwtl
cs
adc
sub
inc
cmpsl
pop
mov
test
fcmovnbe
lock
aad
jg
push
rcll
pop
test
and
stos
dec
pop
pop
sbb
mov
into
cmp
jle
icebp
ret
mov
inc
pop
lock
mov
nop
pop
popa
xor
and
jae
cld
es
xor
push
subb
push
popa
jns
xlat
dec
xor
dec
imul
mov
mov
std
lret
int
jecxz
pop
mov
pop
mov
mov
push
pop
pop
js
fadd
fld1
xor
gs
jns
pop
bound
roll
or
add
cli
push
xor
pop
add
ret
into
ja
fldcw
das
mov
xchg
call
outsl
loopne
mov
jge
inc
fnstcw
cli
dec
sbb
sub
rcll
jno
stos
fstl
mov
push
jecxz
xchg
adc
sbb
pop
aad
dec
fisttpll
dec
mov
mov
out
clc
cmp
mov
scas
arpl
cli
popf
gs
sbb
pop
sbb
rcrl
dec
scas
adc
pop
in
stc
sti
jne
cmpsl
pop
lret
ss
dec
cli
cmp
inc
fstpt
imul
outsl
sub
and
jo
xor
ja
shlb
pop
pop
and
std
cs
test
lds
jg
stos
push
adc
add
sub
add
pop
pop
sbb
pop
sub
jecxz
mov
mov
mov
ret
pop
jae
ret
xlat
cld
popf
lret
push
ret
pop
xor
xor
xchg
xor
push
and
sbb
imul
lahf
sub
into
or
push
push
fnstsw
test
cmc
xlat
xchg
mov
jb
or
xchg
push
cltd
add
mov
lods
inc
inc
mov
sahf
lea
insb
clc
mov
jb
test
mov
push
cmp
xor
mov
push
mov
inc
push
pop
mov
mov
xchg
loop
popa
inc
lock
push
call
cmc
flds
push
xchg
adc
xchg
xchg
or
jmp
fdivrs
loope
inc
jg
jge
int
fidivrl
pop
cld
mov
sbb
popa
bound
pop
int
sub
out
push
je
out
mov
dec
cmp
imull
in
data16
push
stc
push
movsb
mov
jbe
cli
jecxz
out
xor
pop
sub
out
fadds
imul
sti
cwtl
jp
dec
sub
mov
jbe
jle
xor
out
pop
std
mov
cld
sub
shlb
dec
lea
call
pop
scas
add
xor
push
push
popf
pop
fucomi
adc
jo
fidivrl
or
aad
mov
adc
out
repz
rcr
incb
sti
mov
jecxz
sbb
mov
inc
xchg
pop
jecxz
sub
lods
dec
in
mov
mov
xchg
ds
loop
mov
jb
push
arpl
in
mov
or
jmp
gs
sub
outsl
repz
lret
cmc
mov
xchg
dec
enter
mov
fdivl
cmpsl
in
mov
xchg
sbb
pop
inc
adc
in
cmp
mov
out
lahf
xlat
sbb
roll
out
data16
out
test
bound
dec
fsubrs
jle
mov
int
pop
pop
insl
add
jge
mov
mov
fsubrl
push
in
test
rcll
and
andnps
mov
pop
out
je
inc
sbb
repz
ds
lods
fdiv
mov
arpl
je
nop
iret
rcll
cmp
cmpsb
and
insb
cli
jle
fstps
inc
sub
add
pushf
aam
adc
and
or
aad
pusha
das
jecxz
out
cmc
je
pop
or
add
mov
lahf
pop
jecxz
fwait
sbb
cmc
je
shll
stos
lods
in
mov
push
sbb
add
jl
dec
movsb
jo
out
mov
sbb
push
mov
jne
add
fidivs
stos
sbb
insb
pop
inc
loop
add
mov
daa
cld
push
nop
stos
xchg
push
pusha
in
sub
mov
lds
mov
pop
sub
ljmp
push
out
mov
mov
cwtl
jl
sbb
add
fwait
arpl
jle
sub
data16
popf
fadds
cmpsl
and
loope
jecxz
jno
pop
add
mov
aad
ret
jnp
fldt
rcrb
mov
fdiv
mov
into
mov
ror
sahf
mov
aam
xor
and
inc
ret
jl
into
in
xor
pusha
mov
in
fistps
insb
xchg
data16
push
hlt
cmpsl
mov
xchg
out
mov
inc
fmull
fidivs
sub
sahf
pop
sub
xlat
sub
out
push
outsb
push
xor
mov
sahf
ljmp
cmp
or
inc
les
mov
inc
adc
stos
push
xchg
and
adc
mov
jnp
mov
dec
dec
daa
pop
or
je
pushf
fnsave
pop
rcr
adc
outsl
sub
mov
jg
das
add
lods
xor
rclb
iret
inc
int
jns
inc
mov
aaa
fnstcw
xor
adc
dec
imul
sub
enter
jmp
icebp
loope
pop
lods
and
adc
fsubrs
sub
std
pop
loop
and
sti
leave
dec
pop
mov
mov
into
movsb
mov
and
adc
mov
lods
les
js
xchg
push
iret
loope
rorb
std
pop
mov
into
xchg
dec
jecxz
push
add
push
or
test
mov
out
mov
inc
and
rcrb
test
bsr
repz
and
loopne
pop
push
in
jo
sub
out
pop
cmpsb
lock
ret
mov
fists
push
xor
inc
out
sub
fucomp
push
pop
dec
cmp
fistpl
cmp
push
lods
xor
hlt
and
or
sub
iret
mov
and
sbb
divb
sub
cmpsl
push
and
icebp
rol
mov
sbb
push
pop
adc
outsl
cmp
idivb
push
sub
dec
and
jge
cs
stos
test
hlt
fstl
stos
roll
xchg
in
jnp
fs
xorl
mov
test
fcomps
scas
sub
sahf
mov
fwait
adc
or
insl
fwait
sub
add
mov
imul
sub
ja
clc
fbstp
mov
push
mov
jmp
and
stc
push
lret
mov
subb
dec
fwait
lods
jno
stos
lods
ret
stos
mov
sti
jae
xchg
dec
mov
ja
aaa
cmp
sub
inc
xchg
iret
adc
pop
test
jmp
ja
insb
cmp
inc
cmpsl
pop
enter
pop
mov
aas
mov
outsb
rol
rclb
mov
xlat
fiadds
inc
fdivl
inc
stos
lods
adc
jne
stos
mov
ja,pt
mov
push
fsubrl
mov
outsl
xor
das
movsb
sbb
and
fiadds
pop
into
mov
cs
xchg
fisubrs
lea
stc
fdivrl
xor
push
push
fdivrl
nop
adc
cld
repz
pop
arpl
cmpb
and
ficoml
clc
mov
pop
hlt
loope
aam
imul
icebp
push
in
stos
xchg
cld
stos
push
stos
xchg
jae
xor
mov
sbb
fsubp
xchg
enter
ja
jp
daa
lret
pushf
std
push
sub
mov
test
lret
out
fdivs
pop
mov
cmp
das
pop
mov
out
icebp
inc
mov
jp
xor
adc
pop
mov
xchg
enter
push
mov
stc
mov
add
mov
out
test
jne
outsb
sub
mov
stc
push
stos
in
xchg
mov
push
and
jle
push
addr16
jecxz
test
mov
in
jecxz
jb
inc
mov
loopne
push
jecxz
cld
push
push
xchg
sbb
sbb
mov
push
mov
inc
rcrl
adc
lea
mov
ja
jle
pop
clc
fisubrl
in
sub
insl
sub
scas
imul
shr
xor
scas
loop
add
jle
xchg
movsl
and
mov
dec
int3
outsl
dec
fsubs
mov
jmp
dec
fdivl
out
push
lea
iret
mov
mov
cmp
jge
aam
lcall
inc
fnstenv
or
data16
clc
cwtl
pushf
or
fcmovne
loop
xchg
rorb
jl
or
imul
or
sub
mov
fld
addb
imul
mov
cmp
mov
mov
mov
cmpb
jp
push
sbb
sub
mov
sbb
imul
fidivl
icebp
inc
jnp
arpl
mov
ss
pop
pushf
push
adc
mov
stos
ds
fldenv
fbstp
sti
sarb
sub
xchg
roll
jnp
repz
test
mov
mov
jns
xor
inc
push
mov
push
loop
xchg
adc
adc
shlb
pusha
aam
adc
inc
dec
xlat
mov
roll
mov
jge
sub
jno
lret
or
xchg
and
ret
pop
sahf
pop
push
scas
lods
xorl
jmp
pop
or
cmpsl
mov
mov
movsb
and
mov
shr
mov
mov
adc
cwtl
fstps
dec
and
pop
cmp
pop
push
int
adcl
mov
xor
cli
sahf
clc
data16
jmp
notb
push
aam
popf
lds
aaa
pop
mov
dec
jle
loopne
fsubl
pop
xchg
xchg
add
sti
clc
and
xchg
jecxz
enter
pop
pop
adc
inc
lcall
and
sahf
icebp
mov
imul
cld
add
xchg
daa
dec
out
sbb
in
repnz
out
jge
lret
mov
jb
add
cli
ljmp
pushf
ror
out
into
sbb
daa
jp
sub
mov
lcall
inc
or
pushf
xchg
dec
popf
nop
fidivrs
pop
push
dec
xchg
inc
jae
out
mov
xchg
sub
outsl
sbb
in
push
fistpll
sub
mov
shl
and
xchg
sbb
jb
jae
mov
test
test
or
sub
fadd
inc
push
mov
jl
test
sti
mov
mov
mov
loopne
popa
fadds
adc
sbb
cmp
fdivrs
addb
fdiv
test
push
test
cmp
dec
shrl
mov
pop
jno
sti
cltd
xchg
lods
jbe
or
add
push
cmp
ret
xor
rclb
jmp
cltd
xchg
test
or
pusha
out
mov
xchg
pop
adc
in
loopne
adc
imul
loope
lods
jo
jns
push
jge
pop
sti
sub
lcall
sub
les
dec
inc
add
xor
jge
dec
or
sarb
in
mov
outsl
test
test
sub
pop
mov
jmp
test
movd
rcrl
sbb
pop
scas
pop
ds
dec
or
and
mov
fdiv
pop
mul
aad
jno
mov
sub
push
pop
xchg
shll
cmc
dec
in
inc
fsubrl
cs
dec
add
lret
pop
cmp
sbb
aam
cltd
pop
mov
jne
cmp
ds
pop
sub
push
xchg
fcmovu
js
insb
pushf
sub
jge
jbe
sub
pop
or
cmp
push
lds
jmp
mov
lcall
jbe
pop
packsswb
mov
or
mov
cmpsb
imul
jae
xchg
pop
gs
pop
out
sbb
pop
jmp
cmp
push
in
mov
adc
flds
insl
mov
loopne
mull
mov
hlt
ficomps
into
stc
cmp
scas
lahf
fwait
mov
mov
leave
jnp
es
aas
mov
loope
dec
shrl
stos
and
mov
xor
orl
in
inc
pop
loop
stos
imul
or
pop
jo
mov
push
xor
movsl
cmp
jns
inc
push
inc
xchg
push
xchg
addr16
push
aad
dec
jbe
jl
sub
and
adc
cmovne
rcll
repz
dec
movsb
pop
xor
mov
jns
or
ljmp
es
pop
push
inc
jnp
add
pop
sub
dec
test
stc
xor
or
outsb
mov
insl
lret
jg
push
mov
fildll
mov
pop
xchg
mov
push
call
lcall
mov
testl
les
inc
sti
lock
stos
in
scas
mov
push
dec
sub
mov
fisubs
int3
mov
mov
jno
inc
mov
xchg
ds
outsb
mov
fs
jmp
add
std
jno
xor
ret
fwait
es
cli
cmp
scas
aam
insl
movsb
pop
les
pop
sub
inc
lea
jb
inc
cmp
mov
pop
sub
jns
shrb
sbb
dec
mov
icebp
xchg
add
adc
push
cmp
out
pop
je
xlat
sub
pop
rclb
fpatan
sahf
add
xchg
mov
stos
mov
push
add
mov
lds
or
pop
rol
loope
ja
data16
stc
inc
jp
cmp
es
iret
inc
dec
imul
mov
repz
cmp
scas
adc
push
mov
push
xorb
jo
out
movsb
adc
push
xchg
cmp
rcr
lret
mov
xchg
xor
jle
mov
mov
jge
lahf
imul
cltd
xor
aas
adc
repnz
adc
rcrb
sub
lret
push
fwait
mov
mov
imul
or
sbbl
xchg
rcll
cs
andl
xchg
dec
add
out
push
push
imul
sbb
divl
inc
pop
lock
pop
xor
push
cwtl
sbb
jmp
mov
add
cmpsb
mov
pop
add
insl
imul
jo
add
pop
or
xchg
add
into
repz
pop
popl
into
cmp
add
jmp
mov
push
popf
insl
subl
inc
inc
mov
jge
xor
mov
jle
testb
add
ja
out
and
leave
mov
jmp
pop
and
mov
iret
lods
push
push
or
rcrb
jl
repnz
rcrb
sub
sub
adc
fistps
push
cs
ss
dec
mov
cmpsl
dec
add
adc
leave
mov
fidivs
and
dec
je
fcomps
enter
stos
lods
inc
stc
clc
mov
mov
pop
in
fstps
adc
push
sbb
sbb
fcomi
daa
mov
sbb
dec
mov
mov
sub
xor
test
add
xor
and
sub
jmp
flds
test
stc
repnz
daa
mov
dec
add
add
push
jl
negl
pop
jg
add
jle
mov
test
mov
push
out
xchg
ret
ret
mov
mov
int
sub
das
gs
jbe
and
rcl
in
aaa
xchg
insl
cmp
in
iret
adc
into
clc
loopne
dec
xlat
std
sub
pop
shll
cmc
sub
xchg
jo
stc
pop
xor
dec
js
push
dec
decb
mov
mov
lods
xchg
xchg
ret
xor
imul
or
pop
js
dec
loopne
cli
cmpb
push
aad
orl
pushf
cmc
movsl
jns
cld
push
out
addr16
push
repnz
rcr
pop
arpl
mov
scas
scas
jge
pop
mov
in
push
adc
mov
pop
pop
or
je
add
xchg
and
repnz
dec
push
inc
stc
mov
mov
jg
add
out
push
sbb
lret
sub
mov
scas
inc
aam
pop
repnz
jl
jmp
scas
sub
movsl
aaa
out
imul
jbe
hlt
sbb
push
roll
fstl
lret
aam
mov
push
neg
in
mov
push
mov
jle
mov
out
nop
xchg
lods
xchg
pop
fwait
sbb
lods
outsl
call
xor
pop
lea
adc
xchg
cmp
xchg
push
mov
xor
clc
rcll
ds
ds
scas
inc
inc
aas
lea
out
xor
das
movsb
pop
test
xor
sub
jle
push
les
pop
sbb
repz
lcall
std
pop
sub
jl
xor
xchg
xor
adcl
inc
lret
dec
shl
jl
mov
xchg
inc
adc
sbb
out
insb
push
jge
sbb
fcoms
dec
mov
cli
push
dec
inc
push
rcll
scas
pop
jno
jmp
adc
push
test
jmp
xor
cmpsl
int
xchg
iret
jp
sub
cmp
fadds
into
add
lods
mov
adc
inc
inc
xorl
cltd
jae
mov
jle,pt
jae
dec
mov
jle
jns
enter
nop
inc
sub
dec
or
lds
dec
outsb
aam
mov
fwait
sub
call
lret
aas
mov
inc
sbb
jecxz
test
cmpsl
aas
repz
mov
icebp
decb
inc
jo
lret
das
push
cs
arpl
inc
test
lock
cli
pop
cmpsb
jns
pop
dec
jle
mov
jb
cmp
stos
xlat
xchg
sti
lds
arpl
leave
out
gs
addr16
mov
aad
mov
popa
mov
pop
lock
dec
stos
iret
xchg
clc
dec
call
shlb
add
xchg
mov
pop
cmp
jl
rorl
popf
lods
dec
jno
mov
xchg
lea
imul
out
mov
outsl
jno
int
rcll
insl
push
fstpl
cmpsl
outsb
stos
mov
movsl
inc
fldcw
dec
sub
sub
mov
mov
loope
dec
lret
stc
icebp
shrb
scas
sbb
fdivs
decl
jne
mov
cld
lods
shlw
add
jmp
out
xor
push
push
mov
cmp
xchg
mov
std
lock
sbb
dec
imull
pop
fisttps
dec
xor
cmc
jns
mov
xchg
jo
ret
repz
std
lret
xorps
jno
mov
inc
cmc
jmp
mov
or
pop
cli
cmpsb
ljmp
andb
sub
mov
push
imul
xchg
xchg
jmp
insl
out
push
and
mov
inc
out
cld
adcl
jecxz
mov
cmp
repz
jae
xchg
sub
cmp
mov
cs
jg
lods
mov
stos
stc
fbstp
inc
outsl
xlat
inc
movsl
lods
pop
out
xchg
loope
push
ret
icebp
imul
xchg
into
icebp
mov
ja
hlt
xor
mov
push
rorb
outsl
fimuls
pop
leave
or
sub
ret
mov
push
in
mov
jo
pop
jb
test
or
pop
mov
mov
out
aas
xchg
fadds
and
pop
mov
xor
xor
cmp
mov
jl
jle
insl
lret
subb
inc
jmp
lods
ds
inc
cwtl
loop
scas
loope
sub
mov
sbb
clc
mov
jle
pop
std
jbe
or
les
jne
dec
jp
fadds
fwait
push
ja
stos
and
je
sbb
fsubrs
into
push
bound
mov
loop
data16
outsl
aad
push
ja
stos
ss
push
sub
pop
imul
mov
sti
test
lock
xor
cmp
and
and
sub
clc
enter
cmp
push
xchg
loope
ljmp
repz
cmpsl
or
adc
or
insb
xchg
adc
ret
mov
push
sbb
fwait
popf
aaa
push
fdivl
mov
leave
mov
adc
push
ret
mov
pop
inc
fs
aas
mov
ret
bnd
xor
sbb
loop
lfs
and
jae
sub
pop
cs
sarb
sub
jmp
push
mov
mov
jge
and
pop
xor
xchg
es
pop
dec
pop
add
and
or
pop
test
out
in
xlat
jge
ja
roll
aad
icebp
lods
popa
push
lahf
in
pop
cmp
arpl
into
adc
push
mov
stc
lock
cmpsl
call
aas
icebp
lock
sbb
in
stc
cmpsl
es
push
popf
orb
in
mov
nop
lods
sbb
dec
mov
in
ret
add
popw
in
mov
rcr
add
cmpb
mov
ja
cmp
dec
clc
shl
into
push
mov
dec
movsb
cmpsl
cmc
aaa
ficompl
sub
xchg
push
sbb
mov
and
push
mov
xchg
push
push
fcmovu
fisttpl
cltd
popa
stc
loopne
mov
cmp
scas
sub
push
testl
fimull
jmp
jl
inc
xchg
mov
mov
xchg
scas
mov
add
jo
pop
fs
mov
mov
lret
mov
imul
xchg
cmpsb
mov
enter
shrl
mov
push
sub
out
out
push
inc
mov
pop
push
xor
inc
cmp
push
cmpsl
pop
mov
mov
hlt
pop
xchg
and
pop
std
inc
outsl
mov
and
lret
adc
add
scas
es
mov
ja
js
stos
ljmp
je
out
fidivs
pop
stos
insb
pushf
mov
scas
pop
jo
pop
mov
xor
push
cwtl
inc
fistps
add
std
push
dec
xor
rclb
adc
jle
cmp
push
pop
push
repz
mov
fwait
jmp
out
adc
mov
push
rcrb
cwtl
test
cli
mov
pop
mov
pop
and
inc
pop
mov
xor
and
lods
ljmp
mov
fmuls
sub
aam
es
jmp
ja
movsb
jno
add
fidivl
andb
add
out
adc
mov
in
lret
imul
out
pop
ret
in
xor
push
outsl
loopne
loopne
daa
data16
push
icebp
fildl
cmp
and
fwait
movsb
ret
mov
test
ret
pop
insl
hlt
pop
loop
sub
sti
cmp
adc
xchg
pop
push
ds
mov
fdivrl
loopne
pop
xor
inc
scas
jae
push
push
adc
movsb
fldcw
stc
xchg
mov
stc
out
jmp
push
and
add
jl
mov
and
dec
rcll
fsubs
test
stc
or
inc
jne
pop
jnp
xchg
xor
jno
mov
mov
xchg
int3
sbb
sahf
sub
cmp
sbb
jae
and
cmp
lock
cmp
imul
xlat
in
scas
es
sbb
mov
mov
loop
das
push
iret
adc
cld
popf
pop
adc
test
mov
in
dec
out
call
orb
push
inc
mov
clc
stos
mov
jne
test
testl
pop
mov
pop
mov
cld
lods
les
and
rolb
icebp
push
mov
xor
push
jle
jne
out
daa
cmp
fstpt
sarb
arpl
leave
cmp
addl
out
sti
outsl
cmc
cld
gs
imulb
and
mov
aad
jmp
xor
mov
imul
lds
push
cmpsl
addl
jmp
dec
mov
mov
cwtl
jmp
out
cmpsl
jg
pop
int
adc
pop
push
jnp
int
cmpb
subb
orl
testb
xor
stos
stos
or
int3
cmp
push
mov
loop
rorb
lock
sub
xchg
and
dec
test
push
lods
scas
movb
pop
ja
imul
ja
filds
cmp
daa
mov
in
cmpsl
cltd
jmp
dec
mov
jmp
push
hlt
pop
push
lods
popa
stos
cli
xchg
sub
sbb
in
std
lea
push
es
test
xor
js
or
mov
cmpsl
stos
lock
sarb
mov
lret
scas
fcmovnbe
mov
sbb
push
lcall
ja
inc
adc
sbb
lcall
add
and
fldl
fadds
push
test
sbb
test
cmpsl
dec
push
pushf
add
sbb
jl
out
scas
insl
push
inc
xchg
call
mov
cmp
adc
lock
adc
cmp
jo
mov
jb
mov
sti
xchg
aad
add
aas
push
js
movsl
test
aam
adc
fistl
jbe
xchg
fs
pop
bound
mov
jb
jle
mov
jb
test
or
xchg
fidivl
lea
push
mov
filds
sbb
adc
stos
inc
xchg
je
push
mov
mov
mov
test
out
sub
std
popf
pop
aam
repz
push
jecxz
nop
xorb
stos
mov
sub
jbe
or
pop
dec
push
sub
dec
pusha
pop
mov
leave
test
mov
jle
sbb
cld
or
push
das
mov
clc
pop
clc
jns
fldenv
sarl
jecxz
out
or
mov
and
cli
lea
pop
mov
or
dec
lods
nop
sub
sbb
dec
ljmp
je
leave
std
sub
push
leave
mov
test
popf
and
xchg
mov
mov
shrb
cmp
inc
mov
pop
push
iret
xlat
addl
lods
xor
pushf
test
shl
jbe
imul
sbb
mov
xchg
pushf
mov
dec
int
mov
je
aad
or
aas
outsb
popf
jnp
cmc
mov
ds
xlat
jmp
sub
jmp
sti
int3
cld
call
dec
cmc
ret
jg
pop
push
cs
arpl
sub
clc
fst
divb
adc
push
xchg
orps
rol
adc
and
jg
rorl
jge
or
pop
insb
mov
out
out
jl
icebp
and
into
sub
xchg
xchg
insb
sbb
add
dec
push
jb
fs
xchg
adc
xor
push
ds
hlt
aam
in
pop
aam
inc
movsl
lods
movsb
sti
test
or
test
fldt
jecxz
or
pop
mov
xchg
and
add
in
in
std
xchg
push
mov
fmulp
lods
fldl
data16
insl
imul
scas
adc
cwtl
push
pushf
das
push
mov
cwtl
cmp
out
aas
sub
or
dec
mov
and
sub
and
lahf
xor
pop
pop
bound
bound
clc
repz
jns
pop
mov
clc
test
dec
out
call
fcoml
ss
loop
pop
les
pop
insb
inc
sub
sub
push
mov
aam
and
je
push
movsl
out
pushf
out
mov
pop
das
scas
orb
sti
xchg
sbb
push
sub
out
outsl
daa
in
jle
sbb
and
dec
shlb
sub
imul
loopne
sub
and
mov
fs
or
adc
pop
xchg
xchg
dec
fnstsw
cwtl
push
ljmp
cmp
clc
std
shlb
pop
sbb
outsb
adc
or
test
std
jl
cli
push
mov
lods
or
popf
adc
add
jae
xor
push
lea
ret
inc
ss
gs
aas
mov
jb
aaa
mov
push
pop
mov
iret
insb
iret
shl
and
or
fwait
leave
inc
push
mov
shll
outsb
inc
xchg
mov
div
dec
stos
dec
popf
sbb
jb
adc
int
shll
xor
cld
mov
jno
in
mov
cmp
push
mov
hlt
xchg
or
mov
fists
sahf
cmp
push
sub
mov
sub
mov
lock
sti
mov
lock
andl
sub
bound
push
out
mov
ret
leave
popf
dec
lret
jno
push
rcll
bound
pop
test
dec
xor
pusha
loope
stc
bound
add
out
setle
out
jecxz
mov
inc
lret
mov
xchg
sbb
ljmp
cmpsl
pop
jne
cmpsl
pop
loope
jp
rcrb
push
test
mov
mov
xor
sbb
aaa
mov
xchg
lea
sbb
aad
call
push
add
icebp
orl
sub
out
lds
in
lods
add
or
out
or
xor
rclb
fldcw
aaa
ret
es
or
outsl
xchg
mov
push
and
subl
xor
scas
je
hlt
inc
xchg
mov
add
dec
xor
test
loopne
lods
mov
stos
stos
and
inc
outsl
xchg
xchg
sub
jbe
sbb
pop
xchg
popf
jne
push
lock
js
jmp
dec
push
push
insb
sub
or
pop
pop
mov
std
ds
cld
jo
sub
xor
popf
pop
lcall
lahf
dec
jge
notb
or
sub
jns
pavgw
repz
mov
sbb
and
jno
rcr
push
aam
inc
mov
shl
dec
sub
and
sahf
dec
inc
and
adc
imul
in
or
call
mov
frstor
jbe
daa
cmp
gs
les
clc
or
push
mov
mov
mov
push
rolb
inc
mov
aaa
jnp
mov
loop
shlb
push
add
scas
cmp
cmc
mov
lods
loop
aam
pop
push
int
dec
fcoms
push
jae
cmpsb
hlt
xchg
xlat
movsl
mov
push
icebp
pop
iret
pop
adc
pop
shlb
inc
rcrl
cmp
sar
jge
mov
sar
das
mov
push
xchg
mov
jo
fildl
lds
jge
pop
sbb
sub
ljmp
add
push
repz
inc
xchg
mov
clc
daa
mov
sti
cmp
dec
and
jmp
cltd
dec
inc
xchg
lsl
mov
into
cli
dec
or
popa
mov
out
cmpsl
imul
and
dec
mov
sub
jo
in
jae
xor
imulb
mov
or
test
mov
pop
mov
dec
lods
test
add
cltd
and
or
pop
add
hlt
sbb
insl
in
mov
pop
fs
mov
sbb
add
mov
push
mov
fimuls
into
jae
sub
inc
sbb
repz
fcmovu
xchg
ds
cli
adc
jp
mov
inc
aaa
pop
loope
or
dec
mov
pop
adc
stos
jb
and
xchg
mov
push
incl
sub
ds
jns
pop
stos
orl
push
sbb
xchg
ret
add
fsubl
jns
and
cli
and
push
pop
jle
pop
gs
data16
test
js
in
lret
adc
inc
jmp
sti
lahf
pushl
mov
mov
jle,pn
cmpl
inc
pop
cmp
mov
dec
mov
jns
aaa
pop
neg
mov
fsub
pop
jle
rolb
cmp
into
pop
stos
mov
and
mov
popf
in
xchg
frstor
inc
pop
cmp
or
test
pusha
std
sahf
ret
lods
test
jge
pop
sub
and
call
cmp
mov
xor
mov
mov
das
mov
jnp
pop
inc
stos
xor
rcrl
sbb
inc
fimull
in
mov
cld
mov
scas
xchg
mov
push
popf
sub
cmpsl
call
dec
dec
mov
movsb
pop
adc
js
ljmp
mov
ljmp
dec
mov
ljmp
imul
inc
pop
js
jns
in
lds
fnstenv
jne
aas
mov
pop
xor
dec
or
aaa
adcb
test
and
pop
js
cmpsl
js
daa
fwait
mov
jbe
and
jl
pushf
pop
jmp
cld
dec
adc
dec
adc
pop
sti
add
aas
dec
test
out
xchg
mov
fnstsw
adc
ja
imul
pop
lds
pop
jns
int3
adc
adc
mov
scas
mov
fmull
repz
sub
pop
xchg
and
add
js
loopne
xchg
scas
jl
insl
lahf
mov
mul
ljmp
divl
addb
sbb
xchg
aad
mulb
out
and
ret
sbb
gs
aas
mov
incl
adc
mov
je
inc
lock
mov
stc
sub
jb
insb
lcall
jg
push
inc
lret
cmp
fbld
lea
lods
jmp
test
nop
mov
lahf
bound
sub
loopne
aas
dec
xchg
xchg
dec
jno
test
dec
xchg
jle
push
outsb
jl
aas
pop
mov
test
outsb
data16
xchg
test
js
out
divl
xchg
push
in
jno
sbb
jmp
mov
xchg
mov
les
rol
mov
push
mov
scas
adc
pop
add
xor
into
inc
sbb
pop
ficoms
mov
sub
or
test
shr
in
mov
js
mov
jp
fcoml
rolb
aam
inc
and
dec
mov
mov
clc
popa
jne
inc
xor
adc
xor
push
pop
jno
cmc
mov
ljmp
flds
shll
in
dec
nop
pop
in
repnz
movsl
sbb
arpl
jne
ficoml
or
dec
jne
sub
sbb
rcr
inc
rclb
jle
call
jbe
inc
sbb
mov
lods
pop
fisttps
jno
into
add
lea
jge
push
push
xor
cmpsb
das
aaa
dec
dec
xchg
pop
jmp
mov
test
mov
and
aad
mov
stos
pop
call
cld
icebp
test
mov
popa
lods
mov
xchg
jb
dec
dec
jb
or
adc
mov
ljmp
or
cmp
sbb
stos
inc
lock
pop
icebp
cld
push
in
or
jb
stc
or
addr16
dec
mov
mulb
mov
aam
test
adc
push
hlt
mov
test
sub
cmp
jp
and
in
jmp
shlb
mov
pop
xlat
movsb
insb
xor
repz
dec
cmc
sub
notb
out
mov
andl
js
stos
xchg
enter
outsb
cld
adc
fdivrl
fldl
push
int
pop
ja
mov
insl
cmp
pop
dec
push
movsl
pop
dec
push
mov
xor
fwait
push
popf
sub
dec
adc
repz
adc
sbb
stos
jae
push
mov
lods
push
scas
push
pop
shrb
xchg
cmpsb
dec
iret
arpl
mov
inc
stos
loop
stos
inc
rclb
push
xchg
pop
ret
int3
mov
cmp
push
sbb
jno
sbb
push
cmpsl
std
dec
in
aas
aad
aad
pop
int3
pop
sub
jle
xlat
pop
xchg
mov
in
adc
push
popa
mov
sub
xchg
in
insb
mov
out
jl
dec
adc
pop
loop
cmp
push
xchg
aam
fsts
mov
testb
addl
aam
std
dec
inc
test
push
stos
rclb
sarb
repnz
push
fstl
xchg
fsubrs
fstpt
lcall
sub
xchg
clc
dec
add
add
or
out
mov
xchg
adcl
arpl
cmp
push
addr16
mov
add
aaa
stos
mov
cmp
stos
mov
stos
lods
loop
fimull
popf
daa
mov
fwait
dec
cmpsb
sti
jle
in
addr16
nop
adc
rorb
add
adc
out
mov
outsb
movsb
adc
ret
pusha
fisttpll
data16
xchg
xchg
pop
push
mov
xor
int
pop
sbb
fs
fwait
aas
dec
and
rcrl
in
fadd
lahf
lret
adc
adcb
mov
or
mov
loopne
mov
jle
jbe
insb
stc
pop
shll
scas
add
rorb
inc
mov
push
sub
mov
in
aas
mov
adc
sub
mov
adc
stc
hlt
out
dec
jl
cmp
mov
pop
repnz
mov
outsl
cmpsb
xchg
dec
orb
xor
mov
pusha
movsl
mov
push
mov
mov
sub
adc
push
dec
xor
int3
push
inc
insl
shrl
xorb
rol
dec
lret
mov
adc
in
inc
lds
push
outsb
and
bound
mov
cltd
sbb
test
mov
add
jl
test
insl
mov
jmp
in
dec
push
jmp
lret
sti
jmp
imul
fs
inc
sub
xchg
out
or
jne
add
repnz
mov
inc
push
mov
bound
adc
int
popa
lock
shrl
pop
add
sub
bswap
jo
rorl
or
popa
shrb
push
sub
out
push
mov
pop
xor
inc
rcr
jge
push
rorl
pop
movsl
pop
jmp
xchg
push
mov
sti
into
mov
imul
aas
dec
pop
push
push
insb
cmpsl
xor
loopne
lret
jge
mov
insl
fnstenv
pop
xchg
lods
in
mov
jecxz
int3
cmp
mov
inc
ror
jp
aas
rcll
pop
mov
push
add
pushf
and
fistl
xor
stos
lods
mov
fdivs
mov
out
repz
jecxz
daa
mov
cmc
les
xor
and
fld
mov
idivb
mov
mov
popa
rclb
cwtl
dec
jmp
push
cld
shl
addr16
das
adc
loope
out
pusha
mov
push
loop
xchg
mov
sbb
jle
jbe
push
mov
cltd
xchg
push
in
inc
pop
into
divb
stos
or
push
mov
fidivrs
aas
inc
xlat
add
dec
mov
jmp
repnz
insl
jmp
daa
sub
negl
cmp
clc
inc
cmp
xlat
push
int3
push
mov
push
ret
pusha
xlat
mov
pop
out
jnp
dec
pop
mov
daa
sbb
fs
hlt
js
dec
mov
inc
mov
scas
ljmp
pop
dec
dec
in
subb
pop
ucomiss
mov
pop
inc
push
stc
mulb
mov
jnp
sarb
xchg
lret
jbe
out
mov
insl
mov
int
mov
mov
inc
mov
ja
call
mov
inc
lea
xchg
cmp
cli
pop
js
icebp
adc
dec
fdivr
loopne
mov
push
mov
mov
movsl
mov
loope
aad
push
out
sub
adcl
repnz
sub
dec
adc
inc
sbb
repnz
divb
jmp
iret
mov
jmp
popa
addr16
jle
push
fnstsw
inc
cli
es
inc
xchg
sub
int3
test
push
dec
pop
add
rcl
mov
mov
mov
jmp
pushl
ret
imul
ret
bound
lds
mov
jno
stos
pop
mov
fistps
jge
cmp
arpl
jle
push
mov
xor
jp
test
aas
icebp
sti
stc
inc
adc
adc
mov
push
js
insw
scas
dec
sbb
repz
loope
repz
mov
mov
aad
mov
jp
arpl
adcl
sub
dec
xchg
mov
fwait
icebp
ret
into
adc
or
jge
fists
ss
loop
imul
inc
xchg
into
add
in
xchg
stos
mov
inc
jbe
dec
jae
lahf
sarl
in
jo
jl
mov
xchg
push
gs
xchg
xchg
pop
es
insl
jnp
jno
imul
test
lods
imul
lcall
fldl
sahf
aas
jb
xlat
inc
negb
andl
inc
dec
icebp
pop
xor
inc
mov
jb
pop
or
dec
int3
scas
lea
push
daa
xor
js
je
jg
mov
bound
orl
adc
orb
repnz
and
shl
add
cmpsb
cmp
ror
fwait
dec
es
inc
mov
sbb
lock
orb
xchg
sbb
or
rcrl
sub
sbb
movsl
or
testl
out
popl
jne
jnp
xchg
inc
xchg
fisttps
shlb
mov
outsl
dec
icebp
enter
out
dec
inc
clc
xchg
sub
mov
dec
jo
jle
es
mov
data16
jb
in
nop
loopne
and
sahf
sbb
dec
push
push
sub
aam
or
cwtl
push
xchg
pop
and
icebp
das
pop
xor
fsubrl
cmpsb
mov
jg
jecxz
repz
dec
xchg
gs
loope
jp
xor
cmp
enter
jb
mov
ret
adc
fnstenv
mov
inc
popl
mov
xor
into
mov
or
repnz
or
cmc
add
dec
stos
pop
cmpl
pop
or
inc
dec
das
sub
and
loop
imul
fisubrl
in
dec
cmpsl
aad
filds
sub
test
sarl
out
rorb
push
sbb
je
cmp
xchg
mov
push
lret
pop
mov
js
jl
jbe
sbb
jne
add
jp
xor
sub
push
jmp
xchg
jo
das
pusha
xor
mov
ret
cmc
ret
cltd
int
xor
fld
adc
mov
cmpsb
fisttpl
das
lods
pusha
jecxz
das
sub
inc
lcall
mov
and
sbbl
xorb
shll
fisubrl
sbb
lea
lods
leave
stc
and
icebp
jg
adc
mov
cwtl
call
jg
jns
arpl
std
lcall
adc
sti
inc
push
sti
insb
in
jg
jp
dec
fistl
inc
inc
mov
push
jno
cwtl
mov
cmc
mov
cmc
icebp
mov
xor
into
inc
int
stos
scas
fsubs
add
fildl
cli
pop
xchg
flds
addr16
divl
jns
std
or
adc
push
cs
add
sbb
push
sub
pop
xorb
cmpsb
push
mov
fwait
stos
push
inc
testl
jle
jne
popf
lea
test
xor
out
inc
jge
cmpsl
in
imull
into
jnp
pop
loope
mov
mov
xor
jp
lea
subb
hlt
push
ss
mov
or
sub
pop
loope
shl
xchg
sub
mov
data16
or
scas
and
clc
movsl
add
subb
xchg
mov
pop
incl
mov
fmuls
js
lea
cmp
inc
pop
out
mov
mov
push
push
shrl
sbb
shl
inc
mov
ljmp
icebp
cwtl
cmp
cmp
sbb
adc
sbb
inc
xchg
cmp
jp
pop
popf
add
jno
nop
mov
inc
mov
cltd
cld
outsl
mov
jo
inc
out
jp
lods
fs
inc
es
je
call
mov
jle
xchg
adc
cs
icebp
lods
mov
outsb
ss
test
sub
push
aaa
add
out
xor
rcl
cld
ret
outsb
arpl
je
push
mov
movsb
fcompl
mov
push
mov
ret
shlb
jp
mov
push
jge
inc
pop
sbb
inc
lods
jge
pop
sub
cwtl
cwtl
cmpsl
lea
mov
xchg
or
mov
shlb
push
dec
je
pop
test
mov
lds
pop
dec
mov
dec
adc
mov
and
or
rorl
mov
lss
inc
in
jno
in
subps
imul
xchg
sbb
mov
and
push
lcall
hlt
push
cltd
push
xchg
enter
rcll
shl
test
repnz
jge
popf
lahf
and
andl
gs
scas
push
cmp
pop
into
push
xchg
xchg
adc
sbb
mov
rep
lds
testl
or
scas
mov
xchg
push
dec
mov
repz
fildl
jge
jmp
dec
cltd
mov
xchg
pushf
loopne
pop
subl
and
mov
pop
scas
xchg
sub
inc
scas
cmp
sub
movsl
adc
out
bound
repnz
rolb
mov
inc
jge
fdivs
cmp
mov
dec
leave
dec
outsl
push
jns
mov
movsl
loop
push
fadds
nop
xchg
cwtl
repnz
or
push
xchg
sbbl
mov
push
inc
mov
imul
sbb
test
mov
out
das
test
rcrl
iret
ret
xor
and
ret
shll
push
push
mov
nop
insb
icebp
rcrb
ljmp
sahf
fsub
xchg
int
mov
jbe
cmpsb
pusha
xor
addr16
in
adc
cmpsl
xchg
hlt
iret
lret
cmp
bnd
adc
fnsave
stos
mull
outsl
int3
sahf
fdivs
ljmp
xchg
out
xchg
lret
insb
inc
ret
stos
lock
das
inc
pop
icebp
psllq
jb
adc
lds
cld
or
mov
ret
sbb
in
aad
in
jge
cli
movsb
imul
test
jl
and
jo
and
pop
mov
stos
mov
mov
out
idivl
jns
mov
push
stc
ss
jbe
mov
mov
ja
jbe
lods
mov
pop
sbb
je
jae
mov
inc
jne
push
mov
pop
xchg
cwtl
sarb
iret
std
test
xchg
imul
int3
sbb
push
scas
das
lcall
hlt
mov
dec
mov
mov
dec
or
cmpsb
and
mov
mov
cmpl
xchg
push
inc
loopne
test
jle
jb
mov
int3
clc
push
xor
sub
xchg
movsb
pop
inc
sbb
adc
push
pop
xor
aad
ja
scas
push
cmovbe
inc
cmc
out
pusha
cmc
jo
push
and
jns
leave
dec
sbb
xlat
jne
stos
les
mov
out
ss
push
popf
jp
xchg
dec
pop
sahf
or
test
xor
dec
inc
xchg
mov
cli
jmp
fs
xor
jo
pushf
stos
sbb
inc
push
int3
jbe
jnp
mov
int3
mov
into
jecxz
inc
ss
arpl
std
dec
mov
cmp
mov
dec
jne
or
cmpsl
cmp
aad
adc
push
aas
out
es
adc
sub
dec
stos
mov
xor
enter
push
xor
xchg
outsl
sbb
sti
aas
xchg
mov
xor
push
add
sub
lahf
pop
inc
pop
cmp
lcall
fmull
mov
jmp
call
xchg
notl
and
clc
ret
xchg
faddl
or
cmc
jbe
jge
pop
outsl
ret
test
std
mov
and
add
mov
scas
movsb
xor
pop
sbb
mov
loop
xchg
call
mov
inc
mov
dec
loopne
mov
test
inc
int3
sbb
sbb
mov
xchg
out
or
pop
fs
out
popa
adc
popf
pop
mov
cld
pushl
data16
sub
imul
sbb
lds
mov
xchg
mov
lds
out
push
add
jg
jmp
xchg
lret
jb
mov
inc
xchg
xchg
mov
xchg
sub
test
test
lea
sbb
or
xchg
mov
leave
push
jnp
pop
sub
or
icebp
cmpsl
add
add
clc
mov
loopne
cmp
xchg
lcall
aas
mov
push
push
pop
jecxz
arpl
and
addr16
inc
inc
fst
enter
notb
iret
aas
lds
ret
mov
jne
mov
mov
push
mov
pop
pop
jnp
fs
rorl
xor
mov
int3
ss
iret
inc
xor
aam
jl
fsubr
lahf
lea
jp
fs
loop
insl
pop
lea
fidivrl
pop
jb
icebp
inc
jnp
xchg
xchg
sbb
xchg
test
mov
xlat
out
repz
mov
fucomip
sbb
push
xchg
int3
cmc
pushl
movsb
mov
in
xchg
pop
cld
in
loope
cmpsl
jno
rcrl
mov
lock
leave
inc
cli
aad
aas
clc
das
leave
xchg
or
fsubrs
mov
pop
pop
in
test
xor
mov
outsl
cltd
sarb
pop
fldcw
cltd
push
sahf
movb
xchg
xchg
xor
and
ss
pop
push
lea
jle
test
ret
mov
xchg
sbb
lods
mov
addr16
sbb
pop
cmp
imul
xchg
push
sbb
std
jnp
pop
jns
mov
fcompl
outsl
dec
adc
into
push
shlb
mov
incb
sub
lcall
jb
in
push
loop
jecxz
and
stos
push
xor
sbb
mov
out
xchg
add
aas
fldenv
sahf
stos
xchg
and
mov
push
loop
push
or
xchg
enter
insb
leave
sub
push
mov
daa
push
das
ss
mov
out
sub
push
test
out
sahf
cmp
jae
xor
loopne
mov
dec
inc
fcmove
das
adc
or
popa
pop
xchg
push
pop
push
pop
andb
pop
jg
clc
lock
adc
jge
je
sahf
adc
int
adc
fiadds
sahf
adcb
sbb
in
mov
cmpsl
popa
clc
out
jecxz
adc
repz
std
lock
push
inc
jp
out
pop
fidivrs
icebp
cmp
or
inc
mov
and
xchg
sub
imul
xor
call
ret
mov
jmp
js
test
xchg
hlt
mov
mov
push
inc
lret
aad
xchg
test
test
or
jmp
pop
scas
enter
call
jae
pushf
xor
insl
test
push
pop
inc
cld
into
inc
push
test
pusha
and
mov
cmp
clc
xor
mov
in
jp
jg
xor
dec
pop
insb
mov
out
push
xlat
xor
iret
stc
test
adc
fildl
mov
jno
addr16
mov
push
dec
out
xlat
xor
lds
cli
sbb
adc
sub
out
outsl
shrl
negl
pop
cmp
mov
and
dec
jb
add
xor
ret
mov
mov
xchg
jns
sarb
aad
lds
rcll
jo
jle
push
int
mov
int
test
ret
fsubrl
add
imul
push
outsl
jns
add
mov
sahf
mov
enter
fldl
sub
add
jmp
cmp
insb
add
dec
jg
cmp
pop
pushf
shrl
std
mov
pop
xor
out
js
data16
gs
lret
roll
out
sbb
adc
lds
fbld
add
mov
mov
leave
pop
pushf
roll
mov
jle
leave
xor
addr16
inc
mov
mov
jo
fldcw
test
dec
mov
repnz
push
push
push
movsb
cwtl
cs
jbe
dec
pop
sub
sub
xchg
cmp
adc
adc
in
xor
lcall
fbstp
lret
fdivrl
xchg
outsb
pop
push
insb
ret
loopne
or
and
mov
jnp
mov
mov
sub
jo
dec
pop
sbb
in
pop
mov
lret
inc
mov
mov
jne
dec
sarl
test
xor
lcall
sbb
inc
xchg
or
fld
mov
pop
pmullw
xor
pop
jp
shrb
in
mov
push
inc
add
xchg
mov
adcb
imul
in
mov
adc
loopne
push
stc
into
add
mov
sar
inc
cmp
stc
inc
mov
pop
loopne
arpl
add
adc
rorl
mov
dec
aas
cld
jns
pop
pop
dec
daa
and
lods
add
leave
inc
fwait
sbb
in
xor
sti
mov
inc
cwtl
test
jmp
cmc
pop
arpl
adc
lcall
mov
push
lahf
xor
iret
adc
in
push
aaa
and
push
insb
dec
push
jge
test
sbb
es
pop
push
js
sar
fists
add
jg
jecxz
jb
cmp
jl
jb
push
jns
pop
mov
inc
clc
mov
mov
xchg
adc
das
mov
in
xchg
mov
scas
mov
push
push
js
sbb
movb
mov
mov
fsubs
sahf
jmp
push
cwtl
mov
cli
xchg
cmp
pop
lods
mov
mov
push
jne
in
inc
outsb
mov
or
ds
int
pop
cmpsl
mov
jle
int
mov
xor
fmulp
add
jge
jge
dec
xor
jo
sti
jecxz
pushf
in
jae
fmull
outsl
adc
cmp
subl
andl
sti
imul
mov
loopne
fisttpl
stc
xchg
stc
pop
and
pop
push
es
lds
clc
orl
mov
push
lods
dec
hlt
cmp
pop
jge
xor
pop
dec
adc
fwait
arpl
cmpsb
inc
xchg
jmp
and
jmp
mov
fistpl
aas
mov
cmp
dec
out
mov
addr16
flds
in
xchg
push
in
call
mov
mov
xor
sub
sbb
mov
repnz
cmp
loopne
and
pop
push
lea
sbb
pop
jnp
sbb
lahf
clc
mov
push
pushl
or
out
and
xchg
pusha
add
stos
enter
or
adc
jg
idivl
mov
or
sbb
mov
popf
xor
dec
popa
xlat
cmc
push
addr16
and
pop
mov
stc
andl
mov
dec
or
cmpsw
push
jle
fidivrl
lahf
cs
mov
push
mov
ljmp
sahf
xchg
outsb
in
inc
int
mov
ds
push
inc
ret
ja
es
push
cmpsl
sub
mov
lea
sti
push
or
repnz
clc
gs
inc
sub
mov
imul
cmp
into
jp
cs
pop
dec
cmp
xchg
fisubrl
out
add
insl
jg
out
adc
xchg
inc
lods
fldt
cmpsl
pop
std
jecxz
push
fs
pop
into
pop
popf
lock
outsb
sbb
test
pop
test
lret
rcrl
adc
push
adc
pop
out
xor
push
mov
outsl
lret
add
imul
outsb
jmp
cmp
adc
xchg
inc
mov
lods
fwait
cmpsl
inc
mov
cmp
mov
mov
das
mov
fisubs
pop
or
inc
jmp
jne
ds
or
rol
fistl
aam
test
popa
shlb
lods
mov
jo
pop
popf
jp
push
pop
mov
inc
inc
adc
pop
or
fdivr
in
data16
mov
inc
pop
push
push
imul
andb
adc
jb
sub
mov
mov
test
call
jge
pushf
imul
cmc
sub
das
cs
jg
mov
or
inc
aas
jbe
mov
xchg
adcl
push
rcrl
adc
pop
roll
and
mov
fldt
mov
push
insb
stos
lea
jle
sarl
lock
das
lock
inc
xor
mov
jle
lcall
cs
add
cs
shlb
ljmp
movsb
xchg
jns
jbe
fs
movsb
mov
push
inc
scas
pusha
daa
aaa
cld
push
adc
xor
jnp
pop
push
jne
xchg
pop
sbb
fmuls
popa
in
bound
push
test
stos
add
mov
mov
push
stos
xchg
mov
enter
shrd
pop
data16
lea
push
ret
in
adc
in
aaa
mov
dec
rorl
inc
aad
loope
aam
shrl
add
jne
hlt
xchg
jge
cltd
fwait
dec
pop
es
outsl
test
das
insl
lahf
js
stos
jo
xchg
std
insl
imul
mov
pop
shll
ljmp
inc
xchg
jl
cmp
in
adc
sub
repnz
loope
xchg
dec
jo
cmp
sub
or
mov
mov
andl
cltd
hlt
add
std
pushf
and
sub
add
sbb
xchg
popa
add
jmp
xor
out
pop
dec
cmpsb
fstps
push
lods
dec
mov
pop
movsb
jne
iret
lahf
cld
push
fcomps
pop
jnp
stc
xchg
stos
test
int3
xchg
mov
scas
ficoml
mov
clc
adc
lea
test
pushf
jo
pop
int
jnp
fnstcw
adc
or
jle
push
lock
sub
fmuls
xchg
mov
aas
dec
subl
mov
mov
lahf
movsl
negl
xchg
and
int3
aaa
mov
inc
gs
and
aas
mov
push
dec
lret
bound
push
test
or
test
inc
insb
xchg
xor
pop
mov
jbe
leave
mov
dec
xlat
cwtl
pop
test
fisubrs
pop
lret
xor
sbb
adc
shrl
xchg
push
inc
les
cmp
fs
cmp
push
adc
mov
mov
fs
loop
jg
inc
inc
jns
sub
mov
or
xorb
jnp
imul
dec
xchg
sbb
cltd
int
popa
inc
popf
pop
adc
repz
out
lcall
pop
sbb
sub
jl
pop
jno
test
fisubl
dec
dec
aas
xchg
mov
lahf
sub
push
cli
inc
adc
insb
cmp
dec
les
jle
loopne
mov
ja
lods
xchg
rcll
dec
jmp
jmp
dec
sti
aaa
ja
sbb
mov
xchg
es
pushf
dec
adc
xchg
shrb
popa
out
and
add
mov
and
pop
push
xchg
std
popa
xchg
xor
adc
jmp
sarl
dec
inc
and
leave
adc
adc
cld
orb
xchg
lcall
in
std
inc
dec
xchg
shlb
shll
les
adc
cmpsl
testb
lahf
outsb
les
pop
enter
stc
fwait
xorb
adc
imul
push
cmp
fs
lcall
mov
lcall
lods
mov
mov
sub
jp,pn
loop
outsl
jl
fcoml
or
mov
jmp
movb
lcall
mov
lcall
add
mov
mov
sub
cmp
pop
jbe
jl
fwait
sbb
int3
rorl
push
ficomps
xor
jae
jg
fsqrt
cmpsl
mov
clc
inc
and
sbb
fwait
test
negb
das
jp
pop
cs
lods
jecxz
push
ljmp
cmpsb
mov
mov
fadds
jns
jae
pushf
cli
xchg
or
call
pop
mov
jbe
shlb
insl
leave
push
ds
mov
repnz
rolb
inc
sti
xor
lock
sub
repnz
pushl
test
pop
jl
mov
dec
push
pop
fcmovu
in
and
sub
pop
and
dec
data16
arpl
fists
bound
inc
in
xchg
lcall
mov
stos
in
stos
and
and
pop
fildl
das
cltd
push
mov
imul
sub
testl
test
mov
mov
add
cli
loopne
xchg
lret
pusha
adc
inc
out
incl
dec
xchg
lret
in
adc
mov
pop
push
adc
fcomip
inc
mov
and
aam
dec
inc
imul
xchg
pop
mov
stos
mov
push
add
push
jo
rorb
xchg
push
lds
dec
mov
pop
iret
test
dec
loopne
das
mov
divb
test
imul
jg
inc
mov
addr16
out
aas
hlt
mov
insb
cwtl
jae
popf
jl
bound
out
roll
pop
dec
xor
lcall
ds
imul
lods
movsb
out
xor
mov
jle
adc
sbb
mov
dec
out
mull
idivl
sub
pop
pop
xchg
dec
mov
inc
jbe
std
lods
aad
sbbl
fwait
pslld
inc
rclb
pop
mov
mov
imul
xchg
pop
inc
shrb
btc
fmuls
mov
cmpsl
test
in
pop
xchg
sahf
subl
adc
push
jae
pop
or
popf
mov
popf
jae
jle
or
jo
in
aam
lods
leave
inc
mov
stos
shrl
pop
cmc
add
loopne
sub
jge
adc
data16
out
sarl
gs
sti
fwait
stos
inc
sbb
mov
or
push
mov
pop
fsubl
sub
imulb
scas
mov
lds
out
or
jo
xchg
mov
hlt
icebp
mov
cmpsl
jge
ret
inc
icebp
testl
xor
sub
xor
nop
fbld
rolb
xchg
push
lahf
add
or
jnp
jae
clc
movsl
jp
jmp
jbe
cmp
adcl
cld
push
jns
pop
adc
lret
ret
jo
and
pop
repz
in
je
aam
loope
rcr
push
repz
scas
enter
jbe
xchg
pusha
out
dec
inc
enter
jns
mov
pop
cmpl
or
fwait
rorl
pop
xchg
cmp
dec
dec
lahf
dec
movsl
ds
ret
push
jns
cmp
idivb
hlt
cmc
pusha
inc
pop
cmp
push
mov
movsb
sbb
mov
xchg
push
push
xchg
xchg
call
xor
repz
add
sub
cmp
adc
add
xchg
xchg
cmovl
xlat
stos
adc
or
stos
mov
imul
cmc
sbb
scas
dec
dec
xchg
xor
sbbl
mov
scas
gs
lret
stos
inc
lahf
insl
push
sub
ljmp
add
mov
mull
clc
add
data16
mov
in
fbld
push
dec
loop
bound
inc
mov
cwtl
pop
adc
fistpll
xchg
enter
jb
push
sbb
push
les
push
shl
out
inc
int3
mov
or
iret
hlt
out
pop
fsubrp
loopne
inc
test
sti
stos
int
hlt
mov
std
mov
sub
xchg
pop
shll
dec
adc
int
lds
stos
jge
dec
lock
xor
into
movsb
jecxz
pusha
loop
movsl
mov
dec
fs
xchg
xchg
mov
dec
or
jg
lahf
or
xor
push
mov
inc
dec
negl
outsb
push
mov
dec
int3
aad
ljmp
jle
cmp
cmp
inc
pop
add
cmp
outsl
stc
or
loopne
stos
pushf
adc
jno
xchg
adc
adc
mov
pop
fsubs
add
daa
subb
mov
insb
out
outsb
sbb
xor
mov
sbb
cmp
mov
inc
push
xchg
mov
xchg
stos
outsb
fdivrl
dec
push
icebp
sub
sbb
in
sti
aaa
add
psubw
and
sbb
and
leave
pmaxsw
push
xchg
fcmove
and
es
push
mov
xorb
dec
dec
cli
nop
ljmp
jbe
outsl
test
or
std
push
jae
pushf
out
xchg
jl
test
das
sbb
andnps
mov
xchg
xchg
jg
testb
in
adc
mov
dec
mov
mov
dec
rol
shl
divb
ja
mov
jnp
out
out
push
daa
movsl
mov
fdivl
add
addr16
fstpt
idiv
lret
inc
mov
mov
lods
sbb
mov
jmp
xlat
mov
dec
mov
out
xchg
popf
xor
xchg
in
inc
xor
adc
aam
andb
lcall
mov
pop
jmp
mov
mov
xor
and
push
test
insb
sti
pop
jmp
cmp
xlat
je
jns
jecxz
inc
pop
and
insb
repz
jae
in
movsl
or
cmpsb
xchg
xor
sbb
fisttpl
outsb
iret
xchg
lock
adc
pop
inc
xchg
inc
leave
adc
xor
orl
scas
lret
xor
outsl
hlt
js
lcall
mov
call
stc
push
insl
aam
dec
into
sbb
jp
mov
pop
jb
notl
jmp
xlat
jbe
mov
add
in
mov
stc
pop
imul
jmp
xchg
xor
ljmp
mov
jne
dec
ja
pusha
fstl
sub
aas
pop
jge
mov
push
adc
and
push
jle
xorl
sbb
lret
icebp
push
push
push
repnz
and
sbb
stos
xchg
fld
xchg
ficoml
in
mov
pop
outsl
inc
loope
ss
pop
das
je
fstl
fisubrs
repz
in
or
jg
scas
cwtl
pop
pop
xlat
fsubl
mov
xor
inc
xchg
pop
cmp
pop
inc
movsl
mov
jbe
cmp
push
push
mov
test
xor
cmc
hlt
loop
or
xchg
popa
jle
out
or
fsubr
dec
sub
std
push
adc
mov
jne
aam
mov
int
mov
sahf
pop
rcrl
dec
jg
std
cmp
jnp
fildl
mov
cmp
jle
mov
lock
fsubr
test
jmp
dec
sub
or
fiaddl
cmp
adc
popa
mov
push
aad
lock
or
jp
sub
lret
sbb
nop
pusha
sub
push
mov
hlt
lahf
pop
mov
out
mov
adc
mov
clc
in
adc
jno
push
aad
movsl
rclb
jo
xor
xchg
ljmp
loopne
popa
stos
ja
aad
in
pop
inc
sub
leave
ds
stos
cmpb
mov
fstpl
xor
les
push
dec
sub
mov
mov
mov
lret
lcall
sbb
jg
sbb
aaa
out
jge
loope
mov
in
into
in
std
out
lods
add
lods
inc
ret
fs
jnp
push
sub
js,pt
sbb
data16
popa
into
stc
pop
sub
ja
sbb
aas
addr16
adc
std
loope
add
dec
sub
es
sub
pop
int
out
push
dec
out
lea
stos
lret
or
subb
lds
orl
or
test
push
xchg
cld
insb
insl
mov
mov
lds
mov
in
lret
ret
in
inc
lods
loop
mov
in
push
xor
repz
mov
sbb
cmpsb
fimull
arpl
sub
push
js
rol
daa
das
inc
push
sarb
out
cli
cwtl
xchg
scas
push
jne
loop
xor
fidivs
insl
push
icebp
pop
xchg
pop
outsl
push
sbb
aam
cli
mov
aas
in
or
mov
mov
and
pusha
ret
sarb
aas
jbe
mov
cwtl
push
pop
mov
xor
inc
push
mov
js
les
inc
mov
enter
sahf
pop
add
cmp
int3
jge
pop
sub
adc
ret
jg
push
dec
insb
lahf
add
lret
loope
clc
add
push
cmp
js
adc
mov
mov
or
pop
adc
add
jae
xlat
jbe
fnstcw
popa
out
cmp
incl
jge
adcl
jp
pop
in
and
add
lods
ljmp
mov
push
pop
cmp
aad
in
aas
movsb
push
and
mov
mov
jl
rorl
mov
loopne
enter
xor
sbb
dec
mov
add
pop
mov
or
loop
out
movsb
mov
hlt
jmp
mov
mov
fcmovne
mov
outsl
sbb
mov
aas
je
out
loop
cmc
pop
sti
int
sub
push
roll
jg
push
mov
ret
jle
les
test
jl
mov
daa
xlat
push
cld
into
pop
fs
cmc
sbb
inc
xchg
in
imul
int3
dec
sti
inc
push
pop
shll
jae
and
sub
inc
inc
fisttpl
push
jae
mov
popf
es
push
dec
in
mov
push
jo
push
sbb
pop
movsl
or
mov
jnp
xchg
sub
into
sbb
aam
pop
and
outsl
pop
xor
pop
into
mov
loope
jns
sbb
aas
xor
mov
jo
push
mov
pop
sub
xchg
push
ficoml
or
cmp
mov
popa
jbe
popf
push
cmp
push
lea
jg
fdivr
stos
std
ja
loop
adc
lods
fdivr
push
push
mov
pop
mov
push
loope
fbld
nop
push
jns
cmp
sub
sbb
insb
lret
mov
cs
jnp
mov
pop
jae
pop
mov
mov
jle
dec
test
scas
fwait
jle
mov
xor
jno
mov
mov
push
rcl
and
ficoml
mov
mov
arpl
ljmp
cs
sbb
je
cs
mov
shlb
push
and
lods
cwtl
push
push
js
pop
shll
pop
xchg
cmp
out
mov
mov
push
scas
jbe
jae
xchg
imulb
mov
data16
repz
xor
adc
idiv
mov
stos
sbb
hlt
aad
adc
popa
and
or
xchg
stos
sbb
mov
and
test
push
imul
test
dec
orb
test
sbb
movsl
scas
push
push
jmp
inc
xor
stc
je
mov
fs
sbb
mov
cmp
xor
addr16
push
aaa
inc
out
fisubrl
jne
and
sub
and
sub
shl
adc
stos
inc
and
test
test
lds
scas
je
outsb
ljmp
mov
stc
xchg
orb
sbb
dec
fiadds
dec
adc
mov
cmc
dec
xchg
sub
movsl
mov
dec
xchg
mov
icebp
fstp
in
fmull
push
adc
lea
and
push
adc
pop
jge
addr16
mov
mov
ss
adc
stos
jecxz
in
sbb
push
xlat
jbe
aaa
fisubrl
outsl
repz
sbb
inc
ret
mov
dec
das
fwait
xchg
pushf
scas
bnd
dec
cmpsb
repnz
inc
adc
sub
jmp
cmp
repz
repnz
hlt
rolb
stc
test
sub
pop
fiaddl
xorb
jge
xchg
or
mov
das
shll
pop
mov
es
mov
imul
hlt
mov
ret
cmpsb
mov
push
cmp
sbb
popf
rol
pop
stc
ss
ljmp
or
pop
iret
pop
neg
js
mov
test
fs
jbe
stos
mov
pop
sbbb
sub
xchg
and
jno
loop
and
jmp
push
imul
and
jbe
jns
das
flds
mov
xchg
cltd
fsubrl
mov
cli
je
cli
dec
test
je
dec
pusha
jl
sub
lahf
push
aaa
add
lahf
mov
popa
mov
fs
call
aaa
jl
pop
shlb
iret
sbb
push
mov
sub
mov
mov
jg
pop
aaa
jno
mov
xor
push
mov
cmp
mov
fs
rorl
ljmp
pusha
outsl
mov
fdivrs
jnp
repnz
add
clc
cmp
ja
or
outsl
xor
cmp
xlat
bound
das
inc
test
stos
mov
popf
aam
lea
popf
loopne
inc
sbb
or
mov
xlat
pop
cmc
push
in
movsl
ss
pop
mov
test
xor
mov
cmpsb
loopne
test
ret
shll
jl
jns
mov
in
add
test
jbe
imull
clc
jl
out
mov
out
cmc
jae
xchg
pop
adc
stos
jmp
adc
ror
arpl
mov
cld
mov
sbb
scas
jb
push
mov
jne
mov
popf
call
dec
mov
test
std
in
xchg
push
push
mov
cs
lods
aam
ljmp
push
mov
pop
inc
popf
push
ljmp
movswl
xchg
adc
aad
adcl
std
data16
ret
outsl
ret
mov
outsb
aam
inc
or
mov
mov
pusha
lock
ja
stos
dec
mov
lahf
sti
add
dec
cmp
into
in
xchg
push
xchg
push
sub
ja
adc
sbb
xlat
jl
inc
cmp
or
cli
test
mov
pop
push
out
cld
cmovae
dec
adc
daa
xchg
xchg
or
jae,pn
out
jae
je
ja
arpl
xor
mov
call
jns
mov
push
mov
pop
ds
xchg
push
push
clc
push
clc
imul
jge
es
stos
jo
cmpb
cld
stos
mov
xchg
lock
inc
cli
xor
xchg
aad
cmp
out
adc
mov
mov
inc
testl
push
mov
inc
addb
test
fistl
std
push
jne
and
in
iret
in
rorl
dec
mov
addr16
addr16
lods
das
leave
pop
gs
add
popa
and
jne
imul
dec
xchg
cld
push
rcr
loope
sub
adc
xor
scas
arpl
adc
cmc
pop
imul
ljmp
inc
push
push
lods
neg
scas
fidivrl
aam
lcall
mov
sub
mov
out
fsts
aad
pushl
outsl
jp
xchg
andl
jl
mov
or
xchg
enter
pop
negl
mov
test
push
enter
bound
and
fcom
jo
sbb
push
test
int
ja
sub
ret
es
push
dec
inc
jmp
outsl
aaa
pop
lds
pop
mov
pusha
mov
xor
xor
sahf
js
sbb
jmp
jg
lcall
dec
loopnew
sbb
xchg
mov
andb
mov
mov
in
cs
insb
push
push
xchg
jle
push
into
test
test
adc
das
into
stos
sbb
push
cmp
scas
jecxz
dec
in
cmp
out
cmc
or
add
jnp
rclb
ficompl
stos
lock
repnz
cmp
test
ror
push
push
ja
shlb
dec
jbe
repnz
jmp
sub
xor
repz
pop
cmc
adc
xchg
mov
pop
dec
xor
push
jbe
mov
mov
sub
xchg
xchg
lea
adc
out
add
sbbb
outsb
jecxz
std
data16
test
aas
push
sbb
repz
cmp
aas
sbb
pop
clc
repnz
les
mov
jp
stc
xchg
add
xor
jle
dec
xor
adc
pop
add
ja
adc
shll
ja
xchg
enter
xchg
ljmp
jae
scas
lds
cwtl
push
lds
jmp
and
ficompl
call
les
ret
stos
fidivl
lret
dec
xorb
out
dec
xchg
mov
sbb
sbb
cld
std
mov
cmp
sub
addl
dec
divb
push
mov
xor
lods
or
dec
pop
jmp
mov
leave
and
call
xor
int3
mov
mov
xchg
jp
mov
jae
xchg
nop
mov
xchg
clc
sbb
mov
test
mov
pop
aas
shr
movsb
and
movsb
pop
mov
lods
fdivr
mov
sbb
adc
test
mov
jle
jle
jae
sbb
or
pop
cltd
iret
cld
in
repz
mov
mov
fwait
data16
imul
cmp
daa
pop
stos
push
icebp
orl
sti
jnp
cltd
lahf
sbb
out
fs
cmp
lods
pushf
sbb
movsl
mov
or
jnp
mov
mov
repnz
add
mov
in
xor
sbb
mov
addb
lods
mov
fs
jmp
ja
aas
dec
addr16
nop
push
push
out
jnp
lret
out
mov
ret
pusha
out
jae
notl
repnz
or
jecxz,pn
cltd
and
neg
mov
aad
scas
mov
cmp
in
lock
fimuls
inc
testb
dec
sahf
daa
ja
dec
cwtl
or
fwait
cmpsb
sub
cmp
jge
pop
lret
and
mov
jmp
xchg
add
scas
stc
movb
test
fwait
out
and
mov
push
std
sbb
fwait
mov
push
scas
lcall
into
rcrb
dec
aas
insl
js
cwtl
insl
jo
out
loopne
repz
adc
cmpl
stos
in
fisubrs
sti
cmp
push
cmpsb
inc
adc
push
pushf
repz
pop
hlt
sbb
push
fdivrs
push
mov
push
pop
pop
adc
mov
leave
fnstenv
sti
pop
in
add
rcll
mov
pop
add
repz
bound
xchg
mov
sub
fsts
gs
ret
pop
incb
cld
cmc
in
out
lods
and
in
jg
dec
dec
test
xchg
andl
jl
xor
stos
push
icebp
loopne
xor
or
pop
jmp
add
mov
lds
ljmp
jno
dec
mov
les
std
cli
pop
movsb
pop
jno
jle
xchg
mov
movsb
add
cmpsl
lock
fcmove
cmp
adcl
into
pop
popf
and
inc
pop
out
adcl
imul
pop
adc
or
mov
outsl
cmp
dec
lea
xchg
jo
rorb
mov
enter
into
js
adcl
call
add
stc
add
sbb
mov
push
jp
xlat
xor
mov
in
rcrl
ljmp
xor
and
jnp
xor
lcall
xchg
push
xchg
push
push
dec
adc
je
movsb
mov
pop
jecxz
add
cltd
xchg
sub
fbld
fisttpll
jae
mov
sub
adc
test
shlb
add
outsb
push
or
bound
fdivrp
pushf
mov
sbb
outsl
fcomps
js
mov
cmc
jo
sbb
pop
out
push
jne
test
ret
fbstp
scas
std
loopne
xchg
gs
je
iret
dec
add
test
add
sub
mov
push
xchg
setae
mov
shrb
movsl
out
xlat
pushf
add
fnstcw
loope
xchg
xchg
je
dec
lret
dec
mov
mov
movsb
pushf
insl
jl
push
das
mov
cmp
outsl
ret
repz
psubd
scas
adc
xlat
sub
daa
push
or
repnz
lret
mov
jno
dec
lock
xor
mov
jle
std
dec
mov
mov
in
pextrw
daa
push
or
push
and
dec
xchg
xchg
and
cmp
xor
push
clc
pop
gs
inc
or
test
cmpsl
pop
dec
and
orl
call
icebp
mov
mov
inc
std
mov
arpl
fwait
xorps
pop
xor
aas
test
mov
jo
mov
decl
cmp
sub
jne
sti
std
xchg
ds
rolb
ja
test
sub
mov
jnp
dec
push
push
jns
inc
ss
cmp
imul
and
dec
pop
gs
xor
addr16
fbld
cs
js
and
btc
daa
mov
ss
sub
cld
mov
dec
jp
mov
push
jo
or
hlt
dec
push
mov
inc
pop
jp
xchg
fidivrl
push
scas
les
jno
xor
mov
inc
clc
fwait
bsf
push
xchg
fstpt
xlat
imul
imul
inc
repz
cwtl
test
rcrl
jne
dec
add
xchg
fs
in
insl
es
jne
enter
fs
add
pusha
aad
jg
mov
mov
cmp
sub
std
sbb
stos
mov
adc
lret
rcll
add
lods
mov
mov
mov
sub
pop
fdivrl
dec
imul
popf
jnp
movsb
test
xchg
inc
push
addr16
fsubr
dec
push
jecxz
in
pop
push
int3
stos
jle
stos
pushf
lds
sub
xorl
ss
outsl
jecxz
pushf
popf
sete
stos
pop
jb
push
cmp
or
out
movsl
cmp
push
cmp
mov
cmp
fwait
addr16
cli
rcrb
js
aad
les
lods
adc
scas
xor
pop
stc
fisubrl
push
dec
pop
jo
andl
stos
fisubrs
imul
mov
cmc
inc
je
jnp
pushf
std
repz
int3
xlat
in
ret
sbb
push
mov
addb
test
dec
mov
fcomp
add
cmp
dec
lock
sahf
jns
xchg
repnz
pop
lcall
cmp
dec
inc
jge
cmp
cld
cmp
std
data16
or
cmp
cld
push
test
dec
jae
pushf
mov
inc
imul
push
and
cmp
and
in
ret
scas
jg
and
lods
jmp
rcr
rclb
mov
push
sbb
mov
jne
jmp
dec
xchg
xchg
insb
les
mov
pop
mov
mov
inc
fwait
jmp
js
pop
aaa
lea
aad
jmp
call
es
push
mov
jge
lods
xor
xchg
xor
aad
mov
inc
lea
mov
andl
pop
sub
pushf
dec
ss
mov
scas
cmp
sbb
inc
adc
push
insb
pop
inc
movsl
repnz
stos
mov
stc
jns
lret
mov
cmp
jne
arpl
lods
jae
fildl
fisubl
dec
lods
or
addr16
popf
scas
sbb
dec
std
ja
mov
cli
push
sbb
repnz
loope
repnz
ljmp
push
ss
mov
jecxz,pn
sti
fnstcw
jecxz
lods
es
fcomps
xchg
in
xchg
pop
out
je
imul
mov
push
lret
das
xchg
outsl
loop
hlt
ret
lods
cmp
jecxz
xchg
jne
inc
mov
mov
pop
jno
test
sub
inc
sub
test
loope
sub
stos
repnz
nop
shrl
dec
mov
adc
sahf
stos
mov
push
scas
add
sbb
jb
aaa
xchg
push
pop
ljmp
mov
outsl
lea
jle
shlb
xchg
pop
adc
lods
jnp
or
les
pop
mov
mov
dec
dec
adcb
sub
in
adc
cwtl
pop
cmp
in
ficompl
mov
popa
fstl
fwait
mov
dec
ret
jns
add
in
call
pop
pop
out
pop
pop
mov
adc
aaa
loopne
push
dec
rorb
inc
repz
loope
xchg
mov
inc
xchg
adc
xor
leave
push
das
xchg
push
popf
fbld
fsub
pop
xor
inc
popa
fwait
imul
mov
mov
jae
mov
adcb
pop
rclb
or
xor
test
out
insb
fdivs
mov
dec
jnp
aam
sbb
hlt
scas
lea
in
and
lds
sbb
lods
aas
loope
lret
test
addr16
cli
lods
pop
cld
mov
xchg
mov
int
clc
gs
mov
cli
add
incb
sti
sub
fadds
imul
sub
push
notb
jecxz
and
mov
insl
cld
pop
add
cmpsl
in
outsb
daa
mov
sub
shrb
and
jno
push
std
jne
stc
sti
stc
or
mov
int
dec
out
ss
fistpll
fwait
push
popf
dec
in
mov
sbb
std
mov
mov
nop
scas
out
xchg
inc
das
xor
pop
aad
adc
fwait
les
adc
jbe
aam
lahf
sbb
jle
jmp
dec
xor
js
lds
jge
pop
cmp
adc
js
int3
mov
enter
adc
xchg
aad
notb
std
jmp
fistpll
mov
sub
outsl
jne
lods
ja
add
pop
loope
dec
mov
lods
pop
inc
adc
mov
data16
mov
inc
in
ds
xchg
ror
adc
je
out
lcall
in
out
xchg
popa
adc
test
sub
insb
popa
rol
movups
call
stos
jge
jmp
sub
mov
imul
jge
sti
mov
add
pop
add
pop
xor
adc
dec
jae
cs
nop
adc
cmc
cmp
sub
and
dec
jl
gs
prefetch
or
sbb
pop
jge
mov
popf
daa
imul
cwtl
insl
out
cs
shll
xchg
and
insb
xchg
fnstenv
add
ljmp
lods
dec
sbb
adc
loope
sbb
pop
int3
push
jnp
repnz
add
xchg
mov
sub
scas
pop
push
pusha
js
call
jo
sahf
aam
inc
int
mov
mov
fcmovu
adc
xor
sbb
mov
fcomip
loope
adc
aaa
fisttpll
push
dec
bound
pop
pop
cltd
adc
mov
adc
mov
fidivl
cs
cmpsl
popf
int3
mov
lcall
jno
sbb
push
fldenv
xlat
shlb
sahf
jg
stos
add
bound
inc
fwait
popf
push
dec
pop
ljmp
cltd
pop
push
mov
xchg
aas
adc
adc
inc
push
mov
or
inc
xchg
std
fwait
sti
cmpsb
lcall
inc
dec
lret
bound
cld
fnstsw
sbbb
pop
dec
adc
addr16
movsl
shrb
sti
cmp
inc
popf
sub
xchg
sub
notl
adc
lret
mov
adc
xor
jae
mov
movsl
mov
mov
cmpsb
into
pushf
test
call
xchg
ret
or
pop
repz
cli
dec
lock
dec
cld
mov
bound
adc
jo
xor
cltd
rolb
mov
aam
xchg
mov
icebp
inc
pop
cs
mov
sub
mov
inc
int3
mov
dec
sub
jg
int
mov
jno
mov
mov
stos
sar
fstps
and
jp
xchg
out
mov
and
ret
test
daa
je
rclb
jae
ss
popf
sub
jecxz
sbb
fdivrp
fsts
adc
sbb
and
push
xor
adc
mov
iret
sbb
scas
clc
pop
push
stc
mulb
stos
rcl
push
mov
or
jmp
fstpl
sti
dec
dec
jae
aad
pop
outsl
clc
add
mov
push
or
loopne
adc
push
sub
dec
pop
push
ja
js
fnstcw
push
fnsave
jb
push
mov
outsb
loop
dec
adc
jle
push
xor
dec
mov
mov
sbb
jmp
ljmp
arpl
aad
inc
sbb
jae
sarb
loop
sbb
dec
aas
push
push
scas
call
xor
pop
sti
pusha
hlt
lcall
xchg
das
mov
jmp
testl
cmp
int3
jae
filds
or
in
and
fisubrl
popf
cmc
sbb
das
test
popa
gs
movsl
fwait
pop
cmp
lret
sbb
xchg
jae
jmp
mov
mov
pop
sbb
jnp
inc
in
mov
dec
push
push
and
sub
cmp
sbbl
adc
push
pop
xor
les
daa
xchg
test
dec
lods
bound
pop
pop
sbb
push
repnz
into
cmpsl
mov
inc
fiadds
loop
out
sub
pop
cmp
jecxz
daa
call
sub
data16
or
pop
mov
or
push
mov
jp
cmpsl
push
push
pop
ja
adc
in
sbb
shll
call
out
sahf
mov
clc
imul
inc
sbb
dec
mov
adc
fs
adc
imul
or
xchg
mov
test
jge
std
popf
aam
idivb
jge
mulb
iret
push
and
stos
lods
mov
out
int
push
mov
out
jle
jns
arpl
lods
movsl
mov
jge
jge
test
cmp
decb
push
cld
push
fisubrl
repnz
mov
sub
xor
sahf
xchg
pop
movsl
jnp
or
jmp
mov
jne
dec
sbbb
xor
sbb
outsb
divl
add
add
lcall
or
xor
outsl
mov
xchg
sub
mov
cs
imul
pop
inc
lods
dec
xchg
mov
cmp
pop
call
sub
jns
mov
xchg
movsb
in
jnp
pushl
mov
sub
ss
test
pushf
dec
mov
cmc
mov
mov
push
loopne
lock
inc
imul
mov
fistps
outsb
push
jmp
insb
mov
pusha
xchg
mov
jo
out
mov
lock
dec
sub
pop
aam
adc
ja
ss
mov
pop
mull
sbb
fwait
xchg
aaa
pop
enter
pop
pop
mov
test
sub
and
xchg
add
push
jnp
stos
imul
push
cs
jp
and
mov
pop
fisubs
and
shrl
imulb
or
xchg
sbb
cltd
dec
xchg
or
push
insl
les
cltd
sti
aam
fisttps
push
jp
jmp
jle
test
sub
in
scas
jns
xor
and
fs
cmc
andb
lods
cltd
pop
push
inc
inc
aad
xchg
pusha
pop
shll
lahf
jle
sahf
xchg
cmp
and
sbb
jmp
mov
sub
fnsave
repnz
cs
into
mov
mov
sbbl
cmp
and
sub
sbb
je
sbb
rorb
jns
inc
cltd
sbb
lea
rorl
or
mov
ret
scas
mov
push
cli
xchg
xor
inc
popf
jo
fnstenv
ljmp
outsl
cld
dec
cltd
mov
jns
and
into
hlt
adc
imul
sub
imul
stc
ficoms
mov
cld
cmp
pop
add
insb
fstpt
pusha
cmp
pop
test
adc
mov
mov
xor
pop
push
mov
sub
insl
xchg
push
insl
aas
into
out
adcl
mov
shl
mov
mov
xchg
pop
faddl
lods
imul
rol
push
mov
pop
sbb
shll
sub
mov
mov
jmp
sub
pop
clc
mov
daa
loopne
pop
xchg
cmp
sbb
dec
pop
ljmp
ss
aad
jno
int3
cmp
push
pop
std
ret
addl
ljmp
sub
push
rcll
in
jne
fisttps
decb
shlb
shll
clc
xchg
pop
pop
icebp
pop
and
cltd
repnz
scas
popa
mov
cmp
mov
es
mov
int
pop
jne
mov
movsb
dec
rcr
jo
stos
test
xchg
sbb
stos
push
icebp
aaa
pop
dec
cmpsl
test
adc
jnp
addr16
lds
insb
aad
or
fs
std
pop
and
into
call
xchg
decb
movl
lret
adc
add
je
scas
fs
in
iret
je
mov
ret
fnsave
inc
pop
popf
int
out
sub
cwtl
jbe
or
les
add
stc
dec
rcll
sub
jns
popa
out
popf
sbb
pop
xchg
xor
test
xchg
xor
out
xor
aam
test
int
mov
jnp
dec
fyl2xp1
jge
pushf
push
add
cmp
in
scas
jno
mov
bound
pop
xor
adc
jmp
pop
push
inc
outsb
in
lret
xlat
loop
mov
aad
addr16
popa
xlat
into
into
fstps
popf
sarb
pop
leave
and
cld
loop
mov
xchg
rorl
jp
xor
scas
icebp
adc
lods
add
xchg
mov
shl
xor
inc
inc
dec
or
loope
out
lea
cld
cmc
push
pop
push
xchg
add
and
mov
dec
dec
stc
loope
int3
push
pop
xchg
mov
xchg
sbb
lods
cmp
sub
iret
push
fiaddl
mov
test
mov
ds
adc
xchg
in
push
ret
bound
das
mov
and
mov
hlt
scas
xchg
jns
pop
test
je
addr16
into
jb
cli
cmp
cmp
enter
ret
nop
mov
outsb
gs
jae
jge
pushf
cmp
push
fucomp
cs
cmc
dec
cld
push
fcoml
jnp
aaa
cmp
push
sub
loopne
xor
lret
or
mov
sarl
movsl
push
test
add
ret
adc
in
xor
lret
dec
fs
push
arpl
fidivrl
jae
xchg
in
mov
add
outsb
pop
add
js
mov
dec
std
xor
pop
mov
push
and
push
lret
push
jl
mov
inc
or
icebp
sub
xchg
xchg
mov
pop
nop
std
popl
into
aas
xchg
jecxz
cmp
cmc
sbb
scas
inc
and
rorb
int3
push
sub
test
or
pop
cwtl
dec
rcr
out
jmp
hlt
push
inc
setg
ljmp
cmpsl
dec
xor
nop
bnd
inc
xor
cmp
xchg
popf
jne
leave
push
shlb
add
mov
out
outsb
xchg
dec
jmp
not
dec
push
scas
pop
in
push
in
dec
push
add
loope
adc
js
ret
push
xor
xchg
xchg
sarl
adc
inc
or
outsl
jg
fdivp
iret
leave
clc
addl
rcr
fistpll
push
pop
in
or
pusha
in
lcall
mov
cld
mov
jl
fadds
add
lds
jmp
and
test
mov
dec
call
dec
out
sub
mov
pop
lret
sub
fsubs
xchg
xchg
mov
rcr
push
iret
imul
push
mov
mov
aad
cmp
test
arpl
int
push
xchg
dec
scas
imul
mov
jno
add
or
xchg
sbb
stos
jl
adc
dec
sub
lods
sarb
jnp
sub
mov
mov
dec
loope
jne
ja
movsb
push
cmp
in
sub
dec
mov
clc
cld
es
cmp
repz
mov
lret
push
loope
cs
repz
xlat
inc
lds
lret
jbe
sbb
and
adc
cld
call
ret
xor
adc
imul
dec
in
xor
les
das
jnp
addr16
imul
mov
int3
shrb
inc
fiaddl
scas
xchg
adc
gs
cmp
cld
sub
mov
and
xor
in
lret
data16
fiadds
push
sbb
aas
pause
iret
jecxz
inc
push
cld
js
xor
xlat
pop
out
or
dec
mov
movsl
mov
jp
cld
ficoms
repnz
fadds
icebp
jo
out
mov
lods
cmp
dec
or
out
jl
lcall
scas
mov
shl
xor
or
insl
jnp
cli
push
pushf
sbb
push
stos
paddusb
testl
sub
push
sub
xlat
iret
das
das
int
mov
pop
xchg
adc
mov
push
xchg
mov
ret
mov
and
movsb
or
daa
xor
jae
es
dec
jge
daa
daa
sarb
xchg
clc
jp
std
or
movsl
in
adc
aas
xor
in
clc
jno
repz
out
mov
xchg
pop
adc
pop
inc
bnd
ja
stos
mov
jmp
addr16
call
cmp
fisttpl
push
movsl
mov
mov
cmpsb
inc
test
int
add
scas
jle
fisttpll
in
jne
pop
negl
xor
out
cmp
mov
push
outsb
lods
pop
ret
jle
inc
lret
mov
jl
rorw
xchg
add
sarb
int
mov
dec
cmc
inc
or
sub
mov
out
cltd
in
fucomip
mov
insb
insl
pop
mov
cmc
orl
push
lret
pop
cmpl
dec
repnz
rclb
xchg
pop
mov
xlat
into
xchg
icebp
push
dec
pop
movsl
movsl
dec
mov
mov
sub
int
fwait
lcall
jno
js
push
mov
jl
les
pop
sub
lods
xchg
inc
fs
int
mov
das
xor
push
test
std
divl
sub
mov
pop
push
inc
repz
test
mov
jo
sbb
add
nop
push
lods
nop
mov
setl
jg,pt
test
xchg
xor
test
mov
call
jae
sbb
mov
imul
std
push
push
int3
lea
mov
cmc
std
xchg
lret
push
push
or
push
rorl
ljmp
lret
pop
add
call
les
push
cwtl
sahf
call
pop
cmc
inc
jmp
push
sub
js
mov
in
xchg
mov
or
inc
fimull
mov
idivl
sub
mov
loope
clc
and
ret
cmp
jmp
mov
push
imul
aas
lods
lds
stc
lods
mov
negb
push
push
push
push
int3
insl
mov
lcall
data16
fucompp
xchg
loopne
push
jle
adc
int3
pop
lds
gs
adc
push
lahf
lret
int
out
pop
stos
js
mov
dec
mov
adc
adc
aas
sbb
jne,pt
arpl
into
iret
sub
in
pop
pop
aas
movsb
ja
stos
mov
cmc
add
cwtl
sub
test
sub
aas
test
cld
dec
xchg
testb
aad
xor
bound
sub
sub
jp
divb
or
int3
stos
and
jb
xor
ljmp
ret
int
xchg
scas
add
or
jg
in
cmp
mov
jl
jno,pt
mov
lret
inc
adc
test
jmp
sbb
ja
in
mov
ret
outsl
mov
fwait
pop
xchg
mov
xor
out
inc
pop
push
imul
xlat
xchg
jnp
push
mov
cs
fnstenv
pop
movsb
adc
das
bound
cmpsb
add
mov
fsubrs
call
dec
cwtl
xor
sbb
dec
push
inc
out
mov
and
push
lret
dec
sub
xchg
or
aam
test
sbb
pop
sar
jmp
dec
push
mov
lods
sub
cmc
in
mov
sbb
mov
adcb
movsb
add
imul
hlt
push
cs
into
loopnew
out
cld
jb
in
xchg
pop
insl
sub
push
movsl
jge
scas
pop
in
dec
dec
bound
loope
cli
sub
cmp
xchg
pop
dec
pop
pop
out
stc
insb
sub
xchg
pop
loopne
xchg
lahf
and
mov
out
outsb
push
fisttps
xlat
dec
scas
mov
inc
pop
adc
sti
insb
mov
movsl
loope
sub
andl
mov
out
es
bound
xchg
aas
adc
jle
dec
jl
mov
mov
cs
xlat
cmp
sub
imul
mov
rcr
xor
inc
icebp
mov
orl
or
push
mov
stc
inc
std
jg
outsb
lods
add
jg
aam
fsubrl
xchg
mov
neg
outsb
cmp
push
jl
test
sub
cwtl
loope
mov
sbbb
in
rcll
or
aas
aam
or
jns
daa
sub
cld
stos
movsb
add
aam
dec
scas
mov
mov
add
mov
iret
pop
push
cmpl
push
and
sbb
push
jecxz
pop
push
inc
inc
movsb
imul
mov
scas
xor
pop
movsl
jnp
out
fwait
orb
flds
adc
test
testl
loope
lods
mull
cmp
mov
xlat
gs
inc
dec
jne
push
movsl
xchg
push
ficomps
dec
push
jno
xchg
movsb
testb
fisttps
scas
push
adc
es
mull
sbb
loope
xor
push
jo
xchg
icebp
repnz
insl
mov
adc
cmp
imul
fcoml
addr16
shlb
repz
xchg
push
sub
in
mov
sub
sbb
sbb
in
lea
popl
xchg
lock
cmp
test
dec
and
stos
pop
dec
in
aaa
shrb
fstl
mov
int
jg
adc
ds
cmpb
scas
clc
shrb
jle
jl
jb
push
insl
dec
daa
sti
lahf
jp
mov
aas
add
adc
bound
mov
sbb
and
je
div
cmp
aas
std
lahf
cmpsb
mov
push
jp
out
aad
mov
lea
pushf
push
jb
pop
mov
vpxor
imul
cmp
pop
push
push
add
xor
push
inc
std
mov
shll
cs
imul
fidivrl
xchg
push
call
mov
sbb
mov
push
icebp
pop
jecxz
jne
jo
inc
in
insb
ljmp
jbe
jg
negl
push
aas
jne
mov
ret
testb
adc
fidivs
icebp
adc
bound
andl
es
int3
jmp
adc
andb
push
mov
inc
repnz
rcr
inc
stc
push
int
imul
enter
out
cmp
push
dec
loop
inc
cmp
pop
aas
mov
std
repnz
mov
mov
mov
aaa
pop
push
clc
inc
call
jne
into
sbb
or
xor
mov
inc
pop
push
imul
fadds
lds
stos
push
lgdtl
aad
in
fwait
inc
mov
decl
lcall
pmaxub
xor
mov
xor
push
add
scas
jmp
insl
and
jmp
xchg
mov
dec
enter
clc
das
mov
ja
push
pop
fsubs
fisubl
and
sti
jmp
insl
dec
stos
cmp
loope
arpl
out
dec
mov
lret
fsts
jnp
push
aas
das
iret
xchg
lock
or
stos
fisttps
cmp
outsl
in
test
add
sbb
sub
xchg
mov
frstor
js
ds
std
fnsave
dec
imul
leave
ret
jg,pn
jl
and
xchg
negb
subb
movsb
mov
xor
mov
dec
les
push
imulb
and
jnp
pop
sub
push
inc
xchg
pop
jns
mov
aas
and
jmp
ret
jbe
sarl
mov
subb
fmuls
orb
cmp
cli
lods
addl
mov
fistl
xchg
xchg
adc
test
aaa
pop
bound
jae
aas
push
jo
jae
pop
adc
stos
dec
les
mov
mov
gs
repnz
lret
sbb
push
sbb
pop
repz
inc
pop
lock
loope
xchg
fidivs
xor
mov
dec
add
dec
dec
out
fs
js
dec
cmp
push
js
mov
mov
not
cmpsl
xchg
cmp
add
mov
test
lods
and
inc
lret
test
fiadds
js
aam
pop
push
mul
dec
push
inc
cmp
mov
cs
adc
jge
cmpsb
sub
dec
int3
push
mov
xor
in
push
mov
out
movsl
in
xlat
lods
adc
in
lcall
mov
inc
mov
pop
sti
js
stos
fwait
lahf
mov
sub
add
ffree
adc
or
cmp
pop
dec
lret
xchg
mov
fisubrl
ret
movsl
addr16
pop
mov
jno
push
inc
jne
xchg
mov
mov
test
aaa
out
leave
sub
nop
xor
pop
pop
loopne
cmp
sbb
shll
popf
mov
cmp
rcrb
cs
jno
cwtl
cmovo
neg
or
pop
popf
in
cli
cli
dec
aas
mov
inc
popa
out
sbb
icebp
pusha
or
pusha
sbb
pop
int
jo
mov
pop
fisttpll
lret
mov
loop
jo
pop
add
mov
jge
pusha
sti
jae
or
ficompl
sahf
add
lea
out
dec
sub
inc
mov
sub
mov
leave
jecxz
pop
push
or
add
cmp
repz
xor
fucom
push
adc
dec
decb
pop
pop
sub
and
sub
jnp
cltd
add
pushf
in
in
mov
lods
pop
lds
pop
out
push
insb
inc
or
sahf
or
pop
shll
xchg
enter
scas
aam
lds
dec
xchg
dec
sbb
shll
pop
rclb
gs
movq
cs
in
jl
jp
loopne
jbe
mov
mov
out
add
in
aam
ljmp
inc
jge
ret
lea
flds
mov
lock
cmp
movsl
xor
jae
shlb
and
cwtl
rolb
inc
sub
imul
sub
adc
cmpsb
psrlw
push
out
das
out
xor
xchg
mov
rclb
pop
and
push
cmp
or
in
rcrb
scas
jne
loop
daa
mov
movsl
shlb
inc
lcall
mov
sbb
push
jle
test
mov
and
into
lret
ds
mov
out
lods
jge
lahf
pop
push
fsubrl
into
lods
cmp
cmp
je
lret
in
adc
mov
ret
xchg
lods
adc
icebp
and
cli
xchg
mov
mov
xchg
lods
mov
sbb
xchg
cmpsl
out
xchg
out
mov
mov
inc
mov
jno
int3
adc
aad
cmpsl
addr16
jge
int
pop
cmp
dec
cmp
mov
insb
sbb
stc
dec
int
test
lahf
push
inc
jmp
sti
test
jge
ja
inc
mov
cltd
in
mov
std
lret
jge
mov
ficoms
clc
adc
stos
push
popa
idivb
cli
lods
out
scas
cmp
les
mov
mov
jl
gs
ljmp
or
push
mov
insb
fdivs
mov
imul
push
inc
mov
sbb
push
pop
or
movsl
cmpsb
iret
mov
cld
rolb
mov
and
pop
pop
xor
or
add
xchg
jne
in
xor
js
enter
pop
lods
push
mov
sbb
cmp
rorb
inc
nop
std
jno
xchg
stos
push
sbb
aad
aam
clc
es
adcb
outsl
ljmp
push
add
jns
daa
mov
outsb
mov
jge
or
ret
xor
adc
sub
mov
cmp
arpl
shlb
xor
xchg
jp
sbb
scas
popa
lahf
inc
jnp
loopne,pn
scas
mov
mov
xchg
xor
imul
call
lea
mov
xchg
lds
scas
insl
xor
test
and
jns
loop
mov
test
cmpsl
inc
rorl
fwait
push
mov
add
cmp
fincstp
and
lods
pop
sub
data16
mov
mov
ljmp
cmp
clc
fisttpl
sbb
lods
add
jae
jno
test
and
xchg
daa
loope
lds
mov
outsb
mov
pop
mov
push
adc
jns
test
or
popa
in
mov
mov
mov
fistpl
push
lea
lret
cmp
movhps
lea
mov
lea
insb
test
test
xor
and
or
fxch
push
movsb
sbb
mov
adc
icebp
das
add
sub
xlat
lods
fnstsw
xchg
push
pop
sbb
lds
test
fists
push
testb
iret
push
lahf
push
sbb
jg
int
cli
test
stos
cmp
and
sti
jle
movsl
in
inc
repz
ss
insb
dec
pop
xlat
mov
js
scas
pop
decb
cmp
xchg
sti
push
decb
repz
cmpsl
out
xchg
push
xchg
push
mov
ret
sbb
out
dec
dec
aad
insb
hlt
fcomp
lods
push
pop
cld
arpl
sti
stos
mov
adc
cmp
dec
and
outsl
lods
in
sahf
out
pop
jae
shll
fwait
mov
jmp
mov
and
pusha
sahf
fidivl
mov
pop
xchg
push
pop
jp
cmp
sbb
sahf
out
std
sbb
pusha
mov
enter
xor
ret
dec
sbbl
sub
jl
movl
sub
imul
cld
inc
and
cli
cmpsb
orb
mov
mov
cs
idivb
push
icebp
inc
movsb
and
popa
mov
dec
cli
call
imul
push
outsl
pop
cltd
jle
fucomi
mov
ljmp
add
into
adc
hlt
std
shr
rorl
dec
cs
push
dec
xchg
cmpsb
icebp
cmp
sti
dec
rcll
pop
jp
in
out
ss
out
or
push
jo
push
and
pop
call
mov
into
movsl
daa
jge
jecxz
xchg
and
je
ljmp
call
loop
fidivrl
fsts
dec
adc
lds
mov
loop
stos
cmp
ds
daa
sbb
dec
sahf
push
sub
dec
push
pop
or
ret
nop
xor
or
scas
cltd
inc
lcall
insl
aam
lods
dec
outsl
push
lods
lret
out
push
and
xor
pusha
fs
icebp
xchg
andb
nop
or
in
movsl
xchg
js
or
jl
leave
mov
push
dec
lea
mov
jb
gs
outsl
pusha
mov
stos
dec
pop
repz
inc
inc
add
push
dec
lods
fucomip
push
mov
sub
xchg
mov
insl
cld
dec
pusha
loope
movsl
and
xorb
pop
test
stos
aam
repz
testb
ja
sbb
ss
cmp
and
add
push
and
loop
mov
dec
scas
js
jo
shrb
mov
inc
lret
lock
or
sub
sahf
ja
pop
xor
ja
cld
das
mov
inc
iret
push
jbe
fcmove
jg
xlat
fisubl
bound
pushf
std
shll
mov
lret
cmp
and
lods
popa
leave
mov
mov
push
push
test
dec
push
jae
mov
jg
lret
out
dec
push
cmpsl
xchg
jb
pop
incb
sbb
cmp
insb
pop
push
xor
or
scas
outsb
and
aaa
rcll
and
hlt
or
xchg
lods
shr
push
push
fists
xchg
jo
push
ret
jg
ss
xchg
lcall
pop
ror
mov
roll
sub
and
fs
sarb
lret
shrl
and
inc
mov
cltd
pop
cld
fcmovb
notb
cli
xor
ret
fdivr
in
mov
add
and
scas
jg
jg
fcompl
outsl
sbb
pop
stos
out
and
mov
dec
fildll
sbb
sbb
and
loop
insl
lret
js
test
lods
push
in
xor
lret
cmp
jg
lret
out
add
xchg
dec
test
jmp
outsb
mov
scas
jmp
mov
sbb
lods
ret
outsl
cmp
push
jmp
jne
mov
push
push
jb
mov
mov
mov
jmp
lret
pop
ret
scas
pop
sub
mov
add
in
cmc
mov
xchg
adc
push
adc
adc
mov
es
mov
rcrl
mov
pop
out
aam
test
test
cmpsl
pop
pushf
jnp
fimull
fs
xlat
sbb
or
and
fcom
cltd
dec
cltd
mov
adc
int3
ljmp
imul
inc
lods
ja
dec
jmp
test
jmp
add
gs
jl
insb
inc
push
rcr
pop
stos
repnz
mov
jmp
push
or
addl
fdivrp
mov
out
fs
push
and
dec
out
insb
movsb
inc
sbb
and
call
aas
cltd
int
push
dec
push
imull
and
lods
adc
mov
fsubs
sbb
shrb
fcmovb
xchg
aas
or
inc
aam
jmp
sbb
mov
lds
pusha
movsb
inc
xchg
push
sbbl
jns
lea
xchg
push
clc
push
stos
dec
xchg
xchg
push
mov
repz
in
sbb
fcomip
mov
pop
popf
push
std
pusha
leave
fldenv
adc
imul
xor
aad
ja
mov
dec
mov
adc
addr16
dec
insb
push
in
pop
sbb
test
dec
xor
fildl
mov
in
arpl
fsubr
leave
clc
lods
sbb
dec
test
push
cmp
outsb
test
jl,pn
mov
fisubrs
out
sbb
lock
icebp
leave
pop
shll
das
pushf
cli
mov
jb
fidivrs
jmp
bound
mov
std
lea
push
or
dec
pop
push
mov
test
dec
add
daa
aad
ret
and
mov
cltd
es
rorl
add
popf
adc
adcb
mov
jbe
jns
or
push
gs
jns
and
lcall
dec
lea
iret
sub
rcrb
fcmovnb
pop
and
mov
bound
cmp
sti
sub
cmp
pushf
insb
shrl
scas
cmc
imulb
int
mov
sub
vmovss
push
push
iret
popf
push
fistpll
stc
test
cmp
int3
jmp
icebp
pop
mov
stc
xchg
jle
ds
addr16
inc
mov
movsb
stos
ficompl
jle
mov
jl
xchg
dec
mov
adc
push
clc
popa
jmp
and
int3
adc
filds
adc
xchg
dec
mov
xchg
jge
scas
xor
pop
pop
mov
sub
jb
mov
mov
add
cwtl
jnp
jb
cld
sub
push
push
add
xor
inc
xchg
add
faddp
fcmovnbe
pusha
aas
mov
gs
flds
mov
in
mov
cltd
ficompl
xchg
das
jne
jle
sbb
andl
xchg
ret
jge
adc
mov
xor
mov
mov
sub
aaa
repnz
inc
inc
mov
shll
mov
test
insl
push
dec
shl
scas
mov
in
std
jl
les
jno
cmc
sub
ss
lock
jae
loopne
enter
aas
or
dec
push
loopne
jge
das
push
jle
mov
ljmp
and
sub
push
adc
int3
mov
sti
mov
stos
cltd
and
xchg
xor
mov
testl
jbe
jne
mov
int3
out
and
leave
and
sbb
insl
sbb
mov
xorb
out
test
lret
pop
mov
int
xlat
and
mov
jne
mov
arpl
mov
fucomip
jae
mov
dec
aad
pop
cmc
pop
loope
pop
pop
xchg
jns
stos
mov
aad
out
fisubrs
imul
jb
shr
pop
xchg
push
mov
shrb
aas
movsb
mov
ret
call
dec
in
aam
outsl
cmp
iret
es
stc
xchg
ds
jns
xchg
rcl
and
fidivrs
pop
imul
fimull
add
shrb
and
loopne
cmpsb
fnstenv
popf
pushf
arpl
cmc
and
push
cmp
push
jne
ret
imul
es
mov
lods
inc
test
push
xor
dec
mov
scas
call
jne
popa
xchg
mov
outsb
negb
xor
push
js
into
xchg
push
lds
mov
stos
adcl
mov
arpl
mov
inc
lods
int3
jmp
rcll
fildll
or
jg
ds
sbb
adc
sbb
jnp
addr16
cmp
scas
cmp
insb
xchg
nop
les
std
popa
xchg
mov
cld
lds
pop
pushf
roll
push
insl
testl
leave
loop
push
lahf
push
and
jmp
add
stos
test
out
sbb
add
out
out
filds
scas
mov
lods
xlat
push
push
dec
ret
lahf
jmp
and
jmp
punpckldq
or
or
xchg
cs
stc
add
xor
push
in
push
fimuls
adc
fs
lcall
push
inc
mov
xchg
stos
dec
mov
mov
out
xchg
or
jb
sub
adc
pop
sti
cs
pop
scas
mov
lds
ret
repnz
mov
pop
add
mov
pop
leave
mov
dec
xchg
fistps
fptan
mov
jecxz
outsb
data16
sti
mov
and
xchg
lahf
push
fs
test
inc
cmp
add
cs
mov
roll
out
mov
in
mov
sbbl
inc
popa
ja
lcall
jne
pusha
jns
and
dec
call
out
cmp
sub
xchg
cmp
cmc
jg
fiaddl
dec
frstor
push
enter
cmpsl
jbe
xor
out
adc
pop
dec
jbe
adc
lods
xchg
fdivs
movsl
sub
sbb
push
inc
aad
test
je
xchg
aad
std
rcl
jl
nop
lock
gs
cmp
loope
sub
into
test
dec
jmp
mov
lods
test
daa
cmp
cmp
inc
leave
fistpll
test
orl
dec
stos
or
add
jecxz
lret
lods
sub
incb
adc
sbb
fstpl
rol
push
sub
mov
fsubs
stos
sar
jo
gs
repnz
or
pop
or
xor
jp
gs
out
loop
mull
xor
scas
into
mov
out
or
and
in
in
orl
fisubl
ljmp
pusha
ds
int
xor
dec
mov
jbe
sbb
mov
jns
imul
lds
cwtl
repnz
add
or
arpl
scas
lods
jle
in
loope
lahf
outsl
pop
pop
stc
les
dec
jnp
lods
pop
sbb
push
xchg
or
testl
insw
or
adc
sub
cli
xor
dec
push
in
mov
jl
push
jg
xchg
mov
sbb
lods
cli
cmc
cmpsb
aaa
inc
test
mov
stos
cwtl
xchg
lahf
xor
cmp
dec
orl
addr16
jno
gs
cmp
cltd
orl
mov
movsb
push
mov
adc
fwait
add
mov
mov
jecxz
out
roll
js
fiaddl
rcrl
out
mov
adc
jb
cmc
scas
and
test
into
push
in
cwtl
shll
jl
cmp
mov
mov
hlt
cli
and
mov
scas
scas
outsb
fldcw
push
daa
or
mov
sarb
cmc
pop
std
mov
sahf
outsb
sbb
cli
jecxz
sbb
jae
pop
mov
cltd
pop
jle
xor
xchg
leave
pop
fcoms
test
test
insb
sub
or
mov
and
sbb
push
adc
adc
adc
xchg
cmp
loope
mov
sbb
jno
out
add
xchg
orb
cmc
mov
inc
call
popl
pusha
movsb
out
adcb
jg
dec
push
xchg
sub
addl
pusha
int
shrb
mov
mov
andb
sub
or
cs
test
mov
xor
sbb
sahf
adc
mov
sbb
ja
sbb
out
loopne
aaa
loope
add
add
inc
mov
cwtl
je
dec
add
cmpsl
ljmp
xor
sbb
mov
stc
xor
xchg
pop
xor
iret
sub
fsts
aam
or
mov
adc
ljmp
dec
pop
mov
cs
outsb
pop
icebp
aad
enter
repnz
mov
push
scas
stos
in
outsl
mov
jne
ljmp
jecxz
mov
mov
test
mov
xor
mov
pop
mov
rolb
sahf
dec
into
sbb
mov
dec
cmp
cmc
fldcw
adc
aaa
push
push
jmp
mov
into
inc
shll
outsl
push
sbb
cli
clc
dec
lcall
lock
ja
out
sub
push
sub
shrl
js
jl
mov
out
pop
clc
and
mov
inc
lods
loopne
lock
enter
pop
lahf
xchg
pop
xor
lods
adc
jl
addr16
fsubl
loopne
push
mov
rolb
inc
loop
insb
test
mov
clc
mov
hlt
loop
cmp
jl
pop
cli
aaa
mov
jp
push
insl
mov
lods
push
pop
out
push
ffree
scas
pop
out
rol
into
fstpt
into
mov
ficompl
add
stos
push
sbb
jecxz
adc
fbstp
pushf
mov
lret
mov
int
out
in
add
pop
xlat
push
sub
lret
ds
out
push
lock
fstps
movsl
scas
test
pop
sub
test
orl
loope
dec
adc
cmp
pop
cmp
xchg
clc
int3
cmp
sahf
lods
jb
pop
add
mov
not
fnstcw
fidivl
and
cwtl
add
ss
sub
out
insl
lret
fs
call
mov
lock
into
mov
and
pop
es
jae
mov
xor
add
lds
in
or
stos
inc
les
jle
mov
jb
mov
pop
outsb
xchg
in
push
jne
pop
or
test
jp
fdivl
mov
repz
xchg
aaa
loop
cmpsb
in
mov
mov
hlt
scas
clc
and
sbb
in
fs
sub
imul
push
xchg
sbb
mov
imul
pop
sub
or
cmp
dec
pop
mov
fstl
dec
cld
aaa
outsb
mov
ret
jecxz
push
xchg
imul
sub
aaa
fsubs
nop
ljmp
mov
imul
mov
fcoms
data16
dec
mov
out
pop
fmull
repnz
fs
addr16
ss
pop
sub
dec
aad
popf
cld
ret
mov
mov
fsub
jno
or
sub
in
inc
in
inc
xchg
ret
mov
pusha
mov
enter
jno
clc
loope
leave
imul
cli
imul
loope
scas
xor
mov
sub
xor
push
and
mov
lock
jmp
mov
out
inc
call
test
outsb
jg
xchg
push
cld
nop
jnp
aaa
xchg
outsb
lods
fisubs
int
or
cs
fdivp
std
xor
cmp
fcoms
enter
pop
dec
jg
pop
idivb
adc
push
mov
push
push
out
loop
fdivl
sahf
jns
push
jmp
lods
icebp
das
mov
xlat
dec
inc
sahf
fnstsw
cwtl
shl
icebp
andl
das
mov
pop
test
pop
stc
add
sbb
mov
lods
push
into
outsl
aad
jl
pop
xlat
sbb
inc
daa
sbb
movsb
out
xor
sub
pusha
cmp
clc
hlt
cmc
and
sarb
imul
aas
pop
out
cwtl
mov
push
sahf
mov
jg
fsubs
std
int3
cmpsl
aam
popf
cmc
std
jp
xor
scas
jae
inc
call
out
cmp
leave
mov
mov
das
negb
das
mov
sahf
jg
xchg
lea
sbb
pop
add
js
aam
jb
push
fwait
call
and
into
sahf
mov
push
dec
push
pop
pushf
ret
inc
mov
cli
jecxz
cmc
pop
ss
je
cmp
xor
repz
inc
movsl
bound
sarb
push
xchg
fs
xor
fstpl
jnp
add
fidivrl
xor
and
mov
xchg
push
sbb
int3
cld
test
lret
dec
clc
pop
insl
jb
mov
ja
dec
cmpb
rcl
push
jbe
inc
xchg
push
rcrl
fwait
lret
sub
sbb
ljmp
xchg
outsl
fwait
pop
pop
or
mov
sub
and
enter
jecxz
push
out
hlt
fs
push
inc
icebp
ror
enter
sub
jnp
lahf
das
fidivrl
scas
cli
dec
sub
jns
jmp
test
jo
adc
jae
scas
test
and
shlb
pop
fwait
push
les
jg
or
into
call
jg
mov
idivb
sub
push
shll
pop
mov
dec
add
movsl
push
inc
gs
mov
je
les
cs
imul
xchg
movsb
xor
mov
push
xlat
push
sarl
movsl
clc
fcmove
mov
in
pop
js
cwtl
roll
cwtl
push
sbb
icebp
jg
adc
mov
bswap
cmp
cmpsl
xchg
dec
lret
aam
jo
lods
dec
xchg
flds
fdivrl
arpl
cs
rorl
mov
pop
loop
mov
lods
clc
mov
dec
pop
adc
pop
lret
sti
mov
in
jbe
lea
movsb
stos
mov
mov
mov
stc
xchg
scas
push
mov
pop
in
imul
and
xor
mov
adc
push
cltd
pop
inc
stc
mov
popa
call
jp
pop
sub
xlat
push
dec
sbb
fwait
xlat
adc
in
cmp
jae
add
sbb
xlat
mov
mov
bound
cmc
jg
pop
pop
add
dec
jae
out
jge
dec
fstl
pop
xchg
mov
pop
icebp
addb
or
mov
mov
pop
add
ret
xor
out
cmpsl
hlt
add
mov
es
jge
cmpl
sub
mov
xlat
push
adcl
pushf
pop
loope
stos
xor
mov
adc
aas
fs
lcall
jb
jae
push
int
xchg
ss
pop
sti
test
xchg
shrb
movsl
adc
insl
dec
cmc
mov
addb
test
movsb
mov
xor
sbb
mov
ret
add
int3
mov
fldcw
test
test
imull
stc
movsl
sar
pusha
jecxz
xchg
daa
mov
pop
mov
fisubrl
pop
jg
std
stos
fmulp
cmp
outsb
movsl
loop
mov
add
mov
pop
or
adc
xchg
jb
xchg
add
fcompl
lcall
mov
incl
cmpsl
test
dec
xchg
push
mov
into
call
mov
pushf
shlb
push
push
cmp
mov
loop
rdpmc
adcl
leave
cmp
jl
inc
ja
or
pop
bound
xor
addb
mov
jbe
sub
mov
repz
sbb
fldt
xor
jne
sub
add
stc
les
sbb
inc
xor
pop
ss
lahf
xlat
shrd
mov
mov
adc
mov
pop
mov
hlt
xchg
push
sub
mov
xchg
or
iret
pop
push
gs
repz
rorl
in
mov
pushf
add
lret
adc
imull
sti
imul
shl
mov
arpl
xor
ret
jecxz
sti
and
shlb
ret
mov
jmp
or
mov
lds
push
jle
aam
pop
inc
xor
js
adcl
cmpsb
sub
jecxz
jne
loopne
sti
out
int
push
jl
cltd
bound
cmp
movsb
std
xlat
mov
jbe
std
mov
dec
cmp
loopne
int3
rorl
mov
pop
notb
sbb
cwtl
ret
mov
cwtl
mov
out
std
dec
into
lods
xor
xor
and
cld
push
or
add
xchg
loopne
lahf
push
ret
inc
fldcw
mov
gs
mov
mov
pop
lods
fsub
mov
loopne
pop
div
xchg
imul
lret
push
or
ja
test
sbb
addl
pop
mov
clc
push
sub
popa
inc
mov
sbb
sub
mov
int3
dec
addl
arpl
enter
pop
mov
xchg
out
test
pop
xchg
ret
std
pop
push
shlb
sbb
outsb
sub
dec
pop
or
cs
out
fistpll
add
shrd
add
mov
popa
les
in
and
ljmp
mov
add
or
mov
mov
xor
sbb
push
pop
cs
mov
scas
xor
push
jmp
pop
neg
and
sub
xchg
fsubl
sub
lock
pop
inc
jb
jnp
push
xchg
mov
rcrl
and
lods
dec
mov
mov
dec
xchg
cltd
and
and
jno
test
popa
mov
lahf
notl
mov
int
jnp
push
rcr
rclb
fcmovnbe
repz
and
mov
lods
cmp
cmp
pop
cmp
test
xchg
xchg
push
imul
xchg
pop
mov
inc
in
incb
mov
je
test
testl
fcoms
sub
das
inc
lods
arpl
divl
jns
out
ljmp
cld
lret
pop
mov
inc
and
lret
clc
jnp
orb
aaa
out
sarb
jbe
dec
xchg
mov
xlat
cld
loop
stos
fs
xchg
jo
or
mov
in
dec
stos
std
ret
push
imul
adc
stc
nop
push
stc
jg
and
mov
iret
in
ss
int
std
mov
aam
xor
scas
into
ljmp
cmp
and
scas
rclb
je
pop
pop
push
mov
push
test
push
sbb
dec
sbb
dec
dec
shl
xchg
mov
mov
mov
mov
mov
sbb
test
loop
dec
cmp
daa
ljmp
or
clc
mov
inc
dec
pushf
adc
push
enter
sub
mov
out
aad
pop
sahf
clc
and
std
inc
orps
repnz
push
shll
pop
fnsave
mov
sbb
sub
movsl
cmpsl
jecxz
dec
cmp
xor
and
shrb
jg
add
clc
popa
out
xor
xchg
mov
pop
data16
xchg
roll
xor
cmp
incb
int
inc
fisubrl
pop
lds
imul
jle
scas
cmp
movsl
push
push
scas
js
fs
addr16
icebp
ret
icebp
adc
adc
leave
adc
push
xor
hlt
mov
push
subb
and
mov
cld
or
xchg
mov
inc
pushf
push
jp
fistps
call
mov
in
repnz
xchg
pop
ficomps
lods
sarl
or
push
cmpsl
jle
and
inc
call
xchg
jnp
add
imul
xor
pop
repz
or
inc
jg
mov
add
push
faddp
pop
popa
cmpsb
add
push
mov
sbb
sti
lea
int3
mov
jmp
mov
dec
pop
and
cmc
cmp
cmp
jo
jo
or
test
mov
aas
sbb
pop
pop
xor
arpl
fwait
loope
jp
ret
rcll
xchg
dec
jl
lret
push
lahf
mov
jnp
mov
fwait
clc
in
adc
das
jp
push
jge
sub
ljmp
mov
in
jg
mov
les
popa
and
popf
dec
pop
test
imul
inc
loopne
std
or
dec
xchg
outsl
mov
out
cli
rcrl
inc
xchg
mov
pushf
mov
aad
cmp
push
mov
cmc
shl
mov
inc
mov
cmp
sti
mov
jbe
push
ret
outsl
jl
and
out
outsb
pop
mov
jnp
scas
cli
in
lcall
pop
lock
mov
cmp
mov
push
lcall
sub
repnz
repnz
adc
mov
stos
cmp
adc
jp
call
mov
cld
dec
call
xchg
or
pop
ja
loop
sarb
movl
jnp
xchg
stos
mov
stc
push
adc
in
test
sub
scas
mov
dec
out
loop
lret
mov
ffree
fwait
into
in
movsl
out
or
mov
movsl
sub
mov
fidivrl
cmp
aaa
insl
jle
pushf
mov
cmc
pop
cld
out
push
lock
gs
fsts
lock
cmp
sbb
loopne
lods
adc
mov
fdivrl
test
adc
or
scas
lock
mov
sub
lock
jbe
jo
push
mov
mov
in
mov
pop
mov
mov
in
mov
jo
sbbb
pop
mov
les
inc
lcall
icebp
xchg
mov
jge
push
outsl
xor
cmp
sub
pop
cltd
rorl
data16
jno
push
out
jecxz
arpl
jl
outsl
mov
cmp
shll
inc
cmp
jle
and
jns
test
jmp
rcll
int
xchg
mov
scas
mov
mov
das
add
sbb
mov
mov
xorb
xor
dec
pop
out
and
aad
out
aam
push
xor
cmpsl
sub
popf
jnp
fs
pop
bound
or
push
lret
pop
ss
out
jno
test
in
adc
outsl
fstps
adc
mov
test
push
jle
pop
or
adc
push
xor
mov
jo
lcall
jmp
loope
icebp
push
mov
push
mov
cld
iret
loopne
outsb
inc
or
mov
aaa
jge
push
popf
test
jns
imul
dec
mov
push
inc
jmp
repnz
push
sub
ljmp
adc
popf
jb
inc
shll
push
dec
cli
jg
lea
jnp
in
cmp
inc
ss
pop
push
mov
lds
cmp
lea
cmp
push
jle
int
rcll
mov
sbb
push
jle
sub
mov
icebp
sarl
mov
decb
ret
add
js
or
in
psllw
mov
daa
outsb
iret
cmp
sub
lock
popa
sub
ja
testl
push
mov
in
pop
test
fsubl
or
cli
jne
lods
pop
or
mov
stos
mov
test
popf
sub
popf
imul
in
mov
jo
outsb
push
mov
lock
sub
and
cmc
cli
int
sahf
dec
jmp
loope
mov
xchg
loop
hlt
lret
cmpb
je
jmp
xchg
mov
addr16
imul
push
xchg
data16
pop
add
jb
push
mov
pop
loop
stc
adc
les
popa
bnd
sahf
test
sbb
mov
inc
lods
mov
add
xor
adc
lret
cld
ja
clc
hlt
lret
stos
shr
fistpl
movntq
insb
bound
jne
push
fsubs
clc
test
out
cmp
sti
mov
jb
mov
fidivrl
fmul
arpl
shlb
inc
jnp
cmova
jle
dec
daa
jb
inc
sub
and
nop
mov
aam
stos
add
inc
or
insb
push
das
jns
fwait
add
jb
pop
xchg
bound
call
testl
mov
mov
sti
sub
out
popa
sbbl
xor
dec
pushf
mov
sbb
mov
sbb
popf
test
loopne
lods
cmp
pop
xor
pop
cmp
pop
and
mov
rclb
popa
out
or
fimuls
addr16
leave
push
sbb
ret
imul
and
aas
mov
aad
or
push
add
loope
and
pop
rclb
mov
add
iret
xchg
lods
out
add
xor
shl
sti
les
mov
fs
push
lret
adc
cmp
dec
adc
cltd
aam
sbb
push
loop
sub
jp
loope
jnp
in
sbb
xchg
xor
fistl
sbb
mov
fcompl
mov
jae
in
out
cmc
in
inc
out
xlat
shll
pusha
pop
cmp
cmp
out
adc
lods
fimull
xor
test
pop
aad
lret
jmp
cld
inc
lock
xor
mov
xlat
cli
int3
mov
loop
rcrl
inc
xorb
push
push
pop
mov
add
mov
push
push
es
sbb
jbe
mov
inc
adc
xor
sbb
pop
lret
aam
xchg
xor
jno
daa
lea
jmp
jle
testl
inc
mov
stos
inc
mov
icebp
ret
mov
rolb
sbb
cmpsl
les
pop
cli
lret
sarb
icebp
shlb
adc
aad
movsb
sbb
xchg
loopne
sub
insb
xchg
inc
repnz
mov
or
pop
mov
sbb
leave
das
out
xchg
jne
fstpl
jae
fidivrs
and
fstpt
inc
fwait
jns
mov
xchg
dec
imul
dec
and
cmp
js
pushf
test
jns
out
sbb
mov
dec
jnp
aas
mov
popf
in
sahf
mov
pop
aas
xor
push
lret
pop
mov
shrl
or
mov
data16
jns
cmp
cmc
xchg
mov
mov
js
push
jle
xor
push
mov
inc
cmp
adc
cmp
in
pop
insl
cld
mov
xchg
and
enter
mov
sbb
test
dec
lds
pop
push
fcoms
or
cmp
int3
mov
int
ljmp
mov
jne
shl
ljmp
xchg
fwait
sbb
inc
xor
jmp
in
adc
iret
jmp
jge
decl
inc
paddsw
mov
arpl
sbb
sti
jg
mov
push
jg
push
scas
jb
jae
xor
pop
out
jp
push
cmpsl
hlt
xchg
cmc
lea
push
and
jge
jb
sub
aas
lods
jle
push
lret
jecxz
push
rol
lahf
mov
add
inc
mov
popa
adc
or
sbb
inc
adc
jno
pop
insb
mov
leave
mov
jbe
fimull
loope
subb
xchg
adc
in
mov
push
aam
push
mov
aad
jmp
jnp
mov
jo
mov
xor
cs
pop
xchg
xchg
push
sbb
jbe
lods
xor
and
repnz
push
push
je
rorb
sbbl
push
fcoml
in
xchg
mov
into
repnz
popf
hlt
adcb
push
mov
xor
sbb
cmc
sti
inc
mov
mov
test
pop
dec
lods
ret
outsb
scas
inc
lret
fidivl
cltd
mov
add
dec
popa
dec
popf
lcall
or
sbb
pop
aas
fcomip
sti
test
inc
out
add
fwait
dec
ret
mov
test
scas
xchg
mov
adc
push
call
ljmp
js
xor
lea
int
aas
dec
imul
xchg
xchg
aaa
adc
cltd
int
and
mov
out
fs
xor
icebp
jns
int3
out
adc
stos
in
push
fldt
xlat
out
scas
or
pop
rcll
lcall
mov
mov
push
xor
es
mov
xchg
mov
cwtl
push
stos
mov
jne
pop
les
bnd
lret
mov
lahf
addl
lds
mov
xor
pop
sarb
jb
data16
sbb
jbe
xor
bound
mov
cld
cli
jns
call
push
rcrb
cli
sbb
mov
add
pop
sbb
adc
adc
scas
shr
stc
push
mov
je
insl
sti
stos
mov
in
loopne
ret
stos
mov
bound
icebp
loopne
das
mov
shll
mov
in
ja
fwait
icebp
repnz
add
mov
js
jl
out
outsl
iret
popa
push
add
pop
gs
dec
cltd
pop
inc
or
jge
loop
int3
mulb
mov
adc
aas
mov
jmp
clc
data16
outsl
dec
lock
insb
jno
cmp
mov
das
orl
add
and
adc
das
and
fsubrl
loope
sti
lcall
shrb
cmp
lahf
xchg
std
aas
in
es
mov
stos
les
sub
int
repz
leave
mov
pop
add
pop
push
push
outsb
and
inc
cli
inc
adc
cmpsb
repz
jp
outsl
jecxz
cmp
je
push
push
cmp
jecxz
sub
mov
sub
inc
push
sub
or
jno
mov
shl
repz
or
pop
and
inc
sub
imul
loopne
mov
mov
dec
mov
out
cmp
and
jmp
jl
out
sbb
fisttps
ss
mov
outsb
inc
orl
out
addr16
mov
ficoml
sub
mulb
shll
dec
adc
daa
test
rorb
inc
je
call
inc
cmpsl
mov
jmp
xchg
xchg
mov
push
xchg
sbb
mov
aad
pop
push
adc
stc
xor
jmp
adc
sarb
jbe
pop
cs
adc
mov
xlat
jbe
std
shr
out
aam
mov
leave
icebp
and
loopne
sub
push
sub
cs
mov
dec
js
mov
dec
pop
inc
cltd
push
mov
jns
xchg
sub
pop
pushf
push
mov
std
enter
mov
push
mov
fstpt
mov
popf
pop
mov
adc
mov
mov
sbb
ljmp
shrl
imul
fdivl
stos
popf
jnp
add
mov
cli
jb
pop
and
adc
xchg
bound
out
ja
mov
lcall
jbe
or
aaa
imul
mov
add
clc
jge
adc
std
pop
fnstsw
xchg
mov
adc
mov
sarb
iret
fs
pop
xor
mov
in
inc
sbb
popf
cwtl
xor
lret
mov
pop
fcomps
xlat
ds
gs
or
pop
decl
mov
out
jae
bound
outsl
mov
add
xchg
push
pop
pop
pop
jbe
or
add
adcb
pop
int
xchg
popf
sbb
mov
cmp
inc
shl
pop
ret
jmp
icebp
dec
pop
test
mov
xor
cwtl
scas
sbb
cld
mov
xor
clc
cld
aam
loop
mov
lret
cs
leave
sub
mov
push
inc
cmp
andl
popa
xchg
pop
out
sub
cmp
jg
push
test
adc
xor
pop
and
lods
imul
lea
daa
sub
push
jnp
sub
in
push
cmpb
test
push
xor
lods
or
into
insl
mov
shlb
push
shr
mov
xorps
adc
mov
or
jnp
adc
scas
sub
scas
adc
fisubrl
cmp
sbb
aad
and
xchg
out
inc
cli
cmp
cmp
mov
mov
je
movsb
sti
cli
lret
dec
ds
out
push
mov
arpl
outsl
cli
xchg
dec
xchg
push
icebp
or
push
adc
arpl
insb
push
sub
mov
mov
sub
jg
test
out
mov
neg
cmp
jne
cmp
jecxz
inc
fwait
mov
xor
jbe
insb
leave
cmp
stos
mov
push
xchg
inc
and
popa
ja
jmp
inc
xor
mov
xor
out
std
insl
sbb
sub
rcrl
xchg
fcmovne
or
testl
aaa
in
push
mov
inc
loop
mov
popf
push
fwait
jbe
popf
icebp
inc
into
imul
add
cmp
jne
ret
push
pop
jb
es
and
mov
xchg
or
dec
lahf
inc
outsl
pop
xchg
mov
movsl
clc
negb
scas
inc
xor
out
dec
adc
test
push
push
jmp
inc
inc
fwait
mov
push
fsubr
cwtl
inc
or
shrb
popf
pushf
icebp
loop
lret
aas
jmp
mov
cmp
cmp
dec
adc
pop
test
test
repnz
cwtl
mov
jnp
popf
dec
inc
outsl
pop
xchg
fnstcw
outsb
in
nop
and
xchg
sbb
lret
push
lahf
mov
mov
cmp
in
enter
lea
push
stos
sub
jae
or
pop
sub
vcvttps2dq
jg
mov
ror
dec
sub
rcl
cmc
jmp
lods
aam
push
cmpsl
lods
scas
sbb
push
pop
out
add
div
pop
imul
loop
pushf
sub
mov
inc
inc
cltd
xchg
sbb
out
mov
fistps
cmp
sub
pop
adcl
js
push
movsl
push
imul
repz
lds
repnz
xor
loopne
sbb
sbb
dec
das
hlt
bound
lret
add
mov
and
fimuls
inc
imul
xchg
sbb
mov
dec
cld
pop
aad
mov
int3
mov
lock
test
in
mov
clc
das
fwait
jne
subl
lret
test
in
popa
in
divps
fwait
jmp
mov
cmp
popf
lods
mov
pop
test
pop
sub
mov
ds
movsl
into
inc
lret
or
push
movsl
xor
fadds
add
into
sti
rolb
and
jle
in
xchg
data16
cmpsb
leave
daa
movsb
or
movsw
imull
dec
rcrl
neg
xchg
aam
out
mov
in
icebp
ss
pop
aas
int
cmpsl
cmp
mov
nop
jp
nop
jp
jp
adc
adc
lods
adc
hlt
aaa
jo
sub
adc
jns
iret
inc
scas
inc
pop
sbb
aam
dec
fbstp
bound
or
std
ficoml
xchg
jae
mov
scas
cld
pop
pop
ret
dec
cmp
xlat
insl
int
jle
or
aad
iret
lock
int3
xchg
add
movsb
stos
cld
sub
stos
push
fsubp
lahf
mov
mov
cltd
test
aad
or
pmullw
pop
test
and
sahf
arpl
call
xchg
stc
fs
les
push
push
sub
fldl
adc
adc
xchg
dec
mov
pop
fwait
jl
cmpsl
stc
mov
pushf
mov
xchg
sub
cpuid
mov
inc
mov
xor
mov
cli
xchg
xchg
pushf
es
xor
cmp
call
inc
xorl
mov
pushf
jmp
or
inc
fs
enter
shll
inc
add
xor
scas
imul
sub
nop
or
sub
icebp
jl
mov
loope
daa
fs
add
paddusb
inc
jo
in
gs
jns
dec
cmp
mov
pop
cmp
loope
mov
icebp
movsb
mov
pcmpgtw
rorl
lods
jg
or
sbb
xor
gs
inc
pop
mov
push
cmpsl
push
stos
leave
dec
xchg
mov
repz
aas
fistpl
lcall
push
scas
fstpt
pop
or
mov
push
jno
mov
ret
std
cmpsb
inc
mov
jnp
fsubrs
and
mov
repz
and
and
incl
aaa
push
repz
inc
aas
icebp
ljmp
dec
lods
imul
stos
stos
xchg
lcall
and
add
ds
sti
rolb
cli
pop
mov
cwtl
pop
jge
mov
sbb
cmp
repz
pusha
xor
test
mov
adc
fmull
mov
callw
orl
jb
cmp
jmp
inc
iret
mov
cs
cmp
xchg
sarl
jecxz
aad
jge
jp
movsb
add
test
pushf
shl
cmp
idivl
sbb
jb
lea
out
scas
jb
pminsw
sub
push
data16
pop
inc
dec
and
bound
pop
mov
insb
jae
xor
adc
cs
ljmp
cmp
jmp
mov
mov
ljmp
test
cmp
popf
xchg
mov
xor
dec
nop
mov
xchg
jecxz
fidivl
lods
xor
jp
mov
repnz
in
cmc
pop
xor
sbb
xchg
mov
paddq
loop
stos
out
and
xchg
arpl
stos
cli
dec
out
inc
mov
mov
aad
add
imul
cltd
fld1
sbb
test
lret
pusha
repnz
mov
push
bound
adc
push
out
xchg
ljmp
out
mov
pop
mov
out
pop
inc
cmp
pop
jne
arpl
cmpsl
push
mov
push
in
adc
sar
sbb
xlat
and
jno
rcrl
ljmp
push
std
test
insl
loopne
mov
xchg
in
repz
dec
xchg
fwait
xorl
pop
mov
les
lret
aas
inc
icebp
xchg
loop
lahf
xchg
imul
mov
add
push
mov
jbe
jno
notl
or
cmp
in
mov
scas
int
cmp
out
push
fisubl
jle
and
ret
test
cmc
xorb
push
mov
pushf
lock
mov
scas
push
xchg
add
jge
adc
push
divb
sub
xchg
pop
inc
pop
adc
push
shr
cmp
lret
pop
aad
sub
inc
mov
mov
popf
jnp
cmp
dec
add
xor
push
xchg
rcll
decb
and
pop
shl
dec
pop
jo
nop
jecxz
inc
insl
sub
dec
test
jg
xor
out
mov
mov
cli
cltd
dec
sti
cmpl
cld
je
push
fdivl
pop
fwait
or
sbb
push
dec
mov
mov
dec
test
aad
aam
repnz
jle
jle
pop
and
clc
out
ret
je
mov
dec
aas
stos
mov
mov
mov
mov
das
xor
mov
inc
jg
mov
dec
divl
test
dec
mov
daa
roll
cmpsl
insb
mov
xchg
fnsave
cmp
lahf
push
push
inc
rorl
sub
je
into
dec
fs
inc
test
ret
push
les
sbb
xor
sti
loop
jne
sub
xchg
dec
inc
dec
in
jno
xor
outsl
cmp
xchg
jmp
mov
push
ret
jae
lock
insl
aaa
push
jbe
pop
ss
rcll
mov
scas
das
movsl
pop
mov
cs
out
mov
or
dec
leave
mov
out
je
mov
add
push
test
cmp
jg
sub
rcll
repz
xor
mov
mov
rorb
push
and
inc
nop
stos
pop
cmp
mov
jne
out
addr16
push
dec
insl
jp
enter
or
push
cli
out
or
push
xchg
pop
add
aas
push
xchg
push
test
mov
pop
mov
mov
mov
push
outsb
test
jg
mov
rcll
push
mov
ljmp
mov
test
xor
pand
jb
aas
inc
pop
adc
or
mov
push
in
in
lods
cmp
in
nop
lret
stos
jecxz
fstps
mov
xchg
pop
add
sub
xchg
xor
sbbb
cld
mov
or
jp
adc
cmp
addr16
das
jl
fstpt
inc
pandn
lret
pop
or
scas
arpl
push
sub
xchg
push
ja
adc
movsb
mov
pop
jmp
or
mov
adc
mov
inc
out
jne
mov
xor
mov
scas
xchg
mov
dec
xor
jle
test
jae
mov
dec
push
stc
add
lea
ret
lods
test
std
insb
aad
bound
sbb
mov
ret
fisttpll
jbe
dec
push
mov
ljmp
ja
hlt
imul
cmp
out
stos
mov
mov
insb
pop
adc
dec
in
mov
pop
shrb
mov
lea
or
adc
loope
fwait
mov
sti
insb
cmp
mov
pop
out
fnstsw
stc
imul
jmp
test
loope
and
adc
out
arpl
ficomps
idivb
cs
mov
lods
lds
pop
out
cmpsb
fsts
adc
push
loop
das
lahf
lret
jg
mov
dec
les
inc
xchg
stos
and
xchg
xor
push
inc
adc
xchg
push
jg
int
push
cmp
add
pop
mov
aam
popf
pusha
shll
mov
jge
push
lret
jno
movsl
push
ret
adc
push
dec
add
cld
cmpl
push
fs
xor
adc
out
lret
cmp
lcall
fld1
mov
cmp
mov
push
xchg
push
push
sbb
push
dec
pop
dec
and
fsubrl
rcr
ss
xor
fs
popf
in
aas
cs
pop
mov
mov
std
or
mulb
cmpsl
fisubrs
out
push
fidivl
imul
repnz
jae
loop
jge
cmpb
adc
loopne
mov
push
fbstp
loop
cmp
loopne
mov
adc
fsubr
sbb
pusha
test
mov
sub
or
pop
cmpl
and
lock
push
dec
insl
sbb
stc
inc
sbbl
adc
loop
cmc
dec
mov
pop
push
jle
or
das
fildl
and
stos
stos
test
test
adc
xchg
mov
out
test
repnz
cwtl
jecxz
mov
lret
dec
sub
roll
insb
adc
lods
scas
or
adc
or
dec
lret
aas
neg
adc
push
jnp
and
push
push
mov
movsl
mov
loopne
nop
sbb
popa
jg
ljmp
mov
rcll
or
jecxz
fwait
sbb
iret
scas
mov
push
lock
mov
rcll
mov
div
sbb
cmpl
mov
sti
jmp
or
loop
lds
cld
loopne
mov
mov
mov
push
dec
sbb
jge
add
xor
lcall
jge
mov
test
sub
subb
jbe
adc
sub
decb
or
lcall
aaa
fisubrl
fistpll
jne
mov
insl
adc
jns
in
std
dec
loop
clc
lods
lret
out
xchg
in
movsl
jnp
fwait
cmpsl
pop
adc
fwait
into
ljmp
sbb
jg
popf
and
int3
inc
inc
movsl
push
cltd
out
mov
call
mov
adc
push
cs
mov
ss
rolb
xchg
push
cmp
insl
fucomi
je
sbb
adc
xchg
sbb
fisttpll
mov
adc
and
clc
std
sbb
lret
push
popa
lret
icebp
repz
test
cld
xor
xchg
xor
incl
mov
lock
loopne
add
rcrb
cli
jecxz
lmsw
push
cmp
popa
mov
stos
sti
stos
rcr
bnd
pop
adc
push
out
jmp
les
mov
in
mov
movsl
push
lods
subl
bound
dec
into
xor
dec
pop
out
cmp
js
movsb
flds
int
fidivrl
pusha
push
sbb
stc
sti
and
mov
jle
dec
push
scas
adc
push
xchg
cld
jl
jbe
bound
ret
push
shr
addl
cmp
mov
movsbl
lods
adc
pop
xchg
xor
jl
push
sub
xchg
fsubrl
nop
sbb
inc
inc
sub
xchg
dec
lea
mov
cli
and
sbb
mov
roll
lret
fidivl
mov
xor
lods
loopne
mov
sbb
push
loope
out
dec
movsb
jne
mov
outsl
mov
in
mov
dec
bound
mov
mov
push
mov
ret
ds
movsl
sub
pusha
scas
lock
inc
mov
or
aaa
ss
sti
xchg
dec
dec
outsl
mov
pop
ss
rclb
or
jae
lret
in
inc
psubw
mov
out
xchg
pop
inc
pop
xor
mov
bound
push
mov
or
cmc
jmp
mov
sbb
bound
lods
stc
stos
fsts
andl
int
divl
inc
push
jnp
aad
shl
xchg
push
pop
cmp
pop
dec
mov
cmp
pushf
gs
das
out
ret
ret
mov
mov
insl
fldl
out
into
stc
gs
imul
popa
push
cmp
and
pop
or
stos
jecxz
mov
pop
sub
xchg
pop
sbb
dec
popf
aam
loope
pop
and
xchg
cmpsl
and
mov
aas
push
mov
inc
test
inc
and
pop
sub
das
dec
int
std
das
mov
insl
ret
sti
add
stc
stc
movsb
stos
mov
repnz
jns
out
and
or
cs
push
cmpsb
push
cmp
sbb
cld
add
out
mov
xor
jno
test
icebp
clc
cmp
xchg
pop
push
fadd
push
mov
sti
je
sbb
jns
dec
and
or
dec
std
fdivs
scas
xor
ror
fsubs
cli
or
or
sbb
fwait
les
sub
or
xor
repnz
cmp
push
sub
adc
lahf
dec
ja
int3
and
cmp
inc
cmp
fisttpl
inc
dec
pop
sub
sbb
jl
xor
outsl
pop
loop
ljmp
jmp
jge
scas
mov
pmulhuw
dec
inc
cmp
xchg
sub
fimull
mov
int3
dec
xchg
push
xorl
jl
sub
cmp
jg
aas
sbb
jl
std
ja
in
repnz
inc
iret
or
cld
inc
pop
scas
in
dec
add
jne
or
xchg
fimuls
dec
clc
js
jecxz
adc
lock
mov
sbb
jmp
js
rep
in
or
cmpsl
pop
imul
xchg
jb
jnp
pop
dec
call
gs
or
js
inc
mov
sub
push
jmp
mov
inc
jno
push
scas
loope
cmp
lods
inc
cmp
mulb
enter
adc
test
stos
test
stos
pop
sbb
out
outsl
jns
sbb
add
push
mov
xchg
xchg
sbbb
fstps
mov
and
mov
cltd
lods
mov
inc
cld
lcall
in
xchg
cmp
icebp
test
xor
lock
call
int
mov
sbbb
add
xchg
ror
mov
xor
mov
jl
jne
adc
pop
dec
pop
mov
inc
jae
adc
xchg
icebp
nop
es
jne
mov
stc
adc
loope
push
pop
mov
aaa
sahf
or
and
pop
pop
mov
mov
sbb
int
call
jmp
daa
push
out
ja
and
cmp
movl
xchg
ljmp
jbe
ret
mov
ja
sahf
test
lahf
ret
add
pushfw
pusha
out
push
in
clc
gs
out
xchg
popf
stos
test
test
cmpsb
fstpl
sahf
push
add
nop
adc
js
in
repnz
stos
push
lret
mov
inc
leave
loope
loope
lock
adc
and
fcmovnb
ljmp
jmp
xchg
sub
and
sbb
mov
std
jne
cmpb
sub
rolb
test
dec
mov
mov
shll
stos
orl
inc
mov
add
rclb
xchg
out
out
xlat
in
lret
ss
cmpsb
add
mov
xchg
stc
add
sub
and
insb
sbb
and
fwait
pop
sbb
mov
adc
sbb
mov
jp
les
int3
and
inc
xchg
aas
sbb
cmp
xor
pop
je
or
inc
xor
stos
test
scas
ja
faddl
sbb
mov
push
cmp
ret
pop
imul
and
pop
repz
mov
xlat
xor
lods
lret
imul
and
xorb
ficompl
mov
mov
gs
mov
movsl
mov
pop
cmp
mov
dec
mov
test
add
jecxz
xchg
mov
rolb
push
fwait
leave
out
push
fdivs
xchg
lea
sbb
mov
ja
nop
ss
cmp
int
dec
hlt
dec
das
push
jg
ds
test
cmp
pop
mulb
mov
jns
xor
mov
mov
je
add
sub
cwtl
mov
iret
xchg
pop
dec
in
dec
pop
xlat
sahf
std
imul
cmp
inc
dec
dec
int3
outsb
lods
push
mov
pop
or
aam
mul
mov
ja
jge
push
xchg
add
xor
mov
xor
repz
mov
mov
jbe
push
mov
xorb
mov
xchg
mov
ficoms
lods
cmp
pop
in
into
clc
push
dec
push
in
sahf
es
adc
pop
or
sub
les
into
jl
shrb
jle
insl
ljmp
or
cmp
pop
cmp
test
xor
mov
mov
mov
xchg
mov
fstpl
jne
aaa
lods
xchg
xchg
repz
popa
std
out
idivl
pop
jnp
add
jns
push
stos
dec
pop
push
pop
ror
mov
pop
mov
ret
out
jo
adc
cmp
fadd
mov
add
mov
inc
mov
lods
rclb
bound
fimull
stos
es
outsb
adc
notl
aas
pushf
sub
push
push
mov
jb
das
sub
scas
mov
out
cmp
pop
sahf
stos
xor
mov
cmp
inc
push
lret
xor
fildll
idivb
mov
test
or
mov
movsl
lock
dec
sti
enter
jo
shll
mov
dec
inc
stos
sbb
je
xchg
loope
push
outsl
jle
xor
dec
rcrb
sub
pminsw
mov
lock
push
mov
push
out
fldt
daa
call
imul
sti
popa
lret
jne
inc
push
push
rcr
shlb
lret
das
mov
sbb
pop
sub
push
sbb
cmp
pop
in
ret
pop
or
rcrl
fwait
sub
pop
cmpsl
adc
in
fwait
or
arpl
sbb
xchg
dec
pusha
xchg
scas
mov
pop
cmp
imul
lock
add
loope
xchg
sti
adc
clc
aam
mov
sub
push
icebp
bnd
jp
subps
mov
jmp
and
cmpsw
dec
hlt
clc
bnd
jge
jb
dec
aad
push
sbb
int
lock
stc
xchg
cwtl
sbb
push
sub
arpl
xor
push
sbb
jg
add
xchg
mov
or
lods
repz
data16
in
mov
push
inc
addr16
fildl
jbe
mov
or
popf
dec
pushf
pusha
mov
mov
xor
pop
mov
xchg
mov
and
outsl
jp
ret
dec
insl
and
sbb
fstl
push
out
lea
inc
fstl
or
dec
adc
cmp
addr16
push
rcl
call
pop
dec
pushf
jle
into
sub
sub
xlat
imul
fdivrs
mov
xor
adc
pop
shlb
pop
jmp
adc
mov
add
daa
dec
inc
ljmp
out
insl
les
mov
cmp
scas
jmp
outsl
pop
push
sbbb
xor
or
inc
xchg
dec
imul
int
mov
inc
inc
arpl
lock
leave
adc
adcl
sbb
testb
ds
xor
xchg
fnstcw
in
xchg
inc
jmp
jle
cld
jae
ja
out
mov
push
les
lahf
jo
xchg
pop
bound
xchg
jmp
sbb
push
and
insl
rol
rorb
mov
sub
lret
in
cs
sbb
adc
mov
mov
xor
adc
dec
jo
pop
add
leave
int3
and
ljmp
dec
sbb
ret
inc
cs
js
xor
push
test
andl
push
popfw
mov
test
xchg
sub
out
cli
clc
pop
popf
sti
or
int
shlb
jmp
push
test
jp
in
dec
push
test
pop
scas
cmpsl
sbbl
mov
lret
push
jno
loope
fwait
nop
mov
scas
imul
cwtl
cmp
jnp
or
and
sahf
test
popa
cvtdq2ps
sbb
jge
xor
pop
mov
movsl
lret
test
aas
push
aam
mov
fs
inc
jnp
pop
jecxz
insl
ja
lds
jns
xchg
rcr
xor
dec
sti
das
hlt
inc
jl
push
scas
lret
scas
adcb
push
cmp
inc
and
and
ljmp
testb
cwtd
orl
loopne
leave
scas
jl
dec
stc
clc
stos
sub
std
sbb
inc
data16
stos
fisubrl
cmp
xchg
cmp
filds
scas
arpl
scas
push
ljmp
adc
mov
scas
pop
sbb
inc
ss
ret
addr16
lock
inc
push
jle
sbb
mov
inc
cmp
inc
in
mov
push
mov
mov
dec
addr16
push
mov
insb
mov
inc
dec
int
sbb
mov
pop
mov
jg
and
and
pop
ret
pushf
movsb
xchg
mov
mov
mov
frstor
lds
jg
daa
out
xor
ret
stos
cli
lret
sub
pop
cwtl
mov
jne
pushf
loop
std
and
lret
adc
fiaddl
in
pop
xchg
jne
ret
dec
sbb
sarl
bound
bnd
iret
stos
cmpsl
push
icebp
xchg
mov
in
pop
jle
dec
hlt
mov
fmuls
fnstsw
sub
jae
xchg
hlt
push
aam
inc
mov
mov
pushf
push
mov
dec
pop
sbb
pop
adc
test
movsl
jne
pop
pop
and
jne
pop
mov
cld
adcl
dec
xor
fcom
sarl
jbe
fadd
mov
imul
call
jmp
stos
lds
push
fsub
jmp
mov
sub
imull
fisubrl
and
int
inc
pop
scas
cmp
add
dec
mov
mov
mov
cld
push
cmc
fwait
mov
jbe
imul
nop
push
insl
ss
out
mov
popa
ss
jg
pushf
leave
aad
insl
jecxz
in
mov
aam
fmulp
xor
scas
mov
clc
pop
loopne
inc
nop
cmp
aam
mov
mov
fldt
mov
cli
sbb
and
loope
stos
pcmpeqd
test
xchg
push
inc
ret
xchg
loope
xor
icebp
jbe
inc
push
push
jle
mov
mov
mov
inc
mov
cs
xchg
inc
in
push
sbb
scas
jg
movsb
call
push
lods
stos
jnp
das
mov
jmp
add
popa
out
ds
mov
or
jnp
loop
sub
and
call
jmp
or
mov
inc
push
pop
mov
jmp
mov
sub
inc
fdivr
cld
lahf
pop
pop
subl
roll
movsb
insl
xchg
jo
cld
ret
punpckldq
jmp
mov
repnz
dec
xor
xor
add
dec
scas
xor
outsl
add
mov
sbb
lock
hlt
sahf
dec
fwait
sbb
aas
js
adc
inc
or
cmp
js
mov
push
jbe
hlt
mov
or
push
xchg
sbb
or
scas
ret
shlb
fs
xchg
lods
imul
inc
pop
fldcw
or
adc
add
mov
icebp
addr16
shll
insb
fwait
pop
test
sbb
jmp
bound
or
enter
xor
sbb
ja
xor
mov
mov
mov
mov
push
mov
test
and
sub
std
scas
test
test
jge
xchg
xchg
jne
lds
pop
push
mov
arpl
cmc
xchg
enter
ret
xchg
cwtl
hlt
mov
cs
int3
decb
fadd
xchg
mov
negb
popa
fisubrl
push
out
popf
or
aaa
cmpsb
or
cmpsb
mov
ret
jge
push
pop
call
test
out
popf
call
mov
or
lcall
mov
mov
daa
push
adc
jmp
push
xor
jecxz
xor
fs
daa
scas
adc
fiaddl
out
imull
cmp
imull
cltd
popa
mov
push
jge
outsb
push
movsl
xchg
add
fdivs
imul
outsb
in
or
inc
jbe
bound
dec
mov
mov
shrl
imul
and
cmp
dec
pop
shl
nop
addr16
sbb
cltd
loope
hlt
lds
xchg
inc
jae
insb
push
pop
into
idivb
mov
jb
mov
out
jbe
ljmp
add
jge
or
mov
inc
lret
subl
outsl
in
and
xchg
lret
mov
test
and
pop
shll
scas
adc
addl
fcomi
sub
dec
jbe
sub
aad
sahf
rcrl
in
fildll
test
pop
out
divl
test
inc
cmp
test
inc
push
stos
mov
sbb
mov
inc
hlt
xchg
xlat
lea
mov
andb
or
js
xor
jnp
in
fldl
in
sub
negb
xlat
adc
dec
and
push
xor
dec
fistpll
xchg
out
shrl
arpl
jge
sahf
or
xor
loope
sti
mov
aaa
idivl
push
jnp
lcall
enter
nop
sub
pop
add
sub
push
or
xorb
jmp
xchg
push
addl
mov
mov
clc
fs
pop
xchg
out
repz
cli
loop
mov
aam
stc
xor
mov
adc
push
insl
adc
jl
in
mov
pop
xchg
push
into
jnp
mov
xor
add
mov
lods
outsl
outsb
push
xlat
push
mov
jle
xchg
mov
xor
mov
fidivs
cmp
cwtl
dec
lods
jae
pop
sub
xchg
imul
jns
ret
repz
or
xchg
jb
xchg
popa
rorb
push
xchg
mov
push
sub
mov
ret
or
pop
rep
in
xchg
jle
xor
cmpl
push
ljmp
orl
push
in
jne
xor
inc
ja
push
insb
sub
push
cmpsb
inc
jns
test
scas
jae
outsb
arpl
lods
mov
xchg
lock
je
incb
sub
pop
pushf
pop
outsl
dec
rclb
rorl
cmp
inc
pushf
es
enter
je
ret
sub
loopne
lods
ret
addr16
movsl
and
pop
test
ljmp
adc
dec
adc
cld
inc
aam
aad
int
ds
push
ds
jecxz
xor
jnp
adcl
mov
test
push
mov
xor
inc
dec
stc
mov
push
jle
and
xchg
xchg
mov
mov
xchg
pop
popf
jne
dec
xchg
cli
test
cmc
ds
sbb
inc
adc
in
mov
arpl
add
mov
dec
int3
fwait
out
int3
gs
icebp
cs
sti
stos
out
xorb
aam
pop
ljmp
and
in
lods
rep
pushf
mov
movsl
loop
cltd
mov
daa
clc
dec
fs
dec
sub
cld
and
jecxz
in
push
xchg
repnz
addr16
jnp
out
jbe
mov
rcl
lods
cmp
insl
loopne
aam
scas
push
shlb
aam
es
stos
mov
xchg
add
cli
xor
out
pop
into
stos
aad
lahf
cld
inc
sub
das
je
xor
or
std
iret
push
pushl
mov
icebp
adc
shl
pop
xor
xor
imul
sub
dec
jae
sub
nop
cmp
jnp
add
sub
sub
sbb
dec
inc
pop
fistpll
pop
shlb
aas
jo
lods
xchg
xchg
adc
movsl
push
adc
inc
pop
sub
fisttpll
inc
pop
stc
adc
jb
mulb
adc
push
mov
outsl
fwait
mov
clc
mov
sub
lock
orb
call
cmp
jge
call
jo
mov
push
jg
fimuls
jno
rcrl
outsb
xlat
ds
jno
lea
hlt
mov
mov
mov
es
sub
sbb
ja
repnz
je
cmpsb
je
cmpsb
orl
inc
add
push
xlat
xchg
xor
repz
dec
jl
cwtl
addr16
or
mov
loopne
stos
push
jb
push
fdivs
cmpsl
es
push
imul
pop
mov
fcoml
cld
jne
and
test
icebp
addr16
les
jmp
xchg
movsb
enter
adc
mov
stos
into
lret
data16
adc
cmp
sub
mov
lret
jp
jb
scas
dec
jge
or
in
addr16
mov
and
mov
adc
adc
in
mov
clc
fnstcw
aam
xor
jno
pop
dec
cmp
in
push
push
mov
repz
mov
mov
das
test
or
insb
lods
jno
push
aad
loope
pop
and
lock
setle
mov
fstpt
mov
push
into
scas
cwtl
cmp
sahf
fwait
xlat
ja
push
lock
push
filds
push
fiadds
xchg
mov
jg
stc
adc
insl
push
pop
cmp
pop
pusha
mov
pop
out
xor
xchg
mov
fmuls
out
lret
stc
push
incb
js
adc
int
dec
out
andb
add
mov
or
xchg
and
test
xor
movsl
mov
jns
jp
lea
mov
loope
mov
jg
aam
push
push
jne
jmp
add
push
outsl
lods
and
mov
xor
enter
es
incb
jae
aam
jbe
mov
or
daa
inc
xchg
sbb
sbb
ret
sarb
out
xor
je
pop
push
or
mov
cli
repz
cli
mov
push
movsl
jg
scas
sbb
ffreep
std
add
mov
pop
pop
sarb
mov
pop
inc
jmp
in
scas
and
cmpsl
mov
imul
push
roll
scas
fs
gs
jmp
js
add
sbb
jbe
imul
pop
jns
lock
das
test
cmp
xor
movsl
mov
add
push
push
in
fst
push
dec
pop
in
cmp
mov
mov
cmp
dec
ss
xchg
sub
inc
nop
xorb
data16
stc
jbe
idivl
mov
out
mov
push
clc
jecxz
cld
mov
or
dec
test
xor
mov
subb
xor
pusha
mov
aad
test
imul
cmp
mov
pop
xor
divl
add
lods
dec
lock
pop
pop
test
xchg
mov
xor
loopne
xchg
jae
adc
test
sbb
out
mov
les
and
sub
leave
pop
xor
sti
xchg
pop
xor
inc
std
dec
inc
xchg
xchg
lods
js
adc
push
bsf
dec
mov
jg
movsl
fistpl
push
test
mov
pop
popl
sarl
jecxz
imul
xchg
jle
xor
sub
cmpsl
sub
dec
mov
or
jae
shlb
in
add
sbb
aaa
bound
stos
mov
ljmp
sub
dec
aam
xor
jb
inc
je
stos
fcmovb
push
imul
adc
lret
dec
aas
mov
or
aas
sub
sahf
sahf
clc
dec
sub
jno
sbb
cmpsl
inc
and
xor
cmp
pop
or
cmc
in
pop
jbe
add
cmove
pop
mov
mov
mov
js
cs
adc
xchg
push
scas
push
enter
dec
jns
js
icebp
xchg
out
mov
cmc
inc
sub
push
mov
add
cli
mov
add
popf
ljmp
in
scas
push
lds
push
push
cmc
push
sbb
fsubr
push
push
scas
or
jo
andb
es
int3
jb
mov
rcrl
cmpsb
jo
shl
cmp
adc
and
js
fisttpll
fisubrl
cmp
or
stos
pop
frstor
imul
cwtl
jmp
pop
aaa
aaa
sbb
cmp
xchg
and
and
inc
movsl
dec
cmpsb
jl
leave
xlat
leave
add
bnd
nop
js
sbb
cld
sbb
cmp
mov
test
mov
mov
cwtl
ljmp
fs
push
cld
xor
in
cmp
push
jecxz
icebp
aaa
imulb
xor
jae
adc
sbb
mov
mov
cmp
shlb
lcall
sbb
aam
mov
dec
sub
ficomps
mov
jle
cmp
adc
dec
in
repnz
pop
out
jg
das
mov
jo
and
frstor
inc
mov
fs
mov
fistps
push
pop
xchg
jbe
sbb
inc
scas
push
js
daa
mov
movsb
push
dec
sbb
mull
add
mov
mov
cwtl
outsb
testl
std
scas
out
push
insb
pushf
sbb
out
mov
xchg
movsb
bound
dec
cmpsl
pop
ficomps
repz
add
xchg
sbb
addr16
shr
shr
mov
ret
les
cmpl
adc
push
mov
mov
push
sub
or
xchg
cs
sahf
sbb
sar
andl
inc
dec
aas
rcll
in
cmp
mov
pop
xchg
add
cli
xchg
pop
and
ja
loop
jg
sti
bound
les
es
fcoml
add
dec
or
hlt
lret
dec
lcall
sub
xchg
cltd
cmp
push
ja
pop
lret
pusha
mov
jnp
loope
test
dec
pop
fdivl
lahf
push
cmp
fstpt
jne
or
dec
out
or
lods
int3
outsl
out
and
leave
outsb
mov
sahf
lods
push
mov
pop
adc
sbb
outsb
and
mov
pop
push
ja
out
pop
push
sub
mov
fwait
xlat
mov
mov
jno
sub
popa
popa
pop
imulb
pop
stc
popf
fldenv
outsb
js
test
in
xchg
mov
push
fucom
jmp
orb
mov
insl
lcall
in
mov
inc
jg
and
mov
push
inc
sbbl
xorb
cmp
pop
push
call
sbb
mov
fisubrl
popa
push
mov
aas
call
in
add
inc
xchg
xor
adc
popf
fisttpl
js
mov
and
push
push
mov
sbbl
push
addr16
ss
push
lea
sub
roll
inc
mov
out
arpl
repz
mov
mov
lret
loopne
cmpsb
test
lods
cltd
xor
lahf
stos
in
cmp
orb
rol
in
das
jl
ss
push
sub
dec
inc
aad
add
call
insl
inc
loopne
add
adc
ja
or
lock
in
mov
std
popf
lea
in
lock
or
sub
sub
ret
mov
jmp
dec
call
add
mov
mov
pop
mov
out
mov
jg
sub
mov
aas
xchg
jmp
mov
mov
dec
push
loop
out
xchg
gs
sub
adc
lods
cmp
push
stos
ret
mov
stos
push
insl
sbb
paddb
push
pushf
scas
mov
outsl
out
scas
cmp
sti
xor
lret
mulb
jecxz
pop
dec
int
lret
adc
mov
fiadds
xor
jecxz
mov
cmpsl
daa
out
loopne
xorl
int
stos
adc
mov
or
enter
sbb
mov
mov
mov
fs
mov
jle
adc
push
std
xchg
mov
test
pop
ret
outsb
and
mov
xchg
mov
push
xchg
push
mov
inc
dec
test
mov
shrb
int3
cmp
xchg
fmull
std
xor
jmp
xor
js
cld
xor
mov
idivl
les
xor
jmp
sub
fidivrl
push
pusha
adc
in
insb
fcoms
inc
xor
jge
scas
jl
ss
lret
cld
cmp
cmp
gs
shlb
fmuls
mov
inc
test
call
fwait
ror
je
pop
sahf
arpl
mov
bound
push
bound
xchg
movsb
jnp
in
xchg
mov
icebp
outsl
xorl
jno
pop
movsbl
fs
inc
popf
fsts
xor
lods
loopne
add
stos
cmpsb
call
xchg
mov
inc
add
push
or
movsl
xchg
dec
hlt
lcall
sbb
mov
cltd
sub
mov
mov
xchg
jmp
sbb
jns
aas
jns
cwtl
lcall
xchg
out
das
mov
cmpsl
dec
sub
cwtl
cwtl
jae
or
std
xchg
iret
mov
lock
adc
xchg
leave
rcrb
mov
jb
mov
aad
std
adc
pop
dec
test
jns
mov
push
scas
sub
into
jns
in
mov
pop
pop
push
shlb
or
icebp
shll
lahf
in
mov
pop
ja
sbb
and
sarl
jno
aaa
mov
mov
fdivrp
xchg
xor
mov
hlt
in
into
popa
fsubrs
or
and
xor
jmp
add
sbb
sub
mov
sbb
cld
pop
jne
scas
xor
or
ret
in
and
aaa
cmp
mov
dec
clc
std
mov
popa
push
mov
xor
add
mov
cmp
mov
rcrl
fwait
pop
push
xor
pop
test
sti
aaa
fiaddl
fimuls
sbb
mov
lds
push
pop
aas
mulb
fucomip
jecxz
scas
daa
xchg
jecxz
movsb
aam
hlt
cld
jge
int3
out
jmp
jne
out
mov
pop
rorl
sbb
mov
sbb
iret
push
repnz
push
inc
inc
cli
aas
push
jnp
repnz
mov
or
mov
xchg
and
mov
jl
lds
xchg
fimuls
clc
bound
sbb
data16
scas
pushf
cs
daa
js
cmp
rorl
mov
lahf
in
icebp
imul
push
inc
frstor
mov
pop
xchg
rolb
jge
lods
push
adc
lret
mulb
js
inc
imul
push
call
in
xlat
mov
je
pop
loope
and
xlat
int
pop
mov
rcrl
mov
adc
cld
shl
lock
cli
or
into
les
push
ficoml
sub
daa
or
aaa
add
mov
shl
outsb
lods
dec
imul
in
push
shl
mov
xchg
mov
jmp
scas
xchg
iret
xor
mov
dec
pop
mov
and
pop
imul
dec
enter
stos
lahf
push
ja
in
mov
pop
in
xchg
insl
mov
lcall
insl
inc
sub
sub
xchg
push
mov
mov
repnz
pop
shr
jmp
sbb
or
lods
cmpsb
jno
dec
inc
pop
aam
xor
and
imul
sbb
cli
jns
in
push
cmp
mov
mov
popf
dec
inc
adc
sub
loope
stos
cld
sarb
cmp
push
jnp
out
repz
mov
pop
daa
and
aam
push
sbb
sub
repz
push
mov
sti
in
scas
insb
jmp
fnop
pop
push
rol
dec
mov
nop
xchg
lods
pop
jnp
cmpsb
mov
lret
mov
sub
scas
fdivl
mov
cmpsl
mov
addr16
push
cmp
imul
fldt
or
mov
clc
sahf
addr16
cltd
clc
ds
xchg
out
stc
jecxz
iret
lods
xor
xor
bnd
xchg
sar
jbe
push
or
sub
xchg
jle
das
mov
pop
jb
push
and
push
bound
mov
sub
les
jge
xchg
mov
iret
push
mov
xchg
or
xchg
stc
push
inc
movsl
aad
mov
roll
daa
adc
andl
jmp
xor
popa
rolb
push
bound
pop
pop
xorb
add
loope
pop
cmpsl
in
ss
jmp
cmc
push
loop
js
arpl
stos
movsb
pop
frstor
cmp
lea
out
fistpl
or
cwtl
mov
les
stc
pushl
or
imul
cmp
adc
mov
mov
inc
mov
adc
test
mov
jns
lcall
push
cmpsl
push
or
fmuls
mov
inc
test
jl
pop
jmp
mov
stos
mov
jecxz
inc
push
sub
adc
cmp
sbb
cmpsl
push
dec
fmull
xchg
das
lea
push
pop
pop
mov
fbld
cltd
mov
lahf
add
pop
gs
pop
dec
lcall
mov
std
mov
pushl
or
push
inc
cmp
gs
sub
cmp
xchg
mov
push
in
mov
outsb
or
pop
imul
and
call
mov
mov
lahf
mov
pop
adc
sbb
push
jne
loope
or
fiaddl
inc
sub
outsb
pop
cmpsb
outsb
repz
ficoml
xor
dec
add
jbe
pop
add
xor
rolb
mov
push
pop
movsb
sbb
cltd
loop
mov
jl
fwait
leave
pop
stos
in
jnp
dec
hlt
cmc
lret
lock
lods
into
sub
jg
mov
scas
mov
movb
addr16
shll
insb
adc
icebp
rcrb
cltd
mov
sbb
xchg
movsb
mov
dec
out
or
jno
mov
sbb
lret
fidivrs
jo
into
mov
mov
je
imul
lock
outsl
cld
shlb
loope
testb
adc
loope
mov
push
push
pop
stc
call
std
xchg
fucomp
in
push
out
mov
test
repz
inc
mov
mov
rol
loop
imul
fs
lahf
fcompl
and
shll
mov
into
outsb
rol
cmp
jl
aaa
sarl
or
jge
mov
lcall
daa
xchg
jne
mov
xchg
sti
popa
rcrb
in
out
sti
shrl
aad
push
sarl
mov
mov
jge
cli
sub
lods
mov
xor
repz
xor
sti
push
or
adc
sbb
xchg
mov
push
repz
and
fucomip
mov
in
mov
inc
or
cmp
push
jle
mov
jb
scas
pop
push
jae
les
dec
pop
cmc
dec
mov
pop
arpl
outsb
or
cmc
test
enter
sbb
add
test
xor
movsb
jge
stos
mov
int3
sub
ja
je
pop
call
xchg
mov
add
push
loope
or
pop
xchg
stos
cmp
mov
jmp
cmpb
js
pop
jge
out
cmp
inc
cmp
mov
sbb
mov
cs
std
xor
mov
dec
xchg
pop
sahf
xadd
sub
cmp
comiss
movsl
test
jne
in
cmp
repnz
loopne
mov
push
dec
aas
dec
aas
mov
adc
loopne
sbb
out
loop
fcomp
cmpsb
cltd
aam
mov
shlb
cmp
fildl
cmp
adc
and
mov
and
and
or
pop
push
mov
push
in
jge
push
adc
fsubrp
sbb
push
jb
jp
in
inc
mov
sub
js
pop
arpl
test
imul
mov
mov
les
movsl
mov
fcmovbe
ljmp
test
decb
mov
mov
push
popf
jmp
mov
out
movsb
xlat
xchg
jle
enter
and
fidivl
ret
leave
xchg
push
sub
idiv
push
clc
cmp
imul
mov
or
es
je
pop
jne
jns
cmp
lods
inc
into
stos
jb
sbb
addr16
push
or
movsl
rorb
iret
add
xchg
in
leave
cmc
subl
mov
out
adc
loop
or
out
movsl
rcl
cmpsl
aaa
pop
aam
ds
sti
and
inc
cmp
mov
out
adc
push
shrl
lcall
fistpll
sbb
mov
or
aas
cltd
ficoml
mov
pop
xchg
sti
pop
and
in
add
aas
lcall
out
aaa
mov
out
adc
push
insl
ds
inc
notl
adc
mov
sbbl
repz
xlat
or
pop
mov
bound
fsubrp
test
inc
pushf
scas
divl
xchg
aas
add
pop
cmp
push
test
push
negb
xor
icebp
xacquire
out
jnp
or
incl
and
std
mov
xchg
xchg
stos
stc
loopne
cmp
es
mov
mov
iret
mov
sbb
sbb
cmp
sub
lods
lds
and
push
stc
in
call
jo
repz
lret
push
nop
push
popa
jle
push
mov
ja
or
add
sub
aas
addr16
lahf
mov
outsb
sti
xorl
lahf
xchg
dec
lods
sub
adc
arpl
push
xor
xor
ret
loopne
stc
out
movsl
push
pop
inc
mov
lret
xor
popa
xchg
dec
sbb
mov
imul
stos
jp,pn
mov
adc
mov
mov
push
test
jmp
gs
movl
lret
lret
addr16
lea
mov
push
and
lret
jnp
sahf
jge
adc
pop
mov
jle
mov
addr16
pop
mov
sub
scas
ds
cs
push
sbb
mov
lea
mov
es
stos
ret
outsl
cmp
in
neg
pop
pop
push
popf
add
jne
out
xor
adc
push
adc
xlat
lahf
in
lods
xor
mov
push
mov
xor
cmc
adc
in
test
pop
negl
aas
testb
xor
push
pop
xor
and
cmp
dec
push
and
dec
jl
repnz
cli
loope
into
mov
xor
jne
test
adc
pop
mov
inc
or
add
std
jl
sbb
cmp
stos
ret
bound
sti
adc
mov
push
push
jle
jns
es
scas
sub
rolb
xchg
mov
mov
xor
fimuls
sub
mov
jnp
and
cmp
test
shr
sbb
hlt
xor
fs
sbb
ret
lcall
movsl
test
pusha
in
ds
cs
inc
mov
jnp
loopne
cltd
cmp
in
dec
cmp
dec
fistpl
adc
scas
and
lds
cs
sahf
pop
bound
lcall
pop
cmp
lds
imul
nop
out
push
movb
push
xchg
jns
out
push
ficoms
shll
hlt
test
dec
pop
xchg
jmp
stos
or
add
cmp
xchg
push
stos
cmp
push
add
imul
lahf
imul
adc
leave
sbb
aam
push
sbb
xor
andl
fnstenv
and
mov
dec
mov
adc
and
cltd
lods
xor
lret
mov
jne
cmp
fldt
insb
cs
mov
das
aas
in
or
stc
adc
add
test
dec
push
xchg
xlat
pop
mov
gs
test
adc
xchg
lods
mov
pop
stc
fdivrs
sub
push
push
and
push
push
fs
pop
les
xor
push
sub
mov
push
mull
cmp
loope
mov
cmc
push
in
cs
push
nopl
adc
sbbl
adc
outsb
push
push
push
shll
ljmp
dec
mov
aam
testb
push
out
loope
cli
aam
pop
fwait
push
sub
dec
mov
xlat
xor
cmp
mov
mov
pop
icebp
jge
adc
test
in
jo
gs
fidivs
pop
lds
outsb
and
pop
mov
popf
js
testl
cmp
add
mov
das
ds
mov
sub
ret
mov
clc
je
jle
outsb
xlat
mov
adc
stos
dec
add
mov
adc
pop
aam
mov
movsb
mov
scas
aad
aas
and
out
jmp
popa
pushf
out
pop
sub
or
stc
add
dec
test
cmp
jg
xchg
mov
inc
jae
adc
inc
xchg
cli
lret
ljmp
mov
xor
pop
xchg
stc
sti
pop
jo
aaa
call
in
inc
in
pop
mov
test
inc
push
add
rcr
or
xor
cmpsb
dec
gs
jb
lods
push
pop
test
cld
jmp
sarl
mov
loopne
inc
and
jne
dec
mov
cli
cmc
cmp
gs
jle
push
mov
sub
jecxz
cmp
push
jno
mov
cmpsb
mov
dec
pop
cmp
imul
xchg
jo
movsl
outsl
mov
in
outsb
dec
cmp
xor
sub
lahf
aaa
mov
cmp
daa
adc
sarl
cmp
shrb
pusha
sbb
enter
cmp
or
fbstp
xor
scas
mov
shrb
mov
int3
idivb
and
and
repz
aaa
jnp
fisubl
pop
ja
pop
in
sarl
and
ror
call
fwait
mov
sbb
call
adc
sbb
je
dec
jns
dec
movsl
pop
jae
xchg
jnp
stc
insl
mov
sub
out
lods
fsubs
shll
movsb
fimuls
push
and
xor
sbb
aaa
jno
nop
out
pop
cmp
and
std
pop
into
cli
xchg
and
sub
mulb
xchg
jne
jge
mov
push
ret
test
lods
test
addr16
popf
nop
dec
and
fadds
cmpsb
xor
ret
adc
add
adc
push
jl
pop
mov
xchg
lock
or
arpl
add
out
out
mov
rcrl
bound
cs
insl
arpl
or
scas
adc
lea
jmp
rorb
ss
jge
mov
in
xchg
sbb
inc
sbb
ja
and
stos
sub
mov
jno
inc
cmp
ret
iret
xor
jmp
and
mov
popa
mov
in
jbe
mov
popf
out
mov
mov
adc
repnz
rorb
add
push
mov
xchg
sub
jle
dec
add
scas
stos
lret
mov
loop
sbb
fdivrs
adcb
repnz
fidivrl
and
lret
je
inc
push
push
or
leave
fidivrs
add
loopne
or
inc
sbb
xchg
out
shll
shl
jecxz
repz
movl
sbb
insb
jns
out
lret
into
fstps
addr16
jns
imul
xor
movsb
cmp
imul
mov
mov
cltd
in
movsl
dec
sub
sub
int
call
sub
xlat
sti
mov
push
mov
xlat
cmp
mov
sbb
pop
in
pop
shrl
sbb
pop
xchg
out
data16
adc
stos
sub
pop
ja
mov
mov
push
mov
sub
jae
mov
jmp
fistpll
mov
sahf
xchg
add
cmp
sub
and
pop
cmpsl
inc
sbb
cld
jmp
xchg
cmp
stos
lahf
or
jne
sbb
add
sub
xchg
or
xchg
in
inc
mov
mov
out
fmuls
cmpb
and
push
jns
sbb
mov
push
mov
movsl
nop
in
push
mov
lcall
push
and
xchg
sahf
test
repnz
pop
gs
pop
sbb
loopne
jecxz
decl
adc
repnz
push
mov
inc
out
jp
jmp
xchg
xor
jo
clc
and
fcoml
stos
sub
push
pop
call
mov
pop
xchg
sti
xchg
jb
subl
jmp
cwtl
fwait
jne
pop
ds
push
js
push
push
and
adc
insl
push
mov
push
ret
mov
xor
call
push
imul
adc
std
or
mov
pop
cmp
dec
lcall
mov
pop
negl
sub
mov
shlb
in
dec
cmpsl
sub
shlb
mov
pop
push
lea
fistpll
pop
mov
fwait
pushf
cld
pushf
mov
mov
lods
sub
pop
cmpb
insb
jmp
mov
adc
das
cld
add
mov
xor
lds
gs
not
pop
loop
popf
test
int
cmp
cmp
xchg
daa
cmp
es
ss
leave
stos
xor
jmp
cs
in
in
lcall
sub
ds
push
repnz
js
je
mov
pop
scas
add
pop
xor
jmp
inc
cmpl
gs
sub
imul
stos
add
ss
dec
dec
cvttps2pi
jmp
jmp
dec
movl
jnp
mulb
cli
cmp
jnp
inc
stos
in
xlat
mov
mov
insl
insb
dec
xor
push
outsl
push
out
xlat
bound
fsubrl
fwait
fwait
cmp
sbb
inc
pusha
mov
ja
jmp
adc
mov
fisubrs
pop
xlat
repnz
mov
in
dec
jp
shl
add
pop
cmp
xchg
push
lret
jl
jl
push
jns
and
out
pop
fs
push
arpl
lds
aam
icebp
mov
js
call
cs
cld
les
nop
popa
adcl
jge
or
rcll
cli
jbe
push
sub
negb
add
cld
js
ret
and
scas
push
clc
push
js
out
xchg
xorb
mov
xchg
repz
pushf
and
sub
in
outsl
cli
aaa
push
sub
xchg
sbb
mov
loope
rcrl
sub
jo
or
ja
ret
aam
cmc
xor
and
or
ss
enter
loope
add
jecxz
lret
jmp
pmaddwd
xchg
das
ljmp
loop
xchg
dec
or
jo
addr16
out
mov
cmp
imul
sbb
xchg
jecxz
add
into
nop
shlb
and
cwtl
lret
sti
ja
pushf
xor
push
std
out
inc
ja
sbb
cli
loopne
mov
aas
mov
fimull
in
in
jge
mov
pusha
push
mov
sub
ds
jg
popa
mov
xor
call
push
in
hlt
test
je
push
push
lods
dec
fstl
insl
inc
mov
fs
jbe
sbb
sbb
or
ja
cmp
inc
xchg
xor
lock
and
xchg
scas
xorb
pop
jne
mulb
aam
mov
insl
xor
adc
pop
dec
dec
repz
aad
jbe
out
fsubrl
ljmp
mov
xor
push
dec
test
iret
fdivl
mov
jnp
push
loopne
das
incl
mov
mov
cmp
and
cmp
les
outsl
mov
std
xlat
or
mov
pop
rorl
or
mov
mov
std
mov
scas
mov
or
ret
push
out
dec
es
rcrl
fbld
nop
push
testb
mov
sbb
and
loopne
out
test
jo
js
lret
jnp
cs
jne
andl
sub
bound
cltd
jge
lahf
pop
inc
mov
filds
insl
outsl
testb
mov
pop
aas
fs
jmp
lret
sbb
jbe
inc
lret
out
adc
xchg
loopne
jbe
mov
sbb
lret
push
mov
rcrl
lods
cmc
ja
roll
cli
mov
pop
pop
pop
ret
mov
jns
clc
or
sar
pop
lods
mov
push
leave
and
jl
or
sbb
in
jg
cmpsl
nopl
dec
addr16
mov
fdivs
in
sarb
adc
jno
loopne
sub
sbb
test
cli
popa
repnz
int
sub
adc
cltd
cmpsl
das
lock
repz
mov
lods
jno
jle
sbb
dec
jp
adcb
in
and
std
add
push
outsl
jnp
pop
adc
or
inc
inc
and
push
inc
xor
jne
and
jb
mov
xor
ret
mov
and
lods
mov
lret
and
pop
xchg
insb
add
dec
push
mov
mov
or
scas
mov
mov
js
xchg
dec
xchg
movsb
cmp
mov
pop
gs
jmp
out
std
std
imul
stc
ds
repnz
xchg
aas
pop
dec
jmp
pushw
setl
repz
out
jae
dec
sbb
dec
in
and
lods
movsl
mov
jnp
fnstenv
fcomps
mov
jmp
pushf
xchg
fdivrl
loop
fcomps
sub
cmc
sbb
dec
in
cmpsl
add
out
fdiv
addr16
lret
push
fstpt
ljmp
test
xorb
pop
outsb
dec
into
jmp
dec
in
push
mov
sbb
ret
aam
lods
push
shr
lods
push
adcl
jbe
leave
jl
gs
xchg
mov
sub
in
push
cmp
jecxz
scas
jecxz
add
lea
cmp
push
nop
jne
mov
pop
jbe
and
lock
pop
aaa
mov
mov
cltd
sub
and
ret
mov
sbb
wrmsr
je
pop
fsubrl
es
mov
mov
mov
sbb
stos
aaa
lea
pop
jne
loope
sub
sub
inc
insb
insb
enter
in
bswap
pop
xchg
and
iret
cld
inc
mov
push
hlt
lcall
lret
mov
add
adc
push
pop
xchg
lret
push
adc
int3
dec
clc
imul
aas
jo
mov
sbb
aaa
fidivs
push
sub
rorb
inc
or
mov
sti
inc
dec
and
push
xor
pop
fstl
es
repz
dec
push
lcall
pop
or
jo
daa
imul
jo
sahf
dec
out
push
xor
push
push
arpl
xorl
lcall
out
xchg
std
push
ret
adc
scas
imul
stos
out
ret
stos
int3
adc
mov
add
lea
jl
pop
xor
test
fcompl
add
push
sbb
xchg
stos
mov
push
das
popa
cvtpi2ps
lret
pop
cs
stos
stos
xor
cmpsl
sub
mov
xlat
mov
cld
cmp
jo
dec
cmp
js
adcl
popa
jnp
rcll
inc
test
mov
mov
xchg
loopne
jbe
sbb
ret
jae
sub
dec
shll
jo
sub
enter
cmp
std
loope
imulb
inc
mov
rol
cmpsb
adc
push
mov
push
jle
ret
into
pop
mov
pusha
mov
mov
fsubrp
insl
enter
xor
xchg
xchg
push
ja
shll
fldenv
outsb
pop
jbe
data16
jecxz
cmpsl
enter
repnz
jge
jmp
aaa
pop
ret
sti
xor
into
mov
lea
pop
push
xlat
jl
out
not
orl
out
sbb
pop
ret
scas
lret
xor
pop
mov
lock
and
pop
jecxz
inc
mov
dec
loope
je
in
cmpsl
xchg
stc
lcall
push
dec
mov
sub
lcall
mov
push
adc
scas
testb
test
push
shrl
and
loop
mov
jo
testb
stc
out
aas
jecxz
fstps
jae
repnz
mov
xchg
popf
push
mov
rolb
popl
jne
std
xor
repz
pop
shlb
fdivs
mov
sub
push
cmp
pop
sub
mov
imul
add
pop
pop
push
sbb
fists
jo
mov
fwait
xchg
outsb
cmp
dec
ret
mov
sbb
pop
and
mov
je
ret
call
xor
jno
daa
mov
push
and
shll
jbe
dec
dec
sbb
enter
jb
shlb
notl
rcl
adc
push
int
adc
movsb
dec
fsts
push
push
insb
dec
adc
icebp
fldenv
cmpsl
xchg
sti
pop
outsb
or
loope
out
dec
fcmovu
push
stc
and
sti
fldl
push
and
add
clc
or
pop
fnstcw
jp
cmpl
cmpsl
mov
clc
mov
push
push
in
push
cmp
push
mov
addl
movsl
or
mov
call
push
std
ret
shrd
pop
mov
cmp
sarl
fcoml
xor
repz
pop
lds
ret
movsl
inc
cld
mov
imul
stc
dec
ja
jb
outsb
and
sti
pop
fildl
mov
xchg
test
jp
dec
and
xor
inc
cs
nop
pop
mov
cmp
lods
mov
addr16
nop
cmp
pop
fdivr
and
cmc
mov
out
jle
mov
mov
mov
and
cltd
imul
cmp
jbe
popl
movsl
mov
pop
pop
sub
or
xchg
mov
std
int
cli
or
xor
repnz
stos
ds
daa
mov
and
jbe
jbe
xchg
xchg
out
push
lea
pop
popf
adc
xor
push
in
nop
mov
push
add
pop
add
pop
push
les
pop
in
movb
lea
and
xor
addr16
std
jmp
sub
dec
testl
out
shl
pop
adc
lcall
mov
dec
icebp
push
popa
mov
stos
xor
scas
adc
rcr
loope
mov
cmc
pop
pushf
nop
mov
rcl
out
cmp
jb
pop
out
mov
mov
fnstenv
adc
mov
inc
cld
push
pop
xor
ret
outsl
testb
ds
xchg
or
cmpsb
inc
or
movsb
cmp
adc
int3
mov
notb
bound
shlb
xchg
or
pop
dec
mov
mul
lret
fs
repz
iret
sahf
inc
adc
stos
sub
xor
ret
mov
in
xor
lods
cmp
stos
lcall
jl
subl
pop
lret
dec
fs
outsl
sbbl
ja
dec
xchg
mov
adc
sub
cld
aam
jg
cmp
shll
jae
xor
bound
dec
test
lret
stc
fsubrl
iret
dec
xor
bound
cmp
fs
inc
mov
fimull
ret
dec
push
xor
aad
lea
call
aas
jno
lds
cwtl
repnz
sbb
scas
jo
or
sub
sti
sbb
fs
shll
adc
das
outsl
dec
ds
push
imulb
mov
push
icebp
mov
mov
push
mov
add
mov
xchg
in
cli
in
mov
mov
jge
dec
dec
cmpl
pop
add
enter
or
mov
pop
insb
je
sbb
fcmovnu
cld
cwtl
cmp
cmc
jbe
popf
jle
hlt
pop
adc
insb
ja
inc
mov
stos
fwait
dec
jo
jl
xchg
mov
pushf
repz
lea
ss
dec
js
mov
imul
inc
xor
pop
lahf
or
sub
arpl
in
sbb
mov
fs
cmp
sarl
pop
cmc
gs
xor
clc
mov
cmc
aad
cmp
int3
jno
cwtl
mov
clc
jae
hlt
gs
bound
cmpb
xor
mov
mov
push
inc
lock
jecxz
cmp
pop
or
cmp
mov
int3
add
fwait
add
out
mov
nop
mov
mov
sub
mov
dec
out
xlat
lock
inc
mov
inc
ja
jne
mov
mov
adc
xor
sbb
movsl
jl
fidivrs
mov
out
cmp
jp
jmp
lahf
int
mov
xchg
sub
cmpb
sub
xchg
dec
inc
test
push
push
aaa
cmp
xchg
sbb
xlat
jle
pushf
xchg
cvtdq2ps
outsb
insb
and
stos
mov
xchg
or
pushf
xchg
outsl
inc
mov
jl
sub
and
dec
or
jo,pt
lock
inc
and
sub
xchg
pop
push
and
fninit
cmp
pushf
sub
sarb
data16
and
lock
lret
jne
push
add
dec
xor
in
int3
leave
pop
mov
sbb
and
sarb
adc
mov
dec
xchg
add
pop
sar
pop
xchg
pop
jge
and
sti
mov
cmp
pop
pop
push
jnp
out
fwait
sti
xchg
xlat
or
pushf
prefetch
divl
iret
cmc
pop
scas
and
or
fs
jp
test
jmp
sub
xor
xor
pusha
enter
sahf
repnz
fisttpll
push
int
es
das
movsb
mov
cmp
sub
cmpsb
ds
pop
sub
adc
sub
sub
das
and
insb
addr16
shll
std
cmp
inc
sbb
sti
hlt
push
jmp
jo
movsb
or
shr
mov
cld
push
pop
sbb
mov
jae
ds
das
andl
mov
dec
dec
stos
fcompl
pop
shr
fisubl
adc
xchg
sub
jnp
ficoml
daa
sbb
or
ljmp
scas
mov
jo
rcll
lahf
jmp
inc
imul
lock
dec
xchg
aas
jg
shrb
pop
pushf
mov
and
lcall
lods
ja
mov
mov
fsubrs
lahf
jg
clc
push
dec
ret
dec
and
sbb
jo
sub
or
dec
dec
daa
ret
scas
sub
pushl
push
lds
bound
mov
bound
xchg
cmpsb
fisubrs
and
scas
mov
ja
repnz
fnstenv
sbb
loope
jnp
jno
xor
lahf
inc
xor
lds
lods
sub
jmp
push
movsb
lods
hlt
testl
add
das
jo
jb
pop
inc
jle
sub
clc
push
sub
or
cmp
xchg
push
push
push
in
mov
pop
in
inc
lods
cmp
loop
mov
jb,pn
mov
xor
fwait
cmpsl
mov
leave
mov
cmpb
mov
mov
je
push
aad
loop
mov
lea
loop
shlb
adc
sbb
test
out
subl
cld
shlb
xchg
mov
mov
inc
shll
add
call
add
div
popf
mov
leave
fsub
stc
xor
dec
adc
sub
enter
lcall
sbb
ret
rorl
push
mov
mov
jae
pop
fisubrl
popf
inc
aam
iret
cmp
into
cmc
addl
sub
jg
push
pop
popa
jge
mov
mov
adc
push
sub
test
lods
inc
mov
jno
dec
das
scas
pop
mov
stc
jge
cmc
mov
jo
jg
push
sbb
fs
jle
mov
sbb
or
lahf
lods
adc
idivb
pop
adc
int
xor
cmp
shr
xchg
xchg
sub
mov
xchg
loope
mov
scas
lret
dec
das
mov
pop
mov
inc
xor
pop
adc
lcall
mov
jns
test
add
pusha
mov
mov
mov
insb
xchg
das
out
push
outsb
daa
pop
ret
rol
mov
sub
int
mov
fdivrp
or
scas
adc
xor
sbb
xchg
loope
pusha
loope
fidivrl
sub
mov
arpl
in
es
sub
sbbl
pop
cmp
mull
sbb
aad
sub
aaa
clc
xchg
imul
cmc
and
or
pop
call
stos
lea
addr16
add
movsl
sub
mov
fstl
fs
xchg
ret
ret
lds
call
push
xor
cltd
cwtl
mov
push
mov
lods
lock
mov
lods
fidivrs
lods
xchg
mov
or
jae
pusha
push
mov
cwtl
sbb
jo
push
sbb
scas
sti
int3
inc
pop
jecxz
or
dec
push
and
pop
lret
xchg
inc
lcall
bound
mov
fs
pop
inc
repz
push
add
push
cmpsl
ja
xor
ja
psubsb
jg
cli
xor
je
pop
aaa
cwtl
jmp
push
pop
and
ljmp
mov
and
sub
adc
push
hlt
sub
aaa
ja
mov
xchg
fcoms
inc
nop
std
dec
js
push
clc
popa
loop
mov
adc
ds
and
mov
jl
dec
push
sub
mov
mov
push
ret
in
lea
sub
pop
inc
push
sahf
xor
fimull
jg
mulb
imul
test
in
fisttpl
iret
push
push
sbb
sbb
gs
loope
cmp
cwtl
subl
mov
loopw
jl
pop
xchg
mov
insb
mov
lahf
decb
pop
pop
fcoms
adc
mov
or
and
mov
jns
and
jo
std
or
jbe
repz
mov
rcll
rorb
sbb
or
cmpsl
dec
repz
jne
js
push
fdivs
jg
push
roll
enter
dec
into
das
cltd
repnz
mov
popf
push
push
stos
xor
sbb
movsb
sub
cld
rorb
push
add
jne
mov
outsb
sub
push
sti
sbb
rorb
popf
xorl
jge
shl
loopne
inc
lahf
clc
int3
mov
mov
lods
frstor
das
addb
test
push
lock
cmpsl
in
xor
cwtl
xchg
and
mov
out
pop
data16
into
pop
cmp
shlb
rcrl
cli
std
fcompl
push
pushf
push
adc
pop
add
cmp
xchg
jle,pn
push
insb
jmp
mov
out
test
dec
fninit
test
fimull
call
jns
jle
mull
jl
gs
mov
enter
mov
xchg
adc
jge
push
aas
jecxz
push
lds
adc
and
gs
out
pop
ret
das
outsb
jno
mov
cmp
fldl2e
sbb
orps
stos
xlat
jne
and
dec
pop
mov
stos
mov
ds
iret
orl
xchg
sarb
push
mov
gs
push
imul
out
dec
addl
mov
and
xchg
push
negl
mov
jno
inc
scas
and
cmp
aad
fidivs
adc
cmp
scas
jbe
addb
leave
and
data16
mov
int3
popa
mov
popf
push
imul
or
push
cs
in
lods
or
stc
pop
sbb
jae
in
jae
jne
loopne
jne
sti
test
mov
pusha
stos
inc
cmpsl
lock
mov
mul
sub
ss
icebp
push
cmpsb
in
pushf
xchg
mov
cld
fucomp
cmpsb
mul
push
dec
lock
movsl
fisttpll
mov
stc
lock
mov
and
jne
fcmovu
test
cmc
rcrb
aaa
pop
frstor
sbb
inc
mov
dec
in
test
pusha
dec
mov
in
push
xchg
and
aas
insb
in
mov
add
repnz
sbb
test
cs
fisubrs
cltd
xchg
and
push
aaa
push
mov
mov
insb
dec
iret
mov
test
repnz
cmp
sbb
stos
and
pop
cmc
sbb
stos
add
cmpsl
and
fdivl
icebp
clc
push
daa
add
or
stc
mov
xchg
or
imul
cmp
fwait
fwait
pop
or
filds
adc
fildl
lcall
clc
sub
and
push
fdivrp
jl
xor
xchg
dec
mov
push
in
dec
sbb
jg
call
pushf
pusha
insb
cmp
xor
inc
fdiv
push
cwtl
or
sar
popf
xor
mov
fcmovne
in
cmpl
pop
sub
or
sbb
scas
push
push
lcall
push
jl
cld
pop
dec
sub
das
mov
pop
jne
inc
mov
out
movsl
fstpt
dec
mov
das
lods
push
std
shl
fldln2
inc
jle
mov
mov
dec
pcmpeqb
pop
dec
mov
out
aas
jbe
mov
dec
fbstp
leave
jbe
sbb
negl
stos
jge
cmp
dec
pop
stc
shll
ljmp
mov
sahf
popf
cltd
orl
stos
inc
fldcw
jle
js
lret
inc
ss
inc
aas
xchg
mov
cmpsl
movsb
pop
pop
lcall
imul
das
pusha
pop
rorl
pop
mov
dec
ret
adcb
scas
xchg
cld
movsb
dec
sub
sub
cmp
push
in
mov
outsb
fisubs
and
mov
dec
call
js
cld
jg
jg
jp
push
xor
mov
pop
mov
mov
xor
adc
insl
push
push
sub
mulb
cld
test
xor
inc
dec
jl
ret
mov
imul
in
mov
push
mov
push
mov
jne
in
push
cli
xchg
cmp
cmp
xor
add
stos
mov
xor
cwtl
jmp
les
sub
sbb
dec
cmpsl
ret
dec
pop
ja
pushf
lods
lret
test
pop
xchg
sub
push
push
es
hlt
insb
bound
dec
iret
je
aad
test
shr
lock
xor
rorb
push
aad
jnp
out
in
mov
mov
cmp
cld
mov
push
inc
jg
and
cs
lcall
pop
add
int
out
mov
ds
xor
mov
jo
aad
sti
popa
mov
out
sub
arpl
lds
leave
loope
push
push
outsl
lods
or
add
lock
mov
cmp
cmp
mov
mov
mov
add
test
or
scas
xchg
mov
mov
sbb
jb
pop
mov
ja
in
sbb
js
inc
inc
mov
repnz
pusha
pop
sub
hlt
pop
shlb
mov
mov
imul
rep
lock
loope
andps
ds
ds
xor
gs
xchg
mov
test
int
rcll
decb
adc
dec
mov
movsl
lds
fidivl
inc
jbe
das
jge
add
xor
sbb
das
sub
mov
addr16
arpl
out
enter
cmp
ja
stos
sbb
iret
out
sbb
scas
dec
aaa
and
das
rcll
xlat
jb
fldl
mov
xor
fldcw
push
popf
xlat
stos
movsb
cmp
mov
mov
xor
adc
adc
mov
or
mov
cmpb
mov
cmp
aam
mov
xchg
or
inc
and
or
aaa
outsb
call
sub
iret
dec
arpl
dec
cld
cs
nop
inc
jns
cwtl
jecxz
cmpsl
mov
hlt
or
cmp
xchg
fsqrt
jo
repz
stos
and
clc
dec
mov
nop
push
cmp
cltd
mov
je
jecxz
jne
jmp
sub
into
lcall
std
iret
int3
test
sbb
movnti
mov
stc
push
mov
rcrl
iret
inc
sahf
subl
pop
xor
and
jae
and
data16
sub
inc
add
sub
fs
repnz
adc
cmp
pop
inc
xor
pusha
or
inc
arpl
sbb
add
xchg
clc
inc
ljmp
push
sub
pushf
pushl
xor
movsl
rcr
pop
repz
hlt
in
mov
mov
sbb
xchg
xlat
mov
inc
mov
popf
fadd
pop
les
rolb
fcomps
ret
and
mov
jmp
sub
xor
test
xchg
dec
mov
mov
les
mov
mov
repz
and
repnz
adc
sbb
mov
jl
and
jnp
adc
mov
loopne
inc
jmp
ljmp
xchg
push
jmp
pop
test
in
into
std
aad
stos
jp
pop
inc
adc
pop
movsl
mov
out
arpl
lods
mov
dec
inc
rclb
pop
lods
loop
jns
aam
jns
pushf
xchg
test
dec
pop
push
aas
adc
outsl
fists
add
pop
add
mov
scas
int3
les
gs
mov
stc
ljmp
lret
mov
pop
push
inc
cmp
inc
test
loope
sbb
xchg
mov
out
sub
not
mov
dec
xlat
mov
lock
call
inc
insl
cmp
pop
push
icebp
jnp
jmp
push
addr16
stos
es
sub
lock
out
and
out
dec
mov
adcb
shrb
xchg
stos
mov
cmp
test
fistpll
push
mov
icebp
int3
jbe
sub
mov
loope
repnz
mov
pop
xchg
mov
out
sbb
push
out
jbe
sub
icebp
lds
fisttps
inc
jo
stos
mov
notl
lods
movsl
mov
mov
iret
inc
testb
pop
mov
orl
pop
xor
push
into
jg
push
pop
test
push
cld
popf
push
aas
mov
mov
imul
cs
mov
push
fs
cltd
mov
inc
fisttps
mov
cmp
fwait
mov
in
push
adc
test
push
jnp
rolb
jle
jle
fldenv
cmp
mov
sbb
sbb
clc
sub
sub
into
pop
push
out
bswap
mov
or
adc
fistpll
mov
mov
jb,pt
addb
adc
orb
int
fisubrs
and
pusha
imul
in
js
bound
sbb
aas
std
sub
addr16
mov
dec
lahf
pop
mov
jecxz
call
fnsave
ret
in
loope
fnstcw
mov
mov
shll
dec
jl
pushf
test
lret
sbb
out
mov
xchg
cmpsb
pop
js
ss
out
repz
xchg
imul
insl
xchg
icebp
jg
fcompl
push
mov
scas
or
aad
mov
mov
aas
bound
icebp
mov
xchg
dec
and
xchg
js
jae
ljmp
mov
cmpsb
push
pop
stos
cwtl
sbb
iret
mov
sti
pop
inc
les
iret
xchg
push
aaa
leave
dec
test
fwait
push
rorb
cmp
dec
mov
xchg
lods
jp
push
mov
out
jnp
insl
mov
xchg
cmp
push
xchg
jae
ret
lahf
cmp
cmp
adc
out
jmp
and
aaa
cmpsb
sarb
inc
pop
mov
mov
insb
fs
xor
xor
inc
into
xor
setg
adc
arpl
jnp
in
fnstenv
xor
push
push
push
or
les
je
movsb
popf
insl
cmp
xor
cmp
dec
jne
mov
ret
mov
cld
pop
insb
insl
xchg
fs
notl
js
push
xchg
adc
inc
pusha
jnp
lahf
pop
outsl
push
cmp
fs
xchg
repz
adc
out
shll
jp
test
out
mov
dec
das
dec
scas
test
test
add
and
lret
call
daa
inc
xchg
lods
filds
scas
pushf
rcl
or
outsb
in
jecxz
repnz
pop
cmc
pop
or
leave
loop
pop
sub
cmpsl
dec
lret
leave
sbb
sub
push
iret
or
or
sub
mov
dec
cmpsl
push
jno
enter
enter
ds
jmp
sub
sub
lods
fstps
mov
das
popf
pop
mov
dec
jp
popa
aam
dec
dec
xchg
jg
push
sti
and
ficoml
in
das
imull
push
mov
mov
mov
lock
addr16
xchg
hlt
sub
sub
test
adc
lret
mov
aaa
sub
and
iret
daa
cmp
aad
icebp
and
psubusw
jle
aaa
mov
cmp
push
cltd
fwait
clc
fsubrp
adc
and
mov
jbe
loopne
sbb
dec
mov
inc
aaa
push
xchg
call
mov
scas
rcll
push
test
out
jecxz
push
data16
fwait
inc
pop
jmp
jge
and
dec
je
push
adc
or
cmp
fldt
stos
xchg
imul
adc
shr
mov
scas
sahf
pop
push
aad
or
sahf
leave
cmpsl
dec
faddl
pusha
jecxz
push
xor
add
mov
mov
mov
movsl
movsl
pop
outsb
aam
loopne
push
daa
cs
mov
adc
rorl
jmp
add
cmc
push
pop
cmc
popa
stos
lods
xor
pop
xchg
push
pop
xchg
push
ret
lahf
roll
cmpsb
mov
loope
outsl
jmp
leave
xchg
ret
jne
ficompl
and
insl
daa
pop
sar
pop
es
xchg
or
cmp
xor
jb
movl
push
insl
out
mov
xchg
in
pop
push
dec
lods
pushf
bound
dec
mov
mov
mov
stos
adc
pop
xchg
push
lahf
daa
cmpsb
gs
jno
loope
jecxz
and
sub
sarb
mov
jne
mov
push
pop
mov
inc
aad
pop
jg
imul
clc
and
jmp
mov
icebp
xchg
clc
xchg
lea
push
movsl
outsb
or
push
xchg
fistpl
sbb
mov
stos
leave
test
sbb
jno
xchg
shr
in
mov
pop
leave
xor
fadds
std
mov
icebp
daa
jge
dec
pop
mov
cmp
out
repnz
out
shlb
jp
outsb
loope
lahf
call
xor
je
mov
in
sub
sahf
or
mov
mov
cli
dec
aad
lahf
sahf
xor
mulb
lock
mov
out
cli
xchg
icebp
sti
into
lahf
insb
lods
lret
mov
pushf
lahf
sbbb
mov
sbb
stos
add
or
pop
pop
jmp
jae
mov
jge
ret
lods
xchg
stos
push
inc
mov
pop
cmpsl
xor
pop
add
inc
call
gs
xor
icebp
mov
insb
sub
xor
jmp
mov
iret
es
xchg
mov
dec
rcrl
call
xchg
pop
push
sbb
test
mov
rcll
not
xchg
ret
or
mov
or
dec
adc
mov
xchg
ss
xchg
popl
not
adc
push
jae
aaa
fwait
add
pop
dec
test
mov
jns
rcrb
nop
mov
call
fstl
xor
lods
cmp
negb
lcall
cmp
stos
adc
push
mov
loopne
add
ss
push
dec
scas
imul
or
lcall
cmp
mov
xchg
push
mov
sbb
mov
fisttps
mov
adc
and
dec
adc
cltd
jnp
pop
inc
add
jge
cmp
sbb
imul
ss
dec
lahf
lcall
repnz
test
lods
clc
adc
xor
add
push
je
fldl
fbld
stos
adc
popf
out
pop
cmp
push
sbb
push
pop
scas
inc
jp
lcall
movsb
mov
cli
xchg
adc
push
into
fistpll
or
inc
xchg
ret
lods
mov
shl
aas
lcall
mov
movsl
stos
jns
push
sub
dec
clc
addl
inc
mov
jecxz
shl
popf
in
ja
in
je
gs
pop
fisubrl
mov
pop
fidivs
fistpl
fwait
movsb
insb
mov
adc
xchg
cmp
aad
jno
and
push
mov
ja
jae,pt
xor
scas
push
es
mov
or
out
push
pop
pop
jno
mov
aad
mov
lret
fs
pop
inc
stos
out
mov
in
int3
test
fs
aas
cs
insl
cmp
mull
sub
and
push
and
mov
scas
cmp
shlb
ja
into
out
adc
push
fisubrs
adc
decb
fs
jno
clc
popa
inc
loope
inc
fnsave
pop
nop
mov
jmp
jle
jnp
mov
cmc
dec
or
std
addl
pushf
iret
mov
fwait
mov
dec
dec
lsl
pop
movsb
or
mov
lcall
jmp
sti
shl
arpl
das
inc
sub
xchg
cmpsl
and
xchg
aas
dec
movsl
lcall
cmpsl
push
push
mov
scas
and
mulb
lods
push
call
add
es
popa
addr16
lods
into
xor
or
jge
int
push
pop
repnz
sub
aas
imul
mov
and
adc
inc
ret
adcb
jl
test
scas
jns
add
mov
lds
aad
dec
sub
pusha
jbe
clc
loope
movsl
outsb
sbb
test
sbbl
xlat
and
es
lods
outsl
inc
rep
adc
push
xchg
mov
out
jns
cs
sub
das
lods
pop
outsb
out
xchg
inc
mov
push
mov
cmp
enter
lcall
xor
mov
test
inc
ss
adc
repnz
lods
pop
ja
push
and
xor
xlat
mov
pop
jmp
cli
jle
in
lahf
dec
push
xchg
add
je
push
lret
add
out
icebp
lea
addr16
inc
fdivr
and
test
adc
cld
mov
repnz
xchg
inc
inc
mov
sbb
cmp
movsb
fisubrl
movsl
pop
and
stos
xor
iret
mov
or
aaa
push
mov
int3
pop
fiaddl
filds
or
mov
in
popa
daa
mov
adc
popf
ljmp
mov
outsb
out
push
sbb
filds
pop
mov
enter
decb
jae
mov
fucomi
and
cmp
jae
bound
xchg
mov
loope
in
xor
cmpsb
js
out
pop
ret
dec
nop
jae
clc
lret
push
push
pop
nop
mov
lret
popf
js
or
mov
pop
xor
add
jecxz
clc
mov
ds
mov
jno
jae
or
mov
or
xchg
jge
addr16
je
cmp
or
leave
sbb
bound
ds
dec
and
jge
mov
aam
sbb
push
mov
out
dec
jno
fwait
cld
aad
enter
xchg
jne
inc
or
cltd
mov
sbb
fstl
hlt
shlb
clc
push
mov
push
jg
outsb
push
movsl
movsl
bound
mov
out
in
cmpsb
cmpsb
adc
pop
mov
out
inc
sub
iret
jl
es
add
stos
in
mov
pop
ds
xchg
lds
loope
mov
andl
sbb
loope
add
pop
lock
jg
mov
mov
repnz
arpl
jge
scas
leave
bound
mov
pop
repnz
les
jno
sub
ret
xor
popa
leave
cmpsb
fidivs
ret
test
xor
repz
and
xor
bound
push
push
jl
neg
lock
mov
xchg
imul
ja
je
or
mov
sarl
xor
push
push
mov
cmp
sbb
dec
pop
cmp
mov
out
movsl
dec
jno
fisubs
mov
divl
and
pop
sbb
pusha
stos
xlat
inc
loopne
cmp
imul
sahf
and
fstl
add
inc
repz
jge
stos
jg
mov
add
outsb
sub
iret
mov
and
xchg
lret
mov
mov
or
xor
cmp
push
pop
xchg
jbe
mov
mov
mov
stos
lods
jns
pop
mov
fsubrs
xor
xor
hlt
xor
inc
int
outsl
idivb
xchg
inc
inc
rcl
mov
and
std
dec
aad
sub
and
jmp
and
cmp
insl
je
push
xchg
fldcw
cltd
popa
push
aad
leave
jbe
and
adc
pop
add
ljmp
mov
cmpsb
faddl
lahf
call
cs
outsl
add
addr16
adc
mov
pop
popf
cmp
outsl
out
mov
cmp
dec
add
mov
ja
mov
pushf
rcr
and
and
sub
xchg
dec
fisttpl
andl
jmp
xchg
push
dec
test
sti
mov
xor
jbe
jns
pop
push
jno
mov
arpl
mov
cmpsb
sti
add
mov
and
cmc
jbe
push
mov
push
jo
and
mov
xor
filds
push
xor
loopne
xchg
jnp
inc
push
pushaw
jp
aas
jns
add
aaa
shrl
lret
add
push
mov
das
dec
or
or
push
stos
aad
cmp
jbe
rcl
jg
aas
adc
pop
addr16
lods
scas
mov
jo
mov
mov
push
out
hlt
movsl
mov
addl
xorb
lock
pop
gs
movsb
xor
pop
mov
cli
leave
jne
push
mov
mov
xchg
insl
sahf
dec
or
add
out
xchg
mov
ret
inc
dec
int
rcll
cwtl
subb
push
sub
fs
mov
and
pop
ret
sub
mov
push
divl
out
stos
scas
icebp
sub
lcall
jns
push
in
hlt
xor
push
mov
dec
mov
call
adcb
cmpl
lock
inc
push
jge
push
sarb
sbb
xchg
lods
cmc
jae
clc
pushf
push
das
insl
jecxz
cmp
cmpsl
pop
or
jmp
lds
mov
adc
popf
xor
mov
cmp
xchg
push
push
jl
dec
mov
xchg
lods
mov
jns
sbb
sbb
mov
push
push
mov
pop
hlt
sbb
les
out
dec
push
aad
mov
bound
ret
adc
aaa
adc
mov
pushf
je
aaa
test
lods
push
xchg
ret
in
inc
adc
xchg
sahf
aad
insl
push
out
mov
lods
xor
enter
sti
pop
ret
lahf
rcr
int
sub
mov
xchg
or
xchg
popf
adc
aam
les
mov
iret
push
inc
int3
test
pop
jnp
or
cmp
xlat
xchg
cmp
clc
les
pop
adc
lods
aaa
je
mov
ds
mov
popa
dec
push
xor
dec
mov
adc
push
or
imul
aaa
shrl
sub
mov
and
push
stos
fldt
insb
lds
lock
dec
data16
inc
fdivl
std
shll
fdivrl
xor
mov
sbb
push
dec
sub
fidivs
loop
orl
mov
movsb
cli
in
mov
repz
and
popf
cmp
sub
fcoms
mov
je
mov
adc
movsb
cmp
insl
xchg
add
mov
imul
mov
mov
lret
imul
sub
xor
dec
stos
rcrl
repnz
mov
sub
mov
adc
scas
shlb
add
clc
inc
fsubrs
push
outsl
xchg
xor
dec
stos
lock
in
sub
rcrb
out
jnp
push
jecxz
scas
xor
out
cltd
cmp
xchg
movsb
mov
ja
in
loop
xchg
sbb
aas
hlt
add
inc
sahf
cmp
mov
xchg
sbb
dec
and
cmp
inc
cmp
lock
sbb
popf
and
jo
shll
adc
clc
pusha
mov
ljmp
mov
mov
nop
jns
icebp
pop
cli
adc
mov
daa
sbb
fisttpl
ljmp
lock
mov
push
fimull
sub
scas
pop
cld
nop
andb
jecxz
adc
jge
fisttpll
stc
cmp
icebp
inc
std
pop
fidivrl
mov
popf
dec
fisttpll
mov
mov
jp
aaa
jge
fimuls
repnz
int3
or
add
mov
lock
test
lcall
xor
push
push
mov
jp
pop
lret
icebp
xrelease
into
js
dec
and
jle
loopne
xchg
popf
lds
arpl
cwtl
mov
mov
pop
idivl
fistpl
ffreep
inc
dec
xchg
clc
cmp
lea
cld
enter
shrl
or
push
add
aam
adc
pop
xchg
xlat
call
cwtl
and
or
lods
dec
in
cld
inc
ret
cmpsl
nop
mov
fsts
push
aad
outsl
jbe
jmp
dec
pop
imul
cmp
out
adc
ret
cld
roll
and
pop
arpl
loope
jg
mov
outsl
fisttpll
or
aas
pop
pop
scas
adc
sub
lea
and
inc
xor
add
mov
or
cmc
jb
mulb
lret
pop
cmpl
adc
cmpsb
imulb
and
loopne
sbb
test
sbb
call
or
jno
loopne
xchg
jne
outsl
mov
add
xor
pop
push
or
mov
ss
into
inc
stos
incb
adc
pop
cmp
mov
int3
cmp
push
jmp
push
push
insb
mov
sbbl
mov
xchg
fisubl
cmpsl
popa
mov
dec
or
insb
xor
mov
ljmp
jle
rcrl
enter
dec
jecxz
repnz
cmp
adc
inc
test
hlt
ss
xor
sub
cld
lock
pop
sub
cltd
paddsb
fsubrs
xor
sub
adc
adc
addr16
fstl
loop
lahf
mov
scas
jb
pop
sbb
fnstcw
cmp
jb
pop
sub
dec
or
xor
or
pop
cmp
xor
imul
in
jp
aaa
push
popf
add
cmc
inc
mov
or
stos
sahf
pop
mov
cmp
sub
pop
pop
inc
repz
loope
outsb
es
adc
dec
push
xor
push
dec
dec
ds
mull
insb
jg
or
into
or
push
repz
test
inc
mov
call
test
adc
fdivl
scas
mov
sbb
sub
rclb
pop
sti
popf
lock
xor
inc
and
lret
data16
sub
add
int3
lcall
inc
movsl
test
mov
xor
repz
imul
icebp
xchg
pop
adc
movsb
cmp
movsl
xlat
enter
xchg
cmp
cli
inc
pop
in
aas
les
pop
in
dec
sti
xchg
leave
mov
lods
fwait
outsb
lahf
pushf
call
int
xchg
movsl
fsubrl
cmpsl
mov
jne
pop
pop
mov
adc
xchg
cmp
add
mov
js
sti
inc
ret
scas
dec
dec
fadds
push
inc
cmpsl
mov
sti
jnp
je
mov
stc
dec
xchg
mov
and
stos
test
mov
mov
popf
lock
aam
jl
adc
mov
ljmp
inc
out
out
in
xchg
stc
jbe
pop
addr16
ljmp
scas
adc
movd
add
xor
cmp
lahf
mov
cmpsl
sub
xor
shrl
lret
inc
pop
repz
enter
scas
stos
fwait
dec
outsb
iret
xchg
pop
jo
mov
dec
mov
mov
ljmp
int3
mov
js
ss
mov
ficoml
mov
outsl
pop
jmp
mov
popa
js
in
jne
iret
test
xor
inc
mov
loopne
jbe
rcrl
cs
add
jle
jmp
arpl
iret
repz
movsl
repnz
sbb
leave
push
dec
scas
mov
sbb
insl
xor
out
push
or
je
lds
add
jnp
mov
ja
or
cwtl
out
mov
inc
pop
xor
popf
mov
hlt
mov
pop
int
sarl
out
stc
inc
or
pop
int3
dec
imul
lret
push
mov
and
ljmp
pop
cli
scas
cs
xor
mov
jecxz
iret
or
mov
js
outsl
sbb
cmp
mov
mov
call
je
and
mov
cli
add
hlt
je
lods
xchg
cwtl
jl
or
mov
lahf
int3
test
xchg
xorl
push
inc
or
pushf
push
xor
cmc
cltd
xor
movsl
inc
add
pushf
hlt
je
repnz
cld
push
stos
push
gs
sub
adc
test
fistps
pop
push
int3
addr16
xchg
mov
xchg
xor
cmpsl
ds
sahf
cmpsl
stos
mov
push
pop
js
lea
xchg
jecxz
test
roll
xor
xchg
lea
mov
dec
cld
jne
je
pop
sti
pop
adc
jle
pop
pop
sub
outsl
or
lock
jbe
pop
loop
mov
jne
cmp
or
shll
jmp
es
xor
int
addr16
add
jg
mov
imul
imul
sub
daa
inc
jle
mov
lock
out
jl
jg
xchg
lds
jg
repz
mov
lcall
pop
lea
out
or
lock
inc
dec
testl
fsub
lcall
mov
jecxz
mov
push
push
sbb
and
shll
adc
mov
out
lahf
sahf
cltd
pmaddwd
xchg
add
adc
add
or
mov
cmpsl
icebp
fsubrl
je
xor
lcall
cmp
scas
dec
mov
cmp
popf
int
push
xor
xchg
pop
push
imul
jno
cmc
lods
cltd
xchg
sbb
sub
out
cmp
jmp
inc
and
sbb
stc
pop
lret
sbb
repnz
call
lret
clc
pop
repz
in
jmp
pop
fwait
sbb
iret
test
outsb
or
out
mov
sub
fs
push
sarb
hlt
xor
or
adc
cli
xchg
repnz
jmp
mov
clc
outsl
insl
inc
mov
pop
dec
loope
incb
adc
pop
out
xchg
push
or
iret
jns
shrb
stos
adc
pop
pop
pushf
jns
mov
cli
or
mov
push
xor
push
or
push
pushf
imul
fst
movsl
sub
jge
ret
test
jge
push
pop
mov
mov
out
fidivrl
xchg
jo
pop
fisttpl
jnp
jg
stos
jbe
xchg
std
int3
dec
movsb
in
mov
insl
int
inc
in
mov
dec
pop
dec
jb
addb
and
aas
push
cmc
jmp
js
push
iret
sub
popf
inc
push
pop
jg
pop
jle
cmp
test
sub
cmp
daa
inc
repz
movsb
jge
sbb
mov
or
cmp
jne
int3
fistpl
sub
xchg
and
pop
imul
push
enter
jge
popf
js
mov
or
outsl
adc
shrb
popf
mov
mov
jmp
hlt
xor
out
lret
fdivrp
addl
fistpll
jecxz
xchg
repz
popf
mov
inc
mov
icebp
js
jecxz
je
cs
cmp
push
pushf
test
xchg
rclb
pop
lret
in
pop
fsubr
pop
mov
fdivr
in
frstor
iret
fisubs
mov
ja
sti
loopne
repz
cld
rorb
mov
aad
sub
push
lahf
jg
inc
enter
jmp
xchg
pop
aam
push
insb
mov
push
ret
fwait
call
jecxz
or
imul
and
pop
inc
xlat
aad
aas
movzbl
lret
xchg
imul
gs
test
xchg
push
cltd
fildl
push
jnp
icebp
mov
mov
cmp
dec
adc
pop
fldcw
lods
sti
mov
mov
jmp
jnp
jecxz
pop
pushl
mov
repz
das
in
and
push
push
dec
sti
dec
lahf
loope
neg
clc
fwait
mov
pop
xchg
je
lea
outsl
push
pop
dec
sbb
pop
mov
mov
cld
int
adc
xchg
adc
out
sbb
sbb
fdivrl
mov
rcr
jl
cmp
out
stos
ret
cmc
push
dec
mov
dec
cmp
adc
inc
fisttps
or
lret
mov
call
or
mov
pusha
pop
sub
add
xchg
mov
scas
inc
iret
cmp
xchg
lds
adc
fst
jmp
mov
aaa
fldcw
lret
sbb
shlb
fcompl
pop
imul
cli
mov
inc
jmp
mov
mov
js
mov
pop
mull
sub
stos
jmp
popa
shll
popa
pop
lret
mov
or
fwait
xchg
xchg
mov
xlat
mov
imul
sbbl
and
sbb
add
cmp
xor
movsl
push
jo
bound
pop
stc
bound
cmp
xchg
jmp
testb
daa
shrl
jecxz
cltd
aas
add
dec
jae
dec
mov
movsl
push
scas
xor
aam
stc
lret
aad
es
in
and
dec
ljmp
test
adc
sub
in
push
jo
adc
xchg
mov
push
adc
dec
rorb
lret
sti
sbb
pop
rcrb
dec
or
clc
mov
pop
idivl
or
shl
pop
sub
sbb
lods
std
imul
shrb
lahf
sahf
mov
test
mov
loop
mov
lds
cmp
and
adc
jb
popf
loopne
pusha
mov
sbb
outsb
clc
cmpsl
ljmp
cmpsb
and
xchg
xor
xchg
jge
inc
repz
outsl
js
in
cs
jg
and
xchg
inc
into
jle
sbb
mov
insl
cmpsl
iret
lods
fisubrs
pushw
adc
xor
sub
addr16
cmc
rcrb
fists
or
ljmp
sbb
pop
sahf
push
mov
add
cmp
jmp
cli
sbb
cli
hlt
movsb
push
jl
pop
in
mov
gs
js
inc
xchg
lret
jmp
es
pop
push
sub
outsb
int3
sti
sbb
scas
or
inc
in
sbb
lock
pop
loop
jnp
sbb
mov
xor
dec
je
mov
loopne
fbld
in
insb
das
repz
aad
cltd
shll
filds
xor
sub
jno
stos
js
adc
push
pop
call
jne
dec
mov
hlt
lds
mov
inc
addr16
xor
sbb
mov
mov
mov
fistps
insb
fs
loop
mov
shl
lret
popa
movsb
inc
cs
push
popa
xchg
stos
xchg
pop
sbb
fcoml
push
rcrl
sub
mov
test
arpl
std
jg
aad
stos
loopne
or
int
loop
push
out
sbb
movsb
imul
or
clc
mov
fildl
push
mov
jae
fs
push
or
add
movsl
hlt
and
xor
cmc
aaa
data16
les
ficoms
mov
xchg
in
outsb
dec
hlt
lods
cmc
scas
fildll
push
xor
loop
arpl
rcrl
jo
int3
sub
mov
ss
push
vpacksswb
xchg
adc
mov
cmpsl
xor
push
and
mov
xor
xlat
cmp
and
inc
sub
inc
pop
pop
lods
ds
addr16
sub
push
mov
sti
fcompl
jns
fidivl
inc
int3
push
int3
push
and
cli
lds
in
mov
ret
int
sub
pop
je
int3
int3
jl
mov
sub
repnz
das
sarl
aaa
mov
dec
xchg
loope
inc
dec
push
mov
mov
xor
adc
mov
cmp
mul
lods
pop
ret
in
cmp
dec
sbb
pushf
or
pop
sbb
fisttpl
mov
movsl
push
xchg
sbb
push
clc
stos
outsb
pop
sbb
in
mov
test
movd
cmp
push
mov
std
imul
jle
cmp
jo
push
icebp
fstpl
fadds
jbe
and
or
xchg
adcl
xlat
clc
bt
mov
pop
mov
xchg
sub
subl
loope
js
inc
icebp
loopne
imul
jmp
daa
sbb
sbb
cmc
dec
fsub
mov
je
nop
xchg
lret
sub
ror
push
jge
inc
fldl
cmp
add
xchg
xlat
filds
push
push
dec
stos
mov
jo
cmpsb
xchg
clc
push
jecxz
test
rcll
cmp
lock
ret
sti
jbe
push
sub
scas
pop
sbb
bswap
je
in
xlat
aas
jne
shrb
stos
inc
jmp
dec
adc
sub
or
icebp
mov
lock
daa
fidivrl
mov
bound
in
and
aad
sub
ret
or
es
lods
shl
test
pop
cmp
adc
call
xor
pushf
mov
and
and
addr16
mov
inc
rclb
mov
and
stos
inc
cld
icebp
mov
xcrypt-ofb
cmpsl
scas
dec
add
xchg
out
xor
xor
shll
iret
in
stos
movsw
int
repnz
adc
xlat
push
sub
scas
jne
dec
push
push
jge
push
cmp
rorl
xor
out
sub
cld
adc
cmp
mov
ss
ja
js
imul
orb
jne
mov
xchg
jb
aam
xchg
fldt
ja
out
cli
mov
lret
mov
mov
xlat
pop
pusha
adc
movsl
imul
scas
dec
mov
adc
shll
aaa
popf
imul
pop
bound
dec
mov
adc
sbb
ja
sub
nop
lea
pusha
mov
outsb
addl
push
mov
pusha
push
sbb
je
testb
cld
scas
je
pop
jnp
inc
or
int3
frstor
lret
jns
jl
ja
pop
hlt
push
mov
xchg
push
sub
jle
mov
adc
push
sbb
cld
mov
lcall
ds
pop
jae
ljmp
int3
cmp
mov
cwtl
cli
adc
imul
bound
fwait
jmp
scas
subb
adc
and
adcl
addr16
gs
xlat
sti
pop
push
jg
mov
fistps
xchg
sub
mov
idivb
or
sti
xchg
mov
push
mov
push
and
jnp
int
subb
sub
outsl
test
arpl
aam
pop
adc
push
lahf
lea
outsl
push
cmp
jecxz
into
mov
insl
imul
sti
bnd
xlat
pop
sbb
into
adc
jge
pop
lret
inc
cmc
rcll
push
mov
sbb
jo
jle
xor
cld
xor
sub
jae
out
adc
enter
es
push
push
jl
xchg
scas
mov
push
and
push
loopne
repnz
cmpsb
adc
rcll
push
lock
sbb
pop
pop
adc
clc
lods
xchg
pop
outsl
pop
pop
xchg
or
lds
push
or
loop
push
cmc
xchg
shll
dec
pusha
mov
insb
push
test
jae
mov
or
and
or
ja
test
loop
ret
or
push
sub
dec
loopne
add
sbb
in
push
lods
cmpsl
mov
call
or
jg
scas
cmp
test
addr16
dec
scas
lock
sub
lcall
sarl
outsb
fnstsw
lds
sbb
lcall
bound
fistps
int
dec
push
jbe
cmpsl
or
cmp
out
repz
push
add
dec
push
cmpsl
push
lahf
mov
pop
lcall
xor
push
push
jl
adcl
xchg
adc
jbe
pop
xchg
jg
mov
rcr
mov
pop
lea
imul
inc
jae
fnstsw
les
adc
out
mov
cmp
inc
cmp
push
call
jp
pushf
pop
aaa
loop
out
into
push
pop
mov
push
negb
xchg
mov
inc
aas
test
loopne
xchg
into
cmp
mov
xor
sub
cmp
pop
cwtl
push
fnstsw
in
ds
push
out
ds
pop
stos
out
setnp
scas
adc
mov
cmp
sbbl
jle
and
imul
fwait
mov
cld
xchg
sub
xchg
jmp
adc
shll
pop
dec
icebp
pop
jo
push
idivl
in
sbb
push
xchg
fs
scas
mov
das
xchg
repnz
mov
adc
je
rcr
ds
jbe
sti
stos
cmp
iret
popa
dec
movsb
cmp
inc
jg
fwait
cwtl
lahf
sbb
inc
andl
jmp
pop
in
mov
inc
mov
jg
inc
mov
push
in
cmpsl
dec
lret
cmp
xlat
cmp
imul
xor
mov
push
aas
imulb
mov
js
out
jae
pusha
loopne
pop
mov
mov
cmp
pop
bound
ja
cmc
adc
not
mov
mov
xor
pop
int
daa
inc
jnp
insl
pop
inc
fstpt
lcall
push
mov
movsl
aas
mov
mov
int
fildl
xchg
daa
add
loopne
aas
mov
jle
or
jl
mov
fnsave
inc
mov
out
out
inc
xor
out
repz
jno
dec
in
test
leave
test
in
notl
sti
cmp
and
xchg
outsb
lcall
sbb
pop
out
lret
rolb
and
sub
mov
fnstcw
div
js
dec
ja
popf
addr16
ret
pop
adc
mov
push
jmp
not
loop
incb
sahf
scas
xchg
repnz
ficoms
xchg
dec
pushf
add
and
xchg
leave
add
adc
sarl
lcall
push
pop
xor
mov
aad
sahf
movsl
cli
jg
sub
pop
inc
mov
xchg
or
mov
es
rcrl
out
jl
jnp
push
pop
stos
jb
lret
jge
iret
mull
rorl
sti
cmp
test
sbbl
sti
ret
pop
sub
lods
mov
cmp
lcall
lcall
and
test
sub
xlat
inc
pop
dec
shl
mov
sbb
add
movsb
inc
jns
lcall
aad
dec
mov
pop
fsubrs
cmpsb
lods
outsl
into
fdivp
push
inc
gs
fcomi
ret
fwait
jle
jb
out
and
divl
outsl
jae
cmp
testb
repz
fsubp
push
mov
cmp
mov
xor
adc
push
sbb
mov
sub
mov
mov
jecxz
mov
push
hlt
push
std
jmp
lret
lret
cmp
push
aam
mov
jb
mov
rcl
xchg
dec
fwait
mov
lret
push
cmp
mov
cmpsb
dec
jle
test
push
cmpsb
in
mov
inc
cmp
sti
aas
inc
inc
idiv
push
cld
roll
jbe
and
imul
leave
jns
lret
dec
and
push
mov
jg
pop
js
fidivrl
jae
mov
pop
xchg
das
sbb
and
test
imul
xchg
scas
sar
clc
loope
adc
cmp
jno
dec
mov
xchg
jnp
outsb
mul
xchg
pop
push
mov
xor
cmp
cmp
sbbl
cwtl
or
sub
cmc
pop
shll
stos
in
out
loope
mov
bound
sub
das
pop
leave
push
xor
mov
lods
loope
adc
clc
mov
dec
pop
and
mov
cmp
inc
cmpsb
cmp
dec
push
inc
gs
jmp
dec
push
jg
mov
clc
aaa
xor
pop
ficoms
mov
cltd
inc
ficompl
testl
jecxz
lods
stos
jno
jns
xchg
xchg
shrl
mov
adc
jno
push
dec
push
add
fcoml
notb
mov
push
repz
xor
loopne
xchg
in
stc
fstpl
lods
ja
jmp
xor
push
jns
sbb
lds
cs
xlat
adc
testl
jl
mov
gs
sub
imul
iret
inc
xchg
dec
jno
loope
fmul
pop
jecxz
cwtl
imul
out
add
es
inc
imul
adc
dec
dec
icebp
je
mov
repnz
lods
lea
movsb
cmc
ds
aaa
and
mov
fstp
fstpl
clc
out
cltd
xchg
mov
inc
jecxz
cmpsb
in
jmp
fs
jmp
mov
fldt
dec
push
ret
lea
outsb
je
and
dec
xchg
sbbb
lock
cmp
push
jno
mov
mov
out
dec
mov
aaa
fs
or
or
sub
mov
sahf
test
cltd
popa
rolb
dec
push
and
xchg
push
xlat
xor
mov
sbb
int3
push
shlb
in
les
jp
test
std
dec
in
add
sbb
push
and
xor
pop
cmpsb
outsl
sbb
lds
lret
int
stc
push
outsb
mov
cli
lret
outsb
rorl
jp
sysexit
dec
lea
out
lret
jle
sbb
mov
xchg
mov
xchg
dec
sub
mov
rolb
cltd
and
imul
rcll
int
cmp
add
jae
ret
add
pop
and
std
or
dec
cmc
subl
aad
test
cmp
fbstp
pop
mov
cmp
cmpsb
sbb
and
mov
aas
push
xor
fwait
sub
pushf
xchg
jmp
inc
mov
fs
jle
bound
add
pop
cs
cwtl
pop
or
addr16
cld
out
add
outsb
add
mulb
icebp
sahf
mov
mov
ficompl
jbe
inc
out
xor
ds
inc
rcrl
into
sub
push
cmp
bound
mov
ret
lea
js
inc
clc
arpl
sub
dec
insb
jae
sti
ret
cmp
and
leave
mov
jo
cmp
push
pop
sub
lret
pop
popa
gs
popf
lods
lret
lea
push
push
xchg
aaa
fisubl
adc
loop
xchg
xor
fsts
movsl
or
nop
xor
mov
rcrb
add
fs
xchg
shlb
pop
call
mov
pop
xor
adc
jbe
cli
dec
cld
popf
sahf
inc
xchg
cmp
test
sti
std
push
lahf
in
cli
nop
inc
jae
out
inc
into
add
ss
or
in
leave
dec
push
sbb
dec
inc
pop
les
roll
leave
sub
xchg
scas
pop
pop
ljmp
pop
lods
xchg
lahf
lods
fists
sbb
icebp
mov
pop
inc
gs
dec
divb
mov
ret
lahf
xor
scas
outsb
push
mov
not
fwait
cmp
mov
push
rcl
leave
jecxz
push
loopne
mov
add
add
data16
movsl
inc
gs
aam
lods
scas
jne
ret
out
and
or
daa
ret
gs
in
pop
in
mov
daa
pop
xchg
jns
shl
and
rcl
xchg
inc
stos
mov
add
push
sti
pop
sbb
in
xchg
adc
lods
fisttpl
sbb
push
cmp
clc
push
ljmp
imul
das
sarb
mov
icebp
test
lahf
loopne
in
outsb
insb
es
pop
or
addr16
mov
out
pop
xchg
icebp
mov
pop
cmp
fs
addr16
dec
xchg
jbe
lods
in
lea
hlt
cwtl
je
sub
loope
push
je
mov
xchg
sti
xchg
sub
ja
insb
sbb
rclb
jge
cmp
scas
jo
cmpsl
inc
test
pop
mov
and
cmp
fimull
insl
shll
bnd
loope
not
jp
jl
in
push
inc
xchg
mov
dec
mov
dec
mov
imulb
lods
int3
cmp
movsb
fwait
mov
and
ds
cmpl
xchg
push
fucomip
out
add
xor
xor
jno
cld
repnz
mov
dec
xor
fldenv
xchg
mov
or
xor
inc
and
xchg
sub
fdivrl
inc
std
cmp
mov
xor
mov
xchg
bound
hlt
mov
lods
inc
cmp
sub
outsl
ss
loop
cmpsb
xor
push
mov
insl
and
push
fdivs
xchg
add
ljmp
ja
cmpsl
push
ret
and
push
add
es
mov
push
mov
xchg
fstl
outsl
jle
loopne
fs
stos
pop
sub
repz
jp
inc
xor
cmpxchg
sbb
xchg
gs
test
dec
out
out
sbb
insb
push
sub
xchg
cmpl
test
loop
jno
add
adc
mov
pop
dec
jmp
iret
mov
inc
jb
jg
ljmp
pop
insl
clc
and
mov
mov
ret
jecxz
scas
rorl
ret
in
mov
lds
xchg
lock
jnp
pushf
inc
push
jg
pop
pop
lock
xor
jp
in
stos
pop
fiaddl
and
xchg
call
jo
es
cmpl
lock
icebp
arpl
push
jle
pushf
xchg
lods
cs
mov
sbb
es
pop
test
es
jo
ficoml
ss
xchg
sub
mov
mov
subl
dec
mov
inc
dec
fcoms
or
fdivr
loop
aad
jne
lahf
xlat
test
outsl
movsb
loop
xlat
inc
lods
push
push
pop
arpl
jno
aas
adc
into
pusha
xchg
sub
push
mov
mov
ficoms
xor
mov
push
rcr
pop
std
cmp
dec
repz
shrl
sbb
pop
push
stos
jecxz
mov
mov
ret
fisubrl
stos
int3
push
cmp
pop
dec
mov
lahf
jg
loopne
shrb
xchg
cli
or
push
and
setp
pop
and
push
lods
imul
test
push
data16
push
clc
xlat
in
mov
cmpsb
mov
sbb
ror
flds
dec
mov
dec
dec
cltd
hlt
out
adc
hlt
das
outsb
xor
or
sbb
mov
addb
stos
lods
mov
test
push
das
mov
jg
jl
cltd
xorb
sahf
jns
fimull
mov
sbb
ss
lahf
pop
push
jo
jne
insb
jl
mov
call
sbb
inc
jne
mov
repz
cmp
sti
inc
in
jns
jge
dec
jl
stc
orb
xchg
pop
push
pop
xchg
or
ret
pop
and
fidivl
fstpt
cmp
andl
or
xor
fcoms
jns
sahf
loopne
jmp
icebp
mov
sbb
loop
repz
lret
iret
xor
mov
inc
data16
rcrb
std
adcl
imul
adc
shll
hlt
add
and
mov
sar
cltd
pop
mov
scas
mov
cs
hlt
mul
and
js
jnp
stos
mov
cmp
fld1
int3
cmp
push
inc
stos
in
jno
jno
pop
xlat
push
jg
adc
pop
dec
push
xchg
jns
adc
jecxz
imul
inc
adc
pop
in
mov
or
mov
testb
sub
xorb
cmp
inc
pushl
pop
adc
mov
jmp
xchg
push
xor
xor
xchg
ljmp
push
fdivrs
lods
mov
push
pop
mov
push
jmp
xchg
push
and
jl
cwtl
arpl
mov
push
cmp
push
pop
sbb
stc
lret
and
popl
cmpsl
xlat
lods
pop
jle
int
jns
sub
sti
mov
lods
fdiv
push
push
push
cld
mov
popf
test
ret
jb
sbb
rcrl
xor
jae
lea
mov
mov
mov
out
mov
rorb
cli
ss
mov
mov
push
int
or
mov
mov
jle
dec
aas
clc
bound
leave
leave
sub
mov
inc
xchg
mov
div
push
inc
push
and
xchg
inc
fistpl
push
xor
dec
popa
jg
outsl
bound
es
inc
jno
push
sub
xor
lcall
pop
fidivrs
fmull
cmp
std
inc
push
imul
repnz
aad
mov
fidivs
repz
lock
aas
jno
sbb
adc
add
imul
cmc
into
pop
loopne
push
push
xor
adc
jae
aad
inc
sbb
xchg
cmp
adc
cmp
int3
sbb
pop
test
js
mov
fidivrl
js
sub
jns
out
out
xlat
jmp
stc
or
fdivs
jg
pushf
mov
scas
pop
leave
xchg
test
notl
cwtl
loopne
imul
daa
dec
sub
loopne
leave
jle
jbe
or
leave
cmpsl
cmp
scas
dec
out
push
mov
sub
xor
and
test
cli
lods
or
push
repnz
out
aam
stos
out
push
imul
mov
arpl
ret
add
repnz
call
xor
in
mov
fildll
push
in
add
repz
sahf
lahf
scas
or
sub
mov
push
out
add
push
push
or
fs
jge
inc
scas
cmc
pop
cmc
push
mov
push
inc
jmp
repz
cmpsl
mov
outsb
cltd
stos
push
xchg
inc
push
dec
sti
jns
ja,pn
mov
int3
push
cli
inc
enter
fst
pop
repnz
inc
ret
es
adc
sahf
std
inc
fs
ljmp
bound
mov
sub
jo
inc
scas
inc
ret
sub
mov
sub
test
cmp
mov
jg
jb
mov
adc
addr16
data16
mov
jge
ljmp
xor
sub
mov
mov
movsl
fucomp
xor
ss
leave
mov
and
test
aad
and
mov
lock
mov
pop
add
and
lret
add
mov
cmpsl
loopne
and
inc
repnz
gs
in
xor
loope
jnp
mov
mov
in
jg
inc
cmp
push
pop
cmpsl
push
inc
push
int
int3
xchg
sub
lcall
imul
lock
fmul
jle
fisubl
testb
lods
sbb
xchg
insb
insl
stos
xor
inc
sub
lcall
lcall
lods
dec
and
out
pop
add
out
pusha
ffreep
xor
loope
inc
dec
lods
pop
sbb
mov
cmp
sub
stc
shll
inc
sbb
sub
xchg
xchg
cmp
sbb
movsb
jg
std
pop
rolb
inc
out
aaa
jle
hlt
pop
adc
mov
dec
mov
sbb
test
pusha
lock
popf
lcall
fisubl
outsl
fwait
xor
pop
sbb
mov
mov
lock
jle
jbe
sbb
aas
fwait
orb
ja
xor
aad
lret
jg
lret
mov
mov
jno
enter
push
stos
jb
mov
inc
data16
loope
aaa
pop
pushf
mov
cmp
stc
cwtl
fs
dec
xor
mov
and
scas
xchg
arpl
xor
test
clc
loope
daa
test
dec
loope
sub
add
daa
mov
shr
adc
mov
sub
pop
sbb
stos
aam
dec
fwait
adc
or
out
lcall
push
or
cmp
mov
mov
or
dec
mov
test
mov
ret
or
rcrl
scas
outsl
jne
push
add
sub
dec
cld
sbb
int3
in
xchg
add
dec
xor
or
icebp
std
ss
jae
xchg
les
lds
mov
mov
sub
lock
das
jb
inc
jns
test
rclb
repnz
pop
in
lds
rcl
call
insw
out
cs
out
movsb
inc
in
ret
mov
xchg
arpl
add
mov
dec
pop
push
jg
divl
int3
push
mov
jnp
in
fnstsw
pop
das
das
xchg
xor
shl
test
jge
push
mov
mov
cmp
and
jne
sub
mov
jne
mov
fidivrl
insl
pop
push
mov
popa
push
mov
lds
mov
aas
cmp
push
mov
jbe
add
push
adc
push
clc
das
icebp
ja
and
daa
push
leave
mov
cmp
pop
or
movq
pop
incb
pop
jge
or
fidivrs
xlat
pop
cld
test
es
cld
jbe
int
jle
clc
loope
xor
push
push
lods
adc
cmp
repnz
daa
sbb
fnsave
cmp
cmpsl
out
jmp
popa
jbe
notl
mov
adc
lret
and
aad
scas
aam
imul
sub
es
mov
cmp
adc
loop
aas
xchg
sbb
and
lods
lds
xchg
fwait
pop
rorb
rolb
ljmp
ret
ds
mov
jb
lock
mov
movsb
pop
xor
xchg
sar
sbb
push
fwait
xor
idivl
mov
jl
xchg
aaa
dec
je
arpl
xchg
sbb
mov
mov
jnp
mov
push
movsb
ja
jle
neg
push
lahf
mov
iret
stos
adc
adc
loope
cmpb
jle
in
in
mov
outsb
aaa
jg
push
dec
sbb
rcll
outsl
fbld
fs
out
sub
mov
cli
std
pop
and
jns
rcrl
mov
sbb
imul
cwtl
ror
pusha
mov
jae
pop
push
test
mov
arpl
cs
xlat
movsb
push
push
not
jb
in
insl
andl
test
mov
jge
mov
aam
pop
pop
rclb
xor
pushf
loopne
lret
sarl
les
leave
in
loopne
lods
add
bound
mov
pop
sahf
push
mov
mov
es
pop
shlb
mov
mov
popf
cmc
lods
into
mov
das
xchg
xchg
xor
mov
push
lods
rcll
dec
ret
pop
mov
shl
aad
jnp
lret
add
popw
jne
popa
jge
cwtl
roll
or
xorl
lock
jo
jp
mov
cltd
xor
mov
test
dec
push
bound
mov
mov
lret
testb
or
das
mov
mov
loop
dec
movhps
inc
push
mov
ljmp
cli
ret
jmp
mov
adc
repnz
pushf
jnp
arpl
data16
lods
xor
xchg
cmp
or
vcvtpd2psx
lds
pop
jne
clc
stc
fcompl
addr16
mov
and
fildll
cmp
mov
jns
pop
movsl
dec
push
xor
daa
mov
mov
or
je
push
mov
out
movb
loope
xor
push
cmpsb
in
popl
sub
xchg
xlat
cmp
xchg
shll
sahf
mov
fwait
sbb
ljmp
lea
cmp
negl
js
jno
subl
jle
pop
mov
push
pop
es
decl
test
out
bound
and
stos
aad
movups
decb
cld
sub
xchg
push
cltd
or
add
popf
jns
js
lea
adc
sbb
inc
jle
fsubrl
xchg
imul
dec
loop
rclb
insl
dec
inc
inc
shrl
pop
sarb
inc
mov
jecxz
jne
xchg
xchg
leave
repz
outsl
insl
cmc
jae
jmp
popf
lcall
fidivrs
mov
repnz
daa
add
mov
mov
mov
mov
lods
cmp
je
fcoml
out
sahf
sahf
icebp
cmpsb
mov
addb
gs
xchg
idivb
jne
adc
daa
mov
shll
or
sbb
in
mov
mov
jge
cmp
mov
inc
sbb
adc
jecxz
mov
into
and
nop
das
jmp
divb
in
mov
xlat
pop
popf
mov
or
sub
cld
nop
jae
ljmp
int3
mov
aas
dec
dec
lock
or
push
xchg
sbb
cmp
mov
jecxz
push
repnz
xor
push
fimull
sub
daa
dec
xchg
mov
movsl
sub
dec
mulb
stc
pusha
loope
jae
push
pop
mov
cmpsl
or
push
test
out
call
loopne
or
mov
and
xchg
icebp
pop
cs
cld
in
xchg
rorl
aas
rclb
insb
pop
insl
inc
cmp
jb
in
jbe
inc
ss
andl
mov
es
mov
jne
jbe
jbe
push
das
cld
push
clc
xor
pop
sbb
push
mov
adcb
rcll
jns
xchg
push
imull
and
sti
mov
rcrl
sub
cmp
pop
ja
stc
lods
gs
fnstcw
int
cmp
mov
lock
xchg
call
pop
mov
cmp
loopne
jmp
mov
jbe
and
sbb
push
sti
push
pushf
push
in
adc
js,pt
jle
in
jb
sbb
sub
jb
pop
pop
xlat
mov
jle
xchg
xchg
xor
dec
aad
xchg
flds
dec
shrl
jb
jno
cli
jl
daa
les
js
sbb
xchg
push
pop
fisubl
repz
xchg
mov
ret
xlat
shl
rcr
les
adc
mov
push
iret
mov
stc
xlat
push
ds
mov
pop
cmp
or
test
popf
dec
xchg
push
jno
rep
aad
cli
pop
push
cwtl
jle
cltd
shlb
outsb
xor
popa
loopne
dec
cmc
jmp
xor
xor
test
mov
stc
outsl
ret
jo
repz
jmp
push
cmp
in
mov
fcom
xchg
aad
dec
insb
inc
mov
push
and
jno
pop
mov
and
cmc
jl
popf
sub
jmp
xchg
rol
neg
pop
and
xchg
xchg
pop
aad
loopne
out
stos
bound
fisttps
pop
mov
dec
out
sub
int3
movsl
mov
inc
in
cmp
jge
cmp
cli
mov
jmp
pop
dec
ds
push
ljmp
in
or
push
jmp
mov
lods
out
cs
sbb
je
ljmp
bound
push
and
pop
imul
call
mov
mov
mov
rolb
and
repz
scas
testb
rcl
xchg
test
in
test
js
scas
sbb
mov
xchg
fsts
sbb
fstl
insl
dec
lods
data16
ret
mov
adc
call
adc
lods
shr
xor
jecxz
push
mov
cmp
in
popa
inc
xchg
cmp
lcall
ret
dec
jne
outsl
pop
xchg
lahf
mov
pop
fdivp
stos
shll
lret
fistpll
stc
shr
jmp
je
cli
and
fisubrs
xchg
mov
mov
mov
aam
mov
loopne
lock
not
mov
push
adc
inc
or
jmp
pop
cmpsb
ja
repz
jbe
xchg
push
fistpll
pop
mov
and
lds
xchg
xchg
sar
lret
jnp
inc
sbb
jb
rcr
adc
or
clc
mov
inc
mov
mov
lea
adc
pusha
cs
lock
cmp
xor
je
scas
aam
cmpsl
mov
call
cmp
mov
cmpsl
jg
cld
in
out
ss
dec
adc
out
aaa
adc
aam
into
rorb
inc
jno
fcoms
cmp
clc
loope
in
movsb
adc
dec
jbe
mov
sub
mov
mov
dec
mov
mov
decb
in
cmc
dec
clc
cld
shr
inc
mov
and
sub
loop
mov
xchg
cmc
dec
dec
xor
ret
aam
cltd
or
jmp
push
jmp
sbb
aaa
xor
mov
cmp
pop
in
jmp
sahf
bound
push
add
data16
jae
mov
inc
pop
stos
add
jns
test
xlat
ret
adc
and
adc
fstps
mov
mov
jbe
out
dec
aaa
mov
jno
jns
mov
mov
xor
mov
lret
mov
xchg
jmp
cmp
push
pop
jo
arpl
adc
jmp
cmp
jbe
adc
lret
je
push
loope
cltd
mov
push
mov
xlat
pop
jae
hlt
test
push
pop
loope
sti
lahf
inc
and
fcmovb
lret
add
ret
add
push
je
fsubs
gs
test
xchg
cli
cltd
std
push
aaa
cs
mov
lods
or
pop
mov
shll
jmp
pop
aas
dec
stc
movaps
movsl
push
arpl
scas
mov
in
jne
add
push
jmp
lods
sub
lcall
repz
xor
dec
lcall
push
repz
jae
leave
std
sub
push
ficoms
dec
fcompl
test
imul
test
sarl
xor
lds
mov
ds
lret
lods
pop
push
das
mov
pop
rclb
in
mov
pop
push
or
xchg
inc
clc
jmp
lea
std
nop
cmp
stos
xchg
adc
ja
pop
leave
je
repz
clc
fcomp
pop
faddl
pusha
mov
dec
cltd
mov
jle
inc
lret
cmp
or
xor
or
jb
pop
cmp
mov
add
xchg
xor
popf
and
jle
sub
push
add
adc
xchg
pusha
mov
icebp
jl
stos
jmp
mov
adcb
add
mov
test
repz
imul
inc
xor
cs
pop
sub
repz
push
xor
popf
pop
test
negb
push
mov
add
setle
dec
mov
sti
test
flds
push
xor
loopne
loope
push
rorl
rol
xor
aaa
in
lcall
dec
or
mov
xchg
aad
imul
push
and
aad
xor
movsb
cmp
negl
adcb
cld
and
and
and
mov
ss
lahf
shl
int3
pop
pop
xchg
push
mov
sub
cmp
xor
out
cmp
pop
dec
scas
in
mov
add
sbb
xchg
out
or
out
xor
fstl
les
jge
mov
fisttpl
filds
in
int3
or
gs
mov
push
rcll
test
sbb
jl
sbb
mov
nop
mov
push
sbbl
push
hlt
lret
ds
into
js
and
int3
and
and
mov
sub
sbb
in
cmp
or
lahf
movsl
in
push
jecxz
xor
out
into
add
sahf
adc
in
imul
int
dec
jo
leave
ficoms
inc
pop
cltd
dec
mov
aam
imul
sub
in
out
fbld
xor
pop
xchg
movsl
std
stos
push
cmp
sti
push
and
into
pusha
test
mov
pop
jmp
ss
xchg
push
clc
adc
aam
scas
jp
std
aas
test
pop
jno
jae
dec
mov
sub
cmpsl
sub
mov
rolb
mov
shl
jge
add
jo
test
xor
cmc
pushf
ja
in
jne
push
mov
sti
aam
cmp
mov
dec
mov
adc
lahf
mov
mov
movsl
aad
sub
andl
mov
lods
pop
sahf
jae
mov
mov
add
push
je
pop
int
addr16
aad
dec
xchg
sbb
in
pop
mov
std
sub
lret
inc
and
arpl
aam
push
cwtl
mov
and
in
jle
fdivl
nop
sbb
adc
insb
and
repnz
push
lods
dec
cmp
icebp
fs
test
scas
dec
jnp
out
jnp
pop
js
jo
shrb
inc
and
mov
push
inc
shll
icebp
hlt
fidivrl
lods
and
push
mov
or
pop
movsb
or
xchg
orb
cmpsb
repnz
xchg
mov
enter
xchg
jmp
sbb
pop
lods
les
mov
xchg
mov
xlat
mov
enter
dec
xor
mov
sbb
or
clc
sahf
pop
out
iret
inc
repnz
movsb
gs
jmp
add
cmp
imulb
dec
cmc
mov
les
jnp
insb
iret
or
cmp
fistpll
bswap
push
fcomps
fimull
or
or
sahf
push
fdivs
jle
shrl
test
popf
and
dec
sub
lods
push
out
cs
xchg
mov
cli
push
add
mov
in
add
pop
scas
or
push
cmc
push
xchg
push
outsl
sub
add
jg
les
out
cmp
lods
inc
jg
sar
mov
daa
jle
mov
or
scas
xchg
gs
shl
lcall
insl
sti
lds
xchg
out
test
mov
in
enter
pop
incl
lods
data16
cmp
jae
shl
adc
loope
sub
pop
popa
pop
test
mov
jnp
jbe
int3
sub
cld
lods
inc
inc
sbb
fldl
jg
sbb
clc
mov
stc
mov
out
cld
xor
or
xchg
testl
hlt
jl
test
lret
cmpsl
sub
mov
repnz
push
fistps
xchg
xchg
iret
lods
mov
push
dec
mov
mov
mov
icebp
clc
cs
mov
sub
int3
mov
cmpsl
cmp
int
add
ss
enter
inc
decb
outsb
mov
mov
add
sub
aaa
mov
or
aad
inc
inc
fstps
in
sbb
mov
dec
mov
fistl
negl
call
push
scas
mov
lds
cmc
sub
dec
and
xor
movsl
jno
dec
sub
or
push
scas
aad
cltd
aad
sub
mov
cmpsb
int3
out
stos
xor
sbb
insl
repz
jbe
ret
out
lahf
lock
and
vmwrite
lods
adc
in
aam
in
test
imul
mov
outsl
mov
xchg
enter
adcb
push
push
popf
pop
inc
scas
xchg
push
push
xlat
jns
inc
jmp
xchg
mov
test
loope
xor
sbb
push
lods
lcall
xchg
xchg
gs
mov
sbb
insb
sub
inc
ret
inc
xor
arpl
xor
sub
imul
ficompl
adc
and
stos
sub
xchg
cmp
dec
sub
daa
push
movsb
pop
cmp
imul
in
lret
xchg
sbb
and
mov
bswap
les
lahf
shll
mov
popa
mov
std
js
popa
test
push
mov
es
lods
mov
jne
negl
xchg
cmc
orl
imull
aaa
ret
ljmp
leavew
dec
cmp
or
mov
ss
aas
fs
sub
sub
mov
sbb
aas
mov
sbb
int
or
aas
inc
loop
insl
dec
sub
and
add
lahf
jns
xor
adc
test
xor
imul
jg
sub
pop
leave
cmpsb
mov
push
lret
movsb
mov
xor
adc
push
in
cwtl
jno
push
dec
loope
or
pop
iret
mov
sbb
mov
iret
mov
scas
shl
psubsw
aad
jge
es
adc
sub
insb
and
dec
mov
gs
push
mov
xchg
addr16
jnp
mov
test
jg
int3
ss
mov
mov
xlat
fs
sarb
stos
inc
ljmp
enter
inc
mov
addr16
xor
movsl
xchg
push
cld
jns
enter
sbb
in
jl
cs
dec
sbb
dec
add
popl
cmc
jns
cmpsb
jg
cld
jo
xor
jo
push
inc
out
mov
and
shrl
push
sar
shlb
mov
xchg
inc
jne
mov
leave
movb
cmpsb
xor
xchg
stc
popa
mov
loope
xchg
mov
aam
into
xor
test
loopne
add
mov
push
shrb
and
in
out
ljmp
dec
push
in
mov
and
adc
fwait
cmc
mov
test
repz
roll
xlat
sub
xchg
es
jge
fdivrl
cld
pop
popf
xchg
pop
gs
sub
mov
sti
sub
movsl
push
dec
sbb
call
xchg
ret
mov
adc
mov
test
pop
adc
jae
imulb
sub
in
push
push
mov
push
loope
xchg
test
gs
cmp
icebp
arpl
jb
dec
outsl
add
shrl
test
push
inc
sbbl
stos
movb
dec
ret
and
jg
or
in
xor
fcoml
jnp
sbb
movsl
nop
aad
dec
stc
mov
jb
mov
ret
cmp
jne
mov
fsubrp
sti
pop
mov
dec
push
arpl
and
mov
lret
lock
dec
out
cltd
jae
cli
push
stos
in
push
push
repz
pop
fdivrs
xor
rcrb
iret
add
cli
xor
sub
cltd
js
add
lahf
dec
gs
jle
sub
movsl
jo
xchg
and
shll
cli
pop
cmpsb
je
dec
sahf
stos
aad
mov
pop
or
dec
mov
loop
xchg
mov
enter
cmp
mov
jae
sbb
xchg
in
xchg
cld
and
ret
and
std
xor
mov
pushl
cltd
sbb
jg
cmc
adc
push
fisubl
xor
ret
cmc
pop
jle
cltd
mov
jnp
cmp
cwtl
stc
in
popa
inc
lret
cmp
das
daa
jle
sbb
int3
xor
jb
jle
jmp
call
popf
das
adc
mov
xchg
mov
push
add
xlat
sbb
pop
jg
loope
xchg
and
shll
pop
sub
mov
xchg
aaa
dec
arpl
cmp
pop
pop
in
iret
fwait
lret
lods
aaa
xchg
pop
push
repnz
lock
shll
in
mov
jecxz
fimull
arpl
cmp
pop
xchg
jmp
xor
popf
pop
mov
jnp
push
adc
enter
jg
mov
dec
into
test
fidivrs
jno
push
loope
mov
push
mov
push
andnps
iret
mov
out
mov
push
push
cmpsl
mov
je
sbb
mov
cmpb
lods
pmulhw
movb
dec
test
jl
add
sub
lret
sbb
shll
pop
pop
bound
icebp
adc
add
sbb
and
into
xchg
insl
mov
in
pop
xor
rcrb
movsb
mov
and
addb
sub
test
jmp
inc
mov
and
mov
mov
pop
fldenv
outsl
and
add
imul
loop
clc
aaa
fcmovnb
dec
das
ficoml
and
push
loope
fwait
js
xchg
push
sbb
cld
lods
mov
add
push
mov
mov
sub
cld
pop
sbb
fildl
pop
jecxz
or
call
pop
cld
pop
test
cmpsl
les
cmp
outsb
fimull
pop
push
jnp
test
insb
and
xor
idiv
xor
es
hlt
imul
jne
in
xor
dec
out
cmp
out
push
out
cwtl
xor
mov
adc
pop
sub
fstps
imul
push
inc
mov
out
mov
cmp
data16
mov
sbb
sbb
gs
mov
and
inc
adc
or
sti
push
sub
jbe
and
nop
call
sbb
mov
push
ja
pushf
sbb
jp
push
push
out
or
ljmp
je
stos
jmp
push
sbb
jg
cmp
xchg
fs
sbb
mov
sbb
frstor
lret
fnstenv
jp
mov
add
push
lahf
mov
shlb
dec
or
pop
xor
out
cmp
pop
push
icebp
daa
enterw
movsl
jbe
sbb
adc
xor
sub
dec
lods
stos
xchg
jecxz
int
ret
push
imul
daa
jb
shl
addl
cmp
shl
sbb
ficompl
mov
push
push
fs
pop
aaa
or
pusha
stos
mov
les
cmp
mov
lea
xchg
je
lods
lahf
push
loopne
hlt
data16
add
cli
mov
iret
adc
jmp
sahf
cmp
shrb
push
outsb
pop
leave
mov
cld
test
push
push
rorl
cmc
int3
hlt
dec
xchg
sbb
ficompl
cs
dec
in
sub
inc
aad
lahf
mov
sbb
xor
je
push
sbb
sub
popf
sub
mov
jmp
mov
test
rol
movsl
pop
aas
cwtl
pop
sub
mov
or
pop
scas
dec
mov
push
cli
and
pop
cmp
push
leave
sbbl
push
incl
lret
dec
repnz
xchg
xor
sahf
insl
stc
dec
loopne
jp
pop
push
stos
je
rorb
and
pop
mov
sarl
test
inc
xchg
pushf
mov
popa
sub
pop
hlt
sub
or
mov
test
clc
mov
xor
mov
pop
add
subl
sub
test
ficompl
pop
add
fsts
popa
mov
push
out
cli
jmp
stos
ret
pop
push
xchg
rclb
dec
test
imul
xchg
jnp
mov
adc
int
pop
and
icebp
shrb
jle
xor
mov
jp
ret
and
fdivl
fs
aad
or
mov
add
pop
sbb
jbe
cltd
gs
mov
adcb
pop
lea
mov
inc
lret
cmpsb
jb
orl
lahf
fdivrp
cmp
mov
adc
lea
das
mov
xor
into
dec
sub
dec
jns
adc
test
repz
push
xchg
cltd
test
loope
or
aas
mov
cmc
xchg
inc
in
cmp
sbb
jb
movsl
daa
dec
std
and
push
cwtl
or
js
out
cmpb
pushf
mov
leave
lock
mov
sti
cmp
popf
into
dec
and
inc
stc
movsb
mov
cli
rorb
pop
mov
inc
pop
pop
rcrl
orl
outsb
pop
jge
sub
repnz
push
repz
adc
call
test
sbb
insl
push
add
add
fcoml
and
xor
xchg
xor
dec
jb
dec
mov
out
in
adc
arpl
decl
inc
stos
repz
mov
push
cmpsb
mov
aas
daa
push
test
scas
jp
repz
and
clc
add
add
jbe
add
add
add
push
mov
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
xor
add
add
ja
and
lock
movsb
cmpsl
dec
nop
inc
scas
cmc
push
inc
test
ret
loope
setl
in
inc
cmpsl
lahf
pop
mov
ret
pavgusb
cwtl
and
sbb
add
add
xchg
or
and
pop
push
clc
stos
pop
fiaddl
push
mov
fdiv
or
loop
jmp
pop
cli
sti
lret
enter
cmp
movsl
lret
shrl
and
xchg
ret
clc
mov
mov
addl
add
outsl
aad
scas
pop
mov
or
hlt
notl
adc
dec
sub
xchg
cmp
cwtl
imull
or
push
xor
mov
cmp
fucom
outsl
pop
in
js
dec
dec
push
sub
jns
jb
cmpsb
jns
pop
insl
push
aaa
enter
dec
xor
sub
xor
dec
iret
cmp
or
adc
xchg
inc
aam
dec
push
push
jo
sbb
sbb
pushf
jbe
mov
jle
dec
inc
and
inc
xor
xchg
pmaxsw
add
xchg
inc
cmp
add
and
jb
loopne
jo
adcb
jge
sub
orb
xchg
add
xchg
gs
pop
aad
in
dec
sbb
push
xor
push
jb
sub
jbe
and
es
std
jl
lea
stos
cmp
lock
xchg
test
adc
jle
push
or
mov
lock
dec
aam
jns
mov
pop
je
cmovl
scas
jg
int3
dec
sbb
mov
pop
sub
mov
mov
mov
xchg
adc
ja
jmp
inc
push
sub
sub
adc
mov
fstpt
rolb
jnp
jno
inc
mov
sbb
mov
mov
std
dec
or
xchg
jg
jne
or
cmp
mov
and
add
xchg
gs
sub
hlt
ljmp
mov
add
push
mov
shll
dec
mov
push
push
ljmp
das
inc
outsb
pop
mov
jecxz
xor
out
cs
rcrb
cmp
cmpsl
test
jbe
mov
and
outsl
add
mov
mov
jbe
imul
xorb
mov
mov
jge
or
pop
dec
pop
inc
pop
mov
shl
xchg
rcr
imulb
inc
jnp
shl
mov
pop
cli
xor
dec
cmp
sbb
mov
repz
sub
int3
fstpt
fdivrs
sub
lds
lcall
mov
ljmp
ss
mov
repnz
mov
sbb
lea
mov
jge
iret
jb
xchg
scas
mov
fwait
and
inc
rcrb
pop
loop
dec
adc
mov
sub
and
cli
subps
stc
shrl
mov
call
faddl
xchg
pushf
fwait
data16
outsl
aas
mov
mov
clc
jne
sub
dec
les
and
sub
pop
or
push
loope
and
js
and
roll
jmp
pop
lcall
cli
cmp
xchg
icebp
in
mov
cmp
andb
push
lret
or
pop
push
jnp
sub
insl
insb
lcall
mov
test
inc
inc
jnp
outsb
sub
cmp
adc
mov
repnz
scas
mov
out
in
pminsw
in
and
jl
hlt
movsb
das
fdivs
popw
pop
cli
fwait
in
mov
xchg
imul
outsb
jbe
sub
bound
dec
fwait
or
and
int3
lods
add
aam
cmovl
in
stos
mov
nop
movsb
sub
test
adc
add
and
popf
mov
sub
popa
pop
movsb
lods
mov
das
sti
mov
out
pop
arpl
or
out
pop
jmp
fwait
ret
xchg
pushf
sub
xchg
fwait
icebp
cmp
sub
push
adc
or
loop
cmp
scas
jmp
jmp
lret
out
cmc
lods
fildl
daa
js
sub
mov
and
stc
cmp
scas
sarl
mov
mov
and
decb
add
movsl
aam
test
fbld
out
dec
rcrl
add
jno
cmc
inc
jne
mov
add
dec
sbb
and
sub
dec
cwtl
push
mov
shlb
mov
fnstsw
sbb
movb
mov
aad
adc
test
cmp
scas
faddp
outsb
and
sub
out
adc
rolb
jp
and
les
push
pop
call
inc
adc
sub
or
adc
shrl
dec
inc
sub
xchg
test
pop
lods
cltd
les
adc
pop
dec
adc
nop
adc
mov
pop
hlt
pushf
add
add
jg
test
test
xor
jno
lock
mov
lea
insb
in
pushf
loop
aam
out
ja
loope
push
mov
push
popf
or
push
xlat
adc
sbb
insb
fisubrs
add
aaa
push
insl
aas
jle
cmpl
mov
imul
jg
xchg
jb
popa
movsl
std
outsl
shrb
cltd
xlat
cmp
loop
inc
sub
imul
push
into
out
sbb
xor
pop
loop
mov
loope
inc
dec
in
add
jns
fst
xchg
mov
jg
mov
mov
push
mov
icebp
sbb
dec
xor
jp
mov
dec
fstpt
bound
pop
movsl
cld
rclb
mov
in
mov
sahf
test
in
dec
add
and
data16
push
or
out
pop
mov
fcomps
lret
xchg
push
adc
inc
inc
push
pop
in
stos
xchg
pop
pop
out
cmp
mov
and
cmp
das
adc
out
mov
mov
add
pop
jecxz
pop
fisubl
dec
test
sub
jmp
sbb
mov
sahf
mov
lea
js
fisubs
shrl
test
in
jnp
sbb
mov
mov
pop
inc
movsb
inc
hlt
add
push
xlat
nop
ja
pop
stc
mov
std
xchg
ds
test
icebp
int
sti
loop
adc
adc
and
adc
xchg
push
adc
mov
rol
jp
clc
aaa
pop
aas
in
sbbl
pop
xchg
add
outsl
in
inc
decb
ljmp
bound
in
adc
aaa
ffree
clc
aas
out
bnd
dec
adc
lret
mov
movsl
frstor
jmp
push
fdiv
push
outsl
outsl
aam
jmp
sub
cmpsb
jb
push
xchg
les
mov
xchg
mov
sbbl
mov
mov
adc
or
adc
bnd
testb
cmp
icebp
out
call
hlt
inc
adc
dec
cmp
ret
pop
mov
add
lock
in
or
mov
xchg
test
push
shrb
cmp
shr
jl
cli
lret
shll
or
movsl
inc
inc
xor
or
movsb
dec
mov
push
mov
mov
push
into
loopne
sub
mov
sub
sbb
ljmp
pop
movsl
fistps
iret
fdiv
cli
cmc
mov
add
push
adc
or
pop
pop
mov
dec
mov
adc
sub
jmp
sbb
pushf
jge
sarb
xchg
lcall
mov
nop
outsl
scas
adc
inc
jge
sub
clc
push
pop
and
cld
push
inc
sbb
cmp
adc
xchg
aaa
addr16
xchg
xchg
lahf
xor
sahf
mov
inc
shl
sub
loope
jo
hlt
sub
xor
sbb
shrb
lahf
xchg
fildl
mov
out
cmpsb
pop
mov
arpl
sarl
push
inc
out
mov
jo,pn
jmp
aam
inc
inc
mov
dec
pop
icebp
inc
call
inc
cld
shl
pop
push
out
and
fwait
test
ret
push
addr16
hlt
mov
cmp
loopne
mov
aas
push
adc
mov
adc
cmc
adc
out
movsl
into
mov
lock
pop
cmpsl
jge
add
push
or
xchg
xor
mov
dec
in
xchg
inc
lahf
pop
es
adc
sub
sbb
popf
xorb
js
cmpsb
test
xor
add
insl
and
hlt
les
xor
or
mov
pop
mov
popf
cmc
aam
or
fwait
sbb
or
sbb
cmp
push
daa
fmuls
pop
xchg
std
loop
repz
sub
mov
mov
jle
xchg
clc
mov
fimull
mov
pop
xor
int3
shrl
pop
cmpsl
or
xchg
sbb
xchg
pop
pop
insl
in
xchg
cmp
add
cmp
sbb
dec
pop
add
dec
mov
or
daa
add
sub
insl
std
ds
dec
cmc
scas
rcr
inc
dec
inc
nop
push
sbb
push
xchg
insl
mov
sub
insb
fists
cmp
xor
insb
mov
and
sub
inc
cmpsl
add
ds
lcall
js
inc
xchg
fwait
std
push
loopne
mov
push
xor
push
push
js
cmpsl
push
insl
sub
pop
or
test
pop
sbb
sbb
test
sbb
pop
add
fsts
daa
jb
cld
stos
cmp
sbb
mov
mov
fimuls
clc
hlt
fimuls
shll
push
test
sti
push
bound
rcr
jbe
xchg
xor
and
das
pop
xchg
adc
pushl
cmp
push
cmp
nop
jl
scas
adc
or
repnz
pop
adc
stos
and
fs
jg
jl
mov
xor
adc
add
dec
ljmp
leave
cld
nop
push
dec
ds
jo
movsb
sahf
scas
mov
mov
notb
mul
bound
jb
jp
add
xchg
ret
xor
ja
mov
jo
xlat
xlat
sub
rorb
mov
xor
sub
inc
rorl
jge
xlat
sarb
push
out
or
cwtl
push
xchg
inc
iret
loope
insb
mov
insl
lcall
pop
add
xor
lcall
mov
mov
ljmp
movsl
sbb
jle
cmp
xlat
int
sub
xor
push
sbb
pop
leave
test
inc
xchg
dec
mov
lahf
pop
fstps
aam
xor
bound
jno
cmc
ss
dec
mov
in
xchg
xchg
test
add
fdivl
shlb
lds
insl
ja
and
incb
ja
loope
sbb
pop
decb
push
jae
fnsave
int3
les
ficomps
div
imul
lds
leave
sub
jg
scas
lahf
cmp
push
testl
fsubrs
clc
xchg
adc
cmpsb
clc
test
fldenv
stc
sub
cli
and
lret
cmpsb
dec
push
shr
inc
sti
lret
sub
out
mov
mov
or
ja
stc
enter
cwtl
sahf
jbe
stos
sub
pop
push
pop
pop
lods
mov
mov
rorl
lahf
push
cmp
add
xlat
mov
imul
test
ret
test
cltd
mov
adc
jecxz
fwait
imul
xchg
add
cld
push
dec
jnp
mov
mov
int
pop
adc
sub
xchg
cli
andl
lea
sub
inc
xchg
and
aad
ja
lods
xchg
mov
loop
adc
xor
cmc
add
fstl
loope
sub
arpl
mov
or
cmpsl
lods
in
and
js
test
push
mov
aam
dec
je
mov
cmp
test
cwtl
xor
push
pop
adc
js
inc
jb
jne
addr16
jp
cmp
mov
jp
cmp
pop
mov
inc
xchg
out
xchg
loopne
outsl
dec
adc
pop
push
mov
loopne
adc
int
jp
in
call
pushf
push
mov
aaa
adc
push
mov
mov
inc
cmp
add
adc
mov
jmp
scas
inc
inc
cmp
subl
pop
cmp
jns
movsl
hlt
adc
outsb
push
repnz
adc
call
adc
ror
pop
and
cltd
mov
xchg
inc
aad
pop
sbb
stos
mov
xchg
in
and
dec
lods
dec
icebp
js
xlat
test
lods
push
fmulp
push
add
jmp
pop
or
jbe
jno
sbb
mov
jne
fsubrl
mov
sarl
lcall
lods
mov
fsqrt
stc
adc
pushf
aaa
jns
ds
addr16
push
xor
xchg
dec
sbb
repnz
insb
and
push
out
pop
or
sub
cmpsl
leave
sahf
sub
out
stc
fwait
or
push
shrl
lcall
sbb
jne
mov
mov
jecxz
sbb
adc
mov
les
cmp
pop
shlb
bound
jge
mov
push
jno
insl
jp
in
mov
mov
mov
outsl
dec
and
loop
test
out
add
pop
lods
shlb
lea
leave
adcl
jb
cmp
mov
jmp
or
mov
and
jmp
sahf
ja
push
dec
push
js
pop
mov
aad
in
icebp
insb
dec
mov
jecxz
or
cmp
xchg
insb
les
jge
mov
mov
inc
dec
lahf
jg
mov
dec
push
cmp
sti
mov
movsl
ficomps
sub
out
popa
fnsave
shrl
or
inc
xor
or
sub
addr16
loopne
fisubrs
mov
in
arpl
cld
rcrb
fistps
faddp
xchg
xchg
sub
dec
mov
lahf
stos
test
cltd
in
jecxz
jne
lods
test
sub
mov
pop
push
shr
adc
or
mov
fcoml
jb,pn
add
subl
dec
orl
daa
call
add
repz
push
rorl
shll
jp
mov
inc
xchg
mov
clc
adc
dec
mov
hlt
sub
sbb
dec
dec
cmp
cmp
mov
mov
sub
movsl
pop
mov
sarl
inc
or
sbbb
sbb
cmp
adc
and
push
mov
mov
ds
dec
das
mov
arpl
jb
sub
rcrl
and
jl
pushf
mov
in
loope
dec
dec
aam
fildll
pop
cmp
cmp
push
adc
mov
test
sti
fstl
shrl
xor
sub
fwait
push
jge
add
andb
inc
cmp
push
mov
xchg
ficoms
pop
in
aas
xchg
mov
xchg
in
ror
cld
shrd
ficoms
mov
ret
sub
jo
or
ds
pop
call
mov
or
push
test
pop
movsl
cli
into
push
dec
incb
lret
dec
push
dec
mov
and
mov
sahf
movsb
cmpsb
jge
movsl
sahf
push
inc
lods
pop
in
shrl
lods
rcrl
sahf
std
clc
sbb
int3
xchg
popf
sti
lcall
sub
inc
jp
test
dec
or
loopne
std
mov
xor
aam
mov
xor
outsb
or
mov
cld
fisttpl
in
mov
push
jp
and
popf
and
shl
adc
dec
dec
jno
inc
gs
dec
dec
movups
cmp
adcl
int
xchg
cld
data16
arpl
adc
dec
sbb
push
popa
jo
inc
es
loopne
jbe
movsl
mov
inc
ret
cmc
shrl
dec
adc
cs
cmp
mov
jmp
imul
xchg
adc
inc
std
or
xchg
push
roll
pop
rcrl
xor
fs
xchg
in
push
fwait
sbb
pop
and
das
leave
adc
dec
mov
adc
push
jle
pop
pushf
movb
std
jecxz
into
jp
stos
lahf
mov
iret
out
or
aaa
inc
outsl
sti
jp
aad
xor
ljmp
ret
mov
sbbb
rorl
and
and
ja
sbb
sub
mov
clc
inc
stos
imul
stos
adc
cmc
xor
dec
lds
mov
push
mov
push
stc
movsl
push
fs
aam
test
or
dec
lahf
sbb
bound
std
pop
push
jns
pop
jg
adc
cmp
aad
in
mov
push
imulb
decb
sarb
sub
testb
add
xor
mov
das
mov
lock
filds
mov
lcall
push
mov
push
and
fucomip
stos
and
fdivrl
mov
xchg
cmp
bnd
mov
data16
mov
ret
mov
shrl
lds
push
pop
shlb
push
ljmp
inc
cmp
xor
movsl
add
push
xor
inc
xorb
push
mov
cmc
jb
inc
dec
lahf
call
xlat
jecxz
dec
fbld
lds
push
dec
mov
sbb
adc
jne
inc
push
xor
inc
mov
call
mov
mov
dec
cld
inc
inc
fadds
mov
cmp
stos
insl
int3
aas
incb
repz
iret
hlt
mov
pop
cmp
add
gs
jp
xor
hlt
insl
ss
add
mov
pop
xchg
scas
cmpsb
bswap
int
in
icebp
aaa
pusha
sub
and
jae
or
mov
fildll
and
inc
sub
sahf
lock
sbb
data16
test
das
add
xorl
int
pop
enter
pop
popf
mov
insl
jo
mov
jge
push
in
mov
sub
pop
enter
rcll
cwtl
pop
loop
xchg
aam
and
aas
mov
int3
loope
outsl
mov
pop
cmp
int
fs
lret
fcoms
jne
dec
xchg
lods
xchg
xor
jg
cmp
loop
das
xchg
lahf
fwait
mov
stc
mov
je
outsl
sbb
mov
dec
rdpmc
insl
hlt
loope
adc
ja
dec
pop
inc
lret
pop
cmp
int3
cmp
test
test
jl
prefetch
dec
sub
adc
in
xorl
outsl
cli
cmpsb
shll
push
sahf
dec
cwtl
jl
out
adc
pop
imul
cmp
mov
mov
push
push
and
mov
push
int3
cmpsb
xor
xchg
pop
dec
pop
adc
xchg
mov
push
dec
mov
je
cmp
mov
ror
add
mov
adc
add
icebp
dec
adc
test
rcrl
push
mov
stos
xlat
jp
mov
les
push
pop
stos
cmpb
xchg
addb
sub
xchg
pop
das
dec
stc
mov
mov
push
pop
loopne
inc
loop
jne
mov
nop
push
aas
out
fistpll
roll
xchg
mov
pop
or
pop
pop
push
jg
lea
rorl
pusha
jo
sbb
in
mov
cmp
stc
fstpl
ret
out
jl
push
aaa
jne
cmp
lods
sbb
pusha
pop
or
ffreep
fstl
test
xchg
in
add
lds
sub
push
mov
inc
stc
push
inc
hlt
xchg
xlat
jecxz
lock
xor
mov
leave
jo
es
in
std
mov
xchg
xchg
fsts
or
jae
in
ja
inc
sbb
std
jbe
lcall
repz
test
lods
test
pushf
jne
mov
pop
pop
xchg
aad
mov
bnd
dec
cmpsb
das
stos
sbb
sahf
inc
add
aas
ljmp
push
jp
jecxz
adc
add
cmp
mov
not
cmp
cmp
jns
push
rcrl
pop
fldcw
int3
pop
imul
push
mov
cmpsb
gs
jg
jbe
roll
enter
fwait
mov
jo
rorl
jo
pop
mov
shrl
xorl
imul
dec
jmp
adc
push
mov
ljmp
mov
sub
cli
repnz
lcall
mov
imul
jno
fldl
movb
mov
pop
jbe
xchg
push
ds
pop
push
outsl
jp
adc
cmp
mov
sub
testl
inc
loopne
sti
jmp
sub
push
jnp
insb
or
out
adc
add
dec
sub
fstps
sbb
std
jae
inc
cld
je
lds
xlat
and
push
repnz
pop
mov
cs
lcall
mov
daa
jl
mov
call
jne
push
mov
jp
repnz
rcll
fisubrs
repz
jl
fstl
dec
sub
push
push
fisttpll
xchg
jg
dec
outsb
sub
push
test
mov
icebp
push
xor
jle
shl
jnp
dec
push
jecxz
loopne
push
xor
stc
jecxz
and
icebp
mov
addr16
in
loop
cmp
ret
inc
inc
aaa
lret
hlt
rclb
dec
xchg
jg
das
out
dec
adc
shll
arpl
jge
ficompl
stos
mov
cmp
pop
test
ljmp
in
xor
dec
jmp
cs
mov
push
daa
fisubrl
mov
jne
sub
jmp
les
into
sub
push
in
sbb
xchg
xor
mov
fisttps
mov
push
pop
inc
std
or
gs
mov
ljmp
push
sub
pusha
pop
adc
cmp
in
dec
adc
push
fs
out
into
cld
lea
adc
pop
mov
jns
and
mov
mov
and
xchg
call
js
aas
das
js
popf
loopne
mov
hlt
mov
cwtl
cmp
test
lret
push
xchg
cmc
movsb
lahf
mulb
out
inc
push
inc
ret
sarl
lcall
push
cmc
repnz
pushf
mov
cmpsb
push
dec
hlt
nop
fists
loope
or
inc
adc
push
xchg
fstps
stos
dec
iret
push
pop
add
pop
mov
dec
mov
jne
add
lret
mov
push
pop
jg
push
adc
add
mov
mov
cmc
inc
push
or
inc
adc
roll
stos
lret
aad
lcall
fnstenv
jle
cli
lret
xor
pop
xchg
mov
mov
mov
inc
bound
shr
aas
mov
pop
pop
aaa
dec
mov
hlt
adc
out
add
mov
hlt
je
sbb
sub
xchg
jo
jmp
cmp
aad
add
shll
aad
lock
jae
add
shrl
mov
lea
jne
lret
xor
mov
jp
dec
cmc
and
or
inc
insb
cltd
lea
scas
pop
out
lea
movsb
cwtl
insb
inc
mov
mov
jecxz
cmp
hlt
imul
sub
aam
fists
push
push
in
pop
or
mov
mov
pop
icebp
inc
pop
aad
adc
cmpsl
mov
lahf
push
dec
pop
cmp
in
mov
cmp
and
mov
mov
addr16
les
add
sub
jp
mov
test
sub
and
pop
mov
cmpsb
xlat
add
mov
cli
div
push
call
mov
sahf
ljmp
fists
fbld
cmp
cmp
clc
ss
bound
pop
jg
inc
mov
dec
inc
and
clc
add
cmpsb
daa
sub
xor
jl
sbb
pop
jno
push
out
roll
push
push
test
sub
testb
rol
xchg
sarl
outsb
cmpsl
jecxz
in
pop
sbb
mov
into
hlt
xor
xchg
adc
out
xchg
sbb
xchg
push
fldenv
cvttps2pi
out
xor
mov
xor
ror
insl
sbb
push
cmp
jp
cmc
xchg
mov
jg
out
xchg
mov
mov
bound
cmp
movsl
push
dec
push
dec
cmp
mov
mov
push
mov
mov
push
mov
jnp
lcall
inc
xchg
jle
in
lret
imul
xchg
push
xchg
jns
dec
pusha
test
clc
ret
lcall
aam
adc
aad
in
lcall
adc
out
mov
mov
lcall
inc
scas
loop
sub
xchg
add
fstl
and
add
push
insb
clc
mov
or
insb
mov
mov
cmpsb
push
mov
adc
out
andl
fcomp
mov
push
dec
fsubrs
test
into
stos
adc
js
pushf
sub
mov
xchg
fldpi
pop
xlat
jmp
mov
lret
mov
in
jg
and
sarb
mov
add
xchg
cmp
lods
ficomps
fnstsw
mov
dec
cli
lea
outsl
push
adc
mov
cwtl
mov
sti
mov
sti
popa
lock
cmp
cld
cmc
andl
cmp
sarb
loop
fnstsw
pop
repnz
movsl
inc
cmp
iret
xchg
shrl
add
push
imul
icebp
movsl
or
mov
fldenv
jge
ret
gs
jle
stos
add
cmovl
sub
xor
or
insl
sub
in
shrl
xchg
aas
inc
pop
fmull
jno
insb
add
and
popa
loop
mov
in
pushf
movsl
pop
loope
fs
clc
inc
iret
cli
fdiv
mov
stos
lahf
dec
cmc
ss
lahf
clc
int3
pop
pop
mov
call
mov
adc
xchg
int
sub
fwait
inc
cmp
stc
pop
adc
test
adc
cld
aad
divb
lret
int
ss
popa
cmp
popa
sub
ror
mov
adc
pop
das
jne
and
cs
jle
aam
repnz
or
cmp
jecxz
dec
push
push
in
mov
push
xor
inc
in
sbb
mov
and
push
jle
std
cmpsl
push
dec
and
pop
cs
mov
xor
mov
outsb
push
lret
pop
addl
xchg
cmpsl
ds
pop
push
sub
ret
mov
add
test
test
xor
lods
cmp
pusha
mov
cld
push
push
xchg
dec
dec
hlt
mov
int3
rcl
lock
xor
mov
fbld
dec
xchg
cmp
loop
mov
sbb
cli
imul
pop
add
push
pop
sub
lock
ss
loop
into
pop
pop
in
xor
push
jle
jp
je
xor
sub
push
cli
xlat
aas
icebp
cltd
cmp
test
aas
push
and
movsw
insl
cmpl
mov
in
or
and
push
jmp
jl
sub
cmp
xchg
pushf
push
inc
mov
mov
dec
pusha
lret
pusha
insl
dec
sbb
sti
and
inc
xor
insb
sti
xchg
mov
xchg
fwait
inc
test
into
cmp
jo
rclb
divb
std
jg
lret
mov
pop
notb
cmp
jae
cli
mov
push
popf
sub
inc
cmp
rcrb
mov
inc
sbb
lea
mov
scas
xor
sub
cmp
loop
fistpll
mov
and
mov
xor
lcall
fnstsw
sub
mov
aad
sub
push
mov
arpl
popa
cld
push
cmp
jno
pop
pop
dec
cmpsb
push
pop
std
jno
pop
push
das
movsb
gs
test
mov
lods
pop
das
push
pop
jg
xor
pop
sbbb
je
pop
repz
lods
and
repz
cmpsb
adc
std
and
cmp
inc
xchg
out
roll
mov
pause
leave
add
mov
or
sbb
xchg
xchg
dec
sti
jns
rcl
jg
mov
out
push
fidivrl
stos
pop
pop
aas
setp
mov
inc
adcb
sub
dec
mov
and
jno
rcrl
cmp
jg
mov
repz
jle
test
popf
cli
fcom
popa
test
sarl
or
loop
aaa
cmpl
fwait
jmp
inc
addr16
test
pop
movsl
pop
inc
aaa
cld
int
pop
test
inc
push
dec
push
mov
sub
cmp
pushf
cmpsb
xchg
add
jle
and
push
inc
mov
xchg
test
inc
xor
push
pop
sarl
loope
daa
inc
dec
jmp
fidivs
clc
jne
push
cmp
dec
ss
cld
insl
mov
cmpsb
xor
lea
inc
mov
outsb
mov
pop
nop
cmp
dec
iret
xchg
inc
repz
jne
dec
push
inc
mov
and
sub
pop
jge
sub
pusha
js
cmp
sub
push
sub
push
adc
std
addr16
sahf
out
lret
dec
jg
movsl
iret
sbb
mov
lock
dec
xchg
add
xor
pop
ficoml
bndstx
push
push
xchg
pushf
or
cld
fisubrl
pop
mov
or
btc
gs
test
aad
in
jp
repnz
js
test
les
pop
mov
and
mov
dec
push
std
aaa
sbb
iret
fwait
ret
out
mov
add
mov
add
push
adcl
push
enter
mov
and
and
add
add
pop
dec
aas
push
push
test
lret
outsl
ss
jp
rcl
sub
push
outsl
ljmp
inc
rcrl
adc
mov
addb
mov
sub
popf
mov
cmpsb
add
or
hlt
pop
push
imul
mov
mov
repz
ljmp
xor
pop
js
das
adc
sti
ss
sub
and
out
jmp
xchg
mov
mov
adc
mov
xor
insl
popf
cwtl
xchg
dec
or
pushf
pop
fwait
mov
cltd
popa
mov
in
inc
cmp
adc
hlt
mov
int3
or
jmp
sbb
fwait
jge
int
dec
xchg
xchg
push
imul
iret
aaa
or
stos
int3
jmp
test
adc
pop
jmp
inc
push
dec
inc
jne
hlt
inc
inc
aas
addr16
xchg
cmpsb
test
bound
add
and
mov
push
mov
cwtl
fstl
mov
cld
fmul
inc
inc
and
lea
in
mov
cmp
cmp
jno
incb
pusha
bound
sub
rdpmc
jbe
or
sbbl
xchg
out
icebp
mov
faddl
shlb
cmp
sub
push
mov
inc
lret
out
inc
cmp
push
add
iret
jb
xabort
and
in
mov
sub
push
stc
push
scas
and
adc
xchg
sub
ljmp
sarl
or
mov
cmpsb
int
divl
fsub
das
std
mov
mov
inc
cmova
xchg
mov
or
jae
jg
loop
icebp
in
push
xor
push
shll
js
es
and
pushf
sahf
sbbl
mov
fisubs
sub
lods
mov
popf
sbb
daa
sbb
ret
addr16
inc
xlat
or
std
xor
ret
mov
cs
aam
pop
out
dec
loopne
in
jmp
ficoml
fnstenv
adc
test
jo
cwtl
dec
sarb
lods
mov
push
ja
movsb
sub
in
aam
andl
fs
dec
imul
pop
dec
ja
sti
fsubrl
mov
mov
dec
jno
push
fildl
icebp
shll
cmp
pop
inc
add
xchg
adc
cmpsb
movsb
xor
mov
movsb
adc
imul
sub
mov
or
fsts
testl
jge
cmp
jl
fwait
push
clc
fnstsw
out
push
push
mov
mov
and
in
in
dec
loopne
push
push
mov
jmp
push
mov
cmp
lods
mov
xchg
test
lock
cmp
mov
push
push
jb
rorl
adcb
jg
stc
inc
test
mov
dec
out
adc
xchg
stc
pop
mov
sbb
hlt
test
add
out
or
jge,pn
inc
scas
cmp
sub
xor
icebp
inc
repz
out
testb
pop
jne
mov
pop
imul
xchg
ja
inc
and
outsb
jp
fldenv
or
dec
scas
cs
sbb
aad
movsl
dec
inc
pop
iret
fildll
mov
pushl
das
repz
incl
fistps
rcrb
enter
add
push
stc
inc
maskmovq
testl
pop
jle
dec
adc
and
mov
and
sub
adc
push
pop
in
movsl
repnz
push
fidivrs
or
mov
jae
jbe
clc
cmp
cmp
push
mov
pop
daa
scas
popf
cmp
js
cmpsl
or
pop
popf
push
sub
sbb
aam
rcll
xchg
pop
sbb
test
sub
pop
loopne
std
es
outsl
insl
mov
test
test
cli
ficomps
clc
leave
int3
mov
mov
sub
movsb
mov
jb
cmc
faddl
xchg
movsl
das
cmp
sub
inc
mov
fidivrl
les
fs
sub
xor
pop
pop
inc
sar
xor
mov
pop
in
mov
cmpsb
pop
dec
xor
xor
mov
or
pusha
adc
cmp
stc
or
push
data16
push
loopne
out
les
adc
mov
cld
push
inc
call
lahf
test
sbbb
les
test
cmp
sbb
in
sub
cmpsl
je
push
mov
pop
xor
adc
mov
das
outsl
xor
rsqrtps
mov
push
jge
jg
sbb
ja
aaa
int3
sbbl
das
test
aas
imul
push
jmp
sbb
loop
mov
sbb
push
dec
fldl
cmpsl
push
and
cmp
lds
mov
scas
aaa
out
in
pop
cld
test
or
mov
sahf
aad
xchg
aaa
ljmp
push
push
insb
adc
dec
xchg
pop
fisttps
mov
gs
add
inc
mov
jne
xorl
sub
test
repz
mov
jmp
out
fdivl
lahf
sub
ret
fistpll
sub
jl
fisubrs
int
out
push
pop
mov
clc
cmp
pop
or
xor
inc
xor
dec
cmpsb
cld
adc
out
adc
aad
pop
adc
jl
cmc
fisubs
dec
stos
inc
push
xchg
jae
inc
mov
mov
jle
xor
inc
das
mov
xchg
mov
out
sub
mov
inc
fdiv
add
loope
mov
push
dec
xchg
in
mov
ds
les
cld
adc
mov
into
lret
fdiv
xor
cli
divl
pop
add
jle
xchg
cli
or
xchg
dec
pop
jecxz
dec
xchg
pusha
mov
sub
rolb
push
jmp
add
fdivrp
lds
adc
out
in
pushf
xor
jmp
andb
adc
cmp
popf
popf
ret
or
out
mov
jle
out
rolb
jno
clc
cmc
insb
and
push
mov
jmp
mov
cli
lods
enter
addb
mov
sbb
xchg
jne
mov
pop
jmp
testb
lods
jne
mov
imul
add
pushf
mov
or
xor
stos
adc
sbb
sub
jo
dec
push
inc
imul
repz
pop
stc
pop
out
mov
shlb
leave
mov
clc
xchg
ffreep
add
sbbl
pop
adc
mov
rcl
xor
pop
jmp
int
divb
push
ror
ljmp
mov
mov
roll
dec
fnsave
mov
fildll
pushf
xchg
mov
aaa
cmpsb
or
mov
push
mov
jg
or
ja
out
pusha
pusha
out
cwtl
icebp
sbb
dec
push
dec
jg
adc
or
jl
lds
cld
inc
dec
cld
lcall
push
mov
jno
lahf
xchg
lods
mov
mov
push
and
xor
sub
je
ficomps
fcmovnb
inc
and
popf
sbb
push
fcoml
cmc
imul
imul
inc
cs
loop
jo
ret
sbb
popa
inc
push
jecxz
cmpsl
xor
fistl
xchg
mov
mov
push
push
mov
fidivrs
adc
repnz
push
lods
test
out
mov
dec
pop
mov
in
shr
inc
std
rclb
hlt
popa
lods
sarb
sub
out
mov
pop
mov
add
fimull
adcb
test
notb
movswl
mov
shrl
lock
pop
aas
jg
push
jle
les
inc
and
stos
pop
push
mov
call
mov
out
test
addr16
fndisi(8087
pop
cld
sahf
xor
or
dec
gs
mov
add
mov
and
bound
pop
add
lea
test
rolb
mov
pop
inc
mov
lea
sub
mov
incb
and
ror
xchg
stos
inc
lahf
xlat
pop
leave
jmp
cltd
das
dec
push
pop
call
scas
in
xor
cmpl
in
cs
jbe
scas
pop
push
inc
cs
push
shll
mov
xlat
inc
pop
mov
imul
jb
es
jp
cmpb
sarb
mov
cmp
jl
inc
hlt
mov
clc
add
mov
and
insl
in
mov
pop
mov
mov
gs
xchg
and
xor
hlt
sub
or
cmc
dec
mov
ja
xor
scas
or
lds
mov
nop
mov
int
jp
test
pusha
sbb
or
out
sbb
mov
sub
stc
lock
sbb
jl
faddl
push
xchg
shrl
clc
mov
add
das
xor
clc
ficomps
xor
ja
rorl
out
add
cmp
push
loop
pop
mov
adc
mov
loopne
fisubs
mov
icebp
les
mov
sub
popf
pop
inc
cld
mov
imul
imul
popa
adc
mov
aas
jecxz
out
or
fistpll
movups
fistpll
adc
mov
adc
and
in
mov
mov
push
pop
mov
cs
xor
scas
mov
gs
fisubrs
shrl
repz
cmp
and
inc
mov
xchg
mov
lds
mov
adc
test
repz
les
mov
movsb
subl
or
push
cmp
enter
cmpsb
mov
ficomps
add
imulb
jle
in
jmp
jmp
xchg
jl
lock
rclb
pushf
jmp
je
fs
push
int
jg
pop
incb
cmp
dec
hlt
mov
lods
jecxz
add
jo
loop
push
xchg
xor
pop
imul
into
shll
lahf
push
decb
inc
xor
and
xchg
mov
mov
dec
mov
fstps
nop
ja
in
cmp
cmp
pop
pop
xor
repnz
push
shr
and
jle,pt
bound
aaa
or
lret
and
inc
mov
testb
push
loop
out
sub
inc
popf
ss
orb
mov
or
pop
sub
lods
lods
rolb
aam
xor
pop
test
add
std
inc
aam
cmp
cmpsb
out
sub
push
shl
outsl
lods
xchg
pop
sub
fstpt
out
sbb
or
mov
movsl
fs
or
sub
push
pop
das
sub
pop
test
sub
add
daa
cvttps2pi
fistpll
pusha
dec
aaa
pop
fs
add
arpl
into
scas
int3
pop
xor
xchg
jecxz
sub
mov
fstpt
and
adc
arpl
sub
xchg
ds
cli
mov
cmp
movsl
pop
loop
and
lea
dec
sub
adc
mov
fwait
sbb
cmc
aam
ret
mov
repnz
inc
push
pop
jnp
mov
or
stc
enter
cli
ret
dec
and
out
push
das
xor
jp
ljmp
mov
in
sbb
mov
mov
cmpb
aas
es
push
call
jmp
scas
pop
jae
cmp
lret
and
mov
mov
push
lods
cmpsb
mov
sbb
mov
bnd
scas
adc
lods
push
push
imul
movsb
cmpsw
out
jge
cmp
cltd
enter
aaa
jbe
push
test
or
addr16
incb
jle
fnstenv
fsts
and
mov
jne
ret
shl
pusha
cltd
inc
pop
xchg
lea
xchg
mov
mov
je
sub
mov
pop
sub
shrl
fidivrl
hlt
sbb
enter
ret
ss
addr16
jg
mov
sbb
in
fucomip
fxch
sti
inc
jns
int3
ss
add
mov
pop
lds
test
mov
mov
lods
jmp
push
and
inc
das
sbb
aas
jge
xchg
xchg
stc
pop
rcrl
push
push
repz
mov
fbstp
push
lods
inc
test
add
pusha
push
cmp
xchg
push
jne
lock
mov
aas
push
test
sbb
cmp
outsl
inc
pop
pop
fildll
rcrb
popf
sub
adc
lock
sbb
in
ret
cltd
inc
cmp
mov
jnp
nop
pushf
pop
enter
push
lds
das
cmpsl
test
or
mov
ja
pop
cmp
hlt
repnz
lds
adc
loope
cmp
stos
cmpsl
aaa
xchg
jne
insl
jmp
test
rcrl
shlb
inc
mov
sub
inc
pushf
stc
sti
ret
fdivrl
pop
cmp
jecxz
cwtl
imull
fldt
test
dec
call
in
out
push
jns
arpl
sub
outsl
lahf
mov
aas
adc
mov
sbb
out
adc
iret
pushf
sub
sub
rcl
jne
insl
sub
leave
mov
mov
inc
mov
or
jp
xchg
repnz
xor
or
fwait
cwtl
mov
jno
int3
cwtl
push
shrb
xchg
rcll
dec
jno
roll
dec
xlat
jns
in
xor
aas
mov
pop
stos
jnp
dec
enter
pop
outsb
adc
gs
cwtl
mov
lahf
mov
out
mov
xchg
ret
leave
in
pop
mov
testb
loop
jl,pt
mov
xchg
outsl
rclb
add
add
mov
js
leave
icebp
or
add
jnp
test
xor
dec
push
xor
test
push
xchg
ja
hlt
pushf
or
addr16
xor
mov
jl
fwait
jp
xchg
and
and
das
ja
inc
loope
mov
xor
or
dec
out
addb
ffreep
sti
mov
rcrb
jnp
push
iret
pop
call
mov
push
xor
in
aam
repnz
push
mov
adc
sbb
fdivr
jb
dec
xchg
adc
rcrl
inc
xchg
ret
inc
ds
ss
push
dec
out
sub
lea
scas
out
pop
mov
pop
je
js
cmc
ret
and
call
gs
stos
pop
outsb
in
cmpsb
mov
leave
jmp
scas
and
popf
testb
pop
mov
repz
mull
push
adc
pandn
push
push
aam
jecxz
inc
lahf
fimull
addr16
mov
ds
xchg
push
xchg
xchg
xchg
or
scas
fidivrs
pop
mov
pop
jo
nop
xchg
adc
jbe
ja
in
mov
outsb
sub
pop
add
lods
rcr
xor
sbb
hlt
pop
js
dec
and
mov
popa
sbb
pop
stos
cltd
lret
add
xor
stc
sub
dec
mov
sbb
dec
loopne
pop
mov
jl
dec
fdivl
scas
sbb
pop
sub
dec
mov
js
ficoml
pop
pop
scas
fsts
adc
scas
push
mov
ljmp
ljmp
pop
add
adc
roll
pop
rcrl
jne
xor
sub
sbb
xchg
decb
push
and
rcrl
jnp
ljmp
sub
jl
push
xchg
pop
stos
sub
mov
insb
mov
mov
fstl
jge
icebp
divb
jnp
inc
push
sbb
ffree
lret
mov
pop
rol
and
sbb
push
inc
adc
fnstcw
clc
lret
fcmovnb
insb
mov
and
jmp
adc
lahf
mov
add
adc
mov
pop
cmpl
cmp
sbb
stc
sbb
jle
sti
ja
cmpb
inc
jg
xor
or
jle
dec
cmpsl
cld
imul
jg
adc
sbb
rclb
fstpt
mov
repnz
push
pop
jecxz
xchg
inc
dec
addr16
lcall
lods
push
push
mov
pusha
fbstp
movsb
loop
mov
popa
mov
mov
stos
out
pop
pop
xor
cmp
mov
mov
jp
ja
sub
cmp
ret
psllw
dec
jmp
push
pop
or
dec
xchg
out
jo
mov
cmpsb
jne
cmp
call
fadds
mov
cmp
in
add
out
xchg
andl
test
mov
shr
mov
lock
cmp
mov
neg
pop
fcmovnb
aad
cmp
movsb
sub
andb
test
mov
lds
push
fistl
fs
mov
xor
adc
sbb
push
subl
aas
dec
repz
push
inc
lds
test
sti
insl
jae
mov
jg
pop
add
lret
leave
pusha
cmpsb
fsubr
lds
inc
fcmove
sbbl
icebp
test
mov
sbb
xor
aad
in
or
pop
pop
mov
mov
insl
mov
imul
or
jne
rclb
test
pop
or
jnp
xlat
leave
xchg
jge
cli
xor
adc
lret
inc
sub
and
mov
pop
add
js
push
pop
pop
stos
cmpsb
push
mov
sahf
jge
aad
xchg
mov
icebp
lods
push
lea
lock
shlb
push
sbb
popf
sbb
jbe
stos
in
das
add
jne
in
pop
lret
adc
mov
add
mov
test
mov
add
lods
lahf
push
fisttpl
fsincos
dec
jmp
inc
out
in
xlat
jmp
ljmp
sub
clc
inc
jne
lock
sub
inc
out
push
fcomi
sub
dec
popf
sbb
mov
mov
push
stos
rorb
mov
imul
pusha
aam
lods
jp
icebp
inc
or
push
mov
jbe
fdivp
xor
popf
das
sbb
in
bound
xchg
sub
jle
mov
pop
mov
scas
jge
jns
adc
cmp
pusha
mov
test
jle
rcll
jbe
xchg
mov
inc
mov
scas
int3
sub
mov
xchg
cmp
xor
scas
mov
push
pusha
push
pop
pop
xchg
out
push
xor
lea
movsb
adcb
mov
add
repnz
mov
jae
or
mov
xchg
dec
lods
cmp
in
aam
outsl
mov
out
les
popa
leave
mov
std
jns
movsl
aas
push
lods
adc
loop
push
xchg
jbe
or
mov
lods
xchg
dec
push
xor
ds
rorl
and
pop
jno
cmc
jge,pt
fists
movsl
lret
data16
insl
test
mov
or
loope
sbb
mov
lcall
pushf
mov
fcmovnbe
ja
mov
pop
scas
loopne
mov
sbb
stc
aam
inc
cwtl
rcrl
out
push
pop
cmp
cs
adc
scas
cli
lcall
inc
leave
sub
into
xchg
shld
xchg
push
filds
dec
rorb
sbb
mov
pop
mov
jnp
lret
inc
sbb
mov
cmc
jp
pushf
mov
jb
push
cmpsb
sti
enter
arpl
jno
mov
icebp
clc
mov
adc
cld
mull
jle
aam
test
mov
in
push
lret
hlt
addr16
adc
loope
sub
in
fistl
cld
ljmp
lcall
jbe
mov
sub
push
cmc
loopne
sub
and
lock
and
jge
out
xchg
xchg
pop
fs
mov
push
rclb
jno
imul
push
adc
inc
outsl
shrl
xchg
cmp
xlat
jae
xchg
adc
adc
pop
mov
dec
data16
in
add
cmc
imul
aad
jbe
and
cmp
mov
clc
pop
icebp
xor
xchg
jno
out
pop
jo
in
mov
lahf
enter
xchg
push
mov
mov
or
jge
add
inc
dec
inc
lahf
or
fistpl
or
mov
jne
xchg
push
das
shlb
or
icebp
pop
cld
mov
jmp
inc
scas
cli
jle
pop
cli
mov
xchg
pop
mov
lcall
jnp
aas
push
mov
dec
filds
xlat
add
dec
inc
clc
out
ljmp
scas
es
adc
xchg
and
fucomi
or
stos
inc
dec
push
push
dec
mov
add
and
ret
loop
out
add
jne
mov
dec
mov
mov
dec
xchg
popa
fmull
test
sub
shr
push
or
insl
push
sub
addr16
fistps
pop
pop
stos
add
inc
ret
lret
push
xchg
stc
cmc
test
insl
adc
rcll
cli
jne
in
test
cli
je
in
cmp
iret
sub
js
xchg
dec
push
jmp
push
push
cmpsb
jmp
ljmp
negl
rcrl
mov
bnd
std
xor
clc
hlt
movsb
loopne
add
jbe
sbbl
cld
xor
icebp
inc
sub
and
mov
imulb
sahf
mov
add
cmpsl
jmp
repz
dec
add
ss
les
icebp
lret
and
out
push
fwait
ret
pop
out
fidivs
sub
sbb
jp
xchg
scas
xor
lock
js
into
jne
arpl
or
xor
js
push
addr16
inc
mov
mov
jl
xor
cld
and
sub
call
popf
mov
cmp
mov
or
xchg
push
test
jmp
shlb
fisubrl
rolb
cld
xor
xlat
xchg
mov
cmp
stos
inc
pop
outsb
add
adc
into
pushf
movhlps
ja
cmpl
mov
scas
movsb
hlt
xchg
pop
int3
mov
jmp
pop
push
jl
mov
jmp
js
push
leave
mov
push
push
dec
push
icebp
lds
gs
lock
pop
scas
or
jp
pop
jle
fcmovne
push
cmp
jb
fsubrs
and
fimull
shrb
imull
mov
push
add
push
sub
divl
xchg
cmp
mov
ret
jle
fstpt
rorl
jle
cmp
cmp
addr16
push
iret
lods
lahf
inc
fnsetpm(287
pop
fidivs
aas
dec
or
fstpl
xor
push
in
mov
test
mov
in
jno
mov
jl
jge
mov
lea
mov
in
mov
stc
loopw
mull
outsb
cmpsl
lahf
lret
imul
clc
cld
bound
in
test
test
dec
and
lds
cs
lea
mov
aad
hlt
pop
pop
insb
insb
cmpb
mov
mov
jmp
std
imul
test
cmp
hlt
icebp
ja
or
jbe
ljmp
push
lods
cmpsl
mov
std
nop
aas
data16
dec
add
lret
xor
push
into
cmc
data16
adc
pop
scas
sti
dec
imul
push
inc
pop
adc
pop
push
gs
iret
std
jnp
mov
mov
movb
dec
pop
outsl
lea
stos
in
cmpw
xchg
shlb
xor
insl
mov
pusha
mov
outsb
sahf
xor
cmp
rcr
daa
dec
and
int3
fisttps
test
sbbb
jnp
inc
sub
fstps
inc
repnz
bound
std
lock
cmpsl
inc
mov
push
pop
and
aaa
pop
sub
pop
dec
int
fsubrl
mov
add
lock
mov
adc
out
leave
addb
cli
fstpt
mov
mov
cwtl
stos
call
sub
xchg
pop
xor
aad
stc
sub
addr16
pop
ds
outsb
push
out
cmpsb
idivl
movsl
pop
cld
test
push
rcll
lods
xchg
adcb
inc
jne
xchg
or
imul
movsl
xor
cmp
mov
dec
in
mov
das
mov
adc
cmp
mov
jbe
dec
pushl
sarl
rcll
lds
pop
dec
loopne
jmp
dec
jo
pushf
int
ret
loop
das
ret
mov
cmp
lods
xchg
cmp
or
mov
mov
hlt
jl
shll
imul
fstps
sbb
mov
in
rcrb
xchg
es
int
xchg
das
frstor
lahf
and
stos
dec
inc
cs
mov
popf
pop
es
fists
or
inc
jae
cmp
add
dec
ljmp
ucomiss
inc
cli
pusha
add
cmp
js
in
nop
and
hlt
jns
into
sub
dec
dec
mov
cmp
xchg
imul
push
aaa
lret
es
fcomip
or
mov
test
dec
inc
movb
fucomp
add
push
pop
loop
push
call
cmp
or
push
in
ret
outsb
fisttpl
add
xchg
in
inc
dec
pop
ds
inc
cmpsl
scas
fs
jnp
mov
push
jle
iret
and
mov
push
xor
mov
dec
xor
pop
push
push
pop
xchg
out
sbb
or
sbb
push
lahf
mov
sarl
out
clc
sub
push
scas
pop
movsl
push
fcoms
filds
adc
inc
xchg
push
lock
rolb
scas
clc
pop
ljmp
push
xlat
adc
cwtl
xorl
and
and
hlt
sub
rcll
clc
push
and
test
addl
xor
ja
sbb
lock
adc
add
mov
inc
adc
or
rcrb
mov
jl
mov
cmp
jns
and
cli
jne
adc
lret
das
mulb
mov
hlt
test
ja
xchg
jecxz
or
add
scas
inc
inc
or
push
sub
cs
movsl
xor
test
xor
add
mov
push
cli
leave
push
popa
add
and
sbb
mov
pop
pusha
mov
pop
lret
and
loopne
fcomps
nop
fwait
mov
add
add
jmp
sbb
add
loope
clc
outsl
sbb
fwait
dec
scas
xchg
rclb
rorl
stos
sub
les
cmc
xchg
idivb
dec
fiaddl
mov
pop
adc
in
hlt
mov
adcb
pushf
xor
lcall
jg
ret
setne
push
test
out
xchg
nop
hlt
loopne
out
push
clc
imull
testl
outsl
jb
cmpl
and
inc
sub
fistl
lret
ss
adc
in
sbb
sub
xor
andb
ljmp
mov
push
xchg
test
sub
data16
imul
pop
sbb
dec
fisubl
adc
fldl
inc
insb
loop
mov
xchg
lahf
ss
outsl
out
arpl
pop
or
cmp
lods
movsl
fisubs
xor
aam
add
or
fbld
mull
xchg
dec
insl
jb
pop
mov
fisubrl
inc
out
test
mov
fcmovnb
test
sbb
push
inc
jl
dec
add
sub
xor
xor
addb
inc
mov
sbb
mov
sub
mov
pop
lret
jge
les
jle
pushf
xlat
pop
inc
cmp
and
lods
inc
sarb
mov
mov
cld
mov
adc
pop
stc
sub
je
pop
rcll
lret
add
lods
cmovno
push
lock
mov
jne
cmp
xchg
call
imul
or
push
dec
insb
pop
xchg
sbb
scas
cmc
movsl
mov
lret
fldl
lock
movsb
loopne
and
sbb
and
cmp
sub
add
pop
ja
pop
xor
mov
mov
xchg
fnstcw
jnp
stc
aam
jno
mov
call
fistl
or
int3
jnp
addr16
mov
cmp
jbe
pop
add
or
shl
mov
push
fs
push
test
mov
adc
xchg
inc
dec
push
test
rorl
clc
push
xor
push
insb
jl
fs
inc
lret
test
add
and
dec
jno
lock
xchg
inc
cmpsb
jl
pop
jg
ja
nop
std
lods
imul
imull
in
dec
into
adc
cmp
aad
js
sub
mov
add
leave
aam
jp
data16
movsb
imul
jge
ret
insb
or
dec
mov
outsb
xchg
or
and
adc
rolb
xchg
iret
xor
rol
in
mov
out
in
stos
std
sbb
lcall
push
jno
push
push
jb
fwait
test
mov
fldl
int
hlt
negb
mov
inc
cmp
and
scas
mov
inc
pop
outsb
out
inc
addr16
aad
scas
sub
dec
cmp
sbb
dec
jbe
push
in
push
jle
pop
pop
lods
popw
adcb
je
cmp
sub
rorl
imul
fsubs
fwait
mov
push
add
and
adc
mov
dec
add
pop
dec
mov
out
pop
xor
sbb
js
lea
sub
aam
xchg
sarb
pop
ret
inc
stos
and
test
jp
mov
in
ret
cmpsb
jno
frstor
adc
into
cwtl
sub
and
scas
add
fsub
pop
daa
lret
mov
loopne
jbe
shl
sbb
iret
mov
sbb
das
lods
and
jmp
dec
fadds
xchg
lret
inc
arpl
inc
icebp
push
xchg
jle
push
jmp
jnp
inc
sbb
jns
jg
xchg
imul
jmp
loop
test
lea
je
es
jne
jl
adc
mov
sbb
lss
sub
cmp
std
cmp
pop
popa
pop
addr16
lret
cltd
mov
movb
add
in
xorb
mov
arpl
mov
mov
test
je
cltd
push
jl
int3
xor
cmp
popf
jle
incl
cwtl
scas
out
popa
jg
sbb
sub
in
cmp
adc
gs
jae
mov
popl
push
mov
pop
mov
mov
aas
xchg
dec
sbb
es
mov
insb
lea
push
mov
js
repnz
lcall
sub
pop
ja
jo
adc
out
inc
push
inc
rep
pusha
sub
mov
orb
idiv
jecxz
lods
xchg
xor
push
enter
push
fildl
shl
rcrl
mov
mov
roll
cmc
loop
jp
sahf
daa
mov
pop
nop
xchg
sahf
scas
call
test
pop
mov
fmul
incl
jmp
or
push
ds
sub
pop
or
mov
ret
push
xor
xor
jge
aad
mov
add
dec
mov
arpl
mov
dec
aad
imul
in
stc
inc
out
jecxz
rol
cmp
rorl
adc
cwtl
jl
fstpt
ret
push
sbb
pop
pop
out
vcvttss2si
pop
test
insl
into
sbb
aam
mov
je
cld
sub
push
aam
push
ja
xor
test
push
cmpsb
push
mov
add
outsb
mov
inc
push
hlt
test
fldcw
xchg
push
xchg
adc
or
nop
fistps
out
push
dec
in
and
fcmovne
loopnew
rorb
mov
bound
rorb
add
fs
sbb
scas
add
xchg
mov
adc
ret
insb
fidivrs
repz
loopne
xchg
stc
mov
negl
xor
fldenv
jb
xor
cwtl
pop
mov
sbb
sbb
jl
push
xchg
cmpl
lods
incl
dec
lret
sti
out
mov
hlt
pop
sub
shll
pop
or
gs
push
cmpsb
pop
add
pop
push
js
xor
or
ror
int3
js
push
mov
pop
stos
mov
and
xchg
out
in
mov
cmpsb
enter
sbb
arpl
mov
jl
push
dec
ror
insb
lock
and
or
push
lea
adc
inc
jp
lods
inc
hlt
push
je
bound
mov
mov
imul
es
and
sub
imul
push
loopne
xchg
cs
push
frstor
jnp
xchg
push
outsl
sahf
sbb
leave
push
gs
pop
xchg
cwtl
lret
shlb
test
lcall
test
and
or
movsb
ret
cs
int3
out
jno
cmc
fisubl
mov
out
jnp
daa
rcll
mov
test
into
add
iret
loopne
jp
and
jno
scas
adc
inc
loopne
das
loope
pop
inc
dec
sbb
clc
cmc
push
std
sahf
stos
aas
mov
mov
fptan
and
lahf
cmp
mov
int
rcll
pop
sti
sub
sub
cltd
jg
cmpsb
iret
shll
push
fs
jmp
push
ret
mov
pop
call
cmp
imul
jle
subb
je
fisttps
ss
pushf
push
xchg
insl
cmp
cmp
adc
sub
rorl
ja
andb
aas
jl
push
popa
divl
out
sub
dec
jl
nop
in
ds
fisubrl
daa
push
sbb
fcomps
adc
push
xchg
xchg
rorl
jmp
in
idivl
inc
mov
mov
hlt
leave
adc
fisttpl
lods
fxtract
mov
push
cmp
shll
scas
sbb
bswap
pop
int
lahf
in
xchg
es
rcrb
ror
cmc
mov
out
out
pushf
mov
scas
in
jl
inc
in
inc
jmp
adc
sub
lret
call
movsl
mov
outsb
outsl
push
jns
nop
pop
scas
inc
mov
shlb
jb
cltd
dec
ret
pusha
in
lods
jecxz
sti
dec
repnz
sub
lretw
add
mul
sub
and
bound
icebp
push
jns
add
out
sbb
out
jmp
aas
nop
pop
pushf
xlat
iret
cmpsl
lea
mov
mov
lods
fisubl
loopne
mov
cli
push
adc
ja
aam
js
fstps
xlat
stos
mov
mov
imul
cltd
les
mov
adc
lods
icebp
movsb
dec
les
mov
lods
cltd
xor
sbb
adc
pop
lret
xchg
test
call
inc
mov
dec
pop
sub
out
pusha
test
jge
cmpxchg
and
pop
in
dec
das
or
sbb
loop
gs
adc
lock
ds
jne
incl
adc
sti
ret
lcall
hlt
dec
pusha
aaa
mov
jno
xor
push
fisubl
dec
mov
cmpsl
inc
imul
mov
icebp
or
push
lahf
jecxz
add
cs
iret
jp
push
push
test
out
inc
sarl
lock
imul
js
aas
jo
sbb
jno
rol
adcb
xor
push
cltd
pusha
adc
mov
sahf
pop
in
insl
je
and
xor
cmp
scas
dec
mov
es
fistpl
outsl
inc
pop
mov
int3
adc
leave
rorb
add
push
icebp
lcall
pop
sbb
sbb
xor
pop
sti
sbb
scas
inc
inc
pop
ss
mov
movsl
inc
daa
push
ss
cltd
jmp
push
clc
push
sarl
sbb
lods
inc
addr16
je
mov
enter
lds
inc
xchg
add
mov
insb
sbb
pop
mov
ds
ret
cmpsb
and
lods
fnstcw
pusha
test
mov
imul
lret
repz
mov
xor
mov
rol
cs
xchg
sti
pop
es
cltd
mov
xor
mov
inc
xchg
xchg
iret
lahf
push
pop
iret
jae
xchg
sub
dec
repz
ret
scas
xchg
mov
add
mov
fwait
push
dec
dec
addr16
push
shrl
repnz
enter
or
sbb
push
les
fwait
jb
and
call
fninit
out
cmp
mov
daa
push
xchg
jb
nop
int3
into
sbb
adc
jns
pop
push
pop
stc
fcompl
scas
addr16
mov
inc
jmp
out
lock
imul
jno
push
mov
mov
leave
adc
jmp
rcrl
sti
mov
adc
popl
dec
dec
pop
insl
dec
mov
nop
gs
arpl
hlt
repz
pop
ljmp
mov
scas
push
fists
int
push
in
pop
push
roll
mov
and
std
data16
pop
adc
mov
jnp
pop
insl
cmp
mov
dec
es
int
dec
stos
adc
sti
out
push
popf
call
cmp
repz
insb
orl
jmp
push
xchg
push
out
insl
and
les
mov
fisubrl
sub
push
rcl
inc
call
mov
cmc
push
push
int
push
push
jmp
push
fmul
insl
cwtl
imul
nop
and
fld
jns
fstl
ds
mov
adc
jnp
mov
sbb
mov
xchg
leave
mov
setle
fstpt
dec
sub
popf
loope
push
or
pop
sbb
icebp
je
add
mov
adc
sarl
pop
mov
movsb
dec
jae
jecxz
add
sub
sbb
hlt
dec
pusha
lcall
sub
icebp
outsl
mov
cmp
jbe
ret
and
cmpsb
xlat
out
leave
inc
xchg
fs
mov
es
arpl
cmp
sub
dec
repz
outsl
outsb
inc
repz
pop
ds
test
pop
push
dec
mov
and
lods
aad
cld
xor
test
movsl
test
jns
jge
mov
loop
push
filds
mov
sub
mov
jae
xor
mul
pop
out
sbb
lcall
or
push
mov
lret
mov
or
fdivs
in
insb
mov
cwtl
pop
stos
out
out
test
call
jmp
negl
in
insl
add
in
mov
jne
mov
repz
mov
inc
cld
sti
or
sbb
mov
dec
cmp
push
iret
mov
in
pop
mov
xchg
das
mov
lahf
xlat
or
mov
sub
jmp
mov
imul
cmp
imul
popa
xchg
imul
mov
add
jae
inc
leave
xor
enter
pop
xchg
push
mov
and
ja
add
les
xor
jne
push
mov
pop
in
insb
lea
cli
cli
or
adc
pop
inc
sbb
xchg
push
push
gs
ret
xor
add
in
jle
sbb
inc
cs
mov
pop
and
push
iret
push
xlat
aas
das
or
xor
mov
cld
push
push
xchg
ja
sub
push
sub
xchg
int
test
sbb
gs
mov
andl
sti
fisubrl
sub
pop
sub
leave
dec
aaa
pop
push
pop
aaa
rclb
jl
hlt
fidivs
jo
cmp
scas
cmpsb
xchg
lea
movl
outsl
lods
xchg
outsb
test
adc
das
mov
lret
out
pop
mov
sbb
bnd
push
shll
add
test
adc
sbb
jnp
outsl
jae
cmp
sbb
xchg
jp
cmpsl
pop
popa
push
push
fldt
lock
sub
inc
cmp
dec
subb
shlb
pop
xor
sub
ror
fmull
or
xchg
fimull
adc
in
in
ret
mov
pop
push
test
xchg
pop
sahf
flds
lret
cmp
ret
mull
or
int3
mov
jg
push
pop
addl
pop
fcomi
add
xchg
les
mov
xchg
pop
push
popf
add
sub
stc
xchg
adc
cmp
inc
jno
sub
inc
sub
inc
dec
push
das
mov
sub
inc
in
pusha
add
sahf
xchg
lahf
jnp
in
push
jp
jmp
pop
cwtl
and
mov
push
xchg
jns
jo
sub
subb
inc
aam
pushf
push
repnz
das
mov
adc
mov
inc
jp
insb
lods
aam
pop
sbb
dec
aas
lods
or
mov
pop
sbb
scas
mov
xchg
adc
jno
clc
and
movsl
addr16
les
inc
mov
jecxz
cmp
mov
int
adc
in
xor
mov
imul
or
add
inc
add
int3
lret
icebp
xor
mov
je
xchg
and
decb
add
sub
cmp
insl
xchg
out
scas
loop
lods
xlat
int3
movsb
out
sub
inc
rclb
xchg
mov
jp
test
rclb
arpl
jnp
sub
adc
add
hlt
mov
xor
stc
out
dec
push
out
mov
cpuid
arpl
js
out
roll
adc
mov
xorb
add
movsb
daa
jae
je
sub
insl
xchg
inc
push
jp
icebp
inc
jle
mov
mov
xchg
mov
aaa
jmp
fsubl
mov
repnz
push
inc
sub
cld
shlb
in
ret
dec
inc
pop
or
lds
addl
mov
bound
pop
sub
mov
int
out
ss
and
int3
lods
push
movl
add
pinsrw
test
in
outsl
rorb
int
cmc
lahf
lret
fisttpll
sti
xor
jns
jmp
or
loop
int
ljmp
mov
or
push
ljmp
bound
aam
mov
or
mov
xor
mov
and
roll
and
fsubr
cmp
mov
pop
xchg
les
dec
sbb
pusha
jae
or
movsb
out
jns
xor
lea
ret
ret
ljmp
popf
mov
xchg
xchg
mov
lea
repnz
lods
rcrl
jns
aas
mov
add
fnstcw
xorl
cmpsb
mov
sbb
push
cmpsb
adc
sahf
cmpb
mov
add
decl
jns
xchg
pop
pusha
and
or
std
cltd
cmc
sub
sbb
add
sbb
xor
dec
add
add
add
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
inc
icebp
ljmp
imul
jge
push
dec
xchg
rol
mov
fstpl
push
inc
add
xor
lret
and
add
in
out
jae
inc
in
sub
ljmp
js
dec
shr
incl
jmp
call
add
jmp
call
lcall
