sub
lret
xchg
dec
sub
stos
mov
xchg
cmp
fcoml
or
pop
out
cwtl
push
jmp
loope
gs
scas
dec
mov
loopne
pop
je
or
mov
cmp
jmp
xchg
arpl
add
dec
fimull
popf
sbb
push
mov
lahf
push
leave
inc
stos
cs
in
mov
push
cmp
inc
adc
call
shlb
sbb
sub
mov
fmul
jle
and
and
mov
aad
xchg
aas
arpl
test
pop
push
xor
stc
inc
sbb
arpl
mov
stos
push
sub
mov
push
dec
xchg
cs
mov
lahf
cmp
add
in
out
pop
leave
jbe
js
push
xchg
xor
test
dec
jl
jno
push
cmp
aam
insl
test
jb
imul
pop
mov
andb
arpl
jae
notb
in
pushf
jmp
fdivrs
adc
lea
sbb
mov
clc
shlb
xchg
xor
sub
push
or
insl
js
into
pop
jmp
jns
je
scas
cmp
leave
push
pop
popa
mov
or
rcll
out
ror
jae
out
movsb
test
push
mov
sbb
or
ja
cmp
fucom
in
negb
sbb
inc
ds
inc
or
andb
mov
movsl
mov
mov
inc
lock
aad
jbe
icebp
mov
popa
sub
incl
or
cmp
negb
push
nop
ficompl
push
jl
mov
push
dec
mov
push
sub
stos
sahf
inc
jmp
jne
inc
cli
sub
imul
insb
ss
aam
sahf
gs
push
sub
xor
test
lods
popa
std
lcall
hlt
or
addb
enter
arpl
sbb
and
movsb
or
inc
bound
pop
pushf
sub
mov
xor
pop
or
mov
jp
xchg
mov
in
jl
test
xchg
imul
in
call
shr
gs
and
cmpsl
dec
addr16
loope
cmp
loope
add
sub
jns
xchg
xor
push
jle
jno
pushf
mov
std
push
test
pop
jp
test
scas
das
jge
push
js
sbb
sahf
mov
mov
inc
or
add
push
addr16
xchg
outsb
or
idivl
jmp
push
fmull
je
mov
sbb
addr16
or
cltd
xchg
cmc
popa
xchg
xor
sub
nop
sub
cmp
inc
das
cs
sahf
pcmpeqw
or
jp
dec
aam
sar
and
pop
loopne
and
sub
ret
into
in
xor
dec
repz
sub
fwait
jmp
movsb
xor
push
and
jl
pop
testb
inc
in
and
inc
cltd
mov
scas
cmp
mov
cmc
sub
lret
inc
in
ds
aad
repnz
jp
outsl
add
in
neg
cmc
push
shr
sub
xorb
rorl
fiadds
mov
add
or
lcall
sub
dec
sub
mov
jl
cmp
dec
int3
jecxz
jp
dec
lea
xor
rcr
outsl
mov
test
or
mov
mov
adc
adc
add
leave
xchg
push
xlat
sbb
jle
jl
jge
push
mov
fdivrs
aas
xchg
aas
addr16
xor
pop
inc
and
pop
inc
out
jge
clc
push
dec
in
push
test
ret
fnsave
sbb
rorl
push
test
test
push
push
test
push
push
mov
data16
mov
push
paddw
lds
test
fwait
movsb
out
and
pop
xchg
dec
mov
loop
adc
dec
xor
or
fadd
and
je
xchg
pushf
jp
inc
ljmp
xor
jmp
push
pop
jge
sub
jmp
lahf
xor
lods
shlb
jecxz
mov
push
lods
mov
out
sub
call
in
xor
mov
lahf
adc
aad
int
jbe
pop
sub
cmp
cmpsl
insl
aam
pop
push
xchg
cmp
int3
pop
lods
adc
shll
insl
adc
out
stos
jge
push
jg
and
push
push
loopne
mov
outsl
enter
sbb
jno
std
pop
test
add
clc
inc
adc
jnp
sbb
cmc
and
cmpsb
or
dec
aaa
int3
movsl
lret
lock
lcall
imul
mov
test
jg
pop
lods
push
fdivrs
sub
push
jge,pt
pop
push
or
cli
insb
lods
and
ss
sbbb
fs
jecxz
sub
sbb
push
mov
mov
sub
xlat
inc
push
loopne
jb
loopne
jno
mov
lahf
leave
sbb
icebp
bound
cld
push
jmp
sbb
xchg
int3
bound
cmpsl
xorb
sbb
push
or
inc
lret
push
pop
or
data16
xor
fs
pop
das
jmp
add
and
popf
or
cld
aam
movsl
mov
jle
adc
and
xor
call
scas
inc
cmp
aam
into
aaa
bound
mov
repnz
jno
aad
sbb
sbb
pop
inc
sub
cld
adc
inc
xchg
aaa
add
mov
sub
xor
rclb
inc
adc
int
call
push
fcomip
xlat
and
dec
popa
cmp
jne
mov
mov
push
test
fwait
call
scas
aaa
cmc
sub
mov
int3
mov
cmpsl
repnz
ficomps
addr16
xor
mov
scas
dec
mov
sbb
add
lret
xor
mov
push
in
fsubr
add
sahf
ljmp
testb
push
insb
or
adc
nop
add
movsl
aas
sahf
lret
push
test
test
sbb
jne
mov
xchg
jne
pop
jg
jmp
or
repnz
sti
leave
movsb
jae,pt
jno
xchg
out
iret
aam
xor
pusha
mov
sbb
ret
movsb
or
mov
test
and
idivb
cmc
out
sub
sbb
stc
xchg
bound
test
add
cli
mov
inc
stos
lds
insb
les
stc
fsubl
mov
mov
sbb
dec
jae
jno
mov
adc
jmp
dec
dec
call
fnstcw
ja
xor
inc
fcoms
xor
sub
out
ljmp
aas
inc
test
imul
shlb
add
nop
push
inc
jns
pop
into
andl
dec
dec
stos
pop
fiadds
test
aaa
mov
pop
pop
fisubs
mov
out
pop
and
nop
inc
ljmp
pushf
imul
ljmp
dec
jo
lahf
stc
js
je
in
stc
mov
push
sbb
sub
ljmp
lds
insb
stos
mov
in
fldl
and
dec
push
test
cld
lcall
xchg
xchg
pop
out
mov
and
lcall
xor
cld
jnp
pop
jb
cmp
sub
shlb
dec
insb
hlt
fdivl
cmp
pop
lcall
ljmp
dec
mov
xchg
or
leave
jge
out
aad
add
xchg
mov
lods
xor
jae
stc
cmp
xlat
push
fldcw
adc
lahf
xor
mov
bound
dec
jbe
cmc
pop
inc
insb
xchg
pop
orl
pop
xor
in
mov
adc
mov
into
sbb
jecxz
mov
repnz
pop
mov
sahf
xchg
js
mov
sub
add
mov
lret
mov
push
insl
jle
cmp
loope
lret
xchg
gs
stos
mov
jg
jne
daa
xorb
or
xchg
cmp
out
adc
imul
leave
and
jp
mov
jns
cwtl
adc
pop
cmpb
ja
mov
fdivrl
xchg
adc
mov
loopne
xlat
cli
leave
mov
in
fs
cltd
lret
cmp
add
jns
push
mov
or
jns
js
aas
jo
mov
mov
sub
push
mov
test
mov
cmp
lods
lods
sub
into
call
lds
xlat
cmp
mov
adc
mov
sbb
stc
mov
lock
adc
pop
aad
push
mov
call
mov
mov
mov
orl
push
mov
mov
popf
mov
loope
movsb
aas
cmp
xchg
or
insl
sub
push
xchg
popa
clc
or
call
sub
sbb
daa
xchg
lds
sbb
mov
imul
jle
stos
sbb
out
mov
int
jne
mov
dec
imul
daa
mov
data16
add
mov
or
idivb
incl
mov
sub
jbe
int3
test
nop
in
mov
cmp
inc
int3
mov
adc
jae
faddp
enter
adc
dec
gs
into
cmp
adc
pushf
pop
dec
arpl
xor
sbb
pop
xchg
ret
hlt
add
dec
jnp
pusha
pushf
push
and
adc
mov
mov
jae
jle
pushf
mov
push
jne
and
sub
jl
xchg
nop
in
popa
inc
or
in
jne
or
int
jmp
push
imul
xchg
dec
test
xchg
movsl
pop
or
loop
cmpsb
mov
lock
jmp
push
shlb
cmp
push
xchg
xchg
xchg
fists
bound
std
lcall
jecxz
mov
add
jmp
mov
das
rcr
jle
out
dec
int3
je
sub
push
bound
adc
sbb
imulb
std
mov
push
pop
push
add
pop
data16
mov
cmpsb
shll
test
xchg
loope
ds
pop
xor
cmp
out
sub
adc
lods
add
sbb
shrl
xor
add
mov
or
insl
outsb
xchg
bound
fildl
push
mov
jne
lahf
insl
sub
jne
xchg
into
push
jecxz
int
les
inc
inc
pop
xchg
adc
xor
mov
popa
xor
aas
aam
fdivrp
in
and
add
fwait
jno
subl
xchg
sarl
mov
dec
adc
arpl
movsb
sbb
fiadds
jg
jle
daa
sub
fcomp
loop
insl
or
aad
lcall
imul
idiv
gs
idivl
cld
fsubrs
ficompl
pop
imul
sub
dec
adc
dec
movsl
bound
rorb
call
sbb
shrb
aad
cli
mov
enter
inc
sarb
push
xor
imul
pop
scas
das
dec
push
pop
dec
adc
jb
xor
inc
mov
sbb
fs
push
xchg
push
mov
xchg
mov
pop
mov
add
sbb
shll
cmp
scas
cld
test
xchg
jb
xchg
push
inc
repnz
mov
inc
pop
xchg
add
push
fldl2t
sub
lods
cmc
lock
repz
or
mov
mov
mov
jl
addb
or
jge
adc
test
lahf
inc
xor
xor
jle
test
dec
adc
add
loopne
mov
pop
xchg
sbb
pop
sbb
ja
lock
rol
popa
adc
or
ficoms
inc
ljmp
cwtl
sbbb
and
aam
movsb
scas
insl
push
lods
sub
cmp
mov
insl
xor
mov
insl
push
test
sahf
xchg
push
out
pop
rcrl
enter
cmp
stc
xchg
out
mov
sti
mov
jp
in
push
loopne
bound
or
loope
popa
aam
cmpsl
dec
sub
or
lea
in
add
dec
sbb
loope
inc
ss
loop
into
sbb
imul
fldpi
jo
mov
in
cmpsl
mov
inc
adc
sbbb
ljmp
cmp
and
data16
xchg
jbe
cmp
jnp
ficomps
pop
fcoms
in
ror
pop
push
push
xorl
cli
mov
mov
rolb
xchg
sbb
mov
xchg
js
movsl
or
stos
pushf
sub
xor
push
mov
inc
push
sbb
and
xor
mov
cmp
outsb
sti
cld
ja
andl
aam
imul
ja
das
dec
adc
out
sub
stos
insb
add
pop
movsl
daa
push
mov
std
sbb
jge
mov
jns
ffreep
bound
ljmp
cwtl
push
out
jae
xlat
fimuls
stos
clc
mov
call
cmc
push
push
enter
lret
ret
xchg
lods
psubusb
int3
push
aaa
mov
jl
test
inc
lcall
xchg
inc
pop
in
lcall
sub
data16
mov
adc
mov
std
pop
in
sti
sbb
neg
clc
add
push
pop
push
xchg
mov
mov
sbb
lods
mov
inc
in
adc
sub
sub
dec
adc
stc
aaa
scas
mov
push
add
xchg
pushf
sbb
icebp
adc
pop
cmp
mov
daa
dec
mov
adcl
mov
out
pop
bound
inc
fcmovbe
jle
js
cmp
shr
fs
and
je
mov
insb
add
mov
call
outsl
mov
jge
and
and
cld
stos
jno
outsb
push
pop
inc
push
xlat
inc
ror
mov
fsubrl
inc
out
adc
je
repz
clc
push
bnd
jle
aaa
stos
iret
jmp
les
pop
inc
stos
rcrb
lcall
out
lea
sahf
xchg
std
mov
push
jg
mov
inc
cmp
adc
jge
fldl
orl
mov
inc
cmp
pusha
ja
stc
or
add
sub
push
mov
xor
in
insb
adc
push
stos
in
jmp
repnz
inc
test
xchg
fwait
icebp
popf
push
insl
push
pop
jno
xchg
pop
es
cmp
aas
or
loop
dec
push
into
mov
sbb
mov
add
push
xchg
cs
xchg
pop
jl
push
push
mov
jno
arpl
in
jmp
xor
out
mov
add
jns
fiaddl
cmp
scas
mov
inc
arpl
aam
aas
push
cmp
lahf
addr16
jge
cwtl
xchg
xchg
rcrb
sbb
cmpsl
push
add
call
sub
fld
pop
mov
lock
xor
adc
scas
sti
adc
add
and
pop
popf
adcb
xor
fcompl
mov
jle
push
sub
mov
cli
je
mov
inc
pusha
push
and
cmp
mov
sub
jecxz
sbb
test
cltd
xor
xor
and
jmp
sub
pop
lock
scas
add
lods
mov
sbb
repz
cmc
jns
add
mov
mov
add
cmp
xchg
stos
xchg
dec
pop
jecxz
mov
cmp
insb
into
cmp
scas
arpl
inc
lahf
and
and
jb
loopne
xor
cmpsb
dec
out
pusha
movsl
mov
push
xor
xor
mov
divl
xor
iret
cmp
stos
andl
mov
push
imul
stos
pop
sbbl
xchg
mov
mov
mov
in
xchg
mov
rorl
dec
push
lods
ret
stos
scas
mov
hlt
pop
in
xor
test
sarl
inc
icebp
push
mov
test
jg
push
adc
repz
add
push
out
add
cmp
sbb
push
adc
add
lods
mov
xlat
add
sahf
cmp
fcompl
inc
and
scas
out
sbb
mov
cmp
cltd
mov
stos
mov
mov
ljmp
clc
mov
test
aam
ret
jbe
cli
test
cmc
call
adc
inc
mov
push
cli
sbb
out
aaa
cmpsl
add
icebp
in
lods
hlt
lods
imul
iret
sub
dec
dec
cmp
sub
repz
out
lods
push
out
or
and
loop
lods
ror
sbb
push
add
loop
imul
stc
inc
insb
sahf
pop
cld
cmp
add
jge
shl
push
fdivrl
mov
inc
or
cltd
push
dec
cli
int
add
lahf
mov
call
mov
jno
xchg
addl
xor
outsl
inc
adc
sti
jo
std
into
mov
xor
icebp
insl
mov
jp
mov
xchg
cpuid
pop
or
cs
popf
xchg
mov
or
and
lds
sbb
pop
push
out
inc
stos
adc
cmp
inc
xchg
pop
push
inc
cld
hlt
mov
mov
out
sub
cmp
out
mov
ss
push
loopne
sub
cmpsb
mov
cmp
sbb
gs
add
xchg
jno,pt
mov
into
data16
mov
popf
cs
cmp
dec
rorb
test
aam
out
xor
inc
pop
xchg
xor
stos
lea
sbb
add
xchg
mov
fistpll
addb
or
mov
cmp
xchg
xor
and
dec
push
add
lea
xchg
lcall
out
adc
jbe
xchg
sbb
jmp
xchg
outsl
pop
jo
js
and
push
adc
stc
sbb
dec
add
movsl
push
fwait
or
mov
mov
jle
push
push
and
iret
cwtl
les
data16
xor
out
shr
addl
inc
add
mov
xor
lods
jp
push
fdivr
push
seta
ret
cs
and
sti
cli
in
sbb
out
lock
jno
mov
push
adc
push
adc
testl
adc
mov
push
aas
xor
xorl
add
pop
shll
xchg
xchg
pcmpeqw
mov
xor
pop
imul
mov
mov
sahf
out
cmp
jg
push
ret
xchg
mov
push
adc
inc
je
jmpw
mov
xchg
mov
pop
xchg
jmp
inc
std
jns
dec
mov
xorl
les
in
adc
inc
aas
mov
jae
jno
add
outsl
xlat
dec
sub
add
xchg
jae
std
bound
dec
out
mov
out
in
aam
dec
roll
cmp
add
shlb
add
adc
lret
pop
das
dec
jge
dec
pop
cmp
add
cmp
jb
cmpsl
dec
mov
mov
fstpt
in
pop
mov
sub
jecxz
push
into
jns
out
sbb
repz
scas
test
and
incb
outsl
sbb
mov
repz
ja
ret
lods
mov
and
pusha
fst
add
fs
insl
cs
pop
sub
out
ret
iret
movsl
add
cmpsl
fdivrs
sub
jle
sbb
mov
inc
jmp
jnp
and
cmp
movsb
mov
or
inc
sbb
addl
les
mov
add
sbb
fisubl
int
or
aad
or
and
sbbb
lret
iret
xchg
add
adc
scas
mov
pushf
pop
add
mov
pushf
repz
fistpll
lods
or
cmp
push
push
sti
sbb
pusha
mov
add
dec
cmpsl
scas
or
dec
mov
ret
dec
cmc
sub
cmp
jno
push
movntq
cmpsb
xchg
dec
adc
pop
test
jge
mov
push
pop
add
into
xchg
aam
jg
ret
xchg
dec
cmp
xchg
scas
sub
fdivp
sub
jb
add
gs
mov
inc
arpl
inc
fisubrl
mov
push
xchg
packsswb
push
adc
jl
sbb
push
mov
inc
adcl
pop
and
cmp
xor
in
aas
repnz
stos
fwait
jbe
mov
loope
jp
adc
out
pusha
jae
inc
fidivl
bnd
mov
int3
es
mov
xlat
mov
cmp
mov
fbstp
xor
dec
wrmsr
inc
dec
ror
jae
jae
in
dec
lcall
pop
fstl
cmpsb
add
adc
in
push
int
and
jle
add
sbb
jno
mov
cmc
mov
or
and
push
js
ror
push
movsb
stc
cmp
inc
cltd
lea
cmp
out
xchg
cld
movsl
les
cmpsb
push
sbb
mov
adc
mov
cmpsl
in
loop
add
fsubrs
std
and
pushf
jno
imul
mov
nop
xchg
inc
out
call
cld
push
xor
movsb
mov
sbb
mov
fistpl
mov
adc
adc
dec
add
shll
push
jnp
and
jbe
sub
mov
and
andl
cltd
shrb
inc
jo
hlt
pop
cmp
dec
jge
pop
shll
lods
stos
cmc
mov
mov
icebp
sub
xchg
xor
push
push
cwtl
or
fdivrl
repnz
pop
jb
imul
jle
mov
out
push
push
xor
add
and
orb
test
jo
and
bound
jb
or
push
dec
and
push
loop
adc
lahf
dec
fsts
sub
mov
xchg
xchg
mov
pop
aas
call
into
inc
sbb
jo
or
repz
fwait
cmp
jno
cmp
xchg
lods
pop
adc
dec
pop
fucomip
dec
aas
push
sbb
mov
in
cwtl
mov
ret
sub
add
add
lret
das
ja
sbb
ss
adc
cli
fdivrs
jecxz
es
push
and
rorl
push
sub
xorb
mov
mov
push
popa
lret
and
pop
xor
cmp
ret
xchg
mov
jle
pop
loop
adc
cmc
iret
xchg
cmovs
outsl
pop
test
mov
enter
cld
mov
movsb
lahf
in
sbb
fwait
ja
cmp
add
add
imul
cs
scas
cmp
pop
jbe
in
mov
sbb
iret
js
ss
mov
std
mov
cwtl
andl
stos
scas
mov
mov
ret
adc
mov
lock
push
cmp
ss
pop
filds
xor
cmpsl
push
adc
jecxz
test
idivl
dec
dec
mov
and
pop
into
popf
adc
xchg
jecxz
loopne
mov
jmp
lcall
insb
push
call
push
lea
cmpsl
in
cli
popa
jmp
pop
sub
lock
ror
lods
mov
cld
inc
and
jge
div
xor
sub
aam
loop
xchg
out
imul
gs
xchg
jo
jp
sbb
jmp
addr16
jge
mov
in
add
sub
xor
ja
push
paddsw
shlb
xor
and
xchg
mov
push
dec
inc
je
inc
inc
je
aad
jp
mov
fs
cmpsl
sub
fstl
aaa
dec
mov
sbbl
insl
mov
adc
cmc
push
mov
xor
adc
decl
sub
pop
and
lea
mov
sub
dec
sub
cmp
inc
mov
pop
stos
dec
inc
mov
mov
and
sbb
mov
jns
mov
aas
js
stc
sbb
sub
and
sbb
repnz
mov
dec
or
push
clc
arpl
inc
fisubl
into
ret
sub
lods
sahf
mov
mov
add
sbb
cmc
mov
add
and
pop
mov
and
pushf
ret
mov
and
loopne
cmp
sbb
test
dec
or
lock
xchg
mov
cmpsl
add
divb
in
dec
fmull
push
sbb
jo
lods
adc
mov
cmp
adc
fdivr
inc
subb
jb
dec
lea
and
jnp
jecxz
jl
or
cld
sbb
lock
shll
fimull
cmp
inc
cmp
mov
je
mov
inc
lock
dec
and
aad
xor
pushf
push
popa
popf
pop
and
inc
fwait
cmp
ljmp
gs
mov
adc
pop
iret
pusha
insb
xor
sbb
loope
push
int3
mov
or
pop
add
sub
nop
sub
movsb
mov
aaa
mov
lods
aas
sub
push
xchg
mov
lahf
shll
push
inc
data16
aaa
fwait
xchg
test
sub
and
scas
inc
push
mov
xor
iret
clc
inc
push
xchg
xor
xchg
add
insl
or
daa
in
cmp
cli
cs
sarb
ja
cmpsb
cwtl
jmp
mov
xor
xchg
daa
adc
ret
rcrb
and
fucomp
repnz
test
adc
aaa
dec
adc
mov
scas
pusha
repz
mov
subb
frstor
or
imul
insl
xchg
sub
into
leave
add
cmp
push
movsl
fldt
pop
push
insb
xchg
mov
scas
mov
insb
sar
push
add
loope
sub
mov
sbb
mov
test
movsb
adc
pop
xor
pop
aad
inc
cmp
ss
mov
inc
jnp
xor
cli
cmp
cmp
push
or
insl
fnsave
sti
test
adc
cwtl
repz
pusha
mov
add
dec
inc
cld
divb
mov
sbb
sub
cmp
das
outsl
es
pop
outsl
cs
xor
test
cli
enter
fsts
enter
push
push
push
mov
and
mov
std
add
idivb
aaa
leave
mov
shll
je
and
out
sbb
push
dec
test
dec
aad
mov
add
loopne
pop
mov
jp
subl
je
pop
lret
pushf
cmp
cmp
ds
sbb
lods
cmp
cmc
test
mov
fsubrs
int3
cmp
xor
outsb
clc
sub
mov
sar
imul
shlb
or
mov
inc
push
mov
add
pop
std
xor
xor
repz
jmp
fisttpl
jmp
sub
cmp
aas
ja
and
call
in
and
outsl
sbb
inc
mov
imul
insb
inc
adc
and
ror
int3
add
mov
mov
adc
sahf
mov
xchg
into
and
lock
sub
aaa
xor
add
clc
mov
setbe
or
sbb
aaa
mov
xor
dec
mov
add
aam
movsb
push
adc
sub
int3
mov
idivl
pop
xchg
adcl
mov
cmpsb
sti
push
sbb
mov
sub
orl
popa
pop
or
add
cltd
flds
jge
lret
dec
out
stos
call
ljmp
js
lea
movsl
stos
ficoms
hlt
xor
adc
add
aad
ret
rolb
in
xor
imul
push
sbb
cli
scas
mov
bound
mov
cmpsl
das
jp
mov
xchg
push
aas
les
mov
mov
ja
out
mov
dec
ljmp
xchg
popa
sahf
xor
aaa
mov
and
shll
iret
mov
nop
mov
dec
fldcw
mov
fistl
sub
pop
pop
jg
ret
js
sbb
adc
sub
cmp
cmp
xor
jns
pop
jae
push
mov
mov
popl
push
pop
adc
inc
outsl
scas
push
push
adc
sub
dec
dec
jge
sub
out
shl
ja
mov
out
mov
dec
test
xchg
adc
test
dec
add
in
or
aad
mov
mov
fwait
pop
shl
lret
xor
push
testb
add
lods
into
sub
inc
das
inc
mov
mov
cmp
dec
inc
paddw
fisubrl
outsb
or
xor
mov
adc
mov
or
cmp
icebp
sub
enter
push
dec
push
jg
inc
and
xor
push
ss
daa
sub
arpl
rorb
pop
dec
in
shl
addl
cmp
frstor
or
daa
loope
insb
leave
shrl
in
and
out
cmpsb
iret
xchg
xor
lret
mov
stos
repz
incb
mov
ljmp
add
push
loopne
gs
stos
insb
nop
mov
xchg
pop
pop
inc
cltd
fildl
adc
data16
pop
inc
sub
sar
insb
scas
les
out
inc
nop
inc
pop
imul
xchg
jno
xchg
pop
mov
adc
mov
pop
adc
cmp
push
xorb
cmp
and
mov
add
xor
mov
sbb
aaa
mov
push
inc
mov
mov
pushf
jge
je
mov
and
mov
add
cmp
mov
cmp
lahf
sbb
ficoml
adc
mov
repnz
and
aaa
push
pop
cmc
inc
xor
outsl
sub
dec
lcall
lds
dec
push
cli
add
std
outsl
sbb
scas
or
test
adc
ljmp
and
test
mov
sub
or
push
jle
mov
pop
das
in
push
dec
pop
and
dec
push
js
dec
add
inc
mov
push
fidivs
stc
sbb
mov
stc
jecxz
fistpl
cmp
sbb
insl
loopne
fidivrs
std
int3
jnp
inc
iret
cmc
sub
cmp
addb
xor
cmp
xchg
sbb
lock
xlat
pop
insl
cltd
mov
and
mov
pop
mov
sbb
cmpsl
xlat
cmp
mov
out
adc
add
and
xor
shrl
gs
cmp
das
aas
repz
js
jecxz
or
add
negb
pop
popf
mov
or
jne
dec
xchg
cmp
sbb
nop
mov
test
or
es
ljmp
dec
pop
mov
push
lcall
jno
jmp
scas
xchg
popf
aaa
adc
dec
fwait
cmp
add
sti
stos
call
arpl
pop
push
sub
mov
push
or
adc
mov
push
mov
xor
clc
push
inc
popa
test
mov
add
movsl
or
pushl
loopne
lods
stc
fcmovne
mov
outsb
cmp
sub
or
cld
aaa
sti
sbb
fidivrs
out
mov
in
dec
std
adc
in
in
dec
sahf
cmp
sarl
aad
clc
popf
imul
adc
jmp
sarb
jg
jo
loopne
jo
jae
mov
push
jns
mov
lods
movsb
test
cmpb
dec
cmpsb
fcoms
mov
push
test
test
cmc
xor
fsubrs
and
xchg
adc
iret
or
mov
push
notl
push
lahf
dec
adc
mov
inc
daa
mov
dec
mov
dec
rcl
icebp
scas
jg
pop
dec
mov
add
mov
mov
lret
sbb
filds
jns
outsb
movsl
jns
pop
push
mov
clc
ja
adcl
inc
and
mov
sahf
fmuls
call
lret
imul
int3
push
inc
mov
jb
cwtl
lods
inc
test
fistpl
addr16
movsl
xor
sub
mov
pusha
mov
pop
jnp
sbb
das
mov
pushf
mov
orl
addr16
jae
adc
xchg
mov
adc
mov
xchg
adc
mov
mov
jnp
adc
mov
jecxz
mov
pop
enter
iret
adc
mov
sub
ret
mov
mov
sub
adc
imul
xchg
sti
sbb
xchg
sub
cmp
dec
sqrtps
mov
test
std
adc
lcall
call
cli
xchg
xchg
shll
fwait
jbe
lahf
shll
mov
dec
xchg
ret
movsl
pushl
pop
pop
and
fidivl
outsl
mov
dec
outsl
cmp
or
adc
cwtl
mov
pop
xor
add
sub
out
sbb
mov
clc
sbb
or
cli
sbb
gs
mov
push
mov
mov
sbb
jne
ss
hlt
outsb
pop
shll
test
add
shr
inc
xchg
popf
lahf
cli
shr
add
push
xor
pop
inc
ljmp
into
mov
push
movsb
cmpsb
push
or
push
add
jge
jnp
inc
xchg
outsb
jg
fisttpl
out
rolb
int3
psubusw
jl
sub
push
jecxz
xchg
mov
push
mov
xchg
push
cli
lret
addr16
mov
call
fisubs
jns
stos
cmp
jmp
cmpsb
stos
shl
push
adc
fs
sub
cld
sub
sahf
inc
pop
pushf
push
cmp
fs
adc
jg
lret
xchg
xorl
add
imul
ja
call
pop
xor
fprem1
unpckhps
jb
test
dec
dec
add
adc
stc
push
sbb
add
push
in
jecxz
mov
push
and
pop
clc
mov
sub
xchg
mov
in
jo
cli
pop
mov
pop
mov
daa
ss
aam
clc
and
or
push
mov
xchg
cmp
dec
jo
xchg
mov
je
inc
jmp
mov
push
cli
jl
lcall
data16
push
push
lea
xor
movl
mov
push
sub
fcompl
rcrb
sbb
pushf
fwait
daa
pushf
sub
decl
pop
add
mov
mov
inc
mov
push
jae
icebp
jmp
adc
xchg
addps
sar
addr16
adc
xchg
sbb
ljmp
mov
clc
xor
and
sti
lret
cmp
leave
or
icebp
je
dec
xor
lods
dec
dec
and
out
vcvtsi2ssl
jmp
push
mov
inc
aaa
cmpsl
mov
repz
pop
leave
xchg
cli
mov
xlat
aad
call
sub
xchg
sub
imul
insb
cmp
xor
cmp
mov
cli
inc
add
cmpl
in
subb
dec
mov
aaa
add
ja
cli
in
jge
das
int
pop
lods
daa
xchg
ret
adc
inc
scas
push
mov
movsb
cld
fimuls
cltd
stos
xorb
hlt
adc
sub
xchg
push
mov
rol
dec
mov
out
lock
jl
cmc
mov
jno
jmp
dec
std
pop
mov
xor
mov
sub
cmp
pop
pusha
icebp
or
sti
sahf
loope
pop
incl
cld
icebp
inc
stos
jnp
inc
jb
dec
aam
je
icebp
repz
jno
test
shrl
xor
stc
loope
sub
jb
iret
xchg
ss
rcr
lret
sahf
jecxz
and
cmpsl
add
int
lods
fstl
repnz
push
inc
insb
int
pop
fbstp
adc
lahf
pop
and
imul
dec
jns
mov
mov
adc
cmp
push
and
test
repz
movzbl
je
adc
jle
data16
inc
mov
aad
in
enter
and
xor
adc
aam
or
xchg
adc
test
push
dec
std
scas
jb
in
mov
sub
aad
pop
shrb
jb
xchg
movsb
mov
hlt
push
xchg
test
inc
rclb
ja
movsb
mov
scas
xor
mov
mov
mov
cmp
movb
bound
cltd
icebp
fcomps
mov
push
xchg
mov
add
xchg
jl
repnz
jl
push
es
push
enter
repnz
es
pop
xchg
jno
adc
and
cmpsb
mov
jmp
push
pushf
sbb
sbb
sbb
xlat
sbb
cld
insl
fidivrl
rol
xor
inc
xchg
mov
lea
loopne
test
mov
test
pusha
flds
push
mov
pop
cmpsb
fbstp
xchg
jno
imul
jo
add
jns
xchg
std
mov
push
pop
add
jae
inc
in
gs
lock
sbb
in
insl
ljmp
xlat
loop
pusha
mov
sub
sub
sbb
dec
push
divb
pop
in
pop
lods
daa
outsl
lea
adc
xor
sub
jo,pt
out
mov
mov
cld
call
sub
std
or
out
push
in
or
dec
xor
dec
sbb
add
in
and
lea
mov
fisubrl
aad
ljmp
cs
adc
cwtl
scas
push
jecxz
sub
jno
cmpsl
mov
test
in
jno
adc
dec
dec
testl
orl
ja
cmpl
push
dec
notb
add
push
stos
xchg
push
iret
mov
xor
mov
jne
inc
in
sbbb
fwait
pop
repz
mov
and
sub
xor
sti
adc
movsb
shlb
inc
xor
ds
shrl
and
sub
nop
pop
jg
mov
into
pop
sbb
xchg
mov
mov
popa
jb
fsincos
add
jle
lods
cmc
sbb
jnp
sub
mov
aad
push
aad
push
xor
iret
ret
aaa
iret
push
fcoms
rcll
sub
idivb
insl
out
mov
pop
xor
add
ds
stos
add
fidivrs
dec
fstl
mov
and
dec
loope
xchg
sti
flds
xchg
add
add
xchg
repnz
das
jbe
cld
rcr
xor
pop
cld
xor
dec
in
push
dec
pop
xchg
mov
add
lds
xchg
enter
fwait
sub
mov
xchg
stc
sarb
filds
cld
ss
out
or
jbe
pop
bound
stos
or
mov
jne
inc
in
mov
aaa
adc
push
mov
mov
jno
xor
shr
jbe
jp
cli
jno
sub
lcall
hlt
inc
add
shl
vpsubb
jp
test
mov
inc
push
push
push
mov
int
pusha
mov
cld
dec
das
push
mov
lret
orl
popf
mov
ljmp
push
pop
outsl
out
ljmp
loopne
xchg
mov
ret
leave
rcrb
int
fiaddl
push
jne
push
pop
sbb
and
in
sbb
out
push
xor
jno
addl
pop
jno
sub
pop
gs
push
in
scas
fwait
sub
sub
daa
test
das
stos
in
xchg
adc
mov
push
push
xorl
jge
leave
test
cltd
jp
mov
or
push
sbb
push
or
xor
push
cmp
inc
sub
cmp
aaa
push
dec
push
cmp
sbb
mov
fisttpll
and
idivl
cmp
or
addr16
out
mov
bound
xor
fmulp
adc
adc
fcmove
sbb
lret
pop
lahf
add
test
push
repnz
mov
hlt
cmpsl
xor
push
xor
neg
xor
mov
jmp
jmp
sub
mov
loop
sahf
loope
cmp
add
and
ds
popa
cli
and
pop
mov
aaa
loope
in
lret
popf
in
pop
movsb
fdivs
sbb
xlat
or
add
pop
addr16
or
push
out
jo
ds
imul
cwtl
mov
sbbb
pushf
fcmove
sub
enter
mov
mov
jb
xor
sbb
insb
std
out
push
call
aaa
lcall
test
xchg
outsb
and
scas
or
dec
jnp
push
les
jge
fstpt
call
fbld
or
arpl
shlb
data16
mov
filds
lods
adc
or
xor
pop
sbb
ljmp
scas
push
and
dec
das
scas
mov
or
std
sbb
and
es
cltd
das
shrl
adc
test
pop
pop
int
cli
clc
xor
popa
jns
and
pop
and
push
push
pusha
pop
pop
mov
mov
push
sarl
sub
and
fnstcw
cld
adc
xchg
pop
xchg
fcmovbe
pusha
mov
in
push
pop
cmc
pop
cmp
or
xor
bound
sbb
jg
or
ret
lcall
or
push
lea
jge
jl
popf
jecxz
push
cmp
adc
lret
les
imul
pop
and
fs
daa
dec
pop
sti
orl
outsb
xor
hlt
ret
adc
jne
aas
jbe
pushf
pushf
xchg
cmp
cs
adc
add
fnstcw
mov
cmp
pushw
aas
sbb
adc
test
out
roll
add
mov
and
movsb
xchg
or
push
addr16
scas
lods
bound
repnz
and
push
pop
jl
gs
add
lods
xchg
fldcw
mov
lods
mov
and
jno
jmp
push
jbe
divl
lea
sbb
shr
or
mov
sub
aam
cmp
cli
fwait
dec
inc
add
gs
sbb
test
cli
xchg
adc
mov
sbb
lret
or
andb
repz
clc
push
cltd
mov
mov
fs
cltd
fisubl
arpl
xlat
xor
sub
mov
jo
dec
push
dec
mov
test
xchg
xor
push
inc
insb
mov
xchg
rcll
je
dec
inc
sub
in
dec
mov
std
dec
adc
xchg
push
dec
mov
pop
in
mov
jne
cmp
lcall
cmp
sbb
xor
add
xor
in
loope
test
and
xor
sbb
jnp
sub
mov
std
orb
aad
xchg
ret
cli
dec
bound
cmp
pusha
xor
es
icebp
lcall
mov
mov
add
and
xor
lahf
fisubs
fistps
pop
dec
int
lock
dec
fstpt
mov
iret
negl
gs
leave
pusha
cltd
test
xlat
jnp
xchg
fsts
outsb
push
cmp
xchg
add
loopne
leave
adc
mov
lret
insb
add
and
and
in
and
sbb
fistps
mov
insb
pop
or
push
lahf
shlb
inc
sub
push
faddl
pusha
cmp
cmpsb
test
jmp
cmpsb
mov
dec
mov
push
push
inc
jne
fsubrl
or
xorb
and
data16
sbb
jns
pop
das
jnp
bound
mov
mov
jb
aam
jge
mov
fisubs
out
jae
sbbb
push
aas
inc
xchg
test
sbb
cltd
imulb
or
shl
add
mov
push
jbe
flds
mov
int3
out
ret
cmp
lahf
lcall
mov
cltd
push
and
sub
movsb
mov
xlat
fimull
dec
rcl
or
xchg
cmp
aam
ret
inc
push
adc
push
mov
inc
and
mov
aaa
scas
das
lea
mov
push
loop
subb
cmp
fs
jecxz
sbbl
or
xor
jb
adc
pop
in
jg
data16
xor
cmpsb
push
fadds
inc
mov
in
inc
inc
mov
test
and
inc
data16
and
mov
push
dec
push
and
clc
imul
xor
xchg
pop
xchg
bound
in
jge
outsl
pop
fwait
cmp
mov
and
push
mov
pop
pusha
mov
xchg
outsb
pop
aad
fimuls
mov
dec
and
inc
addr16
lret
mov
dec
jae
popa
mov
xchg
pop
inc
mov
imul
scas
sbb
mov
adc
out
sub
call
ficompl
mov
arpl
xlat
cmpsb
lcall
adc
jmp
sbb
insl
dec
test
incl
fld
mov
xchg
jne
sbb
sub
imul
mov
enter
sub
into
jmp
sub
popf
cld
xor
lock
data16
sbb
cmc
xchg
ss
fsubs
adc
dec
dec
adc
dec
popf
fucomi
dec
inc
push
out
popf
mov
add
fnstsw
test
arpl
xor
hlt
ret
mov
dec
jg
xor
std
ficoml
push
adc
adc
lock
mov
push
pop
stos
jno
inc
adc
in
inc
pop
xchg
and
add
pop
mov
jmp
outsb
lahf
xchg
out
bound
es
xor
shlb
pop
fidivs
sub
xor
loopne
xchg
jecxz
push
insb
jp
and
stos
jmp
aaa
arpl
pop
ds
fbld
mov
test
scas
test
push
in
push
jb
and
dec
cmp
aam
mov
sub
push
push
adc
in
adc
xchg
pop
ss
fisubrl
push
div
fwait
xor
lds
loop
bnd
test
rclb
add
scas
fimuls
sbb
mov
sarl
inc
mov
leave
sub
fldt
sub
mov
lock
sbb
ret
adc
fisttpll
imul
fsubp
sbb
pushf
mov
or
cltd
cmp
iret
push
fwait
pusha
in
inc
jmp
popa
mov
ljmp
jnp
push
xor
lret
mov
orl
jno
inc
add
or
xchg
add
jl
or
test
or
xorb
sbb
push
js
inc
jg
cmp
cmc
out
mov
dec
xchg
ficomps
xchg
loop
cmp
xchg
push
xor
ja
add
nop
fldl
mov
add
outsl
lret
jp
and
pop
daa
jp
pusha
or
insb
and
dec
aas
aam
push
filds
mov
and
cwtl
pushf
inc
insb
in
adc
pop
push
mov
popf
mov
pop
and
and
sbb
mov
adcl
lahf
push
in
add
repnz
stc
pop
int
in
sti
insl
jae
add
aam
jo
pop
std
mov
sub
pop
mov
mov
adc
adc
insb
push
sub
add
adc
ljmp
fwait
cmp
loope
mov
xchg
pop
aad
popa
js
jno
mov
adc
xchg
or
dec
xchg
dec
and
xchg
sbbl
bound
push
dec
pop
cmp
mov
push
mov
outsb
dec
int3
fdivl
mov
lock
fldenv
jnp
addr16
mulb
or
scas
out
inc
enter
in
dec
xor
sbb
cltd
mov
dec
out
fcmovnbe
push
mov
mov
jl
add
or
cmp
or
and
int3
gs
scas
int3
xchg
xchg
and
mov
push
rorb
and
sbb
addb
loope
jmp
add
add
popf
jne
mov
fwait
push
test
jbe
xchg
cmp
lret
mov
outsb
xchg
cltd
pop
push
iret
push
mov
adcl
cmc
push
mov
fadds
ficomps
sbbb
pop
movsl
aam
popf
leave
push
pop
pop
data16
adc
mov
jne
repz
aad
call
loopne
outsb
adc
lcall
xchg
or
mov
incb
pop
add
aas
push
jb
cmp
push
outsb
mov
xchg
fldcw
xor
test
pop
in
into
lret
and
fistpl
scas
popf
push
xchg
jo
test
mov
cwtl
dec
mov
push
out
cmpsb
mov
push
fsubl
fmulp
or
lcall
mov
cmp
ret
cmp
leave
inc
cmp
add
hlt
out
lods
lret
fcoms
pop
int
xor
dec
push
cltd
arpl
add
ficomps
or
push
int
add
jge
pop
add
push
sub
dec
push
ss
fsubs
repz
mov
dec
mov
mov
push
xchg
into
sub
pop
leave
mov
fnstsw
subb
sub
je
js
dec
testl
push
ds
in
lods
lret
lcall
mov
inc
imul
stos
je
jbe
fbstp
call
es
cli
push
fdivs
inc
popf
or
inc
add
xchg
push
out
push
out
imul
fidivl
loopne
sbb
dec
or
outsb
dec
mov
pop
xchg
push
cltd
sbb
fmull
push
aas
or
cmp
add
in
arpl
lahf
or
dec
add
pop
jecxz
jecxz
aaa
mov
cltd
and
ja
ret
sbb
jmp
xchg
arpl
shlb
mov
out
js
inc
pop
lcall
mov
gs
xchg
loopne
xchg
sbb
jmp
adc
in
xchg
aad
mov
popf
xor
sbb
and
or
mov
mov
popf
fiadds
xor
push
loopne
rorb
out
frstor
dec
repz
push
out
insb
imul
push
orb
mov
adc
and
xor
cmp
fsubr
xor
sub
add
mov
cmp
lahf
fbstp
jp
push
push
sub
test
inc
dec
movsb
sub
xor
ljmp
scas
inc
mov
cmp
inc
jmp
in
fwait
push
mov
outsl
stos
push
pushf
scas
mov
or
and
mov
and
dec
scas
fdivs
mov
cld
pop
jl
add
jae
push
pop
enter
xor
inc
imul
out
pusha
test
or
xchg
inc
and
mov
ljmp
scas
test
int3
or
rcrb
push
ret
ret
psrad
mov
mov
outsb
in
mov
ret
shll
inc
jge
pop
pop
adc
cvtdq2ps
sub
in
and
mov
aad
xorl
pop
aam
lcall
mov
or
cmp
rcr
into
pop
dec
inc
cmp
mull
inc
lods
dec
pop
cmp
rcrb
jg
andb
inc
pop
loop
dec
jg
xor
filds
rol
lea
dec
test
xchg
push
adc
xor
mov
je
addb
or
xchg
push
lcall
idivl
mov
mov
mov
mov
and
es
xchg
rorl
xor
andl
ror
shlb
stos
cli
ficomps
inc
aam
pop
add
dec
inc
add
push
jno
and
ret
ljmp
jno
lods
sahf
push
fbstp
xchg
cmpl
test
lret
jle
out
popw
mov
lcall
mov
inc
std
mov
in
clc
xchg
mov
mov
jl
jmp
or
lods
xchg
xor
mov
jo
das
xor
mov
mov
sub
pop
in
lods
addr16
pop
cs
push
loope
mov
bnd
mov
jmp
sub
mov
xchg
dec
lods
pop
xlat
cld
xchg
mov
js
mov
fs
cmp
sti
pop
mov
test
push
and
inc
xchg
pop
dec
loopne
adc
sbb
sub
repz
inc
or
iret
in
sbb
lods
scas
test
push
ds
lock
xchg
scas
icebp
repz
xchg
add
mov
pusha
sar
mov
dec
lock
test
push
and
fisubs
mov
in
sahf
ds
shll
mov
mov
je
andl
add
xchg
cmpsl
xchg
cmc
imul
js
leave
mov
push
roll
in
scas
fidivrl
cmp
or
out
inc
aas
add
push
push
xchg
xor
lods
adc
push
enter
fidivl
ss
imul
das
mov
xchg
iret
loop
cmp
inc
xlat
push
subb
ret
scas
add
add
mov
jns
clc
lea
pop
xlat
insb
or
add
jae
fstpl
sbb
cmp
inc
xor
pop
mov
fsubrl
sbb
daa
ljmp
push
and
sbb
sti
js
scas
cs
inc
pop
out
test
js
sahf
pop
loope
xchg
imul
sub
fistpl
sbb
xor
fwait
cmpsl
out
pop
dec
adc
cltd
pop
push
jne
mov
fists
pop
xor
call
pushf
into
stos
sbb
jbe
xor
adc
add
xchg
cmp
and
lahf
jbe
loop
sbb
insb
mov
adc
sub
mov
push
sti
adc
jmp
les
es
mov
ljmp
sti
mov
jg
icebp
pop
jl
inc
nop
or
xlat
push
cli
pop
repnz
xor
jbe
js
test
jge
mov
cld
mov
inc
int3
lcall
stc
addr16
mov
jnp
or
dec
push
pop
loope
sub
cld
mov
loope
call
mov
jno
xlat
sbb
js
xor
cmp
mov
nop
adc
sub
cs
popa
and
sub
int3
xchg
popf
das
add
loop
das
mov
push
mov
jl
add
xchg
call
push
cmp
cmpl
xchg
scas
ror
fwait
pop
cld
data16
pop
out
aam
cmp
inc
dec
jp
adc
xchg
cmpsb
inc
inc
filds
mov
push
daa
or
movsb
add
mov
push
lcall
mov
pushf
js
aad
jno
mov
je
push
shrb
jae
and
and
lcall
mov
jmp
adc
or
stc
fbstp
movb
pushf
xchg
or
add
inc
cmp
jnp
inc
mov
mov
inc
mov
cs
pop
mulb
jmp
andb
and
aad
insl
lcall
shll
inc
mov
insb
or
sbb
cld
xor
xor
pop
stos
mov
ss
xchg
xor
pop
pop
sub
jne
dec
mov
sbb
es
pop
test
stc
rorb
dec
lcall
pop
dec
and
add
aas
jno
dec
pop
aaa
out
cmc
pop
shrb
cmp
ret
mov
fucomi
cmpsb
xchg
mov
test
gs
or
mov
daa
into
lahf
sbb
pop
xchg
add
rcrl
gs
mov
int
outsb
mov
or
jg
adc
gs
pop
les
lods
pop
aam
dec
pop
mov
mov
pop
call
mov
xchg
sub
xlat
in
jnp
pop
pop
clc
stos
les
xchg
int3
clc
jbe
jmp
lahf
and
push
mov
lock
test
sbb
mov
ficoms
xorl
adc
lods
xor
les
and
lret
adc
xchg
mulb
mov
pop
ret
ret
cmc
nop
shll
cmp
es
rolw
mov
cmp
fdivr
mov
jmp
out
and
mov
bnd
imul
stos
push
pop
inc
mov
sub
clc
aam
cmpsb
sbb
popf
add
push
cli
fs
mov
mov
push
jnp
std
fidivrl
or
imul
jge
sti
jge
jp
pop
adc
leave
popf
adc
push
outsl
movsl
mov
call
cltd
sub
inc
stos
xchg
fistl
adc
rcll
or
ret
cmp
js
hlt
add
jae
adc
adc
mov
and
ss
mov
cld
push
pop
sub
add
bnd
jns
out
mov
mov
xor
sbb
jnp
adc
xchg
adc
xchg
jmp
or
adc
out
or
dec
lahf
push
push
xor
push
xchg
jge
and
repnz
add
fstl
jmp
mov
test
lods
repz
mov
repz
outsl
orl
dec
xchg
push
inc
icebp
pop
aam
sbb
push
cmp
or
sti
mov
add
jp
loope
in
repz
jb
cmp
push
jno
in
lds
or
and
fs
pop
aam
ds
into
xor
iret
xchg
mov
pop
push
rcrb
icebp
pop
out
jb
loope
mov
mov
pop
sub
push
jbe
xor
mov
sub
xor
mov
stc
cmp
mov
mov
inc
rorb
repz
repz
fwait
jb
lret
daa
pop
stos
xor
roll
inc
shll
shlb
jecxz
push
push
inc
rorl
sbb
in
lds
xchg
es
out
mov
loopne
mov
rorl
loope
xor
or
push
jmp
testl
pusha
mov
xchg
rorb
shrb
sbb
mov
out
xchg
pop
or
fnstenv
push
ds
test
imulb
xlat
test
jbe
mov
daa
sarl
repz
jne
test
ja
and
xor
outsb
mov
mov
push
ss
add
je
into
in
into
fistpl
mov
xor
push
push
xchg
lcall
cmp
mov
cmpsl
and
xlat
or
mov
add
sub
xor
fadds
xchg
les
das
orb
mov
mov
jp
mov
test
fisubl
and
add
icebp
push
sarb
sub
jecxz
out
arpl
sti
lea
aas
clc
or
dec
jmp
adc
lds
out
xor
xchg
lods
dec
pop
jmp
mov
daa
mov
aam
xchg
adc
mov
sbb
adc
pop
ficoms
jecxz
movsl
cmp
sbb
fistpl
in
pushf
xchg
push
xor
adc
mov
stos
mov
les
pushf
fsubrl
gs
xor
xchg
xchg
dec
mov
pop
and
push
sahf
xorb
jp
andl
xor
sarl
xor
adc
mov
pop
dec
insb
push
inc
sub
or
andl
out
inc
jnp
or
push
sti
fidivrs
xor
shl
js
out
std
pop
mov
adc
out
in
std
inc
je
jl
cmp
jge
xchg
clc
test
sub
stc
pop
je
pop
mov
jae
sbb
cwtl
mov
in
jmp
jle
dec
ret
add
push
lods
mov
cmpsb
adc
sbb
pop
in
test
cld
jge
adc
or
mov
sbb
ret
shrl
or
idivl
hlt
push
mov
icebp
sub
push
leave
jno
scas
pop
cmp
or
cwtl
test
in
xor
in
dec
in
mulb
push
imul
sub
dec
xchg
sbb
inc
aaa
mov
inc
push
lret
lods
ljmp
sbb
andl
xor
movsl
ds
leave
jb
lahf
leave
xchg
cs
and
out
or
lods
dec
outsl
mov
pop
dec
andl
cmp
jle
pop
ret
scas
adc
arpl
or
mov
add
inc
imul
cmp
xchg
jp
or
jmp
aad
cmp
das
adc
clc
aaa
mov
cmp
iret
add
fbstp
mov
in
add
push
cmc
sarl
add
adc
rorb
jecxz
iret
popa
jae
adc
inc
xor
xchg
cs
jo
movsb
nop
arpl
push
jmp
sti
xor
pop
in
inc
out
mov
fwait
int3
addps
gs
push
sub
or
xchg
cld
pushl
jbe
cmpsl
sub
call
subb
arpl
stos
jge
mov
ds
or
jmp
hlt
mov
xchg
jnp
mov
cmpb
stc
loop
pop
cmp
sbb
mov
test
cmc
adc
scas
cmp
add
adc
popf
push
fwait
or
and
adc
int3
enter
sub
in
es
pop
cmp
cmp
xchg
push
dec
sub
fstpl
cmp
jle
popa
adc
adc
enter
int
inc
inc
mov
and
xchg
lahf
clc
mov
mov
mov
ljmp
mov
scas
inc
repz
mov
xor
adc
cmp
mov
inc
test
xlat
daa
pop
mov
rcrb
inc
or
push
cmp
mov
in
jbe
jo
mov
std
inc
mov
cmc
xor
mov
arpl
lds
loope
addr16
inc
xchg
sub
jl
fistpll
mov
xchg
push
and
pop
rcl
sti
je
in
mov
int
or
xchg
cltd
or
pop
insb
sbb
test
pushaw
push
out
rorl
and
pop
fildl
xchg
ss
sarb
aam
lea
outsl
sub
cmp
addw
test
dec
cmova
idivb
push
push
dec
in
sahf
loop
fs
shlb
mov
ret
les
ret
leave
cmp
outsb
sbb
adc
mov
sub
fmull
lcall
dec
lds
add
pushf
add
add
bound
push
dec
shrb
mov
cmp
gs
sbb
push
imul
adc
or
push
fmul
mov
cmp
dec
inc
xchg
pop
lret
jmp
or
lahf
data16
aad
sahf
push
aaa
cmpsl
push
lods
and
mov
jle
and
mov
mov
jne
ret
jmp
mov
xor
or
sub
leave
cld
or
fstpt
fstps
test
pop
mov
mov
stos
fs
paddw
jmp
cs
gs
inc
lret
mov
xor
dec
push
test
cmpsl
sbb
scas
out
sbb
pop
mov
or
dec
stc
fiaddl
cmp
sub
call
or
xchg
mov
xchg
loope
or
dec
out
dec
sbb
outsb
jb
or
xchg
xchg
mov
and
movsb
dec
adc
mov
dec
sbb
sub
inc
pop
into
or
and
movsl
ret
sti
fistpl
dec
xor
adcl
mov
fidivrl
mov
cmp
inc
sbb
pop
push
out
aad
xor
mov
push
add
mov
jg
rorb
mov
push
shll
das
mov
mov
fsubs
sbb
lods
sub
in
adc
loope
inc
sub
jns
fsubr
dec
dec
andb
jg
xor
inc
push
fcompl
adc
pop
sbbl
xchg
mov
in
add
aad
mov
lods
xlat
fidivl
in
sbb
imul
scas
ret
xchg
and
lods
dec
shl
lret
popa
mov
mov
cmpsb
dec
cmpsb
loope
mov
cli
jb
shrb
inc
stc
pusha
mov
jo
sub
call
fists
test
out
movb
dec
out
rcrl
adc
aaa
andb
insl
aad
cmc
cli
insb
xlat
push
push
cmc
orl
and
rcrl
repnz
into
push
mov
jb
xchg
sbb
xchg
cmpsw
cmp
or
sbb
dec
and
cmpsl
lahf
jge
ljmp
aaa
xor
cmpsb
lret
push
enter
shl
lods
inc
cmp
xchg
mov
cmp
bound
and
test
push
add
testb
xor
mov
jl
pop
and
pop
pop
mov
das
add
mov
insl
sarb
fsubrl
xlat
xor
cmpsb
popl
sbb
add
cmp
dec
out
outsl
imul
pushf
mov
lock
movsl
pusha
add
popf
test
lret
xchg
push
aam
loope
xor
push
push
push
mov
xchg
cmp
outsl
popf
pop
nop
or
lcall
and
daa
adc
push
outsl
mov
jo
xor
mov
shrb
pop
xchg
dec
sbb
ja
movsl
jle
jae
dec
ret
xchg
xor
adc
xchg
xchg
aad
inc
sub
sahf
push
loopne
fisttpll
push
pop
pop
push
lea
jle
and
je
into
imul
lock
dec
jecxz
jo
inc
fs
xchg
in
popa
cmp
cs
into
rcl
stos
push
mov
into
loop
pop
cmp
roll
cmp
mov
jmp
fdivs
test
xchg
fildll
sbb
xchg
fnstcw
loope
jb
cmp
add
cmpb
stc
lahf
pop
je
and
pop
mov
adc
mov
in
iret
cmp
and
cld
mov
sbb
mov
jns
bound
imul
pop
adc
mov
hlt
hlt
jge
fs
cmpsb
lret
cmp
ret
clc
sbb
and
cltd
adc
aam
adc
xchg
xchg
xchg
sub
adc
pop
xchg
int
test
out
pushf
push
pop
daa
pop
lock
pushf
push
rcll
scas
ljmp
adc
jmp
xchg
xchg
shr
jns
mov
inc
loope
aam
mov
or
pop
filds
mov
arpl
dec
cmp
cmpb
loop
jno
and
inc
pop
es
sbb
add
cltd
stc
arpl
add
lods
xchg
test
ds
shl
addb
push
or
fstpl
mov
add
fnstcw
shlb
mov
push
addr16
xchg
adc
pop
add
sbb
rcrb
dec
xchg
sbb
dec
or
mov
inc
mov
add
loopne
xchg
lods
and
stos
popf
div
adc
das
jns
std
mov
ds
faddl
shrl
les
icebp
xor
mov
inc
or
pop
iret
daa
and
pop
add
add
lods
pop
fsubl
push
inc
xor
movsl
mov
lcall
call
cli
sbb
lret
sub
jecxz
sub
iret
mov
rorl
jno
push
mov
repnz
aad
mov
movsl
mov
xchg
hlt
sbb
stos
aam
insw
xchg
je
inc
push
les
jle
loop
push
inc
xor
into
jns
in
dec
call
pop
jge
scas
out
popa
mov
pushl
add
ljmp
lcall
xchg
popf
pusha
add
repnz
hlt
movl
popf
push
jecxz
adc
outsl
cwtl
pop
lcall
jl
and
adc
push
push
dec
psubb
ljmp
ds
jo
jns
jo
shrl
inc
out
xor
shlb
push
aad
jo
in
push
cmpsl
lods
push
cmp
jmp
dec
ja
mov
adc
add
sti
sti
stos
cmpsb
sub
adc
cmp
or
jo
popf
sti
inc
daa
fdivl
js
push
in
pop
cli
je
sti
sbb
or
andl
or
cmpsl
es
mov
or
mov
cmp
adc
xchg
adc
jge
movsb
sbb
mov
or
jp
ret
aas
bound
xchg
inc
xor
inc
js
in
test
push
je
mov
add
mov
jns
enter
jno
mov
mov
mov
jno
push
push
out
xchg
pop
mov
es
in
icebp
push
shl
loopne
jne
mov
rcll
leave
dec
imul
lcall
jb
imul
sbb
lea
inc
ss
inc
jo
aaa
xchg
xchg
push
xchg
rcrl
xchg
push
xchg
lea
fwait
mov
scas
stc
sub
cmpl
repz
push
pop
out
jnp
lahf
movsl
fistpll
dec
adc
jmp
repz
out
out
in
xchg
push
add
or
push
int
pop
add
xchg
inc
loopne
adc
movsl
push
hlt
outsb
rolb
jne
adc
faddp
pop
mov
sbb
pop
push
or
jne
lock
mov
lret
mov
pop
mov
push
cld
std
jecxz
insl
push
cltd
mulb
jb
clc
and
fnstcw
mov
mov
inc
cmpsl
mov
subb
xchg
outsb
add
adc
test
loope
fnstcw
ja
adc
jg
divl
es
adc
push
lret
ljmp
addb
pop
out
adc
jge
bound
aam
fs
scas
jne
jecxz
dec
aad
xchg
loope
jbe
jno
mov
xchg
xchg
pop
push
sbbb
adc
aas
add
icebp
lcall
adc
shlb
mov
or
adc
lock
xlat
push
fucompp
adc
sbb
jge
cmp
outsb
sub
imul
sbb
pop
fildll
xchg
dec
lret
sub
loopne
les
vcvttss2si
jecxz
rcll
repz
sub
loop
mov
inc
stos
repnz
data16
mov
jnp
nop
dec
inc
add
pop
arpl
cmc
js
andb
mov
cs
dec
inc
inc
inc
cmp
clc
sbb
stos
pusha
pop
or
mov
xchg
je
mov
leave
mov
dec
jmp
adc
adc
stc
stos
movsb
pop
and
ds
push
ror
jb
pop
test
movsb
mov
aaa
lods
into
dec
aas
test
stc
adc
cmpsl
int
out
std
test
jmp
ja
ret
cld
push
movsb
hlt
sub
jg,pt
jbe
outsl
jnp,pt
xchg
xor
das
bnd
push
repz
pop
arpl
out
leave
mov
outsl
addr16
lock
divb
jno
xor
sbb
sub
mov
mov
lret
add
jae
and
cwtl
xchg
dec
xchg
lea
int3
jmp
jae
mov
lret
enter
rcr
push
test
mov
jge
icebp
sbb
out
dec
ret
pushf
ljmp
sub
push
js
aad
cmp
mov
mov
push
add
dec
inc
daa
xchg
insb
jns
push
mov
fcomps
test
mov
mov
imul
movsl
fcomps
pop
sub
pushf
inc
loope
outsb
lahf
inc
dec
sub
pop
mov
xchg
cmp
mov
aam
jno
jp
sub
lods
lds
inc
xchg
mov
pop
push
into
rclb
cmpsl
stos
and
test
outsl
sub
pop
or
lcall
dec
sub
mov
rorb
dec
inc
push
adc
inc
daa
add
cld
xlat
sarl
jne
mov
mov
sub
cmc
shlb
push
sar
shl
adc
push
shl
shll
lret
jmp
in
scas
jg
xor
jnp
mov
xlat
xor
sti
cmp
div
sub
cli
jno
arpl
inc
leave
push
scas
mov
push
lods
cmpsl
fisttpl
cmp
imul
push
mov
negb
mov
mov
jo
sarl
scas
fisubl
shrb
fistpl
dec
pop
jp
jne
addr16
icebp
rorl
pop
mov
adc
int
adc
shlb
popf
inc
mov
push
aad
jle
unpckhps
lods
adc
fdivrp
pop
subl
pop
sub
and
push
mov
pushf
pop
mov
jbe
clc
xchg
sub
xchg
das
test
jbe
sub
cmc
mov
inc
inc
repz
fcmovnb
or
pop
sub
adc
loop
sarb
fcmovnb
and
sub
mov
jbe
pop
in
dec
dec
push
and
and
in
je
pop
shll
movsb
fwait
shll
lods
adc
pop
jae
add
jns
jo
pop
int3
imul
adc
mov
or
loop
addl
cltd
jge
sbb
xchg
ret
sub
fisttpll
inc
cmp
mov
or
and
pop
clc
ret
lock
pop
call
mov
daa
mov
mov
stc
enter
push
add
xor
lahf
rorl
fidivrs
test
pop
lock
cmpsb
or
into
mov
xchg
fdivrs
adc
cld
add
sbb
mov
movb
jl
pop
std
dec
enter
add
xchg
pop
outsl
pop
push
jecxz
lahf
push
jl
mov
or
repnz
and
xchg
jae
dec
cli
add
sbb
outsl
call
stos
nop
hlt
in
add
add
std
push
rorb
xchg
add
addb
mov
mov
pop
lock
cmp
jno
mov
inc
test
icebp
nop
inc
sub
mov
ds
sbb
testb
call
ds
jle
sub
arpl
xchg
and
test
sub
jle
jg
rorb
jnp
hlt
mov
mov
insb
into
insb
fbstp
jmp
enter
pop
cltd
popl
cwtl
scas
pop
sub
dec
inc
jne
aas
in
js
sarb
dec
and
jp
xor
push
add
inc
mov
and
rol
repnz
inc
adc
fistps
lods
mov
push
mov
jmp
xchg
jno
cmpsb
lods
pop
xlat
xor
loope
jno
fdivrs
sub
jne
pushf
hlt
insb
inc
ss
pop
or
sub
lahf
out
rolb
push
jne
sub
mull
xchg
rcrb
fnstenv
cmpsl
inc
inc
sbb
bound
and
rcr
sbb
inc
xchg
and
ret
test
push
es
movsb
notb
cmp
lods
lock
sbb
push
mov
mov
and
aad
fbld
lret
shr
push
je
sub
xchg
pop
nop
das
mov
xchg
sbb
sarb
pop
pop
xor
xorb
sub
mov
adc
mov
pop
adc
xchg
add
fstl
stos
jb
and
jnp
cmp
les
lock
rcll
loopne
pop
sub
pop
adc
adcb
mov
push
loop
inc
cltd
jbe
lahf
jp
jbe
clc
mov
pop
mov
inc
enter
pop
or
mov
xor
je
push
sbb
in
pop
test
lock
leave
adc
ret
push
das
aad
test
int
fnstcw
or
shll
dec
sbb
data16
fwait
xchg
inc
lcall
cltd
and
xchg
sub
cmpsb
xor
lds
jp
mov
adc
out
jg
sbb
lret
push
repz
iret
dec
jle
subl
clc
mov
test
mov
inc
cltd
dec
mov
cli
std
ret
popa
bound
movsb
sbb
sahf
pushf
and
mov
loope
cmp
push
data16
std
add
fidivs
fs
test
scas
ret
jmp
pop
add
mov
sub
push
movsb
and
mov
rorl
or
mov
fadds
cs
cmp
mov
ja
flds
iret
push
test
jl
mov
cs
popa
dec
sarb
fs
out
sti
addr16
bound
inc
sbb
loop
jae
popf
dec
sbb
sbb
cltd
pop
xchg
arpl
scas
sub
test
call
dec
sbb
pop
jbe
std
movsl
xor
push
daa
repz
inc
pop
in
sub
ds
sbb
push
add
int
pop
jbe
push
test
dec
push
leave
pop
testl
out
jg
clc
gs
addr16
ret
mov
repz
repnz
add
xchg
js
andl
cmpsl
test
xchg
dec
pop
in
push
adc
ja
jnp
mov
loop
sbb
lea
xlat
sarb
push
in
push
scas
xlat
fcomps
jno
push
mov
jmp
mov
jle
imul
movsb
or
jg
movsb
mov
add
pop
lea
push
mov
push
aaa
inc
gs
movsl
cmpsl
dec
enter
repnz
jp
sar
cli
xchg
iret
rorl
sbb
adc
jnp
jae
loop
dec
adc
xlat
rorb
inc
mov
call
lods
cmc
stc
fwait
lds
nop
in
fistps
lds
fldl
and
xchg
mov
push
or
mov
fistpll
imul
inc
pop
cld
push
roll
fmuls
lods
xor
and
jmp
xchg
pop
sbb
shrl
cmp
add
jo
loopne
jo
jge
or
inc
es
cld
dec
sbb
sbb
aad
sbb
cmp
mov
inc
and
adc
mov
daa
adc
scas
mov
pop
lods
int3
mov
adc
lock
add
jnp
bound
xchg
fcmovnbe
test
mov
mov
xchg
sbb
xchg
pusha
cmc
pushl
sti
push
and
mov
jo
dec
loopne
adc
cmp
test
ficompl
outsb
ss
push
sbb
adc
pop
adc
out
cmp
sub
sub
jne
mul
push
pop
pop
es
out
movsb
and
rcll
mov
jnp
call
xchg
push
mov
movsb
iret
or
clc
cld
lcall
jmp
pop
pop
imul
loopne
das
icebp
aad
shld
mov
sbb
pop
add
lea
cmp
jo
push
mov
jo
xor
and
fiadds
mov
and
sub
scas
test
inc
incb
shr
mov
and
je
push
push
leave
cwtl
sti
aaa
mov
andl
xchg
or
ljmp
dec
xchg
rcl
cli
inc
mov
clc
mov
loop
lock
jge
push
mov
mov
scas
or
arpl
lds
mov
inc
push
jns
xchg
mov
lret
jns
mov
in
mov
jmp
jp
push
mov
pop
and
cmp
inc
mov
or
lahf
stos
loopne
xchg
shl
cmp
mov
or
movsb
add
fisttpl
mov
lret
inc
lods
lcall
adc
lds
inc
dec
sahf
push
decl
lcall
or
push
dec
sub
cmp
js
jo
cmpsl
xchg
movsb
in
fdivr
call
mov
leave
pop
stos
and
pop
inc
mov
or
xchg
xor
aas
lahf
int
data16
push
in
jnp
test
pop
push
mov
sti
inc
fistps
test
cmpsl
test
push
push
sti
cli
stc
pusha
sbb
xor
mov
cmp
dec
mov
ss
nop
daa
pop
lcall
pop
xor
cmp
loope
xchg
rol
gs
sbb
bound
sbb
nop
clc
jnp
or
imul
mov
mov
stos
jmp
int
pop
mov
int3
sahf
mov
cmp
jmp
inc
call
lods
icebp
sub
xchg
xchg
mov
call
ss
and
cmpsl
jne
inc
xor
cld
add
in
add
ja
and
cmp
or
jae
jmp
inc
mov
mov
pop
fxch
or
sub
lret
fdivs
xchg
ljmp
stos
xchg
mov
pop
push
lock
lret
out
ret
jl
lods
mov
mov
pop
jno
xchg
push
int
not
add
rorb
les
inc
xor
dec
mov
jecxz
stos
aas
xchg
dec
mov
xchg
adc
sub
push
aad
cmpsb
int
ss
jle
imul
push
jno
mov
mov
shr
pop
fcoml
jno
les
mov
or
addr16
lcall
sbb
jge
scas
lcall
dec
mov
test
bound
lahf
mov
mov
cmp
mov
or
push
shrl
push
and
mov
or
mov
es
loop
rep
scas
ss
inc
scas
mov
xlat
jl
ss
hlt
out
das
loope
add
insb
mov
fdivr
outsl
fsts
aas
pop
inc
push
loopne
cmp
xchg
adc
daa
push
out
mov
loop
pop
or
xor
stos
cmp
daa
add
or
mov
lahf
inc
push
jmp
mov
jae
sub
mov
orb
pop
stc
enter
xchg
jge
aaa
jmp
push
and
mov
xchg
xor
and
xchg
xchg
insl
mov
dec
cmpsb
xchg
popa
and
leave
push
shll
sbb
or
push
add
add
jmp
fwait
mov
test
hlt
inc
mov
ret
loope
enter
fxch
inc
scas
and
mov
jmp
roll
arpl
inc
inc
or
frstpm(287
gs
incl
insb
ret
mov
aam
sbb
insl
arpl
inc
call
dec
push
sbb
bound
mov
mov
inc
xchg
xchg
add
outsb
cwtl
mov
loop
adcb
xchg
mov
mov
ret
rcrl
dec
mov
lret
iret
rol
jnp
add
andb
icebp
cmpsb
cmpsl
in
out
loop
sub
and
dec
cmpsl
bound
xchg
andl
and
std
jmp
add
dec
lods
push
pop
xor
insb
popa
adc
or
sbb
jecxz
cmp
shl
aam
add
push
jnp
int3
pop
fwait
mov
dec
fbld
fcmovbe
xchg
fwait
lret
sarb
pop
ds
insb
xchg
loop
pushf
add
xchg
push
scas
stos
push
cmp
mov
sahf
lahf
jecxz
imul
outsl
jmp
inc
test
rorl
in
dec
fmull
ror
popa
in
dec
repnz
jp
cld
jmp
cmp
jle
cmp
mov
ret
inc
lret
mov
into
sahf
cli
insb
xor
fisubrl
bound
mov
iret
sbb
inc
xchg
test
js
dec
sub
jmp
add
pop
cmpsl
popa
xor
pop
cmp
pop
sti
mov
movsl
add
pop
dec
stc
dec
sbb
xchg
and
es
popf
das
jp
inc
fsubl
add
loope
enter
stos
rorl
or
inc
cmp
mov
call
into
out
mov
ljmp
cmp
test
xchg
jne
ret
lods
outsl
mov
sti
movsb
in
push
into
inc
popa
xchg
movntps
imul
pop
mov
lahf
pop
dec
test
add
mov
lods
movsl
pop
push
push
push
or
ret
outsl
mov
out
add
jne
icebp
xor
jae
stc
aam
sub
out
xor
roll
fwait
je
jo
adc
push
out
mov
movsl
int3
lret
mov
xor
sbb
add
pop
mov
jecxz
rcl
mov
or
add
iret
xor
pop
adc
mov
mov
dec
addb
popa
mov
mov
jge
mov
lods
fmuls
out
shlb
or
xchg
std
inc
jnp
xor
rorb
xor
fwait
cmpsl
mov
cmp
cmp
movsb
sti
mov
or
outsb
xchg
scas
outsl
adc
pop
push
or
pop
leave
pop
sub
pushf
pop
add
or
dec
test
sti
cmp
addr16
sbb
jae
push
pop
dec
fisubrl
inc
pop
xor
in
lods
adc
in
and
jg
or
lcall
fcmovb
loop
jecxz
sbb
int
inc
pusha
repnz
test
packsswb
mov
sub
jbe
imul
sub
icebp
pop
imul
xor
aad
inc
jl
mov
dec
mov
and
push
cli
mov
mov
and
leave
pop
push
es
test
pop
and
fnstenv
jg
imul
cmp
int3
jg
testl
out
imul
push
add
pop
arpl
pop
push
inc
push
mov
das
insb
mov
xchg
sbb
clc
lock
dec
cmpsb
in
push
outsb
insl
ss
rcr
sbb
in
shlb
jae
mov
inc
dec
outsl
dec
ljmp
push
pop
push
cmp
mov
xchg
int
fcompl
loopne
jmp
dec
pop
call
stos
sbb
jae
mov
movsl
js
dec
and
test
push
cld
jnp
xchg
cwtl
mov
ret
pop
ds
dec
popf
aam
sbb
mov
mov
bound
push
add
imul
sub
mov
sbb
shll
repnz
pop
int3
lahf
push
pop
dec
lcall
dec
loope
clc
es
dec
cld
in
sbb
test
out
icebp
xor
imul
adc
push
sbb
fs
mov
loopne
jecxz
fsubs
adc
mov
push
sbb
mov
lret
sub
mov
jg
dec
xchg
sub
mov
mov
pop
ret
lods
cmpsb
cld
stc
add
mov
jl
std
or
in
fwait
cmp
dec
call
negl
sub
int3
inc
push
adc
test
sub
add
pop
and
nop
pushl
add
popf
out
fsubrs
enter
lss
sahf
mov
aaa
mov
push
jo
or
jge
inc
sbb
xchg
xchg
jb
fstpt
punpckhbw
call
loopne
das
dec
pusha
rep
jno
repnz
mov
sub
jbe
insb
jmp
xchg
ja
lret
movsb
xor
inc
aam
sahf
xchg
mov
ds
lds
subl
jl
dec
popf
loop
sub
cltd
or
mov
xchg
pop
sbb
cwtl
test
xchg
mov
xchg
push
mov
cwtl
mov
nop
test
inc
ja
lahf
cmp
jbe
sub
or
ret
scas
adcb
fistpll
scas
lcall
jg
mov
outsl
xor
shrb
xor
inc
push
jo
jle
dec
mov
cmc
xor
sbb
mov
pop
adc
stos
mov
fisubrs
negb
lock
inc
xchg
mov
or
fsubrs
add
push
dec
sbb
jbe
push
xchg
add
xlat
push
push
mov
movl
dec
sbb
fimuls
lods
in
sbb
ret
cmc
dec
das
push
sarl
lods
mov
scas
fnsave
out
lret
mov
xchg
cs
shlb
mov
or
pop
dec
and
mov
mov
movsl
push
into
out
fstpl
das
inc
mov
pop
cwtl
scas
loopne
inc
mov
jb
mov
rorb
out
shr
enter
lret
jecxz
sbbb
ds
jmp
add
jmp
movsl
dec
lcall
and
pusha
inc
outsl
adc
imul
push
mov
fndisi(8087
fcmovb
mov
sub
xchg
sub
mov
clc
mov
mov
push
dec
push
imul
fidivl
out
xchg
in
enter
xor
in
add
stos
mov
lret
iret
jp
push
test
jno
pop
cmp
xchg
mov
cmp
mov
xor
xchg
dec
adc
push
mov
popa
and
test
sbb
mov
add
xor
push
dec
mov
stos
xlat
ret
int3
fimuls
ljmp
popf
hlt
dec
xchg
loop
sub
add
adc
dec
jbe
test
and
popf
ret
dec
dec
inc
mov
add
pusha
sbb
loop
fimuls
inc
xor
mov
stos
orb
adc
jl
inc
cwtl
fs
stc
aad
inc
cmpsl
fimuls
xor
stos
cmp
mov
cmp
mov
testb
sub
lahf
int
into
clc
sub
mov
scas
inc
lock
sub
and
and
push
fldl2e
jmp
cmp
imul
mov
push
ds
mov
mul
inc
enter
test
imul
mov
in
movsl
arpl
xchg
push
push
xor
mov
stos
sti
orb
aas
movsl
mov
das
fs
xchg
ret
pop
loopne
insl
ja
push
bound
mov
movsb
daa
sub
pop
sbb
rcrb
iret
add
testl
push
add
add
stos
add
popa
mov
mov
sub
add
push
mov
mov
lahf
ror
jno
push
bound
fst
scas
push
inc
jnp
cwtl
cmp
or
cs
fstps
cld
scas
push
stos
in
rcrl
insl
adc
rorb
xchg
add
in
arpl
mov
cld
mov
jp
mov
push
xchg
push
in
jb
sbb
lock
addb
lods
inc
sbb
fcmovu
ljmp
mov
adc
sub
cmpsb
lret
xchg
jmp
pop
iret
lock
sbb
repz
xchg
adc
mov
push
jl
xor
lcall
aas
add
jmp
imul
pop
xchg
test
mov
pop
push
out
sub
mov
jnp
daa
scas
fbld
jecxz
fidivs
adc
into
cmc
sbb
pop
sbb
test
xor
adc
dec
cmp
push
pop
push
xchg
mov
cmc
jge
lea
mov
cmp
movsb
and
rcll
xchg
jge
lock
pop
jb
adc
and
in
sub
push
shrb
xor
xchg
or
lods
sub
mov
out
arpl
and
out
js
mov
push
icebp
jle
mov
jp
or
mov
jl
fsubs
jbe
fwait
xchg
js
xor
xor
push
leave
jecxz
jnp
xchg
add
inc
xchg
mov
adc
xchg
adc
loope
or
pusha
movsb
mov
adc
cltd
ljmp
and
mov
jnp
inc
fwait
nop
adc
pushf
jmp
das
mov
fidivl
adc
test
inc
repnz
jg
push
pop
into
jne,pn
push
or
bound
movl
out
add
xchg
dec
dec
xor
jno
pop
jp
test
icebp
sbb
push
fisubl
mov
mov
stos
xchg
sarl
sbb
aam
xchg
fmuls
mov
and
lock
xor
xlat
scas
pop
jg
xor
subl
pop
add
mov
inc
in
adc
pop
imul
pusha
int
loopne
ds
loopne
outsl
cmp
ret
rolb
loop
mov
and
popa
iret
pop
push
nop
rol
and
cmp
sub
xlat
jo,pt
jbe
bound
mov
stos
lcall
cmp
add
je
bound
filds
adc
or
mov
inc
mov
and
xchg
lret
aad
mov
sub
mov
mov
dec
ret
gs
jge
inc
add
fldt
jmp
imul
sbb
lds
and
xor
mov
xor
push
jnp
jne
dec
pushf
jmp
and
arpl
pop
cmp
stc
adc
int
jnp
mov
ficoml
seta
enter
mov
sub
sbb
xor
cmc
push
stos
push
cmpsl
mov
fstl
push
add
cld
dec
pop
ss
repz
pop
insb
subb
xchg
mov
mov
pop
cmp
cs
push
outsl
pop
lock
mov
out
jp
cs
pop
push
or
in
mov
inc
loop
jle
jno
cmp
pop
movsb
imul
fldt
cltd
or
fucom
sbb
pushl
aaa
dec
fbstp
mov
or
sti
fidivrs
leave
dec
rolb
jno
cld
in
in
les
dec
dec
and
repz
inc
add
pop
adc
or
andb
pop
test
das
mov
jle
add
inc
pop
addr16
lods
insl
cmp
xor
add
orb
xchg
adc
mov
outsl
lea
jge
lods
adc
push
lods
xchg
mov
mov
jle
mov
xlat
test
cmp
sub
and
insb
fwait
dec
fnop
sub
sbb
imul
jb
bound
jns
lcall
mov
imul
out
mov
out
pop
ret
xor
ss
imul
cmp
fcomip
mov
rcrl
mov
fs
xchg
mov
gs
sbb
xchg
mov
or
sbb
jmp
jl
pandn
xchg
push
aas
push
scas
lahf
cld
pop
je
push
jnp
pop
push
aad
jne
les
out
cwtl
jl
pop
data16
sbb
sub
dec
in
mov
add
inc
scas
fmull
lock
add
insl
sbb
or
into
mov
popa
mov
dec
and
inc
in
lock
insl
ds
dec
inc
jo
mov
addb
les
xchg
or
sbb
data16
aas
xor
imull
push
stos
rcr
orl
mov
adc
outsb
xchg
stc
fdivrp
pop
pop
mov
inc
dec
or
pop
ficoms
jae
and
xchg
repz
xchg
loop
mull
xchg
jecxz
sub
xor
cli
xchg
jbe
ret
pusha
sbbb
mov
cltd
int
or
sbb
jo
dec
ds
cmc
fldt
xchg
leave
mov
push
out
movsb
lea
scas
adc
mov
add
push
popf
and
insl
das
sbb
cmpsb
fs
mov
or
call
mov
push
adc
mov
gs
or
mov
lahf
shlb
test
xor
pop
sub
addr16
dec
inc
inc
imul
cmpsb
shl
xchg
push
mov
pop
dec
pop
in
add
adc
mov
or
mov
repz
sti
dec
inc
fstpl
pop
out
int
outsb
out
stos
xor
add
jge
insb
imul
mov
fdivs
mov
call
dec
test
xor
dec
pop
jecxz
push
rolb
aas
mov
jl
fcmove
sbb
lea
stos
pop
sub
decb
faddl
and
scas
adc
pop
adc
xchg
mov
ss
cmovns
fmul
je
xor
icebp
arpl
xor
xchg
jbe
pop
mov
inc
fst
jo
dec
push
push
add
adc
add
dec
pop
les
aad
dec
clc
xor
iret
mov
push
pop
jbe
sahf
dec
add
arpl
mov
xchg
fistpll
sbb
into
adc
inc
ljmp
cli
sbb
jae
adc
bound
aad
push
stos
fsts
daa
test
mov
in
shrb
push
mov
sbb
sub
negl
into
call
mov
bound
xchg
mov
mov
fisubl
mov
fwait
xor
add
add
inc
add
loopne
sahf
in
clc
data16
mov
stos
and
xchg
loope
dec
punpckhwd
sti
aad
sub
inc
mov
push
xchg
pop
mov
and
dec
cmp
loopne
shrb
repz
enter
out
cmp
paddq
cmp
loope
loopne
pop
cmpb
pushf
aam
ja
ficoms
dec
iret
in
loope
addb
ja
jl
sahf
fidivrl
fnstenvs
mov
push
aad
sub
xchg
ja
dec
pop
mov
mov
fildll
push
sti
nop
dec
mov
orl
and
or
les
out
mov
cltd
loope
aad
jno
lea
adc
mov
scas
xor
inc
dec
lret
mov
ret
popf
add
xchg
inc
stc
add
inc
ss
mov
cmpb
loope
jecxz
mov
push
enter
xchg
dec
scas
lea
lahf
jle
push
nop
fisttps
aaa
movsl
sbb
xor
cmp
ret
mov
xchg
sbb
test
insl
inc
push
dec
dec
lret
jnp
dec
mov
dec
cmp
faddl
lds
cmp
add
int
aaa
xchg
cmpb
adc
pushl
cmpsb
cmpsb
popf
repz
push
mov
in
insb
mov
push
inc
xor
mov
incl
add
cmp
push
mov
sbb
fldenv
mov
mov
ja
out
out
cmpsb
and
cwtl
pop
les
cmc
push
xor
xchg
cmp
out
cs
scas
clc
inc
js
sub
into
mov
push
lds
and
add
ss
stc
lahf
fadds
in
rcll
sbb
sub
lret
adc
fs
aam
xor
add
iret
push
jbe
lods
sub
mov
cmp
ljmp
sahf
mov
mov
notb
xlat
sarb
jmp
push
or
adc
addr16
mov
ss
inc
shr
sbb
and
data16
sub
mov
cmp
fisttpll
and
in
add
sub
fsts
lret
leave
das
sahf
sbb
xchg
cmp
mov
xor
clts
sub
or
mov
mov
aam
push
push
int
mov
xchg
ljmp
movsb
out
in
push
sub
adcl
stos
and
sbb
add
popf
ds
pop
mov
test
sub
lea
pop
mov
sbb
xchg
and
cmpsb
aas
inc
je
mulb
dec
jle
jecxz
adc
ffree
int3
pop
mov
push
sbb
jp
aad
mov
cmp
jp
mov
xchg
dec
mov
insb
inc
andl
inc
mov
repz
jl
mov
dec
shlb
imul
sub
add
jg
jno
add
lcall
cmp
sbb
and
es
outsl
jns
ffree
push
push
clc
push
inc
xchg
out
nop
cltd
xchg
in
pop
clc
adc
fwait
xor
and
or
jae
mov
jle
jnp
scas
scas
jnp
dec
pop
pop
mov
sbb
into
adc
fsubs
lea
imul
out
in
inc
in
movsl
jmp
lahf
das
sub
call
mov
std
cmpsb
push
mov
repz
sub
push
loopne
sbb
inc
cmpsb
enter
shl
jecxz
mov
pop
mov
mov
push
pop
icebp
sbb
out
cmova
aad
popa
shlb
in
push
or
mov
add
cltd
sub
js
cmp
add
and
cmp
mov
int3
aam
test
sub
jns
out
cwtl
iret
je
dec
mov
jne
data16
jo
dec
mov
int
jb
fs
jmp
lahf
mov
cmp
inc
out
or
loope
push
pop
pop
xchg
sbb
sbb
ljmp
leave
mov
sbb
and
add
out
mov
cmc
out
shll
sub
adc
push
xor
dec
lods
aam
dec
outsb
insl
data16
nop
sti
ret
sbb
icebp
xchg
shl
push
pushl
xlat
push
jle
mov
shrb
jl
push
sbb
div
fidivs
dec
adc
dec
push
dec
daa
pop
add
aam
mov
jecxz
int3
test
jnp
sbb
pop
inc
xchg
bound
pop
cmp
xor
movsl
outsl
stc
inc
jge
mul
dec
and
sub
je
or
xor
and
mov
in
or
xor
test
movsb
into
xchg
pop
mov
adc
int3
das
leave
add
pop
icebp
dec
adc
cli
std
cmc
daa
lcall
xlat
add
out
test
push
and
fidivrl
std
jae
push
sub
lods
sub
int
ficomps
sbb
sbb
call
imul
xchg
dec
daa
cmp
sub
scas
stos
mov
scas
ret
cmp
fimull
imul
cmp
scas
xor
and
pop
insb
ss
xchg
lods
or
adcb
sbb
push
sub
inc
cmp
outsb
aam
clc
and
cs
jmp
add
stc
cmpsb
xchg
push
jmp
mov
mov
test
add
inc
push
sbb
test
lea
nop
xchg
pop
popa
jecxz
sub
call
pop
jg
dec
iret
fwait
loopne
add
out
cmp
mov
in
fldt
sbbl
or
jno
int
push
out
push
pushf
aad
into
mov
and
jo
mov
je
sahf
fmul
sub
shlb
outsb
xor
mov
popa
orl
push
sub
push
cmp
mov
jl
out
out
xor
cmp
stc
inc
popa
shrb
cmp
jp
int
rcll
push
je
dec
pop
mov
loopne
dec
js
icebp
repz
leave
push
or
pop
xor
lds
ret
xlat
movsb
call
mov
or
loopne
jno
aaa
mov
mov
lods
jns
mov
divl
lock
sbb
test
cmp
rcll
xchg
mov
mov
push
jl
cs
jl
mov
mov
pop
int
mov
mov
imul
mov
icebp
xor
push
shll
int3
pushf
jecxz
cmp
inc
aad
sub
outsl
or
sub
testl
push
shlb
xchg
in
jne
mov
in
bnd
fimull
cmp
mov
outsb
ljmp
out
or
imul
inc
out
jbe
and
push
ret
mov
mov
and
mov
mov
cmpsl
nop
out
push
repz
and
add
mov
shll
aaa
push
loop
add
inc
xor
add
lret
ja
mov
cld
int3
push
inc
pop
and
sbb
lahf
inc
daa
mov
push
sub
stos
cmpsl
mov
mov
xchg
jl
push
jmp
rorl
into
mov
lret
sar
fstpl
sub
add
add
test
sbb
imul
dec
and
lock
mov
scas
aaa
popf
push
les
pop
xor
js
adc
das
scas
mov
mov
pusha
mov
mov
out
roll
dec
ljmp
and
je
inc
and
xor
aas
xor
stos
mov
cvtpi2ps
nop
inc
test
sbbb
push
or
adc
sbbl
xchg
in
adcl
sub
jmp
daa
lret
dec
es
sahf
sub
popa
scas
fsub
ret
lods
inc
jbe
sub
sbb
mov
xchg
push
cmpsb
push
push
and
lods
inc
int3
mov
insl
out
add
fwait
cmp
in
sahf
or
xchg
push
xor
and
movsl
dec
loopne
pop
mov
daa
xor
enter
imul
das
push
push
fistpll
push
mov
push
pop
xchg
mov
push
ljmp
add
xchg
movsb
imul
cli
iret
jo
inc
mov
jge
in
mov
dec
sub
mov
or
fimuls
mov
dec
sub
cmp
in
pop
outsb
fs
pop
pop
mov
jnp
aas
lret
mov
cmp
and
ret
pushf
sub
sub
dec
ja
xchg
popw
jp
adc
cmpsb
jnp
or
fdiv
test
lahf
in
mov
dec
lret
sbb
mov
test
subb
cmp
adc
scas
sub
inc
insb
popa
insb
mov
cmpb
jno
sub
aas
dec
call
rcr
lret
sub
popf
xchg
pop
testb
xchg
inc
arpl
lret
das
push
push
cmp
ret
popf
mov
push
sbb
int
xor
cltd
aad
dec
push
xchg
cmp
scas
fistps
xor
mov
jp
push
shll
sub
sub
call
in
inc
or
leave
loope
pop
fidivrl
stos
inc
movsb
in
ret
dec
mov
jne
add
into
outsb
sub
sbb
call
push
sub
rorl
aaa
inc
in
nop
pop
fsubrs
and
gs
in
cltd
push
mov
stos
aad
mov
ret
aaa
insl
sub
jns
xchg
pop
aad
pop
fneni(8087
test
push
add
sub
pushf
mov
jnp
test
nop
ss
data16
jno
fucomp
mov
pusha
lahf
aam
cld
subb
clc
icebp
jg
aas
mov
cmp
push
fsts
test
mov
loope,pt
xor
or
mov
ret
inc
clc
jno
mov
in
fcomp
mov
xchg
mull
or
and
lock
inc
and
dec
xchg
xchg
and
int3
sbbb
sub
xchg
add
pop
cmp
lahf
rclb
cmp
stos
ficoms
repnz
ret
mov
mov
mov
bound
pop
insl
xchg
test
ljmp
jmp
loopne
push
push
add
jecxz
adc
push
or
adc
mov
jle
mov
lahf
dec
cmc
mulb
fisubs
fdivrs
cmp
cmp
push
jle
cmpsb
xor
shll
jmp
repnz
mov
pop
loope
add
roll
xor
mov
or
ja
xchg
test
push
xor
cmc
adc
dec
aad
addr16
rol
fidivrs
imul
clc
popf
fcoml
std
cmp
push
scas
mov
es
and
add
das
rcrl
fmuls
cmc
fbld
jecxz
mov
pop
fwait
in
lea
add
xlat
mov
dec
mov
psubsw
push
dec
mov
es
rcrb
adc
fildll
add
mov
cmc
hlt
sbb
outsb
lds
jno
lods
lods
gs
into
mov
ror
ficoms
insl
adc
inc
loopne
pop
pop
push
bound
mov
sub
sub
enter
scas
in
push
test
jno
int
pop
lret
mov
faddp
iret
jno
enter
add
es
int3
cmpsl
sbb
cmp
adc
lcall
icebp
or
and
enter
mov
ss
mov
jae
fs
fucom
js
movntq
stc
xchg
jno
rcr
add
icebp
mov
lret
mov
mov
lods
mov
mov
fistl
lds
push
push
fcomip
mov
xor
push
cld
mov
fwait
and
xchg
xlat
lret
mov
stc
pop
inc
mov
ja
adc
push
pop
insb
jge
hlt
test
adc
adc
fcoml
std
xor
sbb
nop
in
fs
push
ret
aas
dec
xor
hlt
mov
ja
lret
das
push
adc
cld
push
pop
fucomi
mulb
jno
sbb
imul
xchg
inc
lcall
jmp
add
fcoms
xchg
xor
das
lret
lahf
sbb
test
dec
jns
mov
adc
aaa
mov
cmp
notl
pop
dec
je
faddl
outsl
icebp
adc
stc
fimuls
daa
ror
arpl
jbe
fstl
packuswb
lods
sub
call
push
rcll
and
addb
iret
ss
fmul
hlt
jnp
loopne
cmp
rep
mov
sub
inc
inc
popf
ds
incb
aaa
dec
pusha
pop
push
in
lds
lds
adc
pop
arpl
popa
movsb
cwtl
loopne
insl
push
sti
jle
roll
dec
xor
popf
push
rorb
push
popf
sbb
push
imul
sbb
dec
push
cmp
es
pushf
and
fnstenv
inc
into
or
xchg
sti
jle
jmp
jmp
scas
test
inc
jmp
pop
jp
mov
adc
adc
shlb
das
popf
jne
into
pop
xor
inc
dec
sbb
mov
shll
aaa
lds
int
popa
add
add
mov
in
fdivl
pusha
sbb
cld
mov
push
pop
ret
sub
mov
aam
enter
mov
insl
iret
daa
lahf
outsb
pop
bnd
and
mov
rcrl
bnd
add
add
popf
repnz
gs
add
jg
jecxz
in
push
or
out
inc
push
insb
out
pop
insb
jnp
iret
jl
adc
sub
jbe
jnp
mov
mov
jle
pop
out
in
int3
stos
shl
out
sahf
inc
fimuls
push
or
jge
xchg
loop
pop
pop
mov
fnsave
jnp
inc
mov
pop
inc
shlb
xor
add
enter
repz
pop
inc
xor
jno
pop
sub
add
scas
sub
and
mov
insl
pop
sbb
lea
inc
dec
adc
test
inc
sub
inc
push
pop
jecxz
sub
ds
lahf
sub
push
fcmovbe
sbb
fcoml
xchg
xchg
jge
jnp
adc
xor
add
out
popa
inc
scas
inc
inc
pop
add
je
xor
jnp
scas
jae
clc
add
add
lret
ja
rcll
imul
push
imul
xor
gs
pop
jne
negl
and
lock
xchg
aas
aam
xchg
jle
popa
push
data16
xchg
jg
lahf
mov
push
es
add
jmp
lcall
xchg
stc
into
mov
add
push
push
jnp
dec
fs
lods
dec
cli
sti
xchg
fs
inc
jg
clc
ss
in
sahf
push
mov
rcrb
iret
popa
data16
xlat
dec
or
xor
into
rclb
xor
pusha
push
in
lock
and
vcvtpd2dq
test
sub
mov
inc
popf
lds
pop
add
add
loopne
xor
xchg
cs
pop
cmp
sub
jl
sub
pop
jg
test
lahf
call
and
xchg
sub
adcb
jp
adc
xchg
adc
inc
jmp
pop
jg
add
mov
mov
imul
xchg
lods
inc
enter
pop
inc
and
or
fwait
push
xor
in
mov
push
inc
jecxz
adc
adcl
dec
arpl
outsb
popa
mov
inc
imul
xchg
pop
jl
adc
ss
arpl
nop
pop
flds
mov
xor
rcrb
pop
jp
fwait
sub
add
imul
fiaddl
out
dec
xor
fistl
sbb
sub
aad
jb
nop
mov
adc
out
push
adc
or
xor
adc
aam
or
rcl
ficompl
rcrb
xchg
adc
in
sahf
pop
sub
dec
cmc
jae
mov
mov
gs
pop
out
dec
mov
jg
jae
sti
jl
mov
inc
dec
mov
stos
stos
sbb
int
cmp
dec
mov
in
adc
data16
icebp
xchg
sbb
mov
or
add
pop
les
clc
inc
mov
mov
cmpsl
xchg
add
dec
cli
in
or
adc
jg
rolb
inc
mov
sbb
aas
mov
xchg
pop
gs
pop
lods
and
into
popf
xchg
cmpsb
dec
push
pusha
repnz
sbb
mov
add
int
jecxz
fwait
sbb
iret
inc
inc
inc
adc
stc
sub
into
lcall
xchg
mull
leave
dec
mov
fcom
sahf
adc
jle
hlt
pop
outsl
jbe
movsb
je
push
xchg
xchg
test
popf
jb
loope
xchg
xor
jno
insb
push
xchg
jb
sub
add
mov
or
push
out
pop
mov
push
cmpsb
outsb
or
and
test
pop
arpl
pusha
dec
inc
lds
pop
shll
sbb
or
gs
mov
movsb
adc
ds
adc
adc
xor
pmullw
mov
and
pop
xchg
cld
stos
xchg
inc
or
lret
popa
sbb
dec
add
xchg
xchg
les
lock
mov
fsub
pusha
shrb
add
lret
mov
xor
lods
call
or
pop
divps
lods
jne
imul
int
aas
js
scas
setge
inc
stos
sbb
ret
fs
push
xor
xchg
ja
out
lcall
std
xchg
pop
lcall
mov
adc
cltd
in
fdivs
fsts
das
adc
js
das
mov
pop
mov
jp
out
pop
sub
shrb
push
adc
xlat
ljmp
repz
sub
jmp
enter
hlt
inc
cwtl
stos
mov
cmpl
sbb
stos
push
sar
adc
in
or
mov
dec
ja
hlt
pop
cmp
xchg
pop
es
out
ja
xlat
je
repnz
icebp
mov
pop
arpl
xor
stc
jge
push
gs
les
xor
div
testl
insl
and
pop
lock
test
push
xchg
je
repnz
ja
or
inc
js
adc
aas
xor
into
sbb
xlat
add
decb
mov
lds
push
push
mov
aam
jp
fmul
fst
add
mov
fsubrs
cs
adc
jle
pop
les
loope
ret
cmpl
mov
xchg
sub
ja
daa
and
mov
cmp
cmp
loop
sbb
push
push
daa
pop
leave
data16
cs
shlb
push
mov
fnsave
pop
out
fildl
sub
repz
flds
dec
int3
imul
aam
pusha
roll
int
cmp
test
adc
mov
std
xchg
mov
cld
xor
in
push
leave
push
gs
mov
outsl
xor
sbb
cmpsl
inc
pop
push
sub
mov
out
ficomps
pop
out
xchg
in
fstps
jp
push
mov
testl
enter
mov
je
jg
std
repz
clc
push
fists
insb
push
dec
sbb
std
add
mov
rcrb
or
lcall
pop
andl
loopne
fdivrs
iret
imul
adc
ja
dec
mov
in
add
mov
dec
cs
stos
or
in
popa
push
scas
xchg
ret
out
aas
fistps
push
icebp
jl
push
pusha
imul
outsl
lret
push
add
and
inc
push
pop
adc
add
jmp
pushf
mov
adc
cmpsl
pop
icebp
aas
shrb
mov
mov
fmull
push
and
inc
rclb
jae
loope
sbb
jmp
loope
outsb
mov
or
pop
lea
iretw
scas
and
cli
ja
out
pop
in
mov
insb
pop
push
adc
pushl
add
push
imul
or
cmp
push
sub
stc
int3
mov
cmp
mov
pop
sbb
andl
push
loopne
and
push
pop
mov
xchg
and
xorps
xorl
sub
lods
stos
pop
push
fimull
mov
mov
test
mov
dec
jecxz
popa
add
rclb
sti
mov
lods
adc
xchg
xchg
adc
test
xor
cmp
aas
addr16
clc
add
mov
sarb
mov
pop
jbe
loope
jne
xor
jp
out
sub
hlt
pop
dec
andb
ss
lret
clc
xor
mov
scas
insb
or
ja
cmp
cmp
outsl
cmp
ss
nop
cmpl
das
cmp
out
push
insl
jbe
jmp
push
sbb
aas
adc
adc
mov
call
mov
js
push
stos
movsb
fdivs
das
mov
mov
cmpsl
repnz
out
sbb
jb
aam
pop
insb
loope
mov
cmpsb
or
lock
pop
sbb
sbb
mov
dec
movsb
push
pushf
shll
mov
loop
aam
cmp
pop
cs
mov
pop
stc
mov
cwtl
sbb
xchg
int
xchg
insl
shrl
lea
mov
lret
imul
pop
pop
mov
int3
rol
test
push
fcmovu
xchg
dec
scas
cmp
or
xchg
ljmp
push
fdivrs
sub
pop
cmp
push
inc
jnp
mov
testl
lock
mov
std
jo
insb
lds
inc
movl
lcall
push
mov
push
out
lret
pop
mov
repnz
pop
scas
fcoms
sub
push
add
sbb
in
sbb
xchg
inc
outsb
mov
icebp
jbe
or
rorb
fs
sbb
pop
stos
rclb
cwtl
jge
xor
daa
pop
push
jae
cmp
mov
clc
cli
xchg
xchg
mov
fbld
in
mov
cmp
inc
inc
jmp
or
fsubl
pop
cld
sub
stos
add
inc
int3
repnz
jo
sbbb
sarl
fmul
scas
movsl
popa
jle
es
imul
movsb
jmp
pop
dec
mov
outsb
sti
in
in
dec
push
aaa
sub
in
cld
xor
outsl
addr16
inc
movlps
idivb
sbb
cmp
xchg
popf
sbb
popf
fadds
pop
mov
enter
js
int3
mov
and
inc
sub
lcall
das
aad
xor
sub
inc
xlat
ss
dec
pop
or
out
ds
popa
push
inc
inc
dec
and
test
clc
mov
mov
loop
mov
lds
mov
out
nop
sti
push
sbb
jmp
cli
jl
nop
sub
jnp
fists
push
aad
add
scas
mov
or
dec
cltd
sub
test
xorb
dec
icebp
cmp
jl
cmp
cwtl
mov
mov
in
cmp
enter
and
mov
dec
daa
call
push
int3
mov
ss
fnstcw
movsl
jo
cmpsb
push
lods
mov
jle
sti
fwait
jnp
outsb
mov
aam
leave
cld
and
sub
sub
jbe
in
inc
adc
xchg
mov
and
fdivrl
sbb
sbb
fwait
pusha
add
jecxz
adc
cld
mov
adc
loope
push
stos
test
ds
das
push
ficoml
out
sbb
pop
jmp
data16
dec
mov
not
xchg
or
rcll
sahf
push
adc
aaa
mov
jecxz
jno
and
jns
pop
add
cmp
fisttpll
in
mov
xchg
imulb
testb
mov
mov
push
mov
sub
imul
inc
sbb
push
sbb
push
ljmp
mov
cmp
mov
inc
lock
jo
jle
xor
dec
and
pushf
outsb
mov
mov
push
or
fsubrl
mov
test
mov
push
out
or
or
ret
pop
repnz
cmp
add
add
stos
pop
xor
or
xor
leave
test
rcrb
sbb
ljmp
add
adc
xchg
jo
dec
push
ret
sbb
add
add
ret
push
in
dec
jbe
insl
pop
dec
mov
lret
dec
or
dec
push
std
cmp
mov
inc
dec
lret
fildl
sahf
mov
mov
fs
into
pop
movsb
add
xchg
insb
lret
inc
lahf
sbbl
dec
jge
lea
test
js
sub
xor
cmp
ficompl
pop
adc
jns
loop
mov
add
sbb
xchg
inc
inc
or
daa
push
insl
es
push
xchg
sub
ja
dec
bts
cmp
mov
mov
add
mov
push
insl
je
insb
fmull
clc
add
inc
inc
cmp
daa
and
jecxz
and
pop
lret
in
popf
dec
enter
mov
sub
jb
fcmovu
into
jl
arpl
mov
xchg
add
dec
xchg
jnp
nop
push
inc
cld
jae
sub
aas
jae
aam
loopne
std
sub
lock
scas
sbb
dec
add
inc
ret
inc
and
rorl
pop
sub
sub
xchg
pop
ret
push
add
inc
lret
adc
mov
insb
push
mov
cmp
xor
pop
cld
or
mov
and
outsb
mov
insl
sub
sbb
sbb
in
pop
in
call
adc
outsl
inc
clc
cmp
mov
out
cltd
pop
dec
mov
push
push
pop
push
xor
push
scas
popl
cmp
addr16
pop
jp
ret
add
sbb
test
sti
in
push
es
add
fucom
pusha
gs
push
mov
out
rcr
gs
mov
jmp
xchg
les
dec
lcall
dec
push
or
popl
shrl
sub
xchg
push
mov
repz
popf
addr16
dec
addr16
sbb
dec
mov
lds
inc
pop
mov
xchg
adcb
xchg
and
es
sub
loope
shlb
xchg
mov
sub
jmp
mov
ret
adc
pop
and
insb
add
iret
loop
call
sbb
gs
mov
int
popf
std
rcll
repz
lahf
loope
cld
xor
mov
flds
push
jns
repnz
xor
inc
push
shlb
adc
inc
xchg
mov
or
lods
jmp
fdivrl
into
push
sub
jle
dec
rclb
mov
pop
jle
cld
insl
push
roll
pop
or
mov
imul
jp
dec
xchg
movsb
fidivrs
mov
jb
sbb
stc
lret
shrl
sbb
and
into
cmp
and
pop
cmp
jmp
inc
ficoml
push
out
call
clc
add
pop
or
outsb
mov
inc
ljmp
enter
test
dec
mov
ficomps
inc
cmp
das
cmp
in
lods
or
sbb
gs
shrb
test
mov
movl
rcl
adc
fisubrl
cmpsb
sub
mov
subl
cmp
mov
cwtl
xor
dec
and
enter
cmc
pop
xchg
pop
mov
in
cmp
xor
out
data16
jg
outsb
popa
pusha
out
lret
mov
jae
ljmp
pop
sbb
addr16
mov
int
cmpb
mov
rolb
ret
push
out
mov
push
mov
outsb
mov
adc
cmpsl
cltd
mov
call
dec
inc
sbb
roll
jp
and
fnstenv
xchg
cmp
inc
cmc
dec
outsb
rclb
xchg
mov
outsb
fmul
mov
test
js
and
pop
lods
insl
fcmovnu
adc
nop
out
call
test
data16
push
jbe
push
shl
sahf
cltd
jp
sbb
cmpb
fisubs
pusha
xor
lods
mov
fldz
mov
mov
es
push
push
jbe
jno
push
mov
xchg
aas
lahf
mov
iret
jmp
inc
mov
bound
in
scas
outsb
testb
sti
inc
stos
pop
addr16
lds
sub
fimuls
test
mov
jg
push
mov
lret
les
sub
adc
int3
clc
into
mov
jns
insl
popf
fs
imul
test
dec
jo
dec
iret
pop
xchg
gs
jle
pushf
xchg
cmp
lret
mov
xor
sahf
mulb
lea
xlat
jae
daa
scas
xor
push
sti
jns
inc
push
jle
sub
cs
adc
inc
lds
fcmovnb
fbstp
cmc
cmp
mov
stos
ja
fidivs
movsl
push
mov
jge
ret
add
shrl
push
pusha
pusha
std
iret
in
mov
popa
sbb
mov
pusha
sub
adc
std
mov
loop
repnz
mov
movsb
sub
add
cmc
test
repnz
lret
ja
iret
stc
sub
lahf
fstl
test
inc
mov
mov
test
icebp
and
pop
push
adc
mov
cmp
inc
mov
xchg
call
xchg
fadds
pop
push
jno
xor
mov
stos
leave
xor
jmp
or
push
push
pop
cmp
ficoms
and
push
loope
push
fs
aad
int
data16
xchg
shrb
call
sbb
vpunpcklqdq
enter
call
ficomps
fistpll
lods
xor
shll
clc
lret
outsl
je
mov
add
sbb
dec
xchg
mov
sbb
nop
int
ljmp
push
fwait
imul
xchg
inc
pop
jge
or
mov
xor
mov
adc
test
adc
aad
pop
push
dec
jae
inc
icebp
mov
test
es
pop
stc
sub
pop
push
in
pop
xor
or
cwtl
jne
push
mov
sbb
addr16
dec
shlb
sbb
imul
mov
adc
arpl
popa
aaa
mov
pop
ret
push
inc
loope
jnp
pop
loope
test
sub
pop
sub
adc
cld
sbb
ret
push
dec
imul
sbb
xchg
dec
inc
mov
imul
jno
sbb
ja
mov
outsb
xchg
mov
into
pop
scas
sti
mov
inc
jae
in
or
loope
jno
jo
stos
inc
cli
push
rcll
stc
cmp
add
adc
xor
push
push
je
dec
test
sbb
mov
adc
movsl
inc
repz
inc
faddl
mov
push
call
sub
mov
and
or
sub
jb
cli
ss
sbb
adc
mov
push
and
mov
push
push
outsb
sub
pop
test
test
maskmovq
divl
cmp
roll
movsl
add
popf
in
pop
popa
and
add
ret
cmp
inc
cld
iret
das
outsb
dec
push
sbb
aaa
enter
cli
pop
cmc
mov
cmp
cmpsb
shlb
notb
std
dec
mov
pusha
inc
call
push
and
aaa
push
in
sub
mov
add
loope
mov
sub
sub
and
xchg
pop
mov
or
out
xchg
jmp
int
and
or
xchg
loopne
dec
shlb
orb
icebp
lret
iret
sarl
aad
mov
pop
push
sbbl
or
jae,pn
cmc
sub
push
das
pop
data16
push
pusha
add
adcb
xor
notb
jle
dec
mov
stos
fucomi
jecxz
loopne
pop
pop
xor
int3
jecxz
push
pop
xor
cmpsb
fimull
xchg
mov
lea
in
xchg
fimull
adc
in
mov
adc
cmpsb
add
pop
stc
sti
das
xchg
adc
gs
sbb
xor
pop
xchg
lds
in
cmp
nop
jg
ret
aam
outsl
stc
add
add
cld
dec
add
stos
jg
ja
pushf
movsb
scas
mov
ljmp
loope
sbb
mov
icebp
and
fs
out
loope
and
repnz
aam
pop
pop
popa
loope
adc
scas
mov
inc
inc
sbb
sub
in
jge
adc
out
push
in
mov
pop
xor
jb
ja
cmpsl
and
pop
jle
cmpsb
sbb
mov
fcompl
stos
push
fiaddl
lret
filds
sub
xchg
xchg
push
cwtl
pop
adc
and
mov
dec
jbe
enter
loop
lods
mov
jmp
pop
xchg
or
lret
scas
mov
out
push
jge
mov
fcomip
ss
jle,pt
je
add
mov
into
xchg
in
xor
xor
mov
gs
push
lret
dec
jae
ret
and
jno
divl
fs
call
xchg
mov
push
setp
add
sbb
es
jmp
das
add
scas
push
dec
fnstcw
or
shrl
jl
std
mov
ja
aas
test
sub
pop
lock
xchg
mov
in
mov
pop
test
or
out
pop
shl
inc
inc
mov
pop
mov
sub
stos
inc
aad
mov
sub
cmpsl
mov
or
faddl
lret
das
xchg
sbb
sub
push
out
lret
adc
adc
mov
cltd
das
fwait
adc
es
sahf
cmpl
mov
pop
stos
pop
aas
jmp
stc
outsb
pop
lahf
lock
mov
orl
and
cwtl
ja
dec
fistpll
stc
push
xchg
pop
mov
enter
arpl
jge
in
test
rorl
pop
out
mov
cli
xchg
lahf
fstps
xchg
push
or
push
rorb
pop
jle
lea
frstor
addb
daa
pop
out
in
fucomi
iret
cmpsb
mov
jl
mov
adc
loop
stc
or
scas
dec
xlat
test
mov
xchg
pushf
aad
xchg
rcrb
cmp
add
mov
outsl
push
rolb
adc
sub
sbb
ja
mov
andb
or
jmp
hlt
pop
fsubrs
out
pop
mov
cli
negb
cmp
dec
jp,pt
push
insl
dec
and
pop
mov
icebp
lcall
jbe
cmp
insb
outsl
sub
fs
xor
mov
sbb
push
clc
pop
xchg
jnp
lea
into
push
push
mov
xchg
mov
sbb
pop
cmp
fsub
cld
aas
iret
fstpt
rcrb
shlb
mov
lret
mov
cmpl
stos
sbb
repnz
cmp
imul
fcom
adc
xor
push
call
out
sbb
cmpl
dec
ljmp
xor
cld
cmp
outsb
shrl
jb
testb
dec
loope
icebp
ret
jle
pop
out
dec
push
ficoml
mov
pop
js
dec
data16
add
xor
or
xor
fwait
push
fsub
xchg
push
ret
xchg
sahf
jg
or
divb
sub
int3
mov
xor
outsb
add
push
mov
mov
push
insl
arpl
xchg
outsl
mov
imul
mov
lods
out
icebp
inc
push
xchg
push
ljmp
inc
jg
pop
pop
stos
jl
pop
mov
fidivs
sub
fxam
jge
mov
jne
sub
mov
dec
mov
mov
dec
cmpb
loope
and
lods
lret
dec
lahf
sbb
jb
push
dec
in
enter
or
push
sub
insl
inc
notb
ret
int
aas
xchg
cmc
jl
sub
test
movsb
outsb
xchg
mov
jle
sub
cld
movsb
int3
and
sub
jecxz
xlat
arpl
and
decb
inc
sub
adc
pop
fbld
jmp
cmc
mov
cmp
cli
popa
scas
add
adc
add
sti
jae
pusha
call
imull
or
pop
lcall
or
mov
mov
shr
xchg
push
cli
out
mov
ret
in
insl
pop
test
rcll
dec
xchg
test
cwtl
push
mov
imul
sub
in
jg
fcoms
sarb
popf
push
jno
ja
fbld
lds
add
mov
mov
mov
rcll
fs
scas
inc
mov
mov
pop
push
int3
mov
jle
add
adc
or
je
data16
pop
mov
cmp
adc
orb
adc
and
outsb
xchg
lds
pop
ucomiss
mov
dec
xchg
inc
stos
lahf
xlat
sub
jo
iret
test
mov
insb
pop
xchg
nop
mov
gs
lret
into
data16
clc
cmp
sub
pop
and
bound
popl
test
push
jae
mov
mov
xchg
mov
xchg
cmp
jp
aad
jl
popf
addb
pushf
dec
pop
stos
or
pushf
aam
sub
jne
lds
jecxz
mov
ret
faddl
das
lods
out
mov
jnp
jge
push
lret
lret
mov
add
stos
sahf
into
xchg
mov
xor
mov
aaa
push
cld
enter
push
stos
orb
loop
or
pop
cmp
xchg
stos
stc
sub
mov
gs
rcl
jge
push
add
xor
stos
cltd
dec
std
sbb
add
rcrl
ror
sub
mov
inc
in
fadd
ret
lahf
lods
std
sub
jp
xor
and
rorl
icebp
add
fwait
push
in
shll
and
lahf
cli
dec
and
inc
ret
pop
add
xor
cmc
pop
pop
push
jo
adc
int
jno
insl
sbbl
sub
je,pt
fsubrl
outsb
jno
push
pop
sub
adc
loope
out
adc
gs
mov
adc
sub
hlt
add
mov
inc
jne
in
sbb
mov
adc
and
cmpsl
xor
and
add
xor
mov
push
and
lcall
sbb
cmp
jecxz
adc
cmp
sub
xor
repz
shrl
pop
pusha
lcall
mov
data16
imul
mov
cmpsl
jmp
jne
in
and
sahf
mov
iret
or
cli
jbe
fs
or
mov
pop
xchg
jbe
sbb
dec
xchg
in
xchg
inc
jmp
mov
test
sahf
or
xchg
js
jp
pop
adcb
push
scas
jbe
push
jmp
push
mov
lea
xchg
std
cmp
sub
sbb
stos
xor
cld
test
push
testb
call
fwait
mov
iret
dec
add
leave
mov
add
sbb
gs
mov
popf
js
jp
mov
dec
adc
outsb
add
cmpl
add
out
xor
adc
ret
xchg
je
push
adc
xchg
push
or
sub
jmp
mov
addb
or
cltd
adcb
stos
jo
mov
mov
iret
mov
push
mov
dec
xchg
jle
loope
jae
pop
jne
nop
pop
cmc
add
aad
cmpsl
aaa
stc
mov
jno
or
dec
xchg
pop
pop
cltd
test
icebp
adc
push
inc
xorl
cmc
sbb
movntps
xlat
jb
adc
pop
or
xchg
stos
dec
jle
sub
leave
sub
aad
jne
push
and
lods
add
xchg
shll
lret
scas
dec
xchg
xchg
push
es
adc
scas
ja
inc
out
mov
aad
jl
mov
and
jp
sarl
cmp
mov
mov
jl
mov
fmuls
mov
xor
xor
jnp
xor
jno
dec
mov
push
push
jo
mov
out
jle
dec
imul
mov
inc
out
push
sub
sbb
repz
aas
lahf
jmp
ljmp
popf
pop
add
push
movsl
xor
das
cmp
and
dec
mov
lods
ss
rorb
lds
cmpsb
sub
lods
outsb
or
mov
adc
pop
push
fwait
jl
inc
cmp
pop
ds
popf
filds
daa
fistps
push
xchg
pushf
pop
xchg
shrl
xchg
mov
movsb
call
inc
out
clc
inc
dec
push
ret
mov
outsl
dec
jns
inc
adc
stos
fidivs
mov
inc
fsubrl
mov
add
out
shr
cmp
sti
mov
sti
inc
lcall
cmp
loop
jmp
mov
fildll
mov
xor
mov
pop
push
push
lods
add
mov
push
rolb
mov
and
lret
je
and
loope
cmp
push
ficompl
aam
fistpl
xrelease
test
dec
iret
pop
dec
cwtl
mov
das
movsb
inc
jmp
mov
ret
rorb
aaa
dec
push
sti
jmp
aam
fnstcw
inc
or
inc
jo
stos
and
push
mov
xchg
mov
cltd
ret
xchg
insb
mov
loopne
dec
pop
xlat
repnz
jbe
add
pop
daa
std
push
lods
xor
out
and
out
sub
cmpsl
mov
jb
jne
cmp
inc
pop
imul
xor
test
push
jl
mov
xor
adc
xchg
scas
inc
lahf
bnd
int3
or
inc
lea
inc
call
mov
add
inc
call
ss
ljmp
icebp
ja
mov
push
pop
orb
mov
cmp
into
fst
dec
icebp
pop
push
adc
aam
push
sarl
mov
iret
mov
loop
aam
xlat
adc
icebp
xor
lods
adcb
cmp
and
fsubs
mov
xor
fwait
inc
mov
loopne
ljmp
out
mov
shlb
stos
shr
jns
mov
mov
in
fldt
push
int3
push
leave
push
pop
or
rorb
xor
mov
or
xchg
iret
stos
std
lods
inc
mov
xor
xor
ret
jno
inc
mov
xchg
sbb
push
dec
jle
pop
mov
in
cmp
sub
loopne
mov
in
rcr
mov
mov
cltd
or
mov
adc
push
jl
inc
mov
into
loope
jp
pop
inc
add
sub
inc
mov
add
or
mov
sbb
cmc
mov
test
jg
mov
fsub
jns
mov
mov
jge
int3
jns
xor
je
jmp
sti
xorb
call
pop
adc
push
jns
aam
cmp
or
cmpsl
popa
jle
lcall
xor
sbb
jbe
idivb
sbbb
es
dec
cmp
fdivp
lea
add
adc
sbb
push
enter
sahf
cld
lcall
inc
add
subl
rcr
adc
xchg
pop
inc
testl
sub
aad
ret
adc
outsl
jp
mov
sbb
imul
aad
cli
leave
in
test
repz
pop
xchg
inc
aam
lods
cmpsl
or
fisttps
jp
icebp
out
imul
idiv
movb
sbbb
jg
mov
enter
cmp
scas
scas
shlb
sub
inc
lret
inc
js
ds
pop
mov
mov
int
mov
mov
mov
repz
and
daa
mov
xchg
scas
loope
shrb
and
mov
rclb
rcrl
ret
in
mov
adc
fisttps
pop
out
adc
sbb
insl
pop
in
loop
mov
clc
fs
loop
pshufw
jmp
leave
pushf
fldenv
xor
sub
cs
scas
cwtl
arpl
loop
aam
scas
jmp
push
mov
sub
leave
xchg
jno
lcall
inc
mov
pop
inc
push
pop
xor
lahf
pusha
push
and
das
inc
and
outsb
mov
nop
jle
pop
sbb
jnp
sbb
shll
das
push
xor
dec
and
adc
adc
cmpsb
adc
rorl
out
rcrl
inc
dec
mov
xor
and
adc
xorb
idivl
in
and
xchg
push
cmp
pop
adc
mov
dec
inc
mov
push
lret
sbb
das
cs
xchg
outsb
sbb
cmp
dec
mov
std
add
into
inc
sub
stos
cmp
xor
enter
rcrb
imul
or
push
ja
lods
cmp
inc
adc
or
push
out
idivl
mov
sub
iret
or
hlt
fistpll
push
cmp
mov
xor
add
fdivrp
xchg
pop
lods
clc
sub
sbb
icebp
in
jnp
mov
loopne
test
jno
aas
stc
enter
push
js
dec
add
pop
mov
scas
call
jmp
pop
iret
xor
mov
inc
leave
imul
xchg
inc
xchg
mov
aad
pop
loop
push
icebp
sub
lea
test
loopne
sbb
cmp
sub
ss
insl
or
cmp
stos
or
adc
mov
cli
int
push
jbe
cmpsl
mov
inc
xchg
sbb
push
lock
aaa
pop
sub
cmp
xchg
rorb
cmpb
pop
sub
pop
fs
inc
mov
test
mov
movsl
sub
mov
add
mov
sbb
call
or
leave
sub
shrb
into
das
mov
addb
in
push
out
mov
insb
sarb
mov
pop
pop
scas
dec
pusha
ror
je
dec
mov
scas
call
add
mov
jg
or
int3
iret
movhps
cmpsl
push
cmc
dec
imul
rcrl
inc
lahf
push
popa
mov
xlat
rclb
int
jge
lods
mov
push
mov
pop
pusha
push
decb
sub
loope
xor
push
mov
jbe
aam
call
lahf
mov
fldt
rorb
pusha
add
int3
xlat
sub
fldcw
sub
sub
cwtl
fists
cli
test
or
sbbb
mov
mov
xchg
push
ret
es
inc
movsl
test
add
repnz
flds
daa
leave
xchg
push
jl
test
mov
xchg
mov
jl
mov
push
ss
inc
addr16
frstor
sbb
push
cmpsl
add
cmp
cmp
pop
dec
repnz
imul
outsl
dec
mov
ret
pop
ja
jmp
hlt
pop
enter
ds
test
ror
icebp
jmp
jecxz
pop
sahf
int3
or
pop
bound
cmpl
addr16
shll
sbb
dec
dec
mov
mov
xchg
jecxz
adc
xchg
and
jnp
cmp
daa
and
and
popa
out
mov
mov
out
lahf
rolb
dec
xlat
sub
sub
scas
out
rol
inc
test
fs
fildl
jmp
ret
inc
idivb
mov
lea
pop
mov
add
jp
mov
and
dec
faddp
int
mov
xchg
out
insl
stos
outsb
or
in
adc
test
sahf
aad
pop
icebp
dec
cwtl
addr16
pop
dec
pop
mul
aaa
ja
jno
jnp
sbb
sbb
fnstcw
inc
mov
sub
int
xchg
leave
enter
push
mov
jno
mov
jbe
hlt
pop
popa
shll
or
pop
ds
stos
in
lret
shrl
push
pop
ret
or
ljmp
lods
and
adcl
pop
inc
xchg
movsb
ret
ds
clc
daa
fistps
and
cmp
hlt
mov
adcl
mov
xchg
xor
in
add
dec
fiaddl
pop
mov
test
lods
or
xor
mov
out
and
adc
into
lea
mov
dec
out
data16
mov
loopne
movsb
pop
sbb
jg
fsubrs
jg
xchg
adc
fildl
iret
pop
pop
pop
ja
inc
hlt
fidivl
or
out
pop
mov
aad
rolb
pop
mov
pop
jnp
outsb
jae
test
subl
mov
and
jo
sbb
and
jbe
ds
mov
push
inc
sub
adc
out
sub
dec
cmp
das
mov
fadds
out
clc
mov
lret
icebp
mov
mov
cmpsb
jp
loope
adc
imull
xchg
push
stos
lret
nop
fnstsw
fdivrs
lahf
in
shrb
ret
mov
das
fisubrs
mov
inc
rcrb
sti
jo
fcomps
insb
jle
jg
xchg
fadd
pop
stc
push
shlb
sub
xlat
andps
xor
cmp
test
loop
cmpsb
pop
cmp
mov
push
int
mov
fisubl
test
xchg
jnp
and
xchg
mov
push
pop
fisttps
mov
lret
push
pop
jno
jb
mov
inc
adc
div
fcoml
sbb
into
add
enter
sub
add
in
jno
ja
or
mov
aaa
sub
fwait
add
cs
inc
addr16
inc
jecxz
std
lret
pop
adc
insb
sub
shl
sbb
ds
push
loopne
subb
sbbl
add
pop
clc
movsl
mov
sbb
mov
push
xor
jbe
je
mov
xchg
test
or
sbb
push
sarl
xchg
sub
les
int3
cld
lods
mov
push
ljmp
ss
adc
xchg
js
fstps
stos
inc
push
xor
mov
inc
loop
adc
xchg
les
imul
pop
mov
pop
or
sub
jmp
xor
or
xor
push
shr
lcall
pop
int3
ja
scas
jo
fcompl
loope
mov
cmp
or
cmp
scas
notb
ja
rorb
sub
das
dec
cmp
lret
shl
in
ficomps
bound
inc
pop
and
xchg
js
mov
jnp
mov
sarb
stc
inc
jae
cmp
jp
mov
jns
out
adc
mov
push
cmp
lea
out
shrb
in
add
sub
jne
dec
mov
stos
lds
fldl
into
orl
mov
xchg
pop
popf
out
mov
pop
cwtl
mov
in
and
mov
vmovd
and
js
cmp
das
scas
repz
imul
stc
push
nop
push
shlb
sti
aam
dec
xchg
insl
push
mov
jmp
pop
fmuls
cmp
dec
das
mov
and
sbb
cs
add
mov
xchg
pop
pop
mov
and
mov
mov
xchg
sbb
movsb
or
cmp
mov
fmull
xor
ljmp
repnz
mov
aam
pusha
xchg
sbb
std
jne
mov
xchg
loopne
push
dec
xor
mov
int3
mov
xchg
cmp
mov
mov
add
mov
xchg
in
mov
jmp
push
jge
push
fdivr
xor
pop
sbb
aaa
out
fsubrs
cmp
sub
push
inc
and
cmp
sub
popf
clc
fnsave
cmp
inc
aaa
jo
sbb
jno
jbe
jne
into
sahf
ja
xor
jle
mov
push
stc
repz
push
ret
mov
dec
and
stos
popa
xchg
jne
cli
inc
insl
xor
loope
pop
mov
sub
add
pop
sbb
loope
adc
mov
js
loope
bound
inc
inc
adc
inc
mov
outsb
mov
and
fstpt
mov
sti
jge
mov
cmp
xor
mov
in
out
div
je,pn
jge
gs
mov
inc
mov
enter
repnz
ficompl
mov
mov
inc
les
movsb
mov
jg
push
add
int3
negb
aas
mov
fisttpll
cmpsl
pop
mul
lahf
imull
jge
ret
inc
cmp
jl
hlt
ficoms
jge
pop
sub
pusha
pop
pop
adc
int3
sbb
adc
outsl
loope
xchg
fstpt
fildl
test
dec
dec
clc
aas
mov
xor
pushf
and
cs
andb
jg
mov
movb
add
xor
or
insl
adc
pop
and
ret
mov
push
ljmp
push
jecxz
lds
les
sub
scas
rorl
pop
xor
jnp
ds
ret
repz
pop
repnz
mov
imul
test
push
mov
dec
cmp
daa
das
adc
jnp
ja
aas
sbb
iret
pop
push
rcrb
jmp
fnstsw
push
ljmp
jecxz
lods
xchg
push
cmp
pop
cmp
bound
jl
into
imul
add
xchg
fdiv
jmp
xor
mov
leave
stos
sti
pop
mov
das
dec
scas
js
sub
lret
test
jbe
mov
or
pop
nop
xor
sbb
sub
mov
jle
lar
imul
jnp
fisttpll
cmp
push
ret
adc
inc
fcompl
outsl
push
pop
mov
mov
out
xor
cmc
add
subl
aad
xchg
or
sub
loopne
pop
ficompl
js
lock
cmp
pop
js
xchg
hlt
xor
mov
xor
jge
push
int
bound
pop
imul
push
sbb
or
sbb
outsl
xlat
pop
movsb
cmp
cld
ret
jp
stc
sar
stos
lea
cltd
fdivs
push
adc
pop
adc
or
cmc
jge
lds
pusha
push
sbb
push
xor
xor
sti
mov
jmp
or
popf
dec
stos
les
jge
pushf
in
loope
out
mov
sub
das
xor
push
popf
push
ja
jno
insl
inc
loopne
ljmp
clc
lods
bound
jmp
sarb
sahf
push
or
mov
jbe
aam
dec
xchg
aam
cmp
mov
adc
outsl
jl
jo
test
hlt
cwtl
or
in
fwait
lret
push
mov
mov
movsb
lret
fldl2e
aas
push
in
inc
idivb
adc
cmp
pop
gs
xchg
xor
test
add
add
xchg
aad
xor
dec
jle
sti
dec
call
into
orl
jmp
push
adc
sub
mov
iret
xor
shl
movsl
jno
push
dec
push
xchg
mov
cmp
xchg
sbbb
mov
aaa
lds
bound
decb
and
fisttps
push
mov
arpl
cli
mov
or
add
mov
scas
cmpl
gs
pop
mov
js
inc
aas
push
in
cmp
stos
add
mov
jge
mov
testl
shll
test
sahf
sub
stc
rcl
fdivs
dec
lret
inc
xchg
aas
test
std
push
jge
ljmp
inc
test
out
idiv
jl
push
and
cmp
scas
cwtl
cmp
gs
scas
arpl
xchg
cmp
aaa
mov
pop
adc
aad
mov
jl
add
mov
in
pop
mov
inc
enter
mov
loope
int3
mov
mov
outsl
push
addl
mov
sub
hlt
or
pop
lcall
add
scas
xchg
xor
fnstsw
or
push
filds
pop
dec
test
push
jle
lds
and
cmp
mov
shll
pop
cli
mov
dec
or
iret
fwait
and
je
pop
mov
jo
int
fisubrs
and
dec
pop
mov
adc
stos
sti
pop
push
lods
cmp
stos
sub
outsl
sbb
mov
or
xor
push
js
jle
fmuls
adc
push
stc
divl
scas
pop
xlat
mov
and
ds
xor
inc
out
test
push
dec
jno
nop
push
ror
and
and
jle
mov
cli
fs
sbbl
mov
enter
shll
je
popa
cmp
int
push
repz
sarl
add
inc
jne
pop
inc
sub
sbb
stos
mov
cs
xchg
fimuls
jl
mov
sahf
cli
pop
mov
push
es
cmp
in
aas
sub
es
adc
cmpsb
shlb
mov
sbb
add
inc
cltd
jl
add
or
jno
nop
push
push
and
jmp
ficoms
in
roll
xor
jl
cmp
scas
jno
test
mov
pop
xor
int
out
sti
cmp
jno
and
inc
mov
aaa
dec
mov
iret
cmp
fldl
outsl
pop
jp
out
dec
xchg
inc
add
cwtl
fisttps
xchg
jg
fldt
or
xchg
xchg
push
inc
mov
repnz
add
inc
rcrb
adc
sarb
sub
cmpsl
cltd
cmp
movsb
add
xchg
or
arpl
mov
les
push
jle,pt
jp
or
ret
jecxz
xchg
adcb
std
xor
or
push
mov
cmp
mov
ss
mov
fnstsw
xor
and
xor
xchg
xchg
in
notl
leave
pop
and
jmp
mov
ret
xchg
mov
shlb
push
fildll
popa
and
repnz
into
or
out
sbb
roll
mov
dec
fsts
cmc
in
xor
mov
jmp
mov
shl
add
push
cmp
aam
add
fisubrl
xchg
loopne
mov
loopne
cmc
in
out
sbb
pop
push
jge
add
lods
or
mov
dec
stos
jne
filds
xchg
jge
out
or
subl
mov
or
push
ret
sarl
mov
and
aaa
mov
scas
ror
movsb
out
movsb
orb
add
in
adcl
mov
add
pop
icebp
sbb
xchg
cmpsl
flds
or
fisubs
xchg
cmp
jmp
mov
gs
sarl
push
sub
fnsave
and
ret
push
fwait
and
repnz
mov
push
loopne
sti
xor
arpl
das
and
stos
push
jecxz
push
or
push
enter
xor
lret
repz
out
lods
cmpsl
jp
adc
pusha
daa
cld
aam
push
sbb
outsb
in
inc
cmp
addr16
scas
push
sub
sub
sarl
cli
mov
inc
sub
int
xor
mov
int
scas
ror
inc
push
call
in
mov
push
inc
in
or
sbb
movsb
inc
jp
out
xchg
out
lar
loop
subl
xchg
nop
mov
enter
out
icebp
out
mov
pop
pusha
shrb
inc
test
adcb
add
repz
jmp
fsts
int3
aas
out
mov
mov
call
lock
dec
enter
in
mov
sbb
mov
inc
inc
push
pop
xor
repnz
mov
ljmp
inc
das
xor
push
fdivrs
mov
dec
mov
and
pop
cmp
std
lahf
mov
pop
push
cs
or
xor
xor
sbb
adc
fwait
jnp
or
cmp
mov
adc
aaa
add
inc
mov
xlat
shlb
inc
jae
cmp
fcomp
mov
lods
jae
movsb
mov
dec
mov
loop
pop
add
pop
ds
das
int
lock
rorb
cltd
insb
mov
cs
xor
push
pop
cmp
jl
xchg
sbb
insl
inc
daa
popa
pop
leave
or
cmpsb
repz
movsl
bnd
ret
xchg
out
sub
jmp
mov
xchg
and
sub
ret
xchg
xchg
sbb
mov
outsb
fs
loope
pop
mov
mov
out
int3
adc
aam
out
xor
test
xor
das
aam
int
movsb
sbb
mov
testl
popf
fnsave
pusha
push
inc
sub
rcll
push
ss
imul
icebp
jbe
dec
ret
in
in
testb
pushf
or
pextrw
inc
hlt
push
push
bnd
arpl
push
mov
lds
xchg
jge
push
jbe
inc
mov
clc
mov
je
ljmp
ljmp
push
or
mov
fsubrs
sbb
push
gs
cmc
push
mov
add
popf
fdivs
and
pop
repnz
popf
push
xor
xchg
mov
sahf
jp
push
dec
push
and
sub
cmp
cmp
add
jnp
xor
sbb
dec
push
push
cmp
xchg
xlat
xchg
es
xor
sbb
pop
je
out
and
cmpsb
stc
lret
fnsave
add
out
jl
mov
pop
sub
push
mov
repnz
inc
jne
pop
daa
add
cld
lea
jecxz
into
in
or
or
repz
cmpb
mov
inc
pop
xor
dec
dec
in
cmc
sbb
mov
pusha
aam
sub
and
dec
and
aas
xorl
bound
pop
in
data16
out
sub
ret
out
test
xor
mov
lret
mov
outsb
xlat
sbb
cld
adc
sub
fstpt
dec
leave
mov
mov
push
jle
push
mov
sarl
shrl
xor
jge
xchg
ds
push
mov
mov
mov
repnz
add
nop
outsl
xchg
xchg
mov
sbb
and
sub
add
dec
dec
adc
xchg
arpl
xlat
rcrb
dec
xor
push
ljmp
add
adc
lret
dec
inc
inc
xor
mull
rolb
popf
in
ret
inc
test
lret
push
fdivl
inc
lods
dec
lcall
mov
jns
aad
mov
pop
push
xlat
xor
push
arpl
fwait
sbb
sbb
cmpsb
xchg
inc
das
or
pop
insl
or
popf
mov
dec
ja
sbb
es
lret
outsl
pop
mov
ss
mov
mov
pop
scas
jb
dec
mov
arpl
jae
into
test
mov
cwtl
jbe
jecxz
adc
cmp
xchg
add
inc
add
add
pop
sarl
adcl
jns
xor
jle
fisttpl
test
jge
aam
pop
stos
cmp
inc
or
icebp
or
xchg
lds
flds
ds
pop
sti
fldl2t
adc
outsb
cwtl
je
imul
dec
mov
adc
gs
stos
ljmp
push
lods
mov
daa
test
push
lahf
mov
mov
subb
js
pop
daa
sbb
cli
and
push
inc
mov
inc
roll
xchg
jo
pushf
push
mulb
add
fldl
lahf
xor
lods
pop
call
mov
cmp
daa
stos
pusha
in
ja
dec
cltd
lock
ss
ljmp
mov
popa
push
or
and
mov
bound
sbb
js
cld
mov
jne
mov
and
insb
div
notb
jb
orl
jno
je
xor
push
xchg
jp
jb
cmc
or
push
cld
stos
xchg
mov
cltd
jae
cmp
call
fadds
in
sar
dec
mov
leave
push
add
and
jge
ret
lahf
stos
ret
xlat
js
shlb
mov
or
jge
add
and
fwait
mov
mov
or
dec
inc
cmp
cmpsl
data16
data16
cmpl
mov
xor
aad
add
rclb
fcmovnu
scas
insl
mov
movsb
je
xchg
rol
aaa
loopne
or
shrb
fs
fildll
movsl
xlat
stos
mov
xor
jno
mov
je
fildl
mov
rorb
push
pop
mov
aaa
rcll
and
mov
inc
sbb
push
mov
dec
inc
in
mov
pop
mov
shrl
out
xor
add
in
lods
dec
mov
mov
add
cli
jmp
in
push
adc
pop
sarb
mov
data16
popa
adc
sub
jae
add
or
ja
scas
scas
ljmp
movd
sbb
jg
icebp
push
lods
aas
add
pop
mov
pop
das
jmp
sub
sub
mov
into
cmp
out
and
add
fnsave
aas
nop
mov
and
fstpt
cs
push
sub
mov
push
adc
scas
insl
outsl
loopne
jbe
pop
icebp
fdivs
push
rcl
and
dec
pop
adc
xor
cwtl
ret
sub
xchg
movsb
sub
adc
jl
mov
fsubrl
xor
outsl
inc
cmp
fldl
push
xchg
add
ds
daa
fldl
pop
jb
or
fmull
pop
cmc
or
mov
pusha
ficompl
sub
es
shlb
xor
push
test
mov
repz
dec
lcall
jmp
or
sub
sarb
in
sbb
sbb
outsb
clc
loopne
test
insb
test
adc
cmp
jle
sbb
dec
fidivl
out
fldl
push
xchg
sbb
xor
aad
push
loope
negl
mov
mov
cwtl
mov
xchg
pop
xor
cltd
jbe
sarb
mov
leave
dec
dec
or
pop
stos
adc
xor
out
sbb
push
xlat
jl
stos
call
imul
es
test
int3
inc
jle
mov
sbb
ss
dec
std
lods
pushf
inc
in
mov
out
imul
rcrb
int
cmpsb
jle
enter
mov
fcoml
pop
mov
add
dec
jns
hlt
jecxz
mov
pop
or
xor
mov
call
push
enter
push
repz
cli
dec
mov
push
and
fs
pop
aad
pop
push
and
test
repnz
outsl
adc
adc
ret
jmp
imul
cltd
mov
iret
sub
mov
int
fnstcw
jle
sbb
fs
fisubrl
ljmp
shlb
test
or
cwtl
mov
out
xlat
int3
lahf
jns
push
xor
xchg
js
mov
xor
es
addl
out
movsl
cmpsb
pop
mov
mov
xchg
xor
inc
push
mov
xchg
cmp
jns
test
lahf
mov
add
jmp
ret
push
push
adc
push
ljmp
mov
dec
mov
rolb
loope
fldcw
daa
cld
jp
sbb
cmc
pop
sbb
rolb
les
iret
fists
mov
xor
out
fildll
cmp
fsubrl
xchg
fistl
je
ss
mov
clc
dec
imul
outsl
in
mov
shrl
inc
or
mov
mov
pop
pop
into
push
or
add
mov
cmc
mov
test
cli
in
add
jmp
mov
mov
das
lret
repz
push
xchg
dec
add
or
xor
imul
arpl
lods
loop
adc
push
cmc
mov
jp
mov
stc
cmp
movsl
or
in
pop
xor
adc
cmpsl
xchg
jmp
rcll
pop
add
lret
push
dec
mov
movsb
fs
imul
pusha
sbb
js
in
mul
sahf
push
add
pop
inc
inc
jg
cmpsl
push
inc
movsl
push
push
add
inc
xchg
jmp
cwtl
rcrb
shl
cmp
in
xchg
cs
dec
hlt
sti
out
sarl
out
test
inc
jge
ret
pop
mov
mov
aad
mov
orl
pop
adc
icebp
outsl
mov
sub
dec
jecxz
ret
and
cmp
push
leave
ret
in
push
pop
xor
loopne
dec
xor
jnp
inc
mov
repnz
cwtl
or
mov
ljmp
xchg
add
pop
gs
lods
int3
nop
jp
cwtl
fiaddl
mov
jge
stc
pop
and
xor
jle
push
out
cltd
xor
mov
add
ljmp
rclb
aas
adc
out
imul
jmp
jl
xor
mov
and
jmp
iret
dec
stos
ret
mov
adc
je
cld
addr16
inc
xor
pushw
lods
loope
pop
jl
flds
dec
mov
jbe
mov
pop
cli
push
lds
cmp
inc
add
and
fbld
cmpsl
out
or
pop
pushf
xlat
mov
adc
decb
cmp
push
sub
iret
jae
mov
stos
daa
dec
imul
cmp
adc
in
repnz
jp
fwait
mov
xor
push
in
out
mov
mov
pop
leave
outsb
xor
push
push
stc
mov
fsts
sarb
xchg
sti
push
std
dec
inc
lods
pop
gs
decl
into
xchg
mov
xchg
adc
sbb
adc
adc
xchg
data16
mov
mov
push
xor
pushw
pop
aaa
lock
cli
push
mov
push
mov
mov
and
pop
add
push
sbb
push
xlat
int
faddl
mov
xor
jae
in
push
jmp
out
cmp
sahf
jnp
das
ja
lods
dec
sub
fiadds
into
dec
xchg
push
mov
xor
pop
fsts
push
outsl
fisttpl
sub
cli
jp
xorb
pop
fidivrl
add
test
inc
pop
test
je
mov
xor
pushf
stos
pop
negl
xchg
push
sahf
or
cmp
push
pop
mov
dec
orb
pop
cmp
push
repnz
jne
in
jg
cmp
push
sub
mov
jae
dec
adc
mov
xchg
or
jnp
inc
push
push
data16
xchg
mov
jns
adc
js
and
sbb
sbb
lds
js
xchg
imul
pushf
cmp
pushf
fs
xor
int
nop
bound
sbb
inc
neg
stos
lea
lahf
pusha
mov
xor
inc
call
stos
test
movsl
sbb
xchg
add
std
rcr
insl
push
sbb
idivl
jl
or
jbe
sub
adc
xor
imul
enter
xchg
addr16
adc
repnz
inc
sbb
or
lock
or
jge
mov
loope
cmpsl
inc
rcll
das
lret
lea
lcall
pop
cmp
add
and
int
pop
lods
sbb
mov
push
fsts
lds
xchg
ds
dec
mov
shl
dec
call
loope
dec
mov
pop
cmp
mov
mov
mov
das
mov
and
mov
cmp
sub
jno
hlt
cmp
ja
inc
mov
push
inc
scas
mov
mov
mov
push
xchg
cmc
sub
inc
or
ja
mov
push
push
jae
and
mov
xor
xor
push
andb
add
or
imull
rcrb
cmp
imul
or
mov
xor
outsl
movsb
mov
gs
pop
cs
xchg
scas
jge
push
cld
sbb
mov
jbe
dec
dec
pusha
imulb
fiadds
ja
push
in
sub
add
jb
aas
mov
mov
jnp
adcl
rorl
inc
gs
pop
sbb
pop
adc
xchg
or
outsb
cmpb
sqrtps
insl
xchg
pop
adc
imul
mov
jl
insb
xchg
xor
movsl
or
aaa
and
xlat
mov
scas
in
dec
cwtl
es
lea
and
jg
repz
ds
pop
stos
repnz
sub
imul
lods
call
into
movsl
xchg
adc
orl
outsb
rcr
push
sbb
cld
cmp
push
es
leave
js
push
ror
dec
adc
das
pop
inc
add
dec
test
imul
cmc
mov
shlb
jo
mov
test
out
inc
inc
clc
imul
int
jne
xorl
xchg
aaa
shll
pop
mov
sub
sub
or
pushf
pmulhw
ljmp
faddl
mov
imul
mov
out
dec
and
ret
lret
popf
cli
jo
rcrl
xchg
fdivr
mov
mov
lock
xchg
mov
movsb
adc
and
test
inc
inc
or
mov
mov
sbb
push
sbb
lds
gs
scas
pushf
adcb
adc
fcoml
dec
cwtl
in
test
insb
inc
jg
iret
mov
jp
loop
and
sahf
cmp
dec
fcompl
gs
lcall
aam
les
mull
mov
andl
xchg
jae
and
and
sti
jmp
jb
andb
out
mov
pop
xorl
cmpb
cmp
stos
mov
fwait
jmp
pop
fldl
mov
inc
out
dec
call
xchg
mov
repz
imul
xchg
adc
and
pop
lea
mov
pop
imul
and
xor
cmp
fisubrl
enter
les
fstl
and
mov
cmpl
orb
adc
movsb
pop
call
lds
sbb
or
cmp
mov
pop
or
sub
pop
sar
or
addb
mov
push
adc
pop
lcall
clc
mov
mov
scas
and
lcall
jae
aaa
ret
jb
jnp
or
movsb
jbe
or
mov
mov
sbb
sbb
xor
in
ds
ja
cmpsl
dec
dec
rolb
adc
pop
mov
and
ds
dec
leave
es
cmpsb
popf
xchg
or
push
dec
add
sub
outsb
pusha
adcl
or
movsb
mov
push
push
ljmp
pop
mov
outsb
orl
test
jne
pause
or
ret
xchg
sbb
mov
outsb
cmp
and
out
movsl
add
pusha
shlb
dec
add
push
or
mov
shl
push
jecxz
inc
pop
push
pop
rcl
gs
out
mov
orb
xchg
ficoms
sarl
int
and
fsubr
xor
sub
icebp
jne
dec
pushf
mov
sub
mov
pop
and
repnz
inc
data16
inc
cmp
pop
stc
pop
cmpsl
lahf
mov
and
pop
mov
insl
add
cwtl
loope
add
xor
jnp
push
mov
adc
sbb
inc
pop
mov
in
push
push
push
sbb
rcl
loop
jnp
jg
rclb
xor
andb
jmp
xor
mov
or
imul
mov
aaa
lahf
sbb
mov
or
pusha
movsb
jbe
pusha
jp
mov
out
sub
mov
cmp
int3
int
hlt
xchg
cwtl
insl
fs
sub
or
push
mov
cltd
stos
xlat
cmp
fldt
fistpl
xor
bound
iret
out
movsb
adc
dec
loopne
mov
nop
xchg
xor
test
sub
push
cmp
das
cmp
adc
or
movl
xor
sub
ds
dec
ljmp
out
mov
mov
fxch
or
and
inc
outsl
dec
mov
cli
cmp
imulb
insb
and
jae
dec
jp
imul
push
cwtl
mov
sub
sti
es
js
pop
testb
pop
add
dec
orb
xor
cmp
fwait
lahf
inc
fcompl
or
orl
fsts
inc
xchg
jmp
xchg
jl
into
mov
jbe
in
call
jp
add
xchg
mov
bound
ret
jns
stos
push
test
xchg
jnp
lock
mov
ss
bound
fiadds
jae
sahf
sub
dec
or
std
inc
out
xor
daa
inc
aam
jb
pop
push
jg
shll
fldenv
subl
jno
and
in
xlat
pop
leave
jle
mov
icebp
scas
jg
lret
and
mov
hlt
xor
jp
ja
pusha
jbe
inc
sbb
adc
punpckhwd
out
aad
cmp
adc
es
insb
mov
out
in
loopne
orl
jae
add
mov
add
mov
and
orb
movsb
mov
xchg
fmull
add
sbb
idiv
add
idivb
xor
mov
cltd
push
lock
scas
rorl
adcb
fstl
hlt
mov
mov
and
jne
clc
enter
push
outsb
mov
sub
rclb
add
enter
cmp
push
cmp
loop
xorl
cs
or
jmp
adc
mov
cs
push
cmp
jb
lret
or
ret
push
scas
jne
fwait
insb
aaa
nop
rcl
xorb
inc
and
in
inc
test
cld
xchg
nop
add
rolb
or
lea
cmp
xchg
loope
test
push
inc
test
push
mov
mov
mov
popf
fsubs
sbb
mov
pop
out
pop
in
inc
mov
xor
dec
bound
mov
sub
shl
cli
and
lcall
lods
push
or
and
int3
or
mov
sbb
mov
test
les
fildl
sbb
lea
xchg
jle
push
lret
sbb
adc
adc
mov
in
out
push
or
in
test
aaa
insb
cmp
sbb
xlat
dec
push
in
mov
ret
lcall
push
xor
pop
fxch
fmuls
inc
sub
mov
scas
bound
dec
xor
out
cmp
sahf
nop
jge
testl
mov
xor
lock
sub
aas
ficoml
sub
adc
ss
xchg
test
stc
ds
jmp
pop
test
dec
add
dec
dec
jne
in
fadds
pop
cmp
dec
imul
xchg
test
cltd
mov
scas
mov
imul
es
nop
inc
push
inc
stos
xchg
mov
popf
mov
in
sahf
add
dec
jno
fimull
mov
mov
rolb
fistl
pop
cmp
cmp
ret
mov
cmp
push
mov
aad
add
mov
add
xchg
in
dec
movsb
scas
insl
xchg
inc
jne
or
imul
fstp
out
aas
mov
xchg
xchg
add
mov
cld
push
repnz
adc
lds
cmp
movsl
mov
repnz
or
mov
inc
and
mov
adc
ret
testb
add
mov
lea
std
jmp
aas
adc
stc
enter
pop
cmp
clc
outsl
pop
mov
in
cltd
lods
jne
xor
push
fildl
cs
pop
lret
leave
mov
ret
in
imul
ljmp
and
fs
adc
cmp
mov
int
mov
lds
sbb
or
cmp
nop
and
mov
in
xchg
inc
adc
push
lret
pop
insb
jnp
clc
mov
pop
movsb
in
jecxz
cmp
push
data16
dec
add
lcall
add
mov
xchg
in
pop
icebp
outsl
cmpl
sbb
pop
pushf
xchg
cmpsb
stos
mov
cmp
stos
sbb
dec
pop
add
and
inc
enter
cmc
sub
and
lcall
scas
mov
dec
lahf
clc
fnstcw
dec
std
adcb
outsl
pop
mov
repz
xchg
cmpl
bound
or
and
in
int3
inc
cli
add
push
mov
fwait
cmp
fiadds
rcrb
loope
loope
mov
cmp
push
xchg
mov
dec
sub
mov
bound
pop
sub
jno
push
test
xlat
bound
jle
pop
xchg
inc
xor
xchg
add
inc
mov
mov
imul
popa
pop
loope
fcoms
or
pop
iret
mov
lods
xorb
mov
cmpb
xor
hlt
imul
aaa
sbb
std
loope
test
add
or
sub
pop
in
movl
dec
add
cmp
mov
sbb
loop
mov
shrl
stos
xchg
sub
loope
sub
lds
into
ret
popa
adc
iret
push
frstor
jo
ljmp
shlb
push
push
out
lods
push
fs
cli
push
dec
pop
ljmp
fadds
out
sub
es
lret
push
cli
pusha
and
repnz
into
xchg
mov
pop
push
int
out
jbe
sub
fnstenv
repnz
ret
mov
sahf
push
popl
pop
ret
out
mov
pop
roll
mov
fistps
push
fbstp
inc
lods
xor
ret
not
jns
add
sub
add
sub
mov
cld
movsb
mov
test
add
insl
test
cwtl
jp
push
incb
add
popf
cmp
cmp
cmp
movsl
inc
adc
addr16
in
test
xor
in
pop
inc
es
cmp
daa
push
scas
leave
mov
mov
stos
mov
mov
rcrl
decl
int
fwait
xchg
add
inc
je
mov
je
outsl
cmp
loope
jp
push
add
sub
std
orb
jnp
andl
rolb
stos
push
add
sbb
insl
push
fildll
push
inc
mov
icebp
mov
repz
push
loope
shlb
push
dec
enter
or
xchg
inc
mov
push
outsb
repz
insb
push
mov
or
loopne
arpl
push
inc
dec
imul
lock
fimull
cmp
aas
sbbb
inc
jae
xchg
and
pop
insl
xor
popa
or
sub
js
jae
hlt
and
cltd
in
in
xchg
aas
add
cmp
jp
test
jb
push
push
add
mov
pop
pop
iret
jle
shlb
je
mov
sub
subb
xchg
mov
push
inc
cwtl
adc
je
daa
ficompl
mov
cmp
push
jle
sbb
cmp
adc
xchg
dec
adc
into
fists
xor
lcall
mov
push
cmpl
loopne
lahf
testb
push
dec
cli
and
je
iret
test
push
xchg
and
jecxz
xchg
sbb
xchg
lea
xor
loop
stc
sbb
push
jp
daa
imul
arpl
cmp
mov
xor
xchg
mov
bound
xor
jmp
push
xchg
push
mov
inc
sahf
loopne
sbb
xchg
mov
mov
add
lock
jnp
cmp
fnsave
fidivl
cmpsb
cmp
and
sbb
jno
push
lods
lahf
jecxz
pop
mov
arpl
dec
xchg
fwait
cmpsl
jmp
out
mov
lods
cltd
rcl
in
mov
scas
xchg
mov
enter
adc
outsl
fdivr
xlat
add
add
xchg
push
xchg
mov
nop
inc
xor
push
xchg
inc
mov
idivl
ret
out
sti
test
cmp
dec
jo
les
sbb
mov
hlt
cmpsl
test
sbb
sti
rcll
mov
dec
inc
mov
loopne
mov
bnd
adc
mov
pusha
mov
lea
add
jno
inc
inc
int3
sub
aaa
inc
js
lods
adc
cltd
jle
lret
xor
xchg
loope
and
jmp
sbb
scas
xchg
out
into
mov
jns
pop
mov
mov
pop
jne
xor
sub
cmp
idivl
fdiv
lcall
aad
dec
pushf
or
mov
sbb
or
dec
xor
repz
xlat
out
adc
mov
mov
cs
mov
xlat
jg
add
jge
jmp
dec
mov
scas
lea
jg
cmp
loopne,pn
inc
jnp
cmp
push
leave
jmp
stc
pop
cmpb
pusha
iret
xchg
jg
push
add
call
pop
add
pop
std
push
dec
mov
pop
dec
adc
shrb
sbb
es
jmp
sahf
fstps
in
sbb
dec
insl
and
add
mov
lock
or
bound
dec
mov
jle
inc
sub
pop
fs
or
pop
in
loop
lret
or
and
adc
push
xchg
rcll
sti
lock
out
mov
sbb
sub
sub
outsl
inc
pop
in
lea
adc
fdivl
in
jmp
pop
inc
stos
cs
add
shrb
mov
stc
call
stos
bound
push
jo
out
icebp
mov
shll
add
out
inc
imul
daa
push
movsl
cld
pop
loopne
stos
jg
or
mov
addr16
test
out
jbe
das
fwait
mov
test
mov
sbb
aas
sahf
pushl
insb
mov
loop
repnz
push
je
imul
fdivrp
jl
mov
sub
xchg
cmp
fiaddl
or
outsb
ret
cmp
movsl
imul
shlb
add
cmp
inc
mov
inc
mov
int3
sub
and
dec
aas
xor
sbb
lods
xor
mov
sbb
scas
seta
imul
sbb
or
ror
mov
pop
pop
dec
out
test
and
cmpb
divl
pop
dec
inc
xchg
cmp
add
fcompl
xchg
dec
adc
or
das
fidivrs
xor
sbb
adc
shrl
add
sub
mov
xor
fnstenv
mov
ret
lods
mov
aad
cmpsb
inc
push
out
dec
insb
adc
mov
test
arpl
pop
jo
xor
addb
sbb
pop
pop
dec
mov
adc
out
jecxz
adc
pop
fwait
aam
movsb
mov
cli
xchg
cs
sub
lret
test
or
lea
jae
daa
dec
test
xor
jno
xchg
pop
pop
aam
jae
dec
mov
or
je
mov
push
mov
sbb
push
movsl
aaa
lds
mov
repz
call
pop
mov
scas
jo
adc
mov
mov
push
cmp
xchg
sbb
int
andb
sub
mov
out
js
pusha
pop
mov
pop
fistl
mov
inc
push
cmpsl
stc
ss
sub
icebp
mov
arpl
xchg
loope
push
dec
xorl
xchg
mov
pop
jmp
and
roll
adc
cmp
data16
hlt
cmc
aaa
dec
or
test
cmpsb
test
gs
sub
inc
pushl
mov
mov
mov
inc
data16
sbb
push
sub
pop
adc
pop
and
fcmovne
pushf
inc
test
xchg
mov
fabs
mov
jno
fs
imul
inc
shll
mov
enter
sub
jg
push
or
iret
inc
fwait
addb
fnclex
dec
dec
insb
cmp
mov
and
add
sbb
je
pop
jb
mov
pop
or
push
out
les
add
push
stos
or
mov
sub
dec
test
mov
push
sub
test
mov
adc
push
adc
enter
mov
iret
cmc
push
lcall
sahf
cli
add
push
push
mov
jp
loop
test
loope
sub
inc
push
push
leave
cs
lds
push
sbb
pop
cmp
push
cs
add
mov
jno
xchg
outsl
ja
jmp
mov
inc
daa
data16
mov
loop
shll
scas
call
sub
fdivr
mov
pop
xor
ss
push
sub
push
mov
pop
in
xchg
dec
out
push
pop
call
mov
cltd
push
mov
int
or
cmp
hlt
enter
imul
inc
or
inc
inc
movsb
mov
cmp
int
in
cmp
inc
icebp
es
push
mov
push
pusha
adc
aad
shlb
xor
bound
clc
sub
push
xchg
mov
loop
movsb
mov
xchg
and
nop
push
xor
lret
stos
ja
dec
ljmp
js
scas
xchg
lods
lds
dec
lock
mov
jl
sbb
cli
sbb
cld
leave
adc
cmp
mov
mov
hlt
sbb
je
out
mov
xchg
out
and
inc
sbb
cwtl
add
daa
sbb
pop
push
xlat
fadds
inc
in
dec
xor
mov
into
xor
xchg
ret
movsl
add
stc
pop
jno
add
cmp
mov
lods
testl
xorb
pop
frstor
dec
add
inc
jns
fidivrl
std
out
cmp
mov
mov
dec
sub
and
sbb
inc
mov
pop
mov
xchg
xchg
xchg
shlb
mov
cmp
movsb
ds
xchg
add
pusha
dec
push
fdivrs
repnz
rep
ljmp
loope
lret
imul
xlat
pop
xchg
sbb
scas
jo
inc
pop
cltd
les
xlat
mov
ror
out
push
mov
popa
daa
mov
mov
jecxz
jb
sbb
push
lea
faddl
jl
xor
xor
push
xchg
push
or
pushf
adc
jne
movsl
lds
inc
add
add
xchg
mov
cmp
cltd
adc
xchg
mov
decl
sub
shlb
addr16
sbb
pop
pop
push
test
sub
out
imul
sub
and
les
in
loop
push
xchg
xor
pop
lods
lcall
cmp
ret
clc
mov
mov
mov
ret
fwait
je
pop
mov
enter
leave
dec
in
xor
inc
imul
sub
push
sti
fpatan
insl
mov
and
rcrb
jg
jge
rolb
sub
daa
add
daa
popa
mov
sbbl
push
push
push
std
cli
push
test
mov
sub
push
loope
gs
lds
cmp
daa
add
stc
or
mov
and
adc
scas
xor
loopne
inc
mov
push
fldcw
pop
imul
cmp
imul
mov
loope
jp
inc
lds
xor
adc
das
jne
sbb
daa
aam
xor
in
sbb
mov
ja
dec
jl
and
push
mov
gs
dec
imull
lods
aaa
and
jb
sub
and
je
inc
cmpl
rorb
scas
ljmp
lahf
test
jb
mov
push
stos
push
push
push
dec
nop
sbb
pop
clc
test
dec
lea
jg
jne
inc
mov
in
lods
add
cmp
sub
sub
dec
add
push
sbb
daa
cltd
jmp
mov
lock
jnp
clc
xchg
clc
sbbl
roll
pop
addr16
pop
popa
mov
or
aad
lods
fsubrs
mov
inc
mov
and
dec
cs
aas
push
inc
push
jge
mov
and
mov
js
lea
jl
sbb
in
and
out
add
ljmp
repnz
arpl
pushf
push
mov
scas
xchg
mov
and
jl
push
fiaddl
pop
xchg
jbe
movsw
repz
mov
outsb
mov
jns
movsb
int3
test
lds
and
mov
ljmp
mov
xor
jno
iret
call
or
add
das
out
mov
sub
jo
add
scas
inc
pusha
inc
mov
inc
mov
lods
sub
push
call
jne
fisttpl
inc
add
and
ss
jmp
jb
hlt
pop
fcompl
xchg
push
aad
pop
and
add
stos
gs
repz
ret
icebp
pushf
ret
xchg
outsb
clc
daa
lret
xchg
test
stc
xor
sahf
and
ret
or
cmp
cmpsl
jg
pop
push
out
dec
xlat
add
test
lods
ror
push
out
and
rcll
mov
out
and
cmpsl
ret
push
cmc
and
pop
mov
ljmp
cmp
leave
push
mov
sbb
mov
push
mov
lahf
repz
inc
sbb
loop
scas
cmpsl
or
push
xchg
dec
push
cs
int
in
nop
pop
push
and
popf
mov
repnz
cmpsl
mov
aam
or
je
stc
sub
sti
test
sub
mov
push
add
movsb
sahf
movsb
psadbw
sbb
adc
jo
insl
push
fnsave
dec
bound
and
movsl
or
out
into
mov
adc
lahf
daa
popf
imull
jb
flds
dec
cld
inc
dec
and
jmp
or
mov
mul
fidivrs
push
nop
and
pushf
insl
push
dec
mov
outsb
cmc
push
lret
sub
mov
mov
loopne
xor
das
repz
xchg
popa
sub
mov
xchg
fnsave
mov
adc
inc
ficomps
sub
out
fwait
mov
popf
jb
hlt
jns
dec
lret
ret
push
inc
adc
clc
sbb
mov
dec
jns
and
xor
fwait
lcall
dec
sarl
mov
lea
shl
shr
fidivl
push
insb
shll
repnz
and
call
scas
adc
ljmp
add
ds
dec
loope
mov
popf
inc
push
xchg
push
icebp
into
into
mov
arpl
arpl
and
push
bound
test
in
mov
pop
pusha
enter
sub
sbb
and
cmp
jg
lret
testb
fcoml
lahf
cmp
push
call
frstpm(287
push
or
dec
lahf
jb
cld
push
iret
or
aam
add
xchg
sbb
jns
and
cmpsb
sbb
cmp
sbb
lea
jnp
lods
sahf
push
or
ja
imul
out
adc
loopne
dec
or
xchg
add
fnsave
orb
scas
rol
inc
cltd
or
int3
divb
cmp
xchg
icebp
add
sub
shrl
scas
jo
ror
dec
cmc
aam
jmp
push
cmpsl
ficoml
xor
cs
sbb
xchg
cmp
dec
and
adc
ret
pop
lcall
dec
adc
sub
sbb
sti
js
movsb
xchg
clc
push
cmpsb
sbb
or
ss
ret
xchg
mov
nop
sub
add
dec
movsl
std
xlat
int3
sub
enter
sbb
add
add
jb
into
mov
stos
lahf
scas
inc
test
sti
lods
mov
test
cmovae
cmp
mov
mov
xchg
inc
xchg
add
movsb
pop
popf
pop
inc
mov
aaa
add
fbstp
clc
or
or
stc
mov
out
sbb
in
xchg
adc
bound
and
test
cltd
mov
pop
mov
xor
mov
or
add
or
out
xor
arpl
cmp
jecxz
push
out
adc
adc
mov
out
pop
fcmove
pop
cmp
push
hlt
repz
push
pop
bnd
add
mov
jg
adc
std
icebp
pop
or
push
ret
out
jle
divl
mov
mov
cmp
xchg
cmp
lcall
test
fstpt
xchg
enter
sub
pop
ljmp
pop
add
inc
mov
push
sbb
add
inc
inc
mov
push
mov
push
call
std
negb
jg
mov
dec
sub
leave
std
popf
add
clc
xor
lods
mov
test
pop
iret
aaa
or
fwait
ds
call
adc
cwtl
mulb
mov
jecxz
inc
and
stos
sbb
fwait
push
call
mov
or
push
inc
sbb
add
or
xor
das
xchg
fidivs
jmp
xor
stos
hlt
je
stc
jno
mov
clc
fwait
inc
pop
jge
lods
mov
aas
mov
xor
out
push
xlat
lds
mov
xchg
fadds
rcll
rorb
adc
in
xor
inc
add
lds
es
mov
add
cmpsb
fdivr
cmp
inc
jl
out
jae
mov
adc
and
ret
pop
pop
xchg
neg
sarb
out
in
cwtl
inc
lea
and
cld
data16
gs
lods
adc
sbb
loopne
sarl
das
fistpll
clc
aam
sub
push
or
outsl
jns
popf
nop
cmp
sbb
sti
push
mov
xchg
cmp
or
jl
scas
xchg
lock
add
sbb
mov
jbe
rcrl
or
or
imul
fidivrs
jnp
aam
int
and
popa
cld
mov
jmp
inc
cmp
sbb
push
int
popf
add
insb
popf
aas
cmp
fisubs
sahf
loope
ret
mov
or
mov
push
scas
mov
mov
cltd
loopne
xchg
bound
gs
dec
je
pop
cs
faddl
das
rolb
hlt
lods
inc
xor
mov
mov
addl
push
loope
call
dec
nop
test
or
nop
add
stos
push
jbe
imul
cmp
out
iret
nop
in
repz
ret
rol
sub
inc
leave
pop
inc
dec
xlat
mov
pop
shlb
xchg
cli
sbb
loop
outsb
sbb
pushf
ds
push
mov
jns
and
inc
or
fsubl
mov
xchg
xchg
inc
mov
xor
ljmp
or
inc
and
sub
cmp
mov
int3
jo
lods
sub
jo
fwait
arpl
in
pop
addr16
loope
push
jmp
sahf
jl
xchg
sarl
or
iret
das
sbb
test
and
jbe
inc
call
xchg
aaa
jl
mov
sub
clc
ljmp
xor
xchg
pop
pop
mov
xchg
loope
lret
push
out
mov
push
jbe
gs
pop
mov
xchg
lock
pop
jb
test
add
repnz
push
hlt
repnz
adc
iret
hlt
roll
loop
cltd
jns
repnz
fmuls
mov
jge
mov
mov
adc
jnp
sub
mov
arpl
ds
and
cmp
xor
ljmp
shlb
mov
pop
lds
shll
push
jo
cmpsl
dec
in
mov
rorl
dec
dec
push
leave
jnp
mov
add
lcall
sbb
orb
inc
inc
xor
jnp
out
pop
rclb
inc
roll
sbb
jge
je
aam
into
mov
adc
and
fmuls
in
jl
fldcw
repnz
lahf
aad
xchg
inc
adc
outsl
das
fldt
insl
cmpsl
nop
mov
repnz
or
sbb
push
pop
mov
mov
push
cltd
stos
cld
outsl
ds
push
mov
push
lret
cmp
mov
in
movsb
pop
push
pop
test
into
xchg
gs
je
lret
lret
and
lcall
or
cwtl
fs
aam
mov
push
push
popa
mov
push
enter
loope
out
popa
sahf
cmovnp
inc
mov
leave
ss
xchg
out
sbb
or
pop
js
loope
sub
push
pop
aad
out
or
sbbb
add
sahf
and
stc
sbb
pop
das
lods
sti
jle
mov
lret
sbb
lret
and
scas
sub
mov
fidivs
subb
mov
mov
xchg
aaa
adc
gs
fs
int3
add
testl
cwtl
loop
jae
lea
jle
and
addr16
jbe
popa
lcall
and
cmpl
divb
lods
lea
pop
lds
mov
jbe
cmpb
pop
jg
fisttpl
addr16
dec
jnp
inc
jecxz
push
jo
pop
dec
das
loope
mov
sub
stos
cmp
fists
in
pop
sub
int3
ja
loop
jns
cld
sbb
gs
push
int3
pop
out
jnp
ss
inc
adc
ja
mov
sbb
ljmp
dec
push
cltd
sbb
popa
and
inc
jae
jl
fnstenv
pushf
lea
popa
sub
call
pop
out
mov
iret
sahf
cmp
xchg
xor
sbb
push
shrb
sbb
jl
in
into
js
cmp
cmp
daa
sbb
lea
sbb
push
js
pop
xchg
cmp
sub
movsb
std
cld
mov
bts
sbb
sbb
test
stos
ljmp
cmp
cmp
mov
rcrb
jo
dec
cltd
or
ja
bound
test
shlb
mov
jmp
pop
fnstenv
test
dec
xor
mov
repz
mov
mov
daa
pop
enter
in
ljmp
sbb
add
enter
enter
and
pop
add
mov
mov
and
sub
subl
xor
jge
sub
cli
mov
mov
jne
popa
xchg
into
imul
jne
xchg
in
mov
adc
fs
lret
pop
jns
xchg
xor
mov
pusha
jl
negb
push
dec
adc
push
test
frstor
pop
mov
addb
adc
and
cmp
shl
fidivrl
je
cmp
lret
testb
mov
pop
cltd
cwtl
and
xor
lahf
xor
mov
ds
clc
int
shlb
enter
dec
mov
mov
mov
adcl
add
sbb
sarl
mov
jl
test
and
fbld
mov
mov
pop
movsl
mov
adc
sbb
lret
xchg
push
and
pop
jnp
add
cmpb
pop
mov
leave
mov
mov
jp
nop
sahf
lahf
mov
dec
ja
jp
rolb
mov
mov
sub
pop
jno
push
and
xor
sub
pop
mov
mov
in
jl
xchg
push
pop
mov
xchg
loopne
sbb
lea
inc
sub
push
in
push
jae
jmp
ds
adc
or
adc
cmp
dec
outsb
jno
incl
adc
fimull
xchg
out
dec
out
cmp
imul
push
jp
test
pushf
push
mov
pop
pop
loope
push
fisttpll
scas
sub
mov
shlb
add
insl
xchg
sbbl
push
xchg
adc
sarb
cmp
dec
xor
addr16
ljmp
pop
lods
inc
mov
and
ljmp
dec
dec
cmp
icebp
nop
xchg
sbb
daa
cmp
mov
int
stos
outsl
jo
inc
in
cltd
adc
loope
pop
push
fstpl
imul
incl
fwait
cmp
in
push
aas
dec
jmp
cmp
movsl
xchg
xor
enter
mov
sti
test
cld
pushl
mov
sahf
jge
add
mov
dec
push
fisubrs
into
movsb
das
test
ficomps
test
cmpsb
lods
sbb
xor
mov
in
lret
jecxz
je
mov
bnd
push
lret
mov
cmpsl
xchg
cmp
stc
movsb
ret
stos
sub
inc
cmpsl
add
push
adc
dec
adc
test
out
daa
addr16
outsl
imul
pop
sub
mov
int3
loopne
int3
inc
xchg
icebp
outsl
scas
imull
sub
nop
out
push
jecxz
pop
mov
ffree
or
inc
cmp
fcmovne
xlat
cmc
cmp
pop
push
aam
push
and
cli
sahf
push
decb
sbb
std
push
in
adc
arpl
push
mov
lret
mov
ja
adc
mov
popf
mov
lods
dec
push
mov
lods
stos
cltd
jo
imul
dec
inc
pop
test
dec
addr16
adc
mov
addr16
jns
mov
pusha
mov
mov
loope
outsb
jmp
fs
add
mov
xchg
shll
dec
adc
xchg
mov
les
scas
dec
mov
lret
jnp
sbb
out
sbb
cmc
mov
daa
rorl
pop
je
mov
jnp
nop
mov
test
jg
vpsadbw
mov
dec
and
loop
fs
inc
adc
push
ret
mov
and
das
ret
jne
mov
jle
jge
dec
push
stos
xor
mov
jb
push
leave
lock
xor
push
enter
mov
jae
jno
loopne
gs
test
mov
loop
aaa
scas
add
scas
test
testb
xchg
or
adc
addr16
imul
fimuls
cmp
mov
sbb
xchg
fcoms
ficoml
cltd
in
imul
and
jnp
pop
cmc
mov
mov
xor
sti
jmp
mov
enter
mov
and
fdivl
jp
adc
insb
inc
inc
mov
xor
mov
fists
cs
jne
int3
mov
fnstenv
repnz
enter
lock
int3
add
repz
mov
cmp
dec
fiaddl
imul
imul
pop
push
or
ret
imul
clc
dec
and
sub
mov
adc
aaa
cmp
daa
iret
sti
xor
lods
mov
and
add
pop
pop
xlat
pusha
test
call
jb
pop
pusha
out
dec
cld
dec
addr16
cltd
lret
loop
imul
loopne
outsl
jo
subb
call
shrl
push
push
fcom
sbb
loopne
and
cli
cmp
push
addr16
mov
lret
in
dec
add
aad
mov
cmp
bound
lcall
test
xchg
sahf
mov
pop
sbb
push
inc
cmp
shrl
lods
pop
mov
push
cmp
je
fisubrl
xchg
cltd
sbb
mov
pop
mov
pop
std
pop
jge
fldenv
lret
popf
iret
outsl
mov
and
sub
or
add
test
adc
push
aad
dec
dec
test
jb
mov
dec
adc
cmp
nop
xor
mov
ss
loope
aaa
das
aad
in
xor
jle
push
test
xchg
loopne
imul
ret
repnz
testb
dec
jns
arpl
popa
jp
outsb
push
rorb
rorb
cwtl
ret
imul
nop
hlt
popa
add
or
inc
mov
xchg
dec
dec
lock
aad
dec
jp
jge
pushf
vcmpeq_osps
sbb
nop
xchg
imul
jge
or
dec
mov
jg
xor
mov
lock
jnp
hlt
aas
daa
or
lret
adc
inc
int
pop
or
negl
cmp
pop
je
jb
mov
pop
push
leave
loope
std
scas
push
pop
xor
testb
jmp
adcb
int3
mov
xor
nopl
arpl
dec
sbb
inc
outsl
mov
adc
pop
and
jecxz
into
insl
repz
das
in
testl
sbb
cmp
push
jle
nop
std
lods
pop
hlt
outsb
call
mov
mov
fcomp
sbb
push
scas
call
sbb
pop
push
stc
add
popa
xor
hlt
in
aaa
push
dec
push
push
jg
bound
fwait
jae
add
insl
pop
xchg
jne
insl
out
inc
je
pop
or
imul
push
and
cmp
dec
sub
add
repnz
inc
test
add
loope
xor
sbb
push
sub
ja
mov
lock
xchg
adc
lea
push
insb
in
adc
mov
pop
inc
push
ja
push
ss
or
ja
mov
push
mov
sbb
mov
mov
and
insl
mov
push
aad
mov
out
xor
cmc
adc
loop
cs
push
scas
dec
or
lock
xlat
sub
xchg
loop
pop
cmp
sub
shll
gs
mov
mov
mov
insb
lcall
xor
adc
sbb
lods
das
jae
lds
cmp
je
pop
push
std
sbb
ja
sahf
mov
fsubl
pusha
js
ds
insb
out
adc
fnstenv
andb
repnz
aam
loope
stos
rorb
in
inc
sbb
out
dec
cmp
stc
sub
add
aas
sub
in
int
lret
inc
mov
daa
cs
int
push
call
ljmp
lods
inc
out
pop
ficomps
mov
xchg
dec
pop
fcomps
test
pop
jb
pop
in
mov
ror
pop
mov
and
sub
aaa
es
mov
mov
xchg
clc
mov
inc
mov
dec
out
stos
pusha
clc
mov
pop
push
pushw
scas
sub
xchg
pop
or
mov
int
jb
xor
stc
or
add
jo
cld
leave
jae
push
shll
sub
pushf
lea
mov
repnz
stos
mov
jae
xor
pop
mov
sti
mov
mov
and
jmp
outsl
or
dec
xor
mov
test
mov
hlt
bound
lock
mov
pop
lahf
loope
push
or
and
idivl
mov
cmp
jae
cld
sbb
dec
pushaw
cwtl
jns
mov
push
sbb
das
in
mov
stc
icebp
mov
cmp
cmpsl
inc
dec
nop
jo
out
adc
ljmp
push
cmpsb
lds
jecxz
out
push
fstps
cmp
loope
inc
cmpsl
or
aas
lcall
aaa
mov
movsl
arpl
orb
aad
mov
scas
and
cmp
xor
mov
push
lcall
mov
repnz
out
xchg
into
or
mov
jle
or
mov
iret
mov
in
mov
aam
inc
pushl
lock
movsb
pop
xchg
fstpl
addl
flds
push
cld
loop
xor
in
dec
stos
dec
sub
add
pop
lcall
xrelease
pushf
dec
sldt
pop
out
test
cmc
xchg
pop
lret
data16
rcrl
addr16
lcall
push
cmp
inc
xchg
cld
icebp
adc
lret
add
decb
outsb
inc
push
sbb
cmp
mov
in
test
xor
push
nop
outsl
inc
daa
add
push
xchg
mov
xorl
or
dec
test
lock
push
pop
test
sbb
imul
mov
jge
sbb
lock
and
inc
loopne
out
jmp
adc
adc
jne
outsl
push
mov
outsb
insl
push
push
pop
fimull
cld
pop
push
dec
mov
and
out
sub
mov
dec
add
sub
lahf
sbb
jecxz
and
lret
jns
ret
and
test
popf
negb
jbe
das
push
imulb
jp
jae
cld
jp
pop
dec
mov
rcl
jno
jbe
jp
loopne
xchg
pop
pop
xor
fcompl
hlt
dec
in
lea
cmpsl
lret
cmp
xchg
add
fstl
inc
jecxz
cmp
push
mov
dec
xchg
outsl
jo
mov
dec
out
rol
jmp
adc
call
ljmp
adc
or
xchg
mov
test
das
pop
rorl
cmc
xchg
push
out
gs
in
lds
add
loope
mov
jnp
jae
push
inc
popa
inc
ror
subb
adc
sti
out
je
jle
push
bound
jmp
add
pop
ja
pusha
or
mov
loope
out
push
out
ret
xchg
mov
and
jmp
add
mov
mov
mov
out
xchg
pop
inc
stos
pop
decb
icebp
punpckhbw
ljmp
cmp
imul
fdivs
gs
ds
cmc
clc
sarl
ret
mov
cmc
decb
cmp
dec
push
add
dec
es
jae
shrl
cmp
jg
lods
hlt
inc
loope
lcall
in
mov
adc
lret
add
cs
sahf
mov
inc
mov
out
mov
pop
dec
fldl
xchg
out
lds
insb
movsb
add
ret
clc
sbb
mov
sub
test
jecxz
loopne
repz
dec
sbb
leave
je
lods
hlt
out
push
call
push
pop
jae
push
fcmove
dec
filds
leave
mov
into
lahf
test
je
sub
or
js
mov
jo
adc
mov
ror
push
bound
fcomip
mov
shrb
add
pop
data16
add
repnz
data16
movsl
push
mov
arpl
push
in
out
push
adc
icebp
push
and
rcll
jp
stos
mov
xlat
pop
pusha
or
jmp
mov
int
minps
cs
or
shr
mov
or
ret
xor
cld
jge
sbb
mov
test
mov
loope
jmp
cmp
enter
rcll
push
aad
sub
cmp
gs
jbe
pop
or
push
jle
sbb
mov
mov
pop
icebp
cli
pusha
and
or
cltd
mov
fisttpl
ja
cltd
jl
xchg
pop
mov
pop
add
cld
int3
in
data16
dec
jno
leave
mov
pop
decl
rorl
clc
je
fcmovb
sahf
out
mov
cmp
xor
xlat
call
ret
push
mov
fstpt
cld
pop
sub
cmp
cs
jb
int
inc
mov
nop
adc
xchg
push
call
dec
pop
loop
pop
repz
test
or
adc
inc
ret
clc
jecxz
inc
sahf
fidivl
nop
inc
test
sbb
mov
and
xor
sub
add
mov
addr16
jbe
xor
clc
xor
mov
pop
jecxz
and
inc
mov
xchg
ljmp
aam
add
repz
imul
mov
sbb
insl
outsb
jno
daa
or
cmp
inc
inc
fwait
sub
mov
in
pop
and
pop
aaa
mov
xchg
addr16
inc
push
shll
adc
shrb
mov
clc
inc
cmp
popa
rcrl
and
fstps
dec
mov
pusha
shrl
into
pop
icebp
xchg
ljmp
cmc
lock
sbb
push
push
rcrl
in
mov
iret
mov
xchg
adc
or
pop
hlt
push
popa
add
cmpsl
je
sub
sub
pop
xor
fisttpll
jmp
push
mov
jecxz
outsl
pop
or
cmpsl
inc
ret
sub
dec
clc
fs
es
int3
xchg
adc
fs
xchg
jp
xchg
adcb
lret
inc
adc
pop
stc
movsl
sub
adc
and
cmp
or
lret
mov
movsl
mov
sbb
es
shl
out
mov
testb
in
repnz
les
cmp
cwtl
mov
aas
mov
jmp
dec
push
xchg
aaa
push
hlt
mov
pop
jl
jno
or
jecxz
das
inc
ret
mov
or
mov
add
inc
cmp
cwtl
lret
pop
adc
int3
outsl
and
fadds
sidtl
fsubrl
cmp
ljmp
lods
jl
scas
pop
jecxz
test
jle
or
add
push
fwait
loopne
jmp
scas
jmp
sbb
pushf
jmp
stos
std
loopne
stos
adc
xchg
das
jno
xorb
sub
testl
ret
cwtl
rcll
dec
sbb
imul
mov
roll
pop
pop
push
jg
pop
pop
sbb
stos
int
push
push
test
pop
inc
cmp
mov
pop
dec
test
mov
mov
test
jne
sarl
add
outsl
insb
pop
stc
sbb
lcall
xor
jp
data16
scas
repnz
cmp
mov
add
pop
fs
cmp
int
and
or
push
or
flds
insl
push
xchg
pop
arpl
xor
rcr
dec
les
mov
sahf
cmpsb
and
sub
dec
mov
out
mov
fcmovnu
adc
dec
sahf
xlat
aas
sti
cmp
sub
sbb
sub
repz
nop
cltd
jnp
push
mov
or
aas
mov
jno
movb
fdivl
sahf
decb
mov
cmp
clc
cwtl
loopne
jno
test
lret
addl
adc
mov
cmp
gs
in
daa
mov
gs
cmp
fisubrl
imul
orl
jmp
fdiv
jnp
loope
repz
push
test
adc
mov
icebp
mov
dec
icebp
inc
loopne
inc
repnz
jecxz
push
or
push
jl
push
mov
dec
xor
pop
xchg
mov
lcall
out
cwtl
lds
lcall
loopne
test
cmp
sbb
imul
das
cwtl
fs
ljmp
in
dec
mov
xor
and
stc
js
xchg
xor
int
popa
xchg
daa
nop
mov
pop
xor
add
cld
mov
cmp
daa
mov
lcall
mov
inc
inc
fldt
add
add
lods
rcr
stos
cmp
add
rcll
std
bound
clc
and
fldenv
ret
fs
xor
nop
ss
fstpt
cli
mov
mov
ss
inc
adc
mov
mov
mov
pop
mov
ss
xchg
rcrl
out
cmp
imul
fisubl
inc
lahf
adc
test
push
es
lds
jmp
dec
fwait
cli
and
mov
jp
js
or
in
sub
loope
dec
inc
and
jns
sub
sbb
outsb
xor
and
ret
dec
bound
scas
mov
jnp
loope
inc
cmpsb
inc
rorb
mov
cs
mov
push
sub
xchg
mov
hlt
add
sbb
and
sbb
cmpsb
xlat
insl
inc
mov
xchg
loopne
cmp
mov
push
pop
cmp
divl
pop
jge
push
inc
and
xor
sti
jo
mov
int3
dec
in
dec
mov
sbb
push
xchg
xor
xchg
push
aaa
das
test
add
push
push
pop
mov
aad
mov
cmp
icebp
pusha
cmp
stc
outsb
insl
add
mov
mov
push
pop
lock
lea
push
xchg
addr16
lods
inc
repz
mov
xor
pusha
sub
scas
xor
scas
inc
and
mov
xchg
or
jecxz
xor
mov
sbb
adc
inc
sbb
push
adc
push
xchg
sub
inc
inc
jbe
insl
aas
sti
inc
in
sub
out
mov
mov
sar
aas
fidivrl
cmp
mov
pushf
dec
ljmp
and
in
fldt
outsl
sub
or
jae
fisubrs
cmp
xor
int3
jge
cmpsb
adc
movsb
mov
nop
push
sbb
dec
sbb
lods
adc
and
popf
out
xor
fisubrs
sbb
dec
jae
and
js
fdivp
jl
loop
aam
mov
psrlw
mov
cmp
mov
aad
rcll
loope
jmp
cmp
mov
adc
and
movsb
or
adc
in
or
imul
sbb
sbb
add
gs
mov
xchg
int
jle
xchg
jge
and
adc
shll
punpckhbw
push
cmpsl
xchg
in
das
addr16
xor
incb
aad
dec
xchg
xlat
or
test
xchg
test
rorb
and
dec
dec
fwait
jecxz
cmp
enter
lods
cmc
mov
dec
adc
mov
mov
push
jle
repnz
pop
test
shll
out
xor
aad
mov
mov
aam
xor
cmpb
mov
lods
or
pop
mov
push
inc
mov
pop
in
fisubrs
fsubr
pop
es
std
lcall
out
out
cmp
aad
mov
xchg
xchg
in
cmpb
or
std
cmpl
xchg
pop
ffree
push
loope
mov
subl
pop
jns
shrb
gs
aaa
inc
ror
sbb
lahf
sub
aaa
sbb
jecxz
sub
adc
adc
jns
add
push
stos
bound
lcall
cmp
adc
xchg
push
cmp
ror
popf
std
movaps
movsb
insb
pop
pusha
sub
mov
mov
cmpsl
mov
in
mov
jnp
jb
ja
outsb
loop
sub
cs
cli
sbb
pusha
stc
mov
mov
jp
cmpsl
lods
sahf
lahf
les
and
lea
arpl
sub
rcrb
loope
xchg
jecxz
dec
imull
aas
add
cs
jl
xchg
test
js
sub
inc
popf
or
fcoms
pop
hlt
pop
mov
mov
mov
enter
sbb
jo
daa
repz
in
jnp
stos
push
or
add
roll
pushf
xchg
lods
lahf
jmp
in
mov
addr16
imul
das
and
rcrl
mov
add
bound
sub
idivl
jmp
xchg
movsl
jno
cwtl
movsl
jo
cmp
lahf
lcall
add
push
jbe
data16
pop
mov
aam
jge
cmp
sub
icebp
mov
add
sub
add
push
push
and
adc
arpl
andb
xorl
mov
test
adc
jae
cmp
ja
sub
jo
sub
pop
popa
cli
xchg
and
filds
lds
lods
cmpsb
cmp
outsl
mov
je
stos
nopl
shll
dec
or
sbb
dec
mov
fcmove
dec
dec
test
cmp
xlat
and
add
test
dec
mov
sbbl
cmc
push
dec
je
push
popf
adc
or
int3
addr16
pop
stos
arpl
fdiv
xchg
jbe
adc
int
push
leave
xchg
mov
gs
aaa
into
sub
aaa
mov
sub
and
xchg
enter
testb
push
mov
dec
or
or
scas
mov
inc
and
stos
push
push
cmp
rcr
divb
aad
int3
dec
xchg
stos
std
push
pop
scas
jno
and
das
mov
rorl
sbb
in
in
dec
xor
shl
push
pop
andb
rorl
adc
aas
mov
push
dec
fs
jge
pop
outsb
cmp
int3
add
inc
lock
orl
push
out
mov
mov
inc
adc
cmp
xchg
in
loop
push
or
and
inc
inc
cmp
mov
dec
cwtl
pop
mov
lods
push
jle
lods
aas
in
and
or
mov
insl
in
fimull
push
adc
nop
and
ret
iret
push
pop
ljmp
or
xchg
addr16
adc
xchg
jp
test
add
movsb
std
addr16
fmuls
jmp
mov
lret
mov
in
es
sbb
jnp
sbb
jge
out
lds
jb
mov
cmp
xor
dec
loope
scas
rorb
mov
jl
or
negl
mov
adc
daa
adcl
movsl
jp
sbb
xchg
cli
lret
ficompl
fldt
in
dec
cltd
push
aad
mov
push
inc
jne
push
dec
mov
and
cmp
cmp
std
cmpl
mov
sbbl
subb
mov
push
test
push
outsl
mov
mov
rep
push
sbb
inc
mov
adc
pop
pop
addr16
sub
popf
mov
mov
aaa
nop
jb
push
and
cmpsl
int3
aad
movq
rcrl
push
test
fdivrl
push
cmp
mov
rclb
ja
stc
out
add
and
fildll
mov
mov
mov
cltd
cmp
lcall
or
and
call
mov
shrl
pop
sub
push
mov
repz
bound
cmp
scas
mov
test
push
xchg
out
hlt
clc
adc
imul
mov
push
inc
lahf
lret
fdivr
insb
in
cwtl
out
movsb
jle
imul
rclb
cmpsl
mov
cmp
std
cltd
clc
outsb
scas
sbb
sbb
nop
in
push
popa
or
test
negb
pop
sub
push
iret
ja
hlt
sbb
cmp
imul
in
mov
insl
jmp
adc
les
push
or
pop
push
shlb
aad
subl
shl
subb
test
fcmovb
sub
sub
mov
sbb
push
sti
fsubrl
icebp
jmp
lea
add
loopne
aas
mov
cmp
cmpsl
fsubrs
mov
mov
push
push
cmp
daa
adc
aas
loop
push
sbb
jge
xchg
nop
lock
jb
sbb
push
or
xchg
nop
pushf
aam
into
mov
stos
push
call
sahf
adc
std
jmp
adc
das
jnp
lahf
fidivs
and
push
and
push
or
std
inc
enter
inc
mov
imul
popa
mov
push
gs
add
and
dec
bound
xchg
imul
insb
je
jl
jnp
ret
add
notl
mov
pop
sbb
cli
gs
adc
push
inc
or
negl
jno
insl
imul
aad
or
call
push
mov
in
addb
jb
sub
aaa
imul
pop
xchg
sub
or
stc
pmaxsw
xchg
js
jp
sbb
sahf
dec
addr16
out
mov
or
daa
mov
inc
mov
mov
dec
pop
ja
push
stc
lds
test
jae
adc
fisubrl
out
dec
xchg
xor
mov
out
and
mov
nop
bound
popl
out
or
and
jp
mov
fldenv
jno
in
jecxz
push
push
mov
sar
mov
sbb
cld
inc
mov
and
decl
pop
fwait
mov
fsubrs
out
adc
mov
das
and
ret
and
fs
les
in
out
in
jp
cwtl
clc
add
jns
lock
cmpsl
sti
and
cmp
mov
push
add
dec
mov
sub
mov
xchg
push
cs
cmp
pop
shll
addr16
ret
in
repnz
pop
dec
adc
test
dec
jbe
insl
addb
cs
insl
mov
pop
or
test
adc
adc
or
stos
out
leave
add
ljmp
pop
lock
sbb
aam
inc
pop
arpl
dec
xchg
arpl
int3
out
adc
repz
loope
ds
fcmovnu
ss
lahf
mov
xchg
mov
xor
push
fs
lret
inc
repnz
xchg
ja
jl
dec
sbb
or
sar
mov
popf
lea
mov
mov
sti
add
ret
jge
daa
lods
inc
xchg
push
loopne
jp
lods
popf
shrl
je
in
mov
sbb
leave
or
cltd
push
adc
test
adc
jge
in
add
iret
jg
xchg
cmp
icebp
xor
in
sub
enter
cmp
mov
adc
hlt
mov
negb
pop
addl
ds
ret
imul
push
pop
cmp
aam
iret
sbbb
jl
dec
insl
cmp
sbb
cld
das
jo
cmp
scas
cmp
std
cmp
push
dec
into
xchg
dec
push
or
pop
pop
cmpsb
lahf
in
add
and
mov
cltd
iret
insl
cmpsb
data16
fildll
into
loop
clc
loope
bound
cmp
xchg
jecxz
cmp
jno
out
dec
inc
bound
push
dec
cmp
mov
test
popf
les
imul
mov
mov
pop
mov
cmp
jge,pn
push
movsb
or
dec
ljmp
scas
push
in
mov
xchg
xchg
inc
adc
outsl
nop
rcr
or
lea
mov
popa
and
aad
negb
das
ss
test
xchg
sbb
inc
gs
sbb
inc
rcrb
push
incl
mov
push
movsb
and
inc
fsubr
popf
cmp
repz
jecxz
add
pop
nop
mov
mov
hlt
out
sbb
xchg
dec
xchg
ret
or
ror
loop
inc
or
insb
imul
mov
in
xchg
adc
or
sbb
ret
fnstenv
movsb
mov
pop
daa
pop
mov
adc
lds
add
mov
fmull
fidivl
sub
sbb
mov
pop
lea
pop
lock
jnp
mov
sbb
rolb
test
test
jns
int3
lahf
jge
pusha
sbb
cmp
aaa
int
mov
cmpsb
leave
sbb
jmp
mov
test
cs
sti
out
xlat
pop
push
pop
mov
stos
insb
cmp
jb
mov
cld
push
xor
dec
in
jae
jl
bound
mov
jbe
pop
stc
cs
lcall
mov
jno
fdivrs
mov
inc
cmc
dec
lods
mov
inc
pop
or
movaps
xor
outsl
mov
in
outsl
cmp
push
sub
adc
dec
lock
xchg
ret
enter
xor
repz
add
stc
cli
push
sub
aas
dec
test
popf
push
in
xchg
xchg
xor
add
dec
outsl
in
push
jnp
sbb
dec
js
es
jg
push
in
push
xchg
outsb
sub
mov
adc
ljmp
jae
sti
bound
or
and
into
ret
adc
add
scas
pop
out
mov
aam
cmp
popf
mov
rorb
sbb
adc
cld
or
rol
xchg
mov
jo
test
and
ljmp
scas
pop
outsl
push
lock
sti
adc
push
add
enter
int3
dec
mov
loope
mov
ds
mov
fcmovnbe
icebp
rep
jmp
jge
sbb
out
cmpsb
mov
sub
pushf
xchg
dec
dec
nop
int3
inc
jl
cmpsb
mov
imul
ss
divl
cmp
pop
push
xchg
add
and
mov
inc
push
iret
fiaddl
mul
das
fcmove
cs
push
cmp
lret
popa
inc
fcmovnbe
add
icebp
gs
or
orb
fbld
mov
mov
or
lds
rcl
clc
mov
ja
mov
mov
cs
outsb
jl
mov
stc
call
clc
ficoml
je
inc
mov
adc
cwtl
add
mov
je
div
mov
inc
fistps
mov
in
cmc
pop
scas
push
insb
ffree
ret
cmp
movsb
and
out
dec
adc
and
push
out
adc
inc
aad
push
out
lods
and
cmp
and
jg
mov
xchg
push
mov
popf
mov
test
adc
adc
xchg
imul
out
dec
sub
dec
clc
jg
insl
xchg
fldt
icebp
mov
push
rcrl
mov
out
lcall
sub
sbb
jmp
sub
or
les
jge
es
cmp
sub
xor
inc
add
out
call
sbb
mov
jb
vmovaps
jb
mov
xor
pop
mov
fnsave
stos
scas
ds
lds
movsb
sub
xor
outsb
mov
push
dec
jnp
movsl
imul
xor
in
loope
mov
jp
inc
add
movsl
int
icebp
and
cmp
mov
es
inc
mov
in
pop
fstl
ficoms
cmp
xchg
cwtl
pop
mov
outsb
sbb
pushf
and
pop
loope
sbb
cmc
cltd
and
xlat
outsb
xchg
inc
xorb
xchg
push
shl
push
jb
test
xor
adc
aaa
aas
testl
xchg
jecxz
cmc
test
and
in
unpckhps
inc
adc
dec
lcall
pop
pop
jb
pop
cmpsb
hlt
adc
insb
daa
imul
out
in
rcrb
rorl
call
and
mov
adc
mov
xor
movsb
shl
cmp
enter
cmp
enter
addl
cltd
js
shl
inc
daa
inc
push
cmp
or
adc
mov
push
std
or
in
push
maskmovq
negl
adc
sbb
mov
hlt
mov
pushf
aaa
rcrb
aas
rorl
daa
scas
xchg
negl
push
add
movsl
jmp
cmc
adc
andl
mov
popf
sbb
in
adc
sbb
or
xchg
jo
inc
sub
movsl
jb
inc
cmp
mov
stos
mov
xchg
jmp
adc
or
inc
adcl
push
jae
mov
dec
push
in
mov
push
sub
repnz
movsl
inc
push
jge
enter
dec
rcrl
mov
adc
cmp
lret
movsl
out
jle
pop
imul
mov
xchg
or
out
out
pop
and
xchg
fistl
mov
cmp
jge
push
push
cmpsb
sarb
xorl
movsl
dec
xchg
or
es
scas
pop
fwait
stc
gs
jae
addb
loopne
andl
je
rcl
mov
test
xchg
inc
into
pop
push
sub
ja
test
dec
in
addr16
iret
es
and
push
ljmp
shrl
jmp
dec
xor
xchg
rol
pop
lahf
inc
pop
fstpt
push
out
lods
push
clc
mov
lods
mov
cmp
and
adc
jmp
bound
subl
stos
push
insl
mov
push
mov
xlat
fldl
popa
inc
cld
hlt
xchg
push
sbb
sbb
sbb
or
cmp
lret
arpl
add
mov
fisttpll
pushf
hlt
or
jae
sahf
jmp
sbb
or
sbb
mov
mov
jge
shr
test
add
int3
add
pop
add
or
mov
add
repz
insl
ret
sbb
cwtl
xchg
int3
out
xchg
mov
ljmp
mov
sub
mov
adc
pop
fs
clc
int3
mov
mov
push
and
push
dec
test
mov
cld
lods
cmp
int3
imul
mov
mov
cmp
or
jnp
push
fsubp
push
dec
jae
shr
cmp
or
mov
pop
dec
xchg
add
xchg
sub
add
ja
dec
cmp
cmp
in
jecxz
sbb
imul
stc
test
adc
xor
cmp
cwtl
popa
scas
mov
add
cmp
pop
adc
inc
dec
stos
dec
lods
pop
jg
pop
jge
dec
xor
inc
filds
cmpsl
or
lods
inc
mov
jnp
push
loopne
sbb
add
fwait
out
sub
loopne
out
pop
stc
sbb
xor
sub
cld
int
insb
cmp
pusha
jnp,pn
push
inc
lods
shr
pop
and
andl
stos
inc
loope
das
popf
cmp
leave
orl
les
lods
in
popf
int
sbb
sbbb
cmp
ret
out
or
sbb
and
sbb
mov
adc
repz
pop
dec
addb
xor
aas
lods
fsubrl
pop
bound
in
add
jb
test
sahf
leave
push
cltd
xchg
cli
inc
xchg
mov
cmp
std
fisubrl
icebp
mov
mov
jae
scas
push
xchg
mov
and
test
dec
lea
lods
arpl
xor
sub
outsb
dec
xor
push
mov
ret
imul
mov
cmp
sbb
sub
push
jle
xchg
lret
mov
push
ret
mov
cmpsb
lock
loopne
ds
loop
xchg
lods
ljmp
xchg
fistl
and
xchg
fstpl
les
and
sub
jo
cmp
or
rorb
xchg
push
lds
lods
sbb
lock
mov
movsl
mov
sub
jp
push
or
sbb
nop
jns
or
int3
or
push
ljmp
adcl
and
jne
into
push
pop
sub
loopne
mov
rcr
lds
jne
sbb
cld
bnd
jle
mov
fs
aas
or
out
adc
inc
fdivs
daa
sbb
cwtl
rorb
sub
adc
add
sbb
mov
sbb
dec
sbb
mov
mov
adc
sub
stos
mov
cmp
cmp
fmull
rcl
rclb
scas
and
in
xchg
inc
xor
pop
push
std
lods
mov
insl
dec
cmp
cmpsb
stc
lock
faddl
in
jb
sti
jns
in
cmpb
mov
lret
sbb
cmp
inc
adc
andb
cmp
in
jo
in
inc
cwtl
pop
lea
xor
pop
or
jp
lock
dec
mov
adc
xor
sti
pop
cmpsb
add
loop
pop
jno
push
leave
xchg
mov
fists
xor
push
sub
testl
mov
xor
mov
cmp
mov
fst
or
mov
mov
mov
pop
insb
inc
mov
pop
push
and
adc
cmp
lock
mov
hlt
and
negb
sub
push
fwait
sbb
push
add
adc
sbb
xor
movsl
xor
xchg
in
jmp
mov
xchg
sub
lea
pop
les
fld
lock
push
mov
sbb
std
not
neg
cli
pop
test
stos
pop
gs
mov
in
cli
ret
pushf
cmp
sub
xor
popa
pop
lahf
xchg
jnp
pop
iret
outsb
fcompl
call
jo
dec
xchg
inc
outsl
mov
mov
xor
sub
mov
cmpsl
xor
pop
les
testl
jo
xor
jecxz
dec
outsl
and
inc
mov
incl
sbb
aaa
inc
sbb
push
and
out
ffreep
pop
idivb
dec
mov
push
xchg
call
pop
insl
add
adc
xor
gs
push
ds
xor
lret
ret
cmp
adc
pop
test
int
pushf
xchg
jo
outsb
stos
sub
add
and
cmp
call
and
mov
ss
pop
add
mov
insl
icebp
inc
jle
xchg
push
sub
in
test
sbb
push
jae
test
fisubrs
xlat
in
rcll
xchg
sub
sbb
cmp
jb
rcrb
push
and
lret
dec
int3
mov
jecxz
mov
repz
sarl
sbb
dec
mov
daa
pop
add
nop
into
adc
jge
xor
popa
and
or
mov
mov
mov
inc
test
adcl
call
inc
add
mov
aam
fwait
add
sub
inc
cwtl
std
sub
pop
dec
out
add
lret
test
lods
xor
scas
fildl
adc
cmp
iret
dec
pop
and
pop
out
std
test
div
arpl
push
mov
pop
repz
sub
push
adc
xor
push
mov
mov
je
cwtl
push
stos
jno
dec
or
mov
or
mov
test
push
pop
jo
xlat
inc
and
cltd
push
loopne
loope
flds
outsb
cmpsl
cmp
out
ret
pop
mov
add
mov
ficomps
dec
xchg
push
aad
cmpsb
test
in
insl
fistps
out
mov
pop
mov
addr16
fdecstp
push
divb
sbb
lock
mov
xlat
mov
or
test
int3
xchg
std
dec
rcr
aad
fdivrl
mov
call
lcall
or
jbe
gs
cmpsl
daa
cmc
sub
notb
add
push
fwait
add
ja
add
dec
sbb
xchg
sti
or
stos
test
lret
dec
scas
mull
fimuls
sub
jae
rcr
pop
cmpsb
cli
cmc
mov
loope
mov
jp
mov
fwait
mov
aaa
sub
push
or
shlb
sub
or
testl
add
aaa
lods
sahf
inc
or
movsl
push
fwait
shlb
test
inc
loop
inc
cmp
cmpsl
inc
and
loope
inc
mov
cmpsl
test
pop
pop
cmc
xchg
daa
mov
mov
cmp
outsl
fwait
lahf
xor
sbb
ds
adc
pop
sub
xor
pop
cmp
cld
aam
add
cmpsb
les
or
ds
ds
jnp
sti
rcrb
ret
jae
cmp
decb
outsl
dec
into
dec
adc
add
inc
addr16
lock
dec
push
or
icebp
andb
ljmp
std
mov
jbe
cmpsl
pop
pop
sbbb
jmp
add
repnz
mov
push
adc
xlat
cmp
mov
xchg
xlat
icebp
cmp
jno
in
fisttps
xor
jp
aas
aam
ret
cwtl
or
mov
adc
call
sbb
jmp
push
pop
add
xchg
popa
ret
cli
push
cmc
subb
sbbb
je
push
and
out
cmc
fs
fiadds
sbb
repnz
cmp
out
repz
insb
aaa
and
fmul
xor
rorb
jae
fbld
push
adc
inc
mov
adc
fdivrl
pop
mov
cmp
out
adc
in
push
xor
ljmp
fidivl
xchg
jo
std
lea
and
in
or
xchg
cmpsb
mov
push
mov
jns
pop
cli
xor
push
push
in
pushf
pandn
jnp
pusha
cmpsl
ret
add
imul
fwait
out
xor
pop
scas
sub
adc
xlat
inc
sub
xchg
in
mov
lret
test
jns
jge
outsb
aad
cmp
ret
jbe
lret
not
jo
cmp
or
mov
mov
enter
fs
enter
mov
das
dec
push
out
adc
adc
fs
fnstcw
or
push
sbb
cmp
xchg
es
or
cmpsl
cltd
adc
mov
outsb
sbb
inc
mov
jge
cmp
cmp
frstor
pusha
mov
inc
fistl
sub
push
jnp
cmc
dec
cmp
sub
xor
fcmovb
jl
das
fwait
rclb
inc
mov
filds
push
and
pop
pop
loopne
leave
and
call
sbb
pop
rcll
mov
das
jecxz
fisubl
mov
xor
dec
fmull
scas
inc
jae
inc
pop
aam
jbe
jge
fs
sub
outsl
cmpsl
insb
mull
push
sbb
fsubrl
jmp
cld
sbb
cmp
call
mov
or
xorb
ret
xor
ds
push
mull
in
mov
pop
lret
push
bound
out
cmpsb
xor
call
pusha
out
fs
fdivs
sbb
ss
ja
xchg
popf
mov
jb
nop
jbe
and
imul
sub
xchg
mov
pop
xchg
adc
xlat
mov
mov
lcall
idiv
push
ja
xor
addr16
or
push
pop
or
aaa
cmc
mov
add
or
es
bound
push
mov
and
dec
ljmp
sub
dec
jp
sub
pop
or
pop
or
fstl
aas
movsb
inc
xchg
inc
loop
add
rclb
jo
popa
enter
adc
pop
orb
or
add
fistpl
imul
pop
out
cmpsb
daa
loope
lret
sub
int
pop
notb
std
rcl
cmp
or
test
andl
imul
push
xor
xchg
dec
ja
xor
test
sti
push
out
add
xchg
mov
jae
mov
clc
push
sahf
jle
xorl
push
or
mov
jp
jmp
fildll
jo
mov
mov
and
sub
dec
mov
xor
sbb
mov
push
mov
cwtl
jae
ljmp
sbb
sub
inc
cmp
mov
jne
push
add
bound
push
cmp
xchg
mov
loope
mov
jge
scas
sahf
lods
inc
push
xchg
push
ror
xchg
cmp
divl
and
and
std
sahf
cmc
inc
scas
push
pop
xor
dec
sbb
jbe
aad
inc
dec
scas
sbb
cmc
or
or
mov
outsb
xchg
xchg
sub
add
xchg
mov
pop
sbb
push
pop
lret
jo
jge
pop
mov
ffree
outsl
jg
or
stc
lret
ljmp
jg
push
clc
loopne
or
push
and
xchg
mov
mov
dec
lret
jbe
faddl
aaa
sbb
pop
insb
mov
lods
mov
mov
add
fcomip
into
insl
jne
je
les
xor
orb
xor
scas
aas
adc
das
cmp
mov
aad
and
shll
and
aas
pop
or
xchg
push
or
ret
and
mov
push
jae
inc
cmp
mov
xchg
icebp
mov
jb
cltd
jmp
test
aam
sbb
jbe
push
mov
fld
mov
lds
mov
cmp
pop
xchg
jno
cmp
push
xlat
rorl
jns
jae
add
pop
jmp
dec
loope
sub
sbb
xchg
adc
inc
dec
adc
inc
or
bound
fsubl
je
lret
sbb
dec
cmpl
jmp
outsb
mov
shll
dec
mov
pop
int3
bound
das
lahf
fldenv
mov
dec
fisubs
jo
pop
add
fildl
es
dec
push
mov
int3
dec
xchg
push
aad
ds
mov
divl
ja
and
imul
mov
adc
scas
mov
je
rorb
mov
mov
sahf
sbb
testb
les
mov
insl
nop
test
pop
pop
ljmp
pop
or
test
jbe
mov
mov
pop
mov
cmp
arpl
add
cmc
push
mov
xchg
outsl
popf
cmp
js
lahf
adc
in
into
iret
jl
or
xchg
es
jno
in
xchg
cmp
outsl
addr16
daa
dec
cs
test
ja
add
or
inc
sub
into
mov
lret
jne
cmc
daa
addb
pusha
xchg
jno
test
jno
in
jnp
pop
dec
add
mov
call
mov
and
jle
nop
dec
test
std
stc
test
fdivl
mov
lret
mov
mov
mov
insl
mov
mov
push
pop
and
inc
es
adc
dec
mov
inc
adc
mov
aaa
cmpsl
pop
dec
push
mov
gs
in
jmp
cwtl
in
mov
outsl
lcall
stc
lods
mov
xor
jo
hlt
xor
inc
test
mov
jmp
cld
inc
add
jecxz
call
sahf
incb
mov
aam
and
loopne
lret
mov
add
mov
push
test
mov
xor
in
push
fisttps
or
xchg
stos
sub
mov
sahf
mov
subb
inc
dec
pop
repnz
jge
sbb
add
inc
and
mov
adc
mov
repnz
clc
test
xchg
lcall
popa
mov
imul
dec
test
adc
pop
nop
mov
and
mov
mov
imul
mov
js
setp
pop
pop
mov
mov
sub
inc
mov
pop
subl
dec
push
scas
js
sub
cli
jg
or
and
cmp
adc
or
cwtl
mov
gs
dec
and
jl
jl
push
mov
lret
cs
adc
and
dec
jp
test
mov
insl
mov
jbe
and
jmp
mov
data16
test
sahf
das
rcrl
inc
mov
mov
xchg
adc
daa
or
and
ss
push
or
mov
mov
adc
and
test
push
xchg
nop
mov
xchg
shrl
ss
fcoml
pop
repz
xor
scas
or
int
pop
sub
in
leave
xor
jl
popa
or
cmp
sub
ret
int
lock
sub
insb
adc
jecxz
dec
std
mov
push
es
push
out
mov
ljmp
jo
cmp
test
out
dec
pop
or
dec
icebp
fprem1
scas
wbinvd
les
scas
lret
push
into
pop
push
xor
insl
adc
and
push
jnp
addr16
xor
aad
sbb
mov
add
mov
mov
mov
mov
and
popa
dec
cmp
orl
idivl
into
jb
fisubs
pop
mov
add
adc
xor
imul
mov
shlb
adc
test
ja
mov
inc
jp
mov
rcll
cltd
xchg
arpl
jno
insb
or
cmp
inc
mov
cs
arpl
arpl
inc
pop
mov
mov
push
ret
add
popf
add
shrl
popf
mov
cli
cli
rcr
pop
rolb
jmp
jae
jl
enter
enter
add
ja
xchg
insl
xchg
jmp
push
sbb
and
add
xchg
push
dec
xchg
lretw
mov
cld
stc
test
outsb
popf
sbb
and
dec
les
je
aas
imul
fnstsw
mov
push
push
adc
or
jne
lods
fldenv
imul
in
and
cs
push
rcl
or
in
inc
cld
outsl
addr16
or
fstpl
mov
jmp
sbb
add
out
mov
loop
gs
imul
dec
sbb
xor
and
shlb
daa
mov
cmp
andl
aam
cmp
sub
ja
xor
sub
aas
cmc
push
scas
clc
push
adc
mov
sar
sahf
hlt
adc
lret
inc
push
rorl
lods
sub
lock
xor
and
adc
mov
fsub
dec
jne
mov
push
and
test
push
jmp
mov
mov
pop
bound
adc
push
scas
popl
stc
xchg
or
xchg
or
lds
push
aaa
mov
nop
and
outsb
hlt
xor
xchg
and
pushf
out
addr16
xchg
dec
sub
pusha
push
outsl
lods
xor
xchg
aam
dec
scas
mov
mov
pop
jae
sbb
loope
jle
or
mov
lret
mov
and
pop
cltd
cld
mov
jnp
rcr
mov
movsb
ss
sub
dec
or
inc
aaa
add
cs
js
cltd
testb
imul
mov
pushf
in
dec
pop
inc
adc
adc
je
cmp
mov
daa
cmp
cmp
movsb
inc
dec
fdiv
rorb
fsubl
push
into
sbb
shr
out
out
test
cltd
inc
dec
sub
sub
inc
push
stc
push
and
jmp
stos
fs
jp
adc
and
pop
orl
leave
pop
push
cli
testb
repz
rorb
fmuls
adc
dec
pop
mov
pop
test
push
cmpsl
add
sti
mov
pop
je
stos
negl
or
add
push
arpl
jmp
fstl
inc
dec
cmpsb
ljmp
je
xor
pop
shll
inc
mov
mov
orl
es
push
fchs
sub
sbb
mulb
sub
adc
shlb
std
faddp
fcoml
cmp
out
xchg
loop
adc
andb
jg
mov
mov
imulb
xor
inc
call
dec
and
lds
shl
mov
int
stc
bound
imul
mov
add
lea
add
in
push
roll
shr
out
push
sub
add
pushf
pop
and
negl
dec
pop
adc
xchg
jge
xor
mov
mov
dec
cs
cmp
mov
and
aad
xchg
push
sub
or
cmc
aad
fwait
cmpsb
shlb
and
insb
push
cld
jp
ljmp
or
push
mov
pop
popa
ds
imul
es
jns
repz
scas
push
and
sarl
mov
cltd
loop
and
out
fsubrs
cmpsb
cmpl
dec
aas
mov
pop
in
mov
mov
cli
xchg
sub
and
jle
pop
scas
mov
aad
vandps
ljmp
shlb
mov
dec
jg
out
dec
out
dec
mov
push
pop
dec
mov
rcll
cli
xor
leave
jae
fnsave
andl
add
leave
xchg
sar
negl
loope
test
sbb
add
xchg
lahf
stc
fbstp
sub
push
xlat
out
cmp
aaa
sub
jg
xchg
sub
aas
rcr
pushf
notl
mov
int
clc
ret
cmpsl
cmp
sbb
xor
loopne
jo
pmaddwd
test
mov
cli
ret
cltd
data16
ret
xor
sbb
jp
rcrl
jo
lret
scas
mov
repz
xor
mov
push
or
jne
mov
out
pop
jecxz
scas
cmc
mov
es
imulb
mov
mov
mov
xchg
adc
and
xor
add
xor
enter
push
clc
mov
fmul
mov
inc
push
mov
inc
repz
rcl
pusha
orl
insb
mov
jne
sub
test
xor
mov
test
push
push
mov
dec
cmp
lods
xchg
js
sbb
mov
jecxz,pn
mov
mov
mov
cmp
dec
bound
jns
push
js
fisubs
push
test
xchg
push
mov
out
push
and
jmp
std
mov
mov
pop
add
lcall
pop
mov
and
mov
sub
jns
js
adc
test
dec
mov
inc
xchg
aas
cmpsl
jge
pop
test
mov
mov
psadbw
insb
imul
cmpsl
mov
insl
jmp
fwait
cmp
gs
add
dec
popa
daa
jmp
adc
pop
shlb
jge
jp
lea
pop
mov
mov
xchg
mov
add
dec
jecxz
xor
adc
imul
loopne
pop
dec
sbb
add
fstl
jge
aas
mov
lahf
negb
dec
in
mov
popf
call
xorl
arpl
cli
sarb
test
pop
jecxz
pop
sahf
mul
push
andb
jne
stos
cmc
arpl
pusha
mov
dec
mov
js
adc
cmp
test
ja
rorl
push
dec
into
fidivrs
xchg
adc
dec
and
push
lcall
lods
cwtl
add
fcomps
inc
push
imul
push
mov
rorl
testb
loop
fnstcw
xor
cmc
or
or
repz
mov
addb
scas
push
adc
rorb
add
mov
daa
aad
xchg
cs
push
cmp
in
addb
loop
mov
pop
loopne
nop
adc
fcomps
inc
mov
in
sbb
pop
imulb
adc
mov
xor
mov
hlt
stc
xchg
mov
mov
push
or
and
out
mov
or
push
outsb
dec
sbb
jno
push
adc
and
sbb
xchg
daa
mov
or
sub
mov
push
movsb
sbb
fnsave
or
icebp
aad
fisttpll
or
sub
adc
pop
lds
dec
sbb
test
sub
xchg
in
aad
in
inc
sub
sub
sbb
ds
xchg
aas
sti
daa
js
mov
dec
sbb
mov
test
mov
inc
out
mov
std
mov
ret
push
and
mov
pop
lea
enter
jo
iret
repnz
pop
mov
rcl
pop
and
jl
imul
mov
jge
mov
or
or
pop
jmp
push
mov
mov
add
in
pop
xchg
cs
call
sahf
jecxz
jecxz
push
push
lock
and
or
shrl
jne
outsb
rcl
dec
sahf
mov
sti
repz
push
ret
or
outsl
leave
jo
mov
cmp
popa
ljmp
lods
add
pusha
insb
sub
enter
in
pusha
sub
jg
fnsave
mulb
inc
push
xor
mov
fidivrl
add
addr16
adc
hlt
pop
int3
lret
adc
sti
mov
add
mov
insl
clc
inc
inc
inc
xor
mov
sarl
pop
jmp
out
lods
test
ret
adc
ret
rcrb
iret
lret
fstpl
out
sub
icebp
sbb
shll
sbb
xchg
push
std
aad
push
pushf
and
dec
cwtl
lock
call
pop
cmp
mov
xlat
aad
cmpb
jne
add
pop
lahf
jecxz
jmp
dec
gs
adc
mov
sbb
fbld
and
clc
mov
adc
rclb
sub
inc
xor
shrb
cmpsl
rcl
ret
frstor
push
cli
jl
rcrb
ret
cld
sbb
jge
xor
inc
es
or
and
dec
sub
std
dec
lods
test
rorl
shrb
cltd
imul
and
mov
and
addr16
rcrb
test
mov
jnp
and
mov
xor
cld
cmp
daa
stos
pop
mov
adc
fdivs
push
jbe
add
dec
es
shrb
xor
ror
lcall
adc
and
bound
aam
dec
cmc
cli
mov
xor
mov
fnstenv
int3
jnp
aas
sub
mov
pop
sub
add
pop
je
lahf
iret
and
adc
add
lea
fmull
lods
ljmp
cli
loop
test
clc
adc
icebp
dec
lea
push
inc
adc
jp
lods
add
icebp
xchg
add
sarl
jb
and
enter
pop
fisubrl
inc
dec
imul
add
cwtl
je
ljmp
mov
mov
pop
dec
and
popa
fimuls
sub
pop
mov
dec
imul
stos
xor
or
lahf
add
jae
add
jecxz
rolb
add
push
xchg
imul
dec
mov
xchg
push
loop
std
cs
iret
filds
sbb
cmp
pusha
dec
push
and
push
fldcw
lret
mov
push
jno
dec
ja
repz
movsl
cmc
sbb
adc
sub
inc
and
adc
shll
pop
mov
cld
std
dec
lds
add
sbb
lret
dec
outsb
inc
leave
fistpll
scas
cmp
test
mov
rcrl
call
arpl
test
cs
mov
pop
mov
stc
repnz
dec
movsl
arpl
mov
fidivrs
xor
fwait
or
mov
frstor
xchg
adc
aas
mov
in
or
dec
pop
into
sbb
sbb
in
jmp
pop
lahf
mov
out
in
add
lret
test
aaa
mov
mov
out
int
cld
iret
rolb
inc
stos
sbb
pop
bound
popf
out
xor
sbb
and
out
pop
mov
sti
xchg
fidivrs
ret
sbb
pop
int3
xor
add
in
cmp
pop
scas
sub
addb
stos
insb
adc
add
inc
mov
arpl
lea
push
loope
jl
lods
aam
mov
or
leave
int3
mov
std
cmpsl
add
mov
ss
data16
jae
lds
out
decb
sbb
sbb
mov
ror
push
mov
pop
pushf
dec
mov
ljmp
fcmovb
mov
shlb
mov
repnz
mov
lods
hlt
jge
shl
xchg
out
add
bound
les
mov
push
lock
scas
jo
dec
jno,pn
inc
loope
mov
and
fmul
mov
mov
popa
cmp
addr16
push
dec
mov
lods
jo
jle
test
daa
jo
cmp
push
out
into
adc
cli
push
push
repnz
sar
movsb
adc
mov
cld
mov
pop
pop
inc
mov
rol
jne
cli
sub
cli
pushf
xchg
adc
dec
adc
in
adc
stos
or
xlat
aaa
inc
add
xlat
cs
push
sahf
cmp
mov
xchg
vminss
loopne
mov
dec
scas
adc
call
xor
notl
xor
pop
adc
sub
imul
pop
jbe
cs
jmp
xchg
add
cmp
push
pop
mov
stos
hlt
xor
std
cwtl
cmp
cli
add
xor
cmp
call
mov
cmp
cmp
and
push
cld
jnp
movsl
gs
mov
add
lcall
bound
cmpsl
hlt
in
xchg
hlt
cli
mov
or
mov
cltd
sub
ficompl
arpl
or
fmuls
inc
ds
mov
xor
cmp
mov
into
je
cmp
cmp
test
or
into
xchg
xchg
cmpb
xor
or
jmp
pop
shll
ret
xorl
das
mov
movsl
pop
mov
mov
inc
lea
mov
fsubl
mov
cli
fildll
xor
adc
xchg
movl
ror
loope
int3
sbb
repnz
mov
clc
jle
sti
dec
sti
testb
sub
adc
iret
sub
or
lods
movsl
lds
dec
dec
add
pushf
sbb
adc
sbb
push
stc
fneni(8087
jge
fidivrs
les
test
arpl
push
cmpsb
in
push
pusha
sbb
movsb
sbb
jns
incb
xchg
mov
xor
and
insl
in
xchg
inc
mov
cltd
test
lcall
or
xor
int3
add
sbb
mov
ja
and
mov
sbb
inc
stc
xchg
push
cmpsl
push
shr
ret
bsr
icebp
aaa
sbb
jle
pop
fisttps
push
mov
out
mov
daa
pop
pusha
repz
scas
outsb
sbb
mov
scas
fsubrs
mov
push
mov
lods
push
xchg
push
push
inc
sbbl
mov
mov
and
jg
stos
inc
or
jns
sbb
shrl
push
xchg
fisttps
xor
mov
cltd
in
adc
cmpsl
mov
push
mov
cmp
inc
jmp
jae
and
sahf
bound
mov
fmull
mov
aaa
push
cmpsl
mov
xor
insl
in
and
inc
push
cmp
dec
push
and
in
ret
ret
xchg
mul
sbb
stc
pop
cmp
gs
inc
jbe
xor
daa
mov
inc
jo
xchg
xlat
pop
int
lock
cmp
aas
push
xchg
sbb
adc
repnz
test
les
mov
std
in
cs
es
leave
call
mov
and
out
out
aam
fwait
outsb
mov
cmp
idivb
inc
movsb
dec
mov
adc
hlt
mov
cmp
aam
fistpl
mov
xchg
mov
shl
paddb
lcall
test
mov
sbb
jecxz
xor
fisttpll
ror
lods
rol
pop
clc
sarl
test
addr16
lahf
loope
pop
insl
jl
out
dec
repnz
shrb
ss
jbe
mov
xchg
fisttpll
fwait
add
into
cli
popf
jmp
mov
mov
sarb
scas
mov
inc
adc
xor
enter
mov
pop
stos
fldenv
fidivs
mov
mov
sub
jnp
sbb
sbb
sti
mov
mov
aas
ret
addb
mov
or
pushf
cs
sub
xchg
imul
push
in
cmp
cmpsb
jne
ljmp
cmc
mov
aaa
mov
movsb
arpl
lods
dec
int3
es
daa
cmp
std
xchg
jb
push
das
insb
mov
mov
ja
pop
das
outsb
out
jecxz
pop
sbb
sub
push
or
cmp
sti
lret
mov
xchg
mov
sbbb
loopne
clc
cwtl
inc
loope
fcoml
sbb
test
daa
and
mov
pop
repnz
pop
in
cmp
mov
stc
stos
es
xchg
fisttpll
inc
or
xchg
iret
xor
jno
sti
cwtl
jmp
add
dec
push
pop
aas
cmp
xchg
ret
xor
je
cmc
fsubs
add
pushf
sbb
jmp
int
mov
imul
mov
aam
mov
cmc
lcall
xchg
adc
fstpl
or
xor
sahf
sbb
and
xor
adc
js
push
mov
iret
adc
enter
push
sub
in
xorb
in
mov
bound
int3
sbb
push
xchg
jle
repnz
daa
add
add
jecxz
mov
add
dec
xor
ret
int3
gs
test
jns
mov
mov
inc
jns
mov
fwait
movsl
lret
pop
neg
sbb
jbe
nop
imull
mov
xlat
into
sti
mov
aaa
mull
scas
rcl
mov
dec
xor
lahf
pusha
and
xchg
sbb
jle
pushf
push
stos
xchg
orl
jnp
pop
ss
je
inc
test
insl
xor
addr16
bnd
xor
xchg
lds
sub
mov
stos
and
sub
ret
mov
lods
nop
adc
cwtl
ljmp
xchg
out
subl
pop
adc
clc
jecxz
fisubs
add
int3
leave
and
pushf
xchg
jne
jae
cmpsl
adc
ss
sub
cmp
jle
xor
add
xchg
inc
cli
mov
sti
movsl
ret
fstl
mov
adc
out
pop
daa
jb
loop
arpl
xor
fdivl
pop
mov
cli
dec
loope
add
push
shlb
mov
movd
mov
inc
imul
mov
into
aas
xchg
in
insl
data16
rcr
xchg
fsubrs
cmc
cmc
xchg
dec
icebp
dec
mov
dec
pop
inc
outsb
sbb
sub
xchg
jecxz
lret
and
push
mov
pop
jl
fdiv
lret
xlat
movsb
adc
incb
mov
jecxz
or
dec
sub
fildll
pop
push
sbb
shll
xchg
jg
jnp
sbb
mov
or
mov
jecxz
dec
pop
pop
and
sbb
loopne
nop
out
insb
sub
mov
and
dec
ljmp
xchg
xlat
gs
data16
lret
sbb
dec
loop
xor
pop
call
pop
inc
cli
or
in
inc
in
cmc
cwtl
dec
gs
mov
je
les
sbb
out
cmc
cmp
lods
mov
int3
cli
and
popa
daa
inc
imul
adc
xor
lcall
aaa
or
je
lret
je
and
in
add
call
ret
jbe
enter
push
dec
call
cmpsb
pop
fsubs
addr16
jge
lock
js
clc
lret
and
adc
popa
sbb
and
dec
mulb
fadds
loop
repz
and
jne
adc
xor
add
andl
or
add
out
jp
pop
fstps
cmp
dec
je
mov
mov
xor
add
aad
divb
push
sbb
test
xor
js
or
fsubp
sub
jmp
push
insb
iret
xchg
stc
add
cld
stos
ret
pop
cwtl
clc
fistps
int
ftst
xor
pop
lret
aam
pop
jne
pop
lods
mov
xlat
pop
lea
dec
cld
outsl
inc
cmpsl
stc
sub
rcr
jmp
xor
outsl
xchg
rorb
xchg
mov
movsl
pop
pushl
lret
xchg
adc
dec
test
ret
popf
popa
icebp
nop
xchg
lret
mov
or
sbb
xchg
or
test
imul
das
jmp
aas
xchg
mov
and
fstps
sub
cwtl
mov
fnstenv
test
fwait
dec
inc
xor
in
rcr
cmp
mov
xchg
pop
pusha
pop
ret
sbb
rorl
cld
jecxz
xor
mov
imul
xlat
push
push
cltd
mov
test
mov
stos
dec
scas
jno
out
fistpl
mov
pop
jnp
or
shrb
and
push
mov
jecxz
mov
sbb
push
push
sbb
jno
pop
leave
std
and
rol
fsubl
or
ds
stos
lcall
subl
xor
mov
in
cs
add
xchg
aad
sub
xor
fdivl
scas
aas
ds
cli
rep
sub
xor
cld
lahf
scas
cmpb
fs
je
inc
jb
fisubs
sbb
sub
popl
scas
cmpsb
sub
cld
lods
loopne
les
dec
aad
ret
add
mov
sbb
pop
adc
xor
pop
add
push
in
inc
cmp
xchg
lock
and
sub
pop
jecxz
imul
sbb
movsb
cmp
or
aad
loopne
mov
xchg
pop
xor
cmc
test
nop
shr
xor
insl
std
push
fwait
les
or
pop
adc
hlt
and
mov
imul
lods
data16
pop
test
scas
aam
sbb
addl
mov
add
cmpsl
or
outsl
monitorx
jne
jb
scas
xchg
ret
dec
cmp
add
mov
jmp
lds
pop
xor
dec
das
adc
mov
in
imul
jno
mov
adcb
adc
inc
jle
inc
cwtl
xchg
das
mov
ret
jp
xlat
fst
fst
js
push
insl
insb
dec
mov
ljmp
fucomip
or
stos
add
cltd
add
sti
nop
sar
ja
push
xchg
roll
add
mov
enter
leave
sbb
ja
inc
mov
ret
pop
aas
mov
dec
or
sub
mov
dec
push
xlat
into
mov
adc
push
pop
pop
pusha
bound
push
jp
jbe
xor
inc
into
loope
add
or
mov
dec
shr
cld
cmp
outsb
outsb
inc
sar
xor
mov
fwait
cmpsb
js
pusha
cmp
sub
call
cmp
and
sub
dec
lahf
lret
les
setle
pop
int3
test
jo
aad
arpl
pop
and
sub
imul
cmp
arpl
int
out
mov
insl
pop
sub
pop
sbb
jnp
mov
data16
popa
les
test
movsb
fwait
xlat
int
movsb
fistl
ss
sub
mov
xchg
ss
cmpsb
and
nop
int3
filds
mov
or
jo
sbb
cs
cmpsb
je
lret
push
push
add
and
fimuls
xchg
mov
mov
iret
popf
test
push
lret
adcb
xchg
xchg
jecxz
mov
mov
cmp
add
pop
cmpsl
cmpsl
and
stc
in
xlat
sub
nop
pushf
scas
mov
mov
sbb
ficoms
mov
xorl
push
ret
mov
push
fdivrs
push
jecxz
push
mov
jne
pop
pop
sub
xorl
fstps
js
adc
inc
pop
fwait
dec
mov
hlt
xchg
mov
dec
adc
scas
push
fldl
mov
mov
int3
adc
push
cmc
cmpsb
mov
jp
out
push
mov
inc
lock
xchg
inc
arpl
enter
push
in
sti
cmp
sbb
and
sbb
jmp
mov
aas
loop
frstor
dec
sub
outsl
mov
aaa
cld
sbb
cmp
shl
pushf
imul
add
in
je
xchg
adc
push
faddl
call
inc
and
lret
or
mov
lea
mov
dec
adc
lock
push
rcrw
mov
adc
scas
aad
xor
and
fildl
and
cli
push
mov
mov
repz
popf
cwtl
mov
mov
mov
out
and
cs
cmp
lcall
in
sbb
rol
in
jns
mov
fsts
jbe
nop
cmp
insb
inc
push
repnz
leave
arpl
imul
xchg
fcmovnu
iret
mov
fdivrl
xchg
jo
jl
mov
and
loope
inc
push
addb
cmp
push
adc
sbb
aas
and
xor
fcoml
ljmp
mov
mov
std
sbb
pop
or
add
mov
in
cmp
and
xchg
lret
xor
push
in
bound
push
dec
inc
rcll
lock
scas
mov
mov
fs
les
mov
dec
jns
nop
push
out
pop
sub
movsb
into
cmc
adc
jno
and
cmpsb
and
jp
cmpsb
inc
sbb
sub
aas
loopne
xchg
aas
nop
sbb
cmp
inc
int
and
ret
sub
dec
add
lea
add
xorb
ja
mov
pop
out
or
xor
or
aas
xor
lret
push
mov
jg
push
lea
fstl
xor
iret
jbe
imul
xor
movsb
bound
mov
repz
pop
cwtl
dec
xor
adc
xor
fcoml
stc
outsb
imul
sarl
lret
call
jg
cld
cs
hlt
notb
test
ds
cltd
mov
mov
pop
and
push
shrl
in
in
jnp
mov
mov
dec
push
and
dec
mov
cld
fdivl
popa
add
or
adc
ljmp
leave
cmc
fdivs
inc
jg
cmpsl
add
inc
pop
pop
ljmp
testb
imulb
xchg
xor
fmuls
sbb
ja
cltd
je
adc
mov
inc
insl
insl
clc
mov
jae
adc
movsl
ret
push
push
std
push
push
aaa
mov
jbe
cmpsl
cs
xlat
movsl
cld
ret
xor
mov
dec
mov
sbb
push
leave
mov
fscale
es
loope
cltd
std
adc
and
pop
cwtl
jo
test
cmp
rcl
enter
cmpb
xchg
test
xor
push
push
negl
ficoml
jne
push
xor
pop
sbb
mov
jb
push
pusha
add
inc
pop
mov
fcoml
popa
arpl
movb
or
dec
jbe
push
mov
mov
push
mov
daa
dec
jle
int
call
xchg
mov
pop
fsts
dec
movsl
cwtl
xor
shrb
push
fnsave
testb
cmp
cmc
mov
pop
call
jae
mov
jns
cmpsb
arpl
std
ret
cmp
arpl
or
rcrb
pushf
add
sub
xchg
std
shrl
xor
xor
in
rorl
mov
jne
fidivl
jb
loopne
inc
movsl
sub
rorb
lods
push
aad
mov
sub
sub
jmp
out
repnz
dec
mov
xor
aad
mov
das
enter
jne
sbb
pop
popf
in
or
pop
bound
dec
xchg
push
and
lcall
xor
pop
test
push
outsl
xor
push
add
sahf
adc
or
add
stc
push
ja
pop
jge
xchg
in
dec
inc
test
ds
cld
gs
jae
adcb
mov
stc
stos
adc
imul
pop
push
sub
mov
sub
jnp
pusha
mov
inc
inc
inc
enter
dec
mov
xchg
loopne
cli
pop
or
in
fstp
insl
mov
sbb
inc
jmp
test
inc
nop
rclb
out
int
in
in
mov
and
cmpsl
gs
lcall
addl
pop
loop
xchg
add
sar
mov
push
mov
sbb
inc
out
lods
das
mov
jb
adc
cltd
popf
xchg
jl
jne
mov
or
ret
dec
dec
loopne
arpl
les
inc
cmpsl
adc
push
and
adc
sub
sbb
inc
add
dec
pop
adc
sub
jae
cwtl
push
adc
xchg
shll
pusha
es
insb
nop
mov
test
leave
dec
cs
popl
mov
sarb
sbb
insl
cld
das
mov
mov
sub
lds
ss
fs
sub
loopne
sahf
jae
pushf
lret
lcall
popf
rcl
add
push
call
imul
fistps
sahf
mov
or
jno
scas
lea
dec
xor
shrb
pop
ds
imulb
aaa
cmp
pushf
xor
cmp
sbb
push
sub
cmp
and
push
xchg
js
jbe
ret
mov
rorl
out
push
mov
call
mov
push
or
mov
ret
add
cmpsb
mov
test
arpl
dec
jnp
pop
in
push
mov
inc
lret
adc
fwait
outsl
pop
addr16
xchg
test
push
fbstp
fsubp
add
mov
inc
shrl
jecxz
xor
std
nop
xchg
les
jg
incl
insb
test
cld
mov
xchg
fildll
or
or
sbb
mov
pusha
push
jp
pop
fists
daa
dec
cs
negb
scas
repz
int3
cmp
push
nop
repz
mov
loopne
cld
adc
movsl
int
cltd
imul
leave
cmpsl
push
mov
cwtl
xor
xor
adc
hlt
mov
jo
mov
subl
push
add
xlat
lds
inc
or
jno
add
xchg
xlat
push
add
pop
ja
mov
mov
insb
cmp
sbb
or
mov
gs
add
loopne
and
dec
inc
cld
pop
sbb
mov
daa
sbb
or
fbstp
push
cmp
movsb
test
aaa
in
xor
cmpsl
mov
aaa
loope
mov
push
test
fists
pop
jg
shlb
jge
xor
subl
es
push
jne
xchg
cmpsl
cmpsl
dec
ljmp
pop
pop
or
dec
xor
dec
ja
sbb
cwtl
clc
in
add
xchg
popf
xor
and
das
push
and
out
mov
fildl
jg,pn
sarl
pop
xchg
pop
movsb
pop
lret
scas
cmc
into
call
stc
and
int
frstor
push
or
push
mov
and
daa
ror
es
leave
and
out
aas
insl
mov
loope
dec
sbb
pop
push
dec
mov
lds
or
in
aad
mov
ljmp
sub
cmp
ficomps
sbb
push
call
lret
inc
call
int
je
test
adc
jge
int
pop
dec
ds
xchg
pop
mov
fiadds
or
dec
ja
insb
mov
mov
mov
std
sbb
mov
cmp
fbstp
mov
mov
pop
mov
and
lods
sti
add
push
fs
xor
gs
xor
negl
rorb
sub
int
insb
std
ret
lret
mov
xchg
pusha
inc
fstpl
jp
jp
xor
rolb
pop
addr16
push
dec
out
xchg
lahf
ret
in
rcrl
imul
xchg
xor
outsb
mov
je
insb
popf
fistl
mov
call
jl
stc
int3
xor
inc
mov
ret
or
add
pop
fists
cmpb
stos
cmp
sbb
jmp
push
cmp
clc
mov
test
shlb
aas
call
inc
and
les
lcall
sbb
push
push
in
xor
cmp
outsb
fwait
sbb
pop
cmp
out
jnp
push
cmpsb
sub
out
push
pop
xor
jg
ret
insb
xchg
arpl
sub
mov
pop
jno
inc
mov
push
mov
add
jne
mov
mov
imulb
rcl
push
repz
or
dec
test
jo
mov
inc
and
movsl
bound
clc
sbb
aaa
iret
dec
rorl
test
dec
mov
sbb
adc
add
pop
inc
lds
arpl
mov
test
addr16
inc
push
gs
dec
test
test
insb
cmp
push
sbb
xor
sub
mov
pop
inc
cmp
cli
adc
fnsave
jnp
dec
and
ficoms
and
mov
add
mov
add
and
loopne
jae
pusha
jg
pop
je
sub
pop
jecxz
lret
pop
jecxz
dec
shll
jo
andb
push
push
jge
push
out
mov
mov
cwtl
int3
sti
mov
pop
test
and
push
pop
dec
and
lret
dec
aaa
out
in
fsub
repnz
cltd
push
xchg
leave
imul
jge
jne
enter
dec
ret
mull
mov
mov
mov
push
in
xchg
inc
mov
aad
jp
inc
lcall
jg
ret
pushf
pop
stos
jl
adc
jo
repnz
out
jbe
nop
xchg
mov
mov
mov
pop
push
cmp
cmp
stc
mov
xor
aaa
insb
add
scas
sbb
in
stc
jl
pop
addr16
jno
pop
adc
jno
inc
notb
rcl
pushf
dec
add
out
jbe
push
add
add
loope
dec
cmp
out
js
repz
je
add
aam
nop
sub
xchg
ret
cmp
orb
xchg
cmp
mov
sub
icebp
jnp
xchg
and
nop
and
adc
push
adc
cmp
inc
movsl
jg
rcr
cwtl
push
and
inc
xor
shrb
stos
cmp
addl
outsl
sub
add
pop
sub
pushf
or
add
in
ror
ret
int
inc
mov
dec
sar
ja
ret
add
cltd
popa
pop
inc
outsb
mov
and
or
and
enter
lock
scas
push
ja
xlat
mov
repnz
jns
xchg
mov
out
push
adc
scas
mov
les
push
and
and
inc
add
fbld
mov
xor
dec
sbbl
push
stos
mov
fimuls
push
idivl
ss
jo
lcall
mov
fistps
push
push
sti
lds
inc
cmc
popf
lds
or
test
mov
inc
testb
jmp
adc
ret
pop
xchg
dec
dec
adcb
rcr
xor
or
pop
mov
in
mov
or
loope
out
adc
jbe
fidivrl
sar
popl
sbb
roll
cmp
and
xchg
scas
outsb
inc
or
mov
scas
inc
push
and
adc
cli
and
or
xchg
inc
mov
sbb
or
fxch
sbb
mov
movsl
pop
es
and
popa
das
in
or
xor
js
mov
cmp
sahf
dec
inc
insl
clc
jno
and
cltd
push
mov
repz
pop
addr16
jns
pop
sub
fsts
pushf
shl
inc
or
mov
insl
or
js
adc
dec
add
mov
pop
and
mov
ficomps
cmp
shlb
xor
outsl
jae
push
insl
dec
cmp
es
js
jae
cmp
lds
popf
dec
bound
out
push
xchg
jecxz
adc
test
add
nop
mov
push
aam
pop
fnsave
xlat
xor
pushl
pushf
lret
ret
mov
arpl
mov
mov
call
lds
or
push
inc
stc
ret
pop
xor
pop
jg
sbb
shll
ror
xchg
cmp
js
movsb
testl
out
mov
fsubp
je
add
call
jo
lcall
inc
sub
cmp
xor
outsb
pop
xlat
sbb
pop
sbb
mov
push
sub
stc
sti
shlb
ficomps
cltd
mov
xor
xchg
arpl
lret
in
out
xor
xor
es
mov
int
rclb
xchg
in
out
out
pop
mov
int3
pop
test
inc
ss
xor
cwtl
repnz
dec
leave
lahf
xchg
mov
aam
fadds
fcomps
inc
push
les
js
mov
out
daa
in
dec
stc
mov
rcr
cmp
adc
pop
rcrl
jp
addr16
sarb
aam
fidivrs
leave
push
stos
les
in
sub
movsb
inc
icebp
and
pop
lock
out
or
rcl
dec
xlat
imul
frstor
sbb
inc
sbb
and
mov
out
arpl
ss
add
adc
dec
mov
test
aas
mov
adc
mov
shl
addb
push
xchg
rorl
or
add
hlt
leave
incb
std
and
gs
mov
arpl
pop
sub
pop
fbstp
push
jns
out
cmp
lret
loope,pn
xchg
add
ds
jl
in
out
adc
or
lret
add
popa
mov
xchg
popa
loopne
inc
fdivrp
aad
jnp
push
jge
add
scas
adc
fisubrl
push
and
rorl
mov
shll
pop
mov
add
pop
fwait
bound
fisubs
push
xchg
daa
push
or
dec
dec
xor
dec
sbb
push
xchg
rolb
cmpsb
or
push
mov
lea
push
jmp
and
cmp
cli
xchg
mov
mov
cmp
test
pop
sbb
shrl
sti
out
shlb
shll
lods
sub
mov
ror
subl
aaa
dec
out
sub
adc
dec
inc
adc
xchg
ja
stc
rep
pop
or
xchg
cmp
pusha
mov
int
mov
and
xchg
sahf
mov
sti
xchg
insl
in
orb
sub
jo
fdivs
dec
mov
rcl
jo
ret
adc
cltd
aam
std
scas
xchg
jb
adc
jecxz
jecxz
shlb
push
xor
fidivrs
mov
ja
test
xlat
jns
and
out
das
adc
cmc
xchg
xchg
mov
mov
fldt
xor
adc
add
jbe
xor
in
xchg
xchg
arpl
loop
dec
mov
xchg
mov
test
insl
jge
fldt
mov
add
jns,pt
repnz
cli
push
xchg
and
xchg
sbb
mov
cmp
outsl
sub
clc
fnstsw
pop
orb
mov
psrad
test
in
jge
pusha
push
cltd
lock
add
pop
or
push
repnz
ljmp
mov
adc
add
push
jecxz
mov
iret
js
cmpsb
out
add
pop
inc
xor
pop
callw
sti
inc
inc
mov
fldcw
and
das
xor
pushf
std
test
fisttps
or
push
mov
jle
int
mov
dec
pop
sbb
inc
mov
mov
mov
loop
int3
shr
ja
popf
sahf
ljmp
mov
inc
fstps
xchg
insl
push
pusha
rclb
xchg
js
adc
sub
adc
outsb
in
stc
mov
lock
std
push
cmp
das
sbb
and
outsb
push
jecxz
sbb
or
ljmp
shrb
dec
addl
ss
mov
xchg
arpl
out
in
mov
adc
add
into
and
mov
xor
int
cli
imul
xor
arpl
mov
push
popf
jno
pop
loope
lcall
cmp
xor
jge
mov
mov
into
mov
fisubl
scas
sar
jne
and
out
psubq
test
in
pop
dec
mov
aas
mull
out
xor
cld
dec
inc
sbb
cld
xor
mov
subl
insb
cwtl
mov
and
scas
das
popf
popa
cmp
pusha
jge
inc
push
test
call
mov
mov
lds
sub
movsb
in
out
test
cmp
mov
mov
jmp
sub
adc
lahf
adc
add
mov
out
cmp
inc
imul
cmpsb
jb
sub
pop
fcoms
and
xchg
iret
dec
repz
in
mov
sub
xor
add
sarl
hlt
rcrb
mov
mov
dec
dec
scas
sub
arpl
fimull
mov
lahf
jbe
add
pop
mov
and
mov
shl
cmp
mov
xchg
mov
add
mov
xchg
in
jne
fmull
or
not
push
clc
test
dec
fstpl
into
pop
fsubs
push
in
mov
leave
add
jle
aas
cld
stos
xchg
stc
in
out
call
jo
lahf
fwait
call
lret
mov
or
dec
or
bound
mov
aas
inc
ja
dec
jge
sbb
sub
pop
pop
loopne
jnp
das
gs
push
arpl
imul
movntps
mov
mov
out
or
sub
mov
repnz
or
sbb
xchg
sbbb
pop
mov
jne
mov
add
xor
sbb
mov
push
jnp
cltd
mov
mov
insl
or
dec
popa
xchg
add
lds
cmp
jbe
mov
dec
popf
cltd
mov
stc
add
cmp
mov
jmp
mov
cmp
setg
and
inc
xchg
ret
sub
popl
daa
push
push
push
outsb
xrelease
mov
jp
mov
out
mov
cmp
pop
inc
or
or
insb
in
cmp
jno
lcall
dec
pop
sbb
call
jp
dec
cmp
cmp
add
mov
sbb
and
cmp
push
fmuls
push
notl
sbb
lcall
lods
and
xchg
pop
xorb
fld1
add
popa
aas
adc
push
adc
add
push
aad
je
sub
out
orb
insb
leave
mov
xor
push
inc
bound
push
out
scas
outsb
mov
jbe
shrb
movsb
and
or
popf
shll
lahf
jmp
loope
lret
cmc
das
push
mov
pop
cmp
lcall
mov
jle
dec
cmp
sub
sub
jne
xchg
push
and
es
xor
dec
mov
sub
mov
test
mov
jmp
test
inc
sub
adc
aaa
imul
insl
xchg
cmpsl
mov
das
shlb
cmpsb
add
adc
xor
mov
lret
outsb
xchg
dec
out
enter
mov
hlt
jg
movsb
and
or
pop
mov
cmp
cmpb
out
jns
or
sub
test
jecxz
nop
dec
xchg
rcrl
xor
jne
popf
scas
out
mov
inc
rorb
roll
mov
sub
cmp
jno
xchg
add
pop
mov
xchg
mov
aas
bound
leave
push
std
mov
mov
cmp
lcall
popf
jnp
test
cmp
and
or
sbb
jbe
adc
cld
mov
jbe
pop
add
out
icebp
adc
out
loope
ljmp
scas
iret
jbe
mov
test
inc
inc
mov
or
mov
xchg
pop
jmp
xchg
pop
and
pop
icebp
pop
sbb
clc
adc
lods
loop
xchg
fisubs
jl
lret
ret
jg
push
lds
push
fcmovnbe
outsb
sbb
sub
lods
and
ja
test
mov
leave
add
popa
je
mov
lret
mov
mov
stos
add
mov
xor
push
test
push
jnp
pop
xchg
mov
sarl
xor
sub
or
adc
fdivp
jp
out
cli
fprem1
add
jecxz
sub
int
into
adcb
mov
inc
cmc
fbld
sub
adc
repz
cmpsb
inc
sbb
ss
mov
mov
or
push
lcall
push
cmc
daa
arpl
ja
cmpsb
leave
lods
aam
pop
jmp
out
inc
call
lock
jg
ljmp
jne
adc
fisubrs
lcall
xchg
cmp
ret
xor
xchg
cmpsb
dec
xchg
popf
aam
pop
pop
lds
outsb
pushf
cmp
push
mov
dec
stos
imul
ja
in
push
fstps
in
pop
pop
scas
pop
add
cmp
sahf
add
fisubl
in
outsb
push
push
call
ds
leave
dec
cmp
or
cwtl
ds
iret
fidivrs
lahf
loopne
dec
dec
or
daa
pop
cld
sbb
je
inc
fdivrs
adc
addr16
push
mov
inc
pop
icebp
pusha
sub
pop
or
and
jp
subb
out
mov
inc
not
cld
ds
pop
push
addr16
lods
xchg
jae
insl
cmp
and
outsb
push
xor
jbe
dec
xchg
push
dec
mov
mov
rolb
push
dec
cmpl
sbb
fisubs
aad
sub
jl
scas
jmp
clc
cmp
add
inc
ret
test
sub
mov
cmp
in
push
xchg
cmpsb
lock
stos
dec
xchg
lods
addr16
mov
pushf
or
movsl
shrl
sub
clc
jns
movsl
xchg
mov
sbb
in
xor
dec
andl
push
xor
sbb
jo
lock
lock
and
push
inc
rol
adc
test
call
pop
xor
ljmp
setl
pop
dec
sub
out
lret
insl
call
js
gs
aad
xor
mov
adc
sbb
xor
push
movsl
xchg
mov
mov
into
xchg
enter
lods
syscall
fcompl
cs
mov
sarl
jg
jle
pop
cwtl
sbb
add
dec
mov
xlat
sti
imul
lcall
jnp
jnp
test
xchg
ret
bnd
repz
lea
shll
ljmp
pop
push
ljmp
movsl
inc
call
into
or
mov
mov
lret
add
das
sub
dec
movsb
xor
addr16
out
ret
jmp
sub
mov
in
xor
mov
aaa
inc
mov
out
mov
xor
cmp
mov
js
cwtl
mov
loope
sti
loope
fwait
lret
out
cmp
mov
clc
into
fadds
aam
scas
mov
in
jge
push
inc
scas
adc
xchg
mov
ficoms
les
movl
or
in
xlat
hlt
xchg
lret
inc
hlt
lret
aad
cmp
fisubs
or
sbb
cwtl
idivb
adc
fistps
fmuls
in
subb
pusha
flds
enter
or
dec
testl
les
notl
cld
xchg
jp
dec
addr16
ja
repnz
adc
or
push
imul
mov
daa
scas
bound
cmp
adc
fistps
add
cmp
push
sbb
pushf
lahf
lret
decb
mov
cmp
in
cld
lods
je
cmovle
cwtl
mov
push
pop
cmp
sbb
pop
push
xchg
lret
cmp
cli
pop
add
loope
xchg
add
in
and
ret
push
mov
js
cmp
dec
aaa
stc
xor
xor
daa
and
xlat
mov
shl
sbb
and
es
outsl
inc
dec
shl
sub
fistps
mov
mov
into
sub
sbb
out
or
pop
inc
jecxz
push
rolb
sub
std
sub
pop
push
jl
test
fnsave
movsl
iret
pop
rclb
push
daa
inc
adc
pushf
hlt
cmp
scas
jae
push
xchg
test
das
ja
mov
insl
enter
mov
shll
fmull
xor
or
jnp
mov
in
mov
xor
cmp
add
mov
sarb
cltd
fiadds
and
dec
mov
pop
and
mov
ljmp
xchg
mov
int
js
leave
xchg
es
cmpsl
fucom
dec
add
xor
out
call
adc
and
mov
xchg
mov
dec
data16
xchg
lods
repz
mov
mov
jp
add
insl
add
mov
pop
movsb
bound
ret
hlt
mov
and
push
dec
pop
inc
mov
rcrb
fs
in
dec
imul
mov
test
jne
push
mov
jl
call
xor
sbb
cwtl
idivl
inc
jae
enter
xor
or
daa
add
pushf
idivb
sbb
nop
mov
rcrl
mov
sub
mov
cld
rolb
rcll
dec
loope
cwtl
mov
fisubs
mov
in
add
push
icebp
jecxz
in
test
sti
mov
lret
das
jg
jnp
movsl
inc
add
shlb
jle
pop
stos
jge
int3
cwtl
push
add
insb
inc
mov
pop
andl
pop
sahf
fadd
xchg
inc
das
mov
push
mov
adc
sbb
addr16
and
aas
mov
xchg
cwtl
xchg
pop
stos
adc
mov
sub
pop
mov
in
loopne
inc
test
push
sbb
mov
lret
stos
push
pop
dec
adc
pusha
sahf
subl
cmp
ljmp
ficomps
xchg
call
and
xlat
add
fidivrs
hlt
mov
das
cwtl
loopne
and
aam
jg
jge
mov
mov
adc
fidivs
cmc
rolb
imul
push
iret
or
imul
pop
add
outsl
cld
cmp
cs
hlt
pushf
je
pop
repz
adc
jg
mov
pop
mov
lret
repnz
aam
sbb
pop
pop
push
addr16
sbb
mov
push
or
pop
fistps
and
xchg
mov
dec
push
mov
inc
fimuls
jmp
sbb
call
cmp
test
mov
jne
ss
inc
jno
jne
mov
mov
pop
shlb
adc
inc
sub
lcall
pop
mov
out
pop
push
mov
clc
push
jne
clc
mov
sbb
popa
cmp
and
aas
jae
add
pop
add
jns
pop
popa
add
xor
orb
and
addl
ficomps
mov
sub
je
jo
fcoms
stc
sahf
xchg
decl
stos
out
cld
sbb
mov
loope
data16
arpl
sbb
mov
and
xchg
inc
popf
ss
sub
arpl
and
adc
xchg
cmc
xchg
jne
adc
dec
push
mov
pandn
jle
pushf
lret
popf
cltd
push
jl
scas
pop
jne
fnstsw
popl
shrb
xchg
aaa
cmp
xlat
clc
sahf
and
into
insl
mov
xchg
fwait
xchg
rol
push
pop
mov
mov
cmpsb
cmp
pop
in
mov
adc
cmp
push
pop
fmuls
mov
push
add
js
pop
addl
ja
es
nop
jg
xchg
and
pop
push
les
cltd
cld
inc
inc
adc
mov
sub
shrl
roll
xchg
and
dec
jnp
hlt
push
daa
mov
stc
aam
pop
imul
fidivl
arpl
or
lock
pusha
icebp
out
jne
sub
mulb
clc
jo
es
cs
jmp
ret
sub
cmpl
ror
sub
xlat
dec
push
insl
rcl
push
cmpb
enter
push
mov
dec
and
fs
push
into
les
mov
out
fsubs
imul
idivl
fwait
sbb
fbld
insb
jp
movsb
push
out
xor
sar
inc
test
ja
inc
data16
or
dec
pushf
inc
and
and
mov
pop
inc
sbb
jle
sarb
push
sub
pop
or
pop
push
xor
into
pop
push
popa
inc
xchg
adc
mov
clc
cmp
jle
pop
fucom
es
xchg
cmp
or
add
ja
jno
and
xchg
std
or
pop
call
jl
imul
and
adc
pop
push
out
inc
ret
rclb
imul
movl
lods
std
push
pop
cltd
arpl
imul
int3
inc
and
loopne
jbe
stos
pop
into
mov
push
jb
mov
test
pop
push
subb
jecxz
jae
outsb
mov
or
bnd
es
int3
int
dec
adc
dec
mov
xchg
popf
les
cmp
sbb
enter
outsl
mov
cs
ret
mov
push
outsb
cs
ljmp
cwtl
sub
dec
lret
jnp
inc
and
shll
pop
lret
cld
je
sub
pop
sbb
out
or
jae
inc
xchg
cmp
push
and
in
pop
stos
xchg
inc
movsb
inc
aaa
sbb
sbb
mov
jg
aaa
push
repz
iret
jne
dec
je
adc
sbb
mov
cmp
add
jg
inc
lcall
inc
push
test
dec
popf
repnz
jns
arpl
in
adc
les
add
aas
loop
add
pop
jge
imul
clc
xchg
mov
sahf
pusha
jg
fistps
xor
lret
add
int3
add
loope
mull
test
rolb
cmc
fdivp
xchg
in
add
adcl
ljmp
or
xchg
es
aad
ss
push
int
test
push
sub
mov
xchg
mov
push
test
daa
and
and
mov
or
loope
notl
sub
call
pop
loop
int
in
cmc
leave
adc
jmp
or
repz
movsbl
nop
movsb
dec
cmpsb
push
mov
mov
mov
fbstp
add
mov
incb
or
pop
rep
sti
xor
or
dec
in
fucomi
jp
xchg
pop
adc
outsl
inc
je
popf
xlat
mov
aas
dec
sahf
mov
shl
xchg
mov
hlt
cmp
cmp
jae
jns
addl
shr
add
mov
hlt
shll
sub
ss
adcl
in
dec
push
jl
pop
loope
movsl
call
roll
jb
inc
jg
rcr
add
test
inc
je
cmpsl
jg
call
jnp
rol
test
stos
stos
rcrl
inc
flds
push
popa
xor
pop
add
sub
popa
cs
scas
cmpsb
adc
test
or
repz
sbb
pop
sub
jge
push
fdivr
mov
sarl
inc
xchg
mov
pop
fists
and
sti
xchg
iret
out
in
jecxz
push
lods
add
icebp
leave
mov
mov
pop
push
inc
mov
sub
inc
jb
mov
repz
iret
cmp
dec
scas
xchg
in
ficoms
ja
inc
lahf
or
lcall
rclb
xchg
jbe
jns
out
push
in
js
fmuls
ljmp
cmp
xchg
nop
mov
sub
mov
jo
mov
mov
rcl
jo
cmpsl
lods
push
ficoml
fs
lcall
fsts
cwtl
cmpsb
push
test
push
xchg
lea
sbb
sub
imul
add
call
pop
push
fdivl
bound
out
and
adc
stos
fdivrl
les
inc
test
leave
aad
in
imul
adc
leave
adc
jns
loop
inc
jo
popf
leave
mov
pop
cmp
mov
daa
push
fnsave
inc
push
sbb
lea
mov
ja
and
add
push
push
push
pop
mov
sub
mov
push
pop
cmp
sti
pop
mov
mov
and
ret
sbb
icebp
loop
arpl
push
je
faddl
mov
test
sub
in
push
cmp
lahf
mov
cmp
fwait
mov
pop
repnz
nop
dec
out
sbb
lahf
dec
fwait
daa
ret
xlat
clc
fcoms
out
js
inc
cmp
xchg
xchg
aas
jnp
sbb
sub
ja
xor
es
pop
mov
xchg
xor
xor
ds
fstpt
dec
adc
pop
adc
jae
cmpsl
push
adc
inc
das
jne
push
and
dec
mov
repnz
ds
xor
lret
mov
xor
aas
out
mov
scas
dec
mov
pop
clc
fldenv
xorl
xor
pushf
mov
rol
xchg
pop
jmp
sbb
cmp
test
sub
rclb
ret
add
mov
ljmp
mov
push
or
ja
int3
stos
push
jecxz
inc
xor
inc
lds
push
xchg
cmp
mov
adc
and
mov
fimuls
iret
call
out
fnstsw
fsubp
add
pop
ret
add
ljmp
data16
fidivrs
mov
ljmp
enter
sbb
inc
xor
ss
jl
popa
or
testl
pop
lods
je
out
cmp
pop
xor
dec
loopne
psubusb
push
fiadds
stc
mov
inc
inc
stc
push
subl
sub
inc
xlat
mov
and
lea
pop
sbb
fstl
pushl
out
cmp
push
mov
jno
rolb
ljmp
aad
adc
daa
dec
js
mov
in
popa
cs
jg
imul
cmp
insb
out
test
clc
mov
ljmp
outsl
sub
and
inc
xor
jae
aam
mov
movsb
mov
pop
pop
adc
sub
pusha
sbb
leave
adc
or
push
inc
jmp
test
inc
cmp
pop
roll
jns
lods
movsb
sub
scas
push
xchg
sub
mov
or
push
cmp
add
xchg
scas
adc
fstpl
pop
jns
stos
popf
pop
mov
mov
lds
daa
mov
incw
inc
and
imul
mov
jnp
pusha
std
shrb
sub
ljmp
call
arpl
sbb
clc
in
pop
jl
inc
mov
imul
mov
jge
and
push
cmc
pop
inc
fdivrs
fst
xchg
cwtl
push
push
rcrl
add
cltd
lret
nop
pop
sub
xor
mov
pop
sub
inc
push
pop
ror
mov
mov
lds
scas
push
xor
in
dec
pushf
inc
notb
pop
sub
es
push
iret
or
xor
sahf
pop
aaa
fimull
faddl
bound
test
push
inc
mov
test
and
ds
aaa
aad
push
dec
int3
xchg
int3
cmc
int3
inc
loope
stc
push
js
ds
roll
jg
mov
jae
ret
or
inc
or
cmpsl
repnz
cmp
jl
pop
fxch
jbe
mulb
mov
in
sbb
out
xlat
cmp
andl
mov
or
fwait
jb
push
jl
in
adc
or
sbb
adc
pop
xor
das
push
inc
inc
lret
test
mov
inc
jne
xor
mov
jmp
jmp
jp
aam
and
jns
sub
push
jge
or
dec
fmuls
mov
cmp
rcll
mov
aas
inc
je
pop
sub
daa
cmp
ficoml
mov
es
or
or
insl
push
fnstenv
out
jno
sub
mov
movsl
push
pushf
xchg
ret
addr16
imul
dec
in
mov
addl
sub
out
cli
mov
neg
inc
xor
xchg
push
add
xchg
outsb
xor
mov
cmc
jmp
dec
std
stc
aad
xchg
je
inc
cltd
inc
dec
or
jg
int3
sub
gs
dec
jo
adc
loope
and
push
sub
insb
xor
push
add
lret
jbe
dec
std
into
imul
in
xor
mov
adc
mov
jecxz
xchg
sbb
xor
jb
jno
mov
repz
enter
mov
dec
jae
xorb
add
mov
push
jns
adc
jnp
xor
or
test
test
mov
popf
xor
clc
mov
lret
mov
cltd
inc
jmp
push
jnp
inc
ret
or
adc
fdivp
xchg
inc
aam
daa
sbb
pop
out
mov
mov
adc
lds
idivb
sub
inc
push
dec
gs
arpl
in
inc
arpl
imul
nop
push
movsb
shll
scas
ja
mov
lcall
fisttps
movsl
dec
out
sub
andb
stc
lcall
loopne
frstor
inc
out
jecxz
mov
movsl
stos
in
jmp
fs
cmc
jno
cmp
mov
mov
push
dec
ds
adc
dec
sub
mov
push
movsb
xor
bound
lods
popf
xor
fsubrs
mov
pop
icebp
fwait
aad
dec
adc
adc
push
dec
pop
and
dec
popf
sbb
xchg
lahf
fnsave
mov
add
inc
jo
mov
inc
montmul
cmpsb
cmpl
pop
inc
mov
jo
lcall
inc
mov
push
insb
sub
shll
and
xor
enter
outsl
mov
call
rep
aas
stc
bound
ficomps
or
mov
in
sub
rol
shll
mov
pop
push
push
cld
sbb
jge
or
pop
mov
ja
adc
test
pop
xchg
mov
test
push
dec
andb
loop
and
mov
push
jo
leave
mov
enter
subl
xchg
daa
inc
dec
sahf
xor
or
push
repz
popa
ss
ja
divb
jmp
pop
nop
sbb
lds
std
xor
out
pop
push
sbb
mov
movsb
fcomi
mov
adc
mov
xchg
push
or
cmp
inc
pop
repz
jo
cmp
add
or
fstpl
ret
sbb
mov
fidivl
fstp
cmp
call
aad
sarl
push
sub
pop
mov
sub
lret
cmp
push
insl
dec
jnp
or
push
shrl
mov
xchg
psrld
and
lock
aad
stc
xchg
adc
outsb
popf
lret
add
jne
push
scas
xchg
scas
pop
cmpb
popa
cld
sti
repz
rcrl
xchg
pop
stc
mov
xor
shll
das
cmp
lods
adc
cld
loope
hlt
outsb
mov
jle
xchg
test
sbbb
mov
loopne
lahf
aas
xor
mov
pop
mov
push
push
adc
ljmp
lods
dec
xlat
xchg
movl
push
lret
mov
sbb
mov
and
cltd
les
jge
in
jnp
sub
xchg
jl
inc
daa
sti
sbb
cld
es
out
dec
cmpsl
jp
nop
cld
push
pop
nop
pop
xchg
gs
push
or
jp
add
mov
cmp
and
add
add
xchg
cmc
loop
mov
jl
xchg
mov
xor
dec
push
xor
mov
scas
jae
jl
nop
bound
stc
mov
adc
push
cs
jb
pusha
in
lods
movsl
xor
mov
hlt
aad
mov
fdivp
aad
fidivl
jmp
inc
pusha
loope
adc
pop
jle
push
and
mov
push
xchg
mov
rcrb
jmp
movsl
fldl
mov
xor
xor
xor
dec
lret
mov
fcompl
aad
inc
icebp
movsl
out
adc
and
popf
mov
push
cmp
sub
subl
pop
inc
jo
lret
cmc
cmp
aas
inc
xor
add
lock
push
push
repz
scas
jno
xchg
push
icebp
push
adc
push
jmp
xchg
mov
sti
mov
mov
ret
inc
fsubrs
adc
lea
popf
adc
mov
movsl
jno
mov
lret
xchg
xor
mov
xchg
mov
das
mov
pop
ss
jecxz
jae
out
xor
rclb
dec
cmp
mov
add
nop
adc
jge
xchg
fs
fildll
rcll
cltd
cli
jb
or
popf
jnp
sbb
scas
nop
inc
mov
iret
cmpsl
lds
les
pushf
push
rcrl
pop
pop
sbb
jne
jnp
cs
bound
xchg
mov
xor
outsl
sar
int
jle
inc
pop
adc
imul
mov
xchg
bound
and
lret
std
cmc
jnp
test
outsl
adc
mov
dec
add
or
xor
rcrl
mov
pushf
movsb
jecxz
gs
add
outsb
ss
shll
jg
pop
or
xchg
cmp
ds
fdivrl
out
adc
lods
xor
xlat
js
negb
sub
popf
inc
lahf
sbb
push
mov
and
iret
daa
xor
add
clc
in
iret
push
iret
ret
mov
xchg
dec
mov
outsb
mov
int
daa
mov
shr
outsl
dec
in
pop
aad
xchg
ficomps
sub
push
sub
imul
cmp
ficoms
out
out
test
mov
dec
sub
mov
and
push
push
insl
dec
jg
and
mov
jecxz
test
jno
mov
enter
das
pop
in
jnp
inc
or
rcrl
xchg
testl
lahf
js
xchg
test
fwait
and
dec
ret
push
int
dec
cltd
push
mov
cld
je
in
mov
push
mov
andb
mov
push
xor
out
push
fs
add
test
insl
jae
mov
ja
add
xchg
mov
ret
sub
push
pop
adc
pop
pop
fstps
cmp
sub
adc
adc
xor
arpl
cmp
sbb
dec
cmc
movsb
leave
xchg
push
push
inc
dec
orl
jno
lea
cmp
sbb
loope
mov
push
loopne
jae
lods
mov
aas
inc
mov
cli
out
sbb
sarl
sbb
and
addr16
push
repnz
mov
cmc
icebp
fs
mov
mov
fistps
push
frstor
repnz
adc
cli
and
pop
mov
dec
out
mov
sub
xchg
xchg
repz
int3
daa
scas
add
cltd
andb
xchg
xchg
adc
xchg
call
loope
int
imul
aas
cld
xor
popa
mov
xor
ja
scas
mov
shl
mov
sbbb
and
cmp
pop
ret
aaa
out
or
or
dec
leave
push
inc
cwtl
sti
pop
mov
push
push
faddp
fisttpll
jb
push
stos
inc
adc
adc
pop
clc
jo
push
xor
add
xor
lea
movsl
lahf
mov
xchg
xchg
jmp
mov
insl
ret
sahf
xchg
int
inc
push
fistpl
cli
jg
jmp
lods
dec
pusha
pop
mov
jp
sbb
movsl
lsl
icebp
push
aaa
mov
sub
xchg
addb
pop
loope
push
mov
scas
fcoms
fistl
out
inc
lds
push
cvtps2pd
shll
setge
mov
xor
lds
cmp
or
test
jg
mov
dec
mov
mov
mov
aam
xlat
or
outsb
mov
popf
push
dec
xchg
iret
pop
mov
out
and
push
inc
jl
sbb
push
push
jb
inc
mov
sbb
sahf
loopne
jp
or
imul
or
jecxz
mov
int3
push
mov
mov
scas
fsubrs
mov
rep
outsl
inc
mov
jne
dec
dec
xchg
hlt
mov
lock
iret
cmpsl
popa
mov
iret
xchg
enter
xchg
mov
xchg
xchg
pop
jge
sbb
lahf
push
iret
push
repnz
jge
in
xor
xchg
int3
push
aaa
iret
clc
cltd
inc
inc
cmp
mov
push
roll
cmpsl
mov
push
int
pusha
inc
int3
pop
mov
sti
push
xchg
stos
cmp
pushf
pop
inc
movsb
sub
arpl
xchg
jne
test
cmp
lahf
mov
in
pop
lea
sub
xor
mov
insb
lods
stos
ss
scas
shrl
xchg
gs
and
pop
jno
pop
pop
jl
mov
outsl
in
outsl
add
push
lods
cmp
mov
cmc
mov
lods
sbb
out
cld
inc
in
dec
sbb
mov
scas
mov
mov
add
out
cs
xchg
es
out
arpl
sub
hlt
or
mov
pop
inc
das
and
in
lahf
xchg
mov
xchg
xorl
aaa
inc
or
fsubl
dec
andb
push
shrl
enter
sub
pop
fnstsw
lahf
mov
ss
aas
lods
mov
pop
sub
addl
lods
sbbb
outsb
add
mov
arpl
rolb
loopne
lock
repnz
ljmp
or
or
loop
push
insl
adc
dec
je
xor
push
in
push
jle
dec
jge
out
in
or
sbb
insl
fsubl
fs
rcl
data16
pop
lea
mov
jb
inc
fdivrs
lods
call
mov
aaa
in
out
pop
sar
sub
cmp
mov
xchg
jle
or
push
jae
and
hlt
fmulp
dec
xchg
aas
rol
notb
mov
repz
out
inc
daa
stos
andl
mov
test
aaa
and
dec
mov
pop
mov
xor
ljmp
inc
in
jb
cmpsl
mov
fwait
insl
dec
mov
sub
adc
int3
imul
std
cmp
mov
ret
cmp
adc
cmp
push
rol
pop
and
cmp
fdivs
add
add
stos
sub
movsb
pusha
cmp
mov
js
aam
sub
fdivrs
out
sub
adc
cli
popa
push
outsl
sub
cltd
insl
iret
mov
aas
jo
jbe
adcl
cmpsw
mov
enter
nop
leave
fucomip
jne
adc
aam
sbb
pop
sub
cmpsl
rcr
mov
ja
andl
mov
ficompl
mov
cs
sub
mov
jle
pop
inc
cmp
and
cmp
mov
push
test
cs
xor
xor
and
pop
add
clc
pmaxub
lret
and
pop
popf
stos
adc
mov
jg
push
dec
pop
mov
arpl
sub
jge
sbb
in
loopne
sbb
rcrb
es
in
dec
xor
sbb
or
sahf
or
dec
jnp
ss
mov
insb
pop
mov
dec
in
cltd
lock
or
jno
add
sbb
ret
loopne
fs
cmp
sub
mov
aas
sub
iret
sub
js
jp
xor
test
xchg
pop
and
sub
push
xchg
adc
ss
fmuls
mov
pop
sbb
adc
shl
mov
and
loope
nop
nop
enter
or
inc
sti
mov
push
push
pop
lea
fsubs
mov
sbb
push
push
fcmovnbe
das
push
inc
mov
mov
lods
aam
push
xchg
inc
lods
dec
mov
dec
sbb
xchg
dec
mov
fidivs
push
xlat
fstps
dec
mov
sbb
xchg
movsb
xor
testb
jg
outsb
push
mov
dec
adc
loop
call
inc
add
jno
into
jb
je
xor
ljmp
test
inc
fcom
pop
sbb
and
dec
cmc
sub
or
pop
adc
ljmp
or
adc
insb
or
ficomps
sbb
into
cmp
fdivrl
into
xchg
mov
pop
sub
gs
lea
call
pushf
cmc
pop
or
in
cmpsb
dec
mov
outsl
add
test
lret
pop
xchg
or
ljmp
shll
push
jne
aad
ror
inc
imul
outsb
mov
xor
mov
stos
repnz
cltd
pop
arpl
jns
ljmp
sahf
ss
out
push
mov
sbb
add
aas
test
jne
xchg
jg
int3
sbb
or
fcmovu
adc
das
push
xchg
jo
dec
xchg
loope
add
and
ss
scas
dec
sbb
sbb
and
fsts
pushf
or
xchg
pop
dec
stos
outsb
inc
mov
sub
sbb
pop
imul
sbb
xchg
dec
pop
mov
xchg
stos
push
scas
es
sub
in
sbb
mov
sti
loop
test
xlat
pop
sbb
cmpsl
xchg
xchg
jo
iret
call
mov
push
cmp
shlb
std
cmp
int
inc
les
mov
dec
lods
pushf
sbb
sbb
pop
subl
mov
cwtl
insb
das
xchg
mov
insb
mov
scas
add
rcll
aaa
lahf
out
cmp
fs
repnz
sub
push
dec
and
gs
mov
mov
push
les
aas
sbb
xor
mov
push
pop
in
mov
jbe
aas
adc
mov
pop
fistl
outsl
fadd
es
jecxz
cmp
movsb
popf
aam
mov
pusha
ficoml
dec
xlat
fs
loop
insl
mov
gs
pop
add
orl
jg
add
dec
insl
cmp
sub
add
pop
std
mov
cwtl
cli
les
pop
xchg
fsubr
aaa
cld
jmp
scas
mov
clc
push
out
jae
mov
mov
les
lahf
aam
and
pop
adcl
pop
mov
cli
xchg
fidivs
xor
cmp
mov
das
pop
jb
out
jp
sub
ljmp
lret
repnz
fidivrl
jno
repz
mov
mov
js
cmp
mov
push
mov
adc
loopne
inc
add
ret
lods
sbb
loop
xor
bound
shrl
gs
xor
clc
js
fistps
out
test
cmp
das
popf
mov
cmp
push
repnz
aas
cmp
sub
enter
add
xor
pop
cmp
ljmp
mov
push
pushf
out
push
subb
or
pop
push
push
fmul
into
pop
das
sahf
push
xor
pop
adc
inc
daa
xchg
out
sub
outsl
mov
adcl
test
rolb
sbb
in
or
mov
cmp
push
add
mov
cmpsl
add
jno
iret
jbe
cmp
pusha
outsb
mov
xchg
hlt
pop
mov
sbb
mov
mov
mov
in
xchg
mov
into
shlb
ds
push
pop
cwtl
pop
in
insb
cmp
inc
inc
in
cmp
es
and
pushf
icebp
arpl
jl
cld
cltd
lahf
mov
push
scas
push
mov
jns
or
inc
pop
xor
roll
rcl
cmp
push
cmp
and
adc
mov
jo
sbb
jno
mov
mov
jne
testb
shll
xlat
or
jb
jmp
jo
adc
je
ljmp
pop
cmp
mov
mov
pop
repnz
push
mov
in
and
ss
jne
jb
leave
jg
inc
incb
and
sub
in
js
leave
and
cmp
add
roll
adc
bound
rclb
inc
sub
into
pop
sti
add
iret
gs
andl
sahf
sub
xorl
xchg
ss
xchg
xchg
push
dec
es
mov
jb
mov
add
push
lahf
push
jmp
sbb
pushf
mov
inc
cli
jmp
pop
addr16
das
cmp
jae
inc
test
sub
loop
mov
ja
or
lods
pushw
jecxz
insl
push
mov
push
repz
adc
movsl
inc
mov
and
je
inc
cs
lahf
sub
data16
lds
push
pop
mov
test
inc
jecxz
jg
aam
push
ret
mov
jnp
push
lret
clc
add
jle
mov
add
add
sub
insl
fisttpll
adc
mov
ficoms
nop
sub
mov
movsb
fwait
or
in
push
jmp
cwtl
add
lods
sahf
cmc
push
and
pushf
mov
jb
pop
cmc
int
push
imul
stos
jns
roll
stos
pop
imul
mov
ds
mov
adc
jge
iret
xchg
xchg
cmp
push
ficoml
dec
jne
dec
pop
and
add
pop
stc
jo
pop
ss
cld
fs
sahf
int
add
cs
or
sbbb
or
scas
arpl
mov
and
stos
sbb
insl
sbb
mov
sbb
mov
andl
cld
movsb
jne
inc
idivl
sub
movsl
xchg
mov
data16
xchg
addb
mov
popa
add
rcr
stc
xchg
and
cmp
sahf
ds
testl
mov
insb
jge
int
mov
xchg
pop
or
das
jbe
aam
enter
push
rolb
fwait
adc
adc
xor
xchg
fisttpll
testl
inc
mov
shld
push
and
mov
sbb
aam
test
or
pop
subb
xor
dec
aas
push
xlat
popa
cmp
stc
ret
push
pusha
xor
or
fidivl
pop
mov
jecxz
push
ja
enter
xor
out
mov
popa
mov
pop
mov
out
aas
inc
adcb
xchg
loope
mov
adcl
sub
loope
jecxz
push
inc
lret
fucomip
cmpb
out
in
cmp
int
sbb
sub
bound
xchg
inc
sub
dec
mov
cld
pop
or
jl
test
pop
add
stc
push
sti
adc
call
xor
sbbl
imul
ficoml
sbb
or
test
imul
mov
test
nop
inc
mov
and
lods
pop
adc
mov
ja
push
cltd
test
push
mul
je
lret
daa
daa
lcall
divb
pop
popa
ficoml
les
sbb
cmpsl
cld
movsb
jge
mov
mov
mov
inc
jnp
je
add
jne
lds
fwait
mov
cmpsb
inc
mov
xchg
jmp
and
cmp
mov
mov
and
dec
sti
jg
or
push
cwtl
inc
ret
cmp
cltd
rolb
pop
out
mov
mov
and
adc
lcall
inc
inc
xchg
cmp
cmp
sbbb
bound
or
lcall
orb
test
mov
out
fisttps
rcll
and
mov
test
je
push
and
out
aam
loopne
fstpt
sbb
notl
cmp
pop
xchg
inc
xor
lret
in
jae
ljmp
fdivs
add
mov
aad
pop
ss
scas
rclb
aam
popl
mov
int
arpl
push
subl
dec
cmp
iret
sub
outsb
sti
jecxz
into
jge
jno
sub
mov
fcompl
nop
add
popa
jecxz
std
jmp
sahf
cmp
enter
sbb
jb
popl
adcb
dec
xchg
lahf
jge
sbb
pushf
scas
mov
out
rclb
pop
sub
mov
mov
js
sti
add
andl
push
cmp
insb
mov
add
pop
fcoms
bswap
mov
rcl
pop
imul
pop
int
nop
sahf
in
mov
pop
fcmove
andb
aad
jns
pushf
js
cmp
xchg
popaw
jle
aam
sub
push
aas
mov
stos
jmp
mov
in
fadds
mov
fisttpll
mov
arpl
jl
call
iret
in
pop
adc
inc
jge
add
int3
dec
or
outsb
dec
add
lods
dec
aaa
mov
mov
mov
js
negl
and
lds
test
mov
ds
imul
cmp
ss
pop
clc
xchg
lea
negb
cmp
dec
sbb
pop
sahf
add
dec
xchg
stos
sbb
outsl
rcl
xchg
jnp
push
js
sarl
adc
mov
insl
mov
call
pop
pop
push
or
movsb
aaa
xchg
xchg
mov
mov
fsubr
and
rcrb
fdivr
xchg
mov
dec
jo
stos
in
stos
fdivrl
pop
mov
sbb
pushf
shll
push
cwtl
xor
jbe
xchg
push
movsb
pop
test
pusha
cmc
fstpl
jb
fisubs
pop
xor
pop
stos
push
sub
jl
iret
or
xlat
sbb
test
in
xchg
sub
out
dec
mov
lds
loopne
dec
dec
test
cmp
mov
lods
jo
int
out
in
pop
mov
jns
jbe
stos
adc
push
pop
mov
mov
les
xor
cmp
fdivs
mov
cmpsl
into
dec
mov
jmp
mov
mov
lret
loopne
fwait
xchg
jno
push
xchg
sbb
mov
inc
mov
cwtl
sub
xchg
test
adcl
jecxz
pop
movsb
rorl
push
test
mov
xor
das
leave
pusha
mov
mov
roll
jne
insb
cmp
and
xchg
push
add
mov
dec
nop
lret
aam
adc
mov
add
xchg
mov
dec
xchg
decb
jl
out
cmp
testb
jno
inc
fnstcw
sti
fnstenv
push
jmp
dec
lret
divl
jg
popf
mov
imulb
push
ljmp
cld
cltd
mov
mov
cli
mov
mov
jnp
call
push
push
adc
inc
push
out
sti
adc
addl
mov
fs
enter
fucomip
fs
mov
gs
adc
pop
lea
cld
cli
lock
inc
mov
inc
jmp
sub
xor
gs
stc
daa
jnp
cmp
and
test
fidivs
jno
out
movsb
mov
dec
pop
repz
div
mov
xor
jno
mov
xchg
clc
aad
jl
clc
sub
or
mov
adc
add
jmp
jnp
inc
push
pop
cmp
rol
and
out
pop
cmc
daa
xor
js
or
popf
xchg
jle
int
xor
jl
test
dec
lods
std
sbb
fldl
stos
jb
std
sbb
add
or
pop
xor
iret
js
add
out
repz
xchg
stc
or
pusha
fbstp
out
mov
in
leave
scas
xor
pcmpgtd
dec
xor
xchg
je
xlat
mov
and
push
iret
cld
outsb
xor
push
mov
aaa
or
xor
ljmp
ljmp
mov
fmuls
mov
jmp
mov
mov
ss
ss
scas
addr16
dec
adc
xchg
sub
xchg
lret
fxam
out
shlb
leave
adc
imul
stos
popf
in
ucomiss
push
adcb
jmp
in
std
es
sub
dec
daa
or
bound
loope
sarb
mov
push
in
in
sbb
ds
xchg
repnz
pop
inc
iret
js
pop
sub
into
sub
push
dec
js
arpl
adc
rcrb
inc
std
xorl
xor
sarl
fnstsw
adc
aas
pop
cmc
dec
sbb
aam
loop
mov
sub
outsl
sti
dec
jle
lds
test
hlt
mov
adcb
fidivs
bndldx
mov
sbb
or
enter
mov
dec
mov
jbe
jnp
movntq
call
sub
cmp
add
mov
ds
pop
movsb
add
mov
xor
outsb
daa
enter
inc
cmpsl
sbb
mov
adc
pop
add
adc
stos
ret
movsl
mov
sbbb
adc
mov
out
adc
inc
shlb
lods
mov
jne
jl
xor
and
js
vrsqrtps
pop
leave
or
fistl
jl
enter
scas
in
inc
mov
push
in
popa
cmc
xchg
mov
jg
int3
outsb
mov
xor
xor
dec
pop
jae
ljmp
scas
fldl
insb
filds
mov
movsb
inc
pop
mov
xchg
push
andb
xlat
mov
out
inc
lods
lock
lods
pushf
das
mov
jecxz
mov
in
mov
leave
mov
loop
xlat
push
sub
dec
ss
jno
adc
add
inc
lods
stos
pop
sub
imul
push
mov
icebp
mov
cltd
loope
pop
cmc
rorl
int
dec
aaa
add
pop
push
popf
test
mov
cltd
mov
push
or
add
xchg
insl
in
mov
pop
dec
fadds
sbb
aad
test
or
ss
out
popf
mov
pop
jg
inc
adc
jmp
clc
jg
jne
into
mov
cmp
add
stos
rorb
pop
adcl
and
std
inc
cmp
xchg
jp
fcoml
cmc
mov
pop
fdivl
movsb
mov
xor
es
ret
pop
xchg
addl
jne
lock
fisttps
pop
xor
jp
mov
dec
imul
xlat
fcomp
ret
clc
inc
mov
inc
jl
dec
ss
sbb
mov
out
inc
ljmpw
dec
lds
stos
and
xchg
xchg
ds
xchg
jmp
jnp
xor
jno
sbb
fldenv
xchg
dec
fwait
push
jno
sbb
popa
addr16
ja
pushf
push
sub
sbb
lahf
jge
push
add
shl
sbb
int3
mov
fwait
cmc
cmp
cmc
rcl
pusha
imul
pop
sahf
fucomp
pushf
ja
add
pop
pop
loop
mov
addr16
mov
cmc
dec
shll
push
xor
adc
mov
push
stc
dec
mov
ret
ss
xchg
xchg
loope
mov
cli
ret
in
pop
rcr
fwait
jl
inc
add
adc
testl
repz
ret
iret
or
fld1
lods
stc
inc
lahf
and
jns
sub
clc
sub
daa
imul
mov
jmp
filds
sbb
mov
inc
push
je
inc
das
lods
aas
push
xchg
dec
and
out
insl
push
adc
ret
dec
sub
flds
push
cmc
mov
pop
testl
and
fldl
cli
lods
pop
push
xchg
jecxz
inc
add
cmpsb
pop
mov
jl
in
outsl
iret
sub
lods
xchg
lock
sub
lods
filds
cmp
jbe
dec
sbb
jne
andb
jg
addr16
mov
inc
lret
cmp
test
test
enter
bound
push
call
add
push
mov
xor
fcoml
push
push
imul
mov
sbb
push
aaa
push
mov
clc
push
add
push
test
and
jg
xor
xchg
fstps
xchg
pop
lods
xchg
rcl
jge
push
xrelease
les
or
les
xor
shll
or
xchg
adc
into
mov
sbb
call
sub
or
jmp
cltd
mov
adc
mov
push
cs
mov
cltd
adc
sub
mov
xor
shll
scas
or
cltd
cmp
jne
and
sbb
out
jge
push
mov
xor
xor
pop
xor
int3
lret
pop
roll
push
ja
or
jno
in
fnsave
sub
sbb
movsb
cs
mov
bound
adc
inc
inc
cmc
arpl
movsl
mov
fnstcw
or
enter
push
jmp
pop
mov
mov
push
pushf
dec
clc
push
xchg
in
js
pop
adc
push
in
gs
jae
jnp
imul
rorb
xchg
bound
adcb
mov
pop
jg
sbb
gs
mov
cmp
xchg
xchg
mov
mov
mov
out
mov
imul
mov
fwait
inc
and
into
push
or
adc
scas
mov
loop
rcll
jmp
std
and
pop
mov
cmp
fistps
or
xor
and
jge
sbb
push
xor
daa
or
cmp
dec
and
mov
pop
push
pop
jb
adcw
fisubl
loop
jo
mov
popa
add
or
iret
out
in
sbb
repnz
test
pop
movsb
aaa
pop
dec
adc
sbb
mov
mov
cwtl
loopne
shr
mov
add
pushf
mov
rcll
sarb
inc
test
orps
testl
ds
jb
xchg
xor
mov
xchg
test
bound
jl
imul
sbb
pop
push
add
fcoml
cmp
mov
cwtl
add
mov
inc
out
mov
xchg
xchg
pop
jno
shrb
xchg
xor
pop
adc
mov
ss
insb
pushf
mov
js
jno
adc
jp
test
sbb
rorl
das
js
test
js
stos
mov
rol
sar
jo
sbb
int
mov
iret
fbld
pop
push
sbb
gs
xchg
ss
cmp
sbb
or
add
xor
mov
shl
fdivr
cmpsb
and
icebp
cli
movl
mov
mov
loope
push
cmp
addr16
xchg
jnp
push
out
xchg
clc
insl
adc
push
push
push
and
push
outsb
call
mov
ret
int
shlb
or
inc
neg
sub
loope
add
inc
xchg
fildl
rcll
std
sbb
aam
mov
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
or
