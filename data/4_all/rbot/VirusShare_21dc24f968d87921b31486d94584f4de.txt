int3
xorb
cmp
xor
add
xorl
call
xorl
add
jb
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
xor
add
xor
add
add
xor
add
xor
add
add
add
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
xorb
sub
jne
pop
sbb
add
add
add
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
inc
add
add
add
add
add
jle
aad
movsb
cmp
int3
xor
mov
pop
inc
pop
inc
xchg
sarb
in
jg
clc
mov
test
mov
inc
sub
cmp
push
mov
aas
ffree
xchg
movsl
add
aam
mov
pop
add
arpl
add
xor
xor
xchg
clc
pusha
dec
lock
int
xchg
aam
incb
testb
sbb
sbb
mov
or
sbb
lcall
leave
cmc
stos
add
and
mov
pop
popf
or
negb
and
pop
add
iret
iret
dec
adc
out
inc
or
mov
lock
movsb
jo
mov
cmc
cltd
jp
imul
inc
sub
leave
inc
mov
stc
add
and
mov
clc
loopne
sbb
xor
test
aaa
add
out
mov
outsb
xchg
and
push
pop
out
bound
mov
lcall
sub
ret
sub
addb
mov
dec
xor
cmp
add
mov
xchg
cmp
cltd
sbb
cld
neg
pop
mov
cwtl
nop
dec
shrl
repz
inc
push
rorb
pop
or
lods
fnstenv
inc
mov
stos
jmp
out
xorb
setno
pop
jmp
cltd
leave
mov
lcall
imul
and
andb
xorb
lds
icebp
fwait
rcrb
jg
in
orl
xor
in
add
inc
adc
and
icebp
mov
loop
or
sbb
sub
hlt
dec
push
ret
stos
repnz
mov
clc
ja
jle
shr
fistl
fistpll
xor
add
gs
fisubrs
scas
outsb
push
jl
addl
inc
gs
add
cmp
sub
push
les
dec
mov
mov
add
stos
gs
in
mov
fdivrp
sub
push
testb
cwtl
xchg
xchg
xor
fiadds
insl
sarl
inc
sbb
pop
sub
test
mov
pop
jmp
mov
and
stos
movsl
lds
xor
sbb
and
sub
hlt
add
insb
push
xlat
clc
in
pop
repnz
jbe
push
xchg
jae
popa
lods
dec
pop
pop
outsb
js
sub
popa
or
pop
mov
inc
in
adc
mov
push
stos
push
xchg
outsl
std
mov
xchg
add
xor
cmp
jg
mov
stos
add
add
popa
mov
pop
dec
inc
pop
push
inc
mov
subl
sub
fsubrs
lret
pop
mov
or
cmp
xchg
gs
in
push
scas
pop
icebp
cmpsb
dec
outsb
test
add
lea
mov
mov
scas
loopne
cmp
xchg
mov
sti
pop
adc
and
xor
fs
out
jge
sbb
adc
enter
sub
iret
cs
mov
jg
sbb
jns
sbb
pop
es
call
pop
cmpsl
outsb
bound
push
roll
sahf
push
ja
push
and
enter
mov
shrl
arpl
addr16
or
jp
aad
jge
hlt
jns
cmpb
push
push
aad
cmpl
lods
mov
imul
loopne
clc
mov
mov
xor
push
jecxz
das
ss
popf
or
or
in
add
add
jno
incl
out
out
xor
cmc
mov
movsb
cmp
movsl
pusha
add
fdivs
scas
aaa
bts
fidivs
scas
xchg
xchg
stos
cmp
sbb
inc
ret
popf
push
fs
hlt
sub
into
jnp
push
add
inc
shlb
sti
dec
sbb
jle
xor
bound
cld
push
adc
inc
sbb
dec
adc
push
ljmp
add
xor
adc
in
mov
mov
rclb
push
fs
jo
inc
push
test
mov
mov
inc
mov
sub
cmp
adc
pop
mov
xchg
je
mov
cli
or
cmp
push
es
xchg
insl
inc
mov
and
mov
dec
mov
ja
pop
and
dec
flds
and
mov
add
and
fadd
fimuls
clc
jne
cli
mov
or
jge
ret
cltd
sub
shll
pushf
in
shlb
ss
inc
push
and
xor
jns
mov
jp
test
lock
roll
dec
add
repnz
data16
mov
jno,pn
lock
and
mov
xchg
fwait
add
fdivl
dec
or
mov
mov
inc
mov
and
inc
loope
roll
lret
lock
push
rcr
push
cmc
hlt
push
jb
lret
xor
popf
in
popf
cld
sub
icebp
lock
xchg
mov
cmc
and
cld
and
dec
and
sbb
pop
leave
leave
add
cmpsb
pop
dec
add
mov
dec
sti
push
xchg
cmp
bound
mov
push
cmp
mov
into
xchg
mov
ret
xor
mov
dec
sbb
inc
pop
jno
icebp
fwait
sbbb
test
push
jae
jae
pop
mov
jmp
fdivs
repz
adc
add
cmp
sbbb
fisubs
movsb
stc
in
dec
add
leave
jno
and
add
cs
ljmp
addr16
out
and
add
adc
imulb
ret
cmpl
imul
loopne
lea
ds
xchg
cmc
pop
rol
gs
lds
jns
rolb
sbb
mov
mov
fdivrl
adc
mov
cltd
pop
out
mov
das
adc
aad
sub
ds
je
pusha
jge
push
adc
mov
add
mov
fisttpl
push
icebp
push
lahf
loopne
jge
or
jno
iret
and
sbb
outsl
sub
std
lock
cmpb
sbb
imul
pusha
jns
adc
xor
andl
lock
sbb
cmp
mov
mov
mov
pusha
loop
lock
or
scas
imul
and
mov
not
divl
movsl
add
das
fisttps
jp
inc
stos
lahf
arpl
loop
xchg
mov
dec
inc
push
or
fsubrp
shl
addr16
mov
push
push
sarl
subb
in
iret
adc
fs
push
fwait
iret
mov
pop
dec
mov
test
push
or
lods
lock
sbb
mov
jecxz
pop
repnz
xchg
jne
ljmp
sub
xor
mov
xor
adc
aas
loopne
cmp
negl
call
imul
cli
test
sbb
and
popf
std
xchg
mov
pop
push
sub
xchg
inc
push
push
add
mov
xchg
mov
mov
or
cmp
jne
sbb
popa
pop
cli
jbe
icebp
test
cmp
or
sbb
ss
cmp
add
sbb
and
add
repz
inc
out
pop
xlat
cmp
xor
add
push
pop
movsl
pop
mov
roll
test
mov
aaa
jle
mov
xlat
cmp
sub
inc
xchg
push
add
inc
and
loop
fnsave
lcall
leave
dec
lea
mov
lret
sbb
mov
popa
fsts
gs
jns
arpl
xor
jb
fsubrs
pop
add
push
fcmovnbe
repz
arpl
jbe
sbb
sub
pop
popa
lahf
lock
cvttps2pi
pop
inc
adc
sbb
mov
movsl
or
xchg
jb
jg
or
xor
mov
push
mov
cmp
mov
fsubrl
imul
loop
mov
fsubs
test
dec
jg
push
add
mov
lds
jl
lods
and
stos
nop
dec
jp
mov
icebp
or
orb
cmc
jne
push
in
push
inc
xor
cmp
shll
addr16
jnp
jp
popw
in
mov
add
in
imul
ret
mov
sbb
clc
mov
mov
add
adc
push
enter
cmpsl
or
mov
lcall
inc
sahf
mov
ss
inc
jo
mov
or
inc
loopne
adc
inc
add
add
add
jle
push
cltd
push
lea
shlb
add
cmpsb
sub
push
int3
adc
add
inc
mov
push
imul
test
lods
cmp
sub
or
aad
or
addb
mov
icebp
pusha
xchg
add
mov
outsl
hlt
sbb
add
dec
call
ret
adc
xchg
mov
xor
or
sbb
adc
dec
xor
cltd
mov
movsb
fnstenv
ja
xor
adc
mov
push
jmp
xor
addr16
cmp
add
scas
iret
outsl
ljmp
pop
inc
aad
inc
mov
xchg
ja
lret
pop
add
or
std
sbb
add
in
fists
ret
ret
and
stos
xor
dec
mov
add
rorl
push
mov
pusha
fucomip
popf
and
cmp
ds
adc
dec
push
dec
mov
outsl
jp
and
inc
nop
or
or
stos
xchg
stos
sbb
push
inc
dec
mov
mov
push
inc
aad
adcb
add
mov
js
enter
mov
lea
push
xchg
repnz
sbb
mov
loopne
add
or
add
pop
mov
pop
mov
fists
cli
mov
insb
pop
and
add
rolb
adc
in
add
mov
dec
sub
repz
jmp
sar
fnstenv
jns
adc
arpl
and
dec
sarb
or
jo
push
loopne
mov
mov
or
mov
in
aad
jge
sbb
add
incl
xor
and
jb
into
testl
loope
add
xchg
xchg
sbb
sarb
adc
adc
xchg
mov
mov
test
xor
loop
test
add
and
dec
adc
jno
jo
imul
push
pop
jge
enter
test
mov
gs
add
sub
push
call
addl
push
addb
adc
ret
jno
daa
push
std
in
test
ret
dec
sub
mov
jmp
xor
and
mov
icebp
xchg
sahf
adc
ja
loopne
xor
mov
adcb
push
xor
xchg
inc
aam
add
inc
mull
push
pop
adc
inc
in
and
les
bound
pop
lret
test
cmpsl
or
mov
xchg
shrb
cltd
pop
push
adc
outsl
xor
out
or
mov
hlt
mov
pop
clc
ljmp
push
jae
inc
add
cwtl
pop
mov
mov
jmp
call
test
test
stos
repnz
push
xor
add
push
sbb
movsb
bound
xor
je
adc
shrb
lea
add
inc
mov
daa
int3
mov
and
xchg
fists
and
es
pop
and
lret
add
push
cmc
repz
inc
xor
pop
sub
lds
jne
push
jecxz
or
xchg
mov
cltd
pop
addr16
out
mov
and
fnstsw
orl
and
push
and
mov
dec
lods
dec
mov
ljmp
cmp
jmp
cwtl
cwtl
and
sub
dec
in
cli
push
inc
adc
push
fsubs
push
inc
lret
pop
int
cltd
ret
test
adc
mov
xor
xacquire
pop
repz
stos
mov
inc
sub
jno
sub
je
xchg
adc
bound
fsubrs
test
nop
bound
int
ljmp
loope
shll
lret
pop
sbb
and
dec
clc
ror
sub
test
xchg
add
or
psllw
inc
inc
jl
pusha
test
repnz
sbb
or
add
pop
xor
sub
nop
inc
cmp
inc
jb
addr16
mov
in
stc
nopl
cmp
stos
cmp
sbb
pop
xchg
xchg
dec
mov
sub
lret
add
push
adc
sarl
insl
and
in
xchg
cmp
adc
add
shlb
mov
fsubrs
clc
push
mov
js
mov
xor
insb
mov
imul
xchg
orb
dec
and
sub
push
pop
or
and
inc
fsubr
call
xchg
inc
test
adc
mov
inc
fdivrs
xchg
adc
gs
mov
pop
jecxz
jmp
das
stos
ss
mov
inc
cmpsb
lods
std
cmp
js
xchg
jl
jle
fistps
test
pop
arpl
pushf
push
push
aam
mov
mov
pop
or
and
cmp
cmp
pop
or
pusha
imul
dec
in
sbb
xchg
decb
stos
cmp
or
hlt
jae
xchg
pop
outsb
mov
push
stos
andl
xlat
jle
xchg
mov
sbb
bound
rorl
nop
and
pushf
push
add
mov
pushf
jmp
jl
cs
cli
rorl
sbb
rorb
lcall
mov
aad
sarl
fmuls
mov
jnp
clc
and
mull
aam
cmp
add
insb
xchg
cmp
out
je
lds
xor
push
mov
cs
jnp
pop
push
or
gs
cmpsb
mov
lret
push
popa
insl
pop
sub
dec
inc
je
mov
jns
jp
adc
adc
jle
lret
popa
sbb
xor
imul
mov
mov
xchg
and
inc
add
pusha
cli
addr16
push
and
mov
cmp
sbb
sbb
ljmp
inc
adc
jg
out
mov
and
adc
mov
loopne
roll
push
mov
add
rcrb
dec
rolb
or
lds
imul
clc
das
sahf
imul
sbb
mov
fisttps
inc
bound
and
fdiv
inc
popf
icebp
mov
add
pop
add
dec
pop
xchg
stc
cmpsl
adc
mov
les
pop
mov
sbb
pop
stc
lret
in
std
and
out
pop
jne
xor
jle
push
xor
inc
or
dec
pushf
icebp
push
ret
fnsave
mov
test
cmp
sarl
in
and
test
jmp
repz
pop
js
aam
mov
loop
cmp
or
cvtpi2ps
pop
cmp
cmp
push
je
out
js
inc
roll
pop
incl
cmc
dec
sub
push
rcrl
bound
clc
inc
stos
cmp
jmp
sbb
push
cli
sbb
jmp
push
mov
incl
outsb
adc
xchg
repnz
rclb
push
xor
adc
lret
out
lods
adc
and
sub
pop
adc
push
lds
inc
mov
adc
inc
les
cs
sarl
jmp
jecxz
jecxz
shll
or
and
scas
mov
add
xor
sub
fwait
loop
dec
adc
insl
je
popa
xor
push
and
les
sbb
add
or
mov
xlat
mov
cwtl
add
popa
test
xchg
jle
cmpsb
push
inc
pop
and
xchg
jge
push
sbb
shlb
pop
fdivs
add
pop
cltd
stos
pop
addr16
jl
push
mov
cld
xchg
dec
xorl
out
sbb
out
or
mov
test
xor
icebp
cmp
adc
sti
mov
shrb
mov
inc
push
pop
jl
js
lret
push
pop
mov
inc
xor
mov
jecxz
lcall
repnz
jo,pn
xchg
sbbb
shrl
jl
push
xor
add
add
stos
push
push
push
les
mov
aam
bound
add
lods
jns
repnz
int3
je
iret
pop
and
pop
xchg
dec
sbb
xor
popf
xchg
sbb
ficompl
rorb
xchg
add
mov
adc
or
out
insb
mov
repnz
sbb
dec
xchg
mov
xlat
jo
dec
aad
pmulhuw
out
push
add
xor
mov
repnz
pop
outsb
push
arpl
pop
leave
cmc
pop
das
mov
mov
fcomi
ret
cli
push
mov
nop
xchg
jae
push
adc
test
and
cmp
movsb
mov
inc
fildl
rolb
mov
insb
add
pop
mov
call
jns
sbb
pop
pop
adc
aad
scas
sub
and
mov
int3
jnp
push
negb
pushf
add
mov
add
inc
mov
scas
add
aad
push
in
inc
sbb
test
aaa
push
pop
mov
or
adc
xchg
jge
daa
jbe
or
sub
jl
sbb
inc
xchg
stc
or
dec
sub
in
jl
xchg
mov
fisubl
das
insb
push
std
mov
and
leave
rcll
dec
fimuls
jno
xor
and
cs
aaa
or
les
fs
cmp
es
das
pop
leave
hlt
jle
jbe
fnstcw
push
mov
sub
mov
popf
mov
mov
divb
out
or
sahf
adc
or
sti
xchg
or
inc
popa
inc
sub
insb
aad
jb
sub
pusha
in
jns
add
adc
push
dec
pop
adc
jns
cmp
pop
adc
das
jne
incl
add
jne
or
push
daa
and
repz
xchg
push
scas
pop
mov
add
imul
daa
addl
adc
icebp
int
push
add
test
or
cmp
leave
cmpsl
sub
dec
inc
loope
push
push
in
je
out
mov
sahf
in
rol
add
xchg
jle
mov
sub
sbb
and
cltd
in
add
cmp
mov
test
cmp
add
cmpsb
and
sbb
lcall
popf
push
add
fisubs
xchg
fcoms
xchg
ja
or
int
push
ret
mov
or
xor
cmp
rcll
pop
test
pop
cmp
insb
shrb
dec
push
mov
mov
shrl
mov
jmp
test
fsubrs
mov
dec
mov
pop
in
sbb
xchg
insb
stos
mov
pop
jl
das
gs
add
xlat
mov
add
and
in
add
push
fwait
sbb
es
jp
ficoms
xor
adc
rcrb
popa
std
adc
test
icebp
mov
or
mov
mov
add
outsl
add
ret
loopne
adc
mov
ret
and
pop
cld
aas
dec
movsb
adc
mov
mov
addl
sub
pop
mov
xchg
cwtl
pop
adc
sub
xor
sub
mov
outsb
iret
int3
lods
pop
sbb
loopne
movsl
or
lock
lret
dec
lds
scas
cmp
sti
loope
pushf
push
addl
jne
daa
inc
xchg
pop
fdivl
adc
scas
dec
gs
add
and
dec
cmp
fsubrs
sahf
out
lds
pop
mov
int
movd
xor
and
inc
xor
push
dec
push
lods
adc
pop
test
and
mov
add
push
dec
or
bound
jbe
mov
xor
movsb
cltd
and
lock
pop
repnz
mov
shlb
mov
pusha
or
xchg
mov
out
das
pop
cmc
push
arpl
loopne
mov
jo
lret
sbb
inc
mov
sub
cli
leave
lahf
pop
or
sub
sbb
add
mov
mov
dec
cwtl
cmp
add
ljmp
aad
add
adc
dec
cmp
lock
stos
mov
insl
jne
pop
lret
push
mov
xchg
xor
push
in
xorl
mov
sub
or
or
dec
cmp
mov
fstl
xchg
add
popf
or
inc
test
pushf
add
test
sahf
movsl
rcll
jb
mov
or
pop
icebp
leave
and
pop
push
insb
xchg
aas
cli
in
lods
mov
cmc
push
pusha
jp
xchg
psadbw
shl
mov
jge
sbb
and
dec
adc
mov
push
jp
xchg
and
cmp
or
mov
pop
dec
adc
leave
mov
in
mov
push
mov
push
pop
mov
pop
dec
lods
lret
xlat
aam
xor
addb
jns
add
push
push
sbb
nop
xchg
add
add
push
or
inc
push
push
add
dec
call
xchg
xchg
xorb
test
add
aas
xchg
pop
and
imul
mov
jb
xchg
xor
adc
ret
pusha
mov
arpl
addr16
adc
cmpsb
add
and
iret
push
mov
rol
mov
stc
movsl
or
pop
lods
cs
movsb
push
adc
and
mov
or
dec
cmpsb
add
addl
shrw
icebp
sub
sti
fmull
sahf
lcall
mov
sub
add
add
sub
or
mov
mov
repz
jmp
adc
subl
test
fwait
lret
addb
fs
adc
lea
ficoml
or
mov
scas
fs
jno
sti
cmp
shrl
push
adc
adc
add
pop
xchg
sub
push
mov
movsb
push
sbb
inc
lds
xor
mov
and
dec
inc
loope
adc
mov
loopne
add
inc
push
out
dec
and
xchg
mov
inc
arpl
mov
push
add
lahf
jle
stos
fistpll
jp
mov
mov
sub
lahf
stos
jl
inc
lock
pop
pop
aad
add
sub
cmp
stos
mov
aas
in
and
add
sub
add
mov
loope
xor
and
int3
push
push
lcall
cmp
inc
shll
sbb
popa
fdiv
sub
bound
mov
sbb
mov
add
or
and
cmpsl
jno
push
mov
inc
mov
push
add
pop
test
pop
cmp
adc
out
nop
cmp
sub
mov
add
dec
xchg
cmp
ret
dec
push
js
sub
icebp
neg
sub
xor
jno
aaa
dec
mov
and
jo
mov
scas
jno
into
push
outsb
insb
rorl
cld
shrb
fimuls
clc
pop
scas
push
xor
or
adc
push
insb
loop
jae
mov
add
and
imul
and
rcll
jg
cmp
cwtl
lods
mulb
mov
fsub
lds
daa
jno
inc
call
fiadds
and
and
inc
mov
stos
mov
shlb
dec
adc
and
lret
insl
adcl
imul
insl
jle
aas
repz
dec
fimuls
lahf
cmpsl
loope
popa
and
pop
popa
aam
addb
sbb
loop
jmp
shrl
les
out
push
push
mov
gs
cmp
mov
pop
lahf
lahf
and
and
daa
mov
les
pushf
push
fiadds
leave
pop
xchg
call
aaa
jns
mov
mov
jb
es
enter
cmpsl
stc
add
sbb
add
sti
xor
hlt
adc
roll
or
iret
mov
xchg
xchg
inc
idivb
cmp
or
inc
std
popa
push
mov
inc
add
and
rcll
push
loopne
in
xor
pop
jecxz
fs
loope
mov
add
sbb
sti
or
add
and
adc
pop
mov
mov
mov
sti
sahf
fs
orb
fisubl
dec
mov
or
es
sbb
and
sub
adcb
enter
and
pop
and
out
jb
rcrl
add
data16
bound
adc
dec
cmp
sbb
mov
clc
in
mov
mov
push
sbb
add
cmp
scas
jge
mov
adc
mov
dec
inc
xor
xchg
jp
out
xchg
mov
call
pop
or
stos
sub
stos
and
repnz
loop
repnz
in
test
add
adc
add
lods
bound
testl
adcl
cwtl
lds
add
std
fstenv
adc
mov
rorb
sbb
pop
fcomps
dec
add
sbb
fistpll
sub
push
cs
xchg
mov
ret
mov
cmp
pop
lds
and
push
mov
xchg
shll
pop
mov
lcall
mov
lahf
fstpt
mov
ret
int
int
add
das
out
push
int
in
fstl
mov
xchg
cmc
daa
pop
fildl
mov
jne
ret
adc
cltd
mov
jmp
loope
inc
in
mov
ja
mov
sbb
dec
adc
sub
dec
repnz
push
adcb
and
aaa
mov
mov
push
sub
int
push
pop
je
and
jns
push
cmpb
push
add
jmp
jle
rolb
sbb
mov
ja
xchg
sahf
cmp
mov
sub
sbb
mov
or
pop
and
mov
or
in
mov
jno
sar
sbb
insb
inc
aam
insl
mov
leave
stos
ss
out
inc
loopne
xorl
pop
adc
testb
push
mov
mov
add
imul
mov
push
sub
shr
push
mov
sbb
popl
sub
push
hlt
push
inc
cltd
pusha
mov
push
cmc
jb
or
push
adc
outsl
inc
pop
mov
and
add
mov
dec
popa
je
adc
and
sub
scas
aad
push
cmp
adc
xchg
push
mov
fnstenv
out
fsubs
adc
lcall
sub
mov
pusha
sbb
repnz
addr16
fiaddl
aaa
pop
fistps
scas
xchg
jl
es
shufps
mov
test
insb
or
pop
andl
shlb
inc
leave
mov
pop
fisttps
fisttpll
aad
push
jmp
out
test
cld
push
cmp
ret
and
cmp
adc
jmp
cs
or
xchg
sbb
mov
pop
cwtl
lods
inc
lods
loope
adc
dec
fcoms
sub
cmp
subb
sub
cs
fcomip
cltd
hlt
or
or
cmpsl
dec
xchg
js
sbb
pusha
inc
andb
adcb
sub
pop
push
push
cmpsb
test
cmp
cmp
ror
mov
ljmp
clc
jecxz
mov
push
inc
jecxz
ret
data16
mov
out
pop
jmp
sbb
adc
nop
daa
dec
or
out
or
mov
push
xchg
lock
lahf
push
and
outsl
jecxz
push
sub
push
loopne
int3
inc
xchg
shlb
xlat
cmc
fwait
stos
sbb
jne
sarl
mov
repnz
pop
cs
cmp
xor
out
mov
leave
push
push
pop
dec
sub
test
scas
mov
test
imul
ss
stc
int
ljmp
loope
pop
cmc
sub
in
stos
sar
mov
xor
push
jge
nop
repnz
dec
dec
addps
add
cwtl
sti
outsl
repz
dec
lock
push
cld
adc
xchg
and
sub
inc
cmpsl
pop
push
xlat
mov
jle
add
mov
pop
mulb
pushf
fstps
jle
cs
xchg
inc
cmpb
sub
test
out
popf
mov
mov
push
mov
imul
sbb
nop
xchg
xor
add
pop
repnz
xchg
stos
fidivrl
sbb
dec
mov
daa
sub
popf
jg
subl
testl
add
rorb
lods
and
cmpsb
add
cmpsl
xchg
fdivrs
mov
test
adc
sub
mov
mov
push
mov
repz
cmpsl
mov
mov
sar
int
and
ret
push
lret
jle
jne
jo
xor
lods
pop
or
jo
fwait
dec
fdivrl
mov
cs
or
or
es
pop
filds
in
sub
jbe
xchg
lret
xchg
pop
xor
mov
push
aam
lret
xchg
cs
mov
inc
pop
sbb
jae
pop
test
xor
xor
scas
cli
movsl
cmc
add
pusha
sbb
and
inc
test
jb
dec
cmp
add
add
lea
mov
std
mov
cs
jl
iret
stos
mov
lea
or
paddq
cli
idivb
jmp
scas
ret
rorl
push
mulb
jbe
mov
dec
subl
aaa
test
lcall
sbb
dec
dec
scas
push
jl
adc
repnz
sbb
scas
xchg
ret
stos
fsubs
mov
cld
inc
mov
pusha
add
arpl
jne
loopne
or
jnp
push
add
scas
cmp
mov
lea
jge
dec
pushf
add
cli
xchg
inc
pop
leave
arpl
cli
mov
in
roll
lds
sub
cwtl
in
jbe
or
pop
jae
mov
lcall
out
dec
test
inc
cmp
sub
subl
push
dec
mov
fwait
daa
cmc
or
xchg
icebp
pop
mov
adc
inc
dec
xchg
jle
imul
je
jo
insb
adc
adc
fcmovne
sub
insb
xor
jb
xchg
fcoms
pop
pop
jecxz
lea
hlt
inc
sbb
lcall
mull
inc
sarl
dec
in
out
das
and
imul
es
jo
ja
pop
test
movsl
arpl
jo
in
pop
fidivl
cmp
clc
mov
xor
xchg
pop
bound
into
jb
scas
adc
loope
into
mov
pop
mov
je
xchg
push
mov
xchg
push
jb
mov
pusha
mov
pop
gs
fisubrs
xor
adc
inc
xor
stos
inc
sub
int3
das
lret
ljmp
pop
push
dec
mov
decb
test
dec
push
and
stos
dec
sbb
inc
xchg
or
sub
mov
push
aaa
jp
arpl
sbb
jne
in
jge
mov
fstpt
roll
push
insb
xor
adc
outsb
cmpsl
push
out
ss
push
gs
jp
ds
adc
ss
mov
ret
call
lret
stos
shl
fnstsw
test
lret
and
les
sbb
lcall
clc
jecxz
add
scas
test
cmp
push
inc
sbb
call
insb
mov
jns
adc
rorl
mov
sbb
pop
add
push
test
lds
subb
into
jns
add
sbb
lds
mov
mov
or
add
add
inc
jne
in
inc
pop
jno
loopne
sub
into
mov
or
cmp
cmpsl
pop
in
pop
adc
and
xchg
xor
and
scas
pop
cmp
daa
cli
in
fdivs
jne
aad
xchg
mov
into
call
inc
sarb
sub
mov
scas
pushf
test
bound
push
xchg
adc
push
sbb
cmp
and
jae
stos
insb
mov
in
pop
in
lret
push
hlt
inc
mov
stos
fldt
stc
icebp
sbb
or
adc
pop
mov
sbb
push
fnstenv
scas
or
fisubs
mov
std
push
jo
push
adc
das
scas
xchg
xchg
add
sarb
and
mov
cmc
cmp
in
or
jge
jl
sub
mov
and
sbb
fists
cwtl
aad
stos
pop
fisubs
inc
sbb
psraw
stc
aaa
mov
mov
aam
adc
pop
pop
andl
int3
loopne
std
test
shlb
dec
jae
sbb
fs
jecxz
xchg
sub
mov
cs
roll
mov
dec
cmc
inc
stos
loop
test
cmp
lea
lahf
jg
rep
ja
pop
movsl
ljmp
inc
fdivrs
inc
pop
popa
mov
pop
cld
adc
lods
xor
pop
in
outsl
clc
into
lea
lea
repz
mov
push
outsb
movb
lahf
adc
adc
ja
movsb
imul
add
or
add
dec
sub
outsl
sahf
dec
lds
inc
fwait
daa
je
inc
inc
out
or
xor
sar
push
mov
ret
daa
daa
adc
push
jbe
lods
pop
or
jle
fcomp
jl
or
sti
pop
jg
or
xchg
mov
sbb
add
ljmp
fisubrl
or
out
sbb
lods
cmpsb
rcrb
insb
movsb
xchg
mov
nop
mov
imul
gs
ret
sub
xchg
mov
mov
jmp
pop
dec
mov
mov
enter
push
mov
dec
mov
adc
daa
mov
mov
cmp
add
orl
test
insl
int3
add
xchg
fldenv
or
mov
movsl
fwait
cmpsl
call
aaa
movsl
fwait
push
push
aas
pop
mov
icebp
mov
sub
pusha
push
jo
cmpsb
pop
jns
xor
imul
cmp
mov
hlt
cmp
mov
cld
adc
mov
sbb
push
insb
cmpsb
inc
pop
scas
sbb
das
mov
push
leave
fdivs
shr
mov
imull
and
dec
into
add
orl
test
mov
jb
xor
push
sub
add
mov
inc
pusha
in
push
das
pop
ss
push
sub
repnz
in
pop
lods
dec
cmp
lea
jae
icebp
inc
out
sub
imul
je
jg
ret
aam
inc
cmp
jns
cltd
xchg
adc
push
push
out
js
mov
jno
sbb
mov
adc
xchg
pop
push
dec
test
xchg
xchg
add
ljmp
jmp
pop
ret
rclb
outsb
adc
and
test
and
lea
jle
stos
push
push
jne
cmpsb
loope
cld
out
cmpsl
cs
popf
inc
incb
ja
push
xchg
cmp
in
xchg
lea
or
stc
mov
mov
je
inc
push
cmpsl
leave
xchg
and
out
sbb
sub
lea
xor
addr16
ja
add
or
push
push
xor
jmp
fidivrl
cmp
int3
add
aad
push
and
mov
aam
test
push
or
les
or
repnz
jo
mov
call
xchg
xor
pop
inc
mov
push
push
adc
inc
jno
sahf
sub
jbe
mov
test
stos
add
sub
adc
out
fisttpll
add
stos
leave
mov
movsl
cli
lret
xchg
sbbb
lret
sub
adc
lea
add
push
in
addr16
xor
cltd
adc
push
and
aaa
test
inc
into
gs
lret
cmp
clc
and
cmp
test
mov
mov
dec
mov
push
or
test
sub
push
sub
mov
jae
test
add
pop
push
shr
ljmp
adc
stos
xchg
daa
cmc
adc
out
cmp
notl
mov
call
dec
lret
into
ficomps
in
pushf
adc
mov
std
fs
adc
or
adc
add
push
pop
xchg
push
andl
dec
add
in
sub
int3
fwait
pop
clc
aaa
dec
push
movsl
mov
nop
cmp
add
xor
in
inc
mov
pop
je
test
pop
mov
jbe
pushf
popa
test
push
pop
sub
aad
out
lods
stos
cmc
sarb
icebp
jae
or
ds
rorl
push
push
jge
iret
std
adc
out
pusha
adc
lds
push
mov
popf
sub
out
push
in
jg
xchg
pop
xchg
iret
mov
add
lret
call
add
scas
cmp
sbb
pop
insl
dec
ficoml
xor
pop
les
clc
dec
dec
mov
xchg
shlb
add
dec
orl
mov
scas
ret
js
mov
lahf
stc
adc
sbb
rorl
jns
pop
scas
jnp
cmp
daa
fwait
jne
test
cld
jge
out
pop
je
ja
cmovne
insb
xor
push
push
mov
xorb
mov
insl
mov
adc
xchg
push
adc
sbb
aas
fdivrl
out
bound
adc
and
or
cmp
and
add
adc
movsl
adc
xchg
inc
jge
int
jge
in
mov
pop
mov
cmpsl
lcall
movsb
cmp
in
sbb
mov
in
or
addr16
int3
cmpsb
jl
mov
push
push
fisttpll
jmp
mov
sbb
test
mov
adc
push
rolb
aaa
cs
mov
sbb
mov
loop
jg
and
in
sti
mov
in
add
push
and
mov
mov
xorl
push
add
mov
or
test
pop
cltd
xor
faddl
mov
andl
pop
cltd
jp
xchg
test
mov
insb
jge
pop
cmp
sbb
dec
rcr
loop
sbb
sbb
or
das
mov
sbb
loope
dec
loopne
adc
stc
push
pop
sbb
add
mov
sub
imulb
lods
jne
adc
sub
jp
lret
lods
add
dec
test
inc
jae
add
scas
pop
xchg
jl
hlt
inc
stc
dec
push
rorb
sub
adc
mov
ret
popa
icebp
int3
mov
mov
push
ljmp
push
lret
or
or
decb
lods
pop
test
xor
sub
xor
xchg
fiaddl
cmp
test
pop
faddl
in
inc
mov
cltd
mov
dec
adc
outsl
push
out
adc
leave
aam
and
push
sub
sub
ret
mov
test
cmp
test
scas
cli
mov
insb
sbb
flds
adc
mov
cmp
and
lcall
adc
imul
and
mov
mov
adc
pop
loope
inc
fsubl
daa
push
mov
and
aaa
mov
pop
mov
mov
jge
out
pop
and
test
in
jge
ret
mov
gs
scas
adcb
push
subl
xchg
js
and
ljmp
stos
aas
cmc
movsl
scas
adc
jp
cmp
js
push
call
cmp
movsl
inc
mov
mov
pop
xor
or
pop
xor
les
sahf
bound
out
aam
stos
ja
inc
popf
ds
push
adc
dec
lahf
pop
push
insb
sub
sub
cmp
pop
push
fsts
mov
pop
and
pop
pushf
and
push
je
out
test
jg
ss
mov
aam
repnz
add
xchg
imul
sbb
int3
outsb
pop
jns
ja
xchg
movsl
jbe
xchg
sub
dec
sarl
sbb
fidivrs
cmp
mov
or
mov
adc
dec
mov
sub
loope
dec
add
ficoml
aaa
pop
sbb
push
arpl
inc
into
scas
jmp
mov
xchg
mov
adc
lds
push
ret
cmc
adc
pop
inc
xchg
or
in
clc
into
insb
pop
dec
adc
loope
xchg
pop
sbb
scas
or
loop
jno
mull
into
int
int
out
fbstp
xor
pop
xchg
add
and
push
and
stos
inc
mov
adc
inc
pop
bound
ljmp
sub
jo
pop
mov
adc
pusha
imul
dec
aaa
in
stc
jns
mov
xor
test
jbe
mov
dec
adc
jge
adc
sbb
push
xchg
jle
mov
ret
insl
sub
les
mov
fnstenv
in
dec
pop
adc
lds
sbb
adc
popa
test
ret
xchg
adc
ret
daa
dec
subb
xor
mov
ffreep
imul
pop
int
mov
adc
adc
out
pop
pop
rcrl
mov
pop
push
jmp
ljmp
push
dec
jo
sahf
add
xchg
test
pop
or
push
sub
mov
mull
cmp
cmp
jns
xlat
inc
mov
inc
mov
mov
pop
aaa
daa
inc
push
into
mov
mov
pop
xor
popf
sbb
mov
pop
and
lret
nop
dec
jno
or
push
push
xor
mov
cmpsl
pop
out
test
lahf
ficoms
sub
jecxz
stc
js
hlt
into
aad
ret
jo
cmp
inc
mov
daa
jp
sub
adc
negl
test
xor
cmpsb
or
push
pop
lods
jno
icebp
negb
out
and
jle
inc
xor
or
test
dec
jecxz
pushf
je
add
push
jg
pusha
push
push
psubd
xchg
sbb
hlt
scas
jbe
inc
add
cmp
sub
cmp
movsl
lret
mov
mov
clc
loop
xchg
adc
cmp
cwtl
shlb
ds
mov
imul
rcrb
shlb
xchg
js
in
out
mov
call
cmpb
push
ret
imul
ss
loope
or
jmp
ret
and
sarb
jle
ljmp
mov
xor
cltd
int3
push
fimull
push
popa
pop
pop
inc
pop
testb
push
push
mov
dec
sti
jl
test
sub
dec
xor
push
add
bound
imul
aas
mov
add
or
or
aad
cld
push
jns
jo
popa
push
pop
hlt
movsl
add
mov
dec
sub
lret
jmp
aad
rcrl
pop
out
add
push
test
jo
jp
add
pop
popa
xor
push
mov
and
popf
xchg
int
pop
add
stos
into
cli
jno
xchg
sub
loop
dec
das
mov
iret
les
xchg
mov
sub
sahf
push
loope
and
rolb
lea
lock
adc
mov
les
or
les
aad
rorl
xor
xchg
add
arpl
sbb
les
testb
add
add
or
and
cmpxchg
sar
iret
sub
adc
add
push
int3
js
nop
mov
adc
fadds
test
push
mov
in
pusha
or
loopne
loop
sub
mov
cmp
cmp
repz
sub
xor
push
mov
dec
adc
xor
call
mov
movsl
iret
nop
inc
ret
pop
jne
into
or
or
pusha
arpl
sbb
adc
xchg
popl
nop
in
add
dec
adc
and
or
pop
push
and
stos
rclb
cltd
in
xor
out
sbb
inc
jo
mov
shll
sub
aad
mov
dec
push
inc
or
adc
test
and
gs
jo
mov
lea
lea
adc
push
dec
adc
and
xchg
pop
clc
add
out
aaa
dec
mov
outsl
cld
sbb
and
pushf
sbb
push
sahf
or
lods
rcr
mov
inc
adc
imul
mov
adc
xchg
pop
mov
mov
cmp
mov
cmpsl
or
movsb
adc
outsl
test
out
pop
cltd
dec
fildll
lea
and
shrl
mov
and
shrl
repnz
and
mov
or
mov
xchg
mov
ja
xchg
xchg
mov
into
or
aam
out
xchg
xor
xchg
aaa
mov
xchg
adc
jo
mov
pop
movsb
inc
pushf
or
adc
push
sbb
dec
or
dec
es
xchg
or
movsb
shll
es
inc
sbb
movsl
adc
adc
inc
adc
mov
mov
sti
lahf
or
add
pushf
sbb
fnstsw
adc
xor
cmp
in
aaa
rcr
adc
ret
or
xchg
add
xor
mov
sub
inc
loopne
lock
mov
mov
test
stos
sbb
xor
adc
sbb
fsubrs
xchg
shrl
insb
test
cmp
fsubs
jns
in
sahf
push
pop
add
push
pop
mov
push
push
adc
inc
adc
and
mov
fisttps
sub
adc
fisttpl
in
hlt
lods
gs
cwtl
loop
sub
inc
inc
shrb
adc
in
xor
mov
mov
xor
mov
nop
icebp
xor
std
sbb
inc
rorb
ret
rcl
rorb
sub
sbb
cltd
rorl
cltd
xor
adc
nop
lea
mov
daa
dec
jnp
popa
mov
daa
cli
push
jo
out
adc
int3
push
push
les
mulb
nop
popa
push
dec
pop
sbb
cli
inc
mov
jmp
in
jmp
gs
loopne
loopne
jl
call
push
mov
lea
inc
rorl
lret
movsb
arpl
xor
into
faddp
nop
sbb
imul
dec
in
test
lea
inc
shr
inc
shrl
ljmp
and
dec
enter
das
sbb
mov
mov
or
andl
movsb
xor
push
mov
out
cltd
lods
test
dec
and
inc
aam
xor
cmp
dec
dec
mov
dec
cltd
cmpb
aam
aaa
mov
out
push
xchg
pop
push
adc
daa
xchg
xchg
aam
stos
adc
and
mov
movsl
and
fidivrs
push
mov
test
sbb
sbb
push
or
adc
adc
loope
dec
mov
mov
fnstsw
lret
rcrb
addr16
jae
or
inc
add
cwtl
out
mov
lods
subb
movsb
sub
adc
xor
cmp
cli
push
mov
or
xchg
push
jae
nop
loope
mov
cmp
gs
fisttps
push
das
push
insl
lahf
dec
jmp
fidivl
jle
into
stc
iret
xchg
cs
or
outsb
xor
pop
xchg
inc
fsubl
or
cmp
sub
mov
inc
lods
adc
inc
xchg
mov
cmpsl
mov
add
inc
int3
popf
adc
xor
mov
pop
cli
sbb
popf
sar
or
inc
in
and
jo
sub
into
adc
xchg
out
pop
sbb
dec
lahf
sbb
les
arpl
bound
dec
aad
pop
cmp
inc
cmpsl
std
cltd
inc
test
sub
mov
push
xor
inc
test
icebp
fstps
sub
mov
add
lcall
xor
insb
lock
mov
or
stos
xchg
dec
add
imul
fists
bound
ljmp
push
inc
pop
je
mov
stos
ret
lgs
mov
test
mov
mov
in
cmp
and
adc
int3
mov
cmp
xchg
cmp
cwtl
adc
movsb
stos
push
aas
mov
add
pop
jl
rorb
lods
subl
jns
out
add
jne
xor
xor
jb,pn
pop
in
ret
les
sti
cmp
js
call
xchg
pop
out
xlat
or
movb
mov
jmp
adc
pop
stos
ficoms
adc
add
fisttps
test
cmc
test
bound
xor
inc
into
dec
xor
xor
les
mov
std
ficompl
push
aam
push
add
repnz
cmpl
pop
add
call
xchg
adc
inc
cmp
addr16
pop
cmpb
xchg
std
testb
sub
cltd
lds
pop
mov
int3
adc
inc
or
rdtsc
rclb
push
xor
aam
call
daa
or
pop
test
inc
incb
fisttps
fnstcw
sbb
add
cmpsb
enter
push
daa
test
pop
gs
inc
test
ljmp
data16
lock
or
cs
fimull
and
cld
adcb
push
lock
je
fldl
and
dec
imul
shll
out
xchg
push
lods
repnz
cmp
cmp
sbb
pop
out
leave
ljmp
dec
out
adc
mov
call
sti
mov
inc
mov
in
scas
mov
or
into
pop
push
adc
scas
call
adc
std
dec
pop
enter
mov
or
adc
jo
ret
enter
dec
test
xor
rclb
or
inc
pushf
pop
mov
xchg
push
fwait
add
pop
es
jne
or
add
cltd
aaa
ss
sbb
sbb
xor
cmpsb
imul
pushf
and
lcall
lcall
mov
repz
xchg
sub
std
stos
and
sahf
mov
push
mov
imul
pop
push
lods
cli
lods
fs
sbb
and
mov
cwtl
out
adc
sub
inc
fldl
or
and
data16
add
mov
in
add
cwtl
jge
xchg
mov
lret
data16
pop
out
lods
sbb
add
inc
out
and
andl
add
mov
sar
sbb
sbb
sbb
adc
jg
popa
mov
mov
mov
inc
mov
fstl
xor
push
lds
ljmp
push
or
jecxz
add
in
push
je
or
dec
scas
das
xchg
icebp
test
shlb
cld
test
xor
pop
les
and
stos
faddp
in
fsubl
mov
sub
pop
test
push
or
inc
or
xchg
xchg
inc
popf
pop
sub
push
popf
repnz
fdivp
cmpsb
js,pn
or
mov
test
movsb
mov
jecxz
mov
xchg
movsl
fistps
test
adc
inc
cli
dec
aam
inc
loope
mov
test
mov
rcll
and
xchg
lea
ret
and
mov
adc
and
push
adc
or
pusha
sub
mov
xlat
outsb
bnd
ljmp
nop
adc
in
addr16
in
ljmp
adc
lock
mov
test
insb
roll
push
adcb
das
and
loop
scas
ret
dec
aad
aam
movsl
dec
adc
xor
xchg
dec
and
cld
lds
mov
mov
fadd
ja
push
in
cmc
adc
xor
jmp
pop
sub
lahf
inc
ret
rcll
leave
lds
mov
add
iret
pushf
int3
xlat
insl
insb
fisubrs
lock
imul
les
jl
clc
jb
push
lods
dec
cli
enter
adc
sti
xlat
and
adc
subl
fdivrs
sbb
dec
xchg
mov
adc
jl
mov
stos
mov
sbb
shrl
mov
fcmovbe
inc
fnstcw
mov
xchg
or
mov
ret
mov
pop
or
and
push
mov
filds
pop
shlb
bound
adc
pop
xchg
inc
dec
es
push
sbb
add
lds
mov
mov
test
aad
push
rcrb
orl
stc
test
nop
jne
ja
push
cmp
mov
and
inc
shll
xor
lds
cmp
sahf
sti
add
lret
into
cmp
stos
jns
xchg
mov
add
enter
sub
movsb
pop
loopne
xor
into
cld
push
jmp
inc
jg
jns
les
mov
cmpsl
push
pop
ror
pop
push
sbbb
call
dec
inc
mov
jne
outsb
pop
dec
mov
ss
test
adc
mov
mov
mov
or
xchg
cmp
mov
xor
les
fidivrl
xchg
or
jns
insl
mov
int3
pop
jg
ficoms
js
inc
pop
mov
or
and
fistps
and
cli
test
cmpsl
roll
jb
mov
jecxz
mov
add
dec
mov
addr16
ljmp
aad
jne
adc
sub
call
inc
daa
dec
fstpl
imul
mov
push
adcl
mov
scas
or
ret
in
rclb
out
cmp
in
pop
rcr
and
into
xor
clc
push
push
ds
mov
push
xchg
jns
outsb
inc
mov
mov
dec
xchg
push
repnz
mov
insl
popf
fsubl
lahf
out
and
pop
jo
loope
dec
rol
imul
sub
pop
push
je
and
lods
jne
ficompl
lahf
jns
xor
dec
cmp
test
sub
jmp
pop
mov
jmp
mov
cmp
das
mov
icebp
dec
or
int
mov
test
cmpsb
loopne
addr16
push
xchg
add
stos
stos
mov
xchg
js
adc
pop
push
insl
and
fidivrs
popa
hlt
mov
movsl
ret
addr16
clc
ret
movsb
jecxz
push
inc
movsb
imul
cld
jge
aaa
push
movb
cmp
cmp
push
aaa
pusha
mov
push
push
nop
or
pop
mov
adc
sbb
or
aad
fildll
int3
push
movsl
or
cs
xor
or
jp
sbbb
psubsb
mov
ficoml
cmpsb
andnps
push
push
aas
inc
dec
push
mov
inc
jno
movsl
sbb
mov
bound
sbb
jne
test
adc
mov
mov
inc
xchg
inc
aaa
pop
movsb
stos
loop
in
add
repnz
or
jns
add
fbstp
icebp
imul
ja
jle
das
stos
cmp
adc
dec
andl
jg
fnsave
scas
test
xchg
scas
mov
addr16
cmpsb
mov
pop
jl
arpl
jge
pushf
add
pusha
dec
inc
adc
ret
insb
arpl
lret
jno
scas
pop
ret
cmc
loop
pop
inc
shrb
leave
dec
jno
add
pop
mov
lds
or
add
mov
jne
and
lods
xorb
jp
repz
pop
xor
pop
dec
or
fimuls
out
dec
xchg
lock
loope
cwtl
push
call
push
push
gs
xchg
call
cmp
inc
mov
sahf
xor
pop
adc
lahf
dec
xchg
xor
fistl
loope
sarb
adc
out
stc
jge
pop
in
call
fldcw
push
in
fisttps
arpl
aas
loopne
adc
in
push
or
sbb
fwait
lahf
dec
mov
rcll
dec
xchg
mov
mov
int3
dec
mov
mov
clc
dec
and
mov
lcall
lds
dec
addl
sti
dec
sub
jmp
loop
or
aas
lods
ja
es
mov
inc
cmc
addl
xor
loopne
je
or
xchg
dec
leave
and
mov
adc
or
gs
cmp
or
mov
jne
jmp
movsb
mov
pop
and
mov
out
pop
in
push
or
cmpsl
pop
add
pushf
scas
cmp
jecxz
mov
adc
push
mov
aaa
add
rcrb
pop
bound
add
lods
stos
push
pop
push
jge
and
mov
dec
push
add
push
dec
xor
push
xor
mov
dec
adc
addb
cs
push
mov
idiv
loope
pop
daa
jmp
cli
jg
std
xor
in
in
adc
sub
orb
xchg
int3
dec
mov
ficoms
popf
shl
repz
jnp
sbb
roll
or
sub
imul
mov
lahf
pusha
jle
inc
ljmp
js
jo
int3
or
cld
cmp
inc
inc
shll
pop
arpl
subb
push
icebp
inc
out
dec
bound
and
jb
and
add
ja
inc
lods
xchg
push
jns
jecxz
ret
add
inc
unpckhps
clc
std
shrb
inc
jo
push
sbb
pop
rolb
and
lret
or
pop
push
adc
xor
sub
lret
xacquire
mov
les
call
mov
adc
pop
mov
jae
addl
orb
xor
mov
adc
dec
int3
ds
popf
cmpsb
or
movsb
sub
and
cmp
push
je
aad
push
jo
mov
shll
mov
je
lods
sbb
sbbl
push
or
adcl
pop
cltd
dec
movsb
sbb
scas
test
dec
cmp
lcall
xchg
hlt
je
int
xchg
dec
jp
stc
cmpsl
cs
test
and
mov
mov
mov
lods
shrl
push
mov
mov
jbe
lcall
mov
jg
imul
imul
lods
jo
insb
mov
arpl
shlb
fdivl
sarl
test
push
dec
mov
pop
pop
mov
mov
push
lods
mov
mov
dec
xor
sbb
xchg
mov
push
xor
push
inc
insl
fnsave
movsl
add
xor
and
push
push
xor
ds
jmp
xor
or
jl
sbb
xor
or
rorl
repz
dec
mov
repnz
adc
dec
fs
or
mov
sbb
movsl
jnp
dec
daa
cmp
push
xchg
jmp
fwait
or
jo
orb
inc
test
jp
imul
mov
pop
push
add
mov
pop
add
movsl
pop
sub
xor
cmc
pop
or
or
std
repnz
inc
xlat
in
cmp
rolb
into
scas
pop
loopne
addb
or
and
add
sub
out
push
pop
mov
mov
fwait
jmp
or
dec
loope
xor
lods
test
or
stos
mov
out
sbb
mov
leave
push
push
xchg
xchg
insb
push
fwait
test
leave
cltd
push
dec
sbb
push
mov
stos
addr16
roll
or
pop
add
dec
pop
dec
movsl
push
xchg
sbb
stos
fwait
add
scas
jae
sti
scas
mov
jecxz
jl
push
push
adc
jge
xor
data16
push
adc
inc
into
je
cld
cli
mov
lahf
push
das
fsubl
cs
mov
es
shlb
cmp
mov
scas
mov
adc
inc
fcomi
rcll
xor
sub
out
and
mov
in
mov
sahf
ja
pop
out
mov
and
cmp
dec
jmp
add
test
jl
mov
lahf
cltd
or
mov
test
out
lock
stc
mov
cmc
ds
hlt
sti
jae
lahf
mov
push
add
xchg
or
loop
mov
jle
inc
in
stos
lods
test
pop
xor
inc
repz
xchg
sbb
idiv
jp
xchg
sbb
into
push
adc
pushf
cld
pop
xor
dec
xchg
imul
push
mov
fsubrs
popa
pop
sbb
loopne
addl
sbb
lds
sarl
mov
sub
push
or
mov
jb
call
mov
xlat
ret
rcrb
jl
fs
inc
movsb
insl
je
movsl
xlat
adc
pop
out
leave
das
or
popf
je
or
fstps
jns
outsl
mov
push
pop
out
cltd
bound
arpl
or
test
in
ljmp
cmpsb
adc
stos
in
mov
push
and
shll
dec
mov
lock
lods
test
jge
push
xor
repnz
scas
and
loope
mov
fisubrs
mov
test
test
cmpsb
inc
push
inc
sub
inc
pop
scas
lret
test
subl
lea
lods
div
jle
incl
mov
push
aam
aas
rorl
mov
fwait
push
xor
std
shl
je
fisttps
fsubrl
adc
cmp
adc
cmp
test
filds
clc
stos
cmp
mov
and
lods
mov
add
and
out
mov
sub
and
jg
or
adc
mov
push
lods
imul
sub
mov
inc
pop
adc
ffree
aam
ss
lods
or
jmp
call
jmp
cmp
fnsave
push
cmp
lock
add
mov
sub
mov
or
xchg
mov
push
outsb
stc
and
pop
out
pop
movsb
push
sub
mov
dec
loopne
lds
cmp
or
adc
pop
push
pop
or
loope
inc
enter
xor
loopne
mov
or
imulb
mov
jns
xlat
loope
notl
mov
bound
cmp
mov
mov
mov
dec
sub
mov
fs
loope
jg
mov
sahf
jg
pushf
xchg
mov
stos
xor
push
xchg
mov
loopne
xor
add
mov
fwait
sub
cltd
lods
push
icebp
xor
xchg
and
popa
push
jecxz
cli
push
clc
loope
out
sti
arpl
shrb
rcrb
sub
or
out
loop
fsub
jge
sbb
jb
inc
call
mov
dec
mov
jge
push
xor
jmp
and
push
cmpsl
dec
mov
lret
test
cmp
inc
lcall
jg
rol
js
add
adc
lret
gs
push
push
add
sarl
arpl
ljmp
aas
dec
mov
pop
push
mov
pop
sahf
movb
jbe
int
addr16
call
pop
mov
dec
mov
jne
mov
push
cmc
sbb
stos
movl
xchg
mov
or
test
xchg
lret
lret
pop
ljmp
fiaddl
cmp
xchg
mov
sub
testb
mov
xchg
or
xorl
lds
test
stc
lock
adcb
adc
mov
xor
sahf
roll
inc
scas
sub
jne
loop
mov
cmp
icebp
out
test
divl
aas
push
sbb
jg
mov
andl
inc
sahf
popf
pop
xchg
lcall
sub
push
pop
cli
jb
lea
rolb
sar
fadds
idivl
cmp
or
mov
xor
jmp
jmp
fisttpl
jg
push
movsb
jno
mov
movsl
sub
das
push
and
nop
int
sub
cs
in
add
cld
sbb
ja
lret
lock
jecxz
stos
and
xorb
jg
push
jbe
in
cmpsl
add
outsb
sti
jmp
pop
xor
mov
stos
or
in
mov
or
inc
cmp
xchg
ja
jg
sbb
inc
jge
inc
push
bnd
cltd
shrl
pop
jo
push
cmpb
push
cmp
cltd
orl
xorl
std
fsubrl
pop
sub
push
cmpsb
sbb
xor
gs
lret
jno
or
pop
and
jnp
xchg
aam
and
outsl
data16
jnp
jno
call
and
mov
scas
aaa
test
mov
or
pop
mov
loop
or
cmpsb
lods
mov
xor
pushf
or
mov
sarb
pop
inc
xchg
push
je
in
or
mov
mov
mov
sub
xchg
dec
and
insl
mov
inc
cmpsb
jbe
push
mov
mov
dec
sar
pop
sbb
xor
mov
dec
sub
xchg
sub
push
stos
xlat
jge
jo
inc
gs
jg
jmp
mov
out
sub
lods
addr16
jb
dec
mov
xor
fs
fs
shl
cmp
inc
mov
ror
dec
les
loopne
ljmp
pop
and
data16
cs
push
jmp
push
lahf
push
adc
jno
imul
popf
cwtl
jbe
popl
leave
inc
inc
aad
lret
fstl
push
scas
ret
xor
pop
push
cmpsl
push
les
push
xchg
nop
test
mov
rcr
test
mov
xor
mov
insb
push
xchg
enter
repnz
push
adcl
mov
inc
mov
lods
enter
lods
or
or
inc
mov
adc
cli
inc
inc
mov
stos
es
out
je
call
scas
push
scas
cmp
scas
mov
and
jge
xchg
xlat
fldl
arpl
fisubl
pusha
inc
les
or
and
lds
push
dec
sub
mov
test
mov
jp
cld
dec
add
adc
pop
cmp
into
dec
shrl
inc
sub
inc
sub
cmpsl
mov
clc
bound
lea
insl
xor
push
jb
push
or
mov
cmp
and
mov
add
xchg
xor
inc
adc
cmp
mov
rol
xlat
push
ja
mov
push
shrb
fimull
pop
loopne
sub
dec
clc
and
push
cmpsl
aad
cs
or
pop
mov
ret
loopne
lret
jb
stos
inc
pop
mov
dec
pop
mov
mov
ljmp
and
in
jmp
or
insb
les
fcmovu
cmp
add
add
aas
scas
dec
pusha
xlat
nop
out
repnz
pop
push
lods
sti
xor
mov
sub
add
pop
mov
cmp
arpl
das
xlat
outsl
movsl
aad
push
fildll
jle
cltd
and
mov
pusha
out
sub
movb
push
pop
ret
jns
dec
jb
ds
inc
adc
hlt
mov
add
test
dec
dec
and
shlb
push
dec
and
pop
xchg
addr16
mov
in
xor
das
pop
outsb
sbb
pop
mov
xor
scas
clc
repnz
in
jbe
jge
push
pop
dec
popf
fbstp
test
xorl
and
mov
in
or
adc
insb
pop
mov
shlb
mov
leave
cmp
dec
push
mov
sub
subb
adc
fldenv
jecxz
je
stc
filds
cmp
movsl
bound
jae
mov
mov
clc
mov
arpl
sub
push
test
dec
mov
add
icebp
out
jge
mov
repnz
jne,pt
mov
in
pop
icebp
or
out
pop
mov
les
push
icebp
inc
test
sub
jmp
push
add
and
out
insb
sarb
shrb
or
jne
and
push
lock
adc
sub
shr
inc
lret
aad
pop
mov
inc
imul
mov
xor
repz
fadds
loope
jg
iret
and
fcoml
inc
ljmp
xor
xor
cld
movsl
dec
scas
and
popa
loopne
xchg
movsb
out
loope
add
fwait
mov
mov
push
imul
jb
adc
lock
fstl
jge
xor
push
mov
loope
or
rcll
mov
pop
xchg
xlat
out
flds
ret
aam
jg
inc
jmp
inc
xchg
fs
ficompl
bound
ljmp
inc
lret
inc
inc
push
jns
inc
mov
jp
mov
insl
repz
mov
mov
push
lret
cmp
inc
lds
push
ret
push
cmp
mov
adc
adc
outsl
nop
scas
lret
dec
ljmp
xor
negl
lds
inc
and
jb
mov
movsb
mov
jp
pop
lret
aaa
sbb
xchg
push
imul
ss
les
lds
cs
pop
fst
and
inc
add
pop
mov
cmpsl
dec
test
smsw
cmc
pushl
shl
sti
lahf
and
sub
inc
test
shll
inc
scas
xor
nop
push
iret
sub
lea
jo
icebp
mov
lcall
mov
push
pop
loopne
sub
mov
cmp
mov
loope
arpl
inc
push
xchg
or
or
inc
clc
lcall
push
daa
and
adc
jge
sub
dec
ficomps
fildll
mov
xlat
dec
mov
bound
or
dec
pop
idivb
mov
das
jle
cld
loope
pop
popa
adc
or
adc
rorb
sub
mov
dec
inc
pop
movsb
fsubrp
ja
fnstcw
cmpb
lcall
or
mov
and
push
sub
and
ficoml
inc
cmp
shrl
test
mov
mov
inc
scas
mov
adc
inc
xchg
cwtl
adc
cmc
adc
inc
lahf
shl
xor
lret
mov
ss
inc
jnp
sub
lahf
jno
push
in
jmp
stc
fisttps
push
mov
xchg
sbb
popa
jno
xchg
push
jle
mov
sbb
mov
inc
add
xchg
scas
in
push
cs
out
std
shrb
sbb
mov
push
and
into
jae
push
call
xchg
lea
out
add
sub
mov
jg
mov
clc
jo
jmp
adc
push
je
imul
mov
jp
pop
mov
mov
dec
xchg
mov
imul
clc
test
ret
jo
jmp
mov
pop
aaa
cltd
pop
sbb
push
movsb
or
pop
popf
in
inc
mov
test
push
push
jb
lods
adc
xor
mov
mov
scas
inc
push
or
aad
loop
adc
sub
xor
loopne
cmp
shlb
push
add
jno
imul
inc
cld
ficoms
jae
or
adc
jge
cli
lock
loop
and
ret
xchg
scas
mov
mov
pushf
lret
mov
mov
or
lret
jnp
sub
cmpsl
pop
jp
mov
inc
movsl
inc
pop
sub
adc
sub
cs
lea
movsb
inc
adcb
aas
adc
push
out
scas
dec
add
add
cli
dec
push
arpl
sbb
push
ret
inc
inc
fidivs
je
pop
in
jno
int3
cmp
pop
xor
jbe
les
leave
adc
hlt
je
adc
inc
add
jnp
test
sub
dec
mov
cmp
adc
nop
or
mov
xchg
clc
cmp
and
sub
sub
or
mov
xchg
mov
mov
jbe
or
jno
sub
mov
lods
and
and
dec
dec
pop
add
dec
sub
xor
add
rolb
hlt
mov
cmp
lods
bound
push
orb
sub
inc
mov
insl
mov
mov
out
mov
push
and
aas
add
and
mov
cli
aas
push
das
sbb
imul
lahf
pop
pop
push
js
dec
adc
jb
rclb
mov
adc
mov
sbb
add
xor
xor
mov
pop
pop
adc
sbb
ret
movswl
mov
jle
in
mov
dec
xor
push
mov
stos
dec
jecxz
mov
stos
lret
sub
mov
fistpll
or
pop
inc
imul
jo
mov
fstl
in
ja
jmp
cwtl
and
xchg
adc
push
sub
push
jne
es
mov
aam
push
push
xor
sti
push
pop
pushf
xor
dec
movsb
xchg
out
sti
cmp
mov
in
mov
fsub
cmp
inc
mov
xchg
mov
dec
push
test
mov
jne
dec
inc
lahf
enter
std
add
loop
loope
scas
imul
sub
ja
mov
ljmp
lds
pusha
push
lods
mov
dec
fsubl
nop
cmp
popf
int
insl
add
cmc
add
or
push
jb
cmp
rcr
scas
pop
pop
add
pop
inc
call
inc
mov
cwtl
pop
inc
add
xchg
in
pop
sti
cli
dec
xchg
xchg
dec
push
cmpsb
lock
lock
repnz
mov
mov
cmp
cltd
pop
pop
daa
push
sub
xchg
fcoms
cmc
adc
fcmovu
mov
lea
dec
adc
wbinvd
push
pop
pop
push
ss
dec
sbb
cmpl
xlat
test
xchg
jne
pop
lods
nop
es
sahf
pop
sarb
idivl
and
popf
xchg
gs
add
enter
pushf
jb
push
lds
std
push
pop
in
xor
adc
or
sbb
adc
hlt
xchg
xchg
jge
cmpsl
pop
xchg
ja
xchg
xchg
jo
mov
aas
int
push
xor
push
arpl
in
mov
icebp
pop
lock
jmp
fistps
bound
loop
adc
shrb
add
adc
mov
lea
add
loopne
mov
jo
or
xorb
arpl
and
mov
std
lock
push
movsl
mov
pop
ficoms
stos
xor
sub
xchg
sahf
roll
out
icebp
cmp
stos
jp
test
jne
faddl
jp
fnstsw
jns
fadd
scas
mov
ret
test
inc
es
mov
pop
adc
jb
sub
sub
in
les
enter
into
enter
mov
jb
dec
sbb
jnp
bound
xor
ret
icebp
ja
and
clc
das
pushf
shl
pop
pop
test
cmp
push
push
cmp
and
mov
push
push
push
xchg
pop
lcall
cli
and
sbbl
xchg
rcll
push
clc
sbb
push
loope
mov
incb
mov
adc
push
xor
clc
mov
sbb
adc
xchg
sbb
fs
cmp
andb
daa
push
jbe
bound
dec
cs
inc
subb
dec
stos
jbe
pusha
dec
je
inc
dec
arpl
jp
xchg
inc
xchg
nop
out
cmp
insl
cltd
mov
inc
mov
add
mov
pusha
daa
nop
popf
xor
dec
jmp
push
jne
icebp
je
rorb
push
daa
lcall
test
dec
cmp
cmpsb
push
push
addr16
adc
inc
mov
mov
mov
jmp
pop
ljmp
pop
push
nop
cmp
repz
sub
or
out
mov
call
cmp
stc
dec
aad
push
mov
test
push
jge
icebp
fidivs
imul
daa
dec
xchg
loop
cld
cmp
lea
pop
out
pop
jae
daa
pop
cli
test
arpl
adc
pop
xlat
mov
jb
or
popf
popf
hlt
pop
scas
push
loope
pop
dec
sarl
push
call
aaa
pop
lock
push
sub
sbb
rorl
adc
loope
sub
in
cli
mov
xchg
mov
bound
mov
lret
cltd
cmc
int
mov
inc
fldt
mov
leave
mov
add
mov
pushf
shlb
mov
and
rcr
jp
push
nop
add
xor
fs
rolb
imul
aas
rol
sahf
pop
gs
movsl
inc
cmp
adc
mov
mov
cli
pop
xchg
pop
outsl
push
lea
pop
dec
inc
or
push
outsl
test
mov
xchg
xor
mov
and
lds
cs
dec
or
pop
sub
sub
popa
sub
push
or
cmpsb
jp
lahf
out
in
outsl
or
aam
mov
mov
inc
fs
rorb
and
xor
aam
jge
lock
pop
add
jle
pop
push
xor
push
push
and
insl
xchg
sbb
sarb
mov
xorb
or
ret
xor
jp
aam
jns
inc
sub
adc
filds
fstl
or
mov
and
mov
push
test
cmpsl
shl
inc
mov
or
lret
notb
negb
aad
xchg
mov
roll
cmp
scas
push
push
mov
xchg
mov
inc
cmp
hlt
movsb
or
adc
inc
cmc
test
jne
aaa
inc
in
push
and
aaa
cmp
inc
rcrb
cmp
jmp
pop
mov
arpl
ljmp
adc
fcoms
test
xor
mov
movsb
roll
inc
push
add
inc
jl
xor
enter
pop
add
push
sbb
xchg
push
ret
pop
lds
fwait
xlat
aad
fisubrs
jle
push
scas
or
sbb
lds
arpl
xchg
jns
test
add
test
cmp
es
jge
fwait
dec
add
adc
lea
std
lahf
imul
xchg
cmp
loope
loop
sbb
outsb
lcall
mov
or
sahf
lods
pop
rcrl
aas
repnz
stc
inc
add
mov
adc
mov
jecxz
fldcw
jmp
sbb
movsb
sbb
mov
mov
sbb
inc
fldenv
cmp
sbb
jmp
push
aam
push
push
mov
mov
insl
out
dec
shrb
mov
or
dec
mov
jp
inc
add
or
xadd
sub
cmp
test
pop
push
hlt
movsb
xor
push
aad
dec
popa
lds
and
adc
andl
enter
sub
add
sub
pop
addr16
xchg
dec
dec
iret
ljmp
push
jmp
mov
pop
testl
add
gs
fmull
into
sti
orl
xchg
and
push
test
xchg
jg
xor
jg
pop
lret
pop
inc
sub
dec
add
outsb
in
sbb
pop
cmpsb
inc
or
daa
mov
adc
scas
test
loope
jmp
in
cmp
pop
jo
jbe
push
sbb
and
cld
into
mov
shlb
push
pop
xor
jmp
or
jmp
aaa
or
jo
push
mov
add
dec
mov
xor
mov
mov
lcall
mov
push
and
sbb
mov
inc
ja
movsl
push
xchg
test
push
mov
mov
pushf
jnp
mov
into
dec
fiadds
lds
push
mov
lret
loopne
or
outsl
cli
jg
mov
rolb
mov
nop
rclb
jb
popf
out
gs
lock
push
xchg
stos
shll
xchg
mov
and
pop
shr
mov
xchg
adc
xchg
pop
es
mov
rdmsr
jae
outsl
sub
jne
loope
add
pop
mov
iret
aas
cwtl
add
ljmp
hlt
pop
js
int
mov
sbb
inc
add
mov
mov
mov
aad
out
pushf
in
mov
mov
push
xchg
or
mov
push
mov
xor
arpl
lahf
mov
xchg
mov
sbb
sbb
push
imul
ss
shll
push
xchg
popa
fimull
jae
and
cmpsl
aaa
arpl
aaa
xchg
fmull
ja
rclb
xor
pushf
pop
cmp
js
lds
lret
jne
adc
adc
cwtl
cmp
adc
lea
les
sub
xchg
xchg
bound
repz
into
lods
jb
mov
aad
cmpsb
addb
push
add
mov
shlb
inc
sub
ljmp
mov
push
xchg
fsubr
lahf
in
mov
adc
das
loopne
jnp
cmpsl
out
pop
inc
out
pop
popf
inc
aad
subb
pop
jge
fsubrl
call
jle
push
cmc
inc
out
aam
push
add
cli
add
xlat
mov
and
cmp
add
xchg
cmp
ljmp
mov
add
sbb
fistl
lock
xchg
or
stc
ret
iret
icebp
out
add
shrb
add
mov
lods
cmpsb
das
sti
stos
jecxz
xor
dec
cmpsl
aam
mov
pop
pop
jl
adc
lods
gs
int3
cli
dec
dec
rsm
aad
movsl
popa
xchg
xchg
or
test
mov
or
push
out
mov
mov
push
sub
and
or
pop
rcll
pushl
stc
fnstsw
loop
mov
out
sti
sub
inc
xor
ljmp
pop
pop
lods
mov
aam
out
sbb
pushf
nop
sub
or
or
mov
addr16
push
mov
fimull
popa
movsl
sub
daa
pusha
xchg
lods
movsb
lods
fistpl
movsl
add
and
sbb
cwtl
cmp
or
or
bound
rorl
sub
addl
jecxz
inc
mov
add
aad
push
mov
xor
bts
push
call
sub
movsb
cmp
mov
mov
data16
mov
push
ficoml
das
push
inc
push
aad
mov
xor
sar
lahf
shlb
test
addr16
pop
inc
dec
or
les
in
rcll
bound
out
sub
bound
movsl
into
xchg
cmc
inc
push
sbb
adc
out
aaa
and
popf
fists
lcall
sub
sub
and
jg
dec
sahf
sbb
sub
and
cmpsb
mov
cmp
adc
mov
iret
iret
xchg
and
nop
jne
lahf
and
mov
xchg
pop
test
push
adc
lret
jg
outsb
fldpi
jb
or
inc
push
inc
andl
jno
add
adc
mov
pop
mov
jno
adc
or
push
inc
cmc
mov
addr16
or
xor
mov
or
jbe
sub
cmpsb
ficomps
dec
mov
sbb
iret
and
stos
mov
sub
fcom
inc
in
icebp
or
mov
popa
shrb
add
mov
and
and
adc
add
cmpsb
xor
inc
or
push
mov
xor
push
call
push
pop
jns
ss
mov
mov
mov
fs
sbbb
mov
aaa
or
cltd
aaa
sbb
pushf
mulb
ss
out
mov
fsubrs
jmp
cmp
shr
pop
fldcw
test
popf
mov
data16
in
xor
int
push
pop
push
std
sbb
pop
fcoml
insl
pusha
sbb
sbb
mov
push
movsl
xchg
mov
pop
and
mov
dec
out
cltd
fyl2xp1
mov
push
inc
mov
mov
cmp
mov
inc
add
icebp
ficoms
jb
jne
mov
daa
pop
cmp
fdivs
push
xchg
movsl
adc
int3
inc
push
cmc
sbbl
cmp
adc
test
xor
nop
mov
xor
daa
mov
sbb
scas
cmp
movsl
jmp
loopne
cmp
movsb
xchg
repnz
cmpsb
cmp
and
sub
cwtl
pusha
add
jb
rcll
push
pop
sarb
mov
aad
imul
pop
dec
push
shll
cwtl
lods
outsl
loop
aad
xchg
jge
addb
xor
lea
imul
cmpsl
scas
adc
mov
jl
push
add
push
lahf
sub
cmpsb
addr16
movsl
bound
pop
xlat
cs
adc
mov
fcoms
add
nop
icebp
cmpb
decl
inc
inc
jb
push
lods
mov
cmpsb
lods
adc
scas
popa
and
push
xchg
pop
in
mov
jmp
dec
sbb
pop
add
fwait
xor
imul
insb
popa
xlat
cmp
ficoms
js
pslld
shr
sar
stos
xchg
outsl
aam
push
mov
and
cwtl
mov
ficompl
mov
fimuls
insb
mov
xchg
lcall
pushf
sbb
sbb
sub
mov
or
in
aaa
aad
aad
sbb
fiadds
imul
mov
popa
add
cmpsl
gs
push
test
and
sbb
adc
mov
inc
cmp
mov
test
nop
add
or
leave
test
inc
es
xchg
sti
mov
cmp
sub
mov
mov
xchg
sub
adc
xchg
test
mov
rol
mov
outsl
mov
pop
ret
sub
push
push
mov
dec
xchg
movsb
push
ds
out
nop
push
push
jmp
ja
xlat
jg
leave
jp
jp
lret
addb
cmp
xchg
sbb
xchg
xchg
out
lods
out
mov
insl
or
cmp
mov
or
movlps
sbb
addr16
jge
daa
dec
jno
jp
add
push
int
test
mov
movsl
adc
rcll
fsts
push
rolb
push
jne
push
jbe
and
sub
sub
ret
push
mov
pop
mov
jae
imul
mov
or
inc
movsb
push
push
iret
hlt
lods
in
and
push
mov
enter
adc
bound
dec
addb
clc
jecxz
xor
cmc
ficoml
xchg
loopne
lcall
jmp
iret
cmp
inc
adc
cltd
mov
add
mov
jns
push
movsb
test
inc
ja
xor
leave
mov
lea
loope
movsl
xchg
rcl
fmull
insb
jne
push
jp
xchg
out
call
cmpl
mov
push
dec
neg
mov
xchg
xor
inc
sahf
xchg
add
dec
mov
cwtl
push
xchg
sub
repz
call
jbe
mov
mov
push
fnstcw
loop
mov
jno
mov
jl
addb
in
dec
cmp
lea
stc
lret
push
test
sarl
or
pop
ja
cltd
push
shrl
mov
mov
push
sub
jp
mov
cmp
jae
mov
sub
sub
and
hlt
push
int3
ror
pop
cmpsb
adc
dec
add
push
cli
daa
stos
mov
cmp
test
les
pop
cmc
icebp
jbe
or
xor
push
adc
xchg
insl
mov
push
and
cmp
and
data16
inc
add
mov
shll
push
inc
xchg
sbb
lods
push
aas
loopne
push
mov
lret
push
inc
push
pop
inc
inc
inc
jmp
loop
fisttps
and
push
arpl
fs
mov
xchg
out
xor
daa
push
add
xchg
push
lods
stos
nop
or
pop
inc
sar
xchg
outsl
sahf
push
aaa
sahf
inc
sbb
or
aam
into
cmp
add
and
ss
dec
adc
add
fisubrl
push
sbb
pop
in
loop
dec
in
sub
sub
and
jnp
inc
lcall
or
mov
inc
fwait
mov
mov
dec
xor
jb
adc
mov
dec
les
lods
pop
inc
cmp
push
call
leave
dec
sub
xchg
mov
bound
add
add
int3
rorl
repnz
jo
mov
adc
sarl
shrl
cmp
sub
rcll
nop
adc
sbbl
daa
ja
mov
test
sahf
nop
sbb
mov
jns
mov
push
mov
out
cmp
xchg
lock
fcomp
bnd
and
jl
repnz
xlat
push
inc
push
sarb
push
pop
loopne
pop
inc
call
push
mov
js
lea
lock
add
popf
xor
sub
rcr
test
sub
repnz
call
mov
dec
sahf
insl
xor
or
adc
cmp
ss
sbb
or
xor
cli
cmp
sahf
daa
or
pop
mov
xor
repz
daa
mov
adc
repz
test
or
out
ror
sub
rep
push
dec
cld
insb
movsb
xor
cmp
sub
pop
xor
ret
xor
aam
icebp
lods
dec
stc
mov
xchg
loop
inc
xchg
add
push
movsb
mov
ficompl
add
icebp
mov
jnp
and
ja
vpaddw
push
call
mov
outsl
fwait
jp
or
insl
inc
addr16
and
daa
mov
nop
daa
xchg
inc
jns
push
mov
ljmp
les
into
repz
xor
jns
dec
xchg
daa
faddl
fwait
sub
ret
repnz
scas
int3
sbb
dec
and
into
pop
inc
data16
bound
int
daa
mov
dec
sbb
cmp
jne
sub
inc
ljmp
mov
adc
cmp
je
adc
xor
lods
in
mov
jmp
sahf
or
mov
mov
add
imul
test
sub
daa
in
jns
in
movsb
imul
adc
es
nop
dec
iret
xchg
lcall
xchg
hlt
or
dec
in
ss
mov
cmpsl
shll
orb
ror
adc
xchg
cmp
cmpb
in
in
sahf
xor
test
add
push
xchg
mov
jns
lds
push
mov
adc
sarl
sub
dec
add
movsl
inc
mov
mov
add
push
clc
xchg
sub
and
add
arpl
mov
mov
insb
mov
loop
adc
push
sahf
jns
cmp
popf
add
mov
xor
cmp
pop
sahf
clc
shll
mov
xor
imul
push
lret
aam
push
fsubl
cs
aas
cs
jl
xchg
cmpsb
out
insl
insb
repnz
sub
fimull
push
add
mov
je
xchg
jnp
into
pop
hlt
mov
popa
push
push
push
adc
sbb
xor
mov
cmp
lods
pop
lret
std
mov
aam
mov
push
xchg
aad
lds
pop
jmp
xchg
lcall
xchg
mov
mov
xor
jno
jno
pop
test
in
test
int
lret
push
shlb
lcall
fcomps
xor
inc
adcl
pop
rcrl
or
xchg
mov
lahf
dec
andl
addr16
into
cmpsb
sbb
xor
lock
test
stos
xor
leave
or
xor
xchg
call
sub
cmp
xchg
inc
mov
jmp
rcll
add
xchg
push
jp
adc
push
inc
pop
scas
mov
daa
xor
jge
test
not
sub
out
aam
jmp
xchg
sub
aam
lds
pop
dec
sbb
xchg
xchg
sub
test
sub
adc
dec
inc
test
subb
leave
dec
cmp
and
push
iret
xchg
les
stos
push
pop
nop
cmp
in
and
jp
add
sub
xor
repnz
shr
dec
and
cmp
jns
in
daa
test
ss
scas
les
movsl
and
jecxz
test
in
sbb
nop
cmp
imul
shl
mov
cmp
popf
mov
test
ds
mov
lret
je
mov
loopne
lods
roll
mov
sahf
push
adc
adc
daa
push
lds
and
loope
cltd
les
shll
fwait
xor
inc
fwait
insb
iret
adc
sub
dec
in
mov
cmp
xor
push
repnz
mov
daa
fwait
cmp
addr16
adc
loop
inc
xor
dec
js
popa
inc
sahf
inc
lcall
and
es
jns
int
pop
sahf
fdivs
sub
and
ja
hlt
xchg
sbb
fadds
inc
cltd
or
adc
mov
ljmp
sub
dec
cmpsl
popf
cmp
and
adc
cmc
repnz
daa
xchg
loop
inc
jmp
out
es
push
movsb
insl
and
adc
or
mov
pop
push
lahf
sub
cmove
aaa
aas
cmp
fnsave
mov
pop
cli
sbb
movsl
xchg
into
xor
mov
add
adc
pop
fwait
test
and
xchg
test
mov
xlat
jl
dec
scas
push
jmp
pop
ljmp
xor
or
fdivs
push
push
addr16
push
cmc
mov
and
jl,pn
jae
inc
ret
int3
sbb
lcall
ret
test
dec
cmc
inc
push
out
or
shll
mov
addb
pop
fdivr
insl
sub
stos
rorl
mov
das
xor
pop
or
leave
or
int
mov
repz
pop
sub
es
out
jo
add
mov
xchg
adc
pop
jb
inc
xchg
cltd
cld
pop
lret
cmpsb
aad
mov
sub
sub
pop
dec
rcrl
arpl
sbb
push
in
xchg
push
push
jmp
das
jae
sbb
jne
add
push
sbb
imul
mov
mov
in
sahf
mov
mov
xlat
subl
call
inc
lcall
cmpl
outsl
push
div
cli
pop
les
aad
std
push
lods
out
mov
ljmp
sbb
insb
sub
fidivl
push
dec
fmull
and
popa
lods
mov
and
jb
adc
sub
insl
cltd
std
movsl
or
and
pop
movl
sbb
rclb
or
iret
xchg
ljmp
out
loopne
jmp
mov
cld
sub
mov
lahf
gs
out
sub
pop
sub
dec
xchg
lret
cmp
push
xor
mov
jecxz
pop
xchg
les
mov
add
pop
insl
out
das
pop
add
mov
insl
inc
jb
ja
jmp
nop
in
push
xchg
sbb
pop
loop
adc
cs
push
mov
std
mov
adcb
jg
cltd
jle
pop
lret
push
inc
cli
or
les
xor
test
cmp
mov
ja
adc
daa
or
icebp
rclb
movl
jg
adc
fs
add
mov
xor
adc
sub
iret
push
fisubl
xor
stos
and
sahf
inc
inc
loopne
dec
in
xor
sbbb
mov
cltd
and
movsb
stc
fwait
or
jle
dec
cli
add
and
jg
repz
or
push
shll
xor
mov
push
xchg
in
jo
mov
pop
sbb
jge
lret
shlb
enter
xor
clc
pop
dec
dec
mov
xor
mov
jmp
lea
repnz
push
cmpsl
mov
xchg
dec
sbb
mov
in
adc
test
cmp
les
jo
cmc
add
mov
roll
dec
sub
js
jo
mov
pop
sub
push
jl
mov
dec
xor
push
or
push
ja
js
inc
mov
enter
stc
pop
sbb
les
rcrl
fimuls
sti
es
or
sub
gs
icebp
xchg
jno
pop
arpl
mov
js
mov
xor
ficompl
cmpsl
out
fstps
outsl
inc
dec
inc
inc
arpl
sub
fldt
jns
inc
jg
adc
das
mov
push
out
jns
lods
mov
mov
nop
cmp
mov
jae
scas
or
or
repnz
mov
rclb
sub
addb
shll
mov
popa
xor
cmp
fsts
xchg
faddl
mov
jge
xchg
lock
das
dec
jbe
cmp
cwtl
mov
inc
jmp
pop
inc
xchg
icebp
push
lret
aas
dec
ljmp
dec
lret
sub
and
pop
scas
rcll
inc
mov
xchg
cmpsb
lods
cmp
daa
out
jmp
push
cmc
mov
xor
enter
jp
es
fsubl
adc
sub
and
push
push
add
bound
in
xor
mov
adc
sub
xchg
adc
pop
shlb
stos
lods
xchg
in
mov
dec
aam
mov
pop
or
pushfw
shrb
jns
cmp
gs
dec
cmp
and
push
mov
loope
push
sbb
or
xchg
sbb
decl
push
jns
sbb
and
push
push
dec
add
mov
inc
and
es
jb
arpl
leave
inc
lcall
in
push
or
mov
push
jbe
xor
cs
cli
test
sbb
jp
adc
gs
mov
fs
mov
push
sbb
insl
sub
xchg
mov
inc
sub
mov
faddl
and
cmp
addr16
push
cmpsb
mov
adc
jg
jg
sbb
or
loope,pn
fiaddl
stos
cmp
in
push
ljmp
loopne
jp
sub
sbb
ljmp
dec
imul
jg
push
mov
sbbb
je
movsb
push
xor
xchg
dec
mov
cmpsb
rcll
vaesimc
mov
cmp
outsl
xor
cli
in
pop
rcrl
insb
popf
mov
adc
cmp
xchg
jl
aad
lcall
cltd
cltd
out
iret
inc
lahf
cmc
popl
aas
inc
xchg
adc
je
test
cmc
loop
imul
or
jae
imul
fcmove
mov
outsb
gs
movsb
fimull
mov
xchg
inc
sub
enter
mov
adc
fdiv
inc
adc
inc
mov
stc
fildll
sahf
add
hlt
jmp
xchg
dec
adc
inc
jbe
push
mov
inc
sub
leave
mul
test
adc
lock
mov
fldcw
mov
sbb
rorb
pusha
lret
lcall
xor
and
cli
shlb
int
inc
insb
call
in
sbb
lea
aad
sub
popf
sub
inc
or
fsubs
and
cmpl
mov
jnp
inc
xchg
sub
mov
xchg
cmpsl
cld
nop
cli
and
add
je
dec
mov
mov
adc
out
sbb
mov
mov
pop
xchg
jle
inc
or
dec
push
punpckhbw
int
rclb
jge
aas
jo
cmp
cld
jns
lea
mov
jmp
push
add
ficoml
xlat
out
xor
xchg
mov
sbb
addb
push
lds
cltd
add
adc
addr16
lods
inc
into
movsb
test
cmpsb
enter
push
xor
shll
fdivrl
out
dec
cltd
mov
inc
daa
xor
sbb
mov
sub
outsl
push
jecxz
xor
sbb
mov
daa
inc
test
mov
push
and
dec
and
xchg
scas
daa
mov
adc
les
iret
pop
sub
mov
mov
pop
addr16
stos
sub
xchg
mov
cmp
sub
sbb
jmp
sbb
sbb
loop
or
jns
aad
pusha
out
fbld
arpl
out
pop
clc
xchg
icebp
insl
sub
lcall
scas
add
mov
int3
rclb
dec
push
fsubrl
sti
test
xchg
push
push
xor
jne
ret
dec
sub
mov
push
sub
je
fwait
iret
xchg
and
xchg
xor
adc
popf
xchg
mov
jo
mov
jmp
dec
xchg
jo
insb
jmp
sub
rclb
dec
pop
dec
push
iret
adcb
sub
dec
loop
ja
and
das
cmp
and
es
fistpll
dec
push
fidivl
sub
mov
aaa
loope
inc
aam
js
pop
shlb
lds
bound
cmp
dec
sbb
in
inc
mov
inc
out
dec
rcll
inc
mov
and
jl
sbb
add
mov
xlat
stos
fldenv
mov
jae
push
inc
sub
mov
mov
xchg
cmp
pop
inc
sbb
in
add
push
inc
or
add
jl
push
gs
xor
adc
push
aad
in
popf
pop
ds
outsl
dec
dec
testl
fs
inc
inc
jns
int
xor
xor
popa
or
pop
test
outsb
add
or
imul
cmpsl
mov
int
cltd
push
pop
or
stc
leave
lods
mov
and
mov
movsb
icebp
mov
aaa
inc
mov
cs
stos
mov
roll
xor
or
addr16
xor
adc
dec
cmpsl
xor
and
xchg
cmp
mov
imul
shrl
xlat
mov
test
je
jl
fdivp
mov
or
dec
xchg
fistl
icebp
lcall
lret
scas
mov
out
mov
ret
mov
and
add
cmp
cmp
outsl
jecxz
int
sub
in
pop
ror
and
xlat
fistps
jne
sub
xlat
push
mov
cmpsb
mov
sti
pop
sbb
arpl
loopne
mov
in
or
xchg
sub
add
addr16
in
mov
mov
mov
mov
popf
movsl
add
lea
lcall
push
push
inc
rorb
push
pop
add
lods
xor
and
pop
pop
scas
xor
sub
aad
sub
dec
clc
push
push
or
jbe
insl
loopne
mov
inc
pop
dec
shl
or
nop
fwait
roll
mov
imulb
in
add
shrl
pop
mov
xlat
inc
mov
mov
push
xchg
sub
enter
scas
leave
add
adc
mov
shll
fadds
mov
and
out
push
xor
add
jne
pop
dec
xchg
std
out
mov
pop
cli
or
fwait
aas
cli
sub
and
cltd
aas
mov
xor
mov
push
jno
dec
bound
sti
xchg
push
jno
cmp
sbb
pop
ljmp
cld
pop
pop
xchg
ret
xor
push
cmp
imul
pop
xor
pop
jmp
dec
aad
aam
or
aad
push
lods
repnz
push
mov
cmp
push
push
repnz
mov
xor
outsb
faddl
stos
stos
movsb
shr
pop
call
out
dec
sbb
sub
nop
daa
xchg
popa
push
pop
rcrl
inc
mov
addl
hlt
inc
add
iret
loopne
inc
cmp
pop
push
xor
cmp
cmp
xchg
dec
adc
pop
stc
test
in
mov
pusha
stos
inc
pop
data16
adc
or
jbe
and
dec
add
test
xchg
je
lods
push
imul
test
ffree
aad
or
dec
adc
dec
sub
cltd
aam
sti
out
pusha
push
pop
out
ds
and
or
add
adc
pop
push
in
xor
movsb
int3
xchg
shrb
and
xor
pop
stos
lds
scas
insb
jo
mov
loope
lock
xor
in
movsb
pusha
ss
aaa
push
xor
xor
dec
mov
lods
cmpsl
pop
sub
xchg
lods
lods
jae
cmp
scas
in
adc
lea
push
and
jb
inc
xchg
mov
stc
adc
lret
sbb
and
mov
adc
sub
mov
push
add
cmp
rclb
jp
mov
sub
adc
push
mov
jmp
les
stos
mov
test
stc
loop
xor
pop
and
jnp
ret
rcll
inc
insl
jmp
pop
jns
subl
bound
fcmovbe
push
mov
out
pop
outsb
arpl
jle
bound
pop
pop
jno
lds
std
cwtl
xchg
out
lods
int3
xlat
rcll
push
pop
int
xchg
fisubrs
cli
enter
ds
xchg
ror
subl
lods
clc
rorb
jle
vpshufhw
sub
push
jle
mov
cmp
movsl
pop
jns
jb
daa
gs
xor
jnp
dec
push
xor
stc
mov
cmc
or
xchg
test
adc
insl
sub
push
mov
mov
adc
sub
cli
or
push
aam
mov
and
adc
subl
jecxz
dec
mov
iret
jne
push
movsb
gs
xchg
pop
sbb
stos
pop
push
xor
mov
stos
repz
rcrb
ret
lods
js
cwtl
pop
data16
xor
insl
ds
shlb
aas
inc
push
dec
jae
mov
mov
dec
sbb
cmp
sub
jns
jge
repnz
out
jecxz
mov
jb
sub
rclb
pop
add
dec
sbb
mov
int3
sbb
xor
shlb
repz
jp
pop
test
xchg
repz
push
mov
pusha
scas
std
jb
loope
cld
int3
aaa
movsl
lahf
cmc
sbb
sub
loop
add
xchg
fidivrs
cltd
jne
nop
lret
or
and
out
inc
in
repnz
pop
xchg
dec
inc
push
pop
out
mov
adc
arpl
mov
lock
dec
sub
loopne
pop
jg
ja
xor
pop
inc
dec
mov
xlat
and
and
call
ja
cmc
out
mov
sub
incb
mov
xor
jo
jp
add
mov
clc
or
push
push
cmpsb
mov
test
pushf
lods
cmpsb
sub
xlat
shll
mov
in
in
push
mov
outsb
push
adc
test
sub
add
test
cmp
xor
jp
shl
and
xchg
lods
notb
data16
push
dec
loop
ljmp
jmp
in
mov
icebp
or
or
inc
or
sbbl
cmp
mov
ljmp
push
inc
push
sbb
adc
lds
shll
leave
ds
sbb
gs
imul
jmp
scas
icebp
daa
icebp
pop
mov
sti
subl
mov
inc
ficoml
push
out
stos
sbb
pushf
pop
add
int
pop
inc
add
movsb
gs
pop
stos
xchg
fcomp
notb
sbb
imul
int
std
dec
and
test
leave
lods
xchg
outsb
mov
popa
push
pop
lahf
outsl
fs
lcall
arpl
arpl
and
cmc
push
shr
loopne
repnz
inc
hlt
xor
sub
pop
les
dec
jb
hlt
inc
test
push
mov
cmpsl
sbb
sahf
inc
hlt
rcl
lahf
and
lahf
dec
mov
xlat
jnp
aam
push
mov
push
xor
push
pop
je
sub
adc
gs
bound
imul
sub
in
sbb
ret
leave
in
out
sbb
iret
pop
sarb
iret
pop
add
xchg
lret
push
add
sahf
xor
in
hlt
add
mov
ror
xchg
push
push
inc
xchg
out
out
rclb
mov
inc
fdivl
popa
mov
roll
and
leave
lods
imul
pop
inc
fidivrl
bound
and
scas
scas
jbe
sarl
addr16
mov
pop
and
adc
dec
add
or
out
dec
push
test
enter
movsl
adc
and
test
xchg
xchg
repz
xor
add
jno
xor
lods
mov
xchg
jbe,pn
sti
jp
bound
fiaddl
fisttpll
pusha
mov
jo
pop
sub
mov
cmp
cmp
mov
dec
mov
pop
scas
inc
ret
jbe
popa
fistl
mov
jg
cmp
enter
repz
clc
xor
inc
in
je
repnz
test
sbb
jno
mov
and
test
xlat
scas
jp
add
inc
adc
mov
or
push
dec
sub
jmp
sub
test
jmp
add
rorb
cmp
mov
shr
xchg
lret
pop
dec
xchg
jp
das
mov
mov
movsb
xor
pop
push
dec
sub
movsl
mov
stos
or
bound
fs
lds
fsubs
push
push
gs
jbe
std
jg
mov
pop
push
cltd
inc
sahf
push
and
popf
xor
dec
mov
in
sbb
or
enter
jae
push
stos
inc
ljmp
mov
inc
mov
pop
jno
fmull
shr
pop
mov
push
mov
sub
addr16
sub
test
test
mov
jne
adc
pop
jmp
es
movsl
test
clc
and
inc
test
daa
inc
jmp
xchg
jmp
insl
pop
aad
test
lahf
jo
cmp
pop
jecxz
xchg
enter
push
add
aaa
dec
shll
lcall
push
sub
rcrb
out
shr
test
sub
pop
mov
sbb
cmc
repz
mov
popa
div
and
add
lret
push
inc
je
jp
sbb
lea
into
rclb
cmpsl
push
mov
jno
loop
stos
popf
rclb
loop
or
xchg
jecxz
push
sbb
clc
je
adc
popf
dec
nop
mov
rcll
sub
fisttps
cld
cld
xor
jne
xor
jg
cmp
or
addb
adc
pop
mov
ret
xchg
test
cmp
mov
sar
les
jo
loopne
gs
daa
lods
aam
ss
cmp
mov
inc
mov
or
xchg
cmp
inc
cmp
sbb
or
and
movsl
cltd
cwtl
inc
push
sbb
mov
repnz
scas
shll
outsl
lds
dec
aas
xorl
xlat
dec
sbb
fldl
pop
push
xchg
cmpsb
ja
adc
jb
insb
pop
es
sub
mov
popf
sub
xor
lods
sub
add
lret
mov
enter
mov
cmc
test
add
push
and
xor
ja
adc
mov
mov
mov
loope
add
fcoms
pop
or
cmp
pusha
xchg
and
push
cmp
ja
sub
or
rolb
sbb
pop
mov
js
sbb
xchg
ljmp
int3
shlb
lret
xor
mov
inc
fisttps
faddp
sub
cmp
push
push
pusha
add
repz
lods
bound
lea
push
adc
cli
and
outsl
stc
outsb
in
imul
pop
inc
mov
inc
xchg
in
scas
adc
xchg
cmp
gs
push
je
shll
rcrb
lret
movsb
and
orb
jbe
outsb
ret
mov
das
insb
jg
stc
sub
cmove
aaa
add
ss
sbb
mov
pop
jnp
sub
mov
scas
lcall
sahf
repnz
inc
inc
stos
lock
push
das
jle
adc
inc
push
mov
sbb
inc
mov
iret
cli
inc
ror
pop
insl
aam
mov
pop
jmp
push
dec
out
xor
xor
ja
xchg
stc
lock
andb
popa
dec
mov
sbb
mov
js
fst
lret
mov
mov
and
mov
push
dec
mov
adc
roll
mov
add
dec
mov
jne
mov
pusha
pop
xlat
dec
pusha
pop
test
or
inc
pusha
and
sbb
jae
mov
sahf
adc
or
push
inc
and
roll
mov
inc
mov
dec
das
xchg
scas
adc
xchg
mov
inc
or
clc
imull
fsubl
negb
js
ret
jno
leave
push
push
pop
rcrl
adc
push
shlb
js
leave
lock
les
mov
in
enter
pop
test
aaa
push
jns
ss
incl
push
xor
push
movsb
dec
pop
push
cli
inc
push
inc
rcll
mov
mov
int3
int3
je
jnp
fwait
loopne
sbb
dec
sar
push
cld
pop
mov
cmp
lea
outsl
lods
adc
mov
imul
inc
jb
xor
adc
xchg
sahf
adc
ds
in
mov
ds
dec
ret
jo
test
cmp
xchg
fistps
xchg
sub
pop
jl
xchg
scas
cltd
lods
adc
push
cmc
cmpsb
mov
pop
fldcw
or
out
ret
lcall
mov
ret
xchg
sbb
jbe
sahf
sub
push
push
xchg
push
imul
out
cmpb
push
sub
pop
pop
xlat
jbe
or
sbb
jae
jno
mov
imul
mov
xor
pop
mov
push
jle
loope
inc
inc
cmp
mov
mov
icebp
pusha
pop
cli
jge
arpl
into
out
loop
pop
lods
fsts
sub
popf
pop
mov
inc
adc
inc
sub
mov
mov
shll
push
stos
addr16
push
inc
lret
push
xchg
mov
stc
out
orb
ds
inc
sbb
sub
mov
dec
jbe
pop
fs
stos
jo
adc
sbb
push
jbe
ret
adc
push
dec
test
and
mov
cmp
mov
xor
in
clc
mov
icebp
shlb
in
pop
cmp
sub
inc
int3
shll
bound
sbb
jecxz
mov
inc
xor
jno
xor
call
lds
and
mov
mov
dec
mov
nop
mov
push
aad
push
xchg
addl
mov
inc
xchg
out
xchg
push
push
or
push
xor
sbb
psubusb
nop
ficoml
jae
mov
push
test
pop
or
jo
gs
pop
pop
mov
pop
cld
jne
mov
bound
int
pop
fwait
sub
jl
lods
fwait
xchg
repnz
int3
inc
int
out
out
in
pusha
pop
out
imul
mov
pop
mov
push
test
jg
sti
xor
lret
pop
cmp
insl
inc
outsl
push
imul
xor
adc
test
jmp
mov
shlb
xchg
push
jbe
push
sbb
push
jno
xor
fsubrl
mov
sub
mov
jle
sub
xchg
sbb
adc
and
inc
xor
scas
push
dec
insl
fcompl
rcll
outsl
adc
es
xor
inc
and
dec
shl
clc
dec
mov
ljmp
jecxz
aad
mov
pop
insl
push
mov
rolb
inc
sbb
sub
pop
push
aad
outsb
mov
and
jo
pop
adcb
iret
popf
fnsave
outsb
mov
scas
movsb
fs
xchg
sti
sbb
in
mov
dec
lea
enter
inc
mov
out
insb
pop
add
adc
xor
sbb
aas
dec
add
push
xchg
les
dec
push
aad
mov
jnp
push
scas
xor
adc
cmp
mov
test
or
fisttpl
inc
and
or
or
decl
test
cli
cs
and
call
adc
inc
pop
daa
ret
clc
test
or
aad
add
xchg
pop
sub
insb
sbb
shrl
dec
cmp
and
ja
or
sub
das
or
jns
sbb
es
daa
inc
and
sbb
imul
cs
mov
aaa
cli
dec
and
and
repnz
cs
push
push
inc
dec
daa
push
add
and
and
cmp
mov
bound
fwait
inc
add
add
or
outsb
pop
push
or
inc
mov
cmp
adc
xchg
mov
xchg
sbbb
test
jmp
js
mov
movsb
sub
adc
sahf
inc
adc
stos
mov
jmp
jp
jge
inc
sub
loope
cli
push
cmpsl
xchg
rcll
popf
imul
pusha
dec
push
mov
adc
cmc
add
in
sub
xorps
jmp
lds
xchg
inc
repz
sbb
mov
pop
and
mov
daa
in
or
dec
adc
dec
test
push
add
hlt
xor
mov
pop
inc
test
mov
scas
stos
mov
es
into
jle
push
jns
fdivrl
xor
cmp
fstpl
in
jle
adc
dec
add
inc
andb
sbb
insl
jmp
add
or
push
aaa
adc
inc
xlat
and
popf
stos
clc
loop
adc
mov
push
cld
dec
imul
ficoms
sbb
xor
scas
sbb
inc
int3
aaa
in
lret
sbb
sbb
and
adc
push
mov
xchg
mov
adc
lahf
add
push
sbb
cmc
pop
fwait
xchg
cmpsb
inc
mov
xor
adc
shlb
xlat
add
jp
mov
inc
add
push
xchg
ret
adc
xor
lds
in
movsb
fnstcw
test
test
or
test
stos
push
inc
xchg
rcr
add
icebp
fld
cmp
sbb
push
push
push
das
mov
divb
xor
lcall
inc
enter
cmp
dec
and
shlb
mov
push
adc
jb
ds
loop
loope
jmp
int3
sets
add
pminsw
xor
fsubrs
dec
mov
sub
add
int3
cs
xor
xchg
int3
cmpsl
icebp
stos
mov
jecxz
mov
cmp
mov
les
les
lock
adc
cwtl
fimuls
pop
pop
rclb
jmp
mov
or
mov
test
sti
mov
sbb
dec
das
aam
or
add
push
into
test
or
sub
mov
or
sbb
loop
shlb
jno
stc
aas
jmp
mov
outsb
push
mov
hlt
mov
cmp
sub
stc
data16
fsubrs
and
xor
mov
mov
daa
rorb
shll
mov
loope
icebp
pop
imul
and
aaa
or
pop
arpl
test
ja
push
test
ss
pushf
cmp
inc
pushf
test
xchg
add
pop
bound
in
pusha
sub
add
push
lahf
ret
add
mov
int3
fs
sub
sbb
add
cmp
nop
popa
adc
push
mov
inc
test
mov
push
mov
xor
sub
dec
sbbb
add
pop
inc
dec
adc
cmp
subb
cmp
rolb
shr
pop
push
pop
in
sbb
hlt
dec
gs
pop
stc
jnp
call
jmp
pop
rcrb
loop
push
sti
aaa
push
enter
xchg
push
or
xlat
inc
inc
add
push
or
xchg
daa
leave
cli
shrl
push
or
push
call
iret
sahf
adcb
adc
pop
jo
loopne
mov
movsl
adc
mov
push
gs
mov
fldl
adc
movsb
inc
mov
dec
jg
in
out
sarb
adc
pop
pop
jo
jp
push
dec
daa
movsl
xchg
pusha
mov
mov
and
xor
pushl
test
jl
cmp
inc
xchg
push
push
mov
mov
popa
inc
pop
into
lret
mov
dec
daa
jle
sbb
xchg
xchg
jo
repz
sbb
cmp
lret
add
sub
lods
xchg
sbbb
push
sbb
stos
add
fcmovne
outsb
sbb
add
add
and
push
cltd
mov
xor
andb
ret
mov
mov
mov
xchg
and
adc
xor
xchg
or
dec
dec
adc
movsl
sub
jge
test
sub
jg
les
andb
pop
inc
inc
sub
movsl
js
pop
mov
scas
ret
sbb
adc
inc
sahf
adc
jmp
push
cltd
movsb
cwtl
xor
push
fsubs
push
xchg
lahf
stos
adc
ret
cmpl
xor
popf
shlb
xor
loopne
push
push
push
xchg
mov
dec
daa
int3
cmc
je
or
adc
and
rol
ss
test
xor
repz
int
rorl
jecxz
daa
addr16
jae
out
mov
jmp
in
into
lcall
lcall
add
jae
lret
xchg
dec
dec
pushf
pop
mov
cltd
je
add
ret
push
and
xchg
inc
inc
sub
and
push
and
cltd
cli
or
iret
les
out
cmp
xchg
cs
bound
add
inc
push
pusha
cmp
out
outsb
adc
lea
jle
mov
adc
add
pop
mov
movsb
or
mov
inc
pop
mov
lods
orb
test
ret
cmp
or
pop
pop
sbb
orb
push
movsb
jnp
or
movsb
addl
dec
in
inc
add
jb
mov
jmp
mov
nop
sbb
mov
mov
or
xor
clc
sti
mov
xor
cmp
xor
mov
mov
iret
test
aad
mov
xchg
inc
push
push
aaa
pusha
fs
insb
dec
fcomps
add
add
adc
mov
sbb
rcl
pop
pushl
mov
das
outsb
jmp
adc
lods
mov
arpl
or
push
stos
inc
dec
sbb
mov
cli
fsubr
or
or
repz
lock
repnz
loopne
sahf
jp
ja
cmp
lret
pop
popf
jp
bound
pop
ret
mov
dec
xor
xor
cpuid
xchg
inc
pcmpeqb
pusha
nop
mov
jne
test
stos
xlat
mov
js
pop
xchg
cld
div
test
pop
lock
sbb
mov
fists
sbbl
cs
sbb
pop
xor
lock
test
inc
bound
mov
and
sbb
lahf
cmp
add
int
mov
inc
add
xchg
fs
xchg
or
insl
pusha
jo
addb
lret
add
xor
or
scas
out
orb
pop
inc
pop
call
pop
push
xor
pusha
or
daa
mov
nop
adc
xchg
ret
decl
adc
es
das
sbb
orl
xchg
pop
inc
push
pusha
icebp
mov
mov
cmp
mov
cmp
cli
rol
lret
add
dec
xor
aad
pushf
push
mov
sbb
pop
or
xchg
jns
dec
test
insl
add
out
sub
ret
pop
cmp
cmp
and
jl
pop
fbstp
scas
or
pop
xor
pusha
pop
cltd
ficoml
or
loope
lods
or
inc
add
into
call
scas
mov
je
pop
add
cwtl
mov
push
cmpsb
mov
fsubrs
xchg
fdivrl
or
or
out
push
cmp
pop
xchg
dec
sub
in
push
sub
inc
popa
fldl
rolb
adc
ucomiss
xchg
xor
add
lods
rclb
in
adc
jo
mov
jp
jp
xlat
fcomip
jecxz
out
adc
sar
or
xchg
addl
movsb
add
jmp
mov
movhps
xor
sbb
lret
sub
mov
out
and
and
xchg
jmp
lea
into
decl
fwait
sbbl
cmp
cld
sub
pop
sbb
or
or
sti
data16
sub
out
sub
sti
popf
shlb
aas
push
shr
movsl
pop
cwtl
shlb
push
mov
push
and
xor
lahf
sbb
dec
pop
cmp
mov
fnstcw
outsb
enter
push
lret
jg
jmp
pop
test
bound
xchg
fldcw
and
or
or
xchg
in
sbbl
mov
cli
adc
push
inc
mov
shll
mov
jae
or
xchg
and
aas
sub
mov
movsb
cmp
int
mov
jns
movsl
js
js
push
xchg
and
lods
rorb
lcall
sbb
cmpsb
fdivrs
inc
sarb
cmc
dec
sbb
arpl
mov
mov
jnp
inc
and
out
clc
lret
fsubrl
xchg
jne
nop
add
lret
cwtl
cmp
xor
cmp
mov
sbb
aad
push
sbb
inc
sbb
andb
or
push
mov
mov
orb
mov
mov
es
sahf
sbb
pop
inc
subl
xor
and
inc
pop
rclb
hlt
xor
pop
cmp
push
data16
data16
ret
roll
mov
and
rorw
in
and
shlb
push
pop
adc
jno
xlat
test
sub
loop
push
pop
pusha
or
mov
js
int
ret
cmp
push
pop
dec
loope
ret
imul
cmpsl
cmc
addr16
loop
and
scas
imul
movl
fisubl
fcoms
rorl
add
pop
and
arpl
flds
stos
inc
and
dec
cmp
inc
dec
rcll
cmp
and
cs
or
mov
mov
test
pop
pop
mov
sarb
jns
sub
sbb
xchg
movsb
jo
dec
shlb
mov
adc
pop
hlt
stos
adcb
xor
xchg
add
push
movsl
fwait
pop
xchg
and
jge
shrb
insb
xchg
icebp
pop
xor
and
rorl
rol
add
ret
xlat
xchg
add
pusha
dec
rcrl
push
js
cwtl
test
imul
jb
xchg
and
xchg
push
mov
add
js
or
arpl
mov
popa
andb
push
pop
mov
add
imul
lea
pusha
inc
int
ljmp
incb
inc
xor
and
mov
add
xor
pop
xor
add
add
add
xchg
popa
adc
lock
sub
cmpb
enter
mov
scas
xor
adc
or
adc
fdivs
rcll
enter
cmp
pop
add
xchg
ja
add
fcomps
cli
iret
rcll
jo
roll
je
lret
adc
mov
enter
adc
xchg
or
pop
mov
scas
add
leave
cmp
test
cmp
adc
mov
aaa
les
movsl
add
setbe
lea
pop
scas
sarb
and
sbb
dec
ret
add
pusha
or
insl
push
sub
jg
mov
xor
sbb
jo
or
dec
bound
movsl
add
sub
xchg
mov
fldl
in
sub
insl
rclb
nop
subl
sarb
mov
dec
or
jl
enter
adc
sbb
cmc
std
jp
push
adcb
data16
insl
add
push
loopne
in
xlat
xchg
hlt
mov
test
inc
icebp
pop
xchg
ret
mov
adc
pop
sbb
jbe
pushf
je
gs
mov
or
jg
push
cmp
pmulhuw
add
orl
inc
jl
mov
inc
push
repz
push
sub
pop
pop
les
lea
pop
mov
scas
fdivr
inc
mov
lock
pop
lcall
sbb
lods
sbb
dec
cmp
orl
jno
adc
orb
sub
rolb
outsb
bnd
mov
mov
icebp
mov
test
mov
mov
pop
xor
and
mov
adc
adc
mov
sub
mov
lahf
cmpsl
clc
mov
mov
jne
dec
ret
cmp
xchg
int3
xor
movsb
js
dec
sbb
or
mov
dec
enter
adc
ljmp
pusha
loope
faddp
sbb
das
js
dec
dec
pop
es
and
sbb
lret
xchg
jge
pop
sahf
push
xorb
dec
dec
or
xor
rcll
enter
add
or
mull
adc
mov
repz
mov
int
fisttps
adc
jnp
jb
insb
ds
in
ljmp
cmp
adc
push
nop
rclb
xor
lock
lret
cltd
inc
inc
lret
out
mov
cli
cwtl
popf
or
movsb
or
adc
mov
pop
aas
es
aas
add
cmp
xor
cli
pop
in
cmp
testl
sub
cmc
and
icebp
or
shr
pop
push
mov
aas
fsubs
or
push
jge
int
rolb
sbbb
mov
sti
mov
cmp
jle
xlat
leave
add
pop
sbb
notl
add
jmp
sbb
clc
pop
out
and
or
lods
cmp
loopne
push
sub
bound
sub
inc
outsl
add
jae
scas
movsb
xor
shlb
aam
stos
mov
adc
mov
sbb
es
subb
cltd
dec
push
mov
out
dec
and
out
lods
push
xor
mov
cwtl
push
out
das
test
xchg
sbb
adc
and
inc
and
jnp
shrl
xchg
cmp
ret
or
sti
pop
int3
addb
sarb
lods
mov
xchg
or
repnz
adc
into
pop
mov
stos
xor
mov
in
xor
adc
or
dec
sbb
int
ja
mov
imul
push
or
insb
sar
imul
add
cs
mov
mulb
push
ret
ret
or
cmp
inc
jns
xor
and
mov
movsl
addb
inc
in
jmp
loope
pop
ds
lods
cmp
pop
and
inc
or
sub
std
pop
into
test
and
add
dec
dec
int
scas
pop
cmpl
xchg
fwait
fwait
ljmp
sub
add
cli
sti
inc
and
jecxz
insl
out
mov
sub
sbb
enter
add
bound
imul
les
lret
jge
rorl
and
andb
xor
jnp,pn
mov
ret
shr
pusha
add
dec
jno
push
or
stc
cmc
sbb
pop
imul
orl
std
insb
fisttps
stos
xchg
sub
daa
ret
mov
or
jmp
cmp
outsb
lods
jbe
lcall
xchg
jmp
push
mov
or
pop
lea
inc
es
xchg
and
add
mov
mov
and
adc
out
adc
fadds
inc
aam
or
lock
xchg
shr
push
inc
clc
std
scas
and
adc
data16
ds
xor
inc
adc
inc
dec
scas
lods
in
outsl
stos
mov
mov
fldt
or
jae
arpl
or
gs
sub
loopne
jne
ret
pop
or
push
les
les
sbbb
popf
jnp
lahf
dec
or
sub
test
mov
pop
xor
cmp
add
adc
adc
jbe
orb
inc
lock
jmp
dec
cmp
sbb
test
insl
arpl
ljmp
clc
jge
jne
and
jp
mov
leave
jmp
sbb
and
xor
pop
pop
mov
test
rcrb
shl
pop
cli
jmp
inc
loope
or
sbb
and
shlb
sub
mov
adc
jecxz
mov
sbb
or
or
bound
xchg
inc
xchg
mov
sub
arpl
or
add
and
adc
insb
sub
jno
inc
mov
icebp
push
movsb
pop
popa
or
lods
add
mov
jg
inc
add
jbe
push
ficoms
pop
fnclex
insb
push
in
into
or
dec
ss
adc
or
cli
inc
loopne
push
add
and
divb
icebp
push
pop
sbb
xlat
ss
cmp
sti
xchg
cmc
fsubs
fidivrl
ret
lret
sub
mov
jecxz
aaa
xchg
inc
data16
in
add
sub
jns
stc
adc
outsl
push
mov
test
mov
dec
lock
in
loope
mov
int3
sbb
call
push
fldcw
mov
data16
ja
sub
insl
pop
pop
cmp
dec
jnp
and
mov
cltd
sub
jmp
or
fiaddl
inc
push
and
andb
jmp
test
imul
fldt
insl
and
loopne
push
sub
adc
arpl
adc
cltd
iret
fs
xor
mov
sarb
cmpsb
push
sbbb
push
inc
les
add
test
mov
call
mov
sub
hlt
loopew
mov
pop
sub
xchg
jp
xor
aaa
ret
jecxz
inc
int
std
dec
xor
adc
mov
dec
jge
jg
out
lods
cmp
mov
addr16
std
fcmovb
mov
in
sub
ja
inc
lock
std
jle
adc
pop
mov
jb
sub
roll
pop
sub
sub
mov
push
mov
dec
mov
rcrl
ja
ss
sarl
call
mov
inc
aad
mov
adc
into
pop
mov
ds
push
movl
or
mov
xchg
or
mov
movsl
test
or
fstl
sub
cwtl
bound
adc
cmp
push
dec
in
xchg
add
jge
popf
adc
dec
lret
adc
push
xchg
or
popa
in
inc
adc
push
je
hlt
adc
pop
and
nop
xchg
mov
jl
add
dec
add
and
sub
fisubl
jecxz
push
cwtl
mov
sub
fsubrl
fidivl
aad
arpl
pop
fwait
cld
fidivs
push
xor
movsl
gs
mov
jb
xchg
sbb
push
hlt
or
lret
xchg
mov
call
push
unpcklps
push
push
jae
xchg
hlt
gs
ja
jmp
arpl
adc
mov
cmc
faddl
fldln2
push
fdivrl
cld
out
lds
inc
and
dec
push
jecxz
jne
scas
test
fadds
popf
dec
fildl
aas
sbb
shlb
pop
add
mov
push
mov
shl
jo
stos
xchg
adc
lret
pop
xchg
sub
mov
mov
std
sbb
shll
adc
loop
jne
sahf
xchg
mov
xchg
cmpsl
int
pop
push
inc
sahf
aad
insb
dec
mov
jmp
in
mov
push
pop
mov
sti
in
popa
mov
mov
loopne
sub
clc
and
enter
int3
sbb
lods
iret
jae
mov
jg
sti
bound
xchg
popa
mov
bound
jle
dec
mov
mov
dec
stc
mov
ficomps
or
sbb
test
mov
pop
xor
cmp
testb
jmp
insb
push
cmp
xchg
cmp
jb
xchg
paddw
lods
pop
push
enter
cltd
pop
test
hlt
cmp
arpl
sbbl
jmp
push
pop
sub
mov
adc
lods
mov
enter
lret
pop
pop
int3
notl
pop
and
jmp
pop
test
out
cmp
xchg
ficompl
mov
push
out
aaa
xor
pop
push
cli
loop
jp
sub
js
xor
pop
ds
movsb
adc
aas
cmp
mov
xchg
rclb
inc
test
xchg
addr16
sub
xchg
dec
jecxz
xchg
testb
xor
xchg
leave
inc
pop
outsb
shll
shrb
adc
xor
pop
push
pop
push
dec
xor
fidivrl
enter
dec
mov
ljmp
std
mov
mov
ror
inc
mov
adc
cmpsl
push
adc
add
call
adc
xor
push
ljmp
rorl
pop
test
xchg
sub
int
xchg
in
mov
mov
imul
cltd
xchg
mov
xchg
ret
fs
jns
cmp
push
add
push
test
movsb
mov
mov
sbb
mov
mov
cmp
cmp
je
lock
pop
std
or
add
xor
movlps
fld
stc
inc
repz
loop
xlat
push
mov
adcl
sbb
push
jecxz
mov
mov
inc
mov
or
insl
std
das
mov
neg
shrb
mov
ss
notb
sub
mov
dec
mov
mov
in
das
insb
iret
cmp
push
push
adc
test
cli
adc
inc
jnp
stc
aas
cmp
out
pusha
std
jno
jecxz
add
pop
xor
scas
pop
push
loope
inc
xchg
insb
into
cld
divb
xor
arpl
movsb
xor
cltd
negl
addr16
jmp
imul
add
insl
pop
dec
pop
xor
loopne
ret
filds
jl
adc
fstps
push
rolb
das
add
pop
and
scas
mov
shlb
xlat
and
push
jge
gs
rcl
cmpsl
in
xchg
pusha
scas
pop
inc
lahf
fistpl
or
add
mov
icebp
xor
sahf
mov
sbb
jg
mov
bound
dec
xchg
mov
mov
sti
sub
sub
sbb
iret
jne
popa
mov
cmp
adc
push
xor
aaa
sub
loope
jmp
sbb
cltd
fsubr
jle
xor
xor
jmp
stos
add
dec
dec
add
pop
pop
addb
jno
mov
ja
inc
mov
std
xchg
insl
test
xlat
orb
andb
mov
cld
cmc
fldt
repz
icebp
pop
testb
and
addr16
mov
fldenv
pop
mov
stos
push
mov
cmp
pop
emms
fsubrl
test
int
pop
bound
rcr
adc
mov
je
jecxz
dec
lahf
imul
mov
or
and
add
leave
add
pop
mov
daa
loop
add
pop
xor
iret
in
xchg
repz
inc
mov
aad
jmp
faddl
jae
popl
test
lock
js
aas
fsubl
mov
dec
or
ret
movsb
icebp
lds
ja
dec
shl
pop
xor
add
fcoms
xorl
popf
xor
mov
jae
insl
push
or
mov
jo
mov
dec
and
jb
notb
jno
add
dec
mov
in
adc
push
sbb
mov
add
ljmp
mov
lret
mov
pusha
aam
cmp
mov
cli
mov
sub
inc
mov
sbb
je
call
sbb
inc
pusha
in
dec
pop
and
adcb
and
xchg
pop
cmp
fadds
add
mov
xor
fs
push
mov
mov
mov
insb
fs
fisttps
int
imul
out
adc
test
data16
outsb
dec
mov
fmuls
push
rolb
imul
push
lds
xchg
in
mov
dec
or
les
cmp
rcrb
pusha
sti
pop
xchg
sub
inc
aas
jle
ljmp
xor
fisttps
add
dec
adc
into
jle
mov
xor
sbb
lds
adc
sbb
push
mov
cmpsb
and
pop
jecxz
xlat
cmp
and
cmp
xchg
ret
sub
int
lods
popa
dec
orb
and
adc
clc
inc
in
enter
xchg
add
idivb
daa
call
xchg
loop
pop
sub
sub
je
mov
addr16
sub
add
mov
inc
orb
scas
lret
es
ss
sbb
ss
adc
cmp
and
out
sbb
loop
pushf
gs
jge
mov
push
jp
cmp
das
cmpl
or
loope
xchg
nop
sbb
popa
jno
or
imul
add
ret
add
xchg
pop
lods
jg
and
adc
int3
pop
sub
sbb
adc
inc
popf
cmpl
mov
xor
jge
movsl
mov
les
xor
mov
testb
push
inc
addr16
repz
data16
das
addr16
add
fs
data16
or
imul
mov
adc
jno
nop
dec
pusha
sbb
jo
jo
and
or
fnsave
and
and
iret
sub
adc
test
lea
cltd
pop
std
jecxz
or
inc
add
pop
sub
pop
dec
inc
les
cli
and
and
in
mov
mov
in
xorl
mov
add
arpl
mov
mov
mov
xchg
into
scas
int3
cwtl
fs
inc
jle
loopne
and
rclb
clc
mov
adc
adc
fs
in
sarl
pop
mov
add
mull
popf
aad
loop
adc
sub
sub
and
cmp
cmp
xchg
dec
js
inc
and
cld
jle
sti
mov
cmp
mov
mov
in
loopne
jns
cli
push
xchg
lds
push
enter
inc
mov
in
into
push
in
add
clc
pusha
out
add
test
cld
js
mov
aaa
pushf
jns
sbb
out
pop
push
push
xchg
sti
adc
jg
push
and
xor
shl
in
call
sti
mulb
add
ljmp
push
data16
fiadds
inc
ja
xchg
and
loopne
mov
movsb
adc
mov
mov
movsb
rolb
adc
add
mov
daa
jmp
jl
jp
popf
movsb
cs
sub
push
push
movb
mov
cs
daa
les
xor
loopne
or
jg
xor
mov
push
push
push
or
adc
add
arpl
or
popf
inc
push
jae
inc
sbb
push
es
xor
sti
cmpsb
mov
push
popa
loop
adcb
mov
add
fdivrl
adc
sbb
add
je
and
add
adcb
fimuls
cmp
in
jle
adc
or
push
xchg
scas
sbb
or
mov
loope
pop
pop
sub
pop
arpl
shlb
movsb
xchg
imul
pop
push
rolb
add
mov
pop
aad
jg
nop
inc
xchg
pop
mov
mov
push
in
or
setg
sub
push
push
cli
inc
mov
or
or
popa
mov
stos
lret
xchg
xor
xchg
scas
push
xor
mov
mov
mov
push
movb
mov
pop
and
xor
pusha
xor
push
mov
and
xor
add
lods
or
popf
cmpsl
sbb
xor
in
repz
xchg
dec
lds
test
and
sub
addr16
rolb
test
pop
xchg
cli
or
mov
sub
inc
xchg
pop
in
push
popf
idivb
leave
push
das
cmc
mov
push
mov
add
sbbb
inc
mov
xor
adc
lea
xchg
fcompp
jg
and
je
mov
push
int
insl
sub
sbb
test
pop
dec
pop
fsub
sahf
push
pop
vaddsubpd
cmp
mov
xchg
repnz
lret
loopne
push
xchg
mov
stc
adc
push
add
push
pop
add
push
sbbb
sbb
decl
cmp
mov
jmp
inc
mov
sbb
pop
dec
sub
hlt
lea
xchg
sub
or
dec
popa
mov
adc
nop
push
in
stc
dec
mov
inc
adc
loop
mov
or
pop
mov
jb
andl
inc
xor
mov
or
add
adc
idivb
fiadds
mov
adc
imul
imul
cmp
dec
mov
or
fidivs
inc
or
sub
mov
jge
movsl
or
adc
and
lret
xor
jmp
jmp
sarl
ljmp
test
mov
aam
xchg
fcomp
push
add
push
gs
dec
and
add
adc
mov
or
stos
loope
jne
adc
mov
pop
aas
imul
pop
dec
push
pop
insb
dec
je
sbb
repz
jnp
adc
adc
stos
cmp
adc
jbe
les
sbb
pop
repz
xchg
movsb
add
and
cmpb
pop
mov
icebp
adc
inc
jecxz
add
fdiv
or
int
or
xchg
out
aas
jo
ljmp
loopne
stos
mov
mov
xor
popf
mov
mov
fcoml
sar
push
mov
mov
sarl
jno
or
dec
cmp
push
nop
add
outsb
or
rcll
push
push
test
jno
or
dec
adc
push
xchg
std
lods
dec
jg
adc
jge
cmpsb
mov
aam
xchg
inc
movsb
jne
inc
jmp
xor
pushf
or
je
cmpsb
jle
std
jmp
or
or
cli
daa
leave
leave
mov
pop
sbb
loopne
and
add
mov
xchg
rorl
inc
xor
or
and
mov
repnz
inc
lahf
adc
pop
pop
aas
sub
js
xor
mov
jae
xchg
add
stos
jae
fwait
sub
lods
dec
icebp
jbe
add
adc
addl
jbe
out
hlt
sub
subl
sbb
jnp
dec
jmp
mov
mov
add
sbb
notb
mov
dec
sub
push
dec
or
and
mov
es
imull
jle
xor
addb
pop
jns
daa
push
test
dec
jae
ss
or
xchg
loopne
pop
xchg
pushf
sbb
cmpsb
cmp
mov
outsb
xchg
cmpsl
aas
pop
dec
dec
fcomps
and
xorl
pop
mov
add
mov
ret
push
cltd
shlb
pop
xchg
sub
mov
xlat
mov
hlt
xchg
mov
in
dec
hlt
popf
push
dec
push
mov
dec
or
pop
pushf
or
sahf
ljmp
aas
cmp
lcall
push
or
adc
adc
fcoms
sub
pushf
push
xchg
mov
mov
stos
pop
stos
jnp
xor
push
loopne
imul
aad
es
repz
pushf
xor
pop
xchg
leave
or
mov
movsl
test
pop
mov
cmpb
shufps
xchg
pop
cmp
insl
fidivl
sbb
bound
shlb
mov
xchg
test
mov
jnp
out
mov
pop
shrl
adc
jae
ret
lock
std
sahf
inc
cmp
inc
cmpl
dec
mov
mov
and
sti
dec
in
out
in
lcall
cmp
dec
lods
push
cmp
das
mov
clc
outsl
fstl
cmp
inc
dec
sarb
xor
and
lods
test
or
jle
cmpb
ds
pop
xchg
push
ds
pop
ss
ficompl
xchg
mov
mov
xchg
dec
lds
cmp
dec
mov
aas
pop
push
test
xchg
dec
xor
or
or
sarb
mov
cltd
mov
stos
adc
test
mov
ror
lds
or
popa
push
fs
pop
xchg
out
vshufps
mov
movsb
cmpsl
jnp
lods
mov
or
decl
mov
dec
xchg
repz
pushf
popa
add
push
push
dec
and
in
pop
or
not
and
push
sub
jl
icebp
add
jecxz
cmp
pop
sbb
mov
ret
sti
cmp
nop
nop
sub
fsts
testl
movl
and
rorb
fisttpll
dec
xchg
mov
packsswb
ret
adc
sbb
push
mov
or
rclb
ret
jp
ficomps
loopne
cmp
mov
in
loop
and
and
test
jb
push
repnz
movsb
in
adc
pop
add
das
cmpsb
lds
not
adc
sti
adc
pop
scas
out
jno
dec
adc
in
out
xor
fmulp
ja
inc
fisttpll
mov
popf
sub
cld
and
mov
out
nop
adc
adc
mov
or
or
cmp
aam
and
pushf
inc
movsl
sbb
int3
lds
addb
orl
xor
sbb
adc
jp
push
pop
int3
ss
ja
cmp
pop
and
xor
roll
add
imul
pop
mov
push
dec
das
push
hlt
scas
test
stc
mov
shr
aaa
scas
mov
xor
cmp
popf
push
std
dec
xor
sbb
or
lret
sbb
add
cmpsb
sub
inc
rorl
rcl
pop
adc
loope
test
mov
push
sub
jo
mov
dec
sahf
jle
pop
mov
repnz
les
ret
sti
in
in
jle
xchg
add
enter
ja
rorl
jp
jnp
cwtl
cmovns
xchg
loopne
ret
jo
add
testb
loopne
or
rol
pop
push
flds
jne
mov
test
test
movsl
xchg
sbb
shl
xchg
inc
cmp
int
sbb
movsb
rclb
test
mov
xchg
das
cmpsb
xchg
aas
sub
frstor
jne
in
pushf
gs
jne
mov
sub
lock
arpl
push
stos
rorl
xchg
incl
in
jb
xlat
push
and
mov
mov
js
jg
xchg
inc
fldcw
in
gs
xor
scas
fcmovb
iret
adc
daa
ds
test
aam
iret
adc
scas
xor
mov
gs
jle
dec
jno
or
xor
pop
out
and
jo
fs
add
cmp
sub
add
insb
dec
mov
adc
mov
add
mov
cmpsb
mov
movsb
sahf
push
les
jg
sbb
adc
inc
fsubrs
push
pop
cwtl
cs
mov
mov
push
outsb
jl
sbb
add
adc
rcrl
test
mov
movsb
mov
dec
cmp
dec
leave
mov
push
dec
mov
xor
xchg
outsb
cwtl
push
lds
cmp
andb
ret
dec
pop
int3
subb
loopne
add
push
out
scas
out
hlt
xor
movsb
push
mov
jnp
fstpl
nop
movsb
xchg
jno
inc
jno
mov
or
push
ret
add
ja
imul
add
in
pop
inc
fstps
sub
push
sub
and
sbb
into
cmp
inc
or
xchg
jecxz
xchg
push
cwtl
mov
loopne
mov
inc
aam
jecxz
mov
add
mov
sti
in
adc
pusha
movsb
scas
lahf
pop
outsb
push
cmp
xchg
and
stos
xchg
pusha
movsl
jg
mov
sarb
xchg
in
and
jbe
sub
pop
and
or
movsbl
cmpsb
mov
inc
cmc
or
add
adc
lret
enter
arpl
int
sub
ljmp
or
std
je
lock
mov
insl
mov
jle
jecxz
lods
xchg
inc
sbb
rol
enter
push
add
or
rcl
adc
mov
cs
jo
mov
add
mov
test
add
push
dec
adc
mov
push
cmp
dec
adc
andb
addl
jle
repnz
pop
jg
xchg
repnz
sbb
mov
push
sbb
add
ds
pop
fmul
mov
iret
imul
repnz
push
and
sub
or
adc
push
mov
movsb
sbbl
or
mov
clc
arpl
mov
mov
xchg
aam
pop
out
push
or
jno
or
movsl
sub
mov
repz
orb
repz
icebp
pop
fnstenv
aam
adc
outsb
cld
sbb
xchg
subl
sbb
cmp
ss
aas
mov
and
out
inc
jge
inc
ds
sbb
lea
cmp
pop
pop
xor
xor
push
mov
sbb
add
cmp
addl
xor
push
loop
push
sbb
addl
nop
xchg
cmpb
in
daa
xchg
sub
daa
and
mov
push
pop
jmp
adc
add
repz
dec
add
dec
or
pop
mov
jne
addr16
sub
xor
sbb
add
rorb
loope
xchg
cltd
inc
cmpl
stc
add
pop
and
testb
sbb
sbb
push
push
xchg
andb
ficompl
popf
stos
daa
fnstsw
mov
subb
out
push
push
xchg
stos
push
mov
mov
push
add
addr16
adc
pusha
add
shrb
addr16
sti
cmp
inc
and
push
adc
les
shlb
nop
in
cmp
nop
out
and
popa
or
pusha
daa
dec
dec
ds
fisttpll
cs
inc
and
sarb
mov
or
jbe
shrb
cmp
add
or
int
xor
mov
push
push
and
xchg
jae
repz
les
lret
sbb
cmc
lcall
shl
pop
adc
aam
and
push
add
mov
mov
rorl
sti
popf
out
mov
in
cmc
push
adcb
inc
sbb
leave
pop
add
in
adc
das
mov
cmpl
mov
mov
pushf
push
add
or
scas
mov
sbb
sub
push
xchg
mov
xor
fistps
mov
xchg
jg
fldl2e
xchg
ficoms
sarb
mov
int
mov
inc
xchg
or
cli
inc
sbb
pushf
insl
loopne
mov
inc
lret
xchg
add
dec
imul
mov
inc
xchg
pop
mov
push
sbb
imul
inc
or
mov
pusha
insb
jmp
inc
lods
add
rolb
jle
shrb
push
lds
arpl
mov
bound
pop
scas
mov
and
stos
cmp
adc
ret
dec
scas
das
test
cmp
mov
mov
fistpl
and
cmp
add
mov
or
xor
shrl
aas
cmp
inc
mov
lds
inc
je
push
decb
xchg
or
paddd
sub
aaa
xor
std
test
or
stos
sub
mov
inc
dec
call
sbb
xchg
mov
sub
mov
nop
pop
mov
nop
enter
pop
or
or
cltd
inc
mov
bound
pop
xor
das
gs
xor
mov
pop
adc
sbbl
nop
xor
mov
and
and
fadd
mov
jns
pop
xchg
add
rorl
inc
inc
dec
stc
cmc
dec
adc
mov
ret
or
mov
pop
jecxz
stos
xlat
sbb
in
and
jo
mov
or
and
loopne
push
pushf
stos
jge
clc
mov
es
and
jg
iret
pushaw
leave
loopne
mov
add
mov
jb
inc
adc
dec
push
pop
call
adc
dec
ret
aam
adc
pop
and
insl
je
pop
mov
bound
pusha
stos
push
cmp
testl
sbb
fsubl
aaa
cld
rorl
mov
add
add
daa
ss
jbe
and
scas
mov
cmp
sbb
and
clc
daa
add
adc
xor
add
sbb
mov
lahf
mov
cmpsb
xor
ret
push
jo,pn
pop
pop
xlat
std
or
xor
in
cmp
add
je
bound
mov
mov
stos
mov
iret
sub
enter
scas
or
pop
lods
in
mov
dec
ret
or
add
loopne
mov
scas
repz
mov
std
mulb
mov
jle
add
ret
xor
sub
add
mov
xchg
mov
or
test
inc
push
mov
fisttps
sti
sub
test
xchg
pop
jne
popf
cwtl
dec
and
rcr
inc
mov
cmp
push
add
pop
orb
adc
cld
push
in
std
dec
cld
nop
jnp
cmpsb
jnp
mov
mov
gs
pop
jg
jl
iret
pushf
inc
adcl
gs
dec
pushf
add
inc
or
pushf
sbb
aad
dec
fs
pop
in
insl
mov
aam
push
push
or
loope
add
inc
adc
inc
stc
sbbb
lea
or
pop
jo
mov
js
mov
cwtl
enter
rorl
lcall
push
mov
out
cmc
pop
add
les
sahf
stos
push
adc
stos
xchg
or
pop
dec
test
cltd
mov
inc
mov
mov
cld
fcomip
inc
push
add
jo
lds
mov
cli
dec
add
pop
test
mov
or
pop
int
inc
push
fisttps
and
push
xor
lahf
fsubs
jae
push
es
push
inc
pop
enter
dec
test
and
inc
ss
cmp
cmp
lea
mov
jg
pop
inc
jle
pop
xor
push
push
push
pusha
push
incl
jmp
aam
or
inc
xchg
add
or
pop
jl
test
inc
push
or
pop
fbld
dec
icebp
add
in
test
mov
push
lods
das
cwtl
sti
jbe
xor
repnz
pop
test
lock
test
out
lret
aad
int3
mov
fwait
mov
aad
dec
pop
andl
stos
inc
pop
out
lock
xor
and
clc
pop
and
pop
rol
mov
lret
arpl
lcall
stos
lcall
rcll
add
mov
xchg
aas
repz
or
mov
subb
mov
xor
dec
add
push
adc
push
stc
mov
mov
inc
mov
xor
fs
lods
repnz
inc
cmpsb
in
add
mov
and
sub
jno
pop
int3
push
fiadds
inc
or
sbb
dec
and
dec
aam
icebp
sub
xchg
jne
sti
add
in
cli
ljmp
inc
nop
call
int3
xor
icebp
cmp
jecxz
mov
pop
xchg
js
loopne
scas
dec
jbe
test
mov
push
ds
pushf
andl
adc
and
mov
dec
push
sub
xchg
push
sub
stos
notb
mov
xchg
or
push
ret
ret
movsb
mov
push
leave
pop
cmp
push
sarb
mov
and
mov
add
in
shlb
sub
xchg
repz
pop
ds
addl
cmp
pop
jle
fucomip
mov
sbb
sbb
in
push
lock
jne
popa
lods
xor
mov
xlat
or
inc
jno
flds
xor
add
inc
mov
xchg
test
out
mov
out
sub
and
aad
adc
jg
pop
or
mov
sbb
cli
insb
lret
mov
repnz
push
js
pop
cld
dec
xchg
int3
sub
jbe
clc
pop
mov
push
or
xchg
insb
sub
jge
les
jnp
pop
mov
sbb
or
add
xchg
push
repnz
leave
fnsave
jo
int
dec
xlat
out
fimull
add
add
orb
ds
loop
ret
cltd
je
push
cmpsl
sbb
sahf
or
test
fwait
scas
movsl
insl
push
mov
leave
fadds
sbb
cmpsl
lahf
xchg
cmpsl
jae
sub
out
jl
popf
jp
and
pop
lea
pop
pop
add
cmc
push
in
sbb
mov
roll
mov
lods
sbb
cmp
dec
dec
mov
mov
into
rorb
sbb
pop
xor
sub
push
test
inc
inc
enter
sti
movsb
push
or
adc
arpl
dec
add
dec
xorl
popa
loope
shll
idiv
ucomiss
loope
in
inc
mov
sub
fisttpll
mov
test
or
push
fidivrl
pop
pop
pop
in
fcmovnu
ret
shlb
out
iret
mov
xor
and
scas
outsl
or
call
mov
pop
test
add
fucompp
mov
bound
in
xchg
adc
rorl
std
bound
jb
add
mov
repnz
mov
adc
jne
sub
push
xchg
jo
push
inc
xor
addr16
ja
mov
stos
push
clc
fisubs
push
inc
clc
and
inc
repz
mov
sub
mov
push
mov
pop
in
xchg
daa
add
cmp
andb
mov
xor
pop
stos
mov
scas
test
mov
mov
mov
aam
aas
xor
aam
inc
push
dec
sub
shll
xchg
fdiv
cmc
faddl
sbb
push
vmwrite
mov
addr16
arpl
jle
shl
cmc
xor
out
loopne
stc
test
arpl
xchg
enter
adc
shll
cmpsl
outsl
fstl
ficompl
sbb
movaps
push
mov
fisubl
sbb
hlt
gs
cmp
rcr
xchg
mov
add
shlb
and
mov
outsl
das
mov
int
fadds
inc
adc
scas
outsb
mov
sub
in
lret
les
cmpsb
out
mov
push
mov
pop
add
ds
ljmp
jne
and
xchg
jae
mov
sub
int3
sub
inc
mov
nop
loope
leave
pop
dec
mov
mov
push
popa
adc
push
cmpsb
mov
pop
lahf
sbb
ret
mov
cmc
push
xchg
cmp
movsl
ja
or
insb
cmpsl
or
adc
adc
clc
pop
xlat
inc
mov
jo
pusha
es
out
xor
xor
call
adc
mov
test
cmp
imul
imul
or
inc
repz
mov
in
movsb
xor
jo
iret
push
adc
sbbl
fs
xor
adc
cmpsl
mov
push
adc
loop
fcoms
in
inc
ds
lock
stos
cmp
cmp
adc
mov
inc
or
mov
ljmp
mov
hlt
outsb
mov
decl
aas
mov
push
sbb
ror
cmp
rcr
mov
call
aad
adc
je
test
les
mov
push
lock
leave
stos
push
std
pusha
mov
pop
test
mov
mov
xchg
or
add
sbb
mov
aam
lock
sarl
xchg
sub
sbb
rcrl
push
stos
mov
cmc
and
les
adc
mov
xchg
sub
fldenv
mov
subl
jl
sti
dec
inc
inc
sbb
jo
loope
setns
lods
test
movsb
pop
in
push
cmp
fs
and
pop
in
test
jne
jne
xor
push
loop
xor
or
cmp
out
or
cmp
dec
nop
sbb
cmp
xchg
and
popl
stc
and
bound
in
inc
sahf
call
or
cmp
push
scas
mov
adc
sub
xchg
mov
cmp
adc
or
ds
cmp
jb
push
mov
add
and
outsl
or
sbb
add
add
ss
adc
inc
push
inc
flds
sbb
pop
pop
in
ret
push
inc
sub
ja
orl
int3
jl
push
lret
mov
pop
jo
push
pop
pop
xor
sbb
test
cmp
pop
repz
sub
test
imul
mov
sbb
lcall
push
adc
adc
cltd
sub
lahf
add
jno,pn
jo
and
mov
gs
and
xchg
cmp
clc
and
add
inc
xor
xchg
xlat
adc
enter
lods
mulps
subl
mov
das
cmp
sahf
std
rorb
add
add
mov
dec
mov
mov
jnp
xor
mov
dec
jle
cmc
pop
sarb
mov
lock
mov
pop
inc
les
adc
sbb
lods
stos
push
push
adc
in
mov
xchg
sarl
fwait
push
adc
push
jmp
je
scas
adc
scas
mov
mov
inc
xor
mov
adc
outsb
ljmp
xchg
repz
popa
inc
push
cmp
cwtl
push
loop
mov
lods
in
jle
inc
sub
imul
scas
in
adcl
sbb
jmp
dec
xor
adc
and
push
sbb
and
test
mov
cwtl
dec
xlat
nop
int3
inc
fcompl
sti
push
pop
test
cld
cltd
hlt
aas
mov
imul
sbb
inc
repz
mov
mov
push
push
int
add
xor
arpl
push
fistl
in
xchg
add
roll
cmc
xor
or
leave
dec
sub
shl
push
int
adc
daa
mov
cli
cmpsb
adc
mov
jbe
fdivs
repnz
test
mov
mov
xchg
inc
mov
cwtl
push
sar
xchg
ret
cmpsb
les
call
lahf
daa
clc
mov
das
jmp
or
jns
orps
fiaddl
add
notl
fsubs
pusha
sub
insl
add
adc
fs
xlat
jecxz
ret
sbb
mov
stos
push
lds
sbb
ja
mov
lds
pop
jns
repnz
mov
xchg
inc
lret
xchg
out
pop
aad
imul
cld
sbbb
fiaddl
loopne
call
ja
adc
ret
nop
ja
or
push
decb
lahf
sub
and
or
sub
in
test
pop
xchg
push
mov
cmpsl
scas
and
fnsave
int
pop
lock
aaa
mov
inc
dec
and
mov
arpl
mov
inc
push
je
bound
xchg
inc
test
cli
sbb
jg
fsubrs
xor
sbb
in
loope
out
stc
subl
repnz
pushf
sbb
hlt
pushf
adc
adc
les
lock
adc
rcrb
mov
pop
jecxz
xchg
or
xchg
jo
push
in
inc
xor
ss
out
sbb
dec
mov
imul
xchg
adc
cs
lods
or
mov
jp
xchg
nop
sbbl
mov
sub
dec
mov
int3
movsb
pop
inc
imul
push
cmp
mov
dec
insb
icebp
rcll
fistpll
ret
mov
pop
cltd
pop
push
test
add
movsb
mov
push
movsb
lea
inc
mov
ret
jmp
outsb
add
js
movl
loope
mov
lret
jne
ret
pop
lds
xor
dec
in
das
out
and
stos
add
add
sbb
imul
inc
adc
loope
andb
mov
xor
mov
idivb
push
ffreep
add
dec
mov
inc
lahf
xchg
cmp
dec
ss
fs
dec
xchg
cwtl
dec
or
push
lds
movsb
nop
cmc
add
pop
int
icebp
iret
or
call
das
cmpsl
in
ss
mov
movzbl
sbb
pop
stc
lods
mov
mov
add
out
ret
xchg
dec
mov
aaa
lea
mov
sub
and
pop
dec
test
cmpsb
int
add
cmp
add
jp
shl
dec
pop
pop
or
outsl
xchg
push
or
in
xchg
fildll
xchg
inc
push
push
lods
stos
adc
fsubrs
xchg
adc
cmc
fbld
sbb
scas
or
and
xchg
imul
aad
mov
test
pop
out
xor
mov
out
aas
lret
ret
arpl
lods
sbb
jbe
nopl
cli
movsl
inc
lods
mov
mov
sbb
sbb
icebp
lds
xchg
incb
mov
stos
movsb
push
shll
sub
xor
mov
icebp
in
ljmp
or
lret
imull
mov
lds
xchg
in
insb
xlat
fwait
mov
mov
jle
je
add
cld
mov
scas
mov
les
in
jge
not
les
pusha
mov
scas
popa
xor
js
into
dec
mov
jno
fiaddl
pop
cld
sarl
cltd
cmc
xor
rol
cmp
and
sub
es
mov
add
sbb
jnp
je
les
icebp
enter
xchg
andb
outsb
xchg
rolb
push
ret
or
and
push
jno
push
aad
in
enter
adc
xor
push
cmp
adc
loope
lock
lahf
nop
scas
xchg
outsl
rcll
sbb
xchg
insl
cmp
add
fwait
loopne
add
ret
imul
cld
roll
xor
and
aad
push
jl
sbb
mov
push
push
loop
daa
fs
in
shl
mull
push
pop
add
in
icebp
fdivs
mov
cmp
sar
loope
lds
shll
jb
stos
mov
or
pushf
add
jmp
sti
out
xor
into
lret
lea
lods
and
and
aad
lods
lods
popa
or
dec
addb
bound
testb
ja
in
sarb
xor
inc
invd
jmp
out
or
pop
adc
in
rcrb
aaa
jmp
jns
popa
insb
lcall
lret
adc
addr16
push
xchg
xchg
nop
stos
sbbl
xchg
push
xor
pop
push
or
sbb
sbb
bound
in
jnp
imul
add
leave
xor
jle
sub
lcall
in
jo
adc
lcall
lret
aas
mov
in
push
push
fstl
mov
push
fistps
popa
ss
pop
adc
cmpsb
jno
cltd
clc
test
loop
jp
xchg
inc
ds
pop
adc
enter
mov
js
jge
xchg
push
dec
dec
insb
xor
and
lods
cwtl
aad
lods
sub
sub
aas
xchg
loopne
or
iret
xor
mov
shll
and
loopne
mov
sbb
sbb
add
cltd
jmp
mov
aas
sub
test
xchg
push
imul
cmpl
cwtl
mov
sub
enter
jecxz,pn
and
stos
cmp
jecxz
lods
mov
push
stos
sbb
out
adc
push
sbb
call
sub
jg
sbb
mov
lahf
ss
cmpsb
or
adc
push
test
cld
push
mov
dec
push
cli
inc
mov
jle
scas
mov
nop
hlt
xor
xchg
stc
lods
enter
cwtl
sbb
enter
or
xor
dec
or
xchg
fistl
test
inc
shlb
and
clc
in
movsb
sub
cli
or
fimuls
pop
xchg
push
pop
pop
inc
mov
enter
xor
leave
hlt
jns
xor
xchg
jg
pop
insb
insb
pop
aad
lret
cltd
hlt
hlt
xor
movsl
sbb
xor
lret
and
jnp
jbe
roll
push
les
or
mov
ja
inc
arpl
adc
push
call
or
fs
or
and
sub
icebp
roll
nop
mov
sub
loopne
pop
lock
jg
cmc
push
cs
add
fldt
dec
mov
or
and
inc
daa
xor
rcrl
or
mov
add
shlb
xchg
das
jne
stc
push
xor
mov
mov
out
movsb
sbb
push
xchg
int
push
mov
mov
or
sbb
aad
or
pushf
cwtl
rorb
in
push
out
xor
or
sarl
pop
stos
clc
shlb
repnz
fsubs
lcall
aad
adc
andl
jbe
leave
pop
xchg
scas
loopne
jp
sbb
or
xor
hlt
in
and
sbb
je
mov
ja
sbb
loopne
push
xchg
repz
jo
pop
jmp
push
inc
xchg
test
dec
ficoml
xchg
and
sub
push
in
mov
push
rcrl
dec
shrb
cs
outsl
xor
mov
jle
gs
sti
pop
movsb
push
cmpsb
rorl
bound
pop
movsb
rcrl
inc
adc
cmp
stos
mov
je
in
or
and
loop
roll
sub
push
inc
dec
ret
mov
sbb
lods
lods
std
push
cli
mov
mov
xor
ja
popa
push
sti
adc
pop
divb
loope
cs
mov
loopne
aad
cld
dec
loopne
xor
lahf
jp
xor
mov
mov
jle
mov
dec
adc
xchg
addl
loopne
sbb
rorb
into
test
lods
push
xchg
int3
mov
loope
popf
push
test
push
xor
je
lds
xor
ret
and
xlat
in
pop
cltd
jb
mov
call
imul
jmp
jne
pushf
imul
push
js
jle
outsb
mov
inc
mov
clc
pusha
sbb
mov
fs
cltd
cmp
outsl
pop
mov
aaa
mov
test
xor
push
xor
notb
dec
leave
cmp
idivl
mov
jmp
cltd
cmp
sbb
add
mov
inc
sbb
inc
popf
mov
les
jg
mov
or
mov
sbb
lock
orb
test
dec
pop
push
pop
imul
xor
sbb
sub
arpl
push
cmp
into
inc
and
hlt
jecxz
add
lock
mov
dec
outsb
nop
sbb
push
mov
inc
sub
sbb
popa
xchg
and
hlt
cld
pop
inc
xchg
pop
js
or
mov
fwait
jbe
sahf
cld
mov
arpl
test
push
or
adc
cld
stc
scas
adc
lret
sub
and
test
or
jae
push
sbb
adc
push
in
fdivrl
movsl
pop
mov
cli
stos
repz
dec
addb
sbb
jmp
xor
jns
pop
inc
pop
push
xchg
mov
dec
int3
jb
adc
xchg
cmp
dec
hlt
inc
or
xchg
xchg
mov
pop
mov
ljmp
sub
mov
adc
sbbl
jmpw
and
sub
jmp
mov
sub
mov
jnp
daa
jbe
in
lret
movsb
push
lock
cmp
repnz
fwait
repz
pop
imul
movsl
mov
push
and
sbb
es
pop
scas
je
mov
mov
jbe
insb
push
sub
cmpsb
sti
cmp
addr16
nop
sbb
inc
mov
lea
movsb
rorb
dec
and
popa
inc
pop
shl
xor
push
pusha
push
movsb
lret
in
pop
or
xchg
pop
jl
decl
mov
and
pop
or
jl
mov
pop
mov
sub
adc
fnstcw
out
mov
stos
aad
mov
push
adc
add
cmp
test
dec
mov
orl
push
mov
mov
icebp
sub
scas
dec
int
lods
and
iret
aam
cmp
out
pop
mov
stos
jbe
in
outsl
mov
mov
pop
lds
xor
lock
or
test
neg
fistl
neg
mov
sbb
sub
cmp
mul
cmp
ret
push
add
xlat
add
xchg
add
popa
sub
sbb
cmp
mov
inc
mov
adc
mov
push
cmp
mov
fisubrs
pop
xor
xor
inc
inc
add
mov
and
add
jbe,pn
pop
js
shrb
mov
and
xor
fsubrs
jmp
inc
inc
add
lea
jg
into
sub
sbb
sub
out
out
xor
xchg
jp
mov
pusha
call
popa
leave
add
sbb
dec
xor
mov
vmovshdup
mov
sub
xchg
adc
cli
xlat
adc
add
sub
pop
lret
lea
jae
fcmovnb
mov
bound
in
and
push
repz
or
mov
adc
dec
dec
mov
flds
stos
or
and
xchg
mov
jae
out
xor
lds
xor
sub
leave
aas
mov
stos
and
pop
movsl
push
das
mov
push
lock
mov
mov
adc
mov
push
clc
and
push
popa
nop
stos
ss
sar
dec
scas
in
js
add
jno
jge
stc
push
add
std
jp
inc
push
iret
daa
jmp
mov
xor
mov
xor
push
stc
sub
pop
pop
pop
and
pusha
push
cmc
subb
jge
dec
das
sub
les
xorb
cmp
mov
mov
xchg
nop
lds
jns
sub
and
pusha
and
pop
sbb
sbb
inc
or
orb
xor
icebp
jmp
inc
in
add
shl
mov
or
clc
or
scas
push
imul
or
jecxz
rolb
ja
push
icebp
sbbb
test
jp
pop
jge
movsb
mov
daa
pop
push
lods
aas
jg
adc
inc
scas
xchg
xchg
lahf
dec
pushf
rolb
stos
xchg
inc
inc
jne
test
vpshld
and
jmp
movsl
xor
fwait
popa
sti
pushf
sbb
dec
jne
dec
mov
enter
push
cwtl
lods
jo
inc
loopne
mov
pusha
ret
cltd
sti
jg
mov
adc
adcl
or
sbbl
mov
xchg
jb
mov
sub
push
stc
mov
in
xchg
and
mov
out
push
shrb
test
sub
pop
jne
lock
aas
mov
push
jo
and
inc
mov
scas
je
call
add
andl
pop
pushf
aad
ret
int3
push
push
adc
mov
adc
in
add
pop
adcl
pushf
lock
subb
bound
jecxz
xchg
sub
sub
lret
movsl
lds
jle
sbb
xor
ja
pop
pop
and
sub
xchg
and
idiv
mov
nop
mov
mov
pop
aaa
push
or
cmp
and
dec
popa
stos
std
dec
pop
cld
push
pop
or
outsb
mov
lods
nop
rcr
shlb
imul
dec
mov
imul
int3
sub
in
loop
cmp
push
adc
lcall
imul
xchg
sahf
mov
inc
jo
add
jno
addr16
aas
jns
fcoml
add
fmull
mov
mov
pop
andl
addr16
sahf
sbb
and
and
sub
sub
data16
fisttpll
xlat
addl
mov
mov
jne
ja
cwtl
out
xchg
test
mov
jmp
sub
mov
nop
subb
insl
cmp
icebp
lock
add
sbb
pop
fdivl
or
add
cltd
rolb
and
dec
lods
pop
jecxz
iret
mov
stos
mov
jno
mov
inc
rolb
adc
push
xchg
xchg
adc
mov
or
gs
adc
repnz
and
dec
sbb
ret
fwait
jne
scas
int
sub
dec
xor
push
and
sub
stos
cmp
adc
xor
sbb
flds
hlt
and
jge
push
das
inc
fs
add
mov
cmpsl
scas
fsubrs
or
dec
dec
lds
popa
icebp
std
cmc
xchg
xor
push
or
dec
mov
pusha
nop
out
fsts
inc
xor
cmpsl
push
aaa
mov
jnp
push
jecxz
jnp
and
enter
dec
out
sbb
dec
decb
fcomps
insb
cmp
stc
enter
mov
push
adc
shrl
mov
incb
enter
test
cwtl
mov
fcoml
dec
mov
aad
cmp
rorb
jne
out
rorb
push
dec
and
dec
inc
fcoml
cmp
or
in
divl
sub
int
in
xchg
lods
clc
add
je
adc
fwait
orl
sbb
leave
push
and
pusha
or
add
je
lea
lar
mov
pop
push
stos
push
mov
fadds
in
int3
movsb
push
mov
leave
push
bound
or
les
iret
mov
repz
stc
stc
mov
xchg
push
adc
stos
inc
call
adc
add
mov
adc
clc
out
icebp
dec
call
push
and
shlb
jne
pop
xor
lods
cmp
testl
jns
jo
aad
fistpll
lcall
push
pop
test
int3
mov
pop
arpl
pop
add
fstpt
sub
mov
mov
aas
shl
cmpsl
bound
dec
pushf
mov
arpl
test
cwtl
xchg
arpl
or
mov
lret
jmp
pop
cmp
jns
xor
xchg
and
inc
push
mov
sbbb
pop
xchg
sub
imul
fwait
mov
mov
or
sbb
stos
bound
scas
add
and
inc
adc
inc
les
ljmp
mov
push
or
andl
inc
rcr
add
add
aas
mov
xor
adc
mov
sub
add
adc
push
test
inc
and
scas
inc
mov
mov
das
and
call
pop
test
push
inc
fmuls
add
not
sbb
lahf
and
shrb
adcl
adc
lods
pop
mov
pop
mov
rdtsc
xchg
movl
aam
xchg
mov
jecxz
mov
jg
out
stos
xchg
and
test
push
xor
adc
or
mov
arpl
cltd
and
call
orb
and
in
in
cs
push
rclb
xchg
fimuls
mov
sbb
mov
sub
stos
push
add
mov
imul
pop
sub
and
lcall
nop
addb
sub
add
inc
lcall
jae
mov
dec
add
cmp
repnz
xchg
icebp
xchg
clc
mov
xchg
test
dec
xchg
push
cmpsl
fwait
scas
dec
hlt
imul
jmp
dec
pop
and
mov
push
jmp
mov
adc
xor
push
sbb
in
and
dec
mov
adc
shl
ja
add
clc
cmp
lods
adc
mov
jo
rorl
jge
jle
push
adc
adc
jnp
and
push
push
cltd
fsubs
gs
stos
add
jns
xchg
test
sbb
push
shrl
add
inc
scas
xchg
orl
inc
jle
bound
loop
or
fistl
insl
arpl
xchg
jecxz
and
push
jle
cmp
fists
pop
mov
add
jno
es
insb
add
push
jno
jo
sub
adc
arpl
cmc
jo
pop
roll
jno
and
repz
mov
mov
or
cmpsb
jmp
stos
fistpll
xchg
pop
lcall
cwtl
cmp
jns
add
jmp
es
mov
pop
pop
cmp
ret
sub
pop
repz
mov
pushl
and
fistpl
data16
cmp
pushf
inc
insb
adc
inc
shrl
cli
cmp
frstor
sbb
mov
dec
add
movsb
out
and
addb
dec
mov
mov
dec
roll
add
subps
jmp
dec
outsb
mov
sbb
sub
movsl
adcb
movsl
dec
and
test
pop
pop
push
jg
aas
roll
out
push
cld
out
ret
adc
test
xchg
or
jl
jbe
pop
sub
pop
mov
cwtl
adc
into
and
mov
mov
and
aaa
add
jl
hlt
icebp
rclb
sub
test
sbb
call
fiaddl
ret
call
mov
mov
addb
sbb
add
pusha
test
ret
push
loopne
sbb
cltd
push
jl
xchg
fsubrs
add
cmp
les
adc
xchg
cmc
xor
test
call
orb
mov
pop
mov
adc
cmpsb
push
clc
jl
rorb
push
xor
dec
out
fidivl
lock
sub
jo
dec
add
sbb
clc
mov
pop
xlat
cmc
pop
push
cld
in
mov
orl
and
ficomps
test
sub
adc
or
dec
cli
or
xor
imul
jmp
jb
mov
cmp
xchg
cld
adc
ljmp
push
jle
jne
arpl
loopne
sti
jbe
inc
mov
and
inc
dec
int
fidivs
push
xchg
sub
addr16
ljmp
incb
mov
mov
push
scas
pop
cltd
mov
out
inc
in
cmp
lcall
movsl
cmp
cmp
push
push
xor
adc
mov
adc
andb
repnz
mulb
xchg
sbb
and
adcb
stos
xorl
jmp
rsm
xlat
clc
dec
adc
aad
cmpsb
push
andl
cs
cli
adc
sub
sbb
xchg
inc
xor
pop
sub
sub
push
mov
lcall
or
leave
lahf
sbb
icebp
fwait
dec
adc
clc
xor
sbb
repz
push
or
mov
push
or
mov
stc
nop
sub
cs
rcrb
pushf
pop
cmpsl
stos
mov
cmp
test
orl
pop
mov
cs
lret
rol
xor
in
xor
or
orl
inc
in
imul
addr16
test
idivb
movsb
lret
mov
repnz
ja
les
pop
xchg
mov
stos
sub
ds
orl
or
lcall
push
mov
xchg
lea
cmp
push
cmp
rclb
enter
out
sub
sbb
and
aaa
add
enter
js
pusha
jnp
jmp
sbb
push
pushf
lret
mov
cmc
or
xor
ret
dec
sti
jle
inc
xchg
push
lock
adc
test
push
sub
inc
dec
mov
stos
arpl
mov
sbb
out
jmp
dec
mov
negl
pop
adc
pop
and
in
jl
adcb
fucomi
mov
sub
or
pop
aam
xchg
push
out
push
mov
stos
inc
mov
jmp
inc
xchg
xor
xchg
iret
pop
adc
sub
xchg
stc
push
les
jle
sub
rcll
push
mov
or
xchg
sub
sbbl
addr16
inc
xchg
sub
imul
xlat
pop
rolb
lds
xor
jae
call
int
pop
push
xchg
adc
aaa
fadds
mov
cmc
mov
and
and
jae
stos
mov
xor
pop
sbb
cltd
adc
sbbb
or
das
es
mov
bound
mov
jno
push
bound
dec
pop
or
sbb
adc
nop
lds
les
or
roll
inc
mov
je
ret
mov
test
lret
adc
and
cwtl
or
push
and
gs
das
je
adc
pop
lock
andl
ljmp
push
xchg
sub
mov
movl
data16
cmp
nop
out
add
lret
leave
mov
lods
sub
lock
inc
push
xorb
aas
jb
insb
dec
xchg
or
sub
jmp
push
inc
mov
jno
adc
icebp
or
or
jl
mov
jle
stos
xor
je
pop
outsl
fst
scas
lods
out
mov
push
mov
mov
push
pop
in
jecxz
or
mov
pop
dec
mov
outsb
push
cmpsl
push
push
leave
push
adc
cmp
or
xorb
push
or
or
mov
out
jo
jnp
pop
and
add
movsb
cltd
sbb
xchg
push
add
iret
sbb
xchg
es
in
adc
cwtl
repnz
aam
sub
mov
js
dec
int
pushl
repnz
mov
xchg
sub
jecxz
sub
sbb
push
pusha
aaa
pop
into
and
cmp
xchg
lods
in
les
cmpsl
mov
xchg
out
jne
add
rolb
js
repnz
mov
push
add
xlat
loop
stos
sub
xchg
mov
aad
pop
rcrl
lret
mov
jne
shll
pop
cli
and
lea
add
xor
adc
pop
ret
sbb
and
jecxz
jecxz
das
nop
in
pop
aas
das
jmp
pop
scas
pop
or
stos
sti
add
movsl
call
ja
mov
xchg
dec
inc
pop
pop
repnz
push
test
jecxz
mov
mov
mov
sub
arpl
out
mov
clc
je
add
jmp
dec
sahf
xchg
pmaxsw
push
call
mov
push
subl
lods
stos
cwtl
repnz
pop
call
insb
or
js
nop
sbb
fucomp
pop
sbb
and
dec
rolb
lock
ret
mov
sahf
sbb
data16
ret
push
push
leave
aaa
mov
jp
fisttpll
test
aas
cwtl
jle
rcrl
cmp
outsb
bound
pop
nop
dec
mov
sbb
jbe
stos
adcb
mov
cmp
inc
dec
jle
in
push
or
jp
shlb
cwtl
cmp
mov
into
mov
sarb
ja
pop
xchg
sub
mov
icebp
std
rclb
push
or
inc
lret
hlt
and
xor
mov
dec
int
push
out
imul
push
xor
les
inc
mov
ljmp
inc
inc
bound
cmpsb
dec
jne
xchg
insl
mov
lock
mov
imul
sbb
push
xchg
add
adc
dec
ljmp
xor
andb
imul
push
js
pop
mov
sub
sbb
insl
push
sub
and
std
lods
and
daa
dec
pop
fsubrl
adc
cmp
xchg
dec
lret
fldenv
scas
dec
jmp
out
aad
mov
mov
js
jb
fisubrl
out
dec
mov
cmpsl
je
shrb
dec
xlat
imul
or
or
nop
sub
lahf
movsl
adc
les
xchg
pushf
mov
scas
xsave
in
or
ljmp
je
sti
mov
pop
test
mov
or
popf
adc
aas
stos
test
xchg
fs
pop
sub
lret
jl
xor
lret
push
movsl
stos
sub
xchg
lret
pop
cmc
pop
xor
mov
add
cmpb
aas
enter
xor
imul
pop
mov
push
cmpsl
mov
inc
pop
pop
or
pop
pusha
adc
fistps
add
and
mov
mov
arpl
mov
faddp
add
fs
jle
xor
inc
fcomip
scas
jl
dec
jnp
mov
push
dec
fidivrl
jp
mov
mov
mov
sub
jle
in
mov
pop
leave
addr16
stos
outsb
dec
pop
mov
fdivrl
jne
add
dec
test
inc
scas
cmp
push
aad
dec
aas
or
sub
testb
sbb
shlb
mov
bound
and
push
addr16
jae
out
andb
add
je
int3
sbb
pop
outsl
xchg
adc
mov
jmp
and
js
push
adc
pop
data16
and
push
rcrb
cmovb
ret
xor
rolb
mov
sub
mov
and
rcll
sbb
and
jg
icebp
or
push
pop
les
adc
pop
mov
push
in
sbb
leave
je
nop
push
cwtl
sub
inc
xor
xchg
sbb
push
outsl
out
mov
cli
push
loop
in
cmp
mov
and
mov
inc
ret
xchg
dec
clc
out
mov
inc
lret
adc
fidivrl
out
mov
xchg
add
mov
es
jns
ds
cmpsl
std
outsl
test
xor
adc
pop
push
bound
mov
xlat
pop
xchg
fldl
bound
add
and
mov
dec
mov
in
int
jns
popf
pop
stc
xchg
fs
push
add
pushf
push
inc
push
mov
add
pop
and
pop
add
inc
pop
pop
and
arpl
cwtl
rclb
test
xor
push
jb
in
rolb
and
xchg
mov
adc
adc
shlb
enter
xor
loop
arpl
lret
mov
push
pop
push
mov
stos
repz
jecxz
sbb
in
lods
xchg
cmpsl
inc
mov
test
mov
jne
outsl
into
int3
inc
scas
aaa
cmp
scas
xchg
ficoms
sub
mov
dec
mov
push
and
jl
push
int3
imul
cwtl
inc
fbld
mov
rol
and
loope
arpl
enter
adc
mov
lods
call
addr16
sbb
sub
or
pop
mov
and
dec
and
pusha
mulb
testl
dec
add
fcomps
mov
cmpsl
or
dec
and
pusha
adc
dec
or
sub
mov
jbe
and
add
out
subb
mov
sbb
dec
inc
fmul
jo
mov
or
rolb
incl
xchg
mov
cli
nop
loopne
movsl
cmovl
or
xchg
loopne
add
loope
push
repz
sbb
ret
rcrb
push
mov
sbb
push
cmp
ljmp
nopl
mov
mov
in
movl
rcr
mov
add
mov
mov
xchg
push
add
xor
andb
cltd
xchg
mov
xor
ret
mov
jl
ficomps
loope
es
out
cmp
mov
mov
dec
add
ret
or
xchg
sbb
ret
js
jg
scas
xlat
add
mov
or
rcrb
ljmp
sbb
xchg
aam
int3
pop
cmp
rorb
xlat
std
push
ja
xor
popa
pop
mov
nop
inc
fidivrs
cld
add
cli
ljmp
inc
jmp
in
lds
add
or
or
lea
jmp
or
lea
mov
or
and
sbb
das
bound
cld
sbb
xchg
push
popa
lret
sbb
pop
pop
mov
out
cmp
lret
stos
add
ljmp
lods
pusha
sbb
aad
lods
push
add
je
mov
fcoms
add
pop
dec
adc
mov
testb
inc
push
mov
add
mov
push
cmp
inc
jb
loop
add
xor
adc
lods
inc
pop
pushf
in
and
in
fistpll
xor
cmp
inc
xchg
mov
mov
xchg
insb
in
xor
popa
iret
adc
mov
inc
hlt
xor
xlat
pop
out
dec
mov
mov
fimuls
jnp
shll
or
sahf
dec
icebp
arpl
out
xlat
jns
cmp
stos
popf
push
lahf
add
fistpll
xor
push
popa
lods
clc
cwtl
clc
mov
in
cmp
lods
push
repnz
sbb
out
lret
icebp
in
mov
into
shll
dec
cmpsb
in
lds
cmpl
orb
out
inc
cmp
sbb
cmp
lret
cmp
out
cmc
test
xor
mov
leave
mov
js
add
lods
out
pop
sti
loopne
movsb
and
sbb
jno
adc
lods
mov
scas
mov
cli
push
cmp
das
movsl
sub
test
scas
enter
fstpt
and
outsb
sbbl
fs
cld
xchg
ret
mov
xchg
pop
mov
cmp
bound
stos
out
cmp
movsb
and
and
pusha
push
xor
pop
pusha
dec
mov
push
xorb
sub
fcoml
ja
outsb
out
jbe
sahf
pop
movsl
pop
inc
sbb
aaa
fdivrs
cmp
imulb
sub
int3
dec
outsb
js
and
push
adc
pop
cmpl
inc
add
push
or
test
cmp
pusha
push
int3
popa
test
mov
fisttpll
cmp
push
mov
cmp
shrl
jmp
daa
mov
stc
add
fs
dec
inc
sti
pop
or
and
scas
add
mov
aad
mov
mov
repnz
push
cmp
fimull
pop
loope
lret
cmp
push
pop
jne
lods
mov
xchg
push
mov
mov
pop
pop
push
push
mov
xor
sub
xor
lcall
je
enter
inc
sbb
stc
fs
outsb
or
fcmovnb
mov
jp
jl
pop
lock
and
mov
inc
repnz
lahf
popf
pop
jl
sti
mov
pop
mov
jmp
clc
mov
inc
xchg
jge
bound
mov
mov
xlat
add
jbe
inc
mov
adc
lods
adc
cmc
mov
mov
mov
sahf
imul
mov
cmp
loope
sub
testb
push
out
pop
call
movsl
add
movups
dec
ja
add
xchg
mov
push
push
and
adc
pop
cld
call
or
push
xor
sub
add
sbb
jecxz
push
std
cmp
aas
in
cmp
in
xor
adc
rorb
mov
pusha
test
push
test
add
andb
sahf
cmc
inc
cmp
mov
imul
mov
push
lods
aad
mov
mov
xchg
adc
outsl
pop
mov
sbb
daa
pop
call
lcall
mov
ret
inc
sbb
fsts
ror
fidivrl
adc
subb
jmp
inc
adc
das
or
int
in
push
enter
xchg
fcomp
out
movsl
pop
cmpsb
icebp
mov
test
xor
lret
repnz
in
mov
repnz
xor
nop
jo
cmp
repnz
divl
sub
das
inc
push
sbb
pop
adc
add
jg
pushf
sbb
call
ret
out
mov
aaa
icebp
cmc
or
or
mov
and
rsm
stos
lahf
jl
sahf
push
int3
and
push
cld
iret
arpl
jl
mov
pusha
inc
in
std
xor
push
xor
fdivs
or
dec
mov
nop
add
inc
jge
iret
push
dec
imul
scas
or
imul
jp
pusha
popa
fsts
push
inc
mov
or
mov
scas
nop
fsubl
mov
mov
mov
mov
pop
dec
or
xchg
vmovdqu
add
in
mov
inc
fsubs
out
sub
add
push
push
jno
jo
bound
scas
push
mov
and
test
mov
arpl
stos
mov
add
adc
loopne
shlb
ljmp
or
adc
lods
push
ret
das
or
sahf
pop
jg
bound
in
mov
test
xorl
aas
mov
xor
sbb
clc
aaa
daa
mov
into
shl
repnz
jg
mov
push
xchg
pop
or
dec
rep
aam
shlb
xor
int3
and
into
sbb
dec
scas
dec
fldl
sbb
or
push
lods
outsl
push
adc
lds
out
adc
add
dec
ja
dec
dec
dec
or
xchg
bound
xor
mul
rcrb
gs
std
icebp
mov
sub
adc
popa
out
inc
xor
xchg
mov
or
ret
dec
les
stos
jbe
inc
jo
sub
aas
int3
xchg
xor
sahf
notb
repz
xchg
scas
cmp
sub
fcmovne
and
xor
int3
cmc
popa
xor
sub
in
mov
cmp
movsb
push
fadds
cmp
cwtl
mov
xchg
pop
adc
pop
dec
and
in
adc
test
jae
add
sbb
xchg
push
adc
sarl
lret
icebp
sbb
mov
sbb
decl
sbb
mov
test
push
mov
or
xor
jg
xchg
inc
fprem1
inc
push
shlb
ret
xchg
fldcw
cmc
jmp
divb
cmp
dec
aam
cld
sub
dec
mov
subl
scas
loopne
or
fimull
fwait
inc
movsb
push
mov
stc
mov
sub
mov
xor
xlat
movsl
push
les
adc
loopne
lods
jns
fwait
scas
mov
outsl
insl
or
dec
jmp
ljmp
inc
xchg
fisttpl
std
movsl
pop
test
fbstp
jmp
mov
cmp
ds
test
loope
sbb
sub
add
mov
push
cli
sub
xchg
and
dec
out
xor
adc
push
test
xor
sub
aaa
test
paddq
das
adc
cmp
test
outsl
pop
cmp
adc
stos
cwtl
mov
or
arpl
les
pop
xor
cmp
inc
pop
or
mov
stos
andb
addr16
adc
out
dec
jp
dec
les
js
in
sahf
pop
or
mov
pop
inc
insb
xchg
repnz
fldenv
rcl
add
jecxz
jo
pop
pop
lret
cmp
sbb
mov
mov
nopl
push
and
pop
mov
sub
pusha
fcompl
sub
cmp
inc
adc
jae
test
cs
dec
adc
push
xor
mov
xchg
push
call
into
push
cmovno
xchg
xchg
mov
or
sbbb
jns
adcb
push
pop
dec
pop
fdivs
addr16
jns
cmp
call
fcoms
mov
std
out
and
popf
pop
addl
dec
enter
inc
or
jns
inc
pop
cmp
xor
fldenv
test
sub
test
jmp
ret
sbb
pop
jmp
std
mov
pop
cld
and
dec
int3
sub
add
pop
adc
push
push
push
ror
xchg
and
pop
add
ss
push
shrb
shr
shl
mov
outsb
aas
cmp
add
xor
gs
mov
jne
sub
pop
idiv
pop
lcall
mov
mov
in
popf
std
mov
orb
sbb
call
mov
and
pop
imul
mov
fsubl
int3
mov
mov
ljmp
mov
jg
or
cli
ja
pop
and
sbb
movsb
sub
lods
sbb
push
fldcw
jle
idiv
pop
flds
fmuls
xorl
addr16
movb
push
mov
leave
mov
cmc
dec
jmp
sub
xchg
enter
adc
xor
sti
xor
mov
inc
push
pop
cmp
inc
adc
inc
pushf
andl
addps
orb
mov
push
lret
rclb
mov
mov
scas
mov
pop
clc
das
sub
stos
push
push
mov
aas
jo
inc
mov
je
and
pop
mov
pop
andb
je
icebp
stos
cwtl
ja
xlat
cs
sbb
mov
movsl
adc
dec
add
loope
xchg
fldenv
pop
out
int
pushf
sub
loopne
and
test
inc
and
adc
mulb
imul
adc
loopne
addl
pop
sar
pusha
inc
adc
lods
movsl
loop
movsb
insl
xor
popf
test
and
nop
mov
add
inc
jmp
inc
stos
pop
vpunpcklqdq
push
movsl
lea
xchg
test
lea
push
aam
adc
push
insb
in
mov
cmp
mov
loope
dec
loopne
sub
pop
add
shll
xchg
jmp
pusha
adc
pop
push
push
shrb
subl
test
pushf
push
mov
aaa
pop
in
mov
mov
adc
dec
subl
push
ljmp
lea
fs
into
sub
aad
add
in
sub
mov
fadd
jne
mov
test
ss
pop
in
data16
add
ljmp
jmp
dec
mov
xchg
mov
mov
loopne
jns
scas
shll
jo
jno
and
push
adc
pop
or
notb
adc
push
fsubs
or
leave
cmp
scas
inc
sti
push
loopne
mov
jg
scas
ja
sub
mov
aam
das
popf
mov
stos
push
shll
stos
cmp
into
jae
ret
dec
xchg
jne
lahf
arpl
xchg
cmp
or
sti
add
sahf
inc
cmpl
jb
divb
jp
stos
jb
add
jb
test
aam
bound
sbb
cmc
aad
cwtl
adc
mov
or
js
fsts
sub
add
je
cmpsl
adc
dec
mov
mov
mov
mov
mov
das
or
out
scas
fistps
ja
outsb
shr
fdivrs
popa
xor
pop
push
cmp
test
inc
pop
adc
ret
sbbl
cmp
sbbl
or
movsb
nop
adc
mov
call
sub
add
xor
shl
rol
pop
mov
test
push
adc
in
clc
imul
cmp
push
mov
insw
sub
cli
mov
add
cltd
pusha
or
mov
mov
push
bound
pop
shrb
and
pushl
test
outsl
cltd
fldl
and
cmp
les
jle
xchg
mov
ds
bound
or
jo
pop
sahf
mov
adc
mov
enter
sbb
shl
ja
jmp
repnz
add
adc
sub
adc
and
inc
sub
leave
push
sbb
loopne
jno
loope
push
jno
rolb
sub
hlt
mov
or
pop
mov
hlt
push
add
adc
je
dec
inc
mov
xchg
popf
icebp
cmpb
mov
pop
cwtl
loope
pop
shl
addb
sub
ds
add
cmp
testl
sbb
dec
les
insb
push
jecxz
pop
pop
push
add
bound
add
shll
mov
stos
icebp
dec
js
push
out
dec
or
pop
add
dec
mov
mov
xchg
mov
jge
add
push
push
xor
sub
in
or
inc
stos
sub
jl
es
insb
movsb
out
and
jne
jae
mov
mov
inc
mov
int
lock
jno
cmp
jne
ljmp
das
test
call
cmp
lahf
cmp
xchg
jl
xchg
jmp
fsubl
fcoms
pop
fistpll
mov
mov
out
fbld
inc
push
jno
imul
push
lcall
push
mov
mov
lcall
jle
push
sbbl
and
sbb
out
fwait
sub
and
xor
jnp
pop
outsl
or
iret
in
sti
adc
ja
mov
push
and
push
cmp
push
add
loop
aaa
call
adc
cmp
sbb
adc
les
push
outsb
out
push
push
jbe
repz
ljmp
inc
mov
dec
adc
stos
cmp
push
add
pop
inc
jnp
adc
or
pop
gs
or
jmp
lods
cmp
mov
aad
inc
or
pop
ljmp
mov
in
inc
jae
add
outsl
pop
lcall
mov
jo
cwtl
sahf
cwtl
mov
sbb
mov
nop
cmp
pop
mov
repz
cs
mov
stos
mov
mov
push
imul
movsl
xlat
jno
and
xchg
cltd
cmp
dec
mov
inc
fistps
jle
cld
xor
sti
inc
inc
xlat
lock
rolb
scas
inc
pop
lds
xchg
or
aad
and
int3
add
cmp
sub
fsubrl
imul
jp
mov
cmpsb
loope
gs
dec
xchg
cmp
andl
mov
pop
inc
stc
xchg
mov
inc
lahf
mov
xchg
push
mov
mov
shlb
mov
lods
lret
daa
fidivrl
xchg
inc
fcomi
push
mov
inc
inc
mov
mov
cltd
add
and
xlat
negb
push
cmpb
jmp
mov
or
cwtl
ljmp
rorl
idivb
lahf
outsb
mov
jb
mov
loope
cld
pusha
adc
inc
mov
outsl
mov
or
mov
scas
mov
push
lret
adc
jle
gs
in
insl
lcall
or
mov
xor
sub
cmp
decb
mov
jmp
out
out
jae
int3
insl
cmpb
orl
pop
push
insl
cld
xor
daa
fmul
sbb
cwtl
push
loop
sub
mov
shll
push
dec
lret
out
xor
push
or
xchg
cmc
cmp
je
xchg
ds
lret
enter
sete
imul
mov
dec
in
cmp
xchg
in
pop
repnz
sub
xorl
and
test
mov
movsl
adc
mov
loopne
mov
ss
shlb
outsb
mov
mov
f2xm1
inc
pop
mov
mov
ljmp
aaa
sbb
subl
idivb
nop
inc
popf
sub
or
orl
pop
cmc
adc
cmp
insl
jle
mulb
or
inc
pop
add
pop
add
xor
add
adc
sub
out
lcall
pushf
mov
sub
enter
test
or
inc
jb
aas
repnz
scas
jnp
in
pop
pop
ja
cmp
mov
add
mov
cli
jbe
inc
shll
inc
jge
mov
ljmp
popf
sub
stos
add
cmpsb
push
push
sub
mov
pop
sub
sub
lahf
or
orl
jl
xor
or
push
xor
out
hlt
jnp
xor
ja
inc
cld
cld
inc
sub
push
cmp
push
dec
std
xor
pop
pop
push
lcall
mov
mov
in
pop
push
cs
inc
mov
cmpsl
ja
mov
mov
and
push
inc
popa
cmp
xor
call
ficompl
test
sub
jge
ljmp
fstl
sbb
sbb
add
cltd
clc
je
mov
cmp
and
les
arpl
ficoms
sbb
js
sbb
pop
std
cmp
shl
push
pop
inc
cltd
pop
les
push
xor
scas
cmp
ljmp
mov
shl
std
mov
push
push
jne
mov
int
cmp
push
rorl
dec
cld
pop
sub
pusha
xchg
mov
ret
pop
inc
in
ret
add
cld
or
pusha
arpl
lock
loope
insl
push
in
repnz
mov
or
xchg
movsl
cld
daa
xchg
push
add
add
outsl
dec
pop
cmp
jae
out
xchg
jp
lock
ja
mov
sbb
ror
lahf
jno
jbe
cltd
gs
inc
nop
cmp
sbb
sub
push
cmc
rorl
inc
es
xchg
loope
xor
pusha
fs
push
clc
and
pop
xchg
inc
and
mov
test
xor
sbb
sbb
cmp
or
popa
cli
jmp
ror
mov
lret
cmp
add
cmpsl
and
push
and
jecxz
mov
mov
xchg
fmull
stc
call
iret
pop
pusha
sub
scas
call
sbb
jge
movsbl
cs
inc
jne
in
and
mov
loopne
sarl
sbb
pusha
and
sbb
sub
and
jnp
push
aam
jne
cmp
sbb
inc
push
xor
sbb
push
pusha
fstps
sar
or
lahf
mov
iret
add
repz
nop
rclb
fcmovne
xor
in
or
pop
test
add
add
fadds
add
lock
add
add
add
add
add
jle
inc
call
push
gs
cwtl
pop
xor
shrb
mov
dec
mov
and
hlt
mov
or
push
or
dec
fldl
addr16
sbb
push
insl
pop
pcmpgtd
js
add
xor
mov
jno
jo
adc
mov
scas
popl
sbb
sub
and
dec
mov
push
adcb
inc
sbb
scas
add
shlb
sub
mov
mov
orl
or
in
push
mov
add
add
xchg
aam
movsb
push
xor
cmp
xchg
ljmp
test
insb
adcl
pop
sbb
subb
sbb
je
cmp
and
xor
inc
inc
fmul
add
movsl
xchg
sub
arpl
and
lods
mov
add
out
inc
in
lea
pop
mov
jno
or
or
or
mov
inc
addb
add
push
add
and
adc
popa
xchg
push
jae
jns
adc
inc
jl
mov
or
sub
pusha
pop
das
push
shr
inc
inc
push
filds
inc
mov
jbe
inc
jb
fmull
xchg
fimuls
push
pusha
xor
mov
and
jbe
mov
in
aad
inc
inc
xchg
pop
inc
add
push
subb
xor
push
dec
push
push
dec
sub
inc
imul
dec
nop
push
mov
or
leave
dec
cwtl
pop
test
fcoms
cmpsb
lret
into
jge
push
dec
nop
cmp
push
inc
add
shrb
pop
mov
adc
add
or
xchg
cmp
shlb
enter
jno
add
push
cld
je
std
lods
mull
dec
lret
sbb
push
fucomp
adc
cwtl
cmp
pop
jnp
mov
cmpsl
pop
pop
cmpsb
inc
mov
pop
pop
out
mov
arpl
dec
push
pop
int
ja
sub
bnd
leave
inc
xchg
fistl
stos
push
ss
repz
inc
fdivs
out
mov
out
dec
cmp
cmc
sbb
mov
mov
rcl
fldl2e
loopne
orl
test
pop
fwait
pop
loop
leave
cmc
test
popa
dec
leave
pop
lods
scas
decl
lea
hlt
mov
roll
sbb
xchg
iret
sbbl
das
pop
jnp
hlt
test
xchg
push
data16
sub
mov
lcall
inc
mov
ret
out
test
stos
push
shrl
dec
add
pop
mov
scas
scas
std
sbb
and
insb
jne
icebp
iret
jne
into
mov
cmp
mov
pop
not
jmp
repz
mov
xor
pand
mov
jnp
push
adc
in
jno
fimull
xchg
ja
adc
xchg
cmp
sti
ljmp
insl
xlat
stc
stc
aaa
stc
call
testb
in
cltd
test
mov
ja
in
mov
and
fs
fwait
pop
lret
xor
inc
dec
pop
mov
or
cmp
pushf
push
pusha
in
repnz
jp
hlt
subl
stos
pusha
test
pop
fcomp
aas
rcrl
aas
aaa
bound
jnp
movsb
out
cltd
pop
push
dec
lret
xor
pushf
aaa
xchg
sbb
cld
push
or
add
stc
mov
lods
rcr
dec
lock
jg
shlb
jmp
mov
lds
push
in
pop
sahf
inc
cmpsb
pop
addr16
pop
mov
cmp
aaa
test
push
inc
cmp
xor
cmp
scas
mov
ret
xchg
jp
popa
leave
jg
cmp
arpl
ljmp
ss
pop
inc
cmp
in
sahf
je
imul
scas
fwait
insl
jmp
pop
addl
in
test
aam
movsl
pop
push
pop
push
push
pop
std
adc
loopne
xchg
out
mov
cld
fadds
js
mov
sub
mov
imul
push
lahf
pushf
pushf
lock
inc
pop
mov
inc
iret
xchg
jo
ret
or
sbb
fiaddl
test
div
push
mov
cs
gs
iret
enter
imul
rcll
test
scas
fstl
sub
sti
dec
cmc
mov
jnp
pop
idivl
hlt
leave
jno
pop
dec
jmp
ds
repz
fisttpll
mov
xchg
lret
jnp
negb
iret
inc
movsl
cmovp
mov
addr16
push
cmpsb
pop
sbb
jmp
mov
pop
xchg
movsl
mov
mov
movsb
inc
mov
out
popf
mov
mov
dec
jo
insl
cmpsl
mov
cmc
ljmp
jg
gs
mov
fstl
push
mov
data16
mov
mov
jbe
cmp
or
in
cmp
adcb
loopne
cmc
push
lods
jnp
imul
loop
sbb
data16
in
repnz
in
std
std
test
mov
cmc
pop
les
xor
pop
in
push
insl
mov
aas
push
xor
out
in
in
mov
icebp
mov
lcall
test
int
mov
bound
jge
int
cld
bound
in
pop
js
mov
push
mov
icebp
scas
aaa
xchg
out
sub
rcll
fcompl
popa
jae
js
hlt
mov
cmp
mov
mov
pop
xlat
lret
test
fisttps
pop
mov
jae
aam
push
mov
dec
add
xchg
mov
outsb
loope
cmp
xchg
mov
fwait
add
inc
jle
and
fisubrs
outsl
stos
cmc
mov
fldenv
and
push
in
push
and
into
shlb
add
jge
lods
add
imul
loopne
pusha
mov
push
test
xor
mov
sub
rolb
mov
adc
xor
adc
and
inc
or
loop
add
adcl
sub
les
adc
subb
mov
stc
mov
inc
mov
add
add
outsl
pop
mov
xor
dec
add
or
mov
fldl
push
insb
sbbb
mov
xor
pop
adc
ret
in
pop
mov
pop
dec
je
pusha
xchg
fildl
ss
pop
add
pusha
xor
mov
adc
call
mov
andl
mov
mov
mov
inc
push
test
push
mov
xor
pop
mov
mov
or
jo
mov
lds
inc
add
pop
add
aad
push
sub
ret
add
pop
lar
iret
adc
lods
jb
add
push
cltd
push
xchg
iret
lret
sub
loope
popa
xchg
imul
add
aam
push
stos
pusha
arpl
or
insl
shll
imul
lock
sub
mov
fisubl
ds
mov
dec
dec
mov
xor
cmpsb
movsl
mov
add
sub
add
xchg
cs
lds
mov
mov
mov
and
mov
push
add
mov
sahf
adc
sub
sbb
jnp
xor
repnz
outsl
and
or
push
dec
scas
lds
addl
rorl
pop
adc
xor
data16
loope
clc
push
movsb
or
sub
add
inc
jecxz
mov
mov
jo
cmp
nop
mov
cwtl
mov
mov
cmp
push
inc
xchg
add
outsb
dec
push
or
dec
adc
mov
mov
xor
mov
dec
lods
test
inc
das
pop
mov
add
or
inc
fmuls
and
pop
push
or
test
fmull
mov
add
xor
xchg
jmp
shlb
loope
dec
subb
ss
rolb
ret
xchg
xchg
inc
imul
test
test
adc
stos
sub
dec
adc
movsb
dec
scas
add
add
out
xor
push
fcoml
rolb
ret
inc
or
xchg
or
fimull
xchg
scas
push
or
test
or
add
mov
bound
mov
rorb
bound
aam
mov
cltd
add
mov
xchg
stos
dec
mov
aaa
sub
jmp
adc
mov
cwtl
aam
outsb
push
xorl
mov
fldenv
pop
pop
mov
test
xor
and
cwtl
push
xchg
inc
add
sti
loopne
push
mov
and
xchg
inc
or
push
adc
sub
inc
add
clc
cli
addl
xchg
xor
sbb
mov
push
loop
cwtl
shlb
sub
push
mov
stos
sub
lcall
cmp
insb
sbb
push
subb
jecxz
test
andb
loopne
sub
in
sub
int
add
add
push
ret
shlb
pop
and
mov
sbb
jo
jge
adc
pop
mov
inc
xchg
push
sub
and
jp
push
xchg
cmp
shll
das
and
test
loope
push
sub
adc
out
add
rorb
xchg
xchg
add
nop
movsb
xor
adc
xchg
jno
enter
xor
pop
lcall
and
sbb
dec
push
mov
int
int
dec
add
arpl
repnz
push
shlb
push
icebp
adc
rolb
bnd
movsb
xorb
push
cwtl
pop
sub
sub
arpl
xor
push
sarb
je
xchg
ficoml
xchg
call
adc
adc
ljmp
imul
xor
in
stos
xor
adc
pushw
clc
cmp
out
dec
add
inc
inc
mov
cmc
ja
add
adc
sbb
add
adc
dec
inc
add
add
add
add
xchg
and
adc
js
and
dec
adc
cmp
shrb
arpl
int
inc
sti
sub
adc
cmp
pop
or
push
scas
lret
into
repnz
test
fldcw
test
sub
imulb
mov
sub
sbb
fisubrl
leave
mov
pop
or
xor
fcomp
test
shrl
dec
in
jns
je
xchg
cmp
enter
add
mov
fdivs
mov
fcmovu
test
sub
movsb
rolb
add
adc
mov
xchg
sbb
test
mov
ret
popl
xchg
sbb
es
repnz
jb
int3
lods
jb
jne
xchg
sbb
lods
mov
add
addr16
or
xchg
and
xor
fwait
lods
pop
or
fisubs
in
fsubrl
or
stos
mov
xor
sub
sub
mov
rcrb
outsb
mov
lock
repz
repnz
out
aas
cmp
repz
pop
inc
aad
inc
sub
mov
sbbb
mov
leave
mov
or
test
das
inc
rorb
jle
movsb
pop
jns
inc
sub
rorl
push
pop
cli
mov
pop
std
hlt
inc
pusha
std
call
popa
pop
cli
adc
jb
mov
xchg
hlt
and
test
aas
xor
inc
pop
cli
xchg
dec
jle
rorb
std
test
pop
cmp
inc
aas
cli
adc
add
cld
insb
pop
xchg
jle
mov
pop
mov
add
jle
ljmp
inc
cmpsb
jle
lods
jle
scas
jle
ljmp
inc
mov
inc
jle
scas
jle
ljmp
dec
in
das
or
aas
sub
and
pop
inc
mov
add
or
aas
sub
and
and
push
aas
or
aas
sub
js,pn
sbb
in
xor
mov
push
push
push
je
das
into
leave
iret
lret
mov
inc
fcmovb
xchg
xchg
cmp
clc
mov
bound
pop
jae
pop
cmp
arpl
and
rclb
sbb
aas
sbb
fbld
ret
cwtl
xor
dec
outsb
scas
dec
xchg
cmpsb
inc
pop
shrb
xchg
into
dec
push
movsb
je
mov
push
or
push
mov
cmp
mov
mov
adc
arpl
lret
out
fcomps
mov
xor
into
lods
xorb
jecxz
pop
ret
add
push
xchg
pop
subb
push
mov
cld
inc
pcmpgtw
arpl
dec
subl
pop
mov
insl
pop
mov
std
inc
inc
test
xchg
cmp
addb
pop
and
pop
or
in
cmp
mov
sub
les
jle
and
push
fs
dec
jge
hlt
push
loope
imul
mov
push
ret
adc
add
iret
jbe
mov
ja
add
cwtl
xchg
push
cmp
or
shl
inc
inc
rcll
cwtl
pop
gs
mov
pop
test
push
jge
add
mov
fcmovbe
inc
and
add
dec
ret
adc
add
add
adc
add
sbb
pop
mov
and
mov
cmp
or
and
lcall
ror
push
xchg
push
sub
dec
ljmp
adc
aad
adc
xchg
insb
pop
imul
inc
insl
pop
mov
movb
fwait
pop
out
pop
leave
mov
aam
imul
xor
into
fwait
dec
and
sub
lahf
cwtl
dec
arpl
fisubl
imul
sbb
push
test
xchg
scas
xor
lock
out
hlt
xor
inc
inc
mov
or
or
jbe
pop
sbb
xchg
sahf
das
add
loopne
mov
xor
push
pop
mov
lahf
lods
pop
dec
sbb
lods
lea
in
je
push
push
add
mov
add
cs
xchg
and
rcll
jmp
insl
pop
mov
or
frstor
mov
lcall
ret
ret
bound
arpl
jb
jno
push
sbb
mov
jo
inc
call
shrl
arpl
arpl
sbb
negb
insl
pusha
sbb
sub
mov
inc
inc
adc
push
js
lods
adc
push
addr16
push
push
pushf
jecxz
cltd
or
dec
in
jg
testl
or
std
icebp
dec
dec
repnz
or
jmp
mov
sbb
pusha
sub
in
mov
je
hlt
inc
loope
cmp
lcall
lock
mov
call
les
in
leave
and
or
jns
push
dec
stos
xchg
jo
pop
xchg
and
fidivl
inc
insb
subl
dec
imul
test
loop
xchg
ret
test
lods
std
bound
outsl
inc
lcall
aas
out
or
out
xor
mov
call
add
movsl
les
push
xor
int3
sbb
sub
add
scas
xchg
and
add
dec
pop
into
sub
jo
mov
xchg
movsl
lods
cmc
pop
fisubs
pop
dec
push
cmp
xorb
xor
popa
xchg
lock
jecxz
test
fnsave
loope
xchg
push
or
pop
xchg
insb
xor
or
or
or
push
popf
mov
cwtl
jecxz
cmp
mov
addr16
pop
inc
jae
inc
jae
pusha
inc
mov
sub
or
and
mov
add
popa
lds
add
inc
mov
fwait
orb
push
dec
add
push
out
or
add
andb
popf
add
dec
cvtdq2ps
pushf
xor
rcll
jno
mov
xor
and
dec
fnsave
bound
test
dec
or
xor
andb
imul
cmpl
sbb
add
dec
jo
xchg
imul
mov
adc
sub
fbld
push
in
and
dec
push
push
and
inc
and
shll
dec
sbb
fwait
mov
rorl
jl
aad
jl
nop
mov
hlt
cli
dec
add
dec
bound
pop
and
and
fwait
adc
mov
rolb
scas
pop
push
sub
pop
jge
push
pop
add
jnp
pusha
sub
idivl
push
jmp
sub
inc
in
cmp
mov
add
test
inc
aas
fdivl
pop
movsl
dec
cmpsb
nop
cmp
xchg
in
pop
mov
int
pop
xchg
fdivl
sbb
lcall
cmp
mov
popa
add
add
xchg
mov
xchg
fdivr
jl
adc
mov
jp
test
dec
pop
push
cmp
and
stc
mov
hlt
jge
adc
negb
add
jg
pop
push
sub
adc
mov
inc
fldl
lcall
pop
xchg
sbb
push
in
mov
rclb
add
xor
inc
subl
shl
cmp
inc
cmp
mov
dec
jmp
repnz
enter
inc
xchg
gs
add
or
dec
sbb
inc
iret
pop
mov
stc
je
fcmovb
out
sbb
out
push
data16
jl
test
jl
les
and
sbb
daa
mov
repnz
mov
inc
sbb
xchg
adc
inc
jmp
push
lahf
fdivrl
xor
mov
sar
in
or
insl
dec
mov
scas
int3
and
pop
decb
int3
arpl
pop
adc
rcll
inc
aas
mov
xlat
ja
lea
mov
mov
sbb
push
test
xchg
notl
add
inc
scas
jb
inc
push
call
jae
movsl
xor
cld
bound
aas
and
lds
je
jo
adc
ds
sub
jp
sub
push
cwtl
mov
aad
fdivrp
fwait
aas
fcompl
push
push
repz
xchg
cmp
push
int3
xchg
in
sarb
iret
fstpt
testl
call
sbb
inc
rolb
or
test
andb
scas
inc
sti
out
aam
into
jg
sbb
hlt
pop
mov
mov
jg
fnstenv
add
fidivs
cli
adc
sub
inc
lret
fdivl
imull
gs
xchg
inc
aas
jbe
jmp
ror
xchg
pop
loope
fwait
and
loope
pushl
jno
and
mov
cld
jb
ror
mov
mov
orl
cmp
popf
test
inc
mov
movsl
mov
je
hlt
xchg
mov
repnz
das
cltd
fistps
push
mov
pop
sbb
push
std
pop
push
int
aam
mov
or
pop
or
or
and
xchg
and
or
inc
push
add
mov
cmp
mov
pop
dec
dec
and
scas
movsl
or
daa
ficompl
loop
in
add
cwtl
jae
jns
cmpsb
enter
aas
push
scas
in
cli
sbb
pop
mov
sbb
divl
ficomps
push
insb
cmp
insb
fisubl
std
dec
jno
xchg
test
das
ljmp
pop
xchg
ja
dec
mov
outsl
in
mov
testl
repz
nop
test
outsb
jo
daa
cmp
fstpl
loopne
adc
xchg
sub
mov
fistl
outsb
out
sti
or
push
lods
or
int3
popf
fisubrl
loope
enter
jns
xchg
lods
mov
cmp
push
in
and
xchg
out
sub
fstpl
movsl
inc
in
ds
insl
rcll
cmpsb
cmp
js
jnp
xchg
cmp
xchg
pushf
cmp
clc
sti
imul
jecxz
pusha
mov
loop
call
xchg
mov
sti
sub
xchg
mov
int
daa
decl
ds
mov
xchg
dec
xlat
repnz
mov
test
xchg
mov
std
lea
fwait
lcall
fmulp
add
les
out
dec
fprem1
sbb
nop
out
fstpt
pop
cli
shr
mov
jae
cmp
sub
mov
dec
push
aaa
cmp
fsubr
mov
imul
sub
je
stc
add
das
dec
push
rorl
xchg
mov
addr16
dec
adc
mov
shll
pop
incl
cltd
ds
jge
cmpsb
outsb
pop
in
test
ret
lods
xchg
fnstsw
out
lret
xlat
pop
je
sub
leave
inc
inc
mov
rorb
mov
mov
fnsave
xor
fistpll
jecxz
pop
bound
fisttpll
into
dec
lods
mov
aam
loop,pt
loop
out
out
js
or
inc
int
jle
xchg
jmp
jp
outsb
mov
pop
ja
or
or
sahf
xlat
sub
cmc
dec
pop
pop
in
pop
or
xchg
or
xchg
fs
int
and
cmpsb
jecxz
outsl
cld
in
aas
jb
sbb
repnz
fs
fisttps
fldt
fwait
aas
mov
icebp
das
out
js
or
jp
mov
lahf
xchg
out
insb
xchg
jge
sub
jne
add
and
pop
mull
adc
ret
dec
dec
lock
test
aas
push
lahf
test
and
sub
lahf
inc
cltd
mov
xlat
fs
out
mov
xchg
das
movsb
mov
adc
cmc
data16
filds
jle
pop
and
mov
out
sub
pop
xor
mov
lret
jnp
sbb
dec
add
push
cmp
outsl
insl
dec
pushf
push
jp
cs
pop
rcrl
mov
out
or
clc
aas
mov
movsl
pop
sbb
cmc
adc
aad
xor
push
mov
jecxz
sbb
xchg
sbb
gs
lret
and
xchg
adc
jg
testl
mov
jno
je
iret
outsb
xchg
cwtl
out
call
jmp
sub
outsb
movsl
xchg
pop
das
into
or
sti
stc
cltd
mov
and
ret
cli
xchg
fsubs
in
inc
cli
outsl
mov
aam
test
test
scas
hlt
jmp
cwtl
je
jmp
sub
push
jle
mov
pop
test
loop
xchg
mov
je
and
jnp
scas
mov
fstl
pop
sbb
cmc
xchg
jg
in
repz
jg
out
or
in
pop
jne
cmpsl
int
das
dec
test
loopne
mov
xchg
ja
hlt
outsl
lret
lods
mov
stos
xchg
and
in
inc
int
scas
jle
loopne
dec
sbb
pop
inc
adc
dec
cmpsl
push
adc
mov
push
xor
fdivl
adcl
lods
jno
orb
push
sub
mov
sarb
out
and
test
ds
faddp
mov
xchg
adc
scas
add
sub
imul
inc
gs
mov
lcall
add
add
cmpsb
cs
adc
and
cmpsl
mov
xor
xchg
out
shr
adc
int3
ljmp
or
gs
mov
cmp
jecxz
arpl
idivl
ja
dec
jo
sti
mov
push
pop
cmovg
dec
xchg
and
inc
sbb
cmp
sub
adc
ret
push
adc
mov
jg
cmp
cmp
inc
ljmp
ret
sub
push
adc
sti
mov
and
shrb
mov
ljmp
mov
push
daa
sub
mov
vpunpckhbw
push
sbb
sar
popf
icebp
pusha
and
xchg
push
mov
out
paddusb
adc
or
cmp
jo
popf
inc
mov
mov
jl
stos
cltd
aaa
fisubrl
arpl
push
mov
rol
bound
mov
into
cmp
in
pop
mov
pop
fwait
jmp
jbe
push
inc
add
cmpsl
imul
xchg
jle
outsb
jecxz
test
xchg
sub
test
ds
inc
jmp
stc
mov
into
leave
loop
in
cmpsl
sub
xchg
loope
lods
lea
mov
mov
in
mov
lock
out
movsl
int3
fisubrl
lods
repz
jecxz
push
jb
test
mov
popa
loop
mov
testl
movsl
xor
mov
push
sbb
loop
and
movsl
sbb
pushf
cld
jg
inc
pop
pop
xchg
jg
mov
ja
rcrb
push
and
rcl
lods
pushl
clc
into
in
jae
dec
jge
rorb
xchg
arpl
jl
inc
rcll
div
cmc
stc
enter
lea
pop
cld
cli
mov
mov
enter
mov
cmp
iret
or
mov
mov
test
ljmp
imul
mov
js
push
mov
test
popf
mov
fstl
mov
clc
xlat
repnz
out
fmuls
lcall
das
es
mov
ss
xchg
int
rcrl
lds
fnstenv
aaa
push
mov
shll
mov
es
xchg
int
push
int
js
cmp
push
in
mov
push
test
push
lods
pop
test
gs
ss
xor
mov
lods
push
lret
imul
fwait
bound
mov
pop
aam
loop
push
test
sub
loopne
mov
movsl
and
push
or
xor
insl
inc
sub
inc
inc
jbe
test
je
xor
cmpsb
insb
shlb
lods
sbb
fldenv
dec
or
sbb
shlb
test
lahf
pop
lcall
mov
test
adc
pop
fsubrl
cmp
shlb
aad
and
jp
mov
fwait
ret
ljmp
sub
ljmp
arpl
sbb
out
dec
mov
mov
add
cmp
pop
dec
outsb
mov
mov
aam
xor
insl
or
sub
lea
push
push
push
sub
movsl
fs
fwait
or
xor
adc
pop
movsl
dec
fwait
movsb
aad
jae
xorl
ret
les
mov
popa
lock
cmc
sub
sbb
and
add
cmp
cli
mov
sub
into
pop
and
call
mov
mov
int3
xor
jmp
mov
pop
pop
mov
rorl
lahf
lock
mov
and
pop
mov
shlb
orl
mov
mov
mov
mov
sti
xor
xor
sbb
and
xchg
mov
dec
inc
test
fstp
sahf
jae
jne
cs
jmp
or
pop
adc
and
push
mov
jl
lcall
dec
xchg
adc
mov
jp
and
and
popf
xchg
or
adc
mov
jae
jb
pop
mov
mov
mov
jae
and
and
inc
adcl
and
mov
adc
movsb
xchg
shl
out
sub
or
jo
cs
dec
dec
lods
cmp
mov
inc
loopne
xor
sub
mov
popa
hlt
dec
ret
adc
and
js
push
adc
call
das
test
dec
dec
in
sbb
movsb
and
push
push
sbb
orb
dec
popa
inc
push
adc
and
mov
sbb
sbbb
pushf
mov
fs
push
popa
adcb
and
stos
inc
pop
xchg
sbb
xchg
mov
inc
shll
int
xor
cmp
scas
dec
in
rcll
or
jno
xchg
add
pop
mov
lret
xor
inc
lret
pop
jp
and
mov
das
push
stc
xchg
mov
out
and
and
jae
mov
data16
mov
aam
sub
adc
adc
inc
aaa
testl
cmpb
pushf
cltd
daa
mov
mov
push
jns
xor
and
xor
pushf
cmpsl
mov
lret
cmpsl
mov
sub
xchg
cmpsl
cmpsl
mov
dec
xchg
sahf
cmpsl
mov
lret
daa
mov
and
xchg
daa
sbb
jns
mov
or
xchg
adc
inc
sub
and
in
mov
lahf
inc
dec
jg
sbb
add
push
mov
mov
jb
ss
mov
dec
andl
test
or
aam
adc
xor
or
pop
and
fmuls
fwait
push
rorl
or
add
call
rcll
lods
xlat
push
pop
dec
xor
dec
fbld
flds
and
cmpsb
loop
mov
jb
mov
fwait
leave
fwait
outsb
fwait
push
aaa
insl
mov
mov
mov
vpmacssdqh
std
aas
loop
xchg
movsl
mov
aaa
lahf
xor
movsb
icebp
js
fwait
dec
sbb
imul
movsb
sarb
jecxz
sbb
imul
xor
aas
sar
xchg
dec
jecxz
sbb
icebp
mov
cwtl
dec
mov
fiadds
dec
loop
mov
aaa
push
mov
loope
sbb
jp
lods
aaa
push
lods
aaa
fldcw
jp
xor
mov
mov
outsb
pop
aas
ret
mov
mov
cmc
mov
aas
xchg
fcomps
arpl
out
fstps
pusha
sti
test
push
lds
js
pop
xchg
lds
pushf
xor
cmpsb
pop
inc
xor
mov
shll
xchg
les
mov
ss
jmp
dec
pop
and
mov
lods
and
push
ljmp
cmp
pop
add
lahf
sub
rol
movsl
mov
hlt
test
xchg
cmpsb
pop
cld
adc
fcoml
inc
mov
scas
pop
xor
scas
add
push
adc
ret
or
sub
xchg
xchg
mov
lds
or
xchg
fmull
mov
test
and
inc
aad
sub
cmp
out
dec
xchg
movsb
pushf
mov
mov
dec
xor
rolb
dec
adc
dec
sahf
outsb
nop
sbb
push
outsb
test
adc
mov
mov
xor
mov
not
mov
popa
sub
fidivl
pop
stos
and
out
xchg
inc
jne
or
nop
mov
loopne
and
imul
mov
mov
sub
push
mov
loope
fidivrl
cmpsl
push
mov
shll
sbb
pop
and
xchg
mov
or
xorb
add
or
jmp
jle
ss
sub
pop
dec
push
ret
pop
lcall
xchg
add
pop
pop
lea
inc
adc
or
cmc
aas
in
add
pop
test
out
pop
stos
adc
insl
push
push
outsb
idivb
mov
push
xchg
cmp
lcall
pop
mov
mov
mov
or
cmp
or
scas
test
pop
add
aam
adc
mov
xor
adc
arpl
icebp
mov
jmp
pop
mov
orb
stos
or
inc
in
cmpsl
shrb
fsubl
data16
ja
push
pop
sbb
inc
push
add
adc
lods
mov
push
and
cs
arpl
pop
loopne
xchg
imul
jp
jle
aad
je
xchg
popf
adc
and
xchg
ret
jmp
sub
add
and
ret
xchg
push
pusha
cmp
pop
mov
pop
out
lods
mov
lret
pop
pusha
insb
xchg
add
or
and
test
or
icebp
add
enter
mov
inc
test
cmp
inc
fwait
cmp
push
fisubrl
pusha
pop
in
mov
adc
inc
mov
lcall
push
fwait
push
jb
gs
ljmp
push
aam
mov
sub
rcrl
movsb
xor
push
adc
enter
add
add
lcall
mov
xchg
sbb
arpl
stc
xor
gs
lret
push
lock
sbb
mov
push
inc
fdivs
xor
loope
loop
inc
pop
pop
or
jecxz
mov
dec
or
fcoms
leave
lods
pop
inc
icebp
or
lret
ret
mov
pop
sub
push
sbb
sti
test
lods
es
sub
xor
mov
je
shll
in
cmc
addb
movsl
push
inc
jge
aam
dec
lahf
in
jmp
data16
add
add
xchg
inc
xorl
inc
push
add
ds
dec
mov
add
xchg
js
arpl
testl
mov
lods
movsl
xor
add
aad
sub
dec
mov
stc
push
xchg
shrb
add
sbb
andb
dec
in
dec
jne
sbb
outsb
xor
adc
xor
dec
sub
cmpb
or
aaa
popf
xchg
fstsw
push
sbb
adc
mov
mov
mov
cli
cmp
add
mov
mov
sbb
push
mull
or
lahf
pusha
cli
aam
lds
add
adc
dec
mov
xchg
xlat
add
ss
inc
jae
sub
into
test
cmpsb
jb
sbb
sbb
xor
add
roll
jge
mov
mul
mov
fbstp
repz
call
jnp
lods
out
or
sub
inc
jb
mull
cmp
stos
or
jnp
push
inc
cmp
or
jno
movsb
sbb
sub
fwait
and
lods
pop
jecxz
xor
pusha
ret
cmp
mov
shll
push
pop
movsl
sub
mov
or
roll
aad
add
add
jge
xorl
popa
push
jae
stc
add
movsb
sti
enter
lock
enter
enter
gs
push
cmpsb
inc
inc
mov
in
or
cmpsl
xor
roll
lcall
movsl
fldenv
fsts
aad
inc
std
pop
int3
add
jmp
fcoms
or
bound
jp
pop
xchg
inc
pusha
mov
mov
push
movsl
aad
addr16
inc
lahf
movb
leave
aam
pop
cmp
mov
mov
lcall
xchg
daa
popf
out
sub
ljmp
inc
ret
sub
cli
mov
xchg
mov
mov
stos
lret
adc
dec
xor
xor
xor
dec
fwait
push
movsl
out
wrmsr
sahf
test
dec
ds
addb
jb
mov
lcall
sub
dec
xor
xchg
inc
push
xchg
sarl
mov
std
and
into
pop
mov
inc
mov
dec
stos
inc
clc
notl
sub
xlat
sub
ljmp
insl
or
aad
mov
out
in
push
mov
test
cmp
int
mov
push
inc
push
lea
loope
inc
loope
push
fdivr
mov
adc
lahf
aam
stc
movl
sub
pop
mov
sbb
cltd
mov
mov
repz
dec
add
js
pop
push
xchg
cmp
mov
or
push
add
fwait
jne
xchg
int
lods
out
jo
adc
mov
int
mov
sub
jnp
adc
dec
xor
jg
push
cwtl
es
les
cmp
jb
rolb
cltd
fdivrs
out
dec
ficomps
scas
aaa
pop
dec
jg
cltd
and
add
adcb
js
cltd
mov
fadds
jle
xor
cmp
xchg
loopne
xchg
iret
stos
ja
push
adc
push
ret
xor
repnz
pusha
cld
std
dec
add
mov
ljmp
lcall
insb
ret
sarb
cmpsb
ficoml
lds
cltd
sub
lcall
out
jge
orl
sbb
in
imul
cltd
lret
mov
stos
mov
cmp
jo,pt
mov
insb
ror
lcall
sbb
mov
iret
inc
mov
in
push
mov
sub
sarb
xor
and
mov
add
push
scas
nop
mov
sub
and
lret
mov
lods
mov
cmp
andb
mov
inc
insl
push
fisubrs
gs
mov
pop
add
ss
pop
mov
jp
repz
push
outsb
popa
sbb
inc
dec
add
mov
mov
fistl
stos
mov
insb
xchg
dec
lods
je
push
mov
inc
jne
sbb
jns
xchg
mov
pusha
rcll
add
xor
fnstcw
ffree
and
mov
xorb
fildl
gs
push
cmp
lcall
jb
faddp
push
stos
lcall
dec
in
add
outsl
jecxz
arpl
repz
stos
enter
dec
jge
daa
fldcw
loopne
adc
pop
pop
jno
jno
xchg
cmp
pop
adc
xor
pop
mov
movsb
pusha
sbb
jp
mov
cmp
jns
imul
sbb
mov
xor
andb
inc
lcall
push
aad
and
or
insb
test
adc
pop
les
dec
add
test
push
aas
jle
fcmovne
imul
or
xchg
xorb
cmp
scas
fisubl
jo
push
dec
inc
xorb
pop
xchg
sub
sub
data16
test
nop
or
adc
dec
cmc
lock
jbe
test
sub
xor
fcom
mov
jne
shlb
je
out
into
sub
add
adc
inc
push
xchg
or
or
and
gs
push
clc
pop
jo
popa
and
adc
out
jne
pop
push
inc
lods
mov
push
lods
adc
out
dec
int
mov
push
stos
addl
xchg
inc
fwait
sub
mov
adc
dec
shll
sbbb
int3
xor
outsb
push
sbbl
sub
push
mov
mov
inc
fcomps
les
setb
mov
push
loop
and
int
popa
stos
push
jb
mov
dec
and
add
bound
sub
leave
mov
stos
in
popf
push
pop
adc
test
adc
pop
nop
dec
andb
ss
or
das
mov
xchg
js
pop
adc
rolb
orl
fnstcw
fcompl
mov
mov
fmuls
sbb
sub
or
add
cmp
add
test
dec
adc
sbb
shl
ss
js
sub
cmp
sbb
sbb
cmpsl
mov
jmp
add
mov
sub
mov
push
xchg
insb
movsl
xor
dec
mov
aas
push
into
pop
movsl
mov
js
cmp
pop
mov
add
xor
mov
jp
jl
mov
add
mov
dec
es
or
xchg
in
or
add
pusha
xor
push
xchg
or
cli
xchg
popf
mov
cmp
icebp
addr16
and
orb
xchg
dec
or
lret
cmpsb
push
and
cld
popf
xchg
addr16
xor
push
loope
jl
jmp
int3
sub
lret
pop
sbb
push
push
pop
xor
pop
lret
xchg
and
imulb
and
out
test
and
aas
cld
loope
and
xor
test
mov
mov
lret
lods
inc
pop
ret
test
add
mov
aam
lods
add
mov
xor
sbb
inc
xor
cmp
mov
fidivs
insl
aad
inc
or
dec
xchg
lret
lcall
stc
repnz
mov
cwtl
out
xchg
ss
or
inc
push
adc
pusha
sahf
adc
xchg
inc
outsb
popa
add
inc
push
clc
loop
sub
mov
xchg
xchg
rorl
lock
adcb
repnz
pop
xchg
pusha
sbb
add
sub
and
jno
scas
jno
movsl
push
mov
push
outsl
pusha
loopne
or
ds
lods
fidivl
jns
arpl
inc
add
xor
jne
rcll
xorl
add
pop
test
sub
jns
sbb
sbbl
dec
jge
jnp
sub
cs
lds
sub
lods
or
scas
pop
mov
sub
je
jge
mov
jno
gs
fs
and
mov
les
aaa
sub
push
ja
nop
pop
sbb
xchg
adc
pop
jbe
std
push
sub
adc
xchg
nop
mov
rorl
cs
xchg
popa
xor
mov
shlb
mov
or
arpl
movsb
push
push
imul
push
outsb
ret
add
sbb
dec
mov
shll
dec
arpl
sbb
bound
mov
xchg
sub
sub
pop
and
insl
shrl
xor
inc
data16
and
sub
push
bound
fdivr
ret
or
mov
add
pop
xorb
insl
ja
iret
mov
enter
sub
gs
xchg
shlb
xor
sub
cmp
stos
test
dec
lahf
xor
adcb
xor
push
loopne
mov
mov
push
mov
lcall
std
dec
das
xchg
mov
sub
xchg
loop
xlat
rolb
dec
jecxz
push
mov
movsb
shlb
jo
lea
jne
repz
out
add
xchg
dec
dec
xchg
stos
out
xor
xchg
and
out
sbbb
add
pop
movsl
dec
add
sub
xlat
jmp
mov
lret
sarl
cmc
push
out
push
repz
sbb
out
xor
jecxz
popa
adc
and
inc
js
sbb
mov
mov
bound
bound
bound
lret
inc
pop
cs
ss
xor
test
cs
scas
shl
add
cmp
mov
adc
lds
adc
dec
shrl
leave
imul
lea
cmp
ret
add
dec
push
inc
cmp
pop
popa
fwait
mov
and
pop
cmpsl
scas
bound
sub
xchg
addr16
xor
lret
fwait
dec
popf
mov
outsl
fidivs
es
push
arpl
pop
mov
mov
dec
aam
icebp
repnz
rorl
ret
fiaddl
xchg
add
adcb
pop
push
push
adc
push
ret
icebp
xchg
sbb
jno
cmp
push
clc
adc
push
sbb
test
in
jecxz
or
rcr
fcompl
nop
or
xlat
cmp
les
das
shl
dec
arpl
mov
inc
dec
ret
dec
in
fldenv
mov
mov
sbb
leave
pushf
out
mov
test
scas
sti
aam
imul
jae
mov
dec
mov
mov
dec
mov
int3
and
inc
arpl
out
adc
or
inc
mov
pop
cmp
stc
fstl
cmp
cmp
lds
mov
scas
sbb
fiaddl
jle
sbb
and
jmp
xchg
mov
mov
roll
out
leave
mov
xor
sub
lods
cmp
repz
test
inc
sub
fcomp
cs
sbb
or
inc
mov
lret
outsb
mov
lds
sub
repnz
push
dec
lret
pop
sahf
ja
xchg
push
sbb
stc
sbb
dec
pop
test
jl
push
lods
sbb
lock
mov
loop
cmp
mov
adc
loop
lret
push
mov
pop
add
sub
sbb
rorb
stc
pop
adc
xchg
dec
cli
test
sub
lret
or
sub
das
sbb
dec
icebp
popa
scas
xchg
int
popa
into
inc
xchg
or
pop
into
mov
es
sub
inc
out
in
subl
flds
lods
popa
sub
jb
pop
push
inc
addr16
stos
inc
push
pushf
xor
addl
xlat
ret
jl
rcll
inc
clc
jle
lea
push
or
imul
xlat
in
subb
adc
add
rorb
mov
cmp
pop
fisttpll
push
in
out
popa
sbbl
insl
jle
cltd
jmp
pop
lods
jns
push
leave
ficompl
addr16
lods
sahf
push
mov
add
or
inc
scas
push
test
in
loop
hlt
ret
aas
or
or
testb
sub
cmp
ret
les
xor
insb
arpl
repnz
stc
repnz
adc
icebp
scas
pusha
shrb
into
call
loop
cmp
mov
outsl
sbb
mov
dec
pop
mov
out
out
push
jne
lds
cmp
sub
and
imul
xchg
xchg
aaa
movsb
loope
sbb
cmp
and
push
xchg
mov
sub
mov
es
stc
lds
je
mov
mov
fsts
mov
xchg
sub
fisubs
xlat
push
dec
leave
gs
inc
xor
xchg
jb
fiadds
dec
mov
ret
out
or
mov
push
lock
fldcw
out
imul
icebp
mov
pop
rcr
sbb
jecxz
inc
add
xchg
sbb
xor
dec
js
inc
ret
cltd
push
cmp
sbb
cmp
mov
adc
out
xchg
sub
aaa
jns
int
sub
pusha
movsb
mov
jmp
stos
pop
adc
test
cmpsb
lahf
push
jo
xchg
push
lret
stos
push
movsl
push
popf
bound
clc
stos
jo
xchg
dec
or
hlt
jno
stos
lret
jns
pop
jne
ret
mov
movsb
sub
pmaddwd
stc
popf
jns
xor
xchg
sub
sbb
jns
fs
test
test
frstor
ds
jb
inc
cltd
xor
movsb
xchg
sbb
nop
in
push
jno
pop
and
iret
test
test
int3
inc
mov
pop
push
mov
gs
scas
xor
or
inc
out
in
cs
negb
lods
cmp
imul
inc
mov
adc
or
scas
mov
or
repz
cld
jecxz
int3
pop
xor
xlat
out
xchg
jno
lret
and
std
sbb
push
iret
fs
mov
pusha
jecxz
mov
sti
enter
mov
cli
adc
xchg
shlb
mov
aas
and
push
or
mov
adc
cli
push
mov
mov
ljmp
push
pop
popf
clc
int3
test
enter
aaa
incb
fsubrl
xor
or
sbb
push
inc
sbb
adc
push
pop
lahf
push
test
xchg
cltd
mov
pop
dec
jmp
mov
movsl
pop
movsb
cltd
mov
mov
dec
popa
xor
data16
push
in
fsubl
rcl
mov
test
xchg
jge
mov
mov
ss
pop
lea
dec
add
inc
xor
inc
lcall
imul
jb
movsl
cwtl
pop
les
sub
cwtl
xor
enter
jecxz
pop
and
lret
xchg
pop
aam
fimull
mov
arpl
add
push
or
mov
pushf
cmp
aad
test
test
adc
and
sub
mov
pop
sub
fstpl
or
rclb
popa
and
stos
fcmovnbe
pop
sbb
xor
call
test
and
scas
xchg
pop
ljmp
xor
push
out
mov
lds
ss
dec
mov
mov
fnstsw
test
mov
mov
pop
xor
lea
inc
sbb
adc
leave
pop
mov
out
jmp
shlb
gs
outsl
adc
enter
mov
jae
sub
jecxz
es
push
cmp
ja
push
xchg
int
xchg
jge
jae
inc
jne
out
pop
repnz
sbb
lahf
sub
ja
data16
jo
bound
xchg
sarb
sbb
push
add
cmp
sub
push
jnp
lods
lret
cmp
adc
jnp
or
mov
xchg
lea
stos
push
sbb
stos
mov
xlat
sbb
cmpsl
xlat
mov
sub
ljmp
les
inc
stos
js
add
mov
adc
mov
push
mov
test
cmp
push
pop
sbb
push
jp
stos
sbb
pop
lods
popl
mov
pop
scas
lods
push
mov
sbb
xlat
sub
sbb
xor
mov
pusha
xorl
clc
test
and
inc
mov
ljmp
push
cmp
movsl
mov
cmp
pop
in
cmpsl
mov
mov
mov
mov
sbb
ret
sub
add
mov
push
sti
sti
xchg
pop
dec
push
mov
loopne
xchg
mov
lods
or
adc
scas
test
cs
int
xor
mov
mov
jge,pn
xchg
rcll
fs
bound
adc
add
fsubl
pop
add
ja
in
mov
es
or
inc
adc
lret
push
add
or
mov
inc
insl
xchg
sub
aaa
cmp
fisubrl
loopne
int
sub
cmp
das
cmp
aam
mov
or
mov
lods
icebp
cmp
pop
divl
sbb
icebp
ja
mov
outsl
call
jg
sti
mov
mov
fmull
pop
mov
jnp
and
mov
mov
adc
lahf
push
or
in
pop
push
sub
mov
xchg
shll
int
pop
jmp
mov
clc
jne
push
add
xor
mov
pop
scas
lcall
adc
test
add
push
ficompl
jne
sub
sahf
subl
jbe
sub
jne
lods
adc
bound
dec
push
and
stos
lret
mov
cmpsl
pop
inc
xchg
pop
add
imul
push
aam
adc
sbb
add
mov
sub
mov
and
test
test
inc
jmp
arpl
mov
arpl
jmp
jbe
scas
lods
inc
mov
lods
dec
add
xor
mov
dec
pushf
add
cmpsb
popf
dec
or
aaa
popf
xor
inc
lds
inc
aad
in
sub
pop
mov
push
push
insb
lret
and
scas
mov
xor
adc
enter
jae
xchg
daa
je
adc
sahf
push
pop
pop
loopne
sub
rorb
add
rcll
sub
dec
mov
sub
sbb
ds
mov
repz
mov
and
sub
mov
push
inc
push
push
rcl
jl
sub
dec
loop
jae
pop
mov
add
adc
and
test
push
pop
sub
add
jmp
xorl
pop
repz
adc
mov
test
andl
icebp
pushf
stc
add
jp
inc
outsb
jbe
les
mov
lret
and
icebp
and
test
push
mov
sub
aaa
mov
cmp
add
jmp
inc
lret
outsl
jmp
or
fwait
mov
lcall
pop
mov
xor
mov
shr
mov
das
xchg
cs
xor
pop
adc
mov
jne
push
lahf
sbb
mov
sub
push
pop
pop
cs
jp
add
stc
xchg
or
pop
dec
push
adc
cwtl
stos
mov
mov
mov
mov
es
addr16
fldcw
das
call
push
xor
pop
inc
leave
jne
pop
jno
inc
mov
pop
xor
gs
adc
mov
or
xchg
fstps
sahf
xchg
add
or
daa
push
inc
movsl
not
dec
or
sbb
sbb
or
shrl
dec
je
rolb
pop
lds
mov
inc
inc
pop
pop
loope
cmpsb
mov
in
push
dec
push
rol
adc
arpl
test
imul
push
push
aam
mov
add
xchg
insl
lret
insl
sub
jecxz
loop
test
mov
sarb
shll
in
pop
push
sub
pusha
ret
xchg
sti
iret
test
jle
andb
sub
lret
repz
outsb
das
in
stc
sub
sub
mov
adc
stos
js
dec
jg
ror
sbb
jne
sbb
test
xor
jb
ljmp
mov
ja
xor
or
inc
je
mov
xchg
adc
int3
lcall
push
xchg
int3
lods
adc
mov
or
rorb
xchg
pop
ret
add
popa
push
mov
xchg
jp
adc
cltd
stos
adc
mov
add
lahf
xchg
xlat
mov
cli
mov
adc
cmp
push
sub
mov
scas
mov
and
es
stos
pop
add
push
aad
insb
lret
lret
or
add
xor
and
sahf
mov
call
arpl
push
push
or
mov
repnz
bound
push
pop
sbb
add
ja
push
mov
push
cmp
xchg
sti
pop
push
loopne
xor
cmp
aam
imul
jno
push
pop
jno
repz
xchg
add
shll
xchg
xchg
mov
fdiv
push
xor
lret
cmp
mov
ror
and
das
pop
rcr
in
xchg
rorb
repnz
sub
data16
loop,pn
mov
pop
fs
mov
push
xor
xor
dec
loop
enter
rcll
aam
scas
daa
xor
jge
cmp
push
add
jne
leave
enter
mov
or
ljmp
xchg
mov
cmp
loop
stos
sub
stos
enter
push
xchg
inc
jne
loope
mov
mov
dec
cmp
dec
sub
lods
mov
xor
lods
or
or
rolb
xor
mov
mov
xchg
stos
push
push
aaa
or
add
cmc
js
jge
loopne
mov
lods
push
notb
jo
test
mov
dec
inc
add
outsl
lods
xchg
xor
out
or
dec
js
inc
xor
push
jno
add
inc
sbb
bswap
pop
subb
movsb
sub
push
lea
fsubrl
add
cmp
pusha
outsb
fmulp
ds
lock
orl
loopne
imul
dec
and
push
mov
add
and
inc
daa
jg
adc
jne
xor
sbbl
stc
scas
mov
iret
fmuls
adc
mov
aas
add
mov
adc
push
sub
test
mov
dec
je
loop
xchg
dec
mov
adc
test
cmp
pusha
or
add
mov
or
and
call
loopne
les
js
inc
pop
bound
dec
test
add
pusha
inc
add
or
sub
inc
mov
adc
xchg
call
das
mov
mov
adc
push
shrl
or
out
or
xchg
add
nop
or
test
sub
jne
cmpsb
add
dec
xor
dec
xchg
mov
adc
roll
in
adc
nop
dec
shlb
or
xchg
add
push
mov
lods
add
and
test
les
sub
dec
mov
sub
xor
pop
inc
mov
adc
mov
and
mov
xchg
and
sbb
push
loop
adc
lods
dec
push
and
cwtl
mov
adc
in
inc
and
ret
js
mov
adc
add
add
xor
push
and
adcb
test
mov
sub
push
mov
add
xchg
dec
adc
bound
loop
and
das
roll
loop
jae
push
sub
les
rclb
xchg
loopne
inc
push
loop
adc
test
sub
push
adcb
mov
xchg
rorb
pop
ret
jo
mov
adc
dec
dec
test
sub
pop
mov
sub
mov
add
inc
xchg
adc
dec
and
pop
push
enter
mov
adc
xchg
nop
dec
les
sub
dec
mov
or
push
mov
sub
xchg
mov
adc
icebp
dec
add
xchg
loopne
test
das
adc
mov
sub
xchg
pop
mov
pop
loop
adc
enter
mov
test
push
and
inc
dec
sub
sub
movsl
mov
add
inc
in
je
push
sub
les
ret
xchg
call
sub
cmp
pusha
dec
test
sub
or
add
mov
pop
and
dec
dec
lods
pop
mov
mov
pusha
and
mov
add
inc
sub
dec
or
sub
xchg
sub
enter
mov
adc
orb
subb
andb
dec
add
inc
sub
push
mov
sub
push
add
adc
and
enter
subb
insl
mov
adc
cmp
push
inc
sub
pop
mov
sub
xchg
cwtl
movsb
add
ret
inc
mov
and
add
and
nop
dec
test
sub
dec
test
mov
loop
mov
push
and
push
dec
xor
sub
dec
lock
enter
mov
xor
and
or
adc
cwtl
dec
push
push
ret
inc
or
mov
dec
mov
adc
orb
subb
pop
and
clc
dec
test
sub
add
pusha
or
pop
dec
xor
loop
xchg
xchg
or
dec
adc
pop
add
adc
mov
sub
xchg
pusha
mov
pop
loop
cmp
test
aaa
add
fs
mov
les
sub
dec
mov
sub
xchg
sub
sbbb
repnz
test
fcompl
and
mov
cwtl
and
and
push
add
pop
or
sub
xchg
mov
nop
adc
sbb
and
add
mov
cs
xchg
mov
adc
sbb
push
mov
lods
les
stos
adc
xchg
orb
bound
adc
mov
orb
or
jbe
js
enter
shll
add
and
call
sub
push
mov
sub
push
loop
adc
and
enter
subb
outsb
or
adc
cmp
pop
bound
pop
mov
sub
xchg
mov
les
nop
adc
sbb
and
jp
ds
fsubs
mov
adc
mov
xchg
and
sbb
adc
nop
dec
push
and
mov
inc
in
cmpsl
dec
add
pop
mov
mov
sub
inc
pop
adc
clc
dec
test
or
adc
dec
cmp
and
mov
mov
adc
and
adcl
mov
lods
and
or
adc
mov
sub
mov
adc
xchg
sub
jle
and
adc
dec
fsubl
or
adc
and
push
loop
and
lods
add
and
orb
subb
inc
mov
fmuls
and
cs
xchg
or
adc
push
dec
mov
ret
pop
or
adc
mov
sub
dec
or
mov
adc
rorb
subb
insl
mov
adc
cmp
pop
inc
sub
pop
or
sub
mov
add
inc
xchg
adc
dec
and
pop
mov
pop
js
mov
adc
xchg
nop
dec
add
ret
push
and
adc
adc
nop
dec
push
and
or
adc
adc
roll
das
adc
dec
shlb
mov
pop
inc
les
fs
dec
andb
stos
les
mov
dec
cmp
sub
inc
hlt
icebp
dec
cs
xchg
fdivrs
adc
push
dec
mov
ret
xchg
or
adc
enter
mov
test
sub
lcall
push
subb
xor
mov
mov
mov
adc
inc
dec
test
subb
mov
adc
mov
add
inc
sub
dec
or
and
xchg
sub
jle
and
test
fcompl
xor
mov
cwtl
and
and
push
add
pop
or
sub
xchg
mov
mov
dec
mov
dec
adc
out
adc
mov
icebp
xchg
mov
pop
mov
mov
test
clc
stos
add
inc
movsb
adc
dec
inc
and
or
adc
and
mov
sub
les
enter
add
and
or
adc
dec
cmp
sub
inc
out
icebp
dec
mov
adc
orb
subb
pop
and
add
push
inc
sub
push
mov
adc
push
and
adc
mov
rorb
and
adcl
xchg
inc
dec
test
bound
pop
mov
adc
mov
test
sub
dec
or
and
xchg
and
hlt
adc
dec
fcompl
xor
mov
cwtl
and
and
push
loop
adc
lods
dec
push
and
mov
and
adc
push
mov
cld
push
inc
inc
and
rorb
bound
push
insl
mov
adc
cmp
push
inc
sub
pop
mov
sub
xchg
test
inc
push
add
dec
adc
das
adc
or
mov
push
sub
dec
je
mov
test
adc
pop
dec
xor
loop
xchg
xchg
mov
adc
and
enter
mov
mov
sub
xchg
inc
scas
add
inc
mov
pop
or
sub
or
adc
sub
jle
and
adc
dec
loopne
hlt
and
add
adc
adc
and
or
adc
mov
push
mov
movsb
les
and
stc
dec
das
mov
call
push
xchg
jb
test
add
adc
and
and
or
adc
nop
dec
push
push
ret
dec
or
adc
add
cmp
xor
and
and
push
add
pop
mov
adc
xchg
mov
push
subb
inc
or
pop
mov
ljmp
pop
mov
mov
mov
or
push
subb
push
or
rcll
test
inc
mov
bound
xchg
jne
mov
adc
xchg
jo
les
sub
dec
js
shrb
xchg
loopne
test
sahf
adc
pop
dec
xor
loop
xchg
xchg
mov
adc
and
mov
mov
sub
xchg
pusha
mov
pop
loop
adc
rorb
and
or
adc
push
dec
xor
sub
inc
jecxz
dec
das
mov
pop
add
adc
push
dec
mov
mov
mov
pop
and
enter
bound
popa
dec
mov
adc
xor
pop
inc
sub
adc
cwtl
dec
aam
loop
adc
and
add
push
subb
push
mov
adc
xchg
jo
les
sub
inc
or
pop
inc
jmp
add
and
or
adc
dec
mov
push
mov
loope
orb
subb
inc
or
pop
mov
call
dec
enter
loope
or
rcll
bound
xchg
or
dec
inc
and
sub
xchg
jo
les
and
inc
mov
mov
mov
and
js
add
bound
dec
andb
stos
add
inc
mov
dec
xor
loop
xchg
xchg
mov
adc
and
mov
adc
dec
mov
xchg
xor
adc
dec
pusha
and
mov
adc
sbb
jne
das
adc
pop
mov
mov
sub
inc
pop
adc
lock
test
or
adc
pusha
dec
cmp
add
mov
adc
adc
and
enter
adc
insl
or
dec
movsb
and
or
adc
dec
pop
push
add
xor
cmpsb
test
and
sbb
insl
out
mov
adc
orb
subb
pop
and
lock
test
sub
push
or
adc
push
add
adc
mov
enter
mov
mov
adc
inc
dec
lods
pop
bound
pop
mov
adc
xchg
test
test
sub
dec
or
mov
ds
popf
and
mov
sub
add
and
and
push
ret
push
or
xchg
xchg
pusha
mov
adc
xchg
das
ror
ljmp
pop
mov
mov
mov
adc
push
or
sub
xchg
or
adc
xchg
das
adc
dec
mov
xchg
pop
scas
test
mov
dec
jo
mov
test
push
and
pop
dec
cmp
sub
or
stc
dec
das
mov
pop
and
adc
cmp
and
or
adc
mov
sub
inc
or
adc
mov
test
stos
out
jbe
pusha
dec
mov
xchg
or
adc
add
push
subb
mov
and
add
add
and
jo
mov
push
and
adc
dec
add
test
mov
adc
cwtl
dec
rolb
popa
lahf
add
add
inc
inc
add
subb
mov
adc
dec
push
or
lahf
test
xor
cmpsb
adc
jbe
push
sub
sub
add
mov
add
xchg
dec
adc
dec
add
xchg
inc
sar
add
mov
or
adc
push
sub
les
adc
push
and
adc
stos
dec
xor
mov
mov
adc
and
cld
and
pop
mov
mov
adc
pop
mov
mov
je
mov
test
push
loop
adc
pop
dec
xor
mov
mov
or
inc
addb
test
ficoms
jb
dec
dec
mov
jae
nop
sbb
xchg
inc
mov
pop
bound
dec
je
push
and
lods
in
mov
add
push
inc
cmpsb
les
nop
adc
and
and
jl
cmp
and
adc
xchg
xchg
mov
pusha
popl
dec
enter
loope
xorb
or
dec
mov
or
push
xchg
orb
subb
inc
or
mov
dec
mov
adc
nop
dec
shlb
or
adc
adc
push
ret
pop
or
adc
xchg
nop
dec
jmp
add
rorb
mov
or
push
les
mov
mov
pusha
add
jge
cmp
and
mov
add
inc
aad
addb
mov
add
pop
adc
dec
js
ret
xchg
fdivs
cmp
push
push
add
add
xchg
mov
and
dec
adc
adc
add
out
inc
cmp
xor
dec
jl
sub
hlt
popf
xchg
or
adc
adcb
shlb
add
push
cwtl
dec
ret
subb
pop
inc
sub
rclb
sub
pop
or
adc
rorb
inc
sub
dec
or
sub
dec
mov
and
cld
movsl
xchg
loopne
clc
pop
and
mov
and
and
adc
dec
movsb
and
inc
mov
pop
mov
loopne
js
add
mov
push
and
js
inc
push
mov
movsl
add
and
and
pop
and
mov
adc
mov
loopne
bound
inc
xchg
mov
adc
push
dec
lods
pop
add
test
xchg
clc
dec
inc
push
bound
adc
lods
dec
push
and
nop
cmpsb
test
xchg
adc
xor
and
movsl
mov
mov
loopne
les
das
adc
dec
enter
loope
xorb
imul
and
xchg
or
adc
dec
fs
mov
test
adc
lret
inc
add
and
mov
mov
adc
mov
rorb
subb
outsb
or
sub
xchg
inc
mov
pop
mov
enter
mov
scas
ret
pusha
mov
repnz
cwtl
aad
dec
cltd
xor
es
sub
xor
shlb
or
arpl
add
sbb
fwait
xor
add
cmp
adc
and
js
fisubs
out
sub
mov
rcrb
or
lds
shrl
pop
lahf
inc
sbb
fs
dec
loop
and
dec
dec
add
sarb
adcl
and
subl
sub
push
fbld
and
outsb
inc
cmp
sub
and
scas
or
rorl
test
ret
or
inc
adc
push
loopne
pop
inc
or
or
or
jbe
and
add
add
adc
inc
sbb
fstpl
mov
sbbb
inc
mov
out
rolb
inc
push
aaa
push
movb
and
add
add
xorl
mov
or
inc
add
push
shrb
or
pusha
or
and
insl
arpl
inc
cwtl
or
add
add
add
ret
orl
push
rcr
sbb
sbbb
mov
xor
in
add
addb
push
and
sub
test
xor
adc
add
xor
lea
inc
add
push
mov
adc
or
and
data16
mov
data16
adc
arpl
add
popa
adc
and
inc
and
into
pusha
adc
popa
adc
and
or
sub
in
int
into
inc
mov
xchg
pop
push
sbb
adc
xorb
lea
xorb
sbb
orl
inc
and
mov
lret
inc
adc
movsb
das
mov
nop
dec
xchg
xchg
xchg
sbb
inc
rorb
lcall
xchg
rcll
and
out
cmp
loopne
xchg
pop
data16
lds
mov
arpl
and
jle
xchg
sbb
dec
pop
mov
pop
movsb
mov
std
mov
dec
xor
jp
andb
aam
mov
jae
jnp
push
pop
adc
loopne
add
into
aad
and
add
pusha
push
mov
adc
add
imul
adc
push
lods
dec
and
push
fnstsw
loope
aad
fnstcw
int
sarl
mov
push
sub
mov
pushf
xor
jno
cmp
sub
xchg
mov
lods
push
cltd
or
cmpsl
gs
xor
jno
cmp
sub
daa
pop
cmpsl
mov
cmp
sub
xchg
sbb
mov
lret
pushf
or
xchg
jno
mov
push
mov
pop
movsb
inc
and
inc
pusha
pusha
mov
adc
xor
jp
add
jns
mov
or
roll
cld
inc
mov
sbb
add
push
les
or
enter
mov
andb
in
repz
roll
inc
mov
add
pop
add
popa
mov
int3
inc
popa
adc
inc
cwtl
sbb
inc
ss
pushf
sbbl
adc
cwtl
lds
inc
inc
pusha
add
data16
mov
pusha
push
or
mov
xorl
shlb
roll
xor
pusha
push
shrb
xor
or
mov
or
mov
add
int3
sbb
sbbl
and
or
pusha
push
mov
cwtl
xor
or
pop
les
mov
pop
test
push
add
lea
pusha
push
shlb
or
and
mov
orl
pusha
into
inc
test
lea
mov
jo
and
xchg
xchg
or
icebp
add
push
adc
inc
add
stos
add
cmp
mov
inc
sub
imul
add
push
jne
add
pop
loop
and
or
cltd
mov
data16
orb
dec
xchg
sbb
leave
push
sub
add
test
jo
xchg
je
data16
cwtl
or
pusha
xor
mov
mov
mov
mov
cmp
adc
das
and
mov
mov
push
xor
loope
push
loopne
in
lds
cli
cmp
sti
hlt
mov
mov
cld
stc
add
loopne
push
test
cltd
cli
cmp
add
pop
sahf
cmp
loopne
data16
cli
and
xor
add
in
ret
int3
andb
xchg
jae
ret
xchg
push
jns
xchg
pop
decb
cmp
into
cltd
push
mov
cmp
mov
pop
add
xchg
rorb
add
mov
test
xchg
jo
push
fidivrs
adc
inc
mov
push
xor
fidivs
into
orb
ds
or
lock
inc
adc
cmpsb
and
xor
outsl
sbb
lods
and
fidivrs
add
clc
xor
add
dec
xor
xor
cmp
testl
add
and
push
nop
adc
pop
js
xor
cmpl
jp
into
inc
nop
mov
jecxz
inc
push
je
sub
mov
mov
xchg
push
addb
and
test
and
xor
roll
dec
and
pop
dec
std
fs
movb
ret
xor
dec
push
movb
out
sbb
inc
cmpsb
or
add
or
adc
add
lea
mov
test
xchg
add
cs
pop
ss
jne
xorl
daa
push
sbb
int
or
and
push
sub
add
fmuls
cwtl
pop
pop
movsb
inc
xchg
notl
inc
sbb
xor
lods
lea
mov
sbb
je
popf
out
adc
pop
and
dec
adc
xchg
std
lret
and
lahf
lret
add
inc
add
flds
in
inc
cmp
or
fistpll
mov
and
pop
mov
push
push
xor
mov
dec
mov
rclb
insb
jnp
sub
fwait
xchg
xlat
cmpsl
adc
fisubrl
cltd
and
in
mov
popa
repz
mov
lea
out
int3
ret
cmp
mov
mov
popa
stc
jo
arpl
aaa
inc
pusha
mov
mov
mov
ds
and
scas
xchg
pop
out
loopne
icebp
and
rcrl
adc
in
mov
xor
pop
popa
mov
inc
cmp
sbb
sbb
call
add
mov
push
cli
or
lret
add
and
popa
scas
cmpsl
les
insl
movsb
scas
xor
xor
jae
mov
sbb
push
add
data16
das
fldl2e
sub
xor
mov
or
adcb
add
pusha
hlt
lods
rorl
cwtl
xchg
lret
push
pop
inc
and
and
or
or
and
xchg
stos
push
cmpb
xor
ret
ss
push
mov
sbb
adc
and
xchg
and
rorb
sbbl
cmp
incb
and
dec
sub
or
adc
rolb
xchg
cmpsl
outsl
cmp
pop
repnz
xor
inc
cmpl
add
popa
or
mov
inc
xorb
inc
or
pop
mov
sbbl
adc
cmpb
stc
dec
inc
xchg
xor
int3
jo
cld
cmc
rolb
stc
or
push
xchg
outsb
adc
sub
pop
and
adc
ret
mov
lret
push
adc
and
mov
sbb
hlt
icebp
adc
mov
roll
into
or
gs
repz
sbb
dec
lahf
out
cmp
fsubs
aad
addr16
mov
or
add
push
pop
adc
xor
or
into
jle
test
push
out
sbbl
sbb
or
dec
adc
popa
and
sub
lock
bound
lret
loopne
add
adc
add
inc
aam
pop
jmp
aaa
sbb
adc
shlb
stc
and
repz
mov
push
hlt
jmp
movb
dec
je
push
mov
subb
push
dec
les
cmp
dec
lahf
sub
jo
test
pop
in
nop
scas
movb
out
mov
inc
loopne
add
xor
lcall
sbb
std
inc
fnstenv
jns
xchg
add
mov
pop
shl
in
and
shlb
movsl
aam
cmp
mov
test
sub
or
xor
cltd
andb
jne
shlb
xchg
adc
xchg
mov
add
lods
or
scas
rol
add
incb
imul
int3
add
xor
stc
or
aam
ror
faddl
enter
pusha
out
pop
lods
xchg
popf
cmpl
mov
insl
xor
xchg
inc
sbb
adc
add
decl
xor
jmp
nop
inc
add
jb
xchg
popf
adcl
fcomps
rcll
mov
add
inc
or
add
sarl
cmp
sbb
into
dec
sbb
adc
and
add
mov
loopne
pop
mov
mov
cmpsl
bnd
mov
bound
rolb
inc
sub
add
rcrb
xor
sub
sbb
mov
or
pop
iret
sub
in
icebp
shrb
test
adc
in
andb
xorb
xchg
mov
sbb
push
sub
cmp
inc
imul
pusha
decb
and
pop
pop
push
and
movsl
or
jg
in
pop
sbb
in
or
push
sub
cltd
and
mov
loopne
das
add
shll
push
pop
xchg
cmp
loope
add
push
push
fs
subb
dec
insl
popa
fs
es
shrl
ret
enter
pop
arpl
push
dec
cltd
push
and
shlb
das
inc
scas
sub
fmuls
sbb
sub
push
popf
dec
jae
pop
inc
pushf
add
and
shr
mov
cmpsl
addr16
movsl
add
or
mov
enter
pusha
lds
in
lret
rorl
mov
sub
cltd
mov
std
mov
ds
es
mov
mov
outsl
and
lret
out
les
add
and
and
stos
jno
mov
cmp
je
or
pusha
sub
xor
lea
js
adc
xor
xchg
repnz
dec
cmc
lds
in
and
leave
inc
cmp
push
jecxz
adc
xchg
mov
orl
inc
mov
jge
push
daa
dec
xchg
mov
sbb
xor
mov
dec
or
sbb
add
push
sbb
mov
xor
add
mov
sbb
jo
mov
icebp
movsl
jno
roll
shll
add
jns
adc
pop
add
loopne
add
adc
nop
xchg
xchg
push
jecxz
mov
push
and
cs
sbb
orb
sbb
xor
jo
mov
sbb
in
movsb
stos
lcall
add
mov
and
gs
pop
rorb
jp
rclb
sub
cmp
insb
add
push
cmp
pop
call
or
mov
dec
rcrl
aaa
add
or
sbb
shl
inc
sub
fadds
push
fcoml
js
adc
xchg
sub
and
js
aaa
test
and
enter
in
mov
aam
adc
lahf
in
mov
ret
add
sar
push
add
test
adc
adc
cmp
add
inc
add
lods
imul
out
mov
adc
mov
adcl
out
add
mov
jno
stos
and
shlb
not
inc
pusha
les
cwtl
test
cmp
aam
xor
mov
fdivrl
stc
or
rcrb
mov
xchg
xor
push
adc
popa
mov
xor
add
aad
rol
addr16
add
push
aad
adc
rorb
jne
js
jmp
mov
xor
and
mov
andb
inc
sarb
addb
loop
add
inc
mov
in
cmp
dec
pop
jo
push
and
adc
jbe
push
add
test
lock
and
and
pusha
int3
call
inc
or
inc
pusha
push
sub
xchg
xchg
mov
and
rclb
mov
loope
lcall
mov
jae
xchg
enter
or
sbbl
sti
js
adc
jmp
andb
add
shrb
fnstenv
mov
mov
fsubr
stc
xor
push
dec
andnps
popa
pusha
jmp
or
out
enter
inc
or
add
jne
dec
adc
sub
or
andl
xchg
mov
insb
sub
and
add
cltd
mov
pop
test
add
mov
cmp
sbb
cmpsb
faddl
add
or
push
and
and
fdivrl
icebp
cld
jo
and
data16
sahf
mov
mov
add
sbb
int3
add
or
leave
addl
or
ljmp
pop
xor
sbb
add
push
and
int3
cli
repnz
sbb
arpl
xchg
push
icebp
lret
cs
cmp
sbb
xor
inc
outsl
incb
push
push
mov
mov
mov
out
mov
or
jb
add
fimuls
popa
jbe
pop
add
dec
mov
inc
out
cmp
sbb
mov
pop
mov
or
roll
call
fs
jbe
pop
fmuls
popa
mov
or
dec
lret
and
mov
mov
loop
lods
dec
arpl
sub
add
cmp
push
or
lods
mov
xchg
or
mov
jl
mov
jmp
push
test
mov
mov
movsb
mov
pop
dec
fwait
movsl
push
inc
cwtl
or
hlt
out
xor
ja
sbb
xor
or
push
pop
mov
cltd
ljmp
cmpl
mov
mov
cmp
ret
mov
pop
test
add
mov
jbe
xor
in
xor
mov
and
mov
enter
mov
lcall
iret
inc
add
or
xorl
xchg
jecxz
std
es
mov
inc
push
inc
sub
dec
xor
sbb
add
cwtl
cmp
ret
fcmovnb
aaa
add
rclb
lea
dec
stos
add
adc
push
push
sub
xlat
jl
adc
js
mov
fsubl
add
dec
or
hlt
lock
xor
rcrb
cmc
jo
and
loope
mov
inc
sub
add
mov
in
adcl
mov
inc
mov
lret
in
and
cli
lahf
or
adc
fdivl
popa
adc
add
pop
and
cwtl
pop
add
insl
out
roll
add
shrb
into
call
push
data16
mov
push
test
adc
dec
xchg
push
je
xchg
adc
and
dec
repz
cmc
fisubl
or
popa
sbb
repz
mov
cmp
inc
inc
test
orl
or
sbb
jnp
ret
test
push
mov
shrb
in
scas
or
ret
and
lock
add
add
aas
pop
mov
add
sbb
ret
test
dec
test
mov
add
insb
push
xorb
mov
test
popl
adc
xor
aas
mov
lret
cmp
loopne
je
inc
push
add
push
inc
push
gs
sbb
xorl
sbb
rcll
shr
inc
xor
mov
xor
scas
or
loop
or
or
add
adc
lods
mov
mov
push
mov
arpl
sbb
sbbl
xor
push
mov
mov
pop
cmp
insb
sbb
inc
jo
sub
and
test
add
fistl
push
sbb
add
fwait
repz
add
inc
and
adc
gs
xor
es
xchg
gs
push
cs
ja
mov
jmp
inc
adcb
xor
or
or
push
bound
push
and
jecxz
jne
add
lods
ds
push
sbb
lahf
enter
rolb
fs
lret
cmp
int3
out
push
pop
shll
sbb
adc
add
test
mov
cld
inc
sbbb
mov
pop
xchg
xchg
sbbb
dec
in
arpl
clc
sub
add
add
inc
xchg
adc
iret
ret
jbe
addl
les
push
add
in
and
outsb
adc
jne
add
add
sub
add
add
iret
out
xchg
test
sbb
add
cwtl
cmp
shlb
cmp
pusha
dec
addl
mov
ss
nop
gs
jne
sub
push
push
add
adc
or
mov
or
sub
pop
or
xor
cmpsl
jb
cmpb
pusha
adc
pop
sbb
arpl
push
lret
mov
cltd
jl
mov
leave
inc
xor
add
add
add
push
mov
lahf
adc
jnp
fcmovu
insb
adc
rclb
inc
in
les
sti
or
in
pushw
xor
jae
add
jle
or
stos
adc
dec
or
xor
mov
loopne
and
les
and
test
addr16
popl
cmp
inc
roll
lret
add
xlat
stos
sbb
je
roll
pop
inc
or
orb
stc
inc
subb
pusha
lods
hlt
adc
add
xchg
inc
xchg
outsb
sbb
add
shll
testb
pop
inc
or
mov
xchg
push
jns
pop
adc
or
hlt
fsubrs
and
adc
mov
jne
call
and
jae
push
ret
shlb
sub
movsl
imul
push
add
xor
push
xchg
xor
mov
jl
and
js
and
jp
cmp
inc
orb
mov
insb
add
adc
mov
xor
addr16
mov
std
inc
add
cmc
mov
into
lock
adc
adc
sub
pop
xor
jae
rclb
add
and
cmpl
lcall
push
xchg
aas
addr16
mov
fdivrl
pop
ljmp
jo
xlat
test
les
pop
enter
xor
rcrl
sbb
mov
inc
jbe
and
mov
scas
inc
cmpb
es
lret
or
pusha
nop
test
xchg
into
xor
push
or
ja
pusha
fsubrs
cltd
mov
adc
or
mov
stos
dec
cmp
mov
sbb
or
ret
aad
sbb
out
or
loop
std
in
cltd
in
and
shl
xor
rcrl
xchg
add
mov
aaa
mov
push
dec
cmp
xor
add
outsb
pop
and
movsb
or
inc
xor
mov
xchg
sbb
add
push
push
test
dec
xchg
add
data16
mov
and
add
pusha
jae
mov
add
movb
jnp
enter
dec
pop
mov
jmp
sbb
rol
push
inc
subl
or
cmpsb
fiaddl
cli
test
pop
dec
cwtl
dec
pop
mov
add
push
scas
mov
add
push
shlb
jge
add
cmp
imul
sbb
test
and
or
jg
popa
push
sbb
add
add
adc
adc
or
push
cmp
push
inc
sub
sbb
js
and
sub
movsl
jo
adc
shrd
ret
arpl
sbb
sub
or
or
or
ret
lock
inc
cwtl
and
adc
dec
pop
pusha
andl
inc
dec
cmp
jnp
cmp
adc
xchg
xchg
rcll
mov
flds
push
mov
in
scas
cmp
fs
loop
int3
ja
add
sbb
sbb
and
in
mov
pop
lea
xchg
pop
or
pop
add
addr16
or
pusha
xorb
popa
in
xor
xchg
mov
lods
lret
fldt
ret
in
push
cs
enter
iret
mov
mov
test
add
adc
xchg
movsb
push
das
jg
stos
push
or
pop
push
divb
stos
adc
mov
je
xchg
dec
rcrl
mov
mov
rcrb
ret
inc
pusha
inc
mov
insb
or
pop
and
outsl
inc
das
and
jbe
cmp
xchg
scas
leave
nop
push
aas
clc
jb
jbe
dec
pop
push
sub
cli
jne
addb
cmp
gs
lcall
jecxz
mov
mov
orb
mov
add
dec
adc
mov
icebp
add
xchg
pop
scas
sbb
pop
lods
mov
in
ja
and
into
rcrb
mov
gs
jno
repz
repz
in
mov
pop
dec
xorl
mov
mov
push
lea
add
xchg
pop
push
mov
jmp
shrb
bound
lret
andb
popl
sub
and
jmp
mov
sub
push
adc
scas
sahf
add
shrl
sbb
dec
adc
push
les
shl
and
adc
mov
mov
sbb
shl
ret
sub
or
outsb
dec
into
cmpsl
xchg
pop
adc
sarl
and
into
mov
inc
cld
add
lret
adcb
dec
adc
int
stos
xorb
xchg
aas
lahf
sbb
push
sub
and
mov
cmpsb
bound
ja
add
add
popa
imul
in
and
aaa
xor
or
clc
lret
sbb
or
mov
sub
lcall
push
jge
arpl
subb
or
add
aad
ret
rorb
sub
mov
dec
sahf
adc
xchg
or
add
das
arpl
lock
xchg
les
mov
mov
xor
pop
test
jecxz
sub
sbb
and
ret
adc
add
xchg
lock
fsubrs
push
jge
ss
jae
pop
sbb
pop
jnp
cmpb
xchg
lret
add
gs
inc
mov
sbb
sbb
adc
mov
pop
and
or
imul
addl
cmp
test
scas
fiaddl
xchg
int
ret
inc
les
rol
push
add
int3
cs
jno
scas
push
inc
leave
sti
or
aad
add
sub
xchg
movsb
mov
add
mov
nop
loope
test
dec
jns
repnz
je
and
add
and
jecxz
int
mov
mov
xor
loopne
mov
add
or
fists
pop
and
mov
cmp
es
mov
xchg
fs
add
mov
or
push
mov
xor
out
enter
testl
or
or
fsubp
adc
sti
ja
cmc
and
or
icebp
sub
inc
loopne
pusha
lcall
pusha
into
sarb
repnz
stos
cmp
mov
arpl
pop
orl
in
adc
repz
inc
rcrb
lock
jg
outsb
or
and
inc
sbb
xor
sub
xchg
mov
mov
lret
adc
sbb
sbb
xor
jecxz
push
js
jno
sbb
mov
or
push
jmp
pushf
add
push
or
fcoml
arpl
or
xor
add
and
repnz
andb
cli
jbe
mov
cli
sbb
and
pop
inc
sbb
pop
xchg
stos
je
mov
add
inc
fsubrl
cmpsl
pop
pop
aaa
push
mov
lret
or
add
xlat
and
scas
xchg
push
mov
adc
push
cmp
cli
jo
and
sbb
pop
and
ret
scas
jmp
xor
cmp
rol
pusha
adc
add
and
cmp
push
pop
add
ret
jp
pop
mov
xchg
popl
dec
test
sbb
add
or
les
adc
repnz
add
add
mov
lret
xchg
xchg
int3
int3
mov
hlt
cwtl
and
iret
daa
xchg
jo
mov
dec
push
push
mov
mov
and
addl
mov
push
call
sbb
xchg
push
inc
ret
addb
sbb
mov
or
cs
pushf
pop
mov
adc
int
add
add
sarl
shll
pusha
addr16
add
gs
xchg
mov
sub
push
test
pop
add
dec
pop
les
push
and
cmp
push
inc
xorb
cmp
add
mov
or
sti
ja
mov
and
push
mov
daa
push
add
push
adc
out
and
mov
inc
mov
sahf
jae
fldl
add
add
sbb
inc
adc
into
push
iret
or
xchg
adc
sub
cmp
sbb
add
push
pop
push
and
mov
dec
cwtl
dec
aaa
pushf
popa
cwtl
mov
loopne
pop
cmpsb
out
push
add
nop
invd
sbb
push
xchg
push
xchg
cmpl
out
pusha
test
sub
loope
leave
ljmp
and
adc
es
xchg
pop
push
cld
or
call
adc
leave
push
jg
jb
popa
add
jmp
push
push
add
add
push
cltd
imul
xor
lcall
push
mov
jmp
adc
leave
aaa
push
repz
or
arpl
adc
inc
or
xchg
dec
insb
dec
jb
xor
into
fldl
add
add
jmp
jmp
add
mov
pop
mov
xor
dec
hlt
sbb
add
imul
mov
add
insb
jg
data16
movl
jg
push
add
outsb
add
push
in
add
jo
mov
aaa
adc
scas
out
je
and
push
push
jbe
pop
adc
add
pop
mov
inc
adc
jmp
xchg
in
add
leave
into
mov
cmp
sti
test
cmpsl
and
cs
sti
mov
stos
fldl
jl
adc
xchg
cmpsl
xchg
je
pusha
mov
ds
lahf
pop
jecxz
jl
ficoml
push
mov
ss
rcrl
rcrb
les
add
inc
adc
add
mov
inc
shlb
inc
xchg
lret
enter
adc
inc
adc
jge
adc
lds
loop
inc
mov
fdivs
mov
test
cmp
and
repnz
or
lods
int3
dec
push
rolb
cmp
push
mov
in
ret
or
shlb
lea
into
test
adc
add
push
imul
test
adc
xor
je
pop
jnp
int
mov
jnp
pop
test
mov
cwtl
fistpll
in
call
pusha
aam
mov
xchg
mov
lods
fs
push
or
pop
inc
nop
and
pop
divl
cmp
ljmp
jl
push
sub
sti
xor
fmuls
fdivrl
lock
xlat
lds
ja
mov
mov
sub
sarb
jb
adc
inc
cli
jg
lds
inc
add
repnz
mov
mov
and
adc
add
lret
xchg
pop
and
mov
mov
sbb
enter
or
inc
les
int
js
or
inc
fsubs
rol
sub
mov
adc
xor
mov
add
cmp
ret
cmpsb
lret
test
push
mov
test
or
push
pop
scas
in
add
mov
sub
push
mov
and
movl
mov
xchg
dec
xchg
popa
imul
push
mov
push
cmp
adc
xor
je
add
sub
pushf
jo
mov
enter
aam
stos
pushl
add
xor
xor
adc
xor
or
fbld
leave
in
lret
out
scas
cmpsl
ja
int
divb
out
and
iret
pop
mov
shrl
imul
sbb
push
stos
cs
sub
mov
int3
arpl
jp
rcll
cmp
or
sbb
adc
cli
or
js
cwtl
push
or
cmp
mov
sbb
mov
and
cmpsl
push
mov
inc
int3
push
cltd
jo
push
sbb
les
addl
xor
sub
testb
or
mov
aas
in
cmp
sahf
ljmp
cmp
lea
xchg
js
xor
ret
jle
addb
adc
orl
in
ljmp
int3
cmpsb
pushf
mov
inc
xlat
and
sbb
pop
mov
loopne
or
push
add
rolb
fimuls
mov
les
cmp
jne
stos
dec
imul
xchg
bound
pop
push
adc
inc
rol
inc
dec
jbe
mov
aas
mov
mov
lret
sub
mov
cwtl
push
bound
out
movsw
inc
jne
xor
sbb
push
cwtl
mov
stos
stos
dec
int3
and
dec
mov
cli
shrb
nop
mov
xor
jecxz
ret
sub
dec
test
and
sub
xchg
std
iret
mov
cli
mov
das
outsb
and
stos
repnz
rol
stos
and
dec
jecxz
mov
aam
adc
jb
mov
sbb
push
aaa
push
inc
adc
notb
mov
cld
inc
jnp
mov
stos
mov
or
sahf
lcall
mov
jmp
ret
ret
jne
adc
inc
sbb
adc
adc
mov
jb
pop
pop
xor
inc
dec
xor
enter
movl
xor
shrl
push
inc
push
push
mov
adc
popf
cmpsb
sbb
int3
mov
outsb
pop
enter
loopne,pn
jne
cltd
popf
inc
cwtl
xor
in
push
jno
cltd
cwtl
inc
mov
ljmp
jmp
dec
sbb
lret
out
pop
push
add
cmp
mov
and
loop
sbb
popa
jecxz
out
mov
int
push
pusha
jb
adc
int3
cltd
imul
aaa
jbe
aad
xor
mov
xor
das
outsb
sub
cmpsb
xchg
push
push
xorl
arpl
push
or
inc
mov
push
movsl
lcall
test
cwtl
pop
arpl
cwtl
cmpsl
sub
scas
cld
pop
xor
inc
xchg
sub
and
mov
jns
push
orl
ss
stos
sbb
std
lret
cmp
xchg
es
push
add
and
jecxz
jb
insb
enterw
add
add
dec
mov
lret
sub
sub
movsb
jl
mov
clc
shrb
enter
cmp
dec
enter
outsb
sbb
popa
test
out
push
fisubrs
aas
ss
int3
push
testb
subl
push
xor
push
ljmp
sub
scas
inc
mov
rorl
int3
pop
cmpsb
or
pop
dec
jge
sbb
lds
jp
sbb
aad
inc
lea
dec
xchg
jne
dec
cwtl
push
testb
cwtl
xor
loop
cltd
jmp
mov
int
ja
int3
jmp
sub
arpl
cmpsl
mov
mov
add
jne
pop
out
mov
stos
push
push
cmpsb
stos
imul
ret
cltd
jmp
cmp
adc
cmp
enter
pop
inc
pop
cld
add
cmp
movsl
or
sub
lods
mov
test
jl
ja
push
scas
adc
mov
sub
es
xchg
hlt
loopne
lds
push
cwtl
mov
inc
and
iret
cmpl
lcall
lret
push
mov
sub
in
in
add
mov
jl
jmp
mov
es
jno
popa
insb
sbb
xor
leave
imul
jns
test
inc
sub
sbb
out
outsl
sub
cmpsb
xor
push
rcrl
mov
bound
jns
ret
fld
scas
add
xor
stc
lret
inc
andb
jmp
or
mov
jl
mov
xor
lods
and
lods
repnz
xchg
sarl
or
repz
and
push
cld
dec
mov
mov
sub
adc
push
xchg
or
push
fcompl
aam
adc
sbb
xchg
sahf
inc
shll
push
pop
xor
inc
in
loope
mov
pop
pop
nop
sbb
pop
mov
ds
shrl
out
addr16
repnz
sub
xchg
mov
cmp
sbb
adc
mov
mov
adc
mov
rorl
or
push
xchg
loopnew
mov
repz
movsb
clc
push
sbb
pop
and
shufps
add
pop
les
xor
xchg
ds
ret
push
xor
cmp
into
insl
cmp
jne
rcll
lds
pop
addr16
adc
push
adc
ds
cs
sar
int3
pop
mov
je
js
fdivrl
mov
xchg
je
inc
mov
push
out
push
incb
jbe
popa
pop
inc
pop
xchg
jne
and
sbb
sub
out
pop
mov
mov
mov
fwait
dec
xor
je
lods
mov
push
sbb
mov
push
stos
call
pop
mov
cmp
sub
add
test
sub
lahf
adc
xchg
in
mov
push
popa
hlt
dec
cwtl
pop
out
es
jbe
int
mov
loopne
mov
push
sbb
mov
mov
stos
outsb
sub
push
pop
fistl
sub
loope
jno
shrb
cwtl
pop
int3
inc
jae
cs
jns
cltd
xor
pop
lods
jp
call
into
aas
adc
les
mov
repz
lds
dec
pop
shrl
mov
sbb
jle
test
test
pop
repnz
sub
aam
arpl
dec
cltd
add
mov
cltd
shr
ror
fs
inc
sub
cmc
sub
mov
sub
loopne
stos
xchg
mov
add
icebp
dec
aas
ror
jno
push
sahf
fists
xchg
lret
lods
aad
jle
mov
cmp
mov
inc
xlat
js
xchg
adc
mov
or
jp
cmp
add
repnz
sub
popa
lret
or
pop
addr16
in
mov
jb
jno
xchg
mov
lahf
movsb
adc
or
shll
loopne
xchg
inc
jp
test
adc
into
cwtl
aad
pop
sahf
das
out
cwtl
push
inc
dec
xor
fld1
aas
fwait
sbb
repz
jecxz
cltd
mov
sub
pop
inc
dec
loop
in
int
add
test
faddp
pop
pop
push
movsl
es
int3
sbbb
xchg
cmp
out
sbb
jae
xor
test
pop
cmp
or
adc
inc
adc
cmp
out
nop
ret
sub
nop
push
jbe
aad
ja
jge
sbbb
push
stc
adc
sub
popa
test
push
movsb
xchg
add
imul
xchg
pop
xor
mov
mov
test
cmp
subl
cld
xchg
aam
cmp
and
pop
js
lret
inc
pop
mov
jmp
into
push
push
jo
out
push
lea
and
sbb
mov
add
shrb
shl
cmc
cltd
push
rol
or
pusha
xchg
mov
mov
insb
push
add
sbb
add
adcl
ljmp
cmc
add
fsts
stc
adc
push
out
adc
lret
mov
popa
jle
fcoml
pop
push
xchg
shl
push
xchg
lods
lahf
push
push
add
jge
loopne
adc
fdivp
adc
jns
sbb
call
adc
or
inc
pop
mov
aam
mov
or
cmp
inc
pop
jbe
addb
imul
pop
cmp
leave
dec
or
add
pop
mov
push
bound
or
xor
cwtl
sahf
fisttpl
cwtl
inc
inc
dec
in
dec
mov
cmp
xor
pushf
and
inc
jle
subb
adc
sbb
out
add
stc
cwtl
mov
pop
adc
insl
sbb
sbb
js
mov
sbb
add
imul
cwtl
adc
xor
add
cwtl
fwait
jns
leave
or
outsb
sarl
sahf
push
cmp
cld
imul
in
js
inc
lods
mov
out
mov
popf
insl
mov
iret
cmp
pop
and
shll
fimull
daa
pop
pop
and
mov
xor
mov
or
xor
xor
mov
lret
mov
out
js
dec
pop
test
jo
pusha
cwtl
outsl
pop
flds
in
mov
shr
mov
pop
mov
mov
pop
sbb
xchg
loope
arpl
test
adc
or
cld
sbb
ret
int3
inc
into
mov
xchg
add
cmpsb
test
adc
and
mov
sub
xchg
and
or
pop
mov
jnp
xorl
pusha
fwait
push
andl
sub
add
ret
test
and
pushf
outsb
loope
test
add
push
jb
inc
sub
int
add
push
mov
inc
and
int3
mov
adc
xchg
push
inc
or
add
ds
rorl
pushf
mov
sbb
or
scas
mov
or
inc
sti
mov
xor
mov
sub
mov
or
sbb
cwtl
push
inc
or
adc
stos
sub
xor
sbb
insb
xor
ds
or
test
es
lret
and
subl
add
mov
or
insb
test
jecxz
mov
and
out
in
pop
push
aaa
les
test
xlat
push
xchg
cmp
dec
jae
das
xchg
mov
inc
subb
xchg
xchg
dec
movsl
jg
cmpb
popf
mov
dec
and
scas
cld
int3
sub
iret
dec
lods
sub
int3
shlb
mov
aam
push
aad
push
push
push
push
es
dec
rorl
add
add
and
in
lods
int
mov
mov
cltd
mov
les
or
and
dec
xor
aam
sbb
add
jecxz
add
sahf
or
ljmp
cmp
mov
insb
mov
aad
mov
sub
loopne
pusha
push
mov
inc
imul
repz
outsb
jb
jmp
add
xor
lret
sbb
sbb
mov
push
cmpb
dec
lret
cs
mov
mulps
push
shll
add
dec
mov
adc
xor
push
add
mov
sti
mov
arpl
push
adc
xor
push
cmp
add
or
adc
outsb
outsb
sub
inc
imul
mov
sub
ret
loopne
inc
xchg
push
add
xlat
sbb
pop
dec
xor
daa
int
sub
add
or
inc
sub
pusha
adc
fcoms
mov
inc
arpl
cmp
data16
sub
inc
rclb
adc
inc
jge
add
mov
jp
mov
mov
aas
imul
xor
mov
push
mov
sbb
mov
sub
fimull
push
push
xchg
into
int3
cmp
lock
push
cmpsl
jg
and
adc
and
cwtl
or
popa
lcall
jns
inc
cmp
mov
sub
mov
mov
orb
cmpsb
jge
mov
stos
adc
add
ficoml
xor
xchg
lahf
mov
stos
lret
and
xchg
or
ret
sbb
stos
mov
mov
jecxz
mov
mov
mov
in
sti
xchg
mov
cmp
clc
inc
aas
sbb
outsb
stos
sbb
scas
and
and
mov
mov
pop
push
push
jmp
add
xchg
icebp
dec
cltd
fst
jno
aad
jg
xor
cltd
test
jecxz
jbe,pt
enter
int3
and
dec
push
mov
push
pop
push
pop
cmp
jno
mov
xor
xor
mov
xor
mov
jecxz
ss
pop
jecxz
or
loop
adc
fadds
shlb
adc
je
js
les
jno
fsubs
adc
jmp
fadds
pop
mov
mov
or
jne
jmp
push
inc
sub
or
adc
stc
dec
cs
xchg
loopne
test
adc
adc
and
mov
adc
mov
dec
xchg
or
in
fcmovbe
icebp
xchg
mov
sub
adc
scas
dec
dec
and
andb
jle
and
mov
pop
bound
add
and
adc
push
and
adc
stos
adc
cwtl
dec
add
mov
inc
imul
jno,pn
or
adc
lock
nop
push
add
rorl
add
and
sub
pop
stos
rclb
push
push
dec
enter
rcll
mov
dec
fs
mov
adc
rcl
inc
pop
add
adc
mov
sub
xchg
or
adc
sbb
and
pop
and
shll
test
xchg
sbb
push
mov
stos
dec
xor
mov
call
out
adc
mov
pop
bound
add
and
mov
add
add
adc
movsb
mov
and
and
popa
xchg
or
adc
lock
test
add
xor
movsb
add
and
mov
shlb
imul
inc
sub
xchg
or
adc
and
inc
push
mov
cmp
and
lock
push
loop
adc
dec
adc
xchg
ret
ret
fisttpl
mov
inc
jl
adc
push
subb
rorb
mov
test
in
loop
and
and
call
sub
sbb
sbb
adc
mov
pop
dec
mov
xchg
mov
adc
orb
inc
sub
add
mov
cmp
sub
xchg
dec
scas
add
bound
dec
push
and
or
sub
and
jo
inc
pop
add
dec
dec
and
pop
repnz
mov
adc
dec
mov
bound
pop
mov
adc
and
inc
dec
mov
sub
adc
lret
daa
clc
dec
mov
mov
adc
or
xchg
xchg
adc
mov
mov
add
adc
sub
and
pop
bound
insl
outsb
or
adc
xchg
and
push
mov
stos
dec
sbb
sbb
das
roll
fcoms
outsl
xchg
xor
push
ret
push
mov
xchg
xchg
push
sub
xchg
xchg
mov
push
sub
xchg
mov
adc
nop
dec
push
push
mov
mov
adc
and
add
rclb
or
dec
js
bound
adcl
xchg
sbb
je
mov
cmp
sub
inc
pop
add
dec
fs
or
inc
in
and
dec
add
bound
dec
insb
and
shlb
dec
or
dec
sbb
ja
cmp
adc
pop
loop
adc
dec
push
and
nop
mov
test
mov
ljmp
pop
add
inc
push
and
orb
and
dec
adc
jmp
or
adc
call
sub
adc
or
mov
pop
mov
add
and
or
adc
and
adc
mov
cmp
mov
loopne
push
xchg
inc
scas
add
inc
scas
adc
orb
ret
xchg
adc
mov
adc
pop
ret
pop
mov
movsl
inc
push
and
dec
add
xchg
rolb
les
xor
lret
je
mov
test
cmp
rorb
xchg
or
pop
inc
js
gs
sbb
push
movsb
or
sub
insl
push
xor
inc
adc
ds
cmp
or
sbb
push
sub
pop
dec
pop
sahf
out
push
nop
pusha
or
xorl
sbb
scas
mov
cli
hlt
push
adc
es
mov
dec
mov
inc
add
jb
or
xchg
fadds
test
add
aad
daa
dec
sbbl
pusha
push
dec
mov
shll
movsb
ds
push
push
popa
loopne
rolb
test
test
or
sub
out
xor
stos
jno
mov
lcall
adc
nop
add
sbb
cmp
sbb
pop
adc
or
int3
or
cwtl
push
or
push
movsl
xchg
aad
je
shlb
push
cmp
mov
mov
and
mov
rorl
inc
push
bound
out
xchg
dec
mov
mov
popf
xor
pop
or
pushw
add
cmp
inc
popf
add
cmp
inc
pop
adc
jns
cmp
or
xor
in
gs
pop
mov
pop
push
dec
and
push
mov
or
mov
sbbb
andl
addr16
ds
mov
arpl
push
das
repnz
lds
imul
cltd
lock
out
or
ret
cmp
mov
sbbl
scas
cwtl
push
mov
fdivs
dec
cmp
xchg
outsb
repz
lcall
enter
cwtl
mov
adc
adc
sbb
jecxz
orb
xor
xor
xor
imul
or
pop
jecxz
xor
loopne
pusha
les
dec
imul
sbb
mov
test
cmp
mov
mov
fdivs
sbb
xorb
dec
jo
sbb
adc
sub
insb
es
xchg
aas
inc
fmul
mov
mov
mov
add
cmpsb
xor
bound
shrb
popa
xor
xor
xor
or
rolb
push
mov
arpl
xlat
addr16
push
mov
fsubl
push
arpl
bound
lods
jns
push
xor
sub
gs
dec
cmpsb
lods
or
sub
jmp
into
leave
sbbl
jo
dec
repnz
adcl
or
mov
outsb
jbe
fcomps
fcoml
dec
pushf
into
lods
mov
pop
data16
xchg
fdivrl
cmp
daa
push
add
inc
push
dec
cmp
push
push
lods
or
lods
pop
or
push
add
sub
cmp
xchg
dec
mov
movb
pop
push
add
adc
rolb
test
sysenter
test
dec
xor
or
mov
imul
loopne
dec
orb
and
sbbl
lcall
dec
rolb
iret
lcall
adcb
xor
sarb
dec
or
rol
sbb
mov
push
test
movsl
cmp
and
mov
xchg
or
cwtl
and
test
cmp
push
xor
mov
or
inc
pop
dec
addl
xor
push
inc
xor
fs
push
jo
fdivs
or
imul
mov
push
sbb
push
push
shlb
adc
xor
sbb
or
mov
insb
xor
cwtl
cmp
or
je
sbb
rcl
pusha
add
addr16
sub
dec
mov
ret
int
inc
es
sub
icebp
and
fs
mov
or
lock
push
lock
adc
mov
sbb
or
xor
popa
adc
insl
sub
aad
into
arpl
add
and
push
cwtl
push
cwtl
aad
aas
add
addb
mov
xchg
pushf
push
jo
js
inc
dec
sub
inc
or
and
xor
aam
sbbl
or
aad
adc
popa
add
xor
inc
lods
loop
adc
or
sub
shlb
sub
or
sahf
push
push
dec
fsubrs
pop
or
sbb
scas
jno
pop
filds
add
cmp
push
push
inc
add
sub
push
or
mov
adc
add
or
andl
subb
mul
adc
cmp
push
inc
add
and
sub
or
cwtl
ror
dec
test
cs
arpl
fadd
cmpsb
mov
and
pop
push
test
dec
data16
inc
xor
int3
test
or
enter
popl
add
lea
pop
mov
push
sbb
rolb
add
sub
xor
fmuls
dec
push
adc
movsb
mov
xchg
popa
push
jle
sbb
add
add
lods
lods
imul
insb
or
scas
or
push
mov
adc
push
jecxz
into
push
push
les
loopne
mov
fmuls
or
sub
mov
mov
push
mov
adc
adc
sbb
imul
inc
mov
add
sub
daa
pop
or
bound
shrb
adc
lock
jb
sub
rorl
mov
pusha
xlat
or
lods
sarb
sbbl
pop
je
mov
xchg
push
inc
pop
es
pusha
sahf
push
cmp
ret
adc
push
push
aas
inc
inc
sbb
sbb
add
cmpsb
inc
push
call
in
jo
movsb
test
popf
sub
sub
pop
call
add
imul
in
or
sbb
push
inc
sbb
cwtl
cmp
xchg
in
fs
jbe
push
sahf
outsb
mov
xorb
fsubl
mov
aas
les
bound
inc
jo
sbb
xor
js
push
jmp
mov
test
pop
insb
int3
adc
pusha
inc
data16
mov
push
shrb
xlat
aam
mov
mov
inc
mov
inc
inc
jecxz
or
loope
testl
cld
loopne
cmp
jbe
into
fwait
xor
or
data16
push
adc
push
int3
cmp
push
push
fdivs
xor
out
dec
sub
lea
inc
xchg
pusha
mov
lret
stc
sub
adc
aad
adc
inc
int
add
fs
roll
out
adc
xor
fadds
cld
fnstcw
mov
orb
popf
shrl
vaddss
add
add
xor
xlat
adc
bound
addb
daa
int3
mov
loopne
adc
mov
cmp
lock
mov
pop
add
xchg
mov
cltd
loop
out
pop
rcr
mov
cmp
add
mov
test
sub
addb
lds
add
or
cmc
jno
sarb
adc
cmpsb
clc
ss
add
or
push
fidivl
sbb
dec
lds
mov
leave
test
mov
shlb
shrb
gs
sbb
loop
repz
sub
add
pop
xchg
pop
fsubr
js
cmpb
fwait
imul
int3
adc
je
out
movsb
mov
cmp
lock
mov
test
adc
arpl
and
mov
and
imul
cmpb
push
lcall
fs
and
or
push
mov
and
xchg
dec
xor
sub
dec
popa
movb
xchg
adc
jle
pop
mov
mov
push
or
arpl
or
jno
push
gs
les
xor
repnz
sbb
pop
loopw
sarb
test
and
xchg
js
or
inc
sub
pop
roll
mov
inc
bound
mov
pop
inc
fnstenv
or
arpl
sbb
mov
daa
push
addl
xchg
movsl
lods
inc
sub
popa
jno
xor
pop
add
fwait
inc
cmp
add
jl
or
mov
or
push
mov
rol
rcll
sarb
inc
arpl
stos
cmpsb
mov
dec
roll
inc
pop
xor
ret
rcll
rcrb
test
mov
xor
nop
xor
or
pusha
int3
xor
lret
and
into
cwtl
jge
mov
or
out
pop
sbb
sbb
pop
adc
push
add
outsb
jno
outsb
mov
push
sub
cmp
mov
in
int3
jne
adc
aad
in
sub
lods
mov
add
push
xor
dec
movsl
inc
lds
movl
cmpb
mov
cmp
je
repnz
push
or
ret
or
push
jp
es
and
inc
inc
outsb
jno
pop
movl
stos
inc
pop
adc
xor
ret
loopne
sbb
push
sub
rol
jo
push
bound
push
mov
or
cmpsl
add
addb
xchg
roll
mov
add
loop
mov
inc
push
sbb
pop
out
fisttpl
mov
sahf
pop
inc
es
push
js
xchg
shll
add
add
fdivs
inc
mov
sbb
push
xchg
nop
push
push
dec
cld
mov
imulb
inc
lds
push
dec
mov
rcrb
jb
push
jle
and
cld
pop
pop
jo
out
jnp
andb
inc
push
ret
lods
xorl
dec
push
and
flds
and
arpl
adc
cwtl
pop
xor
mov
addb
add
push
daa
into
es
cmpsb
fwait
adc
cwtl
aad
aas
mov
push
icebp
and
push
mov
mov
xor
dec
cmp
lea
sahf
sub
int3
add
pop
jb
add
fmuls
adc
xchg
mov
jae
add
pop
loope
mov
sbbl
push
inc
xor
fwait
es
mov
and
lahf
and
ret
stos
dec
out
dec
mov
in
ret
mov
test
push
lods
push
lock
jae
lods
jo
ss
mov
ror
mov
push
push
xchg
sbb
jne
int3
es
xchg
pop
insb
cmp
and
inc
call
xchg
and
add
xor
cwtl
jmp
push
or
pop
pop
xchg
add
sbb
add
push
dec
push
mov
adc
rorl
and
push
add
adc
xor
loopne
pop
inc
movl
xlat
fnstenv
bound
out
sbb
lea
sar
mov
dec
int3
pop
fsub
mov
xchg
and
xchg
out
js
pop
xchg
cld
gs
jmp
sbb
adc
mov
mov
pusha
sbb
aam
adc
rcrl
adc
popf
sub
inc
add
ss
movsb
add
popa
dec
inc
and
insb
or
sub
cmpsb
sbb
sub
movsl
inc
jno
pop
xor
aam
imul
jge
pop
negl
aam
xchg
push
xor
lds
nop
or
sub
jecxz
sub
out
rorl
pop
sbb
jb
sub
cwtl
and
push
arpl
popa
cmpb
sbb
stos
jmp
xchg
add
iret
arpl
sub
ret
and
add
ss
or
ret
push
test
repnz
xor
push
inc
xchg
add
xchg
out
pop
dec
adc
dec
pop
aam
dec
cwtl
or
aam
or
or
adc
or
pop
ret
pusha
and
outsl
xor
mov
pusha
lods
mov
mov
sbb
mov
add
cmp
add
aam
fmull
outsl
jns
push
inc
add
jge
add
and
and
xchg
xchg
or
loopne
mov
test
sub
mov
xchg
push
dec
xor
dec
sbb
sub
push
ret
stos
xor
mov
push
push
cmc
in
insl
lds
adc
rcrl
inc
sbb
lds
inc
subb
push
sahf
push
int
mov
fsubrp
jl
pop
leave
fmuls
and
rcrb
ds
int3
xchg
sub
in
sti
repz
and
test
xchg
sarl
in
ret
shrl
clc
jns
sti
sarb
les
and
xor
xchg
and
xchg
add
int3
test
add
push
mov
lret
inc
sti
fiadds
push
rorb
mov
sbb
clc
mov
pusha
out
dec
clc
cmp
imul
pop
in
sti
cmpsb
jb
mov
lods
mov
hlt
jo
jo
and
nop
cmp
pop
lock
adc
pop
mov
and
test
inc
push
int3
js
test
mov
je,pt
insl
lahf
popa
jg
popf
mov
mov
sbb
cld
addl
pop
lahf
cmp
adc
push
stos
jl
pusha
adc
lret
sbb
imul
ja
daa
sbb
pop
sbb
push
aam
xchg
push
cs
jns
stos
cld
cmpsl
pop
jmp
popa
push
pusha
jge
adcl
push
pop
test
subb
movsb
mov
inc
scas
pop
inc
arpl
cwtl
movsl
push
negl
in
push
xor
lret
push
imull
call
sar
ftst
xor
rorb
pop
cld
int3
sbb
add
xor
and
jl
mov
aam
or
and
xor
dec
add
push
lock
xor
cmp
fs
or
inc
cmp
dec
scas
ficompl
lret
or
mov
int3
pop
stos
je
lock
dec
cs
and
jl
das
dec
sbb
sub
jmp
stos
decb
nop
push
scas
push
pop
and
xor
mov
pusha
fnsave
call
je
or
dec
clc
pop
mov
xlat
jle
aam
out
mov
das
jne
push
adc
push
push
add
pop
dec
push
xor
loopne
cli
ljmp
sarl
imul
push
movsb
cmc
push
pop
adc
stc
xchg
xchg
lahf
or
std
jae
inc
mov
jae
add
dec
daa
lret
push
push
jge
daa
jb
int3
or
sbb
fstl
shlb
pop
test
push
adc
ljmp
hlt
and
mov
pop
and
adc
incl
pusha
adc
mov
sbb
or
and
mov
adc
adc
dec
cwtl
and
mov
adc
sbb
js
push
rcll
push
adc
rcll
dec
push
and
cwtl
test
push
inc
sahf
adc
push
sub
mov
inc
push
mov
mov
xchg
inc
idiv
dec
sub
xchg
inc
movsb
inc
pop
sbb
xchg
movsl
pop
add
mov
and
orl
adc
cmp
sub
addb
sbb
addb
push
push
ret
xchg
or
sub
lds
nop
bound
push
mov
test
push
jmp
cmp
jle
adc
add
shr
addl
shrl
dec
incb
pop
insl
adc
sub
fstpt
and
inc
pop
sub
fstpt
adc
mov
scas
ficoml
stc
or
cmp
out
sbb
in
xchg
mov
mov
dec
cmpsb
push
test
int3
movsb
mov
xor
sbb
cmpsb
shrb
mov
add
pusha
push
adc
jnp
and
inc
dec
orb
sub
mov
push
movsl
rcll
test
push
push
ds
push
push
pop
pop
cli
xchg
sub
cwtl
inc
lds
mov
mov
roll
ret
xchg
push
rolb
sahf
inc
fisubl
mov
cmp
fst
jne
xor
adc
inc
daa
int3
push
js
push
into
sbbb
or
fs
and
xchg
in
push
insb
mov
je
lret
bound
sub
jle
or
or
sub
xchg
popa
sub
mov
inc
in
outsl
adc
mov
loopne
rcrb
xchg
movsl
and
pop
ds
push
in
add
mov
push
ret
pop
or
adc
movsl
cmp
xchg
add
add
fisttpl
adc
out
and
push
add
frstor
xor
cmpb
cmpsb
in
mov
gs
mov
push
fmuls
xchg
mov
push
adc
mov
icebp
loope
stc
stc
andl
xor
fldt
xor
int
rolb
call
jns
xchg
cmp
pop
out
shrl
pushf
push
xchg
or
lret
aas
add
test
dec
pop
leave
imul
sbb
xor
das
inc
rcl
push
add
jle
mov
test
data16
mov
mov
lods
call
jmp
xor
adc
les
es
sbb
ds
or
cmp
and
dec
or
mov
into
das
fnstcw
xchg
xor
pop
mov
mov
xchg
jle
mov
jg
out
js
jnp
mov
leave
jmp
push
out
arpl
ljmp
hlt
sbbb
pop
pushf
sub
leave
mov
jecxz
daa
stos
add
ja
bnd
out
mov
pop
mov
push
pop
outsl
xlat
jl
sub
xor
xor
pop
and
aad
pop
jl
dec
scas
out
call
lods
push
imul
bnd
inc
mov
icebp
sbb
rcl
xchg
xlat
gs
jbe
pop
mov
xchg
lea
mov
cmp
cmp
fs
xchg
rep
rolb
xchg
jno
mov
inc
cmovns
adc
lret
outsb
jge
ds
jnp
mov
push
mov
mov
test
xchg
cmp
fcoml
add
mov
jae
rcl
adc
fcompl
clc
jmp
mov
iret
pop
xchg
in
pop
mov
jp
jle
adc
stc
adc
jmp
push
outsl
clc
out
negl
jns
dec
mov
pop
mov
and
loope
enter
lods
dec
pop
testb
in
sub
sbb
popf
dec
mov
into
imul
insb
addr16
frstor
insb
pop
dec
jbe
iret
mov
jecxz
fsubrl
ret
lock
push
sub
mov
jmp
sti
ss
decb
sub
cli
scas
cli
xchg
out
mov
inc
mov
xchg
das
pop
ds
jbe
fsub
fidivs
jo
incl
arpl
data16
out
xchg
inc
repnz
loopne
jl
cmp
out
rol
fimuls
dec
fdivrs
mov
or
addr16
ljmp
dec
fdiv
popa
rorl
mov
orb
inc
xchg
cmp
ror
dec
mov
js
dec
repnz
dec
jge
rcrl
movl
imul
shl
stos
pop
adc
sbb
das
mov
push
mov
mov
jecxz
adc
out
dec
mov
push
clc
mov
stc
jmp
inc
rol
lret
and
push
ss
pop
test
jns
nop
movsl
cmp
jb
pop
xor
stos
or
inc
dec
mov
pop
inc
xor
adc
fiadds
ljmp
pop
pop
stos
adc
xor
add
mov
add
add
inc
je
dec
inc
add
add
add
add
adc
repz
lahf
sub
arpl
add
test
mov
pop
mov
jne
jae
adc
mov
movsl
pop
idivb
fisubrs
and
adc
inc
add
adc
cmp
add
ja
xchg
nop
push
jo
xor
push
outsl
pop
stos
adc
mov
pop
dec
pop
add
sbb
test
test
mov
sub
or
xchg
and
aad
xor
pushf
or
or
enter
sti
ds
and
out
add
add
sub
add
add
add
adc
fildll
stc
lahf
add
out
pop
fildll
iret
hlt
jo
or
iret
inc
jnp
add
jmp
addl
stc
pop
into
adc
jo
je
sub
push
repnz
mov
insb
inc
inc
out
cld
ret
pop
dec
jbe
jb
icebp
rorb
orb
sti
xchg
mov
mov
sub
fnstsw
fldenv
repz
cmp
outsl
sbb
xchg
mov
movsb
push
inc
int
aad
xchg
cmc
stc
and
sub
sub
emms
push
negl
faddp
psubusw
dec
adc
scas
test
sti
xlat
add
xchg
out
inc
cmpsb
adc
dec
sahf
adc
dec
out
jae
xor
inc
sub
mov
push
push
orb
dec
push
mov
xchg
ret
push
and
cmc
cmpsl
pop
js
aad
inc
frstor
sbb
shll
dec
pusha
js
cmc
lock
mov
sub
add
and
or
inc
push
stos
cmpsl
sbb
mov
xchg
sub
pop
mov
or
lret
sub
mov
das
aam
insl
jge
pop
outsb
mov
pop
js
inc
or
jb
jo
sbb
gs
mov
out
ljmp
pop
sub
sbb
rcr
int
mov
rcll
scas
sti
call
adc
hlt
popf
ss
mov
inc
mov
sub
xchg
gs
rorl
xchg
pop
sub
push
mov
pop
or
inc
mov
mov
push
jl
jne
inc
imul
es
rorb
sbb
mov
shll
cmp
movsb
mov
rorl
mov
push
pushf
sbb
sahf
add
sub
push
add
sub
ret
repnz
push
mov
std
dec
scas
mov
adc
aas
or
push
add
sub
cltd
cld
mov
test
xchg
xorl
out
test
xor
cmpsb
imul
mov
imul
in
add
add
push
loop
pop
movl
mov
popa
lea
or
sub
fidivl
push
push
lods
add
pusha
outsl
orb
jmp
inc
mov
pop
cmpsb
xor
insl
add
popa
pop
subl
loopne
push
and
pusha
jns
mov
aaa
inc
cmpsl
add
rorl
addb
xchg
sbb
orb
mov
mov
adc
pop
sub
clc
dec
daa
dec
add
sbb
daa
mov
mov
dec
pop
mov
mov
jo
add
and
xor
daa
adc
notb
pop
cmp
cmp
data16
fidivrs
push
mov
dec
sub
lods
xchg
rolb
ja
add
repnz
jae
sti
jp
clc
clc
imul
push
pop
cwtl
jnp
jl
outsb
adc
jle
mov
push
test
aad
lret
lret
fcmovnb
sbb
fsubrs
clc
pop
jle
pop
cld
pop
mov
lcall
xchg
xchg
xchg
jo
pop
and
xchg
xor
mov
data16
mov
sbb
loop
ffreep
jge
mov
mov
add
sbb
push
daa
imul
lahf
out
pop
cmp
ret
aas
push
push
pop
add
jle
add
mov
sub
mov
sbb
lock
inc
cmpsl
push
aas
lahf
push
leave
adc
mov
outsl
xchg
popa
pop
clc
cmp
dec
and
pop
test
enter
push
xor
xor
xchg
sub
mov
js
xchg
in
scas
imul
xor
loop
jo
setl
xlat
mov
iret
cld
f2xm1
adc
mov
adc
int3
jb
mov
mov
mov
ret
js
or
fnstsw
std
xchg
lods
mov
or
push
xor
mov
xchg
push
sub
and
inc
fiadds
icebp
movsl
dec
xor
xchg
lock
push
rol
cmpsl
cmp
cwtl
jb
mov
mov
mov
xchg
adc
lcall
movsl
and
ret
sti
int3
jno
lret
jae
mov
testl
sbb
aam
shrb
cmc
pop
xor
jo
pop
xchg
popf
fucomip
es
dec
outsl
sub
mov
shrb
sbb
in
mov
loope
lock
xlat
movsb
pop
cs
ds
stc
hlt
push
sbb
inc
push
cmp
xchg
out
or
mov
pop
dec
jb
pop
dec
ds
or
mov
mov
fwait
daa
pop
gs
shll
xchg
add
push
sti
inc
vpshufhw
sub
ret
loope
js
push
add
scas
push
fildll
pop
insl
inc
mov
popf
loop
jl
std
adc
pop
cltd
mov
pop
mov
leave
rcrb
sub
cmp
inc
dec
es
lds
lods
inc
pop
fsts
or
inc
bound
stos
cmpsb
shlb
pop
repnz
push
icebp
iret
loopne
stos
push
outsb
adc
ss
mov
in
inc
or
enter
dec
rcrb
lcall
sbb
pop
xchg
fwait
rorb
and
mov
mov
mov
test
xchg
sub
outsl
pop
adc
arpl
iret
jmp
cmc
mov
iret
out
ret
cs
cld
imul
mov
sahf
stos
xorl
sub
pop
mov
xchg
cmp
push
mov
or
repnz
call
jmp
inc
int
push
cld
and
lock
lcall
shll
push
jge
in
jle
mov
jge
fsubrl
jne
adc
pop
pusha
popf
loope
mov
xor
mov
pop
and
add
fmuls
or
or
loop
mov
popa
dec
decb
in
cmp
ss
mov
das
aad
sub
cmc
inc
pop
or
mov
mov
pop
lea
and
jb
pop
xchg
test
inc
neg
loop
adc
jl
mov
nop
stos
inc
jnp
or
adc
jecxz
push
jbe
std
cmc
sub
add
dec
lcall
push
aaa
and
ja
push
es
jmp
test
stos
imul
jne
cmp
pop
aas
pop
fidivl
icebp
imul
sub
xor
and
lds
pop
cmp
dec
mov
xchg
add
sub
mov
inc
negl
ljmp
and
pop
je
aad
ret
cld
push
ja
rorb
clc
mov
or
outsb
mov
lret
jle
test
out
pop
aad
aam
je
xlat
bound
jecxz
iret
xchg
mov
lea
imul
and
fs
or
mov
lods
aam
add
mov
push
mov
ret
mov
sbb
adc
sub
mov
xchg
and
das
std
cmpsb
mov
clc
pop
sbb
negb
cmc
xchg
jecxz
or
or
pushf
jg
adc
and
sbb
xchg
pushf
movsl
ja
leave
sbb
ret
inc
adc
fistl
fmull
insl
sbb
daa
sarb
insb
mov
jecxz
pushf
pop
mov
mov
test
xor
xchg
test
bound
jae
or
adc
cld
cmpl
mov
ds
dec
in
repz
or
sti
popa
pop
cltd
les
lods
rcrb
cli
or
inc
pop
jl
jl
outsl
pop
push
out
add
sarb
cs
shl
loop
fsubrl
or
bound
fstl
lods
cld
repnz
mov
aam
mov
jno
pop
push
sub
mov
fnstcw
cmpl
pusha
and
out
pop
clc
fs
pop
fwait
add
mov
dec
push
pop
clc
xor
mov
js
xchg
je
and
or
cmc
subl
and
ja
dec
and
aad
pusha
icebp
xorb
sbb
inc
mov
push
rorb
rcll
inc
sub
mov
testb
xchg
mov
out
pop
lea
pop
xor
xor
add
dec
and
pop
xchg
add
pop
test
mov
mov
pop
iret
aam
in
ss
in
outsb
lods
push
adc
lcall
inc
lahf
mov
ret
mov
divl
movsb
cmpsl
sub
dec
mov
sbb
jo
rcl
insl
adc
xchg
mov
rcll
jmp
idivb
inc
gs
or
pmaxub
or
scas
icebp
push
cmpb
xchg
fs
inc
adc
jns
cmpsl
sarb
aad
nop
mov
imul
imul
pop
sbb
xor
inc
mov
and
sti
in
insb
fucom
mov
cwtl
adc
roll
int
pop
dec
or
mov
inc
mov
sub
mov
mov
push
enter
inc
push
xchg
popf
cli
pushf
mov
inc
push
call
ret
jnp
hlt
mov
sarl
loopne
into
adc
and
jg
xchg
int3
xchg
clc
push
xor
aam
movsb
lds
aaa
insb
stc
push
mov
push
dec
fdivr
cld
jo
mov
sub
xor
xchg
and
adc
inc
in
shlb
push
ljmp
adc
lret
test
jb
insl
scas
xchg
imul
push
ja
movsb
cs
cmp
sub
pop
mov
add
arpl
in
sbb
xlat
fs
xchg
movsl
sbb
ret
fnstenv
outsb
jge
fildl
mov
dec
std
mov
inc
jo
or
adc
and
jo
cmp
out
sarb
sbb
daa
xchg
sub
test
cmpsb
scas
test
loopne
int
inc
and
push
lds
sub
jl
xchg
lcall
pusha
les
ret
add
and
pop
sbb
fists
sti
xor
cmp
push
push
divb
xor
push
jecxz
sarl
cld
lcall
gs
fmulp
out
arpl
cltd
push
push
ds
cld
insl
adc
jns
push
jle
cmp
push
cmp
dec
sub
cmc
rorl
dec
ret
mov
xchg
pusha
iret
in
popf
cmp
shll
shrl
sbb
out
jge
rorb
xchg
inc
sti
xchg
inc
mov
adc
or
fidivrl
stos
nop
jmp
test
mov
mov
sbb
cli
adc
adc
and
lods
mov
pop
xchg
lea
lret
push
sarl
aaa
add
jge
cltd
lods
jnp
ds
leave
fdivl
shll
push
pushf
lea
dec
mov
add
sti
sub
rorl
aam
repz
shll
dec
into
into
mov
sub
sub
icebp
cmc
pop
push
sub
pop
add
ds
daa
pop
jp
xchg
mov
pop
inc
or
cmpsb
add
mov
shlb
fisttpl
ja
sbb
or
cmp
lods
mov
dec
adc
stos
imul
adc
pop
rcll
clc
int3
push
test
out
push
ljmp
mov
add
mov
leave
jecxz
and
pop
movsl
push
jmp
mov
dec
ja
dec
rorl
sbb
push
add
mov
adc
scas
push
in
insb
dec
push
add
xchg
cmp
movsb
fimuls
mov
or
pushf
insb
xor
sub
loop
or
mov
push
mov
sub
hlt
inc
dec
int3
out
or
mov
mov
xchg
dec
xchg
adcl
lock
mov
negl
js
push
lcall
clc
and
call
sarl
mov
jno
cmc
push
out
movsl
jg
inc
mov
push
inc
mov
jecxz
mov
mov
jle
shll
bound
add
push
mov
jno
dec
lea
sbb
or
fs
and
sbb
xlat
out
addr16
rcrb
insl
jae
icebp
mov
push
jle
sub
stos
leave
sbbb
loopne
cmp
adc
inc
fdivrp
clc
push
enter
add
addr16
sub
push
mov
test
xor
cmp
aam
pop
call
mov
or
xchg
cli
cmp
out
push
rclb
cltd
imull
shll
out
jmp
and
pop
into
inc
ljmp
sbb
jp
ljmp
mov
scas
popf
enter
mov
add
push
sbb
std
in
in
and
jo
inc
gs
cltd
sbb
cld
testl
inc
pop
pop
cld
les
jecxz
imul
mov
rclb
lcall
mov
and
paddq
ret
loopne
out
cmp
push
or
stos
imul
inc
jle
inc
outsb
xchg
sbb
xchg
ds
fs
sbbl
leave
mov
aam
nop
jecxz
lea
or
divb
imulb
int
std
mov
sbb
movsl
insl
aam
mov
je
cmp
cmpsl
lds
xor
arpl
aas
xor
cmpsb
test
cmpsl
pop
cmp
imul
popf
sbb
pushf
out
das
push
clc
fwait
jle
pop
mov
adc
mov
sti
fcompl
testl
xor
in
je
or
sub
mov
add
test
out
stc
sub
jns,pt
cltd
negb
aas
adc
mov
sahf
mov
aas
or
mov
mov
lods
fnstenv
pop
iret
add
orl
inc
push
int
ret
dec
leave
inc
arpl
loopne
loopne
mov
mov
popf
mov
shll
push
push
mov
or
scas
ja,pn
stc
adc
and
enter
aad
mov
out
lea
or
or
push
lock
cmc
pop
lcall
push
jl
xor
inc
popa
adc
pusha
int3
aad
mov
sbb
into
aad
adc
mov
mov
dec
cmp
rclb
iret
add
dec
cmp
cmp
ret
jg
xchg
xchg
addb
mov
add
les
dec
xchg
or
fidivs
xor
repnz
fcompl
push
fs
sub
add
out
loop
xor
adc
dec
call
inc
lcall
test
push
add
and
push
out
repz
clc
int3
stc
xchg
push
clc
adcl
rcl
sub
jns
cli
cwtl
mov
xchg
jno
pop
add
outsl
jns
mov
repz
sub
std
sbb
out
push
lods
push
out
shl
mov
aad
sub
cmp
sarl
cld
repz
adc
ds
inc
adc
stos
mov
mov
mov
fincstp
inc
dec
push
pop
outsb
repnz
pop
stos
push
inc
pop
rcll
sub
stos
stos
jnp
pop
adc
and
mov
jae
jl
and
jo
loope
mov
loopne
test
inc
adcl
test
inc
rorb
std
and
popa
mov
mov
jns
daa
xchg
jno
loopne
cmp
mov
lea
bound
cmp
pop
insl
pop
in
hlt
mov
clc
lods
xchg
aas
push
mov
xorb
xchg
lds
cmc
or
pop
or
push
cmc
mov
inc
subb
rcr
iret
ret
rorl
jle
cmpsl
stos
pop
bound
xchg
sbb
xchg
aam
mov
push
mov
cltd
dec
mov
dec
in
mov
mov
jne
jp
mov
dec
sub
mov
cli
add
cmpb
fucom
test
sahf
es
into
mov
add
and
mov
push
mov
sub
add
jg
xchg
loope
push
sub
stos
dec
adc
ficoms
xchg
enter
shlb
pop
clc
rol
adc
xor
clc
mov
pop
fistpll
idivb
je
or
mov
sub
jp
js
call
mov
je
xor
mov
aaa
paddsw
and
pop
xor
ret
sbb
sbb
aaa
or
lcall
jae
or
adc
call
push
imul
mov
inc
lret
dec
inc
mov
std
or
lds
in
xor
dec
mov
loopne
sub
rorl
lods
loopne
out
adc
mov
vmulpd
mov
jg
adc
cwtl
stos
iret
aaa
shl
out
fcomi
rcll
jg
mov
and
mul
sub
xchg
adc
xor
jno
out
add
insb
and
dec
add
inc
outsl
stc
pop
xchg
jae
pop
call
fcomps
dec
jbe
mov
push
inc
cmp
pop
daa
jp
pop
mov
call
daa
or
push
es
mov
pop
mov
adc
lret
and
mov
das
dec
xor
call
addb
pop
xlat
ficomps
sub
fstl
and
sahf
mov
and
out
addr16
cmp
push
sbb
loope
or
jbe
out
pop
sub
xlat
aaa
and
test
imul
jnp
ss
data16
pop
push
jns
mov
in
pop
lods
mov
loopne
xor
jnp
cmp
push
clc
test
movsl
ret
insl
cmp
adc
mov
sbb
inc
cmp
pop
bound
mov
mov
or
repz
aaa
xor
cli
into
push
dec
cld
daa
js
data16
push
lret
movsb
movsl
jle
jecxz
aaa
adc
stos
ljmp
lock
fcompl
in
pusha
scas
scas
movsl
mov
or
mov
push
pop
pushf
das
pop
inc
pop
push
movsl
orl
popf
out
push
fsubl
loopne
sbb
mov
push
mov
mov
sub
sbb
cwtl
inc
push
adc
jp
clc
imul
inc
add
dec
lret
sub
jp
adc
aad
sbb
or
cmp
roll
push
aam
shlb
cmp
sub
bound
movsl
push
mov
mov
or
in
aad
dec
jnp
fidivrs
dec
push
mov
sub
dec
test
int3
jle
mov
dec
hlt
jae
lock
pop
jl
sub
xlat
sub
mov
cmc
shrb
cmp
sbb
adc
imul
loop
ja
js
outsl
xor
pop
sti
push
hlt
sub
ror
mov
dec
std
out
fldt
sub
sbb
pusha
fcompl
cmp
insl
xchg
dec
pop
sub
mov
add
and
dec
into
xor
iret
int
das
or
int3
or
dec
stos
test
popf
call
mov
clc
shl
iret
mov
je
mov
aam
aam
cli
mov
mov
icebp
ljmp
sbb
mov
sub
icebp
adc
fwait
and
dec
pop
cmp
pop
mov
mov
pop
rorb
in
or
outsb
mov
add
or
mov
arpl
cltd
mull
incb
cmp
fstpt
mov
jle
inc
or
loop
imul
inc
ds
ss
sub
ss
out
test
sbb
adc
aam
pop
pop
aaa
ror
mov
or
or
pop
ljmp
mov
icebp
mov
lret
iret
inc
arpl
test
out
mov
mov
dec
xchg
push
repz
dec
sub
push
stos
inc
sub
out
cmp
mov
outsb
sahf
stos
aas
lock
lds
jb
mov
cmpsl
lea
data16
push
popa
aas
xor
not
das
sub
stos
and
or
ja
push
mov
fs
mov
stos
sub
std
cmp
je
mov
dec
sti
fsubl
jne
iret
xchg
xchg
xchg
xlat
gs
cli
adc
dec
inc
scas
jg
jo
and
cmpsl
sbb
pop
mov
sti
sbb
aad
ljmp
dec
jb
mov
push
xorl
adc
js
push
or
or
xchg
jmp
mov
cs
lea
lahf
rorb
pop
int3
adc
mov
mov
test
repnz
in
mov
or
lds
add
pusha
add
mov
out
into
dec
sbb
rorb
ljmp
outsl
adc
clc
and
aas
mov
cmp
lret
aam
loop
test
insl
push
lret
stos
dec
mull
fs
std
lea
addr16
dec
adc
rol
push
mov
sbb
repz
sub
stc
rcrb
mov
sub
icebp
pop
adcb
xchg
jecxz
xchg
lds
insl
sar
xor
pop
push
push
jge
call
cmp
or
inc
xchg
xor
pop
test
movsl
int
bound
in
sbb
fldl
mov
fcoml
aaa
dec
cmpsb
notb
andl
in
mov
loopne
xor
push
jbe
dec
and
push
lret
xchg
sub
ljmp
dec
pop
mov
loopne
or
stos
loop
xchg
shr
pop
shll
push
cmp
mov
jg
inc
mov
in
cmp
push
add
outsl
pushf
loopne
dec
xchg
mov
in
add
push
aas
lods
sub
lret
or
inc
outsl
roll
jge
nop
call
cmp
lret
mov
stc
jno
loop
mov
add
pusha
mov
mull
mov
xchg
test
sti
add
mov
add
and
mov
jo
cmp
int3
sbb
sbb
fidivs
arpl
aas
mov
in
cli
xor
das
outsl
mov
mov
adc
dec
cmc
and
lret
mov
mov
shlb
scas
or
sub
fbstp
sub
xchg
fwait
mov
movsl
push
add
pushf
aad
rcrl
xor
mov
enter
and
lcall
xor
dec
pusha
rorl
mov
push
div
scas
xchg
adc
xorl
jae
push
lea
xlat
loop
add
or
insb
ss
es
loope
dec
clc
clc
jne
pop
outsb
pusha
in
arpl
js
lock
push
add
fucomi
adc
push
scas
movb
jns
enter
pop
jne
test
mov
mov
jb
fbstp
cld
shll
sub
test
mov
jo
stos
sbb
imul
push
dec
es
mov
dec
pop
fstpt
bnd
aad
sub
rcll
scas
int
push
js
pop
and
sub
jo
fcmovbe
in
loopne
mov
mov
ret
inc
imul
lock
pop
pop
mov
lahf
or
cmp
mov
lret
rcrb
and
mov
in
sub
push
sbb
xchg
dec
pop
fsubl
decl
cmp
lret
pushf
xor
sbb
inc
sub
adc
ja
mov
pop
out
mov
push
std
insl
and
gs
dec
arpl
push
xor
loope
adc
shlb
xchg
jp
cmp
fcomi
push
sahf
fwait
push
cmpsb
xor
push
insl
sti
mov
fidivrl
stos
sub
xlat
jmp
je
shlb
inc
negb
add
pusha
xor
je
pop
or
aas
call
sahf
pop
js
xlat
fimull
inc
mov
dec
pop
dec
xor
mov
leave
fildl
mov
data16
scas
push
fdivs
enter
jg
lock
mov
fcomp
mov
lret
sub
insl
lea
fisubrs
xchg
aas
xchg
add
cmp
mov
sub
push
test
mov
int
jg
aad
xchg
cmpsb
cwtl
sbb
repz
popa
xchg
xchg
xchg
mov
jne
jl
mov
imul
pop
push
cmc
cmp
push
dec
cmp
cs
test
inc
gs
dec
faddl
test
mov
sub
loop
push
pop
sbb
in
mov
adc
ss
mov
sub
rcr
jmp
inc
or
add
cmp
sti
stos
mov
bswap
popf
outsb
in
ja
mov
sbb
add
stos
cmp
cmp
fadds
lods
lock
pop
jbe
push
mov
hlt
lods
cmp
adc
ljmp
jne
inc
push
popf
scas
out
xor
lock
jle
fwait
je
adc
pop
les
sub
test
cmc
pop
add
adc
xchg
xchg
fstps
leave
cwtl
sub
insb
enter
xchg
or
in
cmpsb
cwtl
cmpsb
cmp
inc
push
inc
mov
out
fmuls
dec
mov
dec
popf
shlb
or
js
dec
sub
lock
pop
mov
fldt
push
aaa
repz
fistps
sbb
ret
mov
out
jle
fsubrl
add
mov
cmp
mov
neg
aas
inc
iret
mov
clc
aas
push
ljmp
mov
mov
jae
rcrl
mov
jnp
add
lret
lock
mov
sti
aam
call
mov
sbb
lds
xchg
pop
insb
je
mov
fsubrs
mov
inc
loopne
cltd
subl
mov
push
push
inc
cmp
dec
sub
push
fstpl
outsb
incb
jle
xchg
clc
loope
sbb
xor
adc
pop
jge
jnp
in
fwait
mov
sbb
mov
sub
iret
mov
cli
in
iret
movsl
inc
repz
iret
inc
out
jp
stos
push
cmc
adc
enter
xchg
notb
xor
xor
nop
movsl
mov
push
or
mov
jmp
mov
sub
dec
xorl
out
stos
sbb
out
cmp
pop
fidivrs
mov
fwait
dec
sub
jmp
push
lret
negl
mov
in
out
shrl
scas
cmp
out
pusha
jmp
lods
mov
push
clc
mov
dec
fwait
xor
pop
fstl
cmc
inc
dec
adc
movsl
out
shl
dec
mov
inc
cmp
call
jg
jns
sbbl
fiaddl
push
sbb
xor
or
sbb
movsb
lods
pcmpgtd
jg
mov
mov
dec
shr
stos
jmp
movsl
int
ds
inc
gs
addb
in
out
mov
cwtl
test
sbb
pop
jbe
sub
jns
clc
sti
outsb
dec
cli
jl
lret
and
sub
aam
es
mov
mov
add
inc
subb
cmp
xchg
mov
fiaddl
orb
dec
mov
rcr
mov
mov
and
mov
ret
movsb
mov
loopne
push
loope
pop
pop
shrl
repnz
pushl
arpl
mov
cltd
pop
mov
jge
push
aad
mov
pop
cmp
xor
test
pop
pop
shll
mov
les
push
data16
int
hlt
dec
stc
or
insl
add
jge
add
and
ret
decb
xor
sti
repnz
das
or
aas
faddp
mov
push
xchg
sub
jo
aaa
pop
or
data16
adc
iret
enter
pop
add
outsl
lcall
mov
je
pop
or
aam
adc
cs
sub
mov
inc
mov
sub
jbe
jg
xchg
mov
fdivp
stc
shll
jmp
lret
nop
arpl
jle
movsb
xchg
xor
stos
loopne
repnz
clc
test
xor
rcll
xchg
add
bound
or
rcrb
pop
loopne
daa
ss
lods
in
jmp
sub
pop
insl
jmp
cmpsl
loope
cmp
sbb
push
test
push
jle
rcrl
filds
das
adc
fwait
sbb
test
fwait
cmp
push
imul
mov
push
ret
std
and
sar
in
or
add
cmc
mov
lds
je
movsl
iret
addr16
pusha
fadds
scas
add
mov
adc
or
adc
stc
push
lods
push
mov
cltd
lahf
sbb
in
loopne
push
movsl
sbb
add
fadds
jecxz
cmpsb
shll
dec
push
pop
mov
mov
subl
shll
cld
jle
push
roll
scas
or
les
xor
mov
push
in
popa
iret
ja
out
pop
fiadds
in
out
sub
dec
fisubs
xchg
fistpl
testl
test
push
into
clc
adc
push
xor
push
mov
push
nop
ljmp
mov
jle
cmp
jae
inc
inc
add
rolb
rcrb
insb
cmp
mov
popf
mov
xchg
mov
jno
jge
lret
sbb
addr16
mov
jo
jge
cltd
sbb
pop
jnp
add
lahf
into
pop
or
xchg
in
jns
push
test
sub
jbe
imul
push
fstl
inc
xor
cmp
repnz
inc
idivb
sub
sub
sub
or
xchg
push
out
mov
mov
aas
adc
clc
or
push
cmpsb
outsb
push
mov
pop
lea
aaa
jno
ret
add
sbb
pop
add
xchg
dec
pop
inc
add
mov
mov
stc
lods
das
cmpsb
dec
push
mov
pop
popa
push
mov
fiaddl
popa
cltd
insl
sbb
mov
push
push
repz
mov
mov
fcmovnu
mov
sbb
and
cltd
lods
lret
inc
pop
xor
push
inc
dec
cltd
mov
mov
dec
or
mov
icebp
xlat
pop
in
and
inc
fisttpll
and
fistpll
fsubl
sahf
cwtl
push
sub
test
lea
push
fiaddl
sbb
push
aaa
mov
sarb
mov
push
int3
scas
loopne
push
out
int
repz
push
mov
xchg
lahf
push
and
pop
testl
testl
pushf
stc
icebp
and
mov
pop
jge
fwait
xchg
push
jge
jne
mov
mov
mulb
fildll
mov
stos
insb
mov
mov
insl
dec
rclb
and
dec
jne
dec
repnz
ffreep
mov
idivb
clc
and
out
hlt
aad
sub
cmp
stc
addr16
out
orl
adc
jecxz
jle
and
add
fnstenv
sub
mov
mov
std
xchg
pop
mov
ret
daa
dec
lods
nop
test
mov
js
mov
mov
imul
movsb
mov
subl
adc
sub
iret
mov
scas
or
xchg
scas
mov
das
clc
adc
push
outsl
aaa
insl
cltd
cld
push
cmp
push
add
hlt
adc
sbb
outsb
test
mov
clc
adc
cs
or
pop
xchg
scas
rorb
pop
daa
or
jmp
les
xor
xor
mov
push
push
lock
push
enter
mov
out
rep
stos
pop
hlt
push
pushf
xor
rorl
adc
or
mov
lods
push
repnz
xchg
ja
xor
cmp
out
popa
test
cmpsb
repz
movsl
xor
inc
icebp
shlb
lcall
pop
subl
out
jle
mov
cwtl
cwtl
jg
sarb
js
push
cmp
inc
iret
sbb
out
not
xor
cmp
and
cmp
insb
xchg
pop
cmpsl
arpl
jo
jbe
pop
mov
fnstsw
clc
xchg
repz
jo
mov
pop
jo
cmp
cmc
sub
push
pop
mov
pop
fistl
push
idiv
pusha
stc
push
jle
mov
mov
cmc
pop
imul
pop
cli
sbb
sbb
cwtl
aaa
icebp
sub
push
xchg
mov
mov
aas
imul
mov
dec
add
jle
pop
pop
scas
dec
jmp
pop
jecxz
pop
in
lock
xor
mov
and
loope
jae
pmaxsw
jne
inc
xchg
mov
mov
push
clc
push
push
cli
xor
sbb
mov
mov
xchg
imul
aam
rcr
fs
xchg
shlb
in
dec
xorl
dec
scas
lea
dec
push
push
inc
lods
mov
xor
xchg
cmc
mov
iret
sbb
pop
popa
sbbl
xlat
movsb
sbb
out
mov
and
repz
fildll
popa
cld
ds
dec
aas
into
dec
pop
push
sbb
xchg
push
cmp
push
or
movsb
cmpsl
inc
je
fisubrl
enter
pop
sbb
frstor
xchg
add
rolb
mov
pop
sub
in
loopne
inc
mov
cmp
xchg
xlat
add
adc
mov
sar
inc
loope
add
mov
xor
pusha
jae
in
das
dec
xor
mov
mov
lahf
adc
inc
add
pop
fwait
jecxz,pt
jbe
inc
outsb
add
cmp
jmp
xor
mov
mov
mov
loop
lods
in
loopne
int
jb
cli
inc
inc
dec
das
pop
sbb
clc
push
in
enter
ljmp
shlb
leave
jmp
repnz
pop
add
ljmp
push
mov
cmc
data16
sub
je
adc
mov
cmp
in
subl
jp
lahf
jnp
jl
jp
fs
mov
movsl
fidivl
cmp
test
flds
sarb
push
scas
int3
jo
repz
jge
cs
stos
fcmovnbe
jne
adc
jnp
lds
xchg
sbb
and
repz
fcom
movsl
in
test
rclb
mov
jle
outsb
rolb
cmp
sbb
add
sti
mov
das
xor
jp
and
mov
jge
sub
repz
mov
mov
repz
mov
das
jnp
shrl
into
aam
cld
sbb
cwtl
mov
test
jl
fimuls
sbb
cmp
pop
lcall
loop
cwtl
out
jecxz
fnsave
in
xor
add
sti
mov
xchg
int
xor
adc
iret
mov
scas
orl
sbb
sahf
int3
pop
sbb
dec
daa
sbb
out
arpl
repz
mov
enter
call
push
js
into
push
sbbl
mov
cmp
xchg
pusha
jle
aaa
push
sti
lds
fstl
xchg
popf
adc
add
jae
adc
andl
and
test
in
push
fstpt
pop
sub
leave
lret
fmuls
jmp
mov
out
stc
jmp
and
pop
fadd
lods
cmp
stos
pop
xor
imul
pop
rcll
sti
mov
stos
pushf
mov
mov
insl
xchg
es
jno
push
jle
rcr
cmovbe
rorl
jne
into
mov
dec
mov
sub
and
in
push
add
repnz
loopne
push
int
in
push
cmc
das
fadds
shlb
repz
cmpsb
mov
arpl
cmp
sahf
in
pop
jg
fidivs
loopne
pop
test
and
sbb
ret
cmpb
adc
fcmovb
push
jecxz
add
push
mov
push
int
lcall
pusha
adcb
sbb
clc
fwait
cmp
repnz
sbb
ja
jnp
fstpl
mov
stc
xor
jae
pop
test
inc
jg
call
inc
mov
push
mov
inc
aad
and
idivl
int
test
dec
popa
lret
and
out
inc
pop
pop
arpl
jg
cwtl
fwait
push
data16
sub
gs
push
cmp
in
inc
hlt
cmc
cmp
repz
add
incl
js
loop
mov
outsb
rclb
xor
sub
pop
shlb
lods
movsb
aaa
or
ja,pn
test
test
mov
testl
mov
mov
out
pop
filds
jo
pop
jecxz
aaa
stos
loop
loopne
lret
gs
pop
inc
mov
outsb
fstpt
cmpsb
pop
cmp
mov
fdivrs
push
js
xchg
fwait
sub
mov
sub
add
aaa
add
dec
shrl
pop
jmp
mov
insl
jp
sbb
leave
xchg
dec
push
mov
insl
add
into
pop
xchg
hlt
cltd
pop
aaa
lods
fidivl
lea
inc
ret
mov
push
data16
negl
push
jecxz
pop
inc
adc
add
push
inc
ja
rol
into
jns
mov
ds
lahf
call
sbb
mov
movsb
lds
xchg
lea
dec
je
int3
iret
jne
mov
fmull
shrl
in
or
pop
xor
pop
jg
mov
inc
mov
xchg
lods
sti
fisubrl
mov
push
faddl
mov
mov
mov
pop
adc
xchg
test
rcll
outsb
scas
jecxz
inc
xchg
and
or
pushl
into
xchg
loop
enterw
sub
fs
mov
cmp
and
sub
cmp
xchg
mov
loope,pt
jle
vmptrst
xlat
fdiv
add
jb
test
rol
shr
into
push
scas
xor
popf
in
xor
imul
jno
sub
loopne
sbb
jne
fildl
mov
mov
dec
popa
mov
fsubs
std
addr16
out
jo
xchg
pop
pushf
lds
jle
and
jl
in
leave
sub
and
xor
sbb
sub
das
movsl
movsb
and
inc
out
cmp
xor
mov
mov
lods
inc
add
jecxz
mov
pop
lock
fstpl
sti
cmpsb
jge
pop
adc
out
push
ret
sti
subb
stos
mov
movsl
mov
loopne
cmp
xor
push
mov
push
aaa
ljmp
imul
pop
xor
das
aam
xor
loopne
mov
adc
sbb
sbb
icebp
ret
ds
in
cld
sbb
pop
imul
stos
pushf
in
push
stos
or
clc
std
ljmp
cmp
mov
shrb
scas
mov
adc
mov
sub
or
fwait
and
in
adc
jge
sub
inc
comiss
xchg
jge
jo
sbb
test
movsb
outsb
sbb
pop
mov
xchg
sub
jecxz
outsb
xchg
popa
add
pop
jo
mov
sahf
cmp
pop
mov
andb
rcll
push
out
fisttps
popf
pop
test
cmp
mov
add
mov
mov
cld
lods
shrl
hlt
jmp
push
andl
sub
push
lods
push
xchg
dec
pop
test
fdivl
jge
push
pop
xor
cltd
lahf
dec
push
testb
in
rorb
mov
roll
inc
mov
out
lret
jg
xchg
or
icebp
lcall
sub
popa
jne
inc
adc
call
cmpsl
arpl
xlat
cmp
gs
mov
hlt
sti
push
mov
pop
fs
mov
ret
lock
inc
test
xchg
sbb
add
cmpxchg
test
mov
mov
iret
mov
inc
adc
in
mov
lods
lds
shll
imul
xchg
mov
mov
and
sub
mov
jge
fstl
test
mov
push
push
add
xchg
sub
imul
xor
je
outsl
fists
aas
in
push
movsl
jae
cli
inc
pop
addr16
out
pop
in
aam
push
lret
test
xchg
or
add
sub
enter
inc
push
lods
and
and
sbb
xchg
leave
xchg
enter
xchg
fwait
jmp
pop
hlt
mov
push
mov
jge
ss
in
pusha
lods
jbe
fwait
xchg
popa
scas
or
sbb
mov
adc
pusha
in
fstpt
mov
push
jmp
push
xor
test
jecxz
xor
outsb
pop
xor
stos
iret
adc
sti
test
jnp
mov
adc
orb
pop
mov
clc
and
jmp
scas
sbb
or
ret
pop
mov
aas
dec
loopne
cmp
pop
pushf
outsl
xchg
pop
adc
clc
popa
push
cli
inc
pushf
iret
sahf
cli
push
xchg
mov
scas
loope
stos
cwtl
pop
and
in
cmp
fistpll
adc
movsl
nop
cmpsl
cld
in
jno
data16
dec
loopne
jmp
xchg
outsl
repnz
lret
scas
mov
sub
push
xor
xlat
call
jbe
pop
push
je
mov
jbe
fildll
adc
mov
mov
cwtl
lretw
mov
cmpsl
sbb
imul
fwait
mov
jo
and
aas
add
xchg
addr16
inc
jmp
loope
push
clc
mov
mov
jnp
and
mov
fisttpll
pop
nop
cmpsb
pop
jle
pushf
ljmp
mov
push
stos
mov
outsb
mov
pop
dec
adc
iret
inc
aam
xchg
loope
fdivrp
and
or
mov
add
mov
inc
mov
xchg
in
adcl
cmp
imul
imul
clc
push
push
imul
stos
scas
pop
mov
ret
xor
nop
jmp
and
mov
adc
push
or
xor
pop
mov
inc
mov
push
sarl
jns
out
mov
scas
push
mull
jl
xchg
fs
outsb
inc
in
or
cli
xchg
adc
pop
sbb
dec
das
cwtl
js
cs
shlb
ss
sbb
mov
xchg
shl
mov
sub
mov
cmp
cmp
mov
jge
inc
jge
add
out
push
out
mov
or
sub
mov
out
pop
jb
test
xor
ja
and
sbb
repnz
int
or
jg
into
jge
cmp
push
xor
xchg
mov
fstpl
into
leave
es
mov
jo
stos
aas
and
shlb
mov
cmp
push
stc
mov
xchg
ret
dec
orl
pop
dec
sub
dec
ret
sbb
jle
inc
jle
mov
fs
jno
jo
jno
mov
clc
mov
frndint
bound
xchg
pop
adc
jle
xchg
push
std
mov
andb
mov
dec
cld
rcl
out
jno
fs
icebp
js
jl
sbb
movsl
mov
sbb
jns
xlat
mov
in
ljmp
dec
adc
jge
sbb
add
int3
aaa
xor
or
mov
cmc
adc
shl
negb
push
cld
es
fidivrs
outsl
mov
dec
loopne
scas
aam
insl
adc
mov
mov
mov
das
mov
es
int
inc
rorl
dec
data16
pop
and
and
lahf
or
inc
inc
loope
or
push
sbb
cmp
xchg
inc
in
sbb
xchg
jle
stos
jge
lret
lret
cmp
sbb
push
xchg
rorl
aam
push
sahf
jno
icebp
fsubrp
xor
pop
push
inc
nop
fstl
andl
add
mov
bound
dec
std
ljmp
push
pop
pop
xchg
outsl
cmp
pop
mov
sub
in
jle
and
mov
add
cmp
mov
scas
daa
jge
mov
enter
jl
in
imul
mov
out
xor
imull
mov
rol
ss
fildll
sbb
push
add
sub
mov
push
pop
push
andl
imul
push
cmc
sub
into
popf
stos
ja
cli
jge
roll
sbb
aaa
dec
and
test
xchg
xchg
or
push
popa
adc
hlt
stos
loop
dec
lock
lds
stos
pop
lock
mov
stc
stos
out
inc
in
repnz
vcvtsd2si
outsl
inc
test
sub
cwtl
adc
daa
inc
xchg
vsubsd
outsl
lret
gs
pop
fld
faddl
lods
loop
jle
jg
out
imul
inc
mov
xchg
rcrl
rcr
push
cs
out
jns
cltd
xchg
pop
enter
loope
jbe
je
cmpl
lret
aam
push
gs
popf
test
jb
in
into
cmp
dec
mov
ds
sbb
xor
lea
xchg
and
push
push
xor
sbb
call
pop
xor
jbe
mov
paddsw
ficomps
mov
int
and
fidivrs
and
out
scas
out
aam
mov
movb
sbbl
xor
mov
insl
pop
rclb
in
adc
std
in
jbe
push
jo
xchg
or
movsl
inc
stos
and
scas
adc
and
in
and
add
aad
pusha
rcr
sub
inc
xchg
shrb
and
popf
and
mov
cmp
or
popf
add
int
andl
dec
sub
outsb
ja
sbb
scas
and
jne
sub
xchg
repnz
sti
dec
mov
mov
subl
pop
int3
popf
jmp
cmp
leave
mov
push
repz
sub
repz
ljmp
outsl
fmul
repz
cmp
fisubrs
insb
arpl
mov
adc
in
addr16
stos
outsl
adc
movsl
imul
mov
jns
xchg
xchg
sbb
and
cmp
push
call
mov
cmc
popa
test
jecxz
test
jle
out
test
and
fists
sub
xchg
xor
dec
shll
hlt
inc
pop
or
lods
jne
or
test
add
cmpsl
mov
xlat
repz
test
cld
push
cmc
in
test
sbb
dec
mov
inc
mov
xlat
sarb
jnp
mov
roll
dec
sub
test
dec
xor
cmp
inc
adc
shll
lods
mov
jecxz
mov
pusha
pop
jle
pminsw
mov
fmull
adc
push
stc
dec
outsb
pushf
adc
cltd
pop
loope
xor
cwtl
sub
out
daa
lock
lock
adc
movsb
push
repnz
leave
xchg
push
ljmp
fstps
mov
mov
test
mov
lods
ret
push
insl
test
cltd
adc
sub
mov
aad
lret
sub
dec
jne
ret
dec
cmpsl
push
mov
in
icebp
add
jl
stos
adcl
jg
push
rcll
adc
cld
jo
int
test
arpl
sub
rcll
outsl
adc
imul
sbb
push
lods
mov
in
enter
fsubl
jge
inc
push
adc
je
popf
imul
push
mov
inc
lahf
outsb
imul
mov
xchg
jo
push
inc
jp
scas
mov
adc
push
out
lds
inc
clc
test
mov
adc
adc
loopne
mov
mov
xor
mov
fcomp
das
test
sbb
pop
pop
lock
test
xchg
xor
mov
hlt
xchg
and
push
ja
lock
test
cli
cmp
loopne
loope
cmpl
mov
stos
in
push
jno
adc
lock
cli
insb
mulb
ucomiss
inc
hlt
das
stos
jmp
add
sbb
ja
xor
adc
mov
and
dec
mov
fs
mov
add
mov
sub
cmc
roll
add
lods
xor
and
mov
push
cmp
ljmp
or
sub
xor
das
mov
lcall
mov
fcoml
fstpl
push
arpl
popa
js
pop
stos
mov
and
rcrb
pop
mov
dec
imul
jmp
dec
aad
push
int
mov
in
or
iret
mov
popa
xor
jle
popa
cmc
adc
xor
mov
stos
shll
pop
pop
es
stc
out
lock
sti
mov
and
inc
push
aad
call
sbb
sahf
adc
nop
aad
movsl
mov
mov
out
aaa
adc
out
xchg
dec
jno
xchg
xor
jne
pop
mov
pop
and
push
ucomiss
jb
mov
jp
xor
test
inc
sub
loop
leave
xchg
sub
rcll
jbe
call
dec
dec
push
lods
test
popf
test
xchg
sbb
mov
pop
scas
shlb
jle
xchg
int
inc
adc
push
adc
push
xor
xchg
clc
daa
mov
cmp
push
stc
orl
stos
cmp
ss
mov
mov
test
mov
xor
insb
sub
clc
in
jns
inc
mov
fidivrs
sbb
xor
mov
push
shll
mov
inc
ja
mov
jo
insl
call
jp
in
push
pop
shll
inc
jmp
in
mov
xor
data16
rcll
pop
loopne
cmp
mov
xor
mov
fisubs
fisubrs
pop
mov
aas
push
dec
mov
adc
mov
xchg
mov
jecxz
or
jl
sarb
outsb
xchg
pop
test
out
pop
cmp
testb
xchg
loop
clc
jb
in
xchg
rol
inc
jnp
push
xlat
out
ret
out
xor
sbb
jle
lea
and
jb
xchg
nop
sub
lods
ret
fmuls
int3
dec
aad
jl
repz
orb
dec
xor
repz
faddl
lods
int3
jno
push
stos
pop
cmp
les
std
popf
cmp
test
subl
enter
cmpsb
push
and
insl
lret
inc
orl
in
sub
loopne
mov
sbb
movsl
adc
sahf
cmp
aaa
pop
mov
push
mov
or
mov
jg
push
sbb
stos
xchg
mov
rcl
push
mov
lret
loop
mov
adc
call
and
bnd
cmp
push
mov
adc
jg
gs
xchg
imul
movsb
or
jp
ret
push
dec
sbb
sahf
adc
imul
pop
push
adc
gs
loop
sub
dec
xchg
in
pusha
out
sub
fnsave
mov
push
xor
pop
rcrb
in
cmp
jecxz
dec
lahf
jmp
rep
jo
push
mov
in
outsb
xchg
pop
sub
and
testl
das
fcomps
push
cld
ret
movsl
fdivrp
fdiv
or
push
pushf
fwait
shlb
mov
std
ficomps
ret
mov
push
mov
lcall
loopne
roll
add
les
lea
pop
pop
sarl
loope
inc
fisttpl
xor
and
add
adcl
hlt
jl
and
enter
mov
mov
mov
iret
dec
test
jmp
adc
xchg
popf
or
push
lock
shll
and
jecxz
xchg
shrl
inc
mov
daa
add
inc
pop
pop
xor
insb
mov
jmp
in
push
or
jl
in
aam
ds
mov
pop
mov
imulb
pop
fnstcw
sbb
lret
mov
scas
inc
repnz
add
int
fidivl
inc
int
daa
lods
mov
mov
xor
sar
sub
push
dec
divb
pop
sahf
bound
lret
jecxz
lret
mov
push
mov
pop
add
in
xchg
jg
fnstenv
push
xchg
je
lea
test
mov
out
pop
enter
in
movsl
and
sub
mov
cmp
cmpsl
mov
mov
cmc
cmp
xchg
ret
sti
xchg
hlt
push
cwtl
cmpsl
and
pop
sub
aad
add
in
push
insl
loopne
mov
orl
out
das
mov
in
jae
in
test
call
jge
call
fnsave
sahf
sbb
sbb
imul
movsl
mov
lret
repnz
out
dec
push
loop
daa
shll
fldl
or
loope
xchg
dec
and
adc
xchg
inc
and
lock
add
dec
add
out
inc
sub
movb
loopne
jne
mov
cmp
int
cmpsb
xlat
mov
cmp
dec
xor
pop
stos
cli
inc
sbb
js
mov
mov
push
push
lods
xor
mov
pop
sbb
aaa
lock
cld
call
lods
shlb
mov
inc
clc
stos
loope
and
push
lds
sbb
mov
ret
cmp
cmc
or
inc
adc
xor
jbe
jne
divl
pop
push
imul
lock
pop
sub
push
cmp
mov
push
pushf
jns
sbb
test
inc
push
into
xor
add
xchg
mov
pop
or
rclb
shr
hlt
pop
in
push
push
push
cld
jo
jl
hlt
das
jmp
xor
mov
add
stos
gs
jg
push
aas
fs
mov
fcmovu
sbb
cltd
aad
mov
test
int3
test
sub
cmc
mov
xchg
sbb
les
jno
xor
xor
insl
dec
icebp
cmpl
or
fdivrl
inc
mov
push
aaa
xor
outsb
xor
fwait
call
inc
mov
adc
pop
jb
sub
in
xor
mov
cltd
mov
push
subl
jae
mov
sub
or
inc
sarb
scas
mov
jae
imul
jo
pop
mov
js
add
repz
pop
cmp
push
cmp
sti
mov
mov
adc
mov
xchg
cmpsl
jns
rolb
subb
test
dec
or
dec
repz
sbb
push
js
rcrb
dec
inc
jmp
int
mov
nop
inc
pop
mov
inc
cli
dec
jle
aam
dec
pop
inc
in
push
jle
test
test
push
dec
cmp
int3
xchg
rorl
and
jno
xchg
in
and
xchg
in
and
sub
stc
xchg
and
fldcw
cmp
test
bound
push
call
cmp
add
into
push
aad
sarb
sbb
in
jae
icebp
mov
adc
add
test
push
stos
orl
pop
xchg
mov
add
xor
and
mov
out
push
or
pop
and
faddl
jo
adc
mov
push
cld
into
mov
aad
and
mov
addb
inc
or
dec
add
xchg
xchg
sbb
je
mov
xchg
sub
push
jae
in
int
xchg
ficompl
outsb
cli
pop
push
jge
sbb
push
sbbb
xchg
sub
push
lea
mov
js
fbld
roll
inc
call
insb
fimuls
dec
test
mov
or
or
iret
jae
pop
test
jnp
imul
movb
push
out
push
or
cmp
mov
pop
dec
pop
ss
adc
jl
xchg
pop
inc
mov
out
nop
push
push
xor
scas
xchg
fisubrl
sbb
jg
movsl
out
sbb
call
lods
fildl
cmc
dec
push
push
mov
aas
lods
and
push
push
cltd
mov
mov
push
fnstcw
xlat
inc
dec
sub
inc
stc
popa
lret
push
cld
shlb
fwait
cli
test
or
sbb
pop
mov
adc
xor
scas
ret
mov
cld
sub
mov
out
adc
ljmp
std
push
inc
movsb
imul
fnstsw
cld
sahf
iret
mov
mov
fdivrp
jb
aam
movsb
leave
add
sub
sbb
and
inc
lods
je
inc
mov
add
call
rcll
andl
cli
adc
das
insb
or
insl
mov
fmull
out
gs
jb
movsb
push
xchg
add
scas
into
dec
pop
cmp
inc
icebp
or
adc
fmull
xlat
xchg
xor
add
lcall
cld
pop
sbb
les
aas
cmp
ds
or
jp
and
cmpsb
inc
pop
sub
sbb
test
aas
lods
mov
int3
add
and
rcll
dec
or
xchg
icebp
cmp
daa
or
cmp
fnsave
jno
shr
xor
cmpl
cmp
push
jl
push
mov
movsb
sarb
xor
ja
lock
cmp
cmpsl
cld
cmpsb
js
cmp
jge
imul
inc
dec
js
mov
mov
les
mov
push
daa
outsb
push
inc
mov
pop
pop
fidivl
ds
lahf
or
mov
mov
mov
out
and
out
aam
mov
add
rcrb
adc
sub
pop
loope
cmc
sbb
dec
lods
fstpl
adc
jae
movsb
lock
pop
iret
mov
std
mov
jnp
dec
es
fimuls
call
mov
lret
mov
xlat
fs
sub
repnz
jg
jmp
and
test
jmp
add
dec
lds
push
jne
mov
repnz
mov
loop
lea
mov
fwait
xor
and
sbb
xor
xchg
sub
adc
int
loop
rorb
icebp
sti
adc
in
cmp
jl
and
movsl
icebp
enter
lret
loope
int
inc
fwait
jge
xchg
dec
fmuls
mov
cld
subl
mov
in
ds
not
xor
loopne
xchg
loopne
scas
cmp
pop
js
push
mov
mov
mov
rcrb
push
ljmp
mov
mov
or
lret
loope
jmp
aad
sbbl
les
lock
loop
jl
adcl
ss
mov
adc
fcmovnb
sub
cmp
or
fisubrl
push
cmp
xorl
add
lods
jle
and
and
ficompl
loop
push
pop
adc
int3
pushf
add
movsl
sub
inc
mov
loop
dec
fisubrs
outsb
mov
mov
jne
pop
das
cltd
adc
test
imul
push
cmp
jge
push
dec
push
jle
push
push
adc
ja
aam
loopne
cmpsb
xchg
cli
pusha
pop
rcrb
test
mov
jns
jge
add
js
loop
ficompl
xchg
pop
pop
shlb
std
and
or
and
mov
sti
mov
lock
dec
cmc
or
cltd
xchg
adc
in
mov
loop
andb
insl
cmp
mov
sti
inc
sub
cmp
dec
imul
jb
sbb
in
loope
pinsrw
adc
ret
inc
fnstsw
mov
int
push
and
fst
lret
cmpl
das
mov
icebp
mov
pop
inc
andb
scas
pop
xor
ljmp
divb
les
xchg
push
push
push
stc
mov
pushf
lcall
in
push
ja
push
insb
mov
mov
mov
fists
cmp
loope
out
jge
dec
scas
rolb
dec
sub
xchg
divb
adc
mov
push
fsubrl
mov
or
jmp
loop
inc
movsb
push
mov
lret
mov
inc
and
sbb
movsl
cmpsb
test
lret
ja
xchg
dec
mov
lret
lock
je
and
aas
cmp
mov
in
rolb
in
gs
or
xchg
in
outsl
test
sub
sar
mov
cwtl
cwtl
jecxz
idivl
fiaddl
ficomps
inc
out
les
mov
pop
nop
daa
cmpb
adc
test
int
stos
ds
cmp
imul
repnz
aaa
and
mov
add
aaa
ret
fstpl
mov
in
std
pop
loopne
jl
aas
push
jg
or
sbb
mov
int3
fimull
xchg
jmp
cli
lods
std
push
inc
push
sti
push
adc
xchg
test
inc
dec
inc
mov
pushf
es
loopne
pop
dec
in
ljmp
jbe
loop
dec
pop
lds
inc
adc
mul
fisubrs
lods
xchg
push
dec
inc
and
sar
and
aam
pop
les
adc
mov
cli
jbe
sbb
jnp
push
lcall
loopne
scas
aad
shlb
jge
fwait
iret
add
cmp
movq
clc
setl
sarl
iret
mov
mov
mov
sub
cmp
xorl
sub
ljmp
xor
popf
sbb
push
push
fdivp
adc
pop
or
or
cmp
xchg
mov
sar
jae
fadds
iret
mov
jns
loopne
xlat
add
xchg
sbb
mov
stc
mov
add
pusha
std
or
in
jae
dec
ljmp
loope
or
loope
das
push
fs
movsl
lahf
add
jle
mov
ja
cld
aad
mov
push
repz
xchg
aad
dec
mov
ja
rolb
push
into
adc
cmp
jp
sub
dec
mov
hlt
stos
vmread
stc
or
sub
icebp
ljmp
mov
xchg
dec
andl
inc
cld
mov
test
push
lret
jo
aas
and
test
mov
loop
push
mov
fstpl
pop
aam
sbb
stos
cmpsl
leave
es
mov
repnz
addb
ds
adc
jle
sahf
dec
lods
mov
sbb
sarl
mov
push
test
push
jno
adc
mov
loop
loopne
fists
mov
jg
inc
out
icebp
xor
push
mov
mov
jo
cmp
mov
bound
xchg
xchg
xchg
xchg
pop
loope
stos
dec
jg
scas
jle
arpl
mov
dec
scas
mov
loop
movsl
or
mov
lods
call
jbe
xor
out
mov
aam
cli
cmp
outsl
loop
xchg
sti
ror
dec
movsb
adc
out
lods
scas
mov
push
nop
addb
mov
jne
arpl
jp
les
add
dec
icebp
stc
or
cld
xor
inc
jne
push
aad
pop
ret
loopne
push
push
and
in
pop
das
out
lods
je
out
mov
or
lcall
inc
scas
inc
xchg
scas
dec
iret
or
jns
push
inc
dec
mov
and
js
mov
jns
or
xchg
sahf
or
sub
mov
adc
xchg
mov
sbb
mov
loop
push
pop
loop
adc
pop
mov
shrl
loop
xchg
sahf
xchg
dec
arpl
ja
stos
push
push
xor
push
adc
mov
shll
push
or
out
aas
fists
loope
mov
das
out
leave
ret
subl
add
inc
scas
idivl
pop
addr16
dec
ds
jmp
subb
rorl
add
int
ds
gs
rcr
pop
shlb
in
inc
pop
or
jne
sub
shrl
outsl
cmpsl
rol
cld
push
xchg
std
jl
jmp
rolb
cmp
cmp
stos
xor
cmpsb
xlat
movsl
fs
enter
addr16
jl
ss
into
pop
clc
loope
mov
add
ss
sbb
sub
mov
gs
rorl
or
jns
sbb
stos
jb
pop
cmp
stos
mov
insl
push
cmp
sbb
imul
xor
pop
dec
push
andl
adc
iret
hlt
jne
push
mov
frstor
rcl
inc
shrl
mov
sub
dec
rclb
xlat
push
imul
push
mov
ldmxcsr
xlat
std
ret
leave
and
push
inc
stc
xchg
fdivr
jp
repnz
clc
and
push
jb
das
push
imul
inc
test
mov
mov
jae
aam
js
scas
jmp
cmp
add
xor
xchg
inc
xor
test
jb
mov
jmp
mov
pop
sbb
dec
pop
cmpsl
and
jge
shlb
aaa
sub
adc
cs
fcoml
lds
pop
dec
xchg
mov
cli
adc
stos
xchg
lret
icebp
movsl
loopne
ljmp
dec
fbld
shlb
pop
movsb
pop
add
insb
mov
mov
jbe
xor
movsl
aaa
das
push
push
adc
je
dec
lret
cmpsb
pop
fdivs
mov
ss
xor
inc
mov
jg
out
popf
cwtl
test
stos
mov
dec
pop
jge
imulb
mov
mov
sbb
icebp
mov
mov
aaa
lods
xor
inc
fiaddl
arpl
loopne
xorl
cli
fisubrs
sar
xor
mov
popa
fists
jne
pusha
mov
popa
hlt
mov
mov
bound
test
in
clc
mov
pushf
ret
repz
dec
xchg
xor
mov
push
xchg
insl
aaa
push
pop
ja
push
mov
jno
fisubs
sti
movsl
push
push
xor
mov
bound
adc
sahf
fiaddl
stos
mov
dec
xorb
and
sar
xor
mull
adc
cmp
inc
sub
adc
iret
jmp
shrl
push
push
jle
pusha
leave
mov
fistpll
out
out
repz
pop
pop
inc
cltd
and
dec
pop
sbb
clc
shlb
jo
or
enter
mulb
mov
jg
mov
ror
mov
jb
xchg
lret
xchg
movsl
sahf
pop
ret
cmp
fstpt
push
sbb
shlb
stc
stos
out
mov
in
pop
js
dec
sbb
test
fldenv
mov
nop
xchg
insl
inc
push
push
cmp
inc
push
pop
push
add
clc
inc
lret
ret
pop
mov
out
jl
mov
enter
ss
hlt
mov
hlt
mov
sub
aad
rol
push
ds
pop
fiaddl
inc
jns
int
xor
push
and
push
pop
aad
arpl
or
push
pop
in
jge
pop
mov
mov
push
inc
push
pop
push
mov
jae
inc
inc
sub
and
xor
pusha
test
jo
mov
pop
mov
sbb
jnp
sarb
test
sbbb
int3
push
cld
jne
icebp
ja
push
std
lahf
sub
mov
sub
ret
stc
cmpsl
inc
aaa
jg
lret
cmpsb
hlt
adc
mov
gs
dec
repnz
xor
dec
repz
xorl
jb
mov
ja
pop
and
ret
shl
int
test
aad
sub
das
out
iret
es
lret
jb
std
fs
push
outsb
mov
or
out
jmp
inc
sbbb
push
ret
sti
repz
pop
adc
jmp
je
mov
jl
cmp
adc
and
sti
dec
cld
or
mov
clc
or
popf
jmp
nop
jecxz
ret
hlt
xorl
jb
aad
es
xchg
insl
test
xchg
push
into
xchg
and
int
and
fcmovnbe
sbb
bound
jle
pop
mov
adc
pop
jbe
int
ret
and
push
cmp
out
pop
repz
frstor
push
nop
mov
lahf
fcoms
jge
ret
sub
icebp
jecxz
mov
push
stos
mov
scas
mov
jo
scas
test
pop
scas
in
cld
adcl
cmpsl
mov
inc
jae
push
mov
push
or
ficompl
adc
jl
push
insb
popf
xor
mov
aaa
scas
cmc
imul
adc
enter
sub
pop
pop
xchg
pop
mov
xchg
pop
mov
daa
mov
jle
cmpl
outsb
fdivrs
cmp
addr16
cs
cmp
lds
mov
jmp
xor
dec
fiadds
inc
xchg
imul
push
lret
adc
inc
mov
sbb
mov
cmp
jnp
or
mov
fists
fs
xchg
les
pusha
cmpsl
mov
stos
dec
jno
insb
sbb
scas
pop
mov
jle
fidivs
fs
sub
mov
cmpsl
push
mov
stos
sub
adc
adc
jl
jne
sarb
mov
cmp
xor
jb
das
outsb
cmp
addr16
mov
sbb
jae
repz
pop
mov
movsb
out
mov
fnstenv
xlat
inc
push
aad
mov
movsl
outsb
inc
dec
push
ja
mov
call
test
mov
aam
loop
pop
ds
push
xlat
leave
mov
cwtl
and
repz
aam
cmc
push
icebp
mov
pop
daa
sub
aaa
jg
mov
and
mov
outsb
mov
push
ficompl
push
cmc
mov
mov
add
xchg
inc
pop
jo
cmpsb
repz
add
cmp
je
dec
push
pop
repnz
loop
pop
arpl
pop
jne
jns
fcomi
cmp
adcl
rorl
test
sbb
sbb
fdiv
cs
jno
inc
mov
aas
rorl
out
cmp
jp
pcmpeqw
jo
ds
xchg
movsb
lcall
mov
fnsave
ret
movsl
inc
pop
shr
clc
cmp
insl
imul
or
mov
xchg
inc
adc
mov
rolb
neg
test
fcoml
push
icebp
mov
push
xchg
cmp
adc
mov
push
roll
dec
test
pop
fld
push
cld
inc
xor
adc
dec
cmp
sbb
cmp
call
ds
arpl
decb
xchg
sub
gs
cmpb
sar
lcall
or
repz
dec
jl
push
cwtl
sbb
lahf
mov
rolb
jne
jnp
mov
xor
xchg
inc
mov
cmp
insb
std
mov
inc
pop
dec
in
rorl
fildll
jo
ljmp
nop
std
jae
jb
popf
lds
cmpsb
repz
test
inc
mov
sub
xchg
inc
mov
jb
pusha
es
imul
data16
mov
dec
sub
test
cli
loopne
mov
or
mov
and
loope
fisttpll
push
xor
cmp
fdivrl
fcoms
jae
mov
cmpsl
sub
cmp
ss
pop
cmc
jl
test
cmpsb
jo
dec
dec
add
repnz
int3
test
push
cwtl
scas
xorb
mov
in
inc
jo
xor
mov
sub
cmp
ds
inc
cmc
sub
sbb
lret
stc
jae
cwtl
aam
push
fiaddl
lods
shr
in
jl
shlb
jae
dec
insb
pop
je
inc
mov
scas
dec
mov
xchg
stos
test
xor
in
sub
test
xor
out
mov
pop
push
bound
jns
nop
sbb
cmp
shrl
fistpl
aad
mov
xor
repnz
lods
cmp
inc
jp
cmp
adc
sbb
idivb
sbb
rclb
aaa
pop
in
xor
cmp
mov
xlat
iret
addr16
aas
sbb
or
mul
icebp
lret
lret
xor
std
fldt
mov
inc
aas
insb
std
adc
je
stc
scas
call
out
jo
outsb
adc
out
addb
dec
mov
sub
aaa
call
clc
stos
stc
xchg
mov
pop
lretw
push
cmp
add
cmpsb
cmp
mov
scas
dec
jae
mov
pop
xor
or
pop
jno
leave
fcmovne
arpl
or
fdivr
movb
icebp
daa
into
mov
mov
sbb
push
cmp
add
inc
fsts
add
pop
cmp
mov
xor
out
mov
das
mov
xchg
daa
inc
fiaddl
hlt
jbe
or
scas
mov
cmp
lock
sbb
loope
mov
int3
fwait
adc
add
jmp
hlt
mov
pop
mov
insl
jge
adc
outsb
xor
outsb
jg
push
fidivrl
add
loopne
aad
sub
mov
pop
pop
or
pop
add
mov
xor
cmpsl
inc
mov
jp
jecxz
lods
jnp
ret
and
cmp
lahf
pop
sub
mov
daa
test
and
cmpsl
cltd
add
mov
pop
pop
jmp
pusha
das
jecxz
lcall
jns
cs
mov
shrb
sbb
sbb
xchg
mov
pop
push
cs
test
sub
push
lds
or
lcall
lcall
cltd
negl
sub
xchg
loopne
xchg
lahf
jle
test
aaa
mov
in
mov
out
or
cmp
icebp
fisttps
jnp
test
lods
lret
hlt
popa
mov
enter
mull
aad
in
inc
jmp
xor
xor
out
sub
test
out
fwait
pop
jbe
mov
inc
int3
or
dec
stos
xchg
les
dec
loopne
jo
lods
sub
push
nop
xlat
ljmp
ljmp
sbb
test
icebp
dec
cltd
bound
lds
outsl
jbe
out
cld
pop
push
fldcw
lds
in
mov
push
in
ret
fwait
dec
jbe
push
repz
dec
rorb
into
fwait
or
int3
sub
stos
cwtl
dec
mov
xchg
sub
cmpsb
fmull
imul
scas
mov
test
mov
out
add
mov
adc
mov
stos
jo
sbb
pop
leave
rcll
ss
out
or
dec
mov
cmpsb
jg
jp
into
mov
fbstp
loop
add
into
add
fbld
lods
xchg
xor
pop
pusha
std
dec
adc
adc
frstor
fcmovne
out
add
rorb
fxtract
subl
stc
pop
test
sub
cmpsl
cmp
mov
push
push
push
pop
in
sbb
mov
pop
icebp
xor
mov
popf
jmp
cs
push
lods
iret
out
adc
adc
add
ret
mov
jnp
xor
subb
jno
les
stc
or
mov
aam
pop
push
insl
pop
je
mov
loope
clc
jbe
clc
popf
push
adcl
ljmp
pop
cmp
sub
repz
xor
jl
rorb
cmc
shl
sub
and
adc
repz
rolb
leave
int3
xchg
scas
lret
push
sahf
cmp
lea
bound
xchg
repnz
lcall
out
xchg
or
out
ss
int3
add
lahf
fs
jle
add
dec
aad
test
imul
push
stos
lds
lret
stos
jge
stos
inc
mov
nop
and
shrb
stos
sub
push
push
and
xchg
into
inc
sub
add
fisubrs
insl
lahf
into
ss
adc
mov
sti
jle
jl
fcom
pop
clc
gs
jl
and
mov
es
lret
mov
lret
jmp
out
and
in
mov
rolb
clc
lcall
sub
dec
adc
push
test
mov
pop
pop
in
das
sub
fsubrs
and
push
or
xchg
jge
mov
cs
out
enter
fcom
stos
test
inc
sub
mov
popf
ja
pop
je
mov
jp
test
add
xlat
jne
lock
shrb
or
mov
sbb
and
sti
stos
lret
pop
inc
push
push
dec
xor
fldcw
adc
or
xchg
roll
sti
xlat
mov
dec
repz
fmull
cmc
xchg
inc
or
jl
std
stos
cmp
cmp
pusha
pop
movsl
push
insl
cmc
sar
jmp
lock
fstpl
jnp
pop
test
loop
jb
stos
repz
je
stos
out
xlat
add
icebp
xor
xor
cmp
jne
mov
je
out
mov
pushf
jle
cmp
cmpsb
xchg
or
stos
push
push
out
or
pop
idivb
dec
test
push
loop
lods
fcmovb
mov
cmp
repz
jle
adc
pop
adc
push
cld
adc
cmp
movsl
shll
iret
push
aaa
stos
mov
test
std
subl
push
mov
std
add
jns
add
in
mov
or
cmp
in
dec
test
mov
inc
dec
or
gs
dec
test
ret
repz
push
popf
push
mov
cmp
mov
das
mov
pop
jmp
divl
cltd
jecxz
in
loope
and
pushf
jecxz
or
fdivrs
push
ficoms
jnp
mov
jno
sbb
xchg
xlat
sbb
jmp
jne
movsb
ljmp
imul
mov
mov
xchg
sbb
jns
lods
pop
pop
lret
jl,pt
loope
leave
cltd
test
pop
jge
pop
mov
mov
mov
sti
idivb
pop
push
ret
push
icebp
sbb
cmp
stc
dec
call
dec
rorb
fdivrl
mov
mov
nop
push
das
push
das
mov
in
loopne
jmp
jl
xchg
pop
and
jae
test
jno
xchg
leave
leave
aaa
loope
popa
fbstp
sub
call
dec
dec
cmc
cmpsl
stos
cmpsb
push
push
in
add
sbb
sub
and
cltd
sub
pop
jbe
imul
aad
jo
orw
mov
fisubl
mov
jo
loope
movsb
adc
popf
add
pop
cmpsl
orb
mov
xchg
popf
cmp
lret
dec
adc
roll
call
inc
mov
cld
mov
sbb
lret
jecxz
out
jae
addl
aam
jg
das
dec
leave
sbb
dec
add
lret
mov
movsl
jmp
or
jp
test
pop
sbb
sbb
xlat
mov
pop
pop
pop
and
jmp
mov
jl
xor
mov
int
inc
mov
fldl
repnz
ret
sub
sbb
fiadds
popa
inc
push
jmp
cmp
mov
mov
into
pop
outsb
ficompl
jmp
jnp
mov
insb
pop
cld
mov
leave
jge
in
sbb
jae
dec
loope
aaa
out
jle
stc
aaa
mov
pop
insl
out
unpcklps
mov
out
lods
xor
out
fmuls
adc
or
jecxz
xor
cmp
mov
mov
lds
leave
lods
iret
ja
mov
pop
jmp
inc
std
ljmp
js
sub
aad
adc
icebp
insl
scas
int3
mov
jnp
jbe
insb
sbb
outsb
clc
pop
jge
scas
shlb
ret
sbb
mov
fucom
mov
int
add
adc
ds
test
hlt
mov
or
int3
inc
daa
std
stc
xor
xlat
bnd
dec
in
jp
jmp
adc
push
out
mov
cltd
mov
movsl
jle
jl
sbb
aaa
ss
push
lds
mov
mov
mov
or
cwtl
jnp
mov
js
mov
jge
xchg
in
sbb
movsb
xor
dec
dec
cmp
lahf
add
inc
pop
das
xor
mov
xorb
jle
sub
jbe
mov
pop
mov
fisubrl
clc
std
mov
jae
cmp
pop
add
ja
lods
sub
mov
cmpsb
or
pop
out
cmpsb
inc
lret
mov
push
inc
lods
mov
mov
adc
sti
adc
or
pop
cmp
mov
jb
out
popa
clc
out
in
lods
inc
xchg
stos
aaa
push
jns
lahf
fnstcw
mov
dec
and
xor
jp
test
in
test
popf
dec
iret
in
jmp
cld
pop
mov
out
cmp
fwait
and
add
mov
pushf
xor
mov
rcr
lcall
xor
lahf
cmp
jnp
mov
fisttps
popf
sbb
aad
jne
mov
xchg
in
fwait
cmpsb
popa
mov
inc
mov
in
pop
mov
sbbl
mov
mov
int3
jne
imul
sub
lahf
add
fs
push
std
jmp
sub
mov
sub
aaa
cmp
jl
xchg
fildl
push
dec
fcmovu
adc
les
testb
cmp
mov
int3
xchg
pop
mov
mov
jo
lcall
push
jge
mov
stos
pop
mov
aas
pop
movsl
cmp
jge
flds
sbb
pop
dec
hlt
add
test
cli
mov
fdivr
add
getsec
push
out
pop
add
ret
je
popf
inc
push
addr16
in
pop
in
xchg
cwtl
sub
sti
or
mov
fisubrl
jnp
jle
bnd
dec
add
adc
mov
push
mov
insl
outsl
pop
insl
jmp
mov
insl
mov
out
sub
clc
adc
cs
push
stos
sub
std
pop
xor
push
lock
aad
in
popa
pusha
xor
fnstsw
ss
lahf
jmp
jmp
xchg
lea
jmp
and
inc
xor
push
push
mov
push
outsl
scas
xchg
les
dec
aaa
stos
leave
add
iret
je
push
pop
jg
fldenv
xchg
out
mov
cli
jp
xchg
fbld
lods
stc
je
and
mov
pop
test
repnz
cli
inc
mov
xchg
mov
into
test
sbb
cmpl
aas
out
in
mov
pop
and
fucomp
mov
xor
stos
xor
xchg
mov
les
dec
divb
je
mov
roll
cmpsl
cmpsl
push
cmp
jmp
xchg
out
mov
pushl
pop
mov
fildll
mov
sub
sbb
lock
xchg
and
and
int3
aam
fldl
jg
jmp
lock
mov
xor
stos
lahf
push
push
decl
or
add
idivl
rol
and
or
pop
mov
cwtl
inc
mov
lcall
movsb
xchg
mov
ja
or
ss
pop
or
jecxz
nop
call
out
mov
xchg
push
outsb
movsl
pop
dec
scas
xor
or
inc
loopne
divb
fsubl
and
lret
popf
hlt
lds
mov
adc
call
stos
addl
push
inc
in
and
or
mov
scas
add
dec
test
outsl
cmp
dec
std
jb
or
enter
dec
popa
test
call
ret
jecxz
sbb
shrb
mov
test
sub
pop
adc
mov
ret
cld
lock
arpl
out
fsts
xchg
and
out
jge
aas
jo
insb
cmp
test
xor
mov
test
pop
mov
push
pop
sub
ficompl
in
sub
sub
xchg
dec
mov
add
ret
cld
fdivl
out
jecxz
lcall
sub
push
fs
stos
pop
xor
ja
pop
adc
clc
cmpsb
dec
and
popf
mov
outsb
lock
xchg
test
mov
sub
outsl
cmp
xchg
shrl
cmp
jo
pop
jmp
adc
movsb
gs
dec
jne
sbb
jb
sub
jle
negb
lock
xor
lea
movsb
mov
js
add
push
inc
mov
loop
inc
rcrb
mov
jns,pn
mov
stc
pop
or
pop
jo
repnz
clc
cwtl
call
pop
push
mov
lock
pusha
out
movsb
and
test
push
hlt
push
push
sahf
xchg
je
mov
cmp
pop
push
clc
mov
and
loop
repz
and
and
sahf
sbb
mov
jb
pop
pop
stc
mov
pop
dec
lods
xchg
imul
aas
pop
mov
or
dec
std
pop
mov
inc
fwait
lahf
push
fidivrs
std
ds
inc
icebp
inc
adc
push
inc
insb
jae
loope
lcall
sti
xor
leave
pop
ss
enter
int
xchg
or
mov
rcrl
and
jp
pop
sbb
mov
pop
jb
add
mov
je
sub
fucomp
lahf
into
lea
xchg
xchg
pop
pop
clc
mov
pop
cmp
mov
push
sbb
and
mov
push
sti
mov
movb
push
fidivl
mov
lcall
out
sarl
inc
imul
fsubr
mov
aas
or
call
pop
jb
add
sti
cwtl
gs
imull
negb
ja
mov
dec
lods
out
lahf
mov
bound
sti
ret
cs
enter
loopne
xor
aas
aam
pop
in
mov
pushf
fldenv
movsb
frstor
xor
sbb
dec
leave
sub
inc
pop
pop
ja
and
in
mov
lods
loope
andb
push
cld
outsl
and
aas
imul
sti
jl
pop
roll
daa
fmull
mov
icebp
push
mov
cmp
les
jle
cmp
outsb
fwait
jns
xor
stos
out
lock
imul
or
jp
mov
fists
sub
mov
rcrl
or
rclb
sub
cmpb
lcall
sub
jecxz
push
into
and
cltd
ljmp
add
sarb
jl
push
dec
aam
pop
inc
or
shll
push
jl
inc
xchg
adc
ficoms
aad
xchg
and
lds
dec
ficomps
push
fs
stos
lods
mov
push
loop
fdiv
xor
xor
mov
mull
js
xor
add
mov
lea
push
sbb
sbb
inc
loop
cmc
mov
dec
pop
jae
and
sub
xchg
sub
es
mov
mov
push
cltd
push
ljmp
inc
outsw
scas
add
lahf
dec
and
mov
sub
pop
add
or
sbb
push
inc
push
inc
pusha
push
adc
out
mov
mulb
jb
and
fcompl
adc
adc
test
idivb
pop
or
or
fcmovu
push
pop
test
loope
shrl
cld
fldcw
lods
lods
test
push
adc
dec
sti
out
and
aam
ds
mov
and
mov
das
sbb
sbb
rcr
push
mov
cmpsl
mov
repz
call
shlb
mov
mov
xchg
mov
mov
xor
dec
mov
mov
dec
adc
mov
fnstcw
jne
fbld
pop
imul
sbb
sti
loop
and
sbb
or
sub
adc
jmp
adc
mov
xchg
out
mov
mov
mov
jo
cli
adcl
or
and
add
cmpsl
sbb
stos
lods
stos
outsb
sbb
and
push
lea
faddp
pop
add
dec
cmp
mov
daa
adc
bnd
pop
mov
dec
sbb
xchg
loop
out
ds
test
iret
mov
out
mov
mov
xchg
jmp
mov
lret
mov
push
leave
roll
rcrl
imul
mov
scas
movsl
xchg
mov
push
data16
sub
jo
jno
enter
loop
and
cvtps2pi
out
stos
mov
jb
jo
not
pop
subb
add
xor
xor
ja
push
scas
cmp
lods
ret
mov
cli
repz
pop
inc
movsb
mov
mov
mov
ja
add
out
ja
dec
xchg
and
jl
test
insb
jb
push
aas
push
mov
scas
mov
xchg
aad
xorb
sbb
pop
ret
rsqrtps
not
push
jno
push
lock
xor
push
jae
add
mov
repnz
mov
test
mov
or
scas
dec
mov
scas
pop
cmp
mov
mov
sub
mov
jno
out
rcrl
cs
jmp
mov
stos
pop
bound
xor
mov
cmc
mov
and
adc
aaa
push
jo
mov
inc
sub
dec
xchg
pop
cltd
sbb
xor
div
pop
xchg
lock
ja
pop
or
lods
pop
das
jle
dec
sarb
sti
jge
jbe
sbb
cmpsb
pusha
fcompl
adc
cmpsb
insl
cwtl
sub
loopne
jle
xchg
mov
jge
add
add
mov
add
jl
push
pop
pop
push
push
add
repnz
adcl
mov
jb
dec
std
outsb
inc
in
lock
sahf
xchg
mov
xchg
sbb
push
lods
pop
push
jo
dec
cli
mov
out
jl
adc
ffreep
jp
mov
sti
mov
test
icebp
stos
movsb
enter
mov
mov
jbe
pop
adc
dec
sti
lds
cmc
cmp
mov
sub
negb
mov
lcall
pop
adc
fbld
sahf
movsb
fnstsw
cmp
sahf
cmp
fisubs
ret
ljmp
inc
sbbl
add
cmp
daa
pop
lods
cwtl
in
cmc
push
fistps
shr
mov
pop
sub
cld
fdivrl
mov
aam
push
xchg
pop
sti
inc
pop
mov
subl
xchg
cmp
push
jno
test
shll
sbbb
or
lock
ret
stc
cmp
and
inc
in
push
clc
sti
test
sub
push
cmp
aam
xor
jle
pop
jp
fimuls
ss
and
jge
sbb
js
mov
mov
lods
cmpb
xchg
shlb
lods
lahf
adc
and
dec
adc
jecxz
add
hlt
mov
dec
push
and
mov
add
mov
adc
lret
adc
sub
enter
mov
or
outsl
jbe
roll
add
inc
loope
jns
xchg
xchg
out
js
inc
sti
orl
lods
jecxz
pop
lods
movsb
jno
sub
xchg
push
adc
pop
and
push
test
push
push
xchg
add
mov
gs
cmp
push
dec
push
xchg
push
jmp
mov
push
fs
mov
arpl
jl
ja
or
sub
and
dec
adc
xchg
rcl
add
arpl
push
mov
in
jno
pop
dec
std
out
add
jl
pop
cmpl
enter
pushf
mov
lahf
push
jge
dec
add
jno
push
adc
outsl
aaa
fimull
cmp
fcompl
pop
xor
push
sar
push
pop
xchg
jmp
shl
pop
pop
mov
jle
stc
add
das
mov
xchg
outsb
sbb
dec
movsb
inc
in
ja
leave
add
sbb
add
lock
stc
mov
xor
mov
xchg
jno
xor
mov
dec
shll
dec
jnp
adc
sub
add
mov
arpl
je
int3
xchg
and
sub
dec
mov
sbb
imul
into
push
add
dec
or
mov
mov
dec
push
arpl
mov
test
push
int
arpl
pop
les
or
popf
push
dec
add
mov
or
jg
lods
push
push
push
adc
jne
adc
inc
push
sahf
leave
add
clc
ret
push
sbb
pop
aad
cmp
xchg
cwtl
adcb
hlt
cld
sub
and
popa
mov
push
movsb
push
or
and
xchg
sbb
cmpb
xor
pop
stos
inc
test
jo
xlat
out
lret
scas
ret
imull
dec
cmp
mov
stos
and
inc
adcl
sub
fisttps
jmp
add
int3
jp
cmp
ja
add
subl
addr16
xchg
clc
outsb
or
fstpl
xchg
fldl
mov
mov
out
insb
andb
dec
movsl
cli
pusha
or
xor
std
in
stos
insl
inc
push
daa
fdivrs
dec
fwait
dec
cmpsl
xor
pop
push
in
jnp
mov
xor
push
decb
imul
sub
push
add
mov
add
mov
or
repnz
cmp
loopne
mov
outsl
pop
push
out
icebp
pop
mov
xlat
gs
loope
ret
outsl
idivb
inc
mov
popf
popa
in
inc
push
jne
push
leave
lea
lret
mov
jecxz
xchg
xlat
test
ret
sbb
pop
lds
fstl
push
mov
xchg
push
mov
xchg
push
add
adc
xchg
test
pusha
pop
push
pop
push
mov
cmp
repz
fucomp
pop
fnstsw
lods
xlat
adc
ljmp
outsb
rcll
mov
ret
je
inc
movsl
sbb
fcompl
mov
rcll
popf
jnp
push
mov
notl
adc
adc
addr16
xlat
cmp
jle
ja
fists
dec
leave
pop
push
or
mov
stos
lcall
aad
jmp
das
call
es
lcall
pop
push
xchg
fbld
fwait
loopne
stos
mov
push
mov
popa
mov
jno
out
pop
mov
mov
jb
mov
adc
lods
and
jb
rcr
in
push
out
or
push
icebp
fists
inc
sub
xchg
bound
aam
enter
adcb
aam
imul
out
lahf
sub
xchg
add
or
movsl
stos
inc
stc
jnp
jle
jmp
jo
gs
jg
dec
mov
cmp
paddd
and
xchg
adc
jno
sarl
hlt
and
mov
push
mov
out
adc
lods
adc
mov
push
iret
xor
push
sbb
mov
xor
adc
jo
bnd
mov
scas
icebp
test
jg
test
mov
outsb
mov
cmp
cld
mov
xor
sbb
push
mov
cltd
xchg
movzwl
into
fbld
pop
in
std
shrl
data16
pop
push
in
sub
inc
mov
xor
inc
mov
cmp
or
mov
sbb
fnsave
popw
fidivs
dec
insl
out
rcl
imul
clc
pop
aaa
mov
lds
jp
and
fwait
mov
outsl
outsl
push
test
into
rcrl
fiaddl
or
pop
bound
push
ficoms
jle
inc
aam
inc
clc
sti
mov
mov
pop
scas
fsubr
stos
sbb
ss
js
dec
je
movsb
in
mov
pop
jb
push
mov
mov
insl
int3
dec
fildll
mov
mov
subl
pop
cmp
cli
scas
mov
je
mov
mov
es
outsb
and
add
loope
pop
in
mov
sub
dec
mov
sbb
rorl
or
mov
lret
jp
loop
jo
cmp
adc
jmp
jo
cltd
lret
js
and
xchg
ds
mull
cmpsb
dec
xchg
rol
pop
fs
adc
jno
aaa
ss
mov
sarb
psubd
incl
out
jno
mov
sub
ss
mov
mov
and
dec
fisubrl
adc
leave
fwait
push
jp
dec
daa
cmp
outsb
loope
cmpl
push
rorb
mov
pop
push
sbb
fbld
movsl
into
pop
test
bound
jp
js
xor
jmp
clc
sub
mov
mov
xchg
insb
pop
mov
push
xchg
xchg
cmp
pop
test
aad
fldl2e
mov
or
cmpsl
es
cs
ds
ljmp
push
ss
movsl
and
sbb
cmp
inc
in
jmp
lods
jmp
cli
xchg
xchg
sbb
loop
subb
bound
xchg
cld
cmp
fdivs
sub
das
arpl
not
lea
and
xchg
pop
and
out
xor
push
push
inc
sbb
push
out
iret
btc
hlt
rcrb
ret
mov
out
pop
jbe
mov
xchg
movsb
sub
daa
push
je
adc
cmp
lret
pop
push
mov
popa
mov
and
jnp
sbb
stos
incl
lahf
or
ds
mov
mov
fmuls
pop
mov
mov
aaa
in
sbb
ja
cmc
and
xor
push
lret
mov
roll
jle
dec
jae
jbe
dec
ja
mov
mov
jns
ror
push
inc
mov
ret
xchg
aad
sub
mov
pop
gs
cli
and
sbb
jge
mov
notl
test
cmp
pop
fisubl
jecxz
xchg
clc
cmp
jb
jnp
std
in
cmpb
and
mov
shll
inc
loope
mov
adc
lods
fcomp
out
sub
out
lea
dec
pop
push
xor
mov
movsb
add
in
lock
jp
add
or
arpl
inc
ds
in
mov
inc
xchg
test
movsl
jecxz
sub
loop
sti
dec
sbb
pop
mov
fimuls
aas
ljmp
sti
rolb
mov
jnp
adc
cwtl
inc
data16
cmpsb
cli
jns
mov
ljmp
lock
stos
icebp
stc
cmp
push
pop
and
lods
mov
push
imul
mov
xchg
pop
push
mov
add
fldcw
pushw
stos
in
pop
out
pop
sti
adc
imul
sti
cli
sar
je
mov
dec
call
add
mov
loope
cmpsb
sub
mov
push
ds
sub
mov
push
jne
dec
mov
lcall
jg
int3
inc
xchg
xor
sub
ret
out
adc
xchg
pop
aad
jb
jb
dec
nop
insl
out
movsl
or
mov
sbb
add
pop
decl
inc
ja
add
jmp
arpl
sub
in
adc
cmp
test
orl
mov
mov
sar
pusha
loop
pop
mov
icebp
inc
adc
insb
push
movsb
jge
fstps
xchg
loopew
test
lods
and
outsb
mov
inc
adc
xchg
movsb
outsb
mov
out
out
movsl
in
ljmp
adc
mov
push
aaa
inc
mov
sar
cmp
mov
inc
cmp
xchg
add
test
pop
jne
imul
fwait
mov
out
ljmp
xor
inc
sbb
pop
mov
pop
dec
shr
call
lods
flds
xchg
xlat
inc
mov
add
mov
push
inc
imul
roll
mov
xchg
orb
mov
hlt
push
cmp
and
cmp
push
idivb
pop
xchg
popaw
cmc
push
adc
das
jg
clc
or
fmull
pop
mov
pop
imul
sub
xchg
cmc
cmp
cltd
pushf
aaa
bound
push
addr16
mov
cmp
push
cmpsl
sbb
add
imul
ss
sbb
cmp
push
pop
test
add
push
mov
and
mov
scas
xor
lea
mov
add
cwtl
push
xchg
push
pop
lcall
in
jg
sub
addl
pmulhuw
mov
sub
mov
mov
inc
icebp
out
sub
xchg
scas
subb
xlat
cmp
jo
cmp
lock
insb
or
push
das
cld
push
fisubrs
aam
out
jl
adc
arpl
jnp
mov
add
in
icebp
cltd
or
addr16
and
test
pop
cld
lret
in
repnz
inc
fldl
je
xor
sbb
fsubrl
outsl
aad
jge
clc
mov
xchg
test
and
lcall
pop
fwait
push
jecxz
jnp
adc
or
mov
cmpsl
out
dec
push
cmp
jl
mov
push
mov
cmp
lret
jae
aaa
or
jmp
repnz
pop
cs
call
jo
repz
stos
ljmp
jle
jo
dec
popf
test
inc
gs
ljmp
push
xchg
outsb
cmpb
in
lcall
hlt
roll
rcll
aad
ret
push
mov
ret
push
add
data16
jne
lret
es
xor
test
imul
mov
sub
out
cwtl
mov
mov
jl
loopne
es
cmp
insl
cmp
pop
out
sbb
lds
shrl
jns
out
dec
aad
and
jnp
movb
push
repz
in
jg
insb
sub
xchg
out
push
lret
jnp
imul
add
repnz
lods
sub
loop
xor
mov
pop
out
js
fdivrl
test
cmpsl
int3
stos
or
int
nop
pop
xchg
lods
push
jbe
jae
push
fucomi
icebp
sbb
frndint
or
push
xor
cli
sub
fcompl
push
jb
mov
das
jle
mov
aaa
inc
push
mov
scas
icebp
xchg
rcl
repnz
stos
sar
out
mov
cwtl
pop
or
mov
xchg
pop
in
push
cmp
fisttps
jmp
shl
pop
insl
xchg
test
and
sub
in
push
scas
add
in
pop
movsb
dec
add
ret
xchg
xor
push
jns
dec
xchg
js
sbbl
pop
mov
pop
test
push
subb
adc
gs
adc
faddp
andl
jge
test
fdivr
cmp
sbb
setns
sub
out
jmp
dec
jmp
dec
decl
repnz
fistpl
xchg
mov
pop
test
pop
jno
scas
push
dec
sbb
fmulp
pop
addl
enter
xchg
dec
push
mov
mull
fmull
pop
add
add
mov
xchg
sbb
mov
fwait
mov
sub
mov
jge
out
mov
test
stos
clc
int3
and
xor
daa
ss
push
out
mov
daa
mov
adc
pop
hlt
sub
mov
andl
fstps
imul
fistps
cmpsb
jg
mov
ds
or
mov
sub
outsl
fildl
sbb
pop
test
pop
in
loop
xor
or
out
cmpl
rcll
mov
std
inc
jb
sahf
cmc
lret
lea
imul
cld
in
leave
syscall
push
out
ret
hlt
jge
loope
es
inc
pop
js
push
push
sub
dec
mov
pop
jge
lahf
jg
jecxz
dec
mov
das
addr16
addr16
mov
pop
ds
cld
inc
ds
aam
xchg
pop
jle
test
add
push
adc
into
inc
imul
jb
push
add
mov
push
adc
js
fidivrl
adc
xchg
mov
sub
jns
shll
cmp
cltd
dec
pop
jmp
and
xchg
cmc
add
lret
sti
in
popa
add
xor
jle
test
sub
mov
aad
lret
jno
aad
lods
data16
fisttps
cmp
mov
xor
mov
push
aaa
and
xorb
pop
push
in
jge
xor
adc
les
and
pusha
push
movsl
fdivp
xchg
jle
push
arpl
sbb
in
sub
pop
dec
pushl
jne
test
dec
je
je
adc
inc
call
xor
popl
adc
sbb
outsb
push
imul
xchg
sbbl
in
jg
mov
fists
lock
mull
inc
push
mov
out
pop
mov
xchg
and
pop
ss
mov
loope
paddb
pushf
jle
test
mov
inc
fmuls
inc
mov
mov
xor
push
sub
xchg
scas
sbb
mov
mov
dec
test
mov
fcomps
stc
mov
shlb
mov
das
push
jle
xor
push
mov
push
mov
dec
js
movsb
repz
sbb
popl
in
mov
cmc
jecxz
cmp
pop
sbb
sarb
push
test
mov
cs
add
xchg
and
inc
adc
cs
mulb
jg
pop
sarb
inc
rorl
xor
pushf
mov
ss
das
pop
lcall
lods
movsb
cmpsb
inc
sbbl
mov
cltd
push
mov
mov
rcr
test
repnz
test
pop
cwtl
movsb
cwtl
mov
mov
inc
les
aas
mov
inc
stos
cmp
in
push
cld
nop
insb
shrl
cmpsb
sahf
loop
mov
cli
arpl
mov
pop
movsl
dec
fwait
xor
push
vpsubsb
sub
outsb
mov
sub
xchg
xorb
mov
mov
aam
xchg
cli
dec
cmpsb
cmpsl
xlat
ret
leave
mov
fiaddl
push
movsl
adc
sbb
int
rep
pop
sub
addr16
mov
jne
hlt
sti
ss
push
jo
pop
loop
sub
mov
stos
jb
xlat
push
push
lea
insb
int
cld
pop
inc
test
pop
xchg
out
sti
cmp
imul
fisubs
leave
add
jns
cmp
or
mov
push
idiv
rclb
into
adc
gs
scas
xchg
imul
xor
or
jmp
mov
ljmp
fwait
dec
call
cmp
xorl
int3
pusha
sub
sbb
outsl
pushf
mov
dec
iret
movsb
in
imul
adc
lret
adc
cmp
jnp
sub
stc
pop
pop
sti
test
mov
or
push
sub
sub
cltd
and
xor
scas
push
xor
negb
xchg
mov
cld
stos
push
pushf
outsl
and
xor
test
push
add
scas
jae
sahf
adc
stos
iret
hlt
int3
or
ret
aam
fisubl
outsl
dec
ret
fcoms
scas
and
push
shll
shll
xchg
insb
and
xchg
xor
hlt
clc
push
mov
ljmp
lcall
imul
xor
jnp
pop
mov
cmp
lock
jg
lock
mov
pop
cli
out
ret
insl
sub
mov
push
mov
lods
repnz
lret
das
mov
cmp
stos
popf
pop
mov
popa
sbb
pop
push
pop
rorl
ljmp
leave
cmpsl
sub
ss
and
push
icebp
mov
add
aas
jg
mov
pop
bound
cmp
test
ja
test
pusha
lods
negb
popf
inc
dec
jo
mov
push
movsl
jne
push
ljmp
mov
cltd
mov
xchg
subl
inc
cmp
leave
sbb
outsl
aaa
stos
jge
nop
pop
adc
xchg
lret
ljmp
lods
xchg
pop
icebp
pop
subb
xor
sub
or
xlat
sbb
pop
or
pop
dec
in
mov
inc
fisttpll
add
jne
andl
stos
push
and
pop
ret
or
shlb
cmpsl
mov
dec
popf
movsl
adc
sbb
dec
outsl
scas
add
sbbb
cmpsb
jbe
sub
flds
dec
inc
rol
jge
fstl
push
fcom
popf
ffreep
mov
mov
lcall
cltd
jecxz
dec
mov
mov
dec
lahf
fimuls
mov
insb
call
je
jl
xchg
mov
mov
push
push
sbb
sub
jmp
inc
cmp
sub
fistpl
lds
cmp
mov
dec
mov
pop
rorl
pop
out
xlat
inc
iret
xchg
jle
fdivp
mov
mov
out
hlt
mov
xor
mov
jae
mov
dec
xchg
cwtl
jo
mov
int3
mov
dec
data16
sub
pop
cmp
notb
and
xchg
xchg
mov
xchg
dec
gs
add
mov
bound
cmp
xchg
dec
lds
aad
in
mov
mov
xchg
push
filds
in
sub
lahf
lods
fsubrs
outsl
pop
cmp
sti
pop
arpl
jbe
add
mov
pop
mov
mov
imul
pop
xor
push
push
or
outsl
dec
or
xchg
xchg
scas
lock
rorl
adc
mov
jmp
sbb
repz
imul
shrb
hlt
pop
pop
jmp
pop
aas
inc
jmp
jmp
mov
push
hlt
pusha
mov
cmc
jns
out
lret
push
jne
xchg
movsl
cli
mov
pusha
jmp
push
enter
sub
xchg
inc
xor
clc
into
lahf
mov
adc
ret
scas
in
subb
push
das
jb
jmp
lret
fildl
push
adc
ljmp
js
push
pop
lock
scas
add
cmc
mov
mov
test
jns
pop
mov
lret
sahf
cmpl
push
repz
mov
sahf
repnz
mov
mov
sub
pop
cmp
add
leave
popa
mov
cmp
in
adc
xlat
add
sbb
jb
add
mov
xor
xchg
fs
roll
adc
add
sub
int
xor
loop
jg
faddl
imul
sub
inc
dec
inc
add
rclb
lahf
push
mov
xchg
das
lds
repz
xchg
adc
cmp
push
popa
or
add
xchg
mov
dec
mov
push
jmp
mov
mov
dec
jg
in
sti
lcall
pop
inc
pop
ja
fisubs
inc
shll
sub
cmp
or
jge
pop
leavew
inc
inc
imul
pusha
pop
xchg
jmp
push
dec
lret
call
cmpsb
int
lcall
add
sbb
out
leave
dec
mov
dec
lahf
std
mov
dec
add
mov
imul
pop
cmp
sti
pop
rcll
or
dec
mov
dec
das
mov
jns
xchg
cmp
sub
rcr
lods
imul
outsl
pop
pop
push
cmpsb
dec
cmp
mov
pushf
mov
sbb
xchg
inc
aad
or
ljmp
stos
xor
in
cli
mov
mov
mov
xchg
dec
mov
or
testb
push
int
cld
iret
test
sub
push
fisttpl
jmp
add
aaa
or
in
pop
aaa
jle
xor
cmp
push
loopne
pop
adc
jl
sub
mov
addb
or
shr
sbb
popf
mov
xlat
arpl
pop
imul
fwait
sahf
pop
cwtl
mov
clc
jp
xor
push
and
mulb
adc
sbb
xor
mov
dec
gs
scas
rcrb
lcall
andb
mov
and
stos
xor
sti
cmpsb
sbb
add
das
mov
insl
push
icebp
mov
aam
adc
rcrb
inc
nop
lahf
test
into
adc
sub
repnz
push
cmp
leave
cmp
in
clc
popa
jb
dec
pop
cmp
jns
push
je
mov
lret
jae
or
cmpsb
jecxz
adc
les
jns
fbld
cmp
gs
cmp
push
fsts
pop
mov
in
mov
jge
shrl
push
outsb
pop
mov
loope
jbe
notb
jle
dec
xor
loopne
pop
in
ja
dec
mov
ret
in
and
addr16
xorl
mov
jl
dec
dec
ss
inc
aam
pop
sub
sbbl
adc
push
leave
mov
jge
cwtl
push
gs
pop
push
add
mov
fucomi
cld
sbb
push
add
add
fwait
jge
stos
into
fwait
mov
xor
into
out
ret
in
jmp
sbb
aam
inc
jg
ljmp
in
or
inc
lods
lahf
inc
mov
sub
cmp
push
lds
sub
rclb
movsl
das
js
addr16
xchg
shll
adc
add
cld
jne
int3
sbb
dec
pop
pop
stos
push
stc
std
arpl
stos
into
jbe
mov
push
push
js
int3
xor
bound
pop
roll
xor
push
sbb
shrl
imul
pop
test
push
dec
movsb
mov
inc
es
movsl
sub
or
ja
pop
xor
fstpt
mov
mov
xor
into
imul
imul
xchg
jae
jno
or
mov
test
pop
push
mov
dec
cli
dec
and
clc
xchg
jg
idivl
pop
lret
mov
push
jnp
mov
popf
shll
dec
nop
pop
pop
sub
push
lahf
xor
fildll
lret
sti
push
shll
stc
mov
mov
data16
pop
push
les
stc
bound
dec
stc
aam
out
push
mov
scas
mov
jnp
call
jbe
adc
add
neg
or
aam
in
mov
and
push
and
pop
mov
mov
sub
mov
inc
add
pop
jbe
ss
and
mov
loopne
bound
icebp
scas
jle
jl
inc
jns
xor
stc
fidivrl
sbb
push
sub
lea
out
jecxz
enter
or
mov
into
mov
mov
mov
xchg
stos
sub
adc
addb
jle
lret
test
cmp
cmpsb
add
xchg
mov
pop
cmc
mov
mov
dec
mov
sar
xchg
iret
xor
dec
cld
xchg
out
pop
adc
js
pop
jl
fsubrl
daa
xor
push
adc
mov
lahf
dec
mov
sbb
cmp
push
mov
push
in
mov
cmc
pop
or
fcoml
lds
test
jnp
mov
jecxz
push
aas
sti
jecxz
fstps
ljmp
lea
lods
fs
sti
fwait
in
rcrl
loopne
es
add
sbb
push
int
loope
sub
inc
frstor
in
shlb
aad
shl
fcomp
test
cmp
jg
sahf
test
or
pop
dec
popf
std
js
out
jbe
xchg
dec
xor
leave
out
mov
add
out
cmpsb
fmul
inc
ja
push
jne
push
loop
pop
das
push
and
std
inc
stos
in
xchg
mov
add
fiadds
mov
push
push
jl
inc
dec
xor
cmp
jecxz
jns
or
jle
mov
insl
mov
mov
push
push
mov
mov
xor
cmp
sahf
xchg
stos
mov
mov
push
stc
cmp
fnstsw
jnp
fnstenv
mov
mov
cmpsb
movsb
pop
out
sub
cwtl
aad
mov
jle
inc
inc
inc
pop
je
pop
rcl
bound
fsubrl
jl
add
mov
mov
adcl
adc
and
xchg
daa
ja
test
sbb
push
xor
sub
iret
pop
pop
lea
aas
mov
cmp
adc
sub
lds
mov
icebp
or
dec
popf
ret
adc
mov
popf
mov
and
aaa
pop
jne
add
sub
xchg
or
lret
movsb
scas
and
sti
pop
cmp
mov
outsb
imul
scas
sub
mov
in
mov
dec
mov
add
loop
mov
pop
out
aam
ret
mov
adc
jg
fisttps
adc
cmpsb
test
jns
mov
or
cld
gs
aas
pop
push
adc
icebp
pop
into
loope
inc
cmpb
jmp
pop
cmpsb
inc
outsl
push
dec
mov
pop
pushf
mov
and
daa
mov
insl
in
mov
pop
shlb
bound
cmp
push
mov
std
pop
faddl
das
sbb
mov
mov
mov
adc
rorb
pushl
pop
xchg
push
lahf
outsl
aas
ud1
cmp
push
xchg
orl
cmpsb
ret
data16
sub
mov
mov
in
adc
iret
mov
fistps
xchg
test
adc
mov
or
stc
dec
js
lods
xor
cmp
mov
jno
std
std
ja
mov
popf
lods
popf
fstpt
sub
gs
lds
xor
mov
push
jecxz
nop
lock
rcrb
in
inc
inc
scas
stos
ret
push
jnp
pop
or
idivb
cwtl
jae
sti
mov
cmp
or
push
pushf
jne
fstl
mov
fidivs
sub
xchg
mov
pop
adc
push
mov
fisttps
loope
jae
lcall
repz
mov
push
mov
sub
push
sti
movsl
sub
or
xlat
mov
nop
in
std
cmp
jg
sbb
jb
dec
aaa
push
lahf
push
je
js
mov
xor
test
cltd
push
lock
insl
sbb
jno
xchg
sub
ja
sbb
inc
mov
aaa
push
in
jne
push
out
mov
fcmove
or
in
mov
fldt
rcrb
dec
mov
or
dec
jg,pt
notb
stos
outsb
mov
shll
fstpl
into
or
mov
out
jo
shll
pop
push
mov
fdivrl
cltd
xchg
xchg
out
sub
sub
mov
out
outsl
or
add
insl
outsb
adc
cmpl
inc
gs
idivb
jo
mov
lock
pop
aad
or
mov
push
xchg
add
sbbb
dec
sub
ret
stos
clc
xchg
sub
jb
pmulhuw
xchg
cmp
dec
jmp
xchg
sub
jmp
arpl
push
xor
dec
int3
imul
jno
sub
lds
jg
pushf
stos
fucomip
cltd
push
imul
fidivrl
ja
cs
mov
add
sub
adc
hlt
stc
dec
das
jle
cmp
adc
xor
or
sbb
mov
jb
adc
mov
or
cmc
adc
lock
jge
testl
lods
mov
jg
nop
mov
lds
add
aad
mov
xor
clc
ja
push
push
clc
out
out
dec
pop
jge
imul
adc
inc
mov
xchg
push
icebp
push
jecxz
mov
out
lahf
insb
fidivs
mov
les
stc
mov
lahf
leave
testb
xchg
pop
hlt
push
push
rorb
cld
pop
aad
adc
dec
fnsave
xchg
cs
imul
inc
mov
incb
jp
xchg
jl
jl
inc
outsl
or
jg
in
pop
stos
imul
ret
std
jns
testb
xchg
adc
daa
out
addr16
or
aam
push
je
hlt
pushf
stos
repz
jmp
loope
dec
shrb
dec
push
adcb
mov
mov
addr16
push
jle
cmp
ret
nop
sub
das
dec
jo
mov
mov
pop
out
cs
fldcw
mov
repnz
adc
mov
sub
jnp
push
push
lret
pop
cmp
cmp
inc
aam
in
mov
mov
and
shll
mov
in
aam
lret
bound
cmpsb
dec
stc
imul
jecxz
dec
andb
mov
mov
sbb
lret
xchg
sub
sub
adc
push
fnstenv
mov
fidivrl
cltd
pop
hlt
xor
jno
push
xor
call
lods
adcb
mov
scas
js
dec
mov
push
ja
test
and
mov
mov
sub
sbb
push
call
push
sub
lcall
jb
hlt
repnz
movsl
pshufw
mov
mov
xchg
inc
and
pop
lods
mov
or
rep
lds
gs
dec
adc
jg
js
cltd
xchg
ss
and
cmp
xor
cwtl
and
sub
mov
xlat
dec
icebp
cli
cmp
loope
ret
push
cmp
dec
mov
jbe
push
setg
inc
outsl
dec
inc
in
popf
lahf
push
lcall
andb
inc
jnp
xor
negl
mov
xchg
in
mov
aaa
gs
repnz
xor
idivl
inc
fmull
mov
dec
sbb
dec
in
xchg
stc
and
pop
cltd
mov
jmp
ficoml
inc
fdivrs
bound
lret
xor
cltd
cwtl
sub
mov
scas
incb
sbb
movsl
jl
adc
idivb
and
inc
out
mov
adc
mov
xor
shll
sarl
jns
or
cmp
loopne
jo,pt
std
jne
pop
out
stos
aad
push
jbe
xor
imul
aad
push
ja
stos
imul
xor
notb
xchg
das
popa
movl
pop
xchg
push
movsb
decb
les
out
xor
sarb
sub
fstpl
mov
xchg
push
pop
es
jns
or
pop
aas
xor
mov
push
in
enterw
movsl
cmpb
test
gs
mov
data16
imul
push
sbb
xchg
popa
sti
xor
add
add
jo
mov
loope
ja
push
add
dec
insb
mov
iret
mov
push
cmc
adc
add
addr16
ja
int
push
adc
push
js
out
xor
mov
ljmp
shlb
xorl
out
push
ret
mov
xchg
dec
sub
mov
mov
int3
mov
pop
xchg
sarb
stc
cmc
out
repnz
leave
stos
insb
outsb
in
shll
inc
xlat
add
rcrl
js
sub
int
add
popa
fs
mov
pop
xlat
jns
repz
jno
fildl
aad
out
fs
jmp
in
xchg
hlt
out
inc
push
pop
jp
popa
addr16
cmpsl
pop
fistps
push
fcompl
inc
in
xchg
ljmp
clc
inc
jne
mov
std
arpl
fisubrl
sti
lods
fstp
cmp
aad
lods
mov
movsl
cs
out
hlt
dec
ret
daa
cmp
mov
mov
test
lret
psubb
sti
clc
mov
test
les
pop
mov
mov
lret
cmp
mov
fs
test
fwait
dec
pop
fnstcw
mov
push
outsl
sarl
fnstsw
in
adc
cmp
fsub
ja
cmpsb
enterw
das
xchg
mov
ja
divl
push
mov
lods
and
jno
push
jp
mov
imul
jno
inc
cltd
mov
lods
es
out
push
in
xor
cwtl
movsb
mov
xor
dec
mov
hlt
cmp
sub
sub
xor
push
scas
pop
sahf
cs
jg
ficomps
push
or
pop
ja
lods
jmp
cltd
jns
sarl
mov
aaa
adc
push
pop
out
or
jecxz
add
pop
cmp
movsb
dec
outsb
xor
int
jb
xlat
lock
filds
pusha
test
cld
sub
in
pop
sbb
xor
mov
jo
adc
xchg
inc
push
adcl
cmp
jne
jnp
dec
cmc
aam
imul
out
je
xchg
notb
mov
cs
mov
ljmp
cmp
xchg
or
gs
loope
add
xchg
sub
fstps
movsl
or
cli
inc
jmp
rol
jbe
add
hlt
sbb
lret
pop
sub
dec
insb
xorl
inc
push
and
rcrl
mov
aad
push
push
jg
lods
ja
fwait
or
add
dec
push
lea
in
and
push
mov
mov
shr
jl
cmp
sub
xor
pop
dec
and
mov
loope
test
sbb
inc
push
pop
dec
std
inc
repnz
dec
push
jmp
bound
adc
dec
add
ljmp
in
in
rorb
lock
rorb
decb
adc
fwait
insb
inc
adc
or
gs
jb
mov
es
lret
and
ret
lds
sbb
mov
clc
mov
std
mov
dec
mov
pushf
jno
in
mov
mov
jae
jbe
mov
mov
xor
cmpsb
add
mov
push
pop
sbb
mov
sub
insl
rorb
aaa
mov
inc
push
cltd
or
sarl
iret
xor
mov
repz
xchg
test
lods
test
aad
arpl
mov
retw
clc
fcoms
mov
outsl
scas
in
clc
and
inc
dec
loope
add
or
jge
gs
movsb
jge
repz
int
pop
lea
fiaddl
xor
sub
fwait
mov
stos
lea
sub
test
std
sahf
jns
and
dec
mov
stc
stos
mov
pop
ds
mov
dec
adc
int
push
lock
fsubrl
dec
sti
mov
movsb
mov
rorl
inc
jmp
add
inc
jg
xor
mov
jbe
inc
in
cmp
ret
out
stos
xor
dec
stos
test
mov
outsl
flds
fcompl
sbb
movsl
adc
rcrb
sbb
jns
fcoms
or
xlat
push
xchg
add
repz
adc
cmp
xor
push
paddd
icebp
push
leave
xor
cld
jnp
jne
leave
imul
mov
mov
aas
sbb
movsb
add
lea
pop
mov
mov
icebp
xchg
or
in
sub
cmp
xchg
popa
sbb
loop
push
xor
sub
inc
mov
push
push
ret
push
stos
fsts
clc
sahf
cmp
subl
add
xor
mov
sti
into
cmpsl
push
in
mov
mov
mov
mov
in
xchg
lea
pushf
cli
jns
pop
adc
mov
in
xchg
push
arpl
emms
pop
cld
jmp
ret
iret
into
lret
xor
inc
leave
jecxz
lahf
call
pop
stc
lds
jae
push
jmp
sub
pop
fcmovbe
lcall
shrb
cmp
mov
sbb
or
ss
adc
pop
jge
arpl
add
mov
sbb
and
xchg
sar
push
cli
stos
sub
dec
and
pop
fwait
shll
mov
fstps
cmp
jo
sbb
in
std
dec
pop
filds
imul
mov
push
adc
sub
aad
stos
stc
jne
pop
jne
or
rol
or
ljmp
xchg
dec
mov
mov
adc
add
sti
add
cmp
add
add
fdivrs
arpl
push
cld
sub
xchg
mov
imul
cmp
aam
jg
ficoml
repnz
jp
das
cmp
adc
cs
sti
sbb
insb
sbb
mov
outsl
std
stos
loopne
mov
pop
cmpsb
dec
jns
or
rcl
push
call
xchg
js
je
scas
xchg
scas
bound
jl
imull
scas
xor
jne
arpl
cli
pop
push
inc
push
js
jecxz
mov
adc
fs
testb
vpmulhuw
nop
aad
ljmp
ret
xchg
inc
mov
cmc
aad
jno
adc
sbb
xor
rolb
or
jbe
xchg
loop
cmp
loop
out
das
sbbb
andl
cld
rol
mov
push
sub
mov
mov
adc
fadds
xchg
in
push
sub
mov
pop
and
popf
es
jne
dec
jmp
in
sub
in
out
mov
out
push
ret
jbe
dec
push
xor
add
clc
jl
adc
adc
jno
lods
mov
pop
loope
addr16
and
adc
repnz
fists
jmp
rcll
adc
xchg
cs
inc
jne
and
or
test
mov
sub
jl
add
mov
dec
jne
cmp
stos
leave
mov
popa
into
imulb
adc
cmp
push
adc
dec
outsl
nop
mov
daa
rorl
xor
mov
or
jne
jns
dec
dec
out
dec
mov
mov
sub
and
test
loope
sbb
fldl
shrl
push
sub
loop
data16
in
imul
cltd
fisttps
les
sub
mov
push
daa
fcmovb
pop
std
fmull
add
pop
pop
test
out
stc
inc
and
cs
jb
mov
das
cmp
pop
js
jne
fdivrs
addb
data16
cmp
stos
push
mov
jb
fdivs
fs
mov
xlat
into
adc
pop
sti
test
cmp
push
cld
sarb
clc
outsl
je
mov
inc
mov
push
dec
inc
cmpsb
push
jbe
hlt
aaa
cmc
mov
xor
repnz
aad
subb
std
in
mov
jp
imulb
sbb
loope
mov
outsb
into
jb
pop
pop
lret
jbe
inc
sbb
sbb
dec
gs
dec
adc
lock
shlb
outsl
jb
push
jmp
mov
add
ror
pop
push
adc
inc
xchg
or
stos
pop
push
xlat
pop
add
jg
call
lcall
xor
repz
in
or
movsl
lds
in
mov
sbb
popa
hlt
repnz
push
pop
ret
fldcw
push
in
xor
sahf
or
sbb
pop
push
adc
xchg
inc
lret
hlt
in
and
outsl
movb
jbe
movl
leave
aaa
sub
or
aas
jp
lds
pushf
inc
dec
lea
pop
push
xor
mov
mov
cli
pop
jae
jg
push
pop
push
mov
insb
adc
mov
xor
icebp
not
cmp
jmp
cmpl
jne
loop
int
sti
mov
mov
and
scas
xchg
aaa
repnz
adc
dec
dec
fisubrl
dec
dec
in
jno
push
dec
adc
pop
cmp
or
xor
aad
push
lret
test
test
sub
sub
push
push
fdivp
and
cmp
inc
adc
mov
xchg
xor
jg
xor
push
lods
jne
sbb
shl
mov
sbb
cld
xor
and
xor
sbb
mov
push
push
test
jmp
mov
cmp
popa
push
pop
jae
pop
adc
xor
jl
movsb
mov
insl
pop
adc
jecxz
lds
lret
shl
and
push
test
mov
pop
xchg
push
insb
sbb
xchg
jg
mov
lahf
lcall
rol
pop
cmc
push
pop
jbe
jmp
aas
xor
mov
jae
insl
cs
and
dec
xchg
cmp
sub
pop
cwtl
mov
pop
xchg
push
xchg
fwait
adc
repnz
stos
or
and
addr16
dec
and
pop
sbb
or
pusha
push
outsb
xchg
jle
or
jle
pushf
cmpsl
aam
push
push
das
cmc
lcall
pop
mov
loop
mov
adc
mov
cmp
mov
shrl
in
enter
outsl
mov
jle
and
enter
es
jno
loope
test
in
stos
mov
fstps
repz
dec
aad
shl
or
cld
mov
jae
ljmp
call
scas
lods
lret
pop
xchg
out
cmc
clc
decb
push
jb
adc
inc
pop
add
lret
fstpl
push
mov
rep
push
jne
clc
jge
icebp
fwait
xor
dec
hlt
xchg
jne
mov
inc
ret
mov
inc
scas
mov
push
push
lods
dec
mov
pop
pop
movsb
or
add
push
adc
jnp
adc
dec
movsb
stos
or
jge
cmp
lret
test
jecxz
loope
add
xor
xor
pushf
jnp
mov
ja
xor
pop
mov
inc
stc
adc
push
and
xchg
movsl
es
adc
mov
leave
mov
sub
ret
push
sbb
xor
push
sahf
push
lods
mov
jno
add
cmp
sub
push
roll
aaa
mov
fs
test
testl
clc
nop
push
xor
fcoml
int3
xchg
inc
cli
sbb
mov
inc
lcall
mov
cwtl
dec
ret
xor
stos
subl
enter
in
jmp
test
inc
jmp
xor
dec
push
addr16
mov
gs
jo
jnp
push
cmc
cs
jmp
lahf
bswap
xchg
cmp
sti
imul
dec
mov
sub
orb
outsl
scas
jne
xchg
loope
or
jne
cmp
add
mov
out
mov
rcrl
in
or
stos
into
xor
xchg
or
pop
pop
iret
xchg
or
sti
in
es
and
mov
push
mov
fnstenv
aaa
sub
xor
mov
ljmp
lahf
imul
addr16
jae
jge
shl
lock
cld
sub
jg
or
cltd
add
jg
rcrb
mov
xor
dec
cmp
outsl
push
outsb
ljmp
push
and
ljmp
adc
pop
std
loope
jp
and
bound
scas
mov
nop
jmp
scas
popf
ljmp
scas
cltd
cmp
push
pop
cmp
push
stc
test
cld
sub
ret
xchg
push
dec
push
fstpt
xchg
std
lret
aaa
daa
mov
sub
sbbb
lods
mov
popa
loop
xchg
sarb
mov
into
xlat
lock
mov
push
adc
les
rcll
divb
ret
push
inc
mov
ds
aad
pusha
jmp
or
lea
out
dec
mov
test
xlat
leave
mov
mov
sub
and
in
into
fsubrs
arpl
imul
cmpsl
sub
imul
outsb
lods
or
cwtl
lods
repz
aad
dec
call
cmp
push
xchg
dec
mov
add
sbb
packssdw
lea
mov
mov
adc
sbb
lea
insb
sbb
and
pop
inc
outsb
out
mov
add
test
fistpl
rcll
cmp
hlt
xor
enter
lea
mov
inc
push
imulb
xchg
repnz
popf
stc
xchg
inc
mov
mov
jae
leave
push
mov
pop
and
into
aaa
push
xlat
stos
mov
mov
jb
sub
rcll
daa
pop
xor
scas
pop
xchg
orb
je
jnp
add
sub
out
sti
lret
xor
lock
cld
adc
cmp
adc
jmp
inc
cli
fcoml
cmp
sbb
adc
out
mov
adc
dec
aam
ja
push
lods
mov
int3
dec
push
das
pop
pop
movsl
faddp
push
mov
leave
ret
mov
lods
ret
mov
test
les
cmpsl
mov
mov
ret
sbb
pop
pop
cmp
pop
movsb
mov
pop
xor
inc
mov
and
gs
stos
leave
mov
mov
xor
sar
pop
inc
sub
mov
push
gs
addr16
push
dec
mov
adc
push
fisubrs
movsl
dec
mov
push
pop
mov
out
mov
loop
mov
sub
push
sarb
push
mov
adcl
int
jo
and
pop
jle
out
in
push
mov
sub
pop
mov
xchg
cmpsb
pushf
jp
dec
jo
hlt
dec
xor
inc
sub
cs
sbb
push
sub
push
xchg
outsb
mov
loop
sbb
repnz
fs
scas
mov
gs
sub
push
cmp
lret
pop
lods
lcall
jnp
mov
and
outsb
cmp
cltd
imul
shll
lea
pop
and
adcl
insl
xchg
sahf
int
push
rcrl
cld
nop
std
sub
imul
mov
mov
add
or
xor
push
pop
adc
je
shll
and
addr16
popf
mov
rcrl
mov
inc
mov
fs
xchg
and
pop
xchg
mov
outsb
add
jnp
mov
imul
movsl
jecxz
test
cmp
leave
imul
pop
jno
cmp
sub
aaa
dec
xchg
jno
mov
aad
mov
mov
int
scas
xor
fcmovbe
jge
push
imul
jmp
push
imul
arpl
cld
pop
pop
mov
and
push
cs
inc
scas
sub
mov
sbbb
clc
inc
mov
mov
outsl
push
jb
loopne
dec
dec
pop
mov
inc
test
sub
xor
and
adc
and
inc
jl
pop
pop
sub
cmp
das
cmp
cmc
icebp
in
and
pusha
dec
or
xorl
xor
jo
push
cmp
stc
pushf
jl
adc
or
in
fucomp
cmpsb
push
dec
movsl
jne
ja
out
ret
ds
or
jle
stos
mov
or
sahf
mov
add
or
adc
in
call
jg
inc
push
push
xchg
push
test
fcoml
sbb
xchg
jns
into
mov
mov
cltd
add
sahf
mov
imul
addr16
mov
xchg
fcompl
outsb
nop
cmp
cmp
adc
outsl
inc
call
mov
dec
scas
into
fnstcw
jae
xchg
ljmp
cmpb
and
lcall
jg
cmp
fwait
test
xor
push
xor
aam
loop
pusha
mov
lds
jb
cmpsl
xor
out
fldenv
adc
xlat
sbb
push
xchg
pop
pop
pop
shrb
jne
xlat
stos
mov
ret
das
int
add
cmpsb
jne
out
dec
data16
jg
sbb
ljmp
sub
jno
cmp
aad
repz
jl
repz
push
stos
ret
fldenv
xor
push
xor
nopl
mov
sub
mov
mov
xchg
jg
rcrb
clc
cmpl
xor
dec
and
inc
cwtl
dec
popa
push
enter
std
xlat
fstps
xor
sti
enter
push
ret
int3
out
addr16
adc
xchg
jle
cmp
and
pushf
hlt
stos
outsb
fdivp
andb
es
and
xchg
cmp
js
add
stos
pop
data16
nop
inc
pop
dec
cwtl
dec
mov
rcrl
fs
or
adc
ret
dec
mov
scas
push
push
pop
popa
clc
push
dec
jbe
pop
pop
enter
sub
lfs
pop
push
das
mov
and
clc
mov
je
mov
imulb
or
xchg
xchg
rorl
div
jns
je
and
mov
jbe
xchg
jne
out
pop
sti
xchg
enter
stc
push
hlt
push
mov
lods
push
xchg
and
iret
inc
jne
sbb
sub
and
leave
adc
dec
ret
push
push
push
pop
cmp
push
xor
push
shll
adc
pusha
pop
fucom
repz
xor
movsl
fcmovnbe
repz
mov
out
dec
fisubl
fidivl
mov
mov
addr16
mov
sbb
fwait
cmp
mov
test
arpl
mov
or
rclb
enter
xchg
mov
dec
pop
sbb
int
push
clc
bound
mov
int
cmp
std
mov
cmpsb
xor
imul
ds
sub
lea
mov
test
aaa
sbb
lea
mov
jle
adc
and
imul
popf
pop
jno
fiaddl
cs
out
std
into
cmpsl
mov
xchg
inc
push
idivb
stos
or
sbb
sub
add
push
cwtl
leave
mov
mov
xor
idivb
pop
bound
cmp
inc
push
push
mov
lcall
iret
push
jge
les
inc
dec
repz
inc
or
sub
dec
xlat
cmp
and
lret
fdivrl
aad
rolb
mov
and
mov
pop
jl
fcompl
fwait
mov
push
pop
data16
jb
movsb
das
sbb
aam
or
inc
std
inc
sub
pop
scas
pop
adc
imul
add
fstpl
loop
aam
movsl
cli
loop
pusha
repz
adc
decb
sar
jne
sbb
cmc
lcall
jae
test
aam
clc
cmp
in
sub
bound
sbb
out
inc
test
int3
clc
jmp
in
std
mov
xchg
push
mov
rcr
jne
adc
sub
lea
push
xor
push
loop
lock
out
aam
sub
add
adc
add
jae
sbb
sahf
push
lea
ljmp
xchg
xchg
jne
mov
into
pop
push
jg
les
dec
pop
add
insl
inc
data16
sub
xchg
push
stos
idivb
jbe
icebp
mov
in
xor
fidivrs
pop
shr
jp
adc
scas
rorl
add
inc
ffree
adc
pop
pop
pop
leave
xchg
mov
data16
push
addr16
lods
xor
cwtl
dec
jb
lcall
mov
mov
dec
or
pop
pusha
adc
jne
xchg
cli
dec
adc
jbe
xor
rcl
inc
aad
mov
push
stos
repz
xchg
or
lahf
sub
pop
xchg
and
loop
ret
data16
in
xchg
cmp
in
mov
notb
fcomps
repz
dec
mov
push
push
push
stc
movsl
mov
adc
sbb
xchg
push
stos
daa
imul
mov
xchg
jne
ss
jp
dec
jbe
jmp
pop
loope
push
pop
inc
jmp
and
outsl
fcoml
cltd
mov
testb
clc
repz
shll
pop
mov
pop
or
test
dec
adc
jmp
ss
outsl
sti
int3
or
adc
pop
scas
ss
mov
mov
jl
push
pop
jl
insb
aad
fwait
dec
fisubrs
xor
icebp
xchg
sub
idivb
mov
lods
loopne
sub
or
iret
loope
inc
jp
js
cld
clc
cmpsl
mov
es
pop
out
outsb
stc
push
popa
clc
repnz
inc
aad
push
stos
xchg
fildl
rcll
scas
adcl
roll
xchg
cmpsl
divb
xor
stc
mov
mov
adc
pop
ljmp
and
shll
dec
push
dec
or
xchg
add
pop
int3
push
or
and
dec
pop
out
dec
and
xchg
pop
std
jb
movsb
gs
insb
xor
loop
mov
cs
jp
nop
xchg
shlb
sbb
mov
push
ret
jge
jl
xlat
out
or
sbb
sbb
xchg
ss
stos
cld
xor
popa
push
sub
xor
mov
pusha
jp
pop
fcomp
xor
mov
xchg
sub
lret
mov
and
mov
sti
or
popf
adc
stos
adc
rcrl
or
mov
jnp
shrl
jo
cmp
pop
mov
xchg
dec
inc
cmp
push
adc
jp
clc
xor
xchg
fdivl
mov
push
loopne
dec
mov
push
and
lea
push
mov
and
sub
mov
jge
lahf
ja
dec
fisubrs
jg
stos
push
pop
test
adc
sub
pushf
pop
and
mov
jno
lahf
js
aam
xor
insb
cs
test
jae
int3
dec
ficoms
daa
mov
mov
std
xchg
imul
xor
loopne
rorb
scas
out
jmp
les
push
pop
js
mov
je
sub
or
shl
xor
xchg
push
test
je
sub
add
hlt
mov
jle
or
adc
jno
push
addb
rcrb
popa
jl
sahf
push
cld
or
inc
pop
cltd
in
lcall
in
imul
insb
push
sbb
aam
sbb
es
scas
xor
cli
loopne
cmp
leave
ds
cs
stos
mov
addl
add
outsb
rcll
notb
imul
movsl
fsubrp
xor
pop
outsb
mov
and
push
dec
sahf
sti
lret
cmp
push
and
or
push
imul
ljmp
ret
dec
aaa
cwtl
mov
aad
xchg
cmp
ja
mov
scas
sarb
dec
or
dec
imul
pushf
sbb
inc
dec
cmp
jnp
fistpll
idivl
ljmp
push
es
mov
jo
mov
bound
adc
jmp
out
in
add
pop
mov
jecxz
mov
lds
movsl
arpl
jle
sub
scas
mov
into
test
enter
xchg
adc
ss
cmp
pop
pop
add
xor
lods
mov
repnz
idivb
or
jle
lahf
adc
rcll
jle
jnp
mov
std
dec
push
and
sub
pop
cmp
int3
mov
ljmp
fidivl
into
int
test
divb
call
lods
mov
ret
adc
jecxz
push
ficoml
fistpl
fisttps
mov
stos
inc
insl
pop
pop
sub
or
jnp
mov
sahf
cmp
cli
stos
call
loopne
fdivrp
pop
imul
jmp
out
movsb
push
cld
adc
mov
into
fs
fcoms
push
jl
or
flds
fs
sub
inc
sbb
lahf
std
and
addb
mov
ss
jp
dec
sbb
sar
mov
xor
ret
int3
mov
repnz
fwait
xchg
fwait
jnp
xor
jnp
mov
sbb
push
dec
dec
fidivrl
cltd
std
ror
enter
adc
call
imul
cld
rolb
pop
repz
jne
cwtl
imul
inc
daa
xlat
inc
jbe
pop
out
push
jge
icebp
jecxz
xchg
inc
mov
xlat
pop
cmp
adc
inc
xchg
inc
data16
sbb
imul
cmp
pop
or
pop
out
hlt
ljmp
xor
insb
pop
add
cmpsb
pop
fldt
repz
inc
mov
add
mov
ljmp
pop
adc
out
xchg
pop
call
mov
adc
sarl
cmp
dec
std
and
jbe
sti
or
fnstsw
pop
cltd
out
and
pop
addr16
cmp
and
jns
arpl
repnz
lods
pop
jno
sub
mov
dec
jmp
inc
jne
out
push
xor
jb
jne
loopne
out
mov
lcall
bnd
pop
unpckhps
rorb
outsb
lods
push
sti
xor
sbb
cmp
scas
jo
dec
out
pop
adc
cli
adc
xor
push
add
jmp
movsb
jb
fldl
jl
cli
pushf
inc
lahf
loopne
std
dec
pusha
mov
dec
lret
outsb
inc
cmpsb
xor
hlt
je
mov
cld
arpl
aam
je
mov
jne
xchg
shl
stos
push
adc
cmc
push
pop
stos
cmc
lds
cmpsb
fdivs
test
adc
and
out
add
sub
mov
mov
fs
aad
mov
xchg
fisubl
add
cli
fstpt
cmpl
cltd
push
mov
test
pusha
add
push
mov
jmp
popa
movsb
sarb
add
aaa
push
scas
push
mov
mov
fdivrl
dec
and
rorl
push
das
xor
adc
xor
inc
and
push
divb
inc
sbb
push
cmp
jg
bound
jnp
mov
jne
inc
xor
pop
push
arpl
rorb
inc
jle
ret
fmul
das
loop
frstor
in
lods
adc
pushl
notl
leave
sbb
in
ds
imul
pop
push
sub
push
sbb
rorb
lcall
or
mov
sahf
aam
cmp
sub
push
lock
dec
lods
je
sub
push
push
shlb
mov
int3
popa
das
dec
jo
out
scas
into
jno
add
insl
or
mov
cmpsl
push
xor
mov
jle
mov
jno
jmp
push
int
or
ss
xor
or
and
int
push
stos
paddb
xlat
lods
dec
adc
leave
call
sub
rcll
cwtl
ss
xchg
inc
adc
cmc
pop
insl
fiaddl
bound
outsl
lret
mov
stos
pop
out
add
insb
bound
dec
cmp
sbb
clc
packssdw
shl
movsl
cmp
scas
repz
stos
mov
inc
cmc
push
mov
loope
in
mov
lahf
pop
ret
sbb
mov
gs
pop
adc
xorl
cld
sub
mov
mov
pop
in
push
xor
gs
jge
mov
lods
adcl
ds
idivl
mov
cmp
jge
push
cs
pop
sarb
mov
fwait
fs
sti
or
push
je
or
or
cmpsb
push
orb
pop
push
xor
out
shrb
cmp
lock
cltd
rorl
repz
arpl
cmpsl
push
sbb
movsl
data16
cmp
cs
add
shl
mov
cmpsb
mov
push
xor
dec
loopne
hlt
std
mov
mov
cltd
cltd
inc
dec
imul
jg
lods
faddl
lods
dec
mov
mov
mov
xor
push
enter
decb
xor
mov
push
cmp
xlat
jnp
sahf
xor
movsb
loop
mov
mov
jne
jnp
jl
cmp
test
aad
pop
push
idivb
movsb
mov
xchg
xchg
int
jge
cltd
out
jnp
rolb
test
push
repnz
int3
stos
and
cli
pop
adc
xor
xchg
mov
std
jnp
fnstcw
mov
mov
repz
add
add
aas
pop
or
cmp
sahf
push
jne,pt
xor
lds
ss
mov
jl
cli
std
sub
in
push
push
cmp
in
xor
scas
scas
xor
movsl
aad
xor
test
push
inc
rcrl
jo
mov
push
std
pop
push
xchg
lock
sbb
inc
mov
jle
shrb
inc
ss
adc
jge
jle
jnp
mov
repnz
mov
and
lods
and
pop
rcll
aad
test
push
adc
adc
shlb
pop
adc
stc
cs
aaa
ja
push
cmp
sbbl
leave
mov
popf
dec
divl
dec
lret
div
mov
clc
pop
mov
stos
jns
push
imul
out
into
out
inc
fcompl
fs
ja
and
sti
sbbb
in
shll
xchg
fwait
mov
fs
mov
inc
inc
fcomps
xchg
mov
aaa
adc
in
enter
negb
addr16
scas
in
dec
push
cmpsb
stos
out
push
mov
dec
cmp
ja
and
push
cmp
and
mov
adc
ret
sahf
adc
mov
shll
fldt
mov
popa
mov
add
pop
cli
jle
push
cmp
jg
xchg
and
aas
adc
cli
xor
mov
sbb
gs
push
scas
xlat
fistpll
mov
ret
stos
adc
add
dec
push
xchg
sub
in
mov
out
xor
sub
mov
pop
lock
add
mov
aas
rorb
into
and
jle
out
add
mov
mulb
loope
loopne
and
lret
cmp
inc
dec
xlat
sub
leave
push
mov
inc
or
push
xor
xchg
mov
pusha
clc
push
sub
leave
repz
std
cmp
pusha
adc
mov
jge
leave
fisubl
ret
mov
aad
popa
cli
inc
push
inc
xchg
pop
popl
in
xchg
aam
dec
ficompl
rcr
or
shlb
jns
lahf
push
aam
test
jge
repz
out
lds
aam
out
adc
call
ret
sti
dec
dec
mov
jmp
inc
test
mov
out
inc
sub
mov
jbe
aad
nop
pop
test
sbb
mov
fidivrl
clc
inc
notl
cmp
jge
or
push
sbb
or
xchg
pop
or
push
jecxz
jae
fwait
test
into
int3
lods
pop
aas
pop
xchg
inc
cli
mov
call
testl
or
clc
sub
inc
and
adc
cli
xchg
cmp
test
das
mov
ss
arpl
shlb
aas
std
jle
rolb
lds
test
lods
dec
xor
rcrb
pop
int
dec
mov
pop
push
push
jg
sub
cmp
mov
jecxz
pop
ja
adc
cmp
call
xcrypt-cbc
cmpsl
jbe
loope
addr16
outsl
mov
add
imul
cmc
cmp
dec
insl
push
push
mov
dec
inc
xchg
filds
out
mov
mov
ljmp
daa
aaa
jle
subb
lds
stc
lea
outsb
test
jl
dec
mov
cltd
fistps
scas
sub
xchg
push
ljmp
push
jg
push
in
in
xor
lock
sub
scas
fisttps
push
mov
pop
xchg
fstps
test
orl
dec
dec
pop
inc
outsb
popf
mov
lock
stos
sub
sbb
pop
pop
iret
aas
fs
std
xchg
sub
cmp
sbb
popa
stos
cmp
and
dec
ja
andb
push
pop
mov
mov
outsl
lcall
int
cmpsl
mov
xchg
lret
es
test
push
mov
push
mov
hlt
pop
clc
mov
jl
push
sub
imul
out
dec
xor
ljmp
xchg
push
xor
sarl
lods
dec
dec
out
or
mov
pop
mov
fisttpl
mov
sub
sti
ds
daa
imul
sbb
lea
shll
fcoms
pop
inc
sbb
adc
lret
dec
mov
dec
pop
xor
bound
outsb
int3
cli
xor
jae
lret
arpl
addl
shrb
movsb
sub
lret
fisubrl
fisttps
mov
sub
test
out
and
stc
cmp
jecxz
adc
nop
xchg
mov
or
mov
and
xchg
add
sub
push
call
leave
fs
cmp
arpl
adc
int3
or
insl
out
stos
lret
test
mov
jle
mov
fimull
dec
cmp
jecxz
into
cmp
fildll
pop
mov
aam
jle
aad
inc
lret
dec
ret
aad
popa
in
xchg
inc
call
jecxz
adc
dec
stos
outsl
xor
out
pop
shrb
push
pop
inc
cmc
sub
jae
or
outsb
adc
jae
pop
mov
test
outsb
lea
or
xchg
jl
cmpsb
or
shl
sbb
jae
ret
das
bound
repnz
xchg
cmpsl
mov
lds
fimull
je
das
jae
fmuls
sti
loope
mov
out
or
int
data16
loope
jne
rorl
cwtl
push
jmp
push
jne
adc
dec
push
or
jmp
and
pop
test
jg
test
shl
sbb
pop
xor
cli
dec
pop
push
sub
dec
test
int
lds
adc
fidivl
cmpsl
mov
imul
ds
xchg
xchg
or
inc
mov
dec
les
mov
dec
sahf
notb
iret
in
fnstenv
ret
inc
sbb
addr16
add
out
ret
lahf
xlat
cmp
jno
ffree
pop
cmp
test
rorl
mov
and
movsb
dec
aad
sub
fdivl
push
jp
mov
dec
aad
cmc
push
xor
pop
movsl
fwait
pop
clc
cli
sbbl
iret
sub
push
push
and
stc
adc
test
test
lret
mov
sti
xchg
test
xchg
nop
dec
xchg
and
mov
imul
mov
sti
sub
lods
mov
mov
imul
jge
cs
push
aaa
xor
jno
mov
pop
loope
in
ror
fsubrs
xchg
mov
in
aam
imul
stos
lret
das
mov
fcoms
sti
jl
jne
xor
sbb
inc
mov
xor
int
pop
pop
mov
outsb
je
push
mov
rcrl
mov
shlb
loope
jns
sarl
xor
imul
das
adc
cmp
lea
adc
test
mov
imul
inc
jbe
inc
mov
push
dec
orl
pop
stos
jmp
mov
lahf
call
addr16
das
mov
pop
inc
loop
ucomiss
mov
jmp
mov
sub
clc
sbb
fisubrl
push
pop
sub
cld
lods
dec
push
sbb
inc
fs
mov
stos
add
dec
movsl
cmc
lret
xchg
jmp
addl
test
fistpll
cmp
add
mov
out
jge
jl
clc
pushfw
mov
push
sbb
scas
repnz
add
sar
push
sbb
sbbb
push
cltd
clc
and
ljmp
mov
mov
add
jne
adc
jp
cwtl
mov
xchg
cltd
xchg
push
call
push
add
pop
xchg
out
mov
pushf
shl
sbb
jnp
or
jb
push
lea
and
or
mov
out
jne
cmp
das
ficompl
dec
and
sarl
rclb
subb
jge
je
inc
jge
add
xchg
sub
dec
xchg
jmp
ss
or
das
ljmp
dec
mov
popf
inc
sbb
stos
into
push
pop
cmp
loop
push
mov
cld
and
inc
mov
sub
inc
int
jl
dec
leave
insl
std
push
inc
mov
imul
jl
flds
push
inc
xchg
sarl
mov
aad
mov
jle
adc
xchg
jp
xlat
jmp
jns
and
mov
aam
icebp
pop
dec
loop
push
popf
lock
mov
pop
in
addr16
push
ss
out
dec
das
das
sub
mov
xchg
push
push
pop
aaa
mov
pop
cmp
bound
jg
pop
jnp
fidivrl
cmp
sbb
in
icebp
cmp
scas
dec
stos
inc
inc
cmp
dec
mov
stos
sub
daa
mov
adc
rcl
mov
cmp
sub
out
lahf
cmpsb
es
cli
adc
mov
fs
jae
dec
pop
cmp
mov
inc
mov
mov
cmpb
and
mov
inc
jnp
cmc
adc
push
inc
fisubrs
fists
mov
and
mov
jo
into
ja
jmp
and
mov
lret
in
ret
mov
mov
sbb
repnz
adc
jno
pop
xchg
dec
orb
push
jo
or
dec
mov
cmp
fcoms
ds
fs
int3
and
xchg
movsb
out
lcall
je
dec
mov
and
cmc
push
cmp
jne
ret
pushf
jle
stos
idivb
or
movsl
cmp
outsl
jbe
adc
lea
adc
sarl
mov
cmp
aad
mov
out
xchg
dec
sbb
ficomps
jae
adc
xlat
sahf
daa
jno
into
cld
dec
scas
push
shl
mov
lcall
xchg
and
mov
addl
push
mov
push
dec
shrl
dec
sub
out
das
cmp
and
outsb
sub
xchg
push
adcl
jecxz
test
fsubs
and
fwait
cltd
xor
and
sub
dec
imul
icebp
gs
or
sti
aam
jno
ljmp
mov
pop
sbb
mov
jp
addr16
mov
pop
pop
sub
inc
scas
notl
out
rcrl
aas
les
mov
ja
inc
sbb
sbb
repz
xlat
xor
repz
dec
adc
out
push
lods
into
jo
xchg
dec
mov
lock
dec
dec
hlt
adc
fcoml
int
pop
pop
out
push
aas
mov
pop
mov
data16
or
lods
mov
repz
in
in
and
push
movb
test
dec
rolb
mov
divb
xor
push
sbb
movsl
inc
jo
aad
inc
push
push
mov
jmp
mov
xchg
lea
jbe
sbb
cwtl
daa
ret
xchg
fdivrl
insl
adc
mov
cmpsb
mov
fdivrl
dec
cld
push
out
xlat
inc
jae
mov
xchg
jle
sub
sahf
dec
jle
subl
cltd
mov
inc
movsb
xchg
aaa
and
xor
test
ljmp
jge
sbb
mov
pop
add
dec
ret
pusha
repz
adc
or
out
dec
mov
stos
pop
mov
mov
bound
cmp
sbb
push
aas
pop
push
sbb
xchg
outsl
and
and
lahf
shrb
and
mov
or
movsl
jle
leave
mov
dec
mov
mov
aam
mov
sub
scas
loope
mov
and
insb
clc
jne
out
dec
xor
inc
or
pop
jbe
repnz
call
jns
xchg
hlt
pop
loopne
adc
sbb
adc
pop
mov
out
je
jge
ret
xchg
pop
mov
jbe
aad
das
outsb
pop
sbb
outsl
or
dec
arpl
into
sub
popa
dec
shlb
rclb
inc
mov
sarl
int
xor
testb
lret
xchg
inc
xchg
xchg
xchg
fbld
cmpsb
loope
dec
mov
stc
sub
movsw
push
jle
mov
ja
sti
mov
dec
adc
jl
std
sbb
xchg
ljmp
rcrb
mov
es
and
pop
push
or
or
stos
pop
ss
clc
into
lods
in
flds
xor
cmp
fadds
mov
xchg
xchg
cmp
xor
jmp
push
dec
int3
fstl
push
push
xchg
sbb
pusha
sbb
dec
test
sti
add
xchg
dec
jmp
mov
cmpl
jmp
shrl
int3
and
xchg
scas
adc
or
insl
aam
pop
sti
add
imulb
imul
pop
popl
jmp
lds
loope
dec
fdivrl
dec
fnsave
xchg
lea
mov
out
adc
loope
jp
test
sti
int
std
sub
lods
mov
mov
xchg
movsl
fwait
dec
cld
sub
sbb
push
push
adc
sbb
sbb
inc
inc
pop
mov
cmp
xchg
in
push
adc
mov
xchg
mov
out
pop
out
mov
aaa
mov
push
js
mov
lds
push
jp
addr16
cmp
movsb
sahf
push
jl
fidivrl
pushf
cmp
jp
push
roll
mov
test
adc
sub
call
sub
or
dec
xchg
mov
pusha
mov
adc
pop
xor
xchg
sub
adc
repz
stos
pop
pop
sub
subl
adc
in
aad
int3
sbb
test
leave
jne
sub
jg
jae
adc
mov
jmp
sub
mov
push
gs
call
cmp
lods
inc
mov
stos
aaa
inc
ljmp
gs
repz
leave
jnp
mov
xchg
add
or
sub
sbb
stos
das
dec
shrb
insl
andl
shr
pusha
xor
mov
fistpll
movsb
shl
das
sahf
cli
test
jne
jecxz
in
aas
aad
or
mov
jnp
mov
pmullw
insb
mov
aad
xlat
mul
mov
jp
rorl
xlat
mov
outsl
insl
in
mov
cli
repnz
jne
and
dec
dec
or
pop
in
cmp
movsb
out
mov
fsubs
int
lods
inc
out
cmp
in
inc
jmp
dec
jo
orb
inc
nop
lret
push
xchg
fwait
jns
es
outsb
scas
iret
stos
cwtl
xchg
add
mov
pusha
ja
inc
jae
sbb
push
pop
pop
mov
jno
testl
xor
lds
inc
mov
hlt
out
mov
xor
iret
inc
mov
sti
inc
jg
icebp
imul
sub
push
mov
in
mov
stos
imul
ss
jp
and
fstl
push
jns
es
out
aam
test
mov
or
jnp
or
fsts
pop
lret
mov
jb
push
hlt
jg
popf
pop
sti
or
sbb
insb
pop
daa
lahf
test
mov
pop
popa
push
sub
sub
das
cmp
or
pop
sub
movsb
jo
scas
outsb
fucomp
daa
pop
cmp
jb
cmp
paddb
sbb
call
pop
fwait
xchg
data16
xor
mov
imul
xchg
fcmovbe
sub
stc
rolb
lcall
add
gs
jnp
mov
add
push
mov
cmp
dec
test
push
sub
test
in
jmp
leave
push
pop
lret
jp
adc
lret
mov
gs
or
dec
push
aad
mov
loope
jns
cmpsb
in
and
cmp
cmp
fistpl
jno
bound
xor
jno
jo
add
inc
cmpsb
dec
fisubrl
inc
jnp
cmp
cmpsb
and
jne
xchg
push
add
ja
loop
dec
movsl
in
pop
ficoms
xor
mov
dec
aas
int3
cmp
into
xchg
xchg
mov
jge
pop
add
clc
aad
sub
sub
dec
mov
bound
push
mov
gs
adc
xor
dec
mov
and
rcll
xchg
shr
shl
ficoms
fdivs
xor
mov
jecxz
push
dec
cli
bound
test
push
mov
mov
sub
orl
lret
lret
call
shrb
insb
mov
test
adc
sbb
pop
dec
je
cli
and
dec
fbld
cmc
in
pop
push
fwait
je
aam
jecxz
xchg
ficoms
push
xchg
sub
and
addr16
stc
loopne
cwtl
js
movsb
push
insl
cmp
mov
dec
xchg
lcall
fcoms
scas
shlb
push
or
shll
jae
xchg
xchg
and
cli
xor
nop
fsubrs
xchg
mov
icebp
addr16
mov
xchg
ja
pop
cmp
sub
mov
int3
push
push
imul
lods
push
adc
arpl
pop
in
add
dec
add
xor
call
jl
add
cmpsl
andb
lret
imul
pusha
xchg
xchg
ffree
mov
dec
pop
sbb
mov
cmp
stos
mov
pushf
push
jg
mov
sbb
dec
jmp
shl
mov
je
out
arpl
ljmp
insl
cmc
js
int3
inc
lahf
sub
dec
or
daa
pandn
push
cmp
cmp
mul
test
or
sbb
mov
rcll
aas
mov
leave
stos
cli
xor
test
adc
xor
mov
push
shrb
aad
fisttpl
sub
sar
pop
outsl
jae
outsl
test
mov
shl
inc
mov
mov
popf
mov
mov
icebp
fldt
in
cmc
arpl
pushf
pop
mov
fdiv
jmp
repnz
jno
icebp
aam
pop
inc
std
fisubs
jg
push
cmp
add
mov
pop
and
testl
fsubr
sub
jge
xor
rol
movsl
loop
adcl
into
mov
mov
into
lahf
jp
fnstsw
aad
sub
add
ja
jl
imul
lods
sub
xchg
jecxz
push
stos
mov
in
mov
lods
cmp
dec
andb
push
in
lock
or
out
pop
mov
xor
xorb
or
jge
leave
cmp
add
in
movsl
popf
aas
aas
mov
aas
cltd
iret
add
or
sub
cli
mov
sahf
sub
mov
repnz
test
ret
aad
pop
sub
in
mov
arpl
std
gs
lret
jae
inc
lods
mov
aaa
sbbl
sbb
mov
cmpsb
mov
sub
popa
inc
test
fdivrl
sbb
cmpsl
xchg
sbb
push
jmp
lds
stos
cs
icebp
pop
and
or
inc
inc
dec
loopne
xchg
sti
or
inc
fwait
sub
cld
jg
add
fincstp
out
test
ja
mov
mov
arpl
subl
sbb
push
ja
dec
dec
cmpsb
sbb
xchg
mov
pop
test
and
xor
aaa
cmp
mov
dec
lcall
xchg
push
mov
movsl
xor
jge
fwait
push
mov
mov
jg
loope
jg
mov
push
sbb
xchg
repnz
push
mov
mov
pop
adc
ljmp
sahf
and
dec
jge
in
mov
sar
mulb
fdivs
mov
stc
faddl
jae
into
push
push
or
mov
dec
mov
bound
pop
pop
js
je
jae
xor
add
test
jb
ds
insl
push
sub
ss
jle
push
testl
mov
mov
adc
cmp
sub
xchg
loopne
cwtl
scas
sbb
inc
inc
hlt
pop
mov
scas
test
xor
lods
jge
hlt
jl
rcll
ret
es
nop
push
shrb
cmp
adc
inc
push
inc
mov
xor
push
mov
int3
loope
dec
lahf
idivb
fimuls
hlt
push
lcall
movsb
cmp
ljmp
cli
hlt
sbb
jnp
sub
xchg
scas
and
inc
fadds
adc
fldcw
and
icebp
dec
sub
jmp
push
gs
aaa
dec
ja
pop
iret
lea
dec
push
cld
in
lock
lea
je
mov
pop
xchg
push
out
push
sub
sub
aas
adc
mov
hlt
aam
sub
pop
aad
jmp
ja
int
stos
jb
loop
mov
mov
sti
inc
imul
shlw
scas
jne
fistps
out
fimull
aas
js
rclb
subb
and
int3
mov
scas
lock
mov
scas
or
iret
push
jne
pop
jbe
jno,pn
in
into
imul
add
cli
fsubrs
fwait
test
and
push
pop
add
jl
jmp
xor
lret
outsb
or
es
adc
dec
push
stos
ljmp
jg
scas
sbb
and
jp
std
pop
test
xor
jle
cmp
scas
lea
mov
imul
jle
push
pushf
mov
xor
sub
xlat
call
sbb
mov
loop
pop
fwait
out
pop
loopne
enter
fdivs
push
xlat
roll
cmc
cli
test
xchg
mov
jmp
and
sbb
adc
stos
orb
add
outsl
xchg
mov
divl
cwtl
test
fildl
popa
stos
or
xlat
test
dec
lret
xchg
inc
push
rclb
stc
mov
ljmp
leave
and
fdivs
mov
mov
push
stc
mov
sbb
fbld
clc
dec
ss
int3
repz
add
lret
xchg
mov
ja
mov
loope
add
sub
scas
rolb
push
ja
das
sbb
movsl
xor
pop
in
inc
jl
fidivl
jno
in
mov
pop
and
incl
sub
push
jp
pop
insb
mov
xchg
mov
mov
jle
lods
add
pop
cmc
adc
add
pop
rol
leave
mov
mov
dec
xchg
mov
cmp
sub
inc
jmp
fsts
push
push
xchg
in
jle
adc
js
in
adc
sar
dec
sbb
pop
loope
fwait
pop
data16
xchg
inc
loop
cmp
lea
stos
mov
mov
imul
mov
loopne
jp
xchg
shrl
repz
cmp
jmp
sbb
mov
fistps
jle
sub
push
leave
idiv
and
cmp
fists
clc
fstpl
xor
add
daa
imul
out
jns
inc
push
test
lods
loopne
xor
pop
mov
movsl
add
dec
sbb
out
pop
test
jno
shl
mov
das
mov
cmp
mov
dec
dec
xor
out
ret
add
jp
mov
jge
sub
or
cmp
insb
dec
lea
push
push
jnp
push
lods
mov
insl
cs
dec
stos
xor
pop
push
xchg
cli
lret
inc
add
xchg
popa
out
stos
aas
ljmp
roll
out
pop
and
ljmp
mov
je
xchg
lds
rolb
lret
shlb
popa
and
aaa
push
outsl
inc
cli
pop
in
clc
and
imul
out
xchg
int3
push
in
pop
movsb
ljmp
xor
mov
sbb
rcl
out
aas
decl
rcll
and
mov
aas
nop
mov
jno
sbb
dec
dec
outsb
push
lock
jnp
add
loopne
aam
dec
pop
adcl
push
test
pop
push
out
adc
jecxz
lret
dec
and
ljmp
pop
dec
jnp
adc
shl
out
cs
mov
pop
fisubrl
rolb
mov
iret
bound
pop
sahf
cmpsb
adc
neg
mov
rclb
mov
out
je
repz
adc
push
xorb
aaa
outsb
adc
addr16
mov
leave
sub
push
bound
push
test
xchg
xchg
mov
push
lods
dec
dec
mov
aad
inc
inc
int3
push
pop
mov
jle
leave
das
cli
lret
xchg
mov
jo
arpl
fwait
daa
sub
jmp
aad
fistl
and
outsl
repnz
inc
inc
das
insl
pop
aaa
cld
js
and
xchg
int3
push
nop
scas
test
sbb
push
out
fwait
enter
mul
jne
aaa
sub
xchg
insl
xchg
xor
and
inc
fisttps
divb
push
add
jne
scas
add
pop
testl
call
pop
and
sti
insl
lods
pushf
mov
mov
xchg
pop
mov
lret
loop
sbb
jl
imul
dec
mov
mov
test
enter
add
adc
insb
mov
cltd
rorl
push
inc
jns
dec
sbb
inc
fucom
cmp
popa
pop
xor
cmp
cmp
push
xor
jns
fldt
push
mov
in
cmp
jnp
jmp
push
sahf
loopne
fcomps
insl
push
ljmp
lea
in
pop
int
pop
repz
jg
pushf
shlb
pop
inc
lock
push
mov
and
shll
in
mov
push
cmp
lds
sbb
mov
aaa
pop
mov
jle
sbb
pop
popf
inc
mov
jl
mov
mov
sbb
movsb
loop
popa
sub
dec
repz
adc
subl
cmc
inc
lds
or
sub
test
out
inc
stos
lock
or
scas
mov
jl
fstpl
dec
arpl
aas
ret
lret
arpl
jg
jnp
inc
shll
popf
pop
inc
mov
in
mov
push
adc
jg
cmp
inc
pop
jae
fstpt
ret
or
js
in
outsl
inc
js
xor
mov
dec
js
movsl
int
cmp
stc
shlb
shlb
adc
in
dec
sbb
repz
sbb
je
xchg
or
notl
adc
push
lahf
or
mov
test
lahf
stc
mov
fucomp
push
sub
sbb
clc
jae
loopne
cltd
xchg
int3
das
movsb
sbb
jbe
xchg
cld
lret
xlat
pushf
push
add
xor
inc
cmp
lods
mov
xchg
xchg
jne
lods
ficompl
fmulp
pop
pop
popf
sub
out
roll
pop
pop
idivb
insb
adc
adc
sbb
mov
into
ss
jne
inc
mov
jo
adc
mov
lret
sbb
aad
xlat
and
out
pop
mov
sub
xchg
mov
out
adc
xor
adc
mov
sbb
adc
aad
cwtl
test
adc
adc
sub
cmp
adc
rclb
cmp
cmc
je
mov
ret
dec
pminub
pop
sub
cmp
mov
push
xchg
ja
enter
cmc
into
ds
out
std
mov
sbb
aaa
stos
sbb
ret
xchg
push
jmp
js
push
dec
push
add
into
subl
fwait
dec
push
jp
adc
jl
lods
movl
mov
mov
xor
pavgw
push
sub
inc
imul
loope
sub
je
movsb
push
test
or
inc
mov
fistpl
sarb
sub
fists
xchg
insb
mov
pop
stos
mov
fwait
inc
into
sahf
mov
inc
jb
sub
jecxz
mov
xlat
outsb
movsb
mov
and
cmp
imull
dec
pop
inc
mov
add
lret
fnstsw
cmpsl
or
popa
lahf
call
pop
push
inc
sbb
xchg
or
lods
pop
shl
mov
mov
push
mov
xchg
fistpll
inc
mov
dec
add
cmpl
sub
xor
push
cmpsl
sahf
fimull
lea
lahf
cmp
jne
push
push
mov
cmp
stos
ljmp
mov
jp
fnsave
outsb
sub
loop
pop
xlat
or
xor
sbb
jp
arpl
test
add
cmp
call
mov
stos
cs
adc
jb
mov
push
xor
faddl
popf
jp
in
imul
jp
mov
lods
jp
les
xchg
fldt
xchg
mov
fstpl
fs
cmc
sti
shlb
xchg
pusha
popf
jmp
mov
cltd
jbe
stc
adc
sub
pop
xor
lcall
mov
cmp
dec
notl
xchg
dec
out
cli
icebp
int3
pop
or
fs
imul
push
xchg
jo
dec
fsubr
inc
mov
xchg
jp
movsl
push
test
sqrtps
xor
lcall
cmp
sbb
and
cmc
call
sub
int3
stc
jl
jecxz
sbb
cli
sbb
ret
push
gs
mov
pop
neg
stos
pmulhw
iret
sub
outsb
test
pop
ficompl
in
mov
out
push
sub
repnz
adc
addr16
imul
inc
push
fmuls
pop
mov
aas
movsb
lcall
cmp
sbb
xor
rcr
test
mov
mov
add
shrb
cs
frstor
sub
cmc
loope
or
ja
pop
inc
jg
mov
stc
movsl
jg
fildll
xor
push
push
xor
sbb
mov
jns
mov
into
mov
mov
xchg
cltd
ja
in
cs
and
in
dec
mov
popa
loop
jae
sti
std
push
mov
scas
mov
data16
inc
arpl
sub
xor
lcall
lods
std
mov
push
push
loope
or
icebp
shrb
and
fwait
mov
cmp
ret
xchg
jbe
mov
shrb
repnz
sub
orb
iret
test
sti
insl
cmp
sbb
or
push
cltd
xor
sub
jne
mov
ret
lcall
lods
outsl
fisttpll
jbe
xchg
jle
out
movsb
bound
mov
bswap
aaa
inc
mov
or
lret
out
add
mov
mov
test
or
mov
adc
in
mov
push
mov
outsb
in
sub
neg
test
sub
fcmovnb
lea
mov
push
add
ret
cwtl
sub
sti
jo
stc
ja
fnstcw
dec
inc
arpl
xor
pop
xor
push
cmp
mov
daa
adc
jb
or
adc
ret
mov
fs
loopne
jno
imul
aaa
test
fndisi(8087
add
js
or
mov
sahf
adc
jl
dec
scas
ret
iret
fisttpll
movsl
cmc
call
leave
mov
dec
push
jmp
in
pushf
jmp
call
test
mov
stos
push
popf
sub
mov
rorl
fidivs
xor
pop
jg
xchg
pushf
adc
pop
xor
stos
push
lods
mov
pushf
mov
lcall
mov
jns
adc
sub
mov
arpl
sub
mov
cltd
shld
jl
outsb
fdecstp
lcall
mov
cwtl
call
jae
js
popf
in
mov
insl
incb
cmp
test
push
ljmp
mov
cld
outsb
call
xchg
sti
fld
inc
lret
sub
cmpsb
imul
rorl
sbb
or
xchg
sbb
lea
dec
mov
lea
jae
pop
mov
stc
jl
sbb
jo
push
repnz
stos
xchg
sub
int
shrl
xor
jmp
inc
mov
aad
lahf
mov
or
out
push
jg
rcrb
pop
push
xchg
adc
ds
jnp
pop
sub
pop
pushf
testl
dec
loope
pusha
and
xor
push
dec
es
in
sub
sub
fdiv
lods
pop
cltd
xchg
jae
mov
sbb
sti
mov
ret
xor
mov
stos
mov
test
lret
or
insl
bound
pushw
xchg
dec
add
xchg
rcrl
inc
dec
push
mov
cmp
outsb
mov
and
stos
stos
sahf
lcall
mov
jb
icebp
lods
mov
dec
jmp
das
jp
daa
pop
je
out
jmp
iret
addb
inc
nop
pop
icebp
xchg
mov
mov
jns
scas
sub
cmp
lcall
enter
sbb
inc
and
pop
test
cmp
int3
lahf
xlat
ret
push
test
pop
out
jne
imul
add
jb
xchg
ret
push
fisubrs
rorl
cmp
mov
subl
hlt
xchg
aas
jno
leave
fistpl
jle
mov
xor
and
dec
in
fs
test
out
pop
pop
mov
mov
cmpsl
push
add
dec
cmp
lcall
xchg
imul
and
dec
push
push
lds
sbb
xchg
shl
mov
mov
jno
loope
pop
lret
jecxz
xlat
aaa
jmp
jg
pop
or
push
cltd
test
ljmp
rcll
cmpsl
pop
xchg
sbb
push
sub
rcrl
stos
and
push
aam
fsts
scas
dec
repnz
jge
cmp
and
loope
sahf
ja
cmp
ljmp
inc
nop
push
mov
mov
loop
inc
pop
sbb
pop
shl
mov
loop
insl
fs
daa
out
clc
lret
inc
ljmp
cmp
roll
pop
fistpl
adc
cmp
js
scas
imull
or
sub
frstor
xchg
sbb
divb
insl
cld
xor
ss
mov
xchg
pusha
outsl
fisubl
jo
pop
cld
mov
ja
cli
xchg
mov
cmp
xor
loopne
sbb
jb
repz
push
stos
loopne
les
bound
jg
aam
xor
cmc
subl
sti
push
push
mov
inc
bound
cmp
out
lahf
inc
adc
outsl
in
outsl
pop
sbb
aam
int
js
xchg
rorb
xor
call
push
addr16
dec
pop
jl
scas
cmp
daa
fldenv
data16
mov
or
test
push
mov
push
lret
lods
loopne
and
addr16
fwait
enter
or
adc
adc
xchg
pop
mov
xchg
std
xchg
mov
inc
ss
fstpt
mov
sub
imul
incb
or
fimull
mov
pop
sti
arpl
paddusb
jecxz
dec
fistpll
add
add
loopne
add
fstps
loope
jo
outsb
mov
pop
shll
jne
enter
add
in
adc
add
jnp
xor
jmp
xor
clc
pop
sti
add
ss
mov
call
and
clc
xchg
jns
mov
int
pop
fnstenv
repz
lea
push
pusha
leave
pop
lahf
xchg
insb
adc
notb
adc
jle
pop
sbb
loope
cmp
sbb
aam
dec
sbb
xorb
lahf
or
xlat
std
outsl
in
xor
lods
xchg
sbb
pop
in
cld
dec
call
pop
sub
cltd
push
adc
mov
int
jp
inc
xchg
ret
mov
add
sahf
pop
jne
scas
cmpsl
shlb
mov
loop
and
inc
inc
xor
xlat
cwtl
es
or
cmp
aam
scas
sbbl
inc
lret
push
movsb
rcll
add
and
jno
ds
sub
inc
mov
dec
dec
xor
loop
out
cmp
stos
les
and
insb
ret
pop
sbb
adc
xchg
aad
inc
hlt
je
push
out
cmc
cli
pop
sahf
fs
cmp
push
movsl
inc
push
pop
mov
push
xor
stos
pop
sbb
xchg
pop
test
xlat
ret
lret
jae
mov
aad
push
xor
loop
jl
jmp
jl
add
enter
mov
jge
mov
mov
in
stos
adc
xorl
es
or
cld
out
pop
subb
adc
loope
cmp
mov
movb
pop
out
push
adc
cli
pop
lret
push
sbb
pop
xchg
mov
dec
inc
xchg
and
arpl
icebp
shlb
jae
push
xchg
test
jl
sbb
inc
lock
or
jmp
xor
push
dec
fldt
inc
sbb
sbb
mov
insb
pop
cmp
cld
pop
xchg
adcl
xor
aad
and
dec
aaa
pop
jnp
loopne
out
cwtl
xchg
mov
into
xor
xor
push
or
scas
sbb
mov
leave
inc
imul
sbb
fwait
jns
ss
pop
cld
fldl
mov
imul
mov
enter
push
dec
sbb
cld
js
and
aaa
cld
stc
scas
mov
lret
xchg
mov
aam
jno
lods
imul
add
jmp
push
das
xor
dec
in
adc
add
cmc
scas
rorl
jae
popf
dec
jge
pop
ds
dec
mov
cmp
add
push
inc
dec
adc
ret
daa
xchg
sbb
aas
pop
pop
mov
jae
cmc
pop
mov
les
push
jae
sti
lret
notb
sbb
jp
fsubrs
lahf
xlat
dec
xchg
cmc
sub
inc
mov
push
push
ljmp
out
pop
lods
or
stos
std
ds
repnz
sbb
sub
mov
sbb
xor
and
cs
xchg
icebp
hlt
fidivs
sub
movsl
mov
cmp
loopne
aam
js
js
ds
ds
ja
jmp
cltd
add
or
movsl
scas
jno
jne
aad
aas
dec
cmp
loope
fcompl
stos
lods
inc
imul
mov
sub
lret
ret
xchg
adc
or
xstore-rng
cmpsl
xchg
or
ds
push
test
or
rorl
jmp
mov
pop
inc
call
daa
xchg
or
and
jecxz
dec
xor
lea
cwtl
call
jge
enter
xchg
repz
sub
jle
jl
fsubs
fildl
rcrl
js
push
out
add
lret
loopne
jmp
sahf
stos
jg
lcall
adc
into
shll
xchg
adc
xorl
sbb
sbb
mov
jl
cli
cwtl
call
jg
mov
movsb
fs
xchg
insl
push
or
lock
loop
je
bound
repz
dec
std
and
xchg
out
mov
out
or
mov
push
std
pop
mov
cmp
pop
jge
inc
sarl
adc
cltd
pushf
rcr
jne
popa
jmp
add
lods
das
inc
xchg
inc
pop
xlat
xchg
aaa
pop
shll
lret
xor
stos
ljmp
mov
or
pop
inc
lahf
in
cmp
mov
sub
and
jbe
push
js
in
mov
and
lret
daa
add
addr16
xor
pop
sub
sbb
scas
arpl
sti
sub
xchg
pop
fwait
insb
push
int3
sahf
jb
test
fsubl
int3
fistl
shrl
pop
xor
test
pop
xchg
mov
lret
inc
mov
mov
outsb
pop
mov
push
mov
pop
inc
mov
jne
jle
icebp
insl
jmp
in
xor
sub
rcrl
xor
jnp
adc
or
cmp
scas
scas
mov
dec
repnz
rcr
mov
jmp
cltd
sub
icebp
inc
dec
jae
imul
int3
mov
add
idivb
inc
push
rolb
sbb
arpl
clc
push
mov
lret
scas
loopne
mov
mov
sbb
xchg
sbb
or
xchg
into
adc
gs
in
out
pusha
fcoml
das
enter
pop
in
fdivl
sub
push
sub
cmp
xchg
mov
repz
cmp
push
add
cltd
int
jae
lret
test
lods
aad
xchg
push
daa
ss
pusha
lret
xchg
ljmp
cmp
mov
js
cmp
lock
sub
sub
inc
dec
aas
pop
imulb
test
xor
dec
sbb
fists
jbe
ljmp
pop
ja
fdivr
push
decb
lea
xor
into
mov
sbb
mov
or
jp
inc
cs
xchg
push
notl
movsl
das
pop
jbe
add
pop
test
add
lret
outsb
add
loope
rdtsc
aad
sub
push
jle
rclb
pusha
sbb
insb
mov
xor
jle
rcrb
adc
mov
add
xchg
lods
xlat
adc
call
or
and
pop
fsubs
pushf
mov
or
mov
shrb
jbe
mov
inc
sbbl
xchg
cmp
add
lret
hlt
int
sti
into
dec
bound
loope
inc
xor
sub
jo
cwtl
jo
jge
jmp
push
add
and
sub
into
in
push
cltd
movl
in
mov
adc
pop
and
clc
mov
shlb
sub
sbb
add
cli
pop
xchg
jg
lret
sti
adc
les
cmc
lret
fildll
push
sbb
lahf
and
cli
xchg
push
mov
adc
aaa
dec
mov
pop
popf
pop
cltd
fadd
test
sub
xor
add
lret
adc
loop
sub
das
jnp
and
fcmovne
or
mov
aam
cwtl
jne
push
enter
cmp
fcoml
lods
ljmp
pop
xchg
jle
sbb
ljmp
lret
mov
inc
or
pop
outsl
lods
daa
pop
xor
pushf
add
ds
addb
push
adc
mov
aas
out
movsb
loop
inc
lahf
in
jmp
pop
sahf
pop
cmp
rorb
jp
out
insl
js
insb
arpl
enter
das
and
push
xchg
mov
imul
dec
jb
mov
or
fwait
sub
xor
rcrb
cmp
lock
push
scas
pop
bound
mov
loop
adc
mov
xor
jnp
shl
cmp
scas
xchg
push
pop
dec
pop
insl
xlat
ffree
mov
clc
imul
notb
and
push
mov
jae
or
lds
sub
add
add
add
in
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
lock
add
add
add
ret
pop
cmp
mov
aaa
clc
sti
push
inc
out
cs
sbb
dec
sbb
ret
pop
outsl
cmp
jge
lods
fsubrl
adc
orl
jns
icebp
andl
sbb
sbb
and
sub
xchg
and
lahf
xor
cld
mov
ljmp
mov
xlat
testl
dec
fists
cli
add
mov
ficompl
or
and
cmp
dec
movb
add
jo
lret
hlt
jns
mov
testl
push
clc
clc
lret
mov
fstl
loop
cld
inc
ds
cwtl
jmp
addb
mov
gs
mov
out
mov
adc
sbb
push
push
xor
pushf
mov
addb
dec
outsb
pop
loop
sbb
inc
mov
mov
icebp
mov
stos
lods
js
mov
lcall
gs
and
imulb
cmc
rcpps
ficomps
cmp
mov
sahf
ljmp
inc
imul
fistpl
lock
call
cmp
lods
pushf
add
scas
or
sbb
and
and
inc
add
inc
call
daa
mov
cmp
subb
imul
xchg
mov
xchg
mov
mov
mov
adc
and
stc
sub
clc
mov
cmp
inc
and
adc
int
pop
aas
and
or
not
dec
gs
mov
adc
hlt
sbb
call
add
mov
mov
imul
shlb
cmp
std
push
scas
popa
sub
push
xor
ljmp
cli
sarl
cmpsl
sar
rorl
push
mov
int
inc
jmp
ficompl
mov
repz
adc
jle
jecxz
and
bound
pop
shl
pop
aaa
and
xor
mov
jnp
mov
add
and
pop
mov
xor
addb
or
add
fwait
jl
cmpsb
push
mov
xchg
adc
push
and
lahf
mov
add
inc
scas
dec
mov
inc
and
cmp
xlat
add
or
sti
cld
inc
mov
stc
fucomi
pop
mov
fstps
inc
int3
jecxz
sti
mov
wrmsr
inc
dec
or
xchg
jle
and
mov
shrb
hlt
sti
adc
xor
cmp
xchg
push
in
jno
dec
inc
mov
inc
dec
adc
stos
pop
mov
sub
xchg
clc
pop
sbb
mov
xchg
rcrl
cmp
ja
xchg
xlat
mov
popf
cld
mov
push
mov
add
cli
js
jmp
dec
push
cmp
jns
cmp
xor
and
adc
or
insl
aam
pop
pop
sbb
sbb
sub
jb
jbe
push
gs
xor
mov
push
aaa
gs
xchg
repnz
cs
dec
push
xchg
and
add
pop
das
inc
scas
dec
cmp
inc
sub
jno
daa
movups
cmpsl
out
scas
mov
imul
cltd
mov
subl
jp
inc
loop
repnz
mov
adc
les
mov
pop
xlat
decb
imul
push
fs
stos
scas
xor
inc
cltd
ret
orl
add
sbb
xor
push
movsb
cli
xchg
push
rolb
push
dec
push
pop
hlt
push
dec
lahf
dec
mov
ficompl
fwait
and
mov
inc
xor
cwtl
push
ficoml
xorb
sub
inc
cmp
cmpsb
add
clc
cld
dec
iret
adc
sbb
add
arpl
cmp
xchg
mov
mov
sub
icebp
lret
jo
push
or
cmpsb
dec
cmc
test
lahf
dec
scas
arpl
imul
ja
fists
ds
loopne
xchg
push
rcl
imul
cmp
and
jg
daa
pop
orl
lret
mov
lock
rclb
cmp
ss
xchg
push
cmp
push
inc
mov
pop
jle
andb
mov
dec
aam
add
pop
mov
xchg
aam
test
lds
sahf
fidivs
mov
pop
int3
clc
mov
inc
sti
sbb
addl
cld
push
imul
sub
xchg
ss
mov
jo,pn
dec
pop
hlt
ror
jle
loop
xor
scas
dec
mov
jl
adc
xchg
pop
and
mov
cmp
movsl
gs
mov
jmp
shr
or
les
dec
scas
test
push
mov
icebp
jp
mov
inc
fstpt
cmp
push
adc
dec
add
cli
add
dec
jecxz
or
jnp
and
push
ret
jg
fs
and
rorb
lds
pop
pushf
int3
push
or
out
mulb
shrd
stc
cmpsl
mov
mov
out
daa
test
loop
ret
aas
shll
std
outsb
cmp
mov
dec
sub
movsl
xchg
pop
jl
xchg
roll
pop
push
fnstcw
add
pop
test
imul
mov
and
push
loop
dec
sahf
sahf
inc
mov
xchg
inc
jno
out
into
pop
repz
jge
push
pop
inc
enter
call
ror
push
inc
imul
mov
cmp
or
rclb
push
int
xchg
inc
test
lret
xorl
sbb
fnsetpm(287
inc
or
add
andl
mov
push
leave
mov
push
add
add
jl
mov
rorl
push
enter
mov
mov
mov
mov
xchg
jns
or
icebp
jae
dec
push
clc
ja
dec
mov
push
mov
xor
out
add
xchg
xor
scas
sbb
loop
fstl
outsb
cmp
scas
pop
add
ret
fcmovb
test
xchg
ljmp
std
mov
sarb
mov
js
add
push
xchg
pextrw
pop
mov
mov
cltd
cmp
push
pop
subb
aam
jl
xchg
adc
enter
jae
push
sub
gs
dec
push
ss
ret
inc
outsl
add
cmpsb
or
jb
lods
mov
adc
and
pop
and
add
sub
push
incl
ret
sub
popa
mov
mov
add
mov
mov
sarb
out
test
pop
push
in
lods
xlat
jge
pusha
push
mov
sbb
lcall
das
aad
inc
out
add
mov
xchg
push
stos
cmpsl
out
pop
mov
inc
pop
stc
sub
imul
orl
dec
hlt
pop
cmpsl
adc
mov
adc
stos
fnstcw
in
out
into
test
clc
shlb
push
mov
sub
icebp
cmp
cmp
push
arpl
adc
dec
mov
cmpsb
das
insb
push
jmp
lds
sub
cmp
xor
pushf
cli
inc
pop
jp
push
out
aas
fsubl
lcall
aad
xchg
ret
loope
addl
incb
and
cmc
mov
push
inc
nop
int
push
jne
inc
jnp
pop
cld
push
sub
sbb
pop
lsl
sbb
push
addb
rcl
push
sub
jg
test
aam
movswl
popa
hlt
mov
xlat
and
adc
das
add
xchg
icebp
cmpsb
lret
mov
adc
mov
add
in
pop
ja
adc
xchg
mov
insl
cli
ljmp
push
movb
insl
pop
cmp
or
pop
mov
mov
lahf
lock
icebp
adc
sub
mov
mov
or
gs
outsb
adc
add
bound
shr
or
je
cli
aas
sbb
pop
cld
adc
sbb
and
inc
jnp
lds
ret
mov
nop
inc
icebp
jmp
pop
fldt
mov
mov
dec
pop
scas
lahf
or
mov
call
cmc
sbb
push
or
cltd
pushf
jno
movsl
dec
push
lret
hlt
cmpsl
popa
movsl
add
and
lods
in
in
ret
pop
xor
sbb
dec
fists
inc
out
lods
aam
ljmp
gs
adc
or
inc
mov
loopne
insb
cmp
cli
inc
dec
lods
fnsave
xor
sub
scas
jle
test
mov
mov
cli
scas
push
test
dec
xchg
and
outsb
fisttpl
adc
jecxz
ret
mov
stos
movsb
jbe
sub
push
stos
fmull
out
shl
dec
pusha
jns
push
xchg
and
pop
fdiv
mov
lret
mov
lcall
clc
ja
mov
stos
dec
mov
jae
adc
inc
das
dec
pushf
ljmp
sub
aam
mov
fcoml
cmp
ret
mov
mov
out
xchg
rclb
pop
bnd
add
fsubp
lahf
shlb
jp
loopne
pop
cmp
aad
sti
inc
ucomiss
or
nop
stos
mov
icebp
sbb
lret
notl
jle
stos
push
into
add
ds
jo
mov
xor
push
in
xchg
push
push
adc
mov
push
dec
fistps
ret
int
mov
cmc
jmp
jns
xor
lds
imull
mov
sahf
mov
push
lods
mov
adc
cmp
fcoms
xlat
cmpsl
arpl
das
imul
aam
hlt
push
lea
sub
rolb
int3
pop
mov
outsl
inc
daa
outsl
push
lods
iret
jmp
xchg
shll
daa
pushf
jl
sahf
jb
lret
xorl
inc
imul
les
push
jge
inc
mov
sub
sbb
outsl
push
outsl
iret
cli
cltd
movsl
sbb
insb
shrl
push
xor
or
loop
dec
jecxz
test
jmp
xor
lahf
js
dec
pop
xlat
outsl
cmp
inc
push
lcall
mov
cwtl
dec
rcll
fstpt
popa
xchg
mov
icebp
xchg
jg
sbb
sub
pop
jle
sahf
sarl
adc
rcl
sbb
aas
repnz
loopne
jae
mov
lds
jae
cmpsb
addb
mov
dec
xchg
sbb
jnp
dec
mov
ljmp
mov
xchg
push
lea
push
adc
roll
rolb
add
dec
in
cmpsl
xor
aam
jno
repz
pop
sub
pushf
sub
mov
cli
xchg
mov
push
fnstenv
push
xor
fldt
ret
pop
inc
out
sbb
fmulp
sarb
xchg
pop
lahf
push
std
sti
jge
xchg
mov
lock
fadds
cmpsl
subb
mov
inc
inc
adc
dec
lahf
cmc
bound
or
rclb
mov
cmpsl
stc
and
or
sbb
jno
xchg
int3
jl
add
xchg
cmp
or
xchg
lret
sbb
xor
xlat
mov
int3
jb
jns
xor
test
pop
mov
pop
aad
lds
inc
dec
push
inc
std
scas
js
mov
stc
rclb
dec
inc
jns
cli
data16
punpcklbw
mov
mov
cs
pop
jle
clc
push
xor
xlat
lahf
shll
cs
ficompl
les
cmc
jb
test
push
mov
or
fwait
mov
in
fwait
mov
dec
mov
cmpsl
inc
sbb
repnz
sub
mov
lret
lods
xorb
sub
mov
fs
shlb
pop
out
pop
int
adc
cmp
mov
enter
ss
leave
inc
sbb
or
pop
add
pop
paddd
sub
xlat
mov
pop
cmc
call
fsubs
jno
mov
loope
fists
or
add
jne
inc
or
orl
inc
adcb
test
mov
addr16
cmp
hlt
adc
loop
hlt
pop
test
pop
push
mov
lret
negl
out
daa
inc
jb
sti
gs
mov
dec
add
ljmp
sub
adc
aas
hlt
jbe
cmpsl
push
int
das
and
push
mov
out
xor
pop
cmp
add
dec
cli
adc
add
jo
clc
dec
sbb
pminub
test
out
aas
jns
mov
jl
lds
add
ficompl
xchg
rcr
fisubs
xchg
outsl
fwait
aas
mov
mov
cli
je
push
mov
mov
or
testl
ja
or
pushf
push
inc
shl
mov
sarb
js
xor
sbb
js
pusha
in
inc
ret
sbb
cmp
ret
loopne
jb
insl
lock
popa
jg
outsb
dec
aad
adc
fsubr
or
in
ret
fmul
iret
push
fwait
pop
outsl
dec
xchg
mov
loope
sbb
add
mov
dec
sbbb
int3
loopne
xchg
stos
sbb
rcl
arpl
mov
inc
jne
adc
fadds
js
aaa
push
ret
lcall
inc
sub
sub
push
dec
sbb
push
jns
popa
aam
in
mov
mov
call
jmp
fcompl
call
push
std
pusha
test
outsb
aas
leave
jns
rcl
inc
xor
inc
adc
push
add
jno
fdivs
imul
jl
sub
inc
popfw
adc
mov
add
or
jge
test
inc
outsl
xchg
and
jge
inc
xchg
or
js
jge
jge
repz
adc
pop
scas
push
inc
nop
cs
test
leave
int3
gs
dec
bound
inc
sbb
repnz
subl
and
xchg
lahf
mov
or
roll
je
pop
sbb
jp
andl
dec
lea
add
nop
mov
sbb
leave
cmpsl
push
xorl
dec
push
mov
loop
aad
iret
cmp
mov
lock
cmp
loop
in
inc
hlt
imul
popa
adc
pop
sti
stos
pop
mov
in
and
in
mov
leave
mov
cmp
mov
icebp
daa
outsl
add
and
cmc
xlat
es
imul
data16
in
sub
or
jbe
scas
adc
stc
ljmp
ret
loopne
jp
inc
les
push
add
dec
dec
mov
jo
or
pop
lcall
int3
in
scas
xchg
and
jg
jae
into
cmp
jb
in
xlat
dec
sbb
inc
sub
arpl
push
stc
xorl
and
cmp
mov
sub
push
sbb
push
xchg
sub
sbb
out
xchg
pusha
mov
push
cmp
sub
fldpi
inc
sbb
mov
ds
scas
ss
sbb
push
adc
cli
test
bound
cmc
sub
mov
clc
inc
stos
dec
or
jle
push
xor
sub
push
mov
xor
dec
popa
mov
in
push
shlb
pop
aad
stos
sub
xor
insl
adc
test
mov
js
bound
pop
or
pop
outsl
loop
jae
popf
xchg
dec
mov
outsb
xor
xchg
aas
jo
test
dec
mov
negl
jbe
enter
dec
icebp
testb
jbe
pop
movsl
push
add
sbb
lods
xor
sub
arpl
cmp
inc
in
mov
jae
jne
lods
add
xchg
pop
mov
aas
mov
push
xchg
add
negb
pop
fcompl
mov
mov
xor
adc
std
mov
sub
decb
cld
adc
mov
xchg
push
cmp
test
cmpsb
sub
sub
lods
inc
jmp
push
mov
stos
sub
sbb
cli
fsts
push
test
test
aam
pop
xchg
outsb
cmp
pop
jbe
lret
cld
and
ss
pop
lds
mov
or
pop
mov
in
jmp
xor
cltd
roll
xchg
push
pop
mov
sbb
fdivp
inc
outsl
das
dec
rcrb
ljmp
fisubs
add
shlb
cmp
pop
aas
and
int3
mov
les
jne
into
shr
stos
stos
movsb
les
addr16
sbb
cmp
into
cltd
mov
sbbb
repz
cwtl
int3
push
ljmp
out
stos
mov
out
roll
das
xchg
pop
mov
pop
in
lret
enter
jmp
or
mov
mov
popf
inc
ljmp
stos
mov
pop
in
jge
shrl
mov
in
sahf
lsl
sbb
stc
push
daa
fidivrs
jecxz
out
mov
aaa
adc
lock
fsts
or
lea
mov
andps
sar
jmp
push
out
mov
pop
jg
out
xor
lret
mov
jp
sbb
stos
and
xor
stos
and
push
testb
sahf
jle
fcmove
or
push
sub
scas
adc
mov
js
mov
outsb
mov
movsb
icebp
mov
loope
push
mov
dec
test
ficoms
jge
sub
cli
pop
inc
negl
inc
pop
fldcw
aaa
dec
daa
push
xor
aad
push
pushf
ljmp
pop
clc
gs
ficoms
iret
call
jecxz
sub
mov
aas
out
pop
insb
pop
bnd
add
mov
in
rsqrtps
fnstcw
fisubrs
xchg
xor
aad
fs
je
addl
push
sub
rolb
in
mov
or
notl
dec
mov
push
xchg
and
cli
push
out
int
xchg
pop
rorl
dec
mov
pop
mov
imull
push
imul
mov
sub
pop
test
pop
mov
aam
xchg
std
mov
cmp
push
aaa
or
maskmovq
dec
mov
stc
jbe
shlb
mov
ret
jp
jl
stos
shlb
loop
mov
xchg
loopne
sbb
cs
cmp
push
stos
or
add
subb
bound
xorl
aaa
mov
sbb
cmp
push
mov
in
jp
sub
lea
lcall
cld
pop
loope
inc
push
xor
call
outsb
jb
in
mov
cltd
sbb
outsl
cmp
inc
lahf
xchg
ljmp
push
and
aas
xchg
dec
popf
sub
sbb
fcoml
push
cmp
fisttps
lods
inc
cli
aad
ret
xlat
pop
jo
jbe
lcall
add
add
xabort
dec
xchg
in
cwtl
lods
xchg
inc
outsb
xchg
or
sarb
inc
dec
fdivl
adc
lcall
mov
scas
test
inc
out
mov
aad
jp
or
aas
pop
sbb
sub
fdivl
adc
cld
hlt
int3
inc
lret
pop
mov
mov
push
es
sub
and
mov
sbb
loope
sbbl
push
hlt
mov
pop
cwtl
mov
pop
aad
imul
sub
pop
mov
push
aas
push
mov
leave
cli
xor
sti
mov
mov
iret
paddusw
test
jo
lock
and
sbb
mov
cmc
jge
mov
aam
rcrb
xlat
xor
movsl
push
pop
push
xor
mov
ljmp
mov
mov
aaa
lea
repz
sub
push
inc
cmp
pusha
aaa
dec
out
rorl
bound
insl
aam
imul
inc
push
sbb
int
pop
hlt
fdivl
lea
adc
andl
das
in
adc
cmpsb
push
mov
aam
mov
cmp
test
dec
clc
sub
dec
pop
cmpsl
mov
pop
std
mov
mov
into
xlat
push
jnp
setge
leave
test
pop
jp
dec
pop
leave
rcr
and
sub
push
mov
test
fldl
divb
outsb
cmp
in
std
aam
popf
jge
pusha
mov
pop
push
cmc
sahf
test
sub
ljmp
or
aaa
mov
inc
xchg
mov
xor
into
cltd
mov
xlat
xchg
adcb
dec
hlt
dec
xor
cmp
jl
ficoms
scas
test
xchg
data16
lret
mov
shlb
lret
mov
cmpsl
mov
mov
iret
adc
push
sti
sub
dec
enter
btc
aam
test
and
pop
aam
xor
in
xchg
outsl
mov
xchg
ret
pop
out
jle
in
outsl
mov
lahf
ret
test
push
cmp
lock
mov
mov
pop
sar
pop
pop
addr16
jb
xlat
inc
xorb
push
cmp
stos
icebp
xor
aam
call
aas
dec
mov
nopl
add
rclb
push
divb
cwtl
pop
int3
add
sbb
hlt
pop
mov
pop
mov
sbb
mov
push
sub
cmpsl
sbb
das
adc
dec
push
std
lock
cmp
cli
hlt
pop
mov
and
push
rcll
xorl
dec
stc
mov
jmp
shlb
lahf
mov
adc
mov
jge
pop
pusha
hlt
pop
push
or
inc
cs
and
repz
mov
or
or
pop
hlt
repnz
mov
jmp
cmpsl
test
push
in
neg
sub
adc
cwtl
pop
adc
cmp
push
outsb
aad
cmp
mov
mov
adc
jg
mov
add
sarb
loopne
ret
outsl
das
scas
or
outsb
jg
cmp
jecxz
jns
das
and
inc
lods
mov
jbe
cld
inc
adc
cmp
or
subb
pop
mov
mov
mov
lods
mov
rorl
shrl
and
push
imull
fisubl
jge
mov
cli
adcl
cld
or
pop
sub
leave
sbb
dec
sbb
cli
scas
sti
rcll
fldl
cmp
jae
push
inc
lods
test
sbb
mov
mov
lock
rcll
pop
cmp
out
ljmp
mov
movsl
aaa
cli
mov
imul
push
fnop
fnstcw
xor
movsl
hlt
mov
fsubrl
dec
decl
pop
into
lea
sub
mov
ljmp
cmpsb
pop
sbb
hlt
push
push
mov
addr16
outsb
sbb
cli
mov
fisubs
std
iret
dec
ja
je
mov
add
pop
clc
adc
stos
mov
push
jg
sarl
xchg
outsl
cs
fcomip
int3
ds
xlat
std
mov
sbb
push
mov
dec
mov
loope
ja
jl
sub
and
mov
and
cld
mov
jg
dec
fwait
lock
sti
xor
push
into
cltd
inc
fdivrp
mov
xchg
push
or
mov
cwtl
mov
mov
scas
sub
es
and
dec
pop
sub
cwtl
jmp
mov
in
insb
xchg
das
cmp
sahf
pop
jmp
xlat
dec
add
inc
sub
mov
addr16
stos
and
jnp
int3
das
cmp
xchg
in
adc
outsl
insb
lods
aam
add
fisubrs
lock
xor
push
hlt
popf
ret
ret
sbb
mov
mov
lret
shlb
push
and
xor
int
jne,pt
lea
cmp
push
push
mov
sub
inc
inc
inc
mov
jae
sub
jbe
jp
pop
cmp
cs
push
shll
push
sub
ja
or
jle
loop
jecxz
jmp
inc
jnp
roll
mull
sub
sbb
jae
popa
aaa
push
imul
sub
mov
pop
call
dec
xor
sbb
adc
das
push
lock
sub
ror
shrb
ja,pn
in
call
xchg
xchg
jge
ljmp
cld
mov
movsb
fistpll
out
cltd
sub
jne
xchg
dec
sbb
mov
pop
ljmp
ds
sbb
and
jne
mov
jbe
mov
rol
jae
sub
sahf
cld
sub
push
pushf
pop
mov
lock
test
fs
inc
dec
adc
out
lret
push
lods
test
js
lods
insb
popa
mov
fidivl
inc
dec
ficoml
lods
cmp
sub
sub
jle
loop
aas
iret
popl
imul
rcrb
in
push
pushf
mov
aad
negb
es
lcall
mov
pop
jns
add
cmp
pop
ljmp
mov
mov
xorl
call
sbb
sbb
rorb
ds
sub
ret
xchg
dec
stos
or
push
or
ss
adc
xchg
das
mov
ljmp
fdivrl
xor
clc
or
lahf
inc
adc
mov
lret
mov
outsl
and
mov
push
les
dec
inc
mov
xchg
in
iret
mov
stc
clc
out
pop
sub
hlt
lret
test
jecxz
roll
movsl
popf
cmc
fmuls
iret
insl
je
jge
test
push
fcompl
push
addr16
cli
mov
lods
or
or
pop
push
daa
pop
jg
test
mov
and
div
shl
pop
insb
jb
mov
add
push
std
jecxz
push
pusha
out
scas
fidivrl
mov
cmp
ds
ret
mov
lds
adc
adc
icebp
in
ja
add
push
jmp
xchg
loopne
mull
sti
lds
stos
mov
cwtl
test
notl
push
cmp
or
add
cmc
lds
adc
add
sub
jne
mov
data16
cmp
cmp
lahf
push
repnz
sbb
test
mov
pusha
shll
jl
jp
xchg
jecxz
ficoms
inc
test
xchg
lea
mov
mov
mov
pushf
jne
push
push
mov
aaa
adc
push
jge
mov
adc
bound
imul
xlat
int
mov
sub
jbe
fwait
xlat
aam
repnz
adc
mov
aam
subl
sbb
jne
push
in
add
sbb
mov
ret
scas
xchg
cmp
cmp
ljmp
int3
inc
add
lods
and
shr
sbb
ljmp
dec
aaa
fnstcw
lcall
cli
jp,pt
in
xchg
jbe
push
rol
and
cmpsb
in
sahf
jns
sub
outsb
mov
xchg
inc
xor
dec
xorb
jmp
aam
cmp
cmp
test
je
xor
in
xor
call
jne
jo
push
or
rclb
cltd
push
mov
sbb
or
nop
sarb
or
add
ja
mov
fwait
jmp
ret
fists
add
pop
loopne
scas
pop
mov
push
clc
jmp
lds
adc
cmpsl
daa
enter
in
dec
inc
std
xor
jle
xlat
int
test
push
jle
sbbl
or
sbb
daa
fldl
test
mov
nop
or
adc
test
mov
add
aad
popa
jecxz
jmp
ret
into
inc
arpl
xor
inc
fsubs
mov
fdivs
lods
adc
dec
scas
inc
jb
cmp
pop
mov
movl
add
mov
aaa
jns
sub
push
pop
adc
lahf
dec
cmp
dec
xchg
lea
popa
sar
push
sbb
adc
jmp
mov
cs
add
out
cmp
icebp
jmp
jne
cmc
std
fdiv
or
cwtl
ret
mov
pop
mov
mov
frstor
outsl
std
cs
xchg
xchg
mov
dec
repnz
mov
in
mov
imul
and
mov
xchg
notb
inc
mov
push
popf
xchg
xor
or
mov
add
cltd
xorb
js
cmp
xor
sub
sub
loop
push
xchg
cmpsl
cmp
jmp
add
mov
cmp
mov
in
int3
push
lcall
cld
mov
add
sbb
pop
filds
clc
add
sub
xchg
fs
in
mov
xchg
stc
fsubs
cmp
or
dec
pop
xchg
repnz
pop
lret
adc
sbb
loope
xchg
pop
mul
xchg
ror
xchg
push
cmpsb
jae
mov
into
sbb
ss
fistl
pop
imul
and
pop
lret
popf
aad
or
inc
insl
mov
lock
shl
push
jmp
mov
pushf
sub
ret
mov
lret
rol
je
mov
call
xchg
push
xor
xchg
rcrb
dec
xor
adc
xor
test
jo
xor
test
sub
ss
popa
pop
jge
mov
mov
loopne
mov
cltd
sbb
pop
cmp
outsl
mov
pop
dec
fwait
imul
xchg
pop
jl
nop
mov
pop
xlat
add
add
push
mov
jns
and
mov
bound
inc
addr16
or
xor
inc
xchg
sbb
and
xor
xchg
imul
dec
into
sahf
cltd
pop
into
into
popf
decb
fisubrl
cmp
notl
xor
jnp
mov
jmp
out
arpl
movsl
jmp
bound
mov
pop
jl
pop
subb
sbb
sahf
enter
repnz
test
loope
and
ljmp
mov
outsb
lock
int
popf
hlt
insb
cld
adc
cmp
or
xchg
adc
scas
inc
aad
sahf
idivl
test
cmpb
out
int
out
inc
aam
cmpsl
or
enter
test
push
inc
jno
dec
inc
xorl
fnsave
or
ds
mov
push
xor
adc
or
jmp
dec
jae
in
mov
sbb
jg
ljmp
inc
enter
inc
outsl
and
incl
ljmp
lcall
pop
xor
das
or
insl
js
mov
adc
call
lcall
std
out
push
or
mov
std
dec
dec
cs
mov
jns
out
sahf
push
mov
xor
leave
xor
jne
sub
fwait
shl
and
cmpsb
cmp
outsl
mov
inc
dec
ljmp
pusha
and
call
fldenv
cmp
xchg
fnstcw
lret
and
add
mov
popa
iret
push
out
fwait
movsb
pop
sbb
outsl
jns
ja
pop
aad
mov
jmp
mov
fwait
jl
enter
les
pop
mov
mov
shl
or
mov
ss
jge
mov
sub
and
test
mov
mov
push
incl
pop
in
inc
push
mov
lahf
les
pusha
cmp
dec
jle
pusha
push
pop
aaa
movb
push
test
mov
or
or
cld
mov
xchg
lret
push
stc
out
ja
inc
stc
add
stos
push
stc
mov
lods
mov
lahf
push
dec
imulb
lock
cmpl
aad
movsl
mov
addl
add
lcall
scas
xor
jl
lods
mov
mov
adc
xchg
gs
mov
mov
mov
cld
sub
jecxz
lods
insl
pop
dec
jnp
add
and
push
adc
jp
sub
sbb
std
mov
lret
pop
mov
neg
push
xor
and
fmull
divl
pop
adc
push
push
sbb
lock
sbb
push
movsb
sbb
xchg
ret
dec
add
cmp
je
lea
in
scas
ljmp
lcall
fdivs
scas
cmp
adc
movsl
xor
xchg
pop
mov
call
icebp
mov
pusha
adc
lcall
je
cmp
cmpsl
jmp
cmpsl
xchg
cltd
aad
std
mov
ffree
rcrl
sub
inc
push
js
xchg
into
mov
dec
jnp
addr16
jge
jle
cmp
stos
xchg
and
stos
mov
push
mov
popa
adc
lret
cli
pop
add
subl
sub
test
push
insl
sub
mov
addb
mov
outsl
push
loopne
iret
cltd
pop
add
loopne
xor
pop
adc
xchg
inc
ja
xchg
add
xchg
out
test
shrl
cmpsb
cmpsb
pop
ljmp
adc
push
jno
aad
lock
divl
pop
push
dec
mov
jle,pn
nop
push
dec
mov
das
in
sub
mov
add
jnp
push
pop
inc
cltd
xor
mov
mov
add
mov
inc
and
lcall
jg
push
dec
lods
imulb
imulb
dec
cltd
jae
sub
aam
or
lret
or
xor
ja
and
pusha
push
or
incl
inc
test
dec
sarb
xlat
push
mov
jno
and
ja
loope
arpl
push
pop
dec
mov
fucomi
fisttpl
push
lea
xor
cmc
mov
jb
aam
int
mov
pmullw
pop
push
and
sahf
cmp
ss
jge
sbb
or
add
fwait
cmc
mov
dec
repnz
pop
cmp
imul
adc
xchg
inc
idiv
push
push
out
and
fsubrp
cli
xchg
das
leave
lea
fwait
ds
dec
mov
jle
xchg
scas
mov
pop
jnp
mov
pop
push
fiadds
test
popa
mov
ss
lret
jge
inc
lahf
add
adc
mov
lret
and
aam
cmp
jle
dec
fdivs
cli
mov
adc
pushf
inc
cmp
in
mov
in
in
and
xor
iret
mov
xchg
adc
add
push
mov
out
xchg
fildl
loop
cmp
inc
inc
adc
mov
xor
movsb
fistl
dec
cmp
sti
test
aas
mov
sub
inc
sub
pop
out
push
rcrb
pusha
subl
or
test
sti
push
jbe
std
or
lcall
sub
mov
testl
sarb
xorl
std
mov
lahf
mov
mov
ljmp
jno
dec
cld
push
mov
mov
stos
xchg
sarb
mov
pop
add
add
push
ja
sbb
jecxz
mov
mov
stc
add
pop
push
mov
mov
cmp
femms
sbb
popf
test
adc
mov
test
xchg
stos
idivl
out
pusha
aas
fs
or
xchg
or
push
sub
xchg
mov
adc
push
sbb
dec
mov
ds
je
pop
pop
push
lea
jae
lds
adc
cmp
aas
roll
sub
dec
bound
gs
sub
xor
stos
mov
xchg
cli
xchg
arpl
add
std
bnd
add
mov
clc
jns
dec
inc
xor
fcmovne
cmp
mov
out
sub
and
rolb
pusha
pop
je
andb
and
out
pop
adc
subb
add
adc
movsl
xchg
gs
call
pop
push
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
gs
stos
test
mov
aaa
scas
sbb
insl
jecxz
rcll
jno
and
and
inc
jle
xchg
iret
pop
jp
lcall
out
rorl
stos
xchg
cmpsb
out
call
add
jmp
call
add
jmp
call
lcall
