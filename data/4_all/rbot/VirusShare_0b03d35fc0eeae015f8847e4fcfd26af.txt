lods
stos
pop
cmp
les
lea
xor
mov
dec
sti
xlat
scas
in
mov
push
repnz
repnz
push
inc
arpl
inc
lds
out
aaa
stos
inc
das
and
ds
and
mov
mov
int
nop
push
push
pop
sub
leave
or
out
jge
dec
xor
and
xchg
add
out
pop
fwait
aaa
cmp
scas
or
mov
or
fcompl
or
push
cmpsb
jae
addr16
leave
call
add
adc
movsb
cs
and
daa
push
ljmp
cmp
lods
out
mov
lds
movsl
or
repz
pop
sbb
out
lds
push
xchg
push
aad
cmpsb
leave
aas
outsl
fwait
mov
shl
aad
push
mov
xlat
fnstcw
sbb
shrb
mov
or
arpl
sub
mov
out
push
movsb
mov
pop
sti
ret
sti
or
jno
test
jle
imul
movsl
mov
mov
fs
push
mov
adc
ret
cmp
and
mov
xchg
mull
or
pusha
ficoms
or
imul
jmp
repz
movsl
pop
out
data16
mov
arpl
cs
dec
push
jge
imul
enter
subl
or
push
inc
mov
fidivs
popfw
sub
shrb
push
in
sbb
testb
insl
push
clc
ds
push
icebp
sub
inc
and
sbb
add
jo
in
pop
and
xchg
or
mov
xchg
mov
adc
test
imul
push
sub
dec
out
push
cmpsl
jae
loopne
imul
mov
pop
mov
daa
outsl
mov
icebp
dec
mov
xorb
ja
jno
jo
add
jl
cmpsl
sahf
aaa
ret
adc
scas
scas
imul
aad
loop
xchg
ja
add
out
or
repnz
push
lret
inc
out
push
inc
pop
loop
mov
mov
push
scas
int
cltd
rol
orl
jp
lods
jnp
lret
and
jecxz
push
fisttpl
hlt
sub
cmpsb
mov
sub
and
or
loope
xchg
jecxz
ror
in
cmp
nop
test
and
cld
inc
push
or
mov
movsb
mov
imull
push
cmc
lock
inc
mov
dec
push
imulb
xorl
xlat
mov
or
test
xlat
sti
jns
inc
mul
or
stos
dec
test
test
nop
lock
jno
push
mov
sbb
pushl
xchg
sbb
test
iret
outsl
sub
sbb
dec
sbb
call
and
pop
cmc
test
pop
outsb
das
cs
xlat
lcall
dec
xlat
cmp
mov
push
aaa
and
mov
rorb
arpl
sbb
rorl
sub
jecxz
es
jp
in
loopne
or
nop
jns
inc
and
dec
sbb
cld
loope
orl
mov
push
inc
sub
and
movl
and
cltd
cli
lret
pop
mov
xchg
adc
out
js,pn
std
sbb
lods
mov
jmp
fstps
in
jo
dec
aad
iret
inc
and
add
adc
imul
and
xor
std
xor
aam
idivl
lods
cmp
push
xor
lock
dec
add
das
jmp
pop
push
jno
mov
orb
lea
aam
jnp
scas
mov
dec
movsl
aam
fsts
push
jp
lcall
pop
popa
sub
cmp
pop
pop
pushl
or
cli
mov
ficoml
jl
lods
rclb
pop
jbe
aas
push
loope
add
fstp
int
inc
loope
into
cs
cli
fsub
jae
nop
adc
lret
inc
ljmp
adc
jb
lods
sub
insl
aas
jns
xchg
and
cwtl
lods
sub
ss
ljmp
sub
pop
sub
iret
and
into
sbb
jge
enter
sub
out
lock
out
cpuid
mov
or
ror
dec
pusha
loopne
lds
lret
test
movsb
mov
mov
jg
cmc
mov
scas
mov
ljmp
ljmp
lcall
mov
or
test
adc
mov
popl
xchg
test
daa
outsl
dec
adc
jl
pop
ret
inc
jecxz
rorl
pop
pop
sbb
loop
or
loope
mov
cmp
scas
lods
imul
jmp
jecxz
mov
xchg
cwtl
fildll
adc
mov
addr16
iret
and
inc
pop
jge
lock
dec
adc
push
ss
dec
loope
adc
cmp
shrb
mov
mov
out
mov
fdivrl
jne
stc
loop
sbb
out
out
fdivs
xchg
mov
inc
sbb
mov
pop
clc
mov
popa
outsl
pusha
jno
cltd
inc
jo
and
loopne
dec
sbb
lds
ja
push
xchg
sub
cmp
push
mov
negl
aad
mov
push
sbb
pop
hlt
popa
push
and
xchg
sbbb
ret
lcall
aas
daa
cmp
add
pop
pop
in
mov
fcomi
fstp
movsl
rcrl
inc
jne
mov
outsl
inc
bound
mov
pop
test
int
mov
stos
pcmpgtd
push
add
hlt
cld
pop
lret
ret
fmull
pusha
cmp
adc
mov
sbb
int
xor
insl
ficoms
inc
sbb
arpl
jp
cmpsl
xchg
inc
mov
push
mov
adc
jge
cld
scas
test
cwtl
jecxz
adc
sti
mov
dec
pop
loopne
adc
test
and
ffree
adc
sti
mov
add
dec
out
dec
shrl
or
pop
push
add
lret
int
xchg
pop
pop
pop
sub
jl
pop
arpl
loop
cwtl
mov
xchg
and
pop
pushf
out
stos
movsb
fiadds
sub
lods
aas
popf
mov
lahf
ds
mov
add
repnz
mul
push
xchg
scas
push
xchg
mov
imul
dec
inc
cs
movsb
popa
jns
pop
fisubrl
xor
push
adc
sti
cmp
shll
jns
push
mov
and
arpl
dec
into
fs
repz
pop
cmp
sahf
mulb
add
sbb
mov
mov
mov
mov
ss
ja
test
incb
fsubrl
inc
push
clc
xor
pop
sbb
or
lcall
gs
sbb
jbe
cmc
or
mov
cmp
nopl
mov
loop
ja
and
insl
fadd
arpl
dec
add
push
dec
cmpsl
iret
jp
andb
sbb
sub
ja
sbb
xlat
fidivrs
lods
or
and
pop
dec
sti
decb
call
fnclex
add
push
push
stos
in
push
fdivrs
jle
movlhps
outsl
jg
cmp
push
imul
adc
sub
push
or
ljmp
addr16
pusha
mov
cmc
sub
dec
test
insb
sbbb
inc
lods
adc
jge
xorl
outsl
loopne
jmp
mov
sbb
mov
xchg
cmp
push
imul
scas
stos
mov
mov
inc
add
xchg
outsb
fwait
lret
std
fisttpll
nopl
mov
mov
insl
je
and
repnz
lcall
addr16
xchg
loop
cli
daa
in
sarl
ds
xchg
dec
sbbl
mov
inc
or
out
scas
add
popf
xchg
jns
pushf
and
out
sub
xchg
mov
mov
jp
lea
mov
push
fwait
mov
add
cli
out
sar
fstpl
pop
xchg
push
inc
push
pop
jno
loopne
and
jnp
xchg
mov
push
xor
sub
push
push
lahf
xlat
test
jge
sub
dec
out
xlat
sub
sti
cltd
mov
add
aas
adcl
inc
fwait
ja
arpl
sbb
push
xlat
or
pop
mov
iret
adc
rorl
call
and
add
int
jecxz
rcrl
rclb
mov
rorb
inc
jb
mov
lock
shll
pop
mov
jno
enter
push
ljmp
adc
pop
mov
mov
mov
add
push
and
shlb
xchg
push
push
ss
outsb
sahf
cli
xor
mov
push
add
inc
lock
imulb
scas
cmpsb
cs
inc
mov
inc
stos
insb
gs
les
jp
in
mov
leave
mov
iret
cltd
in
fdivrs
popa
popa
fcomps
inc
gs
cmp
fisttpl
add
mov
sti
ja
and
es
imul
insl
aas
std
in
xchg
cmp
fdivrl
daa
jge
xchg
add
push
scas
insb
jno
dec
lea
mov
mov
dec
sub
movsl
imul
push
push
pop
xlat
pop
in
mov
repz
test
movsl
pop
loopne
out
cmp
or
cmpsb
scas
and
mov
mov
and
push
jne
push
pop
out
xor
push
sbb
notb
push
lods
mov
ljmp
mov
inc
out
pushf
scas
pop
std
inc
xchg
fnstenv
dec
lds
pop
push
loope
incb
adc
jnp
push
and
stos
cmpsb
add
dec
and
or
pop
clc
mov
lods
loop
rcrb
xchg
inc
add
sbb
clc
add
outsl
mov
shrb
sub
cmp
cmp
mov
es
xchg
and
jnp
xor
les
push
rcll
push
pop
sbb
cmpsb
movq
add
scas
mov
testl
cmp
adcl
int
mov
aas
adc
movl
je
inc
mov
pop
push
shll
frstor
psubusw
dec
pop
or
sub
les
push
mov
cmp
int3
insl
sub
and
jl
add
mov
push
stos
mov
lret
mov
test
ljmp
out
xchg
lds
insb
dec
addl
inc
jl
adc
dec
mov
lret
xor
rcll
mov
sub
and
or
mov
out
outsl
imul
iret
fwait
sub
fisubl
sub
inc
xchg
int
jb
lret
jecxz,pn
mov
jno
gs
add
jp
xchg
insb
xlat
mov
mov
or
rolb
mov
neg
addl
aaa
push
imul
push
icebp
lds
push
test
das
lods
std
rcr
add
jmp
cmpsl
adc
jne
sub
adc
jnp
bound
push
push
adc
stos
test
lea
es
imul
push
int
sbb
add
in
fsts
sbbb
leave
sub
push
push
inc
add
aad
movsl
xchg
inc
xchg
mov
sbb
mov
outsl
xlat
lods
fmull
adc
icebp
sbb
ret
aaa
into
dec
jno
inc
sarl
jae
fidivs
call
dec
ds
movsl
dec
repz
dec
sbb
push
cmp
std
xchg
pop
stos
insl
adc
mov
in
pushf
cmp
sbb
mov
loop
cmc
into
call
jbe
jg
or
jmp
sbb
pop
fidivrs
negl
add
pop
shll
mov
adc
fucomi
les
lea
sub
movsb
out
xor
arpl
dec
adc
fcomps
pop
adc
dec
pop
cmpsl
movsl
divl
mov
or
and
add
sub
pop
ss
stc
rcr
push
out
or
push
sub
or
iret
dec
out
cltd
push
lahf
inc
pusha
push
js
out
std
jl
in
xchg
push
ret
nop
dec
in
adc
jb
out
xor
repnz
call
inc
adc
lcall
sbb
mov
mov
jo
imul
pop
arpl
nop
rorb
icebp
pop
xchg
cld
add
test
sti
xchg
push
mov
sbb
fcoml
pop
imul
dec
xchg
popl
je
add
movsb
push
mov
cs
and
mov
rcrb
mov
pop
jns
into
cltd
les
dec
sbb
repnz
ret
pop
clc
mov
cld
fdivl
ds
aas
lret
add
mov
insl
arpl
mov
pop
fidivrs
leave
out
inc
rcr
cmpsb
ficompl
cmp
add
iret
inc
scas
inc
popf
leave
mov
xor
jb
loope
and
ret
xchg
jmp
mov
xor
pop
cmpsb
daa
hlt
ljmp
inc
pop
mov
xor
cmp
stos
mov
dec
cld
mov
push
out
out
adc
pop
adc
sbb
push
and
movsb
push
add
jb
movsb
lcall
cmp
test
faddp
mov
into
and
ss
xchg
sarl
daa
sarb
inc
and
ja
cmpsb
or
test
out
cld
and
jl
popf
bound
mov
add
shll
rcr
cmp
decl
icebp
call
xchg
shlb
pop
push
jge
out
aam
sti
pop
les
call
xor
xchg
loopne
pop
xchg
int
push
addr16
cmp
sarl
add
repz
sarb
arpl
call
and
aad
sub
arpl
pop
sub
mov
add
and
xor
mov
adc
push
icebp
add
or
imul
adc
mov
pop
aam
add
dec
mov
push
fldz
mov
sub
mov
loope
mov
mov
es
aam
mov
xor
cmc
add
mov
or
xchg
out
test
movsl
xor
jns
inc
pop
or
mov
ljmp
dec
mov
cmp
fs
insb
mov
push
nop
addr16
and
cmp
fsubs
and
loope
scas
sarl
and
decb
clc
outsb
test
dec
mov
xor
in
rclb
and
fildll
movsb
mov
les
push
inc
sbb
lock
stos
lahf
push
pop
bswap
insl
stos
test
xlat
sub
inc
incl
cmp
mov
adc
sub
leave
sbb
xorl
pusha
cwtl
push
xchg
and
sbbb
mov
cltd
dec
sarl
in
in
or
call
cmp
movsl
and
add
je
mov
test
inc
sarb
pop
mov
or
xchg
ljmp
and
cltd
in
pop
xchg
jo
ljmp
push
test
js
sub
rcr
push
imul
pop
scas
negl
or
inc
les
jecxz
rcr
cwtl
fimuls
popa
aaa
lea
or
ret
pop
scas
sub
dec
mov
mov
cs
rcrb
mov
push
shlb
push
xchg
pop
in
or
nop
aas
xchg
rclb
cs
cmp
fwait
outsb
adc
pop
jg
movsl
inc
or
push
int
ficompl
mov
fcmovnu
mov
decl
out
jp
pop
es
dec
cmp
xchg
mov
cmp
lds
add
das
lock
push
or
out
pop
popa
fdivp
push
add
call
sub
mov
push
sbb
xchg
daa
dec
lods
and
jle
mov
jmp
jecxz
cmp
dec
psubb
mov
inc
mov
push
nop
inc
sub
sub
sti
jmp
hlt
es
mov
fimull
imul
stc
cli
jmp
pop
leave
xor
adc
pusha
hlt
lds
js
pop
test
jp
pop
jno
jmp
inc
add
call
pop
int3
movb
or
or
xchg
xor
xchg
mov
and
out
aam
push
clc
int3
xor
pop
icebp
and
pop
or
or
push
call
outsb
add
or
int
push
out
jne
out
neg
lea
ja
sti
lret
cmpsl
cmp
or
call
mov
leave
and
stos
jl
ss
ret
daa
mov
scas
push
jecxz
mov
mov
mov
and
push
js
jmp
add
jno
jl
sub
cmp
inc
add
jl
imul
or
dec
sbb
mov
out
pop
lods
cmpsl
fsubl
fsubr
sbb
into
pop
es
out
pop
outsl
addr16
dec
cmc
mov
mov
sbb
dec
sub
cmpsl
aam
fstpl
adc
mov
orl
mov
xor
fistpl
adcb
jmp
dec
ja
out
jne
rcrl
xchg
xchg
into
sarb
jae
jecxz
lcall
jl
dec
xchg
inc
mov
ret
fcomps
and
sbb
sbb
jns
cmp
fucomi
lret
jle
xchg
sti
popf
and
sti
addb
or
add
sbb
push
cmp
jecxz
jo
xsave
jno
js
mov
popf
or
rcrb
adc
inc
pop
or
lahf
popa
jbe
sub
xor
insl
dec
mov
mov
xlat
fimuls
and
out
add
xor
jne
in
jnp
adc
imul
addb
movsb
fwait
ret
loope
fnstcw
shll
cmp
sub
jns
jae
mov
hlt
adc
cmp
and
movsb
mov
push
movsl
in
out
outsl
mov
push
mov
sub
or
or
dec
push
repnz
das
fld
or
push
xor
lret
add
lock
cmp
jns
or
ljmp
stc
xlat
sbb
shll
fwait
xor
push
mov
loope
int3
xchg
fisttpl
rcrl
push
cs
loopne
decb
mov
sub
outsl
das
loope
js
push
lret
jae
popa
into
ret
mov
ss
adc
popl
mov
xor
jecxz
pushf
or
jb
mov
or
jne
add
adc
imul
sti
push
dec
sarl
push
xchg
jle
test
pop
sbb
pushf
jmp
jmp
and
fucom
dec
xchg
stc
jo
add
cmpsl
adc
inc
push
adc
cmpsb
in
cwtl
push
cmp
loope
scas
mov
cwtl
in
out
pop
adc
and
test
mov
cld
lods
int3
pusha
jmp
out
adc
lods
push
in
add
inc
lock
jne
arpl
clc
push
std
mov
xor
sub
imul
sbb
std
inc
addb
sbb
sahf
push
xchg
pop
mov
jbe
insl
sbb
dec
pop
pop
fwait
sub
push
in
fs
jmp
xchg
or
rcrl
nop
ljmp
lahf
ljmp
bound
jo
and
popf
iret
pop
jbe
jnp
adc
and
cmp
rol
scas
mov
idiv
jo
dec
sbb
cmp
cs
jo
xor
add
mov
jnp
and
mov
mov
xor
inc
sub
pushf
push
xchg
xchg
popf
or
lret
pop
xor
adc
leave
lahf
push
dec
xchg
add
fldl
push
cmp
xrstors
ficoms
pop
mov
stc
sarl
lahf
insl
pop
fwait
mov
add
push
call
loope
xchg
xchg
push
inc
xor
push
mov
mov
jg
int
dec
ja
or
and
lea
sub
loope
xorl
lcall
mov
jg
repz
adcl
arpl
daa
lret
insb
mov
add
bound
mov
dec
mov
mov
inc
push
push
dec
mov
addr16
xchg
sub
cmpsb
mov
insb
rcrl
jg
push
mov
insl
sub
and
testl
sti
dec
pop
lret
adc
or
inc
and
jno
es
dec
push
pop
xchg
mov
push
cltd
add
rol
cmpl
das
cmp
call
mov
int
add
or
mov
pop
push
sub
daa
xor
push
hlt
outsl
mov
and
movsb
mov
daa
ds
and
adc
scas
add
sbb
inc
inc
in
inc
cmp
mov
into
sbb
sub
popa
pushf
cld
sbb
pop
insb
add
inc
mov
into
clc
movsb
cmp
cmp
sti
or
sbb
xchg
cmp
fldcw
add
adc
push
xchg
push
call
popa
insl
loope
cmp
mov
mov
pop
cltd
mov
std
inc
jecxz
lret
ljmp
movaps
imul
pop
push
stos
sti
mov
cs
adc
jg
jns
adc
std
adc
fbstp
pushl
lret
add
rcr
fs
mov
mov
sbb
pop
sbb
mov
push
xor
test
cli
fisttpll
push
dec
jp
ret
in
mov
adc
push
cmpsb
into
jnp
out
cmp
sub
in
clc
insl
fs
mov
std
lahf
inc
and
jb
mov
loop
inc
adc
arpl
ss
ss
fsts
fildl
sub
xchg
and
sahf
push
call
inc
fisubs
mov
ljmp
ret
sbb
lock
les
fistl
mov
inc
movsl
pop
std
add
xor
push
test
pop
aaa
adc
xchg
popf
jns
or
cmpsb
push
ret
loopne
dec
scas
jecxz
decb
adc
call
add
xchg
mov
js
mov
das
fs
pop
add
push
dec
jbe
mov
clc
mov
fst
sti
insl
sub
aad
push
std
jo
pop
cmp
sub
push
mov
mov
stos
bnd
ds
test
lds
pushf
jns
test
loope
outsb
lcall
das
std
fisttpll
aaa
out
jmp
or
or
nop
adc
adc
add
pushf
call
ja
dec
daa
push
or
mov
shlb
imul
loope
mov
ds
rolb
mov
mov
ds
icebp
fs
xchg
adc
popf
sub
and
test
xor
inc
add
fiadds
add
inc
pushf
sbb
in
mov
jl
xchg
mov
push
sub
fadds
out
sub
cmp
cwtl
test
shll
jmp
test
xor
into
and
add
das
idivb
cli
mov
cmp
mov
shl
or
inc
inc
or
sahf
xchg
cwtl
aam
mov
pop
lds
roll
xor
sahf
loop
xchg
dec
movsb
insb
dec
incb
nop
xor
cmp
aas
pop
dec
popa
test
push
loopne
cmp
repnz
mov
pusha
push
gs
out
xor
pop
jp
mov
stc
fildl
rcll
push
mov
sub
hlt
inc
cmpsb
push
outsb
ret
and
xchg
xchg
shr
sub
fwait
push
adc
stc
repz
scas
or
mov
adc
mov
add
icebp
inc
jmp
add
bound
movb
xlat
mov
fcmovb
add
sti
std
mov
sub
cmpsl
push
shlb
loop
out
cli
sbb
mov
hlt
mov
jl
pop
xchg
lret
arpl
add
push
ss
bound
roll
out
loop
sub
push
stos
add
pop
lea
loopne
cmp
pop
fildl
fldenv
pop
mov
dec
fwait
add
inc
or
adc
stos
dec
mov
mov
add
fisttpll
sti
clc
divb
inc
cmp
add
inc
sarl
push
push
arpl
out
lock
shrl
or
stc
dec
addl
push
mov
arpl
or
sub
lock
in
in
dec
fidivrs
addr16
shrb
jb
add
inc
jl
push
cmp
sbb
and
scas
xchg
lods
jo
dec
push
adcl
dec
pusha
mov
mov
cli
stc
sbb
cmp
aaa
fcoms
cmp
add
int3
scas
or
and
push
add
jno
push
xor
push
mov
imul
lcall
mov
jb
sub
sti
lods
xchg
xor
enter
dec
incl
ret
fcmovne
mov
sbb
call
or
mov
outsl
inc
cwtl
xlat
inc
fsubl
and
xor
dec
pop
inc
and
mov
mov
mov
mov
addr16
jo
mov
xchg
hlt
or
lcall
jno
inc
popa
insl
push
pavgw
subb
out
cmp
mov
sbb
xchg
in
push
mov
stos
xchg
lret
je
jo
jg
lahf
movsb
das
bnd
int3
jecxz
pop
xchg
shrb
les
sarb
jmp
xor
shl
loop
xlat
ret
into
shl
adc
pop
out
pop
push
mov
sbb
fcmovb
lods
xlat
xor
lret
stos
xor
lret
xor
loopne
pushf
sbb
mov
inc
cld
nop
and
and
stos
stos
cmpsl
stc
adc
add
inc
aam
pop
call
pop
insl
dec
stos
add
inc
and
out
jmp
cmp
pop
insb
jmp
subb
je
and
lahf
mov
adc
xor
fcom
xor
mov
lahf
stc
xchg
dec
jecxz
imul
lock
mov
stos
sbb
ds
cld
repz
add
sub
pop
lds
cmp
in
mov
add
add
xchg
pop
xchg
pop
mov
add
dec
dec
popf
jb
aas
in
cmp
pop
lds
inc
std
ds
mov
adc
jnp
jne
arpl
stc
stos
in
sub
stos
aas
je
out
das
cmp
lods
add
pusha
out
into
sbb
pop
dec
mov
xchg
add
inc
repnz
sub
jg
jge
mov
insl
shll
mov
pop
mov
pop
cmc
jp
push
mov
push
in
hlt
push
mov
lods
dec
push
pop
inc
leave
dec
add
or
push
repnz
mov
mov
stos
push
cltd
adc
movsl
mov
into
or
jns
cmc
lret
aad
sbb
jge
fistl
cmpb
inc
dec
jo
mov
xor
sub
push
or
out
or
out
jle
sbb
mov
sub
cwtl
icebp
jnp
das
shlb
bsr
scas
or
std
pop
xor
and
and
daa
mov
data16
divl
in
outsb
int
addr16
insb
push
dec
arpl
cmp
jbe
jnp
adc
jge
sbb
daa
and
insl
in
pop
test
lea
inc
jp
xchg
mov
sahf
mov
xchg
int
sbb
and
aad
ret
aas
jl
in
mov
pop
shlb
add
andb
fwait
pop
mov
stc
inc
mov
push
sbb
jns
xor
rcrl
lds
adc
xor
xorl
imul
cmp
mov
gs
mov
subb
popf
jecxz
fsubrp
addr16
subb
cmp
or
push
cli
inc
xchg
stc
popf
in
mov
dec
xchg
adc
clc
cld
hlt
rcll
xorb
in
cmpsb
or
sub
pop
mov
jg
push
mov
xchg
pop
adc
jg
dec
iret
xor
or
dec
pop
sbb
lahf
mov
and
stos
push
inc
pop
jns
jb
fdivl
lods
movsl
adc
inc
rolb
push
cmpb
xchg
mov
test
in
jnp
mov
inc
jecxz
push
popf
jnp
lret
aad
arpl
imulb
ret
and
test
fistpll
in
sub
pop
dec
dec
add
scas
cmp
ficoms
sbb
les
cli
or
lahf
hlt
rcll
loope
xlat
or
lcall
dec
rorb
cld
das
jmp
adc
or
imul
lock
pop
sti
imul
pop
sbb
adc
shlb
mov
fnsave
and
cs
and
pop
add
int3
xchg
push
cmp
cmp
mov
mov
sub
inc
aaa
cmp
stos
lock
arpl
jecxz
int3
cmc
stos
xchg
xor
jecxz
xchg
repz
adc
mov
add
dec
ss
sahf
or
mov
push
push
notb
repz
rorb
mov
std
xor
inc
push
and
push
out
pop
mov
repz
andl
mov
jl
cmpsl
pop
pop
pop
mov
push
pop
pop
pop
or
jp
dec
arpl
ds
aam
cmp
sbb
inc
jne
xchg
nop
xor
fimull
push
mov
notl
dec
xor
ljmp
cmp
jecxz
sub
and
sbb
jmp
cld
push
jmp
inc
xlat
mov
aaa
lahf
push
aaa
or
push
jo
push
jp
fisubrl
cli
imul
add
outsb
add
or
cmpl
cmp
jg
pop
flds
sar
add
xor
fsubrl
pop
nop
addb
decb
xor
pop
jae
pop
push
inc
add
stos
cmp
pop
out
iret
inc
clc
mov
dec
push
and
cltd
stc
cmc
push
inc
jbe
iret
out
sahf
in
xorb
mov
dec
push
or
cmp
sbb
mov
or
jecxz
mov
dec
mov
sub
xchg
or
jnp
push
or
shll
or
fidivs
pop
mov
fdiv
inc
iretw
lea
and
fldcw
pushf
mov
inc
cmpl
cltd
dec
sub
daa
test
pop
adc
mov
mov
aaa
push
aad
clc
add
jg
ficomps
mov
mov
push
hlt
insl
sahf
jno
cmp
rcl
push
cmp
pop
mull
push
enter
subl
ds
or
repz
cmp
dec
push
xor
dec
mov
push
divb
int
cli
cs
sbb
or
xor
push
pop
sahf
push
rep
nop
dec
sub
or
sub
jbe
mov
pop
xor
lods
dec
movsb
sahf
add
pop
ss
dec
movsl
int3
dec
or
or
mov
sbb
sbb
sarl
in
push
or
pop
lret
mov
nop
shrd
xchg
jns
shrl
inc
ficoml
rolb
mov
pop
or
jmp
jns
pop
nop
das
mov
mov
insb
pop
inc
xchg
notl
xor
dec
mov
ficompl
repnz
push
movsl
push
nop
les
xor
sbb
out
movsb
adc
imul
xchg
xchg
rcrl
sbb
imul
pushf
cld
add
jl
hlt
mov
mov
stos
fisttpll
inc
pop
out
cmpsb
adc
or
andb
das
jbe
clc
xchg
inc
aam
mov
mov
push
pushf
xchg
inc
pop
push
lods
jmp
stc
aam
shrl
clc
sbb
fs
movsb
lahf
jmp
int3
outsb
and
xor
inc
jmp
adc
repz
cmpsl
and
jnp
out
stos
push
mov
sub
cmc
pop
adc
daa
jb
lods
dec
xchg
or
xor
fdivrl
or
dec
or
les
popf
out
add
sub
rorl
cltd
cwtl
jne
dec
pusha
push
outsl
roll
push
mov
lods
aas
add
mov
rorb
in
hlt
repz
ljmp
and
fdivrl
sub
dec
add
dec
jmp
adc
shrb
mov
ljmp
leave
lcall
divl
push
adc
pop
cmp
inc
loope
and
pop
push
ja
mov
xchg
jne
pop
popa
inc
mov
sbb
dec
out
xor
xchg
ds
jne
pushf
cmp
mov
cmpsb
fucomi
xor
movsl
xchg
adcb
dec
in
cmp
mov
daa
sub
xchg
cli
sbb
cmpsb
xchg
inc
inc
out
scas
dec
pushf
adc
add
decb
inc
xor
mov
inc
rcll
out
pop
jne
mov
dec
jnp
and
lahf
out
dec
cmp
pusha
mov
rcrl
mov
fimull
xchg
jecxz
sub
hlt
mov
outsb
das
fsubr
rclb
fnsave
ljmp
jae
cmp
cmpsb
jno
movsb
out
xchg
or
mov
push
or
or
pop
daa
and
and
cwtl
fwait
pop
addr16
test
push
jbe
and
jmp
adcb
add
mov
jo
push
push
xchg
inc
add
jnp
cwtl
cmpb
cltd
mov
scas
icebp
ret
fimuls
fsubr
xor
sub
jbe
insl
mov
xor
insb
pushl
fbld
outsl
stos
mov
loope
insb
dec
mov
pop
mov
adc
jge
pop
enter
and
movsl
and
out
sbb
movsb
std
mov
xchg
mov
lock
xchg
aaa
daa
aad
andb
cmc
mov
mov
mov
lods
imul
ljmp
xlat
ss
fsubp
dec
insb
jne
aaa
fnstcw
mov
xor
cli
cmp
lret
fnsave
jb
pop
das
cmpl
xor
add
jge
nopl
and
mov
xchg
mov
mov
dec
mov
dec
mov
and
mov
into
push
jne
in
jle
mov
jno
cmpsl
and
jne
inc
ss
jmp
xor
movsb
in
inc
xchg
arpl
outsb
inc
mov
and
in
cwtl
int
dec
test
in
lahf
add
sub
xchg
pop
jmp
xor
pusha
jns
outsl
adc
stc
cmp
adc
or
sub
cmp
movd
ret
sub
outsb
adc
test
inc
into
pusha
add
mov
pusha
movsl
push
subb
inc
and
les
aam
es
cmp
ja
ljmp
js
icebp
inc
lret
fistpll
xor
dec
or
shlb
nop
xchg
aas
lea
mov
cmpsb
clc
jp
jno
rcrb
xchg
mov
inc
mov
xor
imul
push
sbb
adc
dec
xor
fcmovb
xchg
fcomp
cs
push
xchg
sub
popa
pop
sbb
jge
insb
push
cmp
fwait
mov
std
or
push
mov
mov
push
sub
enter
sarl
mov
sti
adc
scas
xor
aas
jbe
aam
pop
aam
or
lods
pop
sbb
xchg
jle
loopne
mov
adc
sub
adc
lods
xchg
fnsave
xchg
sub
add
jns
xlat
call
sbb
jecxz
in
shll
mov
cmp
xchg
adc
inc
das
test
aaa
roll
and
outsb
hlt
jecxz
add
sbb
push
std
mov
mov
scas
lcall
mov
pop
dec
jb
enter
popf
pop
jno
dec
ss
inc
out
movsb
and
mov
fs
iret
lods
adc
test
xor
sub
mov
jae
mov
mov
push
scas
or
fidivrl
mov
push
cmp
sub
adc
and
lahf
out
ljmp
fdivr
adc
adc
xchg
test
test
cli
jl
or
insl
xchg
jle
ds
mov
add
inc
std
mov
inc
lahf
xchg
adc
fwait
out
rcl
jne
dec
scas
pop
pop
mov
pop
iret
jg
push
imul
int
xor
jecxz
jmp
xchg
adc
lock
shrb
fcmovb
cmc
xchg
aaa
sbb
jmp
xchg
aaa
xchg
add
test
fstpl
shr
out
das
xchg
std
and
dec
repnz
xchg
vfnmadd231sd
pop
mov
push
imul
mov
pop
sub
and
xchg
fisubrl
lods
out
inc
xor
xor
or
pop
mov
mov
xchg
int3
pop
cmp
scas
push
in
pop
out
mov
pop
movsl
iret
mov
lcall
push
mov
orl
push
xchg
mov
iret
icebp
mov
xor
sahf
xchg
clc
sbb
bound
hlt
sub
mov
mov
jl
inc
jb
pop
jno
hlt
push
pop
sar
test
or
in
movsb
dec
jge
je
push
jmp
in
int3
es
int3
popf
xchg
cmpsl
lahf
inc
js
ret
xchg
fistpl
push
sbbb
or
adc
xor
repz
jge
inc
outsl
pop
dec
xchg
xor
repz
dec
lret
ds
push
jae
les
jnp
jno
aam
int
pop
out
jno
mov
int
jp
sbb
and
xchg
pusha
into
rcrl
inc
sahf
pop
and
jp
xchg
addr16
pop
mov
mov
imul
cs
mov
push
shll
outsb
jl
or
jl
push
mov
jns
mov
mov
add
scas
ss
dec
push
scas
xchg
clc
cmpb
les
push
loopne
fwait
sub
xchg
sbb
mov
sbb
js
lods
inc
insl
in
dec
xchg
sar
pop
push
imul
daa
movsb
aam
push
xor
andl
out
push
mov
add
je
add
sbb
push
inc
sub
mov
test
fstpt
add
mov
push
jno
bound
and
xchg
popf
pop
mov
shll
dec
inc
mov
lds
in
insl
jnp
rclb
test
mov
ja
fidivrs
enter
rclb
lret
sub
jg
ret
jp
mov
cmp
fwait
testl
sub
and
dec
insl
aam
pop
and
jmp
scas
or
popf
out
jle
adc
cwtl
lahf
xchg
fmul
sbb
iret
shrl
jl
bound
sub
add
mov
loop
je
sti
outsb
dec
push
xchg
fcomp
push
inc
push
push
jbe
jg
fcmove
ljmp
daa
mov
lods
imul
es
lock
pop
adc
lcall
out
adc
fsubr
movsl
inc
add
jno
test
fs
jge
sbb
scas
out
inc
inc
js
pop
inc
dec
xchg
test
roll
xor
roll
jl
aad
pop
mov
xor
loope
xor
push
in
mov
mov
aam
ljmp
xchg
adc
call
fsts
jns
add
aad
ss
push
mov
xor
push
leave
dec
repz
in
xchg
adc
and
adc
mov
jmp
test
xor
cs
or
xor
xchg
and
jle
sbb
in
push
pop
bound
inc
sub
add
movsb
inc
pop
out
data16
cwtl
and
dec
cwtl
push
fdivrs
xor
dec
inc
dec
mov
iret
sub
icebp
jne
push
insl
js
xchg
cmp
xchg
sub
mov
fwait
mov
ljmp
push
shr
jg
jl
aad
outsb
aas
sbb
mov
test
pusha
xor
jecxz
inc
lds
push
incb
test
push
shlb
loop
push
inc
jle
mov
iret
inc
push
lods
outsl
jle
mov
out
mov
scas
fsts
ss
xor
fisubl
adc
mov
insl
sub
mov
mov
dec
sbb
mov
daa
dec
imul
fstpt
ffreep
ja
cmpsb
xor
popa
sbb
cmpsb
mov
mov
mov
outsb
das
mov
inc
xchg
mov
push
cmp
sub
or
xchg
lret
loop
ficompl
lds
xor
xlat
cld
adc
jnp
fsubs
sti
xchg
pushl
popf
pop
xchg
push
sbb
sbbl
add
pusha
loopne
xor
mov
jne
ret
xchg
cmovs
dec
and
sbb
faddl
mov
add
xchg
fs
adc
stc
jbe
inc
imul
fildl
add
fisubrl
jmp
inc
dec
outsl
pop
into
out
mov
xchg
sbb
mov
je
dec
stos
popf
rcrl
mov
jg
gs
lds
aam
es
jne
cltd
mov
ss
and
dec
sub
cmc
pop
fs
and
sbb
or
cmpsl
addr16
mov
sub
or
inc
inc
enter
mov
int3
dec
xchg
jmp
push
shll
sub
mov
mov
ffreep
cmpsb
sub
xorb
outsl
ret
lret
and
or
in
jne
leave
xchg
arpl
clc
dec
xor
rep
in
and
sarb
inc
xor
add
mov
pop
les
lcall
loope
fbld
sub
mov
into
cmp
jno
xlat
bound
mov
fmul
idivl
cmpsb
or
fwait
jnp
or
shrb
xchg
aaa
cmpsb
and
or
add
popf
xchg
out
or
cwtl
in
je
adc
xchg
bnd
lock
outsl
push
shrl
cmp
push
mov
shl
xor
ja
cwtl
sub
xlat
inc
rcrl
mov
push
dec
adcl
jno
push
mov
xchg
push
sbb
and
daa
sub
ficompl
cwtl
xlat
jmp
imul
mov
repz
jns
mov
js
fs
in
fdivl
pop
add
lea
divl
pop
mov
imul
and
call
xchg
push
rolb
div
stc
pop
lret
add
adc
stos
int
dec
push
int
xor
adc
sbb
aad
mov
sahf
or
pop
add
jecxz
mov
dec
in
aas
sbb
rorb
lret
xorl
fmull
lahf
push
loopne
pop
loopne
push
mov
sbb
xchg
sub
xorl
mov
push
in
lahf
jle
inc
push
mov
lcall
repnz
loop
mov
rcr
lcall
in
test
nop
dec
out
xor
cmp
std
or
dec
lret
loopne
movsb
imul
mov
sbb
push
mov
sti
nop
mov
out
mov
popw
push
mov
lret
push
stc
insl
data16
pop
iret
add
xchg
fstpl
and
adc
lods
popf
mov
dec
inc
mov
daa
int3
and
mov
sbb
xchg
cmp
fmull
pop
xchg
xchg
push
xchg
fwait
add
adc
add
mov
mov
sub
inc
jl,pn
xor
leave
sti
cltd
ljmp
xor
out
pop
cmp
pop
stc
es
add
cli
pop
sub
or
add
cwtl
add
sub
jmp
pushf
jge
or
int
out
aad
into
sbb
test
inc
mov
add
cmp
icebp
mov
aaa
push
jb
xchg
out
iret
pop
xlat
popf
sub
jle
mov
mov
leave
daa
cmp
out
inc
mov
enter
es
mov
mov
or
sub
sub
add
xchg
je
out
add
jge
sbb
or
call
sahf
imul
bound
cmp
outsb
cmp
in
or
gs
mov
pop
mov
cmpsl
and
push
mov
lea
shll
sub
pop
pop
push
outsb
pop
cmp
subb
adc
adc
mov
out
int
leave
dec
mov
xchg
dec
cmp
stc
loopne
andb
clc
pop
daa
mov
pusha
sbb
jae
push
push
mov
or
enter
in
inc
mov
xchg
ds
jb
and
pushf
jne
addr16
xchg
loopne
das
pop
mov
push
test
cmp
sbb
cs
jg
jbe
popa
jb
mov
jne
jmp
out
push
xchg
lods
bound
shrb
sub
cmp
mov
push
arpl
les
out
jle
push
pop
inc
iret
shl
sub
or
outsl
mov
out
mov
or
sub
push
add
test
push
lods
add
jg
push
mov
cltd
jo
repnz
out
xchg
cmp
push
cs
cltd
jp
sbb
call
int3
sub
cmpsb
sahf
jb
rorb
test
lods
stos
jecxz
cmpl
dec
stos
cmpsb
nop
xchg
sub
mov
outsl
sub
fst
shll
subl
loop
out
push
dec
imul
mov
push
leave
sub
lds
insl
ret
aad
cmp
cmc
mov
ss
push
test
test
test
pop
insl
shlb
insb
inc
movsb
cmc
popf
out
lods
mov
mov
xchg
lahf
data16
stc
inc
mov
adc
mov
addr16
sub
add
mov
imul
lahf
mov
or
pushf
ja
mov
cmp
xchg
fs
dec
cmc
dec
mov
inc
xor
in
mov
xchg
testb
aaa
lcall
fists
es
jle
cli
ret
mov
rcll
sub
out
loope
xor
dec
in
jp
push
xor
lods
cmp
sbb
lods
push
mov
lea
mov
or
adc
mov
fisubl
mov
lahf
pop
test
mov
or
cmc
stos
nop
mov
pusha
imul
lock
subb
cs
cmp
and
jp
bound
lahf
hlt
cmp
or
xor
cmpsl
movsb
icebp
cmp
mov
adc
das
aam
lds
push
arpl
mov
push
mov
scas
adc
adc
push
idivb
pushf
mov
fdivr
push
xor
xchg
addl
stos
addl
dec
adc
sub
fdivrl
repz
cmp
mov
push
jle
push
jbe
mov
cwtl
xor
repz
loopne
dec
pop
shll
adc
add
push
add
adc
imul
lds
mov
clc
sbb
test
mov
xchg
andl
push
iret
imul
in
mov
ret
add
mov
into
addr16
dec
popa
inc
movsb
mov
pop
stos
flds
test
jle
inc
icebp
adc
sub
cmpsb
and
stc
or
mov
inc
mov
imul
shll
sbb
xor
cmp
mov
xor
pop
cmc
jae
mov
mov
cmp
lods
push
adc
mov
js
movsb
mov
sub
mov
loopne
sub
pop
xor
sbb
pop
div
stos
mov
fisttpll
leave
fidivs
add
inc
cmpsl
rcr
das
xchg
fmuls
inc
fcmovnbe
lret
jge
cs
outsl
cmc
loopne
vpsubb
mov
es
pop
jns
dec
cltd
fnsave
adc
pop
call
dec
xor
sub
pushf
mov
imul
icebp
int3
jge
sbb
cmp
vpsubsw
inc
cmp
ret
scas
lds
push
mov
lods
cs
adc
test
and
adc
lea
add
insl
xor
jno
pop
repnz
loope
in
jne
imul
pop
jp
fsubs
pop
roll
sub
enter
cmpsb
push
push
mov
xor
inc
divb
adc
or
fs
stos
aad
enter
adc
sbb
cld
xor
lahf
into
cltd
adc
fists
sub
ror
shrb
lea
stos
stos
pop
adc
xorb
mov
divl
mov
fidivrl
sbb
das
add
adc
fimuls
loopne
pop
xor
dec
sub
cmp
sarb
dec
ja
popf
sub
icebp
popf
pop
mov
jmp
dec
adc
push
sarb
mov
adc
jge
aas
pop
inc
insb
inc
jp
pop
lods
sar
outsb
fcomps
and
arpl
insl
leave
psraw
dec
lea
mov
aad
adc
js
jp
sahf
sub
notb
and
and
ds
enter
scas
movsl
das
clc
xor
mov
mov
or
pop
int3
mov
mov
jb
iret
cmp
cmpsb
popf
inc
pop
pushf
sbb
mov
sbb
lret
fidivl
jl
cmpsl
xchg
jnp
pop
xchg
jnp
jne
mov
lds
jg
pop
shrb
stos
push
das
popa
mov
pop
pop
cmp
jg
mov
mov
daa
rolb
das
loopne
mov
repnz
sahf
ret
test
pushf
outsl
sub
cmp
pop
sbb
inc
jbe
into
inc
bound
inc
lds
sbb
icebp
rcll
fwait
gs
aad
inc
clc
fwait
or
sbb
mov
daa
mov
push
xchg
xlat
in
fimuls
lock
cld
lahf
or
and
sbb
dec
repz
and
dec
fldl
xor
xchg
jmp
xor
hlt
push
out
mov
or
fcmove
cmp
add
push
lahf
movsl
es
pop
in
fimull
in
cmp
mov
loope
outsl
scas
adc
imul
call
push
and
out
pop
imul
fidivrs
and
fwait
or
or
hlt
jp
pop
aas
or
cwtl
not
jno
add
jnp
mov
pop
hlt
dec
pop
push
pusha
inc
cs
scas
jnp
repz
fs
or
notb
push
test
xor
pop
addr16
repnz
nop
divb
pop
pop
repnz
cwtl
loop
pop
mov
or
mov
push
mov
jmp
pusha
jp
inc
test
adc
jae
mov
mov
jl
xchg
mov
imull
hlt
dec
popl
subl
je
mov
cmp
mov
ret
cld
pop
and
stos
movsl
sub
or
sahf
add
cli
push
adc
jo
rcl
adcl
mov
xor
repz
pop
jl
or
fstps
sbb
or
rcrl
jg
mov
pop
mov
mov
imul
gs
push
iret
mov
push
pop
or
insl
sbb
sub
jmp
pop
adc
mov
or
inc
arpl
sbb
dec
into
aad
mov
aaa
or
mov
insl
vunpckhps
xor
in
mov
inc
sub
cmc
test
push
sub
inc
aas
gs
inc
mov
jle
mov
imul
push
jb
out
xchg
add
sub
inc
sbb
shlb
mov
subl
out
jl
push
pushf
push
std
cwtl
sbb
icebp
in
js
int
outsb
ret
fldl
or
pop
stos
aam
push
daa
xchg
sub
cld
sbb
jp
pop
in
xor
mov
sub
sub
push
pop
test
cltd
mov
loope
xchg
movsb
inc
pop
xchg
sub
mov
gs
xchg
aaa
stos
out
stc
push
lret
fwait
lods
cmp
xlat
movsb
cmpl
push
roll
dec
cmc
xchg
repz
sub
scas
add
gs
fcoml
scas
fimull
test
aad
and
jg
pop
pop
clc
or
mov
xor
das
cltd
ds
add
push
stos
jg
cmp
movsl
outsb
cmc
aam
cwtl
sbb
shrb
sbb
outsl
je
add
test
sbb
xchg
stos
jecxz
popa
add
xchg
adc
cmp
xor
xor
out
hlt
push
inc
lods
dec
or
lcall
adc
in
sub
decl
stos
pop
gs
jno
mov
out
inc
mov
outsl
js
jo
adc
cwtl
int
outsl
mov
dec
nop
jmp
mov
ss
inc
and
adcb
mov
aam
pop
gs
bound
fwait
js
cmp
and
and
or
fwait
sbb
dec
jno
pop
ja
dec
push
sbb
adc
enter
pop
cmp
ret
mov
stos
imul
fcmovbe
push
mov
adc
pop
mov
or
call
mov
aas
out
call
adc
pop
cmp
xchg
aas
in
rorb
xchg
cmp
pop
xchg
inc
xor
push
jge
pop
fwait
push
xor
aam
sbb
jp
xchg
adc
pusha
lea
out
in
fcomps
pop
jge
lods
call
shlb
mov
or
stos
sub
dec
mov
sub
pop
xchg
jle
aam
cmp
in
xchg
jg
jb
mov
stos
out
mov
dec
push
cs
into
movsb
rorb
pusha
mov
jb
push
das
xbegin
loop
xor
shll
cmp
push
mov
stos
mov
and
int3
push
add
nop
jbe
xchg
mov
push
outsl
inc
fcomps
stc
cmpsb
scas
pop
pop
repnz
mov
pusha
incl
jmp
jecxz
test
push
inc
mov
inc
stos
add
out
dec
pop
insl
xor
mov
cmp
mov
jae
dec
jmp
push
insb
jg
iret
je
gs
xchg
inc
xor
and
cld
xchg
lahf
pop
in
add
sbbb
popf
faddl
xchg
sbb
cli
fcomip
fidivrs
push
fs
mov
cmp
pop
aas
adc
mov
aas
shrb
aad
pop
or
in
js
add
inc
fidivrs
rolw
iret
fdivrl
imul
push
sub
xchg
mov
clc
gs
mov
pop
fsubrs
stos
test
jae
pop
mov
cmpsb
icebp
pop
jle
je
add
adc
sbb
cmp
or
or
xor
cmp
aaa
pop
cmp
shrl
pusha
stc
adc
mov
out
aaa
fcmovnbe
adcb
cmp
stc
adc
pop
sbb
rcrl
sbb
adc
ret
pop
jbe
mov
les
mov
mov
mov
dec
mov
xor
xor
addr16
push
cmpsb
rorb
fwait
pusha
and
test
xorl
dec
pop
scas
andl
lods
orl
pop
add
lds
pushf
daa
and
fstps
repz
add
cmp
ds
jne
in
mov
loopne
outsl
cmp
push
push
jae
xor
popf
or
loopne
popa
rclb
clc
dec
sbb
mov
pop
jnp
outsb
pop
fcoml
and
jo
call
mov
xor
jae
iret
add
cmp
xor
lcall
jns
fisttps
adc
cmp
icebp
adc
imul
mov
rcll
sub
push
fwait
loopne
xor
mov
jbe
stos
cmp
in
sbb
xor
packssdw
inc
or
push
fdivl
lret
mov
inc
stc
fsubl
cwtl
xor
mov
pop
and
nop
pop
dec
int3
dec
mov
test
xacquire
pop
div
outsl
add
adc
push
loope
add
dec
sub
sbb
cmpsl
pop
ja
push
sbb
out
ss
and
inc
arpl
jo
aam
je
mov
flds
in
mov
xchg
outsb
ja
add
cmp
mov
pushf
lret
dec
pop
cmp
xchg
pushf
icebp
mov
mov
xor
xchg
jecxz
cli
lret
jge
sub
lods
inc
push
cs
cltd
mov
sub
lods
pop
cmp
test
push
or
jb
push
dec
xor
shll
in
scas
mov
in
aam
lret
int3
lea
incb
or
loope
mov
pop
mov
add
jae
mov
pop
cmc
rcll
jnp
push
das
outsl
lahf
int
dec
sub
inc
repz
cmc
mov
xor
test
jle
cmc
xor
xchg
pop
test
jp
jns
pop
inc
inc
nop
pop
dec
dec
xchg
imul
mov
xchg
sub
imul
ljmp
out
inc
cmp
cmpl
add
and
lahf
aam
mov
testb
adc
jmp
pop
dec
inc
pusha
fsubs
xor
call
js
movsb
aas
sub
dec
mov
jge
mov
add
pop
dec
xchg
enter
paddusw
inc
les
push
cld
jecxz
mov
xor
popa
and
sub
pop
mov
adc
inc
jae
jmp
push
xor
scas
hlt
mov
incl
stos
outsb
test
sub
lods
imull
xor
mov
inc
popf
xor
lret
hlt
je
nop
xor
sbb
aad
mov
mov
inc
leave
inc
mov
andb
xchg
hlt
inc
arpl
pop
rorl
mov
jg
mov
pop
mulb
lcall
jnp
mov
or
pop
cli
pusha
push
scas
push
adc
cmp
mov
add
cli
cmp
callw
jae
stos
cmp
mov
sbb
mov
jmp
sbb
cmp
dec
pop
ret
cli
push
cmp
fsubrl
lahf
sbb
xchg
movl
xor
sub
mov
das
push
test
shlb
insb
std
ss
push
hlt
loopne
and
int
out
bound
cmpsb
cld
inc
xchg
sub
ret
pusha
mov
jge
inc
or
xor
push
sbb
push
fwait
outsb
jmp
fildl
jns
xchg
adc
xchg
xor
gs
dec
icebp
mov
test
inc
cmpl
popa
cmp
fcmovbe
sarl
cltd
xchg
cmp
call
inc
daa
incl
ss
add
adc
or
test
out
mov
adc
mov
insb
push
dec
mull
cmp
rcrl
and
mov
cwtl
add
shlb
xchg
loop
push
mov
ror
insb
test
call
cli
loop
test
sub
fdivp
sub
mov
and
xchg
ja
mov
mov
xchg
jg
mov
sbb
xchg
dec
lea
push
outsl
cmp
clc
iret
ljmp
pushf
pop
ss
pop
aas
icebp
xchg
jno
insl
loopne
and
sub
pusha
stc
push
mov
jns
pusha
pop
les
mov
cmc
cmpsb
insb
sbb
repnz
out
fldcw
sbb
cs
frstor
jnp
jecxz
or
cmpsb
inc
pop
mov
ficomps
ja
xchg
jb
sbb
inc
addb
mov
mov
jecxz
add
or
cld
call
testl
les
xor
lcall
rclb
imul
movb
out
fcomi
xchg
negl
xor
clc
inc
push
jno
fdivs
fimuls
push
jno
mov
adc
xlat
test
and
aas
sbb
and
std
mov
je
leave
adc
in
les
stos
ljmp
mov
mov
cwtl
fimull
ret
sub
scas
into
in
dec
inc
dec
icebp
jo
arpl
fdivp
and
insl
out
mov
rclb
cs
push
subl
adc
mov
insl
xor
stos
aaa
lods
xor
inc
cltd
pop
subl
roll
imul
jge
mov
fisttpl
fmull
shlb
aas
xor
mov
xchg
pop
outsl
outsb
aas
inc
cmpsl
ljmp
insl
data16
out
fiaddl
lea
cmpb
mov
mov
shll
xor
and
mov
pop
sbb
xlat
sbb
sbb
jg
xchg
out
cmp
addl
sub
js
sbb
scas
pandn
add
scas
popa
daa
mov
ds
test
jo,pn
mov
out
aam
cmp
push
ror
ficomps
mov
enter
aaa
shlb
dec
gs
and
leave
push
lock
insl
mov
sbb
ljmp
xor
mov
add
lods
in
sbb
aas
xor
lock
push
push
jno
popf
sub
sti
sub
cli
loop
mov
sub
push
mov
clc
mov
mov
xorb
mov
sbb
cmp
incb
sub
dec
jecxz
mov
jecxz
xor
inc
ret
xor
xchg
test
scas
pusha
xchg
dec
repz
fiaddl
mov
out
adc
xlat
shl
es
add
add
cmc
lcall
sahf
mov
adc
ret
cmp
xchg
loopne
mov
inc
mov
xor
icebp
dec
movsb
aam
sub
push
push
sbb
lods
dec
scas
out
pop
or
popf
mov
int
jne
pop
insb
mov
imul
in
test
ficoml
pop
aas
or
sbb
xor
push
mov
mov
daa
mov
jge
es
mov
faddl
pop
mov
mov
movsl
stos
fstps
ret
call
xchg
leave
stos
and
push
leave
ret
aas
xchg
in
bswap
and
sbb
add
push
dec
push
cmpsb
fs
inc
pop
hlt
out
add
cmc
cltd
outsb
pop
cmc
push
les
inc
out
mov
cmp
cmp
lods
jmp
loop
pop
mov
add
aaa
dec
dec
xor
sbb
test
cmp
push
in
or
dec
stos
lock
mov
sub
dec
lds
or
push
xor
mov
lret
dec
or
pop
jle
int3
sbb
out
test
lds
ret
or
lret
cltd
cmc
lock
mov
mov
push
or
int3
into
cmp
imul
mov
or
repnz
xchg
xor
or
adcb
lahf
cmc
ljmp
jo
outsl
subb
adc
inc
xor
mov
push
test
bound
pop
sub
lcall
jae
inc
cmp
js
and
mov
pop
mov
lds
cmp
xor
jge
out
in
test
or
cmpl
arpl
pop
mov
addr16
lret
xor
mov
dec
push
jne
das
mov
lds
idivb
mov
adc
fmuls
loop
test
das
lods
sbb
mov
jo
push
xchg
dec
inc
ja
push
into
ficomps
ja
cmp
dec
inc
mov
ret
lods
sbb
dec
xlat
xchg
mov
adc
scas
jg
out
in
push
aas
mov
mov
sbbl
lods
mov
xor
ss
pop
jp
add
push
jo
shrb
repz
lret
test
nop
jle
and
call
mov
daa
pop
inc
add
cmp
cmp
test
les
incb
loop
aaa
cmp
cmpsl
xchg
mov
jnp
out
xor
stc
imul
out
popa
leave
scas
jmp
cmp
clc
xchg
mov
mov
push
adc
shll
or
pop
add
lds
jmp
insl
sbb
fldcw
mov
sbb
xchg
pop
mov
imul
icebp
repnz
test
das
daa
loope
mov
xor
add
sbb
mov
andl
ds
adc
outsl
xor
cld
xor
gs
cld
push
pop
mov
and
xchg
leave
imull
mov
cltd
fwait
ljmp
dec
pushl
popa
pop
sub
mov
shl
mov
in
sub
jnp
mov
cltd
pusha
mov
ljmp
sti
sub
lcall
pop
imul
push
xor
roll
in
rcrl
xor
jo
inc
pop
mov
std
mov
adc
stos
imul
sub
and
xor
mov
adc
add
cld
mov
loopne
sarb
adc
sbb
or
jp
xchg
loop
aas
ftst
fidivrl
dec
jno
outsl
adc
test
xchg
jo
pop
jge
mov
jl
sbbl
popa
aam
insl
jge
pop
mov
push
or
inc
enter
sbb
je
mov
add
out
cmp
add
mov
dec
std
fmulp
or
stos
ffree
pop
mov
fldt
pop
stos
pop
pop
idivb
out
loopne
pop
sbb
push
lea
addr16
mov
push
rclb
jno
mov
movsb
sub
stos
pusha
test
aad
je
aad
jno
inc
stc
mov
mov
inc
movsl
mov
pop
fstpl
clc
mov
ret
pusha
xchg
lahf
mov
aad
dec
jb
rcll
into
pusha
or
out
sub
roll
pushf
inc
push
stos
mov
cmpl
negl
mov
xchg
or
inc
pop
pusha
adc
push
inc
dec
fcmovnu
rcrl
xor
mov
sbb
movsb
xor
shrl
popf
mov
jmp
bts
sub
ret
xor
scas
sbb
pop
add
in
push
xor
lds
pop
insb
in
mov
imul
mulb
fisubrs
jg
mov
movsb
cmp
sbb
dec
ret
jnp
mov
cmp
dec
xchg
arpl
pop
push
outsl
popa
mov
scas
test
popf
push
jle
fistl
shlb
or
cmp
jbe
or
sbbl
aas
stc
ds
cmp
xor
xchg
mov
stos
lret
jno
jp
aaa
gs
aad
mov
scas
js
dec
mov
pushf
ror
das
jmp
xor
rcr
cli
in
xchg
dec
push
mov
mov
dec
leave
or
adc
shlb
aas
out
lds
mov
sahf
enter
loope
and
xor
stos
adc
shl
jo
hlt
popa
mov
fnstsw
fldt
bound
cmp
imul
test
mov
cmp
mov
sub
fs
ret
stos
lock
ja
cmc
cmpsb
in
data16
add
bound
nop
and
lds
inc
inc
sub
repnz
and
or
pop
ret
jge
pop
sbb
testl
in
sbb
aam
push
cli
add
aam
cmp
stos
inc
push
test
cmc
adc
dec
pop
sub
imul
fwait
and
mov
lret
imul
mov
ret
lret
leave
or
dec
cmp
mov
push
mov
shrb
std
insb
lahf
fildll
mov
sbb
mov
aam
fwait
add
iret
lods
mov
jmp
ljmp
icebp
pop
lcall
popf
sbb
ret
sub
cmpsl
xor
push
testl
xlat
adc
adc
ret
mov
mov
je
jle
ror
call
xchg
xchg
dec
mov
and
arpl
inc
add
movsb
lea
add
outsl
stos
mov
std
or
inc
filds
loop
inc
add
sub
inc
pushl
push
insb
dec
xlat
jb
mov
dec
ja
fists
or
ss
xor
mov
mov
mov
and
dec
outsl
push
pop
inc
pop
jl
jp
popl
mov
aam
sbb
adc
gs
inc
pop
jo
fwait
adc
aad
cmc
inc
adcb
xor
sbb
faddp
in
subl
jae
pop
or
sub
jae
enter
push
xchg
cld
cmp
mov
popf
rolb
xor
cmp
xorb
push
sahf
pop
sub
cmpb
dec
xchg
mov
cld
sti
inc
shll
pusha
push
lret
out
movsl
lret
sub
outsl
out
sarb
sbb
repz
sub
xchg
mov
jb
pushf
and
mov
jmp
lds
cmp
push
inc
or
loop
sbb
lods
jecxz
pop
xchg
rol
add
addl
cld
or
sbb
aaa
sub
add
mov
gs
jne
sarl
jne
jnp
fucomp
stos
mov
pop
test
inc
push
addr16
clc
inc
or
popa
sbb
aaa
pop
add
lods
cwtl
in
cld
add
cs
or
leave
mov
imul
bound
in
insl
mov
push
daa
mov
in
cli
ljmp
xorl
cmp
pop
rcll
or
mov
stos
jmp
cmp
push
leave
sar
mov
sbb
cmp
push
cmp
xchg
movsb
insl
nop
or
inc
call
add
xchg
out
push
pop
in
jbe
clc
cmp
xlat
mov
or
inc
push
loop
test
fsubl
addr16
dec
pop
jne
adc
aas
jg
sub
adc
adc
or
and
dec
or
cmpsl
inc
loopne
pop
aad
cmc
push
mov
mov
or
in
lahf
arpl
push
mov
add
daa
inc
push
movsb
mov
cmpsb
aas
pop
xor
in
idiv
cmp
fbld
out
mov
lret
pop
xchg
rorl
cs
arpl
outsl
add
popf
sti
push
mov
mov
sbb
or
jbe
mov
aam
or
mov
rcrl
and
aas
push
sbb
out
push
jecxz
push
mov
xor
cmp
dec
icebp
ja
leave
jg
nop
cmpsl
mov
jecxz
jo
fadd
or
insl
and
pop
in
jns
xor
xor
adc
xor
adc
mov
push
sbb
jmp
out
cwtl
and
je
cld
lret
mov
frstor
int3
outsb
push
cmp
jg
inc
sub
mov
sahf
xchg
fidivl
pop
ret
adc
mov
mov
lods
push
fsubl
test
cld
mov
jle
call
loopne
xor
addr16
and
aam
sbb
adc
push
ficomps
jge
pop
mov
iret
popa
xor
add
cmp
sti
push
in
dec
jecxz
mov
push
xor
fisttpll
adc
in
xchg
and
cmp
cmpb
cmp
mov
mov
mov
xchg
popf
pop
mov
loopne
shll
rolb
lods
int3
jecxz
loop
xchg
xlat
mov
ret
lahf
lahf
jns
data16
cmp
jns
cmpsb
mov
out
sub
and
loop
jl
cmp
and
or
int3
mov
pusha
daa
lds
xchg
negl
mov
js
inc
adc
push
adc
jmp
and
inc
xchg
pusha
movb
jle
cmp
mov
movsb
cltd
xor
push
pop
and
cs
je
jb
out
cs
ljmp
mov
sbb
mov
or
roll
fstl
mov
dec
aam
outsb
sub
xlat
das
push
in
repz
or
mov
out
push
jo
fcoms
enter
loopne
adc
hlt
sub
push
mov
lret
das
lcall
stos
in
cmp
cmp
and
pop
rorl
push
mov
and
mull
inc
rcrl
inc
inc
pop
call
movsb
lahf
lods
pop
xchg
adc
or
enter
and
push
clc
xchg
xor
aam
aas
in
jo
lea
xchg
aaa
add
push
ret
mov
jo
mov
xchg
call
lcall
scas
mov
and
ja
jae
cmp
mov
fdivp
xor
jge
sub
clc
xchg
cs
dec
repz
mov
outsb
or
pop
or
dec
mov
add
inc
push
pop
pop
push
mov
aam
inc
iret
in
jae
stos
sahf
fucomp
arpl
pop
outsb
xor
jge
jbe
mulb
test
add
xchg
mov
mov
ficoml
cli
and
push
addr16
jg
mov
mov
aas
fwait
shrl
or
sbb
sbb
fists
xor
or
mov
lahf
mov
jo
jl
lods
pop
add
xor
xchg
lret
cld
pop
xchg
mov
inc
out
push
mov
stc
push
cmpsl
lret
and
sub
mov
insb
mov
dec
test
fdivl
stc
mov
adc
int3
stos
xchg
pop
out
std
dec
cmp
sbb
xor
push
add
inc
sbb
mov
jmp
in
adcl
adc
mov
repnz
and
jae
pushf
test
mov
push
sahf
push
shll
sub
jg
dec
jge
jge
xor
sahf
jg
lock
cmc
adc
sbbl
mov
adc
pop
in
pop
in
mov
lock
movsb
cltd
cmp
pop
or
jl
inc
pop
push
mov
repnz
cmpsl
sub
pop
push
sub
jno
dec
aam
push
dec
movsb
lds
and
adc
dec
xchg
or
outsl
push
sub
mov
aam
pop
xor
pop
inc
shll
leave
pop
test
xor
push
outsl
repz
fistpl
dec
notb
js
xor
test
mov
mov
in
repz
sbb
add
mov
call
cmc
mov
push
lcall
aad
sbb
ja
push
pop
orl
push
icebp
xchg
push
ds
sub
pop
pusha
lret
test
sbbb
scas
in
push
push
pop
mov
leave
sbb
popa
or
pushf
push
cltd
sbb
out
push
gs
out
imul
nop
fucomi
and
aaa
pop
inc
cmpsl
mov
xchg
popf
cld
je
loop
cmp
sub
pop
add
push
pop
gs
jg
jo
movsb
test
jge
sub
xor
sbb
pop
push
insb
pop
or
call
cltd
gs
out
mov
jne
push
int
in
or
mov
popa
mov
xor
in
stos
ja
cld
out
and
std
xchg
in
mov
lcall
stc
test
in
sbb
add
add
mov
mov
or
orb
jnp
lods
mov
jae
xchg
lret
push
bnd
js
cld
repz
jecxz
in
cs
cld
inc
sub
xchg
adc
std
call
mov
je
in
andb
les
mov
mov
leave
add
iret
lods
fiadds
in
lret
and
and
lcall
inc
push
lret
popf
ja
push
sub
cmpsb
xor
jae
sbb
sub
test
cmp
das
and
or
cmp
lods
cmp
dec
xchg
or
pop
js
lock
movsb
cltd
imul
data16
fdivl
arpl
sbb
cmp
sub
jo
add
mov
stos
arpl
lods
jp
sbb
adc
rcrl
xor
xor
push
xchg
jge
add
or
pop
jl
cld
sbb
and
mov
adc
adc
pusha
jecxz
lret
xchg
arpl
lods
and
jecxz
clc
sbb
or
aas
and
lods
mov
lahf
lock
pop
inc
icebp
cmp
push
imul
lret
mov
cmc
adc
gs
gs
dec
std
fldcw
je
xlat
cltd
mov
xor
andl
and
jns
enter
shlb
outsl
mov
cltd
push
loope
icebp
mov
dec
mov
xchg
push
dec
lret
xchg
add
mov
ljmp
mov
decb
in
xorb
dec
cmp
int
xor
push
in
push
cld
daa
xor
xchg
prefetch
jmp
pop
and
pop
sbbl
rorb
bound
stos
inc
sub
insb
push
xchg
int
aaa
pop
in
mov
jne
sbb
sbb
data16
outsb
fcmovnb
jmp
and
bound
push
inc
push
jae
pusha
adc
lods
xor
jecxz
mov
movsl
jne
imul
scas
cmp
lea
xchg
lods
inc
mov
repnz
inc
sub
or
scas
cmc
sbb
mov
cmp
loop
lods
movsl
fistl
xchg
js
addl
xchg
or
jmp
pop
or
popa
lods
jne
clc
xor
jg
icebp
mov
ret
bound
imul
cmpsl
ss
mov
jo
repz
loope
lcall
mov
push
mov
outsb
adc
daa
loop
popa
stos
mov
push
aam
mov
dec
sarb
and
mov
in
fxam
lods
cwtl
push
cld
mov
jae
inc
xchg
aas
push
lahf
add
mov
daa
insb
sahf
xchg
fldl
push
sub
cmc
xchg
push
insb
fsubrl
outsb
pop
cmc
f2xm1
mov
mov
adc
fsubs
popa
add
and
out
stc
jns
bound
xor
or
outsl
push
xor
sahf
pop
mov
and
in
and
fcomps
jnp
test
test
mov
jge
std
inc
sub
mov
adc
jmp
shlb
repnz
and
lea
xor
pop
rolb
pop
lock
out
jbe
cltd
nop
push
dec
shlb
ret
dec
lea
out
cltd
daa
or
and
pop
shlb
push
dec
jl
jg
dec
aam
cmp
loopne
fsubr
sbb
cmp
pop
out
loop
push
and
movsb
aas
sub
pusha
cltd
xor
mov
jne
in
outsl
cmp
adc
dec
jle
rcl
shr
imul
xchg
mov
and
adc
pusha
jbe
jl
adc
add
xchg
pop
mov
add
xor
inc
test
rcll
rcrl
fildll
add
add
xchg
into
push
lret
pop
mov
pop
ds
stos
mov
testb
dec
push
gs
cmp
xlat
jbe
movsb
fisubrs
jle
fildl
rcrl
jno
ja
sub
or
fs
test
cmp
outsb
js
adcb
pop
jg
dec
clc
imul
jl
mov
xlat
aaa
add
push
dec
xlat
adc
lds
adc
gs
add
and
jle
lods
bound
bound
push
sub
scas
push
jne
add
sub
mov
mov
mov
add
inc
and
cmp
pop
andl
push
or
jl
cmp
dec
inc
das
xchg
iret
clc
or
sbb
pop
xorl
and
mov
and
lea
push
dec
push
dec
popa
adc
jns
nop
in
fldt
in
push
stos
push
jne
call
stos
sahf
jne
mov
cmp
pop
test
sbb
push
cmp
push
adc
lcall
cmc
pop
push
ret
mov
xchg
mov
repnz
cmp
imul
jne
dec
lret
stos
add
jbe
loope
int3
jnp
insl
shll
mov
enter
push
sbb
rcll
mov
jp
fidivrs
lods
push
out
inc
mov
xchg
out
mov
pushf
xor
leave
jge
rorl
fcomi
dec
xadd
and
push
or
xchg
jnp
mov
jbe
mov
adc
dec
sti
ror
and
out
xchg
int
stc
xor
mov
sbb
push
mov
pop
ficoml
pop
add
pop
das
mov
mov
hlt
xchg
jbe
std
dec
test
je
bound
call
or
cmp
hlt
mov
filds
leave
fbld
repz
and
test
subb
aam
mov
jle
icebp
sub
out
xchg
pop
je
out
push
rolb
and
jle
mov
adc
int3
pop
std
mov
push
mov
rclb
sub
push
pop
jge
sbb
mov
dec
fsubs
sbb
xchg
scas
inc
ds
mov
dec
icebp
mov
push
sub
jmp
orl
pop
cmp
adc
cs
mov
mov
sti
lods
sub
lds
lret
sahf
and
push
sub
test
sbb
ljmp
cmp
cmpsl
pushf
das
mov
and
jmp
mov
adc
pushf
pop
xor
aaa
scas
aaa
or
lods
mov
clc
iret
outsb
or
imul
ja
into
js
dec
shll
ja
sbb
rcr
sbb
out
lock
push
add
fucomp
sbb
jmp
and
xor
mov
outsb
push
dec
bound
je
pop
push
fidivrl
mov
mov
mov
jnp
daa
push
clc
test
cmp
add
or
adc
lret
gs
aaa
out
roll
outsb
jmp
loop
loopne
out
mov
pop
ds
dec
fcom
iret
in
mov
movsl
dec
sub
jns
push
adc
inc
add
aad
lods
lret
jmp
xchg
das
inc
mov
dec
pop
push
jae
pop
mov
mov
lcall
sbb
dec
push
stos
ljmp
dec
sub
cld
jb
mov
sbb
add
test
adc
popa
xlat
in
rcrl
dec
push
imul
pop
sub
out
and
push
dec
add
inc
adc
and
imul
test
sub
dec
inc
fdivrl
sub
and
push
adc
mov
lahf
sbb
ljmp
jnp
jo
dec
rolb
bt
sub
into
inc
lret
hlt
cwtl
xor
or
sahf
dec
push
das
loop
int3
dec
dec
or
xor
scas
mov
add
scas
dec
stos
sub
mov
bound
movsb
and
stos
fnstcw
aaa
popf
or
into
rorl
sbb
mov
jmp
mov
xchg
pop
js
mov
popa
cmp
cmpsl
mov
stc
dec
mov
inc
shll
xchg
add
or
ds
jge
push
lds
pop
fdivrs
mov
xchg
xchg
or
out
cmp
mov
mov
jae
jnp
sub
js
std
repz
in
cmpsl
sub
and
or
lds
mov
ds
scas
mov
cld
inc
sub
mov
dec
xchg
add
mov
mov
test
pop
scas
pop
cmp
lock
push
push
xlat
repz
inc
mov
xor
mov
fldt
xor
mov
das
inc
icebp
into
cld
pop
mov
cmp
xchg
mov
add
addl
sbb
add
mov
fnstenv
pop
xchg
out
movsl
sbb
mov
mov
shrb
imul
call
cmp
pop
jae
repz
sbb
mov
mov
out
cmp
add
imul
pop
imul
aaa
stos
add
mov
dec
pop
jno
mov
lock
and
mov
push
sub
je
or
dec
lret
stos
xor
jne
int3
test
orl
mov
mov
and
and
lea
pop
xchg
push
loope
cmp
sti
push
shlb
sub
push
imul
pop
xchg
add
popf
aam
mov
sub
in
leave
jmp
jnp
push
xchg
in
mov
movsb
repnz
jno
call
sub
sahf
mov
adc
popf
sub
mov
pop
jmp
sti
xor
mov
adc
push
std
xchg
xchg
int3
xor
in
cltd
test
fxch
nop
dec
shr
and
xchg
mov
push
jle
jmp
jb
outsb
adc
cmp
ficoml
imul
push
mov
cmp
push
sub
addr16
jno
mov
mov
jo
test
lock
aam
enter
addb
adc
xchg
roll
sub
loope
fistps
xlat
out
sbb
mov
jb
nop
imul
rcrb
fbstp
dec
push
aas
es
repnz
xchg
rcrb
sub
sbb
xlat
out
dec
nop
mov
pop
rcr
arpl
jmp
in
aam
sub
mov
cli
adc
sub
ret
dec
aas
fbld
icebp
notb
adc
sbb
jnp
mov
nop
inc
lcall
test
aam
jg
cmp
je
xchg
hlt
xchg
subl
xor
mov
lahf
les
xlat
hlt
bswap
jbe
bound
xor
in
mov
cmc
fisubl
out
out
and
xchg
dec
add
pop
jge
subl
pop
push
ret
out
hlt
mov
fildll
shlb
cmpsl
arpl
pop
or
clc
ss
ds
xchg
cmp
jbe
fadds
arpl
dec
testb
rcll
mulb
mov
jnp
adc
pop
dec
jne
or
decl
xchg
call
or
scas
and
add
pop
rorb
mov
xor
popf
sub
int3
aaa
out
data16
icebp
std
xor
push
insb
push
je
push
ss
mov
pop
lods
jl
cmp
scas
mov
scas
add
cmc
aaa
js
scas
insb
jae
add
or
cmp
shlb
fbld
or
jl
scas
adc
pop
cmp
dec
ljmp
test
stos
jb
cmpsb
cwtl
rol
scas
jmp
cmp
sahf
hlt
clc
rcll
xchg
mov
pop
push
data16
fstps
adc
jecxz
and
and
stc
and
cli
mov
aad
enter
fdivs
jno
dec
mov
or
lret
test
pusha
scas
add
push
pop
inc
dec
lcall
icebp
ja
xchg
out
add
jmp
loop
orl
stos
loope
enter
adc
lcall
jnp
int
shlb
stc
js
dec
adc
inc
mov
push
rorb
jmp
mov
fwait
xor
jmp
jne
or
cmc
test
pop
and
lret
sbb
out
xchg
jecxz
jmp
daa
add
les
mov
aam
loop
fdivl
dec
imul
push
add
insl
cwtl
cltd
push
inc
leave
add
outsb
ficompl
iret
stc
cmp
mov
push
incb
fxam
push
cmpsb
dec
xchg
pop
mov
sub
pop
hlt
push
push
ret
inc
pop
xlat
pop
jne
stos
add
arpl
call
jp
add
adc
pushf
mov
push
in
repz
or
or
xchg
outsl
xor
pop
dec
aam
enter
adc
adc
jns
pushf
ja
outsb
xlat
lcall
and
insl
adc
fs
adc
cmp
or
mov
push
push
push
xchg
inc
pop
pop
push
fidivl
fdivr
lea
mov
and
cmpsl
mov
and
loopne
sbb
arpl
adcl
imul
mov
push
push
shrb
xchg
in
sub
xor
pusha
push
lea
cmpsb
lea
aaa
stc
in
xchg
inc
adc
addb
repnz
scas
loope
lcall
adc
mov
push
push
arpl
out
pop
push
in
xchg
ss
or
and
pop
mov
cmpsl
lea
into
rcrb
dec
fbld
ja
jae
sarb
mov
ficomps
sahf
push
lea
jp
in
js
adc
jne
xor
mov
cmc
mov
jle
mov
xor
sub
shl
jle
inc
push
ret
outsb
popa
add
sub
mov
push
iret
xchg
jne
lods
stc
pushf
daa
xor
repnz
adc
arpl
pop
pop
inc
in
fs
inc
mov
or
push
mov
addr16
imul
ja
shl
inc
dec
test
test
xchg
insl
and
insl
dec
adc
inc
mov
push
iret
sub
jl,pn
les
inc
pop
sub
mov
xor
cmc
xchg
mov
in
aas
push
movaps
fbld
push
push
or
xchg
ret
cmp
aaa
push
aas
fwait
cli
xchg
loope
shr
jge
mov
sub
ds
imul
cmpsl
scas
call
mov
gs
sbb
cmpsl
xor
xchg
je
mov
and
mov
xchg
and
cmc
sarb
lret
jb
lahf
dec
xchg
sbb
pop
insl
adc
and
aas
jp
pop
cmp
int
xchg
jmp
mov
js
pusha
mov
cld
mov
out
dec
in
mov
mov
mov
pop
stc
and
cmp
xchg
xchg
fimuls
jns
gs
enter
nop
lods
jmp
adc
mov
xor
pop
inc
xor
insb
loope
out
add
pushf
es
mov
add
push
mov
fsubrl
mov
cmp
test
pop
scas
rcrb
jno
pop
sahf
sbb
jo
ss
or
xchg
pop
leave
jo
ja
mov
std
or
push
aad
leave
outsb
sbb
andb
inc
pusha
xchg
jl
pushfw
movsb
sbb
outsb
adc
xchg
imul
ljmp
decb
or
ss
push
push
mov
mov
push
push
lret
mov
std
fwait
jnp
push
scas
pushl
fldl
add
push
jbe
out
jno
inc
pop
iret
mov
aad
bound
sub
xlat
dec
lock
lods
fucom
xor
xchg
aam
xchg
in
and
add
sbb
inc
sub
jns
mov
rcl
andb
adc
vmwrite
int
or
repz
mov
enter
insl
sbb
test
xor
out
add
jns
cltd
mov
jmp
xchg
pop
or
cmp
jno
push
lea
adc
in
sub
in
sti
negl
xorb
xor
js
xor
pushf
movsb
push
push
movnti
sbb
in
cmpsl
adc
loop
test
mov
les
pop
mov
divl
cmp
cltd
sbb
ficoml
aad
fsubp
aaa
adc
packssdw
loope,pn
pop
daa
mov
pmulhuw
jecxz
push
jp
fldt
xchg
je
cmp
cmp
jl
mov
mov
adc
int
xchg
mov
mov
test
push
pop
int
inc
ds
pop
xchg
mov
dec
bound
cmp
adc
sub
movsb
ror
movsb
push
test
xlat
mov
in
xor
cmp
adc
cmc
xor
mov
in
mov
lds
push
jecxz
adc
xchg
cmpsb
jp
lock
xlat
add
cwtl
rcrl
int3
aad
mov
and
or
fwait
inc
in
outsb
xor
jg
xchg
ss
push
cmp
sub
xchg
roll
lret
fcmovne
aas
test
adc
push
popf
mov
mov
enter
push
loopne
ds
pop
xchg
dec
sahf
lret
sub
mov
sbb
jo
add
sti
and
fiaddl
lret
les
jl
sbb
jbe
cltd
xchg
rolb
fwait
mov
in
fstl
jg
stos
std
icebp
adc
push
xchg
sbb
test
lods
ret
inc
outsb
xchg
push
je
mov
xchg
jmp
je
sub
movsl
and
mov
mov
lods
add
or
dec
cltd
mov
mov
clc
push
and
in
mov
imul
xchg
jb
pop
jae
out
rcl
das
addr16
push
xchg
or
insb
ret
add
fsub
lds
dec
lock
and
cmp
jmp
xor
sbb
mov
sub
movsb
xor
push
xchg
or
sbb
jno
mov
mov
popf
nop
inc
mov
pop
jbe
mov
mov
mov
xchg
pop
lods
repnz
mov
cli
xor
mov
es
pop
xor
adc
mov
fdivs
xor
push
insl
les
inc
xchg
jmp
sub
les
dec
imul
jmp
add
and
mov
xor
mov
and
je
xchg
mov
mov
inc
ja
sbb
fistpll
jbe
adc
or
cmp
dec
jg
jae
icebp
xor
push
mov
and
cmp
daa
inc
push
push
jne
scas
inc
mov
out
dec
addr16
push
push
mov
ret
adc
ret
xor
shll
fbld
fucom
lret
popf
js
adc
adc
scas
pop
mov
aas
mov
dec
pop
int
fdecstp
in
sub
out
pushf
jo
out
fstpt
mov
nop
int3
sbb
mov
mov
inc
imul
inc
scas
stos
movlps
enter
ret
jp
fstpl
loop
add
int3
test
out
addr16
xor
jb
sub
nop
xchg
or
out
push
movsl
stc
mov
sbb
jo
fucom
mov
out
push
mov
and
pop
jns
dec
mov
cld
add
xchg
enter
mov
sbb
ret
add
xlat
cli
push
mov
ja
xor
fcoms
inc
push
lds
add
subl
inc
jecxz
xor
pcmpeqd
shlb
or
leave
rep
xchg
mov
stos
inc
enter
mov
shll
xor
jo
fdiv
addr16
fst
mov
mov
movsl
jg
sub
push
xchg
xchg
into
jmp
xchg
sub
pop
fildll
dec
stos
scas
nop
and
fwait
push
jne
in
sub
pop
xor
loope
es
negb
push
xlat
rcrb
xor
xor
jns
and
pop
xchg
test
add
arpl
push
stos
out
xor
mov
ret
jle
pop
jns
pop
inc
aad
scas
gs
outsb
jp
inc
mov
add
ret
sub
jmp
inc
push
adc
jp
add
pop
bound
dec
pusha
pop
popa
shl
leave
repnz
and
in
dec
push
mov
inc
jle
outsl
mov
mov
jg
inc
scas
mov
rolb
jl
lahf
add
out
mov
jge
lret
loopne
fstpl
outsw
mov
iret
repnz
inc
mov
out
test
xchg
add
in
and
cmp
movsl
adc
insl
jae
jnp
pushf
dec
cmp
mov
outsb
pop
xchg
jne
mov
inc
fldenv
jle
outsb
into
sbb
mov
add
out
xlat
jne
lret
cmpl
mov
pop
pop
mov
xor
push
je
jnp
sbb
add
insl
mov
inc
scas
psubusw
shll
sbb
sub
inc
sbb
addl
pop
cmp
xchg
push
test
mov
jmp
jg
cld
mov
adc
test
pop
jae
jp
xor
pop
push
es
loop
and
jmp
inc
cmp
ss
es
cltd
push
mov
dec
xor
rol
jo
sub
jg
divl
pop
push
shrb
or
jb
pop
lret
mov
xor
enter
cld
ret
lret
jno
ja
flds
mov
add
pop
fbld
pop
enter
enter
bound
mov
loopne
jle
cmpsl
ficompl
push
mov
push
repnz
cmp
outsl
and
lahf
jns
ljmp
mov
add
int3
call
fldenv
adc
or
aad
lods
into
outsl
mov
ljmp
in
mov
inc
xor
or
push
movsl
ss
mov
mov
cmpsb
xor
fs
imulb
icebp
sbbl
pushl
sbb
or
mov
cwtl
mov
pop
adc
dec
jl
sbb
jno
adc
iret
and
mov
addr16
fwait
daa
mov
xchg
icebp
loope
sbb
dec
dec
data16
mov
inc
subl
or
imull
dec
out
test
mov
jb
cmpsb
cmpsl
jl
pop
and
pop
in
lcall
ret
pusha
add
sub
jbe
pop
icebp
push
cmp
mov
push
pop
jno
leave
fdivrl
jle
mov
dec
loopne
jg
decb
popa
into
aas
rcll
sub
jmp
sbb
dec
and
jne
xor
adc
lods
dec
mov
mov
test
sbb
dec
adcl
jae
pop
cltd
dec
add
int
pop
out
mov
or
sbb
jns
fucomip
mov
shr
sub
fwait
dec
mov
jg
gs
cmp
fwait
mov
mov
gs
cmp
loop
addr16
fcompl
pop
cltd
sti
es
loope
add
andl
xlat
out
jl
xchg
imul
les
das
imul
jns
inc
mov
mov
pop
into
scas
gs
adc
inc
push
arpl
fisttps
add
fists
sub
pop
into
out
subl
mov
sbb
stos
dec
pop
push
or
cmp
aaa
stc
sarl
movsl
xchg
sti
cmpsl
cmp
xor
inc
popf
mov
inc
push
mov
push
mov
and
and
fstl
pop
mov
xchg
xchg
push
test
out
aam
sub
in
or
add
pop
hlt
mov
fnstcw
aaa
push
jb
inc
nop
xor
cmp
mov
dec
imulb
mov
jecxz
jmp
test
pop
jle
xchg
popf
cwtl
pop
cs
sub
add
shll
ds
cmc
ss
gs
fldcw
sti
xchg
push
adc
mov
sbb
pop
or
xor
in
push
dec
andb
adc
gs
adc
pop
repz
popa
dec
pusha
test
xchg
fcomp
fcmovnb
ret
push
sar
aam
clc
lods
add
jbe
mov
pop
sbb
int
inc
inc
xchg
leave
fildll
out
jbe
push
or
mov
add
xor
std
inc
jmp
aas
jae
popf
fs
jl
xchg
sbb
push
dec
mov
and
adc
leave
arpl
cltd
ja,pt
cld
mov
negb
mov
mov
std
inc
lods
and
push
sbb
jbe
xchg
int
xor
sahf
pop
pop
mov
mov
imul
push
test
insb
out
xchg
sub
shll
repz
in
es
cmp
lock
mov
mov
push
lds
out
pop
outsw
lods
fmuls
and
mov
std
mov
inc
sub
repnz
mov
ror
ljmp
shl
pop
adc
dec
test
in
and
sar
addr16
jne
and
and
xor
fimuls
fstl
sbbl
arpl
xchg
pushf
ss
mov
aas
push
and
or
xchg
stc
xchg
sub
and
jmp
je
popa
shlb
outsl
mov
pop
sbbb
lahf
jo
and
rcrb
add
addr16
adc
js
push
push
fcoml
inc
cmpsb
sub
test
rorb
scas
push
pop
and
andl
add
aad
or
xchg
dec
sub
adc
fmul
mov
sbb
shll
ljmp
mov
mov
mov
out
in
jae
pop
mov
push
mov
xchg
fiaddl
mov
fadd
dec
fwait
dec
lock
cmc
mov
and
jnp
scas
push
cmp
sub
or
mov
into
fildll
out
jg
xor
xchg
mov
mov
xchg
mov
stos
fisubrl
scas
sbb
adc
mov
push
dec
ss
aam
push
cmp
xchg
adc
loopne
jbe
sbb
icebp
js
inc
pop
inc
push
or
lret
clc
cmp
cmp
xor
ret
xor
lcall
aam
jl
jbe
addr16
cmp
inc
push
ljmp
jg
imul
cltd
lret
gs
and
movsb
mov
mov
adc
mov
mov
or
mov
outsb
dec
gs
mov
add
jge
sbb
shrb
fwait
jbe
lock
pop
inc
idivl
roll
jbe
fwait
jnp
inc
aad
ja
cltd
mov
bound
jbe
sub
xor
lahf
pop
cmp
sti
stc
andl
dec
and
inc
lret
dec
pop
or
pop
xor
int3
loope
test
out
push
jp
mov
dec
mov
add
push
mov
jmp
fnsave
jp
mov
lods
mov
stc
xor
push
xor
fs
or
imul
and
das
stos
call
call
xchg
jle
xor
push
lds
jne
or
insl
stos
aaa
and
cmpsb
stos
iret
repz
call
pusha
imul
push
or
cmp
test
cmp
imul
sti
mov
lahf
rorl
jne
pusha
cmc
popa
lret
daa
cmc
cmp
add
jne
pop
clc
mov
outsl
jp
mov
mov
inc
jo
inc
adc
test
daa
mov
push
cli
fs
mov
bound
fdivl
mov
sbb
mov
dec
cmp
xchg
andl
sbb
mov
inc
cli
or
jmp
lods
call
mov
subl
push
jb
push
cli
adc
inc
inc
icebp
pop
add
js
mov
adc
cmp
dec
dec
divb
outsb
test
mov
adc
scas
cmp
jmp
pushf
test
mov
add
in
iret
mov
sbb
in
inc
fldl
mov
enter
cld
pop
movups
inc
data16
sbb
idivb
jmp
mov
pop
aas
call
or
les
push
pop
loopne
mov
imul
scas
imull
pop
addr16
dec
xor
leave
xorb
pop
mov
outsb
jge
jno
mov
repz
jecxz
les
xor
mov
fadds
push
jmp
inc
inc
fildll
fwait
scas
shlb
scas
sub
pop
or
mov
lcall
icebp
les
movsl
jecxz
pop
je
mov
and
mov
inc
aam
aad
addr16
mov
adc
mov
inc
add
scas
xchg
xlat
jnp
pop
mov
pop
daa
int
pop
adc
subb
adc
popa
leave
dec
mov
cmp
shll
nop
shlb
mov
pushf
xor
cs
and
outsl
insb
data16
pop
dec
or
mov
sbb
mov
insb
mov
mov
push
dec
jb
dec
xchg
aas
pop
mov
jo
dec
repz
mov
pop
cmc
in
out
push
test
and
pop
mov
movsl
cmc
add
loop
or
movsl
lock
dec
jnp
sarb
lds
js
popf
pop
ja
into
cmp
jl
movsl
inc
mov
mov
fstp
jp
scas
int3
sub
mulb
and
pop
pop
mov
cmc
inc
push
jnp
sub
add
cmp
mov
imul
call
shrb
mov
jle
aas
hlt
loop
mov
js
mov
sub
mov
cmp
push
or
xchg
sbb
repnz
lret
arpl
loop
aas
ss
mov
je
adc
fsubr
mov
push
rol
jge
add
sub
xchg
or
cmc
cmp
jp
insb
jae
push
jno
xchg
fidivrl
xor
scas
lods
mov
adc
and
jnp
std
dec
add
ret
negb
lds
xchg
pop
inc
sbb
mov
mov
in
cmp
hlt
or
sub
mov
cmp
jnp
pop
or
pusha
cmpsl
fildll
lcall
cwtl
dec
pop
in
dec
testb
push
jecxz
inc
adc
fidivrs
mov
lret
jno
jb
ds
fwait
repz
movsb
dec
sbb
iret
fisubrl
add
mov
pusha
repz
imul
adc
in
cld
jg
mov
cwtl
jns
pop
or
pop
jno
repz
adcb
inc
adc
jne
pusha
add
shrl
adc
adc
sub
rorl
mov
pop
lea
insl
pop
jb
clc
or
push
push
inc
cli
xchg
sbb
rolb
xchg
mov
xchg
cmp
lret
scas
cmp
scas
fidivl
lds
push
pusha
inc
pop
adc
jnp
repnz
lock
cmp
mov
pop
fistpll
pop
pushf
mov
cwtl
xchg
xchg
popf
jbe
roll
enter
mov
add
outsb
inc
sub
mov
mov
adcb
pusha
nop
jbe
adc
mov
sbb
inc
jmp
jne
shll
jp
sub
jmp
in
dec
out
and
daa
loop
jns
lods
push
push
rorl
jmp
fwait
xchg
mov
mov
sub
ret
sbb
sar
or
push
and
mov
mov
sbb
xchg
sub
out
int
sub
mov
imul
dec
xchg
mov
test
loop
fistps
fisttpl
push
aam
jns
xchg
hlt
inc
dec
ret
push
mov
insl
insl
sbb
out
jns
adc
push
cltd
enter
cltd
jmp
shrl
into
aad
xchg
jmp
xor
lock
outsl
cmp
cld
mov
xchg
dec
mov
in
imulb
jb
pop
ljmp
pop
sub
cli
mov
or
rolb
adc
and
iret
addr16
nop
daa
mov
jp
fbstp
sub
addr16
mov
dec
pop
hlt
inc
ret
dec
dec
cmp
cwtl
sub
loop
lods
xchg
imul
mov
fwait
add
jecxz
out
sbb
push
mov
aas
or
lods
mov
push
mov
mov
int
pop
add
mov
xor
dec
mov
cmpsb
mov
ljmp
out
repnz
mov
pop
add
mov
aam
sqrtps
mov
xor
addl
je
scas
test
loope
mov
out
fcmovnbe
sub
rcrl
push
loopne
push
and
mov
in
push
cmpsb
dec
xor
lea
xlat
das
mov
hlt
jle
jl
subl
mov
loope
gs
fs
xchg
cli
movb
xor
stos
jae
ret
mov
popl
cmp
lds
sbb
loop
jp
cmp
les
frstor
imul
pusha
sti
clc
and
mov
psrlq
push
and
dec
sub
inc
mov
mov
in
cs
es
popa
popa
jle
iret
sbb
stc
pop
imul
dec
xchg
lods
jmp
stos
fld
or
mov
mov
fdivs
dec
add
pop
stos
mov
ds
sub
xchg
mov
test
or
scas
xchg
icebp
mov
out
inc
andb
dec
push
mov
lods
mov
pop
cli
sahf
xsha1
cmpsb
dec
fnstsw
push
out
cltd
test
test
inc
jnp
ljmp
add
fs
lods
das
imulb
sti
nop
ret
pop
mov
or
inc
and
imul
and
decl
loop
cmpb
pop
cmc
or
loope
dec
cmpsb
xchg
sarb
pop
jg
push
sub
cmpsb
adc
aas
hlt
and
inc
fisttps
mov
pop
and
fmull
push
ss
mov
jne
add
lock
xor
lret
in
push
dec
jle
pusha
ret
jae
cmpsb
xchg
arpl
mov
aas
sbb
pop
arpl
testl
xchg
adc
dec
das
aaa
pop
lcall
in
push
mov
rclb
ljmp
mov
inc
sahf
push
or
out
pop
or
pop
ds
sbb
cmp
xchg
jecxz
mov
jbe
hlt
adc
je
int
jns
mov
lahf
mov
pusha
sub
mov
daa
movsb
dec
xchg
aas
pusha
mov
enter
lds
jb
test
xor
mov
mov
jl
add
test
pop
xor
fwait
inc
decb
leave
mov
movsl
dec
mov
andb
shlb
andb
roll
sbb
popa
pop
orb
aaa
jge
rolb
or
jg
fstl
shrl
sub
sbb
popf
jns
or
ret
stos
int
dec
test
clc
pop
fdivr
and
lods
das
dec
ret
xchg
and
std
jbe
jnp
and
stos
mov
sarl
arpl
pop
xchg
aad
mov
mov
test
adc
add
jecxz
xor
call
in
mov
lods
stos
shll
into
pushf
xchg
inc
mov
fcoms
aaa
rolb
aaa
cld
movsb
pop
pmaxsw
lret
cmp
out
test
pop
neg
or
decb
xchg
insb
push
jno
sarl
pmulhw
push
xchg
inc
std
inc
xchg
add
cltd
ret
stos
jns
sahf
cmp
das
je
je
dec
mov
xorl
in
and
mov
ss
aas
push
cmp
movsb
cwtl
xor
int
jno
dec
dec
divb
mov
cmpsl
jns
in
adc
outsb
in
lret
cmc
mov
adc
mov
add
cmp
push
std
test
dec
pop
js
cli
sarb
ret
fwait
adc
repz
mov
adc
jmp
mov
arpl
fwait
jb
aas
jl
rorb
mov
int
pop
mov
cs
loope
jecxz
das
out
adc
xchg
xor
sub
das
inc
sti
loop
inc
mov
aas
jb
pop
mov
cmp
in
cs
test
push
orb
xor
sub
and
hlt
dec
mov
orl
push
push
test
inc
imull
sbb
cmp
mov
jnp
mov
inc
insl
imul
shlb
xchg
stc
mov
mov
cmpl
aad
insb
jns
adc
push
scas
xor
add
mov
js
mov
lea
dec
in
add
dec
mov
xchg
adc
cltd
add
scas
mov
push
cld
scas
pop
es
scas
fwait
dec
pop
iret
pop
scas
and
aas
aaa
jno
jno
lods
enter
arpl
js
nop
push
stos
xchg
pop
sahf
mov
pop
adc
fcmovbe
scas
push
sbb
xor
nop
insl
mov
pop
enter
add
loop
hlt
int3
or
push
aaa
sub
pop
mov
mov
mov
jl
arpl
push
mov
and
inc
cs
mov
in
xchg
xchg
icebp
imul
int3
push
popa
lcall
divb
fdivs
insb
mov
adc
adcl
lret
and
sbb
xchg
dec
fiaddl
cmpsb
hlt
data16
roll
loope
jo
adc
clc
mov
add
aaa
push
loop
pop
xor
push
add
adc
or
inc
sbb
lock
movsb
xor
jl
mov
mov
aaa
out
cmp
ss
mov
das
add
aam
xor
xor
shr
mov
pop
mov
sbb
cld
leave
mov
fs
stc
addb
repz
pop
mov
addb
je
sarl
js
orb
ds
rcrb
insl
aaa
bts
jecxz
or
shl
jae
mov
mov
adc
push
popa
adc
lods
daa
xchg
mov
add
jecxz
cli
or
cmpsb
mov
outsb
pop
scas
xor
cmc
fs
loope
arpl
jne
ds
js
shl
lds
lea
mov
add
ret
pop
sarl
push
jne
xchg
dec
hlt
xor
test
mov
cs
je
pop
popa
in
loop
and
pushf
stos
daa
clc
or
sbb
jg
or
mov
scas
sbb
imul
ljmp
push
dec
cli
pop
xchg
jmp
pop
xor
das
and
xchg
dec
push
loop
js
or
mov
xor
xchg
jae
mov
xchg
fs
sub
push
push
adcb
aaa
sbb
pop
outsb
cmp
push
pop
and
adc
sub
mov
push
incl
fildl
into
xor
sbbb
test
add
pushf
pop
jno
pop
cli
jno
add
add
jnp
sbb
add
cmc
cs
mov
xor
int
push
imul
jecxz
repz
push
out
popa
sbb
lcall
add
pop
in
xchg
sbb
movsb
pop
orb
and
fmuls
dec
sahf
data16
pop
cmp
and
aad
pop
dec
int3
scas
shlb
adcb
sub
in
mov
add
jg
pop
dec
sbb
sbb
pusha
ret
sub
push
push
xor
out
cltd
pop
dec
insl
out
mov
sbb
cmpsl
and
xor
adc
push
add
call
push
push
sub
cmp
inc
mov
cmc
inc
mov
imul
pushf
mov
test
popa
lods
idiv
mov
dec
add
push
data16
mov
dec
notl
jns
mov
ss
or
push
and
mov
mov
xchg
jae
aam
xor
jno
pop
push
adc
mov
sbb
push
or
xchg
ret
cmc
int
add
jge
movsb
push
imul
lock
sbb
lock
arpl
lcall
bound
aaa
lret
inc
dec
cmpsb
jmp
fmuls
stc
scas
dec
xchg
xor
gs
push
imul
jo
and
xor
clc
sahf
sti
xchg
lret
test
pushf
mov
test
fiadds
cli
into
cli
hlt
in
shll
cltd
mov
enter
dec
inc
ret
incl
adc
jp
pop
lods
ds
push
mov
arpl
leave
int
cmc
or
bound
xchg
or
nop
jl
cli
xchg
jbe
fcoms
fwait
or
scas
pusha
mov
into
sar
jl
mov
adc
out
dec
fwait
lahf
xchg
ja
xor
dec
xor
in
jmp
mov
push
mov
inc
icebp
push
mov
sbb
xchg
pop
fidivrl
add
xor
mov
bnd
cs
shlb
dec
daa
mov
mov
pop
das
dec
dec
jmp
sub
add
or
fmull
lret
shll
cltd
and
pushf
ss
rolb
fsubl
push
aad
pop
dec
mov
fwait
sti
inc
fs
add
inc
arpl
sub
push
cli
dec
lahf
jp
jno
aas
loope
and
aas
dec
test
xchg
and
sahf
mov
lahf
push
inc
dec
xchg
faddl
popf
push
arpl
mov
push
js
pusha
pop
xor
xor
push
mov
fwait
jmp
sti
loope
pusha
jae
fbstp
sbb
mov
jbe
fisubrl
arpl
and
mov
rclb
lock
adc
jno
imul
lods
outsb
movsl
sbb
cmp
xor
mov
pushf
xlat
idiv
bound
data16
sub
pusha
adc
or
cs
mov
ljmp
push
mov
jge
ss
rolb
scas
imul
push
lock
mov
fistpll
imul
mov
jae
lods
adc
add
rcll
jp
adc
push
rcrl
js
or
dec
stos
js
gs
das
into
nop
jne
push
outsb
sbb
in
testb
rorl
addr16
or
les
fimull
sar
fwait
jle
lahf
popf
pop
lret
jge
inc
dec
xor
jno
incl
adc
pop
xor
enter
adc
gs
loop
sub
inc
push
pusha
push
loope
xchg
pusha
push
stc
cmc
enter
jno
test
push
or
cmc
jp
cmpsl
xlat
adc
cmp
aaa
leave
leave
pop
dec
inc
mov
xchg
mov
jns
cwtl
loope
stos
mov
enter
jns
imul
fcompl
imul
aas
inc
fwait
and
je
lock
cmp
ljmp
hlt
inc
sub
fs
call
inc
insl
push
push
jo
push
inc
shll
pop
sbb
xor
int
adc
mov
cltd
shl
mov
cli
in
fmul
cmp
and
adc
dec
popf
test
dec
addr16
iret
lret
lods
aad
rcrb
pop
lcall
movsb
fcomps
testb
sub
sub
mov
dec
push
call
add
fstpl
mov
mov
push
adc
nop
xchg
adc
jg
ret
subl
movsl
aaa
xor
or
shl
xchg
repz
jmp
or
insb
fucom
movl
pushf
lods
test
adc
push
mov
sbb
dec
ja
fldcw
mov
sbb
stc
fsubp
test
push
xchg
mov
in
in
insb
add
sarl
test
adc
sub
xchg
mov
sub
pop
cmpsl
pop
aaa
push
orb
xchg
pusha
in
inc
lcall
dec
or
dec
push
clc
xlat
loopne
push
cltd
sub
scas
aaa
std
xchg
and
xor
les
imul
adc
int
mov
or
fdivs
in
pusha
ds
xchg
cmp
dec
dec
rorl
rorl
sub
push
dec
lods
ret
xchg
dec
fcmove
dec
add
mov
pop
and
pop
imul
lods
ljmp
sub
push
in
lods
stos
repnz
addr16
xor
shrb
stos
fsubp
jne
cmp
movsb
xchg
sub
inc
int
or
cmp
loope
testl
ljmp
jmp
lahf
xchg
push
xor
aam
xor
test
loope
mov
cmpsb
roll
push
add
bound
ljmp
icebp
call
hlt
aas
sbb
addb
into
int3
xchg
idivl
push
or
jne
outsb
inc
cltd
push
dec
jbe
mov
mov
pop
je
mov
pop
pusha
mov
jmp
cmp
js
ffreep
add
fstps
adc
mov
lcall
addr16
outsl
lock
and
jbe
sub
mov
stos
arpl
add
ficomps
iret
scas
mov
mov
aam
and
aaa
adc
adc
mov
jmp
mov
out
add
jne
in
lahf
call
das
outsl
aas
ja
aad
rolb
add
imull
mov
notb
sbb
incb
xor
addr16
xchg
addr16
imul
push
in
ret
insl
adc
inc
cli
loopne
adc
cltd
and
mov
cmp
addl
loope,pn
les
pop
out
in
and
loope
stos
jo
aaa
and
shll
xor
sbb
jl
mov
leave
jb
jnp
cmp
ss
xlat
dec
ret
mov
ljmp
push
aam
fs
adc
or
pusha
dec
pop
popl
out
pop
cwtl
es
les
jb
push
shl
jae
gs
jns
es
retw
cltd
cmc
out
add
inc
ret
loope
dec
adc
fildll
movsb
add
cmp
cmpsb
mov
out
repnz
adc
add
mov
mov
inc
enter
cmpb
int
shlb
test
rcrl
sbb
xor
clc
movsb
xor
push
and
sar
xor
sbb
adc
insl
lahf
dec
leave
sbb
outsb
lcall
scas
adc
inc
jmp
sbb
or
jecxz
sahf
imul
pop
mov
xchg
or
fldl
in
fcmovnu
add
data16
xchg
inc
subl
arpl
lock
or
xchg
sub
aam
dec
das
aam
fisubrs
out
dec
sbb
xchg
in
mov
xor
mov
stc
jnp
xchg
mov
int3
push
pop
xchg
popf
mov
push
orl
xor
outsb
std
push
ret
ficompl
ljmp
mov
cmc
push
inc
ss
sbb
lret
negl
outsl
xchg
repnz
inc
inc
mov
into
ljmp
mov
cmp
das
dec
add
cwtl
mov
cltd
adc
mov
sub
mov
xor
jge
jae
stc
clc
pop
add
lcall
ss
sbbb
mov
sti
and
or
and
dec
or
push
out
pusha
es
psadbw
lcall
pop
adcb
push
mov
bound
daa
dec
adc
xchg
xchg
ret
jae
add
dec
mov
movsb
sbb
sub
xor
mov
sbb
out
jbe
sahf
and
mov
sarb
mov
mov
aam
fsubl
repnz
adc
repnz
fsubrs
mov
push
imul
js
pop
sbb
jns
rcll
je
stos
mov
push
cld
mov
stos
inc
ja
bound
and
jl
jbe
cmp
repnz
pushf
xchg
mov
and
cs
jle
mov
cmp
cmpsl
add
movsb
sbb
pop
movsl
sbb
loopne
mov
cmc
mov
dec
movsl
pop
cmpsl
lods
imull
dec
js
nop
sbb
loope
lret
sbb
jbe
inc
inc
in
cmp
popa
ret
decb
es
mov
mov
test
in
call
mov
pop
jo
loope
aas
pop
fstpl
inc
pop
mov
sbb
test
push
pop
mov
jne
jp
shll
ljmp
push
mov
loopne
or
mov
jb
or
lods
pop
push
mov
jecxz
data16
or
mov
bound
xor
push
cmpsl
jecxz
test
fisttpl
push
sbb
sti
and
rorb
inc
adc
test
scas
inc
lahf
cmp
es
pop
test
fsubrs
inc
pop
repz
iret
cwtl
mov
repnz
jb
rorb
lret
cli
inc
xchg
xor
cld
test
imul
mov
and
or
add
add
push
stos
sub
adc
pop
sbb
popw
inc
jl
pop
cmp
bound
pop
fidivl
mov
jle
insl
xchg
and
push
xor
in
mov
xor
cs
shl
lds
jp
lret
push
out
or
dec
push
test
xchg
mov
push
jle
fsubs
push
repnz
lods
cli
fdivrs
addr16
inc
inc
add
lret
repnz
mov
sti
sbb
out
call
fucomi
jg
xchg
sarl
xor
and
aas
push
dec
or
push
sub
add
ficoml
xchg
adc
mov
lds
sub
bound
mov
cmp
mov
xchg
movsl
data16
in
push
cld
mov
sarb
lea
inc
lods
pop
pop
loopne
scas
stos
jl
in
call
cli
divl
adc
xchg
mov
leave
jbe
xorb
push
dec
adc
sbb
inc
jb
adc
flds
push
inc
sbb
push
nop
out
loop
std
add
sub
mov
test
andb
insl
test
aam
fmull
push
push
in
pop
cmp
dec
popa
add
cmp
test
mov
insl
and
push
jb
lea
cmp
jnp
adc
cmp
pop
ja
adc
sbb
jle
mov
push
leave
dec
cmpsl
movsl
cwtl
adc
mov
jo
pusha
rcll
fwait
hlt
int
fiadds
mov
mov
lahf
mov
sbb
mov
mov
xchg
scas
push
mov
mov
fbstp
scas
inc
pop
xchg
dec
imul
sub
je
inc
cmp
rcll
out
imulb
pushf
clc
or
jecxz
enter
cltd
xor
mov
inc
pop
cmpsl
std
int3
adc
mov
clc
scas
aaa
and
jl
repnz
inc
nop
sub
loopne
cmp
xor
shll
sub
or
xor
inc
jne
int
loop
fstpt
xor
dec
loop
cmpb
adc
sbb
add
shl
repnz
fldcw
sbb
sbb
xor
push
popa
jb
lods
in
hlt
mov
xchg
and
or
sub
mov
outsl
int
iret
or
test
mov
call
testb
add
aam
dec
fs
cmp
test
cwtl
and
mov
jae
or
jle
andl
xchg
pushl
repnz
add
js
lcall
xchg
shll
popa
push
lods
test
mov
add
cmp
xchg
mov
push
and
xchg
loopne
rorl
fisubl
leave
outsl
mov
jg
mov
adc
fldl
nop
xor
push
mov
setge
cli
orb
call
rcrb
sarl
sub
pop
mov
and
cmp
jecxz
daa
cmpsl
enter
sbb
sub
jae
mov
and
mov
ds
ljmp
xor
pusha
pop
mov
call
pop
nop
push
inc
cli
stos
pop
fwait
adc
cltd
dec
xlat
and
fidivrs
aad
bound
adc
xchg
dec
test
incl
lcall
adc
test
adc
scas
dec
daa
mov
mov
enter
jns
daa
int
mov
repz
out
add
lcall
clc
inc
enter
and
mov
xor
pop
icebp
xchg
stos
mov
subl
enter
cmp
bound
mov
les
inc
repnz
jb
and
push
icebp
out
add
les
xor
jl
popa
sub
outsl
pop
and
add
jge
jmp
sub
sbb
nop
mov
mov
stc
jae
aam
dec
and
jo
push
pop
jb
push
push
lcall
sbb
int
imul
je
rclb
mov
ds
insl
setnp
add
cmp
jo
add
mov
fs
stos
fiadds
mov
xchg
aad
std
xchg
sbb
adc
push
xchg
adc
or
mov
cmp
icebp
pop
push
pop
xchg
addr16
mov
hlt
testb
jno
dec
adc
stos
inc
std
cmp
ret
scas
jns
xchg
and
inc
xor
data16
xchg
mov
movsb
in
hlt
xor
mov
jl
mov
mov
pusha
icebp
add
xchg
push
pop
sbb
rcrb
mov
jmp
in
insb
cmp
imul
pop
lock
pop
push
fstps
mov
orb
jae
scas
inc
scas
lods
cmp
dec
inc
sbb
ror
mov
shlb
xchg
xor
sbb
aas
sub
adc
inc
andl
add
jp
lcall
lret
push
ss
sbb
adc
jle
and
sbb
rorb
mov
lahf
inc
movsl
add
leave
loopne
rdpmc
sub
mov
testl
jbe
in
cmp
or
rol
enter
leave
subl
in
xor
stos
sub
scas
jno
xor
std
mov
cmp
add
or
push
lds
mov
push
adc
shr
add
leave
add
lcall
enter
xchg
rcr
idivl
mov
outsb
mov
out
mov
sti
cmp
sub
xchg
push
out
xchg
loope
inc
cmp
js
mov
mov
push
mov
adc
movsl
lcall
and
xor
xchg
add
mov
stos
outsb
mov
pop
rcr
hlt
frstor
addr16
rcrl
fcoms
xchg
cmp
dec
iret
aaa
push
in
cltd
xor
dec
add
bound
sub
pop
push
push
dec
mov
sahf
fs
sbb
test
xor
xchg
sub
subl
imul
fadds
ror
aaa
or
les
cmp
daa
test
mov
jp
shrl
hlt
xor
fwait
cmpsl
jno
fsts
lods
sarb
xchg
dec
rorb
cmpsb
dec
add
xchg
lock
iret
rclb
pop
mov
inc
pop
lcall
mov
shl
loop
int3
mov
pop
and
add
jno
idivb
in
adc
fidivrl
je
cld
mov
push
or
xor
shr
jmp
xchg
xchg
push
in
inc
shrb
mov
andb
fmull
sbb
rorl
std
shll
inc
inc
dec
ja
mov
mov
add
decl
add
icebp
xchg
sbb
adc
xchg
int
jno
les
cmp
adc
and
fnsave
push
or
nop
inc
jmp
inc
push
mov
mov
hlt
roll
int3
dec
add
and
popa
jne
ret
jg
mulb
loop
out
jo
mov
xor
sbb
mov
lods
stos
dec
jmp
and
fwait
xchg
call
mov
xchg
cli
dec
push
fldt
xchg
cld
bnd
pusha
or
mov
inc
shl
ret
push
js
sbb
rorb
loop
mov
into
cmp
cmp
mov
popf
arpl
mov
scas
test
xchg
aam
pop
cmpsb
fs
lcall
lea
xor
jp
xchg
pop
faddl
sbb
pop
push
cmc
mov
adc
push
push
call
ja
add
in
aad
into
cltd
xchg
jecxz
stc
xchg
xchg
xor
cmpsl
testb
lahf
add
push
sub
icebp
sahf
scas
jns
sub
scas
std
cs
std
aad
mov
inc
mov
cmp
mov
inc
out
add
jb
and
push
ljmp
pop
insb
sti
mov
scas
pop
imul
mov
sbb
fs
dec
inc
addl
mov
stos
cmc
mov
cli
cmp
leave
hlt
dec
xor
xchg
ljmp
addr16
std
cmp
inc
xchg
jne
mov
adc
in
ret
pop
test
ljmp
lods
xchg
xchg
pop
cmove
ret
sub
fisubrs
mov
pop
jl
data16
jecxz
js
lret
test
mov
les
sbb
mov
push
in
fdecstp
or
cwtl
sub
popa
lock
lahf
cmp
iret
jns
jnp
dec
cli
inc
and
stos
sbbb
lock
sbb
pop
sbb
mulb
cwtl
mov
adc
notl
jecxz
scas
mov
scas
jbe
xlat
int
and
fistps
cwtl
inc
and
and
movsl
xor
ficompl
nop
jae
jmp
add
pop
scas
push
lods
addps
stos
sub
jl
push
mov
lods
or
incb
inc
les
inc
sub
adcl
add
sub
or
loopne
ja,pn
iret
loop
jno
jo
mov
mov
ror
push
dec
filds
jbe
in
js
call
cmpl
jecxz
and
add
insl
mov
adc
add
push
insb
mov
add
mov
mov
or
pusha
adc
pusha
leave
arpl
xchg
mov
adcb
movsl
mov
xor
in
imul
or
aad
andb
cmp
data16
mov
pop
xchg
mov
xor
mov
xor
xchg
dec
jo
and
pushf
jmp
lock
pop
imul
cmp
or
sub
push
push
sbb
cli
jae
dec
pop
add
aad
mov
andb
imul
inc
cmp
jo
fcomps
mov
dec
add
mov
aaa
xor
std
pop
pop
xchg
sub
inc
ljmp
enter
cmp
cmp
mov
jae
inc
mov
dec
std
inc
js
sbb
jp
outsb
loopne
or
jae
mov
xor
mov
outsb
or
testb
pop
jne
jns
cli
and
cmp
es
pop
mov
dec
inc
outsb
rclb
xor
js
inc
add
je
pop
jle
cmc
sub
sbbl
imul
pop
lea
leave
ss
mov
js
push
movl
data16
or
test
lcall
lds
sbb
mov
je
push
mov
fldcw
test
lea
fidivl
mov
int
in
xor
movsb
ret
js
arpl
mov
cli
repnz
cmp
test
sbbl
mov
mov
cmp
gs
push
js
adc
pop
fucomi
sbb
testl
xor
insl
dec
adcl
dec
in
adc
fsubrs
adc
push
test
push
and
je
out
mov
in
jp
fsts
cmpsl
mov
movsl
fwait
cmpsl
aad
sar
cltd
cmovs
stos
loopne
push
lock
xchg
cmp
push
lea
cwtl
add
jge
sbb
cmc
mov
fisubs
test
jle
pop
xchg
outsb
rclb
xchg
xchg
adc
mov
iret
inc
pusha
push
xchg
js
sarl
lods
daa
aad
jo
repnz
jg
cmc
enter
sub
push
mov
lods
mov
push
imul
fdivs
stos
rorl
mov
mov
push
pop
cmp
test
and
adc
mov
lcall
out
mov
cld
aaa
push
sbb
hlt
into
call
sub
movsl
dec
mov
inc
pop
in
add
insb
xchg
fiaddl
out
test
sbbb
sbb
scas
push
inc
int3
outsl
mov
ficoml
fidivl
sub
aad
push
or
dec
mov
adc
icebp
mov
insl
jecxz
sbb
xlat
cmc
or
les
je
adc
add
fmuls
rol
adc
inc
test
scas
nop
int3
xor
movsl
xchg
data16
ljmp
enter
cmc
or
or
sbb
rcrb
imul
inc
lock
out
es
push
inc
repnz
xor
xor
mov
pop
sub
xchg
loope
jo
lods
pop
iret
push
arpl
shlb
movsb
adc
fstpt
sti
loop
and
cwtl
sub
sti
cld
icebp
dec
xor
inc
jae
clc
push
ljmp
out
sub
ds
push
in
scas
movsb
xchg
cmp
fsubr
das
ja
push
stos
mov
xor
lahf
xchg
in
clc
outsb
and
inc
jl
sarl
mov
jg
inc
nop
push
icebp
popf
or
daa
clc
aaa
icebp
outsb
outsb
sbb
lret
popf
jg
outsb
sub
cmp
cmp
push
push
push
jbe
fbstp
sub
and
frstor
sub
ljmp
sarb
sub
lds
lds
pop
mov
std
popf
call
jnp
jnp
cmc
xchg
cmp
or
dec
dec
mov
sbb
jb
insl
test
adcl
rcrb
nop
mov
fld
pop
jp
repz
lret
dec
loope
xor
or
dec
hlt
sub
xor
mov
sub
fs
aaa
sub
js
ficoms
addr16
adcl
out
mov
ret
push
mov
loope
shll
std
or
adc
cmp
fidivrl
xchg
or
sbb
adc
mov
jns
cmp
pop
push
sbb
add
sbb
rcl
es
cmp
cld
jb
push
sub
pop
stos
rclb
sbb
jle
xor
jnp
fiadds
mov
mov
push
mov
inc
xor
mov
push
jg
mov
std
sbb
out
aas
fsubl
pusha
jno
mov
inc
in
and
into
mov
lcall
push
test
xchg
movsb
pop
pusha
test
rep
pop
jno
loop
mov
fdivr
adc
pop
ja
into
cmp
adc
jmp
push
jo
mov
adc
inc
inc
dec
sub
adc
cltd
aaa
icebp
sahf
clc
add
or
mov
shll
out
out
mov
nop
xchg
push
adc
icebp
jo
sbb
fbstp
ljmp
mov
loope
js
push
mov
lds
loope
test
dec
push
push
cmp
xor
cmpsb
inc
xor
scas
lock
and
dec
jmp
iret
loopne
in
mov
je
ja
cmp
dec
mov
xchg
adc
pop
adc
add
push
lret
and
jo
jae
leave
ficomps
popa
dec
inc
mov
mov
imul
cmpsb
pushl
sub
cmp
orl
sub
sahf
sbb
mov
pop
ss
add
sbb
adc
xorl
and
sarb
ja
push
mov
mov
xchg
mov
inc
jp
aam
mov
popa
xor
aam
loopne
dec
add
call
or
mov
cmpsl
or
lds
test
lods
mov
fsubp
inc
out
outsb
inc
in
out
dec
xor
pop
lret
pop
dec
mov
mov
in
cltd
push
lods
icebp
lcall
push
in
ja
cltd
addr16
push
cltd
loope
mov
jbe
fldl
and
adc
cmp
mov
scas
icebp
xchg
icebp
repnz
mov
and
dec
pop
add
je
xor
mov
int
cmp
fwait
es
lret
aaa
loopne
cmp
sbb
jecxz
cltd
and
xor
shl
fs
je
insb
js
insl
dec
and
mov
jl
or
sarl
jns
mov
in
mov
mov
add
lahf
inc
xchg
cmp
xchg
mul
xchg
nop
cli
int3
xchg
xor
cmp
xor
inc
pop
std
pop
add
push
test
ljmp
pop
mov
jne
xor
test
pop
sar
xor
lods
test
mov
push
js
adc
jp
rcl
push
out
jl
push
adc
insb
rolb
data16
std
test
mov
test
hlt
ret
stos
cli
cmpsb
fldl
ja
bound
in
ret
int
daa
sub
xor
xchg
and
repz
rcrb
mov
in
fldl
pop
xchg
loop
aaa
pop
xchg
mulb
popf
aad
pop
and
inc
jp
sbb
and
into
xchg
lds
test
aaa
loop
xchg
out
xorb
scas
pop
movsl
daa
nop
iret
mov
insl
jmp
adc
mov
leave
sbb
pop
sbb
mov
sbb
mov
stc
sti
shlb
in
and
jnp
fcoms
test
adcb
jne
pop
mov
lcall
cltd
fsubrl
in
jbe
inc
nop
call
repz
aas
test
mov
mov
push
and
cmc
in
popf
mov
cmpl
xor
sub
addr16
jno
lea
jns
arpl
mov
mov
jmp
into
inc
mov
or
inc
out
mov
aaa
mov
fcmovnu
sahf
mov
fisttpll
xchg
push
sub
mov
repz
push
xor
adcb
cmpl
adc
push
gs
cli
js
inc
xchg
add
ret
gs
loope
mov
imul
jne
xchg
inc
punpckhbw
sar
mov
push
push
xchg
call
xchg
movsb
jge
push
js
add
sar
xchg
pop
aas
aas
xchg
les
dec
pop
inc
push
outsl
xchg
fldl
mov
jp
push
jo
xchg
lock
mov
clc
push
andl
or
push
inc
jae
fsubrs
testl
lret
rcrb
jecxz
mov
inc
xchg
fcoml
lock
cwtl
mov
adc
cmp
dec
loopne
add
or
fwait
xchg
fisttps
pop
jecxz
cwtl
mov
rorb
imul
xchg
lock
fwait
insb
adc
push
test
cmc
js
int3
inc
mov
in
push
cmp
decl
sub
sub
stos
inc
lret
std
inc
jp
popf
scas
ss
sarb
and
dec
sub
sbb
ds
push
inc
loop
fs
sbb
xlat
roll
add
int3
bound
dec
ja
fnsave
jne
push
cmp
push
jmp
stos
xchg
mov
push
xchg
sbb
roll
in
mov
iret
into
dec
les
lcall
mov
mov
pop
push
in
sub
push
mul
orl
add
bswap
pop
mov
rcl
and
xchg
mov
xlat
cmp
sbbl
test
mov
test
mov
and
das
pop
fcom
mov
inc
fisttps
xor
in
fidivs
push
filds
dec
cmc
mov
icebp
xorl
mov
pop
jge
aad
mov
sub
push
inc
sahf
outsl
adc
mov
push
push
xchg
mov
xor
push
loope
daa
xchg
dec
mov
dec
xor
ja
ret
mov
cmove
mov
shlb
dec
daa
adc
inc
shll
rep
bound
mov
push
inc
imul
mov
pop
sti
jecxz
mov
add
cmp
sbb
mov
in
and
hlt
push
or
add
out
lods
pop
mov
test
pop
and
cltd
and
test
jmp
mov
sahf
push
push
push
subb
cmp
cmp
pop
in
pop
popf
data16
push
pop
pop
push
lods
dec
ror
mov
jo
mov
testl
add
ljmp
fimuls
mov
mov
or
fldl
shll
std
lret
sbb
pop
adc
lahf
lods
popa
mov
js
adc
inc
mov
ret
sub
popf
push
sub
sar
outsl
and
xchg
lret
sub
lret
shrl
das
lcall
lahf
pop
and
push
and
das
add
mov
stos
daa
inc
test
roll
push
bound
lea
adc
es
repz
xor
sbb
data16
and
addb
and
aaa
repnz
lock
pop
je
arpl
adc
mov
repnz
jge
popa
dec
sbb
fildl
mov
cltd
xor
lret
repnz
sbb
dec
add
push
push
inc
popa
jno
int3
pop
dec
lods
nop
and
decb
adc
loop
add
push
push
push
add
jg
cmp
cli
inc
push
rclb
fidivl
push
ja
add
fistpl
fimuls
stc
mov
pmaddwd
int3
repnz
cmp
pop
test
outsl
pop
jmp
loope
punpcklwd
xor
iret
xor
imul
push
and
jmp
add
in
jne
in
push
lret
sub
outsb
jno
scas
fisubs
cltd
lds
xor
cmp
ficompl
divb
lcall
in
mov
imul
sbb
loopne
adc
rorl
rcl
into
sbb
and
out
lea
mov
fisubl
mov
xor
and
add
das
mov
ljmp
mov
mov
adc
inc
or
loope
add
pop
movsl
shr
sti
pop
xchg
pop
sbb
stos
fsts
lea
dec
mov
out
arpl
sti
dec
jo
rclb
mov
hlt
cmp
jb
and
insl
repnz
filds
sbb
adc
dec
stos
push
icebp
les
mov
add
and
cmp
in
inc
scas
cmpsb
adc
cmp
push
jl
out
jns
mov
mov
outsb
pop
mov
pop
fldt
pop
add
sub
and
testl
push
inc
xor
jge
and
mov
sub
aas
xchg
jmp
add
mov
cltd
sub
dec
xchg
mov
and
jle
xchg
add
ja
cmc
mov
add
scas
pop
push
movsl
xchg
nop
inc
jle
stc
xchg
add
sub
pop
jp
mov
fsubr
sarl
jecxz
xchg
xlat
mov
and
loope
lret
sti
data16
push
inc
push
repnz
rolb
dec
and
icebp
fistpll
clc
push
lret
cwtl
and
add
xorl
addr16
cs
lods
and
pop
push
lods
adc
inc
jl
cli
dec
ljmp
and
sbb
and
mov
popf
inc
push
popf
adc
xchg
mov
sbb
jns
lds
inc
xchg
clc
insb
loope
aam
mov
pop
int3
push
lret
cmpsl
dec
push
stc
push
xor
dec
cwtl
repnz
add
mov
push
xor
stos
dec
daa
mov
push
out
cmpsb
aaa
shll
inc
push
pop
fmull
sub
adc
pop
jle
push
adc
rcrl
es
sub
inc
jg
mov
loopne
xor
jo
mov
movsl
mov
loopne
and
xor
daa
push
xor
jb
inc
sbb
pop
addr16
out
lods
scas
mov
lret
mov
hlt
in
push
mov
jp
pusha
mov
dec
sti
dec
loope
inc
jo
loop
push
pop
push
mov
pop
gs
inc
pop
cwtl
and
mov
mov
scas
scas
test
cmp
fdivs
sahf
mov
testb
mov
inc
call
cmp
out
jl
push
and
push
cmp
add
repnz
and
shlb
aas
and
popf
and
cmpsl
mov
loopne
jl
xor
xchg
clc
push
and
mov
repnz
pop
xlat
xor
lods
dec
push
addl
mov
push
arpl
pushf
cs
push
sub
addr16
insl
xchg
push
mov
stos
repnz
sar
hlt
stos
sti
push
shll
jne
adc
mov
push
test
push
jg
push
sahf
jo
adc
fcmovnu
add
ljmp
shrb
mov
loope
outsb
repz
js
fnsave
jb
mov
std
lea
jecxz
arpl
ss
adc
adc
je
mov
and
push
stos
mov
mov
testb
cmp
es
add
cmp
ljmp
cmp
and
add
push
sbbb
call
popa
jmp
loopne
dec
xchg
repnz
mov
dec
jae
or
dec
fiadds
adc
movsb
push
divl
mulb
lret
cwtl
shl
popa
cltd
or
sub
pop
push
enter
mov
dec
mov
sub
jge
pop
dec
clc
xor
adcb
les
jae
cmc
xor
add
mov
ret
sbb
and
pop
xchg
pop
mov
rolb
cmp
mov
pop
nop
sub
xchg
pop
xor
mov
pop
repnz
push
out
or
js
daa
jbe
sbb
adc
add
inc
pop
xchg
les
push
jb
mov
cmpsb
mov
xor
cli
jge
xor
test
pop
xchg
int3
in
rclb
sbb
dec
pop
mov
lcall
stc
sub
outsl
hlt
lret
dec
pop
pop
imul
movb
repz
addr16
dec
lahf
mov
and
xlat
mov
push
push
push
arpl
xchg
clc
sub
flds
and
mov
fsts
loopne
mov
faddp
sub
fidivl
adc
fldenv
push
inc
sbbl
cmp
xchg
scas
ffree
pop
mov
rcl
xchg
cltd
jae
sbb
mov
adc
fdivrp
js
mov
pop
sub
inc
sub
cmp
pop
add
insb
xor
mov
int
pusha
dec
add
add
psrad
xor
dec
and
mov
push
push
dec
aad
pop
dec
je
add
dec
jno
adc
xor
movsl
push
stos
outsb
pop
test
inc
cmc
pop
mov
xor
lods
xchg
cmp
xor
push
jge
faddl
fadds
dec
lods
js
push
shlb
dec
push
je
add
sbb
es
negb
xchg
clc
into
sbb
test
adc
imulb
mov
es
adc
iret
fidivrl
shlb
and
cld
dec
lret
arpl
bswap
shl
outsl
mov
jl
or
adc
mov
or
xor
jnp
push
adc
or
jle
setbe
xchg
stos
mov
in
cmpsb
sub
lods
sahf
xchg
das
fildl
pop
out
dec
in
push
pop
dec
dec
jns
inc
mov
jae
push
jecxz
scas
jecxz
mov
xchg
dec
in
movsl
out
roll
pop
jp
pushf
pop
xor
mov
jge
ds
loopne
mov
jb
je
fimuls
sub
mov
push
pop
push
neg
aad
mov
mov
xor
jge
insl
inc
xchg
cwtl
jb
or
les
jns
cmpsl
xor
adc
push
jnp
cmpsl
shlb
cmp
rorb
jle
cmc
xchg
add
fldlg2
inc
shlb
mov
jbe
and
xchg
push
xor
jge
and
stos
mov
cs
sbb
pusha
lock
and
add
test
es
dec
or
jmp
stos
sbbb
mov
data16
push
push
ror
dec
fs
adc
movsl
jmp
movsb
jp
fnsave
jge
inc
dec
jge
fisttpll
cmp
dec
pop
pop
push
cmp
into
inc
in
lss
lods
xchg
xor
xlat
es
add
fwait
mov
imul
mov
das
loope
and
jo
daa
mov
jbe
cmp
inc
and
mov
sbb
cmp
or
add
filds
xlat
xor
xchg
fbstp
fmuls
ret
mov
pop
or
mov
xchg
pop
sbb
arpl
movsl
pushf
push
xor
mov
push
mov
js
inc
shr
outsb
push
fdiv
mov
pop
jo
add
pushf
das
cmp
lret
sbb
jmp
xchg
fsubs
lods
pop
mov
test
dec
enter
popa
dec
sbb
stc
mov
aad
jo
dec
shll
or
cs
in
adcb
call
fldt
push
subb
push
movsb
out
mov
push
and
cmp
push
and
pop
rorl
add
dec
sbbb
xchg
cmp
es
jb
aad
sti
add
outsb
cmp
rorb
les
sub
push
sarl
push
add
mov
dec
jp
inc
fstps
notl
daa
inc
push
ss
jno
das
fisubrs
and
xor
stos
adc
push
mov
inc
lret
fldl
and
nop
and
rorl
call
jecxz
mov
icebp
and
xchg
insb
cli
mov
ljmp
pop
daa
mov
test
cmp
jnp
and
in
ret
or
cvtdq2ps
jg
jae
and
imul
xor
es
bound
and
cmpl
fbld
cld
out
ds
rclb
sti
dec
mov
cmpsl
enter
hlt
lds
andl
cmp
adc
xor
out
jg
jbe
pop
xorb
loope
out
out
insl
xor
rorl
adc
in
push
mov
addr16
push
mov
push
out
insl
clc
push
ja
mov
and
outsl
pop
mov
add
inc
out
rcl
lods
insb
insb
add
lods
fdivs
imulb
ja
sbb
xlat
call
sub
call
jne
and
stc
inc
mov
inc
adc
lds
mov
cmp
mov
dec
decl
jb
inc
push
pusha
cltd
inc
call
clc
xchg
aas
xor
pop
sahf
aam
jno
pusha
cmp
mov
dec
inc
ljmp
add
out
jnp
xchg
jmp
popa
sbb
or
cmpsb
xor
push
data16
mov
mov
jmp
dec
xor
lock
fisubs
cmp
repnz
aad
clc
add
les
pusha
dec
or
leave
fimull
pop
pop
mov
cwtl
jns
sbb
hlt
jns
fwait
or
in
cmp
adc
out
std
mov
popf
sub
mov
or
xlat
daa
cmp
fmuls
cmc
xchg
arpl
and
test
loopne
adc
mov
add
sti
and
decl
add
sub
repz
aas
lahf
dec
jge
pop
sub
test
repz
push
xor
int3
sbb
push
fs
stos
and
mov
jmp
xchg
fwait
mov
and
addb
shrl
les
lret
arpl
cmpsb
ds
mov
iret
add
stos
cmc
out
repnz
addr16
xor
push
inc
dec
icebp
enter
icebp
addr16
lret
or
push
push
subb
pop
add
jmp
popa
loopne
loop
dec
hlt
mov
subb
mov
xchg
xchg
xor
les
std
jae
cltd
ja
cmp
mov
inc
adc
and
test
inc
sub
cmp
xor
cmpsl
xchg
push
imul
or
sbb
xor
jle
in
xchg
xchg
or
or
jae
shlb
or
inc
xor
icebp
pop
test
mov
jnp
sbbb
jb
jecxz
push
xchg
movsl
mov
pop
test
and
adc
inc
add
mov
divb
dec
and
push
inc
adc
and
xchg
jle
sub
mov
cmp
jbe
icebp
xchg
dec
dec
sub
dec
mov
cmpsb
mov
test
sub
sahf
fistps
jns
out
dec
in
pop
or
mov
mov
inc
jecxz
in
out
adc
cmp
rcl
out
out
dec
mov
mov
xor
sarl
jb
pop
rcl
leave
jbe
les
movsb
mov
inc
popa
pop
push
lods
ljmp
xchg
sahf
mov
loop
sub
test
or
mov
push
adc
xchg
jp
movsb
repnz
push
adc
adc
mov
mov
adc
mov
adc
xor
cli
test
add
repz
aam
dec
aas
mov
jge
sbb
xchg
pop
mov
lea
sbb
or
sbb
cmp
push
imull
jmp
test
lods
xchg
dec
push
enter
mov
sbb
add
sahf
lods
movsl
pushf
adc
iret
pop
lret
xchg
or
repz
xchg
cmp
inc
xchg
subb
inc
mov
mov
in
xchg
mov
mov
inc
sub
popa
xlat
addr16
xchg
loope
or
mov
gs
mov
adcl
mov
adc
movsb
out
xchg
and
imulb
sub
packsswb
loop
or
cwtl
repnz
mov
jmp
or
and
xchg
adc
adc
pop
daa
inc
cld
sbb
fldl
in
test
mov
pop
lret
mov
sbb
inc
adc
repz
testb
rolb
popf
sar
fidivrs
iret
ret
or
ret
mov
jbe
inc
jns
arpl
jns
es
jl
in
pusha
sbb
xor
sub
xor
ds
push
ffree
cmpsl
fs
xor
aam
daa
xor
lret
int3
pop
sbb
pop
pop
je
or
xor
xchg
lds
sarb
adc
sbb
add
gs
test
shll
test
pop
ret
and
out
jae
in
push
mov
mov
dec
sbb
mov
jg
outsb
lret
lcall
xor
adc
out
adc
add
pop
insl
adc
mov
push
fildll
push
les
push
inc
add
pop
rorl
xchg
daa
fidivl
mov
push
not
into
dec
and
and
mov
jge
jecxz
xor
nop
out
add
ret
cmp
fstl
pop
add
pop
xor
and
aas
daa
mov
leave
sahf
lods
out
mov
dec
enter
pop
mov
inc
rol
xor
int
shll
xchg
fs
adc
std
cmp
scas
dec
mov
push
jp
shrl
mov
in
cmp
repnz
add
aas
push
cmpsl
mov
adc
add
es
iret
fimuls
outsl
pop
test
out
out
mov
mov
xor
adc
sub
pop
in
lcall
ret
lcall
sbb
xor
aad
movsl
in
mov
adc
dec
into
sahf
xchg
mov
xchg
clc
mov
aad
ret
or
and
lds
stos
xchg
xor
lods
orl
adcl
jge
insb
ljmp
push
popa
arpl
fstpl
daa
pop
adcb
add
scas
mov
movsb
or
mov
cmp
jle
jl
les
aad
pop
mov
or
jne
rcll
int3
les
stos
jp
out
les
sub
sub
sbb
icebp
lods
and
into
and
iret
cmp
and
cmp
aam
mov
pop
gs
sub
aas
dec
jg
push
negb
and
test
enter
int
fidivrl
nop
testl
xor
xchg
jno
testb
dec
xor
jl
jge
fstps
js
je
push
mov
out
adc
ss
in
push
mov
incl
shll
mov
scas
cmp
rclb
mov
mov
jecxz
pushw
xor
fisubrl
test
iret
mov
mov
pop
cli
test
add
hlt
fsubrl
hlt
jb
inc
jae
xor
jne
push
inc
pushf
loope
mov
jl
adc
jecxz
jmp
xchg
enter
inc
mov
jecxz
mov
lret
insb
xor
sbb
mov
lods
dec
push
and
es
xchg
inc
inc
xchg
cmp
mov
adc
push
in
add
ljmp
push
cltd
data16
push
or
ljmp
cmp
scas
mov
mov
cltd
mov
popa
mov
dec
jecxz
push
arpl
das
sti
mov
inc
fcomps
rclb
jg
lods
out
notl
es
adc
mov
dec
mov
and
push
mov
enter
mov
or
add
lods
jno
jo
movsb
adc
xorl
mov
sub
mov
jle
add
add
or
pop
lock
adc
stos
jecxz
sub
enter
and
mov
loope
or
mov
cli
add
xlat
sub
sti
xchg
loope
lods
jmp
mov
add
xchg
orps
mov
mov
xchg
test
sbb
sbb
lcall
lahf
shll
mov
push
xor
and
mov
test
pop
pop
jnp
imul
pop
sbb
add
loopne
pop
sub
adc
jae
nop
sub
mov
outsl
lds
pop
sbb
cmp
mov
outsb
jp
test
lods
js,pt
and
mov
push
xchg
pop
pop
int
pop
push
adc
stos
nop
or
mov
pop
mov
repnz
out
outsl
int3
jle,pt
aam
jne
test
loop
sti
jp
cmp
xchg
dec
pop
jg
sysexit
xchg
inc
mov
adc
test
daa
shl
iret
mov
mov
mov
add
shll
outsl
int
push
jbe
add
dec
fidivl
add
cmpsb
daa
into
push
jo
lods
popf
fsubrl
fstpt
shll
or
adcl
testb
and
add
push
pop
cltd
inc
lahf
std
insb
xor
lea
mov
jb
adcb
lahf
mov
pop
xchg
stc
data16
mov
cwtl
roll
jbe
mulb
lods
sub
cmp
mov
in
hlt
shl
xorps
sarb
cltd
shlb
js
xor
dec
cmpsb
mov
adc
insb
ret
out
rclb
xchg
inc
xor
inc
mov
nop
sbb
inc
sub
add
test
xchg
and
and
push
push
mov
pusha
adc
in
sub
adc
ss
mov
jg
loopne
xor
jmp
push
leave
mov
mov
daa
insl
cmc
xchg
scas
mov
push
cmp
or
imul
rorl
aad
cmc
data16
or
jne
dec
mov
xchg
shlb
aam
sub
jg
xlat
mov
std
mov
xchg
pop
xchg
es
lcall
adc
test
dec
arpl
or
mov
roll
adcb
insb
leave
lret
or
mov
xchg
inc
push
shrb
jo
or
cmpsl
addr16
jp
fwait
aam
mov
cmp
lods
dec
cmc
dec
ljmp
pop
scas
mov
pushf
testl
cs
mov
pop
mov
xchg
jecxz
jg
dec
cmpsb
push
mov
ss
inc
cmp
popa
xor
fcoms
jge
fiaddl
data16
mov
jbe
sub
lock
xlat
scas
popf
push
dec
fcoml
imul
out
jle
ss
mov
test
daa
jb
jb
jnp
mov
rolb
shlb
add
push
jp
repnz
adc
pop
mov
clc
ror
decb
filds
xchg
jae
sub
jne
fwait
xchg
cmc
sar
dec
mov
xlat
pop
into
mov
dec
and
cmp
jle
scas
subb
fdivl
mov
orb
push
sub
mov
lret
push
shlb
push
or
cli
xor
push
fucomi
adc
sbb
xchg
dec
movsb
mov
in
inc
das
fstpl
xchg
sbb
jmp
mov
sahf
scas
cmp
xchg
or
stos
lret
inc
cmp
roll
in
cmp
pusha
mov
push
mov
mov
xchg
dec
adc
mov
es
insl
adc
cs
and
jmp
add
add
dec
jl
rcll
xor
mov
into
push
cld
in
push
insb
shl
pop
out
rorb
insl
fwait
popf
mov
jns
sub
ss
cmpsl
scas
inc
add
loopne
xchg
mov
dec
push
popa
xchg
test
cmp
xor
addr16
pop
inc
les
insb
adc
lret
jecxz
pusha
mov
aad
out
push
xchg
push
pop
clc
test
add
movsl
aad
push
dec
sbb
sbb
pop
cld
xor
inc
jge
aam
popa
lds
sub
add
int3
mov
push
aas
test
jb
xor
inc
je
dec
xor
outsb
out
and
mov
fadds
jmp
xor
sbb
adc
ds
mov
xchg
ret
test
ss
das
inc
sub
stos
mov
jae
rolb
repz
insb
or
dec
or
push
lods
ror
sbb
add
adc
mov
xor
aam
das
jns
test
jne
cmc
mov
jne
lods
sbb
or
xchg
out
and
mov
cld
vrsqrtss
sbb
fstpt
adc
ljmp
js
sbb
add
sub
ret
inc
xor
push
inc
es
adc
insl
pop
popa
push
xor
dec
add
dec
jae
stos
fisubl
push
or
add
add
in
xor
mov
fmull
xchg
jle
test
adc
cltd
lret
sbb
pop
adc
aas
jp
roll
cwtl
or
pop
lret
push
cmp
cmp
fisubrs
add
inc
dec
jb
cmp
jl
incb
inc
fcom
andb
inc
jae
mov
inc
sbb
lcall
sahf
in
dec
dec
mov
pop
arpl
or
sub
mov
xor
dec
fdivrs
aad
dec
test
cwtl
jae
cli
dec
stos
pushf
adc
loop
pop
out
popf
sbb
rcll
ret
pop
and
dec
push
push
cmp
and
jmp
xchg
arpl
cwtl
cli
cmpsb
out
adc
mov
and
fbld
xor
dec
insl
sti
xor
cmc
mov
push
shr
fcoml
mov
test
mov
bswap
sbbl
fmuls
and
lods
push
mov
add
jecxz
rorl
or
lods
xchg
cld
push
adc
sbb
inc
mov
dec
or
mov
mov
dec
repnz
add
aas
dec
push
sbb
push
jo
sub
dec
les
xor
or
dec
or
xor
mov
or
add
mov
arpl
add
jnp
pop
jne
inc
pop
mov
cmpsb
int3
add
jns
pop
pop
in
sbb
enter
mov
cltd
xchg
or
adc
add
push
sbb
ljmp
insb
sub
xchg
aam
push
push
sbb
ret
inc
jo
cmp
mov
mov
mov
jp
arpl
inc
jno
ja
inc
stos
scas
lret
cli
jg
xor
iret
adc
dec
cmp
popf
sub
sbb
sub
mov
sbb
sub
add
cs
mov
mov
mov
stos
pop
out
mov
cmp
aaa
out
les
inc
fists
cwtl
push
jmp
jbe
mov
scas
lcall
in
enter
jl
ljmp
stc
lds
jne
mov
mov
push
mull
jmp
mov
cltd
cmpsb
imul
scas
xor
mov
jp
movsl
rolb
lret
cltd
mov
les
sub
mov
xchg
fs
out
out
xchg
fsubp
sbb
test
mov
lea
shr
cmp
xor
fldl
cmpsl
mov
inc
outsb
js
iret
lods
add
dec
add
pop
pop
inc
sub
lahf
mov
xor
mov
fwait
pop
rclb
sbb
ja
loope
xor
dec
test
add
mov
add
cli
push
rcll
push
insb
cmpsl
fsubrs
je
sbb
hlt
je
inc
jb
daa
xor
mov
add
and
xchg
jno
add
mov
shlb
mov
sbb
adc
mov
xchg
cs
mov
outsl
fiadds
outsl
xlat
sbb
sub
rclb
popa
das
jle
push
mov
out
pusha
jo
repz
xchg
inc
lcall
fmuls
arpl
jnp
lret
mov
pop
push
dec
test
lahf
sbb
aaa
scas
rcrl
lret
loop
mov
mov
ja
pop
test
addl
sahf
lods
ljmp
mov
xor
xchg
iret
jns
mov
bound
std
sub
xor
mov
and
sbb
into
xchg
pop
push
in
cmc
bound
add
clc
and
fcoms
cmp
dec
ret
cs
movsl
xchg
mov
dec
dec
inc
push
mov
aad
and
push
adc
mov
mov
in
mov
loop
je
xchg
ljmp
cli
add
ss
jns
dec
pop
jp
clc
fiadds
jb
mov
cwtl
out
push
mov
popa
push
pop
lods
mov
fwait
sbbb
dec
or
or
xchg
pop
fmuls
or
adc
es
fnstcw
sti
shll
dec
xor
aam
jne
jp
popa
les
std
cmp
add
xchg
cmpl
or
pop
mov
mov
lret
cwtl
aas
in
in
sub
pushf
ret
shl
lahf
or
mov
aaa
xchg
in
xchg
fs
cmp
daa
push
inc
and
imul
call
hlt
das
add
ljmp
lret
imul
out
mov
inc
mov
mov
dec
xchg
dec
into
push
sbb
push
inc
arpl
jae
jmp
out
pop
mov
andl
pop
xchg
and
add
xor
pop
dec
inc
ljmp
xchg
mov
push
dec
push
roll
pop
daa
pop
es
mov
add
dec
rcrl
sbb
or
sub
into
fdivl
fcmovne
insb
popf
jb
jb
scas
or
mov
and
movsb
iret
aam
lods
push
lcall
mov
cmp
outsb
pop
sub
mov
testb
mov
int3
insl
mov
repz
push
sbb
xchg
jmp
sbbl
cmpxchg
insl
test
lods
out
push
mov
inc
dec
mov
pop
xchg
repnz
fmul
push
mov
add
sub
push
pop
lcall
imul
xor
sbbb
test
cmp
push
pop
mov
mov
or
lcall
xor
adcb
xchg
xchg
add
mov
inc
gs
push
add
inc
or
stos
enter
sub
pop
into
pop
cwtl
cmpsl
aas
inc
push
and
out
sti
mov
mov
les
pop
mov
xchg
pop
jns
lret
xchg
movsb
cld
outsl
pop
fisttpll
mov
or
jle
fsubs
call
lcall
rcrl
scas
mov
cmp
pushl
jp
in
test
xor
add
push
lret
xchg
xor
clc
icebp
mov
add
pop
and
dec
adc
aaa
cltd
pop
push
daa
adc
pop
xor
push
push
js
jae
add
pop
and
jo
inc
out
dec
sub
add
cmp
fdivrl
inc
adc
gs
jo
pop
je
mov
enter
lea
push
cmp
dec
subb
mov
or
mov
jns
xlat
scas
jmp
push
cmpsl
xchg
subb
sub
mov
aaa
jle
imul
cmc
pop
add
push
lret
sbb
inc
jb
jae
mov
mov
mov
xorb
aam
jmp
jb
jae
push
sub
out
scas
xchg
sbb
lahf
push
mov
xchg
adcb
ret
push
fdiv
lahf
jae
ljmp
test
jmp
sub
or
insl
xchg
sub
loopne
jnp
daa
inc
int
jb
mov
adc
xor
jbe
in
or
jecxz
in
mull
mov
ss
loop
test
lock
xchg
jl
or
push
cld
add
enter
and
or
dec
rcrl
xor
cmovo
jle
int
roll
pcmpeqd
or
cmpsb
ret
jg
and
mov
leave
mov
mov
pop
xchg
test
push
imul
jo
cmpsl
jnp
arpl
les
sub
popa
add
iret
xor
cs
lcall
add
and
lret
scas
sub
stos
xchg
int
jns
shll
jmp
aad
mov
mov
xchg
xchg
movsl
push
bound
sbb
dec
jno
lcall
and
faddl
outsl
cmpsb
cmp
mov
fisttpl
jbe
pop
mov
leave
addr16
je
jl
jmp
jp
jl
pusha
call
loope
xlat
jecxz
lcall
mov
push
out
sarl
dec
lods
sarl
or
in
in
stc
cmpsb
test
cmpsb
sub
inc
mov
bound
sbb
lret
mov
sbb
xor
push
out
sbb
mov
je
push
cli
fs
xor
test
iret
andl
test
adc
add
adc
mov
aaa
nop
jecxz
ds
lret
sub
add
add
orb
inc
out
xchg
sub
xor
push
sub
scas
sbb
pop
cltd
insl
aam
push
ffree
mov
in
inc
mov
std
inc
xchg
js
xor
add
aam
sub
push
pop
xor
lods
pop
testl
xchg
lret
int3
lea
jecxz
je
fisubl
movl
rolb
rorl
jp
enter
int
in
inc
push
test
jecxz
sti
mov
cmp
cmc
aad
jecxz
xchg
adc
cltd
sahf
fldenv
mov
rol
ret
ret
adc
sarl
dec
repz
aas
insl
std
es
ret
push
fadd
lcall
jb
fmuls
in
jb
insl
pusha
hlt
aas
xor
xor
push
push
pop
and
inc
addr16
lcall
push
xor
clc
negb
and
dec
adc
fwait
push
dec
out
pop
int3
lret
or
shll
cmp
and
jp
ffree
andl
arpl
int3
cs
sbb
pop
add
sahf
pop
jge
icebp
or
movsl
ja
xor
icebp
cmpsb
mov
jl
dec
into
popf
mov
pop
rol
add
int3
rcrl
rorb
lods
ja
add
push
mov
dec
mov
aas
movsl
mov
stos
mov
out
lcall
popf
sbb
mov
ficomps
leave
or
add
adc
xchg
fimuls
nop
arpl
mov
movsl
fimull
sbb
aas
jmp
pop
mov
mov
movsl
into
sbb
dec
in
cwtl
mov
ljmp
xor
push
and
and
mov
adc
jno
xlat
push
pop
jns
shll
xchg
and
push
call
push
and
push
add
mov
popa
das
push
inc
cld
and
jb
or
stos
daa
dec
subl
or
idivb
adc
fwait
pop
and
jnp
adc
cmp
es
iret
jmp
pop
lret
or
jle
push
dec
xor
mov
enter
or
cmpsb
jne
and
xor
nop
mov
jecxz
mov
lods
mov
std
add
pop
icebp
pop
push
lods
sbb
xor
in
fs
adc
mov
rcll
mov
rcrl
lcall
jnp
mov
sarb
fwait
xor
push
mov
repz
rclb
jbe
fidivl
pop
push
xor
out
jno
xor
fs
iret
inc
sarb
sbbb
repnz
call
insb
lods
call
jae
rcrb
ret
popa
xor
mulb
test
ss
adc
push
and
jnp
mov
js
sbb
cli
loop
in
xor
xchg
xchg
xchg
xchg
test
lcall
xchg
roll
xchg
or
lret
repz
jecxz
mov
pusha
clc
or
out
lea
push
shr
jecxz
dec
cwtl
or
into
in
cmpl
inc
xchg
and
imul
packuswb
stos
int3
or
in
fdivrl
adc
ljmp
cmovp
imul
loopne
add
dec
mov
inc
xchg
fisttpll
jbe
ret
dec
jae
add
and
push
xor
repnz
adc
inc
xchg
outsl
mov
sub
mov
pusha
jae
ljmp
mov
or
roll
adc
mov
mov
cwtl
pop
mov
cmp
push
test
ds
or
add
in
push
mov
mov
inc
push
les
or
jp
mov
pop
xor
mov
sarl
sub
mov
jns
pop
insl
into
mov
adcl
out
inc
xorb
js
les
adc
stos
lret
sub
cmp
insl
cmp
jl
lods
sub
sub
nop
outsb
daa
jecxz
scas
sub
mov
or
mov
mov
lahf
xor
cwtl
mov
inc
and
push
les
mov
and
xchg
roll
jnp
sub
call
imul
outsb
mov
incb
lods
push
movd
out
or
lods
mov
ret
enter
js
lahf
or
ror
push
cmpsb
jmp
int
lock
sbb
xchg
jae
lea
cltd
outsb
dec
notb
inc
fidivrl
pop
call
mov
test
or
mov
in
lahf
out
out
sbb
shl
insb
stos
cmp
cwtl
jge
pop
lds
js
ret
and
insl
dec
pop
pop
cmp
jg
pop
jecxz
sahf
pop
inc
push
fstpt
jmp
adc
mov
mov
jno
push
ljmp
aas
jb
imul
clc
js
into
sahf
jo
into
inc
out
and
and
dec
loop
jns
test
inc
ljmp
addr16
jmp
stos
fnstcw
insl
push
imul
mov
jae,pn
mov
mov
shlb
dec
mov
aam
and
mov
pushf
mov
rcll
push
scas
aam
pushf
adc
jecxz
and
sub
adcb
or
mov
addr16
call
in
fwait
out
sub
jge
out
inc
cmp
scas
jmp
movsl
push
add
or
jb
repnz
pop
lea
pop
lea
jmp
cmpsb
jns
dec
mov
add
add
fstl
fxam
cmp
in
leave
xlat
cs
pusha
jnp
inc
inc
std
or
out
xchg
jbe
insb
jg
test
gs
es
pop
inc
pop
mov
pcmpgtw
loopne
leave
sti
aaa
and
dec
std
aaa
inc
mov
movsb
loopne
dec
add
add
and
jp
cmp
imul
and
lock
inc
loop
mov
pop
cmpb
pushf
stos
adc
into
mov
pop
cmc
jo
int3
xchg
xchg
mov
bound
sahf
and
jge
pop
push
shl
mov
cli
push
ljmp
xor
rol
xchg
enter
push
jb
pop
mov
jg
repnz
mov
out
lods
in
mov
les
pop
or
jbe
mulb
js
in
dec
testb
xchg
sub
shlb
iret
scas
pop
push
cli
pop
daa
ja
daa
insb
lret
jge
aas
jl
pop
iret
insl
adc
mov
push
and
repnz
xchg
fimuls
sti
sbb
jecxz
or
aad
push
rcrb
aad
xchg
pop
xor
or
and
pop
xchg
sbb
rorl
dec
pop
pop
push
ljmp
xchg
push
mov
mov
aaa
call
insl
cmc
push
out
push
leave
gs
jmp
pushf
mov
fiadds
mov
imul
popf
ljmp
fldt
pop
jle
out
and
sbb
aam
or
stos
es
int
xchg
pop
aaa
sub
fiadds
iret
dec
movsb
xchg
movsl
or
dec
das
sbb
dec
das
adc
lcall
pop
push
dec
xchg
outsl
repz
hlt
cmp
or
faddl
and
loop
xor
xor
push
arpl
jg
sub
cmp
mov
and
ljmp
addr16
in
addr16
call
add
push
and
mov
dec
and
das
mov
mov
test
jns
andl
jge
dec
out
xchg
cmp
aam
fsts
adc
push
repnz
jne
cmp
cmp
and
dec
jge
lret
test
jecxz
into
shll
repz
cld
ja
into
xor
push
jae
mov
out
or
shl
or
jne
std
pop
xchg
cmp
outsb
fsub
cmp
pop
inc
movsl
cmp
push
fs
outsb
outsb
xchg
imulb
in
fistps
test
pop
mov
dec
imul
xchg
aam
mov
dec
xchg
dec
lods
daa
push
and
or
inc
mov
xlat
out
mov
push
lret
ljmp
sub
or
cmp
pop
mov
mov
add
push
mov
dec
enter
xor
test
imul
jp
mov
in
cltd
dec
loope
push
fistl
mov
insb
adc
dec
aam
adc
gs
lcall
or
cmpsb
mov
loopne
push
mov
jl
aaa
and
loope
gs
xor
jge
cmpl
outsb
iret
add
movsl
pop
dec
dec
mov
pop
inc
mov
dec
add
into
add
into
push
adc
push
or
adc
jl
fstps
inc
cmp
rorb
cli
and
sbb
xchg
pop
outsl
sub
out
add
outsl
pop
inc
adc
scas
xlat
outsb
mov
mov
or
jmp
sub
es
inc
mov
or
jg
scas
testb
jno
lret
or
cmp
arpl
fstps
push
into
movsb
xor
out
mov
xlat
xorb
or
int
lcall
push
call
mov
dec
xorb
cld
lds
hlt
fisttps
cmp
sub
into
ds
lea
adc
add
sub
dec
push
and
mov
dec
in
xchg
dec
stc
fdiv
je
mov
pop
inc
aaa
and
cld
scas
ss
jns
pop
cltd
jnp
das
aas
sub
sub
arpl
pop
mov
push
or
les
daa
dec
or
daa
fisubrs
imul
adc
pop
cmpsb
ret
jg
jo
and
cmp
ss
lock
shlb
or
xlat
jbe
mov
out
aas
jno
mov
push
and
test
mov
loopne
sub
data16
fbld
adc
dec
aas
adc
loope
out
and
lea
mov
pusha
mov
cmp
pop
out
lahf
pop
mov
mov
pop
sbb
adc
mov
adc
xchg
scas
sub
sbb
add
push
es
mov
pop
cmp
sub
addl
mov
aam
xchg
stos
jg
arpl
xchg
aas
inc
mov
cmp
cld
imul
pop
repz
jae
call
outsl
adc
in
mov
out
icebp
cli
in
insb
cmp
addr16
or
lods
inc
xchg
push
movsl
adc
add
iret
mov
xchg
mov
dec
popl
sbb
loop
add
shlb
enter
xchg
fs
or
mov
push
popf
xor
xchg
icebp
pop
mov
ret
jg
inc
add
sub
clc
ficoms
mov
scas
xchg
sahf
mov
adc
cmp
movsb
repnz
insl
cmp
xchg
xor
adcb
mov
adc
adc
sahf
add
hlt
dec
adcl
and
pushf
movsb
cmp
xchg
js
jne
sub
jecxz
aad
outsb
sbb
jbe
in
dec
andl
dec
jbe
fiaddl
leave
fdivrl
out
sub
pop
ja
mov
add
loop
in
push
dec
xor
jnp
mov
repnz
arpl
push
pop
mov
rorb
jo
sub
xchg
mov
sub
and
movsl
cmp
imul
pop
fdivl
mov
jmp
popf
mov
fstl
mov
jmp
or
inc
mov
or
push
mov
push
fsubr
aam
lcall
and
inc
mov
outsl
movq
push
in
pop
test
jmp
je
pop
mov
pusha
out
pushf
jno
jns
test
dec
mov
stos
stos
aas
inc
pop
jo
mov
mov
pop
push
scas
sub
out
and
cmp
mov
and
add
std
addl
ret
add
jne
fdivl
and
pop
xchg
or
in
repnz
gs
imul
xchg
sub
xchg
and
cmc
js
and
insb
mov
icebp
cwtl
nop
lods
mov
pop
jns
and
jecxz
aas
xchg
adc
lods
xchg
das
mov
ss
xchg
xor
dec
add
or
sub
mov
cmc
push
add
movb
ficoms
cltd
push
mov
push
dec
push
enter
loop
and
shll
bnd
xor
sub
sbb
pop
add
mov
xchg
test
lret
ljmpw
xchg
push
add
or
mov
rolb
xchg
pop
addb
xchg
cmp
lret
jg
adc
jmp
and
mull
sbb
push
push
mov
dec
push
and
in
incl
out
rclb
insl
and
ja
cmp
jmp
arpl
cmp
xlat
mov
fstps
mov
cmpsl
mov
mov
dec
movsl
pop
scas
aam
inc
fisubrs
in
scas
and
push
pop
mov
add
dec
xor
cmp
jle
loope
jg
push
mov
jmp
add
ljmp
mov
and
dec
cld
subl
jp
rcl
xchg
lods
or
sbb
aas
push
imul
add
int
bound
xchg
shrl
add
push
out
mov
fimuls
imul
out
hlt
pop
pushf
out
lea
cmpsl
or
scas
xor
cmp
and
inc
fisubrl
mov
mov
cmp
fldenv
cmpsl
movsl
out
jo
jnp
mov
daa
fldl
pushf
xchg
mov
mov
iret
or
lods
mov
mov
popf
lahf
out
sub
ret
cs
or
cmpsb
cli
dec
xor
sub
push
push
cli
sub
push
sbbb
stc
fldcw
sub
dec
ds
in
adc
testb
fdivr
and
daa
iret
add
dec
repz
mov
insb
popf
movsl
popf
out
insb
enter
pop
faddl
mov
xor
lods
enter
pop
dec
addr16
inc
xor
cltd
shll
mov
imul
jae
in
sbb
jge
cmp
mov
mov
inc
in
jecxz
mov
add
mov
outsb
js
and
mov
setae
imul
fstl
cmp
jecxz
sbb
xchg
andl
enter
cwtl
stos
cli
add
xchg
scas
mov
mov
in
cwtl
xchg
pop
mov
xchg
pop
rorb
xor
or
mov
fmulp
dec
inc
movsb
std
or
cmp
mov
jnp
pusha
stc
lods
ljmp
cmpsb
dec
subl
aas
cmp
ds
sbb
mov
rolb
jno
push
cmp
test
pop
sbb
pop
test
ret
jns
inc
jno
mov
or
cmp
pop
sbb
rorb
push
jae
leave
test
pop
int3
out
push
enter
cmp
adcl
push
mov
jnp
mov
sahf
imul
push
leave
dec
mov
and
pusha
je
cmc
bound
mov
dec
jecxz
cmp
cmp
sub
je
mov
mov
fnstcw
mov
pop
int3
ror
loopne
test
dec
dec
in
aas
add
out
shrl
mov
aaa
add
movsb
scas
movsl
or
lods
mov
sub
or
jge
mov
arpl
mov
nop
jne
dec
dec
jecxz
jp
aad
pop
call
arpl
ret
popf
sbb
rclb
xor
pop
jae
leave
mov
push
mov
and
sub
cmp
and
cs
inc
sub
push
pop
sbbl
fmuls
pop
add
rcrb
imul
ret
pop
arpl
mulb
inc
stc
das
call
ss
orb
and
or
popf
leave
ljmp
ja
fiaddl
and
in
inc
push
xor
adc
pop
xlat
mov
int3
dec
jae
stos
xchg
dec
pop
out
cmp
popa
push
aaa
adc
vrcpss
cmpsl
inc
cmc
cltd
shll
lods
adc
mov
dec
arpl
lret
shll
jl
cmp
xor
or
mov
sbb
xor
out
adc
mov
push
xchg
pushf
push
stos
fildll
push
mov
arpl
adc
aad
jl
in
jae
stos
daa
adc
scas
ja
adc
dec
cmp
das
xchg
addr16
mov
jb
repnz
sub
pop
xchg
ret
sub
jo
inc
outsb
sub
pop
fwait
mov
xor
pop
ds
jl
lcall
pop
pop
popa
push
aad
sbb
push
cmpl
xchg
mov
jl
sbbl
xchg
jmp
out
loopne
movsl
sub
sub
lock
pop
jns
jp
fmulp
cmp
sub
ficomps
loop
ret
clc
les
mov
pop
add
cwtl
pop
sub
out
es
xchg
insl
push
subl
test
and
movsl
dec
imull
ljmp
pop
xor
dec
rcl
xor
push
xchg
dec
mov
out
xor
push
insb
xchg
add
cmpsl
fcoml
pushf
cmp
mov
cld
lods
mov
les
test
or
iret
add
js
or
mov
in
jl
pop
icebp
in
lahf
lods
dec
scas
fadds
inc
cmp
pop
push
xchg
insl
or
out
pop
sub
adc
sbb
or
inc
loopne
push
mov
xchg
mov
jo
fstl
or
jp,pt
stos
mov
clc
out
mov
mov
add
aas
push
cs
pusha
adc
xor
and
mov
shl
shlb
xchg
add
imul
cmpsb
inc
icebp
frstor
arpl
xchg
insl
adc
insb
test
mov
adc
mov
push
sbb
leave
xchg
sbb
dec
inc
pop
sub
fisubrl
push
xor
ss
ja
dec
sbb
sarl
in
mov
adc
lods
lods
test
push
push
cmp
or
in
or
dec
xor
and
xor
mov
imul
pop
call
sbb
in
out
cli
test
inc
imul
repnz
and
mov
jo
call
mov
sbb
mov
xor
push
inc
cltd
mov
scas
rorl
jbe
jo
xchg
inc
jo
add
xor
adc
lret
movsb
mov
push
es
xchg
push
int3
inc
cmpsb
dec
adc
push
iret
mov
test
push
add
inc
push
pop
test
lret
cmc
insl
mov
dec
lcall
insl
mov
mov
inc
push
cmpsb
aaa
lcall
jnp
stos
dec
jge
push
fdivr
or
xchg
jbe
sub
aaa
push
out
push
imul
mov
dec
dec
pushf
xchg
adc
add
cmp
and
push
fsubrs
or
dec
sbb
scas
pop
cmp
push
push
ret
sbb
rorl
out
inc
int
add
lret
daa
nop
jmp
fistpll
sarl
pop
and
cmpsl
jge
xor
jl
pop
leave
jae
icebp
mov
push
xor
and
adc
nop
lods
pop
jmp
or
mov
nop
lods
sub
shr
xchg
int3
int3
hlt
xchg
or
or
negl
cmp
push
dec
add
mov
xchg
call
add
repnz
pop
push
add
and
sub
xlat
repz
cmc
mov
test
xchg
out
cwtl
fldl
fcomip
add
dec
or
jmp
sub
push
out
push
cmp
push
dec
ret
jg
aas
xchg
jmp
bound
sahf
fxch
hlt
xchg
lcall
scas
cmpsb
pop
xor
faddp
xor
dec
js
movsb
push
in
pop
movd
sbb
adc
fcom
inc
int
test
xor
out
or
pop
jno
inc
scas
in
push
rcll
mov
or
cwtl
inc
sub
pop
push
adc
in
xchg
cmp
sub
repz
ret
mov
je
push
or
andl
inc
jb
ret
data16
je
mov
mov
f2xm1
inc
xor
adc
pop
fnop
sbb
mov
rol
and
in
xchg
fsubrs
lcall
xor
sub
add
cltd
test
pusha
arpl
mov
jmp
mov
or
or
mov
xchg
fucomp
lea
pop
hlt
je
lahf
jne
mov
jbe
adc
arpl
lods
inc
xchg
mov
and
push
movsb
in
mov
test
cmp
adc
into
pop
adc
jge
in
pop
adc
lcall
cs
jb
or
adc
xchg
scas
adc
sbb
shl
sub
mov
jecxz
pop
xor
in
aaa
push
jl
int3
sbb
stos
add
mov
cwtl
rcr
pop
lea
stos
mov
and
mov
inc
inc
lods
adc
enter
cli
push
adc
rolb
xor
mov
push
jo
mov
mov
ja
lret
sbb
and
ss
adc
mov
scas
ficoms
xor
inc
mov
repz
in
pop
mov
dec
xchg
pop
xor
cld
fnstenv
cmp
enter
sbb
xchg
gs
ss
cmc
fisttpll
or
mov
add
jecxz
dec
or
pop
aam
jecxz
add
mov
leave
adc
jmp
sub
mov
ljmp
test
push
inc
cmpsl
je
ficoml
inc
movb
in
or
movsl
pop
pop
jg
fldt
js
jbe
cltd
pop
in
adc
sub
in
push
fistps
in
mov
jl
lods
pop
aam
jmp
mov
adc
dec
sarl
out
pushf
loop
and
test
out
out
dec
cmp
icebp
pusha
das
lret
dec
xchg
leave
push
fistpl
inc
inc
push
test
xchg
jo
dec
test
enter
pop
mov
xchg
jb
cmc
bound
mov
imul
sbb
test
cltd
or
or
add
lret
push
adc
mov
or
cmp
jo
xchg
cmpsb
ret
adc
jmp
test
cmp
shlb
push
or
cld
push
sub
add
dec
sub
mov
dec
push
addr16
movsl
shlb
dec
sub
sbb
fists
sub
das
mov
test
pop
jnp
cwtl
loope
mov
sub
in
inc
mov
fnstcw
cltd
shll
sbb
sarl
push
jge
lea
sbb
hlt
test
pop
icebp
jo
inc
jle,pt
aaa
dec
enter
xlat
cmc
push
or
jecxz
lcall
sbb
sbbb
loopne
cs
xor
jge
shlb
test
pop
rolb
lcall
mov
and
sub
jmp
sub
or
push
fidivl
jnp
pop
cmpsl
mov
xor
outsb
sbb
dec
ret
adc
inc
addr16
mov
out
mov
mov
data16
mov
push
pop
pop
arpl
jecxz
dec
xchg
lods
insl
dec
or
mov
xchg
or
push
shlb
rcll
jl
adc
mov
mov
idiv
xor
es
cmp
mov
inc
arpl
sub
loop
sbb
les
lahf
je
xchg
stos
in
test
stc
mov
lret
jl
adc
mov
inc
mov
mov
nop
outsl
jo
fstps
xchg
out
lret
mov
idiv
loop
and
iret
xor
mov
cmp
loopne
jb
out
cmp
ljmp
mov
pop
lahf
sub
jmp
push
in
rcpps
xor
dec
icebp
cld
sub
aaa
rclb
cmpsl
pop
and
int3
fwait
hlt
jg
cmp
and
push
fldt
cmp
hlt
pop
or
insl
pop
mov
clc
sbb
xchg
popl
ret
adc
bound
adcl
out
pop
sub
add
shll
jle
ret
imul
xchg
vpcmpeqw
push
mov
je
xchg
inc
sub
jo
xor
popa
shll
push
arpl
popa
enter
xchg
movsl
roll
gs
add
mov
lea
cmp
pop
fists
cmp
scas
mov
in
ret
push
shrb
fadd
pop
or
ret
shlb
push
lahf
in
push
lea
xor
push
or
xor
mov
xchg
pushf
ret
data16
push
jno
fimuls
nop
clc
cmpsb
ljmp
xor
jg
sti
xchg
dec
je
aas
ja
out
mov
scas
aaa
sbb
lret
dec
lods
je
push
cmpb
mov
mov
push
pop
sbb
pop
movsl
rcrl
sarb
jge
aam
ljmp
jbe
xlat
out
sarl
lods
sbb
stc
cmpsl
scas
xor
cmp
mov
and
sub
and
mov
and
push
repz
jnp
adcb
js
and
outsb
mov
sub
rcrb
cli
lea
in
mov
std
lahf
ss
scas
mov
ffreep
jbe
dec
add
add
scas
sub
stc
iret
scas
pop
scas
cmp
jl
inc
clc
pop
pop
or
jnp
int3
jns
rcl
sbb
fsubrl
or
pop
fbld
stos
cmp
addr16
pop
pop
repz
mov
icebp
test
lahf
stos
xor
enter
lock
adc
and
nop
mov
push
sbb
int
and
push
pusha
dec
movsl
xor
lahf
mov
pop
lret
sbb
mov
clc
mov
or
inc
out
rcr
out
test
dec
bound
std
cmp
nop
xchg
jnp
fldl
inc
test
fdivrl
mov
and
inc
push
jle
inc
test
ss
popa
push
test
jmp
sbb
sub
push
xchg
cmc
adc
xchg
repz
repnz
fiadds
js
out
fimuls
xor
enter
insl
frstor
imul
addr16
jnp
add
popf
fiadds
add
sbb
adc
mov
addr16
mov
inc
lret
imul
loope
xor
mov
out
jns
je
mov
xorb
mov
inc
adc
pop
aad
inc
jmp
out
arpl
pop
daa
mov
fs
lea
je
daa
mov
cmp
fidivrl
inc
cmpl
test
xorl
je
out
hlt
aam
mov
xor
or
orb
cmp
ret
push
jb
loope
jge
cli
xor
lcall
adc
inc
sbb
incb
inc
jns
daa
loop
call
sub
enter
out
jnp
mov
lret
pop
pusha
xor
cltd
push
or
mov
test
cli
fs
cmp
jo
iret
leave
orb
fisubs
ret
sub
jae
shrl
adc
dec
mov
sub
cmpsb
sbb
hlt
inc
sbb
cs
dec
push
lret
and
xor
mov
mov
pusha
cs
in
and
subl
xchg
ja
adc
jl
inc
lea
rcll
mov
mov
popf
mov
jns
sub
and
cmc
xchg
dec
inc
cltd
sti
scas
pop
daa
rcrb
ljmp
mov
jp
lahf
push
fldt
scas
cli
inc
stc
shrb
sbb
aad
mov
pop
lahf
pop
xor
dec
dec
or
push
cld
pop
push
push
and
cwtl
jp
je
and
xchg
pop
push
sbb
gs
lcall
stos
xlat
jmp
scas
push
in
and
out
xor
call
inc
adc
inc
push
in
cvttps2pi
popf
mov
pop
fsubs
lds
adc
xchg
inc
mov
cs
or
sbb
mov
mov
test
test
push
lret
dec
jp
adc
or
cmc
pop
jge
in
cmp
lcall
xor
adc
add
cld
mov
and
mov
cmc
pop
decb
enter
aad
inc
or
sub
mov
ret
std
jb
push
adc
in
scas
out
jae
xor
imul
dec
push
cmpsb
cmpsl
stos
xchg
jno
adc
jno
outsb
dec
cs
call
ss
xlat
imul
jnp
mov
mov
jns
fdivs
pop
dec
negl
je
lcall
sbb
ljmp
dec
and
loopne
pop
adc
pop
cmp
jecxz
inc
and
sub
scas
arpl
mov
sbb
push
enter
bound
push
shll
mov
mov
xchg
jne
mov
stos
cmpsl
mov
jle
push
mov
in
test
int3
ficomps
mov
add
push
movb
dec
adc
add
xchg
daa
subb
add
notb
fildl
test
insb
movsl
push
cmpsb
lods
push
das
sub
dec
iret
inc
js
pop
je
sub
cmpsb
cltd
jne
jle
insl
popf
or
jge
inc
bound
stos
in
push
mov
or
cmp
imul
mov
imul
and
test
arpl
aad
ljmp
outsb
ffreep
push
or
xor
scas
cmp
add
filds
outsb
pop
cli
cmp
mov
je
mov
mov
scas
inc
fwait
int
pop
ficoml
mov
lock
mov
test
iret
fldt
and
outsl
inc
cwtl
int3
aaa
push
sbb
scas
fwait
stc
mull
lahf
mov
pushf
ret
add
cmp
pop
push
pop
fildl
or
mov
add
je
outsl
push
stos
pop
leave
neg
push
in
adc
out
jp
dec
mov
iret
pop
and
inc
cmp
loop
lret
popa
ss
mov
mov
jg
dec
xor
nop
leave
and
das
mov
dec
mov
xchg
and
add
lret
imul
popa
sahf
mov
idivb
cmpl
jle
add
pop
push
pop
xchg
push
repz
push
iret
sarb
sub
movsb
nop
mov
adc
sarb
jl
sbb
cwtl
inc
iret
lret
mov
aam
fisubrs
lahf
xchg
and
loopne
mov
sub
dec
xlat
mov
fldenv
sub
push
xchg
or
jb
push
mov
std
jb
and
and
push
cld
add
stc
pop
xchg
xor
or
inc
mov
sub
mov
ljmp
pop
xchg
push
fadd
cltd
aam
and
aas
fimuls
add
fucomip
inc
sub
outsl
mov
in
enter
ds
mov
mov
mov
dec
sub
fistpl
or
push
push
cwtl
mov
sub
push
mov
xorl
js
fdivr
cmp
xchg
inc
pop
push
icebp
call
xchg
mov
inc
cs
lds
scas
mov
lds
mov
test
pushw
fdiv
add
push
out
adc
mov
xor
clc
cmp
mov
jmp
dec
adc
and
xor
jg
jnp
dec
cmc
cli
push
movsb
xchg
icebp
inc
sub
xorb
lahf
mov
push
xor
push
xchg
push
sub
lahf
ljmp
jo
fildl
dec
mov
movsb
aad
pop
jmp
cmpsl
es
add
flds
xor
xchg
andb
pushl
xchg
add
mov
mul
sti
sti
push
mov
mov
out
movd
add
nop
iret
ret
mov
shrl
out
sub
aad
imul
or
cmp
scas
js
int
xchg
jnp
mov
aas
ret
sbb
xchg
movsl
mov
lds
pop
test
inc
cmp
daa
and
and
sbb
nop
and
js
push
cmpsl
sahf
push
sub
je
push
push
cmpsl
push
gs
mov
xchg
mov
pop
ja
test
mov
push
mov
jl
push
cmp
test
icebp
scas
jo
insb
aad
push
jl
sahf
mov
dec
push
rorl
mov
dec
jae
jle
ljmp
xchg
mov
push
jne
mov
cs
or
dec
cmp
mov
add
mov
dec
aad
inc
or
sbb
cmpsl
insl
pop
dec
stc
mov
fimull
rorl
cmp
add
cmp
jle
out
aam
fcomi
daa
ljmp
or
pop
lock
pushl
xchg
inc
mov
jg
xor
mov
jmp
rorb
aas
mov
pop
icebp
sbb
aad
fldt
dec
dec
in
in
loopne
mov
dec
fsubrs
addl
inc
jo
aas
mov
sub
sbb
xchg
cmp
dec
jb
inc
push
mov
xchg
mov
sub
icebp
jo
stos
aam
pop
sub
cmp
pop
pop
push
sbb
dec
fidivl
mov
daa
test
int
lea
bsf
int3
sbb
pop
push
out
pop
movsl
lods
cs
int
gs
jle
pushl
mov
stos
mov
mov
popf
add
das
icebp
pop
aaa
jns
es
sbb
fcmovne
jge
xor
mov
mov
in
push
add
mov
imul
rcl
outsb
aas
dec
pop
dec
insl
dec
mov
push
and
mov
in
lods
inc
or
cmpsl
mov
jb
das
ja
or
jg
jge
xor
sti
mov
jge
outsb
xor
mov
xchg
data16
fcmovne
rcrl
ds
mov
fidivrl
shll
cltd
sarl
jnp
adc
or
add
pop
xchg
rorb
adc
dec
fidivrs
test
aam
or
pop
nop
aam
push
mov
outsb
jle
xor
push
xor
sti
mov
dec
xor
mov
subl
scas
fcomi
inc
test
dec
in
subb
in
sbb
xchg
adc
aaa
negl
lcall
mov
lcall
movsl
mulb
mov
pop
outsl
shrl
sbb
cmc
out
lds
cld
test
jle
xor
call
test
mov
lea
pop
sahf
sub
js
movsl
fldl
cmp
push
pop
sbb
mov
fsub
hlt
ja
out
lods
mov
ret
pusha
jmp
dec
fwait
subb
pop
jns
jl
jmp
xchg
xlat
loope
mov
cmp
xor
jl
jns
repnz
cs
sbb
stc
loop
rolb
dec
mov
mov
scas
lcall
out
stos
test
lcall
add
in
or
mov
xor
jl
sub
jp
push
nop
repz
sub
stos
repz
add
jae
rorb
lock
in
lret
xchg
cmp
subl
dec
jp
push
pushf
or
mov
ds
subl
lret
test
shlb
adc
dec
leave
or
sub
adc
adcl
adc
sbb
or
jp
lods
inc
xchg
sbb
popa
out
fs
jns
sbb
addr16
les
in
push
es
mov
xor
insb
and
lods
jno
dec
dec
vprotd
bound
add
sub
mov
call
addr16
mov
fbstp
pop
mov
push
push
das
rcrb
and
sub
push
mov
pop
pop
std
insb
inc
dec
inc
and
and
in
and
xor
pop
je
push
mov
mov
addr16
push
pop
addr16
bound
cmp
push
adc
sub
sub
lods
pop
adc
jno
ja
fisubrs
addl
daa
movsb
pop
in
data16
negl
and
mov
sub
jl
push
sar
out
movsb
add
mov
fildl
inc
adc
xchg
dec
push
sbb
cmp
adc
test
sub
jle
sbb
mov
pop
test
cmc
negb
nop
jns
cmp
xor
pop
xchg
loop
xor
lcall
bound
add
xchg
adc
loopne
mov
adc
icebp
data16
and
loope
fcomps
dec
orl
dec
cmp
mov
lahf
lret
cmc
xchg
jle
xor
sub
enter
aaa
push
xchg
and
sahf
sbb
cmp
stos
scas
lods
shr
imul
dec
int
push
and
jns
loope
fidivrl
scas
cwtl
es
add
add
cmpl
mov
xchg
or
inc
and
imul
lods
push
push
loop
jle
fwait
rorl
shl
xor
sbb
mov
dec
addl
jmp
adc
lahf
inc
out
inc
ss
xor
push
push
jns
and
dec
jae
sbb
mov
testb
mov
mov
sti
mov
mov
jle
rcrb
call
or
test
pop
or
loop
pmulhuw
xchg
inc
pop
and
push
sbb
aaa
les
push
dec
inc
jnp
and
arpl
test
lods
aas
dec
inc
std
enter
jnp
inc
pop
xchg
subb
insb
push
xor
stc
rcrb
imul
or
add
outsl
inc
push
inc
mov
stos
pop
mov
mov
mov
sub
out
adc
mov
jp
pop
add
xchg
and
lods
imul
mov
mov
cmp
inc
jle
inc
aaa
out
inc
rcl
iret
jne
mov
xor
xlat
xchg
mov
rclb
push
sqrtps
adc
scas
or
or
fnsave
mov
push
xlat
or
push
sbb
es
cltd
pop
sub
mul
jnp
jno
movl
sti
add
mov
pop
push
mov
arpl
add
mov
aas
pop
pop
loopne
and
and
pop
fdivs
push
add
lret
in
or
or
xchg
mov
mov
inc
jbe
in
and
shl
pop
inc
int3
arpl
and
faddl
pop
mov
inc
pop
and
jg
faddl
and
insl
cmpsl
cmp
out
out
fsts
dec
sub
cld
movsb
mov
fsubp
sub
movsl
xchg
xor
into
inc
mov
faddp
lods
rclb
fsubs
inc
andb
inc
sbb
repnz
arpl
fs
out
arpl
add
loopne
adc
mov
or
je
mov
jecxz
adc
int
ljmp
and
nop
cmpsb
cli
add
or
xor
jmp
fwait
push
lods
test
and
cwtl
pop
xchg
and
jnp
int3
shrl
testl
fcompl
xchg
adc
into
mov
mov
dec
out
mov
mov
fiadds
fldl2e
shll
pushf
scas
xor
loop
dec
push
sbb
out
add
insl
xchg
lcall
add
jae
and
fwait
add
jo
int3
daa
cmpsb
int3
shll
cmp
cmp
and
cmc
pop
dec
and
sub
fiadds
mov
adc
add
dec
int
mov
icebp
fimull
pop
adc
mov
cmc
bound
cli
push
dec
es
dec
mov
shrb
push
add
cmp
popf
movsb
or
dec
inc
outsb
pop
pop
or
fstl
pop
cmp
mov
jbe
push
cld
mov
rcrb
mov
push
adc
stos
nop
es
cli
pop
xchg
inc
imul
pop
push
cmpsb
pop
and
add
sub
gs
and
sub
mov
xor
ret
test
ljmp
test
test
or
leave
outsb
and
jo
sti
pusha
imul
adc
loop
and
jbe
jmp
push
ficompl
mov
mov
cmp
adc
mov
dec
add
loopne
out
ds
lahf
jge
mov
loope
jp
in
in
loopne
xchg
lods
ret
dec
push
aad
sahf
mov
or
mov
pop
ljmp
lds
dec
xlat
ja,pt
jb
ja
jmp
fldcw
scas
adc
pop
lods
cmp
mov
add
aam
xchg
cmp
jne
pop
add
ret
mov
mov
test
cs
sub
ds
sub
sub
pop
stc
nop
add
pushf
test
pop
idiv
in
xchg
mov
pop
fisubs
in
lcall
bound
jae
inc
cli
loopne
pushf
rorl
ljmp
mov
xchg
xchg
xchg
xchg
pop
mov
xor
jg
iret
push
mov
and
pusha
jmp
and
call
jbe
mov
and
idivb
sbb
out
fcoml
aas
pop
adc
inc
rorb
pop
push
data16
in
pop
xor
roll
push
push
lods
mov
std
dec
xlat
adc
f2xm1
mov
mov
and
push
loope
loop
andl
or
cli
sub
push
movsb
push
pop
xor
popl
mov
push
add
sub
test
sub
pop
lahf
jae
ss
lret
add
fldcw
leave
mov
movsl
pop
sbb
repnz
int
add
and
outsb
cmp
fldenv
in
mov
out
dec
ret
push
test
mov
and
dec
sub
test
leave
adcb
mov
test
sahf
rcrl
mov
push
push
xlat
sahf
in
xchg
int3
xchg
pop
xchg
pop
pushf
inc
daa
jmp
loope
into
push
push
decl
mov
or
and
loop
sub
repz
jl
dec
aaa
pushf
mov
push
insb
xchg
xor
test
lret
xor
loop
push
mov
sbbl
pop
aad
outsl
pop
jbe
jmp
and
nop
insb
jbe
jo
add
ret
push
lods
jb
scas
mov
cltd
imul
sti
out
jl
aas
leave
inc
xchg
mul
jle
loope
jg
outsl
push
gs
cltd
add
and
and
mov
mov
icebp
and
cs
repz
lea
push
in
mov
cli
adc
punpcklbw
mov
push
xor
cmp
push
mov
mov
fnstsw
mov
sub
loope
stc
std
std
add
add
lea
or
pop
repnz
adc
sbb
inc
daa
mov
ret
loop
shlb
and
lock
cmp
push
dec
xchg
xchg
shll
and
out
arpl
cmp
outsl
mov
pusha
cmc
inc
cmpsl
ds
scas
mov
jbe
outsl
fadd
inc
ret
fwait
scas
stos
enter
mov
cwtl
insl
sti
xlat
ret
mov
xchg
add
daa
jae
inc
mov
fisubrl
fisttpll
pop
push
daa
dec
inc
dec
sbb
inc
or
mov
imul
les
cs
mov
mov
js
ret
cli
movsl
mov
mov
mov
push
dec
jmp
fstpl
pop
push
inc
pop
and
sub
add
mov
sub
inc
xchg
and
int
test
mov
repnz
stc
pop
pop
xor
pop
jbe
aaa
and
or
push
in
orb
gs
clc
imul
mov
mov
push
mov
adc
out
cmpsb
sbbl
test
fnsave
push
cld
in
repz
jne
and
pop
or
cmp
inc
popf
mov
dec
push
lods
mov
mov
sub
sbb
pop
pop
xor
add
jp
mov
xor
lods
mov
imul
cwtl
in
add
loopne
mov
test
fildl
sbb
scas
mov
scas
lods
jg
or
fldl
add
int
add
imull
stos
mov
fsubr
mov
push
sub
dec
outsb
pop
sti
xor
jbe
or
in
movsl
push
lock
jmp
add
cmpsb
test
leave
test
pop
xchg
cmp
xchg
dec
mov
aam
lret
lcall
in
fs
insl
iret
std
xchg
push
stos
mov
push
sti
hlt
call
cwtl
lods
push
mov
aad
dec
js
pop
in
push
loope
mov
ja
dec
jno
pop
js
cmpsl
pop
mov
mov
rorl
cs
cmp
cli
dec
mov
ret
scas
lods
sub
mov
repnz
lock
mov
inc
pop
mov
outsb
mov
cmp
or
mov
push
dec
pop
jb
call
mov
scas
jl
jg
lea
sub
pop
incl
popf
testl
mov
push
bswap
lods
xor
and
outsb
mov
push
pop
sbb
adc
jnp
and
pop
mov
enter
hlt
test
fdiv
shlb
cmp
push
adc
adc
xchg
lahf
aas
test
xorb
push
and
mov
add
jns
ret
sbb
mov
jb
xor
jecxz
mov
stos
iret
adc
push
mov
icebp
hlt
fs
cld
add
das
incl
and
outsl
aas
es
lea
popf
fs
ljmp
pop
mov
sbb
inc
sub
movsl
xchg
adc
dec
pop
and
loopne
je
inc
sub
mov
mov
add
ret
dec
dec
fwait
data16
mov
lret
xchg
mov
scas
lods
push
and
add
in
cmp
stos
aad
incb
inc
in
call
loope
or
inc
and
inc
xchg
lea
push
cld
into
mov
daa
into
add
pop
fdivrs
jo
lahf
inc
out
fwait
xchg
iret
adc
mov
xchg
sub
sub
pop
fsubrs
jl
mov
adc
or
ficoml
insb
dec
std
mov
jg
adc
lods
pop
xchg
mov
xor
push
cltd
je
pop
cli
sbb
jnp
push
movsb
push
out
xorl
out
xchg
jne
es
push
and
xor
ss
sbb
shl
sti
sbb
push
sbbl
cmp
jg
nop
int3
stos
adcl
cmpsl
cltd
mov
or
jne
fcomi
xor
adc
nop
adc
call
fidivrl
sarl
clc
mov
mov
cmp
sub
fbstp
mov
fldl
pop
sbb
dec
pushf
data16
and
hlt
call
fcmovu
inc
pop
push
imul
ficompl
mov
les
fwait
lock
das
jg
std
das
fcoml
sub
push
push
mov
lret
subb
lds
mov
and
jmp
push
fwait
sub
lcall
adcl
out
clc
fisttps
fidivrs
int
inc
dec
iret
jns
testb
push
sarl
mov
adc
ljmp
fs
out
outsl
sub
fsts
or
rcrl
test
jno
or
cltd
jge
adc
int3
adc
popa
pop
inc
add
in
push
add
sahf
imul
sahf
sbb
mov
sbb
sbb
jle
movsl
or
xchg
xor
cmp
xchg
int3
test
loope
cmp
xlat
jmp
mov
adc
cmp
jbe
mov
lret
inc
push
mov
out
outsl
shr
iret
fldenv
or
fsts
fcoms
stos
lds
wrmsr
push
lods
lret
hlt
gs
sub
pop
mov
test
mov
pop
int3
mov
outsb
pop
out
rcl
push
loopne
jns
jg
gs
mov
push
adc
addb
outsl
sbb
ss
sti
mov
lods
sub
fdivrp
and
mov
jp
sti
insl
dec
or
inc
or
cmp
dec
and
dec
jb
xchg
jae
xor
jnp
cmp
mov
push
xchg
in
rorb
sub
pop
rol
lahf
jbe
mov
push
pop
test
xchg
sbb
xor
out
push
push
and
inc
faddl
test
in
lcall
fdiv
xchg
mov
push
mov
adc
pushf
nop
idivl
pop
add
jle
lods
in
stc
dec
sti
nop
or
outsb
dec
push
sbb
add
lds
test
andb
mov
sahf
enter
sub
pop
shrl
push
icebp
in
dec
sub
outsl
mov
int
mov
call
into
adc
sbb
xor
xorb
in
rclb
jne
test
jb
push
je
cmp
mov
movsl
mov
ljmp
sub
pop
aam
sahf
dec
add
fdivs
pop
dec
jb
jp
imul
dec
push
xchg
xchg
sbb
sbb
sbb
pop
mov
and
inc
add
sbb
dec
jbe
sub
jno
cltd
insb
rcrb
or
and
loop
imull
inc
pop
cmp
xor
and
jae
out
fistpl
ja
pushw
jle
push
jae
adc
inc
scas
push
mov
xor
sbb
repz
daa
mov
sahf
insb
jns
stc
jmp
decb
cwtl
in
fwait
icebp
aas
jmp
xor
xchg
adc
dec
cmp
push
sub
pushf
stos
mov
xchg
call
lds
lock
xorl
mov
sbb
lcall
xchg
pop
sbb
mov
shlb
or
lcall
sub
lret
rcl
jne
adc
add
sbb
ret
loope
push
inc
es
push
inc
rcll
xchg
call
jg,pt
pop
add
pop
pop
dec
jbe
xor
mov
dec
adc
repnz
les
bound
cmp
dec
clc
dec
xor
mov
jo
dec
inc
pop
arpl
inc
sub
sti
add
adc
push
adc
loop
mov
mov
shll
out
cmc
sbb
ds
push
iret
mov
cmc
divb
dec
lret
rcll
scas
add
mov
xor
iret
int
and
mov
mov
jecxz
push
xor
adc
inc
push
xchg
aaa
xchg
popf
sbb
sbb
xchg
popa
cli
sub
outsl
out
popa
les
pop
nop
js
mov
sub
push
bound
stc
push
push
cmp
test
test
mov
cmp
fsubrl
ret
lret
xlat
push
xchg
stc
scas
ja
insb
orl
int
jp
int3
insl
lea
int3
stos
cmpsl
and
aaa
shll
push
mov
dec
aad
sub
cmp
bswap
jg
push
rcll
in
cmpl
and
scas
push
push
inc
jle
inc
mov
clc
fists
je
mov
cmc
pop
push
mov
xchg
fnop
jmp
add
push
fbstp
iret
push
push
inc
aam
idivb
sub
cwtl
mov
sti
push
lret
mov
mov
int3
and
imul
push
sbb
mov
lret
push
cmpsl
addr16
sahf
es
aas
mov
loopne
adc
add
push
fadds
icebp
daa
les
or
enter
cmp
inc
pop
cmp
jmp
fsubrs
imul
xchg
nop
int3
jae
out
mov
fidivs
movsb
xchg
push
gs
out
inc
shll
cmp
arpl
and
dec
iret
jmp
sahf
shll
jae
push
pop
mov
pop
lds
mov
inc
cli
test
dec
rorb
out
and
repnz
sbb
fbld
inc
inc
adc
push
fnstcw
fwait
mov
test
fwait
xchg
or
mov
sub
aad
test
pop
xchg
cmc
add
fadds
mov
out
je
jno
mov
sub
pop
test
sbb
nop
and
rorl
push
hlt
stc
fdivl
lock
xchg
cwtl
into
ljmp
mov
mov
mov
mov
iret
jmp
sub
adc
js
in
aaa
or
lods
pop
adc
icebp
fnstenv
jns
nop
cmp
cmp
or
mov
mov
pop
data16
push
inc
gs
mulb
loop
out
cmp
mov
cltd
imul
mov
sbb
cmp
xor
or
hlt
dec
xchg
jg
jne
sbb
cmc
cmp
and
test
int3
data16
adc
inc
add
lods
lahf
mov
lods
mov
add
scas
loope
and
and
dec
jmp
push
inc
mov
add
push
inc
lcall
imul
testl
mov
cmp
fidivrl
push
dec
jg
inc
mov
jle
fsubs
jp
test
add
stos
popa
out
ds
xchg
xchg
adc
jbe
pusha
imulb
xchg
loope
enter
out
and
clc
int3
repnz
outsl
into
repnz
xor
mov
jne
stos
mov
shlb
xor
cld
and
aad
jns
push
sub
push
mov
data16
sahf
inc
add
push
jb
sbb
jno
and
fstl
insb
mov
add
dec
push
add
addl
shrb
sahf
xchg
mov
push
mov
cld
out
mov
jp
fmulp
hlt
jge
xor
popa
adc
pushf
or
push
dec
pop
lds
movl
fimuls
adc
pushf
xor
in
jle
xor
std
sbb
stc
cmc
add
cld
cmp
mov
repnz
mov
outsb
mov
out
ds
push
or
rcll
iret
cmp
pop
lods
jns
sub
iret
push
mov
or
or
ret
stc
push
push
push
xchg
hlt
scas
add
ds
cmp
jg
aam
hlt
lret
push
andl
and
and
jbe
lock
clc
clc
mov
addr16
pop
call
sub
mov
out
jge
ds
adc
or
jae
lahf
cmpsl
sub
mov
adc
cwtl
inc
push
or
dec
out
pop
rorl
insl
jecxz
lcall
xor
ret
mov
adc
addr16
add
aaa
lock
sahf
aad
adc
xchg
gs
lcall
sub
stos
das
sub
push
hlt
jae
fistl
add
mov
and
xor
inc
mov
jge
addl
xor
mov
push
mov
mov
xchg
sbb
sub
stos
repz
nop
add
loope
add
shlb
aaa
xor
pop
jmp
unpckhps
loop
mov
cmp
dec
out
pop
lahf
in
xchg
mov
sbb
xor
sub
or
stos
inc
stos
aad
mov
fbstp
or
shrl
sub
lret
or
or
fsubl
cmp
mov
xor
test
push
jmp
ss
pop
insl
push
icebp
jl
sub
xchg
jp
icebp
mov
es
mov
xor
sub
cmovo
cld
xchg
mov
pop
rcll
jns
jns
cmp
add
mov
pop
jo
pop
mov
out
repz
xor
dec
push
incl
inc
adc
inc
stos
mov
pushf
inc
nop
negl
mov
jae
dec
jp
outsl
outsb
hlt
lcall
les
aad
clc
sbb
cmp
sub
adc
mov
in
test
sti
fidivrl
pop
sahf
push
adc
or
jo
mov
pop
inc
sub
idiv
adc
bnd
pusha
jle
loop
and
sbbl
push
push
pop
mov
push
insl
cli
xchg
call
rcr
xor
int3
adc
mov
jae
inc
stc
pop
mov
fistpll
xor
mov
sbb
add
adc
pop
adc
in
and
cwtl
sub
or
out
arpl
mov
movsl
inc
jne
mov
dec
aas
cmpsb
or
or
rolb
sbb
cmp
xor
inc
push
mov
aas
movsl
lret
loop,pt
ret
jmp
sub
adc
lcall
ret
loop
sarb
mov
xchg
out
inc
fsubrs
xchg
in
roll
mov
repnz
add
add
addb
leave
loopne
mov
xchg
out
mov
stos
mov
and
adc
sub
and
fdiv
fldenv
call
arpl
push
dec
lcall
cli
cwtl
test
push
add
push
push
xor
mov
sbb
imul
cmp
xor
fs
out
popf
test
push
lcall
cmpsb
lret
arpl
dec
fs
test
fcmovnbe
mull
out
push
out
imul
xor
sub
push
add
add
xchg
inc
imul
loop
ret
shrl
cmp
leave
insl
out
lret
add
push
xchg
out
mov
inc
pop
pop
outsl
mov
and
and
push
xlat
push
xlat
test
adc
hlt
sub
bound
mov
sarl
mul
inc
js
mov
mov
pop
jp
inc
bound
push
lret
das
imul
sbb
std
cmpsl
xor
hlt
clc
jecxz
gs
jmp
test
jae
sbb
aaa
xabort
adc
xor
pop
or
xchg
mov
pop
loop
sub
pop
xor
push
or
mov
out
xor
add
xchg
mov
add
sbb
inc
and
adc
in
repz
cmp
xchg
push
imul
or
cmp
mulb
pop
sub
andl
rorl
sbb
test
sarb
push
jg
push
mov
pop
fnstsw
mov
cmp
cmpsb
push
cwtl
adc
xor
cmpsb
cmp
inc
cmc
cmp
or
xor
push
cmp
cmp
and
push
mov
mov
test
dec
ds
xchg
cld
mov
pop
enter
inc
stos
lea
insl
mov
jae
roll
mov
cmp
adc
dec
ljmp
adc
imul
or
xlat
cltd
cmp
mov
fcmovnu
dec
in
stos
xchg
int
loope
ret
cmp
add
and
push
and
shll
adc
subb
and
adc
inc
arpl
rcr
push
mov
scas
add
imul
lds
dec
pop
xchg
cmpsl
gs
andb
insb
dec
or
xor
mull
lret
add
push
mov
arpl
lock
stos
jnp
push
pop
or
inc
in
enter
test
into
sub
cmp
push
pop
pop
pusha
dec
jle
mov
mov
ss
xchg
dec
push
lock
andb
popf
jle
js
inc
mov
adc
xor
sbbl
cmp
aam
fidivl
sub
ret
push
les
negl
xchg
insb
pop
inc
mov
jle
out
fstpl
out
ljmp
pusha
jne
ret
cwtl
jns
push
or
jne
xor
push
jbe
dec
nop
loop
adc
sbbl
fiadds
jg
test
pop
or
push
sbb
rcll
fwait
mov
outsb
lahf
fdivs
or
sub
sti
pop
jmp
push
filds
orb
shlb
stos
nop
pop
cmpsl
mov
outsl
sti
jnp
adcl
add
pop
inc
sbb
adc
les
mov
sub
test
int
and
std
insb
lahf
cmpsb
les
in
and
lds
call
mov
inc
mov
data16
add
and
inc
out
test
jl
cmpsb
pop
jo
mov
dec
xchg
or
sbb
cmp
pop
ror
js
push
aam
cmpsb
clc
dec
inc
xchg
inc
test
push
xchg
mov
in
and
pop
aaa
inc
adc
movl
sbb
adc
outsl
lods
cwtl
mov
scas
pushf
or
sbb
mov
loop
shll
jle
pop
push
int3
and
test
push
sub
push
dec
and
xor
pop
mov
cmpsb
ret
addr16
lock
fs
cli
mov
stc
iret
data16
and
data16
xorb
popa
in
push
fs
mov
mov
popf
sbb
push
insl
imul
sbb
ja
or
loop,pn
add
aas
rcrb
clc
pop
pop
push
movsl
push
jl
sub
xchg
shrb
sub
mov
push
sarl
ret
fisubrs
pop
repz
bound
movsl
mov
pop
nop
inc
sbb
xchg
aaa
jp
pop
fcoml
push
shrl
or
leave
lods
inc
adc
inc
jne
and
dec
jb
pop
adc
sub
out
mov
push
jg
sub
loope
sub
xchg
inc
fs
ror
popa
adc
sub
shrb
mov
je
and
push
rcrl
add
aam
lcall
adc
mov
jns
rcl
and
dec
mov
andb
xchg
shlb
iret
jmp
inc
pop
inc
call
sbbb
mov
push
mov
out
add
ja
inc
xchg
jge
jnp
and
pop
push
clc
mov
cwtl
testb
dec
stc
add
lret
lahf
inc
popf
xchg
in
jno
aam
dec
cli
jb
in
bound
pop
inc
xchg
loop
neg
sbb
xchg
insl
movsl
cmpsb
ja
mov
or
push
nop
into
leave
shll
loope
insb
push
aas
addr16
pop
outsb
jmp
jmp
sbb
jae
jo
loop
sub
push
pop
xor
aas
xchg
cli
dec
add
sbb
repnz
sbb
adc
pop
arpl
test
cmp
xchg
stos
mov
lods
xor
sbb
shrl
in
and
cmp
xor
addr16
and
jmp
sbb
test
ds
cmp
mov
xor
cmp
in
jae
lods
les
mov
lea
enter
and
xor
into
add
mov
add
xor
fidivs
xchg
stos
inc
dec
addl
lock
pusha
sub
inc
xor
push
adc
stos
cld
cld
bound
adc
bnd
xchg
and
sarl
mov
aam
arpl
cltd
repz
jb
cltd
mov
cmc
les
outsb
xchg
insl
scas
or
in
imul
xor
lahf
test
sub
mov
cmp
adc
das
cmp
dec
ds
xchg
xchg
adc
lret
je
xor
pop
aas
ljmp
sarb
lret
xor
leave
inc
int
call
out
stc
xchg
mov
lret
sub
mov
mov
sbb
fsub
stos
shll
test
fsubrp
shll
stos
xor
jmp
push
mov
cltd
in
xor
loope
stc
aaa
push
add
cs
fidivrl
mov
dec
xchg
inc
inc
mov
inc
mov
sbb
mov
or
mov
fnstenv
cmp
or
jnp
push
sbb
add
jg
int
popf
xor
insl
ficoms
mov
sub
xchg
lea
cmp
push
push
test
sub
hlt
push
or
jb
out
inc
jne
mov
jns
pusha
mov
mov
and
jb
sbb
out
insb
call
test
xor
cmpsl
lcall
pop
jecxz
cmp
pop
jmp
gs
fwait
inc
cmp
cld
dec
mov
hlt
loope
dec
outsb
jecxz
loopne
mov
sub
leave
jns
cmpb
or
jo
mov
mov
push
das
pusha
mov
push
mov
lods
repnz
xor
dec
shlb
ret
mov
jecxz
lock
xchg
jl
jge
mov
inc
push
or
push
lret
and
mov
xor
dec
xchg
adc
movsb
pmullw
lods
sbb
in
aam
pop
add
jnp
adcl
lock
push
cmp
cmp
aam
cltd
sub
mov
xor
imul
mov
pop
dec
rcrl
cmp
ror
mov
data16
and
mov
sub
lods
test
push
pop
out
jge
cmp
inc
dec
pop
pop
sbb
sub
xorl
inc
adc
sbb
add
xchg
sub
incl
and
ljmpw
vmulsd
sahf
mov
lea
push
shl
js
xchg
data16
ljmp
jb
mov
cmp
cmp
nop
in
lcall
sub
in
nop
cwtl
insb
decb
pop
ljmp
sbb
mov
lods
js
imul
add
inc
scas
add
inc
adc
pusha
add
inc
adc
xorb
and
inc
push
lods
mov
pcmpeqw
lret
mov
call
fdivl
fwait
arpl
pushf
lods
mov
adc
ret
lods
xchg
jle
sar
mov
and
mov
aaa
insb
lods
and
ljmp
and
imul
icebp
inc
je
sub
inc
les
iret
jg
sbb
lret
sbb
add
xor
pushf
loopne
test
pop
sub
into
add
jp
and
sub
je
lock
jbe
xor
pusha
pop
push
jge
stos
mov
stos
movsb
dec
pop
in
xlat
dec
sti
mov
adc
sahf
jle
lods
inc
rorl
imul
sbb
and
add
in
fcoml
mov
mov
inc
dec
mov
cmpsl
push
and
xor
test
cmpsl
mov
xchg
xor
add
add
and
or
repz
push
jl
add
mov
xor
xchg
jnp
mov
sbb
jl
and
lret
add
sub
jge
fdivs
sbb
add
ffree
mov
push
out
inc
add
cli
sbb
or
test
xor
xchg
mov
sbb
test
mov
rorl
mov
mov
sub
push
adc
mov
mov
cmc
mov
mov
fildl
jbe
imul
xchg
leave
lret
jo
idivb
stos
cld
shll
popf
push
lods
movsl
fucom
xor
lret
nop
inc
das
pop
pop
mov
add
vmovaps
pushf
mov
mov
test
xchg
lods
adcl
shl
and
mov
into
mov
mov
or
sub
add
pop
push
add
aad
jmp
or
out
sub
sbb
jae
inc
aam
jnp
add
mov
mov
arpl
mov
rcl
xor
les
ds
xor
shl
fisttpll
imul
cli
cwtl
lock
adc
xchg
cwtl
mov
adcl
in
testb
add
xchg
or
cmp
imul
insl
pop
add
rcll
add
or
sbb
mov
xor
fldt
push
sub
mov
mov
dec
into
xchg
out
shrb
call
xor
fiaddl
add
fldenv
dec
imul
pop
jae
pop
add
sti
mov
insl
sbb
mov
adc
or
pop
add
fldcw
sub
and
orl
inc
dec
scas
xlat
push
scas
lcall
cmp
popf
movsl
mov
les
add
xchg
jp
and
mov
pop
mov
fcmovbe
mov
bound
dec
shlb
and
mov
jne
aas
jne
or
imul
stos
dec
dec
pop
mov
int3
ficompl
pushf
cs
jmp
aad
cmc
xchg
pop
movsl
mov
xchg
mov
jge
nop
add
cmp
pusha
xchg
cwtl
sbb
jle
stc
xchg
jg
fnstenv
or
movsl
sbb
test
mov
add
or
xor
or
jno
loop
fsubrl
sub
lock
ds
or
or
arpl
icebp
imul
cmpsb
cmp
xchg
add
icebp
rorl
add
fbld
jle
shll
ds
nop
fimull
jp
xchg
sub
lahf
xchg
movsl
push
scas
jmp
push
mov
pop
inc
test
dec
xlat
out
pusha
inc
inc
cltd
pop
sub
and
mov
fstl
movsb
mov
idivl
daa
lds
cmp
mov
mov
sbb
push
out
jbe
mov
mov
in
xchg
push
or
mov
repz
jne
stos
adc
jmp
add
rorb
dec
cmp
sub
mov
pop
test
jnp
adc
mov
sbb
push
xor
in
out
mov
add
cmpl
jns
cmp
and
add
jle
cmp
hlt
and
mov
sbb
and
pushf
movsl
shll
jns
out
xchg
lods
sub
xchg
push
je
les
jne
xor
out
pop
push
scas
mov
or
and
test
cmp
cld
fisubl
adc
sbb
fcompl
shlb
and
mov
xchg
fildl
jo
sbb
adc
sub
pop
jp,pt
scas
dec
or
mov
popf
lret
jg
push
adc
fstpl
adc
mov
aad
pop
dec
sub
pop
insl
jne
ja
gs
cmpsl
sub
jo
mov
in
cmp
xchg
les
aad
clc
pop
ret
clc
ret
xchg
xlat
popa
cmp
dec
cli
mov
mulb
push
pop
push
iret
push
jecxz
cmp
loop
push
add
nop
adc
rcr
int3
mov
dec
je
pop
jg
add
push
pop
mov
xchg
test
sbb
mov
in
mov
sti
xor
daa
or
adc
jl
rorb
xor
dec
aam
mov
jne
ret
sahf
jmp
jmp
sbb
imul
mov
bound
jl
push
pop
in
or
daa
test
fs
pusha
push
enter
pop
in
push
lods
xor
and
jmp
lea
xor
es
inc
dec
in
cltd
lahf
add
xchg
dec
clc
xor
invd
pop
push
jmp
sub
int
pop
cmpsl
cmpl
or
xlat
ds
rorb
mulb
into
jnp
xchg
call
cmp
neg
es
call
xor
sbb
nop/reserved
jb
test
adc
loopne
aad
mov
inc
sbb
sub
mov
mov
pop
and
pushf
sub
rcr
outsl
lret
fwait
aad
xchg
subb
in
jecxz
sub
lret
xchg
movsb
stc
jp
mov
xorb
pop
add
cli
sbb
int3
xor
adc
mov
popf
xor
fcomps
stos
addb
cmpl
inc
ds
pop
lods
cmpsb
es
test
sub
push
repnz
cs
in
xor
add
add
ficoms
xor
sub
mov
mov
stos
stos
sahf
testl
dec
outsb
jl
xchg
cmp
lods
xchg
insl
pop
xor
scas
inc
jp
xchg
imul
pop
cld
ljmp
pop
cs
scas
scas
pop
jo
jbe
shlb
jle
or
mov
adc
add
sbb
mov
fnstcw
sbb
iret
cmp
push
adc
jmp
jp
sub
xor
jns
mov
pop
lret
outsb
loopne
hlt
lods
cmp
or
lea
sbb
push
sub
scas
movsl
mov
mov
xor
sarl
inc
ja
ficompl
xchg
jle
mov
pop
sub
pusha
sub
subb
push
insb
push
fcmovbe
xchg
test
sti
stos
insl
and
cmp
add
outsb
lods
jbe
ljmp
dec
xchg
add
in
jo
xchg
shlb
cmpsl
push
mov
jle
bound
ss
stos
push
in
iret
ja
xor
mov
hlt
lea
int3
xchg
or
loope
xor
xor
mov
and
scas
inc
loope
pop
frstor
adc
and
xchg
adc
sub
lcall
dec
mov
clc
cmp
xchg
inc
mov
mov
sub
inc
dec
rorb
fisubrs
mov
jno
dec
filds
mov
xor
and
insl
xchg
bound
or
pop
repnz
push
frstor
jge
fstl
int3
inc
loopne
int
and
clc
push
pop
mov
push
lahf
out
dec
xchg
sahf
cmp
es
pop
inc
pop
mov
loope
pop
sub
popf
sbbl
inc
cmp
out
stc
idivb
cwtl
fsts
xchg
stos
cwtl
jbe
fs
mov
in
push
cld
ret
adc
popf
out
pop
popf
sub
cmp
or
push
jo
adc
mov
aas
cltd
cmp
jno
cld
fsubrs
cmp
test
hlt
stos
es
push
data16
out
fnsave
std
shlb
scas
mov
loope
aad
vcvttpd2dq
je
mov
push
cld
test
out
inc
cmp
fwait
mov
fildll
jne
and
dec
js
and
dec
push
test
inc
loop
pop
jnp
popf
push
push
pusha
enter
dec
mov
aaa
push
outsl
xor
test
cs
cmp
mov
cmp
loop
pop
inc
loope
add
adc
adc
inc
sub
dec
and
inc
data16
inc
into
sahf
sbb
xchg
and
mov
or
addl
dec
lock
lea
cwtl
outsb
jecxz
mov
or
cmpsb
pusha
gs
dec
fdivrl
cmp
cmp
stos
popa
mov
addl
push
lock
sub
xchg
jg
fstpt
xchg
adc
push
mov
sti
xchg
shlb
fistpl
xchg
aas
xchg
fwait
add
xchg
lock
xlat
shrb
push
jle
sub
ds
xchg
scas
test
jno
enter
cmp
sub
dec
js
dec
fs
add
std
jmp
in
pop
clc
repnz
cmp
xor
xor
xchg
pop
or
pop
js
xchg
mov
pop
push
in
cmp
cmc
jne
xchg
in
push
lret
cmp
aaa
xor
jle
test
mov
lcall
notb
ret
in
xor
gs
roll
movsb
test
popa
mov
enter
pop
xchg
jl
push
in
mov
xchg
imul
orl
cld
es
stc
xor
gs
std
inc
test
and
in
xchg
sbb
out
pop
xor
loop
mov
xor
lea
mul
std
dec
xchg
add
mov
jmp
int3
movsl
mov
dec
jg
pop
insb
xchg
outsl
and
mov
sub
lea
inc
sbb
xor
jmp
aam
into
scas
pop
lods
jge
add
movsl
call
in
stos
jbe
or
or
adcl
sbb
and
push
loopne
je
clc
outsl
inc
lret
aad
sbb
inc
out
pop
lds
xor
mov
mov
outsb
push
push
cmc
push
mov
icebp
in
es
imul
mov
mov
push
cmp
cld
xor
orl
ret
mov
not
jecxz
add
int3
xchg
mov
repnz
pushf
cwtl
aam
add
push
lret
push
mov
fwait
add
xchg
adc
movsb
mov
fadds
adc
jno
out
aam
aaa
scas
rcl
sub
pop
sbb
popf
push
or
xchg
jo
push
scas
dec
movsl
and
out
xlat
and
or
lods
arpl
sbb
pushl
ds
sub
add
adc
mov
test
sbbb
jb
daa
cmp
or
fcomip
xchg
dec
pop
jecxz
sub
xchg
lret
scas
pop
push
xchg
in
jp
push
repnz
adc
shlb
xchg
mov
xchg
popa
lahf
sbb
icebp
mov
jno
test
mov
jmp
fnstenv
mov
or
inc
mov
jo
and
mov
test
lret
sub
jle
dec
push
in
pop
push
inc
lock
outsl
repz
mov
out
xchg
sub
jbe
and
adc
lock
mov
stos
mov
in
divl
into
mov
mov
inc
cmpb
pushf
cmp
pop
loopne
outsb
jmp
mov
imul
neg
outsb
movb
lret
ds
cmp
lods
pop
sub
ret
mov
int3
pop
adc
shr
xlat
xchg
and
daa
into
std
dec
mov
mov
out
stc
xchg
mov
xor
mulb
sub
repnz
cwtl
stos
xchg
mov
or
int3
cmp
cmp
jno
cmp
add
lods
xchg
movsb
add
jo
test
data16
imulb
aad
pop
or
mov
fldenv
ds
aam
or
jmp
jbe
out
sbb
push
mov
dec
and
fwait
test
jb
inc
add
or
inc
sbb
mov
aas
add
xor
jmp
sub
dec
daa
inc
push
movsb
sbb
pop
push
add
sub
mov
push
jle
jle
inc
popf
xchg
hlt
push
cmpsb
imul
rcrl
test
pop
rcl
cld
shl
out
ret
jge
test
aad
andb
pusha
jle
mov
mov
arpl
pop
inc
std
or
and
jp
jmp
inc
pop
cmp
cmp
jg
nop
push
ja
lds
sub
loop
iret
or
dec
popa
andb
data16
fisubrl
lods
pop
mov
jmp
jl
test
cmp
sbb
cmp
aad
std
jno
inc
loop
fwait
in
or
imul
pushf
sub
jmp
ret
dec
push
sub
and
cs
and
in
inc
mov
push
sarb
or
mov
xchg
sbb
cltd
repnz
cmp
sahf
jg
xor
push
test
fs
push
pop
lds
sbb
int3
push
and
jge
adc
js
sub
popa
leave
and
loop
cmp
sub
mov
aaa
pusha
enter
and
push
lea
jg
inc
xchg
sbb
xchg
out
bound
rep
jge
lcall
pop
jnp
dec
cmp
cmpsb
pop
movsl
pop
fldz
adc
lret
jnp
outsb
inc
sub
sbb
jo
fs
addr16
adc
sbb
es
xchg
adc
mov
mov
or
sbb
pop
std
int3
push
dec
inc
jbe
popf
imul
movsb
cmp
adc
shlb
jns
js
jo
sahf
out
sbb
test
or
repnz
inc
mov
insl
adc
pop
clc
cli
push
hlt
inc
stos
dec
inc
xchg
sarb
add
or
push
push
sbb
push
jmp
pushf
jb
push
push
mov
xchg
adc
inc
and
mov
scas
jge
mov
xchg
add
movsb
sbb
and
cmpsb
insl
nop
das
pop
fists
test
es
fdiv
out
xchg
fst
sbb
jb
in
jmp
es
ja
iret
pop
dec
aas
daa
adc
scas
or
int3
mov
adc
cmpsl
mov
or
inc
inc
mov
sub
das
dec
sbb
jns
cmpsb
in
or
bound
xchg
mov
gs
gs
scas
cwtl
mov
xchg
cmpl
xor
xchg
mov
push
fistpl
inc
out
sub
cmp
stc
and
jg
sbb
pop
sbb
int
ja
push
lcall
sarl
jbe
or
pop
dec
mov
add
stc
sub
or
sbb
lock
and
nop
mov
ds
jns
clc
dec
sbb
sbb
inc
pop
or
arpl
rcrl
xchg
add
loop
mov
test
push
xor
neg
aad
sbb
add
add
fs
jb
decl
jg
std
ljmp
mov
loope
mov
xchg
mov
test
icebp
movsb
fnstsw
jmp
cmp
sbb
in
popa
or
addr16
jg
cmp
or
xor
loopne
mov
mov
inc
icebp
or
insb
sbb
cmpsl
xchg
xchg
jbe
xor
in
cmpl
lds
lahf
adc
mull
fs
nop
push
rclb
xlat
scas
jl
xchg
dec
pop
inc
push
je
add
popf
mov
jns
subl
movsb
jg
mov
in
add
adc
lods
cs
add
cmp
jb
push
inc
aas
fdiv
std
pop
or
cmc
ret
inc
aad
ficoms
in
mov
ret
daa
ja
in
or
test
stos
inc
or
xor
pop
arpl
orb
int3
subb
mov
add
inc
stos
mov
push
enter
js
mov
push
add
jns
imul
xor
pop
sub
sbb
cmc
aaa
jbe
ljmp
out
push
xor
pop
loop
inc
jne
idivl
lret
mov
popa
pop
sub
push
shll
jecxz
push
je
test
xor
mov
js
fnstcw
xchg
dec
dec
jmp
cmp
daa
rcrb
ja
movsb
addr16
push
test
cmp
pushf
sbb
pop
jle
fistps
jne
ja
mov
repnz
mov
mov
aad
ficompl
addl
pushf
fstps
mov
inc
aam
xchg
mov
sbb
mov
and
adc
and
pop
cmc
fsubp
pop
mov
imul
nop
sub
inc
jg
pop
mov
int3
pop
or
sahf
pop
mov
and
jecxz
add
stos
xchg
lea
cmpsl
cs
sti
idivb
xchg
enter
bound
mov
test
fwait
lds
ret
push
inc
aad
mov
mov
and
adc
cld
ds
fs
in
into
push
xchg
mov
cmpl
sarb
inc
pop
sub
push
in
xor
mov
loope
cmpsl
test
push
out
and
jmp
xorl
imul
dec
dec
cmp
aas
mov
das
xor
lock
add
enter
jecxz
es
das
push
pop
jnp
inc
rcrl
hlt
jl
or
sub
jns
cwtl
jb
sbb
lahf
push
pop
jg
and
ljmp
or
dec
in
mov
jnp
xchg
in
mov
jne
nop
call
mov
repz
dec
test
jp
subl
lret
rep
push
clc
lret
fsts
jae
pop
jo
mov
cli
dec
dec
jg
push
divl
div
jmp
aam
popa
and
jo
cltd
aad
cli
jmp
jp
stos
aam
or
daa
sti
out
add
scas
into
fldcw
stos
inc
xor
dec
lret
lret
xchg
xlat
icebp
push
ds
or
xor
mov
out
ja
jmp
test
inc
outsb
xchg
pop
cmp
mov
mov
push
push
cltd
jecxz
aad
mov
outsl
dec
xor
mov
loope
push
inc
xorl
inc
test
jo
in
jbe
ret
xor
push
fisttps
sub
and
jae
imul
jle
push
ret
sub
adc
in
jle
pcmpgtw
mov
jecxz
gs
dec
mov
push
test
int3
mov
cmpsl
pop
rcl
rorl
cmp
test
jo
mov
ja
inc
pop
fldenv
adc
clc
push
and
ret
iret
jl
xchg
xchg
mov
sbb
xchg
fs
js
cltd
pop
push
aaa
adc
pop
lahf
cmp
or
dec
lea
jae
inc
imul
mov
loope
ret
or
jns
pushf
aad
das
add
fidivrs
lahf
xchg
out
lods
mov
xor
insb
jbe
daa
ljmp
or
rep
lret
cwtl
jns
lock
iret
repnz
jg
hlt
or
push
mov
mov
stc
ds
cli
int3
std
jmp
lea
int
cmp
mov
pop
lods
adc
xchg
out
sbb
idivl
sti
in
insb
mov
lock
push
dec
stos
cmc
cld
pminsw
mov
loopne
scas
mov
push
xor
cmc
mov
aad
das
je
cwtl
enter
jg
jbe
mov
or
xor
mov
lds
or
int
in
ja
push
aad
sbb
push
insl
cltd
inc
jne
push
arpl
addl
xchg
push
pop
out
dec
ja
jns
dec
mov
int3
test
push
push
xchg
dec
stc
in
inc
and
jb
mov
ficoml
sub
push
adc
ss
pop
jne
shll
push
faddl
adc
jne
out
aaa
div
jae
push
jl
xor
jg
ds
mov
js
dec
mov
inc
aad
lea
js
daa
dec
shrd
add
popf
sub
lds
xor
cmpsl
mov
andl
in
or
adc
sub
pop
out
iret
loopne
bound
jbe
xchg
adc
lea
outsl
and
stos
pop
cld
pop
xor
inc
cmpsl
fnsave
sbb
repnz
pop
jbe
cmpsl
push
xor
aad
loope
or
int3
dec
sarl
jae
cmp
inc
mov
lea
cmp
roll
outsb
push
mov
fwait
jae
and
loope
addr16
punpckhdq
nop
shrl
aas
mov
scas
and
xchg
stos
cmp
dec
mov
sub
adc
fidivrs
jge
xchg
lret
xor
adc
daa
das
lret
push
and
xchg
mov
mov
aas
scas
mov
gs
pop
xchg
in
xchg
xrelease
adc
repz
pop
mov
pop
pop
test
jl
mov
and
repnz
fidivl
call
fbld
and
rcrb
out
adc
loop
pushf
jbe
out
sbb
pop
insb
cmp
ljmp
in
inc
lock
stc
in
repz
insb
sub
or
out
xor
inc
xor
inc
ljmp
pushf
imul
jl
push
iret
mov
ficomps
dec
jo
sbb
fdivs
lock
push
cmp
pusha
sbb
push
and
xchg
out
lock
cmp
lock
sbbb
mov
es
stc
in
xchg
lcall
imull
enter
gs
insl
adc
shlb
adc
imul
cmc
outsl
loopne
aad
push
mov
shlb
icebp
mov
dec
xchg
imul
mov
sti
mov
loope
sarl
add
sub
ds
test
jecxz
pop
cwtl
sub
shlb
idiv
jae
icebp
inc
aam
jp
jmp
in
sbb
ret
imul
dec
and
jle,pn
mov
aam
daa
into
sbb
xchg
push
cmp
jbe
mov
popa
mov
inc
scas
xchg
push
rcll
mov
out
nop
dec
jle
jb
jl
or
inc
lret
cmp
inc
dec
ja
jp
stc
jb
fldl2t
inc
mov
xchg
jl
out
fwait
jo
push
and
cmp
sub
sub
arpl
sub
fwait
inc
xchg
inc
and
and
cmp
popa
clc
into
out
pop
or
ja
movsb
xchg
add
or
jb
ja
mov
mov
jge
push
pop
fwait
xchg
inc
decb
jns
jle
jge
insl
fwait
lods
push
inc
adc
dec
scas
jle
dec
lea
out
lods
inc
data16
lcall
sbb
cmp
add
pop
jno
pop
mov
lahf
cwtl
inc
sub
lret
cs
iret
mov
fstl
push
aam
mov
insb
or
sbb
lcall
pop
push
insl
mov
mov
out
stc
cmc
loop
cmp
cmp
lods
mov
inc
pusha
hlt
outsb
jnp
inc
dec
in
jl
mov
lret
mov
leave
lock
test
popa
clc
xor
inc
xlat
xchg
push
sub
std
inc
ret
cmpb
jne
jnp
out
loopne
rep
push
gs
lret
lods
dec
lock
out
scas
push
lods
lds
sbb
jns
add
fildll
mov
pushf
out
dec
mov
or
sbb
cmp
aam
xchg
lock
xor
sbb
adc
adc
sbb
int
stos
dec
data16
imul
sbb
loop
loopne
xchg
sarl
pop
cmp
dec
bnd
jb
pop
inc
fdivs
cmp
pop
sub
inc
ljmp
rclb
pop
mov
push
mov
leave
or
sbb
in
pop
in
das
add
cmpsl
dec
mov
or
scas
adc
stos
inc
and
imulb
push
mov
pop
stc
enterw
outsb
jb
pop
or
test
das
xchg
xchg
lds
xchg
mov
daa
ret
pop
in
es
adc
test
pop
dec
out
inc
mov
push
jecxz
nop
js
mov
add
lock
xchg
incl
test
add
sbb
out
xchg
and
fsubrl
inc
mov
nop
sub
ret
lret
je
in
sbb
jp
insb
lcall
and
loopne
xor
sahf
popf
pop
and
lods
je
popa
aaa
pmulhuw
mov
sub
add
cwtl
pop
mull
pop
mov
icebp
repz
ficomps
sbb
fwait
or
repz
pop
cmp
repnz
mov
mov
lock
inc
clc
fwait
adc
ds
add
sbb
sbb
adc
stc
aam
push
lcall
std
xor
xlat
cmp
loope
daa
jns
call
mov
popf
mov
out
cmp
inc
pop
add
push
adc
dec
adc
nop
cltd
cs
cmpsb
in
adc
xlat
sarl
loope
dec
push
sti
adc
sarl
test
sbb
outsb
imul
sbb
cmpsb
aad
cmp
cld
pop
jns
sub
out
jmp
icebp
cwtl
stos
sub
cmpb
dec
negb
loopne
pop
adc
pop
push
jnp
cwtl
mov
jle
mov
test
mov
cwtl
push
jae
push
push
lret
cld
subl
lea
iret
dec
shl
xchg
fsubr
fcmovnbe
imul
fcomps
mov
pop
jl
xlat
mov
sahf
lret
sub
push
stc
clc
cld
xor
mov
lahf
fdivr
mov
sub
into
mov
cmpb
es
lahf
in
in
dec
add
mov
es
sub
or
rcr
mov
push
mov
icebp
ljmp
mov
adc
mov
adc
mov
xchg
cmp
mov
push
inc
jg
mov
add
mov
imul
fadd
mov
sub
out
lods
movsl
push
bnd
ret
jnp
fimuls
aad
add
mov
ret
pop
sub
cmp
ret
and
std
mov
add
xor
mov
push
xchg
xchg
cmp
mov
negb
fdivrs
fdivrp
sub
add
xchg
jle
mov
mov
repz
sahf
pop
jae
jbe
sbb
mov
aaa
lods
pop
xor
or
in
fld
test
dec
jbe
mov
aad
stc
test
sub
push
in
fwait
push
fsubs
data16
sahf
cmc
pop
icebp
pop
iret
mov
add
inc
lods
xchg
push
or
rorb
js
jecxz
insl
jmp
mov
fwait
mov
push
push
lock
or
shll
fcomps
add
test
les
repz
jns
cmp
pop
hlt
fsubs
xchg
pop
add
sub
fsubrl
ja
mov
adc
cmp
test
and
adc
dec
call
loopne
add
push
xchg
dec
jae
xchg
push
mov
xchg
imul
andb
sarb
test
sete
and
sub
sbb
movsl
adc
fsub
dec
fnstsw
cmp
push
cmc
xchg
hlt
xlat
inc
aad
ss
push
data16
cmc
and
xor
mov
adc
add
ss
sti
inc
xchg
pop
xchg
pop
cltd
fldenv
jne
scas
cmp
je
in
xor
inc
dec
test
jmp
push
mov
call
inc
aam
mov
cmpsl
lock
sub
xor
add
jmp
lock
push
xchg
setp
pop
clc
test
push
popf
loope
mov
push
aaa
daa
or
add
lock
daa
inc
jne
sti
imul
inc
enter
and
cmp
lock
lock
jne
dec
push
pushl
insb
push
dec
leave
cmp
les
and
pop
pusha
fsubrs
loopne
lds
cmc
dec
sub
pop
es
cmp
sub
stc
push
test
cli
mov
ljmp
jmp
dec
les
stos
sub
mov
pop
movsb
add
mov
test
xchg
ja
jno
jnp
roll
push
jp
lods
nop
loope
popf
or
data16
ret
test
push
dec
cli
push
push
cmp
inc
xor
xlat
iret
and
jle
mov
lret
xchg
fildl
in
add
movsb
fisttpll
adc
aaa
push
es
sbb
mov
incl
arpl
xor
fcmove
iret
xchg
dec
xor
pop
jle
or
pop
inc
pushf
adc
xchg
dec
shufps
hlt
pop
stos
dec
ljmp
and
add
mov
or
push
xchg
and
fcompl
jnp
adc
out
gs
jbe
imul
jo
xchg
lods
fcmovne
mov
fistpll
cmp
xchg
sub
dec
cmp
cmc
stos
int
add
scas
jne
les
mov
cli
loop
int3
sahf
cmp
xor
add
call
add
inc
cmp
outsl
push
or
jecxz
hlt
popf
insl
adc
lret
jmp
loop
addr16
push
adc
mov
pop
cmp
inc
fmul
aad
pop
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
.byte
xchg
.byte
jbe
push
in
rolb
jg
dec
push
xorl
movsb
sti
scas
jo
or
push
push
cltd
xchg
ss
pushf
xor
or
sbb
les
sahf
movsl
xchg
out
inc
ffreep
dec
sti
sahf
loopne
and
cmc
inc
rcrb
loope
mov
pop
pcmpgtd
sbb
call
testl
pop
ds
stc
pop
push
pop
popa
ja
sub
stc
xchg
fsubrs
xor
mulb
mov
mov
xchg
fwait
inc
push
inc
test
inc
dec
adc
fwait
dec
fnsave
mov
mov
pop
aad
pop
test
lock
sbb
xchg
jecxz
aaa
roll
pop
in
xchg
inc
adc
mov
and
xor
inc
cmp
xchg
jae
call
lcall
jle
fmuls
xor
mov
test
cmp
adc
mov
push
cmp
jns
xor
cmp
pushf
or
xlat
pop
test
enter
jl
pusha
cmp
or
mov
cmc
cmpsb
pop
add
into
and
cmc
inc
adc
test
inc
sbb
lahf
outsl
dec
loop
push
ficoml
inc
mov
repz
mov
mov
mov
jae
stos
jg
mov
sub
xchg
mov
mov
adcl
shll
out
stos
int
fnstsw
push
pop
jp
shl
aas
fisubl
or
int
push
adc
and
adc
call
hlt
addb
insl
pusha
and
int3
mov
xchg
in
shll
clc
and
sub
mov
or
shll
icebp
test
lds
jb
mov
jecxz
movsl
lds
jecxz
nop
cmp
leave
pop
jmp
lods
push
out
mov
pop
sub
cmp
repnz
dec
mov
loopne
inc
repz
in
stc
cld
sbb
ret
jno
mov
adc
repz
mov
addr16
xchg
loopne
adc
push
mov
shll
xor
popl
xorb
test
cmp
mov
inc
mov
pop
mov
jp
dec
xlat
iret
aam
sub
cmp
mov
and
cmp
inc
movsl
in
mov
add
mov
inc
inc
je
inc
push
stos
add
aam
loopne
xor
into
add
das
test
inc
adcb
test
mov
pushf
cmpl
push
clc
lcall
xchg
ftst
lcall
sahf
insb
fimuls
shlb
dec
int
sbb
shrl
mov
inc
push
mov
xchg
xor
sub
or
xchg
jnp
stos
ljmp
lea
mov
iret
fistpl
imul
aad
idivb
test
int
popa
xchg
lret
pop
pusha
popf
movb
int3
sub
dec
mov
inc
in
mov
jb
test
xor
add
jne
dec
test
xchg
jmp
push
inc
scas
cmc
mov
xchg
pop
xchg
negb
sub
xor
mov
or
or
xchg
inc
enter
mov
in
jmp
sbb
adc
xlat
adc
lcall
mov
push
or
xchg
loope
inc
fcom
mov
jae
xor
addr16
jb
js
adc
insb
add
pop
cmp
xor
divl
dec
out
inc
cld
sti
es
cmp
outsb
inc
sbb
iret
sbb
sbb
pop
mov
pusha
jne
loope
mov
xchg
and
mov
sbb
dec
lahf
clc
push
movsl
ror
data16
xor
popa
ja
data16
mov
cld
imul
xchg
cmc
mov
test
mov
jecxz
push
mov
xor
cs
xorl
xor
sub
out
and
add
lahf
add
or
mov
inc
cwtl
dec
sub
shrl
dec
push
mov
cmpl
fs
cld
sbb
popa
xchg
jp
lcall
sbb
pop
jo
jae
mov
pop
cmp
int
cmp
dec
inc
inc
mov
cmp
or
push
in
pop
es
mov
xchg
xor
test
ljmp
and
mov
inc
jo
mov
or
in
ret
xchg
add
adc
pinsrw
push
and
or
daa
sbb
xchg
stos
test
inc
out
dec
pop
call
out
jp
adc
cmp
stos
lock
out
xor
in
adc
adc
pop
fisubrl
out
aaa
or
iret
icebp
jmp
adc
repz
test
pushf
out
ret
mov
stos
mov
lret
sub
sbb
ja
rorb
insb
mov
jae
clc
fidivl
mov
subl
je
js
nop
sub
das
cmp
mov
ret
jge
ss
and
dec
mov
les
xchg
jmp
xchg
mov
lret
daa
add
jo
popa
fwait
push
mov
push
pusha
lock
aam
jle
mov
pop
aam
out
mov
jb
mov
dec
sbb
je
dec
cmpsl
xor
ja
push
ret
sbb
jne
fcomi
sub
cmp
xchg
fimull
in
mov
icebp
das
or
jae
arpl
hlt
adc
loop
icebp
push
ret
mov
inc
stos
call
or
sub
mov
shrb
and
cmc
add
dec
push
dec
or
xchg
rcrl
iret
mov
adc
cmpsl
pop
ds
scas
out
xor
shrb
cmp
push
xchg
and
jecxz
or
hlt
dec
jnp
data16
shrb
scas
mov
xchg
jmp
arpl
fnstenv
adc
jnp
push
or
xor
dec
mov
addl
mov
test
add
cli
popf
adc
push
test
xlat
sub
arpl
mov
hlt
pop
adc
pop
pop
in
inc
repnz
cmp
jge
push
sti
xor
or
std
arpl
insl
dec
insl
movsl
mov
and
xchg
mov
sti
scas
leave
dec
sti
loop
dec
adc
push
fcoml
or
test
test
test
dec
movsb
es
fidivl
xor
test
outsb
addb
iret
inc
inc
inc
cmp
shl
sbb
and
cmpsl
pop
adc
xchg
mov
lods
mov
add
mov
dec
xor
or
inc
push
jle
jl
fstpl
icebp
mov
xlat
out
pop
cmc
in
mov
xor
lret
xchg
xchg
push
xchg
incl
mov
lcall
cmp
dec
cld
and
jg
jg
push
add
fildll
cmpb
aam
daa
add
and
clc
inc
push
lahf
mov
cmp
and
cmp
and
rorb
or
test
pop
xchg
sbb
xor
rcrl
imul
jecxz
mov
std
lock
test
ret
mov
push
jecxz
shlb
mov
mov
pop
dec
addl
insb
inc
inc
sbb
in
ja
sub
int
dec
sub
mov
mov
inc
adc
in
ljmp
cmp
orb
lds
inc
cld
inc
and
adc
add
scas
or
mov
xlat
repnz
push
sub
mov
es
pop
lods
js,pn
adc
popf
adc
lock
or
call
jmp
push
test
cmpb
mov
addb
int
adc
gs
add
shlb
pop
fs
lods
sbb
arpl
std
dec
inc
jge
and
jmp
data16
xor
sbb
shlb
in
or
jno
xor
mov
mov
test
sahf
aaa
pop
jp
shlb
das
loope
jle
mov
or
jmp
sbb
jecxz,pt
nop
push
lock
cmpl
cwtl
xchg
or
xchg
test
jge
pop
xchg
insb
adc
inc
xlat
ss
lds
lret
pop
sbb
divl
dec
jmpw
sbb
push
gs
adc
or
and
in
xchg
data16
in
movb
xor
icebp
pop
mov
mov
sbb
gs
and
mov
fcmovbe
mov
adc
jne
mov
inc
cmp
repz
aad
pop
xor
or
push
fildl
clc
arpl
or
test
inc
pop
shrb
and
popf
imul
dec
icebp
push
or
outsl
mov
sub
xor
push
inc
and
cli
ds
mov
cltd
std
fldt
mov
sbb
xlat
frstor
push
adc
fwait
aas
push
cmp
out
xchg
das
movsl
std
pop
in
js
push
ret
pop
xlat
cmpl
imul
ret
cmc
mov
inc
loop
add
sar
hlt
arpl
inc
loopne
push
and
scas
mov
inc
or
int3
scas
fsubrs
push
std
mov
jo
and
out
out
sub
cmc
ret
adc
lods
ret
test
add
divb
arpl
repz
cmpsl
dec
xcrypt-cfb
cmpsl
es
inc
mov
lahf
add
inc
leave
mov
in
jb
add
mov
sahf
pop
je
fstpl
pop
out
xlat
cmc
das
iret
ret
or
jo
jmp
sub
fbstp
scas
repz
jne
std
ljmp
sbb
xchg
lahf
pop
sub
add
fnstcw
jbe
int
insb
negb
sbb
call
bound
out
sbb
mov
arpl
xchg
fisttpll
lret
xchg
jle
scas
pop
fisttpl
fildl
leave
dec
addr16
jnp
xchg
xchg
ret
outsb
les
notb
jbe
cmp
adc
rcl
int
ljmp
adc
inc
test
das
sahf
stc
push
dec
sub
sarl
add
add
pop
jmp
sbb
dec
in
jno
dec
inc
insb
mov
ficoms
loop
addb
bound
sub
or
cmpsl
lock
leave
fs
ret
dec
mov
or
cld
mov
scas
pushf
mov
popf
mov
fcompl
mov
cld
movl
hlt
insl
call
add
add
mov
lods
addr16
cmpsl
pusha
aas
or
jp
popf
stos
jge
lock
imul
inc
in
insl
or
fcomps
test
and
mov
pop
lock
arpl
test
lret
xchg
cltd
sbb
push
cltd
popa
aam
das
sub
repnz
cmp
cmpsb
icebp
imul
xchg
xor
sub
sub
jle
sub
lcall
aas
and
gs
testl
scas
rclb
push
inc
xchg
sub
pop
jne
or
xchg
shlb
add
lcall
xor
jmp
mov
add
insb
int3
push
imull
mov
jle
test
mov
mov
outsl
cli
mov
dec
jbe
xchg
push
ss
decl
pusha
pop
insl
add
rcrb
xchg
repnz
cltd
call
stos
andl
mov
loope
loopne
add
cmp
adc
out
fmulp
lods
jne
stc
mov
inc
iret
les
pop
jb
dec
pop
add
dec
push
add
sub
lods
test
test
test
nop
mov
jp
test
outsl
inc
inc
xor
adc
shrl
jne
scas
and
insl
cmpsl
mov
or
mov
andb
dec
mov
jmp
cmc
jbe
aad
and
in
xchg
fs
xor
and
xchg
sub
sub
fidivs
sbb
mov
add
nop
jbe
es
mov
sub
sti
clc
lcall
test
addb
adc
shlb
xchg
lcall
in
or
and
icebp
adc
xorl
adc
mov
cmp
repz
pop
fisubs
sub
cmc
jecxz
sbb
shrb
mov
or
arpl
enter
test
xchg
or
and
jge
ret
xchg
rcll
push
add
lock
fstps
popf
stc
xor
and
lret
mov
pop
and
aaa
ljmp
pop
mov
xchg
test
loop
or
adc
out
pop
leave
push
imul
enter
ret
bound
inc
daa
fidivrl
pop
ljmp
rcrb
sub
mov
or
mov
lcall
xchg
inc
cmp
ret
mov
jmp
lds
adc
aad
lcall
cs
push
jge
repz
mov
add
add
test
cld
rcl
cmp
push
push
fiadds
loop
jle
mov
push
insl
ljmp
jae
clc
jle
pop
xor
outsb
xor
dec
add
cmp
jp
dec
into
jmp
and
inc
adc
jb
imul
mov
jno
adc
xor
jmp
add
sub
and
cmp
lds
xor
nop
insb
sbb
dec
mov
loope
out
movsb
push
fmul
aad
pop
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
.byte
xchg
.byte
adc
mov
adc
es
jg
add
call
outsb
cwtl
or
or
cmp
mov
outsl
xorl
add
jno
es
in
sbb
popf
jnp
scas
push
ret
push
lcall
rol
xorb
ljmp
es
add
pop
inc
ss
mov
xor
push
and
aam
jb
je
push
cmp
add
iret
add
testb
shll
movsl
pop
rorl
aam
mov
sub
scas
lods
cmp
std
cs
insl
cmp
pop
in
mov
lret
mov
loope
sbb
jg
cmp
rcl
dec
cs
mov
push
test
dec
xor
push
and
stc
adc
adc
mov
cmpsl
aaa
xor
xchg
mov
mov
sub
and
lret
adc
dec
movsb
test
dec
dec
scas
lret
sub
push
pop
sub
ret
adc
test
dec
sub
mov
mov
mov
rcrb
push
divl
movsb
jno
sub
pusha
into
xchg
mov
ljmp
scas
or
out
mov
shlb
jno
sub
dec
push
jle
sub
jecxz,pn
cmp
in
mov
adc
fildll
aaa
test
push
inc
push
mov
dec
sbb
add
jne
test
fxch
in
or
push
mov
cmp
xchg
out
adc
movl
adc
and
and
pop
ficoml
adc
cwtl
cmpsl
test
test
pop
in
jle
out
push
lock
fisttpl
cmpsl
lret
sti
rorl
push
push
mov
sti
in
and
dec
xchg
lea
sub
aad
pop
add
test
jle
popa
xchg
pop
sti
xor
notb
lds
xor
incl
test
rol
sar
sbb
dec
xchg
mov
clc
jp
fsubrp
xlat
iret
cmp
dec
add
ret
aaa
push
jp
into
loopne
popf
cmpsb
xor
mov
lcall
test
and
mov
ret
mov
inc
or
and
pop
test
fstpl
sub
and
xor
jp
jne
fwait
rcrb
jbe
lcall
notl
jp
cmpsl
jno
cmp
ja
ljmp
mov
jo
mov
dec
jmp
jmp
daa
faddl
rclb
mov
insl
jmp
cs
sbb
jbe
add
mov
scas
cmovb
ss
or
lret
jnp
mov
mov
xchg
out
adc
int
pop
lret
loop
jno
sti
cmpsb
xchg
pop
or
subl
cmp
ds
repz
inc
xchg
rol
fmull
mov
mov
mov
pop
mov
aaa
jle
xor
enter
gs
aam
sbb
xchg
out
xchg
imul
cmp
push
fsubp
aam
ret
stos
out
sub
push
ljmp
pop
out
in
ss
popa
hlt
inc
add
and
mov
mov
stc
dec
xchg
inc
lret
push
mov
dec
cmc
lods
mov
or
stc
out
push
gs
cmp
adc
jmp
adc
mov
cmp
inc
dec
sbb
dec
mov
in
jg
lea
outsl
ret
sbbl
lock
xor
jp
xchg
xor
adc
imul
mov
mov
xor
or
std
pop
fsub
inc
loop
xchg
mov
loope
jg
insl
push
add
jae
ljmp
push
or
pushf
jg
cmp
pop
dec
push
out
inc
js
mov
add
push
pop
jle
dec
xchg
and
jg
les
add
icebp
cmp
xchg
xor
sub
sbb
ss
aas
lret
xor
sbb
sti
fildll
add
mov
adc
push
mov
je
mov
cmpsb
in
pop
sub
and
cmc
sti
mov
mov
mov
inc
jg
movl
scas
and
fdivrl
sbb
xor
psraw
mul
rcll
ja
fwait
aad
mov
add
mov
mov
mov
inc
sub
into
sub
jecxz
mov
lcall
inc
xor
out
inc
aaa
jne
mov
jl
add
sub
inc
enter
inc
cwtl
movsl
mov
adc
or
out
xor
pop
mov
out
aas
or
fs
xor
and
stc
je
aam
iret
insb
fists
or
sbb
dec
push
lock
xchg
or
cltd
and
push
cwtl
sbb
push
imul
ja
ss
xor
mov
xor
stc
fdivrs
shlb
add
mov
and
or
mov
or
out
inc
or
mov
fldl
cmp
sub
pop
aad
xlat
and
iret
cwtl
in
add
mov
cs
or
mov
sub
xchg
push
jg
inc
int3
xchg
loopne
cmc
mov
and
in
or
xchg
lds
pop
mov
insl
lcall
sti
sub
leave
popa
das
xchg
mov
dec
lods
popf
lds
cld
hlt
mov
loopne
sbb
mov
flds
lahf
pop
icebp
mov
ds
call
cwtl
std
jge
inc
push
push
mov
popa
addr16
xor
stos
stc
jge
test
in
ss
sub
mov
addr16
shll
or
fisttpll
nop
movsl
test
mov
fistps
mov
cs
push
sbb
fs
jno
sub
fsubs
subl
stos
add
int3
mov
mov
repz
sub
loope
mov
test
mov
sti
fcoml
inc
nop
aas
out
out
or
pusha
sti
gs
call
icebp
mov
ret
enter
cmp
and
add
iret
cmp
push
add
mov
imull
adc
lock
dec
insl
sub
sbb
mov
xchg
mov
test
mov
mov
popa
ljmp
add
mov
out
xchg
data16
xchg
adcb
clc
xchg
adc
scas
cmpl
mov
sbb
pop
rclb
and
jbe
sbb
jbe
sub
test
stc
call
jp
stc
pop
divl
inc
mov
in
call
xor
mov
xchg
jp
fidivrs
adc
pop
mov
xor
fscale
call
lea
fimull
mov
bound
movsl
add
push
decb
push
lcall
lcall
into
aad
push
mov
cmp
sub
cmp
sbb
decl
ret
lods
inc
out
shl
jmp
fistpl
mov
or
add
add
rcl
inc
pop
ret
mov
into
xchg
and
call
xchg
cmpsb
jecxz
jle
inc
xor
pop
mov
fldl
cld
scas
into
xor
pop
xchg
jae
fnstsw
sbb
sbb
and
or
adc
inc
bound
push
sbb
add
lcall
xchg
jmp
push
jge
fbld
sbb
sub
cmpsb
stc
andb
add
das
pushf
loopne
ljmp
stc
push
inc
cli
jnp
sti
adc
pop
dec
addl
test
stos
sub
imul
fildll
push
mov
xchg
pusha
and
bnd
cmp
test
xor
xchg
pop
insl
push
cli
fildl
test
dec
divb
cs
cmp
add
cld
cmpsl
sub
lret
mov
adc
and
sbb
mov
inc
mov
lds
cmp
imul
out
lret
xor
test
cmp
nop
cmp
xchg
xacquire
mov
pusha
sbb
cmpsl
sbb
cmc
inc
mov
add
adc
cmp
jmp
ds
mov
cmpsb
sub
int
dec
scas
rorb
mov
cmpsl
mov
das
or
mov
sub
mov
shrl
jp
xchg
punpcklbw
rcll
mov
in
insb
xchg
stos
mov
push
xchg
lret
or
adc
mov
adc
or
mov
or
outsb
mov
fdivrl
jecxz
sar
testl
sbb
nop
mov
test
cmp
add
sbb
je
push
dec
fmuls
push
bswap
jmp
inc
fadds
cwtl
lahf
inc
stos
int3
ret
or
cld
xchg
dec
mov
xchg
xlat
sbb
pop
sbb
pop
inc
imul
or
imul
icebp
jnp
daa
addl
sbb
push
in
int3
leave
mov
mov
xchg
outsb
mov
xchg
cld
cs
divl
dec
leave
pop
test
push
push
dec
lcall
mov
pop
dec
imul
add
mov
test
test
int3
call
add
mov
inc
pop
arpl
call
push
in
jl
idivl
mov
ja
sub
test
out
jnp
cmp
push
aam
out
shll
outsb
and
jmp
in
sbb
push
ss
dec
rcrb
out
sbb
pop
lcall
gs
sub
insl
adc
das
add
out
and
arpl
pop
test
iret
in
and
inc
leave
stc
addb
xor
cli
fimuls
jae
add
push
dec
outsb
jg
adc
dec
ret
pop
cmp
fidivs
mov
jg
push
add
fidivl
xchg
sbb
ret
pop
hlt
jae
es
cmpsb
cwtl
cmpsl
insb
mov
xor
pop
or
lahf
jnp
mov
int
fdivrs
mov
popa
cmc
lahf
andb
jp
repz
inc
fidivrs
shrl
ss
push
movsl
fdivs
and
outsl
popf
xor
repnz
mov
add
repnz
lahf
xchg
adcb
fwait
stos
xchg
sub
ret
inc
adc
inc
add
inc
mov
jmp
in
imul
test
pop
mov
dec
out
or
lret
fdivp
push
int3
dec
sub
cwtl
dec
hlt
fwait
inc
inc
dec
mov
push
mov
out
push
pop
mov
loopne
mov
test
mov
ljmp
test
jbe
sahf
mov
imul
call
mov
mov
pop
mov
outsl
jmp
lds
mov
jmp
adc
adc
and
push
loop
iret
pusha
les
push
imulb
div
out
xlat
sbb
fs
mov
push
or
jnp
das
jo
mov
int
nop
fnstenv
data16
adcl
decl
fs
iret
out
or
adc
sub
divl
jp
lea
pop
mov
and
movsl
add
out
push
mov
push
lds
cmp
mov
inc
ret
jne
cmpsb
repnz
fstpl
adc
xchg
fildl
in
lret
add
push
adc
jbe
mov
movsb
icebp
nop
out
pop
xor
push
xchg
inc
mov
push
jns
sbb
cmp
xchg
aaa
pop
popa
clc
sub
shll
push
jne
add
bound
and
sqrtps
pop
pop
mov
jno
jno
repnz
jne
mov
pop
or
into
orb
js
jp
iret
test
mov
inc
and
pop
les
and
pop
xchg
push
out
andb
repnz
daa
movsb
sub
lock
cmp
test
and
pop
xor
sbb
inc
mov
ds
xor
sub
in
cmpsl
cmp
dec
js
xchg
push
xchg
jge
cmp
and
jle
sub
rcr
pop
and
ret
fsubrl
dec
mov
push
lds
and
decb
inc
aam
lea
xchg
jb
mov
scas
fwait
sub
mov
mov
adc
pop
insb
inc
idivb
rcl
or
inc
jecxz
out
enter
mov
sahf
and
push
mov
into
out
mov
or
add
mov
mov
fisttps
and
sub
xor
pop
sti
lcall
mov
inc
loop
xchg
and
in
notb
ds
dec
ds
pusha
inc
adc
pop
fwait
mov
ja
lcall
addr16
lea
cmp
fsubl
adc
dec
and
pop
pop
aas
scas
adc
iret
fs
sbb
popf
int
ljmp
jne
loope
aam
scas
test
out
push
aad
sti
sub
inc
add
mov
pusha
push
lock
clc
imul
int3
stos
adc
loop
adc
imul
aam
fldenv
aad
sbb
mov
and
jb
ret
int3
dec
inc
add
mov
fcmovu
add
mov
jo
out
dec
div
fcompl
mov
arpl
cwtl
lahf
lcall
ja
cwtl
sahf
cmp
aaa
fsubs
frstor
pop
pop
inc
scas
stc
popa
jne
xchg
inc
adc
xchg
std
push
cmp
cld
mov
mov
dec
xchg
jmp
in
loopne
test
sbb
xchg
jge
lret
leave
add
imull
fnstsw
mov
sbb
loopne
jp
sarb
ljmp
imul
pop
jmp
adc
clc
mov
fs
je
jg
decb
ret
inc
push
jb
sar
mov
cmpsb
scas
std
or
xor
xchg
out
mov
inc
xlat
jge
jp
xlat
xchg
xor
and
and
push
sub
sub
mov
mov
bound
mov
or
push
loop
jno
cmpsl
inc
and
icebp
push
rorb
jmp
jb
sub
xor
add
mull
imul
rep
dec
rcrl
pop
dec
inc
pop
mov
daa
cmpl
call
inc
ficompl
add
pop
xchg
outsl
xacquire
cld
outsl
mov
mov
cmp
ds
inc
jb
rcrb
xchg
jns
lret
dec
cli
ds
add
add
mov
icebp
push
xor
sub
mov
push
ss
mov
inc
pop
cwtl
sbb
je
mov
das
add
push
jnp
sahf
out
cmp
sbb
xchg
dec
pop
imul
push
repz
push
sub
outsb
mov
sub
mov
fsubrs
scas
in
push
pop
mov
adcb
or
xchg
xchg
js
test
dec
mov
sub
sbb
push
call
mov
cltd
push
inc
cmp
jge
pushl
das
fmulp
int3
hlt
cmp
icebp
ret
sarb
out
adc
int3
aam
push
in
xchg
sub
cmp
add
xorl
lret
push
shll
rcr
aad
push
cmp
js
sbb
cli
inc
adc
push
mov
push
fcoml
mov
jle
hlt
iret
push
jecxz
or
mov
cmp
mov
sub
push
xchg
sub
inc
add
push
icebp
pusha
repz
xchg
cmp
adc
and
dec
lahf
notl
dec
dec
dec
sub
fidivrl
orb
iret
inc
scas
into
add
les
mov
push
lods
jmp
and
sbb
and
ret
ficoms
call
sbbb
xorl
jb
sub
push
enter
push
xor
mov
mov
nop
add
into
dec
xchg
push
mov
int
xor
pop
jnp
inc
add
mov
mov
mov
mov
nop
bound
push
lret
jne
inc
loop
mov
sarl
dec
lods
jg
mov
fimull
cmp
xor
into
and
out
mov
fiaddl
mov
lods
or
stc
jl
push
scas
mov
in
ret
insb
mov
ja
inc
mov
mov
out
xor
xor
popf
daa
in
rol
inc
jne
push
in
test
jecxz
leave
xor
inc
shl
add
jae
add
repnz
mov
gs
test
adc
lret
shll
jns
loope
or
dec
xor
lret
and
dec
ficompl
push
cmp
adc
into
sub
test
sti
fsubrs
sub
cmpsl
cmpsl
cmc
es
idivb
ds
mov
mov
jo
sahf
dec
adc
adc
mov
sarl
lods
xchg
jnp
stos
jp
lods
mov
aas
push
inc
jb
mov
or
testb
inc
rorl
pop
sub
ss
lcall
nop
outsb
and
cli
ljmp
mov
lods
insl
not
add
stos
lods
dec
inc
jp
outsl
pop
adc
mov
and
xchg
aad
xor
pop
cmpb
ds
xor
xchg
sub
or
mov
imul
testl
jne
inc
adc
addr16
movlps
jb
enter
test
adc
rcll
inc
push
imul
enter
dec
pop
lea
movsb
cmp
mov
test
lret
aad
loop
lcall
stos
lret
mov
add
sar
icebp
imul
sub
jle
scas
mov
fidivrl
das
cltd
jb
sbb
mov
orl
mov
pop
je
iret
icebp
pop
es
clc
fsubrs
test
cli
xor
imul
dec
jmp
cltd
das
mov
pusha
xor
xchg
adc
mov
imul
jbe
or
js
outsl
xchg
les
movb
test
cmp
std
imul
dec
mov
imul
jg
shlb
and
mov
mov
or
jle
sub
xor
sub
sub
popa
xchg
int3
mov
fdivrl
or
ljmp
in
xchg
mov
mov
jb
arpl
and
cmp
setl
xchg
push
cmpsl
push
xor
sub
inc
loopne
pop
or
int3
push
and
adc
aas
cli
rolb
shlb
scas
test
adc
loope
scas
dec
mov
std
inc
repz
jb
movsb
inc
adc
cld
or
ds
xchg
fadds
xlat
cltd
and
xchg
out
cmc
es
iret
xchg
aaa
aas
inc
in
or
cmpsb
decl
sbb
mov
inc
incb
out
es
pushf
faddp
mov
add
dec
mov
les
inc
insl
mov
xchg
mov
jo
out
lods
out
xchg
and
lea
cld
dec
mov
aas
ss
test
adc
inc
cmp
out
cli
popa
push
jmp
sub
ljmp
inc
inc
or
adc
xor
jb
jg
xchg
ja
jmp
jl
std
xchg
push
in
xor
mov
jns
or
dec
xchg
es
bound
std
rcll
cmc
push
or
inc
in
cmp
fcmovnb
pop
pop
movl
add
bound
mov
cs
roll
out
mov
in
lcall
jbe
mov
test
nop
jmp
loopne
cmp
push
push
jecxz
int3
scas
ljmp
pop
test
push
insb
lcall
mov
jns
dec
popa
stos
sti
and
mov
js
lods
and
imul
and
or
lcall
cmp
sbb
or
pop
stos
hlt
xor
xchg
jg
mov
daa
xor
loopne
push
push
mov
sbb
inc
dec
push
cltd
in
sbb
xorb
and
sbb
add
cmp
xchg
ffreep
push
xor
add
sbb
daa
adc
or
in
mov
shr
lock
enter
xchg
or
push
pop
xchg
imull
or
xchg
bnd
fstpl
mov
mov
insl
out
xor
scas
and
subl
rcll
inc
shl
sbb
push
or
ds
in
psubusb
jns
xchg
and
inc
or
push
arpl
jle
mov
pop
adc
popa
insb
iret
les
push
mov
fwait
mov
xor
jae
scas
and
lock
loop
jp
add
test
adc
js
mov
cmp
mov
push
sub
and
leave
inc
mov
popf
out
mov
addl
hlt
jae
jl
push
inc
inc
mov
pusha
sbb
inc
mov
adcl
push
mov
pop
push
test
inc
push
xor
daa
setp
lret
pop
imul
scas
sub
and
pop
and
xchg
jo
push
xor
sub
ss
sbb
xor
jmp
jmp
inc
mov
mov
add
loope
push
and
mov
dec
dec
adc
xorb
xchg
fsts
cmc
mov
fisubs
inc
mov
movsl
jns
clc
mov
sbb
push
aam
mov
iret
add
loopne
icebp
insl
shr
sub
pop
clc
add
or
mov
push
and
add
fnsave
pop
movsl
dec
push
pop
mov
loope
imul
mov
imul
inc
test
test
psllq
jmp
add
sub
inc
push
jo
jne
icebp
jbe
into
push
fdivs
lods
jbe
cmp
push
test
cmpsl
nop
inc
add
ret
je
adc
aam
cmpl
dec
test
push
pop
mov
data16
cwtl
jmp
out
jecxz
imul
pop
dec
lock
mov
sub
push
fs
mov
sahf
or
pop
js
add
dec
mov
dec
repz
je
add
fcmovbe
mov
push
out
and
pop
lds
ficoml
lea
loop
std
insb
mov
mov
fistps
lods
out
in
inc
cmc
cmp
imul
sub
data16
jge
cmp
mov
jns
sbb
xor
clc
sub
cli
insl
pop
mov
lods
add
jb
or
iret
js
cltd
xor
adc
stos
cmpsb
dec
test
cld
clc
push
jl
dec
jno
cltd
dec
stos
pop
sti
push
sbb
jmp
jne
cmp
push
xor
fildll
cmp
je
push
ja,pn
xor
pop
ficompl
mov
mov
fimuls
lods
in
cmp
adc
cmp
lods
cmp
pop
fcoml
cmc
mov
js
xor
sti
push
outsl
xchg
clc
mov
adc
mov
push
orb
jb
dec
jg
mov
sbb
sets
adc
dec
daa
daa
outsl
dec
push
mov
pop
fidivrs
mov
pop
mov
push
dec
jns
xchg
ljmp
fcmovnu
addr16
stos
jmp
clc
nop
insb
rcrb
cmp
fiadds
js
xchg
fldt
clc
add
in
push
mov
push
ljmp
cmp
mov
push
pop
sbb
sbb
cmp
sbb
adc
lahf
pop
mov
js
mov
mov
rcl
popf
or
call
sub
pop
aam
fmul
fimull
mov
jg
in
fs
cwtl
ja
mov
mov
mov
cli
push
je
test
add
xor
bound
mov
in
sub
xor
push
xchg
mulb
vmulss
adc
mov
push
lods
movsb
cmpsb
add
adc
mov
scas
mov
stc
adc
sbb
xchg
ss
add
jo
xor
aas
add
sbb
ret
pop
pusha
mov
inc
cltd
and
adc
loope
out
mov
jo
outsb
das
ss
xor
adc
mov
sub
sub
dec
adc
push
or
adcb
icebp
gs
das
incb
stos
sahf
into
cmp
or
imul
xor
stos
data16
or
insb
mov
and
movsb
jo
sbb
cwtl
dec
jo
or
or
mov
lret
cmp
loopne
fidivs
mov
push
dec
mov
lret
jne
lret
fsubr
int3
sub
out
bound
cld
dec
jo
sub
sub
and
es
loopne
popf
or
pop
sub
sbb
call
ss
mov
call
andb
icebp
int
es
cmp
xchg
aas
mov
fwait
lea
aam
inc
mov
ja
mov
mov
ret
cmp
xor
ds
mov
test
cld
jecxz
mov
outsl
add
and
into
into
and
jp
lock
ljmp
imul
pop
shrl
movsl
push
xchg
ja
cltd
pop
outsl
xchg
pop
scas
mov
fdivrl
lahf
mov
or
in
jge
push
jmp
mov
in
push
nop
out
test
dec
dec
adc
shrl
int
ret
mov
sub
add
loope
sub
jae
push
and
outsl
push
lcall
popf
inc
fidivl
mov
sub
push
out
or
dec
sbb
div
fdivs
mov
orb
or
xrelease
jns
xor
push
cmp
in
pop
popa
test
inc
scas
cli
stos
push
out
push
add
push
or
fdivs
stc
mov
jmp
xchg
cltd
pop
iret
pop
divl
cvtdq2ps
push
mov
repnz
sub
pusha
mov
push
out
sbb
pop
xchg
leave
mov
inc
or
pop
mov
inc
xor
mov
xchg
sti
ret
hlt
jae
cmp
js
sbb
dec
dec
je
ljmp
or
jns
incl
dec
cmp
data16
std
int3
fsubs
xor
or
sbb
arpl
jns
inc
pop
mov
lcall
push
jne
mov
cld
adc
jno,pn
pop
cs
or
sbb
pop
and
push
mov
pop
lea
xchg
jecxz
adc
ret
mov
adc
popa
cmp
minps
mov
ss
pop
test
popf
enter
or
ljmp
mov
mov
push
sbb
in
in
push
pop
mov
cmp
cmc
push
add
inc
fcmovb
push
or
xor
xchg
inc
test
out
jne
rcrb
test
add
and
dec
push
pop
fisubl
push
je
fildl
ret
pop
mov
inc
xor
icebp
nop
das
in
scas
jg
xchg
packuswb
jle
ret
push
int3
jl
or
dec
pop
scas
out
outsl
adc
push
dec
mov
push
xor
mov
sbb
add
and
movl
pop
out
xchg
cmp
mov
das
aas
dec
push
movsb
aaa
mov
in
cmpsl
mov
lods
loop
pop
push
lea
in
cmp
cmp
jmp
cltd
ret
mov
frstor
jno
mov
rol
dec
jno
bt
fs
push
jbe
lcall
test
loope
sbb
jmp
mov
push
push
daa
dec
int3
loope
fisttpll
sub
imul
lock
pop
xchg
and
xchg
sub
leave
pop
inc
mov
js
pop
inc
jmp
jno
cmp
xlat
arpl
es
mov
test
dec
mov
fcmove
sbb
leave
lods
and
lods
jns
jmp
dec
mov
add
or
mulps
pushf
imul
ret
mov
xchg
loop
or
inc
test
in
jnp
mov
adc
jo
in
add
ficoml
or
mov
lahf
cmpsb
and
xor
xchg
xchg
cmp
hlt
or
and
add
cmp
cmpsb
jae
sub
sub
jle
pop
je
mov
ja
dec
lods
dec
mov
pop
movsb
sub
jl
mov
mov
enter
stos
popa
mov
fcmovb
cs
xchg
jle
jg
xor
stos
sub
pop
insl
push
ljmp
add
xchg
mov
xchg
jne
dec
add
xchg
fistps
pop
lods
pop
dec
fcmovnb
pop
push
mov
fsts
or
test
je
add
sbb
cmp
mov
out
ficomps
adc
shl
hlt
mov
out
mov
dec
subb
data16
fistps
inc
pop
pop
or
fcomps
aad
hlt
int
andl
add
orl
xchg
lret
aaa
repnz
or
fs
mov
pop
and
cmp
or
adc
jge
pop
das
and
push
xchg
cmp
out
and
rol
ret
mov
aam
and
into
shlb
inc
frstor
cltd
cmp
in
inc
lock
sbb
in
popf
cli
sahf
aam
cmp
push
cmp
sbb
fnstsw
cltd
sub
cmpsb
inc
das
xchg
movsl
mov
bound
pop
rorb
jle
imul
test
adc
rol
inc
mov
jb
jmp
cmp
jns
repz
cwtl
outsl
xchg
cs
mov
jno
and
xor
and
test
or
and
fsubp
sbb
sub
push
add
cmpsl
rorb
pop
icebp
pop
loop
xor
inc
sub
outsb
movsb
loop
lcall
cwtl
frstor
mov
pop
mov
sbb
dec
or
push
fs
fcmove
or
mov
inc
daa
repnz
mov
lods
rclb
rolb
cmp
stos
insb
imul
inc
call
ja
sub
push
or
call
in
jbe
lock
add
sub
test
or
sti
je
icebp
aaa
popa
and
add
mov
arpl
pop
movsl
int3
cld
dec
jl
sbb
sbb
das
mov
pusha
test
ret
inc
sub
test
into
sub
hlt
insl
xor
pushf
xchg
cmc
mov
and
iret
lahf
je
sbb
dec
push
mov
add
testl
push
es
and
outsb
fwait
jl
cmp
mov
dec
movups
lock
sub
cmc
add
movsb
scas
mov
xor
pusha
orl
mov
sti
jnp
enter
out
xchg
outsb
roll
push
mov
mov
mov
cmc
add
mov
aad
jp
test
mov
dec
outsb
mov
jno
in
jo
sub
jno
mov
iret
adc
es
rep
clc
or
into
xor
gs
jo
mov
fdivrs
jge
popa
sbb
pop
push
cmc
add
or
xor
jbe
mov
xor
movsl
jmp
dec
cltd
push
push
aas
mov
sbb
mov
xchg
xchg
pushf
in
xchg
in
pushf
mov
jle
mov
xchg
jbe
mov
mov
clc
cli
mov
adc
dec
pop
or
leave
xlat
xchg
lea
leave
adc
inc
sbb
aaa
and
and
or
cltd
aam
mov
lods
xchg
popa
xchg
sub
pop
mov
inc
mov
ja
out
stc
loopne
cmp
adc
xlat
sbb
fisubs
xchg
test
cwtl
adc
xchg
xchg
das
xchg
sarb
loop
daa
ds
into
lods
sbb
cmp
rcrl
cltd
loop
paddusb
sub
push
cli
ret
test
xchg
and
and
adc
sar
mov
out
mov
dec
sbb
insl
out
ret
cwtl
xchg
inc
add
test
movsb
inc
nop
mulb
enter
pop
mov
jp
pusha
rolb
ljmp
data16
stos
and
push
stc
adc
loope
ljmp
jg
sub
stos
test
pop
adc
mov
cltd
insb
cmp
mov
movsl
adc
loope
in
add
add
inc
adcb
fwait
pop
sub
pushl
pop
into
loop
outsl
or
out
lea
test
cld
mov
sbb
movsl
inc
fimull
dec
mov
int
std
sub
je
fstps
mov
mov
push
dec
jmp
mov
mov
pop
movsl
jecxz
frstor
push
cmpsl
jle
repnz
sbb
addb
xor
jno
jecxz
xlat
into
xor
sbb
adc
jge
and
fisttps
imul
mov
into
adc
add
imul
or
and
push
inc
or
sub
imul
jbe
push
pop
add
mov
lret
xchg
sub
or
dec
xchg
jp
roll
pop
jg
jnp
sarl
repz
mov
jl
add
arpl
mov
std
sub
dec
cmp
push
jle
movsl
adc
push
mov
and
xchg
ret
mov
loopne
or
dec
jns
mov
jge
sub
pop
aad
or
jp
cmc
shr
jecxz
cltd
jns
bound
add
in
adc
adc
xor
mov
jne
inc
inc
cmp
jp
popf
test
inc
paddd
fs
mov
and
push
or
adc
out
js
mov
repz
call
cmp
into
adc
in
and
icebp
faddp
and
movsl
push
popf
call
or
fwait
push
repnz
cmc
xchg
mov
out
or
ficompl
leave
pushf
push
lahf
gs
cs
repnz
cmp
ret
inc
out
mov
sbb
xchg
out
bound
outsl
movntq
out
push
je
int
stos
fisubl
jns
outsb
imul
mov
int3
rorb
cmp
mov
cwtl
les
cmc
xchg
cmp
jecxz
sbb
push
add
or
add
sub
fidivs
cmpl
dec
rcrl
pushf
pop
aad
popa
cmpsb
xlat
jo
nop
push
adc
popa
dec
cs
outsb
shrb
push
pop
je
adc
sub
movsb
scas
xchg
js
push
mov
stc
sbb
icebp
stos
or
test
or
int
pop
shl
cmp
sahf
ror
mov
int
jae
icebp
push
adc
loop
jne
jbe
clc
mov
cmp
cmp
mov
sbb
fcmovnbe
dec
inc
mov
mov
repz
lcall
inc
loopne
mov
jge
out
loope
dec
outsl
add
mov
enter
data16
dec
inc
and
jmp
xor
ds
fistps
jl
and
sarl
pop
aas
add
cmpsl
cmp
push
cmp
loopne
ret
test
cmpsl
int3
lret
push
push
dec
jne
sbb
test
je
adc
inc
cmpl
fisubrl
push
das
mov
mov
mov
mov
pop
xchg
pop
adc
jne
sti
leave
ds
xchg
push
mov
ror
sti
pushf
and
lahf
mov
xchg
sbb
int
sbb
testl
sub
or
jb
rcrl
inc
push
lods
add
inc
lods
push
push
cltd
push
mov
sbb
pop
jmp
mov
or
adc
ror
scas
sarb
adc
leave
add
jl
dec
xlat
cmc
xchg
mov
mov
adc
adc
mov
in
dec
adc
dec
cmpsl
mov
push
repnz
dec
fisttps
pop
xchg
mov
mov
jp
adc
dec
mov
stos
js
xor
dec
sbb
mov
pop
stc
bound
outsl
in
hlt
pop
inc
add
sbb
cmp
rcrl
pop
xchg
and
shlb
pop
add
sub
jl
aaa
arpl
ja
iret
adc
push
fcmovbe
xor
pop
int
rcl
push
dec
hlt
sti
xlat
fwait
mov
xchg
scas
pop
pop
xchg
xchg
adc
jge
mov
inc
into
add
outsl
adc
adc
jl
mov
loopne
pop
addb
lock
aam
add
mov
mov
push
imul
and
in
cmp
fnstcw
inc
popa
jo
and
sub
xchg
mov
pop
sub
cmp
int
int3
xchg
movsb
mov
mov
sub
mov
mov
or
loop
jne
cmp
sub
cwtl
push
ljmp
cld
pop
lock
fidivs
clc
je
popa
sti
jne
or
sub
lea
inc
or
pop
addps
movsl
arpl
sahf
into
iret
das
lcall
xchg
iret
add
gs
call
mov
pop
push
sarb
testl
xchg
test
push
ds
ja
outsb
adc
mov
fcoml
or
inc
pop
aam
jle
cs
cltd
ret
out
sbb
popf
mov
rcrl
stos
lahf
rcl
fdivs
inc
out
shr
pop
pop
mov
ficomps
dec
push
out
add
xor
orb
add
pusha
push
xchg
adc
icebp
das
loop
mov
aam
lods
cmpsb
mov
inc
lods
ljmp
test
iret
aas
sbb
add
movsl
loop
or
lret
inc
inc
mov
jge
mov
je
fsub
pop
sti
mov
adc
lcall
mov
outsl
fdiv
xor
xchg
mov
pop
xor
int
mov
jne
out
lcall
cmpsb
stc
mov
fstpt
out
jl
xor
movsl
lds
mov
aam
mov
xchg
push
sub
jmp
jb
jbe
pusha
jnp
mov
pop
fmull
mov
xor
cmc
sub
xchg
movsl
pop
fstp
adc
std
push
loop
mov
stos
add
mov
dec
mov
cs
sub
repnz
cmp
sarb
sbb
rcrl
lods
fstpt
and
daa
ret
imul
stc
sbbl
stos
add
sbb
pop
dec
sbb
lahf
adc
jmp
adc
xchg
ss
xor
push
rolb
hlt
and
cli
xchg
dec
push
das
js
mov
bound
and
cltd
xor
dec
inc
sub
popa
std
jo
lahf
neg
fmuls
ret
out
imul
lea
movsb
bound
mov
data16
scas
mov
dec
adc
mov
ficomps
xor
mov
adc
push
add
jo
push
fwait
inc
mov
xlat
sub
pushf
xchg
jg
pop
punpckhwd
inc
push
punpcklbw
push
pop
inc
jb
pop
pop
lods
out
jno
std
add
in
pop
lahf
mov
jge
aam
adc
push
mov
pop
and
loope
int
mov
stos
xchg
jge
xor
jmp
or
or
movsl
test
mov
mov
jp
rolb
mov
push
dec
js
daa
mov
in
pandn
iretw
jge
mov
sub
ja
lret
adc
push
int3
outsl
sub
jb
out
out
out
movsb
cmp
push
shr
iret
loope
aam
pop
lods
or
pushf
push
xlat
test
jge
imul
mov
js
push
mov
test
mov
filds
repz
mov
xchg
sarl
push
jmp
mov
or
jae
shll
lret
testb
adc
rcll
mov
mov
lret
push
push
loopne
mov
push
adc
push
mov
dec
hlt
jb
outsb
imul
adc
mov
sbb
nop
jnp
test
test
loopne
push
push
dec
mov
loop
daa
pop
xor
mov
movl
sti
ss
jl
pop
les
rorb
stc
sti
pusha
jle
adc
mov
cmp
mov
inc
inc
jle
mov
mov
xchg
xchg
imul
rcrb
and
push
adc
divl
jnp
xchg
dec
stos
xor
or
into
push
mov
or
out
push
jnp
inc
add
popa
xchg
das
scas
xchg
scas
and
jbe
sbb
push
xor
popa
mov
test
xchg
push
daa
ret
imul
jb
test
cmp
lods
int
and
adc
xor
cmp
outsb
or
lahf
mov
das
inc
adc
int
cltd
mov
xor
pop
jle
mov
push
mov
imul
lea
pop
addr16
jne
add
mov
add
mov
sbb
ja
dec
push
testl
xchg
subb
fwait
int
sbb
popf
jae
jb
sbb
iret
loope
mov
pop
out
int
and
or
xchg
sbb
jbe
push
inc
cmc
data16
mov
cmp
stc
pop
das
shlb
adc
xor
mov
nop
std
int3
push
pop
jl
and
cmpb
mov
js
cmp
jb
xor
inc
mov
lahf
lret
and
aaa
or
or
mov
dec
mov
mov
ss
jbe
lcall
cmpsl
mov
jno
and
mov
loopne
mov
stos
push
adc
insl
addr16
dec
mov
jns
cmp
loop
sub
addr16
inc
jb
mov
stos
repnz
dec
clc
inc
push
cmpsb
aas
lret
stos
xchg
mov
rorl
push
push
cmc
stos
mov
into
imul
inc
lods
xlat
jge
cmp
or
subb
cwtl
mov
add
ja
xor
cwtl
pop
push
mov
push
xchg
pop
jl
mulb
or
fisubl
jge
call
mov
dec
pushf
repz
inc
enter
jmp
sub
sbb
ret
js
cs
stos
jns
mov
push
push
pop
and
movsb
imul
dec
xor
imul
adcl
adc
and
daa
mov
inc
add
sbb
daa
xor
sbb
add
xor
push
stos
push
adc
xor
fwait
sub
sbb
pop
adc
sub
loope
int3
push
fmull
xchg
adc
mov
pop
fs
adc
jb
ds
rorl
stos
ret
ret
in
pop
out
mov
xchg
xchg
je
repz
jl
leave
repz
mov
and
stc
cld
lret
xchg
test
pop
in
ljmp
inc
lcall
jmp
sbb
inc
pop
jmp
scas
cmp
xor
aam
pop
and
and
es
add
cmpps
pop
shll
fistpll
sbb
and
ljmp
push
icebp
popa
jns
testl
dec
cs
xchg
jbe
fists
jb
xor
fsubrs
ret
inc
enter
xlat
fs
aam
fmuls
dec
das
leave
addr16
fistl
repz
jge
ret
add
rcll
cmp
jp
fwait
xchg
iret
sbb
sbb
sarb
mov
pushf
inc
and
lods
push
push
das
sub
adc
cmc
js
shll
shl
xchg
mov
xor
out
lret
inc
je
aam
mov
ror
sarl
in
lods
subb
inc
rol
iret
cmp
out
subl
stos
sub
loopne
int
cmpsl
xchg
mov
sti
adc
jp
roll
or
mov
je
mov
arpl
mov
stc
or
mov
sbb
lods
pop
test
xor
out
div
out
stos
imul
in
mov
jb
das
sub
xchg
imul
inc
jo
or
dec
inc
fldcw
sbb
test
jg
lret
shll
aad
aam
dec
lods
xchg
dec
stc
jnp
pinsrw
movsl
sbb
ja
outsb
pop
cmpsb
aam
add
mov
xor
arpl
add
sub
out
sub
imul
push
insb
adc
leave
mov
mov
mov
rorl
mov
inc
sbb
ficoms
xchg
adc
sub
addb
shlb
pop
xchg
outsb
mov
sub
fcoml
jno
lds
iret
lock
stos
data16
push
pop
cwtl
sub
shrl
fs
adc
pusha
add
cmp
or
test
add
dec
xlat
ljmp
data16
and
adc
outsl
dec
jle
push
shlb
repnz
aad
notb
icebp
adc
sub
int
outsl
popa
mov
inc
mov
and
cmp
dec
jecxz
fwait
cltd
arpl
and
mov
and
mov
push
mov
out
je
cmpsb
xor
sbb
push
adc
inc
jbe
sub
push
inc
mov
push
leave
adc
scas
xchg
loope
or
lods
les
arpl
inc
fisubs
lods
iret
push
or
fwait
sub
fistpl
fisubl
js
or
pop
cwtl
or
daa
lret
inc
out
cld
aaa
es
movsb
push
pop
shlb
lods
int3
or
adc
xlat
or
ret
movsb
sbb
mov
or
jnp
mov
add
inc
adc
push
psubusb
sub
nop
cmp
andl
add
jle
jecxz
inc
or
shlb
jle
mov
mov
out
arpl
lahf
lock
mov
cmpsb
leave
ret
or
cmp
jmp
mov
mov
and
pop
add
sub
es
xor
xor
push
imul
jmp
or
sbb
xchg
xchg
cli
push
cmp
jmp
xor
bound
mov
mov
or
mov
adc
jle
ret
mov
mov
into
aad
push
test
sbb
push
push
mov
mov
outsl
xor
scas
mov
dec
shlb
and
inc
lock
je
xchg
setle
or
notb
pop
jae
aaa
clc
es
sub
inc
sbb
or
sbb
jg
imul
out
lret
cmc
inc
jae
or
in
shlb
sbb
fsubs
jae
dec
adc
mov
pusha
out
ret
mov
cld
add
jnp
cltd
fcomp
mov
mov
sarb
push
test
xchg
lret
fdivs
aad
out
jo
stos
mov
dec
pop
add
and
and
aad
int
mov
mov
xor
addr16
pop
ljmp
fs
scas
cwtl
lods
loope
rolb
test
cwtl
pusha
repz
cld
pop
pop
jl
push
xchg
lret
insl
test
outsl
fwait
nop
mov
and
jmp
in
pop
mov
push
jmp
or
mov
xlat
or
or
clts
ss
sbb
xchg
push
enter
or
shrb
mov
mov
ret
xchg
mov
xor
ret
mov
mov
fmull
dec
inc
jbe
rcl
jmp
and
cmp
adc
mov
into
jnp
pop
dec
aas
inc
adc
fnstsw
sbb
jae
sbb
inc
test
or
pusha
in
dec
jmp
out
or
addl
fcmovb
out
adc
inc
inc
ror
lea
push
jae
mov
mov
rorb
push
adcb
mov
in
jnp
scas
stos
or
les
scas
mov
aad
pop
or
out
push
adc
es
roll
or
fidivs
shlb
aaa
adc
nop
repz
fsubrl
sub
xor
loope
xchg
xchg
mov
and
outsl
mov
cmpsb
sub
out
repz
enter
daa
icebp
push
daa
sub
inc
imul
inc
push
lods
cmc
outsl
andb
dec
jb
inc
add
inc
decl
sbb
mov
mov
stc
mov
out
cmpsl
xor
outsl
jnp
sub
add
std
outsl
ljmp
and
cwtl
or
sbb
mov
insb
lock
inc
inc
add
js
xor
aad
mov
mov
cmpb
or
sub
stos
cmpsb
iret
in
push
aaa
and
inc
jge
push
mov
ds
fidivrs
mov
xor
stc
or
das
push
aam
fs
and
sub
orb
push
push
or
dec
or
pop
in
xorl
or
shl
repnz
jle
loop
and
pop
inc
sarl
das
xor
mov
xchg
jmp
pop
add
mov
out
fldt
xlat
pop
inc
loopne
add
and
daa
or
inc
push
xchg
sti
dec
mov
sub
pop
dec
mov
pop
cmp
fimull
adc
jmp
xorb
lock
xor
rolb
popa
pop
aad
mov
stc
sbb
addb
sbb
dec
int
daa
jns
fidivs
push
psrad
mov
xchg
scas
jb
lahf
mov
insl
mov
lret
sbb
call
jl
ljmp
aam
mov
sub
mov
pop
shr
test
mov
test
add
shl
gs
sbb
aad
pop
loop
mov
push
mov
cmpb
or
sub
cmp
add
sub
mov
mov
pop
mov
add
lret
cmpsl
xor
pop
inc
add
and
fimuls
in
dec
sbb
dec
jmp
out
pusha
jb
fstl
pop
mov
xchg
or
xor
stc
dec
jecxz
and
jle
in
pop
mov
mov
cwtl
xorl
repnz
rol
mov
pop
pusha
fnsave
push
hlt
push
mov
in
negl
push
cmp
mov
rorl
js
pop
fs
enter
ret
ds
outsl
and
sub
inc
addr16
or
filds
mov
bnd
sbb
test
push
jno
xchg
sub
sbb
shr
cltd
jecxz
imul
clts
mov
in
negl
pop
movsl
jbe
fldl
xor
imul
in
lret
lods
push
add
pop
scas
lahf
push
or
sub
cwtl
dec
xor
jge
mov
inc
inc
aam
call
fidivrl
ret
or
addb
add
and
xchg
pusha
int
cmp
aas
addr16
push
xchg
in
pop
imul
lock
xor
imul
push
nop
iret
rol
dec
push
into
pop
fcmovu
arpl
bound
sub
xchg
fiaddl
push
in
jp
test
and
shr
dec
cmp
sub
or
insl
in
mov
enter
ljmp
clc
sub
out
fmuls
mov
icebp
inc
shl
and
lods
mov
rcr
push
shll
push
mov
dec
xchg
loope
xchg
cmp
jno
cld
in
and
jne
lcall
out
mov
mov
lock
adc
or
adc
add
jnp
pop
dec
aas
inc
in
mov
mov
test
gs
imul
adc
cmpsl
mov
repnz
lods
xor
out
xchg
push
cld
mov
cwtl
lahf
adc
cmc
mov
mov
and
adc
mov
stc
push
lret
cli
adc
push
out
xor
icebp
adc
mov
push
scas
pop
std
cmovae
xor
clc
xor
mov
mov
xor
xor
in
push
lock
outsl
pushf
sub
call
add
int
out
mov
int
xor
mov
mov
movsl
mov
cmp
jne
pop
adc
andb
ds
call
mov
adc
nop
push
test
xor
iret
test
mov
jo
cld
mov
pushl
sbb
sar
ja
xchg
push
inc
cmp
pop
sub
xchg
clc
pop
xchg
mov
mov
es
out
cmp
add
lods
pop
movsb
xchg
mov
dec
cmp
or
cmp
out
loope
adcb
imull
dec
shlb
sti
rorl
push
lods
sub
sub
sub
xor
hlt
add
mov
jge
xchg
ss
adc
jbe
dec
cmpsl
int3
sti
ret
das
lahf
lock
inc
gs
pop
add
sub
outsb
aad
xchg
lea
movsl
sbb
adc
inc
addr16
or
fcomip
push
mov
aam
mov
aaa
mov
sahf
daa
subb
pop
dec
mov
scas
ret
pop
mov
cmp
mov
dec
pop
cmpsl
addr16
push
fwait
dec
mov
stos
mov
inc
jbe
test
lock
int
pop
outsb
xchg
dec
xchg
mov
add
pop
inc
fdivl
xor
xchg
xor
mov
jno
mov
imul
in
fsub
popa
mov
push
scas
gs
sub
cmpsb
leave
sbb
mov
jb
mov
negl
push
cmp
mov
rorl
or
push
jp
cmp
mov
cmpsb
int3
mov
add
fidivrs
mov
sarb
ficoms
fmuls
add
mov
xor
jge
aaa
jbe
xchg
sbb
adc
test
cmp
out
loope
xor
lock
and
dec
repz
jle
xor
orb
mov
cltd
cmp
xchg
lods
push
jmp
lret
mov
or
xchg
xor
sti
pop
or
and
lods
in
call
mov
or
xor
lea
mov
push
and
pop
loope
jl
xor
xor
mov
cld
repnz
aam
sub
dec
scas
icebp
stos
mov
lock
add
sub
dec
dec
popa
xor
movsl
jp
sbb
rorb
orl
and
push
movsl
divb
jle
out
test
and
fistpl
push
cmpb
ret
mov
cs
or
scas
cmp
mov
aas
sbb
and
dec
out
fldt
xlat
pop
inc
stos
mov
add
jge
in
lahf
mov
stos
pop
push
cmp
pushf
sub
xchg
or
jb
dec
cmp
push
mov
mov
in
jbe
push
jle
ljmp
jae
icebp
jp
inc
pop
and
sub
je
movb
inc
xchg
adc
pop
subb
push
jle
stos
sub
xchg
lret
in
ja
xor
cmp
mov
xlat
fstpl
push
dec
test
adc
stos
xor
test
ret
cli
cmp
jle
pop
xlat
mov
dec
mov
dec
xor
mov
inc
fisubrl
sbb
add
pop
xchg
lea
add
pop
push
lcall
jecxz
and
cmpsl
cmp
dec
js
cld
lods
dec
in
test
imul
out
push
fistpl
pop
orb
adc
cmp
ret
test
stc
cld
movsl
sub
loop
push
shll
pusha
push
repz
leave
inc
pop
add
adc
icebp
cmpsb
xchg
dec
add
xorl
out
lcall
xchg
fld
mov
mov
mov
jne
repnz
fcompl
ds
and
mov
hlt
loopne
shlb
ja
icebp
jne
push
pop
push
scas
cmp
sbb
dec
cmp
sbbl
pop
adcl
orb
and
push
lds
sub
jnp
out
imul
adcl
dec
dec
sahf
jns
bound
inc
mov
cmpb
fs
out
es
lds
xchg
sbb
clc
lahf
rol
ja
xchg
add
or
nop
jmp
popf
xchg
into
sub
lahf
or
call
outsl
push
inc
dec
fs
aam
gs
fisttps
rcl
fcmovb
pop
inc
pop
insb
flds
lock
add
ss
popf
enter
and
mov
or
push
and
adc
data16
push
mov
js
pushf
bound
lret
insb
push
outsb
inc
mov
sub
aad
pusha
jo
lea
push
xchg
aas
cmpsl
in
mov
adc
das
or
xchg
sbb
imul
push
inc
hlt
mov
nop
mov
shrb
and
and
pushl
nop
inc
fdiv
sub
adc
jnp
cld
dec
sub
mov
movsb
mov
lock
dec
cmp
sbb
fs
xor
sti
push
pop
fwait
inc
cmp
insl
hlt
and
cmc
int3
jns
adc
aas
test
mov
loope
sub
adc
inc
sbb
movsl
orb
stos
ret
arpl
cld
insl
aas
sbb
cmp
jle
jp
movsl
push
int3
jle
pop
ret
mov
mov
mov
test
popf
sbb
aad
xchg
jl
lea
scas
imul
mov
mov
out
imul
xchg
into
sti
orb
pop
loop
adc
dec
ljmp
ds
sbb
ret
int3
mov
pop
sub
cld
int3
jno
mov
mov
pop
cmc
cmpsl
sar
dec
cmp
into
mov
stos
fwait
sbb
sbb
aas
pusha
jge
sarb
mov
pop
and
stos
xor
adc
cs
movsb
mov
mov
imul
dec
fbld
push
fst
and
ds
out
mov
cwtl
loop
pusha
mov
cmp
stos
inc
xor
push
ret
xchg
pop
aas
add
xchg
lock
ja
fwait
sub
lods
xchg
pop
rolb
pushf
rolb
out
lret
lock
jne
cmp
int
and
sahf
loope
push
mov
test
inc
xchg
shlb
out
pop
xchg
and
mov
movb
xor
add
mov
sbb
sub
mov
cmp
cmp
lret
pop
shl
mov
rolb
insb
call
dec
jbe
subl
push
xor
or
ljmp
xchg
aad
jmp
pop
and
lock
and
push
in
or
jns
dec
pop
aaa
lret
imul
clc
pop
add
pop
mov
xor
data16
lret
in
or
js
sub
jne
addr16
xor
dec
sbb
cmp
flds
lock
pop
ljmp
jmp
sub
mov
lret
pop
sarb
addr16
imul
sub
in
sbb
int
cltd
loopne
sbb
test
pop
mov
aam
or
push
divb
out
or
lcall
jae
dec
add
lods
xchg
lods
out
lods
shr
xor
imul
sti
mov
mov
enter
ret
in
enter
leave
adc
push
dec
cmp
mov
sbb
xchg
or
es
rolb
in
jae
sti
pop
add
pop
add
mov
std
icebp
movntps
or
imul
rolb
mov
fs
push
das
mov
mov
pushf
adc
and
clc
scas
mov
jle
pusha
add
test
and
gs
add
out
sahf
aaa
scas
sahf
shrb
or
and
dec
repnz
jmp
shl
mov
out
jp
sbb
loopne
xchg
inc
xchg
movsl
inc
std
data16
jbe
repz
pop
fildl
orb
test
sbb
cltd
aaa
jnp
lods
or
jo
enter
movsb
aad
popa
jb
ret
sbb
add
adc
cli
xor
fcmovbe
lock
push
aaa
push
cmpsl
aad
jecxz
mov
mov
test
jo
mov
mov
sbb
cmp
jecxz
xchg
lods
pop
push
rcll
daa
rcrb
shr
xchg
push
cmpsb
pop
scas
dec
and
sub
add
mov
xor
mov
scas
lahf
popf
or
mov
test
movsb
in
cs
xchg
js
push
popa
sub
or
inc
inc
jmp
lahf
xor
loope
pop
data16
call
mov
test
or
sub
mov
or
out
daa
and
lret
sbb
imul
xchg
aaa
inc
mov
mov
stos
icebp
mov
js
xchg
xchg
pusha
fsubrs
cli
fidivrl
mov
jecxz
jb
cmpsl
adc
pop
int3
adc
xor
negl
call
cli
pop
stos
fistpll
ds
or
push
aad
daa
movsl
or
cmp
xchg
cmp
inc
push
cmpsl
jp
jo
mov
inc
in
push
and
aaa
pop
lret
aam
xor
and
dec
fmull
lret
sarb
insb
pop
stos
xchg
test
repnz
jb
inc
xchg
xchg
popf
cld
imul
xchg
notl
shlb
sbb
out
ds
daa
or
xchg
sub
cmpsb
push
rep
mov
aas
cmp
cwtl
addr16
xchg
bound
cwtl
adc
test
addr16
push
sbb
xlat
mov
fdivs
xchg
loop
jg
loopne
imul
push
mov
push
mov
dec
aad
ret
dec
mov
xchg
imul
mov
push
je
sub
rol
push
ret
mov
jns
push
addb
push
sbb
pushf
cmpsb
leave
outsl
insb
fsubrl
shrb
jl
popf
lock
aaa
xlat
lock
or
push
in
mov
sbb
mov
enter
mov
adc
xchg
jg
ss
fwait
inc
or
ss
ds
jge
xchg
jg
cmp
lahf
loope
and
and
push
lock
jmp
cld
xchg
cli
dec
dec
jnp
mov
cli
dec
aas
cmp
or
daa
jb
adc
xchg
cli
inc
mov
cmpb
jo
test
test
in
fnstsw
xor
and
and
gs
and
fidivs
fwait
cli
das
stos
notl
add
xor
sbb
xor
sbb
xor
or
lret
lahf
or
push
xchg
mov
flds
push
popf
addl
and
mov
jge
mov
rolb
mov
jo
jecxz
push
hlt
xchg
lcall
xchg
push
xchg
fucomip
scas
cmp
lods
push
int
addr16
bnd
sbb
cmp
insb
jge
add
mov
int
imul
jmp
push
imul
mov
mov
jl
test
inc
push
iret
gs
inc
stos
cmp
stc
movsl
push
out
sub
jo
mov
mov
push
push
testl
fwait
stos
jnp
ror
mov
cmp
mov
and
sub
enter
sbb
mov
inc
add
shl
ret
loop
xor
cmpsl
and
mov
loop
jb
mov
dec
mov
cmp
insl
sub
or
das
ljmp
sub
fnstsw
out
clc
dec
inc
dec
inc
pop
leave
and
adc
test
js
enter
or
xor
clc
push
subl
and
xor
scas
loope
fsubs
xchg
dec
or
xchg
stc
ds
pop
xchg
cli
lds
lret
test
mov
or
cli
or
sbb
pop
out
mov
in
mov
cmpsl
sbb
stc
sub
inc
lret
orb
clc
or
out
arpl
in
mov
jno
dec
mov
popf
or
jmp
ljmp
xchg
arpl
ja
push
pop
shrb
cmp
jne
sbb
push
aad
push
imul
cmp
and
xchg
xchg
adc
lea
xchg
lret
xchg
test
sbb
inc
test
das
mov
add
test
cmp
push
iret
out
adc
in
sub
jno
xor
aas
adc
in
or
std
push
jb
push
xchg
cs
xchg
pop
xchg
filds
mov
incl
inc
sbb
cli
mov
sbb
sti
mov
add
js
sub
fsubrp
or
popa
xor
or
xchg
jno
jae
or
movsb
sbb
cltd
adc
pop
out
cmp
cli
jecxz
icebp
push
shlb
clc
fiaddl
push
push
or
imul
mov
push
clc
push
cs
out
cmpb
stos
sar
or
insl
ficompl
xchg
sbb
or
js
cltd
xchg
lds
and
pop
roll
mov
cwtl
sbb
push
outsb
js
enter
adc
xlat
dec
std
aas
daa
iret
inc
mov
sbb
je
das
push
fs
mov
adc
lods
inc
xor
dec
xor
mov
js
jo
adc
sahf
fsubrs
pop
movsl
insl
jmp
sub
loopne
imul
mov
pusha
push
mov
jb
cmp
shrl
bound
dec
lret
mov
ret
in
lds
les
inc
cmc
adc
mov
cmp
jp
pop
ror
inc
pop
popf
fiaddl
loopne
inc
xlat
in
pop
mov
add
add
ds
or
in
repz
clc
test
jp
and
mov
inc
pop
mov
dec
sub
movsb
mov
insb
xchg
insb
inc
std
push
sarl
jmp
push
repnz
adc
mov
les
dec
lret
in
daa
ret
xchg
clc
mov
fimuls
mov
fldcw
loopne
jne
jge
inc
xlat
rolb
push
in
sbb
and
inc
fisubl
ja
es
sbb
jae
mov
stos
dec
jl
enter
in
sub
bound
notl
cs
rcrl
xor
mov
and
je
jmp
fs
shlb
repz
les
lock
ficompl
mov
clc
ret
loopne
es
data16
in
xlat
add
fstp
fstps
mov
lock
xchg
std
orb
push
jmp
and
cmc
dec
sub
lods
daa
pushf
sub
push
cmpsl
sub
mov
test
push
push
stos
cmc
xchg
jle
add
sbb
fisubrs
insl
js
mov
lods
push
cltd
push
push
dec
pop
test
mov
add
xor
pop
push
cmp
cmpsl
cmpsb
jle
mov
insl
movsb
add
or
adcl
in
pushf
fisubrl
sbb
xchg
add
sbb
push
cmc
loope
jns
pop
insb
ret
hlt
hlt
xor
or
add
pop
dec
stos
test
imul
hlt
fldcw
outsl
jb
jns
lea
and
mov
lock
inc
mov
sub
adc
or
mov
out
shrl
sub
lock
std
std
jae
ss
pop
js
in
fists
div
sub
jmp
or
test
mov
and
in
data16
add
add
outsb
mov
clc
xchg
xor
addl
sbb
jl
aaa
adc
xor
or
cltd
pop
icebp
fstpl
cmp
mov
adc
push
pop
arpl
dec
mov
adc
sbb
movsb
jae
push
xor
pop
push
add
add
repnz
push
xor
and
into
lods
icebp
jo
mov
mov
dec
daa
sahf
mov
xor
xor
sub
add
or
cvtdq2ps
jmp
movsl
out
in
out
xchg
jg
sbb
cmc
stc
fcompl
sub
call
cwtl
clc
pop
testl
xchg
call
pop
pop
mov
test
mov
test
mov
cli
pop
adc
xchg
xchg
mov
sahf
aad
lock
inc
adc
and
and
call
aas
call
pusha
pusha
pop
mov
movsb
or
loop
pop
mov
addl
adc
jb
mov
mov
pop
popf
out
mov
sbb
enter
inc
rcrb
in
andb
inc
and
push
and
notl
loope
adc
jne
mov
sub
fmull
pusha
fdivrs
xor
jne
rcr
mov
cmc
das
add
cltd
or
push
jge
inc
mov
jecxz
inc
stc
das
sahf
ljmp
leave
jnp
xor
ljmp
xchg
hlt
and
cmpsb
jo
movsl
jnp
ret
call
test
ds
mov
mov
xor
pop
mov
lahf
or
call
cltd
jnp
inc
loop
insb
fimuls
out
push
iret
mov
out
int
cmp
sub
in
movsl
mov
mov
or
aad
cltd
mov
data16
adc
and
add
cmp
lods
jnp
call
sbb
jo
mov
fstps
outsb
lcall
shrb
aad
push
ja
movsb
mov
push
fstpt
xor
inc
xchg
fidivrs
add
sbb
push
subl
mov
inc
notb
dec
push
es
ja
mov
les
jl
data16
jecxz
out
in
mov
insb
dec
xchg
fdivr
insl
das
sbbl
mov
xchg
and
inc
stc
inc
sub
movsl
fdivrl
add
push
loope
aad
dec
sti
pop
cmp
in
pop
nop
repz
cmpsl
sub
test
dec
sbb
int3
pusha
sbb
je
mov
and
inc
leave
mov
enter
cmp
ret
cmpl
jns
xor
lds
je
mov
imul
daa
xor
loop
pop
stc
xlat
push
dec
test
add
mov
pop
jle
push
xor
cmpsl
mov
and
cwtl
add
out
and
xor
test
insb
push
or
repz
xchg
mov
sti
mov
in
in
xchg
ljmp
xchg
popf
push
mov
adc
inc
mov
mov
mov
cmp
lds
push
pop
mov
mov
inc
add
lock
xor
cltd
arpl
xor
mov
out
outsb
lahf
rcl
js
mov
push
fnsave
jge
rorb
dec
cmp
pop
cmc
cmpsb
fmulp
adc
lcall
nop
and
aam
mov
adc
jb
mov
xchg
jne
imul
aad
inc
adc
jmp
mov
out
movl
das
adc
and
addl
imul
push
jle
call
lods
and
inc
jbe
lret
out
loop
sbb
sub
test
scas
push
xchg
out
fstpt
pop
arpl
push
adc
mov
sub
into
cmpsw
or
pop
mov
sbb
inc
in
cmp
pop
nop
or
sbb
stos
lcall
push
icebp
in
nop
cmp
xor
lret
or
out
dec
inc
loopne
test
in
fimull
mov
fldt
clc
insb
aaa
in
dec
pop
cli
and
sbb
bound
push
inc
repnz
icebp
xchg
lahf
ret
shrb
and
xchg
jnp
fisttpl
xor
cmpsl
inc
lods
sti
jmp
fists
xor
lret
clc
pop
fisttps
push
sbb
lret
call
fistps
je
xchg
div
and
out
fsubl
push
cli
sub
and
das
loope
sbb
les
in
adc
rcrb
inc
fidivl
add
jns
mov
mov
fcoml
fnstenv
dec
cltd
faddl
xor
jb
js
test
sub
cmp
movsl
in
outsl
sahf
andl
decb
jecxz
xchg
push
mov
pop
mov
jge
aad
loope
cmp
adc
jnp
addb
mov
sub
js
mov
adc
movsb
lods
jl
ret
inc
cmp
pop
loop
gs
sub
add
nop
in
imul
insb
test
dec
out
je
icebp
dec
and
push
add
mov
sub
loope
add
cmpsl
sub
jp
mov
ret
dec
mov
dec
rorl
sti
call
int
mov
aam
jmp
mov
inc
inc
inc
aaa
jge
rcrl
xlat
add
mov
iret
nop
mov
pop
cmp
lret
popf
outsb
test
mov
aaa
pushf
scas
sub
loopne
repz
sbb
xchg
test
mov
outsb
push
dec
and
popa
mov
lret
mov
inc
insl
test
mov
outsl
dec
pop
imulb
lods
inc
mov
mov
fdivp
mov
test
das
jo
dec
js
imul
stos
imul
cmp
push
pop
jne
movsb
push
push
and
adc
adc
in
scas
int
mov
push
mov
sub
sarb
call
cmpsb
sub
aaa
mov
lds
and
dec
push
adc
ss
shrl
push
add
cmc
sti
sahf
cmp
pop
out
aas
mov
xlat
scas
cmc
movhps
fstps
sbb
mov
rclb
and
push
add
das
inc
jbe
push
ja
xor
insl
test
mov
stc
or
js
popf
xchg
jle
stos
adc
lods
jge
inc
push
into
bound
test
xor
xor
movsb
in
mov
scas
pusha
jge
push
out
push
mov
adc
int3
stc
xchg
push
xor
lcall
lcall
fmull
lret
sahf
movsb
iret
inc
cli
push
shl
or
lcall
sbb
xlat
shufps
popa
sbb
fisttpl
pop
sub
lods
lcall
jle
mov
mov
sbb
or
in
leave
jno
aam
add
pop
jmp
sub
clc
pop
and
icebp
and
frstor
popf
popf
add
fcoms
in
leave
pop
push
fwait
xchg
xchg
into
inc
loopne
int
gs
mov
fldt
pop
or
cld
jnp
mov
test
pushf
repnz
adcb
inc
popf
adc
xchg
xchg
mov
adc
push
xor
push
insl
int3
xchg
add
cmp
lods
sbb
jl
xchg
orl
inc
mov
inc
pop
inc
hlt
cmp
pop
push
hlt
dec
xor
and
int
repnz
dec
push
sub
and
cmp
cmp
xor
js
jg
jecxz
cmp
aam
inc
pop
xchg
loopne
fstpt
leave
add
or
test
fst
push
push
or
in
int3
sub
int3
les
ret
inc
xchg
ljmp
pop
or
mov
jp
out
mov
sub
mov
inc
push
pop
mov
dec
mov
xor
je
sbb
pop
add
xor
aas
rorl
pop
dec
clc
add
xor
xchg
nop
push
adc
insl
and
inc
sar
mov
enter
outsl
and
mov
jbe
out
push
jns
pop
adc
out
dec
mov
add
adc
push
cmp
add
inc
jbe
push
cmp
and
inc
mov
add
rolb
add
out
pop
sbb
call
aas
xchg
insl
cmp
mov
mov
push
push
andl
push
das
lret
xchg
hlt
add
and
mov
xchg
outsb
or
loopne
cld
insl
xorb
movl
ret
mov
xor
add
adc
dec
scas
push
pushf
mov
ljmp
or
inc
sub
and
int
or
mov
ret
data16
loopne
pop
inc
lods
jecxz
lds
les
insb
fisubl
inc
leave
or
loop
and
push
cltd
sub
sub
int
pop
push
xchg
out
mov
sub
adc
ret
cmp
dec
dec
cmpsl
sbb
push
addl
scas
clc
popf
sub
stos
lds
sbb
adc
ja
xor
push
xor
push
or
addb
in
sbb
fwait
cltd
sbb
ja
loopne
test
mov
pop
cmpsl
and
jnp
sbb
mov
sbb
sub
sbb
mov
cwtl
xchg
cmp
and
lea
or
or
sbb
scas
inc
pop
fwait
sub
push
ds
add
test
out
ret
shll
adc
enter
cmp
push
pop
std
outsb
test
aam
div
hlt
rolb
mov
in
mov
sti
data16
push
add
stos
fcos
mov
testb
xchg
fidivs
mov
or
inc
imul
js
stos
loopne
cmp
out
es
push
sub
rolb
cld
nop
add
inc
jno
xchg
inc
xor
mov
cmp
shll
ljmp
sub
fs
dec
or
insl
add
xorl
cmp
fsubrp
addr16
shll
mov
adc
cld
mov
test
xor
test
rep
insb
sub
inc
repnz
enter
xor
xchg
mov
xor
fisttps
inc
add
loop
or
js
je
cwtl
mov
loop,pn
dec
lds
js
push
dec
sbb
sub
cmp
inc
arpl
movsl
in
nop
cmc
dec
xchg
cmp
rcrb
lock
inc
push
ja
out
mov
pop
mov
jp
mov
and
dec
ljmp
inc
fcomip
sub
leave
imulb
xchg
or
jmp
mov
push
andl
cmp
pop
jge
fimull
hlt
das
test
dec
imul
jae
pop
mov
xor
cmc
iret
cld
lea
aad
ret
mov
inc
mov
or
repnz
mov
mov
stc
mov
inc
sbb
cltd
repz
hlt
sub
adc
in
lret
repz
pop
and
aas
jl
sbb
fdivr
sub
pusha
and
fldl
sbb
mov
jg
repz
aad
insb
lahf
fcoms
jecxz
das
clc
sarl
mov
push
cmp
pushw
insb
push
add
out
jo
addr16
pushf
imull
mov
cmp
pop
jns
loopne
subb
cld
sbbb
jmp
sbb
mov
rcrl
inc
push
out
pop
jns
xchg
mov
cmpsl
sub
faddl
sbb
adc
loop
js
cs
or
mov
imul
in
ret
pop
jns
dec
inc
inc
jno
adc
mov
xchg
cltd
cmpsl
mov
loopne
jle
mov
pop
stc
add
pushf
fwait
loopne
mov
pusha
dec
js
aaa
jmp
in
cmp
iret
xor
scas
repz
jo
hlt
pop
mov
cltd
jmp
add
repz
mov
or
iret
and
cmpsb
or
inc
mov
mov
out
xor
jns
push
inc
jg
gs
and
xchg
adc
sub
pop
andl
stos
outsb
sub
sbb
insl
sbb
and
mov
cmp
loop
pushf
insb
fidivs
mov
mov
xor
xlat
cmp
in
das
mov
aad
scas
pop
dec
scas
es
and
mov
out
push
pop
and
aas
fcmovnb
in
outsl
icebp
jo
imul
sbb
and
repz
lods
mov
and
scas
std
pop
or
adc
jecxz
push
cmp
jmp
arpl
adc
in
dec
push
mov
lcall
jecxz
mov
aad
xor
leave
push
les
and
mov
ds
inc
xor
test
outsl
in
jmp
sub
ja
sub
shlb
mov
addr16
add
lods
int3
aam
push
mov
mov
cmpsb
or
or
xchg
pop
cmc
nop
add
cmp
push
clc
lret
fnstsw
add
loopne
adc
pop
adc
sti
add
mov
das
sti
lea
lock
push
sbb
cmp
mov
es
and
scas
xchg
js
ds
popa
pushf
sbb
out
xor
and
divb
inc
cmc
and
fs
out
and
add
shl
in
xchg
adc
lods
inc
sbb
in
test
clc
push
xchg
out
and
lea
xchg
jnp
mov
bound
adc
pop
out
clc
cmp
shrb
das
mov
jle
repz
jge
movsl
dec
xor
loopne
mov
nop
movsl
pop
movsb
pop
in
daa
push
mov
jne
xchg
into
fnstsw
push
sub
and
xlat
ljmp
mov
iret
scas
mov
xchg
roll
mov
pop
aaa
lock
cmpsb
pop
cwtl
sar
in
test
dec
loope
mov
mov
cmp
and
inc
pop
jmp
mov
cmp
shr
jmp
outsb
adc
aad
sub
test
mov
jg
jne
out
jecxz
repz
mov
and
enter
leave
lock
add
mov
xor
loope
pop
movsl
mov
xlat
xchg
out
push
xlat
push
jl
movsb
sub
fmuls
xor
lods
jbe
jecxz
push
fldcw
mov
and
cmp
jbe
and
sahf
mov
int
xchg
jmp
fcomps
lahf
inc
mov
test
mov
mov
js
pop
mov
xchg
pop
mov
int
push
fcomi
mov
fildl
push
pop
aad
cmovs
fxch
xchg
aam
out
rcrb
adc
sbb
leave
add
int3
call
and
jo
aas
sti
mov
push
inc
cltd
out
xchg
mov
jmp
outsb
xchg
mov
mov
jg
aam
fadds
or
or
stc
sub
arpl
and
inc
cmp
xchg
xlat
push
or
inc
shlb
cmp
xchg
pop
cmp
sub
mov
or
mov
repnz
into
push
mov
push
jle
movsl
add
adc
push
or
jne
cmp
test
mov
and
sub
and
roll
sbb
jnp
pcmpeqd
xchg
mov
cmp
aaa
xor
push
xor
lret
sub
dec
pop
xchg
jecxz
scas
rol
jl
and
cltd
or
xor
dec
push
sbb
or
or
sub
cmp
fs
adc
clc
insl
ja
jbe
add
lcall
jns
push
lock
dec
shr
jb
std
hlt
inc
bound
dec
ret
in
ja
xchg
jecxz
inc
mov
push
pop
jmp
gs
lock
mov
or
mov
xchg
dec
scas
std
and
push
int3
or
sub
pop
cs
insb
lds
dec
jno
lret
xchg
pop
cmp
mov
jno
adc
inc
xor
aas
out
pop
in
add
das
and
xchg
cmc
or
push
push
inc
cmpsb
hlt
add
pop
cmp
push
xchg
mov
mov
pop
and
inc
inc
mov
or
or
mov
aad
imul
andb
scas
rcrl
sub
mov
push
sbb
loopne
add
or
inc
lds
repnz
sub
scas
xor
add
dec
imul
stos
rol
push
dec
mov
pop
jb
and
dec
icebp
push
push
roll
mov
sub
inc
out
ljmp
out
in
mov
cmpsb
addr16
and
popf
clc
data16
add
adc
aas
cmp
add
pop
mov
jg
xor
xor
push
clc
xchg
ss
adc
cmp
test
xchg
stos
shl
ret
sub
int3
imul
data16
sub
in
push
popa
jne
les
pusha
int3
fwait
stos
jne
mov
ljmp
adc
sub
out
ret
dec
mov
push
mov
test
lods
add
inc
push
mov
sti
jg
mov
mov
icebp
std
sbb
mov
out
mov
push
or
dec
icebp
xchg
cmc
js
inc
push
and
add
cli
and
inc
ret
aad
clc
jne
and
sub
dec
fldl
push
mov
push
lods
mov
stos
jno
jbe
aas
ljmp
xor
scas
jbe
adc
popf
into
jnp
mov
mov
cmp
cmovb
jns
fcoml
movsb
jge
mov
push
rcrl
ds
xchg
sti
addr16
pop
xchg
sub
add
shlb
pop
xor
jb
in
cmc
xchg
clc
sbb
jmp
insl
sahf
lods
and
cltd
add
push
lock
sub
in
mov
sub
aaa
mov
xchg
adc
data16
jg
ficoml
std
flds
add
mov
dec
and
inc
fwait
or
sbb
pusha
cmpsb
lret
pop
sti
out
or
push
jl
inc
mov
jo
shll
int3
push
lret
jbe
xchg
pop
mov
or
mov
pop
mov
pushf
cmp
adc
out
hlt
call
sbb
sub
sbb
push
push
adc
add
cs
sub
lds
adc
mov
pop
xor
xchg
les
mov
sahf
jnp
pop
fsubs
movsb
adc
pcmpeqw
mov
mov
out
mov
stc
mov
mov
xchg
lret
inc
push
jnp
aas
xchg
push
cltd
scas
cwtl
lret
shlb
and
mov
adc
sub
push
sbb
lods
lods
cltd
out
push
xlat
in
sub
nop
mov
mov
jmp
add
and
cmpsl
mov
cmpsl
mov
mov
loop
pop
lret
cli
jle
lret
cmp
sub
xchg
or
shlb
mov
jle
add
mov
xor
jp
gs
push
imulb
bound
push
cs
cmc
shufps
adc
pop
in
into
fs
push
movsl
pop
inc
inc
and
and
sbb
cmp
dec
mov
sbb
cmp
cs
push
lahf
cmpsb
mov
dec
jbe
sti
xor
movsb
pop
lret
or
loop
xor
dec
or
imul
mov
sbb
inc
sbb
insb
popf
dec
loop
xchg
lea
mov
dec
lods
test
lret
cwtl
outsl
jbe
sbb
call
shlb
test
push
out
inc
mov
cli
test
mov
aas
bound
mov
cli
sbb
mov
call
mov
sbb
xorl
mov
push
orb
ror
inc
pop
inc
xchg
mov
xor
jno
dec
dec
arpl
loop
insb
nopl
mov
mov
dec
xchg
imul
stos
mov
xor
add
insl
mov
pop
add
rclb
dec
imul
mov
jae
out
fdivl
xor
out
shll
push
stos
addb
xor
add
sub
mov
xchg
fwait
push
fstps
jmp
les
jnp
enter
add
xchg
cmp
mov
push
pop
gs
sbb
jnp
cmc
push
sub
xchg
jmp
gs
and
or
bound
subb
sub
jno
lahf
call
stc
insl
jge
mov
mov
in
mov
sbb
sub
mov
pop
insb
push
dec
adcl
div
dec
cmpsl
jno
ss
les
shl
push
int
xchg
or
xchg
inc
mov
dec
scas
lock
insb
xor
mov
xor
mov
xor
movsl
push
fimuls
jns
pop
sub
mov
xchg
ret
cmpsl
cmpsl
jnp
lods
push
and
shrl
loope
pusha
fs
push
dec
adc
inc
jno
mov
sub
fdiv
or
push
ror
push
insb
fnstenv
mov
cmpl
in
out
xor
data16
xor
aam
inc
mov
cmc
lahf
cmpsb
jb
or
add
jb
mov
xchg
idiv
dec
outsl
ficomps
dec
shll
in
cmpsb
xchg
adc
mov
inc
in
mov
jge
sahf
loopne
movsl
ja
xor
mov
stos
cmp
inc
lcall
jo
jge
int
and
insb
sbb
imul
jne
mov
punpcklwd
pop
dec
jge
dec
or
lds
mov
push
sbb
cmp
or
fsubrs
sbb
inc
push
cmpl
fwait
add
xor
jo
sub
insl
mov
mov
cwtl
cmc
cmp
push
ljmp
mov
add
ljmp
scas
lock
xchg
loopne
loope
out
jg
cs
sbb
sbb
or
aaa
in
xor
stc
sub
or
mov
cmpsb
push
enter
loopne
sub
pusha
stos
idivl
cmp
sub
movsl
lret
cli
mov
dec
xchg
mov
iret
cmp
jnp
xchg
sbb
in
fisubl
ja
mov
mov
mov
sub
adc
cmp
cmpsl
fdivr
iret
out
mov
lods
cltd
test
mov
jb
inc
push
jmp
div
and
pop
mov
sahf
mov
cmp
add
cmc
loope
mov
jns
int
dec
add
fstpt
adc
jge
aam
in
sub
insl
es
pop
mov
adc
int
pop
dec
xchg
js
pop
dec
mov
ret
xchg
cmc
fsubrl
cli
dec
cld
add
aas
fiaddl
adc
jge
or
mov
fldcw
movsb
pop
adc
loope
mov
sub
mov
test
mov
add
rcl
test
jno
pop
sub
movsl
dec
mov
jne
lds
dec
roll
inc
lods
imul
ss
xchg
icebp
pop
test
fildl
test
sub
push
mov
and
push
push
hlt
cld
dec
xlat
sub
dec
inc
pop
lock
leave
pop
mov
push
cmp
mov
push
cld
rol
imul
imul
mov
cwtl
data16
js
fisubs
add
push
cmp
mov
jne
cmp
out
jbe
xchg
out
inc
sbbb
fidivrs
pushf
popa
pop
jmp
hlt
rcr
sub
sub
pop
fwait
shlb
or
adc
cwtl
sbb
mov
shrl
fsubl
or
mov
push
or
pop
sub
aam
and
addr16
jo
subb
adc
loop
push
cmp
mov
add
sar
shr
aaa
repz
mov
xchg
adc
clc
aaa
lret
adc
cmp
in
ret
shll
fyl2x
sub
jnp
int
aaa
pop
mov
jge
lret
push
sub
stos
xchg
inc
notb
jb
ret
sub
enter
pop
mov
lret
ja
mov
clc
cmp
jne
stc
fsubr
jnp
xchg
pop
xchg
or
cld
mov
sahf
icebp
in
ja
mov
enter
dec
aaa
xchg
pop
mov
jecxz
xchg
popf
test
cmp
aas
dec
lret
sub
stc
xchg
and
xchg
mov
das
ret
insb
push
jno
xor
xorl
pop
arpl
jle
sub
popf
std
mov
inc
out
mov
lret
stos
idivb
negl
sahf
sbb
mov
js
out
cltd
fnsave
add
fldcw
xchg
cmpsb
int
inc
ud2
dec
jnp
sub
ja
jle
insb
mov
negb
pop
push
push
out
fwait
loope
mov
stc
ficoms
js
stc
inc
cld
fwait
and
jp
arpl
fisubs
mov
nop
sbb
ret
dec
das
jnp
shrb
mov
mov
bound
jecxz
push
addr16
lret
jno
stc
jecxz
jne
mov
shll
inc
imul
or
idivl
sub
pop
pop
lahf
ds
inc
jb
xchg
mov
mov
ss
inc
scas
scas
adc
adc
push
pop
cmpsb
loopne
dec
roll
test
aaa
shll
bound
add
push
lret
mov
pop
leave
pop
adcb
mov
je
lret
call
shll
mov
push
addl
out
lods
pop
pop
repnz
xor
in
daa
or
jge
push
inc
gs
inc
cmp
add
sbbl
in
mov
adc
das
mov
stc
data16
mov
lahf
pop
enter
jp
cld
ljmp
rclb
cmp
xchg
push
mov
dec
int
ret
into
add
mov
insl
clc
mov
mov
sbb
or
outsb
aam
cmc
push
xchg
jne
jle
sbb
xor
fs
nop
adc
mov
push
sub
jge
ds
fdivp
neg
iret
mov
pushf
add
push
dec
in
push
or
inc
clc
mov
sbb
addr16
cmpsb
xchg
inc
cmc
mov
mov
sub
push
jge
lock
test
jecxz
andl
jbe
in
imul
sbb
stos
aaa
jno
sbb
xor
sub
stos
in
or
mov
aas
cld
scas
sar
cmpsb
adc
or
lods
mov
dec
lahf
fisubrs
mov
movsl
orl
fwait
inc
shll
outsb
inc
fs
aaa
subb
inc
mov
call
out
int
jb
cmp
mov
or
ret
adc
dec
fdiv
clc
out
clc
pop
cmc
push
inc
inc
outsb
jg
std
lahf
and
mov
mov
stos
repnz
sbb
sub
lods
mov
mov
mov
pop
mov
push
xor
dec
data16
jecxz
and
xchg
faddl
pop
mov
adc
jns
les
mov
inc
mov
push
jecxz
adcl
xchg
orb
or
dec
fldz
cwtl
push
int3
mov
js
psubsb
movsl
sbb
mov
xorl
rorb
pop
and
cmp
pop
cmp
cli
imull
mov
xor
bound
lret
out
clc
add
xor
sub
sar
leave
sub
push
jbe
sbbb
fsts
xchg
scas
out
loopne
sub
out
fstpt
mov
es
push
movsl
add
ja
push
les
mov
fs
pop
add
and
xchg
or
cs
or
xchg
loope
push
push
fidivs
aas
mov
xlat
mov
pop
mov
jl
jl
movsl
xchg
out
scas
sbb
jnp
mov
jmp
pop
sti
or
inc
nop
lahf
and
mov
jl
jl
dec
mov
push
sbb
mov
lds
xor
cmpsl
es
inc
mov
push
lret
jl
dec
mov
mov
or
test
gs
mov
mov
dec
jl
test
xor
dec
adc
inc
mov
add
ret
adc
jge
aad
ss
jns
enter
faddl
sbb
stos
jb
xchg
test
cmp
std
arpl
cmp
pop
or
pop
sub
pop
or
insl
add
push
dec
imul
pop
outsb
pop
lea
imul
mov
call
icebp
repnz
add
inc
jns
or
xchg
scas
and
insl
lret
cmp
rorl
xchg
lea
clc
jp
iret
mov
xchg
pop
insl
add
fidivrl
dec
insb
xor
sar
pop
es
push
push
and
and
xchg
jbe
mov
pop
int3
addr16
mov
mov
inc
adc
aas
mull
cmpsl
push
mov
mov
mov
sahf
ficomps
jmp
push
jg
push
xchg
adc
dec
xor
xchg
lods
imul
adc
jns
into
cli
xor
jnp
pusha
xor
lods
lahf
movsb
enter
jecxz
mov
fwait
mov
cmp
dec
cld
sbb
test
push
jecxz
ss
imul
push
jl
mov
xlat
mov
jmp
jp
adc
les
enter
icebp
sbb
push
push
lcall
lret
popf
mov
cmpsb
movsb
dec
mov
mov
xchg
mov
add
out
xorb
andl
mov
xchg
nop
add
je
mov
cli
xchg
cmp
out
mov
adc
or
insl
cld
adc
movl
inc
ljmp
xor
nop
mov
aaa
inc
jb
out
pop
add
loop
push
jge
or
inc
rsm
xchg
mov
test
xor
pop
jle
jbe
push
mov
add
data16
ret
pop
lock
addl
pushf
cli
and
and
pop
std
adc
inc
sahf
js
add
lret
cmp
mov
adc
cmp
mov
mov
mov
lahf
rolb
adc
mov
inc
jbe
movsb
cmp
jecxz
imul
add
sahf
popf
hlt
mov
fcomi
gs
insb
mov
daa
imul
ljmp
mov
fdiv
decl
ja
add
adc
adc
popf
aam
push
leave
pop
jnp
cmpsb
mov
rorl
add
fs
imul
fs
inc
xchg
xchg
add
sbb
add
add
mov
push
adc
cli
cwtl
cmp
lock
sub
popa
or
mov
es
inc
iret
addr16
lahf
mov
sbb
inc
enter
fbstp
sbb
xchg
cs
sub
iret
shl
ja
push
lods
mov
iret
pop
bound
jae
mov
mov
repnz
push
in
test
push
jmp
adc
jnp
sbb
or
cmp
lcall
cli
mov
pop
dec
inc
ret
cmp
add
mov
fucomip
inc
lahf
cmc
pop
or
loop
jne
aam
jge
inc
fwait
sbb
jbe
and
jge
adc
inc
jg
int
adcb
sub
insl
lret
jl
loope
sbb
cmc
mov
sar
dec
fstps
or
add
flds
insb
adc
mov
dec
adc
cmp
and
sbb
clc
and
add
sub
mov
loop
push
mov
fdivr
xchg
in
iret
jle
aad
inc
pusha
inc
push
sub
adcl
sub
dec
xor
push
push
dec
jl
jno
add
imul
and
mov
in
inc
push
mov
adc
enter
icebp
fucomip
arpl
cmp
lods
jnp
add
pop
decb
test
push
push
xchg
mov
jp
dec
into
or
xchg
adc
mov
and
cmp
and
rcr
andb
inc
xchg
pop
enter
xchg
mov
push
add
sub
jl
movsl
push
lock
xor
iret
incb
cwtl
mov
cwtl
cmp
jp
jge
imul
jmp
stos
jne
inc
idiv
mov
inc
ss
mov
mov
adc
mov
xchg
sub
divl
mov
mov
insl
insb
pop
jnp
or
fwait
adc
out
cmpb
jo
scas
sbb
mov
pop
xor
sbbb
rcll
out
mov
cld
or
fdivrl
data16
xchg
jbe
cli
jle,pt
lock
jb
push
mov
pusha
inc
test
sub
jns
test
sbb
jecxz
adc
dec
add
mov
dec
inc
cmc
movl
imulb
rclb
fiaddl
in
jb
pop
mov
insb
jmp
jno
cli
sub
fildl
test
or
push
push
std
movsl
rclb
daa
aad
insb
pop
pop
data16
not
int3
test
mov
lcall
inc
xchg
mov
and
loope
or
shlb
test
ret
xchg
or
mov
inc
sub
jmp
leave
stos
lock
outsb
stos
testl
cmp
jl
scas
mov
scas
pop
lea
int
xor
sti
test
sub
sbb
cmp
test
es
mov
fidivrs
cwtl
push
xchg
fdivl
mov
test
mov
daa
dec
pop
push
int
cmp
in
pop
push
aaa
jle
mov
loopne
cli
aam
pop
std
inc
jb
shrb
push
fldl
push
jg
sub
mov
outsl
push
mov
inc
cmpsb
push
jb
addl
scas
or
pop
outsl
ret
add
mov
aad
test
into
imul
daa
add
jnp
jo
mov
shr
and
ficoms
push
repz
sub
dec
dec
sahf
movsb
cmpsl
and
mov
shll
testl
aam
add
and
jp
adc
adc
inc
and
imul
js
outsb
icebp
and
push
call
test
xor
popa
inc
loopne
mov
lock
fmul
aad
pop
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
fists
jae
.byte
xchg
.byte
xor
fxam
into
stc
inc
xlat
into
fmuls
mov
stc
aad
.byte
.byte
.byte
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
mov
cmp
je
pushl
call
andl
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
mov
sub
cltd
sub
sar
mov
mov
sub
cltd
sub
sar
mov
mov
add
mov
mov
add
mov
movl
push
push
pushl
lea
push
call
push
push
push
push
mov
sub
push
mov
sub
push
pushl
pushl
pushl
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
andl
jmp
mov
inc
mov
cmpl
jge
push
push
call
cmpl
jne
jmp
push
call
jmp
pushl
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
pop
add
add
je
js
add
add
add
adc
add
add
add
add
add
pusha
jb,pn
popa
je
add
cmp
add
add
add
adc
add
cmp
add
add
fs
je
add
add
pusha
add
add
add
dec
add
inc
add
shrb
js
popa
je
add
add
add
rorb
add
add
add
add
inc
add
shrb
gs
add
add
rorb
add
mov
add
ret
inc
add
loopne
jb
popa
je
add
jbe
add
add
or
add
add
add
add
add
cs
je
add
add
jno
add
add
add
sbb
add
xchg
add
add
add
add
xor
xor
call
pusha
call
inc
cmp
jo
divb
test
inc
insb
inc
xor
outsl
inc
rcll
pop
imul
push
push
jbe
aas
sbb
loop
lret
sub
mov
mov
mov
lods
mov
sbb
add
cs
add
jmp
call
outsb
add
add
cltd
add
mov
cmpsb
rcll
cmp
ljmp
jge
insb
imul
xchg
sub
arpl
sbb
movsl
sub
out
pop
pushf
pop
inc
fsubs
setb
outsl
icebp
pop
cli
in
repnz
cmc
jl
inc
mov
inc
fimull
out
mov
jb
mov
fwait
jmp
xchg
mov
divl
ljmp
nop
stos
pop
repz
test
sub
mov
sbb
jb
fcmovne
fidivrl
aas
push
imul
mov
aas
mov
out
lahf
cmp
dec
sti
pop
cltd
movsb
lock
addr16
push
ret
fistpll
mov
jecxz
lret
imul
sti
adc
pop
ret
or
icebp
scas
stos
aas
push
or
test
or
pop
fs
hlt
jb
bound
shr
sbb
mov
dec
dec
test
loopne
pop
lcall
dec
loope
sub
or
xchg
clc
push
sti
outsb
out
pop
sbb
shll
sbb
dec
mov
dec
scas
aas
nop
xor
add
cs
nop
nop
mov
sub
push
xchg
mov
xchg
mov
mov
jns
subl
or
stc
lods
dec
or
mov
pop
sub
push
xchg
out
mov
inc
testl
sti
inc
jmp
xchg
jecxz
sub
sbb
call
arpl
sbb
decb
or
sbb
mov
sar
or
fisttpll
pop
push
jae
xor
cli
je
add
stos
add
fsubrs
ret
push
psubsw
ss
mov
xor
lcall
mov
shll
sar
inc
gs
and
jns
cmp
test
adc
add
mov
in
inc
sahf
jp
test
mov
jl
xchg
popf
jb
mov
pusha
sahf
and
cmpsl
adc
or
jmp
sbb
xchg
cmpsl
jbe
and
nop
lods
cs
je
setne
sahf
lahf
testl
lret
lods
sbb
mov
popf
faddp
std
fstl
pop
cmpsl
leave
adc
gs
pop
test
fwait
mov
pusha
sbb
lds
push
fwait
stos
and
sbb
sbbl
xor
dec
andl
clc
je
subl
lret
cmpsb
lea
mov
mov
inc
and
dec
jle
sbb
inc
mov
es
lcall
jbe
or
and
mov
pop
movsb
cli
mov
jae
pop
rcr
hlt
inc
xchg
jmp
subl
enter
imul
shr
add
adc
pop
xor
and
mov
pop
movsl
mov
rol
cmp
add
xchg
pop
mov
outsb
jmp
jo
in
lahf
lods
sub
sti
scas
outsl
out
and
stos
sub
mov
call
jge
push
std
pop
push
add
fwait
push
ss
bound
cmp
jae
insl
out
ret
popa
fiadds
xchg
inc
dec
inc
sub
bound
int
xchg
jno
dec
fmull
dec
mov
cmp
jns
add
xchg
in
jle
addl
pop
push
ljmp
dec
rcl
hlt
pop
xor
fimuls
aad
out
dec
repz
jnp
jmp
mov
imul
push
mov
test
xor
lods
inc
jecxz
mov
loopne
fisubs
xchg
pop
ss
cwtl
adc
dec
adc
inc
hlt
mov
in
cwtl
test
aad
shlb
dec
add
cmp
pop
in
add
push
mov
add
movsl
int
rcl
jle
ret
inc
into
ss
ss
scas
loope
imul
mov
and
xor
fsubrl
mov
and
or
mov
inc
sub
jmp
outsl
push
jl
outsb
aas
dec
out
testb
in
xor
jae
mull
jle
sbb
add
mov
cmc
xor
sbb
ret
or
pop
dec
outsb
mov
push
ja
popf
arpl
pop
jnp,pn
sub
jle
mov
negl
leave
dec
stos
pop
dec
fildll
sbb
fwait
push
and
int3
mov
pop
push
call
lret
push
pop
jge
lea
lods
sbb
aaa
fildl
mov
fnstenv
aas
ds
int3
je
pop
sarl
ja
lock
addr16
mov
mov
mov
inc
mov
dec
jne
pusha
or
pop
inc
cmp
add
xor
mov
cmp
lea
add
out
lret
jb
lea
popf
sbb
js
jmp
in
cmpsl
pop
pop
bnd
mov
getsec
xchg
adc
jbe,pt
cmp
xchg
mov
push
stos
and
push
pop
lock
into
xchg
movsb
pop
mov
dec
xlat
add
jmp
gs
jmp
adc
add
pop
cmp
mov
mov
outsb
xchg
clc
fs
cltd
test
ds
push
testl
fstp
mov
movsb
adc
adc
mov
add
outsl
push
mov
xchg
xchg
dec
dec
cs
push
pop
stos
enter
push
sar
inc
cmp
lret
adc
ljmp
sub
xchg
scas
test
lds
mov
lcall
adcb
add
js
imul
lahf
xchg
cld
sbb
jnp
and
jae
mov
shlb
pop
mov
sub
and
adc
add
repnz
aam
imul
aaa
sahf
xchg
xchg
leave
icebp
je
addr16
or
jp
inc
out
or
aam
mov
adc
shrb
es
mov
cmc
test
or
jge
aaa
dec
lods
loopne
aad
aad
lods
mov
sub
pop
add
mov
sub
inc
mov
imul
inc
bound
les
push
jecxz
idivl
daa
sub
cmp
test
jle
es
push
sbb
mov
inc
shlb
cmp
arpl
pop
cli
inc
daa
lahf
push
adc
sbb
inc
jecxz
int
cmp
sub
or
int3
or
cltd
orb
aam
add
fimuls
sub
dec
in
push
push
push
cmpsb
ds
cmp
mov
vpunpcklbw
adc
in
adc
mov
lods
fdivs
mov
inc
lock
enter
push
mov
popf
pop
fstps
jp
leave
sbb
and
jecxz
int
pop
cld
add
mov
xor
fwait
mov
cmpsl
insb
inc
cmp
iret
aaa
je
xor
call
lds
rcrl
mov
lret
pushl
test
inc
pop
jle
jg
in
stc
lods
shrl
ret
ljmp
cld
iret
push
scas
movsb
insb
mov
push
loopne
ja
pusha
sti
add
push
mov
cld
stos
mov
xchg
inc
or
rcrl
outsl
jg
pop
lret
mov
sbb
popa
ja
mov
rorb
fwait
int
mov
dec
xlat
mov
fnstsw
ja
xor
dec
xor
in
imul
xchg
sbb
imul
jg
pop
push
outsl
sub
xor
ret
dec
in
xchg
call
sub
fmul
movsb
outsb
or
out
and
mov
leave
push
cmp
adc
leave
imulb
adc
and
fsts
shrl
fisttps
aam
push
inc
cmp
jg
pop
cmc
mov
pushf
mov
call
mov
loope
lahf
cmp
mov
in
repz
sbb
jp
xor
fwait
sbb
or
push
loope
into
dec
xchg
fmuls
add
mov
cmp
fcmovu
push
in
fwait
mov
test
outsb
sub
fmul
jnp
imul
mov
xor
sahf
inc
iret
and
mov
scas
jg
sbb
lret
into
cwtl
xor
add
inc
fdivs
mov
jb
xor
pop
sub
mov
pop
repnz
sub
mov
cmp
aad
insl
repz
out
fsubrl
les
jb
or
jnp
xlat
or
aad
out
clc
adc
cmc
sbb
xchg
xor
and
mov
add
push
lock
pushf
jl
xchg
lods
pusha
push
daa
ds
mov
addl
outsl
mov
cld
sti
inc
mov
cwtl
js
xor
adc
repnz
in
stos
jg
xchg
inc
add
rcrb
test
add
add
popa
stos
cmp
adc
and
and
aam
cmpsb
pushf
dec
jno
and
push
mov
repnz
push
or
lahf
jbe
jg
adc
mov
iret
pushf
adc
icebp
repnz
stos
pop
popf
cmp
leave
stos
and
test
mov
sarl
mov
xchg
jbe
jae
das
addr16
arpl
cltd
dec
xor
add
mov
dec
ret
mov
fstpl
inc
sbb
cmp
or
jnp
leave
shlb
inc
cmp
sahf
dec
stos
lahf
push
dec
aad
sub
cs
jb
mov
insl
into
push
xor
mov
call
pcmpgtd
popl
or
xchg
xchg
cli
das
xchg
xor
cmp
jns
jmp
jmp
dec
sbb
jg
adc
sbb
jo
bswap
mov
and
pushf
xchg
call
push
or
mov
xchg
sub
rolb
sarb
sahf
insb
bswap
mov
hlt
mov
jne
stos
lret
mov
adc
pushf
jl
sbb
inc
pop
mov
and
cmp
xor
dec
rorl
les
ja
xchg
push
cwtl
pop
dec
sarl
inc
sub
insb
insl
gs
xor
cltd
out
or
je
loop
mov
add
hlt
popf
int
test
jnp
ret
xchg
clc
pop
int
mov
or
add
cli
lea
inc
mov
push
mov
mov
insb
dec
popa
out
call
mov
fisttpll
dec
dec
and
out
mov
dec
adc
xchg
shll
call
ja
jmp
in
inc
pop
mov
icebp
xor
cli
sbbb
and
cmc
mov
push
or
jp
shrb
xchg
in
popf
pop
shrb
dec
jge
jbe
add
rcrb
mov
xchg
cmc
push
dec
jo
cmpsl
lret
outsb
imul
das
lahf
mov
jecxz
out
inc
sbb
sub
pop
sub
mov
add
xchg
xor
inc
repz
mov
mov
stc
add
inc
pop
test
std
data16
scas
sub
cmp
mov
ja
mov
sti
mov
test
mov
cmpb
push
mov
mov
add
shll
jb
insl
sub
lcall
lods
jbe
rcrb
repz
xor
lods
outsb
mov
push
repz
xor
cmpsb
mov
jl
and
insb
adc
or
scas
mov
jns
sahf
jne
inc
sub
rorb
inc
dec
adc
repz
jge
cld
out
add
pushfw
loop
push
dec
mov
xchg
je
in
xlat
push
das
imul
subl
ret
jmp
mov
sub
xlat
lret
cmp
sahf
sbb
pushf
daa
ljmp
fistl
shll
cmp
fs
push
js
xor
in
cwtl
inc
inc
and
pop
push
and
stos
into
jp
mov
aam
pop
shl
pushf
sbbl
mov
mov
lret
and
sub
lret
fs
test
sbb
insb
les
orl
test
pop
fisubl
divb
mov
fwait
call
pop
arpl
loop
decb
mov
mov
pop
xchg
aad
stos
fldcw
jcxz
mov
loopne
es
aaa
nop
stos
sub
mov
mov
imul
jmp
loope
xchg
cmp
mov
icebp
idiv
fwait
push
xlat
sahf
stos
mov
aaa
and
pusha
stc
mov
fcompl
out
mov
dec
mov
jns
and
stos
out
cs
mov
and
cmc
cmp
pop
mov
mov
jle
mov
and
xchg
or
lods
in
rol
mov
jbe
ret
push
dec
fwait
idivb
scas
into
les
ja
push
mov
ret
fcmovne
int
sahf
in
add
push
adc
push
xchg
or
nop
bound
mov
pop
loopne
inc
repz
sub
sub
mov
adc
inc
shll
or
adc
mov
adc
inc
lahf
das
push
rcr
fisubrs
dec
out
ror
jae
aam
pop
pop
pop
leave
sarb
fbld
mov
pop
lods
add
scas
cmp
sbb
push
movsb
jbe
dec
cmpsb
cld
ljmp
push
mov
movsl
push
push
mov
cmp
lret
jnp
sbb
mov
sub
add
sti
btl
mov
cmpsl
cmpl
sbb
rorl
lahf
xchg
xor
ljmp
aas
mov
movsl
cmpsl
add
xor
in
popa
cmp
xor
rcll
cmp
jecxz
ljmp
movsl
mov
stos
movsb
push
je
arpl
popa
enter
jp
mov
fwait
addl
stc
mov
lods
mov
push
sbb
testb
xchg
addr16
xor
xchg
loopne
xor
fistpll
pusha
xchg
movsl
in
pop
loop
jnp
inc
bound
xchg
jno
les
pop
mov
mov
pop
cmc
aam
scas
jnp
repz
into
sub
add
push
sti
popf
loope
sub
fcomps
xchg
adcl
xor
cld
jo
loope
ss
ffreep
lock
ss
mov
xchg
push
add
loopne
addl
mov
das
push
and
jl
data16
es
in
jae
pop
push
mov
in
int3
xchg
sbb
mov
or
test
push
jl
enter
sbb
fnsave
aaa
iret
in
sbb
sbb
and
test
xchg
rorb
jmp
aam
jecxz
add
pop
inc
jne
add
jl
mov
push
and
out
in
xchg
push
lret
imul
gs
sub
dec
lods
imul
mov
stos
mov
ss
std
dec
jecxz
mov
rcll
stos
popf
jecxz
dec
fistl
sbb
ja
dec
ret
pushf
dec
rclb
sub
sbb
fs
mov
in
dec
mov
mov
pop
outsb
nop
push
call
pop
inc
lods
daa
addr16
add
mov
inc
cld
xchg
orb
fmuls
sahf
test
dec
push
fnstenv
mov
into
sub
pop
jbe
xor
dec
push
pop
dec
adc
jns
clc
cmp
sub
jns
fdivl
aas
cwtl
loopne
dec
xchg
cmp
pop
inc
xchg
shrl
xchg
jb
xchg
dec
and
test
mov
mov
inc
sbbb
adc
or
cmc
scas
clc
aas
mov
xor
sbbb
inc
pop
jo
jno
mov
cmp
xor
nop
out
daa
popf
pop
dec
inc
imul
es
ljmp
sbb
rolb
and
gs
stos
cmp
loope
jns
ret
sbb
dec
les
or
scas
in
mov
movsb
fsubs
or
fimull
mov
adc
loop
add
loop
cmp
ljmp
pop
lcall
add
out
mov
out
push
enter
test
fsubl
out
lcall
ss
jge
les
lret
lea
push
mov
and
sub
stos
adc
sbb
sub
lods
and
push
mov
cwtl
fildl
cwtl
jle
into
mov
scas
sub
push
push
pop
xchg
sbb
sub
loop
stos
or
pushl
mov
pop
and
adc
add
movsb
into
pop
loope
arpl
or
pop
lret
push
cwtl
pop
cmp
mov
outsb
xchg
mov
nop
ds
loope
dec
inc
fisubrs
cmpsb
movsb
outsl
mov
cmpsl
inc
icebp
iret
dec
insl
sbbl
mov
inc
sub
jl
and
lea
iret
lret
or
adc
lods
mull
adc
rorb
or
mov
repz
jo
jnp
stc
mov
out
add
inc
cmp
leave
fdivr
fidivrs
repz
jmp
sbb
dec
xchg
xchg
loope
sub
ficoms
pop
dec
adc
xchg
jle
sbb
lss
aaa
addb
fcompl
add
jl
adc
or
mov
out
pop
lret
push
xor
dec
xlat
pop
inc
and
scas
or
popf
int
fmuls
aaa
cli
adc
or
cmp
popf
mov
inc
pop
jecxz
adc
cmpl
xchg
gs
mov
push
sbb
cwtl
in
add
and
cmp
dec
shll
and
loopnew
cmc
add
inc
test
mov
popf
jl
push
jle
lock
jp
xor
push
fisubl
mov
insb
decl
cmpsl
rcrl
sbb
and
xchg
andl
push
cmpsb
loopne
mov
into
ret
js
push
stc
xchg
mov
icebp
test
xchg
pop
xchg
hlt
je
add
mov
lods
in
inc
cmpsb
into
lahf
mulb
mov
sbb
call
mov
mov
iret
cmp
jno
mov
xorb
js
int
dec
push
fsub
daa
xchg
xorl
sbb
out
bound
mov
mov
jl
cmpsl
and
mov
in
mov
push
les
cmpsb
pop
loope
enter
xor
test
sub
aas
rorl
dec
pop
aam
push
ret
inc
dec
sbb
mov
out
fyl2xp1
repnz
rorl
imul
movsb
fildl
ss
xor
inc
dec
or
jns
test
push
fisttpll
iret
pop
mov
idivb
pop
mov
test
icebp
cmp
shlb
add
dec
dec
in
sub
aad
sub
sub
mov
jle
add
lret
cwtl
stc
push
cmp
push
jg
mov
cmp
sbb
dec
out
sti
sbb
xor
scas
outsl
jmp
repz
fwait
sub
xchg
jb
leave
int3
cmp
sub
in
pop
lret
sub
lcall
int3
jno
sub
aam
sub
push
outsb
inc
stos
adc
loope
insl
adc
add
data16
into
push
adc
mov
or
cmp
jg
lret
scas
mov
jge
notl
push
jg
dec
scas
mov
xchg
jae
sbb
inc
loope
pusha
dec
je
outsl
sub
mov
pop
adc
gs
loope
mov
leave
in
xor
aas
fmul
test
cmpl
jmp
cmp
in
xchg
mov
pop
pop
jp
cmp
stos
sbb
daa
jge
inc
std
dec
cwtl
adc
jb
fs
lods
fsubrs
inc
xor
cwtl
sub
cmp
mov
test
inc
cmpsb
pop
pusha
mov
and
sarb
loope
imul
nop
lds
imul
sbb
stos
sahf
push
sub
and
xchg
aam
xor
xchg
arpl
push
dec
sbb
ret
cmp
lods
jmp
testl
out
popa
fs
add
out
test
dec
imull
jp
sbbl
inc
addr16
testb
shlb
pop
shlb
adc
cld
sarb
fmuls
jg
xchg
imul
jae
cmp
or
bound
into
cwtl
and
pop
or
popa
jge
les
nop
lahf
in
cld
add
sub
in
push
mov
int
jno
pop
das
jnp
and
cli
ret
fwait
adc
cmc
add
les
inc
int
int
out
outsb
jb
fdivrl
jb
jle
lcall
out
fwait
hlt
inc
xchg
nop
cmp
mov
fcmove
pusha
lods
adc
jmp
inc
dec
push
inc
lock
xlat
orl
xchg
jno
pusha
ljmp
not
pop
sbb
adc
sbb
push
adc
nop
jbe
daa
repnz
fistpl
mov
cld
ret
adc
mov
aas
push
int
insb
dec
push
enter
lods
inc
pop
add
lds
mov
xchg
sahf
cld
cli
movsb
movsb
daa
ret
dec
into
mov
cmp
pusha
mov
mov
insb
jecxz
pop
cltd
mov
jmp
pop
xor
call
pop
imul
mov
punpckhdq
push
mov
jmp
inc
or
xchg
pop
cs
lcall
repnz
lea
sarb
lods
scas
dec
stos
adc
and
movsb
inc
push
cltd
pop
fwait
out
jne
cmpsb
dec
dec
into
negl
addr16
and
es
lahf
jge
in
fwait
jge
test
or
adc
dec
cltd
in
cmpsl
mov
xor
and
mov
pop
mov
jbe
cmp
lea
adc
dec
add
xorb
outsb
mov
mov
mov
bound
scas
sbbb
mov
movsl
cwtl
xor
sbb
inc
in
fidivrs
inc
cmp
lret
sub
inc
dec
pop
xor
out
or
jmp
sub
jae
out
subb
lds
and
cli
xchg
sbb
cmpsl
mov
lcall
shrb
xchg
scas
insb
dec
mov
mov
lds
add
pop
pop
fcomi
sub
ret
xchg
xor
je
cwtl
data16
xor
les
mov
mov
test
icebp
pushf
inc
dec
dec
inc
lret
repnz
mov
orb
leave
adc
test
xchg
outsl
push
fildl
fucomip
lods
push
adc
jo
cmp
popa
hlt
mov
je
psubw
insb
cmp
aad
pop
aam
imul
dec
cld
rcl
divl
lds
in
mov
inc
stos
or
shlb
mov
sub
jns
adc
jle
dec
add
in
adc
pop
sub
pop
xchg
cli
mov
sbb
in
push
mov
data16
aad
or
cs
push
pop
mov
mov
mov
cmp
and
mov
and
lea
mov
int
insb
out
out
push
sbb
inc
xchg
loop
xchg
sbb
bound
cmp
jecxz
push
shlb
mov
ret
sarl
jle
out
aam
jbe
add
insb
mov
sbb
xor
shr
rcrl
daa
adc
adcb
repnz
lock
adc
jge
fmul
inc
pop
mov
jle
in
outsl
adc
ja
cld
popa
mov
arpl
inc
sbb
sub
inc
push
dec
mov
aam
stos
mov
or
sub
mov
or
aas
lods
inc
inc
dec
jae
dec
daa
pop
cs
pop
dec
movsl
fmull
sub
mov
dec
cld
insb
sarl
imul
into
cld
mov
adc
ss
add
fistl
push
adc
xor
mov
fsubl
into
sbbl
mov
cmp
sti
pop
cmp
mov
mov
enter
movsl
and
inc
adcl
popa
pop
lcall
test
or
xchg
push
iret
jmp
push
mov
push
pop
and
lods
pop
inc
cmp
inc
mov
jns
iret
mov
pop
loope
and
add
xorl
cmp
addl
mov
test
mov
pop
add
movsl
cltd
out
xor
sbb
cmp
or
push
inc
scas
cld
imul
pop
lret
and
mov
pusha
test
sti
fdivrl
test
xor
test
cli
int3
shlb
aaa
dec
add
sarl
cmp
cmpsb
lret
add
ficoml
mov
or
push
arpl
std
push
iret
and
jne
adc
stc
mov
inc
test
sub
in
movsl
std
leave
stos
shlb
lea
mov
mov
push
jne
dec
iret
lods
lret
mov
iret
iret
nop
aaa
lahf
fwait
push
cmp
aaa
mov
scas
ds
push
cld
in
push
or
mul
out
xchg
cmc
ja
insb
clc
cmpsb
mov
add
pop
pop
xchg
stos
lods
mov
add
loop
orb
cmp
aam
mov
xchg
bound
and
pop
mov
xchg
data16
sub
mov
sbb
push
les
popf
adc
push
popf
andb
ret
outsl
icebp
xchg
out
add
mov
enter
negl
repnz
push
cmp
lods
push
ffreep
push
push
popf
push
dec
xchg
imul
loope
or
mov
movsb
xor
insb
inc
cltd
mov
out
inc
mov
in
jbe
and
stos
add
push
mov
sbb
imul
pop
aam
icebp
sti
in
outsb
pop
xchg
push
sarb
cwtl
sub
movsb
call
jp
imul
xchg
add
or
jg
mov
push
lds
add
xchg
jne
test
lcall
or
addb
xor
dec
cmpb
mov
cltd
fidivrl
push
and
add
pop
push
shrb
pop
je
test
or
mov
mov
fldt
mov
adc
lock
fstpt
mov
adc
xor
xchg
cmp
add
sub
pop
out
inc
jo
sbb
fiadds
ja
popa
mov
pop
fcmovnu
loopne
mov
out
mov
or
das
xor
adc
test
dec
flds
pop
jnp
daa
lahf
aas
dec
outsl
pop
fmuls
aas
pop
pop
leave
iret
mov
xchg
cli
inc
fs
xchg
stos
dec
mov
ljmp
js
cmp
mov
std
add
pop
movsl
ret
sbb
inc
es
mov
mov
scas
push
mov
lods
imul
push
xor
and
inc
pop
jg
movsl
inc
add
xlat
jo
mov
mov
cwtl
push
sub
daa
ficomps
inc
into
xor
jae
or
dec
mov
les
dec
iret
ja
mov
push
ja
out
dec
je
imul
in
or
bound
jecxz
mov
mov
cwtl
mov
xchg
dec
mov
inc
inc
xchg
aam
inc
sub
fs
out
in
pop
out
pop
daa
out
dec
push
ss
cmp
mov
or
push
inc
mov
or
rcrb
test
loopne
mov
incb
shlb
insl
enter
dec
lods
add
add
sbb
int3
add
sub
mov
dec
into
push
lahf
pushf
stos
pop
jae
mov
pop
lods
cmc
rolb
ja
xor
dec
addb
shll
aaa
rcll
clc
rcll
push
pushf
dec
xchg
scas
pop
out
xchg
fistl
push
ds
mov
xor
mov
adc
fcompl
or
jb
cwtl
jl
es
dec
mov
icebp
dec
and
popf
cltd
lea
aam
and
dec
daa
inc
pop
addr16
jns
dec
mov
push
int3
push
fmuls
icebp
outsl
push
mov
loopne
jnp
mov
iret
or
dec
lret
xchg
out
pop
in
mov
pusha
out
fcoms
ja
notb
pop
aaa
popa
sub
ljmp
pop
push
test
and
pop
dec
jmp
push
dec
pop
jno
out
jmp
hlt
out
inc
xchg
fsub
out
mov
mov
int
rolb
adc
dec
inc
xor
inc
cmpsl
cltd
adc
jmp
hlt
clc
movsb
jnp
iret
cmp
and
dec
repz
jp
and
insb
loop
mov
pop
lret
out
testl
lret
or
daa
sub
cltd
dec
xchg
mov
cmp
into
inc
xor
jg
pop
mov
fidivrl
sbb
test
test
in
fiaddl
pop
gs
mov
mov
nop
xchg
mov
sub
adc
mov
fisttpll
call
mov
adc
shrl
pop
ds
cmc
mov
sbb
jle
cmp
xchg
sub
cmc
xor
mov
xor
ss
dec
out
mov
mov
mov
mov
push
and
cs
gs
aaa
mov
xor
shr
add
mov
ds
inc
pop
sub
and
lods
testb
or
leave
testb
jg
sbb
sti
sub
or
shl
aad
sahf
push
outsl
mov
xchg
push
sbb
cli
fstpt
test
cmp
add
dec
fidivl
in
sbbl
sub
mov
push
sbb
mov
adc
xor
add
sbb
inc
jl
jo
xchg
outsb
mov
hlt
mov
jnp
and
xchg
mov
stos
inc
add
subb
rcrl
jb
add
cmp
rcl
jnp
int
xor
inc
inc
xchg
push
je
jbe
inc
dec
imul
hlt
jb
cmp
cmp
mov
jns
sub
mov
dec
stos
nop
call
cld
je
nop
iret
es
movsb
aaa
imul
sub
jge
xchg
dec
sbb
cmp
xor
in
push
mov
dec
jns
xorl
xchg
idivb
sub
leave
lock
mov
scas
jle
out
inc
hlt
js
pop
adc
and
js
mov
fs
xchg
das
sbb
jg
xchg
push
sub
loope
xchg
shr
and
lcall
fwait
jo
loopne
int3
add
fsubrl
adc
insb
push
aaa
sbb
mov
mov
pop
sbb
ja
or
xchg
dec
xchg
movsb
add
sti
pop
pop
xchg
dec
arpl
and
cmp
movb
fwait
sub
dec
cmp
sbbl
rcl
xor
insl
or
and
enter
sbb
ljmp
xchg
add
add
nop
jbe
mov
mov
cltd
dec
pusha
lcall
nop
push
pop
jb
sub
xchg
adc
xor
nop
dec
fdivl
sub
pop
inc
inc
cmp
adc
adc
stc
das
xchg
out
scas
bound
dec
incl
andb
push
pop
bound
leave
sub
enter
fbstp
call
mov
or
push
nop
push
lahf
stc
in
adc
or
xchg
movsl
adc
nop
dec
mov
iret
add
lea
call
popa
lahf
rorl
dec
inc
adc
inc
add
dec
loopne
sbb
in
dec
into
out
test
push
mov
xchg
dec
repnz
stos
loope
pop
stc
fwait
jae
fdivl
sbb
dec
and
das
lods
and
dec
test
int3
xor
dec
filds
xchg
aas
push
jne
and
sbb
pop
jge
cltd
sub
mov
fmul
cs
loop
lods
pop
sub
jg
jo
fwait
dec
adc
and
dec
decb
mov
pop
cmpsb
add
fdivp
outsl
dec
cmp
hlt
sarb
xchg
mov
or
pop
mov
mov
sbb
mov
shlb
xor
scas
xchg
xor
je
in
addr16
pop
ss
rcrl
cmp
jl
enter
outsl
test
push
push
adc
nop
and
sub
xchg
push
out
pop
mov
or
clc
sti
imul
mov
inc
sub
jge
mov
adc
lods
mov
push
or
cs
xor
pop
aad
xchg
ja
notb
and
mov
cmp
xchg
pushf
cmpsl
out
lea
mov
push
loope
aam
test
pop
hlt
lods
inc
fwait
cwtl
push
pop
cmp
icebp
nop
xchg
mov
mov
testl
dec
gs
or
sbb
mov
lahf
mov
std
movsb
and
mov
sbb
or
rorl
mov
lret
dec
fmull
mov
sub
out
ficoml
rcll
int
popa
loopne
mov
or
jl
and
fwait
pop
stc
jbe
jnp
movsb
mov
in
jno
test
mov
outsl
pop
push
inc
dec
jns
mov
xor
push
fisubs
lret
push
sbb
aas
push
enter
or
dec
cmpsb
inc
lahf
js
dec
mov
inc
aas
scas
cli
xorw
add
bnd
neg
inc
sub
mov
frstor
mov
mov
pop
mov
mov
mov
push
jb
subl
out
push
scas
jo
cltd
sbb
jl
adcb
sbb
adc
stos
dec
adc
lds
xchg
jns
sbb
xchg
push
pop
jbe
cmpsb
pusha
lock
movsb
pop
imul
xor
shrb
mov
inc
insb
pop
and
sbb
mov
out
enter
pop
mov
pop
add
or
inc
sbb
test
cmpsl
mov
adc
sbb
xchg
adc
mov
sbbl
sub
mov
jbe
adc
lret
pop
pop
xchg
pusha
shl
dec
and
rorl
mov
in
popa
nop
xlat
out
and
sub
sti
mov
leave
hlt
dec
cmpsb
adc
pop
sbb
push
jge
es
inc
stos
flds
push
sub
xchg
xchg
nop
int3
ja
repz
loop
popa
and
bound
ss
cmp
add
push
cmp
pop
fcomps
add
or
jno
mov
jle
or
mov
jns
js
fimuls
mov
rorb
xchg
cmp
mov
enter
fistl
adc
jb
loope
call
and
pop
fisttpl
faddl
and
and
mov
pop
push
aas
out
and
fimull
sbb
aad
addr16
data16
adc
mov
out
cwtl
mov
cmp
xchg
push
inc
jb
js
sbb
dec
cmp
or
jmp
pop
sub
rol
test
jno
pop
mov
sub
repz
popf
aaa
lods
mov
fstpt
ss
addb
push
inc
lods
adc
jl
leave
test
push
dec
cmp
jnp
aaa
push
add
iret
add
cmp
mov
mov
jns
cmp
hlt
ret
pushf
sti
pushf
push
dec
les
lcall
push
xchg
jge
les
cltd
aaa
aad
ds
xchg
adc
and
jecxz
or
jg
mov
arpl
mov
sahf
or
mov
sbb
cmp
int3
xchg
jb
or
cli
leave
int3
xchg
dec
inc
fcmovnu
inc
arpl
lock
rcll
sbbl
xor
testl
xchg
arpl
mov
push
mov
inc
inc
mov
iret
je
sar
sub
xor
jb
enter
fisubl
sbb
test
sub
out
jmp
sbb
or
sub
push
adc
icebp
out
in
mov
scas
jge
mov
mulb
fbld
pop
pushf
push
enter
cmp
dec
push
xchg
push
dec
xor
lea
sti
add
jnp
lahf
lock
loope
fmul
ss
adc
int3
jecxz
rcr
fstl
or
out
scas
jnp
ret
mov
fs
jb
popa
sbb
cmpsl
or
cld
or
es
fisubrl
aad
xchg
insb
sub
fisubrs
mov
xchg
data16
pop
int
adc
test
mov
jb
lods
icebp
clc
adc
lret
mov
cwtl
dec
fldl
cmp
inc
mov
in
inc
mov
sbb
shrl
sub
bound
mov
in
pop
cli
loop
fidivl
stc
sub
sbb
dec
lock
mov
inc
ret
inc
stos
adc
repnz
lods
std
xchg
pusha
pop
stos
dec
loopne
pop
arpl
and
sbb
std
or
arpl
sbb
add
add
inc
dec
sti
ds
mov
ljmp
jb
icebp
xlat
sbb
clc
rol
js
and
mov
popf
mov
jle
and
aaa
mov
mov
sub
mov
bound
mov
push
hlt
ret
call
scas
out
fcoml
movsl
mov
push
iret
fs
add
sbb
leave
aas
out
pusha
sub
lret
fwait
or
scas
sbbb
or
fwait
and
pextrw
insb
pop
sbb
loopne
nop
lea
push
lret
mov
enter
in
cmpsl
adcl
rcrb
les
lcall
jmp
mul
xchg
xor
push
sbb
adc
mov
aad
pop
fs
daa
test
mov
jbe
xchg
outsl
aas
mov
inc
or
inc
adc
mov
call
mov
jmp
mov
fildl
cld
subb
or
popf
je
sub
test
bound
adc
in
xor
mov
mov
cmp
dec
dec
xchg
mov
xchg
inc
jg
or
fsubrl
mov
lret
sub
cwtl
scas
fists
testb
lret
mov
mov
sbb
xchg
sbb
cs
clc
push
pop
push
push
lahf
jno
push
mov
add
lret
out
mov
test
xor
sub
inc
dec
addr16
loop
mov
inc
jb
dec
cmp
xchg
test
sbb
cs
push
cmp
and
fwait
loope
jno
mov
sbb
cmp
inc
xchg
xchg
adc
xorl
fsubrl
icebp
testl
or
xor
mov
cld
fnstcw
addr16
sbb
addb
and
xchg
pop
sbb
xor
xor
leave
andb
out
adc
mov
rol
or
cmp
in
iret
jae
stos
popa
sub
les
mov
imul
fs
sub
cmp
cmp
adc
mov
lods
aad
push
sti
loope
xchg
cmp
mov
sbb
in
lea
imul
gs
xchg
add
lods
out
in
jge
xor
mov
dec
icebp
scas
in
jae
lret
lcall
loopne
add
mov
pop
outsb
inc
sbb
dec
or
ljmp
mov
hlt
ss
pop
xor
pop
sbbb
sub
in
add
mov
cmp
out
mov
test
add
subb
movsl
jp
inc
loope
sbb
nop
push
xor
mov
stc
sub
fwait
cld
xchg
pusha
fists
push
push
sub
xorl
add
fs
inc
das
inc
outsb
orb
mov
popa
popf
mov
aad
int3
sub
push
lds
jg
das
sarl
negl
divb
jecxz
pop
ret
clc
icebp
pop
ljmp
adc
fcoml
sbb
mov
cmp
inc
pop
ds
fcmovu
js
and
not
dec
add
gs
or
xor
adc
push
mov
push
mov
or
or
dec
mov
imul
pop
and
hlt
inc
or
hlt
repnz
filds
mov
sbb
mov
ret
cli
or
inc
pop
lahf
push
cwtl
add
add
fstpt
mov
add
or
jne
sbb
lods
arpl
cmp
adc
mov
data16
inc
incb
cmp
sub
jecxz
jno
scas
fs
pop
in
xchg
scas
push
mov
shlb
inc
push
jle
or
dec
sbb
add
popa
jae
inc
or
mov
into
rcrb
push
cmp
aam
add
xor
xchg
sbb
test
inc
movl
sbb
test
lahf
sub
aaa
jl
mov
cmpsl
mov
and
add
fadds
aad
pop
arpl
mov
inc
xchg
int
mov
pop
fwait
mov
outsb
repz
mov
jecxz
pop
cmp
sahf
push
jno
jnp
cmpb
or
sbb
mov
cmpb
into
ds
push
mov
xor
aas
test
xchg
or
aas
inc
int
xchg
fcomip
pop
insb
push
stos
dec
mov
scas
inc
push
pop
jecxz
or
push
push
imul
das
fwait
inc
lds
pop
mov
push
lods
xchg
lret
pop
popf
out
out
daa
ljmp
sbb
jmp
cmp
mov
jnp
push
jbe
nop
sbb
fisubrl
inc
add
jecxz
cmp
sbb
pop
cs
popf
aad
out
cmp
popa
fisttpl
sbb
cmp
cmp
insl
icebp
inc
into
pop
or
setle
add
inc
push
sahf
dec
or
push
or
addr16
out
pop
cmp
test
test
push
sub
sub
and
pop
or
std
lds
jnp
adc
lock
add
lcall
pop
js
xor
outsl
gs
mov
adc
stos
and
mov
pop
cmc
push
xor
mov
stos
or
mov
insl
int3
adc
dec
and
pop
push
lods
outsb
movsb
in
xchg
je
inc
cmp
jno
cmp
out
sub
sub
push
lret
cmp
xlat
js
and
fwait
pop
push
pushf
test
push
mov
mov
arpl
cmp
push
xchg
enter
pop
xchg
dec
and
pushf
repnz
daa
pop
fdivp
sahf
incb
sub
inc
repz
mov
inc
icebp
popa
dec
aaa
or
cmpsl
adc
dec
xor
outsb
or
pop
gs
mov
js
int3
cld
and
sbb
and
std
fwait
into
loopne
inc
inc
and
addr16
les
int3
outsl
rcl
or
adc
lahf
mov
lods
mov
scas
call
je
inc
dec
sub
idivb
pop
addr16
stc
sub
rorl
xorb
jecxz
scas
imul
idivl
pop
xchg
repnz
jmp
rcrl
cs
sbb
sub
sbb
dec
adc
cld
xchg
outsb
test
lock
mov
mov
adc
scas
or
gs
fimull
test
pop
lock
stos
out
lret
adc
mov
ror
aaa
jae
xlat
lds
or
xchg
mov
in
pushf
cmp
popa
mov
mov
xchg
ljmp
in
out
cmp
cli
push
cmp
add
mov
inc
int3
jnp
not
enter
sub
mov
leave
out
call
add
clc
sbb
or
and
loope
loopne
jmp
ja
mov
lds
popf
dec
nop
outsl
subl
sbb
lods
notb
cmp
cmp
clc
shlb
add
jle
and
lcall
ret
fisttps
pop
rol
mov
arpl
mov
in
or
or
fiadds
outsb
outsl
mov
aad
bound
stos
ja
mov
xchg
ficoms
mov
sahf
push
mov
mov
add
cld
out
scas
fld
dec
dec
push
movsl
pop
ss
js
sub
adc
sub
and
out
mov
jae
nop
test
mov
inc
std
mov
shll
push
ja
inc
cmp
dec
cs
and
mov
sub
cmp
cmp
mov
lock
adcb
jmp
insb
test
xchg
adc
add
testb
dec
pop
xchg
es
lds
pop
fisubl
or
mov
out
or
add
adc
inc
test
pop
mov
arpl
imul
adcl
dec
cwtl
ret
fs
mov
popa
subb
and
inc
cmp
and
pop
pop
mov
sahf
inc
push
fld
mov
add
cld
pop
sahf
js
outsl
into
mull
cmp
xchg
in
aas
cmp
ja
mov
outsl
fsubl
lret
lcall
inc
clc
lds
lods
mov
and
xor
movb
fwait
adc
leave
stos
pop
push
cltd
loope
icebp
xor
sbb
lret
pop
and
sub
les
in
cli
loop
cld
push
outsl
les
inc
sub
popf
sbb
test
add
xor
icebp
adc
hlt
push
sbb
data16
stc
or
inc
mov
stos
cmp
cs
mov
insl
lahf
jecxz
dec
mov
aaa
outsb
cmp
scas
sbb
jb
aad
push
dec
add
jle
daa
ja
imul
outsb
sahf
push
andb
arpl
lods
pushf
push
push
mov
in
outsl
xor
add
pushf
ss
in
in
xchg
inc
jl,pt
js
push
mov
mov
push
add
aaa
popa
movsb
vcmpfalse_osss
sbb
dec
shlb
shll
mov
push
or
call
push
push
int3
rorb
mov
adc
mov
mov
pop
fsubrl
sub
lahf
repnz
xor
xor
stc
mov
int3
inc
ret
sbb
xchg
jmp
inc
add
fsubr
imul
mov
adc
lds
ret
std
hlt
insl
push
cmpsl
nop
jge
negb
mov
mov
xor
push
push
adc
outsb
or
mov
inc
ret
ss
hlt
out
in
dec
in
dec
mov
int
push
inc
fcomi
loop
dec
dec
shrb
mov
movsb
push
push
push
pusha
fiadds
pop
mov
ja
test
cmc
daa
mov
push
jecxz
stos
stc
ret
cmc
in
aam
cmp
jae
dec
data16
sub
stos
fwait
ljmp
stos
sbb
lcall
popf
or
ja
stc
dec
dec
cmpsl
push
mov
sub
jns
into
jnp
jb
mov
ret
adc
pusha
xorb
jnp
movsb
pop
mov
iret
hlt
adc
xchg
ljmp
sbb
leave
ljmp
enter
icebp
ja
test
aas
aas
mov
mov
pop
sbb
adc
int3
movsb
add
pop
stc
fwait
ja
daa
pop
aam
jb
sub
pop
or
js
faddl
ja,pt
mov
fdiv
pop
push
mov
js
jge
xchg
inc
xor
notl
sub
cmp
inc
in
daa
jecxz
push
outsb
in
std
pop
cwtl
pop
add
sbb
pusha
push
test
xchg
push
push
dec
sub
es
adc
pop
adc
cmp
push
or
stos
sub
or
and
cs
sahf
int3
sub
sub
xor
mov
add
cmp
or
xor
sbb
xlat
sbb
or
shlb
ljmp
jle
fs
cmp
dec
xor
out
or
pushf
movsl
ss
or
and
divb
and
pusha
shl
nop
cmpsb
stc
lock
adc
jno
imul
fmul
fists
xor
es
aas
sub
in
mov
xchg
and
add
loope
add
testl
bound
cli
cs
mov
and
add
inc
cmpsl
xchg
sbb
jecxz
nop
jns
adc
stos
push
faddl
adc
push
mov
mov
mov
out
mov
xchg
or
jp
or
add
aam
divl
jb
popa
or
jmp
or
mov
loopne
insl
inc
imul
stos
imul
xor
cmp
push
pop
je
cs
test
adc
or
add
xor
clc
mov
je
jl
pop
fcmovnu
jbe
mov
push
xchg
leave
stc
faddp
dec
arpl
pop
imul
sbb
repnz
jp
mov
out
mov
xchg
jbe
pop
into
lods
mov
or
sub
mov
jecxz
cmp
out
gs
cmp
jmp
inc
push
cltd
dec
cmp
lds
aad
cmpsl
and
mov
jno
or
push
popf
push
clc
dec
mov
adc
daa
ljmp
int3
mov
out
pushf
movsl
mov
popf
rsm
daa
mov
insl
and
test
fistl
mov
rolb
cmc
in
out
adc
repnz
mov
and
fistps
inc
inc
mov
lds
cwtl
or
sub
shll
pop
icebp
bound
xchg
daa
xlat
icebp
insl
add
xchg
cwtl
mov
mov
inc
clc
stc
mov
popa
aam
lahf
std
repnz
xchg
lods
stos
xor
or
sub
sbb
dec
push
cmp
jmp
dec
inc
lods
jecxz
outsb
cmp
movsl
das
mov
lret
adc
movsb
into
cs
pop
loop
stos
cltd
jl
fdivl
jne
adcl
xor
outsb
out
sti
vpunpcklwd
inc
xor
jns
stos
pop
inc
mov
push
mul
mov
sbb
dec
add
adc
jo
jecxz
jg
das
inc
in
jnp
jg
sbb
adc
int3
sub
fmull
daa
mov
lods
mov
mov
rolb
or
fwait
test
daa
fsubs
or
cmc
enter
sbb
call
call
cmpb
test
inc
xchg
in
jg
popa
repz
in
mov
inc
xchg
lret
push
jmp
xor
int3
sbb
cmp
and
clc
out
ljmp
icebp
mov
sbb
inc
lcall
scas
lea
cmp
pop
in
cmp
lea
test
mov
xlat
call
sub
push
mov
push
movsb
aas
lret
add
fstpt
inc
push
mov
jae
xorb
shll
and
or
adc
bnd
pop
push
cld
xchg
mov
roll
jb
adc
cmp
clc
sbb
ficoml
pop
or
adc
in
mov
pop
jb
es
jecxz
and
mov
jne
int3
push
ljmp
lds
add
jae
lds
loopne
loopne
mov
inc
fs
fwait
dec
inc
mov
roll
mov
xor
fs
ds
push
xor
dec
cmp
popa
ds
test
leave
adc
add
mov
sti
sbb
stos
and
in
xor
xchg
pop
add
jle
jg
sbb
movsb
jae
pop
push
sbb
test
sbb
scas
push
ljmp
test
mov
ja
les
cltd
adc
mov
mov
cli
adc
outsb
cmpl
ret
lods
inc
in
mov
jg
adc
push
jp
fadds
sub
loopne
xor
jo
mov
mov
lahf
fmul
xchg
xchg
in
sub
aaa
mov
or
pop
ljmp
add
jns
test
in
or
inc
test
out
into
loopne
imul
fs
popf
rcrl
into
icebp
cmp
mov
gs
clc
push
aad
sbb
lods
cmc
js
rolb
mov
dec
rol
stos
sahf
and
inc
cwtl
rclb
repz
xor
cwtl
clc
jb
or
shrb
xor
je
testl
cli
inc
lret
pop
das
call
lcall
xor
push
mov
fisttpl
and
pop
and
xchg
mul
int3
mov
jns
nop
loopne
sbb
jl
in
cmp
sub
push
mov
jns
pop
mov
jmp
mov
push
loop
mov
mov
mov
loop
dec
movlps
and
and
pop
adc
xchg
pusha
push
pop
inc
aam
sarb
dec
push
mov
pop
xor
imul
add
mov
mov
pop
lsl
jo
inc
sbb
bound
or
cmp
or
inc
sub
and
xor
or
or
push
test
iret
imul
out
ja
jecxz
adc
push
fistpl
or
lret
into
orl
sbb
cmpsb
outsl
dec
and
pop
ja
mov
hlt
push
push
imul
xchg
mov
jnp
push
xchg
inc
adc
ficoms
bswap
jmp
lock
leave
dec
scas
pop
aad
adc
out
adc
mov
push
lcall
iret
popa
mov
dec
jne
sahf
or
add
cltd
movl
jno
inc
imul
iret
ficoms
ret
ret
fwait
cmp
je
dec
push
mov
push
jp
xchg
mov
rolb
xor
in
cs
gs
inc
clc
fdivrp
enter
xor
sbb
jns
jmp
sub
jo
test
scas
sti
cmc
cli
jp
add
pop
outsb
popa
sub
clc
mov
mov
adc
fcomi
dec
int
cmc
bound
mov
cmp
into
push
repz
andnps
inc
dec
sbb
cmp
rcr
loopne
push
test
jb
adcb
xor
aad
lock
adc
stc
mov
iret
enter
sub
dec
push
test
pop
adc
cmpsb
add
sbb
je
scas
and
incb
sbb
jp
test
sub
cmpsl
imul
push
xlat
push
imul
sbbl
sub
sahf
jecxz
inc
inc
push
bound
fucomp
outsl
outsb
xchg
jo
repnz
dec
jmp
lretw
int3
rorb
out
pusha
stc
in
jle
mov
xor
bound
fdivl
jnp
das
rolb
test
repz
sub
xchg
pusha
mov
loopne
std
mov
lods
ss
ret
pop
out
sub
ds
sub
mov
in
mov
adc
jno
leave
add
cld
icebp
jge
sbb
xor
fisttps
mov
arpl
stos
data16
fistpll
sahf
xor
cld
dec
lret
ret
xchg
mov
outsb
and
in
xchg
jg
lods
mov
clc
rcrb
mov
daa
loop
or
adc
sub
cmp
adc
mov
lcall
or
mov
cmc
dec
ficoms
stc
xchg
scas
cltd
fnsave
mov
sahf
mov
lcall
pusha
in
test
idivl
test
mov
cwtl
push
push
jb
cmp
cmp
into
mov
mov
push
and
ljmp
aad
testb
dec
scas
mov
sbb
push
orl
bound
add
cmp
aaa
cmp
or
jl
sbb
or
jns
scas
xor
fcoml
lcall
cs
addr16
and
fisubs
aas
pop
dec
jbe
ret
mov
test
adc
sub
sub
lods
pushf
std
addr16
xchg
adc
addr16
fnstsw
fsubl
xchg
inc
cmp
inc
xchg
xchg
std
and
fucomip
dec
cmp
mov
in
cmpl
jo
sub
mov
add
mov
movsb
ret
sbb
pop
cmovnp
fldln2
int3
cs
imul
pushw
xor
cmpsl
pop
xor
inc
push
or
jg
jae
mov
add
jae
out
adc
pushf
inc
mov
sar
cltd
xchg
mov
pop
pop
inc
in
mov
mov
cmp
into
out
push
lahf
daa
popf
sub
and
imul
jecxz
test
scas
or
sub
mov
xor
sbb
call
fidivrs
sahf
lods
cld
mov
lock
cmpsb
mov
arpl
sub
dec
jae
adc
aad
imul
xor
sbb
pop
and
cmp
lds
inc
and
sub
mov
lret
in
popf
stos
hlt
or
fnstcw
sub
out
sub
mov
xchg
adc
pop
rclb
cmp
ss
xor
push
scas
mov
jb
jmp
push
cli
stc
addr16
jo
mov
lret
dec
cmp
jg
rorl
or
call
insb
lret
mov
test
fcoms
xor
push
jne
cmp
mov
std
dec
outsl
das
arpl
out
lahf
inc
jmp
pop
fisubs
out
mov
xchg
cmpsl
fdivrs
pusha
movsl
mov
int3
sub
mov
out
loope
jne
mov
je
aam
cmp
mov
pop
sbb
mov
jbe
dec
pop
sti
xor
jl
mov
jmp
ror
insb
ja
insl
gs
int
and
and
imul
and
ss
test
std
dec
cmc
ja
xor
push
outsl
mov
lods
adcl
gs
lea
dec
sbb
pop
hlt
xchg
cmp
sbb
std
or
ss
in
or
repz
inc
imul
daa
pusha
mov
xor
test
push
insb
repz
mov
jns
mov
inc
gs
addl
mov
cmp
sti
lahf
outsb
enter
or
lret
int3
jg
test
iret
das
and
loope
arpl
push
mov
sbb
es
incb
loop
sub
push
cld
popf
ret
or
cwtl
adc
lock
fidivl
lods
jae
call
rorb
xor
ror
adc
push
mov
dec
std
fcmovb
pusha
add
mov
bound
out
and
or
jno
jg
sub
lock
dec
ljmp
push
and
dec
dec
add
inc
push
jge
mov
test
jns
leave
jmp
xor
stos
jg
mov
shll
sahf
subb
movb
pop
jge
adc
xchg
sarb
push
mov
shlb
inc
stos
loopne
in
sub
adc
cmpsb
fcmovnbe
popf
sar
cmp
cmp
push
jecxz
push
fists
inc
jmp
insl
cltd
loope
mov
pop
mov
cmp
pusha
push
xor
clc
and
ds
call
jb
fisubs
jg
dec
cmp
cmpsl
lcall
or
lcall
sbb
mov
lret
ss
add
std
out
out
cltd
iret
shrb
icebp
jl
lea
mov
int
cmp
lahf
xchg
mov
lock
jo
dec
jl
mov
stos
lods
and
pusha
mov
bound
lock
sbb
pop
shrl
adc
test
scas
pop
push
or
fs
repnz
loop
mov
or
rcrb
and
lret
and
scas
xchg
inc
or
inc
or
inc
sbb
bound
lods
xor
loopne
dec
das
fidivs
xchg
mov
inc
and
or
fiaddl
cltd
mov
lds
or
xor
dec
clc
or
fstpt
das
flds
and
mov
loopne
cmp
loope
mov
hlt
mov
jp
mov
in
aad
idivl
popa
mov
add
pop
lds
xchg
sub
mov
mov
mov
sub
push
cmc
adc
insb
cmp
inc
lock
lret
movl
iret
pop
loopne
sbb
cmc
add
cmp
sub
or
xchg
outsb
daa
idivb
pop
jmp
jns
jecxz
add
adc
cmpsb
shlb
clc
pop
push
push
adc
jne
push
lret
shrl
daa
and
es
repz
aas
push
mov
jno
cmp
popa
out
jp
mov
test
mov
mov
mov
das
and
push
jmp
in
ret
pop
lret
sub
and
ss
insl
add
arpl
cmc
sbb
mov
stc
push
int
jb
insb
add
xor
and
xchg
mov
cmp
or
in
sbb
push
xchg
pop
ja
mov
daa
sbb
and
in
sub
aam
je
mov
mov
ret
bound
mov
jno
mov
dec
pop
test
cmp
adc
pushf
int
pusha
arpl
rcrb
sub
sub
lcall
fcom
push
shlb
test
jg
cmpsb
fldt
inc
adc
mov
cmp
pushf
mov
aas
dec
pop
pushf
cmp
push
inc
push
add
fwait
inc
mov
xorl
add
inc
jl
sbb
arpl
pop
stos
and
xchg
out
dec
push
lret
xor
pop
push
mov
jp
mov
insb
pop
in
ret
mov
jbe
nop
cwtl
outsl
xchg
nop
pushf
push
adc
pop
outsb
fistl
push
popl
adcl
pushf
sub
pop
in
push
fisttpll
outsl
and
orl
and
cltd
jne
popa
sub
stos
movsl
es
shll
sbb
sahf
cmp
dec
les
iret
addl
or
popa
fisubrs
inc
pop
xchg
into
pop
mov
lock
and
sti
mov
mov
scas
inc
loopne
lods
out
out
mov
les
inc
mov
or
fbld
sub
in
cli
insb
push
aaa
aad
xorl
movsl
mov
in
mov
add
mov
aaa
std
aas
std
cmpsb
aas
mov
das
icebp
add
jl
jp
loop
repz
ja
sub
adcb
or
lods
pop
cld
and
stos
insl
pop
in
pop
pop
and
es
mov
out
add
mov
fdivl
mov
xor
jg
mov
lea
cmp
in
mov
and
stos
push
mov
in
sbb
adc
mov
outsl
cmpsl
push
or
sub
test
pop
push
and
cmp
movsb
icebp
popl
ljmp
mov
out
cmp
pop
rcll
sti
mov
loop
dec
test
fnstcw
and
test
and
int3
jns
xor
add
cli
mov
fistpll
lahf
std
xchg
daa
aaa
adc
ds
pusha
movsl
jae
or
mov
inc
cmp
jecxz
lret
loopne
ja
ljmp
loopne
int
fninit
in
sub
cmp
xchg
xor
lahf
fadds
sub
outsb
inc
outsb
jo
pop
jge
jge
inc
js
xchg
scas
push
fcoms
pop
adc
ljmp
mov
dec
movsb
mov
cmpsb
sub
hlt
add
adc
jmp
fmul
ja
xor
scas
mov
enter
es
arpl
punpckldq
es
cmp
gs
outsb
icebp
sti
les
mov
lret
stc
in
std
xlat
lods
stos
cmc
adc
cmc
clc
dec
rolb
insl
jbe
enter
xchg
lods
sbbl
jo
pushf
mov
pushf
jae
in
pop
mov
aas
aaa
flds
jnp
or
loope
test
sbb
add
cmp
inc
inc
aaa
cmc
mov
adc
daa
movsl
pop
inc
insb
pop
jbe
jb
mov
pop
cmc
jecxz
mov
pop
out
mov
outsl
stc
pushf
in
inc
lret
xorl
push
inc
xchg
loop
jo
in
sub
loopne
xor
test
push
adc
cltd
sbb
lcall
xchg
xchg
les
loopne
lds
outsl
mov
push
dec
sub
push
mov
or
pop
bound
test
ret
add
stc
inc
js
add
out
ret
xchg
jecxz
test
push
movsl
jno
test
int
sub
cli
jo
mov
test
mov
iret
jmp
mov
cld
jl
data16
pop
xchg
loop
lret
stos
mov
xchg
sbb
or
mov
sub
mov
sub
xchg
mov
mov
xchg
cmp
iret
xor
repnz
adc
lcall
bound
xchg
adc
push
mov
in
jns
mov
aad
jge
jno
add
test
out
jecxz
lcall
and
adc
jno
cmp
dec
mov
mov
fcomps
in
mov
fcoms
rcl
pusha
pop
aad
jb
pop
out
or
fwait
jg
pusha
adc
fwait
iret
mov
shll
iret
mov
xchg
inc
push
movnti
xchg
flds
iret
lahf
out
sbb
sub
add
pop
ja
xchg
add
sbb
mov
int3
stos
pop
setg
mov
add
sti
inc
pushf
js
insb
fidivs
mov
into
pop
mov
sbb
pop
pop
imul
daa
mov
test
jecxz
out
hlt
push
xorl
xor
and
cs
pop
adc
mov
pop
mov
inc
sbb
inc
xchg
inc
pushf
add
inc
pop
sbb
cld
lret
mov
int
and
inc
add
and
in
lds
loope
cmp
fistpl
jge
lret
pop
sub
outsl
imul
jecxz
dec
and
push
jns
rcrb
lret
mov
mov
into
pusha
cmp
int
fnclex
sbb
inc
mov
jg
inc
xchg
jmp
cmp
jmp
cmp
ret
data16
shr
mov
dec
shlb
into
jae
sub
and
mov
add
xchg
mov
xlat
std
mov
js
jae
and
jl
cmpsb
mov
lock
repnz
push
movb
push
dec
xor
lcall
sahf
inc
pop
push
imul
push
loope
movl
es
mov
ror
repz
fisubs
add
lahf
sub
jl
and
lods
inc
pop
out
push
mov
fidivl
fmulp
xor
sbb
pusha
into
call
rolb
jno
arpl
mov
ret
adc
in
dec
adc
mov
inc
adc
or
scas
inc
dec
test
xchg
cmp
mulps
lds
movsl
sbb
push
mov
push
jne
cwtl
xlat
xchg
mov
js
stos
push
jle
hlt
mov
lods
push
dec
insl
pop
cmpsb
jecxz
fists
mov
sub
mov
gs
fdivl
pop
add
jg
xchg
add
push
pop
addr16
or
movsl
out
or
cmp
popf
xor
and
fbstp
test
rclb
jo
cltd
lcall
jge
pop
xor
enter
mov
loopne
cmp
cmp
jge
xchg
lods
cmp
shll
pop
test
add
jle
dec
pop
leave
mov
pop
lret
dec
dec
pop
outsl
sbb
outsb
popf
popf
scas
imul
push
jl
stos
cmp
incb
jg
unpckhps
sbb
cmp
mov
sub
outsl
sbb
nop
test
sub
jb
aam
popf
xor
data16
pop
aas
jle
adc
scas
stc
jecxz
jmp
push
mulb
mov
push
aam
pop
add
ret
ljmp
cmc
in
mov
out
sahf
adc
jecxz
fdivrl
pop
pop
lds
sub
gs
push
addl
push
aas
daa
in
icebp
adc
sahf
add
jns
mov
pcmpeqb
xorl
mov
mov
xchg
add
mov
into
stc
adc
clc
sub
les
xlat
push
stos
cwtl
shl
ficoml
notl
data16
xchg
jecxz
xor
adc
xchg
shrl
in
sub
aad
addl
or
mov
cltd
cmp
jnp
test
mov
mov
lret
xor
push
scas
mov
dec
stc
xor
fistps
pushw
pop
sub
rorb
or
mov
xor
cmpsl
sbb
loopne
cmp
sub
xor
les
mulb
cmpsb
jle
pop
fwait
adc
out
xchg
sbb
mov
or
cmp
dec
pop
fidivl
pop
inc
cmp
and
adc
xchg
adc
cmp
xchg
adc
lret
sarl
lea
sbb
cmp
test
das
cmp
mov
sbb
mov
pusha
dec
fwait
aas
dec
fs
scas
jb
fwait
push
rcrb
mov
add
dec
dec
pop
or
mov
dec
popf
xchg
je
push
fwait
or
outsb
or
jnp
push
mov
negb
insb
jecxz
iret
mov
sub
rol
or
movsb
pusha
cmpsl
lods
push
xchg
mov
gs
push
mov
xchg
addr16
dec
pop
mov
push
mov
push
stos
jae
sbb
xor
insb
inc
scas
fs
aad
idivl
ret
out
add
movsl
aas
mov
outsl
push
icebp
adc
or
orl
rclb
sbb
xor
mov
std
rcr
cmp
push
fidivs
pop
loopne,pn
rcll
incb
sub
mov
movl
mov
cmp
push
or
jae
lret
lret
jmp
inc
out
add
dec
clc
shrl
in
or
add
mov
cmc
outsb
cmpsl
or
add
addl
add
and
std
insl
lret
hlt
cmovge
mov
repz
cmp
inc
inc
bound
cs
sub
and
push
xchg
movlhps
sbb
mov
out
mov
pop
fstpl
push
test
inc
in
mov
mov
sub
loopne
ja
cmpsb
enter
mov
pop
cmp
xor
jecxz
mov
adc
inc
mov
leave
jle
jl
icebp
dec
imul
pop
jo
cmp
lret
negl
rolb
mov
add
and
jecxz
jno
dec
pusha
inc
or
or
inc
and
aas
test
lahf
fnstcw
jg
cltd
mov
ja
hlt
or
inc
dec
test
je
cmp
xchg
xor
and
or
dec
mov
mov
sbb
push
fs
pop
cmpl
sbb
jne
dec
jmp
fstl
or
push
sbb
sahf
ds
jl
test
mov
pop
bound
iret
jne
and
cmp
or
sahf
xchg
push
xor
pop
in
pop
movsl
cmpsl
mov
xchg
mov
xchg
xchg
pop
fdivl
mov
sub
sbb
lcall
push
test
dec
xchg
xchg
push
testb
push
dec
rcrb
push
sahf
pop
out
xchg
out
iret
loopne
ffreep
aam
bound
shlb
orb
in
lret
inc
subl
inc
adc
inc
dec
inc
into
mov
mov
imul
testl
clc
jnp
jno
or
xchg
pop
cmpsb
jg
push
and
popf
jae
jno
inc
aaa
inc
xchg
push
dec
mov
leave
sub
scas
dec
push
inc
jg
in
dec
leave
cmp
addl
push
adc
lret
imul
sbb
rcrb
push
popa
mov
jl
scas
gs
and
roll
subl
repnz
xchg
aam
adc
pop
push
fistps
xor
call
xchg
stos
push
or
jp
jns
adc
gs
imul
add
cmpsl
jl
roll
inc
cmp
or
jns
inc
cli
pop
sahf
addl
adc
sub
out
arpl
xchg
jle
sbb
push
cmpsb
shrl
fcoms
adc
cmp
inc
ret
mov
pop
dec
dec
lcall
lea
or
cs
enter
sbb
daa
das
mov
mov
cmc
pusha
cmc
xchg
mov
lods
mov
push
cmp
push
test
ds
adc
mov
inc
icebp
addr16
cs
ret
dec
sub
push
outsl
int
std
adc
push
repz
cwtl
lret
mov
fnstcw
sbb
cmp
cs
mov
mov
fstps
and
aam
and
adc
jmp
mov
mov
inc
dec
or
sub
jg
dec
mov
leave
mov
mov
mov
popa
pop
cmp
inc
lahf
jg
jbe
sub
mov
add
jo
mov
cmp
cmc
mov
hlt
fsubrs
add
cmpsb
fildll
sbb
loop
sbb
fst
or
stos
pushf
or
xchg
movsl
aad
push
imul
xor
rorl
pusha
jne
rcll
xchg
in
mov
les
fidivrs
imul
subb
out
jmp
lock
aas
fildll
jle
lret
sub
jo,pt
sub
add
popf
pop
pop
sub
cld
inc
and
inc
outsb
sub
out
dec
pusha
gs
jno
pop
or
xor
popa
inc
dec
add
xchg
pushf
lds
popf
in
push
push
addps
dec
mov
aaa
inc
pop
stos
pop
sbb
sarb
int
sbb
add
jbe
push
push
push
xchg
in
lahf
repnz
mov
pop
and
sarb
add
add
rclb
pop
xlat
out
cld
fucom
jns
and
inc
adcb
movsl
test
ror
dec
pop
movsl
xchg
fcoms
inc
addr16
jp
gs
or
rol
push
mov
sahf
cli
addb
les
das
std
subl
fstpt
ret
lods
dec
lods
je
sub
loopne
pop
xchg
popf
xorb
mov
out
mov
sub
sbb
dec
adc
fsubr
inc
lahf
hlt
inc
andl
add
mov
jmp
add
adc
mov
sti
dec
or
fldcw
decl
mov
aam
xchg
mov
lret
mov
ret
fists
xchg
push
pop
sub
push
in
gs
pop
or
xor
add
or
mov
test
gs
xchg
cmp
and
add
sub
lret
movsb
pop
or
add
push
mov
xchg
lret
mov
xchg
repnz
dec
pusha
les
pop
inc
inc
je
mov
ror
mov
pop
cmp
test
xchg
loope
dec
adc
stos
insl
sub
jo
fimuls
dec
in
nop
mov
imul
pop
hlt
shlb
scas
rcrb
and
xchg
cmp
test
fsubs
push
not
pop
out
jo
outsl
stc
into
popf
divl
and
int3
sarb
std
jns
test
test
outsl
test
js
dec
fisubrl
mov
sbb
and
inc
outsb
imul
inc
in
push
outsl
popa
sti
adc
cmpl
inc
mov
mov
xchg
sub
adc
jg
addl
cld
xor
xor
push
inc
test
sbb
ficoml
fucomp
subb
gs
ret
cmp
ficompl
mov
lock
and
loop
pop
inc
xor
and
fldt
push
mov
lret
adc
fs
cld
fwait
negl
mov
mov
or
mov
lods
pushf
sbb
sbb
aaa
adc
repz
jle
jbe
xchg
and
mov
xor
pop
inc
mov
and
mov
sbb
pop
xchg
lret
xor
xchg
jl
add
sar
lods
jnp
sahf
lret
lock
adc
pushf
cmp
out
loopne
xor
jmp
scas
xor
xchg
xor
push
test
xchg
inc
into
or
aaa
insl
and
xor
fildl
mov
out
mov
pop
jno,pn
adc
mov
push
xorb
adc
pop
xor
leave
in
lods
push
insb
cmc
adc
mov
push
dec
nop
add
jl
push
out
xor
inc
outsb
movsl
inc
pop
sub
jae
adc
enter
imul
push
push
test
jle
ret
cmp
push
mov
xor
push
adc
jle
mov
out
ss
sbb
lock
push
les
int3
pop
xchg
sahf
stc
mov
std
cli
adc
loopne
add
test
dec
push
popf
dec
adc
adc
add
shrb
dec
dec
cmovnp
sbb
fisttpll
xchg
mov
stc
shrl
jp
jp
inc
sub
outsl
cmp
xor
out
in
scas
inc
jnp
movsb
push
adc
shll
sub
xchg
cmp
cmpsb
sarl
and
xchg
cmp
lcall
lds
enter
lds
sbb
inc
dec
andl
fldcw
outsl
lret
ficompl
xchg
jno
popf
out
or
sbb
in
shll
dec
sub
mov
pop
and
arpl
xchg
lret
sbb
xchg
out
subl
push
outsl
adc
jbe
jns
mov
jecxz
lods
cmp
test
or
mov
adc
movsl
pop
std
cmp
push
ret
subl
lret
xor
cmp
sub
add
pop
in
pop
movsl
loopne
jb
jg
jg
ja
cmp
pop
hlt
jg
sbb
imul
xchg
fs
adc
mov
adc
enter
sub
nop
mov
sub
data16
pusha
ja
in
insl
dec
lcall
cs
sub
roll
lret
in
addr16
mov
lret
mov
jg
hlt
stos
lea
adc
mov
dec
fnstcw
or
pop
adc
pop
xchg
pop
or
push
mov
push
in
adc
sti
dec
in
fwait
mov
and
mov
fwait
enter
inc
mov
cmpsb
das
add
lcall
rcl
pop
add
rorl
dec
adc
pop
sub
lods
sub
inc
xor
sub
rcll
xor
xor
sbb
inc
xchg
loopne
jg
mov
nop
adc
sub
add
xchg
inc
add
sahf
rcr
les
mov
iret
scas
sti
cli
push
addr16
add
sub
adc
int
push
scas
lods
push
push
inc
push
push
pop
inc
fimuls
inc
js
cmova
bound
jg
push
icebp
push
out
mov
nop
adc
xor
stos
jmp
jae
out
jp
fisubs
ret
fisttpll
mov
outsb
jl
pop
mov
or
cmpsl
add
mov
insb
sbb
cmp
ret
daa
pop
jmp
test
mov
cmp
add
loope
shr
sub
add
jg
dec
mov
js
aam
fcomps
test
jmp
punpcklbw
push
cmp
inc
inc
sub
dec
hlt
leave
stc
pop
ljmp
mov
xor
pop
fcomip
test
dec
lods
inc
pop
inc
jle
bnd
jl
insl
fimull
jne
lret
jg
negb
stos
notl
dec
add
jae
in
jae
js
xchg
mov
movsl
iret
adc
nop
add
xchg
arpl
adc
sub
jl
xlat
lods
repz
and
iret
or
rol
mov
prefetcht0
arpl
test
fisubl
movsl
data16
lods
cltd
jmp
ds
ret
movb
lcall
repz
fcomps
rol
je
cltd
insl
mov
inc
add
lods
cmp
ja
xor
lods
imul
cmp
shlb
nop
rolb
push
sbb
mov
mov
cli
jbe
jne
out
es
call
jno
mov
push
push
push
add
xchg
push
sub
pop
imul
mov
inc
outsb
out
and
ss
cmp
jecxz
adc
mov
cltd
fisubs
loope
pusha
ret
adc
into
add
ss
cmp
aas
jp
mov
xchg
insb
push
loopne
cwtl
dec
and
push
pop
movsl
daa
loop
js
pop
gs
pop
xor
fwait
mov
outsb
sub
adc
sub
inc
dec
xor
js
inc
imul
sub
push
xor
mov
out
jg
push
and
mov
xlat
gs
iret
iret
pop
jle
pavgb
lahf
sti
cltd
push
pop
inc
push
int3
sub
sub
imul
xchg
xor
xor
aad
fadds
xchg
loop
lahf
dec
outsb
js
or
pop
mov
stc
mov
mov
cli
mov
mov
push
daa
lods
sbb
dec
mov
cmp
push
mov
cmp
out
iret
test
incb
push
or
xchg
sbb
sbb
sub
subl
ret
inc
fs
inc
xchg
adc
jp
or
mov
cmpsl
mov
pop
push
je
or
fwait
push
imul
dec
or
xchg
lcall
aaa
cwtl
insl
xchg
dec
dec
sub
add
jle
sub
ljmp
mov
lahf
sti
xchg
pop
cmp
adcl
adc
inc
fmul
cmp
loope
inc
mov
pop
fildl
inc
push
cltd
mov
push
mov
sub
fdivl
enter
push
push
jno
pop
jno
loope,pn
add
xchg
cmpsb
ja
mov
sub
out
lods
rcrl
hlt
ficoms
jle
xor
xchg
stc
and
sbb
cmc
push
dec
fcmove
cmp
cmp
pusha
outsl
cli
mov
dec
dec
stos
test
pop
cmpsb
mov
push
sti
fimull
xchg
push
xchg
movsb
mov
loopne
or
push
pminub
push
sbb
aas
sti
pop
push
inc
lods
jmp
test
js
aam
jnp
inc
pop
and
out
xlat
mov
or
mov
outsb
in
and
stos
mov
cmp
adcb
sub
xlat
in
push
mov
adc
roll
jle
mov
and
test
pop
lods
testl
push
lods
push
adc
jnp
stos
mov
dec
mov
dec
jo
es
push
mov
pusha
jecxz
push
out
aaa
xor
out
inc
aas
jb
sbb
fcoml
or
daa
jle
adc
ret
sub
inc
sub
cli
jge
push
fidivrl
fistl
clc
jmp
test
jmp
sahf
enter
mov
rcrb
mov
leave
jmp
jmp
fisttps
sub
mov
aam
cmpsb
xchg
pop
rol
and
pop
push
mov
fidivrs
dec
push
into
fidivs
xlat
xor
in
xor
ret
pop
fidivs
mov
pop
inc
mov
daa
xchg
clc
icebp
mov
lock
mov
shr
mov
cmp
dec
push
add
dec
push
inc
mov
jp
pop
and
add
ja
mov
shll
jbe
lahf
outsl
xchg
inc
aad
mov
bound
pop
mov
insl
lret
mov
fsts
pop
test
clc
imul
or
in
mov
inc
jl
jae
jmp
mov
int3
gs
jg
pop
ret
jl
jge
fdivr
stos
and
insb
inc
jno
ret
cmp
cli
mov
add
xlat
movsb
enter
add
mull
jg
insl
mov
sbbl
push
and
inc
loopne
insb
rcrl
stos
sbb
sahf
rorb
dec
icebp
mov
gs
xor
out
xchg
insb
scas
inc
pop
add
push
stos
and
pop
mov
dec
jb
jecxz
add
or
and
sbb
imul
ret
das
les
jecxz
fdivrs
mov
and
inc
cwtl
mov
adc
int
arpl
adc
pop
ljmp
mul
stos
out
and
insl
cld
cmp
dec
incl
mov
lcall
nop
push
mov
cmpsb
pop
and
les
or
stos
mov
mov
xlat
cmpsl
negl
push
pop
mov
nop
sbb
mov
xchg
shr
sub
and
sahf
daa
mov
cld
enter
adc
and
push
push
mov
add
arpl
pop
pop
push
mov
decl
test
dec
test
inc
fwait
aad
stc
sub
stos
push
mov
popf
sti
inc
xchg
pop
std
sub
loope
pop
add
adc
push
insl
dec
out
call
cmp
enter
addl
shrl
and
push
xchg
loop
or
xor
repnz
jae
lea
mov
dec
stc
and
pop
out
out
lds
xor
push
clc
pop
add
add
mov
enter
inc
sbb
in
jecxz
cmp
jo
fcomp
sbb
add
das
sbb
jg
int3
enter
cld
inc
mov
mov
das
push
dec
mov
adc
in
dec
sub
lahf
xor
fxch
jno
bound
mov
push
jle
repz
sub
mov
cmp
icebp
and
fcomp
out
or
push
push
dec
icebp
lret
pop
inc
jb
adc
mov
icebp
dec
mov
sub
mov
ret
aaa
pop
xor
gs
nop
mov
cmp
shrl
mov
or
cmp
sahf
hlt
pop
mov
out
imul
or
mov
scas
daa
pop
movsl
or
dec
lcall
inc
add
rol
mov
test
loop
subl
lcall
outsb
xor
jmp
repnz
cmp
push
daa
mov
loope
cltd
add
mov
shlb
stc
cmp
scas
sbb
fisubrs
jmp
xchg
add
push
lahf
mov
mov
sub
cmp
cmpsb
fisubrs
mov
add
dec
rclb
stos
mov
push
cld
inc
and
loop
pop
lret
or
fs
add
fstpt
push
cmc
cwtl
add
sbb
xchg
dec
bound
or
lea
scas
ds
dec
jecxz
insl
rolb
inc
aad
in
test
stos
cmpsb
ret
test
dec
lahf
push
xchg
imulb
lret
sub
inc
movsb
inc
cmp
mov
adc
push
in
pushf
into
jecxz
out
add
xor
imul
enter
pop
cltd
out
stc
pop
jo
lret
pop
fisubl
inc
sar
dec
push
and
out
push
mov
dec
mov
xchg
pop
and
push
in
shlb
mov
repnz
pop
lods
pop
push
inc
test
xchg
xchg
outsb
dec
xchg
adc
js
testb
sub
cmpsl
push
cmp
out
mov
cli
pop
adc
sub
dec
pop
sarl
in
lods
fimull
push
js
int3
xchg
xor
and
sbb
xchg
pop
xchg
sbb
xchg
xor
xor
fists
mov
lds
subl
xchg
popa
pop
pushf
lds
pop
orb
int
rcrl
pop
sahf
clc
mov
inc
stc
lea
push
sub
push
mov
dec
fnstsw
dec
cmp
aam
scas
mov
lods
cs
bound
inc
aad
dec
xor
cmp
push
ret
and
xchg
icebp
std
xchg
sub
inc
shl
call
clc
rcrl
dec
popf
mov
mov
mov
mov
idivl
int
jnp
push
xor
pop
mov
mov
pop
pushl
lcall
bound
mov
mov
fsts
push
into
mov
lods
cmp
daa
and
push
dec
jmp
subl
ret
clc
popf
mov
sbb
idivb
dec
fisttpl
pop
xchg
push
arpl
dec
scas
ret
jbe
jne
data16
dec
push
inc
dec
sbbl
test
fidivl
push
pop
lods
and
and
or
lret
xor
pop
pop
out
push
mov
mov
dec
mov
push
jmp
outsb
ret
jb
fstpt
add
and
sub
mov
xchg
outsb
in
mov
test
jbe
lock
movaps
pop
pop
jl
dec
mov
hlt
call
pop
dec
test
dec
lahf
call
lret
jecxz
mov
xchg
inc
jmp
pop
mov
mov
not
test
jl
pop
mov
call
dec
ds
sti
ret
mov
xchg
push
jp
add
inc
mov
mov
mov
or
jmp
push
sbb
test
push
cmc
mov
sar
leave
mov
cs
mov
test
push
das
dec
push
inc
testb
imul
mov
sub
hlt
scas
mov
aam
sub
inc
nop
cmp
mov
fisubrl
sarb
cmpsl
insl
mov
sbb
jmp
jne
adc
syscall
push
inc
sub
sub
cmp
and
push
ja
aas
cmpsb
add
aaa
mov
das
or
jmp
mul
sarl
cmc
lahf
repz
jbe
jae
lret
xchg
push
fistps
stos
push
cmpsl
fsubrs
cwtl
push
ficompl
pop
inc
loope
inc
imul
cltd
aam
sahf
pushf
lcall
in
lea
fistl
pop
mov
inc
mov
pushf
insb
push
jo
mov
adc
nop
fs
mov
mov
les
pop
sub
std
push
jecxz
adcb
test
pop
sbb
or
push
adcl
push
lods
xor
pushf
sub
xchg
sar
js
stc
jns
outsl
hlt
cmp
mov
icebp
out
cmc
stc
in
je
jmp
xor
jecxz
rorb
int
or
test
pushf
dec
aaa
cmp
xor
pusha
xchg
dec
xor
bound
aad
xchg
xchg
inc
mov
iret
ds
push
out
test
push
scas
shr
cmpsl
fs
out
outsw
cmpsb
pop
inc
int3
jmp
dec
and
and
add
adc
push
mov
rorb
or
xor
fs
std
ret
push
mov
inc
mov
push
and
icebp
in
sahf
push
mov
cmpsb
ret
cs
mov
lcall
call
loopne
pop
add
test
pusha
or
push
aam
inc
add
dec
cmp
jbe
outsl
push
fmul
loopne
leave
push
pop
flds
in
or
or
adc
inc
or
call
and
and
dec
and
sub
aad
std
jmp
cmp
fdivl
pushl
jge
stos
lock
add
jmp
fdivp
out
sub
loope
popa
clc
imul
pop
sbb
std
jb
das
mov
and
cltd
pop
mov
repnz
lret
push
xchg
in
pop
add
or
xchg
arpl
mov
xor
xchg
hlt
dec
and
loop
rorb
test
ljmp
or
xchg
sbb
and
out
lods
shrb
dec
push
fidivs
das
push
test
add
sub
pop
test
andb
jbe
bound
pop
pop
add
xor
cmp
loope
or
adc
cmp
xchg
sbb
ret
xor
push
push
rol
dec
push
cli
sarl
mov
data16
xchg
cld
cmp
pop
add
lock
orl
xchg
adc
adc
xor
or
push
test
shr
in
mov
or
les
addr16
xor
out
jmp
xor
push
popa
xchg
sbb
inc
div
xor
add
push
sbb
lods
jnp
push
int3
jnp
sub
test
adc
sbb
cmp
aad
xchg
or
sti
into
push
jp
repz
mov
stos
dec
mov
aad
jg
out
movsl
in
xchg
push
arpl
aam
jb
push
sbb
xchg
push
test
movsb
pop
cmp
mov
dec
adcb
inc
mov
dec
mov
fstpl
cmp
hlt
push
fs
mov
fadd
push
push
aam
lret
movsb
ljmp
jns
lds
lret
sbb
lcall
adc
inc
dec
sbbb
sti
pop
or
aad
addl
sub
add
cmp
mov
push
inc
cwtl
sub
mov
icebp
mov
jmp
push
and
mov
orb
sarb
repnz
sahf
cmp
aas
iret
rcrb
fistpll
pushf
add
jno
orl
mov
and
je
push
lods
fnstsw
push
mov
push
sub
jmp
mov
cs
das
push
out
cmpsb
dec
xor
xchg
stos
pop
jp
in
mov
loop
ljmp
mov
lahf
lds
js
lcall
jnp
out
push
inc
mov
mov
fcmovnu
cmp
clc
data16
loopne
cmpsb
andl
adc
jno
xorb
sub
mov
and
mov
aas
pusha
inc
cmpsl
mov
sbb
xor
arpl
sbb
testb
pop
push
jp
in
dec
xor
ficoms
gs
inc
divb
mov
adc
pop
idivl
pushf
inc
xchg
adc
add
xor
mov
mov
cmc
lahf
lds
xor
es
lea
mov
cmp
adc
sub
cmp
sub
icebp
cltd
fnclex
adc
sbb
push
cli
jp
test
ret
aad
sti
lcall
idivb
fdivrl
dec
bswap
mov
into
cmp
lods
xor
loopne
insb
push
mov
add
fsubs
mov
inc
push
or
push
outsl
iret
sbb
arpl
cmp
addb
mov
xor
mov
enter
nop
push
dec
mov
add
pop
icebp
js
sbb
ficompl
popf
and
test
fsubrs
fcoml
call
scas
aas
jge
inc
or
xor
insl
int3
pop
test
stos
or
test
push
lods
xor
data16
mov
sub
lds
and
jae
or
in
mov
inc
fdivrs
jne
in
loop
push
aaa
xchg
and
pop
ret
sub
aad
loop,pt
fcmovbe
ret
inc
sbb
pop
out
jne
ds
clc
mov
idivb
xor
dec
je
jp
jmp
xchg
in
mov
sbb
cli
xlat
sbb
add
pop
mov
push
mov
push
movsb
cmp
clc
ret
inc
popa
cwtl
adc
inc
jo
out
sbb
xchg
dec
stos
scas
jecxz
rol
js
mov
mov
pop
jb
cmc
loope
push
inc
mov
cmc
mov
jo
or
out
pop
or
or
cmp
dec
arpl
and
lret
ret
test
lret
mov
push
mov
inc
cld
add
jb
or
push
xchg
adc
ret
dec
pextrw
ja
popf
or
inc
inc
nop
mov
pop
mov
mov
adc
repnz
or
pop
mov
mov
stos
or
sub
push
mov
or
aad
pushf
sti
cli
push
dec
xchg
inc
mov
cmpsb
ret
pop
jge
xchg
rorb
rclb
inc
jns
pop
inc
inc
xchg
les
add
push
fisubs
mov
dec
dec
fs
mov
sbb
cmpsl
mov
mov
lret
jl
xchg
inc
testb
gs
vmread
mov
jne
out
ja
pop
ret
fsts
inc
xchg
out
cmp
shrl
push
js
sbb
jno
jle
jge
or
int3
loop
or
or
push
jmp
movsl
lret
cmc
cmp
adc
lods
ds
and
mov
cmp
jp
xchg
sbb
es
dec
dec
push
push
jecxz
xchg
inc
or
shr
popa
call
mov
xchg
xor
sbbb
mov
ror
and
mov
jecxz
mov
add
dec
jno
dec
cs
pusha
push
movsb
cmpsb
sbb
mov
ror
jmp
or
push
outsb
push
jg
jmp
and
jns
mov
mov
int
sbb
push
xchg
aad
test
adc
fistl
fbld
mov
test
cmp
xlat
pop
cwtl
popa
pusha
jmp
xor
sbb
inc
dec
inc
push
sbb
ret
and
outsb
mov
xchg
in
mov
push
sarb
push
ds
nop
push
mov
das
fadds
lret
mov
lods
mov
and
push
mov
add
and
inc
pop
xchg
ds
or
xchg
stc
js
xchg
sbb
clc
in
jg
icebp
adc
repnz
out
js
mov
std
mov
mov
sbb
sub
adc
out
or
ljmp
dec
mov
push
xchg
imul
dec
lahf
push
pusha
mov
fcompl
xchg
daa
leave
test
jae
jle
dec
repnz
or
cmpb
adc
popf
mov
popf
mov
dec
in
movb
ret
fsubrs
xchg
pop
mov
cmpsb
sahf
xchg
aaa
aad
dec
movsb
popf
jle
stos
mov
fisttpl
xchg
icebp
inc
dec
push
das
fcomps
push
stos
repnz
pop
aad
fs
pop
jae
fildl
andb
jge
adc
loope
mov
nop
loope
mov
pop
lock
rorl
pop
jbe
cwtl
xchg
addr16
pop
add
ret
jecxz
mov
mov
out
xchg
dec
adc
xor
lea
and
adc
sub
push
xorl
stos
cmpsl
mov
jg
push
pop
fxch
xchg
or
push
and
pusha
jmp
insb
mov
inc
adc
jmp
pop
pop
push
stc
fisubrs
adcb
imul
frstor
imul
inc
mov
pop
mov
mov
scas
cltd
imulb
pusha
cld
pcmpgtb
insb
sub
xor
out
lock
lret
and
pop
arpl
add
cmpsl
pop
adc
pop
mov
or
mov
movb
jg
lahf
xchg
jg
pop
outsb
cld
ljmp
jge
aam
jmp
decb
xchg
mov
adc
cvttps2pi
ret
outsb
jno
jmp
mov
push
jns
push
and
lock
jp
and
jnp
xchg
xor
es
xchg
jo
add
jno
scas
dec
lods
jne
adc
jle
mov
pop
bound
xor
jp
add
cmc
loope
mov
outsb
cmp
mov
fsub
imull
addr16
repz
cmpsl
add
cmpsl
iret
adc
sbb
pop
pop
out
dec
jb
and
and
or
sub
mov
outsb
adc
xchg
ret
sahf
stc
sbb
or
jae
inc
mov
je
xchg
lret
sub
push
sti
or
xchg
in
clc
mov
sub
cmpsl
leave
les
aad
cmp
pop
ret
pushf
pushf
pop
shl
jg
subb
imul
sub
orb
and
sub
sbb
aas
lock
ljmp
inc
dec
pop
and
sbb
add
loope
lcall
les
gs
or
dec
push
mov
dec
jnp
aas
mov
das
adc
or
insl
push
fnstcw
pop
fs
jae
aad
clc
push
pop
adc
jmp
mov
sub
cmp
jns
enter
cld
push
jg
add
sbbb
jl
bnd
jmp
test
or
mov
lcall
dec
out
popa
inc
adc
dec
arpl
scas
jb
lret
push
push
cs
rcrl
add
pushf
cmpsl
lods
add
imul
into
inc
sub
sub
popa
push
pop
jp
rcl
mov
cmp
push
aam
xchg
mov
xchg
stos
dec
add
adc
and
sub
call
and
cmp
cmp
push
cmpsl
jno
pop
adcb
xor
in
pop
lods
jb
pop
flds
cld
push
inc
add
xor
sub
xchg
fidivl
cld
adc
daa
decl
into
imul
rclb
push
adc
or
scas
outsb
cmpsl
jmp
repnz
icebp
push
pusha
ljmp
cli
and
adc
out
add
push
xchg
in
enter
push
xchg
ljmp
out
pop
jge
xor
sub
xor
pop
push
xor
cltd
adc
xor
inc
loope
fcmovnb
out
mov
jno
jg
fdivr
mov
fnstenv
mov
sbb
repz
adc
cmp
push
adc
stos
inc
aad
cmp
loope
xor
movsb
cmpsb
std
dec
adc
dec
dec
adc
ss
dec
xor
xchg
mov
jp
shr
xchg
lds
scas
jecxz
mov
negb
xchg
and
stc
out
in
idivb
jmp
sbb
test
xchg
xchg
pop
out
pop
xor
cwtl
in
outsb
insb
data16
jno
test
and
int
mov
mov
mov
scas
mov
fisttpl
mov
pop
cmp
mov
cmp
outsb
daa
je
and
dec
sti
push
in
imul
mov
loopne
cmp
push
out
jne
inc
mov
sub
mov
inc
mov
sbb
xchg
mov
ret
cltd
mov
adc
jne
lods
imul
adc
popf
int3
cmpsb
mov
push
ja
aas
mov
adc
pop
push
cmpsb
dec
movsb
or
lret
jg
adc
jo
faddl
int3
add
jecxz
or
js
xor
ror
xchg
mov
sbb
jae
or
into
mov
pop
popf
ret
mov
dec
xor
aas
cmc
icebp
inc
fcomps
add
je
mov
jmp
sub
jge
out
mov
mov
movsb
cmpsl
inc
es
call
sbb
pop
fstl
lds
repnz
outsl
sbb
mov
mov
cli
rol
sub
prefetchw
pop
adc
adc
ret
and
jl
and
xchg
scas
in
push
iret
movsl
int
mov
cmp
imul
xlat
movsl
pop
sbb
popf
cmp
fcoml
daa
sub
sbbl
push
insl
push
mov
and
aas
sub
mov
icebp
outsb
sbb
cs
jnp
stc
pop
aaa
popf
scas
pop
sbb
adc
outsl
stc
dec
fsts
pusha
mov
mov
out
inc
popa
pop
int3
gs
cli
cli
and
dec
xor
jns
mov
xor
dec
sub
inc
xlat
or
push
cltd
pop
cs
mul
cld
cmp
loopne
sbb
clc
jmp
sbb
xchg
test
xlat
push
test
cmp
rcl
mov
loop
mov
pop
nop
aas
mov
xchg
mov
mov
mov
pop
lock
inc
cmc
test
mov
cmpsl
xchg
lret
cmpsb
sti
xor
xchg
rolb
insb
ret
loopne
sub
es
pop
stos
test
gs
mov
mov
mov
cs
mov
repnz
fstps
fcom
xchg
sti
mov
dec
mov
stc
jge
fisubrs
mov
dec
cld
adc
addl
add
pop
sub
adc
jae
sbb
cmp
inc
pop
in
jne
popa
outsl
sub
adc
out
in
aas
pop
cli
dec
jl
insb
repnz
mov
repz
int
mov
dec
cmp
aaa
imul
add
pusha
cmpb
mov
cmpsl
mov
orb
sbb
stc
mov
pop
dec
jbe
push
adc
sub
loop
lret
stc
incb
enter
sub
fst
insb
loopne
push
test
lods
dec
jne
cmpb
sbb
test
testb
fs
stos
fisubrl
dec
insb
fcoms
insb
popf
or
sub
xchg
dec
iret
inc
js
inc
pop
pop
xchg
cmp
and
lahf
xchg
pusha
andb
rorl
cmc
xchg
rcl
add
loopne
mov
sub
inc
adc
imulb
xor
pop
ljmp
cmp
jp
or
pop
mov
sbb
movsb
into
cmpsb
loop
push
or
pop
inc
lret
mov
jecxz
or
dec
ljmp
les
das
mov
dec
movsl
and
sbb
cmp
lods
scas
xor
jle
mov
inc
insl
pop
and
push
mov
lods
clc
out
decb
sub
xor
int3
cmp
cmp
mov
sbb
fcomi
outsb
loopne
xchg
and
push
adc
lcall
leave
cmp
cs
flds
enter
sbb
mov
jle
or
and
or
or
loope
adc
adc
nop
pop
aam
inc
scas
stos
jnp
stos
movsw
pop
sub
aas
movsl
cmc
cltd
push
es
jo
das
fucomip
xchg
push
mov
mov
mov
sbb
ret
mov
inc
cmp
mov
mov
inc
mov
andl
jb
idivl
mov
loop
pop
adc
lea
xchg
int3
xchg
mov
cmpsb
stos
int3
aas
mov
loopne
or
fcompl
mov
into
shll
xchg
mov
xchg
or
jecxz
lahf
push
iret
ljmp
ror
outsl
lods
dec
and
lcall
adc
int3
negl
mov
and
movsb
out
shrb
jb
add
add
cld
stos
shll
sbb
sbb
push
out
xchg
aad
add
addl
sub
adc
mov
scas
and
dec
addl
sarb
popf
and
add
aaa
and
cmpsb
lock
sbb
jl
mov
add
lea
out
adc
mov
or
out
push
jbe
pop
enter
cmp
push
scas
stc
icebp
out
cwtl
lds
inc
popf
loope
pop
daa
test
push
rorb
subl
or
rorb
mov
add
mov
mov
fildl
int
cmpb
xor
std
xor
sbb
mov
stc
in
lods
fs
addr16
pop
adc
lock
rorb
das
push
shlb
loopne
popa
jle
sbb
pushf
and
fistpll
cmpsb
cli
es
xor
mov
pushf
fistps
icebp
pop
test
out
or
cli
fsubl
cmp
sub
jmp
imul
fwait
loope
insb
cltd
loope
cmp
mov
xchg
out
or
sub
cmp
pushf
xor
ljmp
mov
pushf
jge
push
adc
jg
sbb
cmp
loop
jmp
mull
mov
orl
mov
out
test
mov
shlb
add
jmp
cld
and
aam
stos
sbb
sbb
or
xchg
mov
test
addr16
movsl
or
cmpsl
test
xchg
xchg
cmc
push
adc
push
test
mov
xchg
fistps
es
or
xchg
insb
push
jne
xlat
jne
loopne
sbb
pop
xchg
jmp
cmp
insb
scas
repz
pop
stc
leave
scas
and
sub
jle
xor
lea
call
xchg
mov
cmpsb
lods
sbb
jns
not
stos
add
aaa
jnp
pushf
cmp
dec
jecxz
in
cmp
or
fnstcw
mov
sahf
out
cmp
jno
cmp
popf
or
push
popa
cli
mov
adc
sbb
sbb
mov
push
mov
sub
pushf
fstl
loop
sbb
ret
ret
pop
jno
loope
cld
jle
outsb
sti
adc
loopne
lock
jb
in
add
scas
int3
cltd
std
cmp
mov
sbb
mov
cmc
test
popf
scas
dec
or
add
jle
cmp
adc
ret
mov
mov
das
lds
jl
mov
fistl
inc
sub
fidivs
sarb
pop
fnstenv
stc
mov
dec
lret
addr16
add
not
loope
lds
jecxz
cld
mov
inc
pop
inc
ret
pop
js
testl
mov
inc
adc
cwtl
push
dec
pushf
imul
sarb
sahf
lock
add
pop
test
xor
inc
pop
int
cmp
out
mov
sub
fdivrs
jbe
rorl
mov
scas
cld
sbb
dec
xor
inc
or
out
roll
imull
or
stos
lcall
fistpl
cmp
push
mov
adc
das
cmp
mov
jo
bound
push
lret
mov
lcall
in
mov
add
test
sub
push
and
inc
xchg
sbb
xorl
xor
add
into
shrb
push
ret
or
mov
or
or
adc
cltd
xchg
dec
dec
adc
or
subl
sbb
addl
lds
inc
and
jmp
jbe
leave
fs
lea
sub
test
xchg
cmp
or
xor
sti
dec
mov
test
and
insb
mov
pop
push
jmp
pushf
xchg
inc
and
ljmp
les
lret
pop
jnp
mov
scas
addr16
dec
xchg
lahf
out
ret
cmc
fbld
pop
aaa
cltd
adcb
fldl
fiadds
xchg
dec
dec
pushl
sub
mov
push
jo
adc
ljmp
jae
dec
stos
and
ret
lret
push
dec
ja
push
inc
test
imul
scas
int3
fsub
andl
lods
mov
icebp
xor
repz
shr
or
dec
lods
inc
adc
inc
jmp
insl
bound
xor
add
xchg
sbb
loope
in
ret
xor
pop
fidivrl
js
fbstp
je
adc
popl
sub
push
mov
xchg
sbbb
pusha
add
xchg
inc
cmp
add
shlb
push
cmpsb
out
jbe
mul
mov
push
sarb
push
gs
sub
push
sbb
rcrl
cmpsl
jmp
filds
and
jnp
lcall
movb
loopne
imul
mov
bts
stos
push
inc
jns
pushf
stc
movsl
dec
push
mov
xor
jnp
mov
lods
hlt
mov
xchg
or
mov
ss
addl
mov
fcoms
fstpt
ret
or
push
out
lret
mulb
cmpl
cs
lcall
mov
push
repz
jb
cld
ljmp
scas
in
push
insb
push
sbb
inc
mov
insb
or
mov
push
pusha
jne
pop
jo
pop
fcomps
lods
out
fisttpll
cmpsb
push
outsb
nop
hlt
icebp
sub
test
outsl
jae
test
fldl
mov
andb
sbb
pop
mov
push
pop
scas
push
data16
repnz
xchg
inc
rcrb
sub
in
nop
add
jne
mov
or
test
popf
sbb
push
xchg
xchg
fists
loope
sbb
cs
out
xor
shll
bound
cli
int
mov
lds
out
stos
outsl
or
pop
add
lret
icebp
popf
or
test
or
sbb
fnsave
popa
lods
pop
int3
mov
pop
fpatan
pop
aaa
pop
incl
daa
or
leave
shrl
add
jmp
add
inc
ljmp
inc
shlb
or
push
push
mov
mov
ret
fisubrs
push
xchg
in
and
add
inc
mov
xor
push
les
pop
mov
testl
or
push
cli
icebp
push
fsts
dec
roll
insb
outsb
jae
xchg
or
or
xor
sbb
add
add
jns
xchg
jl
pushl
lods
mov
out
sub
lods
mov
cmp
mov
and
cmp
hlt
or
out
sub
or
inc
adc
inc
dec
adc
shrl
mov
cmp
lahf
lret
rcll
cmpsl
mov
movsb
lods
cmp
xchg
sub
dec
pop
rcr
push
pop
imulb
scas
mov
lods
dec
jp
cmpsb
mov
popa
adc
cs
lock
push
cli
cwtl
xchg
xor
iret
or
adc
sub
ss
lock
jbe
in
imul
pmulhw
xorb
in
fnstenv
mov
or
data16
and
stos
adc
mov
adc
imull
out
out
ljmp
and
inc
pop
sbb
sub
imul
repz
mov
or
fld
ss
lahf
out
or
repnz
or
or
dec
add
sbb
popa
mov
mov
or
xchg
out
inc
mov
rclb
or
testl
mov
xor
pop
inc
loope
xchg
pusha
ja
mov
pop
push
lock
stos
inc
cltd
rcl
sti
pop
xlat
cmpsl
dec
sbb
aaa
cmpsl
adc
aas
mov
mov
repz
loopne
cmp
sub
inc
xor
inc
and
push
lds
jns
in
les
andl
xchg
outsb
dec
call
jmp
pop
pop
mov
pop
dec
rcr
test
xchg
push
mov
in
xlat
or
mov
or
dec
xor
hlt
ds
fcmovnbe
dec
mov
lahf
clc
sub
icebp
mov
out
add
sahf
mov
loopne
cltd
sbb
jl
mov
mov
jb
cmp
nop
aam
lea
stos
ss
loopne
sub
pop
int3
xor
mov
jge
pop
add
xorl
test
in
xor
fnstcw
test
ja
cmp
mov
test
jbe,pt
jl
adcb
xchg
mov
cmpsb
jnp
in
imul
xchg
lahf
xor
imul
and
mov
in
sbb
mov
xchg
mov
movsb
xor
jo
fildll
xor
mov
sarb
aas
mov
icebp
test
data16
mov
inc
cltd
xchg
inc
aas
rorl
test
mov
nop
mulb
xchg
popa
lcall
cltd
popa
adc
xor
lods
or
sbb
adcb
loopne
add
push
mov
xor
outsb
adc
mov
mov
mov
and
jae
les
mov
nop
cwtl
mov
paddusw
or
sahf
pushf
dec
inc
inc
sub
mov
xchg
or
std
add
dec
mov
jnp
out
sub
insl
or
mov
rol
pop
pop
push
dec
scas
js
push
insb
xor
jmp
repnz
jmp
push
add
mov
xchg
or
jb
cmpsl
rcr
cmp
lea
loopne
push
insb
inc
mov
pop
sub
sub
out
and
daa
imul
inc
add
sub
inc
aad
xchg
fwait
cmp
sbb
sub
arpl
test
sbb
and
mov
and
mov
dec
int
inc
out
push
add
xorb
mov
or
push
jp
mov
inc
push
sub
push
dec
stc
adc
fstpl
push
rorl
in
jo
andb
mov
pop
out
sbb
cmp
mov
pop
sub
dec
call
lcall
inc
test
mov
bound
jle
mov
jo
xor
and
subb
ljmp
leave
ja
xchg
xchg
rorl
fcmovbe
test
in
push
mov
nop
mov
add
lahf
ljmp
imul
xor
test
ds
lods
push
pop
insb
mov
cli
test
jmp
fwait
nop
mov
mov
pop
decb
push
shll
ret
or
pop
push
pop
popa
pop
pop
lcall
daa
mov
fwait
idiv
sub
push
cmp
push
fs
lock
dec
dec
enter
jle
mov
sbb
cmc
lods
pop
mov
std
ljmp
dec
cmc
aam
outsb
pop
xchg
dec
mov
daa
fs
dec
mov
sbb
mov
adc
mov
inc
cmp
cli
or
cmc
vmaxps
pop
xor
xor
jge
lret
std
inc
ficoml
mov
push
mov
mov
js
add
xchg
sbb
push
out
cmp
dec
pop
std
bound
mov
aad
repnz
pop
push
fildll
icebp
mov
arpl
inc
adc
mov
mov
filds
mov
lea
jns
mov
fst
xor
jl
add
pop
imul
jle
mov
pop
mov
cmc
xchg
mov
cmc
int3
stc
cld
mov
aad
in
adc
insl
cmp
xlat
push
jnp
std
loope
and
xchg
ds
out
xchg
adcl
cltd
mov
dec
jl
dec
les
notl
in
jp
xor
cli
mov
jnp
push
mov
push
leave
push
push
popf
mov
int
fsub
xchg
xchg
add
push
lcall
pop
and
fsubrl
dec
push
mov
jmp
mov
adc
stos
scas
into
cmc
mov
popf
inc
loopne
ret
dec
addl
in
addr16
sbb
scas
out
sub
or
aad
movsl
ja
stos
scas
add
xor
int
popa
mov
int3
cmp
repz
fs
ficoml
push
idivl
cmpsb
divb
test
mov
test
pop
pushf
pop
add
mov
jo
inc
scas
cmp
pushf
popf
sahf
adc
jl
push
jae
mov
sarb
xchg
aam
push
and
inc
mov
lds
cli
nop
inc
fwait
inc
sbb
mov
shrb
nop
cmp
aad
mov
imul
hlt
dec
rcrl
sub
leave
dec
push
clc
stos
add
pop
popf
pop
fldcw
int3
popa
imul
inc
cmp
rorl
and
dec
mov
mulb
mov
data16
rcll
js
mov
mov
sub
inc
cltd
mov
xlat
int
std
adc
push
and
clc
ss
xor
mov
popf
das
bound
xchg
mov
stos
jmp
ret
or
ret
sbb
mov
xchg
xchg
pop
cmp
add
inc
xor
or
es
iret
pop
push
and
mov
jecxz
les
xchg
ficomps
cmp
sbb
scas
pop
cmp
add
loope
adc
inc
jle
popf
sub
lock
sub
aaa
ss
cmc
adc
ds
push
add
adc
jl
mov
jp
repnz
insb
imul
out
or
sti
dec
loopne
data16
nop
sarb
and
or
sub
push
and
insl
cmp
jl
and
sbbl
repnz
stos
nop
push
fwait
or
scas
push
or
into
pop
aas
or
imul
mov
pop
and
and
in
out
mov
int3
pop
pushl
push
dec
cs
xor
repnz
lock
xor
subl
int
cmp
xor
ret
push
dec
pop
rolb
int
jae
push
mov
lods
pop
gs
sub
stos
xor
in
xchg
lahf
sub
lahf
movsb
dec
xor
xchg
jne
cli
insl
pushf
jb
std
inc
dec
fucom
jne
ja
mov
js
movsl
mov
push
mov
adc
mov
test
jp
divl
test
out
pusha
mov
shll
pop
and
cwtl
and
sub
dec
and
fidivrs
adc
or
dec
data16
jb
lret
pop
push
jnp
out
bound
mov
lret
test
insb
or
xorl
and
xchg
mov
shrl
inc
shlb
clc
sub
sub
lds
push
gs
xor
pop
aas
out
loopne
dec
loopne
xchg
cmpsb
mov
xchg
cmp
inc
loopne
arpl
xor
imul
sahf
dec
push
outsl
fisubrl
pop
inc
inc
into
lock
dec
mov
and
pop
imul
xchg
fstpl
stos
push
add
stos
xor
ja
jae
sbb
into
fnstenv
xor
outsl
in
jne
jo
loop
leave
adc
push
push
repnz
andl
leave
popa
mov
loop
sub
pop
daa
mov
daa
test
xchg
push
outsl
mov
pop
xchg
mov
push
jb
dec
xchg
jmp
pop
imul
xor
je
sub
data16
or
and
outsl
xor
popa
cmpsl
jae
mov
jge
push
stos
xchg
in
pop
jecxz
js
jo
mov
addr16
jg
push
push
pop
and
repz
pop
mov
and
sbb
mov
push
xlat
sbb
lcall
rorl
mov
push
daa
add
pop
loope
arpl
sahf
pop
jno
stc
cmp
xor
movsl
pop
adc
rcll
mov
pop
lock
movl
mov
push
xchg
icebp
inc
sbb
clc
jle
push
cmp
cs
dec
cmc
mov
stc
mov
mov
xchg
mov
pop
enter
mov
bound
sbb
ja
and
mov
js
mov
das
hlt
leave
jg
add
cmpsb
dec
neg
push
and
sub
stos
loopne
ja
jbe
jmp
daa
cwtl
stos
cmp
test
test
pop
mov
xchg
cmp
jbe
in
sub
cltd
insl
xchg
adc
or
pop
rol
sbb
dec
shrl
adc
js
inc
xorb
add
aas
cltd
or
icebp
xorb
pop
ljmp
cld
stos
es
lock
pop
rcrb
cmpsl
sbb
pop
inc
aas
pop
pop
or
repnz
lret
mov
cwtl
mov
xchg
jae
push
sbb
lret
scas
push
fstpl
gs
cs
aad
stos
aam
js
stos
inc
xchg
bound
mov
loope
adc
xchg
ficompl
in
lds
xor
dec
orb
cwtl
sbb
or
arpl
pop
imul
loop
pop
ds
mov
out
jle
inc
dec
out
es
leave
mov
mov
or
pop
cmp
push
addr16
loop
and
sub
lret
pop
mov
imul
push
inc
loopne
sub
insl
xor
notb
xchg
call
stc
ret
icebp
push
or
aaa
fidivl
push
ret
repnz
nop
pop
inc
dec
rcll
shl
cmp
adc
mov
cmp
int
and
lahf
adc
and
testb
pop
sub
mov
rclb
xchg
call
and
push
jge
js
mov
pop
lret
aaa
sbb
in
inc
stos
leave
mov
rolb
mov
enter
sub
inc
lds
shlb
mov
mov
lods
push
xor
movsb
push
scas
push
pop
sbbb
add
jb
test
jmp
popa
rolb
imul
gs
scas
jae
cmp
ror
adc
out
outsb
dec
cmc
cmp
mov
push
outsb
sbb
push
subb
icebp
dec
push
daa
dec
sub
dec
enter
sbb
sub
mov
enter
pop
mov
fs
push
rclb
jne
inc
add
ljmp
pop
pop
sub
inc
push
rcll
es
lcall
or
es
or
bound
dec
mov
lahf
test
lock
mov
testl
loopne
and
inc
std
into
mov
nop
insb
adc
scas
jae
aas
out
adc
enter
push
ret
idivb
out
aad
ficoms
push
push
clc
or
out
fwait
xchg
into
scas
fidivrs
jg
loop
inc
repz
push
ljmp
xchg
test
pop
hlt
mov
inc
scas
shlb
mov
mov
adc
jmp
jl
lret
cmp
pop
mov
data16
inc
lahf
ficoms
fimull
sbb
dec
scas
shrb
lods
test
xchg
xchg
popa
popa
push
inc
test
divb
imul
movsl
mov
push
pushf
and
and
idivb
dec
adc
scas
jmp
xchg
pop
pop
test
js
pop
testb
add
test
nop
mov
jl
dec
out
sbb
js
js
loopne
leave
or
jbe
test
cmpsl
cli
xchg
adc
push
lods
jle
insb
in
sbb
jno
out
sti
xor
mov
push
mov
shl
add
mov
ljmp
adc
cmp
adcb
inc
cmp
in
inc
stc
and
bound
or
cmp
test
jp
lret
cld
jle
xor
jnp
mov
orb
shll
test
dec
or
pop
sbb
test
pop
mov
out
out
rcrl
fsubrs
jg
out
inc
js
mov
jb
mov
cmc
inc
aaa
jbe
rolb
lret
outsl
rcrb
jnp
into
add
push
scas
inc
sbb
sbb
insl
mov
and
lods
and
imul
js
jo
and
out
sbb
mov
clc
add
mov
lret
loop
roll
repnz
inc
ds
mov
jo
testl
mov
ret
push
fsubl
add
jg
fcos
test
cli
push
inc
sub
sbb
cmpsl
adc
dec
js
das
push
loope
ret
lahf
cmpsb
cmp
lock
mov
xchg
lods
mov
iret
sbb
lret
push
xchg
or
jmp
in
mov
jmp
test
push
mov
pop
add
nop
mov
push
loope
mov
lahf
jnp
cmp
mov
push
pop
xchg
mov
sub
je
inc
sti
mov
js
jle
sub
aad
icebp
push
mov
call
and
and
add
inc
pop
aam
inc
mov
fdivr
decl
or
stos
icebp
cmp
int3
in
push
xchg
adc
xchg
push
mov
movsl
movsb
or
mov
loopne
jl
sub
scas
sahf
or
js
aam
xor
mov
mov
in
mov
push
stc
or
inc
adc
jl
test
call
cmp
mov
mov
in
imulb
add
sbb
sbb
sbb
and
sti
jge
fbld
mov
out
xchg
pop
sbb
out
pop
jp
sti
jp
cltd
addr16
mov
hlt
cmpsl
jae
mov
shr
lock
or
xchg
push
xchg
jp
jbe
out
lahf
in
pop
fcmovnb
xchg
lcall
cli
inc
jl
xchg
jl
mov
and
mov
pop
movsb
clc
rorl
push
rep
and
ret
mov
loopne
lea
cmc
xchg
mov
sbb
add
sbb
cltd
xchg
xchg
lret
mov
fildl
push
popa
xor
mov
outsl
jmp
inc
js
movsb
cmp
mov
sbb
ret
push
lret
or
enter
add
ret
fsts
jbe
dec
jg
add
je
mov
mov
ret
into
sti
daa
inc
repz
push
xor
mov
pop
adc
inc
dec
jg
mov
pop
dec
inc
xor
push
movsb
in
sahf
add
ret
jae
cs
xchg
lods
mov
xchg
fnstenv
bound
sub
mov
sbb
add
adc
das
aam
sbbl
xor
rcrl
xchg
xchg
cli
out
je
and
inc
aas
lods
sub
sti
jle
repz
mov
insl
loop
sub
shll
in
push
das
sbb
in
inc
cmp
arpl
sub
inc
std
in
inc
stos
rorl
insl
imul
inc
xor
cmp
rorb
sub
mov
jecxz
pop
pusha
popa
cld
stc
ret
mov
and
push
push
stos
cld
nop
add
stc
mov
outsl
loope
jne
xchg
adc
js
push
inc
jae
gs
in
cmpsl
pop
inc
dec
adcb
shll
outsl
mov
sbb
mov
aaa
out
fisubrs
sub
ss
shlb
or
cmp
ss
mov
lret
fldpi
sub
jnp
adc
int3
popa
fcoml
lods
and
jl
pop
es
push
call
scas
xchg
mov
jp
insb
cmpsl
xorl
into
mov
out
mov
push
shlb
or
inc
outsb
jb
mov
adc
scas
repnz
or
mov
or
xchg
data16
or
shrb
lods
mov
das
inc
cmp
dec
dec
loop
mov
push
inc
xchg
loope
jl
notb
cmp
dec
inc
push
dec
int
shlb
cs
rcll
dec
and
loope
aas
ds
mov
je
push
dec
popa
sbb
shlb
fs
stos
dec
aam
sbb
inc
lock
hlt
fadds
imul
jno
fdivrl
sub
xchg
fistpl
stos
and
stc
cmp
mov
mov
or
inc
cmp
mov
icebp
xchg
in
ficoml
adc
jno
pop
iret
fisttps
iret
jge
mov
inc
xor
loopne
lcall
sbbl
adc
cmpsb
inc
cmp
pop
sbb
shll
in
dec
ret
rorb
cs
or
dec
jp
fiadds
aas
or
orl
testb
iret
out
jecxz
outsb
pop
push
fistl
in
mov
pop
xchg
insb
xchg
inc
pop
adc
stos
mov
fmull
lock
popf
jno
jl
pcmpgtd
popa
insb
mov
and
mov
call
xlat
xlat
adc
rol
cwtl
jae
shll
fcomp
push
in
cmpsb
pop
cmp
mov
adc
adc
sbb
dec
mov
and
push
aaa
and
stos
cmp
filds
lods
scas
sbb
jl
lds
add
fcmovnb
into
data16
or
mov
mov
push
cli
orb
cmp
loope
movsb
push
sbb
jmp
outsl
pushf
gs
les
jbe
jmp
mov
push
insb
decb
lahf
fdivrl
lock
js
sbb
inc
adc
fsubl
jle
pop
cwtl
cmc
clc
jae
xor
jl
mull
shrl
int3
and
xchg
lahf
nop
fmul
ret
and
xor
and
int3
xchg
inc
xor
insb
jnp
movsb
std
xchg
je
jo
mov
pop
adc
sbb
adc
jb
jecxz
inc
into
fwait
and
popf
pop
movb
stos
mov
out
subl
mov
fdivr
cs
imul
adc
rorb
mov
mov
and
push
mov
dec
outsl
clc
inc
aas
clc
inc
jae
add
or
je
cli
push
sbb
movsl
add
dec
cmp
out
xchg
daa
dec
and
add
or
push
sbb
sarl
xchg
mov
jbe
dec
xchg
outsb
mov
mov
test
adc
ror
inc
dec
enter
aaa
imul
hlt
pop
or
in
pop
popa
mov
and
popf
cwtl
jns
ja
es
dec
or
push
aaa
lods
mov
vandpd
je
mov
cmp
or
fs
push
daa
add
jmp
iret
or
outsb
outsb
sub
sub
loop
insb
mov
aaa
mov
jae
and
ret
cld
adc
push
dec
jge
and
lock
mov
jge
outsb
lret
jb
ret
cmpsb
xchg
and
loop
test
hlt
pop
push
dec
cs
inc
cmp
xchg
jecxz
adc
ret
jg
mov
pusha
pop
cmc
cmp
mov
or
mov
dec
jp
dec
ds
icebp
jno
xor
xlat
cmp
push
lcall
push
push
daa
push
jmp
js
cmp
cmp
xor
mov
sbb
hlt
mov
push
out
jmp
stos
jmp
arpl
xlat
shll
adc
push
mov
rclb
jo
jo
inc
jnp
xor
sub
jae
xlat
into
adc
aaa
daa
hlt
xabort
aad
jns
jo
daa
pushf
js
nop
xlat
sub
and
loop
or
sar
imul
or
mov
cld
sbb
popa
push
jle
inc
rcl
cltd
loope
nop
movsl
sub
cmp
or
jmp
sbb
les
int
push
cmc
mov
int3
jbe
les
cmc
ds
lcall
outsb
inc
jge
push
fs
ds
fnstcw
cmpsl
inc
cld
mov
push
or
sub
mov
jle
test
mov
and
sub
test
inc
lret
xchg
add
pushf
and
mov
push
test
inc
pop
mov
call
jae
jecxz
sbb
jl
les
dec
mov
push
sbb
jmp
stos
andb
test
roll
fnstcw
and
inc
adc
xchg
push
mov
ds
sti
push
jle
pop
ret
or
mov
jle
mov
adc
xchg
test
in
cmp
test
pop
ljmp
enter
mov
pushw
xchg
mov
mov
loopne
xor
out
adcb
mov
cmpsb
out
jmp
loopne
sarl
push
and
mov
das
fcom
idivb
pop
fldcw
sub
das
cli
inc
into
jl
or
lods
ss
call
and
shrb
sbb
fidivs
in
lcall
lods
push
adc
xor
push
and
cmp
rclb
in
pop
cld
or
add
mov
aam
mov
sbb
cmp
lcall
data16
pop
inc
jle
out
dec
rcr
jbe
es
mov
mov
insl
xchg
pop
lock
insl
daa
nop
mov
rcrl
xor
xor
and
sti
mov
.byte
sti
or
loopne
or
repnz
or
sti
or
adc
or
push
cld
or
xor
or
dec
cld
or
cld
or
jbe
or
xchg
or
pushf
cld
or
push
std
or
inc
std
or
xor
or
cli
cld
or
push
std
or
sbb
or
fs
or
add
add
cld
or
fdivr
or
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
std
dec
add
add
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
adc
add
add
incl
add
add
adc
add
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
sbb
add
add
incl
add
add
sbb
add
add
incl
add
add
sbb
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
decl
arpl
add
add
push
bound
bound
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
jno
add
add
add
outsl
dec
add
add
outsl
dec
add
add
add
incl
add
add
add
add
dec
add
add
add
add
add
jnp
add
add
add
jmp
orb
orl
sbb
dec
add
pushl
dec
add
dec
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
sti
fwait
dec
add
fwait
dec
add
add
add
jmp
lahf
dec
add
lahf
dec
add
add
add
ljmp
dec
add
mov
jmp
mov
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
imul
bound
gs
js
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
add
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
call
mov
add
ljmp
mov
add
decl
dec
add
dec
add
lcall
dec
add
dec
add
incl
mov
add
call
mov
add
incl
add
add
mov
add
add
add
incl
add
add
add
add
incl
add
add
mov
add
add
add
incl
add
add
add
add
incl
add
add
mov
add
incl
add
add
mov
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
jmp
rorb
rorb
incl
add
add
dec
add
inc
rorl
rorl
add
add
incl
add
add
add
add
call
fisttpl
incl
add
dec
add
mov
fimuls
push
add
add
add
add
lock
mov
add
add
add
add
cld
or
push
lock
sti
or
loopne
or
repnz
or
sti
or
adc
or
push
cld
or
xor
or
dec
cld
or
cld
or
jbe
or
xchg
or
pushf
cld
or
push
std
or
inc
std
or
xor
or
cli
cld
or
push
std
or
sbb
or
fs
or
add
add
cld
or
fdivr
or
add
add
sbb
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
push
jb
arpl
fs
jae
add
push
add
popa
insb
inc
jb
add
jae
inc
js
gs
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
popl
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
lods
add
je
push
popa
je
dec
popa
insl
gs
add
add
jae
insl
gs
push
add
popf
add
imul
jae
dec
gs
outsl
jb
add
nop
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
mov
inc
gs
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
push
push
inc
push
xor
cs
insb
add
lret
je
push
outsb
ja
outsb
add
gs
push
dec
jne
je
inc
jns
add
dec
jne
je
inc
jns
gs
outsl
push
imul
cmp
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
jne
xor
dec
push
sbb
sahf
pop
fisubl
xchg
lret
cwtl
lret
icebp
js
mov
cs
mov
hlt
mov
add
xchg
call
push
stos
aam
sbb
or
inc
push
cli
jbe
xorb
aad
ret
mov
push
sarl
xchg
push
push
jp
jae
std
int
adc
jno
data16
sub
dec
xor
and
xorl
mov
aaa
insb
adc
stc
scas
aas
cmp
jbe
sbbb
jno
fildll
mov
dec
out
aam
fstps
add
lret
fistps
xchg
add
mov
repnz
outsl
test
adc
push
imul
imul
repnz
sub
sti
mov
fidivl
pop
cmpsl
test
cmp
jl
je
mov
shl
imul
popa
sub
adc
neg
imull
push
lock
xor
ds
fs
jb
lret
inc
jmp
clc
add
test
fld
mov
mov
xor
adc
cli
test
pop
pop
cmp
and
xor
out
aad
xchg
shrb
xchg
iret
gs
ljmp
enter
mov
sahf
es
sbb
rcrl
dec
mov
in
xorl
xor
mov
mov
xor
int3
test
call
or
lds
aaa
nop
es
sbb
mov
lds
push
jg
hlt
sbb
xchg
mov
cld
test
add
popf
mov
lea
add
ss
lret
out
sar
sub
lds
push
push
pushf
and
xchg
cld
lds
nop
fcmovnb
mov
ss
in
scas
dec
sub
dec
sahf
fsub
sbb
mov
push
lods
dec
cwtl
lahf
repnz
iret
push
xchg
hlt
repnz
or
xlat
arpl
das
push
xchg
insl
fwait
test
dec
loopne
xchg
xchg
or
aad
dec
test
sub
in
mov
mov
jmp
mov
scas
movsl
mov
add
xchg
popa
mull
jge
jo
or
cmpsb
test
adc
mov
scas
in
xor
gs
inc
es
or
push
xchg
insb
test
mov
gs
cmp
movsb
jbe
xchg
mov
adc
cmp
nop
lret
mov
cmp
sub
rcrl
outsl
sarl
sbb
sbb
in
inc
mov
add
out
lcall
sbb
lock
dec
push
mov
movsl
lcall
cmpsb
xchg
std
fsub
mov
adc
or
or
mov
pop
adc
test
incl
repz
ret
cltd
or
imul
lahf
and
pop
xchg
aad
and
aam
jg
fstl
hlt
push
ret
pop
fildl
xor
and
out
mov
test
inc
adc
mov
pushf
or
negl
incl
clc
cmp
cmp
sub
sbb
xor
cmp
push
std
adc
pop
push
ss
push
mov
andb
xchg
push
inc
cli
inc
jge
loopne
and
cmp
mov
jecxz
and
inc
mov
xchg
lcall
xchg
xor
pop
pop
mov
jae
inc
int3
repnz
push
or
cmp
sbb
dec
pop
adc
int3
sbb
adc
cld
lods
xlat
popf
mov
cld
ficoml
and
pop
mov
push
add
dec
in
clc
cmp
adc
inc
popa
add
mov
andb
pop
and
mov
ljmp
mov
xor
nop
inc
jb
dec
mov
mov
mov
aad
xor
xchg
jae
push
mov
jae
lcall
or
daa
mov
jnp
adc
inc
fcoms
and
cmp
imul
jo
cs
lods
or
rorb
sbb
mov
xchg
jl
cmpsl
jl
jmp
mov
je
stc
push
insl
testl
push
cli
xor
ds
pop
xchg
lahf
pop
sbb
cltd
dec
adc
je
lods
int3
cmpsl
mov
sbb
popa
cmp
stc
insb
je
jne
andb
mov
or
mov
xorl
sbb
inc
movsb
es
xchg
in
mov
and
add
outsl
inc
jae
mov
dec
ret
fwait
in
outsl
or
fisubs
mov
pop
inc
jno
inc
mov
xor
fs
fdivs
jne
ds
aaa
fldcw
cmp
jb
movsb
xchg
mov
cmp
mov
daa
adcb
xchg
mov
std
push
rol
lock
push
push
jnp
and
or
dec
or
out
mov
ss
fcmovu
mov
dec
mov
imul
jb
lods
rolb
mov
jg
fs
dec
adc
mov
sub
sbb
fadds
lret
scas
sahf
dec
aas
sbb
das
fisubrl
inc
inc
jne
notl
mov
test
sub
cmc
fldt
and
pushf
lea
sbb
jne
mov
xchg
cwtl
dec
test
cmp
imul
cwtl
sub
jb
stos
je
add
gs
in
sarb
xchg
mov
mov
faddl
sbb
mov
ljmp
aaa
mov
pushf
mov
fldln2
ja,pt
push
loopne
icebp
or
or
lock
addr16
or
les
sbb
shrb
pop
enter
push
pusha
jg
xchg
add
lods
fadds
or
lods
jecxz
repnz
pop
outsb
or
cmp
push
xchg
sbb
mov
rcrl
jns
lea
outsl
es
fidivs
bound
dec
pop
test
sub
dec
mov
aam
jle
and
xchg
and
dec
mov
xchg
fbstp
add
mov
add
aad
mov
mov
adc
aas
pop
into
nop
mov
cmpsl
push
popa
lods
inc
ljmp
sub
jo
enter
repnz
pop
add
mov
test
push
inc
sahf
lods
adcl
push
inc
mov
push
mov
test
dec
icebp
pop
push
es
in
xor
repz
sahf
je
in
test
xor
ret
mov
pushf
mov
jecxz
mov
mov
nop
cmp
enter
fnstcw
push
jo
pop
add
outsb
jp
mov
out
sahf
or
int
jmp
add
int3
fidivs
pop
ljmp
sahf
jmp
mov
fdivl
sub
or
rolb
out
adc
pop
cli
jae
mov
clc
jb
in
mov
stos
aaa
mov
xor
push
jmp
scas
sbb
sbb
lret
or
push
imul
mov
push
xchg
jg
cs
jo
sub
mov
into
in
int
fistl
and
or
in
into
and
pop
dec
push
cmp
loope
mov
xor
add
and
stos
dec
push
outsb
pop
mov
inc
fcompl
cs
adc
fcmovnu
push
scas
fdivrs
pop
push
jg
loope
icebp
cmp
aas
call
mov
mov
inc
jge
cli
sbb
mov
insb
mov
out
enter
and
cmp
and
dec
xchg
iret
ljmp
lock
inc
cmpsl
pop
aas
addb
incb
clc
not
inc
addb
adc
test
mov
aas
imul
or
inc
lret
test
add
add
cmpsl
fs
fdivrl
pop
xor
pop
loop
xchg
mov
or
insb
or
mov
jns
push
xor
fadds
xchg
mov
shlb
mov
cmpsb
int
xor
sbb
adc
movl
mov
lods
enter
data16
jle
imul
or
push
dec
xchg
repnz
dec
push
outsl
in
xlat
xor
and
xchg
jbe
sahf
ja
aad
jmp
js
loopne
xchg
movsl
shrl
pop
mov
nop
test
mov
pop
push
add
xor
adc
push
rorb
jge
mov
mov
imul
adc
in
lret
aaa
adc
mov
mov
push
in
bound
push
pop
hlt
add
add
movsl
push
inc
lock
xchg
xchg
test
scas
inc
cmp
addb
icebp
mov
out
addr16
dec
fcompl
pop
rcrl
add
or
mov
or
aad
mov
push
mov
cmpsb
fiaddl
push
mov
xchg
daa
add
mov
shrl
xor
mov
push
xchg
mov
pop
add
xchg
lock
pop
in
scas
out
mov
repnz
cmp
sub
jg
sbbb
popf
fimuls
shrb
dec
cmp
std
loope
jne
lahf
fs
xorb
cwtl
jle
push
and
daa
jae
and
or
mov
push
push
ret
mov
xchg
pop
addb
ret
test
sbb
mov
xlat
mov
fistpll
inc
push
pop
pop
inc
xor
rclb
inc
push
pop
dec
shll
mov
jnp
jp
or
das
sub
mov
mov
jno
ret
cwtl
inc
ja
xchg
fistps
and
mov
add
test
lret
das
mov
and
xor
testl
aam
cwtl
and
popa
loope
xchg
fcmovbe
mov
ret
sbb
xchg
ljmp
rclb
cmp
call
mov
xlat
xchg
dec
xchg
push
sub
push
test
push
mov
out
xchg
add
fwait
dec
add
xorb
fists
bound
imul
xchg
mov
or
push
xor
in
fs
push
add
jl
push
je
test
and
sti
std
ds
int
mov
mov
nop
add
scas
inc
mov
outsb
stos
lock
xor
pop
sti
leave
xor
test
mov
out
scas
xchg
push
shlb
and
pusha
daa
and
cwtl
aas
push
aaa
push
sub
xor
add
sub
pop
call
pop
jno
clc
jbe
mov
and
sti
lods
xor
icebp
push
jp
test
and
add
imul
mov
insl
outsb
mov
pop
ret
push
mov
push
pusha
arpl
out
fs
in
iret
inc
adc
cmp
nop
jns
jnp
push
mov
jge
add
cmpsb
leave
das
mov
popa
sub
out
test
je
add
cld
sar
add
inc
xor
adc
leave
ljmp
stos
cmp
shlb
imul
in
sub
push
daa
jbe
clc
nop
in
adc
aam
or
scas
les
jo
fildll
xlat
sub
push
cld
fidivrs
cltd
into
cmp
add
ret
stos
cmp
mov
jnp
movsl
pop
push
inc
dec
mov
faddl
jbe
sbb
cld
test
pop
scas
dec
cmp
loope
test
xchg
int3
je
lea
sbb
add
test
and
lret
jg
mov
lret
cwtl
das
sbb
add
sbb
repnz
and
inc
and
sbb
xchg
pop
inc
shlb
sub
js
lret
mov
insb
jbe,pt
scas
jae
mov
mov
jb
mov
aad
pop
jge
out
mov
inc
pop
pop
cmp
jle
cs
sti
out
int3
in
lock
sub
out
xchg
mov
mov
sbbl
adc
xchg
fdivrl
jbe
adc
adc
sub
in
adc
ss
sbb
mov
adc
cmp
pop
and
ljmp
insl
jmp
bound
sarb
loop
mov
xchg
and
sbb
pop
shr
mov
pop
ljmp
stos
or
push
push
add
fcmovne
adc
int3
inc
jmp
out
les
lock
ffreep
dec
je
lret
leave
add
ss
stc
inc
mov
popa
insb
bound
jl
loopne
xlat
mov
mov
hlt
dec
test
and
and
and
adc
adc
sub
negb
add
adc
mov
into
test
movsb
movsb
mov
adc
add
and
clc
inc
loope
fldcw
xchg
pop
pop
inc
cmp
or
hlt
xchg
mov
ret
mov
stos
sub
mov
popa
scas
fs
loope
mov
mov
imul
and
andl
out
out
xchg
fidivs
test
outsb
call
xor
fadds
ret
or
jb
lods
mov
push
mov
sub
push
decb
fldl
mov
loop
push
data16
xor
inc
cmpsb
das
popf
add
jae
test
jno
es
into
jmp
jae
ljmp
xor
mov
cli
ljmp
fiaddl
daa
cld
dec
negb
xchg
fimull
stos
scas
fs
test
jb
mov
fildll
xor
inc
lods
rcl
jae
lods
push
inc
add
ss
mov
repz
adc
test
pop
lcall
imul
cmp
push
imul
cwtl
out
repnz
sub
aam
test
lds
or
jmp
dec
int
pop
negb
lret
cltd
pop
push
in
mov
cli
pop
push
out
mov
xchg
mov
stc
push
mov
int3
sbb
mov
xchg
mov
pop
or
inc
out
stos
mov
sbb
jo
cltd
or
jecxz
shr
sbb
invd
jb
and
cmp
hlt
mov
das
fisubl
and
fbld
adc
int
in
rolb
mov
enter
inc
sub
das
into
add
loope
andl
jge
inc
jmp
sbb
gs
lahf
jnp
sbb
push
pop
rorl
xor
add
aas
fisttpll
cwtl
fdivs
and
dec
mov
cmp
and
aam
into
pop
jno
dec
pop
xchg
popf
mov
dec
test
rorb
mov
call
imul
cmp
mov
enter
jb
xor
mov
repz
gs
hlt
cli
inc
lds
mov
pop
das
mov
and
cwtl
pop
add
cmp
cmp
imul
je
mov
xchg
push
sbb
mov
leave
mov
mov
dec
mov
lret
repz
jmp
orl
cmp
xor
pop
aam
enter
int3
and
cmpsl
repnz
mov
es
inc
xor
inc
movsb
cmp
out
test
cmpsl
cwtl
vrsqrtss
pop
mov
mov
mov
outsl
out
sbb
sub
adc
push
push
das
jns
out
insb
subb
xor
lret
fisubs
cmp
sbbb
fnstenv
aad
add
das
mov
in
dec
aas
xchg
das
aam
jp
insl
jb
xor
mov
lahf
pop
mov
push
dec
inc
in
leave
adc
inc
pushf
ret
ljmp
jns
into
add
movsl
mov
in
leave
cmp
ljmp
nop
es
test
mov
and
mov
out
jbe
imull
mov
cmp
push
inc
xchg
add
mov
push
mov
pusha
shlb
aas
ficomps
rorb
insb
pop
sub
lahf
mov
cmp
push
loope
xor
jecxz
adc
loopne
add
adc
xlat
xchg
nop
pop
sahf
cltd
push
jne
popf
aam
cmpsl
sarb
pop
jmp
sti
dec
rcrb
pop
fsts
push
mov
sbb
adc
mov
xchg
leave
sbbb
xor
insl
in
push
inc
pop
lds
push
in
jne
sbb
imul
dec
pop
in
popf
ftst
fcmovnb
pushf
add
das
add
sahf
nop
dec
repnz
ja
lds
xor
inc
nop
sbb
xor
out
xchg
jl
xchg
xchg
inc
jne
cmp
ds
aad
jl
inc
jle
add
dec
int
mov
rolb
arpl
aas
mov
icebp
push
xchg
in
add
inc
add
cmpsb
xchg
or
ss
cmpsb
loopne
mov
aam
dec
push
inc
jp
push
sahf
or
cmpsb
lret
mov
inc
mov
push
inc
or
popf
je
sbb
jb
pop
insl
aad
jp
push
pushl
ret
dec
adc
fstpt
in
mulb
push
pop
rclb
mov
and
leave
insb
std
ja
xchg
adc
lods
sub
aad
lock
fnstenv
adc
sbb
xchg
int3
ss
push
stos
pop
inc
adc
fsubrl
outsl
movsl
sti
jg
or
out
aas
pop
jnp
out
jbe
inc
and
cwtl
xchg
mov
xchg
fadd
pop
mov
mov
mulb
notl
movsl
pushf
not
add
dec
ret
andb
mov
and
push
xor
shll
testl
mov
cmp
and
push
xor
fcompl
add
adc
leavew
pop
testl
xchg
mov
add
push
inc
pop
sub
mov
lcall
fldenv
mov
outsb
sub
fsubr
loopne
scas
inc
xlat
divl
dec
mov
jg
lret
push
popa
add
jae
fistl
inc
fsubrs
and
adc
fildll
enter
aam
call
sbb
cld
aas
je
sub
mov
jmp
je
adcb
mov
xchg
ss
int3
lret
sbb
jo
xchg
lret
inc
pop
shlb
push
sub
dec
cmp
and
in
cmp
adc
cmpsl
adcb
add
jg
movsb
sbb
add
jle
enter
dec
repnz
int
jl
out
lea
mov
jns
sbb
inc
mov
cmc
outsb
jecxz
loopne
cmp
pop
out
sti
jecxz
int
rcrb
and
std
popa
xchg
lods
mov
push
sbb
jnp
xlat
xor
cmp
notb
insb
out
xchg
or
lret
leave
adc
leave
sahf
scas
fsubrs
std
mov
add
mov
rcrl
lock
test
je
dec
jbe
pop
data16
lahf
xchg
push
mov
jo
std
cmp
fcoml
loope
pop
and
sbb
cmp
inc
mov
cmp
add
inc
les
dec
cmp
push
mov
gs
test
xchg
in
int3
add
xchg
repnz
gs
sahf
xchg
nop
fisubrl
jg
or
pop
push
and
mov
sbb
lea
rclb
lahf
adc
push
adc
lahf
lock
in
adc
pop
sbb
in
adc
push
mov
adc
sub
jno
push
rorb
jl
adc
aas
push
fcmovne
test
jae
incb
push
sub
enter
stc
dec
fwait
push
mov
lfs
gs
cwtl
pusha
jl
outsl
push
dec
sbbl
dec
pop
xlat
imulb
aad
and
pushf
stos
std
in
pop
jo
jbe
inc
fnstcw
xor
idivl
pop
jmp
fdiv
in
repnz
jp
inc
stc
test
sbb
nop
stos
sbb
fpatan
jbe
mov
roll
mov
scas
xor
ret
sub
shll
or
inc
mov
lcall
mov
push
dec
ds
jp
test
mov
xchg
fidivs
mov
ds
int3
mov
scas
cmpsl
out
adc
fs
xor
icebp
jmp
jg
pop
jp
adc
adc
mov
shrb
sbb
dec
jg
jmp
adc
add
xchg
inc
xchg
inc
stos
jg
cmpsb
inc
sub
aad
add
rcll
sub
and
jmp
add
mov
scas
pop
pushf
mov
in
orl
jae
and
lcall
pop
nop
jmp
cs
cmp
inc
push
in
mov
push
scas
dec
test
sahf
mov
fisttps
mov
push
mov
mov
loope
lods
orl
cs
cs
add
rcrl
sbb
cwtl
cltd
movsb
mov
mov
out
js
test
dec
add
jecxz
sub
repz
mov
out
pop
adc
push
sbb
inc
push
pusha
mov
mov
pop
sti
lahf
inc
jle
add
jno
ss
fidivl
int3
dec
sbb
scas
mov
les
into
dec
rcr
cmp
adc
mov
out
dec
pop
mov
in
fldt
test
fwait
popa
add
add
or
popf
jmp
repnz
dec
push
xor
aaa
imul
push
push
outsb
dec
add
cmpsl
lea
pop
cmp
or
clc
inc
push
xchg
ret
sub
out
dec
loopne
lea
xchg
pusha
jno
in
mov
inc
outsl
ret
cmp
xchg
jo
in
pop
xor
xchg
jb
in
sbb
jb
dec
jg
sbb
cltd
cs
stos
loopne
push
push
outsl
icebp
lret
mov
pusha
mov
and
hlt
imul
dec
imul
inc
dec
xchg
mov
daa
pusha
or
insb
xor
hlt
roll
ror
loop
shll
les
cld
cltd
gs
adc
mov
mov
fisubrs
fwait
pop
pop
data16
xor
es
js
aad
inc
or
sti
shrl
push
movsl
xor
push
jle
pop
mov
push
aam
in
cltd
sbb
inc
jb
jae
lds
push
je
mov
stos
dec
or
sbb
sub
ds
cli
mov
sbb
adc
ss
adc
mov
sbb
mov
jbe
jnp
ja
add
jg
inc
leave
imulb
clc
mov
scas
adc
fimuls
inc
xchg
sbb
xchg
sbb
in
xchg
or
xor
and
dec
xchg
pop
pop
rcrb
sar
jbe,pn
mov
adc
xchg
mov
adc
lods
testb
icebp
pop
orb
add
lods
mov
pop
in
outsb
icebp
xchg
out
sbb
push
pop
xchg
xor
test
mov
cmpsb
jns,pn
inc
das
jmp
and
push
adc
or
and
in
mov
std
pop
jp
mov
jo
fdivrs
xchg
sub
and
js
test
scas
loop
dec
cmp
imul
lahf
gs
lods
test
fsubr
lcall
daa
mov
adc
inc
mov
nop
mov
mov
jge
pop
lea
xchg
hlt
mov
jno
insl
ds
cmp
rcrl
ret
dec
jbe
add
hlt
ret
dec
cmc
add
adc
shrb
xchg
ja
push
mov
dec
push
int3
outsb
jnp
sub
mov
enter
and
mov
jbe
in
dec
mov
das
inc
mov
xchg
int3
add
ret
mov
push
jae
push
lods
dec
jo
int
xchg
das
add
loop
aas
ss
icebp
nop
inc
in
fdivs
fdivrp
shrb
mov
mov
sbb
cwtl
mov
in
pop
ret
jge
or
inc
cld
mov
jecxz
xchg
xchg
xchg
fs
xor
adc
inc
leave
popa
in
icebp
or
sahf
xchg
test
jmp
or
xor
inc
ficoml
fisubrs
gs
pop
pop
ret
imul
xchg
dec
pop
jnp
mov
cmpsl
mov
jne
xchg
fcomps
mov
cwtl
movsb
xlat
dec
negl
repz
sbb
cltd
sbb
pop
pop
jg
or
test
shlb
dec
cmpsl
or
lret
call
xchg
imul
addr16
movsb
popa
test
mov
repnz
ljmp
fmull
mov
sub
jmp
clc
jmp
movsl
sub
cli
fcompl
or
mov
xchg
in
scas
fidivrl
js
fistl
je
iret
sub
in
xchg
lods
sbbl
mov
lds
pop
sub
fisubs
push
loopne
xchg
sub
mov
push
add
test
nop
pop
inc
push
shll
fsubl
movsb
sahf
push
test
cmpb
pop
.byte
