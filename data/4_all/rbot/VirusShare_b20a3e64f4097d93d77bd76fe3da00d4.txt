pop
andl
mov
adc
push
mov
adcl
push
add
shlb
dec
maskmovq
hlt
cmp
mov
sbb
inc
mov
loope
lods
pop
push
ss
adc
or
push
pop
xchg
stc
and
pop
adc
adc
mov
pusha
xor
jno
adc
adc
xchg
jno
push
popfw
add
test
mov
push
cmp
adc
adc
mov
addr16
mov
sbb
hlt
pop
ja
cmc
and
scas
mov
fstpl
fs
mov
sbbb
sbb
cmp
fs
data16
imul
in
sub
mov
push
in
aas
in
push
lods
in
cmp
or
adc
xor
test
dec
test
in
or
xchg
rcr
sbbb
fsubrp
ds
adc
pop
jns
shlb
push
sbb
dec
int3
or
mov
adc
into
movsb
pusha
ret
xchg
jo
mov
arpl
jo
js
or
mov
lock
ja
inc
or
movsb
lock
bound
stos
or
mov
nop
aaa
xchg
sti
cmp
lahf
ljmp
adc
adc
subl
and
mov
dec
xorb
jb
xchg
aaa
mov
adc
imul
or
push
addl
shrb
sub
jns
stc
mov
bound
movsl
dec
pop
pop
subl
xchg
inc
mov
xchg
fsubrp
sbb
or
lds
sub
cs
pop
movsb
xchg
adc
sbb
mov
mov
xchg
or
dec
mov
push
lret
add
sbb
in
sub
jno
aam
addb
mov
pop
lods
inc
add
cmpsb
dec
jb
push
subl
add
add
jg
and
enter
inc
push
fwait
mov
jno
addl
xchg
xchg
jae
roll
dec
cltd
fmuls
pop
inc
lock
test
xor
dec
xor
jp
jnp
or
xor
andl
inc
xchg
add
push
push
cmp
push
pop
add
imul
and
faddl
iret
jae
rorl
es
outsl
mov
mov
adc
ljmp
rolb
shll
enter
andb
mov
insb
xchg
jns
je
push
cwtl
xor
xchg
addr16
xor
mov
iret
clc
call
lcall
sarb
repnz
into
ss
jns
add
mov
push
into
dec
and
xorb
cli
rorl
mov
push
xchg
negb
ds
cmp
and
cmp
push
xchg
pop
mov
andb
ret
dec
push
add
and
xor
push
and
aaa
cmpb
push
nop
mov
cmc
jb
pop
xor
adc
pop
test
pop
pop
cltd
fmul
insb
dec
or
or
mov
insl
cmp
icebp
sbb
pop
push
ret
dec
xor
insb
cwtl
push
xchg
lcall
add
sbb
mov
sahf
in
repnz
add
cmpsl
push
testb
pop
mov
inc
dec
sbb
and
inc
inc
lds
xchg
jle
pop
push
adc
stos
add
push
pop
xor
mov
stos
mov
andb
aas
orb
xlat
push
jo
leave
fnstcw
or
das
lea
stc
cmp
bound
pop
fxch
stos
js
or
mov
lcall
push
or
or
cwtl
inc
leave
sarl
xor
pop
andl
inc
sub
push
add
fsubrp
sbb
cmp
andl
jl
fsubr
int3
pop
sub
jo
les
pop
ja
lahf
insl
dec
push
jb
mov
scas
sbb
sahf
ja
clc
add
xor
mov
test
dec
sbb
imul
xor
call
sbb
and
outsb
mov
dec
pop
xor
enter
dec
arpl
cld
andl
or
xor
push
in
movsl
push
jecxz
mov
rcrl
fisubrs
ds
add
mov
cmp
lods
and
push
or
mov
adc
mov
in
roll
push
xor
sub
je
adc
ss
sbbb
push
mov
pop
xor
sti
or
xlat
ds
xchg
xor
xchg
xor
xchg
fwait
jmp
dec
and
insl
cmp
js
push
add
lret
and
ret
outsl
push
mov
xchg
cmp
aaa
das
or
jge
test
cmp
xchg
pop
adc
rol
jle
pop
fnstsw
test
dec
push
dec
call
xchg
cli
dec
mov
push
sbb
xchg
in
inc
xchg
inc
ljmp
sub
xchg
icebp
test
js
or
gs
in
addr16
and
pop
push
dec
push
cmp
cmp
jmp
jo
shlb
test
dec
int3
cmp
add
fcmovne
cmpsl
les
mov
scas
jne
dec
or
test
popa
and
loop
data16
arpl
pop
adc
dec
daa
xor
in
or
es
adc
and
fildll
cmc
mov
pop
daa
sub
hlt
jno
loop
lcall
lahf
add
xchg
fidivrl
mov
in
mov
xorl
lods
jle
jo
mov
cwtl
add
mov
aas
inc
push
pop
pop
xchg
push
cwtl
push
jo
inc
push
inc
lea
aaa
or
cmpsb
push
cmp
jb
movsl
test
sub
aaa
xor
mov
cli
insl
ds
inc
and
std
sbb
addb
mov
sbb
push
cli
andb
xchg
cmp
fwait
xor
and
or
and
dec
xor
dec
pop
and
fs
sub
test
lret
push
push
fisubrl
xor
inc
ds
loop
clc
hlt
jo
or
loope
jns
mov
insb
sbb
sub
or
outsb
sub
push
mov
stc
leave
xor
dec
cmp
icebp
out
xchg
hlt
and
sbb
insb
popa
lock
dec
mov
imul
enter
aas
nop
imul
int
xchg
inc
cmp
cmp
and
and
int
xchg
adc
xchg
push
or
outsb
cld
mov
add
xor
imul
mov
nop
aaa
daa
mov
bound
cmp
je
stc
xorb
mov
inc
imul
pushf
or
icebp
rorb
popa
rclb
push
fdivl
in
int
adc
adc
loope
mov
and
les
in
xor
or
mov
mov
popa
bound
inc
les
imul
nop
pop
testb
sub
cmp
jecxz
shrl
test
test
loope
lret
xor
clc
add
push
mov
adc
push
push
jbe
and
sarb
push
sub
sub
and
nop
and
dec
mov
push
orb
test
sbb
xor
mov
pop
push
xchg
test
cmc
or
mov
aam
xchg
hlt
insl
fdivrs
and
lds
sbb
add
stc
pop
ljmp
out
mov
cmp
xchg
addr16
cmp
mov
shlb
pop
pop
push
cmpsl
pop
sub
or
jne
mov
adc
mov
and
stos
sbb
mov
jbe
sahf
xor
dec
xor
leave
aad
mov
ds
test
dec
jle
mov
xchg
es
jl
fcompl
std
add
inc
xor
mov
dec
mov
vmovdqu
enter
or
sbb
add
orl
sahf
sbb
or
gs
xchg
bound
repz
push
les
mov
out
ss
mov
insb
sub
and
andb
shrb
push
sbb
push
xchg
pop
cltd
jno
adc
push
and
or
xor
xchg
rcrb
push
cmp
iret
dec
xor
or
fmuls
dec
shll
push
dec
lock
dec
loop
xchg
enter
mov
jp
adc
out
es
sbb
push
lea
rcrl
ss
sub
aad
mov
inc
mov
scas
inc
adc
test
mov
push
iret
insb
outsl
cmp
ret
sub
xchg
inc
bound
mov
dec
mov
hlt
pop
in
pop
test
mov
ror
mov
and
shlb
mov
push
das
push
movsl
dec
mov
sarb
sbb
adc
add
cmp
ret
repnz
pop
jae
inc
sti
loop
push
shlb
shlb
lock
adc
stos
rclb
dec
out
xchg
add
inc
sbb
add
cmc
movsl
sti
push
push
mov
lea
fistpl
push
mov
sbb
xchg
fisubl
loopne
and
mov
fwait
cli
arpl
sub
lds
lea
in
mov
imul
xchg
or
sbb
jno
enter
lea
pop
int
sti
push
cltd
jns
ljmp
cli
pop
and
jg
add
stos
rorb
or
clc
loopne
mov
add
loope
sbbl
in
addr16
fdivl
or
fwait
inc
mov
adc
push
add
add
and
popa
mov
addr16
or
fs
push
arpl
sub
adc
inc
xlat
adc
adc
sbb
add
sub
pop
je
sbb
inc
aas
jp
push
ret
insl
push
mov
test
inc
leave
sub
leave
xchg
mov
jecxz
dec
pop
push
jl
pop
push
lret
popf
ljmp
or
dec
add
xchg
cmpsl
aam
repnz
cli
mov
push
mov
mov
pop
int3
fxch
fiaddl
adc
mov
popa
stos
mov
add
mov
arpl
int3
add
dec
outsb
inc
inc
sub
in
mulb
xchg
sbb
sbb
lcall
mov
push
repz
pop
adc
fsubs
cmp
xchg
jge
movaps
sub
int3
mov
sbb
popa
jge
jecxz
xlat
push
nop
ja
pop
or
loope
xor
mov
xchg
jo
and
pusha
outsl
mov
pop
push
dec
add
addr16
sti
mov
arpl
and
test
fidivrs
into
add
push
or
ljmp
shlb
dec
std
mov
dec
jnp
les
or
xchg
and
fcoml
sbb
jns
push
add
adc
sub
mov
cmpl
cwtl
cmpsb
xorb
out
es
lahf
mov
mov
cmp
ss
mov
ja
je
xor
pop
mov
inc
popf
mov
mov
xchg
addb
adc
into
inc
pushf
and
out
inc
aam
lods
imul
xor
dec
sbb
cwtl
popf
push
add
xor
scas
gs
test
xor
cmp
sarl
push
mov
ja
or
and
mov
ret
imull
addr16
cmpsb
pushf
fcmovnu
xor
jmp
leave
mov
fldl
jecxz
shlb
add
inc
dec
loope
xchg
repnz
push
mov
das
sbb
jg
sub
inc
subb
mov
mov
pop
int3
and
hlt
mov
enter
and
mov
inc
and
sub
and
jb
sbb
sub
jg
imul
xchg
loop
mov
adc
dec
add
ret
stc
lret
data16
mov
mov
mov
ja
cmp
bound
adc
inc
sbb
xchg
rclb
gs
sbb
lods
repz
xor
mov
test
push
fldenv
sbb
sub
push
adc
mov
inc
mov
test
pop
test
insl
popa
or
mov
jl
adc
sub
ret
loope
pop
lea
imulb
pusha
add
xor
pusha
fdivrl
push
aad
jno
int
xor
lret
cmp
stos
pusha
cmp
stos
aas
shl
mov
sbb
fcoms
ret
in
adc
mov
ljmp
dec
jmp
aad
leave
orb
leave
movsl
push
mov
jp
repz
or
push
ja
dec
xchg
push
mov
inc
inc
inc
xor
data16
adc
jb
inc
sarl
xor
push
std
pusha
sbb
push
cmp
dec
enter
outsl
lret
push
test
movsl
xchg
push
lods
mov
js
xchg
push
and
adc
scas
mov
add
xchg
adc
xor
jle
jae
fistps
adc
lock
inc
hlt
sub
xchg
enter
loopne,pn
out
outsl
popa
or
stos
repnz
push
dec
in
or
dec
mov
adcl
sbb
dec
inc
inc
fwait
mov
pop
je
sbb
movsb
out
dec
inc
cmp
loopne
flds
aam
ljmp
push
inc
mov
pop
push
adc
adcb
lret
outsb
add
mov
ret
jl
or
add
xchg
push
test
lahf
pop
pop
adc
cmp
jno
leave
loope
and
in
pop
nop
add
pop
fs
lret
mov
std
adc
or
fsubrs
js
in
fldenv
pop
and
xchg
mov
je
inc
int3
add
test
pop
pop
imul
push
xchg
stos
pop
cmp
inc
xchg
test
inc
shll
xor
sbb
dec
dec
test
mov
loopne
clc
ret
jmp
cmp
insb
enter
fldcw
sbb
xchg
mov
xchg
push
sbb
adc
icebp
add
sbb
mov
and
in
push
adc
push
sahf
adc
inc
outsb
daa
jl
push
loop
dec
and
jp
and
icebp
jae
xchg
lods
push
adc
comiss
inc
push
icebp
nop
add
push
mov
adcl
fnstcw
push
aad
sub
adc
aam
les
mov
imul
leave
xchg
jae
adc
adc
inc
push
sbb
repnz
mov
or
subb
das
fucomip
icebp
sub
mov
and
je
dec
mov
fadds
push
dec
add
lret
stc
push
or
lods
push
les
test
jmp
push
add
sti
js
lcall
enter
lds
repnz
jne
int3
mov
nop
dec
pop
dec
push
add
insl
in
cmc
rclb
pop
cwtl
loope
andb
enter
stos
or
cmp
aam
sahf
dec
aaa
push
arpl
leave
into
lcall
repnz
add
pop
cmp
aad
rcl
cmp
mov
ss
test
fldt
jle
test
mov
icebp
les
or
in
and
jo
lods
aad
push
mov
xor
dec
or
int
dec
cltd
jne
mov
hlt
adc
cmpsl
push
cs
mov
pop
shrb
insb
test
xor
stos
rclb
loope
jl
mov
xor
daa
lods
push
push
add
and
push
and
pop
sbb
sub
xchg
imul
xchg
add
mov
sub
mov
clc
shll
push
xchg
das
lahf
jle
negb
mov
push
cmp
in
divb
dec
and
xchg
es
cli
xchg
addr16
inc
cli
mov
loope
dec
je
push
lahf
or
cmp
cmp
cmp
add
mov
lock
push
push
jo
jnp
jnp
mov
cmp
bound
xchg
cs
pushf
sub
fadd
addr16
movsl
adc
mov
fists
mov
xor
xor
aam
bswap
clc
xor
dec
push
test
jne
mov
push
jmp
aaa
push
daa
xor
xlat
or
out
sbbb
mov
add
add
mov
xchg
fimull
sbbl
jns
push
xchg
jb
loop
adc
pop
and
jl
enter
dec
mov
cmp
xchg
repz
aad
or
sub
pusha
shl
pop
roll
imul
sahf
mov
mov
sub
jno
pusha
lcall
jecxz
inc
pop
push
cmp
pop
jmp
dec
int
imul
lea
mov
inc
out
and
push
xor
loopne
xor
es
cmp
sub
and
enter
push
xor
push
loopne
push
repnz
adc
arpl
lods
mov
enter
push
xor
xor
add
sub
adc
push
inc
push
sbb
xchg
mov
je
sbb
iret
jp
push
inc
movsb
jp
sbbl
adc
gs
shrl
xor
xchg
adc
xchg
inc
mov
leave
and
clc
adc
mov
pop
push
gs
xor
inc
lock
or
pop
or
in
or
dec
sub
push
dec
and
mov
cmp
or
push
popa
bound
cmp
mov
aam
pop
mov
inc
xchg
lret
js
mov
fs
jecxz
sarb
lahf
dec
pop
aad
or
mov
nop
pop
dec
nop
lods
pop
lock
scas
jl
lds
xor
push
out
hlt
sbb
and
xchg
push
sub
xchg
mov
inc
fs
or
sbb
ret
lods
test
push
test
jmp
push
cltd
stos
or
pop
mov
imul
xlat
cmpsb
xor
lock
adc
adc
jns
push
xorb
mov
and
xor
push
or
jge
add
pusha
es
push
xchg
inc
cltd
or
inc
fisttpl
push
cmp
in
dec
sbb
mov
jae
sbb
sub
pop
les
jnp
sbb
or
fidivrl
sbb
inc
into
mov
scas
adc
das
leave
dec
lock
xlat
test
cmpsl
cld
loope
sbb
int3
mov
add
mov
dec
or
das
and
out
xlat
outsl
pop
imul
outsl
or
pop
ja
int
adc
shrl
data16
xchg
repnz
xor
cmpsb
outsl
add
arpl
orl
popf
dec
addr16
ret
add
mov
jl
xchg
add
mov
cmp
daa
push
dec
leave
sarl
sub
push
jae
inc
stc
shlb
call
jno
in
movsl
data16
mov
mov
xchg
add
icebp
std
add
inc
sub
int
stc
cmp
dec
fcoml
or
shll
mov
scas
fisubrs
imul
inc
movsl
movsl
xor
cmp
xlat
mov
out
imul
dec
iret
mov
subl
in
scas
out
popa
xchg
les
add
xlat
stos
rorb
xchg
scas
push
aam
insl
shll
sub
sub
mov
add
dec
fdivrl
ds
leave
mov
dec
lret
sub
add
jno
dec
and
dec
insl
and
into
fstpt
or
data16
dec
mov
cmp
mov
cmc
rcl
xlat
or
adc
push
mov
repnz
xor
dec
adc
loopne
andl
sub
sbb
lods
clc
fisttpl
dec
mov
cmp
push
push
pop
add
bound
insl
sub
inc
js
adc
aad
dec
addr16
xor
faddl
adcl
sti
sbb
stc
sub
sub
pop
mov
xchg
leave
mov
adc
and
mov
mov
jns
and
ret
call
hlt
mov
or
bound
sub
jns
push
mov
push
int3
movb
push
sbb
ja
sub
inc
push
pop
jmp
mov
mov
mov
dec
inc
xlat
outsb
jo
mov
and
push
mov
mov
retw
mov
adc
add
stc
shll
fcmovnb
jl
push
mov
mov
push
and
mov
les
xor
cmp
gs
jecxz
sub
stos
out
roll
sub
xor
test
dec
xor
xchg
push
add
add
mov
or
push
out
out
rcrb
adc
or
or
pop
sbb
xor
xchg
sbb
xor
dec
cli
lahf
movsb
int
xchg
push
rcrl
inc
mov
mov
iret
lds
or
mov
pop
xlat
and
popa
rolb
sbb
pop
mov
lds
mov
loopne
adc
ret
pusha
jmp
clc
rorl
imul
sub
xchg
js
repz
sbb
outsl
jg
and
loope
lret
mov
add
mov
inc
jge
jle
nop
sub
notb
rcrl
push
out
test
mov
jne
push
inc
jle
les
push
dec
jo
sub
je
jnp
push
sti
cmp
cwtl
lods
or
cmp
push
pop
sbb
push
cmpps
cmp
mov
out
loop
fistl
cmp
pop
ret
pushf
aas
std
fildll
push
push
imul
xchg
mov
mov
add
mov
lret
xchg
push
mov
jecxz
xlat
push
push
filds
add
or
rcll
shrl
adc
rorb
lds
sub
pop
mov
rcll
xor
inc
ret
sub
iret
lds
xchg
push
inc
test
call
mov
adc
popf
push
loopne
ficompl
cmp
or
push
out
inc
popf
dec
enter
inc
or
aam
adc
push
and
out
sbb
sbb
mov
or
push
push
adc
pop
cld
fistpl
lods
lds
nop
sbb
cmp
call
fwait
dec
cmc
add
jmp
xchg
mov
mov
mov
fildl
jecxz
and
cltd
shrb
xchg
adc
leave
or
push
ljmp
add
xor
inc
aas
mov
lods
fmull
mov
pushf
mulb
adc
or
dec
cmp
add
sub
push
push
cld
movb
aaa
fcomps
xlat
add
xchg
dec
mov
test
xchg
push
repnz
push
xor
dec
inc
xor
pop
dec
xchg
stos
adc
aad
pusha
mov
sbb
and
lea
dec
ss
mov
lret
xchg
sti
mov
enter
sub
popa
je
and
arpl
xor
xor
dec
or
pop
stos
push
push
lret
or
mov
arpl
cltd
cmp
or
push
in
shrb
mov
xchg
and
test
stos
sbb
xor
dec
and
xchg
fsubrl
inc
sbb
dec
xchg
ds
lret
dec
or
movsl
call
es
push
repnz
test
jne
inc
xor
outsl
pop
stos
inc
mov
stos
dec
rcrb
fisubs
enter
xor
add
sub
stos
pop
adc
pop
popf
fs
sbb
dec
sarb
jnp
andnps
dec
popa
adc
sub
pop
sub
ret
call
mov
pop
inc
dec
movsb
push
push
lds
lahf
test
mov
add
jno
shlb
mov
mov
roll
sub
xchg
cmp
jmp
jne
sbb
lret
mov
fsub
cmp
rcrb
faddp
test
hlt
movsl
sbb
and
adc
mov
test
sub
push
jl
xor
push
xor
or
shl
dec
dec
cmpl
push
lcall
inc
or
fsubs
arpl
filds
and
inc
inc
pop
push
pop
sub
sub
js
mov
pusha
gs
cli
ljmp
sub
push
mov
rorb
inc
dec
hlt
cmp
aaa
aas
aaa
out
iret
adc
fisubrl
mov
mov
imul
aad
and
push
jbe
cli
jle
sbb
ret
sub
pop
dec
and
pop
lret
pop
fsubs
mov
and
aad
enter
xor
adc
xor
outsb
loope
stos
sub
or
lahf
sub
daa
dec
stc
call
jns
leave
mov
nop
popa
stos
cmpsl
stos
cmpsl
stos
inc
lock
scas
lds
shll
lods
mov
maskmovq
jns
test
fdivrs
mov
and
mov
data16
xor
in
out
inc
xor
push
jl
icebp
jb
nop
insw
in
adc
push
out
fsubs
xchg
movsb
movnti
popl
js
out
add
mov
mov
popa
bound
loop
push
jbe
dec
rclb
mov
pop
lahf
dec
ret
stos
rorb
pop
test
in
xchg
clc
mov
fdiv
icebp
inc
pop
js
sbbb
dec
lock
aad
xchg
inc
lea
xor
mov
movsl
or
call
jbe
mov
pop
icebp
insb
sub
stos
imul
das
mov
mov
je
xchg
jp
and
push
leave
ficompl
sbb
mov
inc
fs
rcr
popf
adc
jmp
frstor
pusha
ss
mov
mov
rcrl
int
outsl
sub
jne
out
int3
out
test
lea
jb
imul
mov
sub
insl
xlat
mov
push
xor
cmpl
or
movsl
in
push
rorb
jae
mov
stos
xchg
adc
lock
bound
out
push
jae
push
jae
jae
in
testl
inc
inc
out
rorb
int3
adc
bound
xor
or
mov
pop
sti
ja
or
add
xchg
insb
dec
xchg
sti
push
pop
pop
add
sub
into
es
push
mov
push
dec
push
stos
or
shlb
jne
jbe
add
ljmp
sbb
adc
mov
sub
ud1
loopne
adc
fstpt
daa
insl
dec
mov
es
out
inc
sbb
in
shlb
leave
ljmp
test
mov
dec
push
mov
mov
xor
mov
adc
pop
aaa
xor
divl
les
into
pop
movsb
xchg
jne
jns
xchg
push
loope
cmovnp
mov
pop
add
iret
cmpsb
test
or
xor
js
jne
xchg
jl
mov
pusha
or
mov
cs
xchg
jecxz
dec
pop
xor
inc
leave
cmp
add
pop
cmp
ds
ds
add
outsl
inc
fisttps
roll
xor
and
jl
arpl
int3
lods
movsb
jbe
sbb
cmp
add
pusha
in
fbld
idivb
pop
out
and
cs
xchg
mov
adc
cmpsl
cmc
int
mov
and
xchg
mov
jp
push
das
les
loope
insb
cwtl
jae
push
xor
divb
lock
pop
pop
mov
lcall
aas
or
rcrl
xchg
adc
enter
ret
jnp
mov
sub
pop
dec
jns
push
cmp
pop
xor
fcmovbe
xor
pop
or
inc
jge
aam
cmpxchg
aas
stos
jnp
jp
sbb
iret
or
and
pop
ss
test
sahf
std
fisttpll
push
push
or
push
xchg
js
call
cmpsb
dec
sbb
sub
test
ficompl
dec
addb
xor
push
lahf
into
jmp
push
scas
shrl
fisttpll
xchg
xor
pushf
mov
cli
shrb
shl
mov
lds
leave
sbbb
idivl
or
dec
pop
movsb
bound
in
stos
adcl
push
inc
js
inc
inc
jb
in
lods
push
dec
dec
mov
std
xor
jo
inc
outsb
roll
and
add
pop
jg
mov
sbb
dec
xor
push
test
sbb
adc
mov
lods
fnstenv
scas
addb
outsl
mov
push
xchg
add
xor
xor
orl
jns
or
mov
xchg
inc
popa
mov
mov
and
stc
or
sahf
cs
in
cs
cmp
jne
insl
and
cmc
inc
pushf
fsubrp
sar
enter
out
jbe
adc
lods
or
cmc
not
xor
mov
cmpsl
out
and
cmp
enter
inc
lea
sarl
push
lods
jbe
and
xchg
test
loop
shr
test
lcall
movsl
test
xor
inc
sub
inc
push
xchg
mov
aas
in
push
add
push
xor
push
pop
dec
add
inc
xchg
inc
xchg
and
addr16
fwait
cmpsb
cli
lds
push
std
mov
decb
jo
hlt
icebp
dec
shl
push
in
or
test
mov
mov
out
lds
cwtl
sbb
out
xchg
out
sbb
fadds
mov
pop
aam
push
adc
or
lret
fdiv
leave
test
not
dec
popa
cmpsl
sbb
lea
int3
fcomps
add
add
iret
xor
incb
cmp
inc
es
inc
and
mov
jmp
dec
enter
xor
fs
cmp
ficompl
adc
subb
fsubrs
dec
jmp
mov
in
xor
adc
sub
sub
mov
jmp
scas
inc
cmp
mov
imull
out
stc
test
jb
cmp
sub
and
in
push
jno
fidivrl
jl
sbb
fucomp
sbb
mov
lret
cmp
std
xor
mov
out
cmpsb
in
mov
and
jae
loope
push
mov
pop
movsb
add
lcall
xchg
aad
cmc
adc
inc
mov
adc
or
sub
dec
scas
adc
scas
mov
mov
shrb
sbb
test
mov
repz
fnstsw
leave
imul
imul
movsl
cmpsl
adc
mov
xor
cmp
jo
mov
pop
test
mov
out
test
sub
addb
jmp
and
xor
outsb
popa
in
lea
mov
out
jmp
rol
lret
mov
pushf
filds
in
aad
sarl
pusha
iret
xor
into
add
in
ret
movb
popa
fndisi(8087
push
roll
mov
dec
inc
pusha
inc
jecxz
iret
das
fistps
sbb
scas
shrl
inc
pop
rcrb
push
sbb
jae
and
jmp
sbb
test
popa
loope
ficomps
test
js
iret
adc
or
pop
popa
mov
jo
mov
cwtl
jnp
inc
jo
mov
imul
sarl
or
outsl
cwtl
cld
sub
adc
in
cmovle
sbb
int3
push
test
pop
xchg
sub
xchg
or
ljmp
xchg
repnz
daa
and
cmpsl
enter
jmp
div
sub
pusha
inc
out
cwtl
rep
mov
test
icebp
ds
adc
icebp
sbb
pop
and
cwtl
loope
mov
fsub
cmp
sbb
cltd
dec
mov
iret
es
lcall
jne
jnp
dec
fistps
mov
jle
stos
xorw
and
lds
dec
fistl
loope
in
xor
setbe
enter
push
int3
es
xchg
mov
mov
mov
jo
je
mov
push
push
or
mov
mov
jbe
jge
or
mov
mov
push
and
outsl
xchg
and
imul
rol
jecxz
popl
xchg
fldl
xchg
inc
adc
sti
sbb
lea
cmpsb
jne
jns
mov
ljmp
movsl
push
jmp
cmp
jo
push
pop
or
xor
jne
sbb
std
in
lcall
loopne
jnp
or
lcall
sub
jnp
sbb
pop
clc
lods
inc
pop
dec
push
cmc
call
pop
cmc
add
movsl
adc
sti
fucomp
inc
lock
cmp
cwtl
mov
insb
loope
sub
mov
lods
ret
jg
scas
ljmp
sti
enter
mov
psrad
push
in
cltd
dec
sbb
jnp
and
adc
out
stos
jecxz
int3
scas
sbb
jmp
add
dec
addr16
dec
test
jno
xchg
dec
dec
dec
dec
jmp
rcll
xor
dec
mov
push
jp
arpl
repnz
or
adc
pop
push
in
push
mov
int3
mov
xchg
mov
xchg
roll
es
push
jg
aam
nopl
lret
scas
jl
je
into
push
int
pop
sahf
add
ret
mov
movsl
sub
popf
in
pop
dec
inc
std
fcoml
add
adc
daa
enter
icebp
outsl
push
in
and
fistl
cmp
adc
loopne
scas
test
push
pop
cli
mov
inc
test
xor
or
mov
adc
movsl
jg
mov
movsb
in
push
std
imul
addl
cli
jecxz
lea
push
and
ret
aaa
lcall
jnp
inc
aam
push
push
lds
jg
and
imul
divb
into
sbb
inc
add
imul
inc
aam
mov
dec
outsb
inc
dec
xchg
or
push
dec
pop
pop
jne
adc
add
ret
pop
add
jno
js
pop
sub
xor
pop
mov
cmpsb
shlb
add
cli
mov
cmpsl
xchg
imulb
insb
test
stc
ljmp
cmp
mov
mov
loop,pn
add
xlat
frstor
add
aad
push
daa
dec
in
pusha
xor
scas
lret
or
insb
xchg
inc
mov
jmp
sbb
jno
cmp
rorb
sub
pop
neg
mov
or
sbb
ret
ja
mov
negb
mov
mov
scas
icebp
push
popa
cs
lret
mov
mov
pop
dec
aaa
and
pop
adc
or
and
adc
sub
cmp
or
sub
lcall
mov
mov
push
mov
push
pusha
aam
stos
in
leave
or
cltd
sbb
popf
inc
push
data16
aaa
xlat
add
cmp
add
mov
push
inc
insl
jne
jmp
aas
push
repnz
mov
xchg
xchg
inc
rcrb
xor
mov
mov
ss
jge
push
push
xchg
insb
testl
pop
int
mov
xor
jne
test
lcall
in
iret
out
mov
push
jbe
incl
fisubs
cmp
jp
cld
mov
loop
shrb
sbb
call
fwait
dec
loopne
mov
pushf
jp
sub
jmp
xlat
std
and
std
cld
xor
mov
pop
mov
add
mov
aam
push
and
test
aam
pushf
and
mov
test
pop
enter
mov
or
mov
jle
popa
inc
or
int
ffreep
in
jmp
mov
jp
push
movsl
nop
cli
mov
mov
je
bound
push
sbb
sub
push
push
add
fs
or
jb
push
pop
push
xor
leave
fwait
push
mov
xor
es
and
repnz
inc
sub
cmp
loopne,pt
lods
mov
sbb
sbb
push
jg
and
xor
sbb
adc
hlt
pop
jle
sbb
aam
fstpt
cwtl
jno
cmpsl
add
pusha
mov
nop
out
roll
arpl
popa
jne
les
je
sbb
pop
mov
loopne
add
cld
aad
pop
mov
mov
pop
and
jnp
cmpsb
sub
les
sbb
lahf
sbb
push
push
add
and
lret
inc
fs
mov
repz
or
add
test
ds
pop
ljmp
or
roll
mov
dec
test
sbb
xchg
popl
push
xchg
inc
xchg
or
aad
mov
stos
ret
add
aas
fadds
in
mov
insl
add
movsl
jg
je
xchg
fbstp
stos
pop
mov
jnp
lahf
in
pop
lea
andb
mov
lret
jne
lods
lret
lret
jno
adc
bound
inc
call
xchg
sub
pop
pop
fwait
xchg
cmpsb
or
inc
pop
jno
lret
rcll
dec
or
jno
pop
cs
push
xchg
xchg
sbb
sub
jl
std
mov
stos
out
sub
xchg
shr
inc
cmp
sub
lds
push
adcl
or
cs
fistl
sbb
movb
ja
dec
jl,pt
ret
push
mov
cmpsb
adc
les
loop
inc
jecxz
or
fists
inc
xor
push
call
pushf
imul
xchg
loopne
in
push
adc
cmp
ss
inc
pusha
inc
mov
bnd
inc
repz
pushf
cmpsl
movsl
in
and
jmp
das
and
cltd
pop
outsb
dec
lds
sbb
imul
stos
push
push
stc
mov
sub
loopne
or
outsb
in
cmp
loope
add
inc
mov
jae
fisubl
dec
cmpsl
xor
mov
clc
mov
and
cwtl
jbe
and
inc
xchg
mov
sbb
cmp
iret
mov
push
jmp
xchg
cmp
mov
leave
sbb
sti
adc
js
inc
add
dec
lea
lods
dec
icebp
mov
cmpsb
jmp
movsl
cmp
dec
push
out
ret
loopne
lods
xor
adc
ficoml
pop
adc
pop
scas
and
mov
adc
inc
adc
test
repz
and
movsl
and
cmc
mov
mov
adc
xchg
loopne
push
nop
adc
mov
adc
push
out
mov
xlat
jecxz
mov
add
xchg
cmp
js
sbb
inc
mov
add
enter
xor
adc
xor
pop
aaa
dec
orb
out
repnz
imul
pop
stc
pop
xchg
js
mov
outsl
adc
out
outsl
testl
and
push
addr16
enter
dec
call
add
mov
ret
sub
mov
lret
popa
addr16
or
push
mov
sbb
sub
sbb
xor
adc
push
lock
loopne
or
dec
mov
and
dec
cmp
popf
lock
sti
sub
fistpll
mov
test
hlt
fbstp
insb
jle
lcall
imul
mov
jp
xchg
insb
xchg
mov
test
push
movsb
int3
and
and
out
jge
fcomp
jecxz
in
test
fisttpll
in
cs
ja
cli
lcall
lock
arpl
jae
jne
loop
xchg
je
shrl
test
out
mov
mov
cltd
xchg
xchg
arpl
jp
inc
jmp
addb
loope
dec
shlb
shl
and
or
mov
and
das
jne
jge
sbb
jg
lret
jmp
jmp
in
cltd
xchg
or
out
mov
cmp
adc
pop
jbe
add
adc
push
xor
bound
sub
push
xor
inc
pushf
push
mov
out
jbe
pop
adc
jmp
shrl
mov
sbb
xor
stos
push
and
xchg
dec
jns
pushf
pop
or
jnp
dec
mov
call
hlt
push
or
cmp
mov
cli
or
shll
lods
pop
sbb
mov
jo
or
cwtl
and
or
mov
sub
sbb
add
push
dec
inc
sbb
mov
mov
test
movq
nop
cmova
mov
loopne
ja
imul
pop
pop
sub
add
ljmp
or
dec
jne
in
mov
in
fcmove
jecxz
mov
lret
mov
fisubs
loope
lock
int
sarb
mov
adc
jmp
movsl
adc
adc
insl
pop
inc
cwtl
xchg
roll
cmp
pop
jl
xchg
add
xchg
in
add
dec
or
xchg
lahf
jno
sbb
cmpsb
movsl
xchg
push
fsubrs
adc
pop
mov
fdivl
fdivrs
testb
xor
shrb
popf
and
pop
jecxz
mov
pop
and
sub
mov
sub
xlat
inc
ret
das
inc
push
push
imul
and
testb
mov
loope
push
cmpsl
arpl
lret
push
addr16
jb
jb
adc
and
sub
dec
out
or
test
repz
sbb
add
dec
jae
ss
adc
aam
lahf
mov
adc
xchg
mov
aad
in
fwait
inc
or
mov
aad
lods
andb
and
pop
ficompl
mov
cltd
push
iret
pop
mov
sub
not
cmpsl
cwtl
enter
pop
orb
mov
popf
stos
adcl
sti
movsb
jle
inc
inc
insb
push
movsl
lahf
xor
scas
push
sub
inc
jns
lahf
add
xor
adc
mov
int3
cmpsl
inc
cmpl
sub
lock
int
fldenv
sbb
insb
jne
sbb
leave
ret
insb
add
jecxz
in
dec
xor
inc
insl
ljmp
pop
push
inc
xor
jno
lret
cmp
das
imul
inc
pop
push
sub
in
pop
and
cwtl
loope
or
dec
jb
cmp
jmp
mov
lret
repz
fdiv
xchg
outsl
out
movsb
or
push
das
stc
xorl
xor
push
cmpsb
loope
mov
dec
push
subb
cmp
or
pop
dec
inc
add
inc
pop
cmpsl
adc
cmpsb
ds
mov
cmp
fstl
cmpb
mov
mov
cmp
aam
arpl
stos
adc
adc
push
sub
mov
xor
inc
adc
daa
sahf
in
hlt
addr16
mov
out
mov
pop
inc
lahf
movsb
mov
cmpsb
cmc
cmp
jo
and
insl
mov
inc
fsts
clc
and
movsb
clc
addb
test
pop
enter
or
pushf
ds
aaa
or
xchg
icebp
sbb
cmp
test
sub
cmc
int
hlt
inc
enter
mov
mov
imul
fs
mov
dec
fistpll
ficoml
out
and
loopne
fildll
int
loope
cmpsb
push
dec
ss
adc
push
dec
iret
stos
cs
mov
fs
pop
adc
notb
pushf
int3
imul
mov
mov
push
ret
lcall
pushf
hlt
dec
and
pop
sbb
xchg
adc
pop
dec
lock
cmp
mov
stos
adc
jecxz
sarl
loope
push
mov
push
imul
sub
and
das
sbb
mov
test
ss
pop
rolb
cmpsl
jmp
pop
addr16
dec
mov
in
adc
pop
imul
jmp
fst
pop
and
subl
jge
test
push
dec
shlb
mov
mov
xchg
out
inc
mulb
inc
inc
iret
mov
popf
or
mov
pop
xchg
add
lods
xlat
out
jnp
xor
xchg
cmpsl
dec
add
iret
cmp
aas
popf
cmp
push
add
subl
adc
xor
inc
mov
mov
out
aaa
cltd
push
es
cmp
sbb
or
repnz
lds
jge
push
shlb
fwait
push
sub
xor
jle
xor
add
push
adc
sbb
mov
jno
cmpsb
popa
pop
shrb
into
stc
out
cmpsl
into
fsubrl
and
jmp
inc
pop
lcall
mov
cmp
mov
xchg
xor
cmp
mov
add
push
adc
mov
jb
mov
mov
or
leave
mov
inc
ret
sahf
int
pop
or
sarl
lcall
outsb
mov
out
ficompl
aaa
xchg
dec
adc
lret
leave
or
xchg
fdivl
cmpsb
test
cmc
insb
rcll
adc
dec
mov
sbb
push
scas
sub
fcmovbe
arpl
or
cltd
lret
sub
js
mov
test
push
xlat
pop
addr16
pusha
es
mov
add
mov
or
push
push
outsb
mov
bound
outsb
mov
sub
dec
jge
fistl
and
push
mov
mov
fstpl
arpl
gs
dec
cmp
add
or
cmp
pop
dec
mov
push
pop
roll
aas
or
sbb
xchg
movsl
cwtl
xchg
xchg
inc
aam
xchg
int
popa
jo
cmp
mov
mov
adc
sbb
data16
xrelease
xchg
mov
push
test
stos
sub
insl
pop
aad
adc
xchg
movsb
fistl
or
xor
or
cmc
mov
insb
popf
cmp
adc
pushf
sbb
sbb
or
aam
pop
idivb
lods
mov
adc
fbstp
or
pop
les
nop
shl
xlat
jl
aad
mov
icebp
cmp
aaa
dec
lea
dec
shll
insb
and
pop
push
adc
test
and
outsb
inc
dec
fmuls
leave
push
xchg
jnp
and
lahf
int3
aas
stc
push
data16
pop
arpl
sub
adc
jne
or
push
mov
ret
dec
mov
mov
jp,pt
push
add
imul
bound
add
gs
adc
lods
push
sub
inc
cmp
jmp
subl
aas
dec
push
enter
aam
out
imul
jno
cmp
loope
ja
aas
testb
gs
adc
xchg
or
jp
out
rcr
fidivl
xchg
mov
cmpsl
xchg
imul
lcall
jle
cltd
xorb
mov
lret
jns
daa
and
ja
add
xor
push
inc
rcl
aam
adc
push
mov
fistpl
push
icebp
test
dec
das
ss
sub
repnz
dec
fidivs
push
arpl
adc
mov
imul
leave
ljmp
inc
dec
xchg
mov
inc
lock
jg
adc
gs
ret
adc
gs
dec
pop
or
cmp
sti
mov
xchg
sbb
or
mov
sbb
es
xor
inc
or
js
or
ss
imul
leave
stc
add
imul
push
aam
fcomps
and
dec
mov
movsb
int3
adc
or
add
es
arpl
mov
jnp
add
icebp
pusha
rcrl
pop
mov
mov
and
xor
xlat
and
add
mov
dec
sbb
mov
sub
sub
jb
sbb
push
adc
popf
fldenv
pop
clc
push
andb
cmp
add
push
xor
add
sub
and
adc
dec
fwait
sti
push
out
rcrb
and
cmc
ret
adc
mov
sbb
sti
pop
inc
dec
rorl
fisttpl
or
sub
pop
xchg
cmp
push
fnstsw
sub
and
dec
pop
push
cmp
add
cli
test
mov
sub
xchg
fucomp
lock
inc
aaa
out
push
and
aas
sbb
inc
push
mov
inc
fldl
lock
or
push
jo
push
adc
push
mov
adc
sbb
adc
push
lea
xor
adc
xor
lea
mov
push
pop
jl
or
sub
lods
mov
cmpsl
mov
js
jb
push
push
adc
test
adc
sbb
push
or
repnz
push
adc
test
adc
jns
mov
shlb
call
adc
loope
stos
sub
inc
mov
inc
lret
into
mov
test
test
pop
or
cmpsb
bound
das
inc
rolb
dec
pusha
sbb
in
jae
xor
mov
rcll
popa
add
cmpl
fsqrt
mov
add
test
mov
mov
sti
das
in
mov
and
sahf
lahf
dec
sbb
push
lcall
les
pop
jmp
ret
pop
dec
adc
aas
pop
repnz
movsb
xchg
fwait
jge
pushf
and
mov
push
ss
mov
push
push
and
mov
in
les
xchg
outsl
scas
push
inc
adc
add
fldenv
negl
mov
mov
jo
pop
dec
xor
xchg
and
mov
sbb
mov
push
xchg
jno
xor
or
call
inc
add
test
mov
cld
cs
dec
or
ret
sub
push
jns
pop
frstor
fmull
adc
ror
loop
mov
pop
push
aaa
aad
cmp
cli
ja
sub
adc
imul
mov
and
icebp
loop
xor
addr16
mov
pop
sub
fs
in
add
pop
lds
cmpsb
pop
cmp
and
add
jns
add
jb
stc
push
je
sbb
adc
adc
pushaw
cwtl
xchg
inc
adc
sub
mov
inc
inc
inc
adc
xchg
mov
sub
or
push
mov
jecxz
mov
dec
sbb
ljmp
xor
jno
xchg
push
outsb
pushf
inc
push
inc
shlb
sub
pop
cpuid
mov
sbb
sub
loopne
test
pop
or
mov
inc
xchg
xchg
test
sbb
call
or
ret
mov
inc
xlat
sub
xchg
cmc
xor
dec
sub
sbb
hlt
cmpsl
jb
js
and
js
mov
mov
xchg
stos
adc
inc
and
jnp
inc
loope
adc
sbb
jle
stc
add
xchg
push
cs
dec
push
or
sbb
or
pop
test
testb
xchg
in
pusha
in
xchg
sbb
and
jno
sbbb
add
mov
andb
test
add
mov
out
sub
test
in
scas
mov
imul
bound
scas
insl
out
mov
scas
pop
cs
loope
icebp
mov
cmp
ds
into
nop
arpl
xchg
sbb
loop
stc
or
sub
addb
into
cld
and
es
push
loope
popf
push
fldcw
cmp
push
popa
jnp
sub
lock
addr16
xchg
push
xor
cmp
sub
add
mov
jecxz
adc
popf
or
mov
cmp
sub
push
out
js
adc
lret
mov
cmp
mov
les
mov
lods
or
loop
inc
cmp
lods
xor
mov
push
into
inc
frstor
mov
dec
sub
or
xchg
enter
or
lcall
or
or
inc
add
xchg
insb
incl
rolb
imul
ja
add
clc
sub
fiaddl
stos
jl
loopne
shll
jno
pop
or
pop
mov
jne
js
xchg
or
movsl
data16
data16
jnp
pop
push
inc
popa
push
mov
or
inc
push
jnp
jne
cmp
or
bound
mov
pop
rcrb
dec
pop
jno
mov
ja
and
rolb
xor
sbb
test
or
and
cmp
in
into
fadds
pop
stos
mov
push
int3
into
pop
cmp
loope
rcll
out
cld
xchg
inc
lods
mov
jbe
xlat
scas
inc
sbb
hlt
push
es
push
inc
movsb
adc
rcl
in
xchg
and
incb
xor
and
adc
sarl
shrl
sti
adc
js,pn
sarb
out
clc
jns
inc
adc
ror
pusha
pop
in
loopne
push
mov
shll
inc
adc
in
je
mul
adc
pop
jo
sbb
nop
xor
loop
pop
jns
inc
pop
mov
mov
test
lods
pop
mov
cltd
pop
pop
mov
sub
test
pop
inc
sub
jle
jo
dec
call
insb
sub
sub
add
int3
sub
push
lret
lret
push
add
popa
arpl
xchg
dec
push
test
mov
pop
shll
mov
push
cmp
fcmovnu
pop
imul
sub
nop
dec
mov
les
dec
cmp
inc
adc
or
scas
stos
call
insb
mov
out
inc
loope,pt
mov
stos
cli
test
out
std
jns
jns
fsubl
hlt
add
adc
cmp
inc
les
imul
pusha
into
jno
pusha
cmpsb
dec
scas
xchg
mov
daa
xchg
cmp
xchg
cmp
aad
or
adc
xchg
pusha
in
loop
cmp
nopl
or
div
sub
mov
adc
rcll
cs
lret
ret
shl
pusha
xlat
sub
adc
mov
arpl
out
cmp
adc
movsl
push
cmp
inc
xor
push
cmp
push
movb
adc
fnstsw
cld
sbb
and
and
and
out
pushf
aad
in
pop
stos
jg
fisttpl
push
int3
jle
shl
in
jp
dec
mov
and
ds
dec
xor
sbbl
into
xorl
add
and
xchg
inc
mov
xchg
lock
loopne
popa
repnz
pop
and
cmp
fisttpl
push
in
add
xor
pop
fcompl
and
lods
jmp
ja
jg
add
push
pop
leave
pop
jmp
or
loopne
aaa
arpl
out
inc
pop
mov
arpl
or
in
mov
in
scas
push
pushf
into
je
cmc
inc
fstpt
or
pop
push
push
mov
enter
lods
or
dec
push
cmpps
push
jecxz
xor
inc
sbb
xor
rclb
push
stos
cwtl
fmull
test
insb
and
lcall
adc
addb
mov
mov
js
loopne
mov
and
add
inc
xchg
inc
negl
adc
adcl
jle
repnz
addr16
jnp
cltd
outsl
loopne
ret
lret
inc
jne
cld
pop
jbe
jge
leave
inc
addr16
and
sbb
push
cmp
and
mov
gs
pushf
movsb
lea
js
fdivrs
xchg
lea
xchg
iret
stos
sub
sbb
mov
push
inc
imull
and
push
clc
adc
pop
or
or
push
das
cli
test
arpl
dec
and
cltd
stc
test
loope
xchg
and
insl
xor
or
lret
leave
push
ss
sub
fs
pop
loopne
das
popf
lahf
ja
in
lock
xchg
xor
pop
aaa
pop
jmp
outsl
push
jg
dec
jp
popa
pop
insb
mov
aad
xchg
iret
mov
pop
jmp
push
cwtl
jl
mov
add
cli
cmp
test
in
sbb
or
enter
sbb
pushf
and
sbb
ds
popa
je
xchg
or
pop
jle
xchg
and
mov
int
imul
rorl
nop
addl
loop
jns
mov
iret
dec
cmp
cmp
pushf
adc
push
inc
aas
jmp
stc
fnstsw
dec
inc
adc
leave
movsb
mov
pop
inc
push
jl
ret
lds
insl
adc
add
adc
inc
xchg
testb
inc
stos
daa
dec
sub
enter
pop
sub
test
hlt
bound
inc
xor
or
iret
jp
mov
lret
sahf
fs
in
sub
push
ss
mov
push
cltd
popa
insb
and
xchg
aas
scas
sub
arpl
or
je
enter
add
mov
push
mov
outsl
cmp
sbb
scas
or
and
bound
xchg
sub
push
or
inc
xchg
pop
xchg
stos
loopne
mov
aaa
jb
test
outsl
add
mov
nop
out
scas
int3
sub
inc
mulb
mov
adc
sbb
loop
mov
arpl
lcall
int
inc
add
xorb
loop
imul
push
test
addr16
gs
les
ja
sbb
mov
ss
movsb
xchg
fstpl
cmp
xchg
shlb
sub
lret
or
xchg
mov
or
mov
jne
out
aad
mov
sti
pop
out
add
nop
pop
push
cmp
out
pop
inc
pop
out
jbe
jle
adc
push
pop
gs
test
jg,pn
or
fcmovnb
xchg
mov
mov
or
mov
dec
ja
pushf
xchg
cmpsl
sub
mov
movsb
xchg
pop
xchg
xlat
enter
aaa
sub
or
adc
out
xchg
xor
bound
and
mov
pop
bound
pop
popa
adc
mov
fstl
mov
mov
jge
sbb
jmp
sub
inc
push
test
testl
aam
loope
testb
mov
push
stos
or
test
js
sarl
inc
push
push
sahf
out
dec
loop
xor
xchg
test
loope
repz
lods
pop
or
lahf
dec
addl
mov
leave
sbb
leave
mov
sub
icebp
bound
lret
pop
lcall
mov
add
cs
es
sub
dec
movsl
push
pop
movsl
inc
xchg
add
stos
les
cwtl
and
enter
pop
adc
xlat
adc
dec
mov
sub
dec
sub
popa
cmp
addl
leave
insb
xchg
inc
insl
pushf
stos
das
dec
pop
pusha
sbb
push
jae
movsw
pushf
mov
push
push
dec
in
mov
mov
jl
inc
outsb
js
jmp
test
push
mov
xchg
je
out
push
push
loopne
outsl
mov
or
mov
push
xor
mov
adc
cmp
mov
sub
bound
int
inc
inc
sub
dec
mov
push
jecxz
mov
je
jg
arpl
cli
or
loop
mov
addr16
andb
aas
push
adc
fnsave
adc
mov
cmp
adc
add
mov
pop
lret
sub
push
sub
push
jns
addl
add
jmp
ljmp
les
iret
ds
pop
sub
dec
dec
fistl
bound
xchg
mov
fwait
adc
mov
pushf
add
cmpsl
jg
xlat
lret
inc
stos
loop
out
pop
loope
push
rorb
jecxz
xchg
inc
sub
pusha
insl
jle
pop
shr
imul
add
hlt
jmp
adc
int3
dec
mov
pushf
and
xchg
mov
test
or
adc
push
adc
in
cli
xchg
adcb
movb
xorb
mov
loope
cmp
out
jmp
dec
dec
adc
jae
adc
pop
shll
xor
data16
test
xchg
dec
sub
in
into
repz
pop
or
dec
and
or
inc
fs
adc
leave
adc
pop
mov
add
jo
adc
cmpsl
sub
and
outsl
jecxz
out
inc
xchg
cmp
mov
sub
leave
and
sub
leave
add
cld
neg
xor
mov
insb
or
sub
cmpsb
nop
mov
test
cmp
mov
inc
cmp
pop
rcrl
int
xchg
or
and
in
push
imul
in
mulps
outsl
xlat
add
out
out
jmp
add
std
xchg
movsl
sub
sti
iret
in
and
testl
call
sti
pop
pop
imulb
xchg
cld
ds
jg
scas
test
and
iret
popa
inc
int
pop
dec
inc
insl
rolb
stos
push
dec
mov
adc
ret
dec
cmp
aad
and
notl
sbb
shll
aad
and
inc
bound
xchg
arpl
loopne
sbb
out
mov
sahf
lret
data16
push
xor
into
cmp
jle
mov
push
mov
out
push
out
push
push
cmc
xor
arpl
lret
sbb
das
jecxz
insb
inc
mov
or
jge
adc
mov
xchg
lret
dec
push
cli
and
pop
rcrb
add
jb
icebp
repnz
mov
repnz
jne
cmp
xor
xorb
jecxz
lret
lret
sahf
inc
mov
sub
test
inc
cwtl
lsl
push
mov
subl
pop
sbb
and
int
cmpsl
push
cld
cmpsl
mov
and
cmpl
cmp
imul
and
sub
dec
xchg
xchg
fisttpll
mov
jae
mov
mov
ret
sbb
and
std
pop
pop
lds
adcl
push
push
jmp
dec
testb
ds
imul
inc
insl
sbb
dec
addr16
outsl
test
mov
cmpb
jo
mov
push
sbb
and
cli
addr16
sbb
sbb
add
mov
adc
push
xchg
add
add
out
inc
fsubrl
inc
shrl
mull
scas
xchg
push
mov
shlb
jle
cmp
pop
cmpsb
or
add
daa
xchg
sub
cmp
adc
sub
outsl
or
mov
mov
je
enter
mov
ret
push
mov
inc
sub
mov
inc
rcrb
les
das
inc
fmull
push
aas
ljmp
mov
mov
adc
scas
outsl
mov
adc
mov
xlat
mov
lret
loopne
adc
adc
je
push
mov
in
pop
clc
xchg
xor
out
clc
sub
addl
dec
and
dec
sbb
cmc
mov
inc
jns
out
fimull
jae
ljmp
or
cmc
jmp
dec
test
shl
adc
dec
cmpsb
test
in
jne
adc
rorl
lods
mov
or
mov
inc
fsubrp
pop
lret
ficomps
out
xchg
and
adc
orl
out
push
mov
fcomps
aam
pushf
inc
fildll
clc
stos
jne
jnp
repnz
mov
andb
xor
push
mov
push
xchg
adc
fwait
adc
inc
les
ljmp
fimull
or
pop
rol
push
cmp
sahf
mov
push
add
mov
or
enter
push
adc
test
push
std
pop
mov
and
push
lds
ljmp
rorb
or
xchg
outsl
mov
test
aad
xor
ja
jecxz
nop
out
inc
cmpl
inc
pushf
sbb
or
ljmp
lret
rorb
and
adc
fadds
mov
lahf
sub
jmp
mov
jecxz
ja
adc
push
dec
pop
rolb
push
sbb
outsb
mov
push
jl
dec
sbb
pop
rclb
out
sub
xchg
cmp
out
sbb
push
divl
and
pop
inc
jg
outsl
data16
mov
mov
mov
sbb
dec
imul
or
ljmp
loopne
xor
sbb
inc
sbb
adc
outsl
push
push
stc
jnp
add
push
movsb
xchg
xchg
stos
push
sbb
jmp
or
pop
out
mov
push
pusha
dec
sti
mov
fwait
movsb
es
out
test
cmp
inc
movsl
stos
pushf
fstps
push
inc
shll
stos
xchg
jge
xor
insb
jno
loop
jae
jle
mov
sub
pop
std
flds
and
adc
clc
xor
sbb
lods
out
adc
push
rclb
xor
scas
jnp
inc
outsb
loop
aad
mov
sub
std
pop
dec
cmp
out
mov
push
sub
push
xchg
mov
add
adc
lea
mov
ja
push
nop
inc
addr16
jmp
sub
and
adc
sbb
sbb
mov
push
movsl
and
mov
pop
test
add
aam
jle
js
push
xchg
mov
pop
add
mov
sbb
xchg
cmp
icebp
mov
add
jle
ljmp
or
out
in
pop
adc
arpl
mov
scas
gs
testl
push
daa
mulb
out
ja
push
fimull
fwait
dec
out
lret
mov
js
sub
jmp
adc
xchg
sbb
into
jmp
inc
mov
inc
xlat
arpl
mov
movsb
test
and
pop
xchg
push
mov
xchg
out
ja
lods
push
aaa
sbb
fwait
sub
repnz
addl
addl
testl
imull
push
addr16
cli
mov
ret
lcall
cmp
scas
test
jmp
mov
insb
cmpsb
fsubrl
jnp
mov
outsb
call
fidivs
xchg
cmp
test
insl
fisubs
inc
mov
add
loopne
scas
sbb
cltd
or
les
cmpsb
mov
mov
add
in
sub
mov
aaa
xchg
int3
cmpsl
adc
sbb
mov
js
or
xchg
fdivs
stc
jecxz
mov
xchg
sti
cli
mov
popf
cli
pop
pop
push
and
fstpl
cli
jecxz
mov
push
out
xchg
xlat
and
cmp
out
scas
push
sbb
push
mov
bound
test
jp
repnz
cmc
iret
pop
loopne
inc
daa
adc
mov
jge
cmp
sub
xchg
in
xor
add
mov
shlb
adc
xchg
test
out
cli
rcl
mov
xor
add
inc
pop
or
sub
and
int
rcrl
mov
lret
pop
or
add
cmp
mov
cmpsb
and
push
divw
xchg
mov
repz
add
dec
add
lcall
mov
jns
mov
or
movsl
aad
mov
jno
add
test
in
or
aaa
popa
add
mov
cmp
xchg
ds
mov
int
and
sub
mov
xor
jge
imul
fs
pop
hlt
sti
adc
dec
test
xor
scas
shlb
and
pop
test
aam
ja
and
adc
mov
add
sarl
in
int
outsb
inc
js
popa
dec
js
or
test
test
insb
xchg
push
push
sbb
jmp
popl
push
dec
test
sbb
lods
aas
cmp
rcr
loopne
inc
push
in
jecxz
pop
jae
push
ror
aam
hlt
dec
and
add
int3
loop
push
mov
pop
cltd
push
and
rcrb
leave
xor
inc
xchg
addr16
sub
dec
push
inc
jle
or
and
xchg
and
push
jp
sbb
xor
cmp
mov
daa
lods
ds
mov
in
mov
xchg
dec
aaa
or
add
jnp
mov
xor
or
clc
aad
mov
push
es
add
adc
bound
rcr
add
dec
push
push
sub
nop
pop
cld
stos
add
adc
lock
das
das
cmp
jmp
ljmp
pop
les
xchg
pop
testb
jne
repz
jge
and
in
popf
adc
rolb
inc
push
add
add
adc
popaw
mov
add
mov
enter
sub
cmp
into
inc
pushf
mov
lret
mov
hlt
lods
xor
mov
cmc
sub
nop
jbe
mov
add
jge
sahf
xor
and
ja
hlt
filds
test
pop
pop
pop
mov
inc
aaa
sahf
jmp
ss
cwtl
push
push
pusha
inc
cmp
dec
out
dec
lret
stc
ficoml
push
aaa
lret
pop
test
or
xor
dec
aam
orl
or
jg
dec
stos
lods
sub
jae
pop
dec
out
fmuls
mov
push
call
and
push
push
or
inc
in
das
movl
mov
out
inc
lods
push
jne
lcall
jne
icebp
mov
gs
icebp
dec
aaa
sbb
add
inc
js
test
jne
inc
cmpb
decb
fnstsw
dec
stos
dec
aas
mov
cli
mov
popa
mov
lahf
stos
cmp
cmp
inc
mov
xor
sub
fnstcw
lret
xchg
and
sahf
aam
cmp
jne
cmc
cli
arpl
mov
leave
mov
imul
fildl
jbe
outsb
push
shll
sub
inc
xchg
mov
or
jle
and
sub
popf
fldcw
das
inc
mov
xchg
enter
inc
stos
ficompl
or
scas
xchg
push
sub
inc
aad
jg
sbb
jns
and
fildll
cmpsl
popa
cmpsw
sub
xchg
mov
enter
pop
inc
fs
dec
sub
jo
pushf
adc
dec
into
repnz
mov
jo
pop
cmp
mov
icebp
xchg
addr16
lret
xchg
push
nop
cltd
adc
inc
outsl
fmull
inc
xor
jge
inc
imul
push
lock
and
clc
outsl
cmp
iret
jp
xchg
and
aas
out
pop
pop
hlt
xchg
and
aam
push
ss
int
push
mov
insb
sub
mov
adc
ja
push
pushf
sub
mov
fnsave
enter
cli
cmc
sub
in
jl
jo
out
mov
nop
jg
jecxz
sbb
rcr
push
jmp
dec
out
enter
xchg
dec
add
shll
jl
jle
popa
inc
xor
es
ljmp
pusha
sub
xchg
ljmp
sbb
lea
imul
pop
dec
lea
pop
add
push
iret
dec
mov
jne
jno
cmp
adc
call
jo
rcll
xor
push
push
je
dec
cld
out
adc
repz
std
enter
and
and
inc
mov
jg
add
xorb
in
and
loopne
repnz
cmpsl
leave
push
jmp
stos
ret
out
stos
push
mov
fistl
mov
shrb
inc
mov
dec
shlb
or
add
push
mov
rclb
bound
je
mov
and
pop
and
mov
dec
mov
outsl
fidivl
es
fbstp
das
aam
pop
xor
shl
cmp
pop
int3
xor
iret
jg
shll
mov
mov
mov
and
fsubp
fs
insb
pushf
add
movsl
push
into
inc
outsb
sbb
rol
rol
mov
mov
test
ja
cmp
mov
pop
dec
aad
mov
repz
and
andl
lahf
loopne
sbb
cmova
add
adc
push
out
sbb
leave
rcl
ret
repz
push
inc
scas
ret
ja
jae
out
roll
lea
jne
dec
xchg
repnz
pop
dec
ljmp
adc
outsl
add
scas
adc
outsl
f2xm1
adc
mov
xchg
adc
add
and
adc
mov
xor
imulb
inc
mov
mov
fwait
mov
mov
xor
scas
adc
mov
loopne
frstor
mov
mov
sbb
out
packsswb
mov
into
ficoms
inc
fdivl
stos
lcall
shrl
pop
imul
pop
test
sbb
in
lcall
rclb
mov
pop
jge
rcrl
adc
sbb
adc
sahf
stc
mov
sub
jo
js
out
daa
orl
mov
cmp
push
nop
int3
testl
sbb
insb
mov
push
add
into
insw
scas
jnp
jne,pn
push
sub
pop
iret
lock
nop
or
scas
xlat
icebp
sub
test
jnp
ficoml
popf
xor
out
int3
xchg
jns
mov
sbb
lock
ficompl
jg
push
jno
bound
lds
jge
es
mov
pop
jnp
xchg
add
dec
pop
pop
fidivs
push
je
and
and
aaa
insl
add
std
dec
nop
fnsave
push
mov
push
clc
and
ret
fptan
cmpsb
jecxz
cs
rolb
add
fmul
aaa
into
js
push
push
xchg
inc
rorb
jge
popf
std
test
int3
or
or
mov
xchg
cwtl
xor
mov
mov
lea
data16
fstl
or
pop
sub
xor
nop
insl
paddb
mov
shl
ret
add
cmpsl
pop
in
pop
adc
sbb
cmp
xchg
mov
cli
popf
mov
iret
pop
dec
ljmp
cld
push
mov
sub
in
je
push
xlat
xchg
scas
cmc
pop
out
ret
jo
cli
jne
icebp
adc
sarl
jge
icebp
or
push
mov
int
push
ss
test
stos
fs
testb
lret
jecxz
int
adc
jns
fs
push
shl
mov
arpl
inc
testb
xchg
ret
rcrb
jno,pt
push
sub
shl
cli
mov
inc
mov
mov
mov
mov
and
xlat
outsl
xchg
dec
int
cmovo
push
mov
sbb
sbb
ret
inc
cwtl
stc
cmpsl
xchg
lods
mov
push
stos
jecxz
out
std
out
loopne,pn
push
dec
push
xor
jae
or
and
mov
cmp
mov
pop
cmp
shr
xor
xchg
out
dec
rolb
add
lock
out
and
mov
sbb
scas
sub
movsl
jg
fbld
jns
mov
test
daa
or
outsl
sub
lods
bound
xlat
out
das
push
ret
sbbb
dec
addl
movsb
jecxz
or
pop
scas
mov
sahf
loopne
cld
mov
mov
adc
es
out
test
mov
addl
mov
rcrl
and
xor
jp
push
push
push
push
insb
jns
lds
sub
sub
sbbl
jmp
fiadds
xchg
in
cwtl
pop
adc
int3
or
jns
dec
or
dec
mov
aas
aaa
dec
xor
imul
shlb
dec
cmpl
mov
cld
inc
cltd
inc
dec
cmc
rcrl
gs
jl
xchg
mov
rorl
adc
jge
addb
dec
add
adcb
lods
adc
popl
mov
rcr
add
push
adc
inc
mov
pop
adc
sbb
sub
mov
xchg
popf
push
mov
and
xchg
inc
xchg
pop
cld
arpl
fwait
ja
out
push
lods
ss
leave
and
and
sbb
int
adc
mov
popa
adc
sbb
icebp
fwait
popa
add
xchg
jns
jmp
bound
roll
mov
arpl
shll
or
out
jge
fdivrp
rcll
lret
and
jo
jo
fdivrl
jb
roll
dec
mov
dec
push
pop
cmp
jecxz
ret
mov
adc
mull
adc
daa
push
or
cmp
adc
push
arpl
push
xlat
les
lcall
ret
prefetch
mov
pop
jns
xchg
pushf
jl
jbe
jecxz
scas
pop
fcom
hlt
movsl
xor
iret
out
cwtl
movsb
xor
push
xchg
sbb
sub
mov
mov
push
dec
xorl
roll
adc
mov
scas
pop
dec
mov
je
into
or
xchg
test
out
xchg
fstps
fstpt
and
inc
adc
loop
das
mov
aad
scas
mov
mov
ja
sub
and
enter
iret
xlat
test
push
pop
mov
xor
fisttpll
iret
adc
inc
jno
xor
sti
in
lret
repnz
addl
jmp
arpl
arpl
mov
jle,pt
out
or
xchg
jbe
aam
test
mov
dec
jo
mov
incl
sbb
dec
outsl
sbb
mov
outsb
aam
stos
or
adc
and
jno
pop
call
add
cmc
or
mov
xchg
sar
pop
sub
sub
xchg
aam
cmp
cld
fwait
in
push
loope
movlps
mov
mov
cli
inc
rcr
mov
dec
out
nop
test
cld
inc
insl
call
or
lcall
cmp
cld
aas
cs
ret
ljmp
fnstenv
fmuls
add
jbe
mov
imul
mov
lret
push
std
adc
scas
adc
pop
pop
cltd
jp
into
test
add
fdivrs
je
fnstcw
fmuls
ret
push
fsts
push
es
stc
pop
loope
or
sub
mov
inc
sar
loop
popf
cmpsb
push
sbb
fucomi
out
call
sbb
incb
int3
push
movsb
lcall
push
idivb
stc
or
out
cmp
movsl
loope
enter
ja
stc
scas
push
and
call
mov
xor
add
and
mov
add
pop
jge
and
adc
pop
nop
push
adc
pop
adc
fmull
add
cwtl
icebp
sbb
or
out
or
mov
cwtl
dec
test
iret
inc
push
mov
in
sub
mov
int3
lea
scas
push
scas
stc
push
xchg
leave
and
mov
push
dec
cmp
add
jl
pop
imul
jno
fs
inc
incb
out
inc
dec
push
stos
dec
pop
aad
adc
lret
leave
into
cwtl
xor
addb
mov
andb
dec
mov
dec
bound
insl
dec
dec
sbb
loop
jl
sub
jmp
jge
jne
mov
aam
inc
int3
add
xchg
test
and
sbb
cld
aam
fxch
lods
int3
mov
fmull
pop
push
add
mov
cmpsb
mov
mov
push
test
and
subl
mov
out
sub
mov
mov
xchg
mov
and
stc
js
and
add
lahf
push
pushf
adc
and
or
adc
add
leave
adc
cmpl
enter
stc
mov
leave
and
cmp
ret
cmp
mov
mov
xor
arpl
inc
push
inc
inc
into
idivb
sar
mov
adc
daa
jp
mov
lahf
test
sub
iret
and
dec
jp
movd
inc
adc
es
xor
inc
testb
push
jae
xor
adc
and
es
nop
jg
jle
add
es
jns
addb
and
xor
rolb
xchg
stc
test
hlt
and
push
sbb
test
shl
jle
test
ret
xor
mov
xchg
dec
sub
icebp
sahf
cmp
xor
dec
xor
adc
dec
mov
add
push
inc
in
es
sbb
bound
or
es
adc
mov
add
lods
nop
and
push
in
or
xchg
inc
test
sbb
mov
sub
mov
pusha
or
mov
mov
addb
cltd
xor
es
test
test
sbbb
jg
lds
mov
xchg
sarl
ljmp
stos
ds
icebp
or
inc
xor
xor
test
out
xchg
push
ret
je
mov
test
ja
and
and
push
ror
and
and
dec
dec
mov
nop
jmp
out
test
imul
and
jmp
sub
inc
cmp
insl
int3
subb
or
subb
push
std
faddl
lea
test
xor
or
cmp
test
xchg
std
pop
enter
test
adc
in
inc
inc
lods
inc
cmp
nop
pop
mov
icebp
in
insb
xor
jmp
adc
xchg
inc
and
les
mov
push
and
sbb
adc
and
and
addb
mov
stos
xorb
or
mov
mov
popf
test
mov
cmp
lcall
push
test
and
lahf
repnz
push
and
xor
xor
cmc
cmc
sbb
nop
mov
adc
dec
xor
xchg
push
inc
push
mov
out
fistpl
ret
enter
xchg
mov
adc
dec
cmp
pop
adc
or
mov
push
xlat
jns
shlb
dec
dec
mov
or
orb
or
inc
dec
sbb
cld
xor
adc
lcall
shll
or
xor
cmp
insl
xchg
adcb
dec
aas
fadds
push
pop
out
and
cmpl
push
dec
xchg
test
and
test
fdivl
sahf
test
push
sbb
pop
mov
jmp
and
orb
les
jmp
call
dec
insb
or
dec
and
and
inc
mov
mov
stos
sti
xor
xor
sub
xchg
add
arpl
mov
inc
sbb
mov
or
jae
lcall
push
and
shrl
sub
xchg
inc
xchg
xor
inc
mov
in
pop
lods
test
inc
adc
pop
xchg
mov
xchg
fisubrs
and
mov
jmp
cwtl
test
nop
nop
pop
xchg
in
jns
loop
jne
out
lret
jns
jo
jmp
cs
ds
fnsave
dec
out
cmp
xchg
pop
decb
jle
js
cwtl
lds
cmpsb
xchg
adc
and
repnz
jae
adc
stos
and
mov
pop
jle
cmp
or
add
cmp
clc
and
xor
idiv
pop
mov
and
xor
and
or
mov
jbe
inc
mov
and
popa
pop
pop
jne
push
mov
dec
pop
ljmp
imul
or
pop
pop
push
insl
cwtl
mov
pop
fnstsw
push
mov
cmovg
rcrl
cmp
inc
das
les
test
cld
repnz
jne
insl
aad
sub
mov
dec
into
mov
dec
xchg
rol
xchg
mov
xor
jge
push
add
and
ljmp
xlat
mov
mov
inc
mov
incl
cmovs
mov
in
xchg
pusha
nop
xchg
pushf
push
add
pop
xchg
daa
mov
mov
jns
cmp
sar
add
ja
dec
cmp
inc
or
jns
mov
mov
pop
dec
aas
mov
sti
push
cmc
or
jnp
xor
ja
lods
icebp
enter
arpl
push
jge
sbb
mov
add
mov
mov
nop
hlt
aaa
add
xor
out
push
lahf
sbbl
aaa
add
pop
iret
push
lcall
scas
mov
stc
shl
out
add
sbb
int
mov
mov
or
iret
insl
jmp
inc
cmpsb
stos
mov
ljmp
fidivl
das
jg
pop
push
lahf
sbb
jnp
dec
pushf
adc
in
adc
ror
fnstcw
pusha
push
stos
add
cmp
shrb
push
lahf
into
pop
mov
int3
mov
mov
lods
mov
push
movsb
out
push
fcompl
or
leave
xchg
push
mov
mov
mov
std
mov
xor
inc
mov
jl
xchg
sub
xchg
stc
popa
mov
mov
jmp
pop
test
push
push
les
mov
test
mov
ffreep
xor
bound
rcrl
arpl
pop
inc
movsb
clc
sub
les
sbb
mov
or
inc
jne
cli
frstor
xchg
pop
adc
mov
lahf
in
pop
push
mov
cmpsb
pusha
adc
adc
xlat
xor
xor
mov
in
in
xor
out
adc
adc
lret
cmp
sub
shll
push
mov
jge
jle
xchg
out
cwtl
mov
cmp
mov
arpl
movl
mov
aam
call
add
stos
imull
sbb
and
lods
cmp
pop
sahf
dec
jecxz
mov
xor
pop
jmp
pop
sub
and
push
movsl
mov
push
add
repnz
xchg
hlt
xchg
lea
fsub
inc
out
shlb
scas
mov
test
pop
repz
mov
call
repnz
adc
cld
pop
jo
sub
imul
mov
and
xchg
pop
adc
fs
in
ret
or
pop
inc
cmp
cmp
imul
test
pop
mov
shrl
je
dec
push
pop
inc
xlat
dec
mov
shll
roll
repz
mov
js
test
add
and
shll
stos
dec
mov
lret
xchg
addl
jp
or
insl
cmpb
movsb
push
jg
stos
sbb
rcll
test
cmc
test
pop
pushf
push
or
pop
sub
mov
cmpsb
cmp
es
cmp
les
or
mov
fs
cmp
fistpl
mov
xor
adc
cli
mov
ret
lds
pop
aaa
cmp
cs
dec
sbb
shl
cmovnp
jle
js
mov
mov
cmc
scas
inc
fs
push
ret
pop
xchg
popf
into
xchg
cli
sub
cmp
fidivl
mov
mov
popf
idivl
cmp
add
scas
lahf
gs
pop
inc
sbb
fsubs
fs
fistl
jbe
mov
popf
sbb
test
fistl
xchg
in
int3
and
or
pop
cmpsl
loop
push
add
rcrl
rcrb
addw
pop
sbb
ljmp
push
adc
sti
pop
sbb
bound
sub
les
pop
push
push
mulps
iret
lahf
lods
or
inc
or
vpcmpeqd
repz
mov
loope
movl
fimuls
adc
repnz
testb
add
jg
out
popf
xchg
dec
ljmp
xor
arpl
arpl
adc
inc
sbb
outsl
sub
adc
popa
cs
stos
and
sub
mov
push
xchg
adc
ret
inc
pop
or
cmp
inc
push
pop
outsb
cmp
xor
xor
dec
pop
adc
dec
add
xor
das
iret
int3
into
enter
or
ds
and
and
sti
lret
daa
es
fbld
inc
out
mov
cmp
pop
dec
andl
xchg
sbb
mov
dec
imulb
fdiv
ljmp
push
adc
mov
mov
push
add
jg
jg
jbe
add
lahf
jmp
and
aaa
inc
and
inc
mov
and
mov
stos
jmp
add
and
push
cmp
jge
addb
sub
ret
push
cmp
jl
je
or
das
insl
mov
mov
inc
jae
inc
mov
js
scas
inc
popa
jge
push
movsl
adc
fsubl
stc
sub
push
cli
inc
adc
dec
jp
adc
dec
xchg
lret
add
lret
adc
pop
sbb
push
xor
sbb
push
inc
bound
mov
xchg
icebp
dec
cli
dec
xchg
xor
cmp
mov
mov
movl
add
add
pop
clc
enter
mov
loopne
out
and
pop
pop
xor
pop
andl
sbb
fwait
or
lds
roll
cmp
arpl
and
mov
add
pop
or
les
das
or
dec
jo
scas
lahf
jmp
stos
mov
cs
push
inc
stc
ljmp
fstpl
scas
mov
in
jb
cmp
mov
mov
nop
sti
sbbb
out
and
xchg
push
out
les
jmp
mov
ss
imul
adc
inc
cmc
lret
cwtl
clc
sbb
shlb
mov
sbb
aam
mov
call
mov
push
daa
stc
jo
aas
xchg
or
rorb
loope
mov
push
into
jo
repz
enter
loope
ret
rcll
stos
rcrl
adc
mov
jle
divl
pop
jg
sbb
sbb
rcrb
mov
test
insl
xor
mov
push
stos
adc
cmp
jecxz
sbb
xor
jecxz
lret
push
mov
stos
fst
dec
pop
clc
and
jle
mov
xchg
xchg
int
dec
lret
pusha
cli
lods
repz
sarb
jnp
ret
mov
add
add
jp
cmp
xchg
stos
mov
fbld
mov
loop
daa
or
aas
push
and
pop
mov
push
mov
pushf
sub
push
loop
pop
pop
addr16
mov
cmpsb
cmp
xor
or
adc
mov
mov
pop
mov
iret
dec
test
fistps
jo
dec
jg
sbbl
adc
in
adc
aas
adc
xchg
fisttps
inc
lcall
sbbb
sarb
inc
repz
lea
out
sbb
jns
adcl
ljmp
jmp
test
mov
insl
xchg
es
fs
loopne
mov
je
and
bound
push
icebp
jb
adc
arpl
ljmp
add
test
mov
lods
mov
jns
push
cwtl
inc
in
fld
sub
insb
adc
leave
push
add
or
inc
push
int3
adc
mov
mov
mov
push
inc
push
push
dec
aaa
adc
inc
insb
js
xor
add
enter
cli
xor
lahf
sub
or
or
dec
out
or
sub
inc
cmp
lcall
das
xchg
dec
fists
xchg
dec
adc
ret
sub
mov
adc
xor
mov
inc
cld
fldt
push
sub
movsb
jnp
hlt
sbbb
call
sahf
popf
sub
sbb
jg
test
loope
fsub
add
mov
mov
jmp
mov
mov
fsubp
mov
jge
notl
adc
mov
sbb
ljmp
lcall
push
imul
jb
iret
lods
or
xor
mov
mov
test
pop
cli
in
mov
and
dec
pop
pop
fucomi
vpsrlq
pop
mov
pushf
mov
mov
mov
mov
insl
sub
fistpl
cwtl
add
pmaxsw
jb
adc
add
cmp
and
jnp
dec
pop
aas
sbb
shrl
push
sub
push
adc
js
ret
ja
stc
sbb
rcll
movsb
mov
mov
in
mov
mov
test
out
and
jecxz
jg
add
imul
in
push
jecxz
fadd
fs
in
xchg
test
adc
inc
mov
mov
std
aam
iret
pop
imul
pop
mov
hlt
aas
sahf
sub
inc
enter
and
inc
clc
sbb
std
add
push
mov
xor
mov
cmp
jbe
pop
pop
pop
hlt
test
fnstenv
jg
out
push
mov
js
cli
mov
mov
push
sub
mov
mov
into
ja
mov
lea
mov
adc
add
mov
or
lods
mov
stos
ds
xlat
aad
add
cli
push
fcmovbe
loope
js
add
push
push
js
stc
inc
std
jb
bound
out
jb
xchg
loope
and
inc
fcoml
xor
sbb
mov
mov
push
and
or
fcmovnb
test
cwtl
insb
lret
iret
fnstcw
mulb
pusha
cmpsb
sbb
std
in
scas
mov
aas
sub
int
or
dec
fs
loope
and
rolb
hlt
imul
lods
jge
imul
mov
bound
mov
aad
pop
gs
jle
in
push
pop
adc
lahf
xchg
ds
das
or
jp
xor
pop
aaa
jge
jbe
pop
ja
shrl
insb
in
nop
rclb
cmpsb
pop
sbb
jno
outsb
adc
out
cld
push
adc
xor
pop
sub
jbe
stc
scas
mov
mov
sbb
pop
test
mov
add
dec
jmp
sbb
hlt
inc
and
lock
and
loope
jo
mov
adc
and
mov
add
aas
mov
or
adc
ds
rcrb
loopne
test
push
cltd
out
test
add
loopne
add
pop
movsl
shrb
push
sbb
shrl
xchg
inc
leave
aam
mov
lcall
out
mov
popa
subl
div
push
push
and
clc
cmp
mov
mov
je
xchg
mov
jl
pop
xchg
cmp
int
inc
pop
push
push
negb
loopne
xchg
xchg
xor
and
testb
mov
loop
addr16
aam
and
mov
mov
rcrb
daa
outsb
cli
fwait
dec
adc
enter
mov
adc
cmp
or
nop
push
mov
movsl
loopne
mov
fisubl
jo
or
and
in
stos
andb
fs
xchg
mov
pop
sub
lods
fldt
cmc
mov
enter
sti
mov
jg
sub
jb
add
test
push
and
nop
add
lahf
mov
cltd
popf
or
xchg
fcmovu
push
jb
mov
sbb
inc
jns
or
js
mov
jnp
pusha
test
gs
xchg
or
nop
and
sub
repz
mov
hlt
mov
sbb
mov
out
dec
cs
fsin
pop
in
jbe
sbb
xor
jp
sbb
sub
cmp
dec
pop
mov
shrl
cmp
outsb
enter
subl
fdivrl
addr16
pop
fwait
pop
or
inc
mov
dec
add
and
or
dec
and
pop
daa
and
mov
dec
popf
inc
call
push
jns
mov
mov
jmp
imul
xor
jae
pop
test
out
xor
mov
cmpsl
popf
pop
div
popa
xchg
cmpl
pushf
mov
frstor
stos
shlb
mov
mov
cmc
fiadds
out
mov
stos
aas
jno
or
clc
std
ret
fidivrs
sub
inc
mov
les
into
mov
mov
pop
pop
cmc
xchg
inc
scas
xchg
divl
inc
mov
lds
aas
mov
push
scas
mov
sub
mov
mov
add
ds
insb
or
subb
mov
in
mov
adc
pop
mov
imul
xchg
lcall
and
stc
jbe
xchg
into
mov
imul
pop
sbbl
gs
push
in
sti
xor
lahf
fprem1
ret
add
imull
ja
or
jp
jecxz
scas
add
pand
xlat
sbb
mov
dec
ficoms
das
rclb
icebp
imul
inc
xchg
push
ret
xor
add
cmp
imul
arpl
cmp
cwtl
push
inc
add
out
adc
pop
aaa
push
xchg
xor
pop
fldl
cltd
fs
sbb
jmp
push
xor
sub
or
pop
stos
cmp
stos
add
aad
mov
into
mov
les
jp
ret
in
daa
cwtl
mov
mov
xor
pop
adc
jbe
dec
xlat
aaa
inc
push
or
in
push
movsb
adc
inc
push
sbb
jo
popa
or
fldl
adcb
pop
xor
mov
test
push
inc
pushf
les
adc
fnstenv
sbbb
sbb
pop
sub
mov
inc
or
push
xchg
mov
and
or
js
lahf
push
sarl
push
adc
inc
es
stos
dec
pop
jae
movsb
sub
xlat
or
jp
mov
lock
and
loope
dec
test
inc
hlt
cmc
sbb
add
sarb
adc
mov
lea
rol
in
stos
rolb
cmp
stos
mov
sub
mov
adc
outsb
movsb
je
or
lcall
es
add
pop
mov
add
adc
or
and
push
adc
pop
inc
push
sub
and
and
jp
shlb
lods
lods
ss
pusha
dec
mov
repnz
pop
dec
and
jmp
iret
aam
addr16
das
ss
js
cmc
mov
enter
fidivl
adc
xchg
pop
push
andb
sbb
push
fsubs
inc
divb
out
stos
xor
daa
xor
mov
in
jnp
loop
adc
pop
sbb
and
mov
test
imul
fildl
iret
mov
jge
dec
ret
imul
add
push
mov
mov
test
lret
jo
push
fbld
pop
and
dec
jmp
lock
mov
adc
mov
repz
in
dec
cmp
jb
pop
xor
xor
push
inc
push
in
xor
add
push
enter
mov
insl
jp
dec
push
push
push
mov
cmp
int3
mulps
pop
push
aad
inc
testl
popa
shl
inc
not
sbb
stos
shrb
jno
orl
jmp
gs
mov
movsb
test
push
push
sbb
rclb
xor
and
inc
leave
xchg
cmp
jl
shlb
icebp
jns
int
inc
mov
popa
sub
loopne
stc
cmpl
shl
inc
int3
cmp
adc
movsl
dec
mov
mov
les
mov
pop
mov
andb
jns
mov
sub
cmc
lock
jle
dec
push
into
mov
ja
loope
stos
or
popl
movsb
aaa
es
fwait
out
push
sbb
xchg
inc
aam
or
add
dec
sub
subl
jp
mov
xlat
inc
jmp
movsb
xor
lret
push
test
aaa
xchg
push
jno
flds
aad
pop
and
mov
dec
add
or
fdivl
inc
shll
sahf
out
or
cmp
add
in
test
mov
mov
call
add
mov
adc
out
mov
fucomip
addl
ficomps
adc
ret
sti
pop
in
mov
cmp
rolb
out
inc
add
popa
mov
xor
fcompl
les
daa
cmp
insl
decb
nop
out
in
cmc
pusha
xchg
pop
inc
xchg
inc
sbb
mov
inc
xor
inc
mov
imul
or
push
aam
and
mov
test
or
icebp
mov
data16
mov
jp
rclb
or
mov
jnp
pushf
repz
push
pusha
cmpl
pop
xchg
inc
int
jnp
adc
shrb
mov
xor
mov
insb
shlb
inc
and
cli
adc
testb
pop
sbb
jne
fdivrs
xrelease
out
xchg
adc
push
adc
push
mov
loope
add
or
mov
fbld
jecxz
popf
scas
orb
nop
in
gs
pop
adc
adc
add
cmc
lods
lret
mov
sub
adc
push
xlat
cmpsb
sbb
mov
mov
jle
xor
mov
subb
daa
aaa
mov
add
or
std
push
adc
shrl
sahf
hlt
pop
inc
insl
cmp
mov
and
pop
mov
push
xor
ret
das
test
pushf
scas
inc
mov
jmp
cld
dec
in
imul
repz
jne
xor
sub
or
mov
pop
aam
adc
push
in
shll
cmpsb
pop
les
test
sbb
dec
sbb
adc
xchg
or
jle
lret
push
sbb
cmp
cwtl
jo
pop
lods
fadds
sbb
pop
cmc
sub
xchg
mov
lods
xchg
stos
insb
dec
dec
fcoml
xor
jl
fwait
xor
push
lods
lods
cmp
mov
hlt
cmp
xchg
orl
or
and
inc
int
add
pop
popa
popf
lret
mov
gs
adc
mov
push
sub
mov
dec
push
pop
push
jmp
mov
sbb
push
pop
sub
jmp
jnp
sub
cmp
inc
sbb
add
mov
pop
in
sub
and
movsb
stos
lock
jns
cmpsb
mulb
mov
enter
stos
push
sub
jl
dec
in
into
inc
add
inc
test
inc
stos
mov
mov
out
ret
dec
mov
popf
lcall
lods
xchg
in
mov
pop
popf
pop
pop
leave
jnp
fisubs
adcb
inc
mov
aam
push
mov
pop
fidivl
dec
push
xor
push
idivl
fwait
xor
cmp
in
sti
push
out
iret
divl
xor
dec
call
movsb
into
inc
mov
jne
or
mov
inc
gs
aas
mov
sbb
cli
xchg
pop
cmpsb
pop
xchg
gs
sbb
repnz
les
scas
sub
das
ret
mov
cmp
cld
out
inc
jne
inc
or
popf
and
pop
insl
popa
mov
fists
dec
xor
inc
or
addr16
test
jnp
addb
fsts
lahf
sub
adc
into
push
xor
sarb
add
aam
jno
daa
je
popa
shlb
sbb
sub
loop
mov
inc
cld
cmp
mov
jnp
loop
mov
hlt
sub
jne
call
fidivs
sub
pusha
stos
sbb
ret
mov
lret
pop
dec
push
addl
xor
jl
cmp
fcoms
mov
mov
xor
aad
imul
pop
and
inc
adc
mov
inc
inc
jno
push
or
inc
xlat
add
lret
push
mov
push
cmp
and
hlt
subl
outsb
pop
mov
jp
dec
bound
stos
mov
pop
sahf
xchg
mov
mov
pop
iret
aad
sahf
sub
xchg
adc
mov
ficompl
data16
push
mov
sbb
jb
jle
push
mov
mov
jecxz
inc
sub
scas
pusha
cmpsb
test
lret
mov
mov
jge
push
popa
ljmp
cmp
inc
mov
cmpsl
insb
bound
rcll
icebp
call
lret
cmc
fdivs
call
xchg
sbb
imul
jo
nop
mov
inc
mov
xchg
inc
push
dec
lret
bound
pop
stos
xchg
sbb
sahf
cwtl
xor
data16
pop
int
pusha
stos
call
mov
push
dec
das
inc
cltd
aad
outsl
jg
leave
add
sub
jg
push
sub
sbb
push
cmpsb
cli
jle
or
test
sar
jb
rcll
data16
cmpsl
xor
pop
arpl
push
lods
xchg
pop
repnz
push
xchg
ljmp
dec
outsl
enter
cmp
scas
add
jg
out
add
push
sub
sti
inc
adc
addr16
popa
in
movsb
pop
jge
dec
pusha
mov
jmp
or
and
ljmp
aas
cwtl
jns
fnstenv
outsl
je
fisttpll
and
call
lock
add
cmp
adc
mov
jns
call
mov
sbb
sub
xor
jae
in
pusha
dec
repnz
add
jl
out
push
or
xor
sub
aam
int3
std
push
mov
push
inc
push
jmp
stos
stc
sbb
movsb
into
sub
pop
xor
insl
movsl
out
data16
pmulhw
mov
stos
pop
lods
mov
je
inc
rol
rclb
sub
or
sbb
pop
and
adc
xchg
mov
les
jecxz
xchg
and
js
shrl
push
adc
hlt
and
xchg
gs
and
or
adc
jge
or
pop
and
add
xor
xchg
pop
push
sub
shrl
movsl
sub
pop
dec
ja
sarl
popf
out
dec
dec
arpl
mov
ja
mov
test
leave
lds
pop
test
fldt
loop
bound
jae
push
xor
int3
sub
xchg
xchg
fisubl
test
das
dec
inc
sbb
jbe
sbb
sub
nop
lret
test
shlb
out
jne
fucomi
jno
jns
push
fdivrl
or
cmc
rclb
mov
in
mov
or
and
jecxz
pop
sbb
sub
in
pop
cmp
jge
inc
xor
shld
sbb
jns
int
push
jmp
bound
and
lea
in
inc
xchg
jae
scas
lahf
cltd
adc
jne
pusha
gs
jb
push
push
pop
sbb
push
in
mov
adc
jno
push
xchg
adc
dec
mov
shrl
leave
dec
adc
stos
scas
movsb
in
jp
push
mov
jmp
das
dec
inc
sbb
jne
push
pop
loop
stos
bound
dec
mov
cmp
adc
xor
inc
push
xchg
fwait
lods
sbb
cmp
fidivrs
sub
subb
cltd
xlat
jge
dec
or
and
dec
cmpsb
lds
dec
push
mov
jmp
test
cmc
addr16
scas
clc
dec
add
sbb
adc
stos
jae
jns
shll
lock
scas
inc
repnz
movsl
cmp
jmp
mov
xchg
xlat
push
jb
adc
fcoml
inc
xor
sub
jne
or
add
inc
xchg
rclb
ficomps
inc
pop
aam
fmull
popa
fucomp
pop
fwait
out
xchg
out
pop
adc
sub
jg
sbb
ret
add
jbe
mov
jno
mov
fstpt
leave
pop
mov
cli
inc
mov
sub
repz
add
repnz
ret
add
and
xor
rclb
and
fisubs
dec
pop
xchg
pop
sbb
ss
arpl
inc
and
cltd
das
sti
lret
dec
cltd
pop
mov
add
cmp
idivb
mov
dec
stos
xchg
test
and
fisubrs
ss
dec
mov
push
outsb
fisubrs
xlat
arpl
push
push
lea
mov
push
lock
fimuls
pop
inc
insb
repz
test
mov
repz
sbb
push
mov
arpl
es
popf
popf
cs
xor
fnstsw
mov
ret
mov
mov
inc
and
ret
xor
jno
xor
out
add
inc
pushf
mov
dec
cmp
add
cmp
jbe
adc
pop
clc
or
ljmp
popa
fs
dec
adc
pop
xchg
mov
xchg
pop
filds
sbb
shll
insb
jge
int3
xor
or
adc
scas
xor
xchg
out
ret
add
mov
lret
out
and
lock
movsb
out
mov
outsb
pop
dec
call
loop
mov
dec
xor
jne
pop
cmp
lcall
inc
incl
xchg
cmp
inc
lea
mov
loope
in
mov
or
adc
inc
mov
mov
pop
iret
xchg
lock
push
push
mov
imul
out
stos
in
sub
xorl
pop
loop
sahf
fmull
xor
repnz
sbb
jnp
pop
add
bound
add
fbld
mov
shlb
loopne
pop
out
les
jno
sub
sbb
and
or
popf
fsubrs
xor
sub
std
daa
mov
add
add
pop
pop
mov
imul
dec
xor
mov
out
mov
and
les
dec
mull
mov
lds
fdivl
add
or
mov
mov
mov
jnp
lret
jecxz
lds
mov
jne
pop
mov
add
lods
sub
jmp
jg
push
inc
or
adc
pop
es
adc
cmpsb
pushf
fptan
fistl
mov
pusha
push
dec
cs
popf
pop
xchg
lahf
add
cmc
xchg
push
dec
xlat
jno
dec
mov
aaa
and
jo
sbb
bound
mov
add
movsb
mov
std
inc
hlt
push
popa
push
mov
aad
pop
cmpb
xchg
outsb
push
mov
cmp
inc
adc
cli
loop
xor
ja
pop
xor
shrl
sub
jl
imul
and
dec
mov
pop
loopne
scas
sbb
adc
ljmp
ret
adc
out
and
ja
mov
incl
jb
dec
jp
shl
mov
out
movsl
sbb
pusha
push
icebp
inc
cmp
cld
mov
shr
push
pop
push
or
hlt
mov
das
sbb
pop
in
mov
jmp
insl
add
mov
push
lret
int3
dec
inc
mov
pushl
push
adcb
loope
adc
jle
pop
push
adc
stos
xor
push
fdivrp
std
cli
movsb
mov
in
jne
add
movsl
adc
cmc
mov
aad
dec
mov
clc
ja
jg
roll
inc
shrb
sub
int3
loop
xchg
push
cmc
lds
gs
leave
insb
jb,pt
dec
popa
es
pop
cld
fisttps
movsl
addl
jmp
sti
sub
cmpsb
and
and
adc
insb
sti
ja
fsubrs
xchg
out
adc
jae
inc
push
mov
aam
dec
xor
xchg
mov
sbb
mov
into
gs
ss
pop
fmuls
cs
mov
fisttps
mov
aas
pop
jmp
aaa
nop
add
fs
or
mov
jne
test
or
frstor
xchg
imulb
add
mov
dec
das
shll
pop
pop
or
or
icebp
xchg
jmp
lret
jecxz
test
divl
sub
push
daa
and
pop
jle
cmpsb
in
mov
jb
jnp
sbb
push
push
stos
notl
fsubr
jl
pop
iret
fwait
je
cmpsb
inc
andl
xchg
mov
xchg
cmpsl
leave
das
mov
push
loope
jbe
cli
std
mov
mov
cmp
popf
pop
fwait
shll
rorb
ret
lahf
mov
pop
cmp
lock
cld
stos
subb
add
mov
rcrl
jo
rolb
mov
ja
sub
pop
mov
in
movsl
xchg
mov
ds
or
lahf
lock
xchg
push
iret
sbb
pusha
push
add
out
ja
cli
push
test
push
mov
adc
hlt
sbb
aas
pop
nop
scas
fsubrl
fldenv
mov
into
pop
lods
lret
bound
dec
sub
cmp
flds
sbb
add
add
or
adc
or
inc
adc
push
mov
int
cs
fdivl
rcll
shl
push
nop
inc
les
stos
sub
sbb
cld
push
bound
sbb
cmpl
pop
add
out
pop
lahf
ljmp
mov
push
rcrl
mov
mov
rorl
loope
and
xlat
add
adcl
jle
sbb
sbb
pushfw
sbb
or
ss
clc
mov
inc
inc
es
xchg
insl
dec
adc
stos
aas
dec
decb
mov
imul
xchg
push
dec
sub
test
pusha
adc
pushf
push
mov
std
out
rcll
pop
mov
sub
inc
push
ret
sub
mov
fsubl
iret
sub
mov
xor
cmp
and
repz
das
pop
jns
leave
xorl
fstpl
sbb
or
cmc
daa
sub
adc
add
icebp
nop
sub
shl
pop
push
enter
jmp
ja
jae
and
loope
adc
subb
scas
les
mov
cmp
push
inc
idiv
test
jmp
pushl
add
push
mov
dec
ja
insb
mov
and
mov
mov
dec
sbb
add
int
pop
pop
fcmovnb
enter
inc
scas
inc
ds
mov
sub
jne
mov
sub
insb
hlt
sub
mov
iret
cltd
out
outsb
nop
imul
add
ret
xchg
xor
bound
cmp
cmp
aaa
ret
movb
lock
pop
push
pushf
xor
cmpsb
adc
adc
push
cmp
mov
push
or
jp
gs
test
ljmp
ds
pop
lea
push
daa
dec
mov
dec
adc
or
out
rorl
xor
fildl
sub
sbb
dec
pop
mov
idivb
cs
mov
aam
jns
cwtl
mov
out
pop
or
mov
sub
mov
mov
push
int3
jbe
lcall
insb
mov
xchg
loopne
popf
and
test
in
jmp
imull
cld
jg
jne
into
inc
cmp
pop
cmpsb
or
or
or
push
lret
dec
and
call
add
jp
jns
xor
jo
or
push
movsl
imul
adc
mov
add
test
mov
jmp
loop
scas
mov
test
sahf
rolb
rclb
rolb
xchg
lahf
xchg
mov
inc
rolb
mov
popf
push
scas
cmp
push
mov
dec
lahf
pop
fst
scas
mov
add
mov
jno
fstps
outsl
sbb
pop
out
push
add
jae
lret
lahf
lret
sub
nop
jecxz
sbb
out
dec
sbb
movsl
mov
and
sbb
addb
adc
adc
sub
ror
add
adc
in
ret
cltd
hlt
mov
iret
jae
gs
inc
repz
rcrb
mov
test
lret
or
jns
js
fists
sbb
ljmp
xchg
leave
call
ljmp
stos
push
aad
mov
pop
mov
add
and
arpl
add
ljmp
aam
out
int
aad
cmp
jmp
cmp
lods
lret
pop
mov
mov
or
push
in
xchg
mov
in
add
sub
cmpsl
add
mov
mov
push
test
pop
sub
outsl
ret
ja
jle
jl
sbb
adc
mov
sbb
es
sahf
outsb
test
lcall
xchg
or
iret
pop
sbb
pop
mov
fldl
roll
mov
out
sbb
xchg
daa
and
mov
test
loope
xchg
mov
xchg
out
xor
push
out
jmp
aaa
in
movsl
idivb
sbb
gs
sti
push
ret
adc
jnp
and
into
ret
aad
sbb
int
add
mov
or
push
xchg
inc
jne
push
inc
mov
xchg
inc
jl
push
or
xchg
jbe
push
dec
xor
pop
cmc
ljmp
lods
call
out
icebp
out
addr16
jbe
push
jns
aaa
or
or
fiaddl
mov
push
loope
pop
cmc
fxch
or
lret
mov
test
repz
cmp
cmp
push
xor
lods
adc
sub
in
xchg
pop
hlt
pusha
sub
jge
pop
pop
xlat
xchg
xor
repz
loope
mov
and
jno
jb
bound
sarb
and
push
aaa
xor
pop
add
sti
popf
sub
and
adc
cmpl
xor
fistpl
mov
jnp
xor
push
sub
testl
rcrl
cmp
mov
push
std
call
cmp
push
sub
cmpsl
sub
ja
out
push
inc
movsb
adc
nop
scas
test
sar
mov
mov
push
lock
xchg
data16
fcmovne
mov
roll
cvtdq2ps
dec
mov
add
out
into
inc
dec
mov
lods
sub
cmp
adc
imul
xchg
pop
lahf
test
push
mov
cld
sbb
das
dec
jno
add
shr
imul
outsl
and
jg
pusha
and
sbb
adc
mov
push
test
or
xchg
lods
fwait
sbb
pop
push
mov
leave
sub
ja
cmp
xorb
pop
in
aaa
decl
inc
ret
adc
dec
inc
push
aas
int3
insl
divb
aas
sub
test
add
mov
or
mov
pop
pop
mov
dec
dec
aam
inc
divl
faddl
aaa
xchg
inc
les
adc
mov
lcall
mov
int
jb
ljmp
pop
xor
hlt
sub
in
lcall
loopne
outsb
orb
scas
inc
jnp
test
sub
mov
inc
movsl
push
push
sub
sub
lock
or
dec
jbe
sbb
xchg
test
cs
daa
pop
das
inc
pop
cmpsb
ja
jne
ret
adc
push
or
inc
gs
out
das
add
sub
cmp
repz
adc
mov
add
pushf
shrl
fnsave
or
int3
ret
dec
jne
mov
cwtl
in
cmpsl
fidivrl
jle
jmp
jle
lds
ds
inc
loop
hlt
lock
nop
push
gs
cmp
xlat
outsb
mov
pop
sub
jmp
bound
out
dec
sub
lcall
push
mov
adc
in
pop
aad
push
mov
and
and
out
ljmp
mov
outsl
pop
stc
clc
lods
sub
mov
test
cwtl
inc
dec
lods
sbb
aad
in
xor
mov
dec
pusha
clc
or
adc
push
xchg
xchg
push
fwait
sbb
cltd
mov
sbb
lods
repz
ret
and
pop
pop
inc
jp
ret
mov
add
dec
mov
xor
push
and
mov
jmp
cwtl
xor
arpl
mov
cwtl
pop
rcrl
jb
test
push
lds
les
mov
cs
shll
xchg
cld
dec
bnd
pop
push
sbb
repnz
xchg
jmp
inc
jl
lahf
out
sbbl
xor
fistps
pop
addl
inc
fistpll
push
cmpsb
fadd
es
shr
or
das
pop
sbb
xchg
shrb
and
or
inc
dec
xor
jb
in
out
jo
jmp
adc
push
push
jecxz
sub
pop
ss
test
pusha
cwtl
out
ret
push
sub
lret
xor
pop
xor
push
aam
call
mov
test
inc
sbb
pop
xchg
in
nop
nop
nop
ljmp
mov
sbb
adc
nop
ss
imul
subl
sahf
mov
shlb
mov
and
pusha
loop
jle
stos
inc
cmc
fbstp
pop
pop
add
mov
sbb
push
sarl
mov
fsubl
enter
mov
cli
repnz
cltd
in
xchg
into
xchg
cmp
mov
fldcw
inc
cmp
repnz
int3
addb
andb
adc
enter
mov
sub
fldcw
jmp
das
pop
sbb
in
jbe
fs
aam
jmp
stos
sti
xchg
fwait
dec
hlt
jne
cli
out
push
shl
mov
pop
xchg
rcrb
pop
push
je
test
jl
in
in
adc
scas
push
movsb
adc
movsb
ret
addb
pop
or
or
jb
ret
xchg
xlat
mov
add
mov
cmp
adc
add
sub
mov
fstps
and
add
and
test
or
or
stc
pop
dec
mov
inc
pop
out
sub
in
in
adc
popl
dec
pop
lea
mov
inc
dec
sbb
lods
movsb
xor
sbb
lods
ror
cmp
lods
pusha
cmp
add
xchg
insl
pop
fdivr
std
adc
sbb
es
pop
addr16
sbb
xor
cmp
lcall
or
xor
push
pop
mov
and
xor
incb
jo
es
push
movsb
push
popf
out
add
jge
add
arpl
sub
lret
dec
xchg
jl
cmpsl
popa
push
adc
pop
ss
shlb
push
mov
jae
or
fadds
ficomps
jg
std
lods
mov
mov
mov
sti
jnp
and
jecxz
in
clc
adc
xchg
cmpsl
outsl
loop
cmp
loope
shrb
daa
inc
testl
fdivl
mov
add
andl
pop
lahf
pop
cmpsb
push
mov
mov
mov
mov
lds
pop
jecxz
mov
sbb
xchg
mov
mov
loopne
sbb
lods
mov
sub
insl
jg
leave
sbb
ja
scas
mov
mov
sbb
movsl
add
jle
std
int3
xlat
mov
push
repnz
sbb
js
icebp
mov
iret
add
ss
fistps
and
xchg
mov
das
mov
push
aaa
xlat
cmpsl
loopne
mov
mov
enter
test
addl
std
cmp
xchg
imul
and
dec
das
imul
roll
add
jp
pop
jo
jecxz
xor
mov
fidivs
sub
sub
fidivl
mov
xchg
or
outsb
js
xor
mov
in
mov
insl
lahf
mov
insb
pop
stos
adc
inc
inc
arpl
mov
iret
scas
das
adc
stos
adc
fbstp
xchg
movsb
fsubl
push
push
aad
mov
adcb
xchg
pop
push
pop
pusha
out
insl
fcmovb
adc
into
push
popf
imul
fstl
lret
dec
add
pop
lds
mov
xor
inc
cmpsl
dec
xor
xor
or
push
jbe
movsb
adc
pop
or
ljmp
outsb
call
adc
xchg
adc
mov
mov
xchg
xor
test
out
std
mov
mov
movsb
jno
lods
or
addl
in
cwtl
mov
scas
xchg
test
dec
mov
out
or
mov
popa
movsl
hlt
cmp
mov
dec
ss
ret
in
sub
push
jae
adc
fisubrs
or
cmp
mov
add
loopne
test
scas
xor
sub
sbbl
add
adc
out
add
push
int3
adc
inc
add
int
xchg
jae
jge
push
int
test
icebp
mov
push
jecxz
mov
arpl
xor
out
mov
xor
test
pop
mov
cmp
popf
popf
adc
jne
dec
xchg
lods
mov
mov
loopne
xor
dec
cltd
ret
fs
add
bound
sbb
ret
pushf
xor
cwtl
mov
pusha
pop
ljmp
jae
pusha
lods
int3
insl
sub
push
rolb
in
sahf
pop
inc
mov
nop
and
push
jge
and
and
addr16
dec
leave
add
rolb
imul
test
dec
and
imul
cmpsb
imul
popa
test
jae
jb
insb
xchg
insb
js
adc
pop
nop
mov
loopne
dec
inc
pop
bnd
push
inc
sbb
push
sbbl
icebp
sbb
adc
and
add
xchg
icebp
into
mov
ja
sbb
and
adc
test
push
cwtl
les
jmp
es
jmp
and
push
push
fcomps
rcrb
cmc
std
sub
push
mov
mov
addr16
int3
enter
loop
data16
add
sahf
shrl
or
adc
dec
shll
jno
dec
shl
loope
add
es
int3
nop
lods
mov
sub
test
adcl
xchg
jecxz
movsb
mov
shll
pop
test
repz
mov
push
mov
test
sub
ljmpw
push
cmp
ss
inc
fs
xor
pop
js
subb
xchg
add
pop
jmp
lret
lcall
dec
sub
dec
xor
out
push
repz
xor
push
inc
mov
mov
cmpsb
pop
sub
adcb
les
mov
cmp
push
push
fisubl
loop
rcrl
cmpsb
sbbb
adc
inc
mov
jo
jo
stc
push
std
mov
pusha
push
test
dec
add
sbb
incl
xchg
mov
mov
dec
shrb
jmp
stc
stc
adc
jo
les
inc
insb
cmp
daa
xchg
in
rcpps
loop
xor
sti
jp
shlb
rclb
xchg
xlat
jmp
sub
ds
and
lods
lods
push
popa
sub
pop
cltd
mov
push
inc
and
mov
lock
push
enter
fwait
stos
dec
dec
push
outsl
imul
xchg
xor
add
push
test
mov
dec
push
adc
dec
fs
adc
dec
in
and
xchg
fwait
jno
push
push
adc
std
sti
out
push
movsl
xchg
ret
ret
jo
ljmp
jb
push
mov
pop
mov
inc
lods
mov
sbb
mov
movsb
out
xchg
cmp
or
or
mulb
dec
or
lds
cwtl
jle
and
fstpt
shrb
mull
dec
xchg
or
or
pop
adc
xchg
inc
bound
icebp
test
mov
stos
ljmp
jp
xchg
jne
mov
sbb
pop
insb
push
mov
adc
stos
jmp
push
ja
daa
fsubrs
fcomp
mov
xor
push
rcll
push
push
inc
push
bound
nop
test
jg
fnstcw
sub
pop
das
inc
add
push
adc
adc
jg
cmpl
inc
jb
icebp
pop
icebp
pcmpgtw
or
mov
push
mov
pop
int3
jne
inc
repz
vcmppd
jmp
cmpsl
aas
dec
inc
jecxz
movsl
inc
pop
mov
in
ret
sbb
mov
cs
inc
push
test
adc
adc
push
add
jne
pop
adc
mov
xor
rclb
push
out
xchg
fldl
push
mov
ljmp
push
adc
dec
aaa
mov
out
cmp
stos
js
jp
bound
xor
hlt
mov
aaa
inc
inc
mov
jge
daa
inc
mov
or
mov
shlb
jo
mov
cmc
lea
mov
mov
lock
xor
pop
push
and
inc
inc
mov
or
jl
mov
movsb
or
insl
mov
pop
mov
scas
es
mov
push
lcall
sbb
or
cld
out
push
pop
sbb
jp
mov
cs
ljmp
push
xchg
fxch
xchg
xchg
jne
loop
push
jle
xor
ss
mov
fbld
dec
cli
push
xorl
stc
or
jne
loope
cld
pop
or
and
mov
in
ljmp
popf
xchg
mov
lods
call
ljmp
leave
push
adc
stos
loop
stc
sahf
stos
sbb
push
cmpl
mov
fcoms
imul
dec
jb
dec
cmp
xlat
fistpl
dec
jbe
xchg
mov
mov
lods
rclb
inc
push
push
and
adc
and
outsb
and
xchg
xchg
xchg
lret
pop
push
and
mov
mov
subl
clc
cli
push
jmp
cmpsl
push
pop
fmull
cmp
lret
jo
inc
clc
stos
push
orl
rcrb
mov
and
add
sbb
cmp
mov
int
sarb
outsl
negl
inc
int
adc
mov
cmp
xorl
lcall
dec
xchg
enter
into
push
dec
pop
inc
and
jns
mov
andl
sbb
out
push
xchg
cmp
fs
cmpsb
jnp
cmp
pop
xchg
andb
jbe
jbe
cwtl
mov
cmpsl
xor
add
addr16
jne
adc
or
lock
or
and
and
and
scas
aas
adc
arpl
outsl
xor
pusha
sbb
dec
shll
mov
push
js
sbb
xchg
adc
cmpl
pushl
je
inc
pushw
or
in
popa
fmuls
cwtl
or
fistpl
mov
cmp
lods
test
dec
xchg
add
shll
jmp
pop
ror
mov
inc
test
add
test
cmpsb
and
xor
cltd
fidivrs
pop
rol
or
add
mov
lds
xor
pop
mov
pop
repz
fwait
jp
push
movl
lret
pop
or
mov
sub
xor
sub
jg
shr
push
fmul
mov
movsl
jge
insb
sbb
or
and
pop
sbb
popa
into
push
ret
cld
push
cmc
lea
push
mov
xor
mov
jnp
inc
inc
test
repnz
jo
ja
adc
and
cld
sbb
mov
in
aad
pop
adc
popl
mov
decb
sub
inc
decb
fidivrs
cltd
mov
inc
push
inc
jl
bswap
jge
jecxz
adc
add
dec
lock
sbb
cwtl
xor
or
jmp
add
mov
adc
iret
sub
fmuls
and
js
add
rcrb
adc
std
ret
jg
in
js
cmp
jne
xor
std
popa
mov
and
stos
inc
aas
stos
mov
jle
bound
adc
inc
fimuls
add
sub
xchg
ret
or
push
ret
jne
xor
stos
imul
insb
jg
jle
xchg
scas
ljmp
jns
lock
jle
repz
ret
stos
xchg
adc
and
sbb
jle
in
in
dec
xchg
pop
xchg
xor
mov
movsl
in
cmp
sahf
add
iret
cmpsl
adc
xchg
and
aad
push
out
jnp
scas
inc
add
mov
aas
test
call
shlb
es
popa
test
pop
popf
movsb
lret
jbe
mov
popf
mov
js
hlt
gs
cmp
xchg
mov
hlt
jo
lock
inc
mov
ja
pop
test
pop
hlt
jle
in
push
mov
clc
mov
add
fs
repnz
xor
scas
mov
push
ljmp
ljmp
in
mov
xchg
xbegin
adc
mov
inc
rolb
fimuls
imul
dec
into
mov
sbb
leave
or
cmp
mov
dec
sbb
fcoms
sbb
sbb
out
pop
add
lret
hlt
aaa
bound
add
pop
fisubs
sbb
sarl
mov
aam
sub
mov
xchg
and
mov
sbb
dec
mov
enter
xor
fst
xchg
dec
stos
adc
cmp
bswap
movsl
and
or
sub
inc
mov
nop
inc
jb
lret
mov
xchg
pop
stos
sub
repnz
push
xchg
jns
inc
sahf
sbb
bnd
cmpb
mov
in
sub
mov
push
sbb
and
dec
dec
mov
pop
xchg
movsl
xchg
jb
xor
dec
mov
xchg
add
add
jae
xchg
insl
out
mov
shr
inc
stos
mov
inc
mov
mov
jne
inc
xchg
adc
data16
pop
test
loope
inc
dec
lds
inc
mov
xchg
jne
or
adc
stc
push
inc
pop
or
sbb
mov
inc
and
or
push
aam
xor
jbe
inc
mov
inc
in
sub
adcl
mov
pop
aam
mov
gs
sub
pop
ja
mov
add
mov
in
cli
pusha
add
sbb
xchg
std
int3
jnp
push
jno
jl
test
cmp
jbe
push
adc
jp
js
lea
test
sbb
fmul
fld
cld
jnp
je
clc
dec
pop
cs
lea
lea
push
es
jae
mov
and
addl
arpl
loope
push
nop
xor
inc
sub
hlt
inc
push
sbb
hlt
shl
in
pop
test
insl
adc
inc
jne
subl
jno
add
jge
adc
iret
mov
imul
cmp
add
pop
fsts
mov
adc
ss
jge
stos
out
das
add
cmp
pop
cwtl
popa
cld
dec
mov
pop
push
scas
pushf
push
ss
pop
sbb
cmp
pop
fs
test
addr16
lret
jge
std
or
pushl
mov
sbb
pop
cmp
test
adc
xchg
adc
les
mov
dec
mov
movsl
inc
bound
mov
ror
in
scas
xchg
add
mov
pop
ljmp
mov
push
sub
push
or
or
inc
mov
mov
sub
mov
mov
ret
jbe
sbb
sub
in
push
sub
lcall
inc
ja
cld
xchg
xor
push
mov
xchg
pop
xor
or
xchg
sub
add
cli
push
cli
pop
or
or
xor
ljmp
rcrb
pop
outsb
and
addl
sbb
push
jl
push
dec
stos
dec
lock
xor
pop
adcb
cs
ljmp
adcb
xlat
jecxz
pop
jae
pop
addr16
frstor
mov
cmpsb
adc
or
xchg
addb
jmp
fadd
cmc
mov
movb
xchg
ficomps
mov
cmpsb
push
in
xchg
sahf
inc
adc
orb
rolb
xchg
add
fwait
xor
push
cs
adc
filds
lcall
pop
in
dec
jp
test
outsl
shrl
jo
imull
jne
xor
rol
mov
and
cli
xchg
xor
testl
adc
xchg
and
jnp
lock
outsb
adc
pop
outsb
xchg
imul
sti
gs
mov
icebp
mov
fistpl
rcpps
popf
dec
pop
cli
inc
jae
enter
push
sub
fadds
push
dec
ficompl
pop
mov
call
pop
push
xchg
popa
push
mov
push
jle
xorl
js
imul
xor
hlt
out
mov
ficoml
lds
loop
adc
pop
movsb
dec
jmp
pop
jge
gs
mov
mov
mov
xor
fiaddl
loop
pop
iret
mul
mov
add
inc
xor
lods
push
lahf
push
push
stos
xchg
sahf
test
aam
push
adc
aaa
in
dec
adc
jb
es
xchg
cld
enter
jb
lcall
ja
xchg
xchg
mov
xor
jmp
jge
mov
inc
sahf
push
xchg
movsl
mov
imul
in
mov
xchg
xor
cmpsb
cmc
js
orb
jge
sub
xor
xchg
sub
xor
xchg
mov
or
adc
cmp
mov
lods
cmpsb
jmp
iret
cmp
jbe
mov
add
sahf
push
pop
or
sbb
adcb
xchg
xchg
repz
loop
out
push
cld
mov
mov
into
xchg
idivl
and
sbb
and
lret
add
fldl
pop
fstpt
mov
das
mov
fdivr
push
call
sbb
xchg
movsb
mov
test
mov
add
ss
mov
and
xor
push
jo
xchg
pusha
popa
lods
das
outsb
xor
movsb
xchg
jnp
pop
dec
nop
inc
push
jns
jbe
popa
fs
add
xor
inc
dec
xchg
popf
cwtl
icebp
add
xlat
xchg
lahf
sub
xchg
filds
sarl
mov
cmc
loop
bound
gs
add
add
jl
mov
add
ljmp
ja
inc
jbe
adc
inc
or
loopne
push
dec
sbb
jp
mov
cmp
xchg
mov
test
sbb
and
repz
sub
sahf
fadds
cmp
or
daa
push
xchg
pop
jp
test
mov
lahf
lock
ja
or
notb
outsl
int
add
push
cmp
ss
sub
xchg
lcall
xor
jae
lds
and
shrb
imul
test
movsl
jo
std
mov
jmp
jle
rorl
subl
int3
paddsw
jmp
jo
adc
xor
divl
cmp
into
jge
xchg
mov
sbb
in
outsl
jp
push
push
mov
sbb
loope
outsl
test
cs
inc
movsl
inc
imul
mov
push
jl
sub
xchg
push
xchg
xchg
and
into
int3
cmp
mov
ret
mov
cmp
mov
mov
and
ja
icebp
or
pop
aas
cwtl
cmp
jne
mov
ret
sahf
adc
arpl
sahf
mov
mov
insb
jmp
fildll
loop
negb
push
cwtl
or
bound
dec
add
rclb
push
cltd
xor
mov
cltd
sbb
mov
insb
test
jle
mov
cmp
lahf
mov
testl
lcall
cltd
addr16
dec
sub
or
leave
sub
push
pusha
sub
js
pop
stos
mov
mov
xor
add
cmp
cmpsl
and
arpl
add
xorl
idivb
pop
xor
mov
mov
out
in
loopne
cmpb
mov
jae
jle
sbbl
imul
out
pop
mov
adc
aas
xchg
xchg
cmpsl
pop
jmp
imull
pusha
or
dec
push
shlb
bound
adc
loop
ret
test
or
in
mov
shlb
rcr
inc
xchg
sbb
dec
pop
fs
bound
dec
test
ja
mov
test
sub
mov
sub
jne
aad
imul
addb
pop
cwtl
insl
pop
add
mov
jb
add
lods
jns
fiadds
dec
adc
add
leave
adc
xor
sub
mov
sbb
test
in
mov
out
push
leave
call
pusha
push
cmp
xchg
test
or
pop
enter
addr16
inc
inc
add
xchg
jge
mov
inc
inc
imul
jl
xchg
sti
push
push
xor
mov
mov
and
inc
and
aas
xor
shll
out
jbe
adc
and
insb
mov
add
inc
test
inc
sbb
jo
das
lods
cli
loope
scas
push
pop
mov
aam
or
add
adc
sbb
sbb
imul
in
mov
mov
and
mov
and
addr16
mov
int3
add
shll
test
loop
pop
pop
pushf
sbb
adc
out
stc
jl
in
xchg
sti
cmp
sub
pushf
popf
pop
or
enter
cmp
fsubl
pop
lods
shrb
push
test
add
jp
add
and
fimuls
mov
adc
inc
dec
loopne
sbb
movsl
xor
push
or
adc
inc
fnstsw
push
call
cmp
out
push
jbe
cmpsl
mov
xor
mov
scas
push
or
sbbb
cmp
sbb
clc
mov
sbb
stc
out
pop
test
frstpm(287
gs
mov
adc
lods
decl
ljmp
outsb
aad
push
or
les
lahf
dec
insl
pop
cwtl
clc
inc
ret
adc
sbb
ret
fs
xchg
push
mov
pop
mov
inc
xlat
and
push
push
pop
xlat
mov
adc
shrb
add
and
cmp
fldl2e
sub
xor
xchg
mov
or
pop
popf
xorb
lock
loopne
iret
lcall
lods
or
cltd
or
in
addl
push
bound
mov
mov
aas
push
mov
sbb
dec
rcrb
orl
rolb
cmp
mov
out
stos
mov
icebp
lods
push
mov
jns
cmp
cltd
push
mov
xlat
mov
in
shl
std
adc
sub
das
aam
cmp
mov
andl
add
mov
lea
xchg
ss
das
sbb
pusha
mov
es
sub
dec
push
inc
xor
jmp
adc
jl
mov
in
jb
push
and
xchg
push
insb
out
sti
dec
mov
push
arpl
sahf
mov
bound
and
ja
jp
rcll
outsb
rclb
loopne
sbb
xchg
add
out
xlat
cmp
add
mov
aam
out
sbb
dec
inc
out
jle
push
bound
hlt
pop
dec
out
pop
cmpl
es
push
jmp
aad
fwait
nop
adc
lret
dec
push
rcrb
sub
aas
ss
add
ss
jo
fcomps
sub
je
and
mov
cmp
sbb
pop
push
fwait
arpl
jb
xor
jns
add
cmpsl
inc
xor
add
out
mov
push
shl
mov
mov
and
scas
xor
push
jne
pop
cmpsl
sub
scas
imul
pop
push
addr16
inc
rcrl
enter
mov
dec
add
push
imul
dec
lods
jnp
sbb
imul
lcall
sbb
adc
lods
jne
inc
in
inc
add
xor
popf
mov
mov
cld
mov
pusha
xchg
aaa
js
pop
lcall
dec
call
mov
movsb
add
or
fmul
sbb
shl
fsubr
push
mov
rclb
push
add
out
or
out
imul
adc
pusha
ror
nop
adc
dec
inc
mov
dec
sahf
xchg
insb
rep
mov
lods
mov
adcl
dec
add
xor
push
or
ret
imul
fwait
sub
outsb
lods
xchg
adc
imul
and
push
test
das
pop
or
adcb
jl
xchg
xor
inc
inc
punpckhwd
add
insl
xchg
xor
loopne
ljmp
repnz
filds
push
adcb
adcl
mov
test
stc
negb
lret
push
loope
xchg
push
sahf
jmp
mov
dec
or
or
jg
imul
test
adc
pop
movsl
out
jecxz
jecxz
mov
lea
xor
push
xchg
lret
lods
add
dec
pop
xlat
cmp
pop
mov
stos
sub
nop
and
outsb
lcall
jno
inc
or
sbb
loopne
int3
or
mov
mov
out
adc
or
in
xchg
push
pop
pop
lock
ja
mov
push
movsl
cmovnp
lods
ja
cwtl
inc
push
pushl
inc
ja
jmp
faddl
sbb
cmp
push
sub
push
pop
push
cltd
mov
rorl
sbb
and
jae
data16
xchg
add
sti
lahf
inc
add
mov
mov
jo
sub
add
icebp
jbe
push
cwtl
cld
inc
add
mov
adc
push
push
nop
jbe
xchg
fadds
ds
push
test
movb
and
dec
mov
dec
addb
pop
incl
bound
xor
sub
stos
mov
inc
pop
adc
cld
aam
pop
incl
push
ret
xchg
or
in
insl
or
push
mov
or
ret
mov
in
subb
adc
push
cs
es
ret
or
cli
stos
or
mov
or
dec
nop
lock
scas
out
into
les
daa
or
fs
movsb
mov
xchg
adcl
ret
xor
roll
inc
mov
add
inc
sub
lret
out
mov
push
push
mov
rorl
test
or
cmp
dec
xor
push
inc
movl
xor
int3
cmp
push
or
insl
lea
mov
dec
inc
cli
mov
rclb
fadds
loop
dec
fcompl
aad
daa
pop
push
xor
push
cli
in
loopne
xor
or
in
subl
add
push
test
incl
aad
sbb
xlat
or
clc
aad
rcrb
push
push
jge
repnz
clc
insb
pop
leave
into
xchg
aad
std
pop
jg
xchg
mov
stos
mov
cltd
mov
xor
dec
test
cmc
fs
add
imul
lods
je
adc
pop
push
dec
lret
sub
jl
dec
sbb
or
fdivr
iret
push
mov
imul
cld
loopne
or
sbb
es
and
mov
push
xor
add
cmp
cmp
sbb
hlt
fisttps
sbb
mull
sub
ret
mov
jo
pop
frstor
and
std
lods
das
push
mov
mov
sar
sbb
les
inc
aas
leave
dec
scas
out
pop
and
cmp
mul
pop
jg
jae
pop
jbe
mov
or
lret
jo
xchg
imul
rcrb
push
xchg
sahf
jno
mov
add
and
sub
jl
outsl
pop
xchg
dec
fisubrs
xchg
push
or
cmp
and
jno
je
shll
push
insb
stos
mov
clc
out
and
pop
xor
jmp
pop
mov
out
pop
cli
scas
adc
pop
add
jmp
mov
repnz
mov
xor
and
xchg
scas
or
add
loope
movsb
jecxz
adc
dec
push
xor
mov
leave
js
mov
adc
pushf
daa
faddp
sbb
dec
aad
mov
mov
sarl
pop
lea
push
cmp
mov
repz
mov
pop
xor
xchg
cmp
or
mov
add
iret
jno
pop
xchg
lcall
hlt
or
push
inc
add
push
cmp
add
mov
mov
call
popf
out
lret
adc
pop
test
fcomip
int3
dec
rorl
pusha
dec
out
mov
rcrl
xor
out
jp
sbb
ja
ret
int3
fwait
movsl
jecxz
pop
scas
dec
sbb
push
fldenv
adc
addl
push
jl
push
std
xor
or
dec
push
lahf
repnz
xor
or
sbb
cs
mov
insl
jns
negl
enter
stos
xor
std
aaa
sbb
jecxz
ds
rorb
out
ds
ret
xor
xor
std
or
mov
rcll
ror
shr
daa
in
pop
pop
lcall
push
cmp
cmp
out
in
xchg
incb
lods
pop
sbb
popa
push
addps
push
pop
adc
ss
iret
stc
ficoml
and
mov
mov
pusha
sbb
mov
das
in
adc
fimull
fucomp
mov
pop
out
divb
jl
xor
or
push
mov
pusha
mov
inc
aad
cwtl
divb
jo
js
or
pop
mov
xchg
lds
cmpsb
mov
lcall
inc
and
or
jae
jp
jl
test
incl
inc
int
inc
add
out
mov
xor
imul
notl
movsl
jecxz
outsl
or
loop
shl
stos
pop
test
popa
pop
lds
ret
test
jge
fiaddl
add
test
cld
test
js
inc
and
cmp
cmpsb
pop
jp
add
dec
pop
jne
inc
add
loopne
scas
mov
in
sub
pop
stos
jp
loope
test
and
jno
roll
mov
lsl
pop
xor
iret
pop
jo
jge
sbb
daa
dec
das
pop
and
inc
pop
sbb
push
test
sbb
rcrl
loop
xor
stos
imul
sbb
pop
dec
adcb
shll
mov
sbb
cmp
jecxz
mov
push
test
push
sbb
std
adc
sti
gs
jp
inc
xor
repnz
and
mov
adc
push
je
aam
imul
mov
cmp
mov
fcompl
aaa
xchg
cmp
scas
add
xchg
imul
pop
jne
adc
addr16
sarl
es
mov
cs
enter
or
cmp
adc
arpl
out
mov
and
inc
test
test
mov
xor
cli
cmp
jae
mov
lods
mul
mov
adc
out
push
vdivss
mov
clc
add
int
scas
add
inc
mov
popf
xchg
mov
out
iret
in
lods
adc
test
jne
xchg
and
jae
add
enter
pop
push
sbb
loopne
adc
gs
add
and
stc
aam
jl
nop
mov
btc
push
or
mov
les
lods
inc
mov
push
incb
cmp
sbbb
iret
mov
loope
leave
add
sarl
in
mov
jl
sti
mov
inc
mov
jo
inc
sub
sbb
xchg
pop
xor
cmp
cwtl
iret
cmp
lret
push
cmpsb
sbb
nop
xchg
and
push
add
jno
iret
push
jge
decl
cmp
frstor
popf
mov
pop
ret
in
or
inc
cmp
insb
nop
testb
icebp
sti
ja
xchg
adc
push
sbb
dec
fisttpl
mov
cltd
cmp
cmp
adc
dec
pusha
add
test
sbb
sbb
jmp
xor
mov
sub
mov
push
cltd
scas
int
mov
stos
inc
pop
filds
inc
mov
cmp
loopne
mov
aas
testl
mov
sub
xor
subl
and
inc
pop
adcb
in
mov
bnd
pushf
pop
push
mov
mov
mov
mov
jl
push
or
ret
sub
add
sbb
cld
dec
ss
ja
fldenv
jge
das
punpckldq
pushf
subl
imul
aad
clc
sbb
test
pusha
addl
add
inc
xlat
cmp
sbb
pop
aad
stc
addl
lds
shrb
push
fwait
cmp
fdivrs
xorb
lods
sarb
mov
movsb
fcmove
sub
into
push
int3
dec
loope
sbb
xchg
and
mov
pushf
push
push
dec
mov
in
add
je
xchg
and
and
pushf
pop
mov
add
mov
pusha
inc
add
mov
xor
cmp
push
dec
scas
les
das
dec
xor
insl
inc
stos
sbb
test
or
test
add
jp
cld
jl
test
popa
mov
sbb
cmp
shlb
dec
sbb
in
push
dec
pop
scas
in
jmp
push
sarb
imul
inc
adcl
cmp
stos
adc
add
jmp
sbb
cs
cmpsl
sbb
jmp
fbstp
add
rcrb
icebp
enter
sub
mov
pushf
loopne
mov
jnp
pop
or
add
imul
jg
fs
lcall
int
sub
push
add
adc
test
jne
testb
xchg
nop
jnp
cmp
gs
stos
loope
cmp
flds
mov
pop
loope
mov
pop
sub
cmp
mov
lcall
mov
xchg
shrb
ja
ret
loop
je
mov
int
inc
repnz
iret
pop
or
dec
rol
nop
lock
xchg
push
push
mov
bound
fwait
ret
rcll
movsb
push
insl
jb
xchg
out
mov
mov
pop
and
jo
push
scas
push
cmpsl
and
imul
or
test
mov
pop
insb
pop
test
inc
xchg
imul
mov
insb
hlt
paddusw
mov
pusha
cmp
mov
xlat
mov
and
and
inc
in
rorb
ljmp
in
mov
adc
xorb
stos
lock
push
scas
das
sbb
xor
adc
mov
test
sub
xor
or
mov
insb
testl
sahf
sbb
test
cwtl
push
movb
shlb
sbb
lahf
or
push
test
in
push
icebp
pop
fwait
mov
xchg
loop
int
inc
iret
aad
inc
aaa
cld
lret
xchg
and
or
xor
pop
test
sbbl
push
xlat
loopne
mov
lcall
dec
xchg
pop
iret
in
ja
push
outsb
or
adc
lcall
mov
in
jmp
les
js
sahf
mov
loop
inc
call
test
sub
and
sub
lret
repnz
push
dec
ss
pusha
or
int
jnp
cmp
and
add
mov
inc
or
dec
xchg
leave
pop
mov
rcrl
jns
fcoms
les
pop
mov
fdivs
xlat
incb
out
jae
arpl
icebp
lea
push
jnp
dec
push
sub
test
test
sub
pop
add
xor
mov
es
dec
dec
push
es
or
pop
mov
mov
xor
jo
add
sub
shrl
xor
and
cmp
adc
lock
or
push
stc
and
aas
jb
or
sbb
andb
push
sahf
loopne
push
or
clc
rclb
aam
cmpsb
jmp
mov
sub
push
out
out
repz
rcl
ret
inc
inc
pop
inc
dec
add
scas
adc
movups
and
mov
jb
test
jno
and
loop
xlat
pop
jo
add
mov
pop
shrb
jmp
hlt
or
and
inc
add
inc
add
cmp
cmp
sbb
jmp
imul
scas
dec
xor
mov
lea
mov
cwtl
mov
test
popf
add
arpl
gs
pop
lea
dec
mov
push
nop
xchg
es
out
inc
outsb
mov
pop
loopne
cs
out
inc
into
mov
dec
mov
in
adc
nop
inc
repz
push
stos
inc
push
sub
sub
sub
pop
mov
push
arpl
xor
mov
movsl
clc
psubb
push
adcl
js
xchg
dec
jbe
js
cmc
test
insl
ja
jnp
xchg
iret
lcall
xor
and
nop
pop
inc
and
dec
ds
dec
cwtl
je
sbb
sbb
push
fisttps
daa
add
test
in
fs
and
sbb
dec
mov
pop
sbb
dec
jge
xchg
cmc
mov
cwtl
dec
cmpsl
xor
and
jg
stos
insb
scas
cmp
add
pop
cwtl
mov
mov
mov
xor
sbb
jmp
mov
pop
aas
fsubs
ja
sub
frstor
sbb
mov
xor
sub
inc
jle
sti
scas
dec
dec
mov
iret
lcall
mov
dec
clc
in
fcompl
and
stos
in
pop
sbb
add
xchg
iret
mov
cld
les
popa
xor
icebp
mov
daa
inc
add
mov
mov
mov
cwtl
mov
mov
pushf
insb
dec
adc
xor
and
fcomps
fs
pop
mov
dec
int
and
cmc
push
dec
xor
and
mov
push
xchg
pop
and
xchg
mov
and
jle
pop
fistl
and
mov
add
dec
ljmp
mov
sbb
mov
in
dec
std
pushf
xchg
fsubr
cmpsl
adc
sub
mov
out
dec
push
mov
inc
lods
stos
les
jne
mulb
jns
sbb
jns
nop
jno
pusha
sub
push
dec
inc
xor
icebp
into
movsb
jo
popl
push
loopne
inc
lea
push
push
testb
popf
dec
jnp
test
dec
mov
jb
outsb
mov
mov
mov
sub
mov
inc
pop
jp
js
stos
xor
iret
push
xor
jne
mov
adc
mov
mov
xchg
sbb
arpl
dec
setnp
or
jne
fidivrl
js
pusha
xor
js
jge
mov
pop
stc
pop
outsl
xor
out
push
enter
push
xor
fstl
jecxz
call
mov
mov
mov
add
xor
cmpsl
lea
lock
sub
stc
cmpsb
loop
je
mov
push
xchg
call
das
sub
xorl
in
or
xor
mov
push
int
or
pop
stos
mov
adc
ljmp
or
or
or
push
cmc
mov
push
pop
mov
inc
es
rcll
and
popf
xor
punpcklbw
inc
push
cwtl
jmp
mov
inc
push
aaa
pop
enter
mov
or
inc
std
lahf
cmp
cmp
stos
or
push
inc
mov
pop
or
std
mov
push
mov
js
lret
scas
pushf
add
xchg
jg
mov
mov
sbb
inc
lret
or
sub
push
int
cmc
stos
mov
mov
jge
push
jg
sbb
hlt
jge
lods
or
mov
repnz
js
pop
pop
pusha
adc
mov
loop
dec
shrl
dec
rcrl
dec
inc
ds
loope
or
pop
push
mul
lods
std
lahf
mov
into
leave
mov
add
mov
or
jp
es
mov
sbb
in
les
sahf
out
jbe
mov
cmp
sbb
sbb
and
ficomps
inc
movsl
ret
in
mov
insb
mov
dec
lea
lcall
xor
pusha
inc
jno
imul
sub
pusha
pop
or
pusha
push
xor
mov
mov
sbb
stos
loope
inc
inc
sbb
inc
sbb
pop
and
inc
or
xchg
cwtl
repnz
push
adc
jmp
std
call
ret
pop
cs
push
mov
mov
or
push
jg
mov
cmp
popa
and
xor
jns
sub
test
cmp
xchg
mov
mov
adc
test
add
sub
cmp
aaa
dec
push
les
xor
ss
mov
jl
push
xchg
sbb
mov
sub
xor
or
cli
mov
pop
idiv
aad
xor
jl
shll
mov
and
es
cld
daa
aad
mov
out
test
loopne
cmpsl
push
aaa
jp
adc
mov
jo
test
ljmp
adc
lcall
xor
jb
addr16
mov
rcl
mov
push
pop
adc
xor
dec
xchg
std
inc
in
dec
or
adc
rcrb
pusha
jo
and
or
test
xlat
sub
lcall
mov
aam
fnstcw
xchg
or
loop
movsb
add
mov
adc
or
sbb
mov
test
cs
lock
push
iret
cwtl
dec
jp
rol
lret
stos
push
xchg
jg
shrl
pop
mov
out
sub
jle
mov
add
lds
xchg
push
andl
repz
add
inc
mov
and
or
loop
js
outsb
xor
cli
bound
aas
adc
icebp
fsubrs
filds
and
das
dec
test
into
sub
ret
aad
es
jle
ss
out
aaa
jne
xchg
iret
adc
adc
imul
and
or
jbe
jge
inc
add
and
daa
xor
xchg
int3
xchg
out
sbb
fbld
or
sub
inc
jg
mov
icebp
das
mov
inc
sbb
ja
and
jle
pop
adc
bound
mov
cli
push
cmp
mov
sbb
fucom
outsb
inc
mov
shlb
mov
sbb
out
adc
sub
scas
int3
and
repnz
js
dec
adc
les
mov
leave
ljmp
in
lds
xchg
bound
je
push
xor
sub
pop
xchg
stos
rolb
xor
xchg
xor
jmp
sbb
push
sub
dec
mov
mov
push
and
icebp
mov
jle
aaa
loope
jb
shlb
testl
inc
clc
dec
xchg
sub
push
cmp
jl
subl
js
sub
stos
dec
mov
jg
addr16
call
out
mov
mov
mov
inc
es
sub
movsb
fcomp
jno
xchg
dec
sub
in
jbe
cmp
mov
sti
push
int3
adc
and
adc
sbb
hlt
fcmovu
mov
mov
mov
dec
movb
cmp
add
mov
mov
rcl
insl
ljmp
pop
cmpsb
sub
push
bnd
pop
addr16
test
out
subb
daa
les
addr16
lcall
inc
popa
jb
pop
or
mov
cmp
inc
dec
xor
outsb
xor
cwtl
or
cmp
cmpsb
in
jo
adc
shlb
sub
push
lock
xchg
stos
sub
cld
rcrb
jecxz
stos
scas
xchg
lods
pop
xchg
jnp
or
push
add
xchg
addb
mov
sbb
ret
data16
xor
sbb
dec
repnz
adc
pop
add
add
outsb
fbld
loopne
jle
jno
and
xor
leave
cmp
fsubrs
inc
inc
mov
std
mov
roll
xor
add
push
shrl
movsl
sar
dec
pop
sbb
mov
es
jbe
sub
sub
ja
cli
push
inc
out
push
add
fwait
addl
rorb
rolb
dec
rclb
loope
sbb
push
pop
mov
inc
in
nop
cmp
adc
je
jne
je
rorb
scas
test
fimull
nop
xchg
std
push
adc
rcrb
addr16
mov
push
data16
xchg
mov
or
jbe
in
mov
lds
mov
je
inc
mov
pop
jne
ret
sbb
rorl
mul
push
mov
scas
mov
ficomps
aam
push
stc
push
jp
dec
xor
xor
push
cmpsb
jle
nop
sti
cmp
loope
xor
add
pop
fisubrl
adc
cmp
call
popa
aam
fsubr
sarb
ret
mov
pop
add
mov
rorl
add
sbb
sarl
enter
mov
jae
loop
stos
mov
shl
es
rorl
loop
stos
aad
sub
in
push
outsb
and
bound
dec
fists
rcrl
inc
sbb
sbb
lahf
and
bound
mov
imul
push
cli
and
push
pop
push
and
shrl
lds
add
jle
bound
inc
call
and
mov
jbe
andb
aad
lock
add
rcll
jne
mov
ja
gs
test
lods
xchg
fnstenv
cmc
sub
xchg
mov
pushf
orb
mov
xor
mov
or
pop
adc
mov
insb
inc
adc
pop
adc
push
and
test
aaa
cs
movsl
and
sub
adc
sub
and
sub
cmp
pop
dec
mulb
add
mov
add
test
movsb
lods
mov
pop
ss
in
out
or
mov
in
gs
imul
mov
mov
pop
or
push
xor
js
adc
cmpsl
shr
mov
loope
push
lea
ret
enter
sub
and
jle
scas
push
shlb
sub
xor
mov
xchg
mov
sub
popf
jg
or
iret
je
add
popa
pop
mov
jmp
enter
pop
rcll
push
out
cmpsb
mov
mov
add
cli
pusha
mov
imul
fs
add
xor
pop
test
adc
pop
scas
pop
inc
fsts
movsb
lds
aad
aam
xor
lea
ss
add
loope
cld
fisubrs
inc
sub
movsl
xchg
std
fwait
mov
or
ja
adc
jge
mov
cmp
push
sub
popa
das
lock
sbb
sbb
sub
xor
push
mov
mov
cs
ss
ja
scas
pop
repz
pop
sbb
movsl
mov
ja
out
jecxz
or
pop
cli
or
mov
fimuls
cs
mov
adc
int3
into
scas
fdivrs
push
scas
bound
enter
inc
out
mov
inc
sti
add
pop
repnz
xor
mov
loopne
std
lcall
sbb
aam
pop
adc
lcall
ret
mov
jno
test
mov
xchg
xchg
sub
mov
inc
dec
sarl
jnp
dec
movsb
pop
test
adc
push
mov
test
mov
or
xor
xchg
adc
pop
jno,pt
cmp
xorb
addr16
roll
dec
push
mov
jl
dec
cmpsl
or
aaa
push
adc
inc
xchg
shlb
andb
lcall
adc
ljmp
rorl
adc
scas
popf
jnp
inc
stc
pop
rolb
adc
push
adc
div
xchg
out
sbb
sub
ljmp
sbb
adc
jnp
mov
sub
jne,pn
pop
hlt
cli
std
scas
pushf
loope
test
push
sub
cld
lcall
cmc
mov
xchg
jne
dec
mov
mov
fdivrp
cmpsl
sub
ljmp
mov
pop
inc
cmc
adc
std
jp
mul
popa
in
and
cwtl
jl
fsubs
and
addr16
mov
fiaddl
iret
imul
inc
sbb
push
mov
fidivl
and
jne
xor
jno
push
cltd
inc
jne
mulps
or
push
int3
xor
lahf
xchg
int
mov
fcmovnb
mov
mov
test
mov
xchg
rcll
outsb
xchg
addr16
mov
fbld
stos
das
test
addl
push
mov
add
loopne
sbb
popf
cld
test
sub
adc
cmp
jae
jnp
push
clc
sub
lcall
scas
shrl
cmpsb
adc
mov
mov
inc
in
mov
jne
xlat
shrb
cmp
das
loope
ss
push
lret
xchg
ss
sub
bound
adc
or
lock
mov
cs
sti
cld
mov
shlb
cmc
mov
ds
inc
pop
ljmp
call
cmp
push
push
loopne
xorb
push
mov
imul
dec
or
pushf
or
and
das
call
lds
dec
push
push
icebp
inc
mov
mov
mov
je
pop
inc
cmp
mov
mov
add
loopne
ret
adc
jmp
repz
xor
cmp
jmp
arpl
ljmp
aaa
xchg
xor
inc
gs
test
clc
bnd
pop
imul
xor
sub
sbb
fistpll
adc
stos
rolb
jecxz
add
les
fldl
mov
dec
or
mov
hlt
lods
faddl
push
dec
dec
and
sub
inc
xchg
xor
cmp
ljmp
arpl
dec
add
outsb
sbb
xchg
icebp
sub
icebp
fcoml
lret
adc
movsl
push
addr16
xor
test
add
imul
movsb
movsb
sti
and
xchg
fsts
in
pop
ret
sti
dec
rorl
nop
std
jge
mov
les
in
les
dec
and
aas
push
push
enter
adc
aam
aas
xor
pop
sbb
insl
data16
cld
mov
push
lea
or
popf
test
stos
sub
fisttpl
test
jl
or
sub
mov
pop
stos
repz
dec
inc
sub
or
movsl
xor
orl
push
out
pop
addr16
inc
push
or
push
roll
push
dec
and
shlb
loop
and
fdivrs
call
adc
pop
jnp
xor
lret
lret
cld
repnz
das
mov
iret
aaa
cmc
in
cs
call
sbb
xchg
popf
lods
lods
inc
xor
mov
dec
mov
in
jg
rcll
cmp
mov
lret
sbb
fs
in
roll
cmpsb
sub
shl
dec
adc
push
adc
dec
xchg
jno
pushl
test
add
sbb
jp
movsl
scas
subb
mov
pusha
add
dec
adc
xchg
sub
into
test
fisttpl
loope,pt
hlt
inc
lods
push
popf
stc
idivl
leave
push
fdivrs
push
les
push
dec
jns
movsb
sbb
add
xchg
loopne
jb
inc
js
inc
push
mov
cltd
daa
in
shrb
jne
pushf
dec
sub
push
lahf
dec
dec
and
iret
js
hlt
roll
ja
ja
jecxz
daa
xchg
rorb
push
add
bound
cmp
lods
pop
dec
ret
adc
push
cmp
or
jge
das
aam
or
lods
enter
pusha
lret
in
test
mov
dec
dec
cmpsb
mov
xchg
mov
or
scas
push
out
cwtl
xchg
dec
xchg
xor
xor
nop
xchg
fisttpll
pop
inc
sbbb
test
or
cmp
mov
ffree
ja
rcrb
add
loop
jno
jmp
push
and
dec
mov
inc
jo
dec
cmpsl
xor
into
push
push
mov
push
adc
mov
fsubp
mov
ficompl
pop
and
sub
add
sub
repz
mov
pop
movsl
mov
sub
ret
add
pop
mov
incb
rcrb
shrl
jecxz
outsl
shlb
mov
arpl
dec
sbbb
aaa
dec
stc
hlt
xchg
adc
jo
mov
lcall
dec
test
inc
lahf
push
sahf
push
mov
and
sub
sbb
lds
test
xchg
add
movsb
jnp
out
xlat
in
into
pop
inc
frstor
mov
dec
cmp
sub
xorb
fcoms
dec
insb
xor
pop
imul
repnz
jns
jg
insb
loopne
enter
clc
cs
cmp
or
mov
mov
loope
cld
or
jne
mov
in
adc
and
xor
mov
ret
aam
mov
out
outsb
jmp
jnp
pop
or
shll
xor
jne
icebp
or
xor
nop
push
test
mov
xchg
adc
inc
xor
push
inc
push
sub
mov
int3
je
add
fwait
stos
push
pop
daa
pop
adc
in
jecxz
cmp
push
sbb
sub
xchg
repz
inc
xchg
test
test
out
aad
addr16
aam
daa
pop
lcall
in
repz
jmp
outsb
lcall
jg
mov
cli
dec
jg
mov
cmpsb
in
in
ss
mov
scas
shrb
push
push
xor
and
mov
jp
testl
xchg
adc
add
dec
mov
popf
mov
scas
scas
jb
sti
mov
aam
iret
mov
or
jl
push
lret
pop
push
pop
sahf
fisttpll
and
sub
push
fsubl
mov
in
sbb
jno
mov
jno
inc
xchg
cmp
aaa
fisubs
or
mov
ficoml
andb
in
push
pop
inc
push
jno
pop
mov
test
xchg
stos
push
inc
and
pop
popa
and
test
sub
punpckhbw
fists
jge
xor
gs
out
loop
test
fwait
and
enter
scas
cmp
rorb
adc
inc
test
cmp
inc
push
rolb
pop
outsl
loopne
subl
push
mov
jle
push
jge
add
jae
adc
sahf
fcoms
std
dec
push
mov
and
add
dec
pmaxsw
mov
mov
jecxz
repnz
mov
push
mov
jb
cmpsl
aas
addr16
sbb
push
sbb
cld
loope
cltd
sbb
mov
xchg
int3
mov
sbb
xchg
nop
lcall
aam
cmp
xor
aam
shr
inc
and
or
sub
push
jno
xor
cwtl
push
xchg
sub
rolb
jae
shrb
xor
in
mov
jo
lods
int
fidivl
cmpsl
push
sbb
adc
rcrb
in
scas
jle
mov
add
or
jne
movsb
pop
ds
jne
adc
pop
xchg
jbe
stc
popf
repnz
ffreep
cld
cmp
cmp
enter
adc
stc
in
test
mov
or
push
sar
cwtl
xor
inc
mov
jbe
jne
push
mov
fs
push
jns
insb
aas
sbb
adc
aaa
and
and
pop
lea
push
in
bound
mov
push
push
mov
repnz
lock
fistps
mov
xor
sub
inc
stos
add
mov
dec
sub
cli
test
inc
insb
mov
xchg
push
fcmovu
xchg
add
push
bnd
mov
stc
dec
rolb
add
push
xor
inc
push
arpl
inc
pushf
insl
dec
mov
ss
xchg
push
sti
pop
xor
clc
push
daa
mov
cmp
mov
testb
mov
push
data16
sub
xor
push
popa
mov
out
adc
push
movsl
jp
jmp
lret
insb
add
jecxz
dec
les
push
nop
dec
cltd
es
lods
jp
push
outsl
jb
rorl
cmp
in
push
sub
or
and
fbld
fcoms
ja
popa
cs
sbb
mov
ret
pop
lret
aad
jbe
lret
sub
push
jno
xor
mov
out
loope
adc
cmpsb
xchg
incb
scas
sbb
jae
cmpsb
mov
mov
ret
ja
sti
add
jg
sbb
mov
mov
ret
scas
loopne
out
push
xchg
in
cmp
int
test
cmp
mov
stos
sub
insl
mov
push
stos
repz
sbb
scas
icebp
stc
ja
push
pop
jns
addr16
xor
push
lret
pop
mov
mov
fistl
fstpt
scas
push
insb
xlat
scas
in
mov
cmp
pop
mov
add
mov
dec
inc
neg
mov
orl
push
or
mov
and
ss
jle
add
lds
andl
outsb
out
adc
jl
and
out
subb
push
mov
or
or
stos
mov
popa
and
out
xor
push
cmpl
int
lret
ss
adc
out
lahf
int
mov
cmpsb
xchg
out
mov
std
inc
arpl
filds
sub
and
inc
rcll
sub
rclb
mov
scas
and
xor
mov
cmpsb
inc
adcl
sub
xchg
int3
scas
push
mov
ret
fcoml
mov
sahf
lahf
es
or
add
jge
push
adc
cs
mov
inc
shll
adc
leave
dec
mov
stos
andb
pusha
xlat
mov
inc
repnz
cmp
mov
inc
dec
enter
adc
lds
jb
push
setle
out
leave
loop
adc
lods
out
or
dec
and
rcrl
jne
add
mov
imul
aaa
loope
cmp
rclb
mov
pop
jnp
cli
sub
shl
movsb
pop
call
and
xchg
ds
adc
cmp
cs
cmp
add
sub
pop
push
and
adc
je
movsl
mov
lods
push
sbb
lds
into
cmc
dec
dec
mov
mov
xlat
pop
stc
sbb
repnz
outsb
adc
add
add
pop
pushf
sub
stos
sub
push
sub
xor
sarl
fildl
or
aaa
imul
sbb
push
lods
sbb
and
stos
xorb
movsl
int
popa
or
push
outsb
mov
andb
mov
daa
not
loop
sub
sbb
addr16
jmp
test
imul
ror
data16
cmc
mov
iret
and
push
in
mov
lcall
push
arpl
dec
pushf
and
jp
lock
iret
inc
std
cmpl
pop
nop
cmp
out
sub
movsb
jecxz
ficompl
mov
js
jecxz
mov
lahf
mov
addr16
cmpsl
out
mov
mov
sub
cmpsb
mov
mov
xor
xor
sub
xchg
mov
aas
in
icebp
cli
cld
sub
push
hlt
pusha
jno
insl
out
mov
and
in
sub
sub
int
inc
xchg
cmp
ss
lret
popa
inc
addb
inc
xor
cmpb
jge
mov
pop
sbb
xchg
bound
pop
fcoms
sub
aam
jb
aaa
shll
or
jnp
push
std
cld
mov
outsl
mov
and
scas
adc
xor
inc
aam
xchg
jle,pn
push
in
mov
mov
sub
mov
scas
mov
lea
sbb
enter
clc
das
mov
push
in
adcb
sub
or
cmpsl
ja
mov
mulb
mov
subb
js
pop
mov
pop
cmpl
and
mov
arpl
js
ja
test
add
fdivrl
push
pop
push
adc
xchg
out
mov
ljmp
jecxz
sbbb
xchg
mov
rolb
aas
nop
or
xchg
adc
dec
cmp
pop
jge
xchg
jbe
fs
aas
add
mov
mov
cmpsl
jecxz
sarl
sub
iret
mov
dec
inc
xchg
fsts
repz
test
xchg
jmp
test
push
negb
test
mov
scas
scas
push
ljmp
ss
cli
loop
jecxz
push
jne
and
fs
sti
jb
stos
out
jge
out
mov
sbb
mov
fsubl
dec
push
add
pop
push
mov
cltd
sarl
push
inc
out
mov
push
mov
mov
inc
rorb
test
popa
fidivrl
inc
dec
les
mov
and
inc
jo
loope
into
add
inc
push
sub
inc
ljmp
not
orb
call
fnstcw
call
mov
int3
aad
mov
xor
mov
cwtl
inc
inc
mov
inc
push
mov
cmp
pop
out
push
sar
cli
mov
imul
jns
scas
or
inc
dec
mov
test
jne
and
cmc
xchg
out
popa
test
cmp
pop
fstpl
push
xlat
mov
mov
inc
test
and
dec
xor
jnp
repnz
stc
push
pusha
outsl
aad
dec
mov
adc
cltd
mov
xchg
adc
mov
add
sub
ja
pop
ss
fbstp
cmp
sub
outsb
dec
mov
dec
shll
jp
xor
mov
xchg
sub
dec
sarl
and
sbb
or
adc
cmpsl
shlb
sub
cmpsl
or
imull
cli
push
cmc
lcall
ds
cli
addr16
pop
scas
fistpl
imul
push
pop
push
mov
push
aam
mov
movsl
push
or
push
jecxz
orl
test
mov
inc
and
test
adc
dec
mov
or
jo
cli
mov
mov
jo
add
jg
shrl
stos
jp
xchg
stos
mov
bound
mov
adc
pop
push
jb
pop
push
pop
mov
test
dec
mov
jb
or
faddl
stos
adc
mov
push
sub
insl
add
int
push
stos
pop
sbb
dec
add
or
push
push
cmp
sub
std
fsubrs
sbb
mov
adc
out
adc
aad
jo
stc
int
loope
mov
rcll
xchg
imul
stos
and
aad
and
pop
sbb
in
dec
fildl
xchg
ja
not
jp
movsb
inc
or
iret
jg
xor
lea
out
inc
arpl
popf
outsb
ss
adc
push
mov
mov
push
jmp
inc
lcall
andb
mov
insb
loope
out
aad
into
movsb
xchg
xchg
fidivrs
xor
imul
xchg
add
jge
inc
imul
int3
verr
sub
add
push
lcall
and
mov
xchg
jno
jbe
cmp
xorl
cmc
shrb
jo
jbe
aas
sub
xor
inc
jg
dec
xor
sbb
inc
loop
mov
fsubl
pop
sub
icebp
mov
push
inc
mov
cmp
and
cmp
ret
mov
cmp
jge
push
push
cbtw
insl
push
mov
push
pop
and
addl
fsub
push
mov
sub
aad
add
mov
mov
loop
mov
push
jp
and
mov
push
ficomps
sub
cmp
insl
jl
repnz
xor
cmp
push
bound
cmpsb
popl
xchg
subb
lock
sub
push
mov
cmpsb
mov
xor
mov
xchg
into
mov
push
hlt
cmpsl
lods
jb
stos
pusha
xchg
fldenv
cmc
mov
dec
jo
out
iret
mov
cmp
in
lret
sub
mov
pop
pop
ljmp
shlb
pop
out
or
loop
je
mov
cltd
shl
scas
mov
xor
cltd
pusha
insb
repz
je
stc
aas
mov
mov
inc
stos
nop
pushf
bound
lods
pop
insl
jp
mov
mov
in
pop
fcoms
sbb
sbb
repz
pop
xor
mov
sbb
adc
xor
stos
ds
inc
mov
or
out
and
dec
and
mov
std
dec
call
lods
xlat
or
in
adc
or
inc
push
cli
mov
mov
cmp
cmpsl
adc
sub
test
call
fisttps
push
jge
cmp
test
aam
iret
pop
fstl
shrd
rorb
mov
sub
mov
inc
mov
pop
and
dec
pop
dec
sub
std
fldt
call
outsb
mov
mov
ljmp
sbb
subl
xchg
das
mov
divb
fisubrl
push
pop
cltd
pop
sbb
repnz
inc
mov
call
mov
cmp
or
leave
pop
push
stos
das
jmp
pop
adc
popf
in
xchg
stos
inc
dec
jb
sub
inc
das
mov
ffreep
jne
insb
stos
or
lods
add
jmp
and
mov
int
cmp
pop
sub
add
mov
jl
insb
mov
test
lea
jg
push
mov
fisttps
mov
mov
mov
loope
inc
fisubrl
aas
sub
jb
push
pop
rcrb
movsl
push
or
and
xchg
addr16
sbb
ret
arpl
push
push
push
gs
adc
cmpb
mov
pop
cmp
xchg
jb
pop
imul
jnp
adc
push
cmpsl
fbld
mov
inc
sub
sbb
shl
pushf
cmc
sbb
push
dec
mov
jge
test
mov
jg
add
pop
subl
push
push
loopne
sbb
add
call
push
loop
xchg
xchg
stos
lcall
sub
ja
jns
loopne
jae
out
sub
cli
pop
je
or
mov
adc
in
and
rcr
pop
push
xchg
jecxz
pop
lahf
cmovo
imul
mov
mov
pop
add
sti
add
mov
mov
ja
jbe
mov
jl,pt
fildll
icebp
mov
push
mov
mov
stos
insl
nop
mov
pushf
cmpsb
imul
lds
add
ret
xchg
ss
js
sbb
faddp
jns
enter
and
inc
fldenv
xchg
mov
in
sbb
movsb
scas
nop
xor
push
dec
lahf
aaa
xchg
cmp
imul
cmp
dec
or
in
out
in
test
mov
mov
mov
inc
pushf
scas
inc
mov
pop
stos
lea
lcall
fwait
xchg
mov
divb
repz
cmp
and
pusha
jne
popf
inc
cmp
mov
or
notl
loope
jb
adc
mov
pop
jmp
cmp
push
or
cmp
ret
ljmp
push
fdivrs
icebp
testl
and
andl
jge
cmpsl
cmp
rclb
rcll
mov
jle
out
fs
xchg
inc
inc
and
mov
das
xor
pop
push
add
cmp
push
adc
or
add
push
add
loope
repnz
cmp
fiaddl
inc
mov
cmp
test
dec
sbb
mov
jle,pn
fnstenv
aaa
insl
inc
inc
lcall
mov
mov
popa
jnp
add
test
lcall
sub
data16
loope
aad
push
push
cmpsb
arpl
push
push
push
pop
adc
sub
rolb
dec
jbe
jns
inc
in
adc
mov
push
xchg
stos
mov
xchg
aad
clc
je
mov
loopne
insl
jg
scas
inc
stos
loope
pop
dec
lret
les
popa
mov
mov
sbb
xchg
das
scas
es
movsb
scas
mov
jl
dec
dec
loop
mov
arpl
test
and
pop
pop
pop
pop
sbb
ja
sbb
push
xchg
sub
jno
xor
inc
mov
xor
in
mov
lods
dec
dec
pop
jg
adc
xchg
and
push
nop
mov
jns
lret
pop
adc
sub
mov
pop
mov
cmp
xchg
test
out
sbb
mov
sti
and
outsb
cmp
ror
movsb
mov
sub
fbld
imul
mov
lret
sbb
jbe
hlt
xchg
xchg
pop
xchg
movsl
test
push
push
xchg
fucomp
pop
aaa
inc
stos
in
stos
mov
cltd
push
call
cmp
cmp
je
std
mov
stos
add
jne
pop
in
add
push
lret
add
add
xor
and
pusha
lock
inc
in
jo
test
adc
out
mov
icebp
adc
fadds
and
sbb
std
push
cltd
push
insl
and
repnz
fsubr
out
daa
testb
scas
mov
xor
mov
mov
dec
push
xor
xlat
lret
inc
mov
jnp
mov
pop
insl
adc
xchg
and
fsubl
pop
ret
mul
jg
xchg
testl
sub
push
rcll
jnp
xchg
xor
lods
test
insb
aas
push
scas
pusha
lahf
push
mov
aam
scas
dec
rcrl
shl
inc
push
mov
mov
cmpsb
inc
mov
outsb
sub
jnp
add
test
push
stos
lods
out
fists
scas
or
fs
push
mov
mov
loopne
lods
mov
fdivp
push
mov
arpl
or
fwait
cmp
xchg
fistpl
push
xchg
jno
pop
xchg
dec
jb
stc
xor
pop
ja
sbb
sub
mov
in
fbstp
pop
cld
jmp
cmp
xchg
arpl
mov
jmp
or
jle
fcmovnbe
sbb
enter
xchg
in
sub
sub
loopne
lds
cwtl
out
imul
fidivl
scas
push
pop
bound
fsubrl
sub
movsl
out
pop
icebp
rorl
je
xchg
sarb
mov
dec
orl
dec
int
mov
cmp
aad
pop
lahf
jg
cs
insb
xor
loop
lcall
mov
sub
stos
add
lock
xor
dec
mov
dec
nop
ficoml
ljmp
fld
inc
add
mov
lcall
push
jle
std
xor
or
jne
sub
leave
mov
jae
sub
pop
pop
dec
fucomip
mov
lret
rclb
xor
mov
lcall
adc
lahf
push
xchg
in
lret
stos
and
or
mov
mov
xlat
sub
cmp
adc
mulb
sbb
pop
leave
ja
leave
popa
fcompl
push
pop
ret
popa
inc
pusha
outsb
addr16
ja
hlt
pop
add
mov
gs
stos
push
addr16
popf
ficomps
and
mov
xor
repnz
fnstsw
mov
xchg
or
cmp
xor
xor
add
hlt
mov
outsb
out
mov
pop
out
fidivl
lret
pusha
dec
pop
push
leave
lret
addb
cmc
ss
mov
gs
xor
hlt
push
cmp
orl
ficompl
fsubrs
movsl
xchg
stos
imul
jg
lock
mov
shrb
in
insb
popa
inc
push
and
sub
cli
cmp
push
sub
jne
fcoms
add
cmpsb
add
pop
mov
adc
xchg
sbb
dec
jb
add
sbb
jbe
lock
jns
scas
lea
cs
neg
sub
push
lcall
mov
add
out
mov
mov
pop
push
loopne
adc
pop
or
push
push
add
orb
mov
popf
mov
cltd
xchg
jmp
adc
das
xlat
orl
nop
dec
push
jbe
sub
xchg
pop
in
in
je
adc
dec
cmpsl
ljmp
jmp
inc
mov
sub
dec
and
cld
xchg
dec
sbb
mov
ret
push
dec
cmpsl
jmp
pusha
int3
ss
pop
call
or
or
add
dec
sti
cmc
mov
pop
es
mov
shlb
movsb
mov
mov
leave
pop
outsb
test
push
add
xchg
dec
repnz
jnp
mov
dec
xchg
pusha
add
rclb
popa
sbb
or
or
jbe
push
pop
and
mov
cltd
decb
lret
sub
movb
xchg
jp
mov
sub
lcall
or
sub
dec
ficompl
push
shrl
xlat
dec
loop
or
mov
dec
pop
sarl
subl
out
mov
mov
in
in
xor
inc
mov
iret
mov
cmpsl
pop
mov
into
mov
mov
or
ret
or
mul
rcl
cltd
mov
push
loope
in
mov
test
dec
andl
andb
jle
arpl
sbb
das
les
popa
adc
jnp
mov
mov
lock
xorb
cmp
outsb
stos
shll
movsl
cld
push
dec
mov
stos
adc
cld
frstor
test
je
sarb
adc
loop
gs
xlat
xchg
std
xchg
movsl
xlat
xchg
push
push
imul
xlat
stos
jbe
cmp
jbe
dec
rcl
jmp
push
lea
cli
enter
divl
daa
stos
rol
mov
mov
dec
movsl
cmp
mov
sar
mov
pop
pop
pop
cwtl
xchg
stos
dec
in
out
and
mov
aas
sub
cmpsb
cmp
jge
xchg
sub
lods
imul
jne
push
jmp
inc
test
or
lods
sub
rclb
add
leave
jne
hlt
mov
int3
and
mul
sub
out
imul
inc
in
mov
dec
sar
std
decb
sub
daa
pop
fists
in
call
mov
cltd
movsb
mov
push
inc
aaa
out
and
cmp
or
negb
cs
mov
arpl
xorb
lcall
mov
pop
daa
call
adc
xchg
cmp
inc
mov
pop
fistps
push
mov
xor
jg
ljmp
movsb
add
lret
popf
add
out
adc
orb
mov
or
push
xchg
mov
orb
jmp
and
and
out
leave
push
in
aam
sub
lret
out
dec
push
dec
push
sub
cs
cmpsb
adc
rcr
or
mov
out
push
pop
pop
int
outsl
inc
sub
ja
lcall
aam
int3
leave
xchg
fistps
mov
ficomps
push
hlt
and
ss
adc
cmp
mov
out
adc
notl
mov
sub
lds
push
ds
jmp
jmp
pushf
outsl
outsb
fimull
mov
push
ds
inc
and
mov
mov
or
jmp
lahf
mov
xlat
inc
mov
in
sahf
or
adc
jno
jecxz
or
sbb
dec
cwtl
out
and
rorb
addr16
pop
js
insl
test
adc
mov
push
inc
or
dec
dec
add
mov
push
mov
add
in
pop
xor
sbb
movsb
arpl
arpl
js
mov
je
push
push
in
adc
pushl
adc
call
lods
sub
and
test
sbb
or
ja
cli
out
xor
daa
stos
adc
add
aam
or
in
cmp
push
add
leave
xchg
xchg
cli
pop
loope
add
push
inc
ja
aaa
mov
add
sbb
imulb
loope
sahf
cmpsl
les
jne
cmpsl
inc
in
mov
mov
inc
pop
jnp
sbb
sub
inc
lea
xchg
nop
arpl
push
jmp
ja
jne
inc
sub
arpl
inc
adc
enter
ja
mov
mov
add
push
and
sbb
in
add
ss
cmpsl
jb
jmp
imul
out
mov
icebp
dec
jmp
rorb
lcall
or
mov
nop
pusha
cld
jne
js
subb
mov
sbb
fists
rolb
outsl
imull
sbb
popf
mov
dec
inc
cmp
add
mov
sub
insb
lock
repnz
push
ficompl
xchg
or
insl
dec
insl
aas
mov
mov
aas
jne
push
pushl
hlt
cmp
add
or
leave
call
mov
jecxz
adc
dec
push
mov
jo
xchg
adc
push
popf
dec
cltd
xlat
mov
mov
sub
adc
jge
or
fwait
lahf
xor
dec
cmp
int3
dec
outsb
das
scas
cmp
test
dec
scas
push
jge
push
cmp
or
mov
fldcw
ret
jnp
push
pusha
or
jbe
iret
xchg
popf
sub
sub
dec
sub
or
call
inc
mov
lret
mov
sbb
push
or
adc
cli
pop
or
fisubs
mov
sbb
cmc
xor
aam
fnstenv
insb
and
movl
insl
aas
and
push
ror
push
push
adc
and
fwait
sbb
xchg
mov
scas
add
leave
scas
mov
movsb
aad
inc
mov
jp
xchg
add
es
scas
inc
or
mov
mov
sub
ret
sbb
ret
dec
inc
add
or
sbb
fs
ds
or
xchg
jle
and
xor
or
out
scas
adc
sub
repnz
adc
in
cmp
stos
leave
jmp
pop
inc
jae
jnp
ret
mov
cmp
js
sti
fmul
test
jmp
shll
lods
add
ja
dec
ja
or
aad
xchg
add
movsb
mov
fwait
mulb
ja
mov
outsl
or
ds
mov
push
adc
adc
add
cs
cmpsl
iret
xchg
loope
arpl
das
in
pop
or
jnp
in
into
out
aaa
and
jb
fstl
sub
mov
insb
adc
js
lds
ds
pop
ss
push
ss
mov
std
aad
sbb
or
push
and
sbb
movsl
lods
in
or
ret
xchg
popf
sub
inc
adc
xchg
fs
cli
pushf
jae
adc
test
mov
cmp
ret
imul
and
mov
adcl
cwtl
or
jg
mov
shll
pop
jbe
add
jo
icebp
adc
mov
loop
or
push
or
aas
sbb
mulps
push
jl
cmc
aad
sub
loopne
xor
std
scas
test
cltd
and
xor
fidivrs
aad
jecxz
imull
daa
enter
push
pop
in
scas
ds
into
pop
mov
jnp
push
iret
negl
jns
subl
sub
repnz
mov
sub
push
mov
dec
pop
movsl
fldl
les
test
sub
or
mov
mov
nop
cmp
push
std
mov
mov
mov
sarl
push
js
rorl
adc
sub
or
mov
enter
repnz
or
lret
mov
sub
mov
test
add
insb
popl
push
mov
mov
sub
in
sbb
pusha
dec
push
orl
pop
ds
and
adc
mov
insl
push
enter
add
aaa
fidivs
mov
xor
addb
inc
int
xlat
add
jge
add
cmpsl
into
push
sahf
test
inc
inc
inc
xchg
mov
inc
sub
push
into
push
push
ds
push
xchg
mov
xorl
scas
jl
mov
sub
add
or
in
jg
fs
xor
push
push
mov
lods
jmp
aam
cmp
mov
sub
xchg
jmp
leave
mov
sub
fisttpl
shlb
jge
xor
addb
dec
rolb
repz
insl
andl
inc
inc
pop
mov
stc
mov
inc
sub
and
adc
jge
jne
mov
xchg
jge
dec
jge
sbb
cwtl
push
inc
cmpsl
out
aad
push
test
mov
or
xchg
mov
mov
adc
sbb
dec
jae
adc
pop
mov
and
fsubs
adc
loopne
push
shll
es
adc
das
dec
stos
cwtl
icebp
ljmp
ljmp
inc
sub
inc
add
xchg
mov
test
es
sub
add
fs
sub
lds
ljmp
lcall
jno
shll
pop
cmpsb
sub
mov
xorl
xor
push
es
jecxz
sbb
and
sub
dec
cltd
mov
fldt
in
stos
mov
arpl
stos
outsb
mov
stos
mov
lret
push
mov
jp
sti
test
pop
leave
ljmp
mov
test
pop
shlb
icebp
loope
cmp
out
test
cmp
pusha
vgatherdps
popa
jp
aas
repz
loop
sub
sti
pop
popa
xchg
push
inc
movsb
cmp
xchg
stos
lds
out
testl
jnp
iret
lcall
pop
push
outsl
enter
mov
scas
xor
call
sbb
lds
test
pop
add
aas
jmp
cld
push
ljmp
popa
or
divl
sti
xchg
mov
mov
cli
or
fisttps
cld
ja
cmpsl
add
mov
out
loopne
pop
pop
out
xor
mov
push
scas
push
fisttps
ja
mov
or
and
pop
mov
insl
sahf
stos
or
mov
xchg
aas
idivb
mov
loopne
pop
mov
mov
or
inc
xor
xor
cs
stos
add
jb
bound
sub
decl
das
jno
sub
xor
adc
enter
cmp
push
cmpb
mov
push
repnz
pop
xchg
pop
and
pmulhw
ret
sub
stos
ja
pop
cmc
xchg
and
lods
pop
dec
cmpsl
data16
jb
aaa
pop
std
pushf
xchg
repz
out
subb
clc
sub
lods
stos
mov
leave
rol
cli
fidivs
nop
jmp
nop
jno
loop
adc
add
loope
lods
adc
push
adc
dec
mov
sbb
jne
pop
dec
test
jo
adc
add
enter
xlat
lcall
imull
mov
jno
cmp
cmp
jge
mov
xor
mov
insl
or
mov
jbe
or
mov
cmp
shlb
push
repz
outsb
out
add
sub
popf
es
popa
and
dec
push
fidivl
lock
roll
in
cwtl
push
ja
and
mov
mov
xor
dec
movsl
pop
adc
pop
mov
adc
mov
aaa
jecxz
rorb
enter
cltd
jge
ret
or
push
push
and
in
xchg
push
or
les
fdivl
xchg
lock
inc
pop
pop
dec
enter
shll
push
jno
jmp
sbb
xchg
mov
icebp
xchg
mov
dec
pusha
imul
xor
push
mov
or
scas
push
lahf
add
inc
sbb
dec
xor
dec
sbb
xorl
lea
dec
jae
dec
stos
testl
add
dec
push
pop
push
pop
or
push
push
loopne
nop
push
lret
outsb
sbb
lods
push
pusha
outsb
xor
into
out
dec
mov
sbb
push
sbb
jne
add
and
in
lock
sub
mov
add
sbb
xchg
repnz
fstpt
mov
xchg
stos
inc
push
mov
repnz
sub
lods
lahf
dec
mov
cwtl
cmp
pop
out
stc
push
inc
add
xchg
or
or
cli
jle
in
adc
cld
mov
mov
outsb
dec
cld
out
insl
sub
jb
pusha
mov
outsl
bound
add
inc
cwtl
ja
sbb
jl
fcmovbe
jno
push
pop
cmp
shlb
pop
mov
repz
jbe
add
jg
mov
or
fsubl
out
cmp
out
dec
mov
stos
out
mov
std
insl
pop
xchg
pop
cmp
push
std
mov
stos
adc
xlat
cmp
std
mov
sbb
jo
ret
sub
add
or
rol
int3
in
sti
push
repnz
dec
mov
xorl
push
fisubrl
add
jnp
in
push
and
mov
push
or
sub
or
hlt
push
mov
xchg
movsb
into
in
rorb
push
aam
inc
mov
add
aad
std
mov
mov
pop
add
mov
cmpl
sub
cld
or
ds
push
call
test
dec
jno
mov
push
pop
mov
dec
pop
pop
ja
ficoml
adc
test
ss
add
out
les
and
mov
adc
loopne
add
cld
pop
dec
mov
pop
lods
pop
faddl
cmc
ret
rcr
scas
xchg
je
cmp
cmp
cli
aas
repz
push
clc
scas
adc
jo
cmp
cwtl
mov
cwtl
into
iret
mov
pop
aad
cmpl
ljmp
inc
sub
push
or
fistpl
in
stc
aas
addb
xor
mov
cmp
or
push
cmpsl
das
jne
stos
push
push
cmc
out
es
mov
add
mov
addr16
dec
mov
jmp
aaa
dec
jbe
xor
jbe
dec
jbe
inc
test
aad
inc
push
js
jne
mov
jl
mov
lret
push
push
in
mov
fbld
push
sbb
adc
and
adc
lahf
mov
add
shll
adcl
inc
xlat
dec
jne
mov
iret
inc
repz
enter
pop
adc
dec
pop
ss
test
mov
xlat
ret
push
lods
push
mov
cltd
inc
scas
stc
jge
mov
fldl
push
jge
ret
fsubrl
cltd
pop
or
shl
sub
cmp
xchg
xor
cmc
and
popa
sbb
xor
jnp
imul
jle
mov
inc
pusha
test
and
push
inc
inc
sbb
addr16
jne
push
jge
sahf
cs
int3
and
mov
insl
xchg
cmp
data16
dec
shrb
arpl
testl
push
imul
push
pop
cmp
or
out
in
movsb
scas
pop
mov
sub
icebp
pushf
push
push
lret
xor
jnp
not
jg
out
popf
rorl
add
and
fcoml
xlat
or
fadds
int3
pop
add
das
push
inc
daa
or
mov
adc
mov
fcom
sub
push
xchg
push
mov
stos
pop
xchg
or
inc
sub
movsb
jge
inc
xchg
sahf
addb
enter
call
pop
cs
xchg
sti
xor
push
mov
sbb
pop
jg
int3
inc
pop
pop
dec
pop
mov
xchg
jmp
jp
lock
movsb
xchg
sbb
pop
pop
mov
push
inc
xorl
fsub
xchg
pop
pop
mov
arpl
aaa
testb
jle
inc
mov
lds
cwtl
jecxz
js
dec
repz
call
push
in
jmp
jne
xor
mov
insl
cmpsb
and
test
xchg
in
insb
scas
sub
lahf
push
repz
repz
ja
out
and
inc
adc
cmp
fwait
inc
sub
and
loopne
jmp
ss
push
sbb
dec
or
imul
add
das
inc
jo
aad
or
lods
es
xor
inc
sbb
push
je
dec
aas
arpl
movsb
nop
sub
sbb
daa
jle
aaa
in
sbb
inc
push
sub
cmovs
movsl
cmpsb
mov
push
movsl
and
add
sbb
cmpsb
pop
jecxz
sbb
mov
cmc
or
inc
imul
popf
fisubs
push
xchg
out
xchg
dec
dec
shll
sbbl
xchg
cmp
pop
mov
jns
push
je
mov
pusha
sar
enter
xor
ret
icebp
xchg
dec
shll
loopne
ljmp
aad
pop
inc
notl
repz
stos
imul
jmp
dec
shr
fs
aas
aad
les
add
cmc
aad
int3
and
andl
push
fistpll
stos
inc
push
mov
dec
push
imul
jne
pop
lods
fidivrl
repz
xchg
stos
gs
or
jmp
adc
and
gs
push
jmp
lock
pusha
xchg
sbb
jnp
add
and
enter
dec
hlt
out
and
aad
push
stc
jp
sti
and
fnstsw
push
cmpb
jo
dec
jmp
test
add
nop
test
push
hlt
movsb
shr
arpl
mov
or
add
test
or
xchg
add
add
mov
arpl
cmpsb
xor
movsb
int3
xchg
imul
dec
mov
jg
adc
shl
movsl
inc
push
aad
leave
inc
mov
shlb
scas
sub
imul
bound
je
loopne
psllq
pop
sbb
jl
xor
and
sbb
int
mov
test
xorl
adc
push
sub
shlb
das
and
push
xchg
das
mov
fsubrs
pushf
loop
xchg
push
adc
das
shlb
mov
inc
in
mull
data16
sarl
aad
enter
jg
jno
imull
jne
push
mov
in
out
fistpll
push
lods
sub
decb
testb
outsb
inc
or
stos
aas
je
xorb
mov
out
popf
popa
xchg
je
mov
and
mov
mov
cmc
add
or
imul
jle
inc
adc
jle
aaa
jle
inc
mov
loope
test
bound
add
xor
test
adc
out
mov
lret
pusha
or
stos
xchg
adc
and
cmc
cmpl
fcoms
sbb
add
testb
cmpl
jecxz
push
xor
leave
dec
cld
xchg
and
adc
jmp
add
pop
imul
dec
out
dec
call
cltd
scas
das
adc
imul
mov
inc
adc
jg
bound
sbb
daa
int3
mov
stos
lcall
imull
decl
mov
lcall
pop
ret
mul
adc
ret
and
ret
std
scas
push
or
notl
mov
sbb
pop
lcall
jmp
push
push
je
push
das
mov
xchg
pop
or
mov
mov
push
xor
pop
je
sub
ja
jo,pn
sub
pop
xor
pop
mov
pop
mov
sbb
testl
cvttps2pi
sbb
pop
sar
out
incl
mov
push
data16
adcb
xlat
fcomps
jmp
fmul
fisubl
repnz
cmp
mov
add
jb
lds
fisubs
inc
xor
sahf
pop
movsb
or
xchg
in
cmpb
addr16
cmp
cs
repz
and
dec
mov
inc
xchg
and
cwtl
fisubrl
test
mov
jp
je
aam
sub
sub
dec
in
lret
sahf
xor
enter
pushl
sub
adc
mov
or
xchg
inc
inc
cmc
aad
cmp
pop
xlat
fildl
cmp
clc
stos
add
shl
xchg
call
push
fstpt
rcr
repnz
into
dec
movl
hlt
mov
mov
fcmovnbe
mov
inc
push
and
pop
mov
fisubrl
pop
mov
mov
sbbl
xchg
lods
xchg
push
mov
add
pop
andb
loop
in
xchg
bound
sub
adc
add
fimull
jecxz
inc
sbbl
sahf
sbb
pusha
and
sbb
jp
adc
jecxz
dec
pop
jbe
ret
out
xchg
adc
pusha
insl
sub
shl
xchg
xor
addl
sub
adc
shlb
push
xlat
push
sbb
push
ss
sub
sub
das
into
inc
mov
sub
iret
in
xchg
addr16
in
out
stos
repnz
fcomp
sbb
movsb
or
xchg
jne
push
ss
aad
inc
sbb
lahf
jl
stos
xor
or
jnp
pop
das
pop
std
cwtl
mov
xor
scas
andb
mov
pop
daa
xor
or
test
mov
xor
mov
adc
sbbb
jl
mov
cmc
mov
inc
out
sub
xchg
bound
push
xor
mov
scas
sbb
mov
xchg
hlt
lea
mov
mov
insl
sarb
mov
dec
loopne
dec
ljmp
mov
dec
shrl
pop
lea
test
push
lock
mov
push
xchg
dec
int3
push
insl
and
out
pop
imul
xchg
pop
dec
lods
mov
push
xor
sub
jne
cli
gs
jne
sahf
jmp
push
push
aas
pop
pop
dec
daa
pop
push
hlt
pop
sar
in
loope
lcall
adc
inc
lods
jb
ret
std
daa
mov
mov
add
sub
xlat
or
icebp
pop
push
mov
popf
or
int
inc
jg
add
sub
cmpps
jmp
mov
movsb
xorb
fsubs
inc
loop
test
or
inc
or
lret
and
movsl
aam
imul
pop
pusha
and
je
push
dec
fs
or
cmp
xchg
inc
add
stos
in
or
popf
pop
ljmp
or
cmp
push
and
sbb
jg
lods
nop
cmp
mov
mov
cmpsb
jo
jae
fiaddl
aam
hlt
lds
mov
adc
test
loop
mov
cli
es
pop
popf
arpl
add
dec
rcll
icebp
jl
rcrb
xor
mov
dec
sub
sbb
cmpsl
mov
das
push
or
push
lds
xor
add
pop
in
es
xchg
mov
and
mov
into
push
in
mov
test
xchg
sbb
push
lea
das
std
imul
addr16
add
mov
ret
lods
pusha
adc
fists
out
mov
push
cmp
nop
pop
int
shl
ffree
sar
inc
jbe
lds
por
ja
pop
loopne
pop
jmp
iret
inc
adc
fistpll
adc
cmp
pop
loopne
cli
negb
test
or
inc
insl
loop
sub
cli
xchg
cmp
test
xchg
xchg
pop
test
hlt
icebp
xlat
hlt
iret
mov
imul
pop
sub
rol
xor
mov
push
push
cs
hlt
adc
inc
and
mov
xor
loop
add
jno
arpl
arpl
fsubrs
or
neg
bound
pop
fistpll
fsts
cmp
rcr
scas
pusha
pop
adc
lret
cld
clc
aam
sub
dec
movsl
adc
push
scas
cmpsl
int3
sbb
hlt
inc
jne
inc
div
sbb
lods
add
xchg
mov
jnp
jle
sbb
repz
clc
stos
add
outsl
inc
popa
xchg
push
icebp
scas
dec
in
mov
ret
js
xor
pop
mov
ljmp
inc
stc
jbe
jae
inc
inc
cmc
data16
test
dec
ja
dec
fdivr
lcall
add
repnz
imul
je,pn
pop
and
mov
subb
ss
and
into
mov
divl
xchg
and
cmpsl
out
or
repz
dec
addr16
lods
aaa
aas
or
stos
xlat
push
sbbl
push
sbb
inc
cmp
mov
cmp
mov
adc
je
push
aaa
lret
sub
mov
or
andl
mov
mov
outsl
inc
lods
lock
shl
cmp
imul
mov
pop
pop
lods
xor
scas
in
xor
jle
xchg
aaa
push
fldl
dec
push
lods
sbbb
sbb
imul
scas
mov
ja
test
sub
cld
fildll
mov
ljmp
arpl
jmp
adc
jg,pn
in
cltd
fsub
pop
pop
xchg
jo
sbb
cmp
roll
xlat
aam
ret
jbe
call
cmpsl
loop
imul
xchg
inc
add
pop
stos
jp
je
pushf
fwait
jle
inc
sahf
push
ss
movsb
fstps
sbb
pop
push
or
adc
and
ss
sbb
mov
xchg
or
push
cmc
lret
ret
adc
hlt
cmp
lahf
mov
pop
and
mov
mov
mov
and
or
pop
scas
add
push
cmc
fbld
mov
xchg
lahf
lds
sbb
xchg
and
subl
adc
mov
aas
mov
cld
out
adc
xchg
adc
xchg
inc
rcrb
loop
int
sub
adc
sub
roll
cmp
dec
bound
push
andl
cltd
in
pop
or
jp
and
in
pop
arpl
enter
outsl
add
xor
jno
sbb
and
mov
xor
aam
test
sub
push
icebp
cmp
cmp
lock
out
xchg
cmp
pop
fnstsw
arpl
mov
cs
xor
pop
mov
cmp
cs
ja
jp
add
call
ljmp
out
mov
push
push
jno
mov
dec
sbb
sbb
gs
call
xchg
ljmp
aad
add
sub
mov
push
sub
sbb
or
leave
jb
mov
or
mov
jg
push
daa
xor
out
inc
add
loopne
scas
mov
scas
scas
adc
scas
push
xlat
ja
mov
xchg
pop
pop
lock
xor
mov
bound
and
sahf
jae
jo
push
jmp
dec
xor
aam
test
xchg
xor
and
mov
imul
cwtl
pop
mov
and
ljmp
adc
and
sbb
inc
nop
rclb
add
std
jge
test
test
xchg
mov
lcall
dec
xchg
fs
fwait
shll
cmpsb
imul
dec
shll
lret
in
fwait
lahf
xchg
mov
mov
xor
adc
sbb
inc
imul
lcall
sti
jmp
lret
fldenv
lcall
push
dec
shll
pop
inc
xor
shll
mov
dec
sar
stc
out
pop
sbb
sub
xor
scas
fwait
xchg
arpl
dec
shll
jae
imul
xor
adc
cmp
imul
sbb
lret
add
push
adc
out
popl
lcall
lcall
push
cmpsb
imul
test
add
and
jg
push
or
je
adc
adc
adc
jae
outsb
and
xor
add
js
jl
jbe
jle
imul
outsb
cltd
mov
push
icebp
add
imul
sbb
and
jns
jp
add
mov
push
hlt
les
pop
in
mov
mov
add
add
inc
fld
test
iret
xor
and
sbb
fstpt
inc
dec
or
sub
and
xchg
mov
xor
in
cwtl
xor
leave
lea
add
add
lods
lods
insb
sahf
nop
scas
pop
and
mov
jmp
movsl
int3
or
sbb
rclb
add
add
add
inc
mov
push
xor
insl
inc
mov
inc
inc
movl
add
dec
dec
pop
cwtl
call
fdivl
jb
aaa
jns
mov
cld
inc
cltd
and
dec
mov
movsb
lds
cmpsl
mov
mov
add
je
and
dec
int3
push
ficomps
fisubl
aas
add
push
push
adcl
or
xlat
add
add
xor
push
dec
push
push
ja
in
in
insb
out
push
cmp
sbb
xor
mov
add
cwtl
mov
loope
jl
mov
mov
mov
ret
jge
insl
es
lods
outsb
push
xor
add
add
add
xor
popa
mov
lods
das
or
jnp
xchg
std
jmp
add
jmp
mov
call
in
out
out
sahf
pop
mov
sti
xor
mov
jno
push
shll
mov
addr16
cmp
xlat
add
fsub
aad
aam
cmpsb
xchg
xor
jns
inc
mov
add
or
js
popf
fisttps
out
js
call
add
push
loopne
decb
inc
rorl
std
dec
push
addr16
mov
add
add
movsb
jnp
push
adc
or
and
add
xlat
xor
inc
add
jnp
add
add
divl
fmull
mov
clc
and
push
jb
mov
adc
mov
ret
js
outsb
imul
or
into
in
push
fldenv
ljmp
or
dec
jg
jae
jl
int
or
add
into
cmp
pop
sbb
popa
das
movsb
xchg
je
cs
les
lahf
ss
lret
xor
icebp
loopne
push
cltd
jb
imul
mov
add
add
int
mov
daa
mov
cmpl
cmpl
push
sbb
pop
jae
cwtl
test
jmp
sbb
add
add
xchg
scas
lods
mov
clc
pop
cwtl
ret
mov
xlat
xchg
jecxz
and
outsl
into
in
enter
add
out
arpl
adc
cltd
add
imul
sbb
jge
pop
pop
fiaddl
add
add
ja
inc
lret
je
sahf
popa
aas
je
bound
data16
xchg
mov
push
xchg
test
add
add
sti
cmp
mov
dec
dec
out
int3
ret
mov
int
pop
push
jae
imul
mov
xchg
add
add
add
sbb
addr16
dec
push
loop
bound
pop
jecxz
mov
lret
mov
mov
add
mov
fdivrl
loop
xor
mov
in
xchg
add
push
inc
add
sub
es
repnz
push
push
sbbl
push
jae
xor
gs
pop
add
outsb
leave
imull
push
lret
pop
filds
sbb
fdivl
xor
add
stos
pop
pop
cmp
push
pop
dec
cmpsb
xor
cmp
xor
add
orb
out
xchg
dec
xchg
adc
cmp
pop
push
push
xchg
ret
add
and
jl
inc
negb
adc
inc
testb
sub
pop
in
daa
ret
sub
rolb
add
add
mov
cmp
mov
lods
pop
pop
dec
fdivrp
into
daa
dec
data16
add
repnz
fsubs
xor
xchg
adcl
sti
mov
dec
divl
je
add
pop
fists
lret
xchg
inc
and
out
out
xchg
xor
jns
xor
out
mov
jmp
scas
ret
xchg
stc
xchg
nop
orl
addb
inc
add
inc
or
rol
inc
push
cmp
push
push
xor
add
clc
jg
push
cmp
ss
inc
enter
inc
dec
push
cmp
inc
push
sbbl
sbb
dec
push
dec
dec
sbb
add
inc
pop
push
push
pop
push
pop
dec
pop
push
push
inc
dec
pop
dec
inc
dec
dec
pop
dec
dec
mov
clc
dec
push
push
inc
lods
stos
cmpsb
lahf
sbb
mov
test
mov
dec
addl
mov
mov
sbb
mov
stos
cmpsb
movsb
mov
movsb
je
pop
mov
cmp
enter
xor
in
stc
stc
or
loop
std
stc
inc
xor
add
iret
es
dec
call
aas
rclb
mov
xor
sbb
mov
cmp
push
sub
call
pop
push
outsl
dec
push
stos
sbb
push
jae
bound
pop
out
dec
inc
lods
mov
fnsetpm(287
jmp
fbld
stos
pop
cmp
cmp
cmp
ret
mov
jl
xor
sbb
xor
pop
pop
int3
adc
push
cmp
int3
arpl
sub
or
cmpsb
and
cltd
push
push
jmp
ret
movsb
loop
leave
add
cmp
and
cmp
nop
cmp
cmp
stos
push
jne
adc
sbb
aam
data16
jne
rolb
outsb
arpl
push
dec
inc
and
and
and
fs
imul
fisubrl
sbbb
ficomps
jne
adc
mov
jl
xlat
mov
stos
mov
flds
in
icebp
dec
jnp
fimull
add
sbb
imul
ja
jp
mov
mov
ret
push
faddl
lea
mov
fadd
jecxz
jns
ds
mov
jmp
shrb
push
clc
or
pop
fsubs
jnp
test
sub
sbb
push
xchg
fcmovnb
lret
enter
int
ja
movsl
jle
adc
push
mov
dec
push
add
mov
add
add
cmp
popl
jo
mulb
inc
inc
pop
hlt
mov
mov
add
xlat
ret
mov
sbbb
xchg
mov
lea
subb
jle
mov
stos
mov
nop
xchg
cltd
ljmp
int3
jmp
pop
pop
scas
mov
mov
lea
shll
addb
popf
ljmp
jnp
mov
aam
insl
push
or
sub
inc
pop
daa
xor
sbb
or
and
mov
cmpsl
or
push
js
pop
jbe
mov
js
mov
inc
insl
dec
jp
push
imul
fs
das
nop
mov
addr16
jo
inc
imul
insb
pop
repnz
and
je
out
pop
scas
xchg
nop
mov
mov
xchg
mov
inc
add
lahf
fcoms
xchg
xor
mov
clc
filds
popa
sbb
jmp
repnz
les
scas
movb
icebp
mov
addr16
out
add
adc
adc
insl
jle
xchg
xor
pop
adc
cs
adc
or
imul
mov
movsl
dec
push
or
push
mov
inc
push
dec
ret
push
push
sbb
loopne
adc
inc
mov
leave
sub
lret
call
cwtl
jmp
xor
sti
fldl
insb
mov
adc
jbe
roll
leave
test
ss
negl
lds
jnp
test
popf
ret
sbb
nopl
popa
jge
adc
lret
rcrl
mov
xor
cmc
cwtl
or
int
cmp
and
xchg
repz
xchg
lahf
imul
jl
sub
fldenv
fbstp
pop
pop
pop
add
fnstsw
jno
fs
data16
sub
dec
push
cmpsl
jle
xor
adc
cmc
int
push
hlt
mov
enter
lods
cmc
dec
ja
or
push
fistpll
push
and
lods
pop
cmc
arpl
jnp
and
stc
pop
push
test
ljmp
nop
mov
xchg
xchg
out
jge
jle
jg
mov
push
inc
xor
xchg
mov
pusha
inc
test
in
pop
or
and
sar
ljmp
aad
or
adc
mov
pushf
mov
push
add
test
adc
cmp
cmp
xor
and
mov
inc
das
in
subb
inc
pop
push
xchg
jae
inc
inc
and
data16
push
mov
mov
push
inc
mov
fldl
out
xchg
dec
in
push
push
mov
mov
pop
out
stos
xchg
out
push
repnz
repz
cld
xlat
iret
shl
mov
fidivl
pop
shlb
adc
test
mov
push
sub
stos
inc
add
and
pop
jae
push
das
daa
mov
iret
lret
stos
fs
loop
sbb
inc
je
jg
arpl
data16
mov
mov
xchg
lahf
sbb
sbbb
or
xchg
mov
imul
fcomi
fsubr
jp
gs
lret
mov
dec
mov
lcall
sbb
je
roll
js
pop
xor
push
cmp
sub
shll
lret
push
in
xchg
jp
pop
jb
cmp
push
lcall
mov
das
and
pusha
insl
jo
arpl
lret
in
aaa
fstpt
cmp
shrb
leave
lock
mov
cld
stc
lea
pop
xlat
loop
jecxz
xchg
fldt
icebp
push
das
stos
cltd
out
aad
ror
cmc
lret
sbb
mov
ja
imul
jno
pop
es
loope
push
jae
push
add
lcall
inc
mov
mov
cltd
test
lret
jle
fcmovnu
adc
mov
rcl
fimuls
sbb
je
stos
test
icebp
xor
aad
cs
cmpsl
cli
cmp
lcall
gs
mov
sbb
xlat
and
xor
sti
addr16
jge
xchg
dec
jbe
inc
negb
insl
jno
insl
push
sbb
push
and
aaa
or
or
and
mov
shr
jmp
movsl
push
xor
dec
stos
out
pop
jns
push
pop
lea
stc
mov
cmp
pop
fidivl
sti
jb
jbe
lcall
adc
adc
adc
pop
cmp
jb,pn
push
sti
add
outsl
xchg
add
pusha
imul
xchg
ja
inc
xchg
inc
push
pop
push
pop
inc
dec
movsb
push
ja
mov
mov
popl
mov
in
xchg
int
lret
mov
jg
rcr
xchg
sti
inc
dec
xchg
xor
mov
or
push
lahf
dec
cmp
cmpsl
sub
or
mov
call
sbb
test
pop
scas
dec
test
dec
or
out
fsts
enter
sub
mov
cmp
add
data16
inc
stc
arpl
loopne
pushf
mov
sbbb
and
scas
out
push
push
push
dec
jns
dec
dec
or
test
jle
adc
add
pop
pop
cmp
pop
scas
add
adc
push
push
and
fwait
jne
ja
ja
cs
jnp
aas
and
mov
jns
ljmp
add
rcrb
pop
push
in
fisttpll
fwait
add
add
leave
or
or
pop
out
fidivs
mov
jmp
mov
pushf
jne
xchg
test
subb
inc
mov
mov
lock
cmpsl
mov
dec
sbb
add
inc
inc
cltd
lret
or
dec
and
fmuls
inc
sub
outsl
std
mov
sub
and
push
mov
cmpsb
das
dec
or
and
mov
xchg
cld
or
lds
pop
std
mov
pop
or
mov
repz
test
lret
push
cltd
fstps
mov
push
dec
mov
dec
push
mov
iret
or
clc
lahf
mov
cmp
cwtl
popa
adc
dec
movsl
movsl
push
add
cmpsl
sub
sahf
jb
xchg
push
add
inc
insl
add
divb
mov
aad
pop
mov
push
movl
pushl
jne
mov
cmpsb
xor
jmp
pop
add
stos
imulb
int3
push
jecxz
lods
movsl
ds
inc
sub
sbb
adcl
jge
pop
mov
add
inc
or
mov
das
pop
daa
xlat
and
sub
es
xchg
cmp
repnz
cmc
xor
inc
loop
shrb
push
ljmp
roll
out
xor
mov
sub
inc
daa
push
rcrl
push
and
sbb
cld
ja
push
add
andl
or
inc
adc
dec
and
stc
psrld
and
nop
cmp
bound
testl
pop
shlb
adc
dec
jns
xchg
cmp
jl
add
add
dec
aaa
add
inc
fsts
iret
imul
inc
jecxz
sub
fimuls
shl
pushf
push
sub
cli
xlat
push
push
lock
popf
mov
in
mov
or
add
addb
lds
xor
mov
movb
inc
mov
hlt
aam
test
or
push
das
jp
cmp
insb
and
xchg
jo
fcomi
clc
add
add
mov
mov
mov
mov
mov
xor
xorl
dec
cmpl
inc
mov
aam
out
sbb
add
stc
cld
test
xchg
in
ljmp
testb
ret
out
repnz
mov
mov
es
lock
mov
lods
jno
bound
sbb
add
cmp
aad
imul
insb
incl
mov
sub
ret
xchg
stos
insl
std
inc
xchg
fistpl
into
jle
xor
mov
xorb
inc
sbb
xchg
xchg
fcmovu
cltd
idiv
dec
mov
inc
arpl
push
push
xchg
push
or
lcall
test
xor
loop
icebp
fs
mov
scas
or
cmp
add
push
jb
test
cmp
pop
sbb
jae
pop
dec
cld
nop
sub
inc
pop
adc
out
cmpsl
pusha
adc
gs
or
pop
inc
or
cmp
psrlw
ja
add
add
ficomps
xor
xchg
mov
lret
add
adc
insb
and
imul
js
fistpl
jg
or
cmp
pop
push
mov
adc
adc
or
add
sub
or
lcall
sub
xlat
fs
in
ja
dec
xlat
and
sahf
pop
sub
inc
add
fistpll
rcrl
cmp
repnz
add
add
sub
lds
data16
andb
imul
mov
aam
inc
push
jmp
in
js
jmp
jns
imul
ds
cld
dec
sbbb
es
lds
adc
add
rorl
mov
sbb
sbb
cmp
sbb
and
cmp
scas
in
and
sbb
mov
xor
les
fsubrl
sar
call
xor
pushf
inc
mov
sbb
fldcw
loopne
xor
mov
pop
jo
sbbw
pushf
xchg
adc
sbbb
dec
cwtl
div
mov
sub
mov
sahf
xchg
andb
loop
mov
dec
and
out
adc
sub
dec
dec
jp
int3
gs
adc
js
inc
shll
jl
fcoms
jmp
add
pop
pop
adc
popa
sub
or
push
xor
or
and
push
and
pop
sub
mov
add
sub
sub
fldlg2
pop
or
and
lds
sbb
dec
dec
dec
pop
stos
adc
inc
sub
pop
xchg
and
pop
pop
inc
or
add
or
push
xchg
fiadds
xor
push
addb
jbe
xor
cmp
cmp
dec
cmp
das
call
pop
sbb
add
es
xor
and
lret
imul
sub
les
push
push
push
sbb
sbb
sbb
adc
jo
pushf
push
cmp
pusha
daa
es
je
mov
fs
out
out
hlt
mov
cld
dec
mov
add
mov
pop
jb
cwtl
lcall
add
cmp
scas
lds
rcl
adc
pop
lods
inc
mov
shrl
and
add
rolb
popa
out
jb
andb
jo
add
and
dec
inc
xor
loopne
lock
lods
lods
adc
adcb
lds
lret
jecxz
movsl
test
fstpt
enter
push
pop
add
stc
xor
pusha
unpcklps
xor
push
ja
adc
sub
fstl
pop
xor
inc
js
mov
sub
jecxz
sbb
sbb
sub
sti
hlt
in
jmp
lret
jmp
or
adc
enter
push
inc
mov
jae
sub
pop
cmc
imul
mov
and
push
push
aaa
shll
add
pop
push
pop
mov
out
pusha
enter
add
cltd
xchg
and
cmp
xor
pusha
notl
add
xor
fnstcw
scas
enter
xor
test
mov
js
clc
or
in
lea
arpl
dec
cwtl
movl
add
xchg
push
das
cmp
inc
and
loopne
ret
int
test
push
mov
jge
push
or
sbb
in
bound
push
test
cmpsl
jmp
jmp
pop
das
mov
bound
shlb
add
push
mov
fwait
mov
mov
xchg
pop
and
add
loop
jno
in
push
clc
mov
mov
nop
decl
repz
xor
enter
pop
push
aas
or
mov
shl
adc
add
pusha
hlt
push
sbb
add
sbb
sub
adc
jl
fs
adc
lock
mov
inc
dec
push
cmp
add
or
add
popa
adc
xor
movb
imul
and
xor
mov
cmpsl
ret
or
clc
xchg
or
stc
ljmp
xchg
subb
push
sub
pop
or
sbb
es
inc
dec
push
popa
mov
jo
cmp
add
dec
add
int3
jl
les
pusha
jae
jnp
rolb
in
dec
push
inc
jge
cmc
add
gs
push
sbbb
mov
in
stos
xor
or
sbb
xor
cmp
dec
mov
movsl
movsl
fwait
add
leave
insl
inc
lret
jmp
repz
jecxz
mov
push
fmuls
adc
dec
push
shl
nop
xchg
jne
pop
lret
xchg
dec
std
xor
cmp
mov
xorl
push
dec
mov
cli
pusha
fildll
xchg
into
xor
outsl
cmp
imul
iret
mov
fldcw
adc
xor
cmc
in
js
aas
jns
sbbb
xor
or
orb
xchg
jo
fstps
push
or
int
rorl
fsts
into
cmp
nop
or
in
pop
arpl
ss
mov
popa
mov
cltd
xor
add
sub
lret
jmp
cmpsl
scas
insb
mov
sbb
popa
and
xchg
test
xorb
out
cmp
daa
fnstsw
jle
pushf
push
xchg
fisttps
add
add
sbb
cmp
pop
fs
push
add
add
adc
fisttpl
cltd
jno
hlt
sbb
pop
pop
cmpsl
sbb
jl
test
pop
mov
fldcw
clc
xor
lahf
cmpsl
lods
es
gs
xchg
les
in
orl
arpl
or
icebp
pop
je
xor
cs
sbb
mov
rorb
out
iret
adc
fsubl
in
add
fidivrl
push
or
push
xchg
nop/reserved
outsl
inc
pop
fildll
or
sub
jbe
xchg
mov
int3
mov
rcrb
mov
xlat
lcall
or
fadd
out
aam
ret
mov
jg
push
lods
mov
insb
mov
or
outsl
popf
jmp
sarl
cmp
xlat
add
das
ficompl
lds
aaa
or
dec
pop
add
dec
cmpsl
lock
mov
mov
and
int3
pop
and
xor
nop
test
loop
push
sbb
add
pop
inc
add
add
adcl
mov
cmpsl
stos
loopne
inc
adc
push
jp
add
xor
rclb
js
in
nop
fldcw
dec
inc
lods
test
adc
and
sub
xchg
cmpsl
adc
sbb
sub
je
mov
sbb
sbb
mov
mov
add
cmpsl
ds
adc
mov
add
lods
cmpsb
sbb
test
das
pushf
push
inc
insl
lods
fimuls
fimuls
outsl
pop
ja
pop
shll
mov
jl
inc
dec
adc
add
sbb
push
dec
js
mov
dec
test
xchg
enter
scas
repnz
pop
cltd
sbb
add
jecxz
sbb
cwtl
push
sbb
add
pusha
push
or
adcl
adc
mov
mov
or
cli
mov
or
push
sub
shlb
push
mov
int3
jno
movsl
les
cmp
or
js
call
sub
mov
dec
add
out
int
mov
call
js
mov
icebp
lahf
jno
adcb
jle
xchg
jno
mov
cmp
fidivl
dec
popl
mov
cmp
inc
movsb
inc
or
pop
push
scas
cmp
insb
rclb
add
repnz
pop
push
daa
je
or
pusha
xlat
shll
xlat
mov
adc
loope
jo
push
jnp
mov
clc
movsb
lret
shll
int3
mov
stos
jne
pop
and
pusha
sbb
ss
push
dec
cltd
rsm
shlb
adc
xorl
ds
and
and
xor
xchg
mov
adcl
xchg
mov
mov
mov
mov
shll
mov
enter
fisubs
div
subl
mov
rcr
push
sbb
adc
loopne
neg
lock
movsl
cmpsb
ret
jmp
adc
or
cmp
mov
push
mov
popa
andb
and
inc
inc
inc
je
fidivs
loopne
xchg
or
and
add
mov
pop
ss
dec
mov
add
add
incl
dec
stos
sub
movl
or
lds
popa
add
add
cld
ror
test
pushf
enter
lcall
adc
push
repz
enter
cli
in
fnsave
in
cwtl
stos
fiadds
add
adc
dec
clc
loopne
pop
jge
cpuid
xchg
push
dec
notb
int3
rclb
repz
test
xchg
pop
mov
add
inc
pop
aas
dec
adc
aas
fisubs
into
mov
xor
add
aaa
test
std
lahf
sbb
loope
sbb
mov
call
xlat
or
push
fucomp
loop
mov
rclb
add
lock
mov
jne
push
mov
cmp
mov
cmc
insl
sub
int
ljmp
fildl
hlt
addr16
test
sbb
adc
jne
dec
cmpl
mov
add
int
movsl
subps
pop
scas
and
rolb
pop
faddp
lret
imul
push
arpl
sub
lods
hlt
sbb
lods
adc
les
ficomps
int3
and
in
xchg
xor
idivl
outsl
dec
mov
xchg
add
and
fisubs
in
insb
mov
mov
decb
cmp
cmpsb
push
cltd
std
lret
jecxz
sbb
addr16
std
stos
adc
jne
ljmp
xor
cmp
push
add
jge
fisttpll
jb
dec
pop
push
paddb
prefetchnta
or
enter
cs
cmp
xor
fs
inc
push
das
adcl
loopne
and
push
or
sbbb
stos
mov
mov
lods
in
out
dec
xchg
dec
cld
sbb
fsubrl
cmpsl
icebp
out
dec
cmp
je
xor
lds
jg
mov
push
fistpl
je
mov
add
jne
pop
jno
dec
sub
sbb
daa
idivb
dec
mov
adc
imull
xchg
jecxz
or
into
push
imul
lret
aam
jl
jne
jb
ja
add
les
pusha
popa
pusha
sbb
jbe
insb
dec
addb
push
in
lods
scas
add
push
scas
mov
scas
mov
mov
orb
add
test
movsb
cmpsb
mov
mov
mov
nop
mov
mov
enter
mov
mov
das
push
clc
insl
inc
lcall
stos
sbb
repnz
mov
jge
sbb
xchg
push
sbb
out
icebp
sub
push
test
mov
jne
xchg
stc
or
cmpsl
scas
adcl
jae
pop
or
xchg
mov
shrb
inc
fists
cmpl
inc
mov
xor
dec
clc
data16
leave
aad
fistl
movsl
imul
jae
jno
movsb
sbb
mov
and
xor
adc
xchg
aad
cwtl
add
arpl
cmp
insl
divl
mov
xchg
mov
jno
add
sbb
or
add
std
mov
mov
pop
imul
sbb
cmpsl
das
push
adc
ss
mov
aas
dec
aas
std
cltd
mov
xor
mov
xor
mov
testl
push
mov
aad
sub
mov
sbb
mov
and
scas
les
add
cmpsb
test
add
mov
jl
dec
test
jne
mov
bound
stos
xchg
adc
stc
pop
or
inc
adc
push
sub
inc
in
popa
cmp
push
mov
aam
lcall
shlb
jne
fldl
mov
pop
or
dec
add
push
mov
test
mov
xchg
out
add
xchg
decb
xor
rolb
fcoms
xchg
std
cmp
add
or
test
jmp
pop
push
push
add
lods
lods
subb
lcall
shlb
hlt
jge
xor
sbb
push
pop
pop
push
aam
in
mov
mov
ja
hlt
lods
mov
push
sbb
push
addb
inc
imul
cmpsb
daa
andnps
dec
or
add
dec
pop
pusha
jne
cmovns
inc
test
xchg
mov
or
lret
neg
fcmovnb
cld
mov
inc
imul
ret
add
cmp
pusha
cmp
cltd
sahf
mov
data16
cmp
insl
or
dec
test
das
pop
fs
inc
rclb
dec
dec
pop
in
stos
push
xor
test
prefetcht2
sbb
push
or
popl
lcall
fimuls
fidivrs
push
in
jae
jne
xchg
dec
jg
sub
fdivs
loop
push
lods
test
pop
mov
jae
sub
and
or
pop
push
jg
sbbb
aas
adc
or
test
cmp
divl
int3
jg
imull
inc
inc
or
xadd
adc
ficompl
sahf
lahf
and
mov
add
lret
inc
push
les
divl
movsl
int3
imul
add
jae
pop
or
mov
mov
aam
rclb
lods
jno
push
ljmp
bound
push
pop
pusha
dec
jno
imul
hlt
add
mov
in
sub
pop
jb
fiadds
xchg
fdivs
or
add
sbb
loop
dec
mov
push
or
xchg
jne
cmp
fldcw
sbb
inc
fs
mov
xor
shrb
push
dec
jmp
inc
cltd
aad
movsb
popa
adc
pop
dec
shll
sbb
stos
inc
push
xchg
rcl
inc
movsl
mov
loop
add
add
push
sbb
jecxz
mov
movsb
xchg
xchg
pop
mov
leave
aaa
outsl
xchg
lods
add
in
or
fwait
cmc
pop
rorb
movsb
loopne
inc
or
and
and
dec
enter
mov
sbb
mov
shlb
aam
pop
xor
push
mov
jns
push
movhps
lock
stos
out
fld
dec
jmp
pop
pop
or
push
push
cmp
cmp
orl
and
mov
push
sbb
or
jge
jge
push
fcmovne
add
addl
fwait
popf
add
loopne
in
out
loop
in
fmuls
je
stos
xchg
push
add
outsb
pop
xchg
push
add
inc
pop
push
inc
push
push
dec
pop
dec
pop
inc
pop
pop
dec
dec
push
inc
push
dec
and
loopne
insl
sub
sbb
aaa
push
inc
cmp
xor
pop
repz
inc
rclb
rcr
xor
lahf
cltd
xchg
stc
xor
ja
int
mov
mov
rolb
cld
fistps
ret
leave
imul
mov
pop
mov
daa
stos
and
or
inc
jl
sub
inc
jae
xor
pop
pop
adc
adc
inc
cmp
mov
xlat
xchg
adc
push
je
xor
or
add
inc
aad
cmp
std
push
into
mov
and
pop
push
pusha
jg
adc
push
test
ret
sbb
or
jno
fs
sub
nop
jge
sub
pop
ss
sub
and
pop
sub
out
cli
dec
mov
roll
jbe
inc
push
xchg
imul
lods
insb
push
sbb
imul
movzbl
fsubrl
repnz
daa
adc
test
negb
add
cwtl
and
insl
mov
hlt
jne
push
imul
add
add
enter
dec
sahf
and
nop
inc
adc
push
insl
lods
outsb
mov
mov
xchg
pop
mov
decb
inc
add
add
ss
push
lret
pop
mov
push
out
call
push
ds
jne
xchg
add
add
enter
aas
mov
lret
arpl
sarl
sbb
and
out
pop
sub
in
sbb
cltd
push
add
scas
ss
sbb
pusha
add
jecxz
mov
popa
mov
out
imul
push
ljmp
outsb
sbb
in
mov
dec
dec
adc
mov
pop
xor
xchg
push
addb
gs
mov
insb
cmp
push
xchg
out
int
or
add
add
inc
pop
shlb
sbb
add
mov
pop
jecxz
int3
cvtdq2ps
push
inc
stos
out
sbb
sbb
inc
mov
pusha
fmul
out
adc
add
adc
insb
mov
cmp
xor
jle
push
jns
jmp
dec
loopne
pop
xchg
cmp
loop
scas
inc
mov
add
clc
jmp
jecxz
lods
jb
cmpsl
push
xchg
xchg
popa
stos
mov
pushf
movsb
bound
mov
lcall
aam
jo
push
cmpb
or
add
pop
int3
add
or
push
adc
or
fidivs
shll
inc
xchg
shl
push
add
add
sub
mov
add
int3
mov
inc
inc
sar
shlb
sub
lret
pop
lcall
jmp
or
xchg
inc
push
pop
adc
sbb
pop
adc
je
stc
push
mov
out
loopne
adcl
push
sub
test
add
test
mov
cltd
sbb
jb
push
fwait
ret
xlat
mov
lods
sub
cmp
insb
add
add
jge
adc
jae
je
imul
adc
mov
mov
lods
or
add
add
mov
or
outsl
in
popa
jmp
pop
insb
call
jg
mull
or
add
imul
mov
pop
pop
and
int
sub
adcl
rol
hlt
xchg
aam
frstor
insb
sub
sbb
push
mov
add
movb
popa
pusha
addr16
and
cmpl
leave
xor
sbb
orl
and
mov
leave
test
add
sub
sub
xchg
ljmp
mov
out
adc
mov
mov
aam
or
addl
dec
aad
push
into
push
or
clc
sbb
and
and
dec
mov
stos
xor
rclb
loopne
and
fs
sbb
inc
push
shlb
jae
leave
sarl
or
mov
test
lcall
mov
mov
pop
out
nop
pop
add
rolb
jbe,pt
mov
add
rcll
shl
enter
sub
stc
xchg
out
sbb
movb
repnz
sub
pop
pop
pop
pop
mov
in
or
adc
mov
jno
push
adc
or
in
adc
xchg
lahf
xchg
or
add
and
mov
fsubrs
sbb
sbb
fldcw
mov
gs
cltd
xorl
call
cmp
xor
sbb
cs
hlt
or
add
add
repz
cmpsb
cmp
ss
ds
mov
add
decb
cwtl
inc
sub
inc
popa
adc
negl
jo
sbb
mov
mov
cwtl
test
push
mov
scas
rol
add
das
sbb
popf
aas
add
cmc
fisubrs
rclb
mov
add
lcall
leave
pop
mov
cmp
cmp
xchg
nop
adc
mov
sbb
cmp
int3
popa
sub
and
enter
add
cli
push
hlt
cmp
add
div
arpl
mov
add
xchg
pop
sbb
inc
xchg
mov
jg
mov
add
into
outsb
imul
mov
inc
adc
lahf
aaa
cld
inc
xchg
xor
add
lret
jne
push
shlb
shlb
sub
and
add
and
xchg
imul
out
mov
push
adc
imul
arpl
jbe
xchg
and
out
aad
lcall
sbb
mov
aam
mov
or
xchg
test
mov
lahf
ss
push
mov
in
fnsave
cwtl
add
test
in
ss
cmpb
add
insl
sbb
mov
lcall
jecxz
out
adc
out
pop
push
sbb
cli
out
mov
nop
xchg
sub
jmp
inc
pop
ljmp
andb
or
or
cltd
into
aam
adc
add
push
mov
pop
inc
stos
aaa
iret
pop
rcrb
stos
imul
pop
sbb
or
xchg
xchg
sub
mov
or
xorb
mov
pop
std
jae
in
pusha
daa
xor
jp
inc
or
inc
sub
inc
fwait
adc
cmp
pop
mov
sub
sbb
add
lock
out
int3
sub
shrb
push
add
inc
push
or
sbb
test
adc
pusha
or
arpl
pop
xlat
jnp
punpckhwd
jg
mov
add
scas
ret
arpl
mov
nop
sti
out
prefetchw
or
and
add
xor
xor
push
mov
sbb
lods
push
add
cwtl
fwait
in
orb
mov
mov
push
add
xchg
aas
pop
cmpsl
xorl
dec
xchg
add
test
jl
or
mov
xchg
fdivrs
imul
and
xchg
inc
cli
cltd
jl
xchg
js
inc
adc
fisttpl
mov
cli
into
cmp
aad
xor
cmp
push
js
pop
mov
add
xlat
mov
subb
jnp
xor
jge
dec
and
lret
or
out
or
adc
pop
add
jae
mov
lods
cmp
pop
loope
cmc
in
jno
sbb
add
jg
cli
cli
jp
cs
sti
mov
out
add
add
dec
cltd
dec
sub
push
shlb
dec
out
loop
adc
xlat
mov
xchg
add
mov
das
xchg
ljmp
xor
shlb
std
push
inc
stc
hlt
mov
xchg
mov
cmpsl
jl
repz
lahf
adc
stc
adc
pop
ja
adc
stos
inc
rcl
insb
pop
popa
add
pop
ds
xor
sbb
loopne
sub
sti
cld
insb
js
shlb
cmc
push
jae
adc
bound
nop
aas
mov
sbb
jg
movl
aaa
push
dec
xor
add
lahf
add
jmp
mov
add
stos
out
xchg
jne
xchg
mov
add
mov
push
sbbb
in
sub
mov
incl
cwtl
dec
mov
clc
fdivs
push
shrb
xor
or
and
mov
je
imul
sbb
or
jo
in
in
sbb
jmp
push
test
popf
mov
enter
lret
jno
fcomp
xor
lret
add
insb
cs
repz
or
xor
or
dec
dec
inc
inc
sbb
dec
inc
in
js
and
jp
ja
xchg
pusha
iret
popf
mov
repnz
or
xchg
and
and
inc
inc
inc
arpl
std
ljmp
popa
mov
into
add
push
xor
mov
std
arpl
sbb
jle
or
test
dec
orb
movb
jecxz
stc
jmp
cmpsb
pop
out
das
xor
imul
es
add
and
imul
mov
cmp
pop
sbb
sbb
pop
js
in
inc
jne
loopne
arpl
mov
push
dec
mov
jbe
das
lret
jecxz
jae
mov
cmpsb
gs
jecxz
outsb
or
xor
pop
xchg
int
add
mov
sbb
and
sub
daa
cwtl
cmpsb
pop
xor
ja
jle
data16
in
sbb
cmp
fcmovbe
mov
sbb
jne
cmp
mov
mov
xor
push
test
push
pop
out
mov
ss
sbb
push
repz
xchg
addr16
xor
popa
pop
push
pop
loopne
sbb
cmp
inc
in
pop
and
and
mov
adc
out
in
dec
sahf
mov
enter
sbb
sub
outsb
inc
mov
ror
sub
or
sub
mov
leave
fimull
or
ljmp
and
cs
fisubrl
imul
stos
sbb
loopne
bound
cmp
xor
aad
jge
push
or
adc
pop
sbb
das
cs
and
nop
push
push
outsl
sti
xor
dec
dec
scas
pop
fsubrl
jb
mov
mov
cltd
dec
push
xor
inc
inc
pop
sbb
sub
sub
ret
hlt
lods
aaa
repz
lcall
ret
pop
and
rorl
arpl
fdivrl
lods
or
lods
or
push
xor
das
pop
aaa
sub
cld
adc
mov
xor
stc
popf
das
mov
fldenv
fiadds
imul
push
aad
push
aaa
lds
scas
test
rcrl
mov
xor
mov
adc
aam
sar
pop
dec
push
andl
fs
cmp
aas
jmp
mov
pusha
lock
jg
sub
add
fs
clc
sbb
imul
sub
out
fs
daa
in
inc
and
jg
jns
fs
sub
repnz
dec
ret
arpl
mov
xchg
lock
fwait
mov
pusha
jecxz
add
xor
mov
mov
rcrb
ror
xor
lock
loope
xor
out
lock
movsl
sbb
inc
mov
pushl
add
lods
lds
or
cmp
fs
cmp
aas
dec
xchg
je
sbb
or
cltd
jle
inc
pop
popa
je
push
sub
mov
sarl
lods
sbb
inc
mov
push
xchg
adc
jmp
jno
fnstenv
into
jns
insl
sbb
mov
jmp
shll
xor
fdivs
mov
aaa
data16
xor
leave
ss
adc
aaa
mov
push
xor
in
xchg
loop
fwait
pop
loop
sbb
mov
push
or
les
jecxz
popa
shll
cmp
mov
pushf
mov
lock
hlt
push
jmp
scas
repz
jge
mov
sbb
xchg
or
and
rolb
mov
and
mov
fndisi(8087
cs
inc
push
pop
outsl
pop
pushf
mov
mov
mov
mov
inc
xchg
lcall
mov
mov
rcrb
lret
loope
loop
in
jae
mov
mov
push
test
mov
or
fists
or
push
js
fists
filds
push
pop
mov
mov
pop
jmp
xor
add
xchg
pop
xchg
xchg
or
jnp
mov
les
mov
dec
push
test
push
and
in
repnz
adc
out
loopne
ret
loopne
stos
ret
sbb
cli
mov
mov
lret
in
and
in
adc
repz
aam
lret
into
cmp
pop
outsb
dec
sub
xchg
mov
mov
push
lds
fcom
mov
pop
xor
mov
rolb
lock
frstor
fnstenv
sub
sarl
xor
std
aad
into
mov
sbb
push
cs
pop
mov
stos
push
mov
cwtl
or
adc
arpl
and
sub
adc
jbe
add
lods
addr16
lret
sub
js
insb
scas
mov
shlb
ror
jnp
pushf
jnp
sub
loop
enter
mov
les
fsubs
imul
xor
jo
movsb
or
mov
cmp
insb
imul
dec
pop
xchg
sti
test
cmp
lds
sbb
fcomps
jns
stos
push
lahf
or
add
loope
jge
jle
pop
leave
cmp
or
mov
jle
dec
pop
mov
int3
lds
shrb
fsts
clc
push
push
add
sub
pop
cmp
cltd
jns
arpl
pusha
jo
mov
mov
sbb
call
xor
pop
sarl
std
push
dec
fcoml
jae
aaa
out
lcall
push
pop
cmpsl
lods
stos
test
mov
jno
mov
sahf
inc
aam
pop
xchg
push
icebp
mov
inc
jno
je
insb
mov
and
cmpsb
mov
inc
call
adc
pop
dec
repnz
mov
lds
jne
lock
mov
call
hlt
out
repnz
int
sbb
cmpsb
add
push
inc
cs
arpl
adc
arpl
fsubs
xor
sub
mov
test
xor
loop
dec
mov
sub
lock
ja
push
sbb
test
daa
sub
imul
push
mov
jo
push
dec
insl
iret
push
inc
sbb
dec
push
pop
fwait
lcall
shrl
dec
inc
mov
outsb
dec
sub
loopne
js
ljmp
cmp
jae
fstpl
lret
sbb
lret
rol
jg
jae
adc
lds
or
sbb
inc
jae
and
ja
push
mov
dec
adc
ds
insl
cltd
xor
push
xchg
orl
mov
fisttps
mov
fwait
mov
jae
fnstcw
leave
push
sub
in
call
dec
sbbl
mov
and
mov
data16
test
repz
pop
pop
xchg
push
mov
lds
dec
test
aas
adc
inc
dec
dec
lea
les
iret
shlb
stc
dec
imul
push
dec
int3
pop
imul
push
or
jne
lds
cld
ljmp
or
dec
push
mov
fs
lcall
adc
add
lahf
mov
mov
mov
mov
jmp
scas
and
cld
cmpsl
pusha
movsb
fcmovb
xchg
adc
mov
mov
outsb
push
cmpsb
mov
xlat
or
pop
jnp
sbb
xor
into
call
mov
daa
mov
jae
mov
stos
sub
enter
jbe
js
js
pop
cmp
pusha
sbb
inc
scas
pop
les
sbbl
stos
xor
fcompl
cmp
sbb
push
out
iret
addr16
fstps
xor
fsubrp
and
jmp
subb
xor
or
pop
das
clts
adc
inc
push
cs
mov
sbb
outsb
and
outsb
int
imul
sbb
sbb
aaa
mov
lret
sbb
pop
outsl
div
ljmp
cltd
scas
lods
mov
aas
push
in
arpl
dec
icebp
ret
mov
mov
cwtl
fld
sub
dec
mov
sbb
fnstcw
aaa
testb
movsl
rcr
push
push
dec
dec
sti
jp
out
xchg
addr16
outsl
push
lods
std
stos
xor
mov
enter
push
xchg
cld
and
jns
cld
xchg
out
mov
cli
mull
mov
das
cmpsl
stos
and
push
stc
pop
dec
cmc
les
aam
dec
jae
jo
fwait
shrb
fidivrs
test
das
sbb
and
into
cld
mov
es
in
xor
fcmovu
adc
dec
dec
pop
jnp
jno
pop
cwtl
dec
pop
fmull
fnstenv
pop
jo
sub
jge
inc
mov
hlt
push
xor
cmp
jecxz
mov
xor
push
mov
mov
imul
loope
je
repnz
out
loop
sbb
loop
leave
xchg
push
jb
cmp
and
lock
scas
in
jns
fadds
sub
sti
loop
sbb
or
cmp
sub
cmp
xchg
cmpsl
sub
sbb
imul
pop
lods
ror
scas
in
xchg
sti
mov
or
mov
mov
pop
enter
mov
cmp
dec
inc
mov
mov
xor
or
nop
outsb
cmp
add
repz
adc
push
ss
push
inc
dec
mov
add
push
out
cmp
out
jge
fwait
in
loop
test
les
jo
mov
adc
iret
jle
cmp
xlat
or
sbb
jne
data16
cmp
sub
cltd
and
andl
cmp
mov
jmp
jecxz
and
jmp
lods
jb
mov
leave
push
jp
mov
sti
test
jmp
or
push
xor
in
sub
je
jbe
not
adc
jnp
add
pusha
jg
in
sbb
jo
sbb
pop
iretw
xchg
int3
xor
gs
mov
jecxz
orb
out
mov
mov
in
aam
out
lods
rcr
out
mov
cltd
xor
xor
arpl
fcomp
xor
lahf
out
jle
int3
test
mov
insl
nop
dec
fcomps
fstl
enter
test
loope
lock
xchg
cld
shr
enter
ret
les
fldl
and
push
test
add
cmp
push
xor
aaa
and
lods
call
ret
mov
jne
rcl
xchg
nop
push
gs
adc
push
jne
jecxz
int3
xor
or
cmpsb
mov
sbb
add
or
adc
outsb
stc
loope
lock
cld
ja
add
add
pop
or
popf
jne
xchg
sbb
jl
or
je
test
xchg
inc
pop
mov
push
rcll
add
inc
dec
fisubs
subb
push
fsub
pop
cmp
lret
rclb
push
cmc
dec
xor
cld
mov
lahf
mov
add
mov
popf
in
inc
in
roll
pop
push
pop
insb
fcmovnu
rcr
xlat
lods
loope
cltd
push
iret
cld
std
push
add
aaa
and
cmp
sub
xor
pop
xchg
sub
add
outsb
xor
test
xor
arpl
pushw
adc
in
and
mov
mov
xor
sub
fnstenv
sub
hlt
clc
pop
pop
fdiv
xchg
cmp
lods
out
ret
cmc
mov
push
mov
add
xchg
fcmovnbe
mov
jo
ret
lods
mov
ljmp
push
in
fs
xor
stos
popa
test
loop
popf
lret
xor
fisubrl
cmp
sbb
outsl
sbb
jle
js
mov
cmp
add
jo
push
fs
out
pusha
test
loope
in
cs
adc
jo
mov
movsb
ljmp
xchg
or
push
subl
adcb
adc
or
aam
cmc
pop
bnd
lods
je
dec
and
stc
mov
jle
and
lahf
rclb
jb
jp
loopne
sub
arpl
cmc
outsb
insb
cmp
inc
stos
test
mov
roll
das
mov
xor
push
mov
test
xchg
mov
sub
orb
inc
test
sub
mov
mov
test
sti
jno
xor
mov
add
xor
push
or
das
mov
xchg
push
sbb
test
jns
ljmp
jge
popf
test
ja
jmp
mov
stos
cltd
jp
dec
dec
mov
popa
mov
popa
ret
inc
sbb
out
pop
push
push
filds
lods
out
dec
shr
sarl
sub
push
push
or
cmp
lods
xorl
add
ds
cmp
out
adc
cltd
lret
mov
adc
sbb
xor
pop
add
test
jle
icebp
lds
gs
jle
das
sub
xlat
mov
out
pop
jle
mov
mov
hlt
mov
arpl
mov
shr
lret
aam
and
mov
es
aam
and
adcb
shr
aas
mov
int3
test
cld
jb
arpl
xor
mov
cmc
jno
lock
loopne
sbb
xor
pusha
fs
in
jge
idivb
sahf
mov
cmp
cmp
push
int3
cmp
pop
lock
int3
mov
call
xchg
imul
lods
or
dec
jae
icebp
out
jge
shrl
dec
sub
or
lfs
sub
fsubrs
pop
inc
push
rorl
pop
jmp
pusha
push
stos
add
adc
lods
push
cli
xor
jle
dec
add
int3
xchg
movsb
movsl
mov
mov
clc
sbb
lock
xchg
push
xchg
sub
pop
loopne
push
push
mov
sbb
rol
xor
sbb
jecxz
repz
adc
xchg
lods
call
mov
test
mov
pop
jge
mov
popa
dec
lods
sbb
or
adc
les
xchg
dec
dec
push
cmp
push
dec
push
pop
jge
and
push
adcb
js
into
sub
mov
jecxz
lods
or
or
je
xor
fcmovnb
setne
add
lds
jnp
and
or
loopne
in
dec
inc
push
dec
xor
or
adc
cmpsb
push
sbb
insb
sbb
mov
dec
sbb
and
xor
jne
idivb
push
fs
bound
negb
addl
popf
or
dec
push
and
popl
in
in
and
pop
sbb
pop
push
sbb
jmp
add
repz
sbb
aaa
ljmp
inc
jns
repnz
xchg
mov
cli
sub
fsubrs
sub
insl
and
jl
mov
dec
push
or
fnsave
push
leave
divb
in
mov
jae
clc
insl
ss
in
push
div
lcall
test
fiadds
mov
lcall
adc
in
add
mov
test
inc
sub
dec
add
or
sub
fdiv
call
mov
pop
movsb
jo
cmp
ret
mov
push
pop
push
and
ds
divl
cmp
cld
ja
jge
pop
das
int
fdivl
push
sub
or
fmull
and
xor
pop
fs
push
rol
cltd
sbb
mov
cmp
icebp
insb
lcall
push
mov
cld
flds
xchg
lock
mov
dec
aaa
les
mov
rcrl
lret
les
xchg
inc
push
cmc
mov
lret
or
popf
stos
loop
mov
les
push
imul
or
mov
loope
jle
xor
lea
scas
test
and
mulb
sub
jl
shr
cmp
xchg
inc
orb
jne
pop
push
or
sbb
pop
popf
add
cmc
mov
mov
xor
insb
stos
mov
test
insb
mov
in
adc
fcompl
xchg
fisubrs
ficomps
pop
pop
cmp
pusha
loope
add
insl
cmp
xor
sbb
ja
jae
sbb
jl
and
int3
jg
xchg
jmp
cmp
mov
push
dec
cmpsl
xchg
out
push
xor
lock
pop
fidivs
je
and
orl
jae
xchg
mov
les
xlat
pop
cwtl
cwtl
mov
pushf
jno
fisttpll
push
sbb
xor
adc
lods
mov
notl
or
outsb
pop
stos
dec
push
jge
xchg
cmp
lock
xchg
scas
pop
cmp
cmpsl
push
push
add
test
scas
xor
aam
mov
sub
popf
dec
sti
cmp
push
jae
scas
mov
scas
xchg
jecxz
dec
inc
push
push
or
fadd
fidivrl
sub
int
dec
lods
test
sbbb
mov
dec
mov
js
ja
fadds
add
fs
stc
and
cmpb
lret
dec
push
dec
mov
dec
push
pop
dec
sub
shll
mov
pop
movsb
xor
or
jae
scas
fisubs
add
js
dec
jae
xor
dec
loope
mov
out
std
sarb
sbb
aad
loopne
in
rcll
rcrl
cli
out
out
sbb
adc
lds
push
bound
dec
ss
ret
popf
pop
repz
push
repz
cmc
xor
bound
ret
sti
mov
dec
cli
sbb
movsl
data16
ret
mov
stos
mov
roll
mov
mov
add
push
cwtl
out
sbb
cs
cwtl
add
and
fwait
push
pop
jmp
xchg
repnz
sbb
jg,pt
imul
fstp
mov
shrl
stc
bound
mov
lods
fwait
into
in
lret
and
scas
cli
adc
cmpxchg
scas
cli
sub
test
cmpsb
int3
inc
inc
cmpl
mov
pop
fildl
rep
shl
push
dec
in
in
push
inc
mov
outsb
pop
xor
jp
nop
mov
pmaddwd
jbe
jno
fadd
cwtl
cltd
mov
xchg
movsl
cmpb
push
jge
mov
mov
loope
xchg
pop
jecxz
pop
mov
es
enter
jge
addb
inc
mov
hlt
fs
pop
dec
mov
fnstenv
push
push
repnz
repnz
dec
pop
imul
xchg
enter
mov
add
jno
js
inc
jge
sub
sub
inc
sarb
inc
test
xchg
sbb
xchg
inc
add
leave
sub
xchg
dec
pop
and
push
iret
dec
mov
std
aam
js
dec
arpl
sbb
pop
push
push
popf
outsb
mul
xchg
outsb
aaa
push
stos
movsl
out
addr16
test
add
daa
pusha
loop
push
je
mov
or
popa
andl
xor
lret
popf
or
inc
lahf
fcmovu
bound
xchg
push
mov
sub
push
push
pop
push
jnp
mov
xchg
out
cmpsl
cmp
lds
add
mov
mov
dec
dec
or
shrb
bswap
into
sbb
inc
mov
pop
cmp
ficoml
sub
movsb
pop
mov
fnstsw
adc
mov
xor
fstpt
bound
insb
xor
cmpsb
aam
insl
pop
pop
mov
pop
leave
cmc
cmc
scas
pop
iret
ss
aaa
sub
adc
lock
xchg
or
out
ja
aad
mov
dec
push
test
pop
inc
sbb
mov
dec
cmc
add
clc
mov
mov
xchg
xor
xor
mov
jae
and
sub
adcl
or
ss
insl
pushf
cmc
sbbl
adc
or
stc
inc
sub
xchg
sub
or
mov
loopne
and
push
mov
jge
les
adc
test
pop
mov
loopne
mov
inc
fildl
test
pop
mov
jnp
pop
inc
mov
pop
sub
lcall
gs
lods
mov
imul
push
arpl
fisubl
push
push
or
pushf
jp
outsl
test
mov
out
ficomps
out
shrb
sub
jmp
sub
call
push
lock
je
mov
outsl
aam
mov
xchg
sub
adc
arpl
pop
lods
dec
lahf
or
mov
in
mov
popf
in
inc
scas
aas
xor
inc
cmp
mov
mov
xchg
dec
inc
jae
xchg
rcl
jle
sub
dec
aad
imul
or
insl
xchg
or
daa
addl
or
sub
dec
stos
mov
adc
rorb
mov
repz
dec
fistpll
sbb
scas
addr16
cmp
mov
xchg
inc
sarl
pop
cmc
icebp
pusha
lea
insb
sub
xor
notl
ja
xchg
lcall
mov
and
add
insb
jno
pushl
push
pop
xor
pop
rep
jbe
mov
inc
xchg
lret
mov
xor
or
js
arpl
add
jnp
lahf
push
int3
add
push
adc
push
outsl
subl
push
jo
stc
cli
mov
js
sbb
pop
jmp
nop
fstl
ret
rcrb
fisttps
pop
movsb
bound
in
mov
imul
loop
and
pushf
mov
mov
xchg
sbb
add
add
adc
push
arpl
sub
pop
adc
and
mov
add
dec
adc
xor
push
xchg
insb
lret
jo
insb
mov
loop
jge
sub
int
sub
cmp
or
stos
mov
mov
cmpsl
cmp
loope
mov
aam
movsb
and
or
fxch
int
cmc
lea
aad
in
sub
mov
fs
lock
rcrb
nop
addl
inc
outsb
jnp
ljmp
int3
sub
es
jno
mov
inc
dec
gs
and
xor
jg
xlat
scas
sbb
xor
inc
in
xor
add
iret
int3
sar
das
cmpps
fucom
lods
shrb
gs
aad
lds
iret
add
mov
pop
cmp
pop
cmp
mov
cmpsl
lds
fdivrs
pop
add
and
mov
jle
jbe
sbb
jns
push
dec
mov
lds
pushf
stos
arpl
xchg
pop
mov
sbb
loopne
mov
clc
jne
dec
cmc
js
sub
push
divl
fwait
xor
xor
popf
fsts
push
pop
push
inc
into
adc
in
mov
insb
add
xor
shll
mov
pop
mov
scas
aam
daa
lret
ret
add
lcall
adc
mov
mov
jb
enter
jg
cltd
xor
jne
imul
jne
test
in
dec
loope
jg
dec
mov
dec
jno
inc
adc
jbe
scas
ret
mov
dec
fildll
lret
lahf
ja
in
dec
js
insl
xor
data16
pusha
sbb
lea
xor
xor
es
sbb
xor
dec
pop
dec
test
xchg
cmp
cltd
aas
scas
dec
cli
imul
stos
into
or
and
stos
sbb
xor
iret
and
adc
cli
xchg
pusha
pop
add
dec
push
cmpsl
in
enter
mov
stos
lods
and
inc
sub
scas
cmpl
sti
xchg
aaa
push
imul
pop
adc
sub
ret
mov
orl
mov
clc
rol
push
pop
mov
js
push
sbb
add
cmp
jg
es
aaa
imul
and
fcompl
das
insl
mov
xor
and
arpl
loope
sub
loopne
fldcw
fmull
pop
add
jbe
cwtl
and
iret
fsts
aaa
jbe
mov
add
mov
ljmp
xor
jae
arpl
leave
cmpl
mov
xor
cmp
mov
pop
cmp
mov
mov
or
stos
push
xor
and
hlt
nop
cmp
jl
and
std
popf
negb
mov
into
sahf
int3
jae
insb
xchg
je
pop
fsubrl
adc
sub
test
cld
fcmovb
push
fisttpll
test
pop
inc
test
out
push
push
cld
adc
pop
gs
iret
push
ds
sbb
js
push
mov
mov
ret
jge
push
pop
jne
adc
mov
js
fstpt
cmp
nop
enter
lods
xor
sti
cmpsl
mov
mov
daa
sahf
xchg
sti
scas
dec
fadds
hlt
bound
es
jns
out
stos
sub
push
out
add
jno
ret
pop
scas
sub
lcall
scas
gs
xor
fwait
pop
mov
dec
fstps
mov
test
arpl
inc
sbb
arpl
and
scas
xchg
call
mov
test
mov
mov
out
mov
pop
repz
sbb
std
int3
cli
sub
sti
jnp
jne
js
in
test
mov
test
ss
xchg
inc
mov
adc
imul
aas
dec
aas
and
cmp
lods
jg
mov
add
out
dec
mov
push
stos
mov
lea
aas
jg
bound
scas
xchg
dec
sbb
or
in
cwtl
call
mov
shll
mov
outsb
or
out
jecxz
or
add
int
popf
sub
push
adc
scas
jge
dec
xchg
mov
mov
inc
fcmove
jle
cmp
fisubrs
pop
cmp
xor
mov
in
pop
or
ljmp
mov
pop
xor
inc
rcll
sbb
cmp
icebp
out
push
pop
push
push
xchg
cld
jecxz
orb
lret
cmp
sub
pop
cmpsl
pop
ficomps
xchg
add
add
dec
lret
or
mov
js
andl
push
ss
ret
in
adc
adc
adc
push
arpl
or
push
xlat
jnp
add
nop
push
aam
cmp
dec
mov
push
pop
xor
int3
sbb
scas
inc
ucomiss
ret
push
dec
sbb
and
lret
and
pop
push
rcll
push
pop
mov
pop
lds
and
mov
or
dec
mov
test
fldl
fs
ja
das
mov
stos
aas
xchg
jle
push
jp
mov
jle
insl
cli
mov
cmp
sbb
jns
mov
push
cwtl
cld
jl
push
roll
test
pop
int3
shrl
fs
jle
jbe
sar
std
subl
lods
in
push
xchg
adc
and
aas
cli
aas
iret
cmc
mov
stc
jle
rorl
add
sub
and
mov
pop
subb
dec
dec
sub
jae
in
cmpsb
mov
push
push
push
push
loopne
sbb
xor
hlt
lds
push
pop
inc
sbb
jo
into
clc
outsl
lret
mov
push
jbe
push
xor
sbb
mov
xchg
nop
lcall
inc
sbb
xchg
mov
or
jb
hlt
in
push
cmpsb
arpl
jle
out
stos
sbb
cld
nop
in
fwait
js
jo
lock
jg
shl
ljmp
cmpsl
jle
push
push
sub
mov
sbb
mov
test
push
mov
push
inc
inc
sub
ds
jp
push
jl
dec
jl
mov
jmp
pop
xor
push
cmp
stos
xlat
jns
xchg
mov
maxps
dec
sbb
in
lds
nop
jae
pop
call
mov
adc
lahf
jae
xchg
push
pop
cmp
lds
push
popa
sub
or
jle
jno
femms
jg
js,pn
fmull
mov
xor
es
pop
popf
mov
pop
aas
jne
or
cs
cmp
xchg
scas
nop
ss
loope
xor
loopne
sbb
pop
fnstsw
add
adc
inc
cld
stos
add
jmp
jg
pusha
lcall
or
pop
add
jno
or
sub
inc
outsl
ja
loopne
dec
in
aaa
cld
cmp
fwait
sbb
push
mov
jmp
mov
sarb
daa
and
push
gs
scas
adc
fidivs
int3
mov
push
fsubl
les
jmp
loop
jecxz
ds
sub
cmp
fistpll
pusha
movsb
jp
psrlq
in
icebp
cmc
jns
or
lea
mov
insl
jno
les
out
shlb
ljmp
add
jae
and
dec
sbb
or
add
pop
hlt
mov
add
or
mov
mov
xor
jecxz,pt
add
xor
loopne
call
adc
fisubrl
std
xor
shll
out
in
pop
shll
jg
dec
shll
adc
xor
xor
roll
dec
shll
adc
shll
dec
aas
inc
or
add
jg
mov
mov
rolb
arpl
and
xor
mov
pop
rclb
push
add
fbstp
or
adc
neg
shl
pop
dec
iret
fists
psrld
jle
mov
test
mov
stos
xchg
pop
flds
xor
mov
orb
jp
or
ret
enterw
or
ret
xor
mov
xor
js
mov
sbb
es
cmpsb
leave
data16
jae
adc
mov
sbb
bound
fs
adc
les
and
adc
les
bound
icebp
popa
pop
pop
fwait
test
xor
lcall
sub
and
jns
cmpb
and
outsb
loop
and
mov
sub
or
incl
in
dec
cli
loop
addr16
popa
jecxz
pop
jno
cltd
cmc
sti
dec
dec
dec
xor
and
inc
out
pop
mov
in
add
mov
fs
bound
cltd
mov
into
sub
scas
jb
mov
pop
inc
stos
push
dec
push
rol
cli
add
add
dec
push
mov
or
pusha
and
jp
rolb
movsb
and
inc
jb
add
mov
mov
fdivs
mov
jne
mov
or
inc
lods
fs
push
dec
mov
fs
push
fwait
outsb
jp
fs
popa
je
test
inc
cld
flds
iret
pusha
jmp
test
jns
mov
cltd
bts
xor
shrl
aas
mov
dec
shll
fwait
xchg
ja
cmpsb
imul
imul
nop
fs
mov
mov
fbstp
je
add
lods
es
sub
sbb
pop
loopne
jl
dec
int3
push
mov
daa
xchg
test
adc
cmpsb
pop
cmp
mov
xchg
fildl
push
cmp
jb
xchg
mov
cltd
mov
fidivl
addl
sbb
jg
into
cmp
pop
pop
popa
pusha
mov
jnp
fbstp
shlb
and
lods
jg
push
mov
lret
jg
cli
xchg
lcall
xchg
fwait
cmpsb
imul
cwtl
daa
pop
inc
popa
add
dec
sub
repnz
adc
pop
xor
mov
xor
test
outsl
mov
jae
cs
adc
add
mov
inc
in
add
inc
repnz
cmp
push
es
repz
inc
add
push
scas
cmc
jne
push
inc
mov
mov
icebp
ss
and
add
pop
test
rorb
pop
inc
add
aaa
ss
or
add
popl
fs
pusha
push
in
shr
enter
dec
and
and
add
frstor
pop
repnz
scas
sbb
jb
shlb
push
add
pop
jb
stc
sub
and
mov
push
add
add
push
lcall
pop
data16
fimuls
stos
xchg
sub
lea
add
add
push
cld
idiv
dec
mov
adc
inc
pop
cmp
lret
cmp
add
jecxz
jnp
add
add
jne
mov
outsl
jbe
fsubl
repz
push
jae
fmull
stos
adc
fildll
jp
cmp
jecxz
jg
sub
xor
mov
push
rorl
lahf
daa
mov
push
arpl
and
jns
jmp
sbb
pop
or
sahf
shl
cmp
add
add
sbb
aas
nop
push
dec
mov
pop
sub
adc
stc
mov
xor
add
add
sbb
ljmp
gs
lcall
or
xlat
adc
pop
mov
dec
add
add
js
adc
dec
xchg
gs
pop
push
es
push
xor
ret
push
sub
push
je
scas
sbb
add
mov
into
inc
pushf
cmp
mov
inc
cmp
lret
inc
push
push
mov
iret
enter
in
add
add
push
or
xor
jno
ds
mov
lret
fldl
adc
mov
xor
hlt
mov
xor
arpl
ljmp
out
jecxz
add
add
add
aas
hlt
adc
inc
mov
mov
pop
xor
push
out
sbb
stos
lock
add
movsb
sbb
into
and
sahf
dec
sbb
mov
push
aaa
int
dec
dec
add
das
cmp
loope
add
add
fsubs
lret
push
mov
jne
xor
dec
pop
fiaddl
mov
movsb
xchg
add
add
lock
xchg
cmp
xchg
mov
push
cmp
add
pop
and
adc
jmp
fwait
mov
dec
xor
pop
test
aaa
inc
xchg
cmp
imul
outsl
xchg
mov
ljmp
or
lret
in
sub
ret
cwtl
sbb
stos
jb
add
cmp
or
clc
mov
adc
cmpsb
add
jmp
mov
and
ret
and
mov
sub
xor
xchg
add
add
add
and
mov
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
pushl
mov
pushfw
pusha
push
mov
add
push
push
call
mov
push
mov
mov
add
lea
mov
push
mov
mov
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
mov
add
mov
test
je
mov
lea
mov
mov
mov
mov
push
rep
mov
mov
add
jmp
pop
pop
pop
pop
pop
je
jmp
add
jne
mov
sub
adc
ret
inc
call
adc
call
jb
ret
cmp
jae
push
push
push
jmp
push
push
push
push
xor
xor
movsb
xor
dec
jle
call
jae
xor
call
sub
jae
mov
inc
jmp
mov
mov
call
adc
loop
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
push
sub
lea
rep
pop
jmp
nop
cwtl
pop
add
push
add
add
rolb
add
sbb
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
add
add
add
jmp
aas
add
add
add
and
add
adc
add
add
jecxz
add
add
add
jecxz
add
add
add
pop
add
pop
add
add
add
addb
push
addb
sbb
addb
aas
addb
dec
addb
pop
addb
add
add
xchg
add
addb
add
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
push
inc
push
xor
cs
insb
add
xor
xor
fs
insb
add
push
dec
inc
dec
xor
cs
insb
add
sbb
add
add
add
pusha
loop
add
add
or
push
or
adc
adc
add
or
loop
add
or
adc
add
sbb
add
and
add
add
imul
jae
outsl
popa
fs
imul
inc
gs
jb
arpl
fs
jae
push
imul
jb
je
arpl
outsl
bound
inc
insb
insb
outsl
arpl
outsl
bound
inc
jb
gs
gs
outsl
fs
gs
popa
outsb
fs
gs
dec
gs
popa
addr16
outsl
js
ja
jo
imul
add
addb
sbb
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
cmp
push
add
push
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
dec
gs
popa
addr16
outsl
js
add
add
xchg
jne
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
ss
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
movsb
push
add
add
add
inc
and
add
mov
push
mov
pop
sbb
arpl
xor
add
xor
lods
push
stc
and
cltd
xchg
or
and
push
push
gs
pop
push
fstpt
or
and
adc
xchg
imul
popf
inc
dec
mov
mov
add
out
cld
sub
and
loopne
sub
pop
testl
aam
rcl
sbb
aas
in
inc
sub
jne
mov
arpl
bound
pushf
ds
pusha
into
jne
lods
stos
insl
jge
or
pop
jmp
shrl
push
in
xchg
loope
ret
repz
gs
xor
sub
scas
std
pusha
xchg
mov
xchg
push
jne
out
repz
repnz
pushf
jg
incb
fs
clc
andl
xor
out
cli
pop
aam
out
sbb
fistl
in
enter
fsubrs
ds
lret
push
cmpsl
ret
pusha
mov
adc
dec
mov
inc
inc
sub
lds
push
adc
mov
pop
pushf
hlt
add
mov
mov
push
adc
push
push
rorl
and
jb
and
les
cs
push
sub
jp
cmp
add
jae
mov
mov
add
rorl
inc
inc
ret
sti
or
xchg
xchg
xchg
mov
imul
pop
shl
inc
inc
mov
mov
xlat
cmp
and
xchg
pop
cmp
cmp
ja
and
mov
and
mov
dec
sbb
lret
xchg
cmpsl
and
adc
adc
test
sahf
xorl
fdiv
cld
cmpsb
sbb
push
dec
push
test
push
mov
inc
bound
inc
adc
xchg
inc
lds
fcompl
mov
inc
pop
and
sbb
push
mov
or
imul
xchg
cltd
xlat
xchg
sub
or
mov
ds
xchg
pop
mov
fsubs
inc
mov
xor
ds
mov
sbb
adcl
dec
add
mov
lret
xor
cld
cltd
mov
xchg
cmpsb
pop
in
cmp
inc
lds
iret
lret
lock
rcrb
fwait
roll
jbe
mov
sbb
xchg
es
lods
mov
push
xor
xchg
mov
pop
mov
inc
mov
loope
mov
adc
sub
ficompl
mov
xlat
aad
pop
aas
lret
call
and
or
mov
fwait
mov
out
jns
lods
bound
mov
jge
in
mov
and
dec
inc
test
ljmp
sbb
mov
fwait
push
adc
pop
dec
into
out
ficomps
push
mov
or
mov
mov
sbb
jb
push
dec
or
mov
inc
inc
dec
sub
dec
sub
mov
mov
loopne
jmp
add
dec
mov
hlt
vpcmov
rorb
xor
roll
add
fwait
js
cmp
mov
push
shlb
adc
pop
xorb
xrelease
out
cwtl
inc
aad
or
cld
hlt
imul
stos
movsl
fsubp
xor
hlt
sahf
or
fs
sub
loop
lods
sub
mov
scas
sbbl
je
cmp
imul
mov
jo
std
xchg
enter
mov
xchg
pop
pusha
fmul
lods
aad
in
add
sbb
dec
xlat
cmp
xchg
cmp
push
mov
fs
cmc
je
add
lods
in
pop
in
scas
andl
dec
jecxz
sub
jno
fisubl
cmp
enter
shll
pop
movsb
inc
adc
ja
insb
jp
test
fs
in
mov
bound
cltd
cld
push
out
jnp
or
cs
xchg
hlt
shll
jmp
iret
gs
enter
aam
cs
fistl
xor
jg
shr
fsts
jb
lcall
test
push
icebp
xor
js
es
mov
push
leave
pop
pop
data16
rolb
or
add
pop
push
xchg
icebp
icebp
in
fsub
lahf
sub
mov
in
addr16
popa
mov
inc
and
mov
mov
push
fwait
ljmp
dec
sbb
inc
mov
out
push
jp
push
fdivl
stc
pop
sub
fnstcw
sub
mov
out
mov
insb
insb
xor
xchg
push
or
sbb
inc
mov
jge
mov
xlat
adc
out
movsb
lds
loopne
adc
push
es
sbb
clc
aaa
adc
fs
test
pop
sub
adc
mov
sbb
pop
inc
stos
sbb
cmp
mov
imul
fsubs
mov
in
int3
xor
inc
int3
sbb
add
cmc
outsb
add
nop
pop
xchg
ficomps
test
pop
enter
cmp
test
incb
outsb
fdivrl
push
test
fdivrl
push
pop
xchg
ljmp
dec
pushf
out
xchg
inc
imul
lcall
mov
shrl
es
and
cmc
sub
cltd
shll
in
ret
aaa
stos
rclb
pop
fildl
fcoml
pop
inc
xchg
push
push
fmulp
add
mov
jp
les
xchg
push
mov
loop
nop
xor
mulb
jae
in
mov
ss
fs
out
jg
insl
and
addr16
mov
ret
inc
dec
sahf
out
mov
cmc
xor
pop
nop
movsl
cmp
lret
mov
inc
repz
rorl
mov
or
out
mov
jle
das
jmp
iret
xor
scas
dec
cs
add
repz
lods
mov
sti
stc
cmc
insl
lock
and
mov
adc
pop
addr16
movsb
mov
cmp
in
pop
fs
push
push
jp
sti
mov
in
leave
popf
dec
iret
dec
dec
sub
cld
test
imulb
mov
int3
stos
addr16
adc
in
fsub
dec
loop
andl
jae
inc
pop
aam
mov
cmpsb
pop
lcall
in
fs
mov
aaa
cmp
pop
jne
mov
cwtl
rclb
lcall
jo
push
mov
xor
cs
lock
push
pop
lods
fidivrl
and
test
cmp
push
and
jmp
lcall
mov
pop
push
lock
aad
mov
cli
mov
gs
aaa
fldcw
ljmp
cmp
inc
enter
hlt
pusha
arpl
push
mov
cmp
mov
pushf
dec
sbb
into
loop
push
xchg
cltd
or
adc
jp
inc
hlt
sub
insl
or
lret
pop
test
xchg
fs
adc
jmp
pusha
push
xor
jecxz
jle
in
lea
mov
ljmp
pop
sub
divl
cmp
xchg
mov
out
and
and
notb
push
lea
lret
cmpsl
xor
inc
xchg
outsb
adc
jg
into
cs
iret
mov
shlb
pushf
add
clc
pop
jmp
cli
popa
out
das
leave
inc
jb
loope
fsubrs
mov
sbb
cmpsl
mov
xor
aaa
push
ja
pop
push
popl
ja
fnsave
xchg
push
or
push
mov
or
lret
pop
xchg
jnp
cmp
pop
loop
mov
pushw
fstl
popa
adc
lahf
sbb
jmp
cmpsb
outsb
lock
jbe
in
pop
ror
inc
pop
dec
lea
std
cld
mov
jae
pop
fiadds
jp
push
js
xor
outsl
mov
leave
std
mov
xor
pop
sbb
mov
xchg
movsb
push
xor
fcmovbe
dec
push
pop
xor
cwtl
push
jp,pt
pop
and
cld
mov
out
sub
push
int3
fadds
imul
add
and
fiadds
rcr
ret
out
mov
push
cmpsl
jg
sbb
aad
mov
lods
xor
sbb
ss
into
adc
jns
sub
xchg
push
aaa
or
std
inc
push
cmp
imull
inc
aaa
push
rcrb
aam
sbb
bound
add
or
movsb
les
jecxz
aas
sbb
dec
movsb
fstps
nop
mov
and
and
aam
cld
or
repz
add
jne
outsb
pop
daa
popa
cmp
pushf
push
dec
mov
lcall
mov
aas
or
jge
test
xchg
in
mov
and
pop
push
pop
add
out
popa
fadd
cltd
xchg
add
imul
xor
stos
cld
scas
cmp
aaa
cmp
out
sub
push
pop
xchg
or
and
sub
out
stos
iret
fsubrl
lret
aam
inc
divb
mov
faddp
push
mov
dec
aad
mov
sbb
popf
mull
jecxz
sbb
or
fists
xchg
mov
outsl
movsl
mov
xchg
xor
mov
adc
xor
adc
xor
stc
stos
sbb
pop
les
pop
aam
or
dec
push
gs
insl
add
and
mov
mov
mov
dec
outsl
ret
js
sbb
jle
aam
ret
and
loop
out
fcmovbe
les
and
dec
jo
push
lahf
leave
xchg
mov
xchg
mov
pop
nop
push
push
push
js
les
fdivl
imul
ficomps
push
or
fwait
push
test
mov
mov
sub
ljmp
cmpsb
and
fldcw
add
fs
dec
shl
lret
das
inc
lahf
lret
stos
pop
fidivrl
mov
push
ja
and
popf
js
push
inc
das
dec
inc
cli
xchg
sbb
xor
mov
jns
mov
shll
pop
dec
orl
jg
add
test
mov
xchg
pop
adc
dec
loope
mov
fidivrs
js
addr16
adc
mov
pop
sbb
out
gs
push
mov
cwtl
aas
add
pcmpgtd
sub
mov
in
jp
lret
jb
push
dec
sbb
dec
sbb
xchg
jge
arpl
sub
mov
test
sub
mov
pop
lock
pop
dec
xor
push
stc
nop
scas
pop
pop
push
fs
or
les
or
mov
jmp
xor
push
loope
dec
ret
fiadds
mov
jns
sub
push
inc
sti
inc
sbb
sbb
insl
stc
inc
inc
add
push
adc
sub
sbb
int3
call
jecxz
insl
int
jmp
mov
leave
sti
sbb
or
mov
call
inc
cwtl
add
pop
cld
mov
adc
cmp
add
push
push
repz
push
and
sbb
dec
enter
mov
std
dec
lret
std
je
mov
mov
mov
pop
lcall
ljmp
sub
or
dec
cld
popf
jo
rcrl
addb
in
imul
gs
cmp
or
outsb
stos
push
lock
cld
or
pop
xor
rolb
scas
push
test
jbe
mov
testb
int3
inc
subl
pusha
loop
jmp
xor
pop
push
test
jbe
push
pop
aaa
popl
and
cmpl
sub
fcmove
pop
push
xor
dec
xchg
das
or
js
popw
rolb
sbb
sub
cmp
xchg
add
add
fdivl
sub
in
fbstp
movsl
inc
and
mov
mov
cmp
test
call
jl
xor
sahf
inc
adc
and
sub
clc
shl
stc
ss
fwait
lods
jp,pt
and
lret
cs
outsb
insl
mov
stc
sub
xor
int3
mov
shll
divb
xchg
test
push
adc
inc
cmp
adc
movsl
mov
cmpb
push
out
fwait
das
test
jecxz
xor
rorl
mov
xchg
test
jl
xor
add
sub
cmp
aad
xchg
sub
aam
push
es
shlb
insb
mov
push
js
xor
or
mov
mov
xchg
jecxz
jns
iret
mov
adc
out
ljmp
ss
pop
push
push
imul
fwait
push
inc
hlt
dec
and
hlt
lock
sbb
push
inc
outsl
xor
leave
pop
and
insb
out
repz
test
rcrb
scas
out
or
sub
adc
mov
shl
lods
fistps
cmc
push
inc
mov
jae
push
mov
ljmp
inc
mov
mov
ja
inc
jmp
mov
lret
adc
jne
in
cmp
mov
das
xchg
adc
xchg
pop
sbb
jbe
pushf
mov
imul
adc
insl
cmpsl
fildl
jo
lods
pop
imulb
movsb
cs
into
push
dec
sub
xchg
pop
jge
stos
fisttpl
add
int3
cltd
cs
mov
aam
push
xor
bound
insb
xchg
fbstp
mov
pop
sub
mov
sbb
clc
ja
sbb
movsb
mov
add
xor
popf
jmp
scas
jns
push
inc
jo
fs
out
mov
mov
jecxz
pop
jb
push
jne
ss
push
mov
jae
mov
std
nop
inc
jmp
pop
xor
je
xchg
pop
jle
lret
insl
pop
or
fdivrs
cmp
lock
idiv
jmp
movsl
incl
test
mov
popa
or
fwait
mov
mov
lock
xor
sub
lods
or
pop
inc
xchg
add
xlat
add
dec
ljmp
in
and
add
xchg
mov
nop
jp
movsb
sar
pcmpeqd
xchg
sbb
sti
loope
jp
adc
hlt
or
popw
test
shrl
adc
repz
or
test
dec
jnp
lods
mov
jnp,pn
adc
lea
es
jnp
cld
popa
mov
lret
out
popf
inc
xor
xchg
test
enter
pop
add
mov
cmpsb
andl
adc
pop
insb
lret
in
pop
hlt
jecxz
shrb
lcall
mov
je
in
jl
and
fisttps
inc
jp
sub
and
inc
int
notl
add
xchg
outsb
rolb
inc
iret
jo
rorb
dec
push
insl
daa
mov
xorb
mov
jne
pusha
xor
addr16
outsl
xrelease
xlat
dec
mov
nop
es
inc
sub
xchg
decb
adcb
ja
xorl
or
nop
or
ret
cs
in
push
ss
flds
cmc
dec
and
andl
fwait
mov
adc
xor
lods
pushf
pusha
gs
push
call
mov
add
fwait
lock
mov
dec
cltd
fldl
push
mov
adc
shlb
jmp
pop
mov
inc
mov
in
push
repnz
add
push
xor
lods
mov
mov
mov
movsb
ss
xor
test
mov
js
ret
movsb
mov
lods
rclb
insb
test
jbe
cmc
gs
pop
mov
mov
mov
imul
jne
pop
adc
daa
ret
dec
cltd
mov
mov
lahf
push
xchg
cmp
aam
addr16
into
push
stos
sub
test
push
stos
pop
mov
inc
mov
mov
je
mov
pop
lods
cmpb
adc
or
sub
inc
push
pop
push
push
inc
sbb
fs
sub
pop
ds
mov
icebp
hlt
push
data16
xor
in
xchg
cmp
insl
sbb
lods
iret
dec
xchg
stos
rolb
add
movsb
enter
xor
outsl
leave
ds
in
das
or
fcompl
and
bound
scas
push
mov
jnp
icebp
imull
push
dec
push
fmull
jns
mov
loopne
pop
xchg
sub
xlat
xchg
shr
in
or
cmp
and
and
repz
and
inc
ljmp
jecxz
push
ds
jg
leave
je
or
xchg
xor
add
mov
loope
fs
adc
fwait
pop
mov
pop
cmpsl
adc
dec
push
daa
out
mov
mov
cmpl
cmp
xlat
es
add
mov
or
rcll
push
sbb
jecxz
fsubs
fwait
add
imul
xor
dec
xchg
loope
jo
cmp
adc
sub
icebp
ret
sbb
jmp
ret
rclb
xlat
outsb
dec
loopne
push
mov
xor
repnz
add
push
xchg
sahf
or
icebp
cmpb
bound
addb
jge
addr16
pop
adc
inc
push
dec
adc
movsb
jb
add
testl
fwait
sub
out
pop
mov
pushf
cltd
fwait
xor
xorb
lret
sarb
aaa
das
imulb
jb
and
pop
lret
cmc
lahf
add
out
pop
nop
fiaddl
cs
sbb
push
pop
lock
ret
add
mov
std
faddl
jno
pop
or
adc
xchg
fnsave
ds
mov
in
and
mov
mov
fwait
or
fwait
add
bound
adc
pop
loop
mov
pop
stos
cltd
bound
scas
mov
mov
add
pop
fadds
dec
aam
or
xchg
push
sbb
fcmovbe
bound
adc
sub
std
and
arpl
cmc
and
cwtl
lret
jb
pop
dec
sbb
popa
sub
cmp
dec
subl
sub
cmp
xor
sar
and
mov
ljmp
jo
fwait
mov
fiaddl
and
outsb
stos
cld
dec
add
mov
cmp
sbb
addb
out
mov
lods
andb
adc
or
pop
jmp
mov
sbb
push
xchg
push
mov
add
or
aas
dec
sbb
outsl
push
mov
jle
or
jle
lds
int3
outsb
or
inc
mov
dec
xor
xchg
push
flds
inc
cmpsb
push
lcall
addr16
mov
cmp
or
xchg
ss
int3
ss
sbb
cli
add
sub
inc
mov
or
mov
xor
or
sbb
push
and
ja
test
dec
xchg
cmpl
fwait
cmp
dec
nop
add
sarb
dec
movsb
and
dec
sbb
outsb
pop
popa
adc
lret
inc
test
and
cmc
jle
add
push
lds
iret
lea
dec
loope
push
inc
fwait
ds
xor
xchg
add
aas
aaa
scas
pop
scas
popa
pop
xchg
inc
stc
push
repz
pop
cmp
ror
or
push
inc
jge
sahf
mov
ficomps
fdiv
dec
xchg
cmp
arpl
sbb
pushl
orb
inc
adc
mov
stos
sbb
push
cli
or
pop
jae
lahf
xor
dec
shlb
sbb
fdivrl
xchg
xor
int
rcrl
stos
xor
inc
lock
pop
cmpsb
dec
bound
cmpsl
add
xchg
ret
xchg
adc
rorl
addr16
hlt
jmp
sbb
inc
sahf
sub
ja
leave
scas
scas
cmp
lods
mov
insl
xchg
ja
mov
inc
sub
sub
jno
repz
mov
insl
out
movsb
push
xor
enter
adc
xor
ret
nop
adc
hlt
loop
fdivr
mov
adc
arpl
stc
int
xchg
dec
add
xorb
mov
scas
jp
mov
push
adc
xchg
jnp
lods
mov
out
cs
pop
movsl
adc
stos
and
popf
loop
enter
lcall
rcll
lods
inc
in
mov
out
xor
xor
cmp
les
push
sub
notl
movsl
cmp
iret
jbe
sub
push
jns
aaa
and
sub
inc
lahf
inc
sub
xor
lahf
out
test
mov
mov
sbb
fcmovnb
jae
scas
inc
jl
and
nop
stos
roll
test
in
pop
das
jne
mov
mov
xchg
mov
int
repz
test
xor
pop
arpl
push
test
mov
dec
jae
outsl
adc
pop
cs
iret
pop
call
sbb
adc
push
sub
or
loope
lcall
jmp
xchg
add
xor
fcompl
xchg
or
dec
mov
lods
xchg
push
mov
stos
or
lahf
add
in
test
lret
adc
sbb
mov
dec
or
aad
addb
ds
mov
das
call
mov
fwait
xchg
sarl
scas
xor
lcall
cmpsb
fwait
add
cmp
xchg
aad
mov
pop
popf
fwait
pop
cltd
xchg
dec
inc
repz
inc
movb
subl
scas
addr16
test
adc
inc
cli
je
popa
sbb
cwtl
xor
or
dec
jo
add
fistpll
lret
paddusw
movsl
inc
push
pop
test
insb
xor
test
insl
or
sub
jo
xchg
ret
cmpsb
and
xlat
push
loopne
lock
sub
setp
jns
push
test
mov
inc
scas
cmp
subb
popl
dec
xchg
lds
pop
idiv
mov
push
dec
pop
pop
push
imul
cli
xor
in
xor
int
push
leave
loopne
mov
rol
aam
inc
push
outsl
sub
or
lcall
or
decb
pop
hlt
fstpt
fiaddl
cld
es
fistpll
push
add
pusha
loope
mov
push
sub
xor
in
xlat
sbb
mov
jl
call
xchg
adc
inc
sub
mov
jno
dec
and
imul
inc
bound
xlat
aaa
das
inc
cwtl
adc
add
mov
push
shrl
jne
rcrb
fmul
sti
xchg
fistps
repnz
xchg
fsubrl
mov
push
add
adc
pop
push
jne
fildl
out
gs
imul
mov
mov
pop
xor
xchg
cltd
arpl
fldcw
mov
mov
je
mov
push
dec
out
cmp
loop
sub
xchg
repnz
push
call
adc
cmp
mov
pop
mov
ljmp
sbb
cli
dec
mov
and
imul
ja
jb
inc
add
test
xchg
negb
adc
lahf
xchg
scas
push
xor
jno
add
pop
mov
xchg
cltd
ret
pop
mov
or
les
add
add
leave
mov
xchg
mov
and
ret
sub
outsb
cmp
sbb
cmpl
aas
dec
fisubrs
aas
bswap
shll
jns
inc
jp
aaa
nop
dec
scas
lock
mov
mov
popw
or
movsl
loope
push
push
xchg
push
movsl
mov
insl
pop
cmp
xor
setns
sbb
das
lret
sbbl
rclb
push
pop
inc
or
into
addl
push
ret
sbb
jp
adc
test
test
test
jnp
ss
lret
or
adc
lret
cltd
lret
xchg
lret
mov
es
jno
int3
xchg
in
ret
stos
mov
dec
fimuls
mov
push
push
adc
dec
andl
xorl
ja
shrl
jnp
inc
lret
adc
int3
into
mov
fimuls
adc
pusha
addr16
mov
notb
xor
pop
outsb
cld
jmp
xchg
stc
cmp
daa
inc
lea
and
xor
pusha
stos
lcall
scas
push
and
mov
out
popf
sbb
sbb
popa
movsb
les
sbb
repnz
add
xorb
into
movsl
out
out
xchg
inc
mov
sub
nop
dec
out
adc
sub
mov
into
dec
mov
push
and
into
xlat
imul
or
ja
push
sub
repnz
push
aas
dec
int
xchg
daa
pop
insb
insl
iret
mov
loope
and
add
jl
jae
shr
stos
jmp
cmp
data16
fstp
gs
pop
inc
js
call
js
jl
push
xchg
pop
push
adc
shll
add
dec
je
call
push
loopne
in
adc
or
xchg
inc
xor
dec
jno
push
into
in
repz
pop
mov
xchg
push
and
out
sub
mov
fstpt
pusha
jp
lock
jno
icebp
mov
aas
mov
imul
jle
pop
add
dec
xor
dec
inc
fstpt
mov
dec
call
sbb
jmp
pop
push
movsb
add
inc
popf
pop
pop
mov
stos
outsb
xchg
out
add
mov
aas
cmpsb
and
loopne
push
cmp
das
or
push
mov
movsl
xchg
push
ffree
imul
dec
pop
dec
nop
xchg
lock
dec
push
stos
jmp
lret
out
adc
xor
in
add
lret
sarl
xchg
xchg
xor
out
add
sbb
xchg
lcall
push
mov
iret
cmc
movsb
out
jno
and
stos
xor
mov
mov
xchg
jmp
sub
scas
xor
pop
aam
sbb
cltd
xchg
jo
outsl
mov
loopne
fdivs
adc
push
add
gs
cmp
jbe
sub
and
mov
faddl
jmp
dec
cmp
iret
mov
mov
sub
mov
ds
sub
add
scas
jnp
test
fildl
pop
or
xlat
repnz
enter
cmp
xor
or
sub
aaa
jns
ss
jb
pop
push
add
push
pop
js
lcall
ss
in
je
adc
mull
dec
pop
mov
push
js
gs
nop
cltd
mov
test
out
sahf
mov
jns
adc
jmp
push
xor
adc
jnp
xchg
push
push
hlt
inc
out
out
lods
mov
mov
cmp
add
les
in
or
cmc
sub
mov
lahf
inc
mov
js
xchg
aas
ljmp
cld
add
push
and
add
loope
sub
mov
repnz
stos
aas
imull
dec
pop
pop
in
andl
outsb
addb
dec
rorb
pop
loopne
jae
icebp
inc
and
or
gs
xchg
adc
incb
mov
hlt
xchg
jae
ss
dec
hlt
lea
out
loopne
ljmp
stos
lock
jg
in
test
in
icebp
test
jno
scas
or
mov
jno
stc
jmp
test
fdivrs
pop
icebp
ficoms
jnp
xchg
jno
in
push
ljmp
or
pop
add
adc
fcoml
arpl
jb,pt
scas
mov
or
add
cwtl
insb
andb
mov
push
jl
push
pop
cmp
test
sub
pop
test
dec
or
or
push
mov
add
cmp
cmp
mov
xchg
ljmp
movsl
xchg
movaps
clc
fsubs
inc
xchg
xchg
jge
imul
fs
dec
mov
push
andl
dec
icebp
imul
cmp
mov
jb
jb
call
push
lods
lds
mov
mov
cwtl
aas
or
mov
popf
leave
sbb
int3
fs
out
popa
jne
adc
jle
mov
dec
int3
mov
es
mov
jmp
or
lahf
xchg
adc
add
dec
mov
push
fs
or
push
dec
lahf
test
repz
fldl
add
mov
xlat
add
inc
jmp
jle
popf
xlat
ss
leave
xchg
in
frstor
sub
sub
popa
clc
test
jo
cmp
aam
push
hlt
test
push
sbb
pushf
stc
in
adc
cmp
push
mov
jne
loopne
in
sub
and
mov
imul
shl
cmpb
push
or
dec
test
pop
xchg
fldenv
mov
push
mov
inc
jg
jno
mulb
pop
in
movsb
movsb
popf
add
push
inc
sbbb
loope
and
test
push
in
fidivrl
jne
fldt
cmp
sub
stc
imul
cmp
mov
repz
inc
je
daa
pop
popa
dec
jmp
and
inc
mov
cli
stc
sub
mov
adc
jbe
out
adc
je
out
push
das
sub
pushf
pop
jns
mov
xchg
mov
setns
pavgw
cmpb
jg
jge
dec
mov
call
ret
cwtl
xor
mov
loope
pop
addr16
mov
and
das
inc
ds
xor
xlat
jl
inc
mov
mov
arpl
insb
in
scas
and
lahf
nop
push
push
dec
mov
mov
mov
das
xchg
or
shrl
mov
stc
cltd
dec
int
inc
xor
inc
clc
sahf
push
es
dec
jle
jp
ljmp
cmp
int3
xor
testb
jns
out
stos
xor
add
jmp
mov
frstor
sub
sbb
icebp
clc
mov
cmpb
ret
adc
inc
sub
inc
frstor
int3
lret
or
les
mov
jno
dec
fildll
pop
cld
insb
push
loop
test
in
adc
lahf
add
add
mov
mov
dec
jg
jmp
cmp
mov
inc
mov
flds
notb
push
outsl
add
fwait
cs
icebp
out
les
int
ljmp
pop
xchg
push
push
dec
mov
inc
popa
sub
por
jae
adc
dec
call
lea
mov
pop
inc
test
push
ja
sub
daa
mov
xchg
and
scas
mov
adc
dec
popa
hlt
and
out
cmp
inc
xchg
mov
lcall
cmp
pop
ja
loopne
mov
inc
xchg
adc
test
xchg
and
out
mov
push
stos
push
into
mov
cmpsb
loope
xor
mov
jne
mov
mov
inc
fwait
push
fcomps
aas
mov
xor
mov
cmpsl
sub
inc
hlt
xchg
insb
cmp
ficoms
push
jmp
inc
pushf
fcoml
sbb
out
sahf
push
insb
fisubs
push
or
jns
jge
push
push
test
sbb
sbb
nop
and
dec
sub
cld
sub
ds
cmp
and
in
cmp
ljmp
pop
in
int
inc
mov
sbb
dec
dec
mov
or
mov
iret
mov
pop
int
add
jne
add
sub
imulb
leave
rcrl
add
sub
into
ds
xor
or
xchg
jle
jecxz
cmc
cmpsb
or
bound
push
dec
xor
lock
lods
stc
jle
mov
dec
adc
xlat
lock
push
xor
loop
repnz
fsub
test
jecxz
add
pop
ljmp
test
jge
mov
mov
xchg
xor
dec
inc
std
test
imul
je
out
in
sub
hlt
rorb
lods
push
cmp
push
xchg
jbe
sbb
cmp
push
ds
xor
inc
insl
insl
rcrl
fst
mov
and
xlat
mov
movsl
fimuls
dec
mov
jns
stc
into
sbb
mov
add
aad
jle
and
fwait
mov
lret
stc
stos
and
inc
imul
add
inc
xor
fs
or
pop
mov
loope
out
dec
shrb
popa
insb
mov
add
in
jo
sbb
sti
lods
ficoml
mov
xlat
push
or
push
jbe
and
std
jo
adcb
sbb
mov
mov
xchg
push
mov
lret
in
inc
clc
outsb
lea
dec
sbbb
fwait
in
ret
pop
andb
cmp
jmp
dec
pusha
pop
cwtl
fdivl
out
jl
mov
or
adc
adc
imul
push
in
push
jne
call
inc
arpl
fs
xchg
pop
clc
int3
push
data16
mov
int3
in
aaa
gs
scas
das
add
sbb
std
popf
sti
scas
pop
mov
and
mov
mov
adcb
and
xchg
out
scas
lock
jge
adc
jns
int
bound
repnz
or
xchg
fcomp
xchg
push
ret
push
stc
mov
cwtl
xor
cmp
mov
push
out
lcall
insl
cmc
adc
or
xchg
fidivs
push
and
jne,pn
pop
aam
xchg
jno
lods
shl
jnp
xchg
jo
cmpsb
sbb
jno
cmpsl
add
cld
pop
stc
mov
pop
cmpsb
jo
xchg
arpl
pop
jecxz
mov
test
inc
in
cmp
push
inc
or
cs
push
mov
aas
hlt
outsb
lock
out
xor
xchg
int3
or
inc
add
adc
add
dec
in
ja
fstpl
mov
adc
stc
insl
arpl
repz
adc
jno
jge
addl
mov
in
push
push
sub
fildl
dec
inc
add
test
cmp
in
fsubs
or
xchg
jp
daa
js
adc
push
pop
out
iret
add
xchg
fstps
jb
aaa
int3
cld
repnz
mov
push
cmp
xchg
push
and
hlt
xor
cltd
mov
jae
xchg
xchg
shll
inc
sbb
daa
pop
test
pop
inc
pop
fwait
out
adc
dec
sub
jno
pop
shll
scas
jp
or
test
push
sahf
push
dec
dec
xchg
sbb
ret
sbb
and
dec
rolb
loope
pop
push
jle
xlat
test
stc
adc
repz
mov
repz
data16
mov
fldcw
cltd
mov
jl
jb
pop
or
in
shl
cmp
push
add
lds
add
sbb
sub
in
sub
cmp
scas
int
addr16
repnz
mov
mov
push
ret
cmpsl
in
mov
mov
sbb
shll
into
and
xor
lods
loopne
cld
or
or
pop
or
or
mov
sub
adc
push
xor
test
mov
in
sub
movsl
lods
addb
fsts
push
inc
mov
leave
mov
push
xchg
in
hlt
push
ja
push
adc
jmp
sti
sub
xor
cli
adc
push
pop
xchg
dec
jle
imul
add
loope
or
int3
mov
pop
jge
mov
xor
pop
fs
andb
or
addb
xchg
scas
leave
das
mov
pop
mov
dec
push
or
xchg
inc
adc
shlb
int
gs
in
push
inc
push
iret
pop
add
cmp
sub
cld
mov
test
mov
inc
xchg
jecxz
test
mov
xchg
fucom
aad
lds
inc
scas
jge
pusha
push
inc
sbb
subl
sti
adc
decb
mov
shlb
pop
andl
pop
mov
aas
inc
push
ror
sbb
push
test
ja
in
push
movsb
gs
add
dec
add
out
mov
sbb
fnstsw
std
adc
push
mov
cmp
mov
mov
lock
das
int3
outsl
icebp
mov
ds
mov
movsb
loop
push
jmp
and
adc
jp
sbb
mov
testl
mov
push
xchg
push
jmp
ds
in
mov
cwtl
push
out
jmp
add
xor
and
dec
jg
xchg
add
dec
dec
sahf
cmpsb
and
pop
mov
dec
dec
out
jp
mov
pop
inc
outsb
or
xchg
dec
fistpll
add
mov
jecxz
or
add
jmp
or
mov
insl
orl
daa
iret
cmp
fldln2
jecxz
sub
sti
test
jmp
mov
cmpsb
sti
icebp
adc
mov
push
add
lock
rclb
notl
xor
popf
jnp
mov
xchg
fidivrl
fidivrs
dec
cmp
jbe
pop
addb
xor
ja
xchg
aam
and
mov
lods
in
std
in
jnp
jno
adc
jns
test
inc
out
pop
xor
xor
cmpsl
icebp
sub
sbb
jmp
cmpsl
data16
fimull
xor
das
outsb
stos
sbb
pop
orb
outsb
cltd
movsl
jp
ret
or
pop
stc
jns
fists
mov
scas
push
sub
mov
and
movsl
fiaddl
pop
push
incl
cwtl
mov
icebp
ret
xchg
dec
popa
lahf
cli
sub
add
jbe
push
pop
push
sub
and
push
cmp
jbe
or
imul
dec
cmp
inc
jbe
int
scas
iret
xor
cmp
xchg
mov
mov
mov
push
in
or
jecxz
stos
cmp
cmp
dec
jno
jle
in
cwtl
jl
xor
jne
ljmp
hlt
mov
cmovnp
movb
mov
push
sub
lea
dec
insb
sbb
and
pop
sbb
sub
repz
mov
mov
movb
mov
xchg
insb
push
pop
mov
lods
adc
enter
xchg
cmp
rolb
roll
xchg
std
je
add
in
jb
fmulp
insl
mov
int
mov
mov
cltd
ror
mov
xchg
stos
clc
and
push
loopne
iret
mov
mov
pop
test
or
jg
mov
pop
ljmp
pop
xchg
icebp
cmp
xor
into
xchg
negl
es
lret
cltd
push
xlat
mov
into
jl
cmp
xchg
in
sbb
mov
push
cmc
in
pop
pop
mov
lods
stos
xor
cmp
cmp
adcl
popa
cmpsb
sub
icebp
push
and
mov
and
inc
add
fldenv
mov
pop
ficoml
out
inc
aam
mov
loop
cmpsl
adc
inc
sub
sbb
inc
xor
test
pop
push
std
aas
add
cmpsl
pop
or
icebp
xor
adc
aad
mov
jle
inc
cli
popa
cmp
pop
jmp
test
xchg
js
dec
out
jp
pop
jmp
mov
add
push
cmpsb
es
add
or
fdivr
adc
cmp
pop
push
jmp
mov
push
mov
add
ds
mov
push
test
add
xchg
sbb
and
sub
xchg
mov
jb
pop
sarl
xchg
and
cltd
push
arpl
adc
mov
and
aaa
xlat
movsl
fdivl
mov
xor
jl
insb
jge
loopne
pop
jno
sbbl
jbe
or
cmp
lahf
cwtl
push
jecxz
or
imul
cld
imul
sub
jno
cmp
stos
mov
push
orb
inc
inc
mov
rorb
mov
xchg
shrb
test
lea
adcb
xchg
pop
pop
xchg
sbb
xchg
test
ds
xlat
mov
push
mov
push
jecxz
lret
add
mov
lahf
or
sub
test
mov
int
lret
imul
jl
dec
mov
jmp
inc
mov
orl
sahf
aam
test
jecxz
mov
sub
mov
mov
aas
adc
into
stos
cwtl
inc
int
or
pop
mov
adc
jle
sub
sbb
xchg
cmp
inc
inc
xchg
jmp
adc
sbb
add
and
jnp
sbbb
ja
out
xor
leave
out
push
push
cmc
mov
popf
lret
or
push
xor
adc
imul
inc
stos
call
sub
ja
ds
mov
into
out
mov
inc
mov
loopne
add
push
aas
sub
popf
fwait
add
xchg
cmpsl
adc
push
outsb
mov
dec
int3
inc
repnz
aam
jae
stos
inc
insl
mov
cmpsb
xchg
add
mov
fs
mov
loopne
inc
adc
xor
inc
sub
push
inc
and
lret
push
jp
movsb
insb
and
inc
push
jnp
sbb
jecxz
lret
push
fsubl
movsl
enter
test
dec
add
dec
in
dec
rclb
rcrl
dec
xchg
and
cwtl
adc
push
rcl
mov
fwait
nop
leave
or
das
sbb
sub
popf
rolb
push
sbb
push
clc
and
xor
sbb
and
orl
push
xchg
sub
jmp
mov
push
and
repz
jge
mov
fistpll
mov
std
mov
dec
sbb
ret
mov
out
pop
in
sti
and
bnd
popf
or
and
adc
movsl
and
adc
imul
mov
js
sub
dec
pop
rolb
jmp
cld
in
cmpb
sar
mov
call
in
ds
add
mov
les
pop
push
outsl
xor
pop
aaa
or
or
and
add
sti
outsb
mov
pop
add
dec
sub
std
mov
adc
mov
inc
jbe
jno
loope
xchg
pop
adc
loopne
iret
in
pop
call
shlb
lret
cwtl
and
cmp
mov
push
cmp
rcr
mov
stc
nop
lahf
movsl
or
or
mov
mov
sub
sbb
dec
arpl
sbb
out
ret
adc
mov
xchg
rorb
xchg
inc
in
lods
out
movsl
xchg
sbb
pusha
xor
mov
mov
jmp
sub
cmp
add
pop
dec
and
sub
imul
cmpsl
xor
push
mov
iret
cld
or
or
scas
and
lods
in
xchg
push
push
dec
jb
mov
stos
pop
rcll
push
call
jae
lret
loope
cmp
adcb
mov
lret
mov
push
rol
push
jl
or
push
adcl
mov
shl
xchg
mov
lret
je
imul
xor
adc
inc
cmp
adc
mov
int3
adc
daa
mov
fsubl
jns
js
mov
es
arpl
adc
inc
mov
movsb
ficomps
dec
inc
dec
iret
sub
adc
or
push
and
test
push
shl
push
clc
cli
and
in
cmp
sbb
fdivrl
xor
push
mov
lcall
call
jl
leave
cmp
sahf
sahf
dec
and
dec
ret
cmp
inc
daa
fs
sub
sbb
mov
pop
aas
inc
jmp
jecxz
mulb
stos
mov
dec
rcrl
and
mov
inc
mov
dec
fstl
sub
push
sbb
mov
jae
leave
in
and
hlt
sahf
fmuls
das
or
inc
loope
int3
cmp
sti
pop
push
aad
pop
sti
rcr
adc
cmp
ret
rcl
xchg
cli
xlat
lods
xchg
cwtl
sub
in
push
push
add
sbb
f2xm1
jo
jg
fcmove
ss
repz
or
jne
ret
xor
push
inc
mov
loope
call
das
les
pop
xchg
lods
adc
bound
push
aaa
xchg
and
mov
out
ds
push
jo
gs
aad
xor
repnz
xor
clc
lret
aas
loop
out
adc
cmc
cmp
in
dec
inc
pop
inc
adc
inc
aas
mov
jle
sbb
or
dec
lea
dec
lds
add
pop
mov
sahf
and
fdivs
inc
inc
jg
xchg
fsts
and
loopne
pop
inc
fwait
mov
ja
jle
out
xor
movsb
sbbl
and
mov
pusha
mov
pop
repnz
push
xchg
push
mov
mov
ret
test
sub
ret
test
and
sbb
ljmp
add
out
sbb
leave
mov
cmpsl
dec
or
data16
mov
xor
adc
stos
cmp
divb
stc
xchg
sub
pop
jne
in
dec
cmp
pop
fwait
cmp
mov
and
data16
call
rcrl
xor
les
or
mov
mov
or
out
xor
in
test
into
sbb
add
stos
push
push
or
jo
mov
repz
lock
xchg
arpl
sbb
mov
imul
push
xor
xchg
lods
pop
inc
out
pop
pushf
mov
mov
cmp
lahf
popl
out
cmp
push
pop
or
fstpt
sbb
test
test
sarb
rcll
xchg
filds
push
movsb
lods
call
cld
aad
packsswb
mov
fisubrl
lcall
sbb
out
adc
mov
sbb
lcall
sysenter
sbb
and
mov
sahf
sarl
imul
cs
inc
andl
cld
int
aam
jns
mov
popf
sahf
pop
je
inc
add
bound
jle
push
data16
push
and
jmp
outsl
rorl
das
mov
adc
leave
lea
inc
mov
sar
movsl
sbb
jno
hlt
cs
ds
cmp
pop
xor
xchg
cmpsl
dec
pop
movsb
out
mov
push
shrb
mov
cmp
lret
push
iret
das
xor
mov
lret
popa
push
pop
add
iret
inc
mov
jg
jmp
mov
shlb
push
pusha
push
out
mov
jbe
ret
push
pop
adc
in
xor
test
push
xchg
lret
jl
mov
mov
xor
mov
fidivrl
jge
xchg
notl
cli
mov
inc
mov
xchg
nop
xor
nop
pop
jecxz
push
jmp
mov
push
cmp
sub
pop
add
lds
xor
inc
mov
stos
jg
cmp
mov
insl
mov
inc
negb
out
sub
mov
sub
sub
cmp
push
xchg
lret
jecxz
sbb
cltd
xchg
aas
mov
pop
mov
fwait
mov
push
aam
ja
scas
cmc
jb
test
lds
cmp
setp
xchg
cmp
adc
aam
jmp
lret
dec
fildll
cmpsl
pop
test
xor
cmp
cs
dec
out
js
lock
push
nop
or
push
xor
pop
or
push
or
lds
pop
movsl
push
fimull
sbb
pop
mov
push
pop
out
dec
push
outsb
scas
dec
dec
out
adc
cmpsb
mov
add
add
xchg
xor
pop
xor
in
mov
and
adc
and
inc
insb
rorb
dec
je
leave
inc
fnstenv
les
push
mov
insl
popw
ss
mov
dec
inc
scas
xor
xchg
enter
rolb
in
not
cmp
mov
fs
inc
mov
xchg
in
sbb
dec
hlt
jmp
addr16
cmp
lods
jnp
dec
outsl
xchg
andl
cmp
xor
cmp
xor
pop
mov
prefetcht1
add
pop
cld
ror
xor
inc
jo
iret
xor
loopne
lret
mov
jnp
cld
test
daa
mov
outsl
add
pop
ret
mov
push
clc
mov
pushl
rorl
mov
fildl
cmp
jno
push
loop
and
push
test
pop
fldl
lods
cmpsb
jmp
sahf
loope
js
lret
je
inc
mov
mov
inc
cmp
sbb
sbb
sbbb
and
or
jecxz
cmpsb
mov
mov
mov
pusha
push
dec
add
push
ret
iret
test
push
fcmovu
push
je
cmp
push
insl
mov
lret
sbb
push
aam
std
push
xchg
negb
inc
and
repz
push
xchg
xlat
cmp
decl
test
cmp
in
push
cmp
dec
pop
mov
or
pop
push
mov
fists
pop
negl
push
adc
loopnew
popa
xlat
fs
aas
push
or
gs
fdiv
out
loope
dec
mov
pop
jno
scas
fwait
scas
pop
xor
rorl
pushf
ret
loop
lahf
outsb
in
fcmovnb
mov
adc
stos
bound
arpl
push
or
je
cmc
dec
sub
mov
jmp
xchg
push
jg
xor
xchg
test
fnop
mov
rdtsc
shrb
push
sahf
pop
or
pop
jp
jns
push
dec
cs
fcoms
jns
mov
das
mov
pop
nop
push
cmpsb
add
ret
pop
arpl
jl
cmp
mov
push
cmp
imul
pushf
sbb
push
inc
into
scas
mov
scas
sti
or
addr16
fstpt
jo
lret
xchg
idivb
mov
mov
lahf
movsb
gs
fbstp
leave
cmp
lcall
sub
notl
fistl
pop
add
out
ficompl
lods
pop
add
sbb
add
arpl
push
mov
sbb
aaa
shr
xchg
insl
dec
pushf
xchg
aas
mov
xor
sub
fs
sahf
in
dec
repz
out
movl
fsubl
jecxz
mov
int3
xor
push
lret
add
je
repz
aad
push
mov
xlat
cwtl
push
mov
mov
pop
test
push
mov
repz
leave
imull
xchg
mov
xchg
jae
aas
xorb
pop
jnp
xor
jbe
test
dec
int3
mov
push
inc
adc
cmp
int3
or
int
sub
out
fincstp
inc
or
rorl
shrb
aad
sahf
cmp
sub
fwait
lcall
xor
or
sub
mov
adc
aaa
and
adc
decl
and
ret
pop
xor
pusha
fmull
adc
in
cmpsl
sbb
fadd
je
pop
out
mov
cmpsb
gs
arpl
adc
stos
xor
sub
enter
or
xor
add
push
push
jae
sbb
shrl
pop
mov
fisttps
mov
adc
dec
pop
xor
test
xchg
jns
inc
jmp
mov
fmuls
icebp
jp
xchg
lret
mov
je
cmpsb
loop
mov
aam
imul
push
xchg
or
ja
push
outsb
mov
aaa
jmp
das
sbb
out
cltd
jne
jns
adc
cmp
ss
pushf
dec
or
jge
dec
pop
push
bound
ret
sbb
jle
add
jmp
jne
or
imul
xchg
inc
sbbl
cmpsl
dec
pop
and
leave
sub
sub
sub
daa
daa
sub
movsl
lods
fstpl
pop
shl
xchg
clc
mov
mov
rcrl
call
sbb
push
sbbl
icebp
cld
int3
pusha
push
leave
xor
sbb
pop
mov
jns
push
out
js
jno
hlt
ret
aam
fwait
mov
mov
inc
bound
addr16
andl
mov
divb
cmpsb
inc
cmp
imul
jae
jg
out
lock
fnstenv
adcb
notb
and
sbb
xor
clc
sbb
hlt
gs
cmpsb
cmp
add
pop
push
mov
dec
bound
mov
cmp
jp
cmc
mov
test
clc
pop
mov
lahf
leave
divl
sub
in
arpl
repz
adc
andl
in
jle
lahf
jne
pop
xor
mul
dec
push
inc
loope
ljmp
pop
rorb
in
xchg
pmulhw
sbb
stc
xchg
push
adc
pop
lods
jg
in
bound
sarb
mov
leave
and
ret
and
mov
cmp
and
inc
movsl
mov
fsubs
jnp
add
jbe
ss
ret
mov
rol
or
adc
mov
add
jmp
mov
iret
or
leave
sbbb
or
pop
in
or
lret
pop
shrl
jle,pn
jp
adcl
xor
mov
jae
push
pushl
xor
push
or
js
add
cmp
xchg
out
mov
jp
clc
inc
mov
mov
mov
loopne
hlt
inc
pop
loope
in
ds
pop
mov
sub
dec
dec
dec
push
mov
xor
iret
out
mov
mov
cmp
int
sbb
jl
mov
subb
cmp
mov
stc
inc
jecxz
into
outsb
push
mov
or
add
mov
test
adc
and
gs
inc
jns
xchg
mull
push
or
and
mov
cld
mov
and
sbbb
xchg
pop
push
adc
xlat
int
mov
or
sub
in
xor
jne
cmp
fiadds
xor
rcr
mov
popf
cmc
pop
aam
mov
cmp
add
push
repz
mov
and
leave
loopne
xor
pcmpgtw
in
add
cmp
shrl
push
sahf
aam
dec
jbe
in
push
cld
xchg
jns
inc
cli
ficompl
sub
fsubl
cltd
jge
push
push
movsl
sbb
test
cmp
lcall
out
pushf
stos
dec
push
test
test
dec
push
xlat
xchg
js
pop
mov
push
stos
icebp
cmp
rol
inc
add
sbb
jmp
adcb
dec
jg
push
arpl
adc
cld
js
xchg
push
outsb
leave
shrb
sbb
test
add
mov
add
jae
cmp
stc
fisttpl
pop
mov
add
pop
pop
ret
popf
addr16
push
lret
add
pop
bound
scas
pop
push
addl
add
je
mov
repnz
les
mov
push
pop
or
inc
decb
repz
jl
xchg
aam
mov
jge
jne
add
sti
jnp
dec
push
dec
out
test
mov
ja
fs
xchg
test
cs
and
cmp
jae
sub
cs
push
int3
push
movsl
add
add
das
mov
mov
rorb
loop
or
sahf
mov
push
adc
inc
adc
fmul
addb
fstpt
aam
imul
imul
repz
ss
pop
push
add
or
sub
and
ret
push
push
mov
addr16
into
aad
mov
outsb
stos
adc
mov
and
sbb
stos
cmp
sbbl
mov
jp
adc
sbb
stc
movsb
lret
mov
ret
out
gs
scas
cli
and
sbb
jp
js
push
imul
es
mov
cmp
cmp
xchg
ret
aaa
sbb
or
cli
mov
xor
out
add
jecxz
adc
sbb
xor
lock
adc
jp
push
push
xchg
shl
pop
stc
outsl
arpl
push
push
xor
mov
mov
out
aaa
fs
or
or
mov
mov
add
jb
pop
sahf
push
inc
cmp
cld
lret
mov
push
cmc
xchg
push
jnp
movl
or
inc
pop
shll
in
mov
mov
pop
xchg
lods
bound
inc
mov
cmp
fwait
movsb
jmp
bound
push
clc
and
fmull
movsl
or
cmc
shr
inc
inc
repnz
push
lds
insl
xor
iret
cmp
lea
cmpsb
bound
ss
mov
push
fisubs
sub
cmp
push
cwtl
jae
aam
dec
sub
adc
xor
sub
nop
in
ds
mov
addb
add
arpl
psubsb
sbb
int3
je
xchg
xor
xchg
out
cld
push
rolb
adc
jbe
ret
mov
dec
mov
add
vpsrad
xor
loope
mov
pop
and
push
addr16
cmp
pusha
ss
pop
push
mov
aad
push
ljmp
and
mov
dec
xchg
imul
pop
fadd
xchg
mov
xor
jmp
data16
sub
scas
push
mov
lret
icebp
out
imul
out
rcrb
or
movsb
add
testb
mov
push
dec
and
iret
lods
jl
adcb
push
xorb
bound
out
adc
notb
push
push
imul
mov
push
jne
jl
mov
jle
jle
aad
into
pop
jmp
pop
and
xchg
push
mov
stc
adc
icebp
imul
inc
or
mov
mov
les
xchg
mov
ret
mov
add
xor
xchg
bound
imul
js
mov
adc
push
inc
arpl
or
and
je
mov
cmp
jge
idivb
push
dec
adc
test
call
iret
aam
in
and
repz
lds
cltd
adc
loope
ret
lds
jns
push
rcrb
xchg
mov
push
aaa
cmp
movsb
out
and
jle
xchg
int
sarb
push
cmpsl
repnz
cmp
inc
push
movsb
mov
pop
and
add
pop
cmp
pusha
push
cwtl
loope
sbb
dec
cld
lods
cld
dec
inc
adcl
ret
dec
fnstenv
sub
jg
ret
xchg
xchg
int3
pop
jne
vmovupd
and
scas
test
sbb
lret
pop
mov
and
mov
sahf
sub
iret
sbb
fnstcw
fwait
xor
rolb
mov
jbe
ss
push
leave
jnp
lea
aaa
pop
adc
loopne
mov
fwait
mov
ja
sub
pop
sbb
mov
and
pop
or
pop
hlt
fucompp
std
add
rol
sbb
and
cmc
inc
adc
fsubp
sbb
mov
push
mov
gs
mov
push
bound
sub
dec
jns
mov
xchg
push
push
jge
orl
stc
push
mov
mov
mov
mov
add
mov
hlt
andl
cmpsb
xor
sbb
mov
repz
in
je
or
pop
iret
nop
cmp
insl
aaa
lock
dec
add
inc
add
adc
lods
jo
das
movsl
sarb
das
flds
cs
shr
rcll
je
mov
jl
xor
cmp
iret
lea
mov
in
lcall
inc
sarb
cli
dec
int
enter
shr
or
or
mov
xor
inc
fsubs
lods
loopne
cs
movsb
in
or
inc
mov
lcall
int
pop
mov
in
aas
cmpl
call
or
pop
repnz
enter
xor
fildl
push
xor
cld
ret
addr16
mov
scas
in
cmp
sub
cmpsb
xlat
lods
mov
popf
hlt
fsubrp
inc
pop
pop
push
pop
inc
pop
lods
mov
scas
adc
sbb
shr
inc
movl
loopne
add
sbb
pop
pop
add
ja
imul
and
or
movsb
push
cmp
std
arpl
xor
arpl
mov
pushf
mov
shll
movsb
fsubs
lret
ret
sub
add
adc
adc
and
iret
scas
mov
out
dec
pop
insl
insb
cmp
ds
movsl
cmpl
ds
inc
dec
lahf
je
sti
inc
andb
das
push
push
fadds
jb
ds
xor
das
aaa
dec
repnz
ljmp
daa
sbb
adc
xchg
mov
insb
cld
pop
xchg
pop
shll
stos
dec
mov
mov
aaa
mov
sbb
fs
outsb
ds
sub
icebp
repz
out
or
in
stc
push
fs
or
adc
cmp
rcrb
mov
lods
mov
inc
pop
jg
xchg
sbb
fmull
cli
enter
and
imul
test
iret
adc
cmovl
xor
icebp
rcll
lds
cmp
cmp
sub
push
push
int3
pop
in
cmc
fiaddl
fs
shlb
imul
push
cmp
dec
jo
adc
cmpsl
dec
imul
and
dec
fisubs
jmp
push
and
sti
inc
dec
jbe
pop
dec
sbb
adc
dec
outsl
ret
and
add
adc
xchg
push
mov
add
mov
scas
js
stc
jge
sbb
and
sub
adcl
cmp
mov
cmc
mov
popa
popa
and
fs
or
stos
dec
push
mov
fcmovb
and
lret
test
ja
cmp
mov
mov
dec
jp
lret
mov
sbb
pop
pop
inc
dec
faddl
ljmp
jle
push
out
pop
cmp
mov
leave
mov
push
or
pop
mov
dec
and
cmp
rcrl
pop
adc
imul
icebp
int
mov
xor
or
cs
mov
or
aaa
sbb
dec
repz
movsl
mov
sub
popf
jp
push
jnp
dec
stos
adcl
mov
inc
jle
cmpsb
repz
mov
xchg
lea
repnz
sbb
push
inc
mov
or
fsubl
xchg
sub
cmp
sahf
subl
cld
add
in
sub
mov
sub
pusha
bound
add
inc
and
in
mov
das
sbb
pop
xlat
popa
add
mov
push
xor
inc
mov
aas
add
int
and
addr16
in
sbb
mov
push
loop
cli
mov
xchg
dec
arpl
clc
in
lahf
outsl
dec
and
clc
xchg
mov
subl
jmp
push
lret
stos
mov
cwtl
add
mov
push
xchg
pop
pop
sub
add
loop
xor
insb
pop
roll
dec
hlt
rclb
push
mov
inc
ja
loope
jp
dec
cmp
inc
in
lock
addr16
xor
test
xchg
ss
fwait
mov
dec
cmpsl
or
fs
sarl
xchg
inc
movsb
mov
fstps
mov
adc
lock
mov
pusha
push
sarl
and
fdivrl
push
fidivl
xchg
jge
imul
test
pushf
fucom
mov
xor
jl
pop
loope
lcall
bound
ljmp
fs
xor
add
push
arpl
add
push
lds
sbb
mov
insb
lods
pop
ret
nop
push
xor
fcmovbe
popf
fwait
or
in
jg
push
dec
lea
fs
loopne
loope
pop
das
cmpl
ss
push
fwait
clc
mov
fimuls
mov
in
jmp
jle
and
into
xor
sarb
inc
sbb
cmp
push
movsb
cmpsl
mov
jo
stos
test
and
les
js
xlat
gs
pop
sbb
pop
adc
pop
in
fimull
mov
fwait
xchg
std
shrl
and
mov
pop
and
mov
mov
pop
jp
lret
aam
sahf
xchg
push
adc
push
dec
push
mov
mov
int
xchg
jo
lcall
cli
and
jae
pop
sbb
arpl
sbb
pop
lods
mov
push
sub
sub
repnz
jno
sub
cmpsl
push
dec
repnz
out
mov
data16
push
and
adc
xchg
pop
mov
clc
pusha
daa
jae
hlt
sbb
cmp
ret
jl
sbb
and
sub
sub
into
loopne
pop
std
add
rol
stc
adc
add
inc
aad
mov
mov
ss
addl
mov
lock
clc
sub
js
outsl
outsb
jnp
xlat
mov
xchg
sbb
sbb
jno
int3
jno
ret
and
jo
inc
scas
mov
pop
clc
inc
rcrb
jo
adc
push
insl
xor
mov
mov
pop
dec
sub
fnstcw
mov
xor
insl
fldl
daa
outsl
mov
jbe
dec
add
adc
inc
mov
rclb
outsb
mov
mov
and
pop
fwait
sbb
sbb
pop
imul
inc
rol
out
rcrb
jb
xor
repnz
pop
hlt
insb
test
clc
test
mov
mov
cmp
ret
adc
jnp
jbe
in
push
insb
sbb
idivl
mov
push
cmp
test
mov
out
loope
jle
mov
mov
jp
cmpsl
gs
lock
sti
cmp
ret
cmpl
sbb
push
pop
mov
outsl
in
sub
andl
adc
in
sbb
cmpsl
rorb
cmp
jnp
inc
add
stc
cmp
scas
inc
mov
in
jae
jl
mov
xor
xor
lcall
push
jno
cmp
mov
adc
cmp
push
cmp
je
imul
lods
mov
xchg
mov
jo
in
and
add
test
fidivrl
mov
push
clts
add
sub
and
leave
rorl
add
cltd
sti
lock
fiadds
add
ret
mov
pushf
sbb
push
and
xchg
imul
loope
and
fisttpl
leave
ret
ror
fbstp
mov
sahf
inc
push
xchg
push
fsubrl
test
pop
fcomp
dec
leave
xlat
movsb
and
push
aaa
movsb
mov
mov
jl
lret
mov
lds
jge
lods
add
aad
cltd
dec
aam
fimull
mov
sti
ja
sbb
imul
cltd
mov
dec
or
out
lods
or
mov
add
mov
adc
dec
leave
jne
cmp
stos
ret
sbb
push
out
or
dec
leave
call
inc
mov
push
arpl
jne
cs
mov
js
inc
loop
and
loope
jns
gs
enter
aad
cltd
lcall
inc
push
shll
sub
nopl
aam
shll
cld
in
inc
inc
mov
adc
push
icebp
mov
mov
inc
cmp
movsl
int
mov
std
push
into
clc
jne
dec
mov
dec
sub
xchg
inc
jg
loop
cmpsb
mov
push
add
imul
mov
inc
jge
in
xor
inc
inc
mov
movsb
jb
mov
sar
dec
stc
lret
pop
lcall
push
fst
pop
jg
push
cltd
push
movsb
push
scas
shrl
sbb
sub
imul
push
ret
inc
scas
dec
jg
nop
or
aaa
inc
xlat
out
cwtl
sbbl
sbb
jmp
js
adc
sub
repnz
and
pop
icebp
sub
xor
and
mov
das
popf
cmp
push
nop
iret
jnp
sarb
cmpsl
orl
add
mov
add
enter
add
mov
jle
repz
int
adc
xor
data16
arpl
rorb
test
in
std
stos
adc
movd
mov
push
cmp
shl
sahf
xor
insl
or
and
jle
sbb
mov
sbbl
mov
and
jecxz
lea
mov
mov
call
test
adc
enter
loopne
aaa
push
call
in
and
mov
pop
cltd
adc
frstpm(287
mov
jl
leave
jbe
bound
push
dec
std
mov
add
dec
mov
xor
sahf
aam
daa
shlb
inc
sub
call
inc
mov
xor
cmp
cmp
sbb
mov
dec
mov
icebp
sub
xchg
xchg
call
lods
lods
movsl
jns
orl
push
pop
or
nop
jo
aam
in
push
shrb
jno
jo
aad
lock
cmpb
push
jns
pop
movsl
repz
adc
push
and
mov
and
and
mov
nop
cli
rclb
pxor
jecxz
mov
add
inc
arpl
pop
repz
pop
push
dec
lret
lcall
mov
push
rclb
add
vmulpd
arpl
sahf
out
test
inc
pop
mov
push
pop
xchg
sbb
xchg
mov
mov
sbbb
mov
mov
and
mov
adc
rorl
mov
sbb
cmc
xchg
popa
rclb
out
not
outsl
lods
mov
jle
dec
adc
notb
cmp
mov
imul
decb
lea
dec
add
rcr
mov
les
xchg
push
pop
dec
jbe
imul
repz
xor
insl
mov
adc
or
hlt
nop
in
jnp
es
das
out
dec
mov
mov
in
mov
cmpsl
fnstsw
pushf
adc
inc
lods
jge
pop
add
pop
icebp
jecxz
icebp
pop
lods
sub
dec
popa
xlat
scas
das
lret
mov
int3
fldl
ljmp
sub
dec
add
mov
testb
inc
movsl
in
inc
lock
sbb
repz
sbb
xchg
arpl
and
sti
fwait
cmp
cmp
or
push
sbb
push
out
mov
xchg
add
xchg
or
mov
int
lret
call
ja
ds
push
imul
lret
ds
add
les
out
jp
nop
stc
outsb
and
xchg
lahf
xchg
mov
jns
aad
pusha
insl
jmp
push
xchg
outsl
aam
cld
into
movsl
xor
mov
pop
mov
aad
test
xchg
inc
mov
jae
push
sbb
pop
jecxz
mov
pushf
mov
sub
mov
sbb
or
pop
dec
iret
inc
fsub
xchg
nop
rcll
cld
inc
pop
pusha
dec
mov
inc
xor
push
imul
mov
int
into
push
rclb
sbb
cmp
popf
pusha
pop
ja
arpl
push
pop
les
xor
jge
mov
ja
sbb
push
ss
test
jnp
pop
or
stos
aad
jp
adc
jmp
jmp
call
push
out
in
xchg
xor
mov
scas
mov
pop
xor
sbb
cmp
xchg
xchg
cmp
dec
jae
ret
ja
xlat
int3
int
mov
xchg
jns
mov
mov
js
push
pop
sbb
sub
in
orl
add
or
ret
jmp
jno
js
jne
dec
rol
dec
cmp
dec
mov
or
cs
pop
in
in
rorl
dec
es
pop
ss
mov
inc
jl
in
xor
mov
adc
push
nop
daa
mov
test
daa
mov
enter
int3
and
out
mov
ret
sahf
lods
jp
loope
ljmp
jecxz
inc
iret
enter
and
scas
fistpl
dec
scas
adc
cmpl
imull
pop
mov
mov
and
test
push
jp
insl
xchg
fstps
jo
lcall
sbb
in
ret
cmc
xchg
cmpsl
add
sub
ret
add
pop
push
or
xor
cmpb
adc
movsl
mov
mov
aas
and
orb
pop
push
mov
nop
aas
mov
xchg
xorl
or
jg
fstpt
in
sbb
sub
dec
mov
movsl
ja
ja
iret
mov
xorl
xor
stos
xor
mov
pop
mov
test
ss
inc
pop
fdivrl
jmp
dec
pop
sahf
insb
sbbl
pop
inc
fisttpl
int3
sub
dec
push
nop
std
scas
sbb
and
push
cmp
arpl
xchg
or
add
int3
inc
jg
push
xchg
les
or
shrb
push
pop
push
push
aad
ror
nop
adc
shlb
add
xchg
mov
fstps
sbb
pop
mov
hlt
add
loopne
jmp
mov
push
jns
inc
add
icebp
cmp
or
int3
jge
int
iret
in
pop
sub
loop
imul
push
jo
arpl
push
gs
cmova
imul
mov
cmp
cltd
es
outsb
xor
jae
jle
dec
cmp
es
lods
xor
pop
mov
popf
xor
cmpb
pushf
sub
dec
xor
fnstcw
jno
adcl
jl
xorl
push
sub
stos
push
rclb
add
cwtl
mov
xor
rcr
push
mov
mov
and
das
sbb
pop
lcall
movsl
cmp
clc
rclb
orl
stos
inc
mov
mov
loop
push
popa
add
scas
jns
cmp
inc
sbb
mov
rorb
mov
clc
pop
adc
jae
xchg
jnp
in
lret
mov
stc
enter
and
inc
pop
push
xchg
test
fstpt
icebp
push
sbb
mov
movsb
rol
mov
imulb
pop
aas
jl
pop
sahf
fwait
clc
adc
push
enter
sbb
add
int3
dec
pop
in
popf
repz
pop
xor
mov
sub
outsl
mov
test
fsub
push
test
push
and
sub
adc
rol
xchg
test
sbb
imul
cmp
mov
add
or
sub
cmp
or
lcall
cli
xchg
dec
jge
xor
repz
mov
mov
out
aas
in
sub
mov
lea
fisttpl
ljmp
cmp
mov
cmp
adc
xor
gs
mov
faddl
fsubs
repnz
jge
dec
inc
cltd
dec
dec
rcrb
outsb
sbb
adc
mov
lcall
out
test
pusha
sbb
mov
fcoml
cmp
jge
lret
xchg
das
xor
and
data16
sbb
xchg
sbb
out
mov
int
fstpl
and
stc
push
fsubl
mov
filds
jp
insb
ss
dec
stos
and
nop
fimuls
push
lods
xchg
push
fbstp
aad
pop
sub
add
jne
mov
testl
add
mov
clc
cwtl
dec
push
xchg
out
scas
pop
lods
nop
fistpll
mov
push
mul
mov
pop
push
push
mov
mov
sub
sbb
mov
mov
adc
inc
add
mov
mov
dec
lcall
pop
mov
into
push
mov
stos
ss
or
lahf
shll
adc
jo
mov
mov
or
adc
stc
lcall
xchg
inc
push
sub
inc
movsb
and
jae
dec
jno
js
dec
add
sub
data16
push
xchg
fsubrl
sahf
sbb
cld
addr16
pop
sbb
mov
sub
mov
xorb
jp
ficoms
mov
sahf
push
les
mov
arpl
sub
stos
fwait
pop
hlt
pop
dec
shl
push
dec
sbb
std
mov
sbb
sbbl
clc
mov
dec
jge
loope
lret
pop
ret
pop
in
jmp
insb
rcrl
mov
enter
popf
arpl
mov
mov
sbb
imul
dec
or
mov
mov
shll
in
add
xor
ret
ljmp
add
xor
and
dec
dec
mov
inc
jnp
stos
dec
pop
jp
push
bound
pop
xchg
and
lahf
add
sbb
std
cmp
mov
lahf
add
stos
ja
xor
andl
fidivrs
std
cmpsl
scas
xor
inc
aam
insl
mov
aaa
aad
sti
or
divl
xorb
adc
test
nop
nop
mov
xchg
push
xchg
movsl
dec
sbb
xchg
ret
enter
aam
insb
outsl
cmp
xlat
push
dec
in
lods
pop
repz
jae
les
movsb
mulb
lahf
sub
shlb
movl
mov
lods
and
cmp
movsb
shll
cmc
push
in
inc
mov
mov
jbe
mov
sbb
dec
sbb
int
and
xor
mov
mov
push
and
leavew
enter
lods
gs
push
push
fiadds
fxch
or
push
ss
ret
jne
sbb
jns
fistpll
mov
inc
je
cmp
add
cmp
cltd
mov
jo
gs
add
stc
pop
pushf
stos
cmc
pop
jmp
test
push
mov
push
sbb
cmp
ss
cs
xchg
xchg
imul
sahf
daa
mov
idivl
jo
dec
or
sbb
lcall
insl
cmp
pop
pop
mov
dec
add
or
cmp
pusha
imulb
xchg
fwait
mov
scas
fidivrs
sahf
out
mov
push
sub
icebp
ret
lods
movsl
fimull
xor
lahf
rol
dec
inc
mov
test
rol
xor
pop
outsb
pop
nop
sub
out
push
daa
push
cmp
xor
mov
add
or
loope
and
jno
xchg
xor
mov
xchg
jo
xchg
outsb
mov
fldenv
and
xor
add
insl
sbb
repz
lea
add
xor
jno
fs
lret
shlb
mov
mov
or
mov
or
out
cmp
mov
loope
adc
repnz
insb
in
pop
inc
fwait
cld
mov
mov
paddusw
mov
rcrb
out
outsb
pop
movsl
movsb
sub
mov
int3
cmp
loopne
mov
test
xor
out
jp
jmp
inc
sahf
lcall
out
mov
ret
loop
pop
je
push
insb
lret
sahf
jb
out
ja
stc
fmuls
mov
imul
imul
popa
xchg
std
loopne
sarb
aad
ljmp
js
test
and
out
pusha
inc
loopne
mov
popf
lods
adc
add
incl
mov
insb
jecxz
mov
insb
sub
pop
inc
sbb
or
aas
sbb
jbe
push
pop
mov
cmpsb
and
std
aad
ds
xchg
dec
push
popf
lods
out
push
imul
lds
subl
nop
es
mov
icebp
mov
push
cmp
pop
sub
mov
mov
sub
and
fidivs
xor
pop
insb
fisubrs
inc
call
dec
ja
in
ljmp
dec
and
out
xchg
xchg
xor
pop
fldt
or
jbe
sub
or
stos
cmp
fsubl
jb
dec
cmp
or
les
in
repnz
shll
enter
adc
push
jb
cmc
push
sub
jae
popf
popa
dec
xchg
pushf
ret
lahf
dec
mov
mov
push
sub
inc
lods
cmp
jle
out
shl
jge
add
ret
clc
shlb
push
and
xchg
int
cwtl
hlt
mov
pop
cmp
mov
test
out
roll
push
sub
xlat
add
ret
loop
push
adc
subb
mov
push
xor
ffreep
js
pop
into
jmp
dec
dec
push
sbb
jg
xchg
shl
mov
add
jnp
xchg
jnp
inc
jae
lods
sbb
mov
inc
leave
jb
mov
int3
in
push
stos
shlb
int
lahf
add
lcall
mov
shr
fldcw
mov
lahf
or
hlt
xchg
cmp
cli
jmp
sub
inc
mov
or
sarb
inc
gs
add
dec
mov
cmpsl
mov
les
xchg
loop
in
into
pop
cmp
loope
pop
fidivrs
cmp
push
cmpsb
aam
xor
sub
mov
aam
sti
sbb
sbb
daa
mov
jo
inc
in
fwait
adc
cmp
pop
push
and
out
adc
cli
and
je
cli
lcall
insl
imul
inc
jae
jmp
push
push
jle
pop
push
jle
jle
add
add
lea
fsubl
xchg
pop
cmp
xor
stc
jp
mov
lret
test
sbb
or
pop
sbb
clc
mov
and
mov
cs
sarl
pop
shll
mov
mov
push
mov
iret
fwait
inc
push
push
xor
or
lock
lcall
popl
inc
lds
test
cmp
ljmp
push
sub
cltd
sbb
enter
cmpsb
clc
mov
or
loopne
and
jno
sub
imull
jae
sbb
push
and
je
adc
dec
dec
adc
mov
frstor
sarl
test
mov
xchg
into
aam
rorl
mov
jno
jecxz
cmp
scas
cli
inc
and
cmp
cmp
xchg
dec
push
jnp
cmc
pop
stc
or
adc
jns
nop
int3
or
fwait
roll
scas
xchg
jno
dec
mov
gs
sub
jne
jl
inc
insb
imul
pushf
jle
mov
mov
fxam
sbb
inc
mov
ja
movsl
and
sub
int3
sbb
cmp
mov
mov
push
push
mov
xor
mov
jae
fs
aam
mov
mov
sub
fnstcw
mov
test
insb
adc
mov
mov
mov
or
pusha
pop
cmp
and
cld
cwtl
xchg
leave
or
mov
xor
fsubrp
mov
fimuls
jmp
fdivs
sahf
or
inc
cmp
sub
xchg
mov
mov
out
sti
sub
mov
sbb
cmp
mov
arpl
and
mov
dec
cmp
lea
cli
sbb
lds
jb
xor
mov
dec
sub
push
cmpsb
push
mov
jp
int
push
lods
jp
andl
movsl
inc
lods
int
jecxz
mov
stc
mov
ficompl
push
scas
movsl
lcall
dec
js
je
cwtl
fsubrs
cmp
pusha
jl
xchg
pop
jp
jp
jg
mov
adc
xchg
push
iret
imul
inc
and
xor
pop
cmp
popf
xchg
test
jno
push
cmp
dec
adc
jns
sbb
cltd
leave
mov
sbb
lcall
or
sbb
repz
cmp
or
sbbl
hlt
sbb
fs
aas
lock
rorl
cmp
imul
sub
call
out
xchg
inc
and
fwait
add
in
jbe
xchg
dec
xchg
jnp
inc
dec
clc
xor
icebp
and
mov
mov
sbb
idivb
xchg
and
mov
sub
arpl
cmc
call
mov
cmp
lock
or
push
icebp
cmc
arpl
jl
dec
sti
mov
jecxz
fstpt
add
loope
mov
movsb
push
mov
or
aad
pop
or
lret
fs
push
xlat
negb
lock
lods
test
cwtl
dec
xor
arpl
inc
pop
cmp
jmp
fs
jns
jecxz
mov
xchg
por
and
shl
lods
sub
xchg
and
or
sbb
sub
xor
outsb
inc
aad
jp
jp
fdivp
and
jae
frndint
stos
subb
call
pop
mov
jmp
pop
xchg
pop
lret
notl
xchg
mov
sub
les
out
fldl
pop
imulb
inc
sub
mov
ret
mov
sbb
es
dec
adc
loop
out
xchg
mov
frndint
rorb
shll
mov
sbb
and
xor
jge
cmpsb
inc
mov
mov
push
ret
pop
cmp
xchg
pop
test
bound
in
xlat
lcall
imul
out
xlat
mov
std
mov
arpl
or
xchg
jl
push
jl
cmp
sub
call
cmp
mov
cmp
cli
ss
ficoms
inc
in
sahf
push
and
dec
cmp
lea
loop
testb
pop
sub
and
popf
lods
add
cmpsb
in
cld
pop
inc
and
mov
xor
mov
idivb
sub
xchg
aam
sbb
arpl
out
push
cmpsl
adc
test
in
lcall
push
mov
pop
loope
int3
pop
insl
fiaddl
fisttpl
int
popa
rcrl
cwtl
sbb
push
ficompl
dec
pop
lods
dec
sbb
shlb
pop
push
xlat
dec
jnp
data16
outsb
add
mov
sbb
sbb
in
jno
xor
in
es
jg
adc
lcall
or
or
stos
push
lods
in
xchg
lods
lret
jmp
lcall
xchg
scas
das
sub
sti
mov
dec
sub
fwait
or
sahf
ja
aaa
stos
rcll
test
repnz
or
out
std
cmp
or
pop
cmpsb
lret
mov
int
mov
stc
lcall
jp
dec
loop
push
push
popf
push
inc
jg
xchg
icebp
lret
shl
cmc
jne
inc
jno
push
test
jle
data16
add
ficoml
cwtl
test
jp
test
in
push
les
mov
shl
dec
dec
push
rorb
pop
cmp
mov
mov
jecxz
cmp
gs
loope
rcll
xor
out
bound
imul
movsb
jne
pushf
aam
pop
out
fxch
shlb
into
jmp
fs
inc
dec
cmp
je
adc
dec
xchg
jle
mov
jae
gs
popf
sbb
xor
push
sbb
shll
repnz
add
sbb
dec
sahf
rolb
pop
ficomps
jae
ret
ret
push
andb
or
call
test
add
stos
dec
gs
mov
lcall
cmp
mov
sbb
add
in
dec
push
out
leave
mov
in
popa
rcrb
daa
xchg
mov
xchg
xor
inc
push
mov
sub
jnp
mov
imul
push
out
mov
fistl
jle
sbb
clc
xchg
and
or
ficomps
jns
add
inc
dec
add
pop
insb
and
lret
cli
stos
ds
into
dec
insb
dec
xchg
scas
jnp
xchg
jns
and
add
inc
sbb
jmp
mov
lods
jb
aam
sub
xchg
mov
pop
or
data16
sbb
lds
shrl
cld
jp
or
sarl
add
inc
mov
push
inc
jne
jmp
mov
out
cmp
dec
mull
test
jb
mov
imul
lret
aam
enter
bound
leave
stc
sub
cmpsb
inc
and
mov
mov
scas
sbb
xor
enter
and
mov
int
call
lcall
adc
jl
mov
test
scas
ret
insl
pop
sub
mov
mov
mov
out
aaa
rorl
mov
sbb
int3
mov
cmp
fnstenv
dec
std
push
shrl
rol
dec
and
data16
leave
push
add
out
into
into
adc
pop
out
int3
add
test
repnz
sub
xchg
sbb
mov
movsb
add
lret
aad
jno
maskmovq
testl
jl
test
push
cmp
push
sub
pop
push
test
jns
xchg
cmp
push
push
sahf
stos
shrb
sbb
cs
mov
fwait
mov
aad
loope
mov
or
sbb
xchg
rorl
or
add
push
in
inc
dec
or
sbb
jo
mov
pop
or
cli
cltd
adc
cmp
mov
mov
add
pop
lahf
scas
adc
and
and
xor
xchg
popf
mov
sbbb
xor
or
add
pusha
sbb
sahf
mov
push
push
imul
lock
arpl
push
push
out
xor
push
insb
loope
sub
lahf
ret
add
popf
subb
jmp
idiv
cltd
push
lahf
add
int3
js
lods
das
and
cmpsl
daa
sbb
adc
or
sahf
jl
xor
mov
xchg
push
leave
scas
mov
andl
into
adc
mov
mov
imul
repnz
mov
jo,pt
dec
jecxz
adc
movsl
cmpsb
leave
xchg
popf
and
cmp
les
mov
cmp
add
std
jb
insb
mov
and
stos
mov
mov
sbb
xchg
or
addr16
negl
repz
syscall
out
mov
cmp
sarl
fs
insl
jge
mov
pop
ret
cmpsl
stos
add
shll
mov
ret
mov
into
add
mov
xor
or
arpl
mov
cmp
stos
add
xorb
inc
jb
popf
bound
je
mov
fiadds
mov
fistps
fdivrl
ja
aas
inc
jnp
add
jge
cmp
xor
jo
cmp
ljmp
jmp
int3
shrb
push
jge
into
stos
mov
rorl
test
sub
adc
aam
in
repz
push
sub
mov
adc
dec
adc
or
cwtl
dec
shrl
cmp
sbb
popf
and
add
dec
inc
out
jecxz
xchg
cmp
std
test
and
mov
adcl
call
test
mov
aad
lret
adc
dec
push
or
inc
mov
cld
dec
pop
pop
or
aam
xchg
push
test
stos
imul
lret
pop
adcl
insb
outsb
pop
push
mov
dec
out
sbb
cmp
test
sub
cmp
bound
es
push
push
addr16
xchg
cmp
test
aaa
ljmp
jp
push
jne
cmp
mov
mov
jb
and
push
sahf
scas
fs
add
sub
add
mov
out
jp
mov
ja
dec
dec
fstpt
dec
sub
mov
jae
mov
out
cld
or
aas
jne
dec
jnp
pop
add
test
jno
fidivl
xor
cli
daa
xchg
pop
cld
lea
fnstcw
lahf
mov
notl
shlb
bound
inc
cmp
xchg
push
pushf
mov
faddp
jae
lcall
sub
dec
insl
jg
jmp
dec
cwtl
test
mov
mov
pop
cmp
popf
push
das
push
push
les
add
add
adc
push
pushf
xor
sahf
mov
arpl
mov
inc
add
ljmp
popa
xor
dec
dec
mov
mov
mov
pop
mov
lods
mov
bound
mov
pusha
pushf
mov
push
shlb
or
dec
and
lret
mov
cld
cwtl
in
lock
stc
dec
pushf
pop
movsl
es
arpl
notl
and
adc
mov
jne
je
or
out
jno
into
push
mov
test
repz
in
ficomps
cmpsb
into
into
mov
xor
or
mov
dec
and
sub
mov
pop
pop
add
add
push
lds
das
sbb
push
test
dec
stc
add
push
mov
pop
and
mov
cmp
outsl
pop
xchg
xchg
pop
nop
into
sbb
sbb
hlt
pop
sub
push
jl
push
in
adc
jns
add
aas
insb
int
lahf
or
adc
test
mov
adc
sub
imul
lret
stos
lret
cs
insl
pusha
inc
test
xorb
mov
cmpsb
xchg
xchg
stos
cmp
andl
dec
sbb
loope
mov
inc
add
out
call
jmp
stos
jbe
je
mov
cmp
pop
adc
pop
mov
push
leave
test
add
mov
push
cmc
mov
dec
iret
cmp
mov
fmull
gs
pop
icebp
xchg
les
jno
pop
jb
cmpsb
pop
lcall
jbe
mov
shll
pop
add
mov
adc
bound
pop
mov
inc
fldenv
sbbl
dec
xchg
pop
and
mov
xor
xchg
popa
or
arpl
push
sti
cwtl
stos
arpl
mov
ja
lds
mov
fcmovnu
xchg
xlat
cmp
sbb
mov
pop
cs
ljmp
mov
mov
in
ret
mov
jo
pop
and
mov
xchg
mov
pop
aad
inc
xchg
or
cmp
icebp
pop
imul
xor
adc
dec
popf
adc
scas
and
lds
push
adc
pop
dec
scas
sub
mov
cmc
in
push
mov
and
add
hlt
movsb
jle
das
dec
leave
mov
fadd
pop
rclb
sbb
inc
hlt
xchg
in
or
and
push
jg
or
push
clc
or
loope
fisttps
dec
push
jecxz
adc
mov
sbb
dec
in
mov
int
jge
mov
movsl
sbb
call
out
push
pop
push
aam
pusha
and
repnz
lcall
and
mov
outsl
push
faddl
aaa
fcomip
mov
dec
pop
aas
mov
pop
insb
sub
pop
mov
aaa
repz
cltd
push
push
out
outsl
std
cli
push
lret
pop
outsl
lds
push
cwtl
data16
ficoms
pop
in
mov
rorl
jbe
sarl
mov
pusha
and
mov
mov
into
ds
mov
push
sub
ret
mov
pop
sahf
out
sub
mov
push
dec
testl
mov
xlat
mov
jge
ja
pusha
rcrl
mov
push
xchg
cmp
inc
rorl
and
sahf
loop
fcmovbe
clc
dec
push
ret
sub
jb
or
lds
jae
mov
pop
cmp
and
int
dec
cs
and
dec
sbb
scas
fisttpll
pop
shll
lahf
and
mov
mov
mov
add
std
daa
push
fldt
xor
daa
jl
sahf
adc
nop
rcrb
insb
inc
sub
and
fisubl
sub
rcrl
cmp
xor
mov
mov
imul
repz
lds
out
repnz
data16
or
outsb
push
jb
in
je
repz
test
or
add
cli
icebp
into
shufps
inc
mov
push
mov
lret
lcall
dec
xchg
mov
xchg
test
pop
out
nop
arpl
and
add
inc
out
jbe
xor
mov
sti
mov
fadds
xchg
outsb
jnp
fimuls
adc
xchg
loopne
jl
aas
or
cld
lods
push
lcall
mov
xchg
mov
enter
or
inc
push
sti
lahf
fdivl
frstor
lahf
pop
test
fs
dec
pop
cmp
jg
inc
mov
push
insl
jge
push
adc
dec
cltd
fcmovnbe
aas
jle
lret
adc
bound
add
aam
adc
and
push
pop
cmc
jnp
inc
ret
add
mov
fsubl
mov
jg
pop
xchg
cltd
popf
sub
and
scas
lcall
lds
push
xor
pop
push
cld
filds
push
and
outsl
xorb
xchg
xor
xorb
push
xchg
ljmp
mov
or
prefetcht2
sarl
push
test
stos
popf
aas
gs
call
pop
repnz
cs
mov
xchg
and
in
ficoms
adc
insl
cmp
mov
jnp
fdiv
repz
aad
push
sbbl
out
popf
push
hlt
sahf
fdivrs
popa
mov
mov
xchg
lret
cmc
cmp
pop
dec
mov
lods
into
pop
fs
ds
sbb
leave
xor
xchg
sbb
icebp
pop
icebp
xor
xor
mov
and
popa
outsb
pop
stc
push
xchg
mov
daa
push
xchg
sub
test
scas
iret
in
jno
push
nop
adc
imul
cmc
push
rol
sbb
mov
lods
or
inc
pop
jno
xor
imul
adc
dec
pop
shlb
jl
jo
mov
adc
pop
add
mov
cmp
int
pop
test
sub
lods
clc
mov
add
and
lret
repnz
mov
mov
scas
sub
and
popa
mov
dec
and
or
or
std
shrb
dec
mov
or
push
push
dec
cmpl
rcrl
fistl
add
adc
je,pt
lret
enter
das
push
loopne
ret
test
inc
cmpsl
mov
add
cmp
lret
or
xchg
mov
or
lds
add
jo
adc
sbb
mov
dec
xor
xor
mov
cmp
cmpsb
cli
cmp
loope
and
push
sbb
andl
sbb
mov
lods
lret
jo
push
test
push
push
push
mov
outsl
xchg
shrb
xor
lods
sub
in
sub
in
inc
inc
mov
cmc
mov
xchg
aad
cld
mov
push
dec
lahf
stos
enter
adc
push
pop
mov
jb
ljmp
into
adc
aad
dec
push
loope
cmpsb
sub
mov
fildll
out
subl
xor
push
jo
fists
aas
jp
mov
fwait
push
jb
adc
mov
in
pop
and
dec
jl
shll
adc
mov
cmp
rcll
ljmp
and
stos
mov
push
xchg
dec
xchg
es
nop
mov
and
cmp
repz
mov
inc
mov
into
lods
scas
push
outsb
testb
pop
lods
insl
bound
mov
mov
adc
dec
iret
mov
mov
dec
test
sbb
or
inc
movsl
sub
or
shrb
dec
out
dec
cmpl
fcmovu
lret
hlt
xor
and
cmp
sbb
cmp
out
mov
cmp
dec
loope
mov
sub
imul
cmp
mov
fstps
fsubrl
fmuls
pushf
imul
xor
jo
mov
js
sbb
pop
and
add
imul
or
cmpsl
mov
pop
dec
mov
loop
pushf
out
icebp
dec
dec
fcmovnb
les
and
ss
lock
cmp
jne
ret
sti
ret
push
enter
adc
push
js
xchg
or
dec
in
pop
call
mov
push
dec
leave
xchg
test
or
popl
das
inc
lret
mov
sti
fs
fdivs
shrl
ljmp
fwait
xchg
loop
jbe
push
mov
xchg
mov
and
ss
cmc
in
ljmp
adc
xor
inc
dec
sub
jns
add
sbb
cmp
cltd
fwait
movsl
test
inc
inc
jb
js
push
xor
shl
xchg
jg
in
mov
std
sbb
xor
push
enter
repz
int3
sarb
ds
lret
arpl
insb
jl
flds
fucomip
daa
xlat
sub
in
mov
mov
sahf
push
mov
icebp
jnp
mov
inc
pushl
mov
jbe
sub
xor
ljmp
shlb
frstor
int
mov
scas
stc
mov
inc
lods
pushf
test
add
pop
fists
cmc
cmpb
dec
test
lret
dec
stc
dec
dec
and
pop
xchg
sub
dec
stos
push
shrl
js
dec
test
inc
sub
jge
push
mov
hlt
movsb
mov
out
int
outsb
xor
mov
jnp
gs
popa
dec
or
push
xchg
jg
fldl
jae
mov
test
add
lcall
adc
mov
inc
adc
sbb
and
and
testl
xor
movq
xchg
mov
in
lret
mov
mov
dec
pop
inc
dec
push
mov
fistl
ds
or
xor
aam
mov
or
xchg
ror
lods
cld
lret
mov
mov
dec
sub
adc
inc
ss
scas
dec
sbb
push
push
and
sbb
arpl
ret
dec
movsb
cmpsb
cmp
fstps
adc
fstps
pop
or
add
jae
or
xlat
sub
dec
enter
or
mov
stc
mov
xlat
mov
fldenv
fs
adcb
jne
out
mov
xchg
xchg
mov
xchg
mov
fisttpl
ret
dec
imul
iret
dec
cmp
jno
pushf
lahf
mov
daa
popa
insl
pop
mov
jecxz
lea
xor
mov
aam
and
mov
pop
subl
addr16
aam
mov
testl
imul
in
mov
dec
fcomip
push
sub
and
scas
sbb
or
loop
pushf
mov
jmp
mov
sub
in
add
xchg
sub
cmp
hlt
clc
xchg
cmp
jl
dec
movsl
lods
mov
sbb
mov
dec
pop
lret
testl
test
stc
idiv
sbbb
orb
xchg
lea
add
movsb
jno
dec
aam
cs
sbb
int
pop
mov
mov
jg
xor
jg
inc
dec
aam
cmpsb
rorb
add
sub
sub
xlat
fmuls
xor
pop
shl
mov
mov
addr16
in
sub
push
mov
add
inc
mov
xchg
pop
mov
mov
xlat
xor
iret
in
dec
test
pusha
test
cld
or
pop
shl
xor
mov
fimuls
rcl
out
loop
jo
inc
xchg
inc
or
xor
mov
inc
and
sbb
ret
out
fstpt
ja
mov
jmp
add
and
push
mov
dec
cs
lret
mov
aad
aam
adc
push
or
mov
adc
jo
out
jmp
push
test
fdivrs
lcall
push
jnp
loop
jb
popf
mov
mov
incl
or
jb
mov
push
pop
sbb
ljmp
aad
jno
jecxz
push
test
stc
fdivs
or
insl
enter
sub
xor
icebp
pushf
xchg
xor
insb
inc
jmp
jae
inc
repnz
mov
stc
add
cmpsl
and
pushf
int
add
incb
nop
in
sbbl
dec
sbb
jo
pop
jle
stos
popa
jo
cmpsb
sub
push
rcll
sub
jl
mov
mov
aas
jl
js
ss
jae
pop
dec
xor
cmp
mov
decl
mov
dec
sbb
adc
in
loop
out
out
outsl
fmul
out
or
gs
cwtl
fnstsw
addl
sti
scas
sbb
arpl
push
dec
mov
lret
push
jne
mov
pusha
lea
xchg
arpl
pop
mov
scas
iret
pop
and
shll
push
sub
fimull
out
dec
jmp
or
mov
inc
jbe
mov
inc
xchg
rcll
clc
or
or
jnp
push
pop
fcomps
push
push
mov
inc
in
push
out
lret
mov
xor
or
movsl
cwtl
add
aad
jno
push
mov
lods
adc
xchg
mov
das
or
ss
pop
pop
rcrl
mov
sbb
jle
add
jne
ret
pop
dec
sahf
adc
loopne
movsb
or
nop
imul
inc
imul
aam
cwtl
xlat
jg
push
mov
pop
mov
repz
sub
inc
cmp
stos
test
into
jae
and
mov
fiaddl
lea
xchg
inc
dec
ljmp
jno
pop
xlat
out
push
dec
add
mov
mov
add
push
push
repz
sub
push
aam
xchg
sti
outsb
mov
data16
iret
or
fcoms
testl
loope
push
jl
add
push
adc
sub
jge
out
std
fistpll
cmpsb
pop
es
add
fcmovb
popf
xor
neg
enter
adc
mov
jo
fcmovnb
add
pop
mov
sub
scas
adc
add
fsubs
psrad
add
xchg
xchg
adc
stos
jbe
stos
pop
test
sti
sbb
push
sub
jne
adc
mov
arpl
fisttpl
dec
divl
sub
inc
and
js
daa
jbe
mov
mov
loope
push
xor
bound
xorb
xchg
jbe
test
jg
pop
push
add
test
mov
sub
jg
fnstcw
fstps
scas
jae
movsb
outsl
std
push
ljmp
mov
daa
clc
xchg
enter
fidivs
pop
push
push
shll
or
jo
push
cwtl
arpl
fucomp
shl
hlt
or
pop
jle
dec
popa
xchg
data16
sub
fidivrl
cmc
mov
add
and
leave
or
leave
cmpsb
cli
loop
pop
addr16
sbbb
lahf
sbb
sbb
rclb
cmp
test
push
push
add
bound
sbb
jmp
cld
mov
stc
sar
xor
mov
iret
les
test
and
jno
xchg
cmp
ret
iret
xchg
lock
mov
add
xchg
loopne
aam
jne
sub
pop
mov
pop
push
in
popa
inc
xchg
int
pop
cwtl
lds
add
sub
or
addr16
fists
adc
fldenv
sub
inc
fdivrl
cltd
jbe
push
or
xchg
sub
push
mov
hlt
xor
stos
dec
inc
xchg
add
fmuls
jmp
jmp
mov
inc
daa
and
jmp
xchg
push
mov
repz
mov
ret
enter
push
lods
xchg
inc
std
sbbb
lcall
sahf
xchg
pop
fidivrs
loop
fcomps
xlat
lods
shr
xor
jl
inc
dec
xchg
out
jle
add
sub
adc
lds
stc
ret
repnz
and
bound
cmp
stos
jno
xlat
push
cmp
and
ret
xchg
xchg
jg
fstpt
icebp
jb
repz
xchg
xor
mov
pop
rcll
inc
hlt
stos
test
enter
bound
test
mull
ret
test
bound
test
cmp
fwait
push
hlt
movsl
punpckhdq
addr16
sbb
imul
lcall
sub
push
out
insb
aad
xchg
sub
fwait
adc
insl
jp
pop
jle
das
sub
mov
sbb
dec
sbb
mov
adc
inc
cwtl
cmpsb
iret
cld
stos
ret
push
icebp
xchg
lods
pop
sub
mov
out
and
in
bound
aam
jmp
cmp
dec
or
sbb
or
dec
ljmp
enter
hlt
lret
xchg
jno
faddl
sarb
push
ret
ja
pop
adcb
lahf
repnz
ss
inc
ss
mov
mov
xor
cmpl
loope
and
std
pop
aam
mov
mov
sbb
cltd
aaa
pop
sahf
scas
push
sbbb
movsb
inc
leave
xor
icebp
add
xchg
adc
popf
inc
outsb
imul
pushf
fnsave
bound
and
xlat
aam
adc
fwait
sbb
push
sub
push
shl
imul
lret
std
aas
js
xchg
ficompl
jae
adcl
loop
int
jmp
stos
lret
icebp
cltd
push
or
sub
or
mov
mov
in
addl
sbb
insl
loop
sti
jbe
inc
sub
dec
ljmp
test
cs
fsubrs
inc
cmpsb
sub
out
push
push
sti
repnz
in
cli
xchg
scas
add
les
arpl
leave
mov
dec
out
loope
jns
mov
ljmp
mov
sub
push
mov
inc
add
sbb
cs
movsl
inc
lcall
call
cmp
test
in
pushf
dec
stos
faddp
xchg
stos
out
fcmovnb
popf
adc
js
jns
aad
add
inc
inc
or
inc
lret
roll
ljmp
mov
jne
adc
jmp
or
adc
jae
outsl
pop
or
out
fs
sarb
mov
std
addl
bound
adc
sbb
movsb
scas
mov
dec
pop
dec
leave
dec
divb
cwtl
sahf
mov
or
mov
int3
lods
mov
jbe
mov
cmp
sbb
push
psubd
pop
or
shl
lcall
cwtl
xor
shl
pop
or
sub
fs
pop
push
adc
int
int
mov
jns
movnti
arpl
ret
ret
cmp
cmp
je
enter
fsubs
mov
sub
inc
js
cwtl
or
leave
sbb
mov
mov
out
mov
adc
mov
or
scas
pop
pop
bound
mov
mov
dec
and
test
into
test
cmp
jns
mov
xchg
dec
and
and
mov
jecxz
cmpsb
outsl
sub
adc
incb
mov
aad
adc
lret
out
add
add
add
pop
popa
and
sub
mov
xor
sub
cli
jl
mov
push
adc
jne
sarl
daa
pop
sarb
sbb
or
or
jg
xchg
aam
pop
jbe
dec
test
add
addr16
test
mov
aaa
or
jbe
jb
xchg
lods
andl
mov
adc
cmc
imul
call
jle
lcall
test
fld
mov
jb
cmpsb
lret
lock
pop
adc
mov
dec
cwtl
mov
jnp
ficoms
mov
addr16
shlb
popa
inc
std
inc
movsb
sub
js
lea
movsl
movsl
je
leave
in
jae
push
pop
cltd
or
ljmp
mov
not
mov
sbb
xchg
or
out
add
das
scas
scas
lcall
ficoms
je
xchg
ss
dec
insl
pop
sbb
call
xchg
cs
push
mov
lods
xchg
mov
mov
ret
addb
push
push
int3
pusha
add
and
cli
icebp
scas
add
out
stc
sarb
or
push
cvtps2pi
popf
add
outsl
xchg
inc
jno
ficompl
imul
shll
mov
sbb
push
dec
mov
and
inc
mov
scas
add
dec
mov
test
mov
mov
fstl
sbb
and
mov
cld
push
xchg
xchg
cmp
inc
adc
aam
data16
sbb
lods
xchg
and
and
push
or
cwtl
xchg
push
mov
bound
xor
cmpsl
mov
and
and
lret
std
jae
push
cmp
pop
in
jne
xchg
or
sarb
fadds
adc
adc
adc
fistpll
and
in
in
mull
mov
jns
pop
pop
es
cmp
outsl
pop
sahf
jbe
sti
popa
mov
enter
jl
lret
cmc
repnz
int
fildl
stc
movsl
loopne
xor
adc
dec
sub
aas
mov
or
xor
dec
pop
push
and
jns
mov
pop
add
test
sub
mov
jmp
aad
cli
cmp
aas
loopne
mov
jb
sub
push
xor
out
dec
js
stos
sbb
push
jnp
pop
xchg
xchg
sub
aad
repz
inc
xor
daa
addb
jp
rcr
sbb
mov
out
xlat
sbb
add
push
xchg
or
lea
and
mov
imul
cld
pop
scas
sub
fwait
mov
mov
sbb
sahf
cmp
inc
ret
bound
aad
popf
or
adc
mov
icebp
xchg
fildll
outsl
lret
push
das
mov
int3
pop
adcb
jp
pop
mov
mov
fwait
sti
xor
test
loopne
scas
sub
add
sub
movsl
int
add
mov
adc
xchg
fmuls
sub
xlat
pop
dec
outsl
and
pop
pop
lcall
rcll
adc
and
aam
cmpsb
jl
inc
and
mov
scas
insb
into
cmp
jle
jo
or
shll
ja
js
fsub
or
push
fsubl
in
mov
fnstsw
and
rorb
and
movl
fiaddl
xor
cwtl
roll
mov
ret
mov
xor
sub
xor
cli
imul
movb
es
pop
call
and
jge
mov
icebp
push
push
mov
rolb
test
iret
test
xor
adc
cli
cmp
add
mov
inc
lcall
inc
sar
inc
gs
push
lahf
adc
jmp
stos
icebp
cmp
dec
mov
fmuls
pop
arpl
ja
jecxz
std
xchg
dec
and
xchg
addb
xlat
xor
mov
mov
pop
adc
in
popa
inc
pop
xor
scas
sub
cmp
pop
jno
aad
test
out
mov
loope
std
insb
push
xor
sbb
sbb
cmp
fisttpl
mov
sti
cld
adc
jns
and
ljmp
sbb
adc
sti
dec
movsb
dec
pop
movsb
aas
xchg
add
popa
shlb
ja
movsb
pop
xor
pop
addr16
xor
call
jo
dec
push
mov
sbb
add
loope
add
jle
leave
jle
std
hlt
dec
mov
sbb
mov
and
outsl
mov
hlt
sbb
stc
and
adc
xor
ja
mov
push
mov
push
ja
test
push
dec
test
lret
cmp
lret
out
ret
pushf
adc
inc
pmulhuw
cmp
and
jnp
es
and
push
insl
imul
mov
adc
cmpsl
popf
push
popf
mov
jne
inc
out
loop
js
jp
jge
shrb
xchg
lock
mov
xchg
cmp
mov
xchg
xor
sahf
fcmovu
add
push
mov
adc
shrl
das
mov
push
inc
push
mov
test
out
out
ret
mov
lods
shlb
adcl
ss
mov
insb
stc
lock
fwait
dec
cmc
jae
mov
mov
imul
sub
adc
jbe
gs
cmp
fbld
lret
sub
test
jmp
je
mov
inc
adc
sub
insl
ret
inc
out
aaa
xchg
sub
loopne
bnd
sahf
push
leave
outsb
mov
dec
adc
mov
xor
xor
adc
test
inc
pusha
jae
mov
inc
pop
jnp
scas
movsb
pop
jo
ds
adc
test
test
and
ja
pop
out
arpl
mov
aad
push
iret
cltd
mov
cmp
test
fdivr
in
mov
mov
mov
push
es
cmpsb
cmp
xor
xchg
inc
out
inc
and
add
mov
pop
in
mov
xchg
in
jle
cmp
xchg
cmp
pop
xchg
xor
xor
pop
mov
jmp
out
in
jecxz
sbb
cs
xchg
pushf
xor
dec
inc
shll
adc
filds
sub
enter
pop
fcom
repnz
movsb
add
aam
fmuls
or
imul
test
jp
jnp
bound
cmp
lock
aad
ret
cmp
loope
sub
sbb
sbb
lahf
sub
lock
jl
inc
xchg
cld
sbb
cmp
aaa
push
sub
test
das
shlb
cmpsl
xlat
or
add
ret
out
aam
mov
xor
add
sahf
mov
push
sub
rep
jb
je
pop
xchg
ror
sar
fcompl
cmpsl
fisttpl
cwtl
sub
into
ds
adc
out
push
inc
in
lret
stos
cmp
mov
js
xor
imul
jge
movsb
mov
sub
fidivs
xchg
jne
lds
jl
mov
push
xchg
gs
push
add
lahf
cwtl
fidivs
lret
mov
jmp
sbb
test
and
push
inc
andb
lret
sbb
pop
adc
imul
mov
mov
jp
lock
xchg
and
xchg
add
outsb
loop
jno
lods
mov
mov
push
mov
add
jb
jle
fcoms
shlb
mov
cmp
lds
and
push
xlat
mov
cmc
inc
inc
xchg
sub
scas
rorb
rorb
mov
std
repz
out
fsubp
cwtl
push
push
pop
mov
push
ret
mov
mov
inc
push
dec
pusha
inc
add
sub
dec
sub
dec
andb
neg
nopl
inc
mov
cmp
sar
cmp
push
iret
imul
push
push
xchg
push
jge
cld
jae
bound
ja
test
stc
pusha
adc
stos
cmpsb
pop
testl
xchg
mov
out
jo
pop
dec
rcl
dec
mov
push
mov
mov
jp
xor
dec
push
cs
mov
inc
jne
sti
notb
cwtl
idivl
cld
pop
jmp
push
or
mov
int3
mov
fstpl
je
ja
test
test
lods
xchg
dec
xchg
std
and
rcl
fiadds
aas
ds
shl
sub
mov
xor
pop
inc
int
cmpsl
and
mov
inc
cmpl
cmp
popf
push
add
enter
in
or
and
popf
imul
and
std
cmpsb
pop
adc
mul
fmul
js
jno
jns
int
rolb
movsl
lahf
xor
aad
shll
push
sbb
sbb
shrb
test
xchg
sarl
mul
faddl
shlb
flds
jae
dec
adc
outsb
dec
decb
out
or
les
stos
sub
jg
lds
push
lods
push
pop
ds
xor
mov
je
inc
iret
xor
jmp
hlt
rcll
out
pop
xchg
push
fstpt
and
popa
dec
enter
cmp
pop
inc
jle
mov
xchg
mov
dec
pop
test
cmp
mov
sub
fs
inc
insl
mov
dec
daa
sub
xor
xor
in
test
daa
mov
sub
push
jae
test
push
mov
mov
xor
popa
daa
clc
jo
mov
push
push
rep
push
jmp
popf
pop
fisttps
pop
cmpsb
dec
outsl
sub
pop
add
mov
lea
add
popf
mov
xor
int
cld
lock
add
pop
mov
mov
sbb
les
push
testb
addb
xchg
xchg
or
into
insb
xlat
divl
push
pop
and
fildl
mov
xchg
mov
dec
aam
aaa
and
es
cli
in
sbb
cmpsb
int
test
stc
and
fcmovu
push
fidivrs
aad
lcall
xor
popa
cmpsb
sahf
jg
in
enter
cwtl
movsl
cmp
adc
push
test
inc
jmp
test
sub
hlt
jns
popa
icebp
inc
and
out
jmp
inc
ja
sub
sahf
daa
addb
push
fnstsw
and
aad
insb
mov
daa
lods
sub
loope
sbb
push
mov
lret
and
sub
gs
repz
in
adc
dec
inc
adc
iret
cmp
mov
icebp
out
popf
xchg
sbb
js
jnp
sub
or
lds
stos
cwtl
sub
lods
sti
mov
out
inc
insb
sub
add
fldenv
xor
mov
or
or
mov
push
pop
sahf
mov
mov
out
sbb
cmpsb
mov
mov
sbb
rolb
fucomi
pop
dec
mov
push
jno
test
data16
dec
jnp
jge
mov
dec
push
gs
pop
pop
insl
nop
imul
or
testl
xor
cmpsl
mov
jg
pushf
incl
lret
cmp
push
xor
loopne
mov
and
inc
mov
push
in
sbb
xchg
and
mov
mov
xchg
adcb
xchg
push
and
inc
dec
mov
cwtl
pop
ljmp
es
movsb
pop
push
bswap
pop
pop
cltd
pop
adc
iret
pop
or
jg
push
dec
fldcw
adc
cmp
subb
mov
cltd
fcoms
cli
mov
pusha
imul
push
call
fstl
xor
push
mov
mov
ljmp
out
and
jmp
pushf
push
and
xchg
call
repz
dec
jmp
call
daa
cwtl
pop
add
lret
cmpb
int
xchg
xchg
and
push
pop
out
daa
xchg
out
cmp
xchg
mov
add
add
mov
enter
jge
mov
std
shrb
lea
cli
xchg
pop
cmc
jg
dec
fistpll
test
ds
cmp
xor
add
jmp
in
inc
dec
or
or
imul
int3
shlb
popf
sub
pop
jmp
arpl
test
test
pop
movsb
xchg
loope
mov
fisttpll
adc
cmp
ret
fistpll
cltd
mov
xor
sub
and
hlt
mov
push
lret
test
jp
jb
mov
or
add
mov
inc
daa
sbb
in
je
push
lret
test
mov
push
push
adc
fildll
jae
mov
or
lods
shr
cmc
mov
clc
pop
or
popa
xor
idivb
mov
jne
inc
sahf
fwait
add
jp
scas
mov
mov
xor
xchg
ret
push
outsb
inc
pop
vpunpckhbw
add
out
jl
aad
mov
cmp
ja
ljmp
add
imul
lret
mov
adc
or
hlt
dec
fdivr
cmp
pop
shr
es
fdivs
in
stc
jg
fwait
jnp
mov
and
push
loopne
or
insl
sbb
mov
lahf
in
cmp
ficoms
push
subl
fcomp
aad
cmpsb
or
roll
xchg
stc
pop
push
mov
pusha
into
push
and
aas
mov
orb
add
cwtl
xchg
sub
push
xor
sub
pop
mov
mov
mov
pop
lcall
movsb
xchg
mov
js
lods
mov
sbbb
ret
push
xlat
dec
fnstsw
lds
inc
test
sub
out
jmp
sbb
mulb
and
and
leave
ss
lcall
jmp
and
int
imul
xor
das
lret
xchg
ret
jb
xchg
addr16
cli
sub
rolb
ret
vpsubb
lcall
add
sub
decl
sti
loopne
pusha
xchg
or
shr
pop
or
push
cmpps
orl
jnp
xor
jmp
dec
jg
hlt
bound
imul
data16
push
pushf
cmpsl
sahf
flds
mov
push
xor
outsb
and
lcall
mov
movsl
xchg
int3
sets
out
rcrl
pop
aam
test
mov
xchg
pushl
mov
mov
sub
jbe
out
cltd
outsl
inc
sbb
mov
loope
push
test
dec
subl
es
dec
fnstcw
dec
in
std
fiadds
add
daa
aam
pushf
sti
xor
pop
inc
stc
or
das
adc
xor
iret
mov
cmpsl
jp
ja
xchg
push
enter
clc
clc
push
test
adc
fbld
rorb
lds
cmp
mov
and
test
add
mov
popa
jmp
sbb
cld
ficomps
xchg
std
loope
out
stc
insl
inc
cwtl
out
push
in
xchg
lods
je
pusha
lods
xor
add
push
lret
repz
shrl
jae
cld
lret
xchg
mov
repz
insl
popf
dec
mov
fisttpll
movsb
test
inc
sbb
mov
dec
lods
pop
push
sbb
cmp
cld
lods
cltd
pusha
lret
xchg
out
mov
pushf
rcrl
bswap
adc
inc
xchg
subb
jnp
inc
push
mov
test
or
dec
ss
jge
test
orb
jp
lret
pop
sahf
and
mov
push
fs
inc
push
or
jo
mov
sahf
pop
and
je
mov
jno
rcrl
xchg
xor
lods
or
fisttps
jecxz
pop
loop
xchg
sub
sub
add
push
add
xor
in
mov
imul
mov
rcrb
cmpsl
sar
pop
aam
outsb
mov
int
adc
lahf
cmp
mov
or
in
jo
mov
pop
jne
add
fwait
std
xchg
inc
jno
cs
inc
xor
fmuls
adc
cltd
andb
and
je
ds
xchg
test
ret
rorb
dec
lahf
sub
ret
mov
mov
cltd
adc
mov
lods
sbb
cmp
outsb
loop
addr16
je
mov
mov
cmpsl
sbb
mov
push
push
jle
imul
sub
repnz
push
mov
scas
push
mov
adc
dec
pop
push
dec
mov
movl
ds
in
lods
mov
call
add
mov
shr
enter
out
xor
dec
jae
dec
adc
ljmp
shrl
xchg
sub
mov
gs
push
in
mov
lret
clc
and
into
jecxz
data16
and
adc
mov
ljmp
dec
movsb
sbb
dec
call
sub
xor
ds
or
js
adc
enter
idivl
mov
insl
and
ja
aaa
jo
movb
sbbl
les
pop
pusha
add
in
mov
gs
ret
adc
push
lea
mov
pop
pop
imul
sahf
ret
adc
jo
stc
add
imul
cltd
rcrb
addr16
sub
int3
or
mov
cmc
or
cmp
mov
adc
or
icebp
cld
ds
lock
int
enter
bound
sub
cld
jmp
gs
movsb
or
pop
pusha
aam
insb
jbe
lret
popf
lret
pop
sub
mov
mov
scas
jno
sbb
xchg
cmp
rcr
stos
mov
popf
lods
mov
or
mov
mov
out
mov
sbb
ret
es
pusha
imul
les
push
in
adc
dec
insl
hlt
js
or
imul
clc
outsl
dec
cmp
insl
sarl
adc
movsb
xorb
les
insl
scas
ret
enter
icebp
imul
sub
cwtl
imul
add
mov
fxam
adc
xor
or
fldl
fwait
insl
or
mov
push
addb
xor
in
add
mov
stos
loop
cmp
add
adc
xor
dec
aad
test
aaa
popa
out
icebp
jne
xor
xchg
lods
leave
lahf
and
jns
and
sbb
pop
xor
pop
mov
imul
cmp
outsb
xchg
sub
inc
enter
inc
pop
adc
dec
pop
icebp
shll
jne
mov
push
iret
jecxz
or
xor
out
dec
stos
add
mov
pop
inc
out
inc
dec
lock
fdivrs
or
ja
mov
mov
pop
orl
dec
bound
xlat
mov
lods
inc
outsl
mov
jb
int3
xor
dec
fcomps
xor
mov
pop
ds
daa
test
push
stos
or
ret
sahf
cmp
and
jmp
jecxz
test
dec
add
repnz
xchg
lret
stos
icebp
add
mov
push
adc
movsl
jo
outsl
sbb
scas
icebp
out
mov
stc
mov
jae
fdivl
test
and
jbe
inc
push
jno
ret
into
popf
xchg
fcomps
ds
cmp
push
xor
lods
jl
push
pop
push
inc
mov
in
repnz
pop
push
dec
adc
sub
addr16
fidivs
sub
push
fdivl
sub
jno
into
int3
clc
clc
push
movsl
hlt
push
sbb
push
jg
cmpsb
pop
mov
mov
data16
daa
ffreep
push
xor
scas
testl
push
into
xor
aad
and
jnp
sbb
jbe
dec
mov
add
or
filds
mov
mov
repnz
inc
sahf
mov
mov
sub
pop
cmp
ss
inc
es
movsb
cmp
lahf
push
pusha
stos
int3
cmp
popf
in
push
push
movsl
mov
xchg
les
inc
sbb
push
add
in
or
insl
push
fmuls
rcrl
xchg
test
xor
rorl
push
call
lcall
ret
cmp
pop
sub
adc
cltd
xchg
das
or
sub
aad
js
mov
cmpsl
mov
jge
dec
dec
jnp
cwtl
scas
push
xchg
xor
sti
movsl
and
pop
flds
enter
cmpl
xchg
lret
shll
inc
push
es
sti
pop
xor
mov
mov
add
stos
pop
inc
mov
adc
xchg
adc
mov
sub
xorl
mov
jae
xor
xor
inc
ficomps
inc
mov
xchg
std
rorl
pop
jb
into
sti
and
cs
and
or
loop
out
lret
dec
push
aad
pop
cmp
loopne
inc
aad
aad
push
sub
inc
or
cld
lock
mov
adcb
push
into
cmpsl
mov
ja
xor
loopne
jp
pop
mov
in
or
test
and
xchg
mov
dec
jne
or
cld
out
std
add
inc
shrl
outsb
pop
insl
test
stos
mov
push
sub
es
add
pop
sbb
aas
cmp
xchg
loop
mov
bound
outsl
jns
mov
inc
and
in
adc
add
les
fnstenv
xchg
pop
sbb
ds
pop
pusha
int
sbb
xor
inc
and
lret
rorb
xlat
sahf
shlb
push
cmp
dec
in
outsb
loop
aaa
xor
push
fwait
cli
sarl
sarl
insl
xchg
cli
in
in
lret
xor
and
xor
clc
push
mov
dec
scas
and
in
inc
adc
cmp
sti
mov
mov
movsl
fsubrs
jecxz
mov
xchg
push
sub
inc
mov
fnstcw
jne
inc
jno
cmpsl
int3
ljmp
sub
add
sub
and
pop
mov
push
hlt
push
fwait
push
cs
xchg
sub
rcrb
mov
push
cmp
mov
fistps
push
adc
and
or
shr
push
movsb
mov
aaa
lret
test
enter
add
push
and
js
mov
roll
xchg
lea
adc
xchg
gs
cmpsl
out
push
inc
jecxz
xor
mov
pop
arpl
aaa
or
imul
sub
imul
lahf
sub
out
xor
cwtl
mov
lret
adc
mov
cmp
mov
push
lcall
push
out
and
jle
dec
pop
mov
inc
pop
dec
loopne
pop
ja
pop
ss
cmp
mov
mov
jg
jmp
fimull
hlt
cld
cmc
sahf
xchg
pop
in
push
push
mov
stc
lods
fs
rcl
lahf
push
xchg
mov
xchg
hlt
stos
sbbb
call
push
jle
sub
sub
cmp
sub
lret
cltd
and
scas
sahf
xchg
pusha
bound
stc
pop
outsl
dec
mov
inc
push
xchg
add
mov
lcall
inc
in
inc
dec
xor
cmp
xor
xchg
push
mov
xchg
aam
sbb
or
add
or
adc
fwait
test
movsl
mov
mov
pop
popa
movsl
push
and
imul
xchg
mov
icebp
test
cmpsb
js
pop
leave
cmp
mov
sbb
cmp
icebp
in
roll
adc
sbb
lods
cwtl
xchg
out
sub
dec
or
testl
js
fwait
movnti
jnp
cmpsl
dec
cmpsl
pushf
insl
shlw
es
dec
mov
inc
dec
rcrb
iret
jg
loopne
adcb
sbb
sub
jge
rol
int
mov
xor
dec
cmp
xchg
insl
mov
popa
sub
jp
jno
sarl
test
dec
push
mov
mov
addr16
cltd
jecxz
push
adc
std
mov
rorb
out
push
ret
or
ss
add
jl
inc
in
pushf
inc
aaa
mov
lds
xchg
hlt
ja
add
sbb
das
inc
dec
cmpsl
pop
and
sub
add
dec
pushf
push
int
jns
sub
mov
add
inc
imul
mov
lds
pop
pop
sbb
stos
jmp
add
mov
stos
test
cld
adc
xor
push
xor
stos
cmp
aaa
inc
xor
cli
sbb
inc
push
jle
clc
and
cmpsb
cmpsb
ja
les
int3
xchg
outsl
sbb
mov
andb
sbb
add
cmpsb
js
or
add
in
mov
test
jbe
inc
insb
daa
dec
out
and
pop
pop
inc
mov
pop
daa
out
xchg
or
pop
out
jp
xchg
lcall
xchg
ss
xor
mov
mov
lods
cmp
lret
and
iret
cld
cmpsb
pop
repnz
push
shrl
adc
roll
les
push
lea
jmp
xchg
adc
mov
xor
lret
orb
outsb
fucompp
dec
cmp
mov
cmp
xchg
ret
scas
cs
pushf
in
imul
fcoms
outsl
mov
cli
pushw
lods
adc
push
pop
outsb
xchg
dec
arpl
mov
add
ficoms
sub
into
rolb
jle
add
and
std
std
out
mov
fisubrs
push
rcrl
cmp
das
sahf
or
xorl
fdivrp
xor
mov
add
xchg
mov
cmp
sbb
push
testl
int
cmc
cmpsl
cmp
dec
or
test
inc
jns
and
mov
mov
xchg
incb
pop
cld
jecxz
push
xchg
dec
mov
stc
push
xor
dec
push
icebp
pop
test
push
lcall
sub
lret
and
pop
ljmp
inc
into
dec
or
dec
xlat
xchg
std
and
adcb
es
insb
mov
add
aaa
sbb
push
in
pop
mull
test
adc
push
ret
imul
adc
jp
sub
aaa
jo
je
push
cmp
pop
jp
pop
cltd
jno
jmp
mov
xor
sbb
js
cmp
nop
dec
in
call
dec
and
jb
popa
out
cmp
or
test
xor
movsl
inc
mov
loopne
sbbl
jle
in
aaa
pop
inc
mov
push
inc
cltd
mov
leave
push
in
jl
push
loope
shll
cli
cmp
mov
dec
mov
cld
mov
cld
pushf
xchg
or
mov
sub
fcoms
lock
outsb
cmp
test
clc
gs
sbb
sbb
sub
jg
inc
loopne
mov
xor
std
cli
cmpsb
test
mov
stos
shlb
and
or
jg
sbb
sti
dec
lret
int3
pop
pop
fistpll
les
test
add
dec
stos
std
mov
rolb
xor
int
push
cmp
mov
mov
add
mov
mov
shl
add
pop
repnz
imul
jle
sbb
xor
pop
or
cmp
cmp
dec
jp
mov
or
insl
mov
bound
lods
dec
push
cs
sbb
arpl
stos
adc
ljmp
dec
js
xchg
push
or
clc
mov
sub
sub
lods
jg
push
aaa
out
sti
pop
les
mov
jb
in
aam
mov
popa
les
mov
inc
cs
call
mov
fs
pop
sbb
jmp
sti
sub
dec
mov
mov
sti
sti
popa
sub
mov
mov
imul
divb
test
xchg
int
mov
stos
pop
adc
pusha
xor
rcrl
pop
ja
pop
push
lea
mov
gs
stos
sub
mov
rclb
add
push
jns
mov
int
jno
dec
xor
sbb
mov
add
dec
aas
sahf
mov
push
inc
out
push
add
mov
xchg
mov
mov
sarb
dec
lcall
pop
mov
rcll
mov
inc
dec
mov
lods
inc
mov
mov
sti
jo
stc
jg
cmp
fisubs
mov
fldl
ljmp
imul
fldenv
jg
mov
sub
hlt
add
imul
fildl
mov
ffreep
bound
mov
cmp
ret
scas
fildl
adc
mov
loopne
mov
cmpsb
xor
std
cmp
or
xor
add
or
dec
add
mov
mov
add
xchg
push
je
add
and
dec
movsl
push
cmpsl
std
movsb
ja
loop
inc
cmc
adc
jns
pushf
push
bound
scas
notl
cmp
movsb
mov
xor
hlt
mov
and
jl
rorb
lahf
sahf
mov
dec
cs
or
xor
scas
add
mov
cmc
shrl
mov
cmp
adc
aad
pop
ss
inc
mov
mov
xchg
xor
out
xorb
cld
mov
push
out
aaa
out
sbb
push
pop
arpl
lret
jp
pop
lock
jne
lret
sbb
pop
nop
int
push
sub
stos
push
jo
dec
mov
add
inc
sbb
dec
mov
daa
push
fadd
xor
fsts
and
loop
dec
fs
jmp
push
pop
cmp
ds
mov
cmc
dec
loop
vcomiss
sbb
fcmove
pop
arpl
imul
adc
fbstp
out
scas
and
push
insb
cmpsb
mov
aas
divl
adc
testl
mov
or
lods
xor
xchg
mov
mulb
mov
imul
test
xchg
jmp
mov
sub
loopne
arpl
fdivrl
aaa
fisttps
sbb
fidivl
sub
dec
xchg
dec
sub
cmp
fwait
and
aad
or
int3
cs
das
sbb
into
dec
cmpl
int
jg
or
push
jno
call
inc
inc
inc
test
pop
pushf
dec
or
dec
jle
mov
bnd
in
inc
push
ret
mov
negb
mov
leave
int3
je
popl
xchg
nop
les
in
rcll
inc
in
push
jg
adc
lock
adc
mov
pop
mov
jne
sub
lds
push
sbb
dec
iret
int3
ret
cwtl
repnz
adc
in
or
or
or
aad
icebp
les
iret
movsb
lea
fidivrs
clc
loope
outsb
cli
popa
cmp
dec
cltd
sahf
cmp
mov
stos
ss
pop
int3
pop
in
lods
bound
xor
push
add
es
sub
dec
jbe
ret
inc
pop
xor
mov
cs
and
les
sbb
pop
js
int3
out
ret
inc
mov
pop
mov
rcrb
sub
mov
push
rcrl
adc
lods
xchg
xor
xchg
xor
test
stos
daa
xchg
test
cmp
pop
and
inc
cmpsl
popf
test
dec
xor
mov
adc
mov
ret
cmp
sub
xchg
cli
mov
mov
jg
cmc
push
inc
icebp
mov
sti
jl
mov
jns
push
xor
xor
cmp
je
dec
sbb
add
mov
mov
cs
cmp
rcr
sub
into
aad
rcrb
es
fstp
jmp
es
xchg
test
sbb
mov
testb
lock
sarb
pop
out
clc
mov
dec
mov
xor
iret
arpl
jo
jnp
jo
out
pop
xor
or
push
xor
js
movsb
pop
rcrb
ss
jl
fs
and
push
push
pushf
negb
jle
cmp
hlt
inc
adc
jp
and
push
mov
rorl
dec
cmp
or
ret
mov
out
fbld
mov
lahf
mov
mov
xchg
sbb
shll
lea
test
push
and
mov
push
std
and
adc
or
jle
mov
data16
adc
cli
mov
aam
mov
pop
xlat
jp
daa
insb
or
sub
mov
jmp
mov
loope
and
lcall
mov
xor
pop
mov
shrl
mov
scas
into
or
push
xchg
loopne
pop
popa
push
or
sbb
xchg
xor
shl
push
mov
pushf
lds
mov
and
out
mov
popa
int
adc
rol
xor
fisubrs
mov
dec
fists
aad
je
cmp
mov
ss
lock
inc
and
lock
jo
sub
loopne
mov
divb
inc
and
mov
js
leave
fiadds
pop
fsubrl
call
sbb
daa
push
sub
and
or
pop
mov
cmp
aas
push
jecxz
cmp
shr
insl
inc
dec
mov
and
flds
mov
popa
xchg
adc
cmp
xchg
decb
outsb
push
adc
mov
jg
js
rorl
call
xchg
add
ja
adc
push
push
bound
test
ds
jecxz
loope
mov
in
out
dec
pop
mov
sbb
rcrb
loope
or
loop
or
inc
ret
sub
mov
loopne
push
add
ret
test
lcall
shr
je
test
subb
mov
xlat
jne
pop
add
je
in
jae
imul
leave
jmp
adc
adc
pop
pop
scas
lahf
sbb
ja
test
shlb
lret
inc
mov
out
jae
sub
jnp
push
mov
test
lods
mov
ror
cld
mov
mov
int3
dec
jo
xchg
xchg
or
test
jb
sbb
mov
sub
add
dec
rep
fnsave
stos
or
inc
or
loop
leave
lea
lea
lock
adc
pop
std
pop
mov
sbb
rorl
mov
jge
vprotb
pushf
fistl
xchg
addl
iret
add
out
mulb
adc
ljmp
loopne
loopne
lret
xor
mov
mov
adc
push
aad
loop
idivb
and
jo
cmp
stos
or
cmc
imul
pop
das
fisttps
andb
fildl
out
outsb
inc
inc
xchg
aam
inc
mov
push
out
cmp
inc
shrl
cmp
inc
inc
mov
xor
lods
imul
mov
pop
add
test
or
mov
fcompl
test
ja
xor
sub
push
in
aaa
sbb
repnz
pop
xchg
mov
test
mov
daa
push
dec
mov
mov
sub
cmp
test
in
shlb
or
push
xor
sub
push
mov
add
movsb
enter
lods
inc
xor
mov
mov
pushl
inc
push
push
push
sbb
mov
dec
cs
bound
insb
fisttpll
subl
mov
lea
xor
lcall
js
sub
test
cmp
cmp
dec
jp
out
orb
sub
scas
gs
shll
jb
or
stos
gs
nop
fisubl
scas
mov
or
daa
gs
enter
lds
lea
adc
inc
or
ss
inc
add
fadd
sbb
enter
cmpsb
jp,pt
mov
rcrb
icebp
ja
sub
shrl
jae
fmuls
test
mov
xchg
fsubl
pop
repz
jmp
sahf
jge
js
orl
xchg
push
loop
mov
sbb
and
push
push
mov
in
inc
sub
popa
imul
outsb
fistl
cwtl
xchg
add
xor
es
push
dec
dec
jp
xchg
sbb
cmp
xchg
and
repnz
lahf
mov
push
or
xorl
cmpl
xchg
jbe
ja
push
rol
ret
fcomp
xchg
fildll
push
repnz
es
mov
rcll
mov
push
add
aad
push
outsl
push
pop
fisubl
fsubs
mov
and
pop
call
and
jb
in
pop
orl
sub
out
adcl
mov
stc
test
loopne
mov
outsl
lods
out
xor
push
jne
lods
shlb
scas
and
int
xlat
js
outsb
pop
push
sbbb
stos
aas
cmp
lahf
aad
xchg
xor
addr16
ds
int3
aam
push
cmp
ljmp
cli
stos
mov
or
mov
pop
sub
or
push
add
scas
lods
dec
mov
fdivr
fistl
repnz
les
dec
xchg
insb
lock
test
fnstsw
out
jmp
daa
fldt
inc
sub
fwait
inc
inc
fstpl
outsl
fwait
sbb
mov
xor
dec
das
push
pop
and
movsb
fsts
test
add
repz
int3
imul
lcall
xchg
rorl
jl
std
or
adc
xchg
jmp
arpl
sub
sahf
cmp
push
mov
lds
fisubl
mov
enter
mov
xor
shl
outsl
push
mov
ss
movsl
loope
int
add
mov
or
sub
pop
push
movsb
sbb
int3
andl
popa
xlat
mov
dec
add
iret
rsqrtps
mov
ficompl
mov
mov
sbb
mov
or
dec
mov
adc
ret
jmp
shld
scas
and
in
cmpsl
out
shl
sbb
mov
adcl
adc
mov
repnz
sbb
mov
inc
aam
and
mov
push
sahf
mov
or
mov
jge
dec
ja
outsl
ja
jp
mov
xor
push
pop
lea
iret
out
das
inc
mov
and
sbb
jno
std
fisttpl
xchg
fucom
orb
cltd
or
sbb
icebp
dec
dec
add
fsubr
out
adc
roll
dec
lods
fcmovu
ret
adc
jecxz
dec
rorl
leave
jb
sbb
imulb
scas
dec
mov
cmc
shrb
cmp
sbb
push
sti
sbb
pop
in
push
jg
push
rorb
lods
and
sub
mov
enter
test
lret
lcall
in
mov
dec
mov
mov
in
fucomp
iret
and
fcmovb
pop
call
mov
addr16
fcmove
jnp
imul
ds
mov
rcrb
xlat
push
cmp
push
sub
mov
adc
hlt
push
lock
lret
insb
xor
repnz
call
cmp
fsubrl
das
shl
daa
dec
sub
push
loope
xchg
int3
sti
add
pop
push
mov
jne
cmpsb
bound
daa
push
imul
adc
cmc
mov
js
cwtl
jle
pushf
in
in
fildll
nop
mov
enter
sbb
jnp
and
pop
pop
add
pushf
xor
jno
xlat
mov
insl
sbb
jne
mov
xlat
cli
fcompl
xor
fwait
add
mov
fadd
int3
lea
ss
sub
repz
mov
jae
jle
icebp
mulb
xchg
mov
push
imul
add
pop
and
dec
jnp
sub
xor
sub
nop
add
aas
bound
xor
mov
leave
mov
hlt
inc
psubd
mov
mov
hlt
mov
or
xor
or
xor
cmp
in
andb
iret
pop
and
arpl
inc
js
xor
clc
pop
mov
cmp
lcall
cmp
cmpsb
sub
xor
cmp
pusha
xchg
push
or
dec
cmp
jge
add
stos
in
xor
divl
int
and
jl
lcall
ret
sbb
mov
in
loop
lods
xor
mov
insl
cmp
cmpsb
hlt
lods
mov
cmp
dec
pop
sub
lret
or
lahf
out
push
cli
xchg
mov
dec
in
cmpsl
xlat
mov
xor
pop
mov
sub
mov
cmp
test
jle
arpl
imul
repnz
fcomps
icebp
shlb
roll
int3
xchg
xchg
mov
pop
int
pop
cmc
pop
sub
imul
mulb
in
or
das
mov
xlat
xlat
inc
adc
daa
mov
jno
jge
les
mov
adc
adc
jle
aam
into
lcall
and
jbe
lret
or
out
add
clc
mov
push
shrl
fcoml
sbb
inc
into
in
out
js
in
jl
ret
sahf
or
imul
mov
xchg
pop
sbb
imul
and
inc
mov
mov
int3
xchg
pop
jno
std
cmp
add
dec
push
dec
push
mov
push
push
add
mov
push
bound
pop
out
leave
sbb
pop
xor
imul
jle
addr16
insl
cmpsl
lds
xchg
pusha
xor
out
xchg
dec
imul
arpl
mov
test
rcrl
lods
cltd
lcall
sti
push
xor
mov
mov
scas
pop
add
sbbb
cmpsb
or
and
cmc
mov
out
xor
bound
mov
xchg
xchg
int
popa
pop
add
aaa
and
or
and
cmp
inc
jle
popa
cmp
ja
negl
lahf
stos
or
mov
mov
cmp
add
mov
push
stos
imul
js
aad
cmp
mov
fisubl
adc
or
and
out
add
sahf
sub
std
sub
loop
mov
cmpsl
xor
test
cltd
movsl
pop
ret
xchg
inc
ljmp
and
push
mov
les
mov
mov
lret
cmp
sbb
inc
popl
sub
popa
pop
or
pop
mov
sub
add
and
dec
mov
mov
or
nop
push
dec
ficomps
js
cltd
mov
dec
mov
dec
movb
sbb
jg
fwait
pop
mov
push
lods
popa
push
aaa
cmc
mov
mov
dec
pop
push
or
pop
cmp
sarl
std
in
cltd
push
mulb
xchg
add
lock
inc
pop
frstor
fdivl
scas
or
popaw
ss
dec
out
or
arpl
dec
ljmp
cmp
in
movsl
inc
aam
cs
outsb
das
fidivrs
sbb
jae
mov
dec
rolb
mov
mov
pusha
sub
mov
mov
jae
movsb
lea
sahf
cmpsb
je
mov
fbld
iret
push
pushf
leave
ljmp
movsb
lahf
sub
in
insb
jp
xchg
outsl
cmp
adc
and
out
ja
repz
lret
sbb
fstpl
add
push
push
ret
or
inc
pop
push
lret
add
shrb
xor
inc
add
sarl
mov
lret
movsb
and
inc
mov
fs
inc
out
pusha
add
fdiv
dec
cmp
mov
shlb
enter
test
and
dec
js
loope
popf
sahf
aaa
sahf
cmp
pop
test
jae
mov
mov
sub
and
or
or
inc
and
add
imul
xlat
inc
adc
mov
imul
inc
add
je
sbb
movsb
mov
lea
dec
addr16
negl
lahf
push
mov
in
mov
pop
mov
jle
sti
cmpsb
test
out
or
test
pop
push
pop
cmpsb
mov
xchg
int
pop
mov
insl
les
pushf
in
push
sub
xchg
push
push
dec
dec
push
notl
out
adc
sahf
jmp
divl
mov
repz
or
lret
lret
push
xchg
enter
dec
push
movsl
mov
sbb
sbb
hlt
add
xchg
jne
dec
imul
dec
lahf
enter
pop
jle
add
andb
lret
jnp
xor
mov
scas
call
adc
popa
popa
movsb
into
lods
fmul
push
and
sub
iret
dec
xor
popf
pop
cmc
ljmp
push
daa
mov
popf
jmp
dec
imul
jp
cmp
outsl
mov
or
mov
fdivrs
stc
mov
scas
lcall
je
ret
test
mov
mov
or
jb
arpl
dec
mov
fs
xchg
into
inc
or
jne
lods
in
imul
xchg
imul
jo
xchg
js
fnstcw
fs
in
outsb
or
out
sbb
insb
inc
cmp
inc
jge
ror
or
push
add
pusha
or
test
push
fldt
xor
dec
cmpsb
test
pushf
sub
xor
scas
cmp
dec
pop
test
push
addr16
dec
fildl
gs
and
fldenv
pop
ficomps
sub
mov
xchg
mov
cmp
cli
inc
popa
popl
iret
mov
mov
pop
push
in
test
cmp
rorl
fsubl
mov
xchg
push
xor
cs
sub
aaa
cmc
inc
inc
insl
inc
dec
orl
mov
xor
lock
cmp
inc
lock
cli
xchg
js
jno
xchg
imul
pop
inc
jl
pusha
jae
rorb
push
imul
sbb
pop
mov
push
ret
jmp
pop
xlat
push
inc
fs
xchg
lret
mov
fwait
xchg
xor
mov
push
ljmp
cmp
jo
test
ds
xchg
dec
scas
push
loope
mov
ja
dec
cwtl
loope
xlat
test
aas
fmuls
mov
push
sbb
jae
data16
jns
xchg
outsb
adc
or
jne
lret
mov
daa
int
mov
inc
sub
xlat
rcrb
push
sub
test
push
call
arpl
scas
pop
ss
dec
ljmp
stos
test
jg
movsb
js
lods
dec
or
dec
jp
cld
ficomps
jno
sbb
pop
add
out
sbb
and
insb
popa
rcll
xor
mov
jge
into
popa
ds
pop
ret
gs
cmpsb
pop
lock
and
bound
cmp
or
and
ret
nop
sarl
mov
les
repz
lea
stos
mov
enter
mov
mov
std
into
and
mov
inc
test
pop
fcompl
lret
sti
xchg
push
dec
cli
jecxz
das
idivl
aad
mov
popa
push
mov
mov
or
loop
insb
sub
pop
and
push
xor
push
mov
fldenv
add
gs
pop
mov
pop
xchg
outsb
dec
mov
stc
insl
push
enter
jp
sbb
or
or
jmp
push
cld
pop
pop
push
imul
mov
les
nop
roll
fstpl
inc
pop
fbstp
lahf
pusha
mov
mov
cmp
xchg
push
inc
jmp
inc
cmpsl
mov
aaa
pop
leave
push
sub
inc
push
mov
cmp
mov
mov
xchg
mov
cwtl
adc
icebp
xchg
cs
mov
lods
outsl
and
int
and
enter
sub
lods
movsl
inc
push
lock
mov
or
out
xchg
mov
mov
mov
in
cld
inc
cmp
dec
dec
sbb
pusha
pop
ja,pt
cld
sub
push
in
lret
cmp
mov
in
aas
rcrb
cmp
fsubrp
shll
jno
addr16
pop
pushf
movsl
fs
icebp
adc
sub
mov
mov
and
inc
xchg
repz
icebp
stos
sbb
call
mov
cmpb
xchg
mov
cltd
cmp
aaa
mov
cwtl
or
mov
inc
insb
jnp
push
fadds
mov
add
inc
push
cmp
das
es
pop
data16
sbb
ret
lret
add
xorb
sub
mov
inc
lahf
mov
adc
dec
or
xor
and
mov
adc
pop
mov
jae
jle
lret
inc
dec
push
mov
ss
mov
loope
div
hlt
xchg
clc
pop
subl
aam
push
arpl
flds
scas
sub
mov
jmp
in
call
iret
push
out
xor
pop
subb
cmpsb
cmp
int
mov
insl
mov
mov
adc
aad
pop
cs
out
out
xchg
push
ret
fidivrl
add
mov
insl
xchg
jecxz
imul
mov
ds
mov
repnz
inc
push
arpl
mov
mov
into
jle
or
out
adc
lods
mov
loope
ret
add
lret
mov
mov
mov
repnz
cmp
mov
fldt
mov
inc
int3
ss
bound
int
ljmp
and
cmp
orb
jg
roll
push
fs
mov
sub
mov
jg
dec
mov
xor
xor
cmp
mov
pushf
enter
jae
sbb
clc
mov
add
xor
sbb
push
outsl
add
add
popa
adc
pop
sarb
jb
lods
nop
pop
std
test
adc
push
mov
inc
mov
insl
mov
push
cmp
cli
or
rcrb
jg
test
imul
int3
ret
inc
xor
lret
fldcw
stc
lods
push
jno
aaa
push
dec
add
pusha
or
dec
jne
seta
out
mov
dec
bnd
outsl
xor
pop
jne
or
jp
sbb
jae
push
outsb
or
xchg
push
aaa
push
sti
int3
shll
js
cmc
in
nop
jmp
rol
cmp
push
push
movsl
adc
inc
xchg
lret
mov
int3
xchg
adc
jno
jnp
adc
push
stos
cmc
cmpsl
pop
xlat
sub
dec
jns
stos
jmp
scas
ret
aaa
lahf
jb
mov
sbb
xchg
jg
push
sub
test
sbb
leave
dec
das
mov
mov
inc
push
leave
dec
jno
add
mov
cmc
add
clc
jmp
fcoml
push
sarl
enter
lcall
lea
xchg
dec
stc
add
xor
mov
add
xchg
jno
push
out
lock
pop
and
pop
outsb
cmc
clc
sub
mov
xor
lea
mov
stos
adc
mov
adc
sub
sub
insb
add
rclb
mov
push
decl
pop
ljmp
add
ss
cmc
fs
lret
pop
xlat
adc
xchg
outsl
pop
insl
adc
xchg
xor
lcall
xchg
ret
int3
pop
fildll
cmp
ret
mov
fs
jns
xor
sbb
pop
fistps
stos
xor
mov
dec
pusha
fldt
les
ret
js
iret
or
roll
inc
sub
push
imul
xchg
fldt
ror
sahf
es
adc
pop
lret
mov
shll
jl
js
pusha
outsb
xchg
cld
jnp
scas
sub
in
pop
cmc
push
push
repnz
cmc
into
pushf
dec
lret
shlb
out
inc
leave
or
mov
push
test
stc
push
leave
inc
cmc
push
imul
xchg
loopne
loope
outsb
add
cs
icebp
jno
mov
or
popf
ret
popa
loopne
daa
cli
mov
jge
ja
ja
adc
mov
dec
adc
mov
and
dec
inc
in
lods
push
aam
and
loopne
inc
adc
mov
movsb
and
shl
fs
cmp
cmp
shlb
push
cmp
scas
pop
dec
ret
fsubrs
int3
xchg
mov
add
jns
imul
mov
push
loope
inc
push
xor
mov
shll
inc
fimuls
scas
bnd
fs
lock
jge
addb
jb
mov
fiaddl
mov
jge
jae
sub
fsubrl
shrl
xorb
sbb
push
sahf
pop
jle
inc
push
inc
or
jnp
aam
sub
xchg
out
dec
inc
mov
les
nop
xchg
imul
movsl
in
xor
xchg
mov
pop
es
cmp
out
aad
cmpsl
jo
flds
test
cmp
stc
mov
sar
int3
out
add
mov
or
jl
mov
in
rcll
pop
mov
dec
cmpsl
jg
fwait
push
xchg
jl
or
popa
loop
cmp
iret
sti
dec
push
shll
sub
push
sbb
ljmp
lock
push
fmuls
shrb
jp
push
mov
je
add
inc
push
mov
pop
repz
or
stos
and
xchg
or
push
loope
add
cmc
loope
mov
imul
jmp
daa
xor
and
mov
daa
int3
xchg
xlat
add
add
movsb
dec
scas
in
push
push
loope
and
outsl
jg,pt
jmp
mov
stc
mov
sub
adc
adc
clc
cli
lds
daa
testl
adc
mov
fwait
xor
dec
aas
sbb
mov
jle
mov
push
push
jg
xchg
sbb
adc
xor
xchg
gs
dec
ret
pop
adc
sbb
lock
xor
cs
negl
or
and
rcrl
int
add
sub
dec
dec
icebp
xchg
aam
lods
sub
test
xor
lds
xchg
xchg
mov
fdivrs
pop
jne
lretw
add
int
pusha
test
aaa
lret
mov
lods
xor
cmp
mov
mov
mov
das
pop
xchg
in
or
jno
in
rcrl
pop
mov
sub
mov
push
xchg
lcall
je
mov
cli
mov
decb
out
cmp
sub
cli
aad
and
das
insb
sti
mov
cmp
je
push
cwtl
jg
xor
insl
fisttps
sbb
pushf
inc
std
pop
inc
std
cmc
sahf
push
add
mov
jecxz
cmp
jno
jae
push
xor
pop
mov
add
mov
cli
push
nop
and
and
test
and
shll
mov
dec
ja
pushf
leave
lret
xchg
pop
xor
rep
xor
inc
sbb
lods
mov
sub
cltd
xor
sbb
pop
or
decb
nop
xchg
dec
xlat
xchg
dec
push
push
gs
push
jmp
mov
pop
push
popf
pop
pop
and
push
xchg
push
xor
pushw
outsb
xor
test
imul
ja
std
ss
sahf
fcompl
in
add
insb
mov
add
and
jnp
outsb
movsl
dec
cmovbe
or
and
dec
lahf
popa
or
xchg
stos
cmpsb
pop
mov
jo
mov
sbb
push
sbb
adc
sbb
int
xchg
es
dec
ret
dec
js
mov
ljmp
jns
mov
sub
popf
jp
lcall
mov
test
fcoml
and
test
js
mov
leave
or
fldenv
lds
scas
pop
cli
xchg
adc
movsl
xor
rcl
idivb
lods
inc
inc
fsubr
cwtl
addl
ficompl
cwtl
mov
test
jno
adc
mov
gs
sub
int
fiaddl
pop
sbb
pop
push
mov
mov
pop
xchg
lds
roll
mov
push
cld
out
adc
lods
push
mov
jbe
pop
inc
cmp
iret
ljmp
push
push
jg
mov
jmp
movsb
or
jne
xchg
test
fdivp
fwait
pop
sarb
cs
xchg
fmull
andb
movsl
lods
mov
dec
iret
testl
stc
imulb
test
and
xor
inc
dec
sub
outsb
push
mov
scas
test
insl
movsb
aam
dec
sahf
push
pop
repnz
cltd
fstl
rorb
mov
pop
imul
int
push
addr16
push
push
pushf
flds
jbe
jnp
pop
or
test
lret
add
in
daa
aad
idivb
test
xor
sub
adc
ror
sub
adc
test
sarl
ret
outsl
cs
jae
int
jno
push
clc
dec
dec
in
dec
imul
add
idiv
jbe
movb
std
rol
stos
fstl
xchg
loopne
or
mov
bound
pop
scas
xchg
push
mov
cmp
jns
and
lcall
cmc
js
push
add
dec
into
icebp
jmp
mov
xchg
ret
loop
popa
or
push
lahf
cmp
sti
lcall
iret
sbb
push
js
push
add
fstl
dec
scas
ds
jo
pop
ret
mov
push
mov
xchg
inc
pop
pop
stc
adc
xor
sbb
mov
scas
mov
push
sub
int
data16
js
mov
sub
pop
arpl
imul
sahf
lods
addr16
fwait
test
jle
loop
xlat
inc
inc
insl
mov
inc
rcll
pop
enter
pop
lods
ret
jge
loop
inc
pop
jle
mov
xchg
subl
sub
mov
testl
fucomp
mov
pop
bound
xlat
outsb
sbbb
add
push
xor
mov
mov
jge
outsl
xlat
mov
test
andb
xor
daa
leave
pop
ud0
adcb
sub
push
in
jp
fcomps
mov
adc
add
xchg
icebp
mov
aaa
popa
pop
cmp
pop
dec
aaa
adc
daa
sub
pop
mov
sbb
sub
and
xchg
ret
in
popa
cmp
mov
test
rcr
or
aam
pop
test
sbb
insb
bound
jbe
sub
addr16
mov
or
jge
mov
xlat
pop
cmp
mov
test
subl
jp
test
movsb
pop
fsubs
mov
iret
test
xor
and
loope
jno
mov
xlat
lret
aaa
cwtl
fndisi(8087
ds
subl
imul
int3
cmp
mov
imul
and
mov
inc
mov
adc
ss
int
mov
mov
cli
add
adc
test
mov
sub
adcl
fs
lods
aad
and
scas
jnp
push
js
gs
cmp
nop
stc
cmpb
xchg
sub
sbb
mov
push
pop
jnp
cld
mov
imul
push
adc
sub
dec
es
mov
mov
sub
push
or
cmp
inc
lds
arpl
dec
fildll
fwait
push
inc
sub
ss
jg
jge
movsl
or
adc
mov
mov
lahf
mov
out
xchg
inc
dec
loop
es
inc
mov
stos
pop
mov
push
push
in
leave
inc
lds
es
stos
lods
or
pop
and
ficoms
inc
jge
ret
loop
stc
ljmp
sub
adc
lods
ja
pop
mov
into
loop
mov
mov
mov
xchg
out
mov
inc
movsb
lret
hlt
jecxz
imul
pusha
outsl
add
inc
pop
insl
or
jb
jno
popf
call
pop
pop
fwait
push
mov
dec
jmp
call
into
lret
stos
adc
cmp
xor
adc
in
es
sbb
lahf
aam
push
or
push
inc
mov
sbb
stos
cmp
mov
mov
fiadds
and
lods
xorl
inc
ret
or
sahf
lea
jb
adc
out
jne
push
sbb
push
mov
rclb
push
xchg
cwtl
addr16
mov
shrb
mov
push
sbb
mov
xchg
movsl
icebp
mov
xor
cmc
jbe
cmp
adc
mov
push
movsb
sub
test
outsb
cmp
mov
fwait
shlb
and
push
pop
adc
hlt
push
nop
sbb
iret
jno
dec
clc
or
mov
jle
mov
mov
sbb
sub
insb
das
xchg
sarb
test
mov
inc
rorb
ja
stc
fsts
sub
loopne
jp
adc
jo
repz
scas
pushl
add
imulb
lods
add
imul
pop
push
nop
stos
mov
cmp
mov
xor
sbb
incl
std
and
push
test
inc
xchg
fistpll
add
notb
xchg
bound
jmp
sbb
adc
test
loope
dec
mov
and
jle
gs
in
stc
jle
fstl
mov
push
pop
and
scas
pop
adcb
mov
mov
and
shlb
gs
inc
push
call
lods
inc
mov
cmpsl
pushf
test
dec
pusha
out
jae
movb
fistpl
stos
cmp
push
aam
push
adcl
or
shrb
out
jo
cmp
or
mov
ficompl
test
std
es
lea
xor
inc
int3
cmp
jb
sub
jmp
push
xchg
mov
jle
nop
xchg
out
dec
pop
sub
movsb
and
adc
jmp
push
mov
pop
push
mov
movsb
or
gs
scas
xchg
dec
in
add
sbb
jbe
icebp
xchg
xor
or
and
or
jo
enter
je
jae
leave
mov
repz
lret
sbb
and
xchg
fldcw
cmpsb
cwtl
in
icebp
mov
or
mov
ljmp
mov
cmp
imul
push
pop
dec
jno
push
lret
sti
and
pop
xchg
sub
lret
daa
push
push
sbb
dec
test
popa
fadds
lret
pop
pop
sti
cmpsb
push
xchg
lret
pop
mov
adc
mov
test
sti
sub
ljmp
jl
mov
insb
jb
mov
ds
int3
std
pop
sahf
inc
ret
lahf
jl
mov
pmaxsw
shrl
scas
jns
or
add
and
cld
les
out
inc
push
adc
iret
pop
out
pop
cs
adc
push
inc
insl
cmp
ljmp
pop
jae
or
mov
addr16
paddq
into
sbb
mov
sbb
shll
inc
mov
clc
xor
icebp
mov
pop
fsts
roll
adc
inc
nop
jl
lods
or
arpl
outsb
cmp
in
lret
std
in
rolb
add
div
xchg
xor
inc
inc
mov
mov
adc
imul
adc
roll
sahf
outsb
movsb
cmpsl
push
scas
jbe
in
mov
jg
out
jge
sarl
ds
jae
in
cmpl
test
pop
loop
push
sub
hlt
incl
sar
jbe
cmp
repz
ljmp
mov
enter
jnp
dec
ljmp
stos
dec
xor
or
push
cld
inc
lahf
or
lods
popf
mov
adc
jg
frstor
movsb
pop
mov
sbb
xchg
push
or
jecxz
cli
in
loopne
lods
movsl
fildl
pop
adc
das
mov
fcmove
mov
pusha
stos
data16
jbe
or
and
in
mov
clc
cmp
xor
bound
dec
lret
xchg
adc
mov
frstor
push
xor
adc
push
adc
sub
out
enter
les
or
idiv
out
mov
inc
sbb
scas
movsl
pusha
or
aas
daa
lock
mov
jno
es
les
ret
lret
pop
jmp
addr16
icebp
sbb
cli
inc
inc
lock
mov
popa
xchg
xchg
adc
loope
out
into
sbb
add
mov
or
fs
stos
or
add
mov
cmpb
or
loopne
int
xlat
mov
mov
aad
fdivrs
inc
imul
test
xor
loopne
dec
in
mov
lods
mov
test
popf
mov
mov
mov
addb
sbb
stc
sbb
cmp
andps
adc
sub
mov
test
mov
nop
jecxz
frstor
dec
addr16
pop
dec
xchg
mov
aaa
pop
loop
jae
fnop
xchg
outsl
imul
lcall
sbb
fildll
cmp
subb
movsb
sbb
push
mov
mov
flds
in
shll
add
xchg
fs
lea
cmp
shlb
dec
aam
inc
add
sbb
inc
icebp
or
sub
int
or
mov
fidivrl
repnz
repz
mov
ja
test
sub
gs
fisubrs
jecxz
push
outsb
out
into
or
or
add
push
out
pushl
dec
adc
ss
xchg
cwtl
sbb
xchg
imul
into
or
jae
jb
hlt
fldcw
pop
jge
loopne
sbb
and
imul
loopne
pop
jne
cmc
jle
data16
pop
xlat
rcrl
aad
add
xchg
xchg
mov
mov
pop
push
test
ss
dec
jae
orps
imul
idivb
xor
in
nop
out
loop
push
int3
jle
enter
clc
in
inc
popf
imul
sbb
add
std
stos
pusha
sbb
lea
call
mov
mov
push
pop
inc
pop
jo
mov
or
add
pop
and
add
fs
xor
cltd
jo
lret
jbe
stos
cwtl
jnp
outsl
pushf
fsin
in
xchg
jg
jb
push
jae
lret
adc
jns
dec
mov
sahf
jp
sub
push
fiaddl
mov
mov
cmp
sub
scas
test
cld
jo
push
mov
push
mov
mov
testb
loop
xchg
sbb
nop
insb
es
sub
loope
mov
ds
inc
jmp
test
xchg
push
jo
jne
lret
mov
fs
and
or
sbb
xchg
mov
js
aas
pop
push
bound
repnz
int3
jne
cmp
xor
inc
shrb
sub
adc
pop
sub
push
dec
jl
in
in
add
push
cmp
pop
or
and
add
cmpsb
mov
push
or
or
or
aam
dec
sbb
dec
lahf
outsl
shll
push
mov
cs
xchg
dec
cwtl
imul
or
sbb
and
or
out
dec
dec
loop
mov
dec
pop
mov
mov
repz
mov
dec
push
fcmovu
mov
lahf
jl
xlat
mov
ljmp
test
sub
ss
lahf
xlat
sbb
ljmp
xchg
mov
mov
insb
out
popf
js
push
sbb
icebp
test
movsl
xor
sar
mov
sahf
ficomps
xchg
adc
add
xor
pop
mov
pop
test
imul
mov
loop
es
push
adc
mov
push
adc
es
lcall
adc
imul
xchg
cli
xor
in
leave
pop
leave
jo
pushf
add
loope
fidivrl
lods
mov
mov
add
add
int
push
ret
fnstcw
lret
lods
push
aad
inc
xchg
cmp
fs
sub
mov
sbb
push
pop
imul
pop
adcb
insb
adc
push
mov
aas
lods
ss
jbe
or
stc
outsb
mov
insl
push
frstor
testb
test
call
inc
mov
stc
daa
xlat
notl
rorl
inc
popf
mov
sub
mov
sti
push
cmpsl
push
sub
mov
dec
ss
dec
jl
int
mov
inc
jne
mulb
push
push
into
fdiv
jbe
fs
xchg
jge
andb
ljmp
or
subb
push
lea
outsl
lds
das
pop
mov
xor
insl
xchg
cmp
jno
pop
jne
into
sbbl
fsubs
inc
xor
dec
addr16
mov
mov
out
and
add
inc
cmpsl
lahf
inc
filds
je
jo
rolb
pop
mov
sub
fisubl
idiv
push
stc
pop
inc
fstpt
cmpsb
insb
aaa
inc
add
fwait
sub
add
scas
fs
inc
sub
in
jge
jle
jle
movsl
test
pop
aad
or
les
shll
sbb
popa
push
adc
pushfw
not
scas
fs
repz
rclb
rcrb
ret
mov
subl
sti
mov
ja
add
mov
pop
sub
ljmp
pop
ljmp
jmp
outsb
adc
fimuls
repz
enter
and
mov
fdivp
std
and
mov
mov
push
sbb
xchg
nop
jnp
sub
dec
xchg
pusha
loop
lock
sub
pop
iret
iret
pop
shll
mov
or
add
sar
push
insl
sbb
mov
in
das
setns
aaa
cmp
cmc
lea
cmp
jno
push
cmp
sub
dec
lea
xor
insl
xor
fdiv
stc
fildll
insl
inc
loope
movsl
test
aas
pop
imul
jg
inc
push
std
fwait
sub
outsl
test
mov
push
add
in
push
out
fiadds
pop
lret
adc
es
daa
lcall
inc
stos
test
mov
ficoms
int
mov
xor
into
gs
push
aas
mov
out
jns
and
cmc
jnp
cld
ret
test
xchg
js
sbb
sahf
rorb
xor
mov
jo
cmpsb
les
rcrl
inc
xchg
jae
or
pop
movsl
add
pop
cltd
insb
xchg
fcomps
push
dec
scas
testl
mov
mov
movsl
inc
popa
mov
int3
pop
sbb
je
mov
add
ds
xchg
jmp
nop
jp
pop
cs
pop
cmc
lahf
popa
adc
aas
shll
mov
push
adc
lock
aad
xor
and
lahf
adc
push
push
mov
sarl
xchg
pop
sub
dec
jb
mov
jne
gs
pop
and
push
scas
das
xchg
lods
daa
rolb
xor
cmp
fsubs
fistps
and
mov
enter
jns
jb
cli
ljmp
shll
pop
mov
data16
dec
xor
sbb
orb
xchg
push
loop
jbe
outsl
pop
jl
into
ja
out
push
fstps
enter
daa
mov
addb
ficompl
jo
mov
lea
fdivrl
dec
loopne
xor
ret
inc
mov
inc
daa
xor
shlb
sbb
pop
andnps
xchg
lret
sbb
push
cli
mov
rcll
sbb
lcall
mov
and
out
sub
imul
jbe
in
pop
xor
mov
mov
mov
imul
addl
movsl
fistpl
cmp
pop
clc
int3
pop
and
xor
pop
push
push
cwtl
and
stos
mov
xchg
sub
aad
cmp
jnp
sub
xchg
and
ss
xor
mov
mov
pcmpgtd
push
lahf
inc
and
scas
int3
out
xchg
mov
jbe
inc
mov
ds
xor
ljmp
outsl
cs
es
push
data16
cmp
push
daa
into
dec
dec
xor
push
or
cwtl
cmpsb
lret
repz
scas
inc
adc
call
inc
rcll
xchg
imul
lods
push
adc
pop
mov
cmp
fs
inc
aaa
das
outsb
cmp
dec
movsb
je
xorl
add
push
xor
inc
jmp
enter
aad
xor
cmpsl
test
sbb
fwait
out
push
mov
mov
mov
sub
inc
lods
pop
xor
rorl
cld
mov
mov
xchg
xchg
fildl
lea
sbb
es
fldcw
pop
js
test
adc
inc
and
pop
xorb
mov
xor
push
lods
xlat
add
jge
add
in
popf
clc
bound
sub
ret
test
mov
jp
ficoms
jg
add
sbb
push
call
adc
out
fld
jg
cmpsl
test
test
inc
mov
sbb
mov
jnp
dec
or
mov
and
and
or
in
pop
push
cmp
mov
xchg
push
icebp
mov
xlat
push
jns
out
sub
jp
xorl
imul
jae
mov
into
mov
enter
dec
inc
pop
inc
out
jle
cmp
xchg
xlat
xchg
dec
mov
out
insl
jne
mov
jno
lea
movsb
pop
pop
stc
loope
stos
push
add
aam
jne
jae
addb
add
mov
adc
push
cwtl
sbb
fiaddl
push
out
lret
or
xorb
in
jns
mov
xor
das
in
inc
cs
inc
loop
inc
adc
out
mov
stc
sub
push
sar
mov
add
jle
mov
push
addps
mov
or
ret
repz
push
sti
inc
inc
repz
cmp
xchg
or
adc
test
cli
jne
dec
dec
test
sti
sarb
mov
mov
pop
aad
xlat
inc
push
shl
xchg
and
cmp
pop
mov
xchg
sub
inc
call
add
imull
cltd
sub
insb
xchg
inc
lret
and
adc
cltd
and
push
xlat
mov
cmpsb
xor
jne
loope
and
pushf
dec
sub
add
test
ss
aaa
inc
dec
pop
scas
inc
fisubrl
cmp
jmp
jg
mov
shll
popa
aad
and
pop
fsubrl
push
and
mov
xchg
lea
dec
cltd
aam
stos
imul
sbb
add
xchg
je
aas
out
das
xchg
mov
cmp
xlat
mov
fildll
mov
cmp
scas
mov
es
fwait
jle
pop
mov
push
pop
ret
jmp
jns
mov
inc
lods
push
add
mov
cmp
outsb
leave
rcll
push
test
cmp
imul
shrl
add
dec
decb
rol
movsl
mov
sbb
ljmp
loopne
insb
xor
push
aad
or
push
ljmp
test
mov
sub
ret
mov
fisttpl
seta
pop
out
jg
loop
jno
lods
add
pop
push
aaa
dec
xor
fs
fucomi
jbe
outsb
ret
pop
cmp
test
jge
adc
jge
int
movsb
push
icebp
cmpsl
sarb
mov
adc
js
xor
int
inc
sub
sbb
inc
dec
sbb
sub
pop
adc
pop
mov
arpl
sbb
mov
mov
sbb
inc
xor
xor
sahf
stos
lock
sbb
xchg
pcmpeqb
jmp
push
mov
cmp
ljmp
inc
push
arpl
push
pop
add
cld
jmp
and
lret
and
dec
in
fnstcw
inc
xchg
mov
push
push
or
or
xchg
andb
add
adc
add
sbb
pop
pop
cs
lds
jno
in
jae
xchg
out
mov
leave
fadds
sbb
jb
daa
popf
cmp
movsb
outsl
dec
pop
movsl
lret
into
int3
fisubl
movsl
cmpsl
xor
mov
sub
test
ret
scas
push
sub
movsl
push
push
fstpt
inc
sub
mov
adc
sbb
mov
inc
mov
jmp
subl
jns
les
sub
mov
loopne
rcll
out
pop
arpl
or
jne
xor
lcall
mov
mov
xchg
pop
daa
arpl
data16
dec
cmc
jg
clc
pop
xorb
pop
aas
push
popf
mov
jp
dec
push
outsl
data16
xlat
ljmp
xchg
xchg
lock
sbb
add
jmp
dec
int
es
jns
dec
xor
mov
es
sahf
dec
iret
outsb
adc
das
das
sub
jo
aam
es
push
mov
bound
into
cli
adc
xor
pop
and
imul
shl
push
or
mov
cs
pop
es
int3
popa
lods
push
lds
mov
clc
pop
cltd
fwait
or
fs
cmpb
jecxz
imul
xchg
nop
addr16
cmp
loope
iret
push
jg
adc
adc
decl
stos
push
cs
hlt
arpl
dec
xchg
repnz
cmp
push
bound
lahf
repz
cmp
jle
fistps
cli
xchg
inc
xchg
dec
out
add
or
and
scas
daa
sub
mov
mov
mov
add
dec
call
scas
push
xlat
lahf
mov
sbbl
js
fwait
or
or
in
lret
or
lods
mov
repnz
ror
sarb
call
lcall
std
sbb
pusha
loop
inc
cmp
dec
xor
jg
adc
or
add
shll
mov
bound
pop
jmp
sbb
or
sub
js
push
flds
mov
jle
lock
popf
shlb
mov
fnsave
pop
fimuls
test
ja
cli
sub
orl
nop
mov
nop
dec
std
or
and
popa
lcall
pop
jmp
mov
or
and
inc
int
test
lea
pop
jl
ljmp
lock
jle
and
shlb
xor
pop
fiadds
test
add
sbb
int3
cmpsl
adc
xor
mov
ficomps
dec
in
das
xor
mov
mov
ljmp
rcll
and
sbb
push
mov
fs
xchg
push
xor
dec
push
out
aam
pop
int3
and
lods
into
out
cmp
fadds
lods
or
in
out
push
call
adc
insb
sub
int
pop
rcrb
cs
mov
adc
fs
pop
xchg
rcll
adc
push
ret
addl
pop
rcl
pop
ss
cmpsl
cli
adc
daa
ss
mov
adc
sbb
sti
cmpsb
adc
adc
xchg
popf
js
push
shlb
add
jo
add
xlat
jg
jno
cmp
in
sbb
movsb
add
addr16
leave
pop
adc
add
std
out
or
or
in
cld
sbb
jecxz
sahf
sub
popf
jo
lds
inc
daa
add
push
mov
ficoml
in
sub
dec
pop
push
jbe
dec
andl
cwtl
jne
sarl
adc
aaa
sub
lds
movsb
or
push
je
ss
ret
xchg
sbb
in
es
xor
imull
in
and
mov
std
inc
push
pop
sub
ret
xor
mov
jl
jecxz
popf
xchg
pop
aam
and
and
fs
mov
cmp
pusha
and
subl
clc
ja
stc
les
mov
push
push
sbb
jno
mov
mov
sub
mov
fcomi
pop
push
cmp
cmp
jnp
xchg
aas
inc
or
es
in
dec
cmpsb
mov
imul
ror
sub
push
pop
push
lahf
test
imul
pop
push
jmp
mov
jle
inc
jae
aam
sbb
std
movsb
imul
sbb
or
add
xor
dec
xchg
popf
stos
imulb
sub
push
sub
rorl
xchg
jne
push
ret
xor
jg
push
xchg
cli
mov
mov
or
arpl
je
or
daa
adc
iret
sar
ret
icebp
mov
sbb
jne
lock
fwait
cli
mov
sbb
xchg
faddl
test
push
loope
lcall
inc
je
add
nop
je
aam
in
int
jb
in
inc
pop
ds
cld
jnp
adc
mov
xchg
rolb
xchg
in
sahf
mov
repnz
mov
scas
inc
push
lock
dec
adc
xchg
adc
push
ja
test
push
lods
jb
dec
mov
jno
cmc
mov
fldenv
rcrl
xchg
std
ja
or
push
adc
mov
and
add
pop
push
add
in
push
xchg
out
test
or
cmpsb
and
xchg
adc
stos
mov
push
push
inc
sub
inc
mov
insl
repnz
jbe
push
sub
jnp
repz
ret
pop
jns
pushf
xor
jb
test
mov
add
pop
push
push
xor
push
imul
and
into
cmp
push
dec
into
hlt
in
movsb
xor
lods
movsb
mov
jl
test
xchg
jmp
loope
mov
scas
test
hlt
cmpsl
dec
iret
iret
xor
mov
xor
test
loopne
cmp
push
test
cld
cmpb
test
rorb
cltd
mov
lcall
outsl
fldcw
cmp
push
inc
mov
mov
add
adc
dec
mov
lahf
fildl
push
mov
pop
rcrb
mov
pushf
and
sub
mov
popf
add
or
xchg
inc
rcll
xchg
jg
pop
lds
flds
sahf
pop
add
aam
or
jae
imul
inc
mov
mov
mov
clc
adc
inc
xor
icebp
loop
xchg
rorl
sbb
xor
push
lcall
iret
sbb
leave
mov
inc
leave
out
test
jecxz
xchg
test
bound
or
push
xor
loop
mov
add
jnp
rcrb
insl
in
mov
cmp
mov
inc
jne
mov
loopne
jecxz
xchg
shrb
jl
cli
jae
jmp
mov
mov
scas
dec
inc
sub
ret
mov
enter
rcl
decb
xor
add
pop
sbb
mov
mov
xor
fists
mov
lds
scas
testb
test
addl
jno
rorl
outsl
inc
pop
or
aaa
or
push
inc
lcall
in
int
pop
repnz
jp
pop
or
adc
jle
jb
test
test
xchg
adc
fistpll
push
jl
or
repnz
sub
ljmp
mov
jbe
pop
dec
movsb
sub
test
sbb
lret
out
out
enter
js
pop
inc
rclb
push
in
ret
ret
sub
mov
imul
mov
lods
stos
pop
gs
add
pop
mov
cld
cmp
inc
outsl
inc
jns
repz
es
mov
mov
lods
push
and
xchg
inc
xor
insl
or
andb
pusha
inc
xchg
insl
adc
jp
movsl
test
fnsave
fst
pop
sub
mov
cmp
sarb
xor
push
push
mov
inc
dec
pop
ret
out
dec
dec
push
and
xchg
les
stos
iret
push
jnp
movsb
insl
inc
shrb
iret
jmp
dec
pushl
ficomps
ret
stos
aad
les
cmp
stos
sub
stos
sub
and
push
cld
push
jne
nop
and
adc
push
sbb
lods
mov
imulb
jg
js
dec
pop
testb
sti
jmp
pop
push
adcl
mov
dec
mov
aad
lret
inc
dec
adc
cltd
jb
loop
sbb
ss
lret
in
subl
jle
out
cwtl
and
fcmovb
movsl
sbb
test
test
pop
pop
lret
or
jp
loope
andl
push
in
mov
jge
test
out
jnp
imull
mov
mov
or
xlat
fldt
xchg
sarl
mov
popa
test
scas
mov
mov
pop
pusha
test
adc
mov
mov
mov
lds
popf
lcall
call
ds
outsl
in
mov
and
dec
xchg
imul
inc
xchg
pop
cmp
and
jp
add
add
inc
adc
jnp
je
icebp
das
dec
pusha
lods
push
das
inc
xor
and
pop
jns
test
out
scas
dec
outsb
rcrb
test
sbb
inc
jl
and
xchg
add
jo
pop
cmp
aas
xchg
inc
xchg
sub
lods
lret
jle
mov
dec
jno
adc
lret
inc
add
mov
xor
popa
push
aaa
add
test
stos
enter
std
cmp
jb
sbb
adc
push
inc
std
jle
push
cltd
addr16
lcall
inc
nop
icebp
es
push
sub
add
jl
mov
xor
mov
ja
ss
mov
sub
mov
mov
inc
jae
mov
cli
jns
or
xor
in
sbb
leave
ret
pop
in
xor
cmp
sbb
loopne
cmpl
lahf
add
inc
sbb
into
insl
push
mov
lds
dec
lea
movsl
push
sbb
mov
sbb
xlat
cli
stos
pop
movsl
sbb
fdivr
mov
insb
mov
sub
cmpl
inc
push
push
and
sub
test
ljmp
mov
ds
and
xor
or
pop
gs
mov
adc
and
or
inc
xchg
sbb
cmc
insl
adc
stc
mov
insb
or
xchg
cltd
lret
aam
pop
ret
das
mov
dec
addb
mov
mov
insl
mov
std
shr
sahf
push
js
xor
lcall
fildll
aaa
adcl
or
or
iret
xchg
add
pop
mov
scas
call
jle
cmp
mov
icebp
mov
sbb
inc
mov
sti
jmp
xor
push
adc
je
add
or
cmp
mov
imul
or
clc
mov
push
xchg
xchg
data16
ret
cmpsl
hlt
jecxz
punpckhwd
push
int3
adc
inc
mov
adc
mov
push
add
push
mov
out
cmp
aam
in
inc
and
mov
inc
pop
jg
fdivr
insl
sbb
xchg
mov
fadds
push
add
imul
sarl
jae
pop
mov
das
add
xchg
cli
test
pop
std
add
and
cs
test
jno
iret
inc
pop
mov
adc
adc
add
fimull
xor
leave
mov
xor
and
dec
push
add
arpl
and
hlt
cmpsl
ja
fmulp
mov
dec
jp
imul
inc
xor
insb
scas
cmpsl
xchg
out
es
mov
pop
mov
lahf
jle
dec
jl
insb
adcb
mov
jmp
je
rol
ret
das
js
aam
xor
push
movb
decl
cmpsb
call
fs
ljmp
out
pop
call
xchg
sbb
mov
movsb
shrb
dec
dec
ja
fsts
cmp
loop
out
sbb
cmpsb
xchg
scas
push
lock
inc
pop
in
push
xrelease
mov
adc
stos
push
adc
aad
push
cmp
andb
and
jl
addr16
push
in
xor
rorb
rolb
fildll
pop
xchg
in
inc
adc
dec
mov
dec
fs
insl
pop
cmp
ds
iret
push
sub
sub
aam
int
sbb
ss
jle
mov
sbb
cmp
jmp
mov
push
fwait
sbb
movsl
mov
rcll
jecxz
scas
sbb
sbb
outsl
push
pushf
mov
mov
ret
or
loop
idivl
stc
sbbl
mov
sub
frstor
mov
cmpsb
or
pop
xchg
push
mov
push
pop
pop
sub
movsb
inc
jne
mov
loop
mov
xchg
pop
push
ss
scas
pop
pop
sub
mov
pop
jmp
adc
inc
popa
jo
out
fnsave
mov
jge
test
xor
jg
pop
imul
inc
sbb
in
out
pusha
cmpsb
sub
aaa
xor
lahf
sbb
cltd
mov
dec
xchg
jp
sahf
mov
sbb
das
cmpsl
rcll
mov
icebp
xor
adc
pcmpeqd
pop
mov
add
dec
fistl
gs
push
rcl
pop
rcr
jnp
cmp
mov
test
fstpl
and
out
mov
lcall
pop
decl
lock
sub
mov
xor
out
gs
or
xorb
test
xchg
mov
sbb
lret
leave
add
stc
cmp
shlb
xor
popf
and
aaa
xor
test
jg
loope
pop
lds
pop
fldl
rcrl
xchg
push
pop
mov
mov
jge
jle
inc
mov
outsb
lret
cmpsb
dec
rorb
adc
push
ljmp
xchg
ds
cmc
repnz
imulb
xchg
push
mov
mov
mov
pop
adc
mov
lahf
mov
push
jnp
mov
jne
mov
push
mov
jns
mov
fs
loopne
iret
nop
jp
int3
lahf
aaa
add
adc
outsb
cmc
pushf
les
mov
xor
dec
pusha
mov
je
mov
leave
ret
push
push
cltd
dec
ss
add
and
lds
jg
lahf
push
adc
pop
outsb
clc
lock
shlb
int3
call
push
or
daa
je
adc
fwait
cmp
push
inc
jno
jne
test
into
repz
or
ret
int
lods
dec
push
rorl
clc
flds
mov
aas
xchg
enter
loopne
std
adc
add
vprotd
xchg
ss
repz
clc
or
lods
in
sub
scas
mov
test
aad
adc
inc
pop
div
and
sbb
cmp
popa
xchg
loop
lahf
es
push
sbb
movsl
jge
ljmp
int3
inc
mov
sbb
int3
fwait
push
int3
push
adc
pop
and
dec
into
ret
sarb
or
xchg
xor
push
mov
add
ficompl
das
mov
cltd
into
sub
pop
mov
rorl
dec
inc
popf
mov
scas
jge
in
testl
jle
call
mov
loope
data16
mov
imull
dec
sarl
pop
sub
or
imull
lret
cmp
lcall
repnz
lds
arpl
out
fs
test
jge
pushf
cmp
jne
adc
sbb
xor
orl
lock
push
clc
push
xor
inc
inc
jle
mov
imul
adc
pop
scas
test
cltd
xor
aam
inc
sbb
cwtl
nop
pop
sbb
inc
imul
outsl
movsb
xchg
push
mov
push
and
and
insl
inc
js
fsub
xor
shr
and
test
imul
popf
xchg
mov
call
rclb
mov
push
scas
xor
pop
sahf
sub
xchg
enter
in
cmpsb
xor
rorb
push
jnp
in
mov
fidivrs
and
fwait
shrb
mov
dec
enter
jns
inc
loopne
push
test
enter
loop
bound
cmp
sub
dec
test
add
push
nop
inc
aaa
inc
rcll
fxch
dec
or
jnp
and
testl
mov
adc
mov
pop
stos
gs
mov
or
push
cld
jbe
mov
loope
xchg
mov
mov
xchg
lods
jb
enter
aaa
js
and
out
repnz
pop
pop
scas
sbb
xor
pop
mov
fnstenv
and
push
jecxz
jns
int
outsb
adc
fdivl
aad
dec
or
cmp
inc
mov
shlb
push
sbb
ja
dec
add
mov
inc
or
fs
pop
ss
dec
fidivrs
pop
push
push
cwtl
call
or
iret
int
pushf
es
or
icebp
pop
sbb
aas
enter
rorl
lods
sbb
roll
popa
mov
jmp
shl
cli
inc
cmpsb
cmp
jb
jecxz
push
outsb
int
dec
inc
out
mov
fldcw
in
dec
push
pop
ret
pop
aad
sbb
in
cltd
stos
and
roll
ljmp
pushf
stos
pop
imul
or
mov
std
cmc
mov
imul
mov
loopne
sbb
sbb
add
mov
sbb
adc
mov
add
mov
mov
gs
test
stc
adc
lcall
loop
fs
js
lods
mov
add
hlt
cmpl
jmp
mov
xor
ss
test
sbb
inc
jmp
push
push
and
out
lea
pop
cld
aas
or
xchg
in
jns
mov
lods
popf
xchg
adc
xchg
fmuls
adc
mov
call
or
pop
stos
sub
jo
bound
or
imul
ja
inc
and
jae
aad
in
push
xor
lcall
push
scas
dec
hlt
stos
ss
xchg
or
jns
mov
add
dec
idivl
and
and
cli
sbb
dec
jg
in
test
popf
gs
xchg
mov
mov
sub
fnsave
notl
adc
mov
in
iret
pop
test
scas
and
mov
xor
aaa
dec
jnp
cmc
cmp
push
das
adc
xchg
xchg
fs
fsub
mov
test
push
pop
xchg
nop
shlb
sbb
das
notb
or
cmc
and
insl
mov
mov
jns
aam
mov
das
int3
and
mov
cs
xor
adc
sub
in
xchg
loope
or
pop
cmp
cmpb
rcll
das
scas
add
lea
lods
push
sbb
adc
xchg
mov
mov
call
in
fisubrl
iret
jle
mov
leave
push
push
mov
and
notb
das
dec
pop
bound
jl
clc
pop
xchg
dec
cmp
shll
cwtl
mov
or
insb
fstpl
fmuls
adc
cli
xor
xchg
cld
push
insb
ljmp
adc
pop
lret
or
cmpsl
sub
ds
loop
sbb
call
or
cmc
icebp
aam
lock
test
cmp
mov
mov
mov
flds
pop
insb
ret
leave
decl
cmp
mov
out
out
pop
add
mov
aam
push
push
push
fsubrl
inc
xchg
dec
orl
daa
les
in
ret
ret
push
in
push
push
jl
inc
aad
mov
cmp
bound
and
xor
in
mov
cmp
clc
add
fisubrl
popf
mov
cmp
and
jle
adc
cmpsl
sbb
sub
pushf
pop
mov
les
mov
jge
inc
fimull
xor
mov
sbbb
in
arpl
push
ljmp
xchg
sahf
lahf
jns
inc
je
pop
fs
push
pushf
cmpsl
jo
xchg
mov
sbb
jmp
mov
shlb
or
pop
push
rclb
outsb
inc
pop
lret
cmp
aam
mov
or
add
cmp
inc
sbbb
xchg
cmpsl
testb
addr16
push
inc
clc
sub
mov
dec
jns
pop
jmp
inc
fs
xor
cs
insl
and
cli
addb
mov
mov
sbb
mov
add
adc
out
cli
pop
jle
sub
xchg
testb
sub
adc
cli
cltd
add
push
fdivrp
arpl
mov
dec
jo
gs
stos
sbb
and
gs
mov
cwtl
pop
insl
adc
inc
lds
adc
icebp
enter
sbb
jmp
test
adc
dec
sub
cmp
fs
out
bound
jp
or
cmp
adc
or
cs
lret
or
addr16
fcomi
data16
stos
fadds
jns
andl
and
je
fsubr
xor
cmp
or
outsl
cmc
adc
push
ja
inc
sbb
sub
addr16
test
push
sbb
pop
pushf
push
or
jb
mov
neg
mov
or
in
mov
or
cmp
in
xor
add
push
xor
adc
lock
cld
mov
xchg
pop
mov
scas
int
repnz
cmpsb
inc
js
shl
gs
push
mov
data16
xchg
mov
xchg
out
mov
aam
cmp
out
or
push
jmp
fistpll
mov
sarb
mov
rolb
inc
inc
jbe
insb
leave
out
popf
lock
mov
cmp
nop
jno
push
sub
push
lret
adc
add
dec
adc
sub
dec
pop
mul
xchg
pop
das
sbbb
scas
sub
lahf
mov
jns
jbe
sub
call
cmp
dec
mov
mov
mov
mov
mov
xchg
push
loope
pushf
adc
jmp
pop
test
push
xlat
xor
cwtl
cmp
push
or
or
or
pop
dec
movsl
je
dec
fnstsw
ret
add
jbe
xchg
xchg
xchg
cmp
lea
and
cwtl
pop
rep
cltd
adc
and
stos
fildll
mov
inc
rcr
jnp
out
jbe
nop
mov
jne
jge
xor
test
cmp
push
jns
into
xorb
adc
rcrl
adc
cmp
mov
fistpl
js
leave
xchg
push
or
loopne
fsubr
add
repz
andl
repnz
and
je
adc
mov
mov
or
cld
mov
jo
xchg
aas
dec
shll
in
js
mov
push
or
mov
shlb
ret
cmc
dec
and
in
fs
in
call
shll
insb
and
repnz
fwait
jl
jbe
jecxz
mov
lret
stos
pop
xchg
push
xchg
adc
cmc
cld
les
ficomps
lea
andb
xchg
cmpb
stc
ja
bsr
dec
xlat
fmull
scas
cmp
loopne
fstl
mov
nop
dec
scas
fsubrs
in
hlt
mov
andl
jp
mov
popa
test
dec
adc
dec
sarl
loop
pop
jge
and
movsb
add
xor
je
inc
jle
jne
push
jns
mov
xchg
clc
push
mov
rorb
cmp
add
ljmp
or
pop
dec
notl
in
imul
outsb
jmp
out
mov
cltd
or
cmc
data16
sub
push
push
cmpsl
ret
les
test
repnz
push
pushf
inc
xchg
outsl
cwtl
push
cwtl
repz
insl
ret
dec
pop
sub
test
xchg
arpl
inc
inc
cmp
sbb
fnstsw
out
in
or
sub
mov
mov
mov
int3
cmc
mov
lret
fistps
adc
xchg
cwtl
cs
stos
dec
xchg
scas
gs
pop
inc
pop
fs
mov
xchg
lods
jp
push
inc
mov
fcomp
pop
mov
lock
out
lods
push
aas
lret
inc
jecxz
xchg
movsl
inc
in
fcmovbe
push
dec
mov
gs
or
popf
add
and
push
mov
jns
nop
and
movsl
jae
jp
push
jmp
gs
mov
xchg
shll
push
rcr
xor
fistps
cmpl
in
dec
sub
ror
mov
repz
mov
jp
and
pushf
addl
imul
rclb
popf
bound
aaa
jo
hlt
dec
sbb
push
nop
mov
mov
xchg
nop
imul
outsl
dec
pop
xchg
cmc
sub
xor
loopne
mov
inc
dec
orl
ja,pt
inc
adc
sbb
ficoms
dec
push
jecxz
lcall
ja
imul
imul
push
outsb
imul
fdivrs
xorb
xor
cmp
in
inc
xchg
and
xchg
cmpsl
sbb
push
jg
xor
int3
test
push
pop
sbb
xor
and
call
fnstenv
cmp
jno
cmp
cli
imul
popf
ds
sbb
lcall
loope
lods
add
mov
adc
jb
clc
mov
jmp
lret
hlt
imul
das
inc
push
pushf
cmp
xor
pushf
fisttps
xor
mov
pop
inc
popa
sbb
imul
jne
mov
rcll
or
sub
sbb
addl
jmp
aas
add
or
add
lock
insb
in
or
popf
fstps
sub
sub
mov
add
and
lret
mov
jmp
sbb
in
call
pop
jo
idiv
sbbl
js
jae
xchg
adc
imul
pop
inc
flds
sbb
mov
clc
jnp
cmc
sbb
jmp
dec
sub
adc
add
mov
test
andb
sub
cmp
lret
mov
jno
pop
imul
dec
and
jo
pop
outsl
test
xlat
aaa
add
inc
sti
mov
jl
addr16
mov
jmp
sub
adc
xchg
xchg
adc
and
inc
lods
push
mov
mov
cmpsl
aam
xchg
clc
push
sbb
push
popa
sarl
sbb
outsb
add
cmpsb
add
sbbl
stos
call
mov
or
push
jmp
insb
lods
incb
std
mov
scas
mov
push
stos
les
or
outsb
pop
ret
push
adc
insb
mov
aad
and
push
loop
inc
fwait
mov
jp
dec
fsubr
mov
dec
insl
int
stc
js
jnp
pop
cmp
dec
jne,pn
wbinvd
ret
mov
enter
fstpt
push
push
sub
test
cmp
int
add
hlt
sbb
popa
ljmp
or
xor
xor
repnz
mov
add
dec
out
ret
push
adc
push
jmp
xchg
adc
sbb
xor
aad
cli
mov
dec
test
das
aad
cmpsl
push
or
rorl
push
push
ljmp
or
sbb
or
stos
jl
inc
push
rorb
dec
push
sub
ja
mov
push
fsubrs
out
sub
cmpsb
or
mov
xchg
mov
xchg
pop
xchg
mov
cmpb
shl
mov
push
xor
sahf
xor
dec
cmp
mov
popf
fsts
int
xor
adc
xchg
inc
lods
jecxz
int
int
ret
pop
fsincos
fisubl
and
in
cmc
push
or
insb
xor
and
ret
jnp
and
out
orl
fwait
pop
pop
imul
mov
mov
lds
and
cltd
dec
insb
adc
push
xchg
xchg
js
dec
mov
or
pop
or
sbb
sbb
aad
xorb
leave
sbb
enter
or
jne
daa
popa
fwait
mov
and
fnstcw
out
outsl
or
pop
mov
or
lcall
lock
mov
pop
mov
cmpsb
cli
cmp
dec
negl
cmpl
sub
mov
push
rcrl
add
or
negl
jmp
enter
lock
cwtl
aam
cltd
or
push
jl
lret
add
test
adc
pop
std
add
popa
pop
and
add
shrb
inc
vfnmsubps
imul
cli
jnp
outsb
jle
xchg
leave
sub
push
call
cmp
dec
outsl
scas
shrb
sbb
push
es
push
lahf
dec
lock
es
cltd
mov
dec
add
push
jns
test
ljmp
daa
repnz
pop
jecxz
lcall
sbb
jge
rcll
into
loop
jo
mov
fcompl
push
mov
in
adc
cmp
test
cmpsb
notl
inc
jbe
rcrl
pop
dec
xor
or
pop
fiaddl
test
js
sub
and
jl
sbb
insb
push
or
clc
repz
push
dec
pop
pop
add
mov
subb
and
call
lahf
add
ds
popf
stos
imul
es
mov
repz
dec
in
jae
pop
inc
pop
xor
dec
int3
mov
mov
mov
mov
test
pop
or
ljmp
jns
sbb
cmp
jl
sbbl
pop
out
push
arpl
dec
cmp
cli
xchg
insl
push
push
pop
call
jns
push
mov
aas
mov
das
test
sbb
std
icebp
lret
test
imul
cltd
jno
orl
hlt
dec
add
cwtl
dec
sub
jl
jg
mov
xchg
call
adc
out
daa
mov
push
aas
adc
rcrb
rcr
xor
xor
push
mov
pop
popf
movsl
mov
mov
mov
xorl
add
adc
sub
pop
sbb
sarl
std
or
or
outsl
adcb
xchg
jne
sbb
arpl
lds
xchg
mov
push
lods
clc
cmp
scas
sbb
enter
adc
cmp
dec
adc
adc
nop
testb
mov
ficoml
pusha
cmpsb
jge
sub
ss
sti
loope
push
ret
jnp
mov
jo
jmp
fcmovbe
lea
or
or
or
xchg
and
push
div
sbb
sub
shrb
insb
ffree
jmp
adc
aad
out
jl
movntq
out
pop
xor
push
fld
xchg
dec
jle
lea
cmp
lahf
mov
mov
cmp
push
push
lcall
sbb
xor
inc
imul
jae
jae
cmpl
lods
daa
aaa
pop
cmp
inc
fwait
and
dec
mov
jno
pop
insb
push
sub
xchg
sbb
add
pusha
pop
push
addr16
push
dec
gs
and
mov
daa
test
jecxz
enter
adc
mov
sbb
sti
les
scas
xchg
and
or
cld
add
ror
mov
lds
adcl
imul
testl
out
repz
adc
mov
ja
gs
les
push
jl
sbb
or
sub
or
mov
es
sub
sub
and
or
jbe
dec
insb
sub
lods
fs
sbb
ds
xchg
dec
fdivs
push
pop
inc
pop
push
push
int3
cs
mov
mov
out
jns
cmc
std
xor
cmp
fwait
lods
cmp
aas
aam
aas
cmpsl
pop
mov
scas
or
push
cmp
fcomps
pop
push
cli
push
mov
stos
pop
push
mov
in
jno
push
pop
push
dec
xchg
add
ret
push
dec
loope
out
pop
scas
movsl
xchg
nop
xor
scas
jbe
cmp
cs
push
pop
mov
add
cmp
pushl
pop
sahf
stc
nop
cmc
add
cltd
jb
jge
jb
dec
mov
mov
les
std
lcall
and
push
insl
jae
out
clc
or
aas
xchg
outsl
mov
stos
popa
into
gs
jno
cmp
jmp
je
mov
popf
out
lcall
fisubl
add
xchg
sbb
out
stos
or
push
testl
imul
insb
cmpsl
inc
into
aaa
mov
jmp
hlt
xor
es
faddl
ja
mov
shlb
sub
test
rcrl
cmpsb
imul
lret
ja
sbb
cmp
or
lret
xchg
xchg
dec
sub
push
movsl
pop
jp
mov
mov
mov
cmp
ficomps
and
in
jo
movsb
jp
push
es
adc
jp
jmp
jmp
ljmp
rcr
push
pop
out
or
add
inc
shr
dec
in
dec
pop
mov
stos
jns
mov
shll
adc
scas
fisttpll
divl
enter
popa
and
leave
aas
mov
mov
andb
insl
inc
mov
hlt
push
int
push
or
jno
push
inc
xor
cli
fbld
movl
add
xlat
inc
js
cmp
insl
inc
in
pop
lahf
stos
mov
fs
pop
into
jne
dec
dec
mov
cli
mov
dec
sbb
xlat
dec
xor
fwait
sub
xchg
mov
push
add
xchg
lret
mov
add
mov
push
cmovo
test
push
mov
xor
adc
xlat
pusha
jecxz
loopne
cld
negb
loope
xchg
fs
inc
inc
xor
xchg
cmp
mov
xchg
std
and
sbb
or
adc
pop
sbb
and
xchg
sub
xchg
lods
shlb
pop
leave
cmp
mov
loop
jbe
js
pop
mov
outsl
pop
pop
es
ret
addb
jns
popa
xchg
jl
shl
lods
add
out
je
popa
sar
mov
lret
or
lahf
lock
sub
ds
jl
je
mov
pushl
js
fisttpl
and
nop
dec
sub
in
sti
or
xchg
mov
test
sbb
xchg
push
and
mov
je
mov
add
pop
lds
mov
stos
pop
fs
aaa
fcomps
scas
and
loop
movsl
cmp
jb
add
test
jne
inc
xor
cmp
xor
cmp
scas
and
pop
scas
sbb
movsb
sbb
push
xchg
test
movsl
mov
aam
movsl
dec
loop
rorb
sub
cwtl
loop
les
adc
inc
adc
popa
lods
dec
lahf
jecxz
dec
xchg
outsl
jo
mov
pop
or
test
mov
pop
sahf
cmp
jmp
fwait
xlat
cwtl
pop
popa
scas
test
loop
mov
pop
incl
popf
ljmp
xor
movsl
sub
fsubl
pusha
andb
addr16
cmp
push
jl
cmp
xchg
xor
js
dec
inc
inc
or
mov
or
in
out
in
ljmp
push
xchg
hlt
mov
mov
sbb
sbb
pushf
arpl
js
pushf
cmp
cltd
rorl
shl
xlat
out
mov
fbld
mov
xor
js
leave
pusha
outsb
aad
push
mov
push
in
cmc
imul
es
in
in
repz
jp
iret
lret
mov
test
sub
mov
pop
insl
mov
pop
sub
ss
pop
add
pop
jl
cmovb
sbb
loop
aam
add
and
call
or
sbb
les
xor
push
push
in
xchg
repnz
and
rorb
push
mov
dec
popf
fldcw
mov
inc
jg
lret
in
lahf
pop
mov
lret
lahf
sbb
mov
outsb
mov
adc
mov
cmp
cmp
mov
sarl
fisubrl
cmpsl
lods
rcl
mov
sub
inc
fdivp
cmp
xor
pop
inc
aam
adc
push
ds
pushl
xlat
cmp
sbb
imul
mov
scas
jnp
push
testb
xor
inc
adc
sub
cli
adc
adc
les
push
pop
roll
push
pop
lahf
sysret
xlat
xor
icebp
mov
cmp
add
or
loope
pop
test
outsb
stos
sti
mull
inc
or
push
je
inc
xchg
push
pop
lods
shrb
stos
outsb
cld
insb
pop
jae
pop
pop
and
rcrb
fcmovbe
mov
push
dec
jns
negb
js
fnsave
mov
pop
lds
mov
or
xchg
fwait
xchg
ljmp
push
testb
pop
push
mov
scas
sub
mov
arpl
mov
loopne
push
int
sbb
loopne
mov
or
pop
adc
push
mov
sahf
int3
fwait
and
mov
push
mov
mov
lret
add
pop
movsb
into
or
popa
push
push
mov
and
jbe
xchg
rclb
xor
add
fcompl
decl
loopne
nop
push
nop
mov
repnz
dec
jne
fcomi
dec
lret
sub
ficoml
pop
clc
or
mov
loope
cmp
mov
mov
cmp
mov
je
pop
es
adc
dec
xor
sub
ljmp
cwtl
inc
das
shlb
leave
xor
jbe
mov
andb
pinsrw
das
cmp
mov
repnz
xchg
dec
jecxz
sarb
out
lds
mov
lods
dec
lds
jmp
dec
dec
xlat
addr16
inc
daa
mov
sbb
je
push
ja
sbb
daa
cmp
outsl
fdivs
idivl
bnd
xor
push
dec
xchg
repnz
insb
adc
addps
add
adc
in
xor
fwait
push
lock
mov
insl
sar
lret
sahf
or
dec
mov
ss
es
stc
lods
addr16
test
push
inc
aad
out
jg
push
dec
pop
push
sbb
lahf
lahf
sbb
xor
aam
adc
and
fs
mov
cmp
imul
push
inc
jge
aam
xchg
or
and
movsb
and
mov
mov
xchg
push
sbb
mov
push
popa
pushf
jp
mov
mov
push
mov
outsl
gs
xor
inc
in
xorb
push
pop
bound
aad
inc
out
daa
lret
pop
xor
sub
mov
out
rclb
outsb
dec
jle
leave
inc
xchg
mov
mov
out
fadds
stc
inc
iret
in
stos
push
arpl
dec
inc
push
dec
push
addr16
mov
fs
sbb
sub
inc
sub
sub
cmp
cwtl
std
adc
cmp
hlt
cmp
cmp
test
push
cwtl
cli
dec
mov
adc
sbb
pop
cmp
cld
push
sti
xchg
outsl
mov
jp
fmul
leave
shrl
or
out
pop
push
outsl
and
jge
mov
sarb
xchg
dec
pop
fsubl
adc
mov
jmp
jns
sbb
push
inc
inc
lods
cs
je
mov
rcll
lock
test
and
dec
and
sbb
popf
dec
rorl
or
stos
or
icebp
sbbl
ret
mov
pushf
mov
cs
testb
fwait
sbb
inc
daa
ffreep
gs
adc
scas
mov
repz
sub
and
lahf
push
xor
push
iret
cwtl
call
inc
xchg
cmp
xchg
and
in
movsl
pop
sub
sub
sahf
mov
movsb
inc
dec
jge
mov
in
out
mov
pop
ret
mov
test
push
inc
mov
sub
inc
mov
fcmovnbe
ds
xor
not
inc
jg
insl
inc
daa
xchg
leave
gs
xor
xchg
lret
call
push
int
mov
call
aam
xchg
scas
push
mov
adc
dec
sub
mov
out
dec
jl
dec
dec
icebp
jnp
sbb
or
dec
jne
xchg
jp
inc
cmp
lret
pop
add
push
dec
daa
add
loop
mov
dec
jb
sbb
cmp
sub
pusha
rcll
sub
in
popa
jecxz
out
mov
popa
or
je
les
loop,pn
and
sub
sti
mov
cld
addb
pop
pop
adc
emms
adc
shr
test
or
leave
xchg
aaa
jg
sbb
cwtl
ljmp
clc
xchg
daa
fsubrl
fwait
add
mov
ljmp
movsl
shlb
icebp
shl
pop
dec
inc
xchg
xchg
mov
test
mov
out
outsb
dec
pop
loopne
mov
xor
dec
dec
aaa
jo
jle
or
out
jo
mov
mov
sbb
movsl
adc
dec
sub
jbe
dec
push
pop
push
sbb
jp
fistl
xor
mov
insl
stos
cmp
data16
cmp
cmc
push
cmp
xor
ja,pn
jge
arpl
out
inc
jle
sbb
inc
mov
divl
cmp
add
rcrb
mov
pop
jl
xchg
into
sbb
lea
repz
sub
and
inc
int3
in
das
addr16
add
jae
pop
and
jl
je
in
xor
mov
add
lret
inc
inc
arpl
pop
mov
sub
ja
js
and
insb
pop
cmp
into
mov
push
mov
xor
push
xor
fidivs
inc
stc
sub
daa
push
xchg
adc
aam
lods
jne
cmpsl
test
gs
cmp
jp
addl
cmp
jge
rolb
pop
stc
imul
icebp
sbb
loopne
mov
icebp
pop
cmpsl
orb
adc
sbb
lock
aaa
loope
mov
lock
push
push
lahf
ljmp
popa
xor
cld
call
mov
wbinvd
jl
push
push
fxch
into
and
imul
pop
shlb
cmp
mov
add
ljmp
bound
mov
dec
dec
loop
imul
push
jge
push
mov
xor
adc
dec
pop
push
sub
sbb
sbb
cmp
xchg
loop
rolb
out
lcall
sub
aam
pop
adc
loope
mov
xchg
imul
sti
mov
movsl
es
jnp
out
daa
stos
adc
xor
add
xchg
imul
mov
mov
push
mov
cmp
mov
repnz
loopne
test
ret
adc
jb
aam
neg
fucomp
cmp
jno,pn
inc
push
and
test
adc
movsl
adc
or
cs
scas
fidivrs
fadd
or
sbb
xor
pop
enter
sub
push
pop
fstpt
js
movsl
sti
sub
push
xor
or
dec
mov
jo
pop
lahf
xlat
imul
fwait
add
sub
int3
or
xor
and
sbb
mov
loopne
sahf
mov
cld
fdivr
out
xchg
push
ja
mov
imul
add
sub
jg
loope
fldl
shrb
in
jg
jae
push
das
xchg
xchg
les
in
out
xchg
rcrl
lods
in
shll
mov
sahf
in
xchg
shlb
das
aad
int3
out
xor
xor
mov
les
inc
neg
hlt
inc
mov
dec
mov
call
xchg
addr16
popa
sbb
mov
imul
cmpsl
or
dec
scas
ss
cmp
gs
or
mov
cmp
inc
je
mov
cmp
loop
fidivrs
out
fmul
test
and
or
pop
repz
or
stos
pop
add
push
mov
add
imul
out
cmp
mov
lahf
rcll
clc
js
test
sbbl
cmc
pop
flds
mov
bound
pop
sarl
das
add
imul
arpl
or
jnp
fdivrs
cmp
jmp
mov
push
jl
daa
ss
inc
jbe
jnp
xchg
lods
adc
push
jl
mov
xchg
popa
les
mov
pushf
ficoms
jne
push
or
cmpsb
lahf
jne
pop
dec
aas
dec
dec
mov
cmpsl
pop
aad
xor
ds
mov
jno
bound
push
loop
add
in
xchg
call
mov
pusha
dec
imul
clc
push
dec
data16
ja
das
push
sbb
daa
lock
lcall
sbb
xchg
pusha
outsl
cmp
add
inc
fcomps
jmp
mov
and
ret
pop
cli
sub
pop
mov
inc
test
mov
xlat
pop
xchg
inc
lds
sbb
movsb
adc
out
jecxz
mov
push
sbb
sub
pop
cmovns
out
loop
mov
dec
rorb
dec
aad
mov
test
jno
test
xor
out
jl
xor
jnp
insb
mov
in
in
or
add
loope
jnp
mov
outsl
xlat
cmpsb
and
lret
inc
pop
pop
subps
adc
mov
stos
and
pop
sub
sub
pop
jle
call
fldenv
pop
pop
jae
and
icebp
dec
cld
jbe
lods
sarl
cli
pusha
or
or
push
mov
aad
sbb
cmp
lret
cmp
fwait
test
jg
addr16
pop
pop
push
mov
and
out
lds
push
pop
xor
das
movsb
movsb
out
out
loope
ret
lea
inc
mov
int
xchg
cmp
dec
icebp
sar
or
mov
jl
mov
lcall
xchg
icebp
test
sti
push
in
arpl
cmc
dec
or
jo
add
mov
enter
lods
dec
or
and
mov
in
stos
sub
sarb
test
aas
add
cli
loop
and
mov
sahf
insl
lods
pop
or
jne
stos
mov
ja
notl
cmp
and
cmpsl
dec
jge
add
add
ds
add
repz
mov
subb
push
add
mov
xchg
into
cmp
adc
loope
adc
xor
lcall
out
decl
rorl
pop
testb
test
shll
mulb
xchg
sbb
cmpsb
ja
scas
push
dec
cmp
popa
push
xchg
xorl
out
daa
mov
outsl
out
sbbb
out
pop
imul
scas
bound
pusha
jnp
imul
mov
mov
cwtl
test
and
fwait
mov
adc
cmp
jo
jne
sub
scas
data16
lret
nop
adc
fisubl
ret
jl
popa
mov
mov
jl
data16
sub
out
int3
adc
ljmp
and
mov
jge
cmp
adc
jne
mov
add
arpl
pop
or
stos
test
les
shlw
jecxz
xchg
pmullw
push
xchg
repz
xchg
es
icebp
add
add
jbe
dec
ret
insl
hlt
push
stos
pop
adc
cmp
fs
test
mov
pop
mov
xchg
pmaxsw
and
jle
fdivrs
dec
pop
daa
shll
fistpl
lret
lahf
icebp
adc
xor
mov
mov
movsb
stc
std
sbb
adc
mov
jne
and
cmp
xor
std
stos
out
add
sbb
push
mov
repnz
movsl
lods
int
and
lods
imul
adc
add
pop
push
rcrb
jbe
dec
in
ja
xchg
jno
daa
sbbl
filds
int3
outsb
or
sub
jno
jecxz
xor
or
inc
and
mov
sub
fs
cmp
shll
arpl
sub
icebp
pop
enter
addr16
xor
or
push
es
or
pop
fs
add
mov
xor
ljmp
sub
test
cs
adc
xchg
cmpl
lea
or
and
ret
sbbl
sbb
adc
adc
add
and
stc
jl
jp
mov
pop
fstpt
or
popl
cmpsl
aaa
inc
lahf
cmp
adc
xor
adc
stc
pop
and
cmp
pop
push
fcompl
inc
lcall
dec
mov
jecxz
stos
popf
sti
iret
cmpsb
sahf
mov
out
mov
int
pop
out
dec
dec
push
xorb
sub
fwait
insl
or
in
xchg
imul
inc
pop
cmc
inc
mov
push
subl
jbe
mov
push
pop
gs
sub
notl
or
xchg
jmp
xor
fsubrs
mov
andl
jle
or
sbb
push
ret
sub
js
in
dec
les
lcall
mov
mov
lret
adcb
fsubrl
std
sbb
leave
lods
xchg
inc
cmp
addr16
add
push
xor
cld
divb
mov
pop
jnp
jae
or
stc
pop
es
loop
add
jb
sub
mov
aam
or
pusha
jns
out
jmp
clc
mov
lods
cmc
pop
jo
sbb
cmp
cli
dec
lock
or
jns
dec
pushf
je
xchg
outsl
das
push
dec
je
std
lahf
inc
adc
mov
cmpsl
push
sub
xor
popf
and
sub
xor
pushf
cwtl
in
in
dec
pop
or
jmp
jb
cld
pusha
mov
mov
push
cmpsl
jb
punpckhdq
fistpl
inc
jg
xchg
xchg
or
ficomps
cwtl
sub
pop
jp
cmp
cltd
vpshld
push
test
int
ret
xor
cli
mov
iret
pusha
pop
and
aad
push
mov
out
and
xchg
ljmp
test
or
mov
push
cmp
dec
test
les
cmp
aaa
repnz
sbb
mov
cld
cmpsb
and
sarb
out
inc
lock
mov
das
inc
lret
fsubrs
jb
pop
mov
push
jge
xchg
sahf
xchg
add
mov
push
xchg
push
jnp
pop
rorb
inc
xor
mov
sbb
lahf
xor
and
add
or
flds
jns
add
xlat
ss
enter
mov
adc
sbb
stos
mov
dec
push
stc
or
scas
movsb
mov
out
hlt
jno
fldl
xchg
fidivl
jmp
loope
filds
call
cmp
divl
fiadds
test
cmc
adcb
xor
repnz
fcompl
call
dec
mov
insl
cmp
jno
pop
mov
scas
inc
push
ret
inc
imul
mov
rclb
and
cmc
mov
adc
and
xchg
rclb
sbb
ds
inc
add
xchg
pushf
lcall
push
ss
ficomps
xor
into
fisttpll
xlat
lock
push
add
sub
xor
sahf
out
sub
inc
mov
pop
adc
fwait
inc
jmp
fsubr
outsl
jle
jecxz
jo
push
add
sbb
push
dec
jae
push
xchg
fnstcw
lds
in
pop
and
xor
mov
dec
and
pop
sbb
leave
into
add
mov
push
sub
xchg
cmp
mov
gs
and
push
pop
xchg
test
leave
imul
xchg
lods
mov
mov
lret
or
sub
hlt
sbb
test
stc
in
pop
into
dec
mov
arpl
fimuls
out
xchg
push
sbb
imul
call
sbb
mov
jg
sub
and
add
cmp
or
push
scas
and
jge
sub
mov
cmp
test
mov
leave
inc
in
lret
jg
xchg
pusha
mov
cmp
jnp
pop
jg
movsb
stc
in
test
sbbb
mov
mov
mov
fnstsw
ja
cmp
fnstsw
mov
rcrl
push
pop
xchg
pop
jg
xchg
mov
push
mov
pusha
ret
pusha
cmp
test
pop
adc
mov
movsl
inc
dec
mov
sub
dec
mov
sbbb
xor
aas
push
cli
incl
xchg
mov
ljmp
je
or
mov
pop
jae
dec
repnz
mov
sysexit
adc
adc
xchg
mov
imul
lret
dec
cmpsl
push
out
push
popf
mov
jg
insl
sbb
mov
packssdw
mov
ret
xchg
scas
imul
jmp
out
lret
push
mov
fs
dec
decb
xchg
and
push
pop
jo
mulb
cmpsl
pushf
adc
push
pop
fisttps
xchg
in
cmpsb
out
lret
lret
pusha
xor
rcll
xchg
mov
in
xchg
cmpsb
xor
xchg
dec
pop
and
xlat
divl
stos
ror
pop
mov
or
xor
cmp
ds
xor
les
dec
in
in
inc
sbb
int3
push
jns
mov
pop
out
jl
insb
fwait
or
sbb
pop
sub
leave
dec
jmp
fwait
mulb
sub
test
mov
mov
sbbl
pop
pushf
mov
xlat
rcl
fiaddl
sbb
out
scas
cwtl
jl
mov
adc
out
lods
into
xchg
inc
push
sub
sub
mov
int3
inc
rclb
sbb
movsb
mov
xchg
lahf
mov
jl
lds
add
test
ret
mov
mov
mov
add
clc
inc
lcall
js
pop
sub
xor
sub
repnz
out
int
mov
dec
add
test
xchg
stos
inc
ljmp
cmpsb
jmp
cmpsb
mov
and
ret
test
sub
jmp
ss
jae
and
push
cmp
mov
xchg
mov
pop
scas
jae
mov
inc
stos
cmp
int
fsubp
xchg
pop
sahf
push
mov
mov
outsl
pop
mov
pop
stc
gs
movsb
sti
outsl
jge
add
lock
rcrb
mov
into
aaa
out
mov
or
aas
cmpsb
inc
jg
imul
mov
and
loopne
mov
add
icebp
fstl
in
shl
inc
xor
mov
cmp
jbe
psraw
mov
loopne
into
lret
inc
dec
in
test
add
in
nop
addr16
scas
inc
int3
nop
pop
clc
loop
sub
jl
dec
mov
pop
xor
pop
xchg
xchg
outsb
or
cs
aad
repz
hlt
out
pop
xor
lods
adc
push
push
loope
push
adc
xchg
test
mov
leave
ret
add
das
sub
das
cmp
movsb
push
pop
enter
pop
xchg
sub
push
imul
and
mov
mov
shll
sbb
test
sbb
adc
dec
jg
dec
dec
rorl
lods
aam
jne
nop
xchg
stc
sbb
ja
cmp
jnp
bound
xchg
loopne
fwait
pusha
stc
into
mov
dec
popa
ja
and
std
push
sub
adcl
aas
or
push
jl
mov
push
dec
jp
pop
mov
sub
push
imul
out
cmc
js
pop
dec
test
sub
xor
lea
xchg
add
mov
cmp
pop
mov
adc
rorb
mov
dec
inc
push
shrb
adc
mov
inc
xor
gs
or
call
subb
xor
push
sbb
ret
dec
xlat
sti
mov
shlb
testb
sub
pop
popf
push
test
js
les
mov
imul
inc
dec
inc
imulb
lret
cltd
lods
jo
cmp
cmpsl
jns
and
loop
xchg
ret
ss
xor
mov
stc
sbb
pop
shrb
pop
in
push
nop
fwait
mov
in
or
pop
jle
add
jbe
cmp
in
in
aas
je
popf
rcll
cltd
lods
in
nop
pop
push
fstl
and
pushl
xchg
xchg
outsb
ret
push
popf
int
repz
fs
or
into
loope
frstor
sbb
xchg
icebp
rcrb
xor
leave
cwtl
test
cmp
fidivrl
jb
mov
in
imull
jns
cmp
leave
inc
test
repnz
mov
cmc
pop
imul
das
notl
insl
popf
sahf
in
xchg
scas
jne
dec
rclb
mov
loope
jno
cmp
push
dec
sarb
movb
push
call
out
or
fmulp
cmp
dec
dec
pop
xlat
jp
xchg
and
mov
jbe
push
out
push
sub
jle
cmp
shr
ja
lods
push
lods
cwtl
sbb
int3
loop
xchg
into
mov
push
int
add
jns
inc
test
xor
rcr
aaa
movsl
std
dec
movsl
in
rorb
cmp
inc
jo
arpl
fcomp
cmpsl
dec
cmc
cmp
pop
mov
inc
mov
cmp
addr16
les
mov
jl
and
sub
push
in
test
pop
add
fcompl
adc
inc
or
pop
adc
sarl
nop
fsts
add
dec
and
cmp
push
gs
mov
and
mov
cmp
insb
dec
push
test
xchg
sub
stos
dec
sbb
cmpsb
mov
jl
push
inc
mov
enter
test
aad
push
out
and
sahf
cmp
xchg
push
repnz
add
dec
sub
int3
outsl
jecxz
test
movsb
faddl
add
mov
fwait
inc
test
mov
xor
into
jns
insl
pop
test
lds
int3
dec
dec
or
iret
xor
movsl
mov
mov
mov
ret
adc
fwait
cmp
insb
sub
xor
inc
dec
xor
cmp
scas
xchg
cmp
push
jp
xchg
push
out
out
ja
test
mov
adc
and
mov
mov
mov
inc
icebp
mov
popa
fimuls
popa
subb
cmp
lods
cmp
test
leave
test
cmpl
cmp
es
js
lock
push
xor
test
inc
mov
mov
pop
mov
and
ret
cmp
pop
insl
sub
jl
cld
ja
jg
in
push
aad
push
sub
mov
push
das
xchg
and
cmp
imul
arpl
push
xor
in
sti
movsb
int3
mov
popa
dec
ret
sub
into
dec
sbb
pop
lret
jle
lock
popa
mov
or
popa
xchg
scas
mov
cmpsb
sub
in
or
subl
mov
push
xor
dec
data16
push
and
cmp
pop
aam
pop
int3
push
fmulp
and
jmp
fisubrl
cmpsl
push
loopne
ret
adc
or
iret
and
pop
test
xchg
push
push
lret
dec
clc
pop
popa
js
inc
stos
adc
xchg
pusha
aaa
xorl
inc
mov
dec
je
test
out
pop
outsb
insb
insb
sub
and
fsubrl
sub
push
lahf
testb
scas
aaa
loope
enter
lret
xchg
cwtl
outsl
popf
cmp
mov
pop
push
pop
insl
icebp
aaa
xlat
faddp
pop
icebp
push
xor
in
out
repz
hlt
push
rcrb
cli
stc
mov
add
popf
sahf
jecxz
jmp
sbb
push
dec
xchg
dec
xlat
sbb
roll
and
and
cmp
or
scas
js
sbbl
rcl
or
inc
jb
dec
inc
lea
xchg
dec
fdivrl
hlt
sahf
add
test
in
mov
loop
or
sbb
mov
mov
add
mov
mov
mov
add
pop
adc
nop
pop
jns
xchg
iret
clc
arpl
adc
jns
cmpl
ja
add
sub
jbe
ss
and
xchg
test
add
cltd
mov
setge
dec
ljmp
stos
xor
test
mov
fisttpl
leave
outsb
addr16
xchg
pushf
inc
out
repz
push
adc
push
orl
andl
popa
clc
addr16
sub
ds
lods
cmp
nop
mov
add
jle
push
out
xor
orl
adc
inc
inc
test
dec
inc
lahf
pushf
lret
cmc
pusha
ss
xor
or
adc
popw
int3
shrb
lret
mov
pushl
mov
fs
jp
movb
push
mov
cmp
cmpl
push
xor
add
out
test
xchg
jo
inc
jo
enter
fbstp
dec
and
icebp
popf
sub
outsb
call
mov
push
lock
pop
loope
les
das
mov
in
pop
scas
out
cmp
xor
pop
or
clc
jge
inc
dec
aaa
js
xor
mov
lcall
js
mov
xor
xchg
mov
test
cmp
pop
jp
subb
test
dec
xchg
cmc
dec
sub
sbb
and
jle
enter
in
add
ja
div
xchg
roll
push
lods
and
jnp
std
shlb
mov
shll
stos
test
ret
sbb
gs
and
or
sub
fists
fnstcw
cmp
test
jnp
xor
xchg
sbb
lea
mov
shlb
jb
pop
push
lcall
mov
insl
mov
xchg
ljmp
jae
dec
adc
adc
rol
sub
in
icebp
sbb
arpl
sbb
iret
cmp
pop
xor
xor
ss
loope
push
pop
jo
hlt
cmp
scas
pop
xor
and
lcall
lods
push
mov
mov
insl
xchg
jo
mov
in
adc
inc
cmpsb
cmpsl
and
mov
aam
and
inc
xchg
adc
loope
jle
push
out
sti
aad
orb
out
jecxz
and
jne
je
push
lods
test
jne
or
lret
mov
loop
jae
mov
mov
outsl
push
int
movsb
jb
sbb
fdiv
ljmp
icebp
mov
xor
arpl
cli
dec
jle
movsl
push
outsb
and
cmp
or
inc
add
push
fcoml
movsl
pusha
and
mov
jmp
test
and
cmpsb
xchg
xchg
xchg
push
aas
fdivrl
adc
and
jp
rcll
and
test
in
sub
int
dec
fmul
push
push
std
cmpsb
out
xor
arpl
out
jo
addr16
cli
add
aad
pop
es
daa
vmwrite
jp
xchg
inc
std
push
loope
aam
mov
lahf
imul
daa
inc
mov
testb
ljmp
in
jl
fstl
jl
jmp
fidivrl
or
sti
sub
sbb
push
cmpsl
pop
push
lods
scas
cmpsl
jbe
pop
sub
jmp
call
aad
xchg
mov
cld
pop
inc
and
xchg
cmp
adc
push
lret
push
mov
mov
dec
gs
or
pop
shl
int
pop
xor
fwait
add
gs
nop
shl
je
fbstp
jmp
inc
cltd
xor
faddl
ds
push
fwait
xchg
cmp
jle
lret
stos
inc
and
dec
daa
jb
mov
mov
mov
lods
fidivl
or
adc
jo
fsts
add
shll
and
jmp
mov
push
add
pop
int3
jne
daa
jecxz
mov
loopne
inc
push
cmp
or
xor
aam
mov
lock
xlat
add
adc
mov
fstps
sbbb
out
pop
push
lods
out
and
mov
pop
decb
cli
sub
popa
movsb
pop
icebp
or
xchg
pop
enter
xchg
mov
and
sbb
popl
xchg
leave
sub
das
inc
xor
push
mov
int3
rcl
cmp
shlb
sbb
lea
dec
fldl
lds
dec
movsl
out
icebp
pop
in
repz
xor
fwait
inc
jbe
movl
iret
push
imul
mov
lock
xor
lret
js
adc
mov
mov
or
mov
xor
outsl
stos
sahf
jg
adc
out
pop
les
cmp
in
adc
sub
inc
jg
mov
shrl
adc
xlat
insb
loop
mov
ljmp
ljmp
mov
and
std
aad
mov
loopne
and
jmp
sub
pop
dec
xchg
jbe
mov
fcmovnb
cltd
jo
cmp
push
jbe
rcr
aas
pop
ljmp
dec
and
clc
xchg
mov
test
ror
and
fucom
add
dec
xlat
mov
pop
sub
and
pop
addr16
inc
repnz
in
mov
push
cmp
aam
pop
mov
or
dec
pop
movsb
pop
adc
xor
shll
movsl
fsubrs
mov
inc
cmc
stc
stos
call
add
das
mov
dec
xchg
ds
rclb
inc
loop
mov
push
rolb
mov
in
mov
add
loope
push
sbb
dec
mov
cmp
xchg
xor
out
push
jecxz
cmp
adc
mov
xorl
outsl
loopne
pop
jmp
cwtl
xor
dec
pop
dec
sbb
push
inc
lcall
inc
pop
cwtl
or
mov
das
and
call
cmp
loope
lock
xchg
mov
testb
int3
inc
add
je
mov
pop
cmp
or
mov
mov
lret
bound
xor
jb
xlat
adc
hlt
jnp
jg
leave
adc
cmp
xchg
cli
dec
pop
xor
adc
sub
push
or
push
bound
xor
movsl
ljmp
shll
nop
fwait
orl
dec
cmp
outsl
fisubrs
cwtl
inc
xchg
popf
or
or
scas
test
sub
xchg
jge
jo
and
aaa
sub
xor
out
lods
add
or
mov
and
repnz
adc
loopne
lcall
inc
add
pop
dec
inc
ljmp
test
xchg
iret
xor
ret
out
inc
jb
and
imul
or
jle
shl
xchg
and
out
pop
std
pop
add
ret
daa
clc
xchg
mov
add
mov
in
jno
xor
popf
rep
jmp
xor
cmpsl
shlb
sbb
mov
bound
push
inc
jg
sarl
shlb
xlat
xor
cmp
leave
fcomip
sbb
mov
lahf
enter
or
roll
sub
adcl
jle
lret
pop
scas
fisttpl
dec
pop
xchg
push
add
and
push
xor
and
fmulp
insb
dec
mov
push
clc
sbb
or
fidivrs
movsb
inc
loope
loopne
mov
adc
add
lock
push
mov
jae
div
iret
pusha
sbb
jae
cmpb
cmpsb
imul
add
xor
mov
xor
inc
pop
jnp
and
ret
sub
xor
mov
das
and
xor
lea
cltd
lret
cmp
negl
leave
loopne
xchg
cmp
adcb
sub
jmp
or
or
push
sub
cmp
sub
mov
test
mov
jp
cmp
jmp
jp
adc
out
inc
jle
mov
imul
and
test
sahf
mov
jmp
icebp
add
adc
dec
adc
mov
xchg
jle
jp
adc
ffreep
iret
and
sub
subl
mov
mov
cmpsl
mov
add
jb
jae
ds
in
jge
inc
js
ficomps
mov
leave
cld
in
test
js
mov
shl
dec
pushf
cwtl
mov
cmp
push
or
sub
jbe
jno
jle
pushf
and
enter
mov
adc
lods
loopne
pop
mov
ja
arpl
aas
shl
add
ffree
ja
xor
push
rorb
mov
cmp
mov
pop
outsl
daa
outsl
in
sbb
out
icebp
cltd
jo
int3
inc
xchg
inc
inc
xchg
mov
jo
shlb
mov
or
mov
lret
jmp
mov
fwait
ds
lahf
push
stos
icebp
nop
mov
xchg
jmp
add
and
jae
mov
nop
adc
fmul
jns
or
xor
aaa
out
loop
sbbl
bound
mov
lods
xor
repz
xchg
leave
pop
orb
cwtl
mov
mov
test
jnp
dec
fs
lea
scas
xchg
cmp
test
xor
xchg
rorb
pop
cs
add
push
push
xor
repz
sti
add
mov
into
pop
mov
xchg
in
jg
hlt
add
orl
fdivs
and
dec
lods
and
jge
xor
fs
loope
rorb
mov
orl
test
add
xchg
cmpsl
iret
test
add
xor
fucomip
pavgb
mov
add
mov
xor
int3
gs
mov
mov
mov
xor
loope
jmp
and
xor
push
sbb
pusha
push
cmp
jae
loopne
mov
add
shlb
jo
push
rcrb
movb
in
inc
xchg
hlt
xlat
cmpsl
insb
cmp
add
dec
data16
lret
sbb
dec
outsb
jno
sub
filds
enter
ja
xorb
popa
or
dec
and
and
in
pop
lret
lods
imul
dec
jb
jp
test
leave
sub
movsl
xchg
xor
mov
movsb
pushf
dec
lret
mov
pop
cmpsb
mov
aam
push
xchg
xor
ret
stos
pop
mov
xchg
xor
xor
mov
or
push
js
cmp
out
outsb
daa
mov
inc
add
sbb
adc
and
cmc
sbb
cmpsb
lahf
mov
mov
pop
out
jbe
shlb
jecxz
in
cmc
push
inc
jb
in
cmp
adc
inc
fildl
push
mov
pushf
xchg
arpl
mov
mov
shl
xchg
adc
out
dec
xor
inc
test
xchg
jb
orl
inc
int
jnp
xor
scas
out
push
sbb
testl
jle
lcall
lret
cmp
or
pop
fadds
sbb
lret
iret
inc
adc
or
out
sub
or
inc
pop
int3
or
imul
das
imul
fisubrs
icebp
insl
addr16
dec
loop
push
add
fadds
mov
or
sbbb
mov
inc
and
jne
ds
mov
mov
push
in
xor
repz
pop
ret
and
in
mov
jl
and
mov
mov
stos
sub
lock
inc
cmc
inc
push
or
sub
loopne
loopne
lret
sbb
jecxz
mov
jbe
xor
dec
cwtl
jmp
sub
outsb
ret
lcall
and
xor
xchg
fistl
xor
xor
mov
int3
daa
sti
push
adc
pusha
test
aad
fbld
cmp
test
mov
pop
jb
rcr
insb
xchg
imull
push
pop
rclb
das
sbb
movsl
adc
jmp
in
or
jmp
pop
cs
xchg
inc
add
jle
jg
enter
hlt
or
pop
loope
jno
jne
in
repnz
jmp
sub
inc
addr16
pusha
test
mov
xchg
push
jecxz
cltd
aas
jns
push
sbb
pop
mov
in
pusha
in
movb
jno
call
xchg
push
and
inc
inc
in
push
dec
out
jp
sub
adc
cmp
sub
pusha
dec
and
add
scas
aas
int3
xchg
push
mov
inc
fists
xor
jge
cmp
rep
push
rcl
outsl
pop
xchg
insl
sbbb
cltd
mov
hlt
adc
lods
js
stos
add
gs
mov
mov
sti
mov
jge
push
in
adc
xor
jecxz
jne
sahf
mov
out
fsubrl
jmp
cmc
test
mov
call
jnp
cmp
dec
add
aas
xor
fsub
mov
cmp
jne
movsb
pop
in
pop
mov
pop
xchg
push
popa
arpl
lock
dec
outsl
daa
mov
add
pop
pop
adc
adc
jl
inc
jp
mov
adc
mov
mov
xor
pop
adc
adc
out
ror
push
adc
and
push
cs
out
lock
stos
mov
and
shll
adc
je
and
movsb
xor
es
fnstcw
fiaddl
addr16
imul
jge
xchg
mov
inc
add
stc
and
enter
inc
out
imul
sti
cwtl
arpl
mov
lret
or
cmp
inc
cmp
icebp
or
dec
fdivrp
jo
das
push
ss
adc
out
jecxz
imul
insl
push
adc
lods
pop
sub
mov
pop
add
jp
leave
sub
fldt
push
cmp
mov
sbb
sbb
shll
js
xor
push
arpl
fisttpl
push
fists
xorl
add
dec
pop
rcl
mov
xchg
add
inc
std
add
popa
out
pop
repz
int3
rcrl
mov
dec
or
divps
or
divb
lcall
enter
pop
jb
lcall
hlt
imul
popa
fimull
ret
call
cmp
sti
adc
push
imul
push
and
mov
mov
in
inc
add
mov
ljmp
sub
cmp
pushf
cmp
adc
sahf
pop
inc
mov
cld
sub
fisttpl
fisttpll
dec
stos
add
cwtl
mov
jl
xchg
sbb
arpl
loope
jge
scas
jo
test
dec
in
mov
lods
add
pushf
push
dec
dec
adc
cld
cmp
mov
cmpl
or
pop
in
xchg
test
push
pop
shrl
imul
mov
xchg
pop
sbb
lahf
ret
sbb
mov
fmuls
rolb
in
adc
and
sbb
jmp
stos
lea
cmp
std
jecxz
dec
mov
sbb
in
xchg
mov
out
sti
popa
mov
stos
sub
xor
cmp
mov
push
add
repnz
and
add
or
jle
xor
fisubs
xchg
test
outsl
repz
sub
pop
mov
cmp
jp
cmp
ror
sti
lods
mov
mov
cmp
inc
xchg
pop
xchg
jecxz
cmp
cmp
pop
cs
add
stos
push
pop
cmpsl
mov
imul
aam
mov
and
mov
jb
shlb
dec
xor
pop
jno
stos
adc
outsb
push
xchg
mov
ret
out
stos
idivb
rclb
pop
arpl
test
pop
ljmp
mov
cmp
sahf
hlt
jmp
insl
adc
add
addr16
lahf
pop
aad
sbb
adc
pop
lret
inc
push
inc
shr
stos
test
lret
test
jecxz
ja
add
xchg
sub
add
lock
xchg
int
xchg
in
inc
xlat
out
jbe
cmp
and
mov
or
adc
imul
int
daa
sahf
rcll
mov
jle
shr
cli
outsb
bound
sub
mov
xchg
addr16
lcall
add
mov
out
adc
or
inc
dec
fadds
cmp
mov
xchg
rorb
sub
adc
pop
push
into
pop
xchg
jecxz
into
ljmp
jne
push
cmp
into
xchg
xchg
fists
jne
rorl
iret
jge
jne
and
es
jnp
or
es
sub
aaa
mov
cmpl
mov
stos
pop
mov
or
sub
notl
repz
in
pop
pop
dec
jnp
cmp
fnsave
aad
xlat
pop
js
imul
adc
sub
jns
loopne
sahf
mov
jecxz
sub
or
shl
xchg
dec
push
test
lret
dec
in
dec
pop
mov
mov
push
mov
mov
out
in
cli
push
sbb
cmp
sbb
out
and
add
and
adc
jp
insl
mov
cmp
adc
ja
dec
mov
mov
pop
jbe
pushl
stc
xchg
pop
lahf
jp
cwtl
fisttpl
lock
cmovno
pop
in
adc
or
icebp
or
inc
and
je
mov
fmulp
adc
loop
addl
xor
js
cld
jecxz
push
inc
mov
jno
adc
dec
jecxz
stc
jl
adc
pop
dec
pop
in
lds
fildll
mov
xor
add
and
push
rol
mov
jno
xlat
ljmp
jg
mov
clc
push
jae
icebp
add
aad
sub
cmc
xor
cmc
pop
enter
mov
or
fcoms
and
addr16
push
pop
push
xchg
ret
int
sub
sub
daa
mov
mov
inc
pushw
jecxz
gs
and
inc
hlt
add
mov
fistpll
int
lea
bnd
jo
add
pusha
jae
pop
and
icebp
test
adc
ja
call
push
xchg
loope
and
or
mov
imul
pop
inc
jge
outsb
lret
push
sub
dec
xor
stc
cwtl
bound
push
mov
pop
jae
xchg
push
sub
in
aas
lcall
das
push
aas
outsb
ljmp
dec
push
mov
lods
inc
hlt
xor
cmp
insl
and
pop
pusha
lahf
xchg
icebp
mov
jg
mov
sbbb
jno
pop
pop
xor
int
fbld
mulb
ds
xchg
rcll
scas
push
sub
jecxz
dec
push
int3
fwait
scas
add
andl
mov
mov
sub
adc
data16
mov
xlat
das
cvttps2pi
dec
push
adc
std
stos
cs
mov
mov
pop
les
imul
ss
xchg
lahf
and
cmpsb
add
pop
push
aaa
in
push
popf
aad
adc
cmpsl
sbb
int3
fcmovu
jno
mov
mov
out
xchg
jge
movsl
inc
add
insl
mov
sub
jns,pn
stos
inc
mov
fsubl
lcall
arpl
cs
pop
and
cld
mov
mov
out
lock
push
icebp
add
pop
or
xchg
subb
stos
sbb
push
pop
pop
dec
dec
dec
lret
mov
adc
addr16
ficomps
outsb
lods
and
add
dec
fwait
insl
sub
adc
js
and
push
pop
lods
mov
push
adc
in
cmp
push
add
dec
jle
rcrl
mov
lods
cld
imul
aad
add
rol
loop
in
das
xor
shlb
das
jne
dec
out
int
negb
mov
cmp
iret
mov
imul
pop
mov
add
or
sub
sbb
test
inc
jne
pop
xorl
shlb
out
dec
fimull
push
aad
xlat
jno
push
push
and
mov
push
mov
in
mov
push
scas
xor
and
or
mov
sbb
sbb
mov
pop
jae
or
push
scas
mov
or
dec
jecxz
jge
mov
add
inc
adc
js
or
add
xor
dec
cmpsl
pusha
sbb
fistpll
insb
xor
fmuls
aad
xchg
call
out
jns
or
mov
fcoml
mov
jbe
push
test
push
inc
xor
and
mov
lods
cltd
pop
repz
arpl
adc
push
decb
das
inc
fwait
or
cmp
lahf
rcr
inc
push
mov
pop
lret
inc
call
add
out
or
and
pop
sbb
in
sub
rcrb
and
dec
cmp
mov
push
test
xchg
xlat
sub
movsb
bound
add
cmc
lods
xchg
and
sbb
out
das
mov
add
xchg
xlat
inc
sahf
jbe
lock
shrb
in
xor
ret
mov
test
les
ret
sbb
xor
insl
and
jg
fcomi
lret
cmc
add
mov
cs
fbstp
dec
adc
arpl
pop
imul
pushf
push
das
andb
mov
or
and
into
push
xchg
jg
pop
testl
aaa
mov
or
sbb
push
add
jge
cmpb
sahf
add
in
roll
mov
fstl
adc
pop
xchg
adc
sbb
push
sub
mov
cmp
and
jp
and
pop
ss
stos
pop
push
das
pop
push
cmovb
xchg
adc
mov
mov
vmovmskps
mov
fcmovnbe
int
hlt
lahf
nop
jle
xchg
mov
pop
jno
subb
mov
in
pop
lds
fcomps
xor
mov
and
ss
int3
jbe
pop
xchg
add
inc
movsb
adc
outsl
or
xor
hlt
inc
int
and
mov
or
mov
fucom
or
mov
xor
leave
sbb
cltd
push
sbbl
faddl
in
dec
xor
cmc
adc
pushf
sbb
jb
test
inc
dec
dec
bound
leave
and
pop
ffreep
sub
xor
and
or
dec
mov
sub
leave
aaa
xor
pop
xchg
jno
cltd
sbb
je
pushf
out
or
mov
pop
add
int
clc
add
pop
aas
imul
and
mov
and
lahf
movsb
jp
add
insb
inc
popf
ja
jle
cmpsl
arpl
dec
xor
cmp
ret
je
fwait
call
or
xchg
jle
sub
ror
pusha
faddl
cwtl
push
cld
inc
fidivs
pop
add
cmp
scas
mov
out
ljmp
push
and
mov
testb
fucomi
push
mov
jb
and
dec
xor
rolb
inc
inc
out
jo
jo
jmp
and
loope
pop
stc
jg
dec
cmp
hlt
fidivl
mov
and
pop
mov
sahf
mov
lcall
loop
jmp
cmp
and
fwait
popf
ret
add
cmpsl
mov
repnz
pop
mov
push
push
cmp
loop
and
mov
mov
movsb
lods
add
sbb
int
pop
mov
repnz
shlb
push
out
rcrl
cmpsl
cmp
pop
xchg
cmp
in
xor
jp
je
dec
test
shl
lods
add
call
push
xor
movsl
movsl
sub
mov
inc
out
pop
mov
jmp
cmpsl
fstps
xchg
imul
and
sbb
daa
cmp
jno
aas
xchg
scas
inc
xchg
data16
cmpsb
jno
dec
mov
pop
mov
pop
push
sbb
sub
arpl
dec
xchg
jecxz
dec
add
pop
cli
adc
mov
xchg
inc
pop
popa
and
repnz
gs
cwtl
aam
mov
jp
push
push
lock
cmp
outsb
lahf
nop
mov
fs
inc
fisubs
push
and
inc
cmp
lds
and
out
sub
ljmp
cmpsb
imul
popa
xchg
push
mov
lods
jle
icebp
push
cmc
jg
ret
mov
enter
dec
addb
jp
mov
pop
mov
mov
sbb
jb
pop
loopne
xchg
sbb
or
push
adc
push
or
and
addr16
pop
insb
cltd
add
push
imul
cmp
adc
push
sbb
in
outsb
js
xor
push
stos
jnp
add
pop
out
mov
mov
iret
mov
ret
mov
pop
movsb
out
push
lcall
rclb
leave
mov
imul
sub
mov
ror
cmp
out
and
xor
xchg
fwait
rolb
add
fnstenv
push
pop
mov
pop
add
out
pop
mov
fwait
repz
mov
dec
push
sti
dec
pop
dec
jb
sbb
fdivrl
cltd
sub
cmp
mov
imul
aaa
jl
mov
gs
cmpsl
stc
jne
clc
mov
add
rcll
call
mov
add
stos
addl
jno
pop
sub
add
in
test
dec
sahf
sarb
jb
test
cs
mov
pop
rclb
mov
lret
jbe
nopl
lret
repz
mov
clc
and
jmp
sti
roll
and
push
mov
xchg
push
movsb
cmpsl
mov
xchg
or
data16
ds
fwait
sti
or
dec
xchg
int3
sahf
xchg
push
lcall
sbb
ja,pt
nop
testl
pop
lock
pop
mov
clc
xchg
push
int
mov
cld
scas
cwtl
enter
lods
jmp
test
repnz
jl
out
jl
sbb
enter
mov
jp
outsb
inc
inc
mov
sbb
scas
paddw
stos
dec
fdivrl
xchg
call
mov
xchg
aas
push
mov
rcl
hlt
decb
stos
mov
hlt
arpl
dec
push
sarb
sub
jecxz
push
lahf
in
fnstenv
rorl
mov
jge
sub
mov
push
jae
mov
leave
leave
xchg
cmp
out
pop
lahf
ja
add
mov
in
ds
stos
adc
or
js
testb
je
sbb
cmc
in
addb
js
pop
out
mov
mov
mov
jmp
test
jp
adc
pop
idivb
jae
inc
add
dec
fs
ficoms
mov
lods
push
out
aam
push
jns
jp
es
insl
jmp
in
jne
and
icebp
pop
leave
xchg
jle
xchg
leave
movsl
dec
xchg
popa
mov
je
fcompl
push
mov
or
ds
mov
push
fwait
dec
pop
mov
sbb
push
idivl
dec
int
mov
mov
adc
jb
pop
lock
adc
shll
cmp
nop
aad
mov
or
sbb
xchg
jmp
jnp
repnz
inc
movsb
movsl
stos
and
mov
cmpsb
das
inc
cmc
or
xor
jns
cmp
sub
add
sbb
cmpsb
push
daa
outsl
cmpl
insl
cs
xchg
mov
fsubr
out
xor
clc
icebp
pmullw
jle
inc
pushf
lret
addr16
out
insb
out
mov
scas
sbb
pop
loope,pt
pop
sbb
invd
rcr
push
fdivrl
sti
dec
mov
popf
dec
shll
push
lds
pop
insb
int3
fimuls
pushl
lods
fadds
mov
imul
mov
aam
scas
mov
pop
dec
dec
xchg
xor
jl
loope
shrl
cwtl
mov
lods
jnp
push
popa
mov
pop
mov
cmp
inc
std
xchg
enter
mov
shrb
mov
jmp
adc
push
add
ljmp
call
sub
js
cmp
mov
popa
js
and
push
push
in
mov
inc
aam
pop
pop
xchg
pop
outsl
stos
sbb
pop
shlb
sub
loop
mov
ljmp
lahf
es
jnp
je
pop
xchg
jbe
testb
rep
dec
adc
test
xor
inc
scas
imul
xor
popf
cmpsl
cli
rcrl
iret
ror
out
add
xchg
scas
and
cwtl
loop
sbb
dec
add
popa
sub
mov
je
push
int
or
test
or
mov
mov
jne
inc
add
loop
mov
aam
xor
rclb
push
jge
scas
jge
or
lds
dec
xchg
cmp
mov
stos
in
push
outsl
stos
in
push
pop
push
cmp
ret
and
mov
jne
push
pop
xchg
daa
repz
xchg
loopne
jl
movsb
lea
pop
mov
pop
cmc
xor
nop
pop
xchg
and
cmp
mov
sub
cmpsl
cmp
es
repnz
cmp
push
and
push
xchg
pop
dec
dec
mov
mov
inc
andl
mov
xchg
mov
gs
mov
mov
ja
jp
sbb
lahf
loop
sbb
dec
in
jae
mov
leave
int
data16
lahf
mov
pushf
cmpsb
ret
jmp
stos
inc
xchg
sbb
mov
rcrl
ret
mov
xor
pop
and
dec
pop
imul
mov
push
js
out
ds
mov
or
push
outsl
in
scas
mov
inc
sahf
aam
add
jg
xchg
pop
add
mov
fisubs
fsubl
gs
cmpsl
inc
mov
out
call
push
dec
aas
add
xchg
dec
xchg
cmp
into
mov
add
jecxz
popa
jno
lcall
std
ss
ss
cmp
aaa
push
cmp
add
nop
cmp
or
pop
jp
js
xlat
push
or
lock
ljmp
dec
inc
jle
insb
sbb
call
adc
sub
in
mov
test
loop
enter
fsubrp
cmp
adc
sbb
hlt
mov
mov
adc
jno
lahf
sahf
dec
and
and
dec
jl
aaa
inc
mov
xchg
jns
mov
pop
mov
aas
pmovmskb
stos
xchg
ds
jo
cmpsl
adc
or
mov
imul
pusha
fisubl
cmp
cmp
into
push
adcb
jecxz
pushf
test
pop
mov
enter
cmp
cmp
enter
pop
xlat
xchg
add
and
add
sub
jns
dec
cmpsb
ret
cs
fld1
adc
dec
pop
xchg
sbb
cmpsl
pop
inc
push
sub
mov
jns
and
adc
js
push
push
loopne
cs
imul
std
push
xchg
dec
mov
and
jp
sub
mov
cmp
in
iret
sbb
mov
popf
movsl
insb
cmp
popf
divb
leave
aas
mov
sbb
adc
adc
aad
sub
jl
sbb
mov
lahf
mov
popa
and
push
int
enter
mov
into
adc
adc
pop
and
xchg
outsl
aam
mov
mov
test
dec
testl
adc
movd
mov
loope
rcrb
xchg
xchg
scas
or
hlt
fwait
mov
movsb
xor
dec
addl
notl
mov
bound
xchg
and
jl
dec
xchg
clc
fcompl
clc
xor
push
loop
es
sub
jp
ja
sub
sbb
jb
adc
loop
add
xchg
push
cmp
sti
sub
ret
ret
loope
cmp
and
mov
dec
dec
cltd
enter
push
adc
dec
lahf
push
pop
nop
cmc
cmc
daa
inc
fildll
pop
mov
pop
loop
out
pop
pop
fldenv
or
cmpsl
fnsave
inc
push
pop
int
jecxz
lds
dec
mov
aaa
mov
push
adc
sub
and
movsb
jns
add
es
adc
inc
lret
sbb
pushf
ret
mov
fstps
push
xchg
add
and
mov
pop
insl
aad
cld
or
fcmovbe
add
pop
imul
push
mov
imul
aad
sbb
add
pop
or
aad
xor
iret
test
jno
mov
push
testl
cmpsl
call
sub
adc
fs
cmpb
sub
movsb
and
xor
sbb
mov
cltd
cld
jnp
gs
and
outsb
cld
aad
sbb
pushf
test
insl
mov
addr16
loop
push
jns
sarb
sub
and
push
lret
out
xor
cmp
or
cmp
jp
test
scas
mov
push
xchg
sti
movsl
stos
or
dec
jge
cmc
cmpsb
inc
and
pop
pop
mov
cmpsl
lcall
lods
cli
rorb
das
xor
jnp
xchg
dec
sbb
add
ss
push
adc
mov
pop
loope
xor
sub
mov
jne
popf
ss
jae
xor
ja
cwtl
repnz
popf
fisttpl
add
sbb
pop
xor
shll
lods
pop
and
hlt
in
sub
xchg
in
scas
dec
in
in
int
in
inc
adc
pop
in
imul
and
popa
outsb
sub
adc
pop
adc
push
mov
mov
enter
jg
and
pop
or
add
push
loop
mov
popl
lods
cmp
sub
pop
ja
mov
mov
inc
mov
insb
adc
sti
insl
mov
adc
call
mov
data16
outsb
xchg
xchg
leave
push
or
stos
and
aas
out
pop
insl
xor
sub
adc
sub
es
mov
mov
scas
rcll
cwtl
adc
xchg
pop
pop
add
lret
fldt
fdivr
mov
test
clc
jmp
inc
lock
add
and
aaa
cmovbe
les
jbe
dec
pop
std
xchg
outsl
je
xor
pop
mov
daa
orb
jle
jbe
sub
adc
das
adc
movsb
arpl
push
std
std
mov
sbb
jmp
out
xchg
push
cmp
mov
dec
push
pop
fists
sahf
rol
pmuludq
pop
insb
mov
js
iret
push
push
fistpll
lds
cmp
or
inc
std
rcrb
inc
icebp
adc
sahf
mov
push
jmp
aaa
dec
fwait
popa
loopne
jae
fwait
or
xor
mov
jecxz
add
arpl
dec
inc
mov
jnp
adc
daa
and
fmull
sbb
pop
jmp
push
mov
lds
mov
out
adc
pop
jp
and
xchg
lds
in
cmp
cmp
add
test
mov
push
ss
mov
shl
cmp
outsl
sbb
xchg
ja
idivb
pop
in
ss
repz
pop
shrl
lea
pop
nop
fiaddl
inc
push
or
mov
adc
or
push
push
movl
push
lds
sub
mov
stos
inc
testl
jo
push
add
xor
xchg
mov
int
or
mov
lock
sti
add
jbe
les
dec
pop
mov
dec
popl
sbb
test
jns
aaa
mov
sub
sbb
inc
iret
add
popf
push
arpl
sub
jnp
cmp
or
stos
in
fldt
xchg
in
cltd
mov
mov
in
addb
inc
inc
sub
xor
lcall
pop
jne
push
inc
addr16
das
lret
leave
fidivs
dec
dec
mov
and
aad
addr16
and
sbb
push
jb
int
mov
push
ret
imul
mov
or
add
bound
pop
inc
push
cmp
idivl
xor
mov
cwtl
repnz
and
outsl
and
inc
cmp
xor
in
sahf
jge
push
or
fisubrs
lods
inc
sbb
mov
xor
mov
fs
xor
cs
nop
sahf
inc
adc
sbb
lock
pop
and
or
fadd
xchg
dec
daa
and
pop
in
lds
je
dec
jge
cld
adc
insl
mov
jnp
inc
jae
add
pop
and
pop
ficoml
mov
lret
icebp
adc
insb
cs
test
ret
mov
mov
sub
jnp
addb
sbb
out
imul
mov
lahf
fcom
std
idiv
mov
fs
imul
arpl
jb
repz
scas
andl
cltd
dec
or
sub
fbstp
mov
dec
addl
out
push
inc
movsl
ss
outsl
lds
lds
ret
and
mov
jecxz
pop
jle
enter
daa
fs
push
mov
inc
mov
xchg
push
xchg
aad
shll
scas
fdivrs
scas
mov
addr16
pop
popf
imul
nop
mov
pop
xchg
jno
push
shrb
cltd
movsl
in
sbb
js
sub
stos
cli
in
or
add
mov
jge
gs
rcrb
push
fsubrs
lret
mov
and
mov
and
add
push
ret
sub
call
mov
push
adc
xchg
or
scas
mov
imul
dec
xor
jb
loopne
cld
pop
decb
jecxz
or
stos
mov
sahf
ss
mov
jmp
pushf
xchg
pop
fwait
xchg
addb
nop
mov
cmpsb
inc
mov
fs
or
sti
push
xchg
push
out
sbb
pushf
jnp
nop
outsb
out
mov
mov
int
push
inc
jle
sub
xchg
in
ja
clc
ror
sub
sbb
jmp
scas
mov
xor
fwait
outsl
loope
ret
inc
pop
push
lds
sub
dec
cwtl
inc
adc
aas
pop
pop
cmc
daa
mov
in
cwtl
add
cmpsl
out
loopne
loopne
push
pop
jbe
je
jae
add
pop
and
add
mov
or
sbbl
sahf
xor
iret
cmp
leave
pop
inc
and
in
sbb
mov
scas
push
jae
cmp
add
sub
dec
ret
sarb
and
and
mov
mov
xor
clc
cmp
and
cs
pop
stos
mov
rclb
out
inc
fs
push
in
inc
aad
push
in
fcomps
lea
das
jne
movsb
int
and
std
mov
fdivrs
pop
jo
dec
xor
movsb
das
jle
cmc
sbb
lcall
adc
out
pop
pop
gs
push
mov
push
pop
in
les
mov
ds
pop
andl
jnp
imul
gs
mov
stc
adc
aas
mov
pop
mov
insl
xorl
loop
cmp
adc
lcall
xchg
cmpsb
add
push
pop
dec
or
mov
movsl
sub
mov
addr16
ds
lods
call
xchg
add
out
mov
mov
push
jns
sbb
pusha
cmp
arpl
dec
cmpsb
jle
sbb
push
adc
sbb
mov
pushf
or
inc
fcoml
imul
roll
aam
push
inc
insb
leave
xchg
bound
stos
mov
jg
lock
mov
pinsrw
lods
out
jae
and
mov
mov
es
test
sbb
testl
cmpsb
neg
insl
mov
xchg
push
movsb
add
xchg
inc
je
xchg
les
mov
mov
out
loop
fs
rol
js
out
sti
xchg
pop
and
dec
pop
push
dec
stos
sub
mov
lods
dec
add
pusha
les
mov
dec
and
mov
mov
sti
add
in
inc
xchg
dec
dec
inc
add
lret
mov
cmp
jle
sbb
cli
jecxz
hlt
jge
insb
lahf
cmc
test
test
sub
jae
bound
pop
rorl
idivb
adc
shrb
push
repz
xchg
popa
lods
push
mov
lret
shlb
cwtl
lods
sub
jmp
sbb
jno
add
jp
hlt
sahf
mov
fcomps
pop
mov
jge
fstpt
sbb
cmp
inc
sbbl
add
lods
rorb
movsb
cmp
insb
iret
xor
fdivrs
mov
pop
pop
popa
roll
pusha
pop
shll
nop
mov
dec
lds
jg
mov
cs
fmull
jns
imul
cmp
or
adc
adc
xor
fstps
and
xor
mov
imul
nop
scas
lahf
cmp
ljmp
cld
stc
xor
mov
inc
ret
cmpsl
sbb
sub
outsl
cmc
mov
mov
dec
bound
addb
clc
daa
jnp
inc
inc
mov
js
fdivr
sbb
mov
and
and
cld
cmp
pushf
psubd
dec
mov
add
lret
jge
and
mov
cs
adcb
cltd
xor
outsb
sub
mov
inc
in
fldl
mov
test
inc
andb
mov
adc
dec
cwtl
or
imul
in
push
loopne
int3
dec
mov
mov
push
dec
aad
mov
add
inc
push
les
mov
stos
fucomi
mov
pop
xor
jnp
mov
sbb
inc
dec
pop
mov
gs
add
test
push
cmp
mov
je
addr16
test
aad
inc
pop
jae
lahf
xchg
in
add
or
and
mov
jno
mov
jne
in
and
pop
xor
iret
fistl
xor
adc
inc
push
inc
cltd
push
sub
stc
aam
push
add
fistl
lds
lcall
into
mov
pop
ja
inc
dec
scas
cwtl
mov
jb
sub
inc
stc
push
pusha
and
pop
jecxz
js
shll
mov
insl
inc
mov
outsl
insl
ja
in
icebp
push
cmp
xor
scas
sbb
mov
scas
jae
mov
loop
and
mov
fbstp
jae
test
cmp
sahf
je
iret
and
test
mov
fwait
sbb
or
jg
pushf
xor
mov
sub
pop
xor
fsubp
pop
js
fldcw
lcall
jge
xchg
mov
jns
mov
ss
mov
movsl
aad
jae
lock
cld
pop
add
jno
shlb
fistpl
loope
pop
incb
sub
ds
sahf
mov
sub
popf
inc
outsl
push
nop
lods
repz
test
cmpsb
subb
imul
pop
cmpsl
cmc
xchg
dec
cmp
popa
push
adc
push
repnz
cmp
scas
xchg
mov
lret
mov
scas
pop
test
stos
add
mov
mov
dec
xor
mov
cmp
xchg
jp
or
add
js
lahf
subb
inc
xorb
repz
fistpll
icebp
aad
or
inc
adc
dec
xchg
nop
and
dec
mulb
icebp
mov
jb
dec
fidivs
test
adc
push
mov
outsl
fnstcw
shlb
xchg
divl
inc
cltd
mov
lock
and
popf
ja
inc
adc
sbb
adc
cmp
movsb
lods
sbb
and
add
dec
dec
xchg
out
imulb
mov
and
fcoms
test
mov
add
jb
or
cmpsb
test
cltd
sbb
pop
mov
inc
dec
popf
jno
movsb
mov
jno
mov
jno
fdivrl
int3
int3
xor
and
cltd
aam
jge
pop
or
ljmp
sub
fcomps
and
pop
lock
inc
xchg
mov
jno
push
loope
test
ficoml
into
sbb
outsl
out
xor
sub
mov
pushf
fidivs
jecxz
sti
out
or
movb
ja
mov
in
mov
gs
std
mov
push
jb
inc
mov
cmp
xchg
out
mov
fldenv
cmp
outsb
in
push
add
loopne
jnp
add
jl
xchg
xor
std
out
jmp
push
xchg
mov
xchg
sbb
addl
popf
into
mov
sub
nop
jg
jbe
imull
or
push
sub
js
sub
mov
mov
test
mov
push
fwait
add
cmp
jecxz
nop
jp
lcall
dec
pop
pop
std
inc
pop
mov
pop
or
pop
cmp
sbb
jp
loop
rclb
sbb
sahf
orl
cld
roll
cltd
dec
fisttps
cmc
in
out
dec
add
subb
cli
xchg
rcr
in
leave
pop
arpl
xchg
negb
out
mov
pop
pop
in
shl
das
mov
mov
xchg
addr16
icebp
xchg
les
lds
sbb
ss
push
fldcw
adcl
imul
mov
xchg
test
daa
adc
test
push
pop
daa
xchg
cmp
mov
les
movsb
sbb
in
jno
xchg
jmp
mov
jp
nop
dec
popf
pop
aaa
bound
into
mov
loopne
or
add
in
push
inc
sub
fsubrs
aaa
xchg
jb
loopne
in
cs
cmp
xacquire
jg
pushf
rclb
fistl
mov
mov
aam
inc
cmp
pop
inc
or
lds
ljmp
inc
and
push
fstps
and
lea
aam
outsb
in
in
xor
inc
rorb
mov
push
push
adc
xchg
sub
mov
or
bound
or
xor
icebp
aaa
pop
cmp
ss
mov
sbb
lods
repz
popf
dec
pop
hlt
lret
cmp
cs
orl
pop
mov
xchg
push
sub
lahf
daa
sbb
lcall
loopne
sub
add
ds
lds
or
fcmovb
jo
repnz
push
gs
pop
stc
int3
jbe
icebp
sarb
pop
xchg
shufps
jge
clc
inc
fs
iret
out
add
movsb
adc
nop
sbbl
mov
push
cmp
xchg
push
das
mov
inc
mov
mov
adc
dec
cltd
pop
jmp
or
mov
inc
cmpsb
outsb
add
push
mov
cmp
cmp
xchg
dec
push
jge
fistl
push
or
ret
lcall
inc
add
mov
cmp
push
and
ja
mov
out
and
clc
cmp
or
jo
mov
out
mov
pop
test
push
scas
jnp
mov
in
jmp
shrb
mov
arpl
sbb
push
push
hlt
fisttpll
shlb
xor
inc
jns
sbb
add
lock
repnz
jge
popa
cmp
ficomps
popa
not
int
mov
push
pop
mov
jp
xor
loop
imul
mov
mov
movsb
lret
mov
mov
test
ss
inc
stos
push
nop
call
adc
in
shll
and
scas
les
add
add
sbb
popa
dec
call
cmpb
fprem1
jg
fistpll
fwait
daa
jns
test
gs
push
movsb
pop
scas
mov
cmpb
mov
xlat
sub
lcall
push
pop
iret
lahf
out
mov
or
lods
sub
xlat
fnstcw
popf
fs
cld
sub
xchg
rcrl
movsl
je
mov
cli
fucom
int3
cmpsb
leave
and
lds
gs
push
and
inc
push
fwait
inc
xchg
cli
add
scas
xor
sarb
jo
pusha
xchg
not
ror
shrl
cmp
bound
dec
or
mov
imul
iret
lret
ss
int
mov
fcoms
sarb
daa
mov
xorl
mov
cwtl
out
sbb
repz
test
daa
shlb
xor
mov
jmp
fbld
and
rorb
cltd
xor
insb
fwait
or
push
jecxz
fucomip
push
mov
stos
testb
jecxz
push
rcll
xchg
pop
in
cmp
addl
xchg
push
dec
aam
sti
iret
pop
out
pop
jbe
dec
inc
out
dec
lds
sub
aaa
fcmove
push
test
adc
inc
std
ljmp
cmp
in
push
pop
cld
xchg
jmp
cmp
xchg
pop
stos
aaa
scas
mov
push
adc
inc
lods
mov
into
inc
add
and
fs
dec
push
add
inc
cwtl
mov
enter
mov
mov
cld
mov
inc
cltd
mov
scas
lock
inc
mov
dec
cmp
dec
arpl
das
mov
clc
adc
cmpsl
adc
stos
loop
mov
popa
mov
and
jae
lods
sbb
mov
fstps
test
arpl
push
dec
cltd
inc
mov
cs
pop
jbe
mov
xor
mov
dec
xor
pop
cmp
push
xchg
mov
or
popa
adc
push
in
or
mov
fisubs
fldt
decl
les
add
stc
out
leave
sub
negb
cmp
inc
fdivrl
jl
ret
ljmp
outsb
and
daa
inc
in
fidivrs
mov
xchg
shll
aas
cmp
mov
outsb
adc
stos
mov
addb
mov
int3
in
mov
cmc
adc
je
sub
inc
push
pop
rolb
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
jae
popa
addr16
outsl
js
add
add
jo
imul
loop
add
add
add
add
add
loop
add
add
add
add
add
add
add
