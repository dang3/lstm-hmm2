pop
cli
dec
jno
pop
cli
cltd
and
xchg
lret
lds
imulb
int
aad
jne
inc
call
jge
mov
incl
and
dec
pushf
push
mov
inc
fbld
fistpll
hlt
cmp
sbb
es
loope
pop
outsb
aad
or
push
pushf
into
hlt
aad
jge
mov
daa
negb
push
xor
loope
jb
ret
popf
fwait
and
pop
neg
mov
add
sub
dec
lcall
cmp
mov
movsb
jmp
xlat
mov
out
xor
mov
mov
lahf
xchg
add
dec
ret
dec
les
push
cmp
bound
lea
mov
pop
xchg
mov
insl
out
sti
add
add
mov
xlat
int
int
ja
movsb
cmp
test
mov
in
dec
sarl
push
mov
sti
icebp
repnz
pop
sbb
dec
cmp
divl
sahf
ljmp
ret
cmp
nop
roll
xor
xchg
inc
mov
mov
mov
mov
cmp
loope
push
lock
icebp
popa
pop
mov
adc
jmp
push
mulw
push
cmp
jl
nop
mov
xchg
jp
or
js
push
mov
iret
ror
jp
stos
stos
mov
lods
fistpl
fldpi
addb
fldl
adc
mov
adc
fsubs
loop
pop
add
repnz
sbb
cwtl
addr16
orb
fmull
iret
pop
jg
and
sbb
push
jne
xchg
push
call
rclb
mov
rcll
or
and
ljmp
cmpsb
or
mov
mov
push
nop
int
mov
cmpsl
sub
mov
sbbl
iret
mov
dec
scas
jb
stos
jmp
mov
inc
cmpsb
lea
xchg
ss
daa
shrl
ret
cltd
mov
xchg
fidivrs
adc
aam
mov
xor
xchg
fldt
stos
mov
in
mov
in
mov
fldl
outsl
xchg
xlat
enter
in
inc
mov
pop
jne
pop
fildl
cmpsl
jae
or
jno
les
sbb
insl
mov
jmp
icebp
pop
mov
dec
mov
scas
out
cmp
cmpsb
in
mov
and
push
jmp
cld
and
xorb
fildll
cmp
add
push
dec
int
pop
adc
xchg
loopne
mov
fnclex
cmovl
mov
mov
fcomi
icebp
bound
pop
ficoml
sbb
insl
roll
mov
pushf
xor
sub
xor
or
std
inc
mov
push
fdiv
sub
sbb
arpl
xchg
scas
dec
mov
sarb
mov
sbb
sub
hlt
nop
fsubs
hlt
xchg
sarl
stc
pop
jns
sbb
movups
out
int
sbbl
mov
and
xor
ret
aad
data16
lret
lahf
jo
push
cmpsl
xchg
in
lret
ds
cli
inc
in
inc
or
sub
push
mov
ljmp
ret
sub
push
add
push
mov
call
rorl
mov
fdivrl
pop
mov
outsl
jg
xchg
jp
sbb
pushf
mov
frstor
ret
sub
mov
int3
dec
div
leave
push
add
or
ret
test
mov
mov
shll
arpl
pop
sbb
bound
mov
mov
dec
sti
xchg
repnz
mov
push
je
addl
or
in
fnsave
lret
push
and
scas
pop
lcall
cmp
rcr
push
sub
xchg
push
lret
sbbb
rorl
sbb
mov
fisttps
popa
jae
push
or
out
enter
stos
dec
clc
dec
mov
fldenv
ret
pop
idivb
pop
cld
xchg
clc
xchg
movsb
cli
cmp
adc
fiaddl
push
inc
pop
pop
ret
xchg
je
into
mov
jp
adcl
sbb
cmp
pop
loopne
stos
mov
push
insb
lods
jb
orl
out
mov
dec
push
clc
call
shrl
cwtl
je
test
daa
scas
fidivl
fsts
inc
imul
in
aad
mov
movsl
xor
call
or
mov
nop
loop
push
sbb
push
iret
dec
subl
mov
stos
sbb
xchg
loop
adc
aas
xchg
mov
aaa
mov
popl
mov
outsb
push
lret
xor
repz
add
mov
orl
mov
push
adc
add
addr16
addr16
sahf
xor
xchg
jb
add
pop
rcll
adc
dec
mov
mov
xorb
jg
add
mov
mov
adc
xchg
jae
sbb
les
in
in
mov
insl
cmpsl
sbb
shll
mov
idivb
cmpsb
aad
mov
mov
in
xchg
push
fistps
xchg
lds
cwtl
xor
fdivrp
negb
and
lret
loopne
xor
dec
mov
sub
outsb
pop
enter
mov
inc
icebp
mov
push
int
jge
sbb
mov
xchg
xchg
fdivs
fadds
adc
dec
pop
stc
into
mov
hlt
mov
push
jg
movsl
out
mov
ret
push
loopne
sahf
dec
ret
push
cmc
pop
ret
adc
and
test
xchg
pop
jmp
mov
adc
test
mov
mov
jnp
stc
pop
fwait
jecxz
jg
int
cs
pop
lods
sbb
sub
push
lea
cmc
sbb
adc
cmp
cltd
push
and
clc
stos
and
das
out
dec
into
cmp
repnz
scas
cmp
dec
lret
cmp
pushw
jmp
adc
push
dec
add
loope
gs
adc
testl
push
inc
test
inc
sbbb
insl
add
push
negb
movsl
pop
jb
pop
xchg
jo
out
push
xor
push
rcrl
xor
add
cmp
stos
shll
jmp
cmp
push
pop
and
ds
jl
pop
mov
cmc
adc
outsb
sub
out
outsb
adc
mov
fldt
stos
add
dec
add
js
data16
jns
adc
pop
xorb
mov
enter
mov
cmp
data16
ss
out
ja
push
leave
out
movsb
push
inc
rep
dec
insb
cwtl
inc
clc
ljmp
shlb
dec
loope
adc
dec
inc
cmp
xchg
or
subb
xchg
into
test
xchg
mov
sub
roll
fsubr
xchg
test
sub
inc
mov
call
arpl
scas
jmp
jne
inc
pop
fisttpl
mov
ficoml
mov
xchg
or
sub
inc
mov
pushf
and
mov
outsl
sbb
rol
xchg
dec
addr16
push
jns
pop
pushf
pop
push
mov
in
inc
inc
mov
insb
jecxz
xor
std
shrb
dec
mov
rol
in
cmp
sbb
cmp
and
sbb
sbb
shlb
fwait
stos
cld
mov
aam
pop
mov
out
dec
push
dec
ja
leave
std
maskmovq
pop
rcrb
or
scas
cmp
push
push
xchg
xor
je
pop
je
xlat
and
mov
test
repnz
in
sti
or
jp
lock
incl
inc
xlat
inc
mov
pop
sbb
repz
inc
testb
sbb
and
out
pusha
clc
and
jp
outsb
out
mov
mov
dec
int3
jbe
insl
mov
icebp
lds
cmp
push
out
xchg
jbe
mov
mov
seto
testb
cs
addr16
jp
xchg
mov
into
nop
adc
das
sub
xlat
mov
and
xchg
stos
popa
xor
fimuls
and
mov
fs
lret
in
lock
and
fdivrp
hlt
ror
push
vphaddubq
fwait
jmp
add
pop
inc
jae
push
mov
jmp
add
pop
jl
js
aam
cmp
inc
es
pop
jge
mov
enter
cld
sahf
dec
cmp
jb
inc
repnz
sbb
rcrl
into
mov
lock
or
popa
sub
xor
push
mov
roll
rol
popa
fcmovnu
nop
fstpt
scas
pusha
es
sub
int
sub
mov
imul
and
ret
or
daa
enter
lds
sub
sbb
adc
outsb
fimuls
push
sbb
mov
adc
les
push
jb
or
xchg
xchg
das
test
nop
add
andb
pop
in
nop
jg
mov
fldlg2
lahf
popa
adc
xchg
shlb
inc
mov
loopne
and
pushf
push
aad
clc
movsb
test
stc
jmp
jnp
xchg
das
arpl
xchg
hlt
mov
test
xor
cs
xchg
imul
xor
or
rol
in
ljmp
sub
cmpsb
sbb
cwtl
ljmp
inc
inc
add
mov
shlb
lea
insb
jnp
fisubrs
or
inc
in
movsb
fistps
pop
xchg
mov
xchg
sarl
pop
push
popa
aad
filds
inc
stos
sbb
pop
sbb
subb
push
add
xchg
xor
dec
push
add
jge
or
jne
or
stos
stc
imul
pop
idivl
jbe
and
test
adc
sub
mov
fdivl
dec
lods
stc
mov
and
fimuls
in
neg
sub
mov
dec
mov
insb
cs
lds
mov
dec
rclb
pop
mov
mov
enter
mov
popl
fnstenv
movsl
cli
cmp
lea
nop
jbe
xchg
sbb
icebp
xchg
mov
pop
fdivs
mov
outsl
ss
sub
cmp
hlt
fisubs
ficompl
in
hlt
jecxz
or
pop
xor
push
or
jge
mov
push
inc
jnp
int
xchg
adc
add
xchg
cwtl
sbb
mov
dec
cmpsb
sub
inc
mulb
scas
test
cmp
in
sbb
jge
in
data16
inc
in
push
inc
in
jge
dec
cs
pop
push
pusha
mov
push
loopne
cwtl
inc
repz
imul
xlat
aaa
std
pop
rcl
jle
or
jp
stos
aad
popf
ss
pop
cltd
outsl
enter
mov
fisubrl
add
clc
out
mov
jl
dec
push
push
testb
mov
mov
mov
push
aaa
sbb
negl
movsb
cwtl
sbb
arpl
pusha
sub
mov
inc
adc
popa
pop
push
mov
sub
lcall
xchg
insl
fcoml
jecxz
jo
inc
cmc
cltd
add
vrcpps
adc
pop
dec
mov
sbb
repz
inc
mov
or
hlt
lret
loop
jmp
sbb
lahf
xchg
mov
push
repz
and
cltd
adc
xor
lret
ret
jge
jle
jae
push
pusha
inc
je
icebp
orl
or
mov
loop
fyl2xp1
push
nop
pop
lods
jle
cmp
sub
xchg
mov
fstl
notl
insl
jns
cwtl
inc
xor
pop
mov
xchg
lods
adc
and
inc
xor
mov
scas
dec
lret
lock
iret
out
add
call
testl
push
ret
mov
cmc
push
sti
push
data16
nop
insl
push
fisubrs
lret
sbb
mov
movsb
clc
or
ja
subb
lret
sbb
mov
aad
ja
lret
out
add
out
pop
gs
xchg
fwait
das
loopne
cwtl
pop
cs
jmp
nop
mov
pop
fsts
insb
pop
dec
and
cli
out
cltd
mov
movsb
and
pop
push
in
cmp
inc
stc
lahf
and
inc
arpl
lcall
mov
fists
mov
xchg
fdivrs
loopne
sahf
lcall
outsl
outsb
outsl
pop
cmc
adc
lcall
dec
faddl
lods
cwtl
push
out
sahf
shll
pop
pop
ja
dec
movsb
rcrb
mov
rcrl
cmpsb
mov
push
and
jnp
pop
pop
xor
sahf
or
bound
pop
adc
mov
mov
incl
ret
inc
push
imul
stos
push
es
cmpsb
pop
cltd
into
int3
push
add
push
das
es
outsl
mov
ret
repz
or
jmp
in
push
pop
xor
int3
mov
mov
cmc
sbb
je
pushf
mov
pop
int3
sti
jo
lods
sub
add
pushf
scas
int
and
cmp
das
ljmp
popa
xor
sahf
sub
cltd
push
cmpsb
lea
and
ret
pop
and
test
or
sbb
mov
ror
mov
mov
sub
adc
push
int
in
in
lahf
dec
push
loopne
or
cmpb
sbb
push
push
jno
cmp
orl
in
xchg
push
push
popf
push
sbb
imul
bound
popa
pop
pop
push
sahf
or
int3
mov
jns
pop
lret
sub
sbb
cltd
aam
repnz
bound
mov
pop
sbb
mov
std
addb
je
in
inc
shll
mov
gs
mov
push
bound
mov
sbb
xchg
push
pop
lds
mov
negl
je
insb
jp
sbbl
dec
cs
ljmp
inc
shlb
test
or
inc
xchg
mov
jl
or
add
mov
xchg
mov
loope
mov
cmc
stc
mov
add
fdivrl
mov
sub
addr16
adc
repz
stos
inc
inc
and
xchg
inc
mov
xchg
push
mov
inc
adc
inc
push
mov
cmp
imull
xchg
repz
int3
fsubr
bnd
movsl
aam
out
lcall
and
inc
jns
negl
lret
push
mov
ljmp
inc
jne
clc
jp
mov
test
mov
adc
push
aad
ret
insl
imul
cmpsb
lea
cmp
mov
cltd
push
xchg
xchg
mov
gs
test
and
adc
lds
nop
pop
and
push
dec
xor
xchg
pop
push
aas
repz
push
dec
mov
dec
lahf
jae
cwtl
or
fldenv
sbb
sub
nop
inc
or
mov
jbe
add
jno
adc
jb
xchg
mov
enter
jp
pop
add
xor
inc
std
out
xlat
adc
inc
fistpll
cmp
out
jge
xchg
push
jo
xchg
popf
cltd
jbe
and
sbb
pushf
cmpsb
in
scas
mov
es
jp
test
sbb
shrb
and
sbb
or
sub
stc
fwait
xor
mov
in
cmp
dec
sarb
rcrb
ljmp
js
out
push
jmp
and
in
cltd
push
out
int
push
sub
or
add
pop
jbe
popf
mov
inc
adc
sti
cmp
jmp
mov
and
in
aaa
sahf
or
fisubl
addb
dec
mov
and
jmp
lods
add
int
aad
lret
loope
push
inc
fcomps
sbb
pusha
push
push
hlt
add
out
pop
xor
xchg
lahf
push
das
add
dec
mov
or
or
jecxz
pop
ds
pop
pop
pop
idivl
adc
ret
stos
add
pop
sub
daa
push
sub
xchg
and
dec
insb
test
push
rcr
mov
inc
xchg
mov
mov
int
ds
cli
out
xchg
fisttps
dec
fisubrl
insb
in
mov
add
mov
imul
imul
jo
add
mov
xchg
and
fwait
bound
add
xlat
push
dec
inc
pop
pop
mov
cmp
and
lret
adc
cli
and
mov
sarl
adc
sub
mov
test
loop
icebp
sti
lods
popa
or
mov
add
mov
adc
clc
cmp
adc
jecxz
lds
imul
and
adc
cmovno
mov
pop
shl
dec
inc
shll
mov
fistps
push
insb
test
cld
sub
pop
out
add
mov
loope
cmpsl
xchg
call
add
push
adcl
stos
sub
loopne
into
stos
mov
jbe
pop
push
add
sti
loop
inc
shrl
xchg
dec
dec
call
and
int
mov
cs
jl
push
jle
mov
adc
bound
in
adc
mov
sbb
insb
aam
popa
push
pop
lods
lret
repnz
pop
dec
lahf
add
or
pop
fbld
sub
adc
bound
sbb
mov
push
lret
popa
testl
ja
pop
stc
pop
rcl
popa
push
test
imul
in
sub
fmuls
insb
lock
xor
outsl
iret
stos
xchg
push
shlb
imul
mov
sbb
divl
xchg
lret
mov
cwtl
rcll
xchg
mov
dec
int3
lock
fildl
outsl
in
mov
out
stos
dec
xlat
mov
add
fsubp
add
testl
test
mov
fdivs
cs
mov
cmpsb
mov
aaa
iret
test
sarl
pop
inc
cmp
fs
xchg
das
dec
mov
sub
clc
stos
push
push
pop
push
jp
xchg
test
xchg
and
inc
pop
xchg
cmp
and
scas
fldenv
leave
cmp
mov
scas
int3
outsb
push
testb
ja
dec
inc
xchg
cmp
and
xchg
out
movsl
jp
jb
lret
mov
xchg
or
or
imulb
out
movsl
aas
adc
decl
pop
mov
jne
or
cmpsb
test
out
pop
hlt
adc
ja
imul
push
adc
mov
xchg
mov
adc
push
push
out
adc
inc
sbb
and
test
push
aad
mov
push
xchg
fdivp
das
pop
inc
stc
xor
rol
and
inc
mov
popa
pop
jge
push
loop
es
pop
mov
sbb
sub
cmp
add
mov
mov
testl
je
cmp
xchg
adc
outsl
test
mov
pop
mov
push
fwait
push
repz
mov
lock
jo
xchg
repz
in
ret
loop
sbb
dec
aaa
jg
lock
sarb
stos
sahf
mov
adc
mov
lea
sbbb
add
jo
push
out
aad
mov
fcmovne
mov
aas
mov
popa
sub
inc
push
in
cwtl
repnz
xchg
mov
mov
xchg
mov
ljmp
lock
aad
lahf
mov
loop
and
xor
xchg
mov
cmpsl
xlat
sbb
mov
fadd
jle
push
inc
stc
push
jmp
notl
jge
add
ljmp
pop
cmp
hlt
jo
sub
scas
xor
xlat
adc
xchg
push
pop
call
out
jnp
jns
test
imul
fistpll
xchg
ja
cld
insl
divb
and
or
mov
or
inc
add
and
pop
sub
dec
dec
sti
xor
lods
sub
sbb
hlt
xchg
arpl
add
jnp
fcmovnbe
add
stos
repz
arpl
fcomip
xlat
or
call
into
inc
jle
inc
pop
inc
jbe
clc
fcmovb
pop
sahf
cmpsb
xchg
mov
outsb
add
fimuls
sahf
cmp
loopne
repnz
xchg
and
dec
sbb
stos
add
adc
ds
sub
into
mov
xchg
mov
sbbb
insl
data16
xchg
imul
rcl
cmpsb
add
outsb
bsr
sbb
add
pop
fmuls
lods
imul
mov
call
mov
sub
lea
bound
sahf
sbb
frstor
stc
dec
push
nop
int3
movsb
imul
es
popa
cwtl
mov
pop
xchg
rcrb
push
sbb
out
pop
outsl
in
dec
pop
mov
or
jp
lret
cmp
stos
rcrl
sahf
filds
mov
xor
cli
clc
mov
ss
stc
push
and
repnz
out
arpl
popf
mov
arpl
mov
adc
xchg
and
pop
mov
mov
mov
pop
push
jae
stos
fsts
popf
sub
clc
call
pop
outsl
daa
jmp
adc
xchg
jns
test
and
cmpsl
fiadds
shlb
cmc
xlat
stos
jno
jmp
stos
fildl
clc
stos
xor
inc
dec
jbe
xlat
cmc
repnz
mov
push
in
in
or
orl
pop
in
cmpsb
jmp
fidivl
mov
pop
mov
data16
iret
movsb
dec
faddl
mov
into
sbb
test
push
shl
loop
push
sti
mov
lcall
scas
xchg
mov
inc
in
xchg
lds
and
fdivrs
shrb
push
in
nop
mov
out
mov
mov
pusha
les
fsubr
rcl
push
mov
mov
mov
dec
jle
lods
mov
mov
xor
fwait
ret
dec
mov
aad
jbe
pushf
and
sbb
jecxz
hlt
xlat
outsb
xchg
dec
in
enter
or
out
icebp
loope
and
out
fistpll
sbb
add
in
add
ja
in
insl
test
fnstenv
push
push
ljmp
adc
mov
lcall
mov
mov
xlat
fcmovu
cmc
pop
ret
lods
pop
les
stc
por
xchg
jo
test
inc
adc
rolb
arpl
ss
ret
addb
movsb
push
sub
fs
sub
push
mov
mov
push
mov
out
cmp
xchg
outsb
cs
cmp
inc
mov
mov
and
das
andb
pop
test
cld
ds
adc
fnstcw
jb
fnstenv
data16
xchg
in
lret
lods
in
movsl
test
and
adc
xchg
stc
dec
and
sahf
fwait
sub
or
repnz
hlt
push
mov
mov
cli
gs
sbb
adc
inc
loope
test
push
aad
fistl
out
stc
pop
pop
inc
pusha
jecxz
mov
addr16
ja,pn
lea
jl
das
pushl
push
inc
xchg
sub
cltd
in
pop
xchg
movsb
repnz
pop
aas
mov
sbb
push
roll
xlat
push
xor
lahf
shrl
or
pushf
imul
or
addr16
adc
test
pop
idiv
mov
daa
fs
or
in
xor
in
gs
inc
add
sbb
fdivrp
mov
mov
fwait
loope
mov
mov
dec
out
js
mov
test
jecxz
in
xor
mov
pop
decl
cld
sahf
jmp
ja
cwtl
and
mov
lahf
icebp
mov
push
imul
pop
lret
xor
sbb
in
imul
xor
ret
and
dec
rcrb
mov
add
outsl
add
mov
jo
cmp
not
int3
push
icebp
xlat
pop
es
lods
stos
test
mov
test
clc
dec
push
fists
int3
ffree
aad
cltd
fwait
dec
adc
and
or
ret
call
fwait
ja
push
or
dec
xchg
and
inc
inc
pop
jmp
repz
fwait
in
lahf
inc
out
xchg
mov
mov
test
sbb
aaa
adc
add
cmp
fwait
leave
loope
or
and
out
mov
stos
stc
fwait
jmp
int
jno
adc
pusha
sub
mov
sbb
or
sbb
mov
mov
ret
mov
add
fs
test
push
std
rolb
jae
fisubs
mov
flds
mov
push
cmp
lret
jae
cmp
dec
scas
cmp
xlat
daa
and
bound
sti
mov
das
sahf
cmp
mov
cmpsb
into
ss
movsl
mov
mulb
scas
xchg
inc
mov
js
popf
fdivs
outsb
fbstp
imul
lret
std
in
repz
sahf
xchg
in
in
sub
insl
imull
ds
repz
stos
dec
rcll
neg
or
dec
and
push
push
lock
pop
mov
or
adc
cmp
and
shl
inc
sbb
fdivs
enter
or
adc
stc
cmp
icebp
mov
ret
stos
sahf
jle
xchg
lock
mov
jle
insb
push
cmpsl
mov
test
jne
mov
xchg
shrl
lods
xchg
jle
sub
repz
mov
imul
inc
and
ficoml
sbb
xchg
shl
stc
data16
sbb
cltd
add
int
cmp
cmc
jp
icebp
cmp
mov
inc
outsb
sahf
jb
sbb
je
roll
inc
mov
push
mov
outsl
hlt
clc
clc
je
adc
fcmovnbe
xchg
stos
addr16
mov
xor
je
cli
je
aam
cwtl
push
dec
stc
jnp
sbb
sbb
dec
cmc
pop
inc
jmp
cmp
fucompp
imul
scas
or
shr
push
push
daa
or
pop
insb
push
xchg
and
movsb
arpl
cmpsb
outsl
rcrl
rorb
div
xor
sub
test
mov
scas
mov
push
sti
pusha
sbb
sub
xchg
push
rol
push
mov
loopne
mov
scas
int
sbb
fs
or
push
stos
jle
scas
movsb
ss
xchg
pusha
xchg
mov
jb
xor
mov
or
ljmp
cld
mov
push
jo
mov
push
sbb
outsb
outsl
cli
shr
adc
test
push
lcall
jb
repnz
add
adc
xlat
add
push
cmp
out
cs
add
cmc
push
adc
repz
bnd
add
lea
scas
jecxz
je
fcmovb
out
pop
xchg
push
push
jmp
bound
test
je
frstor
cmpsb
arpl
test
push
xchg
xchg
sarl
cs
fwait
in
int3
sub
ret
jno
fcomps
rclb
push
or
or
dec
stos
cli
sub
aas
xchg
inc
push
loop
jb
dec
pop
loopne
sbb
jge
dec
ss
in
push
ret
ds
movsb
mov
addr16
ss
pop
push
std
dec
andb
xlat
fnstsw
mov
dec
testb
cs
fisubs
hlt
fldenv
sub
mov
rcrb
add
movl
push
mov
pop
pop
push
aaa
fsub
mov
xchg
insl
mov
in
pop
add
adc
daa
aaa
xchg
int3
dec
ret
sbb
stos
xchg
inc
stos
mov
cmp
and
sahf
xlat
cmp
fisttpl
into
stos
in
rcl
scas
popa
mov
inc
cmp
stos
push
pop
xlat
cmp
jb
lcall
xlat
jmp
adc
clc
ja
mov
or
mov
add
jbe
xchg
in
adc
push
outsb
cmpsb
xor
add
inc
stos
test
mov
push
xchg
cmp
cmp
scas
loopne
arpl
mov
cwtl
and
xor
nop
inc
pop
test
mull
aam
add
mov
mov
and
in
jb
mov
das
cwtl
xchg
sbb
mov
jnp
movsl
scas
and
sbb
push
inc
sub
push
aad
and
stos
push
mov
mov
int
sbbl
adcb
xchg
test
pop
rorb
jg
adcb
icebp
mov
pop
xor
gs
inc
jne
fwait
aam
dec
pop
jle
xchg
nop
fimull
stos
and
icebp
daa
in
fcmovnb
adc
xor
cwtl
push
js
bswap
mov
inc
jecxz
mov
orl
mov
sbb
xchg
outsw
jp
mov
outsb
scas
xchg
es
fildll
or
imul
stos
adc
cmp
cli
pop
xor
adc
adc
push
cmpsb
pop
pop
cmp
jns
mov
dec
mov
lcall
add
inc
mov
fnstcw
cmpb
aam
sub
lea
int3
jb
dec
test
pop
rcl
cs
filds
fisubrl
mov
push
xchg
stc
push
mov
fnstenv
mov
lret
jmp
xor
pop
mov
andb
add
or
pusha
lcall
icebp
push
and
sti
jnp
dec
pop
rcll
es
sbb
jo
add
xchg
into
sub
cltd
sbb
push
add
lock
fadds
or
push
imul
adc
sbb
inc
xchg
icebp
ss
xchg
shr
incb
cmc
out
sarb
dec
and
neg
or
inc
jg
iret
jno
std
sbb
push
cmp
sbbb
adc
stos
push
inc
mov
mov
inc
test
sbb
jne
addr16
sbb
sbb
dec
inc
sub
dec
push
leave
or
cmpsl
push
or
mov
mov
xchg
jmp
or
lods
mov
je
sbb
or
shl
into
dec
icebp
adc
in
inc
xchg
push
inc
cli
test
push
xor
mov
std
aam
mov
rclb
jbe
lcall
out
rolb
ja,pn
dec
add
pop
test
popa
loopne
push
rclb
sub
mov
ss
mov
movsb
lcall
mov
nop
xchg
pop
negb
or
jle
mov
jae
push
sub
repnz
dec
mov
inc
dec
mov
lret
push
sub
movd
inc
andb
cld
in
aam
jmp
xor
add
ret
mov
jl
ljmp
adc
negb
pop
popf
pop
mov
arpl
dec
fmul
mov
pop
repz
xchg
test
cmp
rcr
outsb
lcall
mov
ss
or
pop
xor
adc
loope
ret
std
nop
adc
repnz
and
mov
loop
xchg
je
in
loopne
fmuls
repnz
loop
or
loop
iret
jl
mov
icebp
jecxz
inc
xchg
push
sbb
xchg
and
fcoms
aam
push
data16
pop
nop
push
into
cmpsb
pop
pop
in
fdivrs
mov
ljmp
sahf
mov
push
loopne
sbb
sbb
hlt
dec
pop
idivb
test
ds
sub
inc
loopne
outsl
mov
inc
sub
cltd
dec
fisttpl
sbb
pusha
addb
sub
loope
jbe
inc
es
add
insb
push
icebp
lea
jae
jmp
inc
dec
testb
pop
mov
aad
addb
lcall
shll
mov
bound
inc
mov
pop
fimull
outsb
sar
inc
test
test
dec
mov
ja
cmp
mov
or
loop
jns
cli
data16
cmp
imul
mov
out
out
cmpl
dec
pusha
cmpl
aam
or
sahf
into
add
jo
popa
cmp
adc
mov
add
clc
pop
scas
into
push
ss
pop
dec
mov
iret
pop
dec
fildl
xchg
push
or
cmp
mov
add
pop
push
loopne
push
add
mov
push
inc
inc
sbb
mov
gs
testb
cmpsb
ficomps
mov
nop
stos
fsubrs
outsb
data16
lret
cmpsb
push
lret
or
pop
rcrb
pop
lret
scas
dec
mov
out
xor
into
scas
std
sub
lds
dec
out
sub
ja
adc
pop
es
dec
dec
inc
mov
fwait
sbb
xor
jmp
test
push
loopne
adc
mov
in
mov
push
ds
ljmp
fisttpll
push
mov
mov
xor
mov
into
fsubp
stos
loope
sbb
xchg
sub
xchg
popa
mov
adc
cld
jb
pusha
stos
adc
push
subl
std
adc
jmp
xchg
call
xchg
rep
dec
ljmp
pop
xchg
dec
jl
cmp
pop
jle
xorl
rorb
dec
cmpsb
repz
add
mov
sbb
jbe
cld
leave
jmp
pop
stos
rcr
sub
icebp
xchg
add
addr16
jl
dec
sar
mov
sahf
das
xor
xchg
xchg
in
jmp
xchg
inc
or
lock
sub
je
push
or
pop
adc
mov
xchg
pop
shlb
jae
xchg
js
sahf
or
out
movsb
jmp
scas
sahf
repnz
fnsave
insl
sbb
lretw
dec
xor
jb
stc
lcall
cmc
dec
test
mov
adc
dec
mov
out
rcr
mov
shrl
pop
int
xlat
push
lcall
jp
jecxz
add
fisubrs
mov
rcrl
ficomps
xchg
fs
into
mov
rclb
xorl
fsubrs
mov
mov
xchg
dec
mov
lods
loope
arpl
popf
xchg
cmp
test
dec
and
movsl
mov
xchg
std
fnstcw
inc
inc
sub
daa
testl
les
add
add
xchg
clc
add
xchg
cmc
cmp
sahf
div
ds
mov
sub
jo
jb
jl
sti
jge
mov
dec
push
sbb
jmp
arpl
pop
mov
xchg
dec
lods
stos
xor
lret
add
shlb
shll
sub
scas
das
std
xchg
ss
jmp
sub
dec
mov
into
addr16
xchg
xchg
pop
jmp
fsubrl
mov
fildll
cli
popa
pusha
jno
jecxz
mov
or
jbe
ss
rcrl
andb
sbb
pminsw
in
sub
and
dec
pop
sub
imul
cld
or
lds
jp
inc
jne
sub
dec
nop
je
clc
add
mov
cmp
stos
xchg
sbb
mov
dec
xchg
cmp
hlt
fistl
xchg
mov
stos
stc
mov
fwait
adc
mov
cmp
pop
mov
xchg
sub
add
mov
cmp
pop
push
xchg
mov
test
rcll
mov
inc
xlat
outsl
inc
out
jne
fnsave
out
pusha
inc
cltd
push
and
adc
cmc
dec
in
int
dec
lcall
lds
xchg
add
stos
push
in
xchg
cmpsl
mov
call
out
call
jbe
xor
push
and
mov
xchg
sub
movl
push
ficomps
cmp
add
imul
sub
outsb
mov
fsincos
out
cltd
inc
std
out
pop
mov
cmpsl
adc
mov
es
xlat
iret
push
jo
adc
push
mov
ljmp
divl
loopne
jne
jbe
push
test
lds
neg
mov
hlt
jle
fistl
lcall
mov
push
sbb
repz
shlb
add
jge
sub
and
data16
pop
mov
arpl
aam
cmp
inc
mov
mov
out
ljmp
and
or
xor
call
dec
push
and
mov
cmp
test
mov
or
in
loop
ss
loopne
sub
push
int3
dec
sbb
add
fldenv
mov
jae
dec
in
dec
jb
dec
or
pop
movsb
mulb
nop
stc
pop
add
cli
mov
es
lods
or
adc
mov
cmp
fs
sub
repnz
lret
movsb
and
pop
outsb
stc
imul
cs
repnz
lea
fwait
inc
ss
jge
mov
mov
sbb
ljmp
dec
fistpll
xchg
fiaddl
enter
mov
hlt
sub
adc
lahf
sbb
cmp
es
cmp
aam
xchg
jbe
cmpsb
daa
sbb
insl
mov
insb
movb
roll
sbb
sub
sub
add
push
loopne
sbb
bound
test
xchg
sbb
lcall
daa
mov
sbb
cltd
dec
dec
push
pop
mov
call
loop
xlat
je
jo
ret
jmp
aaa
mov
scas
out
adc
gs
test
stc
push
movsb
sbb
pop
jp
xchg
repnz
gs
cs
inc
sbb
sub
mov
out
mov
jo
mov
jno
ja
mov
sbbl
andb
cmp
xor
fwait
pop
ret
stc
dec
fcompl
jne
lds
push
ss
in
flds
xchg
add
in
fcmovnu
scas
mov
inc
mov
dec
cwtl
nop
inc
les
mov
rsm
loopne
fldl
push
movsb
gs
nop
inc
hlt
mov
ja
sub
sbb
pop
call
jmp
movsb
fldcw
cmc
pop
pusha
bound
loopne
lret
jecxz
cmc
or
mull
rclb
or
pop
pop
rorb
and
movsb
fiadds
xlat
stos
jne
mov
orb
loopne
push
int
lret
adc
pop
pop
dec
insl
xor
idivb
mov
test
dec
sbb
add
out
lret
or
pop
mov
sbb
rcr
jbe
mov
scas
arpl
lret
fiaddl
fisubs
mov
dec
aaa
sahf
xchg
mov
insl
mov
push
jecxz
bsf
popf
cwtl
fimuls
xlat
xchg
nop
dec
addr16
push
cltd
daa
movsl
sti
shlb
mov
jle
testb
jmp
mov
sbb
or
sti
or
push
sbb
sbb
lds
iret
pop
stos
rorl
push
mov
cmc
adc
call
xlat
cmp
mov
mov
or
mov
sbb
pushf
lods
mov
mov
or
cmpsl
lcall
cmp
arpl
or
outsl
imul
shll
aaa
cs
adc
sbb
xchg
mov
pop
sub
mov
sbb
mov
push
rolb
xchg
jl
inc
movswl
rolb
jl
sbb
loopne
idivb
mov
jge
mov
mov
or
inc
fisttpll
push
rcrb
int3
push
insb
push
mull
call
xchg
scas
jne
mov
or
and
mov
cmpb
pop
push
dec
adc
mov
or
add
jl
push
push
add
xchg
and
xor
sbb
dec
cmp
xchg
mov
sarb
jle
xor
outsb
out
stc
pop
xchg
int
lock
fidivrs
sub
lret
lds
mov
mov
jle
clc
js
out
mov
das
fldl
cwtl
dec
mov
pop
jb
jmp
fisubrs
rol
iret
pop
imul
mov
xor
inc
mov
mov
xchg
pop
push
mov
xlat
lds
sbb
notl
pop
jbe
out
sbb
push
mov
adc
push
push
loope
mov
shr
jne
movsb
xor
lods
inc
dec
push
xor
add
rcll
push
in
xor
and
shl
out
jmp
cmp
inc
das
add
into
test
inc
fildll
insb
xor
push
in
lret
ljmp
mov
cli
mov
icebp
repz
jo
dec
scas
push
outsb
lret
mov
inc
stos
out
push
add
add
add
inc
pop
pusha
cltd
pop
lret
adc
fwait
ret
scas
fildl
adcl
mov
or
or
ss
addr16
outsl
sub
lahf
pop
in
fisttps
fmul
daa
mov
stos
lds
sub
sub
and
rcll
mov
and
cmpsl
loope
rclb
aad
dec
pop
lods
jl
movb
pop
lods
shll
negl
pusha
push
sub
data16
pop
adc
jle
inc
mov
mov
jno
bnd
fdivs
pop
orl
out
stos
add
stos
xlat
adc
notl
jbe
mov
shlb
dec
jb
insl
push
sbb
aad
fistpll
inc
dec
mov
lret
lret
rcl
xchg
pop
ljmp
in
gs
mov
roll
lods
mov
popl
testb
add
mov
stc
push
jae
push
mov
repnz
or
xor
xor
adc
leave
je
inc
sbb
sub
inc
idiv
mov
sbb
inc
arpl
stc
pop
adc
mov
or
lods
xchg
ficompl
and
xchg
mov
fildll
out
cmp
fsubp
add
in
push
push
fisubs
jmp
jl
and
add
or
xchg
fidivrl
mov
sti
out
sub
popa
cmp
decb
jmp
jns
movsb
push
sub
out
jo
mov
sahf
insb
dec
sbb
mov
cmpsb
push
mov
push
mov
imul
icebp
aaa
iret
mov
or
mov
loope
std
icebp
jb
dec
ja
jns
out
xchg
aad
cmp
lods
jnp
mov
mov
adc
inc
mov
adc
sbb
outsl
mov
out
pop
push
sbb
push
xor
push
push
adc
test
ds
fwait
ret
dec
into
inc
sarl
inc
dec
fdivrl
in
sub
adc
addr16
mov
inc
leave
inc
bound
adc
das
in
jecxz
lods
daa
mov
jb
push
sarb
iret
dec
add
sub
negl
dec
mov
clc
out
test
add
adc
cs
jo
iret
lret
fstpt
ret
cmpsb
dec
rcl
add
mov
paddsb
notl
mov
aam
stos
cmpsb
xchg
jle
sbb
and
mov
xchg
fcomp
mov
loop
mov
test
pushf
dec
mov
cld
rcl
lcall
and
jmp
cli
sub
and
ja
wbinvd
jbe
and
push
cwtl
dec
outsb
and
xchg
mov
das
divb
push
dec
pop
notb
xorb
add
xchg
xchg
add
int3
dec
add
ljmp
and
push
mov
cwtl
das
cmp
scas
cli
mov
scas
adc
sub
inc
hlt
aad
lods
mov
fidivs
das
fidivrs
push
mov
in
mov
sub
and
stc
icebp
xor
adc
mov
call
xchg
jmp
jecxz
fsubl
jae
xchg
ljmp
cs
lahf
fdivr
push
inc
in
ljmp
xchg
sbb
mov
push
and
sahf
cld
xlat
pop
call
add
jae
pop
leave
lahf
stos
lahf
push
rcr
add
or
insb
or
xchg
loop
loop
push
scas
xchg
fidivl
je
or
cmp
sar
adcb
push
push
xor
cmp
push
and
sbb
cmpsl
xor
icebp
addr16
loop
adc
push
cwtl
inc
aaa
leave
sub
sbb
data16
arpl
into
call
pop
or
adc
mov
add
mov
jb
shr
inc
dec
cmc
pop
jns
pop
rol
xchg
jl
inc
xlat
inc
or
cwtl
pop
addr16
add
imul
movsb
shl
fnstenv
popf
fsts
cld
add
loopne
sbb
jo
lcall
cli
negl
sub
lret
push
test
ret
jbe
sub
out
jge
adc
mov
mov
sub
mov
sbb
mov
push
int
inc
repnz
insb
iret
sbb
mov
mov
in
mov
outsb
xchg
mov
fsubs
test
sub
into
pop
adc
mov
ret
sbbb
cmp
cld
fwait
adc
sbbb
repnz
cmp
fdivrs
dec
push
and
xchg
into
je
and
xchg
imul
cli
int
and
mov
or
into
pop
cmp
sete
push
cmp
pop
mov
mov
mov
xor
into
pop
ja
push
jae
add
inc
addb
jb
jecxz
mov
adc
jns
sarb
dec
jns
imul
test
or
dec
rol
jle
pushf
push
push
ret
fsubrp
call
sbb
xchg
ret
pop
shll
xchg
outsb
ficoml
dec
test
mov
add
mov
mov
push
clc
inc
mov
sub
pop
or
mov
mov
inc
hlt
stos
or
mov
dec
pop
mov
mov
sbb
mov
and
movsb
dec
sbb
add
pop
dec
sarl
ffreep
cmp
pop
dec
movd
sbb
popl
mov
clc
jecxz
ret
andb
mov
adc
cmp
sub
imul
mov
push
push
xor
pop
int
int
xchg
je
test
push
mov
xchg
inc
loopne
stos
mov
aam
push
push
movsl
jne
sahf
push
xchg
aad
cmp
push
fidivrl
leave
jb
fsubr
sbb
jne
es
les
push
sarb
lret
shrl
orl
stc
test
imul
xlat
imul
lret
adc
add
mov
xchg
or
bound
outsl
fidivrl
sbb
out
and
xchg
xchg
inc
xor
inc
movsb
test
or
pushf
pop
cmc
popa
in
test
add
or
add
push
xchg
push
stc
cmp
adc
xor
push
mov
dec
shrb
mov
cmp
fwait
and
icebp
rcll
cli
andb
sahf
adc
mov
inc
arpl
mov
loope
push
jns
xlat
mov
gs
roll
mov
cmp
in
push
push
jb
insb
test
dec
push
aad
fcoml
movsb
into
mov
fs
subl
daa
or
iret
imull
pop
mov
mov
mov
mov
jb,pn
cli
add
add
mov
arpl
jbe
push
dec
scas
push
arpl
les
imul
adc
mov
pop
add
stos
cmp
bswap
stc
test
cmp
mov
pusha
aad
in
movsb
xchg
adc
inc
pop
leave
std
jns
lds
mov
add
push
insb
clc
das
pop
fcomps
jle
jnp
jb
lea
in
clc
aas
in
pop
mov
cmpsl
in
add
pop
sbb
pusha
cld
dec
or
les
and
push
out
dec
jmp
jnp
outsb
hlt
nop
scas
inc
clc
push
test
xlat
fiadds
adc
ficoms
mov
xor
sub
sbb
sbb
jb
inc
pop
mov
mov
and
ja
cli
inc
rclb
jg
out
push
fidivrl
xchg
int3
jmp
dec
scas
pop
inc
es
cmp
test
cli
push
fiadds
xchg
mov
sbb
push
dec
subb
jge,pt
outsl
inc
fwait
lea
jg
cmc
push
jp
cltd
sub
sub
pop
sbb
sbb
push
sub
scas
push
cmpsb
inc
push
insl
das
fmull
bound
repz
adc
sbb
pop
dec
fldt
dec
jae,pn
stos
dec
std
mov
jp
push
sub
rorb
stc
ss
dec
sub
push
mov
dec
int3
into
xchg
repnz
cmp
mov
add
fldt
stos
sahf
mov
jmp
add
clc
mov
xlat
mov
cmp
lea
mov
scas
out
xor
adc
xlat
daa
sub
xchg
lret
jp
jno
test
pushf
jbe
mov
bound
and
fldt
insb
inc
jbe
cmpsl
insl
adc
xchg
sub
sahf
dec
mov
mov
addl
xchg
adc
mov
mov
pop
push
fsubs
jno
stos
rcr
adc
scas
push
lcall
xor
rclb
rorl
pop
pop
test
mov
scas
in
xchg
fwait
hlt
rcrl
dec
adc
sub
pop
aad
call
xchg
sbb
adcb
cmpsl
mov
cmpl
fidivrl
enter
or
bound
pop
pushf
jp
xor
cmc
ljmp
imul
xchg
push
lods
mov
and
notl
fildl
jp
dec
inc
cmp
adc
dec
xchg
mov
movsb
dec
insl
dec
repnz
mov
inc
push
js
int3
mov
lds
push
repnz
mov
call
pushf
inc
insb
pushl
aas
jmp
ss
or
or
sub
or
sbb
inc
jmp
xchg
daa
lahf
rcll
mov
sbb
aad
es
iret
sti
jo
inc
push
mov
mov
cwtl
cmp
pop
sub
arpl
jmp
cmp
mov
jecxz
mov
sbb
testb
loope
lock
mov
adc
mov
pop
jb
xchg
mov
lret
in
jnp
add
sub
sub
xchg
and
or
arpl
push
ret
or
cmp
sub
into
xor
leave
in
pop
cltd
or
adc
insb
adc
mov
pop
out
mov
xlat
lret
popf
pop
scas
or
push
mov
jno
inc
fisttpll
xchg
imull
add
fstpt
sub
xor
mov
stos
xor
ret
inc
and
dec
out
pop
adc
or
mov
outsb
dec
loopne
lcall
xorb
xlat
bound
lahf
fwait
jge
out
ja
xor
xchg
shlb
lea
pop
enter
shrb
pop
mov
mov
call
out
adc
movsb
fstpt
or
lods
lock
loope
out
int3
scas
divb
or
jne
push
pushfw
aad
fistl
dec
xor
test
jbe
adc
xchg
stos
cmc
cmc
mov
fiadds
mov
fdivrl
call
xorl
xchg
mov
fistpl
sbb
mov
xor
sbb
in
fs
cmp
pop
mov
push
sbb
cmp
arpl
js
cmpsb
dec
aas
repz
lret
es
lds
and
pop
ja
jl
repnz
out
cmp
aam
testb
ja
jg
jmp
xorl
mov
mov
call
mov
inc
rolb
negb
scas
ja
je
lds
or
out
adc
inc
idivb
sbb
mov
jmp
jae
push
or
pop
mov
mov
sub
in
add
add
test
adc
and
sub
xor
iret
movsb
lods
std
xor
je
pushf
pop
and
cmp
movsl
hlt
xor
mov
sbb
pop
inc
lahf
cs
inc
jge
int
in
jbe
imul
pusha
cmp
mov
addr16
push
mov
pop
inc
dec
sbb
xchg
movsb
mov
or
imul
fwait
xchg
arpl
add
mov
int
imul
mov
or
test
push
mov
ljmp
or
in
or
jmp
xchg
push
or
sbb
lcall
sub
adc
ficoml
in
inc
add
lret
jns
shlb
push
adc
jbe
sahf
inc
inc
cwtl
pop
into
faddl
pminub
pop
mov
dec
xchg
pop
dec
push
sarb
leave
movsl
dec
xchg
xor
lcall
data16
fwait
push
lcall
push
fcmovb
pop
outsl
adc
int3
xchg
and
aaa
adc
das
mov
sub
and
rcll
enter
sti
pop
xlat
cmp
xchg
jne
mov
jnp
leave
lret
fsubrl
in
push
xchg
adc
js
test
mov
xor
jbe
push
add
xchg
mov
pop
sub
adc
int3
adc
sbb
into
or
stos
ja
lea
and
xchg
mov
fdivrl
inc
sbb
arpl
jge
adc
pop
dec
es
push
dec
inc
loope
jne
ss
xlat
sub
cmp
les
aam
aad
movsl
iret
data16
mull
push
imul
in
or
imul
test
cwtl
loopne
jl
add
sub
iret
or
lret
arpl
mov
sbb
stos
jb
popf
lcall
repz
fnstsw
es
and
testl
iret
sub
cmpsl
andb
and
xor
mov
inc
mov
xlat
rclb
mov
inc
xlat
clc
lds
in
jmp
dec
sub
jae
or
ret
xchg
sar
pop
loope
les
cmp
dec
jo
adc
cmp
jge
mov
ret
xor
mov
cmpl
pop
insl
adc
mov
pop
jne
xor
jno
iret
jae
ret
jge
adcb
jbe
lahf
repz
add
dec
stc
sti
ss
mov
in
clc
pop
push
repz
mov
xchg
sub
inc
fisubrl
push
stc
data16
inc
sbb
ret
aam
sbb
out
in
mov
dec
or
adc
loope
popf
or
inc
into
pop
sti
inc
mov
out
cmp
adc
dec
popa
xchg
dec
jecxz
pop
inc
ret
leave
pop
pop
sub
sub
out
cmp
mov
adc
les
int
xchg
aad
movsl
mov
inc
rcr
xchg
mov
jge
aaa
jmp
mov
loopne
mov
and
scas
pop
daa
dec
stos
in
push
cmpsl
fistps
sbb
dec
pop
jmp
aad
fsubrl
insb
xlat
aam
nop
push
jne,pt
aad
xlat
cmp
ret
ror
push
test
scas
pop
pushf
shll
cli
std
inc
testb
dec
clc
cmpsb
mov
mull
imul
out
fbstp
cwtl
fisttps
pop
in
cmp
mov
add
and
push
test
xor
cmc
sbb
jecxz
push
ret
and
dec
lea
inc
gs
ret
jnp
xchg
push
mov
sbb
sub
and
mov
add
add
inc
lea
mov
sbb
int
rolb
outsb
not
sbb
cld
cltd
sbb
or
pop
fdivl
jecxz
cmp
xchg
roll
addr16
xchg
out
or
sbb
loopne
jb
sub
inc
in
jae
stos
in
mov
pusha
mov
out
mov
lds
or
pop
adc
cmp
test
xor
sarl
pop
mov
movsl
cmc
pop
mov
dec
ljmp
mov
pop
pusha
loope
nop
mov
dec
std
rclb
shll
push
arpl
push
fbstp
cwtl
pop
aas
hlt
xchg
push
adc
mov
pop
cmpsb
adc
rcr
mov
ror
cmp
jecxz
ja
xor
dec
hlt
jp
into
fisubrs
add
xlat
ljmp
add
bound
mov
into
mov
xor
pop
call
call
mov
mov
sti
xchg
xchg
mov
es
in
add
mov
cwtl
pushf
cmp
mov
mov
pop
test
lods
sarb
mov
sbb
sti
in
inc
pop
mov
int3
movl
fwait
mov
sahf
addr16
mov
iret
sbb
inc
sub
movsb
adc
pop
shrl
pop
xchg
inc
dec
gs
mov
dec
inc
sti
mov
xchg
popf
cmc
bsr
fstps
push
lret
lret
stos
sahf
mov
xchg
dec
mov
loope
bound
icebp
add
dec
fbld
xchg
pop
sahf
popa
adc
cmpsb
xchg
pop
mov
inc
cmp
int3
jbe
mov
scas
dec
mov
push
mov
and
mov
mov
cmp
jp
repnz
cmp
xchg
addr16
adc
stos
popa
icebp
mov
in
enter
sub
addr16
adc
mov
xchg
mov
in
aaa
xchg
shlb
decb
out
mov
out
mov
pusha
movsl
test
xchg
sub
add
negb
mov
xor
std
mov
pushf
mov
cmpsl
fildll
or
cmpsl
jbe
aad
cmpsb
cmc
out
cld
out
cmp
dec
xchg
fcom
fmull
pop
icebp
sub
loopne
cli
mov
xor
sbb
call
or
inc
shr
mov
push
add
and
arpl
sbb
lahf
or
adc
int
cmp
xchg
xchg
pop
sub
movl
gs
mov
mov
or
scas
loopne
repnz
sti
inc
das
out
outsb
ljmp
mov
dec
xor
cmp
pop
arpl
cmp
mov
cmpsb
adc
pop
mov
xchg
shlb
pop
pushf
jb
scas
cmp
push
int
scas
jno
jae
add
adc
lock
fists
fadds
repz
xchg
xor
in
xor
in
add
dec
cmp
fiaddl
mov
xchg
gs
push
test
sbbb
or
xchg
mov
push
mov
fmul
stos
out
lcall
rcrl
mov
fstps
and
dec
add
sub
sbb
lret
pop
popf
andb
ds
add
outsb
mov
out
add
inc
outsb
mov
inc
mov
out
jge
pop
mov
or
stos
add
push
pop
lcall
jmp
test
sti
call
mov
inc
sbb
arpl
pushf
mov
mov
mov
cld
xchg
jecxz
sub
or
jbe
xor
in
addb
in
push
movsb
fists
sbb
jg
fsubl
loop
cwtl
cmpsb
jne
xchg
clc
sbb
cmp
mov
inc
sti
hlt
hlt
stos
jecxz
ja
pop
out
sti
inc
nop
imul
push
jnp
add
sub
sar
int
and
xor
xlat
out
or
rcrb
and
test
sti
inc
lret
sbb
ret
mov
push
cli
xchg
xchg
jo
mov
mov
jmp
ja
mov
repnz
pop
inc
push
inc
xchg
mov
jns
pop
push
xchg
jo
dec
cmpsb
xchg
xor
xchg
iret
pop
hlt
iret
lret
pop
lods
je
cltd
dec
test
stos
rcll
js
pop
pop
or
push
adc
enter
push
fsubl
lcall
and
sub
xor
sarl
pop
mov
push
xchg
loop
lcall
fisttpl
ret
cmp
sbb
pop
fadd
jnp
adc
rclb
inc
sarb
les
xchg
and
js
mov
cmpl
je
movsl
mov
je
outsb
pop
mov
enter
cmpb
mov
inc
nop
int3
push
nop
loopne
in
dec
mov
mov
repnz
xlat
int
movsb
sbb
movsl
loop
loop
xchg
inc
or
mov
into
icebp
and
icebp
out
not
cli
mov
sub
xlat
mov
sub
fwait
pop
out
in
dec
hlt
mov
sarb
mov
int
mov
xchg
sub
jecxz
push
into
jnp
std
mov
test
data16
push
sub
sub
fistpl
rorb
mov
ficompl
pop
dec
clc
sub
idivl
movsl
mov
push
dec
cmp
divb
movsb
jecxz
lcall
test
dec
test
fcompl
inc
fisubrs
clc
mov
cmp
xchg
int3
cmpsl
inc
imul
popa
nop
js
push
lcall
loope
in
test
adc
sbbl
scas
sbb
mov
outsl
pop
xchg
cld
ljmp
lock
test
lret
out
xor
dec
add
mov
cmp
gs
rcr
loope
jns
rorb
xchg
cmp
mulb
push
pop
mov
sub
ss
shlb
jb
stos
rorl
movsb
jns
dec
in
jo
rol
mov
xor
inc
outsb
mov
xlat
ja
and
pop
ds
sbb
jne
data16
fisubl
imul
cmp
icebp
test
sbb
pop
fnstcw
mov
xchg
nop
jp
out
je
mov
daa
pop
mov
add
add
test
mov
push
cmp
sub
pop
pop
rcr
in
lea
stos
fldlg2
ret
nop
cs
sbb
mov
stos
out
repnz
lret
add
push
dec
cli
pusha
jle
andb
aas
xchg
lcall
cmpsb
lods
lods
pop
aam
js
lea
sbb
and
shll
idivl
push
xor
fcomps
adc
popa
sub
sbb
lcall
inc
scas
je
push
mov
pop
sar
pop
pop
ds
jp
dec
and
icebp
jbe
pop
pop
or
icebp
imul
jp
dec
mov
sbb
daa
xchg
aaa
and
pop
jb
xchg
jl
call
xchg
and
andl
ljmp
mov
lds
dec
call
xchg
sbb
sub
cmc
lret
adc
lret
and
sbb
lret
fimull
adc
pop
mov
jecxz
imul
insl
jne
shlb
int
mov
test
sahf
pop
out
jecxz
adc
test
sbb
iret
xor
jmp
pusha
es
pop
clc
mov
push
std
mov
loop
inc
jnp,pn
pop
add
dec
jne
pop
test
sbbl
add
mov
lcall
pop
inc
mov
pop
jo
inc
sti
sbb
out
testl
push
popa
cmp
mov
inc
sub
stc
ret
xor
cmpl
xor
mov
out
out
sub
xchg
es
lsl
and
dec
sub
ffree
cmpsb
aam
outsl
aam
in
mov
mov
test
xchg
dec
test
or
cmpl
mov
divl
scas
push
push
fbstp
or
paddw
lea
rolb
andl
pusha
mov
mov
dec
inc
repnz
or
xchg
repnz
push
cmpsl
push
xchg
add
aad
daa
fistpll
jbe
shr
pop
adc
push
mov
jbe
add
movsb
orl
lret
sbb
sbb
sub
out
loopne
lds
xchg
pushf
popa
aaa
mov
push
pop
mov
andl
inc
rcr
dec
fsubp
mov
mov
ret
icebp
mov
es
cli
lea
mov
fldt
shll
jo
in
mov
push
and
je
jb
adc
adc
jns
xchg
push
xchg
fs
push
cmp
dec
inc
xchg
adc
imull
gs
jle
inc
les
lea
lods
xchg
mov
xchg
arpl
das
jge
cmp
xor
mov
push
pusha
xor
daa
fsubrs
addr16
lods
xchg
leave
cmpsb
sar
iret
jno
lds
lcall
mov
jno
into
adc
push
fwait
out
mov
rcrb
jmp
xchg
dec
and
jp
adc
dec
mov
pop
jns
mov
push
aam
jmp
int
jbe
sub
pop
jg
mov
ss
aaa
add
stos
xchg
add
out
push
aad
ljmp
push
jo
popf
int
sbb
sub
xchg
adc
repnz
lcall
loopne
and
cmp
pop
or
xchg
jbe
out
mov
xor
mov
decb
and
jmp
inc
mov
push
cwtl
fcmovu
repz
lods
push
mov
add
loop
lds
fstpt
jne
notl
mov
cmp
sub
or
xchg
shlb
xchg
lret
cmc
cmpsb
push
add
movsl
lock
push
loop
pop
xor
popa
rorb
loop
sub
ljmp
inc
xchg
and
insl
aam
xor
sbbb
mov
das
xchg
and
test
mov
bound
fs
pop
lock
sbb
sti
xchg
mov
loope
mov
mov
mov
stos
in
cmc
mov
imul
push
sbb
xchg
inc
cmpl
loopne
nop
or
fsubrp
adc
mov
mov
xchg
aam
cli
and
pop
aas
sbb
cmp
mov
fcmovbe
push
pop
jns
or
outsl
or
sbb
mov
mov
xor
mov
or
lea
mov
jecxz
in
lcall
nop
js
aad
mov
call
add
inc
xor
or
pop
or
xchg
xor
xchg
xchg
out
sahf
pop
insl
pop
push
loope
cmp
sahf
push
sbb
add
push
in
shl
xor
pop
dec
sub
pusha
fdiv
adc
es
cmp
xchg
pop
sbb
mov
jno
js
insb
sbb
repnz
cltd
sbb
fmuls
dec
sbb
add
insb
fadds
mov
scas
es
dec
test
dec
or
mov
call
cmp
adc
adc
rcl
dec
aaa
pop
sbb
addr16
xchg
nop
mov
mov
sub
inc
sbb
shlb
and
xchg
test
mov
jmp
lock
push
movsb
ja
out
push
lds
inc
fiaddl
jnp
iret
xor
shrb
jmp
ss
ret
adc
push
add
mov
pusha
scas
out
xor
jae
popf
mov
mov
mov
push
hlt
scas
or
mov
or
xchg
fcom
ret
in
push
fsts
daa
add
xchg
sub
cli
ret
xor
rcrl
jno
and
aam
dec
scas
aam
mov
xchg
push
in
insb
jmp
daa
loop
push
xor
or
push
cmpsl
jb
push
ret
or
xor
scas
xor
movsb
ret
mov
push
shl
fstp
imul
mov
add
push
sbb
fwait
jo
mov
xor
in
cltd
daa
fdivrp
xchg
mov
ret
cmp
enter
popf
shl
test
mov
or
xchg
push
bound
mov
jo
cmpsb
pushf
dec
stos
loopne
jne
jno
loope
aam
cld
cli
xchg
xchg
mov
shl
jl
xchg
aad
repnz
xor
sbb
lea
mov
mov
int3
jecxz
inc
fcmove
dec
add
out
jl
loopne
and
cmpsb
or
pop
aaa
cld
test
or
push
setp
or
push
out
loope
mov
inc
mov
xchg
fcmovbe
imul
je
mov
push
pop
rorl
dec
mov
sbb
test
cmp
mov
loopne
out
test
pusha
lret
mov
js
xchg
jbe
insl
dec
mov
xlat
rcrb
cmp
mov
inc
mov
add
adc
mov
fcmovbe
or
sub
or
push
imul
rorb
ds
bound
out
xchg
add
call
mov
push
rcr
xchg
pop
scas
add
das
daa
push
popa
xchg
test
insb
stos
mov
outsl
leave
and
jl
push
fldenv
popa
pop
mov
ficoml
daa
mov
subl
rorb
xchg
adc
pop
xchg
push
cmp
mov
nop
cmp
test
in
movb
addr16
dec
inc
cs
lea
lret
mov
out
aad
cli
lcall
xor
push
divl
mov
insl
orb
adc
fnstenv
rol
add
rorl
cld
xor
xor
pop
mov
adc
xchg
adc
lret
push
pop
repz
push
nop
fcoml
nop
daa
sub
outsb
scas
mov
lock
or
and
cli
bound
pop
lods
shlb
xchg
and
cmp
jb
pop
xchg
add
xor
xor
pop
mov
divb
xchg
cs
xchg
ret
add
cmp
data16
xchg
adc
stos
add
aad
je
out
mov
fcompl
sbb
add
jecxz
pop
cmp
inc
cs
scas
loope
xor
pop
push
mov
outsl
enter
pop
fsubr
cli
scas
cltd
xchg
dec
mov
cmpsb
push
inc
xchg
xor
dec
dec
out
std
add
int
cs
mov
xchg
insl
iret
jge
xor
mov
add
imul
dec
hlt
mov
loop
orl
int
mov
lds
jge
mov
ret
or
in
je
push
and
push
cli
int
sti
outsb
rcr
outsl
ss
mov
adc
push
je
mov
fucomi
out
roll
fistpll
in
jb
and
flds
and
std
repz
clc
xor
pusha
stos
jecxz
jno
nop
scas
lahf
fisttps
call
inc
in
loop
clc
inc
lret
xchg
add
decl
arpl
out
data16
scas
cltd
push
xchg
push
mov
aas
popf
inc
add
mov
inc
ret
loopne
lea
aad
hlt
dec
and
lcall
out
cmpsb
fstpl
mov
fcompl
mov
into
shl
mov
fwait
mov
fidivrl
scas
pop
xchg
sub
jmp
stos
sbb
sub
xchg
mov
xchg
jne
hlt
ja
sti
mov
pushf
and
mov
dec
cmp
jl
or
sbb
sub
sar
fdivrs
call
mov
pushf
mov
push
cmp
jnp
nop
idiv
leave
nop
jg
or
addr16
pop
jne
cmp
shrb
sbb
push
pop
loop
arpl
sarl
orb
lds
push
jo
out
call
rorl
sub
fldl
jge
jno
out
iret
sub
inc
ja
adc
shlb
into
in
mov
out
inc
adc
mov
in
pop
movsl
mov
sbbb
xor
sti
loop
repnz
mov
outsl
mov
mov
jb
and
jge
dec
imul
xchg
pop
arpl
loopne
inc
in
sbb
dec
xchg
fcompl
notb
fdivr
inc
data16
movsb
xchg
lret
mov
ficoms
push
cmpl
dec
aam
les
psubq
mov
insb
cmpsl
dec
aas
mov
fcmovnbe
sub
mov
mov
test
icebp
call
push
sbb
sub
jl
fimuls
int
jp
frstor
fwait
mov
ja
mov
push
cmpsb
jb
cmp
xor
les
cmp
arpl
xchg
or
ljmp
sbb
add
jbe
xlat
and
aam
and
pusha
xor
test
jl
and
cmp
jp
ret
jb
roll
hlt
imul
cld
add
mov
pushf
rorb
sbb
lods
loopne
dec
inc
and
xchg
jbe
add
repz
iret
pop
ja
xchg
dec
int3
mov
inc
dec
shlb
mov
pop
dec
in
and
adc
cmpb
xor
add
push
imul
inc
xor
mov
inc
xchg
fistl
mov
adcb
xchg
int3
jne
ror
pushf
std
fimull
xchg
loopne
fisttpl
clc
xchg
daa
push
imulb
jmp
test
mov
jecxz
lock
popa
daa
pop
mov
stos
pop
dec
insl
jbe
mov
push
push
lods
aam
pop
das
inc
jg
bound
dec
lcall
push
icebp
xchg
xor
push
and
xchg
adc
rcr
daa
or
add
sbb
sub
adc
mov
fadd
xor
test
sbb
push
dec
jbe
sbb
cmp
xchg
jbe
pop
push
in
loopne
jb
or
adcb
inc
mov
rclb
sbb
fistpl
gs
cmpb
jnp
repnz
test
or
sbb
mov
mov
jnp
out
vmread
je
ljmp
pop
mov
hlt
ret
shl
inc
cli
adc
mov
ficoml
cmp
loop
jg
push
pushf
aaa
xor
jnp
add
enter
loope
dec
xor
iret
cwtl
fidivl
fldenv
lock
js
dec
andl
xor
pop
int3
push
push
xchg
orb
or
test
mov
mov
xchg
lea
mov
cltd
icebp
xor
rorl
fcoms
pusha
adc
lds
inc
mov
sarl
fsubrl
cld
stos
sbb
mov
cld
orb
shlb
call
test
aaa
jecxz
inc
test
in
test
lahf
fldt
push
mov
je
lret
add
or
das
arpl
rolb
mov
out
faddl
jne
sub
push
cli
out
xchg
and
pop
shll
fsubrs
mov
lock
fsubrs
sahf
sbb
jne
std
mov
and
cmpb
adc
jno
bound
fsubl
addr16
xchg
mov
mov
fiadds
jmp
pop
dec
jmp
fs
mov
dec
dec
adc
daa
loop
bound
popw
bound
insb
push
pop
stos
shl
das
loope
pop
jb
rcrl
cmp
push
pop
xchg
rcrb
bound
int3
add
jnp
push
pushf
jbe
and
icebp
sti
sahf
push
dec
mov
mov
sub
adc
fsts
inc
ss
std
sahf
in
dec
xchg
loop
loope
ret
mov
stos
sbb
sbb
lahf
mov
lret
lret
lahf
sarl
cmp
mov
jb
or
jbe
mov
ret
out
mov
stos
mov
insl
sbb
xchg
faddl
dec
adc
jle
jne
sahf
je,pn
mov
dec
je
shll
in
or
push
sub
push
enter
push
es
call
xchg
xchg
xor
mov
repnz
aas
ljmp
testb
xchg
fists
sti
push
jbe
mov
int
nop
scas
ljmp
inc
adc
sarb
outsb
mov
or
fs
loop
xchg
jae
lret
test
and
or
sti
inc
cmc
cli
xchg
fwait
cmp
nop
insl
push
push
cmp
fldt
sbb
loope
inc
clc
repz
mov
mov
mov
jbe
sti
and
sub
xlat
dec
jae
pop
sub
lret
clc
fs
dec
fidivrs
or
sarb
jbe
mov
ret
pop
loopne
rorb
test
shlb
in
or
out
sub
into
shl
mov
repz
ret
out
aad
push
xlat
and
add
mov
and
inc
cli
hlt
dec
movsl
out
pop
sbb
and
jb
mov
test
push
push
mov
lock
xor
adc
fstpt
mov
stc
sbb
shr
mov
imul
mov
adc
xorb
push
mov
push
or
cmp
daa
test
sbb
popa
add
cld
leave
jp
rol
xlat
cltd
in
rclb
icebp
dec
sar
mov
rcrl
shll
movsb
mov
in
into
mov
pop
das
mov
cmc
xor
into
ret
jmp
and
push
adc
ljmp
jmp
ja
pop
bound
pop
in
push
xchg
sub
popf
flds
xchg
test
pop
hlt
mov
movb
shrl
in
rorl
dec
mov
sbbb
fisubs
jge
xchg
cli
xchg
adc
cmpsl
rol
cmp
popf
into
ja
add
pop
rolb
mov
or
push
clc
daa
cmc
stc
test
sub
jne
or
adc
xchg
loope
movsb
movsb
ret
fcmovnb
rolb
je
add
xchg
add
lret
loop
div
push
ret
push
mov
inc
add
and
and
pop
stc
xbegin
jmp
mov
test
jmp
mov
int3
add
ss
mov
inc
mov
mov
adc
andl
fs
push
cmp
out
push
sahf
stos
bound
leave
dec
xchg
mov
inc
dec
arpl
out
test
and
test
pop
mov
mov
out
shrb
add
negl
nop
cmp
jno
repnz
push
adcb
ss
and
jo
xchg
mov
xor
ret
adc
and
inc
into
bound
fpatan
in
movsb
jge
jp
outsb
loope
pop
shl
in
aad
test
lret
inc
movb
arpl
in
mov
mov
stos
addr16
sahf
add
jmp
loopne
push
stos
xchg
adc
hlt
lods
mov
inc
mov
jbe
dec
cmp
out
bound
es
subb
in
cmpsl
adc
insb
shll
mov
pop
ret
inc
xorb
cwtl
daa
jmp
iret
fists
loop
sub
imul
xor
cltd
jmp
hlt
ljmp
cs
gs
xchg
adc
pop
fcoml
fldl
scas
call
mov
mov
push
jb
scas
sub
mov
inc
lret
and
mov
fld
jmp
and
xor
repnz
orl
jo
enter
fs
or
sbb
cmc
jecxz
in
nop
sub
mov
test
jae
xor
and
ret
push
inc
mov
lret
xchg
xchg
test
mov
adc
jbe
fists
enter
cmpsb
add
into
rorb
inc
bound
loop
test
sbb
popf
inc
ret
jne
test
mov
imul
mov
call
fildl
scas
push
pop
insl
fcomi
aad
add
outsb
cmp
sahf
mov
cli
xor
pop
sub
cmp
inc
inc
xchg
fwait
mov
shll
icebp
rolb
adc
iret
fdivl
negl
adc
movsl
mov
mov
into
jp
cltd
mov
cltd
jb
sub
arpl
popf
jg
add
fnstcw
push
dec
outsb
xchg
xor
sahf
inc
faddl
xor
lds
xchg
data16
sub
andb
movl
test
gs
or
std
iret
enter
sbb
scas
sub
mov
imul
pushf
xor
call
cltd
movl
imul
or
inc
jecxz
adc
ja
loop
push
js
and
mov
jmp
xor
dec
cltd
sbb
xor
jge
in
sarb
push
out
loop
inc
test
adc
mov
loopne
out
loope
jb
jp
xchg
cmpsb
and
hlt
sbb
jno
aaa
mov
dec
or
popf
sti
cmpsb
push
sub
dec
ljmp
stos
cli
les
dec
push
insl
lret
mov
ret
lret
popa
sbb
aas
ret
dec
xchg
rcrl
mov
mov
fsubrs
jb
xor
xchg
cmp
jl
push
add
sub
push
xchg
aad
fnstenv
je
mov
sub
or
xchg
popa
addw
call
cmp
xchg
test
filds
aad
fbstp
jge
xorb
jge
xcrypt-ofb
cmpsl
push
test
add
orb
mov
in
jbe
cs
pop
sub
inc
mov
scas
jmp
pop
push
shrb
repz
orl
mov
push
in
and
adc
mov
sub
push
inc
loopne
jnp
scas
sbb
insb
mov
pop
insl
hlt
lcall
jbe
pop
add
push
rcrb
das
jecxz
fdivl
ljmp
adc
orl
pushf
imul
fcmovnb
fstpt
or
je
dec
jno
jmp
adc
xorl
out
add
loopne
xchg
jmp
xchg
lret
mov
mov
sub
stc
dec
out
daa
jmp
arpl
push
pop
jp
cmp
jl
fbld
xor
mov
dec
shrl
fstpl
aaa
shll
repnz
pop
repnz
gs
jg
fdivrl
cwtl
stos
mov
inc
mov
xor
sbb
popa
fucomp
pop
xchg
js
hlt
jl
adc
test
icebp
xorps
mov
dec
shrb
add
fdiv
imul
cltd
daa
mov
ljmp
arpl
jmp
arpl
inc
inc
mov
sbb
std
lret
hlt
adc
test
or
inc
mov
shlb
insl
aad
lods
cs
push
pusha
mov
jle
enter
mov
sub
daa
shlb
orb
jne
sahf
push
imul
and
rcrl
xchg
int3
ret
iret
and
mov
int3
jns
rol
jbe
out
sub
shl
mov
xor
jbe
xchg
mov
pop
inc
jns
ds
mov
mov
sti
out
pop
or
arpl
mov
push
jbe
movsl
popa
mov
or
cwtl
inc
jnp
jmp
sbb
push
and
lahf
add
pop
and
sub
xchg
dec
xchg
pop
into
insb
mov
mov
and
lods
sti
jg
cltd
xor
rcrl
scas
add
jne
test
mov
xchg
mov
cmpsb
and
pop
mov
std
rcll
push
sub
movsl
and
mov
and
lds
aam
shl
ja
es
dec
daa
sub
mov
jbe
mov
cmp
test
inc
dec
fstps
push
cmp
std
adc
push
in
cmp
pop
xchg
ficoml
push
fsubrs
stos
fldl
nop
sarl
or
xchg
aad
mov
pop
and
pop
dec
cmpsl
pop
mov
int
adc
mov
jb
xchg
jne
out
out
jbe
mov
push
mov
or
mov
fiadds
lret
push
movsb
push
mov
popf
cmpsb
jmp
push
xor
pop
dec
adc
popf
outsl
sbb
add
and
mov
ss
push
xchg
push
popa
mov
jmp
fdivrp
js
push
jno
stc
xchg
pop
pop
mov
fucom
xchg
bound
rcrl
xchg
xor
push
sahf
lea
gs
ret
mov
stc
mov
mov
icebp
xchg
outsb
jns
add
add
call
mov
push
xchg
sahf
inc
sub
popa
mov
xchg
sahf
aad
ss
adc
popa
fidivs
into
les
adc
sbb
out
loope
rcrl
inc
pop
jns
popa
les
mov
cmp
xchg
imul
sahf
cld
div
notl
sub
dec
mov
loope
insl
xchg
ja
xor
sbb
addr16
loop
jo
xchg
test
mov
stos
rclb
sti
sahf
test
cmp
bound
test
dec
adc
mov
xchg
iret
stos
mov
mov
dec
inc
xchg
xor
mov
testl
aad
dec
in
mov
movsb
or
lock
adc
adc
pop
dec
outsl
jae
pushf
ret
fcmove
add
dec
and
adc
and
sbb
leave
and
cmp
add
mov
maxps
push
pop
out
out
sbb
sti
ret
push
in
jbe
data16
rcr
push
andb
in
iret
test
fcompl
lahf
push
nop
scas
adc
insb
arpl
rcll
mov
and
mov
dec
sbb
mov
push
xchg
fnstenv
mov
imul
daa
mov
in
ret
sub
cmp
push
mov
or
cmp
sbb
sbb
fidivrl
imulb
cltd
sub
push
js
jge
hlt
or
testl
pop
jmp
notb
repnz
dec
scas
or
popa
cmp
test
xchg
mov
es
adc
fs
push
loop
push
mov
pop
dec
stos
int
push
add
dec
repz
add
pop
push
xor
cmp
mov
jns
aas
repz
xor
pop
outsb
cwtl
fdivr
aad
mov
fs
push
jecxz
aad
nop
stos
mov
jo
xchg
dec
push
pushf
xchg
push
out
addr16
lret
mov
inc
shrb
lds
lds
mov
aad
enter
fidivrl
mov
aam
dec
push
roll
mov
mov
adc
pop
mov
push
or
subb
adc
push
or
inc
shrl
out
lods
mov
mov
lcall
sub
in
xchg
xchg
das
stc
loope
mov
sub
sti
enter
xor
nop
jmp
sahf
lea
sub
pop
inc
arpl
sahf
xchg
loopne
int3
sahf
add
sbb
xor
dec
jae
mov
bound
jp
sahf
fmull
push
and
movsl
cmpsl
add
js
les
lret
mov
cltd
inc
je
ret
jbe
insb
adc
dec
popa
insl
fstl
dec
enter
iret
int3
in
movsl
push
jmp
sahf
movsl
mov
outsb
mov
mov
mov
pop
pop
adc
mov
lret
cli
push
cmp
push
stos
mov
add
lret
loop
ret
lods
cs
fcoms
rorl
ja
mov
adc
add
push
lds
inc
rcrl
mov
shlb
add
stos
scas
sbb
xchg
sahf
scas
add
movsl
je
xor
push
rcll
mov
push
adc
repnz
test
ret
dec
cli
mov
fmulp
out
inc
push
jbe
cwtl
int3
je
cmp
lret
jecxz
push
fucomi
cmp
add
jp
loop
aad
ja
adc
or
sub
out
or
insl
lods
jecxz
ss
pop
inc
out
adc
pop
push
and
loopne
out
or
shr
and
out
clc
popw
or
pop
lea
mov
dec
andl
mov
lret
pop
or
jo
sub
inc
lret
testl
mov
sub
daa
adc
mov
xchg
cld
sbb
xchg
iret
lods
into
dec
mov
and
in
add
je
loopne
pop
jno
sbb
repnz
insb
add
push
mov
lret
xchg
insb
test
xchg
js
sbb
jge
movsl
addl
xlat
inc
or
xor
out
push
ret
cmp
xchg
pop
cwtl
leave
push
push
jb
imul
lret
lds
icebp
divb
xchg
push
mov
fstps
clc
ret
sbb
fisubl
add
es
lods
sub
inc
sbb
or
stos
mov
int3
add
add
ret
mov
push
dec
dec
push
sub
pop
xchg
mov
xchg
pop
push
sub
shll
inc
pop
add
pop
rcrl
enter
pushf
mov
jle
out
subl
jmp
dec
ret
mov
ljmpw
adcb
pop
mov
cmp
xchg
dec
mov
mov
loopne
jp
jge
cmp
jecxz
aam
movsb
dec
std
push
mov
mov
mov
or
popf
push
rcrl
sbb
cmp
test
das
dec
loop
dec
mov
and
pop
lret
sbbb
loop
in
movsl
lret
enter
insb
loope
xchg
inc
sahf
mov
aaa
cmpsb
stc
add
fisttpll
rcrb
lea
and
mov
and
test
jno
in
test
mov
or
inc
pop
das
mov
adc
movsl
adc
mov
cmp
lods
mov
inc
sub
lea
xlat
pop
push
cmp
pop
sub
stos
jge
jo
fldl
movsl
shlb
or
ror
cmpsl
inc
scas
int3
jmp
xchg
int
sbb
mul
lcall
stc
xor
lea
stc
rcll
clc
fisubl
jae
lret
jb
mov
lods
xchg
xor
add
das
mov
or
repz
insb
int3
xchg
push
fidivs
stos
dec
les
mov
adc
pop
push
mov
push
sbb
loopne
xor
fcomps
stos
jle
xor
mov
cli
xchg
outsb
pop
mulb
xor
sub
dec
in
and
pop
mov
xchg
sbb
test
icebp
test
sub
gs
push
jae
cmp
in
icebp
sbb
shl
mov
les
test
pop
ljmp
int
enter
dec
and
mov
sbb
lcall
lods
push
imul
add
leave
fisttpl
pop
push
es
xchg
out
or
mov
or
outsb
out
lret
mov
add
mov
lods
lret
inc
jecxz
and
test
inc
insb
push
sbb
adc
dec
jbe
movsb
xchg
faddp
ja
or
lret
dec
xchg
push
add
mov
das
mov
mov
shr
add
lods
dec
jp
mov
popa
jo
xlat
mov
sub
and
cmc
or
rcll
adc
sub
dec
inc
insl
les
and
push
ss
mov
mov
les
push
out
in
xor
push
push
fisttpll
adc
xchg
pop
cmp
inc
or
adc
mov
mov
stc
or
mov
pop
iret
shlb
std
pop
jmp
lea
cmp
dec
shrb
out
push
test
mov
add
dec
jmp
popf
test
sbb
lock
daa
mov
nop
dec
pushf
ficompl
inc
cmc
lds
add
repnz
mov
shl
inc
mov
mov
ljmp
and
sti
insl
lds
ljmp
inc
push
inc
outsb
call
push
inc
imul
sub
in
rcl
cmp
fucomp
daa
ficoms
out
arpl
ret
fucomi
mov
jb
insl
lods
xchg
ret
les
sbb
dec
mov
and
sti
shl
push
lcall
adc
int3
fidivs
enter
sarl
lret
stos
dec
xacquire
cmpsl
pop
std
ret
dec
movsb
arpl
dec
and
adc
sub
pop
in
mov
mov
in
mov
push
imul
push
cmpsl
inc
fnstsw
xor
lcall
mov
push
mov
popa
aad
mov
cwtl
rol
sub
push
push
jmp
arpl
repnz
xlat
das
dec
xchg
loope,pt
stos
stc
data16
ds
repnz
stc
inc
xchg
dec
in
incb
cld
push
int
sbb
mov
mov
lods
and
jp
adc
jo
xchg
mov
scas
jo
fildl
stos
pushf
rep
aad
xchg
dec
inc
sub
shr
outsb
jg
and
inc
out
adc
and
jne
std
push
test
mov
or
out
insb
cld
lret
push
pop
test
nop
cmpsb
push
xor
fisubs
jmp
xchg
xchg
fcomi
sub
pop
nop
into
pop
iret
sbb
fcompl
cmp
sub
and
add
ds
dec
xlat
dec
cmp
dec
mov
xor
lds
mov
adc
mov
mov
lret
fmull
leave
xor
ljmp
push
xchg
es
gs
add
jmp
jnp
cmp
push
or
in
loop
push
push
mov
pop
sbb
mov
cmpsb
xor
les
repnz
cmpsl
add
cmp
les
in
lret
xchg
cwtl
sti
inc
sarl
sbb
xchg
dec
divl
fidivl
sbb
ficomps
int3
out
imul
icebp
rorl
js
add
fwait
testl
xchg
push
inc
jecxz
and
mov
fnstenv
sahf
stos
adcl
dec
test
cmp
jecxz
fmul
mov
jle
adc
sbb
add
aaa
push
push
adc
shlb
mov
ja
xchg
pop
push
out
push
pushf
mov
jmp
and
test
int
repz
fsubs
adc
clc
sub
sbb
mov
aam
ret
mov
push
mov
push
fwait
jmp
inc
adc
icebp
inc
sti
push
testb
mov
mov
and
xchg
fcomps
adc
or
sbb
loopne
lods
xor
pop
lods
lret
insb
add
out
or
mov
in
jmp
insb
push
mov
jle
mov
out
in
jecxz
mov
cmp
fistpll
in
sbb
movl
ret
cmc
mov
mov
mov
pop
mov
mov
push
adcl
fsubs
nop
mov
or
inc
sti
loopne
mov
push
sub
lods
and
ds
sbb
and
adc
test
dec
lret
lods
scas
in
insl
in
mov
aas
out
cmp
int3
cmp
data16
add
sub
test
and
jb
jle
roll
insb
jo
pop
push
popa
push
jne
cld
xor
pop
and
adc
cmc
sbb
pop
gs
mov
xor
shll
ds
sti
roll
inc
imul
test
jmp
mov
in
sahf
push
jb
xlat
ss
pushf
data16
push
ljmp
xchg
aad
or
fsubp
pop
in
inc
push
jbe
ret
sbb
sub
and
int
and
les
pop
fnstcw
inc
push
inc
imul
icebp
and
xchg
sbb
loope
in
push
dec
add
in
push
xchg
aad
stos
mov
lods
sarb
mov
xor
lcall
fstl
xor
sahf
into
sub
mov
test
aad
xchg
rorb
mov
mov
mov
cmc
aas
push
incl
push
sbb
call
cltd
fabs
sbb
add
stos
mov
fldenv
jmp
nop
push
cmpsl
adc
sbb
repnz
xchg
pop
sahf
xlat
jbe
mov
jae
push
hlt
mov
cld
test
xchg
in
xchg
cmp
loop
ds
xchg
and
mov
xchg
sub
inc
movsl
loop
xchg
jecxz
call
push
rolb
push
push
fwait
push
outsb
aad
xchg
cmpsl
out
imul
push
pop
add
cmpsb
lods
sub
cmpsb
mov
cmpsb
mov
add
popa
and
inc
inc
pushf
mov
jp
push
xor
js
xchg
jbe
xchg
sub
or
dec
sub
movsl
sbb
mov
push
mov
pusha
dec
push
lcall
test
ds
jp
dec
lret
xchg
rcl
adc
xlat
out
cwtl
sub
mov
jo
mov
sbb
jne
leave
jnp
add
mov
ret
and
ja
mov
or
gs
pop
leave
inc
xchg
faddp
fldl
pop
shlb
repnz
int
pop
stos
insl
shll
sub
mov
jmp
mov
push
cmp
cltd
adc
add
or
pop
iret
nop
scas
orb
push
pop
std
cmpsb
pushf
and
mov
cmp
sbb
pop
aad
mov
add
inc
mov
pminub
or
push
cmp
lods
and
mov
pop
inc
jae
into
ss
out
mov
ljmp
jbe
cmp
jne
addb
sub
xchg
int3
xchg
xorl
gs
test
loopne
jge
add
dec
sbb
jl
sbb
pop
inc
add
fistps
push
mov
int
rcrl
pop
mov
into
fidivrl
xchg
enter
push
arpl
lcall
mov
rcll
pop
mov
mov
ja
jae
dec
mov
push
scas
test
jg
xor
xor
inc
cmp
push
push
or
cmp
xchg
dec
rolb
scas
ficomps
shlb
cltd
cmp
xchg
inc
add
sbb
or
loopne
adc
jecxz
outsb
jns
or
adc
inc
or
dec
out
jge
xlat
xchg
cmpb
fildl
pop
sbbb
xchg
pop
rclb
in
push
lret
pusha
sub
pushf
in
fs
out
mov
adc
shl
dec
mov
mov
xor
cmp
subb
mov
mov
ljmp
das
aam
pop
imul
or
int3
push
movsl
ret
inc
adc
or
dec
sar
xlat
sbb
cltd
shl
in
imul
aam
sbb
out
call
mov
icebp
aad
fs
dec
pop
into
mov
lret
movsl
out
sbb
xchg
lret
inc
shr
sbb
imul
xchg
push
mov
jno
cmp
es
ljmp
das
inc
jle
shlb
mov
ret
and
int3
sarl
fsubr
pop
adc
gs
push
mov
mov
repnz
aas
ret
fwait
xchg
out
push
add
push
pop
xor
mov
scas
lcall
in
jmp
jo
hlt
loop
cmp
rclb
daa
dec
mov
cmpsl
jg
and
cli
push
and
push
mov
add
cwtl
mov
sub
dec
and
add
loop
cmp
es
call
outsb
add
push
call
dec
mov
jnp
adc
sub
pop
ret
sahf
sti
cmp
push
loop
add
add
lahf
mov
mov
mov
call
scas
pop
xchg
js
dec
aad
jbe
into
es
je
xor
xor
nop
addl
fimull
dec
sbb
pop
add
or
bound
out
icebp
test
sbb
xor
push
pop
and
add
mov
scas
adc
hlt
jno
fbstp
mov
icebp
sub
add
in
add
inc
nop
xchg
inc
jge
je
fwait
imul
bsf
insb
sbb
outsb
sahf
lret
sub
fisttpl
insl
pop
push
jg
les
push
inc
push
push
and
and
ret
jge
arpl
mov
mov
icebp
jne
cmpsl
negb
ljmp
jbe
les
lea
inc
dec
pop
gs
stos
sub
outsl
mov
ja
fiaddl
imul
push
push
lahf
dec
shr
pop
cltd
dec
jecxz
out
je
xor
leave
fcoms
push
adcb
shrb
add
adc
dec
or
sbb
pop
pushf
mov
push
outsl
jg
leave
mov
fyl2xp1
inc
ljmp
or
xchg
repz
dec
mov
sub
mov
push
mov
lret
loop
fcoml
and
push
jns
hlt
pop
popa
bound
fiadds
pop
cmp
pop
enter
xorl
and
sbb
mov
push
xchg
mov
and
push
add
fs
leave
mov
ljmp
adc
je
int3
fisttps
ljmp
clc
sbb
xchg
ret
lock
shrb
jmp
dec
or
xacquire
ret
ljmp
mov
sbb
inc
xlat
inc
dec
jecxz
pop
nop
xor
into
lods
sbb
jbe
cwtl
pop
je
inc
test
pop
data16
jb
insl
mov
lds
fadd
lock
inc
mov
cltd
add
lds
or
popf
inc
xor
out
add
clc
mov
xchg
lret
mov
movsb
cld
push
popf
or
pop
xor
xor
lahf
sub
sub
rolb
add
jge
xor
lcall
lret
mov
adc
movsb
jo
sbb
push
cmp
ss
fcom
dec
addr16
insb
movsl
jecxz
inc
mov
pusha
add
push
clc
cmpl
or
adcb
mov
out
push
mov
leave
jb
movl
data16
mov
bound
test
mov
fidivrl
fisttpl
dec
in
dec
fsubrp
xor
push
insl
repnz
js
dec
stos
or
dec
sub
mov
addr16
into
sub
in
repz
into
jmp
fwait
lds
call
lock
sub
ss
dec
adcl
and
sahf
inc
call
ds
jo
rol
dec
fwait
adc
cmc
fadds
adc
addr16
push
out
cmp
xorl
mov
xchg
fadd
pop
repnz
xchg
loopne
cmp
addr16
adc
mov
inc
or
xchg
mov
dec
add
mov
and
jo
movsb
jo
add
ds
or
xchg
int
add
mov
jle
outsb
pop
enter
int
xchg
inc
mov
shll
xor
mov
dec
mov
push
call
dec
mov
cmp
jge
push
cmp
xchg
out
rorb
jmp
cltd
imul
stc
dec
imul
adc
lret
mov
test
mov
scas
jae
test
xlat
mov
push
stos
mov
xchg
js
adc
out
adc
out
inc
mov
idiv
pop
loopne
xchg
mov
mov
jo
and
sub
dec
fsubs
andl
add
pop
mov
das
cmp
fnstenv
xchg
jbe
sub
int3
cwtl
add
mov
adc
xor
cmpsb
lret
call
mov
mov
sub
sbbb
dec
inc
pop
insb
xor
mov
adc
push
pusha
add
xchg
add
ss
jns
fsubrl
sub
jle
add
pop
xchg
inc
lret
sub
push
mov
jo
addb
inc
nop
ljmp
hlt
sub
push
cs
pop
add
xchg
or
fistl
inc
jl
xlat
addr16
pop
sub
xchg
fldl2e
mov
mov
xchg
push
push
sbb
adc
pop
inc
insb
lret
push
mov
hlt
and
adc
pop
in
std
out
daa
pop
in
jecxz,pn
xchg
pop
cwtl
pop
mov
jb
push
fsts
push
popa
xor
filds
pop
inc
mov
pop
fistpll
scas
popf
arpl
mov
aas
fxch
jne
fdiv
fisubl
cmp
push
xchg
and
or
imul
fistps
imul
leave
rol
lcall
movsb
push
cld
mulb
adc
movsl
dec
je
cmp
jle
sti
lret
mov
add
sti
ds
ret
jbe
cmp
rcll
sbb
test
push
mov
call
jae
mov
loopne
fsubr
scas
stc
push
add
popf
je
dec
inc
orl
clts
into
add
or
inc
in
add
sahf
sub
add
movsl
sbb
sub
pop
loope
inc
mov
bound
push
xchg
cltd
popf
movsl
sarb
push
inc
sbb
jle
testb
xchg
pop
insl
int3
mov
data16
xor
lret
les
add
stos
test
bound
jae
aad
enter
add
dec
hlt
xchg
push
xchg
mov
lock
add
daa
int3
inc
push
push
dec
or
sbb
leave
and
lcall
lret
js
das
xchg
mov
in
add
dec
push
mov
mov
rorb
js
movsl
or
fldenv
and
mov
sbb
movsl
adc
mov
mov
out
loopne
int
mov
xorb
jo
or
push
in
nop
pop
stos
or
dec
movsb
xor
dec
mov
sbb
jecxz
sub
mov
push
ficomps
mov
fisubrl
sbb
xchg
cltd
or
test
cmp
test
mov
out
js
dec
xchg
jbe
stc
ret
shlb
jnp
inc
jnp
adc
pop
mov
movsl
sbb
mov
mov
jne
outsb
in
mov
aam
int
inc
pusha
cmp
pusha
jp
lcall
lea
or
and
and
lods
mov
ljmp
icebp
add
push
data16
xor
mov
pop
xorb
cmp
gs
clc
pop
mov
loop
movsl
mov
xchg
mov
mov
mov
adc
fdivrs
cmpsb
das
sub
sahf
roll
dec
call
push
push
pop
push
cmp
cwtl
filds
mov
ja
jle
xor
sbb
inc
adc
sbb
xor
rol
mov
adc
loopne
mov
inc
jge
sbb
lds
add
cltd
lret
jne
pop
cmp
sub
xchg
fdiv
jecxz
fdivl
pushf
dec
push
std
adc
or
mov
xor
push
pop
scas
mov
jbe
push
ja
sub
mov
iret
in
mov
mov
xor
or
ret
insl
cli
out
dec
jbe
hlt
xor
xchg
movsl
rcrl
fisubl
out
inc
pop
sbb
and
mov
jle
outsl
pop
jge
sub
roll
lods
int
inc
shll
int
xchg
or
lcall
and
adc
xchg
outsl
insl
fld1
mov
pop
mov
popa
ret
dec
popa
mov
andl
roll
into
gs
ficompl
pop
test
mov
mov
mov
fldcw
inc
xchg
jb
loop
shlb
ret
dec
mov
adc
mov
pop
out
mov
rcrl
test
mov
push
shrb
mov
loop
stos
jp
gs
or
cmp
mov
icebp
adc
hlt
xchg
jbe
nop
xchg
mov
imul
outsl
mov
xchg
imul
xchg
ds
fs
inc
and
dec
add
push
mov
ja
loope
es
fisubrs
mov
les
xchg
icebp
dec
push
orl
mov
shrl
loop
arpl
and
test
pop
mov
jmp
sbb
stc
fsubrl
aam
ljmp
jge
test
aad
dec
stc
dec
fs
into
shlb
out
xor
fisubrl
test
xor
mov
rcrb
rcl
data16
stos
mov
ja
or
dec
mov
mov
je
or
bound
pop
push
idivb
and
add
scas
xchg
cmc
int
pushf
sbb
push
xor
push
pop
or
or
xchg
push
push
into
sub
lods
xor
into
push
ljmp
fldenv
inc
cmp
cmp
lds
movsl
dec
mov
inc
xor
mov
std
push
sbb
adc
in
stos
into
jno
mov
ss
in
dec
repnz
mov
mov
insl
mov
mov
inc
pop
sbb
jg
lcall
faddl
xchg
dec
sbb
sub
out
loope
pop
out
mov
fwait
imul
mov
pop
mov
mov
add
mov
dec
iret
outsl
inc
cltd
jb
out
sbb
mov
adcb
pop
daa
rol
into
andb
fstpl
int3
mov
inc
push
dec
push
pop
in
xchg
cmc
xchg
dec
mov
out
push
cmp
rcrb
adc
mov
mov
sbb
arpl
call
daa
mov
out
into
jbe
mov
sub
call
push
jo
shll
fnsave
or
xchg
mov
mov
inc
subl
cmp
push
jae
repnz
popa
xchg
movsl
adcb
lods
mov
cmpsb
gs
shrl
sbb
lock
sbb
test
add
xchg
xchg
dec
xchg
imul
sbb
mov
call
cmp
hlt
mov
outsl
rclb
or
xchg
cmpsb
or
jmp
sub
repnz
dec
sub
cmp
and
pop
pop
ficomps
cmc
bound
push
sbb
mov
movsb
adc
lahf
mov
sub
mov
mov
add
or
dec
jae
mov
int3
jno
xchg
xchg
sbb
push
cld
dec
xor
int3
es
aad
xchg
or
push
test
add
scas
sbb
push
sbb
xor
jnp
xorb
cmpsl
repz
inc
jb
jmp
sbb
imul
loop
push
adc
nop
xchg
sbb
push
mov
add
adc
push
out
push
ret
std
dec
add
sti
in
add
or
pop
adc
sub
loop
mov
jmp
iret
mov
cmp
mov
add
fcompp
push
lods
scas
xchg
xor
or
sbb
subb
ljmp
sub
iret
cmpsb
dec
xchg
sahf
lret
sbb
pop
cli
std
fbstp
mov
mov
nop
sbbl
inc
sub
enter
mov
or
pusha
imul
mov
aas
int3
cmp
push
mov
xchg
pop
jmp
lahf
xchg
xor
ja
push
test
or
lods
sub
arpl
out
jp
dec
call
sbb
sti
cmpsb
cltd
scas
lcall
les
or
aas
push
adc
and
mov
notl
push
dec
pop
xchg
ss
jp
into
insb
mov
inc
mov
or
inc
data16
fldcw
push
in
ljmp
pushf
mov
fildll
sub
cmp
orl
cmp
push
pop
mov
repnz
xchg
pop
testb
pop
int
loop
outsb
fs
cmpl
adc
and
out
das
icebp
imul
arpl
cmpsb
fstpl
push
xchg
lds
push
daa
mov
loopne
pop
and
lret
jp
divl
mov
enter
jecxz
outsl
adc
and
sbb
xor
orl
mov
dec
dec
jmp
fistpll
enter
rcrl
jbe
loope
inc
inc
xchg
test
jnp
push
cli
push
ja
add
movsl
dec
es
or
je
push
xor
dec
lds
aas
stos
movsb
sbb
mov
out
xchg
pop
pop
js
and
or
enter
insl
sub
cmp
in
inc
inc
ja
fcmove
lods
popa
cltd
jnp
iret
mov
rcr
jb
jbe
dec
call
pop
test
jb
scas
scas
mov
div
in
jmp
sub
sarb
cmpsb
stc
push
bound
pop
stos
mov
shlb
das
gs
ficoms
mov
cs
pop
sbb
xchg
daa
aad
popa
mov
or
dec
adc
cs
aaa
imul
sbb
aaa
out
xchg
insb
add
mov
sarb
mov
sub
gs
add
into
push
lret
inc
jecxz
inc
adc
pushf
adcb
cmc
sub
popa
scas
lcall
pop
aad
push
pop
in
enter
movsb
mov
pop
leave
jae
shrl
and
lret
stos
fdivrl
jecxz
lock
imul
loop
xchg
cld
stc
cmpb
jg
popf
ret
in
insl
xchg
ret
divb
shlb
mov
mov
repz
mov
mov
mov
std
push
fistpll
jnp
test
lret
pop
test
mov
push
dec
outsb
repz
or
add
cld
and
jmp
fst
dec
outsb
ss
and
loop
push
loopne
fdivs
jae
cli
push
sahf
jnp
andb
inc
mov
std
push
adc
push
aam
jbe
xchg
mov
rorb
dec
adc
add
imul
push
mov
push
enter
sbb
loope
or
repz
pop
mov
aam
mov
les
loop
xchg
push
or
inc
loope
rcr
and
scas
aad
sbb
loopne
sahf
sbb
nop
jg
loopne
es
mov
pop
cmp
jg
lea
dec
pop
xchg
inc
mov
inc
into
or
adc
loop
shll
test
mov
leave
push
jecxz
out
and
cmp
sub
lock
mov
sub
jbe
lret
pop
mov
push
clc
inc
xchg
sahf
xchg
mov
imul
pop
mov
sub
xor
lcall
fcoml
pop
insl
nop
cmp
push
jecxz
mov
mov
push
dec
fnstenv
neg
cmpsb
mov
xor
xor
cmp
aad
cli
push
xor
push
add
jns
sbb
mov
pop
dec
sub
dec
ljmp
iret
xorl
push
pop
pop
push
mov
es
and
ljmp
fldcw
mov
out
in
mov
xchg
xchg
movsb
loop
lock
xchg
insl
push
call
das
sahf
or
lds
into
and
push
out
jne
push
jmp
add
xor
lahf
popa
adc
cmp
rorl
ltr
lcall
mov
std
loopne
cmp
stos
cwtl
in
sahf
sub
mov
jae
adc
adc
and
mul
push
ret
out
enter
pop
in
sbb
xor
jns
mov
dec
enter
ret
and
sub
sbb
stos
daa
mov
mov
les
push
inc
in
rolb
inc
mov
or
pusha
aam
or
pop
or
or
xor
shll
mov
adc
stos
aam
jecxz
gs
lret
adc
adc
daa
push
fldcw
mov
fnstenv
mov
mov
push
sub
nop
das
jbe
pushf
int
in
pop
idivl
das
int3
test
push
mov
test
or
or
pop
lahf
test
rcr
pop
pop
jg
lahf
rclb
pop
gs
loope
push
es
dec
pop
shrl
lahf
xchg
or
mov
mov
jbe
loop
fsqrt
lods
call
out
pop
pop
cmpsb
xorb
int3
mov
andb
pushf
sbb
mov
pop
es
sub
fs
push
mov
aam
shr
mov
stos
aad
loop
cmpsl
mov
flds
pusha
push
push
mov
in
xlat
ret
push
shrl
out
shlb
or
int
cs
inc
mov
mov
cmc
sti
push
es
cmp
inc
lods
push
mov
or
push
and
in
das
and
ds
cmp
mov
sbb
adc
xchg
adc
jb
ss
gs
mov
cmp
mov
lcall
adc
xchg
or
orl
jecxz
jecxz
in
insb
int
test
fwait
push
xchg
push
icebp
push
jecxz
cmp
out
loope
mov
cmpsb
ljmp
push
int
popa
fsubrs
fcoml
cmpsl
mov
in
aam
inc
jp
xorb
jg
xor
cmp
mov
filds
fs
lods
adc
outsb
jp
xchg
dec
jae
inc
xchg
dec
insl
mull
xchg
adcl
iret
insl
push
and
pop
lahf
mov
aaa
in
jge
sahf
je
xchg
or
out
jbe
call
test
xchg
jmp
and
fstl
rcrb
push
mov
push
pushf
pop
cli
add
sbbb
fwait
out
push
dec
outsb
push
rcr
and
adc
jmp
das
es
repnz
add
mov
sub
mov
push
lds
inc
aam
jmp
fildl
cmp
sahf
mov
cmp
hlt
push
push
imul
nop
xor
push
lret
push
hlt
int
xchg
out
popa
lcall
fwait
out
test
enter
push
sti
pop
pop
dec
push
lods
xchg
mov
cmp
out
lea
loope
inc
dec
loop
pusha
sbb
mov
sbb
rcrb
fcmovbe
mov
scas
pop
fidivs
inc
xchg
jmp
icebp
add
fidivrl
inc
out
or
or
cltd
add
sahf
aam
pop
sahf
scas
sub
xor
aas
iret
in
inc
inc
inc
push
push
pop
stos
push
add
push
inc
push
dec
mov
ds
lock
es
pop
cltd
es
daa
jecxz
push
jg
je
cmp
push
adc
xchg
bndldx
add
push
xchg
mov
add
inc
xchg
jno
ret
xchg
iret
sub
jmp
lahf
cmp
les
es
push
fsubrp
enter
repnz
daa
shll
rcr
mov
jmp
ss
lock
sbb
test
mov
mov
lea
cwtl
push
outsl
jecxz
negl
fucompp
lods
jecxz
ljmp
add
icebp
mov
mov
xor
lods
sbb
int
dec
xlat
neg
pusha
xor
fsubrl
inc
mov
pop
or
fmuls
inc
dec
sahf
pusha
or
mov
rorb
sub
sub
or
cmp
cld
into
cmp
add
push
pop
mov
xchg
dec
and
jg
pop
sub
and
scas
fimuls
pop
inc
mov
xchg
lcall
push
push
xchg
out
jae
sbb
arpl
dec
mov
push
repnz
and
lcall
data16
xchg
dec
call
pushf
push
adc
add
ljmp
std
inc
mov
or
mov
push
imul
mov
lea
es
inc
push
imul
cli
mov
lods
jno
ja
dec
and
outsb
stos
pusha
cmpsl
out
mov
sub
mov
sahf
jmp
mov
sar
xchg
imul
xchg
pop
pushl
aam
lds
sbb
out
adc
out
xchg
roll
push
shrb
sub
cmpsb
mov
mov
inc
imul
pop
lea
xchg
loope
pushf
add
outsl
in
xchg
sub
int
adc
add
xchg
movsl
jo
inc
mov
and
mov
jge
fistpll
ret
adc
push
sub
icebp
cmc
dec
and
addr16
push
mov
jecxz
cmp
cmp
test
sub
push
adc
lock
jmp
xor
xor
mov
adc
stos
jne
dec
and
test
fsubrs
call
imul
inc
mov
inc
sahf
cmp
jg
gs
inc
rcl
push
adc
push
movsl
int
pop
or
push
adc
dec
lcall
inc
push
inc
in
add
mov
jo
inc
ja
int
repnz
sub
push
mov
arpl
add
lahf
movsl
lods
or
cmp
das
fisttps
fs
bound
jbe
aad
xlat
dec
ret
sbb
icebp
dec
lahf
leave
mov
rcll
cltd
cmp
mov
push
cmpsl
xchg
sub
insb
sub
loope
mov
out
sbb
pop
pop
addb
imul
xchg
mov
and
idivl
leave
rcrb
mov
jecxz
icebp
mov
scas
int
mov
fisttps
and
xchg
mov
push
scas
inc
push
mov
dec
lds
arpl
iret
sarb
shlb
lock
mov
into
jmp
push
mov
notb
jmp
inc
mov
adc
mov
push
int3
sub
aaa
sbb
imul
add
sub
out
rorb
push
leave
loop
je
fstl
xchg
out
popf
insl
bound
xchg
popa
icebp
push
aaa
mov
mov
jle
push
mulb
rorl
or
outsb
jbe
and
out
popa
sbb
nop
loopne
cs
add
pushf
push
jbe
sbb
add
xchg
xchg
inc
jbe
mov
popf
leave
mov
not
call
int3
and
mov
lock
or
xor
cld
mov
rclb
sub
pop
negb
orl
mov
xor
scas
ljmp
adcl
dec
aad
call
mov
ret
and
cs
push
xchg
sub
loopne
sbb
in
adc
imul
loopne
arpl
ss
and
cmpsb
and
adc
ret
push
jl
fisubrs
cmp
lcall
jnp
push
icebp
loopne
jecxz
inc
mov
and
bound
inc
lods
push
fbld
sub
clc
sub
loop
loope
or
cmp
inc
jbe
aam
pop
mov
mov
enter
xchg
fs
rolb
inc
cmc
in
xchg
enter
xchg
ret
hlt
sahf
ss
fcmovbe
testb
lret
add
sub
mov
add
dec
mov
xchg
cmp
lret
xor
sbbb
cmp
adc
enter
fisttps
xchg
sub
out
movsb
sub
mov
jle
dec
xchg
sar
int
pop
ret
fcmovnb
fmulp
movsb
xchg
pusha
dec
ret
fst
dec
mov
mov
push
jmp
scas
inc
gs
lods
lahf
shll
cmp
xchg
mov
inc
inc
shlb
or
inc
mov
mov
sahf
leave
and
arpl
mov
push
inc
shrd
xorl
xor
mov
in
add
aam
cmp
ds
mov
jo
stc
sbb
int3
lock
xchg
mov
and
loopne
jns
sub
fdivrs
gs
xchg
mov
insl
sbb
fcoms
sbb
das
out
cmc
push
jmp
mov
icebp
pop
insb
fiaddl
enter
cs
arpl
sbb
ljmp
icebp
pop
or
pop
shll
mov
movsl
xchg
xlat
inc
push
pushf
es
xchg
movsl
mov
outsl
call
cmp
add
add
pop
xchg
cmpsl
inc
jmp
add
mov
xchg
push
fwait
sbb
shrl
arpl
xchg
mov
jne
bound
xlat
pop
mov
push
xchg
cmp
push
out
sub
add
push
mov
nop
sub
sar
into
push
nop
fwait
loop
dec
test
lahf
mov
xchg
fnstcw
sbb
mov
movsb
xor
jmp
test
insb
int
div
and
jle
in
lea
lret
insl
pop
jmp
mov
adc
roll
lods
lea
rcrb
jbe
pop
mov
adc
int3
dec
call
mov
fsub
outsl
sub
sub
push
xchg
jge
lcall
iret
out
imul
cwtl
daa
cwtl
pop
ds
ret
push
push
push
idivb
movsb
daa
push
ret
bound
into
lea
out
lods
std
xor
mov
in
rcr
push
sbb
cmp
mov
pop
insb
test
imul
es
ss
sbb
pop
bound
pusha
jo
push
in
sub
cmp
popf
adc
sbb
test
data16
movsl
call
cmp
fucom
and
call
sub
mov
cmpsb
xchg
add
mov
mov
pop
loop
sbb
fs
out
xor
adc
fistpl
sahf
stc
daa
mov
and
insl
int3
aad
xor
cld
mov
sahf
add
and
jbe
lock
xorb
adcb
jg
fwait
jge
push
hlt
sbb
pop
push
xor
dec
sahf
testb
loop
xor
xchg
pop
sbbl
sub
add
imul
dec
pop
cmp
mov
outsb
rorl
xchg
pop
jns
mov
test
sub
mov
js
xchg
cmp
sbb
ja
orb
sbb
xor
mov
pop
fisubrs
cld
jmp
call
push
pop
pop
jbe
xor
repz
lahf
dec
pop
negb
cmpsb
pop
arpl
in
sti
dec
xlat
sub
fstps
cmp
stos
aad
push
jg,pn
imul
mov
decb
outsb
cld
insl
push
push
cmpsl
jno
lods
push
je
and
out
inc
mov
cld
shl
shlb
mov
push
xor
into
mov
push
mov
out
mov
das
enter
dec
or
cwtl
inc
and
nop
pop
pop
dec
sub
sub
pop
mov
pop
mov
add
xchg
dec
mov
xchg
cld
adc
inc
rcrl
fdivrs
add
jmp
jns
lahf
xchg
lret
inc
push
inc
ds
pop
mov
xchg
js
clc
insb
pop
jg
push
xor
pop
lahf
dec
mov
push
push
jp
adc
dec
pop
loop
push
pop
sub
inc
out
inc
pop
dec
lods
jb
mov
push
or
mov
leave
cld
sbb
lret
cmpsb
adc
add
lods
push
mov
cmc
push
pop
les
dec
enter
xor
nop
and
add
push
mov
or
or
lret
loope
pop
jmp
mov
loope
sahf
popf
aaa
pop
add
jl
cwtl
sbb
andl
mov
mov
inc
loopne
enter
mov
xor
pop
xchg
lret
popf
mov
addr16
loope
mov
loope
data16
sbb
insb
loope
rcl
adc
add
cmp
adc
lds
mov
shll
pushf
jg
es
xchg
cli
xchg
ljmp
insb
jle
mov
mov
js
xchg
stos
or
std
adc
sahf
cs
pop
jmp
lods
sarl
xchg
jne
xchg
scas
stc
xchg
andb
out
loopne
xor
or
ljmp
mov
add
dec
push
repz
dec
jno
cmc
call
rclb
pop
push
pop
mov
mov
fxch
scas
sub
movsl
rorb
xor
jnp
jmp
out
pop
sbb
xchg
loopne
jmp
pop
inc
mov
lcall
xchg
and
fcoml
pop
lret
rcl
mov
sbb
lret
pop
and
xchg
dec
stos
mov
shl
sbb
fwait
add
mov
jb
pop
adc
cmpsl
sub
out
lahf
mov
sbb
call
lods
daa
xchg
mov
inc
cld
addb
mov
in
pop
inc
lret
jb
cmp
ja
ds
pop
stos
sub
ljmp
mov
mov
ja
divl
shll
inc
jecxz
and
movsb
fisttpll
roll
loopne
cmpsl
dec
inc
mov
adc
test
and
dec
mov
mov
inc
sti
jne
aam
pushf
lahf
mov
arpl
sbbb
inc
dec
adc
cmpsl
xchg
std
nop
subb
fisttpll
loopne
imul
push
push
loopne
fistl
and
sahf
in
lret
add
fnstcw
lret
movsb
xchg
data16
fwait
jmp
es
stc
out
cmc
adcb
and
test
es
mov
addr16
mov
loop
add
lcall
xor
lods
dec
outsl
and
push
jns
in
fimuls
mov
mov
mov
into
and
outsb
jne
mov
mov
fnsaves
cmpb
or
lret
orb
xchg
inc
fcmovbe
scas
icebp
sahf
daa
sbb
pop
fildll
push
dec
pop
push
in
jne
fisubrs
mov
cmpsl
rclb
pop
xchg
cwtl
fcom
pop
adc
mov
nop
pushf
sti
shl
xchg
lret
arpl
dec
sahf
mov
fcmove
int3
xchg
mov
cmpsl
sbb
sub
sub
or
pop
fisubl
jns
mov
popf
lods
lret
pop
cli
mov
pusha
push
int3
and
pop
repz
mov
mov
negb
sub
push
or
pushf
add
xor
clc
jns
loope
push
xchg
mov
adc
xchg
shrl
and
sti
mov
adc
jmp
dec
shlb
jno
icebp
mov
jae
dec
test
lds
ret
sub
cmp
inc
in
cwtl
inc
cwtl
mov
inc
scas
cli
test
mov
xor
xchg
inc
or
pop
cld
sbb
mov
mov
stc
pop
fwait
notb
dec
loop
inc
arpl
aad
insb
das
mov
les
jb
inc
lods
notl
adc
pusha
adc
enter
and
xchg
mov
addr16
sti
fisttpl
adc
andl
xlat
fs
sub
into
ja
xchg
subb
push
cmp
add
dec
out
stos
cmp
fsubp
sbb
sbb
fdivs
scas
lcall
imul
dec
imul
into
dec
stc
mov
hlt
mov
test
pop
stc
adc
iret
cltd
pusha
xchg
out
pop
dec
dec
push
fisttpll
lea
pop
stc
jecxz
push
ret
cmp
xor
mov
push
fsub
mov
or
fs
addr16
jle
mov
js
mov
iret
das
scas
mov
fmuls
jmp
sbb
push
fiaddl
add
xchg
push
and
inc
les
inc
insb
je
sbb
mov
cmpsl
push
jae
xchg
or
dec
mov
fdivr
aad
clc
out
push
or
push
lea
push
bnd
mov
pop
dec
sub
inc
nop
jne
scas
inc
mov
and
mov
sahf
jae
fnstcw
and
push
out
ret
and
mov
inc
cmc
push
and
inc
cmp
lds
mov
xor
rorb
mov
aad
mov
mov
inc
cmp
mov
fs
mov
add
jl
mul
xor
add
jp
pop
and
or
ret
add
incl
mov
mov
filds
mov
jno
jns
mov
sbb
sub
push
mov
sarl
shll
test
mov
aas
lret
mov
dec
stos
pop
repnz
inc
roll
int
dec
mov
xchg
mov
loop
insb
mov
iret
ss
ljmp
inc
fildl
ret
xchg
ja
mov
arpl
ds
jecxz
fs
or
adc
sub
ret
mov
jecxz
or
mov
rorb
pop
dec
cwtl
or
pusha
lds
mov
push
and
iret
fstpt
jns
push
lods
into
mov
incb
das
loope
jo
jl
jp
inc
jmp
jae
inc
push
jbe
jnp
or
popa
pop
mov
cmp
jne
mov
jmp
mov
ljmp
inc
add
dec
mov
ficompl
xchg
mov
inc
adc
xor
jge
loop
imul
lahf
sub
sub
pop
shll
adc
fdivp
mov
jbe
xchg
xlat
jmp
nop
les
xchg
push
push
mov
pop
and
jp
sub
mov
adc
mov
mov
int
pop
les
daa
mov
jns
or
movsb
mov
mov
mov
add
sub
test
mov
orl
bound
pusha
mov
jle
mov
and
scas
movsb
push
lcall
lahf
inc
sahf
data16
iret
sahf
mov
jbe
jg
mov
clc
out
add
push
adc
push
rclb
imul
pop
fimuls
lret
je
and
ffreep
sub
dec
movb
or
jle
data16
push
cmpsb
aas
and
xchg
dec
in
enter
xchg
jne
mov
pop
aam
out
inc
in
mov
lods
outsb
nopl
pop
test
add
scas
xchg
imul
xchg
scas
push
lret
pop
add
xor
cmp
mov
adc
aad
sub
cwtl
scas
bound
aas
push
mov
add
out
mov
xor
cld
mov
int3
inc
aad
lds
xchg
movsl
in
lahf
fildll
lahf
out
mov
fcmovbe
push
push
dec
iret
pop
add
mov
aad
inc
dec
aas
inc
xchg
sbb
add
les
insb
shll
fdivs
push
lock
lods
out
sub
xchg
pushf
sbb
ret
sub
daa
and
push
lock
mov
out
es
loopne
cmpsb
xchg
data16
pop
rorb
leave
push
out
push
or
lret
shll
test
sbb
bnd
lcall
insl
and
mov
sub
jne
jmp
ss
push
add
sub
mov
pop
pop
and
xor
lahf
es
pop
mov
xchg
scas
fcoms
sub
xor
xchg
dec
xchg
push
lcall
or
ljmp
cmp
notl
jl,pn
pop
ficompl
jns
and
cmpl
mul
les
dec
ficoms
fcompl
into
pop
xchg
shll
and
test
fwait
scas
mov
pop
mov
repnz
add
xor
cmc
test
mov
mov
inc
lret
fdivr
cli
or
push
sarb
push
jbe
sbb
jbe
and
cmpb
mov
ljmp
je
xchg
adc
xchg
pop
mov
popa
shlb
mov
shlb
cli
sarl
and
dec
adc
jecxz
mov
cmp
sbb
cmp
icebp
es
push
fisubl
icebp
scas
jmp
ja
xor
int
outsb
push
rcl
and
xchg
sub
pop
lea
push
ret
sub
bound
inc
xchg
enter
mov
les
loopne
outsb
cwtl
or
loop
in
cmc
xorb
jb
je
cli
jge
inc
cli
jmp
flds
faddp
aad
mov
ljmp
sti
adcl
xchg
neg
mov
loop
pop
outsb
xchg
xor
lret
add
test
jae
sub
idiv
fcomps
add
imul
insl
sub
cmpl
fists
xrelease
jmp
mov
jae
ds
jle
lahf
repz
lock
mov
pop
stc
inc
dec
out
in
in
cmp
adc
jmp
lds
jo
neg
jo
into
push
pop
push
rcrb
mov
and
push
arpl
push
sub
or
ja
xchg
fnstcw
aam
rcrl
out
pop
mov
and
icebp
ret
cmp
push
push
inc
bound
or
enter
decb
mov
into
sub
ss
push
scas
adc
fwait
scas
bound
xchg
pop
xchg
ljmp
pop
adc
jmp
popa
popa
insb
or
push
out
ficompl
rorl
imul
push
test
push
sub
cmpsl
shrl
mov
fldl
inc
mov
pop
xlat
dec
lods
jl
inc
push
rcll
ds
mov
in
or
xlat
test
adc
lds
adc
push
pop
js
repz
xor
jne
in
hlt
adc
and
arpl
out
loopne
pop
int
sbb
or
std
loop
subb
aaa
ja
in
or
mov
ss
fsts
push
sub
jnp
fnsave
scas
push
or
mov
mov
or
sub
mov
ja
cmp
and
mov
push
dec
fcmovnbe
lock
mov
movsl
fmul
push
int3
sti
add
fcmovnb
sbb
mov
lods
imul
mov
push
in
movsl
dec
xchg
adc
lods
shrl
xchg
and
frstor
or
sbb
repz
mov
pop
dec
psubusb
imul
add
and
stos
inc
xchg
lret
sub
push
loop
movsb
rcr
inc
xchg
adc
sub
or
lock
push
insb
lret
mov
sbb
movsb
gs
inc
es
xchg
dec
adcb
lock
and
movsl
mov
out
fs
insl
mov
pop
sub
mov
jecxz
cli
loope
insb
sbb
and
dec
pop
gs
dec
mov
cs
lahf
adc
add
push
xchg
lods
das
pop
ret
into
jge
data16
pop
je
dec
pop
cmp
popa
in
dec
xchg
orl
xlat
push
xchg
push
mov
and
dec
sbb
mov
mov
lret
notb
in
fwait
sti
push
xorb
pop
jbe
cmc
or
pop
mov
jle
cltd
shrb
loopne
movsb
pand
cmp
dec
ljmp
int3
push
xlat
jae
jl
mov
jecxz
and
jp
cmp
dec
lret
cmpsb
xchg
pusha
xor
inc
arpl
daa
or
pop
ret
sbb
jl
pop
xchg
xchg
jecxz
add
in
scas
or
cmp
jge
mov
mov
insb
inc
icebp
cs
out
fs
add
inc
jb
out
jbe
mov
inc
and
out
daa
adc
dec
xchg
jae
jmp
or
orl
cwtl
and
dec
or
in
jle
lret
or
add
xor
fdivr
fs
sahf
xor
rolb
mov
mov
mov
add
shrl
outsl
xchg
and
mov
xor
xchg
loope
push
fisttpll
xchg
dec
notb
push
outsl
sahf
push
inc
insl
lret
lret
rcr
cmp
and
xor
out
lea
dec
cmp
adcl
mov
jbe
bound
xor
pop
sbb
jmp
icebp
add
cmpsl
adc
loopne
xor
adc
cs
int
inc
test
getsec
call
mov
cmp
cmp
pop
mov
push
call
ds
movsl
lock
or
inc
jno
lret
push
mov
push
xchg
push
or
arpl
inc
push
out
popa
lret
pop
sbb
or
and
cmp
xchg
lret
mov
mov
or
fldl
les
xchg
mov
test
xor
xor
xor
jae
insl
sahf
mov
pop
dec
jl
daa
xchg
nop
pop
cld
inc
notl
pop
sti
repz
outsb
ds
xchg
add
add
push
sub
clc
dec
sbb
popl
mov
enter
jp
mov
ror
popa
dec
mov
cmpsl
fmulp
iret
out
fidivl
sub
out
scas
js
xor
leave
jo
mulb
sti
jnp
jmp
sbb
sarl
add
inc
test
cltd
or
out
xchg
mov
les
fwait
dec
fwait
leave
jecxz
lods
clc
shlb
out
xchg
jne
movsl
test
xchg
cwtl
inc
cmpsl
addr16
test
push
jbe
xchg
aam
xor
fcomip
ficompl
jne
mov
fnstenv
dec
adc
xchg
or
push
iret
mov
lret
outsb
rclb
lahf
lcall
lock
out
adc
lods
in
cmc
xor
aam
stc
cmp
adc
hlt
jecxz
inc
cs
scas
pop
pushf
xor
aad
int3
test
insl
call
xor
cmc
ret
jb
jecxz
jae
clc
mov
icebp
lea
pop
outsb
xchg
out
adcb
call
dec
jbe
push
pushf
add
inc
sahf
push
pop
xchg
fwait
mov
ret
xchg
data16
or
inc
pop
inc
and
xchg
ds
mov
pop
ja
pushf
dec
dec
xorb
push
fsub
jae
cmpsl
aam
sub
into
mov
jmp
xor
mov
push
add
mov
mov
cltd
pop
pop
mov
mov
sar
sub
repnz
xor
cld
push
push
cltd
pushf
pushf
mov
sbb
aaa
ljmp
pop
pop
xchg
shlb
out
inc
push
bound
xchg
testl
sbb
das
adc
dec
jo
imul
call
mov
icebp
dec
jecxz
testl
jnp
movsb
cmpsl
mov
add
dec
cltd
pop
in
pop
jb
push
cmp
lcall
nop
push
jo
mov
or
notb
xorb
inc
push
mov
mov
push
lock
sbb
mov
movsb
fwait
jg
xchg
mov
aam
shrb
mov
add
movsl
hlt
cs
pop
pushf
nop
into
sub
xor
dec
xor
hlt
cmp
inc
shlb
xor
push
mov
lahf
mov
das
repz
pop
fstl
sub
mulb
pop
scas
xor
lea
ljmp
sbb
or
ljmp
push
adc
testl
add
lret
cmpsl
jnp
mov
stos
and
push
loope
push
sub
shll
cltd
test
jno
repnz
mov
mov
outsb
push
mov
and
xlat
jo
sub
mov
sti
std
pop
jecxz
adc
jns
iret
iret
mov
je
jb
aas
out
mov
lahf
out
dec
sarb
and
sub
xchg
sbb
pop
push
pusha
sti
sbb
roll
xchg
lock
and
xchg
ret
out
and
add
xchg
add
cs
stc
sub
bound
mov
jg
aam
push
negl
or
xor
push
daa
jnp
enter
ret
jb
push
sub
sub
popa
es
mov
push
fwait
std
in
adc
out
out
stos
fs
outsl
adc
andl
xchg
or
adc
es
pop
ret
jp
or
pop
adc
adc
fs
add
mov
dec
mov
and
or
sar
out
es
lods
xchg
fisubrs
mov
addr16
mov
inc
jo
clc
sbb
fcmovne
sub
gs
xchg
xor
imul
mov
and
fwait
mov
movsb
jbe
leave
mov
mov
cmpsb
mov
int
rol
filds
ficoms
sbb
sti
rolb
nop
xchg
and
pop
insb
orl
mov
mov
or
add
jne
je
inc
mov
in
jns
or
ja
jmp
ja
pushf
mov
mov
in
xor
pushf
outsl
adc
scas
sbb
dec
in
pusha
push
shrb
xor
ret
jecxz
mov
out
sbb
shlb
sarb
or
jge
pop
test
lahf
in
sbb
shlb
in
mov
cltd
mov
lret
in
shl
mov
faddl
icebp
vsubsd
sar
idiv
pop
fnstsw
mov
add
stos
mov
dec
adc
stos
in
fs
cs
push
fistpl
popa
fdivs
pusha
cmp
pop
sarl
cld
or
cmp
adc
lods
and
inc
nop
inc
stos
popl
adc
and
clc
repz
dec
mov
sbb
mov
outsl
xor
dec
pop
xchg
lcall
roll
scas
xchg
mov
popl
push
fs
pop
sbb
inc
or
sarb
adc
mov
test
hlt
rorb
cmp
xchg
imulb
and
adc
mov
jp
xchg
xchg
xchg
call
and
dec
int3
fwait
clc
sbb
scas
mov
or
loop
sub
iret
jbe
aam
jb
cmp
scas
jg
mov
div
cmpl
or
jg
jmp
pop
jb
scas
je
ja
stc
sbb
pop
and
pop
leave
dec
loopne
adc
rcl
xchg
add
adc
lea
call
mov
fbstp
inc
in
imul
sahf
push
pop
les
inc
mov
dec
push
cmpsb
negl
aam
fs
inc
push
cmp
xchg
dec
push
movsb
pop
int3
jmp
jo
xchg
orl
pop
mov
dec
testl
and
mov
enter
lods
xlat
push
push
xor
adc
pop
scas
mov
inc
lahf
fsts
jmp
shl
sbb
int
xchg
mov
andl
sbb
shlb
sbb
push
sarb
loopne
cmp
fisubs
sub
sbb
aad
sub
hlt
dec
pop
cmp
xchg
int
lcall
sahf
xor
das
stc
fdivs
push
mov
adc
mov
ss
jmp
push
aad
add
sbb
cwtl
std
fnsave
xlat
cwtl
ret
sarb
scas
mov
aas
orb
cmp
mov
fadds
pushf
gs
pop
xor
ja
lcall
into
aaa
in
mov
mov
pop
andl
cmp
jbe
leave
lret
inc
repnz
jb
add
xchg
out
mov
inc
mov
call
jg
leave
mov
pop
pop
inc
ffree
adc
dec
sarl
aad
xchg
jecxz
push
xchg
repz
sbb
pop
dec
insl
in
xchg
dec
mov
aad
lcall
cwtl
and
arpl
jne
imul
jae
mov
cmp
test
mov
push
mov
dec
pop
mov
pop
clc
imul
js
pop
arpl
cmp
and
in
pop
add
out
cmp
xchg
divl
jne
dec
pushf
je
and
mov
dec
test
cmp
insl
jmp
mov
out
pop
bound
mov
sub
xchg
cmpsb
scas
adc
dec
test
sub
decl
mov
lods
cmp
popl
sbb
mov
adc
xchg
in
push
fisubrl
add
mov
dec
and
jbe
repz
lcall
movsb
sbb
dec
xchg
or
xchg
mov
inc
add
xor
and
cmp
iret
sbb
xchg
nop
arpl
mov
cmp
xchg
sar
leave
cmp
je
iret
rolb
stc
scas
push
shl
daa
in
arpl
icebp
testl
ret
call
loop
ret
arpl
aad
cmp
mov
pop
lds
bound
adc
sub
lahf
and
out
dec
jae
pop
dec
lret
or
pusha
xchg
int3
push
xor
int
pop
addr16
or
pop
out
enter
scas
sbb
cmpsl
xchg
xor
leave
rcl
dec
in
ret
xchg
or
xorb
mov
jmp
push
add
out
jno
rcll
pop
mov
pop
mov
push
fucom
stos
jge
cmp
and
pop
or
shrb
cmp
adc
mov
push
dec
jge
pop
test
scas
inc
sbb
mov
sbb
push
lret
lahf
add
dec
jge
bound
xchg
cmc
popf
adc
std
call
mov
vpsrad
sti
sbb
adc
pop
push
sbb
insl
addb
inc
mov
loopne
les
repnz
icebp
out
scas
jae
mov
andb
shl
pop
dec
push
pusha
insb
xchg
lret
lahf
dec
mov
xor
insb
inc
pushf
jnp
mov
cltd
add
in
imul
mov
sbb
jb
sahf
rorb
imul
adc
mov
or
fnstsw
stc
fisttpll
imul
push
mov
cltd
xchg
lods
stos
push
int3
mov
pusha
xchg
fisubrs
nop
xchg
frstor
mov
loop
outsb
stc
dec
fs
sbb
sarb
in
cwtl
mov
xchg
lods
fcmovnbe
ret
add
xchg
rcl
daa
adc
mov
decl
insl
ljmp
xlat
icebp
jmp
add
mov
shlb
inc
xchg
inc
sbb
inc
add
or
dec
rolb
jno
push
inc
inc
das
cmc
jae
or
mov
adc
jnp
cmp
addr16
loop
mov
pusha
mov
xor
mov
adc
roll
test
cmp
sbb
sub
daa
loopne
int3
dec
shrl
int
sbb
lahf
icebp
adc
push
adc
pop
push
fwait
adc
push
inc
mov
and
jb
fxch
xor
es
sbb
dec
aad
mov
jmp
in
loopne
test
fisttpl
and
jnp
shll
and
andb
testl
inc
fidivrl
test
cmpsb
stos
fwait
enter
sti
ret
inc
lret
pop
int
out
nop
sub
mov
xchg
sbb
mov
mov
cld
mov
push
sbb
sbb
mov
movsl
jnp
mov
push
clc
fwait
stos
iret
gs
mov
inc
clc
movsl
cltd
movl
jbe
cld
lahf
and
adc
shlb
mov
in
xchg
mov
out
cmp
daa
jmp
out
je
ljmp
push
mov
mov
movsb
lcall
int
lret
sbbl
mov
dec
ds
shlb
stos
adc
xchg
pop
cmc
out
rorl
in
jae
es
inc
orl
mov
jle
jmp
mov
stc
popf
adc
out
test
adc
pop
imul
or
ret
call
cmc
xchg
cmp
rcrb
push
fisubrl
adc
and
repz
adcb
sbbl
call
nop
je
les
pop
out
std
outsl
mov
ret
pop
mov
daa
pop
jns
push
push
or
mov
mov
push
add
push
dec
pop
fisubl
in
jbe
dec
jae
jbe
push
pop
sbb
and
sti
pop
das
sub
ret
test
xlat
rcll
rorl
insb
mov
dec
push
shrb
sbb
sub
sbb
negb
insl
xchg
mov
jg
lcall
mov
stos
sub
xor
mov
mov
js
imul
lods
or
stos
and
div
loop
fists
addr16
out
sub
sbb
mov
mov
fwait
sbb
js
stos
xor
in
pop
jp
mov
sub
movsb
jge
pop
lret
imul
xor
jmp
mov
adc
sar
or
lahf
shrl
lret
jns
filds
rcr
mov
nop
fstl
add
pop
fstl
lahf
test
insb
je
or
cmp
stos
xor
mov
pusha
repnz
xchg
xor
lret
jmp
xor
mov
shll
ds
hlt
mov
xchg
lods
add
rcpps
pushf
adc
add
hlt
push
add
adc
inc
mov
mov
hlt
popa
xor
loop
pop
push
daa
cmc
inc
cmp
or
ja
insl
sub
hlt
jmp
daa
loopne
pop
mov
mov
ret
imulb
clc
aam
into
or
out
pop
push
mov
inc
cmp
xchg
rorb
enter
movsb
push
decl
clc
mov
add
fsts
adc
xlat
and
pop
lahf
jo
in
dec
test
clc
arpl
test
pusha
xchg
mov
jp
cld
mov
decl
pusha
push
inc
popa
das
stc
outsl
lahf
mov
fnstenv
mov
in
out
enter
js
ret
nop
ljmp
jne
cmp
shrl
in
and
iret
push
shll
mov
fcmovnu
or
dec
inc
inc
jmp
sub
movsl
and
mov
mov
imul
and
sub
jecxz
fisttpl
stos
inc
add
jecxz
loop
mov
and
inc
loope
or
xlat
mov
out
mov
or
xchg
subl
ffree
pop
and
jnp
das
sbb
pusha
lahf
mov
out
add
in
sbb
icebp
sarb
inc
add
jge
fs
push
scas
outsl
out
lret
into
cmp
sub
in
push
xchg
inc
push
ss
push
xor
add
sub
adc
fwait
cmpsb
pop
stos
mov
in
mov
mov
icebp
movsl
stos
mov
inc
dec
pusha
jl
jle
clc
outsb
mov
sub
aam
sub
int
mov
into
fwait
movsl
mov
jnp
mov
xchg
ficompl
insl
push
sbb
sub
fcom
mov
outsl
imul
push
and
call
in
mov
cs
add
sbb
sub
jmp
jl
fmul
sbb
xchg
adc
push
pushf
cmpsl
insl
insb
insl
jno
xchg
lea
dec
jne
xlat
leave
loope
shrl
cmpsb
leave
and
stos
lds
add
out
mov
dec
enter
stos
insl
cmp
iret
lea
adcb
inc
icebp
ljmp
cld
xchg
xchg
dec
repnz
pop
or
sbb
xor
pushf
inc
insb
dec
cmp
pop
sbb
xchg
cmp
repz
push
shll
xchg
cmp
jnp
or
loopne
jl
jnp
adc
cmp
insl
inc
jg
fcomi
clc
scas
jmp
xchg
cmpsl
mov
adc
sbb
fdivr
cwtl
ret
scas
push
jmp
jecxz
fnstcw
mov
pop
loope
clc
popa
xor
dec
push
jae
clc
insb
test
lds
rclb
xor
push
adc
sbb
movsl
lea
pop
push
sub
and
pop
adc
xchg
popf
out
fdivl
or
in
cwtl
dec
into
lahf
mov
push
cmp
xor
out
add
cmovle
cmp
pusha
mov
mov
subps
mov
inc
mov
rol
inc
pop
lea
ret
and
daa
loopne
and
jle
xchg
cmpsl
sbb
add
stos
out
mov
imull
js
popf
ja
adc
sbb
mov
xchg
push
in
jb
rorb
pop
xchg
sbb
sub
xchg
shlb
or
lret
movsb
xchg
pop
mov
xor
jne
pushf
pop
cltd
xchg
sbb
in
pusha
pop
xchg
sti
lods
cld
popf
cmp
jo
ljmp
aad
jmp
xchg
add
loop
or
das
stos
jb
fdivp
shlb
ja
mov
lods
movsb
loop
pop
adc
clc
ret
sub
push
loope
in
out
dec
mov
clc
sahf
and
cmp
or
inc
daa
aas
div
in
stos
iret
dec
cmpsb
xchg
mulb
pop
daa
ja
div
pop
aad
push
sti
or
outsl
ficoms
cmc
mov
aaa
cmp
ficoml
out
in
cmc
lcall
std
mov
push
sub
daa
xor
add
fcomps
popa
test
icebp
xchg
or
sbb
adc
xchg
movsl
sbb
push
loopne
jmp
test
call
sbb
cltd
add
or
xchg
lret
lcall
mov
or
stc
inc
fildl
mov
mov
data16
call
xor
push
adc
lea
cmc
adc
sub
insb
pop
jg
cltd
fdivl
sub
popf
iret
iret
stos
fimuls
mov
xorl
xchg
add
js
dec
sbb
in
adc
out
xchg
jae
cmp
push
mov
inc
not
add
inc
popf
stc
outsl
in
aas
orl
out
call
inc
test
lock
stc
adc
jmp
insl
testl
movb
xchg
xchg
xchg
ljmp
xchg
mov
ss
loop
int
jnp
jbe
ret
mov
arpl
mov
into
out
stc
pop
add
push
lcall
jg
inc
pop
mov
jp
jg
rorb
adc
adc
movsb
pop
shl
stos
stos
ja
test
xchg
and
addr16
outsb
inc
and
or
xor
pop
inc
scas
nop
decb
repnz
mov
dec
mov
pop
xchg
repz
xchg
jne
jg
in
push
jbe
and
mov
mov
in
scas
sbb
xchg
pop
out
xchg
sub
fwait
push
add
adcb
xchg
enter
ret
push
push
pop
sarl
or
mov
mov
jmp
jo
popa
scas
mov
pushf
push
or
rolb
cli
inc
and
bound
cld
out
insl
mov
jge
xchg
cmc
dec
lods
call
scas
sub
cs
imul
scas
push
addr16
or
pop
shufps
ret
mov
scas
mov
in
cli
inc
sbb
pop
add
pop
push
sub
cld
and
mov
mov
es
inc
outsb
jge
push
inc
push
sbb
mov
mov
iret
call
mov
inc
and
mov
inc
das
enter
inc
ja
loop
notl
loopne
add
xor
pop
cmp
lret
adc
jge
xor
xchg
add
scas
leave
into
mul
test
ja
insb
test
loope
mov
mov
sahf
arpl
inc
pop
mov
xchg
mov
mov
cmp
js
sbb
cs
mov
outsl
cs
jnp
insl
rcrb
jge
popa
add
and
aad
jns
cmp
enter
scas
inc
roll
mov
dec
push
fildll
sbb
gs
jp
andl
xchg
out
add
daa
ss
aas
push
mov
in
loopne
outsb
mov
push
push
jp
jmp
dec
scas
cltd
lea
arpl
call
add
aaa
pop
mov
sub
jmp
std
jge
rcr
jne
shl
pusha
pop
or
cmpb
lcall
mov
and
add
mov
ret
pop
enter
jg
pop
add
sub
xchg
pop
push
test
jnp
sbb
push
ds
shrl
pop
cwtl
clc
sub
cmpsb
in
jmp
inc
sahf
xchg
sbb
jns
call
cmp
cld
shlb
daa
stos
fistpl
cltd
cmpsl
popa
adc
cwtl
mov
jmp
adc
xchg
negl
into
insl
jp
xchg
sbb
adc
daa
ljmp
out
pop
data16
jb
sub
loop
xor
xchg
out
in
int3
cmp
testl
mov
out
leave
in
sahf
bound
mov
inc
adc
fnstenv
lds
sub
test
mov
loop
pushf
jns
jne
add
dec
inc
ljmp
push
std
cmpsb
cmp
xor
imul
or
test
xchg
jmp
inc
out
adcl
cmc
pextrw
dec
jno
fwait
out
and
jle
ss
mov
sub
shlb
rclb
pop
repnz
inc
dec
and
sbb
push
repnz
push
shlb
popa
pop
rolb
adc
cld
sarl
adc
test
fistpll
int
cwtl
les
jns
jle
lods
push
stc
insl
ja
sub
fsubrs
dec
ret
icebp
sub
sbb
push
andl
xorl
lods
xchg
sahf
xor
mov
addl
sbb
add
dec
sahf
ficoml
mov
cmp
aad
fldenv
dec
push
inc
enter
xor
out
std
sbb
cmp
mov
rclb
xchg
daa
pusha
nop
jmp
sub
cmp
repnz
and
cmp
pushf
sbbl
adc
cltd
push
lods
add
sub
lret
test
or
or
xchg
sbb
ja
sbb
inc
and
lods
adc
adc
aad
mov
inc
fwait
mov
mov
xorl
xor
or
cltd
mov
or
mov
mov
outsl
jmp
xlat
idivl
mov
mov
mov
sahf
jp
mov
xor
inc
jl
cld
inc
xchg
in
sub
dec
xchg
or
imul
lea
shll
inc
cmp
shll
ror
stc
fdivrs
sbb
cmp
jmp
loopne
cmp
adc
xchg
xchg
mov
ret
dec
rorl
das
jmp
xor
xchg
inc
sbb
sub
fistpll
xor
cs
ja
fisttps
movsbl
xchg
int
aad
jo
imul
mov
inc
push
push
lahf
lahf
or
pop
jge
sbbb
in
push
xorl
int
jb
mov
icebp
out
lods
jb
arpl
xor
inc
mov
adc
add
mov
adc
sahf
loopne
add
adc
jmp
aam
rorl
stos
cmp
icebp
dec
fistl
mov
xchg
outsl
test
test
sti
mov
cs
ret
bound
mov
outsl
psllq
push
imul
pop
pop
adc
ja
aaa
and
call
mov
int
movsl
cmc
push
pop
loop
orl
mov
leave
push
mov
lcall
pop
xchg
mov
je
and
pop
dec
cmp
in
in
rcll
in
mov
mov
das
dec
out
mov
fs
adc
cli
mov
mov
sbb
loopne
arpl
repnz
lea
xchg
scas
add
arpl
push
fsts
push
jge
mov
dec
test
scas
and
jg
dec
adc
or
pop
clc
jg
add
dec
xchg
in
mov
shl
mov
mov
scas
enter
scas
fidivrl
mov
xor
adc
in
cltd
sub
dec
add
mov
sti
add
rcrb
cmp
mov
push
enter
push
push
pop
inc
xor
pop
cs
mov
or
jmp
pop
sub
mov
adc
loop
pop
dec
cld
gs
in
int
cmp
cmp
mov
mov
lods
cs
xchg
imul
sbb
clc
push
push
push
cmp
movsb
push
subb
test
enter
popf
sbb
shlb
sub
mov
rclb
mov
add
xlat
mov
aam
fdivs
fidivs
jmp
mov
xabort
repnz
clc
fdiv
in
mov
adc
xchg
sub
js
mov
nop
push
jo
jp
jb
cmp
test
xchg
jnp
popl
mov
add
mov
cwtl
in
add
lods
push
pop
leave
mov
mov
push
mov
push
clc
inc
loopne
pushl
mov
cmp
mov
xorb
dec
pop
or
cltd
shlb
push
pop
or
out
in
adc
mov
aas
daa
push
cmp
hlt
jns
inc
ss
lret
lret
rcrb
xchg
pop
mov
flds
jbe
ja
adc
xlat
mov
jno
lret
popf
push
notl
xchg
sbb
leave
push
repnz
sub
nop
xchg
lock
push
arpl
fwait
cmp
int3
add
mov
call
lds
test
pop
roll
ret
loop
jg
mov
inc
mov
push
cmpsl
add
shl
jbe
cmp
lcall
xlat
mov
daa
movsb
cli
pusha
lods
xor
scas
movsb
pop
or
and
insl
adc
xchg
stc
inc
nop
mov
lods
in
mov
adc
dec
addr16
cmpsl
popf
aad
gs
cmpsl
pushf
insb
lahf
pop
inc
pop
jbe
fildl
dec
jno
ret
push
nop
xlat
sbb
cs
data16
insb
stc
sbb
pop
cwtl
pop
jmp
shll
sbb
mov
mov
jecxz
lds
mov
push
adc
icebp
push
mov
cmp
popf
or
jns
fisubs
loop
adc
fdivrs
add
mov
jae
xchg
xor
jge
call
loop
lret
mov
xor
in
lahf
inc
jmp
ja
jl
xchg
jecxz
lahf
leave
popf
fistpll
fwait
rcll
fcompl
jp
pop
notl
cmp
shrl
out
or
mov
inc
fcompl
push
fwait
sbb
cmc
push
rorl
lods
add
bound
pop
jl,pn
mov
es
sti
xlat
das
xchg
ds
add
mov
mov
sub
test
push
xchg
mov
or
arpl
dec
dec
sub
in
jbe
jmp
push
shlb
jle
stc
push
cmpsl
je
xchg
js
pop
push
xor
adc
sub
addr16
xor
jns
fwait
ss
xchg
movsl
psubsw
rcr
stos
push
mov
pusha
into
jmp
xchg
xor
and
in
cmc
add
int
and
loope
pop
sti
stos
and
fcompl
jnp
jecxz
sub
xor
mov
mov
adcb
ret
pop
fsts
stos
pop
inc
stos
xchg
adc
std
daa
adc
add
popf
push
test
push
pop
or
push
sbb
mov
daa
cmp
pop
ret
cmpsb
rcll
pop
sbb
loopne
rcrb
or
sbb
out
daa
xor
mov
mov
mov
shll
push
sub
pushf
cmp
sarl
inc
dec
fildll
daa
sbb
jae
jle
mov
mov
je
or
xchg
xor
repz
push
addr16
push
repz
pop
sbb
hlt
outsb
push
dec
out
js
bound
sbbb
call
not
out
into
in
nop
add
ds
pop
jns
mov
adc
add
sub
pop
dec
pushf
xchg
scas
in
jp
ds
sbb
dec
xchg
pop
out
test
lods
lods
orb
xchg
sub
xchg
xor
pop
loop
sti
lods
and
out
jno
jbe
sub
push
inc
xor
test
daa
jecxz
scas
movsb
lods
adc
mov
mov
je
inc
ret
dec
daa
mov
pop
inc
sub
and
push
pop
or
xchg
and
fwait
mov
int3
pop
or
xchg
cwtl
ja
js
cld
cmp
push
xchg
into
shrl
in
inc
add
adc
leavew
outsl
call
jae
dec
enter
imul
insl
test
push
or
clc
pop
jb
cmp
bound
cmc
mov
cmpsb
xchg
fs
lahf
push
gs
or
and
and
imul
dec
pop
jnp
mov
dec
adc
ja
les
fpatan
jg
mov
push
adc
push
or
into
mov
int
cmp
fstl
sbb
jo
dec
pop
scas
in
mov
mov
mov
data16
xchg
sub
in
cmc
enter
mov
jnp,pt
cltd
xor
out
jp
pop
dec
sbb
cmp
fists
push
xchg
sarl
pushf
inc
dec
sbb
push
fwait
out
movsb
dec
mov
cmc
mov
sub
and
lahf
dec
or
inc
fcomps
mov
jecxz
cmp
aaa
test
xor
xor
dec
arpl
loope
xor
mov
dec
out
or
inc
jge
mov
jo
dec
cmc
movsb
cld
or
lods
xor
ret
adc
fwait
js
inc
sub
add
std
pusha
jl
cmp
sub
enter
mov
insl
out
or
mov
jae
jb
mov
xor
into
lret
mov
dec
orb
push
push
lret
push
ljmp
jbe
mov
inc
and
jp
out
movsb
mov
push
mov
xchg
aam
outsl
out
cmpb
in
adc
lock
out
mov
mov
in
xor
sub
xchg
in
aaa
push
xchg
pop
lods
nop
dec
dec
or
jne
flds
xchg
aam
adc
mov
es
nop
ljmp
iret
cs
cmpsl
insb
and
pop
jecxz
push
rol
pop
xlat
fwait
daa
pop
xor
enter
cld
cmp
and
xchg
push
pop
loopne
push
std
daa
fcmovu
cmpsl
mov
int3
adc
les
dec
xchg
mov
push
ljmp
inc
push
repz
jmp
cs
in
jns
jb
cwtl
sub
xor
aas
dec
pop
les
cmpsb
lods
xlat
add
sub
out
enter
adc
out
pop
cs
sbb
push
je
pop
inc
mov
mov
jl
int
or
jns
in
inc
mov
daa
xor
mov
adcl
cmpsl
adc
mov
add
lcall
pop
mov
or
inc
cmp
xor
and
das
fisubrl
ljmp
stos
out
xchg
xchg
inc
loopne
dec
or
cmp
dec
les
jns
xchg
out
cmpsb
mov
sub
mov
pop
sahf
add
sbb
sarl
lahf
loopne
in
xor
idivl
lea
loopne
loope
sahf
sub
pop
test
movsb
stos
xor
xchg
fdiv
sarb
rcr
push
out
pop
jae
nop
fisubs
or
pop
in
ss
pop
adc
sbb
enter
xlat
loope
dec
out
xchg
or
dec
fldenv
outsl
jl
je
push
mov
lret
push
pop
jl
inc
adc
loopne
mov
lret
pop
imul
xchg
xchg
mov
ss
mov
loope
pop
push
jmp
xor
cmp
jp
into
rcll
out
and
lret
out
mov
push
test
xacquire
pop
mov
stos
xor
push
int
adc
push
fcmove
lds
push
ret
xchg
inc
and
dec
out
push
rorb
mov
cmp
or
pop
out
and
rolb
adc
lahf
div
mov
sbb
invd
sub
adc
shrb
das
out
lahf
jp
jbe
outsb
xchg
lret
fbld
xchg
xchg
and
jge
jno
jmp
movsl
lret
leave
sbb
pop
pushf
cmp
adc
adc
loop
mov
scas
jbe
gs
shl
push
adcl
js
movsl
mov
je
push
push
mov
das
mov
adc
xchg
add
rcr
lods
push
add
or
into
pop
cmp
push
aam
or
and
cld
fmull
mov
fnstsw
fprem
lahf
daa
addr16
leave
loop
push
mov
xor
test
outsl
leave
lcall
mov
and
mov
scas
shr
ljmp
test
xchg
cmp
jmp
sub
xor
rcl
sub
idivb
ret
mov
subb
repnz
iret
sub
sbb
cmp
lcall
pop
inc
mov
nop
ja
mov
addr16
sbb
testb
xlat
out
xchg
stos
rcrb
lahf
stos
ja
popa
lret
or
lock
dec
gs
jnp
push
subl
adc
fiadds
push
cs
sub
gs
and
sbb
cld
or
dec
xor
adc
sub
sbb
data16
pop
sub
cs
pop
sbb
sbb
mov
inc
xor
das
pop
sub
aad
test
xchg
pop
loopne
xchg
pop
xorb
pop
bound
pop
jb
sbb
mov
inc
xor
jns
dec
jge
into
dec
les
mov
stos
das
ljmp
or
xor
and
sbb
dec
cld
inc
out
ja
pop
or
mov
xor
pop
inc
cmpsl
aad
jg
insl
or
jmp
inc
jno
mov
or
pop
cmp
pop
mov
jg
fdiv
fnstsw
push
pop
mov
lcall
sbb
sub
pop
cld
mov
mov
fisubl
psubsb
mov
int3
cmp
fs
jmp
sub
push
and
mov
and
xchg
dec
sub
pop
lods
xchg
mov
cmpb
pop
xchg
pop
std
pop
xchg
test
iret
inc
push
mov
das
pop
aaa
sbb
add
cmp
mov
dec
jne
adc
js
jmp
cmp
shrb
sbb
ret
push
lods
sbb
cwtl
push
or
push
fstps
jle
fsubl
push
jge
in
fs
push
movzbl
outsl
nop
sbb
add
dec
outsl
cmp
dec
xchg
lock
xor
adc
sub
or
faddl
dec
movsb
ret
dec
pop
iret
sub
mov
inc
iret
jp
sbb
pcmpeqw
inc
mov
xor
lcall
cmp
mov
jg
fisttpll
xorb
mov
cmp
jns
sbb
add
ss
xchg
xchg
jmp
push
aaa
cmp
inc
movzbl
and
out
sbb
scas
sub
or
xor
lods
jl
outsb
or
push
push
xchg
mov
jnp
fnsave
outsb
vmread
je
cmp
sub
cmp
lcall
cmp
cltd
push
push
xchg
and
ret
sbb
faddl
pop
fstps
jl
lret
dec
add
jle
cmpsb
jmp
sub
aaa
cmp
mov
ret
pushw
gs
icebp
addr16
in
sub
pop
cmpl
push
iret
sub
add
into
and
pusha
push
rorl
jnp
adc
cs
pop
sti
sbb
pop
jmp
add
lods
and
sub
ja
xor
notb
cmp
sub
mov
sahf
sbb
ja
ret
pop
movsb
inc
pop
xor
cli
jne
das
xchg
mov
dec
sbb
ja
or
mov
stos
sbb
shll
jno
ret
and
arpl
int3
test
or
in
lret
push
pop
iret
push
jns
stos
jl
addr16
sub
jecxz
notb
sbb
jns
fldt
in
movl
push
jbe
inc
inc
daa
fxch
cmp
xchg
ss
pop
repz
inc
and
pop
cltd
aas
cmpl
jnp
jb
movsl
push
leave
xchg
cmc
inc
push
rcll
push
jge
add
movsl
out
out
cmc
sahf
pusha
lcallw
inc
push
push
mov
push
jg
data16
sub
into
sub
mov
arpl
push
mov
in
sahf
loop
adc
out
loop
shr
in
andb
std
outsl
insb
setb
pop
adc
and
jbe
bound
or
and
sbb
xor
add
xchg
push
sub
ficoms
ds
out
cmp
sub
xor
xchg
dec
gs
scas
or
xlat
lret
dec
adc
cmpsl
ficoml
loop
pop
jbe
or
inc
and
sbb
cmp
push
insl
sub
cmp
push
out
pop
sbb
fucom
add
add
push
js
stos
adc
pop
insb
pop
add
jp
imulb
push
cmp
pop
test
adc
sbb
mov
mov
iret
ja
mov
in
outsl
sub
js
push
sub
les
push
es
or
adcb
jge
mov
push
subb
dec
ret
cmp
stc
daa
pop
cmp
and
xchg
cmp
push
aaa
add
jnp
xlat
inc
push
aaa
jecxz
in
aas
jmp
test
roll
mov
int3
and
insl
add
push
push
cltd
lock
pop
pop
test
sbb
dec
sahf
mov
pop
outsl
cmp
sbb
mov
dec
sbb
rolb
cs
fbstp
cmp
jnp
push
mov
int3
lret
nop
sub
rclb
and
push
cmp
xor
xchg
push
addr16
jg
mov
sub
and
imull
imul
xor
cmp
cmp
imull
loope
mov
aas
adc
adc
cmpsl
aam
inc
dec
sub
xor
or
lods
aaa
ss
sbb
pop
mov
xchg
mov
bnd
dec
test
cmpsb
pop
lea
xlat
dec
sti
pop
mov
xor
insb
adc
loope
xchg
imul
das
inc
xor
add
xor
jne
aam
aaa
lret
outsl
mov
or
fs
sbb
neg
or
enter
in
enter
pop
js
pop
xchg
xchg
jnp
cld
sbb
dec
sbb
push
mov
push
insl
pop
inc
in
push
cli
inc
addr16
out
mov
rclb
leave
cmp
mov
jecxz
jmp
rorl
ror
addr16
jbe
hlt
jmp
jnp
pop
lret
ds
push
inc
out
xchg
imul
add
sti
ret
xor
arpl
mov
pop
lock
cmpsb
push
sbb
mov
xchg
or
shr
or
hlt
mov
repz
dec
dec
cs
cmp
jno
jle
out
xor
xor
inc
iret
movb
fnsave
push
dec
or
mov
jle
push
mov
fdivrs
ljmp
adc
bound
movsb
cmp
xor
cmp
fwait
jg
sub
adc
adc
cmp
xor
movsl
clc
cli
cmp
mov
inc
adc
jp
sbb
cmp
xchg
test
cmc
push
jp
gs
in
xor
xchg
lret
mov
js
shll
ss
into
nop
das
push
in
pusha
mov
and
rorl
mov
pop
mov
mov
stos
add
aas
mov
das
pop
xor
mov
xchg
data16
pop
loopne
push
xchg
das
inc
inc
movl
pop
push
and
or
clc
mov
int3
mov
popl
jmp
daa
int3
inc
sub
inc
inc
push
scas
in
mov
clc
xchg
or
loope
dec
lods
or
out
and
aam
sbb
cs
dec
xchg
shll
xchg
push
insl
xor
jl
mov
xor
inc
or
xchg
sbb
shlb
or
xor
decb
hlt
jnp
sub
test
mov
jp
test
push
repz
inc
std
sbb
mov
and
xor
roll
aaa
mov
lods
out
sub
in
pop
push
subl
mov
leave
adc
cmp
xchg
add
cmp
adc
test
push
add
pop
dec
ja
xor
clc
or
pop
andl
jbe
fiadds
adc
test
rorl
xor
mov
cmp
mov
or
xlat
jmp
xor
mov
dec
xor
adc
xor
inc
cmp
pop
insb
push
mov
cmp
std
loop
sbb
jecxz
xlat
test
dec
xlat
or
ret
add
cs
into
stc
push
or
xchg
and
cmp
mov
jmp
push
call
mov
and
ret
cmp
stc
or
and
xor
mov
stos
addb
and
adc
dec
push
jl
mov
shll
mov
or
adc
rclb
pop
adc
add
mov
cmp
fcmovnb
outsl
xor
imul
orb
sub
mov
jb
sbb
xchg
cmp
add
and
mov
fstpt
cld
std
shll
into
and
dec
imul
sub
pop
pop
shrb
repnz
mov
mov
inc
mov
and
jns
cmc
testl
pop
lea
ja
or
cmp
lock
sbb
lock
cmp
sub
call
outsl
sbb
dec
xchg
les
cmp
cmp
outsl
ja
cmc
jae
in
inc
cmp
ffreep
icebp
rcrb
mov
push
call
jmp
repnz
dec
or
sbb
xor
jo
jecxz
push
dec
add
cmp
sbb
adc
inc
dec
addr16
lea
outsl
sub
loop
and
movsb
bound
pop
clc
fists
cwtl
mov
mov
sub
inc
sti
jmp
adc
aam
or
imul
push
lods
les
xor
rcrl
cmpsb
xchg
xor
mov
add
leave
es
jno
mov
dec
lret
pusha
sub
bound
cmp
cwtl
lret
mov
push
js
sbb
das
mov
in
add
int
repnz
stc
je
fs
jnp
add
xor
mull
loopne
jb
sti
arpl
dec
cmp
pop
push
or
scas
sub
mov
aas
bound
adc
shr
cmpb
or
mov
push
xor
mov
xor
imul
push
loopne
push
sbb
sub
sub
inc
shrl
push
out
push
xor
outsl
call
pop
mul
das
jnp
sub
hlt
in
lock
push
in
cltd
xor
gs
mov
data16
inc
mov
mov
mov
enter
inc
in
cmp
insl
adc
mov
movsb
pop
movsb
mov
jno
icebp
pop
pop
fwait
jp
xlat
inc
mov
xchg
dec
int3
xor
mov
std
inc
mov
xor
divb
sti
nop
inc
dec
sti
sbb
pop
ret
cld
mov
jbe
jmp
out
cwtl
inc
out
and
add
enter
or
inc
push
dec
addr16
ss
scas
dec
insb
xor
lods
je
insb
fdiv
dec
stos
add
lcall
cmp
pop
mov
enter
xor
loope
dec
push
into
inc
or
dec
icebp
and
hlt
aas
in
add
rcr
mov
ffreep
cmpsl
in
fndisi(8087
fidivs
or
lods
mov
mov
xchg
xlat
cmp
jg
enter
sub
leave
and
lahf
and
adcl
and
add
mov
sti
daa
and
or
mov
mov
sbb
pop
sub
jnp
cs
and
mov
mov
and
cs
lds
xlat
stos
mov
addl
or
sbb
pop
add
icebp
mov
out
add
ret
fists
movsb
imul
and
movsb
jo
movsb
shll
mov
add
sarb
add
add
insb
fimuls
fs
adc
push
sbb
es
fistpl
popf
cmpsb
arpl
inc
cmp
shlb
xchg
xor
lret
lahf
pop
out
sbb
lret
rol
or
fisubl
pop
js
lds
adc
xchg
mov
and
mov
bound
jo
xchg
ja
jne
inc
movsl
push
sarb
pop
pop
inc
adc
ja
xor
mov
fwait
jno
push
mov
push
leave
gs
inc
test
xor
out
movsb
or
ficompl
sub
or
das
jne
imul
fldenv
adc
sub
ret
stos
fstl
jns
jno
cmp
sub
into
pop
insl
aaa
jmp
insb
outsl
pop
lock
dec
fisubs
ret
mov
sub
sbb
in
lock
sub
insb
pop
mov
dec
test
push
jp
push
fdivl
pop
bound
push
jno
push
les
jl
dec
sbb
or
add
enter
jnp
shlb
andl
or
loop
mov
aad
mov
out
inc
cmpb
sub
popa
das
outsb
sbb
icebp
push
cli
xor
movsb
testb
sti
fildl
xchg
pop
xlat
btr
xchg
jne
testl
fwait
pusha
adc
sbbl
mov
fwait
loope
and
xchg
adc
dec
insl
dec
jb
push
cmc
lea
enter
pop
sbb
je
lret
push
int
je
lret
add
sbb
stc
pop
imul
fadd
das
dec
sub
sarl
enter
push
dec
popa
jbe
xor
popa
loopne
dec
ds
xor
fs
enter
or
std
je
sti
sub
scas
cmp
pop
add
loopne
sahf
hlt
lahf
arpl
int
inc
or
daa
push
or
mov
outsl
popa
loope
cmp
add
adc
dec
or
jae
or
test
jl
xchg
cld
xchg
bound
std
test
flds
inc
push
ljmp
sub
in
stc
add
push
in
adc
popa
into
inc
pop
or
pop
andb
inc
inc
sub
fiadds
xchg
fcomps
into
mov
dec
push
cmp
in
cmpsb
inc
inc
ficompl
xchg
shl
repz
sbb
push
xchg
jle
jg
cs
or
cs
test
aaa
jbe
sbb
cmp
push
lret
cwtl
lret
mov
or
cmp
push
sub
or
ja,pn
jp
adc
cmp
push
aaa
js
jnp
iret
sbb
sbb
cld
shll
mov
mov
pop
addr16
fdivs
cmp
cmp
dec
sbb
xor
sti
sub
dec
fsubrs
pop
adc
dec
std
jle
xor
test
out
add
pop
xchg
pusha
or
or
and
outsl
rol
mov
imul
jnp
mov
fistps
xchg
inc
sbb
fsubrp
sbb
imul
sbb
push
das
jo
daa
std
add
adc
sub
loop
xchg
sub
add
bswap
add
add
pop
scas
insb
pop
xor
sbb
stos
outsl
mov
fistl
dec
aad
jl
lods
test
sarl
and
scas
lock
and
cmp
or
pop
daa
cmp
sbb
aaa
lcall
sbb
xor
mov
jns
dec
int3
sti
sub
popa
cmp
loope
xlat
aas
jp
and
cld
pop
inc
pop
sub
movsb
imul
idivb
or
pop
int3
mov
icebp
in
and
aas
filds
push
repz
jne
inc
pop
fs
jno
sti
dec
jb
call
pop
mov
push
cmpsb
ret
sub
in
push
std
ljmp
cld
pop
mov
sub
cmpl
jp
dec
divb
dec
cld
pop
add
call
jns
cmp
cmp
mulb
cmpsl
movsl
xchg
xor
inc
inc
rcrb
xor
push
cmpsb
sbb
or
mov
jg
adc
xor
cwtl
mov
sbb
out
add
repnz
mov
pusha
or
fdivs
inc
xlat
fildll
inc
cmp
lret
xorb
xchg
mov
adc
aas
daa
adc
mov
rcrb
rorb
daa
enter
push
scas
push
lods
sarl
push
fistl
add
cmp
jne
or
inc
sbb
mov
popf
jb
pop
rcrl
or
xor
aad
lret
loopne
popf
sbb
lea
or
shll
shrl
dec
mov
shl
outsb
dec
in
adc
cli
sbb
adc
jg
xor
test
test
ret
jnp
jns
cmp
dec
pop
push
imul
xor
add
xor
xor
mov
cs
dec
xchg
mov
cs
out
mov
xor
push
out
mov
imul
jno
cli
push
call
or
mov
pop
sub
int3
sub
jno
fwait
xchg
push
or
fwait
sbb
lods
repz
clc
cli
mov
mov
insl
clc
mov
dec
gs
jp
adc
dec
or
xchg
mov
sub
push
xor
lds
push
cmp
rolb
pop
ds
and
pop
jns
iret
cmpsb
inc
popa
aad
fs
pop
nop
push
and
jno
daa
dec
push
out
in
out
dec
sub
add
ja
jecxz
sar
xor
aam
ja
push
or
lock
push
cmp
pop
adc
sbb
ja
aam
insb
movq
jno
adc
jmp
inc
inc
out
xor
and
push
cltd
imul
jl
cmp
jg
jb
add
cmpsb
into
cmp
mov
loop
xor
and
shlb
or
je
and
andl
cmp
rcrb
mov
aad
lret
pop
mov
cmp
jo
sar
inc
mov
mov
xchg
pop
es
jp
jo
xor
jae
adc
mov
pop
roll
cmp
fdivs
out
push
xchg
popf
add
ret
outsb
popa
cmp
je
daa
int3
clc
xchg
or
jmp
pop
loope
jecxz
mov
les
xor
add
add
sub
jnp
icebp
cmp
decl
inc
cmp
mov
jne
push
xor
scas
std
mov
popa
mov
xchg
sub
jb
std
adc
cmp
leave
jge
and
xchg
in
lock
rcrb
rorl
ds
push
bound
push
hlt
jns
adc
sbb
sti
sbbb
scas
ss
pop
jns
aaa
out
dec
adc
add
adc
push
xchg
inc
stc
sti
and
mov
ret
push
test
out
add
pop
dec
dec
pop
xor
cmp
fcmovnu
imul
daa
mov
pop
inc
insb
repnz
aad
push
mov
add
jae
xor
bound
or
mov
fidivrl
int
adc
cmp
mov
add
add
add
mov
jecxz
jecxz
lea
add
outsb
shr
insb
mov
and
subl
push
cmpsl
cmpsb
xor
cmp
jb
test
scas
ds
cmpsb
popf
out
not
sbb
cli
xor
nop
cli
roll
lods
bound
mov
lock
mov
sbb
sbb
xor
adc
add
sti
xchg
pop
gs
mov
rcll
adc
testl
repz
outsb
dec
add
push
jnp
adc
jle
cmp
aad
or
iret
out
loop
unpckhps
pop
or
notb
addr16
ret
loop
jbe
out
inc
enter
int3
mov
inc
pop
pop
aad
insb
add
push
and
scas
and
ss
inc
shrb
lods
inc
jg
out
pusha
mov
and
imul
js
es
fbstp
or
sub
cmp
sti
sbb
cs
jmp
xchg
addr16
sbb
fs
xchg
fwait
and
xchg
es
and
icebp
andb
stc
adc
jne
jo
aad
pusha
arpl
sarl
cltd
mov
sbb
adc
cli
push
add
jge
rolb
ljmp
mov
int
test
xchg
out
sbb
mov
xchg
bound
fldenv
std
gs
mov
push
sbb
mov
adc
sub
fucom
int
pop
jmp
outsl
cmp
popl
or
repnz
xor
push
cmp
jnp
push
cmp
xor
push
movsl
add
jne
and
jmp
stos
stos
xor
add
mov
xchg
or
fs
adc
and
mov
sti
std
jp
aam
cs
inc
fs
push
xchg
popa
int
out
lret
sub
arpl
jb
xor
stos
test
xchg
pop
outsl
out
aas
jmp
aad
cwtl
jp
adc
jb
sbb
add
push
mov
ret
mov
popf
lods
outsl
out
push
or
adc
or
lcall
xchg
mov
or
cli
jle
fwait
dec
jle
inc
adc
aad
mov
jno
popa
mov
fidivrl
out
aaa
inc
cmpb
loope,pn
or
fucomi
data16
inc
sarw
cmp
insl
pop
jns
jne
cli
or
or
sub
jp
lds
addr16
dec
rolb
xlat
push
dec
jg
outsb
and
mov
sub
adc
or
push
lahf
adc
call
mov
jnp
enter
dec
test
rorb
and
out
scas
test
mov
pusha
aas
ds
sub
sub
jg
jnp
xchg
sti
aas
iret
in
clc
lcall
stos
xorb
push
fistpll
lock
cld
sti
jp
sub
fstps
das
mov
pop
cwtl
cmpsl
dec
cmp
ret
in
lods
or
scas
push
dec
sub
and
mov
mul
fadd
mov
decl
aaa
push
xchg
or
enter
lret
or
notb
mov
cmc
push
dec
pop
jmp
push
sub
push
dec
add
mov
mov
jmp
outsb
js
ds
jno
push
or
adc
icebp
mov
adc
sbbb
ja
add
or
in
outsl
inc
enter
cs
mov
test
mov
cmp
stos
inc
dec
adc
jne
xchg
je
xchg
sub
dec
dec
ret
bound
dec
pop
ja
aaa
or
push
in
out
scas
push
inc
mov
jo
jb
icebp
cmp
jae
xchg
ja
out
fsubrp
sub
push
shlb
je
xchg
add
push
xor
xor
cli
lods
aas
adc
outsl
sahf
sbb
lods
fdivs
cmp
repnz
jmp
xchg
xor
arpl
pinsrw
stos
pop
call
int3
and
or
add
dec
out
icebp
inc
shrb
pop
jnp
out
jnp
push
xchg
out
sti
fnstsw
add
hlt
repz
ret
je
xor
or
and
jo
sbb
stos
adc
mov
andl
push
decl
adc
bound
hlt
pop
inc
inc
into
jg
lahf
fisttps
push
outsb
adc
sbb
sub
sub
sbb
push
jle
sbb
push
dec
incb
inc
push
lret
aas
stc
xchg
repz
scas
adc
jo
push
dec
cs
jge
repnz
call
popa
add
pop
push
sbb
pop
bound
test
hlt
adc
icebp
and
jg
jns
and
cmp
add
sbb
dec
cmp
push
mov
inc
lea
xchg
jl
setb
gs
jge
cmp
pop
inc
adc
mov
out
and
dec
jo
add
mov
sbb
jle
bound
or
lret
pop
inc
lods
mov
xchg
cmp
pop
jo
sbb
push
mov
aad
jp
pop
dec
lret
fdivrp
sbb
xchg
es
mov
lret
rcrb
outsl
popa
mov
push
dec
mov
sarb
inc
or
dec
insb
into
popf
dec
mov
xchg
arpl
adcl
push
mov
enter
push
scas
xor
shrl
inc
add
test
sub
jl
es
inc
adc
jae
push
ret
push
add
pop
xor
lret
adcl
push
pop
or
nop
sub
cwtl
in
xchg
and
xchg
sub
insb
mov
inc
icebp
out
sub
xchg
pop
test
jmp
leave
jle
and
xor
pop
sbb
in
fnsave
inc
mov
hlt
xchg
and
xchg
arpl
xchg
sub
arpl
mov
push
sub
out
pusha
sbb
loope
sub
cmc
add
inc
pusha
sub
fldenv
lret
push
or
outsl
mov
adc
pop
sbb
test
lret
or
mov
pop
orl
xchg
rol
inc
jbe
and
xchg
push
in
or
test
lds
pop
insl
arpl
cmpsl
xchg
mov
mov
ja
dec
dec
pop
mov
imul
shrb
add
aaa
negb
aaa
mov
lock
sub
popf
pop
rol
in
lods
aad
xchg
pop
push
pop
jp
add
pop
movsb
dec
cld
outsb
jge
mov
repnz
ja
testb
mov
fildll
xor
inc
imul
dec
push
pop
fimull
mov
ja
or
das
inc
pop
leave
ja
adc
repnz
out
outsl
lret
pop
or
cmp
add
sahf
pcmpgtd
fsubp
cmovl
sbb
outsb
lods
sub
dec
mov
jge
push
inc
fwait
add
outsb
imul
push
push
xchg
push
cmc
adc
jne
mov
ljmp
adc
cmp
jns
gs
jne
test
mov
cmp
dec
mov
daa
sbb
add
inc
sti
push
push
testb
out
adc
lds
jecxz
aam
cmpb
arpl
push
xlat
repz
popf
xchg
ds
rorl
inc
call
sub
in
movb
das
inc
jg
inc
pop
sub
out
pop
adc
ljmp
aam
add
mov
sti
leave
xchg
rol
stc
mov
jne
rcrl
addr16
js
push
insb
or
inc
mov
jb
jae
rol
cmp
mov
jp
push
sbb
inc
mov
loope
outsb
insl
push
xor
adc
ficoms
jg
or
addl
push
push
bound
in
mov
js
inc
jl
fs
push
or
adc
lcall
mov
jb
push
mull
sbb
in
sbb
adc
pop
lods
mov
inc
mov
inc
insb
fisttpl
rcr
pusha
sbb
pop
ret
or
lret
inc
cld
add
push
ss
jle
push
daa
loopne
pop
jmp
pop
fs
dec
sub
pop
sub
jne
add
sbb
inc
gs
cmp
push
xor
into
xor
xor
mov
xlat
jmp
push
xchg
sbb
ja
das
or
nop
jae
or
push
push
dec
push
mov
and
ficompl
sub
nop
jp
mov
inc
cwtl
xor
pop
push
and
ds
out
daa
bound
inc
inc
xchg
imul
pop
cmp
insl
pop
std
pop
cmp
pop
adc
xor
sti
and
cs
add
and
ret
or
rcl
in
lods
or
push
lds
push
daa
push
into
clc
ja
inc
movsb
pop
imul
cmp
imul
test
sbb
imul
out
mov
pop
sub
push
pusha
iret
in
daa
cmp
pop
push
stc
rorl
imul
test
and
xchg
decb
icebp
mov
orb
jle
push
dec
pop
xchg
or
or
sbb
inc
sahf
xchg
stos
dec
push
inc
pop
cld
xor
sub
sbb
iret
int3
sahf
sub
or
add
out
sbb
add
mov
int
or
push
jp
xchg
dec
push
sbb
add
jmp
fildl
das
int3
stos
cmp
iret
insb
xchg
mov
add
sahf
loopne
adc
aaa
add
lsl
mov
lods
les
pushf
add
test
xchg
mov
cmp
pop
aas
xor
ret
lahf
sub
sub
jecxz
lmsw
sahf
mov
adc
pop
outsl
pop
pop
adc
subl
rorl
jge
fistl
ja
add
xchg
pop
jnp
sbb
ja
negb
sbbb
pop
sbb
jmp
pop
lret
lea
sti
inc
dec
push
fldt
xlat
rcrl
je
mov
mov
mov
cmp
push
divl
xchg
mov
pop
sbb
jp
pop
cmp
rcr
xchg
pop
mov
aas
lret
adc
add
inc
daa
jae
notb
jns
jb
add
jb
sbb
pop
inc
out
out
cmpsb
or
mov
rcll
inc
lods
cmp
cs
testl
fidivl
xchg
inc
add
push
lret
out
addr16
push
lret
and
mov
imul
pusha
mov
mov
and
and
dec
jl
mov
jbe
mov
data16
dec
cli
data16
out
push
adc
popf
ret
insb
loop
jl
xchg
mov
cmp
loop
adc
stos
cmp
mov
pop
cmp
mov
aam
lock
jmp
insl
lret
or
lret
or
mov
shll
lods
cmpb
cmp
imul
dec
jne
ljmp
lock
lahf
jp
arpl
fisubrs
repnz
xchg
cmp
ret
adc
jle
ljmp
arpl
and
lds
cmp
es
lods
dec
add
xor
mov
adc
and
xchg
jae
out
stos
cmp
insb
xor
rolb
incb
push
mov
push
fdivrs
jae
push
jbe
daa
push
cmp
lcall
outsl
lods
enter
or
sbb
xchg
xchg
in
xor
stos
mov
xor
cmp
fsubs
daa
in
mov
in
add
xchg
lcall
pop
rcrl
push
push
aam
idivb
out
xor
pop
dec
or
nop
cmpsb
jo
or
jb
andl
lcall
xor
ljmp
cmp
js
or
mov
outsl
sub
xlat
sbb
cld
adc
incb
adc
jg
loop
push
repnz
fsubs
xor
loopne
idiv
imul
jge
hlt
and
hlt
and
clc
cmpsb
lcall
mov
jae
fcompp
pop
psadbw
mov
repnz
pop
ret
movsl
popf
enter
mov
push
outsb
hlt
fisubs
hlt
inc
jne
clc
xor
and
jecxz
jae
fdivrp
dec
ror
push
cwtl
int3
sbb
inc
push
xchg
imul
pop
mov
stos
out
and
or
cmc
push
cli
push
cmp
movsb
shrb
mov
in
sbb
add
dec
mov
mov
aas
iret
addr16
sub
cmp
lds
xor
and
jg
add
pushaw
cmp
sahf
jns
mov
in
xor
fwait
xor
cmp
dec
popa
mov
dec
push
lret
insb
aad
and
pop
sub
test
dec
lea
xor
cs
push
adc
es
lret
adc
cwtl
pop
adc
mov
hlt
cld
dec
xor
fstpt
iret
enter
dec
fs
cmp
mov
mov
ret
jl
shr
scas
mov
cmc
jo
mov
loopne
mov
imul
sahf
sub
and
scas
sbb
stos
sbb
cmpsb
adc
dec
mov
jl
lea
adc
stc
dec
and
aad
ss
movsb
sbb
sbb
xchg
mov
cli
push
das
repz
test
pop
fdivrs
movsb
adc
ret
jb
mov
cld
test
insl
rorl
in
mov
cmp
mov
test
sub
sub
push
pop
hlt
shll
jle
dec
sahf
inc
adc
jle
jno
pop
sub
xchg
add
jns
inc
and
jbe
sbb
bnd
pop
mov
xchg
out
sahf
xor
mov
inc
pop
popa
cwtl
xor
fisubl
iret
cmp
xor
lods
mov
stos
in
mov
fdivrs
push
adc
in
or
fnstcw
mov
popa
out
jecxz
cmp
cmp
xor
adc
icebp
scas
mov
push
jns
fsubp
cmp
and
mov
sbb
dec
xchg
ret
ret
adc
sub
adc
pusha
jge
mov
mov
lret
push
rolb
fiadds
jns
cltd
shlb
out
cwtl
xchg
test
cmp
inc
push
add
pop
in
ds
clc
push
and
cmp
adc
push
cmp
shl
mov
leave
ljmp
or
das
mov
hlt
jae
mov
cmp
sti
int3
andb
cmp
sbb
sub
and
push
and
xchg
dec
lcall
out
mov
mov
add
outsb
in
xchg
sub
inc
adcb
stos
cmpsb
inc
sub
push
jb
add
movsb
insb
js
test
sbb
cld
pop
add
inc
dec
call
or
xchg
fsubs
push
cli
xor
pop
add
aam
sub
frstor
jae
pop
sub
mov
nop
fisubrs
mov
mov
fidivs
add
test
fsubrp
push
repnz
test
inc
mov
push
bound
insb
pop
fisubs
pop
sbb
cld
pop
test
push
dec
jp
mov
out
lock
mov
out
xor
or
pop
and
stos
mov
sbb
insb
add
fsubl
add
cmp
fs
adc
lock
jl
sbb
cmp
call
push
add
mov
jb
sti
mov
test
fs
push
imull
test
js
cmpb
movb
fsubrp
pushw
jp
push
dec
pop
sarb
faddp
add
test
mov
out
mulb
testl
out
adc
in
cmp
inc
jp
push
dec
jl
ficoms
call
mov
fdivrp
add
test
mov
out
ss
cmp
fcompl
mov
pop
stos
add
mov
mov
insb
lods
fimuls
imul
into
ficomps
out
test
ret
xchg
repz
mov
out
xchg
fsubs
subb
xor
pop
sub
mov
shrb
enter
insl
mov
sbb
add
mov
mov
imul
test
out
push
fmull
cld
ss
mov
push
jb
add
insb
jo
mov
adc
in
cmp
and
call
jo
mov
insb
cmp
sahf
call
ds
mov
jae
outsl
faddl
call
lret
mov
mov
dec
insb
push
fisubrs
pop
sbb
fldl
shlb
cmp
ret
add
cld
insb
add
fdivs
sub
add
fs
nop
call
dec
out
pop
fsubs
xor
call
outsb
add
sti
xchg
test
sub
call
rolb
data16
mov
ficomps
or
mov
cld
fadds
cmp
dec
inc
xor
repnz
sahf
mov
push
rorb
add
jp
and
repnz
pop
and
pop
jg
cli
lret
push
arpl
and
add
and
roll
jnp
mov
sub
jl
and
fst
jo
pop
mov
testl
out
mov
pop
cltd
inc
push
dec
adc
jp
mov
pop
js
mul
push
xor
nop
stos
jp
mov
adc
sti
andb
cmp
adc
inc
push
stos
aas
jmp
inc
xchg
mov
dec
sub
repnz
mov
add
sbb
nop
lods
mov
dec
xchg
adc
lahf
mov
cmp
xor
addl
mov
sbb
inc
je
sbb
enter
xchg
loope
or
scas
in
pop
pop
ret
mov
inc
add
cmpsl
xchg
mov
pop
outsb
ret
adc
fisttps
nop
repz
lods
adc
in
adc
das
jbe
cmp
sub
stos
fsts
sub
dec
mov
xor
dec
jns
cwtl
xchg
insl
movb
push
pop
lock
xor
sbb
dec
xlat
mov
in
hlt
xlat
pusha
call
mov
test
add
xor
and
loopne
xchg
dec
jmp
jp
jo
mov
sub
or
leave
or
and
mov
sbb
daa
ja
lock
repz
adc
or
sub
gs
lea
and
cmp
incl
pop
neg
insb
mov
mov
into
push
push
std
loopne
sub
push
and
andl
add
push
aad
aaa
stc
add
movsl
inc
or
cmpsb
pop
enter
and
ljmp
jle
xchg
xchg
int
jnp
pushf
std
int3
scas
mov
stos
push
inc
inc
push
push
jl
mov
cmpsb
push
mov
cli
xor
loopne
pop
jmp
push
out
jbe
fsubp
mov
and
in
jnp
jecxz
pop
xor
sbb
xchg
push
stos
xchg
push
mov
push
ljmp
mov
fs
xchg
mov
insb
xchg
into
dec
sarb
mov
push
or
fisubl
lods
inc
mov
jo
mov
adc
pop
rolb
ds
jp
cs
or
pinsrw
addb
or
out
enter
lcall
pop
and
xor
jnp
repz
and
push
adc
rolb
dec
pop
pop
mov
shrl
fnsave
jae
outsl
push
inc
ljmp
out
test
jno
xor
or
cmp
xor
push
push
jo
cmp
add
rcr
push
add
test
mov
out
add
add
fmull
inc
xorl
cmp
lret
cmp
stc
mov
out
jbe
je
icebp
ds
pop
jno
imul
je
jbe
lcall
mov
stos
clc
lahf
cmp
je
loop
sti
xchg
mov
outsb
ljmp
pushf
test
mov
inc
out
in
push
loopne
push
addr16
jmp
insb
dec
faddp
ss
imul
js
ret
push
xchg
and
add
shr
fs
cmp
inc
inc
xor
ljmp
jmp
cmc
adc
cld
cmpsb
push
dec
jg
sub
or
add
cs
xor
fsubr
aaa
fadd
cmp
repnz
pop
xor
call
pop
fdivrs
fstps
or
repnz
mov
fnstcw
sahf
xor
outsb
call
in
sbbb
stc
sub
ret
pop
dec
mov
mov
cmpsb
int3
test
mov
lock
pop
les
add
repz
xor
fisttpl
std
push
or
mov
fdivl
xor
inc
insb
insl
decb
xor
mov
pushf
dec
mov
aam
jae
test
out
xchg
andb
sub
push
out
or
push
lret
lods
dec
lret
ljmp
ss
in
mov
push
out
pop
ror
mov
mov
fstps
in
cmp
and
hlt
test
adc
mov
mov
fisubrs
jp
out
stos
in
ret
aad
and
add
jno
pop
add
rcr
loopne
dec
mov
jecxz
add
jge
jmp
addr16
adc
push
insb
sbb
arpl
leave
jno
shll
mov
pop
sar
xor
cld
cltd
fs
cmc
pop
add
pop
cmp
xchg
mov
push
lea
jg
sub
ret
inc
mov
mov
bound
lock
push
jle
adc
cwtl
and
cli
mov
ljmp
aas
aas
or
or
mov
out
mov
int3
jo
push
insb
addr16
pop
mov
sub
jnp
dec
push
xor
xchg
inc
adc
test
icebp
mov
mov
mov
filds
cmp
pop
icebp
pop
inc
and
and
and
jae
movsl
inc
push
pop
xchg
cmc
jmp
xorb
mov
and
pop
stos
clc
sahf
push
in
jmp
mov
mov
test
lds
push
arpl
xor
jp
idivl
mov
jmp
fdivrs
int3
lods
or
aad
js
jnp
icebp
or
scas
das
cmp
pusha
mov
pusha
pop
jp
dec
push
leave
jno
int
xchg
mov
or
cmc
outsb
jae
sbb
and
lods
jge
jmp
mov
push
sub
insb
mov
jb
mov
add
jns
sbb
shlb
and
cmp
sbb
pop
out
cs
std
pop
stos
subb
jne
or
add
inc
xchg
sahf
notl
jle
cld
jb
movsl
out
aaa
cmp
mov
fcmovne
ret
cld
pop
lret
add
cli
mov
sbbl
int3
scas
std
scas
repnz
add
dec
inc
movb
inc
cmp
or
mov
in
div
ret
sbb
jle
sub
les
dec
and
cmpsb
pop
iret
mov
jle
cmp
jp
push
int
jg
sar
cmp
out
sahf
adc
aaa
mov
cmc
fsubs
and
and
dec
ret
int3
xor
loope
mov
jmp
dec
daa
mov
shr
xchg
jl
jns
push
add
adc
pusha
and
jp
pop
inc
lahf
cli
pushf
std
add
xorb
jne
js
xchg
jle
and
mov
xor
mov
add
adc
push
xor
jbe
mov
inc
mov
mov
dec
popf
movsl
sbb
ret
push
or
xor
popf
out
dec
fildl
inc
push
movsl
cmc
sbb
mov
push
cmpl
xchg
incb
aas
roll
add
push
add
add
push
add
roll
add
add
add
add
add
add
add
add
add
roll
add
add
add
roll
add
add
add
add
in
rolb
add
rolb
add
rolb
add
push
add
push
add
push
add
roll
add
push
add
roll
add
push
add
roll
add
push
add
push
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
daa
repz
or
in
add
push
fildll
push
add
xchg
inc
adc
cld
or
mov
add
add
add
add
add
inc
add
inc
or
push
cmp
insl
and
and
mov
inc
mov
inc
xchg
adc
xchg
jge
xchg
aad
cwtl
cmp
testl
and
mov
mov
les
in
fs
or
shl
mov
jns
or
test
push
add
add
add
push
add
push
pop
pop
fmuls
stos
pop
or
adc
push
movl
and
stos
popa
jge
push
adc
inc
mov
adc
rcll
pop
adc
sbb
loope
adc
and
mov
and
and
pop
mov
outsl
sub
sbb
push
shlb
inc
icebp
cmp
dec
cld
stos
cltd
xlat
stc
inc
adc
and
dec
mov
adc
push
add
xchg
in
mov
jnp
ds
jae
inc
xchg
sbb
adc
adcb
cmp
std
or
xchg
movsl
dec
add
out
xor
inc
pop
out
inc
sbb
inc
inc
inc
inc
and
push
test
add
scas
cld
mov
shlb
mov
pop
addr16
push
sbb
and
mov
stos
imul
rorl
sbb
or
mov
push
and
sahf
mov
flds
and
mov
add
add
popa
add
adc
test
mov
sbb
cmpsb
and
dec
iret
shrb
pop
pusha
push
xchg
add
out
mov
add
dec
mov
bound
cmp
or
mov
inc
mov
sbb
adc
das
and
mov
push
mov
dec
std
add
fnstsw
sahf
cmp
fisubs
inc
add
pop
sbb
mov
ds
call
int
mov
adc
cmp
lds
push
xor
inc
aaa
dec
or
mov
add
cwtl
aaa
clc
lods
and
adc
pop
push
leave
dec
icebp
mov
push
inc
jae
enter
add
punpcklwd
add
es
cmp
mov
or
pop
adc
outsb
adc
xor
xchg
add
inc
mov
adcb
out
jne
cmp
xchg
and
imul
or
push
adc
lods
add
icebp
call
mov
sub
pop
cmc
adcb
dec
lock
incb
sbb
fwait
popa
add
fidivs
inc
subb
sbb
jnp
sbb
cmp
mov
inc
push
or
add
bound
outsl
xor
roll
jne
inc
testb
stos
mov
add
mov
inc
add
call
mov
loopne
dec
pop
daa
cwtl
pop
or
sbb
or
adc
cld
cmp
cs
popa
add
inc
ljmp
push
push
mov
inc
or
std
fs
jno
cmpsb
pop
cmp
test
fwait
repz
inc
inc
scas
push
int3
fildl
mov
in
in
imul
cmpb
push
enter
addl
add
insb
popf
and
adc
dec
cmp
adc
insl
add
adc
xchg
stos
add
hlt
push
pop
push
outsb
add
add
or
sub
imul
fs
or
gs
shll
les
dec
or
or
roll
adc
pop
pop
jns
dec
mov
mov
adc
pop
xor
adc
push
push
push
cmpsl
int
aad
xor
in
or
mov
ja
xor
jne
pushf
inc
rclb
cmpsl
orb
cmp
das
lock
pop
repz
insl
pop
stos
stc
mov
mov
and
inc
dec
pop
xor
add
fisttpl
and
je
push
add
imul
movsl
add
js
fwait
shr
xor
xchg
inc
pop
or
mov
sbb
sbb
or
add
in
cmp
es
rol
outsl
cmc
enter
xor
adc
pushf
add
sbb
in
jecxz
es
pop
and
inc
rcr
pop
lret
or
push
lds
add
cmc
stos
xor
dec
repz
and
lock
mov
es
adc
addb
roll
ja
or
loop
mov
sub
sub
adc
aas
jg
out
ja
add
push
mov
fmuls
mov
enter
lods
jl
js
ljmp
in
xor
sbb
add
fstp
sti
push
push
add
bound
xchg
and
jl
stos
ds
mov
movsl
into
and
pop
mov
xchg
add
add
sahf
add
addr16
pop
push
push
xor
sub
bound
jnp
sahf
sbb
pop
sbb
les
inc
or
out
dec
add
push
inc
testl
add
and
add
cld
imul
cmpb
inc
add
xchg
or
add
mov
in
rorl
and
add
stos
repz
dec
in
add
dec
mov
lods
or
lahf
and
pusha
daa
inc
mov
add
cwtl
fimull
cmpsb
cmp
xor
add
mov
add
mov
fs
cmpsb
add
and
push
sar
rcrb
cmp
xor
xor
jns
dec
lsl
dec
pop
mov
cld
xchg
push
inc
clc
and
scas
addb
aas
test
cmp
cld
xor
aam
lods
xor
fisubl
dec
cs
ds
xchg
lods
str
into
aam
in
sbb
cmp
sbb
xor
add
scas
jne
add
fwait
jnp
xchg
sub
loopne
pop
and
aaa
add
imul
sbb
and
test
add
das
mov
mov
or
hlt
dec
add
mov
test
je
mov
imul
cmp
mov
jl
test
das
rorb
ljmp
adc
loop
add
pop
sbb
sub
adc
mov
mov
mov
inc
or
imul
iret
add
das
sahf
inc
mov
inc
adc
lret
fidivrl
negl
xor
adc
incl
push
mov
inc
add
or
push
cmp
sbb
das
adc
push
sarb
lahf
es
or
lcall
mov
push
push
or
lods
adc
add
lcall
push
mov
xor
mov
insl
cmp
and
or
push
jne
movsb
popf
xchg
je
mov
aas
adc
leave
gs
mov
jmp
sti
inc
lods
mov
mov
xor
or
or
xor
mov
dec
pop
out
push
xchg
sub
jb
ss
les
sbb
imul
dec
add
mov
or
jl
xor
hlt
sbb
cmp
inc
or
sarb
push
sbb
mov
insb
and
mov
mov
mov
add
push
arpl
add
lret
imul
sub
rclb
stc
sub
or
push
sbb
mov
adc
mov
insb
mov
cltd
add
pop
repnz
aaa
testb
dec
cmp
stc
push
push
or
in
or
jge
inc
jae
or
dec
nop
adc
pusha
gs
push
mov
mov
add
mull
adc
dec
jmp
js
mov
xchg
pop
sbbl
stc
mov
sbb
or
adc
adc
inc
das
dec
mov
testb
fdivrs
inc
test
xchg
aam
xor
repnz
cmp
inc
or
scas
loope
mov
mov
mov
cmp
out
hlt
daa
or
add
repz
loop
lds
loopne
push
mov
or
cwtl
je
test
ljmp
sub
add
pop
lea
repz
push
dec
aas
test
fisttpl
inc
inc
sbb
rol
inc
lret
lcall
decl
cld
lods
repz
mov
test
lcall
mov
nop
add
fwait
test
mov
mov
aad
fsubl
repz
add
test
push
jp
and
cmp
sub
cmp
sbbl
mov
dec
jno
fwait
add
xchg
in
pushf
enter
cli
push
gs
mov
push
ss
adc
dec
es
cwtl
bound
cli
or
push
push
cmp
jno
add
xchg
popa
jo
dec
subb
add
dec
sub
jecxz
sbb
dec
dec
sbb
xor
dec
and
addr16
push
scas
cmp
xor
pop
dec
and
shlb
jns
cltd
jo
or
adc
inc
mov
push
push
iret
ret
insl
xor
mov
jbe
sbb
pushf
aaa
add
orb
sbb
and
inc
push
mov
dec
dec
sub
or
or
jo
adc
pop
push
sbb
push
pushl
orb
add
add
adc
lahf
and
inc
cmp
roll
xchg
sbb
add
adc
cmp
bound
test
fcompl
adc
shl
push
ss
repz
xor
into
rcll
cwtl
clc
or
sarl
xchg
lret
mov
xchg
aaa
popa
stc
dec
mov
les
sbb
or
or
inc
cmp
mov
xor
daa
shlb
sub
xchg
adc
subl
inc
in
dec
add
add
sti
daa
or
pop
cmpsb
nop
or
test
inc
es
lds
xchg
cmp
ss
inc
rorb
shlb
cmp
adc
popa
fadds
add
jmp
fcmovb
add
mov
setb
xor
or
add
sub
shl
cmc
add
push
stos
out
addl
or
sub
ljmp
filds
dec
inc
lahf
inc
insb
mov
popa
into
ljmp
or
imul
inc
adc
sbb
jle
push
adc
pop
shl
xchg
call
xor
repz
cwtl
out
add
add
stos
and
cmp
xor
push
or
sub
leave
or
sub
rcrb
add
fildl
add
xor
or
mov
fwait
rcrl
push
jmp
rcl
cltd
cmp
mov
test
adc
push
arpl
fidivrs
ret
test
popa
add
inc
nop
lcall
mov
push
bswap
imul
dec
repz
and
in
pop
fs
dec
xorl
ret
xor
scas
xchg
or
aad
adc
pop
movsb
jno
push
inc
shr
push
jno
adc
mov
sub
dec
jmp
test
shl
cmpsb
jmp
pusha
add
in
push
and
inc
out
or
hlt
call
insb
adc
xchg
lods
jno
sti
pop
and
push
nop
test
jg
jae
push
mov
subl
inc
sub
mov
pushf
inc
movsb
out
or
daa
shll
orb
adcl
neg
aad
mov
fdivr
fisubrl
into
arpl
insl
adc
jl
sub
scas
adcl
push
jmp
lea
jl
in
xchg
pop
addb
pop
push
pop
adc
add
dec
pop
dec
insl
push
scas
inc
cwtl
std
sahf
in
test
shlb
bswap
leave
adc
in
sbb
adc
lret
or
cmp
push
pop
std
les
add
xchg
add
or
testl
mov
pop
lock
mov
sbb
setno
test
or
jo
xor
hlt
je
test
fldt
xchg
jle
pop
neg
addl
int3
es
or
sub
lds
mov
stos
push
push
pop
pop
pminsw
sub
dec
gs
sub
inc
fistps
loopne
cmp
cmp
fldcw
adc
int
xor
xchg
scas
sub
push
pop
inc
inc
and
rorb
sbb
add
push
mov
xor
filds
adc
test
mov
and
xor
in
inc
add
je
push
and
div
dec
mov
xchg
mov
mov
outsb
push
xchg
movsl
mov
ret
or
dec
neg
aas
addb
aad
inc
cwtl
mov
jb
clc
push
adc
pop
sbbl
adc
mov
sub
not
cld
adcb
cmp
cli
add
add
cs
mov
call
mov
cmp
enter
pop
aam
add
inc
inc
dec
add
insb
push
dec
orl
neg
or
push
pushf
add
cs
sahf
aad
jle
mov
fwait
sub
aas
xchg
inc
scas
fstpl
mov
inc
sub
test
call
out
sbb
dec
pusha
daa
lcall
add
push
scas
mov
inc
inc
add
nop
and
inc
andps
sub
popf
mov
cwtl
les
sub
add
push
addr16
and
sub
jnp
js
xor
call
or
lcall
pusha
push
fstpl
add
inc
inc
adc
or
dec
cwtl
int3
dec
arpl
mov
in
pop
cmpsl
orb
push
pop
mov
loopne
push
in
and
add
xchg
xchg
sbb
cmp
pushf
pop
dec
mov
push
shrb
add
dec
mov
mov
rolb
and
xorb
enter
outsb
neg
xchg
cltd
sub
or
cmp
rolb
xchg
add
mov
in
leave
shlb
ret
or
adc
xchg
adc
mov
jecxz
inc
addl
and
flds
std
nop
aad
jbe
js
add
stos
dec
pop
arpl
push
adc
adc
fiadds
call
in
push
mov
cli
adc
cld
loopne
push
out
add
testb
mov
fwait
mov
adc
mov
mov
xorl
jno
xchg
push
data16
lret
jg
pusha
inc
and
int3
pop
xor
test
or
xchg
iret
add
mov
or
lcall
mov
push
movsl
scas
out
sbb
stc
repnz
pushf
sub
sbb
ljmp
lods
mov
adc
iret
adc
lret
movsb
sbb
mov
mov
xchg
adc
int
cmp
inc
movsl
dec
inc
cmc
mov
fldenv
pop
fs
ljmp
mov
jecxz
lea
push
shrb
stos
and
enter
xchg
lret
adc
mov
sub
mov
in
cmp
lods
pop
out
sub
subl
fs
and
lret
sub
dec
sub
xchg
dec
addr16
nop
push
repz
pusha
loop
add
out
inc
les
push
cmpsb
jbe
pop
xchg
in
pop
push
rcll
mov
ja
dec
sahf
inc
cmp
or
loope
jmp
fdivs
test
bound
ret
mov
divb
mov
mov
leave
mov
bound
pushf
xchg
sbb
daa
stc
ja
int3
jmp
fbstp
xchg
test
mov
and
test
arpl
cmp
in
sbb
add
and
push
dec
scas
repnz
out
add
mov
popf
sbb
out
fstpl
imul
mov
dec
in
xchg
mov
mov
fadds
jno
mov
mov
jno
out
cs
subl
xor
movsb
das
or
lods
aad
movsb
and
les
mov
mov
out
inc
es
jno
adc
pop
pop
shll
push
in
jnp
lahf
fcomip
or
xchg
and
pop
cmc
out
cmpsl
push
mov
cmc
int
std
repnz
iret
mov
call
lods
pop
or
hlt
jb
adc
aas
cmpsl
out
ret
mov
push
cs
clc
adc
adcb
dec
pop
xchg
xor
pop
push
or
add
adc
pop
mov
sub
jmp
cmpsb
out
add
add
test
sbb
aas
dec
xchg
iret
out
movsl
in
mov
sub
int
pop
pop
mov
jno
dec
stc
mov
fs
hlt
xlat
xchg
cmpsb
test
dec
out
xlat
aam
sub
adcl
sub
cltd
iret
dec
data16
add
cmp
pusha
sti
sub
xchg
in
test
or
and
pop
push
jge
pop
jnp
xchg
jmp
rcl
test
sbb
xchg
push
sbb
pop
sbb
shll
icebp
test
xchg
push
fsub
mov
ret
fsub
mov
mov
insb
xlat
ds
test
cmp
lods
xor
gs
dec
test
mov
cmc
push
scas
shr
pop
jnp
shl
jl
mov
adc
mov
cmc
mov
jno
lahf
js
xchg
jne
sbb
cmp
add
adc
inc
out
enter
hlt
push
dec
cmpsb
sbb
mov
and
cs
sbb
ljmp
nop
dec
xchg
jbe
andl
xor
fstl
outsb
test
mov
cld
repz
nop
push
shlb
or
movsb
mov
cmp
clc
je
push
xchg
js
movsb
rcrl
out
and
xor
sti
scas
nop
or
adc
mov
dec
addr16
push
pop
ss
mov
jne
out
push
mov
mov
aaa
sub
call
sub
jp
in
xor
nop
js
sarl
fdivrp
dec
pop
lock
mov
int
push
mulb
jno
into
cmpsl
out
insb
repnz
mov
pusha
or
mov
dec
xchg
push
xor
or
pop
int
push
xor
stos
cmpsl
xchg
and
xchg
mov
scas
pop
out
fisubl
imul
es
addb
inc
out
hlt
xchg
test
cmpsl
mov
mov
cmp
sti
inc
or
adc
test
fsubp
aaa
adc
aad
add
sub
pop
dec
jmp
push
jo
dec
inc
pop
call
lock
scas
cmp
int
dec
in
fsubp
movsl
sub
pop
enter
andb
and
stos
test
sbbb
shll
adc
ret
pop
xchg
fstpl
cmp
jne
push
sti
jne
xorl
push
push
in
push
mov
push
xchg
mov
cmp
sub
mov
in
jp
sub
aaa
xchg
ljmp
xchg
into
je
mov
mov
jno
rcll
lods
in
imul
dec
cmp
shr
or
lods
lock
aad
push
mov
ret
mov
pushf
dec
push
test
cmp
into
adc
in
dec
scas
lods
ja
inc
mov
push
mov
and
pop
imul
xor
in
mov
out
aas
jnp
pop
cli
inc
xlat
das
xor
int
sbb
pop
and
cmp
fs
and
add
or
and
jecxz
or
xchg
sub
sub
jp
insb
mov
cmp
shlb
adc
loopne
pop
into
fucomi
adc
mov
gs
pop
scas
movb
mov
or
sub
push
cwtl
loopne
orb
mov
les
out
not
or
mov
arpl
mov
or
mov
imul
test
mov
mov
sub
inc
lds
stos
sahf
es
jbe
push
mov
jne
xchg
nop
push
dec
lods
sahf
and
hlt
xchg
cmp
inc
cwtl
jle
mov
cmpsb
test
mov
popf
aam
adc
xchg
call
jge
cld
mov
scas
sub
in
mov
add
sub
scas
cmp
in
out
cmp
dec
es
out
adc
das
js
cmpsb
gs
pop
add
ja
int3
mov
push
and
pop
sub
fcoms
test
daa
jnp
and
mov
lds
shlb
add
mov
sti
movsb
mov
repnz
mov
mov
push
into
es
sbb
cli
add
in
addr16
aad
mov
add
ljmp
sub
enter
incb
or
jne
jmp
push
shl
inc
jle
movsb
repz
mov
neg
adc
fisubl
test
in
das
pop
xchg
dec
out
addl
xor
sub
loopne
out
test
roll
and
icebp
xorb
or
xor
lock
cltd
fdivp
add
in
jae
mov
aas
aad
pop
adc
pop
in
mov
jb
push
jl
xor
jno
add
mov
push
and
adc
lret
inc
lods
lock
xchg
push
xchg
xchg
lods
and
pop
and
mov
pop
cld
mov
mov
je
push
jnp
push
repnz
fldenv
push
rcr
sub
add
insb
xchg
rorb
movsb
or
mov
push
mov
fbld
and
add
xorb
adc
jmp
xchg
or
sti
jne
mov
and
xchg
sub
rcll
and
add
mov
dec
in
sti
lahf
ror
or
mov
or
stc
sti
adc
jns
out
lahf
cli
inc
xor
adc
bsf
cmp
lods
or
hlt
pop
push
cmp
fs
movsl
mov
xor
push
outsb
pop
xor
and
mov
loop
xchg
rclb
mov
loope
xor
stos
inc
daa
pop
xor
add
and
jmp
lods
and
test
fstp
xor
cmp
movl
rol
inc
dec
arpl
push
in
iret
popa
xor
outsb
xchg
dec
outsb
xchg
xchg
xor
xor
nop
stos
sbb
fadds
adc
xchg
inc
push
push
and
cmp
vcvttpd2dq
insl
mov
in
pop
mov
adc
imul
xchg
iret
popa
sub
ret
pop
pop
inc
cld
mov
cmp
out
pop
push
rcrl
push
daa
in
shr
push
jb
or
lds
mov
clc
bound
jmp
push
mov
shr
shrl
jle
mov
stc
jne
jp
ljmp
outsl
cs
adc
std
into
sahf
popa
loope
in
out
pop
dec
cmp
hlt
or
sub
sbb
xor
sub
rol
js
dec
xor
and
push
jg
xor
push
jae
aam
xor
fs
dec
jecxz
imulb
cmp
push
call
in
xchg
repz
lret
add
push
bound
xor
jne
inc
sbb
jg
add
std
in
ja
xchg
aam
mov
and
movsl
inc
xchg
out
and
gs
cmpb
pop
cmp
mov
sub
jne
jmp
jne
js
jo
movl
movsb
mov
sub
sub
xor
sar
xor
cmp
or
xor
shr
jmp
test
mov
inc
mov
mov
mov
fcmove
dec
sub
test
pop
sbb
pusha
push
xlat
lock
inc
ss
pop
push
mov
xor
mov
insl
push
xchg
das
das
push
pop
aaa
push
dec
xchg
hlt
into
pop
ficomps
loope
xor
cltd
cld
lods
insl
xlat
jbe
loope
jl
lock
adc
outsb
pop
adc
clc
test
out
adc
in
outsl
js
test
mov
ret
lds
rclb
inc
rcll
adcl
mov
shll
mov
rorb
dec
lcall
aas
jo
sbb
cmpsb
mov
and
addr16
add
or
in
xchg
sub
adc
insb
cmpsb
adc
pop
mov
jns
mov
and
push
sar
cltd
es
mov
adc
fmull
add
dec
sahf
inc
shrb
lock
ljmp
mov
fsubrl
xlat
sub
fisttpl
fwait
and
mov
je
arpl
and
loope
mov
and
ds
pusha
in
inc
insl
mov
pop
mov
dec
mov
pop
enter
es
das
jae
jmp
jno
or
mov
out
lcall
adc
sub
cwtl
xchg
sub
mov
xor
and
cmpsb
cmp
fimull
mov
adc
enter
cli
popl
jge
outsl
mov
pop
sbb
mov
xor
xorl
push
xchg
sub
cmp
xchg
push
std
in
xor
xchg
mov
mov
call
dec
push
or
loopne
hlt
pusha
ret
jl
dec
jecxz
ss
adc
dec
lret
andl
je
and
les
dec
inc
and
ret
xchg
dec
jecxz
inc
mov
sub
addr16
and
repnz
xchg
sbb
or
cmova
insl
mov
push
mov
inc
mov
cmc
js
lods
and
sbb
cmpb
fisttps
pop
orl
sahf
dec
pop
insl
aad
sub
call
outsl
fdiv
push
xor
and
ja
in
ret
adc
fwait
cmp
pushf
mov
andl
xchg
inc
xor
bts
jmp
jns
sub
push
popf
fucom
or
cmp
and
xchg
out
sbb
outsl
leave
int3
cmc
fimull
movsb
add
dec
ret
mov
inc
xor
mov
fsubs
in
push
push
aam
jecxz
jbe
adc
int
js
test
or
sub
jno
or
and
or
orl
mov
and
test
sub
jmp
test
push
dec
jnp
std
call
push
hlt
dec
cmp
mov
rcrl
mov
jae
sub
mov
hlt
mov
and
jle
arpl
divb
xchg
cs
sahf
push
cs
inc
std
or
pop
add
add
push
clc
mov
iret
adc
mov
and
icebp
xchg
add
cmp
or
repnz
ds
cld
jmp
aad
sbb
fisttpll
mov
xor
mov
or
add
ljmp
sub
add
pop
std
mov
inc
jnp
int3
push
xchg
push
jl
sahf
adcb
push
add
or
push
adc
mov
add
add
pop
dec
cmc
adc
mov
cmpsb
sbb
sub
mov
aaa
push
jbe
inc
cmpsb
or
sti
jbe
sub
mov
mov
or
sbb
dec
push
sub
and
push
out
mov
cli
dec
push
ljmp
and
sub
mulb
insb
aaa
and
out
repnz
mov
push
adc
mov
push
add
mov
sub
or
inc
and
je
mov
ret
and
dec
xor
sub
or
clc
dec
inc
mov
push
or
lret
test
jl
mov
sub
int3
subl
sahf
or
out
jbe
lahf
or
daa
fdiv
jl
adc
int3
sbb
xor
or
add
fldt
fcomip
loop
inc
out
popf
mov
mov
jne
and
and
mov
shlb
cmpsl
scas
push
push
int
loop
push
in
rolb
and
pop
xor
mov
pop
decb
cmpsl
popf
not
sub
inc
cli
xchg
push
push
lods
or
or
sbbl
xchg
add
and
dec
loope
jle
push
lahf
ret
iret
pop
fisubl
jmp
add
aaa
sub
int3
nop
gs
and
int
out
divb
std
dec
mov
inc
inc
inc
pop
add
rorb
pushf
xchg
xchg
nop
push
mov
call
push
adc
int3
filds
push
lcall
int3
mov
or
stos
pop
and
adc
test
sbb
dec
cli
xchg
add
movsb
mov
pop
lds
adc
fcmovbe
in
add
add
inc
bound
lock
mov
and
mov
xor
loop
or
std
xor
and
mov
inc
nop
into
in
fists
xchg
mov
sub
or
cmpl
ds
add
dec
outsl
frstor
inc
in
push
add
fsts
insb
or
add
mov
inc
test
jne
push
jb
nop
push
add
sbb
inc
cmp
test
push
and
sub
or
lcall
xor
mov
add
lcall
test
popa
movsl
js
je
dec
lods
sarl
push
sti
in
stc
jns
adc
mov
scas
push
out
cmp
push
in
fimuls
push
inc
pop
jne
inc
psllw
jnp
out
adc
hlt
inc
outsl
lock
sub
jno
fnstenv
xor
cltd
in
sti
xor
mov
fisttpl
sub
imul
std
and
shll
sub
testb
push
xor
jns
aam
dec
stc
pop
or
loop
popa
sbb
pop
cmp
in
clc
pop
mov
shll
in
pushf
xchg
lret
push
test
loope
fcompl
out
or
dec
mov
adc
xchg
in
stos
in
add
aas
nop
pop
mov
mov
and
fs
pop
add
icebp
movsl
test
push
mov
pop
xchg
and
cmp
cmpsb
insl
faddl
insb
add
and
push
fstps
movsb
test
xor
sub
jne
pop
and
out
lcall
pop
loope
sbb
or
cmpsl
or
or
and
and
mov
xlat
dec
cs
xor
push
add
mov
cld
sub
std
push
mov
mov
pop
and
stos
xor
rcr
xor
outsl
and
loopne
jno
js
fcoms
mov
aaa
ret
cmpsb
fsts
daa
popf
xchg
jne
and
push
cld
dec
xchg
cmp
dec
xchg
pop
mov
or
stc
inc
push
repnz
inc
stc
movsb
outsb
jbe
mov
shl
popa
aam
imul
out
push
lock
pusha
ja
mov
push
jle
lcall
fst
add
xor
int
call
and
or
test
mov
mov
stos
cs
inc
mov
sub
shll
out
test
es
and
decl
xchg
outsb
cmc
adc
bound
jns
fidivrs
je
mov
add
mov
or
mov
push
pop
jnp
insb
cs
stos
add
ds
hlt
daa
call
and
negb
mov
pop
movsb
mov
pop
out
cmp
cmp
hlt
mov
test
sbb
negb
shl
pop
jg
outsl
xor
dec
rcr
mov
stos
arpl
aaa
loope
cmp
jb
inc
xchg
add
sub
add
jns
imulb
ja
push
pop
push
scas
mov
add
xor
roll
jmp
ljmp
addb
in
bound
and
pop
and
pop
add
shll
pop
push
pushf
ss
or
cmpsb
cmp
adc
jp
mov
inc
cmc
test
leave
lods
movsl
mov
sub
and
lret
push
repnz
mov
pop
sti
inc
fbld
pop
les
or
push
pop
xchg
lcall
lahf
out
adc
insl
sbb
lods
and
add
mov
xor
pminub
adc
sub
or
mov
mov
pop
std
ja
mov
shrl
pop
mov
adc
or
int
xchg
inc
gs
add
insb
cmpsb
adc
loopne
ret
hlt
and
out
cmp
mov
gs
jmp
mov
pusha
sbb
push
adc
ljmp
and
push
lods
mov
sbb
xor
inc
add
mov
call
and
add
dec
aas
les
pop
jle
inc
add
outsb
stos
jecxz
jno
mov
sub
or
inc
arpl
mov
hlt
push
test
push
cmp
mov
inc
cmp
repnz
sti
push
jmp
cmpb
inc
cmc
cltd
dec
mov
and
and
rclb
les
dec
or
pop
enter
fmulp
mov
xchg
popl
jge
movsl
addr16
pop
or
jo
shr
add
and
stc
out
ja
pushf
leave
jbe
jnp
xchg
push
fmull
je
out
fisttpll
lea
jp
mov
ljmp
int
aas
mov
sbb
out
inc
cli
lret
hlt
sub
add
adc
clc
sbb
dec
mov
cmp
push
out
js
sbb
lods
sub
rcr
in
mov
fs
mov
aaa
xchg
movsl
mov
imul
sub
jbe
or
out
call
add
jb
or
xchg
push
shr
jl
inc
mov
xor
sbb
lods
pop
adc
aad
cmp
or
jge
sbb
mov
out
push
push
repz
inc
mov
mov
adcb
xor
pusha
add
push
and
or
xchg
pop
push
sub
in
cmp
push
cmp
and
mov
pushf
adc
imul
sbbb
shll
pop
in
cmp
out
outsl
scas
aas
jl
imul
jbe
pusha
xor
cwtl
je
sub
or
mov
mov
shll
ljmp
popa
add
data16
cmp
push
sti
pushf
fcmovnbe
jg
shlb
cmp
jne
mov
ljmp
mov
movsb
aas
rolb
loop
dec
pop
mov
shlb
sub
test
inc
shl
lock
lret
inc
fsub
call
inc
fucom
loopne
into
pop
lea
mov
in
mov
fmuls
pop
imul
mov
ss
sub
xor
jl
pop
sahf
out
push
mov
inc
sbb
sti
cwtl
jmp
mov
addr16
or
loope
mov
add
dec
or
sbb
repnz
or
mov
xchg
jb
dec
pop
and
inc
or
test
and
fucomip
sti
mov
mov
shll
jno
mov
or
jne
add
sub
lea
gs
leave
lock
or
scas
arpl
bound
xor
sbb
std
mov
fistpll
aad
fisubl
ss
rorb
xor
repnz
xchg
mov
scas
shlb
pop
mov
cmp
or
jl
aaa
xor
jp
sti
add
sbb
into
jle
lds
push
pop
pop
xor
fwait
lds
ss
add
add
or
sub
out
sbb
xor
lcall
lds
test
add
jbe
add
sbb
mov
leave
dec
outsb
inc
push
mov
insl
ds
test
scas
pop
mov
adc
mov
push
cmp
adcb
and
jbe
dec
rolb
cmc
and
loopne
cmp
and
and
add
cwtl
adc
pusha
in
ret
adc
xchg
data16
add
insl
cmp
lcall
mov
repz
cwtl
inc
retw
je
dec
mov
sub
cmp
dec
or
pop
gs
push
pop
out
popf
mov
ljmp
push
and
daa
sbb
sbb
test
movsl
mov
mov
push
and
icebp
clc
shr
xchg
cmp
lds
neg
dec
inc
xchg
popa
pop
sbb
mov
add
jo
int
push
push
les
test
xchg
lea
orb
and
nop
cmp
sbb
or
lahf
push
pop
mov
cmp
hlt
in
jno
cli
push
in
insb
fst
inc
hlt
jmp
inc
jno
stos
xor
stc
repz
lods
mov
test
push
push
ja
mov
in
xorl
fldenv
add
inc
jmp
and
and
loop
add
scas
sub
nop
into
inc
xor
push
loope
sub
dec
or
sub
repnz
inc
adc
and
in
mov
fistpll
add
in
sub
add
ret
test
xor
and
and
xchg
cmp
outsl
pop
push
mov
inc
push
andb
dec
stos
mov
repnz
inc
into
or
push
jmp
and
es
jne
out
adc
or
sbb
dec
cmpsb
push
dec
js
push
push
stos
pop
push
aas
sub
inc
jns
xlat
mov
sbb
out
leave
or
out
fs
jg
xchg
hlt
ret
in
sbb
inc
std
mov
sub
sbb
jnp
bnd
add
sahf
outsl
subl
inc
push
lods
cwtl
scas
cs
push
aad
and
or
testb
add
pusha
outsl
push
clc
addr16
add
xor
das
pop
jle
std
xor
ret
shrb
outsl
call
sahf
fldcw
sub
jb
push
cmc
call
adc
xchg
xchg
pop
or
and
sarb
cld
sub
outsl
and
dec
mov
cs
pop
sarl
push
push
pushl
cli
xor
and
jp
cwtl
lcall
outsb
push
push
lret
xchg
hlt
imul
sub
xchg
xor
aaa
xor
enter
in
sub
jecxz
dec
int3
inc
pushf
jge
xchg
mov
neg
or
movsb
dec
add
cmpsl
inc
or
scas
sub
or
mov
pop
ss
inc
xor
testl
or
xor
xchg
or
add
push
add
stos
ds
xchg
cs
fidivrl
xchg
out
jbe
inc
mov
xchg
enter
in
rcrb
shrb
jecxz
xor
xchg
lret
push
hlt
sahf
in
mov
pop
jbe
or
pop
cld
xor
inc
mov
addr16
cmp
int3
in
jmp
daa
pop
subl
rclb
sbb
mov
les
out
inc
or
int3
out
pop
dec
or
jnp
jae
in
sub
add
sbb
inc
jns
xchg
pop
cmc
pop
mov
push
pop
cli
push
mov
dec
cld
push
push
jne
sub
cmpsl
scas
mov
push
mov
xor
in
xchg
adc
or
stc
inc
pop
hlt
dec
out
cmpsl
repnz
and
jno
test
adc
inc
xor
cltd
ds
xor
out
xchg
mov
and
and
xchg
push
loopne
add
xchg
push
jno
shll
fldl
xchg
dec
pusha
mov
and
cltd
in
jnp
in
add
sub
gs
mov
into
insl
jmp
sbb
subl
dec
xor
and
sbbl
out
adc
sar
mov
sub
lret
jecxz
mov
xchg
pop
repz
int
movsl
mov
add
icebp
jbe
rcr
nopl
and
jb
scas
out
out
xchg
pop
add
mov
jle
push
jbe
push
cld
mov
shlb
stc
inc
popa
ds
xor
push
jle
mov
mov
aam
lea
cmp
icebp
adc
pop
shll
cmpsb
les
negb
mov
mov
add
or
cmp
mov
mov
add
pop
out
addr16
add
mov
cmc
pop
xchg
leave
sub
xor
jl
add
test
dec
imul
and
jp
iret
lock
out
clc
add
lret
aam
pop
int3
lods
push
and
sbb
and
in
scas
clc
data16
cwtl
dec
mov
test
es
rorb
hlt
mov
lods
jmp
dec
bound
faddl
inc
xchg
std
ret
sub
lea
lcall
mov
cmp
out
jnp
sub
xchg
inc
mov
enter
in
out
jecxz
outsb
nop
or
gs
rclb
sub
outsl
or
sbb
mov
icebp
push
push
jmp
mov
fmuls
push
mov
nop
aad
xchg
dec
and
lcall
call
sahf
push
jnp
mov
mov
xchg
lret
dec
and
dec
out
xchg
cltd
test
mov
ljmp
mov
jmp
pop
push
adc
jnp
data16
out
loopne
adc
or
ljmp
fnstenv
das
push
and
add
in
arpl
lea
xchg
cmp
cmp
sbb
cwtl
ret
sbb
mov
xlat
test
and
aam
dec
daa
inc
xchg
xorb
adc
lods
and
jno
es
sub
loope
push
mov
add
inc
hlt
mov
loop
mov
aaa
jbe
sbb
imul
mov
mov
jp
or
rorl
mov
iret
dec
ss
repnz
cli
fmull
adc
aam
mov
repnz
out
mov
cmp
mov
mull
nopl
or
and
adc
mov
xor
mov
out
js
in
imul
dec
pop
xchg
mov
pop
sbb
faddp
clc
mov
push
das
in
cmp
scas
sbb
scas
cmpsl
and
in
or
lock
and
and
push
adc
cmpl
xor
mov
adc
imul
aaa
test
adc
jo
jmp
lods
sbb
pop
or
inc
xor
int3
ljmp
outsl
rorb
inc
aaa
mov
pop
cmp
inc
adc
jp
movsb
hlt
mov
jmp
pop
push
dec
in
adc
fwait
sub
dec
mov
std
lods
scas
repnz
push
mov
inc
test
cmp
repnz
inc
dec
add
stos
je
dec
dec
push
xor
or
decb
mov
je
and
ljmp
add
mov
stc
fs
or
pop
mov
xor
shl
shrb
in
jo
out
cmp
inc
outsl
mov
push
mov
movsl
scas
iret
pop
inc
dec
ret
xchg
jbe
mov
push
inc
xchg
fwait
push
mov
and
mov
pusha
or
cmpsl
lods
sub
lea
cmpsb
dec
lahf
sbb
pusha
mov
je
xor
push
popa
rclb
popa
push
and
test
mov
sbb
pop
cmp
sbb
lods
out
jl
adc
js
shrb
in
es
ss
cmp
icebp
jnp
pop
jmp
sbb
jecxz
add
in
push
pusha
pop
sub
cmpb
movsl
and
imul
in
lods
fstp
in
fisttpl
sub
aas
cmpsb
out
xor
loope
fcoms
enter
and
xlat
xchg
mov
stos
xor
cltd
call
addr16
xor
mov
loopne
cmp
stos
or
scas
mov
lret
adc
sbb
sub
in
mov
mov
inc
mov
das
icebp
mov
std
int
dec
mov
xorl
ljmp
mov
stos
sub
cmp
and
lea
xor
loope
rcr
fisttpl
mov
ret
gs
movsb
into
jg
push
out
dec
dec
movsb
fistpll
loop
sbb
mov
push
mov
in
inc
xor
and
add
iret
sub
pop
gs
outsl
dec
pop
or
xchg
push
jno
push
sbb
rol
sub
in
jle
push
in
notl
stos
test
jecxz
xchg
sbb
sub
sub
mov
adc
jne
adc
mov
mov
xchg
push
pop
std
cmc
adc
dec
sbb
mov
xchg
jno
int
add
out
mov
lock
push
js
pop
pop
mov
mov
shlb
xor
jb
push
push
jl
mov
dec
xchg
icebp
xchg
sbb
addl
or
data16
dec
loope
popf
ret
ds
add
adc
jmp
add
jmp
inc
xchg
xchg
adc
aam
dec
mov
sbb
int
inc
fmull
loop
xor
xchg
and
adc
subl
jmp
adc
mov
adc
pop
mov
sahf
add
mov
div
add
cmpsl
push
jbe
in
cmpl
jmp
outsb
in
pop
sbb
ret
repz
data16
rcrl
movsl
push
add
rcrl
cmp
int
add
rolb
mov
mov
cmpsb
sub
daa
aaa
mov
xor
adc
jmp
xchg
mov
push
jecxz
das
std
sub
in
orl
sti
xor
pop
push
das
xchg
and
dec
into
sbb
inc
cmp
notb
ret
aas
inc
lcall
mov
push
rcrl
jo
mov
sahf
mov
cltd
int
push
imul
and
cli
xorl
imul
addr16
cld
into
insb
mov
sahf
loopne
jo
jp
stc
rcrb
movl
test
sbb
loop
adc
cmpsb
pop
ja
in
aam
mov
mov
xchg
add
cld
orl
pusha
and
push
test
mov
out
pop
imulb
adc
mov
xor
dec
jmp
decl
jbe
mov
or
jecxz
ror
inc
xlat
in
testl
adc
out
int3
test
pop
xchg
imul
dec
mov
or
das
gs
adc
jge
push
hlt
scas
subb
movsl
inc
sub
lret
adc
mov
arpl
insb
xchg
xor
push
int3
cmpsb
scas
pop
jno
mov
roll
repnz
repnz
xlat
stos
push
cmp
xorb
xchg
fs
jns
pusha
push
cmp
repnz
shlb
xchg
shrb
jle
sbb
fbld
test
stc
and
xchg
add
jb
inc
scas
idivb
test
shll
or
repz
push
loop
rcll
or
adc
arpl
pushf
cltd
cltd
cmp
sub
cmp
shr
enter
ljmp
movsl
pop
mov
or
xchg
or
dec
popl
jle
sub
dec
and
ret
mov
shr
xor
leave
or
loopne
jno
xchg
push
ja
std
gs
jne
sub
adc
scas
sub
add
sub
mov
lds
cmp
mov
and
mov
mov
stc
inc
nop
shld
or
jg
insl
mov
xchg
dec
and
imul
push
hlt
push
int
dec
adc
inc
ret
icebp
and
mov
imul
in
xchg
mov
test
mov
dec
push
rclb
mov
mov
in
xor
or
out
mov
add
mov
inc
adc
mov
push
mov
mov
in
rorl
hlt
dec
add
subb
movsl
add
inc
and
arpl
or
ret
jg
imul
outsb
mov
jecxz
ss
pop
loope
dec
sub
test
cmp
mov
push
dec
push
push
jecxz
push
imul
outsb
xor
mov
pusha
mov
ret
and
data16
adc
lret
adc
es
add
mov
test
movl
push
or
xor
dec
popw
ds
cmp
jl
lds
in
jb
xchg
fisttpl
mov
gs
or
not
shrb
cmc
inc
mov
cmp
int
push
in
shlb
cmpsl
mov
sbb
jg
jecxz
inc
insl
mov
lods
jns
cld
clc
imul
aad
lret
jno
push
lret
mov
lret
or
das
testb
mov
adcb
mov
sti
cltd
push
mov
xchg
adc
mov
cltd
scas
scas
jmp
or
jno
push
sbbb
outsb
or
xchg
xchg
test
push
push
inc
xor
and
lea
push
dec
sbb
dec
pushf
adc
mov
inc
popa
pushf
cmp
adc
push
test
pop
je
frstor
xchg
pop
lods
cs
loopne
xchg
inc
cmp
inc
xchg
push
pop
sub
lods
ja
int3
inc
add
jbe
sbb
push
mov
mov
fdivl
enter
shl
mov
and
adc
lock
inc
xchg
test
push
mov
loopne
imul
add
mov
imul
mov
out
mov
pop
adc
cmpsb
inc
in
add
cvttps2pi
mov
pop
jmp
outsl
adc
dec
test
lea
ds
loope
xor
mov
mov
and
shl
fidivs
lods
cmp
out
pop
mov
push
inc
addr16
lock
fcomip
sbb
inc
icebp
xchg
nop
rep
push
in
xlat
sbb
mov
inc
jecxz,pn
inc
xchg
in
inc
cli
out
loop
or
push
mov
jmp
mov
or
jmp
inc
ss
pushf
xor
xlat
sub
xlat
int3
jb
fnstenv
sbb
inc
fadds
cmp
xlat
daa
cmp
mov
arpl
loopne
xchg
enter
lret
sub
leave
xor
leave
lret
inc
push
jae
pushf
push
sbb
daa
adc
daa
adc
int3
sbb
mov
sbb
push
nop
movsb
call
fidivrs
lods
jp
push
out
adc
negb
adcb
push
test
push
inc
test
and
mov
cmp
sbb
xchg
rclb
mov
icebp
pop
in
jmp
or
lcall
rolb
mov
jbe
ds
ljmp
popa
enter
cltd
scas
adc
lock
stc
xor
and
dec
push
pop
popf
jbe
pop
insl
mov
test
or
sbb
in
fld
std
adc
cltd
movb
cli
inc
push
ja
insl
and
mov
inc
or
jnp
mov
shld
lcall
scas
mov
inc
jge
pop
add
xor
xor
push
je
testl
push
inc
std
push
aad
mov
nop
or
test
insl
imul
jne
sti
mov
imul
push
dec
push
push
repz
in
or
mov
fiaddl
adcb
rcrl
jbe
pop
std
adc
cmp
pop
pop
or
orb
mov
mov
and
mov
mov
xor
lea
sub
or
lock
cld
cwtl
xchg
push
cld
push
out
push
outsb
stc
sub
or
adc
pop
pusha
cmp
mov
pop
out
jb
aas
xchg
push
cld
stc
push
stc
adc
decb
inc
lret
mov
adc
pop
cmpsl
inc
imul
adc
test
add
mov
sub
mov
mov
or
sub
push
xlat
mov
in
test
ljmp
stos
mov
bound
addr16
int
in
insb
and
jno
shll
push
std
adc
cs
sub
adc
cli
or
mov
and
stc
adc
cmp
push
pusha
hlt
or
and
adcb
fpatan
inc
cwtl
popf
call
jae
dec
mov
fnstsw
mov
adc
mov
pop
popa
rcrb
rcrb
test
cmp
mov
gs
xor
popf
xchg
loop
movsb
adc
mov
xor
dec
lods
xchg
push
fcoml
pop
add
xchg
and
popf
fistpl
sti
cmpsb
xor
dec
subl
inc
fs
adc
adc
xlat
clc
out
mov
movsb
loopne
pop
decb
mov
inc
lods
pusha
push
push
ss
enter
adcb
sbbb
std
pop
adc
test
sub
into
pop
mov
out
adc
jl
adc
ja
roll
add
insb
push
push
add
es
push
ds
mov
cmpsl
dec
or
jnp
mov
repz
sbb
sbb
in
adc
outsb
pop
push
shl
jmp
dec
lock
nop
adc
movsl
xor
pop
sub
xchg
sti
push
lahf
adc
push
data16
cltd
sbb
movsl
mov
push
cli
and
sub
mov
into
ret
sub
in
shrl
call
fisubs
bound
call
xchg
mov
jbe
dec
inc
xchg
inc
sub
scas
ja
mov
imul
sub
ret
fisubl
cmp
cmp
loop
ret
jmp
stc
mov
ss
das
cld
and
popa
mov
add
cmp
lcall
add
pushf
daa
adc
cld
sub
inc
lret
cwtl
sub
and
fistpl
push
rep
out
fistpll
add
mov
mov
sahf
hlt
cltd
and
out
movsl
or
mov
test
stos
push
jns
lods
ret
scas
in
push
cmc
mov
mov
sub
mov
and
int
test
push
add
cmpsb
and
xorl
out
scas
orl
inc
mul
jle
das
mov
cmp
pop
out
rorl
aas
xchg
mulps
and
rcr
cmp
hlt
fistpl
cmp
fimull
jns
imulb
add
bound
in
cmp
cmpl
jecxz
push
leave
adc
mov
push
das
mov
mov
or
rcl
xchg
jae
sub
test
add
xchg
pop
add
inc
sub
movsb
lret
movsl
jmp
popf
add
shl
adc
es
and
daa
stos
in
pop
jno
mov
xor
sbb
insl
adc
mov
das
ret
sahf
push
movl
mov
test
les
pop
mov
xlat
sbb
inc
icebp
push
sub
push
add
xchg
hlt
sub
mov
inc
test
rorb
imul
or
xchg
dec
clc
inc
or
push
hlt
push
mov
and
in
leave
mov
sbb
sbb
inc
fs
test
rolb
cld
cmp
adc
and
push
fs
push
insl
and
repnz
jb
loop
fs
ret
loope
cmp
dec
cmpsb
ds
fwait
in
push
push
cmp
fistl
inc
jbe
xchg
lds
mov
shrl
and
shrl
test
mov
fsubs
ss
mov
bound
jno
sbb
xchg
dec
mov
mov
imulb
repz
popa
das
sbb
das
ror
filds
cld
fs
dec
add
pop
pop
data16
ja
xlat
lret
das
xor
mov
or
iret
mov
ret
xor
pop
loopne
fistps
push
loopne
pop
movl
xchg
xchg
jns
xchg
mov
mov
rcl
dec
mov
and
dec
cltd
xchg
dec
pushf
or
cmpsl
lret
aam
lcall
jmp
fists
push
inc
jecxz
jge
lods
jle
xchg
jae
sub
sub
add
or
es
add
pop
sub
loop
shlb
out
ds
jne
clc
stc
inc
pop
stc
ja
call
lods
mov
add
popa
and
pop
push
movsl
and
pop
div
and
mov
pop
push
cltd
mov
sbb
sub
sti
test
iret
hlt
outsl
lds
push
inc
fisttpl
ljmp
pop
xor
lcall
pop
int
xor
or
add
adc
pop
cmpsb
mov
or
xlat
push
aaa
test
adc
fisubl
testb
adc
iret
in
repz
jl
push
push
pushf
jecxz
lret
xor
lret
imul
cmc
daa
outsb
dec
xor
inc
repnz
pushf
jbe
push
add
iret
sub
je
hlt
mov
sbb
in
scas
imul
fwait
out
xor
mov
daa
loop
aad
xchg
movsl
xor
or
scas
stos
inc
xor
divl
add
mov
cmp
sbb
or
sysenter
xlat
fildl
in
int3
addr16
les
in
dec
lea
push
adcb
sti
jl
decl
aad
ret
rcrb
jnp
and
ja
mov
aas
inc
jbe
pop
and
cmp
add
push
add
ret
shlb
jae
mov
sbbb
lods
fsts
shlb
and
out
clc
sbb
movsb
test
rclb
sti
cmpsb
fcoml
repz
imul
or
mov
add
and
lods
test
js
sbb
unpcklps
ljmp
xchg
adc
int3
adc
shlb
push
mov
mov
mov
movsl
or
cmpsb
xchg
xrelease
xchg
add
adc
mov
dec
cs
or
adc
dec
fstpt
fldenv
in
clc
in
and
xlat
insb
push
jae
xlat
pop
fistps
mov
push
les
xchg
aad
inc
pop
sbb
or
sub
sub
sbb
sahf
dec
es
sub
cli
movb
das
in
lods
dec
test
in
stos
xchg
xchg
adc
ljmp
sub
lcall
cmp
in
ljmp
and
call
loop
push
ja
inc
sub
ret
mov
xchg
sbb
repz
mov
mov
cld
jge
adc
xchg
xchg
lea
inc
lret
add
xor
pusha
mov
pop
pop
data16
mov
jbe
lock
pop
xchg
push
sbb
sbb
arpl
lods
jecxz
jmp
pop
in
dec
mov
sti
test
sti
out
xor
xchg
test
push
test
push
mov
mov
mov
or
jno
cmp
adc
mov
clc
sub
push
push
sub
call
or
inc
lds
dec
mov
and
inc
dec
pop
ds
fldenv
and
xor
inc
in
push
dec
inc
mov
movsl
cmp
aaa
inc
sub
stos
imul
dec
repz
mov
imull
pop
cld
das
push
lret
add
ds
adc
dec
xchg
push
sub
ss
push
notb
es
mov
pop
dec
stos
mov
test
push
inc
jmp
cmp
mov
sub
adcl
lods
lods
sbb
inc
fsts
adc
push
addr16
scas
cmp
pop
xchg
movsl
inc
ret
cmpb
ret
lahf
scas
out
mov
faddl
jle
repz
repnz
or
add
cli
mov
jns
jmp
jnp
insb
test
es
in
sbb
dec
and
sbb
sbb
cmp
cmc
add
out
subl
jae
sahf
push
jg
push
bound
cmp
pop
ficompl
lea
sbb
iret
push
out
popa
mov
sub
cmp
mov
or
scas
in
xor
addr16
mov
test
out
ljmp
fsin
dec
sub
fmuls
lahf
insb
sbb
cmp
fcomps
push
ds
xchg
push
clc
inc
mov
or
xlat
mov
out
stos
inc
test
into
xchg
pop
cmpl
jno
push
or
cmp
sub
xor
add
enter
pop
movsb
dec
pop
push
lods
jmp
inc
sbb
stos
hlt
jae
pop
jp
movsb
jb
adc
in
mov
leave
dec
gs
divl
dec
jo
lods
je
push
push
in
jmp
je
repz
or
repz
jns
lahf
push
and
jae
mov
adc
or
sti
mov
and
mov
int
mov
cmp
pop
aas
hlt
mov
and
sub
scas
imul
dec
ljmp
jne
pop
out
sti
call
jecxz
and
cmpsl
add
jp
mov
std
and
imul
int3
sub
cld
jne
loop
dec
fisttps
sbb
ds
sarb
cmc
and
push
jecxz
arpl
xor
lret
daa
shlb
and
test
or
repnz
adc
or
ret
xor
ss
sarb
add
xor
mov
jbe
or
popf
in
pushf
mov
mov
mov
das
sub
cmpsl
pop
insl
testb
stc
int
lcall
jl
xchg
test
push
ficompl
xor
into
pop
sti
or
stos
loope
test
data16
out
inc
mov
jo
lret
aas
mov
je
jo
add
das
mov
add
dec
mov
add
xchg
jle
xchg
cmp
ljmp
in
or
loope
dec
dec
adc
dec
adc
jmp
sbb
call
or
mov
adc
mov
xlat
fs
mov
sbb
push
sbb
push
lods
mov
fisttpll
cmpsl
and
out
das
inc
mov
dec
xor
test
mov
loopne
aad
bound
mov
nop
fsubl
xor
push
call
sbb
xchg
into
mov
mov
inc
sub
cmpsb
test
mov
inc
jmp
imul
jecxz
or
xchg
jmp
push
loopne
mov
sub
cmp
addl
sbb
in
addr16
sbb
test
test
clc
ror
jmp
adc
dec
fbld
mov
outsl
imul
aaa
xor
movsl
imul
iret
leave
ret
jmp
cvtss2sd
aas
and
mov
xchg
sub
mov
cmp
out
mov
sub
cmp
pop
dec
lds
mov
mov
push
add
in
lea
dec
mov
cmpsl
daa
and
push
push
arpl
inc
inc
mov
arpl
test
movsb
mov
cmc
mov
test
hlt
adc
cmp
arpl
nop
adc
addr16
cmp
in
xor
jp
in
cli
movsb
jmp
outsb
test
loopne
sti
movsb
xchg
jns
fldl2e
out
pop
pop
aad
push
stc
mov
adc
in
jg
dec
add
mov
mov
push
dec
push
in
insl
rcrb
pop
insb
rcrb
jne
push
int
inc
ds
ds
pop
lcall
dec
adc
jno
cmp
add
mov
insb
or
sbb
cld
dec
fxch
push
int3
sub
fldenv
mov
inc
push
mov
js
and
das
inc
fiadds
in
xor
dec
push
fcomp
scas
clc
ljmp
cmp
inc
inc
outsl
jnp
sbb
or
dec
aam
ficompl
jnp
pop
stc
dec
lods
adc
push
dec
nop
stos
into
add
push
out
in
in
repnz
mov
in
js
addr16
xor
add
xchg
mov
in
int
adc
mov
add
xor
sub
sub
mov
addr16
mov
xor
jge
lds
stos
push
sbb
jecxz
sub
addr16
lds
pop
sbb
mov
enter
mov
push
xor
cwtl
ss
ret
pushf
leave
cmpsb
in
stos
lcall
je
adc
mov
adc
mov
adc
mov
adc
daa
adc
adc
sti
push
sbb
adc
push
das
mov
pop
cmp
mov
lock
test
cmp
es
cltd
cmc
pop
test
gs
dec
jecxz
dec
out
loope
fldl2t
cli
lock
adcb
roll
pop
ret
mov
mov
mov
imul
lea
adc
cmp
out
movsb
push
in
mov
shll
push
cs
push
imul
outsl
aaa
scas
test
ljmp
adc
lret
ljmp
xlat
xor
add
gs
lods
or
xchg
add
cmp
std
dec
fld
jbe
into
jmp
add
xor
pop
xor
push
sbb
xlat
jmp
or
lock
jno
nop
mov
imul
sbb
mov
mov
cmpsl
push
inc
popf
xor
xchg
push
and
inc
pusha
cld
adc
mov
mov
daa
std
jns
cltd
add
inc
leave
xchg
arpl
pop
jo
out
mulb
adc
or
dec
mov
push
leave
xchg
loopne
sarb
sub
js
jbe
push
outsl
inc
orb
and
mov
in
xor
add
out
mov
and
cmp
scas
test
mov
mov
leave
mov
jnp
popf
in
pushf
lds
fdivrs
cmp
pusha
pop
insb
inc
mov
addr16
sbb
out
add
stc
mov
cmp
and
std
mov
nop
and
hlt
shlb
shrb
pop
pop
movzbl
sbb
jg
cmc
mov
ret
cmp
add
imul
movsb
xor
dec
and
and
mov
dec
sahf
cltd
push
mov
mov
sub
rdseed
jle
mov
lea
sub
repnz
jno
scas
xor
pop
lea
call
mov
in
test
mov
scas
sbb
aam
or
fwait
insl
push
adc
pop
xor
sbb
jo
stos
pop
mov
fs
or
jecxz
insb
repz
lcall
cmp
mov
pop
mov
dec
shld
ret
lret
push
xlat
out
push
cmpsl
mov
enter
lret
cwtl
lea
or
inc
sahf
nop
or
or
mov
jbe
repz
stos
aaa
daa
jmp
ja
insl
loop
adc
es
out
sbb
test
and
nop
lret
xor
xchg
mov
shll
cmpsb
dec
scas
add
stos
lcall
adc
ffreep
js
and
pop
loop
cmp
in
ret
jl
add
jge
pop
ds
gs
popa
cmpsb
and
sub
into
jae
mov
outsb
adc
popa
dec
cli
rcrb
and
mov
lods
and
scas
push
stc
xchg
movsl
dec
test
push
aad
mov
je
sbb
test
pop
test
out
jno
or
mov
sbb
sub
mov
ret
adc
pop
pusha
push
and
pop
mov
inc
aam
outsb
and
pop
ret
movsb
divb
mov
repnz
adc
cmpsl
lcall
jns
adc
cmp
das
push
es
imul
fstps
and
cmp
mov
push
mov
int3
ljmp
xchg
lret
test
test
or
test
loop
xchg
insl
shlb
mov
pop
add
cmp
pop
lock
xchg
int3
mov
mov
mov
xchg
outsl
and
mov
mov
xchg
add
out
add
fldenv
and
xor
data16
fistpll
push
pop
mov
mov
or
inc
push
loopne
xor
jmp
cmp
dec
jl
dec
daa
out
push
repnz
and
dec
or
hlt
or
insb
mov
jne
lods
insl
dec
jb
jl
sub
push
mov
clc
gs
jmp
test
les
loop
jmp
jle
test
xlat
jno
stos
insb
movsb
daa
jge
call
pop
lods
mov
mov
bound
js
xor
mov
xlat
neg
mov
lock
dec
das
lock
outsb
dec
enter
stc
mov
adc
cmpsb
pushf
cmp
xor
sub
push
or
lods
mov
lods
xor
fiaddl
dec
setbe
push
hlt
dec
out
in
loopne
or
push
addr16
jno
cmpsb
movups
ljmp
insl
mov
movsb
leave
in
ljmp
outsb
push
stc
cmpsl
insl
or
add
mov
test
sub
test
in
adc
je
adc
lret
sbb
out
adc
data16
xlat
hlt
ljmp
fidivl
das
mov
adc
into
outsb
mov
test
sub
out
mov
xlat
xchg
dec
int3
mov
push
lea
pop
pop
sbb
imul
and
adc
mov
or
inc
inc
loopne
ffree
lahf
pop
adc
sbb
sbb
xchg
in
or
std
jns
adc
dec
xor
mov
adc
adc
dec
xchg
mov
sub
and
jns
aaa
pop
or
xchg
subb
stos
inc
xor
sbb
out
mov
jl
dec
mov
sbb
dec
cmpsl
imul
pop
popf
cli
cld
arpl
push
sub
jns
daa
and
jecxz
inc
shl
inc
rorl
out
mov
and
cmp
sbb
test
ja
addb
mov
in
orb
jmp
or
inc
mov
aad
or
aaa
test
xchg
pop
lods
mull
arpl
pusha
test
push
or
cli
cwtl
movsb
jmp
push
pop
clc
es
adc
xchg
sub
in
mov
pop
jbe
mov
testb
push
mov
orb
cmpsl
loopne
push
ret
or
jo
cmpsl
roll
insb
xor
fnstenv
jae
xor
mov
mov
in
xchg
hlt
iret
mov
mov
popa
in
cwtl
cs
int3
leave
adc
sub
ss
jno
push
pusha
fbld
cmp
loope
mov
mov
and
lods
mov
call
pushf
out
mov
lds
test
push
inc
mov
xor
push
pop
in
addr16
loop
cs
mov
push
and
jnp
sbb
pop
add
cmp
mov
xchg
and
lock
xor
gs
cld
sbb
inc
out
movsl
movsb
mov
push
int3
mov
cmp
loopne
xchg
inc
jecxz
aam
imul
mov
xor
adc
dec
in
sub
and
push
pushf
inc
jae
ror
gs
mov
out
fsubl
ja
jl
dec
push
add
cmp
jge
dec
cmp
fld
dec
inc
scas
xchg
jg
sbb
test
daa
sub
jmp
pop
jmp
cmpsl
mov
in
test
push
mov
cmpsb
or
push
mov
mov
push
or
jecxz
jae
add
dec
lock
and
loope
sub
mul
xor
lods
leave
sbb
rclb
xorb
inc
mov
and
mov
imul
sub
stos
jecxz
mov
or
push
in
jle
pop
repnz
push
imul
mov
and
cltd
js
push
lds
inc
fsubr
enter
jl
clc
adc
fildl
mov
test
mov
sbb
movsb
out
jge
jecxz
xchg
ljmp
adc
mov
dec
insl
in
cmp
lret
and
lods
push
mov
add
xchg
push
lods
insb
xor
mov
pop
pop
and
das
mov
jne
jbe
and
call
sub
les
push
inc
imul
push
xchg
push
pop
arpl
nop
cmp
lea
push
lds
inc
push
adc
add
fcompl
rcll
rcrl
rcll
aam
stc
adcb
sub
mov
sub
and
test
pop
push
dec
add
jg
out
popf
xchg
movsb
adc
or
js
inc
adc
inc
out
jecxz
daa
push
jmp
adc
sub
cmp
mov
aaa
roll
imul
mov
mov
int3
add
xlat
cld
inc
mov
sbb
push
mov
dec
xchg
sbb
mov
rorb
nopl
das
jle
xchg
pop
int3
or
loop
sbb
loope
cmc
jns
push
jp
es
adcl
sub
jecxz
dec
lods
pushl
in
ret
adc
dec
and
mov
pop
mov
in
mov
int3
adc
xchg
hlt
roll
push
jle
loopne
sbb
in
jg
lcall
add
lea
dec
mov
jbe
cmc
xor
stos
scas
inc
in
iret
sahf
scas
push
push
out
cmpsb
jb
pop
cmp
mov
xor
sbb
sti
mov
sbbl
lahf
arpl
cmpsl
cmpsb
inc
cmp
cmpsb
je
sub
adc
xor
cmp
inc
std
jbe
inc
push
stos
aaa
inc
mov
jle
lds
pop
fidivl
mov
dec
dec
movlps
jbe
jecxz
pushf
jae
cmpsb
mov
dec
mov
mov
pop
add
mov
leave
adc
xchg
and
testb
repnz
inc
mov
cmp
ret
push
ljmp
adc
dec
int3
cmp
or
cmc
mov
sahf
lcall
inc
in
sub
or
imul
outsb
sbb
in
add
cmc
inc
adc
sub
pop
das
insb
mov
mov
out
add
mov
bound
mov
pop
sbb
xchg
jbe
int3
jns
test
stos
sbb
sbb
jb
and
adc
jge
ret
dec
sub
mov
iret
mov
ss
lods
es
clc
or
pop
xchg
data16
sub
cld
loope
cmp
pushf
xchg
push
repnz
or
cs
loopne
mov
mov
lret
pop
sarl
pusha
mov
and
int3
xchg
lds
test
ljmp
arpl
inc
fsubrs
push
jmp
ljmp
adc
pop
popf
int
incb
mov
daa
lods
outsb
adc
lret
dec
mov
daa
outsb
cmp
mov
leave
pop
pushf
lret
pop
ja
or
leave
gs
add
add
lret
cmp
les
push
dec
int
and
add
pop
push
adc
jmp
imul
mov
mov
mov
add
outsl
adc
sti
jne
xor
dec
mov
insl
addr16
adc
push
movsb
cmp
mov
push
in
push
lds
shrb
pop
push
scas
pop
push
gs
dec
fadds
inc
insl
lea
notb
les
push
mov
int
in
xor
sub
mov
mov
test
mov
adc
mov
pushaw
sbb
jg
inc
or
inc
out
xchg
hlt
jle
xchg
test
adc
dec
pop
xor
xor
xchg
and
mov
dec
les
dec
ss
and
xlat
inc
cmp
outsl
xor
icebp
ret
mov
data16
push
sbb
ja
xor
xchg
aas
mov
rcr
icebp
sbb
dec
outsb
sbb
push
daa
jmp
mov
adc
dec
or
stc
dec
mov
ljmp
cs
xor
imul
and
adc
and
cmp
and
push
and
nop
icebp
lods
nop
lods
fcmove
lods
xor
fsub
loop
and
and
nop
sub
sbb
sub
dec
mov
mov
test
dec
and
outsl
adc
mov
lea
dec
or
outsl
mov
lea
dec
dec
push
stc
outsl
jne
mov
fisubl
nop
ljmp
fidivrs
and
adc
jge
dec
in
pop
add
sub
je
mov
fbld
jg
mov
push
mov
pop
inc
xchg
movl
sub
outsb
mov
es
mov
adc
arpl
fldl
xchg
and
adc
inc
movsb
std
jne
stos
scas
movsb
cltd
int3
xor
gs
ds
xchg
sub
ret
shll
mov
jmp
imul
cmpsb
inc
mov
adc
mov
mov
xchg
ret
pop
mov
xchg
push
push
inc
testl
js
mov
ja
mov
cltd
jne
insl
dec
mov
outsb
cmpsl
in
popa
cmp
fsubl
push
loope
cs
cli
mov
pop
les
movsl
rclb
repnz
mov
pop
jl
mov
dec
push
out
std
movsb
test
je
lcall
add
mov
out
mov
mov
jge
jmp
or
bound
xchg
inc
ret
ljmp
and
std
sbb
jecxz
es
pop
cld
scas
add
es
cmpsl
sbb
stos
cs
test
fidivl
cmp
or
fs
jbe
and
pop
testl
lods
mulb
test
or
addr16
ret
stos
cmc
rclb
repnz
mov
mov
in
fs
sub
gs
std
mov
jno
push
mov
mov
sbb
dec
and
dec
fildll
rcr
sub
addr16
fwait
inc
outsl
pop
sub
test
bound
hlt
push
mov
mov
sbb
lea
push
xchg
movsb
je
mov
arpl
push
push
shll
push
daa
aam
xchg
pop
inc
adc
stc
cmp
sahf
icebp
xchg
and
shlb
imul
jne
xchg
mov
loop
test
lea
or
lods
and
xor
je
lret
ret
mov
xchg
xor
fwait
stos
or
lds
loopne
dec
sub
icebp
scas
mov
scas
xor
in
movsl
clc
xchg
xor
pusha
cwtl
ljmp
lods
bnd
or
jg
insl
pop
push
push
add
sti
xchg
mov
mov
test
mov
add
repnz
insb
push
mov
xchg
inc
sub
mov
xchg
and
mov
jecxz
pop
mov
xchg
rclb
adc
add
push
and
shl
popa
push
dec
out
and
fimull
cltd
incb
mov
xchg
outsl
dec
cmpsb
and
sbb
aam
sbb
les
cmp
mov
leave
sbb
cld
or
sub
and
cli
inc
sbb
adc
test
dec
adc
xchg
or
stos
arpl
clc
aaa
push
fs
mulb
ret
xor
xchg
sub
popa
mov
push
xchg
mov
es
sbb
dec
mov
xchg
jno
jmp
push
ds
mov
int
sub
incl
pop
imul
mov
test
pop
xchg
das
movsl
jge
repnz
inc
mov
pop
cmp
addr16
inc
push
test
push
ficomps
mov
lea
je
sbb
xlat
jb
addb
jno
and
jle
insb
adcl
arpl
and
nop
jg
notb
mov
aas
ds
rorb
sti
mov
pop
out
scas
sbb
xor
call
sbb
inc
or
mov
mov
jle
and
or
sbb
mov
mov
mov
leave
call
cld
push
or
sub
out
lds
and
or
cmpsb
push
push
test
nop
cmp
shrb
inc
jg
pop
mov
je
inc
or
leave
mov
icebp
mov
dec
iret
inc
xorl
and
jecxz
inc
cmpsl
out
or
loop
sbb
cmp
push
aad
rclb
scas
in
sbb
cli
pop
and
xchg
cmc
pop
cmp
stos
dec
insl
stos
pop
cmp
jae
data16
push
stos
sbbl
sub
xor
xor
xchg
mov
cmp
pop
repz
cltd
loope,pn
rolb
push
adc
inc
add
bnd
add
mov
mov
out
pusha
adc
leave
xor
call
push
les
jp
int
xchg
dec
xor
inc
and
popf
jl
xchg
cmpl
and
mov
jnp
movsb
jg
push
or
jo
sbb
in
lds
fstl
test
xchg
inc
push
pop
push
out
das
popf
jne
add
xchg
repnz
cmp
std
insb
int3
ss
adc
mov
push
out
insb
lea
jo
mov
dec
stc
outsb
jmp
mov
mov
push
jae
scas
test
insl
shll
cmp
xchg
js
les
enter
adc
movmskps
sub
mov
sahf
inc
je
out
fs
cmc
adc
mov
xchg
scas
ret
insl
adc
enter
jno
lods
mov
or
fldl
jno
int
popa
sbb
push
nop
inc
insl
fsubp
xor
into
cmp
decb
xor
push
popl
jge
shl
insl
xchg
cmp
sbb
dec
jbe
pop
lods
cltd
in
movsl
pop
dec
jmp
pop
or
repz
mov
out
and
dec
neg
daa
sbb
and
imulb
daa
fnstenv
int3
int
popa
jbe
fists
in
push
nop
xor
into
in
sbb
or
leave
sti
fstl
lods
jecxz
push
and
lods
idivb
cs
pop
ret
pop
sahf
je
pop
sti
loopne
sub
lret
adcb
fildl
lea
pop
push
insb
loope
xor
lret
cmp
repz
pop
add
addr16
popf
icebp
scas
mov
xor
hlt
pop
sub
push
sub
shrl
cmc
aas
mov
jne
mov
loope
lret
es
in
dec
xchg
push
cs
jecxz
dec
repz
ds
mov
outsb
mov
cmc
fldt
nop
mov
in
or
sub
sbb
xchg
cmp
pop
aas
in
pop
push
test
out
mov
dec
cld
mov
insl
or
or
or
mov
pop
das
xchg
adc
stc
sarl
outsl
mov
test
scas
ja
add
stc
adcl
cmpsb
push
adcb
enter
lds
cmp
add
idivb
mov
mov
sub
fidivrl
xchg
lret
cs
or
mov
jecxz
jl
fcomps
jecxz
in
mov
cmpsl
movsb
dec
jno
mov
popa
and
jno
das
pop
pop
mov
xchg
fmull
xorl
add
fcmovu
es
mov
cmp
movsl
add
xchg
cmp
xchg
out
xor
and
mov
testl
jmp
sub
push
fwait
and
mov
jle
xchg
in
mov
or
leave
shrl
dec
mov
lea
ror
jge
out
scas
ja
xchg
shlb
and
loop
std
cmp
jmp
mov
mov
test
xlat
enter
leave
xor
cli
out
or
push
in
movsb
scas
divps
or
cmp
sub
pop
xchg
jb
dec
xchg
jge
sub
out
lret
loop
pop
insb
das
pusha
cli
mov
push
add
dec
orl
sti
mov
lar
add
insb
pop
inc
mov
xor
add
lock
adc
xchg
out
pmaddwd
or
xor
sbb
in
loope
mov
push
pop
sbb
aas
mov
or
mov
loope
push
sbb
mov
fnsave
out
cld
mov
call
jb
inc
mov
pusha
push
xor
cld
leave
or
cmpsb
and
in
stc
jnp
pop
jno
mul
adc
push
movsb
outsl
shl
push
movsb
xchg
std
pop
add
fld
sbb
inc
jb
fs
bswap
xor
jmp
fwait
sub
arpl
xchg
mov
mov
push
fs
mov
pop
mov
notl
inc
push
cmc
pusha
jl
dec
divl
xchg
test
sub
add
aam
movsl
clc
sub
xchg
push
orb
hlt
and
test
or
cli
add
les
lock
mov
jb
lock
cmc
jmp
dec
out
mov
adc
xor
hlt
ret
adc
idiv
add
push
or
dec
xor
jmp
clc
icebp
out
unpcklps
mov
lods
aam
imul
cwtl
xlat
sbb
pusha
xchg
das
push
cmovl
insb
mov
and
add
shlb
in
pop
sub
inc
push
cmp
ss
sub
sub
pop
or
mov
cmp
mov
add
mov
pop
scas
push
out
mov
xchg
lds
movsl
pop
loopne
adc
orl
adc
cs
adc
ror
xor
mov
dec
sbb
insl
ljmp
iret
psubsb
push
dec
and
mov
je
data16
mov
or
dec
xchg
fisttpll
fimull
ret
cltd
hlt
cmp
in
mov
push
mov
negb
cmpsb
dec
mov
xor
dec
xor
xchg
pusha
loop
add
push
dec
mov
sbb
jo
mov
sub
ret
lock
in
push
inc
jg
aad
mov
out
inc
adc
in
inc
fadds
xor
outsb
lret
clc
jae
or
orb
xchg
cmp
mov
pop
add
mov
add
sbb
adc
mov
es
test
pop
adc
loopne
adc
mov
daa
arpl
pop
data16
push
leave
jecxz
mov
xor
loop
xchg
roll
ret
aaa
adc
ret
les
jecxz
jle
cltd
jmp
xchg
fmuls
or
idivb
iret
inc
sarb
ret
add
imul
lds
lock
ret
cs
andb
stos
stos
lcall
pop
popa
adc
ljmp
mov
xor
jae
stc
sub
and
jge
subl
adc
and
or
addr16
ret
xor
sbb
pop
lea
push
xor
xchg
into
sahf
cmp
lods
jne
pushf
pop
pop
push
mov
flds
out
cmpsl
imul
inc
add
jmp
test
push
pop
mov
and
cmpsl
xorb
sarl
xorb
lds
mov
inc
scas
popf
dec
cmc
mov
int
stos
and
sub
jnp
into
mov
call
arpl
add
mov
ja
cs
xlat
inc
pop
mov
add
loopne
lret
outsl
stos
xor
xor
loopne
sti
jmp
or
push
mov
adc
mov
jo
dec
or
jg
inc
out
clc
or
lcall
pop
and
sub
aaa
mov
sbb
shl
loop
mov
and
jo
and
add
pop
add
xor
xchg
pusha
cltd
enter
call
ljmp
fnstenv
mov
mov
mov
and
sti
push
lds
cltd
inc
scas
xchg
mov
xchg
fists
jg
ds
jge
lds
and
lock
adc
or
js
push
inc
out
iret
mov
fstps
jle
ss
jl
sti
inc
pop
add
inc
aaa
fbstp
pop
bnd
mov
adcl
and
pusha
adc
and
fcoml
es
mov
sbb
inc
pop
jne
cld
jno
jg
out
pusha
pop
movsb
les
jbe
push
add
xchg
scas
pop
jmp
push
jle
pop
pushf
inc
xchg
push
adc
test
push
add
lods
orb
imul
xchg
movsb
cmp
sbb
jbe
pop
aad
bound
ljmp
add
pop
mov
cmc
test
inc
add
andl
push
es
andl
bound
mov
and
orb
add
inc
mov
testb
push
or
mov
inc
mov
cmpsb
mulb
idiv
into
mov
add
out
add
mov
adc
pop
cmp
push
xchg
mov
sub
adc
add
or
xchg
mov
mov
repnz
xchg
popa
cmc
fs
in
mov
mov
pop
movsb
lcall
test
and
js
aam
lock
jae
outsl
or
out
bound
data16
lods
pop
out
sub
pop
dec
push
call
push
push
test
jb
xchg
adc
cmp
bound
and
xchg
push
sahf
lahf
popa
cmpsl
pop
add
pop
and
inc
push
ljmp
popf
pop
test
cmp
sbb
cmpsb
or
and
mov
mov
stos
sbb
ret
lret
jle
mov
xor
hlt
add
cmp
dec
or
inc
movsb
xchg
pop
jg
pop
push
inc
stos
inc
mov
push
movsb
mov
out
adc
pop
sbb
push
mov
or
repnz
pop
jbe
dec
pop
xchg
jne
aam
adc
sbb
push
mov
movsl
mov
outsb
xor
mov
repnz
aas
inc
lcall
cmpsb
lods
jmp
pop
mov
jmp
rol
ret
inc
add
jge
repz
mov
stc
xor
mov
fsubs
and
shrl
jg
sub
inc
jo
loope
repz
icebp
add
loop
and
inc
mov
cs
xor
xor
movsl
shlb
xchg
fidivrs
inc
out
inc
inc
loopne
inc
dec
out
lods
add
test
push
divl
pop
xor
mov
loope
mov
mov
imul
in
sbb
push
dec
cld
inc
outsl
es
adc
xchg
or
push
mov
add
sbb
mov
fsubs
adc
sti
repnz
sahf
or
jae
cmp
int
push
jae
inc
adc
inc
ret
add
mov
dec
jae
aas
mov
jge
xor
push
dec
lock
dec
jno
cmp
rcrl
sbb
and
or
cmp
pop
mov
sub
xchg
xchg
frstor
inc
je
xor
clc
sub
dec
cs
test
mov
lods
add
shlb
inc
ss
pop
gs
sbb
add
fldt
jae
test
inc
js
xchg
mov
addr16
jb
xlat
dec
out
mov
les
rorl
stos
aam
addr16
loop
test
popa
clc
notb
outsb
movsb
dec
adc
pop
lods
pop
or
and
xor
mov
push
bound
aam
push
mov
inc
mov
mov
daa
mov
mov
repnz
icebp
addr16
xor
adc
mov
pop
repnz
xchg
adc
insl
sarl
or
xchg
pop
cltd
dec
xchg
xor
stos
cs
lods
sbb
test
testb
or
test
repnz
sti
scas
mov
iret
jmp
pop
mov
in
mov
mov
ds
scas
repnz
xchg
mov
sysenter
pusha
je
push
or
jg
and
popa
add
loop
mov
cwtl
push
ja
fisttpl
xchg
fiadds
mov
scas
je
jns
fnstsw
cltd
stos
stos
cmp
sub
daa
addr16
fisttps
mov
push
in
lcall
mov
inc
inc
mov
inc
push
dec
movsl
mov
out
jno
ss
xor
jns
imul
xchg
dec
xchg
out
pop
sub
shl
imul
int
xor
mov
mov
add
jno
mov
js
jg
push
pop
xor
out
and
push
insb
mov
and
shll
cli
sbb
xor
push
fiadds
loopne
sbb
negl
dec
jno
fwait
push
mul
pop
dec
push
aad
inc
das
and
add
cmpsb
repnz
out
push
sub
stc
xchg
je
mov
into
popa
mov
and
sbb
dec
jnp
movsl
cld
cmp
xlat
xorb
inc
xchg
out
jo
pushf
xor
fimuls
push
inc
std
pop
xor
mov
xchg
cs
inc
mov
pop
cmp
sbb
data16
not
in
sbb
sbb
dec
pop
out
stos
es
stos
xchg
add
sbb
mulb
jmp
push
pop
add
js
dec
and
push
or
fcmovnu
daa
xchg
adc
fcoms
or
daa
movsb
mov
mov
repnz
pop
jmp
ret
loopne
add
xchg
push
stos
xchg
xor
pop
shr
sbb
loopne
scas
xchg
adc
adc
fstpt
nop
fucompp
lcall
jae
add
mov
dec
cld
jns
mov
xor
sbb
shrb
call
test
ffree
mov
movsb
cs
test
mov
lock
rorb
lahf
adc
ljmp
sub
xor
sahf
xchg
jo
addl
adc
push
mov
dec
adc
inc
jmp
enter
dec
cmp
sahf
jns
jo
mov
mov
inc
ja
lret
insl
shlb
sbb
xlat
xor
sahf
jecxz
jbe
xchg
pop
xchg
sahf
lock
mov
loop
mov
pusha
sbb
in
and
and
mov
cmpsb
fimull
mov
sbb
sub
call
stos
xchg
dec
or
out
xor
mov
inc
xchg
ret
idivb
pop
inc
imul
popa
mov
mov
andnps
fcmovu
inc
add
inc
or
sub
add
adc
jb
xchg
adc
push
jmp
push
cmpsb
push
fsubr
push
ss
incl
js
and
adc
hlt
dec
or
aas
test
and
mov
ret
scas
lock
les
push
shl
loope
in
fstl
xor
cmp
fs
out
rol
ja
pop
bound
cs
adc
mov
mov
jmp
mov
clc
add
loop
inc
push
adc
jmp
xchg
xchg
dec
xchg
xchg
and
cmovg
scas
out
loopne
enter
setnp
clc
addr16
xor
pop
test
adc
pop
sbb
or
lea
loop
pushf
imull
leave
popa
sub
daa
nop
fwait
lods
sub
and
dec
jp
mov
sbb
lods
sub
xchg
addb
movsb
imull
pop
xor
mov
lret
pop
dec
lea
or
mov
mov
xor
adc
cmpsl
pop
in
cmp
push
loope
push
or
jnp
scas
aad
push
xchg
sub
in
jge
loop
test
xor
adc
jbe
or
lea
loop
mov
decb
fimuls
inc
push
mov
out
push
orl
test
clts
lret
outsb
cmp
jno
dec
and
xchg
adc
mov
and
popf
pop
test
insl
fcomps
movlps
cmp
sbb
int
fstl
xchg
xor
and
xor
and
in
pop
leave
cmp
mov
popa
ljmp
sub
insl
scas
mov
mov
fs
scas
lcall
push
sub
adcb
aam
lods
loop
shl
and
pop
cli
add
es
and
addr16
mov
int
push
xor
pop
repz
sbb
loop
fs
push
aam
sub
je
jae
sub
int
push
je
adc
and
fidivrs
push
jbe
test
xor
and
stos
or
and
mov
inc
adc
test
cltd
aad
loop
bound
inc
aas
and
mov
jle
test
mov
xchg
inc
popf
popa
mov
and
inc
mov
mov
negb
add
rclb
ret
inc
inc
xor
lcall
xor
pop
out
idivb
adcb
and
dec
jmp
out
cltd
adc
add
jo
int
jmp
loopne
push
cs
mov
insb
aam
int3
scas
icebp
pop
cmp
jmp
test
lods
lahf
aas
testb
push
pop
leave
adc
inc
lea
out
or
shrl
push
fsubrl
or
push
sub
xor
lea
pop
inc
or
ss
push
inc
lea
and
and
push
clc
dec
sub
gs
adc
mov
decl
mov
add
push
mov
xor
adc
test
loope
cmp
loop
and
cmp
add
in
aas
push
mov
in
adc
outsl
ja
xor
pop
not
scas
pop
outsl
aaa
aad
icebp
scas
push
iret
shl
pop
jge
push
daa
sbb
cmp
loopne
xchg
ror
dec
or
ret
pop
or
and
lock
mov
loop
xchg
xor
push
pop
in
rol
or
inc
fisttpl
in
pop
out
xchg
sub
mov
loope
inc
out
xchg
icebp
mov
sbb
sub
decl
mov
jl
clc
mov
or
mov
outsl
in
lods
mov
or
dec
jne
imull
loop
imul
cmp
cs
movsl
inc
das
dec
cmc
adc
loope
cmp
inc
xchg
xchg
add
dec
mov
movsl
jno
dec
std
xchg
pop
insb
or
out
sbb
mov
mov
sbb
cmc
clc
mov
or
cmpl
jecxz
jge
adc
pop
push
cmp
and
push
rolb
mov
cmp
ljmp
and
cltd
pop
push
or
sub
stos
jnp
out
push
adc
mov
lea
mov
and
fisubrl
dec
push
dec
inc
in
cs
mov
adc
loopne
xchg
inc
icebp
aad
mov
mov
mov
ret
mov
sbb
insl
repnz
xchg
add
pop
cmp
int
mov
and
adc
adc
arpl
dec
hlt
adc
mov
jne
dec
dec
mov
mov
or
cmpl
xchg
cmp
scas
inc
dec
shrb
mov
pop
sbb
mov
inc
loopne
insl
push
push
cmp
popa
test
int
and
jg
xchg
xchg
out
mov
xchg
call
in
or
dec
jg
mov
addb
orl
in
push
int3
aas
movsb
sbb
mov
jae
inc
or
lret
outsb
adc
xchg
add
pop
lods
into
add
loopne
mov
seta
and
sbb
jmp
push
inc
icebp
into
and
dec
repz
jne
shlb
sub
jb
jmp
leave
and
pushf
and
stos
jmp
test
stos
test
mov
mov
adc
pop
in
mov
xor
adc
in
sub
pop
int
addr16
prefetch
mov
lods
rcl
adc
mov
addl
mov
mov
push
adc
movsl
push
sub
shrb
adc
enter
or
movsb
pop
movsb
or
hlt
lds
das
repz
push
xchg
es
and
mov
mov
test
jo
mov
inc
out
and
mov
mov
movb
sub
add
loopne
imul
xchg
mov
sbb
enter
mov
xchg
iret
es
pop
pop
mov
cs
and
mov
and
adc
fbld
movsb
daa
loopne
cwtl
mov
mov
adc
xor
movsb
mov
mov
and
daa
cmp
mov
lahf
testb
add
je
das
jle
in
xchg
subb
push
mov
int
mov
adc
dec
test
fdivrs
push
scas
je
xor
sub
dec
adc
sub
ja
adc
in
movsb
inc
lret
adc
mov
in
jns
popf
insb
jb
out
and
frstor
pop
mov
outsb
fimuls
popf
mov
and
outsb
jl
lret
movsl
fldcw
xchg
loop
push
push
test
dec
xorb
ljmp
cmp
rclb
xchg
xchg
icebp
notl
sbb
inc
ss
ja
adc
ljmp
adc
or
in
add
mov
cmpsb
cld
movsb
xlat
dec
cld
mov
fistpll
subl
cmpsb
scas
mov
movsl
pop
mov
mov
xchg
daa
std
jbe
cmp
popa
jb
fwait
test
fnsave
pop
pop
inc
jae
pop
bound
js
roll
cmc
cmp
xchg
xchg
and
clc
jecxz
xchg
inc
sub
jae
aad
mov
addr16
cmc
add
cwtl
mov
clc
out
xor
stos
jl
int3
idivl
xchg
shlb
mov
pop
pusha
out
jp
push
dec
leave
mov
scas
imul
dec
mov
out
adc
xchg
in
popa
faddl
sub
js
lea
pop
sub
sbb
ret
loopne
jmp
rol
arpl
mov
mov
pusha
out
push
in
jl
add
das
mov
dec
and
xor
or
xchg
sbb
add
lock
push
test
hlt
or
push
push
mov
je
jae
ljmp
sbb
mov
ss
aaa
jae
mov
and
daa
fwait
enter
lea
repz
xchg
loop
mull
lcall
push
std
outsb
aam
int
and
lds
into
popa
mov
or
out
aad
outsl
lock
mov
inc
jne
cmp
xlat
imul
jle
imul
xchg
sub
jne
fwait
or
int3
shl
mov
pop
mov
push
adc
add
loopne
out
pop
mov
and
movsb
jge
outsl
ret
xlat
dec
test
sub
loopne
inc
cld
cmp
sar
pusha
jno
es
pop
in
lea
push
test
loopne
mov
stc
mov
test
mov
add
mov
icebp
shll
and
fidivl
jg
movsb
lds
cmpsl
rorb
ror
mov
pop
insl
cmovge
push
movl
rcr
popa
enter
sbb
push
nop
jmp
pop
sbbb
xor
int3
mov
outsb
jbe
xchg
jno
xchg
rorb
sub
dec
mov
hlt
push
movsl
insl
enter
push
loop
ret
push
imul
repz
sub
cmpsb
lods
pop
mov
repz
mov
or
loope
das
bound
ret
cwtl
cli
ljmp
dec
shll
inc
int3
in
xor
shll
adc
mov
and
movsl
or
je
sub
js
jns
xchg
sbb
nop
loopne
lret
lret
add
inc
enter
jle
pop
cmpsl
xchg
pop
lods
loop
lea
sub
in
ret
xchg
in
shll
shlb
test
adc
inc
sbb
xor
add
and
xchg
test
iret
subl
hlt
inc
or
pop
add
xlat
hlt
icebp
sub
ret
xchg
cmp
in
xchg
pop
shl
stos
pop
bound
adc
leave
add
pop
push
scas
mov
adcb
cmp
shlb
xchg
popa
ljmp
aam
sub
or
mov
inc
inc
jge
or
push
es
aam
sbb
mov
jmp
xchg
dec
jno
jp
sub
repnz
mov
insl
pop
ljmp
in
xchg
test
push
std
push
pop
jmp
push
push
dec
arpl
cwtl
lea
into
aas
out
add
sbb
hlt
push
ljmp
xchg
inc
lret
adc
orb
add
xor
outsb
outsl
test
push
cmp
das
loop
aas
push
ds
sbb
loopne
stos
sub
pusha
fdivrs
push
ret
xchg
movsb
push
jp
adcb
mov
nop
pop
iret
jmp
inc
dec
dec
xchg
jecxz
repz
movsl
fidivs
test
mov
mov
push
shrl
es
test
mov
aaa
frstor
insl
xchg
inc
popf
test
lds
pop
in
and
faddl
push
and
and
jle
xchg
and
inc
ja
imul
pop
dec
sbb
stos
lahf
push
jecxz
xchg
and
dec
fs
xor
les
jne
inc
pop
and
ret
lahf
idivb
xor
bound
xchg
push
bound
mov
pop
xor
push
mov
inc
or
sub
rorb
lret
jb
push
test
inc
enter
aam
or
pop
js
rolb
out
mov
les
mov
xor
add
mov
cld
sahf
add
insb
jnp
arpl
xor
stos
cmc
popa
xor
push
mov
jmp
fidivl
adc
in
leave
dec
and
inc
mov
dec
and
mov
rorb
data16
mov
fistl
fsubrl
xchg
jbe
das
push
add
aad
test
lods
xchg
add
out
xor
out
lahf
or
adc
int
fnstsw
fs
ds
call
iret
fnstsw
outsb
sub
sub
test
inc
cmpsb
popf
sbb
or
jmp
mov
incb
dec
xlat
imul
das
loopne
xor
mov
lock
out
hlt
jle
popa
pop
mov
mov
xor
out
shll
scas
es
adc
jno
movsl
jb
orl
cmp
cmpsb
adc
pop
cmp
stos
test
aad
and
mov
rcr
mov
popf
push
in
xor
xor
fs
push
adc
divb
stos
lods
xchg
das
call
sahf
leave
and
por
adc
inc
popa
cmpsb
mov
add
repnz
dec
popa
cmp
xchg
call
jne
jne
pop
inc
iret
xor
jmp
dec
rorl
movsl
sub
jp
jno
ja
sub
jge
jg
or
test
cmp
dec
dec
sbb
or
das
dec
jne
lods
shll
or
insl
mov
dec
stc
xor
movsb
mov
inc
inc
aas
aaa
push
mov
mov
push
and
jbe
inc
imul
cmpsb
jg
dec
outsl
fucomip
add
lea
std
scas
or
jnp
orl
xchg
das
fisubl
pusha
dec
adc
jns
adc
mov
mov
xor
dec
xor
dec
sbb
or
add
jno
jae
and
daa
out
xor
xchg
ret
fidivl
int3
mov
loop
mov
mov
jno
dec
loop
movsl
and
cld
pop
xor
shll
cld
sarl
gs
int3
stc
mov
jbe
inc
jl
xchg
pop
outsl
pop
adc
dec
push
ret
sub
stos
subw
pusha
add
sbb
popa
das
jecxz
mov
fdivrs
sarb
test
xor
or
lea
lods
data16
cmpsl
xchg
inc
push
repz
mov
dec
jns
lock
and
divb
inc
je
and
dec
mov
into
shl
inc
scas
adc
ljmp
in
es
xor
dec
adc
shlb
arpl
xorl
adcb
dec
lret
mov
dec
cmp
push
sar
dec
das
repz
xor
in
loop
nop
movsbl
add
lea
or
out
push
mov
push
cmp
or
fildl
call
loopne
rcr
mov
dec
jg
jecxz
cltd
xchg
add
add
imull
xor
and
test
inc
inc
sbb
imul
push
mov
or
mov
and
sbb
in
lock
mov
cmp
shll
sbb
xlat
dec
adcl
out
push
adc
adc
push
std
fisttps
and
nop
scas
and
mov
cld
jg
divl
xor
mov
push
add
dec
xrelease
ret
out
aas
adc
fdiv
or
xor
pop
sub
mov
pop
cmpsb
sbb
cld
push
jle
andb
xchg
popa
idiv
scas
add
arpl
cmp
xor
xchg
int
fadds
fisubrs
addr16
cwtl
sub
test
sbbb
pop
inc
mov
cmp
pop
test
mov
xlat
mov
test
mov
inc
sbb
push
aas
push
xor
mov
jmp
pusha
or
ficoml
inc
lcall
xchg
xor
or
popa
dec
cli
outsl
cmp
das
orl
shll
xchg
push
sbb
imul
sub
clc
nop
xchg
test
test
rcrb
sti
inc
mov
les
lods
dec
inc
xor
shll
out
add
sub
jmp
fisttpll
push
int
jg
out
cwtl
out
mov
or
cmp
cmovge
dec
sbb
ljmp
fists
std
jl
paddsw
rclb
test
clc
sub
rcrb
xchg
mov
ljmp
xor
mov
cmp
jnp
inc
jns
adcb
cmpsb
or
push
sub
sbb
push
aam
jno
jmp
pop
movq
xor
ss
pop
push
orb
nop
inc
stc
jae
mov
std
sub
and
mov
adc
mov
xor
push
adc
lret
stos
lahf
sar
ljmp
mov
inc
push
sbb
xor
pop
sub
adc
xchg
add
xor
cmpsb
or
mov
jg
xor
rcrb
stos
add
push
xor
mov
inc
mov
gs
inc
jb
lods
stc
inc
fistl
sub
cmc
out
jns
out
dec
cmc
cli
insl
addr16
in
sti
xchg
push
cmp
inc
inc
sub
lret
dec
pop
bound
dec
pushf
xor
sti
pop
out
inc
lock
jo
icebp
mov
push
pop
rclb
ja
loope
cs
iret
xor
and
mov
insl
lret
adc
pop
test
cmp
cmpsl
adc
test
mov
cmc
or
mov
xor
mov
call
jmp
popa
stos
adc
mov
pop
add
lods
xchg
add
xchg
lods
or
inc
btrl
out
adc
arpl
movsb
push
rclb
shrb
add
jae
out
pop
and
cld
jne
insl
dec
sahf
movsb
out
and
add
cmpsb
popa
js
loop
push
pusha
xchg
mov
les
or
clc
cmpsb
je
cmpb
xchg
out
push
mov
adc
cld
hlt
pop
inc
xchg
or
rcl
add
sub
jmp
cmp
pop
sbb
jmp
mov
mov
mov
adc
sbb
ss
or
cwtl
mov
movsl
pop
xor
mov
jno
adc
addr16
adc
jne
lahf
sbb
cmp
idivl
add
inc
and
jmp
addr16
and
add
mov
cmp
aam
insl
adc
js
jmp
xor
movsb
cs
cmp
loope
das
addr16
inc
sub
nop
pusha
mov
cld
aam
push
int3
ds
jmp
adc
and
lock
xlat
rol
sahf
sub
sbb
and
ss
jno
or
fldenv
adc
jb
loop
es
ja
daa
pop
adc
adc
sbb
pop
push
or
sub
fimuls
cmc
andl
mov
mov
inc
cld
pop
aas
sarl
lahf
movsb
bound
leave
lcall
cmpsl
xchg
cmp
xor
mov
outsb
mov
sbb
in
lods
adc
cltd
rcrl
sbbl
xlat
out
xchg
bound
xchg
jl
mov
xor
pop
inc
nop
jns
ds
bound
popa
leave
gs
testb
imul
xorl
sbb
dec
dec
lret
popa
and
cld
add
jmp
xor
dec
mov
call
in
sbb
decb
aas
mov
clc
cld
add
adc
jae
jno
cmpsb
push
or
xlat
out
or
fstl
stos
xorl
push
jp
inc
imul
outsb
dec
xchg
add
out
inc
stos
cmc
test
loope
or
rcrl
call
in
aaa
pop
mov
idiv
cli
push
jp
lods
xchg
mov
int3
and
mov
lret
mov
inc
mov
ljmp
clc
mov
mov
rcrb
sub
xchg
das
mov
push
imul
adc
sub
insb
cmp
push
pop
jmp
repnz
and
int3
inc
pop
pop
ret
shr
ljmp
int3
sub
les
dec
pop
in
cmp
arpl
hlt
jmp
mov
rolb
push
add
mov
mov
sub
daa
jge
mov
ficoml
or
mov
std
adc
mov
ja
adcl
and
mov
popa
out
outsl
mov
movsb
ror
cmp
jecxz
pop
mov
add
out
in
ret
mov
data16
xchg
in
jmp
adc
jmp
dec
or
movlps
jmp
push
and
scas
or
jmp
pop
es
pop
pop
dec
test
mov
and
es
scas
jecxz
hlt
das
sub
push
mov
adc
mov
pop
repz
adc
das
and
pop
inc
xchg
test
in
je
out
add
mov
sti
daa
xlat
loopne
clc
lods
ljmp
cmpsl
cli
es
mov
das
add
jg
cmpsl
in
je
and
inc
add
mov
in
add
ss
dec
xor
add
divb
inc
xchg
fisubrl
scas
jb
xor
jno
inc
outsl
clc
mov
mov
icebp
mov
cmp
cmp
andl
les
push
addl
call
mov
in
push
nop
call
sub
push
lods
mov
adc
mov
out
push
xchg
stc
les
rcrl
sbbl
inc
mov
sbb
and
mov
adc
adcl
add
xchg
testl
xor
push
and
sub
dec
lods
mov
data16
and
pusha
sub
les
ret
mov
mov
and
sbb
aas
or
mov
sbb
test
aaa
inc
cwtl
mov
and
arpl
outsl
adcb
ret
cmp
mov
adc
push
push
mov
cwtl
imul
fisubrs
in
lock
xor
loope
in
push
pop
lret
stos
or
dec
je
lcall
or
mov
aam
out
fstl
or
lods
sbb
push
out
or
test
mov
mov
and
dec
xchg
addr16
enter
fidivs
es
xchg
xchg
sub
adc
sbb
out
mov
pop
hlt
shlb
scas
into
xchg
jae
faddl
or
mov
inc
stos
xrelease
mov
and
inc
xchg
insb
dec
leave
lahf
movsb
jl
cs
imul
xchg
mov
and
inc
adc
movsb
dec
cld
pop
adc
xor
push
leave
xchg
dec
fmuls
je
jge
pop
dec
or
dec
mov
push
aas
mov
cmp
adc
test
jp
gs
push
gs
push
rcrb
decl
xor
mov
pop
mov
cld
sub
dec
cmp
add
jae
loope
mov
int3
mov
shlb
outsl
out
scas
dec
mov
dec
int3
xchg
dec
stos
bound
movsb
gs
jl
shll
jp
xchg
add
leave
add
andl
or
cli
les
ret
imul
jne
aad
scas
pop
lcall
inc
dec
mov
adc
mov
mov
in
fwait
or
xor
and
loope
sub
mov
les
inc
stos
in
mov
mov
add
fs
inc
lock
into
push
ror
mov
icebp
xor
cmp
fisubrl
xlat
sub
cmc
sbb
outsl
icebp
addr16
into
adc
mov
mov
mov
test
push
jp
fisubl
xor
adc
sub
inc
nop
rcl
push
ja
test
out
jo
sbb
cmp
push
jo
sub
jno
movsb
jae
les
jne
leave
cmpsl
jno
lret
lahf
push
adc
push
cmpsl
iret
cmp
sahf
mov
sarl
bound
stc
jle
push
and
mov
cmp
fwait
ja
sub
push
shrl
es
loope
or
cmp
mov
cmpxchg
xchg
iret
and
fnstsw
cmpb
sub
lods
popa
outsb
cltd
sbb
inc
cmp
cli
pop
or
int3
sub
mull
inc
or
mov
mov
xchg
loop
jns
dec
ja
mov
nop
test
xchg
mov
dec
fnsave
rcrl
mov
mov
lds
ret
xchg
das
adcl
mov
out
out
xchg
mov
in
jmp
and
ds
lock
or
inc
je,pn
test
cli
cltd
lods
lods
cmp
sahf
in
mov
dec
xor
mov
lods
mov
jle
and
sub
dec
popf
gs
cmp
test
push
mov
jb
insl
lcall
xor
fidivrs
icebp
cs
add
cld
pop
xchg
test
push
and
sub
and
clc
dec
xor
movsb
push
insl
xchg
clc
lcall
movsb
push
insl
cmp
inc
xor
xchg
insl
mov
lcall
ds
jmp
inc
add
sbb
mov
call
push
adc
add
idivb
mov
scas
les
or
xchg
sub
push
xor
xorb
jge
outsb
jp
and
xchg
movsl
lods
sbb
fildl
xor
cmp
lret
das
enter
sub
rclb
ja
les
mov
lock
scas
cmp
jae
jo
out
mov
ret
test
iret
fcoms
and
out
adc
and
in
mov
and
das
or
rol
clc
mov
xorl
addb
pop
lahf
pop
push
repnz
mov
iret
andl
cmpsl
xlat
cmpsb
popa
movsl
mov
jb
adc
orb
testl
sub
or
daa
imul
or
cmpsl
jecxz
and
dec
movsl
mov
cmpsb
scas
sbb
add
int
cmp
dec
sbb
xchg
fstps
std
popa
test
sbb
jmp
xor
loope
decb
mov
adc
aam
fdivrp
movb
shll
dec
shrl
sbbl
inc
sub
xor
or
pop
jns
in
imul
cmpsb
push
inc
rcrl
sub
jno
out
scas
mov
or
push
adc
popa
imul
das
outsl
bound
stos
loope
insl
push
push
xchg
xchg
dec
js
aas
push
xchg
sub
xchg
out
fs
dec
aad
pop
pop
out
sbb
xchg
adc
popf
inc
adc
dec
ret
cmp
push
rcll
adcl
jnp
stc
mov
roll
das
jnp
arpl
add
loope
add
cmpsb
xchg
fbld
jmp
pop
dec
mov
popa
mov
rcr
mov
test
dec
out
jmp
or
and
push
inc
out
pop
mov
sbb
in
adc
pop
sbb
decb
lods
mov
pop
pop
cld
jns
mov
test
and
icebp
stos
movntps
les
imul
getsec
mov
add
fnsave
push
sub
out
pop
inc
add
adc
ja
add
mov
add
pop
mov
icebp
or
mov
mov
mov
lds
pop
xchg
pop
add
ret
orb
adc
inc
leave
lahf
out
adcb
inc
add
gs
fcoml
scas
xor
enter
lahf
cmc
push
add
imul
bound
pop
or
mov
pop
and
vcvtdq2ps
or
push
aaa
lret
mov
dec
or
mov
adc
pushf
fucom
mov
add
iret
fcomp
dec
or
adc
sub
pop
jno
es
or
xlat
mov
push
xor
push
pop
xchg
inc
adc
dec
xor
out
xchg
outsl
mov
sub
dec
sbbl
loope,pn
pop
out
push
jno
xor
outsb
scas
dec
inc
push
cmpsb
movsl
ljmp
inc
addr16
xor
lods
in
nop
setg
pop
stc
pop
nop
dec
add
insl
mov
add
mov
fs
lahf
stc
out
leave
jb
test
ja
fmull
adc
jns
mov
cmp
dec
out
addr16
inc
lcall
or
mov
sbb
adc
mov
das
aaa
int
ss
and
inc
repz
mov
mov
jmp
add
lret
add
mov
xor
in
pop
mov
jp
fisubl
mov
or
jae
or
mov
scas
outsl
or
push
addw
into
inc
pushf
xlat
ja
imul
je
loopne
inc
jge
aam
vmread
test
movsl
or
js
scas
in
mov
das
ljmp
data16
inc
adc
das
lods
test
sub
mov
add
insb
inc
xor
or
popa
div
mov
inc
xor
xchg
hlt
and
inc
subl
repnz
sbb
test
or
ficoml
inc
lods
sbb
cmp
andb
mov
adc
loop
jmp
or
adc
sbb
call
repz
in
fisubrl
insb
lahf
push
jmp
mul
outsl
cmp
imul
lods
add
mov
stos
and
loop
pop
testb
or
decb
mov
push
cmp
ret
jecxz
mov
inc
imul
das
repnz
inc
inc
popf
in
ret
dec
into
or
xchg
mov
add
cmp
add
in
and
popf
mov
inc
mov
fiadds
mov
push
test
imul
rolb
pop
stos
adc
loop
jnp
and
add
mov
mov
faddl
cmp
push
jl
jnp
cmp
rclb
push
mov
cld
pop
test
and
xor
pop
and
aam
out
push
mov
ljmp
push
push
jo
add
mov
jno
mov
xor
pushf
or
notb
push
mov
addb
rcl
jne
sub
outsb
sbb
rcl
mov
jge
hlt
or
movsl
or
pop
push
xchg
jp
sbb
cli
dec
inc
cmpb
ja
in
sbb
cmpsl
sti
lods
and
adc
inc
pop
scas
lods
test
mov
mov
cmpsb
pushl
mov
add
call
outsb
push
daa
cmp
mov
xchg
adc
fidivrl
or
clc
loope
push
mov
icebp
jle
cld
std
lahf
out
push
lret
jne
rolb
push
jae
and
inc
or
insb
iret
ja
fnstenv
pusha
jnp
push
mov
test
and
mov
cmpsl
sarl
pop
outsb
test
pop
mov
sub
sbb
inc
in
add
jmp
and
or
insl
stos
outsl
xchg
arpl
xchg
inc
inc
xchg
testb
xor
cltd
xlat
push
jo
mov
jne
cmp
and
add
mov
mov
cmp
lds
dec
xlat
adc
insb
insb
mov
cmpsl
scas
iret
cmp
rol
clc
and
stos
push
push
or
mov
xor
pop
inc
outsl
repz
mov
dec
mov
jno
or
lods
iret
push
cmp
fwait
mov
rol
test
xchg
jo
mov
inc
push
stos
push
inc
add
es
bound
movlps
pop
or
loop
dec
shlb
xchg
mov
mov
movsl
or
sbb
mov
jmp
nop
or
fdivrs
adc
into
lods
mov
cltd
xchg
pusha
out
icebp
out
leave
mov
mov
in
xchg
lods
in
ret
inc
dec
andb
lods
sbb
mov
in
adc
push
or
loope
icebp
xorl
lock
or
ret
fdivl
sti
mov
pop
popa
std
add
scas
inc
cmp
mov
pop
add
mov
sub
push
jmp
test
adc
jmp
dec
lods
jmp
mov
out
insl
andl
jbe
hlt
adc
pop
jecxz
dec
push
sbb
add
xor
pop
mov
add
and
imul
inc
stc
jne
das
leave
cld
sbb
test
jne
pop
mov
repnz
or
fiaddl
test
fsubp
loop
add
fisttpl
jmp
les
inc
cmpsl
mov
cmp
mov
ljmp
dec
sbb
sar
mov
pop
mov
out
repz
in
repnz
loopne
xchg
aas
jb
cmpsb
push
mov
push
sbb
mov
push
adc
mov
sub
xchg
mov
adc
shlb
or
leave
xor
imul
lods
cli
cmovne
cmp
inc
pop
xchg
iret
lds
mov
je
or
shll
adc
sub
mov
sub
out
or
test
int
adc
movsb
out
or
sub
dec
gs
lock
push
mov
enter
and
imul
in
repz
sub
push
in
xor
mov
mov
push
loope
push
ds
jp
cwtl
jecxz
adc
mov
fsub
movb
mov
add
js
stc
jg
out
jecxz
outsl
loope
imul
call
in
les
rolb
subl
in
cmp
adc
sbb
int
int3
roll
inc
and
cmp
add
lods
sbb
ret
fbstp
xchg
mov
test
inc
fs
inc
push
in
mov
cmp
jae
dec
ja
pusha
ja
xchg
outsb
jbe
xchg
pop
or
cmpsl
dec
dec
shlb
adc
push
mov
adc
inc
and
in
pop
subl
mov
or
jae
or
xor
movsb
leave
inc
push
xchg
sbb
jmp
add
mull
and
add
insb
int3
movsb
in
adc
push
cmp
rcr
adc
outsb
jno
out
das
addr16
insl
xchg
sti
dec
sbb
aad
mov
imul
and
sahf
outsb
mov
testl
popf
imul
gs
int
out
test
testl
in
add
jno
inc
pop
push
xor
dec
dec
out
dec
lods
jns
xchg
pop
jns
int3
jmp
sub
jno
leave
cli
inc
jp
push
jb
mov
add
std
xchg
pop
out
cmp
mov
stc
add
stos
popa
sub
sbb
stc
stc
int3
pop
xor
sbb
test
cli
inc
outsl
pushf
adc
and
in
nop
add
js
pop
adc
jb
pop
push
je
lret
fldt
and
psadbw
sub
cs
in
mov
lods
cmpsb
ss
fldcw
jl
add
sahf
or
mov
and
jg
xor
stc
repz
push
sti
andb
rorb
fsubr
test
iret
clc
pop
dec
paddsw
je
sbb
mov
arpl
add
mov
orb
xchg
or
inc
cmc
sub
adc
mov
lret
ljmp
incl
lret
int3
call
sbb
inc
xor
iret
imul
and
pushf
add
jne
push
ret
stos
lahf
lret
pop
xchg
int
sbb
or
pop
repnz
hlt
jge
cmp
scas
push
push
push
ja
mov
sub
cmpsb
push
std
dec
push
mov
xchg
in
cmp
cs
movsl
mov
inc
and
scas
adc
cmpsl
mov
jne
pop
mov
pop
cmp
mov
cmp
add
cmp
inc
cmp
dec
rcll
add
dec
test
xor
lods
mov
and
mov
movnti
fnclex
notl
pop
xor
pop
shrb
inc
cmp
sahf
push
insl
mov
jp
lea
mov
cltd
or
fdivs
jge
jmp
jo
jno
mov
ret
and
test
mov
in
lods
imul
mov
data16
add
inc
inc
adc
adc
sbb
pop
outsl
push
xchg
repnz
dec
lods
sbb
mov
inc
pop
lods
inc
sti
pop
xor
jge
or
mov
mov
add
lds
cli
into
xor
ljmp
fwait
stc
xor
and
jne
jae
rcrb
fnstenv
sarl
sbb
xchg
mov
dec
adc
add
ss
xlat
add
loopne
add
aam
data16
push
xchg
lea
add
in
popa
iret
mov
or
pop
mov
jp
out
adc
lea
int3
mov
stos
out
and
mov
inc
and
rcrl
sarl
sbb
and
out
pop
jno
in
jne
int
and
movb
inc
inc
int3
test
inc
and
insb
inc
repnz
push
pop
or
jns
scas
cmp
shl
lea
add
adc
cmpsl
repz
xchg
pop
test
add
and
pop
and
shl
adc
mov
das
insl
lret
insb
ljmp
cmp
je
data16
sbb
pop
cmp
inc
xor
aam
clc
mov
mov
movsb
jo
fadds
add
jg
adc
out
out
xchg
test
cltd
xor
repnz
cltd
push
rclb
aam
add
adc
stos
scas
imul
ss
movsb
xor
arpl
rolb
sub
inc
mov
daa
xchg
out
jno
shl
lret
insl
adc
mov
rcrb
cmc
call
cli
sub
xchg
pop
sub
mov
mov
into
dec
out
add
jge
inc
mov
cli
push
test
jns
xor
testb
lret
dec
cwtl
divps
push
scas
inc
and
cmovne
mov
xchg
cld
cmpsl
fs
outsb
mov
stos
stos
bound
dec
add
test
or
mov
js
push
andb
addr16
sub
decb
and
subl
inc
rorb
mov
shrl
hlt
mov
dec
shr
bound
xchg
lods
mov
jb
leave
subl
sub
push
cmc
xchg
test
xchg
imul
mov
test
test
cwtl
push
scas
xchg
popa
xchg
loopne
cmc
mov
lea
aas
lods
das
ret
leave
jae
and
push
xorl
push
andl
in
das
jbe
jae
les
push
sahf
and
in
pop
adc
idivl
push
xchg
dec
roll
negb
cwtl
sub
aas
imul
mov
fildl
fsubrl
addr16
pop
xchg
mov
sbb
lret
fisttps
xor
test
inc
daa
mov
sbb
mov
mov
xchg
mov
mov
adc
mov
iret
ds
pop
sub
adc
cmc
aam
out
sub
ja
stc
jmp
mov
repz
add
lock
jnp
mov
cmp
mov
adc
xor
inc
or
movsb
add
insl
inc
xor
dec
fcomip
fs
hlt
dec
add
cli
clc
jle
add
adc
fstp
stos
inc
mov
jne
cltd
into
push
imul
and
mov
add
arpl
add
xchg
cmp
aas
sub
or
orb
test
nop
adc
cli
sub
and
ret
insl
sub
rcr
mov
je
das
shr
mov
xor
xchg
cmpsb
or
out
and
push
cmp
lret
gs
xchg
mov
xchg
cs
pusha
jmp
call
leave
push
popa
or
aad
movsl
in
and
dec
or
add
popa
and
mov
in
jbe
out
ljmp
leave
push
in
xor
pusha
roll
fdivs
ds
mov
ja
mov
cmp
pusha
inc
mov
jo,pt
test
int
jl
int
cmp
cs
popa
xor
movsl
fimull
aam
popf
popf
pop
adc
int3
jae,pt
lret
addl
adc
pop
imull
pop
ficoms
out
sti
in
push
jb
test
ja
ret
push
push
call
mov
arpl
outsb
test
pop
sbb
jae
andb
mov
cmpsl
mov
shlb
push
and
jge
sbb
ljmp
push
push
stos
inc
pop
iret
outsb
xchg
or
stos
and
add
cmp
jae
sub
adc
scas
out
leave
push
xchg
cmp
ret
jmp
movsl
xor
and
inc
fldcw
jle
cmpsb
xlat
adc
mov
jmp
ja
dec
push
out
inc
stos
arpl
fsubr
push
in
mov
inc
mov
xor
add
movsl
mov
sub
xchg
mov
das
outsb
and
in
cwtl
and
jp
aaa
mov
lds
mov
dec
xchg
insl
ret
shrb
out
lock
xorb
test
in
fmull
dec
xchg
inc
loopne
in
mov
mov
inc
dec
and
sbb
inc
insl
or
push
je
fnstsw
inc
mov
sbbl
push
adc
cli
aaa
call
repnz
mov
xchg
cmp
cli
inc
fs
pop
and
in
pop
fistps
stos
ret
sti
cmpsl
add
daa
sbb
push
mov
cmp
push
push
pop
out
adc
loop
add
pop
mov
mov
rcrl
pushf
subb
push
stos
push
mov
gs
daa
das
mov
mov
push
hlt
in
mov
in
mov
inc
addl
sub
cmp
je
cmc
inc
pop
adc
xchg
pop
ss
cmp
xorl
mov
movsb
inc
mov
rcrl
jg
pop
pop
loope
arpl
ja
test
popa
adc
sbb
lea
xor
cld
leave
mov
rorb
int3
lods
and
sub
push
xchg
pop
or
cld
sbb
jns
and
cmp
sbb
cld
lds
xchg
lret
out
xor
adc
xchg
fwait
scas
ret
push
leave
nop
adc
test
notl
and
pop
lods
jmp
adc
jbe
mov
in
pop
mov
or
icebp
shlb
js
out
addl
cmp
test
movsb
sbb
or
xor
out
pop
xchg
sbb
stos
dec
push
push
pop
pop
sub
iret
dec
cld
adc
mov
sub
pop
and
enter
add
xor
pop
mov
les
dec
sub
lahf
adc
push
sbb
inc
and
scas
cmc
aaa
or
sbb
movsb
xchg
mov
scas
cmc
clc
and
sti
jl
into
cwtl
lods
das
mov
mov
in
pusha
mov
inc
lcall
jbe
xchg
add
stos
outsb
pusha
sarb
iret
out
mov
es
sbb
add
and
popaw
mov
jnp
xchg
pusha
rcl
movsl
and
shlb
dec
popf
shlb
je
test
mov
std
inc
xchg
mov
xor
push
insb
and
inc
mov
call
in
inc
cmp
fsubr
shlb
fcompl
shl
add
adc
pop
and
outsb
data16
cmc
dec
mov
js
das
gs
cmp
outsb
dec
loope
jae
jb
scas
ret
insb
pop
dec
cmp
movsl
inc
dec
mov
mov
dec
icebp
aam
and
dec
and
dec
not
adc
mov
mov
test
sub
mov
rclb
pop
push
test
dec
insl
dec
into
mov
fistps
lahf
ret
das
cmp
mov
je
dec
and
xchg
jns
pop
test
dec
jns
xor
lret
sbb
jno
push
imul
pop
mov
test
mov
pop
sbb
scas
push
cmc
flds
rcll
mov
pop
dec
scas
lea
mov
xchg
mov
push
push
je
mov
mov
dec
cmp
or
data16
xchg
or
cmp
data16
test
dec
inc
jne
or
into
mov
jnp
pop
xorl
mov
out
loop
or
xor
scas
dec
jl
mov
push
jbe
add
test
into
jecxz
inc
pop
pop
adc
sub
icebp
pop
pop
pop
mov
sub
xchg
push
mov
aad
bound
jge
and
mov
sub
cmc
inc
xor
push
cmc
push
popf
orb
hlt
sub
mov
icebp
movsl
icebp
add
mov
fcompl
or
mov
xor
push
cwtl
aad
idiv
push
inc
lea
and
xchg
cmc
mov
jne
jns
sub
pop
mul
mov
in
xchg
jge
dec
out
xor
int3
verr
scas
shlb
or
shrb
inc
cmp
imul
mov
jno
hlt
loop
jae
enter
push
es
movsb
call
adc
mov
outsb
and
inc
xchg
in
jb
xor
and
sub
cli
out
sti
adc
cmp
out
mov
pop
mov
mov
sbb
xlat
push
stos
fisttps
xlat
xchg
add
or
andl
adcl
cmpsl
icebp
call
sbb
mov
xor
test
into
sbb
lods
lret
insl
xor
mov
rcrl
jmp
movsl
arpl
jb
ffree
jno
push
fwait
scas
addr16
je
sbb
and
int
cmp
iret
mov
mov
xor
nop
jg
gs
jmp
mul
cmp
mov
fcompl
sarb
scas
lods
cmc
imul
mov
push
xchg
das
clc
mov
jg
movsb
sahf
lods
mov
dec
jns
add
mov
pop
sti
bnd
rcr
cmp
add
mov
xor
lea
cs
test
cmpsl
xchg
inc
ds
mov
add
sbb
cmpsb
cmp
add
pop
pusha
lock
icebp
cmpsb
adc
mov
push
adc
mov
pop
call
andl
in
out
icebp
and
jg
mov
sub
add
jbe
dec
cmc
mov
pushf
fsubs
xor
orl
in
lds
arpl
imul
leave
add
arpl
js
std
add
arpl
cmp
jne
shl
data16
gs
outsl
jp
stos
stc
jge
and
or
lods
repnz
imul
mov
dec
shlb
lock
jb
add
pop
sbb
push
cmp
dec
add
jbe
aam
je
push
loopne
icebp
dec
out
or
in
loopne
stos
aad
xchg
or
xchg
fs
out
mov
mov
push
mov
sahf
push
sahf
fcmovbe
jmp
inc
cmp
xchg
jp
addb
mov
mov
dec
pop
sahf
je,pt
xor
mov
inc
inc
cmp
mov
mov
xchg
dec
in
js
cmpsb
push
dec
frstpm(287
cmp
xor
add
call
sbbb
jmp
outsb
loop
push
xchg
push
insl
pop
jmp
sbb
cli
inc
or
adc
out
sbb
insl
sub
sub
out
cmp
in
sub
mov
add
shlb
pop
repz
or
jnp
dec
and
mul
pusha
sbb
and
addr16
dec
arpl
cltd
mov
or
popa
push
cmpsb
pop
test
daa
fs
cs
mov
push
repnz
ss
ror
arpl
or
stos
jb
mov
pop
movsb
scas
cmpsl
inc
jnp
push
sbb
pop
dec
push
and
orb
in
movsl
sub
in
jbe
sub
push
push
and
enter
insb
and
or
or
add
aas
pusha
add
adc
xchg
insb
push
daa
inc
sub
dec
cmpsb
sti
or
inc
cmp
in
mov
repz
and
inc
cmp
cltd
stos
mov
or
adc
clc
lcall
stos
fstl
and
jecxz
daa
ja
sub
dec
mov
or
mov
mov
cmpsl
adc
fisubl
in
fiaddl
js
jg
mov
mov
adc
push
cmp
push
dec
sbb
push
fsts
push
pop
add
pop
mov
daa
jne
aad
mov
cwtl
jo
shrl
iret
ret
shll
push
int
mov
arpl
popf
jne
lods
and
and
or
in
mov
xor
out
or
and
xchg
insl
repnz
dec
gs
jbe
add
jb
push
jns
add
loope
ja
into
jge
andl
pop
scas
sub
push
xchg
test
xchg
jge
sub
gs
dec
mov
scas
lcall
or
inc
xchg
mov
mov
fimull
fsub
outsb
jl
pop
outsl
aaa
push
push
push
orb
out
jb
pop
dec
inc
enter
mov
cs
rorl
sti
pop
and
inc
pop
leave
mov
adc
push
xlat
rcrb
lcall
push
out
lods
dec
mov
mov
ja
push
negl
das
mov
jb
mov
mov
dec
sbb
mov
xchg
pop
push
imul
cmpsb
lret
nop
lahf
mov
enter
and
in
push
out
cmc
stos
jb
cmp
and
loope
mov
xchg
dec
mov
mov
mov
loopne
pop
mov
or
inc
cmp
test
ret
sti
adc
pop
ss
pop
lock
fistpl
sub
aad
nop
mov
xchg
test
gs
fidivl
sub
test
push
inc
mov
in
aad
aad
test
xchg
repnz
call
inc
mov
imul
ret
mov
add
or
add
mov
and
lret
test
fs
mov
loopne
pop
lods
scas
and
add
or
divb
sbb
popf
adc
mov
push
adcb
sub
push
sub
stos
or
mov
pop
fnstcw
jae
out
out
movsl
dec
adc
jb
fmuls
cmpsl
cltd
and
jae
arpl
movsl
cltd
imul
inc
outsb
mov
fwait
xor
in
sub
out
inc
adc
adc
rorl
or
outsb
push
pop
pop
inc
stos
or
jae
insb
xor
inc
dec
pop
movl
lock
mov
out
sub
sti
inc
das
ret
popf
adc
popa
jne
iret
std
fs
inc
in
shlb
add
cmc
ror
jge
pop
xchg
sbb
sbb
arpl
shrb
pop
inc
inc
lcall
es
mov
jne
test
xchg
mov
insl
push
xchg
sub
push
jmp
and
xor
lea
xchg
loop
repz
add
xor
inc
lret
add
and
fdivl
icebp
insb
add
pop
add
incb
pop
mov
daa
rolb
ja
sahf
add
mov
das
pop
cmpsb
inc
cmp
pop
iret
pop
mov
pop
ljmp
inc
mov
repnz
fld1
inc
add
fwait
push
mov
xchg
cmp
mov
xor
mov
mov
dec
mov
cwtl
mov
loopne
inc
inc
popa
mov
inc
mov
fcomps
push
addl
sub
je
lods
in
popa
in
fcompl
jo
test
int
fbld
mov
daa
out
or
sbb
jno
and
in
repz
xchg
subl
clc
xorb
rolb
xchg
je
jmp
flds
rclb
or
sub
xchg
pop
or
filds
cmpsb
scas
adc
dec
mov
or
mov
aaa
pop
dec
push
inc
mov
jno
hlt
and
sbb
push
out
inc
xor
inc
fisubs
fwait
and
inc
fdivs
rclb
xchg
stos
sub
xor
adcb
dec
push
call
pop
cmp
xchg
or
pop
jae
adc
cltd
in
mov
mov
aaa
adc
inc
jl
ret
add
dec
mov
sbb
test
mov
add
sbb
push
cli
mov
es
xchg
in
sub
mov
inc
mov
lret
pop
mov
call
jle
mov
loop
mov
lea
cld
push
adc
jl
pop
push
test
dec
mov
mov
lea
lods
popa
cltd
mov
sti
mov
dec
or
or
pop
mov
push
neg
add
insb
loop
adc
rorl
ss
lret
xchg
or
mov
fldl
mov
shll
pop
fwait
pop
and
maxps
xchg
and
outsl
ficoml
cli
xchg
out
shll
xor
and
in
sub
pop
loopne
inc
cmp
std
subb
fbstp
sub
cwtl
sub
adcl
or
adc
jno
xchg
push
and
shlb
or
xor
push
sbb
loop
in
bound
cmp
or
mov
lea
pop
dec
aad
sar
adc
out
add
js
outsb
or
mov
mov
sbb
dec
out
test
push
push
and
add
push
xchg
cmpl
xchg
aad
subb
lods
fisubs
insb
lods
data16
stos
mov
push
out
and
arpl
sbb
bound
add
hlt
cmp
jmp
rorb
push
int
pop
lahf
jae
inc
dec
xchg
push
xchg
cmpsb
jb
adc
and
push
sbb
repz
pop
push
pop
pop
sbb
shlb
xchg
aas
js
imul
xchg
sbb
adc
bound
sbb
adc
call
or
lea
imul
pop
insb
cmpsb
dec
sti
xor
mov
inc
repz
lea
int3
ss
fsubr
jle
inc
or
addb
emms
xchg
iret
dec
scas
and
xchg
push
xchg
cltd
sbb
ja
and
push
pop
sub
jg
jl
jb
cli
sbb
push
movsl
aam
popf
stos
jo
push
jns
xor
xor
sarl
in
dec
fsubs
into
jecxz
cmp
sbb
sbb
mov
dec
pop
mov
mov
int
sbb
int
les
dec
mov
ret
pop
jmp
clc
adc
lcall
inc
cmp
dec
cmp
pop
lods
mov
or
in
inc
int3
add
jo
and
jae
xor
gs
adc
jp
call
fsub
outsb
je
dec
cmp
inc
or
test
cmc
mov
mov
dec
push
cmp
adc
call
or
dec
fimull
and
xor
sti
js
push
shrl
mov
jns
mov
inc
pushf
es
mov
jg
or
push
inc
jmp
jbe
leave
in
add
sub
xor
lret
sub
stc
repnz
sub
add
inc
add
mov
outsb
xchg
movsb
dec
pushf
jne
lods
mov
and
sub
cld
mov
xchg
inc
push
jbe
cmpsb
or
nop
sbb
jo
pushf
mov
std
and
jnp
xchg
mov
sub
movsl
add
mull
push
pushf
sar
or
push
sub
sti
arpl
jmp
and
add
inc
mov
imul
cmc
out
mov
mov
inc
jmp
xchg
dec
mov
push
dec
push
mov
inc
jns
lcall
movsb
cmp
add
dec
sarl
dec
subl
inc
outsl
shll
movsl
cmp
frstor
shll
mov
mov
adc
into
int
mov
push
adc
push
adc
mov
loop
movsl
fiadds
inc
loope
scas
xchg
test
iretw
sbb
xchg
push
and
inc
push
repnz
inc
pop
and
sub
mov
adc
mov
les
test
inc
jl
mov
dec
cmpb
cmp
pop
ret
inc
stos
neg
push
dec
iret
cli
cmp
int
push
inc
mov
adc
lret
adc
mov
inc
into
mov
cmp
mov
insl
out
scas
xchg
adc
jo
xchg
cmp
in
mov
inc
pop
lcall
push
out
test
mov
inc
push
lcall
mov
sti
test
loop
sub
insl
out
sti
inc
xchg
rorb
pop
inc
lret
sti
adc
mov
sbb
adc
xorl
cs
and
dec
xchg
sbb
or
cwtl
mull
scas
xchg
outsb
mov
sub
arpl
aas
sbb
push
mov
mov
in
pop
push
pop
mov
mov
xchg
out
hlt
mov
and
mov
push
lret
mov
or
repz
popf
dec
sub
sbb
pop
sub
pop
push
and
aas
cmp
mov
in
dec
inc
mov
dec
ljmp
dec
sub
jb
dec
add
push
or
notl
dec
lods
mov
gs
add
mov
ss
enter
pop
push
stos
add
cwtl
pushf
mov
adc
out
or
je
pop
sub
in
call
jmp
ud2
int
xor
loop
xchg
in
ficoml
mov
pop
in
stos
push
adc
stos
mov
std
idivl
aad
aas
adc
add
out
push
jmp
repz
std
add
sub
pop
mov
mov
lock
popf
jecxz
cmpl
adc
mov
or
and
test
jmp
mov
lds
loop
jp
addr16
push
sub
hlt
rclb
xchg
out
push
movsl
fsub
ret
mov
jbe
and
pop
cmpsb
test
adc
scas
pop
inc
enter
insl
out
sbb
lods
mov
mov
lcall
out
xchg
and
les
movsb
xor
daa
sahf
icebp
mov
adcl
fimull
scas
cli
hlt
mov
movsl
mov
dec
add
inc
enter
mov
hlt
inc
adc
pop
xor
stc
mov
jb
inc
repz
pop
pop
push
push
mov
inc
sub
or
or
pop
lods
out
hlt
out
sbb
test
sub
mov
movsl
xorl
test
mov
notb
into
popf
ss
test
orl
pushf
jb
arpl
add
cltd
in
mov
loope
out
mov
inc
xor
pusha
cmp
movsl
dec
movd
mov
and
jae
xchg
icebp
ffree
push
mov
aad
adc
and
clc
jl
sub
js
cltd
add
fs
stos
push
ficoms
inc
movsb
cmc
repz
cmc
rcll
and
pop
push
adc
xchg
lods
push
cmc
push
dec
adc
xchg
lock
hlt
test
pop
cmp
xchg
add
repz
add
push
sets
das
adc
mov
stos
or
pusha
inc
insw
insb
rclb
adc
hlt
push
adc
mov
push
jb
push
and
testl
mov
int3
push
jbe
mov
stc
or
mov
movsl
and
sti
outsb
push
pop
clc
add
test
in
or
or
dec
call
out
push
mov
adc
push
adcb
add
mov
loopne
xchg
add
inc
dec
mov
or
xchg
adc
sti
divl
push
sbb
inc
pop
popa
mov
pop
jae
in
sub
jmp
test
xchg
in
test
mov
mov
cmpl
sbb
dec
add
ss
rolb
mov
push
jl
adc
pop
jne
mov
mov
dec
dec
les
arpl
fdivs
mov
hlt
loope
pop
aaa
and
jbe
pop
cltd
mov
gs
or
test
inc
gs
push
shlb
lds
repz
mov
lods
test
fadd
test
daa
and
jno
lods
data16
push
and
inc
clc
bound
faddl
test
dec
jg
lock
push
cwtl
mov
js
jmp
mov
push
mov
sbb
nop
repnz
inc
and
loopew
push
sub
mov
arpl
mov
sbb
push
dec
mov
pop
test
mov
mov
or
outsb
aas
pop
jnp
fisubl
sbbb
add
mov
int
cwtl
fsubrl
xchg
ljmp
push
adc
mov
aad
scas
fisubl
or
ss
leave
leave
lret
push
mov
xchg
cli
pop
mov
fwait
sub
mov
pop
fsubp
out
jo
cld
and
popa
pop
int
push
push
xor
bound
nop
fwait
xchg
in
push
mov
pop
pop
lcall
arpl
mov
loopne
mov
pop
push
negl
xlat
sahf
daa
ret
into
add
in
cmpl
mov
cld
ret
xchg
les
adc
xor
adc
test
mov
push
cli
rclb
dec
and
fsubl
insl
pop
adc
jo
or
sbbl
adcl
out
and
inc
arpl
mov
rorb
cmp
shrb
stc
push
xor
ljmp
sarl
sbb
push
cmpb
xor
bound
jle
dec
and
popa
push
and
sbbl
subl
xchg
clc
mov
jns
aad
sbb
sub
adc
xor
mov
sub
int
mov
insb
mov
cmpsl
dec
sub
aad
xorb
adc
push
fcomps
fwait
imul
xor
sbb
mov
mov
push
inc
insb
popa
jp
jae
mov
xchg
mov
or
fadds
ret
and
cli
xchg
lock
lret
movsl
mov
lods
cmp
cli
pop
in
push
push
push
xchg
sbb
das
push
test
movsb
and
add
cli
mov
test
adc
insl
subl
icebp
sub
mov
jmp
fsub
mov
enter
sbb
mov
adc
into
outsl
dec
test
pop
fsubrs
arpl
mov
insb
ljmp
push
test
ljmp
rolb
mov
sub
je
and
popa
outsl
lcall
je
lods
popf
and
jmp
mov
push
lods
xor
aaa
and
lret
cli
and
mov
test
inc
sbbl
adc
movsb
jbe
mov
fwait
addr16
repz
popa
push
jno
dec
lds
dec
dec
and
push
mov
sbb
sbb
or
sub
and
mov
or
movsl
outsl
sub
cltd
mov
pusha
rorb
out
popa
popa
outsl
js
mov
cmp
fisttpll
sbb
or
stos
outsb
inc
outsl
fisubl
adc
sub
mov
dec
out
sub
fs
push
outsb
jnp
inc
js
pop
inc
test
dec
shrl
jbe
mov
jmp
jns
or
sbb
and
ret
cli
and
add
push
int
sbb
lock
dec
mov
imul
mov
and
xor
xchg
or
push
outsb
pop
jne
add
sub
pop
fs
mov
adc
jne
pop
fiadds
push
jno
icebp
xchg
or
xor
inc
jno
stos
gs
mov
inc
cmp
push
adc
ret
fidivrl
ds
push
cs
test
mov
daa
ljmp
push
jge
jg
push
lods
mov
je
mov
jmp
aam
mov
rcll
insl
jo
lcall
pop
lcall
mov
cmp
ljmp
push
pop
ss
xor
xchg
in
or
jne
jno
mov
adcl
sbb
je
mov
popf
dec
mov
jp
lods
movsb
jne
test
mov
daa
movl
jne
int
and
iret
push
lahf
mov
xor
mov
movb
jbe
and
jbe
loopne
dec
xchg
lods
mov
push
test
jns
or
subb
jl
je
fsub
pop
lock
and
outsl
mov
xchg
call
mov
xor
test
insl
cmp
push
pop
sub
jbe
in
add
mov
sub
mov
inc
orl
or
daa
mov
popf
push
mov
daa
in
shll
lods
fdivs
call
jbe
int3
aas
ss
arpl
cmp
mov
decb
test
jmp
in
or
enter
add
push
lret
arpl
and
inc
adc
adc
sub
jmp
xchg
mov
jne
xor
pop
jle
adc
inc
inc
xchg
mov
jne
addr16
popa
or
lret
cmp
dec
test
cmc
in
ljmp
loop
lahf
push
popf
ds
and
loop
dec
cltd
ja
cmovge
xchg
test
fildll
jns
in
mov
pop
xchg
xchg
popf
js
push
les
je
cltd
pop
adc
test
out
push
or
call
jo
stc
mov
dec
xchg
addr16
scas
je
jmp
dec
fdivp
and
aad
push
jg
pop
jns
std
movsb
dec
clc
cmp
sti
lds
adc
dec
or
test
jo
xchg
pop
jno
fisubs
dec
fdivrp
pop
dec
xchg
fs
aam
xor
mov
or
fisubrs
outsb
fiadds
jne
out
iret
jne
pop
fdivs
jecxz
in
jbe
and
pop
push
inc
lret
xor
jo
mov
cltd
mov
adc
mov
jp
push
xor
insl
out
outsb
xchg
shl
xor
movsb
inc
dec
sti
outsb
jmp
mov
pop
sbb
push
pop
jle
stos
fmuls
mov
push
iret
imul
mov
mov
push
and
pop
cs
subl
sbb
jb
movsl
jg
dec
in
sub
lret
mov
outsb
jp
xchg
je
inc
fbstp
fisubs
pop
and
xchg
inc
ja
out
and
mov
cltd
mov
adc
cwtl
stc
jg
push
fidivs
jnp
mov
imulb
push
insb
stc
nop
mov
push
lahf
inc
adc
shr
test
shrb
sbb
xchg
adc
add
xchg
test
subb
sti
test
divb
xchg
ja
and
xor
nop
shld
adc
rorl
dec
stc
lret
add
inc
ret
loop
icebp
or
rcrb
fs
popf
mov
loopne
mov
mov
popw
pop
push
push
shll
push
and
mov
xchg
mov
fwait
jecxz
in
push
xor
nop
lea
test
jmp
in
mov
shrb
sbb
xchg
repnz
icebp
lret
clc
ret
orb
in
xchg
vpand
xor
sbb
and
out
daa
cmc
inc
jno
ret
ucomiss
test
mov
xchg
in
cmpsl
jnp
mov
mov
jb
mov
insb
inc
adc
inc
fiaddl
pop
je
std
adc
xchg
dec
int3
rorb
add
mov
iret
sub
push
pop
mov
mull
rolb
shl
push
xchg
scas
jmp
jmp
sub
mov
out
aaa
add
lods
push
inc
mov
xorl
jge
mov
fdivrl
and
mov
test
jbe
adc
in
ds
outsl
jne
loopne
ret
and
cs
xor
push
or
dec
popa
ret
inc
jecxz
mov
inc
mov
test
add
jmp
lods
dec
mov
movsb
dec
xor
mov
movsb
jl
mov
mov
test
nop
or
mov
daa
movl
test
fstps
and
fnstenv
daa
sub
sbb
insb
std
jle
js
inc
sub
and
mov
mov
push
lods
das
lret
adc
out
leave
fistpl
jge
mov
notl
rcrb
push
fsubr
adc
sub
and
jns
mov
lahf
or
fstcw
popa
or
cmp
pushf
fsubrs
and
and
xchg
cmc
pop
andb
in
add
push
in
or
xchg
lock
jle
stos
jnp
jg
in
dec
sub
mov
notb
cmc
dec
mov
or
lds
ja
bound
movsb
xchg
sub
xchg
shl
imul
mov
pop
sti
pusha
data16
push
mull
dec
xorl
cltd
pop
les
push
gs
sbb
and
scas
adc
cmp
sti
inc
into
adc
and
mov
jl
pop
aas
dec
mov
lret
into
mov
xchg
dec
in
popa
or
sub
cltd
sbb
and
adc
push
push
mov
iret
inc
lahf
sub
adc
incb
dec
loopne
les
or
dec
nop
ret
into
mov
mov
scas
pop
cmp
jl
mov
jl
lock
cmpsl
cli
es
imul
dec
popa
out
or
sbb
incl
popf
lock
lods
ds
add
decb
inc
push
and
push
xor
lock
sub
les
jmp
loopne
lds
or
out
mov
cmc
mov
inc
or
dec
add
lea
test
cmp
cmc
icebp
jmp
push
ljmp
out
test
mov
mov
push
push
sbb
in
lods
andb
sub
lret
movsl
sub
fistpll
fmul
movsb
cmp
fidivrl
loopne
aas
fsub
fs
mov
xlat
sub
cmp
add
sahf
xchg
inc
pop
xchg
dec
push
nop
movsb
pop
test
or
adc
adc
mov
test
sub
movsb
in
cltd
pop
aad
jge
outsb
outsb
adc
inc
fdivrs
push
mov
stos
push
cmp
orb
scas
pop
xchg
inc
aad
mov
jle
movsb
xchg
mov
outsl
rcll
ret
jge
loope
dec
in
add
lods
loop
or
ja
es
adc
mov
dec
loope
pop
and
out
add
pusha
xchg
push
inc
mov
mov
in
ficomps
xor
dec
adc
add
mov
out
and
or
sbb
and
push
xchg
ds
mov
clc
pop
and
mov
cmp
push
xchg
sub
xor
mov
mov
or
mov
and
in
push
mov
push
mov
insl
lods
notb
sbb
dec
sub
and
hlt
dec
and
scas
pop
xchg
inc
aad
mov
add
movsb
or
ret
jge
loope
dec
rol
hlt
inc
enter
movhps
shrl
xor
mov
in
pop
inc
mov
popl
mov
mov
jo
aam
int3
insb
ss
test
lock
push
push
mov
xchg
pop
out
mov
mov
decb
add
test
push
loopne
negl
mov
adcl
mov
clc
push
int3
js
xchg
cli
pop
adc
add
adc
push
les
lret
stos
or
cmp
orl
push
clc
addr16
mov
xor
insb
fcom
movsl
jno
dec
adc
mov
add
pop
sete
divb
outsb
in
out
mov
and
ljmp
out
ret
and
add
gs
push
fistps
arpl
or
popa
das
test
fsubrs
test
cmp
out
mov
test
push
rcl
jmp
and
cltd
mov
cld
subl
cmpsb
xor
cmp
das
mov
test
sbb
add
xchg
pop
fneni(8087
sub
movsl
cmp
je
lods
xor
fisubs
ds
cmp
in
leave
adc
add
xchg
mov
repz
mov
pushf
pop
lahf
add
into
or
ljmp
movsl
lcall
push
out
gs
adc
inc
jns
pop
jne
out
add
xor
cs
out
lea
push
mov
add
mov
mov
lahf
sahf
xor
lods
movsl
jo
pushf
stos
pop
mov
sub
mov
movsb
mov
push
outsl
jle
rolb
test
aam
or
movsb
std
shl
add
jmp
fs
andnps
movsl
lcall
loope
sub
repnz
push
dec
movsb
xor
pop
les
test
cmp
mov
shl
inc
pop
fucomi
xor
add
add
out
cld
rolb
sub
xchg
ja
lret
add
aaa
cli
out
push
comiss
js
pop
jne
mov
inc
cmpsl
rcll
scas
pop
xchg
mov
cwtl
arpl
lods
xor
cmp
pusha
add
call
enter
and
and
add
inc
das
aas
stc
pop
add
test
add
aas
ljmp
movsb
xchg
cmp
or
jae
jnp
add
cmp
jb
movsl
in
out
frstor
fwait
loope
imul
jnp
sti
lods
jne
stos
movsl
in
mov
mov
jmp
xchg
add
pop
and
insl
clc
out
push
sub
push
xor
jmp
in
mov
jno
jmp
mov
add
lods
fsubl
cmp
mov
mov
mov
lds
add
jg,pt
je
lds
out
push
push
cmp
ret
enter
mov
out
shlb
or
sbb
stos
dec
testl
cmpsl
ret
push
mov
mov
jge
popl
inc
sub
iret
mov
inc
shrl
shl
insb
movsl
mov
jae
sub
inc
scas
out
mov
and
push
sbb
mov
mov
out
mov
loop
mov
inc
add
jb
xor
jne
mov
aas
sub
mov
addb
adcl
cmp
add
in
xchg
imul
or
adc
add
out
pop
xchg
adc
pop
add
or
mov
popf
std
mov
test
jmp
shll
lcall
and
lock
push
cmp
insb
lret
fistpl
push
mov
jbe
mov
pop
gs
jno
stos
out
into
sahf
loopne
pop
scas
out
adc
int3
dec
arpl
jbe
push
les
add
sahf
jecxz
add
xor
mov
in
addl
aam
mov
jbe
fwait
lods
imul
cmp
pop
jae
addr16
cmpsb
icebp
or
pop
test
cmp
fcmovu
sub
or
insb
ret
mov
push
mov
cmpsl
adc
add
xchg
ss
add
xor
sub
movsl
sbb
mov
out
gs
in
insb
clc
jb
das
lret
mov
sub
ret
jecxz
mov
pop
sub
mov
push
mov
inc
xor
cld
ret
arpl
loopne
int3
mov
shll
popa
ret
test
leave
or
movsb
mov
ficompl
nop
xchg
in
in
addr16
aad
pop
pop
xchg
ja
leave
dec
lds
bound
and
cwtl
inc
jbe
bound
iret
bound
mov
mov
lret
xlat
scas
jmp
sahf
lods
or
insl
out
adcl
sub
pop
adc
lcall
movsb
mov
fucom
popa
sub
loop
mov
push
cmp
push
mov
sub
int3
sbb
xchg
and
mov
jle
hlt
push
fnsave
pushf
xchg
add
in
fadds
jmp
insl
pop
mov
xchg
adc
rcll
ss
lea
int
sub
sub
insb
jbe
ss
rol
in
aas
icebp
xchg
mov
push
or
dec
pop
mov
jmp
xor
push
xlat
dec
js
and
and
bound
daa
sub
insb
pop
add
pushf
sbbl
call
insb
push
sub
loop
mov
dec
enter
adc
xlat
adc
dec
outsl
mov
push
ss
inc
je
xchg
insb
ljmp
leave
lods
xchg
push
testb
pop
sbb
movb
aaa
test
sub
push
or
or
test
adc
dec
jg
pop
mov
lahf
xor
or
fstl
add
add
popa
push
out
popa
push
aaa
jecxz
ds
es
jmp
scas
out
adc
fsubl
mul
adc
jmp
cmc
sbb
mov
adcl
push
inc
inc
bound
ljmp
aas
and
push
inc
clc
insl
test
mulb
push
push
movsb
aad
xor
loope
pop
inc
inc
ret
mov
and
jl
pusha
inc
cwtl
pop
outsl
mov
dec
dec
pop
and
loope
daa
lea
scas
outsl
xchg
and
inc
mov
mov
and
clc
mov
dec
push
cmc
out
enter
insb
add
inc
xorb
or
shlb
fbld
dec
mov
sbb
ret
xchg
ds
ficompl
aaa
loop
pop
cmpsl
xchg
movsb
clc
xchg
mov
pushf
sbb
sbb
enter
in
adc
inc
shll
icebp
daa
sub
rclb
sahf
adc
mov
inc
bound
insl
dec
pushf
sub
pop
jb
sub
loopne
cwtl
and
xchg
in
or
ret
popf
ja
es
mov
adc
xor
and
test
ljmp
cmpsb
and
jo
insb
inc
pushf
or
arpl
or
adcl
mov
xor
and
scas
jnp
sub
push
mov
mov
and
test
clc
testl
dec
mov
ss
or
ss
loope
pop
inc
dec
decb
push
fwait
ljmp
lods
push
inc
mov
push
les
and
and
insl
lea
scas
mov
inc
pop
out
insl
hlt
push
out
daa
mov
out
adc
aad
jg
insl
out
mov
inc
jno
mov
mov
lock
mov
daa
dec
popf
ja
es
mov
adc
xor
paddsb
js
cli
mov
outsl
not
ja
popl
pushf
mov
in
pop
movsl
mov
test
or
jo
movsl
outsb
mov
bound
mov
sar
mov
sub
mov
sbb
popf
repz
xor
test
add
sub
in
subl
nop
sbb
inc
aas
aam
nop
into
sbb
add
push
out
adc
lods
mov
dec
cltd
mov
dec
popf
fwait
ss
pop
aas
fidivs
jge
push
insb
test
mov
push
rorb
jae
lret
push
leave
jl
jo
inc
jae
pop
popa
arpl
pop
icebp
push
test
jmp
fisubrl
xchg
popa
jge
mov
push
dec
add
sub
mov
xchg
mov
ljmp
aaa
dec
into
pop
dec
and
cmp
adc
adc
mov
jnp
enter
out
ret
movsl
and
jo
or
adc
scas
mov
aas
sbb
inc
aas
inc
fnsave
stc
sti
add
sahf
rclb
jl
jae
popa
or
and
repz
shrl
jbe
sub
data16
jb
cltd
loope
pop
test
dec
cltd
call
dec
inc
imul
mov
dec
shll
insl
in
inc
incb
xor
lcall
imul
mov
xchg
dec
inc
lods
mov
ja
rcll
icebp
xor
mov
jbe
add
mov
inc
dec
jne
xlat
les
inc
xchg
jge
mov
sub
mov
sub
imul
xchg
outsl
lds
test
in
lret
in
mov
sbb
gs
stos
cmp
fsubrs
cmp
jle
cmpsb
test
insb
adc
fstpl
lods
pusha
mov
shrb
xchg
mov
jmp
xor
sbbl
movsb
mov
sub
sub
dec
xchg
rolb
outsl
mov
dec
dec
stos
mov
push
stos
mov
xchg
repnz
mov
in
push
jge
and
mov
adc
shl
subl
arpl
xor
push
icebp
insb
pop
popa
stos
out
in
sbb
roll
pusha
cmpsl
sub
mov
cmpsb
mov
aaa
cmpsl
fwait
pop
neg
adc
ja
push
or
cmc
inc
dec
or
cmpsl
sbb
xlat
inc
mov
lret
fs
or
into
pop
scas
jno
out
adc
mov
test
push
xchg
pushf
repz
push
or
in
test
push
mov
cltd
mov
push
add
push
in
push
cs
outsb
xlat
push
jbe
xchg
insl
stos
mov
ljmp
bnd
pop
sub
lea
jno
orb
push
aas
fnsetpm(287
or
xchg
xlat
push
orl
sub
leave
push
dec
out
int3
pop
dec
enter
in
test
xchg
or
sub
lahf
int3
out
pusha
xchg
popa
lret
jg
ss
js
sbb
int
mov
imul
clc
fldl
cmp
je
fisttpl
mov
dec
jbe
fwait
xor
cmp
into
dec
xchg
ja
adc
add
jecxz
stos
sub
mov
sub
fs
stos
test
sub
xchg
clc
js
mov
enter
mov
mov
loopne
andb
subl
mov
dec
int3
adc
cmp
xchg
push
loop
adc
add
push
mov
loop
jno
dec
mov
inc
dec
inc
dec
aaa
sbb
mov
imul
sbb
push
push
push
cmp
movsb
and
scas
addr16
ja
dec
pusha
shlb
sub
push
adc
sub
xor
popa
ds
js
adcl
cmpsl
mov
shl
cmc
xlat
sub
movsb
mov
rcrl
aaa
sub
shrb
rclb
mov
push
enter
icebp
pcmpgtb
outsl
dec
pop
xlat
add
dec
enter
test
mov
popf
icebp
iret
pop
jne
in
enter
ljmp
inc
sub
add
xchg
int3
xchg
xchg
es
cmp
mov
adc
fcoms
imul
xor
cmpsb
data16
cmp
jo
idiv
shufps
arpl
cld
cld
mov
mov
mov
sub
popl
inc
aam
push
dec
adc
mov
out
xor
cmpsl
adc
pop
sub
cmpl
sbb
dec
cli
xor
ret
cmp
popf
pop
cmp
popf
push
cmp
cmp
cmp
cmp
cmp
out
or
idivb
sbb
push
xchg
in
es
cmp
es
ss
inc
subb
orb
orb
sbbb
subb
rolb
out
es
xchg
and
and
xor
cmp
xchg
adc
pushf
in
inc
imul
inc
inc
in
inc
daa
in
inc
xor
in
stos
add
ds
and
adc
xchg
in
dec
xchg
lock
xchg
ret
jne
xchg
fdivl
xchg
aas
jne
xchg
or
xchg
popa
jne
xchg
inc
jne
xchg
dec
jne
xchg
stos
fcompl
loopne
add
xlat
add
loopne
in
loop
mov
jno
jns
test
cmp
add
ret
inc
fsub
inc
inc
test
mov
pushf
fsubs
leave
fbstp
jnp
in
push
or
les
lcall
ds
inc
inc
adc
fidivl
xlat
mov
pop
in
test
cmp
fcmovnb
nop
jbe
xchg
mov
jbe
cli
or
xchg
je
push
mov
jle
jno
fcmovne
test
xchg
jae
xlat
xorb
aaa
jae
xlat
add
xlat
sbb
popf
pop
or
jb
lcall
cmp
movsl
and
es
addb
test
xor
insb
leave
enter
enter
enter
enter
leave
mov
jae
fbstp
xchg
roll
mov
xor
shl
push
inc
mov
lret
cmp
push
addb
leave
lods
fistpll
imulb
ret
pushf
lods
cmp
jl
mov
pushf
xor
cmp
popf
lcall
xchg
imul
cmp
xchg
dec
movsl
mov
xchg
cmpsl
aad
loopne
add
into
dec
mov
push
xchg
scas
pop
int3
xlat
xchg
gs
xchg
jno
rcll
jbe
xchg
sahf
jbe
xchg
test
or
dec
pop
sbb
cwtl
cmp
cwtl
popa
jp
cwtl
push
jp
andl
and
fwait
rcll
shll
roll
fs
daa
xor
cs
cmp
adc
and
in
xor
sbb
js
xor
mov
push
sbb
lcall
adc
push
cmp
in
mov
test
dec
sbb
and
or
sbb
cli
enter
enter
enter
enter
enter
enter
lret
inc
xor
fisubrl
ljmp
dec
jbe
xchg
insb
jbe
scas
mov
pushf
pop
cmp
pushf
sub
xlat
pushf
or
clc
stos
jmp
sbb
jmp
dec
push
jmp
dec
ja
dec
xchg
jmp
dec
scas
jmp
dec
into
jmp
dec
fsubrp
add
out
jmp
dec
out
aas
push
ss
xchg
push
les
ds
lods
xchg
dec
ss
pop
test
int
das
mov
and
fwait
and
shrl
addr16
ja
inc
ret
add
in
in
inc
cld
in
inc
int3
in
inc
fsub
inc
aaa
dec
jae
xlat
mov
jae
xlat
pushf
jae
xlat
insb
dec
xchg
sbb
mov
les
and
into
cmp
out
cmp
incb
rorl
push
pushf
or
fistps
cmp
pushf
fistpll
cmp
lretw
cmp
frstor
xchg
dec
sbb
mov
mov
inc
cmp
std
fbld
int
jno
fstp
cmpl
or
sahf
cmpsb
jbe
xchg
shll
xchg
loope
dec
xchg
mov
adc
in
inc
into
fidivs
xlat
scas
jae
xlat
mov
out
cmp
sub
fbld
cmp
insl
cmp
dec
push
mov
aaa
lods
jne
xchg
mov
jne
xchg
popf
je
addr16
je
xchg
imul
sub
and
aad
jge
frstor
inc
shl
dec
pop
lahf
xor
push
push
dec
popf
test
dec
in
inc
push
stos
enter
inc
lea
mov
jp
movsb
jbe
test
xchg
adc
xchg
gs
xor
jmp
xor
jp
cwtl
test
cwtl
in
jp
cwtl
cmc
dec
sbb
jp
cwtl
lds
dec
or
movsl
and
shll
gs
pop
enter
rorl
test
rcrl
mov
rcll
rcrl
shll
shrl
shll
rorl
adc
mov
and
leave
and
shll
inc
enter
rorl
mov
shll
stc
shll
shrl
shll
sarl
roll
sbb
shll
ror
imul
fldenv
jns
jecxz
popf
repnz
inc
cli
in
inc
ret
inc
lret
xor
and
inc
xchg
in
inc
sahf
in
inc
in
inc
outsb
in
inc
jp
mov
inc
sub
aam
xor
faddl
in
inc
add
lock
sbb
into
sub
je
in
xchg
xchg
enter
enter
enter
enter
enter
enter
enter
sub
add
in
enter
push
adc
dec
inc
shl
cmp
fs
mov
in
inc
mov
mov
in
inc
jle
cwtl
inc
inc
in
inc
dec
in
inc
push
in
inc
push
in
stos
inc
mov
dec
pop
test
pop
stos
fldl
cmp
stos
dec
push
jmp
dec
pop
jmp
dec
pusha
jmp
dec
nop
jmp
pop
int3
add
test
int
das
mov
in
cmp
popf
clc
sbb
out
popf
or
negb
xor
mov
pop
cmp
popf
insb
cmp
dec
mov
cmpsl
loope
rcll
xchg
lds
xchg
int
jne
aad
pop
loope
cmp
rcrl
aaa
lret
ss
xchg
push
ss
xchg
test
es
in
je
mov
cmp
shlb
out
xor
ss
inc
nop
mov
in
inc
mov
pop
inc
mov
in
inc
mov
jne
xchg
in
inc
fwait
in
inc
arpl
cmp
loop
xor
loopne
add
loopne
out
xchg
mov
add
mov
cmp
cltd
fxch
dec
cwtl
xchg
shlb
xchg
hlt
sbb
fsubrs
jl
mov
push
sub
jo
sub
push
jae
xlat
add
or
mov
sbbl
or
cmp
sbbb
jmp
out
test
inc
xchg
int3
jne
nop
bound
scas
dec
mov
outsb
dec
das
cmpsb
pop
xchg
xchg
xchg
jbe
xchg
in
stos
rcrl
dec
icebp
cmp
repz
dec
out
out
incl
sbb
jp
cwtl
lret
cwtl
sub
cmp
fucomi
add
out
cmp
xchg
mov
inc
call
and
push
cmp
call
ss
es
scas
lds
add
lock
rolb
loopne
add
and
xchg
sub
nop
loopne
add
loopne
add
inc
cmp
pop
testb
das
jp
cwtl
test
and
xchg
loope
and
xchg
loopne
add
aad
inc
mov
add
mov
mov
callw
rcrb
aaa
dec
ret
pop
lock
xlat
sahf
jae
xlat
fs
out
inc
sbb
faddl
shlb
xchg
jmp
popa
int
and
out
insb
pop
leave
adc
xchg
dec
jbe
xchg
data16
xchg
xchg
mov
outsb
xchg
jmp
cmpsl
rorb
cwtl
mov
je
aad
xchg
lcall
adc
xchg
in
dec
xor
lods
adc
call
test
dec
add
test
dec
adc
ret
dec
les
mov
in
daa
inc
cmp
pop
mov
cld
xlat
sbb
cmp
lods
dec
adc
or
arpl
cmpsb
xchg
inc
ss
xchg
dec
insb
mov
std
das
pop
cmp
add
mov
test
lods
add
xor
push
in
inc
es
push
outsb
lods
and
and
iret
jno
push
mov
ret
and
sub
lea
xchg
pop
pop
shll
xchg
cmp
data16
xchg
sub
push
pushf
xchg
jo
xchg
sbb
mov
mov
movsl
cmp
lcall
and
xchg
xchg
das
stos
inc
test
test
cmp
pushf
fildll
cmp
js
out
dec
shl
and
cmp
and
js
sbb
jo
dec
aas
pushf
dec
sub
dec
pushf
out
inc
and
adc
into
cmp
adc
inc
sbb
lea
cmp
cwtl
add
cwtl
or
xchg
adc
xchg
xchg
mov
xor
sbb
mov
jns
mov
cmp
fidivrs
add
out
cmp
push
mov
ret
push
add
cs
cmp
lods
insl
push
pushf
mov
sub
and
xchg
and
shll
pop
rol
outsl
rcl
jg
jecxz
adcl
xor
hlt
in
inc
in
adc
dec
cmp
xchg
xlat
jne
xchg
daa
jne
xchg
aaa
jae,pt
pop
xchg
stos
jbe
xchg
mov
jbe
mov
cmp
pushf
sbb
push
lahf
in
dec
daa
jmp
dec
dec
sbbb
aas
call
das
nop
int
das
repnz
das
pop
jo
clc
in
cmp
dec
adc
je
je
mov
sub
or
roll
and
outsl
and
xlat
sub
ret
fucom
movsb
icebp
push
push
sub
gs
mov
pop
xchg
movl
fbstp
aas
pushf
movsl
cmp
lea
jle
ret
xlat
sarl
imul
mov
and
sub
pop
data16
fidivrs
add
lods
aaa
adc
mov
cmp
in
xchg
cmp
fsts
dec
pop
sub
lea
xor
xchg
mov
xchg
cmpsb
jbe
lods
roll
mov
mov
sbb
ret
shll
push
out
popl
in
adc
sbb
lds
sub
xchg
dec
je
je
mov
sub
mov
pushf
inc
cmp
pushf
adc
or
ret
inc
xchg
in
inc
jnp
mov
stc
scas
lret
xchg
xchg
or
loopne
add
pushf
mov
mov
sbbl
or
das
xchg
jo
lds
aas
mov
aaa
mov
xchg
push
xchg
xchg
cmp
das
xor
pop
cmp
call
inc
add
jl
ret
adc
aam
mov
sti
dec
lcall
fbstp
inc
push
cld
imul
insb
pushf
push
cmp
mov
and
pop
je
inc
sub
lods
xchg
lea
int
cs
test
outsb
jae
xlat
jp
mov
ljmp
inc
mov
cli
dec
xchg
lock
cmpsb
ss
xchg
mov
pop
fcmove
inc
das
icebp
and
shll
sti
iret
pavgb
out
dec
cmpsb
pop
push
mov
repnz
xchg
mov
adc
cmpsl
hlt
mov
in
aas
cmp
xlat
mov
xchg
sbb
sti
cmp
jmp
cwtl
mov
xchg
jbe
xchg
in
sbb
arpl
push
xchg
into
aaa
add
sahf
lods
fimull
lods
sarb
lds
ljmp
popf
into
cltd
or
rolb
aam
xchg
mov
inc
movsb
adc
push
loopne
add
loopne
ret
xor
and
xchg
and
or
dec
popa
jmp
xchg
js
mov
aaa
jne
lret
mov
rcrl
sbb
xchg
sbb
inc
and
push
stc
mov
iret
lds
push
adc
fimull
adc
xchg
gs
enter
fsubl
add
in
test
shrl
sub
sub
mov
cmp
ret
je
je
xchg
test
xchg
lea
out
xchg
pushf
inc
je
les
sahf
fwait
jbe
xchg
fnstenv
scas
loope
cmpsb
push
mov
fmull
insb
and
xchg
and
in
and
push
arpl
and
push
outsb
and
xor
fcmove
cmp
xchg
jp
movsb
addb
or
jns
fldcw
cmp
psubusb
mov
je
cld
add
cmp
mov
js
push
xlat
shlb
xlat
fidivl
ljmp
in
mov
enter
sub
mov
bound
in
xchg
sub
pop
mov
sbb
jmp
jae
cld
repz
cmp
add
gs
mov
xor
xor
test
dec
mov
scas
dec
fldl
or
xchg
jmp
les
adc
cmpsb
cmp
cmp
inc
ds
fsubl
insl
xorl
mov
hlt
rorl
cmp
cmp
xor
xchg
xorl
sbb
lds
jge
mov
cmp
xor
aam
in
add
scas
dec
lods
mov
mov
cmpb
push
in
push
cli
ds
jo
dec
inc
and
jmp
dec
cmc
jmp
inc
or
ss
xchg
cmp
add
add
dec
mov
pop
les
adc
xchg
inc
cli
adc
flds
xlat
fdivl
data16
in
fcoml
sbb
jp
cwtl
fnstcw
cwtl
jp,pt
cwtl
or
or
jbe
test
hlt
xchg
mov
jnp
jne
mov
push
loopne
pop
repz
out
call
dec
repnz
aaa
push
ss
sbb
and
jne
xchg
sahf
jne
xchg
rorl
stc
mov
jbe
cmp
pushf
dec
cmp
xchg
sbb
int
das
bound
xchg
ret
test
pop
inc
enter
gs
bound
in
pop
add
sub
scas
dec
and
mov
xlat
cmp
and
in
cmp
aaa
dec
mov
xchg
mov
fs
pop
mov
pop
and
mov
or
gs
add
pop
fwait
leave
xchg
aas
daa
negb
mov
push
mov
inc
pop
in
inc
jmp
cmp
filds
cld
cmpsl
and
loopne
jno
dec
fs
enter
cpuid
mov
nop
incl
test
xor
popf
add
cltd
mov
ret
loope
sbb
inc
mov
jns
jmp
dec
addr16
jns
out
popf
ret
jne
xchg
cmp
ret
xchg
stos
mov
sbb
jp
cwtl
ret
jno
xchg
mov
jbe
std
addb
fiaddl
rorl
and
dec
imulb
dec
sahf
inc
dec
in
inc
cmp
and
mov
in
das
xchg
adc
xor
xlat
lea
add
xlat
in
cltd
outsb
xlat
std
jae
xlat
movsl
jae
clc
mov
cmp
or
sbb
mov
aam
cmp
in
add
cmp
fmull
push
inc
int
in
cmp
adc
jmp
loopne
inc
scas
repz
faddp
imul
sarl
jb
fucom
inc
add
xchg
sbb
enter
pop
into
mov
and
cwtl
sbb
jp
xchg
pop
push
insl
ds
jnp
pusha
fcmovnb
xchg
and
stos
cld
mov
mov
adc
cld
pusha
inc
out
das
mov
add
aaa
sub
mov
loope
bound
xchg
mov
imul
les
filds
fistpll
pop
ljmp
jle
adc
pusha
jp
fcmovbe
and
pop
lahf
int3
enter
and
mov
sbb
dec
pop
scas
lock
lret
xorb
testb
cmp
insl
sbb
add
mov
push
mov
xor
nop
xlat
push
rol
testl
push
cmp
xorb
dec
xchg
or
inc
xlat
mov
xlat
inc
jae
xlat
pop
dec
mov
addr16
pop
popf
out
adc
sbb
xor
les
jl
push
leave
test
pop
lcall
in
hlt
xorl
in
arpl
loope
adc
jae
ret
mov
add
enter
push
pop
xlat
pusha
dec
lahf
lods
cmpsb
mov
and
sbb
loopne
add
and
and
out
andl
dec
adcl
es
scas
inc
lods
pushf
mov
add
or
sub
mov
rorb
xchg
lock
adc
insb
jbe
xchg
add
xchg
pop
jbe
ss
add
mov
aaa
dec
loopne
mov
cmp
mov
rcll
inc
xor
int
cs
or
testl
inc
shr
jae
xor
pop
aaa
cmp
lods
shrb
and
xchg
sahf
pushf
push
and
inc
mov
int
lcall
into
test
dec
xor
mov
inc
dec
icebp
int3
cmp
out
inc
pusha
call
adc
mov
fstps
jp
jae
mov
ds
movsb
test
outsb
sbb
in
jns
xlat
ret
stos
les
sub
dec
out
call
movsl
cmp
out
pop
call
sbb
jnp
arpl
test
imul
aaa
xor
sbb
les
jbe
xchg
fdivs
adcb
les
fidivrs
cld
mov
in
outsb
test
insl
in
xchg
pop
call
pop
das
into
int
das
int
das
dec
aas
stos
out
dec
fnstcw
cwtl
push
jp
cmpb
inc
inc
jns
imul
inc
arpl
cld
in
outsb
cmpsl
lock
cwtl
mov
jae
sub
les
or
adc
push
cmp
lahf
xor
mov
push
loopne
add
xchg
ljmp
or
dec
shlb
les
in
lds
push
mov
lcall
enter
in
insb
loopne
add
sarb
punpckhwd
cltd
hlt
mov
fmul
jo
dec
stos
and
push
addb
dec
ret
fwait
mov
xchg
sub
xchg
cmp
cmp
mov
cmc
scas
loopne
lods
sti
aas
pop
adc
testb
sbb
andb
adc
and
jno
inc
push
rcl
lods
xchg
mov
mov
imul
loopne
dec
bound
xor
test
xchg
scas
jns
sbb
repnz
xor
sbb
pop
pop
mov
mov
sbb
mov
das
adc
mov
sbb
and
sahf
sub
scas
cs
cmp
xchg
test
cwtl
cmp
xchg
inc
and
adc
jo
cmp
popf
jae
xlat
aaa
pop
shll
jo
xchg
inc
push
inc
in
loope
xor
shlb
fcmovb
and
xor
xchg
sub
jp
dec
xlat
mov
dec
movsl
lods
inc
sarb
decl
imul
push
pop
mov
dec
aaa
mov
xor
mov
in
add
int
das
int3
sub
in
adc
ljmp
mov
mov
jae
out
pop
add
fisttpl
fcoms
imul
cmpsl
cmp
adc
add
roll
loopne
add
loope
xchg
add
xchg
out
xchg
iret
add
decb
pop
pop
ret
mov
stc
sbb
andl
push
mov
xchg
inc
jl
add
aaa
inc
insb
mov
mov
call
jno
xor
clc
jae
xlat
test
jmp
cmpb
lock
pop
cmpsb
dec
xor
test
jl
lcall
push
cs
sti
cld
or
add
add
push
xor
ss
ret
push
cld
jno
daa
add
or
dec
xchg
imul
ret
or
cmp
rcll
cmp
mov
in
jae
push
invd
lahf
clc
dec
ss
call
mov
cmp
mov
roll
inc
jmp
sbb
jo
add
mov
cli
ljmp
fadds
aad
xchg
lahf
adc
pop
shll
push
test
and
pop
mov
xchg
mov
pop
stc
clc
out
adc
and
loope
xor
test
xchg
dec
xchg
mov
stos
aam
xor
cmpsl
enterw
icebp
sbb
cmp
xchg
mov
push
in
pop
fcomip
and
popf
sbb
shlb
add
faddl
sub
cmpsl
mov
insb
dec
sub
test
negb
and
mov
dec
inc
es
ja
data16
adc
add
fistpll
cmp
loopne
push
inc
sbb
jp
cwtl
pop
popa
push
xor
dec
addr16
jne
orl
and
or
call
jecxz
push
popa
push
sbb
je
repnz
ret
xor
inc
in
push
and
sbb
jecxz
in
inc
int
das
pop
int
lcall
mov
sarb
or
cli
movsb
das
dec
push
xor
inc
fcoml
lods
pop
pop
and
mov
movsl
jns
sbb
popf
scas
cmp
mov
leave
xor
jo
sbb
js
sub
cmpsl
jb
push
add
or
push
call
int
daa
xor
or
cmp
adc
jmp
hlt
std
mov
xor
jp
cwtl
jmp
push
out
sub
loope
addb
mov
sbb
inc
jo
int
das
std
imul
adc
subl
mov
adc
and
dec
jnp
adc
loopne
xchg
mov
mov
je
xchg
sahf
xorl
push
das
nop
xor
sbb
mov
mov
jne
les
and
inc
mov
testl
test
dec
pop
mov
pop
mov
cmpsl
pop
adc
sbb
into
dec
sub
inc
lret
rorl
andb
xchg
icebp
das
adc
xchg
int
in
aad
sbb
jne
out
mov
mov
sub
mov
loopne
shrl
jbe
push
lea
out
pop
sbbl
popf
aam
xchg
xlat
cmp
xlat
add
in
fwait
pop
aaa
hlt
into
xor
jae
push
clc
pop
and
sahf
sub
mov
pop
add
loope
das
mov
rorl
xor
and
in
ss
jbe
nop
in
popf
iret
and
stos
cmp
loopne
dec
test
push
jecxz
lock
test
push
pop
hlt
mov
pop
scas
leave
xchg
pop
mov
add
mov
iret
dec
lea
inc
movsb
mov
cmp
sbb
mov
fs
popa
in
lcall
jne
or
and
in
sub
repz
rolb
fcomps
cmp
cwtl
mov
popf
cmp
repz
inc
in
push
inc
lret
or
mov
sbb
inc
popf
scas
sub
push
dec
mov
les
jne
rolb
jae
shrl
jge
out
rolb
arpl
rclb
enter
outsl
mull
cld
in
aad
mov
adc
icebp
fs
repnz
or
mov
imul
int3
negb
mov
sbb
call
jb
mov
dec
nop
lret
repnz
cmp
jae
mov
cmpsl
data16
repz
iret
data16
push
sub
mov
fbld
mov
loope
imul
arpl
xor
lret
add
or
std
mov
nop
or
sbb
jnp
shr
push
lods
xchg
sub
lods
bound
popf
iret
sub
mov
lcall
in
mov
addr16
dec
pop
xchg
xchg
sbb
fsubrs
fnsave
adc
es
rcll
jb
mov
js
pushf
je
mov
jge
aaa
jae
or
mov
jbe
hlt
movsl
xor
divb
daa
andl
sbb
into
and
jno
cwtl
sub
lock
je
inc
xchg
icebp
lret
lods
push
pusha
push
aaa
adcb
xchg
dec
dec
ret
outsl
bound
mov
jno
loop
push
in
xor
pop
lods
insl
divl
xchg
scas
cmp
mov
sub
mov
into
or
rep
dec
popf
subl
or
arpl
cmpsl
iret
jae
sbb
sbbl
sarl
mov
shlb
cs
pop
jno
add
mov
ja
mov
lea
cmp
add
pop
ss
jge
mov
inc
mov
sbb
arpl
mov
rcll
call
je
and
lods
pop
mov
out
cs
push
in
test
shll
mov
sbb
cmpsb
jne
mov
repnz
mov
adc
shrl
inc
and
clc
push
cmp
aas
and
jae
jo
lret
rcll
test
adc
xchg
imul
shlb
and
xor
iret
or
mov
ljmp
iret
test
xor
shll
stos
dec
fnstcw
or
dec
push
dec
lds
xchg
sub
mov
and
mov
xchg
sbb
adc
mov
mov
push
push
push
jb
mov
notb
push
jmp
sbb
xor
jmp
xor
jl
sub
mov
push
aas
push
nop
and
addb
or
mov
xor
jne
xor
leave
aam
xchg
mov
xchg
xchg
xchg
mov
mov
je
aam
subb
out
movsl
data16
lret
mov
outsb
lret
js
imul
sub
imulb
push
int
pusha
lahf
out
int3
gs
gs
bound
and
fdivrl
std
jae
push
lods
mov
dec
std
fimuls
xor
repz
bnd
inc
jb
mov
sbb
inc
jmp
jp
inc
mov
inc
ret
ja
mov
stos
xor
ret
idivl
xchg
arpl
sub
xchg
out
and
mov
insl
xchg
jne
inc
test
mov
push
dec
shll
gs
int
inc
jg
mov
movsb
mov
and
sarl
pop
mov
cmp
mov
lods
stos
sub
es
sbb
bound
sbbb
xor
xor
decl
mov
loope
pop
push
ret
insl
sbb
jmp
sbb
cmpsl
cltd
cmpsl
adc
jnp
adc
pop
dec
cmp
imul
popf
cmpsl
jne
roll
in
xor
inc
push
popf
xchg
test
into
xlat
and
inc
mov
sbb
cmp
pushf
sub
sahf
push
enter
in
fimull
dec
lock
and
int3
stos
inc
xor
mov
jns
mov
dec
divl
dec
dec
mov
movsl
push
imul
aas
stc
push
push
mov
aaa
hlt
bound
sub
jecxz
sub
cmpsb
adc
je
mov
mov
out
xor
push
or
popf
jo
pop
ljmp
push
lods
jne
xor
dec
ss
inc
mov
inc
dec
push
inc
inc
insb
sbb
cltd
push
dec
iret
clc
gs
test
xchg
pop
push
mov
js
xor
xchg
pop
inc
push
subl
add
add
add
pop
sub
sub
shl
mov
test
adc
shl
not
cmp
and
cmp
bts
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
sub
neg
adc
sub
sub
adc
neg
xor
jmp
lcall
ret
or
adc
test
xor
sub
shl
adc
dec
jmp
lcall
xor
add
add
pop
xor
xchg
push
bswap
test
btr
not
not
cmp
test
cmp
xor
bsf
call
lcall
incl
ret
neg
sub
and
cmp
sub
cmp
adc
adc
cmp
jmp
lcall
btc
and
cmp
dec
or
add
cmp
test
shl
mov
mov
xchg
push
push
xchg
dec
add
add
call
sub
neg
shl
adc
mov
btc
adc
test
bswap
add
mov
bt
bsf
or
dec
adc
xor
bt
and
mov
shl
sub
xchg
mov
sub
shr
shr
and
cmp
cmp
xor
jmp
lcall
ret
or
adc
bt
cmp
and
btc
btc
shl
and
call
lcall
add
xorl
pop
xor
xchg
push
neg
sub
add
adc
mov
mov
adc
neg
jmp
lcall
stc
add
xchg
ret
neg
sub
sub
movsbl
bt
cmp
cmp
sub
add
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
adc
mov
sub
cmp
bt
adc
add
jmp
lcall
push
add
adc
out
xor
dec
add
shr
xor
adc
add
mov
shl
adc
cmp
adc
btc
add
bt
sub
call
lcall
add
mov
sub
add
not
add
btc
bts
mov
call
lcall
push
add
stos
jmp
nop
xor
mov
sub
out
and
cmc
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
sub
cmp
xor
mov
shr
mov
and
btc
call
lcall
add
mov
not
test
btr
shr
shl
adc
cmp
shl
jmp
lcall
rorb
pop
dec
sub
test
xor
adc
mov
adc
xor
btc
bsf
shr
sub
and
sub
adc
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
mov
shl
btr
xor
adc
adc
push
mov
bt
shr
test
cmp
neg
xor
bts
bsf
add
cmp
xor
or
bts
test
neg
bswap
and
bts
add
mov
shl
not
cmp
adc
bsf
bts
add
dec
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
dec
cmp
bt
bts
test
bswap
cmp
neg
and
call
lcall
add
shr
inc
shr
and
sub
and
cmp
or
mov
add
xor
movswl
xor
test
test
add
sub
mov
xor
cmp
neg
bts
add
xor
sub
and
call
lcall
mov
add
shl
btr
mov
dec
shr
cmp
not
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
add
btc
shr
test
test
test
shr
cmp
or
shl
btc
bsf
bsf
sub
dec
jmp
lcall
btr
dec
bsf
test
and
adc
inc
mov
add
xor
add
adc
not
shr
test
shr
xor
call
lcall
add
and
xor
adc
and
mov
adc
btr
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
mov
or
bt
test
bsf
or
bts
inc
cmp
sub
mov
bswap
cmp
shr
add
test
bts
bts
bts
movswl
mov
sub
sub
bsf
cmp
test
neg
mov
add
add
cmp
bts
btc
cmp
add
and
or
bsf
btr
lea
inc
cmp
jne
shr
mov
adc
or
bt
add
test
and
add
cmp
or
movswl
test
mov
shr
and
inc
call
lcall
je
sub
btc
neg
sub
bts
add
bsf
shr
sub
mov
or
and
neg
xor
inc
or
cmp
mov
sub
call
lcall
mov
shr
mov
bt
shl
movzwl
sub
bts
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
adc
add
bts
btc
sub
bt
or
xor
call
lcall
inc
cmp
mov
btc
and
test
test
test
cmp
bts
add
bts
movzbl
adc
btc
btc
and
add
jmp
lcall
shlb
scas
or
shr
neg
or
shl
mov
add
test
not
adc
or
btr
add
shr
and
inc
call
lcall
add
dec
and
movsbl
adc
btc
cmp
and
test
inc
push
pop
inc
add
loop
btr
shr
bsf
neg
mov
add
movzbl
or
inc
push
decl
mov
add
shl
bts
sub
bsf
neg
mov
sub
cmp
call
lcall
jmp
loopne
lods
btc
bsf
test
xor
add
or
add
dec
push
shll
sub
and
shl
movzwl
dec
and
or
adc
inc
push
adc
xor
dec
or
cmp
and
adc
sub
mov
adc
adc
adc
dec
bt
adc
and
btr
push
push
pop
add
add
call
mov
adc
adc
shr
add
movzbl
shr
add
xchg
bt
adc
btr
add
and
cmp
sub
mov
shl
add
xor
bsf
mov
inc
shl
and
call
lcall
mov
icebp
lods
fwait
btc
bsf
btr
cmp
adc
movzwl
add
sub
adc
adc
btc
test
cmp
xor
call
lcall
sarl
cmp
and
shl
movswl
add
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
dec
test
sub
and
btr
test
xor
inc
add
mov
test
shr
add
sub
shr
call
lcall
mov
rolb
neg
and
bt
mov
mov
cmp
add
add
cmp
btc
and
dec
shr
cmp
bt
cmp
cmp
je
shr
add
adc
xor
sub
adc
adc
add
or
xor
bsf
shl
bt
cmp
and
bts
call
lcall
bts
and
mov
test
adc
mov
sub
sub
or
neg
or
add
cmp
btr
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
bt
movzbl
btr
test
cmp
adc
mov
adc
push
decl
mov
add
add
dec
mov
adc
sub
adc
sub
push
decl
mov
add
test
shl
not
adc
test
adc
test
bt
add
test
test
test
inc
add
test
mov
neg
jmp
bts
test
xor
shr
or
add
not
mov
mov
bsf
test
add
or
xor
test
dec
mov
bt
and
or
cmp
cmp
mov
not
xor
mov
add
or
inc
add
cmp
btc
test
bts
neg
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
bt
or
btc
shr
sub
or
bts
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
cmp
bts
btc
or
movswl
and
or
add
and
push
push
shr
test
adc
not
movzbl
cmp
neg
or
push
sub
mov
btr
bts
and
bsf
bts
add
adc
or
btr
mov
mov
movzwl
btr
sub
mov
and
inc
mov
call
lcall
js
rcr
cmp
or
shl
adc
xor
test
lea
adc
xor
neg
neg
add
and
and
or
mov
movzwl
movzbl
bsf
btc
add
inc
bt
neg
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
jmp
movb
xor
cmp
sub
test
xor
sub
mov
bts
sub
dec
bsf
btr
and
add
bts
push
cmp
sub
and
shr
neg
sub
mov
push
and
btc
shr
bt
add
cmp
mov
inc
movswl
shl
push
mov
bsf
xor
mov
shl
mov
sub
dec
call
lcall
mov
and
and
add
btr
mov
and
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
test
add
sub
add
sub
sub
btr
btr
call
lcall
sub
mov
adc
neg
btc
add
test
add
mov
dec
add
bsf
mov
and
bt
sub
and
mov
cmp
and
call
lcall
mov
mov
not
test
btr
and
xor
shr
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
test
add
add
push
out
popf
jmp
subl
xor
dec
add
xor
cmp
sub
paddsw
pop
lcall
mov
mull
or
or
lahf
add
pop
dec
cmp
imul
fbld
lret
add
std
and
in
mov
mov
xor
cmp
push
cli
add
jle
xchg
push
icebp
shr
pop
xchg
repz
mov
jg
in
or
xchg
cld
mov
jo
push
add
rcrb
adc
push
xlat
add
xchg
hlt
pop
sbb
cli
into
sub
pop
cmp
push
inc
call
xchg
or
ror
test
add
clc
xlat
lcall
fmull
out
mov
movsb
sbb
push
add
xor
add
adc
sbb
or
push
mov
add
lahf
jmp
and
aad
jp
call
pop
add
dec
inc
sbb
xor
inc
aaa
cmp
dec
push
popf
pushf
inc
popl
xor
push
push
dec
pop
notb
push
clc
dec
push
inc
xor
adcl
dec
sbb
pushf
cmp
push
xchg
cmp
adc
jbe
jne
aas
xor
outsl
jle
dec
push
add
ss
push
push
inc
jg
repnz
dec
inc
or
pop
fsubs
sub
cmc
and
inc
pop
or
test
rclb
inc
dec
inc
repnz
pop
dec
dec
push
cmp
push
cmpsl
xorl
ds
enter
inc
sub
push
inc
aad
cmp
pop
mov
push
pop
sbb
mov
cmpl
push
inc
lret
inc
cmpsl
aas
or
push
inc
push
xchg
add
hlt
ss
notb
inc
ret
jle
add
cs
add
inc
insb
outsl
jae
cmp
mov
addr16
popa
outsb
into
popf
cld
sahf
jae
cmp
jns
jne
cmp
cli
js
sbb
imul
bound
sbb
or
push
inc
scas
cli
push
and
sub
loope
add
or
cld
and
push
imul
movsb
push
leave
add
push
idivl
jmp
cmp
call
and
jmp
push
cs
adc
imul
sub
mov
or
cwtl
aam
outsb
repnz
push
outsb
add
jb
and
and
jo
push
outsl
xor
jbe
jbe
test
inc
xchg
jmp
movsb
enter
pushw
push
decl
jne
adc
xchg
inc
cs
test
xchg
add
add
pop
mov
push
push
add
push
push
je
or
add
inc
push
call
sbb
add
pusha
adc
insl
mov
xlat
mov
popa
addr16
mov
pop
outsl
add
and
xchg
je
or
loope
negl
icebp
add
or
fs
repz
pop
je
daa
int
iret
out
vpabsw
pop
sub
push
js
mov
fs
xor
push
in
aad
push
dec
popa
jns
mov
xchg
jecxz
or
cmp
cs
add
add
sbbb
push
dec
inc
push
push
inc
push
inc
dec
pop
mov
xchg
dec
test
inc
daa
add
fadds
