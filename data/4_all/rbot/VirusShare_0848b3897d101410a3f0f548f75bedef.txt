add
mov
cs
stos
mov
in
mov
shlb
xchg
test
and
mov
lahf
mov
jne
inc
mov
jbe
cmpsl
push
push
xchg
fwait
dec
sbb
pop
cmpsb
dec
stos
push
xchg
adc
or
adc
testl
push
jge
ljmp
in
jne
jns
outsl
or
aaa
jo
and
gs
movsl
xor
xchg
stc
or
fldl
jb
mov
insw
ljmp
ljmp
mov
inc
out
divl
xlat
insl
inc
pop
mov
les
adc
test
inc
ja
xor
jnp
xchg
fbstp
xorl
inc
pop
popw
or
mull
mov
pop
cmp
ficoms
fsubl
idivb
mov
repnz
test
dec
adcb
jae
pop
pop
repnz
mov
jb
inc
nop
xchg
adc
in
push
push
out
mov
add
cmc
ret
mov
std
daa
arpl
sysenter
and
pop
xchg
stc
test
leave
and
lods
adc
clc
sub
mov
inc
repz
push
mov
mov
and
gs
or
jae
and
cs
scas
xor
jne
leave
fwait
jmp
xchg
addr16
pop
sbb
xchg
sub
test
nop
push
xorb
or
das
jno
mov
mov
mov
roll
jns
outsl
insl
mov
push
imul
cmpsb
sarb
xor
mov
mov
push
push
dec
leave
or
sbb
mov
fimull
jne
sahf
adc
stos
out
pushf
out
pop
inc
pop
outsb
les
dec
popf
and
ja
mov
mov
mov
mov
das
dec
rclb
or
pop
leave
je
jp
cwtl
mov
sbb
mov
add
pop
jb
sbb
mov
jo
mov
sub
adc
sbb
rcrl
jne
inc
lret
jnp
cltd
jle
and
push
push
js
sub
jge
cmp
push
cmp
rclb
push
xchg
mov
push
dec
adc
mov
pop
sbb
sub
or
inc
loope
cmc
xchg
pop
add
enter
add
and
mov
or
cs
inc
cwtl
popf
imul
xchg
pusha
in
gs
xchg
das
jnp
mov
push
lcall
out
mov
pop
pushf
push
imul
add
std
xchg
popf
inc
jae
cmp
mov
jne
mov
jmp
mov
or
or
les
loopne
sbb
sub
pop
xor
nop
jle
fistpll
or
lcall
fsts
fldenv
xor
jns
inc
cmp
push
add
xchg
movsl
and
cs
pop
jp
mov
sbb
pop
mov
sbb
mov
out
daa
imul
push
repnz
popa
adc
out
pop
lods
xchg
mov
ds
pop
aam
add
xchg
cmp
sbb
sub
sbb
nop
call
popf
lock
sbb
out
mov
mov
dec
out
pop
fidivl
loope
out
inc
repz
test
loopne
mov
inc
cmp
lcall
outsl
out
gs
test
addr16
lock
int3
push
adc
aad
outsl
pop
dec
insb
stc
out
pop
inc
cli
idiv
mov
push
stos
pushf
fidivl
cwtl
pop
adc
push
dec
push
sbb
jmp
xor
aad
xlat
pusha
add
cmp
daa
lods
imul
int3
stos
sbb
cmp
sahf
in
sti
and
shl
add
mov
inc
pop
iret
pavgb
ljmp
ja
pushf
xor
lds
jg
test
sti
push
pop
fwait
rorl
aas
xlat
sti
sub
in
sub
in
add
pop
sbb
scas
mov
jno
mov
call
stc
xchg
adc
xchg
mov
repz
dec
jb
or
stos
mov
adc
sbb
in
fisttpll
ret
push
sub
icebp
rcl
in
imull
test
rclb
es
imul
sbb
pop
mov
jbe
stos
ffreep
inc
cmp
or
xchg
cmp
add
add
dec
sub
sbb
rorl
or
push
jnp
xchg
ud2
add
xchg
inc
add
scas
js
repz
pop
mov
leave
pop
mov
ret
inc
sbbl
sub
xchg
jbe
sti
jns
push
cmp
mov
dec
push
mov
rcrb
mov
pop
mov
push
push
mov
outsl
jle
push
sbb
push
or
mov
scas
or
cwtl
dec
ja
inc
pop
xor
hlt
cmpsl
mov
and
mov
jns
mov
cmpsl
dec
inc
cmc
mov
icebp
ficompl
out
or
and
sub
add
ftst
sub
mov
test
jae
repz
insb
mov
enter
sub
sbb
aaa
sub
xchg
in
in
inc
add
fbstp
adc
ud0
xchg
adc
mov
sub
push
out
xchg
mov
popf
and
inc
bound
xchg
cmp
dec
dec
punpcklbw
mov
outsl
add
mov
in
pop
in
sub
push
sub
popf
bound
rolb
add
add
ja
dec
dec
repnz
mov
test
scas
rsqrtps
fstl
sbb
pop
data16
adc
das
fisubrs
into
leave
icebp
enter
aam
adc
mov
cmp
in
out
in
mov
or
outsb
pushf
les
jbe
pusha
repz
iret
xchg
scas
gs
push
lret
xchg
out
and
fcomip
push
shl
ret
jmp
leave
int
je
scas
daa
insb
lock
jecxz
jns
xorl
aas
repnz
jns
daa
jno
and
ds
aaa
cli
shll
into
ret
lret
mov
xchg
imul
push
cmp
sbb
test
mov
mov
sub
jne
pop
push
js
add
cli
lahf
stos
pushf
xchg
xchg
mov
mov
les
movsb
addb
pop
shr
dec
xchg
stos
dec
aaa
outsl
cmp
mov
pop
int3
loope
cmp
ds
lret
jp
jmp
and
push
push
imul
push
and
push
dec
mov
adc
mov
imul
adc
fwait
clflush
push
jb
out
aam
pop
dec
stos
mov
dec
in
mov
sahf
xor
clc
shlb
jecxz
pushf
pop
repnz
insb
insl
mov
mov
clc
insb
push
inc
in
xchg
mov
mov
dec
ret
push
fsubs
sub
ljmp
or
mov
adcb
jmp
in
je
prefetch
or
outsl
icebp
dec
dec
into
jae
pop
pusha
arpl
aaa
mov
inc
mov
enter
jle
ljmp
sub
icebp
dec
in
mov
xor
sbb
cmc
dec
sub
push
cmpl
cmp
cmovns
pop
fcmovnb
aas
mov
das
mov
xor
iret
xor
and
mov
xchg
vpsrlw
xchg
ljmpw
pop
outsb
mov
ja
xchg
push
pop
push
mov
pop
xlat
mov
dec
xchg
imul
daa
outsl
test
in
repnz
ds
pop
cmc
pop
bound
scas
xchg
stc
inc
sub
shlb
sub
aas
lret
addr16
lods
inc
mov
or
das
shl
pop
and
mov
adc
dec
aad
aaa
mov
shrb
push
arpl
pop
mov
jecxz
or
mov
xor
dec
xchg
mov
out
mov
jp
and
enter
sub
push
and
mov
inc
repnz
sub
xchg
fs
dec
adc
lock
cmp
inc
andb
ss
mov
jmp
mov
in
negl
sbb
mov
lock
shl
or
cwtl
jnp
cli
fisubrl
test
mov
pop
dec
fidivs
inc
out
inc
pop
inc
fwait
sbb
jb
nop
adc
cmp
dec
push
nop
jnp
cltd
and
or
sbb
and
push
popa
adc
pop
ret
pop
and
lods
icebp
adc
pushf
ss
dec
push
pop
nop
fcoms
cmp
push
fwait
pop
loopne
bound
push
rep
mov
xchg
xlat
clc
jno
add
push
ret
jbe
adc
lds
push
cmpsl
mov
jno
jbe
jp
popa
add
gs
dec
sarl
sub
dec
add
mov
jmp
aam
pop
pop
xchg
dec
test
fsubrs
ljmp
mov
ret
mov
inc
adcl
cmp
lret
dec
cmp
cmc
jo
test
addb
add
test
dec
icebp
stos
insl
das
nop
stos
xchg
and
mov
jecxz
cpuid
fcomip
fldt
into
pop
xor
push
cmpsl
sbb
dec
mov
or
mov
sbb
sarb
int3
pop
dec
cltd
mov
mulb
sub
sti
mov
out
nop
sbb
psubsw
xchg
sub
mov
popa
mov
fistl
outsb
arpl
sahf
inc
test
xchg
adcl
pop
lahf
or
into
adc
mov
adc
adc
mov
jno
leave
sub
faddl
push
push
mov
arpl
cmpsb
jl
sub
shlb
mov
rcl
jecxz
aad
xor
push
lahf
rorb
in
jns
clc
ss
dec
mov
and
pop
shl
lods
setae
repnz
arpl
dec
ret
or
shlb
jae
dec
xor
pop
adc
ja
push
mov
cltd
adc
jle
cmc
jecxz
scas
jp
in
fstpt
dec
cmp
or
cmp
clc
xchg
push
cmp
in
pop
push
lcall
roll
not
dec
xlat
xchg
mov
or
or
fisttpl
jbe
test
jl
das
aaa
mov
push
mov
in
test
lahf
inc
push
fdivrp
dec
push
movsl
sub
ss
xchg
pop
pop
push
dec
and
lea
loope
jnp
and
outsl
filds
aaa
mov
nop
outsb
jns
daa
mov
sbb
jb
in
xchg
rcrl
addr16
repz
in
aad
iret
adc
push
in
pop
jmp
aaa
mov
call
lds
cmpb
inc
xor
cmp
cmp
test
leave
xchg
mov
mov
push
jp
push
push
not
inc
rorb
sub
stos
mov
sub
mov
dec
lret
push
xchg
mov
cmp
insb
xor
test
jnp
test
push
mov
sub
fs
adc
les
lods
insb
mov
cmp
mov
addr16
mov
xchg
push
push
pop
loopne
pop
mov
test
jp
shll
fildl
fisttpl
mov
shlb
pop
pop
jbe
pop
and
hlt
lcall
xor
sub
adc
roll
jl
in
sbb
cltd
sti
xchg
xchg
adc
mov
iret
test
mov
push
mov
into
pushf
out
in
jle
xor
push
in
loopne
xchg
mov
push
cs
add
pop
adc
cltd
test
xchg
dec
stc
mov
cmpb
les
sti
jbe
int3
data16
mov
cmp
out
stos
lock
and
mov
sbb
dec
fisttps
fnstcw
fcomps
adc
mov
mov
jb
test
cmovo
jmp
xlat
sub
xlat
subl
fisubl
jmp
stos
mov
push
aam
push
ja
test
or
mov
lods
mov
pop
dec
lret
sub
cmp
aas
adc
sbbl
enter
dec
es
lock
fwait
push
call
idivl
dec
cmp
cmp
jbe
dec
cmp
pop
enter
out
in
mov
popl
xor
or
pop
mov
mov
sbb
mov
int3
loopne
ja
dec
mov
in
rclb
cmp
test
in
adc
mov
inc
and
fiaddl
mov
in
scas
daa
and
rolb
lahf
gs
jge
dec
xchg
ficompl
mov
sti
mov
ficomps
sub
mov
lock
mov
pop
mov
ficoml
xor
iret
push
xchg
push
mov
push
jno
mov
stc
cmpsl
sbb
pop
and
inc
mov
lret
cltd
iret
push
subb
dec
int3
shll
jmp
bound
test
push
in
xor
sub
cld
in
jns
mov
jne
dec
dec
cli
mov
or
in
xor
and
fildl
jg
cmp
cmp
mov
ss
stc
insl
fs
cmp
int3
lret
mov
pop
or
dec
mov
pop
push
add
inc
out
popf
cwtl
cltd
or
cmp
jbe
lcall
rcrl
mov
or
jb,pn
add
inc
cs
push
pop
sbb
pop
rcrl
xor
and
ror
sti
mov
fs
ja
push
pop
repnz
mov
lds
fwait
dec
inc
cwtl
rol
ja
fdivr
mov
jb
bound
sub
mov
jne
push
loop
out
adc
fwait
mov
and
sbb
fs
aam
insl
or
jo
leave
push
popa
or
lds
dec
test
push
dec
and
sub
gs
fs
push
push
pop
push
pop
jne
int3
mov
xor
cmp
push
pop
and
test
xchg
out
cmpl
shlb
sub
int
xchg
mov
xchg
push
sub
cmp
in
dec
rolb
arpl
mov
nop
inc
inc
stos
rcl
mov
out
es
test
push
bnd
cltd
test
int3
lcall
stc
and
and
ss
pop
xor
mov
and
mov
push
mov
mov
jl
out
ja
adc
hlt
xor
loopne
mov
jle
add
adc
fcom
jle
mov
add
jecxz
cmpb
pusha
test
cmc
and
hlt
jge
push
mov
loop
and
jg
clc
std
fs
insb
insl
cs
insb
xchg
pop
or
xlat
pop
dec
pop
mov
jg
nop
loope
mov
pop
pop
loopne
sbb
mov
test
pop
sti
xchg
xor
xchg
push
push
xchg
movsb
gs
or
sub
jg
add
sbb
mov
pop
pushf
xor
mov
fisubs
mov
pusha
int3
outsb
daa
sbb
divl
fnstcw
cwtl
jl
xchg
leave
ja
int3
pop
js
jle
mov
pusha
sub
rorl
arpl
jecxz
mov
push
into
out
adc
lea
and
es
push
or
ja
int3
xchg
jl
push
push
xor
mov
cmp
out
xor
stos
adc
inc
push
dec
in
clc
and
inc
clc
insb
cmp
and
push
les
and
pusha
or
rolb
dec
shlb
pop
jbe
jmp
ds
xchg
stos
push
xlat
aas
jbe
fiadds
cmp
in
mov
inc
divl
push
dec
je
es
bound
bound
imul
mov
cltd
cld
mov
hlt
inc
xchg
add
jo
mov
rcrb
push
mov
sub
rolb
inc
xchg
mov
jno
push
pop
jp
adc
pop
fnstcw
mov
lea
cmp
lret
jmp
lods
fsts
leave
stc
cltd
mov
mov
sbb
mov
pop
inc
js
gs
outsl
mov
jb
or
dec
test
lods
inc
test
mov
add
pop
pop
filds
shll
icebp
or
push
jae
pop
popa
test
lret
arpl
rolb
dec
jmp
loopne
pop
popf
mov
clc
xchg
add
sub
sub
sub
cmp
or
ret
ds
fldl
adc
push
mov
ror
or
jne
sti
ss
ljmp
sub
ljmp
clc
xchg
in
mov
dec
lret
in
in
xor
mov
lods
cmp
mov
pop
mov
leave
ret
insl
and
jbe
sbb
dec
call
ret
ja
inc
and
inc
pop
ret
mov
cmp
aad
popf
adc
mov
adc
rcrl
mov
push
push
push
push
xchg
or
pop
mov
aas
xchg
rcrb
jb
movsl
fwait
or
dec
and
xchg
sub
ret
pop
mov
int
outsb
mov
add
xor
popa
xor
mov
jmp
mov
xor
ljmp
nop
xor
xchg
ljmp
mov
adc
movntps
pop
ds
inc
pushf
jmp
jb
test
mov
push
out
push
cmp
out
outsb
mov
mov
popf
sbb
clc
mov
and
fisttpll
fcmovnu
mov
fistpll
ljmp
hlt
dec
push
push
xor
popa
inc
imul
xchg
mov
out
jns,pt
dec
cltd
sbb
jle
int3
in
sbb
mov
sbb
int
lcall
add
push
add
ljmp
sbb
sub
repz
push
cmc
mov
mov
push
jle
call
lea
dec
xchg
inc
in
shlb
testb
or
mov
push
jg
xorb
mov
loope
shlb
movsb
add
sbb
inc
lret
mov
divb
xchg
in
xor
aaa
addr16
and
outsl
cmp
push
or
sahf
mov
xchg
aaa
dec
in
mov
addr16
test
mov
or
push
jns
arpl
adc
shl
adc
xchg
xchg
mov
ret
and
rcrb
mov
fs
in
pop
mov
pushf
cmpsb
ljmp
pushf
ja
rclb
add
push
iret
dec
xchg
xor
out
jle
xchg
test
xchg
dec
inc
out
testl
xor
inc
loop
mov
pusha
mov
pop
mov
insb
gs
into
and
xlat
mov
xor
inc
adc
flds
cmc
xor
aas
sub
cld
lret
or
std
in
adc
jle
mov
fisubrl
sbb
je
cmpsl
xchg
jo
pop
test
jmp
mov
cwtl
clc
pop
les
out
or
inc
shrb
ss
je
push
xor
pushf
stos
sbb
popa
or
adc
test
shl
sbb
push
ret
aas
xor
mov
or
pop
int
in
mov
repnz
fdivrs
cmp
and
or
cli
scas
jbe
or
scas
cld
movsl
xchg
mov
jmp
out
flds
sbb
jnp
bound
add
mov
mov
adc
cmpsb
xor
adc
cmp
loop
jp
xchg
lahf
les
aaa
pushf
stos
test
lret
xchg
add
and
in
in
mov
xchg
mov
lock
loopne
jbe
shll
mov
adc
fwait
repnz
sub
into
std
jbe
add
xor
mov
xor
mov
dec
mov
adc
cltd
lods
fwait
daa
mov
jg
les
xor
sub
lds
arpl
rclb
es
sub
cmp
mov
outsl
xor
icebp
mov
adc
test
xchg
test
pop
fcomps
test
push
mov
lret
xchg
and
mov
mov
fwait
repz
sti
mov
adc
jne
out
and
jle
lods
and
pusha
mov
dec
inc
fmuls
stos
hlt
jo
addr16
in
fistps
shrb
imul
rclb
testl
lret
sub
insl
sbb
iret
pop
or
dec
mov
cmc
jle
xchg
inc
out
lahf
jge
jae
sub
mov
jmp
pop
mov
cmp
cwtl
clc
add
fsubs
nop
mov
aam
lret
jo
arpl
fnstenv
pop
pop
jns
scas
sahf
sub
loopne
pop
je
inc
subb
shrl
ficoml
push
xchg
cs
pop
sub
mov
scas
out
sub
sbb
in
andb
jge
xor
push
mov
push
shlb
outsb
mov
outsl
cltd
mov
mov
je
rorb
cmp
out
dec
and
repnz
dec
inc
std
ss
ljmp
scas
out
negl
or
sbb
jno
cld
push
rcrb
mov
enter
out
nop
cmp
shl
mov
lahf
ljmp
roll
pop
cltd
inc
push
mov
or
dec
sti
dec
addr16
jnp
add
lahf
cmc
out
mov
sub
test
cmp
insb
xchg
pop
xchg
es
cld
mov
cmp
movsb
mov
cmpsb
adc
in
sbb
test
stos
jge
dec
dec
xchg
cmp
into
shlb
outsb
push
int3
add
insl
dec
pop
or
push
and
inc
jne
stc
and
ret
add
push
jno
cmp
cmpl
repz
inc
out
loop
or
mov
cli
imul
ret
sub
pop
andb
add
adc
xor
scas
push
jge
adc
int
addl
jecxz
fbld
dec
adc
testb
in
mov
xchg
pop
loop
jge
cmp
js
cmp
iret
jo
cmpsl
loope
sti
out
outsl
sub
sti
es
mov
aas
add
and
and
movsl
push
fldenv
dec
cmpsb
jmp
test
jge
aad
push
nop
lret
or
adc
mov
add
sbb
and
jmp
cld
cltd
rcrb
std
sbb
or
cmp
sub
sub
adc
ret
cmpsl
pop
inc
inc
lahf
dec
push
sub
push
inc
xor
or
xchg
jo,pn
das
cmp
ret
cli
shll
sti
cmp
ds
aaa
mov
nop
sbb
loop
xor
shlb
mov
ss
test
lods
push
stos
test
fcomp
fsubrs
movsb
lcall
scas
sub
outsb
sub
test
stos
pop
mov
scas
call
cld
pop
adc
insl
loopne
insb
std
mov
dec
imul
jg
test
ficoml
jmp
pop
push
and
jnp
roll
xlat
mov
xlat
out
loopne
ret
xchg
ret
loop
aam
mov
sti
popf
das
jb
and
sbb
popf
lret
negb
push
cmp
je
jo
mov
hlt
inc
mov
fs
out
cmpsl
aaa
pop
rcrb
mov
jecxz
mov
adc
dec
push
or
dec
cmp
cwtl
in
cmp
adc
pop
mov
dec
bnd
sub
cmp
jns
jae
pop
mov
jle
pop
cmpsb
jne
pop
xorl
popf
dec
movsl
shrl
lds
aas
sbbl
or
sti
and
push
inc
cmp
aad
ss
mov
mov
dec
xor
pop
and
and
mov
hlt
pop
xor
test
dec
mov
mov
xchg
push
push
jg
cmp
lods
int3
cwtl
inc
mov
bswap
pop
stos
fidivs
inc
mov
xchg
pop
out
sbb
push
cmp
push
sbb
pop
and
sub
rcrb
mov
int3
mov
stos
cmpsl
sbb
ljmp
fwait
sbb
mov
call
iret
push
sahf
jno
outsl
and
outsl
movsl
pop
loopne
mov
xchg
ljmp
inc
mov
cmp
inc
xor
adc
mov
xchg
cmp
sub
faddl
mov
dec
adc
ds
inc
call
cli
sbb
fisubl
xor
adc
test
add
or
mov
out
imul
sti
leave
je
and
shrd
lahf
lcall
in
clc
mov
fstpt
sarb
cmp
push
inc
xor
jns
or
jmp
pop
cmpsb
jbe
pop
int3
sbb
push
loopne
out
jae
into
mov
into
repz
stc
dec
push
cmp
inc
outsb
push
cmp
les
cld
mov
mov
icebp
push
in
arpl
dec
cld
push
mov
fdivr
outsl
xor
sbb
cli
cmp
xchg
mov
cs
imul
lds
arpl
cli
cs
jbe
jo
sbb
xchg
data16
lcall
and
dec
xchg
mov
test
shl
or
mov
rcrl
bound
sbb
stc
repnz
mov
and
js
inc
inc
xchg
mov
dec
mov
mov
cmc
pop
jo
rcrl
dec
mov
in
push
mov
icebp
lock
movsl
mov
dec
fisubs
mov
pop
push
ficomps
add
push
loope
cltd
mov
mov
icebp
scas
dec
cltd
stos
aaa
xor
idivb
orl
bound
mov
xchg
mov
mov
insb
sbb
lock
jne
les
shll
xlat
iret
aaa
fstps
into
cmpsb
xchg
and
add
daa
pop
jp
std
sar
js
rcr
les
jns
xchg
dec
or
pushf
push
xchg
outsl
jns
inc
cwtl
outsl
push
outsb
push
xor
aas
lret
and
roll
push
in
popa
jmp
mov
adc
ds
in
inc
or
cltd
pop
xlat
cmpsb
xchg
pop
loope
popa
push
jle
fistpll
shrl
jbe
hlt
lods
jl
and
lods
push
xchg
mov
inc
xchg
push
or
or
addr16
icebp
fcmovne
dec
gs
scas
divb
ret
rcrb
jl
push
mov
push
mov
xchg
lahf
cmp
dec
xchg
mov
subl
inc
shrb
mov
pop
dec
add
add
stos
adc
xor
aad
insb
mov
rcll
repnz
out
cld
mov
mov
mov
loopne
mov
fdiv
pmuludq
in
outsb
mov
add
data16
and
xchg
out
jl
pushf
aas
fnsave
fldt
popf
pop
jnp
repnz
jp
jmp
adc
and
fmull
fdivrl
mov
push
pop
mov
shl
dec
push
pushw
jecxz
inc
pop
cmp
xchg
nop
pop
popf
fadds
stos
icebp
dec
je
mov
pop
mov
cld
inc
push
aaa
jno
ljmp
push
push
lahf
pop
jo
sbb
lock
imul
and
nop
jle
into
xor
jb
test
or
shl
int3
sahf
into
push
xor
pop
call
out
jb
push
mov
mov
mov
pop
or
mov
pop
je
jcxz
aad
pop
testl
mov
fnstcw
out
pushf
or
push
in
cld
cmp
gs
jae
rcr
lock
pop
rcrb
dec
fistl
mov
adc
push
call
and
arpl
mov
stos
stc
jbe
sub
loope
fistpl
sub
and
mov
inc
push
cmp
scas
fwait
faddl
xlat
xchg
mov
popa
push
mov
loope
xor
and
push
add
push
pop
mov
lods
mov
cli
cmp
pop
rcrb
lods
jb
out
sub
jmp
dec
scas
xor
xor
arpl
fwait
negl
sbb
les
lods
loope
into
fdivl
push
xlat
add
out
mov
out
jl
test
fcmovnb
movsl
icebp
test
xor
dec
cmp
cmp
jg
pop
push
pop
push
bound
push
jo
cmp
movsl
jae
pop
imul
sbb
repnz
ss
or
dec
and
mov
cmp
mov
push
push
lret
or
mov
mov
push
dec
cs
push
push
and
sub
xor
pop
jns
cmp
xorb
xchg
in
mov
lods
mov
push
cltd
int3
bound
mov
or
push
dec
mov
pop
or
sbb
in
pop
cmp
mul
lock
sbb
cmp
das
int
out
cmpsl
insl
out
pop
xchg
push
cmp
jmp
in
test
fildll
and
adc
jnp
xchg
cmpsb
cmc
dec
nop
mov
inc
adc
inc
push
and
ljmp
jecxz
je
xchg
xor
daa
jmp
dec
loope
jle
inc
es
loope
inc
ja
bound
loop
cmpsb
cmp
movsb
adc
in
push
and
sub
loop
cmpsb
maxps
outsb
test
xor
jne
pop
repnz
xor
pop
scas
xchg
and
hlt
enter
adc
lret
insb
sbb
xchg
push
push
fistl
insl
jg
mov
stos
lock
sbb
frstor
mov
int
int3
lret
or
mov
aas
into
loop
pop
call
push
pusha
adc
unpcklps
inc
mov
add
sbb
test
fdivs
movsb
inc
leave
movsb
out
bsf
sti
jb
pop
repz
and
enter
arpl
push
or
data16
cmpl
je
imul
push
jb
stos
push
lea
ss
mov
cltd
dec
push
xchg
aam
xchg
rolb
imul
aam
sub
scas
fldl
push
mov
lods
push
cltd
pop
adc
sbb
push
lea
adc
iret
adc
addb
mov
push
push
gs
pop
loopne
sub
stos
push
daa
jns
jge
clc
scas
mov
loope
jo
add
pop
inc
dec
pop
jge
movsb
push
arpl
out
shll
inc
and
hlt
lods
mov
xchg
mov
mov
push
and
xor
add
sarl
jb
in
jns
dec
adc
fsubs
push
ficompl
cmp
push
mov
or
addr16
or
mov
lods
push
in
or
cmp
jecxz
cwtl
mov
in
fcmovnb
xchg
and
jo
push
movsb
jl
jp
ds
cs
imul
sbb
outsb
fadd
pop
and
lods
push
xor
jl
mov
mov
repz
ret
xchg
xor
sub
fnstenv
and
adc
adcl
jb
cs
mov
or
iret
or
pop
out
cmc
lds
xchg
les
xor
mov
push
nopl
pop
mov
pop
jecxz
inc
mov
mov
cmc
push
sbb
jb
mov
ss
sub
push
xchg
mov
xchg
in
xchg
sbb
sbb
sbb
mov
or
daa
cmp
add
icebp
mov
push
ret
inc
popf
movsb
adc
jb
xor
std
and
loop
lock
insb
int
sbb
out
popf
dec
xchg
pop
cli
es
aad
adc
xchg
push
iret
lret
xor
aad
jmp
pop
imul
ds
sbb
mov
jmp
jge
xlat
clc
jg
ds
popf
adc
mov
push
xchg
pop
xor
int3
cmp
cmp
cmpsb
pop
jno
or
lock
jmp
imul
imul
sbb
pop
adc
mov
jp
dec
sub
or
add
pop
pop
sbb
aad
shrl
dec
mov
inc
jp
scas
in
pop
out
dec
or
lahf
xchg
xor
lret
and
lock
repz
adc
mov
clc
les
clc
jbe
add
mov
ss
xor
xor
insl
ss
xor
jmp
xorb
jle
inc
movsl
das
fisubrl
popl
cs
insb
lret
mov
xor
xor
lds
roll
pop
aam
dec
mov
xor
int3
ret
sbb
mov
mov
jge
cld
shll
push
xchg
push
cmpsl
mov
pop
xchg
jbe
inc
mov
adc
xlat
mov
xor
sub
movsl
inc
roll
or
cmc
cmp
mov
pusha
hlt
lods
sub
and
cmp
sub
or
movl
push
jbe
ja
add
or
clc
xchg
hlt
ds
pop
mov
stos
leave
icebp
xchg
stc
dec
cmc
and
std
xor
xor
cltd
mov
nopl
out
push
inc
mov
loop
fneni(8087
daa
cmpsl
hlt
popa
shl
lods
addl
xchg
mov
outsb
adc
jg
icebp
or
ljmp
js
pop
stos
mov
jg
or
sbb
push
xchg
xchg
xchg
inc
add
sbb
jnp
xchg
mov
xchg
mov
fwait
gs
mov
and
inc
gs
or
xor
pop
repz
mov
xchg
mov
cmp
jbe
xor
mov
dec
rclb
rcr
outsb
mov
imul
adc
mov
in
stos
sbb
dec
pop
lds
pop
in
mov
dec
call
in
stmxcsr
and
push
jnp
dec
aaa
mov
or
aaa
popa
dec
inc
mov
or
mov
das
pop
idivl
mov
fmull
shl
cmpb
outsb
hlt
dec
push
mov
stc
gs
les
mov
lcall
test
mov
ficoms
pop
ljmp
xor
jbe
imul
push
xor
xor
xchg
mov
and
loope
gs
cmp
pop
jg
jae
cmpsl
jae
into
out
pop
mov
pop
push
int3
sub
add
sbb
pushf
sbb
movsl
mov
jns
call
mov
jp
push
adc
jge
dec
adc
inc
cwtl
pusha
push
xor
sbb
add
mov
inc
bound
lods
add
or
cmc
out
inc
mov
push
xchg
push
pop
out
roll
mov
dec
lods
out
sub
outsb
xchg
jecxz
hlt
scas
or
imul
fsts
xchg
xchg
cld
jnp
push
xchg
add
mov
dec
cmc
xchg
or
addb
out
outsl
insl
in
mov
push
jb
bound
fbstp
in
repnz
aas
xchg
lret
mov
push
cwtl
push
into
jne
int3
scas
pop
lret
pusha
inc
lret
xor
adc
dec
push
dec
out
inc
pop
sub
pop
hlt
popf
and
fldenv
movsb
sub
lods
push
push
jl
sub
call
cltd
imul
and
iret
mov
in
hlt
imul
shr
add
rorl
pusha
sbb
and
aaa
data16
bswap
mov
outsb
repz
and
add
fnstsw
sbb
test
add
mov
faddp
enter
sbb
cmpl
pop
movsl
hlt
add
add
push
xchg
mov
sbb
jns
pop
hlt
fimuls
jnp
pushf
dec
ret
lock
insl
ret
mov
pop
dec
fsubrp
sbb
cmp
sbb
push
mov
cmpsb
inc
pop
and
jp
outsl
outsb
sbb
pop
or
sahf
xchg
pop
jl
pop
cmp
xor
mov
nop
and
popf
mov
and
inc
scas
dec
mov
shl
loopne
shlb
sub
sub
and
inc
in
fidivl
xor
mov
xchg
clc
jle
in
push
or
mov
and
push
out
push
lods
leave
testb
sbb
jo
lcall
add
dec
mov
shll
push
leave
nop
fisttps
push
add
add
test
pop
test
movsb
mov
add
stc
inc
rorb
movl
loop
insl
psubq
sbb
repz
call
cvtps2pd
cwtl
jp
push
or
enter
mov
mov
cmp
adc
cmp
inc
xor
es
push
push
mov
adc
data16
aas
adc
pop
lds
stc
cmp
fimuls
or
lds
loop
sbb
ldmxcsr
dec
cwtl
ret
pop
enter
outsb
out
mov
cmp
xchg
inc
push
lret
jae
and
adc
xor
mov
scas
mov
pop
push
sbb
addb
loopne
sub
adc
adc
push
sbb
mov
mov
push
ret
dec
add
push
jne
std
sbb
repnz
addb
add
jp
movsb
cmp
add
test
or
mov
lret
add
cli
mov
mov
cwtl
jmp
sub
es
mov
lods
jno
lods
mov
lods
lods
lods
daa
inc
pop
sbb
out
out
rolb
repnz
xchg
adc
adc
std
icebp
inc
jo
lods
or
imul
add
inc
pop
bound
mov
sub
mov
jmp
scas
adc
sbb
aam
dec
jo
dec
cld
lds
out
pop
jb
jns
push
jne
inc
addl
dec
lock
mov
rcrb
daa
adc
sbb
jg
lods
stos
inc
jno
cli
ret
icebp
add
push
pop
gs
mov
jl
push
pminub
es
jo
aaa
ljmp
lock
ss
aaa
or
sbb
out
das
ss
lcall
aaa
push
mov
mov
in
arpl
out
jae
sub
test
call
xchg
adc
xor
mov
out
xor
jne
pusha
pop
adc
fsubl
pop
sti
popa
jl
movsb
adc
ljmp
cmp
pop
xchg
fsubrl
out
out
mov
adc
sbb
stos
add
sbb
push
dec
inc
pop
cwtl
add
shlb
cmp
sub
fisttpl
adc
xchg
mulps
xorb
xor
test
shll
out
or
push
daa
mov
dec
out
add
setns
loop
mov
ret
shl
mov
mov
jo
jl
adc
aaa
add
mov
or
or
add
popf
lcall
xchg
jbe
loopne
adc
mov
cmp
pop
icebp
and
loop
push
out
jecxz
jl
stc
mov
imul
es
pop
jne
mov
xchg
shlb
test
mov
push
outsl
and
xor
jbe
mull
cmc
std
cmp
repnz
enter
gs
push
orb
jg
les
pusha
movsb
je
pop
data16
enter
jge
and
push
lds
pop
pop
or
push
add
fstl
adc
inc
adc
lcall
aam
dec
insb
inc
arpl
xor
scas
lods
fucomi
sub
negl
test
sub
stc
daa
roll
les
fptan
test
xchg
xor
pop
mov
std
mov
repnz
mov
ja
andb
push
outsb
push
mov
sub
jae
test
lea
xor
movsb
orl
sub
test
dec
push
dec
sbb
imul
fcomip
test
push
sub
das
ds
inc
mov
xor
imul
rorb
pushf
jg
adc
andl
xor
mov
sbb
arpl
inc
push
xchg
mov
xor
inc
xchg
insb
aad
aaa
aaa
leave
push
test
das
cmp
test
cwtl
xchg
insl
mov
xchg
add
fbld
test
fsubl
shr
mov
cltd
cmp
roll
les
lret
fists
adc
xchg
out
ss
scas
pushl
dec
popa
mov
repz
outsb
clc
adc
or
lahf
cwtl
cld
adc
and
fcomp
std
jmp
mov
in
inc
cmpsb
lret
in
testb
test
mov
arpl
call
in
xor
sbb
enter
pop
mov
stc
cmp
push
mov
hlt
out
xchg
jle
push
xor
push
xor
push
dec
mov
sub
lret
or
mov
pop
es
add
insl
out
test
sahf
leave
xchg
out
lcall
aad
add
repnz
mov
sub
jmp
nop
stc
push
cmp
mov
or
lods
test
notb
movsb
jecxz
pop
clc
lret
adc
adc
shr
jns
mov
mov
pop
pop
mov
jecxz
sub
mov
adc
xor
pop
sbb
into
repnz
adc
xchg
xchg
dec
insl
mulb
add
push
sbb
ljmp
push
push
inc
adc
inc
jne
mov
ficompl
add
adc
jbe
xchg
iret
test
inc
adc
data16
dec
leave
out
add
xor
mov
push
sbb
lods
or
and
imul
mov
popfw
push
mov
pop
sub
adc
test
shr
hlt
adc
lock
jecxz
popf
mov
sbb
dec
pop
add
imul
xchg
fsubr
add
and
inc
mov
aam
mov
sub
orb
fwait
out
add
sbb
inc
lret
out
testl
hlt
mov
out
leave
cld
mov
xlat
cmpsb
or
mov
cwtl
or
inc
xor
into
inc
cmp
xchg
xchg
adc
pop
push
cld
shrl
into
xlat
arpl
xchg
sbb
push
cwtl
cltd
addr16
push
xchg
int3
and
cmc
lret
pop
push
or
pop
lds
hlt
leave
repnz
sub
dec
mov
loope
mov
ficoms
sbb
aas
pusha
mov
dec
pop
sahf
shlb
mov
loopne
xchg
or
jmp
stos
or
popf
mov
jp
cmp
xchg
xlat
std
insl
xchg
mov
roll
or
or
cwtl
xor
dec
aaa
gs
lret
lods
fdivs
push
int3
popa
popf
fistpl
mov
rclb
fbstp
pusha
sbb
dec
add
psubq
data16
mov
and
xor
pop
and
xchg
into
fdivp
mov
mov
cmp
sub
inc
or
cmp
call
in
icebp
rorb
xlat
mov
mov
hlt
mov
rcrl
mov
sub
jle
cmpsl
mov
xor
orl
pop
xor
stc
stos
movsb
jg
insl
dec
adc
or
mov
cmpsb
mov
cmpsl
movsb
leave
dec
pop
imulb
jl
cmp
int3
lock
mov
add
mov
xor
rorb
push
loopne
sub
in
cli
int
dec
jae
test
iret
xchg
xchg
enter
xor
cmp
dec
cli
data16
mov
leave
popa
test
inc
testb
push
je
popa
push
mov
lods
repnz
xchg
mov
and
cmp
mov
lret
ret
imul
outsl
cmp
cmp
dec
gs
lods
daa
loop
outsl
push
scas
or
fimull
pop
lahf
dec
xchg
movsl
cmp
jg
sub
adc
jmp
aas
fucomip
inc
aad
mov
pop
fdiv
in
leave
push
push
lahf
push
mov
loope
test
shll
test
fs
jae
subb
mov
push
decb
mov
out
xchg
test
jmp
in
inc
pop
jmp
fisubrs
mov
xor
cmc
je
or
stc
imul
xchg
cmp
lahf
cmp
daa
sbb
rorl
mov
int3
sub
jle
popf
mov
sti
add
jl
insb
sbb
fsubr
pop
mov
std
adc
jne
das
jne
add
shrb
out
imul
or
mov
xor
dec
or
push
fcmovu
std
cmpb
fcomip
push
test
xlat
shrb
jns
and
in
jg
mov
out
xchg
push
and
sub
rclb
fmul
dec
adc
repz
mov
lock
cmpsb
xchg
ret
out
inc
fisttpl
jge
jecxz
ljmp
xchg
pop
sbb
out
push
jae
dec
sti
cmp
cwtl
ret
divb
jno
popf
fdivr
xor
ljmp
push
xor
push
int3
and
pop
mov
adc
fcmovne
and
lcall
adc
ror
ficoml
sub
add
loope
dec
xor
push
inc
leave
cwtl
ret
je
sti
jae
pop
aam
push
pushw
lock
icebp
pop
imul
cmpsl
xchg
jmp
ret
pop
jle
outsl
add
aam
fldenv
insb
test
mov
icebp
into
jnp
outsb
imul
repnz
ret
or
out
add
adc
fdivr
fs
out
inc
and
add
sub
rorl
mov
dec
fidivl
int
cmp
stos
inc
test
sbb
pop
inc
into
xlat
addr16
inc
xchg
jb
test
iret
push
sbb
push
into
shlb
mov
mov
inc
bound
xchg
mov
fisubs
adc
sbb
lahf
out
scas
xor
pop
cmp
ja
push
xor
repz
cmp
fwait
in
push
ds
dec
and
jb
ds
sub
cmc
mov
xor
fdivl
insb
add
dec
or
test
cmp
mov
aad
ret
sub
mov
es
push
mov
ret
mov
fwait
add
rcll
les
inc
add
xchg
repnz
pusha
jnp
sub
push
inc
xor
insb
ljmp
jae
dec
mov
lods
sahf
jecxz
xor
mov
aad
arpl
add
jbe
inc
rcll
stos
shlb
stos
cli
sub
mov
lds
in
adc
mov
push
mov
adcb
fmuls
mov
fisttps
jl
fstpl
dec
jbe
xor
mov
pusha
mov
fidivl
xor
dec
test
lret
sbb
adc
sbb
sub
mov
adc
xor
fstl
mov
fnsave
lret
pop
ror
aam
mov
icebp
mov
pop
enter
mov
ret
ljmp
sarb
cltd
icebp
lods
enter
add
sbb
push
std
jge
mov
in
mov
push
adc
jmp
xor
cmp
fwait
mov
dec
int3
pop
fwait
pop
nop
mov
push
and
pop
pop
into
leave
and
pop
mov
mov
loop
call
push
insb
inc
jp
rorl
lds
je
xor
insb
adc
sbbb
jbe
addb
rorl
nop
outsb
mov
jb
xchg
stc
mov
in
decb
lret
aam
lds
rclb
fnstsw
and
int3
jmp
push
std
movsb
popa
or
push
sbb
xor
adc
or
cmp
mov
mov
dec
iret
pusha
insb
bswap
jb
push
add
xor
jg
in
and
xchg
dec
dec
shll
rcr
stos
fcom
add
mov
aas
mov
adc
lret
mov
and
dec
pop
add
push
setnp
test
sbb
in
enter
fs
les
sbb
mov
push
push
out
enter
mov
or
pop
xchg
aas
sbb
or
fwait
mov
cmp
les
pushf
or
dec
test
fs
jl
xchg
ss
sbb
arpl
das
push
jmp
pop
xchg
cmp
ficoml
xchg
loopne
xchg
int
repnz
nop
movsb
outsb
dec
and
test
push
hlt
jo
movsb
shr
add
cmpl
cs
repnz
loopne
or
popf
and
mov
xchg
ja
xchg
gs
dec
mov
mov
in
fs
mov
adc
repz
push
loop
inc
cli
dec
or
mov
and
into
out
mov
sub
xchg
xchg
jbe
ss
inc
lds
cmpsb
insl
out
push
dec
out
imul
into
inc
jmp
jnp
test
sbb
je
arpl
in
mov
cmpsb
jno
repnz
subb
mov
xchg
dec
xor
adc
add
insl
pusha
clc
and
sbb
add
rolb
rorb
gs
sub
ljmp
or
ljmp
mov
mov
push
pop
mov
mov
loopne
ret
xor
jae
lret
mov
data16
pop
pushf
enter
in
xorl
enter
and
add
mov
sub
arpl
pop
mov
mov
outsl
jns
add
add
jp
and
sbb
aas
mov
adcl
enter
pop
add
jnp
clc
hlt
adc
push
xchg
jge
mov
mov
aam
or
push
lahf
ret
sbbb
jle
mov
in
fisubl
test
mov
mov
imul
fidivrs
and
les
xchg
xor
xchg
sub
add
xchg
das
cmpb
in
out
decl
lret
jae
dec
xchg
lret
pop
repz
out
xor
ret
in
mov
je
mov
mov
cmpsb
sbb
and
push
and
popf
pusha
je
or
pop
cld
adc
dec
cli
cmp
out
out
pop
cmp
call
sub
fwait
imul
adc
cmc
cltd
push
rclb
jb
out
ja
stos
addl
pop
fs
mov
call
add
fnsave
cmp
dec
xchg
push
je
or
sub
cmp
xchg
dec
lds
push
fidivrs
jmp
gs
or
imul
clc
cli
inc
sbb
xor
add
loope
ret
ret
xchg
dec
pop
stc
pop
shl
popf
movd
jnp
ret
fnstcw
sbb
cmpsl
push
enter
ja
push
push
jb
aas
in
jmp
loope,pt
push
push
pusha
in
push
dec
mov
xchg
sub
cmp
add
repz
pop
mov
aad
sti
movsb
mulb
movsl
nop
jne
cmp
cmp
stc
xor
dec
flds
fdivs
mov
cmp
dec
jge
xor
lret
or
and
rol
loope
push
in
inc
movsl
cmpsl
arpl
cli
add
mov
and
push
jg
ja
inc
sub
push
std
mov
push
mov
sbb
fimuls
ss
icebp
xchg
or
sbb
stos
sbb
xor
add
cmp
jge
insb
jne
or
test
mov
lret
sub
popf
sbb
in
andl
fcmovbe
shll
xor
scas
sub
fs
imul
sbbl
lds
push
repz
add
cs
inc
sub
in
cwtl
js
pop
aas
insl
loopne
fiadds
daa
mov
jmp
sahf
xor
cmp
aam
xor
xchg
push
stc
popa
lcall
inc
dec
faddl
add
pop
shlb
cmp
ja
pop
xchg
in
jp
mov
rolb
mov
mov
sbb
jl
sahf
mov
lea
jg
add
or
out
sahf
dec
outsl
aaa
fisubl
mov
fistl
pop
adc
inc
popf
into
pop
add
popf
xor
lret
mov
push
mov
fisttps
jb
call
outsb
push
add
out
das
outsb
lret
addr16
inc
movsb
xor
ret
hlt
hlt
movhlps
hlt
jecxz
cs
imul
jecxz
inc
in
sub
lods
dec
jae
fcmovb
jle
rclb
xchg
jno
dec
inc
add
dec
push
cmc
pop
clts
cwtl
es
fs
sbb
pop
sti
in
push
lods
push
fldl
xor
inc
ds
lods
pop
insb
mov
mov
lret
jae
stc
cmp
stos
outsb
mov
outsb
sub
lcall
bound
in
xchg
or
sahf
scas
mov
mov
mov
mov
in
sbb
in
mov
adc
and
subps
outsl
cmpsl
dec
jnp
out
sbb
iret
test
sbb
je
sub
repz
jecxz
dec
or
shlb
and
mov
movb
rolb
adc
stos
pop
cmc
adc
xor
dec
inc
xchg
inc
mov
lahf
mov
sti
inc
xchg
pushf
aas
lods
lahf
and
roll
into
loop
arpl
fs
lahf
imul
aad
lahf
cltd
mov
das
and
mov
stc
fwait
fnstenv
adc
mov
jb
add
enter
icebp
outsb
mov
mov
xor
cli
pop
jae
and
cwtl
stos
adc
sti
movsb
add
int3
jne
mov
add
and
daa
loop,pt
mov
in
mov
in
xchg
je
enter
or
repz
cmp
push
jmpw
sbb
mov
lcall
pop
xchg
test
mov
and
imul
mov
cmpsl
pop
add
push
xlat
sbb
js
lods
fiadds
sbb
push
sti
xlat
shlb
movsl
and
lcall
mov
add
hlt
adc
popa
popf
sbb
scas
add
push
mov
cmp
call
fbstp
or
adc
xchg
dec
and
fs
test
pop
mov
mov
mov
add
push
lea
es
gs
fisubs
xor
aad
lcall
mov
pusha
mov
movsl
pop
mov
xchg
iret
adc
cltd
adc
cmp
leave
mov
mov
subb
or
sahf
ror
insl
add
cmp
mov
roll
mov
xchg
mov
outsl
rorl
arpl
cmp
loope
xor
dec
mov
xchg
inc
dec
and
gs
xchg
icebp
js
dec
cld
lret
lock
jno
xor
loop
xorl
sbb
lods
pop
popf
jge
jne
jl
inc
pop
clts
mov
xor
jae
std
jle
jle
xlat
lahf
inc
test
aas
mov
imul
push
adc
movsl
lds
in
sahf
dec
mov
sbb
out
je
push
adc
jmp
shlb
sub
shrb
sbb
popa
cmp
movsb
cmp
sbb
lods
outsb
push
xlat
iret
lods
xor
xchg
scas
lods
and
and
jmp
sarl
jo
das
orb
push
pop
scas
xor
jbe
push
outsl
sti
add
xchg
jb
fwait
das
push
mov
mov
xchg
adc
mov
dec
jbe
pusha
xchg
mov
mov
jb
popf
dec
cmc
testl
cs
mov
scas
add
add
loope
adc
mov
sarl
sbb
fistpll
add
and
enter
gs
mov
mov
daa
repz
pop
stc
mov
fwait
inc
loope
mov
push
push
xorb
mov
rcrb
cmp
stc
mov
aam
sbb
movsl
jnp
mov
pusha
cwtl
int3
xchg
mov
mov
or
cmpsl
sbb
cltd
dec
push
mov
addr16
scas
add
aaa
popf
out
repz
bound
cmp
addl
enter
test
ja
dec
sti
pop
arpl
out
lret
out
scas
fistpll
sbb
out
enter
push
dec
jne
push
xchg
addr16
inc
xor
test
pop
dec
pop
movsb
gs
fstl
ret
ljmp
inc
adc
mov
stos
scas
mov
rcrl
and
mov
ret
and
aad
fwait
mov
inc
dec
adc
mov
imul
and
cmpl
cmp
ja
adc
rcrl
jne
pusha
add
std
vphaddbd
dec
sub
test
pop
das
dec
jae
aad
stos
xchg
mov
mov
lock
jo
call
pusha
push
mov
sub
lods
daa
arpl
fisttps
jge
or
lock
sbbl
aam
lret
jno
sbbb
out
call
pop
sbb
add
fcomip
pop
in
inc
in
xor
lcall
push
fs
scas
cmp
lret
das
pop
jge
ret
aad
push
cmpsl
jge
sub
and
pop
add
mov
mov
sarl
loopne
mov
js
fmuls
mov
mov
cmp
mov
pop
test
jns
popf
dec
int3
adcb
inc
inc
outsb
inc
orl
cltd
sub
mov
push
in
push
repz
aad
or
jo
scas
inc
push
mov
push
and
sbb
jp
mov
xor
pusha
gs
push
scas
or
repz
mov
lods
xor
inc
daa
add
push
shr
push
mov
in
push
pop
cltd
pop
sti
xchg
nop
rcll
mov
pop
int
push
sti
mov
in
xor
inc
ds
jl
lods
jno
hlt
dec
push
jg
push
xor
test
ljmp
pop
jmp
mov
adc
shr
push
jns
insb
or
cld
mov
adc
inc
ja
into
ret
xchg
sub
out
out
fiaddl
hlt
push
mov
mov
sbb
pop
cld
adc
imul
mov
lahf
inc
sbb
push
test
lea
fwait
repz
jnp
test
nop
and
mov
ja
jns
clc
shrl
test
xor
push
jge
es
cs
loopne
out
jecxz
cmpsl
iret
clc
inc
inc
xchg
shrl
ret
mov
pop
std
inc
sahf
mov
mov
inc
loopne
cmp
adc
jne
jp
lahf
sahf
xchg
outsl
inc
cmc
out
fadds
mov
xchg
or
mov
sti
xchg
fldcw
pop
sbb
test
sbb
outsb
xchg
dec
ficompl
adc
xchg
push
add
lcall
lcall
lods
arpl
insb
shll
lods
add
insl
cli
xor
aam
stos
or
mov
pop
xor
mov
ss
sarl
je
dec
push
test
inc
xor
lret
inc
adc
cmc
xor
das
xchg
or
sahf
movhlps
inc
std
adc
and
cmpsb
dec
shl
sbb
pop
ss
enter
and
push
cltd
call
mov
and
aaa
in
mov
ds
in
pop
mov
adc
or
cmpb
push
sub
addr16
pop
or
int3
fldpi
sub
outsl
sbb
mov
subl
movsl
ds
insb
push
or
or
lods
and
fdivl
sarb
cmc
pop
xor
or
xchg
mov
mov
pop
mov
mov
cld
fs
lods
test
daa
inc
popa
sbb
push
jge
jmp
ja
jns
pop
mov
dec
sbb
pop
sbb
sub
outsb
xchg
sbb
inc
movsb
inc
cwtl
aas
cmp
lods
pop
popf
jno
add
popa
outsl
inc
and
out
stc
jp
pop
push
mov
add
and
test
jl
lret
stc
or
test
in
lds
lret
pop
push
inc
cmp
jmp
je
mov
pop
mov
test
or
cltd
iret
stc
mov
cmp
xchg
nop
pop
jecxz
fnsave
xor
hlt
into
mov
movsl
sbb
les
mov
push
pusha
or
sarb
sbb
aam
dec
orl
dec
and
mov
pop
dec
rcl
sahf
lods
ffreep
cmpsb
fisubrs
in
cli
add
mov
inc
ret
xchg
sbb
repz
movsb
adc
push
rorb
or
add
mov
mov
lock
fsubs
repz
sbb
movsb
jmp
movsl
das
or
lods
mov
jbe
pop
pop
dec
lods
cli
add
inc
in
mov
sub
ret
pop
add
adc
sub
mov
dec
pop
dec
xor
insl
cmp
mov
xchg
pusha
ss
data16
addr16
xor
cmp
mov
cmovo
xchg
mov
insl
ret
mov
mov
addr16
push
or
xchg
add
xor
std
pop
add
ficomps
test
and
rol
sbb
cmp
sti
add
inc
in
hlt
mov
lea
pop
int
xchg
add
adc
inc
cld
rol
mulb
cmp
cmp
xchg
lea
inc
mov
inc
adc
sahf
xor
mov
and
cmc
fsubrp
gs
sbb
lret
push
sbb
push
sub
adc
adc
dec
test
out
ja
mov
mov
mov
jge
fwait
adc
fildll
lret
jno
sub
xchg
xchg
push
testb
das
sbb
pop
pop
into
ds
mov
ret
je
nop
call
and
test
in
sub
aas
ret
fcoms
outsl
loop
mov
ds
dec
out
add
iret
lret
cmpsb
lea
sbb
cmc
jno
mov
jne
imul
movsl
xor
pop
jmp
shufps
mov
inc
fs
loop
and
out
cli
and
pop
mov
push
insb
push
cmp
jge
les
and
push
lea
push
and
test
dec
jo
jo
daa
or
cld
xchg
test
adc
cmp
in
shll
mov
cmp
push
inc
fstpl
push
stos
mov
in
sbb
in
pop
inc
add
xchg
repz
and
xchg
inc
fbld
stos
mov
mov
pop
mulb
out
shrl
lods
in
icebp
pop
xchg
imul
mov
mov
cmp
sub
ret
ja
imul
sahf
or
pop
pop
sbb
imul
inc
mov
jno
enter
push
out
lds
gs
int
cmp
push
adc
pop
sub
push
fs
jp
fwait
push
in
dec
addr16
sbb
stc
pop
push
jle
gs
rcl
dec
sbb
adc
mov
pop
add
test
cmp
push
pop
cwtl
out
int3
adc
xchg
ret
add
inc
pop
push
dec
movb
fnstcw
and
add
dec
in
ficomps
sbb
or
shll
lds
mov
cmc
sub
dec
inc
add
xchg
pop
pop
jg
or
int3
data16
add
jb
mov
js
test
mov
inc
fiadds
cmp
imul
sbb
dec
push
dec
push
das
adcb
andb
int3
dec
mov
and
jp
inc
mov
in
aaa
cmp
and
xlat
lea
loope
pop
loope
mov
ret
cltd
cmp
out
data16
or
jg
pop
jg,pt
outsl
sub
call
jmp
adc
lds
and
rol
pop
dec
lock
in
xchg
addl
mov
insl
xchg
mov
jp
mov
dec
repnz
push
sub
mov
mov
mov
mov
sbb
jg
div
add
add
jmp
ret
int
arpl
mov
fwait
mov
ja
nop
addb
cmp
jp
iret
cmp
mov
lods
cmpsb
sub
mov
adc
mov
mov
mov
push
dec
cmp
iret
sldt
sbbl
lea
shll
sbb
dec
jns
push
iret
aaa
jecxz
and
sbb
cmpl
mov
rol
rorb
test
xchg
adc
lahf
inc
cmp
lods
jg
lock
cli
cmp
xchg
movsb
cmp
orl
xchg
jmp
add
andl
leave
fwait
mov
mull
xchg
xorps
incl
mov
jmp
jbe
test
lods
push
fwait
push
adc
into
xor
jne
xchg
mov
push
test
mov
cmp
insl
add
mov
push
fildl
insl
xchg
fsubrl
pop
rol
jbe
gs
pop
adc
xor
rcrb
enter
xchg
push
imul
push
or
pop
inc
imul
les
sub
mov
push
or
mov
pop
ljmp
popf
sbb
sbb
fndisi(8087
in
sub
push
dec
stos
aas
jo
or
test
push
mov
push
adc
out
int
or
testb
inc
pop
add
out
rcrb
adc
adc
jmp
jl
aas
sahf
jge
into
sbb
mov
or
pop
rclb
sahf
sbb
and
jo
inc
shll
lret
mov
lahf
mov
fucom
xor
clc
mov
sub
pop
repnz
loop
mov
jg
jl
jge
cmpl
aaa
push
jmp
sbb
sbb
inc
lahf
push
mov
rcr
lock
xchg
outsb
cmp
add
xor
into
sbb
fistps
xor
sub
sub
push
push
aam
or
in
imul
push
int3
dec
fnstsw
and
or
xchg
mov
and
push
xor
cmc
rdpmc
xchg
mov
aaa
and
clc
pop
inc
popa
and
push
data16
out
jnp
outsb
push
dec
mov
jp
insb
in
mov
sarb
and
bound
decb
fnstcw
and
aas
dec
cmp
push
popf
pop
in
pop
adc
cmp
pusha
fidivrl
mov
cli
push
int3
mov
jl
inc
pushf
mov
lret
ss
dec
adc
outsl
push
cmp
xor
and
or
icebp
adc
hlt
fs
stc
push
pop
sbb
dec
or
sub
cmpsl
pop
xchg
pop
pop
xchg
sbb
rclb
lds
fcmovnbe
cmp
jo
shld
mov
fistpl
bound
add
and
std
cmp
pop
std
dec
imul
mov
aam
divb
jmp
mov
push
incl
movsl
mov
jge
push
pop
mov
jg
cs
dec
call
hlt
xor
sbbl
fisttps
shll
lahf
push
or
inc
repz
mov
scas
inc
lds
out
jno
das
shrb
lock
popa
cmp
int
out
cmc
push
mov
jp
push
or
xchg
fistpl
enter
pop
lods
jle
inc
test
lret
pop
xchg
pusha
pop
outsl
pop
lods
inc
xor
jae
push
aad
pusha
imul
outsb
nop
cmp
sbb
or
jb
fsubrl
cmp
add
rclb
cmc
or
les
ret
push
jge
aam
push
sbb
mov
daa
pop
jl
ret
push
sub
sbb
jp
add
jge
add
adc
popf
pop
dec
pop
pop
sub
mov
ret
pop
int
aad
xor
xchg
rol
ss
mov
xchg
mov
adc
ja
imul
fdiv
inc
cmpsl
test
mov
aad
cltd
mov
fs
inc
sbb
addb
inc
xor
in
in
lahf
lods
sub
cmp
xchg
loop
inc
lods
mov
imulb
bound
dec
mov
push
mov
scas
pop
add
inc
inc
sbb
and
in
ds
cwtl
orl
cwtl
or
inc
insl
cltd
jmp
mov
in
and
push
jecxz
mov
mov
int3
gs
into
inc
sub
popa
in
imulb
jp
xchg
inc
push
dec
in
shr
inc
mov
or
mov
ret
push
push
enter
test
and
movsl
push
sbb
xchg
inc
add
sub
in
cli
push
xor
movsb
pop
sarl
cmp
mov
jae
sbb
cmpsb
sbb
mov
sbbb
push
nop
insb
dec
cmp
inc
jmp
mov
mov
mov
int3
lods
add
stc
daa
add
dec
adcb
adc
add
cltd
xchg
movsl
inc
mov
mov
pop
mov
fldcw
js
test
xor
mov
arpl
dec
add
push
loopne
push
mov
fdivr
pop
inc
fnsave
cmp
scas
cltd
hlt
lock
loopne
push
insl
fbld
popa
mov
push
imul
mov
cmp
pop
mov
filds
push
inc
test
sub
in
scas
rclb
insb
imul
xchg
sti
sbb
inc
xor
cmp
leave
sbb
sub
pop
movsl
loop
fcomps
inc
mov
in
adc
adc
in
test
lret
fcomps
add
ja
fucomp
jbe
mov
jae
sub
fbstp
movsb
jno
hlt
mov
xchg
pop
dec
push
adc
divl
aad
adc
inc
cld
addb
dec
mov
mov
lret
pop
je
std
lea
jns
test
addr16
mov
xor
pop
add
wbinvd
lret
jmp
dec
lcall
fisttps
jl
push
imul
out
inc
fists
jmp
movsl
lahf
fstpl
mov
push
cmpsl
inc
loop
mov
arpl
rolb
sub
out
loop
pop
sub
lret
mov
lods
pop
std
jmp
inc
cltd
fdivs
loopne
outsl
or
sbb
data16
dec
xchg
orb
pushf
cmpsb
dec
add
pop
ljmp
out
int3
fidivrs
cmp
sti
repnz
les
lods
leave
mov
sub
sbbb
popa
dec
ret
jne
addr16
in
out
inc
and
repnz
aaa
arpl
dec
in
decl
jne
outsl
cmpsl
jae
dec
cmp
push
mov
pop
cmp
xor
sbb
cli
aad
pop
xchg
inc
push
lea
mov
rcrb
xchg
arpl
mov
test
mov
adc
repnz
xchg
flds
in
shlb
ja
jns
loop
adc
mov
cmp
rcll
cs
xor
scas
outsb
ja
clc
pushf
mov
xchg
outsl
add
aas
ss
fnstenv
inc
pop
add
aas
enter
loope
mov
stos
inc
pop
push
inc
repnz
push
lods
and
imul
cmpsb
into
dec
lea
mov
cmp
jmp
inc
fwait
andl
dec
sub
mov
mov
xchg
sbb
or
adc
retw
stos
pusha
mov
shlb
nop
dec
push
add
jg
imul
adc
xchg
cmp
mov
and
test
icebp
xchg
les
cmc
lods
pop
adc
or
aaa
jb
cld
mov
pop
mov
int3
aam
sti
scas
repz
cmp
ret
sub
lea
sub
sub
cmp
dec
xchg
dec
inc
jae
cmc
and
and
les
add
repnz
jg
mov
rol
dec
lahf
push
ret
mov
push
into
gs
data16
enter
xchg
test
pop
or
push
push
mov
loope
add
mov
cmc
shr
xor
in
cmp
jns
cmp
and
jmp
enter
mov
scas
pusha
xor
pop
jnp
sbb
xor
leave
repz
mov
cmp
jge
jnp
pop
xor
mov
int3
cmc
les
cli
dec
icebp
jnp
nop
and
push
fstps
call
stos
aad
filds
test
sahf
movsb
outsb
lods
mov
push
inc
arpl
sar
and
cmp
cmpb
inc
dec
sub
cmp
inc
xchg
mov
movsl
in
jg
lcall
imul
scas
jge
pop
adc
lock
movsl
sub
push
je
popf
push
cli
pusha
popa
imul
mov
loope
rorl
sbb
sarb
mov
mov
addr16
addr16
hlt
pop
popf
sbb
mov
in
jmp
and
add
push
ja
sti
repz
sahf
in
cld
jmp
push
sub
repnz
mov
adc
roll
repnz
pusha
inc
mov
out
loope
cmp
fsts
inc
data16
gs
adc
push
cltd
mov
lea
icebp
out
pop
insl
lock
sbb
push
bswap
xchg
xor
lret
shrl
filds
push
adc
pusha
pop
fucomip
jns
mov
inc
loopne
cs
in
mov
leave
xchg
nop
inc
xchg
pop
hlt
es
cmpsl
popa
and
es
incb
insb
cld
cld
sbb
dec
flds
cmpsb
sbb
ja
jns
push
ret
sub
mov
rorl
push
cmp
xchg
ret
repz
rclb
ss
cmp
mov
jno
mov
dec
aas
inc
sub
icebp
mov
and
mov
pop
xlat
dec
shlb
cmc
lods
xor
ret
cwtl
sub
in
jge
fcmove
repnz
lahf
repnz
push
test
and
lea
jno
mov
loopne
fiadds
adc
in
shr
icebp
push
xchg
stos
and
daa
fidivl
xchg
mov
idiv
orb
xchg
and
int3
repnz
sub
shlb
jp
push
fwait
jae
mov
jmp
scas
pop
fcoms
hlt
cmpb
add
mov
sbb
sub
mov
cmpsb
cmp
cmpsb
xchg
xor
addr16
pop
xchg
pusha
lds
mov
push
add
push
lods
pusha
xchg
stos
fldl
pop
inc
test
mov
gs
dec
cmp
cmpsl
insl
xchg
mov
or
xchg
sub
fnstcw
or
gs
add
inc
jne
push
imul
scas
mov
sbb
mov
in
cli
aam
das
and
sub
pop
xor
push
mov
sub
adc
cmp
ret
xor
jbe
xchg
cmpsl
and
push
loop
stos
das
mov
daa
mov
xchg
dec
divl
xor
lods
test
in
loop
add
add
xchg
imul
and
imul
fwait
call
sti
lcall
mov
outsb
pop
jmp
pop
pop
xchg
adc
sbb
xor
xor
fadds
das
test
sub
and
sbb
add
mov
xchg
mov
jl
in
cltd
mov
mov
sahf
scas
sbb
mov
or
push
xor
fmuls
and
pop
imul
cltd
lods
fstl
push
aas
scas
movsl
jbe
or
test
cmpl
pop
dec
fwait
xchg
push
aad
test
movsl
int3
in
pop
inc
dec
sti
fldt
imul
pop
jne
iret
in
jge
imull
cmp
shl
in
imul
sbb
imul
add
movsb
or
and
push
lea
cmp
adc
jge
loop
ficoml
aad
sbb
gs
adc
push
pop
ret
jecxz
loopne
and
inc
test
jmp
push
mov
sub
ret
loop
or
ss
js
mov
icebp
iret
shl
xchg
mov
add
add
cmp
shl
movsb
insl
rorb
int3
out
adc
arpl
xchg
jmp
dec
fwait
aad
jno
dec
jge
push
hlt
push
mov
je
pop
out
pop
mov
cmp
or
ja
pop
pop
add
cmpsb
icebp
rcrl
lret
push
mov
mov
mov
lahf
mov
shl
jne
lock
sahf
imul
enter
aad
stc
push
xchg
imul
push
pop
imul
in
cltd
adc
aam
add
mov
jae
xchg
mov
xor
mov
jno
in
repz
ljmp
pusha
scas
imull
pusha
enter
mov
cmp
cli
sub
out
add
jl
add
arpl
mov
push
push
lret
roll
mov
add
in
ror
push
pmulhw
std
lea
fcmovbe
int3
std
inc
xor
loop
or
add
out
pop
clc
adc
add
rcrl
push
cmp
dec
jecxz
jle
mov
dec
mov
mov
dec
imul
int3
or
fistps
movsb
movd
jbe
test
out
cli
inc
jnp
push
es
ljmp
test
loope
cmp
scas
shl
sbb
in
in
jl
shrl
pusha
data16
in
jecxz
mov
dec
imul
pop
jmp
subb
mov
lea
mov
imul
xchg
or
cmp
cmpsb
mov
adc
push
xor
sarb
pop
mov
mov
mov
in
lahf
inc
ljmp
inc
mov
xor
orl
jnp
setno
test
daa
inc
cs
popf
pop
jb
inc
inc
pop
mov
and
adc
popf
shll
notb
icebp
lods
loop
test
mov
push
sbb
or
push
cmp
imull
notb
in
in
es
repnz
int3
jmp
pop
lods
les
shlb
pushf
pop
stos
cmpsb
cmp
addr16
mov
pop
push
in
xor
push
cmpb
ss
adc
cmp
add
lcall
xchg
mov
fdivrl
pop
sarb
mov
pop
add
data16
sbb
adcl
scas
arpl
and
test
daa
push
dec
div
mov
add
ds
ret
lds
adc
int3
ja
push
sahf
add
lock
jecxz
sti
jae
out
into
push
mov
adc
outsb
pop
xor
push
sbb
into
aaa
cwtl
test
subl
xchg
jle
test
xor
push
mov
dec
dec
mov
and
nop
mov
lcall
pop
mov
jno
jle
xchg
aaa
adc
fisttpll
push
clc
aad
cmpsl
or
iret
in
sub
mov
adcl
mov
and
in
fistl
mov
jge
dec
nop
sarl
ss
lock
rclb
stc
call
add
hlt
lock
out
aaa
cmp
flds
push
cwtl
into
cmp
repz
push
mov
sub
ror
push
pop
jae
iret
push
imul
test
pusha
mov
leave
insl
mov
inc
lods
pop
sub
sub
pop
mov
addr16
cmpsl
mov
mov
andl
fs
mov
enter
dec
aad
mov
ret
fdivl
add
push
je
dec
jge
adc
pusha
cmp
stos
daa
rcrb
mov
inc
iret
jb
add
push
mov
push
test
mov
xchg
enter
and
sub
lea
shl
sarb
andl
xor
dec
in
lret
stos
pop
mov
sahf
dec
fisubrl
frstor
fsubrp
ficompl
ja
and
mov
lret
pop
out
hlt
daa
mov
sub
lcall
int
mov
mov
pop
lds
out
jne,pt
cli
xchg
sbb
aas
mov
pop
out
out
loop
lret
movsb
popl
cmpsl
push
outsb
push
cmpsb
xor
xchg
sub
fcoml
test
jbe
lret
getsec
or
mov
int3
mov
add
dec
divb
fistps
pop
arpl
jmp
adc
cmpsb
lret
and
cmp
es
out
jge
adc
mov
jg
xor
scas
out
or
push
ja
jo
jmp
jae
jno
xlat
inc
jae
xchg
pushf
sub
mov
je
xchg
sbb
add
inc
pop
das
daa
sti
sti
into
sbb
call
push
inc
pop
test
lods
push
test
mov
and
add
fnstsw
bound
jge
gs
jb
xor
sub
mov
test
je
jecxz
fidivrs
je
daa
or
lea
add
jecxz
inc
fsubrl
sub
stos
mov
cmpsb
mov
fisubrs
cli
jp
jecxz
imul
js
scas
or
and
sarl
loope
or
lahf
stc
mov
inc
andb
in
sub
mov
loopne
jg
push
add
movsb
lcall
data16
xchg
sbb
jp
je
ja
enter
inc
outsb
popf
fcoms
and
jb
or
fsts
mov
lods
add
mov
inc
leave
xchg
mov
lret
mov
bound
or
or
loopne
fwait
jae
lcall
lret
fsubs
mov
or
cmpsb
cmp
or
sahf
dec
pusha
fs
and
test
das
frstor
pop
in
aas
hlt
cli
leave
ljmp
jp
and
aas
out
cmp
loopne
les
jo
dec
je
mov
add
ret
movsb
pop
sarl
pop
das
xchg
loopne
xchg
aaa
push
pop
adc
popa
stos
cltd
mov
jp
mov
aam
or
sbb
lcall
sub
outsl
cmpsb
data16
fstpt
pop
les
jg
push
lods
loop
loope
fcomps
dec
xchg
dec
pop
testb
xchg
xor
add
push
mov
cli
rorb
out
xor
bound
pop
xor
adc
mov
stos
insl
int
test
jae
sub
jecxz
lret
andb
cltd
jle
and
sub
xor
scas
sub
or
sub
mov
mov
daa
or
cmpsl
adc
clc
frstor
dec
ds
xor
or
jno
add
pushf
inc
lret
sub
testl
std
sbb
push
inc
adc
or
inc
repz
adc
lret
xchg
mov
mov
jle
add
loop
ds
push
xchg
ficoml
sub
pop
scas
add
sti
insl
push
loopne
pop
clc
scas
sbb
jg
dec
aad
and
mov
addb
pop
jp
xchg
push
mov
jg
fwait
leave
cmpsb
cltd
mov
das
adcb
sti
adc
mov
loop
mov
inc
cmpsl
push
loop
jge
jae
repz
cmp
in
sub
or
dec
mov
repz
pop
call
ljmp
dec
faddl
sub
xor
xchg
jg
popl
pop
repnz
xor
cmc
or
orl
js
push
jns
data16
cmp
lds
mov
lea
adc
lock
cmp
ljmp
nop
xchg
das
lcall
jle
mov
daa
xchg
xor
sbb
loope
in
repz
mov
pop
fdivl
arpl
jno
popf
jns
mov
call
xchg
cltd
cmc
shrb
addr16
dec
fisubrl
xor
push
sbb
adc
inc
out
sbb
imul
ja
fnstcw
push
xor
jle
movsb
add
sar
mov
pop
cmp
mov
push
mov
sbb
mov
inc
lods
sub
xchg
loop
loope
cmp
mov
ds
aam
xor
lcall
jae
out
adc
imul
arpl
test
es
fwait
mov
xlat
push
jp
and
mov
dec
adc
mov
imul
xchg
xchg
stos
in
cmp
repz
or
adc
jbe
and
lods
leave
sub
aas
xor
push
lret
ret
mov
fst
fistl
icebp
ljmp
inc
inc
mov
or
dec
pop
add
cwtl
dec
pop
xor
sub
das
pop
test
clc
mov
lahf
xor
pop
stc
fsubr
adc
push
leave
pushf
mov
and
cmp
push
mov
cmp
popa
adc
test
pop
jo
push
jl
xor
add
or
dec
push
sub
repnz
inc
xlat
enter
adc
or
scas
call
push
aas
sbb
std
adc
fstpt
cmp
ret
fldt
int3
test
cli
fwait
lock
sub
sub
pop
aad
jns
lods
addr16
mov
sbb
inc
mov
xchg
sbb
sub
rcrb
sahf
cmp
jp
out
loop
aaa
pop
ljmp
or
stos
sub
inc
and
jbe
shlb
mov
pop
icebp
and
repz
sbb
pusha
in
data16
jecxz
cmp
and
mov
addr16
jo
hlt
lods
xorl
dec
add
jns
insb
and
inc
jae
sti
xchg
sub
or
out
and
mov
sbb
inc
sbb
pop
imul
scas
lods
sahf
dec
mov
lods
lods
cmpsb
adc
loopne
xor
jle
insb
scas
push
pushf
jne
stos
add
mov
stc
mull
push
push
or
daa
pop
lds
sbb
jno
push
decb
xchg
mov
lock
sub
addr16
mov
pushf
loopne
sub
push
xchg
push
std
mov
xchg
mov
icebp
call
lret
ficomps
mov
or
scas
xchg
or
sbb
cmp
sti
xchg
mov
add
xchg
cld
jno
jbe
xor
lret
es
add
pop
gs
pop
xor
stc
jmp
cli
dec
loope
sub
pop
sbb
cmp
xchg
jns
scas
xchg
mov
lahf
dec
out
test
push
imul
dec
aam
lds
ret
mov
pop
sbb
icebp
out
shl
ror
aaa
das
mov
pop
in
rolb
push
int
icebp
cmpsb
cmp
insl
rorb
mov
pop
xchg
aam
ret
dec
xlat
mov
call
stos
insb
ret
cwtl
jmp
push
les
xchg
cmp
sti
xchg
out
gs
imul
fistpl
in
inc
xchg
stos
jg
leave
clc
imul
mov
ja
popf
jnp
iret
and
inc
xor
sub
ficompl
mov
cli
popa
jge
mov
dec
sbb
jl
loop
pop
xorl
dec
dec
jl
and
repnz
and
add
and
dec
les
rorl
ret
mov
repnz
xchg
std
lret
mov
les
mov
cmp
mov
inc
or
bound
mov
aam
movsb
icebp
das
inc
outsb
fwait
daa
xor
shr
jmp
loop
ss
mov
adc
notl
popa
xchg
inc
jb
fdiv
xor
aaa
je
in
mov
aas
test
adc
sbb
stos
addr16
sub
cmp
shlb
or
cmp
mov
xchg
lahf
out
dec
sbb
fs
stos
add
rolb
ja
and
cld
cmp
std
js
push
jae
jge
pop
mov
aas
clc
and
sub
push
icebp
xchg
or
xor
sti
push
jmp
xchg
pop
scas
ror
in
pushl
or
cmp
clc
mov
popw
mov
pop
jp
or
mov
sbb
jecxz
jg
push
dec
cmp
jp
or
xor
daa
stos
mov
and
sbb
jle
mov
inc
inc
sub
pop
adc
movsl
insl
mov
sti
imull
jae
inc
shrl
lret
icebp
clc
or
sbb
leave
dec
mov
jns
lcall
loop
inc
pop
cs
into
enter
push
and
jno
cmp
push
sbb
gs
inc
sbb
mov
sbb
popf
shrl
sub
adc
stos
xchg
xchg
fs
movsl
pop
in
ss
dec
add
scas
push
ja
or
mov
mov
aas
mov
int
test
leave
xchg
in
imul
add
cmp
pushf
inc
push
push
dec
loop
mov
mov
push
les
dec
leave
mov
pop
in
std
xlat
sub
push
je
lret
and
fists
add
mov
inc
mul
push
dec
fdivrs
popf
push
cmp
ja
fstpl
mov
push
mov
jno
into
mov
xlat
pop
ret
inc
mov
dec
pop
jle
and
push
test
push
or
push
add
mul
mov
int3
addl
cwtl
mov
xchg
das
dec
mov
mov
fidivs
push
dec
sub
fnsave
sub
fisttpll
aas
and
into
popa
add
mov
scas
in
mov
push
test
mov
adc
jbe
dec
je
adc
xor
jg
mov
icebp
mov
pop
jg
test
cmpsb
cmpsb
lret
jp
jp
and
push
jbe
aam
push
inc
repz
mov
loop
aaa
out
aas
es
xor
inc
rcll
test
push
dec
mov
inc
xor
mov
aam
pusha
frstor
movl
jmp
lret
pop
jns
rcrb
push
jb
loopne
pop
fcmovnb
repz
push
stos
mov
dec
cmp
ss
daa
scas
neg
or
push
nop
je
mov
mov
mov
hlt
out
popa
jle
in
and
xlat
push
xchg
inc
fstpl
mov
imul
mull
jmp
mov
or
addr16
lods
cmpsl
int3
cmp
lret
sub
pop
lods
js
inc
fstpt
pop
dec
fs
pop
inc
imul
in
gs
ja
add
scas
in
packsswb
jae
adc
movsb
adc
push
push
cltd
add
movsl
sbb
cmp
sbb
repz
mov
je
lods
cltd
push
or
fbstp
and
jg
xchg
fisubrs
mov
xor
ret
push
xchg
popf
nop
test
insl
adc
sub
ja
clc
dec
jmp
gs
fisttpll
adc
leave
push
lret
es
das
sub
xor
xchg
jle
fildl
xlat
cwtl
jg
inc
data16
jmp
mov
in
mov
lahf
incl
xor
clc
sub
mov
lret
lret
lcall
daa
pop
pop
ret
scas
div
clc
xchg
jmp
lods
cli
rcl
dec
and
xchg
dec
pop
inc
leave
inc
xlat
jge
stc
aam
call
mov
adc
lods
mov
lcall
jl
stos
adc
cmp
lret
outsb
sbb
push
pushl
xor
out
cs
pop
pop
and
flds
jnp
jg
es
adc
inc
in
dec
pop
fcomps
scas
adc
mov
test
imulb
repz
repnz
jns
pop
and
lahf
fisubrs
xor
enter
rorb
push
and
mov
dec
into
adc
add
push
xchg
repz
mov
pop
xchg
adc
add
repnz
cmp
push
fnstcw
int3
sub
and
sub
out
dec
xor
adc
adc
imul
xchg
test
push
jp
add
ljmp
pop
ds
loopne
pop
sub
and
push
push
cmpsb
adc
mov
or
jae
jae
mov
lret
cmpsl
fnsave
pop
popf
scas
test
clc
push
movsl
push
and
push
js
insl
jae
sbb
call
test
movsl
or
or
and
xor
call
outsl
sbb
jae
mov
pushf
jp
mov
fs
repnz
adc
ror
jmp
addr16
outsl
imul
lcall
push
mov
dec
jo
sub
pushf
test
jle
jle
and
addl
mov
push
mov
cld
mov
aas
sti
cmp
push
mov
cmp
aas
mov
mov
xchg
js
rcr
fcoms
ja
sub
mov
outsl
push
repnz
dec
fidivs
xlat
push
mov
test
es
inc
or
cld
fcomps
fs
push
stos
insl
push
adc
fs
ljmp
push
inc
aas
psllq
mov
jns
mov
data16
orl
leave
inc
mov
negb
sbb
stc
adc
push
or
push
push
inc
fwait
cs
sub
and
test
fcoms
pop
dec
nop
lcall
fisttpll
mov
xchg
insl
rorl
and
je
sahf
xchg
mov
push
add
pusha
mov
push
mov
repnz
test
iret
sub
icebp
xchg
inc
pop
fucom
stc
jge
lcall
rorl
adc
xor
les
pop
jge
pusha
jl
cs
repz
xchg
pop
popa
xchg
dec
sub
push
inc
and
dec
test
push
mov
jecxz
push
mov
lea
mov
xlat
xor
mov
mov
inc
arpl
cld
mov
rol
dec
into
negb
jmp
mov
pop
pop
mov
dec
pop
cmpsb
mov
xor
adc
inc
sub
fcompl
xchg
push
int
or
adc
out
hlt
push
rolb
xchg
lret
cmp
jnp
inc
fstps
pop
aaa
add
mov
shl
xchg
mov
daa
sub
enter
sarl
add
adc
repz
ja
pop
test
inc
cmc
cmp
vpunpcklwd
imul
enter
xchg
insl
testb
cmpsl
ljmp
xor
cld
pop
and
or
inc
insl
lret
aam
sub
add
and
mov
xchg
test
daa
push
mov
sub
dec
xchg
adc
ficomps
dec
repz
xlat
sub
jbe
imul
imul
shlb
inc
adc
ljmp
std
cmp
cltd
adc
outsl
popa
hlt
xor
mov
jge
mov
out
push
mov
push
cli
cmp
push
testl
mov
sbb
test
adc
es
cmp
sarb
out
sbb
hlt
adc
xchg
inc
push
iret
popf
orb
xor
pop
ds
pushf
bnd
pushf
adc
in
and
es
add
xchg
test
negl
inc
xchg
mov
sub
and
mov
mov
pop
adc
pop
cwtl
dec
or
adc
and
popa
inc
popf
in
mov
cmpsb
repnz
call
movsl
xor
dec
add
pop
out
pop
xchg
cld
loope
mov
sub
and
dec
aas
lock
dec
outsb
xchg
addr16
out
rorb
movb
out
in
loope
inc
aam
mov
jmp
outsl
sarb
push
dec
pop
adcl
pop
xor
cmp
cld
or
pop
aaa
ja
pop
clc
dec
inc
addr16
ret
dec
jmp
negl
fwait
push
enter
js
clc
ljmp
push
insl
sti
push
adc
ss
int3
or
adc
push
mov
adc
pop
shr
insl
or
or
adc
add
clc
rol
add
shrl
mov
and
cltd
mov
fistpl
rcl
inc
cmovnp
mov
sbb
push
mov
sub
pop
adc
call
daa
mov
cwtl
inc
add
add
sub
sahf
rolb
dec
xor
test
xor
sti
call
inc
aaa
in
stos
mov
dec
ficomps
flds
mov
sbb
lcall
negw
clc
adc
insb
orb
add
adc
cmpsl
in
inc
pop
out
pushf
inc
dec
or
xchg
insl
cmp
ljmp
shl
xchg
stos
jo
jmp
sub
sahf
das
sbb
lods
ds
jge
stc
mov
pop
jae
addb
pusha
sub
pop
out
push
ficoms
push
cmp
inc
push
out
js
insl
pop
test
iret
dec
inc
jnp
mov
jge
es
std
mov
les
add
lcall
movsl
leave
cs
pop
rcrb
mov
add
pop
mov
cmp
stc
xor
dec
iret
jns
ss
daa
dec
cwtl
xchg
or
rorb
lock
ficomps
incb
or
inc
aaa
cltd
mov
mov
popf
loope
loop
ret
lods
adc
sub
loop
mov
or
ljmp
add
inc
pop
mov
subb
pop
aas
sbbb
add
mov
loopne
add
mov
ret
scas
pop
inc
lea
push
aam
xchg
cld
rol
stos
lods
cmp
push
jmp
adc
mov
loop
mov
push
sbb
test
push
jecxz
cmpl
lcall
xor
stos
sub
lea
xor
outsb
adc
arpl
mov
mov
cmpsb
out
syscall
jo
jmp
clc
dec
inc
mov
mov
test
push
or
and
sub
mov
hlt
insb
out
adc
inc
xchg
cmp
sub
push
jo
roll
sarl
or
xchg
or
push
je
addb
mov
adc
mov
mov
xor
sti
sti
gs
push
sbb
cmp
push
push
stc
js
adc
sbb
dec
sarl
sbb
push
dec
pushl
push
sbb
and
pusha
cwtl
cmpsb
inc
adc
test
rorb
xchg
mov
icebp
loopne
mov
xor
in
and
repz
cmc
xchg
sub
lods
dec
jge
fmull
push
push
int
repz
cwtl
xchg
xchg
push
das
mov
jo
addl
adc
je
dec
jno
insb
popf
push
push
fdivrs
or
idivl
pop
sti
fprem
scas
cmp
mov
cmp
pop
lock
dec
dec
imul
cmp
push
repnz
jp
push
xor
test
and
pushf
add
incb
mov
clc
dec
adc
sbb
push
xor
sub
rsm
aam
adc
cmpsb
mov
call
inc
sub
or
adc
ljmp
cmp
xchg
xchg
and
out
and
jo
cli
test
or
loop
enter
mov
pop
adc
imul
negb
mov
cmpsb
sub
adc
jb
loop
data16
push
dec
sbb
out
push
fstpl
pop
jecxz
dec
out
pop
mov
loop
inc
out
xchg
je
lahf
pop
jmp
or
cli
mov
xlat
cmpsb
data16
push
cmp
or
mov
adc
xchg
or
pop
mov
jg
jne
xor
xor
popf
xchg
stos
or
and
xor
xor
mov
add
dec
dec
dec
sub
sub
push
xchg
sub
xchg
mov
in
jnp
push
aad
in
jecxz,pt
pop
enter
lds
jo
add
jnp
pop
enter
fisubl
xchg
insb
lahf
sbb
mov
loop
push
dec
inc
xlat
add
dec
in
push
lret
adc
leave
scas
es
hlt
call
cmp
nop
sbb
jle
dec
repz
fbstp
mov
and
in
mov
outsl
fwait
pop
rcrl
or
das
xchg
sbb
outsb
pushf
sub
aad
inc
ficoml
dec
imul
addr16
mov
pop
or
mov
push
ljmp
bound
pop
sbb
xchg
pop
pop
adc
mov
push
aas
pop
call
xor
add
jns
inc
ds
loop
mov
jl
aad
rcrl
adcl
push
push
insl
sbbl
inc
sarb
mov
leave
mov
inc
sbb
arpl
xor
adc
xchg
jmp
icebp
xor
shrb
xchg
push
xor
fidivrs
cmp
sbb
xchg
ljmp
mov
into
mov
out
lcall
inc
fildl
inc
or
lahf
lcall
adc
lods
testl
nop
xor
push
xor
xchg
push
enter
cmp
das
ficoml
sub
sub
jge
jae
mov
test
std
mov
cmp
das
or
dec
xor
jmp
mov
cmc
xchg
je
arpl
mov
pushf
pop
imul
leave
xchg
jg
and
xchg
mov
mov
repz
ret
xchg
popa
stc
iret
jmp
fwait
sbb
aam
addb
pushf
xorb
nop
pop
lds
mov
jecxz
pusha
mov
outsl
mov
mov
jo
lcall
mov
dec
popf
mov
inc
cmp
and
out
lea
cmp
xchg
imulb
jo,pn
mov
pop
lods
mov
dec
cmp
mov
mov
loop
mov
rep
sbb
sahf
add
mov
pop
lret
mov
fs
and
inc
xchg
mov
testl
aas
adcl
fidivl
out
lret
int3
dec
mov
xor
call
pop
push
nop
jl
mov
test
add
cli
negl
mov
sub
std
mov
jo
cmp
test
jl
xchg
adcl
sbbb
pop
adc
cmp
pop
faddl
push
xor
adc
cld
lret
sahf
cld
repz
add
dec
xchg
lods
push
sar
mov
jmp
and
nop
out
aaa
in
data16
push
cmp
pop
jae
decb
mov
sti
jo
lahf
int
jne
bnd
in
cmpsb
movsb
hlt
mov
fisubrl
scas
aam
ss
push
int
push
outsb
adc
repz
cltd
jmp
push
dec
cli
daa
rclb
iret
test
push
insb
jbe
ret
fst
inc
repz
and
dec
push
mov
fcoms
mov
xor
fdivr
jbe
add
hlt
mov
sbb
xor
dec
dec
mov
fsubs
cmc
in
insl
ljmp
push
ljmp
aaa
xchg
inc
xchg
pop
pop
fs
ret
les
fwait
inc
lea
dec
icebp
mov
into
inc
imul
inc
sub
push
or
cmp
add
movsb
hlt
mov
inc
pop
dec
test
xchg
sub
movb
shlb
or
imul
sub
lea
loop
cmp
cwtl
cmp
mov
roll
cmpsb
xchg
outsl
pop
out
or
mov
adc
jbe
or
xchg
ficomps
and
push
inc
inc
stos
jecxz
fs
bound
aad
and
adc
fcoms
cmp
stc
ret
mov
jecxz
shufps
mov
sub
xor
insl
or
xchg
dec
popf
pop
fs
sub
cmc
lcall
lret
out
hlt
cmp
dec
dec
mov
xchg
das
orl
sub
mov
inc
pop
sbb
adc
adc
incb
enter
fstpl
pop
sbb
sub
xlat
test
test
and
cmpsb
and
leave
popf
lret
mov
cmp
inc
iret
daa
lahf
and
out
cwtl
dec
ja
add
cmp
pop
daa
dec
mov
push
adc
jnp
cmp
sub
sub
sbb
mov
mov
push
adc
xchg
mov
nop
rcrl
mov
mov
fdivs
adc
repz
xchg
je
lods
mov
loope
xlat
mov
aas
in
mov
push
je
pop
sbb
inc
mov
push
xchg
filds
mov
in
inc
mov
adc
sbb
hlt
pusha
push
xor
ja
and
add
push
ret
adc
mov
lock
jmp
int3
lds
icebp
repz
movb
clc
popa
push
lock
pop
add
das
push
cmp
push
shll
xor
sbb
int
xor
sub
orl
ret
stc
mov
mov
push
push
pop
xor
mov
ret
fcoml
sahf
cmc
pop
inc
insl
pop
setns
add
stos
jns
je
in
scas
fisubrl
xor
ds
pop
pop
adc
movsb
test
scas
inc
sub
repnz
mov
popa
cmpsb
cwtl
in
xchg
insb
inc
hlt
ret
sub
fmuls
xchg
and
add
pop
cld
and
push
dec
push
xchg
pop
push
test
ret
loopne
aaa
mov
mov
shl
mov
test
jae
fmul
into
mov
add
enter
jecxz
xchg
push
and
scas
and
data16
pushf
into
dec
mov
xor
cmp
mulb
scas
std
xchg
adc
insb
adc
lods
mov
dec
cmpsl
das
cltd
and
or
mov
push
lea
mov
sub
mov
fadd
sbb
neg
dec
int
jecxz
mov
call
jne
jns
inc
popf
push
cld
push
fldt
test
lds
mov
movsb
movl
mov
cmp
mov
std
ficomps
xor
xor
int
sahf
sbb
add
call
pop
sbb
rorb
lcall
push
ficoms
dec
or
rcll
in
repz
jb
fsts
icebp
xor
in
mov
adc
xor
movb
lahf
push
push
fsubp
popf
in
je
pop
repz
xchg
mov
xchg
not
dec
cmp
cmp
out
push
mull
cmp
inc
movsl
and
xchg
aad
je
add
push
mov
sbb
cmp
mov
xchg
sub
adc
mov
fldenv
pop
in
into
in
jbe
addr16
ds
fcmovnb
xor
gs
dec
fs
shll
into
ficomps
sahf
subb
mov
mov
inc
add
mov
sbb
iret
mov
ret
fwait
xchg
rep
sbb
push
xchg
aam
jne
jne
sti
and
mov
push
add
sub
mov
jle
xor
jno
pop
outsb
pop
clc
dec
scas
lcall
notl
xchg
or
inc
pushf
mov
lds
jne
std
jg
test
push
xchg
sti
jl
es
outsl
sbb
das
mov
inc
leave
inc
shl
das
cmc
sbb
stc
call
dec
cs
sbb
lods
or
lret
mov
add
int
mov
stc
push
out
push
push
aaa
pop
std
hlt
mov
mov
dec
movsb
mov
push
jb
add
or
mov
hlt
or
loop
fcmovnb
push
aam
sbb
add
inc
or
sbb
sub
or
lock
xchg
mov
cmc
arpl
xor
mov
xchg
scas
add
mov
nop
cmpb
cmp
sbb
loope
ljmp
lret
lods
in
add
mov
imul
inc
xor
push
pop
sarl
and
das
in
mov
ds
popf
mov
jbe
ret
jmp
dec
sbb
int
cmp
movsl
jno
pushf
je
push
shlb
dec
add
test
outsl
or
clc
pop
call
fld
cltd
fadds
jo
rol
xchg
popf
pop
push
push
add
nop
adc
nop
xchg
cmp
jp
bound
push
ja
fsubrs
adc
xlat
cmp
jnp
repnz
loop
add
mov
jmp
icebp
inc
jmp
mov
into
pop
fwait
sbb
xchg
lock
xor
ficoml
and
arpl
mov
nop
shl
inc
movsl
icebp
sahf
in
pop
cmpsb
xchg
sbb
push
int
xchg
rolb
mov
lahf
push
sub
fdivl
cltd
sub
int3
out
clc
pandn
addr16
ret
xchg
pop
adc
xchg
cmpsl
bsr
push
mov
aas
std
sbb
pop
gs
jmp
test
mov
or
xchg
or
mull
sub
mov
jle
add
sbb
dec
pop
loope
or
mov
mov
adc
mov
xorl
cmp
xchg
xchg
xchg
data16
int
jo
add
nop
xchg
fiadds
enter
sahf
xchg
push
mov
hlt
mov
or
out
scas
lret
adc
xchg
mov
pusha
nop
sbb
insl
sub
xor
xor
xor
fs
jb
cltd
jbe
jbe
and
mov
xlat
push
out
adc
pop
or
fucomi
pop
and
aad
inc
mov
sbb
add
mov
pop
rorb
jle
insl
push
repz
rolb
nop
data16
jge
in
sub
int3
bound
fisubrs
cmpsb
stos
push
jg
mov
inc
pop
aaa
fnsave
ljmp
xchg
in
idivb
or
mov
mov
lock
pop
pop
dec
popa
call
or
pop
daa
mov
or
adc
aam
mov
pop
push
ja
aad
dec
loope
sub
sub
pop
mov
mov
mov
sbb
scas
outsl
mov
sbb
cmpsl
js
sbb
loopne
call
push
in
push
repz
ret
mov
mov
cmp
adc
pop
and
lcall
push
inc
into
xchg
mov
push
add
leave
sbb
xor
mov
mov
repz
jo
out
jmp
jl
jg
sbb
popf
inc
or
sarb
aam
push
outsb
cmp
ret
stos
mov
out
push
mov
aaa
inc
stos
mov
xchg
adc
repnz
jae
popf
fsubl
push
jb
movsl
lea
addr16
stos
mov
imul
mov
xchg
push
xchg
dec
mov
scas
xchg
push
addr16
dec
hlt
adc
adc
je
xchg
aas
cmpl
les
popf
lcall
in
xorb
repnz
inc
sbb
stos
cmp
ljmp
xor
lods
mov
mov
sub
ret
aad
cmp
sub
xchg
mov
cs
ss
sbb
movsl
xor
add
fdivl
mov
out
mov
je
xchg
inc
or
into
add
or
sbb
repnz
cld
jmp
adc
sbb
adc
add
or
push
les
inc
mov
add
das
roll
out
movsb
bound
je,pn
call
rclb
repz
fdivr
int3
mov
scas
lock
push
jbe
ret
or
loope
jne
imul
xchg
jecxz
xor
xor
inc
popf
fsubs
jbe
sub
test
pop
xor
xchg
and
filds
or
mov
and
mov
mov
scas
xor
addr16
mov
enter
xchg
outsl
out
adc
sub
push
movsl
xor
or
cld
xor
add
gs
popa
in
cwtl
adc
adc
into
cmp
sub
pop
inc
mov
aad
rorl
outsl
dec
cli
cli
sub
in
xchg
bnd
out
jl
xchg
mov
pop
adc
stos
xor
leave
pop
pop
mov
nop
inc
xchg
in
dec
sub
test
lods
jnp
pusha
jge
rcrl
jmp
fdivs
xchg
inc
add
inc
mov
xchg
inc
pop
je
inc
or
cmp
in
jb
and
loopne
fwait
or
pusha
dec
das
xchg
jno
outsb
inc
ret
dec
xor
or
shlb
test
xor
xor
jecxz
and
push
xchg
mov
jae
aad
rorb
imul
dec
pushf
enter
push
scas
jno
sbb
add
mov
cli
loope
insb
sub
iret
ja
iret
mov
mov
pop
lahf
push
jecxz
pop
jp
xchg
xchg
push
call
sbb
ds
mov
pop
negb
dec
mov
jmp
xchg
mov
sub
cmp
adc
jnp
push
aad
cmp
sbb
or
inc
lret
lcall
dec
fisttps
scas
inc
iret
shll
loope
pop
push
int3
fucomp
mov
pop
in
mov
adc
or
ret
jnp
rol
lods
std
or
mov
add
pop
les
xchg
psubsb
push
and
lahf
dec
cmp
cli
stos
sub
leave
cmpsb
dec
jnp
stos
and
mov
add
ss
mov
lea
sub
jle
push
test
pop
cmc
movsb
mov
adc
and
cltd
inc
xor
dec
sbb
repnz
scas
jecxz
mov
enter
repz
add
push
push
inc
test
xchg
mov
push
add
and
lret
stos
into
std
add
dec
stos
xchg
pushf
xchg
out
inc
pop
enter
gs
lea
cwtl
mov
mov
out
mov
movsb
mov
xchg
std
push
mov
lods
pop
movl
fldcw
scas
jb
jl
popf
cs
sahf
loopne
mov
adc
ljmp
arpl
rcr
pop
jmp
aas
or
sbb
sub
mov
insb
dec
pop
bound
jno
cmpsl
add
push
sbb
add
imul
jne
mov
and
ja
leave
mov
addr16
cltd
add
lods
lcall
rolb
inc
jg
popf
fistpll
or
hlt
mov
pusha
std
mov
loopne
cmp
and
inc
out
and
adc
int
jmp
out
ljmp
mov
cmp
dec
push
out
jecxz
out
xchg
inc
fwait
mov
dec
loope
outsb
hlt
xor
dec
repnz
add
test
or
push
fcoml
into
push
xor
dec
dec
push
and
ja
inc
xor
cld
add
adc
cmpsl
mov
add
or
pop
rclb
xor
mov
mov
test
idivb
aad
push
ret
fiadds
out
icebp
pop
subb
pusha
movsb
adc
decl
int3
pop
mov
dec
stos
adc
adc
repz
mov
mov
xchg
sbb
imul
orb
pop
fsubrl
ror
jl
add
pop
push
insl
dec
jae
ret
fmuls
rorb
data16
pop
mov
scas
pusha
adc
cli
adc
push
inc
add
divb
hlt
test
out
xchg
mov
sub
jnp
push
pop
inc
xor
jl
stos
or
mov
in
fdivrs
sub
ljmp
inc
into
lds
pop
clc
popf
clc
xor
sbb
xchg
jmp
scas
jno
mov
popf
outsb
push
xchg
or
adc
adc
and
fdiv
popa
push
mov
pop
shlb
jns
add
ret
xchg
inc
jbe
shl
or
push
cmp
push
fcom
adc
sub
outsl
scas
aam
in
daa
movsb
xchg
pop
fidivs
mov
repnz
adcl
imul
lret
push
add
add
mov
pushf
enter
outsl
mov
arpl
repz
stc
cwtl
insb
cld
lahf
xchg
hlt
add
xchg
mov
sbbb
and
jnp
or
adc
int3
add
xchg
jo
jmp
inc
nop
mov
aad
sub
dec
divb
in
jmp
adc
pop
adc
push
test
js
pop
scas
stc
inc
push
mov
into
test
dec
push
xor
sbb
cmp
mov
or
scas
adc
stos
pushf
cmpsb
pop
fidivrs
lods
inc
daa
mov
mov
shll
push
xor
lods
bound
clc
push
rcrb
lret
mov
test
in
jae
cltd
movsb
push
mov
lea
xchg
cmc
fcoms
push
out
push
push
cmp
cld
pop
jmp
ret
cmp
ja
ds
adc
inc
sbb
int
in
pusha
mov
mov
in
mov
dec
mov
insb
outsl
nop
pop
loop
sub
pop
xchg
ja
shlb
dec
lcall
int3
jo
mov
push
sbbl
repnz
or
aaa
xchg
push
cmpb
pop
out
add
ja
into
cmp
cmp
mov
mov
leave
adc
add
dec
loop
add
xor
add
clc
jo
pop
ljmp
sbb
mov
rolb
xor
test
cmp
and
inc
repz
insb
ljmp
add
push
in
adc
inc
push
cltd
fldt
popa
sub
or
inc
cmp
aad
pop
dec
sbb
fs
movsb
mov
xchg
mov
test
int3
or
dec
sbb
test
leave
ss
jp
lods
neg
jno
sub
int3
mov
popf
mov
pop
cmp
das
leave
mov
xchg
push
sub
pop
shl
fcomip
xor
and
lcall
fidivs
push
addb
xor
inc
jge
push
xchg
sbb
mov
inc
ficompl
pop
push
mov
push
cmp
inc
or
inc
out
les
add
lock
push
or
and
outsl
push
pusha
mov
or
xchg
in
shll
cs
inc
call
jne
xchg
adcl
adc
dec
mov
mov
pop
and
inc
sbb
inc
imul
int
pop
xorb
ds
mov
pmullw
mov
lds
sbb
jge
les
dec
xlat
or
xchg
gs
nopl
mov
sbb
fidivl
add
pop
std
adc
push
fnstenv
push
les
pop
std
mov
rcrl
inc
and
les
das
sub
lds
lret
or
and
xchg
ret
dec
sub
and
aam
xchg
stos
in
mov
xchg
mov
and
pop
repz
fidivl
and
test
lahf
sbb
scas
xor
pop
mov
in
jnp
frstor
sahf
ficoms
inc
mov
push
movsl
stos
xor
cli
pop
sub
pusha
pop
lret
jl
inc
jmp
jnp
out
ffreep
mov
dec
and
xor
cmp
mov
lret
jno
sub
pop
inc
mov
sbb
gs
mov
cmp
add
push
cmp
mov
sub
sub
xchg
lahf
xchg
push
inc
dec
mov
cmpsl
sub
test
push
and
inc
pop
pop
les
andb
mov
test
aas
lret
insl
out
lods
and
add
xchg
xchg
fsubr
sbb
dec
mov
pop
sarb
scas
adc
sub
stos
arpl
inc
stc
lcall
enter
xchg
add
mov
test
xor
pop
xor
out
rorb
sub
mov
pop
dec
mov
sub
mov
jecxz
sub
aam
pop
pop
xchg
pop
and
lret
mov
aas
xchg
dec
sahf
cmpsb
pop
or
sub
jbe
mov
rclb
insb
sahf
dec
test
mov
call
outsb
int3
cli
mov
push
fdivrs
cli
mov
or
rcrb
out
jmp
in
aad
outsb
cltd
or
jnp
nop
scas
ds
sahf
test
add
fwait
lock
mov
es
je
xchg
frstor
repnz
shr
out
arpl
xor
push
cmpsb
cmp
lret
daa
cmp
xor
arpl
iret
jge
aad
sub
dec
rcll
movsb
sti
lret
xchg
fiaddl
fsts
and
loope
icebp
bound
imul
pop
inc
les
sbb
xchg
aas
ja
out
sbb
push
mov
add
enter
mov
sbb
mov
ss
pop
sbb
pusha
dec
push
cmpsb
sub
jmp
repz
leave
push
push
push
inc
xor
leave
inc
divl
cmp
push
stos
sbb
ret
movsb
pushw
jae
fcoml
mov
and
in
sbb
cmpsl
mov
mov
sti
popf
sbb
mov
jge
bswap
enter
mov
loopne
lock
pushf
push
xchg
ja
js
loop
nop
ror
das
loopne
jmp
jg
sbb
sub
fbstp
sti
test
pop
je
mov
jl
mov
or
adc
cmp
and
lods
call
lret
pop
std
mov
cmp
add
jmp
test
xlat
fisttpll
and
mov
int
sub
xchg
mov
jle
xchg
ret
pop
shlb
test
idiv
je
add
insb
sbb
por
mov
jl
rolb
push
popf
out
es
mov
test
dec
cmp
out
fstl
data16
roll
dec
jmp
mov
pop
aas
and
ficompl
divl
ja
push
sbb
cld
mov
mov
push
ret
pop
lret
les
pmaxsw
or
cwtl
mov
push
or
jmp
out
jne
xchg
mov
dec
std
je
push
inc
fldl
push
aam
jl
mov
cmp
in
shlb
push
or
or
xor
jae
popa
mov
call
in
sbb
dec
xchg
adc
mov
and
hlt
inc
js
mov
inc
stos
lods
add
movsl
divb
shll
je
mov
out
xchg
je
mov
subl
xchg
ret
sub
or
xor
mov
test
insb
mov
popa
insl
or
mov
mov
inc
push
xlat
out
aaa
sbb
bound
lret
nop
mov
in
loop
mov
incl
mov
mov
sahf
cltd
fnstcw
sti
aad
xchg
xchg
mov
xchg
dec
fildll
adc
daa
sbb
or
and
mov
das
sub
xorb
lock
aaa
repz
pop
dec
mov
ljmp
mov
dec
arpl
icebp
pop
inc
lea
adc
repz
jp
jl
xchg
stc
je
push
pop
lahf
movsb
call
gs
pop
xchg
fsubs
iret
xchg
sub
sar
sub
test
sbb
mov
mov
and
jg
mov
sbbb
ja
stos
add
dec
pop
call
mov
xchg
dec
insl
jnp
lods
xchg
pop
add
jmp
lahf
xor
ret
mov
sbb
dec
xor
mov
ljmp
lahf
push
jecxz
mov
aam
loope
or
ss
mov
in
shlb
cli
addb
cmp
lahf
decl
shlb
andl
mov
sub
mov
fsts
add
sbb
sbb
das
add
int
jbe
dec
leave
ja
add
stos
push
inc
pusha
mov
adc
aaa
fnstenv
mov
xor
cmp
push
ja
push
int
dec
cmpsb
loopne
das
std
pusha
dec
jbe
sub
arpl
inc
jg
mov
dec
mov
outsb
shlb
inc
jg
scas
mov
rcrb
xor
xchg
and
add
mov
sbb
sub
sahf
push
pop
shl
sbb
scas
fnstcw
divl
jp
stos
shrl
push
xor
test
push
pushl
xor
fwait
sbb
es
inc
movsl
je
cs
hlt
hlt
imul
cmp
div
into
int3
sub
mov
arpl
add
jecxz
std
int3
ljmp
dec
push
adc
sbb
testl
es
mov
mov
in
lahf
fdivp
push
aas
ret
xchg
gs
fwait
jns
in
inc
pushf
les
in
or
mov
mov
movsb
pop
in
scas
mov
movsb
jae
cld
out
loop
arpl
int3
mov
mov
jp
adc
xor
push
mov
or
dec
and
inc
pop
sbb
pop
sub
xchg
fadds
push
fisttpl
loop
gs
xchg
mov
cmp
add
jne
insl
jmp
aaa
cltd
pop
gs
mov
outsb
fimuls
adc
ss
xchg
ficoml
mov
mov
jmp
pop
loop
sub
mov
int3
femms
aam
mov
ds
inc
push
jbe
iret
mov
in
cmp
lock
jge
xor
mov
sub
cs
inc
incl
movsl
mov
fs
jb
movsb
and
push
push
pop
cltd
arpl
cld
inc
fldcw
mov
es
cmp
dec
enter
cmp
xor
xchg
push
dec
outsl
push
mov
lock
fstl
push
flds
or
xor
adc
jecxz
addr16
add
cmc
sub
and
dec
inc
cld
inc
out
sub
scas
movsl
sbb
or
pushl
cld
arpl
aad
popf
inc
ljmp
inc
and
clc
inc
lret
hlt
cmp
sbbl
cmc
repz
jmp
loop
sbbl
fidivrl
mov
dec
std
mov
adc
ja
fists
fsts
rcrb
xor
pop
testl
out
push
fiadds
and
cmp
imul
mov
inc
fst
xorb
add
fdiv
roll
xchg
adc
iret
stc
dec
iret
aaa
jb
jns
pusha
xchg
mov
or
adc
in
mov
inc
and
fldt
aas
cmpsl
ss
sbb
cmp
imul
xchg
gs
mov
mov
les
mov
cmc
shll
imul
sub
jmp
fstpt
cli
xor
adc
enter
adc
es
xchg
arpl
and
aaa
cltd
fsub
pminub
sbb
ror
popa
mov
aaa
sub
mov
ds
xchg
repnz
test
lds
test
push
inc
mov
jmp
xor
cs
or
sbb
pop
sub
or
adc
mov
insb
mov
jmp
cmp
imul
and
add
fwait
and
ss
decb
loop
mov
in
idivb
inc
das
insb
push
cwtl
or
test
mov
dec
fistpll
movsb
lds
adc
add
test
pop
fsubr
outsb
cmp
data16
psubusw
outsl
lret
inc
stos
push
xchg
adc
pop
add
adcl
jb
pop
shlb
in
and
lods
cld
dec
mov
xchg
adcb
xchg
ja
xchg
es
insl
rep
and
xor
ret
test
stos
aaa
push
iret
mov
adc
sbb
pop
jb
mov
jne
ret
stos
aam
dec
dec
lock
mov
mov
push
dec
sub
repz
loopne
lcall
lods
mov
mov
mov
push
clc
mov
lea
adc
divb
rcr
pop
push
adc
sbb
test
ja
jle
jl
or
mov
shll
mov
or
sbb
stc
loope
mov
outsl
push
cmp
popa
xor
adc
inc
mov
inc
addr16
jg
lea
cwtl
gs
mov
mov
add
mov
mov
mov
cwtl
lds
jge
lock
and
shll
roll
int
push
cmp
mov
jae
in
cmpsl
in
insl
add
sti
pop
stc
fsubrs
or
push
pop
fcoms
int
and
xchg
stos
clc
in
aad
add
push
lods
call
aas
loop
pop
mov
jno
pop
xchg
sti
mov
imul
out
rcr
add
or
in
add
ret
mov
jle
cmc
mov
mov
std
enter
sub
arpl
mov
or
push
adcl
arpl
jecxz
mov
outsb
lret
filds
dec
iret
outsl
fnstenv
push
mov
push
jl
mov
mov
jbe
inc
adc
leave
xchg
xchg
mov
xor
loope
mov
adc
inc
push
mov
jbe
dec
cmp
shll
loopne
cmc
imul
add
repz
and
cmp
add
sbb
push
push
fwait
mov
in
arpl
mov
leave
mov
jo
dec
fs
cli
fmuls
cmp
or
add
es
lods
pop
lock
into
push
jbe
xchg
js
shrl
mov
aad
jne
loopne
mov
leave
add
xor
inc
negl
scas
jl,pn
imul
push
inc
sbb
dec
mov
test
pop
mov
data16
inc
nop
pop
fcomps
sub
jne
loopne
push
js
dec
jg
inc
addr16
fnstcw
fs
sub
call
jo
repz
mov
cld
pop
adc
int3
cmp
jecxz
nop
cli
push
jne
pusha
pop
or
push
mov
fidivs
clc
xchg
in
popa
jb
sub
pop
cmp
dec
insb
mov
mov
mov
xchg
and
push
inc
cwtl
mov
fdivs
dec
fs
fidivl
pop
or
lret
xor
xchg
and
test
mov
sahf
jecxz
outsb
xchg
int3
and
jmp
mov
mov
mov
sbb
js
icebp
cmpl
cmpb
or
test
jne
add
scas
iret
mov
ja
rorb
aas
negl
xor
xorl
sub
cmp
fucomp
gs
and
ret
fimuls
inc
inc
adc
mov
adc
push
or
adc
sub
push
fstl
xor
inc
std
jl
xor
sti
push
sti
sti
or
in
xor
stc
in
jp
sub
add
test
push
pop
pop
mov
aam
or
mov
cli
mov
mov
jecxz
and
ljmp
mov
rcrb
lahf
xchg
ret
test
xor
push
js
adc
ljmp
xchg
mov
sbb
cld
pop
leave
mov
mov
xor
jge
negl
jne
pushf
sub
test
xor
mov
cmp
outsb
jg
xor
aaa
sub
notb
orb
ss
add
in
aam
lcall
adc
jge
jne
imul
pop
and
jecxz
mov
into
stos
xchg
push
adc
movsb
push
out
push
repnz
leave
out
aad
jmp
fdivrl
repz
pusha
mov
lock
in
sub
push
repnz
xor
mov
cs
jp
cmpsl
jae
shrb
sbb
sub
xor
sarl
pop
adc
inc
mov
fcomp
jle
sub
cmp
scas
pushf
jecxz
mov
push
adc
dec
add
lcall
mov
rorb
jb
aas
jl
enter
cmpsl
pop
cmp
adc
mov
mov
pushf
hlt
adc
mov
ja
or
test
inc
mov
test
daa
loop
ds
add
ss
and
mov
mov
xor
ret
sub
in
push
fcmovnbe
aad
jmp
jb
jge
imul
aaa
rolb
inc
les
xor
and
aas
sahf
test
cmp
jge
aad
mov
in
out
sub
enter
lock
out
mov
cmpb
lock
arpl
ljmp
cld
dec
mov
test
adc
hlt
jns
inc
sub
notl
dec
imul
xchg
lret
push
push
xchg
mov
nop
add
pop
stos
push
movsb
fs
sub
adc
jmp
aas
sub
shr
sti
push
push
addr16
into
icebp
mov
jle
and
add
pop
popf
orl
repz
mov
shl
js
sub
fiaddl
mov
adcb
lret
scas
fisttpll
mov
popa
sub
stos
push
cmp
add
or
adc
repz
cli
dec
pushf
xchg
mov
mov
cmp
rol
jge
adc
pop
xchg
adc
das
mov
mov
leave
inc
repnz
and
sahf
lock
cmpsl
jl
push
loope
mov
popf
or
xor
hlt
fwait
enter
notb
sub
jecxz
cmp
test
fnstcw
fwait
loope
jecxz
sti
adc
jo
and
int3
loopne
push
push
fwait
jne
push
dec
popf
js
push
rcrl
out
movsl
outsl
shll
adcl
mov
cmp
negl
pusha
mov
ja
insl
cmp
mov
jge
and
aam
xchg
sbb
jle
int
je
push
push
ds
mov
sub
das
jbe
mov
push
xchg
push
sub
jp
add
xchg
incl
or
lahf
lcall
shll
scas
mov
pop
cmp
inc
jmp
and
cmp
xorl
jle
les
xchg
ss
pop
fwait
shrl
adc
sbb
dec
or
bound
cltd
andl
packssdw
std
sub
mov
outsl
xor
add
mov
mov
stos
jne
and
scas
inc
cmc
rcr
xchg
sub
sbb
lret
cwtl
pop
push
hlt
sub
addr16
test
xchg
adc
jnp
inc
add
and
jb
lea
or
and
cmp
pusha
xchg
jb
mov
addl
cmp
mov
fwait
subb
mov
push
adc
push
dec
xor
scas
dec
jp
mov
add
jecxz
pushl
sbb
pop
imulb
hlt
fisubs
inc
mov
jle
sbb
dec
mov
xchg
cmpb
aaa
jb
dec
sub
lahf
jle
rclb
shrb
loop
test
cmp
pop
mov
lock
mov
mov
push
dec
cmp
mov
in
pop
xchg
sub
fidivrl
xchg
movsl
adc
shll
movsl
pop
test
dec
mov
jmp
cwtl
push
andb
mov
dec
pop
mov
scas
dec
stc
adc
icebp
clc
inc
repz
mov
add
setbe
test
std
inc
and
outsl
int
xor
cmpl
icebp
jno
and
push
test
sbb
pop
mov
mov
adc
and
fstpt
xchg
js
dec
out
rcr
push
pusha
sarl
dec
notl
inc
lcall
scas
pop
cmc
scas
mov
mov
shrb
mov
pop
mov
jb
jge
frstor
pop
jno
or
call
mov
cmp
enter
fwait
leave
xchg
and
enter
rcrb
and
sub
cld
xlat
in
in
jle
fs
mov
adc
mov
mov
and
pushf
lea
leave
xchg
or
js
and
in
jne
sar
call
aad
xlat
sub
aam
mov
pop
jl
cli
daa
jo
mov
ss
lods
and
pop
jecxz
shrl
inc
in
jge
or
ret
fsubl
jo
pop
push
dec
xor
adc
rorb
pop
pop
sub
or
int
sub
jnp
mov
inc
lahf
and
push
cwtl
mov
jle
out
sbb
adc
aas
test
rcr
cs
xchg
push
xchg
in
pop
jae
push
stos
andl
xchg
xor
ss
pop
es
dec
push
lods
in
and
mov
int3
call
call
or
lret
pop
sbb
push
inc
xchg
cltd
ljmp
out
pop
inc
popa
outsb
shlb
cltd
adc
aad
mov
cli
or
mov
leave
mov
hlt
dec
pop
or
cld
dec
enter
movsb
mov
push
jno
dec
mov
adc
xor
sbb
lods
dec
and
and
xchg
pop
add
lret
or
shlb
cmp
cld
inc
es
notb
shll
push
xchg
dec
fwait
cmp
dec
sub
pop
lock
addr16
aaa
pop
pop
lea
decl
pop
add
icebp
jnp
in
mov
test
xchg
loop
dec
repz
fadd
cltd
cmp
push
xchg
or
sbb
jp
inc
inc
add
test
sub
cmp
sub
add
icebp
scas
push
insb
scas
xchg
mov
ret
ljmp
xchg
adc
pop
inc
add
mov
mov
pop
out
push
cmpsl
xor
lcall
mov
add
out
ds
in
dec
or
lret
jge
dec
or
jne
out
outsl
xor
and
push
fdivs
push
xchg
inc
lds
pusha
fcmovbe
ja
fcmovne
mov
addb
stc
idivl
sbb
shl
xchg
test
xchg
loope
dec
and
std
addr16
repz
xlat
push
adc
dec
sub
cmpsb
inc
mov
sbb
push
pushf
cwtl
fdiv
pmulhw
insb
mov
inc
cmp
std
test
mov
mov
ss
cmpsb
xorl
test
or
lret
xor
ljmp
popa
and
aaa
ret
pushf
sarl
gs
mov
inc
or
dec
rcrl
push
movsb
xchg
fadds
iret
cmp
mov
xchg
inc
xor
pop
mov
cmp
int
jmp
pop
scas
push
pop
pop
inc
movsl
mov
pop
dec
ja
xor
scas
add
push
inc
repz
mov
lods
pop
dec
adc
cmp
sahf
inc
loopne
sahf
std
repnz
pop
pop
std
mov
in
hlt
mov
and
cwtl
mov
mov
ja
xchg
mov
sbb
adc
sub
push
lea
cmp
aaa
inc
jno
ss
adc
cld
xor
stos
push
outsl
lock
aad
aaa
mov
or
scas
pop
push
lea
insl
aam
fcoml
xchg
sub
push
sahf
mov
les
mov
loop
addr16
xlat
jecxz
mov
cmp
lret
loope
xor
sarl
lock
cs
jne
or
fistpll
iret
mov
cmpb
dec
int3
and
movsl
lcall
imul
mov
pop
nop
sbb
mov
rolb
aam
and
mov
stos
cmp
fsts
dec
dec
xor
rcrb
icebp
bound
mov
lahf
in
inc
iret
cmp
aam
shlb
mov
leave
or
push
jg
repz
lcall
adc
xchg
inc
enter
daa
in
enter
mov
push
mov
enter
mov
cld
in
jo
pop
inc
push
lds
lahf
fucomp
mov
cs
ja
lock
sub
movsl
in
and
aad
cmp
xor
sbb
aas
inc
in
fadds
cmp
pushl
fldt
fdivp
rorl
clc
notl
int
push
sub
sbb
mov
pop
push
pushl
sbb
pop
je,pt
int
loope
cmp
fsubr
push
cmp
sbb
jo
outsl
out
xchg
adc
jl
loopne
mov
add
dec
es
push
sbb
xor
and
les
stos
xor
lods
test
sub
mov
insl
mov
stos
mov
setle
loopne
push
sub
push
cmp
aam
fs
hlt
std
js
movsb
aaa
sub
das
int
ror
mov
fsts
sub
fstps
cmpsl
mov
es
ss
or
adc
ljmp
orl
fnsave
scas
fdivrl
pop
xchg
sbb
lahf
ss
sbb
es
cli
mov
cmpsl
adc
ret
lods
imul
iret
hlt
std
pop
hlt
daa
push
cmpsb
mov
pop
cmp
add
hlt
jg
pop
fdivl
push
inc
iret
inc
ds
xchg
pop
mov
inc
mov
repnz
hlt
jmp
push
out
mov
aas
outsb
loope
lock
out
inc
arpl
jle
dec
lods
and
xchg
and
xor
mov
es
ss
aam
stos
adc
jbe
add
and
insb
jae
xchg
insl
and
loopne
repnz
sarb
in
popa
popf
scas
lcall
xor
sbb
or
call
or
xor
mov
cltd
insb
fwait
cld
addb
mov
fwait
jmp
dec
push
js
xor
and
jg
jne
fwait
inc
loopne
js
mov
jbe
pop
jl
adc
lea
cmp
filds
push
xor
pop
dec
addw
xchg
ret
add
cmpb
or
mov
aaa
sahf
or
pop
push
les
shll
nop
enter
test
jns
mov
adc
addl
xor
sbb
sub
cmpsb
cmp
add
ljmp
movsl
mov
lock
or
fldenv
adc
aaa
insb
jecxz
mov
aad
pop
je
pop
or
adc
gs
jecxz
adc
cmpsl
mov
aad
lods
mov
mov
inc
sub
push
mov
ljmp
stc
stos
test
pop
cwtl
aam
insl
xchg
jns
xor
mov
divl
xchg
jp
repnz
mov
outsb
in
in
push
adcb
sub
or
push
xchg
xorb
in
ja
lahf
inc
lds
xchg
neg
out
fildl
and
or
and
inc
mov
mov
push
fnsave
xchg
popa
out
daa
stos
ljmp
iret
addr16
and
addl
stc
rcrl
and
xchg
xchg
decl
out
push
cmc
push
cmp
xor
xchg
sub
stos
xor
js
stos
fwait
mov
bound
mov
jp
adc
clc
stc
cmp
mov
jno
push
cmpsl
adc
in
fidivs
add
push
add
xor
xor
jmp
fstpl
mov
push
es
push
xor
shrl
and
sarl
and
jp
adc
xchg
dec
and
fsubl
jae
mov
insb
fists
jb
inc
andl
and
add
ffree
scas
out
pop
out
push
shlb
add
ljmp
jbe
arpl
dec
test
pop
aaa
sub
scas
inc
stc
outsb
cwtl
bound
call
loope
cmpl
shll
add
dec
and
sahf
mov
testl
je
cmpsl
out
fdivs
test
call
push
cmp
ret
in
aam
cmp
mov
sahf
jecxz
and
insb
fmull
mov
stos
jbe
cmp
cs
test
mov
imul
sti
and
loopne
mov
or
sahf
dec
cld
pop
ret
imul
out
jnp
xchg
iret
out
mov
pop
out
fs
ret
imul
cmpsl
mov
mov
loop
and
pop
dec
scas
sti
sbb
add
dec
andl
into
fcmovne
xchg
ret
sahf
mov
lcall
sub
pop
fnstenv
rcrb
sbb
aad
lods
bnd
jmp
sub
jae
cs
jnp
das
test
mov
shll
popa
xor
in
jle
das
inc
das
mov
jb
les
adc
and
fdivl
inc
jns
sahf
pushf
stos
sbb
cltd
jne
mov
int
pusha
pusha
bnd
adc
ficoms
xor
cmpsl
leave
repz
mov
movsb
xor
and
int3
std
dec
popl
hlt
xchg
inc
push
adc
mov
stos
iretw
push
push
jb
mov
imul
movsb
popa
cli
mov
lea
aaa
movsl
mov
pop
shrb
dec
dec
movsl
xchg
mov
out
push
shr
push
sahf
mov
loopne
or
ds
cli
xchg
fstps
xor
inc
add
mov
repnz
gs
add
xchg
sbb
xchg
cmp
xchg
or
xor
mov
inc
sub
mov
mov
out
adcb
and
lcall
jle
rcrl
add
add
xor
push
imul
cltd
inc
mov
jnp
call
xchg
cmp
dec
push
mov
insl
push
cmpsb
mov
aad
in
xor
xor
mov
mov
mov
cmpsl
xor
aas
inc
pop
xorl
fdivr
mov
inc
sbb
jp
sub
pushf
add
clc
gs
lods
xchg
sub
dec
inc
xchg
jne
dec
mov
insl
xor
mov
pop
hlt
adc
out
jnp
test
push
pop
inc
sbb
mov
xor
jb
out
mov
ja
sbb
daa
sbb
cmp
stos
mov
push
xchg
ss
mov
les
jae
cmp
push
les
repz
pop
lahf
sbb
adc
in
int
stc
rcr
popf
into
mov
aam
sbb
push
gs
bound
clc
lret
lods
fstpt
mov
fisubrs
out
and
mov
ret
aas
fwait
out
or
cld
sub
in
mov
mov
lret
js
adc
adc
loop
mov
pop
mov
sbb
call
jbe
ds
add
jns
mov
inc
adc
fs
imul
jle
rcll
movups
lcall
inc
cmp
pusha
fwait
add
shlb
push
movb
lret
lock
inc
mov
xchg
jp
inc
add
in
repz
shll
adc
add
push
sub
adc
cli
xchg
push
push
xor
push
mov
pusha
mov
pop
pop
push
push
popa
mov
ror
fnstsw
das
mov
push
test
rol
mov
push
fwait
or
add
jb
cmp
lock
mov
dec
ljmp
lods
lock
je
dec
sahf
ds
bound
or
movsb
pusha
jns
pop
subb
jle
faddl
push
xchg
bnd
mov
adc
or
ja
mov
fisubl
iret
icebp
loopne
inc
ja
sub
xchg
jg
jnp
jmp
adc
sub
scas
jb
and
or
inc
sbb
aad
outsl
sahf
push
lcall
ret
dec
dec
shld
aad
cmp
fstps
jo
test
and
sub
jns
inc
xor
imulb
inc
cmp
in
stos
jae
pop
cmp
outsb
dec
inc
xor
jb
out
nop
adc
mov
mov
cmp
into
aad
add
cmp
xchg
sbb
inc
xor
js
loopne
sub
cmpsl
cwtl
div
data16
adc
inc
loop
adc
pop
jns
out
dec
jge
insl
out
mov
ljmp
imul
cmp
lock
cltd
xchg
jae
inc
stos
cmc
incb
adc
push
adc
int
pop
mov
pop
xor
jne
shll
push
movsb
sbb
loop
in
pop
cmpsl
add
cmp
call
push
adc
scas
clc
sub
daa
andl
mov
jns
outsb
sarb
push
inc
cli
mov
adcl
push
rcl
cmp
pop
aad
cli
iret
sub
lods
add
fisttpl
loope
xchg
lahf
aas
pop
pushf
rcr
int3
sub
or
popa
mov
jno
int
cmp
sub
imul
add
lds
movsl
pusha
push
aam
call
and
jne
sub
xchg
pop
rcr
jb
hlt
dec
std
fimull
fnsave
pop
inc
lcall
mov
fimull
repz
stc
push
push
dec
cs
xchg
daa
outsb
sarl
sub
pop
aas
out
push
or
xor
mov
cwtl
sti
fimuls
push
sti
push
or
sbb
add
lods
xchg
jle
lds
sbb
xor
outsb
push
test
lods
and
in
sub
or
xor
sbb
mov
ret
fwait
mov
popf
fs
test
cmp
sub
dec
push
cltd
jbe
sub
mulb
shll
push
fstpt
or
imul
mov
andb
test
addb
xor
cmp
ss
mov
icebp
rcrb
adc
xchg
scas
cmp
xchg
aam
mov
pushf
insl
ds
jg
jl
roll
jne
aaa
popf
sbb
xchg
add
jbe
fstp
jae
mov
xor
mov
and
push
repz
daa
vunpcklps
jle
push
pop
popa
and
loopne
and
sti
mov
test
xor
sub
mov
scas
loope
mov
or
adc
shlb
xchg
or
ljmp
mov
aam
fwait
xchg
cmp
add
adc
mov
mov
pop
mov
add
mov
popf
dec
xor
test
xor
pop
sub
pop
and
sbb
pop
pop
cmp
fistpll
xchg
sbb
adc
icebp
sbb
faddp
push
cmp
dec
push
imul
and
cli
or
sub
ret
test
push
or
outsl
mov
mov
adc
in
add
inc
add
mov
outsb
gs
inc
divl
mov
adc
add
lcall
jge
aaa
sbb
les
mov
pop
jge
adc
sbb
movl
sti
inc
rcl
jle
or
insl
and
cmpsb
in
sub
jnp
xchg
pop
adc
jnp
movsb
add
fcompl
orb
push
in
pop
popa
mov
mov
sahf
lcall
fdivrs
jmp
subl
mov
add
shrb
cltd
mov
mov
jb
dec
jbe
cld
outsl
add
pushf
xor
movsb
sub
cmpsl
mov
in
loope
loop
cmp
rorl
mov
cmp
mov
rclb
push
lods
add
mov
mov
negl
sahf
ja
cli
fcom
negl
add
mov
push
es
push
and
mov
test
and
adc
inc
fimull
adc
sbb
and
ja
ljmp
fsubl
push
push
xor
popa
jne
xor
mov
or
xchg
movsb
xor
or
movsl
adc
stos
pop
mov
lods
dec
ret
or
sbb
dec
push
out
xlat
aam
pop
xchg
ret
xchg
ret
inc
daa
adc
shll
push
out
repnz
and
rcrb
mov
out
shl
jg
mov
fld
pop
out
xor
inc
std
arpl
std
lods
jns
adc
fnsave
iret
mov
xchg
xor
pusha
push
jnp
daa
scas
pop
mov
jmp
mov
mov
int
fisttpll
cmp
xor
cmp
inc
cs
aad
xor
clc
jmp
mov
xchg
dec
fidivrl
push
popf
adc
data16
sbbb
xchg
mov
adc
ffreep
mov
and
test
inc
adc
aas
dec
xor
mov
bound
inc
mov
push
xor
inc
pop
jl
jbe
xchg
fs
cltd
push
push
jle
arpl
cmc
pop
fdivrs
pop
out
loopne
adc
bound
pop
ja
loopne
push
fisubrl
adc
repnz
in
xchg
sub
sbb
loopne
loop
adc
imul
or
pop
pop
adc
test
rcll
push
xchg
cmp
je
stos
out
mov
add
push
test
imul
sbbl
outsb
push
pop
inc
fists
clc
and
orl
into
lahf
push
lock
sbb
sti
jne
xor
mov
xlat
aad
btrl
fst
divl
dec
test
outsl
xor
mov
mov
clc
sbb
clc
mov
fcoms
jnp
cmc
mov
cmp
aam
xor
out
jmp
dec
out
mov
insb
int3
pop
jp
mov
addr16
dec
mov
xchg
sbb
xchg
or
in
push
outsl
mov
lcall
adc
or
jne
sub
popa
es
xchg
notb
cli
jl
add
divb
sbb
lock
push
mov
pusha
rorl
xchg
rcrb
test
add
push
xchg
test
sti
data16
test
jle
out
xchg
cmpsl
imul
cmp
mov
rcr
jno
push
scas
jp
popf
or
addb
in
push
ss
mov
lret
or
lcall
shrl
mov
and
cmp
jne
imul
or
dec
xchg
addr16
shl
int3
fists
adc
or
cmp
insb
mov
test
pop
stos
pop
clc
stos
ror
fucomp
and
or
out
dec
jmp
je
insb
inc
jae
inc
or
aam
imul
adc
je
adc
xor
jno
lahf
inc
fcoms
fs
stc
add
arpl
add
scas
leave
xchg
pop
pop
leave
add
mov
test
xchg
sub
dec
inc
xor
mov
movsl
mov
nop
xchg
adc
mov
mov
or
sahf
das
cwtl
sbb
lahf
out
push
and
pusha
and
out
scas
mull
jecxz
inc
pushf
cs
imul
xor
mov
mov
dec
clc
dec
mov
sti
mov
pop
lds
lahf
icebp
lds
push
xchg
je
aaa
fs
in
mov
outsl
or
sbb
popf
dec
mov
mov
jne
mov
push
adc
fimull
cmp
cwtl
push
scas
and
icebp
push
test
addb
out
insb
jp
stos
lcall
lea
rorb
sbb
xchg
add
mov
test
and
sbb
jp
leave
push
cmp
jge
cltd
imull
test
ja
jo
fwait
ljmp
push
pop
out
jle
les
mov
xchg
jb
jmp
and
cmp
leave
das
out
rolb
mov
push
ljmp
xor
pop
xchg
in
push
stc
rcrl
jno
pinsrw
hlt
xchg
out
insb
int
std
mov
cmc
mov
loope
mov
ret
pusha
ror
call
cmp
int
add
adc
inc
sbb
dec
dec
mov
xlat
dec
mov
aam
jbe
dec
add
xor
inc
out
push
movl
mov
outsb
jmp
cmpsl
pusha
test
aam
sbb
test
ja
pop
adc
fwait
xchg
adc
cli
cmp
sbb
inc
mov
dec
cmp
add
jl
sbb
imul
or
xor
jb
pop
jecxz
shll
cmp
push
rorb
lret
pop
lock
lock
ret
pop
pop
xchg
or
enter
sub
aas
inc
es
int3
popf
pop
sbb
je
cmp
pop
push
in
lods
fs
pop
mov
test
insl
jmp
sbb
sbb
sbb
dec
jo
xor
cmpb
fldl
mov
insl
bound
loopne
mov
mull
lock
lea
ret
sbb
jno,pt
iret
pop
sub
mov
sbb
cmp
ret
mov
loopne
cmp
mov
mov
jecxz
jae
inc
mov
enter
adc
ljmp
pop
fwait
mov
jnp
jecxz
in
lahf
mov
lcall
insb
mov
mov
dec
aad
popa
inc
jne
rcrb
cli
or
out
inc
adc
and
sbb
xor
fidivrl
sbb
sahf
pusha
pop
add
xor
mov
and
xchg
outsb
repnz
je
cmp
inc
jo
fcoms
inc
aam
bound
adc
push
pop
subl
aam
outsl
dec
mov
aad
mov
or
push
xor
lock
mov
fiadds
mov
cld
pop
std
jae
notl
icebp
cltd
sahf
out
and
mov
jbe
dec
mov
sbb
xchg
inc
cld
mov
stos
shl
leave
sub
call
pop
iret
flds
add
js
enter
out
out
xorb
fisttps
mov
mov
and
xchg
es
xor
lahf
sbb
stos
mov
fsubrs
lret
mov
pop
adc
jge
adc
mov
adc
mov
fcoms
rclb
mov
add
adc
outsl
daa
out
rorl
lahf
movsb
mov
push
sub
movsl
or
in
jg
xor
ljmp
inc
xchg
mov
arpl
loopne
mull
fwait
adc
jmp
mov
ljmp
subb
cmp
pusha
lods
nop
xor
cmp
loope
xchg
xor
fcompp
std
cli
inc
stc
or
in
inc
mov
jbe
in
mov
ljmp
fnstcw
popf
mov
scas
insb
inc
scas
mov
testl
adc
adc
aam
bound
jnp
inc
pop
shl
push
lea
adc
jge
lods
pop
push
lahf
mov
out
xlat
dec
ret
dec
stos
jp
adc
mov
mov
or
mull
in
jle
jno
lret
pop
xchg
negb
cmpsl
inc
adc
out
sub
repnz
test
pop
es
jne
daa
sub
outsb
mov
mov
mov
rcr
addl
lock
ret
outsl
inc
pop
call
fimull
mov
cmpsl
mov
insl
mov
sbb
js
pop
shr
pusha
jbe
xor
push
and
cmp
mov
add
je
lods
jl
xchg
pop
aam
movsb
lods
mov
mov
inc
push
xor
xchg
fcomps
adc
sub
pop
mov
mov
aad
dec
add
xchg
in
pop
mov
inc
pop
and
ficoml
shrb
cwtl
lahf
or
mov
aas
sti
cltd
leave
in
push
pop
jbe
testb
movsl
mov
rolb
fiadds
insl
push
in
and
insl
jecxz
ret
pop
dec
shlb
arpl
xchg
mov
sub
cld
cmp
shlb
imul
or
fcoms
xchg
es
push
std
lods
clc
int
loopne
shrb
mov
mov
mov
lock
fadds
lock
pop
or
ret
and
test
aam
rcll
int
push
popl
js
mov
setae
add
sti
cs
add
push
or
imul
and
inc
lds
mov
sti
movsb
add
in
pop
xchg
inc
out
add
adc
jno
pop
and
jle
dec
rcrb
clc
in
jge
inc
push
insb
ljmp
inc
gs
daa
popf
push
dec
xchg
stos
outsl
call
add
cs
or
push
inc
add
or
jbe
cmp
insb
push
add
pop
sbb
or
rclb
popa
ja
mov
ds
nop
sub
add
jmp
sbb
sub
xchg
inc
mov
std
lods
shrb
pop
subb
cwtl
mov
lock
xchg
mov
in
mov
ja
cs
mov
mov
sti
jge
mov
rcl
fildll
addr16
adc
lods
or
scas
adc
jns
loop
loope
in
mov
mov
fsubr
and
mov
xchg
jmp
cmp
js
xor
in
mov
cmp
mov
mov
mov
fcoml
xchg
cmc
addr16
pinsrw
test
mov
outsb
jg
cmp
jg
mov
jne
or
rclb
sub
add
or
int3
ja
or
add
mov
jb
sbb
pop
das
repz
xor
rorl
pop
lret
lret
lock
mov
dec
xor
ret
add
movsl
out
icebp
lret
and
lcall
aam
push
scas
pop
inc
or
iret
mov
pop
das
pop
int3
jmp
dec
sub
adc
stc
fmull
xor
push
addb
jae
bound
outsl
sti
scas
mov
adc
pusha
pusha
push
ja
loope
and
pop
dec
add
les
pop
arpl
pusha
sub
cmp
mov
or
mov
mov
repz
cltd
add
inc
dec
dec
clc
jmp
rorl
rol
mov
xchg
jle
mov
jno
das
push
inc
xchg
push
push
es
xchg
inc
mov
je
mov
nop
sub
insb
pop
lods
cli
xchg
sub
xlat
fnstsw
dec
push
repz
mov
gs
inc
imul
rcll
or
or
mov
pop
mov
pop
mov
sbb
jecxz
pop
sbb
push
xor
and
daa
int
lret
test
jmp
lcall
cmpl
pop
fistpl
jne
jge
sub
xor
mov
das
icebp
imul
cmp
fldt
inc
jbe
dec
lret
push
or
xchg
test
in
push
and
sbb
stos
mov
dec
movsb
sbb
popf
lods
pop
mov
jns
sub
out
aam
xchg
mov
sbb
push
in
sub
jp
mov
mov
pop
jne
jae
jns
adc
inc
repz
mov
cmp
mov
je
cltd
lret
pop
mov
out
mov
imul
xchg
push
test
add
sub
pop
ljmp
in
mov
ss
test
xor
mov
arpl
mov
and
jmp
incb
pop
cmp
fdivrl
imul
mov
mov
fsubrs
pusha
push
cmpsl
outsl
enter
xlat
hlt
shlb
call
xor
or
ds
imul
mov
ret
mov
push
nop
lds
cmpsb
mov
test
cmpl
push
addb
mov
mov
aad
cmp
sub
subl
mov
lcall
loopne
xchg
jb
shl
punpcklwd
push
adc
mov
mov
xor
add
setp
pusha
bound
std
xlat
mov
aas
lods
xchg
xchg
fisttpll
mov
jo
repz
xchg
rcll
push
inc
inc
cmp
adc
xor
aam
imull
adc
lret
pop
mov
mov
pop
notb
mov
pop
setle
popa
xor
inc
cmp
sarb
jae
mov
inc
mov
ret
push
inc
int3
cmp
shr
and
ror
out
sbb
push
mov
cmp
fildll
popf
fstpl
pop
inc
popa
test
sub
xchg
inc
in
fsubr
and
inc
cmp
sbb
scas
aas
pusha
jnp
cmpsb
adc
dec
jbe
mov
jns
adc
jae
cmpsl
push
pop
shlb
cld
mov
adc
movsb
mov
das
mov
hlt
hlt
and
ss
insl
shl
ss
and
cmpsb
mov
add
pop
aas
cmp
mov
stos
pop
sahf
ret
dec
cmpsb
insb
pop
mov
sbb
insl
les
stos
lods
fs
lahf
cmp
xor
push
pop
dec
mov
sahf
insl
jl
xchg
xchg
xchg
pushf
xor
xchg
loope
sub
loope
out
xchg
add
cli
loope
mov
fidivs
mov
pusha
popf
jmp
stos
test
mov
jnp
and
ror
mov
jnp
cmp
aam
or
pop
addr16
adc
sbb
rorl
mov
test
or
cmp
sbb
cli
test
dec
sub
jle
popa
outsb
dec
mov
inc
stc
mov
sbb
pop
xor
dec
pop
push
repz
out
popa
roll
cli
adc
loope
fadds
adcl
or
hlt
dec
jg
stos
arpl
aaa
cltd
in
jnp
mov
add
xchg
std
lea
iret
ror
out
xchg
aas
arpl
imul
mov
js
mov
stc
out
cld
lahf
jnp
adc
adc
push
add
repnz
or
jp
inc
mov
nop
cwtl
inc
out
sub
cmp
int
je
mov
repz
push
cvtps2pd
xor
mov
sub
je
or
ja
mov
xor
mov
rclb
dec
in
add
insb
add
jns
and
push
cli
lcall
cmpsb
lahf
push
inc
ret
iret
mov
dec
cmpsl
cmpsb
in
push
movsl
push
xor
mov
push
test
movsl
sub
ficoms
push
add
into
mov
cltd
nop
cmp
in
add
dec
loope
push
mov
pop
or
insl
stos
subl
or
fiaddl
sbb
inc
mov
push
xor
leave
push
push
fiadds
and
jo
fcoms
sub
or
dec
mov
xchg
xchg
xor
imul
add
lret
mov
add
jp
stos
repnz
pop
dec
loopne
jns
jmp
jmp
scas
adc
mov
jne
outsl
fstpt
sub
roll
xchg
mov
bound
lock
divb
xlat
cmp
cltd
cmpsb
mov
jecxz
mov
xchg
and
jns
adc
jge
sub
mov
ret
add
sub
mov
mov
mull
stos
pop
mov
pop
xchg
xorl
icebp
or
add
xchg
xor
fisubrs
adcb
cmpsl
or
push
arpl
xor
fstp
iret
xchg
push
leave
mov
mov
mov
mov
add
pop
roll
or
jecxz
push
pop
pop
arpl
jns
cmp
mov
mov
scas
xchg
add
add
or
inc
int
mov
pusha
stos
cmp
push
in
cmp
mov
push
addr16
push
jecxz
cwtl
in
inc
insb
fwait
dec
xchg
or
jmp
lret
and
xor
xor
mov
push
mov
mov
xchg
shrb
lcall
pop
xor
insb
inc
leave
in
and
push
mov
or
add
sub
xchg
adc
fldl2e
mov
mov
stos
in
xchg
and
or
pmovmskb
imul
mov
shll
xchg
mov
xchg
dec
aaa
mov
ret
test
cmp
dec
sub
fisubl
or
and
roll
or
pop
push
icebp
xor
jp
aaa
in
sbb
sub
pop
jne
sub
xorb
dec
aam
inc
or
jb
scas
inc
add
popf
jge
arpl
das
or
mov
pop
pusha
add
push
mov
test
movsb
daa
adc
popf
loope
adc
cltd
xor
mov
xchg
inc
add
adc
sbb
and
loop
mov
push
jo
out
pop
mov
pop
mov
jb
mov
xchg
jmp
xor
ss
mov
xor
fisubs
mov
inc
and
xlat
mov
mull
pop
arpl
jnp
lods
jo
divb
cld
sbb
mov
movsl
pop
xor
jge
adc
lods
mov
mov
pop
enter
test
mov
jmp
or
mov
xorb
mov
sahf
fdivrl
ja
inc
outsl
es
icebp
cmp
push
mov
cmpsl
mov
call
in
sub
xor
sarl
arpl
mov
cmp
test
push
mov
rolb
mov
jb
mov
push
bnd
repnz
je
gs
cltd
and
cmp
inc
lret
pop
mov
cmp
rorb
sbb
push
cmp
or
pop
inc
or
sbb
dec
lds
mov
pop
fistpll
push
gs
js
in
fnsave
sub
xor
jne
lods
hlt
pop
mov
mov
mov
repnz
std
rclb
xor
insb
sbb
push
jp
or
pusha
push
icebp
or
add
dec
add
jb
testl
daa
pop
mov
pop
mov
rclb
jns
icebp
out
rolb
into
lea
subl
sbb
xchg
sbb
inc
test
fldl
jmp
fs
sbbb
sbb
daa
inc
add
push
dec
sti
mov
jmp
call
bound
test
jo
das
push
test
arpl
das
sub
fidivl
test
dec
test
iret
outsb
mov
mov
movsl
sbb
outsl
sub
in
divl
stc
jno
roll
dec
mov
adc
in
mov
cs
fsts
gs
inc
mov
mov
mulb
mov
cwtl
mov
fadd
bound
add
or
js
cs
cltd
pop
das
pop
push
adc
stos
stos
add
mov
out
divl
jno
xchg
insl
xor
add
cmp
xor
js
lds
call
movl
inc
mov
xor
outsl
stc
mov
out
fisubs
mov
sarb
lret
push
inc
and
stc
std
repz
inc
clc
pop
cs
aaa
mov
cltd
stos
mov
mov
enter
mov
xchg
inc
std
loope
jecxz
sub
pop
js
loope
or
mov
or
popf
mov
adc
int3
divl
out
pop
or
dec
push
xchg
nop
fdivl
and
test
fnstsw
mov
lods
jbe
xor
xor
sub
lods
xchg
mov
dec
js
mov
fdivr
scas
cltd
icebp
fnstcw
adc
dec
add
or
mov
inc
rcrl
push
fwait
cwtl
cld
or
adc
imul
push
in
adc
sbb
clc
fwait
mov
movsb
aam
cmc
pop
pop
sub
mov
movsb
mov
icebp
les
test
rorl
stos
mov
test
dec
adc
pop
inc
pop
or
sub
add
mov
push
push
daa
data16
subl
push
loop
lcall
mov
xchg
mov
and
adc
cmp
ffreep
push
mov
sbb
push
xchg
or
xchg
mov
repz
inc
jl
lret
mov
aas
xchg
dec
das
adc
scas
add
adc
jae
adc
lcall
cs
jmp
pop
lret
and
nop
movsl
mov
popa
push
or
inc
jns
add
jns
mov
cmp
pop
or
enter
push
pop
xchg
hlt
mov
xorl
daa
pop
arpl
insl
adc
sub
dec
das
daa
addr16
mov
add
mov
sbb
mov
fldt
mov
test
in
push
fcomps
dec
add
int3
das
xchg
add
jb
xlat
cs
stos
xchg
scas
xchg
pushf
or
lods
and
lret
mov
pop
les
rcll
dec
mov
xchg
mov
cmc
bound
call
scas
mov
mov
cs
or
add
inc
ja
outsl
or
add
xor
out
in
movsb
add
subl
and
inc
faddl
sub
jbe
aaa
or
aas
jle
jl
jecxz
jmp
cmp
cmp
int
scas
daa
dec
cli
or
stos
pop
mov
jnp
inc
imul
or
and
cmp
jecxz
hlt
out
lds
adc
jbe
push
js
dec
scas
adc
mov
inc
enter
pop
lret
test
sub
dec
dec
pop
outsl
hlt
and
sbb
mov
cmc
cmp
sbb
fnstcw
dec
incb
pop
ret
shl
dec
jmp
mov
push
lahf
cmp
dec
xor
div
mov
push
sbb
call
shrl
mov
mov
mov
loopne
and
aad
mulb
sti
in
sbb
lods
push
pop
popa
sti
pop
jne
add
psubd
xchg
mov
pop
add
movsl
jg
sub
aaa
aam
test
imulb
pop
mov
cmp
iret
scas
mov
loop
addr16
mov
sub
pusha
addr16
imul
lods
mov
popf
add
les
sarb
jb
lods
int3
ljmp
cmpsb
iret
and
aad
fidivrl
mov
or
xchg
out
leave
popf
rclb
mul
dec
pop
xor
push
or
xor
inc
fwait
ret
push
jl
pop
pop
adcb
lret
ret
hlt
bound
orl
mov
mov
rcll
pop
add
rorl
inc
add
mov
cmp
mov
ret
test
nop
jl
sub
adc
add
adc
dec
adc
in
shlb
nop
test
arpl
jle
sahf
ljmp
jp
aaa
mov
xchg
cmp
dec
imul
daa
insl
stos
imul
in
push
and
sub
rolb
jo
xor
cmpsb
rclb
dec
addl
daa
jns
lcall
adc
fdivl
out
xchg
ret
mov
subl
subl
adc
cmp
in
popa
xchg
std
daa
imul
ja
ret
and
xor
adc
ficomps
mov
cwtl
cmp
outsl
je
arpl
mov
push
ret
pop
cmp
pop
mov
outsl
pop
and
js
push
stos
call
xchg
or
out
dec
loopne
std
nop
je
inc
cs
mov
mov
add
fs
imul
mov
rolb
sbb
mov
fsubr
push
jecxz
sbb
cmp
adcb
cmp
loop
sbb
stc
mov
mov
divb
jnp
dec
mov
mov
add
cmpsb
aas
sub
mov
sub
ja
inc
or
int3
jne
test
out
dec
addr16
cmp
inc
pusha
pop
adc
mov
add
add
mov
add
mov
subb
daa
insb
adc
pop
jecxz
add
mov
sub
or
mov
fwait
inc
and
add
cmc
movsl
stc
mov
sub
sbb
test
fs
mov
dec
sub
mov
repnz
daa
mov
jns
sbb
popa
mov
ds
dec
adc
gs
xchg
xor
sbb
mov
stc
orl
out
mov
xchg
loop
mov
ja
outsb
adc
cs
adc
and
mov
adc
es
pop
sbb
add
int
in
adc
inc
clc
not
jns
repnz
popa
jge
cmp
and
sbbb
cmp
xchg
fistl
repz
icebp
pop
imul
cltd
test
int
movsl
outsb
stos
es
fmul
mov
daa
sub
sbb
and
shll
inc
jno
push
ffree
dec
sub
mov
loop,pt
clc
aaa
dec
xchg
ja
pop
mov
or
mov
jge
outsl
lods
fists
mov
scas
mov
test
mov
fs
scas
mov
xor
aaa
imul
mov
jmp
pop
adc
mov
mov
sub
jg
sub
mov
scas
or
fdivrs
pop
mov
cltd
sub
hlt
pusha
clc
std
sar
daa
loop
mov
es
push
mov
insl
push
xchg
call
cmp
int
lret
test
je
lret
maxps
mov
mov
cmc
call
dec
loope
loop
add
out
out
mov
or
das
jmp
xchg
fildl
int3
loop
mov
or
mov
dec
pop
and
test
inc
sbb
adc
ret
add
call
sub
sub
orl
and
leave
lods
or
dec
test
push
mov
loopne
sub
mov
jl
cmp
repnz
cmp
pop
sub
lcall
gs
mov
sbb
pop
fidivrl
xor
adc
xchg
dec
pop
xor
pop
jmp
adc
inc
xchg
lods
fwait
nop
aam
icebp
icebp
sbb
movsb
pop
hlt
rorl
jns
sbb
outsb
xchg
adc
sub
repz
xor
int
imul
mov
les
mov
outsl
in
int3
aas
scas
jg
sub
xchg
jge
push
lods
dec
mov
ja
lret
mov
xor
fwait
call
enter
push
sbb
gs
push
mov
inc
pop
es
cmpxchg
enter
negl
push
jbe
ret
add
pop
loopne
and
iret
push
add
or
aam
adc
iret
outsl
adc
lahf
fs
ss
je
sbb
mov
inc
add
iret
lret
cmpsb
jbe
pusha
popa
lret
sar
cmpsl
xor
pop
mov
faddl
adc
test
and
push
jb
cmp
or
into
into
inc
loop,pt
and
das
repz
mov
jns
fwait
sub
lods
sbb
add
addr16
adc
mov
or
cmpsb
insl
loope
test
imul
xor
xor
popf
andb
inc
and
pop
push
fnstsw
call
pushf
xchg
or
add
push
adc
sbbl
or
jmp
push
xchg
or
jo
push
sar
xor
and
add
out
stc
cwtl
ja
sub
dec
add
push
dec
cmp
shrl
mov
fmuls
or
sbb
stos
jecxz
jl
js
inc
cld
push
xor
pop
call
test
stos
insl
jecxz
pop
and
jl
sahf
sti
into
aam
mov
pop
mov
test
cld
xor
adcl
lret
mov
es
nop
push
stos
pop
fs
std
out
in
xor
push
fsubrl
outsb
cmp
xchg
cmp
sar
add
mov
mov
and
dec
cmp
addl
cmpsb
les
cli
lcall
adc
cltd
fmuls
or
or
aas
xor
adc
jle
jecxz
outsb
inc
xchg
mov
or
jb
adc
push
lods
inc
xor
ss
rorb
cmp
push
sub
push
loope
jge
repnz
mov
test
and
popf
sbb
add
xchg
std
sub
xchg
jge
adc
testl
push
idiv
or
decl
cmc
pop
adc
cmp
movsb
das
fists
jne
icebp
cmc
cld
out
pop
test
aas
pushf
push
in
mov
insl
cmpsb
jae
out
xchg
jecxz
fildl
push
jno
fsubrs
daa
pop
test
mov
dec
cmp
data16
cs
mov
pushf
jo
mov
xchg
mov
shlb
xlat
shll
mov
xor
push
jae
pop
mov
js
mov
popf
out
mov
adc
adc
pop
imulb
ja
add
loop
adc
ss
lds
lea
outsl
sub
mov
ret
sub
aad
mov
rol
sti
imul
jo
cmp
mov
pusha
je
pop
ss
popa
cmp
adc
call
xor
adc
push
int
mov
ret
ja
dec
fstpl
rolb
inc
hlt
adc
out
pop
jecxz
mov
ljmp
sbb
or
add
jmp
pop
int3
pop
xchg
icebp
aaa
popf
loop
mov
inc
test
pop
gs
pop
daa
fbstp
push
out
cmp
lret
cmp
aaa
loope
cmpsl
dec
cmp
mov
int
scas
in
icebp
scas
dec
imul
xchg
int3
subl
fcompl
sub
mov
std
sar
mov
test
imul
adc
data16
and
mov
push
sub
jo
xlat
lds
lret
xchg
pop
arpl
in
sbb
xor
cmp
or
pushl
lods
sbb
repz
push
mov
lcall
sub
push
jo
mov
rcrl
xchg
mov
mov
dec
nop
insl
test
inc
shr
dec
and
xchg
mov
push
shrl
mov
add
mov
sbbl
imul
mov
shl
inc
xchg
sbb
ja
mov
push
pusha
sbb
xchg
int3
mov
xor
mov
lret
cmp
dec
add
mov
dec
sbb
inc
and
mov
push
out
adc
aaa
dec
inc
mov
aad
jp
push
sub
nop
negl
test
inc
lods
adc
jbe
hlt
outsl
je
pop
dec
pusha
and
jne
orl
dec
je
xor
repnz
int
in
xchg
call
dec
jno
addb
and
mov
fistps
outsb
shl
dec
add
mov
pop
mov
jne
aas
cli
adc
cltd
push
add
mulb
aad
lea
test
cmpsl
sub
dec
jbe
aam
les
xor
js
dec
fsubl
pxor
leave
or
aad
lret
xorl
dec
mov
push
pop
mov
sbb
dec
xchg
gs
addb
push
fidivl
add
rcll
adc
mov
insl
jno
sbb
mov
mov
xchg
xchg
adc
arpl
mov
add
dec
inc
ss
fstpl
sbb
movsb
sbb
cmpsl
xor
pop
mov
cmp
cli
add
rolb
insb
pop
xchg
mov
je
data16
lea
add
cwtl
push
and
push
inc
and
rclb
mov
or
movsl
xor
dec
lock
cmpb
mov
lcall
dec
push
in
cmp
in
sahf
dec
insb
sahf
jecxz
mov
mov
cli
push
cmp
or
mov
mov
into
cmp
movsl
les
clc
insl
pop
push
imul
lods
mov
leave
in
mov
add
repz
hlt
inc
and
sub
incb
pop
inc
xlat
or
fimuls
aam
xchg
int
jg
xchg
add
or
popa
inc
sub
in
push
sub
add
lods
fucompp
or
push
mov
lds
loopne
push
cmp
sarb
pop
push
sti
cltd
clc
rcr
call
leave
pop
pop
add
mov
push
cmp
int
xchg
dec
dec
push
push
mov
mov
cmp
and
dec
ret
popf
mov
xchg
ds
xchg
pop
lcall
inc
sub
fildl
cmpsb
addr16
popa
sbb
sbb
mull
inc
cmpsl
jle
fstl
jns
cmp
xchg
sbb
mov
adc
mov
jmp
ljmp
imul
xchg
mov
jb
movsl
jecxz
add
jne
lret
lods
and
add
dec
dec
scas
jnp
cld
adc
divps
inc
aad
popa
and
gs
jge
or
ds
sahf
dec
ret
in
in
jb
mov
xor
aam
jp
mov
out
sbb
pushf
lret
lock
rcll
push
jnp
imul
pop
pop
jno
ljmp
xor
push
cmpsl
push
shl
pop
loope
dec
dec
pop
and
ja
cmpsb
sub
rcl
xlat
jp
jns
outsl
or
and
test
mov
sbb
aaa
dec
jge
nop
subb
pushf
clc
imul
test
jecxz
mov
scas
xor
outsb
cli
xor
sti
mov
xor
das
inc
fists
inc
rclb
test
adc
sub
jle
jno
adc
loope
pop
push
mov
cmp
lods
fcomi
mov
ret
popl
popa
fdiv
jl
shl
insl
cmpsb
dec
mov
push
divl
out
out
mov
mov
mov
imul
stos
push
in
negb
shl
adc
sbb
xchg
push
js
sbb
shrl
jne
sbb
rcrb
jl
cld
hlt
push
fadds
pop
in
push
push
xchg
in
add
push
mov
sahf
aam
mov
and
mov
pop
in
push
in
lods
ja
adc
in
inc
jae
xchg
icebp
add
sti
enter
jae
shl
add
push
inc
lock
dec
cli
push
imul
repnz
sub
gs
xchg
bound
movsl
pop
mov
push
or
mov
mul
mov
sbb
inc
xor
push
sub
scas
test
in
add
rcrb
mov
insb
inc
pop
sub
mov
jg
fbld
sbb
and
ljmp
outsb
gs
or
hlt
movsb
into
adc
add
push
adc
adc
jl,pt
insb
dec
outsb
xchg
ficompl
pop
sub
or
sbb
dec
stos
popf
les
aam
fldenv
mov
sahf
add
jbe
mov
lock
sahf
pop
push
xor
andl
cltd
xchg
push
mov
push
pusha
push
mov
ret
popf
pop
add
test
sub
cmpsb
std
jecxz
test
lods
popf
xor
out
pusha
repz
jae
fimull
pop
outsb
outsb
xor
mov
xchg
mov
cltd
aaa
sub
dec
mov
and
sbb
mov
repnz
pop
out
jae
mov
test
sbb
push
cmpsb
inc
aam
cmp
in
push
adc
imul
push
rorb
jns
push
cli
or
cmp
and
js
sahf
jno
xor
int3
dec
testl
clc
adc
jmp
xchg
jb
aaa
out
je
dec
jge
outsl
ds
sti
mov
clc
push
stc
ds
movsb
decb
loope
inc
scas
lods
cld
cmp
mov
ja
das
pop
xlat
lret
test
push
push
ficompl
testb
stos
dec
out
and
mov
push
cwtl
inc
imul
in
mov
jae
or
sar
and
mov
add
xchg
lret
push
pop
loopne
dec
sar
fdiv
xchg
mov
iret
or
jbe
sbb
mov
fadd
out
jns
pop
lea
dec
imul
fldl
add
test
jns
mov
push
push
push
test
andb
psubq
mov
cwtl
lea
pushf
fmul
imul
push
in
push
xor
loopne
adcb
mov
push
mov
inc
dec
iret
xor
call
lods
pop
ffree
scas
dec
leave
lea
xchg
popf
jne
mov
flds
sahf
xor
or
popf
pop
sub
pusha
dec
jnp
pop
inc
dec
mull
mov
xlat
jb
cmp
cmp
add
push
mov
aas
cmpsb
jle
and
sbb
out
inc
add
ret
test
cld
or
mov
cmpsb
or
movsl
dec
minps
mov
mov
enter
jae
mov
lods
arpl
pop
repz
out
mov
js
cld
mov
xchg
bound
aaa
les
sbb
or
lahf
push
test
loopne
mov
cmp
inc
int
adc
loopne
adc
push
notb
push
cltd
in
insl
push
notl
pop
stc
dec
ja
push
out
and
fstl
loop
iret
inc
lret
add
add
cmp
sbb
inc
adc
out
fsubs
sar
inc
xor
sbb
push
push
test
lds
sub
enter
xchg
cli
fsubr
push
clc
or
add
adc
in
mov
ds
dec
test
adc
in
test
int3
int3
and
add
lret
pop
mov
ljmp
lods
sbb
pop
dec
xor
out
and
sub
pop
imul
aaa
scas
test
lods
jle
dec
loop
xchg
aaa
stos
ud2
mov
out
cmpsb
and
lea
jbe
rolb
and
sbb
call
test
dec
jmp
mov
movsl
clc
xor
push
sub
add
movsl
push
popf
sub
aaa
imul
inc
aas
dec
fwait
imul
push
or
fs
pop
push
cli
je
adc
fdivs
popf
sub
inc
xchg
mov
inc
frstor
lock
subl
addb
scas
lds
jmp
mov
sub
sub
pop
dec
cld
add
dec
mov
scas
pop
mov
mov
shrl
shlb
ljmp
push
mov
ja
subl
out
in
js
enter
push
ja
cld
ja
push
xor
dec
test
jae
push
push
cmp
pop
cmp
imul
ret
add
adcb
mov
mov
jp
cmp
pop
inc
xchg
scas
ljmp
pop
push
push
mov
es
pop
jne
pop
dec
into
mov
push
repz
ret
adc
cmp
cli
mov
fdivl
mov
jo
std
inc
inc
cmp
testl
je
shll
sub
pop
pusha
and
xchg
cld
sahf
daa
lds
jne
jmp
cmc
ret
shll
ret
dec
and
inc
xor
testb
inc
adc
or
mov
ror
pop
lret
bound
cmp
imul
outsb
bound
add
add
pushf
sub
lret
fbstp
subps
lds
adc
andb
xchg
mov
xchg
daa
inc
push
add
loopne
aam
dec
notb
pusha
inc
xor
sbb
mov
testl
push
lahf
push
or
sahf
orb
and
dec
add
sub
call
or
fcmovbe
loopne
sti
xor
fcoml
dec
in
lea
repnz
cmp
xor
mov
jle
aas
jmp
add
insl
cli
ljmp
out
xchg
loopne
repnz
inc
mov
inc
adc
pop
stos
es
cmp
das
adc
mov
aaa
push
pop
jne
push
lcall
out
loop
dec
xchg
rolb
mov
int3
aad
addr16
inc
mov
movsb
aaa
mov
int3
shll
xor
push
aad
dec
scas
inc
adcl
or
pop
add
dec
pop
popf
bound
inc
gs
les
sbb
shrb
popf
cmp
pop
push
je
shl
xor
lcall
lea
cld
out
insb
ja
mov
mov
jae
rorb
imul
std
cmp
into
hlt
jg
jg
in
or
iret
pop
or
dec
imul
addr16
pop
push
dec
mov
test
jl
in
outsb
rorb
aad
das
ret
sbb
push
lock
outsl
push
adc
add
xchg
push
insl
xchg
fimuls
test
out
ljmp
and
push
in
ss
je
fcoms
cmp
int
repnz
imul
xlat
mov
sahf
addr16
rolb
xchg
sbb
pop
dec
jne
jp
rcll
pusha
je
data16
cmp
push
pop
jmp
gs
test
loope
add
xchg
pop
xor
jns
pushf
arpl
jns
sbb
sub
mov
ret
imul
pop
mov
lods
out
lret
lahf
int
xor
pushf
lret
jns
out
push
cmp
mov
call
push
push
rcrl
loope
adc
cld
fstl
and
in
subl
sti
cmpsb
pop
fwait
mov
call
jp
sbb
jo
mov
and
stos
add
test
xchg
fs
pop
out
int
mov
or
loopne
repz
testl
ret
cltd
pop
add
fsubr
jbe
shll
stos
cmp
sbb
mov
repnz
adc
cltd
pushf
in
mov
pop
ret
fmuls
dec
loope
dec
or
xchg
adc
lret
addb
bound
adc
adc
rclb
or
and
pop
scas
addr16
or
pushf
loop
nop
ret
add
sbb
test
push
sbb
out
mov
sub
repz
inc
imul
addl
or
test
add
aam
jge
or
out
xor
sbbb
pushf
cmp
dec
xchg
int
es
cmp
jb
in
daa
js
or
xchg
outsl
arpl
in
ja
sti
pusha
xor
cli
lahf
aaa
adc
cmp
out
out
or
cli
hlt
insl
cmp
andl
jg
xchg
push
mov
outsb
dec
mov
sub
add
push
add
fisttps
insl
pop
mov
test
jnp
mov
add
out
in
movsb
lods
cmp
xchg
mov
fidivrs
xor
repz
adc
popa
clc
or
push
into
inc
push
sub
dec
mov
inc
imul
sub
mov
mov
cmc
sbb
dec
ds
jae
dec
inc
push
out
add
fldl
loop
loop
mov
push
sub
mov
cmp
cmpsb
es
or
jl
stc
loop
stos
sbbl
popa
adc
stos
scas
mov
popf
lret
jp
xor
mov
pushf
nop
sbb
sti
sbb
sub
inc
frstor
aam
xor
std
fstpt
mov
cmp
lret
adc
adc
shld
push
fidivs
call
mov
sub
data16
repz
xchg
push
mov
push
pop
mov
mov
rorl
jae
mov
xchg
addb
jae
sub
or
mov
push
and
push
loop
inc
outsb
inc
daa
hlt
ja
mov
cmp
or
lea
fstl
mov
aas
ficoms
xchg
dec
xchg
out
loope
test
mov
or
das
not
xor
scas
aas
adc
popa
incb
mov
dec
pop
out
in
insb
loope
xor
adc
iret
testb
repz
xchg
sbb
test
mov
mov
sarl
hlt
loopne
xlat
mov
not
mov
xchg
rcll
cmpsb
mov
inc
les
fdivl
cmp
stos
xor
shll
add
xchg
jp
cmp
and
mov
fldenv
outsb
test
sti
jle
test
lret
and
frstor
jo
xor
pop
sbb
jg
mov
adc
loope
daa
stc
scas
lock
mov
push
enter
jnp
mov
jmp
mov
cmp
pop
inc
push
pushf
daa
inc
aad
add
mov
xchg
adc
int
and
in
push
xor
into
and
mov
repnz
in
pop
lods
gs
jmp
cmp
test
mov
xchg
fisubl
adc
out
dec
fwait
stos
ljmp
push
cmp
push
inc
mulb
into
mov
cld
enter
mov
outsl
aad
ret
js
clc
sub
pusha
hlt
cmc
in
rorb
jae
xchg
mov
add
lahf
fdivs
and
jmp
clc
dec
inc
cmp
rorl
inc
sub
mov
addr16
mov
push
movsl
sub
xchg
int3
outsb
sbb
or
hlt
lods
xor
xor
lods
inc
mulb
and
inc
in
js
ret
cmp
jbe
cli
lock
popa
or
outsb
ljmp
addr16
imul
fimuls
and
out
mov
shrl
cld
mov
mov
jns
ljmp
stos
gs
sbb
fsubrs
mov
cmp
in
pusha
xchg
and
loope
xor
push
push
lret
icebp
xor
jbe
insb
test
ja
sbb
push
mov
cmp
bound
inc
fnstenv
bound
mov
aad
dec
out
mov
mov
fidivs
rcll
leave
pop
iret
gs
and
mov
fsub
add
js
mov
sti
call
inc
inc
sahf
push
jno
dec
filds
cmp
test
inc
dec
mov
xor
fiadds
bound
mov
add
pushf
out
push
andl
movsb
mov
test
imul
mov
adc
sub
iret
dec
push
inc
add
xchg
repz
add
sbb
xchg
arpl
jbe
es
xchg
test
xor
adc
sbb
outsb
shll
jp
mov
rolb
mov
loop
js
shrb
sub
shrb
outsb
sbb
mov
jge
test
cmp
out
sub
xchg
popa
push
mov
jmp
in
rorb
xor
data16
daa
stos
and
out
xor
xor
inc
mov
or
dec
mov
cmpsl
testb
push
pop
in
or
cmp
sub
xchg
cmp
jne
fcmove
adc
lahf
sbb
jg
gs
cmp
sub
jno
xchg
mov
lods
mov
outsl
pop
jno
sbb
inc
adc
cmpsb
jo
mov
repz
pop
pop
mov
fnsave
shll
int3
jns
push
mov
or
mov
dec
or
jbe
lcall
sbb
pop
icebp
mov
push
inc
xlat
fwait
and
jae
and
incb
sub
mov
mov
adc
xchg
shl
dec
out
jg
add
dec
lds
test
xlat
dec
in
mov
push
mov
fisubrl
xchg
inc
sub
test
cmp
sbb
mov
pushf
mov
bound
cwtl
sub
adc
xor
sbbl
iret
cli
out
inc
testb
push
jns
and
aas
sahf
sbb
test
cmp
push
xchg
lcall
sbb
repz
jle
mov
adc
add
dec
in
loopne
bound
mov
sub
aad
pop
sbb
dec
decb
and
mov
scas
test
aaa
out
mov
push
sub
xchg
bound
mov
stc
adc
sub
ret
adc
mov
popf
and
pop
pop
enter
dec
and
testl
in
popf
mov
xor
mov
into
loop
dec
movsl
xchg
in
jne
mov
icebp
out
add
mov
dec
rolb
pop
stc
scas
dec
and
mov
inc
cmpsb
popf
mov
call
mov
int3
nop
outsl
inc
mov
jnp
stos
aas
aaa
lods
mov
mov
push
movsl
add
rclb
or
pop
adc
pop
fstl
and
pop
push
lahf
ds
pop
adc
sarb
adc
sbb
push
aam
xchg
aaa
lret
outsl
inc
dec
fiaddl
shlb
dec
sbb
mov
push
pop
push
shrb
pop
xchg
mov
insl
pcmpeqw
push
or
mov
pusha
test
arpl
mov
das
or
dec
push
fucomip
or
or
or
push
mov
xor
aad
jns
jns
inc
lahf
int
mov
into
fs
decl
scas
lahf
test
jbe
hlt
pusha
out
xor
inc
mov
pop
mov
jo
icebp
das
movb
jns
xor
lock
add
in
pop
lods
sbb
cld
cmp
out
cmp
inc
push
jmp
sub
lds
jecxz
dec
test
dec
lds
rol
mov
test
leave
push
jo
xor
xchg
adcl
mov
cmc
clc
inc
rep
rolb
sbbb
fsubrs
lret
outsb
pop
xor
push
and
insl
push
jle
xchg
or
pusha
cld
xchg
sbb
insl
push
mov
or
and
inc
js
push
aaa
add
lret
sbb
xchg
loope
insb
inc
shrb
iret
sbb
out
adc
les
jge
fstps
sarl
and
lds
xchg
ds
int
mov
imulb
add
fcompl
fs
mov
fisubs
fwait
xor
iret
jno
or
aad
jp
jmp
pop
mov
je
add
imul
jne
movsl
mov
push
dec
push
fdivs
icebp
xchg
push
push
sbb
xlat
dec
adc
or
lahf
mov
pop
pop
push
jbe
lcall
and
aad
js
pusha
arpl
into
in
enter
adc
gs
in
mov
or
xor
and
xor
jp
jbe
inc
ds
loopne
mov
mov
cwtl
pop
shlb
mov
test
adc
sub
xor
mov
jb
hlt
lahf
adc
sahf
aaa
loop
jns
push
das
cmp
jmp
mov
mov
insl
jmp
xadd
leave
icebp
jbe
std
xchg
sbb
bound
mov
fisubs
lret
cmp
popf
seta
dec
out
xchg
stc
js
testb
mov
dec
jl
mov
imul
divb
shrb
es
add
enter
push
rorl
call
insl
sti
jns
lcall
lret
stc
lds
add
imul
push
test
fmulp
inc
clc
inc
xor
fsub
aam
cmpsl
jns
movsl
repnz
mov
or
jns
dec
out
jp
ds
out
dec
test
cmp
xchg
les
pop
jecxz
adc
sbb
xchg
insl
into
loop
mov
or
pop
out
repnz
lahf
inc
mov
es
dec
into
mov
cmpsl
push
test
je
xchg
fcomps
mov
test
cmp
clc
inc
test
dec
add
rcrl
ljmp
cmpsb
fisubl
mov
lcall
inc
mov
mov
or
cli
pop
jae
fs
pushf
xchg
gs
dec
stos
sbb
mov
cmp
loopne
outsb
add
clc
mov
retw
lcall
int3
orb
pop
gs
insb
pop
xchg
cmp
or
jnp
jbe
mov
or
jge
sub
mov
not
int3
das
lret
subb
dec
xor
mov
adcb
lret
cmp
sub
xchg
inc
inc
jl
add
inc
clc
in
inc
addr16
jne
iret
push
push
pop
push
sub
arpl
sub
and
or
inc
fldcw
aas
rcrl
push
out
adc
xchg
pop
sahf
in
sahf
int3
mov
pop
inc
arpl
test
mov
mov
inc
push
cmp
into
movsb
mov
repnz
adc
push
lcall
jne
pop
sbb
pop
int3
jl
mov
out
test
mov
inc
fistpll
and
rcll
fstps
scas
cmpsb
pop
push
and
xchg
call
or
sti
xchg
mov
sbb
mov
dec
xor
aad
addr16
push
inc
into
pop
outsl
jo
cwtl
enter
lea
jmp
push
sarl
addb
pop
lods
xchg
mov
cltd
insb
sbb
andl
stos
sub
sub
sub
ret
push
jne
inc
jne
lahf
lea
cld
or
addl
adc
jae
sbb
shlb
punpcklwd
pop
into
ss
push
movsb
into
pmulhw
fsubrl
pop
in
or
inc
js
inc
push
sbb
fwait
nop
lds
ficoms
push
dec
shrl
add
and
push
cmp
mov
adc
mov
out
mov
mov
push
stos
iret
cwtl
in
jge
xor
sbb
sub
and
stos
push
add
enter
imul
aaa
loope
jmp
cmp
add
jmp
push
fmull
mov
or
in
out
sub
and
pop
or
mov
inc
dec
les
scas
inc
push
sahf
fcomps
jp
xchg
or
mov
out
or
sbb
jae
in
fists
lcall
sbbb
mov
ss
and
sahf
sub
cmp
lret
mov
pop
dec
cs
lcall
aaa
addb
xor
mov
ret
mov
push
and
loop
bound
mov
xchg
scas
dec
cmp
sub
xor
popf
rcrb
xchg
ljmp
ja
and
cmp
cmpsl
xor
xchg
mov
sub
shlb
and
ret
lods
push
in
push
dec
push
push
fildl
xlat
cmp
add
sub
push
xor
jns
xor
jb
pop
scas
or
cmp
sub
mov
repnz
js,pt
les
mov
sub
cmp
xchg
daa
addr16
sbb
test
je
pop
jge
sub
into
jp
hlt
out
scas
sbb
dec
jno
jnp
mov
mov
aad
xchg
or
inc
sub
mov
adc
jmp
mov
and
leave
imul
xchg
cmpxchg
ljmp
aam
jmp
adc
test
add
xchg
outsl
pop
sub
mov
mov
mov
xchg
in
sub
scas
jl
bound
xchg
sub
adc
or
mov
loop
sub
js
adc
rorb
jmp
push
lcall
ret
test
add
je
je
jge
push
loop
mov
stos
imul
cs
outsl
pop
and
stos
mov
enter
mov
aam
scas
negb
and
stos
cmp
bound
mov
out
imull
out
mov
or
call
dec
out
mov
xchg
cmp
hlt
add
repnz
mov
push
scas
and
or
stos
frstor
scas
sub
sub
xchg
cld
out
pop
ljmp
int3
inc
int
ljmpw
or
das
xchg
cmp
or
pop
fsts
jmp
int
push
dec
cmpsb
jl
outsl
sbb
stos
push
push
cltd
test
in
fcoms
cmp
sbb
push
int3
mov
fwait
adc
int
push
mov
add
cmp
pop
dec
stc
jmp
pushf
push
push
cltd
dec
and
push
xor
jle
jo
je
daa
sbb
sbbl
pop
dec
cmp
ja
lods
icebp
add
sbb
xchg
ror
cmpsl
lods
mov
inc
shlb
inc
inc
js
cli
inc
in
std
rolb
int
and
data16
dec
and
imul
sub
stos
push
rorl
mov
inc
rclb
jnp
and
shr
adc
jns
push
dec
cwtl
sbbl
bnd
push
popa
cmpb
mov
jnp
test
std
movsl
lahf
mull
mov
mov
ds
fidivrl
cmp
sbb
xor
ljmp
fidivl
adc
jmp
and
inc
xlat
mov
les
movsl
jne
mov
cmpsl
ja
loopne
insb
into
out
xchg
stos
push
push
push
test
jge
lcall
mov
cmp
or
ja
and
inc
loop
add
pop
mov
mov
stos
adc
jmp
jg
mov
cmp
jno
push
add
gs
lahf
mov
test
add
push
lock
ret
sub
adc
sbb
mov
ss
mov
jp
pop
cmp
mov
xchg
xchg
add
pushf
popa
jmp
lcall
aas
scas
sbbb
xor
fabs
notb
shlb
mov
outsl
inc
adc
mov
push
aam
nop
mov
pop
dec
aaa
aad
mov
test
pop
repz
aaa
fprem1
mov
xchg
test
sub
push
add
in
cltd
rorl
repz
sbb
cli
sbbl
add
jge
and
daa
jns
gs
mov
xchg
jge
pop
add
ljmp
arpl
gs
cwtl
sti
xor
jae
or
loop
bound
mov
jns
outsl
xchg
insl
mov
pusha
and
xchg
stos
daa
jo
loop
lcall
xor
mov
jg
push
cmpsl
icebp
imul
mov
and
jae
ret
or
cmp
or
push
das
inc
mov
xor
pushf
sbb
icebp
sbb
xchg
cmp
ss
and
loopne
dec
sti
adc
out
das
mov
xor
mov
int
adc
sbb
mov
sub
pop
jl
sti
scas
rcrl
ficomps
sbb
pop
mov
pop
movsb
xchg
in
add
iret
push
push
aas
pop
inc
xchg
xor
inc
pop
sbb
loop
stos
in
ljmp
dec
loope
movsb
sub
inc
repnz
inc
adcl
jb
lock
outsl
xchg
add
xchg
adc
xchg
jp
mov
push
fimuls
sub
xor
sbb
sbb
mov
inc
jno
mov
mov
inc
fnsave
mov
cltd
mov
pop
mov
push
mov
push
movsb
aas
loopne
pusha
stos
cmp
push
dec
pop
movb
into
cli
js
dec
xchg
xchg
push
out
stc
scas
mov
aas
mov
sub
mov
jg
lock
xor
fstpl
mov
and
pop
aas
out
add
dec
mov
movsl
outsl
jl
jo
mov
mov
repnz
shlb
add
jmp
movsb
cmp
mov
add
jbe
add
sbb
add
cmpsb
lock
shll
pop
and
bound
inc
aaa
and
mov
sub
hlt
or
mov
iret
fidivrl
mov
cmpsb
push
pop
enter
lds
sub
in
stc
orb
je
mov
push
stos
push
popa
call
mov
add
cwtl
or
icebp
xchg
mov
je
push
pop
ss
dec
cld
insb
fcoml
sbb
xchg
imul
rolb
andl
add
mov
mov
fmuls
movsb
or
lahf
xchg
mov
pop
pop
sbb
gs
lahf
repnz
adc
ljmp
hlt
repnz
lods
icebp
mov
addr16
out
rcll
insb
mov
dec
pushf
or
fsubl
bound
sti
sbb
test
imul
push
cmp
mov
fistpll
mov
dec
pop
fldenv
stos
cmp
inc
jne
pop
aam
push
dec
sbb
cmp
cmpsl
jecxz
add
add
dec
mov
icebp
pop
les
dec
jg
lea
outsb
cmp
xchg
sbb
cmpsl
or
lahf
inc
lcall
fisttpl
xor
jbe
fnsave
outsl
pop
cmpl
iret
loopne
sbb
inc
outsl
sbb
mov
push
jge
test
dec
pop
mov
mov
mov
sub
out
pop
cmp
mov
mov
mov
int3
cmp
mov
or
addr16
mov
xor
aam
sti
das
dec
pop
bound
jne
into
shlb
arpl
xchg
movsb
aam
inc
add
jbe
negb
sbb
das
mov
iret
ljmp
cli
inc
fisttpl
cmp
or
das
adc
pop
xlat
pop
cmpsb
scas
sub
xchg
pop
cmp
and
frstor
scas
ss
sub
out
sti
xchg
cmp
jmp
adc
sub
jb
sub
in
fisttpll
dec
add
or
lods
fimuls
mov
icebp
jmp
xlat
addr16
mov
sbb
pop
sub
lcall
outsb
inc
mov
cmpsb
testl
dec
ficoms
jmp
push
stos
mov
scas
mov
loopne
dec
jle
popf
cmp
push
stos
mov
mov
imul
xchg
cmp
xlat
pop
inc
dec
dec
cltd
scas
outsb
popa
lock
xor
sub
pcmpeqd
cld
fadd
cmc
push
es
xchg
xchg
pop
rorl
test
es
aad
sub
jbe
add
insl
push
testl
or
jno
xchg
pop
jecxz
xchg
loopne
jo
add
gs
sbb
ja
lcall
xchg
mov
in
sbb
aad
test
push
pop
jmp
loopne
outsb
or
inc
negb
inc
push
pop
xchg
push
mov
push
jbe
aas
sub
cltd
adc
outsb
push
mov
sbb
iret
jmp
pop
mov
sub
inc
cmp
out
in
or
push
mov
shrl
js
stc
aas
stc
das
in
and
movsb
fs
inc
push
mov
cmp
cltd
and
pop
cwtl
addr16
inc
dec
xchg
push
hlt
dec
mov
mov
jne
fidivrs
and
pop
pushf
cmpsl
xchg
push
push
inc
jecxz
sub
ja
pop
pop
ljmp
stos
or
inc
arpl
push
and
ja
nop
cmp
subb
cltd
insl
xor
jno
test
mov
jae
sub
fcmove
mov
js
arpl
aaa
dec
pop
inc
sbb
xchg
stos
xor
or
jp
sub
enter
mov
push
in
jg
cmpsl
inc
jmp
push
leave
jmp
adc
mov
push
inc
std
and
xor
jp
rorb
mov
sarl
lret
in
jle
iret
cmp
pop
pop
dec
xchg
cli
pop
cmp
mov
sub
push
je
scas
sub
loop
scas
daa
sub
std
lea
add
std
push
or
inc
mulb
test
rep
cmp
popa
xchg
stc
xor
pushf
outsl
cmp
arpl
ss
mov
adc
pop
mov
mov
add
movsl
adc
imull
loop
push
mov
xlat
inc
cmp
fwait
cs
push
ja
das
test
add
inc
xchg
adc
je
movsl
xor
dec
xor
adcl
imul
add
inc
pop
jb
ja
cmc
daa
in
mov
roll
loopne
push
cmc
jns
jl
xchg
mov
xchg
mov
scas
es
sub
aam
sbb
xchg
outsl
mov
inc
icebp
or
jl
mov
cmp
in
jge
and
fistpll
mov
dec
cld
imul
cli
bound
sbb
fsubl
hlt
fbstp
movsb
mov
pop
fdivs
daa
in
imul
inc
stos
adc
in
rorl
add
dec
mov
jnp
shlb
adc
iret
loope
jp
bound
cmpsl
sub
popl
push
cmp
out
push
xchg
sub
push
popa
xor
ja
cmp
sub
cmp
into
or
sbb
daa
subb
sub
test
push
and
mov
and
jns
jnp
adc
in
push
mov
gs
or
push
mov
test
push
mov
loopne
pop
lods
sbb
jg
xchg
xchg
mov
les
nop
mov
fistpll
dec
insb
mov
pusha
lahf
inc
sti
mov
inc
ja
jno
iret
jb,pt
call
xchg
mov
inc
js
or
movsb
jg
pop
dec
push
test
jle
mov
or
andl
dec
icebp
mov
push
add
test
or
stos
nop
fwait
out
mov
xchg
mov
jno
loope
push
je
repnz
or
and
cmp
lods
jge
iret
dec
add
mov
jae
dec
loope
mov
fsubl
cmp
sub
mov
xor
cmc
cmp
mov
xchg
xchg
or
imul
cld
or
cwtl
pop
pop
movsl
or
mov
pop
je
adc
xchg
rcl
test
stos
cmp
mov
addr16
repnz
push
int3
ds
mov
in
jg
hlt
xchg
idivl
pop
or
movsl
and
pop
ss
and
adc
xchg
leave
add
jno
bound
lds
inc
inc
lret
fidivl
imul
leave
mov
jp
xchg
pop
insb
cwtl
add
icebp
jp
mov
or
std
insl
xor
push
xchg
sub
out
lret
arpl
les
jns
in
xor
fucomi
dec
inc
stos
or
movb
xchg
ja
jne
and
movsl
adcl
xor
loope
scas
ret
mov
jle
ss
mov
pop
mov
nop
push
xor
and
and
mull
and
lods
push
jg
js
jnp
aas
or
int
je
shll
cmpsl
stos
mov
jle
mov
push
iret
outsl
aas
dec
mov
pop
or
jecxz
sub
pop
inc
rcrb
fimuls
outsb
enter
in
add
xlat
jecxz
or
ficompl
mov
mul
imul
and
stc
pop
push
lcall
push
xchg
sbb
pop
mov
fisubs
mov
inc
inc
add
sub
and
in
inc
xchg
mov
fs
loope
fsubl
mov
faddl
imull
add
pusha
cmpsb
xor
pop
inc
sub
mov
js
push
test
inc
xchg
fisttps
ds
es
aam
or
rolb
lret
out
lret
push
and
rcl
sbb
mov
fcmovnbe
clc
and
push
cmp
sbb
push
popf
dec
jno
adc
cmpsb
loopne
lods
sbb
and
jl
cmp
not
jle
cld
repz
jnp
fisttps
inc
lods
sti
aaa
fcoms
les
jbe
mov
scas
add
pop
pop
loope
fistpll
pop
pushl
sbb
push
push
shll
pushf
stos
jmp
sub
std
sub
fidivs
nop
push
cmp
push
dec
lods
ret
aas
test
pop
imul
dec
fsubr
xchg
and
dec
lahf
mov
mov
lods
shll
push
push
mov
mov
imul
in
pop
cmpsb
lock
mov
mov
adc
xor
fmull
mov
pop
out
sbb
pusha
adc
inc
addb
sbb
aam
mov
mov
mov
movsb
ds
xor
dec
in
add
mov
jb
popa
dec
pop
mov
mov
pop
fisubl
mov
mov
int
fadds
mov
and
test
aas
cmpsb
cli
cmpsl
jb
pop
xor
push
adc
loopne
test
hlt
loop
pusha
inc
movl
push
mov
iret
enter
out
adc
ss
sbb
in
xlat
pop
mov
test
scas
fistl
fcmovnbe
cmpb
cmpsb
shlb
mov
sbb
fistps
xor
cmp
push
and
xor
jns
pop
inc
test
jb
in
push
xor
aam
jl
mov
rcrl
test
arpl
add
mov
pop
or
cli
aad
fsqrt
lahf
jecxz
shll
js
gs
arpl
jmp
incl
push
add
or
in
shr
js
cld
test
inc
fildl
loope
movsb
inc
pop
mov
xor
outsb
gs
or
xor
stos
add
xlat
mov
pop
pushl
xor
loop
int3
jl
cmp
inc
test
sbb
call
fs
xlat
xchg
jno
outsl
sub
sub
int3
pop
loope
scas
add
mov
inc
sub
add
lea
mov
repz
je
ja
xor
inc
pop
scas
notb
hlt
add
adc
sarb
mov
int3
push
push
in
scas
js
sbb
push
in
mov
aad
xor
js
ret
fisubs
pushf
mov
sbb
femms
or
xor
xor
mov
icebp
leave
mov
lahf
jns
adc
push
mov
bound
pusha
fstpt
cltd
mov
mov
and
enter
lock
mov
aad
into
out
push
mov
je
jnp
jnp
outsl
testl
pop
jecxz
fimull
adc
lret
dec
jbe
aad
lods
icebp
and
xor
mov
or
jle
xor
adc
nop
out
pop
lock
xchg
push
xor
flds
or
std
jp
fs
cs
stos
pushf
sbb
add
xor
aas
out
xchg
pop
cld
push
loopne
push
out
ljmp
cld
pop
or
aaa
and
mov
sti
fdivrs
or
sub
ljmp
push
js
adc
sub
sub
mov
dec
out
sub
ds
loopne
adc
or
mov
pop
lret
sarb
mov
into
push
sahf
sbb
jmp
xchg
out
int3
test
iret
scas
stos
jmp
cmp
cli
jg
jmp
test
jb
mov
aas
jecxz
push
sub
push
jnp
sub
cmp
bound
add
or
mov
push
mov
imul
push
test
jg
test
repnz
sahf
sti
cld
enter
cmp
jl
mov
xor
pop
push
mov
xlat
popf
hlt
addr16
movsb
gs
mov
xchg
out
and
loope
pop
fs
xor
in
dec
mov
cltd
mov
aaa
xor
js
in
out
aad
sbb
mov
dec
ds
ret
hlt
aam
mov
mov
jo
xchg
out
movsb
mov
jo
ss
stc
out
mov
or
sub
jns
or
pop
sbb
pusha
ss
mov
pop
ret
inc
lret
push
mov
and
test
dec
enter
in
add
adc
xchg
mov
cmp
jmp
mov
mov
ljmp
cmp
mov
push
mov
xor
adc
or
aas
les
add
xchg
cs
adc
stc
pop
fsubrs
out
sar
xor
test
aam
imul
push
out
hlt
pop
stc
out
mov
mov
add
mov
inc
pop
jmp
in
mov
pop
loopne
xor
cli
aad
jecxz
xor
inc
xchg
xor
xchg
mov
imul
hlt
fucom
inc
xchg
pop
je
jmp
jae
pushf
push
lret
sub
mov
xor
hlt
fwait
add
shl
lods
or
cmpsb
dec
jns
ljmp
mov
and
outsl
inc
xchg
int3
xchg
push
xchg
lret
xchg
xchg
lea
scas
enter
sub
scas
adc
push
mov
jnp
jp
and
aad
div
push
adc
cmp
and
or
test
dec
inc
jnp
xchg
push
xchg
pusha
inc
jbe
jp
cmpb
ja
js
xor
sub
jne
sbb
inc
shl
orb
cld
sub
lods
mov
ret
icebp
subb
xchg
add
stos
xor
jb,pn
jle
cmp
sub
lcall
jl
push
push
push
push
push
cmp
mov
inc
test
jbe
pusha
dec
push
adc
lret
inc
add
mov
sarl
imul
inc
add
dec
mov
out
and
notl
std
xorl
inc
lcall
mov
int
pop
popa
push
lret
cmp
test
push
mov
in
stos
xchg
lahf
loop
dec
push
jo
test
dec
push
test
test
or
std
loop
add
and
daa
imul
cmp
dec
fldenv
cli
sub
mov
shlb
jb
pushf
je
mov
pop
or
push
movsb
push
push
sub
jnp
push
fs
add
clc
pop
sub
and
jno
popf
int3
mov
sbb
push
or
or
mov
rcrl
xchg
push
jne
or
and
jae
sbb
pop
jnp
insb
add
neg
in
add
sbb
inc
or
idivl
test
cwtl
push
imul
pop
xchg
xor
inc
lds
jb
or
fstps
and
inc
xor
js
xchg
cli
dec
sub
xchg
mov
movsl
movsl
cmc
jecxz
mov
xor
leave
push
mov
mov
or
rclb
addr16
rcrl
inc
js
out
push
imul
push
leave
idivb
and
dec
dec
fst
xchg
push
or
cltd
mov
jp
dec
mov
mov
movb
icebp
mov
outsb
cmp
cmp
rcrl
jno
faddp
and
movsb
lret
scas
lock
xchg
mov
dec
xor
lahf
sub
out
shlb
push
cmpsb
out
jg
jo
and
or
push
push
xchg
or
popa
call
shr
fdivr
mov
movsl
mov
adc
cmp
cmp
dec
jmp
into
call
loop
lock
icebp
jnp
lock
fisubrs
hlt
loop
fsubl
mov
and
mov
jno
out
mov
clc
pusha
xor
lcall
mov
fcmovb
aam
push
inc
inc
test
xchg
sub
mov
movsl
ret
test
xor
mov
bswap
add
jno
xor
xchg
xadd
pushf
mov
cmp
movsl
sahf
adc
pop
inc
jmp
out
fucomip
loop
hlt
sbb
cmp
jne
mov
sub
cmp
inc
mov
mov
push
je
push
ja
cmp
xor
jnp
and
pop
pop
outsl
ror
push
mov
cmpb
sti
nop
ljmp
movsl
mov
add
dec
out
lcall
repz
mov
or
ja
loopne
lret
jne
jae
ret
movsl
mov
testb
mov
push
loopne
add
inc
test
dec
mov
shrl
pop
sub
cmp
inc
fsubrl
hlt
adc
cmp
je
push
outsb
ret
mov
ljmp
xlat
fldt
inc
mov
jge
repnz
pop
fmul
test
gs
hlt
fdivl
xchg
sub
cmp
pop
inc
xchg
fwait
mov
test
add
sbb
sub
adc
std
scas
or
icebp
cmp
xchg
popa
dec
out
loope
or
push
pop
shr
sub
hlt
pushf
out
sbb
mov
bound
jmp
or
fldenv
call
testl
pop
mov
xchg
lods
pop
sub
jnp
push
cmp
xchg
push
in
sub
test
test
mov
std
jg
aam
xchg
mov
int
xchg
xchg
inc
xor
imul
mov
mov
cmp
in
dec
ror
imul
pop
ror
mov
add
push
mov
outsl
femms
lcall
adc
mov
lret
inc
ja
mov
vpsubq
arpl
sbb
ljmp
push
imulb
xchg
fldl
mov
cltd
mov
cmp
mov
std
sarl
jmp
imul
insl
lret
shll
jl
jne
lods
stos
sub
jmp
cmp
flds
inc
in
push
andb
stos
push
lret
jg
xor
in
ja
xor
lea
fucom
cwtl
adc
ret
lret
ja
lea
jp
mov
or
cmp
sahf
inc
fdivrs
jge
cmc
incb
sti
clc
cmc
lcall
add
cmp
mov
sahf
add
pusha
pusha
lret
jo
lea
dec
inc
xchg
pop
jno
xchg
xchg
push
scas
xor
cwtl
call
shl
jl
sbb
xchg
mov
jge
repz
aad
xor
mov
xchg
cld
dec
cmpsl
mov
lret
pop
cmp
dec
push
les
stc
mov
cmp
add
cli
mov
lods
cmp
lcall
icebp
in
insb
loopne
cmpsb
and
sub
aaa
add
push
into
out
movsb
out
mov
add
in
mov
mov
add
push
pop
ret
mov
push
and
shl
mov
clc
push
xchg
scas
sbb
inc
inc
imul
dec
inc
push
mov
dec
mov
mov
arpl
xor
aas
push
icebp
xchg
movsl
ret
lret
ret
pop
fucomip
pop
or
jl
aas
add
and
std
in
sub
mov
movl
sbb
imul
fldt
add
fisttpl
fildl
ljmp
pop
mov
faddl
pop
andl
data16
xchg
ret
scas
cmp
xchg
cmpsl
jp
rorl
jns
ret
bound
mov
adc
loopne
push
push
cs
inc
sbb
xor
loopne
fwait
std
scas
sbb
push
xlat
out
xchg
leave
arpl
cli
mov
jns
mov
outsb
xor
mov
push
push
mov
fstpt
cs
sub
xor
mov
mov
lret
icebp
aaa
hlt
in
sbb
inc
sbb
arpl
pop
pop
pop
xchg
pop
dec
or
shrb
hlt
and
add
dec
or
jns
xchg
jmp
scas
ja
rcll
dec
imul
dec
outsl
in
pop
xor
adc
stos
xchg
pop
iret
mov
aad
in
das
inc
lock
xchg
loopne
jno
ret
cmp
test
pop
iret
mov
hlt
imul
xchg
jecxz
cld
xor
popa
dec
jmp
dec
jmp
mov
scas
popa
iret
incl
std
stc
in
pop
shr
push
or
xor
cmp
outsl
cmp
sahf
jg
xchg
jnp
jo
ljmp
aaa
cld
je
pop
mov
jmp
or
cmp
pop
inc
fcompl
lret
push
call
cltd
out
lds
and
movsb
jmp
in
pop
cli
mov
lock
xchg
or
sarb
mov
inc
mov
push
lret
repz
insb
or
adc
mov
inc
inc
mov
inc
mov
jmp
cmc
in
out
xchg
sbb
xchg
scas
movsl
xlat
test
adc
inc
jb
xor
push
mov
mov
stos
or
xor
adc
repz
sbb
int3
dec
inc
mov
mov
and
movsl
push
sarb
ret
push
shrb
leave
jne
je
mov
popa
movsl
dec
rcl
push
mov
cli
fwait
or
xchg
inc
out
mov
mov
adc
daa
push
xchg
mov
popf
out
pop
jo
ds
adc
movsb
rorl
out
int3
insb
std
or
out
and
cmp
push
ret
loope
mov
mov
ja
sub
fcmovb
jmp
scas
jecxz
in
and
inc
fistpll
jl
in
adc
fidivl
push
mov
insb
fs
push
jge
adc
orl
sub
cld
sbb
jnp
xlat
ds
test
int3
jmp
lds
cmc
dec
mov
repnz
jmp
lret
les
aam
in
popf
sub
adc
jno
sbb
addb
lea
lea
test
lahf
cmp
inc
dec
cmc
cmpsl
or
add
roll
scas
adc
mov
aad
clc
ljmp
xor
inc
xor
dec
mov
lcall
mov
dec
mov
insl
add
shll
xchg
movsl
gs
sbb
loopne
mov
cmp
fists
cmp
fcoms
fwait
push
cmp
or
fistps
enter
xchg
pop
cmpsl
pusha
cmp
mov
or
sbbb
outsl
cltd
stos
bound
jl
fwait
pop
shr
jg
mov
lahf
arpl
into
xchg
dec
and
out
lea
jno
mov
mov
jnp
mov
nop
fisubrl
cld
jle
add
mov
xor
int
cltd
jno
or
dec
fstpl
mov
jb
test
cmp
andl
leave
xchg
mov
push
int3
mov
test
push
ljmp
ficomps
adc
scas
repnz
xchg
or
std
jb
adc
cmc
jg
hlt
mov
test
lahf
push
cmc
cltd
ret
pop
js
movsl
out
push
lret
xor
push
testb
dec
dec
sbb
pop
es
sarb
sub
loopne
and
push
jbe
fldt
repz
adc
mov
mov
shrb
lods
cltd
push
outsb
cmp
cld
stos
popa
adc
fwait
add
loopne
mov
cwtl
mov
push
es
push
sub
push
sub
js
fbstp
xlat
ror
setbe
cmp
cmp
cmpl
xchg
push
and
cmp
lcall
sti
repz
inc
std
lret
add
or
push
sub
jae
jno
cmc
jns
nop
jne
imul
test
sub
push
fs
push
pop
ss
ror
xchg
inc
cwtl
xchg
cltd
and
clc
loopne
in
js
jecxz
mov
pop
rcrl
push
mov
jl
repz
out
int
clc
mov
int3
dec
add
mov
lock
out
rorl
xor
icebp
jl
mov
sub
lds
je
cmp
cltd
dec
rclb
mov
icebp
or
mov
cld
aam
mov
outsl
dec
lds
push
dec
ss
inc
scas
rol
pusha
xrelease
fnstsw
add
vmread
mov
jno
js
push
mov
sbb
or
inc
data16
sti
roll
clc
out
subl
mov
jae
push
pop
icebp
push
mov
lds
adc
idivb
ss
add
and
aas
push
fdivs
and
loopne
aad
mov
pop
lahf
push
mov
inc
gs
xchg
cld
mov
inc
and
mov
lods
xchg
or
mov
stc
mov
sub
adc
push
add
pushf
in
jecxz
xchg
add
jmp
clc
out
dec
push
pop
sub
mov
data16
repnz
lock
dec
divl
aas
clc
repnz
lods
sbbb
movsb
and
fmull
mov
mov
mov
add
rep
cmp
xchg
cmp
jmp
push
test
ljmp
repz
scas
push
add
arpl
xchg
in
pop
cmp
jg
mov
cmp
sbb
popa
popa
add
icebp
ljmp
lds
bound
push
inc
mov
das
or
cltd
mov
or
out
cwtl
add
rolb
decb
inc
xor
mov
cmp
pop
call
fs
loope
cs
sub
ja
mov
fimull
push
cmc
stos
fbstp
sbb
push
data16
push
or
pop
pop
retw
aam
add
inc
fstl
jb
mov
lods
mov
jb
sahf
inc
pop
sub
daa
hlt
call
sarb
jno
xor
mov
int3
clc
pop
je
add
hlt
mov
in
pop
jns
dec
mov
xchg
mov
push
sbb
repnz
inc
lret
rorb
or
les
jge
sbb
pusha
mov
lods
hlt
cmp
scas
iret
out
inc
mov
mov
cmpsb
push
icebp
cmpsb
sub
scas
popf
xchg
mov
shl
cmp
cmc
adc
mov
xor
lds
mov
stos
ret
adcl
mov
or
rcll
fadds
mov
fists
add
jo
in
ljmp
addr16
cmp
pop
adc
sahf
cmp
pop
daa
sbb
popa
js
sub
bound
hlt
xlat
add
xchg
insl
imul
cli
cmpsl
ja
sbb
mov
jmp
fwait
cvtdq2ps
sub
dec
xchg
sar
cmpsb
push
das
cmpsl
test
out
int3
xor
jae
pop
enter
rcl
cmp
outsl
adc
in
dec
sbb
dec
push
loopne
dec
negb
push
sahf
fisttpll
nop
or
loopne
ficoms
fnsave
les
lods
insb
fbstp
dec
js
sub
pop
imul
jg
or
sbb
sti
xlat
sarb
bound
lods
dec
das
sbbb
jbe
ret
lahf
mov
out
loope
ror
addr16
aad
daa
lret
push
add
xor
out
jbe
adc
sbb
pop
xor
arpl
push
fldenv
gs
fs
mov
sub
mov
sbb
push
mov
mov
test
in
lods
xchg
and
adc
dec
test
call
adc
es
mov
inc
cwtl
clc
out
stos
or
xchg
fs
ja
sbb
test
cs
push
mov
xchg
xchg
and
inc
mov
ss
mov
jae
sbb
mov
ss
ja
adc
inc
xor
pop
mov
mov
add
jno
aas
or
mov
mov
mov
insl
cmpsb
push
sub
roll
iret
nop
sub
jp
adc
insb
enter
dec
cli
xor
or
cmp
in
mov
xchg
out
adc
or
xchg
cwtl
xor
fs
jo
and
pop
and
test
mov
mov
pop
inc
fnstcw
xor
int
test
and
sbb
mov
mov
movsb
cmc
out
int3
dec
jg
std
xchg
push
and
jae
and
dec
pop
xchg
mov
clc
daa
hlt
dec
jo
push
sbb
jne,pn
test
cld
mov
js
aas
and
mov
add
jp
sbb
out
and
adc
mov
lods
insl
nop
insb
cmp
mov
ficoms
outsl
jge
adc
and
inc
ror
xchg
inc
daa
fcomps
stc
or
xchg
push
arpl
sub
std
pop
pop
push
cmp
in
jo
enter
shr
jp
sub
jbe
mov
ret
mov
cmp
sub
and
addr16
shrb
push
mov
aaa
mov
gs
jle
lret
aad
lds
imul
cmp
dec
add
push
mov
jp
ror
mov
jb
rcll
push
daa
dec
stos
add
push
jo
jnp
sub
add
dec
mov
arpl
popa
int3
fdecstp
dec
cmp
scas
ret
inc
jbe
mov
adc
js
inc
out
inc
into
jle
sub
call
repz
cmpsl
mov
sbb
jae
jns
mov
enter
fldenv
xor
sarl
ljmp
test
cmp
and
sahf
cmp
add
lods
lea
inc
pop
lods
shlb
add
mov
add
dec
stc
and
sbb
mov
cmpsb
add
inc
mov
and
xchg
jne
push
pop
xchg
mov
sbb
insb
cmc
jns
bound
ja
sbbb
and
orb
and
jb
mov
mov
mov
push
pop
cmp
aas
mov
movsl
mov
aas
pushf
jno
sub
sbb
pushf
popa
fisubrs
cmpsl
mov
jge
popf
adc
mov
in
xor
add
inc
fists
sbb
test
jle
push
add
les
dec
insl
inc
leave
mov
pop
mov
imul
imul
pop
sub
icebp
cmpsb
mov
pop
cmc
mov
pop
dec
iret
xchg
mov
or
xchg
arpl
cmc
ficompl
mov
in
xchg
adc
cmp
cltd
stc
lods
rcl
xor
fdivl
mov
adc
insl
test
pcmpgtw
faddl
lcall
jl
mov
mov
test
mov
pop
pop
cmovb
cmp
push
add
scas
sub
out
cmpsl
adc
aad
mov
xlat
sbb
push
nop
dec
sub
fsubrs
mov
push
test
dec
sti
or
insl
pop
loope
or
cwtl
adc
notb
or
dec
mov
jg
add
jg
sti
jb
cmpsl
out
test
xchg
rcll
out
and
xchg
xchg
repnz
mov
insl
cmp
aaa
cmp
inc
cwtl
enter
leave
push
movsl
push
push
push
jnp
inc
int3
cmp
int3
sbb
sbb
fists
shrb
and
jmp
insl
dec
cli
mov
xchg
movsl
mov
cli
adc
inc
stc
ja
jecxz
and
mov
stos
jb
popa
jecxz
mov
enter
movsb
sbb
pop
add
cmp
sub
add
das
rcr
ficomps
sub
pusha
outsb
pop
jl
lock
and
imul
or
adc
rcr
add
test
xchg
jae
inc
adc
adc
bound
sbb
mov
push
mov
jnp
insb
mov
cmpsl
fisttpl
movsb
fnstsw
push
lret
lods
std
and
push
mov
repnz
aam
test
imul
lcall
test
fists
cmp
or
xor
pop
xchg
fdivs
ret
jp
mov
lods
enter
push
shrl
xor
cmp
rclb
mov
les
rclb
pop
shll
xor
or
jns
and
mov
dec
pop
or
xchg
jo
in
int3
cld
jle
fwait
call
jne
stc
cld
loop
sahf
mov
xadd
imul
jne
mov
adc
dec
sub
es
inc
insb
cmp
dec
in
std
das
xchg
fstpl
jmp
cli
mov
jae
mov
std
push
popa
sub
test
inc
ja
push
mov
pop
outsb
js
popa
add
jne
mov
movsb
ret
std
and
sub
push
push
insb
xchg
or
pop
mov
inc
fnstenv
stc
pop
push
cmp
popf
hlt
mov
adc
test
pop
sbb
jp
ret
jbe
mov
cltd
xor
mov
lods
push
adc
es
adc
or
popf
roll
and
push
xor
add
lds
cmp
cs
fwait
mov
add
shlb
enter
shr
jl
cmp
inc
in
mov
adc
dec
lock
mov
fadd
mov
pop
sub
pop
jmp
ret
dec
sub
and
mov
jns
es
ret
clc
pop
insl
js
adc
adc
imul
mov
into
aad
into
icebp
push
xor
pop
dec
sbb
xchg
sbb
mov
add
adc
mov
mov
dec
lahf
inc
pop
inc
loop
xor
mov
or
jge
scas
inc
add
xchg
cmpsl
xchg
inc
mov
adc
sub
cmp
pop
dec
out
xor
cmpsl
sbb
cmc
dec
fsubr
pop
ret
push
andb
jne
aaa
push
outsl
sti
test
sub
mov
push
or
mov
imul
sbb
dec
loop
dec
pop
push
jae
pop
pop
int3
xchg
ss
mov
add
lret
loopne
cmp
fsubp
ss
inc
lods
mov
das
into
mov
es
icebp
push
sti
les
cmp
stos
mov
test
push
nop
mov
scas
inc
call
push
sahf
ss
jbe
adc
out
call
xlat
mov
repnz
clc
cs
rclb
push
sub
adc
movsl
in
add
pushf
mov
mov
push
mov
jb
ret
jmp
fnstsw
stc
out
sbb
popf
pop
xor
dec
scas
mov
js
addl
repnz
cmpsb
lods
cmc
cmpl
mov
jno
push
leave
jb
lea
pop
xchg
push
aas
jp
in
xchg
bound
rolb
leave
xchg
hlt
add
jl
xor
fwait
cmp
lds
mov
sti
es
xor
pop
stc
and
aas
out
stc
aad
cli
and
shrl
fadd
sbb
xchg
mov
or
sbb
mov
das
stos
lret
fcoml
cmp
cmp
aas
rorl
cmp
aad
push
loope
leave
test
fs
sub
addr16
xlat
inc
enter
inc
mov
cmp
mov
xchg
les
sbb
ss
cmovne
push
push
mov
lcall
xchg
xchg
and
clc
clc
mov
dec
adc
or
jmp
pop
in
mov
into
xchg
jnp
fwait
lea
int3
in
aam
jae
jnp
add
les
fisubrs
inc
push
data16
xchg
inc
imul
not
sahf
in
sub
mulb
mov
ret
or
int
and
add
cltd
stos
mov
or
dec
pop
lahf
sub
add
jge
arpl
xor
inc
lcall
call
add
insl
mov
cmp
stos
add
fsts
mov
jo
lea
mov
int3
mov
adc
xchg
cmpsl
add
loop
std
inc
mov
add
push
cmp
imull
arpl
sbb
cltd
jg
scas
inc
stos
adc
test
dec
dec
xchg
mov
cmc
adc
cmc
add
lea
ret
fidivl
jo
jns
loopne
shl
insl
in
into
subl
dec
sbb
lret
sarb
jl
sahf
popa
test
and
test
push
xor
js
movsb
movsb
std
cs
sahf
mul
test
mov
mull
int3
fcmovnu
cmpl
jb
call
jg
sbb
lock
push
loopne
test
push
ja
dec
inc
pop
jmp
cli
xchg
sbb
imul
fstps
and
iret
sub
out
mov
adc
outsb
outsl
repz
inc
pusha
mov
jle
pop
push
sti
xchg
xor
jno
xor
hlt
sahf
xchg
stc
lock
xchg
cmp
pop
movsl
lds
fwait
je
or
ret
rcrl
outsb
lock
xchg
add
sbbb
icebp
and
scas
mov
shll
dec
adc
pusha
mov
adc
addr16
fldl
or
out
in
out
cli
leave
in
mov
or
mov
lods
clc
xor
xchg
pop
ret
movsl
xchg
loop
pop
sub
adc
std
and
test
add
push
push
push
cmp
add
sbb
cmp
xor
fsts
fldenv
sbb
popw
aad
aam
pop
xor
and
inc
or
mov
jae,pn
push
outsb
fidivrl
in
xchg
cli
xor
jo
sub
inc
adc
pop
jg
fsubrs
jb
test
push
jns
es
jbe
div
adc
lret
dec
pushf
js
xchg
xchg
push
xor
in
pop
mov
and
sbb
push
and
subb
repz
and
dec
inc
aas
push
inc
rclb
push
push
mov
ds
push
xchg
cmp
imul
int3
xchg
add
push
fistps
xchg
cmp
movsl
js
aaa
in
jl
push
mov
lea
test
push
dec
lret
fnsave
sbb
mov
inc
xchg
xor
fwait
in
testb
xor
xchg
aas
push
cli
and
mov
stos
and
pushf
out
pop
cwtl
sbb
push
rclb
sbbb
xchg
dec
daa
insb
add
jp
js
add
dec
add
pop
mov
or
scas
nop
test
push
in
mov
lret
pop
and
add
sub
xchg
mov
xor
out
movsl
jno
mov
aas
or
push
mov
xor
inc
inc
mov
adc
jg
sti
dec
adc
jb
daa
mov
fadd
jle
cltd
sub
mov
add
fbstp
bound
aad
lret
push
lret
in
popa
cmc
jns
mov
sub
int3
xor
dec
in
jmp
sub
int
stos
insb
inc
insb
leave
lahf
cltd
ja
jae
nop
dec
sbb
jecxz
mov
pushf
dec
xchg
ret
jo
lahf
imul
push
repnz
inc
ss
fdivrl
jne
test
mov
pop
popa
inc
mov
inc
jl
adc
sub
push
subps
or
outsl
std
push
jbe
adc
adc
nop
adc
jo
les
ja
ljmp
xor
and
sbbl
push
push
or
popa
test
lods
push
xor
sbb
mov
add
sub
push
cmpsb
jo
pop
imul
inc
and
iret
sbb
rorb
push
fistpll
inc
mov
aas
pop
popa
lret
fldenv
xor
push
sbb
es
pop
mov
or
mov
jecxz
add
or
daa
hlt
test
ret
repnz
mov
mov
xchg
mov
or
fcoms
sti
xlat
fistl
stos
pop
pop
out
mov
stos
push
scas
hlt
inc
outsl
dec
imul
inc
or
mov
cmpsb
xchg
int3
stc
out
sarb
cmp
mov
fisttpll
pop
jbe
dec
sub
mov
scas
out
clc
sbb
xlat
loopne
jo
sahf
mov
ja
int
pop
sub
fldenv
jo
sbb
idivl
push
popf
sbb
xor
jmp
cmp
xlat
jmp
lahf
push
xchg
lds
xchg
jne
mov
mov
ds
and
out
mov
add
push
ds
sub
adc
vcvtps2dq
cli
out
push
mov
jge
dec
cmpsl
inc
sbbb
mov
hlt
fwait
js
shlb
inc
popf
insl
jle
or
sbb
idivl
test
and
scas
mov
mov
pop
bound
in
mov
aaa
jle
sub
xor
push
or
dec
enter
popa
insb
shr
inc
jns
xor
int3
pop
cmpb
cwtl
int3
rcrl
pusha
xchg
call
pop
inc
test
xor
cmp
add
pop
adc
add
mov
sarb
jo
lcall
push
push
cmp
mov
test
sti
faddl
xchg
inc
push
fdivr
aaa
jb
ret
xchg
cmp
inc
nop
mov
fsubrl
cmc
xchg
pop
outsb
hlt
repnz
imul
adc
testb
lcall
mov
out
adc
jmp
jmp
inc
fs
outsl
shl
sub
mov
lahf
mov
std
mov
dec
and
adc
xor
js
fcoml
mul
addr16
mov
mov
sub
xor
xlat
or
lret
int
pop
push
ljmp
lret
xor
fs
fistl
out
xchg
outsb
jg
adc
add
jb
movsl
mov
xchg
push
jecxz
aas
pop
mov
and
pop
mov
and
add
push
inc
jmp
je
sub
adcb
scas
fcomps
loope
mov
push
mov
push
xor
jl
push
inc
divl
in
fisubs
out
xchg
clc
mov
push
dec
negl
push
enter
add
das
incb
repnz
jbe
mov
push
bnd
jnp
xchg
outsl
and
mov
test
mov
push
ja
or
fidivrs
xlat
mov
push
jl
out
and
test
pop
add
popf
data16
push
pop
pop
push
test
push
sub
or
dec
jg
pop
pop
mov
mov
push
outsb
mov
jge
sbb
mov
dec
mov
xchg
iret
scas
pushf
mov
mov
add
hlt
and
cld
rcl
out
pop
xchg
adc
lds
xchg
xchg
faddl
xlat
mov
mov
jb
lock
fildll
cld
jge
xchg
out
fwait
outsb
jnp
loope
sbb
jae
call
nop
mov
jno
es
and
rorb
jle
and
int
and
call
mov
gs
mov
mov
mov
xor
fs
adc
sub
clflush
xchg
movsl
inc
add
iret
lcall
mov
cwtl
sti
push
test
addr16
jo
test
stos
pop
xor
mov
inc
rorl
out
ds
lds
das
js
das
std
mov
dec
fistpl
pop
mov
sbb
mov
outsb
push
rcrb
cmp
dec
and
mov
mov
repnz
repz
ds
xchg
fidivs
jg
mov
push
pop
mov
jl
addr16
stc
outsl
aaa
adc
sar
cwtl
loop
push
test
xor
xchg
jecxz
adc
out
inc
sub
sub
dec
out
xchg
xchg
jae
fadds
insl
pop
mov
push
into
push
loope
paddq
sub
lret
aas
mov
jg
jp
enter
shll
sarb
sidtl
fimull
and
jge
ret
adc
dec
sbb
jmp
inc
cli
orb
mov
cmc
xor
sub
or
insl
mov
mov
das
rclb
roll
aam
movsb
aad
jo
xchg
push
xor
inc
cli
push
mov
xchg
outsl
cmp
push
xchg
add
mov
dec
mov
push
scas
push
sbb
xchg
icebp
xlat
in
ljmp
arpl
sbb
sbb
test
jns
lods
and
ret
std
cmpsb
pop
xchg
mov
or
jnp
cmp
aam
adc
jmp
mov
das
idivl
xchg
lahf
cmp
mov
enter
popf
mov
or
addr16
add
daa
jb
push
mov
cmp
or
adc
xchg
pand
adc
mov
idivb
dec
xlat
xor
cmp
nop
jns
xor
lods
mov
dec
in
lret
inc
adc
ljmp
repnz
push
roll
insb
fcompl
sub
and
in
mov
add
enter
dec
push
xor
pop
aaa
pop
mov
cld
je
cmpsl
cmp
or
dec
inc
fisubrl
jb
fidivl
mov
jnp
dec
xor
sub
pop
loope
sbb
vmovups
in
sub
and
pop
leave
add
gs
mov
movsl
adc
sub
dec
enter
repnz
mov
call
dec
adc
push
push
inc
add
sbb
cmp
mov
jb
bound
adc
mov
mov
mov
movb
std
in
inc
leave
mov
mov
xchg
mov
xor
loope
adc
sahf
cs
adc
int
dec
call
lds
lods
data16
fdivl
jae
or
inc
or
pop
pop
mov
sbb
cmp
dec
addr16
mov
or
fimuls
dec
push
cmp
push
push
pop
or
cs
fnsetpm(287
sbb
cli
pop
add
subl
mov
xlat
test
jne
push
pop
mov
and
movsb
lahf
mov
xchg
inc
sub
dec
adc
dec
dec
mov
pop
sbb
mov
push
jns
add
mov
sub
xor
xchg
fidivrs
cmp
test
ret
dec
sbb
andb
les
cmpsl
jo
mov
jae
push
jno,pt
jnp
push
add
jle
push
inc
ljmp
mov
ret
xchg
inc
pop
cmp
jp
mov
loop
sub
mov
lock
xchg
test
or
mov
dec
push
sbb
and
mov
fcmovnb
mov
push
movsb
push
outsl
cli
sbb
int
add
xchg
pop
mov
stc
fmull
inc
fildl
jge
aaa
sbb
cmp
in
mov
cli
pop
shll
insl
in
push
jg
mov
jnp
clc
fidivrl
ret
mov
repnz
stc
lret
loope
cs
pop
jnp
push
lahf
movsl
loope
jmp
fcom
ljmp
and
jo
ret
imul
mov
sarl
scas
mov
adc
leave
adc
lret
push
inc
cmpsl
int
xchg
out
cmp
daa
flds
fsts
jae
jae
mov
insl
in
pop
inc
push
and
mov
stos
out
subb
cmp
bnd
and
mov
xchg
mov
aas
inc
pop
movsb
aas
cwtl
mov
mov
adcb
jbe
in
cmp
dec
stc
inc
mov
out
add
insb
leave
dec
add
mov
sbb
bound
push
add
int
stos
mov
shrb
cmpsb
mov
jns
add
call
jg,pn
fiaddl
js
test
sub
dec
test
scas
shlb
divl
and
jne
sub
lods
out
addb
into
adc
dec
stc
scas
sub
in
repz
or
mov
push
sub
adc
or
cmc
das
jmp
stos
cmp
stc
sbb
icebp
push
fisttps
jae
adc
sub
jae
mov
dec
scas
aas
sub
loopne
dec
subl
fadds
stos
fincstp
out
aad
imul
dec
decb
mov
in
mov
lods
cwtl
test
pop
mov
inc
in
icebp
in
or
jp
in
fiadds
mov
pop
enter
inc
mov
aad
outsb
popa
mov
call
xchg
enter
cltd
pop
jmp
test
hlt
sbb
scas
sbb
xchg
enter
cltd
or
nop
repz
jge
jl
sub
jo
pop
stos
and
test
xchg
cld
cltd
mov
jno
jne
dec
insb
xchg
jo
sbb
mov
mov
lret
mov
scas
mov
push
scas
test
test
dec
mov
dec
fisttpll
shll
cli
push
dec
out
xchg
sti
scas
fldl
and
pop
subb
pop
jmp
frstor
xchg
movsb
jmp
xchg
imul
ja
sbb
jge
sbb
xor
dec
jne
in
fwait
int3
out
lret
fisubrs
scas
stos
sbb
push
decl
mov
aas
pop
sub
test
cltd
mov
add
jo
out
xor
je
movsl
daa
inc
adc
sub
cmp
dec
daa
sbb
bound
push
stos
add
pop
call
cmp
js
ret
jl
or
add
and
xor
mov
sbb
and
xchg
mov
add
or
mov
mov
lods
cli
popa
hlt
rolb
mov
xchg
inc
cmp
out
repnz
fimull
or
pop
mov
test
mov
push
sbb
scas
jo
add
lret
pop
jp
add
out
fs
gs
cmpsb
aad
mov
mov
sti
dec
mov
pop
dec
cld
jnp
test
and
dec
or
add
scas
or
mov
addr16
xor
into
or
pop
dec
xor
lods
xchg
dec
cmpsl
mov
xchg
and
xor
movsl
push
mov
mov
jle
xchg
out
ds
mov
movsb
cmp
cmp
cmp
xor
scas
mov
fnsave
pop
mov
sbb
in
or
and
jno
inc
hlt
sub
sbb
std
xchg
jb
cwtl
ret
push
sbb
loope
sti
mov
nop
cmp
and
xor
xchg
mov
insb
test
nop
inc
dec
dec
lcall
push
dec
in
shlb
scas
in
mov
out
daa
js
ror
mulb
pop
mov
adc
mov
inc
adc
mov
adc
cli
gs
shll
loopne
adc
adc
xchg
dec
inc
and
iret
jmp
sbb
ja
xchg
xchg
dec
in
bound
subl
rep
adc
or
les
xchg
inc
mov
jae
popa
pop
xchg
movsb
ljmp
jb
cmp
lods
inc
out
jp
fiadds
call
movaps
cmp
jne
test
jne
pushf
pusha
bnd
lods
pusha
inc
pusha
lret
jns
mov
jne
add
jb
mov
xorb
mov
imul
dec
in
lcall
xorl
pop
add
je
or
pop
or
jmp
xor
cmpsb
rorb
scas
in
sub
scas
pop
paddsw
xor
pop
or
rolb
dec
jb
ret
cmpsl
jp
dec
ljmp
jnp
inc
cmp
inc
cmpsl
test
jno
out
jp
test
adc
pop
ja
adcl
aam
jge
and
jge
popa
hlt
sbb
imul
sbb
mov
xchg
jo
push
pop
imul
cmc
shl
repz
lret
sbb
cmc
inc
cmp
mov
int
nop
inc
mov
cmpsl
push
nop
sub
xlat
enter
sbb
std
lods
int
cli
lahf
bound
fcmovbe
inc
out
ret
sub
mov
dec
cmp
orb
fnstsw
ljmp
test
xchg
pop
arpl
shlb
mov
dec
jl
pop
data16
mov
jb
mov
or
lea
insb
imul
ljmp
lcall
xchg
test
xchg
ret
hlt
and
in
pop
stc
jnp
inc
xchg
adc
in
je
insb
cmp
push
mov
cltd
shrl
xor
bound
test
mov
je
dec
sub
outsb
leave
fcmovnu
rclb
sub
pop
cltd
pop
mov
cltd
je
dec
pop
fistpl
mov
xlat
dec
repnz
lock
fistpl
dec
or
outsb
testl
inc
jle
jae
clc
iret
push
outsb
pushf
out
jnp
loope
mov
adc
fsub
or
jns
lods
cld
xchg
into
xchg
add
into
dec
inc
fsubr
pop
cmc
rorb
shr
add
aam
insl
jecxz
mov
inc
rclb
lcall
out
mov
pop
push
shl
cmpl
cmpsb
mov
stc
nop
notl
mov
or
pop
push
movsl
mov
mov
lods
int
pop
jmp
fisttpl
mov
cmp
and
adc
cmpsl
xchg
icebp
mov
mov
loopne
aas
push
inc
imul
fisttpll
daa
pop
jp
push
fstl
shlb
mov
jmp
xor
jmp
sub
jo
ds
xor
fs
and
mov
pop
mov
rolb
jns
xlat
adc
lahf
sti
cmp
pop
mov
rcll
ret
cs
push
jbe
aaa
mov
or
xchg
popf
cmp
fdivp
lret
xchg
push
decb
mov
rolb
fldenv
aam
lods
pop
mov
pusha
cmp
jns
call
push
je
add
inc
pop
pusha
mov
mov
or
pop
scas
in
movsl
xchg
insb
cmpsl
add
push
je
sub
ficompl
les
adc
xchg
cld
rcrb
scas
iret
mov
mov
adcb
test
out
push
repnz
je
cli
jmp
fsts
fldcw
mov
dec
jno
dec
cmpl
sub
cld
nop
cmp
add
mov
mov
xchg
outsb
ret
cli
test
lea
movsl
push
ljmp
dec
adc
fsubl
jmp
imul
push
hlt
outsl
fdivr
jge
and
cmp
mov
mov
push
js
xchg
jne
lret
add
or
dec
push
leave
mul
pop
adc
hlt
popa
inc
and
not
insb
dec
cwtl
inc
int
test
sbb
cmp
roll
pop
mov
jo
sbb
mov
pushf
mov
jg
insb
push
pop
mov
int
fld
add
mov
push
aad
lods
test
cltd
push
int
or
pop
lcall
pop
stc
mov
clc
jmp
scas
xor
lret
push
mov
rcl
jb
mov
jl
stos
adc
sub
scas
cwtl
out
mov
inc
jp
inc
orb
mov
and
lock
and
add
lea
clc
out
in
outsb
insl
gs
fbstp
adc
dec
adc
mov
push
dec
hlt
jbe
shlb
lds
andb
lea
fildll
lods
cmpsb
xchg
cmp
adc
mov
cmp
mov
mov
sbb
stos
lahf
ror
rdpmc
push
or
xchg
jg
cmp
pop
jge
cmp
adc
cwtl
movb
fwait
or
mov
aas
mov
fisubl
out
enter
cmp
push
test
mov
ret
mov
std
or
loopne
mov
push
out
ja
jle
daa
and
sub
sub
leave
mov
out
xor
or
lret
aas
ljmp
in
mov
dec
arpl
mov
jg
enter
fwait
mov
inc
jnp
mov
scas
pop
add
pusha
shlb
push
push
cld
mov
mov
lahf
sbb
add
dec
add
add
pop
in
arpl
sub
daa
pushf
xchg
mov
mov
push
push
push
cmove
imul
std
outsl
fwait
sahf
jo
mov
movsl
stos
pop
cmc
xchg
push
inc
lcall
loope
jge
arpl
shll
es
cs
rcll
push
popf
or
inc
mov
subb
call
or
push
mov
addl
ret
and
std
sti
adc
dec
popf
xchg
cmc
xlat
mov
mov
jbe
jp
decl
shr
fldenv
outsb
mov
sub
and
scas
mov
dec
fstl
aam
scas
in
bound
pop
sbb
aam
jle
and
mov
ja
sbb
idivb
or
jmp
add
push
dec
jg
cmovs
mov
outsl
scas
inc
jp
or
mov
mov
mov
stc
jb
or
int
pop
jbe
jno
cmp
push
mov
fnstsw
ret
ret
loope
shll
test
inc
cmp
adc
in
jnp
jp
cmp
in
sub
sbb
adc
cmp
mov
mov
push
add
mov
data16
hlt
repnz
jmp
push
xchg
mov
popl
js
mov
inc
call
jo
and
or
mov
dec
mov
es
in
mov
adc
push
adc
lcall
xor
mov
pop
mov
push
and
int3
dec
in
dec
mov
pop
jg
or
shl
sti
and
or
mov
mov
inc
mov
jbe
aam
shl
add
sbb
neg
cli
xchg
scas
stos
sub
pop
adc
fadd
cmc
ljmp
and
in
pop
movsl
push
loop
cmpsb
cmpb
xchg
bound
mov
xor
push
mov
fmul
sahf
mov
cld
mov
xor
outsb
xor
pop
mov
inc
icebp
cmp
adc
shll
movl
int
shrl
rorb
pusha
and
aas
pop
lcall
xor
sub
or
in
mov
dec
adc
test
fistpll
mov
leave
ds
sub
icebp
push
inc
mov
rclb
out
imul
negl
mov
xchg
mov
lods
inc
and
lcall
sbb
jnp
into
add
aaa
xor
mov
push
xor
add
push
cmpsl
add
repz
sbb
addr16
in
xor
push
sahf
sti
and
je
or
push
call
add
add
outsb
cmp
hlt
xor
pop
or
lods
sub
ds
and
sbb
jns
push
cmp
mov
popf
pop
mov
call
cld
and
repz
into
ja
dec
mov
cmp
imul
push
ret
sahf
test
adc
test
ljmp
sub
sub
jne
adcb
jns
sbb
idivl
dec
stc
aam
add
xorl
push
mov
xor
xchg
add
add
repnz
jl
aad
jmp
arpl
push
aaa
push
mov
loop,pt
dec
cltd
test
lock
ret
loope
inc
mov
int3
add
xchg
leave
dec
mov
mov
jp
sbb
mov
andb
push
push
addr16
and
and
xor
popa
out
pushw
ret
push
shll
sub
mov
sub
iret
shl
fidivrl
xchg
clc
leave
pop
mov
xchg
lock
popf
dec
vprotw
adc
xor
mov
lods
sarl
test
nop
add
das
mov
or
mov
subl
cwtl
or
data16
mov
int
cmp
sub
and
or
add
inc
sbb
xor
in
jns
mov
adc
aaa
or
push
jp
aas
jae
mov
push
adc
cmp
adc
fcomip
sub
nop
and
push
aas
add
call
outsl
xor
inc
add
das
and
pop
sahf
cmpsb
xor
arpl
andl
insb
icebp
js
xchg
cli
mov
rcll
pop
mov
aas
mov
sub
decb
jecxz
jg
and
jp
or
sub
mov
mov
jb
mov
cltd
sub
jle
push
sub
mov
insl
jno
pop
bound
cmpsb
mov
or
adc
divb
push
and
test
xor
sub
mov
das
andb
aam
and
arpl
and
pop
das
ss
cmp
ret
mov
xor
ret
push
pushf
arpl
sbb
push
xor
addr16
inc
add
dec
sbb
jb
xor
aad
loopne
lahf
and
pop
sbbb
mov
cmpsb
pop
add
stc
push
pop
pop
movaps
jmp
xchg
mov
mov
xchg
mov
jns
mov
sbb
data16
dec
push
popa
jl
cwtl
dec
inc
sub
sub
cmp
mov
inc
xchg
aad
clc
rcrl
lret
mov
and
push
and
push
jne
and
out
ja
sti
fcmovb
fidivrl
cli
sahf
fstl
mov
jne
cmp
insl
inc
sti
nop
lods
je
mov
mov
test
fisttpl
sub
aam
dec
or
mov
mov
leave
mov
push
push
push
cmp
dec
cltd
leave
or
popa
enter
mov
xchg
adc
pop
mov
popf
and
mov
aaa
fcoml
pop
in
xlat
loop
jp
cmp
xor
sbb
hlt
xor
push
scas
out
movsl
jge
outsb
std
mov
outsl
inc
repnz
lea
jnp
rolb
mov
int3
shll
in
stc
xchg
pop
and
pop
std
int3
mov
cmpb
andb
add
xchg
jmp
xor
cs
pushf
adc
jb
lret
mov
cmp
outsb
fcmovb
mov
inc
sub
insl
pop
pop
xor
out
subl
lods
push
stos
xchg
aad
add
mov
dec
or
cmpsl
xor
pop
pop
repz
rorb
sbb
or
mov
sti
xor
movsb
int3
aad
cwtl
or
mov
lods
test
cmpsl
and
sub
mov
bound
jge
sub
inc
jl
jge
mov
gs
dec
pop
js
insb
xorl
or
test
loope
inc
loop
jl
xchg
sahf
adc
and
jbe
fimuls
push
rol
ja
insb
sbb
outsb
xchg
cmp
imul
and
mov
repz
fmulp
add
pop
sarl
adc
push
lds
enter
adc
xchg
fdivrs
dec
add
lret
adc
push
push
lcall
jae
xchg
add
mov
sub
outsl
nop
push
cmpsb
enter
push
mov
mov
jge
xor
mov
sti
decb
dec
mov
dec
mov
ss
add
adc
int
add
movsl
sahf
xor
xor
stos
ja
add
aam
ss
push
mov
mov
dec
adc
sbb
fdivrl
out
mov
lods
inc
xor
mov
mov
jbe
imul
dec
inc
popa
jmp
xchg
into
inc
xor
mov
push
inc
push
xor
jecxz
addr16
rcll
std
jns
rol
mov
mov
imul
cmp
movsl
repnz
outsb
inc
addr16
add
shlb
dec
daa
xor
sub
and
xor
push
imul
push
out
icebp
jmp
sbb
aas
cltd
test
test
imul
fucom
test
clc
fldcw
cmpsb
lcall
fidivrl
scas
stos
xor
add
and
jmp
sbb
shll
cmp
dec
mov
mov
mul
in
jp
adc
pop
pop
cmp
cmpsl
pusha
sarl
xchg
test
push
movsb
mov
mov
push
mov
roll
adc
aam
mov
sub
rclb
jb
test
mov
or
cmp
lods
add
in
mulb
or
dec
sub
sub
jge
pop
dec
stos
add
aad
add
add
jae
jb
addl
lret
mov
xchg
dec
mov
cmp
push
jp
pushf
aam
notb
cli
mov
cmpsb
push
or
lock
jge
sbbl
movsl
push
sbb
pop
xchg
sbb
das
dec
or
and
leave
dec
push
and
mov
mov
jle
je
rcr
mov
fdivrs
stc
rolb
lock
or
mov
push
ja
mov
fstl
xchg
imul
popf
fimuls
push
outsl
pop
mov
clc
jne
jl
icebp
jb
cltd
xor
scas
dec
cmp
jl
sub
mov
jb
call
ror
push
lret
xor
add
adcb
jle
xor
mov
mov
test
push
adc
das
in
lahf
cmc
lahf
cli
mov
orb
push
mov
xchg
inc
xor
lods
add
out
and
sub
int3
xchg
xchg
xlat
jbe
jno
inc
cwtl
jnp
test
pushf
adc
mov
mov
sub
imul
dec
sbb
orl
mov
add
outsb
daa
jmp
adc
pop
rcrb
mov
xchg
insl
inc
inc
add
inc
int3
lds
pop
cld
mov
repz
or
jmp
in
sbb
ljmp
jmp
fidivrs
and
jl
iret
sub
jae
fldenv
ja
sub
jno
idivl
xchg
mov
mov
mov
test
pop
loopne
mov
xor
rol
iret
xorb
pop
rorb
xchg
lcall
test
lcall
call
outsl
push
jmp
sbb
leave
push
daa
pop
mov
and
xchg
mov
jecxz
ljmp
inc
lret
mov
mov
iret
jbe
and
ss
notb
stos
push
jl
cmp
jo
fnsave
imul
imul
xchg
push
std
dec
mov
cwtl
mov
xchg
inc
sbb
inc
stc
mov
mov
push
loope
mov
cmpsb
ja
mov
fs
loope
add
add
lahf
mov
lds
in
loop
cmpsb
push
pop
cwtl
ljmp
rolb
push
div
jg
inc
jns
aam
mov
shrl
loopne
imulb
jmp
jae
daa
fiadds
xchg
lock
pop
aas
sub
stc
mov
notl
push
pop
jno
pop
mov
mov
stc
jmp
adc
ljmp
jns
add
jl
shll
fsubs
xchg
mov
sbb
xchg
adc
inc
test
jbe
mov
fstpt
pop
fbstp
xchg
repz
push
ret
lcall
sbb
fidivs
ja
std
jns
or
fbld
dec
call
xchg
mov
cmc
jno
pop
xor
jb
add
stos
add
loop
pop
inc
clc
sub
inc
inc
pop
mov
pop
cmp
into
jmp
sti
loope
cmpsl
push
adc
fists
and
pop
arpl
xor
push
shlb
push
ds
pop
mov
mov
xchg
jns
mov
shlb
add
repnz
sub
or
sbb
jle
add
fsts
push
or
cld
cmc
xchg
xchg
js
push
test
fildl
pop
fcmovnu
dec
dec
cmp
mov
dec
mov
test
mov
pop
nop
mov
inc
xchg
out
xchg
jle
mov
mov
push
xor
inc
or
or
mov
repnz
sub
addl
iret
aam
stc
insl
std
mov
pop
cs
jle
cmpsb
inc
sub
cmp
pop
jl
xchg
aaa
mov
sbb
ja
fsubrs
sar
adc
or
cmpsl
leave
ss
push
xchg
add
xor
arpl
xor
jg
repz
cltd
jno
repnz
jg
lods
in
fisttpll
je
xchg
imul
faddp
xchg
out
test
movsl
shrd
cmp
sbb
arpl
mov
pop
in
jmp
push
sub
loop
mov
in
lods
mov
sti
icebp
and
movsb
mov
mov
dec
icebp
fs
ja
out
cld
inc
or
xchg
arpl
mov
and
xchg
xchg
je
lods
daa
or
test
sbb
inc
sub
lock
or
bound
jo
js
inc
sbb
aam
arpl
sub
adc
or
lret
dec
xor
outsb
imul
adc
mov
bound
pop
mov
out
or
mov
mov
xor
outsl
insb
sahf
push
cmp
mov
and
scas
cmp
lahf
push
test
out
lahf
or
mov
mov
mov
cld
cmpsb
mov
pop
sub
xchg
inc
fdivs
adc
sub
push
mov
dec
push
mov
cmp
enter
or
xor
fisttpll
lods
sub
sbb
xchg
and
jo
stos
sub
leave
faddl
adc
or
imul
cmp
inc
inc
push
sub
in
lret
jae
ds
mov
movl
imulb
and
outsl
xchg
add
lds
loope
lds
aas
inc
mov
popf
mov
and
cwtl
jge
lcall
jp,pt
imull
jne
dec
inc
and
lret
mov
pushf
push
dec
or
or
dec
or
aaa
lock
into
dec
push
and
pushf
adc
nop
dec
push
mov
cmp
inc
lret
mov
add
dec
outsb
or
lock
lea
ret
cmp
mov
inc
fimull
iret
cwtl
add
out
push
mov
std
sbb
insb
jae,pn
stc
pop
mov
dec
push
adc
or
pop
inc
pop
shrl
mov
push
imul
rcrb
imul
out
mov
inc
push
daa
mov
jae
push
insl
fs
or
xchg
mov
sbb
cmp
dec
movsl
sti
pop
das
push
add
das
outsl
push
inc
js
mov
sbb
pushf
cmp
mov
and
jg
dec
add
jae
pusha
pop
cltd
rcrl
sti
pop
icebp
das
ret
adc
icebp
or
idivb
xor
sbb
stos
cmp
popf
adc
cmc
and
into
daa
push
mov
jle
aam
scas
in
icebp
push
pop
lea
dec
pop
jmp
fwait
adc
sahf
jae
inc
and
cmpsb
jb
cmp
sbb
sbb
push
ret
bound
mov
popf
and
lock
inc
mov
jge
push
adc
mov
adc
jns
pop
xor
inc
test
out
pop
cld
inc
dec
mov
mov
and
test
sbb
or
rcrb
inc
cld
pusha
cmc
repz
fcmovne
mov
mov
imul
pushf
jecxz
push
cmp
leave
ja
inc
sbb
xor
cmp
cmp
mov
repz
pop
subb
hlt
pop
inc
jnp
xchg
loopne
leave
cmp
xor
lret
into
hlt
or
cmc
xor
adc
pop
cmp
inc
subb
mov
inc
test
pop
xor
pop
and
loope
pop
inc
and
cmpl
adc
xlat
mov
lcall
imul
xchg
push
pop
enter
push
imul
xchg
mov
test
pop
push
inc
repnz
push
and
lock
inc
mov
adc
cmp
add
mov
add
call
mov
cmp
mov
xchg
xchg
push
jnp
cmpsb
or
flds
stos
mov
movsb
mov
in
mov
dec
xor
pop
sbb
or
add
mov
ficomps
sub
imul
add
insb
dec
int
insb
mov
lock
mov
test
imul
cmpsb
sbb
stos
cmp
js
jb
adc
out
push
jle
mov
xchg
mov
enter
addb
add
xor
push
sbb
popa
das
repnz
popf
imul
push
cmp
das
fdivrs
jb
addr16
rclb
cli
sbb
in
clc
jl
mov
mov
movsl
adc
inc
mov
xchg
addb
xor
lea
iret
ja
shll
mov
lds
and
adc
mov
mulb
cld
push
fwait
cltd
orl
arpl
pusha
jmp
inc
in
jne
mov
jle
insb
mov
sub
ret
pop
dec
lods
xor
jmp
ds
fists
xor
cmp
mov
inc
scas
xchg
or
push
int3
mov
dec
loopne
jecxz
pusha
daa
ret
mov
sbb
inc
pop
pop
xchg
lret
inc
xchg
xor
lods
out
sub
lret
pop
adc
aas
push
sbbb
jo
cmp
test
daa
or
stos
pop
out
mov
mov
mov
xchg
mov
add
out
ja
lods
cmovns
or
fs
loope
jbe
rcrl
sarb
jl
sub
mov
xchg
scas
xchg
pop
cli
data16
daa
adc
std
fnsave
fisttpl
jecxz
push
push
pushf
and
rcr
das
cmpsb
fwait
std
inc
in
pop
stos
div
lods
mov
push
js
pop
sub
out
enter
rorl
push
push
inc
xor
insb
push
inc
mov
add
mov
mov
iret
adc
popf
sti
push
push
mov
adc
sbb
fldcw
push
daa
xor
cld
sub
gs
jge
test
push
movsb
testb
aad
mov
mov
adc
pop
aas
jo
sbb
adc
pushf
sbb
cmp
or
fs
sahf
data16
and
test
jge
das
mov
fsubs
es
out
adc
and
test
ret
push
clc
xor
sbb
sub
addl
jle
in
insl
sub
lds
mov
push
cmc
insb
push
in
mov
inc
nop
cwtl
cmpsb
xor
xlat
fistl
stos
daa
cmp
push
mov
loop
jecxz
stos
std
push
testl
mov
pop
and
inc
ja
leave
jmp
fnsave
jecxz
xchg
mov
stos
jg
stos
inc
fs
pop
inc
andb
es
sub
jae
arpl
cmp
mov
popa
mov
popf
ss
bound
arpl
xchg
dec
mov
rep
div
or
jnp
xchg
push
add
imul
repz
imul
jne
ds
ds
mov
fsub
sbb
shrl
xchg
xor
inc
aaa
int3
aad
xchg
jge
adcl
ljmp
jmp
rclb
sub
mov
add
sub
cmpsl
lret
inc
fildll
add
mov
ret
push
xor
lods
xor
mov
fildll
sub
mov
into
cmp
push
mov
sbb
lcall
movsb
cmp
mov
lahf
or
loop
xlat
inc
cmp
das
std
cmc
or
shrl
add
sbb
addr16
bound
or
ljmp
or
lock
or
repnz
adc
or
jnp
xchg
pop
adc
aam
lea
dec
pop
stos
sub
clts
rcrl
and
xchg
pushf
xor
nop
fildll
push
lock
lahf
or
mov
xor
add
xchg
jle
mov
dec
andb
pop
add
jno
cs
fstl
lcall
add
push
mov
rolb
shl
xor
lea
inc
loop
mov
ds
test
pop
add
pop
pop
add
ret
xchg
test
cmpsb
xor
stos
adc
push
mov
mov
leave
repnz
push
mov
lret
pop
sub
mov
daa
xchg
or
and
test
sub
imul
push
cmp
popa
inc
pop
add
xor
and
jae
inc
sahf
orl
bound
xchg
nop
sub
in
pop
inc
in
sub
test
jb
sbb
testb
and
xchg
adc
fwait
xor
jecxz
pop
adc
xchg
pusha
fwait
adc
pop
mov
out
mov
clc
leave
xchg
neg
xchg
mov
push
jns
js
xor
aaa
mov
cli
sub
stos
lret
jmp
loope
or
mov
and
adc
sti
notb
jle
jp
and
movsb
pushf
jg
aaa
pop
cs
xor
jnp
stos
mov
sub
push
bound
push
outsl
inc
into
out
xlat
fidivs
mov
sbb
inc
fsubr
push
je
add
cmc
sub
xchg
pop
cmp
adc
xchg
lea
mov
into
hlt
imul
pop
pop
lea
lcall
insb
bound
ljmp
sbb
int
mov
mov
mov
js
invd
pop
movsl
jne
dec
lahf
and
loopne
xor
and
hlt
sbb
icebp
out
fs
movsb
mov
or
lods
mov
cmc
xchg
lret
sarb
data16
rcll
dec
xchg
fidivrs
jae
xchg
sub
sbb
mov
sar
add
inc
sbb
sahf
add
mov
xchg
push
imul
and
stc
cmp
repz
mov
insb
push
push
jl
imul
shll
call
add
mov
pop
mov
insl
push
xchg
mulb
outsb
ja
sbb
jnp
jg
mov
inc
stc
adc
in
dec
xchg
mov
test
frstor
push
lret
mov
mov
cwtl
test
loopne
add
pushl
popa
and
pop
leave
jle
or
pusha
dec
or
movb
out
repz
pop
dec
nop
xor
in
push
push
mov
xchg
add
xor
pop
stos
mov
push
cmp
inc
xchg
xor
cmp
jo
lds
jb
lcall
das
inc
xlat
loop
sahf
xchg
push
popf
aas
jae
add
add
xor
int3
push
sbb
repnz
ja
jg
and
scas
or
cli
lahf
ja
out
out
roll
or
add
xlat
scas
fildl
add
leave
jle
daa
test
and
and
pop
fisubrs
ljmp
cli
inc
adc
dec
adc
or
jno
into
push
and
mov
sub
mov
lods
lret
ficoms
repnz
mov
fildll
xchg
dec
gs
icebp
pop
aaa
cmp
mov
inc
out
sbb
dec
jge
stos
push
stos
jae
xchg
pop
cmp
and
lcall
mov
mov
addr16
mov
sub
sub
xor
add
xchg
add
sub
push
mov
nop
cld
imul
fsubs
outsl
cwtl
aad
lret
xor
lods
add
dec
nop
in
dec
aas
call
in
stc
jb
jbe
addb
pop
mov
test
pop
daa
scas
and
lret
frstor
sbb
cli
int3
aam
adc
jmp
jmp
sub
fwait
lods
mov
lods
lock
add
mov
scas
aaa
mov
push
or
test
xchg
xor
mov
dec
or
add
mov
sbb
nop
inc
sbb
sbb
adc
or
fistpl
sbb
push
pop
mov
into
mov
sbb
into
push
insw
js
inc
pop
insl
andb
mov
sti
add
outsb
cmpsl
xchg
daa
shrl
loope
pushf
inc
testb
push
push
adc
aam
daa
fisttpl
inc
adc
mov
xchg
loopne
pop
xchg
imul
fs
jl
repnz
pop
add
ret
mov
pushf
sbb
shll
mov
imul
sahf
ljmp
sti
fdivrl
mull
jge
outsb
fxch
push
popa
adc
inc
ja
jne
push
inc
movsb
lds
xchg
push
jecxz
bound
mov
mov
dec
xlat
mov
test
movsb
sarl
cmp
xor
xor
jno
out
inc
jne
mov
int
les
jge
add
inc
mov
mov
mov
add
jb
fs
js
sbb
mov
or
lret
jecxz
push
cmp
imul
sub
scas
adc
xchg
sbb
dec
fsub
dec
xchg
pusha
mov
popa
out
sub
dec
add
add
adc
pop
sahf
stos
pop
fucomp
cmpsl
add
loop
and
pop
inc
fst
push
pusha
clc
insb
dec
ret
mov
dec
adc
push
pop
mov
jnp
mov
or
out
mov
shlb
mov
cmp
adc
cld
shlb
shld
fmulp
add
jmp
adc
jne
stos
ficomps
cmp
dec
popa
hlt
cld
imul
test
pop
push
push
inc
add
mov
and
jno
mov
mov
mov
xchg
adc
psllw
and
or
dec
dec
inc
adc
stos
sbb
cmpsb
outsl
iret
jp
xchg
and
mov
test
sub
inc
hlt
jbe
cmp
fwait
es
pop
int
ret
ljmp
cli
mov
scas
fstps
addb
shrb
scas
jno
push
repnz
pop
or
pop
jge
lock
mov
dec
push
iret
ss
into
mov
bound
ljmp
mov
nop
arpl
jl
push
cmp
cmp
jle
xor
outsb
xor
jb
cld
dec
lea
sub
adc
xchg
jno
dec
mov
sub
movsl
enter
dec
jecxz
push
adc
in
xor
xchg
cmpsl
add
sbb
jnp
pusha
cld
orl
cwtl
xchg
jle
xchg
scas
pop
lret
inc
inc
hlt
push
push
pushl
push
clc
cli
mov
mov
insb
clc
mov
or
or
mov
inc
inc
mov
xor
pop
call
push
imul
mov
notl
jp
mov
out
sahf
pop
pop
adc
add
jae
stos
sub
add
inc
xchg
xchg
xor
push
ret
movsl
cmpsl
or
mov
jns
jge
xchg
shll
add
mov
sub
jo
jmp
dec
dec
mov
or
sbb
je
mov
jne
popf
sar
xor
push
insl
addr16
xchg
cld
sbb
cwtl
or
jge
xor
data16
les
mov
in
sub
sbb
jmp
rclb
push
and
aaa
jmp
int
pop
popa
xchg
adc
mov
pop
lea
scas
mov
dec
push
and
ljmp
xor
les
stos
outsb
rcll
sub
hlt
idivb
cwtl
rorl
imul
and
ja
pop
jne
roll
out
xor
movsl
sarb
int
outsb
imul
in
push
in
lret
jmp
dec
adc
adc
dec
aaa
xchg
scas
inc
jbe
add
dec
push
lahf
sub
xor
cltd
int
inc
loopne
xor
ja
mov
fs
out
adcb
add
sahf
jno
hlt
jbe
aaa
push
adc
test
sbb
pop
dec
bound
push
push
js
loopne
push
jns
repz
shrl
stc
popa
inc
fwait
mov
cmc
loope
dec
jp
cmp
call
xchg
pop
mov
pushf
lcall
dec
dec
xchg
fidivrl
pop
imul
aad
call
lock
test
movsl
negl
lods
push
imul
cmp
adc
add
repz
mov
push
xchg
rorb
and
mov
mov
clc
stos
mov
int3
mov
cmp
test
insl
jmp
add
inc
or
shl
or
add
dec
pop
mov
aad
add
jo
add
scas
pusha
xor
daa
test
cmp
mov
and
jno
jbe
mov
mov
addl
cmpsb
in
adc
andb
daa
dec
int
scas
jne
mov
mov
jns
leave
arpl
inc
call
insb
sahf
scas
gs
movsb
pop
inc
sbb
cltd
test
xor
pusha
sub
inc
gs
fbld
xchg
aad
jae
sbb
pop
loop
sahf
sbb
fistl
or
loop
test
into
xchg
lds
hlt
in
push
pop
jae
pop
adc
icebp
out
inc
mov
lods
add
mov
add
lret
dec
push
xlat
jnp
pop
add
mov
popl
xchg
xchg
mov
and
mov
cmpsb
pop
inc
addr16
xchg
or
mov
stos
mov
lret
arpl
jns
lods
fcomip
into
mov
xchg
ja
sahf
mov
lea
iret
test
dec
ja
pop
fbld
lret
pop
adc
fnstcw
xlat
xchg
sbb
ret
sub
call
je
sbb
push
fcomps
mov
sahf
stos
fs
or
out
sbb
or
pop
pop
mov
cld
mov
push
ret
popa
mov
inc
mov
cs
cltd
pop
mov
mov
cmp
mov
sbb
out
movsb
ja
xor
in
add
stos
les
cmp
fwait
daa
and
or
mov
dec
stos
popf
mov
scas
pop
enter
fnstenv
mov
fs
xor
pop
fistps
mov
add
sbb
pop
push
ret
cmp
jmp
jnp
fldcw
clc
inc
js
sti
jg
ds
arpl
mov
jne
xchg
xchg
lahf
and
rcr
test
pop
mov
loop
xchg
mov
pause
clc
mov
mov
xchg
ret
scas
call
sub
pop
or
std
mov
mov
stc
testb
imul
and
jns
out
lds
add
outsl
aad
fsubrp
push
dec
dec
and
and
enter
movsb
jb
pop
faddp
jle
pop
nop
inc
fbld
lcall
mov
cs
in
int
lret
mov
jecxz
mov
cli
int3
insb
pop
sub
pop
mov
ljmp
sbb
add
jg
fwait
mov
xchg
mov
mov
pop
adc
cwtl
lahf
push
lds
push
jb
sub
and
shlb
cmp
push
mov
cs
and
int
inc
add
stos
cmpsb
and
push
scas
ss
pop
arpl
data16
outsl
dec
inc
sub
jb
lods
xlat
lret
in
or
leave
cmp
pop
pop
xor
fldcw
lahf
pop
mov
push
sub
je
inc
sbb
cwtl
fdivs
xor
call
cmc
xor
pop
and
dec
sub
insl
sbb
jmp
bound
fwait
sahf
out
in
lret
xor
ret
lock
cmp
jg
divl
pcmpgtd
int3
inc
icebp
mov
inc
sbb
mov
aas
pop
dec
dec
lea
lds
xchg
clc
or
xchg
test
dec
loopne
mov
or
sbb
lret
push
add
pop
andl
adcb
idiv
in
pop
std
and
adc
mov
and
in
sbbl
xor
test
sbb
inc
mov
out
inc
mov
mov
outsl
sbb
push
jge
popf
loop
fcmovnu
js
inc
notl
imul
aaa
jns
ss
pop
pop
xor
and
call
cmp
xchg
cmpb
out
movsb
pop
fwait
sub
cmp
leave
adcl
push
adc
in
mov
pop
or
push
je
adc
int
lds
xchg
inc
sub
dec
cmpsb
push
insb
repz
and
movsb
jnp
ret
adc
mov
or
xor
or
or
rcll
cmpl
mov
cmpsb
cmp
or
cli
dec
and
cltd
popa
mov
xchg
cmp
cmp
ljmp
aad
int
cmp
lret
outsb
fsts
daa
ja
jae
and
add
test
push
dec
cmpsl
or
pop
mov
test
pop
or
cmpsl
xor
nop
js
cmpsl
xchg
or
xchg
add
xor
aad
rol
ja
out
push
sub
jno
xchg
stos
cmp
pop
imul
add
lds
jmp
pop
cld
sti
out
push
jge
pop
mov
xor
sbb
cmpsl
sbb
clc
jne
scas
and
add
sub
daa
das
aam
imulb
cli
pop
push
sti
hlt
lods
xchg
int3
jle
or
sub
iret
mov
out
roll
add
and
rcrl
push
sub
into
repz
daa
and
lods
pop
sub
push
aad
mov
push
mov
fisubrs
dec
int
add
xor
mov
xor
ret
adc
int
lods
ja
iret
cs
lret
pminsw
pop
sbb
pushf
arpl
mov
std
fistpll
sbb
adc
out
mov
and
lret
and
js
xor
mov
roll
int3
cmpsl
dec
mov
rol
inc
dec
popf
sub
inc
pop
shll
pushf
movsb
dec
lods
std
shll
out
addr16
decb
bswap
jmp
pop
mov
mov
sbb
stos
pushf
fdivrl
loope
jle
adc
cmpl
mov
mov
in
imul
fmuls
insl
hlt
jo
sti
cli
or
imul
fs
dec
xchg
or
push
pusha
xchg
shll
out
inc
xchg
add
shl
xorb
mov
jnp
sub
fistpl
cmp
pop
mov
clc
ss
dec
push
push
mov
scas
adc
in
jns
mov
jmp
push
enter
push
lds
stos
inc
jne
xchg
bound
movsl
push
insb
xor
je
pop
divb
pop
add
stc
in
fistpl
cwtl
xor
lods
add
xchg
jns
mov
loope
sbb
dec
add
mov
jmp
mov
jle
sbb
xchg
xor
cmc
ss
mov
add
imul
jge
and
sbb
mov
in
pop
dec
xchg
dec
fstl
xchg
cmp
jb
dec
popf
mov
mov
pop
loope
popf
push
sbb
loopne
shll
fmull
addr16
dec
sbb
or
push
adc
into
add
pop
dec
cmp
cli
adc
rcrb
in
or
inc
add
sub
push
xchg
fadd
mov
lret
mov
mov
jmp
xor
sub
imul
adc
mov
lcall
dec
push
les
lds
mov
in
lea
out
aad
aam
mov
cs
cwtl
jmp
adc
mov
repz
cmp
xchg
lret
int
sbb
push
add
jp
adc
das
push
pop
mov
xchg
mov
ljmp
outsb
add
sub
mov
jl
push
mov
popf
mov
add
jecxz
sbb
or
xor
and
repnz
cmp
mov
xlat
or
addr16
xchg
aas
and
xchg
popa
mov
clc
cmc
or
dec
insb
lods
sarb
jl
movsl
aaa
add
inc
pushf
lds
aad
and
mov
sbb
loope
out
add
shrl
or
pusha
call
xchg
pop
jle
jmpw
push
inc
outsb
in
push
cmp
xor
dec
xor
insl
mov
fcompl
xor
add
inc
ja
jae
fisttps
gs
out
fistpl
or
fwait
mov
adc
loopne
mov
lahf
jne
faddl
psrld
add
cmp
xchg
adc
inc
rclb
sub
cli
xchg
out
inc
xchg
leave
jg
pop
lret
pop
jg
push
cmp
rcll
pop
xchg
sub
mov
int3
outsl
loopne
push
loop
push
xchg
es
jecxz
xchg
dec
addl
cmpsl
fldenv
into
stos
mov
xor
push
mov
push
es
faddp
dec
inc
lret
and
adc
daa
mov
jp
mov
sub
dec
jecxz
and
aas
fdivl
imull
inc
leave
lds
out
imul
push
jbe
dec
inc
xchg
push
rolb
jmp
sbbb
fbld
in
pop
bound
dec
shll
xchg
adc
adc
sbb
cmp
pop
mov
adc
lahf
lds
dec
cltd
jb
push
lret
and
lahf
sbb
xchg
mov
jb
inc
das
adc
test
mov
jg
std
pop
lahf
inc
cmp
inc
leave
and
push
test
ret
int3
cmp
lods
pop
jge
cmpsb
bnd
pop
or
or
cmp
test
mov
dec
popf
push
push
mov
sub
dec
add
dec
out
mov
adc
sti
add
sbb
icebp
jg
jmp
loopne
mov
push
inc
rcrl
adc
mov
mov
repnz
aad
mov
lds
scas
std
notl
cmp
fnsave
cmp
outsb
mov
rcl
push
inc
js
jnp
pushf
jp
ja,pn
cmp
dec
add
pop
scas
lock
adc
xor
push
incb
cltd
fisttps
push
out
rorl
push
aam
pushf
pop
daa
les
outsb
mov
xchg
pop
sub
jecxz
sub
add
mov
and
push
dec
scas
loop
test
aad
lea
in
push
js
and
cwtl
dec
mov
inc
mov
jb
pop
push
addr16
push
xor
mov
sub
stos
xchg
sbb
cmp
pop
inc
sbb
xacquire
push
xlat
jl
shl
mov
test
fs
lds
out
mov
fs
nop
mov
inc
ret
cmp
aam
sbb
scas
dec
ret
test
push
jb
mov
pop
imul
and
mov
fnsave
daa
cli
pop
add
mov
sub
xor
jle
jecxz
outsl
popf
jnp
aad
jp
lea
ror
int3
and
in
pop
cmp
mov
adc
pusha
xchg
or
hlt
sub
mov
js
cmp
inc
sbb
xor
sahf
ret
out
sbb
sarl
lea
in
jg
popa
jb
xchg
dec
dec
cmp
mov
fildl
loope
or
loope
ljmp
or
mov
outsb
or
adc
xor
pop
adcb
mov
dec
nop
jge
pop
hlt
pop
jb
loop
arpl
sub
sub
xlat
clc
je
insl
jno
mov
sub
mov
lahf
test
loop
jge
cmpsl
push
add
sub
jbe
stc
popf
ds
mov
out
jne
xor
ja
xor
xor
jae
ljmp
fdivrs
or
and
push
push
aad
dec
or
loopne
outsl
fidivs
xor
xor
int3
mov
sbb
fmul
cmp
leave
mov
sbb
lcall
lods
iret
jl
mov
test
sbb
icebp
pushf
aas
xchg
scas
and
out
lods
mov
jb
subl
dec
xchg
ja
es
sbb
in
sbb
jge
mov
ret
mov
mov
int3
mov
jle
rcrb
scas
roll
repz
xchg
push
ljmp
sbb
sub
push
mov
jp
sub
repz
adc
pop
aad
sarb
mov
xchg
jle
dec
and
sbb
popa
sti
popf
insb
or
cmpsb
inc
leave
mov
fcmove
and
nop
out
dec
into
neg
jge
mov
js
test
sbb
mov
aam
push
scas
call
icebp
aaa
lcall
lods
outsl
mov
test
fistpl
ljmp
mov
dec
imul
loop
out
dec
icebp
mov
enter
add
sub
jne
push
or
xchg
int
clc
and
xor
sub
jno
mov
cld
sbb
adc
mov
out
loope
and
lods
lret
xor
loopne
shrl
shll
inc
jge
test
lcall
popa
loope
in
int3
mov
sbb
gs
pop
mov
rcrl
aaa
adc
mov
pop
leave
addr16
xchg
xchg
mov
imul
and
jmp
or
or
fwait
push
shl
cmp
push
mov
div
adcl
add
shlb
in
addl
stc
out
mov
test
arpl
dec
fisttpl
cmp
jne
mov
mov
rol
stos
sub
ja
fcomps
imul
das
bound
ret
in
jbe
test
in
fisubs
xor
idivb
scas
and
outsw
pop
movsb
mov
mov
js
cld
in
mov
jbe
mov
insl
popa
in
adc
mov
ja
pop
movsl
jle
loop
pop
xchg
js
or
inc
jp
movsb
pusha
std
inc
cmp
sub
sub
cwtl
dec
in
jle
iret
aad
in
mov
out
in
xor
push
lock
adc
fstps
lds
inc
and
lcall
mov
mov
emms
jp
icebp
jmp
dec
jbe
push
mov
pop
or
pop
cmp
push
sbb
ds
pop
outsb
add
out
mov
jle
pop
or
adc
mov
sbb
cli
test
cmp
jmp
and
popf
mov
repnz
out
dec
xchg
pop
stc
cmpsl
ja
pop
and
enter
test
out
ss
and
imul
icebp
mov
std
in
stos
xchg
dec
mov
stos
push
ret
mov
add
lret
cld
jl
push
dec
jge
adc
pop
arpl
xchg
stos
aaa
cmc
sti
adc
sub
fcomps
adcb
push
xor
push
rcll
loopne
hlt
clc
mov
inc
ficoms
out
adc
out
pop
jb
insl
sbb
loopne
je
fnstenv
dec
inc
sub
add
mov
arpl
or
adc
pop
cmp
popf
pop
mov
xchg
std
or
aam
adc
sbb
add
pop
push
xchg
out
sbb
aam
mov
dec
jne
mov
lret
pop
ljmp
xlat
popa
sub
inc
mov
imul
pop
adc
outsl
mov
add
push
mov
ds
cmp
push
lret
push
loopne
mov
out
cld
jle
mov
js
mov
loop
push
xor
and
les
mov
mov
in
inc
mov
and
jmp
rcrl
xlat
ss
rorl
das
repnz
in
cltd
dec
test
pop
dec
xor
jp
mov
imul
std
inc
dec
mov
fisubs
test
push
insl
xchg
sbb
cmp
xchg
push
mov
dec
or
inc
je
aam
mov
pop
cmp
xor
mov
fs
xor
cmp
loope
repz
jne
or
loop
fists
fildll
dec
dec
mov
loop
leave
popf
imul
popa
fstps
cmp
dec
mov
mov
jae
mov
aad
mov
or
mov
gs
mov
sbb
jmp
or
cmp
insb
outsb
dec
cmp
imul
cmp
mov
adc
or
ret
les
mov
aad
mov
stos
test
popa
and
pop
push
outsb
push
pop
pop
in
mov
mov
mov
lods
pop
int
mov
in
add
adc
iret
addr16
jp
xor
xchg
jns
shl
lcall
movb
test
arpl
fwait
lret
cmp
ljmp
or
mov
lret
int
clc
adc
dec
pop
sbb
lcall
outsb
cmpsl
mov
inc
stos
mov
inc
int3
push
mov
outsb
dec
stos
jo
lock
mov
fldcw
ja
cmpsb
fdivl
xchg
mov
xchg
pop
dec
fwait
push
sub
aaa
outsl
mov
filds
jne
sahf
int
jb
adc
lock
add
aam
or
ret
or
and
and
test
mov
inc
rcrl
pop
shl
aaa
fsubs
inc
pop
lret
lea
or
loop
sbb
mov
mov
fs
xor
lret
das
fisubrl
mov
rcll
add
data16
jl
or
outsl
data16
add
iret
aas
cwtl
adc
xchg
and
js
push
pop
in
loop
int3
rcrl
xlat
jg
movsl
outsb
icebp
shrb
mov
insb
mov
es
fs
mov
notl
call
into
es
xor
lahf
sub
outsb
xor
sbb
mov
orl
in
out
dec
ljmp
rcll
jg
adc
scas
inc
es
sub
idivl
in
rcl
cmpl
mov
xchg
enter
and
cltd
sbb
adc
in
sbb
movsl
call
xchg
dec
in
ss
scas
sbb
add
add
out
ljmp
clc
hlt
adc
mov
mov
in
movsl
stos
cmp
adc
jmp
or
testb
mov
dec
mov
aaa
lods
jp
jo
lcall
ja
repnz
outsb
jns
daa
mov
or
cmp
add
xor
js
rolb
leave
stc
and
or
out
mov
stos
div
popf
ljmp
pusha
sar
sbb
mov
test
ret
lret
or
dec
inc
jae
scas
jl
fcomps
xor
clc
add
push
fldcw
stos
mov
jae
insb
push
stos
pop
imul
sub
sbb
mov
imul
addb
sub
arpl
aaa
push
outsl
repz
xor
dec
outsl
mov
lea
ss
push
mov
leave
dec
aam
xchg
inc
fisttpll
push
shrb
dec
enter
jge
and
add
mov
movsl
packsswb
sub
rorl
sub
jo
in
jae
pop
jb
aaa
loopne
inc
jb
xchg
out
sbb
jg
movsl
sub
lods
ss
inc
andb
mov
adc
jb
push
lcall
cmp
mov
movsb
aas
jl
fwait
or
std
aam
lods
mov
mov
adc
mov
bnd
lea
cwtl
pop
adc
inc
fidivs
arpl
arpl
mov
ljmp
sub
jmp
sti
fbld
mov
push
mov
btl
test
cmpsb
pop
push
lahf
jb
aaa
xor
sub
repnz
cmp
jmp
ret
xor
test
add
fs
fidivl
mov
pushf
inc
pop
pusha
fwait
sub
call
and
imul
fsubp
jo
popl
mov
xor
jl
push
aaa
sbb
ret
jge
mov
xor
repz
sbb
outsl
sbb
cmp
lret
jecxz
adc
lods
aad
fisttps
or
add
popa
sbb
lds
fists
subb
fidivrl
xor
cmp
add
mov
cmp
mov
dec
out
and
pop
cmc
push
adc
lods
mov
call
sarb
aad
sub
mov
sub
and
mov
dec
jo
nop
sub
adc
adc
mov
into
mov
lods
lods
or
fwait
cwtl
int
jbe
addr16
xchg
lcall
xor
gs
and
lahf
lds
popl
and
pop
jmp
aas
test
fidivs
inc
sub
and
loop
inc
add
mov
mov
lds
mov
cmp
xchg
jae
and
dec
adc
popa
jecxz
mov
xchg
xchg
loopne
sub
sub
insb
sbb
mov
xor
test
adc
addl
cmc
push
sbb
cmp
jecxz
loope
int3
fisubrs
sbbl
outsl
jne
cmp
popf
dec
bound
fbld
push
mov
sti
mov
fdiv
mov
in
pop
jecxz
lds
hlt
add
jae
loope
pop
sbb
fidivl
test
adcb
adc
ds
adc
xlat
idiv
or
outsl
push
jge
popa
push
ficoms
mov
and
mov
aam
xor
push
jne
test
dec
xchg
adc
adc
enter
mov
xor
nop
mov
cld
outsb
sbb
ljmp
daa
mov
xor
iret
outsb
outsl
adc
sarl
shlb
add
outsb
in
xchg
sub
mov
jbe
call
xor
cmc
inc
or
or
pop
ret
in
dec
shll
cmp
xchg
movsl
cld
sub
inc
sub
clc
stos
lock
ja
dec
inc
cmp
or
pop
jmp
mov
xchg
inc
mov
cmp
out
cld
sbb
sub
or
incb
jl,pt
cmpsb
lods
push
mov
pop
jmp
mov
add
lea
fsts
ljmp
fidivrs
push
and
andb
jle
push
push
and
push
jge
xor
stc
pusha
jecxz
pushf
cli
sbb
fmuls
mov
xchg
push
pop
in
push
div
mov
fsubs
loop
out
add
xchg
or
cmp
mov
pop
or
rorl
ss
pinsrw
addr16
ret
fisubrl
pusha
cmp
push
cmpsl
mov
decb
daa
shlb
out
xor
es
test
adc
mov
inc
push
inc
out
sarl
or
lret
fmuls
hlt
popf
inc
sbb
and
pusha
cmc
cwtl
stos
and
ds
push
aas
subl
stc
push
pop
mov
xchg
bound
xchg
pop
stc
ljmp
xchg
int3
pop
repnz
cwtl
jo
inc
sbb
xor
sub
maskmovq
idivl
mov
or
movsl
xchg
cli
inc
outsb
xchg
call
in
xchg
or
pop
jo
and
pop
div
js
das
push
test
rcll
mov
arpl
sbb
push
dec
mov
sahf
mov
imul
insb
sti
or
xlat
repz
dec
mov
cwtl
mov
ret
xchg
push
mov
aaa
xlat
outsl
pop
add
dec
xchg
xchg
addl
sub
fxam
and
jbe
sbb
jnp
iret
pushf
loop
dec
adc
rorl
ret
bound
adc
mov
fdivl
mov
xor
test
mov
divb
jle
adc
stos
sbb
add
pop
xor
cmpsb
lods
test
jns
jo
xor
adc
das
movsb
cmc
ljmp
pushf
dec
pop
jge
lret
movsb
leave
inc
roll
add
lds
pop
shlb
add
or
movsl
and
inc
lods
movsb
fistpll
in
hlt
lea
sarl
add
pushf
call
mov
pop
cltd
int3
gs
testl
fmul
bound
ret
cmpsl
cmp
cs
sub
or
sbb
flds
sti
lea
outsl
sbb
cmp
ja
stc
mov
enter
mov
dec
aad
dec
xor
xchg
mov
je
sbb
lret
cmp
mov
stos
add
dec
cmp
int3
push
aas
outsl
jno
mov
iret
mov
sub
dec
mov
push
mov
push
lock
sbb
aas
or
fbstp
leave
add
scas
sarb
cmc
add
pop
inc
fnstsw
ds
fildll
sub
sbbb
es
nop
mov
pop
sbb
adcb
les
jmp
xchg
clc
setns
xorb
movsl
sti
and
nop
jl
test
sbb
shr
mov
push
mov
push
pop
icebp
pop
sbb
fsubrl
fnsave
jne
stos
popa
btc
dec
pusha
push
cmpsb
lock
jns
add
mov
pop
dec
push
add
xor
test
inc
and
out
test
inc
xchg
push
aad
ret
add
stos
sub
pop
orl
fstps
xor
in
xchg
or
cli
iret
fnstsw
inc
sbb
inc
test
mov
aas
mov
vaddsubpd
rcl
pushf
dec
enter
fwait
fildl
aad
pop
cli
mov
arpl
fimuls
or
push
inc
jecxz
xlat
xchg
andl
stos
testb
push
sbb
jne
cltd
sbb
nop
sub
dec
xchg
sub
popa
out
pop
pushf
js
aaa
cmpl
add
sarb
lods
std
inc
push
andb
ret
dec
jno
js
cmp
xchg
outsl
inc
cmp
jne
cmp
inc
dec
inc
cmp
repnz
test
and
cli
push
dec
movsl
inc
cmp
pop
adc
xor
jmp
adc
movaps
sbb
cltd
mov
inc
cwtl
cmpl
subl
into
mov
lds
mov
ljmp
lret
call
ficomps
pushf
hlt
inc
sbb
mov
or
adc
xchg
aaa
sbb
mov
or
icebp
add
xchg
xor
ja
inc
cwtl
mov
push
mov
rcrb
shll
andb
jmp
imul
push
int3
sbb
cwtl
push
mov
add
lock
lret
adc
inc
ret
sbb
mov
fmuls
add
outsl
xchg
pop
aam
popf
es
mov
leave
in
cwtl
jge
mov
cmpsl
jae
mov
jnp
cmc
ja
inc
or
sbb
xchg
popa
ljmp
push
out
pop
aaa
addr16
les
ja
insl
mov
fs
repnz
or
add
pop
loopne
add
add
pop
push
cmp
cmc
jp
arpl
repz
dec
decl
mov
inc
or
ss
outsb
sbb
movb
push
add
xchg
or
xor
xchg
push
xchg
xchg
out
repz
xchg
pop
mov
loopne
push
cmpsl
lcall
pop
jge
adcb
xchg
pop
clc
sbb
loopne
cld
jo
lea
or
push
lea
push
cwtl
dec
ss
cmp
data16
xchg
aad
jae
xor
dec
wrmsr
scas
jmp
sbb
or
cld
daa
out
jl
sarl
jmp
cmovae
imul
ret
jno
push
cltd
in
and
mov
sub
and
dec
mov
shll
or
test
mov
jmp
cmp
and
addr16
push
inc
mov
shll
fisubrs
std
int
or
mov
and
jnp
pop
mov
push
cmp
pop
mov
pop
sub
add
shr
sahf
push
mov
sarb
xor
xchg
or
push
add
lret
push
push
inc
insl
pusha
and
jnp
fistps
xchg
cmp
das
fs
xchg
add
aad
push
push
or
call
push
push
sub
vmulps
and
lea
imul
icebp
das
ret
jle
sbb
pushf
push
negb
push
mov
stos
cmc
imul
loop
sbb
decb
clc
movsl
fistpl
cmpsb
imul
lret
and
nop
jb
xor
clc
nop
pop
aaa
fnstsw
rorl
pop
dec
stos
push
idivb
lock
rol
sbb
mov
aas
pop
and
sbb
pop
cwtl
cli
fxch
stos
jmp
mov
sbb
dec
xorb
sub
inc
hlt
negl
adc
fcomp
xchg
cmp
outsb
jge
stc
cli
js
shll
push
je
mov
es
jbe
cs
je
out
add
sbb
mov
imul
ja
outsl
mov
mov
mov
lds
pop
popf
adc
test
sub
inc
sbb
test
enter
mov
xor
push
fdivl
das
ja
nop
sbb
mov
ficoms
in
test
scas
test
or
je
repnz
ret
repz
xor
cmpsl
imul
ud0
mov
mov
add
jg
incl
push
and
pop
xlat
enter
xchg
and
and
cmc
jmp
movsb
push
mov
push
mov
push
inc
mov
pop
xchg
xor
xchg
push
or
sub
sahf
ret
push
rcrl
repz
xor
mov
ljmp
js,pt
fistps
daa
cmpl
in
jmp
fildll
out
fistpll
ret
jle
sub
jbe
pop
and
repnz
cwtl
adc
popl
adc
inc
push
ljmp
push
xor
xor
fisttps
or
pop
rolb
in
mov
pop
ret
cli
push
and
or
pop
lcall
jbe
mov
stos
mov
cli
fcomi
ljmp
cmp
push
pop
and
jae
xor
cltd
addl
lea
fsubs
sbb
in
jmp
xchg
adc
add
jno
inc
mov
add
mov
jns
pop
rcll
pushf
rcll
gs
add
ret
clc
dec
pop
sbbl
mov
jb
and
mov
mov
jp
aad
cmc
sub
leave
sahf
lea
xor
add
das
cmp
cmp
lods
jecxz
clc
sarl
jecxz
dec
sbb
xor
data16
addl
int3
fcomps
inc
sbb
cmp
psllw
hlt
or
mov
js
into
mov
push
popl
inc
xor
pop
repnz
test
gs
jge
arpl
push
movsl
dec
stc
fwait
rorl
test
and
mov
pop
insl
or
adc
jns
mov
faddl
mov
fcompp
mov
push
mov
inc
pop
out
or
pop
test
fs
push
xchg
xor
inc
cmpl
dec
imul
inc
or
adc
xchg
fmuls
out
mov
roll
push
add
mov
dec
pop
outsb
cli
test
loope
and
jo
mov
xlat
mov
jl
xor
cwtl
jle
imul
mov
movq
icebp
out
fwait
repz
mov
sti
aaa
shrl
mov
inc
cwtl
and
and
or
inc
pushf
aad
ret
insb
xchg
sub
inc
mov
sbb
push
jg
jbe
xchg
sahf
xor
das
or
sbb
xor
lret
les
scas
aaa
cs
or
and
push
sub
add
or
fldl2e
mov
fcoml
loop
adc
lcall
bound
push
dec
adc
jb
mov
decl
fcompl
dec
popf
pop
insb
adc
outsl
xlat
pop
outsl
add
fildl
xchg
add
dec
push
scas
sub
jne
cmpsl
cwtl
fidivs
in
lret
cmc
daa
xor
ret
jnp
scas
popa
daa
dec
mov
cmpsb
cmc
shlb
pusha
out
mov
jmp
fcoms
push
pop
movsb
sub
nop
adc
jnp
enter
dec
jge
test
push
adc
loop
in
icebp
adc
push
inc
mov
popa
jg
push
sbb
cmp
mov
ss
das
mov
and
jo
sarb
and
dec
fdivrs
or
addb
inc
scas
add
mov
icebp
shrb
cmp
fwait
or
pop
ret
push
xchg
cld
in
jmp
xor
ds
fstpt
addb
stc
mov
int3
xchg
insl
inc
push
adc
jae
adc
inc
push
addl
lahf
inc
movsl
inc
push
outsb
imul
cmp
pop
sub
rorl
sbb
imul
xorl
rclb
mov
or
pusha
fsubl
jo
dec
andl
hlt
mov
xchg
sub
cld
xchg
stc
mov
test
scas
test
push
insl
mov
shlb
insl
mov
mov
and
addr16
adc
push
lock
xchg
adcl
mov
mov
mov
scas
cmp
push
push
in
pop
popa
imul
sub
push
mov
pop
add
mov
jecxz
loop
sub
mov
cmp
add
or
ja
jae
mov
inc
fwait
cmpsb
mov
adc
mov
mov
popf
ret
fs
push
shl
lods
cmp
dec
cs
xchg
and
xchg
insb
pop
clc
cmpl
data16
pop
mov
movsb
in
sbb
sub
scas
and
stos
loop
mov
stos
iret
adc
sbb
rclb
push
jb
inc
xor
testl
or
sbb
mov
out
dec
or
pmullw
adc
mov
hlt
lods
and
iret
pop
sahf
cmpsl
out
lret
cs
dec
arpl
ret
sbb
sbb
xchg
rorb
jmp
pop
sbb
mov
cmp
push
std
xchg
roll
in
stos
push
push
add
xchg
sti
iret
cmp
mov
sbb
fs
xchg
fcoms
pop
mov
enter
sub
aad
jge
mov
lret
ret
jb
dec
adc
imul
mov
add
ja
sar
push
fists
xchg
jnp
sub
sbb
xchg
push
sub
das
mov
testb
lcall
jno
inc
lea
loop
int3
xlat
or
push
rorl
stc
fistps
cmpsl
cmp
lods
cmp
aaa
popa
testl
clc
adc
add
pop
add
dec
das
push
popf
cltd
jmp
adc
add
test
je
push
xchg
jle
sub
mov
aam
shll
inc
loope
popf
ljmp
imul
push
inc
cli
xchg
mov
clc
sbb
inc
and
mov
lcall
xchg
push
push
sysexit
call
xchg
adc
stc
aad
push
or
push
dec
lock
pop
push
movsb
int3
mov
test
ret
sahf
leave
cmc
and
xor
movsl
push
jl
push
ja
jge
push
inc
ljmp
in
push
jg
inc
fisubs
leave
sub
cld
push
in
and
lock
or
jge
movl
addr16
js
insb
adc
push
pop
dec
jecxz
push
xchg
mov
ljmp
dec
pop
dec
fdivrs
jne
cmp
mov
insl
filds
cmpb
les
std
test
std
cld
mov
mov
ds
scas
mov
mov
pop
iret
sti
inc
mov
dec
fs
inc
sub
out
dec
add
imul
xor
mov
insb
insl
mov
repz
push
and
inc
sub
lea
ss
addr16
ja
andb
out
sbb
cmp
mov
jae
sub
xchg
push
in
jle
shll
mov
adc
lods
data16
add
dec
das
inc
adc
mov
xchg
stos
push
test
xor
cld
pop
add
movsb
mov
repnz
mov
std
mov
cmp
test
push
movsl
pop
in
fstps
mov
lcall
mov
xchg
pop
sub
int3
aad
mov
push
repnz
hlt
jb
add
lock
lret
lcall
mov
in
aad
sti
fisubl
int3
sbb
sar
icebp
sbb
stc
lcall
mov
sbb
sbb
ret
cmp
mov
add
addb
ljmp
loopne
pop
adc
inc
adcb
xchg
xor
xor
add
and
pop
clc
or
mov
fadd
out
dec
adc
fstpt
ret
imul
mov
mov
inc
push
aaa
cmpsl
and
xchg
jmp
mov
les
mov
repz
xor
imul
into
lahf
neg
subb
mov
into
das
popf
and
xchg
xchg
rcrl
scas
lds
stc
sbb
int
dec
mov
pusha
inc
mov
sub
cmpsb
inc
and
inc
jbe
sbbl
mov
and
adc
gs
xlat
jecxz
daa
int3
pushf
fiadds
mov
pop
dec
popa
jae
inc
jp
enter
add
and
mov
xchg
inc
sarl
in
lcall
pop
popa
sub
xorb
lcall
enter
fildll
sbb
into
in
mov
mov
bound
out
outsb
sbb
dec
lret
add
stos
inc
ja
popf
mov
in
xor
rol
jle
int
xor
xchg
into
clc
daa
mov
dec
ds
push
or
std
ret
imul
jmp
xlat
std
mov
ret
arpl
lods
cmpsb
mov
lret
add
xor
lcall
mov
out
fs
cmpsl
xchg
rorb
mov
mov
mov
jmp
mov
out
mov
test
mov
insb
push
add
sbb
ljmp
jle
in
dec
hlt
xor
orl
fsubs
data16
jge
sbb
cmp
mov
push
std
sub
pop
jne
gs
xor
push
xchg
out
and
aam
mov
jnp
xchg
imul
xor
loope
out
ret
fwait
popa
sub
jnp
leave
aam
xchg
loopne
fstps
or
insl
in
and
das
jb
mov
sbb
adc
insb
mov
addl
out
xor
testb
fmuls
push
loop
enter
mov
xchg
loope
adc
jb
sub
movsl
cmc
fsubrp
jg
push
mov
add
data16
mov
and
inc
jge
ljmp
jne
mov
sub
loopne
cmpsw
push
cmpl
sar
jae
sub
pop
rolb
sub
fcmovnu
mov
push
cmp
sub
dec
lods
xor
out
jbe
or
stos
testb
and
mov
add
inc
mov
mov
pop
jae
dec
aas
sbb
adc
cmp
xor
iret
xchg
mov
mov
pop
ret
shlb
add
jecxz
xor
bound
mov
jp
clc
sbb
mov
enter
rcll
in
xchg
imul
mov
mov
pop
aam
gs
outsb
jno
scas
push
shlb
aaa
jae
pop
cmp
mov
sbb
rorl
repz
dec
shlb
push
push
daa
push
cmp
xor
out
out
add
or
and
xchg
mov
outsb
mov
mov
adc
and
js
sbb
sub
jbe
hlt
popa
loope
mov
mov
jp
loopne
ja
rorb
add
push
push
lahf
mov
jge
jle
pop
dec
cld
mov
gs
jp
inc
dec
mov
mov
xlat
pop
scas
shrb
xchg
inc
cmpsb
lret
add
gs
int
test
sub
mov
adc
pop
and
add
adc
jg
adc
mov
adc
cwtl
and
add
add
add
and
add
add
and
add
and
add
add
addb
add
test
and
add
push
dec
inc
dec
xor
cs
dec
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
push
xor
xor
fs
insb
add
add
add
add
add
adc
add
add
add
out
pushl
es
sti
out
incl
add
add
adc
mov
add
add
adc
mov
adc
add
add
add
sar
and
add
add
add
pop
lea
add
mov
lea
push
pop
add
lods
dec
jne
mov
movb
mov
mov
push
push
pushl
push
call
mov
add
mov
jmp
add
pusha
push
push
push
call
mov
popa
pusha
sub
mov
mov
lea
xor
push
pop
jmp
mov
and
cmp
je
mov
and
cmp
jne
inc
mov
sub
xor
mov
mov
inc
shr
jne
push
inc
mov
sub
sub
mov
cmp
ja
mov
shl
mov
shl
xor
lea
mov
inc
shr
je
add
mov
shr
setae
dec
mov
pop
inc
cmp
jl
popa
push
shr
rep
pop
add
mov
test
jne
push
push
push
call
mov
jmp
add
push
call
mov
add
jmp
btr
jb
add
inc
inc
push
push
push
call
stos
pop
mov
test
jne
add
lods
test
jne
mov
or
je
mov
jmp
xor
lods
or
je
and
add
add
cmp
jne
mov
lea
add
test
jne
popa
jmp
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
