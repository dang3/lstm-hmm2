push
call
ret
ret
mov
leave
push
inc
jbe
adc
bound
dec
inc
cld
int3
sahf
sbb
jnp
jp
fwait
sbb
pop
pop
dec
dec
push
ficoml
das
xchg
or
push
insl
xchg
pop
sub
aas
inc
cmovbe
dec
adc
arpl
cwtd
inc
cmpsl
popf
and
js
push
sarb
xorl
js
cs
xchg
fadds
cmpsb
in
xchg
scas
outsb
scas
popf
lahf
int
inc
push
and
push
mov
call
jmp
sbb
or
cmp
jne
jae
pop
sub
push
subl
mov
daa
ret
clc
rcll
pushf
adcl
into
and
jp
dec
push
mov
jmp
push
dec
ret
fmuls
stos
std
subb
pop
push
xchg
cmp
lea
adcb
aas
jae
cli
or
sarl
jnp
ret
pop
jle
enter
aad
dec
mov
push
cld
inc
popf
mov
test
scas
mov
push
push
inc
fisttpl
in
out
loopne
pop
hlt
leave
daa
out
popf
out
mov
roll
mov
leave
pop
dec
push
pushf
adc
mov
scas
out
xchg
je
mov
cmp
lcall
mov
mov
popa
inc
dec
insb
shlb
push
dec
iret
out
lret
orl
sti
fmuls
daa
and
or
mov
into
jecxz
jnp
push
lods
das
cltd
jg
cmp
inc
roll
out
inc
and
mov
cli
das
add
add
push
mov
shl
mov
push
in
mov
sub
shl
shrl
ja
jne
adc
addb
add
xor
sti
mov
adc
ret
adc
je
ret
lods
sub
inc
and
mov
data16
adc
aam
mov
addl
mov
in
out
int
adcb
fdivrl
call
and
pop
pop
lods
shll
or
push
scas
jnp
adc
stc
mov
out
mov
popf
or
jne
dec
push
shlb
push
add
lea
aad
mov
cmc
insb
sti
mov
aaa
shr
lds
imul
pop
inc
sub
rcll
leave
lahf
packssdw
sbb
mov
xor
or
mov
js
pop
push
loope
sahf
cmp
push
xchg
push
pushf
mov
stc
dec
pop
scas
push
ret
fwait
push
jmp
mov
push
ret
sbb
pop
mov
or
dec
hlt
lds
out
push
sub
jb
xlat
pop
dec
jp
pop
int3
imul
xor
inc
or
cld
test
sub
and
pop
sbb
xchg
bound
shrl
sahf
jbe
jne
fwait
scas
jbe
test
fwait
imul
cmpsb
outsl
outsl
sar
sbb
or
cmp
outsb
mov
lock
incb
lret
add
push
mov
xor
and
pop
adc
fisttpll
sbb
pmullw
dec
addr16
jne
addr16
inc
das
pop
std
ror
adc
in
and
xchg
add
inc
ret
lcall
sarb
inc
icebp
sub
inc
dec
cmp
fstpl
mov
push
lds
insl
xor
outsl
xor
add
gs
test
cmc
pop
fsts
xlat
in
cmpsl
icebp
pop
push
je
jle
clc
sbb
lret
cmp
mov
cmpsl
adc
mov
sbb
cmp
xchg
cmp
push
daa
testb
je
adc
push
stc
sahf
mov
xchg
jb
sbb
push
jl
add
mov
inc
mov
cmpsl
adc
sub
incb
sub
sbb
mov
inc
jmp
pop
pop
and
jmp
adc
js
into
xchg
aas
cmp
es
push
cmp
add
mov
fdivrl
mov
push
add
pop
xchg
lret
and
call
cli
cmpsl
inc
cs
fisttpl
test
std
jnp
hlt
and
stos
sub
in
xchg
insb
inc
jno
mov
repz
push
mov
rcll
fldt
jae
shlb
cmp
cli
pop
lods
xor
movsb
into
stc
xchg
jbe
fistpll
push
jl
push
add
pmulhuw
adc
sti
outsb
nop
int
aad
pop
aaa
fs
data16
xor
int
test
cmpsb
fdivrs
mov
sbb
mov
sbb
add
xor
cmc
arpl
add
pop
lcall
xchg
push
cmc
inc
mov
imul
in
enter
sbb
jg
fldcw
out
pop
dec
mov
shll
leave
fisubrs
shl
mov
jge
xchg
mov
orb
hlt
lret
addr16
jecxz
test
movsl
std
bound
shll
xor
push
push
mov
jecxz
lock
aad
and
or
push
pop
lcall
xchg
dec
mov
mov
int
pop
fcoml
outsl
iret
xlat
push
dec
xchg
bound
aad
out
push
xor
xor
data16
pop
xchg
lock
ret
add
sbb
pop
xchg
lock
cltd
leave
popa
loope
jmp
adcl
andb
xchg
dec
popa
test
and
xchg
aam
jne
mov
es
jne
sbb
xchg
xlat
and
push
adc
jns
outsb
sub
sahf
inc
movsl
xchg
jmp
stos
or
xor
inc
test
out
mov
fwait
xor
jecxz
lods
out
pusha
add
sbb
inc
scas
jo
enter
jmp
scas
mov
popa
sub
mov
clc
orb
aad
nop
popa
sub
xchg
nop
or
fwait
pop
adc
cli
roll
jno
mov
mov
mov
mov
out
push
sbb
leave
push
xchg
cmpsb
pop
inc
mov
xchg
repnz
leave
mov
push
ret
subb
push
test
sub
add
pop
dec
adc
mov
sbb
lods
mov
pop
mov
push
mov
insb
cmpsb
mov
orb
jns
mov
out
scas
adc
or
mov
jb
pop
fstl
dec
xor
std
addl
adc
sub
adc
notb
in
enter
push
in
pushf
push
dec
dec
xchg
aam
int3
fisubrs
stc
les
ljmp
sbbb
out
hlt
pop
mov
push
push
cmpb
stc
enter
repz
divb
jmp
les
sbb
leave
sbb
push
rcl
sub
repz
jmp
inc
add
cli
jle
int
scas
adc
ret
loope
aam
or
jecxz
mov
pop
xchg
cmp
in
orl
std
adc
mov
sbb
sbb
jmp
mov
cwtl
sahf
popa
test
cli
mov
mov
lds
cs
test
and
add
adc
mov
les
mov
mov
ss
and
sbb
div
xor
mov
jecxz
insb
ds
enter
imul
jns
sbb
lock
loop
cli
fildll
xchg
imul
popa
sbb
in
adc
shrl
mov
xchg
dec
cmp
xchg
mov
das
jg
xchg
inc
loope
mov
jmp
pop
mov
leave
cmp
in
scas
ja
stos
jmp
js
dec
rorl
mov
data16
scas
sahf
or
inc
ret
sub
inc
in
not
pusha
xor
add
or
sub
xchg
roll
inc
mov
test
cmpsb
repz
movsb
push
cs
add
mov
sbb
aad
repnz
les
jne
mov
inc
inc
sbb
add
mov
imul
jo
sub
icebp
dec
or
adc
mov
push
mov
fcomps
sbb
mov
xor
in
jmp
dec
into
bound
jge
sub
add
adc
mov
lea
in
test
xlat
push
or
testl
aad
sub
jle
inc
les
mov
xor
dec
mov
in
xchg
jle
sbb
jo
pop
jne
ja
ss
pushf
scas
rcr
inc
jp
mov
or
cmp
and
xorl
xor
mov
out
and
fmul
pop
dec
frstor
aas
xor
inc
push
test
add
mov
mov
and
popf
inc
das
mov
xchg
mov
inc
mov
insl
popf
lds
mov
popf
popf
xchg
pop
fmull
outsl
jmp
or
icebp
mov
ret
mov
cli
es
pushf
inc
pop
loop
sbb
push
pop
notl
jecxz
arpl
mov
cmp
sub
jb
out
adc
fwait
cmp
xor
cmp
inc
adcl
insl
stc
push
mov
pop
ret
aam
call
push
cwtl
popf
in
idivl
inc
pusha
and
inc
test
fs
dec
sbb
aad
data16
repz
inc
dec
fs
mov
and
xchg
xchg
rorl
pop
cmpl
out
lods
sti
js
gs
cmp
push
adc
sbb
rcrb
lods
lods
test
xor
insb
rclb
sub
adc
cld
icebp
scas
in
push
inc
enter
scas
fidivl
sbb
rol
gs
and
push
inc
das
jge
adc
inc
mov
fisubl
mov
xchg
rcr
mov
and
js
mov
add
rorl
dec
js
xchg
dec
xor
stos
cwtl
cmp
adc
add
xchg
movsl
mov
inc
xor
xor
mov
cmp
xchg
xor
cld
cmp
xor
sbb
jbe
xchg
dec
jecxz
pop
inc
hlt
loope
inc
adc
inc
mov
xor
test
lods
aaa
icebp
dec
repz
inc
ss
push
scas
jecxz
orl
or
cmp
jae
stos
push
sub
lods
scas
mov
imul
add
or
dec
xor
jno
ret
shrb
mov
dec
cwtl
or
js
mov
std
mov
ficoml
scas
pop
in
shrl
pop
fcmovbe
imul
jae
sub
test
mov
sahf
icebp
sub
aam
pop
addr16
and
int3
into
push
lret
lahf
test
in
pop
clc
inc
lahf
shll
fbld
mov
ror
cld
decb
outsb
test
push
mov
jle
push
lock
in
or
arpl
sti
cmp
das
test
lcall
pushl
mov
adc
stos
pop
popa
jbe
leave
xor
sbb
xor
mov
sub
cmp
add
fst
cmp
dec
pop
sbb
lods
xchg
pushf
adc
or
repnz
adc
mov
push
ja
pop
lods
sub
adc
dec
cmpsb
rcrb
stos
cmc
ljmp
mov
xchg
jb
aad
lea
mov
cmp
cld
xchg
sbb
ficoms
iret
mov
subb
fidivl
push
mov
inc
dec
divb
js
out
sub
stos
sbb
repnz
and
adc
sti
mov
shlb
fldl
dec
pop
in
fbstp
jne
inc
mov
adc
stc
mov
scas
orl
dec
ud0
sub
cmpsl
rorb
popf
mov
mov
mov
inc
jmp
into
dec
inc
or
mov
out
into
jnp
jnp
aam
pop
das
jae
stos
stos
dec
movsb
repnz
lds
sbb
sub
imul
mov
adc
dec
sub
lahf
and
shll
cltd
adc
mov
xor
cmpsb
in
in
and
int3
iret
dec
lea
and
sub
out
popf
pop
cmpb
imulb
ljmp
xor
pop
mov
in
js
fs
rcll
push
add
cltd
ret
jbe
dec
push
es
pushf
add
and
push
adcb
subb
dec
ljmp
lods
dec
add
jo
sbb
enter
xlat
cmp
mov
fdivrp
jae
add
popa
sbb
int
cmp
jecxz
lret
inc
xor
mov
test
stos
pop
adc
fdivrs
cmpsl
cltd
dec
out
popa
loop
arpl
cmpsb
pop
pop
and
jmp
mov
add
ret
nop
les
jbe
sub
negl
sqrtps
dec
loope
ljmp
adc
adc
mov
repnz
xchg
aad
dec
inc
aaa
dec
and
fcompl
loope
sti
jbe
xchg
popa
push
cmp
in
mov
lods
loope
inc
add
mov
fistpll
xor
movsl
into
cmp
mov
mov
test
lods
incb
sbb
jp
mov
sbb
pop
sbbb
dec
stc
xor
mov
mov
push
out
mov
or
inc
cwtd
pop
lret
jmp
cmpsb
lret
adc
je
incl
mov
jne
iret
dec
xor
jmp
pop
cwtl
mov
adc
cmp
jl
cmp
add
cmp
repz
mov
or
mov
xor
popa
and
adc
mov
scas
jnp
sub
lahf
push
cmpsb
cld
lods
push
loop
aad
xchg
sub
mov
dec
cmp
xchg
cmp
loop
sbb
movsb
dec
mov
and
lahf
dec
mov
push
lahf
cwtl
stc
cmp
push
int3
in
rcrb
iret
pop
lret
xchg
xchg
cmp
adc
cmp
out
cltd
aad
pop
mov
inc
mov
inc
adc
mov
push
xchg
call
xor
push
or
stos
mov
cwtl
aad
mov
test
movsl
dec
mov
std
mov
mov
cmc
xchg
ja
pop
das
add
pop
shl
add
cmp
data16
dec
and
insb
dec
sarl
dec
push
rol
aam
lahf
push
adc
dec
and
incl
add
out
dec
cmp
js
ss
shll
shll
lock
cmc
lret
push
loope
daa
ljmp
dec
dec
imul
and
ret
xor
aam
inc
cmp
sub
lcall
mov
jae,pt
loop
inc
adc
mov
or
jne
cmovnp
lret
sarl
pop
repz
lret
dec
dec
addr16
cmp
cli
jmp
rcrb
cmpb
adc
orl
jl
call
xor
int3
or
push
add
fnsave
mov
mov
test
jno
popa
clc
push
push
mov
outsb
sub
in
out
movsb
mov
shll
icebp
clc
cs
repnz
xchg
adc
mov
data16
jne
cmp
xchg
mov
in
sbb
xor
cli
xchg
mov
inc
pop
aaa
nop
xchg
shr
push
xor
and
push
or
cltd
push
insl
and
jle
xchg
flds
or
test
mov
call
insl
xor
addb
repz
scas
in
adc
ret
out
daa
cmpsb
ja
jp
xchg
imul
mov
shrb
lahf
mov
lods
sub
fistl
inc
cli
call
xlat
inc
fidivs
mov
xor
pop
xchg
fildl
cmpsb
jne
fnstenv
xchg
mov
sbb
jno
xchg
sub
push
pop
inc
jbe
jo
jecxz
scas
in
stos
shlb
inc
in
pop
addr16
add
popf
int3
iret
xchg
rcl
sub
ret
fsts
imul
out
test
out
imul
push
and
jg
es
shrb
dec
jmp
mov
test
cmp
add
pop
or
mov
push
addl
jns
inc
in
inc
jbe
push
test
andb
mov
in
sub
cmp
mov
hlt
pop
ss
mov
xchg
inc
scas
lods
ljmp
push
les
lret
add
cmp
cli
or
orb
test
push
mov
sbb
mov
jno
mov
inc
cmp
divl
test
sbb
cmp
adc
enter
sub
xor
dec
add
pop
push
inc
dec
inc
push
repnz
cmp
jns
jae
xchg
sub
leave
pop
imul
fsubl
push
xchg
or
mov
mov
je
xchg
bound
mov
mov
nop
mov
xorl
jb
repnz
dec
cld
push
sti
add
mov
push
sub
pop
pop
fstpl
bound
mov
int3
out
fidivs
cmp
lds
or
add
repnz
xor
push
pop
xor
sbb
dec
imul
bound
enter
pop
add
lods
mov
xchg
sub
sbb
in
inc
rcll
nop
and
xor
std
repnz
mov
xlat
dec
inc
xchg
jo
mov
inc
cmp
and
xor
cltd
xchg
std
jmp
sbb
andl
cmpsb
int3
xchg
adc
aaa
or
jne
fidivrl
xchg
adc
jnp
sbb
pop
scas
jno
push
add
cs
in
fdivp
sub
jne
cmp
sti
rorb
cli
sbb
mov
std
sub
adc
pop
into
inc
dec
mov
adc
ds
jae
test
ret
test
pop
test
imul
mov
pop
adc
lock
pop
sub
or
scas
loope
sub
sub
push
lcall
push
xchg
sti
fstpl
xchg
enter
mov
pop
shll
cmc
aaa
add
test
adc
mov
adc
ss
mul
xchg
fldenv
aad
sub
jl
lret
lock
add
dec
lds
mov
and
loopne
in
push
mov
test
sub
fstps
xlat
lret
sbb
loop
aas
mov
frstor
stc
xchg
xor
imul
xorl
pop
gs
push
pusha
xchg
jge
and
in
popf
outsb
mov
dec
faddl
ljmp
test
cwtl
inc
cmp
mov
imul
pop
int3
test
fucomi
fwait
mov
xor
mov
sub
loop
ja
jnp
dec
cld
sub
jl
pop
jnp
shll
inc
mov
lahf
in
lret
aad
cmp
sub
sub
fcoms
sub
cmp
pusha
aas
mov
outsl
jp
sbb
pop
mov
mov
push
mov
push
add
push
les
call
fsubs
jb
and
divb
fwait
data16
add
mov
push
shlb
lods
rcrl
mov
stc
jae
adcl
jg
jl
fwait
and
icebp
insl
bound
inc
adc
mov
imul
mov
cmp
scas
cli
lret
insl
fwait
loopne
inc
sub
jle
dec
add
arpl
mov
xchg
sti
inc
add
call
xchg
and
lahf
lods
imulb
inc
inc
rsqrtps
push
jp
mov
in
xchg
sbb
dec
sbb
push
jbe
popf
test
xor
int3
in
xchg
lahf
mov
inc
fbld
pop
dec
ret
mov
rcl
fsubrl
mov
mov
push
jp
mov
jl
fldl
inc
jg
pop
or
or
xor
outsl
lods
adc
dec
sub
test
mov
adc
dec
test
inc
sub
xlat
sbb
fdivl
push
mov
mov
push
sub
out
mov
push
mov
dec
rcrb
data16
xor
xchg
frstpm(287
pop
sbb
jge
mov
icebp
xor
mov
mov
es
mov
cld
sub
dec
mov
inc
cli
mov
push
mov
dec
sbbl
in
imull
dec
dec
jg
xor
insb
mov
test
sbb
shrl
push
movsb
cmp
out
jne
fldcw
adc
gs
xchg
mov
mov
stc
inc
lret
lcall
xchg
cli
mov
sbb
cld
in
adc
push
popa
mov
dec
dec
mov
stos
sbb
jmp
push
fs
stc
push
mov
aaa
xor
inc
in
lret
pop
cmp
xor
add
mov
into
outsb
add
clc
jp
push
adc
pop
xchg
jnp
sbb
pop
and
dec
jno
pop
inc
sub
out
fmull
insb
xchg
adc
insl
ret
mov
mov
push
repnz
scas
mov
dec
test
sbb
iret
jp
dec
xchg
or
pop
insl
sub
add
cmp
xor
testl
in
imul
fsubrl
test
outsb
push
test
andl
mov
int3
imul
or
fwait
lret
inc
add
sbb
inc
jmp
xchg
je
jbe
jno
sahf
sbb
adc
sub
add
testb
test
sbb
pop
cs
xor
nop
mov
and
fistps
mov
fs
stos
jbe
cmp
xchg
arpl
pop
lret
and
mov
mov
or
pop
out
push
xchg
fstl
subl
dec
xor
mov
pop
cmp
outsb
loope
jecxz
gs
add
push
punpckhwd
shlb
cs
dec
test
movsb
sbb
ja
jl,pn
es
pusha
xlat
sbb
push
mov
dec
adc
jl
out
push
sub
aam
rcll
mov
popa
xor
lcall
sub
movsb
cmc
sub
test
and
cmp
mov
push
fwait
nop
pop
jge
fistps
mov
mov
fwait
cmpw
mov
mov
xchg
sbb
push
sub
sti
scas
imul
pop
inc
xchg
ficompl
push
dec
sbb
push
cmp
mov
mov
xchg
fbld
cs
inc
mov
enter
or
ja
or
es
pop
int3
inc
push
cmp
cwtl
mov
mov
inc
cs
or
pop
and
lds
lret
int
lcall
clc
cltd
inc
test
jbe
mov
fscale
sub
iret
imul
jnp
cmp
fsubl
adc
cmp
outsl
aas
iret
dec
shl
outsl
adc
add
insl
sbb
cmp
movsl
cmp
jmp
or
imull
pop
inc
shlb
or
and
ror
push
pop
sbb
loop
popf
xchg
arpl
xor
ret
push
ficoml
out
leave
xchg
adc
frstor
or
mov
mov
ss
lods
sbb
push
adc
mov
mov
mov
xor
aam
push
xchg
mov
outsl
jecxz
int3
fldt
lea
jbe
push
pop
stos
repnz
jmp
pop
adc
mov
xor
in
push
outsb
mov
push
xor
jp
in
or
or
dec
outsl
in
stos
aaa
fadds
jb
das
clc
or
fists
adc
dec
aam
xchg
daa
in
orb
insb
decl
jp
add
xchg
cmp
pop
push
mov
and
sti
test
lret
cmp
icebp
cld
mov
retw
arpl
push
push
pop
cwtl
inc
and
mov
push
push
push
mov
xor
sub
and
push
push
mov
or
and
fisubrl
es
cltd
cmp
or
xlat
aad
insl
pop
xchg
imul
jmp
inc
ret
and
out
fmul
out
pop
outsl
stc
add
jno
sub
ret
leave
pushf
pusha
or
push
adc
out
mov
lea
jg
jne
jb
cmpl
mov
les
inc
pushf
pop
adc
arpl
pop
mov
adc
imul
or
sar
cmp
ficomps
xor
test
push
push
in
dec
repz
sar
push
repnz
mov
rcll
mov
mov
sbb
cmp
mov
aam
push
dec
xchg
orl
fcomps
pop
jl
sub
push
inc
jbe
stc
sbb
cmp
ljmp
mov
xchg
cmp
pop
cmpsb
or
cld
jb
push
inc
sub
mov
mov
addr16
jno
scas
add
and
gs
scas
xchg
nop
lahf
stc
fldcw
fwait
repnz
xchg
mov
mov
testl
rclb
add
dec
aam
and
icebp
cmc
or
jnp
sbb
and
fcmovnb
or
out
repz
rcll
xor
in
popa
arpl
inc
mov
sub
xor
mov
ja
mov
pop
add
xchg
cltd
cwtl
xchg
mov
xchg
xchg
pop
cmpsb
sti
in
test
push
stos
and
test
ret
sbb
sbb
mov
mov
dec
jo
js
into
adc
jbe
in
imul
jnp
mov
push
testb
sbb
fistpl
mov
in
jne
mov
xchg
jne
inc
out
xor
dec
mov
js
int3
in
loope
aas
scas
xchg
mov
fisubrs
sub
pushfw
cmc
mov
adc
mov
lcall
rolb
dec
mov
mov
cmpsl
pop
sbb
in
lock
outsl
bnd
pop
dec
add
push
adc
adc
fstpl
cmc
fiadds
adc
lret
pop
mov
sub
mov
mov
fstp
mov
repz
imul
push
mov
aaa
ja
jne
sub
clc
nop
stos
sub
mov
stos
jge
bound
push
test
jb
cli
jmp
addr16
add
inc
mov
add
lds
pop
or
fistl
xor
cli
inc
add
faddl
inc
rol
fs
divl
pop
xor
push
and
and
divb
cmp
mov
and
dec
pop
scas
les
adc
xchg
xor
in
loop
pop
push
push
loop
stos
xchg
cs
out
adc
mov
stos
adc
and
mov
pusha
lds
loopne
aaa
insl
scas
test
cmp
cs
cmp
pusha
mov
sbb
pop
pop
cmp
sub
cmp
int3
ret
jno
js
adc
jb
xchg
mov
jl
inc
mov
jg
ljmp
mov
mov
mov
das
mov
icebp
test
mov
rcll
mov
mov
into
inc
jnp
mov
clc
aas
mov
addr16
or
inc
xchg
imul
sarl
and
dec
cmp
mov
mov
decb
and
ret
fimuls
mov
nop
xchg
ffree
scas
sub
insb
push
std
outsb
and
cmp
mov
jnp
ret
xchg
jmp
inc
not
roll
int3
cmp
ljmp
sbb
ret
lods
mov
mov
scas
fcompl
stc
ds
cmp
lods
and
cmp
shll
mov
sbb
sahf
popa
movsb
jmp
lods
insl
cmpsl
push
ja
mov
sbbb
dec
stos
fildl
mov
stos
pop
movsb
pop
ss
repz
jmp
or
push
rcrl
scas
dec
lret
push
adc
decb
xchg
pop
add
sub
lcall
push
push
push
mov
popa
outsl
es
push
fiadds
dec
icebp
dec
in
pop
lret
add
in
cmp
pop
out
and
push
jo
sbb
jbe
in
stos
std
aas
stos
mov
xlat
fnstenv
clc
arpl
cmp
aaa
mov
scas
jae
cli
xor
lock
cmp
cmp
push
pop
dec
jge
out
mov
jno
call
lock
lods
add
cmpsl
ds
shlb
lahf
iret
fadd
add
rorb
adc
aas
leave
pop
dec
xor
cmpsl
jg
push
pop
flds
sub
scas
mov
addr16
scas
sarl
push
std
loopne
call
addl
nop
sbb
xchg
divb
out
insb
movb
pushf
test
push
sbb
pop
notb
fistl
jl
push
jecxz
mov
lods
and
mov
and
push
aad
sbb
call
jle
jb
and
dec
dec
fldt
and
mov
fs
jns
xchg
and
cmc
inc
sahf
out
aaa
mov
dec
das
inc
flds
push
adc
fdivrl
pop
call
cmp
and
mov
mov
dec
cli
push
adc
cmc
cmpsb
stos
and
mov
out
xchg
adc
pushf
inc
lds
inc
gs
jecxz
mov
pop
push
std
sbb
frstpm(287
or
loop
and
shrl
daa
shr
sub
cmp
ret
nop
shll
orl
push
outsl
addr16
sub
scas
xchg
push
mov
cli
pop
adc
stos
sti
sub
push
jbe
ret
adc
mov
aaa
adc
sti
xchg
inc
ret
int
fdivr
or
je
and
imul
cmpb
dec
pop
xor
mov
and
push
inc
mov
pop
inc
vmovaps
repnz
cmp
cmp
ficoml
push
sub
mov
xor
xchg
push
ss
and
test
rorb
dec
pushf
push
stos
mov
pop
leave
sarl
mov
pushf
popf
mov
popf
mov
sarl
push
xchg
inc
dec
mov
sarb
cltd
in
pushl
out
rcll
xchg
sub
push
sub
jecxz
xchg
mov
popf
fisttps
inc
cmp
pop
dec
mov
and
mov
scas
cmp
xor
dec
mov
add
push
and
xor
test
push
sbb
fmull
sbb
mov
mov
sbb
sbb
daa
push
mov
pushf
inc
cmc
xchg
lret
test
fistl
sub
fnstenv
mov
lcall
sahf
sbb
push
pause
cmpsl
adc
imul
les
lcallw
xor
outsl
cmp
xchg
jb
das
xor
aam
rclb
testb
lods
loop
mov
in
imul
xchg
orb
mov
or
mov
or
xchg
mov
inc
adc
lcall
fdiv
aam
aas
add
dec
pop
pop
stc
test
mov
fwait
xorb
cmpsb
cmpsl
cmp
xchg
cmp
mov
int
rorb
xchg
add
jo
lea
fcmove
push
enter
mov
jp
inc
xchg
addr16
clc
subb
mov
mov
sbb
and
stc
xlat
stos
test
inc
adc
cmpsl
je
addr16
xchg
fdivr
and
cwtl
xchg
push
inc
dec
jle
mov
outsl
test
and
dec
inc
or
insb
or
mov
pop
mov
in
mov
xor
inc
jmp
mov
push
add
or
and
xor
sti
cs
popf
leave
movsb
repz
arpl
add
call
pop
xor
jb
outsl
repz
stos
sub
adc
mov
stos
xchg
xlat
sub
hlt
test
rcr
pop
inc
rorb
dec
hlt
aad
stos
mov
orl
int
fisubrs
fnstsw
ror
mov
fadds
aas
repnz
mov
adc
mov
mov
lcall
stos
pop
sub
and
cltd
sbb
mov
mov
movsl
mov
mov
cwtl
cmp
xchg
cmp
fwait
and
jbe
and
sti
dec
aas
mov
pop
mov
nop
and
dec
shll
add
lret
jne
sbb
mov
and
or
out
popf
add
add
enter
sbb
pop
cmp
mov
repnz
inc
addb
andb
lea
dec
test
sbb
outsl
pop
and
ljmp
dec
and
loop
int
jg
cmp
mov
pop
inc
add
xchg
flds
inc
movsl
inc
sbb
mov
pop
add
and
and
push
divl
jbe
pop
and
clc
xlat
sbb
leave
mov
jno
jbe
jle
in
inc
out
sub
pop
mov
insb
mov
pop
pusha
cltd
ss
int
sbb
or
addr16
ja
cmp
adc
inc
mov
rcrl
jnp,pn
je
sbb
jecxz
pop
sbb
andb
out
gs
addl
mov
in
pop
sub
out
cmp
add
inc
pop
pop
pop
lods
xchg
jmp
pop
add
cmp
pop
imul
imulb
jae
xor
iret
jnp
fisttpl
cmp
sbb
scas
ljmp
out
les
inc
sub
push
ljmp
or
push
sub
xchg
xchg
lret
ljmp
imul
and
loope
jle
dec
icebp
mov
jnp
mov
clc
sbb
decb
jmp
sti
adc
xchg
test
call
in
sub
adc
shlb
pop
hlt
daa
adc
jle
rol
mov
rorb
in
inc
leave
shlb
and
shlb
adc
xchg
sub
sbb
sbb
xlat
scas
add
ja
je
lret
clc
dec
outsb
clc
aas
inc
inc
fwait
and
lcall
push
xchg
leave
xchg
pop
sbb
in
add
lds
insl
fdiv
sbb
js
inc
cmp
stc
stos
mov
ss
insb
adc
cmp
mov
adc
sbb
lret
popf
sub
jecxz
adc
stos
stos
stc
pop
negl
addr16
ljmp
addr16
cltd
adc
mov
adc
sbb
mov
pop
pop
dec
js
cmp
out
push
in
xchg
fs
xchg
call
sbb
mov
mov
mov
inc
push
out
insb
jae
pop
jne
test
pop
je
or
dec
daa
ja
push
sbb
les
and
push
cltd
mov
or
mov
dec
cmpsb
insl
sub
mov
lret
mov
mov
mov
aam
mov
scas
push
cmp
pop
out
rorl
pusha
divl
sbb
push
pop
jmp
add
adc
out
in
and
cmpsl
add
movsb
pop
cmpsl
push
lods
ret
mov
lods
dec
xlat
test
xchg
sti
cmp
cmp
clc
out
inc
or
mov
inc
std
and
mov
dec
rcrb
ljmp
sbb
xchg
jl
fs
sbb
cmp
or
ret
lods
xor
xor
fwait
aam
clc
xchg
mov
cmpsl
pop
push
scas
scas
or
hlt
int
xchg
jno
or
cwtl
inc
pop
xchg
hlt
mov
movsl
jnp
sub
mov
rcl
mov
rcrb
fsubs
stos
cmp
lret
cmpsl
pop
push
out
out
dec
pop
pushf
xchg
jae
lods
jns
pop
daa
dec
adcb
clc
lret
jbe,pt
mov
mov
cmp
mov
sub
xchg
adc
test
jo
dec
fxam
lahf
fists
ret
fldenv
pop
scas
xchg
dec
sti
push
rorb
mov
lods
sub
mov
data16
xor
roll
jae
loop
test
dec
adc
sbb
and
mov
inc
xor
or
sub
addr16
xchg
or
push
mov
mov
sahf
and
imul
mov
imul
and
std
sub
clc
xor
sbb
push
sbb
popf
jo
mov
out
xchg
shl
jno
test
cwtl
ret
xchg
cmpsb
adc
pop
pop
test
jne
sti
scas
adc
lahf
cmpsb
or
dec
shll
scas
jl
int
cld
imulb
mov
inc
std
jmp
jns
push
cmpl
jle
shl
lret
or
sbb
rcll
les
mov
in
lret
fwait
addb
add
sub
imul
loope
dec
adc
lret
jne
mov
out
loop
xor
jg
pop
das
xor
scas
mov
imul
shl
cwtl
and
pop
cmpsl
add
pop
mov
aas
aas
push
jecxz
mov
aad
pop
ret
push
std
inc
cld
ds
dec
cmp
dec
cs
xchg
icebp
fsub
cmp
ret
cmp
sbb
lret
cmp
pop
sahf
and
push
add
or
call
jmp
sub
jbe
push
shrl
and
dec
xchg
inc
jle
add
xchg
lds
lret
nop
pop
stc
and
and
adc
push
fprem
add
stos
cmc
ljmp
sbb
pop
in
xor
mov
add
push
enter
cmp
mov
cld
xor
adc
add
and
in
mov
fsubp
loope
fnstcw
imul
jns
jo
inc
and
mov
leave
stos
mov
ss
in
movsb
clc
clc
jo
mov
lret
outsb
fcmovbe
addb
pop
loopne
stos
js
dec
push
push
xchg
jns
inc
mov
imul
add
and
popa
andb
mov
and
lahf
cmpsl
mov
sbb
lcall
mov
inc
jb
mov
sub
scas
dec
andl
pop
jecxz
rcll
int3
mov
cli
xor
jl
out
jmp
mov
in
rclb
push
jge
pop
ret
jo
add
or
xchg
out
sahf
inc
lret
shrl
iret
adc
das
mov
fidivrs
cs
inc
jecxz
nop
or
mov
cwtl
cmp
fnstcw
xchg
mov
jbe
jno
mov
shlb
jge
mov
xchg
pop
ret
clc
sbb
clc
int3
xor
cmp
int3
add
and
cmp
std
fnstcw
adc
adc
fsubl
mov
popa
or
lea
arpl
mov
data16
pop
ret
cmp
cmp
xorb
fcom
movsb
out
leave
mov
je
sub
xor
fwait
sti
mov
mov
mov
add
inc
call
adc
push
test
cld
mov
mov
loope
mov
jno
cmp
repz
and
movsb
lea
pop
mov
and
cli
int
cmp
mov
std
stc
or
push
mov
fsubrs
je
sub
push
ljmp
inc
sbb
repz
out
aam
inc
ret
and
push
dec
push
enter
push
dec
test
scas
jbe
cmp
inc
jne
lret
filds
jnp
push
mov
ss
inc
sbb
or
div
pop
xchg
ja
mov
lods
xor
aas
out
inc
sub
int3
or
in
adc
fsubs
dec
xchg
mov
or
cs
cmp
xchg
lods
and
jl
pop
add
xchg
ret
sbb
test
push
divb
fldcw
push
into
or
sub
pop
dec
lock
xchg
dec
sbb
jl
mov
fadds
jo
mov
lret
xlat
jae
ljmp
add
icebp
fadds
es
add
push
add
cs
out
sbbl
aad
push
nop
mov
in
and
dec
inc
ds
stos
push
imul
jle
lret
xor
jb
inc
out
pop
std
and
mov
xor
iret
inc
xor
fs
fdivrp
movsl
setno
das
fwait
shll
xchg
or
xchg
in
out
inc
mov
mov
mov
test
adc
inc
stos
pop
and
dec
mov
sar
cmc
mov
daa
test
jmp
xchg
push
xchg
test
int3
push
jae
xor
lret
addr16
push
lods
out
lahf
int
inc
iret
pop
out
add
loope
pop
pop
mov
add
test
cld
sbb
insl
insb
xchg
gs
cmp
inc
movb
lcall
push
gs
inc
insl
inc
out
fiaddl
cmpsl
iret
insb
es
aaa
dec
push
int3
mov
pop
int
enter
fsubrs
pop
push
adc
and
xor
sbb
leave
clc
push
mov
jo
cs
sti
sbb
test
and
enter
mov
sub
pop
outsb
dec
into
add
push
jmp
leave
push
sbb
xchg
std
rcr
lret
mov
mov
fcmovbe
jnp
mov
inc
inc
lock
lcall
xor
popl
mov
adc
nop
imulb
out
stc
mov
test
xor
adc
in
fwait
aas
mov
nopl
sbb
and
mov
push
fistl
add
add
push
loopne
out
dec
cld
pop
jp
std
mov
mov
sti
pusha
or
dec
cmp
xchg
mov
or
dec
inc
fdiv
cmp
inc
jge
int3
sahf
adc
les
insb
in
push
rcl
es
mov
push
fs
sub
and
clc
stos
sbb
cwtl
ret
jne
in
jmp
scas
addr16
les
cltd
xchg
scas
cmp
mov
sub
add
add
je
inc
sbb
fdivs
dec
jmp
outsl
fisubrl
adc
mov
lods
push
insb
sti
xlat
fstpt
imul
outsl
psubq
data16
or
jecxz
ja
jae
pop
test
inc
or
mov
pushf
ds
jle
out
ljmp
pop
cltd
pop
popf
mov
pop
xor
imul
setae
inc
test
sub
jno
push
cmp
mov
pop
lock
icebp
movsl
iret
mov
sub
sub
push
notl
enter
cmpsl
ret
outsb
jno
stos
adc
mov
stc
and
jmp
push
int3
add
cmc
xchg
out
nop
leave
popl
out
xchg
fdivp
rcll
sbb
push
rcr
xchg
pushf
fidivs
lea
adc
out
push
and
push
lock
or
ds
jno
mov
adc
xor
mov
pusha
sti
jge
xchg
adc
aad
mov
pop
lret
shr
xor
out
cmp
mov
add
int3
shrb
add
out
or
in
mov
push
decl
sub
mov
push
lods
and
mov
addb
filds
loopne
sub
push
sbb
fidivrs
shrl
xchg
aas
sbbb
ljmp
mov
pusha
subl
pop
int
add
jno
push
shll
das
out
stos
stc
popl
xchg
pop
or
pop
dec
mov
adcl
stos
push
mov
pop
add
pop
or
xor
in
cmc
jp
xor
inc
and
ret
mov
fisttpll
pushf
push
into
mov
es
sbb
xchg
push
fidivl
sub
fucomp
js
or
fidivrl
pop
xchg
inc
testb
sub
sbb
or
and
mov
mov
fldl
or
sub
faddl
std
inc
jns
rcrb
rcrb
inc
arpl
push
and
mov
dec
xchg
ror
rol
mov
adc
lds
ret
pop
mov
jle
pop
pop
out
stos
cmp
fwait
mov
inc
fstpl
mov
dec
mov
inc
loopne
xchg
inc
test
or
addr16
fwait
xor
xor
pop
in
fs
fcoms
pushf
orl
inc
or
fdivs
dec
sbb
mov
imul
jle
xchg
xchg
adc
test
iret
fcompl
das
cmp
in
ja
orb
fwait
cmpl
pushf
out
jmp
add
iret
std
jecxz
outsl
xchg
rolb
dec
dec
sub
aaa
repnz
inc
push
inc
mov
adc
pop
xchg
sbb
filds
jp
push
lock
or
xchg
mov
shlb
pop
dec
pop
js
lds
loop
adc
sahf
dec
not
bound
repz
sub
pop
pushf
dec
mov
jge
ret
daa
mov
add
xchg
dec
fdivl
lods
mov
mov
mov
add
fcomps
mov
add
xor
pusha
outsl
mov
adc
dec
test
xlat
lret
pop
push
cli
in
shrl
inc
and
fadd
push
sbb
sbb
sub
pop
adc
addr16
mov
xchg
test
xchg
adc
mov
ja
cmp
and
ret
mov
sub
arpl
push
jl
scas
insb
popa
loop
lds
pop
rcr
nop
int
scas
call
mov
inc
aam
mov
nop
sub
in
pop
cld
inc
sahf
sarl
stos
out
cwtl
mov
callw
mov
setnp
nop
lods
sub
lds
xchg
mov
andb
pop
add
test
cld
cmc
lods
js
jge
push
mov
cmp
jae
and
lea
mov
call
mov
sbb
shlb
and
jae
dec
out
sbb
cmp
bound
and
cltd
lea
fbld
mov
mov
fiaddl
fwait
mov
pop
mov
jle
movsb
mov
fsubrl
mov
xchg
repz
scas
and
cwtl
stos
cmp
je
pop
testb
dec
xor
je
xchg
xchg
ljmp
xchg
xchg
mov
test
sti
mov
inc
in
sbb
sub
inc
jge
out
add
ret
cltd
mov
and
scas
jo
or
adcb
push
or
jb
andl
stos
add
enter
sub
sub
imul
dec
mov
loop
xor
or
inc
dec
lea
out
lods
fmuls
pop
xor
je
adc
scas
or
dec
pop
roll
sub
adc
and
lods
icebp
test
add
mov
lods
sbb
xchg
adc
std
cmp
mov
mov
xchg
pop
xchg
ret
xchg
pushf
aad
cmp
jo
pop
jge
outsb
mov
sbb
jp
out
push
sub
jmp
adc
lahf
push
insl
xor
push
mov
or
cwtl
push
js
rol
cmpsb
pop
dec
hlt
xchg
jbe
arpl
pop
test
iret
mov
adc
and
int3
movsl
and
aam
dec
aad
inc
sub
daa
jecxz
xlat
sbb
mov
into
and
popf
and
pop
dec
je
sbb
push
gs
rcll
lea
mov
in
sub
cmpsb
jo
pop
ret
aam
xlat
aas
sbb
ljmp
insb
cmpsl
es
pushf
and
fsubl
fistl
mov
mov
mov
and
psubsw
jle
fwait
push
mov
fldl
cmp
xor
mov
adc
cmc
iret
notl
andl
pop
repz
mov
and
into
jb
imul
push
adc
dec
xchg
jp
dec
jb
mov
dec
mov
and
jnp
pop
aas
pop
xchg
insb
gs
push
das
cmc
sub
cwtl
sub
subl
xor
out
movl
mov
sub
sahf
or
push
call
les
adc
mov
mov
sub
xlat
push
movb
or
hlt
inc
xchg
dec
add
enter
dec
rcl
stos
sub
arpl
push
mulb
loop
dec
cmp
push
push
cmp
xchg
mov
sbb
lods
sub
test
cmpsb
loopne
in
loopne
aad
mov
xchg
loope
cld
int
push
test
xor
push
sbb
shrl
and
pop
push
xchg
and
das
adc
xchg
loop
sbb
jae
mov
cmpsb
adc
jmp
xor
xlat
jne
push
nop
or
dec
push
mov
jno
dec
mov
push
jne
jne
mov
movsb
cmc
in
int
sbb
push
outsb
cmp
out
mov
inc
xor
imul
cld
repz
loope
jle
fstl
cmc
adc
call
jg
cmpl
rolb
incb
jo
out
test
and
in
repnz
mov
frstor
pop
mov
jmp
mov
push
dec
push
movsb
add
icebp
divl
iret
into
mov
push
push
dec
cltd
inc
inc
lahf
lret
cwtl
fs
sarb
fistps
pslld
and
mov
cmp
mov
pop
leave
push
xorb
aam
std
xor
dec
dec
cmp
test
dec
sbb
sub
lea
add
add
sbbb
push
ss
xor
cmpsl
or
xchg
call
xchg
fwait
inc
sub
lret
adc
inc
jae
sub
sarl
add
xor
add
cmp
sti
ljmp
loope
popf
and
xorl
ror
cmpsb
dec
sarl
aam
es
and
clc
and
das
out
fcmovnu
cmp
xchg
xor
mov
scas
and
jo
outsl
xchg
xchg
mov
lea
icebp
addl
sbb
fwait
pop
and
inc
mov
add
jge
mov
jl
andb
push
pop
jmp
aas
sub
xchg
jns
push
in
jnp
inc
fcmovne
inc
cld
int3
movsb
jg
out
addl
xlat
fcomps
cmp
and
xchg
jae
stc
jmp
mov
mov
lahf
out
add
mov
inc
cmp
jo
sub
ljmp
arpl
inc
cmp
pop
add
push
cs
sbbb
dec
lret
add
dec
push
ffree
mov
cmp
in
jnp
xor
scas
dec
mov
cmp
fisttps
insl
jne
inc
pop
out
ds
mov
sbb
mov
cmpsb
mov
rcrb
ja
jno
mov
dec
outsl
cmp
push
out
sub
mov
sbb
idivb
dec
lock
cli
mov
je
aaa
cs
xor
cs
push
dec
or
scas
add
mov
inc
sbb
inc
repz
sub
xchg
lret
clc
aad
cmp
jnp
int3
cmp
or
hlt
out
stc
jge
rcrb
dec
push
xorb
mov
inc
xchg
popa
mov
adc
xor
add
cmpsl
inc
xlat
jecxz
stc
and
mov
fildl
mov
adc
pop
dec
push
dec
pop
lock
insl
sub
lret
xor
dec
movsl
fnstcw
je
nop
push
inc
loope
leave
inc
ret
jne
andl
je
cmpsl
arpl
and
jp
sbb
cli
movsl
and
jle
aas
mov
addr16
cltd
sub
scas
cmpb
sti
out
add
xlat
outsl
fwait
xchg
mov
loopne
loopne
mov
lret
cli
call
dec
arpl
sub
ficoms
dec
jp
adc
xchg
dec
sbb
push
sbbb
pop
inc
pop
fidivrs
loopne
cmp
hlt
jb
fucom
rolb
outsl
in
bound
out
jns
and
jge
xchg
sbb
xchg
jl
sbb
arpl
lea
sub
pop
popf
and
ds
xor
jmp
scas
pop
insb
ljmp
arpl
fmul
add
hlt
push
or
repnz
push
push
iret
out
add
xchg
lods
cmp
jl
pop
rolb
sub
insb
pop
leave
test
incb
cmc
shrb
fdiv
int3
sbb
shrl
add
mov
add
inc
pop
xchg
jo
push
xlat
imul
sbb
or
movsb
jno
xor
std
decb
cmpsb
cmp
rol
add
fs
imul
daa
lea
xchg
mov
loop
mov
inc
stc
xor
inc
in
cli
mov
dec
testl
mov
pop
in
jmp
subb
xchg
push
imul
in
or
adc
lock
sub
faddl
rclb
jmp
jmp
aad
cmp
cmp
pop
pop
sub
cmc
add
stc
test
mov
mov
scas
orl
adc
cmp
mov
mov
xor
xor
xchg
inc
or
pop
iret
stc
xor
mov
xor
insl
pop
push
repnz
stc
ret
jno
out
xchg
inc
mov
movsb
push
push
xchg
xlat
mov
aad
cmp
mov
pop
into
mov
or
outsb
scas
pop
jp
cmp
shll
xchg
inc
fisubl
push
pop
add
adc
jnp
daa
icebp
inc
push
mov
inc
xorl
in
popa
adcb
mov
add
ret
fnsave
test
dec
or
mov
dec
mov
inc
andl
pop
cmpsb
adc
notb
adc
or
fldt
sbb
in
cmp
inc
outsb
pop
insb
imul
ret
sar
fwait
jae
pop
sub
out
arpl
mov
ret
bound
movsb
cmp
filds
push
cs
inc
mov
in
add
dec
pop
and
xchg
movl
sub
cmc
jne
call
jno
addr16
mov
movswl
fistpll
in
lods
arpl
scas
pop
fists
fdiv
inc
aad
cwtl
cmc
cltd
outsb
dec
mul
ljmp
adc
xor
sbb
rcll
cli
xchg
nop
sbb
mov
out
lea
nop
push
loopne
mov
inc
mov
push
outsb
sbb
xor
xor
pop
aam
push
xor
cmp
jl
jbe
incl
or
jb
pushl
js
rorb
mov
mov
ret
stos
and
xchg
mov
mov
out
xor
scas
sarl
mov
mov
pop
iret
sahf
and
mov
lock
xchg
cmp
mov
loop
cld
int3
xchg
mov
mov
sbb
push
mov
push
ja
cmpsl
icebp
adc
pop
mov
iret
and
lods
jp
fildll
inc
cmc
loop
mov
loope
push
xchg
lods
inc
repz
lock
push
or
lret
fidivs
mov
add
push
mov
jecxz
insb
stc
add
test
repz
lahf
xor
sbb
je
mov
xor
jecxz
dec
shlb
mov
mov
mov
shlb
mov
in
cmpsb
les
test
push
push
pop
mov
or
jno
mov
ljmp
cwtl
in
js
mov
mov
jae
sub
mov
fistl
push
fwait
inc
ret
call
mov
stos
mov
or
int3
popa
fadd
mov
inc
fs
add
ret
push
test
and
add
bound
mov
xchg
adc
jo
pop
or
jmp
pop
fsub
jno
dec
aam
fdivrs
mov
cltd
sbb
sub
pushf
dec
lea
mov
sub
jecxz
xchg
fimuls
mov
stos
jp
adc
pop
and
shrl
fisttps
mov
sub
push
mov
into
dec
clc
scas
icebp
sub
jb
fists
pop
test
jmp
imul
pop
aam
mov
xchg
mov
enter
or
and
sahf
fistpl
sub
jo
xchg
icebp
jbe
stc
mov
fistl
dec
pushf
lds
lcall
shlb
jb
ret
fisubl
dec
jle
xchg
nop
adc
frstor
lcall
jnp
sub
sub
jne
das
jp
mov
jo
or
mov
push
or
stos
fcmovnb
clc
mov
jbe
push
in
repnz
daa
ja
mov
inc
xchg
sub
dec
int3
dec
mov
and
pop
outsl
push
xchg
pop
dec
in
cmp
enter
in
lret
jo
arpl
inc
insb
jge
mov
push
lods
daa
jecxz
ljmp
sub
stc
or
test
xchg
rcll
mov
or
rcrl
sahf
in
shll
iret
cmpsl
int3
mov
inc
lea
inc
fdivrs
out
in
dec
jbe
cmpsl
fimuls
lock
sub
xor
aaa
mov
sub
ret
in
gs
mov
sub
and
dec
inc
jno
push
add
cmpsb
cltd
jmp
dec
fcoms
xchg
int
xlat
rolb
imul
mov
xchg
popf
or
mov
push
iret
mov
and
sbb
xchg
jmp
int3
add
int
fnstsw
jge
jecxz
dec
jmp
or
hlt
mov
stc
out
sub
out
mov
mov
xor
mov
push
orl
jns
in
lret
mov
lcall
icebp
cmc
mov
mov
or
aam
push
or
push
xchg
inc
and
inc
cmp
adcb
mov
mov
cmc
int3
sahf
sub
nop
push
mov
addr16
sbb
pushl
mov
test
push
test
shlb
cli
dec
mov
les
fs
popl
push
xchg
int
jl
cmp
xor
pop
jecxz
jmp
cmp
or
inc
xorl
das
mov
into
dec
aas
int
les
push
adc
mov
mov
cmp
jns
push
aas
ja
add
fsubp
push
out
pop
lcall
pushf
std
push
loope
enter
adc
fsubs
enter
arpl
inc
cmpsl
out
fsubrl
fscale
mov
scas
ret
into
enter
sbb
cs
or
jns
jno
mov
jp
stc
push
xchg
xchg
shl
pop
sbb
pop
inc
imul
movsb
and
sahf
xor
test
xchg
lock
addr16
inc
in
sbb
jo
ret
inc
push
cmpsb
xchg
mov
jb
std
sbb
jno
popa
push
mov
lds
mov
sub
jp
or
sti
adc
cmpsl
sahf
lahf
out
xchg
cld
popa
jl
and
stos
sti
loop
in
push
or
jne
movsb
lods
jnp
outsb
insb
or
lcall
sub
dec
push
jb
ret
iret
negb
push
mov
xor
push
push
popf
roll
sub
adc
push
pop
pop
mov
push
test
xor
mov
and
int
jns
push
je
leave
mov
lods
mov
lcall
aad
mov
arpl
es
icebp
inc
and
hlt
dec
arpl
or
adc
push
cwtl
inc
sub
sbb
or
int
jne
out
leave
sbb
aas
popa
hlt
sbb
mov
dec
inc
lods
popf
sbb
push
das
mov
add
repnz
and
int3
repz
jnp
aam
icebp
aad
stos
repnz
gs
jmp
mov
push
outsb
mov
cmpsl
xchg
pop
jg
jmp
not
lods
and
test
or
dec
divl
fs
fbstp
lock
and
adc
add
lcall
in
jecxz
fmul
or
mov
or
sub
sub
rcl
cltd
sub
cmp
push
pop
mov
or
insl
cmpsb
adc
fwait
lock
mov
insl
rcr
fnstsw
push
dec
in
jl
ficomps
jns
std
dec
insl
nop
or
xlat
ret
dec
pop
xchg
xchg
xor
gs
iret
repnz
jb
sub
push
loope
andb
sahf
push
sub
pop
inc
jmp
cmp
adc
pop
mov
jno
repz
push
aaa
iret
les
jae
pop
push
pusha
sarb
inc
or
xchg
mov
popa
jb
dec
enter
outsl
jp
test
mov
idivl
sub
subb
adc
in
push
leave
inc
cmpsb
pop
adc
out
ljmp
pop
adc
fnstenv
or
test
les
fldcw
mov
in
xor
mov
repz
pop
cmc
mov
dec
ja
mov
pop
inc
cmp
pop
shll
ret
out
dec
or
enter
dec
push
clc
or
mov
lcall
xchg
int
and
ret
fisttps
inc
or
test
and
sbb
adc
add
mov
lcall
or
mov
imul
mov
sub
imul
loope
or
inc
mov
and
xor
movsl
sti
sbb
mov
xchg
dec
popf
mov
arpl
shr
xor
ja
insl
xlat
jo
add
sub
cwtl
mov
inc
and
lcall
addr16
and
adc
repz
xlat
jbe
nop
andb
cld
lcall
add
dec
mov
dec
cmp
dec
test
popf
dec
test
inc
jae
nop
fstpt
pop
jmp
sub
mov
faddl
mov
push
xchg
dec
and
pop
fnstsw
mov
pushf
aas
sub
push
jle
mov
lret
add
mov
fidivrl
cs
in
inc
adc
testb
fisttpll
pop
pop
mov
stc
popa
cwtl
cmpsl
mov
or
lods
stos
jb
fmul
bound
mov
xor
xchg
int
dec
lods
push
adc
xchg
sub
jbe
mov
cmpl
repz
push
out
sbb
jp
adc
stos
outsl
jl
cmp
mov
and
cmc
and
les
jecxz
enter
pusha
fidivs
hlt
sahf
icebp
pop
mov
mov
xchg
lcall
jae
sub
jle
mov
sbb
jecxz
test
push
test
rcr
or
mov
shl
and
sbbl
daa
push
dec
push
mov
outsl
jg
or
out
aam
jae
sub
fnstcw
pop
mov
test
repnz
cltd
fistps
inc
jecxz
movsb
repnz
jle
subb
xor
decl
ds
mov
jg
jecxz
add
cld
out
test
dec
imul
cmp
add
adc
jl
es
cmp
stc
sbb
xchg
push
inc
int
fwait
mov
fcmovbe
insl
mov
in
popf
dec
mov
loop
mov
arpl
mov
notl
dec
xlat
cs
loopne
outsl
insb
xchg
test
pop
add
mov
jae
les
fcoms
jg
jne
sub
push
xchg
add
mov
nop
roll
inc
push
cmpsb
test
cld
lea
fcomip
xor
mov
lods
jnp
sub
das
mov
sub
repz
xchg
and
adc
cmp
cmp
or
hlt
pop
jae
lea
or
dec
pop
in
js
ss
dec
and
sub
pop
dec
fisttpll
cwtl
sbb
jnp
fwait
jae
and
setbe
je
mov
fnstcw
or
adc
addr16
aaa
aaa
pop
mov
mov
daa
pop
fists
push
cmp
ljmp
adc
xchg
pushf
xor
dec
cmp
out
lret
sahf
sub
or
iret
push
loop
int
lcall
inc
je
push
into
into
repz
jge
pop
data16
test
pop
leave
push
lods
push
and
xor
sub
cmp
out
jb
pushf
mov
in
jmp
cmp
sbb
jecxz
cltd
iret
xchg
xchg
and
lret
je
loopne
ja
cld
or
in
dec
das
jle
dec
mov
xchg
inc
mov
bound
fisubl
or
call
push
sub
xor
mov
lret
cs
xorl
mov
cmpsb
cwtl
roll
sbb
aas
xchg
mov
shll
sub
iret
lock
dec
mov
lea
leave
frstor
cmp
pushl
push
push
pop
jle
or
cmpsb
and
xchg
or
jne
into
and
xchg
ds
adc
das
xchg
cmp
push
pop
or
addb
jp
dec
sub
mov
sbb
push
mov
sarb
sbb
into
sbb
in
mov
fsubrl
jle
inc
mov
call
dec
jecxz
lods
adc
dec
in
pop
in
mov
xor
sbb
xchg
inc
pop
push
imul
dec
cmpsb
jecxz
hlt
sub
pop
or
or
mov
xor
negl
outsl
sbb
and
jle
ror
rcr
dec
pop
test
sub
mov
mov
stos
adc
loope
cli
jns
mov
add
loop
push
cmp
push
and
test
pop
dec
jae
xchg
iret
pusha
xchg
pop
xchg
jp
dec
or
adc
pop
adc
jb
cmp
shll
push
inc
dec
imul
mov
xchg
push
test
jg
mov
pushl
and
xlat
or
shll
scas
adc
cli
dec
or
cmpsl
add
jmp
dec
adc
fldt
jge
pop
inc
jno
mov
push
or
aas
cmp
imul
insl
dec
lods
or
mov
mov
repz
mov
sti
test
mov
out
pop
outsb
push
scas
leave
mov
pop
cld
iret
cs
in
inc
stos
hlt
cmpsl
mov
sbb
cmpsl
xchg
subl
inc
dec
or
adc
mov
ja
dec
push
scas
xchg
sub
imul
test
movsl
adc
shlb
pop
jle
fsubrl
pop
add
xchg
inc
sub
gs
cmp
js
out
hlt
xor
cwtl
jnp
mov
mov
fldenv
push
and
push
cltd
rclb
out
in
into
daa
push
loope
adc
xchg
mov
xchg
out
sbb
sbb
loopne
popl
jae
mov
das
jo
es
es
xchg
sub
push
lds
dec
add
sbb
adc
int
xchg
push
sub
or
cli
out
push
loop
aaa
mov
sarl
lds
mov
popf
cmp
mov
orl
inc
aad
stos
scas
xor
orb
mov
stos
mov
mov
orl
xor
adc
mov
divl
imull
into
mov
dec
data16
push
fisubrl
pop
push
adc
pusha
outsl
xchg
push
push
pop
mov
inc
mov
mov
xor
push
push
bound
mov
fdivl
add
push
xor
cmp
xchg
movsl
jge
loope
into
push
ffreep
fsts
addl
movsb
ja
ljmp
dec
dec
jle
test
popf
lea
ljmp
lret
gs
sub
adc
aad
mov
icebp
cmp
mov
or
add
roll
pop
call
pusha
inc
pop
pusha
pop
sub
pushf
repnz
push
gs
ljmp
add
or
push
adc
mov
mov
shl
sub
mov
push
cmc
lock
cltd
jecxz
inc
loopne
cmp
add
icebp
fwait
and
mov
jge
xchg
lahf
cmp
mov
insl
jb
nop
and
mov
pop
in
dec
out
pop
xchg
popa
test
sub
call
fwait
jge
pop
icebp
cli
dec
cmp
sub
xchg
mov
ss
cli
sti
inc
dec
jnp
xlat
push
adc
xchg
cmp
push
or
sbb
mov
mov
xor
jecxz
inc
bound
push
jae
out
add
and
das
loopne
mov
cld
add
jp
fstpl
inc
add
jle
push
jecxz
pslld
jp
popf
lret
jle
mov
sub
aam
in
pushf
or
cmc
fistpl
xchg
add
dec
ds
pop
mov
jns
mov
jno
iret
or
xchg
test
rorb
xchg
stc
arpl
outsl
test
aaa
push
mov
in
fs
jne
jle
repz
pop
cmpsb
and
sub
xchg
mov
add
xchg
jo
lahf
jo
inc
inc
pop
sub
fcom
pop
decb
int
push
movsl
push
sub
cmp
ja
mov
mov
xlat
push
pop
aam
or
jge
mov
xchg
clc
daa
dec
outsb
adc
mov
lds
xchg
dec
adc
mov
mov
sbb
push
push
jle
cmp
xchg
jb
inc
jge
jne
lahf
nopl
add
imul
cmp
lods
negb
cmp
fsubs
test
jp
aas
pusha
negl
shll
cwtl
xchg
xchg
add
mov
int
inc
dec
clc
add
mov
jmp
icebp
int
adc
in
push
mov
pop
and
and
mov
push
movsb
js
sbb
inc
sbbl
mov
mov
lret
jbe
fsubrs
nop
dec
ss
cmp
or
dec
inc
pop
insb
xchg
push
jae
and
sbb
sub
ret
cld
in
loop
push
test
cpuid
adc
adc
push
inc
lcall
cs
sti
xchg
cmpsb
aas
lock
sub
fdivs
dec
and
sahf
mov
push
stos
jge
dec
call
stc
ss
add
jb
into
faddp
mov
sbb
popa
insb
fnstcw
das
xchg
sbb
mov
lds
repnz
popa
popa
sub
adc
and
loopne
or
ljmp
out
out
add
cli
dec
js
adc
or
lret
dec
push
js
imul
adc
xchg
xlat
jl
xor
jo
mov
dec
cmc
adc
sbb
or
ds
hlt
jle,pn
ficomps
mov
mov
out
pushf
lret
adc
in
jns
lret
test
scas
lods
xor
lret
xchg
cmp
fimull
cmp
ljmp
cwtl
xor
popa
insl
xor
add
lods
enter
je
imul
jle
pop
xchg
fcmovne
dec
push
fisttpl
adc
pop
leave
int
fidivrl
call
call
js
cmpsl
aam
addr16
mov
push
in
dec
dec
push
pop
ret
sti
pop
adc
addl
rorb
and
push
scas
das
mov
sub
add
scas
mov
mov
sub
cmpsb
add
adc
or
pop
test
cwtl
incb
mov
push
loope
sbb
imul
out
cmpsl
and
push
negb
addr16
mov
xchg
sbb
mov
and
int
adc
jbe
dec
cmp
ss
pop
in
sahf
pop
std
or
outsl
pop
int
fldl2t
clc
rol
ss
xchg
cmp
xor
shll
xchg
or
shrl
jp
cmpsl
dec
push
lea
mov
scas
out
cli
or
fmuls
mov
mov
ror
stos
ds
fnstenv
dec
push
mov
adc
mov
pop
adc
mov
in
adc
lods
lret
add
push
mov
xor
inc
jmp
jecxz
addr16
xchg
cmc
sbb
loope
xchg
pushf
sbbb
fisubrl
and
pop
movsb
jmp
and
lock
sbb
sbb
es
sbb
jno
adc
aaa
cmp
mov
inc
jmp
xchg
lea
add
into
cli
cmp
das
pop
xchg
dec
insb
pop
sub
inc
test
xchg
jmp
stos
and
setge
ds
fcomps
test
gs
dec
aas
out
xchg
int3
rcrl
add
iret
out
imul
mov
adc
sbb
pop
movsb
test
add
jl
repz
mov
outsl
popa
test
bound
jecxz
inc
pop
fistps
dec
jl
cmp
lcall
push
jnp
mov
lret
sub
adc
xlat
cmp
shlb
pop
and
rcrl
xchg
shll
mov
not
call
mov
enter
ds
pop
sbb
cmpsl
push
sbb
xchg
cld
out
cltd
aaa
in
cmpl
push
pop
fsubrp
lds
add
leave
mov
cmovnp
sub
add
and
mov
dec
pop
mov
mov
mov
lahf
xor
cld
cld
call
lds
cmpsl
bound
xor
jbe
cltd
std
mov
jge
xor
loop
mov
out
mov
sub
mov
dec
setnp
cmp
inc
pop
push
pushf
and
add
pushf
imul
mov
pop
jle
dec
push
repnz
or
aam
loopne
into
push
rcr
push
push
mov
cmpl
jnp
push
mov
jge
dec
push
mov
daa
icebp
cmp
mov
xor
mov
cmp
sbbb
adc
and
jl
inc
push
bound
mov
lods
lret
ss
cli
insl
or
addr16
clc
xorl
fs
pop
pop
and
sub
cmp
ret
mov
inc
dec
sub
lods
push
jns
add
xlat
decb
mov
or
mov
notl
cmp
jae
or
js
test
mov
testb
andl
dec
and
dec
stc
mov
add
loope
lret
addb
andb
jne
bound
daa
icebp
sub
mov
pop
pop
xchg
pop
movsl
mov
xor
pop
sub
xchg
imull
sub
mov
jle
xchg
mov
fnstsw
jno
xor
push
push
outsb
pop
mov
xchg
sti
std
arpl
jecxz
test
cmpsb
mov
aad
js
aad
pop
xchg
jb
shll
jg
aam
cs
pushf
push
mov
popf
out
add
aas
mov
leave
loope
sbb
mov
pop
cmp
je
mov
sbb
mov
popf
popf
rcrb
inc
mov
aas
imul
jp
out
out
lcall
das
push
repz
jl
imul
mov
in
sub
pop
pop
inc
mov
mov
dec
xlat
ret
pop
push
mov
sti
inc
dec
jge
cld
stc
adc
shrb
inc
pusha
xchg
sub
cs
lea
popa
xchg
sub
xchg
mov
xor
xor
cli
inc
outsl
add
sub
mov
daa
js
cmpsl
sbb
aad
adc
jae
inc
cli
xlat
mov
inc
sub
sub
test
cwtl
pop
push
mov
jae
dec
xchg
mov
cmp
popa
pop
js
pop
xchg
mov
mov
dec
sub
push
mov
adc
push
push
ss
aaa
lods
sbb
outsb
fisubrs
insb
je
or
xchg
aas
pop
pusha
or
sbbb
scas
jl
sbb
inc
lret
cmp
out
mov
xchg
outsl
andl
data16
lcall
and
addr16
and
mov
std
xor
xchg
inc
pop
push
mov
pop
in
xor
fbstp
dec
sub
add
sti
mov
add
scas
repnz
out
stc
dec
fdivs
inc
popa
es
and
xlat
and
cs
pushf
cmc
push
scas
jae
scas
jecxz
dec
fcoms
bound
mov
jl
fwait
scas
adcb
pop
lret
ds
outsl
add
xchg
test
ret
rorb
pop
scas
imul
xchg
jno
jo
arpl
pop
es
mov
push
test
mov
daa
pop
imul
loopne
popf
pop
fs
sub
iret
pop
dec
lea
test
popa
aas
push
test
sbb
dec
hlt
inc
sbb
out
mov
js
mov
jns
jae
mov
hlt
mov
xchg
pop
dec
mov
jbe
lods
in
test
test
ss
sbb
push
cmp
scas
cmpl
or
mov
add
fnstsw
daa
xlat
mov
inc
push
pop
cmp
insl
sub
dec
inc
ret
sbb
mov
mov
loop
rclb
inc
mov
outsl
icebp
push
mov
cli
das
test
leave
adc
in
neg
sbb
pop
outsb
and
pop
fildll
in
xor
adc
sbb
enter
sub
sbb
js
orb
pop
adc
mov
push
gs
push
cli
lock
lret
mov
mov
iret
and
add
cmp
cmp
dec
cmc
xchg
dec
pop
into
pop
xor
sub
or
cmp
inc
adc
push
cmp
fs
inc
push
insb
dec
orb
push
icebp
js
sti
xchg
test
mov
jns
idivl
add
xchg
ret
mov
ror
cmc
addb
lahf
jmp
imulb
mov
clc
in
xlat
dec
sub
and
das
out
adc
sbb
push
outsb
call
jae
mov
in
mov
pop
cmp
add
jp
xchg
pop
dec
jp
mov
cmp
mov
add
out
jmp
ss
xchg
bound
iret
lret
or
gs
pusha
xchg
mov
push
sbb
xchg
adc
add
bound
push
popf
into
push
inc
push
xor
xor
push
jae
test
pop
out
cmp
aad
fsubs
das
sub
fistpll
add
cs
jmp
or
cmc
lret
gs
sub
jne
sub
mov
test
and
inc
jl
daa
test
and
iret
shl
stc
mov
sbb
imull
add
sbb
or
aaa
sbb
adc
ret
fstpl
in
loope
rcll
call
jmp
mov
dec
pop
repz
mov
call
mov
and
sbb
mov
xlat
aad
call
pop
test
mov
scas
mov
cmpsb
and
or
jmp
xchg
adc
xor
mov
pushf
cmp
in
test
xchg
jl
mov
jo
lahf
int3
cmp
scas
or
pop
jle
lret
test
hlt
fadds
add
xchg
xor
data16
add
lock
dec
shlb
dec
filds
sub
jb
dec
inc
cld
daa
scas
neg
jnp
addb
jle
xor
repz
mov
inc
or
movups
xor
jnp
pushf
mov
jnp
int3
outsb
inc
mov
push
test
lea
cmp
fsubrs
mov
repnz
mov
jge
push
addr16
xchg
out
pushf
push
das
sub
push
or
mov
push
xor
movsl
xor
jge
je
mov
xor
inc
mov
xor
jb
push
clc
push
push
push
add
ljmp
es
jbe
lock
jnp
jno
shrl
rclb
rolb
push
cld
pop
mov
mov
enter
mov
popf
adc
and
ds
or
call
cmpsl
dec
xor
inc
movsl
dec
test
pop
cmp
mov
add
mov
cli
and
addb
out
int3
push
sub
ret
xorb
fdivrl
stos
int
adc
ds
sub
inc
out
pushf
cmp
mov
mov
push
jo
stc
adc
jo
cmpsb
sbb
mov
dec
loop
xchg
push
mov
test
jp
cmc
push
dec
bound
mov
sub
je
outsl
mov
rorb
jbe
ds
cmp
jmp
lcall
scas
dec
mov
pextrw
inc
scas
pop
fs
add
xlat
mov
mov
cltd
repz
adc
addr16
jg
outsb
lods
xchg
sahf
scas
inc
pushf
sbb
mov
dec
mov
mov
add
inc
mov
dec
fs
mov
dec
fcomip
fidivrl
data16
mov
ja
pop
xor
dec
orb
insl
cltd
push
adc
xor
push
and
fldt
pop
cmp
mulb
loopne
popf
repnz
mov
push
cmp
add
or
out
inc
mov
je
out
sub
cld
mov
je
dec
jg
dec
ljmp
cmp
mov
call
mov
jne
test
shll
ret
mov
ret
aas
sbb
adc
or
in
rcrb
icebp
xor
push
xorl
imul
loop
mov
pusha
icebp
xor
xor
sub
jecxz
les
jl
push
mov
lods
push
push
mov
mov
outsb
out
mov
lock
xchg
push
daa
in
insl
dec
loop
out
repz
cmp
adc
or
or
fwait
imul
orb
movsl
cmp
mov
jo
fistl
sbb
cmc
in
movsb
sub
popf
cmp
mov
push
lea
mov
mov
mov
mov
gs
aam
pop
push
jmp
popa
hlt
idivl
mov
cmp
int3
lret
aaa
add
fimull
fidivs
xchg
xchg
add
sub
jns
test
adc
sub
pop
mov
jge
pop
int
mov
arpl
sub
les
lock
ja
push
jbe
in
rcll
repz
lret
rcll
xchg
push
fisttpll
and
pop
push
add
dec
dec
pop
pop
sub
ret
out
das
or
adc
fwait
mov
push
aas
imul
dec
test
add
stc
and
xorl
lret
add
ret
mov
pusha
lret
adc
scas
mov
sub
dec
imul
xor
xchg
pop
cmp
aad
pop
xor
sub
hlt
inc
hlt
je
sub
aad
cld
pop
xchg
jnp
jns
in
popa
add
int
mov
into
aaa
cmp
xchg
ror
adc
push
icebp
push
mov
mov
cmpb
out
loop
fst
dec
xchg
fcomps
xchg
inc
push
sub
mov
and
and
sti
not
xor
cmc
push
fidivl
shrl
jmp
data16
pop
fs
ss
or
cmp
add
push
fs
fldl2t
cmp
push
rolb
aaa
dec
into
lods
jb
and
outsb
lret
cmp
jae
mov
test
xchg
rolb
dec
imul
cwtl
and
sbb
sti
outsb
xchg
lcall
int3
aas
pop
dec
push
imul
dec
stos
push
and
jmp
xchg
add
and
cwtl
push
cld
cld
arpl
cmp
mov
ds
sub
fidivl
add
scas
repnz
dec
mov
es
push
pop
jp
fmuls
jbe
add
jno
es
decl
and
and
dec
test
jae
add
mov
xchg
dec
pop
adc
es
jbe
int
push
fdivs
leave
push
adc
xchg
shl
out
imul
pop
pop
pop
rolb
add
mov
cmp
andl
pop
ret
add
popf
pop
mov
add
testl
cmp
andl
cmp
enter
push
test
cli
xchg
imul
mov
clc
rcll
fstpt
jp
xor
and
mov
and
adc
or
dec
incl
sub
lret
scas
mov
cmpl
jl
leave
into
sub
fsubrs
mov
inc
push
test
xchg
ja
dec
data16
shl
mov
mov
mov
loopne
popa
jnp
int
and
lds
add
push
ljmp
push
nop
inc
mov
jg
mov
mov
in
xor
mov
jl
add
mov
mov
jl
jg
inc
sub
push
xchg
mov
jnp
int3
imul
or
int
pop
sub
test
and
sti
rcl
ss
xorl
ret
jnp
mov
mov
cmc
stc
and
inc
dec
mov
xchg
fwait
cmp
lcall
mov
sub
mov
rcrb
icebp
test
shlb
sub
sbb
loopne
fstps
jecxz
mov
inc
mov
cmpsl
jns
cmp
fs
rclb
or
adc
push
ficoms
loope
pop
jnp
xor
inc
sahf
pop
fcmove
inc
jl
jp
jbe
jo
out
mov
sbb
leave
sti
dec
int
scas
outsl
sub
add
inc
xor
cs
shlb
inc
repnz
nop
xor
cmp
push
push
sahf
xor
jnp
rcll
cbtw
push
pop
lods
mov
out
xor
cmc
lea
fs
lods
ss
pusha
fildl
imul
adc
test
call
pop
xchg
outsb
dec
sahf
xchg
sub
enter
push
jo
mov
ja
test
adc
xor
lret
jle
adc
mov
or
bound
jb
add
sbb
jle
cmp
pop
aam
sbb
lock
stos
jmp
fwait
xor
out
jns
cs
jo
nop
dec
aad
mov
cmp
xor
jns
leave
pop
outsl
shrl
addl
ljmp
or
cmp
gs
dec
inc
movsl
sbb
jle
dec
clc
pop
jge
push
fadds
cltd
jl
inc
jecxz
push
sub
js
add
sahf
push
push
jecxz
fxch
dec
sub
icebp
movsl
and
pop
jnp
jb
push
push
ret
jno
mov
bound
or
lods
xchg
enter
aas
xor
jge
xor
icebp
fistl
je
push
outsb
ret
dec
mov
ljmp
js
call
das
mov
stos
lds
ret
cmp
dec
sub
mov
fs
fincstp
in
sub
aam
mov
in
pushw
push
mov
cmpsb
jp
pop
jo
es
xor
loop
aaa
dec
sbb
enter
or
shlb
out
arpl
mov
fistpl
ret
ja
ljmp
imul
clc
nop
adc
mov
or
push
mov
mov
jbe
inc
loopne
mov
out
popa
push
push
mov
lds
imul
out
cmp
outsb
mov
outsb
gs
inc
and
cltd
test
test
lret
pop
sub
arpl
cltd
sahf
lods
aad
xchg
adc
jne
lods
sahf
inc
and
shl
ret
dec
dec
loope
jae
aad
push
ljmp
jb
xchg
pushf
xor
jne,pt
push
and
lret
adc
cmc
pop
out
dec
insl
ret
pusha
out
add
fstpt
ljmp
aam
test
inc
std
and
enter
cmp
push
pusha
aas
or
sub
push
lea
lock
xor
cmpl
call
rcll
adc
mov
cmc
jne
gs
out
mov
fdivrs
in
das
cmp
lcall
pop
imul
jge
dec
nop
dec
movsb
or
out
lret
push
jne
jmp
jne
inc
shll
adc
mov
sbb
xor
jbe
ficoml
out
xor
loop
leave
mov
mov
jae
mov
mov
inc
sub
lea
out
popf
fstps
mov
in
fstl
jno
sbb
insl
ss
pop
jae
sub
inc
insl
or
imul
mov
cmp
fcmovu
or
test
pop
sub
scas
movsb
jbe
xchg
add
adc
mov
cmc
ss
lret
and
inc
xchg
sub
loope
mov
and
pop
in
add
jno
and
std
aam
in
pop
mov
sbb
fwait
cmp
sub
pop
mov
negb
add
in
repnz
movsb
sub
imull
xor
lcall
mov
insb
lahf
mov
mov
or
les
shrl
pop
and
int3
aad
adc
scas
repnz
in
inc
adc
iret
push
fs
rolb
cmp
clc
pop
mov
adc
pop
jns
inc
addr16
arpl
xchg
lret
test
in
push
imul
in
xorb
psrlw
lret
iret
pop
xor
testl
outsb
push
sbb
xlat
inc
dec
mov
fsubs
xchg
mov
ret
ss
push
mov
fdivrs
stc
scas
xor
fdivrp
mov
sbb
mov
sub
out
imul
and
or
lahf
mov
adc
xrelease
push
loopne
and
pop
push
outsb
jnp
push
xlat
jle
lcall
aad
xor
push
aad
pusha
es
fimuls
incb
fwait
dec
or
jns
and
cwtl
xchg
lret
pop
ffreep
mov
lret
cwtl
jmp
repz
addr16
sarb
jge
xchg
cmpsb
shlb
dec
cmpsb
sbb
ljmp
clc
pop
js
icebp
xor
into
gs
inc
inc
mov
mov
and
inc
add
jnp
jmp
icebp
int3
rolb
jnp
cmp
fsubl
mov
and
cmp
pop
jge
xchg
in
xchg
xor
cmpsb
sub
add
cmp
cmp
outsl
das
pusha
stc
cltd
or
push
pushf
push
imul
mov
push
aad
push
mov
test
pop
jo
rcrb
xchg
js
test
jmp
ret
in
loope
push
clc
in
cmpsl
subl
add
popf
pushf
add
pushf
dec
jmp
mov
popa
std
xor
aaa
ret
into
dec
sub
loop
or
enter
mov
push
scas
push
outsb
jbe
push
insl
jmp
mov
call
mov
stos
aad
test
pushf
fwait
or
repnz
pop
cwtl
call
data16
loopne
fisttpl
or
imul
scas
push
sbb
mov
repz
out
jg
cmp
sbb
mov
add
add
negl
mov
xchg
in
xchg
pop
aaa
mov
aaa
bound
out
out
sbbb
js
int
sahf
cmc
leave
dec
inc
pop
lods
imul
xor
insb
inc
lods
push
hlt
push
mov
or
idiv
out
mov
in
imul
ds
jno
das
cmp
pop
lea
add
scas
imulb
mov
lret
mov
es
mov
dec
xor
in
cmp
jo
sub
mov
fidivs
ss
je
sbb
notl
test
sahf
sarb
mov
mov
out
mov
xchg
xchg
mov
and
scas
xchg
loope
and
xchg
inc
pop
hlt
xchg
into
sbb
push
scas
aad
add
popf
dec
imul
je,pn
shll
cmpsb
pop
negb
jmp
loopne
divw
xor
stc
out
mov
push
push
stos
sub
xlat
dec
push
pop
jns
in
stc
mov
inc
sbb
adc
ja
arpl
pop
cmp
jg
das
cmp
popa
mov
loopne
adc
aaa
popa
mov
ljmp
cmp
cmp
cmpsb
jns
enter
or
mov
je
and
push
fidivl
mov
stos
shl
out
jae
or
mov
inc
gs
mov
xchg
sub
mov
jb
inc
dec
sub
sbb
mov
in
ret
cli
in
mov
pop
xchg
jle
gs
or
int3
mov
repz
add
ret
fs
xor
push
pop
push
leave
xorl
sti
xchg
int3
nop
add
push
add
insl
cmp
pusha
mov
ret
sbb
mov
in
push
cmp
insl
aaa
test
repz
out
cwtl
inc
mov
adc
mov
cmc
lds
loop
adc
outsl
dec
jmp
add
rcl
aad
loopne
hlt
push
icebp
fldenv
popa
mov
mov
mov
xor
cmpsb
lcall
sbb
inc
fbld
pop
test
and
stos
lods
push
popf
xor
in
movsb
popf
cmpsb
mov
movsl
sub
scas
and
jns
dec
std
inc
adc
mov
repz
mov
mov
xor
shlb
xor
into
dec
imul
popa
aaa
cs
push
or
or
aaa
aas
adc
shrb
pop
adc
data16
xchg
pop
ja
adc
out
cmc
and
inc
add
jl
test
std
xchg
mov
movsl
sbb
mov
stos
xor
ljmp
push
rcrl
jp
cmp
int3
xchg
aaa
sub
push
testl
xlat
pushf
data16
cmpsb
cmc
xchg
xor
popa
xchg
dec
and
mov
cld
mov
sti
xchg
jno
mov
xchg
fildl
inc
pop
mov
push
sub
shrl
ret
in
test
xor
cmp
sub
std
and
xlat
dec
sbb
cli
push
cld
and
xchg
subb
mov
jecxz
push
xchg
fsub
jb
dec
jmp
and
xchg
adc
add
add
int3
imul
repz
jne
mov
mov
mov
push
xchg
mov
cli
arpl
jbe
test
cmp
push
pop
test
xor
push
xchg
ds
in
out
shrl
add
mov
pushf
fs
mov
movsb
fwait
into
repnz
sbb
or
jg
xchg
js
aad
and
lahf
lock
rclb
lret
lret
call
enter
xchg
mov
add
movb
dec
les
mov
xchg
pop
iret
loop
xor
dec
sbb
std
aam
lods
xchg
jns
xchg
outsl
gs
mov
mov
mov
adc
sbb
ljmp
adc
push
lods
ret
push
adc
cmp
sub
in
scas
push
xchg
sub
xlat
sbb
dec
mov
lds
cmp
in
xchg
shrb
test
cmp
pop
outsl
cmpxchg
imul
imul
mov
in
das
pop
jmp
push
shll
mov
xchg
pop
lret
jle
sub
lea
cmp
mov
popf
mov
mov
stos
jle
mov
negb
cmp
inc
cltd
addr16
jp
ss
ret
cmp
imul
ficoms
shll
mov
inc
sub
pop
dec
pushf
and
or
dec
orb
cli
movsb
or
ds
sahf
stos
div
sbb
in
fmul
mov
jl
ss
repnz
sub
test
mov
pusha
fwait
pop
fisttpl
outsb
loopne
ds
push
or
mov
not
call
repnz
jo
cmp
push
imul
lds
shll
cmovo
into
int
sbb
das
and
xor
out
imul
insl
adc
test
lods
xchg
mov
dec
adc
or
jp
cmp
push
jp
test
lret
cli
xor
sub
jo
ret
inc
mov
cmp
or
cmp
jg
repz
cmp
cmc
jae
test
xor
notl
pop
fwait
xchg
pop
leave
fidivl
iret
xor
cmp
rolb
in
mov
and
mov
or
mov
adc
xchg
imul
pop
xchg
aaa
aaa
add
xor
fucomi
insl
lock
rolb
push
je
adc
imulb
in
fsubrs
sub
notb
cmp
adc
popa
jg
add
push
xor
sahf
fnstsw
les
cmp
out
in
movsb
pop
enter
imul
inc
jns,pn
sbbl
call
push
jnp
sahf
int3
pushf
shrl
jb
in
outsb
in
or
add
pop
sbb
addr16
andl
and
xchg
cmp
insl
mov
mov
mov
inc
or
aad
push
push
xor
jge
inc
and
add
jo
popa
sti
pushf
and
pop
ljmp
push
adc
dec
mov
dec
test
sub
push
hlt
lea
xor
dec
adc
fiaddl
aas
dec
push
mov
popf
push
dec
dec
add
add
mov
mov
xor
cmp
psrlq
xchg
inc
sti
push
jno
xchg
add
cmpsl
push
call
pop
jmp
push
mov
leave
push
loope
dec
test
adc
js
adc
std
adc
int
in
roll
bound
push
ss
push
mov
shll
lds
or
jle
test
mov
dec
pop
mov
push
push
dec
push
pop
cmp
sbb
lret
jle
dec
shrl
testw
fidivrs
or
ret
imul
testb
adc
loop
sub
cmpsl
push
jg
popa
pop
mov
std
int3
test
cmpsb
mov
or
pusha
pop
jns
sbb
scas
and
fistl
sbb
int
mov
push
jns
inc
push
cld
pushf
jae
sti
mov
imul
xor
push
outsl
stos
or
aas
add
inc
cld
lret
and
es
sbb
iret
jnp
fimuls
or
lods
mov
fisttps
das
pop
pop
lea
inc
inc
fnstcw
push
shlb
xchg
push
xchg
cmp
push
fstl
cmpsl
add
mov
inc
js
push
mov
ds
sbb
lret
inc
sub
addr16
jl
pop
in
test
lret
aad
aas
lods
jle
scas
push
pop
imul
cltd
mov
fadds
rcrl
imul
or
mov
or
lahf
sub
push
rclb
mov
and
xor
icebp
xchg
cmp
outsl
adc
lods
loopne
xor
repz
jp
xor
cmp
dec
jns
lret
cmp
mov
sbb
jb
adcl
adc
xchg
push
mov
fwait
dec
stos
arpl
test
outsb
xor
std
mov
and
dec
movl
movsl
and
jp
js
sbb
jae
test
add
dec
push
and
je
fmul
pop
call
cmp
cmpsb
mov
xchg
mov
scas
in
aam
in
push
pop
xchg
icebp
mov
or
dec
xbegin
loop
xchg
jp
repnz
add
jg
cld
ljmp
xchg
out
adc
ds
nop
ja
andb
sub
or
sub
pushf
xlat
insl
repnz
adc
pop
cmpsl
xchg
or
in
adc
inc
scas
ja
push
or
call
or
pusha
dec
idivb
push
dec
push
into
and
sub
lahf
adc
shlb
and
inc
jg
sub
out
movd
insl
ret
pop
nopl
clc
cmc
pop
push
jbe
std
jbe
test
adc
jp
loope
mov
xchg
out
mov
sub
enter
cmpb
mov
fisttps
push
je
stc
xchg
jnp
sbb
jle
mov
mov
lret
lret
in
lock
cmp
adc
add
inc
mov
pop
iret
cli
ret
xchg
mov
xor
jnp
mov
adc
imul
hlt
retw
rcr
adc
repnz
mov
cwtl
das
lahf
int3
movsl
xor
sarb
fstpt
cs
outsl
jb
cld
mov
inc
out
fistpl
insb
mov
push
mov
ds
jb
fidivs
push
sub
stos
push
lds
lret
icebp
rcrb
and
mov
inc
scas
loopne
xor
mov
les
iret
popa
inc
clc
add
loop
test
lods
orl
and
mov
ljmp
sbb
pop
into
jl
jl
mov
pop
add
jo
fisubrl
out
xor
pushf
ds
mov
inc
cmp
ljmp
ljmp
movaps
mov
inc
lahf
jae
ret
int
test
adc
rol
dec
jmp
or
imul
jne
loop
aam
cmpsl
xchg
mov
mov
sti
sarb
cwtl
add
mov
or
xor
rol
popa
daa
fprem1
and
or
cmp
shll
inc
adc
xor
stc
or
bound
push
mov
mov
ds
rcr
add
sbb
pop
fimuls
jge
stos
je
call
mov
popa
inc
mov
or
jo
sub
mov
outsl
adc
loope
ret
fistl
divl
icebp
adc
jns
xchg
pop
sbb
insl
mov
sti
xchg
mov
or
jecxz
dec
sub
inc
push
repz
out
jle
and
sub
iret
xchg
iret
jg
iret
inc
adc
mov
mov
adc
or
sahf
aaa
clc
pop
inc
ret
idivl
sbb
scas
in
movsb
inc
jbe
sti
cmovae
mov
jno
sbb
fdivrp
mov
xchg
or
push
ljmp
loopne
mov
xchg
out
shlb
adcb
addl
mov
ret
push
mov
iret
outsb
lock
mov
lea
lods
mov
imul
push
cmpsl
fstl
sub
mov
or
int
leave
push
push
and
aas
jmp
add
xchg
sbb
inc
mov
jnp
mov
out
sub
mov
mov
out
adc
xchg
xchg
push
in
out
daa
inc
call
adc
aaa
fdivr
rorl
outsb
in
addr16
aad
ss
xor
lret
std
ficompl
loopne
xchg
test
insb
or
lahf
jl
cmpsb
cld
in
mov
loop
idivl
repnz
jmp
pop
dec
shrb
lods
in
add
jmp
loope
cli
arpl
or
adc
arpl
outsl
sub
mov
iret
push
mov
bound
inc
sub
sbb
mov
mov
andl
mov
sub
addr16
ja
in
pushf
in
xchg
mov
out
mov
inc
iret
mov
cs
ret
mov
sub
fdivl
mov
push
pop
cmovg
and
out
cmp
stos
lret
js
jg
or
mov
jae
test
out
mov
imulb
xor
je
push
lds
outsb
push
in
and
and
int
or
dec
sbb
je
and
aas
notb
repz
in
in
inc
sarl
lods
popf
stos
ljmp
xchg
das
mov
jmp
pop
mov
gs
or
inc
enter
popa
cmp
lds
js
popa
ss
repnz
jo
cmpsb
push
and
push
fs
int3
or
pusha
inc
lret
sbb
insl
std
push
lods
mov
pop
sub
fmuls
popf
xor
leave
cs
stc
rorl
sti
pop
inc
push
mov
sbbl
movsb
mov
mov
ja
cwtl
mov
jg
cmp
inc
adc
add
pop
cld
sbb
jbe
mov
mov
xlat
pop
sbb
imul
in
or
cmc
pop
fimuls
mov
out
or
icebp
and
fucomip
mov
fwait
xchg
lahf
jne
sub
loopne
or
clc
inc
mov
shr
and
mov
jnp
jb
add
cmp
sahf
stc
xor
pop
pusha
sbb
iret
and
pop
imul
pop
mov
mov
mov
cli
jno
out
xlat
rcl
insb
shlb
sbbb
fcoml
outsl
push
jge
pop
dec
shll
ss
fsubs
xor
cli
nop
fildll
std
pop
jb
test
cmc
pop
push
das
lret
push
outsb
xchg
and
nop
daa
mov
mov
lahf
push
enter
inc
and
pop
stc
jae
inc
adc
push
movsl
dec
outsl
cld
xchg
and
push
imul
jb
cwtl
add
inc
dec
fs
xchg
stos
xor
cltd
icebp
push
xchg
negl
jbe
imul
sub
inc
adc
adc
mov
dec
sarb
out
cmpsl
ds
sub
scas
scas
clc
push
mov
mov
lods
xchg
lret
and
adc
lret
into
mov
sbb
mov
mov
jmp
mov
jp
push
xor
loope
in
and
fmul
test
fiaddl
nop
mov
xchg
movsl
pop
xor
icebp
rclb
shrl
popa
jb
xor
mov
and
fs
flds
test
xchg
fistl
in
mov
mov
xor
loope
cmp
xor
add
fidivrl
push
dec
pop
aad
fldt
lret
mov
or
repnz
stos
leave
and
jo
add
or
test
add
inc
sbb
sar
lods
andl
test
lahf
fwait
jae
inc
fldcw
sub
pop
add
stos
sbb
imul
add
dec
jns
es
inc
fs
std
adc
loop
jl
test
popa
clc
sbb
inc
mov
xchg
imul
push
push
adc
pop
cmp
movsl
jns
push
xor
push
test
sub
lods
mov
mov
mov
rorb
sarl
test
ret
adc
aam
mov
loopne
mov
ljmp
cwtl
gs
stc
mov
mov
and
addr16
pop
sarl
dec
addl
xchg
stos
add
sub
pop
xchg
ss
into
fistps
mov
adc
call
and
push
je
push
xchg
push
fmuls
inc
xchg
pop
out
xchg
mov
jne
test
pop
cmp
stc
out
cmpsl
repnz
fs
in
cmc
cmp
jne
aaa
mov
popa
push
into
out
pop
mov
sub
hlt
cmp
les
inc
adc
pop
stos
pushf
dec
je
sbb
mov
sub
lcall
dec
cmp
xchg
lcall
cmp
das
imul
lcall
call
adc
nop
insl
mov
test
add
mov
das
leave
sub
xchg
mov
lods
iret
xchg
mov
sarb
aam
or
imul
mov
adc
aad
xchg
inc
pinsrw
out
bound
mov
sub
int3
fistl
push
mov
jg
cmp
pmuludq
mov
out
xor
jbe
aam
ficoms
rorb
fs
popf
ds
cmp
mov
and
std
cmpb
into
xchg
inc
mov
mov
aaa
clc
int
push
and
leave
inc
arpl
mov
add
dec
cmpsl
inc
enter
and
hlt
add
mov
outsb
jae
lahf
rcl
dec
adc
mov
dec
daa
pop
aaa
lret
inc
xchg
mov
pop
loopne
adc
movsl
lcall
faddl
into
inc
xchg
movsb
test
pop
inc
inc
ret
jns
in
cmp
ds
and
xchg
pushf
jl
shr
mov
popa
sbb
loop
in
popf
push
xor
loope
sub
imul
push
es
sub
daa
lret
pop
loope
cwtl
inc
rorl
imul
sti
imul
sbb
leave
dec
roll
cmp
orl
mov
repnz
sub
stos
nop
repz
inc
nop
loop
jg
call
cli
push
int3
push
push
mov
scas
mov
lock
out
and
das
loope
loopne
insl
movsl
loop
lahf
or
dec
push
xor
cli
mov
dec
adc
push
adc
jae
scas
jge
mov
aad
iret
fildll
push
xchg
in
jnp
es
push
ficoms
in
mov
lods
aaa
ds
dec
adc
dec
out
inc
lea
mov
test
dec
loope
and
fdivrs
lea
inc
scas
ret
cmp
sub
mov
aaa
shlb
ds
ja
sarb
add
lret
jae
sbb
je
nop
jmp
aaa
fstps
fwait
inc
pop
jnp
fadd
fsubs
mov
mov
popf
iret
or
clc
enter
jp
sti
fnsave
dec
xchg
fidivl
repz
pop
push
pop
sti
xlat
xor
call
pushf
cmp
mov
adc
sbb
lock
test
lock
das
outsl
xchg
jbe
shlb
leave
iret
mov
sbb
mov
pop
mov
into
fbstp
sub
sub
cmp
mov
cwtl
inc
adc
or
inc
std
push
lods
cmp
and
pmulhuw
lock
cltd
mov
arpl
pop
cmp
dec
jbe
adc
adc
icebp
outsb
sub
mov
and
jle
cmpsb
loop
inc
sbb
mov
out
adc
pop
imul
repnz
dec
divb
jg
xchg
std
and
and
dec
pushf
lcall
mov
repnz
lea
mov
shll
jge
ja
std
push
mov
inc
int3
push
in
sub
enter
fsubrl
lea
lcall
repz
popf
adc
shl
iret
mov
push
mov
mov
je
or
sahf
lret
popa
mov
inc
add
and
mov
mov
enter
xchg
inc
popa
sbb
and
jle
xchg
test
push
ljmp
lods
mov
pop
or
in
decl
sbb
pop
or
pop
das
mov
add
fstpl
fsub
in
xchg
das
mov
in
sbb
out
stos
mov
cmp
dec
sub
inc
cmp
shl
into
inc
out
repnz
xor
in
addr16
test
cs
stos
sub
add
das
repnz
ljmp
sub
ja
insb
inc
out
inc
fbstp
das
mov
shrb
pop
scas
imulb
mov
mov
ret
push
in
cld
lret
pop
bound
mov
push
mov
imul
push
mov
sbb
rclb
push
int
aad
xorb
xor
rclb
hlt
mov
int3
arpl
and
gs
sahf
popl
in
xchg
pop
dec
rcrb
add
cmp
mov
cs
sub
jne
push
gs
aad
pop
sti
icebp
mov
addr16
jecxz
stos
mov
or
rcrb
cmp
xor
jmp
xchg
xchg
rolb
push
jmp
insb
int3
push
lods
repz
pop
jmp
sub
dec
popf
test
movsl
jmp
cmpsl
inc
lcall
jo
out
push
pop
jne
cmp
mov
add
mov
fisttps
jecxz
int3
outsl
pushf
mov
out
iret
stos
jle
mov
cmp
add
mov
pusha
cmp
push
xchg
shrl
movsb
push
in
cmp
mov
cmp
sub
jno
jae
sar
rcrl
sbb
shl
jmp
adc
sbb
and
loop
jecxz
or
ret
adc
pop
mov
adc
mov
daa
loope
cs
insb
xchg
lahf
cmp
and
add
decl
or
xchg
push
add
stc
xchg
mov
and
cwtl
adc
test
cwtl
popf
and
gs
sti
pop
mov
inc
xchg
hlt
push
and
xor
ss
popf
push
cwtl
jae
stos
ja
loope
mov
imul
xchg
or
xchg
xor
shl
dec
or
frstor
mov
xorl
ja
xchg
xlat
popa
ret
out
push
out
pop
sbb
xor
scas
ret
mov
pop
mov
xor
add
cmp
push
in
scas
bound
dec
int
data16
lods
add
mov
int3
inc
mov
or
inc
dec
aad
xchg
inc
popa
mov
jmp
out
ss
jae
jp
or
push
xor
sbb
xor
add
jge
mov
mov
sub
dec
movsl
sarl
idivl
jae
stc
pop
scas
std
fbld
pop
mov
pop
cmpb
jns
pop
ja
test
js
inc
popf
ficompl
into
or
sbb
aad
cld
adc
es
clc
dec
push
cs
aam
lahf
push
or
jmp
inc
mov
add
push
outsb
fidivs
inc
negb
stc
in
stc
popf
in
sub
shl
rorb
daa
jo
cmp
fldcw
out
js
and
xchg
xchg
into
setns
pop
dec
loope
mov
xlat
mov
outsb
lret
movsb
imul
sbb
mov
mov
sub
sbb
adc
dec
shll
cmp
pop
call
lds
jg
add
push
outsl
nop
popf
inc
mov
inc
add
sahf
lret
sbb
lret
xchg
shll
mov
adc
stos
dec
dec
jmp
ffreep
les
xor
jno
imul
fsubrl
adc
test
inc
gs
lods
adc
test
jle
data16
add
xchg
lret
xchg
push
call
cmp
pop
repz
dec
ret
sub
cmp
mov
mov
cmp
jns
push
add
sbb
popa
pop
imul
cmp
aad
cli
movsb
mov
pop
sbb
lds
add
cmp
inc
sbb
sarl
sub
icebp
cmp
test
sub
dec
popf
cltd
andl
push
je
out
outsl
push
cld
push
stos
inc
mov
mov
ds
push
leave
in
cli
fwait
pop
xor
clc
stos
dec
xchg
roll
cmpsl
test
cmpsl
jnp
sub
xor
cmp
xchg
or
push
gs
inc
push
and
das
ffreep
sub
cmp
xchg
add
ja
and
cli
inc
and
sub
sub
scas
leave
or
test
fisttpl
mov
out
dec
fildll
jbe
push
jecxz
inc
and
out
lcall
cmp
fstl
bound
sub
sub
add
fimuls
aas
clc
push
cvtpi2ps
fisttpl
xchg
mov
sub
lds
or
pop
filds
xlat
ret
cmpsb
cld
je
fwait
das
jge
cmp
jge
int
mov
sbb
sbb
dec
and
gs
popf
aam
aas
sbb
jmp
or
sub
push
test
inc
xor
popl
sahf
into
xor
mov
in
ret
hlt
jmp
aas
adc
test
dec
test
loopne
xchg
lret
push
icebp
and
daa
shlb
popa
sub
or
aad
and
sti
ret
lahf
cltd
mov
ret
jo
pop
push
rclb
inc
cmp
mov
pusha
repnz
test
enter
push
mov
js
lret
mov
sarl
ss
ret
cmp
imul
cltd
sub
mov
pop
arpl
loopne
stos
iret
std
stc
mov
pop
ja
js
aaa
int3
adc
inc
jmp
enter
pop
daa
dec
imul
mov
movsl
test
divb
cmp
pop
jge
sub
ret
out
cmp
into
es
not
shl
mov
xor
lea
mov
jae
int3
xor
or
aaa
push
fcoms
adc
nop
pop
or
mov
out
fwait
mov
jmp
mov
adc
mov
aas
hlt
cmc
lret
test
pusha
fs
loope
test
repz
pop
jge
cmp
mov
cld
repnz
xchg
sahf
scas
and
inc
test
pop
scas
push
push
sub
fwait
dec
push
xchg
out
xor
test
fmul
add
in
dec
into
outsb
outsl
jb
inc
arpl
mov
jno
int
mov
push
push
fs
lahf
test
les
xor
cmpsb
mov
icebp
mov
pop
ret
icebp
sub
pop
gs
and
pop
fwait
jae
mov
jnp
jp
cmp
ficoml
cli
jae
mov
mov
nop
out
jp
fs
testb
or
test
lret
xchg
inc
shl
enter
vcomisd
fdivl
shrb
out
mov
sbb
lods
arpl
cmp
or
push
dec
das
pop
pop
stos
fs
or
add
xchg
push
pop
rorb
pop
js
arpl
cmpsl
ds
pop
ret
fadd
xor
scas
or
adc
aaa
cmp
push
idivb
xchg
mov
sbb
ja
int3
mov
jnp
or
loopne
sbb
mov
arpl
cmp
mov
jae
js
add
aam
add
xchg
xor
xor
xorl
pop
dec
mov
aam
mov
inc
cmp
cmp
mov
mov
cmc
or
xchg
jle
call
shll
testl
xor
lea
xor
rclb
loopne
aas
dec
cmpb
cltd
sahf
loopne
adcb
adc
or
stos
addr16
sub
or
and
loope
adc
mov
pushf
cli
lcall
or
cmp
into
ds
cld
and
imul
dec
xchg
dec
in
adc
jo
xor
push
mov
lcall
ja
push
pop
arpl
jne
call
dec
imul
test
andb
cmp
fisubs
mov
test
lahf
dec
cld
sbb
adc
fldt
aam
and
pop
scas
cmp
mov
int3
stos
adc
mov
or
cmp
mov
cmpsl
mov
aas
add
push
std
mov
sub
bound
push
stos
lcall
mov
mov
popa
sbb
ret
fisubs
js
pop
push
outsl
icebp
fst
mov
cmp
add
add
pop
cli
mov
cwtl
mov
inc
dec
inc
xchg
aas
daa
shrb
inc
push
jne
subl
jp
pop
pop
lret
sahf
jmp
aad
popf
push
pushf
pop
pop
decl
inc
lret
loopne
repz
std
mov
adc
and
adc
jmp
or
dec
hlt
cmp
inc
notb
hlt
or
fisttps
pop
leave
cmp
or
iret
popf
sti
push
stc
leave
insl
out
rcll
mov
sahf
fimull
dec
std
jno
jns
pop
je
xchg
fistpll
mov
xlat
hlt
adc
or
es
push
fwait
out
test
pop
mov
xchg
add
sub
pop
cmp
jmp
cli
imul
pushf
push
rolb
outsb
inc
lret
ror
popa
xchg
lods
push
jecxz
out
mov
dec
xchg
inc
jmp
ds
bound
jnp
aad
xchg
jns
loop
dec
scas
enter
and
sub
mov
adc
push
cld
stos
addb
xlat
pop
lea
mov
in
in
fwait
in
jmp
sub
mov
scas
rorb
mov
adc
mov
ficoms
pop
iret
sarb
xchg
ret
ret
pop
sbb
daa
icebp
movsb
xchg
inc
popf
mov
mov
jle
imul
int
cli
push
andb
sub
mov
mov
mov
jns
ja
inc
mov
lds
fstcw
outsb
fmuls
insb
mov
cltd
das
movsl
jne
and
mov
cltd
push
lcall
push
xor
and
push
int
jg
push
sub
xor
adcl
dec
cmc
xor
mov
add
or
fcomps
and
pushf
ud2
add
out
mov
jb
enter
out
cmp
in
fmull
leave
data16
sub
jp
adc
inc
push
add
mov
push
xchg
mov
jp
xchg
enter
fsubs
dec
lret
xchg
rcr
bound
adc
out
mov
je
xor
pop
lahf
sbb
adc
seto
repz
cwtl
cmp
inc
inc
xchg
inc
shrl
jae
dec
mov
inc
dec
leave
lea
cmp
inc
mov
out
sbb
adc
addr16
pop
je
cmp
orb
and
pop
subl
adc
mov
test
cld
push
jo
scas
adc
dec
jb
ret
sbb
push
fwait
or
inc
fs
lock
xlat
sahf
leave
stos
iret
cltd
outsl
idivb
into
xchg
jne
cld
cmp
pop
lret
jnp
dec
cmp
cmp
xor
mov
shlb
cmpl
xchg
push
add
dec
push
and
inc
loopne
push
fldenv
jne
or
bound
mov
inc
sbb
aaa
sahf
cmpsl
ja
out
mov
outsl
xor
das
xchg
out
clc
scas
push
mov
xchg
in
add
lcall
sahf
scas
add
adc
pop
enter
sub
add
xor
jecxz
sub
addr16
in
rcrb
sub
mov
xchg
clc
test
das
orl
repnz
pop
sub
sub
inc
mov
stc
and
insl
pop
shlb
mov
jns
rol
in
mov
sub
and
mov
testb
push
xchg
movsb
push
mov
push
ucomisd
repz
push
imul
xor
pop
aas
jecxz
push
xor
aaa
jp
jmp
inc
fisttpl
aas
idiv
inc
cmp
popa
mov
dec
mov
cmpsl
push
cmpsb
mov
inc
push
jg
cwtl
adc
orb
push
and
lods
push
and
jbe
xchg
jb
dec
xor
outsl
push
enter
daa
pop
int
les
and
icebp
stos
ret
and
int3
test
std
mov
fidivrs
sub
push
inc
dec
ds
inc
out
add
sbb
xlat
sti
fdivp
cmpsb
jne
mov
call
pusha
out
cmp
test
mov
popf
or
sahf
dec
popf
xchg
jbe
das
ret
and
push
pop
jg
mov
dec
or
ss
out
xchg
push
or
cmp
fists
ljmp
sbb
pushf
sar
xchg
sub
bound
dec
out
in
rcr
imul
mov
ret
xchg
lret
lret
jne
lret
pop
fimuls
mov
mov
sub
enter
pop
pop
inc
xor
xchg
icebp
jle
lods
pop
sub
add
dec
inc
and
xor
xchg
scas
call
cs
hlt
cld
sbb
faddp
cli
scas
cli
inc
rcr
mov
or
dec
repz
stc
jmp
jo
and
xor
mov
aad
xor
dec
les
dec
mov
je
mov
gs
test
mov
push
mov
leave
subl
jp
adc
push
addb
inc
jns
out
sbb
sub
push
mov
jl
dec
fidivrs
cs
lahf
mov
or
fsubs
inc
sbb
sti
xchg
add
scas
test
cmp
or
in
pop
push
xor
insb
sbb
es
and
pop
sti
sbb
add
xchg
mov
mov
mov
in
popf
scas
int
dec
xchg
push
dec
arpl
jns
mov
clc
mov
popa
les
frstpm(287
and
cmp
lods
dec
pop
sbb
add
mov
or
push
and
fmull
push
into
ret
push
into
push
sbb
movsl
fidivs
testl
mov
movl
scas
in
cmpsb
test
loope
jns
repnz
mov
add
ljmp
xchg
jle
testb
xor
inc
sbb
fs
addr16
fisubrs
sub
or
mov
mov
rclb
pop
push
popf
push
mov
push
mov
inc
aas
inc
sbb
repnz
fistpll
pop
daa
pop
adc
mov
cmc
psubusw
sub
std
push
cmp
loop
xchg
cmp
jno
xor
pop
jae
adc
lods
stc
xorb
add
in
das
test
adc
bound
and
jb
jmp
arpl
pop
js
pop
xchg
cmp
add
jl
cwtl
int
scas
mov
mov
xchg
or
cmp
aam
repnz
bound
mov
jmp
in
mov
push
mov
jecxz
sub
mov
mov
cmp
repz
outsl
inc
mov
adc
sub
jae
xor
cwtl
jmp
mov
sahf
repnz
mov
notb
mov
inc
xor
xor
lret
pop
inc
mov
cwtl
ds
sahf
mov
test
int
pop
lret
jmp
sbb
cmp
jge
lods
xchg
stos
aam
test
cmpsb
jle
popa
ljmp
dec
push
jge
arpl
cmp
jle
cmp
popa
cs
cli
jmp
ljmp
cmp
movsb
test
cmp
mov
sub
jg
in
adc
movsl
lods
movsl
pop
lock
aad
mov
scas
sbb
ror
loope
ret
or
pop
xor
jns
js
jns
in
clc
and
and
push
scas
cmp
arpl
icebp
mov
mov
xchg
mov
inc
adc
jmp
addr16
icebp
sub
insb
sub
cs
inc
inc
jecxz
out
or
inc
and
loopne
out
inc
xchg
les
xchg
enter
mov
dec
in
out
movsl
xchg
add
out
mov
call
sub
and
xor
mov
decb
arpl
mov
jmp
sub
add
push
ds
push
dec
mov
pusha
jae
stos
ret
dec
frstor
mov
pusha
lret
mov
adc
fists
enter
and
shl
push
stos
movsb
push
loope
jbe
hlt
mov
leave
dec
dec
pandn
std
or
int3
and
sar
shll
movsl
aam
dec
cwtl
mov
daa
jae
mov
fsubrl
sahf
imul
int
fcomip
pop
cmpsl
mov
dec
jo
mov
ljmp
icebp
push
mov
or
ja
mov
inc
loop
sbb
xchg
outsl
or
loopne
lret
xorb
dec
pushf
repz
pop
rcll
dec
fdivs
dec
pop
mov
jl
xchg
push
test
enter
adc
fwait
call
mov
ss
lret
mov
psubsb
mov
xor
jno
xchg
mov
bound
nop
sub
movsl
push
xchg
mov
or
and
gs
fs
or
mov
mov
in
rol
xchg
adcb
jnp
push
sbb
fimull
inc
in
xor
cltd
push
inc
leave
mov
into
out
xor
cmp
cmp
inc
mov
popl
push
or
push
xchg
ja
movsl
movsb
jbe
push
test
adc
cmp
clc
incb
enter
cmpsb
sub
xchg
in
loop
jecxz
adc
int3
loopw
scas
push
mov
lcall
add
int
xor
in
scas
sbb
jo
stc
mov
mov
pusha
repnz
cs
jne
arpl
lds
mov
addr16
push
mov
inc
in
inc
test
mov
shrb
das
xchg
dec
and
aam
inc
and
orl
es
cmc
inc
out
in
sti
jne
out
pop
ficompl
dec
pop
nop
push
adc
mov
push
enter
inc
rclb
mov
inc
cmpsl
mov
and
mov
push
mov
push
jno
pop
rolb
aas
jmp
mov
test
in
push
test
fwait
inc
test
dec
xor
jmp
ljmp
mov
pop
jmp
push
mov
das
add
cmp
rcrl
sti
ss
sub
pop
jmp
sub
add
cmp
pop
cmp
insb
lcall
inc
cmp
bound
iret
std
cmp
xchg
and
mov
cli
or
xor
cmp
daa
ja
or
test
jbe
scas
pop
stc
popa
xchg
xlat
sti
cmp
mov
divb
xchg
orl
and
cmpsl
jno
mov
xchg
xor
xor
sti
in
or
jmp
inc
ret
sub
in
pop
in
test
lds
test
fstpt
push
pop
fsubrl
in
xor
cs
movsl
sbb
xlat
dec
push
fdivl
lods
rclb
mov
stos
jg
hlt
orl
ja
pop
popf
mov
cltd
lods
add
xchg
lds
mov
in
cs
fmulp
xlat
and
and
xchg
and
mov
adc
push
mov
sbb
mov
cmpsl
mov
and
ljmp
lods
sbb
sub
pop
sti
pop
sbb
dec
sbb
xchg
testb
push
sbb
cmc
push
dec
mov
pop
add
addr16
imul
into
add
lcall
mov
jno
push
or
xchg
inc
cmc
xchg
inc
aas
jno
dec
xlat
mov
lock
mov
outsb
verr
scas
rol
xchg
shlb
xchg
push
push
jo
inc
cmp
mov
ss
lods
aam
in
xchg
cmp
aaa
in
mov
je
and
xlat
fcoml
lcall
jle
inc
ret
in
stos
sbb
cmp
jns
mov
jmp
xor
mov
cltd
mov
push
lods
inc
and
cmp
sub
mov
movsb
sbb
test
lret
cmp
outsl
pop
mov
test
xor
lds
cld
mov
in
jmp
mov
pop
pop
leave
sub
sub
bound
es
dec
cmp
jl
inc
iret
lret
cmp
mov
in
adc
clc
loopne
jnp
push
scas
daa
je
or
cmp
push
cmpsb
push
jl
push
jno
inc
jp
cmp
insl
adc
cltd
adc
and
add
je
xchg
jp
scas
sub
vpmacsdql
push
jmp
roll
mov
mov
sbb
mul
imulb
inc
orb
cmp
popf
mov
pop
xchg
arpl
stos
push
mov
add
inc
aas
mov
call
insb
inc
xchg
aad
sahf
mov
scas
pop
out
aas
clc
jl
and
ja
or
xchg
pop
mov
insb
sub
cwtl
popa
rcll
jnp
loopne
dec
fdivl
fst
ret
and
jnp
dec
dec
lock
in
jmp
nop
mov
dec
sub
popf
lret
imul
adc
dec
adc
ret
sahf
push
jmp
addb
pop
shl
push
cltd
fstl
jp
mov
mov
adc
jl
jp
mov
mov
nop
sub
inc
cmpsl
pushf
loopne
push
scas
pop
inc
shr
adc
inc
ret
add
std
add
loopne
dec
jecxz
scas
jle
aad
fmull
movsl
mov
mov
pushf
mov
cmp
lcall
stc
pop
hlt
ja
dec
dec
pop
mov
aam
insl
inc
cmp
xor
dec
adc
xchg
mov
adcl
pop
mov
xor
pop
xor
dec
or
mov
push
jbe
sub
cmp
dec
scas
loop
imul
sti
dec
adcb
scas
jle
in
inc
mov
push
sahf
testb
test
xchg
mov
sti
or
leave
std
adc
outsb
aam
ret
xor
pop
icebp
mov
jg
or
inc
and
lcall
or
push
inc
cltd
out
js
mov
out
xchg
movsl
lods
push
xor
ljmp
jbe
in
dec
and
mov
cmp
push
fstpt
movsl
sbb
ror
or
xor
imul
imul
lretw
arpl
aas
les
xlat
pushf
dec
mov
stc
imul
push
dec
add
lods
pop
lret
insl
mov
xchg
pop
pop
mov
jns
psrad
mov
lahf
cmp
inc
fsts
mov
inc
sbb
add
add
adc
loop
repz
cld
dec
pmuludq
push
xor
loopne
dec
lds
out
sbb
jecxz
insb
lcall
cs
daa
jae
pop
jg
mov
sub
aaa
imul
xor
lock
fcmovb
xor
sar
jle
adcl
mov
test
int
add
je
bnd
jnp
in
lea
xor
or
adcl
pop
es
ret
dec
imul
lock
mov
or
push
xor
addr16
add
pop
sbb
mov
clc
jnp
mov
xchg
xchg
jo
inc
fmull
enter
ja
sub
pop
shlb
pusha
push
cmc
and
push
add
jbe
mov
aam
mov
shll
loope
adc
mov
or
push
and
and
push
fldl
xchg
dec
pop
mov
mov
mov
push
mov
cmp
jmp
stos
push
jg
std
push
hlt
cmpsl
inc
xor
dec
fldt
stc
daa
pop
xor
push
arpl
adcl
add
dec
enter
push
xor
mov
fcoml
lahf
jp
xchg
scas
ss
mov
and
mov
pop
xor
enter
out
orl
shr
test
jp
xchg
ja
shrl
sub
aad
ror
jne
pop
adc
mov
pop
scas
int3
ret
mov
push
inc
dec
shrb
sbb
jb
mov
cwtl
mov
mov
push
mov
jg
mov
lods
cmp
mov
fists
xlat
adc
inc
outsb
mov
add
das
stos
sub
sbb
cmp
cmp
icebp
jae
dec
loopne
push
scas
fildl
ret
jmp
xor
fs
mov
and
mov
pop
in
cmpsl
popf
cld
sub
mov
xor
pushf
mov
xchg
cmp
sbb
jae
fucomip
mov
clc
xlat
out
insl
aas
adc
lret
mov
sbb
mov
shrb
test
ja
mov
arpl
lds
sub
popa
movsb
frstor
sbb
ret
pusha
cmp
xchg
add
xchg
xor
xlat
xchg
xchg
inc
push
lcall
add
cltd
clc
mov
scas
stc
dec
sbbb
xor
mov
mov
jmp
xor
jb
or
or
mov
jo
out
add
inc
popf
pop
loop
jns
xchg
mov
xchg
aas
rolb
pop
xchg
pop
cmp
mov
in
daa
enter
test
xchg
fldcw
mov
xchg
push
aaa
lea
adc
fdiv
imulb
mov
push
leave
jecxz
mov
les
inc
in
dec
test
stc
push
cmpsb
outsl
mov
aad
inc
test
xorps
sub
iret
in
push
data16
mov
or
lds
cld
jno
pop
shll
push
test
mov
pop
add
sub
rolb
rclb
push
mov
adcb
fwait
mov
hlt
cs
mov
cltd
add
mov
push
mov
aam
inc
lahf
dec
imul
mov
roll
fwait
movsb
cli
sbb
fwait
icebp
cmpsl
leave
insl
stos
mov
mov
push
out
pusha
mov
stos
adc
mov
push
xor
sbb
cli
pop
and
push
cmp
sbb
fcmovne
lea
inc
add
test
loopne
fstpl
ret
test
and
bnd
mov
out
lods
cld
mov
mov
fisubrl
jbe
outsb
dec
mov
repnz
adc
xor
mov
jge
add
bound
cmp
mov
jae
mov
cwtl
inc
ja
dec
or
shrb
push
lods
push
sub
inc
cmp
mov
add
dec
sarl
int3
aad
cmp
out
fcoms
or
jl
mulb
pop
cmpsb
mov
pop
sub
cmc
mov
je
shlb
and
test
mov
ds
out
xor
icebp
sbbb
cld
jecxz
scas
sbb
xor
repz
addr16
inc
es
clc
or
jp
inc
out
sti
pop
push
mov
mov
dec
pushf
push
dec
xchg
push
subl
das
cwtl
inc
push
jb
enter
ds
mov
outsl
cmp
mov
jnp
loope
cmp
pop
and
xchg
jbe
or
stc
adc
inc
sub
xchg
test
push
mov
jns
or
call
int3
in
fucomip
lcall
push
ret
rorl
jbe
sub
add
mov
pop
xor
lcall
jb
dec
fwait
scas
mov
inc
inc
inc
clc
int
addb
ret
rcrl
cmpsl
mov
dec
cmpsl
xchg
bswap
inc
sub
mov
sub
jne
lret
dec
xor
and
sbb
xor
and
dec
dec
pop
pusha
pop
sub
popf
pshufw
pushf
ja
xchg
out
or
flds
or
or
adcl
and
mov
into
sub
xor
rolb
mov
dec
mov
sub
loop
push
scas
test
icebp
andl
imul
xchg
lea
into
in
inc
add
addr16
xlat
add
jmp
cmp
adc
arpl
xor
mov
push
loope
int
pop
xchg
jnp
sub
pop
shl
ret
stos
shl
test
push
adc
in
aas
xor
add
imul
ret
mov
icebp
fbstp
jecxz
stos
pop
cmpsb
pop
pop
lods
test
fmull
popa
add
lgs
mov
test
mov
loop
dec
xchg
lock
in
sub
xor
dec
dec
scas
jno
call
and
cltd
xchg
lds
pusha
or
repz
scas
mov
and
inc
dec
jo
pusha
mov
inc
imul
iret
sub
loop
cltd
into
movsb
int
sbb
int
dec
jno
and
popf
cmp
sbbb
sub
pop
loop
aas
sub
out
pop
mov
idivb
adc
adcb
push
sti
in
js
daa
sub
sbb
adc
push
inc
mov
inc
and
stos
push
inc
popf
out
mov
repnz
or
adc
mov
push
add
jno
rorb
aaa
scas
dec
mov
popf
cli
lods
jp
push
mulb
data16
push
aaa
daa
inc
and
nop
xchg
inc
xchg
repz
mov
out
adc
insb
pop
mov
xchg
mov
in
xor
je
arpl
mov
cmc
sbb
rcll
push
orl
leave
incb
aas
dec
xor
je
nop
pop
stos
xchg
out
dec
pop
nop
push
sub
test
push
into
aad
bound
mov
cmovl
repz
into
jnp
enter
sbb
leave
dec
sbb
push
push
xlat
push
gs
movsb
mov
pop
and
in
sbb
jecxz
add
and
jae
popa
pop
jmp
push
or
xchg
mov
rcrb
jb
or
pop
sub
dec
push
loopne
xchg
mov
push
pop
push
in
push
xlat
fst
aad
sbb
mov
xchg
push
cmp
cwtl
imul
jnp
cmpb
mov
cld
cmp
nop
repnz
push
pop
mov
cld
lds
daa
fisttpll
into
int
cmpsb
cmp
mov
clc
cmp
inc
bnd
pop
push
cmp
adc
je
dec
and
loope
out
sub
inc
xor
loope
mov
inc
insl
int3
xchg
pop
insb
nop
cld
or
add
call
aas
std
pushf
fdivrl
adc
mov
mov
mov
fdivs
leave
ret
jecxz
xchg
inc
sbb
jmp
push
into
lock
jno
movsl
lods
pop
cmp
shll
outsl
loopne
dec
or
xlat
test
or
or
mov
ja
push
test
fs
sbb
pop
jg
fisubs
inc
sub
arpl
pop
stos
push
push
lds
shlb
mov
jae
lock
add
out
sbb
or
xor
ss
fisttps
xorb
inc
adc
scas
aam
mov
mov
es
cld
cmp
fisttps
sub
cmp
aaa
lods
sbb
jmp
bnd
adc
les
fmulp
sub
dec
xchg
cmc
mov
sahf
push
call
jmp
fildl
data16
mov
ret
mov
or
xor
int3
dec
adc
and
xor
in
push
adc
cmp
lods
mov
ja
xchg
mov
faddl
test
jb
test
xor
int3
es
je
pop
les
aaa
ret
xor
sub
pop
add
test
incl
mov
shl
cltd
adc
aaa
adc
adc
push
adc
test
adc
push
mov
jle
sbb
dec
xchg
cmp
enter
scas
xor
insl
sbbb
repz
adc
sub
cmpsb
out
inc
push
jns
lods
lret
ret
mov
push
add
jae
push
fimull
in
cmpsb
ljmp
sub
call
cmp
mov
add
mov
pop
xchg
pop
sbb
mov
bound
mov
addr16
add
dec
sbb
lea
mov
jns
mov
movsl
fsubrs
sbb
cltd
in
add
cmp
dec
adc
mov
pop
iret
sub
jo
push
cs
jg
lret
dec
cmp
loop
and
jl
nop
push
fldt
jg
or
dec
cmp
xor
rorb
ret
jb
faddl
loope
into
xchg
dec
cmpsb
call
stos
push
scas
addr16
xchg
add
subb
adc
mov
call
adc
sub
mov
repz
sub
push
lock
xor
std
repz
cmp
or
out
or
jns
sub
int3
and
and
xlat
or
lcall
ret
jecxz
xor
push
fcmovbe
inc
pop
mov
adc
aad
and
mov
adcl
xchg
cltd
dec
popf
jns
mov
cmp
push
pop
pusha
aaa
arpl
mov
dec
cmp
jne
and
fwait
sub
jl
loop
add
adc
arpl
aam
push
fisttpll
stos
adc
es
cmp
inc
and
rep
mov
cmp
jg
aas
dec
out
insb
or
out
gs
adc
addr16
mov
or
add
add
xchg
add
mov
pop
inc
addps
xor
push
cmp
pop
inc
dec
ja
cmp
cmp
adc
and
adc
std
inc
pop
outsb
and
insb
mov
mov
dec
xor
aad
rolb
lds
pop
pop
sub
lods
sub
dec
mov
mov
gs
int
stc
jmp
pop
fdivs
or
and
out
mov
iret
xchg
cmp
shrl
insl
sub
or
push
je
lea
repnz
cmp
jmp
jmp
ret
inc
xor
in
stos
bound
xlat
arpl
push
in
cmpsl
jge
arpl
es
add
aam
jbe
loopne
adc
test
sub
pop
jp
lds
inc
cmp
jbe
pop
jg
xchg
movsl
or
dec
popl
push
xor
push
ss
sub
mov
es
sub
decb
mov
sbb
ss
cmpsl
or
insl
push
lret
lds
in
xchg
mov
shll
push
int3
stos
push
sbb
addr16
scas
mov
add
divb
mov
pushf
ret
pop
loop
jmp
lret
inc
out
in
bound
stos
in
test
clc
fwait
scas
mov
sbb
add
sub
popa
sub
movsb
cli
jp
dec
fdivr
push
xchg
mov
and
push
cmp
daa
cmp
movntps
cmp
push
lret
sub
mov
bndldx
dec
jne
lds
shlb
adc
out
push
pop
xchg
das
and
test
in
jo
daa
cmp
test
dec
jae
pop
mov
inc
iret
in
call
lret
arpl
pop
add
cwtl
ljmp
xlat
arpl
test
sub
mov
rcrb
mov
pushf
dec
fimull
notl
lcall
sbbb
mov
dec
loope
mov
cmp
popa
lea
push
push
das
scas
test
cmpsb
sbb
mov
cmp
cmp
das
cld
ror
and
test
mov
sub
jge
fwait
lods
push
in
pop
add
add
testb
jecxz
decl
push
or
dec
ret
push
jl
jnp
hlt
loop
outsb
shll
adc
in
mov
orb
addb
lret
dec
ficoms
insb
inc
sub
sub
and
xchg
inc
and
push
jb
test
push
mov
push
mov
or
add
loope,pn
push
xor
test
adc
push
or
pop
mov
dec
xchg
inc
in
xchg
fwait
call
imul
inc
ret
xchg
dec
jmp
cs
iret
clc
fwait
xchg
sub
or
xchg
mov
hlt
mov
imul
cwtl
stos
push
or
push
xorb
xor
sub
adc
repnz
mov
dec
mov
ljmp
fstpt
sbb
or
or
lods
mov
rcrb
lods
lret
push
and
lock
jno
movl
xor
pop
jno
lods
add
cltd
adc
movsl
add
lea
mov
int3
dec
ljmp
jo
push
outsb
sti
mov
xchg
mov
xor
inc
ljmp
sbb
inc
xchg
enter
pop
cmpsb
push
pop
adcl
adc
mov
lcall
or
jl
incb
push
push
mov
mov
in
or
sbb
inc
cmp
sbb
repnz
xlat
xorb
cs
aad
sbbl
xchg
mov
ret
cmp
cmp
bound
sub
push
pushf
aas
out
or
xor
xlat
pop
pop
sahf
fadds
xor
xor
loop
insl
aam
or
xchg
ret
pop
jne
testl
adc
and
xor
stos
clc
orb
ss
lods
cmpsb
mov
cmp
test
insb
push
add
hlt
pop
hlt
lcall
ja
imul
push
jle
pop
mov
sti
sub
pop
dec
jge
pop
ret
sbb
jge
out
or
insl
push
imul
aas
push
mov
movsl
loopne
ds
in
mov
xchg
add
mov
ret
aaa
pop
mov
xchg
mov
cmpsb
or
leave
or
mov
xchg
fcomps
fmull
std
cmp
push
sbb
xor
push
mov
rcll
popa
inc
mov
rorl
sbb
data16
mov
xlat
lods
mov
popa
fisttpll
xchg
lret
xor
sub
push
cmc
add
hlt
call
jecxz
test
push
hlt
mov
or
jmp
ret
or
icebp
rorl
jmp
fwait
aad
add
or
jns
xor
jmp
inc
aas
add
ja
xor
iret
push
incb
xchg
mov
das
movsb
mov
xor
jne
jnp
enter
dec
mov
inc
aad
dec
jecxz
shlb
orl
push
mov
mov
mov
loop
dec
add
push
mov
inc
cli
push
enter
xor
jb
sahf
xor
mov
push
stos
jo
and
lock
es
aas
dec
cli
repnz
int
lock
jnp
popf
mov
cmp
lods
pusha
test
jmp
aam
pop
insb
sub
xchg
bound
lods
out
inc
arpl
adcl
pop
aad
cli
call
jb
lds
and
adc
lcall
gs
mov
jnp
xchg
outsb
aam
scas
inc
cmc
and
mov
dec
xchg
inc
ds
mov
add
sbb
cmp
leave
adc
in
fadd
inc
jp
xchg
lds
in
push
out
notb
or
mov
popa
clc
or
jecxz
ss
out
mov
add
inc
mov
mov
loope
in
push
sahf
jno
push
mov
in
mov
and
xchg
add
aaa
lock
call
in
enter
mov
rolb
jl
mov
or
sub
popf
fmuls
jecxz
jne
and
int
sub
and
jge
dec
insl
cmp
lret
loop
daa
in
push
push
xchg
cmp
ljmp
test
mov
mov
jnp
mov
fstps
cmpsl
mov
out
in
jnp
or
jbe
rcll
xchg
push
adc
bound
xchg
push
ds
mov
fisttpll
cli
mov
adc
lods
pushf
add
pop
fidivrs
lret
jae
ja
arpl
aaa
mov
xor
aas
ja
test
mov
sbb
out
lret
adc
cmpsl
ret
ret
mov
popa
and
ja
sbb
and
dec
xchg
adc
pop
push
roll
inc
les
xchg
rorb
adcb
xlat
add
aas
ret
in
and
mov
out
xor
icebp
sbb
rol
and
push
jp
ljmp
xor
or
movsl
inc
imul
and
pop
test
sbb
scas
cmp
xchg
xchg
jae
cltd
adcb
out
iret
stc
popf
aas
test
sarb
cli
or
mov
mov
xchg
insl
jbe
fiadds
cs
cmp
mov
mov
ss
cmc
into
jp
cmc
adc
or
xlat
mov
cmp
inc
aad
sbb
sarl
sub
mov
shrl
repnz
aaa
outsl
cmp
xor
sub
ret
sub
lret
pop
fdivrs
sub
les
dec
xchg
ret
sti
adc
sub
pushf
push
jg
adc
mov
roll
out
push
outsb
inc
int3
out
push
dec
lahf
dec
xor
xor
mov
pusha
in
popf
push
inc
and
push
push
jne
pushfw
dec
pop
lcall
sub
xchg
nop
iret
test
rolb
cmc
fisubrl
xor
scas
out
push
and
ljmp
cmpsb
in
jno
pushf
sbb
dec
pop
sub
push
cmp
or
stos
cmp
test
inc
mov
sahf
xor
add
push
adc
rclb
cmpb
repz
sub
xlat
movb
repz
repz
inc
lea
out
lret
cmp
sbb
jb
cmp
adc
mov
mov
push
iret
or
inc
and
dec
cmp
or
out
cmp
or
xchg
xchg
push
xor
sub
mov
or
std
ja
jle
xchg
inc
or
cmpsl
scas
mov
and
nop
fs
xor
in
iret
dec
out
mov
mov
nop
jae
ror
fwait
ljmp
in
cmpb
sbb
sbb
int
or
je
adcb
lods
das
aam
pop
mov
cmp
imul
mov
cwtl
cld
mov
and
sarl
outsb
xor
repnz
loopne
xchg
add
fmull
mull
ret
leave
inc
push
sub
mov
xchg
sub
lcall
mov
sub
pop
cmp
test
cmp
mov
dec
and
adc
out
in
mov
lods
xchg
cmc
pop
adc
popf
popf
adc
leave
ss
adc
xchg
inc
jecxz
xchg
jecxz
mov
aad
enter
cmp
push
out
scas
loop
ret
mov
jae
xor
mov
es
sub
sbb
in
add
sub
mov
loop
mov
lahf
xor
sub
mov
mov
lret
add
iret
xchg
dec
xchg
jo
pop
lret
jge
xor
insl
xchg
stc
mov
shlb
fcomps
into
into
xchg
mov
aas
cli
jmp
rorb
or
int
stos
test
insb
cmpsl
scas
ret
mov
fistpll
stos
rorl
pop
out
shlb
xor
fiadds
fildl
nop
sub
in
mov
ret
in
mov
push
inc
stos
cwtl
mov
add
jecxz
lods
push
lock
push
mov
adc
sub
mov
sub
adc
cmp
pop
add
shl
in
cmp
daa
pop
and
test
rcll
shrl
and
pusha
jo
jbe
adc
inc
in
cmp
add
jge
cmpsl
aam
adcl
and
sub
push
inc
sub
sub
xor
mov
daa
and
jl
xchg
das
or
sub
insb
sbb
pop
ficomps
xchg
adc
mov
push
rcrl
lcall
int3
mov
inc
out
pop
out
popf
int3
sahf
pop
pop
notb
addr16
mov
jns
shrb
cmp
pop
cmpsb
lds
mov
sbb
jns
add
fwait
xchg
icebp
movsl
xchg
loope
pop
xchg
loop
add
adc
jb
in
or
aaa
fiadds
leave
mov
loop
or
cltd
movsb
das
aaa
mov
ror
mov
mov
jb
cld
dec
outsl
inc
or
xchg
adc
imul
mov
mov
mov
lock
divl
scas
fisttps
or
xchg
fwait
xchg
cltd
shr
add
dec
bnd
gs
lods
push
sub
hlt
add
js
jnp
adc
out
in
adc
out
call
or
xchg
mov
xchg
sahf
push
ror
insb
lock
mov
rcrb
mov
clc
cmpsl
push
push
and
dec
mov
hlt
pop
fildll
ss
mov
out
mov
jmp
cwtl
or
jge
jns
fstp
jns
add
push
mov
push
arpl
jae
inc
pushf
outsl
pop
jnp
cmp
enter
shrb
jl
jbe
in
adc
jge
dec
mov
pop
cltd
bound
fmuls
and
cmpsl
fcomp
mov
adc
lock
mov
mov
repz
push
ljmp
push
inc
movb
adc
call
cmp
pop
fisttpl
mov
inc
out
cmpsb
pusha
out
gs
jno
add
popf
ret
add
jmp
inc
scas
adc
outsb
and
into
insl
enter
cwtl
fisttpll
out
mov
clc
sub
dec
lahf
call
sbbb
aas
pop
xchg
mov
cmp
fsubrs
stc
ror
jmp
add
xchg
outsb
add
out
add
sbb
xor
ss
adc
pop
xor
loop
jl
loop
mov
pop
pop
jecxz
lret
scas
and
movsl
in
pop
cs
mov
popf
lea
je
or
xor
insl
xchg
subb
mull
cmp
movsb
pop
mov
add
outsb
ja
iret
dec
pop
fisttps
pop
inc
test
stc
je
inc
push
inc
dec
pop
dec
std
addr16
out
mov
cmp
das
popa
lret
lcall
pop
sbb
push
cwtl
jle
pushf
mov
inc
int
pop
ror
sbb
dec
rclb
out
lds
mov
push
dec
popf
popf
jae
ret
xor
js
xchg
mov
gs
mov
test
or
incb
and
gs
add
inc
sub
in
jb
movsl
outsl
cmp
add
js
test
sub
push
test
sub
fwait
jmp
shr
xchg
in
mov
enter
cs
inc
lret
gs
inc
or
rolb
lds
cmp
stos
out
dec
xchg
inc
outsl
xchg
addr16
mov
jge
xor
sub
mov
push
pop
fs
inc
or
xchg
push
jno
or
jae
test
bound
sbb
jne
xorb
jge
add
push
jnp
loopne
repnz
iret
imul
push
cmp
inc
call
and
gs
and
cmp
sbb
lcall
mov
mull
pusha
jb
test
pop
out
push
jge
bound
shll
arpl
js
hlt
push
mov
imul
adc
pushf
lahf
int3
or
pop
sbb
pop
xlat
jbe
sti
adc
mov
sub
repz
mov
add
xchg
adc
inc
ja
dec
fcomps
repnz
xchg
mov
out
cs
jo
push
notb
pop
push
loopne
xchg
push
or
adc
push
imull
fldenv
add
ret
ror
sti
bound
sbb
inc
adc
icebp
data16
stc
push
loop
loop
and
inc
jmp
inc
stos
jno
outsb
mov
add
popf
hlt
bound
cmpsb
les
sbb
mov
test
dec
xchg
shl
cltd
stos
and
mov
pop
popa
out
cwtl
int3
bound
out
and
pop
mov
jmp
lds
mov
aam
dec
xchg
test
rcl
das
aas
cmp
std
inc
jbe
bnd
mov
or
cmp
int3
stc
sub
and
adc
imul
cmp
in
leave
sti
fidivrl
addr16
xchg
pop
jns
lods
cmpsl
push
insb
aas
cltd
or
mov
mov
xor
iret
sbb
lock
cli
pop
int3
mov
push
movsb
mov
jae
xchg
pop
mov
and
mov
arpl
pop
je
inc
sub
jnp
or
aaa
pop
aam
rcr
roll
je
fmull
add
sub
add
sub
xchg
dec
cmp
pop
cmpsl
inc
fs
mov
or
cmp
lret
inc
orl
std
pushf
icebp
in
sub
pop
fwait
dec
daa
addr16
out
stc
div
popf
and
test
mov
arpl
inc
mov
sub
pusha
cmpl
scas
in
cmp
imul
lods
cmovae
aam
je
adc
jns
sub
jbe
je
mov
lock
push
mov
fldl
inc
iret
imul
mov
lods
inc
bound
cmp
pop
aas
jg
aaa
push
xor
mov
mov
arpl
aaa
movsl
notl
sub
fwait
inc
aam
xchg
pop
mov
push
out
pusha
add
sbbb
fwait
lock
das
hlt
pop
add
mov
sub
push
cmpsb
cmp
push
jae
pop
ss
mov
xor
mov
jne
adc
in
xor
cmp
sti
fdivr
mov
push
mov
in
xchg
jne
in
and
mov
mov
fs
leave
pop
mov
jbe
in
es
into
jl
cmc
mov
add
pop
cltd
push
pop
das
inc
std
scas
shlb
cmp
cmp
dec
jae
out
jnp
cmp
sbb
imul
push
push
insb
mov
pop
addr16
jg
push
pop
or
movsb
shrb
xchg
andb
dec
pop
dec
insl
out
jbe
sub
sbb
cmpsl
inc
add
pop
and
cld
mov
orl
mov
lcall
int3
pop
cmovbe
mov
xchg
ja
xor
repnz
scas
mov
jb
icebp
adc
lods
push
sar
scas
pop
scas
dec
mov
mov
fldenv
cmc
frstor
test
mov
push
pushf
cmpsb
pop
jg
cltd
mov
cwtl
sti
push
imul
sub
aas
dec
fldl
dec
mov
lea
cli
aad
cmp
sub
lcall
or
inc
jl,pn
sub
push
jbe
jl
fcompl
xor
sbb
fsqrt
outsl
cmp
xlat
ds
dec
cmp
mov
cwtl
inc
inc
data16
sbb
push
dec
jnp
rcr
addl
test
arpl
mov
mov
mov
cmpsb
xchg
addb
dec
bound
sub
inc
test
jb
test
jecxz
addps
xor
cmp
mov
and
enter
insl
imul
test
jno
dec
jg
cmp
aas
mov
sbb
xor
movsb
cmpsl
out
shlb
mov
mov
je
jns
in
sub
repnz
mov
outsl
mov
dec
aas
aas
or
scas
lods
jae
mov
xor
subb
addr16
sub
loope
pop
pop
push
dec
loope
mov
push
or
lahf
sub
mov
inc
ffree
fwait
sti
arpl
test
andl
int3
cmp
ret
jae
or
into
or
aam
xchg
jno
or
hlt
jne
out
mov
roll
popa
dec
pop
imul
and
aas
aaa
popw
ficomps
ret
jle
fldenv
in
adc
hlt
aad
and
ja
out
adc
fldenv
sbb
jnp
inc
push
es
sbb
stos
mov
jno
cmpsb
pop
into
test
clc
mov
out
imul
xor
or
fisubrl
sahf
out
popf
lahf
cwtl
pop
into
pop
sbb
mov
fisubrl
pop
xchg
scas
push
inc
or
cltd
dec
xchg
pop
andl
mov
jne
lods
mov
pop
push
psubusw
repnz
ret
arpl
xor
mov
mov
jae
lods
fstl
rcll
out
es
or
sbb
mov
inc
into
or
adc
mov
int
pop
cltd
or
and
add
pusha
inc
pushf
jae
daa
jl
mov
adc
popa
mull
ds
push
inc
or
loope
add
push
aam
in
aas
jbe
mov
mov
mov
xor
sbb
mov
mov
leave
fisttpll
cwtl
xor
sub
pop
and
bound
cmp
out
cli
mov
movsb
sbb
mov
inc
sbb
xchg
pushf
stos
and
pushl
or
aad
inc
jle
in
mov
and
scas
adc
movsl
pop
jns
pop
fisubl
andl
cmp
push
fidivl
scas
iret
push
sub
xchg
jno
dec
sbb
cmp
jnp
cs
sub
push
add
test
inc
sub
daa
push
adc
icebp
fidivrs
cld
fucomp
pushaw
lahf
xchg
jp
insl
rol
push
inc
pop
push
es
loopne
loope
mov
dec
mov
out
inc
shll
xor
leave
or
sbb
rcrl
add
push
enter
addr16
iret
dec
pop
jp
dec
xchg
dec
addl
scas
add
add
xchg
or
mov
mov
sbb
jb
test
jl
pop
push
xor
adc
pop
pop
adc
add
adc
sub
stos
lret
mov
mov
ljmp
cmp
cmp
sbb
mov
dec
aad
jbe
xchg
pop
out
jle
in
sbb
cld
xchg
repnz
sbb
xchg
jo
ss
ret
dec
movsb
popf
aad
fcomps
mov
pop
notb
mov
stos
sub
lds
xor
idivb
sub
mov
inc
fwait
stc
dec
leave
fs
sarb
pop
xchg
fnstenv
push
jo
dec
mov
adc
pop
fisttpl
popf
aad
loope
jl
cmp
fcoms
dec
bound
jmp
icebp
rolb
cmp
clc
jo
and
pop
lahf
pop
xchg
jge
inc
ljmp
es
jb
lret
or
in
sub
mul
fs
pop
pop
lock
aas
fidivs
push
test
push
repz
call
data16
xchg
dec
xchg
rclb
nop
mov
pushf
hlt
lret
or
jns
incl
popf
push
dec
mov
adcb
ret
mov
std
shll
frstor
jg
pop
dec
pop
popf
imul
aaa
mov
mov
stos
scas
inc
hlt
aad
sbb
push
push
mov
loop
int3
daa
mov
cmp
jp
or
xchg
mov
test
into
xchg
xor
nop
pusha
sub
push
inc
std
cmpl
outsb
pop
fidivs
repnz
jb
or
pusha
inc
imul
xchg
out
mov
fildl
pop
and
lods
jg
outsb
aam
stos
in
pop
pop
xlat
cmpsb
cmpsb
mov
addb
and
dec
sbb
cld
cmp
xor
test
inc
stos
push
xchg
outsl
push
cltd
scas
aam
mov
andb
and
aad
xchg
dec
adcb
loopne
stos
pop
lock
xor
out
dec
mov
push
push
xchg
jmp
and
push
ret
cmp
sbb
sbb
addl
cmp
psubb
loope
sbb
xchg
mov
lcall
xor
mov
jo
push
je
sbb
xchg
fnstcw
sbb
aaa
jae
fistpll
sbb
cmpsb
lret
jl
or
in
cld
sub
push
mov
mov
jno
lods
daa
sbb
es
cmp
adc
sub
and
mov
hlt
mov
lret
inc
sub
sub
ja
and
iret
mov
mov
mov
outsl
fs
mov
xchg
or
mov
cli
pop
cmp
push
iret
icebp
out
shlb
jmp
loop
or
xchg
cmp
push
push
and
inc
or
loop
xorl
sub
repnz
jne
shl
cli
fnsave
fs
pop
shrl
out
sub
pop
xchg
out
mov
mov
mov
mov
lahf
adc
sub
jae
xor
inc
rcrl
incb
je
adc
adc
and
nop
mov
mov
xchg
gs
in
imul
add
imul
and
dec
or
enter
popl
jns
mov
sahf
inc
lods
pushf
loopne
xchg
inc
push
jle
movsb
pop
ret
ljmp
lret
fsubl
stc
loop
nop
adc
call
jg
and
xchg
push
push
pop
insb
pop
std
pop
mov
cmpsb
and
hlt
sub
pop
je
scas
mov
out
dec
icebp
and
inc
loopne
xor
incl
adc
movsb
pop
lcall
cmp
lock
lock
mov
cmp
add
adc
inc
in
jp
push
addb
mov
shll
xor
inc
cli
movsl
jae
mov
xor
dec
repnz
iret
flds
addr16
mov
aaa
les
mov
loop
mov
mov
cmc
aad
cs
and
fstl
dec
jl
mov
fisttps
jle
mov
push
jp
test
mulb
sarb
add
dec
int3
mov
dec
ds
jle
cld
sbb
pop
or
fnclex
or
jmp
jp
loope
lock
fldt
loopne
lcall
xchg
icebp
enter
mov
outsl
push
sub
fucomp
adc
xlat
int
cmpsb
pop
push
push
adc
xchg
fs
ficoml
arpl
mov
pop
frstor
cmp
sub
fcomi
testb
aam
movsl
inc
mov
loopne
xor
ret
push
clc
lret
lds
imul
das
dec
orb
jns
jae
xor
or
mov
cli
push
and
mov
iret
mov
fstpl
mov
sbb
and
push
imul
and
nop
mov
aad
and
mov
add
push
in
rorb
cmp
mov
loope
sub
jl
and
push
sub
mov
sbb
icebp
dec
repz
push
xchg
hlt
js
aas
int
leave
jb
jle
cmp
or
daa
pop
in
hlt
lods
loope
es
cwtl
jne
aam
pop
xchg
lcall
cs
popf
and
or
mov
fwait
scas
stos
in
leave
jg
sahf
in
lock
xchg
add
sub
inc
sbb
mov
stc
and
jno
push
repnz
call
push
std
and
lds
add
and
ret
lock
inc
adc
data16
loop
and
push
add
aad
and
loop
and
dec
xor
sbb
orb
and
pushf
jns
sbb
jb
mulps
push
adc
and
std
mov
popa
pop
dec
xor
addr16
and
inc
xchg
pop
xchg
mov
fisttpl
fcomps
or
sub
movsb
in
mov
add
and
push
scas
pop
out
sti
inc
dec
mov
jns
fucom
push
adcb
or
pop
ss
aas
sarl
cmpsl
ret
cli
iret
sub
cwtl
jmp
lods
ficomps
adc
std
movsb
call
or
testl
leave
fisttpll
fcoml
jb
outsl
cmpsl
mov
dec
neg
sbb
lods
mov
xor
mov
push
jmp
pop
popf
xchg
jns
xchg
test
ljmp
stc
mov
push
jl
jno
into
fstpl
mov
xor
and
pop
or
mov
cltd
filds
lods
mov
cmp
movsb
roll
push
iret
leave
xchg
hlt
pop
mov
call
jp
dec
arpl
jp
ljmp
test
xchg
dec
test
in
and
dec
sub
or
call
xchg
jne
jmp
sbb
rcll
lret
xchg
or
fldenv
mov
jmp
and
dec
sarl
jge
or
sub
lahf
js
push
icebp
cmp
into
shlb
push
inc
cltd
mov
and
mov
stos
jns
sbb
mov
xor
pop
jl
stos
lcall
pusha
jne
aas
in
add
loop
pusha
fists
data16
push
repz
fiadds
cmp
jns
or
movsl
mov
lds
xchg
fidivrs
or
ret
inc
in
inc
into
sub
cmpsb
pusha
rcrl
insb
sti
jne
decl
loop
xchg
xchg
jle
out
pop
lds
imul
add
xchg
movsl
or
mov
pusha
adc
pushf
mov
cwtl
lds
jmp
movsl
cltd
jns
lods
rolb
pop
or
mov
js
mov
lea
sarl
enter
addl
or
aaa
scas
xchg
test
nop
aad
mov
icebp
hlt
fwait
daa
mov
sbb
xlat
das
icebp
push
cmpsl
xlat
movsl
mov
jecxz
js
mov
and
push
lret
mov
mov
cmpsl
inc
clc
and
stc
or
sbbb
and
adc
lods
outsl
xchg
sub
mov
nop
or
addr16
out
aad
and
data16
sbb
imulb
das
arpl
loopne
rcl
dec
dec
or
arpl
pop
adc
xor
rclb
dec
lcall
filds
mov
xchg
pushf
push
js
pop
jo
dec
mov
aaa
push
rcll
dec
lods
scas
cltd
mov
pop
lahf
test
cli
pop
jae
test
cmp
jae
adc
gs
fiadds
mov
cmp
mov
dec
idiv
outsb
inc
in
add
adc
roll
in
dec
rcr
out
dec
xor
shll
out
xor
lock
testl
mov
jb
in
std
or
je
push
dec
call
pop
lds
jae
ss
mov
mov
sub
aaa
sub
xor
loope
cmp
sbb
jecxz
dec
icebp
fcompl
dec
insl
jbe
aas
jo
xor
stc
lahf
sub
add
xchg
jp
mov
sbb
pop
jo
and
jnp
nop
pushf
pop
das
pop
stos
push
push
xor
cld
sarb
enter
mov
add
movsb
ss
dec
pop
pop
add
xchg
jg
aas
ss
xor
cmc
or
sarb
sbb
mov
testl
iret
cli
fsubrl
and
pop
jecxz
jecxz
enter
out
pop
lcall
out
ret
adc
int
imull
mov
or
pop
jae
dec
inc
mov
mov
sbb
mov
jbe
xchg
sbb
sbb
and
lcall
push
mov
inc
cs
ds
in
xlat
push
and
jnp
mov
fimuls
sti
gs
fidivs
add
pop
pushf
ret
or
bound
lods
loopne
jnp
in
xchg
sbb
shll
dec
int
xchg
fwait
add
shlb
adc
and
jge
push
lds
mov
loop,pt
xor
or
scas
aaa
and
adc
add
or
adc
jb
stos
fstl
xchg
push
shrb
fbld
enter
ret
push
xor
sub
jle
adc
cli
stos
adcl
push
lcall
jb
jae
dec
xchg
jle
jne
pop
cltd
lahf
leave
add
or
popa
mov
xchg
mov
add
pushf
jb
cltd
fsts
inc
sbb
loop
fwait
scas
insl
fdivs
jmp
mov
popf
aas
xor
or
js
mov
jno
test
sub
pusha
scas
lods
add
add
lea
lcall
push
arpl
lret
popf
frstor
scas
aaa
xor
mov
ss
sbbb
add
mov
cltd
xchg
jmp
addr16
pop
jle
jg
incl
scas
shll
push
data16
fisttpl
inc
jnp
jns
cmp
or
push
shld
cld
lods
mov
add
fs
fstl
sti
fdiv
int3
mov
mov
push
push
mov
ficompl
out
fcoml
clc
popf
shlb
push
inc
fsubr
nop/reserved
sbb
xchg
xchg
add
shrb
pop
inc
jbe
push
sbb
out
clc
in
pop
and
push
push
fwait
push
addr16
test
test
lcall
cmpl
push
out
lods
call
jns
inc
orb
jno
mov
pop
insb
stos
add
dec
cmp
test
sbb
cmpl
hlt
cmc
ret
subps
cmp
call
xchg
fidivrs
lods
push
adc
cmp
call
loopne
push
sbb
pop
pop
loopne
mov
cwtl
fdivrp
dec
push
jmp
xchg
add
repz
clc
cwtl
sahf
ss
jp
sub
or
inc
fisubrs
sbb
inc
pop
sti
jecxz
jno
movl
xor
jo
push
mov
or
imul
xchg
stos
sbb
xor
das
arpl
inc
cmp
mov
test
mov
and
mov
ja
cmpsb
out
je
mov
test
xor
cmp
push
inc
push
cmpsb
adc
or
add
les
ss
fs
mov
mov
push
insb
dec
into
iret
pusha
les
les
das
fsubrs
sbb
push
mov
adc
mov
incb
push
dec
ds
fisttpl
outsl
in
pushf
pop
loopne
pushf
into
cwtl
mov
fimull
lcall
imul
mov
mov
in
mov
sbb
inc
adc
pushf
add
sar
sarb
cmp
gs
jg
dec
mov
fnsave
fimull
add
xchg
les
fdivl
inc
pop
std
mov
cmp
mov
xlat
inc
int3
jmp
cld
mov
pop
test
cmp
mov
push
pop
sub
push
sub
sbb
xor
test
mov
enter
inc
bound
xchg
push
sbb
mov
jnp
cld
mov
mov
stos
cmpsl
fldt
dec
outsb
aam
mov
or
mov
imul
mov
mov
jae
sub
stos
pop
jns
ss
dec
inc
movsb
mov
fstpl
fistl
adc
ss
and
xchg
out
pushf
lods
inc
push
push
in
pop
push
jp
xor
pop
ljmp
add
int
jne
mov
dec
cmpb
push
inc
mov
mov
dec
sbb
enter
adc
cmpsl
flds
jbe
outsl
jo
and
lahf
and
cwtl
mov
mov
sti
jb
out
pop
scas
adc
cmp
mov
nop
lods
mov
ret
stos
fdivrl
lahf
and
adc
ljmp
jno
xor
mov
or
push
sub
in
repz
aas
pop
add
sbb
aas
mov
ja
push
add
xor
in
addl
sub
sti
xlat
xor
dec
insl
lds
testb
or
out
pop
push
in
cwtl
push
ja
fisubs
leave
enter
xchg
aam
jmp
stc
int
stos
xchg
sub
jne
fldl
inc
pop
sub
jle
sbb
divb
ret
mov
dec
jns
mov
mov
fldenv
aas
shrl
add
pop
es
xor
jb
cmpsb
jl
jp
es
movsb
xchg
lea
rorl
mov
or
hlt
out
and
xchg
xlat
xor
jmp
jge
push
es
popf
jne
leave
testl
xor
push
movsb
pop
orl
ds
fidivs
cli
inc
mov
sbb
push
or
aaa
xchg
mov
rol
xchg
cmp
add
adc
mov
jo
stc
xorb
sbb
cmp
clc
stos
in
sub
arpl
repnz
fistpl
sbb
lcall
cltd
ss
inc
ret
daa
xor
adc
ror
xlat
xchg
ret
lods
fisubl
mov
ljmp
mov
lods
sub
lea
push
jbe
mov
ds
aam
add
xchg
xor
int
and
adc
xor
xchg
lret
inc
fxch
mov
cmp
cmp
pop
pop
xchg
push
test
dec
out
js
jge
fs
movsb
aas
cmp
fs
push
ss
sub
push
xorb
iret
je
in
mov
mov
and
sub
inc
ljmp
pop
inc
sub
cs
push
fldt
fdivrl
insb
ret
loopne
add
adc
pop
pop
je
lods
popa
push
sti
imul
sub
loopne
mov
sbb
fdivs
imul
pop
or
sbbl
test
jno
hlt
lea
outsb
pop
incl
inc
and
jno
xchg
push
jg
add
adc
data16
push
ss
push
popa
ror
add
xlat
xchg
bound
xchg
aam
push
mov
xor
mov
movsl
lea
push
shrb
stos
insb
add
and
xchg
ret
sub
ja
into
mov
cmp
aas
std
ret
jg
stos
stos
je
int
mov
lahf
flds
paddusb
subl
and
les
pop
in
xorb
inc
mov
adc
lcall
pop
out
shrb
scas
push
sarb
inc
clc
ja
call
or
inc
imul
into
scas
sub
and
inc
xor
xlat
js
outsl
scas
xchg
mov
mov
inc
mov
or
adc
loopne
xor
mov
int
je
aas
outsb
xchg
lret
fistps
cltd
rorb
ret
mov
inc
loop
and
into
shrl
gs
jbe
js
fldt
in
incb
xchg
push
inc
idiv
cmp
mov
mov
mov
outsl
scas
sub
cmpsb
add
pop
mov
sbb
pushf
xor
mov
pop
ja
daa
or
lret
in
mov
pop
jmp
mov
add
jno
jnp
xchg
movsl
inc
cmp
or
pop
jnp
inc
mov
insl
enter
dec
pop
mov
jl
lret
aad
jo
mov
inc
xor
dec
in
xor
adc
jbe
adc
mov
fnsave
xchg
pop
in
ja
jno
jne
cmp
adc
in
cmp
cld
popa
lock
outsb
sbb
int
pop
fsts
in
xcrypt-ofb
cmpsl
push
insb
inc
pop
loop
mov
mov
jg
leave
daa
mov
xor
pushf
xlat
ljmp
cmp
push
or
test
subb
xchg
out
cmpsl
scas
popf
pusha
imul
pop
iret
jo
mov
repz
adc
imul
mov
jno
mov
push
in
jle
inc
out
ds
lahf
or
into
les
adc
jo
and
xchg
subb
in
test
fs
mov
loope
out
push
lret
iret
dec
popa
ljmp
lds
adc
sbb
push
cmp
cmp
and
popl
clc
pop
in
push
aaa
mov
mov
inc
inc
js
mov
add
mov
lret
lret
mov
filds
adc
ss
jae
popf
test
imul
filds
pop
cmp
ds
loope
outsb
pop
push
flds
mov
fsubl
cltd
pop
adc
jp
lods
cmp
mov
pushf
sub
fstpl
dec
and
repnz
clc
scas
out
int
bound
clc
lods
jecxz
xchg
lods
push
sbb
rol
arpl
incl
call
sub
dec
sbb
scas
pop
orb
jg
mov
mov
sbb
outsb
xor
pop
jle
push
lds
or
shl
fcoms
test
aaa
addb
dec
loopne
ljmp
or
and
movsb
jbe
dec
ret
jecxz
and
mov
scas
daa
lcall
sarb
clc
aas
push
mov
mov
sub
pinsrw
inc
jl
xor
addr16
movsl
rclb
dec
or
xchg
repnz
jbe
push
pop
sahf
dec
in
push
xor
push
sbb
sahf
test
scas
bound
mov
data16
fyl2xp1
in
jge
pop
xchg
jge
push
lods
cmpb
out
hlt
cmp
fstpt
mov
mov
cmc
or
js
fdivrl
jl
lds
hlt
inc
inc
mov
push
imul
pop
xchg
or
pusha
pop
fidivl
and
fwait
popa
dec
shll
inc
fadds
jbe
fsubs
inc
mov
sub
pop
cwtl
shl
outsb
mov
pop
pop
test
popf
iret
mov
fsubl
pop
xchg
out
mov
push
sbb
mov
in
fmull
dec
stc
ror
rcrb
pop
inc
xchg
and
test
imul
jb
cmp
add
add
mov
out
mov
rcrb
xchg
icebp
dec
push
inc
pop
fbstp
cltd
pop
rcrb
xor
loop
jns
faddl
and
mov
adc
test
not
xor
movsb
fsubs
es
add
and
xchg
pop
das
divl
nop
sbb
gs
loope
pop
mov
or
push
insl
pop
test
ret
div
xchg
imul
sahf
sub
add
mov
ret
out
and
push
jae
push
mov
scas
cmp
in
jnp
sub
push
push
fs
test
inc
stos
lcall
jmp
mov
push
push
notb
fsubr
cwtl
inc
mov
jecxz
clc
inc
sar
insb
and
mov
scas
cmpsb
sub
mov
push
jnp
cmp
clc
enter
mov
lahf
repnz
fwait
mov
cs
ds
mov
adc
jmp
dec
xor
dec
mov
scas
test
cmpb
pop
push
pop
aas
and
push
loope
push
cmp
in
dec
mov
test
outsl
aaa
xchg
out
mov
test
aad
or
jmp
pop
sub
hlt
xchg
cmp
outsl
xor
sarl
xchg
mov
xchg
mov
adc
ret
inc
sbb
xlat
mov
in
lods
pop
mov
leave
xchg
out
lods
mov
sbb
mov
cwtl
mov
and
ret
inc
push
dec
je
mov
mov
mov
adc
xchg
mov
addr16
mov
jbe
mov
adc
inc
cmc
mov
insl
cwtl
push
push
inc
lcall
dec
adc
lock
fiaddl
jbe
fsubrs
loopne
mov
push
mov
push
mov
aaa
xchg
xchg
cli
mov
jno
aam
xor
not
jae
xor
xchg
lahf
data16
mov
fs
out
fcoms
lret
imul
jo
in
out
adc
ss
stos
jge
jecxz
test
or
lods
pusha
ficoms
outsl
mov
fnstenv
mov
push
popa
jne
sub
roll
cwtl
pusha
out
je
xchg
and
pop
dec
stc
xor
fisttpll
inc
pop
aaa
mov
jl
inc
sbb
mov
fwait
addl
mov
ljmp
add
test
mov
adc
int3
out
push
sahf
lret
or
fistpll
pop
dec
aaa
push
lds
sarb
jnp
fwait
push
and
pop
inc
add
jae
fdivl
push
pusha
hlt
test
pop
cld
jp
lock
cmpl
lods
je
cmp
sbb
xchg
xchg
sbbl
es
jae
lds
hlt
mov
push
bound
pop
dec
nop
add
sub
stc
pop
xchg
pop
sub
fidivrl
andb
dec
add
hlt
push
dec
jmp
cld
aam
cmp
dec
dec
insb
jl
aam
pop
lret
int
ficomps
cmc
jmp
int
jge
push
sub
mov
and
sub
lods
pop
out
sub
add
jle
arpl
mov
sub
cmpsl
or
fwait
jecxz
jae
jo
inc
pusha
push
push
xor
aam
clc
cmp
mov
mov
rolb
mov
in
shll
xor
ja
xchg
sti
xchg
add
ljmp
add
pop
cmp
test
fsubl
insb
or
pop
mov
push
fcmovu
sub
add
pushf
cltd
repz
jecxz
xchg
pop
sub
popf
jb
push
jecxz
test
pusha
mov
data16
add
mov
out
mov
cs
jecxz
js
mov
sbb
imul
outsl
out
jae
xor
out
movsb
push
add
dec
or
mov
leave
or
mov
xor
aaa
push
sbb
pop
dec
jecxz
or
insb
movsb
les
jmp
pop
jl
mov
fcmovbe
arpl
imul
sbb
jo
xchg
and
xchg
stos
in
rcrl
adc
jp
cmp
and
lret
std
pop
call
fwait
xchg
jg
sbb
dec
and
add
sub
loop
pop
movsb
fdivs
shrb
inc
sahf
lahf
pusha
inc
mov
add
ja
xchg
lcall
mov
je
inc
inc
xchg
dec
outsl
mov
jne
sti
iret
dec
pop
jno
mov
inc
idiv
push
sub
mov
shrb
or
repz
outsl
push
sbb
mov
es
jmp
xor
cmpsb
jg
sbb
pop
or
mov
mov
mov
dec
mov
fcoml
lods
lret
repnz
clc
stos
cmp
cli
add
sahf
cs
or
mov
sbb
test
mov
shl
cmp
inc
jae
pop
sbb
fmuls
adc
add
xor
inc
daa
in
popf
adc
xchg
push
popl
push
cwtl
out
fldenv
mov
jg
imul
into
jl
push
orl
push
dec
mov
jg
lahf
int
cmp
pop
dec
push
clc
inc
mov
xchg
loop
xchg
mov
ljmp
aad
fimuls
imul
mov
pop
insb
xor
outsl
sbb
decb
sti
jno
lods
adc
insl
pop
mov
data16
xchg
dec
out
or
fcoml
xor
lea
imul
lcall
addr16
test
xchg
mov
into
ja
pop
fcoms
mov
or
int3
icebp
lock
jae
daa
jge
in
fsubr
dec
mov
push
xor
jle
jnp
push
jmp
shrl
bound
sub
jle
out
mov
repnz
or
bound
lret
add
cs
out
repnz
xchg
xchg
push
ds
inc
pusha
aas
outsl
repnz
call
jecxz
xlat
mov
mov
icebp
xchg
dec
mov
clc
cmp
inc
push
pop
push
in
pop
mov
jl
pop
test
call
jae
push
mov
idivb
into
mov
pop
mov
lcall
mov
call
mov
sti
add
push
repnz
cld
push
xrelease
test
inc
or
mov
push
out
lock
adc
icebp
les
push
loop
in
dec
add
out
cmc
push
lcall
and
push
sti
mov
outsb
out
cltd
or
xchg
sbb
pop
sar
adc
shrl
xor
xlat
sbb
lds
leave
stos
outsb
push
and
rorl
popa
orl
push
mov
inc
mov
push
push
jne
out
addr16
push
call
in
push
push
sti
mov
pop
bound
inc
or
xchg
nop
test
sbb
mov
jo
test
ret
xor
lret
fiadds
sub
mov
fwait
mov
pushf
das
je
pushf
fldt
push
ficomps
out
subb
mov
inc
adc
mov
orb
pop
xchg
insl
xchg
repz
mov
adc
imul
ror
lods
cmp
jae
mov
sahf
or
xchg
add
lahf
jle
mov
sub
aas
push
mov
hlt
cmpsl
mov
scas
sarb
jne
loop
mov
dec
ss
cmc
pop
je
les
aad
mov
push
ffree
and
and
lea
rcr
arpl
fwait
cmp
xchg
stos
popa
js
mov
fnstenv
mov
mov
cwtl
inc
cwtl
sub
xchg
mov
sub
push
in
ss
imul
out
imul
rcrl
push
pop
cmpsb
repnz
push
mov
daa
adc
mov
ss
call
ss
movsl
in
mulb
dec
cwtl
aaa
test
pop
cwtl
test
or
mov
fcmovnbe
ss
pop
jne
pop
sbb
loopne
test
jo
xor
add
mov
add
inc
add
cmp
adc
fwait
cmpb
jecxz
or
cmp
je
sub
mov
push
iret
mov
xor
jmp
jmp
rol
jne
inc
mov
arpl
lret
cli
adcl
ret
sub
mov
dec
jo
pop
movsl
lods
movsl
jno
inc
dec
adc
push
xlat
out
out
ret
mov
pop
imulb
outsb
jb
addr16
addb
xchg
xchg
jecxz
adc
jmp
popa
add
lahf
jg
xor
ja
sti
mov
andl
jle
out
cmp
ss
sahf
test
or
fs
ret
xchg
ficoms
add
mov
fnstcw
int
push
call
imull
add
leave
lods
loop
inc
out
pop
inc
ljmp
pop
add
dec
jmp
cmp
and
leave
mov
pop
clc
sbb
popa
add
dec
loop
inc
mov
add
push
rclb
int
scas
inc
mov
xlat
mov
std
sub
add
cmpsb
mov
insl
loopne
hlt
mov
out
shll
cwtl
ffreep
mov
cmp
inc
or
xchg
scas
xchg
hlt
les
pop
call
dec
fiadds
rorl
data16
pop
aad
mov
cmc
clc
std
ret
push
dec
jno
into
mov
sub
sub
mov
cmp
push
out
add
out
outsl
lods
lcall
push
mov
or
mov
and
iret
aam
je
add
addr16
inc
mov
jl
sub
cmc
gs
mov
jge
lock
cmpsb
mov
nop
int
xchg
test
inc
insl
and
jno
call
clc
mov
jnp
pop
push
lock
jg
pop
inc
into
mov
test
add
xlat
xchg
xor
sbb
jl
cmp
mov
ljmp
and
dec
push
repz
push
mov
and
push
mov
jae
push
sub
movsl
or
aaa
cmpsl
mov
mov
out
es
xchg
lods
dec
push
lret
iret
int
popa
dec
dec
stos
out
or
jg
xchg
inc
testb
mov
or
ret
lock
inc
pushf
cmp
jecxz
mov
pop
mov
imul
les
push
mov
aad
mov
pop
add
ja
xchg
dec
fsts
and
and
mov
mov
mov
daa
movsb
mov
movsb
inc
adc
sbb
fcmove
sub
aaa
adc
jns
outsl
in
ss
mov
and
pop
gs
pop
and
icebp
mov
jge
stos
pop
stos
call
or
sbb
mull
or
jbe
push
jmp
dec
mov
adc
mov
push
push
dec
sub
ss
xchg
pop
push
and
xor
add
notb
insl
and
mov
push
sub
mov
jg
add
push
and
bound
lret
gs
je
inc
pop
lret
mov
pop
sbb
ljmpw
shll
dec
xor
rcll
loopne
push
or
cld
iret
jmp
ss
inc
bound
call
dec
adc
jle
mov
mov
test
ds
or
cltd
lahf
xlat
loope
mov
jecxz
in
xor
push
pushf
pop
mov
inc
mov
sub
or
or
iret
negl
pop
fidivrs
rol
in
addr16
repnz
gs
mov
jne
nop
clc
js
orl
jno
or
and
imul
jp
jge
ds
xchg
and
idivb
xor
call
jp
addl
idiv
sbb
lods
dec
xor
cmp
in
mov
and
jle
imulb
imul
jecxz
pop
ret
add
or
fs
and
sub
arpl
sub
lcall
imul
nop
call
jmp
mulb
jmp
enter
std
sub
sub
cmp
push
sbb
push
adc
cmpsb
scas
or
scas
shll
ret
cwtl
add
clc
or
pop
mov
mov
daa
pop
xchg
pop
nop
or
cmpsl
push
sub
or
mov
mov
cmp
leave
arpl
hlt
lcall
jmp
pusha
insb
push
and
sbb
mov
push
leave
inc
repnz
or
jg
push
fisubrs
mov
xchg
or
push
out
sbb
ficomps
push
mov
pop
inc
dec
sub
ret
ror
jae
add
sbb
mov
sub
inc
inc
mov
or
call
fnstsw
sub
js
pop
outsb
mov
xor
fs
mov
xchg
dec
gs
fdivrl
sub
sub
fcom
pop
lcall
mov
imul
sbb
sub
rep
sub
pop
and
xchg
cmp
mov
shrb
cmp
es
pop
in
or
mov
jo
rcl
cli
ljmp
arpl
sbb
ss
cmp
ret
out
mov
pop
push
fidivrs
xchg
icebp
push
cmp
push
mov
xchg
xchg
in
test
leave
roll
movsl
ret
sbb
out
jmp
call
dec
scas
test
stos
inc
cmpsl
xor
jg
push
mov
push
nop
adc
jecxz
js
and
bound
lock
mov
jbe
addl
dec
cli
adc
push
push
aam
or
cmp
shlb
jg
push
int3
mov
cmp
pop
lods
stos
aaa
sbb
pop
sbb
mov
test
add
mov
push
mov
jnp
lret
inc
sbb
sub
push
push
js
mov
in
scas
sub
jae
inc
mov
fsts
xor
sbb
clc
stos
xor
dec
imul
adc
mov
jle
cmpb
out
inc
ja
rcrb
ljmp
data16
test
mov
xchg
call
cmp
stc
icebp
mov
movsb
xor
movsl
mov
mov
mov
fdiv
fs
in
shrb
fidivs
push
jnp
xor
lods
fcoms
imul
add
movsl
shrl
and
inc
push
or
rolb
dec
repz
add
ss
ja
stos
test
dec
iret
gs
jg
xor
or
fldt
gs
mov
in
enter
push
dec
rcll
mov
xchg
pop
call
clc
incb
push
mov
fildll
aas
jl
lea
loop
gs
shl
aad
sub
xchg
fisubrs
mov
sub
pop
cmp
insl
out
aas
inc
sahf
aas
mov
push
std
filds
in
adc
pushf
xchg
and
or
add
mov
cs
xorb
pop
mov
or
mov
adc
test
sub
push
xor
mov
gs
push
ret
stc
mov
mov
cmp
sub
adc
les
lea
shrb
dec
mov
leave
push
movsl
or
maskmovq
negl
mov
icebp
cli
popf
xchg
add
aam
mov
xlat
pop
cltd
rorl
dec
stos
rcr
push
ret
mov
push
inc
iret
cmp
sbb
push
adc
roll
aam
cmpsl
jmp
jae
dec
pop
xchg
cmp
add
ds
shll
or
in
test
xor
xchg
mov
out
mov
push
adc
pop
dec
mov
dec
xor
aaa
cmpl
std
shlb
and
add
jle
out
fwait
mov
aad
mov
repnz
pop
fxtract
mov
inc
pop
push
cld
jp
or
pop
xchg
iret
out
xchg
mov
jbe
pusha
xchg
repnz
cwtl
lds
sbb
test
out
mov
mov
lcall
sbbb
andl
outsl
rorb
pushf
cmp
in
sub
in
dec
xchg
out
inc
push
push
push
sbb
test
push
dec
adc
test
movsl
or
scas
fimuls
out
test
test
ret
jnp
insb
cmc
fistpll
and
cmp
aam
loopne
stos
sbb
push
stc
addr16
push
pop
ss
cmpsb
sarl
cwtl
scas
mov
mov
fsubl
push
js
add
stos
out
in
jle
subb
add
sbb
in
sbb
ljmp
sbb
push
adc
outsl
fnstcw
add
jns
push
test
and
sbb
pop
adc
pop
addr16
add
xor
cmc
inc
xchg
in
shll
mov
es
lods
sbb
cmc
or
mov
push
dec
popf
es
aaa
jns
mov
push
jge
xchg
xchg
add
pop
hlt
jecxz
mov
mov
sarl
sub
pop
jb
sub
lcall
js
sub
sarl
dec
gs
jns
sti
mov
shr
out
mov
mov
and
or
ds
negb
pop
out
jne
call
lods
std
mov
mov
push
fs
pop
xor
dec
inc
subb
daa
mov
dec
idivl
imul
cmp
js
mov
shl
pop
dec
push
push
sub
pop
outsb
aas
and
popf
in
mul
fsubl
inc
pop
lahf
jp
or
adc
loopne
and
add
mov
stos
mov
push
push
and
jg
fisttpll
outsl
cli
ljmp
jbe
lret
clc
adc
cmp
fcoms
mov
add
mov
or
cs
cmc
cmp
jo
insb
sahf
es
js
in
loope
xor
xchg
xchg
push
cltd
mov
cli
inc
test
loopne
jg
in
popf
nop
adc
jecxz
adc
rorb
xchg
call
and
call
mov
stc
loope
push
jg
outsb
jecxz
aam
xchg
sub
xor
sbbl
ret
pushl
cmp
lahf
imulb
js
and
mov
jae
sbb
pop
sbb
inc
xor
call
in
rolb
push
adc
sahf
testb
xor
cmpsl
dec
int
clc
mov
xchg
xchg
inc
sti
loope
cmpsl
pop
and
mov
mov
push
inc
fstps
movsb
in
aaa
mul
leave
sbb
mov
popf
insl
cltd
pop
fistl
leave
mov
decl
cmpsl
adcb
mov
mov
rorl
movsl
dec
mov
hlt
and
ret
jne
xor
cmp
enter
notl
xor
das
aad
adc
das
sti
rolb
repnz
stos
xchg
sub
pop
dec
mov
pop
or
aas
aad
lret
fcomps
ds
imul
mov
pop
or
ljmp
cmp
out
repz
adc
mov
sbb
stos
mov
adc
cli
lock
and
popa
pushf
push
pop
xchg
in
inc
roll
dec
pusha
cltd
aad
divb
inc
es
filds
fiadds
adc
stc
xchg
insl
push
movsl
mov
mov
fwait
icebp
inc
subl
outsl
pop
repnz
fsub
inc
push
hlt
cmp
mov
or
pop
imul
pop
rclb
mov
cmp
jg
cmovl
lcall
sub
xorl
sti
popa
ret
cld
xchg
cli
ret
push
mov
or
add
sbb
outsb
in
add
adc
pop
jbe
sub
xchg
gs
mov
pop
in
cs
enter
idivb
movsl
insb
push
mov
xor
sub
icebp
movsb
pushf
jmp
or
js
mov
les
inc
insl
and
out
rcrb
dec
inc
sbb
nop
inc
pop
ret
rcll
fnstcw
push
add
das
lahf
push
push
adcb
sub
ljmp
jns
pop
mov
dec
leave
jge
pusha
push
jbe
push
es
cmc
cmpl
sbb
mov
or
sbb
lret
mov
fs
mov
scas
or
jae
xchg
lock
stos
cmpsl
hlt
jns
inc
clc
cmp
insb
mov
ret
loop
out
jnp
out
mov
sbb
push
xchg
out
lods
xlat
es
fisubs
leave
mov
andl
ljmp
test
notb
xchg
xchg
mov
mov
lcall
push
pop
mov
ret
jno
jb
cli
mov
data16
jg
cmpsb
int3
or
cld
xchg
shr
push
jo
add
shrl
jp
movsb
outsb
pop
adc
inc
stos
insl
adc
mov
xchg
push
lods
sub
sub
test
jecxz
mov
adc
imul
movsb
dec
jmp
icebp
cmp
andb
sahf
dec
mov
pop
cmp
push
out
mov
into
push
hlt
xchg
push
or
mov
xchg
les
test
dec
mov
imul
test
jno
mov
nop
mov
and
xchg
lahf
and
daa
outsl
push
lods
cli
pop
xchg
xchg
popa
xchg
pushf
jno
mov
fs
push
inc
push
shl
mov
mov
dec
cmpsb
lcall
lods
enter
gs
int
fsubrl
jg
fsubs
xor
dec
pop
and
sub
dec
in
nop
lea
rcrl
loop
cld
xchg
outsl
sub
movsb
mov
inc
mov
test
sarb
pop
sahf
ficoml
shlb
mov
leave
mov
jecxz
cmpsl
add
jp
sub
popf
mov
add
xor
insb
dec
adc
movsl
or
in
stos
stc
mov
dec
sub
fcmovnb
jno
dec
inc
or
dec
test
xlat
into
and
les
mov
test
xchg
push
lods
mov
push
push
mov
inc
mov
xor
insb
lods
aas
hlt
stos
xor
cmp
das
shlb
sbb
push
xlat
jge
out
loope
lcall
mov
ffreep
je
xchg
pop
repz
in
push
js
push
inc
filds
mov
imul
pushf
jp
stos
xchg
sub
push
pushf
push
xchg
int3
cmpsl
xchg
repz
push
dec
cmp
adc
pusha
mov
repz
mov
sbb
mov
cld
sbb
inc
fld1
xchg
mov
pop
mov
cwtl
jmp
jno
cmc
fwait
mov
xor
sbb
cmp
std
bound
mov
mov
sub
fwait
mov
add
xchg
add
add
icebp
clc
jecxz
mov
nop
out
lahf
movsb
shrl
iret
cmp
fucomi
sub
pop
cmp
sti
push
movsb
lock
loopne
rorl
mov
test
push
lds
push
mov
out
in
dec
mov
ret
loop
dec
out
and
stc
jns
push
insl
add
jecxz
imulb
and
lods
sbb
stc
insb
les
rolb
cmpsl
pop
aas
loope
mov
mov
scas
out
les
fst
bound
mov
push
or
jb
fcompl
mov
cmc
inc
js
jo
jge
sbb
in
push
ljmp
in
cmp
aam
lods
dec
lock
mov
push
ucomiss
pop
cmp
xor
jbe
cwtl
mov
movsl
fabs
pop
fsubl
and
cmc
or
jnp
pop
adc
mov
test
add
sbb
dec
push
adc
mov
jmp
cmpsb
inc
jge
sub
pop
scas
movsb
jnp
inc
fistpll
aad
dec
inc
out
jge
fldt
ret
stc
lock
inc
hlt
mov
stos
shrb
mov
into
cmpsl
cltd
push
jo
cld
xchg
movsb
dec
insb
pop
push
fnstenv
cmp
push
push
aad
stos
cltd
pop
repnz
lods
or
push
cwtl
das
movsl
mov
aaa
pusha
push
insl
imul
cmp
push
push
add
cmp
xchg
push
jbe
clc
in
inc
bnd
test
adc
cwtl
test
sbb
xor
lods
jge
ds
or
push
pop
jg
fcoms
push
and
mov
push
adc
dec
cmpsb
add
je
stc
xchg
sbb
or
push
jp
push
clc
and
fs
mov
jns
popf
not
cmp
es
movsl
mov
and
xchg
rcll
pop
sbb
dec
stos
addr16
jmp
cs
sbb
iret
add
mov
in
cmp
jnp
pop
cmp
add
push
jg
inc
add
mov
mov
push
les
gs
jns
aam
adc
fs
test
dec
out
xor
sbb
into
movsb
test
sar
stos
jecxz
dec
cmp
mov
xor
pop
roll
cmp
jle
mov
pop
dec
movsl
cli
std
sub
xchg
lock
lcall
mov
sbb
sbb
rcll
jo
fwait
icebp
cmpsl
bound
daa
mov
iret
outsb
sbb
mov
mov
xor
add
call
loope
shlb
or
jl
pop
inc
push
cmpl
imul
xchg
pop
std
aaa
add
sbb
ret
imul
mov
mov
mov
in
xchg
and
or
lds
jb
mov
mov
sbb
pop
dec
loopne
popa
mov
icebp
and
cvtps2pd
dec
jo
ss
ljmp
inc
insb
lods
jbe
inc
or
icebp
mov
or
ljmp
pusha
dec
fdivr
mov
xchg
int3
repz
clc
jp
jp,pt
inc
outsl
jge
push
add
ficoms
femms
repz
bound
mov
aam
pop
jp
xor
adc
insl
in
mov
mov
mov
imul
setbe
fwait
daa
in
sbb
fsubr
push
fdivrp
adc
iret
jae,pt
inc
mov
pop
cmp
sbb
dec
lods
adc
jb
ficoml
into
sbb
insl
and
sbb
xchg
cmp
rorb
or
xchg
sbb
lret
mov
mov
loop
movsb
or
sbb
xchg
cltd
clc
in
jge
movb
inc
and
lret
das
aaa
ljmp
dec
pop
leave
clc
pop
cwtl
lcall
sbb
xchg
jle
adc
imul
aas
pop
mov
push
fwait
add
and
idivl
push
cmp
idiv
sub
adc
movsb
jae
aas
aaa
add
adc
out
sbb
pop
mov
jno
out
dec
lcall
mov
mov
aam
pop
ret
mov
or
or
adc
aas
pusha
sarl
mov
sbb
push
xchg
stc
mov
push
mov
jg
outsb
mov
mov
pop
icebp
orl
mov
add
push
mov
jns
rcl
daa
pusha
mov
orl
ret
jmp
adc
insl
mov
push
gs
add
in
roll
movl
cmpsl
dec
cmp
xchg
or
in
xlat
enter
xor
inc
xchg
leave
inc
call
xchg
out
xchg
inc
nop
pop
movsb
out
jo
icebp
dec
dec
add
iret
jmp
dec
and
rcl
sbb
pop
outsb
mov
dec
nop
mov
xor
mov
or
mov
cmp
mov
mov
sbb
xor
push
jecxz
pusha
fildll
ljmp
fidivs
cld
or
cmp
stc
cli
repz
ljmp
jmp
cmp
xchg
push
aas
leave
test
ficompl
xchg
sub
mov
cmpsl
pop
cmp
cmp
cltd
mov
out
pushf
push
cmp
and
push
mov
orb
dec
pop
push
lods
out
aaa
add
and
xor
cmp
push
jl
or
or
adc
or
int3
pop
mov
pop
inc
xchg
inc
sbb
cwtl
fidivrs
xor
test
das
jle
lahf
xor
dec
fiadds
xor
mov
push
jle
push
imull
sbb
fwait
lds
jp
out
shll
adc
dec
mov
pop
hlt
adc
adc
mov
movsb
ds
fmul
stos
jnp
mov
mov
and
push
test
dec
sahf
sub
mov
add
orb
xchg
push
ret
and
lahf
jbe
mov
out
mov
call
call
stos
push
movsb
cmp
gs
or
mov
cmc
out
es
insb
xor
bound
movq
out
out
fsts
add
adcb
mov
fs
or
add
popf
mov
lret
jle
adc
jmp
sub
mov
fs
pusha
sbb
cmpsb
pop
sbb
movsb
dec
int3
out
mov
and
ficompl
mov
mov
sbb
into
xchg
popf
loope
push
subb
adc
fcmovnb
push
or
jg
movsl
stos
add
insb
and
adcb
arpl
mov
pushf
push
xchg
aad
push
mov
jne
dec
nop
rcll
dec
ficompl
push
mov
sbb
inc
int3
inc
rcrl
lret
cmp
shl
or
cwtl
std
mov
roll
sbb
mov
mov
or
stc
pop
mov
flds
lock
aad
xchg
or
sub
xor
add
add
or
popa
jg
in
push
mov
xor
inc
add
lods
sub
in
inc
paddsb
inc
xchg
add
jge
sbb
or
sbb
mov
aaa
or
aaa
push
in
add
imul
nop
cmp
les
call
fldt
out
sub
lods
shlb
dec
and
data16
insb
add
push
xlat
cmp
hlt
xor
jno
gs
loope
cmc
xchg
icebp
pop
adc
jmp
iret
mov
xchg
xchg
pop
mov
ljmp
add
decl
dec
inc
sub
mov
inc
add
jne
and
data16
cmp
jnp
mov
push
cmp
pushf
jge
mov
stc
ret
sbbb
jns
sub
add
mov
lods
xchg
adc
push
out
stos
adc
xchg
inc
ja
jp
cmp
or
in
dec
and
xlat
mov
xor
fidivrs
or
jnp
in
dec
div
cmp
xor
inc
mov
cs
cli
shll
pusha
mov
jns
call
cltd
js
je
dec
lret
and
pop
jb
pop
dec
pop
and
outsb
mov
xchg
data16
cmp
stos
gs
loop
or
and
dec
aad
icebp
mov
adc
fdivrs
outsb
push
and
bnd
adc
or
rcll
dec
or
push
sarl
aam
popa
repnz
jo
dec
or
dec
and
sbb
cmpsb
int
mov
stc
xchg
mov
mov
push
jo
push
cmp
lahf
lock
mov
pop
mulb
and
and
fsts
leave
popa
loop
imul
pop
lds
xor
cmpsl
or
dec
cmp
mov
pop
pushf
jns
lds
pushf
cld
movsb
adc
mov
mov
pop
cmp
jno
mov
leave
xchg
pop
fisttpl
push
cli
out
test
arpl
call
xor
push
add
add
lcall
add
aad
stos
int
xchg
inc
push
fs
mov
sub
leave
mov
fsubl
push
xchg
jbe
cli
js
push
xlat
jg
data16
ret
pop
inc
out
xchg
mov
pop
mov
iret
dec
pop
ret
sub
popa
add
jge
imulb
jb
mov
fmuls
inc
add
mov
push
into
decl
inc
jg
xchg
inc
pop
movsb
pop
xchg
mov
cmpsb
pop
or
ss
je
dec
sbb
mov
add
mov
xchg
dec
cmp
add
outsb
xchg
lea
hlt
addl
cmpl
mov
adcl
xchg
out
xchg
out
dec
mov
mov
pushf
lret
imul
sbb
sahf
es
pop
insl
adcb
xchg
cmp
ljmp
adc
fs
gs
sub
fucomip
cmp
push
fstpl
xor
test
push
sbb
leave
fidivrl
sarl
adc
repnz
mov
and
negb
aas
dec
pop
mov
mov
sbb
arpl
lods
negl
or
add
lret
or
push
int
push
cmp
adc
xchg
mov
or
ja
push
cmpsb
push
lcall
gs
test
jns
jne
sti
orl
xor
mov
in
dec
movl
or
test
jmp
mov
sbb
adc
lods
inc
xor
push
xor
js
popa
movsl
inc
pusha
jb
jl
nop
lret
cld
cli
xchg
testl
xlat
decb
push
mov
and
add
mov
ret
mov
sbb
popa
xchg
cmc
in
mov
shlb
mov
fildll
lahf
add
mov
pop
fstpl
ss
cltd
sub
scas
out
dec
stos
in
scas
les
push
mov
add
shr
scas
xchg
dec
aaa
xor
call
rorl
call
xchg
cmc
roll
sub
int3
inc
jno
test
testb
xor
lock
sbbb
add
adc
lea
mov
pop
and
jmp
or
xchg
cmp
jnp
sub
mov
adc
faddl
cmc
out
xchg
adc
addr16
pop
fs
sbbl
jnp
add
push
loopne
jle
imul
lds
or
dec
ljmp
pushf
fwait
movsb
cmpsb
cmp
pop
inc
mov
mov
adc
lods
inc
xor
inc
xchg
lds
cs
sbb
pop
bound
dec
leave
mov
lcall
sub
cmp
cld
outsb
aas
jmp
adc
mov
outsl
push
stos
and
jl
cmp
addr16
cmpsl
push
push
pop
movsb
in
sub
aaa
out
ljmp
cmp
push
jg
mull
sub
jp
rcll
sbb
pop
pop
xor
call
jg
xchg
aaa
sbb
adc
out
cs
or
cwtl
clc
jle
adc
add
imul
ds
jno
icebp
cmpsb
inc
push
push
cmp
ja
imul
add
outsb
xchg
xchg
addb
sbb
lcall
call
adc
sahf
mov
xor
aaa
cmc
jp
mov
imul
cs
cmp
shll
pop
mov
mov
stos
ljmp
stc
fldl
loope
inc
insl
daa
iret
xchg
out
test
sub
mov
push
repz
xchg
popf
and
push
sbb
scas
popf
retw
lahf
mov
mov
add
rorl
or
pop
cmp
ja
in
adc
pop
xor
les
imul
ret
mov
inc
into
das
mov
fldt
into
rcll
jbe
sahf
jecxz
cmpsb
test
call
mov
xlat
gs
jo
add
lock
jmp
xor
sub
jne
cwtl
jne
test
push
xor
test
into
sbb
aad
popf
ret
and
xor
hlt
orl
lret
imul
dec
in
xchg
or
popl
xor
add
and
stc
sbb
pop
pop
lahf
popa
mov
mov
into
cld
cmp
fsubs
mov
xchg
pop
filds
out
inc
inc
nop
xchg
jb
mov
push
stos
js
and
int3
mov
mov
aaa
adc
subl
iret
and
cmpsb
dec
fstpt
loope
adc
test
cli
xchg
std
xchg
clc
loope
enter
mov
adc
outsb
cwtl
dec
call
aad
xor
fs
test
cmp
rol
outsl
add
fwait
jnp
cmp
mov
inc
push
jmp
jnp
cmp
mov
insl
lret
ss
xchg
dec
iret
lcall
test
push
pop
test
lret
dec
push
sbb
jo
addb
call
jnp
dec
push
mov
mov
cmpsb
daa
aas
outsb
insl
lahf
fsubr
pop
mov
mov
sub
pop
inc
jge
sarb
mov
rclb
adcb
jge
or
mov
jo,pt
pop
jno
jne
mov
out
adc
sti
sbb
enter
mov
xchg
inc
pop
clc
stc
pop
xchg
mov
or
mov
inc
div
dec
jo
mov
aas
dec
xchg
xor
mov
pop
and
cli
mov
std
testb
adc
es
mov
mov
mov
insb
fcmovb
xlat
mov
stos
ret
ds
mov
mov
add
push
bound
lret
nop
lret
add
loope
mov
lea
push
out
jns
popf
pop
shrl
dec
leave
pop
fiaddl
repnz
fstpt
aas
jns
mov
fcmovb
ja
test
jne
xchg
push
push
xchg
fistpll
imul
push
xor
jae
cmc
and
dec
sub
scas
add
xchg
aam
add
fcmovbe
dec
or
push
adc
sbb
xor
in
cmp
cld
ja
dec
cwtl
loop
lcall
or
push
cld
sbb
adc
leave
sbb
jp
add
mov
jp
dec
mov
pop
dec
xchg
repz
mov
in
xchg
inc
rorb
mov
push
pusha
inc
xchg
and
push
lods
aas
mov
pop
mov
and
jp
clc
js
cmp
cmp
adc
fcoms
pop
xchg
xor
sbb
jbe
cmp
lods
adc
xlat
inc
loopne
dec
jp
lods
jnp
bound
int
ret
jae
xchg
outsl
stc
mov
jae
pop
mov
mov
jmp
movsl
adc
sbb
xor
sar
mov
addr16
dec
cmp
mov
xchg
push
pop
daa
sbb
bound
mov
lret
aad
mov
cmpsl
inc
mov
mov
subl
fs
xchg
das
js
inc
or
cmp
fisubl
cmpsb
inc
dec
xchg
pop
in
and
jp
and
pop
sbb
int
dec
cld
sub
insb
or
xchg
mov
cmp
pop
inc
lods
mov
fs
pop
sbb
dec
xchg
int
push
aam
push
push
inc
jmp
sub
shrb
add
jmp
cmp
dec
setp
icebp
fwait
dec
push
je
and
push
cld
mov
add
adc
loope
cmpsb
push
testl
inc
mov
xlat
inc
sub
cmpsb
jg
insb
mov
ds
bound
mov
xchg
mov
mov
mov
sub
sahf
mov
daa
bound
pandn
sub
sub
icebp
test
and
jl
std
fnstcw
or
pop
xchg
xchg
movsl
pop
js
adc
mov
xor
and
sbb
cmp
add
push
std
dec
icebp
push
ret
mov
les
jo
and
repnz
jne
push
cltd
cmp
pop
jl
movsl
lahf
fstl
mov
jg
jmp
inc
jns
shll
scas
sub
mov
pushf
loop
add
adc
push
xchg
sbb
lret
xchg
pushf
orb
mov
inc
pop
adc
shrl
gs
jbe
jno
inc
test
push
addl
cmp
insl
movl
xlat
mov
cwtl
jle
inc
aad
xchg
jbe
push
fimull
ret
popa
jns
or
cwtl
js
gs
add
cmp
xchg
sub
pop
fisubrl
push
not
mov
fucom
out
repz
fimuls
out
cltd
test
xchg
arpl
cmp
mov
scas
xchg
rorb
push
test
pop
add
cmp
int
dec
adc
push
aad
scas
testb
into
daa
mov
cmp
xchg
aaa
test
ja
cmp
or
pop
cmp
in
dec
out
sarl
aad
cmpsl
sbb
ljmp
add
outsb
fs
inc
sahf
mov
cmp
mov
xchg
icebp
xchg
mov
nop
sbb
xchg
push
pop
adc
testl
movb
jp
jno
lock
and
repz
mov
sub
into
cmpsl
pushf
sahf
shl
push
inc
shl
xor
inc
mov
sub
jecxz
add
xorb
popf
lds
jle
movsl
mov
pop
mov
mov
push
fwait
popa
mov
sub
and
es
pop
and
fadds
mov
mov
stos
out
mov
outsb
jne
adc
mov
mov
cli
in
lods
jbe
fistpll
mov
outsb
test
arpl
and
into
mov
dec
xchg
add
leave
popa
jg
jle
push
stos
sub
mov
xor
push
lods
hlt
pop
nop
mov
insl
mov
xor
das
push
xchg
ret
push
pop
mov
mov
inc
mov
shl
and
dec
fstps
aas
push
add
lahf
sbb
xor
lds
test
pop
fists
imul
jnp
rorl
ljmp
and
imul
shlb
xchg
push
nop
test
int
movsb
xlat
mov
push
insb
rcr
outsl
bound
sbb
scas
jo
sbb
mov
cli
mov
test
lret
aad
cmc
push
ret
sbb
and
test
mov
and
dec
into
pop
bnd
dec
push
stos
arpl
sub
inc
inc
push
push
notl
sub
mov
push
lcall
hlt
or
jbe
mov
scas
jo
rclb
std
jle
add
dec
fistps
pop
cmp
jae
pusha
cmpsb
mov
mov
xor
pop
dec
or
cmp
stos
daa
jmp
cwtl
movsb
xchg
inc
in
jbe
or
mov
int3
sub
loopne
jne
std
mov
xchg
mov
jmp
movl
andb
or
or
mov
cwtl
test
pop
cmp
cmpsb
xchg
lret
sti
push
aaa
andl
stos
fwait
add
test
xchg
xchg
sarb
adc
testl
or
es
sub
xor
cmp
ds
dec
cmp
out
fdiv
sub
aaa
dec
fistps
sub
mov
mov
mov
hlt
aad
or
pushf
mov
and
test
xor
out
out
mov
ljmp
jb
cmc
sub
mov
iret
jmp
in
dec
orb
lods
pop
jmp
push
mov
dec
mov
out
cld
lods
and
lods
cs
inc
push
ffreep
pop
ds
std
xor
cmp
cmp
sti
xor
jne
int
pop
in
adc
les
stos
mov
rorb
pop
fldt
adc
jne
push
adc
and
jne
and
pusha
stc
mov
sbbb
add
rcl
out
push
inc
xlat
outsl
sub
nop
push
add
movsl
xchg
push
push
mov
es
pop
insb
nop
pop
addr16
mov
sub
xchg
into
fs
out
mov
mov
xchg
push
cmp
popa
xchg
inc
pop
into
fsubrs
sub
mov
pop
pusha
xchg
mov
sbb
and
jmp
sbb
rolb
jge
inc
sbb
sub
ret
js
testl
mov
stc
add
mov
imulb
shll
xor
je
mov
icebp
add
int3
xor
xchg
iret
pop
add
in
pop
sub
pop
pop
jg
mov
out
scas
push
addr16
lods
sub
mov
dec
ret
fs
jl
dec
xchg
mov
adc
arpl
and
mov
jno
insb
insl
add
push
test
sbb
call
loopne
adc
test
add
dec
cli
sub
mov
add
and
fildl
push
and
push
dec
in
or
mov
shlb
mov
mov
aaa
call
das
test
in
lods
inc
decl
test
insl
xor
sbb
pop
cmp
and
sti
cs
das
sub
pop
dec
pop
adc
mov
cwtl
push
out
fldenv
add
mov
loop
dec
sub
push
dec
cltd
xchg
xchg
xchg
stos
jg
in
sub
push
into
sub
inc
stc
sub
cmpsb
and
dec
pop
test
leave
pop
adc
and
cmp
adc
pop
cmpsb
pop
inc
pop
cld
sbb
mov
lret
stc
enter
cmp
add
xchg
loop,pn
sbb
cld
imul
je
enter
pop
or
xor
push
xchg
test
pop
xorl
dec
add
sbb
lods
mov
in
mov
inc
icebp
pop
negb
add
pop
shl
faddp
mov
inc
shll
das
or
pushf
test
fldenv
pop
sti
and
mov
pushf
sbb
sub
jno
mov
pop
sub
rcll
aaa
mov
call
pop
stc
iret
lds
test
push
lret
orl
cld
imul
sbb
movsl
rcrb
adc
in
mov
mov
inc
out
ss
push
out
xchg
in
loop
xorb
jle
lods
imul
mov
xchg
push
movsb
icebp
cmp
sti
jl
outsb
lea
sub
repz
adc
jle
arpl
sbb
inc
sub
ds
push
xchg
push
ficoml
sub
lcall
int
jle
jbe
hlt
cmc
ret
xor
xchg
cmp
lods
or
mov
jno
shlb
inc
movsb
dec
inc
pop
ss
and
outsl
das
pusha
mov
mov
imul
cli
addr16
xor
insl
mov
cmpsb
fsubs
or
aam
jmp
shll
mov
psadbw
push
add
mov
cmp
jo
jbe
jmp
push
and
lret
cmpsb
fstps
aad
sub
scas
xchg
sub
ret
daa
insl
cmpsl
aas
pop
loop
inc
fisttpll
sub
add
fst
mov
or
pusha
outsl
mov
xchg
int3
cmp
cmc
sbb
cmp
push
pop
jl
cmp
lcall
lea
les
pusha
adc
imul
sub
out
int3
dec
and
out
jmp
push
imul
xchg
xor
mov
jge
adc
and
xchg
sbbl
outsb
pop
arpl
sahf
push
inc
dec
push
sub
jae
ljmp
cmp
clts
pop
jbe
shll
inc
push
sub
aaa
lcall
repz
inc
push
sahf
je
mov
test
lds
xchg
in
jmp
fimull
aaa
fnstsw
pop
pop
sub
xor
dec
mov
jns
sarb
rcl
push
dec
mov
scas
mov
insb
test
mov
pushf
mov
sub
sub
pop
sbb
or
lock
xchg
and
push
jo
loopne
pop
and
mov
pop
cmp
les
pop
mov
mov
xor
inc
setl
pop
loope
mov
or
out
mov
test
aam
shr
aam
mov
jge
inc
out
es
inc
aad
je
adc
inc
in
sbb
notb
int3
inc
xor
mov
or
adc
mov
in
int3
cmc
push
fs
xchg
mov
rorl
xlat
pop
push
adc
mov
mov
add
xchg
dec
pushf
fdivr
negb
xchg
mov
inc
sti
mov
and
mov
lock
xor
imull
enter
inc
es
enter
movsl
inc
xor
lock
adc
out
dec
mov
push
fadds
addr16
push
mov
nop
xor
mov
adc
add
jns
arpl
mov
jl
xchg
aam
cmc
movsl
adc
outsl
pop
movsl
sub
and
call
and
das
leave
aas
xchg
pop
daa
jmp
aaa
mov
loop
in
popf
or
jnp
aaa
or
mov
je
mov
xor
mov
mov
fsubs
popf
cmpsl
in
mov
and
mov
jle
push
popa
jge
fbld
sub
rclb
xor
cmpsb
sahf
xlat
enter
vunpckhps
movsb
lret
outsl
cld
mov
fldl
xchg
lret
sbb
mov
mov
stos
pop
cli
mov
mov
lret
fildl
into
and
scas
or
les
mov
out
icebp
xor
adc
loop
outsb
inc
fbstp
ret
ret
mov
xor
mov
mov
je
clc
and
adc
into
fsub
nop
sti
jnp
cmp
jnp
inc
cmp
sbb
sbb
fnstcw
leave
mov
and
and
cmpsl
xor
inc
sub
lods
dec
sub
out
dec
adc
push
int3
xchg
outsl
stos
dec
std
mov
out
mov
enter
lds
repnz
xchg
jo
jge
cmc
ja
add
test
or
pop
add
dec
sbb
lret
add
sub
adc
aas
adc
jmp
sbb
mov
push
in
push
mov
or
sbb
out
sub
dec
fmuls
and
ret
cwtl
add
pop
rorb
sbb
push
das
sbb
add
jne
sbb
and
cmp
fstps
and
xor
xchg
jnp
cmp
or
jno
push
call
cmp
shr
and
je
mov
gs
ds
hlt
out
push
ret
cli
jmp
rcl
pop
add
mov
add
shrl
xchg
les
mov
nop
mov
in
lret
js
add
lock
and
or
jle
dec
adc
xchg
fisttpll
fwait
xchg
in
sbb
xchg
or
xor
xchg
mov
lcall
pop
aam
inc
insb
mov
movsl
mov
pop
mov
testb
mov
es
clc
push
pop
lahf
xor
test
cmp
and
pop
push
dec
dec
call
mov
mov
adc
into
jae
int
movsl
mov
jle
push
outsl
outsb
push
push
pop
outsb
stos
jecxz
scas
mov
sbb
subl
push
push
jl
andl
sub
mov
ljmp
out
push
push
lea
imul
ret
cmp
and
pop
jmp
sub
pushf
cmp
jae
dec
das
in
cli
xor
ret
clc
lock
mov
mov
jbe
aas
fdivr
jo
xchg
in
xor
repz
aad
xchg
filds
adc
scas
jno
adc
test
mov
dec
jns
add
cs
pop
push
push
xor
dec
call
jmp
lock
mov
stos
xchg
mov
stos
xor
lds
ret
popl
jb
jmp
xor
aam
xchg
mov
or
xchg
js
cld
or
in
sub
in
fs
sbb
push
mov
xor
cwtl
loope
push
mov
dec
dec
lds
gs
xchg
add
stos
mov
jle
stos
pop
push
add
inc
addl
cmp
sar
lahf
inc
je
jle
hlt
test
pop
pop
xchg
inc
sub
add
iret
cld
insl
movsl
loope
nop
mov
xor
jbe
pop
mov
shrb
xor
ljmp
jle
mov
stos
ss
and
sbb
add
inc
and
pop
or
movsl
mov
popf
loope
mov
stos
mov
int
push
incb
mov
sub
and
push
xor
ljmp
dec
and
or
sbb
lret
fwait
pop
dec
jl
mov
pop
adc
push
sahf
cmp
add
adcl
or
add
rorb
jno
stos
mov
inc
lahf
adc
pusha
cld
orb
cmpsl
out
push
lods
or
adc
dec
mov
stos
stc
adc
mov
mov
cmp
divl
inc
mov
pop
test
mov
or
push
fxch
and
push
stc
jnp
push
int
mov
dec
inc
jbe
xor
bound
les
sbb
imul
cmp
pop
lret
push
mov
sub
sbb
lods
hlt
out
jge
test
ret
adc
sbb
jp
mov
dec
lahf
sub
sub
outsb
push
fcos
and
jnp
adcb
lret
dec
outsb
fildll
scas
mov
int3
push
sbb
cmp
fucomip
xchg
out
test
pop
inc
cli
push
mov
lahf
pop
iret
or
dec
inc
jb
in
insb
fwait
jp
adc
jae
dec
inc
mov
popa
mov
jl
clc
xchg
aaa
inc
cmp
jge
mov
stos
cltd
cmp
aad
test
pop
mov
cltd
out
arpl
call
mov
jo
mov
nop
into
pop
mov
nop
fbstp
call
cmpl
dec
or
mov
and
shrb
dec
add
mov
push
inc
mov
sbb
sahf
xor
out
aam
aad
mov
push
mov
orb
rclb
stos
xor
popf
sbb
and
sub
bound
dec
aad
lock
sbb
dec
sbb
lods
jmp
dec
cmp
mov
push
or
sbb
push
ret
mov
cmpl
or
mov
mov
loope
call
pop
in
bound
stos
mov
outsb
cmp
aam
divl
jp
adc
or
imul
les
clc
out
sbb
pop
fwait
lret
outsb
jge
pusha
mov
pop
mov
push
add
xor
ljmp
cs
lods
dec
into
roll
mov
les
imul
imul
push
cs
jo
xor
std
mov
in
pop
sbb
and
scas
data16
mov
out
dec
dec
xor
adc
mov
lcall
pop
fildll
stos
insb
or
mov
test
nop
call
cmp
inc
repz
inc
xchg
cld
and
or
and
sbb
popf
adc
adc
inc
xor
push
fwait
or
cmpl
add
jle
shl
jo
pop
inc
sbb
shlb
nop
pop
or
fwait
lahf
movzbl
ss
scas
mov
test
cltd
xor
jno
push
mov
out
xchg
jmp
mov
add
popf
fwait
add
nop
in
xchg
mov
adc
in
cmp
mov
cmp
and
decb
lds
inc
loope
inc
sub
in
xchg
jge
stc
rclb
adc
mov
push
push
push
pushf
iret
pop
leave
lcall
jns
sub
sbb
shll
jns
in
mov
ficoml
inc
in
out
outsb
push
inc
imul
mulb
mov
aas
jle
push
cwtl
sub
out
std
or
imulb
adc
mov
or
les
jge
ljmp
into
mov
mov
sbb
sbb
or
leave
dec
dec
test
scas
push
gs
pop
outsl
sub
push
cwtl
adc
or
push
adc
jecxz
push
aas
mov
cltd
and
adc
inc
inc
fdivs
adc
out
sahf
test
clc
pop
jbe
add
add
mov
jno
lods
aaa
xor
out
and
scas
hlt
in
cs
and
pop
push
push
das
lods
inc
adc
idivb
mov
mov
mov
test
cmc
lods
pop
addl
mov
jmp
mov
fistl
or
mov
out
jb
shl
sbb
popa
cltd
mov
cmpb
fiaddl
push
dec
dec
ljmp
mov
and
bound
pop
and
sbb
test
and
gs
outsb
jl
je
test
lret
pop
push
inc
lock
cmp
jg
push
jle
sahf
outsb
clc
jnp
or
ja
aad
addr16
sub
mov
or
inc
lret
clc
aaa
inc
pop
push
sbb
push
mov
xchg
repz
cmp
push
iret
cmp
imul
push
pop
cmp
sbb
xchg
jg
cmp
shrb
lock
fwait
ja
jne
mov
outsl
mov
cmpsb
in
fistl
cmpsl
shlb
mov
dec
test
xor
in
fmuls
adc
xor
out
lret
jmp
into
mov
pop
jae
pop
adc
or
xchg
mov
out
jno
jbe
lea
out
jle
mov
cmp
jnp
add
fs
fildl
mov
dec
sbb
pop
aas
push
and
sbb
jle
dec
pop
adc
leave
loop
inc
std
or
hlt
dec
sub
sub
scas
jecxz
nop
lcall
jmp
ja
lahf
jae
lret
cmp
jno
cmpsl
dec
cmp
sbb
cmp
push
push
adc
imul
and
test
pop
inc
ds
mov
cmp
xor
inc
push
decb
repnz
adc
add
les
repz
adc
mov
popf
adc
mov
out
or
add
test
lea
cmp
and
aam
inc
or
iret
jg
nop
test
mov
andb
xchg
dec
jbe
jg
jge
loope
xchg
fisttps
push
lock
nop
pop
clc
pop
je
mov
xchg
pushf
jmp
pop
dec
aaa
popa
pop
enter
inc
int3
xchg
pop
ret
lea
cld
insl
inc
sub
push
mov
out
mov
add
push
test
adc
xlat
push
cmp
sbb
sbb
sbb
xor
dec
lods
mov
ljmp
stc
jae
inc
push
lds
sbb
sub
pop
scas
add
xor
or
inc
mov
testb
std
shll
mov
aas
cmc
push
mov
test
sbb
jo
inc
mov
push
jne
clc
mull
mov
cmpsb
sub
out
dec
ja
adc
jmp
fwait
adcl
cmp
pusha
jecxz
gs
or
inc
fs
pop
aas
adc
or
xchg
lcall
in
and
stos
pop
imul
fwait
clc
into
and
push
and
mov
jae
mov
test
std
inc
and
push
sbb
mov
mov
cmp
lret
xor
stos
mov
mov
lods
add
xor
sar
adcl
daa
push
dec
inc
repz
adc
mov
jno
or
inc
sbb
dec
outsb
adc
sub
imul
adc
xor
push
jecxz
jae
popf
cs
pop
push
pop
cmp
fwait
imul
jg
lock
test
and
add
data16
dec
push
int
test
ret
cld
sub
sbb
pop
sbb
jp
shr
outsl
mov
push
dec
ds
lods
dec
dec
out
ja
fisttps
mov
adc
inc
into
add
or
jmp
sbb
pushaw
pop
packsswb
scas
dec
ss
jle
jmp
cld
xor
xor
or
cmpsb
xchg
lcall
lea
in
and
sahf
sti
stc
nop
inc
sub
add
jnp
subl
nop
test
ffree
cltd
dec
dec
call
shrb
mov
shrb
sub
movsl
adcl
cmp
pop
adc
jmp
adc
repz
sub
xor
pop
inc
aas
popf
cli
int3
mov
mov
mov
xor
pop
sahf
inc
cmpsl
lcall
cmc
xchg
mov
fidivrl
mov
jge
rolb
cs
stos
mov
push
mov
dec
rolb
dec
dec
mov
push
sti
sub
mov
arpl
lods
xor
push
ds
jge
mov
or
and
int3
mov
js
loop
dec
dec
loope
mov
std
dec
mov
push
sti
dec
xor
jo
aas
hlt
xchg
inc
adc
jne
pop
inc
aaa
out
lods
out
cmp
cmpsb
pop
and
inc
push
gs
lods
xor
loop
mov
popf
cmpsl
mov
xchg
jge
movlps
jbe
jge
movsl
add
pusha
frstor
mov
shrb
and
popf
sbb
inc
frstor
push
mov
mov
jg
fisttpll
or
or
cmp
push
inc
iret
push
clc
jnp
xchg
jo
mov
in
aaa
xor
mov
movsl
pop
test
mov
pop
lock
aam
mov
add
filds
cmp
and
jbe
loop
in
jbe
into
and
and
fcompl
dec
adc
mov
push
cmp
aas
cmp
lods
pop
adc
cmp
push
push
pop
cld
popl
cmp
dec
xor
movsl
xchg
jmp
out
xchg
xchg
adc
js
scas
hlt
lret
clc
inc
imul
mov
jae
aad
xchg
xchg
push
cmp
push
rorb
xchg
pop
mov
adc
xchg
test
test
adc
mov
nop
push
test
mov
stos
adc
sub
xor
mov
pop
pop
xchg
js
and
pop
neg
test
lret
xor
mov
add
jmp
or
mov
jp
mov
jnp
xchg
add
xchg
cli
test
push
daa
popf
pop
ja
or
inc
fcoms
mov
fimull
cltd
push
fcom
movsl
repz
call
iret
cmc
bound
test
inc
push
in
push
sbb
inc
cld
push
or
mov
cwtl
jnp
xlat
pusha
jo
mov
mov
xor
pusha
ds
push
mov
add
mov
mov
fisttpl
push
push
adc
call
call
aad
push
cmp
sbb
in
fwait
lcall
arpl
mov
cltd
adc
popa
int3
mov
popa
inc
jns
sbb
out
inc
andl
ret
push
inc
push
dec
adc
jb
mov
mov
aam
pop
loopne
push
int3
lahf
pop
fdivs
and
js
and
fisubrs
xchg
mov
jge
mov
cmpsl
outsb
jno
fidivl
inc
in
push
orb
jp
lods
and
adc
std
xchg
clc
fnsave
lds
mov
cmpsl
mov
dec
cmp
pop
popa
add
push
popf
push
stos
or
add
mov
fsubrs
repz
orb
int
inc
pushf
ret
push
jae
sub
popa
jae
xchg
je
shll
lret
push
mov
aam
mov
clc
xchg
and
inc
fmul
inc
gs
inc
popf
or
rol
ljmp
mov
cli
sbb
mov
and
lods
mov
inc
jae
dec
leave
loop
dec
aas
mov
fs
mov
stc
jae
or
test
fs
dec
push
or
cmp
xor
mov
test
push
push
lahf
rcl
adc
push
push
mov
inc
dec
jnp
daa
test
push
imul
push
stos
divb
cmp
adc
inc
push
cwtl
lock
xor
fldl
mov
jmp
cli
in
sub
sti
test
aaa
jle
scas
out
cmp
imul
xchg
cmp
test
mov
add
daa
adcl
filds
jns
out
mov
rcl
sbb
pop
pop
xor
adc
bound
lcall
fisubrs
cmp
mov
leave
jp
jle
bound
cmp
mov
inc
jns
push
into
lds
mov
pop
dec
loopne
arpl
stos
dec
fmul
sbbl
aam
les
mov
sahf
aaa
push
icebp
mov
shll
xor
cmp
shr
movsb
bound
pop
lods
js
jmp
mov
les
ja
adc
fidivs
sarb
xor
jae
inc
in
mov
mov
jne
dec
movsl
in
and
jle
mov
sub
cmpsl
xchg
adc
int
std
adc
add
fisttpl
jae
mov
stc
or
adc
call
cmp
add
adc
mov
cmp
sahf
mov
imul
loop
mov
sub
mov
and
or
addr16
inc
xor
out
andb
js
les
mov
les
shll
add
sbb
jg
fsubs
pop
jl
aam
mov
test
mov
pop
sbb
fsubrl
xchg
and
outsl
fstpt
pop
insb
je
inc
stos
mov
inc
daa
mov
sbb
sahf
cmp
lahf
pop
mov
fs
les
mov
scas
insb
ret
fisubrs
notb
loop
int
ret
test
push
jb
fdivr
push
fcomi
test
enter
sbb
aas
imul
adc
rolb
nop
shlb
push
dec
int
mov
insl
xchg
pop
push
out
or
lcall
pop
lods
push
repz
int
movsl
jp
outsl
or
add
jb
sub
xor
mov
mov
cwtl
jo
addr16
daa
push
lea
sbb
cmpsl
mov
push
loope
iret
pop
gs
mov
xchg
push
dec
ret
jne
jg
jae
fistpl
std
leave
add
mov
mov
test
loopne
mov
xchg
mov
ss
mov
inc
jg
dec
push
outsb
jmp
and
nop
repz
idivl
xorb
pop
dec
sbb
loope
jnp
imul
call
out
imul
inc
sti
dec
xor
hlt
icebp
adc
stos
xchg
sbbb
repz
fs
or
or
mov
sbbl
jle
xor
mov
pop
jp
std
mov
push
xchg
jns
mov
mov
popf
stc
insb
push
adc
mov
jg
dec
push
jne
dec
pop
mov
nop
sahf
push
or
aad
cs
inc
adc
push
cmp
in
call
fdivrl
fistl
cld
mov
push
add
lock
inc
inc
or
jmp
cli
sub
fsubrs
sbb
sbb
clc
xchg
sub
and
lods
cwtl
xor
sbb
fldl
leave
fnsave
sub
insb
orl
add
mov
inc
cmpsl
sub
jno
lock
fdivs
pop
sub
sub
cltd
sbb
xorl
cmc
rol
mov
idiv
pop
std
das
add
mov
xchg
push
or
add
fs
aad
sahf
movsl
aad
add
inc
jmp
mov
mov
cmp
xlat
stos
xchg
stc
fsubrl
dec
sahf
inc
out
add
das
or
pusha
mov
dec
lret
xchg
jne
fst
pop
sbb
in
shlb
jp
loope
int3
pop
fistl
ret
mov
cltd
jo
aaa
cmpsl
mov
fidivrs
push
out
iret
imul
or
cld
mov
inc
xchg
and
or
adc
aas
xor
scas
enter
cmp
addl
sbb
sbb
xchg
jl
push
fnstsw
push
xchg
mov
popf
push
mov
ss
mov
add
sbb
ret
ffree
inc
mov
cmp
mov
ret
arpl
cmpsb
mov
enter
out
xchg
mov
push
in
insl
test
popl
pop
mov
mov
repnz
jae
jmp
addr16
dec
add
stos
addr16
inc
mov
add
and
arpl
mov
sti
mov
push
lcall
sahf
pop
lret
jns
inc
add
outsl
jo
pop
js
xor
mov
add
adc
jmp
ljmp
push
inc
xchg
dec
sub
inc
mov
pop
ja
or
mov
xchg
test
sub
es
and
cmp
adc
mov
lea
add
rorb
push
stc
fisubrl
aad
xor
ret
and
shll
pushf
or
or
sbb
rcl
icebp
adc
xchg
and
fnstcw
cmpsl
movl
and
ds
in
sbb
std
int3
pop
sub
cltd
sbb
mov
push
out
adc
xor
ja
cwtl
mov
ficoml
es
add
aam
dec
and
adc
out
mov
ret
scas
lcall
or
push
sar
jg
sub
xchg
and
iret
mov
fwait
cmp
jb
iret
xchg
xchg
dec
and
jecxz
xchg
cmp
sbb
sti
dec
pop
and
xchg
or
jp
nop
pop
push
popf
jle
fldl
stc
subb
mov
insb
push
std
xchg
into
dec
mov
push
push
dec
inc
and
dec
jae
mov
jne
into
repz
add
stos
mov
cmp
jno
push
jecxz
fdivl
inc
lea
popa
fcmovnb
push
mov
push
sbb
sub
and
sbb
mov
mov
add
cld
shl
jle
mov
pop
pushf
xchg
or
xchg
and
xchg
in
aas
and
repnz
mov
movsb
loope
int
cmp
sub
test
fbld
leave
mov
mov
jno
push
xor
ja
fcoms
bound
or
sahf
jp
insl
fwait
sub
pop
xor
sbb
dec
adc
int3
pop
std
inc
inc
js
push
sbb
test
call
adc
pop
push
das
push
inc
and
stc
fmul
and
fbld
orl
aad
fadd
rcl
pop
lods
cmp
mov
mov
pop
cmp
inc
pop
popf
pop
les
repnz
clc
outsb
push
lea
push
cwtl
daa
mov
mov
shll
inc
popa
test
pop
sub
fwait
iret
arpl
scas
adc
js
jo
int
or
inc
arpl
jns
xor
jbe
xor
pop
mov
leave
loope
nop
mov
cmp
imul
cmp
pop
dec
xchg
and
add
insl
pop
lahf
test
lods
cwtl
xlat
and
jnp
cmp
addr16
mov
and
and
lock
mov
push
pop
xor
sar
out
cmp
mov
loopne
mov
dec
jo
into
int
ret
mov
xor
or
cmp
in
pop
mov
cltd
pop
in
pop
subb
je
jbe
sbbl
dec
loope
xchg
into
lcall
sbb
mov
addr16
mov
mov
and
lahf
sbbb
fstl
or
std
dec
ljmp
pop
test
test
shll
stc
cwtl
mov
outsl
xor
lods
out
mov
mov
dec
clc
push
call
cmp
inc
iret
mov
cld
pop
mov
cs
mov
push
jmp
dec
inc
sbb
mov
mov
scas
insb
ds
fdivrs
pop
inc
test
sar
mov
test
jb
and
xchg
dec
jnp
adc
call
mov
dec
pop
xchg
add
hlt
mov
xlat
js
inc
popa
lcall
insb
scas
adc
mov
dec
or
sub
and
xchg
xor
rcrl
cs
enter
rolb
sub
jno
nop
add
ja
xchg
mov
inc
mov
shl
inc
loopne
lcall
in
lock
sbb
pop
cmp
cli
cmp
jne
dec
mov
insl
mov
mov
xchg
lret
xlat
jmp
lock
ss
sbb
xchg
fadd
mov
call
cmp
outsl
test
jns
cmp
hlt
je
pushf
mov
int3
adc
xchg
add
inc
imul
aam
test
jnp
inc
jae
inc
fwait
clc
in
pop
fldl
shll
imul
adc
test
adc
sbb
ret
in
push
mov
inc
inc
cmp
repnz
and
inc
outsb
mov
dec
push
test
jecxz
lds
dec
pop
jle
out
std
popa
aad
ret
dec
jb
inc
xchg
insl
test
insl
in
dec
dec
mov
jne
js
mov
add
add
ja
out
dec
or
dec
cmp
jp
fstpt
xorl
jbe
int
xchg
push
cld
int
loope
adc
sbb
sbb
mov
adc
shl
sbb
stos
test
in
imul
dec
repnz
mov
addl
cltd
imul
lret
or
xchg
outsl
enter
xor
add
mov
bound
mov
stos
je
insl
lock
out
or
adc
jle
add
orb
push
test
xchg
out
lock
es
or
fcomps
adc
or
aad
lcall
arpl
mov
xchg
mov
jge
pop
rcrl
lret
int
lret
insb
test
inc
pop
test
xchg
jge
addr16
mov
xchg
nop
xchg
xchg
and
arpl
jl
loop
pop
mov
inc
jecxz
mov
add
jmp
sub
orb
jge
pop
setge
mov
les
push
dec
lock
xor
outsl
stos
cwtl
jnp
into
int
mov
add
mov
or
xorb
stos
imul
dec
cmc
mov
gs
lret
xor
xchg
dec
data16
push
int
inc
or
ret
dec
pop
pop
shll
fstps
sbb
iret
fsts
mov
cmp
xor
and
adc
cmpsl
and
pop
aaa
test
push
das
test
mov
jno
in
sub
dec
aam
loopne
sub
jle
sub
xchg
xchg
lods
add
and
loope
sub
shrl
scas
adc
int
mov
or
dec
flds
mov
outsl
pop
mov
mov
sub
insb
mov
or
inc
popa
enter
push
pop
cld
rolb
popf
jnp
rorl
js
out
inc
sbb
repz
xchg
fidivrl
mov
and
xchg
fs
int
jecxz
idiv
jne
xchg
into
outsl
mov
cmp
lahf
xchg
and
xor
jb
fsubrs
xchg
xor
aad
adc
mov
fs
push
or
xchg
jmp
mov
test
cwtl
mov
sub
or
in
hlt
cmc
fisttpll
cmp
jp
repz
lods
mov
enter
testl
test
mov
popa
test
data16
sti
pop
cli
inc
and
and
fwait
imul
out
sahf
popa
jle
push
test
outsb
es
or
aad
dec
mov
std
xchg
jle
push
ja
mov
in
fnstcw
fisubrl
cmc
jns
dec
loopne
sbb
lea
jb
push
pop
addr16
adc
leave
jecxz
test
mov
out
std
pop
push
mov
jecxz
pop
jo
xor
std
dec
mov
mov
or
mov
cld
add
shl
std
loope
xor
sahf
mov
mov
dec
iret
js
dec
fisubl
dec
inc
int
stos
pop
enter
dec
push
add
lcall
pop
inc
adc
popf
clc
mov
scas
jne
adc
pusha
add
sbb
fbstp
gs
adc
push
dec
push
jbe
lock
push
test
fcmovnb
push
mov
xlat
inc
mov
inc
dec
mov
jne
cmpsl
aam
push
stc
and
out
or
mov
add
add
xor
mov
cli
push
ret
lods
shll
mov
jecxz
and
xchg
dec
adc
dec
repz
repz
rorl
cwtl
add
nop
lods
cltd
push
imul
mov
loope
cmpsl
pop
outsl
adc
sbb
sbb
push
cmc
clc
cmp
in
mov
rolb
lods
mov
xlat
outsb
int
xchg
push
adc
cmp
in
stos
call
mov
inc
pop
cmc
fwait
mov
dec
xchg
test
mov
mov
icebp
es
jno
pop
je
mov
repz
push
repnz
outsl
add
xor
fnsave
mov
xchg
jnp
and
loop
and
pop
mov
imul
fimull
rclb
out
gs
push
movb
aas
repnz
hlt
xor
lcall
jns
inc
and
dec
inc
addr16
loopne
pop
jb
cmp
or
iret
repnz
sub
in
lcall
rclb
adc
and
xchg
ret
mov
xchg
cld
xor
jae
xor
sbb
pop
adc
adc
sbb
lds
ja
mov
pop
dec
test
in
stc
add
add
xor
jae
scas
lahf
jg
sub
xor
call
enter
insl
popf
cmp
xor
cmp
mov
mov
icebp
cli
cmp
loopne
cs
sub
clc
mov
iret
sbb
cs
or
outsb
mov
lret
inc
or
imul
in
mov
nop
popa
nop
pusha
or
rclb
fnstcw
pusha
test
xor
add
and
in
or
pop
jg
and
imul
pop
xor
or
lcall
jne
sub
inc
sub
negl
push
lcall
mov
or
loop
cmp
jge
mov
xor
std
stc
fistl
xchg
cmp
push
hlt
pop
cmp
dec
mov
sbb
lea
cmp
dec
dec
test
mov
xchg
leave
shlb
add
push
cmp
push
lock
sub
jns
xor
test
or
push
xor
sbb
stos
mov
lods
jmp
inc
mov
sahf
inc
popl
xor
test
adc
rorb
mov
fmul
mov
call
jecxz
loop
outsl
aaa
inc
inc
out
lret
cmp
daa
mov
pop
js
dec
xor
mov
rcr
aas
bound
cmp
cs
test
lcall
mov
ret
pop
xor
loop
push
dec
or
lods
inc
fnstenv
and
sahf
test
pop
jmp
mov
testb
push
add
xchg
xlat
add
mov
jge
xchg
mov
mov
inc
mov
inc
das
cmp
adc
repz
xchg
dec
mov
and
jae
pushf
fistpl
and
and
ja
int3
es
sub
sbb
cmp
xlat
push
sbb
into
inc
jle
xchg
push
jg
scas
push
ss
inc
shll
mov
push
sub
sub
and
leave
icebp
sub
jmp
iret
jae
cltd
cmp
pop
dec
xor
ret
push
push
imul
loop
pop
roll
push
dec
cltd
test
into
pushf
ret
sahf
pop
cmc
sti
push
call
pushf
mov
jp
xor
ret
pop
add
bnd
lea
fisttps
mov
or
sub
adc
push
cmp
out
stc
std
mov
scas
pop
push
cmp
dec
ret
pop
les
addl
sets
hlt
inc
int
sub
in
push
icebp
cs
jmp
jbe
sbbb
jecxz
xor
jg
outsl
pop
out
divb
dec
clc
dec
loopne
enter
into
add
sbb
pop
and
das
mov
add
leave
pop
xor
dec
add
sarl
enter
or
xor
and
repnz
loopne
push
fisubrs
add
sahf
sub
jb
or
mov
adc
ljmp
ret
fs
push
data16
bound
repnz
and
jmp
in
repz
add
or
jp
ret
jae
adc
push
insb
and
divl
fcomps
push
rcl
jp
arpl
adc
jnp
cmp
mov
aaa
inc
in
push
gs
ljmp
scas
cmp
jge
or
add
jnp
imul
addr16
fldt
psubw
imul
push
push
dec
stc
mov
out
jl
leave
and
std
cmpsl
mov
jmp
add
and
fucom
test
and
inc
ret
xchg
lcall
pop
pop
mov
pop
mov
jmp
mov
push
xchg
fisubrl
mov
jbe
sbb
mov
xchg
and
pop
data16
leave
int3
mov
adc
rolb
push
xchg
xchg
lcall
push
mov
lods
dec
mov
aad
ret
mov
or
mov
mov
jp
rcll
lcall
mov
cld
dec
pop
push
mov
inc
sbb
xchg
adc
mov
and
movsl
add
outsl
dec
lock
fmulp
mov
daa
push
xchg
popf
hlt
jnp
test
xor
lods
jo
dec
jo
lock
in
pop
xchg
jnp
push
xchg
fwait
fwait
dec
push
cwtl
or
nop
sub
aam
inc
lods
mov
sub
gs
nop
test
aad
decl
gs
lods
imul
xor
insb
mov
sti
inc
inc
mov
ds
dec
dec
and
outsb
cmp
add
adc
xchg
mov
push
push
sahf
outsb
stos
push
sub
pusha
adc
jg
mov
and
sub
xchg
arpl
push
adcb
cmp
mov
les
mov
stc
test
stos
mov
xor
les
push
pop
mov
push
jo
in
jle
stc
fwait
sub
fldcw
add
fnstsw
add
adc
dec
mov
stos
adc
rolb
push
sbb
xchg
test
push
scas
rorl
or
fidivs
push
jg
push
push
adc
loopne
dec
repz
mov
loopne
jg
lds
push
cltd
xchg
mov
les
sti
sarb
and
inc
xor
scas
std
addr16
fstl
cmp
in
jp
loope
add
mov
jo
fwait
addr16
cld
enter
clc
data16
loop
ja
mov
and
test
dec
fmull
test
xchg
test
int
in
test
fnsave
std
pop
bound
or
xchg
arpl
test
lcall
add
xor
sar
add
mov
pop
xlat
mov
je
mov
adcl
int3
fcompl
stos
nop
jbe
sti
add
pusha
aam
test
pop
pop
xchg
clc
xor
add
adc
insb
adc
cltd
mov
stc
les
pop
and
adc
rclb
imul
div
or
shll
dec
pop
xor
addb
pop
sbb
stos
sbb
sbb
outsb
sbb
jo
jnp
lahf
aam
mov
fwait
aad
roll
mov
sub
hlt
add
paddw
inc
sbb
in
adc
mov
mov
inc
in
je
jecxz
jns
ja
mull
pop
ret
mov
inc
rcl
jecxz
pop
and
out
pop
insb
sub
loopne
jnp
enter
inc
pop
icebp
scas
mov
pushf
call
test
clc
or
pop
shrl
int
imul
cmpb
mov
and
adc
push
or
test
popa
xor
in
scas
pop
mov
icebp
push
and
nop
pop
test
into
push
xchg
cmp
or
daa
pop
test
pushf
cmp
jge
sub
jne
jnp
imul
shrb
mov
bswap
daa
pop
push
inc
dec
sbb
push
push
in
adc
nop
jl
stos
aaa
push
mov
in
test
enter
popf
add
dec
jge
stos
mov
add
aam
fsts
push
addr16
jle
data16
inc
mov
in
rcll
dec
push
ret
bound
scas
jae
jmp
sub
ret
mov
icebp
movsl
push
adc
mov
pop
adc
push
leave
in
xchg
ljmp
jo
insl
test
fucomi
pop
pop
fisubl
or
jb
lret
push
leave
ja
cmp
or
stos
push
mov
push
push
adc
sbb
push
call
test
in
lcall
shlb
loop
cli
idivl
sbb
or
icebp
mov
and
cmp
pop
lahf
lret
mov
adc
sbb
jo
push
push
cmpsl
rclb
ss
aad
jae
push
fdiv
enter
lahf
lcall
and
popf
inc
mov
imul
jae
sbb
out
mov
mov
jno
daa
jl
inc
shlb
loopne
rcrb
adc
movsl
xor
xlat
loope
jecxz
jns
mov
push
popl
xchg
clc
mov
and
pop
aas
shrb
nop
test
adc
cmpl
insb
lret
push
mov
adcb
addr16
loope
aas
orl
adc
jmp
test
in
mov
pop
add
mov
cltd
leave
xor
cmp
out
std
inc
push
movsb
cli
sub
fs
push
push
nop
ljmp
jne
rcll
xor
movsl
jae
daa
mov
pop
aam
das
test
icebp
mov
testl
fisubrl
pop
jne
mov
pop
dec
lea
movsb
insb
in
pusha
xchg
xor
sub
jnp
in
dec
pusha
je
lds
dec
adcl
lods
push
cmp
push
push
icebp
adc
push
xor
dec
fdivl
cltd
out
mov
xor
adc
repz
mov
lahf
fcoms
adc
pop
ficoml
sbbl
xor
loopne
push
shlb
lret
xor
and
push
scas
and
lret
les
lods
jae
jns
adc
sbb
jle
xor
or
movsl
cwtl
push
stc
lret
jnp
push
je
and
sarb
sub
in
dec
hlt
mov
cmp
imul
je
lret
lds
pop
aam
push
movsb
add
xchg
ror
repnz
call
mov
pop
pop
fidivrl
orl
jecxz
lcall
jne
ss
adc
sti
add
xchg
xor
adc
mov
jo
inc
xchg
mov
hlt
call
mov
pop
rep
sahf
cmp
shlb
loopne
test
dec
xor
sub
mov
mov
pop
inc
dec
mov
or
ret
repnz
mov
pushw
or
imul
out
xlat
xchg
add
adc
loopne
add
les
push
and
pop
ret
sahf
test
sahf
iret
pushf
std
lods
ds
mov
stos
sub
mov
popf
fisttps
test
fnstenv
mov
mov
mov
adc
movsb
scas
imul
loop
push
xor
add
lds
mov
inc
pushf
notl
xchg
insl
xor
bound
fldl2t
lods
mov
or
xchg
add
pop
cmpsl
in
ret
mov
out
es
and
stos
dec
fcos
push
xchg
sbb
subps
adc
xor
fstl
test
lods
xchg
dec
push
mov
outsb
adc
repz
push
push
enter
push
jge
sti
out
xchg
arpl
jne
jns
jl
cmc
sub
out
imul
call
push
push
sub
adc
pop
xor
icebp
neg
add
in
jmp
subb
insl
mov
lea
ficompl
jecxz
cwtl
mov
xor
mov
cmp
roll
rcrb
enter
push
and
push
out
in
push
push
jmp
pop
mov
xorl
sub
notb
stos
roll
out
das
add
popa
fucomip
lods
clc
scas
movl
in
or
pop
ja
ds
lcall
jmp
mov
push
sarl
add
inc
shr
add
push
shlb
mov
cmc
mov
jecxz
iret
adc
mov
jnp
sarl
ret
cmpsl
in
pop
loopne
stos
push
mov
and
xor
push
sbb
xor
mov
sbb
or
in
xor
es
add
popf
test
push
jb
xchg
xor
pop
inc
in
add
mov
insb
push
icebp
lock
and
outsl
scas
sub
cli
or
cmp
das
jb
xchg
test
jg
sub
cmp
adc
or
jo
pushf
dec
cli
popa
inc
jp
out
mov
push
lds
xchg
imul
mov
ss
inc
mov
aas
repnz
add
add
imul
and
add
sub
in
addl
je
arpl
in
inc
test
popf
rclb
testb
out
xchg
sbb
and
movsb
in
enter
stos
jae
add
xchg
sti
xchg
push
lods
rclb
decb
sub
pop
cmp
daa
leave
inc
test
mov
rorb
gs
in
inc
xor
pop
pop
fstl
mov
cmp
cli
bound
push
gs
ret
daa
sub
adc
leave
jg
cmp
pop
adc
mov
outsb
stos
xchg
and
sub
aaa
push
jmp
setb
inc
popa
pushf
je
jae
and
mov
scas
stos
add
push
lret
subl
roll
fisubs
jae
cmp
out
mov
ret
push
pop
and
in
sbb
xchg
enter
sbb
out
shrb
pop
xor
xchg
nop
inc
mov
dec
mov
call
nop
xchg
jo
cmc
popa
popf
jnp
int
xor
mov
js
repnz
jae
mov
loopne
cmp
mov
arpl
jno
mov
mov
xchg
movlps
xor
pop
cmp
push
pop
pop
inc
push
sbb
test
js
fdivrl
inc
and
add
xchg
cmp
mov
cmp
aas
sub
mov
push
mov
push
ljmp
in
mov
adc
stos
adc
test
outsl
icebp
mov
jecxz
scas
cmp
pop
sahf
jae
divb
adc
push
into
imul
jg
int3
mov
pop
mov
pop
lret
call
inc
mov
pop
rcr
push
pop
sub
fs
fadd
mov
out
mov
cmp
xor
push
sub
add
xchg
sub
jns
dec
lea
lods
loope
pop
dec
scas
or
sti
es
inc
dec
jge
shlb
sahf
mov
int
cmpsb
jbe
js
adc
fprem
mov
xchg
push
xor
xlat
js
push
jbe
mov
sub
mov
rcrb
sub
sub
mov
pop
sti
pushf
cmp
xchg
shlb
inc
and
inc
dec
push
testl
and
clc
cmp
in
repz
es
xchg
fstps
gs
push
pop
ret
scas
jno
adc
call
and
adc
iret
push
into
std
dec
fdivrl
rcrl
lods
nop
fistl
stos
les
daa
xor
pusha
fcomi
or
in
push
cmp
dec
jp
push
inc
hlt
test
loop
lret
sti
adc
arpl
pop
es
mov
sbb
int3
xchg
lods
cmp
push
add
xorl
into
or
and
divl
mov
int3
in
cmpsb
mov
or
mov
lcall
mov
xlat
imul
aas
fstl
scas
mov
dec
jno
xor
les
iret
xor
popa
ljmp
sbb
mov
sbb
or
idivb
mov
cmpb
push
cmpb
roll
push
inc
pusha
pop
mov
lods
sub
jp
add
scas
cs
leave
out
enter
mov
xchg
movlhps
sbb
adcb
jne
pushf
addr16
dec
and
sub
fcoms
inc
mov
addl
pop
mov
xchg
jns
and
rcrb
inc
add
sti
jnp
jbe
lahf
inc
nop
idivl
sbb
ret
add
jo
loope
lret
sbb
jb
mov
adcl
mov
movsl
cld
jno
pop
stos
mov
loop
ja
dec
in
aad
mov
les
testb
xchg
sub
lret
sbb
or
mov
ja
cmp
add
in
xchg
add
inc
adc
mov
push
mov
xlat
add
cmp
out
repnz
xor
lods
dec
out
push
mov
fadd
ds
sbb
push
loope
fisubl
dec
dec
add
pop
orl
fstpl
jle
int3
fneni(8087
in
xor
cltd
fistps
stc
and
lahf
cmp
out
sbb
adc
addl
xchg
xchg
jbe
cli
cmp
and
addr16
js
push
pop
push
fidivl
pop
mov
adc
cmp
mov
inc
dec
aas
stc
jle
sbb
pop
jge
and
movsb
insl
cwtl
fs
in
ljmp
loop
xor
in
in
push
xor
lahf
jg
push
inc
les
adc
push
sub
cmpsl
std
aas
shll
cli
pop
rclb
adc
stos
leave
add
nop
xchg
dec
scas
aas
xlat
jge
mov
sub
fsubs
or
cmp
xor
int3
into
dec
out
xchg
outsl
and
sub
lea
cmpsl
jecxz
pop
sub
stos
xorl
pop
cmp
mov
xorl
jle
pop
cmpsl
sbb
adc
inc
push
out
ret
mov
push
jnp
shl
ret
in
cld
fistps
add
push
and
lcall
sbb
insl
jbe
aas
lods
daa
push
mov
xor
insb
insb
aaa
subb
lds
add
rclb
dec
mov
hlt
lods
inc
add
xchg
pop
dec
call
je
scas
hlt
mov
and
push
cmp
inc
icebp
dec
pop
ljmp
rcr
or
dec
mov
cmp
ficoml
jb
xchg
mov
add
mov
inc
push
test
push
pusha
mov
lret
adc
cmp
inc
les
pop
hlt
data16
dec
notl
adc
inc
in
sbb
rorl
xor
add
mov
outsb
inc
in
aaa
mov
rcrl
out
mov
xor
inc
es
sub
sbb
dec
mov
cmc
and
arpl
fstl
loopne
in
mov
mov
pop
rolb
scas
mov
xor
enter
filds
ds
xor
mov
mov
or
sub
cmpl
cmc
testb
xchg
sub
std
decb
mov
popf
cmp
addl
ljmp
lock
dec
mov
mov
dec
jl
or
popa
inc
mov
stos
xor
xchg
mov
xchg
sbb
aam
test
push
dec
pop
or
mov
jbe
inc
jb
sub
mov
insl
fldl
sbb
stc
outsb
xchg
mov
or
icebp
xchg
test
popa
mov
pusha
adc
inc
mov
push
sbbl
dec
ficoms
fdivs
in
add
push
sbb
pop
cmp
lods
add
stc
push
fdivrs
dec
aad
rol
pop
lds
or
js
rcrl
stos
xchg
or
adc
jno
fwait
loop
xor
push
notl
clc
frstor
inc
lcall
or
lea
push
loope
stos
fsubrp
les
je
into
pop
sbb
fstp
add
cmp
or
mov
ja
sarl
add
mov
dec
or
add
mov
inc
jae
mov
jecxz
cmp
cltd
push
sahf
scas
adc
or
dec
add
arpl
inc
nop
gs
les
lea
xor
arpl
inc
or
out
outsl
push
pop
jae
and
sub
push
sub
fwait
loopne
lahf
ds
lcall
inc
loopne
shr
xchg
mov
cmp
cld
cmp
xor
sbb
mov
in
gs
push
mov
insb
or
or
out
fwait
ja
repz
push
ja
jb
aad
insb
push
cltd
xchg
xchg
push
xchg
test
jb
mov
sahf
xor
or
xlat
ficoml
push
jbe
scas
shl
cltd
out
mov
mov
divps
sbbl
sub
push
xchg
jo
pop
repz
mov
mov
sub
mov
sub
test
pop
scas
mov
out
ret
xchg
repnz
lahf
fbstp
push
push
mov
lahf
sub
sarl
sbb
and
mov
iret
pop
mov
inc
xor
rorl
pop
scas
fmuls
sub
xchg
mov
sub
add
rcrb
sub
cmp
xchg
dec
clc
jno
or
push
mov
pop
out
das
push
mov
push
int3
mov
jle
jge
add
rorb
jbe
sub
into
xor
aas
xor
mov
loop
fdivrs
cmpsl
or
loopne
jg
mov
loopne
out
int
lahf
mov
jg
or
mov
fndisi(8087
rolb
rolb
inc
sarb
mov
roll
and
cmp
or
mov
je
ja
cwtl
jb
fisubs
rclb
aas
dec
mov
mov
push
adcb
jmp
adc
pop
in
popf
inc
daa
int3
jnp
sbb
sbb
pop
cwtl
xor
pop
or
in
add
test
push
cmp
js
fsubs
jne
jo
cmp
in
outsb
lret
ja
cli
imul
adc
hlt
xchg
jge
jno
jge
gs
push
cmp
lret
aad
pop
out
lcall
dec
and
push
adc
mov
mov
ljmp
mov
adc
dec
imul
ljmp
daa
adc
andb
xchg
push
sti
push
cmp
pop
popa
cmpsb
in
xchg
cld
jecxz
cld
arpl
dec
int
stos
pop
mov
sub
pop
pop
sbbl
fidivrs
jb
and
xchg
push
xchg
add
or
daa
enter
pushf
mov
jp
mov
push
popf
pop
ret
dec
push
sbb
cmpsb
arpl
rdmsr
repnz
xchg
adc
xchg
out
out
into
xchg
call
lock
push
mov
outsb
out
jae
in
xchg
xchg
sub
stos
aas
call
mov
xchg
xor
mov
stc
mov
sub
inc
sbb
aaa
mov
jbe
lea
sahf
jne
adc
inc
xor
dec
inc
cli
or
pop
inc
jne
aas
push
pop
pop
fisttpll
pop
cmpsb
and
test
in
fildl
dec
orps
bound
fldz
cmpsb
jno
decl
fs
test
inc
jb
sub
jbe
fists
aas
cmpsb
xchg
cmp
sbb
mov
pop
je
and
movsb
jl
lds
or
mov
fdivs
hlt
rcrl
lds
mov
xor
aas
dec
scas
into
inc
addr16
push
daa
mov
lret
or
int3
sarb
jnp
jae
out
stos
hlt
push
cltd
mov
mov
negb
sub
mov
std
xchg
mov
xor
mov
mov
xchg
or
popl
pop
adc
leave
mov
test
push
xchg
insb
lcall
xor
mov
insl
inc
lods
mov
movsl
pushf
inc
and
push
add
mov
push
and
bound
cmpsl
jo
inc
cwtl
mov
jmp
test
pop
mov
cmp
jg
inc
fisubl
sbb
filds
adc
xchg
icebp
cmp
mov
xor
cmp
iret
pop
std
jbe
ror
lahf
sbb
test
adc
loop
lods
outsl
inc
cmp
push
lds
cmc
mov
shll
mov
mov
inc
je
pop
inc
lahf
test
jo
pop
aad
cmc
hlt
leave
push
push
push
aam
cmp
icebp
repnz
jge
sub
mov
dec
cmp
cwtl
arpl
xchg
ja
test
jmp
bound
jns
dec
in
or
push
and
xchg
jb
jae
aaa
jmp
fcoms
inc
shlb
faddp
aam
pop
daa
aaa
test
ljmp
dec
dec
inc
stc
hlt
or
loopne
xchg
jge
dec
push
imul
xor
push
movb
adc
mov
in
pop
cltd
dec
subb
fdivrs
jge
cs
ds
bound
hlt
mov
cmp
jmp
icebp
mov
add
and
aad
je
jnp
sarb
dec
mov
sub
cmpsl
int
sti
imul
es
hlt
les
iret
push
in
push
aad
pop
in
xor
cmpsl
jl
xchg
pusha
adc
bound
lcall
xchg
xor
mov
mov
mov
cmc
shll
fiaddl
cmp
pop
imul
fcomps
hlt
arpl
sub
popf
mov
or
fldl
shll
adc
fisttps
dec
fldcw
jl
mov
sarl
mov
mov
jbe
adc
data16
notb
sar
xorl
and
dec
icebp
push
jg
sbb
xchg
in
mov
cmpsl
pop
ds
jbe
xchg
int3
adc
dec
xor
hlt
sbb
add
jns
mov
lock
in
pop
bound
jae
mov
addb
insl
add
insl
mov
stos
sahf
or
xlat
inc
adc
pop
mov
pop
sbb
inc
fisttpll
into
pushf
divsd
fneni(8087
pop
addr16
xor
sbb
scas
popa
mov
ret
scas
inc
jns
nop
jmp
and
mov
daa
sbb
mov
sub
add
lea
jnp
mov
mov
add
scas
in
imul
cmp
lods
add
sbb
inc
and
hlt
ret
adc
mov
xor
bnd
arpl
dec
into
lcall
inc
xor
pushw
dec
cmc
jb
pop
inc
xlat
cltd
sub
sbb
cld
test
pop
gs
xor
cld
stos
pop
push
inc
mov
inc
jecxz
dec
adc
push
mov
sarl
add
sbb
inc
jmp
gs
add
adcb
xchg
push
mov
jns
cli
or
aam
cltd
rcrb
cs
push
push
xchg
lods
pop
jge
loopne
movsl
xor
adc
push
and
je
mov
and
aad
fsubrp
jmp
mov
stos
les
movsb
adcb
xor
flds
cwtl
mov
xchg
push
ret
mov
sub
sbb
xor
mov
loop
sub
pop
adc
stos
leave
push
pop
loopne
mov
mov
pop
sar
pop
inc
js
clc
and
and
cli
arpl
daa
mov
jno
inc
adc
or
add
lods
sbbb
push
dec
cli
lock
nop
out
xchg
and
xchg
sub
dec
je
pop
call
pop
das
xchg
leave
daa
loopne
cmp
xchg
mov
ficompl
mov
inc
adc
cltd
lock
push
cwtl
add
clc
repnz
mov
out
fadds
repnz
jns
jmp
push
test
test
pushf
test
sbbb
sub
inc
inc
and
add
and
icebp
lods
cmc
adc
jo
cmc
sbb
and
mov
shrb
mov
imul
mov
xchg
out
into
lods
into
jne
inc
pop
sbb
xchg
inc
ljmp
sub
lods
hlt
mov
jae
not
cmp
popf
fs
mov
das
xchg
pusha
in
scas
arpl
stos
out
push
cmpl
in
push
in
mov
ret
sbb
test
adc
add
add
xor
lods
out
adc
setp
rorl
repnz
adc
or
insb
test
mov
add
and
jo
ret
sub
push
addr16
or
sbb
or
mov
mov
scas
aaa
adc
arpl
ja
pop
nop
ret
or
sahf
lahf
cmpsl
xchg
jae
std
sub
aam
les
imul
inc
mov
pop
pop
js
inc
enter
ja
sub
push
fists
cmp
out
popa
sbb
mov
adc
popf
mov
pop
jecxz
or
pop
nop
mov
xchg
mov
lds
xlat
in
pop
pop
inc
xchg
jg
out
mov
add
stc
popf
or
sub
mov
mov
mov
out
in
mov
jmp
push
xlat
lds
addl
pop
or
incl
loope
test
and
or
jg
std
lea
daa
xor
add
xchg
imull
test
outsb
enter
cwtl
mov
add
mov
jl
sub
pop
mov
cmp
cltd
test
popa
mov
out
or
enter
pop
mov
or
pop
mov
xchg
test
push
inc
mov
adc
mov
cltd
ds
jp
roll
nop
lods
mov
or
xchg
bound
shll
mov
pop
clc
jmp
out
in
pusha
bnd
mov
or
das
jl
jb
rcll
add
sbb
fisubrl
cmp
repz
stos
jns
or
lock
repnz
das
push
mov
sub
leave
mov
clc
arpl
jbe
ljmp
popa
cmp
xchg
sbb
dec
xchg
add
add
fcompl
mov
mov
les
add
rclb
das
mov
add
repnz
aaa
pop
loope
out
cmpsl
call
insl
add
pop
popa
jle
or
lds
outsb
nop
loop
sbbb
je
ja
sahf
aad
cmpsb
or
lock
or
movsl
or
nop
lods
popa
mov
or
cmp
dec
aas
stos
scas
icebp
add
aad
lock
add
cmpl
push
orb
and
adc
xchg
jg
cmc
mov
sub
add
jo
or
cs
xor
cmp
mov
mov
cmp
mov
pushf
inc
xchg
add
adc
cmp
loope
mov
xor
repz
adc
out
movsl
sub
stos
or
mov
push
sub
pop
push
lock
and
movsb
scas
popa
dec
cld
not
xor
mov
push
ja
jecxz
sbb
loop
mov
data16
loop
jne
jmp
dec
repz
testb
cmpsb
sbb
movsl
xchg
movsb
and
fdivl
mov
mov
pushf
mov
shrl
loope
xchg
and
insl
shll
or
iret
xor
push
xor
inc
clc
inc
or
adc
bound
sbb
fwait
and
loop
in
xor
mov
jne
inc
gs
fsub
sub
push
fiaddl
imul
jbe
iret
or
orl
ret
or
xor
lcall
sbb
xchg
int
sub
xchg
sarb
and
shlb
loop
adc
mov
xor
cwtl
sub
sbb
xor
in
test
fwait
loope
loope
cltd
dec
call
xchg
sub
rcll
jo
mov
dec
jne
mov
mov
push
test
cmpsl
push
iret
aam
fs
cmp
pop
lcall
xor
rcrb
clc
cmp
les
sub
divb
out
mov
mov
sbb
clc
mov
dec
jnp
pop
lret
mov
fucomp
ds
lcall
cli
pop
fldenv
sahf
jl
cmp
mov
icebp
stos
or
dec
jo
lret
in
mov
jo
mov
xchg
aaa
xor
lock
xor
test
pop
outsl
mov
mov
incl
push
add
out
call
xchg
push
sbb
loop
leave
add
cs
mov
scas
mov
jp
inc
cmp
inc
out
paddusw
jmp
adc
mov
movsb
push
ljmp
push
enter
shlb
mov
dec
jg
in
jae
fwait
test
or
pop
les
adc
or
andl
fildl
jno
sbb
mov
mov
adc
dec
pop
popa
loop
loopne
les
or
push
xchg
cli
push
mov
add
je
mov
mov
adc
pcmpgtb
pop
cmp
push
and
add
bts
movsb
mov
mov
test
movsl
sub
push
mov
andb
or
cmp
flds
cmc
cs
flds
stos
int3
insb
xchg
rolb
decb
loop
push
nop
orb
fld
divb
fdivl
mov
mov
insl
rcrl
dec
repnz
jo
pop
xchg
jmp
outsb
jle
iret
cmc
iret
push
rorb
jb
lret
jb
mov
sub
out
sbb
fsubrl
jg
shll
push
mov
outsl
xchg
lcall
push
mov
lds
sti
xchg
pop
rorb
inc
sbb
fwait
insl
pop
mov
push
xor
and
andl
sbb
dec
adc
mov
push
adcb
sbb
loope
or
loope
adc
test
push
fwait
xorl
shrb
push
nop
je
shlb
xor
pop
mov
shrb
leave
mov
xor
rcll
and
or
lahf
outsl
lcall
xchg
pop
cmp
push
jge
scas
and
push
mov
inc
das
fxam
mov
xor
icebp
lahf
xor
ljmp
xchg
ja
xor
ret
xor
pop
jmp
arpl
mov
mov
dec
adc
shll
mov
shrb
mov
decl
shl
mov
fnstcw
adc
cmp
xchg
sub
movl
gs
ret
add
jp
sbb
inc
pop
inc
mov
aad
ja
dec
pop
repnz
movl
xor
sbb
pop
push
dec
out
nop
cmp
fs
in
lods
push
and
ret
fcom
mov
call
mov
jecxz
adc
dec
out
jb
iret
sub
mov
in
aad
or
push
fisubl
pop
xchg
in
inc
les
pushf
xor
pop
cltd
cmp
jb
mov
andb
mov
mov
mov
insl
push
pushf
push
and
mov
lea
pushf
in
add
std
lahf
mov
gs
push
lahf
mov
call
cmp
or
add
jge
cmpsl
sbb
or
inc
mov
stos
leave
imul
xor
sbb
repnz
les
popf
add
jge
push
adc
fisttpl
enter
jp
inc
adc
mov
mov
dec
mov
ficomps
sarb
mov
call
test
lods
and
push
xchg
fmulp
cld
sahf
jnp
xor
scas
cwtl
sbb
stos
mov
jge
adc
jns
lock
jecxz
xlat
pusha
loop
ja
xor
push
push
add
lods
mov
mov
and
iret
mov
test
fwait
or
lahf
out
stc
dec
cmp
stc
sub
fnstenv
mov
rolb
sbb
aam
movsl
addr16
iret
pop
mov
adc
pop
frstor
push
or
cltd
stos
dec
out
lock
or
pop
std
shl
jecxz
les
ret
add
lret
sbbb
rcrb
inc
gs
or
sbb
fs
iret
sub
imul
adc
scas
sahf
sbb
paddb
xor
jne
incb
jae
mov
gs
sub
mov
push
jo
push
cmp
aas
mov
clc
and
jb
or
xor
scas
dec
jge
dec
mov
roll
xlat
ds
fdivrl
loopne
adc
xchg
nop
mov
mov
push
aas
in
xor
shlb
jae
xchg
mov
fistps
pusha
mov
xchg
xor
cmp
jmp
fwait
hlt
mov
sarl
sbb
push
in
cld
ret
cmp
push
pop
mov
adc
iret
xchg
jb
dec
push
cs
mov
mov
jmp
mov
fwait
pushf
gs
pop
repz
dec
pushf
jl
jle
ss
xchg
sub
sbb
xor
inc
xchg
fldl
ljmp
fcomi
add
jl
fiadds
mov
and
fists
or
arpl
push
rcll
push
imul
int3
arpl
jae
or
out
or
jmp
and
lret
lods
or
dec
fsubrs
cmpsb
sub
push
int3
pop
dec
xor
xchg
and
cmpsb
pop
mov
inc
sub
rcl
pop
xor
ret
out
shll
lds
pop
push
enter
shll
xor
je
mov
lret
mul
sbb
lock
adc
movsb
push
xor
mov
mov
ljmp
mov
or
cwtl
aas
pop
in
stc
pop
pop
lahf
leave
mov
pop
pop
mov
jnp
jo
and
inc
pop
inc
mov
dec
popf
pop
cmp
movsb
lret
sbb
ret
sbb
add
mov
div
lods
mov
popf
adc
push
mov
loope
arpl
rcpps
add
jge
inc
dec
or
je
mov
lret
lods
or
fdivrl
adc
outsb
sbb
dec
insl
mov
jg
das
test
dec
sbb
jg
jp
lahf
ds
dec
les
lods
je
fiaddl
test
adc
pop
sub
in
leave
test
outsb
cmp
and
or
je
and
mov
dec
fs
data16
adc
into
inc
and
xorb
xchg
int3
dec
mov
movsl
cmpsb
push
xchg
adc
int
sub
ja
xor
jo
idiv
inc
inc
dec
shlb
cld
out
movswl
xchg
bound
cmp
arpl
js
bound
cmp
inc
outsb
int
sub
test
scas
stos
xor
or
pop
mov
rorb
inc
push
push
hlt
add
pop
cmpsl
lds
lods
insl
adc
out
repnz
mov
lods
les
stos
xchg
xor
lods
xor
mov
mov
cs
and
xchg
sub
test
bound
je
emms
xchg
xor
pop
icebp
test
mov
inc
jl
scas
jmp
and
jo
xchg
in
orb
sub
xor
mov
mov
jns
and
mov
push
mov
mov
out
cmp
mov
cwtl
cmp
std
test
cmc
add
xor
sbb
pop
mov
fwait
movsl
jae
mov
jbe
pop
sub
jmp
and
pop
cmp
pushl
mov
jmp
mov
jmp
subl
imul
sub
repz
out
adc
push
and
xor
std
mov
add
dec
sub
sbb
mov
push
lock
out
adc
dec
jns
into
jmp
repnz
inc
xchg
mov
fwait
je
add
sub
in
repnz
mov
dec
dec
jl
and
pop
out
out
jo
shlb
lahf
lods
andl
repnz
cmp
pop
mov
pop
jge
dec
out
movsb
mov
dec
pop
sahf
or
sahf
cltd
sti
fdivrs
mov
add
daa
jle
mov
cli
xor
mov
data16
or
idiv
stc
fld
div
cmp
push
dec
cs
push
jge
test
pop
add
or
inc
inc
aad
sbb
cwtl
inc
inc
divb
xchg
shrb
mov
insb
mov
cmp
pop
daa
les
push
lea
fmuls
inc
ja
pop
loopne
pusha
popa
cmp
sbb
aam
loopne
popf
inc
outsb
inc
or
out
pop
mov
sbb
cltd
pop
imul
sbb
mov
ret
sbb
movl
pop
jae
dec
or
scas
mov
hlt
lahf
cli
orb
sub
mov
xchg
inc
bound
fisubs
in
jns
xchg
push
inc
sub
mov
add
adc
outsw
loope
mov
push
xchg
dec
jbe
jp
push
push
push
xchg
push
imul
arpl
rorb
or
lea
les
cld
xchg
cmc
pop
arpl
imul
push
fisubrl
push
dec
movsl
aaa
xchg
daa
dec
adc
jo
jp
jp
fsubrs
or
movsl
add
stc
clc
cli
stos
clc
es
push
idivl
mov
mov
sahf
xlat
and
push
out
cs
pushf
push
daa
les
push
add
call
adc
add
lods
sub
ss
push
lret
hlt
sub
adc
les
js
and
test
cmpsl
ljmp
or
inc
mov
or
push
sti
cmpsb
mov
cld
gs
loope,pt
ret
pop
inc
dec
xor
cli
mov
inc
ret
ds
outsl
xchg
pop
ds
inc
xchg
enter
xor
cmc
cmc
mov
or
xchg
jbe
jbe
int
les
cmp
pop
leave
sub
cld
fwait
outsb
pushf
scas
mov
push
lods
fidivs
nop
test
fidivrl
sbb
push
cltd
and
xchg
jg,pt
mov
sbb
push
loop
add
cmpl
sbb
ret
sbb
inc
cmpsl
test
aas
test
add
int
addr16
cli
pop
ffreep
jle
push
testl
repz
push
adc
loopne
roll
jmp
pop
lahf
push
shll
in
jae
dec
sar
dec
jmp
or
sbb
outsb
out
dec
cmp
popa
mov
fiadds
arpl
scas
cmp
inc
lret
les
lret
loopne
or
das
ss
add
xchg
fs
stc
mov
ds
clc
add
je
subl
call
test
xchg
cld
fwait
lea
out
jns
hlt
mov
jp
pop
icebp
hlt
ja
sbb
call
mov
and
iret
xchg
inc
cwtl
inc
or
mov
mov
mov
fs
cmpsb
stos
aad
xlat
mov
scas
mov
popf
pop
jb
shlb
sub
push
push
jl
adc
sbb
das
add
jo
in
jle
js
aaa
xor
mov
popf
paddb
cmp
repz
or
orl
or
sbb
scas
fcmovne
lcall
into
dec
fimull
xor
mov
xchg
arpl
cwtl
popa
pop
jg
iret
pminub
cld
aas
mov
int
test
arpl
mov
mov
dec
shll
cmpsb
cmp
dec
insl
icebp
popa
jg
push
fwait
icebp
xor
pop
inc
mov
xor
jno
test
push
jae
cmpsl
ret
stc
out
add
mov
cmp
dec
fs
jg
sbb
nop
outsl
cmp
jnp
mov
enter
stc
in
lods
add
aad
mov
aaa
fwait
push
call
adc
sarl
push
shll
xchg
cmp
push
das
jns
loopne
push
leave
loop
mov
je
stos
cmpsl
div
mov
call
sub
inc
shll
fisttpl
sti
adc
jp
cmpsb
xchg
test
jns
hlt
mov
aaa
outsb
flds
cmp
ret
aaa
js
insb
xor
ds
or
jg
stos
sbb
sti
or
fld
push
xor
mov
daa
mov
outsl
pop
popa
adc
cwtl
test
adc
jbe
mov
aas
cmp
jne
cmc
dec
mov
js
or
jg
inc
lods
orl
pop
aaa
inc
jecxz
out
popa
lret
jge
or
popf
mov
in
sahf
mov
jne
inc
sahf
xchg
xor
sbb
lods
test
jno
push
sahf
lcall
adc
cmp
fistl
sbb
int
or
sub
xor
testb
sbb
push
lcall
mov
jno
inc
js
fidivl
lock
rcrl
out
mov
and
xchg
aas
fs
daa
push
mov
cmp
and
fs
pop
mov
xor
mov
sbb
movsb
adc
std
js
ljmp
mov
cli
xchg
jmp
pusha
push
loop
lahf
mov
inc
bound
int3
out
fisubs
cmp
xor
inc
test
mov
dec
pushf
ja
lds
lahf
mov
jns
jmp
xchg
jg
sti
repz
add
aas
xor
movsl
mov
add
imul
push
cmp
lods
xorb
adcb
add
mov
aam
cli
neg
pop
sub
pop
mov
pushl
dec
mov
fs
nop
js
mov
mov
push
aas
mov
mov
inc
dec
icebp
aam
lods
gs
ja
push
lods
cmpsb
out
lret
and
adc
sbb
in
test
jcxz
mov
mov
cmp
mov
and
lds
xor
fidivl
push
std
addr16
popa
jns
sub
gs
std
out
xchg
rorl
inc
jb
lods
xchg
sbb
fistps
cmp
and
popa
ret
xor
mov
adc
setbe
jp
jle
sbb
int3
mov
fisttpl
lcall
roll
xor
push
dec
scas
inc
movsb
add
mov
add
lods
inc
movsb
jge
rcl
pop
push
jne
pushf
repz
mov
iret
mov
cmc
adc
in
cmp
ret
test
cmp
inc
cwtl
mov
push
popf
addb
inc
xor
pop
movsl
mov
mov
sti
sbb
adc
inc
jg
jmp
xor
xor
mov
test
jbe
addb
test
mov
decl
lret
xor
mov
test
pusha
es
fimuls
mov
inc
add
adc
push
inc
push
aad
mov
fidivl
adc
sbb
and
inc
outsl
out
sbb
cmp
cmp
pop
testb
sbb
outsl
sub
faddl
shll
repz
stos
lcall
loope
mov
scas
js
cmp
scas
lea
add
mov
mov
push
gs
inc
push
test
loopne
nop
add
pop
xlat
sbb
pop
or
push
inc
dec
push
jecxz
pop
jbe
fidivrl
lcall
xchg
xlat
mov
mov
shrl
pop
adc
sti
pushl
jo
clc
cld
loopne
into
mov
repnz
add
lods
lock
in
fadds
add
fndisi(8087
pop
fildl
hlt
call
sbb
mov
or
mov
cmpsl
sbb
sub
jno
jno
lods
cmpsl
add
subl
jo
mov
xor
mov
sbb
imul
inc
cli
in
xor
push
fs
data16
mov
aad
adcb
out
fwait
jg
jno
cmpsb
jg
mov
and
andl
adc
pusha
mov
mov
sbb
std
insl
mov
sbb
std
rcll
cli
fwait
ljmp
movsb
andb
das
clc
shll
enter
and
push
xchg
lds
mov
push
fwait
shll
jae
sbb
or
sbb
lahf
dec
ds
repz
or
imul
jo
jp
push
xchg
fdivs
push
sub
test
mov
jp,pt
ret
stc
jbe
pop
mov
sub
outsl
cld
jbe
jg
adc
hlt
jge
out
mov
cmp
sarb
jge
sub
jmp
aas
jb
lahf
imul
test
adc
mov
dec
mov
icebp
and
add
into
dec
rolb
jmp
cli
iret
sarb
sahf
ficoml
mov
mov
jmp
or
pop
xor
add
cmc
push
or
pop
das
pop
lds
mov
cmp
ret
pushf
xor
pop
push
shll
mov
mov
xor
xchg
mov
inc
sbb
gs
out
jp
fidivrs
imul
lret
inc
daa
pop
xor
xchg
pop
xchg
ja
mov
mov
jbe
cli
lock
mov
cmp
lahf
xor
push
aas
adc
inc
inc
js
cmp
test
jae
inc
and
dec
jne
pop
push
jb
xchg
shlb
push
stos
pop
inc
into
mov
int
fldt
cmp
mov
mov
mov
mov
xchg
or
adc
dec
enter
ljmp
mov
cmpl
add
popa
dec
xchg
or
fldl
pop
mov
fisubrs
push
push
lods
xor
test
loopne
js
add
imul
out
pop
lahf
pop
adc
imulb
pop
dec
sbb
add
lcall
and
es
add
mov
dec
sub
mov
dec
cmp
dec
push
push
dec
sbb
in
cld
pop
insl
mov
pusha
pusha
push
loope
loop
push
xor
push
push
dec
push
lcall
aas
and
pop
js
inc
imul
add
mov
loop
imul
push
and
jae
pop
mov
sbb
hlt
sub
fsubs
gs
cwtl
dec
insl
insb
shlb
cmp
icebp
repz
jbe
mov
popa
into
jno
xchg
ja
pop
je
stc
or
or
xchg
int3
xchg
outsb
aad
es
xchg
sbb
popf
faddl
mov
mov
roll
mov
pop
leave
cmp
fcmovne
sahf
push
jae
or
pop
lods
push
shl
inc
jp
dec
fs
insl
sub
movsl
pushf
and
loop
lret
add
xchg
ljmp
jb
xor
insl
imul
test
mov
sub
sbb
dec
push
add
mov
sbb
pop
or
test
rolb
fsubs
xchg
xchg
ss
inc
cmp
ret
pop
add
out
xor
pop
or
cmp
pop
jnp
xlat
test
ss
fisubs
cmpsl
daa
lea
mov
dec
push
mov
pop
test
add
pop
fcom
notb
aaa
idivb
add
pop
fisubrs
jb
inc
ficoml
ljmp
sahf
cmc
les
orl
lcall
fmull
outsb
xor
je
idivb
sub
repnz
adc
movl
ret
inc
ljmp
sarl
fcomps
pop
xchg
mov
cmp
cmp
insb
jbe
mov
and
sub
inc
jae
popf
mov
jl
cmpsb
inc
out
cmp
mov
lcall
stos
push
and
sbb
mov
loope
inc
cmp
xchg
ljmp
dec
jle
mov
add
cmp
lock
into
and
adc
fiaddl
aad
bnd
inc
sti
mov
dec
notb
mov
inc
sbb
xor
loope
iret
xlat
mov
dec
lea
mov
jge
jl
push
sbbb
jbe
push
inc
daa
aam
sbb
sub
jne
mov
push
jbe
shl
lock
stos
cmp
sub
xchg
outsb
jae
xor
int
or
sti
or
call
mov
pop
push
adc
jge
scas
mov
pushf
loop
jecxz
jle
jg
addr16
fdivrs
add
push
jp
lods
xchg
push
int3
mov
mov
ds
lds
adc
inc
repz
pushf
jecxz
negb
iret
add
add
add
add
sub
add
inc
add
adcb
add
pop
add
addb
add
add
add
jo
add
add
add
call
add
addb
add
add
add
clc
add
andb
add
add
add
add
add
or
add
add
add
or
add
add
add
or
call
add
add
add
add
or
adc
add
sbb
or
sbb
add
pop
add
push
add
dec
add
dec
add
lldt
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
and
add
add
add
arpl
mov
dec
es
jae
adcb
enter
nop
sub
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
movswl
call
inc
jns
pop
insb
xor
pop
add
push
pop
push
sbb
pop
mov
pushl
mov
pop
push
jmp
into
out
cld
test
or
add
sbbl
adc
das
jge
push
jmp
les
cs
pop
gs
pop
pop
add
add
mov
push
push
mov
pop
popl
push
call
scas
mov
shll
std
repnz
sar
lahf
in
mov
rcrb
mov
sub
movswl
add
mov
cmp
jne
mov
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
jmp
mov
pop
lods
jne
adc
stc
or
loope
nop
cmp
test
loop
xchg
arpl
fs
lcall
mov
out
stc
call
test
push
testb
and
push
arpl
push
in
andl
mov
add
test
loope
xchg
adc
arpl
stc
out
mov
mov
call
jnp
test
pushf
pop
icebp
pushf
jb
cmp
sbbb
scas
aaa
cmpb
xchg
jp
scas
movsb
add
loope
adc
popa
xlat
jle
arpl
clc
jl
out
push
pcmpgtb
mov
lods
mov
dec
in
inc
insl
xchg
in
sti
out
in
decb
gs
in
inc
pushf
int
inc
insl
inc
roll
in
inc
insl
and
loope
cli
popa
dec
fimull
add
pop
bound
bound
test
loope
jge
orl
cwtl
mov
adc
negl
push
test
rcrb
jne
in
inc
insl
push
jo
call
dec
fsubr
pop
loopne
out
mov
xor
in
inc
insl
rcll
mov
mov
push
add
push
or
sbb
mov
pusha
inc
insl
inc
popa
js
push
and
xchg
mov
sahf
lds
jmp
sti
fmulp
inc
jb
mov
ss
jmp
pop
jl
jmp
sbb
rcr
xchg
push
mov
movsb
jno
jmp
jge,pn
push
xor
cld
and
imul
sub
bnd
icebp
dec
lods
xchg
fs
xor
addr16
xchg
pop
jmp
jnp
xlat
jnp
rcll
jl
jmp
das
jge
push
xchg
test
bound
ret
push
lods
push
and
addb
andl
xchg
ret
pushf
mov
das
testb
fdivr
repnz
add
loopne
iret
mov
int3
pop
fmuls
inc
fsub
xchg
ret
pushf
call
inc
in
xor
dec
push
and
sub
sub
xchg
repz
inc
popa
sbb
pushf
ret
lret
or
cmp
adc
adc
cmp
sbb
and
es
xchg
sub
jmp
ret
xchg
xchg
jne
mov
jne
xchg
cmp
aad
pusha
sti
push
mov
jns
repz
push
repz
mov
gs
xor
add
sbb
push
repz
fimull
popf
cmc
lock
repz
push
xchg
divl
aas
sbb
lock
repz
cmc
xor
cmc
lock
repz
jae
js
push
repz
push
repz
jmp
shrb
cwtl
adc
sbb
dec
movsl
ja
sti
push
push
push
loop
mull
loopne
call
push
mov
rclb
adc
push
repz
adc
and
fs
ljmp
sti
leave
dec
mov
push
repz
sti
push
inc
jbe
push
repz
test
arpl
push
cltd
and
push
ret
fs
pop
sub
lret
dec
push
iret
push
repz
and
fs
leave
dec
mov
push
repz
pusha
sti
push
js
xchg
mov
push
repz
mov
iret
push
repz
push
jbe
pop
push
repz
adc
out
out
repz
jmp
sti
leave
mov
dec
test
sti
push
sub
push
repz
cld
in
jmp
ss
popa
cmp
fs
mov
fists
mov
jo
fisttpl
mov
push
repz
test
sti
push
sub
jno
lock
leave
lock
sti
leave
mov
dec
aad
pusha
sti
push
jp
repnz
xchg
jmp
jbe
cmp
sti
push
js
xchg
mov
push
repz
or
xchg
push
repz
lret
repnz
sbb
fwait
fs
repz
hlt
push
repz
push
repz
xchg
repz
push
repz
push
sahf
jmp
popa
dec
js
pop
and
jne
mov
mov
push
jns
mov
add
in
push
add
repnz
cs
inc
jg
mov
push
jns
mov
add
repz
push
add
repnz
cs
inc
fbld
push
mov
popa
or
push
shll
push
jns
mov
add
jecxz
cmp
pushf
enter
lock
push
repz
push
shll
push
jns
mov
add
adc
push
repz
push
shll
push
jns
mov
add
adc
decl
sti
pop
mov
insl
mov
sbb
std
inc
insl
outsb
jne
mov
popa
or
push
shll
push
repz
sbb
popa
jne
js
cmpsl
pusha
decl
sti
pop
dec
pop
jnp
lock
push
jmp
push
sbb
pop
repz
cmp
add
test
jmp
push
sbb
repz
test
imul
jns
xchg
cmp
push
repz
cli
push
hlt
fs
push
repz
sub
popf
jecxz
int
xor
loop
repz
inc
ja
lock
xchg
push
repz
std
aaa
pusha
sti
push
jbe
out
push
repz
and
ja
repz
repz
stos
jo
iret
shrl
mov
lock
repz
dec
and
push
push
cs
fs
lahf
imul
push
jo
iret
imul
xchg
stos
push
test
sub
dec
xor
push
mov
push
dec
jns
scas
jl
mov
mov
push
imul
scas
sti
mov
loop
jecxz
cli
loopne
ds
cmp
in
imul
test
jecxz
mov
mov
add
call
or
fs
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
mov
mov
push
repz
push
repz
push
repz
adc
fs
push
repz
push
repz
push
repz
mov
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
xchg
popa
lods
jo
cmp
arpl
incb
ret
mov
cs
cwtl
pop
jp
mov
lcall
mov
xchg
mov
inc
xchg
push
inc
mov
dec
arpl
xlat
in
divb
xchg
add
in
aam
xchg
jp
in
mov
or
shlb
jg
das
push
mov
cmp
inc
insl
jle
sub
sti
and
and
add
outsb
incb
adc
dec
jne
in
pushf
pushf
mov
ja
and
fsubs
int3
jp
loope
fcomps
and
out
add
and
jne
adc
xchg
mov
sbb
push
mov
rclb
jmp
fnstcw
xchg
rcrl
adc
add
and
add
add
add
dec
or
inc
dec
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
dec
or
cld
dec
or
mov
or
add
dec
or
int3
dec
or
jmp
add
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
addb
add
icebp
dec
or
add
add
pop
dec
or
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
sub
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
push
add
push
add
add
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jb
jne
push
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
sub
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
jne
push
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
jb
jne
push
add
add
js
add
add
add
add
add
jb
imul
je
add
jne
imul
add
cmp
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
push
add
push
add
add
dec
add
jne
push
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
add
pop
mov
add
jg
pushl
add
add
ja
jo
add
jg
js
add
add
sti
sti
sti
sti
add
add
js
add
add
ja
ja
jo
add
js
jo
add
js
jo
add
js
jo
add
dec
mov
mov
ja
add
dec
int3
int3
inc
mov
pop
ja
jo
ja
add
dec
int3
int3
inc
dec
jo
cmpb
pop
xchg
add
inc
inc
jo
add
add
add
int3
int3
add
inc
ja
mov
jo
jg
incl
inc
inc
mov
push
ja
pop
jg
decl
add
ja
ja
ja
js
jo
xchg
mov
inc
add
add
add
ja
jo
js
ja
incl
ja
mov
jo
xchg
mov
incl
clc
js
incl
jg
jo
add
jg
pop
incl
jg
jo
add
pop
lock
jl
int3
int3
int3
jg
jo
add
add
jg
int3
int3
int3
int3
int3
jg
jo
add
add
add
int3
int3
int3
int3
int3
jg
jo
add
add
add
into
int3
int3
int3
int3
jg
jo
add
add
add
into
int3
int3
int3
int3
jg
jo
add
add
add
int3
int3
int3
int3
int3
jg
jo
add
add
add
add
add
add
jo
add
add
add
ja
ja
ja
xchg
add
add
add
mov
xchg
add
add
add
push
jo
add
add
add
js
mov
jo
add
add
add
pop
ja
ja
ja
ja
add
sarb
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
add
push
cmp
add
cld
add
or
xchg
add
jne
adc
mov
les
and
and
and
inc
jl
push
and
addb
push
and
adc
mov
xor
mov
or
lods
mov
leave
mov
jmp
adc
or
push
je
add
xor
add
ret
xor
sub
int3
and
rolb
inc
aam
mov
adc
add
pop
push
dec
bound
add
je
and
orl
lods
jb
cmp
pushf
and
nop
in
jb
cmp
sbb
test
andl
js
shlb
shlb
and
pop
add
pop
in
jb
cmp
sbb
add
inc
xchg
fmul
fsub
add
jb
cmp
cld
add
and
add
call
in
adc
or
add
call
or
inc
and
faddl
je
push
movzwl
add
jmp
sub
cltd
xor
or
js
and
xchg
pop
and
and
sbb
push
push
mov
adc
add
push
leave
call
add
test
jne
add
mov
mov
xchg
or
sbb
ret
rorb
mov
sbb
push
inc
inc
cmp
jne
add
iret
adc
push
pop
nop
add
mov
hlt
pop
je
jbe
or
call
test
dec
dec
mov
push
mov
push
or
addb
bound
inc
pusha
ret
add
jg
jle
gs
pop
push
adc
mov
nop
push
push
orb
out
pop
bound
cmp
loopne
mov
scas
cmp
inc
mov
push
or
push
jne
addl
frstor
sbb
sbb
jmp
xchg
add
add
or
cmp
jl
icebp
clc
jg
add
pop
pop
add
mov
jns
add
mov
mov
jb
inc
into
add
add
call
ja
add
jne
in
or
cwtl
or
stos
cmpl
and
cmpsb
gs
jmp
add
divb
add
into
fldl
clc
aaa
xor
iret
pop
sub
add
sub
aas
sub
add
jl
cmp
adc
rolb
sarl
test
add
or
or
pop
cmp
cltd
inc
sbb
pop
xchg
nop
pause
mov
in
lock
jge
pop
mov
cmp
out
adc
add
or
push
add
and
sbb
cmp
testl
and
sarl
sbb
addb
mov
shlb
pop
clc
stos
fs
call
fmull
add
push
pop
push
push
push
pop
jne
jns
lret
and
cmp
ja
movsl
add
movsb
insb
lahf
in
rorb
adc
movl
adcb
call
add
mov
rorb
push
xchg
repz
nop
out
ja
inc
and
movb
ds
xor
push
push
xchg
jbe
add
cmpsb
jne
push
jae
add
sub
jo
cltd
dec
adc
cmp
jmp
pusha
aas
add
add
sub
push
psubsw
or
adc
xchg
sbb
adc
cmpsb
mov
dec
test
pop
ljmp
add
xchg
add
je
xchg
and
xchg
add
sub
dec
inc
cmc
xor
cmp
add
add
xor
sbb
clc
call
or
pop
inc
adc
sub
fs
push
test
shrl
cmpsb
jmp
adc
mov
mov
xchg
imul
je
sub
mov
and
xchg
sahf
jmp
inc
add
pop
leave
lock
sub
cmovno
add
mov
or
out
fdivrp
lea
std
pop
sub
inc
inc
dec
pop
inc
loop
adc
add
inc
sarb
incl
aas
push
xchg
add
cmc
add
xor
pusha
movq
sub
jl
xlat
push
push
call
and
push
std
add
dec
jbe
nop
mov
fnstsw
rclb
and
adc
cmpsl
add
pop
movsl
and
add
call
insb
aaa
add
jp
pop
mov
clc
je
add
cmpsl
xchg
add
bound
dec
pop
adcb
test
inc
mov
movsb
loopne
xchg
fimull
pop
test
es
mov
das
mov
push
xor
test
es
inc
jne
test
mov
popf
out
dec
mov
or
push
or
mov
push
add
pushw
cmp
sub
sbb
mov
cmp
push
fdivs
add
cmpl
outsl
sub
imul
or
inc
movups
push
adcb
cwtl
sbb
jecxz
xor
add
push
es
sti
add
jae
ror
push
add
mov
repz
mov
mov
and
mov
push
ret
mov
cmp
inc
je
add
push
adc
out
pop
adc
add
mov
in
pushf
cmp
dec
fs
pushl
int3
andb
xor
leave
cmpb
roll
adc
ja
cmp
shlb
mov
push
cmp
add
orb
cmp
shl
hlt
add
push
rolb
daa
add
jl
movb
sub
pop
cmp
push
test
mov
ret
jmp
in
mov
les
dec
ds
add
xor
rclb
sbb
or
daa
push
xchg
push
call
mov
imul
rcl
lea
cmp
and
add
pushf
mov
pop
jo
pop
jl
scas
pop
cmpsb
orb
jmp
out
sub
jbe
in
push
pop
push
in
pop
cmp
loopne
cmp
inc
movsl
adc
add
cmp
jo
add
test
jns
cmp
stc
add
movsl
das
jne
add
jmp
xchg
pop
mov
sub
push
pusha
mov
scas
sub
pusha
dec
movsb
popf
adc
dec
add
roll
pop
add
or
movhps
test
cmp
cmpsb
adc
and
cmp
mov
les
clc
add
add
jl
add
push
cwtl
test
mov
sub
jl
adc
leave
and
mov
orb
incl
rolb
loop
cld
popa
in
test
add
adc
outsb
or
add
xor
push
sub
xchg
hlt
ret
and
sub
push
dec
fs
xor
and
or
add
dec
sub
add
push
sub
scas
bswap
xor
testl
divb
sahf
loopne
inc
andb
sarb
push
and
add
add
ret
push
fs
gs
mov
icebp
test
or
in
fadds
and
sbb
repz
inc
or
add
andl
xchg
lret
mov
and
mov
pop
dec
xchg
pop
fsub
shlb
sub
push
shl
jg
leave
fsub
ds
mov
dec
adc
add
push
xchg
in
ja
addb
pandn
add
adc
sub
in
cwtl
and
inc
xor
mov
imul
push
lcall
mov
or
clc
add
cmp
xor
add
mov
addb
mov
add
xchg
nop
add
mov
out
test
shlb
dec
lret
orb
imul
add
xchg
jmp
lcall
mov
pop
out
stc
cvttps2pi
or
dec
or
adcl
fbld
xor
add
fnstcw
add
or
add
mov
sub
adc
dec
enter
adc
pop
add
sbb
enter
lcall
lea
cld
adc
pop
or
xchg
cmp
sbb
es
sub
add
and
add
repz
je
and
aas
mov
xlat
xor
adc
and
dec
pop
xchg
aaa
insl
sub
outsl
incb
dec
sbb
addl
pop
fs
adc
xchg
pop
mov
add
fldl
icebp
call
cmpsb
add
jnp
mov
jne
add
and
mov
cmp
dec
stos
pop
dec
push
xor
addb
clc
add
dec
push
aaa
pop
bound
push
addb
jne
or
pop
ljmp
push
dec
mov
or
je
jo
ja
jg
test
sub
icebp
insb
or
jnp
or
mov
jg
jge
pop
arpl
je
push
jle
jmp
fcoml
or
push
add
inc
xor
pop
sub
mov
add
cmp
fldt
les
or
test
mov
mov
add
mov
pop
or
xor
and
dec
mov
fdivrl
bound
cmp
or
roll
add
or
bnd
dec
cmp
jecxz
push
add
pop
pop
aam
add
mov
insb
pop
mov
add
mov
mov
or
or
add
push
jo
dec
add
dec
xor
lock
pop
out
inc
fsincos
inc
pop
rolb
subl
int
dec
jge
je
jns
sub
ret
add
shlb
dec
sahf
jmp
add
hlt
lock
xchg
lahf
jno
or
or
or
adcl
cs
mov
lock
add
and
inc
sbb
daa
xor
jns
adc
loope
or
sub
inc
mov
cmp
add
xchg
and
mov
xchg
inc
push
cmpsl
pusha
adc
and
and
pushf
andl
add
cmp
inc
sub
jmp
add
jge
jb
pop
jmp
cltd
test
adc
jne
push
cmp
ret
pop
fs
inc
adc
sbb
jns
or
ret
mov
or
push
add
pop
je
mov
mov
add
sub
loopne
dec
push
int3
aas
enter
dec
sub
ret
pop
sbb
data16
xchg
push
imul
cmp
mov
or
push
addb
loop
add
xchg
movsl
scas
add
add
je
sbb
add
and
add
aaa
orl
test
mov
out
js
mov
clc
rcrl
jbe
add
or
icebp
adc
push
bound
roll
mov
and
cmpsb
fsubrs
js
addb
adcb
out
add
dec
mov
ret
add
pop
mov
mov
add
nop
enter
syscall
mov
lahf
fdivrs
jne
cmp
sub
add
add
es
mov
dec
rsqrtps
rcrb
sub
adc
or
testb
add
test
aam
scas
sti
movsb
jl
sbb
pop
pop
incb
mov
xor
or
or
and
jae
add
adc
sbb
jb
ret
push
sbb
sub
sbb
add
sub
sbb
jmp
test
mov
xchg
js
ret
jg
in
pop
cmp
add
lods
cmpl
add
jmp
dec
sahf
movsb
xchg
push
sub
dec
add
cmp
dec
pop
sub
fcoml
add
mov
xor
adc
or
jmp
dec
jmp
lods
cmpsl
imul
push
bnd
add
cmp
and
movl
cld
jmp
ss
sbb
xchg
xor
mov
ret
in
dec
sbb
psubb
adc
call
jmp
pavgb
mov
jge
jo
and
cmp
add
sbb
xchg
xlat
adc
sub
ret
test
dec
sbb
xchg
mov
mov
test
add
jl
sbb
and
pop
lahf
jne
imul
jge
pop
pop
cmp
lods
push
pusha
adc
rolb
xlat
cltd
xor
adc
cwtl
loopne
lock
or
add
call
dec
adc
add
jns
call
add
or
out
or
cmp
iret
add
into
fcmovnu
lret
fcmovu
add
loopne
jecxz
in
in
pop
or
push
mov
pop
push
shlb
gs
push
inc
push
popl
syscall
jmp
adc
enter
cmc
std
xlat
add
adc
xchg
pop
add
rep
incl
frstor
push
cld
inc
add
add
add
xchg
push
movw
or
nop
les
cld
push
cltd
cwtl
push
jb
decb
loopne
add
jbe
cmpb
jne
or
or
or
add
adc
jmp
add
and
jl
inc
push
add
push
add
test
cmp
pop
in
pusha
jnp
add
pop
rol
jl
add
cmc
add
mov
sbb
clc
mov
xor
cmp
push
leave
adc
sub
and
mov
enter
subb
out
repz
xor
inc
cmp
mov
jl
mov
jnp
shll
loopne
scas
call
enter
addr16
mov
add
imul
data16
mov
inc
jns
mov
add
imul
loope
sbb
add
mov
in
or
or
mov
insb
jl
or
fstps
add
jo
add
push
sub
pop
sbb
cmp
dec
push
sbb
add
cwtl
nop
mov
aaa
add
arpl
inc
adc
adc
add
out
shll
add
dec
xlat
xchg
fiadds
jbe
add
dec
add
mov
push
lds
shr
fwait
loopne
add
daa
repz
loopne
in
out
sbb
es
ret
sbb
dec
in
adc
pop
add
xchg
sbb
adc
push
add
add
loop
push
and
add
out
clc
add
je
mov
cmp
add
xor
dec
add
rorl
mov
push
inc
or
addl
sbb
aam
mov
adc
ret
jbe
jmp
sbb
nop
push
mov
xchg
adc
or
add
or
stos
mov
dec
xchg
stos
pop
inc
and
adc
test
les
test
add
loop
push
xchg
int3
adc
wrmsr
adc
iret
orb
in
pushf
pop
mov
or
icebp
xchg
adc
add
add
out
mov
jae
pop
sub
mov
sbb
xchg
add
pop
sub
jne
jl
add
mov
rorb
and
dec
shlb
adc
xor
xchg
jmp
enter
push
leave
ljmp
mov
push
add
add
mov
cmp
sub
sub
data16
and
cli
popa
pop
pop
hlt
pop
pusha
inc
mov
aas
sub
test
jmp
or
cwtl
addr16
add
clc
mov
add
jb
insb
fcoms
jne
pop
out
int
add
jl
add
mov
and
js
movd
js
add
fidivs
push
add
push
xor
je
ret
shlb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
test
jmp
jo
add
inc
mov
dec
jne
cmp
cmp
dec
add
pop
add
push
inc
xor
out
in
add
push
jbe
xor
es
aas
and
fdivrl
mov
sbb
and
cld
jo
jl
mov
or
loope
rolb
cmp
add
push
sbb
add
jbe
mov
push
insb
and
jne
loop
cmpsl
or
add
sub
cwtl
add
rcrl
add
mov
pop
push
add
dec
clc
jae
ss
push
add
das
push
mov
imul
cs
sub
xor
xor
mov
add
inc
hlt
mov
add
clc
mov
enter
lcall
sub
cmp
lods
push
inc
add
cld
sub
mov
mov
pushl
and
ret
or
add
mov
adcb
sbb
push
inc
add
pop
inc
outsl
jb
insb
popa
cmp
cmpb
jo
push
dec
rolb
add
popa
jae
push
add
imul
mov
add
jo
xor
mov
cs
mov
cmp
add
sbb
je
mov
add
hlt
jbe
xchg
push
add
pop
call
mov
jmp
mov
test
rolb
add
or
leave
dec
sbb
popl
jl
sub
loopne
stc
add
inc
gs
pop
pusha
fiaddl
mov
add
push
cld
push
mov
ror
stos
mov
nop
aas
fimull
gs
pop
hlt
imul
arpl
mov
add
pop
xor
jo
sbb
jmp
cmp
mov
rol
sbb
dec
jae
testb
or
cmp
clc
aaa
dec
jne
cmp
test
fxch
adc
fildl
sbb
ret
dec
add
push
push
cltd
and
sarl
adcb
add
repnz
clc
or
add
ret
pop
add
sub
enter
cld
notl
pusha
adc
cmp
pusha
lods
push
cmp
nop
rclb
or
rolb
into
movsb
cld
pop
add
adc
adc
jmp
lahf
xchg
popa
sub
push
push
push
add
cmpl
in
je
add
imul
and
movsb
or
add
or
pop
inc
lock
push
mov
inc
sub
lods
or
or
sbb
push
pop
and
dec
pop
daa
and
sbb
adc
call
add
pop
lods
mov
out
stos
push
push
call
adc
loope
jbe
push
imul
in
push
cltd
cmp
int3
aam
xchg
push
fistl
push
add
push
push
cmp
mov
rclw
pop
adc
add
push
push
or
mov
pop
cld
push
add
leave
shlb
cmp
popa
sub
or
nop
and
add
inc
add
add
xchg
push
jbe
movsb
add
loope
pop
sub
out
adc
xchg
and
or
mov
jbe
push
add
mov
and
add
inc
idiv
out
cmpsb
sldt
cmpl
cmp
orb
outsb
add
call
push
cmp
adc
test
push
mov
out
mov
dec
mov
into
cli
out
push
je
aaa
jg
add
jbe
pushf
add
ja
imul
ret
mov
loop
inc
out
and
js
mov
mov
sub
cmp
stos
push
push
ljmp
or
xchg
icebp
mov
dec
add
push
xor
fstpt
sbb
mov
sub
das
shll
rcrl
jl
inc
add
decl
mov
insl
mov
cwtl
aad
push
pop
add
inc
shrb
xor
add
lret
mov
jecxz
ss
lods
sbb
adc
or
add
jmp
push
nop
xchg
cmp
je
pop
mov
add
add
and
add
inc
cmp
add
or
dec
mov
or
and
rclb
inc
inc
add
fdivrs
jae
xor
ficoml
imul
inc
call
je
mov
imul
add
dec
fld
jns
push
popa
add
adc
mov
inc
mov
jmp
ja
jne
add
daa
and
xchg
push
loopne
adc
add
mov
roll
push
call
test
vpmadcswd
or
add
inc
ret
idivb
or
add
inc
and
cmp
push
push
push
mov
pop
add
sub
mov
push
inc
xor
xor
jne
and
or
or
pusha
sar
pushf
add
or
xchg
jne
bound
xor
fdivrp
and
push
push
adc
adc
push
lea
and
pop
lret
jecxz
dec
je
les
push
inc
pop
call
loop
addb
dec
das
xor
add
and
das
cmpsl
inc
add
shl
dec
xor
movq
inc
pop
sub
inc
push
sub
mov
adc
dec
jmp
pusha
add
les
orl
dec
add
cmp
adc
sub
add
push
pop
and
cmp
add
wrmsr
das
push
mov
es
sub
enter
leave
cmp
jmp
int
and
sbbl
xlat
aad
in
in
fdiv
push
std
or
fprem
push
daa
add
loopne
jmp
in
or
pop
and
adc
add
add
repz
push
cmc
loop
lods
dec
cmp
clc
popf
cmp
and
std
mov
adc
pusha
popl
add
je
xorb
add
pop
mov
arpl
cli
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
adc
cmp
sahf
or
stos
adc
fistps
ja
in
mov
jmp
add
add
cmp
dec
add
jo
push
or
je
cmp
cld
cmc
cmp
mov
push
scas
xchg
adc
push
add
or
mov
add
push
fstpt
sar
inc
fiadds
push
dec
xchg
sbb
and
add
sahf
mov
mov
add
or
nop
pusha
mov
sti
push
xor
je
push
push
js
inc
and
cmp
jle
inc
sbb
mov
test
shrl
jg
pusha
pop
add
mov
jge
les
movsl
mov
mov
sbb
jecxz
lods
enter
add
or
cmpl
mov
mov
and
sub
inc
rolb
mov
add
mov
je
incl
mov
sbb
cmpl
jne
mov
pop
cld
es
mov
and
xor
testl
inc
je
sbb
lea
mov
push
push
js
daa
and
add
cmpsb
pop
cmp
add
test
add
lods
sub
imul
pop
mov
adc
adcl
add
dec
push
mov
add
inc
pop
pop
incl
addl
jp
push
add
call
test
rdmsr
ljmp
pushl
sbb
and
aaa
xchg
movsb
add
pop
adc
add
sbb
leave
test
addl
add
pusha
ljmp
sbb
sbb
add
sti
and
out
sbb
phaddw
aaa
and
push
adc
mov
loopne
xor
cmp
in
or
and
dec
mov
mov
call
pop
sub
insb
pop
push
pop
mov
mov
inc
or
or
sub
and
mov
pop
pusha
cmp
push
xchg
pop
fistps
pop
inc
fdivrl
lds
push
add
outsl
sub
ret
dec
mov
jb
add
movsb
mov
or
lret
mov
mov
sti
xchg
add
pop
add
mov
jb
je
add
jae
jns
jo
cli
aas
add
jp
sub
addl
sub
scas
lret
add
insl
mov
push
nop
mov
mov
bnd
dec
fisttpl
cmp
sbb
dec
and
jl
lock
push
inc
lret
push
lea
in
add
pusha
inc
add
movl
push
or
pop
pminsw
dec
lret
xor
or
inc
inc
jg
pusha
cmc
inc
jo
mov
pop
daa
es
sbb
dec
cmp
pop
imul
outsb
xchg
dec
add
jle
sub
xchg
mov
pop
loopne
push
adcl
repnz
or
stc
add
jo
clc
xchg
pop
xchg
jle
add
mov
xor
jnp
cmp
clc
add
xchg
or
inc
cwtl
movsl
lock
pusha
outsb
and
or
mov
clc
icebp
ds
flds
or
push
and
addb
jge
sub
mov
sbb
add
push
push
adcl
add
icebp
test
add
xchg
into
mov
fwait
in
push
add
aam
dec
ds
push
test
loope
mov
addb
mov
loop
lock
push
sub
push
or
sbb
pop
icebp
inc
xor
lahf
add
rorb
es
and
add
add
mov
pop
sub
inc
push
in
and
push
xor
bound
and
or
add
xorl
push
jbe
sti
and
cmp
mov
inc
and
nop
push
push
adc
xlat
mull
imull
pop
mov
sbb
pusha
and
add
xor
xchg
add
add
add
lahf
and
je
xor
mov
jmp
add
cmp
in
call
jp
push
sbb
jbe
testb
cmpsb
test
aaa
popa
pusha
add
mov
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
xchg
dec
lock
lods
dec
xor
pop
lea
loopne
mov
or
popl
lret
imul
mov
aaa
push
xor
ja
add
ret
ljmp
pop
and
inc
dec
push
pop
test
pop
out
mov
fwait
sub
ljmp
add
sub
cmp
add
cmp
out
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
in
rorb
dec
cld
nop
cmp
add
inc
js
or
jno
sbb
push
cmp
add
jmp
add
add
lods
push
out
inc
int3
pop
add
mov
pop
sbb
es
jl
cmp
or
add
sarl
push
sbb
hlt
insb
xchg
xchg
ret
mov
add
mov
icebp
out
adc
add
sahf
pop
mov
sub
add
cld
dec
jl
ret
dec
ret
ret
add
cmpsl
iret
data16
stc
add
cmp
setb
push
xchg
cli
jmp
fbld
xor
cld
rolb
adc
jle
cli
aad
adc
repz
sbb
mov
dec
add
jne
or
dec
cli
out
add
popf
inc
mov
mov
xor
add
scas
and
jne
cli
dec
in
es
sbb
loopne
ja
push
xlat
mov
mov
inc
scas
xor
fsubrl
rorb
stos
xor
cmp
jl
mov
add
jmp
test
aam
leave
pop
fildl
adc
enter
repz
add
fimull
push
inc
sub
in
orb
add
loop
mov
call
add
in
sub
mov
jecxz
push
adc
pop
sbb
ret
or
dec
xchg
pop
xor
add
test
pop
adc
add
leave
cltd
or
push
mov
xor
dec
sbb
mov
test
sub
push
sarb
sbbb
mov
lods
adcb
or
jecxz
pop
push
push
dec
add
cltd
and
inc
sbb
and
jg
add
rcll
add
mov
cld
inc
push
mov
add
inc
test
cwtl
scas
cmp
push
mov
add
adc
mov
push
dec
jg
sub
dec
stc
or
jb
movsb
mov
in
cli
add
adc
iret
nop
aad
add
or
pop
pop
or
push
ljmp
adc
mov
in
mov
mov
dec
or
jmp
sahf
add
inc
daa
jmp
js
out
pop
add
sub
in
popa
add
sub
and
pop
xchg
ss
repz
push
add
aad
push
add
mov
pop
lret
add
mov
roll
push
cmp
dec
add
jno
std
cmpsl
push
push
lock
sbbb
add
mov
push
inc
lldt
mov
inc
add
and
test
sbb
xchg
and
mov
test
and
pop
clc
or
test
inc
cmp
inc
adc
dec
sub
mov
jp
imul
xchg
mov
pop
push
xchg
and
adc
jp
xchg
mov
sbb
xchg
popa
pop
pop
cli
or
jecxz
stos
shrb
ds
mov
cltd
mov
push
inc
add
lea
sbb
sti
call
or
add
sarl
stos
jo
lock
ficompl
leave
jbe
adc
addb
cmp
pop
push
cmp
dec
test
cmp
push
orb
in
out
mov
mov
pop
adc
push
nop
dec
xchg
loop
fldenv
cld
jmp
jge
inc
arpl
lea
xchg
pop
ret
inc
xchg
pop
xchg
add
mov
cltd
xlat
add
xor
andb
push
loop
nop
add
mov
pop
adc
aas
mov
sbb
cmp
in
add
dec
add
dec
jne
pop
test
jg
push
out
lahf
inc
pusha
and
iret
subb
mov
movsl
notl
inc
popa
and
xchg
or
pop
pushf
leave
inc
add
dec
mulb
pop
xorb
xor
addb
and
add
test
cli
add
push
add
pushl
add
movl
imul
add
inc
sbb
mov
adc
inc
add
adc
inc
loopne
ret
or
sub
addb
or
sub
inc
in
and
mov
jae
add
jno
leave
fimull
jne
add
sbb
stc
pop
and
lret
fchs
rolb
and
ljmp
mov
stos
pop
inc
das
hlt
dec
add
mov
and
lds
addr16
sub
into
test
push
jnp
and
fadd
xor
sub
cmp
stos
ja
cli
push
bound
push
xor
test
xor
push
sbb
mov
or
or
fs
add
push
scas
aaa
arpl
or
jno
add
mov
sub
fiadds
adc
or
add
lahf
call
cmpl
jb
subl
jne
jmp
add
pop
mov
add
andb
cmpsb
lock
movsb
dec
icebp
cmp
cmpw
subb
jne
add
mov
or
inc
jmp
call
dec
mov
add
pop
pop
lahf
pusha
cmp
lret
in
cmp
push
add
inc
or
ret
cltd
jo
cmp
mov
jle
daa
add
xchg
xor
pop
popl
call
fiaddl
cmp
sub
ret
xor
or
sub
sbb
fdiv
xor
lock
adcl
pop
pop
push
cs
lock
and
sub
das
sub
pushf
rcr
add
push
cmp
adc
dec
pop
add
pop
scas
inc
shrb
push
mov
mov
test
nop
jno
add
loop
repnz
dec
jmp
add
or
iret
call
add
rclb
push
fst
and
add
sbb
mov
out
clc
add
or
or
adc
jmp
sbb
aam
inc
push
daa
push
mov
push
add
push
imul
cwtl
inc
pushf
scas
and
inc
pop
push
std
add
popa
cmp
cld
out
adc
or
and
fadds
ffree
dec
daa
xor
add
stos
ljmp
inc
add
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
jmp
dec
sub
daa
xchg
test
inc
popa
adc
push
pop
xchg
aam
imul
cmpsb
popf
clc
xchg
inc
add
inc
arpl
dec
ret
inc
add
aad
gs
rorb
mov
add
xor
shld
sub
pop
ret
les
jns
mov
sbb
add
lret
sahf
jo
inc
jge
add
jo
fiadds
and
add
loop
imul
pop
push
out
into
xchg
fldenv
fsubs
dec
add
icebp
xor
mov
cli
cmpsl
pop
pop
dec
repnz
push
sbb
cmp
or
mov
dec
call
jp
dec
fbstp
or
push
lock
imul
sub
aas
cmc
popa
add
call
add
xor
cld
xor
pop
add
insl
call
mov
cmp
xlat
cmpsb
push
shlb
nop
lcall
mov
jnp
dec
sbb
cmc
sub
cmp
xlat
add
add
dec
lock
mov
pop
loopne
push
pop
in
push
nopl
or
mov
std
dec
fcoms
dec
imul
rolb
pop
arpl
popf
xor
rcrl
push
cs
add
arpl
add
insl
push
enter
mov
or
dec
add
xor
cmpsl
add
xor
mov
es
sub
scas
jge
push
mov
pop
add
push
pusha
andl
cs
or
aaa
add
and
sbb
aam
dec
psubusb
push
shll
clc
pusha
add
add
out
add
and
incl
loope
movsl
inc
icebp
or
add
pop
pop
gs
dec
clc
inc
paddusw
push
or
lret
add
lret
inc
pop
insb
xor
cmp
add
test
clc
rorb
hlt
dec
pop
xor
cmpsb
dec
add
push
push
mov
lret
inc
int3
mov
clc
pop
jl
and
xchg
add
ficompl
sub
in
add
stc
adc
cmpl
push
imul
sub
add
mov
lods
or
cmp
lods
or
or
hlt
add
sbb
or
int
adc
sbb
pop
pop
cmpsb
and
test
pop
mov
addl
mov
loopne
push
hlt
test
add
mov
loope
sbb
popa
or
hlt
inc
push
lahf
add
je
pop
cwtl
insb
test
insl
sarl
mov
call
leave
cmp
cmp
into
orl
add
jne
add
out
call
add
mov
xlat
push
mov
cld
add
pop
orb
sub
or
push
fs
mov
cmp
int3
jnp
add
inc
cmp
popl
push
add
xor
dec
xor
mov
loope
je
cmp
ret
test
mov
loop
add
iret
aam
cmp
add
inc
jo
add
dec
movb
inc
inc
dec
lods
inc
and
cmpsl
aaa
or
add
test
and
push
pop
call
add
sub
fs
cmpsb
mov
jb
xor
ucomiss
in
shl
inc
xorb
outsb
addr16
popa
out
jno
rcl
insl
cmc
inc
inc
adc
add
cmpsl
nop
jge
jecxz
push
add
jmp
movb
pusha
out
add
icebp
loopne
das
sbb
add
lret
push
adc
jno
add
aam
and
enter
push
and
call
push
shlb
outsl
or
dec
sub
xchg
movsl
add
pop
sbb
dec
jmp
imul
push
xchg
out
movsb
int
and
inc
add
repz
add
sub
sbb
les
mov
and
scas
mov
or
jae
out
into
add
insl
dec
add
push
and
jne
sub
add
adc
pusha
or
mov
push
dec
scas
push
jne
mov
popa
in
std
push
sti
rolb
imul
es
inc
cmp
and
dec
loopne
add
data16
adc
gs
fisubs
lahf
jmp
mov
movsl
and
mov
inc
cli
mov
cmp
fmuls
hlt
cmp
je
push
dec
shll
cwtl
lods
add
sub
add
test
mov
cmp
lahf
in
inc
mov
mov
push
add
iret
movsb
pop
enter
lods
cmc
addl
rorl
cmp
cltd
add
mov
dec
push
add
push
cld
inc
repnz
add
sub
add
aas
cltd
sbb
fisubl
cld
add
je
les
add
add
inc
movb
inc
or
js
pop
add
in
clc
icebp
or
mov
stos
sub
iret
dec
pop
xor
jle
add
fdivrl
push
ljmp
pop
push
cmp
mov
xor
das
mov
ficoml
add
lea
rolb
add
lock
clc
or
mov
repz
mov
nop
aad
imul
in
stos
pop
add
xchg
xor
pop
dec
xor
imul
lock
pop
mov
in
pop
orb
mov
inc
dec
mov
add
push
adc
test
cmp
or
and
cs
mov
dec
cmpb
add
movl
add
daa
push
sbb
adc
adc
pminsw
cwtl
or
in
pop
push
and
xchg
or
mov
xchg
lods
mov
adc
pop
push
cwtl
push
inc
lock
lods
fcmove
add
cmp
mov
jle
mov
scas
into
sbb
sti
mov
call
leave
and
jae
xchg
xchg
or
cmp
push
mov
inc
inc
popa
lea
or
sbb
jnp
add
mov
dec
add
sbb
or
and
subl
sub
dec
cmp
sub
shll
addps
push
rcrb
push
orl
cmp
pop
add
dec
jle
adc
add
jne
push
cli
mov
imul
and
les
jmp
and
add
fldt
lea
adc
aam
cmp
lret
int3
add
sbb
jno
and
fmuls
add
bound
sbb
mov
nop
sbb
adc
scas
or
pop
dec
pusha
sbb
ret
push
push
pushl
push
add
sbb
pop
push
push
and
scas
popa
idivl
add
loop
sahf
and
pop
add
push
addb
add
ja
push
test
mov
pop
loope
and
pop
fisttps
movsb
sub
shlb
in
push
jbe
add
aas
pop
add
cmpl
sbb
jae
mov
push
int3
test
add
inc
xor
ret
movsb
xor
or
inc
mov
sbb
add
inc
shlb
push
add
or
mov
movb
incl
stc
stos
sbbw
nop
add
inc
dec
fiaddl
aad
push
mov
out
pusha
dec
dec
out
inc
cld
add
popf
icebp
pop
cli
adc
dec
shlb
int3
dec
pop
adc
sub
add
add
jl
mov
add
inc
cmp
je
pop
or
jp
out
jmp
dec
sub
add
into
leave
push
jne
add
dec
push
test
pop
jae
ret
xorb
in
adc
add
jne
icebp
or
mov
dec
imul
lock
jae
mov
or
mov
push
jl
add
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
pop
pop
jmp
add
add
and
push
daa
or
jne
push
lahf
push
vaddps
sub
dec
mov
bswap
ja
inc
pop
jno
orb
cmp
inc
jle
inc
jmp
mov
cmpsl
mov
inc
dec
mov
pop
aad
add
int3
pusha
incl
ret
jae
sbb
leave
and
and
in
sub
add
mov
ljmp
dec
sbb
mov
lret
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
push
jg
sub
in
rolb
js
adc
mov
pop
mov
subl
add
pop
jle
jnp
cmp
movb
push
negl
inc
outsl
add
mov
mov
or
or
adc
add
cmp
inc
sub
inc
fiadds
lret
adc
sbb
ljmp
ret
shll
push
mov
je
scas
repnz
cvtps2pi
add
fs
push
sub
mov
add
pop
add
call
adc
in
jb
cmp
pop
or
add
sbb
call
add
cmpb
fs
mov
lahf
adc
nopl
test
dec
jmp
or
clc
jl
jmp
push
mov
add
cmp
sbb
mov
dec
nop
jle
pop
das
mov
push
add
aas
aam
sub
jl
cmpsb
dec
inc
das
sub
daa
jns
pop
inc
sub
sbb
add
mov
dec
mov
or
inc
adc
test
sub
imul
add
lods
add
dec
pop
sbb
and
pop
jp
add
shlb
aam
xor
movsl
push
add
fsubs
orb
mov
mov
or
call
outsb
or
jnp
pop
add
adc
js
cld
jne
or
cmp
mov
out
adc
push
jbe
lret
mov
in
mov
push
or
call
lds
pushl
mov
mov
cmp
fs
sub
pop
xor
jno
adc
or
or
cmpsb
pusha
dec
cwtl
insl
jl
jp
orb
lret
fs
xor
cmp
sbb
pop
jecxz
cmp
and
cmp
enter
jb
cmp
sbb
add
xchg
mov
mov
lods
cmp
mov
enter
nop
jb
cmp
and
js
je
jo
insb
dec
cmp
and
pop
add
push
jb
pop
cmp
inc
mov
or
adc
and
add
sbbl
push
and
enter
inc
jb
cmp
sbb
xor
xor
sub
add
enter
jb
sbb
mov
rolb
shl
or
cmp
ret
sub
adc
clc
adcb
lahf
add
push
out
js
xlat
xor
dec
pop
xor
sub
mov
enter
xor
call
add
in
arpl
and
lock
or
sbb
xchg
mov
cmc
mov
clc
cmp
xor
and
and
add
icebp
mov
jb
cmp
sbb
sub
add
out
out
call
jmp
mov
jmp
pop
xchg
daa
add
in
jb
cmp
xor
inc
shlb
shll
call
enter
jb
or
ficompl
sub
add
fstl
rolb
sarl
sbb
add
les
lds
in
jb
or
sbb
and
mov
xchg
into
leave
iret
and
cmp
add
mov
mov
mov
mov
mov
and
mov
cmp
mov
and
cmp
orl
xchg
test
shrl
stc
loopne,pn
dec
ds
cld
add
repz
xor
or
cs
adc
mov
hlt
xchg
add
add
or
arpl
dec
jo
scas
mov
cmp
pop
pop
orl
call
dec
inc
pushf
cmp
add
loope
adc
pusha
test
bound
loopne
or
dec
jne
je
data16
insl
outsl
jb
cmp
pop
shrb
inc
jo
jmp
or
outsb
mov
sub
push
hlt
test
orb
lock
pop
fcomps
sbb
pop
popf
and
or
push
adc
adc
push
sub
or
dec
andb
out
cmp
inc
imul
mov
sbb
sub
xchg
rclb
adc
gs
negb
adc
add
dec
jbe
add
insb
outsl
ja
je
mov
fs
add
push
mov
sbb
or
xchg
pop
sub
imul
and
fsubrp
in
xchg
mov
and
xorb
nop
mov
and
sbb
popa
out
inc
cld
push
nop
das
push
push
sub
pop
mov
inc
inc
pop
mov
push
inc
outsl
jmp
fst
add
ror
movl
scas
fs
inc
call
or
outsl
mov
push
lods
cmp
sub
inc
pop
arpl
push
mov
insb
or
mov
push
imul
dec
inc
fldl
push
inc
lea
push
lock
or
arpl
andl
adc
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
scas
pop
add
rclb
or
cmp
addb
dec
outsl
lea
aad
pusha
in
aam
jns
aas
add
jge
and
mov
xchg
pusha
rorb
xchg
push
lods
mulps
push
andl
stc
xchg
scas
movlps
popa
rorb
movsb
cmp
jo
lcall
dec
push
and
pop
mov
pop
pop
add
add
adc
jge
cmp
or
add
adc
js
das
add
push
mov
call
dec
add
xchg
lods
dec
imul
pop
inc
and
insl
sub
cmpsl
sub
iret
das
mov
jno
cmc
cmp
mov
pop
sub
mov
add
fiadds
jo
mov
iret
jmp
sarl
aam
scas
add
jge
mov
cmp
dec
add
call
sub
jns
mov
daa
jne
stc
pushf
dec
cmp
add
addl
outsb
xchg
int3
or
fwait
imul
sarb
rsqrtps
jle
add
cmpsb
je
add
mov
mov
movsl
cli
jl
std
lea
mov
add
add
mov
push
mov
sub
or
movsb
int3
jbe
add
fadds
mov
inc
ds
arpl
mov
add
mov
sub
rclb
lock
mov
xorb
pop
loopne
pop
jmp
jbe
hlt
add
jge
mov
call
dec
xchg
sub
xor
insb
add
sub
push
inc
cmc
sahf
jae
push
addr16
xor
outsl
cltd
sbb
and
jno
add
mov
add
mov
push
dec
notb
sub
and
add
sahf
cmp
and
add
dec
in
hlt
ja
add
xor
bound
lock
leave
mov
xchg
or
daa
push
add
je
push
cmp
add
mov
sub
lret
push
aas
inc
jmp
add
out
aam
lock
stos
cmp
in
mov
sub
dec
add
hlt
imul
popf
sarl
cmp
pusha
or
pushf
test
shlb
xor
inc
bound
or
dec
push
jge
push
aaa
stos
xor
pop
pop
add
dec
leave
dec
jae
add
add
mov
push
aam
mov
mov
xor
data16
inc
stos
imulb
dec
and
enter
mov
je
push
cmpl
fwait
pop
and
dec
pop
test
mov
into
addb
fadds
unpcklps
push
test
sbb
push
out
mov
mov
pop
jg
mov
add
jmp
mov
sbbb
testl
rcrb
add
jne
dec
popf
loope
jg
idivb
add
and
mov
mov
cwtl
add
es
mov
add
in
push
pop
add
loope
xor
sbb
por
mov
mov
pop
cmp
and
sbb
and
push
lahf
popa
call
or
hlt
and
dec
cld
cmpl
mov
imull
mov
or
mov
sbb
fildl
push
cmp
outsb
out
test
shl
xor
or
test
xor
nop
sbb
mov
xor
inc
in
sti
clc
nop
add
lods
xchg
xchg
loop
add
subl
adc
push
enter
mov
sbb
lret
inc
add
psubsw
roll
sbb
inc
call
aaa
and
std
and
outsl
das
out
cmp
cmp
dec
fisubs
aas
push
pop
push
lret
cmp
repz
fwait
lret
aas
inc
inc
andb
pop
scas
push
push
add
lret
dec
das
add
jp
add
inc
sub
sub
fstps
pop
loope
stos
out
xor
xor
jmp
ficoml
mov
pop
mov
add
cmp
xorb
xor
inc
shr
mov
inc
clc
test
add
cli
daa
pop
inc
ljmp
mov
xchg
jl
mov
inc
enter
lods
and
nop
xor
jp
xchg
shlb
add
or
dec
push
inc
mov
pmuludq
dec
sub
je
add
loopne
icebp
add
push
lea
add
sbb
inc
add
flds
pop
orb
in
lea
adc
add
stos
dec
and
int
sub
adc
sub
inc
shlb
sbb
inc
or
adc
into
mov
insb
in
add
jge
repnz
push
pop
jbe
add
rorl
add
test
popf
aas
dec
add
mov
jp
add
ret
testl
icebp
das
shlb
inc
and
divl
add
cmpsl
fsubrs
lea
daa
repz
and
pop
sub
adc
rclb
movsl
xchg
pop
jge
push
inc
in
push
hlt
or
jno
add
cmp
inc
mov
inc
je
and
loopne
aas
sub
add
jmp
xor
mov
xor
cmp
xor
lods
call
mov
cmp
or
xor
aas
and
fists
mov
add
sub
xchg
fcoml
shll
mov
pop
mov
add
jae
push
fistpl
cmpb
lcall
dec
shl
in
xchg
lret
or
jg
mov
push
mov
call
addb
das
cmp
je
or
xor
jb
add
ja
imul
xor
cmp
je
adc
sub
add
push
sbb
sbb
sar
adc
push
adc
xchg
push
je
dec
fsubrl
sarl
jae
enter
jne
add
push
loopne
in
mov
and
popf
addb
jbe
cmpsb
pop
adc
in
xchg
pop
add
xor
xor
and
jno
int3
inc
xor
add
call
loopne
pop
dec
fdivrl
sub
stos
xchg
add
sub
pop
data16
adc
incb
dec
pop
push
popa
cmp
je
jg
cmp
sub
pop
add
jne
mov
testl
je
dec
sbb
orl
pop
stc
call
mov
sub
push
add
mov
lea
lods
add
add
and
add
and
sbbb
dec
push
push
push
sbb
dec
mov
fisttpll
jb
lea
mov
push
mov
dec
jbe
cmp
js
add
xorb
add
movl
repnz
cmp
mulb
jns
pop
fadds
call
inc
lahf
scas
add
pop
jne
ds
add
sarb
add
mov
mov
pop
and
lahf
mov
cmp
jmp
xchg
js
out
inc
sub
leave
and
mov
dec
sbb
lods
mov
mov
shl
fildll
sbb
lock
sbb
push
inc
jb
or
xor
divb
mov
dec
loopne
loope
test
pusha
push
sub
xor
jecxz
sub
jo
lret
mov
inc
push
add
loopne
or
lds
orb
dec
sbb
add
jg
push
sbb
add
inc
repz
ljmp
adc
jg
cwtl
pop
add
cmp
jbe
dec
mov
jne
mov
push
add
sbb
sub
subb
add
push
push
pusha
repnz
iret
call
dec
dec
shll
ret
push
add
mov
mov
and
or
mov
sub
arpl
daa
popa
stc
xchg
pusha
sbb
or
into
call
or
add
add
in
xor
cld
xchg
push
or
push
dec
sub
movsb
mov
add
loopne
lock
dec
add
add
scas
rcll
sub
add
and
sbb
in
jne
add
loopne
lea
cwtl
inc
jnp
or
inc
add
rolb
clc
xor
das
add
pop
inc
xor
add
test
pop
jge
sub
push
adc
arpl
mov
push
sbb
jns
setb
inc
cmp
xor
and
mov
add
out
ret
push
xor
inc
add
pop
in
inc
add
jg
add
movsl
outsl
leave
popa
push
pop
cmc
add
mov
sub
cmp
add
add
or
push
popf
int
dec
pop
adcb
push
or
add
pusha
mov
call
fcoms
jl
movb
outsb
jnp
sbb
jae
or
cmp
inc
orl
mov
faddl
in
mov
rolb
sahf
dec
pusha
pop
sbb
ret
roll
xor
or
mov
fdivs
rorb
push
fwait
cmpsl
add
das
inc
pop
xor
lret
sub
movsb
dec
jo
fisttpll
hlt
es
cltd
jp
cmpsw
pop
jns
add
iret
cmc
adc
or
adc
daa
add
and
addr16
jp
inc
hlt
rclb
add
clc
pop
sahf
xchg
and
mov
addb
xor
cltd
add
or
mov
mov
cmpsl
mov
adc
xchg
inc
sbb
cltd
or
iret
daa
cld
sub
push
add
icebp
imull
pop
xchg
or
test
enter
and
mov
adc
mov
mov
pop
xchg
sbb
fidivs
add
icebp
add
je
xor
add
sub
clc
test
insb
cli
add
dec
in
cmp
dec
pop
add
cmp
add
xchg
loopne
lea
out
xor
lds
popf
mov
jb
add
jle
es
popa
add
or
sti
add
sbb
clc
cmp
sbb
pop
adc
jle
jae
andb
ds
jle
xor
in
mov
cltd
mov
icebp
insl
lds
rorl
sub
pop
inc
fwait
mov
add
jl
or
leave
jne
loope
add
adc
je
mov
pusha
xchg
fcoms
jl
and
sarl
imul
cli
hlt
add
add
dec
repnz
mov
and
push
incb
and
test
jg
pop
lret
adc
push
aad
or
add
jmp
cmc
add
xchg
lock
test
mov
push
add
jl
jg
xchg
imul
adc
xchg
add
lods
mov
xchg
cltd
sbb
add
or
out
dec
js
cmp
hlt
add
ds
sub
aaa
jns
jnp
add
sub
loopne
add
repnz
mov
push
pop
pop
adc
push
cltd
mov
cmpsb
add
je
pushf
dec
push
pop
dec
mov
pop
in
mov
cmp
jb
insb
or
jmp
fisttps
loope
cltd
cmp
insb
add
es
hlt
mov
and
inc
les
adc
pop
xor
push
or
push
shlb
mov
mov
sub
cmp
test
cld
mov
out
pop
inc
dec
add
cmp
add
cmp
lds
sub
and
pop
fstl
lret
dec
ss
push
push
inc
pop
repnz
add
adc
das
inc
push
repz
add
mov
and
push
ss
and
add
mov
cltd
scas
jo
inc
sar
add
fidivrl
repnz
mov
xchg
add
push
mov
lret
xchg
pop
mov
cmpsb
mov
add
push
sub
lods
and
jns
push
adc
imul
add
call
add
cwtl
idiv
xor
in
mov
add
mov
in
and
loopne
add
je
xor
inc
pop
lock
xor
rclb
and
add
mov
jmp
add
mov
inc
add
cmp
je
mov
nop
cmp
mov
mov
hlt
js
push
sub
add
jne
fists
lahf
inc
das
cmp
sbbb
dec
out
mov
test
bnd
aad
movb
push
je
cmp
jecxz
xor
pop
in
push
test
and
pop
mov
ficoms
mov
popa
clc
outsl
mov
add
rcll
roll
test
push
add
jae
xchg
add
repnz
test
ret
scas
into
icebp
and
add
insl
mov
or
push
add
inc
mov
xchg
and
jecxz
cmp
push
mov
mov
dec
pop
sub
subb
adc
inc
add
and
or
jne
or
orb
or
push
add
aas
add
lods
push
xchg
and
cmp
jne
push
xor
les
add
pop
aas
mov
xor
add
popa
dec
adc
int
rolb
xchg
adc
nop
sbb
ficoml
add
hlt
testb
pop
daa
lahf
icebp
sbb
xorb
jmp
xchg
add
in
push
and
add
insb
sub
push
aam
cmp
pushw
inc
subb
jg
in
and
shrb
or
sub
jp
je
xor
push
and
rcrb
inc
adc
dec
mov
add
arpl
jle
push
scas
add
pushf
jns
les
adc
dec
fadds
sti
in
fsubrl
pop
jns
or
cmpl
jl
or
push
sbb
call
aam
out
sub
adc
add
adcb
test
pop
sub
fs
dec
loop
addb
add
mov
add
add
jae
push
repnz
mov
push
add
cmpsb
dec
pop
pop
add
xor
ljmp
and
mov
jne
lock
dec
ljmp
dec
nop
inc
add
push
cmp
xchg
sub
sbbb
add
scas
cld
sub
or
jae
ljmp
add
idivl
add
pop
sbb
or
add
ss
or
cmc
adc
test
je
xor
test
mov
pop
mov
rcrl
jmp
or
sbb
lods
imul
scas
ja
add
leave
lods
sub
add
mov
mov
iret
xchg
xchg
ds
sbb
dec
add
cmp
and
adc
sub
fcoms
sub
and
dec
mov
mov
out
cmp
sbb
xor
xchg
xchg
pop
sub
test
sub
sbb
pop
addb
out
je
icebp
int
add
cmp
out
imul
fcomip
push
add
scas
and
add
sub
add
and
leave
push
or
pop
jg
mov
loope
jne
jmp
sbb
adc
add
mov
call
add
jg
je
jnp
and
arpl
jne
inc
add
hlt
push
xor
pop
shl
jecxz
pop
or
jge
sahf
jne
dec
mov
mov
ljmp
push
or
inc
xchg
and
jne
enter
jmp
adc
sbb
mov
inc
mov
test
sar
imul
adcb
rcll
pop
call
adc
xor
cmpl
push
push
or
push
mov
pusha
add
shlb
call
jg
aam
xor
jnp
push
adc
sbb
pop
xor
push
in
jns
add
test
add
push
jne
sub
mov
jge
xchg
push
jns
pop
and
push
popa
test
cmp
cmp
inc
pop
xchg
das
mov
jae
out
xchg
add
mov
into
push
jnp
add
jno
or
fwait
cli
jp
dec
inc
inc
movsb
sbb
neg
roll
and
sti
mov
imul
add
shlb
and
sahf
psubsb
pop
out
and
mov
stos
xchg
dec
pop
inc
cld
dec
push
sub
add
push
add
js
xchg
add
ljmp
add
sub
lds
nop
mov
xchg
imul
inc
jne
dec
clc
push
add
cld
std
test
add
and
cwtl
loop
adc
jb
shrb
xorl
mov
cmp
inc
and
pop
daa
pushf
imul
ja
inc
dec
das
push
out
mov
push
or
add
add
fcoml
and
sbb
test
adc
push
pop
lods
mov
por
add
cs
jo
mov
dec
in
mov
jns
add
icebp
sbb
pop
xchg
int
and
adc
jns
mov
sbb
xchg
sarb
in
clc
sti
pop
cwtl
lock
das
fdivrs
add
shlb
pop
pop
in
in
hlt
sub
fistpl
das
sarl
insb
lret
add
mov
pop
add
xor
jmp
pop
mov
add
enter
pop
lock
cmp
xor
add
add
mov
inc
addb
add
sub
jae
xchg
add
nop
mov
add
jle
sbb
add
pop
or
add
sub
fnstenv
movsl
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
jge
push
add
mov
js
add
out
cmp
dec
test
add
sub
inc
or
cltd
add
bound
add
jl
xchg
mov
jnp
test
icebp
or
adc
dec
pop
jl
or
add
sbb
and
sti
jg
fnstenv
clc
cltd
add
sub
pop
ds
add
sub
je
sbb
add
push
or
jbe
les
pop
push
push
sbb
or
push
and
js
clc
push
push
inc
pop
or
jle
filds
ret
xchg
outsb
cwtl
cltd
pop
adc
scas
xor
add
add
add
les
cmp
and
addr16
add
call
mov
mov
mov
enter
dec
lds
mov
sub
stos
pop
pop
jo
xchg
add
mov
dec
or
jecxz
ret
enter
add
mov
lock
adc
mov
add
mov
ja
cmp
pop
cld
cltd
xor
sub
add
add
sarl
add
jg
fdivrs
cmpl
loopne
bound
adc
pop
roll
push
adc
dec
loop
xor
add
lahf
roll
cld
movb
fsub
addl
fcmovb
adc
add
dec
out
add
dec
mov
mov
ret
jnp
shl
leave
sub
pop
shl
fiadds
fbld
dec
leave
add
or
adc
fwait
add
or
add
out
dec
dec
xlat
pusha
movsb
add
mov
add
sbb
inc
fwait
mov
loope
hlt
push
push
imul
xlat
jno
xor
or
dec
or
inc
int3
and
add
pop
ljmp
sbb
cmpsb
pop
jmp
sbb
inc
push
jb
inc
and
add
cs
jge
or
shll
adc
scas
hlt
lods
adc
andb
and
je
hlt
add
pop
mov
adc
sbb
lock
ljmp
adc
cli
andb
pop
jo
add
popf
cmc
push
pusha
jno
pop
dec
adc
push
add
sub
xchg
loop
inc
jecxz
pop
repnz
test
push
aad
sbb
or
cmp
cmp
sbb
jle
and
add
mov
nop
or
loopne
adc
mov
movsl
mov
push
jo
cmpb
cltd
jmp
add
inc
sub
push
enter
xchg
andb
pop
jmp
lea
xor
or
add
test
roll
lahf
fsubl
addb
pop
add
lret
push
fcomps
xchg
popa
add
sub
ja
jbe
jae
add
test
test
add
clc
lahf
adc
inc
xor
jb
les
jae
mov
add
push
and
inc
ret
or
gs
or
add
orb
lock
push
shr
pop
test
dec
testb
and
pusha
incb
jnp,pt
cmpb
je
add
dec
sub
sub
inc
add
mov
sbb
pop
loope
or
mov
add
and
cmp
mov
and
ret
or
je
lret
mov
cmp
push
push
frstor
jge
les
popa
repz
enter
add
dec
push
sbb
test
and
decb
or
lldt
pop
incb
rcrb
sub
or
dec
add
mov
adc
ret
pop
imul
cs
les
push
sbb
call
int3
lret
pop
lea
lds
sti
jl
cwtl
or
cmp
inc
fdivrp
adc
daa
dec
mov
pop
mov
loope
orb
mov
bswap
fdivs
int3
adc
or
add
and
push
aas
xchg
inc
push
jl
jne
dec
xchg
mov
xchg
jnp
test
mov
sub
frstor
xchg
fcoms
sahf
jb
cvtps2pd
add
xor
add
pop
jnp
lods
adc
orb
sbb
aas
loopne
mov
jno
add
mov
sbb
dec
and
add
inc
rcl
fsubrs
data16
add
or
inc
into
adc
nop
add
popf
push
roll
inc
inc
mov
sahf
jnp
das
pop
or
shlb
or
adc
add
mov
cmpsl
popl
push
movsl
xchg
inc
cli
loopne
add
add
lods
outsl
add
insb
nop
jns
push
stos
add
xchg
pop
xor
xchg
movsb
in
stos
xchg
add
mov
adc
fdivrs
push
push
das
rcrb
add
jle
xchg
cmp
add
add
hlt
test
inc
lock
test
add
rclb
jne
add
and
nop
gs
add
jns
add
mov
add
lods
gs
mov
lds
mov
roll
jns
or
mov
jmp
insb
jo
or
pushf
cltd
push
sbb
test
push
dec
jp
cmp
cmpb
sub
or
or
pop
jne
xchg
cmp
popf
and
pop
mov
add
or
daa
add
jp
les
or
xchg
ds
sahf
add
and
inc
jmp
jg
add
scas
js
jp
pop
add
mov
inc
lods
and
pop
loop
movsb
add
sub
aam
mov
or
add
push
clc
outsb
jge
jbe
sbb
std
jb
dec
stc
shrb
test
add
loop
lahf
movsb
frndint
push
mov
mov
add
add
jne
push
add
movsb
test
stos
fs
fidivrs
xor
loope
mov
inc
cwtl
xchg
xor
dec
push
adc
ret
push
add
mov
mov
insb
xor
add
cmp
sti
add
lock
mov
ljmp
rcrl
mov
aas
mov
call
loop
sub
add
pusha
jle
jmp
mov
aad
imul
xor
add
lcall
pop
lds
test
rorb
mov
push
mov
js
jmp
ljmp
and
inc
enter
add
jg
push
rorb
fcompl
xor
or
pop
add
fiaddl
enter
xchg
lock
nop
lods
movlps
addl
mov
aaa
cli
dec
pop
les
fistps
lods
mov
add
adc
mov
add
out
sbb
or
cmp
rcrb
add
imul
add
sbb
daa
jne
push
enter
std
jns
add
pop
and
push
and
sbb
psadbw
adc
pusha
cmp
nop
out
add
push
jmp
or
popf
jns
pop
lds
mov
call
inc
rolb
cs
and
adc
and
pop
adc
mov
lods
adc
call
inc
and
xor
mov
push
popa
into
dec
lock
add
add
mov
cli
fisubrs
add
out
cld
and
dec
inc
cmpsl
add
rorb
xchg
pusha
popa
adc
sbb
mov
xabort
lret
cmp
es
inc
mov
add
test
add
or
sarb
lea
cmp
movsb
xchg
mov
push
xchg
sbbb
add
or
nop
test
das
repz
or
dec
and
add
mov
mov
inc
mov
and
icebp
add
xchg
or
out
inc
jle
push
push
bound
add
and
add
jmp
rcrl
inc
add
jp
pop
in
sub
fmull
add
xlat
adc
lods
nop
mov
jb
fs
mov
outsb
add
mov
and
loop
in
testb
test
jecxz
jmp
addb
and
paddd
cmp
mov
pushf
and
clc
jbe
shrb
add
sbb
test
add
and
arpl
cmpsl
add
xor
fildl
call
jbe
aas
ja
loope
fucomp
je
clc
jne
icebp
push
adc
and
mov
xchg
and
int3
add
add
sbb
add
xlat
push
push
std
mov
mov
jo
add
xchg
mov
mov
push
jns
sub
rcrb
dec
je
or
psubusb
jb
jmp
mov
ja
and
pop
xor
adc
subb
movl
outsl
mov
add
repz
daa
nop
dec
push
add
cld
call
popf
or
xchg
or
jb
pop
roll
and
dec
push
mov
sub
outsb
sbb
add
push
rorb
jge
inc
hlt
clc
xchg
subb
push
loopne
mov
mov
mov
popf
dec
into
mov
fcmovnb
or
xchg
aad
add
pusha
sbb
dec
mov
xchg
fidivs
insl
add
mov
xor
add
shll
sbb
lcall
nop
or
mov
mov
cmp
clc
pop
sbb
add
inc
push
bound
add
daa
jmp
out
fnstenv
aaa
in
inc
sub
push
jmp
push
les
inc
mov
fs
add
jne
add
or
inc
addr16
call
mov
jns
mov
mov
push
fmuls
sbb
mov
rolb
dec
icebp
fisttps
add
sbbl
add
xchg
movsl
or
jmp
add
sbb
push
call
dec
and
es
lock
add
movsl
mov
mov
cmpsb
in
mov
xchg
movsb
insb
data16
hlt
mov
push
dec
in
adc
xchg
xchg
mov
add
push
mov
or
mov
les
sahf
in
adc
and
shlb
push
sub
pusha
add
fsubrl
lea
pusha
imul
cwtl
push
test
loopne
movsb
xchg
repz
test
sub
sbb
and
cmpsb
cmpsl
leave
sbb
arpl
mov
add
mov
std
cmp
jmp
stos
pop
arpl
dec
dec
push
add
rolb
add
or
sbb
sub
and
pop
test
cmp
push
nop
inc
add
pop
xor
sbbl
je
loopne
add
inc
push
cli
bound
imul
into
sub
rolb
inc
mov
fisubrl
mov
xorb
and
les
cmp
or
jb
add
test
mulb
dec
push
std
push
pushf
jg
adc
add
or
add
mov
stos
cmp
add
pushf
inc
mov
cmp
inc
sahf
dec
fnsave
add
mov
cmp
or
push
or
es
add
mov
mov
mov
xor
test
fdivs
int3
inc
fsubrl
pop
mov
pop
hlt
and
adc
dec
cld
cmp
xchg
mov
push
add
dec
xor
nop
add
shlb
jo
test
add
movsb
or
inc
fdivrs
or
fdivl
loopne
lock
cmp
add
xor
sarb
pop
pusha
mov
mov
outsb
add
jmp
mov
dec
pop
cld
add
test
jl
mov
or
or
add
sub
add
dec
pop
or
inc
test
jne
add
xchg
inc
push
cmp
inc
fildl
xorb
ret
cmpsl
popa
add
faddl
pop
dec
in
sub
add
add
pop
test
rorl
xchg
testl
add
pop
fistpll
gs
test
jle
jp
sub
lods
pop
dec
jge
cmp
inc
add
sbb
adcl
add
inc
xor
push
out
mov
mov
dec
pop
daa
mov
shll
sub
push
inc
mov
jmp
jns
add
imul
sbb
xor
pop
lock
add
mov
inc
add
movsl
leave
dec
in
enter
add
jle
xchg
int3
daa
cs
add
and
and
inc
lock
pop
add
mov
fsubrs
mov
pop
inc
xchg
or
or
add
cltd
ror
cmp
add
inc
outsl
push
in
fstpl
bound
sbbb
push
xchg
mov
cmc
ljmp
popf
sub
fs
adc
add
adc
outsb
lock
sti
push
sub
inc
rol
add
sahf
sub
ljmp
add
push
pop
bound
in
js
jge
xchg
jb
test
lds
mov
cltd
stc
aas
cmp
test
outsb
fdivrs
mov
rclb
je
faddl
mov
jl
das
jno
movb
sub
sbb
pusha
mov
inc
add
cmp
imull
push
packsswb
shlb
cli
das
jbe
push
cs
fnstenv
xor
jge
subb
movsl
inc
xor
or
xchg
push
add
pusha
add
mov
movsl
add
je
xor
inc
add
nop
dec
mov
fsubrl
hlt
cwtl
add
call
mov
mov
push
add
std
call
inc
bnd
cmp
adc
pmaxsw
rolb
cld
push
add
sbb
aad
push
or
adc
lea
stos
add
setg
lret
lds
mov
loopne
mov
mov
and
add
pop
rolb
sub
jb
push
inc
mov
rorl
inc
int3
lret
jne
out
loope
repnz
test
or
int3
add
mov
fiaddl
test
push
push
cmc
nop
cwtl
add
and
aas
add
sbb
add
mov
add
add
das
add
movsl
push
lock
inc
daa
inc
adc
jbe
sbb
inc
fwait
mov
sub
jmp
push
fisttps
push
ss
nop
mov
mov
subl
mov
adc
repnz
inc
adc
rorb
xchg
repz
sub
in
xchg
sbb
mov
das
pop
mov
loope
pop
sub
pop
push
cmp
sahf
or
mov
pusha
adc
cmp
xor
cld
or
push
sub
rolb
nop
loope
mov
int3
lahf
test
jle
xchg
add
pop
clc
bound
cltd
in
pop
lock
shll
nop
stos
aam
lret
pushf
rdmsr
sbb
cltd
aas
jne
jbe
out
fcomps
add
bound
hlt
add
mov
jge
push
cld
push
jle
add
cmpsl
inc
push
sub
sub
sbb
fimull
or
adc
pop
xor
aad
cltd
cmp
idivb
sbb
mov
inc
push
insl
cmp
fs
test
pop
push
push
add
scas
repnz
popa
cli
or
push
jo
inc
sbbb
xor
adc
verw
nop
jecxz
push
into
add
adc
add
mov
add
add
mov
mov
add
jmp
mov
stos
and
dec
out
loop
add
inc
lods
and
and
mov
cmp
or
inc
dec
jb
mov
jns
jo
imul
push
push
inc
push
shlb
inc
js
add
mov
mov
in
mov
add
adc
add
sbb
mov
fidivl
mov
mov
fmuls
test
enter
or
cs
dec
aas
pop
nop
mov
mov
dec
orb
cmp
fisubs
or
fs
mov
add
or
es
pusha
subb
mov
aas
push
xor
cmovs
cmp
jecxz
and
enter
repnz
adc
out
sbb
dec
test
repnz
jo
adc
xor
fwait
mov
xor
inc
and
popa
in
mov
add
js
jns
aam
push
add
xor
inc
pop
add
sub
movsb
loopne
fsubl
xor
fdiv
orb
jns
js
shlb
clc
enter
dec
jge
iret
fcmovb
sub
inc
mov
mov
popl
cmp
lods
pop
mov
xlat
movsb
repz
mov
aas
mov
jp
xchg
jge
jge
addr16
mov
xor
call
aad
xor
dec
clc
sbb
push
or
je
movsb
jp
jg
fbstp
insb
setb
push
pop
sub
jbe
push
test
mov
in
dec
daa
cmp
push
and
inc
in
call
rcrb
pop
aas
or
call
adc
fdivrl
pop
push
adc
inc
and
xlat
es
mov
dec
add
stc
mov
pop
pop
mov
add
ret
add
xor
pushf
push
sub
testl
xor
pusha
in
clc
inc
mov
add
lds
mov
shr
lahf
sbb
scas
jmp
mov
and
jne
out
mov
adc
sti
add
je
add
ja
xor
mov
jle
mov
sbb
adc
sti
lods
pop
mov
add
cltd
fstpl
cmp
scas
int3
cs
lcall
lods
or
sbb
pusha
ret
mov
out
add
sub
cwtl
add
push
in
mov
cmp
std
jl
or
leave
xchg
sbb
pop
stos
inc
test
inc
mov
and
push
jmp
clc
stos
mov
pop
je
sbb
loop
or
add
stos
push
xor
dec
clc
mov
pop
cmc
andb
push
push
sarb
mov
sub
mov
xchg
ljmp
inc
sub
add
dec
stos
or
jne
add
jmp
mov
maskmovq
pop
mov
cld
les
stos
xchg
push
mov
test
testl
sti
and
mov
jmp
add
xor
pop
and
addl
adc
add
fwait
dec
in
inc
add
sub
mov
jo
add
dec
mov
div
mov
sbb
inc
mov
dec
je
dec
jne
add
pop
push
xor
jmp
add
sbb
add
inc
rol
sub
add
test
loop
orl
add
or
inc
add
pop
jbe
cli
jae
fisttpll
mov
xor
push
je
push
push
push
leave
and
sub
sub
call
jg
imull
add
fdivrl
rolb
dec
cld
push
inc
pop
ret
and
outsb
inc
add
popf
mov
cmpsb
and
std
aas
sub
jg
push
sub
pop
add
push
data16
sbb
jle
inc
call
sbb
fisubl
fisttps
xor
daa
sub
xor
inc
pop
ret
add
and
mov
mov
jb
add
jbe
sbb
jmp
scas
inc
jns
stos
out
fcoms
jnp
dec
ret
sub
lea
cld
dec
add
sub
inc
pushf
dec
mov
bound
nop
add
lock
add
mov
data16
dec
jp
cmp
push
or
cmp
shll
mov
sbb
jle
sarb
negl
sub
mov
add
xor
pop
push
mov
mov
lock
dec
or
shl
cmp
jne
or
sbb
add
and
add
add
loop
mov
cld
sbb
add
or
nop
add
add
rolb
cmp
movsl
shl
sbb
imul
out
ljmp
mov
add
aas
mov
add
push
clc
push
hlt
push
mov
mov
and
add
daa
xor
movl
ss
clc
inc
cld
mov
add
inc
inc
int
outsl
testl
jge
and
add
mov
xor
mov
push
mov
and
sub
add
testl
pop
in
ret
pusha
pop
sub
add
sub
test
ljmp
sti
movsb
or
adc
pop
inc
xchg
add
adc
outsb
cmpsb
and
ds
add
sub
faddl
sub
arpl
jne
add
add
mov
jl
pop
clc
dec
into
inc
daa
jmp
mov
sbb
sbb
dec
and
dec
mov
test
int
jno
add
out
add
lock
insb
add
or
in
push
xchg
cmp
sbb
add
mov
out
gs
dec
lea
into
add
mov
fisubrs
fmuls
sbb
jne
sbb
inc
sarb
add
in
adc
inc
subb
inc
dec
pop
or
fneni(8087
icebp
pop
xor
outsl
data16
lret
insb
pop
jmp
cmp
sahf
push
dec
rolb
inc
adcl
add
leave
repnz
jne
add
stos
mov
cltd
rcll
mov
stc
das
inc
add
movsl
mov
pusha
mov
imul
dec
add
cmp
add
inc
push
push
popa
sbb
cmpl
add
add
inc
outsb
push
jmp
fldt
sbbb
imul
cmp
clc
das
inc
add
or
sub
cli
flds
pop
loope
dec
mov
inc
dec
cmpsl
sahf
fmuls
fisttpll
sbbl
inc
je
fidivl
push
cmp
clc
add
jne
lea
mov
fwait
mov
mov
cmp
xor
sbb
bound
jmp
rolb
inc
mov
dec
add
lea
add
cmp
cmp
adc
arpl
jb
xor
mov
add
cmp
adc
jmp
add
cmpsb
xor
add
mov
sbb
and
pushf
icebp
inc
and
cmp
roll
mov
mov
add
mov
push
cs
test
enter
je
cld
jns
idivl
imul
add
mov
sahf
cwtl
js
cld
and
pop
mov
orb
cmpsl
add
add
dec
xchg
dec
push
add
js
hlt
fildll
xlat
mov
ret
sbb
xor
mov
dec
fwait
cld
adcl
mulb
or
pop
mov
or
xorb
lret
cmp
roll
cmp
and
push
and
xor
dec
ljmp
adcl
aad
aas
inc
shl
stos
mov
jmp
stc
mov
sti
je
mov
push
add
dec
jge
fisttpll
fnclex
add
mov
or
add
cmp
lds
pop
add
inc
sbb
adc
add
inc
test
cmp
je
lds
filds
test
call
pop
add
push
inc
loope
and
loopne
ret
sub
stc
add
xchg
stc
test
adc
add
loopne
ds
aas
jnp
jmp
add
test
mov
add
add
ret
mov
insl
inc
nop
fadds
cwtl
lret
push
dec
jmp
cmp
orl
xor
push
dec
nop
inc
push
ret
ret
sbb
push
add
mov
or
dec
jnp
add
imul
nop
add
cli
add
loopne
jb
ljmp
pop
daa
jle
loop
ss
add
test
cmp
add
call
aas
jle
je
add
mov
add
stos
call
mov
nop
push
mov
sub
pop
aas
cmp
jo
rorb
nop
adc
push
adc
and
ror
push
jae
xchg
or
or
mov
clc
add
and
loopne
adc
sbb
test
cmp
test
cmp
inc
xor
push
arpl
adc
cmp
xor
mov
sbb
jae
mov
pop
hlt
pop
stos
xchg
mov
leave
jb
scas
sbb
and
sbb
js
rclb
add
add
mov
test
mov
or
inc
jp
add
sti
lret
lcall
dec
mov
hlt
xor
add
push
not
mov
pop
or
inc
das
sbb
shl
add
xor
fstpt
add
repz
add
ret
or
fnstcw
hlt
push
inc
pop
dec
ja
ror
insl
or
mov
jmp
lea
xor
add
lcall
fdivr
fcmovb
loopne
repnz
pop
divb
adc
add
shr
mov
stc
cmp
jne
addb
frstor
add
into
add
cmp
ja
add
jp
adc
push
adc
cmpsl
cli
jae
lock
sarb
add
dec
push
add
mov
sub
cmp
jecxz
adc
int3
orb
mov
test
add
movsl
idivl
arpl
pop
xchg
push
das
test
outsl
testb
push
mov
add
into
dec
pop
xacquire
mov
lea
mov
cmp
ror
int3
leave
addb
xor
add
push
add
daa
or
adc
je
xchg
add
rol
jne
add
and
dec
pop
mov
test
dec
lock
ljmp
push
mov
jl
add
mov
or
push
cmp
push
xor
and
out
push
out
dec
popa
pop
incb
test
push
shrl
xchg
adc
add
fmul
aas
add
paddsw
push
test
cld
pop
push
ljmp
xor
lea
cmp
es
movsl
pushf
add
mov
mov
pop
inc
inc
inc
mov
jo
call
or
mov
mov
sbb
sbb
or
out
and
mov
or
adc
add
add
fldcw
data16
xor
fwait
dec
push
add
jnp
popf
push
and
mov
mov
mov
add
je
push
rcrb
xor
adc
out
pop
xchg
add
flds
or
loope
xor
xchg
adc
loop
mov
pop
testl
adc
lea
jg
add
jne
xor
add
mov
xchg
add
jne
shlb
pop
mov
pop
inc
sub
in
or
pop
bound
outsb
add
addr16
in
loopne
out
mov
mov
fcmovb
movsl
mov
loop
xlat
ljmp
pop
sub
mov
mov
aas
pop
mov
push
or
lods
adc
sahf
xchg
adc
cmp
mov
adc
lods
sbb
addb
mov
or
and
iret
and
clc
loopne
jno
dec
pop
add
sbb
pop
adc
pand
jae
cmpb
lock
sbbl
call
add
mov
sbbb
in
add
ret
add
cltd
mov
out
jl
call
ret
sbb
dec
and
and
mov
sub
int
add
sub
fdivs
inc
cwtl
rorb
mov
pop
in
ljmp
adc
cmp
repnz
add
clc
mov
fs
add
pop
das
mov
add
or
add
stos
jae
inc
push
stos
jle
scas
jbe
push
add
mov
cmpsb
pop
add
insb
inc
xchg
dec
push
js
xchg
loopne
lock
inc
cli
add
cs
pusha
test
add
mov
push
cmp
push
scas
imul
inc
rcrl
jl
or
pop
dec
inc
or
xor
add
jmp
les
in
add
add
aas
add
mov
rcrb
adc
push
iret
lret
add
xor
dec
add
jno
and
loopne
inc
add
jnp
cld
push
jl
add
dec
ja
mov
cltd
add
ret
imul
mov
add
mov
add
mov
add
fbstp
and
cmpsl
pop
lcall
call
push
repnz
xchg
jecxz
push
pop
sub
leave
rolb
sub
pop
pop
hlt
je
inc
das
ret
std
xlat
or
adc
add
roll
push
dec
pusha
mov
xor
dec
or
add
rolb
lods
xor
mov
jmp
mov
or
shr
push
fdivrs
or
sysexit
and
in
incb
pop
into
jne
xor
and
mov
testl
movsl
jns
pop
test
rolb
jns
call
pop
pop
dec
pop
dec
fiaddl
not
adc
ret
aaa
add
jno
add
or
mov
addl
add
sbb
lods
sbb
add
ljmp
sbb
movb
mov
push
cld
subb
dec
loop
xchg
add
mov
shr
loopne
imul
add
inc
sti
ljmp
add
in
movsl
sbb
inc
add
xchg
cmp
add
mov
xchg
push
int3
in
mov
testb
mov
call
jmp
inc
inc
cmp
adc
icebp
add
rcrl
cmp
fistpll
popf
les
lret
xchg
shll
cmpsb
mov
add
out
pop
cld
add
cmp
orb
cmc
add
or
add
adc
pusha
jecxz
ret
mov
es
fdivrl
pop
rorb
hlt
out
xchg
sub
jmp
jns
mov
add
pop
pop
out
dec
clc
movsl
in
add
rclb
lret
sub
sbbb
repnz
and
mov
jae
mov
push
scas
dec
add
fadds
dec
add
and
xchg
add
mov
xchg
emms
pop
pusha
mov
sub
je
add
pushf
push
lret
movsb
and
jmp
sbb
enter
jg
mov
pop
packsswb
mov
push
les
sbb
jecxz
push
pop
inc
icebp
loopne
sar
add
div
xchg
in
and
shl
mov
and
push
sub
and
movsl
jb
mov
shlb
pop
in
inc
push
mov
jo
test
cmp
cmovo
cmp
mov
pop
add
movsl
inc
insl
add
pop
xchg
push
dec
call
xchg
xchg
cld
fists
push
mov
mov
pop
sub
mov
pushf
jo
xchg
int3
xchg
adc
jge
mov
pop
or
sub
lret
dec
out
add
packuswb
mov
outsl
faddl
push
mov
pusha
pop
fstl
add
pop
scas
add
push
fmull
int3
pop
enter
xchg
ret
shlb
or
jg
je
movb
add
out
nop
add
and
mov
mov
push
adc
rcrb
movsb
push
adc
jmp
nop
xor
add
push
jnp
add
pop
mov
add
loope
jmp
dec
bound
cmc
sub
mov
jne
lock
jns
out
add
in
repnz
mov
sbb
add
push
jl
loope
sti
xchg
jo
mov
movb
dec
xchg
js
dec
sbb
pushf
sbb
mov
repnz
mov
dec
cmp
and
pop
dec
stc
xorl
inc
fiaddl
cwtl
add
xchg
adc
sub
inc
xor
pushf
xor
test
mov
popa
bswap
stos
adc
mov
xchg
call
and
lret
sub
daa
mov
loopne
add
jnp
mov
shlb
call
and
xchg
cmp
mov
add
or
pop
enter
mov
fwait
dec
or
lock
push
cmp
fstpl
in
or
mov
mov
and
in
pusha
negb
lds
fwait
inc
int3
push
fdivr
and
add
xchg
je
or
sbb
mov
nop
sbb
mov
or
sub
jge
jne
daa
pop
inc
jbe
add
repz
add
mov
aam
das
mov
and
ljmp
sbb
pop
pop
cmp
dec
xor
fidivl
push
loop
test
add
ret
xor
add
pop
aas
jg
add
les
js
pop
or
add
cli
pop
add
or
add
pop
push
mov
jl
jbe
hlt
sub
jb
iret
fistpll
xor
or
push
stc
add
cmp
sbb
adc
test
pop
xor
enter
adc
lret
pop
mov
add
jo
pop
adc
add
xchg
enter
mov
xor
jbe
shl
cmp
add
lret
lods
ss
imul
mov
adc
push
add
or
lock
mov
push
or
mov
and
scas
fwait
add
add
out
movsb
jmp
push
add
into
enter
push
dec
inc
add
movsb
fstl
sahf
add
shll
fisubs
add
add
jae
mov
xchg
cmp
lcall
jecxz
les
test
pop
inc
cmp
cmpps
xor
add
or
add
imull
enter
inc
xchg
clc
arpl
mul
dec
movsb
mov
hlt
inc
sub
daa
add
test
jl
pop
test
add
popa
mov
or
dec
mov
pushf
add
lahf
jmp
int
xor
cmp
stos
popa
loope
mov
pop
add
iret
outsl
sti
jno
fsubp
jecxz
add
cmp
mov
add
sbb
test
add
fisttpl
mov
or
inc
movsb
inc
pop
pop
fs
add
or
adc
inc
add
lea
mov
dec
add
add
xchg
shrb
clc
jo
and
add
jns
jge
mov
push
sub
test
add
popf
xor
dec
mov
pop
and
jge
inc
hlt
mov
inc
or
lds
sbb
incb
add
add
popf
mov
cltd
dec
inc
lods
xchg
cmp
add
push
lock
mov
mov
adc
dec
leave
test
mov
sbb
cmpsl
adc
adc
and
clc
sbb
lods
xor
jp
movsl
adc
add
adc
rolb
push
insb
lods
mov
das
sarb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
sbb
adc
sub
inc
mov
add
dec
fwait
sub
add
sbb
and
mov
add
pop
lret
jno
push
pop
dec
mov
fs
je
adc
jns
jno
jle
add
les
outsl
int3
pop
mov
dec
rcr
scas
push
push
xchg
rolb
addl
das
mov
in
and
ljmp
or
push
mov
cld
ja
mov
jle
push
fildll
pop
shlb
clc
push
sbb
and
ficomps
xchg
push
aaa
pop
push
add
jo
nop
push
aad
jb
daa
pop
and
inc
insb
cwtl
cmp
pop
jae
add
push
sbb
pop
sarl
lock
incb
jge
repnz
mov
xchg
sbb
push
or
ljmp
add
xor
pop
dec
push
test
insl
out
shrl
cmp
mov
inc
and
jge
dec
cltd
add
mov
dec
mov
pop
fsubs
inc
add
inc
push
gs
ret
pop
add
sub
lcall
inc
shlb
push
sbb
jge
add
test
arpl
xchg
sbbb
movsl
int3
mov
add
cli
jle
sub
fsub
es
cmp
enter
sarb
or
inc
xchg
pushf
pop
add
inc
int3
sub
add
or
pop
mov
test
add
jae
shll
lea
pop
movsb
pop
mov
lea
cmpsl
rolb
ror
pusha
add
push
adc
push
cld
es
add
enter
adc
sti
pop
adc
in
add
cltd
push
xchg
push
pop
mov
punpckldq
and
push
pop
or
cld
or
push
call
jg
clc
mov
jge
ror
mov
jp
add
mov
int3
roll
sahf
inc
inc
add
je
scas
aam
jno
test
sahf
lods
ljmp
adc
xchg
cmp
and
ret
add
clc
popf
leave
cmp
mov
rcll
add
mov
jne
ja
adc
sbb
sbb
mov
sbb
add
lea
mov
sbb
mov
out
loopne
into
add
inc
aad
push
clc
push
sarl
insb
add
inc
daa
sub
jle
push
push
mov
call
add
mov
aam
mov
mov
add
fists
add
adc
enter
add
mov
pop
iret
fnstsw
pushf
push
xor
test
orb
test
incb
dec
inc
rorl
imul
fwait
inc
lret
mov
dec
sbb
add
xor
cmp
mov
jo
pop
push
fdivrs
icebp
and
jo
mov
pop
add
movb
add
addr16
cmpsl
xor
popf
lcall
cld
fcompl
cmp
rcrl
cmpsb
xor
es
add
hlt
loopne
hlt
scas
add
and
je
cmpsl
inc
mov
jge
xor
aam
add
pop
rorb
lea
dec
cmp
fadds
mov
xor
mov
jp
cltd
mov
mull
int3
xchg
jns
jecxz
out
push
mov
adc
test
xor
mov
add
push
push
dec
and
add
pop
sbb
mov
xchg
inc
mov
ds
add
mov
adc
jg
xor
mov
add
addr16
adc
adc
pop
push
adc
pop
sub
subb
mov
jmp
push
mov
jge
fimuls
roll
jle
movsb
push
adc
pop
add
pop
push
ret
add
adc
add
jle
sub
xchg
rcrb
pop
ss
or
sbb
ret
inc
or
adc
or
add
and
add
js
rorb
push
ljmp
jmp
add
mov
stos
xchg
add
sbb
inc
out
add
dec
test
add
adc
pop
aam
mov
mov
fdivrl
add
ja
sub
cmpsb
out
adc
add
push
push
pop
jmp
cmp
dec
pop
jne
in
shll
cmp
jge
lcall
addl
or
lods
pop
xchg
mov
ljmp
icebp
push
stc
xor
ds
cmpb
add
insb
push
fbld
cli
cmp
pop
fs
and
push
aas
out
add
dec
hlt
sub
fistl
adc
into
xchg
lock
jb
push
xor
or
mov
adc
mov
ja
add
test
lret
add
enter
inc
sub
pushf
adc
out
add
add
sbbb
cmp
pop
les
pop
sub
mov
and
and
xor
jnp
jno
add
sub
inc
xor
outsb
add
outsl
addl
mov
dec
cld
push
xrelease
and
repnz
cmp
add
imul
rolb
std
or
or
je
ja
add
sbb
xchg
test
scas
popf
add
sub
lock
pop
add
mov
dec
dec
inc
mov
fwait
jbe
mov
adc
aaa
movb
addb
orb
or
aad
xchg
jno
ljmp
mov
add
movsl
ja
cli
cmpsb
add
sub
fldenv
and
jge
xchg
inc
push
nop
scas
into
ljmp
push
popa
fisubs
clc
movsl
rolb
mov
sub
add
scas
mov
add
test
adc
test
aas
xchg
ds
xor
mov
lods
push
add
es
adc
jb
adc
mov
sub
enter
aaa
andb
or
movb
add
pop
or
cmpsb
add
nop
mov
pop
pusha
add
into
sbb
pop
add
ret
sub
push
mov
cwtl
jnp
iret
and
bswap
jg
call
inc
jns
jnp
mov
imul
sub
jg
or
scas
shll
xor
push
aas
test
add
adc
jne
or
dec
pop
fstpl
ss
adc
cli
xor
push
ljmp
fnstsw
add
xchg
subl
or
jns
jg
decb
cmp
loopne
mov
fdivp
inc
pusha
data16
add
jg
xchg
mov
add
and
and
cld
loopne
sub
sbb
add
and
enter
xchg
loop
dec
jl
add
and
add
lret
std
xchg
fadds
lods
aaa
add
outsl
insl
dec
outsb
imul
hlt
xchg
jle
pop
or
jno
nop
fisttpll
out
add
push
fs
icebp
mov
call
imul
push
jno
add
lcall
add
cmp
or
imul
jnp
adc
push
cwtl
push
add
and
test
sub
mov
daa
cmc
push
loope
or
js
jne
out
and
ljmp
icebp
or
nop
push
xchg
loopne
lret
sub
sbb
stos
pop
mov
mov
lret
inc
or
fstl
add
cmp
add
xor
or
aad
clc
in
pop
lock
or
fldl
pop
enter
jno
aaa
add
test
stc
jg
adc
inc
sbb
lahf
push
outsl
dec
rcll
cld
pop
fmull
loope
in
cmp
or
inc
jmp
dec
into
push
testb
testb
shlb
add
pop
lock
loop
jno
and
mov
jnp
in
testb
icebp
add
jno
cmp
movsl
mov
sbb
mov
ljmp
mov
loope
inc
je
pusha
scas
xor
shl
or
jmp
bound
xor
pop
cmp
add
jecxz
xchg
mov
rcrl
hlt
arpl
sbb
stos
pop
push
mov
push
jle
rcrl
aas
jecxz
lods
ljmp
in
sbb
push
pop
inc
movsl
adc
addl
cltd
inc
rclb
pop
mov
jg
mov
lea
in
jnp
mov
shrl
imul
add
popf
xor
sti
push
push
pop
add
aam
clc
mov
mov
es
test
adc
lcall
sub
daa
dec
push
lret
mov
inc
push
pop
lcall
sbb
push
jb
ss
inc
xchg
sub
sub
add
pop
push
pop
xor
push
fiaddl
push
push
in
gs
mov
call
orb
cwtl
pop
cmpsl
sub
test
cmpl
fstpl
es
out
rorb
jae
pop
mov
pop
loopne
aas
cmc
inc
in
pop
pop
mov
lods
int
call
paddw
repnz
add
lock
pop
stc
push
sbb
add
push
clc
insb
pop
sub
mov
icebp
ljmp
dec
aad
es
add
jne
xchg
aas
and
add
mov
push
bound
icebp
mov
fwait
les
out
and
mov
push
add
lock
push
subl
jmp
add
icebp
je
fildl
or
dec
cs
pop
dec
add
int3
push
mov
outsb
ret
popf
in
add
inc
test
add
xor
bound
out
mov
sbb
cmp
jge
dec
shll
lods
ficompl
outsb
call
lods
mov
and
xchg
push
fsub
imul
push
je
subl
call
fs
repz
add
loopne
call
add
xlat
dec
ret
pop
xchg
scas
addr16
stos
sbbb
or
push
bndldx
loopne
inc
fyl2xp1
sub
pop
add
mov
shlb
xchg
xor
push
inc
flds
xchg
mov
out
lahf
call
xchg
xchg
mov
aas
in
stc
cmpsb
clc
shrl
mov
jo
call
jne
add
jp
jle
dec
sub
cmp
rolb
and
test
sub
cmp
mov
add
lock
inc
pop
cmp
in
or
or
add
nop
sbb
sbb
add
and
fs
cwtl
pop
add
insl
cmc
rcll
and
add
data16
xor
rclb
clc
push
add
rolb
xor
pop
add
jo
push
in
jle
cmp
popf
cld
inc
ljmp
repnz
in
pushf
dec
or
mov
test
and
int3
add
adc
add
pop
pop
add
stc
ss
hlt
scas
aas
insb
bound
test
in
jl
add
pusha
push
je
popa
outsb
jae
inc
jb
in
daa
xchg
lock
sarb
add
push
sub
cmp
cmp
mov
xchg
rol
fnsave
pop
mov
lock
out
and
adc
add
cmc
mov
add
bound
stc
sbbb
cmp
je
mov
leave
pop
jne
sahf
roll
dec
incl
test
add
jle
pop
inc
cmpsl
or
mov
lea
mov
and
testb
pop
dec
xorb
inc
jg
pop
add
and
inc
jmp
aad
and
loopne
add
cmp
iret
pop
mov
shl
addr16
dec
add
and
and
out
or
add
cmpl
add
cltd
call
push
add
stc
and
add
or
neg
xchg
cmp
add
out
adc
clc
add
fimuls
lods
jmp
add
inc
add
xchg
into
cmp
add
or
jae
sbb
adc
in
adc
add
and
add
test
mov
lock
nop
and
mov
jno
sbb
ljmp
and
push
faddl
mov
je
mov
pop
inc
mov
inc
cmp
pop
adc
add
add
ret
push
lret
adc
int
sub
sbbb
scas
jg
add
int3
out
xchg
fmull
push
adc
push
pop
mov
dec
xor
ss
jmp
and
sub
xchg
add
outsb
into
call
or
test
add
ret
adc
add
dec
movsb
les
cmp
jns
test
mov
loope
nop
out
mov
or
int3
or
iret
inc
inc
sub
in
icebp
sbb
sbb
sub
dec
push
test
jle
leave
and
roll
scas
or
xchg
or
movb
cld
sub
test
jle
cmp
inc
sub
adc
lret
inc
cmp
cmp
sbb
mov
call
cltd
and
sub
add
pop
mov
jmp
add
and
and
cs
sbb
sub
lret
mov
inc
push
imul
adcb
jno
add
and
ja
lsl
in
add
lret
enter
jle
add
add
or
loopne
push
nop
adc
bound
shlb
inc
js
and
jbe
ds
subb
mov
or
pop
in
int3
mov
push
ret
jg
xor
stc
cmp
xlat
dec
test
lds
xchg
mov
fwait
jae
add
dec
inc
push
pop
ljmp
push
add
std
lahf
sub
ret
cld
in
mov
inc
add
dec
add
add
dec
mov
pop
mov
rclb
xor
adc
rol
cmp
and
pusha
cwtl
loopne
fdivr
add
fs
int
mov
inc
aas
add
push
sub
add
xor
lock
cmp
add
or
int3
jle
inc
outsl
sub
rorb
in
mov
push
test
xor
sub
arpl
pop
icebp
pop
mov
or
fildll
add
daa
mov
add
cmc
mov
add
das
pop
jo
fstps
or
inc
jle
in
outsb
subb
pop
cli
jb
xor
push
cmp
add
or
add
adc
mov
add
nop
scas
cmpsb
loopne
fs
add
xchg
sub
sub
add
push
out
rolb
outsl
adc
loope
jl
or
sbb
xchg
jmp
jbe
add
jge
dec
add
test
push
push
dec
sahf
adc
add
push
call
and
mov
loop
pop
add
icebp
xor
out
add
jnp
cs
xor
popf
inc
cmpsb
dec
push
pop
or
xor
jecxz
stc
out
sbb
sbb
and
and
packuswb
inc
paddb
stc
cli
cmp
incb
cs
and
cs
pop
sbb
xor
and
inc
or
add
jae
add
or
mov
inc
lahf
cwtl
pushf
add
sub
xchg
icebp
movsb
add
iret
push
loop
inc
xor
sbb
add
jg
ds
xchg
out
pop
pop
inc
fcomps
aad
mov
sub
enter
testl
and
nop
sub
xor
sub
mov
popf
les
in
mov
nop
imul
enter
mov
aas
xor
xchg
sbbb
adc
inc
cmp
mov
and
or
mov
rolb
bound
imul
jge
incb
repz
add
xchg
rolb
imul
pop
fs
cmc
rclb
pop
add
xchg
rol
dec
push
push
add
adc
imul
dec
call
add
sti
inc
adc
movsl
mov
sub
adc
add
mov
rcl
cmp
or
inc
add
in
add
test
hlt
in
and
mov
mov
repz
sti
shl
pop
add
and
add
out
movsl
jns
sti
fmul
loope
xchg
add
xlat
les
cmp
add
aaa
ret
test
js
bound
cmp
xchg
or
sbb
add
adc
inc
cli
int3
push
sbb
add
cmp
lea
aas
inc
mov
add
mov
cmp
sti
add
cmc
in
add
add
add
rorb
or
loop
loopne
adc
add
fadds
add
cmp
ljmp
les
addr16
sbb
divb
addb
add
cmc
cmp
js
push
popa
popf
insl
mov
sbbl
in
sbb
mov
add
pop
dec
or
mov
les
imull
adc
rcrb
adc
cmova
pusha
cmpb
test
jo
mov
fprem
xor
jle
pop
fwait
icebp
adc
mov
push
hlt
ljmp
sbbb
pop
aam
stc
sbb
add
in
xchg
cmp
aam
sbb
mov
add
shlb
iret
in
fistl
out
adc
loopne
sbb
arpl
pusha
sahf
mov
pop
add
sbb
or
push
lods
les
test
inc
and
sub
inc
add
or
int3
out
outsb
mov
push
testl
call
mov
add
push
inc
pop
cmpsl
and
xchg
dec
stos
xchg
jo
inc
rolb
mov
add
inc
andl
mov
jmp
call
lcall
jo
pop
and
push
add
mov
orb
int3
ljmp
sub
jns
loope
jge
out
push
std
fcomps
dec
cmp
out
test
ljmp
test
aad
clc
jl
mov
out
sub
bound
stos
inc
mov
adc
add
cwtl
jge
mov
push
and
jns
add
div
test
and
mov
cmp
fld
inc
stc
call
rcl
sub
ja
add
leave
push
adcb
outsl
jmp
loopne
xor
push
jne
aaa
inc
lret
outsl
arpl
push
jg
in
inc
scas
adc
inc
decl
mov
jl
dec
cmp
jle
or
fimull
inc
or
add
nop
mov
clc
dec
sub
dec
dec
sub
pop
xlat
mov
xchg
imul
pop
mov
mov
sub
add
jae
call
dec
sub
clc
lret
cmp
sbb
or
ljmp
in
sbb
adc
cli
add
sub
cmpl
adc
adc
push
sub
sub
adc
mov
mov
cli
pusha
rcrl
push
jbe
xor
add
sub
subb
iret
pop
adc
and
addr16
adcb
inc
add
pop
xor
cmp
or
sub
inc
mov
inc
push
add
sahf
pop
aas
sarl
adc
and
add
push
decl
jl
sbb
js
jg
jge
add
sbb
or
ror
fmull
and
daa
clc
push
test
leave
outsl
insl
jno
pop
imul
inc
stc
and
xchg
ljmp
test
add
xor
jbe
mov
xchg
xor
sub
sti
mov
std
sub
mov
mov
and
enter
sub
int
or
pop
sti
xchg
adc
xchg
orb
pop
insb
rorl
movsb
faddl
pop
add
or
cmp
in
lret
in
xor
cld
bound
inc
leave
pushf
and
or
popf
idivb
cltd
mul
add
in
dec
adc
adc
sbb
clc
sbb
orb
jns
clc
hlt
mov
enter
and
or
lret
psrad
mov
or
inc
adc
test
enter
in
lret
or
icebp
and
push
rolb
adc
add
dec
fstpl
dec
clc
mov
repnz
cmp
in
addr16
enter
xchg
stc
pop
sbbb
adc
cmp
scas
add
imul
or
jmp
jnp
dec
outsb
pop
add
popf
push
lret
test
add
fs
sub
sub
and
push
cmp
loop
sbb
ds
xchg
fsubrl
push
loope
adc
pusha
dec
dec
sbb
add
and
bound
add
aas
pushf
push
clc
test
repz
aam
push
daa
add
xor
ret
xor
nop
sbb
add
mov
loop
and
sub
adc
add
push
jl
add
call
pop
hlt
in
and
sbb
pop
add
les
into
and
cli
roll
mov
test
mov
jnp
add
clc
and
sahf
or
inc
mov
jns
call
sub
add
pop
jp
js
pop
push
fcoml
jmp
dec
nop
pop
cmp
cmp
cmp
inc
or
and
dec
hlt
cmp
lcall
leave
push
sarb
loop
pushf
jmp
adc
add
rolb
divb
and
add
popa
je
cmp
push
cmp
nop
cmp
dec
in
add
push
sub
mov
adc
push
sbb
adc
addps
add
or
notl
movsl
add
pop
test
and
cs
mov
loopne
xchg
or
clc
psllw
pmaxub
push
cmp
and
xor
add
loopne
add
cs
pusha
cmp
call
xchg
aam
aaa
fsubs
add
jmp
outsb
repnz
xchg
fwait
cmp
pop
xor
add
mov
xor
add
sub
jle
jmp
sub
test
push
or
mov
rorl
pusha
pusha
sbb
mov
dec
std
call
add
mov
ds
mov
add
push
addb
rclb
out
or
cmp
adc
and
cmp
fcomps
test
sbb
std
cmp
sar
push
cmpb
xorb
je
mov
jge
xchg
test
or
mov
out
mov
adc
sti
mov
into
cmp
and
or
call
dec
popf
pop
and
xor
dec
xor
out
aad
rcl
addr16
jne
dec
adc
add
jmp
loop
push
das
loope
or
cs
ss
jb
fcmove
insl
das
jp
or
jmp
pop
pop
test
sub
addr16
add
sub
movsl
decl
xor
pop
seto
push
sbb
or
or
cmp
sbb
std
and
and
add
ljmp
out
dec
call
add
movsb
loop
mov
arpl
popa
lahf
addb
mov
dec
int3
mov
sbb
push
xor
nop
roll
or
incl
xor
pop
jno
dec
pop
cmp
inc
or
cmp
aaa
mov
xchg
unpcklps
or
clc
mov
sub
jns
push
pop
loope
sti
ja
les
add
lea
pop
xchg
add
jnp
jo
xor
pop
pop
fnstenv
push
push
pop
lods
cmpsl
dec
std
hlt
mov
sti
xor
sub
lret
lds
sbb
jle
mov
push
add
mov
mov
sbbl
xor
sub
sub
cmpsb
inc
xchg
xor
xchg
jp
xchg
jmp
scas
jae
and
adc
mov
add
lret
xchg
cmp
xchg
loopne
mov
jo
cmp
in
popf
add
inc
add
sub
movsl
add
shlb
cmp
popf
xor
mov
adc
es
add
call
pusha
and
mov
push
fdivrl
loopne
push
inc
clc
add
enter
ljmp
xchg
sub
pop
mov
or
jno
ret
pop
cmp
mov
push
fisttpll
cltd
cmp
mov
test
fwait
add
lret
cmp
sbb
pop
jl
hlt
xchg
fistpl
jl
or
cmpsl
or
push
popa
loope
add
dec
add
and
inc
push
ficomps
js
jl
pop
gs
incb
add
dec
lret
pop
leave
subb
add
mov
ja
dec
jbe
add
adc
jle
inc
pop
mov
jno
nop
outsl
scas
rcr
inc
add
adc
cld
stos
test
fistpll
iret
inc
in
cmp
jl
mov
add
sbb
out
jmp
testb
adc
add
lret
fs
push
punpckhwd
inc
cmp
jecxz
enter
sarb
xor
add
or
cmp
mov
dec
adc
sbb
mov
clc
ja
pop
mov
mov
fdivrs
xor
inc
js
mov
lahf
call
out
dec
pop
sub
dec
xchg
xor
insl
js
or
dec
push
push
xchg
inc
sub
jae
cmp
sub
cmpb
loop
shl
shr
lock
test
dec
push
add
lret
or
sub
add
dec
inc
out
add
or
cmp
lahf
nop
das
int3
pop
mov
add
stc
js
add
xchg
addr16
add
mov
daa
xor
mov
add
cmp
jg
add
shl
add
mov
jl
adc
stc
clc
and
mov
mov
es
pextrw
popa
test
and
pop
push
push
push
adc
xchg
xor
inc
inc
push
add
sbb
cmp
adc
stc
xchg
scas
loop
call
cmp
loope
icebp
dec
call
mov
pop
stos
cli
inc
outsl
scas
xchg
mov
or
dec
fcomi
lret
icebp
addb
pop
cwtl
add
jg
add
add
or
push
dec
xorl
jns
sbb
icebp
xor
pop
lret
rorb
adc
add
adc
popl
repnz
jge
es
stos
add
sbb
jo
pop
push
jne
mov
ret
jg
add
jle
add
cmp
add
pop
add
dec
mov
pusha
scas
mov
add
mov
jmp
cld
das
test
call
add
dec
je
push
inc
hlt
xor
insb
loopne
enter
in
and
mov
sbb
push
add
mov
mov
mov
mov
cmp
add
mov
lcall
dec
ficoml
sbb
sub
inc
xor
dec
pop
inc
sub
out
add
push
and
or
xor
xchg
mov
pop
jle
add
and
repnz
addb
arpl
push
or
jmp
add
jl
inc
sbb
clc
stos
jo
inc
rolb
lods
mov
mov
repz
cs
mov
jnp
rol
stos
push
push
fs
add
dec
lcall
xor
je
jmp
cmp
jecxz
cmp
lret
dec
pop
cli
cmpsl
add
inc
pushf
adc
pusha
outsb
push
inc
push
cmp
add
repnz
out
xor
inc
sub
xor
lahf
add
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fadds
loopne
repz
and
addl
cli
jb
mov
cld
pop
xor
inc
movsl
call
xchg
sbb
pushf
jp
mov
mov
fadds
add
test
add
imul
call
cmp
xlat
outsl
movb
data16
mov
vorps
or
inc
xchg
outsb
sbb
in
inc
out
faddl
nop
mov
cmpsl
push
add
orb
add
and
and
out
adc
test
add
inc
shrb
jp
js
jl
pop
roll
paddusb
loopne
xchg
add
cmp
mov
xor
out
lret
pop
sbb
pop
pop
subb
in
push
mov
hlt
sbb
xchg
mov
dec
sub
clc
xchg
add
shll
xchg
cld
xor
out
add
fsubr
fidivrl
xchg
cmp
pop
jl
add
add
je
add
enter
sbb
inc
and
movb
and
inc
add
test
push
inc
sbb
je
mov
or
push
out
add
sub
subl
mov
lcall
enter
mov
aam
adc
mov
mov
sbb
shll
rcrl
add
scas
inc
js
adc
cld
loop
rcr
inc
add
adc
cli
add
nop
jecxz
jnp
push
std
mov
add
dec
daa
jne
aam
test
inc
xor
or
je
jcxz
das
push
and
add
sbb
ret
call
xchg
xor
push
imul
pop
movsb
xor
add
jle
scas
es
scas
add
repnz
incb
cmp
pop
aas
movl
sub
aas
mov
nop
or
xadd
add
jb
je
jo
add
add
rorb
in
mov
ficomps
pop
sbb
add
rcr
pop
fiaddl
sbb
dec
fimuls
ffree
sbb
sbb
add
aam
aad
cmp
pop
sbb
loope
in
call
adc
add
adc
in
xor
add
shl
xor
ss
testb
shlb
hlt
add
cld
cmp
add
sarb
ds
xchg
jno
cmp
sarb
psubw
sub
add
add
shrb
sub
inc
ljmp
cmp
add
in
inc
pusha
push
in
add
and
and
daa
add
mov
idivb
jecxz
and
add
shlb
and
data16
mov
cmp
andl
cmpsl
in
loopne
add
inc
movsb
loopne
insb
add
lods
subl
outsb
inc
scas
cmp
stos
cmp
imul
or
test
push
sarl
mov
jp
mov
enter
loopne
or
mov
jl
mov
je
push
jne
inc
mov
ja
mov
mov
inc
jbe
jb
mov
mov
mov
shlb
inc
mov
push
add
nop
adcl
push
inc
xchg
ret
xchg
daa
push
inc
push
addr16
rcll
rolb
pushf
rcrb
inc
jo
add
sahf
add
pop
cmp
xchg
lcall
or
pop
sbbb
fisttps
cmp
addl
dec
lock
rorl
rorb
dec
inc
mov
inc
or
or
or
xchg
mov
inc
call
xchg
in
sbb
push
mov
cld
jb
add
js
and
xor
push
popf
push
rcrb
jns
push
and
inc
add
push
add
mov
mov
pusha
pop
popf
add
pop
add
jno
aad
or
and
in
ja
pusha
test
jae
aas
call
mov
add
add
movl
adc
dec
sbb
xchg
push
sbb
mov
lock
add
and
fistps
jnp
scas
cmp
sub
arpl
add
push
push
data16
adc
fdivrp
mov
dec
jo
push
push
push
sarb
add
lods
xor
add
dec
push
mov
lcall
jne
dec
add
or
sub
jle
jl
pextrw
cmp
mov
add
adc
lods
add
mov
lahf
adc
pop
fisttps
pusha
push
cld
lcall
cwtl
push
lods
cmp
mov
pusha
add
jo
call
inc
in
or
adcl
lea
xchg
pop
cmpsl
and
push
xor
fadds
adc
cmp
add
aad
mov
add
jne
add
cwtl
mov
stc
xchg
inc
push
jp
push
inc
pop
scas
leave
sarb
add
daa
add
addr16
mov
stos
add
lret
sbb
mov
test
add
cs
xor
jno
out
add
adc
add
sti
icebp
dec
xchg
nop
pop
adc
mov
adc
repz
and
add
pop
pusha
cmp
loop
add
stos
nop
xlat
insb
push
stc
leave
add
icebp
pop
shlb
xchg
jmp
sbb
or
mov
jno
xchg
dec
xchg
add
into
rcrl
lret
mov
leave
icebp
add
cmp
popa
mov
into
push
cmp
mov
adc
push
les
push
add
add
mov
and
cli
jbe
and
and
push
loop
push
cmp
sub
push
adc
int3
enter
enter
xor
andb
and
pop
xchg
jno
jb
mov
add
repnz
sub
testb
icebp
dec
cld
stc
ret
push
or
sub
xchg
adc
mov
push
int3
ret
add
sbb
dec
ret
clc
lods
incb
adc
lods
dec
and
dec
inc
xchg
cmp
inc
inc
adc
xor
mov
lods
dec
xor
stc
cmp
sub
or
mov
movsl
adc
loope
add
or
mov
or
lods
int
push
inc
or
sub
test
enter
xor
icebp
sub
imul
add
aaa
sub
add
mov
fs
loopne
repnz
cmp
adc
fwait
loopne
mov
pop
movlps
rcll
add
leave
mov
mov
mov
enter
rolb
push
popf
lods
fcomp
fs
dec
or
fs
sbb
or
jecxz
jno
xchg
add
data16
inc
cmp
dec
pop
nop
or
push
ja
aam
inc
xchg
lret
add
pop
icebp
or
inc
pop
sbb
stos
and
scas
shlb
repz
or
cmp
insb
xlat
fildl
shll
cld
and
push
repnz
pop
sub
out
pushf
cmp
mov
or
add
icebp
add
pop
mov
pop
in
inc
pop
test
xchg
int3
loop
out
pusha
loopne
sbb
mov
and
lock
xchg
push
mov
adc
sbb
mov
test
scas
xor
and
popf
add
in
add
dec
or
push
add
or
cmp
inc
cmp
sub
dec
inc
addr16
addr16
xchg
pop
jge
mov
xor
test
adc
add
leave
je
push
js
mov
test
jnp
mov
xor
daa
shl
jmp
orb
dec
call
mov
ret
ucomiss
mov
mov
add
jmp
shrb
push
jno
add
ja
subb
les
mov
sub
jle
xchg
ret
mov
orl
out
sub
and
adc
add
movq
sub
add
sbb
or
jnp
in
adc
shr
pop
sub
add
jne
jno
les
pop
mov
das
div
psubd
inc
ljmp
mov
sub
jge
addb
fbstp
sub
add
lret
jg
hlt
js
add
cmp
fs
es
cmp
adc
aas
sbb
enter
repnz
or
mov
or
sub
call
cs
pop
pop
clc
pop
loop
js
add
insb
sub
cs
aas
add
div
and
add
insl
cmc
and
xchg
push
push
lcall
data16
or
mov
movsb
push
cmp
mov
or
nop
inc
adc
loopne
cmp
adc
jb
repnz
add
push
sub
adc
add
repz
pop
pop
std
jecxz
call
adc
nop
add
mov
hlt
add
cli
cmc
mov
add
lahf
jae
imul
sbb
xor
cmp
lldt
fmuls
rcrl
push
stc
jns
cmpl
sub
cmp
pop
mov
jno
orb
cmp
cmp
and
sbb
inc
in
pop
add
mov
or
cmpsl
sbb
pop
xchg
xor
cwtl
loop
add
ret
cmpsl
call
out
shr
je
mov
or
mov
and
mov
hlt
pop
sbb
pop
inc
jecxz
inc
pushl
push
add
sub
xor
add
pushf
inc
dec
add
test
filds
stc
lods
notb
add
fnclex
test
neg
mov
sti
mov
mov
cltd
push
std
out
addl
push
and
mov
mov
loopne
fsubrs
mov
sub
leave
js
jge
jg
pop
push
dec
inc
sbb
inc
inc
inc
pop
inc
inc
dec
cmp
dec
dec
dec
dec
dec
dec
push
cs
or
add
pop
sbbb
pop
bound
data16
imul
pop
pop
jg
test
jne
shlb
jns
xor
xor
xorb
sub
add
and
and
sub
mov
jge
loopne
sub
sub
daa
sbb
xor
add
cmp
push
jae
add
pop
aas
cmpsl
cmc
dec
pop
and
sar
ss
rolb
fstl
lret
mov
pop
xor
hlt
subb
bound
testl
add
fdivrs
aad
aam
cmpsb
outsb
pop
add
inc
loopnew
lcall
push
in
lahf
add
mov
add
inc
js
stos
cmpsb
mov
test
fstl
jge
xchg
hlt
in
dec
xor
cwtl
arpl
mov
rolb
sub
outsb
adc
scas
lea
push
out
movb
jle
shl
sbb
loopne
add
inc
dec
dec
jne
aam
pop
orw
dec
inc
mov
xchg
shrl
mov
xor
dec
call
ljmp
add
stos
adc
jg
push
fs
cld
dec
lock
lods
mov
rcrl
inc
mov
incl
add
and
cmp
xor
pop
and
jne
mov
repz
iret
rol
inc
pop
xor
ljmp
inc
mov
or
cmp
pop
rorb
mov
test
adc
std
add
sti
adc
cmc
inc
sub
test
xor
add
loopne
cmp
add
or
orl
add
test
inc
add
test
sbb
mov
das
data16
arpl
add
push
aam
inc
mov
push
pop
pop
push
push
mov
dec
mov
mov
sub
add
xorl
push
movsl
sub
push
test
inc
inc
and
andb
lahf
pushf
sbb
sub
adc
mov
and
es
addb
adc
mov
out
adc
add
add
cmp
sbb
sub
fs
mov
push
or
out
pushl
lahf
out
rorb
add
xchg
sbb
loop
repz
mov
and
push
mov
add
push
push
or
xchg
shrb
push
cmp
addl
jl
pop
inc
add
nop
test
adc
movsb
in
jmp
add
jbe
or
push
call
js
inc
xchg
ficompl
push
dec
subb
jl
add
mov
push
pop
shll
outsb
movsl
into
pop
mov
cld
adc
push
mov
add
add
push
mov
jno
mov
test
xchg
xchg
stos
enter
cmpb
mov
cld
dec
inc
add
mov
mov
mov
mov
pop
loop,pn
add
jae
outsb
jecxz
into
and
sbb
add
dec
inc
push
add
push
push
pop
mov
sub
push
mov
xor
cmp
in
inc
mov
inc
and
sbb
push
jp
mov
add
mov
and
insb
jmp
in
sti
popa
pop
sub
cld
mov
mov
lret
push
leave
lcall
jne
adc
loopne
dec
lock
add
adc
mov
mov
jne
add
clc
daa
push
imul
jge
sub
mov
mov
add
mov
stos
into
fbstp
fstpt
movsb
jo
add
popf
fs
pop
and
xchg
xor
movsb
add
enter
xor
ret
add
incw
and
out
sbb
mov
pop
push
adc
jb
add
sub
cmc
inc
out
clc
sub
xor
adc
push
add
rolb
jae
add
or
out
add
imulb
push
les
cmp
xchg
inc
sub
adc
ljmp
xor
movl
loop
rorb
dec
jns
sub
add
stos
enter
loopne
inc
or
dec
lcall
add
push
or
mov
dec
cltd
cli
loop
add
notl
add
push
or
cmp
jb
pusha
xor
cmp
cmp
sbb
loop
mov
jge
outsb
inc
sbb
inc
fisttpl
icebp
add
add
inc
adc
fimull
pop
or
cmp
push
jp
xchg
jecxz
mov
adc
sub
int3
decb
sbbb
fildl
cmpl
pushl
add
add
dec
and
add
inc
in
aas
add
or
icebp
inc
pop
int
add
xchg
verw
loopne
and
cmp
cmp
push
in
lds
lock
xor
mov
add
out
adc
add
cld
mov
add
or
jle
pop
aas
insl
add
inc
push
pop
lret
add
out
loopne
movzwl
clc
add
repz
movlps
ffreep
push
add
sub
jbe
lldt
dec
inc
add
shll
sub
mov
cltd
gs
add
aaa
add
push
mov
pop
hlt
cmp
test
cmp
push
add
adc
and
adc
jne,pn
mov
sbbb
add
xor
push
inc
lret
push
mov
pop
and
or
loope
mov
add
jne
push
jo
add
iret
daa
xlat
xor
push
cmc
bound
add
mov
lock
sub
fs
dec
in
add
outsl
gs
mov
xlat
leave
push
sub
in
or
or
fcoml
inc
das
hlt
jl
cmp
adc
movsl
mov
mov
nop
or
dec
dec
add
lods
add
xchg
in
es
add
or
cmp
push
xchg
or
jne
mov
mov
or
mov
mov
into
dec
repnz
enter
add
push
in
inc
push
dec
lret
ja
stos
sub
mov
gs
mov
push
in
push
aam
movsb
push
js
dec
add
insb
mov
fcoms
add
in
xchg
nop
mov
cmc
dec
add
movsb
dec
xchg
pop
add
adc
lods
adc
loop
xchg
dec
cmp
add
out
fwait
aam
repnz
cmp
ret
cmp
movsb
cmpl
adc
inc
adc
ss
and
and
or
jmp
sub
add
adc
mov
add
sub
shrl
and
and
cld
mov
ret
lahf
jl
leave
inc
loopne
push
dec
mov
xchg
test
push
xor
movsb
add
xor
adc
mov
push
add
xchg
sarl
jbe
fs
adc
in
mov
loop
push
pcmpeqw
add
dec
aam
xor
or
cmp
ljmp
dec
dec
adc
in
inc
fucom
mov
cld
dec
clc
dec
sbb
filds
test
or
adc
push
inc
add
lret
sbb
add
addl
js
add
call
fdivs
xor
pop
inc
and
push
sbb
cltd
add
icebp
add
push
int3
incl
es
sbb
flds
icebp
push
jp
pop
xchg
add
push
inc
mov
clc
imul
add
adc
mov
ds
push
mov
sbb
add
ja
mov
and
nop
lea
add
out
dec
fisttps
rol
bound
add
jne
andb
sbb
inc
xchg
cmp
xchg
shlb
push
and
rcrl
ret
xor
incl
dec
adc
aam
cmp
cmpsl
mov
xchg
sub
sub
add
or
sbb
push
mov
adc
cmp
imul
add
pop
xor
add
fcmovnb
ljmp
push
add
pop
xchg
and
sbb
lock
jg
xor
add
test
add
or
push
sbb
push
and
and
dec
or
nop
fldcw
ret
js
dec
je
jle
mov
add
sbb
dec
cli
insb
add
add
push
jb
decb
stc
sbbb
add
cmpsl
int3
adc
inc
sub
pop
daa
lret
mov
inc
fadd
xor
addl
mov
add
add
dec
pop
sbbl
mov
mov
cvtdq2ps
hlt
and
pop
and
mov
dec
cmp
inc
jb
out
test
inc
pop
xlat
cli
push
xor
les
inc
add
add
jne
pop
in
ljmp
pop
add
or
xor
shll
jmp
jg
sub
push
ret
add
and
rcrb
test
add
aad
lcall
ss
lock
cmp
cmp
jb
add
iret
xchg
arpl
rorb
add
lods
pop
fnstenv
sub
mov
mov
imul
pop
and
or
addr16
xor
jo
dec
sbb
xor
jbe
into
add
adc
fcmovu
inc
and
push
dec
dec
cmp
adc
adc
xor
dec
nop
fs
fisubrs
hlt
pop
add
lret
icebp
dec
jae
call
push
das
jb
add
dec
hlt
jne
mov
lds
aaa
jg
add
rolb
mov
dec
push
clc
jle
fstl
or
push
add
mov
dec
loopne
popa
loope
test
lcall
les
incb
push
xor
clc
lock
mov
push
gs
repz
inc
aas
push
pop
and
sbb
mov
fisubrs
add
fiaddl
rolb
inc
sti
push
lcall
imul
jmp
pushf
add
cwtl
pop
add
in
inc
cmpb
jne
lock
in
jge
pop
mov
push
je
mov
adc
and
movsl
and
lret
add
int3
add
push
xor
dec
cmpb
jne
add
call
mov
dec
psllw
push
cmp
iret
xor
je
and
cmp
add
pop
push
or
addr16
inc
addl
call
cmpsl
dec
cmp
push
jo
inc
xor
mov
add
adcb
pop
mov
add
mov
ja
inc
jae
or
sub
sbb
je
add
pushf
jbe
aad
xor
sahf
or
or
rolb
shl
shrb
xchg
cmp
adc
divb
add
sub
mov
jmp
and
push
sbb
mov
loopne
cmp
orb
xlat
and
or
rclb
aad
and
jb
xor
mov
scas
loope
add
loopne
pop
dec
and
call
mov
mov
adc
mov
cmpsl
imul
mov
inc
mov
incl
testl
movsl
loopne
call
sarb
xchg
push
xor
inc
lret
push
pop
inc
add
sbb
or
les
mov
cmp
cmp
mov
jecxz
test
je
sub
push
call
mov
add
adc
mov
cmpsb
je
lret
cli
hlt
pop
sbb
imul
xor
ljmp
das
add
and
adc
daa
jne
out
xor
mov
add
dec
push
jl
sub
push
push
push
push
xchg
pop
push
pop
mov
or
or
js
add
mov
leave
test
xor
mov
inc
pusha
adc
push
add
mov
call
sub
lods
pushf
mov
inc
add
xchg
or
daa
adc
inc
push
mov
mov
sbb
inc
and
adc
mov
jb
mov
icebp
pop
imul
inc
xor
mov
xlat
push
add
fisttps
inc
xchg
pusha
add
cs
call
sub
add
push
fs
add
push
dec
lret
xchg
or
je
mov
sbb
xchg
or
xor
lock
add
loopne
push
xchg
sub
aas
call
adc
cltd
inc
mov
in
mov
cli
sub
cmpsl
lods
sub
ret
aam
lcall
mov
stos
adc
add
or
mov
pop
sub
loop
ficoms
sbb
ds
cmpb
dec
inc
fisttps
mov
je,pn
fnstenv
popa
add
add
add
pop
add
pop
xor
sbbb
mov
data16
out
inc
mov
push
push
add
ret
add
dec
mov
jge
stos
pushl
test
pop
add
xchg
add
movb
sbb
lea
clc
js
add
mov
in
enter
lahf
sub
loop
add
dec
inc
push
pop
adc
add
aas
call
mov
pop
or
fwait
or
adc
scas
pop
outsl
xor
push
ret
sub
ss
add
in
scas
test
nop
xchg
subb
and
rorl
and
add
daa
adc
fdivl
or
call
push
pop
popl
add
dec
xchg
push
and
jns
data16
push
add
xchg
ret
and
add
xor
mov
jns
repz
loope
cs
add
push
popf
int
push
addl
push
adc
sub
add
lcall
mov
add
shlb
in
inc
or
repnz
lahf
add
popa
mov
push
sub
add
xchg
xor
add
dec
sbb
add
rcrb
jnp
cmp
clc
pop
fadds
shlb
xchg
sbb
push
ret
sub
jecxz
add
lds
invd
add
data16
sub
pop
xor
je
cltd
and
add
rcr
jg
or
es
mov
mov
sub
pop
dec
adc
mov
sahf
bound
add
pop
inc
mov
nop
in
add
inc
mov
cmp
mov
rcrb
dec
xor
clc
adc
cmp
or
sbb
and
xor
xchg
mov
or
mov
lds
jmp
mov
push
add
mov
dec
add
les
loopne
es
add
js
pop
add
loope
dec
add
pop
es
and
sbbl
incb
mov
push
leave
cmpsb
sbbb
adc
ret
push
daa
jns
dec
adc
pop
jmp
or
mov
movsl
sbb
lock
xchg
insb
add
nop
mov
or
xor
push
leave
adc
sbb
pop
fsubs
sti
mov
adc
loop
dec
sub
jo
inc
add
call
lcall
add
lock
mov
add
arpl
shlb
jge
mov
jg
add
inc
push
mov
add
imul
clc
push
sbb
subl
and
push
and
pusha
repnz
incl
mov
add
mov
stos
insl
bound
push
iret
xor
adcl
stos
xor
add
push
push
pop
fbld
popa
shlb
dec
sub
add
inc
repnz
add
xor
or
push
or
test
test
jae
cmc
add
inc
push
sub
jg
sbb
adc
push
mov
subl
xchg
jg
add
mov
mov
mov
cmp
fiaddl
out
mov
out
add
orb
fwait
pop
cltd
jg
ret
inc
adc
and
lret
les
sbb
adc
lock
or
in
stos
dec
adc
sti
mov
decl
jns
bound
push
inc
dec
or
push
pop
cltd
add
aam
push
mov
sbb
add
mov
testl
pop
add
push
dec
adc
push
push
pop
rclb
or
pop
cmp
add
pop
stos
add
xchg
cmp
dec
loop
shl
xchg
xchg
push
pop
push
dec
adc
repz
add
je
repnz
mov
in
ds
add
arpl
pop
nop
sub
test
movsl
jge
incb
fidivl
leave
push
stos
and
sbb
pop
fwait
test
adc
push
inc
mov
stc
fs
inc
xchg
pop
sub
push
inc
pop
cltd
movsl
jnp
mov
pop
jo
fwait
ljmp
lret
test
ret
push
sub
test
dec
inc
lahf
push
dec
add
push
gs
cmp
pop
mov
call
push
sbb
sti
out
inc
roll
aaa
rorl
call
cmp
ss
inc
add
xchg
adc
lret
inc
xor
mov
insb
add
ret
cwtl
push
je
or
shrl
xchg
cld
fmuls
jne
pop
enter
cltd
adc
pavgw
jmp
push
movsl
adc
es
push
add
or
sub
mov
cmpsb
or
adc
add
xchg
adc
sub
es
mov
lret
inc
xor
xorps
jnp
add
or
cmp
lea
add
mov
sbb
lret
dec
or
addr16
or
mov
ja
test
fisttpl
add
and
add
ret
test
add
shlb
add
xor
cli
mov
cld
cld
int
test
inc
pop
std
mov
push
hlt
cltd
mov
imul
sbb
mov
cli
sbb
pop
xchg
inc
in
xchg
mov
jnp
pop
shrl
dec
or
dec
xlat
shll
aas
cld
and
pop
mov
cmpsl
add
xor
push
not
movsl
repnz
xchg
push
ds
lahf
mov
ss
ljmp
lods
cmp
xrstors
push
test
insl
sahf
in
push
std
pop
sub
inc
add
addb
and
repnz
inc
ror
xchg
cwtl
rol
pop
sbb
pop
mov
es
or
cmp
subl
test
movsl
mov
in
dec
add
sub
add
rcl
mov
mov
inc
mov
add
pop
inc
out
add
or
mov
mov
sbb
orb
cs
test
and
cmp
lds
cmp
adc
stc
xor
inc
pop
adc
insb
and
jbe
movsb
mov
sbb
pop
pushf
and
mov
sbb
lods
hlt
inc
loop,pt
cs
push
jp
cmpsl
jne,pn
insl
out
sbb
loope
roll
les
and
xor
add
xchg
pop
mov
icebp
mov
xor
lods
lock
sbb
mov
or
inc
mov
cmp
pop
subb
pop
lahf
xor
add
and
push
mov
inc
mov
push
jbe
mov
movsl
aam
or
int3
loope
dec
mov
push
out
push
adc
aaa
mov
std
aas
outsl
mov
pusha
cmp
and
in
clc
push
lret
inc
pop
sub
dec
add
je
jns
mov
shrb
mov
pop
add
idivb
cli
ja
pop
leave
pusha
xchg
sub
adc
enter
ds
add
inc
inc
popa
push
cmp
add
mov
push
popf
aad
inc
jbe
in
push
mov
adc
movsb
or
xchg
loopne
push
pop
sbb
cmpsl
pusha
ret
fs
mov
cld
pop
loop
imul
ljmp
mov
lea
jp
mov
andb
or
inc
pop
das
leave
xchg
xor
add
test
pushf
into
rcl
add
sub
pop
sbb
je
jb
add
bound
add
jb
cmp
ljmp
sub
cmp
jns
pop
dec
in
lods
push
add
lods
sub
xor
jno
add
jge
lldt
insl
pop
daa
dec
adc
xchg
mov
xchg
mov
arpl
pop
jae
cwtl
fs
add
xchg
dec
lahf
js
lea
test
add
mov
mov
fbld
push
inc
jmp
push
les
or
xchg
xor
pop
imul
add
xchg
push
pop
add
jle
sahf
add
ss
and
add
stos
push
ret
jns
add
sub
test
mov
push
xchg
push
ror
bswap
hlt
add
negl
or
add
push
loope
mov
and
jne
adc
pop
cmpsb
call
mov
push
inc
addr16
cmpsb
jb
gs
jb
pop
and
lods
fwait
add
push
bound
pop
pop
xlat
inc
or
nop
popf
scas
push
insl
xchg
jnp
add
fsubrl
and
mov
arpl
cmp
adc
push
jmp
add
or
jbe
inc
aam
popf
adc
lret
in
lods
adc
out
outsb
and
scas
jbe
mov
mov
or
add
cli
cmpsb
adc
add
add
sbb
popl
ret
add
add
jns
add
lret
sti
push
out
jbe
add
mov
ja
jl
dec
test
ret
push
inc
lahf
xchg
pop
xorl
enter
cmp
leave
mov
adc
stc
insl
lds
int3
push
jg
jecxz
sub
adc
push
arpl
add
jge
pushw
jbe
add
mov
pop
dec
push
inc
jl
pusha
add
jbe
outsb
cmp
jp
imul
imul
add
push
jl
nop
jp
lods
outsb
pop
xor
andb
adc
pop
ds
inc
outsl
insb
pop
gs
push
jg
jae
jge
lret
inc
not
fs
aad
and
popa
mov
add
jno
popf
jp
fstpt
mov
dec
sbb
outsb
dec
arpl
add
dec
add
push
push
data16
cmpsl
addl
mov
add
je
jl,pn
aad
mov
cmp
addb
fs
inc
xchg
mov
or
subl
inc
outsl
frstor
sbb
inc
add
push
nop
ja
jo
out
and
test
ret
xchg
jb
loop
pop
popa
clc
in
add
je
adc
sbb
push
test
jecxz
add
leave
xorb
or
sub
cmp
push
pop
mov
pusha
add
jecxz
pop
mov
push
push
mov
adc
popa
jbe
arpl
fildl
cmp
add
nop
lods
jbe
adc
aas
imul
push
cli
mov
sbb
xor
add
or
pusha
push
cwtl
sbb
and
arpl
cmp
popa
add
rolb
mov
adc
inc
jne
mov
push
mov
out
insb
pop
xorb
mov
fwait
mov
add
adc
enter
add
jp
sbb
jle
add
in
add
daa
cmp
xchg
adc
adc
add
push
jnp
js
fadds
adc
inc
xor
lods
xchg
loope
repnz
out
faddl
in
enter
pop
mov
lock
jae
jp
add
xor
jno
loopne
mov
enter
push
sbb
add
or
mov
das
std
add
lahf
in
xor
dec
push
out
aaa
sbbl
movb
cmpb
inc
push
add
out
mov
leave
or
lahf
bound
mov
xchg
adc
or
cmp
jo
mov
mov
bswap
add
pop
popf
pop
adc
stc
roll
mov
xor
fwait
loopne
push
enter
ret
cmp
pop
jmp
pop
push
mov
psubq
dec
add
cmc
inc
ljmp
jle
dec
sbb
xadd
add
into
and
fisubs
cmp
sahf
dec
pop
mov
push
mov
xchg
xor
and
mov
inc
adc
test
push
rclb
mov
sti
outsb
mov
inc
pop
cmc
pusha
adc
add
into
adc
repz
xor
and
pop
incl
ret
fimuls
idivb
call
jecxz
sub
xchg
pop
lods
cmp
mov
add
outsb
xor
call
jnp
xor
xor
push
enter
cmp
inc
ret
xor
in
dec
add
dec
sub
xchg
push
push
push
jle
clc
push
loopne
ljmp
sbb
out
movsl
adc
xchg
dec
pusha
push
lea
xchg
adc
xor
mov
stos
sbb
jg
add
insb
outsl
and
je
mov
fiadds
mov
jg
pop
add
int
adcb
xor
xor
daa
daa
testb
loop
pop
aas
adc
je
int
fstl
mov
cmp
stos
addb
into
loopne
mov
cmpsb
and
add
bswap
fisubrs
dec
dec
lods
test
and
sahf
lock
sarb
shr
aam
mov
cli
push
and
subl
aad
mov
mov
sub
mov
andl
in
add
rclb
inc
pusha
aam
fcoms
faddl
les
ja
add
inc
lock
dec
stc
loope
lcall
hlt
les
cld
inc
sbb
cmp
sarl
xchg
sbbl
lcall
sbb
and
adc
inc
add
icebp
sbb
mov
cld
jecxz
or
testb
add
aas
adc
cmp
lds
inc
push
xor
add
jnp
cmp
inc
addb
fmuls
mov
cmp
sbb
or
rclb
jp
lods
nop
clc
sahf
jl
jae
add
fldl
pushf
or
aam
imul
mov
leave
das
push
push
pop
rorb
mov
pop
add
jae
scas
fsubrl
fadds
jle
mov
pop
sbb
inc
or
adc
add
cmp
add
xchg
rorl
scas
add
mov
sub
dec
test
and
orb
or
pop
push
cwtl
sub
adc
mov
xor
add
comiss
roll
jne
add
je
outsl
add
and
adc
aad
push
jne
add
das
pop
pop
add
in
pop
in
lret
enter
push
mov
mov
add
push
out
aas
rolb
test
addb
cmp
jne
pop
addb
add
jge
push
push
pop
iret
adc
sarb
insl
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
fsubrl
add
sub
inc
mov
jmp
sub
stos
add
addr16
jl
mov
pop
or
pusha
cmp
sub
cmp
add
mov
or
xor
roll
push
sbb
sbb
push
and
mov
cli
dec
add
or
or
fildll
shl
add
call
xor
loope
and
xlat
push
mov
rcll
cmp
jle
sbb
mov
clc
inc
mov
mov
inc
imul
or
shl
mov
and
dec
lods
andb
mov
inc
fists
in
xchg
push
cmp
pop
outsb
fs
outsl
jne
or
add
scas
xchg
test
enter
call
rorl
hlt
popa
fadds
mov
cmc
xchg
jge
push
call
jg
and
mov
mulb
nop
mov
sar
es
inc
add
cmp
call
cmp
je
jnp
popa
add
xchg
lret
jge
lcall
test
in
je
sub
pop
fiadds
jnp
subb
mov
fadds
call
adc
je
add
dec
push
cmp
mov
or
je
add
stos
pop
repnz
add
mov
xchg
sarb
xor
jmp
fisubl
pop
jae
add
mov
pop
jge
add
cmp
loop
dec
call
push
fiadds
and
pop
clc
mov
push
out
or
lods
pushl
mov
add
xlat
mov
jo
push
cs
cmp
inc
and
lea
pop
pushaw
cmp
mov
lret
add
add
jg
enter
je
pop
cmp
cmp
push
adc
add
push
out
ds
leave
cmpb
out
iret
add
cmp
cmpsb
xlat
pop
or
rol
loop
xchg
outsl
dec
add
testl
add
movl
xorb
dec
imul
inc
mov
or
inc
addb
sbb
je
mov
cwtl
add
mov
xor
sahf
xchg
pop
push
bound
or
or
xchg
in
adc
decl
scas
roll
cs
popa
arpl
and
aad
jo
jle
add
dec
pusha
lahf
push
cld
roll
stc
cmp
addl
mov
dec
fwait
repnz
rorb
or
fs
add
stc
sub
push
mov
inc
sub
fldl
call
les
aad
ljmp
stos
mov
jnp
adc
xchg
adc
mov
pushf
mov
push
dec
sahf
imul
clc
pusha
push
mov
lea
xchg
and
repz
adc
and
or
sbb
nop
cld
sbb
add
cmpsl
sbb
pop
cltd
sbb
adc
shrb
call
test
mov
add
sub
add
jo
push
jle
jae
pop
test
ds
mov
dec
lds
lock
or
jo
pop
inc
jle
jmp
xlat
jo
rclb
fiaddl
add
inc
jmp
lea
scas
cmp
ds
cmp
mov
adc
jae
mov
add
add
imull
fildl
xchg
add
sbb
add
or
fildl
add
jmp
in
add
push
add
fwait
mov
lods
jp
cmp
lea
out
jo
add
add
andb
add
xchg
addl
mov
or
and
lea
or
andb
mov
rorl
popa
xor
mov
cld
inc
add
ret
call
lock
orl
jo
add
push
cmp
fistps
and
sub
sub
add
sub
add
es
adc
call
ret
jne
cmp
jae
test
ljmp
jbe
loopne
nop
in
js
mov
add
ret
add
pushf
lret
inc
or
dec
test
adc
push
dec
shrl
xlat
iret
push
and
inc
pop
fiadds
push
push
add
add
sti
or
inc
sbb
lea
or
sub
jbe
dec
sbb
xorb
add
movl
ret
aad
test
inc
push
mov
xor
jmp
adc
and
inc
inc
pop
add
and
push
ljmp
add
sbb
or
or
xorb
fs
cmp
mov
subb
push
dec
and
inc
inc
dec
xchg
lahf
add
lret
jb
adc
test
xor
mov
add
ss
add
sbb
push
mov
lea
add
add
cmp
and
pop
sbb
push
loope
jnp
add
cmp
pop
xchg
push
and
sub
sbbb
movsl
ret
imul
mov
or
cmp
outsl
pop
test
add
pushl
icebp
nop
jle
stos
add
sbb
loopne
fisubl
add
or
pop
loope
pushf
jle
push
sbb
cmpsl
in
dec
shlb
fsubs
push
js
dec
add
xlat
nop
add
xor
jns
fnstsw
add
adc
push
mov
lods
and
sbb
pop
add
sub
sbb
push
cmp
dec
xor
addw
inc
lret
adc
xchg
cmp
mov
add
lock
or
cmpsl
add
mov
xchg
std
imul
adc
push
sbb
mov
inc
xchg
lret
or
das
mov
add
adc
clc
mov
mov
jg
imul
loope
icebp
paddusb
mov
mov
or
add
add
lret
add
daa
dec
push
sub
sub
add
mov
xorl
daa
ja
popa
add
add
fyl2xp1
pop
shlb
mov
movb
push
xor
fwait
cmp
dec
add
jns
sbbb
leave
iret
adc
sarb
add
call
rcl
mov
pop
add
int
into
push
dec
fstps
cli
jmp
enter
fs
sub
pop
rclb
add
cmp
inc
cmp
sub
cmp
test
dec
es
dec
add
ljmp
in
add
ret
lods
mov
and
mul
add
pop
adc
dec
mov
xchg
pop
mov
ret
pxor
fisttpll
in
mov
jne
xchg
add
pop
aam
dec
sub
adc
dec
push
xlat
add
test
or
mov
xchg
xchg
sar
dec
in
mov
and
fdiv
lret
add
inc
fstl
pop
or
daa
test
and
nop
jbe
push
testl
mov
stos
loope
pusha
push
push
pusha
push
and
add
lahf
clc
jge
stos
inc
imul
mov
hlt
ja
add
js
inc
je
dec
fcomp
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
push
test
inc
inc
mov
add
sbb
in
add
rcrb
je
jbe
test
xchg
xchg
jmp
ret
sub
lock
leave
jecxz
cmp
call
inc
out
add
push
call
add
ds
imul
push
gs
roll
dec
add
push
pop
jb
movhlps
push
jmp
xor
mov
gs
push
hlt
mov
and
repnz
enter
add
das
out
daa
jl
scas
add
cwtl
jo
test
push
or
outsb
add
cmp
test
or
xchg
mov
aam
add
inc
lods
push
popf
jb
sub
jnp
cmp
cmpsb
add
cmp
add
imul
add
je
xchg
out
sub
inc
mov
and
add
dec
push
add
cmp
jbe
ds
sarl
int3
or
mov
add
stc
cmp
sbb
sub
arpl
cmove
push
push
pusha
or
iret
push
push
sahf
add
dec
push
dec
jge
les
jmp
xchg
rclb
rclb
jle
sbb
jnp
cmp
cmp
aad
push
mov
mov
mov
xlat
mov
sub
cmpsb
imul
call
fs
ret
rcll
scas
cmp
and
mov
mov
cmpsl
and
loopne
push
mov
xchg
push
arpl
inc
iret
pop
mov
add
dec
pop
mov
sbb
add
loop
mov
or
adc
ret
add
xchg
ja
mull
cmp
sbb
adc
mov
xchg
ret
loop
clc
je
add
sub
dec
jb
adc
adc
fildll
sarl
je
push
cmc
xchg
inc
push
cmp
aas
xor
fisttpll
or
xchg
push
adc
mov
repz
jmp
xor
pop
mov
pop
or
shll
xor
scas
inc
out
inc
add
xor
int
sarl
loopne
scas
mov
adc
inc
movsb
jo
stos
dec
leave
add
pop
or
lock
negl
add
and
push
test
rorb
xchg
test
into
test
push
add
jbe
popf
pop
mov
push
cmp
xor
inc
add
or
movb
cmp
adcb
push
test
sub
ljmp
sub
jo
es
aas
dec
push
add
pop
clc
jae
incl
sbb
je
mov
sub
jbe
sub
call
mov
sub
pusha
xorb
cwtl
out
mov
test
jb
adc
and
movsb
lock
pop
add
add
pusha
xorb
mov
mov
jmp
enter
cld
pushf
pop
movsb
cmp
add
mov
add
addb
or
leave
and
adc
pusha
scas
fstl
inc
dec
inc
or
mov
dec
xorb
stos
ret
jae
inc
imull
dec
and
xchg
mov
and
in
test
ja
jmp
divl
daa
jb
aas
lcall
popf
xchg
push
add
leave
ljmp
sbb
es
sti
add
lahf
stc
inc
add
loopne
ret
add
pop
aam
or
xor
call
add
leave
cmp
lea
or
push
pmulhuw
ret
dec
jbe
pop
add
push
mov
or
repnz
jmp
add
xchg
shlb
jmp
rolb
push
xchg
loop
push
xchg
stos
shlb
int
and
popa
leave
xchg
inc
inc
mov
dec
add
sbb
jge
adcb
jb
push
dec
mov
add
pop
or
inc
cmpl
jmp
jge
pop
xor
xchg
je
add
and
mov
movsl
popf
adc
or
add
and
sub
add
lea
inc
add
repz
stos
daa
mov
lock
add
xor
out
mov
add
incl
mov
and
mov
add
ljmp
sub
adc
mov
aam
push
addr16
add
int3
call
enter
mov
push
sbb
push
dec
sbb
push
in
mov
cwtl
lock
inc
mov
sub
cmp
xchg
pop
xchg
sbb
mov
fmull
cs
jbe
add
and
rclb
xchg
add
hlt
pusha
cltd
xchg
push
add
fbld
leave
imul
add
xchg
gs
mov
dec
cltd
dec
xor
mov
mov
in
add
mov
jo
popa
dec
cmc
pop
add
aas
push
and
push
cs
sub
jno
pop
pushl
jge
arpl
add
ja
pop
add
sub
cmpsl
or
or
jbe
or
hlt
add
loopne
cmp
fidivl
out
or
scas
cld
cmp
pop
mov
cltd
rcll
pop
aad
loopne
jl
enter
sarl
enter
bound
jns
jp
addb
popa
loope
out
and
adc
push
mov
enter
test
add
and
les
std
mull
cmpsb
scas
cmp
pop
jg
inc
mov
mov
push
add
lret
call
add
jae
pop
mov
test
pop
lahf
jo
inc
or
push
dec
add
decl
mov
sub
sub
sub
fwait
jo
add
and
lret
ja
or
cmp
je
mov
mov
mov
sbb
rolb
mov
gs
add
jge
adc
sub
or
into
shlb
add
jmp
add
add
lahf
jb
jae
add
jge
cld
rolb
add
ss
jb
xor
push
inc
add
sub
add
adc
pop
jne
or
rolb
dec
mov
ds
add
daa
push
cmpsb
adc
cmp
pop
test
push
or
dec
out
mov
mov
addl
xor
add
ljmp
lods
push
movsb
nop
dec
sbb
or
add
aam
xchg
push
push
or
push
dec
aad
cld
dec
sub
inc
pusha
add
fs
jl
push
fldenv
cmpsb
adc
inc
mov
pusha
mov
jae
mov
sarl
addl
mov
call
add
mov
sbb
jne
add
adc
mov
in
push
xchg
or
sbb
mov
pop
xor
mov
in
inc
or
out
testl
cmc
test
sub
adc
aam
jg
xor
mov
sbb
adc
mov
and
cmp
xorb
insb
add
ja
sbb
rorl
cwtl
xlat
cmp
xchg
orb
fucomip
cwtl
cwtl
cli
add
jbe
mov
cmp
sbbb
inc
add
dec
xor
xchg
imull
and
roll
clc
pop
xchg
mov
add
out
cwtl
mov
mov
int3
cmp
cmp
andb
jnp
fcomps
in
pop
xor
sub
sub
bswap
jle
push
pop
imul
dec
flds
bound
and
rolb
cmpb
pop
aas
inc
and
test
pop
fisubrs
sbb
add
cmpsl
xchg
pushf
add
push
test
mov
pop
nopl
lret
into
jns
sub
mov
jl
mov
inc
mov
ret
hlt
decb
cmp
arpl
insb
add
orb
cmpsb
dec
pop
clc
shrl
stc
cmp
adc
fstpl
aam
lods
popl
dec
pop
lret
or
and
mov
push
push
popa
jae
xorb
ss
outsl
dec
add
dec
outsb
je
and
testl
push
and
cmp
arpl
int3
iret
pop
sahf
dec
popa
outsl
and
ds
mov
xor
in
jl
push
add
in
pop
push
mov
addl
inc
xor
push
xchg
or
jle
add
jmp
push
add
or
lret
icebp
xlat
push
shrl
in
mov
jne
call
jmp
inc
add
jmp
iret
les
notb
lahf
pop
sub
je
xor
shl
add
inc
mov
cmp
push
sbb
mov
dec
dec
test
fstpt
idivb
je
adc
adc
mov
sbb
xor
aad
insb
sub
cli
add
inc
xlat
cmpsb
mov
cld
push
and
jl
and
add
cmp
rol
in
add
jae
mov
pop
xchg
or
jp
inc
inc
add
gs
mov
dec
add
push
sub
mov
mov
arpl
or
jbe
cmp
cltd
mov
inc
add
cmpl
or
sub
enter
push
sbb
sarb
repz
adc
and
or
lea
call
pop
or
cmp
xorb
jp
je
fcompl
inc
fcom
clc
adc
call
mov
fiaddl
adc
dec
add
hlt
test
fcoms
push
imul
xchg
dec
adc
add
fidivrs
rolb
sbb
pushf
aad
call
lds
cmpsb
add
jecxz
imul
add
scas
sbb
pop
cltd
mov
in
mov
or
or
xor
and
push
jmp
data16
aaa
add
push
adc
adcl
movsb
sub
fmuls
sahf
sbb
inc
sub
lahf
adcl
lea
mov
mov
test
mov
outsl
outsb
clc
mov
cltd
jmp
jge
add
add
or
cmp
add
jmp
and
inc
pop
dec
stc
inc
add
mov
add
add
cltd
mov
aas
mov
jle
add
aam
lcall
cmp
mov
inc
pop
fwait
roll
leave
push
pop
or
pop
sete
add
dec
lods
loop
je
adc
add
xchg
paddq
movsl
fdivrs
call
clc
filds
sbb
pcmpeqb
push
mov
pop
lahf
icebp
pop
shrb
dec
lock
aaa
push
sbb
and
push
dec
xor
cmpsl
nopl
xchg
mov
movb
notl
nop
fisttpl
movsl
mov
incb
and
outsb
sub
push
xor
sbb
lock
or
add
mov
cli
call
add
mov
add
loopne
or
ljmp
es
adc
add
out
pop
push
or
outsl
fwait
ret
mov
std
add
and
fiaddl
add
push
pop
and
data16
sbb
xlat
addb
ficompl
ret
mov
mov
push
testl
pop
jg
aas
add
adc
and
cmp
sbb
inc
sbb
ja
cld
sub
add
stos
loope
aaa
pmaxsw
dec
add
dec
loopne
jb
cli
dec
add
ret
jl
inc
cmpb
jle
in
pop
jmp
cld
or
pop
adc
add
add
xor
push
ret
add
out
dec
add
sar
imulb
add
add
pop
loopne
pop
sbb
sbb
or
jo
dec
rolb
andb
rcr
or
aaa
incl
add
in
adc
loopne
mov
pop
pop
stos
daa
hlt
aas
incb
add
cli
xchg
lea
stc
cmc
add
adc
add
lods
dec
sub
mov
das
add
in
push
or
icebp
pushf
mov
cmp
addb
sub
fsubrs
add
imul
sub
lock
stc
gs
lods
sar
ljmp
cmp
sub
push
xchg
xorl
in
pop
nop
adc
andb
xchg
xchg
scas
sub
arpl
xchg
add
sbb
cs
sarb
or
add
add
cltd
or
mov
fwait
andb
mov
add
sbb
or
mov
add
orb
frstor
rolb
fld
test
scas
mov
sub
pop
ss
mov
xor
inc
cmp
xchg
or
and
test
add
sti
les
push
add
fstpl
add
xchg
pop
les
das
mov
je
leave
adc
scas
lods
xchg
jg
add
mov
adc
fimull
enter
enter
add
xchg
sbb
loopne
add
mov
push
mov
lahf
push
les
mov
rolb
imul
in
scas
rol
add
pop
popf
js
gs
add
call
lahf
lcall
push
mov
adc
lods
ds
pop
ss
inc
sbb
lret
mov
mov
lcall
in
add
adc
fstl
cmpsb
mov
xor
jnp
repnz
pusha
icebp
incb
ret
add
cld
or
inc
addl
pop
pop
iret
push
add
fwait
dec
imul
mov
pop
mov
inc
inc
out
icebp
es
mov
mov
daa
jo
testb
sbb
pop
xchg
jge
cmp
hlt
push
add
icebp
fldl
xor
movsl
cmp
push
sub
iret
and
jle
loopne
aad
jge
addl
sub
lea
and
movsb
push
cmp
inc
sub
sbb
inc
sbb
xor
add
mov
jle
aam
scas
ss
pop
pusha
shrb
or
aaa
add
testl
jmp
add
pop
cmp
add
test
fsubs
imul
mov
ud1
cmp
lea
dec
sub
popf
add
mov
mov
xor
sub
cmp
or
mov
mov
mov
enter
ret
lock
mov
cmp
pcmpeqw
adc
fdiv
add
jecxz
jle
mov
add
aaa
shr
loop
cmp
and
or
fcoml
jl
rcll
insb
adc
jns
add
cmovp
cmpsb
or
mov
nop
aam
bnd
pop
lahf
pop
stos
and
mov
out
lret
jb
aam
stos
add
xor
push
xlat
inc
or
shr
inc
xchg
movmskps
sbb
and
test
in
fmuls
stos
roll
flds
cltd
iret
adc
rclb
sbbl
mov
andb
cmp
and
and
nop
popf
lcall
dec
add
into
cld
push
mov
fists
mov
add
popl
stc
xor
adcl
aam
add
rorb
inc
xor
lods
add
sub
inc
pop
push
ljmp
mov
dec
pusha
add
fdivl
lcall
lret
loopne
je
adc
or
add
dec
sbb
es
add
ljmp
add
lea
rsqrtps
movsl
arpl
mov
add
popa
sbb
cmp
and
out
add
shr
add
movl
cmpsb
pop
mov
xchg
sbbb
sbb
sub
jle
movsl
add
dec
push
pop
dec
pusha
pop
sarb
add
or
hlt
add
pusha
or
adc
pop
daa
sbb
aam
add
pusha
jo
andb
add
xchg
add
and
add
mov
lret
xorb
or
or
or
xor
adc
enter
push
mov
push
mov
push
cmp
jb
push
push
add
leave
sbb
add
jo
xchg
xor
add
shl
sbbl
lock
add
add
das
pop
je
out
pop
not
add
jb
daa
inc
adc
add
pusha
ftst
pop
mov
iret
and
sbb
fwait
popa
mov
pop
pop
mov
stos
lods
jmp
xchg
add
xchg
imul
jg
dec
mov
cwtl
sbb
mov
sub
sbb
mov
stos
pop
mov
test
xchg
and
add
push
or
cmp
mov
xchg
or
cmp
lds
mov
xchg
inc
add
ret
adc
pop
or
jno
xor
mov
push
daa
adc
xchg
loopne
rorl
add
add
sbb
jno
pusha
add
mov
jle
loopne
add
add
cmp
cwtl
jge
add
and
jl
mov
cltd
push
mov
pushf
idivb
rcll
into
and
add
mov
mov
int3
sbb
add
fstl
and
cwtl
lods
cli
lret
and
add
loope
fmulp
call
add
dec
test
sbb
lds
or
sub
xchg
inc
add
pushl
add
pop
xor
cwtl
rcrb
and
dec
addb
leave
add
mov
shll
xchg
and
ss
mov
or
xchg
cmp
xorl
cmp
mov
add
add
add
in
push
jo
sub
jb
movsb
cmp
mov
inc
mov
add
bound
loope
xchg
dec
pop
pause
in
outsl
xor
jge
pop
stc
roll
daa
js
arpl
add
mov
cmp
pop
and
and
xchg
sub
enter
mov
add
mov
inc
push
sub
or
xchg
icebp
jmp
add
xor
stos
cwtl
mov
xor
or
lock
and
add
or
fadds
aaa
dec
jns
and
int
mov
ret
xor
pop
call
cs
add
les
jmp
sub
imul
aad
inc
mov
jo
nop
insl
add
mov
std
add
jp
shl
add
fiadds
clc
cmp
inc
add
push
push
aaa
inc
movsb
inc
mov
sbb
jo
mov
xor
or
adc
inc
rolb
add
add
jmp
push
add
push
inc
pop
add
lahf
jne
mov
leave
add
or
push
cwtl
push
inc
inc
mov
mov
shl
movsb
clc
pop
push
pop
or
pusha
scas
add
dec
cli
add
jl
add
daa
and
sub
cmp
sub
lea
push
add
pop
int
aad
shll
add
push
push
xchg
push
add
xor
rorb
adc
add
adc
lea
mov
xchg
push
mov
movsb
int3
xchg
or
mov
xor
mov
add
stc
testb
fcom
mov
nopl
xor
inc
jmp
jne
aas
sub
pop
pop
lods
fdiv
repnz
cmp
rorb
and
add
pusha
dec
sub
ljmp
xchg
or
sub
push
pop
in
add
ja
jno
movb
and
inc
dec
xchg
cmpsl
in
rolb
lret
and
popf
or
add
rorb
xchg
xchg
inc
sbb
xchg
lock
andl
adc
mov
lods
das
or
jb
jnp
dec
sbb
cmp
add
rclb
cld
mov
adc
dec
sub
testl
sub
aas
add
mov
in
mov
int3
jo
add
arpl
mov
push
fadd
addr16
popa
push
sbbb
xchg
push
jae
add
fisttpl
push
add
stos
xor
jae
cs
and
or
rcrl
mov
adc
pop
icebp
out
inc
mov
dec
jg
add
mov
fwait
jb
xor
add
adc
sbb
adc
mov
das
jle
push
into
cmpsl
xor
int3
int
iret
ror
ljmp
imul
sub
mov
add
pusha
ja
pop
les
aas
xchg
scas
push
xchg
cmp
cld
cli
add
incl
jb
jno
add
pop
add
push
add
cs
and
add
sub
or
mov
mov
daa
dec
xor
mov
clc
add
xchg
mov
iret
jns
sub
or
out
sbb
int
inc
cmp
and
cwtl
jb
add
std
add
sbb
jmp
pop
xorl
sub
inc
inc
mov
in
ret
movsb
mov
sbb
add
test
add
add
dec
sbb
je
loop
mov
jmp
sbb
enter
pop
pop
mov
pop
push
in
fldl
bound
nop
push
adc
mov
add
cmp
loopne
jae
xchg
sbb
inc
roll
push
verr
fisubl
jnp
xchg
and
adc
or
sub
cld
imul
outsb
sub
add
icebp
testb
subl
jae
add
int
dec
or
lret
movsb
add
fnstsw
popa
cli
fcoml
adc
or
lret
mov
push
inc
orl
pushf
das
add
loopne
or
shlb
mov
mov
jo
push
out
test
xchg
fs
outsb
xchg
addr16
add
and
add
push
lods
ljmp
push
pusha
call
add
or
je
xchg
bound
shlb
ret
add
mov
clc
rolb
aas
push
cmp
ret
pop
push
sub
add
lods
sbb
repnz
push
jnp
mov
or
rol
imul
js
pusha
inc
pop
inc
adc
aad
mov
insb
jno
dec
add
das
mov
and
xor
and
xor
jg
cmp
stc
pushf
bswap
or
jge
xchg
adc
data16
pop
flds
je
lcall
lock
push
loopne
and
add
loop
adc
add
and
das
cmp
inc
verw
or
adc
mov
push
push
into
aas
cmp
movsl
xor
mov
xchg
inc
test
sbb
fiaddl
add
push
or
mov
in
add
mov
sub
add
inc
jp
fimuls
lds
clc
jge
test
inc
sbb
mov
sbb
sbb
xchg
into
push
inc
sbb
add
or
test
scas
cmp
mov
mov
add
or
pop
nop
hlt
dec
push
js
add
ja
sbb
negl
sub
add
es
xchg
sbb
sbb
push
inc
jno
inc
adc
jg
in
adc
xchg
aas
jl
push
and
add
push
or
notb
hlt
jmp
sub
pop
sti
and
or
inc
pop
sub
loop
cmc
addb
pop
jge
or
push
add
xchg
add
leave
call
pop
inc
or
stos
push
and
movsl
add
mov
cltd
add
aas
shlb
dec
ret
jg
mov
add
flds
xchg
xor
clc
jecxz
add
shl
jmp
addb
lock
pop
jle
lds
hlt
fadd
mov
adc
cmp
xor
and
add
icebp
pop
xchg
hlt
xchg
add
mov
sbb
lods
jle
pop
or
ljmp
xor
and
dec
jnp
adc
mov
je
push
inc
inc
pusha
jle
pop
push
xlat
pop
ss
lock
sub
pop
in
add
popa
jae
jo
call
mov
sbb
xor
rorb
sub
sahf
push
sub
outsb
dec
add
cld
add
mov
mov
pop
cmpl
jmp
cmpsl
cld
sti
add
bnd
mov
and
xchg
add
sub
popf
and
adc
mov
jp
ret
inc
jmp
xchg
mov
mov
jecxz
mov
add
xchg
out
jl
add
aad
add
lods
add
mov
xor
clc
adc
dec
ljmp
xchg
add
xor
jl
add
hlt
rcll
and
movsl
clc
data16
insb
cmp
cmp
std
xchg
ret
or
mov
test
push
lods
stc
fsts
aam
ds
add
push
nop
jmp
add
fisttps
push
adc
stc
add
jae
lds
das
in
popa
movb
sub
or
cltd
cmp
ret
testl
xlat
jecxz
enter
xchg
notb
aam
icebp
mov
movsl
jae
mov
add
or
and
add
and
add
and
add
sbbl
cld
add
cs
not
inc
mov
push
test
sbb
and
jle
in
or
push
jne
inc
jg
shll
bnd
mov
pop
cmovg
pop
fildl
test
fwait
jmp
cmpsl
gs
adc
repnz
test
push
mov
mov
dec
or
movb
cmp
ds
pop
sub
or
mov
and
jnp
loopne
cwtl
pop
add
negb
mov
jbe
add
jno
das
inc
add
add
or
rcr
in
loopne
sahf
ja
dec
daa
mov
add
test
jb
jae
push
mov
incl
fcomps
fistpl
lods
add
mov
fmulp
xor
stos
jo
mov
mov
push
xchg
mov
and
lds
add
das
aam
and
add
test
adc
testb
mov
dec
rorb
mov
mov
in
clc
jnp
jns
add
sub
add
int3
pshufw
adc
nop
int
cld
mov
cwtl
pop
mov
addl
jne
inc
add
inc
clc
and
add
inc
data16
cltd
mov
xchg
push
add
daa
cmp
push
rclb
sbb
or
mov
and
add
push
mov
jo
add
pop
cs
rcl
or
cltd
add
sbb
addb
mov
test
sub
add
push
stc
push
and
xchg
inc
cld
adc
add
orb
adc
sub
pop
or
and
std
mov
mov
xchg
inc
inc
test
call
cmpb
pop
ret
fildl
xor
cmp
add
or
ja
add
inc
xchg
out
pop
sbb
pusha
and
outsb
jb
pop
imul
xor
push
or
rcrb
add
lock
sti
daa
and
sub
add
or
inc
sub
mov
dec
ds
mov
ret
ljmp
mov
push
xchg
cmpsl
jl
add
add
and
shll
call
nop
add
cs
jne
les
inc
dec
mov
adc
in
imul
add
jg
pop
add
in
and
add
fs
addl
outsl
je
xor
mov
aam
int3
pop
push
pop
inc
mov
adc
mov
dec
lahf
push
mull
addb
and
ds
sbb
jo
mov
xchg
pop
pop
enter
repz
lcall
dec
aas
dec
sbb
jmp
sbb
or
sbb
inc
xchg
shrl
jmp
pop
mov
pop
out
cmp
or
cmp
pop
mov
xchg
push
filds
sbb
dec
jl
xchg
add
add
shll
dec
int3
inc
movsl
and
repnz
xchg
add
lea
jo
rclb
in
push
cltd
rolb
or
sub
mov
pusha
rclb
mov
inc
mov
repnz
icebp
out
sbb
xor
mov
aad
push
add
dec
mov
dec
inc
js
jnp
mov
faddl
imul
out
adc
add
addl
lret
add
or
sub
leave
xchg
push
push
add
aaa
xchg
cmp
shll
dec
jle
jb
add
cmp
je
stos
push
jecxz
and
pop
xchg
add
sbb
dec
mov
mov
xchg
push
pop
pop
jae
rclb
into
or
loop
push
add
sub
sbb
test
add
mov
adc
fs
or
cld
test
cmp
lock
mov
or
test
jp
cmp
mov
test
push
push
adc
xor
fildl
inc
iret
pop
mov
sbb
mov
addb
imul
incb
xor
sbb
push
jae
adc
adc
add
xor
cmc
test
mov
imul
call
gs
cmpl
pop
ret
or
loop
add
or
mov
aad
shlb
stc
jne
add
cmp
pop
stos
nop
shrb
adc
popa
xchg
sub
hlt
in
cwtl
fiadds
loope
pop
sub
inc
inc
add
mov
sarb
mov
test
add
test
je
or
jne
inc
add
aam
lcall
or
nop
add
sub
push
ljmp
xchg
arpl
add
das
jmp
fcomp
test
clc
add
cltd
mov
inc
xor
or
xorb
sbb
jo
add
je
pushl
or
push
rolb
inc
inc
mov
add
mov
xchg
mov
out
repnz
xchg
pop
mov
pusha
dec
jmp
pop
fcmovne
adc
mov
cmpsb
ret
sbb
sub
xlat
mov
in
add
cld
add
add
or
dec
xchg
pusha
add
or
or
inc
pop
or
adc
ret
add
dec
or
or
add
add
std
xor
rcr
adc
jmp
cli
mov
mov
add
nop
daa
ja
add
xchg
xlat
xchg
add
add
add
lret
or
adc
add
fsubrs
dec
cmpsb
leave
push
add
xlat
out
dec
mov
sbb
dec
adc
xchg
push
adc
adc
pop
andb
mov
into
inc
pop
jo
lcall
xchg
fsubrl
ret
xor
mov
fstpt
push
mov
lret
or
xchg
add
adc
or
iret
out
lock
mov
and
add
insb
dec
fs
stos
lock
ret
add
push
adc
push
cmp
pop
sti
add
into
repz
sub
add
cmp
add
mov
andb
incl
jns
gs
push
fnstcw
in
jl
aaa
xor
std
add
lods
jne
fcmovnb
dec
gs
add
or
and
lea
xchg
mov
or
add
pop
mov
pop
sbb
clc
test
push
add
rorb
add
and
out
in
lahf
and
add
stc
xchg
dec
sbb
divb
mov
insb
push
push
add
fisubrl
push
mov
dec
jmp
fcmove
mov
hlt
out
imul
mov
flds
nop
shlb
ret
and
inc
pop
add
jae
jmp
pusha
or
add
mov
clc
ds
cmp
push
les
loopne
sub
sub
xchg
xor
in
sbb
incl
mov
pop
xor
jae
pop
in
data16
sarl
add
adc
dec
push
pop
cld
in
mov
fdivrs
mov
add
cmp
push
jl
add
mov
rolb
or
adc
sbb
or
jl
addb
fmull
repz
call
loope
xor
add
fs
enter
lret
add
add
xor
adc
ds
add
inc
and
sbb
add
inc
rclb
test
fidivs
repz
mov
add
daa
js
jno
cmp
xchg
loop
xlat
jmp
fcomip
add
imul
push
jo
adc
jp
mov
mov
mov
sbb
sub
dec
sub
fcoml
fcoms
mov
pop
inc
push
out
negb
cmp
inc
aam
add
in
or
inc
or
add
dec
test
dec
adc
lods
xor
and
test
xchg
or
mov
cld
cmpb
cltd
jp
xchg
add
out
sub
dec
dec
add
mov
fdivrs
mov
fisubs
out
nop
cmpsl
cwtl
jnp
sub
fdivs
adc
add
call
outsb
hlt
mov
mov
inc
je
sub
es
or
sub
add
mov
jmp
push
xor
int3
ja
fs
xor
or
fadd
add
and
rcll
in
out
mov
enter
jecxz
movsl
jge
inc
call
and
push
add
or
pmullw
add
sahf
inc
dec
fisubs
filds
into
test
or
in
sub
xor
hlt
enter
push
pop
movsl
ja
add
mov
and
push
and
inc
and
sbb
push
cmp
inc
cmp
jne
rolb
and
call
add
test
incl
and
push
out
add
mov
jbe
add
lock
or
dec
mov
xchg
popa
jae
ja
jb
in
add
cld
mov
sub
insb
rorb
adc
jae
mov
mov
jb
out
daa
and
addr16
orl
repz
add
pop
faddl
test
aam
inc
adc
aad
cli
loop
add
mov
mov
pop
fiadds
xor
cwtl
rorl
outsl
pop
sbbb
cmp
rcll
xchg
sbb
add
dec
dec
add
mov
mov
fs
xchg
pop
je
dec
mov
cmpl
push
mov
adc
pop
sub
xchg
xchg
pop
add
inc
add
cmp
jno
add
adc
lods
and
dec
add
in
push
add
jne
cmpsb
adc
dec
nop
lods
dec
je
jo
add
lods
inc
push
pop
cltd
pop
dec
loopne
pop
add
xchg
icebp
mov
add
mov
rcrb
std
or
test
and
pusha
out
xor
xor
int
movsb
sbb
jecxz
push
sbb
adc
add
add
add
jo
pop
push
xor
add
int3
mov
shrb
or
rol
popa
mov
roll
dec
bound
pop
push
popa
dec
jb
add
in
call
aaa
push
adc
adcl
jo
dec
xchg
add
mulb
pop
daa
dec
and
sbb
pop
add
mov
out
mov
cltd
ror
xchg
and
xchg
and
outsl
int3
cmp
bound
mov
add
inc
pop
cs
push
add
mov
movb
xor
xor
mov
and
ror
fadds
jecxz
adc
add
addb
xor
dec
and
int3
xchg
cli
mov
pop
jne
dec
jmp
add
iret
cli
stc
in
add
scas
xchg
call
add
lcall
add
adc
arpl
inc
adc
jns
push
imul
push
mov
std
jns
insl
sbb
arpl
jmp
mov
fstps
sbb
inc
psubw
mov
mov
mov
daa
mov
sbb
sbb
leave
xor
sbb
ret
imul
loopne
in
cmp
fcmovbe
aaa
mov
jl
call
dec
sbb
push
test
stos
addb
adc
add
mov
jo,pt
iret
shl
out
hlt
enter
inc
or
lock
and
aas
inc
jne
lea
mov
adcb
jg
fmuls
imul
das
sbb
fstsw
cmp
test
and
add
cmp
adc
mov
shrb
clc
pop
ja
add
sub
dec
pop
fldt
adc
dec
jge
add
and
xchg
cs
sbb
cmpsb
ljmp
mov
and
xchg
xchg
call
aad
sbb
clc
xlat
mov
jl
inc
dec
jecxz
jle
mov
roll
bound
sbb
adc
inc
dec
jl
lahf
push
add
and
cld
test
add
dec
mov
add
movsl
movb
pop
jge
and
add
jbe
add
stos
imul
std
xor
dec
push
testb
rcrb
push
add
cmpsb
enter
adc
add
pop
dec
add
mov
add
pop
aam
pop
lcall
scas
jle
jno
adc
popf
jns
or
sbb
data16
outsb
and
sbb
cmp
inc
push
inc
mov
adc
ds
jge
mov
inc
mov
sub
push
fidivrl
subl
push
stc
jecxz
mov
sub
call
xchg
add
loopne
xor
or
and
mov
rorl
lahf
mov
pop
ljmp
popa
call
sarb
inc
call
addr16
adc
les
clc
or
ja
sbb
outsb
mov
mov
jl
mov
gs
movzwl
add
cmp
or
cmpl
pop
add
das
loopne
inc
xor
add
in
nop
xchg
shll
pop
lea
out
lret
push
jecxz
clc
mov
sbb
jmp
hlt
popl
sub
add
pop
test
fs
test
lods
call
mov
push
hlt
push
mov
jmp
into
or
jle
add
icebp
add
sbb
ret
sbb
add
cmpb
adc
or
mov
pop
inc
add
mov
mov
and
push
addb
or
jns
loope
xor
add
mov
cwtl
push
add
add
add
fmuls
xchg
adc
mov
add
popl
sub
adc
push
sbb
pusha
mov
inc
xchg
aaa
in
lcall
mov
push
decl
push
hlt
cwtl
daa
lcall
push
es
test
jo
orb
xchg
xor
inc
adc
add
adc
iret
add
push
cmp
movsl
pusha
mov
enter
js
xor
push
fsts
ret
add
adc
add
fcoml
push
xchg
sub
sbb
add
shrl
sub
sub
cmp
add
les
add
dec
add
in
fmuls
scas
fsub
faddl
fucom
shl
jecxz
fisubrs
in
pop
jmp
lods
adc
push
or
test
aad
pop
xor
aam
mov
jae
jns
ljmp
adc
add
pop
scas
dec
ljmp
xchg
stos
testb
aaa
sbb
push
add
iret
aam
ljmp
in
lock
daa
xchg
jmp
adc
xchg
andl
insl
add
push
outsl
fmul
xchg
rolb
in
add
call
and
int
cmp
call
insb
inc
stc
add
push
loopne
jno
add
out
mov
jo
mov
addb
testb
ljmp
pop
add
loop
scas
nopl
icebp
call
mov
jnp
pop
pcmpeqd
add
cmc
es
arpl
mov
add
mov
nop
inc
pop
jl
sbbb
insl
jo
adc
imul
push
add
adc
jmp
push
insb
imul
scas
sarb
xchg
ljmp
ret
in
push
stos
fmull
dec
cmp
push
jb
adc
mov
xchg
orb
cwtl
ljmp
mov
add
cmpsl
popf
pop
push
add
add
sbb
pop
or
pop
pop
push
sbb
aaa
push
push
out
add
jmp
daa
inc
add
test
xor
mov
popf
in
add
jno
movsb
jne
adc
add
shlb
mov
mov
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
in
iret
or
add
cmc
push
icebp
int
in
testl
data16
pop
add
cs
jmp
out
fisubl
push
push
mov
lahf
dec
fcmovnu
pop
add
add
std
xor
add
pop
movsl
cmpsb
outsb
push
mov
lods
pushf
mov
and
loopne
jmp
ljmp
add
je
jmp
mulb
dec
add
aaa
cmp
lock
mov
xor
ret
jmp
dec
mov
test
xor
xchg
jns,pt
les
shlb
mov
mov
mov
mov
xchg
sub
push
sbb
add
jo
push
in
loope
push
pop
push
popa
mov
push
mov
jno
xor
ds
pop
std
pop
xor
int
pop
lea
mov
xor
lcall
subl
inc
mov
sbb
add
mov
or
add
cmpb
mov
js
add
pop
cltd
push
pusha
pop
xor
jbe
stc
cmc
pop
mov
adc
fiadds
mov
add
sbb
cltd
mov
xchg
aas
mov
jmp
test
andb
fnstenv
in
adc
add
test
jns
jge
xchg
cwtl
xchg
test
xchg
xchg
push
pop
dec
dec
lods
push
pop
shr
mul
jl
add
xor
pop
test
sbb
jmp
jae
ror
push
mov
ficoms
xor
sbb
jecxz
pop
add
sbb
or
adc
jge
stos
pop
pushf
push
cwtl
lret
out
jo
outsb
fs
add
popf
adcb
cmpsl
pop
jmp
icebp
lock
mov
sbb
dec
inc
cmpl
popa
repnz
sahf
dec
add
cld
cmp
and
cmp
xor
dec
scas
jmp
out
jmp
jne
int
push
test
movsb
in
mov
es
ds
popf
addb
add
jmp
test
mov
cmp
cmp
shrb
add
xchg
fiadds
mov
mov
gs
imul
add
rclb
pop
sbb
or
cmpb
push
push
iret
flds
pop
test
sahf
lods
incb
lcall
fadd
lret
loop
movl
sahf
add
movsl
mov
add
daa
insb
jbe
adc
mov
mov
loop
gs
pop
add
fstl
mov
jl
nop
test
fsubl
add
adc
clc
xchg
xor
fwait
pushf
dec
push
test
add
jg
loope
add
loop
cld
push
arpl
mov
xchg
aad
pushf
rcl
inc
rol
les
jae
xor
mov
mov
add
mov
adc
out
pop
add
adc
ja
repz
rcrl
loop
add
add
mov
inc
add
pusha
psllw
enter
xchg
mov
into
addb
mov
stos
or
pusha
sub
pop
mov
call
rcl
aam
pop
aad
fdivrs
add
jecxz
mov
ret
dec
add
xchg
xchg
jne
sti
mov
cli
pusha
stc
or
clc
fs
cld
adc
fnstcw
jno
add
fadds
popa
xchg
sub
or
out
out
mov
leave
add
sub
xchg
or
xchg
daa
imul
or
mov
sbb
jbe
mov
xchg
add
leave
lret
mov
and
mov
add
inc
ja
js
dec
add
in
ret
or
mov
popa
add
lea
add
mov
in
out
fldl
adc
jmp
cmp
cmpsl
push
mov
mov
incb
pop
lret
or
cmp
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jge
add
cmp
add
pop
je
pushf
addb
sbb
inc
inc
add
mov
cmp
mov
adc
pop
add
mov
lods
out
ja
and
push
mov
mov
add
mov
jnp
add
mov
xor
mov
adc
mov
test
adc
loopne
sbb
xor
jbe
jp
jae
sub
or
cwtl
xor
sbb
push
add
jle
popf
mov
xor
fsubp
lcall
pop
add
cmpsl
call
ret
rolb
lea
loop
add
andb
cmp
fwait
add
mov
rorb
daa
or
xor
mov
jns
add
addr16
add
mov
cmovs
push
jbe
mov
add
fldt
jl
mov
sbb
div
test
xchg
int
mov
add
add
dec
xchg
add
mov
arpl
pusha
imul
insb
sub
in
sbb
push
call
repnz
sbb
pushf
cltd
add
mov
xor
stos
in
cmc
jne
push
mov
adc
ficoms
lods
add
jge
add
call
push
stos
cmp
stos
pushf
into
cmp
push
push
push
mov
xchg
cmp
cmpsb
lods
jo
add
xor
inc
push
mov
push
aaa
clc
lock
call
lcall
jo
add
lods
or
xor
xchg
icebp
in
ljmp
out
sub
adcl
cwtl
out
add
mov
ret
jno
fmuls
roll
stos
xor
mov
sbb
mov
cmp
movb
add
ljmp
ret
add
dec
gs
or
add
xchg
mov
movsb
add
mov
xchg
adc
pop
loopne
out
push
push
or
cwtl
add
pop
ja
sbb
fildl
scas
lods
scas
inc
dec
dec
jne
add
movsl
movl
ror
orb
add
xchg
mov
xchg
loopne
pop
mov
lcall
hlt
out
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
add
in
push
sub
inc
inc
sbb
inc
pushf
inc
add
addl
out
subb
add
push
jo
cmp
pop
pop
sbb
daa
xor
inc
dec
xchg
cs
xchg
xor
add
inc
inc
jne
fimuls
testb
jecxz
dec
test
lods
test
sbb
loopne
lahf
adc
push
cmp
dec
add
call
jbe
in
sub
fdiv
push
pop
sbb
outsb
jno
vpmulhuw
add
cmp
repnz
add
stos
stos
or
add
or
xchg
lea
dec
insl
dec
or
mov
je
and
lret
int3
sbbb
pop
add
pop
jg
jns
push
iret
out
gs
fdivrs
pushf
test
js
mov
push
mov
push
outsb
mov
orb
add
in
roll
imul
pop
jmp
inc
rol
and
idivb
inc
loopw
and
call
jo
dec
add
or
dec
add
push
int3
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
add
call
clc
jmp
pop
das
inc
dec
push
mov
test
scas
enter
add
jge
cmpsb
add
pop
add
sub
lods
sbb
fiaddl
shll
dec
xor
pop
push
cmp
gs
into
mov
push
add
push
aas
xor
and
mov
xchg
add
and
pushf
mov
call
rcl
test
lods
adc
pop
aas
cmpsl
ljmp
mov
lea
and
leave
mov
or
add
cmpsb
sbb
enter
push
clc
push
add
sbb
sub
ss
lcall
cltd
lods
mov
data16
jmp
sub
push
aaa
movsl
ficoml
and
mov
push
test
jb
pop
add
pushf
test
mov
ljmp
flds
xchg
adc
mov
mov
mov
add
adc
or
adc
jo
pushf
push
inc
sbb
sub
add
ret
popa
cwtl
outsb
sub
or
cwtl
jb
imul
ret
pop
addb
rcr
xor
and
jne
add
push
sbb
xchg
and
ja
jb
sub
cmp
add
and
shlb
push
add
dec
rcrl
add
add
cmpb
adc
xchg
and
sub
addb
aam
jb
cmc
mov
lret
cli
mov
add
fwait
daa
push
rclb
xor
xor
std
mov
mul
mov
sub
mov
or
std
rolb
sahf
jmp
add
dec
mov
adc
hlt
add
jno
imul
aam
inc
and
inc
addl
out
add
call
and
add
out
mov
add
inc
repz
sbb
psubsb
pop
out
pop
idivl
or
xchg
cmp
out
jl
jle
add
outsl
cmpl
and
cmpsl
sarl
sbb
mov
or
pop
push
push
add
fcoml
cmp
push
add
xchg
lock
jne
add
xchg
xchg
sub
addl
push
idivl
adcl
ss
xor
xchg
add
fs
out
push
mov
fdiv
jmp
mov
sub
adc
repz
add
or
call
out
movb
mov
add
hlt
add
sbb
add
jge
pop
lret
xchg
call
daa
clc
and
add
push
mov
add
pop
arpl
pushl
aad
add
inc
sbb
cmp
sub
cld
xorl
hlt
push
clc
fcoml
int
add
lods
pop
out
int3
shl
and
adc
xlat
add
imul
fiadds
insb
add
xchg
stc
xor
fcmovnu
or
call
jge
dec
aam
sub
adc
jne
adc
in
jo
xchg
add
mov
sbb
arpl
and
inc
sbb
adc
call
cmp
add
push
push
out
mov
and
pop
sub
add
and
mov
jmp
orb
xchg
adc
cld
rorb
dec
outsl
xchg
push
mov
mov
daa
add
xor
lds
jbe
push
xchg
add
insl
sub
aad
inc
add
and
shlb
or
inc
je
add
push
sub
sbb
ja
jecxz
cmpsb
outsl
into
adc
push
jecxz
mov
ds
add
xchg
adc
add
vphadduwd
or
mov
loop
pop
data16
add
lcall
add
or
repz
out
cli
jno
add
jne
dec
jle
les
add
cli
test
andb
sti
subb
xor
repz
int
cmpxchg
add
adc
push
or
and
ds
fadds
fidivl
add
pop
cli
mov
adc
jmp
out
mov
and
mov
mov
imul
mull
adc
sbb
push
cmp
ljmp
mov
sub
mov
aaa
test
lods
imul
push
cmp
cmc
or
clc
sbb
in
or
ret
dec
stos
fiaddl
nop
pop
test
rcrb
scas
add
bound
dec
mov
xchg
mov
inc
movsl
or
push
sahf
nop
mov
xor
add
xchg
sub
add
cmc
popf
das
addb
add
mov
pop
dec
rcl
cmp
add
subl
jmp
jo
cld
sbb
test
mov
aaa
xchg
push
adc
push
sbb
iret
add
mov
dec
test
outsl
inc
adc
cmpsl
aaa
xchg
fistl
outsb
test
inc
sbb
mov
aad
jmp
cwtl
sub
in
add
cld
subb
pop
data16
jns
pop
or
and
jmp
or
cmc
inc
sub
push
add
push
js
fwait
dec
out
mov
adc
daa
in
add
and
push
cmp
insb
mov
ljmp
out
cmpb
add
fnstsw
add
mov
push
mov
pop
shrb
jbe
fisubl
sbb
mov
dec
add
xor
add
and
xor
add
xor
cmp
inc
add
dec
insb
cli
xchg
in
push
idivl
mov
push
jge
add
scas
mov
fiadds
test
lock
fwait
jp,pn
outsb
or
cmpsl
cmpb
xor
icebp
sbb
mov
frstor
sbb
loopne
clc
xor
es
cwtl
movsl
lock
out
inc
movsb
push
in
pusha
or
clc
xchg
stc
adc
pop
mov
xchg
add
test
adc
sbb
mov
push
add
adc
cmp
scas
mov
shlb
ljmp
xchg
or
std
adc
test
mov
sti
repz
shrl
cmp
inc
or
add
in
add
add
xchg
sbb
cmpsb
cld
repz
addb
mov
push
ja
xchg
add
mov
cmp
movsl
jbe
push
shl
dec
or
popa
add
scas
fldl
in
ret
incb
inc
push
mov
movsb
and
lock
dec
or
scas
pop
jno
add
mov
jmp
movsb
test
lods
cli
push
pop
or
push
xor
lea
dec
aas
add
push
sub
out
xor
pushf
fwait
push
xor
mov
add
test
add
add
xor
mov
add
jp
clc
aas
nop
mov
in
je
and
pusha
push
push
add
shlb
movsb
jle
and
or
jmp
scas
xchg
stos
test
cs
mov
push
popa
add
cmp
pop
in
cmp
or
sbb
or
push
mov
fnstsw
add
mov
jbe
adc
inc
add
jg
dec
dec
data16
pop
add
hlt
ret
add
jne
sbb
xchg
gs
iret
push
push
rorb
movhps
and
xor
jl
and
add
mov
add
pop
jge
fs
movsb
cmp
cmp
jbe
gs
push
mov
add
jne
dec
inc
dec
add
xchg
arpl
add
fadds
or
lcall
xchg
sbb
cmp
aaa
nop
movsb
add
enter
sub
test
and
loope
lret
add
nop
mov
mov
or
mov
aaa
addr16
add
jl
cltd
cmc
mov
add
jmp
add
xchg
fstl
rolb
pop
cmp
out
and
ror
jmp
ret
add
scas
cmpsb
xchg
dec
lods
leave
adc
fs
mov
das
mov
push
idiv
andb
inc
add
jns
outsb
mov
dec
cmp
andb
cmpsb
xor
movsb
push
jae
mov
adcl
mov
pop
rclb
push
fiaddl
sar
loopne
sbb
dec
adc
testl
xor
ljmp
inc
add
or
rolb
pop
aas
inc
in
and
loopne
rcrb
add
adc
sub
inc
dec
pop
add
mov
add
loope
pop
pop
and
cmp
subb
hlt
add
add
pusha
jle
repnz
nop
insb
mov
enter
fisubrs
std
arpl
push
sub
xor
adc
push
mov
popf
aaa
dec
push
lock
je
and
xor
js
nop
icebp
add
adc
push
test
inc
jg
mov
addb
lds
xchg
js
icebp
cwtl
imul
push
ja
loope
arpl
cld
or
and
mov
adc
inc
insb
add
cpuid
dec
ds
dec
ds
push
mov
fnstcw
sbb
add
fwait
outsl
xor
push
jbe
add
pop
mov
push
movsb
rcrl
adc
aas
inc
add
outsb
arpl
and
sbb
dec
inc
lock
insl
add
adcb
lret
mov
roll
push
data16
sub
sbb
fmul
mov
incb
xchg
andb
mov
inc
mov
in
lds
les
sbb
int
loopne
xlat
cmp
dec
inc
and
mov
andl
cmp
sbb
push
push
out
addb
xchg
mov
xor
sbb
dec
dec
negl
sbb
das
inc
push
cltd
sar
pop
mov
mov
push
scas
or
or
add
inc
xchg
jns
loopne
adc
cmp
inc
push
inc
dec
in
or
jmp
es
fldcw
add
pop
les
lahf
mov
cmp
sbbb
call
add
mov
add
in
adc
cmp
popf
pusha
icebp
mov
add
and
push
cmp
mov
mov
mov
nop
aas
aaa
ret
sti
sub
or
jnp
push
sti
mov
bound
addb
inc
jp
sub
xor
rcll
popf
incl
call
es
adc
push
add
mov
inc
add
test
xchg
pushf
je
push
dec
push
cmc
pop
mov
or
add
sbb
int3
mov
hlt
ret
jg
clc
in
or
pop
adc
mov
out
int
lock
mov
or
and
add
sbb
jmp
leave
mov
or
incb
cmp
jne
test
add
bound
aad
lods
jae
jo
flds
push
add
sbb
pop
testb
add
xor
pop
add
ljmp
fs
mov
and
neg
sbb
rorb
roll
cmp
pop
mov
ds
add
rolb
mov
lret
add
das
xor
sbb
add
jg
or
movsb
pop
mov
lss
hlt
xchg
add
adc
rol
sbb
cs
fstl
mov
les
fistps
mov
repnz
jb
pop
and
mov
xor
sub
andps
inc
mov
cmp
add
jb
or
out
or
inc
add
push
loop
add
mov
rcrb
xchg
in
add
rcrb
push
repnz
and
add
fildll
xor
add
cwtl
test
pushf
push
cwtl
fdivs
fmulp
add
add
mov
loop
sbb
inc
das
adc
add
mov
inc
add
faddl
repz
ffree
push
loopne
or
adc
aas
rorb
cltd
xor
jmp
add
and
inc
mov
add
imul
add
inc
andl
mov
scas
xchg
mov
ja
fsubr
add
int
add
jae
incl
and
inc
aad
dec
out
clc
lea
mov
or
or
add
cli
xor
sbb
sub
imul
inc
dec
sbb
add
or
rclb
clc
lahf
sbb
and
mov
mov
outsb
add
jl
push
cmp
js
xor
add
enterw
in
add
aad
add
cmp
outsb
cmp
mov
add
insl
push
cli
push
arpl
add
add
and
xor
or
and
or
inc
xor
cmp
push
mov
adc
jp
pop
in
dec
adc
add
fldl
mov
pop
and
mov
rcrl
jne
daa
add
sub
je
pop
add
dec
xor
cli
mov
or
add
aas
jmp
insb
add
sbb
stos
mov
add
arpl
or
mov
cmp
mov
and
inc
xor
add
or
ret
pop
adc
daa
xchg
push
push
xchg
test
les
das
and
js
adc
fcoms
test
xchg
push
add
or
popa
xchg
add
or
cmp
adc
add
adc
mov
in
cmpl
mov
jecxz
cvtps2pi
push
loopne
xchg
test
jmp
test
jge
inc
add
push
or
ds
jb
jbe
sub
inc
movsl
lock
pop
push
movsb
dec
inc
int3
cmc
add
aam
add
jl
jno
pusha
push
stos
push
and
adc
mov
fidivrl
data16
mov
mov
pop
mov
pop
fs
adc
cmp
xchg
jg
cmpl
pop
mov
and
xor
pop
adc
sbb
jno
add
push
push
cmp
mov
add
cltd
addl
lock
push
or
and
fadds
fsubrl
pop
push
or
xor
movsl
ss
pop
cmp
jnp
jo
dec
xor
pop
push
ds
mov
sub
bnd
or
push
jb
aaa
rolb
imul
pop
inc
outsb
push
add
pop
xchg
push
cwtl
out
imul
xor
shr
dec
lock
push
inc
inc
mov
mov
insl
cwtl
jo
and
push
jo
lods
dec
xor
mov
out
pushf
loopne
adc
sub
sub
xchg
dec
push
xor
std
dec
int
dec
add
fisubrs
add
shrb
cmp
in
test
dec
inc
xchg
mov
or
rorb
xlat
loop
jb
jo
stos
pop
sub
adc
mov
mov
push
lea
pause
adc
loopne
jp
je
iret
or
add
repnz
test
cmp
mov
and
ret
mov
and
in
pop
add
mov
inc
add
xor
dec
dec
or
or
dec
push
xor
popa
inc
pop
add
xor
cmp
xor
mov
aam
pop
sbb
cld
inc
add
xchg
imul
adc
mov
sub
adc
test
dec
or
add
adc
pop
add
ljmp
add
jmp
js
nop
jp
lods
push
arpl
cwtl
pop
sub
rclb
addl
mov
adc
cltd
cmp
xchg
adc
push
orl
push
add
aam
jg
pop
loop
cmp
sub
jne
inc
insb
bswap
fs
pushf
xchg
nop
int3
fisubs
xor
lret
push
xchg
and
jns
pop
es
ret
inc
dec
inc
inc
lock
add
push
sub
cmp
in
sbb
push
sub
aam
mov
add
jno
pslld
add
in
das
xchg
icebp
xchg
sarl
lcall
out
bound
fnstenv
ret
sahf
imul
outsl
jne
imul
inc
insb
cmp
roll
jo
aas
aas
lods
add
sbb
clc
out
add
test
rol
add
push
jb
popa
outsb
jae
cmp
addr16
inc
add
jne
outsl
mov
fxch
adc
stos
xchg
push
mov
mov
enter
in
push
push
add
sti
mov
jo
outsl
mov
je
mov
js
mov
adc
nop
sub
jle
cmp
call
cmp
cltd
push
push
jbe
add
add
pop
inc
popa
je
sarb
inc
sbb
clc
mov
movsb
xchg
mov
dec
addb
outsb
add
sbb
std
imul
rorb
or
nop
jo
xchg
imul
je
cmpsl
adc
test
mov
jmp
mov
push
pop
xor
dec
js
and
xor
jo
dec
and
add
jmp
adcb
adc
push
jmp
ret
mov
add
mov
mov
addr16
add
das
dec
int3
mov
xchg
and
shl
xchg
xchg
mov
enter
add
inc
jae
aas
lock
adc
je
and
add
lcall
and
sub
in
mov
pop
sub
jg
xor
adc
add
add
pop
push
mov
shll
ljmp
mov
push
push
jne
lret
add
xor
add
in
and
sub
or
add
stc
test
sbb
or
loop
xchg
push
mov
ret
adc
cmpsl
add
dec
pop
test
pop
cmpsb
test
stos
or
subb
mov
mov
mov
add
and
ret
movb
and
add
xchg
push
dec
inc
rorw
jmp
xchg
add
hlt
mov
cmp
mov
mov
lcall
pop
jl
pop
ljmp
hlt
sub
loop
or
fiadds
mov
pop
pop
pop
jp
push
pop
int
fadds
push
mov
sub
lods
dec
ret
push
decb
loop
je
fwait
push
add
cld
jmp
dec
pop
test
adc
test
addl
mov
clc
pushf
adc
sbb
add
push
push
sub
and
inc
add
insb
dec
adc
push
sbb
cwtl
adc
enter
push
mov
add
and
cmp
fsqrt
lock
ss
push
pop
es
addr16
lret
xchg
push
lods
insb
sarb
notb
jle
sbb
jne
jb
jns
pop
xchg
and
outsb
adc
xchg
dec
les
add
cmp
or
push
sarb
sub
movsb
sahf
adc
lea
leave
mov
jle
pop
faddl
push
in
mov
jb
add
or
ret
jg
into
add
push
call
enter
out
add
or
pop
sbb
movsb
mov
jne
push
add
or
push
pop
subl
jo
xchg
and
fstl
add
out
dec
clc
cltd
add
sub
xchg
inc
sbb
sub
add
xor
insl
and
pop
sbb
fs
xchg
sub
or
test
push
add
nop
cmp
cmp
in
sub
in
add
pop
add
add
mov
push
dec
pop
lcall
pop
mov
jmp
test
push
sub
mov
inc
bound
das
mov
push
dec
xor
js
pusha
hlt
fs
sub
test
inc
pusha
add
pop
pop
pop
or
testl
and
sub
fidivrl
cmp
jo
cmp
lcall
add
add
add
adc
dec
mov
lret
nop
mov
out
add
pcmpeqw
jle
jns
sbb
jb
push
mov
pop
nop
cmp
add
data16
jae
mov
mov
or
stc
call
dec
mov
push
sbb
out
xchg
ljmp
inc
mov
cs
or
adc
mov
mov
jmp
mov
inc
sbb
sub
and
inc
aas
push
add
adc
outsl
roll
add
add
xor
add
pandn
add
call
push
add
jmp
and
add
jmp
sub
verw
jb
cli
or
adc
pop
out
mov
rcrb
jb
incb
call
inc
test
or
pop
js
lea
push
inc
inc
xor
add
xor
sbb
repz
push
or
out
add
adc
push
cwtl
lods
adc
loope
pop
mov
ljmp
dec
sbb
arpl
add
push
mov
cmp
add
mov
adc
push
pop
add
xchg
xchg
mov
jns
sub
addl
xor
ljmp
add
nop
outsb
pop
cli
sbb
jnp
iret
adc
lock
add
or
cmp
jecxz
rclb
add
lea
push
popf
push
sbb
push
xchg
in
mov
loop
push
cmpsl
js
lahf
add
cmp
sbb
add
inc
daa
xor
push
add
scas
fsubl
notb
add
jne
mov
popa
jb
cmp
lret
les
shll
mov
out
std
add
aad
adc
adc
roll
je
cmc
add
xchg
dec
sbb
sub
adc
notl
ljmp
repz
xor
aam
jp
jo
rcrb
push
push
or
stc
and
dec
and
or
call
test
pusha
fisttpl
ficoms
add
scas
leave
aas
and
popa
loopne
jnp
lods
gs
lea
arpl
lgs
or
xor
jle
xor
cmp
xchg
jle
and
jo
movsb
adc
add
xor
in
pop
jno
add
in
adc
add
inc
je
mov
loopne
pop
push
lock
adc
stos
cmpsl
daa
jne
add
xor
add
dec
or
addl
mov
add
and
push
or
jo
or
in
xchg
push
cld
mov
mov
dec
xchg
inc
in
jae
arpl
add
mov
cmpl
pop
and
mov
adc
notl
jns
les
mov
jge
add
or
test
sub
jb
rorb
lods
pop
fsubrl
cmp
push
push
cwtl
in
pop
gs
loope
jo
mov
sub
ss
movaps
lock
add
fsubrs
movsl
xor
pushf
jae
add
nop
dec
les
ficoms
hlt
daa
jbe
add
test
xchg
in
movsl
jns
rorb
and
jmp
mov
sbb
popa
xlat
add
xor
test
add
rcrl
in
xchg
js
repz
add
add
mov
add
mov
enter
xchg
sbb
repnz
pop
sbb
lock
lahf
mov
pop
pushf
out
adc
push
cmp
and
add
mov
jmp
clc
hlt
js
push
inc
nop
inc
push
add
cld
pusha
shl
repz
pop
xor
push
inc
xchg
test
test
jg
add
aas
shlb
add
lahf
aad
fsubrl
or
stos
mov
or
testb
mov
ljmp
xor
fisubs
xor
mov
sub
jg
add
add
jb
test
cmp
add
add
fwait
push
ret
cmc
add
insb
ss
xor
adc
add
inc
push
jnp
fdivrl
push
addb
dec
test
cmpsl
aam
sub
jg
add
movsb
fs
sbb
lahf
xchg
jg
add
das
jne
call
mov
sbb
loop
push
popa
aas
ret
or
jne
pop
pop
pop
add
add
and
ljmp
jae
pop
add
adc
pop
mov
pop
and
nop
and
and
rolb
add
or
lfs
cmc
repnz
pusha
or
sbb
enter
adc
adc
or
inc
pop
sub
xchg
rolb
adc
add
sbb
mov
shlb
add
mov
inc
or
add
pop
ret
repnz
push
je
mov
int
mov
cmp
hlt
inc
divb
cli
jne
push
or
jae
mov
adc
push
pop
mov
add
pop
add
fs
xchg
inc
inc
iret
fcmove
popf
inc
testb
jne
mov
orb
add
mov
push
call
pushl
mov
add
int
psadbw
test
add
and
mov
cwtl
aaa
cmp
movsb
cmpb
lahf
and
pop
sbbl
and
cld
mov
stos
mov
adc
cltd
cmp
mov
cmp
add
pop
or
ffree
mov
clc
clc
add
dec
cld
lret
inc
in
add
cmp
add
ret
push
je
test
pop
dec
xor
pop
xchg
sub
es
int3
cmp
hlt
pop
test
out
iret
inc
incl
cmpsl
jge
xchg
jecxz
ret
fcomip
int3
stos
adc
jmp
pop
rolb
pop
add
sub
add
add
xlat
or
cmp
mov
lock
mov
dec
lahf
sahf
icebp
or
sub
sub
push
daa
push
push
cmc
ds
add
in
fs
mov
add
movsb
jge
cmp
xchg
icebp
jne
or
ss
mov
add
inc
xor
add
pushf
jp
cmp
adc
pop
and
cwtl
inc
cmp
jbe
call
inc
addr16
xor
je
or
or
jo
cmp
test
fsubp
and
mov
add
es
enter
or
cmp
mov
sbb
mov
lock
push
adc
add
les
sbb
in
addr16
dec
inc
sbb
stos
leave
xor
jle
sub
sub
dec
aad
fidivs
scas
cmp
and
jp
add
scas
pop
add
or
mov
sub
popf
fistpll
adc
add
add
pop
icebp
add
add
into
or
cmp
andl
cmc
jp
inc
mov
pushl
sbb
jl
pop
pop
xor
add
rolb
ja
ljmp
sub
mov
add
call
fdivrs
xchg
loope
jmp
push
inc
mov
aas
add
andb
push
cmp
add
jne
add
push
mov
jle
or
add
xchg
add
jmp
xor
call
aam
push
and
sbb
mov
add
dec
jg
jg
setne
cmp
xor
pop
out
jl
nop
jns
mov
test
add
jmp
ret
cld
add
push
pusha
mov
adc
add
cmp
sti
mov
repnz
dec
mov
add
cmp
add
mov
insb
add
add
dec
pop
mov
outsl
popf
sbb
das
sub
and
mov
cli
add
or
xor
clc
dec
and
push
out
adc
in
or
or
jne
add
das
adc
adc
int3
daa
or
clc
dec
jg
add
out
mov
add
push
and
fildll
and
movsl
pop
pop
adc
xchg
test
daa
pop
inc
adc
loopne
ljmp
jo
rcrl
add
les
cmp
push
add
mov
xor
ja
add
adc
pop
jmp
add
shll
out
sub
sbb
or
scas
add
pop
push
and
rclb
aam
add
loopne
push
push
add
fwait
jno
cmp
aas
repz
add
jecxz
bound
jp
nop
add
mov
imul
sub
add
test
lahf
add
lock
outsl
mov
pop
sub
xchg
sub
aaa
and
clc
push
andb
jge
or
movd
loopne
pop
in
sub
popf
imul
push
ss
add
inc
cmp
call
loopne
bound
ljmp
add
jp
adc
and
aam
insl
sub
inc
shl
pop
xchg
sbb
int3
xlat
mov
test
enter
outsl
mov
les
inc
shlb
adc
mov
mov
stos
sbb
push
fimuls
or
ljmp
movsb
mov
mov
mov
cli
cmc
add
and
adc
xchg
jge
add
imul
and
enter
push
add
pusha
push
insb
push
subb
and
ja
dec
mov
sub
add
and
daa
xor
test
cmpsl
sbb
and
xchg
pop
xor
insb
add
push
dec
add
jnp
cmp
pop
jg
fs
mov
sub
loop
push
hlt
push
xchg
xor
and
lock
insb
sti
push
or
cmp
adc
jne
ljmp
std
and
or
daa
ds
fadds
clc
fidivl
xor
mov
verw
push
cmpsl
jmp
cmpsb
lods
cmp
add
inc
mov
bndstx
cmp
mov
or
mov
cmp
dec
jnp
bnd
pop
lds
pop
sbb
out
xor
in
fsub
je
or
sbb
imul
inc
test
add
push
dec
sub
jp
add
xor
add
and
sahf
add
xchg
mov
jle
sbb
loop
add
mov
repz
addb
inc
mov
fdivl
sub
sbbb
adc
cmp
das
testl
ss
test
add
or
std
cmp
add
test
jbe
mov
add
lds
addb
jl
ljmp
jne
incb
inc
hlt
jge
add
je
add
aas
sbb
loopne
addb
rol
jmp
add
movzbl
sub
jne
add
xor
dec
mov
cmpsl
out
sti
jno
add
mov
inc
incb
lret
mov
add
and
outsb
pop
xlat
inc
in
pushf
dec
sbb
sbb
lds
aaa
mov
daa
es
cwtl
sahf
jne
mov
jns
popw
andb
cmp
in
add
imul
or
push
pop
mov
das
add
push
cmp
jae
lret
decl
pop
cmpsb
sbb
inc
adc
push
negb
push
shlb
or
clc
xchg
cmpb
mov
mov
jle
add
test
rolb
push
push
aad
sbb
outsb
pop
dec
mov
add
and
aad
sub
mov
add
or
sbb
idivl
daa
jle
aad
mov
les
jnp
cmp
mov
mov
cmpl
outsb
popl
lret
lea
adcb
loop
add
or
cli
push
pusha
lahf
and
pusha
add
cmp
and
js
lock
loopne
imul
std
and
adc
xlat
push
jne
mov
movsb
or
sbb
sub
call
jns
add
mov
pop
and
rol
and
and
into
push
sahf
push
push
and
cmp
enter
call
mov
faddp
das
inc
mov
jne
sbb
or
inc
cmp
add
and
dec
aaa
or
adc
imul
pop
or
pop
pushl
cmp
cmp
sbb
pushf
aad
movsb
roll
out
and
lea
mov
iret
and
push
add
jp
fists
leave
ja
xor
mov
call
add
push
xchg
fs
lds
and
lahf
or
push
in
add
addr16
movsb
scas
pusha
aas
push
les
jbe
ret
int3
adc
ja
mov
jae
add
out
pop
mov
lock
es
and
scas
sub
ja
mov
mov
push
mov
pop
call
int3
jg
daa
pop
sarl
sbb
mov
or
je
add
mov
sub
xchg
stos
add
xchg
in
sub
adc
mov
sahf
imul
mov
sub
xor
pop
andb
std
hlt
jmp
pop
aas
test
mov
cmp
popf
adc
inc
cmp
pop
movsb
aas
mov
or
dec
hlt
push
jl
movsl
push
jmp
shlb
das
cwtl
xor
mov
data16
mov
popl
pop
sub
jle
mov
mov
sub
sbb
inc
mov
add
je
sbb
xchg
jg
or
sar
popf
fistps
mov
xlat
add
outsl
je
add
sub
or
mov
inc
push
dec
dec
and
add
cs
imul
xchg
mov
adc
scas
mov
lock
fistl
sahf
rclb
adc
fadd
xchg
xchg
nop
sarb
add
sbb
mul
inc
inc
xchg
mov
outsb
add
aad
sub
repz
cmp
pop
add
frstor
iret
cmp
add
pop
ret
into
mov
jl
stos
cmp
push
add
add
aad
mov
push
sbb
mov
ficoms
adcb
add
dec
and
dec
xchg
cmp
faddl
lock
adc
scas
and
pop
and
push
and
dec
add
push
xchg
cld
jg
sub
mov
mov
std
dec
xor
int
ds
jge
cltd
xchg
dec
add
mov
push
mov
xchg
lock
cmp
add
add
or
mov
or
adc
out
ja
dec
cli
iret
sbb
dec
pusha
or
hlt
lods
add
push
mov
cmp
hlt
add
push
inc
inc
push
jb
cltd
fadd
push
dec
inc
test
add
xchg
xchg
adcb
mov
jne
sub
lods
je
add
mov
jmp
stc
add
lahf
push
js
rcl
popa
imul
push
and
cmp
sub
cmp
and
pop
xchg
pcmpgtd
outsl
sub
inc
jne
mov
cmp
cmc
rcrb
imul
jae
and
add
push
out
and
adc
add
fdivs
cmovo
es
mov
xchg
cmp
ja
pusha
add
in
hlt
add
sbb
dec
loop,pn
loop
add
enter
call
cmpb
or
xchg
rcr
sub
psadbw
das
mov
jmp
add
data16
or
add
sti
cmp
roll
mov
add
call
dec
pop
divb
mov
mov
add
outsl
xorl
pop
and
test
lods
dec
imul
mov
adc
jno
add
push
jb
and
lock
mov
add
jne
imulb
xlat
push
fidivs
lods
pop
or
cs
inc
test
pop
cmpl
or
and
cmpb
cmp
stos
movsb
pushw
push
lea
test
cmpl
add
mov
sub
mov
sbb
in
jp
push
popf
add
mov
lds
lea
nop
xorb
shrb
movsb
aaa
mov
pop
jecxz
push
mov
jo
or
mov
lea
das
mov
add
dec
call
sub
mov
int3
enter
add
cmp
jle
das
xor
jns
xchg
nop
mov
rcrb
pusha
push
sub
addb
or
adc
and
add
dec
insb
cmpsl
add
sub
in
mov
cmp
lods
pop
popa
sti
mov
mov
inc
xlat
sti
mov
imul
aas
pusha
jne
mov
and
and
incl
adc
dec
inc
cmp
add
mov
add
mov
or
int3
fildl
cmovs
addl
add
int3
add
push
add
and
adc
aam
stc
ljmp
or
shl
adc
lahf
into
cs
mov
sub
pop
push
scas
or
inc
inc
dec
sub
lock
imul
jo
cmc
dec
add
xchg
call
inc
shlb
sti
push
add
aad
ret
fnstcw
or
ja
add
adc
jo
sub
add
pop
mov
addb
and
inc
cmc
push
jo
add
movsb
stos
mov
mov
inc
cmp
pop
jl
add
insl
out
repz
adc
and
add
or
sub
push
add
pop
mov
loopne
pusha
push
inc
outsb
and
push
add
jb
inc
pusha
push
add
insb
sub
dec
inc
push
cmp
mov
enter
push
mov
inc
add
ret
jg
imul
sub
add
sbbl
fsts
sbb
sbb
sbb
add
and
add
int3
add
dec
movsb
fs
popa
jmp
cld
fcoml
push
loopne
pushf
add
add
mov
in
add
out
mov
clc
mov
push
out
call
xchg
stos
pop
pop
insb
inc
push
std
or
add
jne
imul
nop
pop
repnz
jmp
or
arpl
adc
sbb
nop
adc
rorb
add
fcmovu
adc
and
inc
cwtl
jmp
add
xor
add
stos
bound
or
add
mov
add
sbb
push
add
fwait
sahf
dec
insl
fistpl
add
sbb
filds
pcmpeqb
outsb
push
add
in
sbbb
adc
dec
mov
mov
adc
add
jne
and
js
add
cmpsb
mov
push
sub
push
or
add
insl
jno
imul
add
mov
pop
xchg
sbb
or
mov
add
sub
test
xchg
add
loopne
jo
xor
pop
mov
or
aam
das
or
and
cmp
icebp
pop
mov
pop
shlb
add
inc
xorl
add
cwtl
xchg
cld
add
loopne
test
xchg
in
adc
clc
les
mov
xchg
mov
xchg
call
add
fisttpll
and
inc
add
test
inc
push
push
aaa
adc
shlb
aas
cs
jmp
enter
adc
nop
jge
sbb
loope
fsubl
imul
and
xor
push
out
adc
push
mov
adc
jbe
dec
out
push
sbb
xchg
xor
add
dec
popa
sbb
test
inc
aaa
sbbl
sbb
sbb
xor
clc
mov
mov
and
mov
mov
test
sbb
or
rorb
insl
mov
add
rcl
pop
filds
mov
stos
js
loop
mov
ja
add
add
add
cmpsl
xor
add
fistpl
mov
inc
cmpsb
xlat
xchg
xor
clc
add
mov
xchg
xor
add
fs
push
xchg
lods
jmp
decb
stc
fisubs
dec
inc
arpl
inc
cld
ja
push
cmpsl
push
inc
leave
fldl
pop
and
aas
decb
std
or
test
add
sub
repnz
push
hlt
aad
sub
push
jmp
insl
adc
dec
movsb
stos
cld
xor
add
mull
cwtl
in
dec
rolb
mov
notl
or
loop
xor
add
lret
xor
push
test
cmp
cmp
mov
cmp
xchg
xchg
pop
adc
mov
insl
inc
sub
push
inc
pop
jmp
push
jns
add
out
add
imul
fimuls
push
cmp
add
jl
andl
inc
add
pushf
sarb
jmp
dec
sub
xchg
cmc
ret
add
hlt
mov
add
out
xor
mov
pop
ds
lock
adcb
and
add
push
dec
in
add
and
push
imul
adc
push
in
imul
sub
cmp
xchg
inc
data16
daa
das
mov
push
repz
js
add
push
in
pop
adc
movd
xor
cmp
cmpsl
sub
add
sub
adc
add
je
addr16
cmp
bound
add
sub
add
xchg
test
jo
outsb
add
push
gs
inc
pop
jne
imul
add
push
mov
call
and
cwtl
lods
dec
cmpsl
sbb
mov
jmp
jmp
push
mov
mov
ljmp
push
push
jbe
pop
fidivrs
or
fs
jno
ja
jae
jbe
jne
add
jo
fwait
js
adc
fsubrs
loopne
imul
adc
sub
sub
lahf
enter
and
das
subl
add
call
movsl
jle
mov
mov
sub
leave
pop
dec
stc
popa
rolb
addb
push
add
add
fcomps
xchg
aas
dec
sbb
daa
push
pop
push
and
add
or
xor
jnp
or
adc
mov
call
js
adc
add
fstp
das
push
rolb
or
mov
push
lahf
rclb
je
dec
add
cmpsb
cmp
inc
or
jne
loopne
inc
or
out
daa
clc
fdivrl
lret
das
adc
nop
pusha
mov
add
inc
add
enter
pop
push
sub
sub
call
jae
add
mov
pop
mov
movsl
add
jb
jbe
push
jo
roll
adc
insb
jo
sbb
add
mov
dec
add
enter
or
sub
add
nop
mov
aad
jmp
or
je
add
ja
pop
mov
jo
pop
and
xchg
or
int3
adc
faddl
sbb
sbb
pushf
push
add
neg
pop
and
and
push
jne
sbbl
test
enter
inc
push
test
and
sbb
and
outsb
insl
ret
cld
add
mov
lock
adc
adc
xor
ret
mov
xchg
test
repnz
mov
add
fsubs
leave
sub
dec
lea
shrb
shlb
ret
mov
adc
add
pop
add
js
repnz
out
jo
add
repz
mov
and
adcl
clc
add
jb
dec
stos
push
loopne
push
je
jo
fdivrl
adc
das
xlat
inc
fs
jl
gs
nop
xchg
jecxz
jne
add
hlt
test
dec
mov
dec
ret
cmp
inc
mov
nop
sub
mov
push
roll
fstps
fsubl
add
inc
arpl
mov
push
cmp
cmpb
or
ror
push
jnp
push
dec
add
in
cmc
pop
dec
in
adc
dec
addr16
mov
lcall
push
xchg
adc
add
lock
or
addb
cmp
push
xchg
lds
out
pop
xor
dec
mov
mov
out
pop
push
push
std
sbb
sub
inc
filds
js
push
mov
outsl
sbb
add
jp
movb
sbb
daa
adc
jb
sub
ja
jno
fcmovnu
jno
enter
pop
mov
xor
lahf
dec
std
pop
jecxz
in
sub
inc
into
mov
ror
add
push
xor
cmovge
add
cwtl
mov
cmc
sub
push
dec
push
stc
movb
inc
xchg
scas
test
mov
add
rcll
idiv
pop
test
cs
xchg
fisttpll
push
push
lret
jge
clc
inc
add
and
jb
adc
adcb
xchg
jne
cmpsl
mov
jg
data16
jns
hlt
push
in
push
hlt
sbb
adc
or
es
lds
das
arpl
or
scas
sbb
aas
pop
push
cmc
push
add
adc
scas
jg
adc
addps
imulb
push
test
mov
mov
dec
add
addr16
dec
add
push
or
pop
mov
testb
xor
jl
out
sub
pop
popa
cmc
mov
pop
add
cmp
bswap
push
into
mov
xchg
add
inc
add
or
cld
sub
mov
and
sub
push
add
je
mov
mov
push
cmp
inc
mov
cmp
push
mov
add
add
stc
ret
pop
adc
xchg
call
add
mov
pop
stos
add
ret
dec
cmp
pop
fcomps
and
filds
popa
sahf
xchg
ja
xchg
pop
pop
cmp
mov
cs
test
mov
insb
mov
hlt
movsl
mov
sbb
mov
jge
mov
pusha
xchg
add
sarl
cli
push
add
pop
ja
or
imul
push
movsb
repz
loopne
dec
lock
adcb
aad
jl
or
add
jg
jmp
push
mov
dec
repz
add
jnp
xor
push
std
push
movsb
jno
and
leave
cmpsl
pushf
pusha
inc
add
lret
jns
sbb
clc
pop
ljmp
mov
ds
push
add
scas
iret
rolb
and
mov
mov
lahf
jl
add
lock
addl
shrl
push
rcrl
rolb
mov
sar
rclb
enter
hlt
mov
fdivrs
jmp
jns
lret
xchg
jne
inc
add
add
push
push
sti
cwtl
mov
add
pop
pop
xor
jae
pop
jecxz
shlb
imul
mov
out
test
and
and
clc
dec
add
cmp
cs
add
dec
add
mov
cmpsb
fdivrl
sub
inc
movsl
pop
aad
insb
mov
lods
shll
add
inc
and
xor
decb
and
add
sbb
jb
jno
pop
daa
pop
fldl
arpl
lahf
push
rolb
jb
shrl
cmp
adcb
shr
push
add
aaa
pop
mov
add
pop
xor
add
movsb
xor
sbb
inc
xor
and
cli
loopne
mov
cmpsl
cmp
push
gs
add
sbb
dec
daa
ret
cmp
shlb
inc
das
add
jmp
sub
add
lods
insb
sub
lret
push
and
int
aas
jge
psubb
pop
or
jb
dec
pop
out
cmpsl
adc
add
lock
jecxz
call
jl
jns
sbb
in
jo
inc
and
pop
rorb
cmp
and
jg
xchg
add
nop
rcl
cmpsl
add
or
fisubs
push
mov
add
js
add
daa
jge
sub
test
cltd
cmp
add
nop
add
push
add
rcll
add
addr16
mov
movsb
or
add
and
popa
pop
mov
xchg
clc
test
ja
mov
jnp
sub
or
add
xor
pop
jmp
rolb
movb
add
add
or
pop
and
push
push
sub
xchg
mov
cmpsl
mov
pop
and
add
outsl
dec
orb
adc
scas
sub
cli
aam
repz
mov
mov
add
push
add
pop
jge
add
jp
xchg
mov
and
dec
add
jns
add
cld
cmc
imul
fdivl
std
dec
leave
rolb
movb
inc
in
sbb
aas
pop
test
shrl
or
mov
incb
lds
cmp
rcrb
ljmp
add
addl
shlb
out
pop
inc
inc
add
xor
add
add
cmp
and
jbe
addb
leave
rolb
and
dec
mov
mov
add
fsubr
sbb
cld
xchg
dec
mov
add
pop
and
int
inc
sbb
into
enter
out
xor
adc
xchg
paddd
or
push
add
sbb
jbe
inc
add
shr
enter
mov
into
int3
push
or
ja
jno
js
jge
mov
sub
xor
adc
add
iret
les
imul
test
add
in
in
jmp
mov
jge
cmpsb
sbb
cmp
incb
inc
fcompl
mov
cmp
xchg
adc
pop
notb
adc
jge
cmp
dec
mov
loopne
int3
aam
notb
sbb
cmp
sub
cmp
inc
or
mov
jg
sarb
jecxz
push
stos
pusha
mov
lret
test
mov
fstpl
add
adcl
add
or
outsl
push
rorb
inc
fstpl
mov
dec
mov
test
mov
and
xor
repnz
xchg
dec
shlb
adc
push
or
pop
add
cmp
or
sbb
ret
add
jmp
sub
add
xlat
cmpb
jne
add
adc
je,pn
popf
add
jb
and
or
jmp
call
push
loop
in
push
mov
aam
mov
jne
pop
add
cmpsb
fistpll
or
clc
leave
or
adc
adc
cwtl
add
xor
mov
add
cltd
jle
sbb
or
les
xor
push
daa
pop
inc
int
imul
pop
dec
cld
je
cltd
ds
mov
xchg
add
nop
xor
fsubs
test
jmp
dec
jne
and
add
lahf
out
inc
add
cld
mov
movsl
add
cmpsl
jnp
or
mov
sub
pop
aaa
add
int
xor
sbb
mov
push
mov
push
cs
add
sub
lahf
aam
bound
jne
push
xchg
cmp
sub
cmp
jno
mov
xlat
adcl
pop
xchg
adc
mov
and
and
aas
jle
and
jmp
dec
dec
stos
add
je
or
leave
sbb
add
jmp
lods
cmp
pop
hlt
cmp
cmc
push
mov
dec
call
mov
mov
inc
arpl
xor
shlb
add
or
dec
adcl
add
lods
ret
jne
mov
out
xchg
push
cmp
je
dec
or
lock
repnz
leave
mov
inc
inc
ret
push
scas
out
add
iret
mov
das
mov
mov
pusha
idivb
xchg
cmp
pusha
mov
jl
in
push
dec
adc
inc
add
adc
mov
lcall
jnp
fistpll
or
add
adc
loopnew
cmp
inc
inc
push
cltd
shlb
mov
add
cmp
sbb
push
das
es
jnp
test
insl
cmp
add
inc
inc
adc
and
jne
lock
push
mov
lahf
sbb
in
cmc
jae
pop
ret
rolb
or
push
adc
out
push
sbb
subb
andb
jae
and
sbb
popl
adc
scas
pmaddwd
loopne
test
sti
sub
lods
push
lods
adc
or
pop
add
call
lret
xchg
test
add
jp
jo
mov
push
popa
jns
sbb
xorb
jne
pusha
inc
cmp
mov
add
dec
cmp
adc
add
fcompl
or
push
mov
xor
pop
add
sbb
add
sbb
lret
add
cmpl
ss
cmp
add
cmp
mov
xchg
mov
fdivl
sub
mov
adc
mov
lret
sti
and
inc
add
add
push
push
xlat
adc
add
jecxz
cmp
add
loope
push
sahf
insl
xchg
add
lods
adc
mov
push
push
notl
or
imul
or
adc
jecxz
into
push
mov
add
cmp
cmc
add
sub
mov
sub
add
sbb
cmp
add
or
arpl
sub
ds
push
sahf
push
loop
mov
addl
mov
xchg
pushf
roll
int
movsl
lret
fldl
scas
lahf
hlt
test
pop
mov
xlat
mov
leave
mov
xchg
or
in
lea
outsb
repnz
pusha
clc
test
les
das
stos
cmp
jecxz
xor
adcb
sub
add
je
add
fdiv
inc
add
cmp
add
test
bound
push
mov
fisttpl
or
xor
mov
push
jae
pusha
mov
mov
in
dec
daa
sbb
test
add
imull
push
add
jnp
cmpsb
pushf
dec
nop
add
push
rol
enter
add
mov
cmp
jl
cmp
pop
inc
sbb
add
adc
dec
ret
pop
pop
pusha
xchg
dec
adc
mov
jnp
mov
cmp
mov
loopne
lds
mov
push
mov
cld
cmp
xchg
call
xor
loopne
or
mov
pop
xchg
incl
sub
mov
sub
lds
mov
js
loope,pt
cmp
scas
fcompl
push
daa
push
fs
sbb
xor
jp
into
insb
cld
stos
rcr
jp
sti
std
add
mov
out
add
jns
insl
clc
mov
and
ss
push
dec
xchg
jp
pop
cmpsl
sahf
aad
mov
fs
add
adc
out
imul
jge
jmp
test
adc
push
dec
adc
hlt
sti
mov
jg
test
push
add
and
add
inc
sub
push
push
jnp
push
lods
jge
mov
adc
rcrb
sub
clc
cmp
iret
push
lods
fldenv
mov
jne
jle
sbb
push
sbb
dec
adc
pushl
add
xchg
adc
pusha
in
or
lods
adc
minps
and
add
ss
sbb
cmp
call
lea
and
cmpsb
sbb
movsl
cwtl
add
add
es
jmp
addb
and
add
jge
jl
sub
jns
jmp
add
push
fdivs
and
xor
add
cmp
add
je
cli
int3
lea
add
dec
lds
pop
or
add
sahf
mov
add
test
cmp
add
cbtw
mov
adc
add
shl
add
enter
pop
mov
popl
clc
lret
pop
mov
inc
jmp
mov
add
add
fnstcw
in
stc
test
popa
add
sbb
daa
fsubrs
cmp
lods
mov
stos
sub
stos
repz
sbb
test
dec
sahf
adc
inc
push
clc
push
add
pusha
sub
xlat
loopne
add
xor
dec
xor
add
xor
mov
out
cwtl
adc
cmpl
stc
imul
lret
lcall
xor
jmp
mov
add
push
mov
xor
sub
adc
inc
dec
cld
lods
or
test
dec
adc
push
push
sbb
or
add
rorb
add
add
aaa
jne
pop
push
cmp
push
push
out
and
subl
nop
cmp
stc
and
mov
mov
push
mov
arpl
xor
dec
leave
add
mov
test
add
movsb
mov
add
fnstsw
dec
sbb
mov
pushf
add
outsl
les
jno
bound
jl
loopne
sahf
aam
popf
add
fisubs
dec
nop
lods
lea
adc
neg
rcr
or
add
jbe
lods
mov
sub
add
lods
add
push
gs
shrb
add
cmp
or
adc
imul
imul
push
int
dec
fstps
insb
je
inc
push
xchg
jnp
push
or
pop
inc
or
mov
pop
in
sub
add
jmp
pop
mov
les
mov
sub
inc
add
mov
cmp
add
rol
add
inc
dec
add
lock
cmpl
cmp
stos
xchg
in
cwtl
xor
adc
jecxz
add
push
test
je
cmpsb
and
jg
or
fbstp
frstor
icebp
mov
pop
shrb
or
call
inc
dec
and
cmc
into
jae
ds
scas
add
dec
xchg
insb
push
out
add
cmc
sbb
ds
sub
cmpsl
xlat
xor
add
cmp
lock
dec
fiaddl
jbe
mov
in
in
add
push
and
or
jmp
aas
imul
sub
add
loop
movsb
jl
sbbb
mov
xchg
clc
add
inc
push
fsubl
adc
pusha
add
sarb
orb
shlb
loop
add
dec
lods
aad
pop
mov
add
push
add
inc
out
movb
jmp
push
cmpsl
sub
jmp
mov
cmpsb
add
inc
cld
mov
push
aas
and
out
jb
add
add
inc
adc
jle
add
hlt
cli
xchg
ret
mov
decl
xchg
xor
add
jae
gs
lcall
pop
xchg
lods
xor
cld
icebp
and
je
push
ds
out
add
sub
stc
inc
jo
lods
jo
add
or
add
ret
fcomps
je
add
fists
arpl
pop
jae
mov
or
mov
insl
je
add
jo
leave
and
lcall
add
inc
and
cs
mov
lods
lea
add
pushf
scas
add
sub
into
in
stc
pop
pop
push
test
and
repz
sbb
lock
add
dec
fdivs
push
inc
faddl
inc
add
enter
in
mov
popf
fisubrs
jle
gs
pop
and
push
lea
push
test
dec
cmp
mov
sbbb
add
mov
push
cmp
add
add
pop
mov
xor
scas
in
bsf
and
pop
stos
mov
add
dec
jo
xor
mov
push
mov
sahf
iret
xor
dec
xchg
das
xchg
filds
movsl
mov
cmp
loope
cmpsl
incb
cwtl
sbb
push
push
jne
xchg
pop
push
shlb
repnz
sub
cmpsb
or
cmp
push
or
xor
and
push
aam
push
lds
cs
inc
push
cmp
xor
xor
add
fs
or
pop
add
hlt
test
add
aas
xorb
popa
add
pop
and
arpl
push
loopne
mov
jo
push
stc
cs
mov
cwtl
int3
adc
mov
add
mov
cmp
data16
lock
fidivs
es
std
add
mov
fs
push
in
mov
cmpb
mov
pop
mov
in
fcoml
mov
sbb
pop
in
sbb
add
push
lds
xchg
add
fidivl
cmp
jo
filds
bound
daa
and
clc
in
in
push
sbb
pop
incb
stc
xor
icebp
mov
call
add
push
pop
or
xor
or
jg
or
lcall
mov
lea
add
xlat
mov
cwtl
add
out
xor
mov
push
inc
cmp
add
mov
vzeroupper
fs
pusha
add
xchg
adc
mov
push
out
es
adc
jp
mov
add
add
dec
jne
xor
cmp
ljmp
xchg
ret
inc
or
in
loopne
mov
cmp
cmpb
jp
jae
addr16
hlt
jne
mov
sbb
jge
or
add
xchg
xchg
ret
adcb
movsl
add
dec
cwtl
hlt
mov
orb
pusha
clc
add
and
mov
or
loopne
or
adc
lret
addb
out
jle
xchg
add
mov
icebp
add
sub
das
add
adc
pop
sbb
inc
add
loopne
int
jp
int
fmul
or
aaa
xchg
push
add
jo
mov
mov
adc
inc
pusha
lea
or
dec
and
imul
xchg
fs
clc
mov
je
sbb
cmpsb
add
arpl
jno
inc
add
push
adc
push
xlat
outsb
mov
inc
mov
movsl
daa
push
dec
mov
xchg
or
cmp
ljmp
mov
and
pop
pop
aaa
sub
push
nop
sahf
int3
gs
clc
mov
inc
or
je
rcrb
or
xchg
ret
pop
dec
js
add
jmp
lock
leave
sbb
movsl
sub
bound
inc
into
cmp
mov
inc
push
cmp
and
dec
stc
adc
add
push
pushf
fisttpl
or
add
jnp
xchg
mov
sbb
jmp
push
xor
inc
das
xor
push
addl
call
sub
add
add
addb
aad
dec
ret
lock
mov
add
popf
sub
notb
inc
adc
jp
movl
xor
fstps
cmp
adc
call
add
inc
xchg
stos
and
pop
add
dec
lcall
rcrb
cmp
jle
mov
push
xor
jo
dec
es
xlat
add
movsl
rorb
adc
mov
xchg
add
and
jle
push
gs
insb
add
add
jg
inc
leave
xor
add
mov
dec
mov
add
pop
lea
and
je
js
ficoms
dec
mov
andb
xlat
shlb
add
ror
pop
hlt
cmpsb
add
push
in
dec
push
dec
cld
testb
adc
loopne
add
jmp
enter
push
push
cmc
outsb
sbb
add
imul
jmpw
inc
test
bound
add
push
neg
mov
ret
pop
and
out
and
xorb
lret
adc
dec
ja
sbb
push
or
out
insb
out
add
sub
pusha
push
add
jmp
sbb
mov
inc
fisttps
or
adc
rolb
subb
cmpsl
add
xor
test
ror
shrb
insb
fnsave
call
pop
lods
sub
js
sbb
in
rcr
push
mov
aam
or
push
jp
insl
pop
xchg
mov
inc
mov
movsl
adc
inc
jae
xor
jnp
sub
xor
add
inc
scas
xchg
int3
sbb
add
ja
sti
dec
and
add
movsl
push
jb
add
xor
enter
mov
scas
enter
or
adc
add
dec
jo
add
push
ds
jge
adc
pop
in
or
push
mov
or
addl
imul
pop
les
mov
add
xor
fwait
mov
mov
inc
rolb
xor
int3
pop
or
sbb
or
dec
or
imul
stc
sub
insl
inc
in
jbe
mov
in
inc
xorb
add
cltd
inc
test
jl
pop
mov
mov
push
ja
pusha
push
mov
cmp
xorb
lock
lret
add
push
push
sub
mov
mov
mov
or
out
test
adc
add
addr16
or
sub
lock
imul
pusha
rolb
outsb
repnz
icebp
adc
sbb
pop
cmp
adcb
mov
sbb
sub
test
xchg
fadds
and
pop
jo
orb
loopne
add
add
or
out
dec
add
je
push
adc
or
cmp
fidivrs
hlt
cmp
out
and
sub
adc
jns
sbb
xor
leave
add
in
adc
jge
push
inc
add
xor
cmp
dec
mov
orl
xor
cs
jae
xorb
outsb
sub
gs
cmp
out
add
push
pop
rcr
adc
push
mov
test
lea
rcrl
push
cld
lock
push
jmp
dec
add
and
xor
add
or
inc
idivb
mov
mov
add
sbb
pop
adc
add
inc
clc
movb
mov
out
repnz
dec
dec
xchg
cmp
sub
sarl
ds
sbbb
xor
cmpsb
dec
dec
inc
xchg
add
cmpl
test
inc
adc
mov
and
jo
das
add
jmp
pmullw
test
test
ljmp
jge
mov
add
inc
xor
aad
adc
fistl
sti
sahf
mov
jb
inc
shl
xor
jmp
and
out
or
jp
add
mov
pop
mov
mov
xor
cmp
cmp
xor
out
add
push
dec
nop
add
and
push
sub
in
nop
add
sub
inc
xor
inc
add
jmp
repnz
add
and
jnp
push
ret
leave
add
sub
xchg
xor
push
and
inc
test
cmpl
dec
sub
or
pop
btsl
mov
push
jnp
mov
shlb
inc
push
push
cld
jg
testb
out
inc
lahf
add
popa
fs
xor
xorl
mov
lea
inc
mov
movsl
xchg
in
add
sub
clc
icebp
jp
add
shrl
and
iret
shl
pop
arpl
mov
sub
stos
add
or
aad
mov
add
add
add
add
and
hlt
dec
les
in
add
add
adc
mov
add
ja
pop
xchg
fistps
in
lods
push
lock
or
mov
cmc
ds
out
xchg
push
fists
dec
mov
sahf
leave
push
pop
jnp
inc
ja
jmp
mov
or
inc
aam
add
pop
jl
ds
int3
jae
rolb
in
sub
xchg
mov
enter
sarl
das
jge
push
push
mov
mov
lock
rsm
faddl
sbb
jmp
dec
pop
cli
jne
add
and
daa
add
aad
shll
loope
sub
clc
aad
jae
inc
add
dec
push
add
imul
mov
fsub
push
push
add
fsubrs
cwtl
nop
pop
pinsrw
xchg
shr
jge
stos
sub
push
stc
das
cs
add
pop
or
or
push
mov
xor
xor
dec
pop
mov
std
or
imul
adc
add
insl
orb
xchg
xor
mov
push
add
adc
pop
outsl
add
pop
nop
and
int3
xchg
pusha
or
inc
push
adc
bound
lock
call
subb
jmp
inc
arpl
sti
push
add
mov
mov
and
lods
scas
leave
push
xchg
sbb
push
and
add
cld
mov
sub
loopne
dec
push
xchg
pusha
int
scas
test
fucomi
cmp
das
cmp
in
xchg
dec
dec
lods
pop
divb
adcb
push
pop
and
jbe
test
imul
inc
ret
das
inc
add
inc
xchg
mov
add
add
popf
fmul
out
push
lock
and
ss
stc
inc
add
dec
pop
and
ds
xchg
nop
in
jnp
clc
push
inc
add
aad
inc
addl
jb
add
mov
mov
imul
pop
mov
fiadds
in
stos
add
lods
stos
cmp
mov
je
dec
push
in
inc
xchg
dec
aam
daa
add
sbb
cli
mov
mov
mov
mov
dec
mov
mov
xor
and
pop
add
xchg
mov
out
inc
jns
adc
xchg
sbb
test
jle
in
inc
lds
inc
jle
xchg
mov
icebp
mov
and
ja
add
cli
imull
in
add
sub
out
lcall
in
call
xor
mov
push
enter
andb
hlt
inc
push
sub
mov
sub
fimuls
cld
cwtl
push
mov
add
add
aam
and
leave
push
popa
popf
pop
sahf
mov
add
aaa
cmpsl
jae
jmp
faddp
scas
xchg
loopne
dec
inc
adc
sub
push
call
dec
mov
ret
call
ljmp
jl
xchg
adc
leave
add
addr16
nop
lret
mov
jmp
sub
push
pop
in
mov
jle
mov
cmc
add
pop
pusha
mov
push
call
dec
add
jmp
and
sub
xor
shlb
add
and
add
jmp
and
in
leave
mov
decb
add
adc
mov
or
adc
cmp
cmc
sbb
jb
das
lods
sbb
mov
shrl
jge
add
pop
mov
cmp
and
fidivs
and
lds
add
in
mov
add
jnp
lods
xor
test
inc
fcmovbe
sbb
add
rorb
xchg
add
adcl
add
cmp
ja
and
out
jae
inc
not
cmp
rcr
add
push
dec
data16
mov
jmp
cmpsb
and
jb
push
nop
icebp
add
push
cmpsl
and
jmp
add
ja
ror
mov
add
ret
mov
dec
add
dec
adc
push
jge
inc
pushf
nop
xchg
xor
add
mov
xchg
mov
add
inc
fsubr
mov
cwtl
addl
push
dec
jl
dec
fwait
mov
inc
in
insb
push
pop
inc
cmp
add
xor
mov
orb
push
mov
jmp
mov
sub
and
mov
xchg
sahf
imul
add
push
dec
and
iret
and
cli
test
pusha
push
ds
fs
cwtl
pop
add
dec
push
jmp
add
sub
sbb
rcl
add
jo
stc
clc
adc
add
cli
stc
jb
add
adc
pushf
vmovhps
mov
xchg
sar
push
sub
pusha
mov
add
ja
push
jae
add
mov
cmpsl
mov
or
sahf
push
inc
hlt
and
stc
adc
push
ja
or
add
add
add
jp
push
add
adc
add
clc
sarb
call
mov
pop
inc
xchg
push
icebp
sub
nop
inc
xchg
jbe
add
adc
test
add
jl
pop
sub
fiaddl
jne
add
and
add
arpl
add
call
add
mov
nopl
jno
and
mov
test
mov
insb
fs
mov
sub
mov
or
add
rep
push
xchg
fistps
int3
cmp
or
call
mov
mov
add
adc
adc
loopne
in
adc
dec
pusha
out
pushl
sbb
frstor
add
pop
and
stos
pop
xchg
xchg
dec
add
and
add
iret
dec
sbb
mov
int3
push
sbb
clc
orb
adc
cwtl
sub
jmp
movsb
add
hlt
enter
sub
jae
shlb
inc
imull
add
insb
movsb
xor
ljmp
add
stos
lea
pop
inc
lret
add
dec
out
adcb
add
daa
push
adc
jl
loopne
push
add
xlat
push
lea
inc
add
movsb
stos
xor
add
or
jmp
stos
sbb
out
and
idivb
cwtl
popa
add
lock
pop
lods
sub
push
mov
add
ret
cmpsb
add
xor
add
cwtl
dec
test
add
pop
jns
pop
mov
mov
jnp
addb
cwtl
call
add
lahf
loopne
adc
pop
ret
push
sub
add
sbb
ljmp
dec
add
xchg
mov
call
mov
add
out
mov
cmp
mov
jnp
loopne
xchg
or
push
dec
inc
jmp
cltd
xchg
sbb
inc
dec
pop
cmp
jne
lcall
xchg
mov
add
adc
push
and
int3
add
mov
add
clc
xchg
ljmp
mov
mov
repnz
leave
rolb
xchg
pop
mov
cmp
push
fmul
jg
sub
pop
jbe
add
pop
rcr
fdivs
dec
inc
or
dec
jns
add
fcmove
xchg
dec
shl
or
shl
mov
pop
xchg
cmpsl
add
insl
add
mov
dec
popl
xor
int3
lock
cmp
pop
xorl
pop
out
out
lret
test
add
jns
mov
sbb
hlt
je
sub
daa
jae
push
out
mov
push
dec
cmc
mov
jg
fsubrs
lahf
add
sub
aam
add
in
or
push
mov
mov
add
xchg
mov
iret
test
shr
lea
sbb
sbb
xor
lock
push
out
pop
xchg
cmpl
enter
push
push
mov
add
call
sbb
movsl
hlt
rcll
or
imul
andb
push
movsl
js
add
sbb
cld
adc
adc
rcl
jge
push
leave
scas
clc
xchg
rolb
leave
shrl
int3
add
and
rclb
push
push
add
pop
inc
roll
inc
fidivl
or
or
repnz
cmp
xor
pop
add
sbb
xchg
addb
cmpsb
jno
add
pop
clc
les
xor
mov
add
dec
jne
xchg
out
push
sete
or
xchg
fsubl
pop
push
out
jmp
pcmpeqb
add
clc
pop
mov
add
adc
js
add
pop
dec
cld
out
test
add
cwtl
movsb
andb
push
push
push
add
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
test
pmulhw
roll
jns
pusha
fnstcw
mov
push
data16
push
jno
add
xchg
repz
mov
inc
push
push
adc
repz
add
addr16
and
jle
dec
adc
add
cwtl
jae
scas
insb
sub
pop
adc
clc
popa
out
xchg
sbb
xor
dec
cwtl
add
ret
pop
xchg
jl
jl
add
inc
push
outsl
push
dec
jne
add
popa
and
push
add
inc
loopne
out
pop
add
test
pop
cmpsb
out
imul
aad
clc
ficoml
sub
sbb
leave
jne
cwtl
xlat
clc
add
and
jb
mov
sbb
push
nop
jge
ret
aas
int3
arpl
insb
lahf
and
je
sbb
nop
aam
shlb
fsubs
data16
add
push
cli
push
mov
cmp
add
scas
add
dec
jo
cmp
adc
push
cli
lock
pop
add
loop
cmp
pushf
pop
add
fisubrl
sbb
or
pop
mov
cmp
je
or
push
add
cli
stos
and
aam
jp
sbb
jo
inc
in
jecxz
loope
add
jg
pop
test
cmp
incb
add
mov
mov
ficoml
xchg
adc
push
pop
xor
mov
sti
js
add
add
out
mov
cli
xchg
xor
cmp
subb
add
jmp
add
stos
pop
idivb
add
dec
test
mov
aas
jo
dec
sbb
imul
adc
and
psllw
mov
dec
pop
jecxz
adc
cs
add
xlat
lcall
or
xchg
cmpb
push
inc
xchg
flds
in
cmp
lea
daa
xchg
fdivr
or
lcall
add
aas
jecxz
imul
add
dec
xchg
and
cwtl
add
adc
bound
mov
inc
std
cmp
je
pop
testl
xchg
aaa
and
aas
push
inc
ds
cmp
pop
mov
mov
or
or
adc
push
mov
in
lock
loop
add
aam
cmp
adc
in
mov
cld
sub
jp
pop
hlt
pop
dec
add
xor
jmp
movsb
jge
out
dec
inc
pop
add
push
cmpsl
jmp
pop
sub
pop
cmp
andl
push
enter
dec
inc
addb
icebp
mov
add
fsubr
adc
jnp
inc
enter
pop
sub
add
xchg
loope
test
inc
fistps
cmpsl
pop
add
push
cld
sbb
aas
xor
add
les
rcrl
xchg
xchg
out
jo
mov
in
das
test
pop
stc
jmp
jo
cmp
rcrl
pop
xchg
subb
fs
add
hlt
clc
jnp
mov
rcr
jle
add
stos
adc
mov
enter
leave
cli
add
jb
mov
mov
jno
sub
arpl
dec
add
or
mov
add
pusha
xlat
stc
jl
dec
mov
out
add
cli
cmp
add
sbbl
and
movsl
xchg
fprem
ds
lahf
inc
aad
jae
push
fs
push
fsub
and
sbb
insb
cmp
add
mov
sub
xor
cld
cli
popf
je
js
les
pusha
xor
add
ja
mov
sub
push
mov
mov
jl
les
es
cmp
enter
lahf
es
add
inc
pop
imul
shl
shlb
or
pop
push
add
inc
lock
mov
pushf
add
xor
test
repz
add
add
push
add
push
lret
daa
pop
in
add
push
cmp
jbe
cmp
lcall
add
dec
loopne
inc
cmpsl
loope
dec
cmp
cmp
addr16
mov
push
iret
fcoms
cmpsb
popa
adc
pop
loopne
cld
push
in
inc
cmpsb
mov
out
jg
sbb
mov
cmp
jl
mov
jg
add
es
aam
dec
sti
cld
movsl
or
mov
inc
rorb
aas
add
les
and
add
loop
sbb
mov
imul
push
sbb
lahf
rcrl
aam
shrl
loop
imul
ror
in
and
and
out
add
repnz
mov
mov
mov
js
rorb
push
add
imul
add
in
mov
sarb
cs
dec
pop
jno
push
mov
loop
out
loope
in
lahf
pusha
repnz
add
sbb
and
cld
cmp
ficomps
je
jno
push
inc
inc
adc
filds
jb
cmp
mov
popf
add
dec
mov
add
ljmp
sbb
mov
or
push
xchg
sub
frstpm(287
sub
inc
add
jecxz
nop
add
repz
mov
adc
jge
add
push
lods
pop
pop
addb
cld
scas
xchg
and
cmpsb
sbb
fmull
enter
push
cmp
loope
adc
out
add
test
loop
xor
clc
fadds
lahf
or
sbbb
add
adc
add
lea
jnp
inc
xor
xchg
outsb
xchg
push
rcrb
call
daa
add
fcoml
mov
in
add
xchg
or
jno
xchg
adc
inc
push
pop
and
test
or
jmp
mov
pop
mov
adc
push
repnz
add
imul
fstl
mov
sbb
mov
loopne
push
test
add
mov
je
pop
nop
mov
sub
addl
mov
push
les
addb
sbb
inc
pushf
or
fiadds
outsb
dec
jle
popf
pusha
aad
das
or
jnp
flds
andl
add
adc
xor
sbb
sub
cmp
aam
cwtl
sbb
xchg
jg
add
xchg
es
in
cmp
mov
xchg
xchg
sub
mov
dec
jmp
flds
sub
push
lds
decl
hlt
lahf
imul
cmp
dec
add
fdivl
add
sub
lahf
pop
mov
aam
fildll
jmp
mov
add
inc
inc
push
sbb
xlat
js
xchg
add
pop
xor
and
add
clc
sub
add
cld
pop
aam
push
push
adc
dec
adc
add
xchg
mov
int3
push
inc
add
pop
add
dec
add
in
sub
out
jg
ds
imul
and
lods
jne
sub
xor
or
rclb
mov
push
stos
and
add
lret
ss
jp
push
sub
add
inc
xorb
add
pop
cmp
pop
mov
adc
mov
add
mov
dec
add
jne
icebp
add
ss
add
cmpsl
testl
sub
hlt
add
pop
lds
mov
lock
push
push
mov
xchg
add
cmp
inc
dec
enter
and
xchg
test
add
out
push
int
mov
sub
add
xor
pop
dec
push
call
add
sbb
jmp
xlat
jb
lods
sti
arpl
push
jae
mov
sub
sub
add
jecxz
rorl
add
sub
pop
add
cmp
cmp
rclb
dec
add
mov
push
je
or
pop
adc
cli
cld
xor
mov
adc
sub
pusha
rorb
lock
sbb
cli
lds
jmp
mov
or
decl
rorb
cld
mov
ja
add
mov
adc
js
mov
xchg
xchg
xor
inc
mov
shlb
mov
add
fildll
jecxz
sub
lock
lock
mov
test
dec
push
xchg
pop
test
pop
out
add
pop
out
jl
pop
scas
lret
sti
fistl
push
adc
stos
stc
mov
or
jmp
pop
push
mov
dec
adc
sbb
xchg
lcall
add
pop
fsub
add
inc
scas
adc
mov
jnp
cld
leave
shlb
ja
inc
dec
adc
push
lods
pusha
and
or
gs
lea
jecxz
cmp
loopne
cld
dec
add
ss
sbb
popf
push
out
add
lods
loopne
repz
add
xchg
out
clc
cmp
loop
mov
xchg
daa
push
frndint
or
inc
mov
insl
jnp
jno
mov
push
daa
cmp
mov
loope
jle
dec
jbe
xor
cltd
jmp
fidivrs
jne
lds
insb
push
pop
pop
inc
pop
stos
and
sub
fwait
out
enter
aas
jne
lahf
aad
sbbb
enter
les
addb
add
inc
dec
jne
sahf
rcll
rclb
push
add
iret
inc
cmpsl
sbb
cmp
int
cmp
push
lea
or
mov
movsb
add
jo
add
mov
mov
int3
sbb
adc
and
out
add
add
push
add
jnp
fs
adc
add
and
leave
pusha
fcmovne
jae
add
loop
mov
mov
or
push
dec
in
mov
dec
add
mov
pminub
notl
mov
subb
sub
xor
or
or
lods
testl
cmpsb
cld
mov
mov
mov
dec
addr16
adc
stos
lods
adc
pop
mov
cmp
push
inc
adc
mov
xor
mov
add
jle
popl
and
sub
sub
mov
pop
cwtl
mov
fldl
cmpsl
jp
sub
xlat
dec
in
adc
mov
popf
jno
imul
push
adc
add
mov
mov
aaa
test
lret
mov
and
dec
push
adc
inc
mov
mov
pop
inc
test
jge
jb
inc
test
mov
mov
cmp
sub
lret
popa
mov
inc
or
insl
mov
addb
ret
inc
push
mov
mov
pusha
mov
ljmp
insl
adc
mov
xchg
pushf
add
xor
push
add
and
mov
ret
add
fdivrp
xor
add
xchg
adc
movb
push
data16
jge
sub
aaa
je
mov
clc
adc
nop
add
mov
mov
sbb
push
add
or
sbb
sub
add
dec
or
cld
jo
sub
xchg
jns
add
adc
fmuls
aad
add
pop
bound
push
mov
rcrl
push
sbb
sub
aaa
lea
add
mov
or
or
jecxz
mov
in
add
out
jo
push
stos
fldenv
in
rclb
push
je
mov
push
jae
je
add
adc
sub
test
lods
cmp
and
les
or
rcl
repnz
adc
inc
cltd
cmpb
mov
add
test
and
add
ljmp
add
les
add
xor
push
sub
popf
sbb
clc
add
imul
add
cmp
jp
pop
adc
cmp
inc
add
mov
cwtl
pop
add
loop
scas
push
xchg
mov
push
call
pop
or
rolb
cmp
rcll
jp
pop
pop
test
pop
push
sub
push
jmp
push
jl
mov
cmp
mov
call
ljmp
cmp
add
or
add
fs
jecxz
fsubr
push
add
das
pop
ret
xchg
inc
roll
or
mov
xor
pop
cli
shll
xor
cli
imul
pop
les
cmp
push
adcb
dec
dec
aaa
add
inc
jne
add
add
test
pop
xor
cwtl
jnp
jno
add
lcall
push
or
inc
inc
or
dec
sbb
or
adc
inc
add
xor
jnp
pushf
add
add
je
mov
mov
add
mov
xchg
roll
ljmp
lahf
mov
andl
pop
sub
lock
daa
jnp
add
mov
ja
adc
and
ds
ljmp
js
mov
xor
push
push
jl
int
pusha
push
adc
pop
mov
inc
stos
mov
mov
scas
mov
inc
jns
inc
dec
jg
notb
add
push
pop
lcall
pop
adc
fcompl
mov
mov
mov
add
add
add
push
addb
inc
add
push
sbb
repz
or
push
daa
add
lds
adc
lret
lea
push
fsubrl
les
idivl
imul
and
incl
cltd
dec
andl
add
pop
sbb
add
push
mov
scas
add
cmp
mull
jno
push
adc
in
sub
and
popf
add
jg
mov
push
ja
popf
adc
sbb
add
ret
push
pop
pop
adc
test
aas
pop
jecxz
sahf
push
mov
lods
aam
xlat
add
add
or
enter
loop
pop
mov
ficomps
inc
mov
inc
sub
add
fmuls
adc
inc
add
jge
dec
add
test
daa
and
sarl
add
adc
cmc
clc
adc
xor
cmpsl
scas
push
mov
push
dec
subb
sbb
add
test
pop
adc
aam
and
mov
mov
rclb
pop
mov
xlat
shlb
dec
stos
jg
test
mov
in
ja
add
pusha
das
pop
sbb
dec
and
adc
add
rcll
or
sbb
ljmp
add
and
adc
sar
sbb
std
pop
xorb
testl
xor
ret
syscall
mov
fildl
xor
into
push
add
push
adc
fwait
sbb
ljmp
and
sbb
add
pop
cltd
jg
aam
jb
insb
or
cli
cs
or
push
add
sti
ret
add
jns
jmp
add
out
and
mov
add
call
lcall
or
add
push
push
xorb
rcl
xor
push
and
sub
addb
addr16
lock
stc
repz
adc
cmc
pop
hlt
add
test
push
mov
cmpb
xchg
mov
mov
push
sar
movlps
icebp
pop
incl
sbb
add
or
add
sarb
xorb
mov
cld
add
mov
pop
ror
pop
add
cmc
xchg
pop
neg
add
mov
cmpsl
add
jecxz
divb
jo
sbb
loopne
sub
mov
stos
pop
add
mov
iret
cmp
and
adc
cmp
orb
rcrb
mov
std
push
jge
or
sbb
in
jle
cmp
pushf
dec
inc
es
add
mov
mov
adc
dec
mov
jb
cmp
push
adc
frstor
addr16
shll
push
push
add
mov
and
sub
lret
add
repnz
decb
add
xchg
lds
inc
add
mov
cwtl
fldl
xor
mov
lock
cmp
xor
iret
pop
addl
pop
xor
stc
cmp
or
sub
stos
sub
sbb
lea
ret
addl
add
lret
add
shl
and
incb
push
push
or
ds
jb
add
lea
dec
sub
xchg
add
add
rol
aam
push
sbbb
lcall
pop
js
popa
movsb
cmp
add
mov
xchg
add
pop
repz
pushf
subl
and
sub
xor
dec
add
xchg
add
cmpsl
out
add
pusha
adc
cmp
add
cmc
lea
add
addr16
or
add
sbb
adc
jmp
pusha
ret
js
dec
decb
add
mov
add
les
push
xor
push
add
add
sbb
sub
dec
push
shlb
jbe
mov
pushf
adc
sub
icebp
xor
paddsb
cwtl
inc
mov
add
mov
mov
cmp
or
add
rcrb
arpl
add
xor
add
stos
pop
push
cmp
pusha
addb
or
mov
daa
add
addr16
xor
mov
add
pop
and
mov
jl
ret
dec
andb
or
mov
push
fidivrl
add
push
sub
add
dec
or
or
pop
xchg
clc
mov
add
push
add
push
add
dec
fildl
pminsw
cmpb
add
sub
inc
push
dec
adc
or
and
xor
and
pop
ret
push
frstor
xor
jle
fcom
add
inc
xor
mov
shrl
add
xor
sbb
shrb
add
xchg
ja
and
add
dec
push
adc
lret
mov
adc
lods
xchg
aam
adc
add
adcl
add
cmp
add
xlat
push
xor
pop
add
daa
sbb
pop
xor
or
cmp
jecxz
sbb
dec
repz
or
loope
cmpsb
add
push
mov
repnz
add
cmpb
mov
out
ds
mov
add
xchg
add
or
mov
pop
push
lahf
xor
adc
in
mov
cs
xchg
sbb
mov
data16
dec
pop
sbb
and
or
out
loop
sbb
add
adc
mov
add
jo
add
cltd
or
add
cmp
add
and
jb
cmp
push
xor
enter
pop
inc
repz
or
loop
sbb
or
movsb
loopne
push
dec
cwtl
pop
jb
adc
out
jmp
dec
repnz
adc
inc
add
xchg
cli
mov
out
int3
das
lds
xchg
call
inc
and
out
cmpsb
in
daa
pusha
xor
jp
pop
or
mov
pop
dec
dec
jno
iret
mov
pop
fs
movsl
jnp
add
test
fcmovne
mov
and
add
movsl
lea
xchg
pop
xor
add
test
fiaddl
or
inc
lcall
sbb
in
jle
cs
sbb
ds
cltd
mov
aam
add
push
sub
pop
and
jb
add
pop
pop
add
mov
lcall
mov
pop
cmpl
cwtl
or
ljmp
pop
mov
add
or
out
inc
mov
mov
push
fwait
pop
xor
dec
adc
iret
or
sbb
add
inc
popf
xchg
push
push
adc
add
inc
add
jo
and
jno
add
sub
inc
add
ljmp
stos
adc
mov
mov
xlat
pop
test
add
push
fbld
jge
std
mov
sub
push
testb
push
cli
push
imul
sub
gs
ds
add
rcrb
mov
aas
mov
lcall
xor
and
sbb
mov
enter
cs
fdivrl
mov
or
outsl
les
nop
add
fisubrl
adc
repz
sbb
shll
mov
add
push
add
daa
clc
pop
xor
xchg
add
ret
pop
inc
fisttpl
dec
add
mov
sub
sbb
add
pop
test
pop
mov
fwait
mov
rcrb
mov
add
loop
xchg
je
inc
in
add
pop
mov
sub
mov
sbb
movsl
test
xor
sbb
pop
push
and
add
mov
rclb
aad
mov
xchg
lods
faddl
pop
ljmp
add
sbb
and
dec
add
ja
sub
xor
adc
and
adc
add
xchg
dec
inc
test
xor
cs
jle
push
inc
pop
xor
xchg
ljmp
mov
pop
dec
packsswb
push
loopne
xchg
mov
add
mov
ret
test
mov
cmp
cmc
jmp
pusha
push
test
add
aam
add
mov
mov
mov
and
push
jge
jl
popa
or
add
dec
push
sti
add
add
sbb
dec
in
repnz
pop
rcrb
pop
rolb
adc
into
or
out
xor
add
daa
insl
dec
mov
lds
push
dec
addr16
add
in
sbb
cmp
pop
add
or
sahf
push
stos
sbb
lret
ret
adc
aad
ds
sub
add
adc
cs
int3
mov
inc
jmp
add
add
xor
stc
pop
arpl
or
or
shr
mov
ja
push
add
dec
fsubrs
mov
sbb
ror
sbb
push
fs
mov
call
push
pop
add
pop
push
sub
js
inc
cmc
adc
clc
test
or
xor
out
lahf
adcb
jmp
jo
mov
rclb
jg
add
ja
out
add
sbb
mov
xchg
add
jmp
adc
sbb
or
mov
or
add
cld
dec
push
dec
add
jbe
lcall
lea
in
subb
daa
leave
andl
es
add
outsb
and
out
mov
pop
mov
xchg
add
shl
sbb
adc
hlt
in
fstpl
pop
adc
int3
push
jle
jnp
test
cmp
inc
pop
rolb
out
jg
add
push
xor
mov
add
adc
aad
xor
divb
rorb
push
subb
mov
hlt
popl
mov
test
cld
cs
stos
cmp
add
shll
pusha
mov
or
in
rolb
sub
loopne
movsb
or
xlat
nop
sub
inc
mov
pop
lock
adc
or
pop
rcrb
xlat
add
incb
icebp
push
jecxz
and
jnp
add
std
jmp
hlt
in
add
adc
add
lea
and
lock
fsts
inc
fs
or
iret
push
add
push
rcr
gs
mov
leave
add
fistpll
pop
add
lock
add
xchg
pop
clc
cmp
dec
xchg
test
mov
add
popa
inc
repnz
iret
call
sub
inc
shlb
int3
loopne
add
out
pusha
adc
int3
pop
cmpsb
add
mov
pop
push
add
mov
push
pop
add
ud2
leave
sbb
cmp
mov
jne
int
mov
mov
mov
adc
add
cmp
or
push
repz
pop
fsubr
loopne
aam
lcall
sub
movsb
push
dec
adc
mov
les
leave
repnz
ja
add
lret
sub
xor
cli
jne
mov
or
push
popl
loopne
dec
rorb
add
ds
and
ret
testl
cltd
bswap
les
mov
add
std
add
sbb
add
cld
add
mov
leave
enter
pop
xchg
and
add
add
das
inc
mov
mov
mov
adc
add
jbe
xor
dec
loop
xchg
or
push
sbb
pop
js
loopne
mov
clc
push
cwtl
or
sbb
add
sbb
divl
imul
movsb
orb
mov
xchg
push
jg
lock
in
add
imul
adc
cmpsl
add
push
mov
rolb
lea
push
stos
sub
push
and
movhps
rclb
add
xchg
add
scas
push
mov
jmp
dec
sub
mov
or
add
xor
jnp
sbb
out
sbb
in
clc
cmpsb
and
pusha
inc
cli
bound
dec
add
xor
or
je
cmp
aaa
add
cmpb
jne
inc
add
dec
loopne
jmp
or
mov
push
jo,pt
add
cmc
jne
add
loopne
sbbl
pop
add
out
add
pop
pop
push
adc
add
dec
xor
mov
test
repnz
or
cmp
dec
xorb
pop
addb
jne
push
xor
push
pusha
sub
pop
xlat
lea
adc
int3
pushl
add
push
mov
add
pop
mov
pop
xor
push
push
das
jmp
add
mov
mov
fists
adc
jmp
mov
add
xorl
stos
sbb
not
add
add
data16
jg
push
dec
add
mov
cmp
cmp
dec
and
mov
lods
push
push
mov
adc
fcmovbe
mov
enter
pop
call
gs
jae
pop
add
repnz
add
rol
add
pop
adc
out
fnstenv
xchg
in
int
mov
lds
or
sub
gs
push
inc
adc
mov
ud1
pusha
sub
loop
push
push
xor
ret
and
leave
xlat
sub
pop
sbb
jmp
es
roll
cmp
les
lret
pop
jl
je
add
cs
in
shl
pop
mov
cmp
xor
ja
add
mov
sbb
xor
jmp
lret
dec
cmpsl
push
out
adc
pop
cld
inc
jb
movsl
add
aam
call
or
pop
jns
adc
int3
movsl
push
add
xorb
popf
push
mov
add
test
sbb
ret
dec
vmovd
add
in
sub
push
cmpb
imul
cs
addr16
not
orb
inc
movsb
sbb
add
jecxz
movsl
and
push
xor
sub
out
ja
lret
testl
int
addl
adc
ret
loop
xchg
hlt
pop
pop
sahf
cld
adc
add
push
inc
cmp
add
test
cmp
inc
enter
stos
repz
xchg
pusha
daa
shlb
pop
in
pushf
add
or
and
pop
jb
cmp
cmp
subb
xorl
subl
sbb
add
push
and
sarb
cs
sldt
sub
ds
lahf
int3
and
sbbb
adc
popl
ret
inc
icebp
push
repnz
or
push
enter
in
iret
and
and
sub
roll
fisttps
jle
repz
push
add
pop
sar
aaa
add
and
icebp
faddl
xlat
xchg
mov
push
dec
push
push
xchg
data16
sbb
sub
cmp
mov
or
add
rclb
push
xchg
lods
insl
sbb
ficoms
add
mov
and
xor
adc
clc
popa
mov
out
loop
mov
jp
mov
inc
xorl
add
or
lea
mov
add
mov
push
mov
push
inc
mov
mov
add
hlt
and
out
jb
addr16
cli
orb
inc
xchg
cmc
adc
leave
pop
enter
dec
add
push
faddl
mov
sbbb
xchg
aad
in
fistpll
cmp
test
push
call
es
outsl
xchg
add
push
mov
out
bound
xchg
adc
aas
push
jne
xchg
cwtl
out
pop
adc
add
imul
pusha
push
popl
add
repnz
sbb
pop
fiaddl
lock
add
scas
out
mov
and
movsl
push
fs
adc
repnz
jbe
add
add
pop
ret
pop
iret
dec
dec
inc
push
mov
xchg
je
js
or
sub
xlat
jle
jg
add
sbb
roll
sbbl
adc
jbe
cmpb
popa
cwtl
cmp
mov
add
mov
test
add
pop
nop
mov
push
loope
icebp
shr
add
push
cli
mov
add
fisttpl
faddl
ret
sub
testb
add
mov
ret
adc
testb
pop
lds
flds
fstpl
testl
fiadds
xchg
and
aas
add
push
add
ja
mov
add
inc
xor
pop
clc
adc
loopne
lock
repz
fadds
adc
xlat
xchg
popa
enter
cmpsl
add
cmp
sbb
loopne
adc
inc
testl
inc
rolb
jnp
inc
xor
add
adc
decl
lock
add
hlt
daa
and
flds
add
dec
test
add
popf
outsl
adc
sbb
cmp
mov
mov
subl
data16
sub
jns
push
mov
cmp
sahf
shl
dec
xchg
fcos
call
and
insl
loopne
inc
hlt
push
pop
cmp
mov
add
pop
lahf
mov
adc
pop
add
mov
shrb
ja
iret
dec
add
cmp
in
sub
fiaddl
nop
jp
popa
sbb
add
rorb
xorl
roll
mov
add
lock
rol
aas
xchg
push
add
add
pop
out
test
add
scas
sub
leave
insb
inc
mov
shl
out
pop
pop
jmp
push
lods
add
jecxz
pushf
inc
cmp
mov
jmp
aam
test
jo
or
or
pop
push
or
xor
repnz
push
pop
in
xor
inc
in
pop
or
pop
sub
add
pushl
mov
cmp
xchg
imull
daa
add
ja
inc
add
std
call
add
inc
mov
pushf
fucomip
sub
add
mov
mov
push
xchg
aam
push
pusha
shlb
roll
jne
shrl
jl
xor
stc
and
xor
add
jge
pop
add
pop
loopne
sbb
xorb
add
pop
imul
ret
inc
mov
inc
mov
stc
in
add
cmp
test
ret
bnd
jecxz
pop
mov
xchg
fstl
and
ret
sahf
mov
add
inc
popf
movsb
into
xchg
leave
dec
and
xchg
outsb
pop
inc
cmp
jle
add
dec
lods
sub
test
sub
ror
inc
repz
fists
xchg
xchg
mov
add
das
lock
add
dec
mov
add
test
add
lds
sbb
xchg
mov
rcr
push
fwait
data16
mov
stos
dec
pusha
sub
add
out
mov
jne
lcall
jno
push
jbe
nop
jne
orb
clc
outsb
loopne
ja
subl
and
fcoms
lock
mov
mov
adc
push
add
push
adc
push
lea
add
add
out
dec
add
inc
loope
pop
mov
loopne
xchg
mov
pop
add
mov
addl
sub
dec
cmp
andb
push
pop
xor
pushf
and
dec
mov
or
inc
dec
jge
dec
mov
or
push
push
cmp
lcall
popa
je
stc
add
cwtl
clc
xchg
sbb
xchg
out
mov
popa
sub
mov
dec
pop
les
jb
outsb
mov
repz
test
add
pop
sub
pusha
add
sub
mov
jecxz
push
arpl
add
adc
test
dec
mov
dec
dec
imul
xchg
pop
sarl
incl
ret
mov
and
fadds
jo
ljmp
in
dec
lcall
nop
loopne
aam
ficoms
dec
adc
mov
adc
cs
in
sbb
into
mov
xchg
inc
adc
or
cmp
fdivl
add
and
test
add
rorl
mov
push
enter
out
dec
lods
mov
nop
xchg
push
jb
loop
jnp
in
shrb
in
mov
lea
add
mov
adc
cli
lret
add
pop
mov
lock
das
push
push
add
cmpsb
int3
mov
push
push
push
pop
adc
and
cmp
jb
pop
add
mov
fwait
mov
in
pop
jbe
addb
add
push
lea
add
adc
nop
lods
add
cs
and
add
push
jmp
js
and
mov
add
pop
cmp
sub
es
inc
insl
mov
add
adc
repnz
sarb
js
cld
aaa
orb
sbb
mov
jl
or
lea
cmp
sbb
lock
call
adc
in
stos
addl
rclb
pop
xor
push
fwait
jl
sub
sbb
jg
rolb
push
insb
loop
add
lea
pop
addb
xor
add
sbb
imul
jp
push
int
inc
add
inc
xchg
mov
rcl
lcall
ljmp
jp
sarb
rorb
cmp
xchg
icebp
sarb
mov
rolb
call
xor
fdivrp
mov
aas
add
or
popa
or
fs
dec
call
icebp
add
sbb
mov
pop
fnsave
mov
add
dec
jge
scas
xchg
sub
dec
sbb
inc
faddl
lret
popa
and
mov
lods
push
stos
or
add
and
xchg
adc
jns
or
mov
add
add
add
push
pusha
popa
xchg
pop
jbe
add
pushf
push
pop
jge
sub
lea
rclb
rolb
jg
sbb
mov
aad
bound
test
jmp
mov
jecxz
addr16
adc
fsubr
xchg
icebp
lea
jp
imul
movl
add
roll
roll
ret
stos
das
rolb
pop
aam
inc
and
dec
and
add
xor
cwtl
loop
aad
daa
mov
outsl
ja
mov
aaa
mov
hlt
push
in
mov
imul
add
add
sub
push
fistpll
repnz
testb
cmp
dec
inc
add
push
mov
mov
or
cmp
je
inc
leave
cs
xchg
pop
pusha
jg
test
jbe
add
xchg
lahf
or
outsb
push
dec
cli
test
add
aaa
pusha
sbb
add
test
add
add
sub
ss
xchg
in
out
mov
fidivrl
add
push
mov
cmp
xchg
add
mov
or
push
push
mov
cmpsl
pop
xchg
xchg
sub
dec
adc
aaa
movsl
pop
push
xor
cltd
dec
adc
fwait
dec
or
adc
add
xor
sub
movsl
push
push
icebp
add
cmpsl
outsb
or
cmp
add
cwtl
popf
add
push
loope
add
dec
push
jg
push
xchg
jns
jmp
inc
test
add
sbb
add
push
sbb
xor
add
movmskps
add
icebp
das
mov
gs
mov
pop
dec
add
inc
stc
fidivrl
pop
lahf
adc
nop
add
icebp
mov
add
or
add
negl
pop
push
jl
sarb
adc
xchg
inc
sub
cmp
lret
sahf
xchg
mov
adc
mov
inc
adc
add
sub
sub
pusha
dec
or
mov
ret
enter
pop
add
or
xor
shll
cli
add
push
ja
add
cmp
add
add
fiaddl
in
stc
cld
outsl
xor
adc
pop
test
xchg
mov
rorb
push
lret
inc
push
andb
je
or
ja
xorb
or
out
dec
adc
push
in
rcll
nop
loopne
popa
or
push
add
and
aad
jbe
push
add
sub
xlat
xor
repnz
dec
add
cmp
and
add
ficoml
aad
mov
and
test
pop
mov
add
hlt
fwait
push
dec
pop
add
pop
mov
add
jl
addb
sti
mov
sbb
cmp
fldt
dec
push
jecxz
ljmp
xchg
jo
adc
add
xor
mov
negb
dec
add
iret
mov
adc
out
add
cmp
xor
cmp
lods
loope
add
cltd
aad
push
pop
lds
inc
push
adc
cmp
xor
rorb
enter
cmp
sbb
push
leave
mov
dec
jmp
shrl
sub
mov
mov
jge
cmp
dec
std
addl
or
adc
loopne
adc
pandn
daa
mov
adc
rclb
repnz
xchg
or
add
and
pslld
and
jecxz
push
inc
sbb
punpckhbw
xchg
rcrl
cmp
neg
movsl
mov
mov
jmp
pop
lea
sbb
outsb
imul
or
mov
clc
lock
ror
add
mov
enter
filds
add
add
ret
cli
mov
pop
pop
push
pop
shlb
mov
bound
push
add
jmp
ds
dec
sbbb
aas
adc
add
push
lock
cmp
jmp
pop
pop
jns,pn
jl
add
or
scas
dec
inc
iret
push
add
and
push
adc
adc
mov
cld
adc
cwtl
sub
roll
lret
xlat
mov
repz
adc
mov
pop
pusha
cmp
je
add
add
and
sub
roll
pop
xlat
mov
fwait
jne
pusha
adcb
and
addb
cli
mov
jecxz
scas
inc
jge
or
mov
add
imul
ljmp
js
and
dec
unpcklps
subb
out
or
add
cmp
add
enter
xor
movsl
data16
mov
mov
out
jmp
repnz
jae
sbb
xchg
add
ret
add
dec
inc
push
pop
ret
mov
stc
add
arpl
sahf
mov
xor
repnz
and
dec
sti
lods
jp
xchg
je
popa
adc
lcall
add
clc
nop
add
mov
mov
or
lea
add
adcl
xchg
aad
jno
add
out
xor
sub
int3
add
or
xlat
xor
pop
fadds
nop
inc
movsl
inc
out
jmp
or
pop
push
dec
adc
cmp
inc
mov
int3
fcomip
psubd
and
add
or
adc
shlb
add
aaa
push
jae
cmpb
add
or
push
jl
call
push
mov
repnz
mov
add
add
and
test
stos
xchg
push
mov
sbb
push
add
add
inc
adcb
cwtl
popf
add
pxor
dec
jmp
shll
jl
add
mov
xor
jg
add
mov
push
rolb
popf
mov
add
and
pop
sub
and
cmp
clc
xorb
jl
xor
add
test
and
mov
pop
call
lret
pop
cmc
int3
ljmp
repz
pusha
int
in
add
push
ret
orb
mov
jmp
fisubl
sub
clc
repz
add
ljmp
stc
insl
add
cmp
push
mov
push
mov
inc
lods
add
pop
or
hlt
sub
push
and
loope
nop
arpl
xor
fstps
imul
jmp
outsb
push
jb
cld
push
add
or
adc
clc
repz
adcb
jle
add
sub
add
adc
shll
pop
pushf
jns
add
lcall
push
cmp
mov
insl
pop
adc
add
inc
fistl
imul
jo
test
aam
pusha
dec
inc
lea
dec
lret
xor
jmp
add
inc
stos
aam
les
add
roll
mov
cmp
mov
popl
push
or
lds
sbb
jnp
pop
sub
loop
jge
mov
jns
pop
shl
adc
sub
aas
xlat
jo
add
cld
loopne
push
push
jl
add
mov
xchg
ljmp
das
add
loopne
repz
push
aad
cli
mov
imul
movsb
push
jnp
mov
add
xor
add
rcl
ljmp
dec
add
jo
mov
not
push
push
idivb
shr
jb
xlat
add
and
pop
jbe
loopne
add
ret
cmpsb
mov
cmp
add
cltd
pop
loope
inc
sub
addl
je
movsb
inc
add
cmp
fidivrs
aad
cmp
sub
xlat
sub
add
adc
adc
sbb
pop
add
fldcw
jo
add
cmp
jb
push
daa
xor
lret
jo
xchg
inc
loopne
xor
push
xor
lds
lcall
shlb
mov
jo
add
mov
dec
sarb
test
lea
sti
inc
add
ret
scas
call
add
imul
mov
cmp
jae
push
add
cmpsb
jl
pushf
jb
cwtl
loope
paddw
add
ss
dec
cltd
sub
pop
jge
push
xor
add
lea
add
addb
push
dec
pop
and
ss
add
sub
ret
fwait
fs
ds
push
sub
outsl
add
icebp
or
and
pop
sbb
loopne
jo
stos
dec
dec
mov
aaa
inc
jnp
roll
dec
int
cmp
lock
xchg
loope
cmp
imul
call
dec
test
pop
and
add
aad
loope
out
fmul
bound
add
push
add
mov
data16
pop
adc
add
mov
inc
cmp
jp
add
and
push
cmp
rcrl
sbb
or
loope
cmp
outsl
ljmp
pop
xchg
lock
pushf
pop
jae
add
push
cmpb
add
shrb
lea
sub
outsb
xor
or
sub
sbb
sub
dec
push
icebp
in
pop
add
mov
add
jge
xor
nop
dec
sub
adc
add
cmc
push
sbb
mov
pushf
xchg
pop
clc
out
pop
add
and
cltd
sbb
mov
adc
pop
jae
lods
cmp
or
rolb
je
cmpb
add
pop
mov
or
add
push
in
push
ljmp
mov
jb
push
dec
sub
add
int
scas
sub
xchg
cmp
addl
jl
loopne
add
inc
jp
mov
rcrb
jg
cwtl
popl
fdivr
dec
or
add
and
call
out
add
fildl
clc
cmc
add
dec
inc
mov
mov
add
sub
add
sbb
imul
loope
addr16
ret
test
add
adc
mov
aam
inc
repz
dec
fcoms
mov
add
cwtl
jne
add
adc
pop
xchg
or
int3
add
popf
cmpsb
daa
add
or
roll
jbe
es
push
add
pop
sbb
je
mov
push
enter
in
imul
jno
in
ja
add
inc
js
les
aad
add
and
leave
jnp
lods
enter
push
in
test
inc
inc
loopne
push
lds
push
dec
stos
adcb
adc
adc
nop
mov
test
add
clc
xor
jg
push
adc
cmp
xor
push
fdivs
loope
sbb
sbb
mov
hlt
aad
std
inc
nopl
loopne
add
push
xor
xor
test
test
add
ret
lahf
add
mov
jg
sub
fwait
mov
mov
fs
jo
add
mov
or
mov
push
loop
jne
mov
add
mov
das
cmp
lcall
cwtl
add
loopne
les
add
jbe
or
ja
mov
cltd
jae
inc
or
pop
push
add
jecxz
lock
or
push
call
ljmp
sub
daa
sar
add
lcall
les
add
pop
xor
mov
cmp
dec
add
sbb
xor
jl
add
pop
loop
repnz
pop
pop
jg
add
jns
jne
cwtl
xchg
sbbl
mov
jne
sbb
test
ret
out
xor
pop
push
scas
add
add
pop
roll
leave
imul
dec
loopne
push
mov
scas
pop
loop
lcall
daa
inc
sub
test
jne
or
pop
mov
cmp
add
push
stos
or
call
bound
ret
pusha
adc
cmp
add
inc
repnz
cmp
mov
mov
adc
stos
cmp
pop
aas
add
add
push
inc
test
mov
cli
sbb
and
fcoml
dec
mov
push
dec
xchg
inc
jb
and
rolb
vmaskmovdqu
lfs
push
xorb
inc
jmp
orl
add
orb
test
test
add
outsb
cmp
out
pop
add
xor
and
ret
pop
add
cltd
daa
and
stc
sbb
sbb
jno
loope
xor
mov
push
inc
jo
add
mov
push
dec
cmp
and
fs
add
fiaddl
outsl
scas
adcb
sub
or
mov
insb
fcoms
stos
dec
add
sbb
mov
and
push
or
adc
mov
leave
add
test
je
daa
mov
mov
jae
add
lods
mov
loop
stc
xor
add
repz
loope
add
add
mov
clc
add
lret
or
add
push
sub
cmp
and
jo
sub
lock
test
add
in
or
call
js
mov
pop
in
cwtl
dec
add
hlt
out
sub
aam
fildll
loopne
pop
jo
add
mov
or
and
repnz
mov
lock
add
and
outsb
and
inc
mov
push
push
push
jmp
pushf
stos
enter
daa
pop
xor
rcrl
pop
adc
push
pop
cmc
lea
shrl
add
xor
enter
add
adc
adc
push
and
and
repnz
cmp
mov
inc
jne
test
shlb
movsl
pop
fmull
mov
lea
push
mov
cltd
mov
add
orl
andb
mov
inc
add
push
xchg
mov
popa
jo
mov
aas
add
gs
mov
flds
rcll
or
or
fiaddl
dec
addb
add
inc
adc
mov
test
scas
and
cli
or
movsb
jecxz
inc
inc
mov
add
mov
nop
push
add
mov
pusha
sbb
pop
jno
imul
movsl
add
gs
jecxz
arpl
mov
mov
add
shll
mov
add
sbb
pop
lret
nop
sbb
pop
add
dec
aas
jo
lea
add
mov
sbb
mov
mov
mov
and
add
test
and
mov
js
add
cmc
or
dec
lea
rolb
js
fldenv
sbb
call
in
or
pop
jle
add
bound
testl
adc
ljmp
andb
cmp
add
movsb
jmp
inc
mov
sbb
add
mov
mov
jno
gs
pushl
push
stos
add
out
mov
incb
jecxz
push
mov
lds
add
or
and
pop
leave
pop
jle
pop
shl
mov
add
push
add
pop
inc
adc
mov
movsl
addb
fnstsw
test
in
ds
and
cmp
adc
inc
cmp
shl
inc
dec
jne
cmp
push
call
sub
pop
test
sbb
cmpsb
jne
push
adc
call
ds
push
add
ret
dec
imul
and
mov
add
aas
xchg
xchg
enter
add
fimuls
or
js
push
roll
jae
add
scas
test
pop
ror
add
sbb
add
xchg
xor
adc
and
dec
add
mov
testb
adc
aam
push
mov
cmp
mov
jge
pusha
or
pop
call
jb
mov
and
dec
orb
push
jae
push
test
into
inc
add
sarb
bound
mov
outsb
mov
sbb
jge
push
jnp
in
add
call
mov
hlt
inc
pop
lock
pop
inc
clc
sub
shll
gs
pushf
aam
cmpsb
add
add
das
aas
adc
push
jbe
int
es
clc
in
add
add
int3
mov
dec
leave
adc
xor
fbld
fs
or
movsb
add
mov
std
pusha
xchg
mov
jbe
shlb
lock
pop
sub
xor
adc
mov
push
daa
dec
ljmp
cmp
add
push
pop
lahf
and
xchg
iret
dec
add
jmp
inc
repz
out
add
mov
mov
inc
mov
xlat
push
sub
in
mov
sbb
jge
jb
pushf
push
adc
pop
mov
push
xchg
cmp
and
dec
xchg
addl
mov
push
add
inc
das
int
pusha
into
push
adc
inc
shlb
lock
imul
jne
sub
add
mov
xorl
test
mov
into
add
out
mov
mov
shl
add
push
xlat
std
test
sub
cmp
xchg
add
clc
jae
jle
add
mov
jl
mov
jmp
add
js
mov
add
and
and
or
push
jb
lret
pop
bound
dec
ss
adc
add
xor
push
xor
jmp
leave
sub
pusha
dec
and
cmc
rolb
scas
add
popf
push
ds
ret
sbb
clc
fadds
add
or
enter
movsl
divl
mov
test
jmp
dec
add
les
push
xor
mov
adc
mov
leave
add
sub
xlat
pop
fcmovnbe
add
outsl
lea
out
test
add
xor
outsb
in
pop
or
pop
sub
fbstp
mov
inc
mov
jnp
push
adcb
lret
add
enter
stc
outsl
loop
movsl
push
pusha
out
sbb
push
repz
shlb
addr16
mov
mov
mov
add
lret
repz
mov
gs
mov
stos
cmp
call
cwtl
jno
add
lea
jo
stc
sbb
sub
call
jmp
aaa
add
fbld
mov
inc
movsl
push
cs
pop
mov
mov
ja
stos
or
inc
daa
je
rorl
rcrb
das
inc
fs
addr16
xor
jl
add
sbb
push
fwait
dec
pop
mov
stos
pop
xorb
mov
add
jle,pt
adc
popf
subb
mov
fmuls
add
movsb
jle
cld
repz
mov
jb
cltd
add
push
out
addb
inc
imul
pusha
fcomps
pop
xchg
enter
lods
push
andb
add
jg
xor
add
inc
out
testl
cmp
dec
jbe
add
scas
dec
adc
lret
nop
call
mov
jg
add
fbstp
rolb
mov
inc
sbb
adc
lcall
jge
insl
clc
ljmp
call
push
adc
add
push
pop
sbb
mov
sbb
add
in
sub
mov
mov
adc
arpl
cmpl
adc
push
ja
push
stos
sbb
filds
xlat
sub
cwtl
cltd
add
call
ljmp
mov
push
xchg
pop
add
add
mov
test
pause
les
cwtl
add
negl
dec
pop
in
mov
sbb
cltd
test
loopne
mov
pop
mov
pusha
cmpb
and
cmp
loop
xor
mov
repz
rorl
pop
inc
mov
inc
pop
lret
iret
push
add
add
xchg
and
fisttpll
add
inc
hlt
rcrl
clc
or
cmc
fnstenv
mov
mov
movsb
push
pop
loopne
push
add
pop
mov
cwtl
xor
mov
jmp
aad
cmp
das
xlat
mov
inc
mov
add
adc
xchg
pop
je
inc
pop
mov
mov
cmp
add
add
xchg
addr16
imul
add
xor
int3
test
mov
add
cmp
mov
cld
cmc
in
add
cmp
pusha
mov
push
push
scas
sub
das
adc
add
add
lret
inc
pop
test
push
popl
pop
sub
mov
jne
mov
ljmp
shrb
add
xchg
add
fs
jge
add
jbe
data16
sbb
or
pop
shr
add
lcall
neg
je
add
jmp
out
je
jne
dec
add
jns
aaa
dec
iret
test
pop
in
mov
aas
pusha
and
add
sbbb
push
in
push
xor
sahf
pop
mov
pop
or
out
add
mov
std
dec
mov
add
xchg
and
and
push
loopne
push
mov
cltd
or
add
inc
sub
add
add
sbb
pop
add
ss
sbb
cmpsl
dec
and
jbe
and
test
xchg
xor
in
pop
fninit
subb
sub
cmp
lahf
add
repnz
mov
loopne
add
imul
sarl
xor
lret
movsb
addr16
add
inc
jbe
in
jp
push
add
mov
xor
rorb
lcall
scas
sbb
xor
movsl
pmuludq
or
mov
in
jo
add
mov
xor
faddl
mov
mov
add
jmp
xor
rolb
adc
negb
jno
add
and
out
orl
loopne
outsl
jle
add
stos
mov
xor
cmp
hlt
cmp
fimull
add
mov
or
push
call
or
add
addr16
pop
cli
adc
adc
mov
mov
divb
sub
rorb
sbb
sbb
jl
add
or
jmp
adcb
add
nop
xor
push
dec
rorb
lds
sub
adc
inc
iret
cmp
mov
test
sub
sarb
inc
dec
push
and
in
roll
add
loopne
aaa
test
ss
jae
lcall
add
test
jo
aas
add
pop
lds
push
rorb
and
cmc
sbb
add
inc
lods
mov
jl
add
fdivrl
xchg
and
add
ret
or
or
gs
add
pop
frstor
mov
jns
es
cmpsb
push
inc
or
inc
pop
pop
push
inc
push
push
sub
lret
int
jo
pop
mov
stc
inc
iret
push
pop
and
add
add
bound
std
cmp
aam
repz
push
jbe
adc
filds
lods
mov
inc
fsubr
mov
ret
imul
push
loop
push
mov
and
mov
add
xor
hlt
jg
or
testl
cmp
mov
pop
sub
pushf
adc
adc
push
jg
add
cltd
and
push
imul
mov
dec
pop
cmpb
sbb
dec
add
push
jne
and
sub
lea
cwtl
movsl
enter
add
leave
pop
addb
push
stc
jmp
add
pop
loop
cltd
fwait
push
cmp
int3
and
add
inc
pop
call
inc
push
push
mov
cs
sbb
xchg
js
jle
cmp
add
or
mov
add
xchg
xchg
dec
push
lock
or
mov
mov
stc
hlt
ficomps
shr
subl
add
repz
adc
mov
or
pop
sahf
xchg
psrad
add
adc
mov
imul
mov
add
mov
sub
push
imul
add
sub
dec
nop
pop
pop
mov
add
lds
and
mov
jo
in
cmp
add
sub
pop
mov
das
and
pop
mov
lock
sti
loopne
mov
add
adc
xor
add
lea
call
adc
pop
mov
xchg
xor
cwtl
push
ror
dec
rorb
cmp
xlat
or
outsb
dec
dec
pop
lock
add
and
je
push
bound
jl
sar
sbb
repz
add
sbb
jae
add
xlat
push
dec
or
aad
std
pop
ja
adc
out
xor
add
addr16
xchg
bound
in
sbb
push
and
adc
cwtl
push
jne
adc
mov
or
loopne
ljmp
das
pop
icebp
je
and
add
add
cs
in
and
mov
jb
inc
cmp
mov
dec
push
and
xor
out
sub
xchg
push
mov
push
mov
add
add
scas
ret
sbb
into
add
int
rcl
fbld
add
xor
sbb
cmp
pop
cmp
clc
or
push
ret
pop
sbb
mov
daa
fcmovbe
aam
add
add
mov
ret
shr
cmpsl
lods
inc
or
or
inc
fists
shr
add
pop
je
push
adc
add
repnz
das
pop
cs
sbb
jno
hlt
sahf
ss
in
push
daa
mov
cmp
jo
add
shlb
aas
dec
cmp
add
fldt
int3
lock
xlat
and
enter
fsubl
out
add
movsl
loopne
push
das
add
shll
mov
lcall
jp
cmpsb
cmp
scas
lock
cwtl
arpl
sub
xor
xorb
inc
cmp
lea
test
fadds
rolb
jnp
xchg
and
outsb
pushf
cmpsb
out
pusha
add
adc
addl
and
add
and
add
inc
add
pop
jmp
ljmp
hlt
in
mov
jp
pop
and
or
aad
pop
fiadds
imul
pop
add
jl
push
cwtl
add
xchg
push
xor
xchg
aaa
pop
lret
add
push
mov
add
add
fwait
cld
lret
test
in
add
rcrb
xor
mov
push
mov
lds
push
xor
test
std
cmp
jo
add
jle
repz
cld
outsl
in
mov
inc
xchg
cmc
bound
add
dec
daa
jp
inc
ret
fidivrs
cli
ds
testb
test
or
adc
incb
movl
hlt
outsb
lock
add
sbb
cmp
call
lcall
out
cmc
subl
stos
out
xor
or
lock
adc
ret
jo
adc
inc
fidivrs
enter
add
test
in
or
jae
adc
ja
xor
cmp
aas
mov
or
jecxz
repnz
ret
loop
inc
xchg
jle
mov
inc
out
movsl
bsf
push
subl
das
cmp
push
pop
mov
icebp
add
lret
mov
mov
add
xchg
mov
push
mov
dec
adc
sub
xor
lret
mov
ds
mov
gs
adc
sub
or
and
xor
ss
push
prefetch
loopne
mov
pop
or
pop
add
and
clc
bound
pop
enter
sbb
mov
lock
rclb
and
or
fmul
rclb
or
mov
pop
and
jmp
mov
adc
jo
rolb
call
xor
inc
shrl
rcrl
jbe
add
inc
push
jle
test
inc
cmp
faddl
cmp
dec
sbb
jnp
sub
push
dec
bound
subl
cld
mov
cmp
jp
sbb
push
fcomps
adc
jbe
ds
enter
jbe
fs
or
mov
cmpl
nop
add
leave
or
pop
xlat
sub
and
or
inc
fsubrl
hlt
cld
push
sub
les
mov
add
adc
ficompl
inc
mov
mov
sub
sbb
pushf
adc
nop
aam
and
pop
loope
sub
mov
pop
xor
sub
inc
mov
adc
pushl
aad
add
test
shrb
or
add
in
mov
mov
mov
inc
or
sarl
mov
fcompl
or
pop
clc
inc
mov
pop
and
and
pop
nop
mov
mov
xchg
push
hlt
cmp
or
loope
mov
loopne
mov
inc
jae
sub
fcomps
cld
mov
adc
lea
and
in
pop
mov
rclb
and
mov
xor
add
inc
pop
mov
pop
pushf
cwtl
mov
mov
orl
das
test
xchg
js
add
mov
mov
mov
mov
imul
out
pop
add
loopne
push
lea
inc
adc
mov
add
xor
or
out
add
outsb
je
insl
add
in
loop
out
pop
addl
sub
cmp
sbb
xor
cmp
inc
push
and
add
or
fadd
in
pop
or
xchg
or
ds
cwtl
jo
nop
sbb
or
push
ljmp
add
clc
test
insb
jo
adc
clc
addl
or
dec
inc
pop
es
sub
lcall
xchg
mov
rorb
and
fcomip
sar
pop
shlb
adc
sub
xor
lock
pop
mulb
push
mov
fistps
or
mov
mov
add
inc
add
gs
push
add
mov
call
jmp
imul
sbb
les
je
sbb
cwtl
xor
js
cltd
add
xchg
mov
adc
push
test
dec
dec
pop
mov
push
add
push
push
pop
pop
push
sarb
add
xor
adc
jo
or
push
outsb
idivl
add
sub
and
popa
add
outsl
mov
rol
fmull
and
sub
hlt
in
test
or
cld
mov
push
imul
lock
nop
xor
fdiv
mov
es
and
inc
pushf
pusha
sarb
adc
clc
fcompl
add
adc
and
add
mov
inc
lcall
jl
lea
das
cmp
sbb
rclb
sbb
cmp
add
sbb
push
xchg
divl
test
loopne
add
rorb
into
or
add
cmc
push
int
adc
push
cli
faddl
push
add
outsb
sbb
test
jp
jge
nop
mov
dec
std
add
mov
test
xchg
in
dec
pop
lock
or
inc
add
andl
insb
add
out
inc
add
jecxz
cld
xor
sub
pop
cld
push
dec
dec
jl
mov
add
hlt
inc
cmp
or
rolb
add
movb
pop
lock
outsl
jno
pcmpeqb
dec
testl
or
push
and
popa
nop
shlb
and
cs
imul
mov
rolb
cwtl
push
push
pop
or
or
or
pop
xchg
int
mov
lea
fdivs
xchg
test
jns
add
xor
hlt
dec
inc
add
cmp
out
pop
lahf
enter
mov
push
test
xor
pop
sub
xor
push
mov
jo
mov
or
flds
add
nop
lahf
mov
and
test
paddb
inc
add
addb
mov
pusha
sub
faddl
cmp
and
cltd
int3
shrb
stc
jbe
sbb
sub
cmp
mov
xchg
ss
sub
lahf
xor
adc
or
cwtl
mov
sbb
and
pop
cltd
jno
xchg
insb
push
test
call
add
mov
adc
mov
pop
and
or
inc
ret
pop
sbb
loopne
sub
pop
call
jo
fldenv
test
mov
xorl
pop
cwtl
adc
sbb
fstl
dec
sub
pop
movsb
add
cmp
xor
and
xor
push
jns
xchg
xor
in
fdivs
sbb
fnop
push
mov
scas
sub
mov
cmp
lahf
jns
rclb
push
sarb
add
dec
popa
js
cwtl
or
and
sbb
and
rolb
aaa
cltd
inc
lods
pop
pop
aad
and
cli
and
adc
mov
adc
bound
movsb
loopne
test
adc
or
mov
pushf
mov
add
test
rolb
pop
mov
inc
or
mov
jmp
push
popa
pusha
out
sub
movsl
add
xchg
mov
or
xchg
and
adc
mov
cli
and
jl
inc
pop
mov
inc
mov
mov
mov
xor
mov
les
xchg
sbb
jp
add
fs
xchg
insb
lock
add
mov
cld
shlb
cld
and
xor
pop
mov
push
sahf
movsb
xchg
mov
mov
in
std
jo
mov
add
dec
cmp
outsb
pop
jl
mov
lcall
mul
lock
sbb
sub
cmp
dec
xchg
pop
and
cmp
adc
push
scas
adc
xchg
inc
fsubr
cmpsb
add
and
mov
push
or
mov
and
jbe
cmpsl
cwtl
xor
cmpsb
mov
lahf
js
add
xchg
sub
and
sbb
sub
ds
push
dec
bound
cwtl
mov
mov
adc
mov
clc
add
xor
dec
repz
repz
jp
mov
and
fdivr
lock
mov
and
je
mov
dec
lods
loope
int3
cld
loopne
add
or
jae
pusha
dec
stos
jo
test
movsb
mov
sbb
pop
adc
mov
mov
adc
xor
dec
cs
mov
nop
adc
xchg
rorb
and
and
imul
mov
add
cmp
dec
dec
push
add
and
daa
and
cmp
add
jge
mov
cmp
inc
adc
add
inc
cmp
fs
adc
add
jno
in
outsb
sub
out
add
xchg
inc
inc
fbstp
add
inc
arpl
mov
out
mov
add
dec
inc
jbe
pop
rorb
sbb
fldt
add
jp
push
jg
push
jb
jne
add
jecxz
push
sub
out
packsswb
push
inc
sbb
sbb
cmp
gs
add
push
add
pop
mov
xchg
fdiv
add
inc
jns
xor
add
cs
sub
add
fisubrl
inc
cmpsb
or
jbe
add
ret
sahf
jmp
cmp
bound
add
inc
js
je
cltd
sbb
xchg
add
fisttpll
jo
loop
outsw
inc
and
mov
jae
arpl
outsl
std
pop
xchg
les
or
cmpsl
add
inc
imul
push
cmp
push
rclb
cmp
sub
push
xchg
lcall
mov
fs
mov
push
adc
xor
jae
adc
stos
jge
pop
push
push
mov
mov
push
outsb
push
push
inc
cmp
xchg
je
or
or
shll
inc
pop
dec
add
cmp
addb
ja
or
pop
stos
sbb
sbb
push
add
or
push
sub
dec
inc
push
jns
movl
je
cmpsl
loop
jo
adc
jp
cmp
dec
adc
push
add
adc
jb
mov
dec
cltd
jns
and
xchg
lcall
test
add
inc
outsl
js
dec
call
nop
jbe
jo
cld
movsl
add
lret
pop
push
and
in
sub
fsubrl
pop
aaa
adc
mov
ret
rcrb
popa
add
xchg
inc
fidivl
xchg
aam
clc
testb
xchg
push
dec
outsl
push
cmp
add
int
es
dec
add
lods
pop
gs
fcoms
fdivs
dec
daa
push
fcomp
inc
push
int
and
dec
into
cmp
lods
fs
adc
xor
movsb
mov
stos
adc
inc
outsl
bound
adc
add
xorl
faddl
out
int
or
add
mov
or
add
imul
test
lods
push
shll
fldenv
lcall
push
rclb
aam
push
add
mov
adc
cs
sbb
andb
cmp
push
sbbb
push
lret
add
pop
stos
rclb
add
xchg
sbb
mov
xor
insl
enter
xchg
mov
push
or
and
cmp
push
mov
xor
push
mov
push
stc
dec
pop
adc
add
rcrb
adc
inc
add
arpl
les
imul
xorb
add
mov
pop
inc
loop
cmc
bound
add
nop
cmpsl
sti
add
jo
setle
insl
inc
add
pop
sbb
enter
or
in
movsb
sub
popl
inc
jbe
ds
repnz
cld
mov
sbb
push
dec
dec
dec
adcb
fs
and
add
jle
les
repnz
hlt
das
or
bound
sbbb
inc
dec
inc
adc
push
dec
jo
sahf
pop
enter
push
daa
movq
or
test
sahf
cwtl
inc
mov
add
stos
and
imul
movsb
es
data16
rcrb
push
pop
sub
add
xor
popf
divb
lcall
fldt
mov
gs
rolb
lcall
add
mov
or
leave
sbb
sbb
mov
or
push
xchg
roll
add
lds
xor
adc
mov
lock
les
xchg
pop
mov
cmpb
in
inc
add
sahf
ja
and
repz
sbb
xchg
push
push
inc
pusha
notb
fs
imul
lea
pop
push
jns
dec
popa
mov
faddl
dec
mov
or
outsb
and
int3
push
dec
add
ljmp
add
outsb
mov
adc
movsl
xchg
idivb
add
add
stos
loopne
adc
add
or
xor
add
cmp
xchg
pop
inc
dec
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rolb
ds
call
lock
sbbb
mov
shlb
int3
adc
inc
or
pop
dec
add
mov
mov
xor
pop
lret
xor
in
xor
js
jp
jl
sbb
xor
push
popf
sub
jp
pop
push
jl
aam
cmp
mov
aas
xlat
leave
loopne
out
add
push
add
cltd
imul
icebp
clc
incl
loope
ss
push
shrl
cmp
jmp
pop
fbstp
add
inc
push
dec
push
loopne
dec
aas
ret
xor
xchg
inc
mov
in
xor
inc
pop
cmp
push
jp
sub
je
jbe
js
sbb
pusha
cmp
sahf
add
lea
add
aas
inc
daa
add
push
or
push
cwtl
push
add
adc
dec
rol
loopne
js
xchg
add
cmp
xor
inc
dec
add
test
mov
fxch
loope
ljmp
je
jbe
js
jle
xor
cmp
popf
add
sbb
inc
lahf
add
push
xchg
push
dec
cmp
iret
jno
jns
cmpl
lea
xchg
aas
xchg
aas
fwait
add
out
pop
loopne
add
loope
cmp
mov
inc
add
xchg
push
repnz
popf
iret
sbb
or
push
adc
fstps
jae
push
icebp
cmp
cmpsl
int3
mov
aam
out
repz
cmpl
loope
jmp
shlb
cld
sbbb
jle
push
lcall
into
ret
mov
and
pop
cli
cmp
cmp
add
sbb
or
and
dec
xor
jle
inc
out
ljmp
push
jb
jp
cmp
fistpll
dec
mov
mov
lock
loop
ljmp
add
or
xchg
out
sbb
leave
inc
daa
and
pop
add
jb
repnz
in
cmpsl
push
testl
in
jb
dec
sbb
jbe
stc
jecxz
add
xchg
dec
dec
sub
pop
iret
pusha
xchg
jo
js
andb
lret
mov
out
dec
rorb
in
xchg
or
lock
testl
mov
adc
xlat
sti
daa
unpcklps
dec
incl
repz
and
jo
push
test
stc
mov
mov
ds
mov
aas
sarb
fdivrs
loopne
call
sbb
xor
leave
adc
sbb
fldenv
loope
jmp
stc
inc
sbb
jae
pop
inc
aas
push
mov
ret
mov
nop
jecxz
repz
cs
popf
fistpl
push
xor
push
sub
sub
adc
shll
cmp
pusha
gs
clc
inc
cld
dec
call
stos
xchg
inc
lods
loopne
leave
mov
out
push
mov
les
cmp
hlt
aas
clc
add
out
pop
xor
daa
or
inc
or
and
loop
push
add
xchg
andb
js
cld
xchg
js
movsb
add
mov
mov
mov
shrb
movsb
jmp
add
or
or
adc
loope
jmp
push
in
call
fs
pop
insb
mov
jle
daa
js
mov
pop
mov
mov
mov
jle
jle
jle
jle
jno
add
pop
or
cmp
cmp
add
and
sbb
lahf
cmp
into
push
iret
je
js
pop
lret
orb
iret
ror
iret
enter
ror
aam
fadd
fcompl
adc
sbb
sbb
and
and
pop
sub
sub
xor
xor
inc
xchg
jo
je
js
jl
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
movl
sub
xor
add
dec
aad
cmp
out
in
push
cmp
call
icebp
add
les
add
xor
add
inc
in
mov
in
jae
cwtl
aas
cmc
mov
push
outsb
xor
clc
lahf
std
rolb
popf
add
sbb
inc
xchg
add
dec
leave
xchg
push
daa
cmp
jnp
pushf
lcall
pop
test
ja
mov
icebp
in
rolb
add
or
or
adc
adc
cmc
dec
mov
cwtl
jle
ret
aas
pop
mov
ret
shrl
insb
bnd
outsb
aas
and
mov
fstps
loope
jmp
stc
sub
lods
pop
fisubrs
insb
clc
jo
jmp
fs
out
loopne
add
xchg
rcpps
lcall
dec
repnz
xor
xor
andl
jp
jb
mov
pop
xchg
cmp
xchg
aas
lcall
ss
and
push
mov
daa
add
push
lock
sbb
inc
je
push
jns
add
or
cltd
xor
jl
jmp
js
dec
addl
add
xor
in
cmc
flds
cmp
add
je
jbe
js
add
jl
jle
xchg
pop
mov
gs
imul
jne
cmpsb
add
or
cld
dec
cmpsl
push
sahf
add
mov
decb
inc
adc
mov
add
lcall
idiv
add
adc
sbb
dec
sbb
bound
addr16
inc
lods
imul
inc
andnps
xchg
pusha
cltd
test
add
cmp
and
and
xor
mov
nop
lods
cmp
push
mov
xor
gs
lock
inc
fnstsw
insl
icebp
jg
xchg
mov
ficoms
xor
pop
add
inc
jg
add
out
loope
adc
mov
scas
xchg
loope
ss
cmp
cmpsb
hlt
add
shlb
in
xchg
call
out
clc
push
cmp
cmp
es
test
dec
orb
enter
daa
xchg
pop
sarb
leave
fs
mov
inc
cmp
cmp
cmp
mov
pop
je
in
loope
rorb
sbb
out
cmp
jno
pushf
ds
aas
mov
dec
add
mov
shr
mov
jb
or
pop
loopne
cmpb
jbe
scas
js
mov
pmulhuw
mov
pop
lret
lcall
loope
out
in
add
daa
stc
adc
or
jno
xor
sbb
jmp
test
pop
lcall
mov
mov
jbe
js
jp
push
in
xchg
es
pusha
jo
mov
jb
loope
pop
leave
cmp
add
jns
push
sub
mov
cmp
mov
lds
add
pop
and
dec
hlt
popa
nop
fwait
lock
out
cmp
cmp
add
leave
dec
push
cmp
mov
and
adc
add
mov
sbb
pop
sahf
rclb
pop
xor
je
jae
addb
popf
pop
nop
adc
adc
push
pop
or
sub
or
jle,pt
in
adc
adc
push
in
and
clc
mov
sarl
and
xchg
and
xorb
sti
pop
push
add
aas
inc
dec
dec
mov
pop
cmp
sub
xor
add
mov
push
pop
xor
repz
gs
sub
xchg
xlat
inc
call
hlt
dec
xchg
push
adc
or
adc
movsb
add
and
sub
cmp
mov
jb
je
pop
pusha
popa
xlat
push
and
das
nop
lcall
je
lods
push
jb
ficomps
lahf
in
call
add
or
sbb
and
shll
sub
xor
addl
push
add
pop
in
psubsb
inc
nop
hlt
ret
imul
ja
add
cmp
cmp
orl
mov
cmp
adc
push
pop
inc
xor
xchg
push
pop
cmp
data16
jnp
xchg
in
mov
iret
lcall
negl
cmp
adc
xor
push
je
dec
gs
repz
sbb
adc
cmp
mov
sar
ja
add
sub
cmp
push
mov
push
daa
rolb
xor
jmp
jecxz
or
orl
xor
xor
mov
adc
pcmpeqb
add
xor
clc
add
cmp
cmpsb
cmp
cli
and
inc
pusha
rorl
nop
setp
ret
int
push
sbb
mov
loop
mov
pop
enter
add
jmp
mov
cmp
aam
daa
add
adc
mov
stos
je
adc
pop
loope
icebp
mov
pop
wrmsr
loop
out
ljmp
mov
mov
leave
hlt
sbb
xor
fisttpll
das
sbb
popf
add
add
xor
in
inc
add
frstor
add
cmpl
xor
add
in
xor
cmp
mov
cmp
and
aam
ret
leave
pop
in
sbb
clc
and
and
lret
adc
cs
xchg
inc
adc
mov
cld
cmp
xchg
dec
pop
mov
cwtl
sbbb
iret
lods
cmp
popa
repnz
je
int3
add
aam
ss
jb
xchg
je
push
neg
and
in
add
pop
and
mov
insb
add
xchg
outsb
add
mov
xor
mov
inc
cld
push
add
pop
shrb
pop
xor
xchg
adc
push
pop
out
add
mov
xor
add
cmp
add
pop
xchg
icebp
add
xchg
jo
jp
pop
add
test
cmp
add
daa
mov
cmp
aad
out
cli
lret
pop
add
dec
add
and
add
fs
pop
insb
inc
in
in
cmp
add
nop
ja
jg
jnp
jnp
mov
xlat
cs
add
sub
pop
mov
lock
add
roll
shlb
xor
mov
inc
dec
in
dec
leave
dec
insl
incb
cld
aas
aam
hlt
jl
add
fmull
adc
add
jb
fidivrl
add
lret
lock
cld
arpl
add
adc
or
xchg
out
and
jl
in
pop
rorl
add
and
int3
lret
dec
fmuls
paddw
xor
or
add
sbb
js
pop
es
xor
imul
xor
mov
movsb
push
sti
shrb
fnstcw
inc
adc
jno
jle
xorl
xchg
add
hlt
les
add
cmp
sbb
daa
in
call
add
lret
xchg
xor
add
pop
int3
mov
inc
dec
orb
rorb
sbb
cltd
xor
addr16
and
shr
mov
add
das
je
bound
add
mov
dec
iret
or
pop
add
inc
pop
pop
dec
outsl
jo
ret
push
add
push
push
cli
lret
movsb
lods
push
cvtpi2ps
call
std
xor
movsb
es
lods
cwtl
stos
js
jp
push
jl
jle
pop
rcr
aas
icebp
cmp
adc
pop
pop
pop
pushl
hlt
push
jns
mov
add
adc
sarb
add
jb
dec
jae
cmp
add
je
mov
pop
fwait
add
mov
fbstp
add
xchg
repnz
sbb
push
add
out
mov
in
andb
adcb
push
sbb
sbb
and
dec
outsb
popl
add
cmp
cmp
das
ds
test
push
lock
es
dec
add
sbbb
pop
xchg
fiadds
push
pop
xor
mov
add
testb
decb
pop
xchg
or
cmp
xor
xor
xchg
scas
mov
faddp
inc
ret
cmp
add
push
add
in
insl
fs
cmc
loopne
push
leave
cmp
add
inc
ret
mov
jge
or
mov
pop
inc
aas
das
inc
add
jns
rclb
mov
cmp
leave
add
cmp
sbb
pusha
xor
in
jmp
ja
jnp
pop
add
dec
mov
iret
push
rcrl
mov
nop
xchg
add
push
cs
pop
add
jb
add
movzbl
out
sbb
cwtl
push
push
xchg
add
pop
jg
fcompl
sbb
sub
in
sbb
push
das
mov
pop
xor
ljmp
pop
shrb
lret
clc
insl
sbb
pop
sbb
push
test
add
cmp
mov
add
xor
mov
out
adc
add
cmp
addl
xchg
lcall
cmpb
push
call
xchg
pop
rorb
and
aas
or
add
sbb
mov
pusha
xor
cld
enter
sbb
dec
add
sbb
add
push
push
xor
inc
lods
lret
ret
xor
loop
inc
sub
add
clc
mov
jp
pop
add
mov
nop
out
ret
or
ss
xchg
inc
mov
stos
rcl
add
mov
mov
loope
push
js
sub
lret
loopne
add
aaa
add
ret
jne
mov
adc
sub
add
push
jnp
mov
loopne
cmp
xchg
pop
push
inc
sub
push
subl
ret
lcall
hlt
add
sbb
cld
adc
and
sub
test
aas
cmp
lahf
xor
out
int
xor
sti
lock
mov
lret
dec
clc
ljmp
and
dec
das
addl
pop
cwtl
or
jle
cmp
ret
incb
pop
mov
in
mov
dec
pop
or
push
jl
inc
mov
leave
mov
nop
into
add
nop
mov
push
sbbb
xchg
mov
jmp
inc
push
bound
cmp
mov
add
addb
xor
daa
imul
mov
push
xchg
aaa
call
pop
or
sbb
jg
xchg
cli
and
ds
push
hlt
arpl
pop
outsb
push
enter
sarb
add
sub
mov
or
lock
or
es
aaa
add
ficompl
cmp
cmp
xchg
xchg
movl
cwtl
sub
sub
leave
add
jb
je
adc
adc
out
xor
fiaddl
inc
fsubrp
mov
and
jl
cmpsb
pusha
xchg
hlt
add
xchg
call
sbb
test
cs
sub
je
add
adc
je
xchg
mov
adc
mov
push
xor
movsb
sahf
popf
loopne
mov
add
inc
aas
dec
leave
push
shll
pmaxub
xacquire
lret
scas
shll
sbb
clc
cmp
mov
popa
or
xlat
cli
loope
inc
rolb
cwtl
cmp
movsl
das
stos
adcl
mov
shll
add
imul
pusha
sub
lcall
or
ret
sbbb
sbb
ds
into
add
lcall
add
mov
js
cmp
lds
add
push
cwtl
sbb
mov
jno
mov
and
fs
mov
dec
les
aas
xor
in
xlat
pcmpeqb
sti
add
cmp
addb
or
mov
iret
pop
pusha
sbb
push
fsubrs
dec
dec
pop
mov
ja
jge
aas
jb
je
add
and
bound
in
add
pop
cmp
jge
push
imul
inc
jae
ja
xchg
pop
cmp
sub
push
lods
leave
mov
jp
mov
add
pop
adc
test
pop
cmp
outsl
shll
mov
cmp
nop
adc
insb
adc
out
cmp
in
test
and
aad
jmp
lods
push
cmp
add
dec
daa
popa
inc
ret
or
or
rol
dec
enter
cwtl
cmpsb
sbb
and
rcl
cmp
mov
sbb
insl
pop
adc
cmpsb
mov
jb
and
setbe
pop
xchg
pop
iret
shll
in
cmc
fcoml
adc
sbb
ret
add
mov
mov
nop
das
mov
add
xor
fadd
rolb
pop
rolb
fcomi
and
jmp
repz
sbb
dec
lock
xchg
xchg
loope
cmp
insb
addb
jecxz
pop
cmp
jle
mov
mov
xorb
lret
mov
adc
pop
loop
imul
or
dec
xor
in
mov
addr16
adcl
or
add
mov
lods
and
adc
sbb
mov
xor
inc
hlt
xor
pop
jle
add
mov
add
popf
xchg
fimull
out
in
cmpsl
cmp
or
inc
jle
push
jo
add
mov
adc
enter
pop
xor
cmp
mov
je
leave
dec
fcoms
jb
add
test
or
mov
popa
or
imul
cmovno
add
cmc
xor
add
cmp
ret
mov
jbe
xchg
inc
sbb
add
pop
aas
dec
and
repnz
lods
cld
mov
jne
push
push
push
xor
jle
scas
iret
fidivrs
clc
xor
or
incb
xor
stc
pop
sbb
mov
shll
adc
movsl
js
push
ds
je
pop
xor
cld
fldl
stc
pushf
adc
xor
sbb
popf
dec
sbb
push
xchg
fwait
dec
xor
cmp
and
mul
loope
ss
leave
jp
sbb
add
rolb
orl
add
mov
ret
call
push
mov
outsl
shll
add
lahf
sti
test
cmp
loopne
mov
popf
hlt
mov
sbb
jp
mov
pop
xchg
lahf
cltd
pop
scas
inc
ficoms
jno
xchg
mov
rolb
xor
cs
popf
add
sbbb
push
push
sbb
push
adc
aas
out
cld
mov
add
or
xor
pop
out
loop
pop
cli
movb
loopne
jb
dec
sbb
push
scas
adc
test
mov
dec
sub
icebp
lds
pusha
add
push
cmp
xor
dec
dec
ret
les
add
aaa
lea
jle
fistl
sarb
sub
push
inc
xchg
cmp
and
push
call
shrw
sahf
push
or
jo
add
pop
cmc
psubb
inc
add
xchg
push
fdivr
dec
jp
add
pusha
xor
xchg
sti
add
add
mov
add
xchg
sub
sbb
call
mov
ret
hlt
add
clc
or
test
cld
ret
shlb
push
clc
js
mov
adc
push
lock
sub
xor
punpckhdq
push
js
jb
pop
mov
rcrl
shr
repnz
testb
test
sub
cmp
add
dec
jbe
sbb
xlat
aas
or
idiv
xchg
adc
add
scas
xchg
aas
les
andb
shlb
pusha
dec
movb
or
dec
add
push
push
les
jp
dec
ret
or
jle
add
push
push
leave
mov
add
cs
and
sub
jne
xorl
loope
sbb
add
ja
mov
in
mov
ret
aas
js
push
jbe
mov
mov
pop
fisttps
fdivrp
mov
xor
fcoml
adc
sbb
and
sbb
or
les
lret
jbe
pop
rolb
pop
mov
sbb
inc
adcl
aas
dec
xchg
call
fcoms
addb
pop
es
add
lock
and
sbb
daa
xor
sbb
pushf
mov
in
ss
mov
div
xorb
or
add
xchg
hlt
mov
jne
or
or
insl
cmpb
psubsb
std
cli
or
leave
and
inc
pusha
loope
cmp
cmc
dec
cld
dec
daa
add
sub
in
hlt
fcoms
add
movsb
pop
or
aam
pop
mov
loopne
xor
sbb
je
daa
jp
dec
push
ror
add
aas
mov
adc
push
pop
jns
sub
add
adc
lock
cmpl
xchg
cmp
push
lcall
mov
les
cmp
daa
inc
shll
push
jg
mov
xor
rclb
jo
add
pop
or
adc
sub
mov
sub
in
test
xchg
popf
or
add
in
xor
cmp
pusha
loopne
out
mov
mov
or
mov
add
jb
je
dec
sub
push
rcll
aad
mov
pop
add
jmp
push
sti
push
stc
cmp
add
add
mov
mov
xor
mov
test
loop
shrb
orb
lahf
pop
mov
adc
sbb
add
mov
enter
jecxz
ret
xchg
cmp
dec
add
iret
loopne
cmp
shrb
lret
sbb
cmp
nop
mov
cmp
fs
mov
andb
xor
add
sub
push
and
in
push
ljmp
rorl
jnp
add
sarb
push
outsb
jo
cwtl
cmp
jl
dec
add
mov
pop
add
cmp
test
daa
xor
cmp
cmpb
and
add
mov
cmp
sub
xchg
clc
pop
add
add
add
sbb
dec
sbb
add
adc
and
cld
in
adcl
cmp
mov
leave
sbb
or
into
jns
sbb
xchg
sub
enter
aam
popa
shrb
outsl
sub
add
pop
arpl
and
mov
test
xchg
add
inc
xor
inc
xchg
outsl
mov
add
pop
xor
and
inc
sbbb
push
push
jl
mov
pop
test
xchg
add
movsl
aaa
leave
lods
scas
insb
mov
pop
cmp
dec
xchg
ret
add
mov
jecxz
repnz
add
inc
cli
sahf
pop
pop
lahf
imul
inc
mov
adc
pop
mov
push
mov
cmp
enter
pop
add
in
xor
loope
jge
add
mov
sahf
leave
lods
rclb
dec
mov
fldenv
jo
adc
cmp
cwtl
push
add
in
dec
xchg
je
xchg
adcb
mov
xchg
cmpsl
pop
lock
negl
and
cmc
call
pop
sub
xchg
pop
xchg
loopne
sub
cld
into
cmp
jle
dec
ljmp
xor
or
ret
sbb
jle
orb
ret
subb
jae
inc
pop
xchg
movsb
mov
add
fstps
pop
in
add
mov
mov
in
add
mov
scas
fnstcw
mov
mov
add
fs
call
add
iret
jnp
cmp
cmp
push
dec
pop
in
or
add
inc
clc
sbb
xor
cmpsb
rcrb
ret
pop
push
jle
cmc
inc
or
in
in
add
out
cmp
cmp
fnstsw
and
mov
xchg
js
lcall
or
jle
mov
cmpb
push
loopne
pusha
mov
cltd
loopne
adcb
pop
jmp
flds
add
popa
das
imul
sub
int3
inc
ljmp
sahf
pushf
out
pop
ret
dec
pop
fstpl
loope
je
push
mov
sub
das
sub
xchg
jle
aaa
dec
ror
add
ficoml
outsl
mov
addb
pop
pop
xchg
xchg
lcall
xor
sub
cwtl
hlt
cmp
leave
inc
shr
outsl
stos
or
mov
addb
add
or
test
in
add
insb
in
add
mov
cld
jle
mov
enter
sarb
pop
push
pop
jnp
ret
dec
xchg
ret
sarb
add
or
adc
add
fnstenv
outsb
push
or
loopne
add
and
push
pop
xchg
sarb
out
add
in
mov
or
mov
push
int3
push
cmpsb
add
jo
loopne
ss
sbb
cs
cmp
dec
add
push
das
popa
inc
mov
stc
jg
pop
bswap
scas
iret
out
and
ret
add
pop
es
jmp
inc
clc
push
mov
dec
bound
add
shrb
aas
jbe
negb
adc
pop
xor
jo
lock
fadd
or
add
sahf
in
and
outsb
pushf
pop
adc
push
mov
rorb
mov
inc
mov
push
cmp
cmp
adc
adc
data16
or
mov
sbb
addb
cmpsl
mov
lcall
test
cli
pusha
sarb
or
sbbb
and
cli
add
pusha
jl
mov
stos
cmp
aas
daa
call
inc
pop
cmp
call
aas
sahf
inc
cmp
arpl
insl
addr16
mov
mov
sbb
push
icebp
cmp
mov
mov
mov
or
xor
cmp
xor
sub
das
add
fstpt
aas
in
jmp
sbb
jbe
dec
inc
add
les
lret
xchg
jnp
pop
es
iret
mov
mov
flds
fst
xor
fimuls
and
sbb
xchg
adc
fs
push
nop
or
push
pop
movsb
or
lods
orb
dec
mov
or
mov
int3
hlt
pusha
leave
adcb
cmp
add
je
or
adc
adc
sbb
add
ss
js
cmc
imul
leave
mov
mov
les
pop
cmc
aam
clc
cli
aam
add
cwtl
push
add
sbb
and
cmp
lds
push
in
xchg
pop
mov
repz
insb
call
xchg
mov
push
in
mov
movsb
test
push
daa
ljmp
cmpsb
push
nop
je
or
test
adcb
push
lcall
cmpsl
add
test
sub
ss
enter
push
add
mov
adc
test
and
sub
xor
mov
add
loop
pop
out
cmp
jl
fmull
add
mov
faddp
loope
sub
fwait
xchg
loope
pop
clc
insb
inc
add
je
ret
jo
add
cs
dec
movsb
mov
mov
pop
pop
insb
sub
mov
notb
add
xchg
faddl
sub
in
xchg
pop
mov
stos
fs
aaa
sub
sbb
enter
adc
loopne
xor
pop
cmp
loopne
test
mov
xchg
inc
cmpsb
fimull
xor
jo
inc
fimuls
adc
cld
inc
mov
mov
aas
aam
cmp
sbb
cmp
sub
xor
iret
mov
push
leave
jno
add
adc
mov
mov
nop
in
repnz
dec
aas
pushf
inc
mov
lods
in
mov
or
mov
std
into
adc
add
mov
in
nop
or
call
push
inc
adc
xchg
nop
das
push
add
lock
add
sub
mov
mov
push
nopl
fchs
andl
xor
mov
faddl
sbb
xor
push
sub
jns
cli
adc
and
mov
push
add
aaa
adc
ret
push
push
sbb
push
call
enter
mov
psllq
sbb
jecxz
push
lea
test
sub
pop
add
or
pushf
inc
and
add
and
mov
jo
push
add
adc
and
cmp
or
add
sub
jg
clc
mov
add
push
xchg
mov
adc
test
push
inc
push
pop
mov
add
push
ror
xor
or
add
push
add
cmp
mov
jne
mov
or
mov
je
sahf
push
pushl
movb
jne
cmp
mov
push
push
push
mov
push
sbb
mov
add
fisttpl
leave
je
adc
sbb
or
jmp
dec
jmp
sub
call
outsl
fwait
dec
mov
loopne
pop
pop
pop
push
bound
add
inc
sar
repz
mov
add
fwait
sub
inc
add
rcrl
add
add
and
dec
or
jbe
add
sbb
shlb
repnz
inc
test
mov
xor
push
add
addr16
mov
addl
rcrl
shr
outsb
lods
sub
mov
leave
add
pop
push
addl
sub
loopne
incl
bt
cmp
adc
push
push
xor
out
sahf
lret
mov
pop
add
add
test
pop
ret
fadd
adc
out
popa
es
add
push
lock
outsb
and
push
mov
or
xor
inc
xorl
adc
sbb
jle
cli
mov
adcl
xorb
add
add
push
mov
lods
mov
add
call
add
xor
cwtl
xchg
rorb
sub
mov
cltd
push
rorb
aas
fdivl
add
pop
roll
dec
shl
nop
arpl
cmp
jl
sbb
push
sbb
add
cmc
add
or
push
push
shll
mov
xorl
mov
dec
cwtl
adc
jmp
mov
pusha
cmp
inc
add
das
andb
or
or
cmc
add
shlb
loop
adc
mov
add
rcll
mov
add
and
and
daa
inc
xor
mov
cmp
rolb
add
pop
push
push
adc
add
testb
push
push
xchg
loop
pop
add
clc
mov
xchg
push
xlat
add
pop
mov
mov
xor
je
sbb
dec
add
mov
cmc
pop
fdivr
repz
push
sbb
add
iret
fwait
jae
movsb
roll
xorl
dec
xchg
test
lods
rcrb
add
mov
and
dec
imul
add
loope
into
mov
mov
cli
insb
inc
push
add
add
adc
dec
test
iret
add
insl
ret
add
enter
adcb
mov
adc
cld
imul
add
xlat
add
faddl
push
lcall
ret
inc
insb
lods
cs
add
pop
scas
das
cbtw
push
movsl
add
shll
mov
adc
xlat
sub
add
movsl
lcall
ficomps
jmp
lret
mov
add
loop
test
xchg
scas
nop
mov
xor
movsb
push
pminsw
clc
lcall
xchg
jnp
out
add
xchg
test
add
es
mov
or
add
mov
sbb
aam
rcl
add
inc
dec
scas
mov
into
adc
add
pusha
cmc
mov
negb
out
jo
add
inc
daa
cmp
lods
pop
add
cmpb
inc
movsl
andb
push
xchg
jecxz
daa
add
add
or
sbb
repnz
aam
dec
sbb
aam
insl
add
ror
pop
add
pop
xchg
mov
pop
push
add
roll
jne
jl
add
and
xor
mov
cmpsb
jg
pop
mov
cmp
ja
push
loopne
es
push
xor
nop
scas
test
mov
add
jmp
lds
mov
add
aad
push
andl
push
jb
jnp
push
addr16
inc
and
add
push
sub
cmpsl
push
test
add
add
mov
xlat
cmp
pop
xchg
stos
out
adcb
and
sarb
adc
pop
add
dec
lods
xlat
dec
push
fdivr
stos
mov
enter
lods
push
out
ljmp
pop
xor
bound
inc
xchg
jns
into
push
jle
add
aam
xlat
js
pop
add
push
jne
loope
iret
sbb
cmpsb
nop
add
mov
mov
jmp
subb
pushf
xchg
mov
inc
pusha
jns
jg
add
xlat
test
in
pushf
add
fwait
adc
push
ss
mov
jno
add
fsubl
mov
cmp
push
add
and
ds
je
int
sbb
add
cmp
jge
adc
daa
jge
add
in
jae
aad
push
clc
test
add
or
add
daa
aad
and
js
xchg
fcomps
mov
add
lods
pop
sub
and
in
dec
inc
dec
ret
push
imul
arpl
jne
mov
addb
push
inc
mov
inc
add
cmp
cmp
xchg
jae
or
or
lds
jno
adc
pop
or
je
push
sub
clc
pop
bound
jmp
ret
xorl
call
mov
inc
leave
xlat
add
sub
rep
or
jmp
adc
adc
cmp
jae
push
inc
add
inc
lock
mov
add
add
xor
shr
add
roll
push
mov
adc
cmp
mov
or
jns
pop
and
pop
or
les
jne
in
rclb
je
jne
mov
push
outsl
arpl
inc
in
gs
or
clc
outsl
out
stc
arpl
addb
call
scas
mov
inc
cmp
push
inc
dec
sub
popa
fidivl
loopne
divb
jb
outsb
je
adc
dec
dec
push
inc
inc
push
and
jmp
push
ds
mov
jns
push
clc
and
sahf
mov
lcall
push
cmp
jge
in
jecxz
insl
jecxz
data16
aas
bound
jne
push
push
outsl
jmp
push
sub
xchg
push
jne
scas
pop
nop
rorl
push
rorb
inc
in
sbb
icebp
jle
fidivl
outsl
sarl
pop
icebp
jns
inc
mov
daa
dec
outsl
out
xlat
dec
push
dec
repz
pop
mov
add
add
adcb
es
dec
jmp
popf
dec
ja
inc
push
loope
xor
dec
pop
and
pop
pop
rcrb
dec
enter
push
arpl
in
mov
or
jmp
xor
dec
cmpsl
jmp
sarb
and
xchg
and
mov
push
or
sub
adc
lret
dec
aad
add
add
icebp
popl
popf
test
lods
out
sbb
dec
jecxz
lret
in
sahf
ret
sahf
or
rclb
loop
push
ret
sub
shrd
lea
lret
aaa
sub
decl
push
incb
xchg
jae
nop
push
or
lcall
fistps
jge
repnz
cmc
aam
and
push
cmp
push
pop
pop
lods
mov
into
lea
push
jno
push
xor
push
loopne
rorb
imul
ret
movsb
xor
jge
xor
sub
sub
adc
cs
jbe
lahf
pop
cmc
in
nop
fiaddl
pushf
emms
cmc
sub
jo
stos
push
sbb
iret
cmp
les
stos
or
xor
es
cmpsb
fnstsw
fsubrl
pop
xor
mov
add
int3
dec
cmp
mov
lock
dec
call
test
cmp
lcall
add
sub
push
cmp
data16
xchg
pop
adc
lock
pop
xchg
jae
lahf
mul
rorb
push
or
arpl
int3
add
ja
pop
cmc
jb
int
je
xor
push
push
loop
int3
shll
shlb
or
sahf
fsubl
clc
dec
add
incb
hlt
rorb
lods
mov
fistpl
mov
sub
lea
in
lea
popa
lret
ja
mov
push
jns
inc
addr16
out
pop
lds
loopne
ret
das
cld
outsl
adc
and
jmp
xchg
xor
in
rorb
addr16
es
xchg
jo
in
mov
push
rcll
mov
gs
cmp
mov
fiaddl
cmpsb
icebp
cmp
pop
and
pop
sahf
roll
aam
cmp
sti
aaa
aaa
xchg
mov
daa
dec
xlat
xor
roll
sbb
lods
add
or
adc
jno
mov
cmp
mov
xchg
lahf
inc
cmpb
mov
movsl
out
or
push
jne
sti
inc
mov
or
out
or
cmp
jb
fists
xchg
movsb
pop
cld
mov
out
mov
dec
enter
stos
and
mov
sub
nop
dec
fs
and
add
inc
jbe
out
andb
jb
js
scas
push
push
mov
pop
int
out
es
test
push
ljmp
pop
xchg
xor
ret
mov
mov
adc
sub
shrb
and
sub
jb
out
push
pop
rcrb
pop
outsl
or
cmc
mov
sbb
fs
ljmp
inc
out
xchg
int
popa
add
adcb
test
gs
push
mov
push
out
icebp
dec
arpl
lods
xchg
cltd
push
dec
ret
sarl
lcall
push
cli
aaa
rol
lds
jno
in
iret
hlt
mov
neg
in
lahf
or
insl
out
and
mov
sbb
mov
loopne
jns
dec
xor
inc
movsb
sbb
and
outsb
insl
mov
shlb
out
dec
push
mov
repnz
bound
xchg
sub
pop
push
rcl
loope
dec
cwtl
push
cmpsb
cmpsb
dec
cmp
and
mov
jle
inc
pop
cmpsb
shlb
sti
lahf
xchg
mov
or
dec
mov
das
push
pop
add
incl
out
cltd
test
or
or
add
lret
scas
pop
loop
pop
shrl
pop
push
aaa
push
cwtl
jnp
xchg
ror
jns
xor
xchg
imul
out
mov
imul
xchg
stos
stos
mov
dec
or
xor
push
xchg
mov
and
pop
pop
dec
pop
xchg
push
mov
or
sarl
adc
pop
sbb
arpl
pop
jmp
rclb
and
pop
push
std
xor
and
jne
xchg
jno
mov
ljmp
and
popf
sbb
adc
shrb
or
mov
cmpsl
push
jb
ja
jno
mov
test
mov
inc
test
mov
mov
push
gs
nop
xor
mov
rep
test
fists
sub
paddsw
jp
popa
xchg
fwait
inc
mov
sub
rcll
pop
mov
push
outsb
nop
and
or
shr
loopne
ds
ss
aas
ja
fcomps
xor
mov
dec
aaa
push
mov
sar
xchg
test
fwait
test
jge
xchg
popa
enter
in
xchg
push
and
testl
test
add
in
dec
add
out
scas
lods
mov
popf
inc
sarb
dec
mov
pop
out
mov
sbb
decl
je
add
pop
lock
xor
stc
ret
movsb
out
cltd
repz
mov
pushf
dec
push
or
cwtl
cmp
loopne
or
sti
sarl
inc
cwtl
cmpsb
cmpsb
neg
mov
lahf
fs
div
fisttpll
sub
hlt
push
iret
pop
outsb
xchg
cs
or
pop
testb
fsubl
adc
mov
rcll
nop
push
inc
mov
int3
jmp
push
packssdw
imul
out
cmpl
gs
dec
fnstsw
shrl
icebp
mov
inc
adc
in
lods
movsbl
or
movsb
stos
sub
xchg
xchg
adc
fistpl
mov
cmc
dec
fxrstor
pop
sbb
fcomps
aad
fsubl
dec
push
out
pop
inc
test
mov
idivb
sbb
pusha
and
fstl
lahf
xchg
imul
add
mov
xor
lds
rorb
pop
cltd
jb
out
imul
xor
es
lea
jae
cmp
call
cmc
push
pop
mov
jb
dec
pop
mov
fcmovb
rcrb
loope
sahf
adc
mov
mov
mov
mov
mov
cltd
sarl
cmpsb
dec
mov
pop
push
test
ja
or
shrb
data16
movsbl
test
jae
jecxz
xchg
add
mov
in
clc
cmp
xor
sbb
sbb
inc
iret
cmp
cld
jbe
stos
sahf
bound
cmp
rcr
xchg
push
scas
test
cmp
push
test
pop
push
lods
and
or
inc
adc
mov
sahf
push
inc
decl
mov
xor
xchg
mov
dec
call
pusha
lds
jg
adc
pop
sbb
aas
fisttps
push
pop
cmp
xor
push
push
cmp
push
dec
push
imul
pop
div
fistps
inc
out
pop
dec
sbb
jmp
mov
sub
das
cmp
aam
xor
iret
movsl
fldenv
js
cltd
push
ss
xor
push
jge
test
fstps
pop
ret
xor
sbb
fnsave
xchg
add
push
jne
adc
mov
fwait
call
aad
cmpsb
or
rclb
pop
imul
xor
ds
mul
cmp
cltd
and
and
xchg
mov
inc
inc
inc
inc
js
xchg
inc
xlat
stos
cmpsb
mov
sub
fwait
cmp
call
or
orl
add
repnz
aad
iret
jle
push
xor
rcl
lds
xchg
push
jne
jo
xchg
mov
clc
sub
test
ret
adcl
jg
es
cmpsb
ljmp
sbb
pop
dec
repnz
roll
push
int3
or
add
stos
sub
xchg
das
xor
ja
sub
sbb
in
inc
push
shlb
dec
out
rcrl
std
pop
sub
test
jo
popa
xor
ss
js
gs
arpl
sbb
cmp
mov
jecxz
cmp
lret
adc
xchg
subb
dec
or
dec
insb
popf
fisubl
and
shrb
mov
mov
cld
mov
and
sbb
lods
aad
jnp
inc
pop
fs
xchg
lea
fidivs
lcall
insl
fstpt
outsb
dec
sti
and
adc
aad
xor
inc
fnsave
mov
cmp
push
pop
add
aaa
fwait
in
inc
fucomip
sbb
jns
mov
out
mov
sbb
stc
idivb
pop
xchg
cs
ja
jb
add
mov
lods
jns
mov
gs
dec
lock
xor
sub
insb
lret
fisubl
aas
add
test
mov
cmp
sub
fcomps
xchg
pop
rolb
aad
in
xor
cld
outsb
movsl
scas
call
insl
push
xor
scas
mov
jmp
mov
repnz
pop
jb
xchg
popf
bound
test
adc
fstl
shll
orl
or
xlat
hlt
cwtl
stos
or
or
lret
movsl
in
pop
nop
iret
out
int
loopne
aaa
xchg
and
or
js
push
mov
sub
push
movsb
push
push
jmp
popf
cli
mov
mov
or
stos
notl
push
call
out
add
push
sahf
xor
stos
push
add
hlt
and
xchg
xchg
push
mov
mov
ret
mov
jo
ds
pop
add
lret
jmp
imul
cs
stos
pop
sahf
or
jle
outsl
push
or
mov
dec
xchg
out
int3
xchg
push
fisttps
lahf
lret
outsl
adc
lea
into
out
pop
mov
adc
insb
rolb
add
dec
cmp
or
mov
jns
mov
bound
or
in
int3
mov
jmp
shll
jnp
arpl
loopne
jecxz
xchg
aad
xor
cld
das
repnz
xor
push
fimuls
jg
jp
insl
pop
icebp
mov
jl
or
xorl
sbb
jae
cmc
or
dec
and
mov
repnz
dec
mov
scas
fmull
aas
jb
push
in
arpl
pop
inc
fstps
push
add
mov
push
mov
mov
jns
cli
adcb
push
xor
push
out
inc
xchg
ja
ret
jmp
sub
xor
push
or
cmp
lods
and
mov
cmc
mov
pop
orl
loop
fnstsw
jne
fiadds
mov
fiadds
test
movsb
pop
cmp
decl
imul
push
sbb
in
cmp
pop
ds
dec
ret
dec
arpl
adc
cmp
xor
xchg
xchg
add
out
test
loopne
inc
daa
push
adc
add
das
lret
add
sbb
ljmp
mov
std
adc
push
clc
sbb
push
inc
mov
loop
or
inc
pslld
nop
inc
inc
stc
mov
mov
pop
je
data16
mov
addr16
sti
insl
mov
stos
addr16
pushf
stos
int3
sarb
test
cmp
dec
out
inc
push
xchg
xchg
out
cmpsl
jp
clc
mov
inc
dec
cli
xor
lret
idivb
cwtl
inc
pop
sti
movsb
lahf
jle
mov
into
lret
insl
sahf
jmp
cmpsl
fcmove
jo
popa
jne
cld
pop
test
fiaddl
pop
dec
cmp
or
inc
daa
jns
pop
push
mov
test
jns
leave
adc
and
ss
movsl
xchg
sub
test
xor
pop
and
pop
mov
xor
xor
fwait
mov
mov
andl
repz
xchg
out
cmpb
cmp
fsubrp
fcmovne
sbb
dec
outsb
ret
lds
out
pop
mov
stos
jg
push
out
adcb
rcrl
and
push
cwtl
mov
jns
inc
out
push
xchg
fwait
leave
in
sbb
push
pushf
jge
jbe
and
ret
cmp
cwtl
sbb
lret
xor
hlt
ret
adc
mov
out
std
lods
aam
iret
sahf
out
aas
sbbb
lret
sti
xchg
xor
jo
xchg
cmpsl
sub
sbb
push
mov
data16
cmpsb
int
push
push
leave
push
insb
xchg
negl
pop
fisttps
sti
popa
ljmp
orl
pop
push
push
jp
push
xor
push
iret
test
pop
add
mov
dec
repz
jl
orb
rorl
push
in
jmp
adc
daa
xor
out
jmp
pop
inc
pop
xor
or
jns
mov
pop
scas
xchg
push
outsb
adc
xchg
stos
cmpsl
cmp
xor
mov
xchg
lods
iret
push
pop
jle
jns
push
inc
cwtl
mov
jbe
out
or
cld
push
add
jmp
jb
fdivrp
stos
adc
mov
sbb
cmc
ffree
mov
push
dec
jp
rorl
jnp
sarb
dec
jb
stos
cmc
or
mov
sub
jg
rcrl
jbe
sbb
xchg
aaa
out
cmpxchg
and
rorb
cmp
stc
mov
ss
mov
scas
imul
push
cmpsl
out
dec
mov
sub
xchg
test
lock
loopne
adc
cmp
dec
xchg
mov
xchg
mov
cs
insb
inc
subl
pop
mov
fmuls
je
fsubr
dec
push
push
repnz
push
push
mov
aam
and
sub
adc
cld
xchg
pop
ret
push
div
mov
mov
adc
jne
mov
les
add
loope
sub
ret
xchg
push
imul
inc
cmp
aam
push
movsb
in
into
fdivp
stos
add
mov
shll
sbb
or
jne
xorl
fldcw
adc
jbe
push
jle
stc
jl
fwait
or
mov
incl
lods
jns
pop
cmpsl
pop
xor
mov
inc
lods
lock
mov
sub
push
sub
push
fcoml
js
push
loopne
mov
fstpt
imul
jb
mov
pop
pop
lods
aaa
or
jbe
cmp
pop
adc
cwtl
add
dec
add
fldenv
int3
mov
push
shr
sub
cmp
jae
mov
int
rcll
adc
les
push
pop
push
sbb
dec
and
cmpsl
bnd
push
sbb
out
sbb
test
adc
lahf
data16
stos
outsb
mov
mov
inc
mov
dec
jmp
adc
mov
xchg
out
xor
dec
pop
add
cmp
lahf
or
jbe
jg
cmp
fidivrs
lret
data16
clc
xchg
jne
aas
xchg
fdivr
push
dec
jae
mov
cmc
adc
daa
mov
lods
or
dec
jge
mov
push
dec
test
ja
stc
jle
sahf
jge
testb
sbb
pop
aam
arpl
dec
cld
sub
xchg
stos
push
stc
fdivr
xchg
push
imul
test
pop
adc
xor
xor
add
dec
lds
jbe
imul
ljmp
aad
sub
scas
pop
jp
rol
mov
lcall
jle
push
shlb
sub
mov
cltd
or
popa
inc
push
and
adc
jmp
popf
ljmp
push
jmp
rcl
fstpt
sbb
dec
lcall
ja
lcall
icebp
hlt
xor
xor
dec
cltd
push
push
inc
push
call
in
stos
insl
jae
adc
bound
lea
pusha
inc
or
push
cli
inc
mov
test
mov
test
mov
and
sbb
pop
lahf
loopne
add
popf
inc
sbb
cmp
xchg
lret
push
cmpl
jb
test
xor
xchg
push
jo
push
and
jge
jno
jns
repz
sub
mov
addr16
xchg
int
mov
mov
fimull
mov
mov
out
mov
ret
nop
push
cwtl
push
hlt
lcall
add
mov
mov
dec
fmul
sub
inc
sub
sbb
and
clc
test
mov
push
add
popf
jl
movsb
sbb
lret
add
pop
sub
test
pop
fiadds
test
cwtl
or
push
dec
loopne
or
inc
les
pop
add
xchg
jne
cmp
push
test
jmp
mov
push
push
pavgb
jmp
mov
xchg
adc
fwait
cmpsl
int3
xchg
int3
loope
das
or
dec
out
ss
or
add
push
lret
pop
daa
pop
jo
sahf
stc
adc
les
idivl
ret
mov
and
movsb
jo
mov
stc
xchg
sbb
arpl
clc
push
push
pop
ret
push
dec
repnz
adc
mov
dec
repnz
inc
mov
sbb
imul
es
sbb
lahf
movsl
cmpsb
add
cwtl
add
jns
pusha
xor
cld
mov
lea
xchg
subl
repz
mov
ret
sbb
mov
sub
fs
pop
push
inc
fstpt
outsl
rorb
int3
repnz
jp
mov
testb
xor
mov
cmp
pop
sahf
xlat
add
mov
xchg
fwait
outsb
dec
or
pop
aad
xchg
ficomps
idivl
or
sbb
or
pop
les
pop
test
hlt
or
inc
and
int
nop
adc
push
cmpsl
and
fimuls
xchg
dec
adc
data16
js
mov
xchg
leave
cmp
xchg
arpl
sbb
cmp
into
pop
add
out
jp
inc
js
xlat
adc
jp
outsl
jmp
sti
jge
mov
adc
adc
xor
pop
adc
or
hlt
mov
sub
push
pop
inc
leave
insl
out
mov
call
in
popf
into
mov
jecxz
dec
sbb
sbb
lret
cmp
xchg
jecxz
scas
aaa
jb
iret
bound
push
fwait
bound
jo
push
or
outsb
scas
imul
jg
add
aas
aam
andb
mov
add
sub
clc
sub
mov
cmc
push
rcll
enter
mov
fnsave
outsl
bound
jne
sbb
addb
stc
jle
mov
lret
xchg
in
ret
mov
and
cmp
jle
pop
and
xor
or
lods
adc
mov
sub
popa
dec
xlat
xchg
int
xchg
enter
jmp
dec
mov
mov
mov
dec
movsb
mov
rolb
or
push
jmp
sbb
cli
movsb
sbb
addr16
inc
pop
aaa
cmc
stos
fdivs
push
pop
jge
insl
fucomi
and
decl
les
or
add
pop
nop
fwait
scas
test
xor
lret
inc
push
mov
jecxz
aam
fildll
cltd
js
adc
insl
test
jbe
add
jl
sbb
push
int3
jne
cli
push
push
mov
fidivrs
or
and
jecxz
sub
xlat
adc
test
xchg
xchg
jnp
cmp
pop
inc
jno
push
dec
pop
mov
sub
pop
add
idiv
addb
xchg
add
jns
pop
fdivs
mul
aad
xor
xchg
sbb
movsl
pop
xchg
ret
dec
arpl
out
subb
sbb
cld
mov
ret
fisubrs
lock
pusha
es
xchg
xchg
imul
movsl
loop
cmpb
aad
repnz
xchg
rcll
jle
pop
loop
pop
inc
push
inc
mov
and
rcrl
fs
or
dec
cwtl
mov
cld
mov
loop
mov
in
push
jecxz
mov
mov
test
mov
fldcw
fstpl
int3
inc
in
daa
int3
addb
in
jge
push
jecxz
jns
lret
xchg
pop
cmpsl
faddp
adc
ja
xlat
jge
xchg
fcmovnbe
je
or
in
jmp
pop
movsb
fimuls
gs
dec
ds
cld
cmpsl
cltd
pop
pop
sub
call
xchg
jae
push
xor
xchg
add
lods
out
or
imul
insb
popa
mov
sbb
scas
xor
sahf
xlat
inc
int
stc
sub
pusha
scas
jne
lcall
lods
add
loope
jne
in
push
mov
mov
pop
popa
mov
adc
push
jns
fs
push
pop
add
lods
mov
inc
test
pop
sbb
je
pop
cmp
dec
push
jmp
lcall
mov
mov
imul
pop
dec
sbb
pop
lcall
rorl
movl
pop
jo
loope
and
int
pop
and
sub
daa
sbbl
aas
fsub
imul
jecxz
and
sbb
mov
lret
mov
xorb
test
ret
xor
jmp
test
xchg
xchg
jecxz
cwtl
cwtl
mov
shlb
pop
xchg
pop
fwait
adc
ret
sbb
sbb
fmull
adc
or
lahf
jns
in
or
rorl
enter
pop
xor
mov
rclb
loopne
movsb
pop
mov
mov
xchg
adc
cmpsl
mov
inc
daa
dec
push
arpl
xchg
xchg
imul
sub
push
sbb
addr16
icebp
subb
jmp
lcall
enter
jl
out
pop
and
mov
fs
popa
adc
into
popf
pop
inc
mov
adc
lds
mov
loope
dec
rorb
sbb
stos
hlt
and
fld
ret
jp
mov
add
lcall
fisubs
test
loopne
repz
out
cmp
clc
cmp
js
aad
out
sbb
ror
mov
cli
bound
cmp
data16
mov
jnp
or
jmp
ret
loope
mov
or
dec
loope
push
sbb
insl
movsb
testb
xor
je
push
and
ss
daa
adc
fmull
stos
ret
jecxz
stos
in
popa
pop
cld
xchg
inc
push
subb
xor
adc
outsb
add
dec
jbe
loop
sub
add
jnp
mov
xor
leave
fisubl
insl
push
lods
int3
sbbb
mov
xchg
clc
or
cmp
xchg
pop
shl
jbe
add
sub
mov
push
loope
mov
mov
int
and
aas
mov
pop
pushf
xchg
or
andb
in
dec
fiadds
aad
jnp
push
xchg
add
leave
inc
xchg
pop
iret
mov
dec
push
in
cmp
xor
addr16
ja
aaa
adc
loop
repnz
or
and
push
sahf
movsl
std
popa
pop
cmc
inc
or
stos
rclb
mov
pop
inc
lds
jge
aas
fwait
jne
lods
xchg
mov
rol
cs
dec
lods
cmp
sbb
ret
push
insl
testl
lahf
mov
mov
cmpsb
mov
popf
adc
adc
shrb
lock
stos
push
int
add
scas
mov
mov
adc
loop
aaa
sbb
mov
cltd
cmp
fisubs
lret
mov
xchg
inc
repz
in
adc
mov
mov
fldenv
add
mov
shrb
adc
adc
adc
cmp
push
sub
pop
adc
xor
enter
sti
add
ret
movsb
adc
rclb
xchg
insl
cmpsb
push
inc
test
inc
cmp
mov
lret
dec
pop
lock
jmp
mov
fstpl
xchg
mov
or
shr
repz
sub
cltd
mov
ret
mov
es
in
push
jb
rcrb
dec
ret
cmp
cld
sbb
jp
pop
insb
adc
lods
sahf
mov
and
xor
inc
jnp,pn
bound
imul
xchg
inc
inc
ss
push
iret
icebp
fistps
fwait
imul
mov
call
jb
outsl
push
jae
add
fidivrs
or
fwait
lcall
xor
xor
pop
xor
pop
iret
xorb
in
xchg
pop
mov
cmc
fdivrl
cmpsb
dec
or
xchg
aas
jae
xor
dec
shlb
mov
sub
arpl
xor
ja
mov
inc
pop
movl
lcall
inc
xor
mov
push
xchg
push
scas
rcrl
hlt
sti
outsb
jne
or
pop
inc
or
movb
mov
outsb
sbb
sub
iret
in
jae
test
and
mov
sbb
loope
jl
jmp
dec
adc
rolb
fildll
jbe
add
cmc
ds
push
outsb
lods
dec
mov
lcall
dec
dec
in
mov
sarb
xor
clc
and
mov
repz
rcrl
push
icebp
sbb
clc
aas
xchg
jmp
sub
xor
ret
push
mov
loop
mov
push
lahf
mov
sbb
inc
ljmp
into
xor
xchg
ljmp
jp
mov
pop
inc
xchg
imul
add
sub
add
inc
dec
in
dec
mov
mov
push
push
or
das
shll
xchg
lods
fldenv
and
call
mov
andl
inc
mov
push
cli
imull
roll
add
std
aas
sbb
sub
xchg
es
xor
clc
in
adcl
xchg
or
sbb
adc
sbb
loop
in
stc
xchg
xchg
jnp
ss
cli
aad
ljmp
xor
iret
pop
push
and
ret
jb
in
mov
jg
fisttps
push
mov
push
leave
das
int3
aas
je
inc
test
mov
ljmp
popa
jb
jb
ret
push
dec
push
push
and
lea
mov
inc
mov
cmpsl
shlb
addr16
sbb
imul
lcall
ja
and
sahf
daa
mov
cld
mov
adc
push
jg
dec
mov
out
rcll
push
and
gs
cmpb
xorl
in
insb
cs
icebp
in
pop
jns
cli
dec
sub
addl
movb
test
insl
les
and
les
mov
mov
mov
in
insl
popa
sbb
xchg
sbb
test
stos
fs
and
lods
cmp
jg
add
fs
out
sub
dec
pop
adc
ja
xor
mov
mov
adc
mov
imul
test
pop
pop
shlb
xor
xor
xchg
lret
repz
push
push
testl
dec
ja
shlb
pop
jge
push
adc
and
cltd
std
imul
rep
mov
or
insl
daa
sbb
shll
inc
mov
xor
jg
lock
jle
popf
xchg
mov
arpl
adc
xchg
mov
mov
mov
and
mov
pop
sbb
push
mov
xor
call
mov
arpl
sbb
add
andl
icebp
repz
mov
mov
sti
arpl
xor
outsb
cld
push
jo
aas
and
enter
test
dec
les
stos
xor
add
xorb
inc
inc
or
cmp
ss
mov
ds
mov
loopne
xor
push
jmp
pop
xchg
xor
fcomps
push
push
xchg
jg
dec
cmpb
movsb
int
inc
call
inc
pushf
hlt
mov
push
lea
xlat
adc
jle
pop
jmp
xor
dec
incl
in
loop
and
add
pop
add
dec
adc
sub
cmpsl
dec
fcmovnbe
outsb
push
shlb
pop
sbb
mov
or
jmp
jecxz
cmc
pop
ret
mov
and
mov
mov
mull
add
adc
enter
xor
stos
jmp
xchg
jge
pop
push
xchg
xchg
stos
test
mov
je
pop
dec
imul
pop
inc
and
arpl
push
int
scas
rcrl
dec
inc
or
mov
jo
mov
test
sahf
push
gs
test
fs
pop
xor
cmp
loop
into
add
cmpl
popa
enter
fcmovbe
stc
fldenv
pop
or
test
push
and
jl
roll
dec
and
sbb
adc
divl
fwait
scas
mov
orl
gs
fwait
inc
xor
adc
cmp
sub
cmp
insb
push
add
daa
shll
ja
cmc
lret
fwait
pop
daa
jl
and
pop
je
mov
ret
xor
mov
xorl
pop
add
inc
fs
test
mov
mov
jns
rcrl
fwait
push
cs
jno
arpl
jae
lret
enter
in
rclb
and
inc
lods
mov
jne
aam
sbb
xor
fistpll
jg
push
add
and
adc
add
in
or
push
cmp
mov
mov
idivb
mov
ret
test
testb
lods
insl
arpl
sbb
cltd
push
and
aam
fs
jbe
sbb
int3
push
inc
aaa
mov
scas
inc
jle
inc
insb
mov
push
shl
out
pop
cmpsb
mov
mov
jns
or
lcall
lahf
adc
stc
dec
pusha
jae
and
push
fisubrs
scas
sub
mov
icebp
mov
ret
sub
mov
loop
ljmp
jns
out
inc
aas
jbe
dec
pushf
lret
mov
sar
out
shr
lahf
pop
push
push
xchg
lods
fidivs
push
xchg
pop
mov
jl
and
out
test
dec
lcall
out
test
in
imul
dec
pop
sbb
push
sub
addr16
sbb
sbb
in
add
or
cmc
xor
cmpsb
xchg
ljmp
sub
sbb
stos
imul
pop
jp
adc
xchg
aam
ljmp
push
and
lret
mov
mov
push
mov
insb
test
unpcklps
xlat
leave
push
stos
enter
mov
jno
or
dec
out
shll
sub
cmp
or
pusha
mov
fs
shlb
jns
rcl
sub
jge
pop
xchg
loop
icebp
pop
cmpb
pop
fwait
aam
movsl
jne
in
ror
pushf
add
lea
add
mov
mov
mov
ret
cmp
enter
push
and
and
shlb
push
dec
cmp
aaa
std
mov
jg
in
xchg
jmp
and
pop
inc
dec
inc
cli
xor
out
jp
lds
bound
xor
lahf
cli
pop
adc
xor
arpl
mov
notb
adc
mov
cmp
cmp
aaa
jmp
pop
and
or
jae
inc
xchg
hlt
pushf
and
pushf
adc
fwait
mov
test
cmpb
out
xor
and
loopne
add
sub
cmpsl
xchg
cltd
push
mov
and
mov
test
xor
pop
cwtl
sbb
clc
dec
shlb
pop
pop
jp
hlt
pusha
adc
adc
add
xor
push
xor
xor
fucomi
jl
mov
dec
imul
mov
das
xchg
inc
js
sbbl
or
sbb
xchg
pop
sbbl
and
xor
pop
movsb
testl
in
xor
mov
ljmp
and
lods
dec
pop
repz
adc
addr16
in
sbb
xchg
insb
incb
xor
cmp
xabort
fiaddl
mov
pusha
movnti
pop
adc
pushf
inc
jb
push
inc
adc
std
lahf
and
or
repz
xor
mov
xor
in
ljmp
sub
cmc
es
lods
insl
jmp
or
dec
and
pop
sbb
sub
sbb
add
inc
clc
xlat
push
insb
aas
sub
xchg
push
or
test
cltd
push
popa
or
nop
ret
inc
in
out
jge
pop
push
adc
and
cmp
add
and
fsubrl
mov
ret
jle
inc
add
inc
test
mov
shlb
mov
das
test
test
xchg
dec
cwtl
adcb
cs
ss
cmp
insl
cmp
sub
xchg
xchg
pop
es
popf
pop
cmp
cmp
jg
or
add
inc
incl
loopne
int3
mov
sbb
loope
xchg
jle
lea
mov
push
pop
shr
cmp
xchg
sbb
mov
insb
enter
pop
lock
or
js
add
push
jae
sub
iret
jecxz
mov
daa
inc
loopne
sbb
mov
cmp
loope
ss
std
adcb
lock
push
dec
sub
mov
lret
aam
stos
xor
sbb
xchg
scas
mov
jg
push
mov
repz
push
lret
jmp
std
out
mov
loop
lahf
sbb
jb
mov
xor
jbe
xor
daa
lret
xchg
add
push
jo
daa
xor
test
cmpsl
cmp
fwait
cmp
fidivl
and
fwait
je
adc
cs
cld
dec
negl
inc
ficomps
xor
nop
push
add
adc
sbb
and
arpl
stc
dec
dec
mov
jbe
rcrb
mov
xlat
sub
push
lods
and
mov
insb
jb
test
xchg
push
loopne
daa
jle
jge
xchg
add
call
push
aaa
cli
mov
push
add
rorl
cld
pop
pop
lea
cmc
mov
lea
inc
ja
sub
adc
sbb
es
or
mov
aad
shll
imull
xor
push
lods
jge
std
xchg
out
and
add
daa
inc
fwait
loope
out
jmp
dec
add
mov
or
roll
aaa
stos
and
ja
mov
hlt
push
cli
jg
int3
test
xchg
dec
adc
roll
popf
lods
sti
mov
stos
mov
shlb
lcall
mov
sub
loopne
fsubs
mov
imul
call
out
and
cli
pop
xchg
mov
or
out
data16
loopne
mov
repnz
call
inc
outsl
pop
mov
push
addr16
pop
aas
cmpl
fcomi
sbb
lea
push
xchg
mov
inc
sub
jge
fstpt
xchg
xchg
xchg
test
cli
in
push
pop
sub
out
gs
pop
dec
jp
adc
jle
in
pop
les
loope
addr16
pop
dec
mov
jne
cs
push
mov
jle
push
cli
mov
in
add
lret
jns
pop
outsl
add
and
sbb
fs
lcall
in
inc
jg
push
mov
sub
push
push
push
xchg
mov
push
cmp
jb
jmp
rcr
xchg
testb
fisubs
pop
sahf
sbbl
in
xor
mov
out
push
add
addr16
scas
mov
fldl
pop
pop
xchg
dec
add
push
cmpsl
leave
dec
repnz
cmp
leave
sahf
cmpsb
fiadds
es
popf
sbb
cwtl
or
sarb
scas
xchg
jne
mov
pop
cmpsl
jno
cmpsl
cmp
mov
jnp
sbb
pop
xchg
sbb
inc
in
shld
xchg
lea
jge
insb
push
sti
pop
dec
mov
jg
mov
xor
cmp
or
and
jns
lcall
or
out
sbb
mov
inc
icebp
sbbb
or
std
lahf
cmp
push
outsb
out
test
leave
push
xor
cmp
pop
fcmovbe
stos
stc
sahf
andl
fidivl
sbb
loope
or
cmpsl
or
add
push
fstpl
test
sarb
or
cmpsl
push
or
fistl
loope
int3
lods
out
xor
dec
test
aaa
aas
sbb
mov
push
jo
aad
leave
imul
cltd
mov
pop
push
sub
adc
inc
lahf
adc
or
push
xorb
shrb
mov
les
dec
sbb
jle
test
or
bound
dec
jbe
inc
fwait
lods
jo
mov
and
sub
and
mov
jo
fnsave
pop
xchg
lahf
pusha
call
out
sti
adc
lods
jo
and
xchg
cmp
mov
mov
xor
shl
repz
add
out
dec
nop
lcall
push
fstpl
test
enter
pop
and
add
lret
push
cmp
arpl
sbbb
pop
iret
out
lahf
or
jmp
ret
decl
sub
pusha
lcall
adc
dec
adc
hlt
pusha
les
or
mov
daa
or
imul
aam
dec
mov
lea
fsubl
cmpsb
jns
cmpsb
pop
adc
dec
inc
add
and
test
mov
inc
mov
int3
insb
sarl
and
pop
mov
push
push
lcall
jp
or
push
mov
push
mov
cld
call
scas
insl
lods
lea
adc
sbb
jp
cmpsb
xor
and
and
adc
nop
cld
sub
mov
loope
and
pop
leave
pop
mov
push
jno
cmp
sub
or
lea
in
ljmp
mov
push
out
sbb
push
in
js
cmp
ret
std
xor
ds
adc
adc
push
mov
mov
mov
xchg
push
inc
and
sub
fs
insb
cmp
sbb
enter
pop
mov
push
dec
push
repnz
outsl
clc
fdivl
xor
fisubs
in
cmpsb
jl,pt
push
sub
xchg
sbb
xor
adc
lea
fnstcw
and
popa
out
mov
cmp
mov
ret
pop
test
and
mov
and
add
jae
adc
or
dec
fldenv
addr16
stos
cmp
xchg
adc
mov
gs
jge
cli
xchg
mov
out
popa
in
and
inc
ljmp
imul
movsl
xchg
das
jecxz
mov
js
repnz
das
xorb
push
jo
mov
dec
pop
inc
push
or
das
in
scas
out
cmpsl
push
mov
loop
xor
outsb
in
je
cmp
jl
sbb
xchg
and
or
cmp
and
dec
mov
xchg
lea
subl
jg
xchg
daa
pop
test
xchg
sbb
mov
sub
rorl
stc
imul
sbb
mov
cmp
daa
jl
and
mov
leave
push
lcall
push
ret
jnp
jp
mov
cmp
arpl
cltd
aam
mov
or
js
jbe
or
sub
int
popf
sbb
add
in
mov
hlt
movl
and
push
loop
cmp
xlat
ret
mov
pusha
add
outsl
addr16
mov
dec
jae
sbb
pop
rorl
mov
movsl
mov
loopne
pop
pop
dec
movsb
jl
divl
leave
dec
add
push
cld
dec
push
std
imul
sbb
imul
dec
das
mov
out
lahf
imul
dec
mov
mov
jecxz
or
push
gs
sbb
inc
dec
push
mov
dec
loop
arpl
and
sbb
leave
or
mov
shll
lret
push
add
test
push
mov
jae
test
and
cmp
jns
push
mov
and
jmp
scas
sbb
sub
push
mov
push
jmp
pop
xor
sub
cmp
xchg
xchg
or
in
cwtl
mov
mov
test
cmp
hlt
jae
pop
cmp
and
imul
xor
movsb
xchg
push
mov
push
int
mov
das
fbstp
add
aad
ficompl
jno
popf
mov
add
xor
cli
imull
loope
pop
testb
xchg
out
popf
mov
and
mov
adc
jnp
psllq
clc
cli
xchg
sub
mov
mov
push
cwtl
pop
stos
test
sub
insb
pop
fildl
xor
or
shrl
sbb
sub
rcll
push
or
dec
ljmp
jbe
test
or
scas
mov
and
sahf
mov
mov
mov
jmp
sbb
cmp
lods
xlat
in
sbbl
div
std
add
sti
push
pop
loopne
ds
sbb
xchg
popa
push
and
pop
or
pop
inc
aaa
inc
pop
icebp
xchg
dec
and
insb
cmpsl
sbb
fsubrl
push
cmc
loop
pusha
int3
push
pop
test
sub
adc
dec
ljmp
mov
lods
xchg
jg
insl
test
decb
dec
sbb
and
xchg
jmp
push
jbe
shlb
jno
cmc
cmpsl
clc
fdivl
cmp
mov
push
repz
insb
mov
imul
cmp
mov
sti
xchg
xor
int
insl
jecxz
mov
xor
push
adc
popa
bound
push
push
cmc
nop
jmp
les
scas
add
xchg
ds
ljmp
in
add
leave
inc
jecxz
aas
fwait
fwait
call
int3
lds
out
jg
adc
or
mov
cmp
fcmovnbe
sub
inc
mov
in
ljmp
test
dec
sub
std
movsl
loope
pop
and
leave
and
lret
or
dec
adc
nop
sub
arpl
push
push
jno
adc
repnz
cli
je
outsl
fwait
daa
ds
jb
lret
movsb
mov
mov
jg
sbb
arpl
push
jnp
sahf
push
mov
mov
xor
lea
scas
xor
cmp
outsb
sbb
mov
sub
sub
inc
jae
aas
pop
out
add
out
aam
fwait
imul
les
scas
mov
test
xchg
dec
mov
std
push
sbb
int
inc
push
ljmp
push
jo
into
xor
add
or
test
add
pop
int3
fcoml
pop
lcall
sahf
ret
call
cmp
and
and
pop
stos
nop
inc
out
dec
insl
mov
pop
mov
int
adc
jbe
sbb
outsb
push
mov
jge
insb
mov
add
dec
cs
xor
sbb
orl
mov
push
mov
and
sbb
test
sub
lds
scas
mov
lods
arpl
add
movsb
ja
jmp
test
jae
lret
mov
idiv
sub
pop
pop
pop
addr16
pop
xchg
sub
cmp
pshufw
inc
orl
sub
inc
idiv
popa
inc
xor
out
addl
push
mov
cltd
inc
leave
test
push
in
cmp
mov
xchg
pop
cmp
mov
mov
mov
adc
xchg
stc
mov
test
lret
and
loope
push
fs
pop
rcr
sbb
test
mov
dec
lods
adc
xor
rcll
push
xchg
ljmp
leave
in
es
in
jbe
lret
pop
adc
sub
push
xor
or
adc
mov
lds
testb
mov
arpl
inc
mov
jle
loop
pop
mov
imul
addl
pop
loope
stos
clc
lods
jae
dec
push
dec
and
lods
cli
sub
add
mov
mov
dec
aas
bndldx
adc
jecxz
je
or
add
adc
pop
xor
cltd
scas
xor
hlt
jmp
mov
sub
push
pop
faddl
sbb
mov
test
std
xlat
js
daa
push
mov
pop
lods
push
shlb
pushf
es
jno
jns
icebp
lock
pushf
call
das
cld
sti
imul
shll
outsl
pop
div
cmp
xor
std
xchg
and
test
call
enter
aad
adc
test
xor
int
lret
pop
pop
sbb
jne
mov
adc
xorb
outsl
dec
outsb
dec
pop
mov
jno
popf
add
lahf
mov
xchg
dec
icebp
dec
mov
dec
movsl
push
xchg
fcom
mov
sbb
jg
fsubs
addb
sub
mov
shl
dec
pushf
push
fnstsw
std
fisttpl
enter
out
xchg
enter
lret
add
pop
mov
sub
aam
sbb
and
fnstsw
and
xor
clc
cwtl
popf
xchg
lret
popa
clc
test
xchg
outsb
jbe
and
jl
testb
ret
mov
sbb
not
jbe
insl
xor
dec
je
nop
fildl
mov
mov
in
pop
add
pop
addr16
inc
xlat
sbb
out
sbb
pop
filds
out
jmp
push
arpl
gs
notl
jmp
mov
sub
pop
out
dec
aaa
or
js
add
shrl
jae
sub
lcall
jno
mov
dec
in
imul
add
xor
addl
jmp
in
loopne
xchg
mov
idivl
push
dec
jle
xchg
adc
mov
add
fldcw
flds
xchg
lods
shl
xchg
pop
ss
es
out
sti
mov
out
jp
adc
movsl
scas
loop
out
loopne
jno
mov
fdivrp
cmp
push
push
fmull
adc
dec
push
adc
mov
jae
pop
add
xor
jg
mov
cs
divb
inc
test
add
dec
xor
loopne
xchg
stos
mov
fwait
cs
pop
mov
dec
jae
rcr
mov
mov
sub
arpl
inc
jae
jmp
sbb
repz
imul
ja
cmpsl
pop
imul
loop
daa
test
outsl
mov
divl
push
jnp
lcall
xor
bound
add
aaa
pop
lds
cmp
sub
xchg
mov
in
push
mov
into
push
sub
jmp
dec
xchg
sub
jmp
popf
pop
xchg
lret
adc
jb
test
pop
sub
sbb
jns
imul
sub
popf
arpl
lea
mov
je
popf
out
push
repnz
iret
fldt
dec
ficompl
sbb
cmp
pop
sub
and
shr
das
adc
or
and
daa
out
push
iret
xchg
sahf
popf
jae
shll
sbb
xor
std
mov
in
mov
push
inc
or
shl
shll
cltd
test
mov
enter
add
int
subl
xor
push
data16
std
rclb
or
xor
repz
bound
xlat
ret
mov
fcmovnb
inc
jge
fcmovb
jno
je
outsb
sbb
je
and
fsts
cmc
cwtl
cwtl
fsubrl
int
pop
lahf
pop
cmp
imul
inc
stos
test
mov
and
in
xchg
dec
int3
fiaddl
jmp
shll
scas
jge
loop
fldcw
daa
lea
cs
mov
rolb
fldcw
out
dec
xchg
dec
and
movsb
pop
test
inc
sub
push
xchg
push
add
mov
sub
sub
test
mov
ret
jae
pop
mov
in
mov
push
or
insl
hlt
push
inc
aad
jns
xor
pop
push
notb
pop
pusha
test
jl
in
orl
popa
and
pop
sbb
out
cmp
movsb
xor
mov
jle
cmpl
arpl
push
xor
enter
test
sub
push
and
cmp
dec
and
vmovddup
inc
xor
push
iret
movsb
mov
scas
movsl
nop
mov
dec
ljmp
aad
and
int
adc
popa
loopne
out
xor
in
fs
mov
dec
pop
aas
imul
rorl
das
xchg
fsubs
sbb
adc
test
mov
mov
sub
stos
pop
inc
je
jg
add
pop
lock
jle
and
fwait
xchg
add
mov
mov
arpl
das
push
scas
in
add
fs
lods
pop
mov
push
mov
mov
inc
add
ret
scas
adc
movsb
loop
mul
pop
loop
adc
shl
jmp
test
sti
gs
adc
not
aam
xchg
nop
pop
mov
jno
pop
fsub
mov
scas
or
movl
inc
das
insl
sbb
adc
ja
pop
xor
mov
mov
mov
jo
daa
pop
clc
lahf
test
mov
and
fidivl
sub
mov
ficompl
push
jle
xchg
fwait
push
mov
out
popa
sub
or
iret
int
pop
pop
addb
loopne
sahf
pop
cmp
mov
mov
xor
push
lret
andl
mov
scas
int3
mov
xor
test
fdivp
jae
add
sub
fidivl
dec
mov
jb
lret
scas
dec
mov
inc
sub
rol
fdivl
je
add
inc
dec
setb
inc
addr16
add
add
push
lret
jg
call
repnz
sbb
push
cmp
jp
mov
xchg
test
mov
jae
sbb
js
in
lock
shrl
mov
mov
rolb
nop
mov
sbb
and
add
fwait
in
int3
xchg
fildll
repnz
jb
pop
stc
xor
cwtl
sub
sbb
cld
dec
adc
adc
sub
sub
movsl
push
cli
mov
and
out
dec
mov
jns
mov
add
mov
fwait
aas
cmp
arpl
mov
dec
jl
aas
addr16
xchg
sbb
inc
rcrl
jg
jle
aam
push
xchg
dec
mov
xor
cli
ret
fs
stc
fdivrs
mov
adc
in
and
out
add
sub
mov
testl
mov
sti
push
xor
fiaddl
sbbl
dec
shll
dec
clc
push
dec
aaa
cmp
imul
inc
or
lahf
add
mov
aam
xchg
add
test
sub
pusha
dec
adc
sub
pop
sub
fstl
negb
iret
jnp
nop
pop
clc
icebp
addr16
andb
das
rep
mov
in
je
jmp
push
in
xchg
push
pop
nop
cmpsb
adc
and
or
push
sub
sub
mov
jno
mov
add
adc
push
loop
movsb
xchg
das
xchg
push
pop
sbb
movsb
iret
xchg
mov
int
mov
xchg
sti
clc
lds
ljmp
jmp
jnp
in
cmp
aaa
fucom
mov
dec
nop
fildl
mov
loope
scas
cmp
jg
enter
fisttpll
add
xor
arpl
or
and
les
jne
and
cltd
test
sahf
faddl
int3
fwait
xor
lods
hlt
pusha
inc
arpl
xor
inc
jecxz
mov
sti
inc
adc
test
ds
adcl
cld
shlb
pop
sub
dec
negl
insl
dec
outsl
jl
aad
and
and
fs
lea
jg
mov
dec
mov
stos
arpl
add
dec
fisubs
loop
cltd
in
mov
jo
gs
push
sbb
fisttps
pop
xchg
sbb
xchg
xor
dec
xchg
outsb
shll
int3
dec
ljmp
ret
popa
and
mov
loopne
aad
sarl
pop
rcrl
aaa
add
ss
bound
fstl
dec
test
xor
jo
or
push
lods
pusha
aas
jo
or
cmpsl
out
adc
xor
jmp
iret
repnz
roll
mov
pop
loopne
enter
cs
sub
inc
sub
push
out
xor
fsubs
xor
adc
dec
fistpl
movsl
pushf
nop
jns
xchg
sub
dec
dec
mov
outsb
lret
in
mov
mov
mov
cmp
das
cmp
stos
push
jge
push
add
mov
jns
lcall
xchg
push
xlat
outsl
mov
dec
dec
loopne
movsb
dec
enter
stos
add
ss
lret
sub
rorl
lret
push
pop
mov
xor
divb
sub
sub
mov
inc
imul
ret
popf
jle
push
xor
test
mov
jno
cmp
xor
pop
lds
push
push
sbb
lds
pop
data16
push
lcall
nop
stos
loope
pop
adc
insb
mov
pop
dec
push
repz
add
push
dec
shl
pop
sbbb
cwtl
clc
push
pop
ja
push
adc
loop
push
jl
sbb
push
testb
mov
jmp
movsl
jo
gs
jl
pop
and
frndint
sub
insl
rorb
stos
fwait
xchg
jl
shrb
sti
dec
adc
mov
cmp
adc
enter
jno
loop
pop
push
jle
test
mov
inc
ja
lahf
fwait
test
dec
xor
add
push
pminsw
fdivp
and
sbb
fmull
adc
aam
pop
jns
std
jns
in
mov
xchg
js
sbb
testl
incb
xchg
pop
insb
mov
mov
out
div
mov
out
push
mov
pusha
xor
cs
dec
mov
xchg
cmc
inc
lahf
test
lds
mov
test
xchg
xchg
ret
ljmp
push
bound
adc
ficomps
test
arpl
inc
pop
pushf
bound
test
push
shlb
cmpsl
das
jle
xorl
out
out
jmp
xchg
sub
rcll
sahf
push
lods
jno
scas
psubw
xchg
fistpll
add
shl
xor
lds
push
cmp
push
arpl
bound
icebp
les
stos
inc
mov
fdivs
cmovne
xor
lahf
mov
jl
pop
sbb
mov
in
les
sbb
popa
cs
aad
mov
aam
ret
rcl
push
jb
xor
cmp
xchg
sub
cltd
leave
sub
adc
fldt
fdivrl
lock
and
loopne
or
add
sub
scas
cmpsl
andb
shll
loope
push
push
xchg
push
aas
xor
xchg
outsl
ljmp
pop
hlt
mov
push
std
loop
aaa
jns
mov
xor
xchg
pop
and
lret
scas
cmpsb
pop
dec
fcoms
cmc
mov
sbb
std
sbb
xor
lods
mov
hlt
fdivrp
les
int
mov
scas
jl
mov
or
lock
les
movsb
aaa
push
adc
sub
add
sbb
or
pop
lret
lahf
mov
movsb
xchg
xchg
mov
and
dec
in
ljmp
shrb
mov
sbb
in
dec
out
call
scas
int
and
xor
in
movsl
push
aaa
xchg
sub
inc
pop
leave
es
mov
dec
inc
popa
add
mov
pusha
xchg
mov
push
jle
movsl
jae
or
cwtl
lock
mov
mov
pushf
xor
xchg
test
ud1
inc
hlt
xchg
xor
lods
push
stc
repz
xchg
ds
push
cld
ljmp
or
mov
insl
lahf
and
push
daa
mov
int
ds
xchg
sub
add
adc
movsb
jp
adc
or
cmpsb
and
popa
or
sarb
xlat
or
cwtl
cmpsl
shrb
fs
xor
cwtl
and
lahf
sbb
fmull
imul
int
int3
sub
add
sarb
cmp
sub
mov
sbb
adc
out
lcall
push
dec
jbe
push
sub
cwtl
in
jbe
iret
dec
faddl
lds
mov
and
xchg
fisttps
mov
dec
scas
jg
addr16
pop
int3
sarb
mov
xor
xor
test
push
ret
pusha
cmp
xchg
enter
jo
fbstp
inc
xchg
rorl
add
fisubrs
ficoml
xchg
jae
shrl
rorb
cmp
lret
xor
xor
adc
into
test
lods
lds
dec
xchg
jo
or
lods
mov
or
xor
fadds
inc
pop
jle
mov
ret
stc
fstpl
pop
in
out
push
push
sub
hlt
je
imul
and
and
mov
cmp
sub
sbb
jns
pop
mov
fsubp
in
push
dec
les
or
xor
lods
jne
stos
push
xor
mov
insl
push
loop
insb
jnp
out
in
mov
cli
outsl
push
sbb
leave
sahf
adc
les
lcall
jb
jnp
jle
enter
xchg
and
sub
jo
and
mov
pop
lret
xor
pop
pop
mov
mov
dec
les
push
cmpsl
lods
stc
fisttpl
out
pop
mov
adc
lcall
xor
bound
rcr
imul
lret
jb
jecxz
inc
leave
ss
jnp
je
out
call
rclb
jo
filds
dec
pop
mov
jg
rcl
hlt
in
fistpl
je
sub
cmp
adc
rcl
push
mov
sbb
movsl
insb
dec
addb
jbe
mov
mov
je
adc
ss
cmpb
sub
mov
push
in
lea
xchg
aam
cmp
mov
and
mov
insl
lods
cltd
icebp
loopne
sub
lds
jge
rcl
lret
js
xchg
sti
mov
std
sbbl
mov
mov
adc
stc
dec
lcall
cmc
add
jns
mov
fnstcw
push
pop
ss
cmp
xchg
fs
xor
and
mov
sub
in
push
mov
int
inc
dec
les
aad
inc
shr
in
xor
jmp
sbbl
and
xchg
pop
test
adc
ret
and
xchg
mov
jb
cwtl
lods
and
sbb
xchg
test
pop
adc
xchg
insl
mov
sti
outsl
jbe
sahf
add
inc
aad
cmpsb
pop
push
clc
mov
aas
inc
jecxz
pop
popf
fsubp
pop
cmp
mov
jmp
push
dec
enter
and
push
sub
xchg
jo
dec
in
cld
je
xchg
xor
mov
xchg
shr
sub
stc
test
dec
stos
imulb
fwait
pop
dec
mov
cmp
lea
lret
mov
fwait
scas
cmp
push
adc
and
jmp
loop
adc
fiadds
cmp
dec
sti
jp
out
cmp
scas
sbb
and
add
dec
and
mov
popf
push
ss
faddl
mov
sub
mov
inc
fisttpl
cmc
jo
dec
or
test
into
ror
xor
xchg
pop
cmp
push
mov
rcrb
and
pushf
rolb
scas
mov
inc
gs
arpl
outsb
adc
cli
push
jmp
addr16
gs
jae
or
loope
insl
cmp
orb
je
mov
int3
shl
push
push
jmp
adc
lcall
stc
aas
int3
jg
into
mov
cmp
pushf
arpl
push
xchg
outsl
sub
mov
jle
mov
cmpsl
rcl
adc
ret
outsl
mov
fdivs
inc
movups
stc
sbb
jae
cltd
mov
pop
cwtl
lret
ds
xlat
pop
xchg
je
mov
repnz
loope
dec
xchg
cmc
push
inc
jnp
mov
nop
mov
je
cmp
pop
ja
mov
jnp
inc
es
in
mov
dec
push
jo
dec
or
xchg
xor
jb
dec
test
dec
movsb
fs
mov
sbb
repnz
add
imull
mov
ja
xor
lcall
xchg
fwait
cmp
fsubs
xchg
dec
mov
adc
pop
js
lahf
mov
fwait
mull
dec
mov
mov
into
push
mov
mov
add
aaa
pop
sti
add
lods
lods
je
test
sti
sbb
sbb
jbe
shrb
test
sti
mov
adc
dec
inc
lcall
leave
pop
pop
cltd
les
dec
imul
push
and
adcb
or
push
mov
pop
lods
loop
out
cmp
mov
push
and
idiv
jge
mov
xor
faddl
push
dec
fisttps
mov
loopne
pop
dec
xchg
fstpt
push
fwait
jno
cwtl
xor
fwait
inc
adc
or
add
cmp
aaa
xor
pop
push
mov
cs
mov
jb
arpl
mov
add
jmp
addr16
fwait
push
xchg
scas
out
or
and
lock
std
arpl
hlt
aaa
cltd
or
pop
ss
out
xchg
sti
int
in
iret
je
jbe
test
or
add
inc
mov
xorl
nop
mov
pop
sub
dec
testl
rorl
stos
inc
fistpl
pop
xchg
inc
pusha
push
divb
sub
int
pop
movsl
repz
pop
into
mov
clc
shrl
cltd
iret
xor
push
in
js
mov
cltd
pop
mov
and
sbb
les
push
das
movsb
jecxz
inc
test
xchg
mov
cmp
out
mov
inc
rcll
int
int3
mov
sahf
jmp
inc
inc
xchg
enter
or
jae
xor
dec
repz
or
mov
fchs
aam
shlb
cmpsb
pushf
mov
cmp
xchg
ljmp
xchg
sbb
aad
loopne
inc
xchg
sbb
adc
mov
jmp
ss
loopne
call
and
ret
pop
jg
mov
mov
iret
adc
adc
pop
mov
adc
cwtl
lret
xchg
mov
lahf
lret
inc
stc
stc
or
sbb
lods
add
push
clc
xchg
nop
and
xlat
ljmp
sbb
lahf
sbb
leave
out
dec
fsubrs
xor
cmp
add
mov
loope
mov
inc
fistl
xchg
mov
adc
adc
sub
push
sbb
movsb
xchg
push
test
jg
outsb
jle
ja,pn
push
in
jmp
or
pusha
cwtl
mov
cmp
jl
movsb
or
or
movsb
pop
jle
xchg
cmpl
jo
push
cs
loop
or
sbb
inc
adc
loopne
xor
stos
imul
jnp
cmpsl
jmp
add
lcall
cli
enter
inc
jb
cmp
sbb
add
sbb
shll
xchg
out
xchg
out
xchg
inc
sbbl
divl
dec
arpl
imul
in
ljmp
leave
cmp
fistps
push
adc
dec
shrl
xor
jp
and
lock
push
jns
loop
loopne
dec
daa
repz
jp
jmp
outsb
pop
pusha
mov
notb
cmpsb
or
fsts
mov
mov
ret
push
lret
and
mov
cmp
cltd
mov
divb
cltd
and
aad
out
mov
push
push
add
or
jnp
jmp
imull
push
cmpsl
xchg
addr16
fsubrl
mov
xchg
mov
aaa
jbe
push
jne
arpl
into
cmp
ror
outsl
or
xchg
std
mov
fadd
ret
pop
cmpsl
daa
sub
jl
jo
xchg
test
cmpsl
cmp
test
jne
mov
sub
scas
std
dec
stc
mov
int
adc
push
xchg
hlt
lods
stos
mov
mov
out
mov
scas
outsb
and
push
xchg
mov
mov
std
fwait
test
mov
adc
xor
mov
add
inc
inc
xchg
ss
dec
fnstcw
shl
sbb
push
and
pop
sar
ret
outsb
dec
jns
mov
shl
in
mov
mov
movsl
clc
dec
or
popf
loop
jmp
adc
test
cmp
fcompl
inc
js
scas
cs
sub
dec
fsts
pop
sub
xchg
mov
mov
imul
clc
sbb
shr
sar
and
and
push
iret
movsl
jns
adc
sub
adc
into
lahf
insl
xchg
mov
daa
pop
leave
push
out
mov
xchg
movsb
adc
xchg
into
pop
pop
arpl
cmc
rorb
iret
cmp
dec
enter
rol
bswap
enter
bound
pop
out
inc
inc
enter
cmpsb
inc
or
adc
rol
sbb
in
js
mov
cmp
dec
sbbb
cmp
inc
bound
mov
xor
out
dec
push
adc
xchg
inc
jo
ljmp
arpl
loope
stc
scas
mov
pushl
test
gs
mov
fdivs
cmp
ss
push
out
jbe
cmpb
clc
bound
add
xor
ljmp
in
sub
mov
aam
push
fistpl
sbb
jmp
mov
movsb
imul
xchg
push
mov
ret
pop
imul
add
cli
mov
fidivl
mov
leave
fsts
add
pop
fimuls
je
fsts
xchg
inc
or
ret
clc
aaa
cwtl
lret
dec
push
cwtl
cli
jb
cmpsb
jp
addr16
inc
xchg
jmp
push
jbe
fwait
cmp
imul
insb
popl
das
je
in
mov
pop
jns
pop
jmp
repnz
not
mov
leave
cmp
push
inc
pop
cmp
jle
mov
cmp
and
leave
xor
xchg
cmc
or
mov
cli
jne
adc
aam
roll
adc
cwtl
cmp
insl
ror
popl
out
fidivrs
adc
fistl
je
insl
sbb
loop
inc
pop
repz
arpl
in
or
das
dec
jb
xlat
pop
dec
popf
mov
outsb
repnz
out
sbb
arpl
lret
gs
jp
mov
dec
out
js
mov
aas
shl
test
cmp
dec
jne
test
es
out
mov
jg
repnz
dec
inc
lock
mov
xchg
mov
leave
repz
sub
sahf
daa
jae
adc
adc
inc
and
mov
pop
leave
cmp
pop
dec
mov
xchg
lret
jge
adc
out
mov
gs
cmp
adc
in
sar
subl
push
cmp
jmp
lock
aam
jge
outsl
xor
sbb
push
ret
popa
mov
cwtl
xlat
fiaddl
stos
mulb
pop
icebp
movsl
jge
les
sbb
xor
cmp
sbb
jno
push
push
enter
add
ja
test
pop
inc
xchg
push
or
mov
xchg
rol
jno
mov
jne
je
clc
add
cmp
stos
mov
pop
enter
jne
in
repnz
adc
arpl
sbb
adc
les
in
movsb
dec
mov
daa
mov
xor
dec
popf
and
loopne
stc
pop
insl
scas
xor
push
add
xchg
es
loope
leave
xor
dec
cwtl
decl
repz
inc
movsl
fnstcw
jmp
adc
mov
push
lahf
cmp
push
sbb
xchg
xchg
xchg
sub
icebp
mov
push
mov
and
sti
xchg
pusha
pop
fbstp
popf
fs
push
push
jl
loop
lds
xchg
push
in
lret
into
les
ficoms
and
sub
adc
test
jmp
mov
rcl
pusha
or
mov
test
inc
mov
sub
cmp
mov
push
pop
sub
push
push
mov
cmc
or
cmpsb
pop
test
mov
ret
ret
mov
mov
xchg
push
dec
dec
push
fs
adc
sahf
inc
je
insb
mov
jb
leave
inc
xor
add
sub
or
insb
movsb
out
aad
push
call
push
scas
add
adc
jno
lea
enter
xor
mov
or
je
pop
inc
aas
or
daa
int
dec
lret
stos
xchg
ss
scas
push
ret
sti
xor
push
cld
ret
pop
outsl
xor
popa
imul
dec
int
xchg
pop
inc
pop
cli
int3
test
cltd
repnz
in
pop
lods
stos
cs
jne
int3
stos
lret
push
lcall
pop
mov
frstor
scas
ss
mov
pop
repnz
add
mov
pop
out
rclb
and
and
adc
jae
popf
jle
jg
mov
jne
xchg
xchg
fsubrp
push
add
fiaddl
pop
shrb
jecxz
addr16
out
cltd
dec
sub
mov
jne
mov
out
or
pop
xor
jae
push
cwtl
loopne
stc
inc
pop
inc
subb
loop
add
jg
les
addl
