popa
mov
pop
mov
dec
mov
lods
insl
ss
push
pop
ja
sahf
out
push
sub
arpl
sbb
add
pop
stos
sub
in
sbb
cs
aaa
pop
insl
mov
pop
xor
mov
scas
xor
mov
add
daa
xchg
pop
leave
mov
lods
lock
push
pushf
mov
jns
stos
mov
pop
push
imul
packssdw
fsubrp
gs
test
mov
add
cmpsb
jnp
insl
push
jns
je
inc
xor
mov
add
dec
xchg
mov
mov
fsubrl
cmp
stc
ret
inc
xor
or
fmull
in
mov
out
stos
mov
cmp
mov
shl
in
push
jl
das
sbb
mov
ds
daa
mov
in
jnp
pop
test
popf
aaa
xchg
pop
xchg
pushf
lods
insl
dec
hlt
pop
xchg
das
in
lcall
call
xchg
mov
mov
xchg
ret
imul
mov
xorl
in
mov
scas
movsb
or
mov
test
jae
in
mov
movsb
fsubp
cmp
outsb
add
mov
mov
stos
mov
fxch
ljmp
sub
out
mov
mov
jo
movsl
out
and
stc
in
push
inc
andl
cmp
or
xor
mov
mov
dec
stc
cwtl
adc
cwtl
jns
push
sarb
xorb
test
xor
movsl
fs
inc
mov
scas
mov
out
xchg
sub
test
mov
arpl
lods
mov
mov
or
ss
mov
dec
pop
pop
inc
dec
arpl
test
pop
movsb
inc
fistpll
repnz
xchg
or
adc
test
leave
cmp
nop
ret
mov
icebp
out
xchg
mov
xchg
push
jg
dec
int
xchg
or
sbb
mov
fisubrs
lcall
scas
and
sub
test
pop
mov
and
or
sbb
scas
arpl
cmp
mov
jp
push
test
add
cmp
mov
fdivl
in
je
aam
xchg
jecxz
fistpl
outsl
enter
int3
xor
cmp
in
jns
mov
outsb
jecxz
mov
sub
jl
pop
push
pusha
jne
adc
es
sahf
nop
popf
push
mov
sub
cwtl
add
push
add
push
push
ss
add
mov
lcall
pop
arpl
xor
inc
ror
inc
mov
lods
jecxz
cwtl
xchg
in
sbb
mov
adc
and
adc
cmp
mov
xchg
les
mov
mov
cli
mov
mov
cmp
sub
jo
jne
add
sub
and
and
loope
fimuls
nop
notb
mov
call
cmp
jg
icebp
dec
sbb
adcb
xchg
call
xchg
mov
shll
jecxz
enter
loopne
push
negb
and
add
das
adc
lret
xchg
mov
in
push
js
and
dec
mov
je
stc
mov
xor
bound
data16
mov
int3
xchg
arpl
jns
int3
aaa
xchg
andl
xchg
mov
xchg
fisubs
mov
or
pop
stos
scas
sub
jl
push
imull
aaa
adc
add
jbe
gs
xchg
fwait
dec
pop
jae
mov
mov
cmp
out
mov
fadd
mov
popf
mov
cmp
ret
mov
xchg
cmp
sahf
or
sub
in
or
loope
inc
mov
lods
loopne
out
daa
cld
dec
popa
nop
pusha
scas
cmp
cmpsl
clc
jl
into
rclb
cwtl
or
fwait
mov
sbb
and
push
adc
xchg
pop
xor
and
mov
enter
mov
jecxz
mov
xor
addb
data16
sti
push
mov
fistl
xchg
mov
ljmp
cmpsb
fsts
bound
inc
xor
test
xor
bound
jno
mov
sub
xchg
mov
inc
loop
scas
dec
adc
roll
aam
ret
fwait
call
push
mov
out
loop
cmpsb
pop
pop
pop
cmp
gs
imul
push
mov
xchg
cmp
cmpsl
and
mov
jno
or
adc
mov
ljmp
cmp
xchg
add
lcall
shll
fldlg2
cmp
push
sub
out
icebp
adc
sarb
dec
mov
jns
jp
mov
addl
pop
movsl
out
mov
mov
xor
jg
jp
cmp
mov
hlt
pop
dec
mov
in
lea
or
imul
cwtl
or
xchg
lea
or
scas
adc
mov
repnz
sbb
mov
es
mov
daa
mov
test
mov
int
popa
mov
daa
ret
mov
in
mov
repz
nop
mov
mov
inc
adc
push
mov
mov
lds
and
cwtl
idivb
int
notl
or
je
insl
mov
ds
sarb
adc
jnp
divb
cmpb
lock
in
pmaxsw
lret
scas
mov
es
pop
test
jl
lock
pop
testl
and
mov
fs
and
mov
testb
mov
jne
cltd
cld
js
ret
mov
jmp
in
pop
imul
sahf
cmp
mov
pop
or
enter
cmc
and
push
and
loope
movsl
rcrl
mov
repnz
sbb
fstpl
mov
adc
negb
sub
or
lock
icebp
jmp
int
dec
inc
iret
pop
adcl
push
adc
rclb
daa
mov
in
dec
mov
and
mov
pusha
int
mov
xchg
cs
push
out
loope
xor
sbb
adc
xchg
cld
adc
mov
gs
cltd
arpl
shlb
aam
arpl
sub
shlb
sbb
pop
shlb
xchg
arpl
xchg
fs
movsb
lds
loopne
popa
mov
insb
xchg
or
outsl
xchg
loop
cmp
enter
dec
push
daa
cli
push
or
nop
jmp
lea
push
shll
int3
fs
lcall
jbe
out
dec
inc
scas
jmp
mov
push
fwait
sbbl
or
adc
or
bound
addb
enter
cmc
pop
sub
push
cwtl
xchg
mov
xchg
pop
repnz
aam
sbb
outsl
sub
push
test
mov
inc
cmp
mov
roll
mov
jae
cld
pop
cmpl
mov
clc
inc
je
clc
sbbb
imul
pop
sbb
mov
lea
inc
shlb
fsubrs
xlat
ficoml
fcmovne
divps
movl
or
js
xchg
xorb
in
gs
ljmp
or
pop
icebp
repz
cmp
sahf
sbb
or
insl
sbb
int3
scas
movsl
es
in
cmpsb
loopne
movsb
mov
and
je
subl
js
test
or
xchg
clc
dec
cs
or
mov
inc
call
xchg
nop
cmp
repnz
rclb
repz
hlt
adc
call
xchg
rolb
jle
pop
pusha
push
fidivrl
mov
out
fdivs
jg
fsubrs
add
push
dec
fdivs
lcall
sub
sub
xlat
mov
mov
push
or
mov
call
shll
mov
lock
xor
fdivrl
cwtl
xchg
cmp
sbb
loope
jecxz
aaa
vpmulhuw
mov
cmp
fistpl
cmp
adc
lahf
gs
xchg
inc
pmaxsw
aas
cmc
mov
push
lahf
mov
loope
fisubs
lock
sub
mov
dec
mov
ss
dec
int3
push
out
int3
mov
call
jecxz
mov
jge
sti
push
shr
ds
jno
es
push
stos
jg
outsb
xorb
mov
and
sub
std
or
mov
cli
jns
aaa
adc
lret
mov
push
lahf
inc
aas
pusha
inc
xor
sbb
jmp
mov
xchg
push
mov
jnp
stos
out
mov
cmpsl
mov
lret
cs
or
and
xor
mov
and
sbb
mov
mov
sbb
ret
cmc
mov
inc
push
stc
jbe
sub
ds
xchg
imul
gs
push
cli
pop
lds
xor
inc
movsl
sahf
xchg
lods
dec
in
dec
jle
iret
cmp
sub
sub
jecxz
scas
out
es
in
aas
mov
sti
mov
leave
lock
jl
in
roll
test
mov
movb
mov
loope
std
scas
mov
cmp
aam
mov
outsl
cmpl
lods
mov
mov
and
pop
add
fsts
push
jg
mov
cs
incl
loopne
ret
scas
ret
divb
movsl
sarl
call
push
lods
scas
sahf
aad
sub
push
and
jne
jg
jg
cmpsb
adc
mov
bound
and
jo
lds
xor
sbb
jp
test
jmp
xor
lcall
cmc
rcrl
hlt
jecxz
jmp
ja
test
loop
mov
call
lea
mov
mov
stc
xchg
mov
in
aam
inc
fsubrp
or
loope
inc
mov
imul
aas
pop
imul
inc
ja
fs
jbe
shll
jl
jnp
int3
or
jg
adc
mov
push
mov
and
inc
out
testl
daa
xor
scas
loopne
jle
mov
adc
mov
sarl
sbb
xor
push
loop
clc
test
int
sub
sbb
xchg
icebp
jae
add
pop
sbb
xor
xor
mov
mov
sub
les
inc
daa
mov
inc
xor
fbld
in
inc
iret
push
cmpsl
push
cmp
outsl
sub
call
xor
mov
into
ret
ja
add
mov
jmp
pop
push
ds
xorb
hlt
pop
and
mov
xor
cmpb
test
push
arpl
es
lock
inc
sbb
lcall
in
pop
mov
jne
loopne
aam
mov
mov
sti
mov
xchg
cmp
lods
adc
nop
dec
shll
cmpsb
cmp
stos
je
pusha
lahf
sbb
psubusw
sar
enter
out
test
sbb
jmp
and
xor
mov
mov
in
insl
aaa
jno
dec
lock
in
je
xor
and
mov
push
or
test
movsb
test
jne
cs
dec
adc
push
jnp
outsl
sub
movsb
imull
cmp
aaa
xchg
cli
jno
jae
shlb
outsl
mov
repnz
mov
pop
ret
jmp
loopne
lcall
inc
push
or
pop
dec
jne
add
cmp
mov
add
mov
mov
std
xchg
cmp
mov
testl
pop
pushf
mov
sahf
out
lods
lds
mov
out
hlt
mov
in
les
fwait
push
jbe
or
out
out
mov
adc
jmp
pop
jmp
mov
push
movlps
mov
mov
arpl
out
or
mov
out
cmp
repz
enter
sub
sub
or
jbe
sbb
and
aam
jge
push
pop
or
cmp
cmovp
adc
push
nop
outsb
mov
imul
nop
sub
mov
pop
imul
mov
mov
fisttpl
add
mov
enter
iret
xlat
fs
xor
mov
mov
adc
pushf
and
mov
mov
shlb
aas
mov
nop
jbe
aaa
call
loop
push
jge
push
int3
mov
mov
out
sti
les
pop
and
fs
mov
call
dec
dec
ds
enter
es
out
xchg
inc
insl
and
mov
stos
lret
in
jp
scas
add
cli
call
aad
out
dec
mov
mov
push
and
push
loope
stos
mov
shll
cmpsb
push
and
in
mov
mov
pop
les
jg
jl
mov
incb
xchg
xchg
ret
inc
pusha
push
mov
sbb
lret
hlt
xor
out
xchg
shlb
add
fisubrl
test
lret
or
out
or
add
sub
lods
cs
daa
and
test
aas
scas
xchg
mov
inc
or
adc
add
add
sbb
lahf
scas
lods
pop
in
mov
mov
xchg
orl
push
rclb
dec
out
mov
cmp
insb
pop
and
adc
in
pop
and
arpl
ljmp
dec
mov
adc
mov
push
push
es
addr16
lds
mov
push
scas
cmpsb
test
jg
xchg
mov
cmp
or
cmp
inc
fwait
or
movsb
mov
cmpsl
lcall
out
mov
mov
adcl
or
addr16
mov
mov
imul
iret
rcrl
fwait
pop
fisubs
dec
mov
pusha
orb
pop
fidivs
jp
dec
std
push
pop
mov
test
xor
xor
das
scas
xchg
or
ret
cmpsl
fwait
jbe
testb
das
and
jmp
jg
mov
leave
and
jmp
ds
mov
mov
je
pop
push
pop
mov
push
ret
cmp
lahf
sbb
movsl
adc
and
sbb
into
test
jmp
loope
arpl
inc
add
add
fs
out
and
pop
ss
in
loope
push
xor
aaa
outsl
pushf
sub
orb
and
add
xchg
nop
bound
out
xor
fdivr
ja
jl
inc
or
and
lret
ljmp
jae
push
or
or
subb
mov
mov
mov
xchg
das
clc
test
dec
aas
sub
push
out
ret
fwait
sbb
and
imul
enter
out
cltd
fldl
subb
mov
addb
test
jge
mov
jo
pusha
mov
sti
leave
stc
inc
cmpsl
imul
xchg
xchg
mov
fistps
mov
in
sbb
mov
outsl
ret
jmp
cwtl
and
mov
arpl
loop
mov
js
jns
in
test
mov
repz
push
in
imul
hlt
icebp
les
scas
jl
ss
hlt
xor
stos
mov
pop
insl
inc
mov
xchg
fcmovb
out
sub
mov
push
mov
cmp
mov
cmp
mov
call
inc
inc
orl
rcll
push
int
push
into
hlt
aam
imul
and
mov
subb
mov
outsl
lock
fwait
int
rclb
nop
xchg
push
or
add
nop
out
jecxz
shl
lods
pop
jbe
in
dec
mov
add
lret
push
stc
std
scas
or
and
add
fs
es
pop
jo
daa
out
mov
and
test
popf
insb
sbb
fsubrs
sbb
xchg
mov
sbb
mov
iret
mov
shll
in
sub
xor
fisubl
cmp
and
dec
or
cmp
daa
fistpl
mov
xor
pause
dec
dec
sbb
jno
mov
dec
push
fnstenv
out
faddl
cmp
movsb
and
test
pop
je
cmp
mov
lods
xchg
mov
and
cmp
add
sub
mov
jo
mov
sub
xor
adc
xor
cmc
push
jne
xchg
pop
xchg
faddl
outsb
sub
or
orb
shll
and
call
sub
sti
stos
arpl
cmp
push
cld
sbb
jbe
and
and
in
jnp
sub
lcall
lcall
cmp
lret
cmp
rorb
cmp
lahf
pop
or
dec
lea
ds
lret
dec
dec
fld
xchg
mull
fwait
addr16
jnp
sbb
lcall
mov
adc
dec
xlat
jo
adcl
rcll
and
mov
jo
mov
fmul
cmp
ja
push
mov
arpl
sub
out
test
mov
shrb
mov
bound
cmp
stos
lret
pop
add
sahf
cmpsb
shll
xchg
dec
stos
les
mov
xor
movsl
jge
ja
insl
xlat
icebp
mov
loope
stc
cwtl
mov
jne
stc
add
lds
test
pop
mov
aas
pop
and
jg
cmp
jnp
jae
and
adc
sub
jno
lcall
add
fildl
hlt
mov
inc
repnz
cmc
bound
xchg
lret
mov
inc
xchg
dec
nop
sti
sbb
int3
and
lock
add
xchg
mov
mov
test
mov
adc
mov
loopne
mov
enter
dec
aaa
test
push
xchg
out
lods
repz
xor
leave
pop
xchg
sub
sbb
lret
and
jmp
mov
add
pusha
inc
xchg
jecxz
std
stc
in
test
js
leave
out
cmp
out
xchg
or
cmpsb
and
add
pop
push
xor
sbb
neg
popf
fldenv
mov
or
insl
mov
inc
test
jp
or
mov
in
out
es
push
adc
pushf
pop
stc
or
and
call
aaa
fstp
int
push
and
int
mov
fldt
mov
loopne
mov
mov
and
pushf
mov
clc
push
fistps
cmp
or
fcmovnb
mov
movsb
push
stos
mov
out
push
fistl
jb
test
popa
addl
loop
js
and
stos
mov
call
enter
shl
jge
and
add
movsb
fnstsw
test
shl
mov
xchg
in
push
push
mov
pusha
into
aam
movb
cli
xchg
or
jp
movsl
jo
jb
fst
scas
int3
jb
jno
mov
cld
je
lods
enter
es
jmp
dec
cld
xchg
movsb
jecxz
jp
insl
mov
lcall
lea
or
jle
aas
imul
inc
sahf
aad
mov
cmpb
lret
jl
mov
gs
es
pop
aaa
ftst
testb
and
add
jecxz
pop
cmp
jmp
jo
xor
test
pop
xchg
xor
jbe
mov
mov
jl
into
les
or
push
aaa
cmpsb
adc
imul
pushf
pop
clc
xorl
popa
add
adc
xor
mov
repz
pop
and
shll
cmpsb
xchg
mov
cmp
push
jmp
and
lods
xor
das
xchg
xchg
or
testl
pop
dec
mov
fldl
test
aad
jns
push
adc
mov
fucomp
clc
stc
sub
fldcw
jecxz
outsl
cmp
mov
jb
jo
adc
xor
sub
sbb
and
jo
scas
xchg
lret
lock
and
div
and
mov
jo
movb
pushf
daa
imul
pop
cmp
cmpsl
push
mov
cld
les
in
mov
jecxz
cld
jmp
fisttpll
cmc
stc
into
test
loop
test
insb
pop
xchg
add
mov
je
and
inc
push
jg
mov
mov
or
into
mov
ja
adcb
nop
pop
and
outsb
sub
fstpt
adc
cltd
bound
js
mov
pop
or
cmpsl
sub
sahf
xchg
sbb
fidivs
cmp
enter
rcl
repnz
cld
enter
fnstsw
shr
cmp
ss
xor
test
jmp
rol
push
lahf
lret
sbb
dec
xchg
pop
fstl
rcll
adc
inc
lret
or
cmc
and
ret
es
jg
inc
loop
es
subl
xor
popa
pushf
mov
int3
std
out
lods
or
inc
mov
out
add
clc
lods
xchg
mov
mov
jns,pn
gs
lcall
pop
call
loope
mov
mov
or
in
push
push
xchg
and
push
and
fsubl
ret
vpsubq
mov
jo
in
xor
stos
push
cmp
imul
cmp
mov
lea
cmp
sub
in
sub
idivb
xchg
adc
or
jo
jle
or
mov
cmp
pushf
or
inc
std
mov
andl
jmp
shl
jbe
sub
ret
jns
and
push
xor
cmp
hlt
adc
jecxz
bound
adc
out
xor
mov
sbb
popf
pop
add
cltd
xlat
jle
std
scas
in
xor
cld
jns
pop
inc
ljmp
movsl
jno
stos
xchg
out
mov
popa
leave
mov
mov
sbbb
and
mov
fcomps
shrl
push
sarl
push
jae
pop
out
shr
bound
and
fmul
daa
test
xchg
mov
fildl
fadd
sub
cmp
cld
cmp
sbb
int3
mov
int3
fcomps
sbb
push
shlb
iret
into
test
ljmp
mov
imul
repnz
popa
mov
test
test
bnd
scas
decl
xchg
jecxz
mov
mov
xor
jno
in
js
sbb
sbb
popf
jbe
outsb
inc
cmp
out
cli
xor
mov
aaa
gs
fmul
pop
cmp
mov
lods
pusha
clc
jl
mov
nop
popa
mov
add
lods
repz
sbb
push
lahf
lcall
lret
sbb
mov
dec
inc
cli
inc
mov
inc
stos
dec
mov
in
stos
or
loop
sbb
in
enter
push
sti
pop
icebp
insl
fidivs
adc
jne
adc
in
sub
mov
int
jecxz
test
jge
add
in
aaa
mov
jne
and
jae
or
das
pop
je
dec
sub
xchg
mov
jo
cwtl
mov
es
scas
je
sbb
jl
movsl
cs
or
stos
in
pop
cmc
imul
xchg
push
sub
mov
ret
repz
push
fld
iret
lahf
xchg
cmp
mov
call
jne
or
aas
sub
in
mov
jecxz,pn
cli
xor
inc
cmp
mov
pop
pop
dec
fstpt
dec
cltd
jns
adc
rclb
push
in
pop
xchg
popl
scas
jmp
xchg
push
add
lret
ja
adc
inc
sub
or
test
fsubrs
sti
mov
push
jbe
and
and
jae,pt
mov
loope
push
xchg
mov
imul
sub
enter
fisttps
jno
aam
lahf
mov
xchg
movsb
inc
cmp
xchg
std
test
or
mov
and
inc
push
add
out
xchg
lods
test
xor
jo
push
ficoml
push
jns
fcompl
movsb
or
jbe
xor
or
add
dec
in
inc
xlat
mov
lcall
mov
xlat
cmpsb
es
sti
adc
popf
mov
inc
into
subl
push
ret
adc
out
mov
stos
pusha
mov
into
sarb
jl
shl
fdivrl
pop
jnp
jno
and
hlt
sti
jg
xchg
out
imul
out
call
repz
das
lock
aad
fdiv
movsb
pop
push
add
cld
sbb
aam
mov
xchg
push
repz
push
inc
aas
fs
sbb
xor
out
sbb
stos
mov
in
fstpl
sub
push
mov
loope
mov
pop
loop
popf
adc
cmp
mov
pop
inc
loopne
loop
dec
mov
dec
aad
mov
int3
mov
cmpsb
mov
mov
mov
scas
stos
clc
in
aaa
push
jno
add
repnz
mov
cmp
or
or
mov
adc
fstpl
ficomps
inc
das
mov
fiadds
popf
clc
jo
and
xchg
sub
adc
mov
sub
int
ljmp
inc
loopne
inc
fldl
inc
imulb
xchg
shlb
decl
or
push
int3
cli
xorl
roll
and
xchg
xchg
dec
inc
nop
arpl
and
fcmovnbe
or
inc
push
stc
clc
mov
xchg
add
cs
adc
xchg
out
jecxz
test
js
push
push
imul
test
mov
or
mov
nop
iret
or
iret
test
pop
add
pop
in
adc
mov
sbbl
iret
adc
notb
or
rclb
mov
pop
call
cld
inc
fs
xchg
lea
and
out
adc
pusha
jge
pop
cmpsb
mov
cwtl
dec
sti
cli
pop
dec
nop
mov
jle
imul
ret
repz
cmp
sub
cmp
mov
movsl
ret
fwait
xor
std
gs
jg
add
fldenv
lods
mov
enter
shrb
inc
xor
dec
lea
mov
ret
push
insl
test
dec
icebp
dec
call
mov
dec
mov
pop
cmpsl
adc
aas
sar
ret
mov
cwtl
xor
sub
fcoml
divl
fildll
sub
inc
dec
jae
mov
cmp
fs
and
xchg
movsb
les
push
mov
pop
dec
imul
add
mov
and
lock
fs
mov
fcomps
mov
sti
mov
aas
inc
or
inc
add
clc
jl
nop
mov
ds
stc
dec
jge
popf
loope
fstl
and
std
push
into
adc
mov
outsl
test
arpl
dec
loopne
sahf
xor
mov
pop
repnz
xchg
cmpsl
je
ss
fcomps
push
popf
iret
lock
xor
mov
mov
cld
adc
leave
test
push
in
jg
xchg
cmpsl
imul
ret
mov
insb
orl
ficompl
gs
lcall
fldl
push
aaa
sbb
pop
jnp
sub
iret
jmp
hlt
mov
outsb
loopne
repnz
inc
addr16
daa
xchg
hlt
xor
fs
jns
mov
out
inc
cmpsl
movsb
push
xchg
loopne
xchg
push
lret
mov
arpl
in
dec
inc
or
movsl
fsubrl
imull
add
rcr
pop
mov
outsb
add
jle
inc
mov
mov
xchg
mov
add
shrl
add
pop
fnstsw
adc
das
or
add
pop
test
sti
dec
pop
mov
or
xchg
out
in
mov
bswap
pop
js
pop
aad
divl
push
jne
and
decb
mov
push
cmpsl
and
mov
and
mov
jg
dec
jmp
pop
lahf
scas
push
inc
adc
fdivl
or
xchg
popa
into
nop
inc
inc
testl
movl
jle
adc
push
in
adc
jg
les
icebp
and
mov
out
mov
xchg
in
lock
or
lods
test
xor
mov
fcomi
xchg
filds
clc
push
xchg
mov
mov
daa
or
cmp
jmp
test
mov
rcr
fisttpl
mov
adc
jns
sub
arpl
push
mov
xor
sub
cmp
insl
mov
or
imul
outsl
sbb
mov
mov
lods
adc
or
lahf
cmp
xchg
mov
jmp
push
cmp
dec
and
xor
pusha
sub
adc
and
lds
leave
pop
mov
cld
push
cmpsb
std
ret
xchg
inc
or
sub
insl
fcmovnu
std
es
and
cmp
xchg
outsl
cmpsl
out
adc
push
sub
movsb
xchg
push
nop
dec
push
or
cmpsl
int3
mov
fstpt
loope
push
lds
or
in
shlb
inc
stos
out
or
mov
cmp
adc
mov
xchg
sbb
pushf
ss
test
pop
sbb
mov
push
shlb
sub
fsin
mov
mov
mov
std
ja
xchg
in
and
mov
arpl
mov
and
sub
cltd
mov
fstps
xor
fninit
cmp
push
cmp
std
ret
ret
xchg
pusha
push
ret
mov
and
xor
std
cmp
or
push
push
ret
cmp
scas
adc
int3
inc
xchg
cmpsl
mov
movsb
jae
popf
lods
inc
jbe
imul
jecxz
adc
mov
mov
shr
lock
lret
push
loope
xchg
xchg
test
mov
enter
repnz
jae
mov
xor
jbe
out
cmpsb
jg
out
or
xchg
pop
daa
stos
xchg
shl
or
test
and
les
pushf
loope
fyl2xp1
push
aad
jo
dec
cmp
lahf
mov
fisubrl
sbb
lea
ss
in
cwtl
lock
dec
push
pop
jns
push
dec
xor
ljmp
add
mov
xchg
test
in
ror
sbb
xchg
or
iret
xorb
and
insl
mov
lock
in
and
cmpsb
jno
jno
dec
xchg
out
gs
in
ja
xor
iret
mov
inc
inc
test
ja
cmp
adc
aaa
test
nop
and
push
adc
icebp
fcmovb
and
xlat
sbb
lock
nop
shl
mov
push
js
scas
das
add
movsl
stos
push
les
mov
int3
ror
movsb
adc
loopne
das
out
and
out
js
test
insl
inc
popf
mov
dec
dec
push
add
mov
inc
xorb
adc
mov
sbb
cmc
and
ja
in
mov
in
adc
les
pop
leave
xchg
xchg
xchg
call
js
or
scas
pop
or
stos
out
and
inc
fimuls
out
cltd
cmp
push
ret
pop
pop
mov
stos
mov
sbb
jg
int3
pcmpeqw
cmpl
add
cmp
ficompl
jecxz
and
ds
cmp
sbb
dec
clc
insl
stos
gs
mov
xchg
jmp
in
popa
sub
mov
lret
push
adc
arpl
stc
cwtl
fisubl
sub
out
sub
or
inc
popa
cmp
cltd
fnsave
mov
xchg
xchg
fs
stc
pop
inc
dec
mov
inc
test
inc
sti
cmpsl
push
cli
push
repnz
xchg
sbb
out
cmp
add
aaa
dec
imul
or
inc
xchg
call
mov
mov
jnp
sub
scas
mov
icebp
jno
adc
adc
mov
sub
arpl
dec
inc
inc
or
xchg
or
call
cmp
fidivs
mov
addr16
mov
test
mov
or
dec
out
or
inc
repz
repz
fsubrp
mov
or
add
scas
imul
lret
fmuls
push
or
out
or
js
mov
cmp
push
in
fdivrl
out
roll
pop
adc
add
imul
fs
xchg
jl
jb
scas
dec
mov
push
mov
push
addr16
fdivrp
sub
dec
xchg
daa
dec
pop
xchg
inc
mov
dec
sbb
gs
stc
insb
jge
cmp
cs
test
jecxz
leave
sbb
sub
dec
mov
dec
fnstcw
push
add
xchg
push
je
push
xchg
lcall
jnp
popa
mov
jmp
push
sti
das
jbe
cld
aad
xchg
sub
rcrb
setg
popa
loopne
sbb
mov
or
lds
xor
mov
movzbl
add
inc
adc
pop
cltd
shlb
push
stos
ficomps
cmp
shrl
xchg
and
mov
xchg
popf
push
and
inc
push
cld
pop
pop
negb
lcall
outsb
pop
add
sub
lcall
push
pop
adc
fwait
sbb
clc
mov
sysret
imul
push
bound
fsubr
push
cmp
fstps
push
mov
adc
xchg
jbe
les
push
daa
inc
pop
dec
mov
iret
and
loope
mov
out
lahf
add
and
lods
inc
and
aam
xchg
and
mov
std
sub
xchg
sub
or
jb
arpl
adc
pop
imul
and
or
bound
jo
andl
scas
div
hlt
fnstcw
push
lods
cmp
popf
push
mov
cmp
jb
adc
shlb
and
insl
pop
lock
repnz
push
cmc
sti
fstpt
dec
addl
cmp
mov
es
jg,pt
clc
mov
pushf
push
scas
lret
das
mov
sti
mov
arpl
cmp
leave
and
scas
repnz
sarl
xlat
lret
movsl
xor
movsl
sbb
add
xchg
out
xchg
mov
or
inc
mov
xchg
push
cli
nop
stos
lock
dec
sbb
or
shlb
pop
sub
lds
or
sbb
lret
insb
cmp
mov
mov
addb
gs
scas
inc
mov
xor
in
aam
jae
sub
push
insb
cmp
test
in
jmp
push
insl
sub
shl
mov
mov
icebp
add
push
or
push
rolb
addr16
repnz
mov
sbb
movsb
sbb
fdivrs
nop
sbb
in
cmc
dec
jns
mov
inc
mov
cmp
insb
mov
std
xchg
loopne
sub
daa
push
xchg
or
and
pop
hlt
adc
push
fistpll
or
loop
cmp
loope
jl
loope
xchg
aam
inc
mov
mov
sub
sub
hlt
lret
out
add
scas
mov
mov
sub
sti
ljmp
add
cmpsb
fs
rcrb
leave
mov
push
jae
mov
shrb
push
scas
pop
mov
jecxz
loopne
cwtl
mov
sbb
popa
mov
pop
xchg
add
mov
lret
stc
xchg
pop
in
and
mov
add
cmpsb
cmp
sbb
cli
and
ds
fadds
cmpsl
nop
test
mov
mov
es
push
test
sub
outsl
adcl
jo
movsb
test
movsl
jl
xor
xchg
mov
in
adc
push
add
add
push
mov
imul
add
jmp
lcall
js
push
or
push
daa
mov
ret
push
scas
xchg
xchg
ja
sbb
adc
or
mov
clc
jmp
ds
cwtl
adc
jmp
je
sbb
xor
mov
push
call
inc
xor
mov
shl
or
and
or
addr16
mov
test
movsl
imul
or
and
or
and
enter
call
mov
movsb
int
jno
outsb
mov
lods
adc
mov
xchg
fwait
into
std
bound
xor
shr
push
inc
in
lret
out
in
add
adc
ret
jmp
mov
imul
xchg
push
in
sub
scas
imul
lret
cmp
sub
scas
cmp
ret
cmpl
sub
ljmp
jmp
inc
repnz
inc
aad
hlt
sub
sti
jp
add
sub
jl
mov
jb
mov
xor
sarb
cwtl
mov
mov
cmp
ss
jbe
mov
mov
fcomip
incb
pop
mov
aas
mul
mov
mov
movsb
xchg
cmp
inc
stos
mov
aam
cltd
shlb
aaa
cmp
lea
je
mov
mov
insl
sub
push
lahf
push
test
fsts
push
xchg
out
mov
daa
scas
fs
nop
adc
sbb
xchg
mov
or
lods
das
xchg
repnz
jo
mov
dec
pop
imul
shl
bound
mov
push
test
mov
imul
pusha
popa
sahf
dec
aam
adc
cmp
scas
sbbb
inc
scas
addr16
fbld
cmp
pop
and
push
adc
data16
add
movsl
and
lahf
mov
push
aam
fistl
and
jp
iret
mov
fistpll
xor
data16
stos
xchg
fisubl
repz
sti
out
aaa
inc
scas
adc
test
rcll
xor
cwtl
pop
imul
inc
or
mov
mov
and
cld
cld
mov
imul
add
sbb
or
js
cmpsb
jno
fsubrs
int
sti
adc
ret
xchg
mov
test
inc
stos
test
push
in
test
push
cs
inc
pop
xchg
lea
xor
jmp
ret
repnz
negb
xchg
xchg
mov
bound
pop
ds
sbb
mov
stos
arpl
adc
les
out
pop
fwait
mov
sub
jns
mov
mov
jno
dec
add
push
mov
pop
xor
adc
adc
js
inc
sbb
lods
cli
gs
adc
clc
test
and
dec
xchg
std
cwtl
out
mov
adc
fld
xlat
cld
xchg
mov
shll
xchg
out
mov
xchg
int
out
out
in
sbb
xchg
adc
roll
jle
mov
sub
jmp
or
lods
push
bound
pop
icebp
dec
push
int
cmp
jg
sub
out
cmp
nop
cmpsb
ljmp
xchg
mov
leave
push
push
insb
adc
insl
repz
adc
sbb
in
lds
repz
std
xchg
test
movsl
push
repnz
in
xchg
aaa
outsl
test
and
insl
xchg
arpl
aaa
push
inc
xor
sub
lret
fs
aad
dec
aas
pop
rorl
pop
push
dec
outsb
je
mov
xchg
push
std
pop
pop
push
cli
push
adc
inc
dec
imul
lock
data16
stos
fmuls
sbb
les
xchg
cmp
test
xchg
popa
jb
jp
ret
lods
mov
add
rcll
out
cli
dec
sbb
dec
sbb
xchg
dec
imul
cmp
push
jns
jmp
pusha
sub
xor
imul
cwtl
sub
fstpt
or
cli
cmp
mov
jecxz
popf
mov
or
inc
inc
roll
lock
data16
ds
dec
push
leave
adc
mov
cmp
push
lods
addr16
mov
cmpsb
xchg
scas
xchg
mov
aam
sbb
adc
in
jge
addr16
cmp
sbb
sbb
add
outsl
stc
inc
add
rcrb
push
xor
xor
mov
cmc
fisubrs
xchg
out
idivl
inc
cmpl
movsb
sbb
cwtl
and
out
pop
pop
lea
in
sarl
dec
jl
inc
shlb
push
sahf
push
fwait
sbb
scas
sarl
popa
mov
pop
test
fistl
ret
mov
in
loope
in
pushf
and
lock
inc
addl
orl
mov
cmpsl
cmp
fisttpl
imulb
sbb
xor
add
pusha
orb
jecxz
mov
lahf
test
outsl
or
pop
adc
cmp
or
mov
fdivrl
insb
addr16
sub
inc
insl
and
scas
scas
jne
push
xor
mov
test
jo
sub
in
mov
ja
je
mov
lea
mov
and
hlt
pop
dec
ret
sbb
mov
int
out
flds
mov
cltd
call
loop
cwtl
imul
sub
sbb
daa
addr16
sarb
adc
or
mov
mov
popf
fcmovnb
loope
push
and
cwtl
ss
gs
fcoms
pop
repz
repnz
mov
shlb
lret
inc
sub
xor
adc
push
fdivs
mov
xchg
pop
sbb
aam
adc
daa
mov
cmp
xchg
into
mov
sub
hlt
mov
push
adc
movsb
shlb
rcll
xor
add
jmp
fimull
in
xor
and
cli
push
inc
xorl
mov
fwait
sub
jmp
cmp
sbb
cmp
fcmovnbe
dec
outsb
pop
addr16
leave
lods
data16
popf
cmp
mov
pusha
jecxz
loopne
mov
les
or
pop
ljmp
and
pop
fldenv
ljmp
test
and
imul
mov
sti
imul
jle
or
lcall
cld
insb
insb
addr16
std
inc
iret
jbe
xor
loopne
stos
xchg
jl
sahf
adc
shlb
xchg
out
mov
inc
mov
addr16
inc
xchg
push
jg
cwtl
dec
aas
or
dec
add
mov
rorl
es
mov
dec
cltd
mov
mov
popa
add
sub
add
inc
cmp
lds
pop
mov
out
lock
cmp
push
push
outsl
mov
hlt
and
cmpsb
insl
out
cmpsb
pop
mov
cmp
std
xchg
lret
aas
push
and
fs
jb
negb
pop
mov
mov
loop
es
pop
mov
aaa
negl
mov
pusha
lea
jb
sahf
pxor
scas
jecxz
mov
and
cmp
or
loopne
pop
movsb
sahf
int
enter
rcr
and
xchg
imul
mov
xor
out
add
test
in
mov
xor
jo
ror
dec
jae
pop
dec
aad
adc
jb,pt
clc
jecxz
lds
sub
pop
iret
jl
xchg
sub
ljmp
dec
ds
andl
call
daa
mov
push
imul
es
or
lods
lret
insb
popf
push
cmp
jge
test
mov
into
movsl
in
jo
ret
pop
ror
push
add
mov
xchg
mov
rorb
enter
mov
ret
or
in
dec
mov
sbb
inc
in
adc
mov
inc
cmp
fpatan
adc
add
mov
fnstenv
scas
inc
hlt
jle
std
jle
cmpxchg
sbb
dec
rclb
dec
imul
inc
xchg
mov
adc
call
fwait
mov
cwtl
addb
mov
nop
dec
stos
xchg
loop
adc
ret
cmp
pushf
mov
cmp
sqrtps
sti
lods
shll
insb
jae
gs
mov
fs
fcomi
leave
idivl
aad
loop
sub
push
es
add
jg
in
or
pop
sbb
pop
mov
mov
mov
cmp
mov
or
mov
pop
cmp
and
add
pop
push
fcoms
repnz
mov
sbb
cmp
jge
out
mov
dec
test
or
and
repz
out
cmpsl
test
pop
mov
xor
xchg
pusha
dec
sub
cld
mov
mov
cmpsl
adc
sti
and
mov
mov
xchg
xchg
jne
insl
lcall
jg
mov
fcmovne
mov
or
out
das
fdiv
dec
sbb
daa
aaa
and
mov
xchg
mov
lcall
fcmovu
cld
cwtl
nop
cmp
stos
mov
or
popa
pushf
jg
and
add
mov
stc
cmp
jno
call
dec
ret
movb
cmpsb
sbb
aaa
xor
ret
fistl
mov
sbbb
xor
push
aam
mov
jo
adc
mov
mov
pop
clc
lcall
stc
push
repnz
pusha
xchg
fmul
mov
clc
mov
xchg
faddl
repz
mov
aad
int3
shl
in
cmpsl
les
test
out
je
js
add
jl
xchg
add
mov
pop
push
mov
in
in
in
in
cli
push
cmc
pop
mov
sub
pop
mov
cmp
mov
mov
nop
mov
cmp
pop
fbstp
mov
lcall
scas
xor
cli
mov
mov
fwait
arpl
mov
mov
pop
push
in
in
pop
arpl
js
fs
push
jnp
imul
pusha
dec
lahf
lods
pop
add
adc
sbb
hlt
scas
and
sbb
and
popf
mov
mov
outsb
std
insl
sbb
pop
in
ds
fwait
adcl
clc
stos
jle
mov
mov
add
add
aam
test
sub
popa
clts
xchg
push
ret
in
inc
arpl
inc
mov
insl
sub
adc
mov
imul
or
add
dec
xor
adc
ficomps
imul
arpl
pop
cmpsl
in
and
push
stc
shrb
pop
dec
mov
pop
mov
hlt
lahf
pop
mov
add
mov
sbb
push
mov
in
pop
aad
mov
xor
shr
dec
inc
push
lock
sbb
fiadds
pop
cmp
loope
loop
mov
lods
mov
dec
test
xor
mov
clc
or
lods
movsb
cmp
movsl
addr16
jbe
lock
sub
mov
sahf
lds
adc
leave
repz
xchg
movsb
andb
rclb
or
iret
scas
adc
jg
sbb
ljmp
fisubrl
ljmp
es
xchg
movsb
ds
and
test
lock
lret
inc
pusha
popa
pop
push
call
push
sub
std
dec
movsb
push
or
push
sbb
push
sbb
adc
mov
jmp
pop
aaa
mov
data16
push
lds
inc
push
popa
test
icebp
loopne
inc
mov
xchg
pop
pop
xchg
add
mov
das
mov
mulb
mov
push
negb
fbstp
les
sub
jl
cmpsl
mov
add
cld
js
aam
cs
xchg
inc
mov
loope
xchg
and
sub
leave
push
dec
add
xchg
adc
ljmp
mov
pop
xlat
and
push
int
repz
clc
addr16
clc
rcll
fwait
push
in
call
add
test
arpl
jmp
fcoml
add
iret
rorl
or
mov
movsl
and
mov
cmpsb
sbb
int3
popl
js
or
jmp
mov
and
clc
fadds
add
xchg
hlt
pop
je
push
sarl
notb
jge
enter
es
or
jmp
mov
cmp
push
mull
adc
push
xor
push
ss
nop
cmc
sub
xor
push
mull
test
pushf
mov
out
scas
shl
mov
arpl
sbb
repz
jmp
fldcw
shlb
ret
mov
test
and
stc
rcrb
jo
adc
gs
gs
clc
repnz
fwait
ret
roll
test
lcall
sbb
jg
xchg
js
push
imul
cmp
sub
xchg
sti
in
arpl
lea
cwtl
adc
in
xchg
out
shlb
xor
xchg
jecxz
shrb
cmp
out
test
mov
jmp
rclb
add
xlat
sub
mov
rclb
or
jmp
mov
fbstp
or
mov
or
pop
mov
inc
add
mov
dec
sbb
dec
insb
and
imul
sbb
add
pop
jne
and
negl
dec
and
mov
inc
xor
lods
add
popf
pop
inc
in
mov
mov
cmp
push
fbstp
sub
clc
xchg
xchg
in
push
xchg
mov
or
mov
test
insb
inc
jne
insl
pop
gs
ret
mov
ljmp
dec
daa
jl
and
insb
sbb
and
xchg
add
mov
xorb
mov
incl
sub
pop
jne
inc
inc
cwtl
mov
adc
movsl
mov
scas
sub
cwtl
cmpsb
xchg
arpl
mov
add
pop
pop
cltd
xor
mov
pop
push
push
xchg
inc
ss
movsl
movsl
mov
jmp
div
nop
pop
jno
jg
cld
cmp
and
or
xor
fistpl
xchg
loop
repz
push
cmpb
js
adc
in
out
mov
mov
adc
pusha
mov
int
and
sbb
addb
mov
das
or
pushf
cmp
inc
daa
inc
mov
jb
lds
sahf
outsl
lods
cmp
test
dec
xlat
movsl
cmc
or
sbbl
addr16
neg
push
pusha
mov
mulb
aam
mov
dec
sahf
mov
fs
pop
mov
cmpsl
cwtl
cmc
adc
or
loope
push
sete
xor
cmp
imul
les
in
movsb
adc
mov
mov
mov
mov
fs
inc
aad
subb
mov
sbb
xor
mov
sub
ljmp
dec
sbb
icebp
xlat
in
cwtl
dec
mov
movsb
popa
cmp
inc
cmp
repnz
loopne
shll
ljmp
in
xchg
mov
repnz
or
enter
push
in
mov
push
insl
fldt
enter
in
mov
roll
test
mov
or
xor
xchg
push
xchg
aad
cmpl
push
jb
orl
orb
add
jl
pop
adc
repnz
hlt
in
add
mov
mov
clc
std
pop
ljmp
cmp
inc
rorl
stos
imul
outsb
inc
pushl
inc
mov
mov
fistps
fadds
pop
pop
lea
sbb
sub
ret
push
jg
jb
add
dec
aaa
jmp
iret
out
mov
je
scas
mov
imul
mov
rcrb
orl
xchg
enter
int3
test
cmp
fwait
lods
sbb
sti
jns
pusha
pop
cmp
andb
outsb
idivb
or
adc
test
xor
push
jg
pop
mov
lock
fs
push
sub
dec
cmp
sbb
mov
shlb
or
adc
push
adc
sub
imul
inc
cld
pop
fdivrs
push
insl
adc
jno
negb
lds
fcmovbe
sub
add
out
pop
and
mov
push
lock
and
lods
mov
scas
and
pop
xchg
mov
pop
in
fisttps
mov
pushf
mov
loop
movsb
mov
mov
mov
xchg
or
pop
dec
movsb
scas
repnz
xchg
push
ficoms
sbb
pop
pop
insl
lret
movsl
jo
lcall
lcall
arpl
dec
push
mov
loopne
dec
rcl
adc
mov
inc
js
cmc
lds
cmc
es
jle
movsl
rclw
mov
sub
mov
mov
xor
js
or
data16
xchg
je
adc
adc
xor
jl
adc
xlat
push
aaa
dec
sbb
call
mov
vcvttpd2dqx
addr16
add
sbb
or
pusha
and
adc
jbe
adc
mov
cwtl
test
ficompl
xlat
lahf
pusha
push
or
data16
ja
pop
dec
addr16
std
push
pusha
sti
cld
and
and
dec
js
mov
leave
xor
add
adc
or
mov
jns
mov
jb
inc
scas
mov
scas
mov
leave
sbb
mov
sbb
jle
and
adc
pop
movsl
stc
xchg
push
aad
inc
pop
xchg
sub
jb
out
mov
mov
sar
out
jnp
in
fsubrs
lea
pop
dec
push
test
sbb
push
xor
movsl
mov
xor
loopne
call
gs
mov
dec
push
mov
push
jae
adc
fcomi
pop
sbb
data16
lret
aam
jne
jnp
or
adc
lahf
iret
xchg
mov
cmp
push
loop
pusha
test
pop
mov
cmp
mov
inc
jmp
imul
ss
imul
dec
xor
popa
push
je
je
xorb
push
mov
cmc
sahf
push
mov
or
call
adc
jno
sub
lods
mov
sti
jg
scas
fnstcw
mov
aam
sub
jns
push
mov
fdivrl
jno
gs
lock
sub
jb
stc
lock
sub
cld
sbb
xchg
pop
mov
test
cmp
mov
cmp
mov
aas
mov
lea
mov
or
sub
pusha
mov
stc
add
aas
enter
fwait
cltd
jo
subb
jns
jmp
fwait
sbb
fisubl
xchg
out
into
inc
outsl
adc
lods
jmp
jae
mov
fdivrl
dec
xchg
mov
imul
loop
mov
testb
popl
inc
mov
jecxz
sub
addb
pop
xchg
lret
fcompl
add
sbb
inc
mov
pusha
and
stos
inc
loopne
cmpsb
int3
ds
jb
ljmp
xchg
pushf
lret
adc
lods
mov
or
cmpsb
lock
mov
or
pop
push
in
adc
inc
add
and
and
dec
mov
and
jbe
mov
mov
or
and
mov
dec
lock
aam
fists
xchg
les
addr16
sbb
dec
mov
push
popf
push
shrl
inc
nop
or
jge
sbb
dec
push
mov
add
mov
fsubl
xchg
and
out
insl
or
mov
daa
sub
and
and
push
pop
jle
lods
mov
fcoms
sbb
push
cmp
subl
aam
mov
push
adc
popf
mov
xor
arpl
mov
jb
mov
andl
xlat
and
lret
es
cmp
push
mov
jmp
jl
xchg
cli
cmp
dec
bound
or
pop
adc
xlat
ljmp
cmpsb
ja
sub
and
enter
mov
mov
jle
movsl
inc
xor
mov
gs
xor
mov
pop
push
std
or
mov
or
mov
dec
dec
daa
lahf
cmpsl
fcoml
xchg
dec
into
and
push
dec
in
jmp
cmp
fsubs
ja
pusha
std
enter
fs
inc
sti
nop
mov
cwtl
pop
mov
push
fnstcw
and
cmp
js
cli
enter
and
dec
sti
adc
mov
mov
or
push
dec
dec
stos
add
adc
sbb
imul
jmp
and
push
and
lret
pop
sti
lret
sbb
mov
xchg
xchg
repnz
add
xchg
mov
sub
and
mov
mov
and
xchg
mov
decl
add
int3
cmp
mov
or
sub
mov
sub
lock
pusha
sahf
jmp
loope
cmp
lock
outsl
jae
popf
hlt
mov
xchg
and
jno
lds
jecxz
jecxz
in
cld
es
es
cmc
mov
ret
push
adc
xchg
fcomi
popf
popa
in
inc
push
fs
in
lods
mov
xor
call
imulb
negb
inc
mov
ret
push
gs
frstor
mov
jmp
pop
mul
repz
fistpll
std
cmp
and
inc
in
cwtl
enter
jb
test
xchg
xchg
xchg
sub
out
mov
es
outsb
test
and
sbb
adc
sub
xor
jg
mov
lock
aas
push
inc
out
fdivl
mov
push
jmp
lds
push
xor
insl
dec
or
inc
stc
mov
xor
push
in
pop
das
insl
push
pop
into
dec
fnstenv
movsl
loop
push
outsb
les
jns
je
data16
mov
or
outsl
sub
adc
sbb
adc
pop
mov
pop
sbb
jno
inc
je
push
lds
jae
jae
popa
push
lret
adc
pop
dec
mov
or
jp
int
test
jbe
add
icebp
loop
jl
out
and
and
or
nop
adc
and
mov
mov
mov
jb
xchg
inc
nop
lock
shlb
ds
ret
xor
icebp
cmp
push
lock
ja
mov
ljmp
pushf
call
sbb
add
cmpsb
or
test
lds
iret
inc
sbb
xchg
je
adc
enter
mov
sbb
gs
push
mov
and
fidivl
mov
fsubrs
lds
cmp
xchg
mov
out
inc
outsl
call
pushl
gs
adc
icebp
out
testl
imul
mov
mov
push
aad
adc
sbb
push
xor
gs
mov
inc
shlb
aam
mov
call
aad
in
xchg
sahf
jno
ret
movsl
add
inc
dec
sbb
add
dec
adc
fidivrl
lret
cmp
int
adc
movsb
push
mov
jnp
std
xchg
mov
xorb
xor
insb
mov
pusha
inc
or
test
add
popf
dec
push
jne
aaa
imul
sub
out
jne
hlt
std
sub
mov
jle
int
loop
lds
push
leave
lret
jnp
push
pop
sbb
leave
mov
fdivrl
sub
aaa
mov
push
testl
adc
out
jb
test
xchg
in
jne
cmp
add
rcr
mov
mov
mov
shll
daa
mov
mov
inc
addr16
pop
pop
stc
mov
es
cmpsb
sbbb
fstl
xchg
bound
mov
stos
jnp
mov
sbb
adc
punpcklwd
mov
sub
pusha
popf
out
out
out
pusha
leave
and
jnp
jl
cwtl
insl
dec
add
ss
icebp
into
pop
enter
stos
cmp
add
jmp
mov
pop
add
add
or
pop
mov
xchg
fcoml
sbb
in
mov
addl
mov
hlt
push
sahf
or
adc
mov
pop
xchg
sarl
stos
sbb
sub
lcall
popa
dec
testb
inc
stos
hlt
mov
stos
in
lock
test
fmul
add
and
insb
sbb
xorl
or
or
lret
adc
mov
insb
and
dec
mov
scas
xchg
icebp
mov
outsb
scas
daa
out
in
push
lods
xlat
jg
les
and
cli
jmpw
cmpsb
imul
out
adc
pop
mov
xchg
repnz
xchg
xchg
repnz
subb
pop
daa
pop
mov
sbb
roll
mov
negb
xor
test
jge
je
in
pop
or
push
xchg
les
addr16
mov
adc
push
cmpsb
data16
iret
add
or
ja
sub
popl
pusha
dec
into
out
ljmp
mov
lock
adc
and
stos
inc
loope
xchg
cmp
in
fnstsw
xlat
push
cs
mov
lock
test
aad
es
decb
lds
jae
mov
mov
lea
pop
jle
push
adc
aas
jb
mov
outsb
mov
and
inc
nop
jl
loop
jbe
sbb
mov
dec
fwait
mov
in
imul
xabort
inc
inc
push
fwait
shlb
test
stos
imul
mov
data16
orl
rol
add
ljmp
add
int3
out
bound
test
mov
pop
cmp
mov
add
pop
dec
test
push
int
andl
sub
xchg
mov
push
jmp
dec
cmp
jecxz
jmp
dec
dec
xor
and
cmc
scas
adc
inc
movsl
aaa
mov
repz
push
rcll
orl
roll
xor
popf
cmp
nop
cld
xchg
mov
xchg
ret
mov
call
leave
inc
dec
pop
mov
push
ds
mov
push
jle
cmc
sahf
add
pop
scas
jae
es
into
lock
imul
ljmp
lret
jnp
mov
cmp
cli
cmovp
mov
pop
adc
insb
mov
jae
pushf
mov
mov
imul
pop
cld
aam
roll
xor
in
clc
cwtl
mov
mov
jno
cmp
nop
add
sbb
dec
les
and
jne
push
inc
push
js
mov
nop
or
sti
xchg
mov
push
mov
xchg
and
cmp
inc
xor
jmp
jmp
les
imul
fs
push
sub
imul
psubsw
mov
leave
mov
pop
leave
aaa
adc
testl
in
out
pushf
stos
sbb
mov
lds
push
std
outsb
fbld
popf
mov
pop
jp
pop
xor
mov
out
lea
xor
dec
shll
cltd
push
outsb
xor
ret
sub
add
std
testl
xchg
addr16
xor
test
inc
jae
rorb
daa
movsl
jmp
inc
das
mov
mov
outsl
mov
cmp
jae
stc
jp
cmp
dec
int
mov
add
std
cld
popf
mov
cmc
jb
fwait
sarb
jno
mov
mov
iret
das
pushf
cwtl
addr16
in
mov
aam
jg
jle
xor
jae
fisubrs
ret
add
jne
adc
mov
adc
mov
mov
cmpsb
hlt
add
arpl
jecxz
leave
ds
sub
nop
inc
fistl
inc
xchg
arpl
mov
mov
fisubl
xchg
mov
adc
xchg
dec
push
sahf
lds
mov
mov
stos
xchg
jge
cwtl
std
jl
pop
imul
jbe
scas
fbstp
out
subl
push
xchg
mov
idivb
inc
movl
jp
or
cmpsb
xor
push
pop
xchg
outsb
jmp
mov
or
clc
pop
push
aas
jmp
inc
mov
adcl
sbb
dec
inc
mov
inc
xor
sti
test
inc
fxch
or
dec
shl
push
add
and
sahf
and
mov
aam
or
out
push
mov
sti
pop
dec
jae
test
hlt
pop
test
psubd
push
aaa
sub
in
ret
cli
je
jae
scas
adc
gs
mov
adc
mov
push
cs
dec
dec
call
push
sahf
cli
mov
push
outsl
mov
mov
fsts
mov
mov
mov
je
mov
nop
std
and
mov
pop
adc
in
sbb
ljmp
fisubrl
in
scas
shl
testb
mov
rcrl
lods
pop
sbb
cmpsb
pushf
aas
jbe
loop
mov
repnz
pop
lock
cmp
mov
jo
jb
filds
cltd
jl
pop
mov
movsb
enter
cmc
arpl
sbb
cmc
gs
aas
mov
in
sar
loopne
aad
popa
jp
xor
les
es
pop
out
sbb
lock
pop
inc
adc
pop
cli
loopne
shl
sbb
testb
xchg
bnd
push
xor
pop
sbb
or
ds
and
out
es
ret
jnp
mov
in
insl
pop
in
adc
pop
pushf
pop
daa
dec
mov
dec
dec
add
int3
lcall
adc
je
arpl
add
lret
in
notl
dec
arpl
aam
sub
in
push
mov
push
das
lcall
and
jno
fisubrs
pushf
sbb
and
test
mov
movsl
fnstenv
mov
in
mov
test
movsl
mov
pusha
mov
sbb
insl
adc
inc
mov
arpl
cltd
stos
add
in
es
loop
xchg
in
fwait
lahf
cmpsl
data16
push
pop
xchg
xor
jno
hlt
addr16
rolb
cmp
pusha
cmp
cmp
rcr
ja
xchg
lret
imul
dec
aam
and
cltd
loope
pop
pop
dec
push
mov
mov
fisttpl
ret
psubb
and
mov
push
insb
mov
mov
int
ljmp
cmpsl
ss
cwtl
cmpsl
and
in
les
lds
or
call
push
pop
dec
mov
lcall
xchg
outsb
cmp
and
bound
out
or
pusha
sbbl
std
xchg
jmp
in
js
fmull
inc
jecxz
xor
out
cmpsl
filds
mov
outsb
andb
shrb
xor
enter
adcl
mov
mov
dec
repnz
fbstp
int3
lds
es
jg
sub
cltd
leave
in
mov
test
sub
pushf
subl
jl
sub
std
enter
shl
inc
jmp
leave
cld
test
cmc
jl
and
xchg
roll
subl
mov
pop
cmpsl
sbb
inc
mov
mov
ret
loope
mov
dec
mov
cmp
fisubl
adc
ret
dec
pop
fwait
insl
lahf
or
dec
cmp
test
das
lds
sbb
popa
es
fnstsw
inc
out
out
mov
mov
jg
mov
hlt
mov
mov
add
cmp
shrb
push
lcall
cwtl
call
inc
adcl
mov
lcall
icebp
in
std
push
aas
cmpsl
clc
jle
or
mov
cmc
gs
mov
call
or
sti
lcall
push
inc
mov
jo
ret
std
fstpt
and
ffree
std
repnz
pusha
jb
movsl
push
xor
inc
sbb
imul
and
push
adcl
test
jecxz
jmp
inc
cmpsb
jnp
push
stos
ror
xor
lahf
mov
insl
scas
lock
add
pop
sub
jne
add
mov
xchg
push
les
mov
xchg
in
insl
out
and
or
mull
adc
mov
pop
mov
sub
sub
sti
xor
adc
rcrb
xchg
pop
in
pushf
lahf
fistpll
loop
mov
dec
enter
mov
jmp
dec
mov
test
scas
scas
insl
cmpb
sub
lret
xor
mov
mov
fs
jae
mov
jbe
and
and
pop
mov
je
hlt
jmp
or
cmp
mov
adc
sub
aaa
test
or
jnp
xor
movsb
mov
mov
das
inc
icebp
int
sbb
jmp
push
sub
js
sbb
fldl
aaa
add
in
add
loopne
loop
and
scas
dec
and
aad
xchg
jge
ja
insl
loopne
addr16
cwtl
fsubp
jg
add
cli
sub
cmp
ja
sarl
imul
addr16
lds
aaa
xor
decb
out
lea
cmp
or
out
fstp
fistpl
cmpsl
ds
cmpsl
mov
popa
cmp
pop
icebp
mov
push
sarl
sbb
xchg
inc
cltd
mov
push
gs
mov
inc
ret
cs
xor
push
leave
dec
push
jl
divl
sbb
adc
jno
repz
or
call
popf
sbb
out
in
and
imul
out
mov
lea
fwait
popa
repz
imul
dec
cli
push
aas
clc
or
and
mov
ret
adc
push
repz
xor
fisttpl
aas
in
and
clc
mov
ss
sub
sbb
lock
lcall
pop
std
sub
sbb
jge
and
add
mov
les
faddp
mov
add
pop
out
adc
js
int
pop
iret
imul
xchg
dec
add
push
mov
xchg
push
lds
dec
test
dec
mov
scas
test
jno
mov
mov
leave
fwait
sub
push
sti
adc
mov
push
jns
fcomp
cld
rorl
int3
nop
lods
bound
cld
cs
mov
lods
push
mov
pop
mov
xor
inc
mov
or
cwtl
xor
fbstp
notl
push
mov
jge
outsb
incl
movb
jns
stc
pop
push
xor
xor
adc
popl
push
repnz
mov
jmp
jle
into
cmpsb
or
int
lds
pusha
or
add
add
lock
andl
in
repz
inc
mov
cmpsb
shll
and
push
leave
add
lock
repnz
nop
mov
or
or
stos
xchg
popf
idiv
cmc
test
mov
repnz
xchg
pop
push
fs
mov
push
rorl
sbb
les
xlat
lcall
out
inc
ret
push
scas
decl
ror
jecxz
mov
pop
xchg
icebp
inc
mov
cmp
or
cmp
pop
xor
xchg
push
gs
ficoms
adc
sub
incl
lock
arpl
sub
arpl
push
add
popa
inc
push
or
cld
cmp
scas
push
sub
hlt
inc
fwait
jae
mov
bound
xchg
les
and
in
test
jmp
mov
cmp
jge
mov
sub
shl
or
and
shlb
xchg
lods
jle
test
adc
mov
js
nop
subl
punpckhdq
inc
mov
adc
lds
in
fidivrl
dec
mov
pop
ret
mov
pop
inc
mov
cmp
mov
repz
push
ljmp
call
loopne
or
into
shlb
enter
push
fdivrl
out
mov
fs
cli
sar
mov
fwait
cli
loopne
mov
lret
outsl
fs
mov
loopne
inc
mov
pop
xchg
mov
or
adc
mov
add
dec
mov
in
add
cwtl
cld
sahf
jp
mov
xor
mov
in
jp
or
sbb
test
shr
jmp
les
popa
ror
push
add
test
cld
sbb
inc
push
and
fisttps
mov
test
and
rolb
mov
sti
mov
data16
aas
mov
or
add
mov
pop
xchg
adc
mov
fnstsw
or
jmp
mov
xchg
mov
movsl
lods
dec
es
inc
xlat
xor
mov
jo
shl
outsl
rolb
lock
aam
or
push
jbe
adc
sbb
cmp
jecxz
mov
mov
mulb
mov
inc
xchg
sbb
pop
adc
jns
jle
add
mov
pop
xor
lret
mov
fcompl
mov
or
push
cmp
hlt
lock
mov
out
bound
sbb
enter
in
mov
gs
push
mov
lods
xchg
and
pusha
cwtl
rol
xchg
sti
testl
js
loope
loopne
imulb
pop
jl
mov
ret
cmc
insb
xchg
jnp
lods
lock
and
sub
cmc
inc
aad
iret
int
pop
mov
mov
pop
mov
mov
addr16
jns
lock
and
mov
mov
jnp
lahf
idivb
enter
jl
in
add
hlt
push
sbb
push
incb
outsl
nop
test
xor
fistps
or
lahf
jg
dec
test
mov
enter
xor
cmp
mov
rcll
xchg
arpl
xor
mov
andl
stc
in
mov
pop
or
adc
push
xchg
and
into
inc
inc
cmp
xlat
movsb
insb
jle
adc
push
enter
arpl
mov
iret
js
cli
sbb
or
push
xchg
in
and
incb
xor
push
fs
clc
sub
outsb
test
xor
fsub
jne
sbb
fsubp
mov
fbld
pop
push
mov
std
xchg
into
xchg
int
mov
clc
inc
imul
ret
cmp
test
or
inc
add
fldenv
adc
lea
xchg
stos
fwait
stos
inc
iret
dec
imul
shll
mov
jp
xchg
sbb
test
repz
xchg
inc
add
mov
pop
in
push
jmp
mov
inc
xchg
fistps
imulb
fdivrs
dec
and
loope
mov
arpl
cld
sub
jne
sti
pop
popa
jp
jb
jg
enter
add
imulb
and
scas
out
jns
cmp
adc
aad
sbb
aam
mov
jecxz
clc
inc
cmp
xrelease
rol
pop
jge
in
dec
movsl
push
pop
sub
add
jge
cmp
cmp
or
push
mov
in
addr16
pop
jg
scas
pop
inc
es
push
cmp
popf
out
sbb
jns
adc
push
in
sub
mov
cmp
jmp
movl
add
out
clc
daa
cmp
test
mov
xor
int
push
and
test
dec
mov
fsubl
dec
rcrl
popf
stos
and
push
and
js
lock
data16
cmp
pop
cmpsb
loope
inc
fdivrs
cmp
push
push
lret
push
hlt
testb
movsl
mov
jno
ljmp
scas
xchg
movsl
cld
lcall
cmpsl
xchg
shll
gs
fmull
or
mov
scas
mov
mov
or
lock
lahf
aas
pop
lcall
jae
cmp
sbb
rcr
sbb
adc
xchg
sti
shlb
sbb
sub
les
cmp
inc
and
hlt
mov
sbbb
es
sti
mov
cmp
jecxz
xor
ss
add
inc
loope
or
outsl
or
test
std
popf
xchg
mov
out
push
adc
ja
movb
std
inc
add
xchg
sbb
inc
adc
inc
test
push
lods
into
jecxz
add
xchg
imul
mov
js
std
sbb
lret
cmp
and
addr16
imul
xlat
mov
rclb
repz
and
xor
pop
dec
jae
add
movsb
gs
shl
pop
jae
push
aam
lods
jmp
nop
pop
test
movl
pop
pop
jmp
in
movsl
add
xorb
and
mov
std
les
and
lcall
jae
xchg
mov
mov
adc
pop
push
and
xchg
mov
inc
jmp
cmp
adc
fsubs
nop
imul
xor
fstps
dec
adc
sahf
test
and
daa
aaa
mov
pop
add
sub
into
sbb
fsubl
and
ljmp
loope
mov
int3
dec
mov
pop
sbb
aaa
std
aad
ret
dec
popa
hlt
fsub
daa
nop
pop
aaa
insl
hlt
xchg
xchg
scas
sub
bound
push
adc
jmp
inc
mov
lock
stc
hlt
sub
jg
adc
lods
lret
cmpsl
ds
or
test
mov
jae
cs
jge,pt
fwait
xor
xchg
xor
push
jnp
mov
fsubl
mov
add
inc
jge
popa
leave
mov
xorb
cld
fistpl
dec
loope
ljmp
dec
jo
pop
aad
jo
jnp
cmp
xchg
push
lret
test
mov
ja
aad
and
jge
jb
nop
jecxz
mov
aas
pusha
mov
shrl
mov
fldcw
das
fldenv
and
icebp
xchg
mov
stos
sbb
sub
cmp
lock
sub
mov
arpl
push
or
dec
int3
fwait
xchg
cmp
fnstsw
cmp
lret
jg
shl
sahf
repnz
std
clc
repnz
cmpsl
out
daa
pop
xchg
push
sar
cmp
jl
adc
imul
fwait
jl
xor
aam
dec
addr16
cld
mov
xchg
add
leave
insb
hlt
int3
mov
pop
sti
mov
ljmp
cwtl
inc
xchg
pop
mov
stc
xchg
cmp
leave
mov
mov
mov
mov
adc
imul
jb
lret
ljmp
lret
adc
and
push
lock
xchg
movsb
outsb
xchg
and
shll
mov
fwait
mov
lahf
faddl
pop
cmp
mov
mov
int3
lahf
lods
cmpl
in
add
stos
cmp
test
sbb
dec
cmp
dec
sarl
mov
stos
mov
lods
mov
inc
das
repz
and
mov
sbb
jmp
inc
cld
test
int3
mov
jno
hlt
or
cltd
leave
sub
mov
ret
pop
and
sub
lock
sarb
cli
pop
sbb
cmp
jb
inc
jp
hlt
mov
cli
adc
or
jae
or
xorb
mov
sbb
mov
mov
sbb
int3
fdivs
testl
xor
enter
mov
xchg
test
cmp
aaa
push
inc
andb
adc
cmp
mov
adc
stc
sub
data16
insb
mov
pusha
and
stc
push
cmp
insb
lock
test
push
push
stc
ret
cmp
pop
cmp
xor
lock
sub
in
repz
shlb
add
out
aam
or
mov
push
cmp
ret
mov
sti
cmp
data16
and
cwtl
and
cli
je
mov
icebp
mov
mov
cmp
cld
dec
adc
inc
in
out
mov
xor
mov
cmp
cmp
push
cmp
lock
xlat
insb
lahf
insl
stos
pusha
mov
in
dec
mov
xchg
mov
inc
popl
mov
mov
je
test
pop
mov
and
xchg
mov
movsl
xchg
xor
shr
and
mov
jnp
enter
jno
xchg
push
or
xor
icebp
lahf
mov
fsubs
out
cmp
cld
int
jecxz
mov
movsl
adc
mov
mov
lock
cwtl
enter
in
pcmpgtd
jbe
and
cmp
adcb
fistl
add
mov
xchg
mov
imul
inc
nop
outsl
insb
xchg
cld
das
lods
sbb
mov
sbb
daa
and
stos
iret
push
dec
lock
lods
xlat
jl
pop
lock
add
jnp
leave
mov
sti
cmp
cmc
nop
mov
and
add
aam
jo
int3
xor
jl
fdivrl
int3
ja
lahf
and
or
sbb
lds
add
clc
pop
lds
mov
call
and
hlt
jmp
add
in
jecxz
movsl
cwtl
hlt
out
shlb
aas
pusha
cmc
fwait
aad
loope
out
out
sub
jmp
xor
call
out
lock
mov
dec
out
xchg
in
sti
mov
push
or
xchg
xchg
int3
sbb
test
cmp
jb
inc
movsl
sbb
sub
gs
lahf
mov
push
imull
push
and
xchg
out
inc
cld
fnsave
cmp
pop
fistl
cmp
cvtps2pi
cmp
loope
lret
in
xor
inc
jns
xor
pushf
cld
push
add
mov
or
fmull
movsb
add
movsb
cmp
mov
jle
loop
lock
push
mov
repz
inc
adc
pushf
iret
sub
xor
cli
push
cmc
add
and
mov
adc
lock
and
sub
or
fdivrl
je
movsb
ja
xchg
shl
fdivrs
sbb
pusha
mov
push
pushf
cmc
outsb
lock
int
lock
and
sub
inc
cltd
ljmp
sub
mov
add
push
icebp
test
fld
mov
hlt
leave
xchg
scas
sub
inc
test
rorl
pop
repnz
xchg
gs
leave
ret
pusha
cmp
mov
daa
jbe
mov
loop
sub
scas
daa
fiaddl
push
fsubrs
int
arpl
jnp
add
pusha
xchg
add
insl
push
test
in
sbb
scas
adc
xchg
js
add
imul
scas
xorb
adc
xor
jbe
mov
dec
ss
dec
test
push
mov
push
push
in
movsb
fisubrl
jecxz
mov
ljmp
test
mov
and
sub
jnp
fmuls
test
loope
mov
rcr
into
xor
imul
jno
das
cmp
pusha
xchg
mov
dec
jae
sbb
inc
inc
xor
jno
adc
mov
sar
xor
and
in
lea
cmpsb
pop
js
clc
cmp
sub
mov
pop
sahf
push
outsl
inc
cmp
mov
xchg
push
inc
inc
xchg
sub
dec
shl
fwait
hlt
stos
arpl
es
ret
mov
lcall
mov
rolb
bound
cmc
int
inc
add
scas
xchg
mov
xlat
int
stos
add
rcll
insb
shrb
mov
imul
adc
pop
mov
jnp
insl
mov
xchg
xor
shl
push
cmc
scas
scas
dec
lds
sub
lret
subl
push
leave
lods
loope
insb
xchg
add
or
mov
ret
xor
std
push
xchg
sbb
xor
mov
cmp
js
sub
incl
inc
scas
stos
repz
mov
sti
mov
fucomip
repz
pushf
loope
and
adc
shll
in
mov
mov
outsb
sub
test
addr16
xor
dec
sub
aas
jp
xor
cmp
mov
cmpb
or
mov
jbe
insb
jg
sbb
xlat
and
mull
repnz
pop
mov
pop
loop
jmp
cmp
mov
mov
clc
divl
jle
push
mov
or
pop
mov
xchg
mov
std
sub
push
and
ja
arpl
clc
add
out
cld
mov
lahf
push
in
mov
iret
or
jno
sbb
mov
xchg
dec
inc
cmp
sbb
imul
adc
mov
cmpsb
loope
jmp
pop
mov
int3
add
sbb
call
inc
lret
pop
test
fucomip
jmp
pop
fdiv
push
and
or
nop
pop
xor
or
mov
xor
inc
or
into
pushf
jmp
cmp
movb
out
xor
out
addr16
pop
fwait
sbb
inc
xchg
popa
sbb
in
test
dec
repz
test
mov
pop
stos
stc
pushf
roll
xor
cmp
cmp
and
xor
outsl
jmp
test
xchg
mov
push
fidivrs
mov
clc
xor
xor
sub
hlt
daa
jbe
clc
mov
iret
mov
mov
repnz
mov
cmp
mov
push
or
jecxz
jmp
stos
push
outsl
loopne
leave
sbb
lds
inc
fcompl
mov
sti
popf
inc
mov
adc
pushf
jb
pop
mov
jns
xchg
insl
jne
in
mov
jle
fwait
pcmpeqb
mov
and
pop
push
insb
mov
mov
scas
sbb
xor
add
mov
xchg
sub
inc
add
and
testl
sub
sar
cltd
mov
push
ss
add
fdivl
sub
and
xor
cltd
inc
mov
ljmp
or
jl
mov
adc
test
mov
in
clc
dec
add
nop
cmp
mov
mov
mov
pusha
jb
js
mov
sbb
ljmp
addr16
stc
mov
mov
inc
adc
lods
rorl
sbb
fidivrs
out
push
xor
sbb
and
stos
xor
out
cwtl
daa
inc
push
cmp
test
jo
mov
xor
mov
lea
out
xor
outsl
out
jne
cmp
int
int
xchg
inc
notl
ffree
mov
pushf
xor
ret
imul
cmp
cmp
out
pop
adc
sti
or
cld
ds
pop
lods
or
hlt
pop
cwtl
test
add
sahf
xchg
xchg
lcall
movsw
in
je
pop
mov
pop
dec
inc
test
xor
cmp
fs
outsl
push
loopne
add
scas
insb
and
cld
add
dec
mov
imul
adc
add
fists
ret
repnz
mov
sbb
clc
hlt
adc
dec
repnz
mov
in
pop
in
divb
jbe
stos
push
bound
mov
inc
in
or
and
jnp
mov
sub
int3
and
test
adc
imul
lods
loop
aaa
dec
in
xor
out
clc
subb
or
adc
imul
and
fsub
into
rcr
icebp
xor
imul
ss
sbb
clc
dec
jmp
xchg
scas
mov
xchg
enter
imul
repnz
movsb
add
aad
mov
jmp
sti
inc
out
shlb
mov
mov
gs
test
aad
js
test
dec
jge
aad
or
loop
mov
inc
or
add
gs
out
or
inc
je
lret
sbb
or
mov
mov
or
adc
ss
sahf
aas
adc
inc
cmp
push
jbe
jnp
pop
xchg
cs
and
lock
xchg
icebp
pop
lods
or
sub
fisttps
mov
call
test
movsl
pushl
js
xorl
mov
or
xchg
or
xchg
and
push
addl
aad
push
add
sbb
and
pop
test
lock
subl
imul
fiaddl
mov
movsb
mov
idivl
test
hlt
jp
mov
adc
or
cld
sub
mov
mov
mov
mov
add
inc
repz
mov
xchg
mov
sub
sahf
cmpsl
mov
pop
sub
sbb
jp
jns
mov
and
js
clc
test
rolb
aam
dec
jno
dec
mov
mov
dec
dec
in
std
cmpsb
adc
arpl
pop
cmp
xor
mov
cld
mov
std
stos
sti
int3
cwtl
sub
jo
loop
mov
jo
popa
stc
js
push
ss
cmpsb
mull
or
pop
jmp
dec
pop
iret
lds
jno
loope
sbb
cmpsl
push
in
ljmp
mov
fildl
incl
push
test
in
fistl
pop
loope
lods
outsl
inc
sbb
mov
lret
add
data16
hlt
jge
mov
inc
outsl
int
push
pop
in
and
mov
out
mov
and
aaa
ja
mov
dec
or
mov
pop
mov
lahf
xor
movsl
data16
idiv
outsl
data16
mov
addb
dec
jne
stc
mov
pop
rorb
jg
cli
inc
jae
loopne
cmp
std
aam
sahf
dec
inc
push
inc
cmc
jno
xchg
xchg
jp
dec
insb
dec
jecxz
add
mov
data16
test
div
or
icebp
xchg
call
scas
sub
push
mov
fs
pop
aaa
test
mov
test
sub
hlt
clc
xchg
mov
pop
sub
xchg
push
ret
lods
or
or
lret
jnp
mov
fdiv
pop
lods
fdivrs
adc
call
xor
push
push
daa
mov
mov
lret
jno
mov
lahf
xchg
int
mov
jno
shrl
jmp
mov
mov
popa
icebp
lret
popf
lahf
adc
mov
mov
adc
iret
mov
dec
loope
push
inc
out
mov
jg
je
push
in
mov
or
test
outsl
test
out
aad
mov
repz
mov
pmaddwd
out
sub
xchg
daa
mov
or
and
pop
loopne
mov
cmpsl
lahf
adc
mov
adc
enter
mov
add
std
pop
or
jnp
cli
icebp
call
shll
jo
jo
clc
std
shlb
xor
jns
test
mov
test
add
jge
mov
mov
popa
movsl
out
hlt
cmp
in
pop
push
cwtl
and
pop
shll
push
jbe
push
pop
xchg
push
jmp
jecxz
jne
and
enter
or
sbb
pop
mov
mov
fnstcw
sub
dec
rcpps
sub
mov
movl
dec
imul
mov
daa
or
in
adc
mov
lret
or
fcmovnb
mov
shl
lahf
out
adc
popf
lret
imul
hlt
shll
mov
das
cld
xchg
xor
add
js
aaa
pop
cmc
ljmp
jo
iret
push
sub
daa
cmp
out
inc
notb
je
call
sbb
mov
jecxz
stos
mov
mov
test
pop
repz
cmpsb
fsubr
adc
enter
stc
div
mov
loopne
stos
loop
sahf
cld
in
sub
mov
scas
cmp
pop
mov
dec
mov
dec
ret
test
fcmovu
push
adc
hlt
ret
lea
insb
cmc
popf
xchg
xchg
sbb
pop
movsb
lods
ljmp
mov
in
sar
jmp
out
cwtl
jno
add
sub
int
mov
lret
inc
sub
push
cmpsl
aaa
jge
mov
jo,pn
lock
mov
push
addr16
mov
or
sbb
pusha
inc
sbb
mov
lds
pop
fsubrp
push
loop
mov
hlt
adc
pop
jl
lds
cmc
jb
push
jno
subl
hlt
mov
or
out
lock
dec
cmpl
jp
or
adc
mov
mov
push
out
shlb
in
sbb
adc
pop
cs
insl
mov
push
adc
and
ret
insl
add
or
mov
sub
scas
pop
sbb
push
xchg
fstpl
subl
and
xchg
mov
dec
jp
adc
jle
roll
or
cmp
push
xor
push
dec
outsb
or
sub
xor
aas
cmc
xchg
add
mov
xchg
xor
lret
jl
and
sbb
sbb
or
nop
fisttpll
and
jnp
xchg
inc
jo
arpl
mov
mov
test
pop
mov
cwtl
dec
ret
pop
jns
cs
pop
fdivrs
fiaddl
arpl
loop
dec
lds
cmpsb
iret
mov
and
sahf
push
sub
xor
mov
push
xor
es
sahf
repnz
loopne
or
repz
mov
xor
jae
and
loop
xor
and
mov
es
mov
jnp
negl
in
sbb
pop
jo
lds
pop
cmp
fsubrs
nop
out
lret
sub
mov
fucomp
push
dec
sub
stc
loopne
adcl
cli
inc
pop
mov
mov
xor
je
aaa
insb
cld
adc
or
pop
push
mov
ret
jge
cmp
cld
push
cmp
call
stos
fs
xchg
cli
gs
mov
mov
cwtl
rep
mov
stc
xchg
cmp
xor
and
pop
and
loop
mov
sbb
or
push
xor
mov
imul
fwait
lock
mov
sbb
mov
jbe
cli
xor
rorb
gs
out
fsubs
int
insl
aam
push
imul
mov
arpl
inc
mov
inc
jge
sti
mov
sbb
int
neg
sub
mov
inc
movsb
lods
or
or
insl
mov
stos
mov
dec
ret
outsl
int3
lret
and
and
bound
mov
cmp
and
test
ss
or
lock
pop
movsl
xchg
ffreep
push
cmp
hlt
mov
lahf
cwtl
add
mov
xchg
ljmp
daa
sti
add
adc
jp
imul
into
jg
push
cs
stos
shl
xor
ljmp
in
hlt
jno
nop
push
lds
call
add
icebp
adc
imul
ret
mov
pop
jb
hlt
mov
jnp
mov
in
cmpsl
lret
sarb
push
xchg
insl
ja
sub
mov
stos
xor
lea
mov
loopne
push
fcomp
loopne
enter
fnstcw
repz
sub
addr16
outsl
pop
xchg
adc
push
loopne
jmp
adc
jecxz
jge
add
mov
jge
or
or
cmpsl
xchg
and
dec
cmpsb
mov
sub
imul
enter
sub
or
push
sub
cmp
cmp
inc
and
dec
outsb
out
addr16
daa
push
loop
lcall
pop
sbb
lock
xchg
insb
jb
mov
jmp
call
int3
insb
xor
test
adc
mov
and
sub
fildll
xchg
dec
add
or
fidivs
mov
fnstsw
xchg
rorb
jp
clc
cs
daa
mov
test
jle
jmp
lret
stc
insl
repz
pop
sub
test
sbb
fstl
and
cli
mov
add
call
pop
dec
aam
push
outsl
push
dec
cmc
jg
in
test
lahf
xor
icebp
dec
jo
mov
mov
mov
fs
jl
setp
popa
fsts
leave
das
dec
xor
jo
mov
add
xor
mov
loopne
sub
sub
sti
and
out
add
cli
mov
ds
iret
fnstcw
pop
mov
mov
add
daa
xchg
mov
hlt
mov
fwait
xchg
lods
mov
mov
and
fstp
add
test
mov
test
int3
andb
sbb
jmp
scas
cltd
cmp
jne
mov
jle
lods
and
enter
in
loop
xor
lock
xor
and
jg
fldenv
mov
fs
sbb
orl
mov
mov
dec
cmpsb
sbb
sub
add
pusha
mov
mov
vmovsldup
lods
and
cmp
in
push
call
shll
jnp
dec
popf
xor
and
filds
repnz
fs
in
mov
push
jmp
push
cmp
pop
nop
bound
cwtl
cmp
sahf
or
pop
ss
mov
xchg
psraw
pop
push
mov
cmpsb
int3
push
and
lods
bound
jne
xor
xchg
xchg
mov
lcall
inc
clc
leave
inc
ja
enter
push
loope
nop
nop
and
test
ljmp
ss
jecxz
xchg
jno
adc
int
out
cmpsb
inc
leave
sahf
adc
xchg
mov
mov
ret
push
push
push
ss
clc
dec
xor
call
or
insb
or
imul
mov
pop
mov
mov
inc
sub
mov
pop
out
stos
xchg
jne
es
fidivrs
lods
test
shrl
test
std
mov
loope
mov
or
fprem
pushf
mov
inc
and
add
add
out
push
jg
jnp,pt
sbb
push
jbe
loope
mov
add
inc
jge
sub
fwait
call
push
bound
sbb
mov
jbe
sbb
jb
fs
ret
mov
pop
inc
mov
mov
in
repz
cli
js
inc
cwtl
cmp
mov
in
push
lock
jmp
cmc
mov
fistpll
and
mov
rol
cs
pop
out
push
add
hlt
fnstsw
adc
cld
cmp
cmp
test
rcr
mov
sbb
test
hlt
daa
and
push
mov
xchg
mov
mov
aaa
mov
clc
and
test
lahf
lds
mov
sbb
adc
mull
shl
lea
loopne
xchg
push
mov
ja
mov
sub
jle
cmc
cmp
dec
xchg
nop
mov
mov
ljmp
dec
pop
or
shr
lods
mov
cmpsb
push
dec
push
xchg
mov
hlt
inc
mov
sbb
adc
clc
loopne
push
test
push
add
lcall
sahf
and
sub
jne
mov
fld
lea
incl
xabort
pushf
dec
mov
pop
js
dec
sbb
cmp
in
dec
rorl
inc
mov
sub
not
push
and
jl,pn
add
add
imul
outsl
mov
ds
aad
loop
iret
out
mov
stos
ja
data16
scas
out
cmpsb
cmp
decb
sti
into
mov
dec
ret
and
pusha
lss
sbb
mov
insl
pop
repz
fsubs
add
cli
mov
or
icebp
jno
fidivrl
pop
mov
push
inc
ja
cmpsb
mov
mov
aad
sti
les
out
test
aam
mov
stos
jecxz
jp
test
sub
loopne
mov
jb
clc
push
jo
je
mov
inc
repnz
inc
xchg
fistl
imul
mov
mov
movsb
subb
inc
sbb
rcrb
lods
push
sub
das
adcl
mov
inc
movsl
push
or
cmpsl
mov
cmpsl
mov
shll
jnp
clc
inc
loop
lods
rcr
jne
stos
push
xchg
mov
jb
pop
pop
je
mov
mov
clc
adc
adc
jge
and
jle
sub
or
dec
orb
xchg
imul
ret
pop
imulb
cmc
das
mov
fistpl
sbb
insb
jmp
adc
jo
mov
push
divl
xchg
pop
jl
mov
sub
es
or
xchg
shrb
cmpsb
fldenv
clc
lcall
stos
ffree
or
mov
push
lcall
add
sub
sahf
std
cmp
stos
daa
mov
loope
aad
mov
rclb
loope
lret
dec
mov
shrl
popa
mov
cmpsb
xorl
fstpt
sub
dec
add
push
cmp
inc
and
test
daa
mov
mov
adc
mov
and
enter
push
stos
mov
mov
sub
xchg
scas
push
pop
mov
pop
jbe
das
popa
fs
ja
loope
int3
xchg
fsubrs
pop
jmp
aad
cmp
push
sbb
sub
lds
mov
fldl
out
adc
dec
loop
cmp
jnp
or
sarl
inc
sbb
mov
nop
imul
stc
xor
pop
mov
xor
bound
insl
in
jg
sti
das
mov
pop
lods
outsb
and
pop
mov
cwtl
mov
nop
cld
cltd
pop
sbb
stos
sbb
sti
dec
push
fwait
iret
out
and
jne
and
fistl
mov
cmp
dec
fldl
cmp
dec
xchg
jle
and
fs
jmp
cltd
daa
in
mov
sahf
push
push
out
imul
in
xchg
add
test
jle
or
clc
add
aas
hlt
subb
xchg
call
aas
cwtl
loope
push
mov
cmp
xchg
loop
dec
xor
xor
icebp
jae
fildll
clc
aas
pop
add
not
sbb
or
push
pop
jmp
pop
jbe
pop
jmp
enter
sti
movsb
push
loopne
insl
pop
jns
mov
sbb
adc
or
scas
sti
cmp
push
movsl
xor
testb
movsl
inc
xchg
mov
les
int3
mov
adc
bound
into
leave
fneni(8087
add
out
cmp
es
or
pop
mov
test
or
fldcw
sbb
leave
stc
lea
adc
inc
decb
imul
xchg
int
sbb
aaa
out
mov
fucom
cmp
popf
xor
jp
inc
loopne
ss
pop
lods
xorb
popa
fsubrs
jnp
out
dec
iret
stc
dec
and
call
pop
xor
es
jmp
mov
push
adc
bt
icebp
lea
aam
cmpsl
mov
leave
daa
loop
sbb
push
in
test
mov
je
in
pushf
mov
orb
popa
mov
mov
xor
xchg
mov
sbb
inc
xchg
test
fcompl
pop
push
adc
jns
mov
lods
pop
mov
xor
mov
xchg
sbb
inc
fbld
add
scas
mov
pop
dec
xchg
dec
shlb
cli
je
xcrypt-cfb
cmpsl
daa
pushl
mov
push
jp
pop
test
decl
xchg
cli
lods
rcrl
flds
push
outsl
in
lret
sbb
imul
add
mov
cmpsb
push
push
pop
vunpcklps
out
xchg
push
dec
push
sub
sub
dec
jl
or
pop
loope
popa
and
movsb
imul
loope
ss
inc
cmp
inc
push
and
adc
jbe
push
in
push
ljmp
fwait
mov
es
insb
ljmp
sub
or
cmpsl
jbe
sub
jecxz
and
clc
lcall
js
ret
daa
jle
inc
mov
cwtl
clc
dec
pop
ljmp
rclb
clc
fdiv
lahf
mov
cs
xchg
fidivrl
xchg
insb
push
mov
sahf
jecxz
rol
cli
xor
mov
jle
mov
xor
or
mov
xchg
xchg
xchg
xlat
and
repz
cmp
lea
decb
mov
push
divb
push
imul
int
sbb
fs
fld
push
and
push
imul
inc
push
pusha
lds
fisttpl
ja
mov
imul
xchg
lret
sub
test
dec
jno
int
out
mov
mov
inc
inc
fnstenv
data16
adc
sub
jmp
mov
out
ret
push
js
fwait
inc
cmp
outsl
mov
sbb
in
mov
sahf
outsb
cltd
mov
dec
loop
mov
je
jno
mov
cltd
mov
leave
mov
xor
xchg
xor
shlb
out
call
adc
or
mov
movsb
pushf
cwtl
ja
push
test
in
cmc
sbb
push
je
jno
repnz
int3
iret
aaa
and
stos
inc
stc
into
cmp
das
data16
mov
xor
int3
inc
fs
jge
mov
js
rcr
adc
xchg
daa
daa
adc
lods
sbb
and
mov
inc
inc
dec
and
jge
xor
aam
inc
push
xchg
sbb
popa
pop
push
pop
push
sti
push
cli
mov
call
aam
add
and
faddl
xchg
imul
cmpl
ss
es
mov
mov
cmp
iret
or
mov
nop
fxtract
ret
mov
jno
enter
scas
lahf
xor
rcrb
call
cmp
mov
pop
loope
or
jbe
ljmp
cwtl
inc
lods
in
inc
pusha
orl
gs
sbbb
and
roll
xchg
dec
mov
fistps
mov
je
scas
mov
sub
or
pop
jnp
jmp
fsubl
inc
xchg
and
xchg
movsl
pop
lcall
imul
mulb
push
mov
mov
jp
fdivr
fisttpll
lock
push
push
test
rol
imul
lds
cmc
popf
inc
les
pop
out
mov
ja
jne
adc
jo,pn
jb
mov
dec
in
out
add
xchg
cmp
lods
push
scas
mov
lea
test
push
mov
adc
jo
sub
sbb
aam
or
fldenv
ret
popf
dec
sti
sub
sarb
cmp
fs
push
andb
insl
insb
lcall
loop
sub
add
popf
mov
add
sarl
mov
pop
jp
jo
out
push
test
xor
add
pushf
push
pop
dec
stos
outsl
sahf
pop
ret
pop
push
mov
hlt
fs
sarl
xchg
inc
mov
jbe
es
outsl
stos
push
loopne
rcrb
in
or
dec
cmp
add
or
adc
mov
dec
and
stos
mov
mov
cmpxchg
push
je
mov
ss
mov
and
enter
dec
gs
jg
test
hlt
aaa
loop
int3
push
pop
cli
clc
mov
adc
icebp
loopne
adcb
adc
mov
icebp
inc
mov
and
jb
add
pop
in
dec
shrb
stos
je
in
test
icebp
mov
dec
cvtps2pd
cld
xor
jmp
movsl
pop
scas
jns
mov
ja
mov
sahf
mov
mov
jae
fsts
lds
push
mov
inc
mov
fnstcw
or
jae
lock
cltd
sbb
daa
imul
pop
rcrb
dec
add
jb
jne
add
lret
cli
jne
jno
xor
lea
mov
mov
icebp
pop
cmc
dec
out
cld
out
repz
xchg
fldl
adc
fimuls
jecxz
cmp
add
pop
imul
popf
xchg
mov
popf
shrl
es
push
leave
std
call
jnp
pop
sarl
lret
and
dec
cmpsl
pushl
stc
adc
mov
ja
ret
xlat
lock
mov
aaa
inc
mov
das
notb
pop
mov
das
test
ds
shl
cmpsb
or
lods
xchg
loopne
insb
out
inc
movsl
pushf
xor
and
inc
lcall
mov
scas
ja
add
aam
or
and
mov
test
out
js
and
addb
lcall
rclb
cmp
out
xchg
push
pop
in
inc
popa
hlt
out
and
sbb
cwtl
mov
xchg
mov
xchg
mov
pop
popf
cmp
test
xchg
xor
rclb
pop
lcall
shlb
leave
stos
xchg
jo
cmc
lock
lods
ja
lahf
mov
aas
mulb
mov
movsl
popa
add
sub
cmp
push
in
dec
mov
add
dec
leave
movsb
fildl
mov
ret
mov
ss
fdivs
int
pop
aad
pop
mov
add
cltd
into
add
daa
pop
mov
fs
jb
sbb
fwait
sbb
idivb
outsl
mov
mov
aad
mov
mov
aaa
dec
and
cmp
push
inc
mov
lods
adc
cwtl
mov
xor
stos
shl
int
cld
push
mov
cmc
clc
mov
sub
lds
adc
jo
cwtl
outsl
mov
pop
cmp
sub
addr16
test
jo
jns
gs
push
sbb
mov
std
xor
cs
pushf
das
pop
jns
aas
adc
and
insb
lret
test
mov
mov
sbb
mov
test
cli
sbb
enter
cmpsb
sbb
daa
push
cmpsb
in
in
push
mov
inc
cwtl
jb
mov
add
sar
or
xchg
leave
mov
pop
in
mov
or
add
mov
ret
jmp
iret
sbb
sarb
push
cmpsl
xchg
jmp
pushf
fwait
push
mov
xchg
xchg
aaa
subb
push
lods
hlt
shrb
inc
inc
lcall
xor
ret
sbb
push
xcrypt-ofb
cmpsl
stos
and
insl
cmp
fwait
movsb
stos
dec
cmp
jecxz
inc
push
ret
aam
adc
add
addb
mov
mov
shrl
sbb
jecxz
add
pop
or
shrb
xor
das
mov
hlt
inc
aad
dec
cmp
mov
pop
lds
jl
lock
gs
ljmp
add
mov
rcrl
mov
and
nop
iret
pop
addl
mov
add
pop
aad
iret
stos
andb
hlt
pop
jne
jb
pushf
cmp
pop
pop
push
scas
jo
icebp
sar
icebp
adc
sbb
cmpsl
xlat
mov
movsb
outsb
dec
sub
shrb
pop
test
icebp
jno
shr
lret
shll
sbb
xor
imul
shlb
jb
cmpsl
rolb
mov
dec
mov
mov
sbb
jp
test
xchg
adc
or
je
cmp
fdivrs
icebp
imul
sti
xchg
push
lcall
jae
jbe
push
sub
sarb
cmpsl
frstor
xchg
and
and
inc
icebp
data16
mov
insb
sbb
dec
dec
or
or
sbb
outsb
inc
push
imul
cmp
out
das
and
repz
mov
add
frstor
cmpsl
fucom
jnp
cli
mov
or
add
stos
and
scas
cli
jno
pop
and
xor
mov
add
pop
movsb
lods
dec
push
add
add
and
xchg
mov
cli
mov
lock
icebp
mov
nop
push
mov
jne
adc
pop
idivl
mov
sbb
dec
adc
pop
inc
add
jo
and
adc
sub
xchg
mov
ss
add
mov
inc
cmp
mov
jnp
mov
arpl
adcb
xchg
idivl
adc
out
and
add
push
cmp
sub
fcoml
ljmp
shlb
fbstp
nop
fbstp
ret
cmc
loopne
cmc
xchg
xor
adc
stos
xchg
mov
pop
gs
gs
enter
iret
scas
movsl
mov
mov
mov
sub
or
call
mov
cmp
lock
std
scas
adc
jb
or
jl
imul
xchg
shrb
imull
mov
jnp
cmp
mov
jge
loopne
mov
out
mov
inc
or
iret
mov
xchg
icebp
addr16
fcomps
stos
xchg
test
dec
sbb
sub
pop
lahf
push
push
outsb
adc
roll
push
xchg
in
mov
rorb
xchg
pusha
pop
repz
outsl
sbb
cltd
lock
push
pop
pop
adc
jmp
or
cmp
mov
mov
movsl
adc
dec
lcall
mull
outsb
in
push
int
adc
push
pop
lahf
testl
and
xchg
cmpsl
ret
pop
in
and
pushf
test
pop
jb
iret
and
jg
fildll
cwtl
sub
lods
push
sbb
hlt
in
mov
ja
filds
jae
icebp
mov
sub
outsl
mov
adc
sub
les
cld
aas
xlat
mov
int3
movsl
roll
adc
mov
jae
jmp
jg
sub
nop
in
mov
popf
jno
shll
mov
xchg
lds
mov
mov
in
divl
aad
cmp
and
je
jae
pushf
cmp
cmp
ja
aad
cmp
lea
insb
mov
hlt
sbbb
nop
addr16
push
add
sarb
jmp
ja
mov
cmp
mov
inc
and
cmpb
movsl
imul
cmp
test
std
shl
cmp
addb
rcr
sub
pushf
xchg
adc
mov
and
adc
xlat
mov
mov
sub
fsubrs
sbb
aad
mov
cmp
stos
dec
and
xor
mov
inc
mov
jecxz
adc
dec
scas
xor
sub
scas
xchg
cli
mov
lods
dec
fimuls
xor
xchg
cmp
outsl
test
mov
stc
bound
out
xchg
ret
jne
and
push
cmp
push
es
add
push
adcl
clc
jecxz
adc
inc
add
es
push
mov
adc
lret
daa
inc
in
mov
ljmp
bound
cli
push
lock
cmp
jns
and
mov
mov
ret
insl
loope
pop
sub
imul
inc
mov
mov
daa
cltd
or
sub
jge
and
pop
sbb
adc
aas
sub
outsb
loop
mov
nop
stc
lret
icebp
and
imul
ja
jp
cmp
hlt
scas
or
test
inc
ljmp
lret
mov
or
and
mov
call
jmp
shrb
pop
pop
rcl
mov
jmpw
shrb
mov
out
dec
mov
stos
mov
inc
pop
dec
adc
fsubs
mov
xorl
sbb
icebp
stos
test
mov
aas
test
sub
mov
inc
sbb
sub
cwtl
adc
mov
and
outsb
sbb
jmp
clc
arpl
ficomps
xchg
jbe
dec
add
es
pop
in
mov
cmpsb
push
stos
shll
mov
arpl
pop
or
and
sbb
dec
cmp
cmpsb
adc
and
adc
cmpsl
mov
call
into
sub
or
pop
cltd
das
mov
flds
and
push
pop
xor
arpl
jbe
cmp
scas
mov
xchg
inc
gs
enter
ret
insb
pop
pushf
add
stc
pop
xchg
out
scas
fmull
pop
inc
data16
mov
jecxz
dec
cmp
mov
sbb
and
mov
gs
sbb
pop
into
mov
push
jl
rclb
mov
jo
xor
adc
sbb
lock
in
fldl
mov
ret
loop
inc
lahf
and
out
xchg
ss
hlt
adc
push
divb
aaa
adcl
mov
mov
or
imul
inc
jnp
cld
test
enter
xlat
cmp
loop
stos
pop
xlat
or
dec
add
call
jne
jp
pop
xorl
cwtl
cli
arpl
dec
add
mov
adc
outsl
mov
clc
mov
xor
dec
cmp
push
lea
mov
pushf
pop
stos
ljmp
insl
fld
std
jmp
cmpsl
mov
jbe
inc
mov
sbb
ret
movsl
adc
cmpsl
iret
mov
data16
jg
stos
inc
lret
rorb
ss
mov
movsb
cs
cwtl
pop
mov
dec
sub
outsl
call
xchg
icebp
nop
cmp
sahf
adc
lods
inc
movsb
mov
insb
cmpsb
jle
or
lea
scas
push
fwait
cmp
mov
jmp
insl
jmp
adc
sbb
cmp
in
mov
jecxz
mov
arpl
xchg
outsb
scas
or
es
add
add
jmp
cltd
test
sub
or
lock
sub
repz
out
lods
sbb
dec
mov
adc
ret
pop
pop
pop
jg
hlt
xor
clc
scas
mov
ja
cmp
test
mov
mov
inc
mov
icebp
or
rcll
lock
and
mov
jns
popf
xchg
xor
cmp
add
xchg
mov
in
cmpsb
xlat
ror
ds
jg
dec
imul
imul
iret
pop
popf
enter
jne
int3
test
std
orb
mov
lahf
mov
imul
inc
jl
and
push
movsl
lcall
lods
out
mov
sti
sarl
je
pusha
pushf
push
add
movsl
push
ljmp
jg
mov
xor
stos
sub
or
cmp
cwtl
and
cmp
scas
mov
dec
push
push
xor
inc
lret
jp
call
mov
push
aas
or
adc
sub
test
addr16
pop
pop
mov
jae
aam
sar
cmp
lea
shrl
call
dec
and
repz
dec
xchg
sub
aaa
cwtl
addr16
sub
ret
insl
mov
sub
out
aaa
or
int
clc
scas
mov
in
pop
and
mov
xor
testl
dec
or
repz
xchg
out
mov
pop
and
sbb
push
pop
out
xor
andl
repz
mov
lock
mov
mov
mov
push
xor
aad
pushf
sbb
pushf
xchg
sbb
imul
push
adc
cmp
jecxz
in
jp
push
mov
jmp
lods
sbb
and
jl
ljmp
enter
int
xor
in
mov
fsubs
push
lods
bound
jns
sub
and
icebp
arpl
add
xor
movsl
leave
les
insb
dec
mov
inc
dec
daa
outsl
shrb
ret
jecxz
mov
and
je
jnp
fcmovnu
nop
cmp
es
out
dec
loope
ds
sbb
loope
repz
lea
inc
xor
pusha
fsubp
inc
mov
jle
mul
mov
dec
loope
xlat
and
les
popf
add
not
int3
fcom
adcl
into
jge
jnp
pop
pop
or
and
dec
shr
lret
mov
shlb
sbb
scas
lea
inc
pop
hlt
adc
xor
mov
push
daa
enter
jle
inc
cmp
out
add
jns
push
sub
mov
outsb
adc
aas
sub
pop
inc
movsb
das
arpl
fidivs
in
push
shll
mov
mov
rorl
jo
or
push
jge
mov
enter
xchg
lods
add
in
bound
fcos
adc
push
xor
addr16
lods
inc
je
add
cs
shll
mov
data16
lods
push
mov
cwtl
and
daa
add
insb
hlt
jne
repnz
movsl
je
repz
and
in
inc
imull
test
outsl
mov
sub
mov
cmp
pop
xchg
cmp
sbb
mov
mov
fwait
and
lock
mov
pop
xchg
dec
shlb
aaa
fucom
shrl
add
pusha
mov
lahf
movsl
inc
test
mov
mov
jg
testb
cli
imul
es
pushf
mov
sbb
iret
and
jnp
pop
ficompl
das
mov
or
sub
push
xor
jnp
fbstp
push
testl
push
lock
xchg
test
testb
imul
movsl
jecxz
sbb
pusha
std
sub
loop
mov
inc
out
scas
pop
fcomps
fsubrl
xor
std
lret
ja
or
out
cmp
and
rolb
inc
outsl
fldenv
xchg
cmc
repz
cmp
cwtl
inc
jb
dec
push
ja
sti
imul
popl
xor
jg
cmp
push
xorl
scas
pop
aas
dec
sub
or
mov
call
mov
mov
mov
push
cmc
fdivrs
cli
decb
packssdw
mov
add
movsl
mov
jnp
popf
jno
popf
xor
adc
mov
leave
in
push
sbb
and
add
jo
aad
sub
add
jmp
test
push
into
adc
and
sub
mov
dec
negl
aam
xlat
jmp
dec
loope
adc
inc
mov
push
add
mov
sti
out
stos
add
fsubl
lock
and
lock
mov
xchg
or
and
fidivs
xchg
popa
movsb
call
call
lods
pop
push
push
test
out
sbb
call
pop
fisubs
mov
or
clc
mov
gs
dec
iret
les
adc
es
std
inc
xor
into
push
cmp
movl
ja
int
xchg
aad
stos
pop
sar
repz
and
inc
fadds
add
cmp
and
ja
pushf
pop
jl
mov
outsb
bound
inc
jl
dec
sar
pop
mov
shrl
inc
outsl
fnstenv
fnstcw
sti
mov
imul
sbb
mov
fsts
mov
and
daa
fwait
dec
push
xchg
outsl
aaa
lods
sub
rolb
fs
testl
stos
xchg
mov
dec
cmpsb
lahf
cmc
divb
mov
mov
aas
lock
and
sbb
push
rclb
mov
jle
cmp
out
mov
in
xchg
adc
add
cmp
cmp
mov
mov
lods
jno
fbld
xchg
ret
mov
test
insl
lret
xor
sbb
out
jg
lods
sub
popf
cmp
cmp
xor
mov
mov
popf
xor
fimull
movsb
in
dec
xor
cmp
xor
sbb
fcmovu
cld
movl
shrb
shl
imul
or
cltd
jle
outsl
test
iret
outsl
push
jle
andl
ljmp
adc
shlb
popa
mov
xlat
lret
in
mov
aam
ss
or
sub
lret
imul
and
push
mov
cmc
mov
icebp
and
jecxz
bnd
lea
repnz
stos
pop
ja
mov
test
add
dec
mov
fisubrl
ret
sub
out
sahf
or
cmp
test
or
shlb
cwtl
out
lds
jp
cmpsl
andl
mov
xchg
xchg
mov
fisubs
adc
rorb
mov
call
or
jecxz
inc
popf
push
mov
jb
xor
cmp
mov
js
mov
iret
xor
imul
out
fdivl
divb
pop
sub
lods
loope
and
xchg
andl
fcoml
aad
jo
mov
subb
dec
out
adc
pop
push
outsb
add
addl
stos
in
bound
inc
stc
popf
mov
call
fimuls
mov
sub
nop
lret
push
mov
out
xor
scas
push
push
divl
ret
sbb
lods
cmp
adc
adc
pop
push
and
sub
movsb
sbb
inc
imul
jae
jo
out
push
inc
jmp
push
addr16
inc
push
push
popf
xchg
mov
loop
rcr
call
jecxz
imul
es
cmp
fsubl
jnp
jmp
out
stos
lahf
lret
mov
mov
xchg
xlat
cmp
mov
pushf
xchg
loop
sbbl
in
je
xor
js
lret
lods
sbb
dec
cmp
pop
jne
movsl
jno
dec
std
mov
pshufw
out
in
xchg
push
ret
testb
mov
cltd
test
or
fcmovnbe
adc
cmp
jle
hlt
and
and
mov
dec
ret
es
add
mov
mov
inc
mov
mov
jmp
in
pop
lds
add
std
ja
enter
sub
repz
push
adc
mov
jae
cs
adc
xor
jmp
outsl
addr16
mov
lret
fdivrs
push
das
inc
xor
into
fnstenv
inc
adc
xor
cli
add
fisttps
jle
je
insb
mov
popa
cmp
cld
and
sub
jg
insl
push
pop
inc
lods
bound
cld
sub
sbb
jno
adc
cltd
xor
repnz
bound
adc
jmp
nop
jnp
pop
ja
cmpsb
aas
add
mov
mulb
mov
sbb
loop
aad
std
add
aam
sarl
clc
ljmp
sbb
xor
add
test
push
dec
xchg
mov
sub
xchg
insb
pop
sub
fstps
popf
aam
mov
adcl
and
xor
mov
in
inc
push
dec
insl
cmpl
jle
sbb
xor
mov
popf
divl
imul
subb
pop
or
add
fisubl
mov
in
mov
mov
sub
xor
shlb
pop
sti
mov
cmp
mov
movsb
or
out
fidivl
mov
fisubrs
xchg
dec
lea
and
fsubrl
xchg
out
pop
xor
fidivl
daa
ljmp
addr16
cmc
stos
jmp
sub
test
aaa
mov
inc
mov
xchg
inc
scas
jns
dec
movsl
jecxz
popa
xor
call
pop
mov
movsb
mov
ljmp
jnp
test
and
mov
adc
nop
inc
shr
lds
hlt
jle
cmp
repnz
inc
dec
dec
sub
rcll
mov
add
xchg
cmp
sti
sbb
addl
sbb
daa
das
sbb
sub
or
sar
jne
idivl
test
xor
cmp
in
int
ficomps
sahf
push
or
cmp
movsb
dec
ss
test
sbb
idivb
cmpsb
call
mov
lret
das
cmp
scas
xchg
stos
aas
fimull
loop
ror
pop
cmc
push
push
push
leave
xchg
lods
repz
test
aad
std
sub
jnp
xlat
leave
add
and
dec
testb
push
push
mov
das
icebp
loopne
iret
into
mov
repz
jne
lret
adc
xchg
mov
les
mov
dec
and
andl
jecxz
xor
add
sbb
aaa
adc
icebp
mov
jmp
sbb
add
or
mov
lods
jo
mov
cmp
sbb
faddl
sbb
xorl
dec
add
jp
mov
lock
out
sub
jl
fstps
inc
mov
jmp
mov
cli
adc
push
punpckhbw
add
sub
mov
cmc
add
xor
call
in
mov
stos
dec
mov
fmull
outsl
sub
fstpt
add
pop
das
inc
sub
xchg
fs
add
arpl
out
inc
and
push
cmp
int3
cmp
sbb
sub
stc
ds
lret
mov
movsl
push
jbe
push
cmpsb
and
sbb
adc
ss
js
jno
adc
push
loopne
mov
cmp
out
push
inc
repz
sub
dec
gs
in
dec
inc
mov
aaa
push
mov
mov
gs
jns
popa
sbb
push
mov
add
mov
loope
sub
mov
xor
out
enter
mov
out
sbb
mov
sbb
pop
lea
sbb
jge
sbb
in
or
inc
inc
js
cmp
push
pop
xor
jns
jno
ret
lock
adc
icebp
sbb
xor
xchg
sub
hlt
dec
in
jo
fs
imul
cmp
fimull
lds
test
in
mov
and
lret
push
popa
dec
dec
and
mov
stos
popa
inc
imul
xor
sub
push
xchg
xchg
xchg
insb
mov
sbb
test
aam
jbe
pop
cmp
and
sub
iret
mov
loopne
imul
loope
loope
std
dec
mov
xor
in
mov
int3
rorb
sub
jmp
mov
and
cmp
loope
imul
adc
pop
push
fstpl
cmc
je
mov
cmpsb
mov
popa
shrb
clc
mov
cld
cwtl
push
inc
mov
inc
or
and
in
push
out
xchg
dec
dec
test
enter
imul
mov
cmp
cwtl
fadd
push
popa
les
inc
inc
jle
int3
cwtl
gs
frstor
je
je
out
mov
cld
in
rorb
sbb
push
xlat
and
mov
and
cmp
loopne
xchg
mov
jne
jb
push
ljmp
filds
sbbl
mov
das
push
dec
cmp
movsb
jbe
or
leave
stc
bound
pusha
cmp
inc
sti
stos
xchg
sbbb
or
test
jecxz
sbb
mov
scas
dec
enter
loope
rclb
inc
mov
jle
stos
push
dec
adc
imul
or
sbb
or
cli
cmp
lds
jge
aas
sbb
sub
xor
xor
icebp
or
push
sbbb
and
orl
inc
and
jg
mov
scas
sbb
aad
movsb
aaa
add
dec
scas
mov
jne
lret
and
mov
aam
mov
shr
lds
inc
scas
or
lods
inc
dec
fstp
cltd
lahf
sbb
sbb
sbb
in
push
in
xchg
scas
xchg
adc
push
push
or
insb
test
ja
aaa
xchg
shl
cmpsb
or
out
cmc
pop
pop
mov
jp
lock
xlat
popa
mov
insb
dec
push
mov
pushf
inc
dec
cmp
and
and
inc
pop
pusha
movsl
fbstp
adc
push
mov
cmp
movsl
dec
pop
or
adc
cmp
mov
jo
pavgb
jno
dec
ja
icebp
fidivl
mov
mulb
mov
dec
lods
mov
mov
xor
add
push
mov
xor
push
jmp
jmp
lds
out
xchg
stos
jnp
mov
lret
pushf
andl
pop
arpl
pushf
sub
pop
sbb
pop
push
lahf
and
bound
xchg
dec
xchg
fbstp
popa
lea
jnp
insb
add
dec
xchg
sub
dec
sbb
mov
pop
mov
sub
iret
rcl
movsl
les
es
stos
pop
ja
xchg
add
or
scas
xchg
or
nop
mov
jbe
lods
mov
xor
inc
add
std
jg
cmp
je
and
call
lcall
lret
nop
dec
sti
and
push
xchg
imul
gs
dec
loope
and
xchg
xchg
xor
adc
inc
jne,pt
jp
cmp
mov
fwait
mov
cmp
xor
inc
outsl
fdivr
push
ret
out
cmpsl
arpl
or
es
xlat
cli
mov
adc
mov
jae
add
lret
popf
or
lods
pop
push
xchg
jb
cltd
xor
inc
popa
or
loope
mov
xchg
and
dec
in
out
pop
adc
out
lods
inc
mov
das
and
pop
xor
xchg
in
aaa
testl
mov
mov
or
hlt
aas
mov
jp
jbe
out
mov
inc
xchg
mov
adc
or
inc
xor
sbb
mov
stos
or
xor
push
addr16
in
imul
and
adc
insl
rcr
xor
sbb
xor
adc
fs
leave
cmpsl
mov
or
dec
cmp
jge
sub
loopne
loope
js
movl
fs
pop
mov
rcll
ljmp
or
icebp
addr16
pop
mov
pop
add
mov
rorl
adc
push
out
lock
lea
fcoms
jae
adc
lods
jnp
xlat
jno
repnz
test
dec
cmp
jecxz
and
pop
cld
sbb
aas
out
mov
mov
add
stc
ficoml
cmp
lea
loop
add
pop
lret
cmp
mov
lfs
or
das
pop
push
or
inc
in
sbb
fildl
rol
jg
push
pop
out
ljmp
inc
out
pop
mov
jne
adc
mov
mov
mov
adc
mov
and
push
adc
mov
and
les
in
mov
mov
enter
arpl
movsl
cmc
addr16
hlt
mov
in
jg
mov
lods
arpl
xchg
inc
xor
jno
push
pop
pop
aaa
filds
cmp
push
lock
repnz
sahf
int3
sbb
movsb
pop
or
jno
inc
repz
das
cmp
out
dec
cmpl
jmp
int
pushf
pop
fwait
and
inc
ret
mov
add
xchg
jmp
pop
mov
in
jne
lahf
dec
push
bound
jns
jl
cld
and
loopne
std
sub
pop
jne
lock
pop
cwtl
popa
xor
mov
int3
rol
aaa
sub
adc
idivl
sbb
aad
fistps
mov
iret
mov
mov
or
aad
popa
fcomps
arpl
movsb
or
lods
and
les
push
inc
mov
or
pushf
icebp
js
mov
aaa
xchg
movsb
sub
mov
sub
mov
in
outsb
xor
mov
cmpsb
and
sti
cltd
jge
gs
sbb
lds
movsl
bound
xchg
cmp
ja
rorb
daa
sbb
fdivrs
xchg
add
xor
je
xchg
mov
sub
dec
aaa
cmp
adc
pusha
scas
and
lret
lds
loopne
pusha
cmpsl
xchg
out
in
fstpt
pop
xorl
push
lds
jbe
leave
pop
mov
lock
xchg
hlt
jle
push
jmp
mov
cmp
test
and
aam
mov
in
jbe
and
fildl
cwtl
mov
mov
aas
pop
pop
repnz
push
cmp
mov
pop
xor
imul
xor
scas
cmp
ja
push
pop
pusha
stos
fdivl
xlat
mov
js
cmp
notb
aaa
jno
mov
mov
jle
orl
in
mov
aas
aas
addr16
lahf
jp
shll
jg
mov
cld
bound
push
push
outsl
xchg
ret
lahf
push
fildl
mov
mov
bswap
jns
mov
imul
mov
ja
jne
cmp
popf
call
loope
sub
mov
fxam
xlat
inc
das
test
and
stos
xor
popf
imul
pop
outsl
dec
pop
add
dec
mov
sbb
repz
sub
push
mov
push
and
loopne
ds
cmp
cwtl
sub
push
push
cli
adc
mov
lcall
call
inc
xchg
xchg
test
stos
add
fs
cmp
pop
push
push
xor
lcall
stos
ficoml
mov
and
inc
mov
pop
mov
leave
repz
cltd
push
dec
pop
push
jnp
es
test
pop
fwait
test
pop
inc
cmp
add
xor
or
push
pop
mov
dec
shll
lret
jecxz
dec
sti
inc
fcmove
jno
mov
mov
jmp
movsb
xlat
mov
cmp
cli
dec
mov
add
inc
cmpsl
lahf
pusha
not
scas
repnz
test
push
add
and
pushl
pop
lds
add
int
cmp
in
data16
cmpsl
adc
xlat
cmp
movl
in
mov
popf
mov
inc
jmp
jmp
or
inc
jbe
mov
lret
dec
loope
mul
out
sarb
sub
push
mov
rol
fstpl
mov
mov
incl
push
inc
adc
or
inc
sub
push
icebp
mov
leave
mov
scas
adc
xor
rolb
pop
inc
in
mov
lcall
es
insl
dec
push
lds
call
inc
mov
rcrb
sbb
pop
leave
dec
pop
mov
divl
fsub
icebp
and
and
mov
int3
push
sub
lods
inc
xchg
cmpsl
js
sub
jo
std
add
in
jg
cmp
jbe
or
jnp
push
xor
nop
sub
jno
xor
mov
jb
ljmp
sbb
dec
cmp
jecxz
add
in
lea
dec
hlt
mov
lret
sub
add
lahf
adc
negl
mull
push
lds
ss
lcall
or
and
aas
jp
jmp
inc
loope
iret
jg
repz
sahf
push
popf
xor
adc
mov
adc
xchg
dec
fsubs
test
jecxz
arpl
sub
ret
mov
jge
mov
sar
jb
enter
in
out
mov
repnz
mov
sbb
mov
call
mov
or
or
or
imulb
loope
cld
mov
mov
mov
rorl
pop
adc
in
out
dec
repnz
add
mov
jnp
jp
and
cmc
test
jge
mov
mov
int
pushf
inc
ror
stos
mov
lret
hlt
and
mov
stos
pop
push
or
dec
fs
mov
add
pop
push
aam
add
xchg
repnz
and
pop
je
fdivrl
fisttps
decl
pusha
mov
movsb
stc
cmp
xor
test
and
into
lods
insl
mov
iret
lods
test
mov
call
mov
and
lods
mov
fcomp
or
gs
jns
fcompl
mov
inc
ret
rorl
hlt
ss
adc
inc
xlat
mov
cmpsl
sbb
lahf
pop
sub
hlt
loope
icebp
rclb
repnz
inc
into
or
pop
or
dec
pop
add
nop
rclb
repz
lret
clc
bound
push
out
sub
daa
cs
in
cmpsb
mov
jno
jbe
adc
mov
cmpsl
imul
pop
das
sub
mov
sub
dec
data16
pop
testl
hlt
ss
imul
pop
add
icebp
ljmp
pop
clc
push
and
stos
jl
insb
mov
rcrl
mov
jecxz
mov
lcall
adc
loopne
int3
push
std
xor
xchg
lea
stos
imul
sub
les
test
lods
icebp
lret
addb
sbb
test
jmp
ja
push
hlt
repz
push
addr16
jge
cmp
inc
jg
sarl
repnz
cltd
fdivrl
jge
gs
xor
cltd
lock
addr16
movsb
call
pop
jb
repz
lods
mov
scas
push
out
inc
mov
mov
and
mov
xchg
popf
inc
inc
out
mov
jnp
inc
popa
push
cltd
or
push
jmp
lahf
fs
jle
pop
js
or
loope
xchg
scas
lods
mov
stc
push
stos
dec
xchg
jbe
popf
push
push
cli
mov
out
shll
rcrb
test
sub
xchg
dec
fdivrs
xchg
cmpsb
jmp
hlt
dec
js
mov
push
xor
cmp
stc
popa
lods
cs
sbb
pusha
dec
inc
mov
mov
gs
into
xchg
xorl
xchg
sbb
jl
test
imull
bound
pop
add
sub
jge
pop
fisttpll
movsb
mov
jl
add
pop
daa
mov
fistpl
lods
andb
inc
mov
outsl
lcall
les
xchg
mov
sub
jns
dec
jmp
adc
and
cwtl
outsl
and
sub
xchg
or
mov
inc
pop
inc
out
shll
pop
jbe
mov
arpl
mov
aad
in
lods
in
xchg
or
add
push
and
hlt
inc
out
mov
insl
and
mov
js
enter
sub
lods
orb
aam
fnstcw
xor
ds
xor
arpl
jae
ljmp
stos
fs
cltd
inc
data16
fdivl
and
fstl
es
mov
mov
mov
adc
repz
gs
mov
testb
sub
rclb
xchg
sub
jmp
mov
push
mov
movsl
repz
jb
inc
push
and
dec
sbb
mov
mov
jno
rcrb
sub
dec
jl
test
rcrb
stc
inc
adc
rorb
fwait
or
mov
xchg
jno
mov
sbb
push
ljmp
push
repnz
mov
les
loope
mov
sub
jle
hlt
adc
in
flds
hlt
sbb
xchg
dec
leave
add
roll
sub
push
jecxz
push
push
push
pop
jg
fnstenv
jno
test
mov
jl
insb
addl
in
lar
mov
lock
hlt
js
loope
sarb
add
mov
dec
ljmp
lds
push
lret
mov
test
add
stos
leave
imul
ret
jb
push
popa
fildll
xor
cmp
in
sbb
xlat
daa
cmc
mulb
ffree
outsb
jecxz
jmp
mov
scas
xor
movd
mov
fidivl
divb
or
ret
sbb
lahf
jl
jno
mov
xor
cmpsl
lcall
sub
adc
stos
fdivs
mov
mov
pusha
repnz
outsb
xchg
xchg
int
add
fwait
sbb
inc
xchg
cli
aaa
mov
das
movsl
cmp
lcall
xchg
leave
dec
adcb
movsl
mov
fcoms
ja
repnz
push
xchg
pop
test
cld
icebp
cmpsl
jl
repnz
fstps
popf
ja
mov
push
mov
arpl
movsl
cmp
inc
sub
xor
mov
mov
icebp
into
or
inc
movsl
pop
xor
dec
shlb
fisttps
cmpsb
cld
xor
pusha
cld
call
je
adc
stos
xchg
aam
aaa
fdivl
cmpsb
insb
pop
adc
and
into
dec
dec
add
in
sub
add
mov
cli
inc
dec
xchg
jecxz
xchg
xorb
repz
xor
ljmp
mov
sbb
imul
pop
in
jnp
adc
jecxz
sahf
faddp
jno
imul
mov
sub
stos
mov
mov
test
call
mov
loopne
and
outsb
dec
les
fwait
loope
push
inc
clc
gs
fistl
stc
mov
pop
xchg
jl
sub
fcoms
adc
and
cmp
jbe
mov
or
je
push
mov
jp
add
adc
push
orl
or
stos
xchg
cld
pop
mov
jl
mull
push
in
xchg
cltd
mov
sub
inc
dec
cmp
jmp
jecxz
test
repz
jmp
bound
cmp
lods
adc
mov
cmpsl
cmpsl
dec
mov
js
add
jle
loop
dec
fiadds
scas
mov
ds
push
cmp
repnz
mov
sar
cmpsl
aas
loope
mov
inc
lret
and
mov
loopne
pop
ljmp
xor
pop
xchg
add
in
cmp
xchg
arpl
lahf
hlt
addr16
jecxz
xorl
jmp
daa
push
sub
lods
jne
pushf
sarb
push
movsb
dec
cmp
or
adc
pop
cmc
rclb
mov
mov
sbb
stc
lds
jecxz
mov
ds
mov
test
sub
mov
bound
stos
mov
lods
hlt
adc
jmp
mov
divl
in
jge
push
icebp
movsb
sub
ljmp
mov
mov
loope
fs
cmc
clc
adc
inc
ficompl
fsubrl
rolb
movsl
mov
imul
or
jl
cmpl
and
mov
outsl
nop
jmp
xchg
cmpsl
mov
and
pop
aad
lock
fldlg2
cwtl
repz
addr16
inc
and
pop
mov
fiaddl
mov
test
cwtl
xor
hlt
out
and
mov
into
push
pop
and
mov
push
mov
test
and
push
sbb
lods
dec
jge
imul
and
sbbl
or
adc
mov
sbb
test
dec
test
iret
popa
std
fisubrs
and
rcpps
jecxz
dec
push
jmp
andw
pop
xchg
push
rcr
inc
dec
bound
mov
xor
add
pop
or
repz
jnp
jecxz
push
fisubl
mov
xchg
mov
cmp
and
aaa
push
movsl
pop
std
pop
orl
inc
js
test
call
roll
int3
sbb
out
pop
and
pop
xor
jno
xor
std
das
sub
lods
lock
cmp
mov
xor
mov
xorb
flds
cli
and
mov
adc
push
or
scas
js
lds
pop
insl
test
sbb
ljmp
mov
std
mov
mov
aam
mov
pushw
pop
jl
and
adc
popf
mov
loop
and
mov
mov
hlt
pop
aam
pop
pop
sbb
enter
mov
lea
in
push
inc
sbbl
sahf
imul
mov
outsb
mov
ljmp
cld
push
pop
mov
test
or
jnp
inc
das
push
pop
lds
mov
jg
in
pop
mov
testb
adcb
lock
repz
nop
rorl
pop
les
push
jle
bound
call
mov
ret
push
imul
mov
mov
sub
nop
mov
and
pop
sbb
or
cmp
call
sbb
icebp
popf
or
shl
inc
jns
mov
sub
add
and
xchg
cli
add
in
imul
jnp
lsl
mov
adc
lds
mov
mov
and
rorb
lds
loopne
iret
lahf
jmp
adc
xor
cli
testb
mov
cmp
lret
idivb
std
sbb
js
mov
jge
dec
imul
ret
xchg
cmpsb
cmc
loopne
movsl
iret
fsubrp
out
pop
inc
add
repz
cli
cmp
cmp
add
mov
sti
aam
xchg
cmp
pop
sahf
ja
or
cltd
lods
gs
and
jmp
iret
fstps
in
stos
sub
jg
cmpsb
testl
mov
inc
int
std
cmp
inc
mov
cmp
mov
pop
xchg
mov
xor
dec
sbb
shll
pop
ficomps
aas
pusha
mov
cmp
push
loope
les
jne
sbb
pop
shlb
int
push
dec
lret
out
pushl
adc
lahf
arpl
mov
dec
cmpsb
mov
xchg
sti
or
lret
shll
clc
stos
daa
mov
jg
mov
cmc
arpl
movsb
inc
cwtl
sti
rclb
fiadds
mov
or
and
pop
add
out
movsb
in
xorb
ds
call
mov
in
clc
mov
dec
jbe
popa
in
pop
jne
and
les
loope
shlb
and
adcl
sbb
sbb
andb
xchg
shl
push
mov
mov
or
jmp
stc
lahf
cmp
addr16
cmp
cmp
loop
lret
jae
std
mov
add
mov
and
daa
inc
or
add
cmpsl
xor
rcrl
loope
mov
stc
ljmp
jecxz
aam
mov
dec
or
or
popa
mov
and
hlt
push
arpl
stos
jns
jmp
xlat
jle
jge
arpl
faddl
mov
jge
rorb
add
fimuls
shlb
cmp
sub
push
out
cld
xor
rcrb
add
dec
mov
std
cmp
pop
pop
mov
pop
xchg
xor
int3
lods
pop
cmc
pop
push
subb
jne
pop
mov
mov
icebp
mov
adc
mov
push
sub
jnp
enter
je
sbb
mov
sbb
pop
push
cmp
push
pop
dec
sbb
int
push
dec
jmp
inc
mov
jno
cltd
sbb
roll
sub
xor
jmp
push
scas
jg
push
es
pop
mul
or
mov
sbb
or
pop
int3
enter
xor
fnstenv
mov
in
mov
mov
mov
pop
in
in
ljmp
in
and
notb
insb
lods
xchg
call
fimuls
fstps
les
fidivrl
aaa
and
test
lock
ret
lahf
sbbb
mov
lods
mov
sub
mov
imul
aaa
outsb
repz
pop
xchg
mov
push
xor
sub
lahf
cmp
mov
idivb
insl
das
mov
test
jmp
js
xchg
int3
call
inc
fs
sub
or
mov
adc
call
shll
jecxz
add
loope
jbe
ret
movsb
sub
fldenv
xchg
xchg
sahf
sbb
int
scas
cli
pop
sub
push
out
sbb
xlat
leave
mov
dec
xchg
rcr
or
movsb
js
or
or
sbb
mov
xor
pop
cld
jl
adc
arpl
mov
test
int3
push
cltd
es
sbb
add
adc
movsl
cld
es
cmp
lds
pop
push
pop
jmp
dec
aam
mov
mov
test
ss
mov
pop
mov
dec
jg
stos
bound
dec
in
fbstp
or
lret
push
cmp
roll
dec
repz
stos
int3
push
xchg
sbb
int3
ljmp
sbb
xchg
fs
dec
inc
incb
cld
cld
push
dec
dec
jnp
arpl
pop
xadd
in
int3
mov
sub
mov
and
jp
arpl
mov
mov
in
jl
jnp
inc
test
insl
jg
xchg
addr16
mov
nop
aas
mov
pop
cld
mov
xor
iret
stc
nop
into
dec
enter
jle
les
sub
rep
jne
xor
jmp
mov
mov
js
mov
or
mov
repz
in
adc
sub
inc
stos
insl
fsts
mov
cs
out
sub
repz
cmp
dec
jecxz
aas
push
jmp
mov
mov
push
cmp
jp
orl
test
inc
lret
je
push
insl
sbb
mov
test
loopne
mov
pusha
enter
movl
mov
jmp
inc
test
add
sub
gs
push
add
inc
xor
test
lahf
jnp
xor
aam
testb
or
pop
jp
arpl
lret
das
adc
sub
loopne
enter
lods
pop
xchg
push
mov
movsl
cmp
pop
inc
movsl
mov
xor
movsl
cmp
sahf
pop
pushf
and
dec
call
pop
outsb
dec
ljmp
adc
les
test
int
pop
aas
sti
inc
stos
mov
or
popa
popa
pop
packsswb
jne
cs
stc
push
xchg
adc
movsb
leave
pop
nop
push
test
inc
fadds
scas
adc
xchg
mov
sub
pop
sub
mov
inc
rol
insl
and
dec
test
xor
push
pop
mov
jmp
pop
nop
imul
xchg
out
lods
xchg
call
inc
pusha
add
int3
sub
sbb
push
jl
mov
ret
sar
jns
sbb
push
cltd
pop
cmc
dec
cmp
call
das
call
dec
rcrl
mov
xchg
mov
sub
adc
jecxz
cli
out
enter
cld
sub
mov
es
stos
mov
xor
dec
out
nop
je
push
jmp
push
movsb
mov
rorb
loop
or
mov
aaa
bound
cld
pop
dec
enter
aas
fmull
loope
into
jmp
int3
cmp
scas
das
mov
icebp
mov
icebp
scas
sub
insb
nop
mov
mov
and
std
imul
cmp
pop
out
imul
js
push
jle
pushf
arpl
cmp
push
inc
adc
insl
pop
adc
sbbl
lds
jmp
leave
push
pop
or
aas
incl
or
test
das
mov
or
testl
pop
sahf
mov
cmp
lock
pop
dec
add
mov
dec
popa
in
or
xor
fsub
adc
dec
jg
jnp
mov
cmp
mov
mov
jl
sub
sub
jnp
push
cmp
shlb
ljmp
ret
xlat
iret
cmc
mov
into
movsl
in
imul
add
leave
xchg
cwtl
stos
out
ss
fs
xor
mov
pop
add
shl
aaa
xor
notb
push
test
cmp
fsubs
pop
ja
inc
leave
in
jb
dec
fmul
shll
push
add
ret
cmp
mov
jne
mov
mov
mov
jge
test
popa
jns
mov
mov
push
and
add
pop
insb
mov
or
dec
lahf
and
nop
nop
jns
shl
cli
add
add
xchg
jmp
cli
mov
imul
and
std
out
lret
xor
repz
push
shlb
sbb
mov
hlt
mov
mov
aas
out
into
pop
mov
cmc
mov
ret
sti
xchg
in
cmp
imul
cmp
es
rcrl
adc
xchg
sbb
push
mov
in
movsl
rclb
or
push
int3
jmp
outsl
sbb
xchg
push
xchg
push
add
jmp
add
mov
sub
mov
lea
and
jp
rcl
imulb
xchg
mov
sbb
fucom
pushf
pop
xor
in
pop
dec
jl
adc
insl
std
mov
pop
popa
sahf
pop
inc
cltd
loop
repnz
dec
inc
frstor
hlt
andl
popf
sbb
mov
call
scas
divl
sub
outsl
mov
pop
pop
lea
shll
pop
gs
adc
mov
stos
or
test
xor
repnz
mov
or
sub
sub
gs
adc
es
cmp
divps
or
pop
js
dec
add
jg
adc
js
stos
fldcw
and
cltd
daa
mov
sub
sbb
jg
jg
or
dec
es
call
inc
mov
jmp
mov
jnp
jg
adc
or
out
das
mov
mov
push
movsb
es
lret
mov
pop
cmp
jmp
mov
push
sahf
imul
and
addr16
clc
jo
in
and
das
cmp
cmp
mov
insl
mov
cli
shl
mov
inc
lods
mov
pop
int
pusha
xchg
fstl
xor
sub
mov
hlt
mov
inc
adc
mov
les
xchg
fstp
and
push
push
adc
xor
mov
call
or
fstpl
inc
mov
mov
add
aad
inc
mov
inc
xchg
dec
sbb
mov
fildll
add
movsb
mov
xchg
je
mov
mov
dec
fmulp
xor
adc
mov
or
fcom
outsb
xchg
xchg
shlb
loopne
mov
xlat
mov
les
jo
shr
push
push
mov
ljmp
sbb
or
add
lds
jne
fadds
push
dec
mov
pop
into
vmwrite
mov
push
int
pop
mov
dec
cltd
adc
pop
sub
aaa
cli
or
push
push
iret
jp
jnp
pop
pop
movsl
inc
es
push
add
xchg
mov
stos
lock
xchg
sti
cli
dec
roll
add
in
outsl
push
js
sub
cmp
hlt
js
inc
or
sub
hlt
loop
ljmp
dec
lds
mov
jae
or
daa
arpl
ffreep
jge
and
dec
movsb
sbb
nop
jmp
inc
pop
scas
mov
jbe
pusha
dec
xchg
ja
stos
pop
add
and
jg
sub
movsb
roll
and
push
sti
adc
pop
stos
push
stos
and
aaa
inc
insl
pop
dec
fmuls
dec
popf
or
add
cs
adcb
mov
repnz
int
jne
imul
ds
push
rcl
stos
or
sbb
aaa
clc
cli
loope
lcall
popa
xchg
loop
pop
add
xchg
out
xchg
xchg
arpl
mov
inc
test
data16
insl
mov
or
test
push
call
ficompl
mov
popa
inc
out
cmp
int3
sbb
in
imul
sbb
fiaddl
adc
or
jnp
fmull
or
add
add
mov
cwtl
fdivrp
out
adc
sbb
mov
repnz
cmpsl
cmp
pop
inc
mov
sbb
lret
pop
into
movsl
rcrb
xchg
testb
mov
sbb
into
enter
sbb
rorl
repnz
shll
icebp
sub
mov
popa
inc
out
jmp
fmuls
mov
out
das
pop
adc
cli
push
cld
mov
mov
insb
dec
test
pop
and
decb
mov
pop
scas
es
orb
out
sahf
pop
movsb
sahf
in
jno
and
shrb
in
in
jo
fwait
dec
mov
and
xchg
and
mov
pop
repnz
pop
mov
push
dec
fisttpl
lods
enter
in
test
ss
and
outsb
cmp
in
scas
adc
nop
int3
jecxz
xor
out
notl
leave
shrb
inc
lret
jnp
insb
ja
dec
xchg
sbb
movsb
ljmp
aaa
push
jne
jno
mov
mov
inc
daa
pop
psubsw
cltd
mov
insl
scas
es
pushl
and
xchg
jmp
jle
dec
ss
stc
cli
sub
xor
xor
push
mov
dec
dec
push
lahf
es
stc
arpl
mov
out
add
inc
lahf
pop
cmp
pop
fnstcw
sbb
sbb
xchg
jbe
cmp
jp
in
adc
mulb
mov
xor
dec
xchg
jmp
cmpsl
mov
adc
mov
xchg
cltd
push
sub
pusha
mov
int
pop
sub
sbb
cmpsb
pop
cmp
imul
jbe
inc
movsb
fmull
jp
and
fisttps
jmp
imul
mov
les
clc
imul
or
push
xor
mov
mov
mov
shr
push
ds
mov
sbb
stc
xor
push
mov
ljmp
mov
xorb
inc
xor
mov
mov
out
inc
mov
pop
das
mov
scas
cmp
cmp
and
int3
push
mov
or
cmp
mov
jo
and
push
push
int
sub
mov
push
out
out
mov
or
jp
add
gs
pop
scas
sbb
mov
mov
lods
fsubrs
movsl
xor
fs
lock
in
pop
inc
dec
adc
fiadds
adc
js
mov
movsl
or
stos
lret
jnp
scas
pop
cmpsb
scas
jp
pushf
in
pop
imul
mov
daa
lock
xchg
ja
daa
jge
out
in
filds
mov
xchg
adc
inc
test
and
pop
test
sub
mov
fwait
or
jp
scas
add
ds
test
hlt
push
stos
insl
call
daa
ja
lahf
imul
test
adc
pop
jg
push
jmp
or
xor
addr16
lods
jbe
xor
cmp
jne
mov
das
push
mov
dec
fisttpll
cld
push
and
in
stos
jl
cld
addr16
fs
jmp
dec
xchg
iret
movsl
imul
mov
loopne
mov
enter
stos
mov
mov
sub
daa
cs
xor
es
dec
jg
call
popf
xor
pop
cltd
loopne
adc
in
pop
and
mov
lods
in
neg
adc
sbb
into
xchg
xchg
cltd
dec
in
iret
sub
sbb
or
jne
add
inc
fstl
xor
adc
mov
inc
mov
sahf
mov
or
push
sti
and
mov
jp
daa
addr16
je
roll
xorb
pop
cmp
mov
mov
test
out
push
inc
mov
fsub
movsl
adc
rolb
inc
cs
out
ficoms
sub
mov
loopne
mul
sub
pop
fistps
mov
scas
lret
adc
test
sub
loope
ja
and
into
jne
mov
sbb
dec
jecxz
mov
stc
divl
add
or
das
mov
sub
int
dec
ljmp
sub
jno
lret
sub
movsl
pop
add
add
fisubrl
push
vmovupd
and
xchg
pop
mov
jecxz
addb
sub
enter
popa
loopne
in
pop
into
rolb
jns
movsl
sub
adc
mov
mov
dec
aaa
js
sbb
inc
mov
out
out
out
rclb
add
iret
mov
data16
push
in
cld
or
or
mov
pop
and
and
ljmp
mov
std
jb
jmp
out
pop
mov
repz
lret
add
push
jo,pt
sub
sub
loope
inc
mov
imul
and
jb
sarb
add
mov
idiv
insb
and
movsb
call
cmpsl
or
push
shl
xor
add
fstps
cwtl
in
in
jae
xchg
dec
lock
or
mov
addr16
sarb
inc
aas
mov
xor
stc
push
sarb
push
ss
pop
jb
sbb
fs
out
mov
lods
pop
dec
inc
push
in
aaa
jge
inc
jno,pt
pop
test
cld
mov
sub
pop
xchg
insl
lahf
mov
adc
stos
lret
shl
add
mov
insl
repnz
sti
out
cmc
outsb
hlt
icebp
lret
ljmp
mov
fnstenv
jl
jne
push
xchg
inc
in
sarb
dec
in
loope
addr16
fwait
and
sbb
dec
or
xor
loop
mov
jbe
or
cs
pop
push
mov
ucomiss
xor
push
mov
jo
push
mov
repz
ret
bound
lods
dec
hlt
stos
mov
leave
cli
mov
es
subb
clc
push
jo
sbb
popa
mov
xchg
movsb
adc
push
jmp
stc
fsubrl
je
mov
mov
jl
mov
call
js
fsubl
or
and
or
inc
and
cmp
dec
fnstsw
in
and
jecxz
rclb
mov
aam
or
mov
mov
ss
lds
jns
mov
scas
mov
arpl
inc
pushf
std
arpl
les
rorb
in
dec
ja
sbb
and
sub
popa
sbb
sbb
stos
in
and
iret
addb
aad
xlat
lods
movsb
and
call
dec
push
std
xchg
adc
pop
xor
adcb
inc
sahf
jns
xchg
or
push
test
pop
inc
dec
pushl
mov
cmpsl
lods
mov
int3
xchg
add
fsubl
jo
mov
pop
call
clc
pop
es
or
cmp
repnz
aas
cltd
sub
rol
cmp
ret
call
pop
out
mov
and
fs
or
xchg
shl
nop
stos
fnstcw
sub
lahf
stc
push
shll
pusha
mov
setns
add
or
adcl
mov
mov
movsb
pop
movsl
inc
sahf
mov
loop
push
sub
pop
sub
in
imul
and
es
xorb
aas
mov
push
mov
push
mov
push
shlb
sbb
out
and
imul
mov
mov
in
pop
fistpll
lock
inc
pop
mov
lods
sbb
hlt
cmpsl
and
stc
call
jbe
sbb
stos
sub
mov
sbb
cmp
aaa
mov
imul
test
shrb
lcall
les
scas
mov
mov
add
push
pop
aas
aas
insb
or
pop
inc
loop
in
scas
mov
ljmp
sbb
into
mov
jbe
outsl
mov
cmp
pop
xor
mov
xor
inc
out
sub
mov
in
and
sti
mov
jle
gs
call
dec
push
mov
loope
pop
push
incl
ret
mov
jns
das
cmpsb
push
jle
cltd
in
in
mov
int3
mov
or
test
cmp
aas
lret
xchg
adc
pop
andl
push
xchg
in
jns
sub
stos
fwait
mov
inc
mov
jle
repnz
in
mov
inc
out
fildll
clc
adc
fs
mov
ret
mov
movsl
arpl
mov
enter
addr16
enter
out
fiaddl
adc
in
and
lock
jo
xor
cmp
and
adcb
lds
pop
pop
add
mov
fs
jge
cmpsb
mov
mov
mov
mov
test
sbb
sbb
sbb
enter
jnp
xchg
jae
mov
popf
scas
leave
fisubl
jp
xchg
pop
adcl
jne
mov
cwtl
rcr
sub
in
mov
arpl
fxtract
notb
cmp
popf
mov
xor
and
xor
fcmovne
and
mov
data16
push
adc
in
xor
mov
mov
scas
mov
cmp
je
mov
aas
gs
mov
add
pop
test
mov
fs
fcmovbe
adc
jae
jp
daa
movsl
mov
in
in
dec
iret
hlt
icebp
cmp
loope
je
pop
or
push
andl
cmc
cmpsl
aaa
pushf
push
pop
push
dec
mov
cmp
cmpsl
ja
cmp
fstps
int3
fisttpl
std
and
mov
mov
fbld
test
lods
imul
push
cmp
mov
mov
daa
mov
sub
and
mov
lcall
push
int
insb
arpl
xor
inc
negb
test
cmc
xchg
insl
jmp
loope
mov
aaa
sub
lods
sti
push
sub
add
in
cmpsb
dec
pop
mov
popa
cmpl
insb
clc
iret
jae
push
fs
sub
ja
fdivr
insl
fwait
push
ljmp
jecxz
xlat
cmp
mov
mov
dec
test
sbb
mov
incl
data16
sub
push
cmp
and
les
std
icebp
fcomps
pop
loope
icebp
into
fs
scas
lea
shr
cmp
insb
mov
nop
fucomi
orb
dec
or
dec
fbstp
fdivs
dec
mov
jl
and
imul
cmp
test
cmpsb
mov
mov
cli
cmp
jbe
mov
xchg
adc
mov
lcall
adc
mov
loopne
jp
inc
xor
aam
pop
daa
in
pop
xlat
fstpl
xchg
or
imul
aaa
cmc
int3
fs
testl
fsubrs
leave
popf
jg
mov
xchg
cmpsb
or
adc
push
cs
mov
nop
stc
mov
and
pop
add
or
int3
push
jb
jnp
test
pushf
das
xor
fisttps
les
push
mov
test
jmp
in
icebp
inc
push
mov
mov
push
fnstcw
jmp
sahf
xor
mov
cmc
lds
xchg
adc
pop
aaa
or
clc
pop
inc
in
mov
rcll
cwtl
icebp
jno
xor
pop
xor
jnp
xor
dec
stc
adc
fstps
das
enter
loop
mov
adc
int
mov
mov
out
inc
repz
and
fwait
xchg
ss
push
pop
stos
jns
xchg
test
mov
cltd
loop
xchg
imul
fmull
ret
or
add
in
fdiv
mov
pusha
aam
lcall
icebp
cmp
fildl
or
mov
pushf
mov
inc
inc
push
sub
mov
sub
add
cli
in
xchg
les
dec
xor
mov
inc
sbb
or
sbb
mov
push
test
jb
jbe
pusha
or
ds
lret
inc
add
sbb
sub
cld
xchg
out
add
xor
subl
mov
xchg
in
out
idivb
add
and
sub
mov
mov
fsub
mov
sbb
out
imul
and
adc
js
int
das
cmpsl
jo
outsb
cltd
or
xor
push
or
divb
cmp
shr
adc
insb
push
jbe
adc
hlt
adc
push
or
js
fdivrp
mov
shll
loope
or
imul
mov
scas
das
and
xor
xchg
aas
jne
nop
fstpt
sbb
scas
pusha
cmp
test
scas
bnd
add
in
mov
add
mov
lret
push
mov
and
out
and
push
cli
push
ss
mov
dec
push
call
call
hlt
fists
push
mov
ret
push
imul
fs
cmp
inc
mov
lcall
scas
imul
cltd
ljmp
jno
lcall
aad
and
xor
stos
pop
repz
lods
test
ja
push
mov
mov
insb
or
pop
leave
adc
jg
inc
sub
je
push
and
xor
popf
jns
lret
rorb
or
lahf
jno
leave
ret
sbb
jbe
addl
xor
or
and
jl
mov
test
cmp
cmpsb
das
in
fcomps
xor
fmulp
mov
sbb
jg
push
xor
inc
bnd
mov
push
fistl
pop
inc
mov
inc
add
in
ja
or
lret
jecxz
pop
pushf
loop
inc
add
mov
lods
cmp
out
lea
pop
movsb
call
sub
push
hlt
fmul
mov
push
out
hlt
pop
xchg
cli
call
fwait
pop
jbe
xor
cmc
dec
roll
xor
pop
dec
mov
cld
dec
fwait
shll
pop
out
cmp
scas
mov
lods
hlt
add
adc
pop
cwtl
pop
or
imul
pusha
clc
lods
cmp
jecxz
loope
pop
iret
xlat
test
lret
push
mov
jmp
jbe
and
mov
mov
lahf
dec
repnz
push
dec
jne,pt
or
daa
cmp
jmp
and
add
sarb
mov
pushf
mov
mov
ret
test
lock
repnz
dec
jae
mov
cmp
lcall
mov
push
add
out
and
and
pop
dec
out
cwtl
ja
ja
loop
gs
cmc
cs
mov
popf
leave
test
mov
mov
divb
loope
sub
cmp
xchg
loopne
ss
mov
call
incl
lods
inc
sbb
outsb
sahf
je
sbb
push
fldl
add
je
cmp
int3
adc
movsl
movsb
ficoml
movsb
mov
shrl
mov
and
les
mov
xor
test
iret
xchg
ret
xchg
les
fistpll
xchg
lret
testb
loopne
imul
dec
cmp
nop
daa
mov
jecxz
in
movsb
and
mov
lds
mov
hlt
jbe
jo
andb
mov
xchg
lret
aam
xchg
subl
call
mov
fcmovnu
not
and
inc
mov
rclb
lock
cmp
sbb
xchg
cs
sub
stos
pop
sbb
push
inc
dec
sbb
fstl
movsb
and
out
sti
psllw
or
push
enter
test
cmp
movsb
and
fwait
adc
sbb
jmp
andl
jle
shrl
xchg
dec
jmp
dec
movsb
cmp
push
icebp
pop
push
movsl
icebp
stos
cmp
mov
ret
cmp
shll
lods
in
repnz
push
adc
xchg
xchg
cmc
inc
push
or
xorb
pop
out
test
lods
stos
xor
push
shll
scas
mov
mov
out
fsubp
sbb
and
decl
jecxz
sub
iret
sbb
push
addr16
aam
pop
push
out
lods
jnp
stos
in
xchg
mov
dec
xor
jno
inc
jecxz
stc
popa
xchg
imul
repz
pop
adcl
jns
ret
pop
pop
sbb
lahf
sbb
jae
cmp
sti
add
std
pop
inc
jg
lret
mov
push
cmpsb
mov
sti
or
pop
out
inc
aam
cmc
push
outsb
ret
mov
outsl
sub
push
inc
mov
lret
idivl
idiv
xchg
xor
mov
out
dec
shll
lret
pop
test
adc
es
repz
xchg
in
lock
inc
test
cmc
adc
cs
stos
sbbl
shrl
and
call
inc
lret
add
shrb
push
test
push
fidivs
dec
mov
push
scas
add
mov
andb
in
stc
pop
in
jecxz
inc
addb
dec
lods
sarl
fisttpll
xchg
mov
dec
js
nop
cs
mov
repz
inc
xchg
scas
pop
jno
in
inc
iret
adc
cmp
inc
sub
aas
xor
scas
nop
cli
and
jb
lcall
and
js
insl
sbbl
mov
dec
pushf
stos
mov
mov
hlt
jnp
lahf
dec
and
jge
iret
outsb
loope
jle
mov
fsubrs
frstor
push
xor
cwtl
cmpsb
push
cli
and
jnp
das
insb
stc
mov
lret
leave
testb
insb
outsl
fs
lds
les
in
repz
push
insl
push
loopne
adc
lds
mov
test
add
incb
mov
fists
out
sarb
out
add
mov
pushf
test
in
xchg
lock
mov
add
jb
cwtl
sbb
adc
call
ss
fadd
xor
or
pushf
lea
repnz
mov
cmc
pusha
es
pop
insl
jecxz
xor
or
jl
mov
mov
cmc
or
loopne
xor
js
dec
mov
inc
or
loopne
jmp
out
rolb
push
inc
mov
mov
dec
jns
jne
mov
lds
sbb
gs
insl
fidivs
adc
pop
dec
cmc
adc
out
push
and
mov
push
and
ja
xchg
pop
filds
lret
andl
mov
mov
sbb
in
cwtl
addl
lahf
pushf
adc
enter
push
inc
mov
movsb
dec
aad
xor
mov
outsb
sbb
ret
scas
es
lock
imul
sbb
imul
mov
test
ss
cmp
mov
shrl
shll
out
cmp
stos
cmpsl
ret
addr16
fldenv
adc
adc
mov
ret
mov
das
cld
fbld
call
mov
sbb
jns
int3
push
lods
or
std
or
test
cli
decb
ljmp
in
add
xor
xchg
inc
jbe
mov
aad
mov
imul
add
syscall
movsl
jmp
arpl
cltd
ret
outsl
jns
es
adc
lret
mulb
out
in
cmp
loop
bound
jno
aaa
inc
mov
nop
sbb
ss
mov
mov
inc
xor
cmpsl
push
sti
pop
cmp
cmp
fcompl
mov
leave
out
cmpl
int
cmp
mov
sub
or
xor
dec
adc
roll
push
cltd
sbb
adc
je
fildll
jne
push
mov
pop
outsl
out
loop
fisubs
mov
rol
sub
mov
and
push
ret
fiaddl
mov
inc
pop
ret
sbb
mov
in
mov
inc
jae
daa
negl
incb
push
gs
inc
push
iret
in
inc
dec
mov
xchg
cmp
sahf
sbb
leave
xchg
push
movsl
lods
popf
push
and
in
mov
pop
lods
lcall
sbb
sbb
inc
in
stc
jmp
fwait
inc
in
movsl
cmpsl
fcomi
sub
cmp
imul
scas
adc
sti
pop
xchg
xor
push
cwtl
jo
cmp
test
ret
aam
adc
push
push
jne
mov
or
mov
cmpsb
adc
xor
adc
shlb
sbb
icebp
and
into
add
test
popa
adc
adc
movsb
adc
cmp
xchg
push
push
mov
xchg
movsb
aam
jae
and
cmpsl
adc
icebp
push
push
movsl
int3
cmp
hlt
adcl
rolb
ss
inc
dec
sub
gs
mov
mov
popa
xchg
mov
bnd
inc
cmp
push
adc
jno
imul
adc
sbb
xlat
jb
je
dec
inc
cltd
std
jle
pusha
xor
xor
outsb
push
push
cmp
and
movsb
or
add
outsl
call
jmp
sub
xchg
cwtd
lock
dec
fldl
xchg
jmp
push
add
daa
pop
call
mov
rol
jecxz
sbb
xor
xor
xor
mov
dec
mov
or
push
dec
sbb
mov
out
stc
pavgw
jg
loop
adc
imul
inc
inc
and
cld
loop
fwait
enter
or
push
mov
xchg
sub
push
fistpll
pop
add
in
pop
pushl
aas
hlt
add
sbb
jge
out
jp
push
shll
mov
mov
add
and
scas
aam
int
adcl
into
std
cmpsl
dec
mov
mov
fwait
inc
dec
cli
and
test
mov
test
cmp
repz
inc
mov
test
add
push
push
popf
test
sbb
jg
popa
subl
sbb
call
sbb
jg
outsl
mov
mov
jno
paddw
mov
and
or
jns
mov
and
xor
fidivl
inc
cmp
and
sub
sbb
pop
sbb
jne
push
leave
xorb
in
adc
es
pop
daa
jno
ss
mov
mov
mov
pop
in
mov
in
mov
insl
cmp
ja
dec
lock
push
stc
cld
jbe
aam
ds
jle
dec
lea
and
lock
js
movsb
xchg
inc
or
test
notl
inc
push
dec
push
sub
mov
insl
popf
jnp
jb
jno
or
cmc
mov
aad
mov
je
inc
out
ja
sub
std
cmpsl
popa
stos
and
jge
cmp
mov
sbb
mov
pop
in
mov
mov
out
dec
mov
mul
sub
adc
mov
xchg
nop
cltd
into
mov
mov
adc
subl
stos
in
add
popf
pushf
data16
xchg
mov
sbb
add
hlt
dec
pusha
das
repnz
test
sbb
into
mov
in
pop
fdiv
clc
mov
out
dec
icebp
add
jl
mov
dec
or
movsb
lods
ljmp
jmp
cmp
mov
mov
psraw
rcl
mov
and
outsl
clc
cli
mov
jo
jo
mov
call
and
or
jmp
push
mov
cmpsb
push
mov
stc
and
mov
mov
jo
fcoml
in
add
cmp
inc
dec
dec
jmp
das
push
sbb
ret
push
and
add
push
mov
test
jno
mov
mov
lock
and
lock
les
mov
ja
sub
cmp
or
or
rolb
pop
adc
sarb
loope
bound
int
pop
add
mov
dec
cmp
mov
imul
incb
test
outsl
mov
sbb
add
cwtl
dec
sbb
test
fidivrl
adcl
aad
or
push
or
stos
xchg
dec
xor
inc
pop
pmaddwd
sub
mov
mov
test
mov
or
xchg
mov
data16
fidivs
cli
pop
jp
pop
test
cmc
jb
scas
sub
hlt
mov
adc
gs
in
ss
inc
ret
clc
jmp
jae
or
xchg
repz
and
xor
orb
or
and
push
ficoms
lahf
cmp
mov
xbegin
inc
test
sahf
cmp
in
int
in
sub
cmp
cltd
cmpsb
movsl
mov
dec
mov
in
mov
mov
es
or
jne
test
pop
add
loopne
les
and
and
dec
sub
sbb
adc
mov
aam
mov
push
or
bound
jo
js
ja
sub
movsb
js
fisttps
sbb
fwait
mov
je
andb
lcall
cmpsl
fs
fcomps
imul
xchg
pop
ret
pop
pop
jno
leave
jp
mov
ret
out
xchg
iret
mov
stos
enter
ja
jns
mov
rcl
mov
jbe
sbb
repnz
out
aaa
inc
push
sbb
or
jmp
dec
xor
mov
xchg
stc
cmp
mov
adc
pfmul
fdivl
repz
mov
or
xchg
inc
xchg
pop
jns
xor
jbe
test
std
out
mov
bound
hlt
das
mov
rolb
mov
dec
out
xor
mov
ffree
xlat
mov
cmp
xor
add
and
dec
fdivrl
lcall
fidivrs
mulb
mov
xor
cmp
xor
dec
lock
mov
xchg
mov
fidivrl
push
adc
cwtl
cs
subl
test
sbb
add
or
daa
in
adc
xchg
and
daa
or
pop
loope
xchg
lea
sub
cmp
sub
inc
jb
ret
mov
rclb
add
stos
sbb
xor
imull
insl
ja
push
bound
add
sti
jg
sbb
shrb
inc
stos
enter
inc
push
js
pop
mov
adc
mov
scas
push
pop
dec
aaa
pop
add
inc
adc
adc
mov
imul
sahf
nopl
leave
pop
dec
mov
push
sarl
add
lods
or
adc
lcall
rcrb
jno
movsl
jbe
cmpsb
in
sbb
imul
mov
push
pop
arpl
sub
xchg
repnz
xor
ja
faddp
call
pop
mov
andb
push
bound
insb
sbb
sub
xor
loope
sti
ds
xchg
cmc
xchg
int
ss
daa
sub
in
lret
negb
adc
and
mov
lea
cmp
push
mov
lds
aas
mov
mov
pop
stc
and
vaddsd
sbb
pushf
shrl
mov
and
loope
negb
mov
inc
out
or
add
mov
leave
jecxz
xchg
sbb
jae
sub
mov
cmp
sbb
mov
sahf
jmp
push
push
or
dec
mov
sbb
in
loope
cmp
hlt
dec
xor
cmc
adc
cmpsb
push
mov
cmpsb
ljmp
addr16
and
and
fnstcw
or
mov
fsubs
jne
fcmovnbe
sub
xchg
ret
lock
push
rcll
jno
insb
mov
shll
shl
lret
mov
cmp
notl
cmpsl
nop
adc
xor
lret
jmp
arpl
add
mov
xchg
add
sbb
movsb
cld
imul
adc
mov
lret
iret
jae
xor
into
xchg
xor
cmpsl
jp
je
lahf
aad
mov
cmp
ja
add
adc
dec
and
sbb
mov
mov
cmc
mov
jge
out
ljmp
inc
or
xchg
mov
rcrb
lahf
test
cmc
ret
inc
pop
scas
popf
inc
inc
push
xchg
push
jge
data16
adc
outsb
sub
ret
cltd
ss
mov
pusha
cld
mov
enter
xchg
mov
sahf
or
mov
imul
jp
pop
arpl
repnz
sbb
push
in
dec
les
mov
xchg
add
inc
mov
push
gs
push
mov
cmp
mov
jo
in
mov
xor
xchg
icebp
lcall
pop
xchg
lods
xchg
xor
fmull
inc
pusha
xor
mov
loopne
movsl
xchg
cwtl
subl
fmull
ljmp
sbb
ret
hlt
adc
pop
mov
sbb
push
stc
mov
xchg
fisttpl
xchg
dec
aas
mov
sti
mov
jnp
lods
divb
push
lahf
adc
or
cmp
enter
cmc
cmc
pusha
in
aad
cmpsl
ljmp
push
push
sbb
pop
mov
icebp
sbb
push
lods
adc
call
fnstcw
xor
push
jbe
and
pop
cltd
jmp
sbb
or
stc
mov
in
stc
xchg
mov
xchg
lcall
das
push
adc
lock
lcall
mov
sub
jo
push
cmp
hlt
fidivl
push
mov
fwait
jo
rol
daa
out
mov
in
gs
repz
fldenv
and
into
add
es
or
ret
ret
sahf
sub
xor
sbb
lds
xor
dec
or
pop
push
sub
sub
out
sti
movsl
lods
push
mov
ljmp
enter
inc
fwait
mov
sub
adc
or
sub
out
push
jno
mov
jns
and
adcl
dec
adc
xor
cmp
xchg
loop
fistpl
mov
mov
test
rorb
dec
cmp
cmp
addr16
lods
cmc
stos
in
fnsave
enter
addr16
enter
popf
cmp
icebp
mov
and
jno
cli
pop
pop
jecxz
inc
mov
xor
or
add
xchg
cmpsl
push
mov
dec
movsb
mov
leave
jne
icebp
rorl
xchg
push
xor
lods
imul
sub
leave
pop
aaa
add
movsl
adc
loop
pop
push
inc
pusha
lods
xchg
mov
int3
mov
out
nop
cmp
mov
jp
xchg
jmp
and
xor
js
cmp
pop
inc
sub
jns
xchg
pushf
orb
adcl
cmp
jno
xchg
call
pusha
out
rcrl
mov
out
adc
and
rorb
xchg
push
scas
mov
xchg
int
pusha
insb
daa
push
addr16
jno
movsb
sahf
movsl
mov
cmp
xorl
or
push
jecxz
test
jmp
cmp
in
aad
rcrb
cmpsl
inc
mov
or
mov
mov
test
clc
imul
inc
jns
and
mov
mov
roll
push
mov
and
fisubrs
mov
ret
pop
imul
xchg
jnp
mov
xor
cmp
cwtl
mov
hlt
xchg
mov
idivb
xchg
cmp
leave
fcompl
xor
mov
retw
cmp
call
aas
and
mov
subl
jle
pop
sub
mov
or
out
cmp
xor
sub
pop
push
fs
call
cs
xor
cmp
sbb
stos
cmp
jno
and
lock
mov
out
call
sub
mov
inc
jb
mov
cmpsl
inc
mov
stos
add
repz
cmpsl
mov
fidivrl
test
mov
les
adc
repnz
shl
mov
int3
lcall
test
loope
std
rcr
pop
adcb
inc
roll
imul
std
fistpll
or
sub
cmp
pushf
or
cmp
daa
in
mov
mov
or
jmp
lahf
scas
pop
xorl
cmpsb
mov
bound
pop
pop
push
int3
push
inc
sbb
mov
mov
add
jecxz
mov
mov
pop
mov
dec
aam
aaa
push
inc
loop
repz
mov
add
imul
test
sub
xor
rcrb
fdivrs
fidivrl
in
scas
and
movsl
pop
jp
loope
arpl
mov
mov
adc
rcl
mov
mov
pop
and
int
xchg
jnp
movsb
jp
xchg
dec
loopne
sbb
loop
mov
mov
mov
je
fdivrs
dec
jnp,pn
inc
push
pop
aam
icebp
sahf
mov
dec
push
decb
stos
xsaves
adc
cli
pop
ja
cmp
xor
cmp
scas
xor
cmp
cs
int
pop
ja
cs
scas
lock
adcl
dec
popa
mov
xchg
or
xchg
mov
loope
xchg
pop
lds
sbb
sti
mov
mov
xchg
aas
fbstp
lret
cwtl
inc
mov
pushf
mov
xor
int
pop
lds
mov
inc
lret
fdiv
mov
xchg
inc
xor
mov
nop
aad
sbb
inc
fwait
insb
fdivr
push
push
mov
pushf
xchg
inc
xchg
call
rcrb
cwtl
mov
cld
cmp
cs
mov
push
mov
xchg
mov
call
cmp
insb
add
das
mov
icebp
hlt
scas
in
ret
and
mov
inc
loop
xor
inc
inc
cld
scas
test
loope
dec
or
out
and
jno
rol
loop
mov
inc
nop
xor
jno
inc
ljmp
jg
mov
leave
lea
mov
cmp
dec
adc
data16
cmp
xchg
lods
inc
push
add
xchg
xor
jg
insl
rcl
cwtl
idivb
pop
push
cmp
mov
mov
out
test
mov
mov
rclb
sbb
mov
lcall
in
inc
mov
cs
xchg
mov
out
fistl
mov
lea
scas
jns
mov
push
arpl
push
xchg
mov
out
mov
xchg
in
jle
lret
nop
cmp
add
in
mov
loop
xchg
ljmp
ret
fcom
aas
mov
clc
mov
mov
fs
ficoms
push
je
repnz
mov
pop
adc
repz
pop
jge
jno
shlb
push
push
ljmp
aam
sbb
jb
jge
repnz
mov
ds
push
cmp
loope
popf
cmpsl
inc
testb
cmp
cmc
cmpsl
mov
mov
cld
mov
mov
lods
dec
and
push
or
dec
lcall
inc
mov
mov
xchg
mov
rcl
dec
and
inc
pusha
popa
and
push
mov
sbb
jl
test
lahf
outsl
inc
sbb
add
das
or
js
mov
in
cld
adc
outsl
cmp
xchg
repz
mov
pop
lahf
flds
add
xorb
movsl
clc
repnz
mov
jmp
xchg
ffreep
jg
xor
pop
cmp
rcrl
dec
outsl
movsl
inc
jae
mov
inc
pop
push
xchg
inc
xchg
mov
push
dec
push
xchg
or
mov
fistl
xor
xchg
jge
mov
cmp
scas
xchg
adc
xchg
lcall
fistpll
xchg
int
loope
movsb
fs
test
pop
cmc
sbb
sbb
jle
test
leave
pop
mov
aaa
pop
cmpsl
je
xchg
xor
pop
and
jns
cmc
jne
mov
gs
cmp
in
jmp
lock
cmpsl
mov
adc
sub
adc
stos
push
push
xchg
xor
out
data16
inc
popa
popa
aaa
push
ss
pop
aas
push
icebp
bound
cmp
stc
fbld
je
test
test
and
aad
insb
mov
mov
ljmp
scas
lds
cmc
dec
cli
lock
mov
jne
lcall
outsb
pop
popf
ret
test
sbb
mov
ret
movsb
xchg
xchg
pop
push
imul
push
mov
aam
cmp
xlat
sub
push
jbe
in
add
clc
jb
push
mov
mov
lock
cmp
lock
mov
stc
xor
ret
mov
les
cmc
aam
mov
sbb
add
mov
mov
je
push
add
popa
cmc
je
mov
add
pop
add
popf
push
sub
xor
stc
mov
lods
mov
ja
inc
pop
outsb
cmp
aaa
mov
xchg
daa
cmpsb
jmp
xchg
std
mov
xchg
mov
mov
jb
jb
jp
fsts
lods
push
repz
dec
cld
enter
cltd
inc
sbb
pushl
insb
inc
nop
ret
sub
call
fmulp
pusha
push
push
jp
mov
lahf
or
scas
and
and
and
in
and
maxps
in
lret
dec
ret
mulb
ljmp
adcb
mov
and
and
sbb
cmp
cltd
icebp
pushf
jbe
mov
test
daa
pushf
je
jb
imul
dec
mov
mov
inc
and
inc
out
fnstcw
jl
jmp
insb
mov
xor
out
jb
xor
xlat
fmulp
push
add
lds
shll
test
imul
or
je
xor
push
cmc
and
arpl
inc
sbb
repnz
mov
and
scas
adc
adc
xchg
add
cmp
mov
mov
das
push
cmpsl
sbb
xchg
add
mov
pop
bound
jne
repz
cmp
xor
fdivr
mov
lcall
rolb
add
or
lret
xor
lods
int3
aam
fdivl
dec
cltd
cmpsb
mov
jp
inc
add
addr16
jmp
cltd
mov
and
insl
jl
jl
lea
push
ds
pop
sbb
test
push
sti
fcom
mul
testl
adc
cmp
push
repz
neg
fsubrl
leave
fs
or
fucomp
inc
push
sub
adc
jl
cmp
or
pop
adc
mov
aam
jecxz
xor
ret
repnz
fistpll
jge
out
or
pop
js
sbb
shll
in
mov
adc
xchg
sub
imul
enter
bound
mov
pop
sbb
ret
mov
out
cmc
mov
cs
push
jnp
inc
notl
pop
cli
dec
movsb
movsl
scas
jne
mov
xchg
outsb
arpl
dec
jg
sbb
sbb
xchg
popf
in
sbb
subl
jne
fdiv
jecxz
pop
add
xor
cmc
cmp
jbe
and
xchg
es
cld
fidivl
sub
cwtl
xchg
cmp
iret
stos
sbbl
jge
mov
pop
aas
js
out
cmpsb
dec
out
pop
out
adc
cmp
clc
and
fs
movsb
sub
scas
mov
inc
adc
push
xor
rolb
jo
pop
dec
imul
cmp
mov
fdiv
aam
mov
cmp
cmpsb
jecxz
popa
adc
call
add
mov
jb
dec
adc
sbb
ds
test
and
pop
ds
lea
stc
mov
adc
adcl
push
call
xchg
sbb
pop
fildl
cmp
cli
clc
in
sub
sub
mov
adc
fwait
addl
mov
idivl
sbb
jg
mov
and
testb
stc
dec
into
jae
mov
jp
cmp
imul
cmpsl
jnp
xor
lods
pop
pop
push
jbe
adc
mov
dec
ret
out
xchg
pop
add
mov
decb
addr16
jmp
insl
idivl
push
loop
shlb
in
sbb
gs
insl
es
ds
mov
mov
in
test
ja
in
pop
in
imul
and
dec
bound
inc
jmp
lcall
fnsave
inc
pop
bsr
jnp
or
adc
pop
mov
and
inc
cmp
xchg
arpl
dec
sub
divl
outsb
popa
xchg
leave
stos
lock
lods
ret
xor
mov
mov
cmp
mov
xchg
pop
sahf
fisttps
sbb
fldcw
sub
mov
push
ljmp
cmp
sbbb
fcom
ds
jl
pop
aaa
movaps
shl
adc
mov
pop
mov
out
sarb
mov
mov
shlb
mov
or
and
xchg
lock
and
mov
jo
xor
xchg
push
mov
cmpl
into
les
push
std
push
jmp
xchg
or
lock
js
in
pop
ds
adc
jo
jbe
jo
dec
cltd
scas
cmpsl
fmull
cs
jnp
hlt
pop
mov
es
mov
adc
xchg
pop
jne
sub
icebp
mov
cmpsb
push
xchg
stos
arpl
fdivs
add
mov
fwait
mov
out
cmp
mov
jl
adc
je
sahf
sub
imul
insb
aad
inc
or
in
mov
stc
xchg
dec
cs
jno
dec
xor
xchg
xchg
mov
xchg
cmp
test
pop
ss
mov
xchg
mov
xor
popa
and
int
jb
repnz
sbb
or
xor
popa
dec
push
sub
xor
pop
lret
mov
mov
adc
fimuls
inc
and
pop
adc
lret
jns
test
adc
cltd
fs
mov
xchg
adc
out
sub
jo
js
enter
push
push
sub
aas
fnstcw
push
dec
sbb
add
sub
pop
shlb
mov
js
out
frstor
sbb
jle
inc
jns
fistl
xchg
loope
movsl
mov
pop
mov
cmc
pop
outsb
xchg
cwtl
fld1
mov
loope
push
and
push
stos
sbb
cwtl
jo
int
out
xor
sub
lret
ds
loope
add
imul
cld
mov
mov
fbld
sub
cmp
es
or
popaw
ja
pop
mov
pop
insl
jle
mov
roll
test
sub
or
and
mov
shld
inc
push
cmpsb
mov
xor
mov
aas
lahf
or
jne
sbb
mov
sub
into
adc
movsl
cmp
push
mov
in
lcall
cltd
stos
jle
mov
pop
mov
gs
leave
movsb
mov
pop
mov
sbb
aam
sub
filds
repz
sub
jl
imul
ljmp
dec
movsl
mov
xor
adc
mov
sbb
lock
sbb
decb
mov
inc
shl
sti
lods
dec
loope
mov
mov
cli
jb
cld
inc
and
and
loope
xchg
jo
mov
imul
loop
int
and
js
icebp
jnp
cmp
adcb
int3
fidivrl
insl
jns
inc
inc
sub
and
cltd
cmc
mov
popa
orb
inc
sub
stc
movsl
leave
mov
aas
adc
aad
push
movsb
idivb
adc
lret
xchg
xor
sub
mov
je
lods
and
jo
or
sub
mov
pop
lock
roll
out
test
sbb
out
iret
repnz
fs
xor
inc
cmc
mov
mov
xor
push
cmp
pop
aaa
addr16
je
lds
push
mov
lock
cmpsb
add
data16
std
push
aam
mov
std
mov
jle
mov
ds
shlb
cs
fdivrl
cmp
cwtl
popf
popf
adc
mov
jns
lods
mov
adc
scas
andl
xor
mov
or
lods
inc
or
or
push
mov
jmp
adc
add
outsl
clc
mov
pop
ja
pop
out
ss
ja
xor
roll
mov
int
push
orb
pop
loop
ss
cli
cwtl
and
clc
repnz
sti
lea
push
push
stos
call
sub
jo
negl
fsubrl
adc
xchg
mov
fnstcw
push
adc
sub
sbb
push
push
jb
dec
mov
inc
std
xor
and
mov
inc
xchg
and
into
cmp
jo
pusha
cmc
pop
std
cmp
dec
sub
pop
mov
and
test
fdivl
cmp
mov
mov
test
ficoms
dec
mov
inc
mov
push
mov
mov
inc
mov
in
jp
pop
and
pop
outsl
mov
daa
push
sub
data16
or
or
xbegin
jo
jbe
lret
jmp
out
xor
mov
jno
lcall
xor
es
pop
lods
loop
aaa
mov
mov
into
jmp
mov
xor
fwait
cmp
repnz
sbb
fdivr
mov
cmp
pushf
mov
push
cwtl
jmp
mov
inc
scas
imul
out
add
xor
inc
cmpsb
mov
ret
fists
hlt
jne
daa
out
push
lcall
push
dec
xorb
test
dec
mov
std
push
adc
push
cpuid
add
rep
jno
cmp
test
pop
aad
les
jge
int3
pop
cmp
pop
cmpsl
loop
mov
rol
sbb
ja
cmpsl
pop
xchg
dec
aas
fildll
pop
hlt
jne
and
or
mov
and
mov
jecxz
cmp
mov
rclb
jmp
int
cwtl
stos
mov
bnd
fidivrl
pop
sub
jecxz
ficoms
xchg
mov
fistl
les
dec
push
dec
shrl
sbb
test
push
sub
and
rorb
stos
pop
ljmp
mov
add
idivb
add
mov
roll
cmp
imul
jo
jne
mov
gs
subb
xor
or
out
fiadds
aas
adc
outsl
in
mov
rorb
scas
sbb
sub
pop
dec
xchg
loopne
sahf
aas
fsub
sbb
or
loope
sub
add
inc
fstps
mov
sub
xchg
out
nop
adc
dec
dec
ds
arpl
jbe
pushf
sub
ret
mov
pop
mov
fprem
xchg
pop
fst
cmp
lret
mov
mov
push
mov
mov
xchg
jnp
adc
loope
jo
xchg
cmp
testl
mov
mov
fcmovnu
mov
mov
lret
lahf
mov
mov
hlt
fucomi
and
test
xchg
dec
xchg
sbbl
scas
sbb
ds
mov
lock
jmp
mov
mov
scas
xchg
or
rcll
loope
lret
add
lcall
mov
cmpb
addr16
push
jb
stos
repnz
xchg
xchg
jle
test
ss
and
mov
add
or
cs
cmp
outsl
pusha
dec
imull
inc
sub
sub
and
xor
leave
sbbl
rclb
lods
jge
dec
jle
mov
mov
pop
scas
es
mov
ja
hlt
loopne
jl
inc
scas
cwtl
in
xchg
mov
rol
jbe
pop
in
scas
pop
cmpsl
lods
outsl
bound
cmc
add
jb
mov
jnp
repz
adc
fiadds
cmc
es
pop
push
and
lock
data16
pop
lds
in
sub
pop
and
movsb
lahf
fidivl
stos
fcmovnu
imul
mov
push
mov
add
mov
mov
outsl
scas
push
lcall
andb
out
and
in
inc
aas
cmpsl
fwait
mov
mov
push
dec
aas
add
fstpl
fcomps
sub
xor
ja
cli
mov
or
cmpsl
add
sahf
lahf
cmc
aad
fistpl
popa
add
lret
xchg
popf
dec
xor
lret
pop
add
mov
shll
or
push
les
and
push
and
ret
scas
mov
scas
dec
dec
or
adc
cs
imul
xchg
ret
pop
popf
mov
fsub
es
cld
ljmp
and
sti
sub
pop
mov
sub
dec
xchg
xor
repz
fisubrs
sarb
cmc
lcall
cmc
addr16
out
sub
call
in
test
inc
add
aad
repnz
mov
jne
data16
sub
jmp
push
cmp
mov
cmp
dec
fs
xorb
pusha
es
fldcw
pop
sub
shrl
adc
into
push
xchg
lahf
mov
roll
xchg
leave
test
mull
adc
jecxz
adc
ljmp
or
xchg
sub
jl
adc
push
xor
pop
cmpb
js
imul
out
mov
adc
xchg
enter
add
mov
clc
dec
sub
mov
adc
lcall
jns
call
cmpb
mov
imul
xor
movsl
test
jno
adc
inc
sub
clc
daa
inc
das
popa
add
daa
mov
inc
lret
mov
xchg
cmpl
int
dec
scas
or
fldenv
mov
mov
std
pop
mov
jne
js,pt
and
mov
out
sbb
sub
ds
dec
push
mov
loope
out
fwait
in
nop
or
lods
mov
adc
cmpsl
xor
inc
orl
push
xchg
sub
jne
ss
leave
mov
fidivl
hlt
repz
adc
sbb
push
fdivl
push
lahf
int
ljmp
or
scas
adc
mov
sub
jb
test
shrl
pop
scas
fnstenv
xor
xchg
daa
mov
mov
mov
mov
movsb
push
inc
mov
imul
or
hlt
std
movsl
push
es
inc
out
inc
rolb
stos
dec
pop
clc
and
test
dec
mov
repz
popf
xchg
mov
aad
xchg
and
test
cmp
testl
mov
add
xor
push
xchg
js
in
cmp
sbb
cmp
jbe
scas
push
ret
cmpsl
pop
lret
adc
jns
paddsb
adc
test
ds
and
pop
sbb
scas
cli
stos
lea
lods
inc
scas
xor
aaa
sub
cld
repnz
sub
add
into
dec
lret
cmp
mov
popa
adc
dec
xor
mov
je
push
or
inc
xor
sub
push
cmp
mov
xchg
sub
repz
cmp
mov
shlb
inc
and
es
mov
mov
pop
enter
add
push
sbb
aaa
pushf
mov
mov
mov
loopne
mov
jl
scas
mov
pop
clc
in
push
jl
dec
mov
test
adc
lahf
fsubr
xchg
add
test
into
and
mov
je
mov
sub
add
mov
les
pop
push
pop
jb
movsb
xchg
push
and
imul
jge
lahf
divb
and
xchg
cmpsl
in
xchg
push
out
push
xchg
shlb
dec
pop
sub
in
das
cld
mov
mov
jbe
imulb
sti
cmp
sbb
sarl
test
stc
lcallw
jo
lcall
or
and
addr16
movsb
mov
subl
adc
call
cwtl
jecxz
cmc
aam
cmpsb
sbb
sti
mov
adc
and
sbb
in
sub
xchg
repz
js
repz
sbb
add
int
adc
inc
lds
test
fnstenv
mov
dec
mov
push
popa
jle
sbbl
jno
test
mov
inc
mov
stc
cmp
lock
icebp
cltd
fcmove
jno
in
cltd
push
je
pushf
sub
roll
aad
adc
fnsave
fcmovnb
orl
test
adc
mov
out
inc
xchg
and
dec
mov
sub
mov
mov
pop
mov
ret
repz
mov
js
shll
std
adc
fcmovnb
aas
pop
es
cmp
mov
jmp
out
inc
lret
insl
pop
mov
xchg
mov
icebp
outsl
fs
out
inc
mov
jno
sub
pop
jnp
push
loopne
out
sbb
inc
mov
mov
outsl
adcb
cs
cmovo
shl
mov
lock
icebp
push
sbbl
fdivr
adc
xchg
fdivl
arpl
inc
out
lea
mov
iret
cli
mov
jmp
xlat
jo
in
or
mov
lret
mov
inc
clc
adc
or
push
lock
es
or
divl
enter
pop
inc
cli
inc
cmp
jg
mov
out
clc
fdivrl
movsb
ljmp
mov
sub
dec
mov
call
jmp
add
iret
movsl
add
paddusw
js
movsb
divl
adc
rol
inc
jp
fstp
cmc
mov
in
sbb
cltd
mov
xor
cld
lods
cmp
stos
mov
and
sub
fildl
push
add
in
and
sbb
inc
mov
aad
cwtl
cwtl
enter
enter
addl
fcmovu
cmp
scas
dec
sbb
and
loope
neg
bound
mov
dec
mov
inc
or
aam
inc
sub
inc
or
mov
in
sub
in
push
adc
popf
mov
sub
mov
xchg
add
xchg
mov
or
sbb
cmp
and
roll
es
mov
mov
mov
dec
ret
in
mov
iret
icebp
push
orl
dec
pop
sub
rclb
mov
cmp
into
jp
stos
dec
mov
pop
outsl
mov
fwait
js
ja
jl
dec
mov
pmulhw
inc
fildll
add
jae
loopne
mov
lods
xchg
inc
xlat
lret
inc
jns
and
fisttpll
imul
stos
movsl
mov
sbb
cld
negb
icebp
jae
pop
cmc
nop
pusha
pushf
push
mov
adcl
mov
arpl
loop
mov
dec
ret
fists
in
dec
dec
popf
test
mov
mov
test
inc
movsb
push
mov
rclb
xchg
repnz
add
xor
jg
xchg
or
fdivs
xchg
mov
sbb
add
inc
xor
xor
cmp
rcr
popl
xchg
fistl
mov
cwtl
je
out
mov
jne
cmp
jns
aad
stos
xlat
sbb
inc
in
addr16
ja
sbb
fdivl
jbe
movsb
mov
jecxz
stos
adc
mov
inc
sub
and
ficomps
and
addr16
jmp
dec
pop
test
mov
cmp
jg
push
je
cmpsl
sbb
jns
negl
jl
cmpsl
or
mov
pop
or
cmp
dec
cmpsl
pop
mov
and
xchg
xchg
sbb
sub
adc
loopne
mov
adc
loopne
xor
icebp
hlt
jle
es
sbb
ja
or
in
je
pop
push
mov
adc
ds
leave
sub
mov
mov
aas
cmpsb
into
adc
adc
out
inc
fiadds
xchg
cld
adc
and
outsb
mull
xchg
call
insl
shlb
inc
ret
in
subl
fdivrs
es
cmpsb
sub
lahf
sarb
cmpl
icebp
in
movsl
dec
and
pop
imul
adc
popa
insb
mov
jle
lret
icebp
jmp
add
inc
mov
test
insl
aas
and
xor
mov
jno
test
cmpl
mov
leave
enter
jne
jg
fdiv
fistpll
imul
ret
cmpl
dec
pushf
cs
mov
mov
mov
mov
test
in
shlb
fidivrs
fs
and
sbb
in
mov
jae
es
inc
jecxz
je
mov
mov
mov
xor
cmp
adc
xchg
das
mov
idivb
sbb
push
sbb
cmc
not
push
ss
xor
cmc
xor
cmpsb
ljmp
dec
outsl
dec
ret
push
cmp
call
mov
and
xchg
scas
jp
dec
pop
adc
orb
pop
ljmp
stc
pop
test
gs
push
pushf
xor
std
inc
mov
push
insb
sbb
cwtl
and
jae
pop
mov
add
mov
inc
push
popa
arpl
add
fucom
ss
cld
push
adc
add
and
lods
push
mov
out
imul
jns
or
push
jo
je
das
xlat
jo
movsl
scas
jb
add
pop
hlt
inc
sub
add
xor
in
aam
or
int
add
mov
shrb
xchg
or
mov
daa
cltd
sub
ret
fwait
aad
out
daa
inc
test
lahf
clc
adcl
mov
mov
and
mov
scas
or
lock
and
mov
mov
stos
push
lret
cli
cmp
push
aas
jnp
mov
mov
movsl
loope
sub
notb
push
test
push
jl
push
out
outsl
cmp
popf
sbb
push
sub
mov
negb
fistl
lods
sbb
sti
xor
mov
adc
lret
add
fdivl
mov
ja
arpl
aaa
mov
aaa
out
loope
push
jecxz
mov
scas
je
lods
sti
push
jbe
addr16
push
add
sar
and
xchg
mov
das
inc
cmp
and
js
fmull
nop
maskmovq
negl
aaa
mov
jbe
fsub
mov
jl
jmp
andl
lock
add
cmc
repz
lods
aas
loope
sub
iret
out
cmp
xchg
stos
in
scas
mov
lock
les
cmp
fs
pop
sahf
les
addr16
mov
fiadds
stos
sub
jne
xor
testb
jecxz
negb
std
xorb
insl
mov
and
cmp
jmp
cltd
inc
pop
jo
faddl
pop
jae
inc
rorb
add
fnclex
push
xor
fsub
xchg
addr16
lock
cld
jne
outsl
sbb
jae
out
adc
mov
mov
inc
adc
jecxz
and
shl
fs
ja
pop
add
jge
add
jmp
mov
addr16
mov
push
lret
aam
nop
scas
push
push
fisttps
fildll
sti
jl
xbegin
mov
test
fidivrl
outsb
mov
mov
js
cmp
push
icebp
or
pop
sub
icebp
push
fbld
push
push
bound
cld
in
mov
std
sub
or
fdivrl
repnz
mov
jnp
shlb
xchg
push
ds
lods
ret
mov
or
in
ja
xor
cmp
push
in
mov
in
cmp
hlt
in
xorb
aam
sahf
out
or
pusha
int3
xchg
je
dec
cmpsb
fucom
es
xlat
add
mov
sbb
in
ja
insl
sarb
sub
fadd
idiv
lret
pusha
lret
push
test
outsb
sub
lock
cmpb
into
clc
hlt
push
in
mov
ret
and
mov
mov
in
cmp
sbb
sbb
jp
imul
les
cmp
lods
add
insb
pop
test
arpl
fistl
popf
lea
daa
mov
imul
insb
hlt
dec
lods
arpl
aad
cmp
fidivl
lods
insb
sbb
ret
or
push
xchg
sahf
or
pop
ret
mov
fcmovnu
dec
pop
push
leave
xor
imul
push
repnz
mov
std
push
je
mov
popa
push
shll
add
imul
outsb
repz
push
and
xchg
or
daa
es
out
cmp
inc
xchg
cmp
es
sub
pop
mov
xor
cmpsb
adc
cwtl
pop
int
xchg
mov
push
jb
xor
cs
mov
cmp
cltd
sbb
jae
in
ret
loopne
inc
sbb
add
cld
in
cltd
mov
or
repz
sub
testl
movzbl
mov
test
push
and
popf
pop
cmc
mov
dec
xrelease
fdivrs
icebp
loope
xor
aad
testl
xchg
movsb
inc
pop
mov
sahf
repz
mov
lahf
inc
cmp
mov
and
fidivs
xor
stos
js
mov
rorl
cld
add
divb
mov
int3
and
sbb
sbb
xor
cmp
cmp
popa
lea
sbb
dec
loop
xorb
jb
mov
cmp
and
and
adc
cmp
in
pop
fs
loop
add
push
mov
jmp
xorl
add
jae
and
mov
in
mov
mov
or
adc
jae
mov
xchg
xchg
fnstcw
cmp
push
fisttpll
cmp
test
mov
add
mov
bound
daa
cmpsl
nop
inc
out
dec
mov
push
dec
xchg
repnz
lds
sub
in
push
andb
jl
cmp
lahf
dec
jmp
pop
int
je
jae
mov
adc
shll
outsb
rcll
decl
and
sar
mov
push
inc
sub
sub
stos
inc
sub
xchg
es
movsl
mov
fisubl
adc
xchg
scas
jno
xor
or
vpmuludq
mov
mov
call
jmp
or
fstpt
xchg
push
loop
mov
je
pop
dec
sahf
mov
inc
and
mov
inc
cld
mov
cld
clc
dec
dec
in
int
mov
fnsave
and
inc
outsl
sbb
xchg
add
mov
std
mov
lods
jbe
pop
mov
jb
ljmp
add
addr16
inc
push
js
ret
sub
ss
pop
mov
iret
out
dec
cwtl
mov
push
mov
mul
xchg
pop
mov
in
cmp
mov
in
rolb
out
push
ja
sbb
jle
cs
adc
pop
stos
adc
mov
xchg
adc
dec
inc
sbb
pop
aaa
sbb
addr16
out
push
fisubrl
lahf
xchg
sbb
sub
fmuls
jnp
ret
xchg
scas
xchg
cwtl
ja
mov
xchg
mov
ret
push
inc
jno
arpl
inc
add
mov
or
xor
mov
sub
or
mov
jns
xchg
mov
xor
scas
pop
cwtl
mov
push
rolb
mov
jmp
mov
push
push
adc
les
jecxz
cmp
fdivrl
lock
stos
sub
sub
jle
bound
lods
fdivs
push
and
imulb
jb
inc
pop
jnp
push
fistl
ja
aas
xchg
jle
sbb
das
xchg
and
add
mov
sbb
dec
aas
in
and
gs
jnp
dec
ret
mov
and
jns
je
mov
jns
xor
mov
sbb
add
sbb
in
or
cwtl
xchg
mov
cld
fistl
xor
inc
test
jae
movsl
ret
jo
and
jmp
std
xchg
daa
lea
ljmp
jle
sbb
jne
cmp
mov
out
fdivs
ficompl
mov
loopne
add
jns
roll
mov
mov
cs
and
sbb
mov
mov
fisubs
outsb
xchg
aas
dec
or
mov
jae
xchg
lock
lds
rorb
mov
test
iret
inc
in
loope
mov
imul
dec
mov
inc
xchg
xor
test
sti
addb
enter
cmpl
mov
adc
inc
gs
push
movsl
pop
inc
mov
sahf
call
loop
xchg
clc
mov
cld
aam
rcll
mov
fwait
or
in
mov
xor
cmp
loop
add
inc
dec
bound
daa
ss
cmp
call
or
int
cmpsl
mov
paddusb
popf
movsw
push
mov
sahf
jb
cld
out
inc
push
cmpsl
mov
test
pop
xor
mov
jl
popa
jmp
and
xor
out
dec
mov
pop
lds
add
jle
and
jecxz
mov
pop
jns
daa
cmpb
rorb
pop
mov
in
popf
mov
enter
or
adc
xor
mov
mov
xchg
movsb
test
std
jo
hlt
dec
clc
and
out
daa
mov
xchg
pminsw
mov
lds
jbe
movsl
bnd
cwtl
outsb
movsl
popa
insl
mull
adc
ftst
or
in
mov
aaa
dec
fucom
out
inc
mov
imul
xor
arpl
mov
loope
cld
cmpsb
mov
adc
jb
adc
fists
pop
in
sub
lods
iret
jbe
scas
fs
dec
int3
mov
mov
mov
xor
faddl
cmpsl
cmp
outsl
inc
movsb
gs
in
jecxz
notl
cmpsl
xor
ss
scas
inc
stc
mov
xchg
clc
stos
cmp
test
ja
cwtl
icebp
cld
push
movsl
imul
inc
cmp
out
loopne
xor
or
lock
sub
movsl
lock
push
shlb
xlat
fisttpl
scas
icebp
sub
jno
mov
lahf
or
mov
cwtl
notl
in
call
rcrb
sub
bound
repz
fs
push
xchg
push
ss
testl
fisttpll
mov
outsl
mov
sub
mov
cmp
jns
mul
cmp
add
nop
mov
aad
lret
mov
jl
pop
loop
lds
rcl
mov
xchg
je
test
movsl
or
adc
roll
les
dec
xor
fcompl
xchg
mov
pop
repz
icebp
push
pop
mov
cmpsb
aas
outsl
imul
add
and
pop
push
or
xor
mov
cmp
add
int3
push
jge
fs
es
mov
das
pop
int
adc
ss
aas
inc
and
lret
js
in
adc
add
nop
data16
jns
lret
inc
and
ja
pop
mov
add
adc
xchg
mov
outsl
lock
push
or
lret
mov
and
dec
mov
fistpl
and
jmp
jno
cli
xor
push
inc
cmpsb
scas
adc
mov
mov
pop
out
clc
in
mov
inc
xchg
fsts
mov
inc
mov
movsb
pushf
xchg
mov
cltd
cld
adc
icebp
jbe
in
inc
repz
xor
jns
push
jecxz
outsb
xor
sub
and
mov
repz
in
subb
mov
iret
push
cmpsl
jne
adc
movsl
mov
std
adc
mov
push
push
or
sub
and
loope
dec
hlt
pop
push
jne
fadds
arpl
cmp
mov
or
pop
lcall
pop
mov
mov
je
mov
inc
pop
ja
mov
jnp
push
cs
cli
fwait
sub
xchg
add
xchg
push
or
pop
lods
adc
jmp
popa
lret
xchg
scas
fdiv
mov
mov
je
lods
sbb
or
dec
inc
push
pop
mov
je
dec
repnz
arpl
or
cmp
xor
dec
scas
pop
test
mov
mov
lods
fwait
iret
sub
and
mov
leavew
shrl
mov
dec
push
fidivrl
ret
mov
cld
loope
push
push
push
hlt
mov
mov
stos
pushf
lods
sbb
push
call
cmpsl
outsb
scas
mov
lea
inc
nop
in
sbb
clc
and
sti
push
in
int
add
push
imul
pusha
insb
nop
sbb
sbb
push
and
and
adc
out
pushf
sub
add
popf
insl
enter
icebp
repz
jecxz
jg
cs
push
mov
clc
clc
cltd
cld
cld
jle
jge
in
in
mov
ja
rcrb
xlat
cld
cmp
mov
call
dec
rol
ficomps
mov
xchg
mov
cmp
xor
and
and
mov
in
jns
jne
call
mov
pop
mov
lock
dec
lret
cmpsb
push
pop
hlt
adc
xor
gs
pusha
xchg
imul
inc
fdivs
jb
in
pop
push
fiadds
add
in
ret
ja
popa
jbe
insl
jb
scas
adc
test
pop
mov
stos
jecxz
xor
je
jp
ret
lock
inc
lret
adc
inc
lcall
jge
sbb
aam
push
enter
stc
popw
gs
into
cltd
adc
repz
mov
int3
push
pop
and
aas
cld
xor
popf
insl
cmp
push
cmpl
adc
repz
jae,pn
into
decl
cmpl
test
popf
fs
je
enter
jecxz
mov
sarl
mov
mov
sub
jno
and
fcoms
xchg
mov
jmp
out
pop
rcll
dec
xchg
cmp
cld
pop
cmp
add
mov
test
das
std
mov
dec
lret
cmpsb
xor
inc
in
xchg
push
sbb
add
mov
inc
mov
dec
sbb
test
test
cmp
popl
sbb
lods
fisubrs
jge
xchg
and
and
jl
or
adc
daa
mov
jo
adc
inc
sub
icebp
mov
or
fld
sub
stos
ds
inc
mov
stc
fisubs
loopne
hlt
pop
in
jl
cwtl
in
mov
fistl
aas
sahf
add
jecxz
vcvtps2dq
inc
loopne
and
test
xor
ficoms
lret
clc
pop
lret
icebp
mov
repnz
cmp
pushl
iret
in
cmpsl
xchg
repz
xlat
push
xor
fdivr
clc
data16
cmp
mov
and
enter
stc
xor
das
xchg
inc
mov
adc
dec
pop
sub
shld
movsb
xchg
push
jl
pop
outsb
out
dec
imul
xchg
push
mov
jmp
inc
gs
push
mov
xor
popf
or
mov
ja
inc
pop
adc
dec
mov
pop
in
imul
test
aaa
pop
push
mov
sbb
lcall
enter
sarl
xor
enter
test
out
jp
mov
mov
mov
scas
test
jmp
lods
and
enter
ja
jg
jmp
xor
mov
cwtl
popf
cmp
arpl
cmp
xor
mov
jnp
pop
sub
jl
mov
fists
add
xor
imul
iret
adc
pop
popa
or
xchg
sub
mov
mov
lret
adc
mov
int
lods
or
dec
in
loop
loop
fnstenv
lds
cs
and
insb
xor
cltd
cs
loop
jmp
and
out
cmp
loope
jl
pop
loopne
sahf
mov
cmp
fsts
sahf
adc
lods
pop
pop
imul
mov
dec
ficoml
scas
sbb
sbb
jg
mov
and
jns
xor
ss
inc
adc
adc
repnz
mov
cmp
adc
push
scas
jl
test
adc
push
movsl
jne
jge
cmp
scas
mov
fistps
push
repz
pop
into
pop
int
jge
les
and
inc
clc
xchg
repz
and
mov
out
xchg
rclb
mov
lea
fnstcw
bound
cmp
fs
stos
stos
xchg
scas
inc
dec
movsb
xchg
fwait
sub
jle
cmp
and
push
pop
shl
sti
std
clc
push
add
xchg
test
outsl
out
xor
inc
xor
ret
loopne
sahf
iret
popa
stos
std
out
mov
jmp
int
sub
sub
movsl
sbb
insb
and
sti
fldt
adc
cmpsl
stc
movsl
les
lcall
pop
jmp
xor
add
add
dec
shr
iret
sbb
mov
mov
pushf
out
shrl
pop
fsubrs
scas
mov
or
jmp
in
int3
cmp
jge
pop
and
or
hlt
mov
jne
mov
loope
cld
loope
loope
cmc
dec
in
out
push
dec
jmp
lea
xchg
push
pop
lahf
mov
enter
mov
xor
pop
aas
and
push
jge
pushf
clc
xchg
sub
movsb
mov
pop
jnp
iret
sbbl
add
scas
push
int
cmp
sti
fidivrs
loopne
ret
adc
popa
push
mov
fsubrl
into
mov
mov
push
and
pop
loop
jg
dec
xchg
int3
cld
fnsave
add
movsl
or
and
xorl
in
repnz
stos
mov
ss
mov
imul
inc
aad
loopne
push
inc
lahf
ficomps
int
push
inc
aas
ljmp
popf
lods
push
inc
shrb
pop
addr16
test
push
in
jo
movb
cwtl
inc
repz
xor
push
pop
mov
dec
jp
fistps
pop
lret
adc
pop
in
sub
fldenv
pop
cli
push
outsb
add
rolb
jmp
cmp
js
jmp
add
rcr
arpl
ja
std
aaa
mov
out
and
jmp
push
fcomi
pop
in
fildll
dec
rcll
inc
sub
fcoml
and
lock
jg
jns
jo
les
jg
dec
mov
ljmp
cmp
arpl
or
or
shl
cli
inc
jmp
test
and
mov
pop
cld
inc
out
jb
cmp
push
lea
gs
ret
popf
pushf
dec
pop
popf
neg
jecxz
aas
cmp
sub
xor
mov
inc
mov
jge
pop
sti
push
mov
and
cld
mov
cmp
adc
bound
add
cltd
jo
xchg
xor
lock
jo
mov
iret
pop
sub
nop
imulb
lds
sbb
or
or
mov
xchg
test
outsb
mov
mov
and
sbb
inc
jmp
cmp
or
mov
test
frstor
cld
enter
inc
pop
jecxz
mov
adc
mov
ret
mov
emms
mov
popa
jb
pushf
in
stos
xchg
std
jp
into
inc
hlt
xchg
xchg
mov
iret
stos
in
call
aas
cmp
fbstp
cwtl
and
movsl
dec
mov
mov
movsl
dec
jbe
popaw
push
pop
push
mov
jo
push
cmpsb
dec
cmpsl
inc
inc
inc
movsl
stos
cmc
xor
xchg
into
lods
xor
and
or
nop
push
ret
pop
ja
test
into
cmc
dec
repnz
loope
or
rclb
movb
orb
dec
jl
jmp
or
lds
sub
jmp
push
lea
mov
sbb
cmpsb
cmp
fs
in
adc
mov
rorl
xchg
lahf
je
sub
jae
mov
es
dec
shr
mov
inc
sahf
mov
aaa
push
in
xor
outsl
push
jns
and
fisubl
push
mov
lahf
cld
mov
push
mov
xchg
loope
xor
adc
cmpsl
lods
or
or
gs
call
sub
jecxz
jg
mov
out
inc
repnz
add
and
jne
mov
sahf
or
scas
test
cmp
loope
bound
inc
call
xchg
jae
loop
sbb
xchg
outsl
mov
sub
sti
push
mov
outsb
pop
stos
leave
pop
mov
or
out
dec
mov
mov
out
lds
lcall
leave
pushf
xchg
adc
lret
lea
inc
int
jle
ss
icebp
lret
pop
jge
leave
mov
jle,pt
enter
xchg
dec
cmp
leave
jno
sbb
daa
repz
stos
lahf
mov
and
inc
mov
and
xchg
lahf
addr16
mov
pop
cltd
pop
and
push
jnp
test
lahf
sbb
or
int3
xchg
lcall
jmp
and
rcrb
or
shrb
mov
sub
mov
push
inc
sbb
nop
pop
sub
fsts
in
aas
add
lds
adcb
pusha
jae
aad
int3
outsb
or
rcl
jno
mov
ljmp
push
shll
xchg
dec
jno
popf
out
inc
push
add
jmp
inc
test
or
popa
and
call
mov
cld
mov
cmp
push
arpl
inc
movsl
pop
sbb
jnp
gs
xlat
dec
mov
cld
clc
xor
pop
outsb
cltd
loope
inc
push
add
lahf
cmp
and
add
out
das
cmc
and
in
shr
sub
sub
xor
mov
xchg
les
and
mov
and
pop
aam
mov
mov
xchg
sub
mov
pop
pop
mov
mov
push
negl
mov
push
test
in
data16
stos
shrl
arpl
jmp
in
pop
pop
out
mov
cli
cmp
sub
fcoms
inc
movsb
push
xchg
movsl
repz
lahf
les
cli
outsb
and
push
pusha
lret
or
int3
mov
mov
test
mov
inc
out
sbb
stc
in
dec
outsb
int3
xor
popa
mov
lea
clc
lods
sub
aad
adc
mov
icebp
out
ficoms
sub
mov
leave
ret
cmp
idivb
or
rcrb
leave
mov
cld
push
adc
cmpsb
pop
faddl
push
or
jbe
imul
xchg
jmp
ja
loope
test
adc
push
in
fwait
jecxz
and
mov
mov
imul
inc
or
sti
data16
filds
mov
lcall
lret
invd
mov
in
fnstsw
add
jl
mov
clc
mov
out
xor
outsl
sub
jmp
sub
dec
push
repz
ds
jmp
fildll
lods
mov
cmpsl
mov
hlt
jg
sub
jae
or
popf
sub
xchg
adc
clc
jg
jge
push
test
mov
movb
repnz
xchg
insl
add
gs
int
js
hlt
sbb
mov
rorl
xor
dec
scas
and
push
jo
aad
lret
mov
fisubs
sub
mov
pop
dec
outsb
mov
xchg
stos
mov
jno
push
adc
mov
mov
add
pop
push
call
fcomp
mov
ljmp
aam
pop
sub
movsl
or
jae
nop
outsb
and
popf
mov
fadd
les
and
loop
fists
lret
sbb
dec
fcmovbe
mov
jmp
lcall
push
mov
mov
cmp
int
test
movsb
jno
vcvtsd2usi
jno
inc
inc
pop
mov
push
fcomps
add
push
fsub
push
jge
mov
aaa
pop
mov
cld
mov
loop
hlt
add
sbbb
mov
pop
add
loop
adc
lods
sbb
inc
jae
xlat
pop
mov
sbb
pop
and
mov
sub
loop
mov
jecxz
cmpsl
aam
pop
push
pop
xor
and
arpl
xor
mov
jbe
pop
outsl
imul
rcr
mov
mov
fld
fldenv
inc
and
cmp
mov
xchg
fistps
jl
mov
add
jbe
sbb
shr
jnp
mov
sub
jl
adc
mov
lds
aad
scas
xor
frstor
repnz
pop
add
in
test
mov
aaa
call
rcrl
mov
orl
rcrb
inc
fbstp
cmp
in
cld
cli
pop
shrl
loopne
clc
fidivl
sbb
add
mov
lock
mov
cmp
lret
pop
sub
orb
fwait
mov
pop
enter
wbinvd
pop
push
xor
call
shr
ret
inc
xor
push
out
xchg
mov
arpl
cs
jge
sarb
cmp
notl
clc
dec
stos
leave
sbb
sbb
ret
leave
lock
sbb
repnz
fbld
mov
push
out
pop
jge
sbb
outsl
pop
inc
sbb
mov
push
mov
in
adcb
adc
je
cwtl
push
cmp
fisttps
bound
pop
cmpsb
pop
sbb
cmp
push
mov
sbbl
negb
dec
sbb
xchg
pop
incl
daa
in
inc
aad
jmp
adc
lods
mov
nop
jnp
xlat
nop
dec
fsubl
mov
xor
int3
rcll
test
imul
xchg
lock
fcoml
bound
inc
outsl
sbb
cmp
mov
sti
enter
mov
add
sbb
ss
adc
cmp
icebp
es
and
out
xchg
std
mov
jo
sub
mov
incb
shll
push
cmpsl
subl
sub
cmp
and
cmpsl
adc
pop
xchg
xchg
add
das
jmp
xchg
popa
incb
or
mov
jp
inc
mov
sbb
lcall
sbb
mov
ffree
mov
pop
sbb
addr16
jne
test
sub
xchg
call
mov
cmpsl
sbb
mov
push
mov
dec
sub
mov
xchg
sti
jo
test
pop
movsl
mov
mov
call
leave
into
outsb
pusha
out
bound
cld
or
pop
mov
dec
int3
nop
and
loop
dec
inc
adcb
leave
sbb
mov
test
mov
cld
fimuls
lcall
xchg
pop
clc
sbbl
test
xchg
fistpl
sub
scas
or
add
jns
cwtl
cli
mov
inc
jae
sub
mov
out
ja
movsl
or
jge
ds
mov
xchg
inc
jne
imul
fwait
mov
lcall
cmp
or
cmp
jns
fidivrl
dec
outsb
mov
enter
or
pop
or
push
int3
int
aaa
inc
pop
enter
test
pop
ret
mov
lret
fdiv
xchg
jge
add
push
xor
sub
int
stc
pop
add
lahf
mov
push
lock
mov
dec
aad
sbb
push
cmp
stc
icebp
es
mov
scas
jb
sbb
jmp
fwait
sahf
ret
jg
hlt
std
inc
out
out
jg
jo
orb
push
sbb
call
jbe
std
push
xlat
jl
leave
das
dec
lods
arpl
cmp
sbb
adc
pop
cmc
fnstenv
jp
mov
fiadds
pop
mov
and
cmp
int
jecxz
inc
and
inc
jg
inc
push
sbb
addr16
add
test
in
stos
sbb
scas
test
lcall
or
ljmp
cmpsb
xchg
xchg
imul
scas
out
jb
test
cmc
mov
xchg
out
dec
mov
insl
std
push
xor
fildll
ss
in
mov
vcvttss2si
xchg
push
xor
push
arpl
sub
adc
xchg
pushf
xchg
xchg
daa
add
pop
cltd
sbb
dec
pop
sub
mov
cmp
insb
shlb
divb
mov
sbb
add
xor
ret
push
ljmp
dec
push
cli
in
lds
mov
or
movsb
mov
lret
pop
add
jno
pop
xchg
pop
out
jp
add
mov
sti
int
ja
xchg
sti
int3
popa
lret
cmp
cs
mov
mov
adc
outsl
mov
mov
mov
jno
mov
ret
dec
push
out
inc
or
mov
movsb
mov
psubsb
jecxz
repz
dec
pop
pop
adc
hlt
adc
or
mov
jle
iret
cmpsl
gs
rep
shl
or
out
pop
jne
pop
fcomp
aaa
test
mov
arpl
mov
jmp
xor
xchg
scas
or
mov
mov
sets
push
lcall
dec
std
ds
cmp
and
add
cmp
sub
outsb
test
cltd
mov
xchg
jecxz
into
inc
test
sub
mov
cmpsl
pop
in
xchg
mov
pop
adc
or
adc
lock
inc
adc
mov
mov
stos
pop
loop
lock
mov
sbb
in
and
push
mov
in
jecxz
inc
nop
mov
or
iret
jno
insl
push
cmpsl
add
fldenv
repz
imul
rorb
sub
jo
mov
fs
jbe
jmp
aad
adc
test
dec
dec
rorl
fdivs
mov
cmpsl
mov
fadds
push
das
mov
loopne
stos
mov
js
mov
and
std
lods
sar
test
cli
push
xchg
jbe
test
das
call
fsqrt
fadds
lret
lahf
das
xor
ss
dec
mov
cmpsb
adc
push
push
cmpsl
inc
and
mov
jo
xchg
outsl
xchg
testb
orl
dec
push
push
pop
ret
movsl
jo
test
mov
ljmp
enter
pop
sub
mov
cmp
fisttps
inc
xchg
add
sbb
inc
ret
jae
aaa
cs
push
jmp
dec
push
int3
stc
mov
lret
scas
mov
in
out
pop
pop
mov
outsl
icebp
jbe
jg
pop
shll
les
int
push
hlt
cld
mov
daa
into
stos
repnz
cmp
cmc
xor
lea
insb
sbb
xor
lahf
es
fwait
jno
imul
jle
movsb
je
mov
dec
mov
rolb
push
cmp
movsl
mov
adc
repz
cmp
or
inc
scas
push
test
cmp
loope,pt
hlt
push
lock
stos
sub
dec
or
scas
lahf
push
nop
mov
mov
fbld
mov
stc
adc
jge
test
movsb
mov
inc
mov
xchg
and
mov
mov
or
add
in
cmp
sub
test
jno
sahf
inc
xchg
sub
cmp
cmpsl
mov
leave
popf
arpl
jns
test
leave
mov
lret
imul
ljmp
test
xchg
and
in
mov
ret
adc
div
and
mov
add
sbb
testl
xchg
mov
daa
dec
shrb
lds
hlt
mov
popf
ficomps
daa
out
push
mov
mov
inc
js
aaa
lret
les
lret
fmuls
cli
push
imull
lods
xchg
test
mov
pusha
jns
scas
jnp
xor
les
fwait
inc
les
ja
int3
push
jmp
data16
fnsave
clc
clc
or
and
dec
or
pushf
inc
icebp
xor
test
mov
inc
mov
pop
pop
sbb
add
mov
subb
jp
aam
iret
mov
push
call
pop
sahf
mov
push
int
push
mov
pop
pusha
cmc
cli
aaa
in
sti
push
mov
fisubrl
icebp
push
bnd
adc
dec
push
imul
sbb
xor
aas
pop
iret
int3
enter
dec
cmp
inc
jle
xor
gs
cld
xchg
mov
sbb
xchg
mov
inc
jmp
divb
fnclex
pop
movl
das
hlt
sbb
xchg
es
nop
xchg
sub
sbb
push
and
dec
mov
rolb
mov
inc
mov
adc
jecxz
jne
out
cmc
lret
jecxz
mov
cmp
jmp
mov
stos
mov
call
jo
push
in
xchg
clc
xor
jge
and
add
dec
and
jge
addr16
test
popa
movsb
repz
ret
cmc
jmp
sub
cmpsl
out
ret
mov
push
lret
adc
iret
mov
push
push
fwait
pop
insb
xlat
cmpsl
cmp
int3
pop
jae
dec
ror
pop
rol
adc
insb
xchg
fwait
ljmp
into
sub
pop
lods
jge
mov
mov
cltd
divl
jbe
sti
bound
and
or
push
out
movsb
int
dec
push
popf
out
movsb
xchg
test
cwtl
jmp
notl
mov
les
jno
fwait
lahf
inc
enter
aam
nop
sbb
mov
sbbl
xchg
xor
xchg
imul
sbb
cmc
hlt
es
in
daa
push
mov
inc
cmp
sub
mov
mov
dec
jle
setnp
fwait
jb
push
pop
icebp
addr16
in
sub
leave
loopne
lods
push
mov
aaa
test
fsubr
xor
out
out
int
movsb
lods
mov
rclb
out
push
int3
mov
xchg
lret
jne
sbb
fdivp
jmp
xor
xchg
aam
jne
lock
jp
cmp
test
jl
jo
mov
fadd
sub
jle
ljmp
mov
xor
lea
nop
adc
sub
pop
test
xor
push
mov
push
pop
loopne
mov
and
call
scas
cld
mov
mov
fadd
or
xchg
cld
fwait
mov
int
adc
and
es
stos
pop
jne
xor
pop
fwait
mov
shl
les
fcomps
adc
imul
sub
scas
add
es
jnp
inc
movsl
jnp
sarl
pop
mov
les
adc
lret
cmc
cmp
sub
push
inc
test
jmp
rcrb
dec
sub
lret
repnz
and
pop
push
cmp
jo
lret
push
hlt
push
mov
mov
jns
sbb
lods
mov
fsubr
mov
xchg
jp
adc
clc
mov
addr16
loopne
loop
jns
in
cmpsb
lea
mov
lds
push
cmp
jl
ficompl
adc
mov
leave
cmpsl
mov
fistpl
push
mov
cltd
mov
xchg
bnd
dec
push
fidivrl
repnz
movsb
or
fldl
mov
inc
aas
add
and
nop
gs
dec
in
icebp
push
or
mov
and
push
sbb
xor
mov
add
or
rorb
outsl
or
test
and
xchg
es
jb
push
cmp
test
pop
ds
sarb
ljmp
loopne
test
cmpl
divl
mov
dec
pop
mov
xor
jp
mov
in
lea
mov
sub
aad
xor
mov
sub
xorl
mov
adc
and
push
mov
fdivs
xor
add
lods
add
and
xchg
dec
loope
jg
les
test
inc
aas
sbb
sub
es
mov
repz
mov
loopne
dec
shll
mov
movsl
std
ds
jae
dec
addl
call
and
dec
jns
int3
ffreep
div
sbb
push
pop
dec
push
dec
sbb
sbb
test
sbb
dec
cmp
jo
loopne
inc
out
xchg
cltd
iret
mov
popa
into
jae
in
hlt
clts
shll
fwait
push
cli
push
push
dec
xchg
and
jp
sub
lret
test
fstpt
add
pop
je
push
mov
pop
push
pop
mov
int3
jo
jnp
cltd
and
call
or
jmp
inc
add
cmc
jae
push
sti
xor
ret
lret
push
daa
mov
push
mov
cmp
adc
jl
daa
stc
loopne
and
jnp
pop
aaa
mull
lds
cltd
js
mov
xchg
sbb
into
sbb
jb
lahf
xor
or
sbb
loop
scas
pop
sahf
daa
out
rcll
test
sbb
cmp
pushl
mov
sub
into
cmp
mov
mov
in
mov
lods
sbb
movsl
je
hlt
dec
xchg
inc
out
arpl
mov
pop
int3
std
adcl
int
js
test
adc
push
pop
js
int3
clc
mov
cmp
out
cmc
jbe
gs
inc
loop
add
jmp
mov
add
lret
dec
ds
icebp
repnz
test
jbe
cmp
pop
pop
jg
out
divl
mov
pop
stc
xchg
xor
jg
dec
fildl
mov
and
push
fwait
data16
test
xor
aad
push
cld
adc
test
push
es
les
aad
mov
xchg
mov
std
mov
mov
rorb
sbb
dec
pop
leave
jg
inc
mov
sub
mov
jecxz
or
ljmp
jo
fsubrs
adcl
xchg
inc
xor
fistl
dec
mov
lds
repz
call
xor
fstps
pop
pop
adc
out
test
add
and
mov
fmul
push
leave
jecxz
xchg
push
movsl
arpl
call
sbb
movsb
jl
cmp
mov
dec
pop
adc
jne
push
adc
add
sub
gs
insb
adc
adc
jne
xchg
movsl
or
push
shll
gs
sbb
lret
xchg
dec
jmp
stc
int3
stos
xchg
push
jae
in
mov
sbb
fadd
mov
cmp
repnz
pop
outsl
mov
popa
jb
jge
shrb
js
nop
imull
out
cld
mov
repnz
mov
jo,pt
lret
icebp
test
loopne
sbb
xchg
jno
adc
mov
mov
push
enter
das
pop
sub
push
scas
in
sbb
pop
dec
cwtl
adc
and
iret
jae
imul
or
cmp
lret
mov
cmp
sbbb
jno
jne
sbb
clc
sub
dec
pop
ljmp
addr16
mov
fwait
repnz
inc
sub
or
mov
cmp
into
loope
cmp
inc
mov
out
add
pop
or
inc
push
mov
icebp
lcall
xchg
pop
ss
pop
repz
fisubrs
inc
dec
pop
jns
imul
lock
aaa
je
xchg
stos
dec
dec
das
movsb
sbb
xchg
cmp
dec
mov
and
ja
cmp
stos
and
insl
stos
xor
add
push
pop
out
cmp
push
inc
sarb
js
bnd
pop
adc
fcomp
fcom
loope
repz
pushf
xorb
mov
sub
sbb
jae
mov
pop
xchg
mov
and
push
cmpsb
pop
pop
jns
jnp
ja
mov
mov
add
adc
sub
in
clc
mov
jmp
pushf
daa
repz
lret
mov
jo
repz
movsb
pop
adc
loopne
xchg
mov
jb
mov
test
nop
imul
inc
cld
test
mov
inc
loopne
mov
std
andl
arpl
jp
fwait
adc
ficompl
fnsave
and
dec
inc
enter
scas
dec
mov
shll
mov
pop
cmp
inc
and
test
in
pop
daa
xchg
jo
flds
mov
add
aas
cmp
movsl
imul
or
lahf
xchg
pop
adc
jmp
sbb
ja
imul
add
and
into
mov
clc
jo
sahf
mov
push
xchg
outsb
jb
push
pop
sub
xchg
ficomps
cs
dec
aas
clc
jnp
loopne
push
fnsave
test
rcrl
scas
movsl
test
stc
sbb
xchg
mov
sub
enter
xor
jmp
stos
ss
push
popl
xchg
xor
pop
fucomi
push
fmuls
stc
cmpb
pop
ss
aaa
out
xor
fidivl
outsl
xor
xlat
pop
loope
ret
mov
stc
bound
fcoms
in
adc
sbb
test
idivb
inc
inc
mov
in
adc
clc
jbe
and
loope
int3
imul
jp
adc
dec
addr16
mov
cmp
dec
leave
aaa
pop
mov
sub
push
fstpl
sub
jbe
cmpsl
sarl
js
enter
add
loop
cmpsb
dec
mov
fdivl
xchg
sub
sub
lds
xchg
mov
test
orl
enter
mov
cmp
std
cmp
mov
hlt
mov
popa
jno
jae
addr16
mov
lcall
jae
pop
clc
push
mov
outsl
cld
ss
push
loopne
jo
inc
pop
scas
adc
mov
cmp
xchg
xlat
add
cmc
sahf
jmp
out
mov
fs
xor
mov
imull
data16
add
mov
test
xor
mov
jmp
insl
idivb
cli
inc
add
jmp
mov
in
les
inc
mov
and
mov
clc
jne
popf
cmc
movl
push
ss
ficompl
cld
sub
pop
out
pop
dec
mov
mov
lds
scas
jle
jg
xlat
jne
mov
rcl
dec
inc
clc
or
daa
mov
mov
popf
cwtl
ss
cmp
xor
stos
popa
std
nop
popa
scas
pop
mov
cli
mov
xchg
lods
ja
pusha
je
xchg
adc
sub
mov
push
and
push
das
mov
mov
sbb
dec
repnz
pop
out
sub
xlat
mov
pop
repnz
lods
and
imul
inc
cmpsl
outsb
xchg
mov
pushf
pop
xchg
push
daa
dec
push
push
aaa
sar
cmp
mov
xchg
cmpb
int3
mov
xchg
xchg
enter
inc
pushf
into
aad
imul
mov
cmc
xchg
xchg
mov
aad
pop
or
daa
pop
js
aad
movsb
shl
pop
mov
cmc
push
adc
scas
mov
test
mov
mov
idivl
add
mov
adc
mov
mul
dec
xchg
sub
fs
iret
outsl
cld
rorl
rcr
push
sbb
test
sub
or
negb
mov
xor
and
mov
ds
fisubrl
mov
inc
cltd
call
mov
xchg
gs
sbb
pop
call
fbld
lahf
imul
mov
mov
adc
mov
push
push
testb
in
xor
sahf
xchg
sahf
leave
pop
cmp
jae
scas
std
fstl
mov
pop
lods
je
fsub
mov
cmp
mov
and
ret
lds
xchg
das
cmpsb
jae
cmpsb
sbb
sbb
add
insl
xchg
and
nop
repz
jno
inc
loope
sub
pop
inc
push
jne
mov
dec
out
sub
pop
in
cmp
repnz
in
ret
inc
imul
pop
pop
jae
push
fcompl
pop
mov
les
or
jae
cmp
cmpsl
dec
nop
jno
and
or
adc
cltd
jo
nop
push
fsub
mov
aad
mov
cmp
dec
add
out
sti
add
add
hlt
mov
jg
dec
inc
sbb
mov
mov
not
std
lods
adc
sbb
mov
ret
cmpsb
push
xchg
push
ficoms
jmp
int3
out
cmpsb
inc
xor
out
dec
jecxz
xchg
jl
movsb
mov
outsl
jmp
pop
cmp
mov
fisubs
out
movsb
cmp
dec
fwait
cmc
ds
mov
test
rolb
popf
mov
mov
mov
cmp
rcrl
mov
ljmp
fsubrl
mov
dec
xchg
in
sub
fdivrp
mov
in
lcall
jb
mov
mov
call
pop
add
pop
repz
fs
cs
mov
sub
mov
je
ret
mov
hlt
orl
or
lods
cltd
push
cmp
and
inc
xchg
pop
and
daa
mul
das
mov
movsb
repnz
stos
aaa
mov
leave
stc
add
add
insb
test
pop
or
fistl
shlb
and
cmpsl
dec
push
shlb
jg
pop
arpl
sbbb
sub
jns
into
and
mov
sti
inc
std
lock
pop
adc
add
pop
jl
iret
lock
rcll
cwtl
test
repz
std
outsb
cmp
pop
cltd
xor
insb
dec
or
stos
ja
add
cmpsl
dec
adc
fs
sarb
test
xchg
enter
or
stos
stc
lods
insl
fistpl
inc
fld
sub
sub
sarb
repnz
addr16
mov
and
cli
leave
mov
or
adc
pop
inc
and
jl
jae
inc
xlat
lahf
inc
adc
adc
lds
add
mov
pop
lret
stos
mov
push
imul
cltd
dec
ja
xchg
cmp
xchg
and
pop
test
ds
mov
int3
loope
push
pop
push
cs
inc
sti
xchg
inc
mov
add
mov
jne
xchg
test
mov
mov
lret
lcall
in
lret
pushf
sbb
int
imul
fildll
jp
jbe
sarb
idivl
xor
sbb
stos
xor
lock
test
mov
pop
rorb
cmp
stos
shlw
add
lods
lret
inc
loope
movsb
xchg
mov
test
out
jle
mov
shll
inc
int
out
movsl
enter
loopne
xor
scas
fwait
pop
nop
push
cmp
imul
fdivs
adc
sbb
iret
icebp
dec
mov
mov
shl
dec
xchg
popa
test
jo
dec
pop
dec
mov
loop
in
mov
mov
mov
fxch
pop
push
frstor
jb
or
jge
sub
lods
adc
test
ror
pop
out
mov
mov
cmp
roll
adc
xchg
bound
mov
outsl
mov
sub
dec
mov
xor
sbb
mov
out
inc
lock
out
push
ret
cmp
lret
sarb
in
fisubrs
es
cmp
test
ds
sub
or
pushf
mov
jne
mov
push
sbb
or
fsubrl
jle
xlat
mov
jecxz
sub
insl
xor
lret
and
aad
das
push
loope
sub
pop
jge
xchg
sahf
jbe
int
ds
outsb
fiaddl
sbb
inc
shll
push
push
int
int3
mov
mov
cmpsb
mov
aad
call
pop
sub
mov
mov
test
imull
jne
inc
and
cltd
pop
lret
adc
or
movl
sub
lret
sub
popf
and
add
ja
mov
xchg
jmp
cmp
inc
lds
ja
or
sub
popa
in
xchg
inc
clc
stc
das
push
shr
sbb
cmpsl
mov
mov
push
call
push
add
popa
inc
lahf
and
mov
xchg
nop
leave
xor
sub
test
sti
xor
xchg
sar
into
cmc
mov
or
stc
mov
xchg
inc
push
dec
lret
jp
je
cmpsl
push
jae
fcoml
xchg
cmp
push
out
add
insb
inc
fbstp
xor
pop
out
and
enter
mov
jae
dec
mov
ja
xchg
and
lods
jns
subb
jns
add
loopne
adc
push
or
mov
dec
xchg
xchg
ja
pushf
stc
movsb
xchg
int3
imul
lods
xchg
jno
or
test
sbb
subl
js
pop
inc
jo
inc
xchg
ret
arpl
ret
dec
rorl
push
sub
aam
enter
add
mov
decl
dec
push
xchg
test
push
and
and
outsb
mov
lahf
rcrb
lret
sub
or
cmpl
out
sub
mov
dec
fldl
mov
std
test
pop
xorb
and
aaa
inc
movsl
scas
cwtl
dec
or
add
repnz
or
dec
mov
cs
shlb
mov
and
inc
inc
or
inc
mov
call
sub
lret
sbb
sbb
out
lcall
test
daa
mov
cmpsb
jno
mov
push
mov
scas
xchg
push
and
out
cmp
jmp
xor
jmp
shlb
inc
insb
jb
iret
scas
arpl
les
popa
dec
mov
out
push
inc
fdivl
inc
out
sub
lahf
mov
in
and
imul
jns
cs
push
cmp
bound
sbb
ljmp
lods
rol
sub
pop
frstor
and
je
mov
pop
js
xchg
sbb
lea
sbb
mov
mov
mov
sbb
and
inc
sti
sbb
popf
and
mov
inc
lret
xchg
int3
mov
or
xor
rorl
mov
jae
xchg
insl
scas
lods
insb
gs
dec
movsb
lock
mov
test
cmp
sbb
xchg
add
jnp
insl
scas
dec
and
push
ss
dec
jno
fstl
test
or
sub
push
sub
lods
lods
mov
sahf
mov
loope
shrl
loop
repz
ficoml
mov
movsb
cli
cmc
outsb
pop
push
scas
mov
sbb
add
and
jmp
addb
ficoml
leave
ljmp
je
push
mov
shl
mov
in
jb
ljmp
sbb
les
mov
notb
stos
mov
or
leave
adc
cmpsl
jle
or
add
mov
push
aam
imulb
xchg
icebp
adc
xchg
dec
fs
sarb
sbb
sahf
sbb
in
fldcw
imul
mov
jl
inc
jb
lea
out
inc
push
stos
xchg
sub
push
icebp
pop
iret
xchg
push
jns
add
aaa
jge
jmp
xchg
out
jns
cmp
iret
jnp
mov
push
stos
lahf
test
pop
mov
add
dec
pop
mov
lods
out
mov
and
insl
mov
push
aaa
sub
cli
mov
sti
shl
or
lds
pop
mov
stos
xorb
imul
sub
repz
test
pushf
cmpsl
fnstenv
loop
mov
lahf
jle
mov
sub
dec
data16
sbbl
jg
ljmp
xchg
imul
das
push
fdivp
push
mov
inc
add
jl
inc
pop
mov
mov
pop
adc
hlt
pop
sub
adc
int3
jo
lods
dec
int3
jo
and
adc
nop
add
iret
mov
fisttpl
jl
in
fidivl
sahf
sub
push
cltd
fs
arpl
mov
pop
jmp
imul
lock
jo
or
dec
movsl
in
pop
mov
lahf
test
mov
enter
xchg
pop
mulb
mov
insb
inc
into
or
sti
int
test
dec
es
jl
pushl
ror
pushf
mov
hlt
mov
test
test
mov
or
imul
das
rcrb
cld
fldl
fldenv
jbe
in
movsl
js
dec
push
inc
xchg
sbb
mov
and
mov
fs
jge
mov
mov
or
nop
call
mov
xor
cmp
insb
call
popl
fnstcw
or
out
ljmp
push
inc
sbb
inc
lock
fcoml
les
loop
out
aam
mov
div
push
insb
in
sub
pop
adc
test
sub
or
mov
sub
sti
and
sbb
clc
jno
ficoml
add
into
lock
adc
lret
mov
cmp
mov
push
fdivs
cmpsb
inc
test
sbb
incl
sbb
enter
ret
jnp
iret
push
mov
and
jmp
shll
mov
movsb
jne
and
and
cmp
pop
and
adc
and
out
in
jmp
daa
fwait
or
push
outsl
mov
sbb
test
in
or
rorb
cwtl
adc
ss
les
add
pop
mov
cmpsl
mov
dec
or
mov
pusha
adc
push
xchg
pop
cmp
jmp
cltd
pop
inc
js
fucom
mov
jecxz
fsubrs
pushf
and
lds
insb
in
cmpsl
scas
addr16
bound
push
add
aas
aad
outsl
or
in
insl
lcall
cli
push
movl
ss
xchg
lds
movsl
fcomip
add
inc
mov
mov
icebp
out
lock
movsl
jne
cmpsb
mov
nop
inc
cmpsb
fs
loop
divb
adc
pop
loope
ss
cmp
je
cmp
pushl
pusha
lcall
cmp
mov
mov
pop
sub
test
add
mov
iret
sbb
cld
ret
fs
sti
mov
lahf
aad
jnp
xchg
outsb
inc
inc
popf
xchg
cmpsb
push
je
clc
push
pop
adc
enter
or
pop
jbe
nop
mov
stos
xchg
ds
xor
shrb
repnz
sub
popa
bound
adc
xor
inc
adc
fsubrs
push
cmp
inc
out
push
adc
scas
adc
mov
xor
cwtl
jmp
xor
sbb
sub
movsb
out
shlb
fs
into
popa
inc
cmpsl
sbbb
test
cmp
xchg
repz
jp
scas
xchg
inc
adc
fs
mov
pop
data16
in
mov
push
xor
lret
adc
sbb
mov
add
push
outsb
out
jmp
cmpsl
mov
insb
add
or
xlat
sub
icebp
pop
rcrl
and
mov
xchg
jmp
mov
cmp
push
repz
fdivl
dec
jb
jge
sbb
xchg
out
gs
out
dec
loop
clc
call
inc
xchg
jl
or
fstpl
bound
test
xchg
arpl
sub
pop
pop
xorw
js
frstor
je
pop
sbb
xchg
mov
adc
or
or
xchg
mov
test
nop
enter
pop
dec
and
mov
jle
in
addr16
xchg
add
shll
cmove
in
test
pushf
repnz
or
and
aas
pop
sbb
cltd
mov
inc
push
lock
dec
sub
mov
jns
pushf
pop
iret
or
int
scas
sub
stos
jg
push
mov
xchg
arpl
leave
mov
insl
aad
adc
mov
enter
jo
cmc
and
jecxz
pop
mov
cmc
mov
fwait
jle
or
stos
cmp
dec
lret
sbbb
jl
sbbb
nop
mov
test
inc
cmp
add
sub
push
in
fdivrl
dec
ret
cmp
sbb
cs
repz
push
jne
cwtl
lret
lret
ljmp
insl
sub
xor
rcll
shll
xorb
sbb
ret
pusha
pop
cmp
test
or
cltd
incl
sub
dec
cmp
xchg
rorl
out
and
xor
pushf
push
xchg
repz
xchg
test
les
mov
arpl
or
aas
mov
lock
or
test
mov
push
mov
loopne
inc
test
mov
jp
jae
push
jmp
and
xor
sbb
add
lret
mov
adc
mov
add
dec
fs
imull
adc
mov
std
test
cli
pop
shlb
jmp
mov
jmp
ret
dec
into
aad
xchg
hlt
mov
das
imul
ja
inc
push
xbegin
cmp
mov
mov
inc
and
nop
push
dec
aaa
leave
fdivrs
shlb
in
jecxz
test
cltd
ret
fnstcw
mov
jmp
mov
mov
div
add
push
popf
mov
pusha
cmp
popf
test
lock
xor
test
dec
push
clc
and
mov
in
xor
mov
ljmp
cmc
pop
mov
shr
in
mov
adc
aas
cmp
leave
sbb
pop
out
inc
mov
clc
rorl
and
std
or
cmp
xor
loop
lahf
pop
cmp
or
notb
adc
add
daa
pop
jb
in
jo
mov
and
xor
scas
inc
jmp
xchg
test
cmp
call
lea
and
pop
cmp
mov
sti
cmpsb
sbb
call
add
je
cltd
dec
pop
and
xchg
cmp
in
loop
lods
jno
insb
les
sub
fcmovb
sub
cltd
mov
fsubs
or
cmp
lock
std
movsb
lcall
pop
and
mov
push
popf
mov
daa
nop
jg
out
dec
mov
mov
jne
bound
cmp
movsb
shlb
testl
dec
and
and
mov
xor
lock
pusha
mov
out
push
jmp
or
cwtl
rorl
loopne
pop
das
jl
jnp
xchg
mov
or
fcomps
pop
pushf
jo
popf
and
cmp
into
cld
fwait
test
cltd
or
in
popf
cli
mov
cmpl
cli
testl
cmp
popa
mov
or
cli
cmp
mov
cltd
xchg
sbb
jbe
sbbl
adc
xor
pop
cmpsb
cli
mov
mov
es
jae
xchg
aas
mov
mov
pop
cs
sbb
adc
mov
jecxz
loopne
and
cmp
pop
jbe
repz
xchg
dec
cmc
loopne
je
fs
sub
aam
or
testb
cmp
mov
dec
adc
imul
mov
mov
fmull
cmc
std
dec
pop
fcmovne
lahf
adc
xorb
movsb
mov
sbbl
inc
pop
pushf
movsb
push
cmp
test
and
repz
jg
mov
push
cli
xor
loopne
mov
dec
push
pop
push
cmp
jecxz
sub
daa
cmp
ret
scas
and
push
fcmovu
shll
add
xor
sbb
jmp
cmc
es
aaa
pop
xchg
test
push
idivl
cmpsb
movsl
dec
adc
cmp
jp
cmp
cmpsl
repz
clc
andl
lds
sub
and
data16
inc
out
inc
cltd
repz
jno
loop
xchg
mov
push
jo
add
ficompl
push
leave
rorb
xchg
push
pop
push
icebp
dec
insl
pushf
sbb
jp
into
outsb
fcomps
mov
and
sbb
push
cmp
nop
jmp
outsb
mov
clc
in
cmp
jae
inc
jg
cmpsl
in
sbb
xchg
nop
mov
lock
xor
test
push
jecxz
sbb
popf
clc
and
ss
xchg
pusha
clc
fstp
icebp
push
fdiv
scas
fs
fistpll
dec
jb
fnsave
lahf
fbld
xor
call
xchg
repnz
std
add
sbb
dec
inc
adc
mov
out
cli
mov
mov
mov
mov
sub
addb
xor
stc
jl
xchg
test
and
push
cmp
push
pop
xchg
xchg
jg
xor
pop
adc
push
gs
adcl
sub
pop
int
cmpsl
cmp
cld
mov
xor
mov
or
or
outsl
loop
fldenv
cmp
addr16
mov
ja
xchg
add
xor
sahf
sub
or
adc
add
outsl
into
popa
data16
pop
outsl
clc
mull
mov
loope
inc
loopne
push
movsl
mov
nop
loope
je
mov
mov
mov
sti
dec
aas
xor
cli
lds
popa
fadd
push
xchg
push
ret
mov
out
cs
incl
sbb
jbe
rorl
jbe
pop
xchg
or
call
mov
imul
cli
cmp
add
inc
mov
push
or
mov
repz
xchg
lahf
daa
jo
xchg
clc
les
pop
cmpsb
out
mov
popf
inc
add
fldenv
ljmp
mov
adc
cmc
mov
lea
mov
or
push
pop
int
xchg
mulb
xor
push
and
in
fcoms
pop
mov
sbb
outsb
xchg
js
sti
icebp
testb
fscale
lods
push
mov
pusha
jbe
es
sub
movsl
jmp
mov
jnp
js
lret
mov
xor
jmp
sbb
jns
cmc
mov
hlt
and
icebp
test
jecxz
or
lea
mov
out
push
repnz
xor
js,pn
mov
cmp
inc
pop
xchg
loope
or
mov
and
lret
movsb
in
ss
or
add
mov
dec
out
movsb
clc
mov
inc
mov
xchg
daa
sbb
sub
pop
les
fisubs
jg
fisubl
in
jmp
inc
inc
je
lods
push
xchg
int
cmp
idivb
stc
loopne
jmp
push
inc
mov
stc
xlat
loope
incb
push
pop
popa
dec
pop
push
xchg
inc
push
je
scas
std
fdivrs
lret
sub
or
and
and
loope
mov
pop
mov
leave
es
aad
loop
push
mov
adc
and
mulb
jl
int
shlb
sbb
jb
mov
xor
lods
cmp
aaa
xlat
jecxz
daa
icebp
cli
adc
stos
fwait
int3
cmp
mov
aas
sbb
pop
sbbl
pop
int3
cld
les
andl
jmp
mov
or
outsl
or
push
and
adc
ljmp
rcrl
cld
mov
or
pop
into
int3
clc
fs
push
mov
jnp
dec
ret
xor
and
mov
js
jae
xor
jnp
sti
mov
mov
fmull
adc
ljmp
adc
ds
xchg
mov
mov
imul
out
lds
xchg
sbb
dec
loopne
rorl
addr16
sti
sbb
cwtl
cmpsl
mov
loope
xchg
mov
sbb
testb
call
das
sti
push
adc
movsb
sub
or
lcall
fisubrs
sbb
and
ja
mov
in
mov
fcoms
xlat
push
int
incl
adc
imul
inc
mov
stc
adc
jb
mov
dec
shrb
pop
add
adc
push
jmp
xchg
scas
pop
and
inc
xchg
aam
test
loopne
jmp
jecxz
sbb
sub
add
cmpsb
dec
sub
fstl
ja
add
dec
jg
je
js
pop
jns
and
inc
jmp
mov
jl
xorb
iret
jae
adc
lds
inc
add
push
inc
je
in
xchg
mov
pop
sbb
lock
mov
cmp
push
fmull
adc
aas
push
je
cltd
sub
or
adc
xchg
dec
pop
push
cmp
pop
inc
ret
fwait
xor
inc
jp
mov
inc
xchg
adc
or
incl
inc
and
xlat
inc
int3
and
lahf
pusha
adc
cmp
fistps
xor
mov
sub
adc
add
rorl
add
jbe
push
add
push
imul
jle
insl
out
pusha
dec
adc
push
test
jbe
push
mov
sub
jle
shrb
mov
aad
fdivl
mov
xor
lock
rorl
fnsave
ds
xor
scas
push
sub
adc
push
push
in
mov
cmp
mov
pop
popa
mov
add
jno
pop
lea
xchg
loop
aad
fldt
call
mov
adc
pusha
and
popa
sbb
mov
addr16
xlat
jp
lret
xor
mov
ja
mov
vmread
es
and
movsb
lods
push
xchg
or
add
imul
sbb
adc
push
fsub
mov
jo
movb
cltd
clc
nop
test
xchg
jp
cs
push
clc
sti
pop
jns
insb
pop
cmp
jle
inc
into
aad
scas
mov
sbb
mov
pop
or
jecxz
and
leave
add
mov
insl
pusha
in
testl
cmp
sub
push
aaa
outsl
nop
mov
mov
xor
test
cld
mov
repz
int
push
mull
mov
xchg
data16
jecxz
nop
sub
leave
sbbb
notb
rcll
lret
repnz
push
movsb
addr16
xor
adc
les
into
and
pop
mov
xlat
mov
jecxz
push
loop
in
loope
aas
fstpt
inc
pop
inc
daa
ds
and
xor
daa
sarl
push
ja
mov
jne
pop
mov
adc
ljmp
loop
iret
dec
ret
in
fstl
aam
sub
sub
jns
out
call
out
pop
sub
js
cmpsl
addr16
shrb
imul
dec
popa
repnz
scas
divb
into
shlb
xchg
test
out
jo
push
outsl
cmp
scas
xchg
mov
add
xor
out
scas
xchg
lea
mov
push
jmp
cltd
xchg
add
test
int3
pop
inc
mov
cld
scas
sbb
cmpb
ds
mov
jle
xchg
mov
mov
cmp
arpl
scas
xor
ljmp
inc
fdivr
ret
stos
cmp
les
das
add
push
divb
popf
addr16
inc
cmp
roll
repz
cmpsb
enter
pop
int3
jle
lret
or
sub
inc
js
orl
shlb
sub
pop
fbld
sbb
ljmp
xchg
cmp
fbld
and
xchg
cltd
lahf
leave
in
adc
call
pop
xor
lcall
out
scas
pop
lret
test
addb
inc
jnp
out
insb
add
lahf
jno
lock
xchg
sbb
mov
push
xchg
push
je
cltd
mov
and
pop
pop
adc
cli
sub
inc
xchg
cmp
jo
cmp
jne
in
out
fstpt
and
cmp
mov
jp
notl
pop
adc
sarl
mov
lods
dec
clc
into
sub
and
sbb
xor
jp
leave
int
int3
push
adc
cltd
cmpsl
xchg
clc
outsl
arpl
xchg
dec
mov
mov
mov
int3
mov
mov
fbld
jne
test
adc
call
in
mov
sub
repz
push
popf
mov
add
icebp
shlb
hlt
and
cmp
pop
mov
sahf
data16
lahf
pop
mov
pop
or
cmp
mov
mov
lods
les
or
fisttpll
pop
jmp
mov
jb
jno
mov
pop
insb
je
push
lahf
imul
loop
and
shl
mov
ds
jg
test
ret
xor
xchg
push
xchg
pop
push
adc
and
jnp
lret
and
loopne
adc
jns
movsl
pop
push
dec
pop
in
push
leave
mov
xchg
or
repnz
lfs
insl
pop
cli
jno
jle
sbbl
ret
dec
or
lea
pop
adc
adc
scas
sarb
mov
pop
outsb
dec
xorl
rcl
mov
push
mov
inc
mov
ss
sbb
sbb
je
lret
fs
icebp
pop
aas
and
je
or
addr16
int
stos
in
lods
loope
int
cwtl
imul
inc
xchg
jbe
roll
add
mov
and
addr16
pushf
mov
cwtl
push
addl
cmp
push
das
sbb
cmc
icebp
pop
mov
dec
push
cmpsb
add
add
adc
inc
mov
dec
mov
jnp
mov
fisubrl
mov
pusha
popf
adc
out
cltd
shll
cmpsl
dec
out
ja
jmp
outsl
add
sub
xchg
icebp
jno
movsl
imul
xorb
xlat
je
add
pop
out
xor
mov
stc
mov
xchg
js
mov
mov
popl
inc
add
xchg
aad
mov
cmp
and
mov
lods
scas
decl
ret
xorl
iret
addl
sahf
dec
jno
or
leave
out
or
inc
les
out
mov
cli
mov
xchg
or
test
mov
setns
lds
into
mov
lret
cmpsb
test
push
cmpb
aas
fcomps
sub
pop
fidivrs
vmovntpd
jg
pop
jp
jp
insb
and
xor
or
cmp
jns
out
cmpsl
rclb
subl
push
inc
jo
and
rclb
xor
ja
scas
pop
scas
pop
adc
out
sub
inc
clc
aad
pop
dec
cwtl
daa
daa
rcll
xchg
or
movsb
add
inc
mov
mov
mull
xchg
xor
adc
sub
and
lods
xchg
adc
adc
sub
add
adc
mov
mov
rclb
xorb
cmc
popa
mov
sbb
repz
fimuls
incl
shll
out
inc
pop
jp
testb
fmul
loop
pop
pushf
test
adc
int3
sbb
add
mov
fisubl
push
aaa
and
fucom
mov
sbb
inc
add
mov
sti
outsb
dec
xor
or
cmpsb
push
dec
mov
xchg
pop
pusha
xchg
test
lods
inc
sbb
mov
cmpsb
pop
or
int3
pop
outsl
aaa
cmp
push
adc
sbb
adc
adc
pushf
mov
fs
add
add
add
sti
xchg
or
jecxz
rolb
repnz
ljmp
gs
lcall
pop
cwtl
pop
push
in
mov
mov
sarb
cmp
in
cmp
jmp
dec
adc
and
add
dec
dec
mov
pop
jnp
gs
xchg
pusha
iret
add
push
enter
dec
sub
dec
notl
arpl
int3
push
icebp
pushf
lret
push
cmp
jno
repz
movsb
or
xor
add
mov
inc
push
sub
out
xor
popf
jb
mov
es
add
mov
push
mov
mov
fcmove
pop
lods
mov
rorb
into
mov
cmp
sub
jg
jae
mov
cmovo
and
mov
ja
sbb
jo
sbb
sbb
loopne
push
cmpsl
sub
or
out
sub
out
sbb
or
lds
dec
xor
pop
xchg
mov
inc
das
mov
ret
loop
sarb
orb
dec
inc
pop
ja
daa
and
mov
shr
fs
jmp
mov
and
leave
and
sahf
mov
test
fsub
and
or
cld
mov
xlat
jo
or
cmp
call
je
daa
gs
addl
push
ljmp
insb
adcb
add
hlt
add
sbb
ja
ficoms
xchg
repz
data16
jne
inc
cmp
mov
lret
fdivrl
xor
xor
push
pushf
movsl
dec
call
xor
fcmovnb
mov
xchg
dec
inc
shl
mov
rcll
cmp
sub
and
lock
dec
xchg
lcall
sub
ss
inc
push
scas
sbb
push
outsb
pop
mov
pop
inc
add
int
xchg
idivb
jb
or
out
aaa
ljmp
in
push
int
jnp
mov
mov
dec
es
lahf
add
or
mov
hlt
jmp
jmp
cmp
jae
fldt
bound
in
mov
adc
into
jo
cltd
xor
jmp
xchg
or
mov
sbb
js
popf
mov
and
mov
push
frstor
into
mov
ja
adc
jae
les
xchg
int
dec
pushf
out
or
fcmove
loope
mov
in
xchg
rcl
cs
ss
lahf
test
scas
popl
pusha
cs
jns
mov
or
aas
jmp
divl
mov
xor
mov
push
mov
mov
mov
ret
es
cmp
pop
ret
imul
decw
lahf
cmpsl
jmp
inc
out
push
pop
daa
sub
iret
in
xchg
dec
scas
push
in
rolb
ret
jge
mov
repz
bound
add
jg
addr16
adc
mov
cmpsb
mov
xor
pop
mov
es
or
sahf
aad
xchg
lret
movsb
push
shll
fsubs
sbb
stc
imul
pop
inc
cmc
cmp
lret
or
lds
mov
dec
and
fdivr
dec
push
rcrb
call
int3
ret
xor
rol
outsb
xchg
cld
cltd
and
and
cld
pop
rcrl
testl
xchg
aad
adc
movsl
push
jg
pusha
mov
push
xchg
pop
add
cltd
addr16
xor
lods
repnz
jnp
mov
rcl
xor
cmp
movsl
rcrb
pop
test
aas
xchg
xchg
imul
imul
push
fwait
and
xchg
push
movsl
scas
pop
xchg
hlt
pop
outsl
push
ja
adc
or
pop
jb
cmp
sbb
jns
cmp
pop
fldl
or
jo
cmp
mov
mov
jle
dec
cwtl
les
and
in
jae
xchg
pop
sub
push
out
js
ss
jmp
cltd
sub
les
lock
stc
add
xchg
mov
xchg
add
pop
push
adc
and
mov
repz
addl
jo
jbe
mov
clc
popf
xchg
cltd
jnp
imulb
xchg
lds
cli
and
imulb
aas
and
stos
mov
dec
in
and
jecxz
pop
adcl
xor
mov
adc
adc
sub
add
xchg
rclb
orl
fcoml
cmpsb
pushf
mov
sbbl
cmc
jo
fdivl
jb
adc
xor
xchg
jl
sti
jnp
mov
stos
test
stc
icebp
clc
mov
popa
ljmp
gs
mov
ret
jb
adc
xor
flds
test
cmpsb
mov
aad
pop
lea
pop
mov
push
pop
fs
or
xchg
mov
sub
lock
gs
sbb
shrl
test
sar
nop
jno
mov
cmp
mov
mov
test
xchg
shlb
adc
adc
shl
mov
xchg
shlb
mov
mov
jmp
pop
jmp
push
out
dec
shlb
repz
mov
psubusb
mov
movsb
cltd
inc
sub
pusha
cmpsl
push
adc
xlat
pushf
lds
pop
xchg
ret
gs
cmp
iret
cmp
add
cmp
add
mov
add
sbb
adc
inc
inc
pushf
cltd
push
mov
fisttpll
fnstsw
mov
xorb
out
or
cmp
jmp
in
ljmp
dec
mov
cmp
hlt
sbb
mov
mov
adc
xchg
or
dec
adc
push
inc
lret
cld
int
cmpsl
push
sub
loop
mov
xor
sub
call
in
push
mov
icebp
xchg
sar
iret
cmp
dec
mov
mov
xchg
rcll
inc
cmp
addr16
mov
mov
and
lods
aad
add
aaa
push
cmp
mov
pop
cltd
jmp
frstor
cmp
mov
in
sbb
addr16
mov
cmp
movsl
mov
push
jno
enter
and
icebp
xor
lret
mov
into
dec
push
sub
aas
mov
shlb
scas
ret
add
loop
in
test
sbb
pop
sbb
pop
pcmpgtb
orl
mov
inc
xchg
ret
or
adc
dec
testb
xor
xchg
ljmp
add
xchg
dec
lcall
in
xor
pop
aaa
cmp
movsl
fucomi
iret
adc
int3
sub
jno
mov
pop
sti
aam
jb
imul
cmp
xchg
xchg
xchg
and
jmp
out
mov
fs
mov
inc
mov
mov
push
sbb
push
pop
insb
mov
pop
mov
fucomi
push
mull
cmpb
in
mov
stos
xor
clc
pop
call
cmp
cmc
std
rcrb
and
cmp
ds
push
cmp
cmpsb
sub
stc
sti
jnp
xchg
es
sbb
cmpsb
in
sub
mov
movsl
lds
in
xorl
mov
mov
push
loop
mov
popa
lret
cmp
xchg
neg
jnp
sti
sub
mov
jmp
mov
nop
andl
mov
loop
pop
movsl
xor
divb
cmp
dec
lods
mov
pop
jecxz
jnp,pt
insl
dec
dec
pop
xor
push
stc
repnz
cmpb
movl
xchg
fsubs
xor
ret
cmp
adc
or
and
fcmovb
inc
repz
mov
cli
xlat
xlat
cwtl
inc
mov
xor
lcall
inc
mov
push
pop
or
inc
fstps
fdivrl
test
cmp
insl
jne
and
test
push
movsl
in
int
mov
fidivs
xor
mov
xor
push
add
jl
fldenv
loopne
jmp
xchg
or
sbb
cmpsl
jge
ds
mov
ja
leave
mov
lods
jge
loop
cwtl
mov
aas
fidivrl
push
dec
ret
loope
inc
cmp
jmp
lcall
lock
fbstp
loopne
pop
sbb
aad
cld
in
icebp
jns
clc
jp
add
call
mov
mov
cmpsl
and
jg
pop
addr16
fildll
js
xor
out
push
adc
push
cmpsl
rcrb
sbbl
mov
jbe
push
sarb
loope
mov
xchg
sub
mov
pop
ficoms
xor
and
fucomi
sub
ds
xchg
push
cmp
lret
cmp
iret
mov
add
loop
sub
xor
cltd
cmp
incl
inc
rolb
xchg
int
pop
jge
push
addr16
loope
lea
fdivr
js
sarb
test
imul
daa
mov
and
sarb
sub
je
mov
cli
popf
adc
les
popl
mov
pop
popf
leave
mov
xchg
push
nop
cmp
mov
xchg
mov
notl
fidivs
pop
dec
dec
outsb
lds
pop
add
mov
adc
imul
je
pusha
or
pop
mov
inc
push
mov
imul
sbb
pushf
aaa
inc
mov
in
sbb
fildl
imul
mov
call
fistpl
inc
out
adc
sarb
mov
clc
mov
aam
fcomps
mov
push
aaa
lea
xor
cwtl
mov
jl,pn
xchg
shll
fisubrl
addb
adc
rcrl
adc
jnp
call
sete
mov
mov
cmp
popa
lahf
cmpsl
fimuls
je
push
xchg
and
movsb
adc
movsl
sti
jno
fstl
and
imul
pushf
fs
push
push
fs
icebp
clc
jns
cmp
lret
icebp
xchg
gs
jns
idivb
push
jnp
ds
addr16
into
push
negl
jnp
sbb
lds
out
test
xchg
test
inc
cmp
scas
mov
out
cmp
mov
fs
dec
aaa
mov
icebp
sbb
es
xchg
xchg
xchg
xor
dec
fcmovb
jecxz
cmpb
mov
push
adc
lea
mov
jbe
in
pop
and
dec
js
mov
lods
cld
enter
repnz
stos
test
and
dec
test
mov
mov
mov
cmp
call
pop
pop
push
add
loop
and
mov
push
pusha
cmp
in
cwtl
pop
cli
or
sbb
lea
jecxz
mov
cld
xor
mov
and
data16
or
mull
jns
ret
popa
mov
call
cmp
arpl
leave
jne
lret
int3
insl
fsts
mov
incb
cmp
push
sets
test
bound
push
mov
jns
imul
xchg
xchg
in
jbe
call
pop
push
xor
cwtl
clc
in
pop
ljmp
repz
mov
aas
xchg
or
addr16
xor
xchg
pop
xor
dec
das
jge
jae
mov
sub
jl
dec
in
aaa
adc
repnz
inc
test
jmp
jns
jne
jae
mov
popa
sbbb
lgs
inc
mov
mov
andl
rcr
adc
mov
add
in
lret
sbb
xchg
and
inc
inc
mov
rcrb
add
loope
adc
aad
sti
or
inc
mov
test
jge
sbb
jbe
into
orb
mov
jmp
hlt
pushf
mov
int3
xlat
push
xor
sbb
inc
mov
inc
xchg
std
fs
pop
mov
lret
add
xor
adc
add
mov
ret
loopne
shl
mov
std
pop
add
mov
cmp
das
sbb
clc
loopne
or
insb
pop
pusha
inc
inc
mov
dec
in
subl
ja
pop
push
imul
and
mov
mov
or
je
cmp
lret
repz
js
cli
push
fnstsw
or
inc
mov
in
loop
sarl
mov
imul
rorb
in
cwtl
fildll
movsl
jge
subb
in
mov
pop
inc
es
in
mov
int3
push
dec
mov
andb
add
add
jo
fs
inc
xorl
and
lahf
stc
shl
inc
mov
ljmp
mov
fucomip
push
lea
and
adc
aaa
nop
lret
dec
call
jb,pt
and
push
cli
ret
mov
imul
in
loope
cmp
arpl
pop
fs
and
mov
and
mov
cltd
movsb
mov
cli
lock
mov
test
lods
pop
std
cli
scas
sub
cmp
jae
ret
pushf
jecxz
push
xchg
daa
out
loop
or
in
pop
inc
or
xor
cmpsl
lea
or
out
add
sub
xchg
mov
dec
rcrb
insb
fsts
or
shrb
cli
inc
xor
loop
lds
outsb
jecxz
dec
clc
or
lods
aaa
cltd
fiadds
lret
je
inc
lret
adc
bound
fcmovnu
add
fs
jmp
adc
cmpsl
jecxz
dec
scas
mov
mov
outsl
lock
fisubl
lock
scas
xor
add
rcll
cwtl
pushf
popf
dec
mov
xchg
ds
inc
jo
je
cmp
fcoms
mov
cmp
movsl
dec
or
daa
and
or
stos
repnz
inc
adc
sub
inc
sbb
or
sahf
mov
adc
lcall
xchg
adc
addr16
insb
push
mov
mov
or
jg
in
mov
leave
sub
es
cld
push
test
jae
sub
or
mov
and
sbb
and
mov
cmp
lret
fdivrl
cmpb
jno
or
jmp
inc
push
pop
adc
jp
std
fscale
cmp
or
cld
cmp
popf
daa
cmp
clc
int3
cmp
inc
adc
pop
mov
test
fucomip
mulb
add
jnp
cld
inc
xchg
call
hlt
jno
dec
push
vfnmsub213ss
sbb
imul
js
cmp
jb
jp
pop
shll
rol
adc
pop
lea
std
add
dec
pop
loope
jg
mov
mov
pop
and
pop
and
pusha
xchg
push
pusha
xor
movsl
ljmp
mov
mov
in
xchg
fstpt
and
rep
cvtps2pi
arpl
mov
popa
ror
mov
xchg
add
loopne
add
push
lahf
dec
cmp
jp
and
pop
aas
lcall
xchg
cmpsb
ds
mov
mov
and
pop
jge
push
aad
inc
push
cltd
mov
movsl
and
dec
test
mov
lret
mov
cmpl
sbb
cmpsl
pop
int
les
repnz
inc
xchg
mov
loope
adc
sbb
in
mov
sbb
mov
hlt
mov
flds
ja
push
dec
leave
std
adc
mov
out
mov
mov
dec
xchg
nop
rcrl
in
pusha
movl
mov
jge
xchg
mov
je
and
xlat
stos
std
lods
clc
shll
jmp
xor
repz
fildl
outsb
mov
fwait
adc
push
cld
popf
fstl
sbb
jmp
mov
repz
mov
cmpsb
idiv
inc
mov
pop
out
inc
add
stc
add
into
jmp
xchg
sub
fsubrl
in
cwtl
int3
inc
mov
xchg
or
or
mov
jge
pop
mov
push
mov
iret
dec
adc
aaa
test
mov
popa
movsb
lahf
sar
inc
cmp
mov
mov
sub
lret
imul
in
mov
adc
mov
mov
aaa
gs
nop
pop
iret
negb
sub
inc
daa
pop
call
lret
dec
or
inc
sub
orb
sub
daa
cmp
dec
mov
lcall
jnp
sar
into
xor
fwait
test
jnp
xchg
xchg
mov
in
mov
sub
scas
or
inc
and
mov
sub
cmpsl
mov
sbb
add
daa
andl
pop
lahf
test
adc
mov
cmp
mov
in
inc
push
fxch
adc
add
ret
inc
and
mov
gs
loopne
out
fsubl
jle
aaa
test
adc
loopne
add
xchg
pop
jb
and
les
ret
std
js
cli
sar
jne
push
les
xchg
and
addb
push
lret
arpl
fdecstp
push
jno
icebp
mov
push
stc
or
test
mov
cmpsb
cmp
mov
sub
add
jmp
testb
pop
dec
insb
xchg
and
dec
or
insb
leave
aaa
sbb
sbb
das
add
daa
and
and
filds
push
mov
mov
ret
mov
lahf
testb
stos
aaa
ja
dec
and
ja
popl
test
pmaddwd
js
mov
dec
push
pop
test
es
cld
mov
push
insl
movsb
not
adc
jb
outsl
imul
pushl
loopne
push
cltd
adc
mov
dec
dec
mov
mov
adc
jecxz
adc
aaa
inc
sbbl
cmp
jmp
push
sub
lock
xchg
lock
adc
cwtl
es
mov
jb
iret
jbe
mul
imul
call
adcb
jnp
lea
pusha
setbe
cmp
stos
loope
mov
inc
mov
pushf
mov
xchg
mov
subl
push
sub
sub
test
lock
cld
add
lahf
mov
shl
add
scas
mov
popa
cmp
sub
in
mov
or
sahf
jns
mov
xchg
pushf
mov
roll
push
mov
cmpsl
sub
in
repz
adc
pop
les
fs
and
roll
mov
lret
jne
mov
mov
ret
test
xchg
orb
sub
and
inc
fisubrl
inc
mov
and
frstor
mov
arpl
test
fsts
movsl
sub
or
sub
aaa
cltd
cli
xor
out
jecxz
or
in
rcrb
imulb
sub
aaa
pushl
xor
pusha
adc
leave
push
push
dec
in
rcr
xchg
jle
sub
push
std
inc
xchg
and
xchg
inc
jg
push
ja
aad
inc
jb
inc
mov
stc
lea
std
xor
popa
mov
xchg
cmp
ficompl
push
xor
xchg
sub
or
jecxz
es
fnsave
mov
push
sub
mov
jg
pop
dec
addl
in
adc
dec
cmpl
mov
sub
rcll
imul
or
ja
push
jo
cmc
mov
movsb
insb
cltd
aaa
xchg
add
pusha
ljmp
jecxz
dec
mov
or
mov
js
inc
push
jecxz
mov
mov
or
and
repz
mov
dec
pop
push
xor
mov
add
sbbl
lds
sub
add
sbb
add
and
les
lods
inc
iret
and
sub
loopne
lea
mov
popa
push
mov
fists
in
dec
jb
into
pop
loopne
popa
cld
add
mov
fiaddl
jbe
pop
sub
shrl
dec
out
add
imulb
pop
push
aaa
mov
xchg
pop
fisttps
pop
jo
jecxz
or
jle
xchg
jg
cmp
rcll
test
mov
loope
imull
repz
add
dec
and
test
adc
mov
mov
push
push
push
test
aas
pusha
cld
test
xor
sub
lcall
inc
pop
fcmovnu
fwait
mov
jl
sbb
imul
div
outsl
out
add
xchg
das
or
inc
mov
mov
repz
cmp
jae
setl
cmpsl
jbe
fs
es
push
sti
jnp
add
jle
xchg
jge
adc
push
cmp
out
shlb
jecxz
xor
nop
mov
cmpl
jae
out
stos
iret
sbb
pop
repnz
and
sub
ja
sbb
mov
or
adc
fs
iret
insl
or
xor
mov
sub
add
cli
mov
and
mov
jmp
and
sbb
jae
data16
inc
outsl
insb
loope
fs
fisubrl
in
xchg
loope
or
idiv
push
les
jge
add
mov
loope
cmc
cmp
add
adc
ret
mov
mov
jecxz
shrb
jle
xchg
pop
push
xchg
inc
cmp
adc
icebp
jo
adc
xchg
mov
dec
mov
stos
jp
loop
jae
lahf
xchg
mov
icebp
clc
cmpsb
out
xchg
mov
mov
les
into
xchg
mov
xor
es
movsl
lret
inc
xchg
and
or
ds
xchg
xchg
push
movsl
in
data16
pop
add
and
xor
int
pop
pushf
rclb
cmp
in
jbe
xlat
popf
daa
push
inc
mov
inc
mov
and
or
jg
cli
adc
jae
and
dec
bound
mov
sub
lcall
or
test
imul
stos
adcb
mov
cmp
fcmove
mov
xchg
jo
ja
lret
adc
cwtl
jp
push
test
jae
pop
fiaddl
test
adc
lods
mov
std
xchg
mov
sbb
jo
enter
inc
movsb
movsb
inc
mov
dec
mov
sti
and
mov
and
shlb
es
adc
loope
push
iret
pop
push
lgs
imul
out
xor
dec
sub
ja
and
inc
adc
fst
xlat
aas
and
jge
fistpl
leave
shrb
inc
fs
xor
add
sub
mov
mov
and
mov
and
pushf
xchg
ja
in
and
mov
fisubl
and
cmp
fisubs
pushf
xor
pop
mov
cmpl
orl
decl
lret
insl
les
xchg
decl
pop
repz
ss
pop
pop
adc
and
mov
add
in
orl
pop
mov
int
xchg
dec
mov
cli
es
xor
andb
mov
test
sub
add
xchg
mov
es
inc
shll
cmpsl
sti
xor
jnp
cmp
out
cmp
xlat
adc
sub
fsubrl
fwait
cmp
rclb
push
dec
dec
adc
test
cwtl
stos
imul
gs
in
in
push
mov
movsl
mov
cmc
sti
pop
or
gs
fcmovne
movsb
xor
je
lods
ja
cld
test
lret
xchg
lods
xchg
mov
sub
sbbb
orl
and
pop
cs
rcrb
adc
xor
dec
popa
into
lods
std
hlt
es
roll
dec
cld
push
das
test
mov
sbb
add
mov
mov
test
cli
das
push
jl
mov
and
xor
js
fsubrl
dec
mov
cmpsl
out
mov
add
and
push
test
add
std
nop
mov
cmpb
imul
jmp
in
cmp
orl
clc
rcl
push
dec
or
adc
and
in
add
iret
or
xlat
adc
mov
in
and
loope
aaa
fbstp
cmp
negb
push
mov
daa
pop
ror
and
rep
cmp
adc
shl
addr16
ret
loope
xchg
lds
jl
xchg
jnp
and
push
fldenv
pop
sti
mov
mov
cmp
push
adc
in
adc
sahf
es
iret
sub
pushf
and
sub
cmpsl
push
movsb
hlt
sbb
vunpcklps
leave
test
and
lds
into
inc
and
push
lcall
cmp
jge
push
leave
bound
push
cmpsb
sti
int3
xchg
mov
js
xchg
xor
mov
cmpl
int3
sub
stc
gs
out
push
popl
das
adc
lods
ficomps
aam
and
loop
push
ds
mov
lcall
xor
testl
jmp
fs
int3
add
xor
jns
lods
cld
mov
push
repz
shll
cmp
test
inc
fnstcw
mov
mov
fwait
cmp
faddl
mov
sub
shlb
out
and
fdivl
push
push
das
ret
adc
sub
inc
imul
jne
stos
adc
ja
rcrb
dec
sbb
sbb
test
movsl
sbb
push
adc
sbb
xor
mov
std
and
stos
sbb
xchg
js
push
cmp
cli
mov
mov
es
xor
in
mov
mov
or
pop
ljmp
lods
fwait
cmpsb
mov
cmc
mov
mov
call
or
push
or
add
lods
sti
mov
dec
test
out
outsb
leave
lret
xchg
mov
xchg
pop
mov
push
ja
cld
popf
daa
mov
sub
fstl
addl
jo
stos
fs
and
push
movsb
cmp
test
pop
popa
or
pop
mov
and
push
push
les
insl
in
and
sbb
mov
sbb
push
pop
je
mov
pop
cmc
inc
arpl
jb
mov
daa
mov
and
clc
test
gs
sbb
lret
out
xchg
mov
mov
fs
fiaddl
cmp
xor
adc
sarb
popf
fcmovnbe
or
stc
out
cwtl
subl
xor
fsubrp
push
iret
sub
pop
jle
add
icebp
in
and
inc
in
or
clc
pop
mov
addr16
int
pop
and
mov
xchg
and
imul
fldt
mov
xchg
std
cmc
int3
negl
lods
mov
push
sbbb
inc
dec
lret
out
jns
jecxz
xchg
shlb
ss
pop
push
iret
pop
xlat
lcall
sbb
cmp
jne
jmp
and
xor
or
std
mov
jge
test
pop
ljmp
cmp
mov
adc
loop
es
push
push
adc
repz
xchg
or
fmuls
cld
clc
cli
xchg
push
insl
fs
inc
sbb
adc
dec
cmc
imul
lods
ja
sbb
in
mov
in
dec
testb
push
inc
icebp
sub
std
lods
gs
mov
and
sbb
mov
int3
les
ss
in
mulb
push
xor
repnz
loop
loopne
mov
ret
jb
cmp
mov
rcr
mov
daa
ds
jnp
mov
push
mov
add
mov
stc
dec
ficoml
add
stc
ja
out
imul
mov
sbb
xchg
and
jo
fnstcw
push
push
jnp
xchg
mov
dec
pop
lods
lea
pop
lea
xchg
mov
les
scas
pop
cltd
loop
stos
and
sub
je
lcall
push
push
mov
in
cwtl
mov
inc
jae
aaa
sub
lods
jnp
mov
and
scas
dec
xchg
mov
ret
in
pop
mull
and
popa
fucom
es
in
dec
mov
stc
pop
repnz
push
aaa
daa
push
test
mov
das
aad
ja
jg
fdivl
cwtl
mov
cld
sahf
inc
mov
sbb
in
ret
int3
cmpsl
xor
mov
inc
jmp
mov
push
iret
addr16
xor
lods
mov
orl
inc
jo
mov
mov
jg
pop
push
adc
sbbb
jge
xchg
sbb
sbb
test
and
cmp
inc
fidivl
sahf
cli
pusha
in
es
or
cmpsl
adc
inc
dec
push
or
mov
pop
dec
imul
xchg
adc
pop
cmpl
cmp
dec
lods
loopne
pusha
popf
loop
cmpsb
stos
pop
gs
or
xor
out
aaa
test
dec
push
inc
fistps
adc
js
pop
fwait
lcall
xchg
add
and
in
cld
cwtl
test
xchg
xor
add
push
test
dec
mov
xchg
in
pop
mov
aaa
or
hlt
and
popf
adc
sub
mov
mov
cmp
or
fisttpl
popa
movl
sarb
mov
insb
xchg
mov
js
cmp
js
lods
cmpsb
enter
sub
bound
leave
loop
rcrl
jl
xchg
shl
mov
and
xchg
push
pop
push
inc
pop
out
inc
clc
jle
ss
movsb
sbb
mov
mov
mov
outsl
add
jo
xchg
adc
mov
add
push
into
mov
pop
cmpsl
xor
fcompl
inc
push
cmp
adc
or
push
lea
not
stc
leave
xor
fwait
push
cmpsb
dec
lcall
mov
or
jae
inc
ret
fsubrs
scas
iret
or
nop
lcall
loope
in
xchg
cmp
adc
sbb
jmp
inc
das
inc
cmp
pop
ss
insl
js
idivb
mov
scas
orl
fdivl
fisubl
cmc
fwait
push
iret
arpl
ja
xchg
push
fsubl
cmp
jae
inc
push
les
dec
xchg
movsb
xchg
pop
jo
adc
subl
aaa
test
dec
cmpsb
cli
test
shrb
orb
xchg
test
lea
test
mov
jge
sbb
pop
fdiv
sti
and
fmul
adc
mov
daa
loop
out
inc
enter
rorl
jp
cwtl
xchg
xor
lds
es
idivb
fucompp
pop
jne
loop
leave
lds
adc
mov
mov
inc
mov
mov
icebp
cmp
imul
bnd
inc
pop
jne
jbe
ret
addr16
xor
movsl
sub
mov
lret
insl
scas
cmp
add
add
dec
jno
sub
push
inc
repz
push
push
xor
ret
outsb
xlat
mov
das
mov
dec
ds
jecxz
outsl
mov
scas
call
fstps
dec
ljmp
push
arpl
jbe
hlt
push
gs
dec
xchg
or
test
lock
sbb
pushf
mov
loop
mov
jmp
inc
lcall
mov
insl
movsl
sbb
sbb
imul
in
call
mov
stc
dec
mov
enter
cmp
scas
icebp
mov
loope
pop
push
jle
ja
shrb
dec
movsb
aas
sar
mov
adc
xorl
sub
fs
push
jne
sbb
xor
adc
insl
xlat
xor
or
incb
cld
mov
popf
or
ds
sbb
or
push
push
fcomi
call
rcll
jo
fisttpll
inc
ret
mov
pushf
adc
mov
pushf
repnz
daa
sbb
repnz
sub
cmpb
les
nop
lock
mov
fidivrl
insl
mov
and
imul
and
sbb
push
mov
movsb
stos
push
bound
cs
loope
sub
std
movsl
movsl
stos
mov
adc
mov
lcall
xchg
imull
jge
jmp
mov
test
mov
lahf
ret
cmpsb
pop
jg
in
stos
jne
and
ss
in
test
jl
mov
jmp
mov
cmp
cmpsl
repnz
je
hlt
cmpsb
aas
sbb
mov
sarl
and
pusha
scas
and
adc
mov
mov
fldl
jecxz
pop
loope
mov
sbb
loop
mov
inc
out
dec
xchg
and
xchg
inc
inc
repz
sahf
mov
fstpt
insl
pop
fucomi
insb
negb
xchg
sub
mov
in
rolb
mov
test
test
mov
les
icebp
test
ja
mov
cmp
ljmp
outsb
inc
dec
sahf
jne
dec
inc
rcll
cmp
jae
add
inc
xor
lcall
js
ret
jl
fucomp
ljmp
pop
inc
lret
mov
jecxz
and
testb
xlat
call
ljmp
jg
pop
add
add
pop
pop
xchg
sub
push
aam
mov
jp
movsb
cltd
into
inc
sbb
and
cmp
loop
lds
cmp
xchg
fstps
leave
dec
jae
mov
enter
loope
sub
mov
jmp
out
dec
into
adc
faddl
ret
jl
in
in
sbbl
pop
cmp
loope
ja
lea
xchg
in
rcll
test
test
push
jg
cmpl
out
imul
test
leave
mov
jne
fld1
mov
dec
mov
stos
shlb
loope
pop
jmp
cmp
mov
mov
pop
sti
xchg
fdiv
addr16
push
movl
jo
cld
push
out
add
sub
sub
in
mov
inc
aam
mov
scas
push
lods
pop
icebp
scas
rep
scas
mov
int
mov
outsl
cmp
imul
mov
sbb
pop
mov
and
jge
jecxz
and
inc
cmpb
add
iret
pushf
inc
imul
sahf
es
jmp
imul
out
lret
fiaddl
or
xchg
xchg
push
and
mov
or
pop
and
mov
sub
and
aaa
icebp
pop
mov
sub
imul
mov
or
mov
and
pop
out
xlat
and
pop
add
bt
and
lahf
push
movsl
sbb
or
jmp
icebp
cmp
aam
test
aad
loopne
xor
orl
stc
aad
adc
push
shl
dec
mov
push
sbb
sub
test
fildll
xchg
idivb
jns
rolb
pcmpgtb
insb
int
loopne
imul
or
sbb
lods
test
mov
adc
cmpsl
loope
xor
out
xchg
inc
jmp
out
xor
test
cmp
fadd
int3
jo
imul
jl
clc
pusha
add
inc
jb
xor
ds
fprem1
addr16
inc
sbb
xor
xlat
scas
sti
cld
mov
ret
outsb
mul
dec
or
gs
cwtl
test
clc
je
xchg
sbb
mov
add
cltd
mov
sarl
jl
test
xchg
inc
push
jp
xchg
out
jbe
shlb
in
jg
sbb
popa
sbb
jno
or
ret
mov
add
in
mov
ja
mov
jnp
adc
jp
dec
nop
adc
and
loope
mov
sti
pop
xchg
movsb
mov
sub
cld
lods
adc
insl
xchg
jae
rcrl
scas
jge
push
dec
xchg
jbe
xchg
lcall
mov
push
testl
and
xchg
scas
push
mov
les
scas
mov
loop
subb
cmc
mov
mov
les
dec
mov
and
adc
out
loope
mov
aam
outsl
jae
movsb
inc
repnz
mov
cwtl
inc
repz
lcall
cmp
push
push
push
xchg
and
mov
cmp
scas
mov
xchg
iret
das
jp
bound
jnp
mov
cmp
adc
or
push
repnz
rcl
cld
cwtl
ret
push
sti
mov
xchg
xchg
scas
jle
addr16
insl
xor
div
daa
jb
sub
call
in
xchg
sbb
popa
jne
mov
clc
loope
sub
push
mov
adc
std
lret
aad
rclb
xor
and
sbb
dec
insl
pop
out
fld1
lret
daa
mov
adc
push
jnp
stc
mull
test
mov
xor
lds
and
jno
test
out
push
popa
dec
lock
leave
and
mov
shll
jecxz
xor
fdiv
scas
aas
lret
pop
std
lret
loop
in
mov
push
sub
fadds
lds
daa
fnstenv
or
inc
inc
sbb
fadd
cs
mov
push
cmp
fmuls
jg
jae
mov
jecxz
aad
inc
daa
test
lods
sbb
inc
mov
pop
and
push
repnz
das
repnz
jbe
and
mov
and
repz
inc
inc
xor
test
fdivs
ja
jae
jne
es
cmc
jmp
ljmp
lahf
shrb
dec
push
add
jmp
leave
inc
idivl
fs
pop
mulb
shr
out
jecxz
add
push
mov
fistl
cmpsl
xchg
push
insb
stos
pop
out
mov
cmc
int3
push
xchg
mov
jno
ret
push
xlat
int3
mov
out
cmp
shll
push
mov
lea
pop
mov
and
sub
fimull
adc
data16
xchg
inc
mov
fsts
cmp
insl
xchg
mov
sarb
xchg
sub
xchg
mov
negb
dec
pushl
sbb
ret
sbb
in
enter
loop
out
in
adc
sti
in
je
ret
jnp
addb
xchg
dec
incl
and
jl
mov
out
jp
push
push
mov
cmp
pop
js
scas
mov
bound
push
push
mov
xchg
dec
mov
inc
xchg
xlat
sub
fwait
mov
mov
enter
jne
dec
mov
xchg
lods
cmp
adc
xchg
loope
cmp
or
shll
adc
adc
in
ja
cmp
mov
testl
cltd
sbb
and
movsl
mov
cld
loop
js
out
rclb
cmp
addr16
addr16
or
or
loop
popa
lods
mov
outsb
sub
pop
mov
cld
lds
popa
lahf
jge
sub
sbb
lods
add
sub
cmp
xor
rcll
loopne
xchg
or
or
insb
call
add
dec
pop
repnz
lret
xor
cmp
fbld
outsl
jbe
fidivs
jle
mov
ljmp
mov
mov
vmwrite
aam
cmp
xchg
mov
adc
lret
jns
xor
jb
sbb
and
mov
fcomps
jl
fadds
push
test
xor
xchg
inc
test
inc
adc
jp
push
mov
pop
xor
dec
mov
jl
popf
mov
mov
xchg
sarl
arpl
jo
pop
sub
movsb
dec
gs
gs
cli
repz
lock
cmp
adc
jnp
jns
popa
mov
scas
adc
jp
lret
mov
push
add
cmp
jmp
aas
xchg
int3
mov
pop
and
les
fdivl
or
pusha
scas
rep
fimull
std
nop
adc
imul
mov
lahf
add
es
notb
mov
shl
xor
push
jmp
fcomp
mov
rcrl
roll
lret
insl
dec
add
pop
ja
inc
inc
pop
icebp
lds
aas
aas
ss
mov
lods
cs
fmuls
and
insl
push
xchg
cmp
subl
ret
mov
xchg
cmp
repnz
imul
xor
mov
mov
testl
mov
popa
arpl
daa
mov
stc
loopne
mov
mov
cmp
aas
out
inc
les
jo
popf
xchg
fdivs
push
popa
pop
or
dec
sbb
mov
daa
mov
insl
mov
mov
pop
jb
es
xchg
rcrb
xchg
inc
fistl
xchg
push
mov
mov
mov
insl
jg
inc
mov
xchg
lahf
jg
bound
mov
ficoms
dec
iret
pop
gs
inc
cld
pop
les
jb
es
test
sub
xchg
inc
mov
xor
cld
fistps
push
gs
shr
xchg
ret
test
lahf
test
cld
mov
in
add
call
pop
and
push
popa
subl
repnz
xor
pushf
pop
cmp
sbbb
js
cmpsl
mov
shll
or
mov
inc
aaa
pop
test
sarb
xchg
pop
insb
inc
outsl
notb
lds
xchg
in
test
sarl
push
jne
fistl
adc
xlat
fs
push
lea
pop
dec
push
mov
cmpsl
ja
enter
ret
scas
sub
jmp
fsubrl
inc
xchg
and
scas
pop
test
dec
mov
into
pop
mov
inc
push
sub
sub
stos
cmp
ss
ss
mov
je
and
mov
pop
enter
adc
and
fsubr
inc
jecxz
out
outsl
mov
aam
inc
jecxz
add
jno
or
and
dec
icebp
jbe
mov
push
add
outsl
cmpsl
push
push
cmp
mov
fidivl
sub
sbb
lret
add
cltd
xchg
pushf
fsubrs
mov
push
ljmp
push
adc
push
rolb
stos
fildll
pop
jge
mulb
xchg
in
std
das
xor
mov
lret
clc
insb
xorl
add
incl
sbb
add
xchg
push
adc
int3
fwait
jle
and
mov
lods
fisubl
js
push
sarb
pop
inc
sbb
addr16
or
subb
fwait
xchg
lds
lods
shrl
adc
fbstp
inc
inc
sub
cmp
mov
test
mov
push
popa
cltd
mov
bswap
jecxz
cwtl
js
andl
cld
cmpsb
out
repz
pop
inc
sub
sahf
data16
addr16
cmp
sahf
fisubrl
fnstenv
iret
int3
mov
push
ret
jge
loop
test
lds
and
hlt
xchg
lods
std
insl
notb
adc
loope
mov
or
in
aaa
out
mov
sbb
bound
mov
jnp
out
sahf
shrb
and
pop
ret
add
or
ja
pop
sbb
imul
xchg
sbb
mov
leave
mov
jnp
mov
mov
pop
in
mov
jl
push
dec
inc
dec
addr16
adc
and
fs
out
arpl
sahf
stc
xchg
nop
mov
test
mov
and
pop
inc
cmp
cli
cmp
out
aam
movsb
mov
pop
mov
jo
jb
add
adc
xchg
fldenv
jne
mov
fstl
popa
ret
ljmp
and
dec
call
cmp
adc
mov
jmp
mov
jne
aas
jb
add
inc
stos
addr16
gs
or
jecxz
add
loopne
fnstenv
js
aad
nop
push
jl
cwtl
cmp
addr16
or
stos
out
into
sarb
xorb
inc
add
aas
pop
inc
mov
push
mov
xchg
mov
adc
inc
inc
das
ja
loop
cmp
xchg
mov
out
shll
leave
jecxz
jnp
pop
sahf
and
push
add
mov
movsl
movsl
arpl
push
fdivs
adc
adc
addr16
or
sarl
cmpsl
clc
std
push
lahf
add
inc
xchg
mov
gs
xor
mov
cmpsb
mov
movb
ds
pop
je
cltd
pushf
add
stc
inc
inc
shl
pop
lret
sbb
adc
lcall
jl
mov
imul
lea
push
lock
add
mov
in
out
lods
push
jmp
pop
cmp
test
mov
xchg
xchg
mov
xchg
xchg
pusha
call
icebp
pop
arpl
xchg
das
insl
cmpsl
roll
inc
sbb
mov
jae
push
cmp
inc
dec
inc
cmp
jmp
add
hlt
cmp
xchg
loope
mov
data16
aaa
icebp
pop
dec
adc
pop
and
dec
jns
out
das
fistl
sbb
cmp
push
sub
popf
cmpsb
mov
push
xchg
ja
jg
inc
mov
mov
mov
fisubrs
mov
aam
hlt
mov
xor
or
and
inc
mov
scas
cmp
push
loopne
add
loope
test
ljmp
add
sbb
cmpsl
lock
imul
je
jge
test
jmp
dec
addb
stc
testb
jecxz
pop
pop
add
mov
iret
stos
jns
in
mov
fdivs
xchg
pop
mov
scas
push
subb
dec
mov
mov
pop
inc
popa
and
ds
dec
daa
fiaddl
pop
push
inc
mov
dec
fcoml
and
xor
mov
xor
test
loop
xchg
mov
adc
jmp
dec
adc
cmp
test
into
sub
push
jnp
jmp
fistl
aas
xchg
add
push
or
jle
sbb
rcrl
mov
pop
gs
xchg
pop
imul
movl
push
cwtl
arpl
add
pop
add
add
jecxz
aam
stc
jmp
or
or
loop
mov
mov
imul
sti
test
in
orl
inc
push
or
jnp
mov
cmpsb
push
adc
xchg
inc
pusha
sbb
and
sub
ret
sbb
lahf
hlt
push
sub
stc
test
rorl
daa
dec
dec
mov
in
xchg
sbb
fisubs
mov
fsubp
sar
pcmpeqw
mov
and
mov
popf
addl
cmp
or
add
mov
or
imul
sti
fcoml
pop
sub
loope
cmp
sti
mov
jnp
pop
jmp
sub
mov
pop
out
xchg
sub
xorb
aaa
pop
mov
add
gs
out
and
pop
mov
mov
faddl
shl
pop
mov
fwait
jmp
adc
mov
mov
push
mov
inc
mov
js
xchg
cmpsl
cmp
in
mov
mov
lds
out
mov
adc
cld
and
jns
push
movsb
imul
pop
sub
out
je
mov
leave
xchg
sbbl
mov
mov
mov
mov
mov
adc
flds
cmp
data16
movsb
and
gs
insl
or
gs
jae
loope
sub
jmp
call
mov
cli
adc
sti
jmp
jle
mov
sbb
lea
sub
pop
mov
daa
adc
lods
add
orl
daa
repz
mov
repnz
fnsave
adc
loopne
lret
xchg
push
pop
fisubs
stos
dec
das
in
pop
scas
fsub
mov
iret
out
outsb
out
mov
imul
insb
xorb
jg
pop
lret
push
jne
and
lcall
jbe
or
and
inc
lea
into
cmp
jns
add
jle
daa
fptan
or
push
sbb
push
xor
fs
push
test
adc
test
rcll
leave
pop
ret
ja
jnp
mov
movsl
rcrb
xchg
jecxz
mov
jne
icebp
mov
in
or
fs
xor
inc
pop
ficompl
or
mov
xchg
inc
adc
adc
pop
mov
mov
mov
jl
cmp
push
inc
in
sub
repnz
xchg
add
sbb
imul
ja
xor
test
mov
fcomps
sbb
sbb
mulb
mov
mov
lods
ret
sti
fs
test
xor
clc
jns
fs
pop
aad
jmp
jg
lds
orb
movsb
mov
pop
jmp
dec
lahf
sbbl
mov
popf
mov
jge
and
fisttpll
jl
rcrb
nop
lds
sti
mov
push
xchg
clc
or
es
adc
fisttps
and
dec
scas
loop
jl
pop
popf
sub
and
add
rcll
xchg
loop
mov
push
outsl
js
inc
push
xchg
repz
negl
insb
adc
inc
inc
mov
or
dec
inc
gs
adc
inc
scas
adc
or
stos
mov
scas
dec
xchg
stc
fsts
lret
xchg
add
dec
shll
notl
loope
mov
sarl
xor
lahf
test
in
jge
dec
movsb
repz
cmp
sbb
pop
add
dec
test
std
jno
aam
cmpsb
xor
cltd
mov
clc
mov
sbb
sub
pop
movsl
lahf
xchg
std
inc
cs
js
inc
fs
lods
pop
sbb
call
outsl
inc
pushf
fisubrl
xchg
pop
pusha
and
add
pop
sbbb
dec
hlt
push
jns
mov
into
xor
jae
orl
mov
inc
pop
cmp
fists
or
mov
jns
mulb
mov
arpl
ss
cli
dec
aam
int
lds
fcompl
cltd
push
jg
pop
nop
shrb
cltd
fildll
cs
push
arpl
rcrw
adc
dec
mov
and
mov
and
outsl
insb
adc
outsl
mov
add
movsb
out
mov
jge
testl
into
inc
fidivl
je
movsb
inc
imul
jg
jl
dec
std
mov
das
mov
in
mov
dec
call
dec
aas
fistps
leave
mov
addb
cli
daa
lds
lods
popa
sub
cmp
orb
out
fnstsw
shrb
out
mov
cmp
call
movsl
notl
or
cli
push
inc
xchg
mov
shlb
fwait
jg
insl
jmp
fs
inc
mov
xor
mov
pop
mov
add
or
add
jle
cwtl
lea
mov
mov
push
push
push
mov
push
mov
add
call
lcall
jmp
xor
out
das
hlt
mov
and
mov
es
rorb
jae
fldcw
cmp
adcb
lods
mov
xor
in
cmp
mov
xchg
mov
push
stos
fstp
mov
cwtl
repnz
push
xlat
xchg
sbb
cmp
xchg
inc
mov
arpl
pop
inc
jmp
mov
in
jmp
int
into
addb
int
fstpt
in
lds
cmp
mov
scas
lock
push
nop
fldenv
cmp
push
mov
sbb
fimull
push
mov
sarl
rclb
ret
jle
push
mov
adc
popa
pop
adc
cmp
mov
mulb
and
xchg
dec
sub
add
mov
push
sub
call
cmp
movsb
cmpsb
or
mov
ja
decb
adc
or
mov
dec
and
icebp
xchg
int
lods
lods
jp
decl
or
cmp
in
cmpsb
jge
mov
shll
popa
loopne
outsl
lret
ret
push
xor
fwait
repz
insb
icebp
stos
jbe
inc
imul
and
sahf
lahf
xor
mov
xchg
testl
mov
xor
push
in
pop
jmp
stos
sub
mov
sub
sti
jns
ss
jns
rclb
or
pop
dec
aad
or
xor
add
mov
push
mov
repnz
push
dec
ss
mov
and
inc
or
fsubs
or
fisubl
or
inc
arpl
push
fsubrl
or
cltd
jo
push
jecxz
sbb
gs
dec
rcrl
into
mov
lret
mov
sub
scas
mov
mov
and
mov
mov
adc
test
sbb
addl
scas
sbb
ret
cld
pushf
push
fstps
idivl
pop
addl
or
xchg
mov
xlat
cmp
xchg
mov
test
ret
sar
loopne
ss
or
pop
fstpt
fstps
ret
pushf
xchg
add
jo
xchg
hlt
mov
push
inc
fstl
jmp
inc
adc
mov
or
cmp
mov
aam
jns
sub
sbb
adc
sbbl
sbb
dec
jp
or
fisubl
aas
int3
lods
popf
pop
in
inc
cmpsl
sbb
insl
mov
stos
rorb
xchg
ljmp
cmp
adcb
cmpsl
xor
mov
filds
mov
into
inc
push
pushf
sti
aad
stos
shrl
nop
mov
jne
shl
rcll
adcb
mov
mov
test
loop
push
sub
pop
mov
rcr
xor
cmp
sti
xchg
mov
repnz
fidivs
push
outsb
jne
jbe
ljmp
js
jg,pn
cld
lods
pop
cli
in
sbb
sbbb
xchg
add
sbb
xchg
jmp
pop
mov
leave
push
ds
ja
mov
cltd
xor
call
pop
hlt
jle
mov
add
in
and
int
sti
cmp
xchg
cwtl
out
adc
pushf
lahf
mov
mov
sbb
lcall
lods
ss
mov
add
test
or
or
fcmovnb
sub
std
ds
cli
push
mov
ja
daa
push
push
scas
add
sbb
mov
je
adc
test
mov
adc
inc
or
pop
cmp
xchg
in
xchg
bound
dec
inc
and
adc
inc
gs
or
lea
xchg
sbb
fs
and
pop
outsb
lds
mov
and
cs
out
xor
loopne
pop
rorb
xor
fisubl
or
cmp
push
jmp
dec
lea
mov
sub
mov
mov
call
xor
push
mov
push
fsubs
pop
add
fucom
pushf
mov
adc
mov
faddl
cmp
push
sbb
xor
imul
call
push
jg
fcompl
xorb
mov
jmp
scas
pop
out
fimuls
or
dec
and
jne
fwait
nop
sbb
ds
inc
dec
fisubl
scas
stos
in
xchg
mov
ds
inc
jmp
rorb
jmp
xor
outsb
out
mov
cli
int
call
mov
loopne
out
scas
xchg
andl
mov
adcb
lahf
cmp
test
scas
inc
pop
fwait
or
lods
pushf
sahf
push
cwtl
ds
lds
fisttpl
pop
push
call
repnz
push
test
cwtl
lds
ret
pop
mul
lock
adc
jmp
mov
and
sbb
loope
rorl
sbb
mov
push
lcall
pop
std
jae
icebp
hlt
dec
loope
sub
out
mov
push
sub
bound
fisubrs
fnstcw
mov
mov
xchg
addr16
inc
loope
xchg
in
mov
lcall
jns
and
push
mov
xor
or
pop
loop
outsl
rclb
fs
pop
dec
fwait
iret
xor
pop
repz
incl
loop
lock
xchg
dec
idiv
and
push
decl
mov
cmp
lods
ret
rcll
scas
std
adc
clc
pushf
jae
jne
and
jmp
call
decb
ror
mov
pop
push
mov
and
es
aas
add
jo
push
stos
mov
jmp
stc
lcall
js
xchg
xor
push
push
push
push
ficompl
loop
sub
mov
jb
movsb
xchg
jnp
jge
std
jl
in
sub
nop
mov
add
lret
mov
andl
jge
xor
sub
jbe
pushf
mov
lock
in
xchg
fsubs
imulb
inc
shl
lret
in
movsb
nop
shll
ret
ret
xchg
faddp
enter
push
cltd
aad
lret
jge
cmpsl
and
lods
pop
shl
xor
inc
jb
xchg
scas
aaa
pop
notb
ret
xchg
pop
shl
std
pop
jle
mov
inc
je
out
cli
jo
idivl
adc
out
lret
cmp
dec
mov
jmp
mov
bound
sbb
negb
jle
lret
subl
mov
lods
in
jbe
cmpsb
or
out
cmc
shlb
jge
mov
stos
stc
idivl
shll
cli
dec
mov
gs
mov
xor
push
pusha
xor
mov
ret
test
ret
add
xchg
mov
push
mov
and
cmpsb
int
test
and
orl
mov
and
idiv
cmp
cmp
ret
roll
mov
outsl
cmp
test
pop
ds
lcall
cmpsl
out
es
leave
dec
or
cmpsb
mov
aaa
sbb
adc
sub
xor
xorb
daa
jne
xchg
lods
push
mov
daa
sub
adc
mov
in
mov
cwtl
xchg
xor
cs
pop
fstl
mov
adc
inc
addl
xor
mov
pop
dec
fcompl
es
adc
ja
mov
add
inc
addr16
rclb
xor
xor
sbb
jle
xor
jae
in
xchg
js
out
jle
lods
lods
push
icebp
cld
jp
sahf
inc
call
xor
pop
lock
pop
cmp
loop
icebp
push
cmpsb
les
mov
mov
mov
insl
push
repnz
leave
push
divb
pop
sahf
jmp
ds
cld
cmp
repnz
sub
and
adc
adc
jo
cli
pop
sahf
fimull
inc
stc
xor
ds
loope
adc
add
inc
in
mov
mov
pop
stc
cli
or
xor
dec
fcmovnb
mov
lret
ret
or
leave
push
test
lret
mov
inc
test
aaa
add
adc
nop
repnz
lahf
mov
std
xor
xor
and
hlt
std
or
daa
jb
cmpsl
mov
dec
mov
imul
ljmp
sub
out
mov
addb
repz
out
and
push
lds
cmc
mov
cwtl
lods
aaa
test
outsl
sbb
fs
enter
sub
es
fistps
cltd
xchg
in
inc
adc
cmp
lods
fidivrs
mov
pop
aam
xchg
shl
cmp
rorw
into
pop
pop
xchg
dec
cmpsl
pushf
mov
xchg
insb
fisubrs
jle
pop
xchg
orb
mov
insl
pop
testb
in
lret
flds
lret
xor
mov
mov
in
cmp
call
fisubl
cmp
jnp
pusha
pop
movsb
lret
jl
mov
adc
mov
inc
push
adc
jae
lock
out
out
mov
mov
mov
mov
jae
stc
mov
mov
xor
test
push
aad
mov
test
cltd
sbbl
repnz
inc
ret
test
add
fiadds
add
or
mov
jbe
push
sbb
xchg
insl
icebp
fistpl
loopne
push
push
add
in
adc
in
inc
mov
xchg
popf
daa
push
out
ret
leave
enter
in
daa
lods
fsubr
inc
loop
xor
or
inc
dec
sub
mov
loop
xchg
mov
lock
ds
repz
in
or
inc
cmp
jg
dec
xor
jae
sbb
xor
mov
icebp
jmp
bound
xchg
jno
jp
iret
hlt
push
imul
cmp
pop
xor
sub
jno
mov
dec
cmpsb
xchg
push
or
ds
cmc
pop
lret
sub
int3
sub
jmp
ss
sti
push
dec
dec
mov
dec
in
add
in
sbb
inc
jecxz
js
xor
add
adcl
aas
mov
fsubr
test
push
lds
repz
je
mov
pop
ljmp
loop
push
lret
subb
dec
pop
cmp
or
pop
push
dec
xchg
ss
shrl
lea
loope
movsb
out
out
xchg
pop
push
je
sbb
adc
mov
ljmp
iret
dec
rcrb
sbb
xor
mov
std
xchg
neg
inc
push
mov
imul
jnp
add
mov
add
fnsave
imulb
out
mov
js
aaa
lret
pop
mov
mov
cld
mov
js
gs
or
sbb
jl
cmc
mov
imul
mov
xor
mov
cltd
dec
cld
mov
fdivrs
push
add
sahf
and
lods
or
mov
scas
inc
pop
mov
shlb
mov
das
jmp
arpl
test
lret
leave
fcoms
scas
out
push
icebp
push
push
daa
and
nop
ja
stos
lcall
test
ror
fcomps
jmp
add
inc
sub
loope
loop
lret
ret
and
adc
sub
jecxz
inc
cmp
fucomp
out
imull
mov
les
lods
and
pop
dec
loopne
adc
sub
sub
popa
xor
stc
sti
inc
mov
inc
sbb
dec
push
push
fimull
jnp
test
inc
daa
test
in
pop
ficoms
adc
dec
jns
ljmp
jns
test
cmp
fsubrl
cmc
enter
mov
mov
lods
mov
pop
inc
mov
or
ret
cmp
int
lcall
loope
adc
movsl
dec
dec
or
stos
xor
push
int3
pop
mov
inc
jle
movsl
mov
mov
rorb
xchg
mov
add
jl
mov
adc
popf
cwtl
mov
mov
dec
cltd
xchg
sub
mov
xchg
clc
lds
cmp
cmpsl
xchg
outsl
xor
sahf
stos
xor
sbb
jne
daa
jg
push
das
mov
xor
mov
mov
mov
inc
mov
incb
andb
stc
ds
stc
add
stos
shll
cmp
push
push
rcrl
test
cwtl
or
js
pop
xchg
shr
test
andb
out
incw
pop
insb
aam
sub
cmp
jle
dec
rcrl
std
mov
loope
lcall
loope
push
imul
xchg
mov
cltd
push
dec
ret
aas
pusha
mov
push
mov
push
pop
cli
adc
xor
xchg
cmp
jnp
jl
add
rcll
sbb
xchg
mov
in
jle
fwait
or
flds
clc
fldl
push
std
or
aam
pop
push
es
mov
fnsave
scas
mov
in
fnstenv
or
cmpsb
mov
sub
bound
cmp
cmpsb
mov
add
jecxz
neg
das
jl
sbb
pop
xchg
test
ffree
mov
adc
and
cmp
push
xchg
lret
add
xor
cmpsb
and
xchg
jnp
cmpsb
xchg
mov
lcall
cmp
mov
subl
rorb
push
xchg
mov
dec
aas
and
adc
rcrl
jb
test
mov
cmc
add
movl
loop
enter
sub
xor
or
mov
popf
xchg
mov
nop
lea
lret
push
xor
jge
push
push
dec
jb
mov
mov
cmp
in
jge
xchg
pop
xchg
ret
repz
mov
mov
test
jb
and
lcall
mov
jo
data16
ja
shrl
cmpsb
sarb
mov
aas
jb
and
dec
mov
incb
dec
mov
fs
mov
push
std
and
jge
cmpsb
jp
mov
xor
lea
out
xchg
sahf
loop
mov
push
shrb
cs
andl
in
test
mov
data16
mov
cmp
xor
and
lar
dec
jno
jp
mov
inc
into
dec
mov
xchg
mov
imulb
push
dec
inc
jecxz
add
lcall
mov
sub
insl
jp
mov
mov
jecxz
push
mov
cli
bound
loop
or
test
add
stos
jbe
mov
sub
lods
lret
repnz
jns
repnz
inc
shl
jg
cli
cmpsl
mov
xor
mov
out
stos
jbe
lret
outsl
cmpsb
cmp
enter
xchg
popa
data16
inc
fdiv
jg
mul
mov
rcrb
fcmovnb
arpl
test
jbe
mov
rclb
or
cltd
pop
rorl
fimuls
push
adc
lock
cld
mov
es
sbb
mov
clc
int
mov
xor
pusha
insb
push
out
mov
dec
in
mov
pop
lock
int
repz
in
xor
lcall
add
ja
add
rcr
dec
mov
and
mov
ret
xor
ficomps
mov
lds
or
mov
lds
cmp
in
movsb
aam
popa
jmp
sbb
cltd
je
cmp
add
fisttps
pop
push
test
jne
add
std
ds
movsl
cltd
sbb
out
mov
fimuls
jmp
fcmovnb
add
pusha
lock
fimull
lock
andl
add
jo
or
sbb
sub
add
lds
mov
int3
or
and
add
xor
lods
cmp
in
lock
pop
add
arpl
mov
mov
sub
xor
lods
sub
dec
cmp
push
sub
push
ror
int3
push
dec
xchg
loop
rorl
mov
push
xchg
adcb
mov
je
add
push
cmp
mov
xchg
xchg
push
lods
cmp
jbe
mov
mov
jns
inc
stos
inc
flds
mov
mov
scas
dec
scas
faddp
fists
pop
outsl
movsl
mov
js
add
or
hlt
push
sbb
mov
mov
test
loopne
and
sti
adc
add
push
stc
inc
sar
push
xlat
test
je
out
sbb
add
dec
add
clc
clc
pop
fldenv
jl
mov
pusha
mov
data16
mov
add
mov
cld
mov
in
sbb
loopne
mov
mov
push
ja
divb
cwtl
shrl
adcb
xor
cmp
in
jg
test
mov
not
push
mov
into
mov
xor
push
clc
xchg
sarl
lret
vandnps
gs
ret
sbb
add
adc
lahf
lahf
inc
loop
out
jl
mov
stos
mov
adc
into
movsb
inc
lea
inc
xor
dec
xchg
loop
shl
repz
test
xchg
cs
mov
add
or
mov
in
aas
pop
fsubp
bound
push
mov
aam
mov
into
cmpb
xchg
jo
fsub
dec
pop
cs
addb
clc
fcom
dec
push
jp
and
fidivrs
jl
xchg
popl
hlt
jbe
clc
xor
sub
xor
mov
mov
dec
mov
mov
repz
mov
mov
pop
rol
iret
jns
clc
jp
mov
movsb
leave
dec
aaa
sbbl
inc
gs
daa
lret
in
into
aas
arpl
imul
jno
in
xor
mov
xchg
inc
mov
divl
gs
scas
cltd
push
xchg
in
mov
jecxz
shr
inc
or
repnz
mov
cmp
in
pushf
cmpsb
add
es
negb
shlb
aam
out
inc
mov
cltd
cmp
loope
mov
in
int
sbb
xor
push
mov
inc
outsb
xchg
int3
mov
mov
mov
jge
imul
or
push
push
test
stc
xor
data16
mov
pop
or
orl
dec
pop
sub
mov
pop
push
inc
roll
nop
repz
fistps
scas
pop
cmp
and
popf
push
or
dec
xchg
sahf
inc
add
mov
push
push
sub
jno
xchg
mov
jle
scas
in
ds
ds
movsb
pop
call
leave
cs
cwtl
test
and
test
out
xor
mov
inc
dec
sbb
ljmp
lret
inc
cld
add
xor
push
ret
cmpsl
ror
xorb
pop
mov
stos
es
mov
mov
pop
cld
mov
inc
rolb
pop
pushf
pusha
movsb
cld
stos
les
pushf
pop
aas
stos
cmpl
cmp
adc
cmp
cwtl
mov
cmp
test
xchg
out
cmc
mov
pop
jmp
aas
adc
dec
and
cmpsl
adc
mov
iret
pop
adc
push
orl
adcb
fisubrs
mov
rcrb
stos
movsl
lahf
fildl
in
inc
mov
adcb
adc
cmp
fwait
test
jle
mov
cmp
dec
xor
fwait
shr
push
out
in
sbb
cmpsl
outsl
inc
outsl
mov
cmp
add
and
clc
mov
dec
jb
hlt
aaa
mov
jnp
fsubl
insb
out
shr
jle
out
mov
arpl
xor
cmp
jle
stos
mov
out
loop
orl
int3
repnz
cs
into
push
out
sub
into
cmc
cmp
cmpl
inc
dec
jle
loope
aaa
out
cs
cmpsb
in
sbb
push
testb
push
sub
mov
fcmove
jb
sti
movsl
sub
int3
sub
mov
cmpsb
inc
mov
repnz
mov
rcl
leave
add
inc
and
cs
adc
add
mov
add
cmp
adc
lods
in
fisubs
lret
cmp
adc
arpl
push
shll
and
rol
mov
xchg
scas
cmp
das
cmp
int
out
fcompl
leave
data16
ss
movsb
stos
iret
ss
mov
xchg
scas
test
jbe
mov
jp
or
sub
sti
test
pop
repnz
add
cmp
adc
sub
shr
iret
mov
push
pop
mov
icebp
add
cmp
xchg
jp
pop
cmc
jbe
xor
adc
ret
iret
cs
hlt
lds
repnz
mov
shlb
scas
jl,pt
in
or
inc
icebp
sahf
mov
in
fwait
or
fdivs
popa
adc
test
out
or
jmp
sbb
std
cwtl
xchg
and
rol
pusha
fs
test
xchg
stos
clc
insl
popa
data16
mov
ja
sub
xchg
mov
adcb
mov
loope
and
lahf
push
cld
sub
mov
out
adc
lcall
shll
ljmp
xor
mov
mov
test
inc
xchg
stc
inc
push
lea
sbb
cltd
movsb
cmp
mov
add
mov
or
fbstp
out
je
mov
inc
lea
lcall
arpl
push
jb
insl
and
pop
push
mov
or
arpl
push
lahf
fnstsw
les
mov
fsubrs
mov
bound
push
inc
int3
out
jb
mov
pop
and
lock
adc
cltd
push
int
cmp
xorb
mov
lret
cmpl
add
xor
daa
icebp
mov
xchg
xchg
cs
push
push
loopw
cwtl
push
lahf
pop
mov
lea
popf
mov
fstpt
push
xor
or
aam
push
adc
aad
mov
popl
push
repz
rclb
sbb
out
leave
ret
out
cwtl
sqrtps
mov
jnp
lret
ds
aad
mov
rcrl
or
dec
mov
or
dec
push
push
test
mov
mov
popf
sti
movsb
out
mov
push
dec
pop
lds
add
lea
jmp
call
mov
popf
cmpsb
cltd
sbb
lahf
pop
stos
mov
pusha
fiadds
sub
ret
pop
test
xor
cmpsl
jp
xor
fs
dec
add
lahf
push
stc
call
punpckhbw
push
movsl
mov
fld
sbb
es
mov
test
jne
add
rcrb
lahf
pushf
jnp
repz
dec
sbb
es
xchg
mov
add
outsl
nop
pop
addb
sahf
stos
cs
test
lods
xchg
or
add
lds
and
xlat
test
lods
add
fisttpll
mov
ret
movsl
cltd
nop
mov
cld
push
push
push
xor
in
shlb
mov
scas
fnstsw
add
lcall
mov
pop
aas
loopne
pop
and
add
fiadds
push
fistpll
cmp
rclb
lea
adc
xor
jmp
outsl
insb
inc
ja
fwait
lcall
imul
dec
push
clc
stos
jnp
add
outsl
cmpsl
xor
push
rol
test
xchg
lds
mov
test
inc
lret
add
gs
add
sub
test
std
add
cltd
inc
xchg
test
xchg
or
ja
mov
test
jae
nop
addb
xchg
xchg
call
and
scas
lret
push
iret
movsl
sub
mov
das
fistpll
das
nop
lods
cwtl
es
lcall
push
js
adc
mov
addr16
movsl
cmpsb
xchg
push
xorl
jns
or
out
jge
mov
das
adc
rclb
jo
iret
jge
pop
inc
pop
lds
lods
push
jge
mov
mov
lods
jecxz
jns
adc
mov
push
fcomps
daa
dec
sub
bound
jns
cld
xchg
sbb
pusha
cltd
sub
imul
or
pop
push
test
sub
inc
and
and
adc
jne
or
pop
push
and
adc
popa
andl
cmp
mov
cltd
mov
cmp
lock
cmp
ret
lret
sbbb
fmull
push
xor
mov
push
inc
and
fisubs
rol
mov
mov
lahf
xchg
jp
fcompl
inc
call
andl
dec
jle
cmpsb
dec
ja
mov
mov
aaa
adc
inc
test
fimull
pushf
and
lods
add
mov
mov
andb
mov
lods
pop
sbb
scas
out
xchg
mov
insb
test
jo
adc
ja
cld
push
lahf
scas
jb
shl
hlt
sbb
out
xor
mov
sbbl
sbb
mov
cwtl
mov
mov
push
shl
mov
and
aas
imul
mov
dec
div
cld
mov
fbstp
out
xchg
cwtl
push
sub
mov
lds
popl
adc
sub
dec
cmpsl
lds
fnstsw
sbb
jns
cmpsb
outsb
sbb
cmpsl
jae
aaa
call
xor
into
rcll
addb
std
mov
mov
popf
cmpsb
loopne
aas
xchg
inc
out
mov
test
mov
cltd
xchg
scas
jnp
xchg
push
mov
lods
jo
adc
scas
sub
fldenv
stc
sbb
push
xor
insb
scas
mov
cmp
ret
mov
mov
jecxz
add
filds
fistps
mov
mov
notl
mov
add
push
rclb
ret
lock
ret
add
mov
shlb
add
test
scas
popf
dec
add
lahf
mov
mov
out
popa
leave
ja
loop
xchg
or
pop
pusha
icebp
mov
mov
into
mov
test
popa
pushf
fistpll
repnz
aad
xchg
sar
adc
sarb
dec
jecxz
dec
enter
cld
jmp
sub
push
ds
cmpsl
adc
mov
repnz
into
stos
mov
or
adc
xchg
rol
xchg
push
mov
iret
ds
inc
cld
mov
cmp
sti
mov
cs
mov
outsb
jp
stos
inc
repnz
repz
and
sbb
mov
xor
mov
pop
cmp
test
popa
cmpsb
xchg
sub
push
out
dec
dec
cmp
xlat
mov
in
mov
mov
push
jle
pushf
outsl
xor
fcmove
mov
push
cwtl
xchg
mov
mov
pop
add
scas
mov
lock
lahf
lods
sbb
rorl
iret
fimull
mov
adc
loopne
imul
sub
jnp
jne
hlt
test
adc
scas
sbb
out
jbe
mov
mov
or
mov
psubb
in
lds
scas
icebp
mov
jge
pusha
mov
cmpsb
leave
outsl
add
or
push
cmp
inc
sbb
fwait
mov
and
and
sbb
movb
add
inc
xchg
sbb
adc
sbbl
jl
pop
mov
fstpl
imul
movl
pop
sbb
loope
mov
sub
stos
jnp
add
xor
jnp
pushf
cli
clc
stos
add
mov
add
cwtl
pop
hlt
in
mov
pop
inc
mov
or
add
lods
xchg
and
fsubl
ss
in
pusha
and
ljmp
push
and
ss
xor
xor
xor
pop
xchg
push
cmp
test
hlt
fwait
leave
add
lods
in
fmuls
das
aam
mov
lcall
movsb
jno
shll
xchg
ficomps
push
mov
cmp
mov
ret
push
in
shlb
mov
imul
adc
jmp
ja
ljmp
sbb
mov
fbstp
cltd
fildl
shlb
pop
push
aam
imul
and
imull
xchg
imul
sarl
jae
mov
adc
mov
andb
ljmp
or
pcmpgtd
mov
pop
mov
mov
stc
mov
lods
paddsw
scas
mov
testb
fdivrl
cwtl
subl
sti
fcmovu
fmull
loop
cld
add
test
in
sub
popa
or
add
test
test
xchg
and
jp
jno
xchg
les
in
cltd
movsb
mov
mov
push
jne
jl
aam
jns
popa
xor
roll
sbb
push
and
ss
loop
cmp
jns
sub
and
xor
stc
and
inc
cmp
cmp
mov
inc
fisubrs
add
jmp
sbb
fmuls
mov
inc
nop
cmp
jns
jl
fcmovnbe
cmp
adcl
sbb
mov
mov
hlt
jns
sahf
iret
and
pop
test
adc
cld
rcrb
dec
add
mov
loope
xchg
pop
mov
sahf
stos
dec
rcl
out
adcb
in
enter
aad
jno
cmp
mull
xchg
mov
xlat
push
push
shll
cs
xchg
mov
lods
jns
pushf
lock
fucomip
add
push
fdivrp
mov
and
mov
adc
mov
loopne
stc
mov
fwait
inc
ret
inc
xchg
adc
roll
xlat
xchg
outsl
aas
sbb
and
xchg
std
adc
movl
mov
fildll
adc
xchg
rorl
movsb
loop
jae
jbe
push
mov
fidivrl
mov
mov
inc
out
loop
push
popf
sbb
sti
sarb
stos
mov
rclb
xchg
icebp
sbb
or
add
popf
cmc
push
mov
push
mov
pop
aad
jbe
mov
cmpsl
xchg
mov
xor
fdivrs
shll
mov
inc
jle
jno
idivb
xchg
add
mov
leave
jp
push
lods
jge
add
lock
enter
movsb
out
mov
or
mov
enter
mov
shll
out
in
jle
mov
in
incl
sbb
rcr
shll
mov
fisttpl
sbb
ret
int
mov
leave
mov
rol
inc
hlt
mov
add
and
ficomps
adc
add
push
cmpsb
mov
mov
ret
mov
out
int
fidivrs
pop
sub
pop
xchg
clc
or
fwait
arpl
push
inc
sbb
mov
dec
mov
cmp
pop
clc
cmp
sarb
pop
sub
mov
scas
xor
mov
hlt
out
movsl
jge
inc
fidivrs
test
movsb
jno
mov
std
ljmp
fldl
mov
fsubp
mov
jns
inc
punpckldq
sahf
mov
cmp
push
adc
and
loope
xlat
mov
mov
push
jmp
ret
dec
mov
dec
inc
fidivl
lods
out
and
xorb
imul
test
mov
jl
lea
shrb
divl
arpl
mov
push
push
sbb
mov
out
inc
mul
stos
add
clc
mov
loopne
test
pop
sub
lock
aas
mov
aas
xor
mov
addr16
inc
mov
imul
in
fcmovu
lahf
cmc
js
sar
or
fcmove
sub
or
ljmp
sbb
fidivs
sub
int
fistpll
aam
push
enter
sti
divb
xchg
sarl
mov
int
mul
les
mov
out
adc
sbb
mov
out
push
icebp
fcmovnu
ss
les
mov
mov
lahf
mov
imul
fsubr
popa
testb
xor
inc
lahf
jl
aaa
fildll
sub
xor
mov
xchg
inc
xor
fldenv
mov
scas
push
xor
pop
stc
xchg
and
cwtl
cmpsb
cmp
xor
outsb
mov
test
mov
mov
xor
fwait
add
loopne
push
fwait
out
mov
mov
imul
dec
xor
xor
or
int3
push
lret
cli
add
push
mov
je
ljmp
stc
inc
xor
push
mov
sti
mov
and
mov
adc
dec
cmp
les
in
cmpsb
sbb
push
test
fidivrl
daa
cmp
out
push
xchg
nop
iret
es
test
out
daa
in
adc
ret
out
jno
xchg
out
std
repz
xchg
mov
and
pop
stc
jbe
pushf
dec
cmp
les
in
push
sbb
out
mov
fsubl
out
lcall
repnz
mov
cmpsl
test
mov
ret
enter
cmpsl
mov
das
lds
enter
jecxz
jp
jl
jo
sarl
and
imul
lcall
add
iret
out
cmc
fwait
jae
pusha
stos
sub
ljmp
out
xor
or
outsl
mov
sub
fisttpll
fs
lods
lods
cmc
mov
mov
add
jle
mov
mov
xor
jle
mov
and
jge
int3
jecxz
jle
mov
xchg
aad
jecxz
pop
sub
mov
shll
stos
lahf
push
jge
jno
pop
clc
enter
add
xchg
nop
and
adc
icebp
fnstsw
mov
pop
clc
int3
push
js
dec
push
stos
sbb
sbb
cmp
sub
jo
fisttps
xchg
cli
xlat
push
jmp
mov
pop
rep
xchg
jns
xchg
xchg
fisubrl
push
push
add
xchg
andl
gs
mov
pop
push
push
enter
jle
jo
xchg
push
sahf
push
mov
cmpb
lds
loop
mov
test
sub
int3
pop
in
inc
testl
outsl
xlat
mov
fwait
and
jne
and
and
mov
icebp
ror
fwait
in
jp
andl
aas
ds
nop
popa
decl
bound
pop
lds
cmp
dec
mov
mov
outsb
pusha
out
xchg
mov
fwait
mov
out
mov
cld
loope
sub
iret
hlt
push
mov
cwtl
xlat
jl
cmc
lahf
jge
xchg
adc
xchg
mov
sti
push
push
loopne
lret
pop
das
mov
scas
ljmpw
add
mov
mov
test
xchg
loop
std
sti
loopne
adc
mov
adc
shrl
es
mov
fldenv
cwtl
push
movsb
push
xchg
cltd
xchg
push
je
es
xchg
test
fistl
into
mov
mov
cmpsb
push
dec
clc
ss
adc
add
arpl
jo
mov
std
movsl
or
repz
cmp
iret
loop
movsb
rcrb
js
sbb
lret
dec
and
sbb
rcll
arpl
mov
pushl
mov
push
cld
test
push
mov
dec
add
pop
cmp
cwtl
movsl
xchg
sbb
and
jge
cwtl
inc
ds
fistl
stos
sbb
adc
lods
mov
mov
je
pop
xchg
ficoms
jmp
or
pop
inc
mov
das
sub
sub
jl
ror
add
mov
gs
jp
ds
popa
mov
and
stos
pop
and
cli
lret
ror
jnp
popf
test
and
insb
push
sub
test
cmpsb
dec
push
loope
insb
ds
decb
cmpsb
cmpsb
pop
inc
loope
dec
mov
in
mov
inc
dec
push
and
aam
jg
and
dec
cs
aad
jp
dec
call
es
outsb
fisubl
xlat
shll
scas
jb
inc
std
dec
jecxz
orl
in
lds
loopne
lds
sti
inc
xchg
push
push
add
push
add
mov
aad
pop
xchg
and
mov
mov
js
in
aaa
adc
and
test
pop
gs
rclb
shr
fdivr
jmp
xchg
loopne
xorl
cmp
insb
cltd
stos
add
call
mov
mov
and
inc
xchg
pop
push
outsl
mov
dec
cwtl
jecxz
icebp
js
sbb
outsb
in
popa
fldcw
mov
adc
fistps
push
lahf
rolb
and
xor
mov
and
push
je
add
cmp
cmp
add
mov
test
stc
fs
movsl
enter
orl
loope
adc
xchg
popa
or
incb
push
loope
mov
push
jl
cmp
xor
lret
out
aad
sub
mov
setno
mov
or
mov
dec
repnz
mov
rcll
lahf
jge
data16
mov
ret
add
jbe
adc
fst
sbb
mov
ret
add
imul
cwtl
mov
dec
mov
aam
call
jmp
gs
dec
sub
and
loope
jnp
xchg
fldenv
sahf
repnz
and
sti
andb
push
andb
data16
push
dec
cltd
into
or
scas
push
adc
ss
xlat
adc
jge
fwait
mov
movsb
pusha
lcall
outsb
imul
lcall
jmp
ror
mov
or
push
rcr
mov
sbb
cmp
sbb
out
nop
mov
cs
ror
outsl
xchg
sti
testb
fdivs
loop
push
fldenv
lahf
xchg
out
sahf
lds
call
xor
cld
add
andb
data16
ljmp
sbb
jle
cli
in
mov
sti
mov
scas
shlb
mov
jae
inc
cmp
mov
and
add
cmpsb
popf
mov
sbb
push
mov
sbb
int
leave
inc
in
dec
or
cmp
mov
mov
dec
fisubl
scas
aad
lcall
push
leave
loope
lahf
lods
test
xchg
ss
in
iret
push
ja
pop
fwait
loopne
mov
pop
lretw
pop
mov
out
pop
mov
fsubr
pusha
xlat
lea
jl
cmp
add
sbb
cwtl
insl
pusha
imul
add
lret
mulb
lret
push
inc
mov
nop
mov
std
inc
mov
sbb
jb
divps
call
pop
jbe
inc
sbb
mov
ja
insb
lret
iret
cltd
int
sbbb
mov
inc
pop
pop
and
inc
sarl
call
out
test
xlat
mov
jl
xchg
jmp
lahf
push
or
push
out
mov
inc
or
or
mov
stc
sbb
push
push
imulb
and
adc
push
pop
adc
mov
ret
rcrl
push
jno
push
rol
fnsave
in
in
cmpsl
enter
inc
jo
popa
push
ret
data16
fstpt
imul
cmpl
outsl
xchg
subl
pop
addb
lahf
sti
mov
add
mov
jge
ficoms
fs
inc
sbb
and
scas
mov
xlat
bound
imul
mov
mov
mov
inc
or
filds
addr16
push
stc
push
ret
ja
cmp
mov
dec
lahf
inc
jl
gs
lret
add
push
dec
pusha
pop
pushf
aas
push
mov
and
or
shll
in
add
and
pop
out
sub
stc
addb
out
popa
rcrb
movsl
jo
inc
sub
movsb
pusha
jbe
cmc
popa
fcmovnu
cmc
pop
pushf
jo
mov
add
scas
fstl
sbb
dec
inc
and
jno
xchg
and
lahf
outsb
sbb
push
adc
xlat
pop
subl
repnz
in
in
loop
rcr
mov
mov
adcb
xchg
ret
fldenv
in
inc
xor
les
mov
inc
outsb
push
inc
cld
mov
cwtl
xor
inc
sbb
adc
in
inc
leave
imul
outsb
mov
lcall
add
xchg
lahf
out
jl
aam
in
cld
fiaddl
sbb
inc
push
push
dec
mov
mov
xchg
mov
lcall
mov
mov
pop
push
pop
fwait
mov
cwtl
cmp
xlat
ljmp
add
fsubr
cmc
xlat
cmc
test
pop
add
orl
inc
add
push
daa
out
xchg
andw
loop
push
and
sub
xlat
adc
mov
cltd
mov
in
popa
adcb
cli
cltd
adc
ret
push
sahf
xchg
sti
cmp
shrb
inc
jb
push
or
daa
out
xlat
gs
mov
aas
push
lds
pop
pop
inc
mov
lods
jo
add
xchg
pop
fisubl
enter
sub
sub
inc
sahf
adc
inc
pop
clc
test
cltd
mov
jo
je
xchg
or
push
not
xchg
mov
aas
inc
lahf
inc
sarb
movsl
rol
out
and
fbld
popa
push
cmp
jl
and
inc
mov
push
popl
shlb
lock
cmp
stc
movsw
insb
sub
lcall
repnz
push
add
xchg
data16
push
in
stos
cli
popa
les
dec
cmp
mov
cmpsb
dec
je
lcall
lahf
mov
inc
mov
lock
stc
pop
scas
xchg
mov
pop
adc
sbb
mov
movsl
iret
aaa
push
dec
fs
movsb
mov
stc
mov
out
inc
adc
loop
ret
fcmovb
sbb
aaa
adcl
pushf
push
loopne
xchg
test
xchg
add
jae
jg
jg
dec
inc
push
or
movsb
outsb
in
leave
jg
fcoms
cmpsb
pop
sahf
fisttpll
nop
fldcw
mov
cmp
in
fsubs
popf
cwtl
dec
test
jle
mov
adc
sti
mov
mov
sbb
lcall
lahf
stos
data16
mov
negl
in
inc
and
adc
push
cmp
dec
push
xchg
imul
sbb
dec
and
cmp
push
in
lret
cmpsl
test
push
jl
mov
sbb
xchg
ret
addl
test
and
shlb
jle
scas
cmpl
sbb
push
jbe
sub
push
leave
lret
mov
scas
arpl
adc
lcall
daa
push
xchg
repnz
sub
push
push
mov
cld
es
shrb
and
mov
fisubs
adc
mov
xchg
aas
pop
decl
daa
push
iret
xchg
cli
mov
fisubl
mov
xchg
jl
xchg
mov
and
sub
arpl
negb
rcll
scas
dec
jbe
stos
data16
decb
test
and
cmp
adc
in
pop
sti
test
and
mov
shlb
adc
mov
xchg
aas
inc
decl
daa
adc
ret
insb
movsb
out
leave
push
dec
jl
xchg
cmpsb
test
and
jns
push
arpl
or
inc
xchg
testb
xchg
rcr
jbe
mov
leave
mov
bound
inc
test
and
adc
es
ror
push
repz
loop
mov
es
andb
out
xchg
add
incl
xchg
mov
jle
stos
iret
push
xacquire
push
sbb
cmp
add
cli
xorl
int
lcall
push
aas
cmp
xchg
jle
scas
daa
pop
iret
mov
cmp
mov
mov
out
test
and
mov
shlb
adc
mov
cmpsb
aas
push
lcall
daa
sub
fdivp
or
jb
out
push
movsb
mov
jl
xchg
outsb
test
and
or
dec
int
repnz
mov
mov
xorl
push
leave
cmp
jl
xchg
cs
inc
aaa
ljmp
daa
mov
cltd
mov
cs
push
jbe
cs
loope
scas
mov
add
into
jle
stos
movsl
push
daa
xchg
mov
bound
sbb
push
push
jle
cmp
in
mov
xchg
mov
mov
shlb
mov
incb
mov
sbb
and
out
iret
sbb
daa
push
ljmp
jbe
outsb
fs
gs
adc
cmpsb
movsl
push
daa
or
bnd
mov
or
add
imulb
and
arpl
mov
jle
xchg
xchg
dec
movsl
mulb
and
out
repnz
movsb
leave
or
mov
or
ds
jne
push
arpl
jbe
and
aas
sbb
xchg
push
test
mov
cmpsb
fs
movsb
xchg
mov
data16
xchg
inc
test
and
sbb
mov
adc
iret
jb
mov
cltd
push
ss
inc
jbe
xor
cs
push
push
adc
mov
sub
push
cwtl
mov
test
cs
sub
adc
or
ss
mov
xchg
fs
cmpsb
leave
push
lcall
sub
and
cmp
arpl
inc
testb
push
sahf
mov
mov
pop
movsb
mov
mov
data16
xchg
pop
test
and
add
dec
cmpsl
loop
cs
mov
rolb
sahf
movsb
dec
leave
idiv
es
xchg
push
test
mov
fidivrs
mov
jle
jnp
and
xchg
jp
arpl
adc
out
xchg
push
movsl
lret
insl
fwait
daa
sti
int
lcall
outsb
daa
sahf
iret
dec
bnd
mov
push
mov
xor
cli
lods
mov
jnp
and
arpl
mov
call
daa
cmp
out
push
sbb
movsb
out
leave
push
dec
jl
xchg
cmpsb
test
and
dec
jp
arpl
jp
xor
ss
rol
jbe
mov
leave
dec
jp
stos
xchg
pop
test
and
or
arpl
and
ret
cli
loopne
push
fidivrl
jne
adc
repnz
and
incb
jl
cmpsb
cli
push
add
into
jp
cmpsb
movsl
push
daa
and
cmc
mov
int
out
dec
stos
ljmp
inc
cmp
arpl
icebp
cld
icebp
or
mov
cmp
xchg
pop
or
js
in
jle
scas
xchg
shll
mov
roll
jbe
pop
jp
mov
xchg
cmpsb
out
addr16
adc
aad
decl
or
movsb
mov
out
mov
fisttps
lret
xchg
lahf
add
add
mov
ret
sub
xchg
push
ja
xchg
dec
cmpsb
movsl
daa
movsl
dec
test
ret
jbe
adc
push
push
es
scas
dec
sbb
inc
mov
cmpsb
pop
cmpsb
jge
loop
adc
mov
or
push
scas
mov
mov
push
mov
cmpsl
push
popa
pop
add
add
loope
cmc
xor
mov
loope
mov
sbb
scas
sti
xchg
jne
loopne
push
mov
mov
loope
cmpl
mov
sub
xchg
mov
mov
in
mov
mov
subl
scas
mov
cmpsb
repnz
clc
xor
and
jnp
lcall
mov
inc
fdivr
mov
mov
ss
mov
insl
cli
mov
mov
imul
fwait
dec
scas
pop
mov
inc
mov
loopne
scas
or
test
pushf
lahf
icebp
sbb
clc
pop
sahf
add
inc
mov
pushf
sbb
arpl
mov
xchg
sti
mov
fistps
and
xor
bsf
filds
xchg
xor
sbb
and
daa
lcall
and
and
imul
repnz
push
lock
jle
out
push
je
mov
or
mov
data16
lods
arpl
mov
mov
movsl
movsl
testl
mov
mov
jmp
jns
mov
jge
adc
ja
sbb
jle
testl
add
mov
and
xor
xchg
sub
cmpsb
mov
mov
mov
jp
xchg
ds
jo
insb
cltd
hlt
ret
aad
and
mov
mov
adcl
movsb
push
nop
lcall
clc
repnz
shr
mov
cmp
rclb
sbb
loopne
cmpsb
xlat
test
adc
push
lock
mov
js
lcall
stos
ret
sahf
movsb
mov
call
test
addr16
out
add
xlat
mov
mov
push
pop
popa
out
mov
repnz
test
jmp
mov
dec
arpl
mov
mov
mov
pushf
lock
jp
js
gs
loop
jp
sub
push
insb
jge
dec
push
inc
sub
stos
lods
shl
xchg
mov
int3
push
add
fwait
mov
out
push
jecxz
ret
bound
test
jmp
jle
inc
int
fwait
mov
or
or
dec
sbb
decb
sahf
je
jge
and
xor
sub
popa
into
dec
mov
es
or
mov
ljmp
cmpsb
in
jg
fmuls
scas
stos
dec
cmp
cld
mov
sti
mov
rol
mov
xlat
fwait
divl
cmc
pushf
adc
inc
or
mov
pop
add
xor
push
lahf
movsl
jp
push
cmc
sbb
mov
or
lcall
and
sti
aad
hlt
jecxz
out
mov
xchg
push
mov
das
and
mov
inc
adc
pop
das
pop
stos
leave
jp
xor
arpl
xchg
mov
mov
shl
mov
jmp
mov
mov
sub
mov
lock
sbb
cmpsl
loopne
xor
mov
xlat
loop
loope
pop
jns
sbb
push
adc
clc
jmp
loopne,pt
jb
inc
and
and
lret
test
mov
sti
out
and
dec
fdivrs
lret
sarl
roll
insl
mov
mov
push
mov
mov
cli
mov
sahf
add
cltd
jle
mov
or
ljmp
add
mov
mov
cmc
lret
mov
stc
dec
test
mov
out
test
outsl
adc
adcb
daa
notb
imul
bswap
jbe
in
push
jl
jns
popf
mov
sub
and
flds
sbb
stc
push
mov
xorl
jne
mov
xchg
stc
fistpll
loope
les
xchg
ljmp
clc
jmp
push
ror
mov
scas
and
and
cmc
lcall
add
mulb
and
mov
mov
fidivrl
addr16
mov
je
call
and
fs
das
mov
adc
xor
clc
push
cld
cmpsl
fidivrs
mov
shlb
loopne
xor
fstpt
xchg
outsb
cmpsl
in
out
cmpsl
adc
jnp
ss
mov
fwait
and
movsl
fsin
pop
adc
sub
mov
jns
mov
pusha
sub
pusha
and
cmpsl
je
mov
cltd
mov
mov
add
stos
stc
sbb
push
push
pushf
inc
cs
leave
jnp
scas
jae
js
test
jecxz
sbb
add
rcll
outsb
sbb
ficoml
shr
jno
aad
test
scas
mov
cmc
jo
mov
sub
inc
add
pop
test
cmp
jl
mov
xlat
ds
js
push
push
mov
adc
jae
cmpsb
fwait
int
dec
clc
int
fsubrs
fbstp
movsl
and
enter
cmc
lret
out
fisttpl
mov
ret
jae
into
jle
cmp
addr16
les
into
push
shl
scas
std
arpl
inc
xchg
mov
xchg
and
sub
cs
jecxz
loop,pn
add
shlb
loop
dec
out
in
jmp
xchg
movsl
push
cmp
mov
shl
sahf
jp
js
addr16
ljmp
ljmp
cs
fnstsw
mov
stos
cmp
xchg
cwtl
xchg
dec
call
repnz
cmpsb
or
cmp
mov
hlt
pop
jecxz
add
aad
mov
aam
cwtl
lret
fs
mov
movb
dec
mov
dec
pop
fldenv
xor
jmp
icebp
push
arpl
clc
stc
mov
and
push
inc
je
into
mov
loope
aam
int
je
repz
out
pop
adc
jge
jne
mov
fcmovnb
pop
or
aam
les
jne
bound
mov
mov
movsl
incb
jne
sbb
xor
out
movsb
mov
mov
xchg
test
loop
or
test
fscale
sti
cmp
test
test
jg
ljmp
inc
cmp
sarl
lahf
mov
sub
stos
test
pop
stc
mov
int3
in
xchg
push
mov
lret
inc
in
test
pop
bound
out
jle,pn
push
jo
cld
cmp
mov
jmp
shlb
js
mov
lret
push
ljmp
rcr
xchg
xchg
mov
mov
imul
loopne
rorb
std
lods
aam
cmpb
inc
mov
sbb
and
orb
mov
lock
fidivrs
dec
out
xchg
adc
inc
xchg
fiaddl
jl
sub
data16
test
cltd
mov
pusha
mov
mov
loope
dec
jl
outsl
outsb
push
xlat
aam
sbb
xchg
mov
jne
push
push
mov
cmpsb
test
add
mov
idiv
jl
pop
scas
lds
sub
inc
int3
push
cld
mov
and
sbb
addr16
loope
mov
push
nop
cmpsb
inc
outsb
push
push
scas
jno
out
jns
mov
pop
pushf
cmp
cmp
jg
mov
test
mov
sbb
cmp
cltd
mov
les
lcall
jbe
fimuls
adc
fisttpll
in
stos
ds
imul
push
lea
mov
pusha
arpl
rcrb
jle
movsb
je
fdivr
rorb
cmp
les
pop
sbb
adc
lahf
mov
pop
mov
pop
mov
mov
cli
jmp
shll
mov
cmpsl
pop
xchg
push
into
fs
or
push
in
xor
pop
loop
negb
js
and
dec
jecxz
mov
jp
mov
mov
or
stc
std
xchg
movsb
stc
ds
mov
scas
pop
fwait
add
fistpl
pop
loope
clc
jbe
pop
mov
pop
lahf
scas
pop
xchg
add
bound
pop
shlb
bound
inc
cmp
push
movsb
mov
mov
jp
mov
fwait
mov
cmp
and
inc
mov
push
imul
call
add
scas
jmp
cmpsl
sbbb
in
xchg
loop
jge
or
sub
mov
pop
in
cmc
pop
and
jp
dec
movsl
sbb
pushf
mov
leave
sub
jnp
sbb
xor
loope
push
arpl
inc
cmc
adcb
xchg
cmp
lahf
cmpsb
mov
sub
mov
mov
push
cs
add
mov
sbb
cmpsl
aad
push
out
les
cwtl
out
adc
stc
mov
imul
fs
xchg
mov
rcrb
sar
mulb
sbb
scas
insl
addr16
cmpb
push
inc
mov
ja
mov
pusha
push
dec
ds
and
shl
mov
les
neg
shll
mov
jbe
fistps
shr
fnstsw
out
ljmp
xor
int3
ds
or
clc
loope
mov
stos
jo
cmp
cmp
add
mov
icebp
jl
cli
adc
insb
ljmp
rcl
cmpsl
pop
pop
push
hlt
push
loop
testb
xchg
leave
movl
adc
xchg
fnstsw
push
fdivrs
jae
in
jae
jo
ret
xchg
pmaxsw
cmp
sub
aad
sbb
sbb
adc
adc
hlt
or
jle
xchg
add
pusha
fstpl
xchg
and
js
sbb
cmp
mov
mov
inc
inc
sahf
int
leave
mov
cmp
xchg
ljmp
arpl
dec
mov
mov
sarb
xor
fidivrs
jecxz
pop
cmc
in
jmp
pusha
lcall
adc
rcrl
add
cmc
pop
scas
jmp
into
data16
fists
fcmovb
add
fs
stos
push
int
pop
mov
enter
dec
pop
fucomp
negb
imul
pop
mov
fldt
repz
stos
shl
pop
shrl
cmpsl
mov
lock
mov
adc
xchg
xchg
sub
sub
icebp
mov
cld
arpl
mov
push
mov
mov
insl
mov
push
adc
mov
fwait
mov
sub
mov
pop
test
mov
leave
mov
sub
ret
push
movsb
std
jle
pop
mov
gs
push
stos
test
mov
mov
stc
mov
fdivp
inc
insb
and
mov
je
movsl
fisttpl
lret
cmp
mov
mov
push
ljmp
test
or
dec
sub
cltd
enter
int
xchg
dec
aam
test
pop
xchg
push
addr16
mov
mov
test
cld
jecxz
aad
cld
cmp
push
pop
mov
push
aaa
pop
cld
push
fnstsw
push
rolb
rorl
popf
jecxz
jecxz
fstpt
inc
aam
mov
xchg
inc
and
jecxz
call
push
sti
popf
subl
rcrb
push
push
cwtl
sbb
xchg
jecxz
scas
insl
dec
sub
pop
inc
out
xchg
lahf
xchg
mov
inc
mov
cmpsl
fwait
push
jae
mov
xchg
adc
inc
dec
loop
shll
addr16
pop
les
data16
in
dec
sub
cmpsb
fnsave
cmpsb
stos
insl
push
and
sahf
push
push
lahf
xchg
mov
push
divb
push
mov
enter
arpl
mov
lcall
jb
loop
xchg
mov
mov
push
adc
iret
xchg
jno
add
sub
xor
int
mov
cmpb
cmc
mov
push
rclb
xchg
or
jno
add
sub
xor
mov
xchg
iret
adc
mov
xchg
pop
dec
test
inc
cmp
xchg
ljmp
xchg
mov
mov
push
adc
scas
xchg
jno
add
sub
xor
xchg
or
int3
xor
leave
sbbb
enter
adc
js
data16
ficomps
add
es
adc
xor
ret
dec
test
jne
pop
mov
movlps
jne
adc
call
aaa
inc
int
in
out
xor
fdivs
scas
sub
xor
and
ret
push
cmc
stc
bound
cmp
shrb
cmpsl
mov
cltd
arpl
sub
aad
clc
mov
je
mov
cmpsl
sub
ret
push
enter
fsubrl
cli
ffreep
ret
xchg
ja
dec
or
cltd
test
mov
fwait
mov
cmp
cmp
stc
outsb
movsb
outsb
xchg
ljmp
add
call
push
or
test
ffree
or
pop
jl
adc
sbb
test
leave
xor
mov
into
cmc
cwtl
inc
fwait
mov
cld
pop
rcrb
sbb
addr16
add
pop
add
jmp
arpl
shl
cmp
mov
jp
enter
mov
pop
push
cmp
or
sahf
mov
filds
push
es
cmp
pushf
icebp
dec
fimuls
jmp
pusha
lds
mov
test
jo
mov
add
and
in
fdiv
repnz
mov
cmp
mov
cmpsl
mov
xchg
jbe
push
ljmp
mov
adc
scas
popf
retw
dec
in
sahf
add
xchg
mov
mov
out
js
cli
mov
fidivrl
lret
outsb
cmpsb
gs
outsb
repnz
cmp
movsb
xchg
scas
decb
out
add
ds
mov
jbe
stos
fs
movsb
jp
xchg
decb
loop
sbb
push
cwtl
mov
and
dec
movsb
inc
into
and
xchg
adc
push
mov
scas
scas
cmp
stos
daa
xor
insb
in
sub
cltd
ret
lahf
xlat
or
shll
cmp
cli
orl
xchg
jae
scas
shlb
ret
ljmp
and
popf
jp
arpl
ds
jb
idiv
js
pop
and
adc
pop
mov
outsb
mov
sbb
lods
cmpsb
jnp
and
arpl
adc
movsw
jle
stos
iret
push
repnz
es
inc
jbe
dec
repnz
cmp
out
jl,pn
xchg
push
test
xchg
aaa
jmp
xchg
ljmp
repnz
mov
mov
xchg
jbe
jle
cmpsb
movsb
outsb
leave
xchg
pop
jl
xchg
inc
test
and
and
adc
add
lret
dec
and
out
adc
jl
les
and
mov
fisubs
adc
mov
mov
xchg
push
movsl
lcall
and
inc
mov
add
lcall
push
imulb
fs
movsb
or
decb
test
and
inc
jp
arpl
jb
and
aas
cs
ficoml
repz
and
mov
jns
sbb
mov
test
fildl
mov
mov
sbb
cld
rorb
add
cmc
mov
adc
push
mov
sbb
popf
inc
fcoms
xlat
push
fisubl
jmp
cmc
ret
xor
mov
enter
fcompl
or
leave
in
popa
jno
push
xchg
lret
add
inc
cltd
ja
ret
fstpt
aam
int
in
fadd
aam
fnsave
xchg
dec
test
xchg
mov
pop
shlb
or
into
pop
fdivrs
je
fimull
push
pshufw
mov
fistps
out
repnz
pop
mov
rcr
pop
icebp
xchg
mov
pop
data16
mov
out
sbb
test
add
mov
clc
cmp
mov
jle
arpl
mov
cltd
movsb
sbb
dec
icebp
mov
sahf
pop
sub
ret
xor
sbb
pop
sahf
cli
imul
ficoms
mov
pushf
movb
mov
mov
jp
clc
nop
mov
aam
mov
pop
fwait
inc
jnp
cmp
fcoml
rcr
adc
pusha
push
pushf
adc
scas
popa
lahf
dec
inc
push
cmp
add
lret
jp
mov
xor
push
fsubrs
andb
xchg
int3
out
inc
sub
repnz
pop
movsb
xchg
inc
push
insb
push
mov
xor
shlb
sbb
popa
in
xlat
sahf
or
lahf
or
sbb
mov
test
mov
or
outsb
testb
insl
cmc
jnp
loop
pop
dec
fcmovnu
sub
push
movsb
lret
mov
nop
mov
or
ret
dec
fs
pop
fucompp
aaa
mov
jmp
ret
fadds
pop
xor
fisttpl
and
mov
mov
lock
loopne
in
fsubs
das
pop
fildll
adc
mov
jg
mov
popf
fistpll
lds
ds
adc
popa
in
cwtl
arpl
nop
or
std
inc
adc
out
or
push
aas
sub
inc
icebp
mov
faddl
xlat
ljmp
scas
push
fidivs
decb
fnstsw
fisttps
or
test
repnz
fadds
in
jo
mov
fiadds
scas
out
mov
je
cltd
push
insl
push
lahf
mov
mov
addr16
mov
nop
mov
rol
adc
cmc
fnstcw
lret
push
lret
mov
push
in
fildl
cwtl
enter
jno
into
lock
mov
or
mov
roll
mov
outsl
clc
lds
fldl
sub
sbb
xor
shr
je
push
pop
pop
or
fwait
mov
adc
mov
and
mov
fld
dec
cli
and
mov
scas
fxch
ss
xchg
ss
pushf
or
mov
in
loopne
and
cmc
ret
jb
ret
lds
mov
fs
cmpsb
test
inc
mov
scas
jle
sub
adc
dec
push
lock
shrl
add
jmp
cltd
push
push
pop
ret
xchg
clc
xchg
enter
fld
or
cmc
movb
sti
popa
cmpb
pop
leave
push
cltd
iret
mov
lods
xchg
xchg
push
lea
lahf
sub
pop
ret
mov
fistpl
push
rcrb
mov
inc
sbb
cmpsb
aas
cltd
sbb
push
mov
jp
sub
push
outsb
rcrl
mov
out
lahf
mov
subb
out
test
inc
test
clc
outsl
push
ffree
mov
repnz
stos
mov
jl
lods
fmuls
sub
mov
shlb
or
inc
adc
out
sub
fimull
pusha
notl
ficomps
push
mov
xor
xchg
daa
cwtl
mov
movsl
scas
mov
aam
push
xchg
fsub
jl
or
pop
fldenv
int
test
in
adc
mov
xchg
test
sbb
xchg
fdivrs
dec
fs
out
xchg
cltd
icebp
cld
loopne
aad
int
outsl
xchg
jg
cmp
lds
ds
xchg
adc
fwait
push
or
js
push
pop
push
mov
add
rcr
add
add
pop
lods
fabs
xor
cmc
cli
lods
je
fisubrs
pushw
inc
insl
add
fcmovnu
pusha
fs
pop
out
xchg
aad
iret
cmpsl
cli
imul
cmpsb
cmp
pop
inc
and
dec
stos
dec
enter
loop
sub
stc
test
ficomps
push
push
xor
adc
loope
xchg
fadds
push
dec
adc
push
aad
test
pushf
nop
sar
mov
xlat
scas
push
jmp
adc
sub
fadd
ds
dec
xchg
add
xor
cs
in
arpl
in
testl
popf
add
mov
imul
adcl
or
ret
outsl
lcall
test
mov
movsb
or
lretw
sub
das
outsl
add
and
stos
pop
cwtl
loopne
push
cwtl
inc
aaa
pop
xchg
daa
div
icebp
dec
fsts
jle
inc
rolb
mov
loop
pop
dec
xor
inc
fnstsw
ret
push
movsl
dec
outsl
pop
leave
mov
and
incb
pushl
in
ret
sbbl
dec
testb
jecxz
movsl
aad
add
lret
aad
cmpsb
js
pop
mov
js
add
inc
xlat
mov
dec
aad
pop
rol
jp
xchg
fcoml
cli
pusha
xsavec
negl
nop
cmp
and
dec
enter
mov
mov
dec
mov
pushf
int
aam
test
adc
or
imull
popa
sbb
add
dec
add
cltd
cmp
mov
std
scas
fwait
pop
push
fstpt
xchg
lds
lret
push
mov
cltd
dec
mov
test
mov
fisubl
lcall
daa
fcmovu
adc
pop
popf
adc
cmp
push
ljmp
in
sarl
test
add
push
lahf
nop
mov
mov
push
dec
and
cmc
movsb
lahf
jnp
xchg
dec
cmp
push
pushf
pop
repz
adc
xor
xchg
mov
nop
jge
inc
daa
sahf
cld
sub
push
out
mov
test
cmp
dec
xchg
sbb
add
jp
mov
ss
dec
aam
fldt
mov
les
scas
mov
inc
inc
data16
add
jge
adc
mov
icebp
gs
mov
add
movsb
ret
inc
cmpsb
pop
int
dec
fstps
push
icebp
out
jp
stc
imul
movsb
in
pop
and
in
xchg
add
dec
xchg
inc
and
cmpsl
mov
mov
fadds
mov
fstps
in
scas
xor
sbb
dec
repz
add
cmp
add
iret
shll
out
xchg
sbb
add
notb
cmp
shl
arpl
mov
jge
xchg
lods
mov
push
dec
jns
cli
fcomps
stc
outsl
xchg
jmp
mov
mov
sbb
lret
mov
lods
and
push
jl
popf
int3
or
sbb
adc
cmp
pop
sub
jle
mov
pop
shrb
or
pop
outsb
lds
outsl
std
ret
xor
fcomps
mov
cmpsl
ret
mov
mov
rcll
fcompl
ja
fnstsw
add
sahf
enter
js
sbb
in
sub
and
xchg
aas
sbb
inc
cmp
int3
cld
pop
mov
push
xchg
addr16
and
cmpsl
or
cs
pop
mov
js
iret
xchg
lret
fcoms
and
icebp
cwtl
add
aaa
push
xchg
lds
inc
mov
std
fildl
pop
les
xchg
dec
and
js
popf
push
mov
cmpsl
sub
dec
xchg
call
outsl
adc
fdivrl
lods
lret
sbb
mov
out
lcall
and
into
inc
jg
fcmovb
adc
fcmovnb
fisttpl
jbe
push
lahf
xlat
inc
stc
sbb
xchg
dec
imul
outsb
dec
addb
insl
xlat
outsl
loopne
mov
jae
mov
push
mov
jle
lahf
add
shll
pusha
add
lcall
sbbl
adcb
sub
hlt
sub
sub
xor
pop
xchg
test
arpl
dec
in
das
add
pop
add
loop
push
fsubl
pusha
pushf
or
sarl
jl
stc
fisttps
mov
inc
icebp
dec
fidivrl
dec
rcll
das
fiadds
push
test
lods
out
in
sbb
sahf
mov
dec
inc
and
jmp
movsb
mov
dec
fs
inc
mov
decb
inc
ret
dec
jg
xor
sbb
xchg
inc
pop
aas
mov
iret
outsl
mov
pop
cwtl
mov
inc
ficoms
les
jle
xor
filds
in
xchg
repnz
and
cmpsl
adc
or
sub
mov
fsub
in
pop
lcall
lock
es
push
repnz
mov
out
les
xchg
xchg
in
imul
add
mov
dec
pop
std
sub
nop
inc
sbb
ljmp
in
add
mov
mov
int3
mov
call
loop
pop
xchg
movl
out
fldenv
and
es
sbb
mov
pop
out
pop
jno
fsubrs
lods
push
jecxz
add
es
cmpsb
subb
adc
push
test
js
js,pn
dec
sbb
and
xchg
rolb
ljmp
fbstp
mov
pop
inc
pop
jb
pusha
mov
pop
imull
pop
jb
adc
lods
test
xor
lret
clc
mov
cmpb
push
cmp
mov
out
cmpsb
lcall
pop
inc
add
int
pushf
jae
sar
push
jbe
data16
aam
mov
outsb
push
std
cltd
and
sub
stos
inc
mov
add
aaa
add
nop
leave
insl
or
in
repnz
int
cmpsb
fcomi
jns
pop
lret
xor
inc
pop
arpl
in
jecxz
cmpsb
sub
ret
mov
sar
jns
dec
lret
mov
cmpsb
ret
jnp
and
pop
mov
push
pop
dec
jmp
pop
or
int3
sbb
lret
daa
ficomps
cmpsb
mov
movsb
fxch
push
into
dec
adc
shrb
lret
sbb
jp
mov
inc
cmc
js
pop
fwait
inc
loop
dec
mov
jmp
cmpsb
and
lods
ret
pop
bound
enter
jns
sti
std
mov
cld
mov
shll
mov
fcoms
jg
mov
mov
ret
movb
mov
mov
cwtl
std
cmp
lcall
pop
lret
xchg
ret
mov
lahf
push
sbb
jle
scas
add
out
mov
xor
lcall
adc
pop
xchg
aad
ja
push
jle
sbb
sarl
adc
daa
mov
ss
dec
pushf
shl
rolb
movsb
dec
push
dec
jb
mov
xchg
shr
imul
mov
xchg
mov
pop
jo
inc
int
pop
cmp
xchg
inc
mov
xchg
in
scas
cld
mov
es
pop
cwtl
shrb
cltd
movsl
ffree
inc
lea
mov
int
sub
jl
xchg
dec
push
sahf
jle
sub
loopew
sub
movsb
mulb
imul
into
fwait
mov
cltd
push
adc
dec
cmp
push
outsl
jmp
pusha
out
push
out
loopne
cld
stos
fisubrl
push
rorl
adc
inc
sub
cmpsl
dec
sub
inc
sbb
ret
popf
adc
adcl
or
add
add
mov
sbb
pushf
sbb
and
outsb
add
push
fistps
gs
xchg
cmp
mov
jg
or
or
and
and
imul
push
sub
xchg
imul
and
stos
push
pop
test
pop
jo
shrl
jnp
pop
aas
pop
out
mov
push
ljmp
mov
lds
jle
insb
bound
jmp
inc
std
pop
addr16
inc
inc
jge
call
jle
fistps
cwtl
ret
xchg
or
mov
add
scas
add
inc
sub
push
adc
mov
ret
push
fcoml
pop
push
loopne
mov
pusha
daa
movsb
lods
dec
rcr
jecxz
out
fcmovb
pop
pop
mov
cmp
xorb
mov
es
pop
xor
push
loope
in
lea
sbb
mov
adc
dec
out
sub
rcl
std
shll
adc
aaa
xor
mov
and
mov
pop
dec
stos
mov
idivb
sbb
adc
ss
xchg
cmp
push
int
push
pop
icebp
mov
ret
dec
mov
popf
mov
jp
or
loop
lahf
pop
rolb
mov
outsl
iret
inc
js
mov
push
in
enter
test
and
adc
iret
pushf
test
sar
data16
pop
shr
mov
mov
mov
pop
mov
xor
scas
adc
aad
cli
stos
fisubs
cltd
std
js
push
in
inc
clc
popf
adc
outsb
scas
icebp
sbb
ja
out
xchg
pop
mov
cmp
cmp
testb
sub
fprem1
inc
movsb
lcall
cmpsl
add
cmpsl
movsb
popa
push
mov
mov
jns
mov
mov
jl
adc
das
popf
push
into
lcall
jno
enter
popf
scas
lods
pop
mov
jo
imul
movsl
sbb
ja
sbb
cmp
les
icebp
in
and
imul
or
xlat
ret
mov
mov
stos
push
iret
imul
movsl
dec
fbld
dec
leavew
fwait
push
mov
sarb
setg
sbb
lahf
lret
frstor
xchg
inc
mov
pop
mov
sub
ret
add
xchg
lds
shr
pop
ss
cltd
xchg
cltd
repnz
test
insl
jge
imul
int
pop
sbb
push
inc
mov
repnz
mov
pusha
dec
mov
sbb
fwait
enter
xor
pop
sub
int
aad
sub
leave
pop
int
dec
push
jmp
lods
push
jo
lcall
in
call
pop
ret
mov
and
lret
mov
pop
test
cmp
rcrl
and
fcmovnb
ja
jg
pop
inc
mov
mov
sub
xchg
daa
pusha
sahf
jl
fsubrs
ficoms
mov
push
pop
test
mov
push
adc
dec
cld
add
mov
pop
jmp
mov
add
fwait
js
popf
mov
iret
mov
inc
sub
popa
dec
cmpsb
lds
rorb
test
jnp
push
adc
and
movd
sub
mov
jl
xchg
xchg
and
xlat
push
pop
cmp
mov
fmull
pop
sub
scas
rclb
popa
fbld
rolb
pop
sarl
rcrb
xchg
std
imul
sub
loop
mov
jl
push
mov
outsb
jecxz
cmpsl
add
adcb
sahf
or
pushf
jge
out
js
push
test
andb
push
js
pop
cmp
adc
aaa
lcall
xlat
cmp
dec
fsubr
inc
push
and
mov
fadds
mov
fwait
jmp
xchg
out
and
or
pusha
cwtl
cld
ret
popf
pop
xchg
icebp
sbb
jecxz
jle
pop
std
test
xchg
add
sbb
mov
xchg
stos
mov
mov
mov
shlb
jb
cmp
push
and
incl
dec
cmp
push
retw
movsb
dec
inc
dec
sbb
fidivl
dec
das
sbb
test
push
jp
cwtl
cmpb
dec
push
rorl
add
and
mov
scas
mov
xchg
std
mov
lock
test
scas
xchg
inc
cmp
xor
xchg
xchg
jns
fsubs
xchg
faddp
or
sub
mov
into
mov
es
jge
insb
ret
shl
mov
outsl
in
jns
scas
cmpsl
dec
fcom
inc
jp
mov
fadd
push
jmp
dec
xchg
arpl
lcall
push
movl
ret
loope
fsubp
jns
jb
loopne
and
mov
mov
pop
push
dec
sarl
cs
movsl
jo
jg
leave
fsts
rol
adc
sbb
pop
popf
cltd
pushf
lcall
imul
mov
xchg
sbb
in
rorb
cmc
or
sarb
or
and
xchg
inc
loopne
test
aas
std
or
das
sub
ret
xlat
dec
cltd
mov
fildl
sbb
fdivrs
ds
sbb
add
ret
loop
or
sbb
test
inc
gs
sbb
movsl
fstl
out
rcrl
aas
sahf
push
stos
test
das
in
gs
push
sbb
enter
push
jbe
ret
lds
push
mov
popa
push
pop
mov
pop
inc
xchg
subb
pop
pop
lods
jl
scas
push
xchg
leave
push
stc
out
lret
and
cmp
movb
incb
xlat
push
jl
mov
imul
fsubp
scas
mov
sbb
test
rorl
sbb
mov
out
repz
mov
data16
aad
das
or
clc
inc
cmp
pop
push
pop
adc
xor
fmull
popa
js
lahf
sbb
xchg
shlb
mov
dec
sub
icebp
pop
scas
dec
std
out
xchg
jge
loopne
xor
sahf
xor
pop
clc
cmpsl
mov
inc
pop
mov
inc
lret
and
pop
xchg
push
lods
enter
xchg
iret
sbb
fwait
add
out
jns
dec
out
sahf
bound
das
enter
cli
lcall
sub
aam
mov
sar
add
popa
leave
adc
sub
cmpsb
pop
jb
popf
xchg
pop
xor
push
movsl
inc
lods
cmp
pop
sti
lcall
test
into
je
mov
loopne
lcall
and
mov
and
add
inc
popf
cmp
les
sbb
jmp
ja
jmp
les
sbb
fidivrl
gs
ds
in
hlt
out
lods
popa
lahf
fmull
jne
js
insl
in
insl
mov
push
aas
adc
cli
fisubrl
xchg
loopne
sbb
jnp
mov
mov
jl
daa
fstps
push
mov
rcrl
or
sub
mov
pop
add
pop
nop
add
cwtl
mov
movsb
insl
call
aad
movsb
fmuls
mov
jns
loope
sub
inc
jmp
testl
aad
je
les
or
adc
xor
or
arpl
enter
gs
nop
and
push
mov
ds
push
mov
outsb
iret
lcall
and
mov
inc
push
cmp
stc
and
arpl
adc
mov
bound
scas
call
andb
repnz
adc
pop
push
push
mov
cmp
sbb
push
iret
ss
mul
jp
arpl
adc
mov
jp
cmpsb
movsl
outsb
daa
lcall
cmp
jns
push
mov
sub
shlb
inc
ljmp
jl
xchg
mov
jp
jnp
and
test
arpl
stos
aas
push
incl
daa
and
ljmp
cld
ds
ljmp
sahf
arpl
push
aas
sahf
incl
jb
mov
repnz
pop
mov
jp
xor
jbe
or
pop
sub
mov
mov
movsl
jbe
scas
fs
movsb
sahf
leave
inc
decb
test
and
push
jp
arpl
adc
xor
aas
add
lret
push
and
shlb
leave
push
ljmp
and
cmpl
mov
cmpsb
aas
outsb
lcall
daa
xor
cli
repnz
push
dec
scas
std
ficoms
frstor
mov
mov
push
aas
sahf
decl
jb
mov
repnz
inc
mov
jp
xor
jbe
or
pop
xchg
xchg
sti
int
lcall
data16
xchg
jl
xchg
mov
and
inc
jp
arpl
jb
and
aas
cs
xchg
push
movsl
daa
push
divb
pop
sub
cmp
fdivrp
or
cmpsb
iret
outsb
repnz
popf
mov
cmp
dec
jbe
inc
mov
jl
xchg
push
test
and
ljmp
xchg
lret
cli
jnp
and
popf
jp
arpl
cmp
decl
daa
sub
shl
sbb
cld
addr16
es
ror
sbb
lods
mov
ljmp
jbe
jbe
mov
push
jl
xchg
dec
test
and
or
arpl
adc
jmp
ja
sti
rcll
pop
jle
cmpsb
movsl
outsb
daa
xchg
iret
pop
xacquire
push
cs
pop
jbe
ss
movsb
cs
push
jl
xchg
push
inc
adc
jbe
shlb
ret
mov
test
and
popa
jp
arpl
push
mov
mov
xor
xchg
movsl
out
daa
push
iret
fdivp
or
jb
loop
adc
jl
xchg
mov
andl
arpl
sub
push
xchg
and
push
adc
out
cs
test
and
mov
adc
mov
mov
jle
cmpsb
xchg
outsb
movsl
xchg
daa
inc
iret
mov
cmp
mov
inc
mov
cld
cmp
lds
xchg
aad
adc
mov
inc
xchg
mov
cmpsb
repnz
inc
mov
jle
cmp
jbe
push
data16
xchg
adc
leave
or
push
test
and
cltd
jp
arpl
es
xchg
aas
pop
incl
daa
ds
ljmp
adc
cmp
lds
xchg
aad
testb
aas
stos
call
andb
repnz
mov
jb
and
pop
push
fs
cmpsl
notb
jp
arpl
adc
mov
movsl
push
daa
lcall
es
push
adc
sub
ljmp
dec
adc
jbe
shlb
ret
mov
test
and
xchg
jp
arpl
and
incl
daa
ds
out
add
pop
cmp
es
ror
push
repnz
lods
mov
out
mov
cltd
jbe
jp
mov
pop
jl
xchg
dec
test
and
or
arpl
adc
in
pop
mov
leave
jp
arpl
adc
mov
data16
scas
call
sahf
movsl
inc
daa
mov
mov
adc
inc
push
add
and
adc
push
leave
decb
jo
roll
cmpb
jl
xchg
mov
lea
fcmovbe
xchg
jp
arpl
and
incl
daa
ds
out
cs
sbb
mov
bnd
and
mov
rolb
leave
mov
xchg
pop
test
and
xor
arpl
adc
in
repnz
mov
mov
fs
movsb
xchg
leave
pop
decb
test
and
sub
adc
add
xor
sub
adc
movsw
bound
stos
iret
push
repnz
es
inc
jbe
dec
fs
movsb
es
out
push
jl
xchg
or
repz
sarl
mov
fnstcw
arpl
push
aas
sahf
decl
jb
mov
repnz
inc
mov
jb
cmp
jbe
add
imul
cmp
mov
push
aas
push
xchg
mov
jle
stos
iret
push
repnz
xor
jno
push
inc
mov
jl
xchg
push
test
xor
jmp
xchg
out
movsl
push
daa
iret
jb
mov
test
ret
mov
push
pop
mov
jl
xchg
sbb
xor
loop
cs
movsl
push
daa
iret
push
repnz
mov
fidivrs
gs
push
xchg
movsb
pop
leave
cmp
jl
xchg
cmp
and
sbb
outsb
jmp
mov
lcall
jbe
scas
fs
movsb
xchg
dec
jbe
mov
adc
and
sub
adc
or
cmp
mov
fnsave
mov
jle
cmpsb
leave
outsb
xchg
jl
xchg
mov
and
jno
adc
adc
mov
cli
aas
and
out
adc
lret
xor
mov
fisubl
jb
mov
test
mov
popa
jbe
push
fs
movsb
dec
leave
idiv
jl,pt
xchg
push
test
xor
daa
out
iret
push
repnz
mov
mov
mov
xchg
jp
mov
xchg
pop
test
and
or
adc
xor
push
std
mov
lcall
jbe
scas
fs
movsb
sahf
leave
inc
decb
test
and
push
jp
arpl
fidivrl
push
dec
xchg
mul
inc
push
jns
imul
movsl
jle
cmpsb
iret
push
repnz
es
inc
jbe
ss
adc
fdivrp
push
push
adc
lcall
xchg
ret
daa
mov
jp
cmpsb
lea
ret
mov
sub
sahf
movsb
inc
leave
mov
cmp
sub
and
jmp
xchg
out
sti
frstor
mov
test
adc
mov
pop
aas
xchg
mov
jle
cmpsb
daa
outsb
iret
xchg
repnz
pop
mov
jp
cmp
inc
push
gs
loopne
push
sahf
mov
test
outsb
movsb
xchg
leave
pop
decb
test
and
push
jp
arpl
adc
or
into
xchg
cli
loopne
cmpsb
mov
aad
repnz
leave
pop
decb
test
and
push
jp
arpl
fidivrl
add
lret
jecxz
mov
rol
jbe
lret
movsb
mov
jl
xchg
subb
and
jno
adc
adc
mov
idivb
es
out
xchg
push
movsl
fisubs
push
iret
into
xor
in
xchg
movsl
push
daa
iret
or
mov
mov
sarb
xchg
jbe
jle
cmpsb
cmpsb
mov
push
mov
addl
ljmp
jbe
xchg
push
inc
addl
fsub
cld
push
ficompl
iret
dec
inc
movsl
stc
inc
aam
in
flds
or
or
test
into
cwtl
mov
mov
int3
xchg
jl
mov
cmpsb
xchg
decb
inc
inc
fcoml
add
mov
add
popf
aad
add
add
mov
loope
idiv
icebp
pop
xchg
ljmp
jecxz
rcrl
dec
inc
insb
out
inc
mov
xchg
xchg
sub
loope
negl
cmp
cmpsl
mov
lods
xor
fcoml
mov
mov
imul
xchg
pop
test
xchg
bound
push
cmc
pop
push
mov
push
xlat
jecxz
pop
subb
fimull
arpl
mov
pop
xor
andb
hlt
pop
adc
mov
mov
fsqrt
stos
scas
adc
lahf
cmp
cmpl
adc
mov
ret
pop
adc
push
sar
inc
int3
loop
lret
and
scas
pop
hlt
jno
cmp
xchg
sbb
lret
pop
aad
inc
es
inc
bound
mov
fistpll
adcb
mov
stc
mov
mov
jae
test
in
push
and
or
stos
lret
data16
pop
fistpll
in
fiaddl
fisttpl
push
cmpsl
scas
into
xchg
fadds
js
sahf
pop
push
adc
dec
cmp
std
push
and
jb
sub
fsubs
sbb
xor
push
cld
aam
jae
push
sub
mov
clc
and
mov
lods
outsb
mov
js
xchg
sub
jg
inc
mov
stc
fisubrs
out
adcb
push
out
std
cltd
pop
repnz
outsb
and
jecxz
inc
sbb
push
outsl
lds
arpl
loope
dec
sahf
test
nop
xchg
adc
int
loop
nop
fisubs
add
xchg
andb
fstps
sub
adc
push
stc
pop
loop
std
pop
mov
nop
xor
aam
loope
roll
popa
mov
jp
pop
pop
aad
ds
enter
fildl
neg
or
loop
xchg
in
xchg
sub
fdivr
shl
mov
mov
cwtl
sahf
push
leave
push
test
aad
pop
and
mov
arpl
ret
push
std
ret
fwait
cmp
mov
sub
pusha
push
inc
rcr
sbbl
cli
sub
imul
sub
xlat
mov
adc
pop
xor
sub
sub
lcall
jp
push
mov
in
mov
jbe
popf
loop
scas
and
in
mov
xlat
lret
push
mov
jle
int
jns
mov
decb
mov
cmpsb
mov
push
sbb
cli
mov
sar
cli
loop
rclb
loope
adc
pop
mov
fdivrp
push
bound
xchg
sbb
cli
aad
fnstsw
dec
mov
test
cmp
inc
fists
sub
in
int
frstor
fwait
push
sbb
cmpsl
rcrl
fwait
bound
ret
sbb
mov
out
lahf
arpl
fidivrs
insl
lock
jno
fcmovu
and
imul
dec
add
pushf
jns
cli
loop
movsl
fdivrl
pop
scas
xor
fwait
dec
ds
pop
addl
dec
ret
mov
pop
loope
mov
lea
mov
jbe
and
adc
aas
jp
cmp
fdivr
mov
jecxz
enter
orb
cmc
inc
sbb
mov
pop
das
cmp
adc
outsb
mov
sbb
fmulp
mov
push
push
ja
out
cmc
andl
pop
lcall
mov
or
push
xchg
sbb
fiadds
daa
xchg
orb
fisubrl
mov
and
lret
sub
fs
jg
mov
mov
addb
mov
out
movsl
cmc
jp
sahf
adc
ret
push
jmp
xchg
stos
bound
pop
mov
bound
adc
adc
jo
xor
in
rcll
sub
test
rorl
pop
lcall
inc
sbb
push
mov
xorl
clc
cmp
jmp
mov
cltd
mov
sti
cmpsl
xchg
cltd
ret
stc
test
cmp
cmpsb
inc
sbb
fyl2xp1
sbbl
xchg
setg
fwait
cld
mov
mov
push
push
das
sub
out
icebp
push
jne
cmp
int
mov
mov
mov
xchg
enter
xchg
or
mov
sahf
mov
in
repz
mov
lret
ljmp
aad
lds
icebp
sbb
fs
cwtl
xchg
daa
cs
out
int3
into
insb
sbb
sahf
orl
add
sbb
add
pop
jo
lret
mov
jnp
jne
push
mov
add
cmc
sti
adc
mov
cmc
pusha
jb
xor
push
mov
movsb
and
aad
pop
mov
dec
mov
frstor
lods
rolb
dec
and
pop
cmp
jmp
sub
fcoms
cmp
hlt
in
mov
pop
sub
and
xchg
in
cmpsb
pop
push
add
scas
ja
xchg
test
xchg
test
adc
rol
cmp
and
andl
ds
push
nop
fnstcw
jae
mov
fwait
mov
jbe
push
loope
lcall
inc
ss
mov
scas
xor
jns
mov
sbb
cmp
push
aaa
and
cli
sahf
pop
je
xchg
add
xchg
popa
and
addl
xchg
ds
jle
loop
inc
pop
jecxz
jle
les
jle
ja
daa
push
mov
fs
adc
cli
adcl
movsb
clc
jb
fisubrl
and
mov
test
push
scas
inc
mov
ds
ljmp
mov
sub
push
or
and
and
stos
lods
fwait
mov
inc
xchg
jb
sub
dec
ds
xchg
ret
repz
pop
sub
sbb
push
pusha
sub
push
cmp
push
sub
mov
call
test
std
pop
sub
push
sub
inc
adc
mov
sahf
aad
xchg
ret
pop
shll
cmp
lahf
loope
fadd
add
in
pop
dec
add
pop
and
cli
ret
sub
cmc
pop
loope
jecxz
iret
ds
imul
fld
mov
adc
dec
aaa
arpl
jmp
mov
sar
ficompl
xor
cmpsb
cmpsl
loope
push
push
lret
das
pop
pop
and
sbb
out
ret
sahf
cmpsb
xchg
or
cmp
ds
cltd
cmpsb
imul
loop
mov
fwait
mov
out
rolb
mov
in
lods
jae
jbe
sub
jbe
jg
sub
mov
xchg
cwtl
shl
xchg
fwait
in
data16
imul
nop
sbb
cmpsb
xchg
movsb
and
subl
sub
sahf
mov
sbbb
xchg
mov
loop
push
movswl
add
rorl
push
xchg
movsb
pop
push
sub
sbb
xchg
test
ja
imul
fistps
mov
mov
jp
es
cmp
add
and
fwait
pop
jae
xchg
rcll
stos
in
push
xorb
cltd
pop
fldpi
and
cld
inc
rcll
mov
cmpsb
and
xor
sbb
int
es
jo
push
mov
iret
pop
in
jae
in
sub
andb
movsb
inc
pop
sahf
mov
es
fistl
aaa
mov
cmp
pusha
jns
addr16
mov
fildll
cs
push
cmpsl
or
in
scas
or
push
push
aam
jp
inc
in
sub
inc
cmp
mov
and
imul
mov
dec
hlt
xchg
inc
cld
sahf
loopne
mov
cwtl
xor
sub
mov
mov
mov
outsl
jle
cld
pop
sub
inc
add
andl
dec
movsb
cs
popf
sbbb
in
aas
das
and
mov
data16
cmpsb
xchg
push
inc
mov
test
ret
push
mov
mov
call
cwtl
mov
sti
test
pop
cli
push
cmp
mov
cmc
push
aad
inc
cmp
test
test
sbb
aad
mov
shrl
sub
inc
test
mov
fwait
leave
popf
outsl
aam
sub
das
std
test
fisttpl
inc
dec
sub
mov
cmp
push
roll
popf
mov
pop
and
icebp
adc
inc
sbb
mov
mov
loop
push
sub
into
xchg
scas
mov
push
sbb
mov
in
xlat
cli
cltd
mov
kunpckwd
jnp
and
ret
mov
pushaw
sbb
inc
incb
mov
jl
push
sahf
dec
shrb
inc
jo
shll
jmp
scas
fsub
cwtl
push
pop
cmp
or
xchg
arpl
outsb
jp
xchg
cwtl
cmc
out
ds
xchg
in
jecxz
loope
xor
and
mov
in
pop
test
jo
xor
rcll
cli
xor
scas
jp
mov
adcl
jg
xor
sbb
fwait
addl
xor
mov
mov
loopne
lods
add
imul
mov
sti
pop
std
test
scas
lahf
fbld
daa
shr
rol
dec
in
popf
dec
clc
cmpsb
mov
imul
mov
cs
dec
frstor
adc
push
xor
js
test
repnz
inc
rolb
divl
loope
in
mov
lods
fcompl
jge
int
mov
sbbb
clc
mov
test
add
fcmovnb
popf
cmpsb
add
test
push
les
std
sub
sahf
inc
cmp
push
data16
and
dec
mov
cmpsb
aas
dec
lcall
pop
xor
stos
fucom
mov
aam
and
lret
insb
fcmovu
seta
xchg
mov
lcall
aas
pusha
mov
fdiv
sbb
add
sbb
scas
lahf
push
cltd
xchg
test
addl
in
jle
sbbb
mov
fs
mov
mov
std
iret
test
and
test
ds
fnstenv
or
loope
sub
in
pop
ds
dec
mov
cmp
add
test
adc
fadds
dec
adc
xor
test
subb
jle
ljmp
cli
fistpll
inc
xchg
pop
xchg
mov
cli
mov
lods
mov
loop
ret
hlt
jbe
xchg
and
xchg
pop
js
test
cmp
pop
dec
add
jecxz
mov
pshufw
insl
inc
cmpsl
adc
pushf
push
sub
dec
es
es
mov
cwtl
arpl
fisubs
sarb
cmp
xchg
andb
cmp
lods
stos
pop
mov
cli
ret
addr16
xchg
jno
test
xchg
push
cmc
xor
ds
mov
and
fistps
out
or
xchg
mov
xchg
scas
and
and
jge
lret
add
lds
ret
fs
lcall
xchg
cmpsb
xchg
int
cmp
jp
cmp
les
and
push
subl
mov
cmp
cmpsb
xchg
cltd
inc
rcrb
jmp
cmpb
push
pop
call
test
andl
xor
leave
fwait
cmc
adc
push
fwait
mov
sbb
jne
clc
in
sarb
shlb
lds
add
imul
addl
mov
pusha
ljmp
mov
jns
inc
xlat
pop
std
imul
aad
pop
mov
in
aam
out
inc
xchg
cli
mov
cmp
ja
inc
cmp
mov
in
mov
clc
ja
mov
and
cmpsb
in
xor
jl
lds
push
or
ret
ret
pop
cmp
fisubrs
inc
in
sbb
inc
cmp
and
xchg
push
fcoms
push
add
cli
inc
test
jae
shrb
lahf
scas
cmp
dec
pop
lods
stos
imul
fs
sub
jnp
fiaddl
pop
add
jnp
dec
mov
psllq
leave
adc
cltd
cld
pop
sub
lret
ja
cmp
neg
scas
mov
jnp
pop
in
push
cs
test
mov
popa
or
jle
notl
and
xchg
cmc
inc
jg
add
fwait
and
mov
pop
scas
fisubl
jecxz
lret
fcomps
mov
ficoml
outsl
jl
bound
jge
outsl
insl
mov
cmp
rolb
and
outsb
pop
cmc
test
arpl
cmove
clc
mov
mov
in
mov
mov
mov
sbb
mov
arpl
or
add
jl
pop
sar
shlb
mov
lds
mov
fiaddl
pop
test
in
push
pusha
adc
xchg
gs
cmpl
and
lahf
lret
jg
gs
cvtps2pd
cmp
stos
daa
test
pop
js
push
in
fdivs
test
cmpsb
mov
cld
add
incb
mov
movsb
in
loop
cmc
inc
or
mov
sti
push
cmp
incb
hlt
sbb
imul
pusha
mov
scas
stc
fmuls
cmc
in
rol
sti
sbb
fstps
sbb
call
cmpsl
or
dec
movsl
jne
pop
out
sub
mov
sarb
les
lods
push
das
daa
andl
in
std
fldenv
pop
mov
sub
out
mov
fmull
add
lds
xor
repnz
arpl
std
jns
ret
std
pop
fisubl
inc
sub
xchg
sahf
out
mov
out
ljmp
popa
and
sbb
jp
inc
jno
sub
imul
in
fwait
jnp
scas
add
data16
mov
in
fcmovnb
xchg
call
cmpsl
xchg
das
gs
sbbb
shlb
out
mov
mov
mov
dec
cmp
push
jp
mov
push
jae
in
cmpsl
or
cmpsb
gs
push
mov
std
insb
xor
cmp
popa
lock
and
push
flds
imul
pop
sahf
cmp
push
test
adc
movsb
in
lahf
out
daa
les
push
and
and
ss
movsb
sbb
std
pop
into
sbbb
cmpsl
popf
and
push
jl
test
ljmp
inc
imul
jno
inc
mov
mov
cmp
adcb
fsub
and
pop
mov
mov
imul
sarl
dec
and
outsl
xchg
popf
pushf
mov
loop
lods
cmc
fnsave
dec
pop
lret
mov
mov
push
popf
ljmp
xor
push
jg
jp
roll
pop
in
jmp
mov
xlat
scas
gs
in
push
pusha
popf
loopne
mov
sub
bound
rorl
cs
lcall
les
std
sti
shlb
push
cmpsb
adc
mov
je
cmc
fcomps
push
in
jnp
popl
loop
xchg
pop
fidivl
inc
push
cmpsl
and
and
mov
jp
into
movsb
jmp
sarl
dec
andl
jno
les
sbb
lahf
lcall
ljmp
stos
loop
sub
aaa
dec
pop
shl
lcall
mov
mov
rcrb
xchg
scas
dec
push
fisubrs
xchg
xchg
ficoml
imul
daa
sub
or
xchg
sahf
mov
mov
int3
shlb
sbb
fdivrs
push
mov
and
fcomps
cmp
sub
mov
mov
mov
fadd
jns
loop
rolb
jecxz
dec
cmpl
pop
lret
dec
dec
mov
cli
repz
dec
cmp
cwtl
mov
pop
shrb
xchg
in
rcrb
pop
push
mov
mov
lods
cli
sarb
push
cmp
js
cwtl
mov
mov
add
les
mov
movsl
popf
pop
inc
repnz
push
add
push
nop
xlat
and
add
repnz
mov
es
std
pop
das
cmpsb
inc
push
fdiv
jo
cmp
cmp
xchg
sahf
mov
mov
sub
dec
cmp
data16
add
adc
cmpsl
push
cld
loop
lahf
sar
stc
rolb
test
ret
pop
notb
push
sbb
cmpsb
jmp
sar
sub
xchg
shrl
shll
repz
notb
jecxz
lods
mov
pop
loope
push
cmc
and
add
ljmp
popf
call
mov
cmp
and
lret
int
add
lret
lea
sbb
sub
sbbb
dec
das
xchg
cmp
std
call
fidivrl
fdivs
inc
out
jge
jne
pusha
add
mov
cwtl
inc
loop
in
xchg
popa
call
filds
std
adc
jecxz
or
dec
mov
cwtl
stos
arpl
push
pop
loop
push
xor
std
inc
rcrl
jge
sub
mov
mov
cmpsl
and
test
mov
iret
cli
stc
pop
cmpsb
test
in
cwtl
sbb
ficompl
push
fwait
sub
xchg
jg
pusha
loop
cmp
hlt
pusha
jae
hlt
test
fwait
mov
and
movb
add
mov
or
inc
pop
loope
xchg
mov
fsubrs
add
and
out
push
jmp
pushf
xchg
loopne
cmpsb
push
cmp
add
push
sub
js
mov
jnp
rol
adc
test
add
jl
xor
fs
pop
cld
ss
sahf
mov
cmc
push
sbb
pop
cmpsl
pushf
call
cs
bound
clc
cmpsl
test
jnp
shrl
pop
add
or
outsb
mov
mov
in
cmpsb
sbbb
sbb
cmp
jl
mov
xlat
jecxz
adc
dec
xlat
sbb
movsl
sbb
sbb
mov
jns
mov
ds
xchg
mov
add
lds
adc
in
jmp
stc
fs
jae
mov
cmpl
jnp
push
and
xchg
push
lcall
imul
lcall
jnp
adc
nop
mov
adc
lcall
imul
ficomps
std
inc
in
insl
push
push
xchg
and
and
sbbb
dec
jl
mov
cli
dec
stos
loope
adc
stos
lods
scas
daa
xor
clc
push
fucom
cmpsb
incl
sub
xlat
nop
push
inc
push
mov
sbb
sub
xor
add
sbb
jge
ds
mov
add
cmp
ret
mov
jnp
test
insb
jecxz
pop
add
or
sub
ja
cmp
mov
arpl
xchg
mov
sahf
fwait
hlt
push
dec
adc
mov
push
inc
fiadds
cmpsb
sahf
mov
mov
andb
fwait
lret
pop
loope
fcoms
fldl
and
cltd
or
fwait
and
lret
pop
clc
mov
in
and
push
lret
cmp
inc
xchg
and
mov
adc
std
nop
int3
test
ret
out
test
jecxz
dec
jb
aas
and
jmp
xchg
lahf
xchg
xchg
adc
hlt
push
popa
mov
dec
call
jbe
imul
shrl
outsb
add
imul
das
sahf
xchg
stc
pop
mov
xchg
push
insb
loopne
add
pop
addb
loope
sti
xchg
push
hlt
test
and
std
shll
pop
jl
repz
cmpsb
fists
fsubrs
push
fistps
xchg
jg
jmp
bound
aam
mov
push
les
leave
jbe
sbb
mov
cli
lret
pop
in
orb
lods
mov
jecxz
and
idiv
mov
xor
fwait
mov
mov
fistpll
xchg
in
mov
and
mov
faddp
or
push
or
sbbb
add
ret
stos
and
mov
mov
nop
mov
inc
mov
fwait
sbb
ret
out
cmpsl
ss
gs
out
lret
fdivs
mov
mov
cmp
mov
out
movsl
out
mov
outsb
lahf
into
jnp
rcrb
cltd
sbb
fistl
or
sub
xchg
loope
add
ret
repnz
stos
sbb
cli
or
loope
adc
test
lahf
sbb
stos
cmp
enter
jecxz
adc
lret
mov
mov
out
sub
mov
or
xlat
fwait
dec
in
fs
xchg
movb
fs
cmp
cltd
daa
arpl
xlat
iret
cmpsl
fists
cmpsl
pop
xor
mov
roll
jl
fstpt
cmpsb
add
pop
pop
adc
mov
outsb
cmp
pop
fmuls
push
mov
dec
and
stc
xchg
mov
shrl
movsl
mov
xor
sahf
sbb
movsb
movsl
adc
cs
inc
adc
cmp
call
movsb
rorb
jbe
in
mov
aad
xor
push
and
pushf
ret
add
into
or
orb
cld
adc
cmp
add
aad
in
imul
adc
aad
repnz
daa
push
push
pop
and
in
loope
lret
pop
or
js
ss
pusha
repnz
int
add
push
movsl
mov
sahf
inc
sbb
dec
ret
cmp
adc
enter
in
rcll
pushf
jp
lahf
into
aas
inc
clc
xchg
jb
test
xor
andl
and
cltd
xor
leave
data16
lahf
outsb
push
pusha
mov
fnstenv
adc
in
ret
and
xlat
dec
jecxz
jno
mov
sarb
xor
add
out
jb
ret
or
out
mov
pusha
test
das
and
cmp
dec
pop
mov
adc
sub
imul
icebp
adc
iret
clc
je
testl
sub
lea
ss
and
mov
lods
enter
mov
add
and
pop
je
or
fisubl
xor
xor
adc
cs
scas
mov
lods
cmp
mov
in
pop
pop
jbe
out
mov
sbb
repz
mov
adc
xor
cltd
cs
leave
insl
xor
lret
lds
arpl
icebp
xchg
bound
mov
dec
mov
scas
cmp
cmp
aad
or
lcall
addr16
cmp
xlat
push
sub
dec
add
leave
sbb
cwtl
lea
mov
push
jge
sub
jmp
test
mov
inc
xor
jns
int3
push
faddl
or
xchg
or
lock
out
jp
inc
sbb
popa
cmp
adc
mov
sub
mov
pop
insl
or
mov
mov
cmp
scas
sbb
sahf
fidivrl
add
xchg
pop
lods
fnstcw
cwtl
sbb
sahf
xor
lahf
mov
or
mov
jp
push
popa
sbb
fcoms
ror
mov
mov
mov
int3
mov
pop
pop
outsb
cmpsb
mov
cmp
popf
outsl
scas
mov
cmp
dec
mov
xchg
push
mov
jns
pop
enter
dec
es
pop
lret
or
ret
pop
cmp
daa
es
mov
push
or
cli
lods
push
sbb
out
pop
lcall
xchg
and
sbb
adcb
pusha
sub
sub
push
pop
aad
popa
out
sbb
xchg
andb
pushf
mov
fnsave
shrb
ror
cmp
inc
sbb
push
in
cld
push
int3
push
sarb
or
lock
cmpsl
sbb
jle
push
pop
mov
pop
ja
clc
pop
xlat
xchg
mov
mov
aad
pop
sbb
std
fiadds
push
test
ja
inc
mov
cmp
push
pop
sub
or
decl
sahf
pop
aam
icebp
rclb
xchg
fstl
xchg
xchg
xlat
hlt
cwtl
mov
sbb
repnz
frstor
pushf
pop
pusha
loope
cli
cmp
inc
sub
cmc
repnz
cmp
shlb
int
jbe
push
cltd
ret
ja
add
cmp
int3
scas
push
in
mov
jp
sub
mov
jecxz
js
sbb
pop
push
rolb
mov
jb
in
add
das
and
jle
scas
mov
shl
mov
inc
inc
mov
mov
cwtl
stos
pusha
out
sbb
sub
es
sub
and
jmp
sub
outsl
jge
sbb
test
xchg
sbb
or
in
push
jp
sub
repnz
in
es
in
scas
push
out
cmp
jo
dec
in
mov
mov
push
lea
mov
pop
mov
ja
aaa
scas
xchg
fucomi
loop
or
notb
add
add
mov
std
push
or
lods
enter
shll
je
mov
mov
jbe
stos
pop
xchg
rol
sub
rorb
fmull
adc
mov
pop
clc
lods
out
adc
mov
out
xchg
push
insb
movsb
mov
in
iret
clc
mov
mov
xchg
out
sbb
mov
or
mov
popf
dec
int
data16
std
xchg
xor
and
ret
repnz
imul
mov
pop
shl
push
idivl
arpl
adc
mov
cmpsb
aas
loope
mov
daa
cld
iret
dec
repnz
sbb
jmp
and
mov
mov
movsb
mov
jl
xchg
lret
xchg
and
arpl
inc
aas
in
and
ror
ss
shll
dec
insl
stos
and
lretw
add
loop
cmp
cmpsb
mov
shrb
fnstsw
call
mov
push
in
scas
js
repz
jl
les
xchg
lcall
stos
xor
icebp
dec
cmp
div
mov
mov
in
mov
loope
mov
out
and
push
hlt
cli
loop
out
loop
cmpsl
jnp
jg
mov
adc
jl
jno
mov
daa
popa
mov
stos
je
fidivrl
incl
out
cmpsl
inc
sbb
jmp
xchg
xchg
mov
stos
mov
jbe
mov
sub
xchg
es
inc
jle
or
xchg
and
mov
ret
scas
clc
into
dec
clc
rclb
js
andb
outsb
out
jmp
sbb
mov
mov
push
mov
push
mov
enter
cmp
cmp
push
jnp
cmp
cmp
mov
daa
cmp
and
push
xchg
out
out
ret
pop
movsb
out
sti
ficomps
xchg
out
mov
jle
in
sub
loop
into
loope
and
add
cli
jns
mov
test
shll
jb
insl
push
xorb
inc
lock
adc
jecxz
dec
add
and
adc
arpl
adc
fnstcw
das
jmp
adc
cmp
jb
es
decb
inc
add
push
mov
pop
fidivs
in
pop
jbe
xchg
aad
xchg
sbb
mov
mov
fs
out
xchg
cli
mov
push
xchg
fdivrp
pusha
call
shll
jp
jbe
mov
popa
cli
mov
test
dec
shll
scas
push
xchg
cli
ret
clc
inc
cmp
filds
xor
cmpsl
mov
cmp
mov
inc
push
in
push
sbb
and
pop
mov
les
lods
push
cmp
ja
scas
iret
xor
add
int
data16
cld
mov
mov
cmp
jo
inc
out
das
inc
dec
ds
pop
xor
xlat
rorl
push
out
out
cmpsb
mov
scas
ret
nop
mov
add
and
xchg
mov
es
idivl
mov
pop
test
out
pushf
subl
clc
cmc
jnp
inc
outsl
push
rcl
mov
call
imul
lds
push
dec
notb
std
jbe
adc
push
xor
or
lea
addr16
add
imul
ror
xor
pop
out
sar
mull
repnz
inc
outsl
xor
fidivrs
xchg
push
test
in
push
or
stos
pusha
and
cmpsb
cmpsl
lods
pusha
jmp
inc
jbe
cmpsb
shll
jle
std
push
xor
push
fs
jecxz
lock
inc
andl
jle
mov
jae
mov
and
bound
stos
mov
in
stos
loopne
jle
ss
and
mov
std
arpl
ss
stos
mov
mov
mov
push
sarl
lds
push
pop
fbld
sub
gs
jge
cmp
orb
mov
inc
mov
push
cli
mov
neg
dec
lcall
mov
cmpsl
test
mov
es
loope
movsb
push
call
sub
iret
and
jb
loop
outsb
into
pop
dec
jp
push
push
into
jle
addr16
ret
iret
push
ljmp
mov
cli
jg
mov
into
icebp
imul
sbb
pop
out
mov
in
in
jae
lea
cs
cmc
mov
ret
cmp
pop
in
mulb
clc
mov
ret
loop
int
leave
pusha
mov
cmpsb
cli
std
into
pop
outsb
push
adc
mov
ljmp
pop
adcl
jp
inc
ror
subl
sbb
and
mov
movsl
or
ficomps
mov
cmp
loop
sub
adc
push
fmuls
pop
or
ficompl
xchg
mov
or
inc
cmpsl
xchg
jecxz
fidivrs
cmc
sarb
add
adc
outsb
sti
cli
mov
lods
popf
add
sbb
push
mov
jno
out
push
jb
outsb
fidivs
cs
cmp
push
std
sbb
test
push
ds
mov
jecxz
out
sti
mov
push
mov
sbb
jg
repz
ds
sti
mov
out
in
sti
sahf
addb
mov
mov
mov
aad
xchg
lds
arpl
adc
or
mov
pop
mov
xor
es
ds
idiv
dec
jl
lahf
pop
frstor
es
dec
movsb
or
xchg
jl
xchg
cmpsb
test
xor
push
xorl
ss
fidivs
fisubs
out
jb
and
cmp
cmp
mov
stos
leave
hlt
loopne
mov
push
cmp
xchg
jmp
mov
jp
add
mov
xchg
fldcw
outsl
test
scas
in
iret
xchg
pop
idivl
repnz
movsb
popa
scas
cmp
jg
sbb
insb
in
lret
or
fbstp
lret
mov
ss
cmp
mov
mov
icebp
dec
jle
testl
or
add
scas
xor
xor
sub
in
fxch
pop
mov
xor
pop
sbb
mov
and
adc
lods
outsb
fucomip
fsts
es
cmpsl
dec
and
and
sub
push
jmp
xchg
lock
and
xor
fwait
sti
mov
dec
mov
add
add
mov
xchg
jae
insb
jg
dec
cs
ret
int
loop
popa
add
cmp
scas
fs
mov
mov
or
dec
cli
ss
insl
pop
cli
cmp
mov
addr16
xchg
sub
fdivrs
fdivrl
jmp
inc
mov
out
adc
repnz
lea
andl
pop
sub
xor
and
data16
jecxz
xor
dec
faddl
dec
xor
fwait
sbbl
mov
dec
push
daa
jns
or
cmp
bswap
cld
xlat
jbe
inc
test
frstor
xor
jg
jg
in
cwtl
jbe
aas
stc
sub
rorl
or
cld
inc
sub
cmp
sub
or
add
repnz
popa
lret
mov
repnz
cltd
jg
mov
mov
adc
add
xor
fdivrs
or
mov
xor
sarl
mov
mov
xchg
xor
xlat
scas
add
rcll
mov
cmp
xor
jp
jbe
cmp
lea
gs
jmp
imul
ljmp
add
repnz
jmp
xor
movsl
aaa
xchg
into
jo
nop
add
cvtps2pd
dec
xor
insl
test
pop
mov
or
add
popa
sbb
and
jge
adc
xor
mov
push
fidivl
jae
ds
daa
into
push
bound
mov
bound
cmpsl
scas
xor
mov
dec
ljmp
in
mull
in
mov
mov
insl
cld
pushl
pushf
xchg
mov
orl
shlb
push
push
cwtl
and
std
sarb
incl
mov
push
lret
xor
aas
mov
or
pop
mov
or
andb
add
add
add
add
add
add
add
add
add
mov
add
xlat
mov
add
or
add
in
mov
or
stc
mov
or
add
or
and
or
adc
or
push
mov
or
sub
or
xor
or
inc
mov
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
arpl
or
fisubl
and
xchg
cld
jnp
sub
adc
or
adc
es
rolb
cmpsb
or
xor
test
pop
xor
inc
jo
sub
ljmp
adc
and
and
mov
and
imul
fadds
mov
or
lret
dec
dec
adc
push
test
movb
das
cmpsb
cmp
jbe
cwtl
test
sbb
xor
xor
inc
add
mov
stos
test
setns
push
sbb
jo
or
push
inc
xor
sbb
leave
add
test
mov
jp
add
lods
jg
add
push
adc
add
push
clc
scas
mov
shlb
cli
fwait
or
xlat
leave
push
movsb
hlt
orb
ljmp
cmpsb
push
je
push
pop
mov
scas
sub
pop
popf
and
and
xchg
fimuls
je
push
mov
push
je
es
push
rcll
mov
push
call
mov
mov
sbb
adc
add
jmp
add
cmpsl
mov
stos
and
outsb
add
xor
push
jne
scas
ljmp
movsl
xchg
mov
imul
add
add
dec
adc
add
in
inc
popf
add
out
idivl
fiaddl
push
adcb
xor
jb
add
xchg
leave
mov
jge
movsb
inc
sbb
xchg
inc
xchg
inc
in
cs
add
pop
jmp
nop
nop
aas
xor
inc
push
mov
mov
add
dec
mov
add
divb
addl
inc
jle
cli
jnp
aaa
add
push
aas
adc
and
into
dec
testb
cltd
inc
sub
push
negb
push
mov
into
out
cmp
xor
or
sbbb
xchg
rolb
dec
jne
adc
pop
loopne
inc
lock
or
push
icebp
adc
and
push
ljmp
add
sub
cmp
in
sub
in
add
nop
int3
jmp
test
icebp
add
mov
rolb
push
enter
mov
sub
fisubrs
add
divl
lahf
int3
mov
repnz
add
add
xor
fmull
jle
cltd
cmp
or
push
es
in
adc
sub
adc
and
and
inc
mov
test
or
sarl
inc
enter
inc
lret
mov
out
adc
and
adc
fs
mov
jb
punpckhqdq
shll
std
lret
jmp
in
and
and
push
and
pop
and
pop
and
imul
insb
and
cltd
and
lods
and
xor
or
or
rorb
inc
int
pusha
jl
add
ret
or
adc
popa
bound
or
add
and
mov
add
add
xor
lods
inc
add
and
and
push
xor
inc
sti
and
incl
inc
jb
inc
jae
inc
jns
test
xchg
je
mov
lods
or
or
ret
dec
les
testb
andl
pop
add
xor
or
or
cmp
jge
or
xor
and
or
or
xor
mov
or
cmp
mov
andb
add
or
or
or
or
push
mov
cmpb
xchg
pop
adcb
or
andl
imul
jno
inc
ja
int
or
xchg
pause
or
movsb
or
lahf
addl
movsb
insl
inc
adc
cmp
add
lahf
rol
add
out
and
outsb
push
or
add
add
dec
add
sbb
lock
inc
divl
or
add
and
xor
add
loopne
add
add
dec
negb
mov
pusha
mov
or
cmp
sbb
or
sbb
mov
add
add
mov
add
mov
xchg
orb
sbb
adc
and
jecxz
outsl
adc
mov
or
les
push
or
push
jnp
aas
mov
mov
or
lcall
and
push
mov
mov
dec
repz
xor
sub
dec
xchg
pop
insb
add
ja
repz
jno
add
addl
fs
add
push
mov
xor
popf
push
sbb
lea
pop
enter
dec
adc
xchg
xor
adc
pop
cmpb
add
int
es
push
adc
pushf
or
ret
mov
dec
jecxz
or
xor
lods
stos
sub
or
inc
jecxz
pop
inc
fadds
push
fwait
in
sub
add
push
add
pop
add
pop
add
fs
jp
mov
hlt
nop
or
mov
cmpl
inc
xor
push
push
dec
and
imul
pop
loopne
popa
sahf
mov
mov
enter
mov
mov
cmpsl
and
lahf
push
or
xlat
xor
jmp
or
mov
xchg
xchg
addr16
add
aad
inc
inc
hlt
add
test
int
je
mov
mov
xchg
cmpsb
inc
xchg
push
inc
rolb
icebp
pop
inc
cli
inc
dec
sub
dec
add
sbb
or
sbb
lcall
xchg
add
or
fcompl
jecxz
jo
xor
add
insb
add
insl
add
je
and
adc
add
and
lret
lret
sbbb
sbb
xorl
shlb
jp
sbb
inc
bound
inc
fld
inc
fucom
mov
fiadds
cld
adcb
addl
rolb
shlb
and
aam
mov
dec
fstl
and
mov
andb
fists
ficoml
push
or
or
pop
or
or
or
bound
mov
gs
std
outsb
or
jo
les
daa
jg
pop
or
and
andl
xchg
or
and
add
iret
movsl
xor
push
jge
push
or
scas
or
or
mov
cmp
or
imull
xor
add
sub
out
shrb
xchg
mov
mov
or
enter
adcl
jbe
xsave
fnsave
add
pop
push
adc
sbb
aam
sbb
xchg
mov
leave
mov
cltd
adc
adc
rcrb
and
or
pop
adc
adc
nop
int3
int3
or
bound
loop
add
stos
fcmovu
mov
stos
gs
mov
fs
imul
and
fbstp
ja
add
std
add
mov
adc
out
add
xor
dec
mov
inc
mov
mov
inc
out
aas
add
inc
add
dec
add
dec
add
push
push
scas
push
mov
pop
inc
push
xchg
inc
pop
mov
pop
inc
pop
loop
pusha
loopne
popa
in
add
addr16
insl
add
jno
lods
ja
pop
jg
roll
xor
push
sbb
ret
push
inc
or
pusha
mov
je
lret
js
cmp
cmpsl
sbb
push
and
mov
add
adc
pop
xchg
adc
adc
adc
adc
mov
ret
and
inc
icebp
jmp
mulb
clc
test
mov
add
imul
and
test
cmp
rol
or
outsl
or
and
pop
adc
adc
adc
and
and
inc
mov
inc
mov
cs
mov
fcoml
lret
cltd
add
and
es
add
inc
ljmp
icebp
movntq
out
cmp
loope
add
jg
jns
push
xchg
cmp
nop
jno
test
das
pusha
and
jl
or
int
or
pop
fdivrs
xor
out
add
pop
adc
cmp
cmp
pop
sbb
pop
or
pop
imul
jnp
les
mov
jno
mov
int
inc
mov
out
dec
add
imul
push
push
mov
or
add
jle
cmpsl
out
pop
adc
dec
je
add
or
imul
aaa
mov
inc
add
ljmp
rorl
inc
int3
dec
ret
inc
enter
pop
and
jns
and
iret
sub
int
andl
outsb
fwait
xchg
clc
pop
add
add
ds
push
pushl
and
cmc
mov
fcmovne
daa
ds
sahf
rorl
enter
or
adc
push
cli
mov
mov
sbb
adc
xor
pop
popf
push
inc
and
jae
outsl
idivb
add
inc
out
aam
roll
push
lea
mov
sbb
add
add
pushl
sub
mov
and
mov
cld
cmp
push
out
mov
test
outsl
aam
ds
lods
data16
setne
add
mov
pop
or
arpl
lret
shll
or
cwtl
enter
rolb
ja
adc
or
ficoms
inc
fistl
xchg
cmp
cmpsb
inc
hlt
jp
add
orl
adc
push
bound
xor
adcl
les
pop
sti
jb
hlt
je
sub
cli
sar
test
inc
out
xor
call
mov
aaa
cmp
loope
pop
xor
sub
leave
adc
or
in
sbb
movsl
in
xor
clc
jo
add
mov
test
xchg
pop
add
sbb
cltd
jno
in
or
popf
or
mov
push
inc
insb
jae,pn
rcrb
add
cmc
bound
flds
inc
or
or
gs
test
add
cltd
bound
and
dec
loop
jno
imul
or
or
lods
xchg
xor
or
add
je
add
popf
and
cmpl
fs
or
mov
mov
out
sbb
popf
mov
pushf
mov
sbb
cwtl
or
push
sbb
cmpb
inc
fdivrp
nop
mov
lods
out
dec
jae
adc
fisttps
or
jnp
xor
loopne
neg
and
push
andb
add
sub
movsb
dec
jnp
sub
lret
cmpsb
adcb
mov
pop
mov
pop
popa
sub
cmpsb
in
fwait
mov
aad
popf
sub
cltd
ss
dec
inc
adc
mov
adc
dec
insb
pop
loopne
inc
and
xor
jmp
dec
in
and
ljmp
cmp
jecxz
hlt
cs
or
cltd
dec
mov
xor
pop
pop
push
add
push
into
and
xor
leave
jge
adc
aaa
and
das
lea
and
xchg
mov
sti
rorl
aaa
scas
adc
mulb
cmpsl
cld
inc
incb
bswap
dec
sub
test
cmp
push
mov
xor
xchg
inc
add
adc
xor
xchg
or
rolb
or
xor
adc
cmp
hlt
dec
add
fcomps
and
mov
cmp
sti
or
jmp
adc
ret
cmp
add
movsl
xor
hlt
movb
and
jne
mov
push
jne
xchg
std
lods
jle
int3
shlb
or
inc
add
xor
sbb
or
pop
push
jp
faddl
add
sbb
xor
add
pop
out
and
dec
aad
sbb
xchg
sub
adc
adc
rolb
mov
stos
add
aad
jae
adc
cmp
and
add
jnp
sbb
roll
sahf
and
xor
add
sub
xchg
sbb
stos
clc
cmpsl
mov
lea
fs
movsl
cmp
or
add
cltd
cmp
aaa
jg
call
or
inc
xchg
dec
add
rolb
mov
inc
add
ret
dec
xchg
add
jns
daa
mov
or
loope
mov
gs
dec
jno
test
lods
enter
fisttpll
shlb
or
adc
add
cmp
pop
push
xchg
cmpsb
push
push
stc
add
lahf
cmp
clc
sub
mov
xchg
fistpl
sub
pop
sbb
adc
xchg
add
xor
inc
mov
out
sub
pop
mov
add
insl
aam
test
shlb
loopne
jnp
nop
cmpsb
and
repnz
add
pop
pop
or
pop
test
sub
and
sub
cli
dec
lock
adc
pushf
repnz
cmp
add
lea
push
mov
lock
push
pop
imul
add
sarl
shr
xchg
es
loopne
add
cmpl
gs
cs
inc
das
inc
adc
add
adc
xorl
stos
jbe
and
mov
pusha
push
test
push
into
inc
xchg
aad
xchg
arpl
xor
push
cld
dec
je
xor
fists
stos
mov
jmp
aam
lret
sub
in
mov
icebp
mov
dec
nop
andb
mov
cmp
add
pop
and
lock
add
aad
xchg
cs
xor
push
test
cmpsb
pop
inc
std
jno
in
push
sbb
xchg
mov
push
idivl
xor
push
sbb
lock
lods
mov
add
jle
inc
add
jne
and
cmp
xor
sbb
or
mov
fstl
inc
insl
outsl
xor
fdivs
add
bound
xor
sbb
jl
fstps
mov
and
out
sbb
lods
xchg
jo
js
adc
push
je
mov
cmpb
es
mov
lock
xor
test
cmp
add
sbb
ficompl
mov
es
inc
jo
insb
lret
and
inc
xchg
lret
sbb
andb
lock
add
mov
cmp
sbbb
or
dec
rorb
adc
mov
push
roll
mov
sub
mov
mov
xor
add
adc
cmc
mov
mov
add
lock
int3
xor
cltd
or
add
mov
push
xchg
cwtl
add
inc
mov
xor
and
push
gs
mov
xor
mov
inc
and
jle
cmp
or
mov
xchg
push
jmp
inc
sub
adc
add
mov
cld
sbb
sarl
clc
int
test
sbb
or
out
inc
out
les
js
or
mov
sbb
in
pop
or
xor
insb
sbb
sbb
arpl
dec
sbb
rcll
mov
adc
mov
cwtl
add
outsb
push
pop
sbb
mov
lea
mov
roll
mov
repnz
inc
add
cmp
add
popa
mov
mov
jge
jo
pop
push
cli
loope
and
jle
repz
or
pop
pop
test
jnp
inc
subl
pop
or
cmp
mov
lds
imul
aam
xchg
and
enter
aas
es
inc
in
shrb
or
add
imulb
pop
and
xor
rorb
mov
call
bound
daa
test
or
sbb
push
or
jne
insb
pop
or
push
rcl
sbb
push
push
push
or
add
sub
xor
test
rcll
adc
push
adc
add
into
orl
fmulp
icebp
push
test
data16
sub
sbb
sub
or
imul
xchg
and
mov
daa
xor
adc
sbb
ljmp
es
or
adc
or
dec
arpl
in
out
mov
sub
sbb
mov
movsb
pushf
inc
xchg
scas
pusha
shl
pop
push
add
pop
push
dec
and
int3
and
mov
rol
cs
inc
mov
out
add
add
dec
add
in
dec
sbb
mov
shrl
dec
inc
or
sub
ror
xchg
ja
test
loope
cmc
cmp
and
inc
pop
test
pushf
std
dec
add
sbb
push
cs
cltd
aam
push
and
add
test
push
sub
adc
sub
popf
loopne
ret
pusha
mov
std
loopne
mov
das
cmp
adc
sub
mull
aas
popf
push
or
ds
pop
out
in
dec
stc
or
data16
pop
add
or
jo
pushl
add
xlat
inc
sbb
jecxz
stos
mov
enter
push
subl
lcall
fnstsw
bound
mov
or
sbb
xor
push
int3
and
pop
cmp
popf
mov
xor
sub
cwtl
mov
aas
fldl
push
xchg
dec
mov
xor
decl
and
sbb
push
xchg
xchg
mov
add
or
pop
fbstp
mov
fwait
shll
xor
dec
add
lret
mov
fldl
mov
cli
fcomps
xor
xor
and
push
sbb
cwtl
pop
ficomps
rcrb
mov
or
insb
test
call
pop
jae
mov
mov
xchg
mov
out
push
push
mov
xchg
mov
ret
mov
outsb
add
jg
lahf
adc
dec
jl
mov
mov
pop
sbb
jo
cli
xor
rcll
sub
adc
xor
gs
dec
daa
out
and
popa
lahf
adc
movsl
rcll
cltd
out
adc
roll
test
mov
lret
adc
mov
adc
ret
cld
mov
or
inc
mov
or
out
es
inc
xor
and
hlt
xor
jb
sahf
pop
add
inc
mov
cmpsb
add
xchg
fwait
inc
xor
dec
xor
xor
lahf
rolb
and
jne
pusha
mov
sub
cld
pop
cltd
xor
call
addr16
enter
cld
cmp
seto
call
jl
xor
and
arpl
and
mov
jmp
lds
es
jmp
addr16
aam
leave
add
jge
andb
mov
jmp
push
nop
sub
ljmp
jmp
decl
loope
jae
push
neg
sti
add
pop
aas
and
bswap
cmp
mov
shll
push
jne
pop
or
pop
neg
cmp
inc
inc
sbb
mov
movsb
mov
cs
shr
rorb
mov
xor
call
jecxz
fisubrl
xchg
call
mov
xchg
fwait
shrl
adc
ret
mov
dec
and
insb
dec
add
and
lock
mov
or
inc
call
dec
test
xchg
and
leave
sub
xor
call
rcrl
roll
inc
jbe
pop
or
mov
inc
test
cmpsb
mov
xchg
jo
inc
neg
lods
test
xor
aad
pop
jne
dec
jmp
adc
cmpsl
xchg
ficompl
andb
lds
fstpl
cmp
notb
push
dec
call
mov
test
cmpsb
test
lret
loope
test
test
jno
nop
jae
fiaddl
add
cmpsb
lahf
and
je
popa
neg
nop
mov
rcrl
pop
dec
inc
jbe
pop
add
mov
in
andl
xchg
js
add
sbb
mov
lret
icebp
sbb
add
out
and
push
dec
or
jo
add
xchg
imul
test
fidivrs
mov
mov
or
push
adc
xor
xor
and
int3
testl
inc
dec
inc
cwtl
fwait
jo
outsb
aad
push
add
addl
dec
fiaddl
jns
xchg
sub
inc
cmpl
les
dec
fidivl
pop
fadd
cwtl
cmp
inc
jp
sub
xchg
mov
add
shr
int
in
jbe
ds
xchg
adc
and
and
sti
jo,pt
push
xlat
out
push
sbb
sbb
add
pop
cmp
sub
add
stos
stc
subb
adc
add
iret
notl
call
add
jbe
pop
mov
icebp
inc
andb
sub
xchg
pushf
sbbl
add
mov
xchg
stc
and
add
push
pop
pop
inc
jle
ficomps
pusha
add
lods
and
xor
add
pop
icebp
add
mov
nop
gs
in
fsts
aaa
lret
mov
sbb
test
ja
movl
daa
test
inc
cvtpi2ps
iret
ret
dec
fidivrl
sarb
xchg
or
inc
mov
xor
mulb
into
adc
fstl
pavgb
shl
xchg
add
sti
sbb
mov
pop
pop
outsl
fcoms
in
xor
pop
pop
mov
lds
ret
add
or
sub
xchg
inc
sub
add
inc
inc
cmp
lods
enter
dec
inc
add
or
add
push
xchg
adc
adc
mov
and
jg
add
testl
ljmp
in
cmp
sub
or
push
add
cmp
rorl
or
add
add
pop
pop
adc
push
cmp
lock
cmp
adc
mov
and
out
xor
lret
sub
push
les
flds
gs
mov
mov
xor
cmp
dec
in
push
mov
aas
xor
imul
das
xchg
xchg
inc
dec
jge
add
lret
dec
xorb
shrb
xchg
inc
les
dec
mov
js
and
mov
pop
pop
adc
fadd
stos
inc
xor
test
pop
popa
test
loope
push
sub
hlt
push
jae
xchg
aaa
inc
rcrl
movsb
add
lock
lea
sub
adc
popa
cwtl
xchg
and
add
cli
xor
xchg
insl
inc
cmpsb
neg
dec
addl
mov
xchg
call
pop
je
xor
inc
repnz
bound
aaa
jl
mov
loopne
push
pop
popa
inc
push
fnsave
sub
shll
fiaddl
inc
rcrl
and
jmp
bswap
test
xchg
in
js
mov
gs
or
or
push
adc
hlt
adc
jmp
into
xor
jmp
adc
adc
cmp
xchg
rclb
pop
lret
jbe
xor
push
adc
testl
cmc
ret
icebp
and
jg
dec
cmpsb
scas
adc
pop
out
and
ret
inc
push
js
push
enter
sahf
lea
data16
movsb
aaa
clc
push
add
or
lret
sub
dec
mov
lock
xchg
sub
mov
mov
cmp
xor
xchg
push
mov
and
out
pusha
rcl
in
xor
icebp
xchg
inc
es
mov
mov
andl
pop
sarb
xchg
dec
jl
sub
sub
add
test
mov
pop
repz
fsts
clc
lods
nop
pop
adc
lcall
les
cmp
and
cmc
adc
add
repnz
push
stos
addl
mov
adc
mov
pop
xchg
push
sbb
ret
cmp
and
into
xchg
or
inc
icebp
dec
insb
pop
mov
cwtl
jmp
pop
subb
add
repnz
xor
stos
push
inc
xchg
fisubs
test
sar
pop
sub
aam
push
cmp
std
iret
push
adc
push
add
xor
out
aad
mull
inc
xchg
scas
pusha
cwtl
test
pop
jno
sub
xchg
mov
lods
or
and
addr16
mov
or
sbb
cwtl
orb
shl
aam
loopne
aad
cmp
enter
adc
lds
sub
arpl
inc
movsl
pop
addb
mov
lret
add
xor
sbb
jmp
out
jnp
and
ret
mov
cs
cmp
ret
leave
xor
add
loop
dec
dec
and
out
outsb
inc
add
inc
mov
fsts
add
xchg
and
insb
jmp
fildll
mov
xor
push
or
rcrb
das
ja
pusha
bnd
out
js
out
adc
and
btc
push
dec
outsb
add
repz
mov
arpl
movsl
ss
inc
add
test
add
fisubs
rcrb
fsts
push
not
pusha
mov
rorl
dec
xchg
xor
test
inc
mov
push
das
xor
sub
rol
dec
sub
icebp
sti
inc
adc
fidivrs
dec
fadds
sub
sbb
dec
push
pop
pop
adc
inc
pop
and
ficoms
lret
hlt
add
mov
outsb
lds
or
stc
pop
testb
outsb
add
mov
mov
or
mov
bound
pop
pop
mov
stos
inc
repz
int3
dec
mov
rorl
mov
mulb
adc
inc
insb
add
xor
sub
jbe
shl
fmuls
aam
iret
andb
xchg
mov
mov
test
pop
sbb
pusha
xor
not
std
dec
repz
enter
dec
jmp
cwtl
add
std
xor
sub
push
pop
pop
dec
and
dec
imul
xchg
cmp
scas
dec
sbb
out
dec
dec
sbb
rolb
cmpsb
jmp
cmp
js
mov
cltd
pop
sbbb
jle
push
shll
or
and
jle
pop
sbb
xchg
cmp
inc
and
sbb
arpl
and
sbb
xchg
popf
xor
sub
aad
adc
xor
int
add
cmc
lcall
neg
and
dec
ret
pop
sbb
pop
push
mov
subb
inc
bswap
inc
xchg
inc
mov
inc
in
int
xlat
inc
and
cmpsb
cltd
push
jecxz
pushf
shlb
sbb
fwait
int
adc
not
jge
cmpsb
xlat
or
out
mov
popf
inc
dec
cmpsb
sti
add
bound
cmpsl
ja
leave
mov
xor
sub
mov
lds
pop
sub
fldt
mov
mov
bound
mov
dec
inc
cmp
xchg
xchg
or
push
cmp
orl
fcoms
mov
lds
mov
add
pop
scas
cmpb
inc
jns
hlt
push
rorb
pushf
ss
pop
int
jle
or
pop
jge
add
push
cmp
movl
loope
aaa
cltd
inc
scas
push
lcall
outsl
insb
clc
pop
or
push
pop
pop
inc
jmp
outsl
mov
xor
cmp
push
mov
add
mov
mov
adc
icebp
add
loope
mov
push
pop
xlat
inc
add
ficoml
and
in
jb
push
ret
dec
or
jae
sarb
stc
adc
add
aas
push
filds
lock
or
sbb
stc
das
addr16
mov
scas
aas
adc
xor
sub
adc
mov
imul
in
adc
dec
in
shlb
inc
dec
and
adc
addl
neg
inc
jecxz
adc
int
shl
push
pop
push
sbb
jmp
add
inc
subl
xor
nop
dec
out
add
lret
fldenv
dec
sarl
roll
jno
mov
fisubrl
cmp
fisttpl
fisttps
not
cmp
lret
jo
cltd
and
cwtl
xor
pusha
in
cmp
mov
xchg
lret
adc
add
cs
test
xor
jecxz
inc
adc
mov
cmp
or
daa
test
xchg
jle
add
jle
or
jg
js
mov
aam
sub
loope
xor
jge
mov
mov
jl
adc
addl
push
pop
test
xor
jp
movsb
pmulhw
xchg
lret
sbbb
popa
imul
in
inc
int
les
cmpsl
fs
pcmpeqd
or
outsl
jno
adc
daa
jo
cs
push
aam
sub
or
fs
add
int3
dec
flds
mov
cmpsl
and
out
inc
sbb
mov
cs
or
fists
dec
pop
dec
in
cwtl
mov
pop
or
cmp
mov
add
jmp
cmc
xchg
and
sub
jecxz
and
scas
pop
cmpsl
mov
lcall
push
rcl
fisubl
ds
xlat
mov
fmuls
adc
subl
adc
lock
push
mov
push
jmp
popl
or
mov
mov
xor
mov
pusha
iret
addr16
cmp
xchg
adc
lods
lds
lds
inc
inc
jl
insb
jbe
add
ds
jnp
lods
jg
lret
mov
sbb
mov
sbb
pop
and
sbb
test
push
adc
cmpsb
pop
aam
mov
push
xchg
xchg
sbb
jne
insl
push
add
cld
push
pop
pop
pop
push
test
pusha
not
xor
push
outsl
ss
cld
pop
shll
add
jp
fs
xor
dec
or
or
cwtl
and
into
les
mov
fidivl
mov
inc
dec
dec
mov
adc
push
aad
nop
mov
mov
mov
mov
and
fiadds
cmp
inc
xor
pop
mov
adc
jmp
lret
lahf
insl
addl
lods
iret
shr
push
pop
pop
or
icebp
inc
fistps
xchg
inc
dec
jbe
add
adc
lcall
adc
xchg
adc
cwtl
scas
rcr
add
addl
lret
sahf
pop
mov
cmpsb
add
jmp
mov
mov
adc
add
xchg
shlb
je
mov
lds
adc
jmp
test
addb
data16
add
leave
sub
lds
jnp
mov
adc
mov
out
setae
mov
push
push
mov
dec
sarl
add
adc
lahf
push
xchg
lcall
mov
dec
repnz
shrb
sub
mov
inc
push
aam
inc
and
add
shl
or
mov
test
push
movsb
jne
pop
adc
mov
hlt
sbb
and
push
dec
adc
xor
fildl
sbbb
cmpsb
mov
ret
jnp
shlb
dec
sbb
rorb
jno
lret
insb
fs
and
movsl
mov
mov
adc
out
xor
rorb
inc
or
lret
push
pop
dec
add
adc
lahf
mov
pop
xchg
and
ret
inc
aaa
mov
pusha
sub
int
arpl
mov
adc
or
inc
and
leave
or
mov
test
xor
mov
push
or
leave
das
sbbb
add
imulb
lret
subb
lods
in
add
js
inc
setno
out
stc
dec
aad
mov
mov
daa
shlb
push
es
cwtl
push
nop
inc
push
stos
ret
push
dec
divl
cmp
div
sti
pop
cmpsb
mov
test
mov
mov
sbb
and
xchg
rorb
fiadds
dec
inc
cmpb
pop
divl
xorb
push
pop
pop
dec
dec
fscale
hlt
imul
adc
iret
push
cld
repz
dec
push
fst
rcrl
or
lret
push
je
push
call
mov
jl
movsb
outsl
cmp
nop
pop
cmp
xchg
rclb
xchg
sub
adcb
mov
stos
rcll
hlt
jae
jecxz
and
scas
das
xchg
mov
shr
jo
cltd
adc
adcb
or
jp
repz
test
gs
push
loope
faddl
and
jae
leave
pop
lock
xchg
pop
xchg
roll
mov
adc
add
jge
pushf
dec
add
shrb
push
mov
shlb
or
outsb
cmpsl
and
cwtl
mov
bnd
test
pop
adc
jp
inc
mov
xchg
dec
popa
or
setb
movsb
pusha
std
mov
adc
notb
mov
xchg
add
cmpsl
inc
adc
jno
imul
mov
adc
arpl
add
inc
scas
fildl
push
popa
loope
loopne
xor
lods
nop
int
pop
xor
mov
ljmp
xchg
lret
mov
sbb
and
movb
inc
mov
sub
add
pusha
mov
inc
repz
in
sub
pop
lea
xor
xchg
sbb
xor
add
fadds
and
sbb
cwtl
flds
rolb
iret
xchg
mov
cli
jmp
std
aaa
outsl
add
mov
subb
insl
sbb
popf
dec
decb
leave
sbb
push
adc
cmp
mov
dec
mov
jo
xchg
push
cwtl
or
neg
test
imul
cs
jne
xchg
push
popa
mov
dec
mov
cmp
push
sahf
js
les
or
cs
pop
filds
or
fistpl
jns
xchg
stos
aas
out
cwtl
cmpsb
lods
add
jb
comiss
jo
push
inc
lods
mov
loope
xor
movsb
xlat
add
andb
sbb
dec
xchg
shll
cmpl
or
shl
inc
and
or
arpl
pusha
dec
mov
out
jp
mov
clc
xor
adc
xor
cmp
and
seto
dec
add
mov
pusha
arpl
jl
xor
jae
cmpsb
fxch
aad
mov
cmp
sub
fisttpll
adc
mov
jge
imul
lret
mov
adc
jmp
xor
fiadds
cmp
sbb
std
ljmp
adc
push
push
xor
and
inc
cmp
mov
jnp
out
add
pop
xchg
sarl
add
not
sub
inc
adc
or
pop
adc
add
cmp
lret
mov
loop
mov
adc
cmp
xchg
jl
jo
inc
cwtl
adc
add
daa
dec
mov
pop
testl
call
or
push
add
icebp
jle
lret
mov
fidivs
test
punpckhdq
pop
mov
test
mov
inc
and
xor
shrb
push
lahf
lcall
adc
mov
sti
add
dec
sbb
or
insb
mov
sti
pop
aam
push
sbb
cmp
popa
and
and
dec
hlt
jle
cmpsl
push
add
inc
sub
dec
sbb
clc
pop
xor
shll
outsb
add
loop
mov
sub
push
xchg
out
xor
xchg
xchg
inc
push
push
aaa
mov
pop
mov
adc
stos
ds
pushf
or
and
call
add
add
fimull
add
clc
insb
mov
icebp
push
and
js
pushf
pop
jge
inc
cli
repnz
negb
and
std
cmp
pop
lea
pop
mov
imull
int
and
outsl
jle
inc
outsb
cmp
nop
les
enter
inc
pusha
jb
push
gs
pushf
and
cmp
fdivrs
adc
pop
inc
fwait
test
addr16
icebp
int3
sub
test
sub
or
into
fsubrl
mov
or
fwait
movsb
dec
add
lret
mov
test
aam
mov
loope
mov
xor
mov
push
pop
inc
pop
out
stos
push
call
test
insl
test
test
dec
movsb
or
outsl
loopne
es
add
int
adc
test
push
ret
inc
stc
inc
xchg
neg
bswap
dec
ds
inc
es
fbld
sahf
jle
add
mov
inc
add
lret
push
out
imul
cmp
or
not
dec
stc
push
sahf
das
inc
pop
xchg
mov
inc
dec
mov
mov
lods
adc
adc
call
stc
xchg
mov
aas
adc
push
in
ror
jecxz
repnz
mov
cmp
sub
iret
sbb
aaa
adc
es
cmpsl
add
sbb
inc
add
enter
inc
test
push
sarl
dec
xchg
xchg
jns
stc
dec
sarl
push
mov
out
lock
xor
push
cmpsl
addb
push
leave
xor
xor
call
mov
push
or
adc
decl
xchg
inc
push
fistps
xor
add
inc
sbb
cltd
mov
sbb
push
inc
jp
push
pop
xchg
push
imull
nop
add
and
nop
xor
jbe
dec
xor
push
std
lahf
pop
pop
xor
mov
shrb
jle
sbb
inc
and
lcall
inc
data16
scas
sbb
inc
ds
mov
rorl
dec
repnz
adc
movsb
dec
sub
dec
loop
fnstsw
ficoml
mov
mov
mov
or
not
cwtl
and
mov
outsl
icebp
movsl
leave
sbb
adc
imul
insb
insl
inc
fisttps
mov
or
test
push
out
rcr
stos
sub
or
div
in
add
in
cmp
add
pop
bound
pop
repz
rcr
lret
test
sub
inc
jnp
fbstp
iret
data16
dec
pop
lods
and
pushaw
fdivs
outsb
adc
dec
mov
sub
adc
lret
jae
imul
add
std
movsb
or
or
clc
and
cld
mov
popf
pushf
jecxz
sbb
mov
lods
pushf
cmpb
pop
repz
in
rclb
add
mov
dec
jo
lds
sbb
mov
jg
jmp
rcll
jo
or
sub
inc
ret
ret
repnz
leave
test
or
call
cmpsb
sbb
mov
jbe
sub
mov
int
test
je
mov
rcrl
scas
sbb
add
inc
push
inc
fisubl
inc
int3
leave
mov
pop
add
out
fldcw
outsb
aaa
mov
mov
cmpsb
push
outsl
adc
int3
add
pop
cmp
jge
and
imul
cmpsl
out
adc
inc
dec
xor
loope
push
push
in
cwtl
push
unpckhps
out
mov
and
xchg
inc
cmp
test
push
inc
adc
dec
addb
je
shl
inc
aas
add
loopne
pop
lret
mov
test
jnp
outsb
dec
and
subl
and
ficoms
jmp
dec
fadds
inc
add
outsb
iret
jne
mov
hlt
pop
add
xchg
shlb
or
dec
pop
incb
jns
ret
dec
adc
int3
arpl
adc
adcl
iret
jae
add
and
ja
jp
icebp
mov
jno
and
pop
cmp
mov
stos
push
mov
sbbb
cli
push
sbb
xchg
dec
push
jo
cld
mov
jbe
dec
movsl
cmp
inc
test
cmp
jne
or
jno
int
push
aaa
mov
sti
adc
dec
push
add
push
mov
dec
verw
mov
add
cmpsb
enter
andl
xchg
sub
sbb
jns
dec
incl
cmp
or
cmp
es
addr16
inc
jmp
dec
xor
ret
ret
ljmp
dec
mov
add
addl
inc
adc
dec
add
cmp
addb
cmp
das
cmp
jbe
pop
xor
xor
je
cmp
and
lret
push
ja
jmp
dec
gs
mov
add
sbb
jno
pop
mov
push
movsl
add
xor
cmc
ret
pushl
mov
xchg
xor
ja
popa
push
out
add
les
hlt
add
xor
xchg
add
mov
push
movsb
mov
aad
pusha
xchg
sub
or
sub
sbb
jbe
add
and
repz
inc
mov
sbb
jmp
mov
hlt
movl
test
imul
std
in
leave
add
dec
pop
add
insb
cmp
arpl
or
and
pop
adc
add
inc
pusha
aad
jno
mov
cmp
aam
dec
std
test
or
movsl
cli
test
xor
inc
leave
mov
mov
xor
add
inc
iret
or
add
stos
lods
xor
es
sub
push
jb
add
enter
mov
and
les
mov
mov
add
mov
movb
jmp
outsl
das
add
dec
push
roll
sub
fdivl
push
jno
add
adc
out
mov
add
lahf
xor
add
js
stc
loopne
add
cwtl
push
loope
mov
cmp
insb
fs
add
sbb
push
imul
mov
test
hlt
repnz
in
xchg
push
inc
jnp
add
shl
or
flds
mov
push
jmp
add
cld
fistps
sub
rorl
pop
popa
mov
dec
into
sub
mov
aam
inc
movsl
fisttps
xchg
fadds
sti
hlt
add
push
imul
inc
mov
sarb
sub
add
xor
or
fnstsw
add
daa
adc
or
mov
and
mov
outsl
inc
or
mov
in
into
push
stc
ficomps
push
leave
fldcw
and
xlat
add
pop
cmp
call
mov
shlb
cmpl
or
loop
add
shlb
ljmp
fildl
push
faddl
jae
or
test
add
pop
aad
cld
iret
push
add
popf
decl
xchg
daa
scas
rorb
setle
jge
inc
shlb
repnz
inc
push
add
push
test
jno
insb
sbb
clc
imul
sbb
loopne
rorl
adc
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
cmp
fisttps
addr16
add
dec
ss
dec
fisubrl
or
imul
dec
add
pusha
jp
inc
ret
jbe
cmp
push
sbb
outsb
xor
imul
lret
sbb
shrb
ss
add
ja
int3
add
add
das
es
mov
mov
add
sub
mov
cmpsl
add
xlat
ret
shlb
sub
scas
ficomps
cld
add
pushf
mov
xchg
insl
add
add
push
jmp
addr16
jb
jo
add
adc
mov
mov
cmp
mov
or
mov
xchg
or
mov
fdivrl
fstpt
or
xchg
xchg
pusha
icebp
clc
mov
add
sbb
int
mov
mov
jae
add
mov
out
sarb
dec
cmp
pop
or
jns
add
clc
shl
imul
insb
push
js
or
xlat
push
addl
add
cmpsl
testl
inc
imul
dec
push
scas
faddl
pop
fldenv
filds
fdivs
push
sarb
jg
mov
jmp
sbb
mov
lret
mov
push
cmpsb
mov
sar
in
push
xlat
add
sub
push
mov
jp,pn
mov
dec
popa
add
add
push
add
aaa
mov
or
ret
add
add
sub
aas
test
sarb
and
dec
loop
jae
loopne
outsb
je
data16
movsl
sbb
inc
insb
call
fstpt
and
add
sbb
and
js
jecxz
ret
xchg
insl
out
sub
jns
mov
movsl
or
fs
iret
jns
imul
in
std
jb,pn
es
xor
fs
jnp,pn
jae
cs
jne
jns
idivl
jmp
subb
cli
cmp
jle
or
dec
dec
and
icebp
push
jmp
adc
adc
outsb
lret
cmp
bound
icebp
popa
jo
clc
pop
sbb
jb
cmc
sbb
mov
sub
out
inc
adc
mov
dec
loop
stos
or
sbb
sub
xchg
sub
push
out
sbb
dec
clc
ja
xor
insb
mov
dec
adcl
sub
or
bound
push
sbb
dec
loope
mov
cs
inc
cmp
jmp
jns
and
adcb
dec
es
push
or
add
jae
push
cwtl
mov
sbb
imul
jb
iret
flds
lret
inc
mov
jmp
jb
loopne
xlat
sahf
in
icebp
xchg
sub
pushf
rorb
mov
cli
inc
ret
jmp
dec
fs
mov
or
push
mov
and
dec
inc
roll
inc
out
inc
add
xchg
aaa
cmpsb
lods
fwait
cmc
or
and
xor
cmp
sbb
bound
mov
dec
push
stc
ljmp
xchg
sub
push
sub
insb
mov
pushf
xor
mov
arpl
je
mov
fs
lret
jns
pop
sub
fs
lds
push
xchg
adc
lods
shlb
mov
les
mov
imul
popa
decl
dec
mov
inc
dec
clc
dec
inc
int3
jo
out
inc
push
cld
dec
and
aaa
sub
or
adc
sarb
ljmp
mov
jp
loop
push
xlat
dec
jg
and
rcrb
inc
push
jae
je
xor
and
jae
test
hlt
sub
insb
fistpl
dec
icebp
sub
hlt
test
or
js
ja
jg
jne
cmp
mov
xchg
jo
xchg
sub
imul
popf
cmp
or
test
fs
xchg
outsl
or
jl
jle
imul
xchg
iret
js
cmp
js
in
dec
aaa
push
scas
sub
arpl
cmp
jnp
ret
imul
fwait
push
mov
inc
xor
dec
daa
push
mov
leave
rclb
jle
outsb
js
es
cmp
cmp
std
fnsave
lods
jg
pop
in
outsb
dec
jb
jne
lcall
out
pop
stc
sub
loop
jmp
pop
cld
stos
loop
in
mov
outsb
fsubs
mov
and
add
rorl
cld
outsb
sbb
in
dec
sbb
lock
pop
pop
out
push
insb
arpl
outsl
aam
js
sbb
in
mov
mov
or
nop
ret
insl
sbb
aad
or
adcb
add
sub
pop
xor
push
js
adc
pop
and
bound
imul
inc
sarb
jp
sub
or
pop
nop
jbe
add
lcall
mov
push
vpackssdw
or
int
or
and
arpl
or
dec
inc
gs
and
sub
in
nop
mov
pop
jo
out
dec
bound
fucomp
jge
mov
sub
pusha
adc
add
add
adc
add
add
add
push
loope
and
cmp
pop
cmp
or
xor
jl
and
sub
ljmp
inc
jns
mov
cmp
sbb
cmove
push
insb
add
sub
mov
xchg
je
cmp
test
rorl
or
ret
nop
adc
dec
fs
xchg
adc
cmp
pushf
or
es
or
sbb
dec
adc
in
add
aas
push
xor
push
roll
adc
sub
jno
push
sub
jp
sub
xlat
add
push
jp
aas
adc
movsb
mov
fmul
inc
sbb
arpl
xor
fs
mov
push
dec
imul
scas
cmp
pop
sbb
sub
gs
jb
fidivrl
or
dec
mov
mov
and
inc
sub
cwtl
popa
mov
push
mov
dec
push
push
and
push
or
int
jbe
movsb
sti
aam
mov
or
stos
mov
stos
mov
inc
js
dec
pop
and
xor
or
mov
push
nop
mov
iret
adc
or
mov
imul
jns
popa
mov
pop
push
dec
aaa
popa
add
cmp
outsb
or
jb
fnstcw
jb
mov
and
addr16
ss
mov
fs
pop
jns
outsb
or
push
adc
test
push
pop
aas
push
adc
sub
xor
and
pop
data16
pop
fwait
adc
rcll
xlat
push
adc
in
je
push
jno
inc
adc
sub
xor
stos
adc
inc
cmp
in
test
ss
cs
or
or
and
jmp
cmpb
add
out
jbe
shlb
repnz
jo
dec
inc
push
dec
gs
xor
jae
sub
jecxz
sub
call
orb
je
adc
adc
mov
adc
js
je
lods
cmp
outsb
jns
push
adc
or
loop
jp
cld
adc
pop
sbb
insl
outsl
push
xchg
add
lret
xchg
sub
xlat
push
sub
mov
dec
fsubrs
dec
inc
add
dec
dec
inc
sbb
ds
stos
adc
dec
sub
inc
repnz
mov
xchg
xchg
aaa
sub
dec
xchg
inc
push
push
or
xchg
xor
or
je
ja
test
daa
adcb
or
ja
ja
add
push
mov
cmp
pop
in
data16
xor
sub
jae
sub
dec
mov
insb
imul
je
testb
outsb
jbe
test
fidivs
or
imul
jb
cmp
pop
lret
movsb
mov
dec
push
xchg
adc
dec
inc
cmp
dec
inc
sub
push
or
xor
cmp
sub
sub
dec
popa
cmp
dec
jp
imul
aaa
test
or
push
popa
int3
lcall
movsl
cmp
imul
cmp
xor
jbe
imul
cmpsb
push
arpl
xchg
xchg
sbb
cmpsl
pusha
in
jecxz
xor
in
into
push
loop
cmp
pop
or
and
sub
cmp
cmpsl
lcall
and
aaa
rep
loop
mov
sbb
push
xor
jb
push
ficompl
mov
dec
mov
xor
mov
lahf
push
cmpsb
cmp
imul
inc
cmp
jae
push
inc
popa
mov
mov
xor
inc
daa
xchg
xorb
xchg
xchg
push
push
add
dec
and
mov
fnstcw
pop
jmp
ja
jo
addr16
call
sbb
push
and
and
push
cs
lock
xor
inc
in
js
mov
mov
xchg
data16
push
dec
leave
push
or
xor
sbb
gs
mov
cmpsb
int3
dec
mov
or
jmp
sbb
inc
arpl
lock
inc
mov
mov
pop
dec
test
movl
adc
lock
jp
jne
push
or
pop
in
sahf
xor
jne
jbe
leave
push
js
nop
jle
inc
repnz
xor
or
mov
sub
and
scas
ss
mov
jne
fsubrs
jno
inc
push
jo
nop
adc
lods
push
fcmovbe
ret
or
into
insb
cltd
xchg
inc
and
out
dec
adc
and
outsb
inc
mov
adc
dec
js
fsubrs
mov
jl
fs
or
cmovns
mov
or
iret
xchg
mov
cmp
add
push
repnz
and
adc
vpunpckhbw
fs
mov
and
mov
adc
jle
jae
lahf
test
and
leave
mov
and
mov
inc
addb
push
test
jl
movsb
stos
push
jbe
inc
incb
js
imulb
outsl
adc
dec
rcrl
popa
jp
gs
fists
aam
push
or
sbb
adc
dec
lret
xchg
jmp
call
sbb
xchg
dec
push
and
mov
adc
add
subb
rcrb
popf
inc
out
dec
xor
sub
adc
frstor
and
stos
adc
fwait
subb
es
sub
insl
int
dec
adc
push
mov
inc
nop
iret
push
pop
loop
lods
stos
adc
ret
lret
and
sbb
adc
pop
sahf
adc
bound
jb
mov
fisttpll
sub
jb
adc
mov
adc
dec
lea
inc
pop
adc
mov
dec
inc
pop
push
dec
ret
jp
jb
outsb
cs
orl
jns
jae
dec
adc
movsb
imul
dec
loop
aas
sub
jb
pop
jle
add
js
pop
aad
mov
scas
adc
in
sub
mov
addr16
xor
push
push
lcall
jb
push
xor
lret
lret
mov
test
imul
fs
pop
sbb
pusha
movsl
sbb
sub
lcall
jb
pop
imul
mov
stos
pop
cmp
mov
mov
xchg
or
dec
and
imul
mov
scas
adc
inc
pop
addr16
mov
je
cmp
or
mov
sub
ljmp
and
push
push
add
xchg
je
jo
pushf
xchg
cmp
test
or
dec
inc
push
push
inc
or
or
dec
inc
pop
inc
push
push
cmpsl
jb
pop
fnstcw
sub
xor
xor
dec
xor
push
sbb
mov
xor
push
mov
inc
sub
push
mov
mov
bound
outsb
inc
mov
or
pushl
ret
shlb
pop
je
outsl
jbe
lcall
outsl
mov
xor
and
inc
push
or
dec
cmp
and
sbb
pop
les
jmp
and
sbb
cmp
lcall
scas
add
inc
shrb
xlat
sub
and
inc
fsubr
cmpsl
dec
lret
sub
cmc
adc
adc
stos
int3
mov
lods
in
stos
rcll
fisubs
mov
in
subb
roll
push
dec
push
dec
inc
inc
jno
jns
inc
inc
adc
xor
dec
push
cmp
xor
xchg
inc
push
or
adc
adc
dec
pop
outsb
je
rclb
or
test
jne
je
inc
cmp
sub
inc
and
cld
mov
push
mov
dec
inc
or
or
out
in
mov
imul
xchg
or
das
test
repz
pop
pop
xchg
dec
jb
push
dec
inc
rol
xor
daa
xor
xor
xor
ds
xor
pop
jo
and
adc
dec
or
push
push
clc
dec
fwait
add
inc
push
js
or
andb
jns
inc
lret
adc
push
sub
lods
xchg
sahf
fcompl
rclb
jp
cmpb
addl
gs
arpl
cs
orl
arpl
loopne
add
and
test
lahf
xchg
shlb
dec
test
pusha
cmp
int3
movsl
arpl
and
add
scas
int
loopne
pop
add
add
adc
and
add
push
adc
push
push
loop
and
inc
jo
adc
dec
push
enter
mov
inc
adc
mov
clc
add
inc
lock
cmp
sbb
fimull
and
add
pop
or
sbb
push
adc
jns
orl
lock
loop
test
mov
push
and
aam
loop
adc
and
adc
ja
and
inc
add
stc
cmp
sbb
adc
add
sub
outsl
and
xchg
and
insb
test
push
lock
sub
jo
sub
push
mov
mov
inc
add
jp
inc
mov
pusha
jp
mov
lods
push
add
loopne
les
imul
pusha
inc
or
mov
adc
adc
adc
outsl
and
inc
push
fdivrl
stos
add
in
push
lods
inc
psadbw
add
mov
inc
cmp
mov
inc
rcl
mov
mov
and
dec
xchg
xchg
loop
out
and
inc
push
mov
mov
andl
inc
ffree
or
mov
ret
and
jne
mov
adc
add
lea
dec
xchg
or
and
and
lds
mov
adc
movb
and
dec
sahf
xchg
jecxz
out
and
inc
enter
adc
and
dec
push
inc
mov
mov
orl
mov
mov
mov
and
and
inc
pusha
and
push
mov
leave
and
add
dec
int
rolb
mov
sbbl
add
dec
mov
mov
inc
fmul
inc
in
mov
subb
addl
loopne
or
mov
jmp
pop
and
inc
inc
mov
sub
add
and
add
dec
ss
aas
and
inc
iret
lock
adc
dec
iret
mov
sbb
faddl
adc
out
inc
push
testl
imul
inc
aaa
or
and
jno
fldcw
or
lret
dec
sti
mov
adc
addb
and
mov
lods
and
and
dec
inc
imul
mov
rclb
add
or
mov
popf
and
dec
rorl
push
or
adc
sbb
inc
fdivp
mov
fcom
or
jmp
mov
add
jno
mov
add
add
ja
push
jns
and
jb
add
inc
lods
jge
fmull
adc
xchg
inc
mov
mov
adc
adc
and
fs
movsb
inc
adcl
inc
repz
adc
scas
add
mov
dec
and
mov
cmp
mov
mov
stc
mov
and
subb
in
or
enter
sbbl
push
xchg
test
ss
iret
mov
and
and
mov
xchg
xchg
mov
inc
cli
push
addb
adc
push
and
ss
or
or
mov
sbb
sbb
and
pop
and
dec
xchg
or
cld
and
inc
and
inc
push
je
cmp
inc
pop
add
cltd
inc
imulb
xchg
push
aad
xor
jb
or
lcall
rolb
orl
lock
jne
pop
or
test
adc
cwtl
inc
sar
mov
adcl
adc
dec
xchg
insb
and
sbbl
mov
or
mov
data16
mov
loop
xchg
stos
mov
adc
and
mov
inc
xor
inc
addb
jl
pushf
adc
mov
adc
sub
mov
fs
dec
jl
nop
jae
mov
mov
xchg
in
cld
and
mov
xor
adc
cwtl
dec
enter
cltd
insl
xchg
or
and
dec
xchg
xchg
mov
lock
fsts
xor
test
mov
fistps
in
cmp
loopne
mov
in
inc
std
in
movsl
mov
out
mov
sbb
jo
lcall
push
sub
iret
push
ja
push
xchg
pop
fbld
mov
loop
daa
ljmp
dec
cltd
xor
inc
ljmp
inc
mov
das
mov
inc
sbb
out
movsb
add
pop
and
jge
aad
scas
jmp
test
jo
or
into
push
mov
mov
mov
int
xchg
xchg
push
sbb
testl
stc
push
mov
pushf
lahf
jnp
inc
cltd
mov
inc
fstpl
mov
outsl
sbb
adc
cmpsb
and
movsl
pop
imul
stos
fs
fldenv
cmp
sbb
rep
adc
and
call
xchg
ja
sub
gs
cltd
dec
lret
movsb
popf
mov
xchg
mov
roll
outsb
xchg
push
test
or
mov
inc
shl
mov
fs
sbb
lahf
xchg
insb
roll
hlt
daa
inc
push
ja
mov
jno
pop
xchg
bound
xor
ds
js
pushf
decl
dec
cmc
adc
inc
mov
imul
test
fildll
daa
leave
cli
ret
in
pop
vlddqu
es
xchg
adc
mov
cmp
pop
rorl
jbe
jne
add
iret
cmp
jo
push
les
das
int3
pop
test
aam
stc
pop
es
pushf
out
test
loope
inc
out
xchg
clc
push
imul
in
scas
mov
add
out
mov
add
iret
jle
sbb
push
inc
lret
cwtl
and
xor
mov
imul
or
dec
mov
add
push
subl
popl
flds
sub
aas
mov
pop
mov
pop
cmp
xchg
inc
mov
mov
pop
xor
cs
std
or
and
test
sbb
sbb
sbbl
ja
jmp
aas
fidivs
sub
jmp
loop
add
xor
pop
repz
jbe
in
mov
adc
or
jae
test
jle
push
inc
loopne
mov
mov
mov
scas
push
adc
hlt
mov
aam
ds
pop
mov
add
mov
lods
loop
pop
repnz
out
mov
paddusb
mov
fwait
xchg
xchg
mov
movsb
adcl
cmpsb
inc
cmp
sbb
adc
cmc
pop
iret
mov
pop
jle
dec
ja
cwtl
jae
test
shr
out
xchg
insl
sbb
xchg
pop
inc
inc
pop
inc
fstpt
fs
jne
into
or
mov
out
popf
inc
popl
sub
test
popa
mov
xchg
ss
shll
clc
aad
and
push
cmp
clc
jp
das
jbe
dec
imul
pop
mov
push
pop
xchg
sbb
ja
mov
shlb
ffreep
mov
sti
xchg
mov
loopne
mov
loopne
popf
pop
add
test
add
pusha
jmp
ja
cmp
cli
sahf
or
cld
pop
das
scas
and
lods
or
loope
iret
mov
dec
push
adc
adc
fsubl
inc
fs
icebp
loopne
mov
enter
ja
je
mov
jb
loope
mov
stos
push
lods
dec
add
out
xorl
addb
mov
mov
notb
sti
and
inc
cmp
jno
jge
xor
or
mov
repnz
lret
cli
xchg
das
sbb
adc
xor
loope
sub
shrb
stc
xor
mov
inc
mov
test
movsb
mov
sarb
xor
data16
push
out
sub
jmp
test
adc
add
out
mov
mov
or
sbbb
xor
stos
pop
xchg
or
outsl
js
mov
js
pop
es
or
mov
mov
in
pop
mov
or
js
sbb
and
push
bound
enter
push
int3
repz
or
add
popa
dec
das
outsb
in
xor
and
or
jecxz
adc
fwait
or
mov
dec
pop
jbe
or
xchg
clts
stos
arpl
pextrw
scas
push
pop
pop
cmc
sarb
daa
loop
mov
add
adc
mov
mov
adc
scas
rcl
jg
stc
cwtl
push
in
call
dec
leave
push
dec
add
xor
repnz
je
dec
adcl
loopne
jns
sbb
mov
outsb
inc
adc
add
sbb
lods
ret
jge
xchg
addr16
xor
lock
ljmp
xor
in
xchg
cs
insl
push
fisubl
or
jmp
xchg
int3
popa
push
fnstenv
iret
xor
scas
iret
push
shrl
out
push
in
call
cli
xchg
shrl
lods
lods
mov
jne
das
and
aas
ret
or
sbb
or
test
jbe
pop
or
push
stc
adc
jge
or
mov
mov
sub
mov
mov
xor
mov
jecxz
dec
xchg
xchg
pop
inc
in
xchg
xchg
addr16
push
or
mov
mov
lcall
popf
cmpb
pusha
push
test
push
mov
and
test
loopne
add
das
mov
lds
jnp
aad
je
popa
fidivrs
imul
loope
addb
ja
in
push
stc
mov
lret
add
or
mov
push
sbb
in
cmp
sarb
pop
inc
jne
repnz
ss
jge
gs
cmp
xchg
dec
jo
cld
push
mov
test
loop
ja
out
mov
mov
sub
xchg
into
ret
in
ret
push
add
in
pop
inc
adc
stos
fistpl
shlb
mov
jg
sub
movsb
ja
in
in
lods
fistpl
icebp
cmc
rolb
cmp
push
mov
mov
add
cmp
sbbb
adc
sahf
les
icebp
lahf
movaps
pop
sub
mov
mov
cmp
insb
test
cmp
dec
out
lds
arpl
cmp
cs
inc
adc
inc
push
icebp
or
cltd
adc
in
sbb
mov
mov
rcll
out
nop
cmc
xchg
cltd
out
and
test
loopne,pt
push
or
push
dec
pop
mov
xchg
lods
xchg
push
repz
mov
xor
and
xchg
in
mov
push
cmp
add
insb
in
mov
sub
jmp
mov
xor
inc
nop
mov
lea
test
fs
mov
loope
cmp
cmc
negb
rorl
fwait
dec
imul
xchg
jbe
dec
outsb
testl
fs
xchg
out
insl
cmc
mov
movsl
scas
inc
out
sarb
icebp
sahf
test
stos
das
ja
adc
xchg
add
mov
cli
mov
sti
inc
inc
ss
cli
addb
ljmp
push
jae
out
fdivrl
ja
movsl
in
adc
orb
mov
inc
cltd
lods
in
scas
bound
jnp
aad
sti
or
sbb
jp
push
das
or
cmpsl
mov
sub
std
fwait
mov
mov
int3
xor
shrb
aam
adc
rcrb
mov
jns
pop
js
lcall
push
loop
ror
xchg
xchg
mov
or
ljmp
xchg
scas
lock
lahf
orb
pushw
xor
and
fisttps
inc
into
punpckhdq
mov
xchg
dec
sub
jno
pop
je
aaa
inc
and
mov
stos
ret
ss
xchg
in
push
and
scas
in
jbe
mov
arpl
in
xorb
es
leave
and
mov
push
out
js
push
aas
mov
jle
mov
add
jns
dec
pushf
push
pop
dec
sbbl
sub
xchg
push
outsl
sbb
lods
out
pusha
mov
scas
fbstp
movsb
jecxz
ds
xchg
test
out
add
push
loopne
mov
add
xchg
dec
cmpsb
leave
mov
sbbl
or
shr
jne
mov
mov
rcpps
into
cmpb
mov
jno
add
push
outsl
pusha
ja
into
xchg
lods
and
xchg
mov
sub
xor
movsb
mov
mov
jno
xor
mov
lods
sub
push
inc
imulb
xor
mov
push
jecxz
push
xlat
xchg
xor
and
lahf
ret
lret
cltd
cmpsl
pop
add
sub
jns
inc
cwtl
push
in
jno
push
jmp
jo
pop
lret
adc
stos
mov
repz
xor
call
pop
add
in
aam
iret
cmp
sbb
sbb
sub
inc
scas
fidivs
icebp
bound
mov
xor
iret
cld
mov
shl
push
dec
pop
jo
sub
dec
js,pt
andl
out
pop
push
add
aad
xchg
xor
jae
cmp
pushf
adc
clc
lock
mov
mov
push
insl
push
xor
imul
jbe
loop
dec
or
xor
inc
jns
enter
lods
jmp
test
push
mov
jae
enter
mov
push
xor
shl
cmp
xlat
or
insl
int3
mov
cwtl
aad
loopne
xor
gs
xchg
cmp
jo
repz
nop
mov
inc
imul
xchg
cmp
mov
add
xchg
enter
pushf
or
das
mov
out
sarl
or
or
dec
ljmp
bnd
ljmp
lods
jbe
mov
int3
push
jp
push
xchg
or
in
mov
sbb
outsb
push
push
add
add
xor
adc
cs
xchg
push
or
jmp
movsb
sub
mov
faddl
insb
xchg
iret
movsl
loopne
lds
cmp
sub
mov
mov
jle
xchg
dec
sub
out
push
push
dec
outsb
cmp
test
lea
mov
xchg
add
jno
scas
movsl
mov
push
mov
jns
inc
test
cmp
rorl
mov
push
lret
jle
std
fdivrl
dec
xchg
push
lods
adc
lds
cmpsl
push
ret
add
sbb
outsb
sbb
pop
iret
lods
repz
fcompl
cmpsl
in
push
mov
into
iret
jp
lahf
add
mov
icebp
dec
mov
ret
push
scas
mov
xor
insb
outsb
lea
daa
movsb
fimull
sbb
mov
xor
ret
or
sbb
cmp
insb
lods
cwtl
add
mov
shl
std
int
mov
scas
in
mov
jecxz
or
xchg
sarl
lods
inc
es
enter
xchg
add
sbb
pop
out
and
out
stos
xchg
clc
mov
xchg
add
push
mov
mov
jo
movsb
jmp
iret
pusha
push
cmp
xchg
adc
int
cmp
js
mov
sub
arpl
ss
pop
ja
jl
adc
pop
movsb
cld
mov
pushf
adc
jno
and
adc
add
sub
sub
mov
xchg
sub
cmc
scas
dec
lods
jg
dec
adc
rol
mov
dec
cmpsb
addr16
pop
push
pop
out
lret
and
pusha
pusha
sbb
sbb
fs
jle
xor
hlt
out
cmpsb
xchg
jle
aad
xchg
jmp
aas
sbbb
add
add
sbb
lock
and
cmp
movsb
hlt
test
fsubs
arpl
adc
xor
sbb
scas
int
mov
push
adc
jo
pop
fildll
into
jbe
push
std
mov
adc
lcall
cmp
inc
cmp
cltd
push
inc
xchg
rcl
cld
xchg
arpl
mov
pop
lods
and
ss
out
cmpsb
xor
pop
cmp
mov
cs
leave
aaa
out
movsl
push
outsb
mov
fcmovne
in
sbbl
in
ret
mov
mov
out
fcoms
aad
pop
scas
ja
test
dec
addr16
inc
int3
mov
pop
xchg
add
orl
popf
xchg
inc
xor
sbb
and
and
mov
pop
adc
cld
lods
add
adc
push
dec
jg
mov
mov
test
lods
int
pop
jb
nop
insb
mov
dec
sbb
fwait
inc
and
test
cmp
ret
mov
pop
cmp
mov
push
xchg
imul
inc
mov
push
mov
fnsave
sbb
push
inc
pop
dec
dec
mov
and
stc
movsb
xchg
popf
push
xchg
jne
mov
cmp
push
out
aas
das
xchg
pop
ljmp
fiadds
xor
lea
lods
xchg
dec
into
push
xchg
cmp
dec
jmp
mov
mov
bound
lret
out
pop
mov
add
jne
xchg
dec
lds
stos
and
dec
mov
sbb
fisttpll
pushf
int3
ss
fnsave
or
and
fisubrl
cli
push
push
xor
test
cmpsl
pop
faddl
mov
mov
ja
incb
push
enter
cli
xor
xlat
dec
enter
mov
repz
push
cltd
adcb
push
pop
mov
push
scas
mov
insl
flds
leave
adc
sub
in
and
or
mov
pop
lds
popa
xor
sub
mov
mov
or
dec
xor
or
lea
stc
or
sbb
fs
std
push
dec
mov
or
jae
int3
in
loop
ret
lret
mov
push
jne
scas
add
ret
popf
out
jecxz
mov
sbb
lea
out
xor
and
inc
fiaddl
bound
jge
stos
jecxz
mov
jae
mov
gs
cmp
pop
into
lcall
xchg
fadds
push
rcll
pushl
bound
jae
pushf
dec
xchg
dec
sub
jb
loop
orps
out
jecxz
jmp
xor
mov
outsb
jbe
sbb
and
test
mov
and
xlat
insb
push
out
shrl
xchg
fiadds
daa
push
mov
sbb
das
fimuls
es
sbb
in
lods
stos
xchg
sahf
push
mov
sbb
int
and
push
push
push
xor
clc
out
inc
loope
rorl
xor
aad
sbb
cltd
decl
outsb
jmp
test
jg
or
out
std
mov
sti
in
pop
cmpsl
int3
jne
mov
mov
or
cli
or
adc
or
pusha
dec
pop
inc
lods
xchg
jg
cmp
pop
cli
movsb
sbb
sti
xlat
mov
shld
mov
fistl
xchg
loop
aad
mov
add
nop
and
cmpsl
lea
cld
lret
and
cmpsl
jecxz
dec
xchg
lcall
and
orl
cmp
inc
out
adc
lods
sarb
add
jge
ret
std
dec
push
inc
ljmp
inc
sbb
sub
push
and
shrb
xchg
push
mov
mov
inc
jle
and
sub
in
arpl
std
loopne
test
data16
add
inc
xor
inc
mov
rcrb
in
shrl
fadds
dec
jmp
mov
dec
clc
cmp
mov
out
sahf
and
mov
stos
addb
jle
dec
cli
mov
lock
stos
mov
push
push
rolb
adc
cmp
cmpsl
inc
xchg
mov
pop
xlat
imul
jnp
adc
mov
xlat
pop
xchg
lret
out
jnp
sub
sarb
add
mov
dec
mov
js
sbb
inc
push
pop
pop
into
dec
popa
mov
scas
pop
dec
popf
shll
test
pop
add
pop
jge
ret
mov
dec
in
out
mov
or
xor
xchg
je
stos
mov
xchg
pop
notb
mov
loopne
and
mov
out
out
sbb
daa
adc
mov
cmp
cld
xchg
jnp
add
cmpb
daa
cltd
cmp
add
and
cmc
fcomps
mov
push
pusha
daa
fwait
pop
pop
popf
fwait
pop
mov
clc
inc
ds
loopne
mov
and
fcos
cmpsb
dec
int3
test
fdiv
mov
xchg
push
mov
and
popf
sub
inc
mov
mov
aad
jnp
std
ud1
cltd
mov
sub
xchg
jp
adc
fadds
cld
aad
pop
int
mov
fildll
pop
jns
push
sahf
cmp
inc
out
mov
test
insb
adc
xchg
in
in
push
jg
pop
iret
decl
dec
out
dec
clc
add
push
out
clc
pop
movsl
sub
or
add
je
sub
fnstenv
add
push
stos
and
shll
and
ljmp
mov
testb
test
sarb
clc
pop
insl
sbb
pop
adc
repnz
sub
dec
arpl
xchg
fisubrl
decb
into
hlt
push
jmp
call
jle
push
int
mov
mov
cli
mov
jmp
jp
aad
cltd
out
mov
push
lods
sarb
lea
xor
add
scas
add
mov
dec
cmp
add
pop
push
call
sbb
mov
jb
inc
adc
mov
jo
out
rcrl
test
ret
pop
jb
out
jb
jg
sarb
mov
inc
push
repz
mov
je
hlt
mov
xchg
or
sbbb
inc
int
mov
stos
and
mov
push
and
mov
jno
mov
mov
mov
and
jmp
addr16
push
test
inc
sub
jo
movsb
ljmp
lds
es
imul
hlt
pop
mov
sbb
fisubs
fs
dec
lds
pop
mov
push
adc
aas
out
lods
popa
insb
pop
xor
incb
or
leave
stc
xor
dec
mov
in
pop
cmp
mov
add
fs
pusha
jecxz
jbe
pop
xchg
andb
insb
dec
lods
cli
mov
test
insl
xchg
stc
lds
push
push
inc
pushf
xchg
fisubl
out
test
mov
test
in
and
stos
push
jmp
jmp
addb
or
aad
pop
xchg
incl
mov
push
mov
xchg
es
inc
ss
out
test
imul
xor
out
sbb
or
inc
enter
nop
sbb
sub
jecxz
fsub
push
mov
push
lahf
and
cmp
mov
out
xor
int
mov
inc
fidivrs
scas
lds
ss
fdiv
adc
push
popf
jle
push
lods
fs
or
in
cli
aaa
fwait
jne
add
ss
cmp
add
or
adc
lods
mov
pop
out
xor
rcl
in
popa
je
pop
push
jge
push
xor
mov
scas
lea
xor
scas
int3
pop
xchg
repnz
test
out
add
fimull
mov
dec
inc
jg
mov
fwait
adc
pop
fstps
dec
int3
in
sub
xlat
inc
push
fdiv
pop
loop
lods
insb
fs
fdivrs
aas
add
movsl
mov
icebp
pop
push
bound
xchg
movsb
out
cli
add
rcr
jbe
ss
rol
mov
mov
out
lods
mulb
cld
mov
shrb
pop
imul
ljmp
cli
sbb
hlt
or
mov
insb
scas
cmp
jbe
push
dec
dec
pop
daa
lret
out
out
adc
push
mov
incl
int
add
and
test
push
inc
lret
repnz
xor
addr16
mov
xchg
clc
inc
shl
mov
test
push
andb
test
cmpsl
push
hlt
lods
fstpl
push
sbbl
mov
and
lcall
ss
cmp
iret
jmp
loopne
in
popa
je
cmp
inc
jp
push
mov
repnz
ljmp
repz
cmp
mov
xchg
mov
lea
adc
das
testb
sub
scas
xchg
sbb
mov
mov
sbb
mov
add
adc
xchg
leave
jno
and
inc
icebp
add
cmc
add
jmp
add
add
mov
sub
lea
sbb
popf
xor
out
sar
stc
push
mov
cmpsl
xor
je
jae
dec
sub
mov
jge
in
out
out
adc
pop
movsl
jno
fldl
sbb
pushf
fdivrp
or
movsb
inc
sbb
add
in
dec
mov
sub
mov
repz
imul
dec
xor
inc
mulb
inc
dec
cwtl
push
sub
pop
iret
push
xor
in
jno
pop
jg
fimuls
xchg
popf
inc
mov
push
mov
enter
xor
push
and
imul
jbe
pop
scas
outsl
lds
mov
pop
mov
data16
add
xor
ret
sub
repz
dec
repz
lcall
jb
sub
aam
cmovbe
lods
mov
lds
jb
inc
fdivl
sbb
push
mov
adc
cmp
dec
jne
mov
lcall
mov
dec
stc
dec
outsb
gs
inc
out
pop
cmc
xchg
inc
shlb
repnz
or
inc
mov
cmp
loope
ss
addr16
inc
mov
jo
outsl
push
mov
int3
dec
push
or
in
scas
sbb
jmp
cmp
cmp
int3
add
punpckhwd
div
cmpsb
pop
hlt
test
movl
xor
sub
inc
scas
xchg
push
pop
sub
mov
mov
mov
jge
adc
lods
outsb
cmp
jnp
test
stos
out
mov
insb
push
push
and
pushf
std
or
je
and
sbb
mov
jle
pop
aam
pushf
adc
pop
test
pop
xor
sbb
scas
sbb
push
pop
sbb
inc
push
aaa
xchg
arpl
scas
push
popf
cmp
stc
test
xchg
jl
and
fidivs
movsl
mov
gs
or
xor
movsl
xor
sbbb
jae
and
unpckhps
mov
and
call
xor
mov
jg
rcll
mov
aas
push
sbb
push
cwtl
and
inc
enter
push
in
aad
roll
sub
stos
jno
pop
repnz
addb
sbb
pop
test
mov
lods
callw
testl
inc
jg
lea
xor
adc
dec
mov
in
out
andl
loop
xchg
mov
insl
pop
lahf
in
cmp
pop
xchg
dec
loop
shld
or
jae
inc
dec
push
hlt
pop
lods
inc
and
sbb
sub
loop
std
mov
in
insl
mov
push
test
jo
push
test
leave
add
xchg
jle
fs
adc
mov
mov
inc
mov
out
pop
outsb
inc
push
cmp
fs
fisttps
mov
mov
sub
mov
leave
and
inc
insb
push
insl
test
xchg
mov
rcll
adc
mov
dec
stc
fcos
xchg
ss
mov
jp
in
mov
out
and
sub
clc
inc
cwtl
pop
push
inc
push
int3
push
movsl
dec
jp
dec
pop
push
scas
mov
setnp
pop
dec
add
int3
seto
cli
pusha
in
xchg
mov
dec
mov
inc
sub
outsb
adc
sbb
in
ret
xchg
add
test
fimuls
inc
xchg
and
div
jp
push
fucomp
outsl
xor
fsubrs
insb
jae
out
push
jmp
push
sbb
pop
mulb
sarb
test
loope
cmpsb
incb
jle
inc
mov
mov
and
add
imul
test
sub
jne
pop
pop
je
or
mov
fwait
test
es
sub
and
dec
leave
cmp
mov
dec
ss
mov
lcall
adc
into
cmpsb
add
int
and
dec
roll
push
fisttpll
adc
jle
pop
inc
dec
icebp
push
scas
insb
ds
mov
xor
mov
sbb
push
cmpl
pop
lock
fcoml
rorl
out
add
mov
xchg
xlat
xchg
push
fstpt
in
push
sub
ja
std
sub
xchg
sub
inc
ljmp
pop
outsb
fisttpll
orb
imul
ds
add
add
clc
ja
mov
pop
mov
ss
push
loope
out
test
insl
iret
push
insb
in
ss
shll
and
hlt
icebp
mov
jns
bound
xor
fcoml
inc
dec
ss
out
in
or
fldt
outsb
dec
sub
sti
fnstcw
das
hlt
pushf
ss
sbb
jmp
dec
in
pop
xor
fs
mov
dec
in
sub
or
inc
inc
shrb
cmp
jne
xor
mov
push
pop
repz
stos
ret
out
inc
popf
pop
fimuls
push
jmp
pop
add
aas
mov
xchg
out
out
or
jnp,pt
cltd
idiv
shlb
xor
shlb
cmp
dec
sub
out
test
push
sub
test
and
test
inc
lcall
into
outsb
insb
scas
test
inc
mov
out
xor
fldl2t
les
dec
adc
call
cld
inc
sub
push
add
mov
xor
filds
add
xor
fisttpll
adc
and
pop
mov
aaa
lcall
decl
sbb
inc
mov
adc
cmp
dec
lock
mov
mov
inc
aas
hlt
sub
addr16
dec
ds
xor
fbld
xor
sub
in
push
in
sub
addb
cmpsl
and
mov
sbb
imul
test
fwait
pop
test
lcall
xchg
divb
clc
out
and
js
jne
or
int
cltd
lea
mov
pop
sub
insb
mov
shlb
jge
mov
das
push
shlb
adc
daa
into
mov
xlat
ds
add
mov
stos
imul
scas
insb
lods
push
popf
add
imul
scas
mov
aaa
int
rcrl
cli
pushf
push
jmp
idivl
call
push
fucomi
dec
cltd
mov
fbld
scas
aad
lods
xorl
popa
dec
jp
nop
leave
jo
std
pop
jmp
push
push
dec
loop
xlat
xor
leave
lock
lods
dec
in
lds
lods
dec
lods
arpl
cmpsl
sub
jnp
push
sub
fs
adc
addr16
fstpl
scas
aad
mov
lods
mov
dec
inc
mov
jae
sub
ret
lea
xor
or
out
sub
sbb
pop
mov
sbb
pop
mov
jmp
clc
leave
dec
negb
mov
aas
arpl
ds
jge
push
inc
xchg
push
dec
das
inc
mov
jmp
lods
add
mov
push
test
inc
loope
in
fcmovbe
enter
jle
cltd
rcrb
cmp
pop
cmp
xlat
hlt
adc
xchg
cmp
cmpsb
aad
testb
add
cld
or
hlt
fs
les
xchg
insb
pop
inc
pop
adc
out
movsb
sub
lds
push
mov
cmpsl
test
add
push
cmp
lret
cwtl
dec
sub
push
xor
mov
aas
push
lods
es
lret
lfs
mov
into
or
pop
fisttpll
cmpsb
aad
sbb
movsl
jo
push
aad
push
movsb
inc
mov
sbb
addl
push
scas
mov
mov
roll
inc
dec
dec
subl
cmpsl
dec
mov
in
into
cld
or
leave
rorl
mov
std
xchg
ret
xchg
pop
pop
jg
pop
shlb
stc
pushl
in
les
jne
shufps
cmpsb
data16
cwtl
in
dec
in
push
scas
pusha
mov
rcrl
add
cmp
mov
or
mov
sbb
js
rcl
iret
sub
mov
lret
mov
push
out
jno
push
std
xchg
jo
or
pop
icebp
dec
push
dec
cmc
and
mov
scas
xchg
outsb
xchg
cmc
sbb
push
mov
add
shl
dec
add
mov
int3
cld
sbb
aas
sbb
sub
jne
adc
repnz
push
fsubl
aam
cmpsl
jnp
pop
push
mov
dec
dec
inc
push
mov
in
dec
pop
mov
imull
mov
or
lahf
int
mov
int
andl
mov
add
and
sbb
rolb
add
out
nop
cmp
out
jle
out
out
mov
repz
bswap
push
clc
jmp
ja
or
xor
inc
xor
les
xor
dec
mov
or
sbb
cmc
aas
sbb
xchg
mov
sti
in
rol
inc
arpl
roll
fnstcw
mov
pop
aad
xchg
inc
test
out
cmp
mov
imul
jae
pushf
xchg
push
insb
inc
movsb
imulb
out
jnp
ret
inc
in
push
out
push
repz
inc
xchg
xor
push
xchg
loope
pop
fldcw
cld
or
lahf
pop
clc
fimull
in
sub
xchg
loop
xchg
out
mov
lea
ja
in
shr
and
xchg
pop
inc
and
outsl
jb
mov
push
pop
icebp
mov
pop
and
pop
adc
or
inc
push
mov
mov
lea
sub
in
lret
shrl
mov
sbb
cs
push
cld
mov
aad
fs
imul
cld
push
jne
mov
adc
in
sar
or
and
mov
mov
outsl
call
jns
dec
aaa
xchg
gs
iret
cmp
cli
out
pslld
cmp
daa
push
fwait
or
and
add
cli
and
bnd
push
jbe
lcall
bound
add
push
fs
dec
pop
mov
mov
stc
ss
xor
cmc
sbb
js
jg
jmp
or
pop
xchg
test
sbb
je
test
or
pop
dec
es
pop
out
hlt
push
adc
outsl
lds
jle
nop
enter
mov
jp
pushl
rcll
fstl
push
jo
ds
or
mov
lahf
dec
loop
pop
cmp
push
xchg
pop
xchg
and
inc
mov
addr16
in
loopne
and
cld
push
xchg
add
push
push
scas
push
adc
pop
pop
loop
cmp
int3
inc
shrb
mov
rorl
aad
hlt
adc
add
lds
pop
insl
rcl
pushf
push
std
in
sahf
adc
imul
jmp
in
bound
outsb
dec
adc
test
push
xorps
pushf
pop
leave
cmp
or
mov
inc
inc
pop
rdpmc
test
subl
dec
dec
push
out
push
outsl
mov
jp
and
fcmovne
test
pop
stos
sub
popa
pop
push
test
cmp
mov
test
lret
and
aam
mov
jbe
mov
cmp
sub
xor
pushw
lret
or
push
in
jg
fcmovb
repz
cmpb
cli
ja
push
pop
dec
xchg
aaa
and
cmp
jae
ja
cmpsl
and
inc
mov
add
mov
aad
adc
pop
arpl
lahf
inc
fbstp
add
das
fdivs
mov
ss
jbe
popa
lahf
mov
dec
mov
fidivrl
mov
and
pop
rclb
push
cmc
mov
jae
and
and
add
std
mov
sbb
cwtl
les
out
nop
pop
xchg
loop
movb
rclb
cmp
scas
mov
sti
push
push
in
rcrl
jbe
push
je
cmc
pushf
sub
call
cmp
aam
fidivl
push
in
insb
sbb
inc
fwait
shr
dec
into
aas
push
jmp
fnsave
mov
fsubrl
xlat
aad
dec
stos
in
or
lret
inc
aam
cmp
push
lahf
cli
sub
dec
enter
jne
xor
adcl
cs
jmp
inc
testb
push
push
fstl
sub
dec
movsb
add
outsb
cs
es
insl
ret
insl
nop
mov
xor
mov
jne
scas
sbb
xchg
lea
sub
aad
mov
repz
ja
sub
call
rolb
xorl
inc
fnstenv
mov
shl
mov
mov
popa
inc
xchg
shll
ss
fisubs
mov
mov
sarb
maskmovq
cwtl
dec
pop
aaa
adc
xor
dec
lds
push
inc
dec
pop
adc
adc
xor
inc
bound
pop
mov
scas
jo
lea
movsb
jae
hlt
test
call
imul
ficomps
mov
sub
loope
ret
inc
subb
cmp
test
xor
lahf
add
enter
in
xlat
movsb
mov
mov
les
push
inc
movaps
jle
xor
aad
sub
push
shrb
dec
les
enter
and
adc
cmp
xor
push
sub
mov
outsl
lods
call
xchg
aam
not
testl
jecxz
lods
fiaddl
mov
lock
add
je
push
sub
sbb
dec
dec
xchg
pushf
mov
mov
adc
push
cmpsl
pusha
pop
fimull
mov
ss
xchg
xor
mov
mov
es
or
mov
add
adc
mull
rorb
mov
mov
ja
nop
inc
movsb
inc
mov
and
ret
loop
das
faddl
fbstp
adc
push
movsl
dec
outsl
testl
in
sub
test
push
inc
push
cmp
icebp
enter
sbb
imulb
dec
inc
aaa
flds
bnd
pop
ret
jae
test
cli
cld
and
or
push
push
and
fsts
adc
mov
cmp
out
push
lds
sbb
push
out
addr16
and
popf
ja
mov
jge
jl
in
lret
incl
or
add
mov
pusha
lods
divl
push
inc
out
mov
stos
test
or
pusha
xor
push
cld
pop
jecxz
jle
pop
adc
lods
cmp
pop
stc
jae
nop
repnz
sbb
aas
sub
dec
xor
fs
mov
push
cmp
das
repz
fs
jle
cwtl
das
cs
in
adcl
icebp
adc
out
push
enter
and
mov
jmp
sar
arpl
jmp
inc
cld
xchg
mov
jns
mov
add
sub
arpl
lock
repnz
dec
inc
and
popf
mov
aaa
adc
add
and
fstl
das
adc
dec
xchg
add
cmp
xchg
lret
ljmp
or
add
mov
int3
mov
gs
jae
xor
xchg
dec
sub
pusha
xor
popa
test
das
inc
cld
push
das
inc
rclb
mov
pop
adc
popf
das
aam
dec
push
js
nop
mov
sub
sahf
out
adc
xor
imul
and
scas
mov
call
pop
dec
add
ret
xchg
dec
in
pop
inc
enter
dec
mov
outsb
push
scas
sbb
jbe
lahf
sub
mov
scas
inc
je,pn
mov
fmul
xor
xchg
incl
xor
xchg
sbb
mov
push
fiadds
fidivs
dec
es
dec
int
mov
inc
sbb
lret
les
sub
das
cmpsb
pop
out
mov
xor
dec
push
scas
mov
scas
icebp
sbb
or
xchg
or
cmp
pop
outsb
mov
xchg
jne
add
fisubrs
popa
es
arpl
cmp
jg
and
cli
rol
sub
das
sbbl
lea
sub
xchg
sub
cmp
pop
push
mov
sbbl
add
iret
mov
imul
sbb
push
fistpll
or
lahf
push
dec
push
pop
imul
and
ret
cmp
andb
add
cmp
mov
lahf
inc
fisubs
xor
push
sbb
push
push
test
inc
push
lahf
lods
mov
aad
fwait
push
mov
pusha
xchg
pop
int3
aam
pop
ds
mov
frstor
dec
clc
dec
xchg
aaa
leave
add
or
push
scas
push
test
inc
pop
mov
fisttpll
mov
fmul
ja
sub
pop
ja
pop
and
lea
stos
push
fsubrl
pushf
jns
adc
jns
movl
scas
xlat
fildll
cltd
inc
mov
std
stos
xchg
pop
pop
notrack
fwait
sbb
int
mov
jge
mov
push
les
inc
rclb
xor
icebp
jne
jge
xchg
fisubl
addr16
push
adc
std
pop
push
nop
ss
aad
push
xor
pop
subl
xor
loope
cs
lods
cs
mov
ud2
out
mov
aam
pop
or
or
xchg
test
ja
in
adc
pop
push
sbb
dec
orl
mov
stc
in
ja
pushf
mov
int
adc
enter
nop
test
mov
dec
dec
push
mov
sbb
ljmp
mov
mov
xchg
push
and
cltd
dec
sbb
cltd
lods
dec
add
xchg
in
loope
xor
leave
lahf
xchg
adc
push
mov
stos
or
add
push
add
pop
push
loop
leave
sbb
leave
pop
push
clc
inc
test
mov
sub
mov
test
xorb
in
ja
cmp
sub
inc
jmp
orb
inc
out
jno
daa
iret
push
sub
xorb
stc
jno
das
sarl
adc
jge
das
cmc
pop
mov
push
jmp
sti
dec
pop
adc
mov
pop
push
js
and
scas
shl
pushf
mov
jne
fwait
and
jns
add
cmp
ds
xchg
aas
sbb
out
xor
stos
arpl
sbb
adc
sbb
test
push
fsubl
mov
cmp
push
mov
insb
mov
cmc
or
xchg
and
inc
mov
cltd
cmp
xor
mov
jg
loopne
lods
arpl
mov
pop
out
repz
loope
scas
pop
lea
cmpsb
jg
fyl2x
cli
push
adc
clc
jecxz
inc
cld
adc
lods
and
inc
push
ja
mov
pop
lods
adc
adc
enter
insb
jae
je
inc
mov
push
mov
repnz
lods
cwtl
gs
or
loope
add
inc
sti
ds
xchg
dec
hlt
sbb
xchg
dec
lods
add
jmp
loopne
in
into
mov
iret
xchg
push
mov
add
jecxz
cmpsl
dec
xchg
mov
clc
aas
adc
cmp
xor
add
sti
pusha
ds
add
xchg
xor
dec
push
mov
jnp
sbb
inc
push
test
mov
push
pop
jecxz
sbb
jmp
jl
add
pop
outsb
xor
shlb
popa
scas
xor
cltd
movsb
fwait
shll
out
loop
or
xchg
jne
sub
jge
xor
sub
sarb
std
lea
pusha
cld
mov
sub
xchg
mov
jbe
mov
add
jge
cmp
push
jge
sub
jp
sub
jb
sub
xor
jnp
das
test
jg
std
inc
mov
dec
push
push
mov
icebp
scas
ds
fcompl
adc
cmpsb
dec
push
stos
push
rolb
xchg
scas
mov
push
adc
pop
gs
mov
push
cmp
pop
inc
cmpsb
lds
xchg
notb
imul
stos
pop
and
pushf
call
cmp
repnz
cmpsb
cli
out
js
mov
xchg
sub
loope
mov
js
xchg
loope
dec
jnp
rol
jle
adc
int
dec
jle
rclb
xchg
add
lcall
rcrl
mov
scas
imul
or
subb
std
bswap
or
or
and
stc
das
inc
cmp
mov
scas
and
add
pushf
inc
xchg
push
call
imul
adc
sbb
imul
push
push
or
stos
and
mov
push
ds
cmpb
jle
pop
lret
test
addl
cltd
in
pushl
or
or
ljmp
inc
mov
cmc
push
add
test
sub
push
dec
push
jbe
dec
daa
pop
cmovno
or
repz
push
dec
repnz
inc
subb
sbb
push
xchg
sbb
shl
inc
and
or
push
xchg
roll
dec
dec
std
jl
or
push
xor
gs
int
ja
pop
arpl
mov
or
ja
jns
in
icebp
push
aas
mov
inc
mov
jmp
es
sub
call
das
gs
cli
cltd
lock
leave
push
shr
adcl
jg
inc
mov
popf
sbb
add
ret
sbb
lahf
xor
mov
xchg
or
popf
pop
inc
and
sbb
ljmp
mov
mov
fiadds
les
xor
mov
sbb
mov
into
mov
icebp
subb
out
mov
mov
into
icebp
nop
arpl
popf
out
jp
cmpsl
lock
out
inc
sbb
and
sub
js
das
sub
aaa
sbb
nop
ljmp
pusha
push
jno
lock
dec
lret
fdivl
mov
int3
ljmp
adc
pop
cld
inc
jg
in
or
imul
jb
xchg
inc
sub
dec
imul
add
inc
fstl
popf
dec
aas
fxch
stc
mov
cmp
aam
lods
stc
xchg
jbe
call
pop
shll
roll
inc
mov
push
cmc
fs
mov
jecxz
cwtl
int
mov
test
outsb
adcb
loopew
das
jo
mov
jmp
mov
cli
xor
add
fbld
mov
mov
xchg
pop
dec
repnz
jno
pop
out
adc
sar
dec
dec
ja
jb
or
xor
test
dec
push
divl
dec
jle
out
push
push
mov
cmp
pop
fstps
lret
add
cwtl
adc
ss
leave
es
mov
xlat
mov
into
dec
jbe
in
movsb
pop
cmp
jle
sub
arpl
flds
mov
pop
push
das
adc
sub
jbe
jne
test
lret
ja
jecxz
insb
dec
xchg
loopne
push
ds
mov
or
test
adc
push
or
add
ljmp
pop
or
insl
js
test
fcmovb
test
sub
inc
or
jge
and
mov
in
mov
and
push
inc
fdiv
mov
fiaddl
rcrl
mov
ja
pushaw
bound
mov
xchg
ja
loope
xchg
dec
xor
cmp
mov
pusha
ja
out
int
or
aad
daa
jo
xor
and
popa
pushf
dec
outsl
dec
stc
pop
fistl
add
inc
mov
jecxz
xor
xchg
pop
push
imul
cmp
inc
xor
sub
inc
jbe
push
mov
subl
mov
jge
lods
comiss
lods
mov
scas
push
imul
icebp
imul
mulb
mov
pop
mov
je
jge
pop
and
mov
cmpsl
and
cmp
or
daa
pop
aam
cmc
or
divl
gs
test
lds
pusha
add
pushf
cmp
in
inc
dec
gs
sub
roll
jg
mov
xchg
add
stc
pop
xor
jnp
push
fmull
popa
pop
nop
subb
mov
and
sbb
mov
push
insl
dec
pop
movl
daa
rolb
push
or
scas
mov
movsb
sub
leave
cmp
mov
test
add
or
dec
cmp
xchg
ret
cld
scas
xlat
sahf
add
cmp
xor
cmp
pop
cld
leave
repnz
mov
out
fcmovb
inc
fstl
add
inc
xchg
shll
ret
add
movsl
sti
loope
dec
test
lea
fldcw
in
out
mov
out
or
outsl
mov
das
call
mov
es
cld
push
mov
stos
or
pop
xchg
push
ljmp
push
xchg
cmpsb
jo
lock
cmp
push
shrb
xchg
push
mov
into
icebp
js
rorb
push
jge
mov
mov
mov
push
mov
shlb
dec
xchg
aam
sub
fimuls
push
adc
out
mov
fwait
pop
inc
or
sahf
out
jg
movsb
scas
lea
addr16
xor
mov
in
push
lock
hlt
stos
scas
mov
pusha
xchg
inc
imul
bound
dec
in
lock
push
test
push
cmp
lock
dec
pop
mov
inc
xor
mov
repnz
mov
mulb
aaa
xor
or
lods
mov
cmp
movb
mov
or
in
and
dec
pop
adc
jns
xchg
sbb
cmc
data16
mov
and
push
lcall
sbb
ret
dec
ret
cmp
scas
stos
xor
jae
pusha
dec
sbb
repz
iret
push
or
lods
cs
mov
sar
and
ret
ror
daa
inc
push
mov
push
or
push
mov
shrl
sub
xor
push
jecxz
mov
pop
fdivrl
push
cmp
cwtl
inc
data16
fistpl
push
sbb
sti
sbb
enter
jae
outsl
out
and
inc
sub
jge
pop
dec
dec
mov
shlb
shll
xor
adc
out
call
shll
cmp
jns
or
pop
test
push
cltd
aas
insl
pop
sbbl
fdivr
mov
mov
jns
sub
stc
std
iret
sarb
push
stc
sbb
push
dec
aaa
pusha
test
mov
scas
dec
or
push
outsl
mov
mov
sbb
shrl
jae
mov
jp
or
ss
das
jae
lods
out
int
push
dec
mov
mov
lds
adc
push
addr16
in
icebp
imul
push
mov
xor
add
cmpsl
mov
lods
mov
adc
js
repnz
cltd
icebp
adc
aam
testb
int3
mov
in
jl
popf
cli
int3
fwait
and
das
sahf
insl
std
mov
icebp
xchg
pop
xchg
cltd
jmp
push
mov
outsl
int3
mov
fstpl
dec
out
movsb
cmpsb
cmp
loop,pn
jo
js
jp
pusha
xchg
inc
in
rorb
ss
adc
xchg
cwtl
int
jmp
inc
loop
data16
or
sub
pop
mov
sub
xchg
test
loop
ficoml
xor
mov
pop
pusha
inc
push
xor
scas
out
adc
gs
push
mov
adc
adc
dec
je
xor
scas
mov
xchg
andb
mov
add
push
mov
cltd
shll
pop
faddl
ss
cmp
nop
mov
testl
je
fwait
dec
fwait
icebp
mov
orl
mov
inc
rol
jl
pop
repz
cld
enter
leave
or
sahf
or
cmp
push
sarb
pop
or
aas
es
mov
inc
jge
mov
inc
int3
xor
jmp
pop
dec
into
inc
jbe
push
mov
loopne
repz
adc
cmpl
dec
repnz
movl
fwait
mov
jnp
jmp
dec
inc
adc
push
test
scas
test
sub
mov
and
insb
movsb
and
je
hlt
sbb
or
or
push
out
pop
and
imul
mov
clc
adc
test
dec
insb
or
xchg
popf
xor
xor
xchg
inc
mov
sbb
lret
xor
fwait
pop
add
cwtl
jecxz
fists
in
aaa
dec
dec
loop
mov
ret
ret
cltd
dec
xchg
pop
fimull
outsb
nop
add
lock
xor
loopne
out
pusha
ftst
fisubl
pop
add
ljmp
sar
test
call
push
mov
fisubs
jne
and
andl
mov
or
push
loopne
cmp
scas
pop
bound
or
xchg
xchg
lods
imul
mov
cltd
pop
cwtl
mov
push
idivl
fsubl
jl
out
les
mov
or
mov
nop
in
xor
jo
mov
xor
mov
es
pop
push
pop
inc
fisubl
popf
dec
pop
add
add
xchg
dec
repz
sub
add
call
inc
cwtl
mov
mov
mov
jp
jge
inc
popa
jo
fnstenv
ret
arpl
cmp
call
sub
movsb
arpl
jnp
bound
xchg
cmp
jns
stos
mov
stc
and
jb
push
cmc
inc
ja
mov
dec
inc
fildl
mov
hlt
push
lret
mov
movsl
jle
gs
push
sub
insb
xchg
push
into
shlb
cmpsl
test
jnp
cld
fwait
mov
in
adc
nop
dec
and
inc
pusha
sbb
insl
dec
sub
inc
and
fmuls
sub
add
pop
add
jecxz
out
push
dec
xchg
loop
inc
push
xchg
pop
int
icebp
fstps
jo
inc
mov
pop
add
iret
jp
movsl
dec
or
cmp
aad
arpl
test
icebp
or
in
out
in
xchg
out
ja
aaa
inc
filds
mov
add
mov
in
shr
lods
jmp
inc
push
lea
add
push
lcall
cmc
addl
xchg
dec
rclb
jle,pt
lock
xrelease
subl
xchg
adcb
loop
nop
nop
pushw
jl
in
mov
jecxz
in
pop
mov
scas
insl
push
xor
cmp
cmp
arpl
fucomip
mov
daa
dec
leave
jne
lods
ja
dec
test
into
std
out
lea
movsb
or
lds
adc
mov
adc
addl
mov
dec
cli
test
jecxz
jle
andl
pusha
and
in
inc
stc
or
adc
loop
icebp
dec
loopne
pusha
dec
sti
mov
sahf
adcl
ret
and
or
mov
xchg
movsl
gs
pop
xlat
mov
sub
cmp
and
out
loope
inc
popf
call
xchg
mov
cs
and
test
flds
push
push
pushf
adc
cmc
mov
int
ja
mov
lods
dec
and
les
aad
mov
pusha
arpl
ja
mov
or
xchg
in
movb
xchg
pop
gs
dec
xor
push
lea
and
std
loope
adc
pop
stc
dec
minps
inc
mov
sbbb
dec
addr16
pop
imul
xor
xchg
ret
ds
mov
enter
inc
mov
fs
mov
bound
fdivrl
int3
inc
mov
shrb
pop
xor
mov
cmc
adc
nop
in
mov
mov
xchg
movsl
mov
jnp
xchg
and
iret
cmp
jae
out
iret
push
sub
inc
test
negb
mov
cltd
inc
leave
sbb
in
push
add
dec
jae
fmull
dec
popf
andb
xchg
js
push
hlt
jbe
js
sub
fsqrt
insl
push
sbb
jns
mov
push
clc
mull
cltd
cmp
jbe
mov
lock
out
dec
jb
mov
fs
imul
pop
sbb
rcrb
jno
mov
jnp
ja
into
clc
ja
mov
push
movsl
je
insl
dec
setnp
aam
stos
mov
inc
aam
jmp
lods
dec
enter
xchg
roll
imulb
mov
enter
push
test
repz
enter
push
mov
dec
pop
mov
dec
cmp
test
aas
addr16
inc
dec
jmp
ja
cwtl
mov
adc
sub
mov
pop
mov
sbb
inc
xchg
pop
leave
and
lea
mov
test
repnz
inc
clc
out
gs
lods
or
orl
dec
dec
sbb
ret
ja
dec
push
add
out
jbe
xor
nop
lret
lret
enter
mov
inc
fldt
test
mov
pop
cmp
lds
push
pop
xorl
insb
mov
or
dec
ljmp
out
mov
repz
adc
xor
out
mov
movsl
icebp
test
mov
add
xor
out
scas
inc
push
or
dec
cwtl
mov
lcall
jecxz
cmp
mov
lds
push
jnp
fadds
and
nop
sbb
iret
ss
push
and
pop
dec
cmp
dec
mov
add
xorb
cltd
push
scas
pop
inc
xor
pop
nop
cmpsb
sub
xor
clc
test
dec
push
sahf
mov
pop
jns
pop
adc
inc
lea
or
mov
jp
out
push
fs
add
outsl
fs
sti
ret
shrb
pop
test
push
repz
mov
icebp
xor
and
mov
cmp
jns
push
arpl
lret
mov
mov
leave
push
jg
hlt
in
loope
add
add
sbb
rorl
xchg
cmp
outsb
dec
jae
and
sub
shl
mov
inc
xchg
push
cld
cmp
inc
inc
cwtl
mov
mov
outsb
inc
dec
mov
int
divl
mov
xor
popa
unpcklps
mov
repz
es
aam
out
inc
cmp
stos
pusha
cmc
in
mov
inc
push
add
lock
jg
or
sbb
ss
popa
mov
cmc
xchg
test
ljmp
sbb
rclb
fcoml
lods
mov
jb
inc
fmull
cmp
dec
aad
xor
adc
mov
mov
adc
push
push
adc
sti
xor
push
jge
mov
push
inc
jecxz
push
gs
shl
pop
rcll
sbb
ja
add
les
mov
mov
in
mov
sbb
xchg
sub
and
mov
lret
nop
cltd
in
test
mov
dec
push
jmp
outsb
push
push
pop
pop
mov
cmp
xchg
push
fdivrs
adc
dec
fsin
xlat
mov
out
mov
jecxz
popf
addr16
xor
push
and
imul
jb
lock
and
or
add
ss
cli
jg
dec
dec
out
out
pop
loope
mov
cmc
jo
icebp
lretw
cmpsl
dec
test
jmp
inc
sbb
mov
mov
sbb
mov
ds
outsl
adc
insb
dec
mov
jae
add
mov
call
adc
push
jne
stos
aad
mov
add
scas
stos
ja
scas
xchg
gs
sub
jbe
adc
outsl
and
or
subl
cmp
push
add
aam
in
int
idivl
dec
out
int
mov
adc
rolb
iret
push
xchg
adc
sbb
jge
mov
mov
movsl
std
xchg
test
cmc
in
mov
hlt
xchg
add
icebp
xchg
mov
test
int3
mov
mov
push
insl
pop
into
subl
aas
push
lcall
dec
hlt
xchg
pop
and
rorl
ja
mov
or
out
movsl
jge
repnz
es
xlat
push
loope
ficompl
inc
pop
bound
lea
scas
sahf
sbb
mov
shlb
sub
and
fwait
add
and
inc
into
movb
lods
add
dec
std
or
lds
or
das
sub
jne
dec
jb
test
out
aaa
int3
sub
adc
push
jbe
sbb
dec
pushf
pop
pop
cltd
loope
inc
push
sbb
xchg
sub
test
inc
xchg
pop
in
ja
or
testl
cmc
jmp
xorb
data16
mov
xchg
popa
cmpl
pusha
xchg
jb
mov
push
or
rorl
mov
add
daa
jle
shr
xchg
cmp
mov
mov
dec
out
shll
jns
inc
dec
in
sbb
divb
mov
data16
mov
lods
sub
mov
sbbb
dec
jne
or
lds
int
adc
test
ret
sub
into
rcll
in
ficomps
sub
hlt
mov
outsl
ret
aad
in
jg
add
leave
sbb
popw
jno
stos
xchg
mov
in
insb
pop
sbbl
lds
cmp
insb
mov
adcb
mov
ljmp
rcr
jb
xor
das
xchg
xor
and
ss
icebp
mov
mov
pop
fcoml
or
mov
jecxz
les
inc
pop
xor
or
push
xchg
cmp
inc
test
dec
cmpsl
ljmp
and
repz
inc
dec
mov
lods
out
cltd
scas
sbb
sub
hlt
in
adc
xlat
inc
jnp
mull
out
gs
xor
outsl
and
lds
sbb
or
shrb
inc
xor
int
out
int
add
mov
out
adc
movsl
add
push
js
jmp
adc
out
es
scas
mov
dec
dec
xor
in
cmp
lock
or
lret
xchg
leave
ss
cmp
gs
popf
cld
js
icebp
push
pushf
cmp
jnp
rorl
into
mov
xlat
lds
dec
popf
ja
lret
lret
mov
add
or
push
add
or
lret
mov
test
cmp
in
push
lret
dec
jg
fimull
dec
lods
dec
sbb
cltd
shr
or
and
adc
cwtl
les
mov
je
iret
cs
jecxz
cmp
xchg
add
sbb
jmp
push
test
xchg
inc
mov
jo
aad
enter
xor
pop
push
sub
mov
mov
push
mov
lds
rclb
ret
mov
nop
pop
mov
push
pushf
add
add
scas
sbb
cmp
cmpsl
jmp
das
test
aas
pop
mov
dec
stos
ret
jecxz
jbe
inc
xchg
push
pop
outsl
out
mov
lret
dec
push
xor
in
pushf
push
dec
mov
push
idivb
mov
sub
add
add
inc
gs
pop
xor
add
mov
dec
mov
or
loope
psubd
inc
xchg
push
jne
add
mov
fnstenv
ret
mov
aas
shll
push
aad
adc
xor
or
aaa
test
inc
cmc
inc
lahf
in
and
dec
sub
adcl
and
push
xor
cmp
jge
incb
dec
jle
and
insb
mov
xor
icebp
sub
xor
addr16
sbb
xchg
pop
jne
scas
add
mov
out
jecxz
xchg
pop
js
mov
xor
sarl
cli
int
and
sbb
aas
leave
sub
cmpsl
push
subb
out
das
leave
cs
xchg
push
xor
mov
pop
clc
mov
add
jl
outsl
dec
jmp
sub
cmc
jmp
lea
movsb
cmpsb
scas
cmp
in
pop
sbb
cs
adc
leave
js
xchg
mul
cli
pop
inc
add
xor
adc
inc
push
inc
insl
fiadds
sti
loopne
adc
push
hlt
bound
scas
dec
add
out
pcmpeqw
or
and
lahf
filds
push
jno
outsb
das
inc
test
cmpsl
or
rorl
jl
pop
outsb
mov
ret
adc
cli
mov
push
cmpsb
insl
out
push
jecxz
pop
or
adc
add
rcrl
push
pop
cmpsl
arpl
pop
pop
sbb
ja
jne
test
shll
stos
pop
xchg
insl
xor
cmpsb
imul
adcl
mov
or
into
mov
aad
call
call
push
sub
inc
into
js
adc
cld
and
cmpsb
repz
iret
das
mov
xor
sar
jns
add
sbb
insl
sub
and
es
loop
lods
iret
daa
vminpd
popa
mov
lods
push
push
add
push
add
mov
dec
das
pop
fdivs
pop
sbb
dec
pop
sahf
or
jne
mov
lret
hlt
es
dec
fldl
out
mov
inc
imul
inc
mov
enter
xchg
adc
push
lret
fcoms
adc
shlb
insl
inc
pusha
add
mov
push
pop
push
lods
xchg
call
addb
shlb
mov
in
jmp
movsl
sti
inc
pop
pop
outsb
push
push
pop
je
mov
sti
in
lahf
loopne
mov
jg
sbb
pop
push
scas
out
outsl
mov
push
mov
pop
adc
inc
hlt
or
stc
pop
in
aam
mov
iret
ret
int
test
sbb
push
stos
mov
and
push
xor
scas
cli
ds
push
cmp
mov
aam
mov
fnstcw
jle
cld
lods
hlt
cmp
adc
stos
sub
jg
sub
adc
push
jmp
xchg
lahf
jbe
test
fnsave
and
int
xchg
or
popa
testb
add
push
ret
insb
cmc
sbb
addr16
cmc
stc
jbe
mov
xchg
lods
lahf
jne
jge
mov
cmp
outsl
pop
jns
lods
mov
andl
sbb
or
fldcw
icebp
sbb
jmp
xor
stos
pusha
insl
mov
mov
ret
and
pusha
or
popa
test
or
dec
add
cmp
mov
push
pusha
mov
push
push
das
call
adc
inc
iret
sbb
and
dec
lahf
popf
push
pop
sub
or
mov
icebp
sbb
mov
xor
stos
dec
cmp
jns
push
icebp
or
xor
jnp
mov
outsb
pushf
icebp
and
and
stos
pusha
fisttpll
xor
sbb
xor
stos
fdivr
push
enter
push
subb
stos
in
pusha
cmp
into
xchg
insl
popf
sub
add
nop
mov
jg
sbb
test
inc
out
adc
push
pushl
movb
notl
imul
lahf
xor
aad
outsl
dec
jnp
and
xchg
imul
sbb
shld
jne
mov
and
sub
push
sub
xor
test
adc
and
jl
push
push
mov
lret
jbe
add
int
push
in
sub
int
adc
ret
mov
add
mov
cli
jbe
dec
divb
add
xchg
mov
into
mov
fmul
xor
adc
cmpsb
mov
les
imul
mov
loop
loopne,pn
hlt
bound
jae
cld
lcall
into
cmpsb
jmp
stos
inc
add
je
inc
test
mov
mov
mov
pop
scas
mov
repnz
lods
lods
and
xchg
loopne
scas
jl
aam
xchg
cli
and
cmpsb
sbb
cmove
sbb
les
mov
movsl
mov
enter
jne
ljmp
dec
mov
rdpmc
mov
js
sbb
dec
push
cld
fildll
sti
cmp
sub
sub
clc
mov
adc
cli
stos
mov
jo
test
mov
pop
jno
push
dec
gs
nop
mov
mov
shlb
mov
cmc
sbb
cltd
imul
cltd
mov
fs
sbb
mov
insl
push
sub
insb
sbb
jb
inc
sub
ret
out
pop
and
cmpl
add
add
mov
pop
jmp
popa
lods
ljmp
push
pushf
add
popf
scas
mov
cwtl
lahf
mov
adcl
cltd
in
push
sbb
or
xor
push
fcoms
xor
jecxz
mov
lods
popa
outsl
xchg
fdivl
mov
ret
aaa
xor
sbb
and
mov
pop
sbb
jns
arpl
jmp
dec
in
sbb
xchg
je
rcrb
insb
or
aaa
fistpll
inc
push
dec
mov
adc
or
mov
aam
mov
mov
scas
test
adc
inc
xchg
fs
pop
cmpsb
mov
mov
sarb
mov
sti
xchg
push
mov
add
test
pusha
push
icebp
inc
icebp
pop
or
or
cmp
inc
push
add
sub
cmp
shlb
jmp
mov
mov
iret
daa
sti
push
mov
out
push
test
in
dec
push
push
push
das
pop
xchg
daa
xor
or
inc
xchg
imul
push
and
push
and
xchg
outsl
push
rorl
rcll
mov
dec
lahf
jg
pop
push
out
mov
ret
scas
movsb
repnz
pop
pop
sbb
int3
push
xchg
adc
or
add
push
ret
imul
pushf
pop
sub
push
leave
push
pushf
sbb
add
sarl
lret
ror
add
and
push
addr16
outsl
fisubl
mov
enter
or
add
cmp
cmp
imul
stos
insl
lods
inc
lahf
es
xor
or
insl
aam
cmp
loope
aas
and
dec
rorl
mov
mov
scas
dec
scas
lds
xor
fstpt
mov
fsubl
xchg
and
adc
mov
mov
adc
enter
pop
dec
push
fsub
stos
jl
and
xchg
ljmp
ret
icebp
xchg
rcl
inc
cmp
mov
xor
jecxz
loope
out
in
xor
adc
popf
in
into
pop
cmp
clc
add
pop
out
dec
movsl
xchg
jecxz
mov
sbb
xchg
scas
pmulhw
inc
sti
pop
pushf
inc
in
mov
hlt
inc
sbb
out
icebp
int
pop
addl
inc
adc
sbb
jno
inc
xor
or
cmpsb
repz
in
push
xchg
in
inc
xchg
or
out
mov
and
dec
stos
test
lea
inc
sub
movsb
popf
xchg
push
je
mov
add
cli
test
pop
popa
push
das
imul
out
aam
and
mov
jo
stos
mov
hlt
xchg
pop
aam
xorl
test
cmpl
cmp
lods
loope
push
pop
dec
fsubrs
lea
cmc
in
adc
fcoml
psrlq
cmc
push
sub
pop
push
cs
mov
adc
cltd
push
cmove
int
cmp
inc
mov
rcr
jmp
xor
repz
scas
mov
icebp
add
adc
adc
jno
in
mov
jno
adc
adc
inc
push
push
cmp
jno
xchg
push
lods
aas
push
adc
xor
add
jno
and
addr16
push
mov
arpl
xor
jo
adc
jge
xor
insl
fisubs
pop
imul
std
int
mov
popf
sbb
lret
lods
test
stc
pop
lret
les
int
jl
mov
dec
xor
std
lods
fcoml
pop
sub
or
in
mov
pop
and
movsl
ljmp
xor
outsl
dec
sahf
jns
xor
add
pop
ficoms
dec
imul
int
mov
repnz
xchg
xchg
enter
mov
cmpsb
sahf
repz
push
mov
imul
ret
aam
push
inc
inc
imul
fiaddl
es
loopne
mov
jle
push
pop
sbb
jo
and
scas
cli
fisubrl
cmc
pop
xchg
and
insb
ret
imul
lods
std
out
mov
sbb
dec
ret
jae
movsl
pop
loop
repnz
fistl
aaa
push
push
xchg
push
daa
outsl
in
sub
dec
jnp
push
sub
in
mov
sub
sub
pop
test
cmp
adcl
pop
xchg
inc
cmp
out
idivl
icebp
cld
aam
jmp
xor
in
mov
test
push
and
xchg
push
scas
pop
sarb
sbb
pop
test
jmp
insb
add
xchg
aaa
imul
adcb
adc
jecxz
insb
adcl
xchg
test
pop
and
idiv
adc
xchg
mov
outsb
negl
lret
mov
or
add
aam
outsl
js
cmp
in
add
jp
xor
movsl
or
ljmp
mov
lods
push
and
xchg
loope,pt
stc
xchg
cmpb
cmpb
jle
xchg
movsb
inc
inc
ss
mov
sbb
cmp
pop
aaa
testb
push
xchg
sub
cmp
repz
sub
jno
or
stc
sub
mov
dec
jl
adc
lock
pushf
les
out
fisttps
jbe
sub
je
popf
sbb
roll
lods
mov
or
sub
rol
lea
mov
push
sti
stos
mov
push
sbb
test
out
mov
or
xchg
dec
call
aaa
mov
xchg
cmp
mov
mov
imul
loop
cs
fnstsw
mov
es
dec
les
mov
int
rolb
roll
inc
cli
sbb
fldcw
push
lods
jne
mov
xor
sarl
in
movsb
leave
add
inc
loop
or
add
ja
add
aaa
loopne
jmp
int3
je
mov
stos
sti
into
stos
inc
repnz
adc
lods
lret
or
push
jne
cmp
cmp
add
push
mov
cmpsl
gs
fs
nop
push
in
cmpsb
movsl
sub
push
loope
xor
inc
or
cld
sbb
ret
pop
popf
push
and
stc
shr
and
lret
mov
pop
and
bound
test
mov
std
mov
shll
out
cli
scas
hlt
and
dec
adc
shlb
sbb
cmp
xchg
and
dec
test
inc
mov
jmp
popf
pop
add
xchg
shrb
inc
movsl
mov
aaa
lds
mov
in
in
lods
push
call
push
push
pop
jl
lods
test
xchg
sbb
push
jae
fsts
mov
ljmp
lods
in
imull
lcall
and
aam
hlt
push
or
cmpsb
cmp
movsl
jmp
in
adc
sub
inc
loopne
jno
adc
inc
adc
pop
mov
dec
stos
push
jb
int
test
jp
std
pop
jmp
jmp
stos
inc
div
es
push
sbb
loope
test
int
push
lods
subl
lods
das
dec
lods
mov
sub
jno
jno
push
mov
ret
pop
mov
jmp
push
lods
arpl
dec
gs
ret
daa
push
jne
fistps
mov
xchg
enter
shll
dec
cli
cmpsl
fisttpl
cmp
addl
in
out
or
push
xchg
negl
jmp
inc
icebp
xchg
scas
dec
daa
sbb
mov
xor
adc
dec
testl
adc
insl
pop
sub
push
test
repz
cmp
lcall
addl
popa
cmpsl
xor
movsb
and
push
push
inc
rcll
movsl
push
xchg
jge
add
xchg
pop
mov
push
inc
push
pop
mov
jle
lahf
testb
adc
sbb
arpl
aad
lods
xchg
xor
adc
pop
ds
sahf
ret
inc
daa
mov
imul
xchg
lods
nop
xcrypt-ofb
cmpsl
das
xor
inc
jnp
les
add
cmp
mov
lods
jmp
mov
enter
pop
mov
cmp
int
idiv
lods
mov
adc
sar
sahf
mov
inc
push
lret
out
stc
jl
icebp
sbb
mov
inc
adc
fwait
add
incl
jmp
cli
mov
in
mov
xor
mov
mov
fs
mov
insb
mov
adc
loop
pushw
mov
je
mov
pop
jo
daa
mulb
outsb
lahf
jl
or
push
lret
fistpl
and
lock
sbb
addr16
push
test
repz
icebp
rolb
cmp
in
test
or
xchg
scas
pop
xorl
lods
sbbl
push
jecxz
int3
mov
lea
and
dec
mov
in
int3
xor
cmpl
ds
outsb
mov
push
pop
dec
rolb
add
gs
or
push
das
mov
subl
or
or
inc
mov
arpl
dec
add
push
jbe
test
cmp
xor
adc
inc
stos
inc
stos
arpl
mov
lret
and
xorl
leave
xchg
addr16
cmp
fsubrl
jecxz
sbb
ja
jg
adc
cmp
fsubrs
mov
jecxz
and
push
xchg
dec
imul
sub
jns
pop
aaa
add
or
add
arpl
cmp
or
mov
lods
decl
cltd
fdivr
seta
add
adc
xchg
sahf
iret
cmp
and
scas
roll
stos
xchg
sbb
nop
sarl
pop
sbb
int3
mov
cmp
insl
imul
add
xchg
fiadds
cmp
xchg
fidivs
repz
sbb
push
jmp
and
or
push
and
push
push
lahf
sub
repnz
pop
xor
pop
jo
mov
movsb
mov
out
fscale
movsl
adc
mov
call
adc
jg
scas
cmp
xlat
mov
repnz
hlt
in
sub
in
out
das
leave
jmp
adc
cmp
dec
ljmp
insb
pop
arpl
out
xor
dec
cltd
in
rcrb
xchg
mov
sti
mov
mov
loop
pop
mov
lds
or
icebp
daa
cmpsl
aas
jnp
adc
adc
fdivl
adc
int3
and
cmpsl
stos
push
xlat
int3
xchg
xchg
sbbl
movsl
mov
cwtl
inc
jae
sbb
rclb
lcall
mov
inc
pushl
testl
adc
push
enter
sti
cmp
and
aaa
mov
xchg
jle
scas
mov
or
lods
sub
dec
jmp
and
lret
adc
ja
add
jg
add
adc
inc
stos
sbb
cmc
jns
insl
ds
xchg
lret
dec
push
dec
arpl
jmp
inc
pop
call
mov
testb
and
jmp
mov
adc
lret
xchg
or
daa
adc
mov
aas
aas
mov
inc
daa
aas
pusha
loop
mov
negl
popf
add
push
rorl
add
mov
in
push
fildl
test
mov
lock
lcall
add
aaa
stos
xor
ret
int
or
xchg
mov
mov
dec
pop
decl
inc
std
push
xchg
pop
mov
jbe
lods
stos
test
cmp
fistl
scas
adc
mov
sbb
testl
cli
mov
popf
mov
adc
gs
repz
das
iret
pop
bound
mov
lods
lods
jbe
shll
push
jns
jnp
mov
xchg
jg
inc
inc
mov
adc
cmp
lcall
popa
add
je
push
and
lea
add
cli
jle
xchg
jo
xor
insl
int3
lock
enter
pop
jecxz
je
sub
repz
imul
xor
stc
and
shll
xor
jge
inc
out
stc
inc
mov
inc
icebp
dec
test
adc
push
sbb
add
movsb
mov
cwtl
xlat
iret
loope
push
cmpsl
add
fld
in
mov
inc
push
push
inc
loopne
arpl
daa
jae
mov
repz
xor
jmp
std
and
or
fldenv
adc
ljmp
aas
dec
cmc
jp
cmp
int3
lods
scas
shll
test
xor
or
mov
out
jb
xchg
or
lock
push
out
out
out
icebp
scas
mov
xchg
dec
xor
lcall
stos
mov
xor
les
adc
jle
push
xchg
xlat
aaa
mov
mov
mov
arpl
nop
push
pop
int
xor
iret
cli
mov
xchg
orl
or
lods
inc
inc
jo
or
mov
jne
fmull
ds
pop
lret
ds
xchg
leave
or
aaa
enter
jns
fs
push
jmp
scas
and
and
push
out
push
sbb
pop
not
inc
jmp
dec
push
lret
jmp
mov
out
mov
push
inc
hlt
sbb
shll
in
add
mov
lock
sbb
cmp
fisubrl
push
or
xchg
shrb
jno
jne
xlat
orl
push
fdiv
daa
fidivl
or
in
ret
setno
cmp
scas
in
dec
jg
mov
in
xor
jmp
pushf
pusha
push
int
dec
mov
xor
insl
rolb
data16
scas
xor
shrl
mov
gs
sbb
push
test
cmpsl
mov
inc
cltd
adc
mov
dec
sub
jl
push
or
fldenv
out
sub
and
ds
and
icebp
lods
xor
cmp
lcall
testb
out
or
aaa
mov
rorb
adc
nop
or
dec
push
insb
jmp
shll
push
and
adc
out
add
movsl
mov
shr
in
addb
mov
xor
dec
ds
in
push
test
mov
add
pop
mov
inc
sbbl
pop
jne
in
jo
and
push
nop
jne
cs
cmp
and
or
pop
iret
push
repz
xor
mov
out
test
ja
pusha
lock
mov
dec
jp,pt
std
jge
ja
xor
inc
jno
and
shl
lcall
xor
mov
add
pop
and
pop
sbbl
ret
out
dec
jbe
pop
sub
dec
xchg
in
pop
jmp
mov
inc
or
pusha
dec
add
mov
call
push
cmpsb
mov
sbb
jecxz
adc
sbb
cltd
sahf
xor
push
xchg
fsts
mov
loope
xchg
repz
mov
pop
in
stc
dec
repz
and
repnz
ljmp
es
dec
adc
xchg
jne
cli
shrl
setae
or
aad
movl
jp
fbld
push
mov
jb
mov
test
or
or
je
lcall
or
in
je
ror
add
inc
cmp
add
inc
dec
or
xchg
cmc
mov
jmp
in
scas
add
aam
add
jge
sub
or
fildl
pop
push
adc
mov
pop
add
js
leave
sbb
and
sbb
inc
xor
pusha
and
movsl
rcl
jne
sti
cwtl
loopne
loop,pt
iret
adc
int
push
cmpsl
mov
jb
bound
adc
mov
push
mov
pop
pop
test
pusha
sub
test
mov
popf
mov
cmp
xor
add
sub
inc
cs
sbb
sbb
jp
jno
push
adc
gs
add
scas
inc
outsl
pop
pop
jge
sub
push
sub
add
icebp
in
dec
out
aaa
mov
pavgw
xchg
cmc
mov
or
and
lods
mov
fldpi
das
cmc
or
out
sub
dec
and
push
inc
xlat
mov
icebp
mov
pop
jbe
xor
jge
mov
ret
add
jp
jae
xor
mov
mov
lret
push
mov
inc
xchg
xor
cltd
dec
sti
ds
lods
cld
nop
push
or
lret
mov
mov
cmpsl
inc
loop
push
mov
xor
sub
fs
or
mov
loope
jno
in
cmp
cmp
mov
repz
xor
pushf
mov
cmpsb
and
add
in
pop
pop
sub
xor
test
jo
das
insb
mov
mov
mov
adc
rorl
xchg
ficoml
and
in
int3
sub
imul
push
adc
sbb
lret
cmpsl
dec
enter
dec
mov
xor
jo
scas
inc
enter
loop
inc
fistpll
lods
imul
hlt
pop
dec
popf
cmp
pop
jne
push
sub
jecxz
adc
jge
stos
ja
mov
jecxz
flds
jecxz
or
dec
stos
inc
sub
xor
push
cmp
adc
adc
test
xor
imul
push
jbe
popf
xchg
cmc
cmp
jo
hlt
adcb
test
dec
xor
mov
and
daa
cmp
test
popf
mov
mov
sbb
popf
insb
gs
rcrl
add
addr16
nop
imul
dec
xor
mov
and
lods
dec
pop
mov
mov
push
or
and
pop
sub
add
les
push
cmp
jo
add
int3
ljmp
pop
jns
jecxz
js
imul
sti
inc
push
ret
lahf
inc
jle
inc
cmc
std
test
imul
mov
fildll
aam
mov
jecxz
fnstsw
or
out
in
push
test
int3
jg
aam
push
pop
pushf
fcomip
lods
test
xor
jmp
xchg
sub
dec
push
icebp
or
lods
loope
push
mov
xor
cmp
fsubrl
test
sti
lahf
and
ja
dec
fiadds
pushf
push
jo
mov
or
and
or
das
fsubr
inc
push
in
or
neg
pop
sbb
fs
imul
fwait
lret
shrb
xchg
arpl
sbb
js
rorb
inc
cmp
jl
pushf
inc
pop
fs
dec
scas
cmp
fsubrl
in
cmpsl
mov
shr
mov
fbld
adc
das
pop
lcall
dec
int3
int3
aad
jne
lock
or
adc
mov
imul
pop
mov
scas
inc
enter
fcompp
adc
dec
cli
push
shrb
xchg
imul
lea
mov
mov
jno
sub
imul
and
ja
dec
addr16
enter
add
mov
and
mov
clc
mov
lods
imul
mov
mov
lea
jle
jo
scas
sbb
lods
mov
out
xor
jl
inc
pop
fs
lcall
imul
mov
outsb
xor
xchg
and
push
push
sub
test
cmp
hlt
es
mov
out
orl
sub
iret
or
add
sbb
clc
push
pusha
pop
jb
dec
add
sub
mov
out
jo
ss
loopne
std
in
outsl
jae
jne
inc
sahf
negb
cwtl
ret
sub
pop
jne
ds
xor
dec
xchg
mov
dec
sbb
stc
pop
or
cmp
ret
mov
mov
or
adc
or
dec
xor
xchg
push
stc
orl
das
push
and
hlt
push
adc
int
incb
js
and
cli
ss
inc
ljmp
loopne
push
mov
out
out
mov
push
test
mov
adc
dec
xchg
fstpl
cmp
loop
ss
push
dec
cmpsl
pop
jg
adcl
imul
jmp
cmp
js
xorl
dec
sbb
out
ret
adc
push
dec
aaa
pop
nop
mov
pushf
push
dec
sahf
fdivrs
lds
mov
xor
push
ljmp
nop
mov
test
xchg
mov
pop
sub
repz
sub
cltd
outsl
ja
int
and
xor
xor
scas
jo
jnp
push
add
decl
dec
les
jb
push
cmc
push
mov
add
mov
mov
dec
stos
stos
das
inc
cmp
xchg
dec
lea
outsl
rolb
add
lock
cld
sbb
out
ss
add
insb
pop
cmpsl
lcall
cmp
cmp
xor
sub
in
xor
in
sub
arpl
in
dec
jns
jle
xor
jge
push
and
setg
int
sbb
ljmp
lahf
push
lods
xlat
mov
arpl
push
inc
out
pop
call
in
xchg
cmp
loope,pn
pusha
out
adc
ja
sbb
push
out
adc
push
iret
popa
aaa
jmp
push
int3
cmp
and
lds
mov
mov
fdivl
add
mov
popf
popa
cmp
ljmp
or
adcb
out
push
sbb
das
iret
ljmp
push
lods
call
movsl
push
aaa
das
jmp
aad
adc
dec
mov
fs
iret
adc
push
aaa
inc
rcrb
jmp
pop
or
add
stos
test
outsl
dec
int
shr
cmp
in
stos
dec
leave
adc
adc
int
jge
loop
or
add
subb
mov
mov
repnz
movsb
sbb
sbb
cli
and
xor
in
jmp
or
and
mov
pushf
popa
adc
ljmp
mov
xchg
movsl
ror
cmp
lock
int
and
lret
mov
aas
mov
jbe
mov
mov
fsubrl
sub
adc
jbe
mov
mov
sbb
sub
mov
xchg
cld
outsb
xor
lret
movsl
scas
int3
xchg
in
jb
pop
xor
sahf
mov
test
xor
jg
push
xchg
adc
aad
cmp
out
mov
mov
push
daa
mov
repnz
push
mov
scas
sub
loope
jbe
stos
xor
in
loope
popa
lret
xchg
mov
sbb
out
lock
jecxz
int3
jae
pop
and
scas
lds
xor
adc
cmc
inc
and
aaa
pop
and
in
sbb
sub
pop
js
push
cmp
xor
or
aad
and
fmul
ljmp
xchg
test
add
dec
push
push
dec
movsl
pop
inc
jae
jns
sbb
mov
into
mov
cwtl
and
dec
lock
mov
jecxz
add
or
js
mov
fidivrs
lret
call
inc
push
cmp
loopne
cltd
pop
cmc
ljmp
bound
jle
shll
and
cwtl
leave
add
std
shll
fldt
inc
xor
jns
push
dec
push
pushl
mov
ds
popf
stos
add
cmpsb
popf
xor
stc
fists
sbb
cli
ss
out
mov
jg
repnz
pop
out
jno
or
jne
mov
jnp
or
or
sbb
inc
xor
push
in
enter
decl
sbb
pop
cmc
sbb
mov
lods
into
int
call
jl
outsb
push
fsubrs
push
out
pop
pop
push
clc
sbb
std
lods
mov
mov
repz
mov
sti
aad
pop
jb
inc
cmc
dec
push
fadd
inc
rcll
bnd
and
popa
or
jo
sbb
andl
cmc
dec
cltd
enter
push
bswap
out
shlb
lret
xchg
mov
sar
mov
inc
inc
push
xchg
pop
jb
push
mov
stos
xchg
enter
inc
mov
pop
mov
call
sub
mov
inc
insl
std
xlat
fld
jle
rorl
scas
jne
and
push
outsb
cld
sub
dec
and
aad
jle
sub
iret
shlb
ja
push
bound
cmp
int3
mov
push
insb
insb
shll
fldcw
sub
into
add
pop
add
test
adc
movsl
cmp
iret
ret
xor
cmp
subl
mov
dec
shlb
pop
pop
mov
out
and
and
mov
pop
mov
je
shlb
jle
cld
dec
jnp
push
mov
sub
int
push
shlb
daa
lods
inc
in
mov
jo
cmp
adc
test
mov
ret
and
sahf
scas
ret
subb
leave
add
imul
pop
and
push
dec
push
mov
insb
mov
sub
sahf
xchg
xor
xor
dec
mov
negb
push
push
cmp
leave
add
xor
push
jae,pn
repnz
add
sbb
leave
out
mov
into
popf
sbb
mov
mov
movsb
das
mov
pop
jmp
xchg
xchg
loopne
test
stos
btc
jno
test
push
movsb
dec
ficoms
pop
push
rcr
pop
mov
out
inc
jb
push
into
mov
loope
or
loopne
xchg
or
mov
and
sub
in
jnp
aam
sub
jb
inc
mov
call
cli
ss
lock
lret
icebp
sbb
mov
sub
push
or
jecxz
mov
pop
mov
pop
inc
into
ja
mov
mov
daa
popf
mov
data16
pusha
loop
adc
dec
jnp
sar
mov
pop
mov
lds
pusha
shrb
cmp
dec
jg
push
sub
pop
insl
inc
sub
mov
fldenv
push
dec
cwtl
scas
daa
or
sbb
test
rol
aas
fimuls
repz
idivl
int
scas
pop
es
rclb
mov
clc
sti
lret
in
std
call
adc
call
push
imul
lcall
dec
add
push
and
inc
sar
imul
mov
insl
mov
xlat
iret
test
enter
pop
cmp
aam
or
xchg
inc
sarl
mov
movsb
cmp
call
popf
rclb
xchg
and
jle
mov
sub
into
lods
and
shlb
cmp
fwait
or
ss
pop
or
out
mov
xor
loope
js
adc
xchg
aaa
inc
int3
mov
ss
pushf
pop
and
and
das
xorb
outsl
jmp
mov
pop
dec
pushf
ljmp
cmp
and
lods
xor
out
icebp
iret
ss
xlat
push
sub
or
xor
cmpsl
dec
pop
insl
or
fucompp
inc
pop
xlat
lcall
out
sub
je
and
aas
idivl
lea
xor
ret
adc
pop
repnz
arpl
mov
mov
stos
jle
xchg
adc
jo
arpl
mov
test
mov
push
insl
adc
jl
fsubs
pop
inc
xor
add
xor
inc
xchg
aaa
jecxz
aaa
xchg
in
stos
adc
scas
sub
shlb
mov
ret
nop
mov
or
daa
int
mov
push
xor
mov
hlt
dec
enter
outsb
jmp
mov
clc
and
mov
test
inc
xchg
xor
add
or
xchg
xor
push
inc
hlt
jecxz
jo
lea
push
imull
stos
mov
add
pop
adc
lahf
gs
inc
je
fdivr
dec
mov
pop
mov
push
lret
outsb
outsl
fdivrl
pop
into
sub
shrl
data16
cmp
ljmp
in
sub
pxor
out
cmpsl
in
loope
mov
cli
sti
push
ljmp
fisubrs
loope
insb
xor
je
popa
xor
jmp
xchg
leave
sub
sbb
fs
xor
arpl
jbe
jns
push
adc
push
mov
shll
incb
xchg
js
addr16
cmp
shlb
sbb
adc
maskmovq
divl
cmpsb
or
mov
sub
stos
inc
mov
iret
adc
cltd
out
dec
mov
sarl
arpl
pusha
hlt
adc
xor
outsl
xor
or
dec
imul
outsl
in
iret
insl
rol
xor
mov
les
jle
mov
test
or
mov
mov
xor
or
insb
cli
ficompl
cmp
pop
xor
ss
xchg
rcrl
inc
pop
xchg
mov
fisubs
inc
mov
sub
rolb
cmpsl
cmp
outsb
lcall
lea
bound
dec
mov
sbb
cmc
jo
cmpsb
push
xor
lahf
fisubrs
lods
mov
test
stos
adc
jne
call
lods
inc
sbb
or
les
cs
add
addb
mov
cs
xchg
xchg
and
insb
inc
stc
jecxz
add
ds
xor
out
jecxz
sbb
and
xor
js
rcrb
aas
add
clc
clc
jae
push
test
cs
cmp
push
sub
and
test
insb
mov
mov
and
push
mov
mov
lcall
std
mov
lea
insb
enter
and
push
shrl
push
or
lret
sbbl
jne
popf
lds
incb
inc
jmp
cmp
mov
pop
fists
add
mov
xchg
dec
js
dec
push
cmp
cmp
xchg
bound
mov
xorb
adc
and
mov
imul
sub
inc
das
jo,pn
or
xchg
cmpsl
pop
xor
sti
push
jmp
shll
push
xchg
dec
addl
fstps
xchg
jno
cli
jo
iret
mov
xchg
cmp
cmp
cmp
adc
jecxz
pop
dec
or
cltd
scas
fdivs
sub
inc
sbb
inc
mov
xchg
std
dec
add
mov
loopne
sub
popf
fdivs
ret
fwait
and
mov
cld
mov
cmp
pushf
xor
xlat
inc
andl
xchg
repz
sti
push
das
push
push
sbb
movlps
jbe
lcall
and
cmp
push
jne
jnp
out
into
cmp
call
repnz
ds
loopne
arpl
push
pop
insl
mov
insb
inc
pop
mov
jecxz
ficoms
jb
fcoms
ljmp
xor
sub
cmp
loop
sbbl
imul
adc
cmpsb
and
incl
repnz
xor
js
test
cmpsb
and
lret
mov
mov
rclb
inc
clc
mov
xchg
jo
sub
and
sbb
cmp
xchg
loope
mov
cmp
xor
xchg
lahf
and
pop
outsb
jge
jae
push
sub
mov
gs
shlb
sbb
mov
inc
stc
aad
and
xor
int3
or
pop
ja
mov
shlb
pop
adc
inc
jbe
jno
pop
sub
scas
inc
mov
test
sub
mov
mov
int3
inc
movsl
out
fstpl
mov
mov
cmp
in
pop
xchg
icebp
mov
loop
push
into
ficoms
fdivrl
xchg
sub
push
and
loopne
and
mov
inc
push
out
push
mov
sub
jle
in
xchg
mov
jbe
sarl
aaa
add
jecxz
nop
push
imul
jo
jg
mov
cltd
iret
push
dec
cmpsl
xor
xchg
mov
mov
dec
popa
lods
xor
lret
rcr
daa
xchg
mov
hlt
push
mov
addr16
stos
and
xchg
in
xorl
sbb
stos
out
mov
mov
sahf
xchg
inc
dec
pop
add
lret
mov
outsb
jecxz
pop
outsb
xchg
pop
sbb
push
xorb
or
nop
mov
jg
cmp
xchg
pop
xchg
and
insl
adc
add
lds
sub
mov
push
add
add
fs
xchg
add
test
add
call
cmp
inc
sti
or
sub
dec
lods
test
daa
unpckhps
add
dec
enter
icebp
arpl
lret
in
popf
jo
insb
dec
pusha
inc
mov
test
jg
arpl
sti
rcl
push
mov
xlat
movsb
mov
jbe
mov
pusha
js
imul
push
xchg
popa
int
cld
loopne
cli
pop
adc
cmp
jl
loop,pt
insb
test
pop
adc
cltd
imul
in
rdmsr
pop
mov
xor
orl
rcr
or
inc
icebp
rorb
aam
lods
push
leave
xorb
add
lret
fcoml
mov
imul
push
mov
shr
loopne
and
dec
pop
popa
lcall
aam
iret
fistpl
mov
mov
push
sub
data16
xchg
sub
pop
cmpsl
xor
jp
lods
and
sbb
and
mov
out
adc
mov
jno
inc
push
pop
add
pushf
xchg
dec
sbb
arpl
xchg
pusha
rcrb
mov
mov
lea
stos
xor
cmp
cwtl
repz
movsl
pop
call
iret
jnp
lcall
pop
pop
push
out
mov
aaa
lods
push
lods
popa
mov
cltd
incb
lods
mov
cmp
xorl
sub
sarb
outsb
inc
fsin
mov
mov
and
mov
idivb
push
in
cmpb
and
mov
es
addr16
ds
inc
cmpsl
adc
jp
insl
inc
insb
push
xchg
fmul
lods
sbb
sub
das
add
xchg
in
decl
push
imul
loope
push
dec
xor
test
xor
ja
andl
add
sub
mov
test
jae
pusha
rorb
testl
bound
movsl
pop
pop
adc
addr16
repz
ss
ds
les
fwait
addb
fbstp
and
or
mov
sub
dec
loop
mov
lret
mov
sub
pushf
aad
push
pop
les
ja
fcomi
mov
sbb
outsl
imul
ror
cmc
push
mov
les
xchg
ret
xchg
xchg
jns
xorb
and
and
adc
std
inc
sub
jne
dec
mov
cmp
add
test
jno
test
sub
dec
pop
xchg
and
pop
cmp
jle
push
xor
push
pop
les
xchg
inc
xlat
ja
dec
pop
rcrl
call
imul
or
inc
aas
jmp
lods
movsb
outsl
or
pop
dec
add
jmp
out
dec
or
int
loopne
mov
add
pop
xchg
jae
in
jb
sbb
cmp
jo
mov
mov
xchg
lock
mov
xchg
popa
repz
je
dec
lret
inc
push
adc
sbb
inc
or
in
add
pop
or
sti
repz
xchg
add
xor
jb
cs
pop
push
lea
jg
pop
scas
mov
outsl
enter
adc
jl
jecxz
push
jp
ljmp
inc
int
cmpsb
fs
xchg
dec
in
loop
data16
sbb
es
push
ljmp
jo
adc
adc
adc
arpl
les
mov
ss
add
mov
mov
decb
mov
orl
sub
fnsave
in
in
cmp
out
sub
mov
bnd
aam
adc
inc
cmc
shlb
xchg
mov
cmp
push
dec
les
sbb
mov
pop
popf
adc
push
push
mov
sbb
jne
push
scas
dec
stos
dec
cmpsb
inc
lahf
std
push
sbb
or
or
out
outsb
lahf
lea
aaa
push
scas
cmpsb
cs
cs
out
adc
adc
ja
ljmp
mov
sub
xchg
call
pop
cs
inc
rclb
inc
in
int
out
inc
lods
dec
mov
mov
inc
or
aaa
clc
mov
gs
pop
sti
arpl
pop
imulb
xor
dec
into
sub
xor
xor
pop
aas
orb
push
out
cmp
movsl
out
daa
pop
pop
aaa
push
hlt
nop
popl
sbb
enter
std
aaa
fldt
out
psrlq
jge
dec
cld
iret
stc
imulb
gs
push
lock
test
aad
jl
and
and
pusha
je
and
pusha
mov
fsubs
dec
imul
xor
test
scas
or
pop
xchg
mov
push
mov
fists
int
adc
pop
lds
jno
lods
testl
dec
daa
inc
inc
divb
lods
fs
lds
push
dec
and
aaa
inc
adc
testb
into
or
xchg
fistl
or
int
pop
mov
dec
data16
mov
int
sbb
int
pop
cmp
pop
inc
push
repz
push
sbb
add
dec
xor
cmc
pop
cltd
and
insb
sub
lds
cmp
pusha
in
xchg
fisubl
mov
enter
scas
pop
aad
popf
jbe
lahf
mov
pop
push
mov
movl
push
addr16
bound
fldz
ja
add
dec
mov
repnz
mov
or
xchg
fwait
xor
in
test
aad
insl
pushf
out
cwtl
lods
in
or
or
dec
or
add
pop
lds
and
shlb
dec
movsb
aad
daa
mov
in
outsb
and
jle
lahf
mov
push
aad
inc
mov
cmc
test
rol
cltd
stc
loope
iret
and
cld
stc
or
int
pop
les
dec
jmp
scas
add
outsb
sub
imul
dec
xor
jnp
push
dec
dec
sbb
mov
loope
pop
pop
push
jnp
notl
jo
dec
popf
xor
loope
lods
les
push
inc
cmc
add
loope
call
xor
lea
out
sbb
inc
adc
outsl
mov
fldcw
pushf
repnz
ret
arpl
inc
jae
adc
jno
adc
push
sbb
push
hlt
cwtl
or
jmp
pop
pop
mov
add
pusha
jbe
shl
sub
sub
scas
str
pusha
insb
sub
int
icebp
or
pop
das
outsl
fistpll
fs
fidivrl
mov
mov
inc
inc
and
dec
mov
scas
pop
sub
lds
stc
bound
sarb
out
jne
ljmp
cmpsl
inc
cld
out
mov
lods
mov
std
subb
dec
xchg
outsb
xor
cmc
cwtd
sbb
push
stc
or
int
adc
inc
les
pop
dec
adcl
cld
jecxz
ret
xchg
inc
jg
push
jb
mov
and
mov
add
dec
pop
mov
sub
rorb
cli
test
fsubrl
xchg
std
push
lea
neg
inc
aad
jo
sub
into
fs
push
pushf
lods
stos
leave
inc
sbb
das
adc
push
enter
gs
imul
shrb
stc
push
daa
add
mov
andb
mov
cmp
and
into
jbe
ja
sbb
cmp
outsl
mov
xchg
movsb
subb
lahf
adc
adc
xchg
mov
inc
adc
adc
dec
xchg
pop
ficoml
or
into
add
cmp
insl
test
sub
mov
cli
dec
xlat
repnz
adc
js
icebp
xlat
ljmp
and
jle
adc
in
adc
push
sbb
addb
ret
popl
mov
lea
pop
push
xor
test
mov
int3
jg,pn
and
int
test
push
loopne
mov
pop
ds
add
lea
xor
insb
popa
mov
adc
and
loope
addl
popl
jae
aam
insl
inc
popf
adc
fistpll
mov
dec
stc
adc
out
pop
pushf
or
pop
into
mov
ljmp
adc
xor
push
mov
sahf
movsl
adc
and
xchg
mov
sahf
mov
xchg
mov
idiv
aas
testb
mov
dec
dec
inc
pop
mov
jl
or
test
pushf
popf
inc
idivl
gs
mov
cmp
scas
andl
call
xchg
push
push
jo
scas
mov
cmp
into
jnp
cwtl
add
push
std
pop
sbb
sbb
sbb
jp
cmp
push
jns
popa
xchg
add
cmp
lock
stos
xlat
xor
dec
cmp
pushf
adc
mov
popf
mov
cmp
inc
out
in
cmpsb
sub
jnp
mov
adc
pop
jae
pushf
xchg
mov
jbe
dec
jb
in
dec
mov
data16
mov
cli
push
cmp
nop
xor
addb
inc
cmp
addl
sahf
push
out
push
stos
into
mov
loopne
xlat
jno
lcall
and
add
iret
inc
pop
jae
jg
ljmp
dec
js
scas
mov
dec
insl
mov
out
dec
mov
sub
daa
push
or
ja
pop
push
sbb
cli
inc
das
mov
cmp
sahf
sbbb
popa
dec
push
dec
pop
enter
aas
loope
xchg
pusha
cld
inc
jecxz
roll
mov
divl
push
mov
mov
xchg
jo
jne
adc
dec
stc
fiadds
jg
jecxz
cltd
ljmp
xchg
mov
ror
or
icebp
std
cmp
inc
sub
sub
std
jno
xor
mov
insl
push
push
mov
dec
adc
popa
out
hlt
adc
das
stos
outsb
and
in
cmp
xchg
iret
arpl
push
or
xor
imull
dec
bound
das
in
jns
xchg
xchg
imul
jmp
lret
out
movsl
hlt
xchg
push
mov
js,pn
mov
not
push
cmp
or
and
jp
inc
sub
test
cs
sub
inc
cmpsb
inc
jae
xchg
lcall
int
jno
mov
xchg
pusha
adc
dec
hlt
inc
adc
ret
stc
test
sbb
sub
movsl
xor
xlat
sbb
or
add
cli
pop
mov
cmp
out
sbb
mov
xchg
xchg
push
inc
add
jbe
xchg
cli
inc
dec
mov
testb
out
and
in
test
xor
mov
into
push
sbb
mov
mov
cli
pop
hlt
add
stc
mov
adcb
mov
inc
xor
or
mov
leave
pop
jo
out
cmp
incb
fwait
lcall
jl,pt
sub
push
mov
sbb
fdivrs
dec
pop
or
sub
xchg
add
xchg
mov
loope
data16
mov
push
bound
jb
push
dec
jmp
cli
mov
push
enter
pop
adc
fstps
mov
xchg
mov
xchg
dec
mov
in
mov
into
jmp
clc
ja
scas
daa
in
add
push
outsb
dec
mov
outsb
cli
jae
mov
xchg
sahf
dec
les
pop
push
movsl
mov
or
inc
inc
pop
enter
xlat
cmovnp
mov
jo
ljmp
out
je
or
jmp
inc
call
pop
in
mov
mov
ja
and
jno
in
in
lret
es
out
mov
insb
test
mov
cmp
lcall
pop
mov
push
pop
pmaddwd
and
in
mov
inc
dec
inc
lods
cmpsb
mov
pop
iret
jp
ret
sub
or
sub
push
xchg
int3
in
push
fs
out
add
xor
mov
xor
add
dec
imul
inc
inc
cld
lea
sbb
mov
fstl
hlt
cmp
lret
inc
cld
mov
movd
and
and
xor
push
call
push
les
aad
mov
int3
mov
movsb
dec
outsl
fsubs
push
sbb
cs
sti
cmpsb
xor
insl
fsin
inc
push
ds
mov
in
add
add
push
mov
inc
push
add
fstl
stos
push
movsl
fcoms
stc
xor
or
dec
test
add
lds
repz
pop
mov
and
xlat
jo
xchg
cld
or
andl
pop
shrb
xchg
push
lret
xor
movsl
dec
inc
or
or
xchg
mov
xchg
stos
mov
dec
fldt
mov
push
lods
lret
bnd
dec
inc
outsb
jns
lret
repnz
adc
or
jmp
adc
negl
pop
imul
pusha
pop
add
fdivs
rcrl
xlat
dec
sub
ret
adc
dec
dec
cs
and
dec
ret
xchg
fwait
call
arpl
daa
addb
mov
lock
push
movl
dec
lds
icebp
cmp
inc
jl
movsb
filds
sbb
in
cmc
mov
jns
dec
roll
stc
mov
push
add
adc
jl
xchg
lods
cli
pop
sub
cltd
clc
inc
cmp
mov
push
cmp
pusha
xchg
mov
in
adc
cmpsb
or
loope
inc
and
pop
pop
pusha
sbb
out
in
pop
mov
push
jmp
fcoms
mov
notb
movsb
mov
dec
enter
lea
popf
dec
jle
xchg
dec
mov
and
adc
xchg
je
cmpsl
rclb
jns
mov
into
sbb
push
sbb
pushf
les
cmc
dec
lods
adc
sbb
loope
out
xor
mov
or
jle
outsb
mov
fisubrl
loop
or
inc
test
push
lods
in
sub
enter
xlat
in
inc
pop
aas
cmp
dec
cmp
call
push
sbbb
adc
ljmp
adc
outsb
lock
mov
jae
cwtl
xor
jb
pop
clc
mov
call
add
or
mov
jns
popf
je
sbb
sub
jnp
ja
pushf
out
out
or
out
cmp
mov
dec
cli
mov
in
inc
mov
push
jle
push
and
mov
iret
xchg
es
xor
sub
xchg
loop
outsb
mov
jno
xor
jne
in
shll
cs
push
push
lret
jmp
or
mov
jl
lods
dec
into
pop
dec
xchg
lods
in
mov
sti
add
into
jg
jae
mov
lods
or
mov
mov
je
lock
add
and
stc
sidtl
adc
or
adc
xadd
mov
adc
or
mov
cli
ds
stos
add
adc
outsl
pop
dec
cs
into
cmp
fisttps
inc
jo
add
out
ret
xlat
push
mov
or
movsb
dec
das
adc
lds
sbb
push
cmp
inc
sub
outsl
fidivl
or
mov
xor
dec
dec
enter
aas
xor
dec
ret
and
cmc
lods
or
inc
rorb
icebp
push
dec
stos
inc
adc
adc
sbb
adc
lcall
jb
loope
cld
inc
mov
push
inc
jns
adc
inc
mov
sub
outsb
mov
pop
adc
mov
insb
cmp
pushf
icebp
push
icebp
or
call
in
sub
test
fcoml
sbb
and
repz
sbb
jne
cld
mov
mov
sti
icebp
lcall
xor
pushf
fisubs
or
xor
je
loopne
fs
and
cmp
sub
inc
push
mov
dec
xor
test
not
repnz
addr16
jecxz
mov
dec
dec
pop
sti
dec
lds
pop
mov
test
shrl
add
jo
in
push
inc
push
in
mov
pop
sub
idivb
xchg
jp
leave
cmpsl
adc
sub
adc
cmpsb
jmp
add
call
inc
jbe
sub
inc
xchg
xchg
ljmp
ficoms
shrb
shll
push
mov
dec
cmp
ljmp
or
jp
in
stos
dec
cld
mov
jo
push
jmp
or
sbb
in
imul
mov
mov
mov
imul
adc
mov
xor
shlb
mov
xchg
add
dec
aad
and
sbb
mov
fs
dec
xorb
sub
das
movsb
cwtl
int
cs
movsl
imul
cmp
mov
inc
push
das
imul
das
sub
xchg
jnp
and
push
fistpll
imul
xchg
dec
les
inc
mov
jae
jno
jle
push
inc
mov
pop
sti
push
shll
xor
movsb
jbe
mov
subl
and
xchg
jno
in
addb
push
dec
sbbl
loope
add
enter
cmp
test
jg
jmp
out
add
pop
add
roll
out
and
in
add
dec
mov
jl
push
jb
repz
sti
and
iret
popa
xchg
sbb
push
cmpsb
or
jo
xor
hlt
mov
daa
movsl
call
push
data16
fwait
add
inc
gs
ret
loopne
push
dec
mov
jmp
dec
mov
negl
and
push
test
cwtl
loope
out
shlb
pop
scas
jp
lret
aad
in
sub
and
jg
in
push
lds
outsb
xchg
gs
sub
and
scas
xchg
movl
lret
xchg
jne
out
cmp
shlb
lahf
lret
inc
test
test
sar
add
movsb
mov
add
fs
jne
or
dec
push
inc
shl
fstps
push
pop
xchg
add
xchg
insb
push
pop
enter
in
nop
xchg
dec
xlat
mov
dec
call
shr
scas
loop
cmp
imul
mov
and
or
pop
call
xchg
push
cs
inc
std
or
sub
jp
mov
clc
mov
mov
push
pop
and
and
inc
cmpsb
aad
add
dec
push
add
cmp
add
dec
sbb
aam
mov
sahf
mov
mov
loopne
aaa
sbb
cmp
sbb
lds
lods
jecxz
xchg
mov
insl
lds
add
lds
jo
daa
lods
sti
sbb
mov
cltd
iret
cs
fistpll
mov
stos
in
adc
arpl
jo
jg
dec
test
mov
sbb
scas
in
xor
cmp
bound
call
and
mov
not
mov
inc
mov
stos
adc
leave
cmp
pop
dec
pop
lods
inc
mov
jmp
pop
xchg
dec
out
mov
ds
jbe
dec
dec
push
xor
into
sub
loopne
cmp
subb
mov
ret
mov
sahf
mov
aaa
int3
pushf
mov
nop
or
clc
repz
fstpl
das
mov
movlps
loop
ljmp
or
fsubrs
leave
imul
mov
cld
xorb
mov
cmpsb
repz
imull
sub
push
addl
inc
js
jle
mov
popa
xchg
js
jmp
push
mov
in
test
sub
or
mov
mov
mov
xchg
sbb
enter
jnp
xor
stos
mov
cmp
pushf
in
in
ds
sub
sub
sbb
xor
and
cmc
and
mov
popf
leave
mov
add
test
out
es
xor
hlt
scas
jno
jp
mov
in
daa
sbb
pop
push
call
aas
out
jmp
insl
test
push
cli
out
xchg
test
sbb
fisubs
jecxz
repnz
cli
xchg
in
jmp
xchg
fldl
lods
cmp
std
mov
or
rorb
dec
jl
in
ja
scas
mov
loopne
cld
mov
repz
mov
jb
jns
mov
movd
cmpb
shll
dec
push
inc
lahf
mov
mov
push
inc
pop
arpl
inc
mov
or
mov
inc
cs
fwait
cmp
outsl
mov
dec
jle
idiv
mov
dec
adc
std
sub
pop
je
inc
or
mov
and
adc
addr16
adc
add
xor
cld
pop
and
dec
pop
xor
inc
xchg
xor
insl
popaw
aam
add
stc
in
in
inc
movsl
ljmp
loope
push
cmpsl
cmpsl
or
bound
enter
xchg
das
mov
lds
out
ret
test
inc
lods
jb
push
add
adc
xchg
xchg
int
cmp
int
push
cmp
popf
pop
sti
xor
inc
xlat
pop
test
jo
push
push
cmp
cmp
popf
jae
adc
add
es
xchg
loop
pop
push
sahf
insb
ss
fmull
cmp
lods
jb
bound
mov
sahf
imul
mov
out
pop
push
ljmp
and
movsl
add
add
pop
inc
in
push
bndstx
pusha
lock
jae
into
sub
andb
loope
hlt
lods
cmp
lds
xor
xchg
sbb
xchg
in
xlat
push
and
popf
cmp
adc
or
xchg
mov
adc
dec
fnsave
push
inc
gs
cld
pop
jo
inc
ljmp
notb
pop
gs
xlat
add
out
fcomi
rcrl
mov
cmc
mov
or
test
and
push
xchg
push
decl
or
push
out
int
mov
or
insl
cmp
icebp
jo
daa
aam
xchg
das
imul
and
adc
sub
aaa
or
adc
es
cs
in
jbe
sub
add
sub
xchg
bound
jo
test
imull
imul
mov
andb
inc
cmc
push
jo
push
jge
rorl
cmpsl
pand
pop
mov
out
idivb
xor
cli
je
mov
stos
dec
outsb
xchg
cmp
fmull
xchg
test
fnstcw
or
imul
push
add
xchg
mov
add
xchg
fiadds
sahf
adc
pop
sbb
inc
xor
push
mov
roll
xor
jbe
or
push
or
arpl
inc
or
mov
mov
mov
hlt
out
insl
push
xlat
sti
mov
jb
inc
data16
mov
mov
sbb
and
jp
push
imul
mov
lods
xor
push
scas
or
inc
loope
sub
loope
repz
pop
fidivs
mov
pop
stc
cmp
ja
lods
mov
bnd
out
cli
sub
xor
aaa
inc
decb
sub
mov
popa
and
mov
out
push
xchg
dec
mov
roll
and
aad
lea
and
shll
sub
push
lods
int
insb
fldcw
rcrl
pop
lods
and
cltd
cmp
xor
gs
lds
cltd
cmp
popa
pop
jae
pop
and
aaa
mov
ret
lods
icebp
das
or
dec
test
xchg
mov
jmp
sbb
cmp
or
xchg
aad
cltd
mov
lea
xchg
or
dec
ja
pop
loope
sub
imul
lods
in
xor
jno
cwtl
movsb
shr
gs
xchg
lahf
mov
sarl
imul
pushf
pushf
test
xor
shll
xor
int
xor
sti
xchg
mov
popf
jmp
xor
shrl
sbb
andl
test
pop
push
divb
in
out
jne
jb
jb
add
sub
dec
xlat
push
dec
push
je
aas
xor
fwait
sub
push
out
mov
nop
and
push
dec
push
nop
inc
pop
rcrb
out
stos
andb
inc
pop
sub
or
sbb
jbe
adc
cmpl
pop
sub
shll
pop
and
push
fisttpll
mov
enter
mov
push
out
clc
clc
into
sub
stos
xor
inc
test
and
add
push
pop
or
and
call
pop
inc
testl
xchg
ret
mov
repnz
and
cmp
stc
xchg
and
jns
loopne
clc
cmpsl
xchg
lods
jo
fstl
jbe
div
out
std
or
popa
dec
mov
adc
add
icebp
and
scas
jb
xor
std
xchg
mov
aam
lahf
scas
rcrb
outsl
popa
pop
inc
out
fwait
jmp
cmp
adc
xchg
shll
cmp
pop
in
inc
mov
or
mov
xchg
icebp
pop
cmp
fmuls
jge
test
out
ret
ret
xor
ja
jecxz
push
push
sub
in
or
clc
out
and
dec
sahf
jecxz
sub
add
xor
jge
sub
cmp
push
inc
mov
push
push
fs
jb
mov
repz
jne
lahf
push
cmp
mov
pop
mov
pop
fstp
mov
fwait
cmp
in
in
ficomps
das
pop
cmpsb
inc
popf
ds
iret
sahf
mov
dec
adc
popa
cmp
pop
stos
lods
mov
xchg
jmp
add
in
mov
xor
xorb
and
repnz
in
or
add
insl
aas
lods
lds
clc
ljmp
aaa
pop
pop
and
jne
mov
add
add
fdivl
mov
pop
xchg
inc
mov
stos
movsb
lahf
and
clc
add
stc
mov
flds
fildll
test
jbe
adc
push
cmpl
std
mov
je
dec
jne
and
sub
push
ret
lods
sub
xor
gs
pop
pop
jne
xchg
pusha
mov
in
push
cmpl
sar
pop
in
std
cmpb
lret
jo
shl
test
bound
sarl
xchg
push
cmp
jg
stos
and
lods
stc
mov
ja
or
in
loop
iret
dec
sahf
push
shl
sub
out
cmp
mov
jl
pop
loope
or
loope
and
cmp
out
dec
inc
xchg
bound
cwtl
or
shrl
pop
imul
inc
mov
imul
mov
pop
push
mov
xor
and
cmc
pop
repnz
insl
das
sahf
push
xchg
lret
xchg
loop
fxtract
sub
jmp
xchg
or
mov
xchg
into
mov
hlt
mov
nop
outsb
cltd
jmp
add
in
fldcw
push
fs
cmp
outsb
add
adc
mov
iret
jno
inc
fsubrl
sub
pusha
cmp
dec
mov
mov
loopne
arpl
and
xchg
fcomps
mov
sub
ds
mov
rolb
and
shlb
push
out
aas
outsl
hlt
idivb
mov
int
test
inc
jecxz
icebp
call
test
sahf
pop
add
cs
and
dec
mov
push
dec
in
add
add
fisubrl
push
add
cmp
mov
cli
pop
mov
fists
mov
push
push
cmp
aam
scas
push
in
subb
inc
inc
ss
push
arpl
repnz
or
iret
add
fsts
mov
cmc
push
aad
pushf
fnstcw
stc
ss
dec
jb
das
add
mov
jnp
fdivr
leave
lock
jo
aaa
mov
sub
adc
mov
lcall
ret
jge
xchg
aam
or
stc
test
and
imul
adc
push
shrb
pop
aam
pop
int
or
repnz
sbb
xor
fadds
mov
pop
scas
aaa
outsb
pop
or
sub
movsb
xlat
aas
pusha
lea
lock
xor
out
idiv
addr16
jge
nop
repz
repz
addr16
adc
addr16
mov
add
push
sbb
aaa
jecxz
mov
jne
jb
mov
inc
in
cmpsl
xchg
test
pop
fwait
xor
scas
push
insb
lret
mov
add
out
out
sbb
push
pop
push
mov
pop
xchg
sub
sbb
mov
sub
shll
jecxz
lea
aad
sahf
push
inc
jo
mov
fdivrs
lods
sarl
out
hlt
mov
mov
push
mov
gs
aad
push
adc
aad
sbb
push
mov
popf
notb
mov
call
iret
mov
in
out
ja
push
in
dec
adc
adc
xchg
or
int
stos
dec
aaa
imul
add
push
loop
enter
pusha
rcrl
jle
adc
lds
into
stos
xor
sub
mov
sub
inc
nop
add
jno
lret
pusha
add
enter
sti
mov
lods
dec
xor
andb
pop
push
add
test
dec
pop
in
ds
xor
ja
ja
clc
gs
data16
pop
sbbl
ja
push
or
notl
jg
adcb
lock
pusha
sub
mov
mov
mov
adc
xor
adc
scas
cmpsl
add
faddl
dec
cmp
xor
push
and
nop
outsl
mov
sbb
in
xchg
inc
aad
or
pop
nop
xor
inc
dec
inc
cmp
and
or
xchg
add
mov
stc
jb
adc
push
xchg
push
sub
jge
adc
daa
pop
lods
int3
jmp
mov
inc
pop
cmpsb
pop
repz
popa
fldl
push
addl
imul
ret
xchg
imul
sbb
pop
xchg
outsl
mov
push
cmp
repz
fldcw
cmpsl
push
mov
mov
adc
pand
push
por
shll
xchg
dec
out
dec
adcb
fcoms
stos
insb
lds
iret
inc
repz
ret
or
dec
hlt
push
mov
fldenv
add
and
inc
mov
cmovg
stc
and
inc
or
fists
mov
inc
cld
inc
inc
ret
in
cmpsl
aad
xchg
dec
adc
outsb
aas
mov
sbbl
or
push
dec
push
push
ljmp
jo
cmp
jae
mov
mov
sbb
inc
dec
inc
push
add
iret
dec
aad
int
pop
movsl
leave
push
dec
mov
mov
inc
repnz
insb
mov
cmpsl
dec
xor
gs
push
add
adc
test
dec
cmc
ds
ljmp
cmp
inc
mov
mov
or
ds
xor
adc
cld
pop
cmp
les
out
in
rcll
push
cmc
jnp
jg
xchg
xchg
inc
xchg
or
push
jbe
test
sub
andb
jecxz
jmp
fst
inc
aam
ljmp
jb
mov
pop
in
stos
mov
mov
out
test
in
outsb
push
sbb
adc
repnz
mov
jp
lock
lret
nop
xchg
mov
stc
inc
mov
cmc
ret
sahf
lods
sbb
add
aaa
movsl
test
or
int3
sbb
cmpsb
cmpsl
sbb
mov
notl
icebp
rorl
adc
jl
push
inc
mov
loopne
scas
loop
fildl
adc
dec
push
cwtl
int
lds
ret
scas
mov
in
loopne
pop
in
xor
mov
out
enter
jno
sbb
push
push
and
xchg
fisubrl
mov
xchg
pushf
push
les
aaa
mov
add
add
push
push
push
push
clc
lds
push
lock
cli
dec
in
push
inc
add
mov
enter
jle
stc
cwtl
out
sbb
ds
inc
pop
fcomi
mov
push
or
push
lcall
imul
les
into
idiv
mov
loop
leave
fneni(8087
push
cmpsl
pop
mov
outsl
fsubr
cmp
sub
ljmp
adc
push
inc
shrb
idivl
push
pushf
lods
fildl
loopne
enter
jg
ret
cmc
es
jne
leave
xor
and
cmp
js
mov
mov
mov
arpl
adc
je
mov
fisubl
movl
or
xor
jnp
cld
rcrl
in
imul
inc
pop
shrl
lds
nop
fldcw
idivb
mov
push
loopne
into
nop
iret
cmp
and
pop
mov
adc
xchg
movsb
rol
mov
pop
icebp
ud0
dec
cmpsl
mulb
push
or
add
mov
idivl
lahf
mov
fldenv
xchg
push
adc
dec
jae
jecxz
inc
lea
dec
sbb
xchg
lock
inc
pop
pop
pusha
lock
in
js
clc
enter
adc
inc
nop
dec
ljmp
push
aad
xchg
sub
push
or
movsl
mov
mov
lahf
movsl
je
push
push
scas
sbb
mov
xor
mov
or
in
cmp
xchg
pop
jmp
push
lret
adc
out
adc
sbb
push
pop
popl
push
push
stos
aaa
cmp
loopne
xor
or
push
cld
mov
pop
daa
and
lahf
sbb
lods
mov
and
shr
ret
outsl
pop
jae
sti
icebp
scas
nop
jnp
mov
incl
mov
sbb
lods
or
lods
pop
push
and
lods
xchg
xorl
jmp
push
stc
push
mov
mov
in
nop
cmp
in
mov
ret
adc
test
addl
inc
xchg
test
inc
push
sub
popa
xor
les
testl
mov
mov
das
mov
sub
mul
push
jno
movsl
push
pushf
push
push
das
lods
out
and
clc
xchg
xchg
imul
icebp
popa
pop
push
orps
ret
xchg
jb
pop
loope
je
in
adc
dec
push
cmp
ret
and
lret
out
mov
cmp
cmpsb
or
fbld
out
lcall
inc
outsb
add
jae
inc
shll
arpl
and
hlt
xchg
cmp
pop
sbb
out
xchg
mov
aas
insl
and
jmp
mov
inc
or
addr16
adc
dec
pop
mov
dec
pop
inc
out
insl
into
adc
add
push
or
jbe
gs
inc
cli
test
inc
cmpsb
dec
push
add
jns
xchg
pop
dec
mov
into
es
jo
mov
std
out
xchg
mov
enter
ljmp
and
shlb
pop
insb
adc
mov
adc
and
enter
or
pop
jecxz
dec
cltd
scas
pop
jnp
fildl
or
jae
push
adc
dec
and
mov
fnsave
push
insl
inc
add
mov
xchg
inc
loop
sbb
movswl
xchg
inc
into
add
inc
sub
or
sbb
out
jle
push
pop
mov
mov
adc
jbe
gs
cmc
jns
out
xor
jmp
cmp
dec
test
inc
xchg
sub
loop
pop
dec
xor
xor
xor
pop
or
xchg
or
pop
mov
lds
push
cld
sarl
xor
loopne
in
and
sbb
inc
xchg
mov
xor
or
pop
xchg
leave
sbb
and
sbb
es
mov
sbb
push
lret
in
mov
test
mov
cmp
cmp
cli
pop
test
add
leave
test
test
dec
add
test
out
scas
xchg
sbb
fiadds
push
adc
enter
mov
dec
mov
mov
lods
xchg
jo
dec
cmpb
or
pop
xchg
repz
add
cmp
inc
sub
add
mov
in
xchg
outsl
ret
loop
xchg
cltd
imul
test
cmpsl
dec
cld
push
cmp
pop
test
jb
test
push
mov
repnz
xchg
adc
nop
mov
ret
jmp
insl
add
outsl
iret
cmp
mov
pop
xchg
or
sti
addb
fnclex
imul
repnz
mov
iret
and
out
adc
mov
das
aaa
pop
int
dec
add
repnz
inc
loope
add
or
mov
pop
test
repz
adc
test
out
sub
cmp
mov
cmp
in
or
inc
pop
mov
add
mov
mov
filds
int3
jecxz
lods
cli
rorb
aaa
mov
dec
jle
mov
mov
cwtl
sti
lods
mov
xchg
enter
jecxz
lods
push
add
ds
push
inc
xchg
cmp
add
iret
fistl
das
sti
push
popa
mov
lds
mov
sbb
inc
jge
pop
js
negb
call
dec
jg
jmp
rep
cmp
fstl
push
push
push
test
bound
rcl
orb
fsubl
or
dec
fisubrl
mov
je
jg
test
in
push
andl
mov
in
aam
js
clc
push
push
add
xlat
lods
xlat
mov
mov
push
sahf
lahf
adc
push
and
mov
push
loopne
mov
and
ret
imul
jg
jmp
jne
lds
lods
fimull
call
add
mov
scas
out
popf
xchg
aam
int
mull
push
xor
cmc
jns
dec
jno
repz
dec
je
pop
fcmove
roll
aas
cmp
cmc
stos
ds
rcrl
rcl
push
sub
clc
mov
push
push
dec
pop
out
mov
xor
xchg
loop
push
ja
pop
and
scas
arpl
jno
imul
test
dec
jmp
dec
imul
mov
push
xlat
sbb
shr
sub
out
cmpsl
push
inc
xchg
ja
push
out
xchg
int
cmpsl
jl
cmp
in
dec
lods
in
in
jp
or
ljmp
xlat
ljmp
neg
mov
sbb
prefetcht1
push
jle
lds
jae
inc
mov
lcall
or
xor
mov
fidivl
xchg
aaa
jae
push
out
fldenv
imul
cmpsl
bound
pop
mov
outsb
std
sbb
into
lock
mov
mov
mov
inc
insl
jmp
and
dec
mov
ret
cmp
push
aad
cli
mulb
cs
push
and
dec
jns
cli
lods
into
jmp
loopne
inc
xor
sbb
mov
cmp
ja
sub
xorps
add
aas
pop
dec
mov
mov
test
jnp
mov
mov
and
leave
adc
mov
push
push
dec
or
clc
test
or
fcmovb
test
bound
fsubs
dec
inc
sete
mov
cmp
pop
rclb
lahf
in
push
sbb
loop
inc
test
movsb
or
sbb
jo
call
jne
xor
adc
insl
sub
or
in
pop
repz
xchg
mov
xor
mov
pop
add
daa
shl
cmc
cmp
xchg
adc
iret
and
cmp
std
int3
scas
xor
adc
push
nop
pop
xchg
pop
nop
shlb
xor
gs
fisttpl
out
in
loopne
sbb
aad
bound
cmp
mov
mov
jbe
es
dec
sti
addr16
inc
add
cs
mov
pop
ja
repz
aam
dec
inc
aam
sbb
icebp
adc
or
sbb
repz
stc
fnstenv
jns
movsl
jl
mov
out
pop
fst
or
or
mov
jae
loopne
cmp
in
pushf
popf
fstpt
push
dec
xor
inc
int
xchg
xchg
cmp
adc
sub
xchg
adc
cmp
mov
pop
inc
movsb
orb
inc
incl
ljmp
and
addr16
pop
aam
subb
repnz
cmpsl
and
lcall
dec
clc
rol
pop
in
and
add
dec
mov
or
sbb
fstpl
iret
jg
inc
push
xchg
or
pushf
in
jmp
mov
pop
insl
test
sbb
or
pushf
adc
mov
out
lret
push
leave
inc
fists
divl
xor
mov
add
mov
mov
mov
xchg
add
stos
and
icebp
cwtl
mov
rclb
int
jae
mov
pop
insb
mov
sub
imul
and
arpl
push
mul
out
fcomps
ja
test
rcll
mov
shll
orl
xor
push
popa
push
push
aaa
outsl
repnz
jb
pusha
pop
ds
xor
push
imul
sbb
mov
pop
jno
out
mov
sub
lods
mov
or
mov
fildll
mov
lds
pop
push
xchg
fdiv
mov
mov
mov
push
popf
iret
jns,pt
sbb
push
shll
mov
push
push
sub
add
jge
push
xchg
mov
add
movsb
sub
mov
pop
push
push
adc
adc
inc
lods
in
fsubl
add
aam
push
orb
push
lret
add
subl
push
push
push
dec
jne
in
andl
inc
in
push
mov
mov
dec
je
xor
jnp
jecxz
sub
lahf
test
call
pop
lods
push
idiv
inc
or
push
pop
mov
mov
xchg
push
add
data16
or
sbb
outsl
out
adcb
stos
pushf
sti
pop
pusha
dec
cmc
dec
cmp
dec
test
jl
add
arpl
in
mov
mov
mov
mov
stos
cmpsl
add
cwtl
repnz
jecxz
lock
pop
jecxz
outsl
adc
mov
push
out
mov
sbb
inc
cmc
add
inc
inc
inc
scas
rcrl
add
sub
fisttpl
dec
cmp
pop
adcb
fisttpl
pop
cmc
icebp
into
add
test
call
insb
jge
mov
cmc
add
pop
mov
aaa
dec
out
push
cmpsb
cli
push
adc
daa
jmp
sub
sub
hlt
adc
movhps
or
or
dec
dec
inc
inc
pop
sbb
shl
or
lret
mov
sub
loopne
xchg
in
adc
jno
mov
mov
cmp
mov
dec
scas
cmp
clc
es
mov
mov
pop
lock
hlt
out
xor
loopne
jg
fstps
outsl
and
adc
data16
inc
je
lcall
adc
lcall
pushf
dec
mov
or
cmp
adc
sbb
and
sti
out
scas
jle
push
sbb
push
rclb
pop
and
sub
call
icebp
addr16
fsub
push
pop
cmp
fwait
movsl
or
mov
mov
mov
movsb
mov
cmp
mov
out
mov
popa
add
int
subb
mov
mov
cmp
push
pop
push
cli
push
mov
aaa
test
clc
push
and
addr16
outsl
sti
dec
push
pop
dec
jne
ja
add
imul
add
shr
adc
loop
add
pop
dec
or
adc
pop
aad
rol
stos
in
pop
xchg
inc
inc
and
push
fdivs
jg
adc
test
mov
out
call
movsl
jecxz
add
xchg
ret
call
mov
or
mov
cmp
mov
mov
pop
divb
mov
mov
sbb
ljmp
sub
imull
or
cmp
jne
sbb
xor
movsb
out
jbe
jmp
orb
repnz
inc
adc
jecxz
adc
int3
cmp
mov
fs
pushf
adc
mov
lods
mov
movsb
cld
ss
pop
ja
out
movb
sbb
push
shll
add
jne
adc
test
pop
test
sbb
lods
add
test
mov
mov
sahf
xorl
mov
subb
out
daa
stos
jl
lds
in
sbb
jmp
push
dec
or
fldl
out
mov
push
xchg
inc
inc
adc
adc
js
push
sub
mov
fiadds
adc
or
mov
sub
enter
out
mov
in
mov
push
pushf
and
jp
fcmovnb
lahf
fbld
sbb
and
es
repnz
fcoms
sub
gs
jo
push
notb
int3
inc
lods
mov
push
nop
fisttps
arpl
popl
mov
push
imulb
sti
sbb
fistpll
les
shll
decl
out
xor
fdivs
mov
mov
mov
aad
daa
push
push
push
idivb
push
cmpsb
cmp
jl
inc
mov
movsl
inc
adc
push
mov
pop
or
xchg
sti
mov
lods
mov
mov
bound
xor
sub
xor
test
icebp
fmuls
cmp
nop
dec
sub
ljmp
lods
lret
frstor
outsb
insb
pop
stos
jle
ret
mov
sbbb
stos
adc
aaa
inc
mov
popa
inc
es
adc
enter
pusha
imul
sub
push
dec
cmpsl
rorl
mov
lret
cmp
jno
out
insb
data16
scas
imul
in
and
lods
pop
sbbb
jnp
cmp
pop
and
mov
cmp
jne
pop
sub
mov
jae
into
mov
mov
xchg
xchg
sub
insl
push
pop
test
aad
pop
cmp
cmpsb
or
xchg
ja
mov
push
and
xchg
push
aad
lcall
xchg
adc
addr16
adc
jnp
aad
jnp
lret
jp
inc
mov
or
stos
out
popf
mov
xor
icebp
test
mov
jns
call
pop
push
test
loop
push
shlb
or
jns
das
sti
icebp
or
les
mov
cmp
ja
pop
xor
addb
in
test
clc
gs
mov
mov
sub
push
fsubrl
mov
push
popa
or
push
lock
and
push
sub
jge
rorl
scas
mov
call
inc
add
sbb
xor
jne
cwtl
test
es
sub
scas
xchg
and
jl
sub
pushf
data16
fisubrl
stc
dec
mov
jmp
pop
incb
cmp
gs
and
sbb
shll
sbbb
sbb
out
out
movsl
xor
adc
repnz
push
xor
out
aam
in
sub
lock
and
mov
mov
cmpsb
mov
test
cmc
imul
push
or
add
sub
sub
jb
add
cmp
and
push
shll
andb
push
jge
pop
mov
cmp
fwait
pop
or
jp
test
sub
or
xor
stc
and
imulb
int3
loop
fsub
jecxz
insl
out
sub
jno
je
cmp
or
imull
or
sbb
jg
xchg
je
lret
aad
in
insl
sbb
fcomi
adc
sbb
xor
cmpb
int3
pop
inc
aaa
mov
aam
in
pop
and
imulb
int3
pop
add
xor
push
and
add
push
shll
dec
stc
filds
fcmove
movsb
xor
push
xchg
dec
cmp
jbe
xchg
aad
enter
fildll
enter
and
lods
jg
cmpb
outsl
arpl
aas
shlb
imul
jmp
test
cmp
bound
xor
push
les
fucomip
or
push
fbld
stc
xor
dec
out
lods
xor
stos
insl
sub
jno
aam
sub
loop
pushf
xor
sti
sbb
mov
mov
fnstsw
sub
out
xchg
jno
es
push
test
scas
xor
rorl
sub
adcb
dec
sbb
in
sahf
adc
mov
aas
cmp
scas
xor
pop
aad
ficomps
movsb
jg
addl
fists
xor
xchg
lret
lea
lahf
xor
xchg
jg
es
jg
out
stos
es
xor
jl
sub
mov
ljmp
int
adc
adc
mov
mov
loopne
and
and
xor
sti
adc
mov
sub
shrb
lea
dec
push
movsb
mov
dec
fnstenv
in
mov
xor
in
movzwl
out
or
lret
mov
bound
xor
dec
iret
jbe
xorb
addr16
jp
loop
mov
xor
decl
and
in
dec
push
mov
mov
jg
adc
adc
jns
popf
outsb
lods
aas
popf
mov
dec
mov
test
xchg
cmc
fnstsw
xor
and
ret
xchg
push
cmp
adc
out
rorl
mov
imul
inc
imul
sarb
lret
sahf
push
and
mov
popfw
jns
jne
cmp
mov
ja
sub
aaa
lcall
lea
mov
imul
adc
shrl
sti
mov
dec
push
dec
pushf
pop
xchg
adc
pop
mov
or
pminsw
call
icebp
imul
push
pop
cmp
pop
movsl
or
inc
outsb
mov
les
popa
dec
dec
jmp
iret
xor
stc
jle
xchg
jle
push
divl
and
aad
mov
xor
dec
xlat
jle
int3
xlat
jle
repnz
sbb
mov
pop
pop
popf
lea
loop
push
xor
pop
pop
jae
mov
lret
leave
mov
and
mov
ret
movsb
push
mov
adc
aas
ret
lret
push
leave
test
aam
out
sub
divl
daa
movsl
add
pop
outsl
lods
sbb
xchg
push
add
sbb
inc
cltd
fucomi
jbe
cmp
or
lret
jns
movsl
aaa
xor
shl
push
or
xchg
dec
fistl
das
into
das
and
into
imul
out
inc
les
mov
push
ret
roll
shll
cmp
ljmp
leave
adc
sub
adcl
stos
jle
ret
mov
cltd
sbb
inc
xor
popa
mov
and
push
push
mov
cltd
mov
leave
andb
add
mov
dec
aad
xchg
out
movsb
in
xor
in
push
xchg
jo
shrb
fists
jo
sbb
mov
mov
addb
repz
jo
mov
enter
aas
mov
xor
adc
xchg
dec
sbb
gs
pop
jae
orb
shrb
lret
inc
inc
xchg
lock
xchg
jb
push
imul
and
inc
inc
int3
xor
nop
rorb
sub
fbld
shl
push
arpl
mov
jp
add
push
push
movsb
test
test
nop
push
aad
negb
fldt
test
push
xor
mov
ljmp
in
shrl
xchg
mov
push
lret
pop
cmpsb
pop
ret
jp
pushf
das
gs
sahf
mov
xchg
repz
sub
sbb
inc
mov
cwtl
adc
data16
inc
xor
bound
mov
cmpsl
push
cmp
rcrl
inc
push
lods
sbb
xor
scas
xchg
test
mov
sbb
shl
lock
inc
push
jl
fildl
aam
mov
lret
mov
inc
fucomip
jbe
inc
aas
push
fcoml
pop
and
pop
into
lods
add
and
jo
mov
inc
testb
repz
dec
ret
scas
scas
fimuls
insb
stc
mov
and
jmp
add
cmpsb
ret
jbe
pop
stos
in
les
popf
cltd
add
sti
cmp
and
adc
in
jnp
fdiv
jg
je
pop
mov
dec
ds
shll
xor
pusha
xchg
inc
ja
mov
adc
pushf
pop
lods
mov
sub
loope
xchg
push
addr16
inc
movsl
cmp
adc
loope
inc
shrl
aad
pop
sbb
icebp
fdivr
addr16
roll
fwait
mov
jns
or
lea
pusha
push
inc
cld
aad
mov
and
push
decl
in
adc
push
fwait
mov
mov
adc
mov
add
push
fidivrl
outsl
xor
cltd
mov
cli
mov
jl
out
rorl
gs
js
addr16
sarl
andl
dec
cli
and
cmpsb
mov
jge
push
mov
test
rorb
jg
adc
repz
mov
xchg
mov
outsb
mov
sub
dec
xchg
add
inc
mov
imull
outsl
enter
imul
jmp
mov
loopne
popa
and
push
mov
out
xorb
out
imul
sub
pop
adc
push
mov
adc
and
pushf
push
adc
aaa
xlat
ljmp
outsb
adc
orb
flds
jp
adc
iret
ss
int
or
aam
inc
jmp
mov
cmpsl
push
sbb
movsb
in
test
sbb
jmp
in
sub
daa
add
mov
push
loope
incl
in
loope
jge
lods
addr16
dec
xor
in
aad
or
mov
out
dec
or
cltd
push
in
or
sti
lods
or
sub
out
mov
pop
sti
arpl
jg
fcmovnbe
xchg
mov
shr
inc
add
mov
inc
add
mov
xor
push
in
xor
lods
notl
pop
push
cmc
and
dec
stc
icebp
and
in
data16
scas
xchg
ret
and
std
icebp
dec
jne
rcll
add
cmp
dec
incl
in
loope
jl
push
jo
data16
inc
test
mov
mov
add
sub
cmp
add
push
enter
std
push
out
pop
pop
test
xor
hlt
int
push
xchg
or
mov
or
sub
jne
fstl
data16
cltd
arpl
pop
movsl
pop
lahf
fldenv
outsb
lea
or
mov
xchg
fimuls
xor
sub
sub
in
fisttpl
adc
out
mov
sbb
add
cmp
into
outsl
push
mov
mov
jge
fsincos
enter
mov
addr16
jbe
stos
inc
andb
mov
cmp
scas
sbb
lds
jne
int
pop
outsl
pusha
sub
daa
dec
add
int
xchg
cmc
fnsave
mov
cmc
rclb
or
pop
mov
jbe
lahf
sbb
xlat
push
test
mov
cmc
inc
mov
xor
cmc
sub
pop
xchg
xchg
mov
add
fldenv
adc
fwait
adc
sbb
pop
xchg
inc
mov
pop
fistps
xchg
xchg
lods
or
push
mov
add
aas
and
mov
testb
cwtl
int3
mov
xor
rcrl
mov
xorl
add
xchg
sti
hlt
and
pop
dec
jge
das
pusha
insl
dec
aas
aad
or
js
xchg
push
in
sub
aam
notl
and
or
xchg
xlat
test
cmc
or
push
scas
sbb
lds
jne
int
pop
outsl
pusha
sub
lods
outsb
hlt
scas
mov
jbe
mov
roll
lahf
pushf
push
push
cmc
mov
xchg
iret
sbb
lods
stos
dec
pop
add
jbe
mov
scas
clc
xlat
leave
aad
mov
dec
jne
aaa
xlat
cmp
in
icebp
dec
stc
fisttpll
adc
lea
mov
out
mov
idiv
dec
mov
or
dec
pop
adc
repz
pop
loopne
mov
fdivs
fisubrs
jbe
out
aaa
adc
jno
mov
or
in
or
pop
add
les
icebp
lea
mov
stc
and
aaa
outsl
lahf
mov
jl
test
add
out
stc
shll
sub
pop
dec
sub
test
xor
add
std
scas
pop
fmuls
mov
xorb
popf
mov
dec
das
fnstcw
es
add
popf
roll
test
sbb
leave
jne
mov
add
cmpsb
and
ja
xor
mov
add
xor
loope
lods
cmpsl
jno
popf
push
push
imul
clc
adc
sbb
sbb
sub
add
dec
call
xchg
cmp
stos
fs
inc
add
and
mov
lret
add
fidivrl
add
sbbb
fwait
sub
scas
out
fadd
fisubrl
mov
inc
cld
fsts
clc
mov
adc
cmc
mov
mov
aam
add
aas
lahf
jo
sbb
lret
jno
and
or
dec
sub
mov
adc
mov
subb
rolb
aas
sbb
test
gs
ljmp
and
out
pop
cli
ss
cmp
loopnew
nop
fcomip
mov
imul
add
mov
jae
lret
jno
clc
push
out
ljmp
inc
inc
bound
shll
out
insb
mov
lea
sub
mov
mov
lret
loopne
inc
mov
or
fcomp
pop
int3
add
push
xor
and
adc
cmp
mov
lcall
arpl
lea
cmp
lock
cmp
or
xchg
inc
or
fs
mov
lahf
jmp
fs
xor
cli
rorb
push
mov
adc
aaa
scas
add
fsubl
sub
loopne
rorb
dec
push
ljmp
inc
inc
or
arpl
add
fidivrl
stc
add
out
ret
aad
adc
inc
aam
out
fcomip
sub
fadds
mov
cmpsb
shl
mov
out
cmp
cltd
fisubrl
std
int3
cld
jmp
daa
or
xor
or
addr16
cmp
aam
or
out
out
idivl
or
mov
sbb
loope
orb
mov
mov
push
daa
and
add
fwait
call
mov
inc
sti
mov
pop
and
and
cmpsb
aad
mov
lret
inc
cli
push
out
add
in
xchg
and
inc
call
sub
out
or
jecxz
push
pop
inc
inc
inc
shlb
iret
mov
stos
cmp
or
and
cs
pop
dec
inc
mov
fadds
or
fiaddl
xchg
push
int
out
aas
dec
pop
shrl
stos
int3
cmc
cmp
jl
outsl
xchg
ljmp
fstps
dec
imul
cmp
fs
mov
test
or
mov
mov
xlat
or
mov
loope
out
lods
add
dec
es
adc
inc
rcll
lahf
cmpsb
mov
or
xor
add
jge
and
and
dec
mov
xor
cmp
inc
out
and
ds
jae
lds
js
pop
inc
arpl
idiv
in
adc
mov
sti
mov
and
xlat
inc
cs
loop
mov
inc
xorl
mov
xchg
push
cmp
add
popf
and
mov
in
aad
jae
xchg
push
jae
push
push
in
mov
xchg
loop
xor
in
nop
add
mov
dec
cmp
and
cs
in
loope
sub
bound
gs
dec
and
or
mov
cmc
sub
pop
sub
out
test
aad
pop
scas
lods
lds
pop
sbb
gs
int3
arpl
jp
insl
cltd
add
scas
arpl
outsl
arpl
sbb
add
adc
and
pop
lods
dec
adc
mov
sub
lods
push
iret
aas
mov
inc
lods
or
in
cmp
add
pop
fs
pusha
insb
or
gs
cmpsl
mov
inc
pop
js
mov
mov
lret
sub
xchg
subb
mov
and
sbb
add
and
fcmovnu
add
rcrb
aam
mov
xlat
lods
imul
push
adc
enter
mov
out
fdivl
int3
ja
sbb
and
pop
dec
ds
sbb
pop
dec
addr16
pop
cld
push
icebp
insl
pop
add
cmc
or
xor
and
movsb
xchg
fistpll
and
divb
add
dec
addr16
insl
adc
dec
je
mov
jno
lcall
ss
push
je
and
and
into
cs
xchg
testl
aad
mov
gs
xchg
adc
movsb
cmp
pop
mov
ss
push
rorl
jge
iret
dec
in
gs
aam
pushf
cmpsb
cmp
jmp
inc
fimull
out
test
aas
push
pop
test
rcrl
pop
test
pop
lahf
jae
lods
nop
lahf
test
pop
dec
adc
cmovle
popf
mulb
lods
cmpl
mov
repz
adc
in
or
cli
out
bound
addr16
popf
xor
add
test
mov
pop
nop
dec
test
jmp
aam
mov
lds
inc
sbb
int
pop
cmpsl
pusha
repz
mov
add
mov
cli
scas
iret
ret
cwtl
cmc
jmp
fs
inc
cmc
bound
cmc
or
test
enter
int
pop
sub
push
out
inc
adc
or
xchg
push
out
jno
mov
add
xchg
inc
dec
stc
mov
out
lcall
cmc
lods
xor
fistpl
inc
negb
daa
and
ret
fldenv
jp
jno
fsts
aas
adc
lods
lods
in
test
xchg
jmp
lahf
push
out
mov
add
subl
cwtl
push
pop
lret
adc
jle
cmp
scas
mov
ret
insb
cmc
cmp
mov
push
sbb
pop
or
xchg
pop
dec
and
iret
int
pop
cmpsl
pusha
jmp
daa
insl
add
ret
aad
pop
and
mov
inc
jo
inc
cmc
sbb
outsl
scas
ds
cmpsl
push
int
pop
xor
and
testb
stc
dec
lea
add
and
or
inc
std
jmp
into
cmp
push
out
cmp
in
lea
jne
imul
pop
lret
outsb
cmpsb
scas
repz
add
or
xchg
shll
inc
mov
rcrb
leave
lds
dec
hlt
out
bound
and
lods
push
mov
lahf
jne
cmp
int
in
mov
cmp
add
dec
adc
mov
adc
cmc
cmp
mov
push
sbb
push
or
xchg
xor
call
dec
je
xor
daa
out
push
stc
outsl
popf
int
pop
jg
adc
imul
cmp
int3
movsb
sub
das
daa
fdiv
mov
imul
and
insl
lret
adc
pop
in
pushf
mov
xchg
cli
in
shlb
inc
insb
mov
inc
shlb
or
or
sar
lahf
aad
sub
and
movsb
notl
in
or
mov
call
mov
out
fbstp
aad
xchg
dec
mov
ljmp
ss
imul
push
xor
out
or
daa
int
ljmp
addr16
and
adc
adc
mov
mov
imul
xor
push
cmp
jb
outsb
pop
push
lcall
push
ret
mov
adc
push
das
ds
dec
ret
dec
jno
mov
lret
and
or
mov
jp
jbe
jp
jge
leave
jmp
mov
fldt
cmp
lock
lret
dec
fmull
jae
jmp
sub
mov
stos
sub
test
cmp
fsqrt
jae
and
sbb
orb
dec
int
out
dec
push
shlb
test
aaa
mov
jge
jae
xor
dec
inc
mov
jmp
in
xchg
mov
fwait
insl
fisttpl
sub
push
pushf
xor
addr16
fdivl
push
std
or
cmp
les
xor
dec
ja
mov
fs
xor
ja
dec
cli
xor
adc
cs
sbb
call
dec
dec
lcall
push
jne
add
inc
sahf
sbb
bound
fwait
sub
sbb
stos
jg
jae
sub
add
mov
pop
and
sub
lods
and
fdivs
and
mov
add
shll
mov
stos
add
loope
dec
rorb
mov
xchg
xchg
dec
sarb
sub
or
or
loope
push
or
filds
add
pop
xchg
out
dec
push
cmp
cmpl
cld
mov
aaa
mov
scas
fisubrl
scas
sbb
push
mov
jecxz
stos
stos
push
mov
cli
pop
hlt
popf
popa
loop
push
mov
jecxz
mov
sub
xchg
cmpsb
fsubp
push
ficoms
popa
icebp
std
into
mov
inc
push
mov
cmpsb
pop
pop
ja
repz
imul
test
sub
jo
pop
jg
sub
adc
in
daa
test
push
call
dec
rcrl
cmpsl
inc
test
icebp
ja
mov
cmpsl
dec
push
imul
adc
test
and
loope
shl
scas
psubd
rcr
xchg
stos
dec
xor
mov
and
fsubrp
lahf
fisubl
sbb
xchg
cmp
insl
fdivs
adc
dec
int
imull
add
add
or
jmp
mov
xlat
fsubs
cmp
xchg
call
cmp
movsb
fiaddl
cld
roll
rclb
mov
mov
cmp
or
add
mov
dec
xor
pop
adcb
sub
cli
push
xor
dec
add
addr16
push
pop
push
stos
push
pop
xchg
add
mov
and
stos
ror
data16
add
mov
popf
sbb
or
insl
sbb
push
mov
movsl
sbb
bound
lcall
cmp
sub
or
sbb
out
inc
xor
add
pop
dec
jo
lock
jb
fbld
sub
popfw
lock
jno
adcl
loope
dec
scas
and
xlat
jo
fnstenv
and
out
push
push
sti
inc
sub
subl
fcmovnb
xchg
clc
add
dec
js
sub
loope
sub
stos
rol
pop
movsl
into
dec
xchg
sub
xchg
sub
xchg
xchg
xchg
iret
aas
ljmp
and
outsl
outsb
push
jecxz
add
and
mov
push
into
push
int3
inc
in
ljmp
or
inc
imul
push
int
sub
mov
jns
xlat
xchg
aas
mov
sarb
mov
popa
xchg
je
andb
or
jle
js
std
dec
jg
inc
pop
std
icebp
and
jne
xchg
mov
nop
insb
mov
fsubs
inc
inc
loop
inc
mov
add
mov
mov
add
push
jecxz
pop
insl
adc
xchg
mov
mov
cmp
sti
je
cltd
ret
fdivr
cltd
mov
jmp
cltd
xchg
fstps
popf
fdivrs
cltd
insl
fsubrs
cltd
jge
pop
cltd
dec
fmuls
cltd
pop
fdivrs
sub
fcomps
or
ret
mov
and
arpl
and
arpl
and
arpl
and
arpl
and
or
pop
arpl
sub
and
insl
cmp
arpl
and
jo
adcb
mov
cmp
lahf
xchg
and
stos
cmp
popf
mov
sub
inc
mov
jp
xor
xchg
and
test
je
and
inc
je
cs
je
arpl
jl
xlat
cs
je
cs
je
shll
je
cs
mov
pop
add
pop
ja
into
pop
xchg
add
pop
cmp
notl
xchg
cmp
pop
xchg
sbb
mov
loope
mov
cld
loope
mov
hlt
cmp
and
fisubs
mov
fmuls
repz
fcomip
lret
test
adc
in
push
lea
ss
ja
ss
test
jbe
cmp
jnp
aad
mov
xchg
mov
repz
dec
mov
jne
out
adc
inc
pop
mov
or
sbb
ja
shll
ss
ja
ss
ja
pop
mov
stos
pop
pop
lret
cltd
fdivrs
cltd
insl
fsubrs
subb
and
and
jno
int3
enter
nop
lea
int3
sub
add
xchg
mov
rcll
inc
sbb
in
jge
loope
mov
mov
ds
and
bound
fidivrs
or
jnp
dec
ret
sbb
jge
cmp
jge
cmp
jge
cmp
or
or
pop
mov
fsubrp
test
and
jbe
decl
pop
aam
pop
pop
add
outsb
dec
out
int3
adc
ja
and
outsl
xchg
xor
jae
aas
iret
test
fcmovne
mov
xchg
clc
iret
ret
xchg
mov
decl
xor
cltd
jnp
and
jnp
and
jnp
cmp
rorl
adc
addr16
es
jmp
mov
adc
flds
cmp
cmp
and
je
test
cmp
lcall
addl
sbb
fisubrs
repz
test
mov
test
jg
int3
cmc
lea
int3
into
lea
int3
mov
lea
int3
dec
lea
int3
and
arpl
add
mov
xchg
sub
jge
iret
mov
jge
cmp
jge
cmp
jge
or
jns
dec
rorb
dec
test
jmp
dec
or
dec
js
push
dec
pop
or
xor
or
adc
jp
xchg
cmc
xlat
cmpsl
xchg
xchg
aad
xchg
xlat
notl
test
xlat
insb
xchg
je
cs
ja
cmp
lcall
lcall
sahf
lcall
aam
cmp
mov
lahf
loope
mov
call
mov
ss
ja
ss
ja
or
test
and
fsubs
add
inc
daa
xlat
adc
mov
dec
mov
mov
pop
test
shrl
fidivrs
push
fdivp
test
lret
xchg
jnp
sets
cwtl
pop
cld
fwait
xor
pop
lods
xchg
decl
or
cmp
ficoms
pop
fisubs
insl
fidivs
jge
les
fsubp
test
lahf
jecxz
int
xchg
iret
fstl
out
std
imul
loope
fisubs
fbstp
std
ja
ss
ja
fstpl
test
les
fsubp
test
fiadds
fstp
movsb
mov
std
push
inc
mov
je
cs
jne
fdivp
jne
sub
jb
mov
sub
lcall
nop
lcall
mov
mov
sub
repz
test
or
push
inc
enter
arpl
and
and
outsl
in
cs
je
sub
loope
mov
cmp
add
and
jnp
and
jnp
and
lret
jnp
and
and
test
shl
lods
shr
mov
lock
pushf
lcall
dec
lcall
pop
lcall
adc
pop
rcrb
shlb
insl
shrb
jne
xor
lods
shl
mov
cld
lcall
mov
in
inc
mov
rclb
rcrb
shlb
sarb
shlb
insl
shrb
jne
xor
test
rcrb
rolb
rclb
ja
mov
repz
popf
loope
mov
lea
andl
loope
mov
cmp
outsl
mov
add
and
insl
loope
mov
pop
loope
mov
mov
and
arpl
cmp
xchg
lea
int3
imul
int3
dec
lea
xor
out
add
push
adc
mov
iret
fdiv
loope
mov
mov
in
loope
mov
sub
jg
and
inc
mov
adc
push
mov
push
or
xor
test
inc
testb
arpl
and
or
dec
xchg
or
dec
jnp
jne
cs
je
cs
je
cs
fstps
pop
fadds
sti
js
cltd
out
fdivs
cltd
fmuls
cltd
mov
fcom
cltd
mov
int
xchg
or
or
clc
cmpxchg
mov
aad
nop
sub
adc
rcrb
inc
mov
xchg
lret
cmpsl
bound
mov
xlat
cmp
daa
xlat
pop
nop
jne
fldl
xchg
dec
in
xlat
jge
or
jne
inc
push
ja
xchg
xor
mov
in
loope
mov
fsub
andb
loope
mov
cmp
bound
mov
add
sbb
mov
cmp
lods
mov
jle
cmp
mov
cmp
mov
outsb
fldcw
push
mov
xor
push
add
pop
mov
repz
mov
or
ss
sbbl
in
and
add
sub
daa
ljmp
test
sbb
xor
mov
repz
cmp
pop
push
jmp
or
inc
das
out
stos
mov
push
xor
mov
out
fwait
jmp
or
sarb
xchg
xlat
xor
ficompl
loope
jge
ret
andl
jae
xchg
xor
sbb
or
add
pop
pusha
add
pop
jae
aas
pop
test
ret
add
pop
xchg
add
pop
mov
add
pop
mov
cmpsl
test
fidivs
lods
cmp
push
jnp
and
pusha
xor
and
rcrl
add
pop
fildl
mov
pop
jg
cmp
xor
mov
rcrl
ljmp
shlb
shlb
xor
dec
ret
mov
test
jne
dec
jne
je
and
mov
cmp
xchg
and
xchg
stc
iret
into
xchg
scas
mov
sbb
and
jle
ja
and
ss
ja
push
mov
and
push
xor
test
pop
repz
test
loopne
lods
test
lock
mov
push
xchg
mov
ss
ja
movsb
test
pop
repnz
push
pop
test
cmpsl
xlat
stc
xchg
scas
icebp
int3
mov
je
sbb
scas
mov
shll
adc
inc
cltd
sub
cmp
daa
mov
cmp
pusha
dec
cmc
add
inc
xor
sbb
fs
xchg
lret
pop
ja
and
iret
pop
xchg
sbb
popa
jne
int
xchg
jge
sub
sub
ss
cs
xchg
xchg
iret
sarl
loopne
iret
inc
andb
jmp
lods
es
das
sub
cs
std
or
aaa
test
into
xchg
cmp
in
test
ficoms
test
shll
and
arpl
inc
jns
mov
lahf
popf
or
dec
imul
and
cmp
dec
xchg
sbb
sub
adc
sti
enter
fsubl
cltd
jnp
and
jnp
sub
pop
push
jp
xor
adcl
fdivs
cltd
push
fadds
cltd
and
fsubs
add
fadds
in
mov
loopne
cmpsl
and
pusha
xchg
xchg
das
jle
iret
lods
sub
cmp
jge
cmp
imul
pop
lcall
negb
iret
rclb
and
jge
loope
mov
xchg
mov
pop
xchg
mov
out
mov
ja,pn
ds
xchg
aas
ss
cmpsl
xchg
out
iret
mov
dec
xchg
mov
xlat
mov
jge
cmp
dec
mov
dec
aam
mull
lahf
jecxz
loope
xchg
adc
aad
cwtl
cs
cli
cs
leave
xchg
fwait
mov
or
jne
int
mov
push
mov
lret
je
or
inc
or
leave
pop
sub
arpl
movsb
sbb
and
and
jle
or
pop
jle
cmp
fidivs
cmp
jge
and
pop
ja
clc
mov
leave
jnp
scas
shll
or
and
pop
ja
push
mov
fidivl
fldt
push
sbb
mov
stc
pop
rolb
test
cwtl
push
orl
jecxz
pop
insb
jp
cmpsl
test
xorl
xchg
jecxz
mov
test
xor
repnz
sub
movsb
xchg
rol
aaa
arpl
xor
loope
mov
sbb
cltd
sub
xchg
cmpsl
cs
adc
push
add
jnp
icebp
cmp
jge
cmp
arpl
loope
mov
add
sbb
pop
scas
mov
int3
imul
pop
lret
add
xchg
cmp
add
cmpsb
jno
repz
mov
call
cwtl
in
add
je
cs
out
jge
sub
jb
cltd
lods
xlat
loope
push
xlat
das
popf
scas
int3
adc
jo,pn
or
js
popf
jnp
add
pusha
pop
dec
push
push
mov
pop
jge
jnp
movsb
push
orl
insl
scas
mov
mov
ss
getsec
or
inc
adc
leave
dec
mov
aad
push
jge
sub
popa
xchg
mov
cmp
out
mov
in
pop
popf
je
das
pop
mov
ss
outsl
ss
ja
sbb
add
dec
jge
test
les
fs
xchg
dec
paddsb
je
cs
aas
shlb
cltd
pop
into
dec
pop
ret
hlt
push
push
push
xor
dec
scas
xor
loop
pop
pop
mov
mov
ss
sbb
jle
xchg
ror
xor
fsts
test
sbb
xchg
push
xlat
ja
add
or
jl
aaa
jns
adc
enter
iret
fdivl
jp
mov
adc
add
fs
pop
scas
add
fildl
ret
dec
dec
jmp
jns
add
xchg
je
jb
test
mov
mov
inc
pusha
pop
cmpsl
jns
jmp
mov
jbe
jle
shll
push
mov
shlb
or
mov
sub
aad
jno
pop
sbb
xor
in
in
in
popa
sub
jne
xchg
mov
leave
sub
inc
rol
cltd
fcom
xchg
xchg
xchg
jge
cmp
or
enter
aam
loopne
cmpl
xchg
inc
leave
lahf
fmulp
rcll
movsb
filds
bswap
adc
pop
testb
xor
shrl
jo
in
cwtl
inc
pop
es
fwait
and
shll
fisttpl
mov
and
xchg
test
xchg
pushf
xchg
dec
fisubs
scas
fnstenv
mov
xchg
dec
iret
or
jmp
shll
test
ss
dec
mov
adc
ret
mov
fxch
insb
aas
cmp
push
repz
ja
xchg
xchg
pop
cld
pop
mov
movsl
jmp
ljmp
sbb
test
ret
scas
dec
lea
das
les
push
popf
pop
dec
mov
rclb
sbb
test
ljmp
das
dec
outsb
xor
add
test
cmpsl
jge
cltd
sub
pop
xchg
or
xchg
frstor
and
lea
das
cmc
test
loope
js
xchg
daa
push
mov
stos
sub
jg
cmp
stos
jno
mov
frstor
ljmp
xor
add
inc
pop
cmovg
aaa
ss
fsubr
nop
mov
movl
sti
jnp
dec
jno
repz
or
or
pop
mov
lock
pushf
xchg
enter
xchg
push
fbld
add
pop
mov
setnp
sti
push
mov
xor
jns
xchg
gs
addr16
push
jl
ja
and
jge
data16
and
lret
jnp
and
shll
add
xchg
cmc
roll
fwait
sahf
je
adc
push
pop
add
cs
mov
dec
jmp
or
in
jb
xchg
mov
pop
gs
pop
xchg
je,pt
das
jae
mov
test
jge
cmp
jge
and
add
je
cs
xorl
inc
lea
int3
push
and
ret
pop
clc
add
aas
jmp
or
inc
out
xchg
ja
hlt
test
rep
test
jae
dec
cmc
push
gs
sub
roll
gs
dec
aad
or
sbb
arpl
cmp
jge
and
imul
xchg
sti
aaa
das
test
pop
loope
mov
subb
add
leave
leave
pop
nop
jo
repz
lea
cmp
out
inc
xchg
mov
xchg
add
cmp
add
and
leave
mov
inc
ficomps
sub
cmp
dec
mov
cmp
dec
pushf
xchg
mov
pushf
je
das
or
or
and
xor
sbb
adc
mov
iret
dec
cld
cmp
psubq
test
rorb
stos
xorb
repz
scas
sbb
jnp
push
daa
loope
mov
test
ficoms
inc
and
lea
jo
je
lret
add
xchg
ja
ss
ja
negb
pop
test
mov
loope
setns
add
mov
js
pusha
cmp
lods
lods
cmp
pop
stc
insl
lcall
dec
mov
mov
xor
loop,pn
lods
xchg
adc
cwtl
pop
out
inc
das
xor
aam
data16
jae
sbb
mov
jnp
cs
push
sub
push
jp
fnstcw
aam
jg
cmp
out
mov
push
rcll
std
and
je
lret
jb
adc
idivl
inc
xchg
daa
iret
lea
mov
das
xchg
scas
pop
jge
mov
test
aas
cltd
cmpsl
jmp
ja
scas
cmc
popf
fidivs
gs
pop
mov
mov
ret
xchg
fistl
mov
sub
popf
std
sbb
ja
push
jecxz
icebp
in
sti
and
and
xchg
dec
jmp
adc
das
fcmovbe
add
adc
xchg
inc
add
aas
mov
sub
das
mov
mov
mov
push
jge
and
dec
mov
ss
ja
ss
ja
adc
lar
sub
jge
and
xchg
mov
add
cmp
gs
jge
jge
imul
lret
jae
xchg
dec
and
in
lods
btr
or
andps
xrelease
mov
adc
ja
push
es
sbb
loopne
fwait
jno
push
pop
pushf
add
and
push
cmc
lcall
stos
cmp
add
out
dec
dec
sub
cmp
add
sub
pushf
mov
cmpsl
in
cmp
out
or
ror
outsb
pop
or
mov
aad
std
ret
mov
mov
ja
pop
add
daa
mov
movsl
imul
fisubs
mov
push
xchg
sub
fldenv
in
mov
clc
das
arpl
push
push
mov
cmp
add
jb
mov
test
leave
mov
lcall
jge
cmp
popa
jle
mov
je
fwait
test
fldcw
rep
test
out
mov
cld
in
lock
inc
and
nop
mov
mov
and
jge
jns
imul
rcr
clc
test
out
pop
xchg
shlb
and
xlat
mov
in
cmp
ja
or
or
xor
jecxz
testb
jp
hlt
loopne
cltd
or
adcl
fistl
int3
jle
dec
xlat
jge
xor
mov
in
iret
mov
fs
fldenv
adc
inc
shrl
jge
sub
mov
aam
xchg
sbb
ja
ss
mov
xchg
je
cs
or
sub
jns
fsubl
idivb
cmp
shll
jecxz
add
fnstcw
es
inc
std
test
pop
icebp
imul
mov
jge
push
dec
pop
and
sub
mov
data16
adc
push
pop
and
mov
dec
mov
iret
mov
stc
in
shll
aas
stos
push
xchg
std
jl
adc
mov
sarl
and
cmp
dec
insl
movsl
lds
sar
cltd
xor
mov
sub
cmp
in
sub
adc
imul
or
lods
call
in
leave
pop
in
ret
in
outsb
je
cmpl
xchg
movsl
test
jp
and
in
dec
mov
stc
sbb
or
push
pop
test
fcompl
jo
stc
mov
xchg
mov
int3
je
cltd
mov
rcrb
loope
hlt
ret
inc
int
jne
and
pop
flds
fmuls
in
jbe
and
pusha
loope
jge
sub
add
je
cs
je
cs
je
fistl
scas
xchg
mov
out
xchg
in
adc
popa
hlt
and
and
xorl
pop
push
in
push
push
pop
loopne
mov
ss
push
mov
pop
jnp
repz
xlat
ja
nopl
mov
out
pop
xlat
adc
sub
ljmp
sahf
ja
stc
ja
xchg
push
dec
xchg
in
inc
int
add
je
mov
dec
cmpsb
jge
and
movsb
xor
dec
pop
inc
cmp
lret
cli
pop
popa
xor
xchg
push
xchg
scas
sbb
push
cltd
inc
shrb
add
pop
popa
add
pop
rolb
pop
lds
aaa
cwtl
xor
into
inc
sbbl
in
imul
and
addl
xor
jne
sub
jge
mov
sub
lea
das
jmp
xor
xchg
stos
ja
ss
ss
mov
cmpsl
push
mov
pop
xchg
scas
jne
js
dec
fwait
or
lock
dec
mov
dec
sysexit
aas
pusha
loopne
add
and
jae
jnp
push
xor
add
das
aas
mov
or
cltd
xchg
fcomps
inc
rorb
xor
jl
notb
push
or
and
ret
and
rcl
sahf
ret
stc
or
cmp
test
add
jne
inc
es
int3
imul
pop
lds
enter
jg
jge
arpl
add
ds
fs
loope
shlb
push
int3
pop
mov
mov
mov
and
test
add
es
push
push
out
inc
subl
pop
jp
mov
mov
xchg
fs
and
xchg
mov
mov
sub
loopne
mov
jne
in
test
xlat
add
aad
mov
scas
pop
cld
pop
lea
jg
mov
aaa
test
and
cmp
mov
stc
fidivs
mov
sbb
xlat
sti
movsl
push
sbb
mov
inc
in
jg
pusha
nop
xchg
cmpsb
hlt
sbb
dec
outsb
sahf
or
imul
negb
popa
mov
or
xchg
fs
into
inc
inc
outsb
mov
pop
cwtd
cmp
icebp
movsl
int
pop
test
mov
clc
pusha
pop
mov
add
dec
push
or
loope
sarl
sub
arpl
popa
mov
add
clc
push
cwtl
repz
push
mov
imul
inc
lock
xor
mov
mov
cmpsb
or
je
sbb
out
js
loopne
sbb
pop
sar
in
sub
jecxz
fistpl
push
hlt
xor
mov
jae
and
fstl
icebp
or
sbb
xchg
popa
hlt
sbb
xchg
pushf
or
pop
scas
sbb
and
push
leave
fstps
push
rorl
lds
jae
rcrl
lahf
xor
test
jmp
add
jmp
mov
xor
lds
ss
ja
pop
mov
mov
jnp
sub
stos
xchg
jno
cmp
imul
jnp
sbb
dec
pusha
or
jno
je
cs
arpl
icebp
push
dec
or
repz
ret
clc
lods
sub
movsl
scas
xor
push
out
and
push
jmp
sbb
and
mov
cmp
fwait
sbb
pop
push
xchg
aad
and
shr
sub
xchg
lock
mov
and
stc
rcl
repz
test
dec
scas
add
sbb
int3
decl
cltd
dec
iret
or
mov
and
adc
push
cs
loope
xchg
leave
insl
jno
scas
jne
pop
lds
mov
into
ja
mov
mov
mov
sub
xchg
push
enter
inc
loope
pop
and
int
fsubrs
xchg
gs
ss
ja
inc
push
cmp
dec
outsb
xor
pop
adc
mov
dec
lahf
push
or
pop
inc
xchg
inc
punpckhdq
jno
jo
jns
les
inc
outsl
test
cmp
imul
movsl
fdivs
mov
add
and
and
loopne
out
test
or
sar
neg
xor
cmc
hlt
cltd
sti
scas
mov
lds
inc
roll
mov
fsts
dec
and
add
inc
cmp
pop
loope
mov
fstpl
ja
inc
test
sub
mov
lods
int3
aam
jo
dec
add
test
adc
aaa
mov
and
int
rol
in
pusha
dec
popa
cmp
hlt
pop
imul
out
xor
test
pop
pop
pop
dec
pop
add
in
adc
pop
idivb
scas
insb
repz
or
lea
pop
pop
fs
xor
pop
ss
popa
cs
les
andb
push
es
cwtl
pushl
xor
mov
daa
scas
pop
in
insb
int
jl
dec
sub
and
adc
mov
sbb
cltd
sbb
orl
sbb
aaa
lods
sub
or
imul
mov
mov
loop
mov
lods
xor
inc
into
and
adc
or
leave
loopne
fmul
xchg
xor
inc
es
cmc
mov
pop
pop
sub
dec
pop
std
add
out
pusha
in
insl
sarl
xchg
outsl
push
or
stc
cmc
insl
adc
mov
jae
sub
mov
movsb
and
orb
gs
cmc
insb
mov
enter
stos
fsts
arpl
push
repz
insb
mov
in
fistl
aad
int
mov
cmp
jb
mov
incb
push
jp
arpl
loopne
inc
div
scas
aaa
les
xchg
lods
mov
imul
sbb
scas
daa
mov
scas
fstl
inc
inc
lret
lret
pop
sbb
and
call
arpl
icebp
lret
mov
leave
fnstenv
lods
jecxz
call
stc
lods
sub
mov
shll
rclb
popf
jl
lahf
dec
adc
mov
iret
xchg
sub
repnz
cmp
movl
aaa
mov
dec
les
xchg
loope
jae
cmp
scas
shl
and
jecxz
xchg
jmp
jae
xor
mov
lds
enter
adc
inc
push
inc
sar
push
jae
jge
lods
add
sahf
pushf
loopne
mov
ljmp
xor
sub
push
jne
fwait
jb
sbb
xor
das
push
jmp
test
xlat
stos
decb
dec
push
mov
xchg
cmpsl
xor
adc
mov
lods
decl
and
repnz
fwait
dec
stc
adc
insl
jb
leave
jmp
xchg
cwtl
bound
jno
and
or
lea
mov
daa
or
outsl
or
xlat
or
xlat
lods
xor
insl
movsb
outsl
test
filds
push
jge
repnz
dec
adc
dec
adc
gs
loop
push
test
xchg
jb
rcl
sub
popa
cmpsb
pop
dec
shll
mov
mov
out
enter
xlat
push
aaa
push
sbb
aad
cltd
loop
ljmp
scas
mull
icebp
loop
fcoml
inc
pop
sbb
aad
xchg
add
pop
xchg
xlat
fldt
test
mov
shll
sbb
enter
mov
sub
pop
dec
aas
inc
mov
sub
and
cmovae
insl
iret
subl
push
push
mov
mov
fmul
lret
lret
push
setae
insl
scas
insl
andb
dec
mov
insl
arpl
adc
cmp
out
or
fisttps
inc
repnz
xor
jae
or
xchg
movsb
outsb
addr16
sti
sub
stc
bound
es
rcrl
xchg
push
aas
xlat
ficompl
sub
jae
push
mov
outsl
sahf
mov
pop
bnd
and
int
push
std
fbstp
xchg
add
inc
fwait
cmp
cld
mov
adc
mov
shrb
lods
out
nop
jge
pop
xchg
mov
xchg
movsb
inc
mov
pop
mov
in
xchg
cmc
push
je
dec
pop
or
lock
lods
sbb
xor
leave
rcrb
inc
sub
call
add
push
jmp
mov
pop
mov
outsl
jp
stos
mov
push
lock
mov
cmp
cmp
test
stos
or
push
xchg
aad
dec
sti
inc
pop
and
test
push
mov
out
outsb
gs
loope
mov
lahf
cwtl
xor
xchg
xor
lahf
push
jno
xchg
mov
mov
data16
stos
add
les
ficoml
inc
cmc
push
mov
test
or
fiadds
adc
rolb
sub
pop
sbb
mov
rclb
test
sub
movb
outsb
cmpsl
push
sahf
inc
lahf
pop
int
mov
add
ds
inc
movsl
jbe
adc
or
dec
cmpsb
dec
mov
pop
jne
lock
je
mov
xchg
or
push
cmp
ret
pop
out
mov
icebp
outsl
stc
and
cmp
aam
divl
frstor
stc
inc
push
cmp
in
cmpsb
rolb
call
pop
sub
sub
and
bts
test
test
xor
and
shl
inc
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
adc
cmp
movzbl
adc
xor
shr
bt
jmp
lcall
ret
or
shr
cmp
dec
and
btc
test
bsf
jmp
lcall
xor
add
add
pop
xor
xchg
push
mov
bsf
mov
mov
or
btr
and
call
lcall
incl
ret
neg
sub
adc
cmp
adc
sub
adc
test
jmp
lcall
cmp
add
neg
inc
test
sub
btc
mov
mov
xchg
push
push
xchg
dec
add
add
call
not
bt
adc
bts
btr
not
movsbl
mov
or
add
mov
bsf
btr
and
sub
movzbl
movzbl
sub
mov
shl
sub
xchg
mov
adc
test
mov
and
test
cmp
mov
inc
jmp
lcall
ret
or
movswl
bsf
add
sub
bt
or
add
bts
call
lcall
add
xorl
pop
xor
xchg
push
test
shr
cmp
adc
bt
bts
sub
btr
jmp
lcall
stc
add
xchg
ret
neg
sub
test
test
bsf
and
bswap
adc
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
xor
add
test
test
and
btr
jmp
lcall
or
call
btc
sub
cmp
btr
cmp
add
xor
dec
add
mov
bt
movzbl
neg
btr
cmp
btr
test
sub
inc
call
lcall
add
bt
btc
btc
bsf
cmp
test
and
shr
test
call
lcall
or
add
or
shr
sub
xor
sub
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
test
btc
adc
movzbl
movzbl
btc
and
and
inc
call
lcall
inc
mov
and
and
or
bts
btr
not
jmp
lcall
loope
pushf
adc
neg
bt
adc
cmp
adc
or
xor
mov
test
add
dec
cmp
neg
and
mov
btc
test
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
or
xor
test
and
or
test
or
inc
push
sub
bt
test
shl
cmp
cmp
shr
add
xor
and
and
and
btr
and
add
mov
or
xor
sub
shl
dec
add
bt
btr
cmp
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
sub
btr
add
bsf
cmp
xor
sub
adc
call
lcall
add
cmp
mov
movsbl
bts
shl
adc
btr
mov
add
xor
mov
neg
cmp
not
shl
bts
neg
neg
shl
sub
mov
inc
btc
and
shl
xor
cmp
shr
or
inc
call
lcall
mov
movsbl
cmp
neg
add
dec
test
shl
mov
btc
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bts
and
bsf
xor
or
xor
xor
shr
sub
add
xor
bts
add
shr
adc
and
jmp
lcall
pop
fdivl
sub
cmp
sub
add
cmp
mov
add
cmp
mov
shl
or
not
or
test
dec
call
lcall
add
inc
adc
bts
sub
shl
shr
movsbl
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
sub
btr
mov
movzbl
shr
adc
bsf
sub
mov
or
xor
adc
or
or
test
adc
movsbl
movswl
shl
not
test
adc
shr
btr
xor
xor
mov
add
cmp
and
not
movzwl
and
btr
test
bt
shr
lea
inc
cmp
jne
mov
bsf
add
test
btc
btc
xor
dec
mov
not
add
and
bt
add
sub
bsf
shl
btc
dec
call
lcall
je
shl
add
shr
and
add
add
mov
shl
cmp
sub
mov
neg
add
shl
xor
bsf
bsf
mov
add
call
lcall
mov
or
or
btr
xor
btr
shl
sub
shr
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bsf
add
cmp
shr
inc
or
dec
test
call
lcall
mov
and
shl
or
shl
or
test
add
test
neg
bt
add
sub
and
mov
jmp
lcall
movsb
movsbl
and
and
bts
sub
add
not
or
mov
add
mov
add
dec
inc
xor
btr
movswl
not
adc
call
lcall
add
adc
sub
cmp
bt
or
not
push
pop
inc
add
loop
adc
shl
bsf
neg
or
adc
test
push
decl
mov
add
test
sub
and
shl
bsf
shr
test
call
lcall
incl
fdiv
ret
fstps
jecxz
rorb
clc
cwtl
add
mov
not
push
shll
add
mov
add
mov
mov
mov
push
btr
add
cmp
bswap
mov
btc
xor
dec
sub
mov
xor
not
shr
cmp
bts
or
and
test
push
push
pop
add
add
call
mov
cmp
bt
add
or
bsf
sub
or
inc
xchg
bt
cmp
test
not
or
or
test
neg
cmp
mov
or
dec
or
mov
xor
movsbl
xor
shl
call
lcall
mov
les
mov
sbb
pop
bsf
adc
sub
bsf
add
cmp
add
add
adc
movsbl
or
call
lcall
shr
adc
cmp
add
xor
adc
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
and
or
bswap
or
add
bt
bt
not
not
test
movzbl
or
add
xor
bsf
call
lcall
rorb
mov
adc
bts
bt
cmp
and
and
mov
mov
bsf
sub
movsbl
mov
shl
and
sub
bt
cmp
je
adc
test
sub
cmp
adc
adc
sub
inc
add
or
mov
add
btc
movsbl
and
sub
add
call
lcall
xor
btc
bt
add
btr
btr
bsf
sub
btc
mov
inc
test
add
bsf
or
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
adc
bt
test
or
xor
neg
xor
push
decl
mov
add
adc
btc
cmp
movsbl
shr
dec
bsf
or
push
decl
mov
add
cmp
dec
not
bt
or
dec
bsf
shl
inc
add
and
shl
and
btr
cmp
mov
mov
jmp
and
add
adc
shl
shr
or
shr
mov
test
add
bts
adc
btc
mov
shl
btc
mov
not
shl
or
mov
dec
btr
dec
test
btr
add
sub
cmp
add
mov
sub
adc
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
test
mov
xor
neg
adc
btc
mov
cmp
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
add
bt
sub
mov
adc
cmp
xor
push
push
sub
shr
cmp
bt
shr
bt
sub
bsf
push
sub
mov
inc
cmp
add
test
mov
and
and
inc
mov
add
bt
add
cmp
test
dec
btr
sub
btc
call
lcall
js
cmp
or
mov
bt
or
movzbl
btc
lea
btr
movzbl
mov
add
cmp
neg
and
mov
mov
cmp
dec
btc
and
xor
shr
movzbl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
sti
mov
enter
btc
cmp
and
adc
or
sub
mov
btr
mov
bt
add
cmp
bts
inc
push
xor
test
adc
mov
btc
and
neg
push
test
inc
add
and
btr
mov
bt
mov
sub
xor
push
mov
not
btc
shl
not
cmp
not
mov
and
call
lcall
mov
bts
and
xor
cmp
add
cmp
and
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
test
bt
cmp
adc
shl
test
not
test
sub
call
lcall
sub
cli
shrl
js
mov
shr
add
cmp
add
cmp
bsf
not
cmp
sub
mov
mov
call
lcall
mov
and
dec
adc
bsf
cmp
neg
add
bt
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
loope
add
ud2
adc
mov
adc
xor
lods
loopne
repz
shrl
add
int
sarb
lcall
sbb
jnp
movsl
add
fistl
add
and
nop
add
mov
outsb
adc
lock
jge
add
ds
add
sbb
mov
jmp
in
clc
inc
jle
xor
ffree
xorb
add
in
lahf
cmp
xchg
cld
insl
mov
or
mov
ja
cmp
gs
pop
sbb
adc
inc
or
fiaddl
inc
adc
test
mov
lds
sbb
add
addb
dec
fisubl
adc
stos
pop
test
jns
pop
xor
mov
les
iretw
inc
add
in
cwtl
shr
scas
scas
sbb
jg
sub
pop
cmp
push
add
xchg
or
adc
push
sbb
and
and
mov
mov
add
mov
adc
inc
xor
dec
fisubs
fsubrl
sbb
pusha
cmp
add
push
add
push
xor
loopne
out
pop
sbb
or
mov
sbb
xchg
push
js
add
push
adc
xor
inc
push
dec
push
fdivl
inc
add
aaa
cmp
pop
fmuls
jmp
xor
xor
rcll
dec
pop
addr16
push
popl
aaa
out
dec
clc
push
push
inc
dec
pop
adcl
fnstcw
inc
lds
xor
adc
aaa
addr16
push
xor
idivb
dec
cmc
add
ss
push
push
push
inc
inc
jmp
xor
jo
movsl
add
andb
dec
xor
inc
inc
pop
pop
push
mov
int3
push
aaa
sysenter
inc
dec
inc
and
dec
push
cmp
jp
js
push
aaa
push
pop
jae
dec
int3
xchg
pop
inc
push
dec
dec
test
inc
add
cmp
pop
mov
jno
push
pop
and
fisttpl
enter
push
inc
mov
nop
push
cmp
outsl
add
dec
ss
outsb
push
rcrb
sub
ja
add
cmpb
insb
outsl
jae
and
jne
push
cmpsl
jb
mov
decb
je
jns
cs
std
cmp
push
ja
insb
cmp
sbb
scas
sbb
or
push
push
inc
cli
mov
outsl
adc
jo
add
dec
push
push
imul
shlb
stc
push
gs
mov
inc
jo
mov
outsl
outsb
jae
es
mov
cs
jle
js
adc
cmp
sub
pop
adc
or
ja
sub
dec
addr16
cli
mov
inc
push
jb
nop
lds
and
push
outsl
fs
pop
cmp
push
ret
dec
jmp
shlb
outsb
pushw
test
aaa
push
xorl
adc
inc
cs
push
dec
or
lods
pop
add
xchg
sub
stos
addb
inc
cmc
inc
clc
dec
je
rcrb
in
cmpsb
add
inc
mov
dec
out
test
add
mov
push
gs
insl
int3
fs
xlat
inc
jae
popa
lods
fiadds
decl
test
add
and
leave
je
or
insb
sti
int
gs
clc
add
and
je
daa
out
out
mulb
xor
mov
scas
sub
js
pop
insb
fs
jmp
ljmp
mov
dec
jecxz
or
rclb
mov
push
dec
inc
push
push
inc
push
es
pop
mov
xchg
dec
ret
mov
dec
inc
xchg
add
insb
