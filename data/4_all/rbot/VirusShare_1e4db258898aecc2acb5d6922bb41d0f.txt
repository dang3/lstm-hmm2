push
sbb
in
orl
push
mov
lock
repz
movl
adc
push
call
lea
fisttpll
mov
rolb
pop
sbb
push
fsubs
xor
add
cmp
clc
ljmp
inc
cmp
dec
push
mov
or
xchg
dec
adc
cwtl
insb
int
fucomp
adc
sbb
mov
sbbb
inc
sbbl
cltd
mov
push
cwtl
push
push
push
push
xor
pop
push
scas
sbb
mov
stos
leavew
stos
mov
add
pop
adc
test
je
push
jmp
add
push
adc
scas
outsl
add
cmpl
mov
je
dec
or
push
push
ss
push
push
mov
inc
lock
inc
mov
inc
test
mov
lahf
jno
ret
or
cmp
stc
cmp
inc
and
jge
sbbb
xor
orb
aad
sbb
sub
and
inc
out
call
movzwl
cltd
mov
stc
push
dec
sbb
js
xor
inc
in
enter
rclb
lods
adc
lods
arpl
mov
cwtl
pusha
hlt
test
add
push
xor
les
or
clc
adc
adc
push
and
dec
stc
cltd
fcomp
mov
hlt
push
xchg
push
add
and
rcl
push
icebp
push
xchg
clc
push
lods
arpl
negb
push
adc
push
in
fs
cltd
mov
mov
aad
add
push
pop
adc
int3
jo
lret
outsl
cld
insl
sub
add
cmpl
out
testb
or
sbb
dec
sbb
sbb
stc
mov
push
push
int3
and
sbb
rorl
mov
inc
mov
xchg
xor
sub
cwtl
out
dec
and
dec
lcall
call
in
push
and
test
sbb
popf
or
sbb
inc
int3
or
xor
xchg
pusha
negl
adc
arpl
push
and
mov
and
inc
pop
and
gs
adc
test
push
sub
test
push
loopne
je
jae
call
add
cmp
shr
hlt
enter
jl
in
les
cs
movsb
xchg
pop
inc
or
nop
mov
jg
sbb
dec
sbb
repnz
add
test
pop
push
jo
pop
mov
pop
pop
leave
inc
push
xchg
loopne
and
adc
pop
lds
sbb
in
scas
bound
or
fcmovu
arpl
fisubl
add
andl
test
enter
push
call
movb
pop
leave
dec
call
incl
xchg
adc
cltd
sbb
pop
pusha
xchg
inc
stos
mov
jmp
push
add
cwtl
pushf
mov
je
cld
jne
movsl
fdivrl
test
mov
or
jge
mov
inc
iret
dec
dec
aaa
xor
enter
or
enter
xor
ret
sub
push
sub
xchg
sarb
jns
int3
push
inc
sub
cld
sbb
adc
enter
fs
rep
jmp
jne
push
pop
sbb
inc
pop
addr16
insb
mov
pop
repnz
inc
sbb
hlt
push
pop
mov
push
bound
out
fmuls
sub
cwtl
jge
ljmp
adc
xor
es
es
outsl
add
ja
sbb
popl
movb
rolb
stos
aam
mov
sbb
dec
mov
dec
push
or
inc
push
inc
je
les
add
jecxz
shll
and
and
inc
sbb
xchg
push
cli
jmp
sbb
adc
xchg
mov
outsb
pop
adc
icebp
pop
int
in
push
mov
add
fidivs
inc
pop
and
pushf
lock
xchg
push
pop
mov
bound
adc
sub
sub
push
sub
adc
push
ds
dec
dec
lods
push
ljmp
xchg
outsl
sub
lods
jb
xor
adc
test
push
inc
push
dec
push
or
push
call
push
pop
mov
loope
lds
adc
scas
test
xor
sarb
add
call
mov
adc
cmpsl
xorl
jns
test
push
pop
adc
inc
scas
test
dec
enter
out
adc
test
mov
lock
jo
pop
stc
std
adc
sbb
sti
add
arpl
cmp
adc
in
lret
ret
and
adc
daa
cltd
push
xchg
sbb
dec
jge
mov
cld
sbb
jns
mov
jecxz
sub
cld
mov
jle
or
sub
mov
lods
arpl
aam
fbstp
std
cmp
inc
arpl
je
mov
cld
push
push
adcb
cmp
xlat
xor
jns
adc
nop
cmp
and
sbb
xor
and
push
adc
mov
aad
sub
xor
mov
clc
fs
xor
das
loop,pt
lock
push
push
inc
adc
movsb
mov
lea
push
mov
xchg
add
push
les
ret
insb
cmovbe
test
fs
sbb
test
push
adc
sbb
push
gs
aas
inc
sub
mov
and
adc
and
or
nop
jmp
xchg
leave
sub
aam
cmp
or
add
imul
call
fdivp
clc
push
inc
les
rclb
pop
or
push
mov
adc
jmp
fsubr
stc
push
shll
int3
cld
fistl
push
shll
push
and
add
inc
jns,pt
fldlg2
or
add
or
hlt
push
mov
and
test
pusha
and
sahf
aaa
jno
ds
and
mov
aaa
adc
daa
jns
test
cmp
movsb
ss
test
mov
and
push
adc
mov
xchg
pop
jns
mov
outsb
mov
push
inc
cmpsl
xchg
xor
or
inc
mov
xor
divl
sub
cmpsl
insl
pop
xor
sti
inc
push
mov
dec
and
mov
mov
dec
adc
repz
mov
sar
sub
test
dec
push
cwtl
loopne
pop
cltd
jne
ljmp
int3
leave
les
nop
rolb
test
inc
out
daa
pop
call
jae
adc
jne
mov
adc
push
xchg
mov
pop
mov
std
shll
pop
xor
sbb
outsb
fs
jo
dec
js
xchg
xor
test
aas
inc
push
mov
gs
mov
pop
or
cmpsl
lods
nop
or
cmpb
sbb
ja
sub
sahf
jcxz
push
xor
fdivs
pop
fidivrl
fsubr
jb
or
add
sub
add
xor
adc
and
cmpsl
sbbb
pop
jmp
push
fsts
xchg
mov
mov
ret
outsl
shlb
dec
leave
sbb
pop
sbb
addr16
jg
jmp
inc
push
ljmp
and
sub
mov
push
push
xchg
cltd
imul
lock
add
pop
cltd
and
adc
and
movsb
fs
and
sub
std
sub
stos
sbb
push
jecxz
or
adcb
data16
or
and
and
dec
mov
mov
bound
push
in
out
mov
and
sbbb
add
ss
jnp
xchg
aam
inc
xor
loopne
mov
or
fmulp
scas
repnz
imul
inc
pusha
sub
inc
adc
jecxz
aad
lock
ljmp
inc
std
cmp
push
adc
sti
test
insb
loop
mov
bound
jl
mov
xchg
cwtl
xchg
inc
std
mov
std
push
or
pop
dec
xor
sub
fldenv
cmc
leave
inc
or
cmpl
cwtl
pusha
add
mov
ret
mov
fmull
sahf
mov
and
add
push
and
and
dec
sbb
popf
sbb
dec
cs
jg
add
lock
push
push
stos
or
xor
pop
dec
mov
hlt
mov
int3
out
and
addl
gs
adc
arpl
dec
and
push
repz
stos
icebp
cwtl
xchg
icebp
cld
dec
dec
mov
mov
mov
or
and
cmp
cmp
test
cmpsb
pop
sub
cmpl
xor
ret
and
out
adc
jbe
movsl
fdivr
jb
sbb
jae
and
call
adc
rorl
scas
inc
mov
es
inc
outsb
pop
push
nop
fiadds
pop
dec
sbbl
dec
dec
push
mov
cmp
test
inc
push
or
xchg
test
mov
xchg
xor
xor
inc
lea
adc
fbld
xchg
dec
pop
lds
or
dec
aad
mov
arpl
inc
cmp
jne
push
les
rol
cli
aad
xchg
push
xchg
inc
fisubs
cs
add
repnz
das
adc
dec
xlat
and
out
lock
movswl
cld
jae
jae
push
push
mov
je
loop
adc
pop
addl
jle
pop
mov
adc
adc
test
cmp
jno
shl
jge
cs
add
cmp
adc
or
sbb
add
outsb
mov
pop
push
push
sbb
andl
and
adc
dec
roll
xchg
andb
jmp
mov
adc
imul
loop
mov
pop
jmp
cltd
pop
loop
xchg
xchg
fs
mov
push
xchg
sub
orb
dec
xor
pop
dec
data16
and
loopne
sahf
dec
and
test
inc
dec
testl
in
adc
or
test
push
add
sbb
jmp
xchg
out
shr
mov
call
ret
sub
jge
and
xchg
jl
dec
or
and
adc
aas
inc
ficoml
in
push
mov
adcb
shlb
jne
pop
and
pop
popa
mov
nop
scas
mov
dec
repnz
xor
mov
call
xchg
pop
push
push
mov
or
sahf
popf
pushf
sahf
and
xchg
insl
or
mov
sbb
call
mov
aas
dec
les
mov
cmpsb
cmc
negb
subb
mov
imul
mov
into
xchg
dec
push
cmp
inc
push
fs
and
adc
mov
xchg
mov
inc
loopne
sub
test
clc
push
les
xchg
cwtl
adc
mov
xchg
mov
and
bound
rcll
fs
or
pop
push
sub
cwtl
testb
adc
adc
out
mov
loope
or
mov
jne
mov
insl
xchg
sbb
xchg
mov
or
adc
cld
insb
scas
test
popf
mov
xor
mov
adc
dec
cmp
test
cmova
sbb
jecxz
jmp
or
testb
and
xchg
sbb
mov
mov
scas
and
xchg
mov
adc
sub
push
mov
pop
fwait
adc
out
sub
push
mov
adc
inc
mov
and
xchg
mov
xchg
jmp
mov
or
sbb
cmp
or
aaa
and
pop
lock
pop
inc
sbb
sub
hlt
sub
cmp
mov
pop
loope
cmp
shl
jp
lock
outsb
xor
pushf
and
shrl
ljmp
mov
push
add
call
jbe
dec
sbb
sbb
inc
pusha
decb
push
jl
jb
sbb
dec
xor
sub
icebp
xorl
dec
xchg
sbb
xchg
xor
mov
ficoms
fsubrs
ror
mov
push
clc
test
inc
adc
enter
dec
xchg
add
shlb
inc
das
shlb
xchg
mov
jo
sahf
cwtl
dec
pop
fimuls
mov
aas
push
sbb
adc
in
ret
or
push
test
fistl
pushf
mov
inc
cmp
dec
repz
inc
addb
pusha
xchg
cwtl
mov
enter
mov
adc
sub
loopne
pop
cld
xor
jl
mov
inc
cltd
adc
pop
jae
xor
mov
inc
push
jnp
jge
inc
aam
add
inc
rcl
loopne
mov
and
adc
pop
and
mov
cmp
or
dec
inc
incb
cmp
sbb
sub
sbb
nop
sbb
add
enter
adc
cmp
adc
adc
add
jecxz
or
loop
addb
notb
and
mov
add
sub
xor
inc
mov
aad
xchg
xor
push
inc
mov
inc
in
pinsrw
xor
pop
inc
mov
jnp
shlb
test
inc
jbe
dec
or
inc
out
sub
dec
adc
mov
mov
cmp
add
sbb
ret
jbe
popa
push
push
mov
pop
push
mov
adc
and
cmpl
leave
cltd
scas
xchg
jmp
adc
pop
xor
in
lock
fstl
inc
mov
mov
xchg
xor
bound
out
fistl
inc
pop
mov
sub
push
or
outsl
inc
pop
inc
movsbl
leave
nop
cmp
add
popf
mov
mov
or
test
clc
mov
mov
clc
jp
push
jno
push
lds
je
and
push
cwtl
daa
inc
test
stos
mov
xor
jne
push
dec
mov
sbb
or
add
dec
inc
sub
sub
in
or
bound
test
inc
add
cmp
jbe
cs
cli
sub
adc
add
or
jne
nop
aam
jl
subb
test
adc
movsl
adc
jg
aam
mov
nop
xor
aaa
dec
jg
orl
loopne
sub
mov
dec
jl
fldcw
or
pop
pop
das
add
cli
addb
cmp
xchg
fdivrl
cmpsb
push
and
out
or
or
jns
das
shlb
leave
and
out
int3
mov
test
bound
aam
ret
push
mov
out
mov
sbb
pop
and
mov
jo
jae
mov
inc
push
add
pop
test
cmp
ss
inc
daa
mov
and
push
inc
rolb
call
dec
mov
jmp
loop
xchg
cmp
jne
in
push
cmp
and
imul
xchg
je
loope
mov
shl
or
orl
dec
xchg
xchg
sahf
fsubrl
dec
adc
adc
push
or
push
dec
jo
rcrb
push
xchg
pop
mov
incl
push
push
test
xor
mov
cmp
mov
mov
push
icebp
and
std
inc
aam
mov
add
push
adc
jle
dec
mov
and
push
shrl
aas
inc
mov
xchg
ret
cmp
movl
or
dec
mov
divb
pop
addr16
inc
mov
adc
add
adc
or
jg
test
jnp
xor
ret
add
adc
push
xchg
adc
pop
andl
sbbb
xor
cmp
push
xor
add
ja
cmp
add
xchg
pusha
ds
pop
sub
pop
push
enter
lods
ror
sti
jecxz
jp
pushl
lea
pusha
ss
xabort
shrl
and
in
add
push
fbstp
outsl
push
dec
pop
mov
test
pop
paddb
push
rclb
popa
test
push
and
call
sub
inc
mov
test
push
adc
cli
shrb
jne
mov
and
mov
outsl
push
sbb
ds
inc
in
adcl
leave
test
pop
jg
iret
and
enter
clc
mov
mov
jno
aad
test
das
inc
lds
dec
insb
dec
sbb
mov
mov
mov
and
pop
popa
xchg
mov
ret
aad
jecxz
and
push
push
imul
jno
dec
imul
gs
push
test
pop
cmp
inc
push
xchg
cmp
mov
mov
jge
or
xor
mov
inc
pop
or
lea
out
ror
mov
adc
ret
mov
inc
or
shl
or
lock
js
inc
and
cmp
fdivrs
cltd
jg
imul
xchg
mov
cmp
xadd
push
test
ljmp
and
jle
cld
or
push
lcall
movsb
inc
mov
and
mov
insb
fs
test
loop
push
lods
or
dec
push
sub
inc
sub
bound
push
jae
push
mov
lods
mov
or
in
movsb
push
sub
cld
inc
inc
inc
add
cmp
sti
mov
or
xor
pop
stc
sub
sbb
jno
fsubrs
mov
lret
nop
in
and
enter
mov
or
dec
sub
push
cld
iret
cmp
push
es
enter
mov
test
dec
push
les
xchg
sahf
xchg
cmpsl
jno
pop
cld
es
pop
push
pop
sub
aad
inc
or
enter
insb
fld
call
inc
cld
add
push
icebp
cltd
xchg
movsl
pop
pop
leave
push
xor
sub
mov
mov
xchg
or
xchg
fsubl
push
or
mov
adc
pop
gs
int3
dec
pop
hlt
sbb
inc
fistl
sub
pop
adc
sbb
iret
inc
mov
mov
xor
shlb
push
jbe
inc
test
es
add
sbb
push
mov
loop
bound
or
sub
mov
or
jmp
and
bound
pop
jae
movsl
pop
or
ss
roll
cwtl
push
adc
movsl
mov
inc
adc
in
std
test
or
xchg
xor
pop
shl
in
push
ds
xor
adc
push
adc
bound
out
shlb
add
movsl
sub
lods
aam
xor
and
je
push
lock
sbb
push
inc
les
add
leave
js
push
cmp
pop
pop
and
jmp
xlat
aaa
das
push
sbb
cmp
or
xor
shlb
test
push
jle
call
ss
cmp
and
push
outsb
and
pop
xor
mov
imulb
test
mov
xor
test
lods
add
jmp
mov
jecxz
dec
aas
fs
xchg
mov
adc
sub
je
and
mov
mov
pop
mov
mov
out
and
dec
sub
mov
mov
roll
push
and
shrl
xor
push
cmpb
xorb
mov
fsts
mov
movsb
fstl
shl
shl
insl
int3
fmull
icebp
aas
shlb
adc
enter
test
call
rcrb
jl
push
push
js
mov
xchg
sub
inc
adc
xchg
mov
and
add
movsb
push
cmp
add
or
icebp
dec
inc
incl
pusha
fadds
pop
sbb
add
sbb
adc
movsb
or
dec
add
faddl
push
adc
inc
xchg
fnsave
mov
cmp
lock
jbe
sbb
inc
rorl
pop
add
movsl
ret
lret
add
xchg
aaa
push
xor
stc
add
loop
mov
in
and
enter
lidtl
lret
loop
add
cltd
inc
icebp
cs
add
push
push
inc
sub
sub
mulb
cmp
enter
jns
fists
add
inc
add
push
lret
mov
call
cmp
in
jb
mov
dec
leave
sbb
sub
adc
inc
adc
and
jae
sub
idivb
and
xor
fldl
lcall
into
mov
loop
mov
push
testb
mov
orb
inc
inc
out
add
xlat
hlt
shrl
mov
and
in
adc
js
xchg
pop
ret
and
xor
xchg
dec
push
es
cmp
push
adc
sub
lea
pusha
test
cmp
mov
shlw
cmp
mov
lret
jne
loopne
cmp
sbb
test
push
push
call
aam
leave
mov
mov
cltd
ds
mov
out
in
cmp
decb
inc
push
sub
btc
and
add
fdivrl
and
pop
dec
mov
inc
and
cmp
ficomps
adc
popf
das
stos
inc
test
jl
imul
pop
loop
ret
leave
faddl
inc
inc
pop
mov
repz
inc
push
jbe
pop
mov
add
push
xor
pop
dec
lods
test
sub
jp
hlt
xchg
and
lods
push
iret
mov
jge
stos
out
out
push
scas
test
sarl
in
mov
call
les
add
inc
mov
lret
mov
mov
sti
ret
outsb
in
pushf
adc
jns
mov
mov
das
in
out
mov
adc
xor
sbb
sbb
or
movsl
cli
xor
mov
mov
or
add
hlt
xor
int3
add
sub
outsl
testb
cmc
dec
cmpl
push
stc
mov
adcb
pop
sbb
xchg
andl
jmp
popa
pop
add
jno
mov
or
sbb
ret
ja
call
test
jbe
and
sti
adc
nop
and
push
add
cmpsb
and
xchg
pop
push
or
fnstenv
add
sbb
fmuls
cmp
mov
sbb
hlt
fmul
xor
ret
mov
adc
aaa
call
pop
mov
imulb
stc
cmp
jae
stos
js
pop
rclb
repz
repz
ret
dec
dec
or
push
jecxz
iret
icebp
jmp
add
xchg
fcomip
sbb
jmp
nop
pop
pop
jbe
sbb
jne
js
jo
pop
add
jae
sub
bound
in
cltd
sbb
inc
stc
cld
dec
or
dec
fst
test
in
int3
incb
call
push
xor
and
add
dec
int
xchg
adc
add
inc
pop
ret
and
and
enter
dec
add
sarb
lret
mov
cmp
into
sbb
fists
dec
push
das
mov
cli
dec
fnstcw
cmp
push
and
adc
jle
out
ljmp
stos
jecxz
dec
pop
cmp
pop
cli
cmp
sub
into
enter
jmp
cmp
jae
or
fildll
lret
push
orb
add
cmpsb
je
xchg
jb
cld
add
lea
mov
aas
cltd
or
push
cwtl
hlt
mov
pop
push
adc
push
ds
je
or
mov
adc
mov
je
sbb
call
pop
shl
mov
and
mov
es
or
or
movb
dec
sub
fmuls
push
add
mov
xchg
sbb
or
insb
cmpsl
sub
and
xor
and
popa
test
iret
mov
cmp
jge
and
pop
insl
imul
adc
inc
lea
add
out
movsl
les
or
out
pusha
pop
jmp
lahf
inc
adc
enter
pop
mov
cmp
jl
lcall
dec
scas
cmp
addr16
clc
mov
and
mov
xchg
jl
lcall
stos
push
test
sub
sbb
sti
and
sbb
xor
jmp
mov
loope
sbb
cltd
add
and
sbb
adc
testb
jne
pop
add
orb
mov
stos
cli
inc
sarl
ret
aam
mov
out
rolb
test
cmpb
push
or
and
add
xchg
sub
popa
sub
mov
lea
push
sbb
shlb
xor
testl
data16
adc
push
shr
push
std
sbb
and
sbb
fwait
xor
pusha
xor
push
sbb
call
jecxz
push
xchg
vmread
mov
lret
sbb
fldenv
xchg
js
lock
pop
sub
ucomiss
or
xor
je
inc
ret
fstpt
sbb
jne
xor
push
shlb
mov
es
dec
stos
push
xchg
in
insl
sbb
mov
inc
sub
rdtsc
fcmovnbe
or
sbb
dec
push
test
gs
inc
mov
dec
mov
mov
sbb
or
and
push
sub
xor
sub
es
cmp
mov
or
imul
les
dec
cmpsl
xor
or
mov
pop
test
xchg
add
mov
adc
addr16
shrl
add
push
push
push
and
das
in
movb
pop
mov
xchg
dec
enter
cs
xchg
or
xor
dec
and
data16
jnp
inc
dec
jo
ss
push
adc
sbb
xchg
xor
mov
fs
cwtl
movsb
jl
dec
jnp
mov
push
dec
pop
xchg
push
dec
mov
xor
cmpsl
cmp
and
or
sub
fs
mov
dec
aaa
sub
jmp
inc
sub
lahf
push
movsb
sub
sub
sahf
mov
sub
movsb
jns
or
pop
push
in
and
adc
aaa
mov
jge
pusha
mov
mov
xchg
shl
in
mov
repz
lcall
fsubl
hlt
aam
pop
mov
add
pop
pop
xor
sahf
sub
loopne
inc
data16
adc
sub
cltd
addr16
stc
inc
mov
aaa
call
push
int3
xchg
test
out
or
std
in
xor
cwtl
repnz
in
imul
sub
mov
and
inc
pop
sub
push
movsl
adc
lock
push
sub
in
sub
and
pop
loopne
jl
xor
xlat
pop
loop,pn
xor
into
xor
dec
inc
mov
inc
mov
subl
mov
adc
dec
push
repz
sub
inc
jnp
sbb
je
adc
inc
dec
imul
mov
jmp
add
mov
mov
push
cmp
mov
dec
adc
lods
xor
jmp
imul
in
or
aam
lock
fmuls
out
aad
cmpsb
or
mov
sbb
jl
and
cmp
test
add
jne
adc
pop
int3
push
dec
test
das
mov
mov
and
push
repnz
fwait
inc
sbb
mov
xor
mov
lret
dec
es
push
les
int3
mov
into
push
pop
xchg
orl
loop
scas
pop
jl
mov
or
xor
cmp
jg
sub
out
cmp
pushf
inc
cli
pop
mov
mov
dec
push
addb
push
leave
cmpsb
sbb
adc
js
pop
in
or
test
ret
pop
mov
xor
add
cli
add
mov
mov
rcrb
jmp
pop
jbe
jg
mov
xlat
inc
data16
in
rolb
pop
int
das
in
inc
adc
adc
mov
les
int3
hlt
push
clc
inc
xor
rep
xchg
mov
out
sub
je
mov
xor
and
push
inc
jl
test
inc
data16
in
add
jg
stos
js
xor
cs
sub
in
sub
push
into
jbe
call
mov
inc
in
fisttpl
std
add
pop
test
gs
lds
and
in
or
mov
loopne
rolb
mov
add
jb
xor
ret
mov
testl
shl
fs
cmp
ds
sub
xchg
xchg
adc
int
sbb
jp
popa
hlt
mov
aam
push
xor
and
jne
loope
sbb
js
cld
pushf
adc
or
pop
xchg
imul
dec
mov
rclb
jl
scas
je
adc
imul
inc
movsb
test
cmp
mov
pop
mov
cmp
xor
out
ljmp
mov
outsb
je
cmpsb
cmp
push
lcall
shl
lea
jle
sub
cmp
and
dec
add
mov
push
and
pop
in
clc
test
or
push
fisubrs
or
mov
mov
sub
mov
in
lods
lret
movsl
test
inc
test
cld
mov
adcb
call
mov
xchg
add
xor
or
push
push
mov
repnz
lods
lcall
je
or
or
push
test
sub
xchg
push
enter
jl
mov
les
fsubrl
mov
and
mov
enter
iret
mov
ljmp
fsubl
repz
jmp
and
sbb
nop
xchg
insb
loop
mov
adc
jo
addb
cmp
cmp
xchg
gs
aaa
and
out
out
and
in
and
jmp
pop
dec
inc
icebp
or
mov
and
cmp
in
call
cmp
mov
pop
mov
push
and
jle
or
test
andb
cmp
push
fnsave
adc
pop
daa
int3
inc
mov
add
es
cmpsb
sbb
push
ja,pn
mov
push
fcoms
or
push
cmpsb
adc
mov
lea
shrl
mov
and
insb
mov
cli
adc
sahf
test
aas
cld
mov
icebp
and
xor
sub
pop
or
jge
das
nop
repnz
je
dec
mov
out
xor
lret
ret
cld
jmp
push
push
push
cli
push
push
push
jg
sub
xor
add
pop
mov
mov
jmp
add
das
fs
pop
and
mov
stc
pushf
add
pop
jmp
dec
je
sbb
jo
mov
pop
shll
jl
cmp
add
xchg
lcall
sub
ss
dec
push
js
ret
push
addr16
adc
test
hlt
mov
mov
insb
sub
cld
lock
mov
dec
xor
mov
mov
mov
mov
inc
pop
lea
mov
inc
adc
push
push
ljmp
add
popa
into
push
fidivrl
inc
addr16
push
xchg
inc
xor
xchg
mov
fsubrs
or
ljmp
mov
sub
ss
and
enter
inc
ret
add
aad
imul
jge
pop
xchg
inc
and
cmp
cld
xchg
bound
jb
mov
mov
xchg
cmc
jo
fdivrl
sub
enter
add
out
cld
mov
mov
adc
push
in
and
mov
jbe
mov
sbb
stc
xchg
add
or
jmp
adc
repz
mov
pop
inc
mov
jb
rcll
adcl
outsl
aaa
lods
in
stos
inc
xchg
mov
in
add
out
dec
pop
and
inc
adc
push
inc
inc
and
mov
arpl
xor
or
push
xor
repnz
outsl
xchg
dec
in
and
xor
xor
add
adc
and
ds
mov
adc
adc
and
adc
jbe
cmpsl
xchg
xor
bound
lds
push
jno
pop
dec
mul
mov
pop
pushf
adc
stos
gs
mov
pop
push
add
adc
daa
pop
clc
pop
xor
mov
cmc
push
xor
and
mov
mov
loopne
movsb
and
das
subb
dec
mov
sub
or
xchg
mov
imul
movsb
enter
add
push
mov
lea
call
push
mov
clc
enter
int3
mov
imul
dec
and
sub
push
and
in
sub
sbb
fmull
jne
cmp
pop
out
dec
mov
xlat
or
push
add
xchg
cld
push
imul
aad
rorl
or
aaa
push
pop
xor
stos
out
andps
sbb
test
and
add
mov
xchg
test
jne
ret
les
jno
mov
std
mov
mov
or
push
cmp
daa
scas
loopne
je
inc
jae
push
adc
lock
or
jae
mov
adc
cmp
pop
adc
push
call
xor
add
lods
movsb
fdivr
mov
adc
mov
jbe
roll
or
je
adc
add
jb
jmp
dec
test
jae
lea
pop
mov
adc
mov
xor
in
test
popa
jmp
dec
push
cltd
xchg
push
adc
inc
push
popa
mov
adc
push
ret
loop
or
aam
jmp
inc
int3
and
lahf
les
mov
push
push
and
pushf
adc
add
sbb
adcb
loop
sbb
invd
push
push
sbb
or
pop
xchg
cwtl
cmp
inc
ja
je
adc
enter
or
adc
cmp
xor
mov
xchg
mov
fs
call
pop
adc
dec
and
mov
add
call
jo
push
and
inc
pushw
push
std
les
sbb
jmp
cmpsb
inc
inc
enter
cvtps2pi
xor
hlt
adc
or
lret
mov
adc
sub
mov
aam
clc
aaa
cmp
cmp
push
pop
dec
mov
rclb
test
adc
pop
push
sbb
adc
inc
cmp
push
pop
inc
and
pop
sbb
mov
dec
adc
leave
jb
fs
sbb
sub
push
orl
cltd
fldcw
pop
jp
popf
jne
icebp
dec
jge
insb
push
pop
xchg
xchg
pop
push
stc
xchg
add
xchg
ret
mull
push
mov
push
or
push
sbb
in
gs
pop
sbb
je
ds
xorl
inc
insb
sbb
sub
and
mov
dec
pop
mov
sbb
jecxz
or
mov
arpl
or
mov
imul
xchg
xor
stos
incl
clc
xchg
and
repz
fmuls
fistps
adc
push
adc
mov
mov
into
gs
bound
sbb
hlt
xlat
pop
lods
xchg
inc
subb
dec
add
std
push
push
mov
sbbb
adc
movsb
jmp
into
sub
je
add
adc
push
xchg
fwait
add
push
pop
cltd
add
cmp
sub
cs
add
call
cs
inc
cltd
push
sub
call
push
or
adc
rorl
xor
roll
lods
add
fidivs
add
jb
fmull
rorl
movsb
std
cld
shr
subb
scas
or
push
loope
jnp
xchg
test
push
push
adc
sub
adc
ds
xor
fidivrs
popf
enter
or
or
and
pop
push
xchg
mov
stc
adc
or
push
test
ficoms
adc
xor
sub
arpl
hlt
dec
addr16
sub
inc
xlat
test
aam
movsb
sub
jnp
movsl
adc
rolb
or
jb
or
sbb
sti
inc
jae
les
inc
mov
mull
jge
sbb
inc
adc
xlat
add
jmp
jns
and
sarl
jle
inc
stc
and
jg
iret
xor
mov
mov
in
cmp
out
inc
mov
fisttps
inc
out
enter
xlat
popf
enter
push
sarl
jb
dec
pop
lahf
jmp
and
imul
es
ret
lock
jne
or
or
mov
ljmp
test
mov
xchg
or
mov
int3
mov
pop
sbb
aaa
sub
aaa
and
dec
push
clc
add
pusha
pushf
push
push
imul
pushf
jb
cmp
xchg
mov
xor
jg
jmp
das
inc
push
in
push
pop
xchg
xor
cmp
or
into
push
adc
call
and
and
ret
dec
inc
aas
mov
or
icebp
jmp
sbb
push
cld
test
daa
adc
mov
sub
rol
mov
add
gs
cmp
sub
sbb
lods
add
sbb
cwtl
fisubs
jmp
fwait
add
stos
into
xchg
sbb
mov
jg
les
push
adc
mov
xchg
test
mov
std
stos
cwtl
adc
sub
mov
mov
call
les
xor
inc
mov
lcall
pop
adc
sbb
cmp
mov
sti
xrelease
lods
add
lret
add
or
enter
test
lods
stc
adc
clc
adc
aaa
stos
jb
mov
pop
push
jmp
mov
cmovp
call
rorl
inc
cwtl
adc
inc
or
inc
cmp
xchg
mov
push
sub
or
nop
pop
cmpl
cwtl
fldt
or
sbb
cltd
pop
adc
jo
jmp
scas
xor
push
and
sub
or
dec
and
and
test
rcl
test
je
and
ret
dec
pop
mov
sbb
pop
movsl
and
aam
hlt
adc
testl
xchg
jae
inc
les
jb
lock
es
movsb
icebp
fstpt
inc
mov
das
je
jae
xchg
xchg
push
js
jo
dec
pop
lods
jnp
mov
divps
cvttps2pi
and
xor
stos
push
sub
sub
lea
cmp
nop
enter
mov
jne
adc
sbb
adc
sub
addl
cs
add
pop
cmpb
mov
inc
pop
cmp
loopne
push
inc
call
lock
jb
lods
test
in
cld
sbbb
push
shrb
adc
or
adc
adc
hlt
or
push
xchg
mov
or
jmp
mov
sbbb
in
add
adcb
dec
adc
call
and
push
push
pop
and
mov
adc
enter
xor
jmp
cmpsl
les
jae
adc
mov
por
pushf
mov
cwtl
push
rcll
addr16
and
inc
jns
outsl
mov
or
inc
fisubs
pushf
fmull
xchg
or
add
enter
dec
gs
movsb
adc
or
aam
pop
nop
lods
jb
daa
mov
adc
dec
sub
pop
cltd
movsb
cwtl
or
cmp
mov
adc
and
add
out
mov
push
and
orb
adc
adc
dec
bound
subl
fcmovnu
mov
inc
cli
push
sbbb
push
clc
call
icebp
lock
and
outsl
pusha
pop
adc
mov
insl
xchg
test
xchg
les
cmp
add
jmp
lock
sub
test
adc
mov
dec
ss
dec
or
inc
push
mov
inc
dec
insb
dec
mov
lcall
xchg
or
mov
xor
push
cmp
sub
dec
mov
jbe
push
lret
or
dec
iret
lds
sbb
scas
lcall
je
jge
dec
shll
clc
add
mov
add
je
mov
pop
cmpb
daa
jl
dec
jne
inc
push
cltd
xchg
mov
mov
cmpsb
scas
pop
loop
cltd
jns
rcll
leave
ja
jns
and
cld
mov
and
push
dec
mov
sub
test
add
mov
popf
inc
push
and
xchg
jo
sbb
in
mov
push
popa
fildl
jle
loope
imul
or
cs
dec
sub
sbb
aaa
mov
or
ja
in
mov
sbb
and
in
mov
dec
repnz
ss
addl
mov
or
adc
not
int3
adc
jns
add
mov
and
sbb
mov
and
mov
leave
adc
cltd
xor
jns
or
adc
jl
xlat
cld
sbb
popa
cmp
or
push
sbbb
jo
addb
lds
leave
adc
call
push
push
pop
adc
jbe
sbb
sbb
jne
push
dec
push
int3
jg
mov
mov
push
jmp
lods
push
push
ret
cwtl
addr16
dec
jb
and
movsb
jns
cld
and
loopne
mov
ret
xchg
call
cmp
dec
arpl
push
testl
mov
paddsb
inc
xchg
adc
push
test
and
push
and
popf
inc
loope
imul
cwtl
adc
ret
dec
pusha
or
xchg
dec
pop
and
and
es
sbb
mov
popa
call
nop
jno
scas
push
iret
inc
xchg
insb
dec
mov
shll
popa
xor
cmp
xor
push
leave
cmpsb
aad
fldcw
mov
jno
hlt
push
xor
xor
lods
and
push
sbb
sub
jmp
fcoms
cld
push
into
add
or
add
inc
xor
push
rclb
ss
push
add
mov
leave
mov
pop
dec
fs
xor
jno
cmpsl
bnd
or
insb
push
sti
xor
or
jge
fisubs
dec
in
add
neg
jns
pop
mov
sbb
adcb
mov
scas
xor
psllw
xchg
jmp
xchg
xchg
push
jmp
jecxz
or
jo
or
cmpb
pop
mov
lret
mov
push
inc
push
call
ljmp
or
adc
cmovg
je
nop
cs
nop
lock
repz
jne
sbb
ror
xor
dec
inc
dec
mov
stc
clc
je
mov
mov
push
mov
dec
push
in
pop
fsts
test
and
jecxz
adc
sbb
pop
inc
push
shrb
xlat
cmpsl
or
push
push
mov
add
std
adc
dec
pop
sub
mov
cmp
bound
inc
das
jne
push
push
adc
cmc
pop
imul
cmpsl
pop
jo
out
sub
test
mov
jge
scas
and
data16
fiadds
repnz
lock
jae
xchg
push
adc
mov
pop
add
lock
jno
clc
xchg
lret
cmp
loopne
test
jno
lcall
inc
clc
aas
sbb
adc
adc
cmp
add
nop
inc
in
jmp
sub
xor
mov
outsl
out
fs
sub
pop
jb
add
cmp
cltd
daa
push
call
lods
pusha
sbb
adc
sbb
and
adc
psubw
push
clc
jne
sahf
lock
les
adc
call
loop
and
xchg
pop
dec
adc
jecxz
mov
sub
pop
cmp
ret
sbb
or
push
pop
mov
imul
or
push
ror
lahf
lea
jnp
and
pop
xor
pop
outsl
pop
xor
mov
or
cli
pop
hlt
sub
adc
pop
lock
aam
and
mov
call
mov
cmp
sub
ljmp
nop
sbb
leave
cmpb
dec
pop
and
mov
adc
inc
or
add
stos
inc
push
and
test
inc
adc
fiaddl
adc
gs
push
and
push
push
sub
xchg
xor
sbb
ss
jno
mov
mov
addl
frstor
xor
sbbb
pop
ljmp
aam
int3
mov
push
jge
scas
push
mov
out
inc
jecxz
fs
sub
cmp
jge
es
insl
les
push
add
adc
xor
pusha
loope
xlat
inc
mov
adc
cltd
pop
enter
adc
mov
lret
addr16
cmpsl
test
mov
bound
jne
inc
xor
nop
repz
adcb
inc
xor
lea
movzbl
push
leave
shl
je
fs
or
mov
mov
call
imul
mov
enter
add
cmp
and
lret
lret
pop
test
sub
enter
dec
mov
or
fwait
or
cmp
mov
test
addl
pop
cmp
cmp
int3
cld
daa
inc
mov
push
mov
mov
imul
push
stos
popa
xchg
mov
call
cmp
mov
mov
add
mov
push
add
pop
shrl
or
mov
adc
push
imul
mov
inc
jb
sub
cwtl
hlt
pop
add
push
out
or
dec
and
lock
xor
stos
sub
jb
int
sub
mov
cli
push
xchg
in
adc
mov
dec
test
ret
call
adc
daa
sub
adc
xor
mov
or
in
or
jnp
mov
adc
and
inc
repz
jns
orl
loopne
cmp
rolb
cwtl
jbe
jne
lcall
inc
adc
push
call
xchg
arpl
mov
push
mov
jnp
push
mov
xor
sub
or
mov
mov
test
lcall
mov
inc
adc
idivl
enter
push
rol
call
movl
or
and
push
and
andb
add
inc
pop
cld
inc
outsb
add
and
dec
adc
adc
testl
push
push
insb
pop
inc
addr16
cwtl
aaa
or
push
dec
pushf
or
movsl
lds
and
les
in
cs
add
jo
ljmp
adc
pop
lock
test
push
xchg
mov
pushf
loope
and
loopne
dec
pop
jg
mov
test
pop
inc
add
or
or
push
addb
sbb
push
add
sub
ljmp
out
and
adc
daa
push
add
jmp
or
adc
dec
mov
xor
push
nop
adc
cmpsb
je
or
je
or
adc
dec
or
test
xchg
cmp
hlt
lea
dec
or
sub
mov
inc
push
enter
call
mov
aas
sti
sbb
inc
add
inc
cmc
jns
adc
lcall
cld
adc
dec
rcrl
sub
in
dec
or
add
push
sbbb
mov
ds
push
cs
adc
inc
jb
mov
dec
fisubrs
or
push
pop
dec
pop
out
pop
xchg
inc
push
jecxz
popf
mov
inc
sub
cli
pop
jbe
inc
dec
jno
movsb
and
fs
or
xchg
push
mov
push
lahf
push
xor
scas
mov
dec
jb
push
and
inc
gs
mov
sti
push
dec
pop
pop
imul
sbb
mov
mov
and
movsl
clc
bound
add
loope
ds
jecxz
notl
test
or
fidivs
jns
outsl
imul
pop
insb
loopne
clc
mov
jecxz
mov
mov
adc
out
cmp
pop
fmuls
lahf
push
outsl
adc
std
nop
mov
add
add
push
imul
xchg
stc
add
ficomps
ds
jne
cmp
mov
dec
repz
dec
je
xchg
and
pusha
pop
or
or
in
mov
sub
je
std
cwtl
inc
mov
adc
xor
call
enter
cmpsb
stos
adc
outsb
popa
loopne
jnp
nop
sti
adc
adc
mov
sbb
jb
adc
shlb
pop
pop
xlat
pushf
insl
jp
aas
mov
adc
push
fwait
into
mov
cld
enter
das
dec
cs
imul
stos
xchg
and
insl
clc
test
fdivp
xchg
xor
and
xor
mov
or
mov
cmpb
fldt
push
or
lds
adc
adc
insb
push
test
sbb
push
push
xchg
or
xlat
dec
mov
fcmovbe
mov
push
cld
cmpb
pop
aad
adc
out
xor
mov
pop
cwtl
dec
and
popf
jns
in
lret
add
mov
sub
loope
mov
cmp
fs
dec
pop
in
and
push
push
or
cmp
adc
mov
adc
mov
enter
cltd
mov
les
mov
movsb
inc
mov
xchg
negb
pop
test
jne
push
sbb
cmp
xor
notl
call
xor
or
lcall
cmp
xchg
in
mov
ficompl
scas
mov
push
addb
add
push
cltd
jl
or
mov
jae
rcrl
pop
lock
hlt
iret
call
les
cmpsb
add
xor
dec
fcoms
lds
push
movb
sub
daa
jmp
adc
mov
or
xchg
xchg
movb
data16
mov
xchg
cmpsl
xchg
adc
xor
push
push
push
push
in
mov
es
mov
pop
in
adc
lods
xchg
mov
xor
fmuls
mov
mov
in
ficoml
dec
icebp
movsl
push
rorb
enter
add
pop
ja
xlat
cmp
popf
in
jg
jmp
pop
bound
sbb
dec
aas
mov
aam
sub
and
icebp
xor
mov
push
mov
mov
out
dec
sub
and
inc
add
rolb
push
mov
dec
sub
jle
xchg
mov
cmp
hlt
or
push
test
mov
xchg
fsubrs
movsb
jnp
mov
fs
ficompl
sub
sbb
sbb
inc
fsubl
jp
mov
inc
pusha
movsl
and
imul
bound
push
in
fs
in
or
and
sub
jle
ret
mov
les
lea
cmp
add
ja
in
sub
jmp
or
test
fiaddl
test
or
xlat
insl
cltd
or
call
dec
xchg
xor
test
dec
scas
inc
ljmp
jge
popf
adc
dec
lock
movsb
jb
push
movsb
repz
cli
adc
stos
lret
push
dec
jo
mov
sub
adc
push
enter
xchg
pop
test
cmp
enter
mov
mov
jae
sub
lock
repz
int3
popa
or
and
in
test
and
je
adc
mov
mov
xchg
and
push
daa
push
js
and
ja
and
push
jns
dec
ror
jbe
push
cmp
cltd
cmp
mov
mov
dec
repnz
jne
ss
or
or
ds
popa
ret
and
adc
push
mov
dec
les
aad
out
cld
call
or
adc
pop
stc
jl
fdivs
adc
and
imul
xchg
mov
stos
jmp
adc
mov
sbb
shr
lea
dec
or
les
push
xchg
in
pop
jb
push
adc
aam
mov
adc
pop
es
dec
mov
jp
pop
adc
negb
mov
jbe
adc
lock
adc
push
pop
mov
jmp
jns
imul
mov
notl
mov
add
jge,pt
and
cmpsl
adc
xchg
and
mov
xor
or
push
iret
enter
inc
pop
dec
xchg
cld
pop
pop
dec
xchg
inc
sbb
fcom
mov
pop
jle
loopne
pop
and
adc
adc
les
test
enter
pop
les
or
popl
fcoms
pushf
sbb
adc
lcall
jno
dec
and
imul
stos
or
jmp
inc
adc
sahf
push
aad
push
out
cmp
pop
fwait
add
out
sub
xlat
dec
fisttpl
ss
into
lods
push
push
loopne
add
sub
pop
insb
or
mov
pop
cmpsl
pop
popa
sbb
mov
pop
dec
and
imul
xchg
mov
bound
pop
xchg
inc
mov
add
add
and
pop
mov
shll
cmp
dec
repz
sub
popa
push
push
xchg
adc
mov
mov
push
adc
push
xor
mov
push
push
or
or
stc
add
in
add
test
jecxz
pop
jg
sbb
gs
popf
jno
imul
aas
mov
test
shl
call
sbbb
in
dec
cwtl
inc
icebp
jmp
shrb
push
pop
mov
pop
adc
pop
call
or
call
in
and
and
or
fildll
mov
popf
push
add
lahf
bound
fisubs
leave
inc
notb
outsb
add
cmp
je
cmp
xor
add
rorb
cli
xchg
mov
enter
in
popa
mov
sbb
add
aam
adc
push
hlt
and
je
push
dec
xor
sub
dec
out
pop
pusha
or
sub
je
dec
cmpsl
sub
imul
or
sbb
jne
lods
sub
push
push
gs
stos
mov
push
push
cld
movsb
or
inc
mov
std
mov
daa
or
or
or
hlt
int3
mov
rcrl
ja
push
cltd
sub
add
out
and
mov
stos
clc
push
sbb
test
mov
jp
mov
movsb
or
xchg
push
xchg
sti
mov
add
nop
push
nop
and
push
mov
in
push
mov
sub
enter
adc
mov
push
bound
xlat
jb
cli
ljmp
test
push
cmp
je
sti
cltd
out
push
push
test
add
pop
lock
ja
addr16
or
lock
push
shr
add
jmp
lea
push
cmp
sbb
out
imul
pop
aad
mov
lock
dec
sub
loope
jne
or
sub
test
aas
sbb
aaa
mov
mov
mov
add
xchg
enter
pop
pushf
mov
or
dec
in
push
push
ret
or
push
mov
push
inc
hlt
mov
mov
jecxz
rcrl
sbb
sbb
sbb
dec
or
in
je
inc
notl
fsubrs
notb
or
jmp
or
push
xlat
mov
es
lock
or
js
enter
and
jl
pusha
dec
fbld
adc
dec
in
andb
mov
and
adc
jp
or
and
xor
sarb
push
fsubrp
inc
adcl
mov
je
and
adc
in
xchg
cld
and
add
lret
fsts
je
adc
fisttpl
jbe
scas
inc
pop
pop
jmp
inc
outsl
and
inc
mov
sub
scas
cmpl
add
lret
jg
mov
adc
adc
mov
dec
add
inc
or
jecxz
push
adc
push
loopne
and
and
sub
push
sub
sub
sub
push
insl
jno
mov
rorb
mov
ds
test
loope
call
dec
jbe
lea
or
pushl
mov
jge
stc
nop
cld
jmp
leave
outsl
pop
scas
shrl
or
sub
sub
dec
stc
shl
in
mov
adc
in
mov
mov
dec
dec
in
stc
cld
add
cmp
add
pop
dec
push
cmc
scas
push
insb
push
mov
in
enter
push
cmc
xor
int3
jne
sub
sbb
stc
inc
dec
pop
mov
cltd
cs
sbb
cmp
popa
and
inc
cmp
dec
subl
lea
mov
sbb
mov
test
mov
or
mov
cmp
xor
pusha
pushl
leave
jbe
and
adc
adc
cltd
movsb
xchg
sbb
mov
mov
xchg
imul
add
mov
jecxz
sub
adc
sub
mov
xchg
sbb
xor
and
fiaddl
xor
jg
push
add
push
xor
dec
xchg
adc
jecxz
imul
or
insl
negl
std
andl
cld
andb
jecxz
and
js
xchg
nop
dec
rcll
mov
mov
les
daa
hlt
std
and
or
stc
repz
movsl
jmp
dec
inc
add
xchg
cmp
sbb
cmp
lea
add
jns
in
out
mov
push
mov
fs
popa
cwtl
add
adc
decb
call
cmpb
jne
adc
and
sbb
push
fs
int
inc
mov
pop
clc
push
push
sbb
mov
adc
test
test
pop
daa
mov
add
mov
and
pop
inc
in
cmp
push
and
adc
sbb
add
lahf
insb
and
movsl
sti
push
and
and
int3
or
adc
mov
mov
dec
mov
mulb
cmpb
adc
pop
ss
dec
or
repnz
das
mov
bound
lahf
out
ja
and
cmc
push
pop
jle
test
enter
push
in
dec
ficoms
shrb
lock
dec
mov
adc
xchg
dec
test
cli
sbb
dec
mov
adc
xchg
sub
xchg
dec
dec
data16
xchg
out
mov
mov
jb
and
dec
inc
and
call
push
lods
fiadds
clc
push
or
roll
sbb
call
lret
jl
xor
fs
fsubs
xor
test
or
or
mov
sbb
jne
sub
jl
mov
psubsb
ret
sbb
and
loope
mov
mov
sarb
mov
push
push
push
stos
adc
push
or
pop
sub
gs
mov
push
add
cmp
adcl
ret
jb
pop
or
sub
scas
pop
in
adc
test
add
mov
nop
outsb
pop
and
dec
wbinvd
inc
xchg
insb
cld
xor
nop
dec
enter
add
jmp
push
iret
ret
cmp
pop
sub
push
sub
mov
aas
rolb
xor
mov
lods
fstpt
lds
fs
ret
inc
or
test
in
pop
and
push
push
int
adc
popa
and
jmp
jg
std
mov
das
xor
inc
mov
sub
and
mov
xor
dec
push
jle
sbb
shr
xor
xor
cmp
adcb
cmpw
add
lods
adc
loope
in
jae
aam
loop
cmp
pusha
push
loop
dec
xchg
jle
call
test
mov
mov
cs
pop
inc
arpl
add
cld
push
or
or
pushf
xor
mov
mov
dec
lods
ret
std
mov
and
jbe
pop
pop
arpl
adc
lahf
js
mov
call
and
sbb
mov
pushf
jb
sbb
and
imul
or
mov
fs
jmp
out
inc
stos
lret
test
jnp
out
xchg
adc
sbb
jp
lret
ds
and
mov
dec
sub
in
and
dec
push
shlb
adc
pop
dec
mov
mov
mov
jae
sub
test
mov
cmp
wrmsr
test
and
push
xchg
aam
leave
pop
int3
adc
mov
std
and
and
roll
stos
sub
mov
and
gs
call
je
test
and
inc
add
cwtl
cmp
jae
jmp
enter
stc
movlps
iret
push
daa
je
lret
negl
cmpsb
shll
adc
jl
shr
adcl
mov
insb
adc
mov
pushf
out
pop
shl
jge
inc
sbb
push
loope
test
xor
sub
int3
inc
mov
and
bnd
out
pop
pop
inc
pop
pop
test
sub
into
and
jae
mov
mov
sarb
inc
and
andl
inc
fcoms
xchg
je
je
mov
int3
dec
in
jae
mov
cld
and
cmp
in
jbe
and
push
insb
cltd
xlat
mov
jo
andl
adc
push
inc
mov
les
mov
adc
push
xchg
xchg
push
cmpsb
xchg
adc
and
mov
push
mov
add
cmp
movsb
or
test
push
sbb
lods
pop
mov
xor
mov
xor
cmp
jecxz
test
sti
push
cmovo
cmpb
mov
push
pop
jmp
mov
dec
cmp
popa
sbb
or
dec
sbb
and
sub
enter
adc
or
popw
mov
xor
mov
sub
mov
shl
jmp
adcl
rcll
cld
pop
int
cmpsb
cwtl
mov
ljmp
xchg
push
jb
lahf
and
mov
inc
pop
es
add
test
sub
or
lcall
sub
jge
add
adc
test
mov
out
adc
jne
fcomip
jge
jle
test
ret
sarb
push
jb
xor
xchg
out
dec
push
hlt
adc
fsubrp
sub
clc
mov
xor
xchg
cmpl
xchg
in
push
dec
loop
fcoml
push
sbb
push
daa
aad
cltd
xor
popf
shl
imul
push
pushf
jns
hlt
lret
cs
in
or
adc
les
mov
fsubrl
cwtl
sbb
sbb
and
inc
mov
and
daa
cmp
sbb
orb
or
adc
inc
xor
jae
sub
inc
or
and
andb
adcl
and
int3
adc
dec
loope
sub
jecxz
movl
lret
sub
dec
mov
and
sub
mov
shrb
sub
enter
pushf
adc
adc
mov
fs
popa
cld
leave
or
push
in
or
fmull
xor
xchg
sbb
or
sti
add
insb
adc
lock
and
loopne
xor
test
xchg
leave
push
and
fdivrl
js
lock
xor
cwtl
adc
push
inc
enter
lods
mov
mov
and
or
in
xor
addr16
sub
push
les
xor
addb
and
les
daa
sbb
fs
hlt
enter
xchg
and
cmp
inc
adc
sahf
shrl
loopne
repnz
push
hlt
outsb
stos
mov
icebp
adc
push
int3
inc
loop
cmp
push
orb
mov
mov
or
and
sbb
rolb
mov
out
clc
sub
ret
pop
repz
sbb
cmp
push
mov
es
cmpsl
mov
in
sub
and
adc
loopne
mov
cmpsb
or
sbb
xchg
and
nop
xor
sub
test
je
fsubrs
hlt
cld
sub
add
inc
add
inc
sbb
xor
adc
mov
fsubrs
in
or
mov
loop
cmpsl
out
movsl
add
mov
sbb
sbb
and
or
bound
sbb
hlt
inc
cs
or
or
bound
pushf
inc
cs
xchg
push
mov
adc
sbb
mov
and
lods
fsubp
adc
sbb
xchg
ja
call
cwtl
add
test
adc
or
xchg
cmp
nop
fs
xor
outsb
fisttps
xchg
daa
and
xchg
or
popf
inc
adc
mov
and
add
and
sub
mov
xchg
and
aad
nop
cmp
leave
or
lods
nop
mov
mov
pushf
movsl
xor
cltd
or
test
xchg
push
insb
sbb
xchg
pop
ret
jno
adc
popa
call
cmp
mov
clc
outsb
roll
and
jno
sbb
hlt
or
mov
loop
adcb
lds
rolb
or
test
fsubs
sbb
xchg
and
test
pop
and
sbb
sbb
dec
sub
or
les
inc
and
sub
cmp
jno
xor
adc
and
pop
lret
lds
sub
sbb
add
sbb
call
call
sbb
sbb
das
mov
lds
and
les
in
test
sub
or
pushf
sub
jg
or
add
daa
push
rol
int3
les
in
push
shlb
xchg
adc
jg
test
pop
sub
nop
adc
xor
dec
dec
sbb
hlt
inc
and
in
mov
gs
daa
and
mov
and
insb
mov
call
nop
adc
hlt
sub
in
sbb
sub
or
das
cmp
inc
adc
movsl
loopne
cld
dec
ret
pop
fcoml
mov
mov
or
inc
adc
adc
ret
push
inc
mov
cmp
mov
sbb
mov
in
xor
mov
dec
xchg
and
mov
sbb
je
and
and
cmp
mov
sbb
test
popa
jno
or
test
adc
jl
push
ret
icebp
or
push
fmull
sub
bnd
lods
gs
fmuls
daa
lock
sub
call
sub
xor
cmc
or
pushf
ret
mov
call
pop
inc
cmp
cmp
pop
fstl
popf
add
outsl
mov
je
sub
pop
push
test
mov
push
add
les
adc
pop
inc
call
leave
jo
fadds
xor
sbb
cwtl
and
orb
loopne
in
jl
dec
or
dec
push
aam
in
sbb
and
lock
hlt
loop
sbb
lret
out
cmp
sbb
xchg
xor
lods
push
inc
mov
adc
popl
mov
sbb
enter
jb
sbb
cld
lret
adc
dec
test
adc
adc
in
adc
mov
mov
adc
jno
and
mov
test
sub
nop
jne
jp
adc
enter
or
test
cmp
fs
dec
es
enter
cld
xchg
adc
push
fstpt
add
mov
pusha
and
popf
push
mov
in
jbe
xor
jno
setp
push
push
call
add
test
testl
into
or
cmp
push
push
call
sbb
shr
dec
iret
mov
cltd
loop
or
xchg
shll
test
jnp
xchg
pop
psubsw
xor
inc
rolb
clc
sub
cs
rolb
das
push
mulb
sbb
mov
mov
dec
lods
inc
iret
mov
popf
add
add
jae
or
sub
js
add
mov
cmp
je
add
inc
xchg
fiadds
inc
cmp
jl
sbb
rclb
sub
cmpb
jne
sbb
rcrl
orb
push
cmp
or
mov
inc
add
inc
cmp
sarb
cmp
pop
je
or
gs
and
enterw
in
sub
daa
loope
or
or
mov
stos
sub
pop
pop
jp
fistpll
adc
adc
add
std
dec
cld
sbb
cmp
jle
pop
mov
sub
cmp
pop
jl
ljmp
sub
pusha
test
push
pop
adc
and
mov
mov
inc
inc
and
out
mov
sub
das
call
adc
mov
add
inc
sahf
jg
ffreep
pop
fcomps
or
pop
add
push
clc
out
in
shlb
mov
jno
push
hlt
ljmp
sub
pop
xor
add
cmp
sub
xchg
lea
dec
mov
rcrb
ret
jo
push
clc
sti
fnstenv
pop
pop
fs
add
jne
dec
dec
jmp
mov
xlat
add
mov
and
mov
or
jl
push
scas
aaa
lds
adc
pop
add
jg
orb
jne
inc
jmp
cli
and
dec
jno
mov
or
or
je
add
das
push
push
mov
enter
nop
sub
push
lret
adc
or
mov
lret
rorb
shlb
sub
mov
sub
sbb
test
add
sbb
mov
fs
sub
lea
adc
cmp
es
enter
and
aaa
push
pushl
mov
mov
orl
push
sub
mov
lds
sub
xchg
push
mov
leave
leave
aam
mov
push
aam
push
outsl
adc
sbb
aam
enter
decb
shrl
cltd
dec
push
jae
push
loope
popa
push
push
cmp
fidivrs
mov
lahf
mov
mov
lock
repz
dec
push
mov
sbb
loope
jg
je
mov
sbb
dec
ss
shrl
push
mov
push
scas
movsb
ljmp
xor
jmp
push
pop
or
or
adc
das
jne
pop
scas
sbb
jae
in
mov
xchg
sbb
inc
mov
adc
mov
int
inc
sti
ret
ja
and
rcrl
jbe
and
inc
sub
cmp
push
in
mov
pop
lods
push
dec
push
mov
adc
cmc
bound
les
mov
aas
pop
push
push
adcb
add
push
push
mov
sub
sub
mov
push
xor
js
movsl
aad
and
stos
int
mov
and
and
mov
xchg
sub
push
enter
cltd
aaa
daa
jle
inc
test
and
or
adc
dec
daa
incb
sbb
les
jnp
adcb
roll
lea
fs
imul
inc
adc
jo
jno
call
inc
mov
sbb
jl
jbe
dec
loop
out
mov
xor
call
xchg
inc
mov
test
inc
mov
rorb
hlt
aaa
push
sbb
cltd
sub
les
adc
rclb
pop
jns
inc
sbb
sete
std
ljmp
iret
test
adc
add
shrl
mov
xor
jp
mov
inc
or
xor
enter
dec
je
popf
or
pop
stos
pusha
xchg
push
or
or
inc
popa
xchg
mov
pop
mulb
inc
ficoms
adc
notl
push
dec
bound
cmp
je
jmp
push
std
loopne
xor
jecxz
push
add
push
data16
mov
push
test
or
cmp
jbe
repz
add
mov
mov
inc
add
cmp
ja
adc
test
pop
test
push
mov
shrl
jp
sti
mov
movzbl
repz
mov
repnz
or
das
lock
sub
in
xchg
lea
inc
add
add
cmc
loopne
shr
jmp
neg
xor
movzwl
add
movl
jmp
and
test
pop
je
or
and
jmp
mov
not
dec
test
cs
fisttpl
imulb
and
add
je
nop
filds
js
faddp
mov
cmp
lret
dec
fs
push
pop
mov
sub
jl
fsubl
push
pop
iret
xchg
xchg
lea
xchg
dec
rolb
mov
stos
sub
inc
xchg
dec
xor
mov
pop
mov
mov
lds
data16
push
mov
orl
push
lcall
mov
sbb
mov
lods
daa
dec
mov
add
sbb
adc
test
push
and
adc
or
adc
add
xchg
les
call
inc
hlt
lock
xchg
stc
inc
bound
call
mov
push
mov
cmp
push
dec
hlt
mov
and
sti
push
push
out
xor
dec
dec
mov
sarl
mov
adc
js
jne
adc
mov
bound
cld
and
fisubl
jge
or
es
mov
popf
mov
cmp
mov
phaddw
loope
test
or
add
cmc
add
lret
adc
add
xlat
adc
decb
hlt
movsl
movsb
aam
sub
adc
push
sub
jp
xor
sbb
or
outsl
mov
lea
mov
xchg
sbb
dec
icebp
cli
adc
les
shlb
ss
and
repz
aad
xchg
dec
push
mov
add
add
adc
lea
mov
xor
fdivl
xchg
aas
bound
in
sbb
movsl
pop
push
adc
rcrl
das
add
es
das
ret
jl
nop
or
repnz
mov
dec
or
insb
fcmovb
rorl
or
mov
lds
and
iret
and
iret
and
aad
mov
mov
ret
mov
loop
xor
mov
mov
mov
iret
inc
rcrl
daa
es
imul
and
mov
adc
inc
dec
push
cmp
fbstp
push
nop
mov
pop
mov
adc
fs
pop
inc
push
push
in
lods
call
jo
adc
mov
call
pop
jb
adc
add
pop
js
sub
dec
mov
sub
push
pushf
sub
sub
icebp
jb
lock
sub
scas
sbb
adc
je
or
or
pop
mov
out
dec
mov
fadds
mov
adc
dec
mov
fildll
jne
inc
push
sub
iret
dec
or
out
out
jmp
cli
popf
mov
push
pusha
push
mov
inc
sarl
inc
or
pop
enter
or
jp
sarb
cmpsb
jmp
shlb
icebp
das
jne
jl
imul
cli
mov
jo
adc
adc
cs
into
mov
jl
adc
and
push
pop
mov
cli
adc
mov
int3
mov
ja
or
cmc
adc
adc
arpl
das
mov
addr16
into
dec
cmp
ljmp
or
sub
fimuls
test
jae
int3
sahf
cltd
in
rcrb
int3
test
nop
and
inc
adc
sbb
test
mov
xchg
pushf
fadd
ret
call
mov
cmp
cmp
out
arpl
inc
repnz
stos
daa
adc
inc
jge
pop
xor
pop
enter
aaa
jne
mov
int3
mov
dec
rcrl
aam
xchg
and
out
aam
jl
imul
into
pop
testb
push
pop
jne
jg
push
call
or
aam
ret
add
add
out
orl
mov
mov
lods
jle
dec
or
jmp
cmp
inc
test
data16
adc
mov
or
inc
dec
mov
repz
sti
test
mov
jp
xor
sub
or
stos
int
pusha
mov
inc
mov
addr16
push
shl
or
loop
orb
mov
test
add
loope
lds
mov
dec
lods
call
out
jmp
inc
mov
clc
gs
sbb
mov
xchg
adc
dec
mov
mov
cmpsb
push
jg
call
mov
daa
aam
imul
add
std
dec
push
push
lds
cmp
sub
adc
stos
shll
xor
je
dec
adcl
mov
fldpi
popf
fdivr
gs
lahf
loop
add
push
inc
bound
enter
push
adc
inc
adc
and
jno
xorb
je
insl
pop
xor
pushf
sub
jge
jmp
nop
test
cmp
and
dec
imul
mov
push
stc
sbb
add
push
pop
enter
and
movsl
and
cwtl
push
js
xchg
call
out
dec
mov
cmp
pop
call
lods
cld
sub
in
mov
push
repnz
jb
or
inc
leave
lock
cwtl
leave
push
push
jnp
push
cld
sub
adc
loope
movsb
les
xchg
xor
cmp
mov
test
push
add
mov
push
enter
sbb
push
mov
dec
inc
enter
push
out
mov
fisttpl
mov
xchg
stos
aad
lret
ret
mov
inc
mov
in
pop
or
mov
fistps
lret
sahf
lock
mov
clc
adc
dec
and
cmp
jo
or
and
add
jmp
es
push
mov
xor
sub
test
dec
fsubrl
in
sbb
or
jo
pusha
addr16
xchg
push
cld
mov
js
xor
jg
fdivrl
cld
in
out
ds
jne
xchg
add
inc
mov
insb
ss
popa
push
push
sub
shrl
push
add
adc
push
sub
cmp
mov
aas
div
xor
xor
shl
cmc
ret
push
or
sbb
stos
mov
xchg
pusha
test
push
jbe
nop
sub
imul
mov
xchg
pop
stc
nop
stos
stos
dec
insb
mov
mov
xor
and
imul
clc
inc
sub
xchg
sbb
sub
rcrb
cmpsl
sub
inc
cmp
push
add
or
add
jb
add
inc
movnti
mov
xchg
xchg
int3
and
mov
xlat
push
aam
or
rcrl
inc
test
ja
push
jb
cmp
enter
fs
mov
inc
sbb
push
push
push
lock
jb
sbbl
dec
and
cmp
ja
adc
inc
sbb
test
mov
and
inc
and
sbb
push
and
adc
test
jae
xor
add
sbb
add
adc
popf
jbe
in
lods
mov
push
and
fs
aad
push
mov
roll
cmp
push
add
cmp
inc
xor
sbb
jmp
jo
test
and
mov
jmp
sub
inc
pusha
or
test
adc
sub
sub
pop
inc
sub
test
sub
adc
and
sbb
and
je
jge
cmp
das
cmp
lods
je
ja
lods
mov
sbb
inc
and
push
jnp
sbb
adc
mov
push
jl
test
rcll
mov
sub
mov
xchg
mov
std
out
xchg
jne
cmp
jns
mov
outsl
test
fs
or
inc
sbb
sbb
jae
into
fs
dec
test
gs
mov
xchg
pop
push
scas
daa
cmc
imul
or
cs
popa
out
push
xchg
fmul
sarl
jb
dec
sub
or
inc
mov
adc
xor
push
or
inc
stos
and
clc
mov
mov
cwtl
stc
dec
add
sub
push
vunpcklpd
pop
lahf
xchg
std
inc
cli
adc
xchg
shrb
mov
mov
nop
or
enter
xor
cwtl
notl
out
adc
mov
mov
out
bound
sbb
mov
mov
aaa
fnstcw
sub
dec
and
push
xchg
fnstcw
adc
push
mov
mov
scas
or
cmp
push
inc
adc
pusha
adc
push
push
push
cli
xor
inc
add
push
call
sbb
push
mov
xchg
call
mov
je
outsb
fstps
cmpsb
adc
nop
jmp
sbb
push
pop
pop
pop
push
mov
mov
lods
inc
nop
leave
push
adc
int3
cld
mov
adc
and
mov
ret
and
shl
repz
stc
adc
dec
cmp
lds
dec
ret
lds
cld
arpl
fcoms
lods
xchg
sub
sbb
xchg
sbb
lods
push
pop
int3
jbe
ljmp
int3
adc
mov
pop
movzwl
rcrb
out
fwait
repnz
sub
ja
adc
sbb
cmpsl
int3
adc
xor
test
mov
mov
push
imul
push
cmp
jbe
inc
inc
shrb
cmp
repz
dec
stc
clc
pop
jbe
dec
sub
es
fmuls
cmp
add
sub
dec
in
ljmp
cmp
aad
lods
mov
jne
or
pop
or
lock
shll
adc
test
xor
movsb
cld
adc
sbb
add
xchg
inc
std
mov
sub
jae
repnz
ljmp
and
adc
mov
cli
dec
push
mov
mov
aas
fiaddl
adc
cmp
ffreep
and
mov
push
imul
or
ljmp
jae
in
add
pop
aas
mov
push
or
shlb
add
daa
pop
aam
insb
insb
jecxz
dec
xchg
out
push
push
test
adc
lcall
inc
sbb
push
loope
add
aaa
xchg
add
insb
add
stos
sub
xchg
mov
mov
adc
push
and
fs
mov
sbb
mov
add
push
sub
and
ret
add
fistpll
fidivrs
jecxz
inc
mov
cli
inc
add
testb
mov
repz
adc
jae
nop
dec
gs
xor
call
out
pop
gs
xchg
pop
mov
mov
add
fwait
jl
cmp
push
test
inc
jge
or
add
call
loop
and
leave
jge
aam
or
test
xor
lock
ljmp
mov
push
push
jp
clc
push
push
test
lret
pop
aas
in
mov
mov
pop
mov
push
cmc
scas
aam
xor
sub
sub
xor
cmp
push
jge
and
das
test
adc
adc
test
das
loop
jge
sbb
jbe
lods
jb
dec
jle
xchg
scas
cltd
cmc
dec
add
punpckhbw
push
test
adc
sbb
inc
dec
jp
adc
fists
mov
dec
stos
insb
or
sub
test
add
inc
aad
jo
push
mov
cmp
mov
pop
lcall
loop
je
sbb
loope
mov
mov
mov
mov
or
push
jno
lret
mov
imul
xchg
enter
iret
aaa
test
ss
mov
fs
dec
cmp
mov
and
and
xor
aad
addb
xor
jne
pop
pop
pop
push
and
dec
add
sub
xchg
mov
push
adc
push
xor
call
mov
das
testb
or
inc
pop
call
mov
adc
enter
lcall
cltd
ret
shll
rorl
bound
sti
push
mov
aaa
inc
pop
stc
cmpsb
sarb
cmp
jl
leave
lock
loope
mov
fisubs
or
fimuls
mov
mov
popf
xchg
lret
and
or
jle
mov
jmp
in
jg
mov
call
inc
insl
mov
push
mov
sbb
pop
pop
cmp
mov
cmc
dec
out
add
lods
enter
cmpsb
cli
add
add
push
xchg
sbb
daa
into
lcall
mov
mov
adc
push
movsl
les
les
icebp
xchg
loopne
clc
mov
nop
push
stos
and
push
sub
fldcw
test
int3
mov
jns
xor
adc
cmpsb
divb
and
icebp
xchg
test
cmp
or
or
xchg
and
lret
movsl
push
sbb
inc
adc
pop
rolb
in
pop
mov
xor
shr
or
les
push
push
insb
mov
stos
add
lahf
mov
pop
pop
mov
ja
cwtl
ret
xchg
mov
xor
call
out
mov
repnz
jb
test
dec
mov
rorb
push
cltd
mov
das
out
xor
adc
cmp
in
ja
arpl
sbb
shl
daa
dec
inc
test
cltd
inc
cmp
mov
or
jge
xchg
pop
sub
sbb
dec
or
jbe
push
mov
sbb
ret
pop
imul
inc
xchg
ret
notb
je
xchg
xor
mov
add
or
lret
xor
aaa
imul
in
push
add
cmp
rolb
xchg
adc
adc
jns
ret
jnp
test
pop
or
dec
aas
movsb
xchg
aaa
adc
pslld
sub
jg
and
sub
sbb
test
jmp
in
out
mov
adc
sbb
outsl
mov
dec
sbb
out
cmp
in
scas
jno
je
ja
es
cmp
mov
jnp
cmc
icebp
sub
add
or
fdivrs
imul
int
lods
xor
pop
xor
test
add
jbe
push
push
cwtl
sbb
push
pop
hlt
inc
xchg
scas
add
mov
mov
sub
and
test
mov
dec
call
bound
mov
add
adc
lea
out
dec
and
cwtl
stos
dec
lcall
es
incb
pop
inc
ret
dec
popa
popf
cmpsb
or
lahf
cmp
mov
adc
popa
push
in
pop
faddp
repnz
lret
mov
insb
mov
pop
test
adc
pop
out
pop
hlt
jne
ljmp
insb
test
xor
jmp
dec
mov
adc
rorl
sub
dec
scas
push
mov
jbe
add
inc
push
stos
je
inc
inc
int3
lock
mov
fs
push
nop
and
stc
pop
adc
in
push
dec
stc
xchg
pusha
lock
and
mov
ds
cmp
nop
shlb
xchg
ds
jno
aad
lea
ss
pushf
cmp
jge
pop
pop
mov
negb
in
icebp
cmp
pop
jno
ret
mov
push
inc
test
push
adc
inc
jmp
mov
pop
sub
scas
leave
dec
mov
shll
dec
shrl
call
das
outsb
mov
and
and
dec
icebp
nop
jns
or
test
lahf
add
cmp
xor
add
sbb
cld
pop
je
xchg
mov
outsl
pop
push
or
pop
lea
pushf
js
adc
stos
push
int3
push
inc
xor
mov
pop
xor
adcb
cli
add
outsl
cmpsl
popf
pop
jb
and
mov
call
mov
mov
xor
jae
movsb
sbb
repz
jmp
pop
or
pop
xor
xchg
cmp
cmp
fldl
adc
cli
test
repz
mov
rorb
cmp
and
sbbl
push
fs
movsb
jno
mov
mov
mov
mov
inc
int3
je
adc
insl
iret
add
pop
push
or
xchg
mov
inc
sti
jae
xlat
inc
lea
push
fistpll
push
in
jp
xchg
insl
fidivrl
test
cmp
pop
ja
adc
add
mov
pop
cmp
push
jmp
adc
fdiv
fs
cmp
int3
bound
mov
and
mov
lea
aam
call
and
cli
or
pop
arpl
mov
mov
inc
sub
jle
enter
icebp
sbb
fstl
rcr
popf
cmp
movsl
add
repnz
mov
out
xchg
bound
aaa
mov
hlt
and
or
add
dec
in
push
ds
rorl
adc
adc
ret
and
jge
add
or
orb
ss
nop
sbb
jg
pushf
mov
and
mulb
jae
bound
or
rcrb
andb
sub
jmp
pusha
ss
xchg
callw
mov
loope
in
test
pushf
outsl
mulb
add
or
adc
sub
call
cltd
push
fwait
call
into
nop
lock
cli
arpl
fstpt
inc
call
sub
push
or
jmp
adc
mov
hlt
xchg
jmp
and
cmp
mov
filds
sbb
test
cmp
shll
mov
or
push
sbb
pop
leave
lcall
shr
clc
cmp
popf
popa
pusha
sub
dec
xchg
sub
add
leave
jo
add
jle
mov
xor
inc
cmp
and
jne
mov
dec
push
lods
mov
push
mov
mov
adc
mov
call
daa
mov
fmuls
rorb
hlt
push
xchg
lock
push
inc
and
ret
or
mov
push
or
push
shrb
add
idiv
test
add
push
sub
jmp
dec
mov
lea
cmp
jb
mov
mov
inc
aas
leave
inc
movsl
sub
sub
xorl
jae
int3
or
push
sbb
imul
or
mov
sbb
pop
sbb
insl
mov
add
or
add
mov
adc
clc
mov
loop
adc
push
pop
jecxz
cmp
clc
rep
fstps
inc
cwtl
add
pop
inc
xchg
arpl
movsl
mov
ja
imull
dec
insb
loope
test
cmpsb
inc
xchg
fs
hlt
xor
mov
mov
adc
mov
push
sub
push
push
sub
pop
sbb
dec
xor
mov
mov
or
call
jae
mov
pop
or
fistpl
dec
mov
cmp
xor
mov
insl
sbb
ja
rolb
mov
lcall
push
xchg
lret
jle
mov
adc
cmp
push
and
or
pop
cmpsb
xchg
daa
mov
stos
sbb
xorb
mov
jle
mov
fdiv
loop
pushf
adc
popa
rorb
cmp
nop
jb
add
in
mov
dec
fstpl
das
cmc
sub
test
adc
imul
mov
inc
lea
add
or
jp
movsb
adc
cmp
divl
cmp
fwait
aas
arpl
inc
bound
sahf
add
pop
push
inc
fwait
je
or
int3
add
test
push
adc
or
std
xchg
ret
sbb
insb
xchg
cmp
nop
push
orb
sarl
xchg
mov
push
sbb
push
aas
jne
mov
cwtl
daa
stc
add
fsub
and
test
rol
lahf
in
or
lods
cmpsl
adc
sub
shlb
test
inc
rcl
lcall
test
pusha
xor
xor
push
test
mov
push
inc
adc
call
andl
daa
fstl
xor
pop
out
mov
adc
sbb
mov
push
imul
push
scas
sub
and
mov
inc
icebp
jp
or
mov
dec
std
inc
cmp
or
push
xor
std
and
adc
sbb
ljmp
rcrl
bound
pop
adc
int3
adc
mov
jg
push
out
add
les
or
sub
add
mov
sub
xchg
out
push
scas
mov
lds
xrelease
jmp
leave
daa
jp
mov
mov
add
popa
xchg
sbb
sub
adc
push
mov
lahf
adcb
inc
dec
mov
jg
sub
jno
aas
fwait
push
xchg
sub
add
pop
jge
mov
xchg
jne
add
add
imul
mov
and
lcall
arpl
pop
arpl
add
call
push
mov
repz
mov
mov
cmp
sbb
mov
sub
mov
inc
ret
add
add
sub
bound
pop
adc
aas
sbb
sub
or
loopne
lcall
or
or
cmp
mov
adc
xchg
mov
inc
push
sbb
xor
mov
iret
sbb
xchg
cli
mov
push
mov
add
in
test
mov
in
push
push
cs
test
xchg
dec
cmc
andb
je
sub
add
jle
test
push
jg
mov
push
push
push
aam
dec
push
jmp
loopne
or
pop
xchg
adc
or
push
pop
mov
inc
cli
movsb
sub
and
cmpb
ja
mov
repz
add
ja
je
mov
in
jmp
fldcw
push
and
or
xor
test
ds
or
and
adc
inc
sub
mov
scas
or
mov
sbb
je
int3
scas
sbb
adc
nop
cmpsb
pushf
mov
xchg
bound
pop
pop
jbe
mov
daa
outsl
in
daa
sarb
insl
add
pop
lea
stc
adc
pusha
sysret
mov
test
inc
movnti
add
cmp
nop
mov
adc
js
and
lock
add
add
mov
mov
sub
push
sub
and
test
ret
pop
cltd
fisttps
or
adc
and
fisttps
sbb
adc
stc
and
or
add
shrl
push
or
xchg
push
or
jo
and
inc
and
int
popa
jp
mov
divl
pop
test
stos
frstor
mov
mov
xor
adc
lods
jecxz
test
mov
or
mov
js
add
inc
and
cmp
and
or
adc
xor
sbb
xor
hlt
xor
xor
sti
or
out
or
std
or
std
das
in
mov
int
stos
leave
add
movsb
inc
cmp
dec
mov
enter
mov
and
je
or
and
jge
adc
test
mov
les
mov
dec
test
rcll
testl
and
add
adc
cwtl
cmp
and
sbb
stos
and
pop
orb
add
add
fdivl
or
cld
inc
or
push
cmpsb
add
out
inc
or
cmpsl
xor
les
in
xor
pop
and
push
xchg
mov
sbb
ret
mov
mov
adc
hlt
push
push
lahf
cli
inc
or
cmp
pop
jmp
xchg
pusha
add
negb
add
mov
or
adcl
jb
call
or
ud2
pop
pop
pop
mov
aam
loope
push
lret
push
adc
and
push
xchg
adc
movsb
inc
subl
call
call
hlt
shll
call
in
xchg
mov
pop
sbb
push
adc
pop
inc
xchg
push
insb
rolb
into
cmp
xchg
xor
push
dec
aad
flds
out
inc
psubb
sub
push
push
push
sbb
daa
cli
xlat
adc
mov
mov
repz
ret
arpl
dec
stos
push
jge
sbb
gs
das
jns
push
adc
mov
dec
imul
dec
inc
loope
stc
adc
lock
push
stc
adc
int
xor
and
cld
testb
pop
inc
pop
add
sbbl
roll
lock
adc
or
mov
fnstenv
add
int3
pop
testl
mov
jbe
sub
cwtl
mov
add
push
cltd
sbb
add
in
push
mov
pop
enter
test
ret
sbb
adc
jbe
ljmp
leave
or
cli
jp
je
xor
xchg
repz
fildll
xchg
sbb
and
jecxz
and
decl
sbb
jmp
sbb
mov
mov
cmp
inc
and
cmc
jmp
mov
xchg
test
and
cli
push
mov
adc
test
mov
test
adc
rolb
and
loopne
mov
movsb
and
cmp
and
outsb
and
arpl
xchg
cltd
es
test
dec
lret
fs
in
ljmp
clc
dec
pop
mov
dec
rclb
jae
stos
dec
imul
in
add
jle
push
adc
fstps
or
inc
xor
pusha
fcoms
test
mov
adc
lock
xor
sbb
add
adc
mov
xchg
les
ds
or
nop
fmul
andb
repz
push
or
inc
pop
bound
cmp
xor
push
inc
xchg
add
pop
js
jmp
in
test
fisttpll
mov
cwtl
cmc
out
mov
sub
in
cltd
jns
sbb
xchg
sub
sbb
pusha
sbb
push
adc
enter
sub
imul
cmp
mov
push
sub
and
inc
adc
and
in
clc
jmp
mov
jnp
sub
dec
push
sub
in
dec
sub
and
fmul
push
inc
jo
cmp
nop
enter
inc
mov
in
xor
adc
cmp
bnd
cmp
adc
xchg
push
and
enter
lahf
adcl
xor
inc
sub
enter
int
or
aas
lods
inc
and
push
cmp
sbb
clc
pushf
sbb
dec
stc
aad
dec
and
call
inc
or
clc
xchg
jg
sbb
pop
cmp
shl
mov
mov
dec
add
je
cmp
mov
cmp
adc
adc
and
js
xor
loope
add
je
pushl
inc
fs
xor
and
inc
in
xor
clc
movl
pop
adc
adc
jmp
cmp
or
ds
jge
aas
xchg
sbb
or
xor
xor
adc
pop
and
cmp
jmp
dec
hlt
dec
out
pop
mov
and
ror
hlt
fstl
bound
push
jnp
pop
je
push
jne
addr16
or
movsb
xor
xor
and
xor
jne
add
fstl
or
rcll
sbb
leave
inc
or
mov
mov
loopne
inc
stos
pusha
int3
jl
je
sub
sbb
rorb
push
movsl
movsb
or
test
jmp
jne
sysret
ja
xor
mov
lock
sub
push
clc
mov
adc
xor
add
jne
sysret
inc
enter
adc
lret
sub
pop
aad
xchg
or
push
dec
sbb
pop
adc
inc
ret
aas
and
push
add
test
mov
xchg
mov
pop
push
adc
jmp
mov
pop
dec
test
pop
mov
mov
push
or
mov
dec
jp
sub
cld
xor
sbb
inc
test
adc
loopne
adc
and
or
and
jl
xlat
and
lods
pop
mov
or
shll
aas
xchg
cld
pop
xchg
sub
mov
xchg
jl
inc
mov
lds
nop
or
sbb
jl
inc
xchg
jb
mov
mov
mov
mov
addb
lods
cmc
scas
mov
push
mov
and
leave
sub
scas
das
adcb
jg
inc
stos
js
jnp
pop
ljmp
dec
icebp
aas
imul
testb
in
insl
movsb
out
dec
push
hlt
pop
jb
push
adcb
add
sbb
sbb
cmp
and
fsubs
inc
cld
dec
fcoml
std
mov
imull
or
pop
push
add
mov
and
mov
or
or
push
mov
xchg
scas
jno
popa
mov
xor
inc
push
mov
mov
mov
andb
mov
nop
rolb
or
add
xchg
mov
nop
and
sub
adc
daa
sub
adc
sbb
adc
test
push
push
jae
xor
imul
pop
cs
sub
rcrb
add
cwtl
cmp
popf
lret
je
call
or
jns
adc
pop
ja
orb
push
and
cmp
and
cwtl
enter
les
cli
xor
push
mov
test
push
fmuls
jo
xchg
popf
mov
xchg
daa
push
and
sbb
out
mov
sub
dec
and
mov
test
lcall
fnstenv
xchg
cmpl
add
mov
mov
and
pusha
inc
push
shlb
inc
cmpsl
mov
or
xor
sysret
xor
add
adc
mov
es
fwait
xlat
sub
sub
mov
stc
subl
js
fisubl
stos
mov
icebp
xchg
cld
xlat
jb
mov
jo
fisttps
sbb
xor
lds
xchg
push
pop
lcall
xorl
adc
popa
inc
and
dec
adc
les
fwait
pop
sbb
in
dec
orb
aas
cmpsl
bnd
sub
pop
sbb
push
mov
push
and
cmp
dec
shrl
adc
imul
xchg
jne
jl
push
and
dec
xor
mov
and
out
or
adc
xchg
daa
jb
scas
inc
fs
jns
mov
push
imul
or
jle
clc
roll
mov
js
mov
mov
sbb
enter
nop
inc
enter
inc
push
addb
loopne
insb
xor
jle
add
xchg
jmp
pop
fldt
js
rcrb
jge
and
shrl
xchg
lcall
mov
aaa
outsb
push
mulb
aas
mov
mov
inc
clc
int3
inc
sbb
mov
cs
push
call
and
js
xlat
or
add
clc
enter
fdiv
cmpsb
add
pop
and
jmp
frstor
push
push
dec
mov
dec
roll
add
dec
cld
push
pop
sarb
jge
push
jl
mov
adc
inc
pop
mov
mov
scas
adc
xchg
test
jp
push
xchg
add
das
mov
or
cmp
in
mov
jno
sbb
xchg
pop
test
mov
call
pop
mov
out
push
xchg
push
scas
push
mov
fcomi
movsl
outsb
xchg
pop
andb
rcrl
and
das
lret
xor
mov
or
movsl
or
fists
mov
movsl
into
xchg
jne
ja
pop
pushl
adc
imul
mov
xchg
loop
subb
xor
xchg
push
xchg
hlt
mov
lock
and
jnp
mov
lret
sbb
cld
add
jmp
negb
in
sbb
push
cmpsl
roll
test
test
and
fcomps
pop
dec
sti
popf
outsl
push
mov
cld
xor
push
in
or
adc
jne
dec
cmp
std
sbb
sub
inc
and
std
inc
mov
popf
mov
call
push
daa
xchg
adc
mov
je
xchg
test
dec
in
cmc
inc
xor
lds
mov
dec
xor
into
cmp
cld
mov
xor
bswap
mov
aad
out
inc
lock
xor
adc
and
je
and
or
aaa
xorl
dec
or
push
add
icebp
sti
jg
outsl
pusha
xchg
enter
ja
leave
dec
add
sub
mov
mov
sbbl
das
clc
fwait
sbbb
xlat
xchg
push
pop
inc
insl
inc
xor
daa
arpl
cmp
jne
push
push
ds
pop
push
mov
mov
adc
out
xor
xor
dec
jns
jecxz
pusha
cltd
adc
lods
or
cli
iret
std
daa
sbb
dec
pop
in
scas
jnp
adc
shl
xchg
adc
jns
test
inc
fidivrl
xchg
sub
sbb
rorl
stc
xchg
jle
adc
pop
dec
repnz
xor
fidivs
pop
sub
loop
call
sub
dec
xchg
jle
cltd
stos
loopne
mov
je
or
test
cli
mov
daa
movl
cltd
jmp
jmp
xchg
jp
xor
mov
js
imul
cmpsl
shr
xchg
aas
sahf
adc
int
gs
ds
sbb
sbb
xchg
std
test
rcll
sub
mov
leave
sub
push
daa
dec
shll
push
and
ret
shll
jge
adc
jmp
push
andb
adc
pop
into
mov
pop
mov
mov
inc
inc
dec
pop
sbb
push
call
pop
pop
sub
lea
cmp
mov
sub
inc
xchg
int
jecxz
repz
sbb
mov
mov
fdiv
xchg
js
dec
mov
cmp
andb
cmpb
jne
inc
pop
add
movsbl
jo
mov
movb
push
lahf
dec
pop
js
add
sub
cmp
jge
cmp
sub
clc
enter
push
mov
or
lahf
int3
push
cmpsb
test
inc
jo
pop
imull
jmp
or
dec
fcoms
cmp
adc
cltd
push
inc
xchg
mov
ret
jp
sbb
cmp
inc
sub
cmp
and
dec
cmp
push
dec
adc
jmp
inc
scas
inc
mov
into
jp
adc
pop
sub
and
sub
push
push
mov
lea
call
push
dec
inc
jp
or
lock
pop
jmp
enter
imul
lret
call
cmp
roll
adc
loope
sbb
jmp
bound
mov
add
mov
inc
jg
adc
push
and
inc
add
cwtl
cmc
jne
ftst
mov
aam
and
inc
push
cmp
aas
mov
jle
and
js
adc
mov
inc
movsb
adc
mov
push
popa
aaa
push
push
mov
adc
push
push
adc
sbb
pop
lret
and
dec
sub
popf
jmp
in
xchg
sbb
lea
fsubr
sbb
sbb
pop
loopne
lahf
pop
enter
lahf
mov
jns
and
push
inc
lock
mov
js
cmp
daa
push
nop
sti
data16
and
rcrl
movb
inc
inc
stos
adc
jp
cmpsl
call
repz
or
jne
loop
test
ret
ljmp
fs
push
imul
mov
fbld
jmp
and
idivb
adc
fcmovne
in
xor
je
inc
sub
add
jl
jmp
mov
daa
repnz
dec
and
cmpsl
pop
sub
cwtl
push
cmp
dec
jle
adc
xor
pop
cmp
inc
adc
dec
cltd
inc
repnz
mov
pop
inc
sti
int
je
call
inc
lcall
stos
ja
lea
adc
lret
push
adc
mov
jg
sub
in
cwtl
mov
push
xor
mov
xor
xor
call
or
cmp
sub
sbb
sub
jmp
xchg
and
or
dec
jp
rcrb
loope
adc
jnp
leave
loop
sub
dec
std
xchg
inc
pusha
mov
xor
mov
lods
and
and
adc
sbb
jmp
bound
cwtl
and
and
movsl
std
add
xor
sbb
es
push
pop
and
test
push
int3
pushf
dec
scas
push
dec
pop
mov
mov
int
sub
pop
inc
mov
test
pop
add
push
inc
add
jl
adc
mov
xor
jmp
add
mov
add
jne
jecxz
or
push
push
dec
fidivs
cmpsb
icebp
xbegin
mov
aad
xchg
nop
imul
clc
jb
xchg
adc
pop
cli
mov
mov
jg
push
cwtl
daa
clc
sbbl
or
lret
adc
adc
push
adc
lods
inc
and
sub
daa
adc
iret
xor
xchg
cli
push
mull
and
cli
mov
sarb
pop
jne
data16
pop
and
test
push
call
add
pop
out
xchg
jae
outsb
sarw
mov
push
xor
stos
xor
mov
jbe
and
sbb
adc
inc
mov
mov
inc
inc
neg
sbb
fadd
add
aad
hlt
push
and
in
mov
or
stos
push
and
je
inc
sub
push
std
lret
jl
cmpb
jb
mov
add
and
lock
push
ret
cwtl
push
pop
lea
mov
mov
les
jge
push
and
mov
test
data16
inc
dec
mov
jmp
xor
fwait
jae
adc
test
push
test
fs
push
push
xchg
and
jmp
push
or
xchg
inc
test
outsl
pushf
sub
insl
scas
daa
xchg
sbb
push
and
scas
in
add
xor
fimull
jl
xchg
jl
ficompl
call
cltd
std
loopne
outsl
shll
outsb
addr16
adc
push
or
xchg
adc
mov
push
outsb
into
into
and
inc
into
bound
lret
je
xchg
lret
mov
stc
push
popa
or
jmp
dec
mov
push
inc
mov
mov
dec
add
mov
mov
cmpsb
mov
nop
xlat
xor
jge
inc
shll
test
outsb
xor
ja
lods
scas
adc
jne
sbb
mov
and
pop
xor
and
sbb
mov
cmp
mov
adc
xor
je
sbbl
cmp
jmp
das
sbb
cli
jb
in
cli
adc
mov
mov
dec
je
stos
les
sub
dec
test
lods
stos
rorl
lea
sub
xchg
pop
inc
mov
pop
dec
xchg
xlat
inc
je
mov
pop
cmp
push
cmp
push
lret
add
or
pop
xor
aaa
jo
pop
ret
mov
push
inc
lds
jmp
inc
adc
sub
test
out
enter
mov
jecxz
adc
pop
out
xor
jno
sbb
dec
sub
insl
and
add
and
and
dec
mov
mov
inc
imul
jno
sbb
mov
add
adc
pop
sub
shll
and
movsb
adc
fnstsw
jl
xchg
push
in
add
mov
or
fstl
call
insb
test
and
adc
adc
jae
jmp
inc
nop
jle
addr16
push
and
inc
cld
jo
mov
pop
adc
test
dec
sbb
or
jg
movsl
cmc
or
sbb
ret
cmp
adc
jl
or
add
jle
push
cltd
sub
cmp
fldenv
pop
lds
bound
sbb
jmp
adc
stc
push
cmp
and
add
mov
push
in
and
mov
in
dec
les
xchg
sub
dec
push
and
pop
mov
movsb
jmp
sbbb
mov
and
adc
or
jmp
add
jb
test
jg
bound
push
sub
fiaddl
push
sub
inc
and
call
dec
sbb
jne
jmp
test
or
hlt
and
dec
mov
out
add
test
push
and
sbb
adc
inc
xchg
int3
push
and
adc
adc
insl
pop
fmuls
inc
adc
pop
fs
xor
pushf
sub
xchg
or
test
dec
sbb
dec
test
and
cmp
fcoml
out
insb
test
daa
enter
sub
xchg
and
fisttpl
or
movsb
inc
fwait
jno
das
sub
push
mov
stos
movsb
movsb
cld
mov
and
inc
mov
jmp
jl
inc
pop
sub
and
jmp
dec
call
push
push
cwtl
add
and
adc
sbb
sbb
jmp
adc
and
imul
jbe
sub
xchg
adc
call
and
dec
aaa
xor
or
sbb
push
xchg
mov
adc
cwtl
adc
leave
invd
sub
adc
and
xchg
add
sbb
mov
sbb
or
add
and
nop
xor
out
push
aad
dec
and
adc
mov
fs
lds
adc
dec
sbb
inc
cmpsb
and
and
pushf
sub
sbb
subl
sub
and
test
push
rorl
test
nop
enter
or
cwtl
test
iret
dec
and
mov
imul
and
outsb
xor
or
adc
cld
dec
test
and
adc
push
mov
dec
or
and
nop
cmp
dec
jecxz
inc
fnstenv
mov
mov
push
mov
shrl
pop
add
rorl
cmc
dec
inc
int3
xchg
daa
cld
js
fildl
cmc
inc
adc
and
lods
or
movsb
inc
test
ja
inc
and
mov
jle
nop
xor
addb
xchg
and
inc
adc
test
sub
sar
ret
mov
mov
test
pop
jl
adc
mov
adc
inc
inc
sbb
sub
in
jl
sbb
adc
pushf
vmovaps
mov
das
sub
mov
inc
nop
dec
push
insb
loope
sbb
or
mov
push
and
pop
or
in
nop
sbb
inc
sbb
or
mov
test
outsb
mov
add
dec
inc
lock
xchg
sub
scas
adc
test
pop
xlat
inc
test
and
adc
mov
test
aad
and
pop
or
or
nop
mov
pusha
inc
xor
xchg
and
fs
xor
or
and
nop
cmp
hlt
sub
adc
mov
sbb
or
mov
adc
sub
adc
jl
mov
adc
push
nop
cmp
int
adc
sbb
lea
and
call
loopne,pt
or
dec
popa
mov
xor
ds
call
pop
jmp
movsb
adc
inc
pushf
add
jmp
xchg
and
fs
xor
sub
icebp
cmp
push
inc
fsubl
push
adc
or
cmp
insb
sub
inc
cmp
sub
ret
fs
inc
push
and
or
sub
inc
sbb
hlt
and
push
inc
xchg
in
out
arpl
test
and
fs
push
je
mov
mov
es
and
adcl
xchg
or
mov
inc
xor
mov
cmp
enter
sub
mov
and
sub
adc
or
adc
jb
xor
jo
in
rclb
enter
sub
inc
xor
pop
adc
or
les
mov
inc
mov
mov
cmp
pop
test
jo
cmp
sbb
sub
xchg
and
or
in
xor
ret
popa
test
rol
clc
mov
pop
sub
test
enter
and
adc
mov
test
enter
and
and
sbb
in
daa
enter
mov
and
fs
sub
mov
adc
pusha
mov
roll
xor
pop
test
enter
sub
inc
sub
push
adc
lcall
or
inc
dec
sub
inc
sub
xor
xor
sbb
leave
ljmp
inc
push
call
out
cwtl
add
dec
shrl
loope
into
jl
bound
popf
sbb
int3
xor
repz
push
pushf
add
mov
mov
pop
andb
push
icebp
or
mov
daa
adc
pop
xchg
test
in
pusha
std
dec
aam
insb
leave
and
pop
lret
mulb
sbb
daa
xchg
sti
mov
and
lea
and
shl
lea
sbb
or
xor
sub
dec
push
je
arpl
and
jmp
cmp
sbb
xchg
dec
pop
fsubs
into
pop
inc
mov
adc
add
and
adc
push
test
fcoml
cmc
shr
rol
push
cmp
add
clc
xchg
test
xchg
push
out
fs
ret
mov
out
inc
and
inc
rcrb
inc
push
push
xor
push
test
cli
push
cmpsl
rorl
mov
inc
sub
sub
sti
inc
pop
adc
pop
pop
enter
sub
mov
and
fbld
push
inc
mov
enter
lahf
push
mov
xor
je
mov
or
test
and
mov
sbb
hlt
je
fwait
gs
add
testl
jmp
hlt
mov
dec
push
lea
jb
dec
and
or
add
ret
lds
imul
pop
arpl
push
dec
mov
popw
aas
enter
test
and
and
aam
inc
pop
adc
pop
popa
or
jmp
xor
lret
add
push
and
jmp
push
or
xchg
sbb
jmp
adc
nop
int3
cmp
and
pop
or
sub
imul
or
push
inc
sbb
inc
push
insb
jecxz
inc
lret
nop
sbb
repz
in
mov
or
notl
lcall
mov
adc
icebp
push
idivb
dec
test
xlat
and
sbb
adcl
or
lret
mov
pop
and
orb
and
rolb
push
push
fisttpll
jg
push
adc
jne
mov
sub
xchg
shrb
sbb
lods
adc
dec
es
cmp
loope
rorb
and
ret
cmp
in
stos
or
lock
daa
lret
in
mov
popf
and
sbb
pop
mov
xchg
test
les
mov
and
movsb
lock
and
cmpsb
outsb
jle
mov
sub
xchg
in
pop
and
cmc
and
loopne
xor
inc
sbb
mov
and
out
pop
xor
or
inc
pop
mov
in
and
push
inc
pop
and
cmp
push
les
and
cmp
and
inc
inc
and
dec
mov
sbb
xor
and
push
inc
or
pop
adc
mov
sbb
dec
test
lock
inc
mov
inc
adc
or
sahf
nop
cmp
xor
and
xchg
push
and
sbb
sbb
jge
sbb
adc
mov
inc
dec
sub
mov
or
test
mov
sub
mov
and
cli
pop
xor
or
inc
push
mov
in
and
push
and
push
adc
mov
pop
mov
repnz
mov
sbb
test
les
adc
or
imul
cmp
mov
sub
mov
adc
jmp
and
nop
orb
je
sti
inc
push
mov
pop
lcall
fwait
adc
adc
inc
das
inc
lahf
fists
test
jno
pop
out
sub
bound
adc
test
enter
mov
and
xchg
push
inc
int3
jb
adc
or
mov
shrb
mov
push
fsubrl
sub
je
or
nop
pop
ljmp
bound
bound
inc
dec
sub
xor
mov
sbb
test
incl
je
out
push
test
push
add
xor
pop
test
popf
pop
mov
pop
cld
sub
js
sub
push
or
sbb
ss
repnz
push
xchg
rcrb
sbb
pop
hlt
or
or
lahf
incl
je
sub
sahf
adc
jae
xchg
pop
inc
in
lahf
xchg
out
lret
arpl
pop
mov
les
repz
xor
data16
pop
add
imul
cld
sti
loop
lahf
pop
push
sbb
cmp
adc
push
adc
stos
pop
ja
fiaddl
add
push
loop
aad
push
mov
mov
push
sub
outsl
xchg
sub
cmp
push
and
mov
cmp
pop
inc
das
enter
push
push
mov
bound
sub
mov
cmp
xchg
call
pop
and
inc
and
gs
mov
or
call
adc
rorb
sbb
sbb
adc
push
movsl
out
push
inc
les
xchg
int
jl
or
pusha
xchg
sub
in
xor
fldenv
movsb
dec
and
add
icebp
jo
shrl
mov
push
repnz
or
and
pop
or
popf
push
and
movb
pop
push
orps
adc
pop
dec
lods
clc
xchg
iret
add
jmp
out
xchg
inc
lds
jl
pop
cmpsl
das
push
mov
xor
mov
fdivs
je
jmp
cltd
mov
sti
push
and
das
push
outsl
cmp
inc
stc
xor
pop
and
add
imull
mov
sub
sbb
lods
mov
add
inc
cmp
mov
jmp
call
and
mov
jne
bound
jg
mov
mov
sarb
dec
pop
neg
icebp
movq
ficomps
sbb
ja
mov
cmp
sbb
lahf
push
psubsb
mov
and
push
push
pop
pop
or
sub
mov
stc
sbb
lea
mov
test
pop
and
movsl
mov
add
sbb
nop
cmpsb
leave
push
fcompl
cmp
repz
movsl
and
push
or
lret
faddl
nop
sbb
in
adc
test
inc
inc
lock
and
jle
outsl
enter
arpl
lock
sti
mov
int
push
test
ljmp
or
cld
sub
inc
sti
adc
cmpsb
ds
mov
xor
repnz
dec
test
int3
mov
test
andl
arpl
xchg
sbb
sbb
int
aaa
and
add
jmp
jmp
popa
loop
sbb
aam
pop
xlat
data16
fcomps
push
cmp
setp
das
xchg
ret
hlt
push
pop
jmp
adc
or
dec
lret
jnp
mov
stos
rclb
nop
aad
rorb
push
adc
xor
pop
mov
sbb
insl
call
or
inc
inc
push
popf
enter
addl
cmp
xor
mov
addb
cld
mov
or
jmp
lds
in
and
cli
dec
pop
adc
and
mov
movsl
pop
daa
or
dec
jbe
sub
fstps
fcoms
mov
mov
pop
mov
in
adc
cli
mov
stos
adc
or
mov
push
add
fsubrs
iret
adc
es
push
mov
push
fucomip
sbb
enter
shl
mov
scas
mov
clc
add
addb
es
jl
aad
sub
cmp
and
in
ret
js
adc
xor
xchg
gs
jmp
and
xor
adc
adc
jbe
fs
jl
test
pop
push
jecxz
ja
lret
or
cwtl
enter
cmp
rcrl
and
add
int3
cs
xor
fisttps
rorb
bound
xor
jl
push
inc
and
mov
lods
sub
mull
fbstp
mov
jle
and
push
push
mov
pop
shll
sbb
das
mov
pusha
cmp
jl
push
int
add
xchg
out
or
imul
xchg
pop
leave
adc
sti
mov
mov
add
or
push
movsb
hlt
cld
xor
xor
sub
xor
or
add
fistpll
cli
dec
mov
enter
sbb
adcb
pusha
loop
aas
pushf
lea
xor
out
push
aam
rorb
lock
les
add
inc
cmpsb
lret
cld
mov
inc
jp
fdivr
cmp
std
adc
call
inc
sbb
sbb
mov
sbb
cwtl
cmpb
daa
shrb
mov
daa
dec
pop
test
add
and
or
mov
mov
mov
into
mov
loope
adcb
dec
mov
mov
or
cmp
jge
mov
out
dec
movsl
cwtl
test
mov
inc
call
push
jne
xchg
repnz
out
cltd
adcl
pop
test
xchg
cmpb
inc
out
loop
mov
sub
and
sub
jno
adc
in
inc
and
dec
mov
or
loope
dec
or
test
sbb
add
movsl
add
pop
sub
test
dec
push
ja
test
and
and
sbb
and
mov
adc
push
jg
mov
cmp
test
das
mov
nop
push
pop
pop
test
dec
mov
daa
imul
sbb
mov
xor
lods
jmp
push
fwait
cmp
cld
cli
sbb
mov
pushf
adc
call
inc
and
test
in
and
cli
pushf
dec
xchg
pop
pop
xor
inc
sti
sub
dec
sub
ja
stc
loopne
call
mov
mov
test
mov
adc
xor
adcl
orb
inc
inc
mov
or
lods
sub
loopne
sti
or
inc
jns
data16
icebp
outsl
pop
push
test
dec
inc
aaa
jmp
inc
clc
adc
pop
adc
sub
test
inc
addl
lcall
push
sub
cmp
nop
sub
and
in
inc
inc
inc
sub
mov
cmp
and
inc
or
xchg
gs
mov
and
or
lods
sarl
and
and
adc
adc
or
jecxz
sub
addr16
loope
mov
dec
dec
cmpsl
icebp
dec
cld
jle
addr16
dec
jg
adc
push
push
adc
xchg
nop
or
inc
and
pop
mov
insb
movsb
sub
xchg
nop
clc
and
inc
or
jnp
push
rcrl
ljmp
test
mov
lahf
adc
cwtl
clc
jb
xchg
adc
dec
call
stc
call
push
scas
bound
outsl
sub
pop
stc
jbe
clc
jle
adc
or
cmpb
adc
clc
mov
into
push
and
clc
aaa
or
jle
or
icebp
jmp
leave
test
or
outsl
bound
add
jns
scas
int
scas
sub
insb
aas
mov
pop
mov
std
adc
das
xchg
ror
push
aas
cltd
cli
add
loop
lret
dec
xor
clc
mov
push
pushf
ds
mov
cmpsb
adc
std
test
imull
insl
dec
bound
adc
push
inc
sub
sub
sbb
call
fstp
loope
sub
or
push
push
inc
mov
leave
push
mov
jge
test
daa
inc
cmp
sbbb
inc
adc
mov
movsb
jge
mov
dec
pop
or
push
sbb
xlat
pop
add
clc
iret
int
sbb
jge
mov
jmp
or
mov
rcr
scas
inc
jp
and
sbb
bound
or
cwtl
in
hlt
xor
jns
popl
mov
js
stos
cmp
jecxz
jno
or
sub
fbstp
or
repnz
nop
stc
or
and
pop
clc
into
inc
xchg
sbb
aaa
mov
and
or
jne
and
pop
or
sub
push
in
push
push
xlat
push
add
inc
adc
pop
xor
push
cld
repnz
call
fbld
or
adc
sub
imul
jle
mov
scas
xor
mov
in
push
icebp
jle
jge
or
xchg
mov
test
rclb
or
in
fst
out
and
repz
xchg
pop
pop
test
out
fs
sbb
mov
or
sub
outsb
out
jge
sub
sbb
xor
cmp
dec
push
jbe
dec
lret
cli
loopne
out
and
dec
insb
sub
push
xchg
xor
mov
inc
fisttps
out
xchg
jo
fdivrl
mov
pushf
sub
pop
in
mulb
jnp
test
or
jnp
cwtl
stc
repz
cmpsb
lcall
cmp
or
out
mov
out
dec
ja
dec
mov
out
jnp
add
int3
xlat
push
cmpl
add
xchg
mov
dec
jge,pt
sub
enter
imul
ret
insl
mov
sub
inc
jmp
adc
sub
es
mov
ds
mov
and
mov
push
je
jne
movsb
adc
cmp
sub
fmull
test
es
sbb
outsl
and
cmp
jle
imul
add
ret
outsl
xchg
pop
lahf
sub
bound
movsb
dec
pop
pop
pop
leave
dec
mov
mov
or
insl
movsl
pop
lret
imul
fisttpl
fistps
mov
push
lock
push
aaa
test
or
xchg
mov
or
test
adc
pop
test
and
adc
dec
mov
xchg
sbbb
dec
sub
ss
repz
inc
xchg
dec
enter
mov
mov
mov
clc
jo
push
test
cmp
and
mov
mov
jno
aaa
sub
mov
dec
andb
mov
jno
test
and
sbb
sbb
inc
jns
test
push
sub
inc
dec
lret
mov
jns
ja
xor
cmp
mov
cmp
push
xchg
pop
cmp
adc
shrb
cltd
jp
lea
adc
stos
mov
xor
pop
push
test
mov
xchg
cmpsb
mov
call
cmp
and
popf
sbb
sbb
push
mov
or
sub
roll
dec
std
push
inc
outsb
scas
inc
cmp
movsb
push
loop
xor
adc
and
sub
int3
mov
jmp
cs
cmp
sub
lret
xorl
adc
xor
push
les
adc
pop
xchg
cmpsb
mov
outsb
cld
lds
or
movsb
mov
jmp
xchg
xor
adc
dec
sub
inc
int3
js
outsl
or
jmp
push
mov
mov
mov
pop
xchg
sahf
fistl
cmp
sbb
pop
ljmp
jo
testl
outsb
cmc
push
add
stos
cmp
ficoms
cmp
jmp
mov
ret
and
mov
and
dec
xor
ja
dec
cmp
cmp
arpl
mov
adcb
movsb
clc
or
hlt
mov
leave
add
call
and
push
inc
push
lods
adc
inc
lahf
cmpsl
jecxz
mov
cwtl
or
mov
sub
or
and
fs
push
mov
fistps
adc
and
ret
loope
mov
out
sub
push
adc
and
or
dec
dec
idivb
jbe
test
test
addr16
xor
sub
jl
mov
or
sti
fists
in
lods
xor
adc
mull
xor
or
or
mov
or
xor
push
mov
cwtl
test
xchg
loop
mov
jne
popa
sub
or
cmc
jl
sbb
fmuls
out
dec
sub
je
jne
loope
xor
jmp
add
fidivs
sbb
pop
jge
xor
test
xorb
xchg
call
adc
call
push
xor
cmp
push
adc
and
xor
and
adc
jbe
xchg
and
or
popf
sub
sub
adc
jno
and
adc
outsb
mov
xchg
pop
call
jp
incl
push
push
adc
jle
ljmp
dec
add
xchg
test
call
call
sub
push
das
inc
dec
xor
jmp
nop
or
lds
jae
les
and
jmp
sub
fs
cmpsb
lret
pop
fcomp
jno
xor
cmc
sub
pushf
ljmp
insb
xor
sbb
add
or
inc
adc
sub
shrb
orb
xor
cmp
cld
stos
jmp
repnz
push
call
mov
mov
sub
jno
inc
adc
inc
xchg
movsb
das
adc
sbb
xchg
lods
xchg
push
loop
leave
inc
jb
mov
push
or
xchg
les
stc
xor
sub
xchg
les
cmp
pushf
jb
cs
push
inc
mov
out
and
and
js
sbb
mov
movsl
xor
pushl
and
mov
insb
xor
jecxz
test
cmpsb
cld
and
shrb
icebp
hlt
lret
dec
cld
mov
aam
dec
stos
les
fistps
adc
jecxz
adc
data16
inc
xor
sub
xchg
or
sbb
test
std
pop
adc
push
scas
add
loopne
mov
ja
or
sub
rcrl
lods
jne
inc
inc
ficomps
aad
inc
xlat
push
push
or
xchg
mov
mov
adc
mov
push
icebp
inc
inc
je
push
lock
out
sbb
xor
data16
pop
sub
jmp
cs
aad
sbb
dec
jmp
add
jo
mov
mov
add
icebp
pop
push
sub
adc
cmp
nop
test
in
test
sbb
adc
nop
add
repnz
lret
xchg
push
jmp
mov
pop
mov
movsbl
adc
outsl
adc
adc
call
and
or
xor
movsl
and
push
rcrl
mov
jmp
mov
push
mov
scas
movsl
dec
lcall
cs
push
fildl
sti
sub
sub
test
cmp
and
xor
pop
cwtl
sbbb
sub
xchg
lods
jmp
push
enter
mov
in
pop
es
icebp
or
jo
dec
outsl
mov
jnp
and
jmp
pop
xor
mov
js
cmpl
mov
push
mov
xor
call
inc
insl
and
xlat
or
call
sub
fdivp
or
pop
mov
add
addb
mov
push
ret
push
xchg
or
xchg
out
incb
mov
sar
inc
xchg
mov
adc
and
cmp
sbb
fcoms
push
mov
and
loopne
div
fdivrl
sbb
adc
repnz
push
add
rolb
ret
mov
inc
inc
sahf
mov
movsb
repnz
cmp
jne
xor
sub
test
pop
pop
adc
mov
and
nop
cld
sbbb
xchg
out
das
xor
inc
nop
insl
test
sub
and
jmp
das
fs
insb
cli
sub
aam
add
mov
popf
je
pop
arpl
daa
push
lea
fs
fdivs
testb
or
add
inc
cmp
jne
xchg
in
pop
add
movsb
sbb
loop
jne
repnz
sbb
dec
mov
mov
cmp
inc
inc
shrb
push
mov
clc
scas
and
mov
subb
adc
lea
push
das
push
jb
pop
test
fldcw
dec
push
out
stc
lds
cmovbe
and
adc
jge
pop
call
sahf
mov
sbb
pop
xchg
jne
fwait
jnp
pop
shlb
lcall
inc
sub
popf
fsubrl
jb
sti
enter
leave
data16
mov
pop
or
movsb
dec
add
pop
jns
mov
sub
int
or
pop
sarb
mov
std
ret
sbb
nop
xchg
adc
add
test
lret
pop
cmpsl
inc
add
sbb
test
mov
push
cmc
repz
jbe
jo
inc
push
sbb
mov
out
repnz
sahf
pop
mov
push
imul
add
lds
push
xlat
repnz
lret
adc
rcll
mov
loope
jmp
sbb
out
insl
lcall
imul
and
jno
add
push
outsl
clc
xchg
mov
inc
or
adc
imul
clc
jmp
sub
insb
or
rorl
push
pop
mov
mov
scas
adc
es
loopne
cld
xor
xorb
sbb
jo
daa
add
fmull
pop
jns
sub
pop
inc
mov
or
push
and
call
sbb
pop
pop
or
jg
daa
dec
mov
mov
shrl
sbb
and
push
in
inc
loope
nop
repz
push
call
dec
aas
adc
loop
packssdw
cli
push
hlt
testb
xor
ret
imul
add
sub
dec
pusha
or
push
jmp
fnstenv
or
pop
xchg
push
or
pop
popa
das
repnz
xchg
push
or
hlt
enter
popf
stc
sbb
mov
popa
adc
shrb
mov
adc
adc
pop
adc
push
call
xorl
lods
faddl
jmp
subb
jecxz
sub
insb
inc
push
dec
mov
sbb
pop
push
sbb
xor
aaa
push
jmp
addb
push
push
mov
and
movsl
sub
adc
les
shrb
add
and
pop
and
pop
xor
icebp
lea
cmovno
ds
adc
sbb
das
mov
jg
xchg
je
ficoml
or
mov
in
sbb
adcb
cmp
push
jae
andl
dec
cltd
inc
call
mov
imul
in
push
loope
sbb
fistpl
adc
push
and
es
cli
pop
punpckhdq
push
mov
bound
cwtl
mov
jmp
in
xchg
xchg
aas
and
jo
movsl
inc
scas
xchg
sahf
seto
sbb
or
call
stos
mov
sti
sbb
and
inc
sub
cmp
rclb
sbb
adc
nop
filds
jns
sbb
cmp
inc
adc
aaa
cmp
inc
mov
push
lds
cmp
push
mov
jl
rorb
lods
shll
test
push
mov
cmp
stos
jmp
repnz
inc
das
adc
popa
dec
daa
jmp
mov
sbb
pop
stos
and
mov
repnz
sub
xor
jno
push
fdivrl
insb
lods
pop
pop
arpl
inc
sarl
push
loop
mov
and
adc
addr16
mov
sti
aas
mov
dec
daa
jo
std
into
outsl
adc
add
out
loope
clc
cld
fs
xor
aas
mov
ds
inc
or
adc
aaa
shll
sti
cltd
movsl
fcomps
xchg
sub
int3
pop
and
mov
mov
xchg
jno
dec
or
mov
or
aam
cmpsl
imul
sbb
icebp
add
push
adc
sbb
cld
mov
inc
cmp
or
pop
sbb
cld
in
pop
mov
add
lds
lcall
ds
inc
scas
or
mov
sub
dec
xor
and
mov
xor
xor
lods
aam
adc
and
push
cmpsl
lret
sub
pop
push
sbb
pop
jno
xor
adc
test
cmp
xchg
inc
cmp
shr
adc
sbb
jmp
mov
mov
inc
aas
jbe
sub
sbb
and
adc
push
iret
adc
lock
adc
les
mov
cld
xchg
pop
int
cmpsl
jbe
fwait
sub
fcompl
mov
sub
inc
jle
dec
cmpsl
or
psubsb
dec
push
or
pop
out
or
cmpsl
inc
or
sbb
adc
inc
adc
sbb
das
pushf
pop
push
cli
or
inc
adc
mov
jns
nop
inc
gs
inc
cmpsl
das
mov
out
and
enter
mov
iret
xchg
das
mov
iret
pop
rcll
shrb
mov
insb
rorb
test
inc
pushf
push
rorb
sbb
sti
adc
sub
andl
pusha
loope
sbb
pop
js
outsb
adc
test
ja
xchg
sub
or
js
xor
das
dec
push
adc
sbb
or
jge
mov
xor
shl
pabsb
lea
daa
cld
sub
mov
jmp
and
adc
inc
adc
lahf
rcrl
sbb
daa
jmp
notb
sti
inc
scas
movsl
test
sbb
cld
and
mov
test
sbb
je
in
dec
adc
outsb
testl
dec
adc
mov
mov
adc
dec
mov
xor
bound
mov
jae
dec
sbbb
jmp
dec
fsubs
and
lret
push
xor
mov
add
das
add
lock
clc
add
ret
xchg
pop
popf
push
popa
insl
mov
repnz
sbb
sub
sbb
push
mov
addb
adc
insb
pop
push
push
leave
in
arpl
sbb
cwtl
pusha
pushl
call
leave
pop
jbe
mov
inc
cmpb
and
jns
sbb
sub
add
jmp
or
mov
jne
roll
and
aam
and
mov
aad
in
sbb
test
adc
jecxz
xchg
xchg
out
arpl
adc
adc
cmpsl
sub
jmp
pop
mov
mov
dec
movsl
sub
sbb
mov
iret
pop
adc
mov
inc
mov
sarl
shrb
inc
push
or
mov
leave
ret
jne
and
dec
mov
or
sub
dec
shll
push
lret
sbb
push
addr16
jg
fs
and
jle
push
fisttpl
mov
pop
xlat
inc
lea
cwtl
rorb
mov
sbb
imul
sbb
cmpsl
adc
scas
mov
jns
push
decb
xorl
insb
dec
jne
jne
fstl
and
mov
sbb
dec
mov
xor
xor
sub
mov
stos
mov
adc
decl
cld
in
xchg
push
lahf
xor
stc
cmpsl
xchg
push
sahf
jecxz
sbb
subl
mov
jmp
fadds
push
xor
inc
stos
in
ret
mov
imul
xor
das
inc
jmp
adc
mov
gs
xchg
sub
lods
fsubrl
jge
xor
adc
and
xor
xchg
cmpsl
adc
sub
das
rorl
std
add
or
adc
cli
add
mov
adc
nop
adc
dec
jp
xchg
test
push
cltd
mov
sbb
pop
adc
xor
fldl
adc
push
dec
cltd
and
lret
ss
mov
dec
push
or
jmp
scas
mov
rorb
std
xchg
enter
enter
mov
hlt
or
push
inc
test
mov
mov
sub
roll
hlt
pop
ds
push
lock
push
sbbb
fbld
test
push
cmpsl
jg
test
outsb
pusha
and
and
adc
adc
or
jge
loopne
jne
jmp
decb
pop
pop
test
in
push
and
push
adc
in
xor
into
inc
data16
insb
ret
sbb
divb
add
call
movsl
xor
pushf
pop
jecxz
xor
adc
inc
mov
or
or
outsl
push
pop
fimull
fmull
dec
sbb
sub
lock
sub
adc
add
sbb
add
push
call
and
cmp
mov
call
popf
push
xchg
pop
pusha
inc
lds
daa
mov
arpl
jl
scas
gs
sub
mov
cmp
cmp
pop
push
and
sbb
adc
in
push
xor
add
call
xchg
mov
pop
inc
cmp
jl
in
and
test
test
ljmp
dec
jmp
mov
mov
dec
xchg
and
or
jne
sbb
xchg
cmp
mov
lahf
bound
stos
repnz
push
repz
test
dec
nop
ss
jne
rclb
cmp
addb
push
jl
and
adc
add
adc
scas
push
push
lods
loop
fists
cvtps2pi
adc
jmp
push
call
sbb
or
adc
inc
and
cmp
orb
mov
and
mov
add
inc
hlt
orl
push
or
orl
out
jnp
daa
pop
adc
fcmovu
mov
popa
adc
cmp
jge
cmp
stos
cmp
clc
cmp
mov
clc
fs
or
les
xor
mov
cltd
pop
inc
cmp
cltd
jne
mov
or
jl
rcrl
and
fs
enter
cmp
jnp
jecxz
and
cltd
mov
insb
jp
inc
adc
in
sub
sbb
inc
lock
pop
es
int3
ffreep
in
adc
cli
leave
sub
mov
lcall
mov
mov
test
jmp
and
testb
sbb
mov
dec
push
sub
pop
jbe
pop
jp
imul
dec
mov
mov
mov
push
pop
mov
jge
je
lea
inc
hlt
dec
mov
neg
pop
xchg
mov
push
js
pop
cmp
adc
add
inc
sbb
lret
jle
ret
cmpsl
lea
mov
test
fsubs
idivb
xchg
jle
mov
sbb
ret
shrl
enter
push
jmp
loopne
in
das
mov
insb
int3
popf
hlt
dec
push
add
push
mov
jnp
lcall
xchg
insl
das
dec
aam
lret
push
and
je
lea
cmp
pop
daa
add
stos
mov
sub
das
ficoms
loopne
shrb
mov
jns
inc
mov
aam
dec
push
mov
pop
and
pop
mov
add
enter
push
inc
int3
jnp
movl
aam
in
xor
inc
dec
adc
lock
mov
xchg
pop
jg
mov
test
sbb
test
xor
lds
inc
mov
sub
insb
cmp
jge
jne
loopne
jmp
cmc
sub
cmc
mov
les
mov
test
push
scas
sbb
dec
or
call
mov
push
movsl
xor
cmp
ret
lock
jg
inc
addr16
shrl
jmp
add
sbb
loope
in
int
adc
pop
repnz
loopne
test
push
dec
movsbl
andb
cmp
add
or
mov
mov
mov
mov
adc
test
int
nop
aaa
jnp
cmc
xchg
mov
push
pop
xor
push
sti
cmpsl
push
pop
mul
adc
jmp
sbb
lock
adc
jne
pop
movsl
push
in
fldt
adc
dec
mov
rcl
push
mov
fs
jmp
stos
insb
push
xor
push
enter
xor
cmp
nop
inc
enter
mov
or
sbb
push
test
and
das
popf
inc
sbb
clc
outsb
fs
in
pop
ljmp
jge
mov
fldenv
outsb
inc
lock
jg
sub
dec
add
add
pop
rcll
mov
inc
xor
push
mov
mov
inc
mov
sbb
pop
or
cmp
cltd
dec
jmp
je
sub
arpl
neg
add
cmpw
pop
aaa
jne
push
mov
jnp
cmp
jno
pop
sbb
xor
enter
jo
xchg
fidivrl
pop
add
sub
inc
cmp
insl
xchg
jno
ror
nop
cld
mov
and
test
es
pop
xchg
push
jecxz
push
imul
or
push
scas
jne
gs
adc
push
repz
xor
xlat
cltd
dec
push
and
adc
or
adc
lret
popf
and
adc
les
ret
sbb
loopne
or
pop
int
adc
enter
pop
lods
or
pushf
fmul
xor
and
dec
lret
and
inc
icebp
jae
and
pop
mov
adc
jmp
pushf
movsl
test
fs
rcrb
lret
leave
jno
push
mov
or
mov
cmp
adc
lock
fimuls
mov
xchg
or
sbb
add
xchg
arpl
das
lcall
and
mov
push
xchg
mov
shrb
and
aam
xchg
pop
adc
clc
add
pop
rorl
es
fiaddl
aas
into
push
xor
jge
pop
iret
adc
add
ret
sub
insl
stos
das
push
mov
das
mov
push
xchg
test
lret
inc
dec
pop
test
movsb
adc
dec
cmp
push
dec
pop
pop
stos
daa
push
sahf
adc
or
mov
inc
xor
mov
bound
inc
pop
cmpb
or
add
mov
fnstsw
dec
adc
idivl
dec
mov
jecxz
adc
push
pop
out
pop
push
cmc
aad
mov
cmpsb
insb
jbe
adc
nop
push
jo
xor
out
sub
mov
fdivrl
mov
adc
or
add
imulb
ja
or
jl
inc
or
cmp
jge
adc
mov
lahf
or
mov
sub
shl
inc
add
hlt
add
push
pop
sub
jo
adc
xor
test
jo
fidivs
xchg
in
mul
cmp
xchg
enter
and
cmp
cmp
je
mov
pop
mov
sub
sbbb
jmp
gs
test
icebp
mov
pushf
or
sub
mov
js
pop
mov
push
pop
mov
pop
and
test
jle
mov
push
flds
inc
pop
mov
ds
mov
add
pop
cld
mov
cmp
sahf
and
test
jle
cmp
je
xlat
ffreep
push
or
cltd
dec
add
ret
dec
inc
add
adc
mov
rclb
jg
adc
push
and
jne
inc
sub
push
sbb
jmp
dec
and
dec
cmp
and
ret
mov
test
les
and
or
test
int
lods
cwtl
iret
dec
repnz
xor
cmpsl
adc
dec
movsb
inc
int3
xor
add
mov
enter
adc
sub
movq
sti
pop
inc
mov
mov
xor
mov
enter
cli
out
fs
xor
pop
call
fmull
xorl
in
pusha
xchg
mov
or
popa
je
dec
push
mov
enter
addr16
jle
add
jno
scas
pop
dec
xchg
dec
dec
dec
or
shr
data16
sub
jne
pop
movzwl
cmp
cs
and
mov
or
andl
imul
rcr
inc
add
push
xchg
iret
pop
lidtl
in
test
cmp
push
mov
pop
pop
mov
test
je
test
outsb
sub
iret
adc
rol
dec
cmp
mov
or
arpl
or
data16
icebp
ljmp
cmpsl
cmc
inc
loop
sub
xchg
pop
sbb
lret
ret
dec
inc
adc
mov
or
sbb
dec
adc
or
mov
xor
enter
clc
neg
xchg
or
sub
or
jge
clc
pop
cmpb
xor
push
inc
fisttps
cmpsb
or
xorb
pop
insb
cmp
cmp
mov
lret
in
dec
add
cmp
jge
cmp
je
sbb
jecxz
push
mov
or
cmpsl
mov
cmp
jl
call
test
xor
jmp
sti
add
sbb
cmp
add
adc
andb
rorb
pop
stc
cmp
les
call
mov
cmp
push
push
popa
xor
mov
sbb
mov
sub
adc
pop
and
ljmp
orb
sbb
jmp
dec
repnz
pusha
cmp
call
jne
cmp
pop
bound
mov
mov
mov
repnz
xor
icebp
adc
adc
dec
pushf
xchg
add
cmp
clc
or
loop
xchg
push
mov
dec
xchg
pop
jp
dec
loopne
xor
inc
in
inc
adc
movsl
dec
in
sub
sub
push
leave
js
fs
andb
jmp
dec
sub
aam
call
mov
mov
std
jbe
addb
rcrl
adc
push
add
sbb
test
imul
mov
cmp
jb
neg
out
loope
add
rorl
dec
cli
mov
es
cmove
lret
loop
jmp
rep
ja
dec
inc
dec
xchg
jg
adc
shl
and
scas
mov
dec
adc
pop
shlb
add
push
cmp
jbe
aad
jb
movl
cltd
jae
or
or
pusha
xchg
and
adc
inc
dec
lock
mov
xor
xor
lea
aas
nop
adc
mov
or
loopne
and
mov
ljmp
enter
pop
and
bound
es
mov
xchg
nop
and
inc
inc
inc
mov
xor
dec
and
inc
inc
cmp
mov
and
sbb
or
mov
mov
pop
dec
xchg
in
je
lock
dec
xchg
hlt
je
clc
pop
dec
xchg
cld
je
lea
movl
mov
js
icebp
orb
dec
mov
dec
push
nop
sahf
dec
or
xor
sbb
sub
rorl
cmp
sub
icebp
sub
test
inc
data16
xor
mov
adc
je
adc
sbb
cmp
or
faddl
or
xchg
mov
push
and
dec
movsb
xor
push
out
inc
jle
mov
lret
pop
push
dec
lods
mov
lods
adc
scas
xchg
or
sub
pop
shll
les
mov
adc
and
push
push
adc
je
adc
dec
xchg
adc
pop
dec
xchg
or
pop
dec
cmp
lods
and
or
cmp
xchg
mov
jp
adc
cmpsb
cmp
adc
test
pop
add
add
or
je
es
adc
shr
loope
add
nop
sub
cmp
sbb
roll
divl
movsl
rclb
mov
nop
shl
ja
xchg
int3
pop
ret
adc
mov
inc
mov
inc
int
loopne
notb
test
fidivl
dec
lret
dec
rcll
nop
movsb
aam
inc
nop
adc
enter
jne
and
mul
ret
push
or
fadds
out
inc
adc
xchg
or
inc
rcrl
sbb
cld
pop
addl
setae
sub
or
add
inc
pop
daa
or
outsl
add
ror
sub
filds
repz
add
or
fildl
out
rcrb
and
cmp
or
pop
inc
shlb
cmp
ret
jne
daa
neg
imull
insb
fstpt
or
jl
mov
cmc
adc
adc
and
mov
fwait
jnp
jg
sub
push
push
push
push
mov
cmc
sub
sarb
neg
dec
xor
cmp
jmp
or
cltd
add
or
jne
pop
pop
pop
xchg
cmpsl
adcl
cmp
add
xchg
jne
es
add
sbb
mov
fucomip
mov
pusha
imul
das
hlt
shll
push
sub
or
push
movsb
fisubl
hlt
add
add
test
jp
movsb
nopl
mov
mov
rcl
xor
sub
lcall
xorl
test
fidivs
jb
outsl
movups
add
int
jns
pop
sti
pop
cltd
or
std
std
add
cld
sub
or
xchg
sbb
sub
or
inc
arpl
pop
div
loop
sub
in
pop
insb
loope
popa
xor
and
les
or
shlb
dec
data16
or
and
scas
or
push
adc
filds
dec
add
xor
adc
ss
ret
enter
std
or
cld
test
push
dec
inc
mov
jmp
add
jae
sub
xchg
adc
cmp
push
pusha
xorb
pop
push
call
ret
cmpl
ja
cltd
data16
pushf
outsl
mov
cmp
mov
mov
and
hlt
or
cmp
or
incl
ljmp
setns
lock
lods
and
int
mov
ss
or
fs
fwait
outsb
mov
sub
cmpb
das
adc
ror
stc
and
mov
ss
loopne
ss
push
pop
pop
loop
push
adcl
or
jne
call
int3
jle
mov
fsubrl
and
mov
inc
push
call
or
jl
push
mov
ret
add
sub
aaa
xor
and
cmp
sbb
sub
fdivl
sahf
jne
addl
test
jne
inc
sbb
ret
scas
jb
xchg
arpl
adc
adc
movsb
jb
jg
cltd
adc
mov
add
pandn
cwtl
adc
pop
fsts
push
pusha
adc
mov
adc
outsl
test
insb
dec
ret
out
sarb
call
sbbb
nop
out
insl
arpl
jge
aaa
or
outsb
bound
leave
inc
dec
inc
clc
and
cmp
or
cmp
cmp
cmp
fcomps
cmp
xor
pop
xor
jne
push
sarb
sahf
fs
sbb
mov
jecxz
arpl
sub
sub
ret
pop
pop
xchg
and
xor
mov
clc
add
push
jl
pop
push
mov
das
mov
cmpsb
bound
dec
rolb
xchg
cs
jae
pop
pop
rorl
push
push
mov
mov
mov
cli
xor
inc
adc
lods
outsb
imul
dec
repz
xor
jge
inc
cld
dec
fcmove
lcall
decl
loope
mov
call
enter
clc
and
sbb
movsl
xchg
leave
mov
mov
adc
adc
jns
lods
scas
repnz
mov
mov
sbb
mov
in
sbb
call
gs
movsl
jbe
or
xor
pop
lock
mov
sub
sahf
inc
fcomps
insb
inc
int3
dec
add
adc
or
lea
imul
lods
xchg
cmp
jne
fs
int3
jmp
or
mov
jmp
pop
hlt
mov
das
int3
mov
lea
add
pmulhw
hlt
and
mov
sub
or
add
adc
push
adc
add
fidivrl
and
jne
jg
pop
movsb
sbb
sbb
imul
mov
dec
lahf
out
fs
xchg
es
repz
ja
pop
mov
dec
aam
sbb
js
call
add
dec
lea
cmp
sbb
or
mov
dec
cltd
movsb
xor
sbb
fcmove
and
lds
inc
mov
or
add
cmp
ja
ljmp
or
dec
lock
xor
mov
call
rclb
sahf
es
inc
inc
in
data16
xchg
push
push
mov
mov
push
jb
dec
mov
mov
push
imul
leave
sbb
cmp
jnp
sub
mov
mov
jmp
mov
dec
subl
cld
arpl
call
jmp
fs
mov
dec
adc
or
inc
imul
fnstsw
sahf
or
add
cs
or
imul
mov
pop
pop
cld
sub
lock
adc
push
jp
xchg
or
fstpl
or
xor
rol
cmp
les
arpl
cld
dec
pusha
or
rolb
adcl
and
das
nopl
inc
add
test
in
pop
sub
mov
orl
or
pop
push
mov
orb
add
fadds
call
xor
sub
adc
sub
rolb
test
mov
or
adc
in
pop
and
int3
or
mov
push
repnz
adc
adc
repnz
xor
mov
mov
or
leave
aaa
xor
shl
sub
xor
jae
cmp
lcall
les
mov
dec
das
sub
inc
sbb
add
inc
pop
push
xchg
add
or
rol
push
or
aas
enter
jae
fs
mov
jne
or
call
dec
lea
mov
int3
cmpsl
addr16
js
jns
lcall
or
mov
and
call
inc
out
test
mov
adc
test
jmp
aad
outsb
xor
xor
orl
jne
data16
ret
jecxz
and
popf
xchg
xchg
pop
adc
loopne
jne
loopne
inc
bound
inc
pop
loop
dec
cmp
testb
jb
stos
xor
loop
dec
mov
rclb
push
and
add
cmpl
adc
or
xchg
push
xchg
popa
daa
inc
cmp
call
cmp
inc
leave
and
popa
loope
in
xchg
cmpsl
imul
sbb
mov
mov
inc
daa
and
add
add
call
fstl
xchg
ss
cmp
je
seta
fdivr
pop
bound
jl
jb
mov
dec
and
sbb
inc
adc
add
adc
dec
xor
dec
push
push
sub
add
add
cld
pop
insb
jno
or
inc
sbb
int
movsl
sub
push
add
rcl
mov
mov
adc
add
xor
cmp
jl
into
test
jp
push
pop
jecxz
or
je
mov
mov
repz
cmp
mov
inc
or
pop
mov
cmp
jne
pop
push
and
inc
add
subl
shl
loopne
mov
xchg
cmp
call
pop
sub
mov
loop
in
sbb
push
push
push
sbb
arpl
and
dec
ret
add
in
sbb
mov
ret
out
or
out
jb
push
test
lret
add
imul
dec
ds
movl
fs
mov
fidivrs
rcrb
repnz
sahf
je
cld
mov
add
or
jg
sbb
add
adc
cmpl
cltd
xorb
fiaddl
jbe
notb
add
add
and
and
mov
andb
sbb
je
sub
mov
add
nop
cmpb
rolb
loop
loopne
or
cmp
xchg
adc
rcrb
cld
push
ror
xorb
sahf
out
jmp
jnp
dec
xor
adc
xchg
xor
jbe
xchg
dec
ja
sbb
popa
jmp
int
sbb
mov
cltd
fldenvs
cmp
push
pop
or
jle
or
jge
and
jge
push
pop
fwait
iret
and
cwtl
pop
mov
cmp
ljmp
ja
out
daa
jmp
pop
scas
add
adc
ret
sbb
sub
pop
nop
pop
and
enter
add
push
push
scas
ret
adc
sbb
ret
add
mov
sar
jmp
add
inc
xchg
rcll
lahf
icebp
adc
ret
or
and
aaa
sub
xchg
add
jmp
in
test
and
add
icebp
xor
cmpl
into
inc
mov
jns
xor
add
ret
jg
ss
jmp
in
dec
pop
and
dec
pop
mov
dec
sbb
jne
out
stc
mov
shll
jecxz
les
add
lea
cmp
pop
mov
mov
ror
inc
mov
iret
int3
call
lea
jg
inc
test
jne
in
test
dec
adc
add
push
lock
into
pop
push
shl
add
out
add
adc
je
icebp
scas
icebp
inc
outsl
or
pop
push
and
push
dec
pop
sub
loopne
cmp
jne
dec
adcb
mov
pop
or
dec
hlt
mov
and
push
in
mov
jp,pn
xchg
flds
adc
movb
jge
fimull
outsl
jmp
mov
je
sub
sub
or
push
push
and
popa
fmull
and
repz
mov
dec
ret
xor
adc
in
imul
cmp
pop
cli
rclb
mov
enter
and
inc
push
je
jb
and
dec
push
in
popa
jne
test
fisubl
and
nop
mov
lods
or
or
pusha
dec
jecxz
mov
test
dec
setae
ret
jne
std
or
das
sbb
or
and
sbb
add
mov
adc
or
sbb
adc
cld
inc
cmp
adc
or
xchg
test
hlt
xlat
and
and
or
nop
lds
stc
mov
imul
or
xor
push
repnz
lock
cmp
and
repnz
roll
lret
cli
push
mov
mov
inc
ljmp
mull
xchg
pop
lods
and
jne
stos
adc
push
cwtl
jbe
lahf
add
pop
inc
and
test
enter
dec
push
les
xor
dec
mov
or
or
pop
mov
jne
rorl
dec
jmp
mov
and
je
jl
sub
and
xor
or
add
jns
xchg
movsb
or
push
enter
mulb
rclb
inc
shl
sbb
add
or
adc
jo
addr16
andl
push
dec
mov
std
ret
cmp
incb
dec
add
lea
lcall
cltd
dec
icebp
fs
push
data16
mov
jle
push
push
push
out
add
or
pusha
movsl
rcll
pusha
stos
in
or
rcl
shl
push
ficoms
or
mov
pusha
jo
subl
jmp
pop
iret
xchg
loopne
adcl
and
pop
cmp
add
xchg
pop
ljmp
inc
ss
out
lock
daa
xchg
scas
pop
out
clc
daa
inc
adc
aam
xchg
rcrl
pop
jo
pop
std
cld
adc
pushf
daa
jge
fstps
and
adc
loopne
push
xchg
xchg
dec
js
dec
pusha
push
add
inc
mov
jmp
add
insl
inc
and
adc
enter
nop
mov
andb
retw
into
fwait
pop
test
push
xor
jmp
ret
mov
push
sbb
mov
and
xchg
shrb
add
or
add
and
sbb
jmp
addr16
push
fldl
push
out
mov
mov
dec
das
mov
je
push
repnz
pop
roll
cld
mov
or
cmp
js
test
cmp
add
fsubr
dec
sbb
or
xchg
fsts
pusha
mov
mov
jne
inc
xor
inc
push
jl
pop
xchg
mov
jmp
or
mov
fistps
adc
jle
ds
mov
repnz
daa
or
divb
adc
jmp
call
ljmp
pop
inc
dec
add
and
mov
mov
fadd
pop
or
sahf
push
in
ret
push
adc
mov
popf
ja
aad
add
dec
mov
dec
adc
scas
call
adc
sbb
mov
pop
xchg
imul
ja
stos
aam
mov
push
insb
fbstp
adc
in
pop
mov
dec
dec
or
sub
frstor
je
sbb
cmp
jne
xchg
or
call
je
sub
repnz
jmp
jmp
not
pop
cs
insl
mov
jns
mov
addl
push
lods
stc
xchg
add
add
sub
cmp
jb
xchg
mov
jne
or
pop
shlb
inc
movsb
movsl
push
dec
cmpsb
xchg
mov
test
sti
xchg
pop
fisttpl
stc
push
cmp
sub
std
lods
out
jno
das
shl
or
sbb
xchg
sbb
inc
icebp
mov
data16
sbb
jmp
shrl
push
shll
dec
fistpl
add
or
jne
div
scas
cmp
xchg
orb
add
jb
cmp
dec
ja
adc
push
jbe
sub
cltd
sbb
mov
neg
sbb
aad
push
push
nop
xchg
scas
sbb
lret
dec
adc
sub
inc
adcl
sbb
vcvtdq2pd
or
add
aam
pop
mov
daa
stc
aad
nop
or
fistps
cmpb
jne
bound
jecxz
adc
je
or
or
data16
roll
mov
sub
xorb
lcall
jle
mov
shl
adc
test
jmp
subb
pop
and
jne
fs
clts
lea
push
pop
std
xchg
out
imul
or
sub
add
sub
cmp
imul
xchg
hlt
sbb
scas
and
pop
imul
dec
adc
and
sahf
xchg
dec
add
jb
aam
insb
aas
adc
call
jge
popa
inc
sub
xchg
dec
lock
scas
pop
sbb
and
add
sub
inc
adc
pop
sbb
and
push
inc
or
lret
std
jmp
clc
dec
push
repz
pusha
leave
je
loope
mov
jg
push
fisubl
and
clc
xlat
mov
rolb
cltd
sbb
scas
push
jns
in
or
push
push
out
mov
movswl
or
in
mov
mov
lds
out
rcl
ljmp
ja
cmp
or
and
or
xor
call
jmp
xchg
sti
xchg
and
popf
and
inc
cld
dec
sbbb
push
mov
push
sbb
dec
cmp
adc
inc
fcompp
mov
or
punpckldq
pop
mov
push
push
inc
test
sbbl
in
stos
inc
popf
fisttpl
mov
jmp
adc
or
pop
lret
mov
push
dec
ss
js
divb
push
xor
sub
enter
jmp
test
mov
rol
pop
push
inc
fs
sub
xchg
and
sub
lds
sbb
sbb
sbb
xlat
sahf
and
enter
sbb
cmc
ret
shr
xchg
fld
xlat
inc
fcomi
xchg
and
fs
adc
dec
jne
jb
test
lret
push
push
ret
dec
fidivl
repnz
cltd
or
clc
lret
or
pop
jo
orb
inc
and
dec
or
push
rcll
cmp
cmc
inc
loopne
add
push
out
adc
push
imul
jecxz
arpl
cmpsb
pop
sub
cmpsl
inc
daa
jecxz
cld
fwait
push
sahf
dec
je
je
popf
imul
ljmp
mov
sbb
pop
mov
les
mov
add
cmp
jne
cmp
sbb
adc
sub
push
bound
push
dec
mov
or
cmpw
lea
or
clc
adc
cli
clc
enter
rcl
dec
les
mov
in
jle
or
push
mov
adc
push
ficoml
cmp
or
sub
xchg
outsl
add
add
data16
xor
mov
insb
subb
jecxz
inc
and
dec
lahf
je
bound
arpl
or
mov
push
jae
and
pop
jp
mov
imul
add
jne
popa
in
cmp
daa
sbb
mov
rcrb
sarb
xchg
sbbb
sub
mov
das
jmp
mov
mov
loope
pop
jmp
push
jp
decl
sub
je
dec
mov
mov
call
push
push
adc
sub
into
xchg
adc
sub
das
bound
push
inc
inc
adc
add
add
fimuls
cmp
xor
mov
andps
test
cmp
sbb
jl
dec
push
jl
pusha
push
lea
lock
lret
roll
and
pop
js
movsb
xchg
inc
sub
sub
adc
or
xchg
adc
mov
sub
or
add
movsb
cmp
xor
mov
pop
jecxz
push
mov
mov
xor
pop
test
or
loope
call
pusha
cmp
and
xchg
sub
xchg
sbb
add
push
aam
call
adc
clc
mov
dec
testl
dec
push
mov
xchg
pop
jp
pop
movsl
adc
gs
leave
or
icebp
xchg
daa
jne
iret
and
sbb
testb
pushf
mov
push
jle
or
jmp
out
or
cmp
pushf
push
xor
pop
push
insl
inc
mov
ljmp
xor
or
call
adc
enter
scas
mov
sbb
jae
mov
test
rep
mov
mov
xor
ret
pop
cmpsb
movsb
test
cwtl
inc
push
pop
adc
cmpb
repz
inc
pop
and
mov
data16
adc
xor
lods
push
add
and
mov
leave
inc
inc
xor
sbb
add
test
and
je
adc
inc
cmc
push
call
imul
cwtl
cli
sub
or
sbb
xchg
loope
sub
cmp
sbb
mov
add
adc
push
imul
jl
dec
xorl
sar
xchg
pop
mov
xchg
lea
jmp
test
roll
testb
je
push
add
cmp
mov
jmp
cwtl
cli
mov
test
sbb
push
test
and
sbb
rorb
jae
xchg
dec
xchg
test
push
add
mov
in
push
or
mov
xchg
or
mov
cmp
jl
sti
and
or
push
jle
pop
mov
loopne
xchg
mov
mov
add
add
push
inc
mov
ja
cmp
mov
add
loopne
in
cld
add
jmp
sub
in
or
inc
sub
dec
cld
adc
sbb
je
adc
jmp
sub
add
push
xor
sub
sti
sub
jp
aas
call
add
lea
cmpsb
ds
das
and
jmp
mov
addb
push
mov
test
add
mov
and
and
add
lret
push
mov
mov
cmp
mov
cs
or
and
mov
mov
std
mov
adc
and
test
adc
jg
jbe
cmp
inc
out
push
jb
js
insb
xor
xchg
mov
or
lahf
xchg
stos
jg
dec
mov
in
inc
mov
pop
das
jmp
sbb
sbb
sub
mov
sub
push
loop
mov
adc
xor
cld
test
add
add
inc
cld
xor
sub
shrl
dec
lock
sub
sbb
adc
incb
and
mov
mov
lahf
push
mov
dec
test
xchg
inc
aam
cmpw
lret
inc
and
out
pusha
xchg
add
xchg
adc
inc
lea
lret
jae
iret
mov
ds
adc
rol
mov
xchg
mov
ds
pushf
add
mov
cmpsb
xor
sub
pop
pop
je
or
test
inc
jmp
fsubrs
xor
ficomps
or
out
xor
add
aad
movsb
sub
filds
mov
mov
jmp
repnz
cli
jg
bound
or
pushf
push
or
and
ja
jo
mov
rorb
or
lock
sbb
push
mov
pop
scas
push
pop
dec
rorb
inc
and
jle
mov
ss
mov
notb
enter
popa
sub
popa
sub
mov
push
call
push
cld
test
dec
imul
add
adc
push
je
daa
add
sub
leave
add
aam
daa
jmp
cmp
iret
jmp
sbb
imull
xchg
cmp
adc
sbb
or
ds
pop
inc
dec
lds
pop
mov
jl
or
xor
push
lret
lods
add
and
test
jmp
mov
and
mov
or
add
loope
and
arpl
inc
jnp
test
or
cmp
xor
sbb
inc
xor
or
enter
xadd
or
mov
stos
repnz
cmp
or
sbb
je
in
jg
jl
das
push
jae
lods
lret
jecxz
mov
cli
ss
sbb
js
add
and
mov
rorb
jbe
cmp
or
jne
in
imul
xchg
sub
sbb
cltd
push
push
push
push
xchg
rolb
call
push
das
xor
ret
xor
mov
push
data16
clc
and
sbb
jmp
mov
push
cmp
pop
aas
xor
push
jne
and
cwtl
dec
inc
and
add
aaa
cltd
push
fsub
in
fcompp
inc
add
shll
test
mov
or
sub
or
and
cmp
sub
int3
push
hlt
xor
jns
test
pop
cmp
mov
mov
pop
pop
aas
or
xor
xor
in
xlat
loop
xor
or
mov
dec
popl
clc
lea
inc
fiadds
inc
into
xchg
enter
pop
dec
ljmp
jb
mov
enter
push
dec
sub
adc
aaa
sub
mov
add
cmpsb
inc
jno
ss
sub
ficoml
addb
or
pushf
inc
or
fwait
or
mov
and
dec
call
rolb
or
dec
add
push
call
leave
add
js
nop
xor
cltd
aas
call
cmp
lahf
adc
add
ret
clc
imul
les
xchg
iret
lock
and
fnstcw
sbb
push
and
mov
sti
mov
jb
data16
insl
pop
adc
or
testb
adc
loop
pop
pop
fs
orl
clc
pop
push
inc
or
inc
shll
sbb
test
movsb
and
ja
xchg
dec
add
mov
inc
jmp
ret
enter
orb
stc
je
inc
inc
icebp
add
gs
popa
mov
std
daa
push
lret
mov
mov
nop
cltd
pop
or
aam
push
stc
mov
sbb
adc
and
sbb
out
ret
test
or
fwait
or
adc
pop
mov
rclb
out
lods
jg
out
push
cmpsl
jl
loopne
js
fmul
mov
pop
movsb
and
je
pusha
daa
roll
or
jae
xchg
mov
push
insl
fwait
xchg
jno
pop
andb
ja
sbb
mov
adc
xor
or
push
jl
sbbl
sbb
or
rcrb
xorl
add
xor
call
jns
call
sub
sbb
sub
pop
cld
cmp
out
maskmovq
jp
imul
cld
xchg
mov
push
icebp
std
test
clc
jne
test
idivb
dec
pop
add
or
iret
jbe
push
adc
or
jne
xor
orl
and
roll
out
lea
not
and
jl
inc
decb
jne
mov
cmp
shl
insl
pop
or
mov
dec
inc
push
sbb
movsl
mov
mov
das
testl
sar
dec
je
push
pop
pusha
add
in
xlat
icebp
daa
movntps
and
clc
dec
dec
pop
sbb
push
hlt
lods
test
aas
cmp
jbe
sti
rolb
push
inc
pop
push
mov
sbb
or
and
push
les
xor
pop
sub
mov
or
rcrb
cmp
decb
stc
pop
sub
test
sub
or
out
ficomps
jbe
or
cmp
jne
mov
sti
adc
and
mov
sbb
jae
cmpb
push
mov
iret
shr
out
or
push
adc
inc
mov
ja
push
sub
loopne
or
pop
push
and
rolb
mov
inc
lock
and
pushl
sub
or
or
cmp
loope
add
dec
cmpsb
adc
or
inc
pop
push
or
xlat
and
stos
sbb
push
inc
adc
pop
cwtl
and
dec
push
inc
or
cmpb
push
adc
js
push
daa
insb
push
mov
fs
ljmp
and
cmp
add
test
popf
sub
xchg
pop
adc
sbb
pop
insb
lret
add
xor
xor
add
sbb
mov
dec
sbb
add
inc
sbb
xor
mov
pop
arpl
cmp
push
push
cmp
jecxz
les
ret
push
jae
imul
jge
clc
into
call
dec
out
in
js
adc
adc
mov
call
mov
cmp
addl
and
iret
fdivrl
loop
jb
out
jne
mov
fsubs
add
xchg
pop
dec
aas
jae
and
mov
push
jmp
inc
cmp
adc
or
and
call
stc
test
xchg
neg
pop
push
add
push
cmp
repnz
sub
sub
cs
lock
cld
fistps
nop
cld
test
aaa
in
and
jo
and
sbb
repnz
dec
sbb
mov
repz
stos
xchg
rolb
cmp
cmp
xlat
cmp
jmp
xor
mov
lds
dec
or
dec
mov
sub
mov
lret
pop
add
loope
jmp
testl
xor
jl
hlt
dec
sub
pop
jle
or
testl
and
sub
hlt
jmp
cmp
setge
in
and
mov
jne
jmp
sbb
or
or
xor
mov
xchg
sbb
push
push
outsl
cltd
or
and
or
jp
cmp
pop
xchg
xchg
pop
mov
or
dec
pushf
or
or
cmpsb
inc
gs
in
or
adc
or
jge
or
mov
xor
lea
cmp
nop
scas
lock
jmp
sub
lea
mov
or
mov
mov
mov
stos
imul
mov
pop
add
cld
mov
jp
jne
mov
inc
add
mov
lea
ds
sbb
dec
sbb
cltd
fisttpll
insb
fwait
and
pop
add
shll
or
and
pusha
lods
push
jae
push
les
mov
adc
cmp
je
mov
rorb
or
inc
sub
or
in
adcl
push
add
jmp
mov
adc
and
pop
push
std
movsl
clc
loop
jge
dec
and
jbe
push
add
scas
pop
int3
inc
dec
push
and
push
cli
jno
leave
inc
in
fstpt
loopne
dec
ret
cmp
imul
cld
xor
subl
mov
scas
incb
sbb
pop
sti
xchg
shl
loopne
or
rcll
addb
adc
jo
cmp
ja
hlt
inc
lret
lock
push
repz
out
in
cld
vmptrld
inc
lock
inc
push
pop
out
add
call
add
das
rcll
add
lcall
lea
mov
fs
inc
into
xchg
inc
out
cwtl
or
test
jnp
mov
jne
or
xchg
addr16
mov
shr
xchg
jg
push
or
ret
pushf
mov
fnsave
outsl
adc
jo
sub
adc
test
subb
pusha
dec
cld
dec
cmp
cmp
mov
cmp
inc
inc
mov
aam
push
cli
les
aas
mov
pop
adc
mov
cmp
dec
pushf
cmp
pop
sub
clc
pushf
sbb
nop
jno
inc
sbb
and
orl
lret
push
jg
gs
xor
sub
add
mov
call
sbb
sub
mov
idivl
sbb
jecxz
int3
pop
stos
inc
insl
adc
jno
mov
or
cwtl
cmp
jne
pushf
dec
push
adc
sbb
dec
out
mov
jmp
jo
lds
test
mov
or
rcrl
cld
js
gs
xor
xchg
and
inc
lahf
int
and
inc
ret
outsb
inc
or
or
mov
movsb
dec
lds
xor
jmp
fmul
pop
loop
scas
mov
leave
shr
add
cmp
jne,pn
inc
pop
or
mov
and
push
jp
push
jne
sub
lea
inc
dec
push
mov
out
xchg
jp
add
int3
push
pusha
orl
out
adc
dec
fnstsw
jno
out
cmp
mov
adc
mov
cmp
inc
bound
into
mov
inc
dec
mov
flds
enter
test
add
mov
cwtl
inc
inc
jne
mov
or
leave
ljmp
comiss
mov
jge
pop
ret
jg
push
and
call
pop
pop
jecxz
cwtl
pop
shrb
mov
je
add
daa
inc
gs
push
mov
jne
es
pop
or
adc
xor
out
add
mov
jo
sub
mov
out
js
jmp
ds
iret
cltd
push
push
mov
cwtl
inc
sbb
inc
and
xor
or
andl
testb
add
add
inc
xchg
popa
lods
xor
test
adc
xchg
aaa
dec
dec
push
mov
out
jle
test
nop
sahf
aas
pop
mov
xor
shll
add
and
shl
or
mov
sub
xor
ss
mov
jmp
lock
and
iret
inc
std
mov
test
dec
pop
call
ret
je
test
orl
adc
sti
inc
popl
sti
es
xor
adc
mov
mov
shll
dec
popa
ja
pop
push
or
popa
sub
mov
mov
iret
loop
lcall
inc
inc
lock
test
jl
add
test
and
jmp
out
ror
add
or
addb
and
stc
popa
inc
loope
in
loop
mov
std
inc
rcll
sahf
inc
jns
in
lcall
sbb
frstor
dec
pop
adc
nop
push
frstor
inc
add
fldl
or
inc
call
sbb
mov
xor
cmp
jae
nop
add
add
adc
adc
notl
add
out
test
fbld
fsubrl
outsb
in
push
and
jbe
pop
jne
addb
or
sbb
shl
in
int
cmc
lret
notl
push
fnstsw
or
imul
adc
sbb
mov
jmp
dec
and
dec
add
sbb
fldl
lods
pop
jg
xchg
xchg
cmp
push
push
jle
or
pop
mov
adc
pop
inc
stos
rcpps
dec
mov
into
sub
imul
dec
pop
movsl
fcoms
ret
ljmp
push
jno
or
jmp
cmovg
mov
adc
xor
dec
and
loopne
sbbl
pusha
test
test
cmp
test
int3
mov
add
fcompl
addb
xor
xchg
pop
hlt
sbb
lret
and
xor
adc
lds
adc
enter
dec
jo
sbb
sbb
inc
test
add
test
fcmove
js
inc
les
pop
push
lret
push
repz
inc
xchg
xchg
xor
jno
inc
shlb
or
inc
add
mov
or
pop
lea
add
adc
std
sbb
sti
or
or
jmp
cmpsl
inc
pop
jae
cmp
js
or
mov
js
cwtl
dec
xchg
fisubl
pusha
subb
pop
sub
imul
negl
mov
push
dec
jne
movsl
sbb
inc
sbb
push
pusha
pop
xor
push
out
sbb
mov
test
in
mov
movsl
pop
pop
out
lock
jmp
pop
pop
inc
push
push
mov
mov
in
sub
loop
and
adc
adc
mov
and
mov
cld
mov
loop
adc
push
shlb
inc
mov
xor
sti
push
add
and
lret
and
in
push
sar
je
jle
cltd
jg
adc
gs
mov
inc
iret
inc
gs
cs
je
push
add
inc
cmp
in
in
add
int
cmp
cld
push
add
adc
loope
jecxz
push
nopl
pop
xor
add
lahf
or
add
ja
inc
rolb
hlt
imul
lret
cmp
push
xor
add
shl
or
test
sub
cmpl
pop
dec
or
test
cmp
adc
mov
mov
enter
lods
daa
in
sbb
movsb
stc
mov
testl
mov
popf
pop
je
outsb
or
fadd
jmp
mov
push
xchg
or
inc
adc
xchg
push
andl
adc
push
mov
outsl
jae
fdivl
int3
pop
adc
shll
gs
or
push
pusha
add
or
out
mov
dec
pop
xchg
in
mov
idiv
adcb
push
daa
push
mov
lcall
clc
add
and
adc
sub
sbb
mov
pop
xor
jge
aam
sub
push
bound
fnclex
xchg
movswl
imull
mov
aad
cmc
or
or
cmp
inc
xchg
pushf
outsl
loop
je
add
sub
pop
stc
fwait
cmp
or
pop
or
sub
xor
mov
xor
jg
imul
jmp
sbb
andl
das
call
pop
fwait
pop
sbb
sbb
xchg
pop
dec
add
call
jae
fdivl
dec
push
insl
sbb
call
or
aam
push
push
push
popf
imul
jnp
aam
insl
and
jmp
lods
xchg
icebp
ja
sbb
dec
mov
or
sub
jbe
pop
pop
xor
jge
mov
movsb
cmc
jmp
andnps
mov
inc
jne
aam
or
popf
push
inc
mov
rorl
leave
jne
pop
mov
mov
call
lret
dec
add
cmp
aad
sbb
or
lret
or
dec
dec
in
ja
dec
sahf
cmp
es
add
pop
mov
push
testb
mov
gs
push
aam
lods
xlat
dec
add
movsb
mov
pop
cmp
dec
dec
mov
sub
add
adc
hlt
adc
ret
sub
and
or
mov
das
mov
lahf
shl
cmpl
mov
add
call
mov
mov
jne
cmp
pop
push
and
inc
add
xchg
cmpl
arpl
inc
mov
rorb
xchg
in
mov
ret
movb
or
imul
pop
push
les
and
xchg
push
jns
dec
lret
andb
mov
std
mov
es
add
or
inc
adc
cmp
pop
add
dec
jns
neg
sub
xchg
add
fs
lods
shlb
pop
idiv
or
push
fisubrl
or
push
lea
movsl
add
push
push
and
pop
lahf
je
dec
xor
lret
or
xor
int
push
add
andb
jmp
ljmp
push
push
and
inc
add
ret
mov
jnp
lds
test
sub
std
or
movb
jge
dec
mov
adc
shlb
movb
xor
adc
clc
dec
sbb
and
sbb
cli
pop
sbb
inc
loope
idivb
pop
scas
pusha
adc
push
or
fdivrs
mov
dec
pop
int3
push
adc
dec
mov
push
xchg
jmp
sti
aaa
xlat
les
mov
test
mov
clc
dec
test
xor
push
cwtl
jmp
push
icebp
push
call
mov
cmp
add
pushf
rorl
add
shrb
and
lret
adc
adc
pop
adc
and
push
std
in
dec
inc
jecxz
sbb
adc
dec
adc
xchg
and
movb
mov
out
push
daa
and
jno
adc
dec
and
adc
xor
or
data16
adc
out
bound
dec
in
sbb
and
sub
adc
loop
cld
test
adc
hlt
into
or
test
sbb
pop
out
push
dec
mov
cwtl
add
push
hlt
ret
test
pop
pop
xchg
sti
mov
and
or
cmc
or
gs
add
push
pop
cmpl
sub
jne
push
push
add
fadds
push
cmpl
loopne
push
js
adc
push
inc
mov
push
and
push
call
jno
dec
push
rcl
adc
jmp
sbb
adc
or
pop
and
dec
push
inc
sbb
cmpb
and
lock
or
add
stos
pop
loopne
push
in
cmpb
cmpb
push
nopl
sub
rclb
sbb
and
xor
or
stc
popf
or
rorb
test
call
jne
add
inc
stc
loope
into
adc
or
fucomi
adc
mov
enter
lock
adc
iret
sbb
pop
fdivrs
cmp
jl
jnp
add
ja
test
iret
adc
dec
jle
xchg
inc
aas
inc
loopne
js
rorb
clc
jle
sub
daa
aaa
mov
cmp
jb
sbb
and
sbb
jg,pt
iret
push
hlt
jns
adc
cwtl
inc
ret
out
movsl
outsl
mov
andl
jg
dec
add
adc
imul
adc
pusha
out
push
or
js
adc
push
lock
inc
stos
cmpsl
add
aad
or
mov
enter
and
sarl
jae
jmp
mov
jae
dec
push
jl,pt
data16
jg
push
pop
sub
add
pop
hlt
rclb
cmpb
cmc
add
imul
push
js
and
ljmp
test
xchg
in
dec
xor
jle
imul
pop
pusha
cs
adcl
stos
pusha
ss
push
pop
add
jne
pop
dec
hlt
inc
dec
pushf
or
or
xor
pop
pop
xlat
jb
dec
add
sub
aas
and
leave
jne
ds
dec
add
je
mov
movsb
ja
int
icebp
lods
push
bound
mov
movsl
daa
or
lret
inc
push
cli
sub
into
xlat
cmpsl
mov
popf
inc
mov
shll
jmp
pop
jp
arpl
or
and
adc
popa
cmpsl
je
cmp
jmp
inc
and
xchg
sbb
inc
dec
jne
mov
push
and
repz
dec
in
push
push
call
stc
mov
ss
outsl
push
aas
call
test
pop
and
inc
mov
push
push
adc
jp
sub
push
leave
imul
inc
cmp
pusha
aam
mov
iret
fdivrl
mov
cltd
adc
add
sbb
sub
jg
cmp
adc
jne
lea
push
aas
xorl
call
decb
test
xor
leave
fucomp
loop
mov
call
das
icebp
jb
js
mov
addr16
mov
push
jle
dec
aas
and
daa
cmpl
jle
in
adc
xchg
sub
push
cmp
stc
adc
call
sti
jb
add
push
sahf
popf
or
sbb
fidivl
or
daa
test
test
stos
inc
jne
sbb
adc
mov
test
pusha
push
xchg
call
outsl
jg
cwtl
loopne
inc
in
rclb
xor
dec
xor
mov
push
jmp
adc
sub
lahf
and
push
xor
push
loope
inc
dec
jae
push
sub
loope
pop
test
adc
sub
push
jle
add
sbb
xor
adc
mov
xchg
xor
or
jne
call
sub
jle
xorb
cli
or
mov
data16
cmp
je
or
iret
push
lds
cli
fisttpll
add
sbb
inc
lea
push
test
inc
fs
sbb
cltd
repnz
pusha
les
mov
and
cli
xchg
mov
xchg
cmp
pusha
pop
sbb
data16
push
mov
dec
adc
adc
lcall
sbb
dec
xchg
aad
and
repnz
mov
push
xchg
add
movb
insb
xor
jb
pop
shll
test
sub
push
mov
shr
jp
xor
xchg
ror
clc
fstpl
sub
mov
add
sub
subb
or
xchg
jo
or
mov
sub
movsl
push
shr
dec
pop
and
pop
dec
fwait
shlb
jmp
push
mov
test
rolb
dec
push
popf
xor
test
clc
enter
mov
cmp
mov
mov
mov
jmp
sti
jge
sti
inc
jl
mov
pop
int3
xorb
mov
orb
test
pop
push
mov
jle
add
mov
nop
mov
lea
imul
js
cld
xchg
pop
xchg
cs
test
mov
push
in
adc
imul
add
mov
test
mov
xchg
shl
mov
adc
jo
imul
cs
cmp
pop
imul
call
mov
js
mov
rcll
xchg
push
mov
les
mov
add
mov
mov
or
addl
mov
stos
mov
rolb
fdivr
sbb
rcrb
mov
jnp
jge
push
loop,pt
or
and
push
adc
sbb
push
jecxz
mov
rclb
adc
rol
xchg
out
cmpb
pusha
out
push
or
and
dec
repnz
icebp
sub
or
inc
in
push
loopne
hlt
movb
xor
rorb
pop
inc
add
movsl
jb
repnz
mov
cmpsl
sbb
hlt
jle
icebp
or
inc
pop
jmp
nop
mov
je
push
pop
sub
jp
push
or
imul
dec
jne
addr16
jmp
addb
or
xor
loop
mov
jl
pop
inc
jmp
nop
xor
daa
inc
repnz
and
push
test
ja
sub
icebp
jmp
jns
push
lock
cli
dec
icebp
pop
addb
repnz
push
ljmp
mov
out
adc
dec
ljmp
mov
cmp
lcall
inc
adc
in
jbe
add
into
inc
in
outsb
ret
add
sub
adc
adc
jnp
fdivrs
or
sbb
or
inc
push
scas
dec
in
jmp
or
subb
mov
push
or
sub
mov
add
mov
xor
or
jo
jecxz
push
inc
add
dec
sbb
push
ret
rorb
sub
test
jmp
sub
lea
or
mov
sub
sub
jne
push
lods
or
into
xchg
fsubs
imul
pop
and
pop
imul
and
call
enter
mov
mov
adc
mov
inc
dec
pop
jo
mov
jno
pop
sub
fdivl
lea
inc
outsb
jns
push
repnz
or
loope
sti
gs
rorb
pop
inc
mov
jbe
push
and
lret
int3
xor
add
daa
sub
sub
sub
imul
ljmp
adc
jb
mov
testb
fsts
aas
lds
mov
movsbl
aam
bound
bound
xchg
cmpsb
sub
push
jne
incl
xchg
mov
jle
cmpsb
ljmp
or
mov
addl
mov
fidivrs
push
notb
mov
je
xlat
aas
cmp
test
popa
mov
add
xchg
es
mov
stos
and
aas
pop
popf
std
nop
adc
push
mov
les
inc
push
rcrl
adc
adc
sub
sti
xor
xchg
enter
sbb
cmp
adc
sub
repz
sub
sub
push
das
test
mov
punpckhdq
pop
adc
enter
mov
adc
mov
ja
lret
shrl
cmpsb
cmp
into
jge
jnp
sbb
sbb
mov
cmpsl
dec
and
push
mov
imul
inc
lods
test
out
shll
std
cli
sbb
cmp
jae
xchg
jmp
jbe
cmc
lock
and
xor
push
lock
sbb
mov
xchg
ret
mov
add
jg
pushf
pop
inc
dec
jne
xor
jmp
add
rorb
jmp
in
xchg
cltd
add
and
jmp
ret
inc
out
sbb
pop
mov
call
sub
push
sub
and
movsb
test
cmp
xor
jle
enter
lret
pop
sub
pop
call
sar
push
dec
add
shll
iret
or
push
or
leave
xchg
inc
inc
xchg
adc
scas
xor
or
leave
sti
sub
xchg
or
push
sub
xor
lcall
es
mov
sahf
and
jb
lock
mov
adc
and
inc
jg
sbb
out
jecxz
push
xchg
jle
and
cmpsb
pusha
mov
mov
lret
push
dec
mov
add
leave
cmp
cs
dec
add
icebp
jmp
adc
lret
mov
dec
aad
mov
pop
push
push
mov
push
fadd
pop
call
outsb
mov
jo
jge,pn
dec
pop
push
data16
aam
xor
outsl
jne
mov
push
push
and
inc
mov
movsl
mov
push
fcomps
call
pusha
pop
adc
lea
cltd
add
sbb
xchg
push
add
in
scas
jle
jmp
call
cmp
nop
in
and
sub
pop
inc
jo
fisubrs
jmp
adc
jne
push
cmp
enter
jbe
or
insb
shl
cmc
inc
icebp
cmp
js
out
cli
inc
dec
inc
cld
rcrl
insb
cld
call
dec
in
fiaddl
lea
mov
fs
cmp
inc
add
inc
mov
lcall
pop
or
cltd
push
rclb
sub
adc
adc
mov
data16
xchg
pop
or
pop
in
int3
ljmp
or
and
push
repnz
bound
sbb
lret
and
out
loop
js
std
bnd
lods
negl
outsb
sahf
inc
inc
lock
test
add
push
xor
dec
les
add
mov
sub
es
jge
test
pop
jae
mov
pop
int3
in
cmp
or
jbe
jle
adc
out
push
mov
xchg
fstps
and
mov
out
adc
pop
stos
or
jg
decl
js
aam
scas
leave
jp
ret
push
es
nop
sbb
je
psubd
and
ret
mov
jle
inc
push
call
movswl
sub
notl
and
in
icebp
inc
popa
scas
xchg
cmpsb
test
sahf
mov
cmp
addr16
add
shrl
adc
push
test
stos
lret
mov
add
jb
repz
aas
mov
mov
not
test
cmp
jae
das
divl
or
pop
lea
mov
mov
or
je
add
in
cs
in
hlt
dec
cmp
fisubl
aad
das
mov
adc
lds
sbb
rcrb
inc
movsb
and
fistpl
xchg
call
cmp
mov
and
pusha
mov
in
je
push
sbb
push
adc
adc
andl
sbb
xchg
pop
xlat
mov
xor
sbb
jbe
mov
cmp
or
xor
in
or
add
lret
jne
cmp
and
movsl
hlt
lods
dec
and
adc
inc
push
push
mov
lods
cmp
inc
sbb
sub
xor
cmp
mov
aad
call
stc
add
aaa
test
repz
mov
xlat
loope
es
add
or
cmp
jne
dec
cltd
push
mov
std
mov
adc
pop
out
pop
inc
or
aam
push
cltd
mov
incl
rol
das
ja
xlat
enter
xor
jle
mov
mov
and
adc
roll
imul
push
jns
sbb
push
or
adc
ss
jne
or
ret
dec
jl
lods
cmp
popa
aas
and
fistps
ret
xor
scas
ficomps
aad
adc
sbb
mov
push
push
out
mov
or
insb
out
test
mov
lods
ret
jne
inc
or
addr16
and
scas
rcl
mov
or
pop
lock
orb
push
xchg
out
ret
jle
fs
xchg
push
repz
nop
adc
xor
in
loopne
sub
scas
or
pop
sub
popf
push
movsb
lods
jbe
dec
cld
and
clc
dec
ret
dec
leave
dec
mov
sbb
stos
mov
push
outsb
adc
outsb
jge
jnp
mov
inc
call
call
inc
add
pop
adc
add
mov
pusha
or
mov
xor
mov
loopew
cmp
jecxz
pop
add
cltd
mov
iret
sub
jno,pt
clc
insl
stc
jmp
mov
es
jmp
mov
lea
dec
dec
pop
sbb
ja
shlb
or
cmp
cmp
and
mov
push
mov
add
pop
lret
and
int3
adc
push
je
push
mov
ljmp
dec
jmp
push
lds
inc
xchg
fsubs
xchg
push
adcl
inc
push
pop
movb
inc
mov
jae
int3
fistpl
lods
les
xor
je
mov
adc
mov
or
inc
xor
dec
jne,pt
xorb
jmp
mov
call
add
je
inc
js
rclb
sahf
jmp
pop
xchg
je
es
xchg
and
cmp
mov
sub
mov
repnz
jg
ljmp
hlt
inc
xor
stos
mov
mov
mov
xlat
pop
in
inc
adc
add
mov
inc
leave
aas
or
jle
insb
or
adc
mov
inc
in
lods
dec
dec
inc
sub
sar
aaa
shl
shlb
jg
jle
out
sub
or
inc
ss
mov
lods
inc
imul
jg
mov
rolb
adc
dec
mov
fstl
dec
jae
fldenv
nop
cld
fisubs
leave
or
dec
mov
jne
or
jmp
call
inc
or
cld
mov
test
add
or
jmp
clc
ljmp
fcmovnb
xchg
jmp
test
into
jmp
das
es
gs
rcrb
sbb
jb
lock
inc
adc
and
sub
enter
cmp
jge
sub
inc
adc
mov
test
jo
jle
jbe
data16
or
xchg
loope
adc
mov
xor
xor
pop
adc
or
mov
paddb
je
adc
or
sar
cld
ret
in
jmp
mov
push
and
clc
push
shrl
add
dec
mov
xor
shrb
sarb
std
mov
mov
lock
decl
clc
mov
cs
xorl
xlat
push
push
push
jae
mov
mov
ljmp
invd
xor
sub
es
xor
dec
mov
add
add
cld
mov
pop
ss
or
xchg
adc
or
lea
sbbl
xchg
push
mov
jge
ja
cmp
sub
jne
pop
add
pop
xor
cwtl
ret
aas
mov
pop
cmp
test
sub
jmp
pop
mov
fdivr
fnstcw
loopne
sub
cli
fisttpll
jecxz
inc
adc
and
fcomp
add
je
cld
rorl
cmp
jae
and
or
jmp
neg
adc
repnz
rorl
lock
sarl
push
testb
add
inc
mov
xor
xor
push
add
ret
aam
loop
repz
and
xchg
dec
or
jg
ret
ds
sbb
in
pop
jae
sub
mov
or
sub
xor
loope
out
xor
inc
ja
sbb
sub
mov
call
rcrb
inc
dec
or
sub
outsb
clc
mov
mov
jl
jle
xchg
fs
in
add
push
sub
rcrb
mov
and
dec
sbb
push
sub
dec
inc
and
xchg
mov
adc
out
sub
cwtl
adc
push
movsb
sub
mov
enter
out
mov
dec
lock
lea
mov
push
adc
movsl
cmpsl
sub
in
fists
imul
add
add
and
call
insl
leave
les
sub
xor
jge
adc
jb
hlt
je
data16
ficoml
inc
cmc
dec
shl
sbb
mov
jns
add
divl
inc
or
jle
repnz
cmp
jg
pop
fistpl
xor
int
cmpsb
inc
sbb
lea
mov
add
pop
faddl
in
cmpsb
mov
std
fbstp
xchg
lret
in
icebp
je
push
nop
push
mov
add
sub
push
lea
push
push
push
adc
imul
jmp
adc
mov
rcrl
sbb
sub
jns
inc
shll
fsts
push
rolb
cmp
mov
xchg
push
lock
xor
lcall
repz
adc
scas
adc
add
bound
xor
xor
jbe
test
push
dec
mov
int
movsb
out
sub
pop
cmc
inc
mov
stos
adc
movb
mov
sub
lret
cmpb
xchg
cmp
loop
js
push
adc
ja
xchg
je
out
add
cmp
jl
adc
lret
adc
mov
lcall
pop
push
pop
enter
mov
imul
adc
dec
hlt
fmull
shlb
or
shlb
movsl
sub
jl
inc
mov
inc
and
repnz
dec
or
sub
insb
inc
sbb
mov
or
pop
sub
mov
xor
jl
lcall
enter
sarb
cmp
je
xor
xchg
cmp
jl
cli
mov
ss
xor
cmp
jge
add
stos
pusha
repz
add
cmpb
and
jmp
bswap
push
fdivs
cmpsl
cmp
xacquire
mov
push
test
dec
and
sahf
mov
cmp
inc
mov
mov
mov
int
and
xor
cwtl
adc
or
jbe
inc
jecxz
lock
aam
lds
dec
popa
add
shrl
add
cmp
dec
lods
call
mov
jns
lock
and
mov
cmpl
mov
jecxz
sub
and
pop
cmp
push
mov
push
push
bound
ret
mov
addl
push
rcll
shr
dec
add
and
sbb
cwtl
out
sar
push
and
std
adc
jne
mov
dec
mov
and
test
xor
push
adc
mov
xchg
or
insl
sub
mov
and
xor
push
les
add
in
call
push
push
jl
cli
add
mov
hlt
mov
inc
repnz
dec
lea
dec
push
popa
and
cmp
ja
sbb
sub
imul
or
stos
inc
lds
jne
pop
pop
push
call
mov
mov
push
pop
mov
inc
push
push
scas
pop
cmc
dec
xor
jg
and
or
add
sub
mov
adc
je
cwtl
sti
adc
xchg
add
inc
xchg
popa
sbb
add
and
mov
test
dec
dec
push
mov
xchg
or
stos
dec
vprotw
xchg
dec
xor
xor
adc
or
push
mov
cmp
xchg
jmp
dec
cwtl
xchg
mov
sub
std
call
std
out
mov
mov
aas
push
or
jne
fldcw
or
arpl
leave
pop
push
dec
in
sub
add
xor
pop
xchg
add
je
inc
inc
fwait
xor
push
scas
xchg
adc
lret
adc
jne
rorl
addr16
flds
or
add
mov
cmp
test
fdivr
rcll
inc
pop
pop
pop
lods
in
movsb
movsb
xchg
dec
or
movsl
adc
out
bound
lret
ljmp
cmpl
insb
inc
iret
nop
test
pop
mov
jne
xchg
push
xchg
mov
loopne
inc
adc
add
xor
push
add
pop
mov
cli
pop
int3
adc
es
shlb
or
adc
mov
inc
popf
sub
adc
push
adc
out
mov
out
cmpl
je
es
outsb
or
pop
test
inc
inc
mov
inc
daa
sub
pop
std
and
dec
mov
pop
popf
rolb
clc
rclb
idiv
sbb
jb
or
dec
sbb
aad
push
mov
stc
pop
fidivrs
sub
inc
or
or
xchg
dec
xchg
xor
and
fistl
adc
add
jo
jmp
inc
xor
ja
ret
adc
rclb
ja
rcll
aam
ret
pop
in
cmp
adc
orps
lret
lea
sub
cmp
mov
es
pusha
or
jne
testl
push
push
or
jo
nop
adc
or
cmp
dec
cmp
xorb
lea
inc
orb
cmp
adc
cmp
mov
aas
rclb
out
or
jmp
dec
sti
push
shlb
dec
repnz
dec
or
adc
pop
aas
and
or
js
cmp
mov
pop
in
iret
xchg
push
rorb
jae
cmp
jne
cmc
lea
dec
pop
or
adc
je
jnp
pop
push
add
mov
lock
sub
cmp
cmc
xchg
test
jne
and
mov
out
xchg
out
xor
or
aas
jbe
out
sbb
ja
test
and
aas
push
std
call
pop
sbb
mov
adc
xor
push
cmp
je
cmp
cmp
or
xchg
adc
mov
jmp
fadds
imul
xchg
popa
jle
pusha
or
add
pop
je
push
mov
aaa
fists
cmpb
xchg
and
jg
lahf
pop
push
push
push
das
jl
lahf
clc
jo
leave
push
adc
pop
add
add
jo
cld
pop
std
dec
test
push
lds
push
sbb
pop
nop
mov
dec
leave
pop
jae
and
mov
leave
xchg
das
call
sub
cld
dec
mov
sbb
ljmp
push
ret
mov
scas
push
lock
xchg
gs
mov
push
stc
xor
jmp
push
in
jae
dec
mov
push
popf
sbb
fdecstp
das
or
ja
inc
and
in
push
and
cld
mov
or
aaa
pop
mov
pushf
inc
mov
add
cli
mov
jge
or
and
jle
adc
and
mov
into
or
repnz
jmp
inc
adc
inc
mov
repnz
sbb
int
fimull
cs
adc
add
mov
jbe
sbb
xor
lock
mov
sub
mov
icebp
sbb
enter
mov
mov
fsubrs
xchg
inc
pop
jne
inc
jg
mov
xchg
sub
or
test
mov
in
cmp
ret
or
out
sete
sti
add
jmp
rorl
fldcw
push
inc
mov
movb
inc
mov
and
or
jge
inc
aas
pop
push
cmp
push
sbb
push
xchg
and
sbb
inc
add
sub
js
movsl
xor
and
pop
adc
enter
daa
sub
sub
dec
mov
mov
pop
jl
loope
not
imul
pop
jne
inc
leave
pop
loop
ja
push
fildll
inc
jmp
andl
cmp
mov
sub
sbb
pop
inc
repnz
sub
and
sar
xor
pop
or
cld
xor
pop
xlat
ss
xorl
sub
sbb
cmp
cmc
or
imul
sbb
call
pop
xor
inc
mov
push
mov
dec
mov
jo
cmp
popa
lock
popf
push
cmp
in
pop
add
push
into
in
je
mov
testb
cs
sbbl
inc
pop
jne
adc
pop
fidivs
call
inc
xor
sbb
das
movsb
push
call
ret
sub
lock
xorb
inc
add
ljmp
loop
loop
mov
sbb
mov
jb
and
xor
mov
jl,pn
sub
or
fwait
sbb
cmp
pop
lea
sbb
inc
add
pavgb
push
sarl
test
jl
rorb
or
xor
jle
inc
pop
add
mov
outsb
shrl
or
or
cmpsb
xchg
xor
or
cmp
push
fiadds
cmp
inc
add
cmp
jl
cwtl
push
mov
pop
cmp
decl
loop
inc
add
mov
pop
call
loop
jb
cmc
mov
lea
pop
push
addr16
or
and
ds
or
orb
bsf
insb
or
or
sti
jns
add
sti
add
dec
mov
cli
enter
ret
int3
push
inc
xor
pop
dec
xchg
jl
mov
mov
jp
sub
dec
xchg
mov
xchg
fs
cld
out
jl
inc
inc
jae
jnp
mov
jmp
mov
inc
inc
push
jl
or
adc
push
sbb
pop
test
add
dec
mov
fadds
data16
mov
ja
in
call
add
lods
outsl
or
xchg
jnp
jbe
xor
jmp
mov
arpl
adc
cmpb
pop
lods
das
cld
cmc
pop
push
cmp
or
sbb
xchg
or
mov
ret
mov
popf
or
cmp
fbld
and
sbb
sbb
mov
pop
test
negb
and
stc
lock
outsb
shr
mov
mov
or
icebp
push
js
or
add
xchg
sbb
daa
cmp
push
insl
dec
mov
jbe
inc
xlat
adcl
dec
dec
inc
sub
lea
inc
sbb
mov
out
adc
push
clc
push
mov
addb
int3
cmp
sub
daa
xor
loopne
push
jecxz
push
xchg
adc
adc
je
push
jns
adc
sub
push
inc
imul
mov
and
or
and
adc
dec
sub
sub
jmp
es
cmp
xor
push
or
hlt
addr16
jns
scas
or
data16
rcll
sub
clc
clc
mov
xchg
sbb
sbb
adc
nop
das
cli
adc
xor
push
xor
or
add
daa
out
dec
jb
sbb
xchg
inc
pop
aam
cmp
or
int3
mov
and
mov
push
test
dec
xchg
add
add
lods
pop
sub
jle
mov
inc
cli
cltd
and
push
les
cmp
adc
repnz
dec
add
notl
mov
shlb
fisubrl
clc
adc
sub
data16
in
mov
jne
test
out
bound
inc
cmp
add
call
cmpb
jmp
imul
dec
xchg
dec
and
cmp
add
mov
fs
lea
pop
inc
pop
lcall
shll
popf
cmpsl
sbb
push
and
or
push
lahf
mov
adc
inc
xor
in
mov
push
push
mov
adc
stc
sbb
push
enter
xor
into
xchg
or
pop
mov
and
fstps
dec
iret
or
push
xor
jmp
xchg
cmp
and
test
mov
inc
call
scas
je
mov
mov
xor
cld
fs
rorl
outsb
add
mov
xor
or
je
mov
ds
pop
ret
mov
push
pusha
lcall
adc
sub
loope
gs
aas
lret
mov
mov
repnz
mov
in
divl
shlb
invd
scas
adc
or
adc
xchg
call
or
hlt
addr16
out
mov
call
jg
jge
cmpsb
push
inc
and
push
pop
adc
cltd
cwtl
sbb
push
loop
add
das
xor
and
imul
push
mov
add
sarl
push
mov
loop
push
inc
inc
js
icebp
or
jne
mov
jmp
scas
lds
rcrl
int
mov
dec
outsb
add
test
pop
lods
pop
js
xchg
sub
mov
or
mov
add
push
pushf
jle
lea
mov
lret
sbb
adc
into
clc
or
lret
or
or
xchg
xchg
pop
idivb
mov
push
jne
or
pop
push
inc
addl
dec
dec
adc
rorl
shlb
ja
pop
mov
jmp
ds
adc
aam
push
sub
addl
loop
rolb
sbb
mov
lea
lock
xchg
push
sbb
cmc
mov
jl
mov
xor
dec
xchg
mov
dec
aam
or
mov
pop
insb
pop
push
movsb
sarl
call
push
dec
js
cmp
add
pop
cmp
jge
out
pop
out
pop
aam
jmp
xor
dec
xchg
iret
adc
pop
cltd
mov
enter
push
adc
mov
dec
adc
repnz
mov
mov
and
dec
sbb
adc
repnz
sub
into
push
cld
lcall
or
and
adc
inc
cmp
push
imul
enter
fisubrl
sbb
dec
jbe
in
movsb
pop
push
fistl
mov
xchg
push
dec
inc
leave
jmp
rcrl
pop
dec
mov
or
xchg
shrl
sub
add
pop
mov
test
inc
iret
sub
lahf
jp
cmc
and
out
sub
das
pusha
into
fisttpl
jmp
and
cmp
inc
mov
lods
and
cwtl
lret
cwtl
hlt
xchg
or
out
cmp
jg
insb
jmp
push
jmp
fisttpl
popf
dec
stos
jmp
cmp
sub
dec
or
fnstenv
and
daa
cmp
push
or
hlt
add
xor
mov
and
cmp
sub
push
xchg
push
insl
ret
add
jne
and
pop
hlt
hlt
dec
icebp
ret
add
push
mov
and
incb
push
rcll
xchg
sub
mov
in
push
or
pop
mov
shrl
inc
aam
and
sub
dec
dec
es
adc
add
cmp
fdivrs
sub
enter
adc
push
sub
or
or
inc
and
xchg
pop
push
and
cmp
mov
movsl
pop
push
dec
xor
test
adc
mov
andl
idivl
add
repz
mov
cmp
adc
inc
scas
fs
mov
das
lock
dec
inc
in
imul
xchg
cmp
outsl
or
and
jg
xor
mov
shrb
mov
insb
sbb
fsts
andl
fistps
mov
popf
fsts
and
sub
xchg
jp
out
and
cmp
dec
out
pusha
push
jle
add
push
xor
pop
jne
cld
xor
fmull
push
inc
add
pop
mov
inc
incl
jne
cmpsl
outsl
js
push
jl
jae
xor
movsl
mov
push
jmp
pop
or
xor
ds
add
adc
xchg
jno
test
adc
lock
popf
jo
sbbl
nop
sub
xor
adc
inc
mov
movsl
data16
rcrl
jl
addl
mov
pop
xlat
mov
mov
fstpt
mov
xchg
pop
callw
sub
es
rol
and
gs
jae,pn
adc
sbb
mov
jnp
iret
aad
push
je
mov
mov
mov
and
pushf
adc
rcl
push
gs
sub
je
fimuls
jmp
dec
add
lret
scas
adc
enter
xorl
or
push
push
nop
movl
jmp
add
inc
add
es
adc
or
loopne
add
in
pop
andb
fistpll
das
push
push
int3
adc
push
push
mov
dec
mov
sub
inc
push
bound
or
adcb
inc
pop
pop
add
cmp
adc
sub
xor
cmp
insl
cmpsb
es
and
imul
mov
or
ret
sahf
xor
push
call
push
frstor
jno
add
cmp
lahf
testb
xorb
or
pop
ds
mov
in
mov
jae
cld
mov
das
loopne
sub
sbb
or
pop
testb
and
cltd
mov
je
mov
add
cmp
push
pop
mov
adc
icebp
imul
add
adc
inc
push
je
mov
lds
outsb
les
push
inc
mov
mov
or
xchg
mov
loop
push
push
push
mov
push
xor
mov
mov
pop
add
mov
aas
xchg
xchg
or
mov
inc
mov
cmp
lret
cld
data16
fimuls
jmp
pop
or
es
adc
push
orl
xor
push
xchg
sbbb
sbb
hlt
pop
jle
lahf
dec
pushf
jg
adc
mov
imul
cmp
les
clc
test
dec
les
call
inc
and
dec
jl
mov
pusha
imul
fists
sub
push
cmp
jl
loopne
jg
add
out
hlt
jne
icebp
xchg
pop
and
push
mov
add
das
inc
sub
cmc
mov
std
fldenv
ret
stos
les
mov
aas
mov
adc
and
sarb
mov
dec
mov
test
fstps
cmp
or
js
sbb
add
sbb
ret
adc
jbe
xor
push
cltd
adc
jo
cwtl
fxch
adc
sub
nop
push
push
push
jmp
pop
adc
cmpsb
adc
jne
push
add
inc
and
lds
push
and
push
and
xor
adc
adc
sbb
out
add
fdivrs
sub
jmp
pop
adc
and
sub
cli
jmp
fst
add
push
or
sbb
inc
pop
adc
push
or
sbbb
insb
dec
push
inc
data16
add
cmp
jge
mov
mov
or
jle
lock
xchg
fstl
mulb
repnz
sub
push
add
sub
pop
push
scas
es
cmp
jne
xor
add
jo
popf
sarl
dec
movups
mov
push
adc
add
mov
andl
mov
mov
mov
jmp
movsb
or
imul
call
clc
pop
xor
push
add
test
and
cltd
testl
cmp
jge
push
pop
pop
sub
add
stc
jmp
push
leave
or
ljmp
mov
or
mov
popa
xor
adc
and
sub
aad
mov
orb
or
test
jg
dec
inc
dec
jge
and
leave
inc
and
cmpsl
aaa
sub
insb
stos
sub
sub
bound
xor
test
push
add
call
add
test
jmp
inc
mov
mov
and
dec
xchg
lods
mov
and
xlat
xchg
mov
xchg
into
jmp
pop
test
sub
add
sub
inc
adc
scas
cmp
lret
je
data16
leave
cmp
ja
jbe
out
sub
dec
mov
add
cmp
jl
nop
mov
scas
or
mov
outsb
mov
adc
push
jb
and
pop
push
push
xchg
out
insb
jbe
sar
jbe,pt
push
mov
adc
pop
sub
push
push
call
sub
aam
out
sub
add
cmp
and
shl
fwait
push
rcl
stc
loope
jmp
dec
rorb
push
push
int3
cwtl
lahf
bound
lcall
add
orl
shr
leave
mov
bound
mov
sub
adc
jle
outsb
negb
je
decl
lods
xor
test
dec
inc
ret
push
adc
fbld
out
loop
dec
or
jno
loope
jo
lret
add
mov
mov
repnz
or
jae
jbe
daa
cli
orb
or
icebp
clc
idivb
mov
inc
mov
sbb
push
das
paddusb
inc
and
jne
sbb
fistpl
mov
xor
mov
sub
xchg
adc
add
jmp
shl
loop
jg
mov
cmp
ret
push
jae
popf
outsl
call
test
ss
cmp
push
stc
call
fwait
or
jmp
cmp
cmc
mov
adc
xor
mov
mov
add
pop
mov
adc
jl
jno
or
pop
movsb
adc
cmpl
jmp
lahf
mov
sub
hlt
dec
sbbl
ret
orl
xor
aaa
daa
inc
mov
jae
cmp
inc
testb
iret
stos
je
cli
push
ret
aas
in
cmp
or
loop
aas
in
add
call
je
sub
pop
dec
adc
rcrl
push
pop
and
sbb
in
andb
test
dec
push
scas
int
pusha
loope
xor
in
cld
call
push
jmp
andb
jne
sub
insb
adc
test
sarb
dec
test
scas
cli
push
repnz
mov
sub
sub
adc
push
add
pop
jecxz
xor
and
xchg
pop
bound
jo
es
or
test
push
xor
mov
inc
je
loope
push
mov
loope
in
roll
popl
and
dec
mov
xor
jp
dec
iret
enter
cmp
adc
dec
and
jle
dec
cltd
aaa
adc
fidivrs
add
push
adc
clc
push
sub
xor
add
leave
push
jmp
push
and
cmpsl
or
shlb
dec
cmp
inc
push
mov
or
decb
shlb
adc
adc
xchg
and
or
and
cwtl
arpl
es
dec
sub
sbb
jmp
cmp
pushf
mov
pop
lods
cmc
mov
repz
ja
out
outsb
jno
jne
cmp
xor
or
loopne
mov
xlat
adc
sub
or
or
cmpsl
or
jl
cmp
mov
dec
repz
ja
sub
or
repz
push
mov
xchg
adc
outsb
push
jb
and
movsb
mov
das
leave
mov
dec
jmp
outsb
dec
adc
push
lods
inc
rolb
lahf
pop
insl
inc
sbb
lret
xlat
or
push
in
stos
mov
cmp
mov
cwtl
sbb
cmc
or
aad
int3
and
xor
js
push
and
mov
cs
sbb
push
call
aas
or
shll
jmp
adc
scas
and
stos
and
mov
xor
and
lret
mov
mov
aam
sbb
cmp
push
in
mov
sub
adc
mov
sub
mov
or
adc
call
lcall
repnz
add
mov
or
and
sbb
and
imul
loopne
fidivs
scas
imul
and
and
mov
add
or
lahf
add
jne
scas
jb
sbb
sub
jmp
push
push
or
mov
mov
and
js
outsl
add
mov
cmp
pop
inc
mov
filds
push
inc
mov
jl
and
xor
mov
dec
je
adc
fsubrl
pop
dec
loop
inc
fsubs
lea
adcl
inc
into
jae
cmp
pop
or
jecxz
jl
mov
ret
das
lret
mov
sub
fs
xor
mov
adc
cld
inc
push
or
std
ja
and
lahf
out
jno
mov
fcmovnu
xor
js
fmul
add
jns
add
pop
or
std
mov
jge
jge
daa
shl
aam
push
std
lahf
pop
repnz
stc
sbb
cmp
or
into
mov
sbb
insl
iret
push
inc
iret
std
mov
or
adc
push
rorb
inc
orb
push
or
push
xchg
jb
pop
repz
movsl
pop
cld
lret
xchg
mov
cmc
imul
push
les
scas
idivb
sbb
mov
daa
loope
pop
jne
cmp
xor
jne
enter
lods
push
sub
fimuls
jnp
jp
cld
loope
inc
shr
fiadds
std
call
jae
incb
jmp
mov
adc
mov
loop
fsubp
fstpl
orb
dec
in
stos
and
daa
out
movsb
loop
jbe
or
pop
hlt
dec
inc
call
fs
fmull
loopne
aam
rolb
clc
sub
ret
popa
popf
or
push
or
add
inc
sub
out
add
mov
shlb
ja
mov
push
cmp
jl
or
cmp
push
imul
xor
lods
mov
push
add
mov
sbb
push
dec
insb
xor
aam
push
xor
fsubs
into
pop
jmp
xchg
js
fldenv
adc
lock
movsl
jle
movsb
dec
xchg
fimuls
cltd
mov
or
rclb
inc
jle
inc
and
arpl
xor
jb
adc
jmp
dec
js
push
or
push
and
ficompl
popf
push
xchg
mov
sub
std
cmp
clc
dec
and
lcall
jmp
mov
jnp
out
add
push
and
sub
mov
pop
mov
push
sub
mov
or
and
ret
pop
ret
popa
mov
scas
out
jb
mov
repz
jno
rcrl
adc
mov
or
jmp
mov
mov
dec
inc
jmp
lea
xchg
mov
sub
nop
xlat
stc
inc
pop
mov
loopne
int
movsb
andl
jl
insb
arpl
adc
or
sub
jg
jb
add
dec
jmp
jne
inc
jmp
cli
inc
mov
sub
lods
fcmovne
xor
mov
push
mov
mov
pop
or
orl
andb
fidivs
outsl
and
sbb
negb
pop
and
xchg
cmp
xor
jp
cltd
ret
mov
hlt
andl
inc
cmp
jae
xchg
mov
pop
shlb
adc
add
sbb
subb
mov
fildll
nop
fwait
hlt
dec
lcall
adc
xchg
ret
or
aaa
repnz
rclb
shrb
lock
enter
pop
leave
movsl
sub
jge
divl
fadds
dec
adc
loopne
adc
or
push
sub
sbb
ret
xor
sub
mov
push
push
jb
aam
gs
xor
fstpt
dec
or
out
jns
pop
pop
cmp
mov
rolb
jge
call
pause
xchg
ret
arpl
sti
jmp
pop
jb
fcomip
xchg
jmp
xchg
add
adc
sub
sub
or
add
jno
cltd
pop
add
inc
or
call
cmp
or
or
dec
cmpsb
mov
popf
inc
jl
inc
or
int
mov
imul
out
add
mov
and
leave
push
inc
and
xchg
or
and
inc
out
mov
adc
and
dec
in
xchg
in
adc
sti
adc
aas
lcall
sub
inc
add
xchg
cwtl
adc
jne
subb
adc
sbb
or
add
add
jmp
clc
popa
sbb
jnp
jmp
jle
xchg
inc
jg
maskmovq
sub
sti
push
inc
push
xchg
je
adcl
sub
sbb
and
popa
sbb
lea
pop
lret
roll
outsb
shrl
xor
add
xchg
iret
sub
add
sbb
adc
dec
mov
or
jno
add
or
sbbb
imul
dec
pop
jge
dec
mov
in
mov
mov
mov
xchg
test
push
add
jge
aas
jb
and
in
sbb
add
pop
adc
ret
push
add
nop
xor
jge
insl
dec
add
ja
or
icebp
cmp
and
iret
rcrl
xchg
ds
aas
cmpl
andl
clc
jnp
dec
sbb
jne
cld
cmp
pop
neg
and
or
dec
ss
adc
ficoml
add
cli
jge
cmp
enter
shll
adc
adc
xchg
or
push
sti
cmp
mov
imul
pop
or
lock
jne
bnd
mov
out
add
xor
xor
push
shll
and
mov
dec
icebp
movsb
push
inc
sub
decl
sub
mov
push
lret
add
push
lss
add
out
dec
sbb
add
inc
xor
je
rcr
dec
lock
mov
pop
inc
mov
inc
addl
sub
push
negb
cs
xchg
clc
or
mov
nop
sbb
and
cld
shll
sub
cmp
out
or
inc
xchg
inc
add
adc
ret
inc
pop
jb
call
mov
dec
stc
mov
add
sbbb
xchg
xchg
sub
stos
jge
mov
es
fs
cmp
mov
test
or
push
lea
cld
outsb
jne
xchg
and
ret
jne
decl
cmpsb
and
push
clc
add
push
mov
js
adc
pop
movsl
pop
in
mov
push
push
fildl
and
les
sub
lahf
int
mov
inc
sub
push
call
gs
push
sbb
cli
hlt
aam
adcb
jnp
and
push
dec
push
test
xchg
popf
push
fsubrs
push
out
and
das
popa
inc
dec
sbbl
pop
andb
cmp
cmp
push
sub
xlat
dec
xor
nop
loope
cmp
int
jg
cld
out
and
push
stos
add
ljmp
or
pop
ret
testb
or
cmpsl
inc
jp
sbbl
pop
pop
or
nop
inc
mov
inc
ds
cs
mov
outsl
push
push
lock
push
lea
imul
outsl
data16
stos
int3
adc
or
xchg
mov
dec
jge
mov
add
lret
mov
inc
jge
dec
sbb
xlat
notb
add
or
out
repnz
xor
inc
jge
cwtl
inc
adc
sub
adc
nop
je
xchg
lcall
push
dec
push
adc
dec
mov
or
push
out
mov
adc
or
outsb
cltd
pop
and
cmc
data16
dec
dec
or
or
outsb
mov
es
or
pop
xor
and
and
and
cmp
aad
or
movsl
fisubrl
fs
lods
xor
std
mov
jp
aas
ja
jnp
nop
jmp
or
ret
xor
sub
inc
push
pop
or
outsl
imul
or
push
push
push
cmp
jne
jns
dec
or
push
jmp
mov
cwtl
jne
mov
add
push
loopne
jle
lock
mov
xor
xchg
bound
sbb
push
or
push
or
scas
arpl
sbb
subl
call
roll
ljmp
call
mov
call
mov
mov
push
or
jg
pushf
adcl
and
add
stc
and
add
leave
lock
dec
pop
cmp
sub
mov
add
or
hlt
inc
xchg
in
inc
sub
mov
pop
jne
dec
in
popf
adc
dec
cmp
ja
mov
cld
xchg
icebp
insb
cmp
xor
sub
gs
jp
loop
sbb
out
xor
dec
xor
xchg
mov
lret
mov
hlt
fimuls
jbe
mov
lock
aam
cmp
dec
add
add
push
push
fldpi
ss
inc
ljmp
xlat
inc
data16
or
andl
push
adc
jne
fsubr
pusha
cmp
jge
xchg
mov
sti
xchg
pop
stos
pop
test
jne
pop
jno
shlb
inc
and
adc
cmp
xchg
loopne
add
je
lea
cmpl
jb
dec
jge
movsl
test
fs
mulb
bnd
pop
jbe
jg
ret
scas
jl
test
fstpt
leave
jl
int
push
aas
in
orl
pop
pop
push
fistps
mov
mov
jle
pop
je
cmc
sbb
add
or
call
sbb
lcall
ds
push
inc
lds
push
and
push
sub
push
cwtl
or
add
adc
aas
cltd
jnp
fsub
inc
cmc
push
popa
jae
pop
fidivs
inc
push
mov
or
scas
sahf
jle,pt
enter
or
cmp
loope
rcrb
push
pop
pop
hlt
fmul
cmpsl
push
jo
mov
and
aad
pop
ret
icebp
or
shll
mov
xor
push
iret
pop
ret
mov
das
inc
add
sub
xor
lods
jne
and
jl
inc
test
or
je
and
out
rclb
adc
stos
dec
hlt
cmpsl
adcl
sbb
sub
pop
dec
or
xor
dec
sbb
movl
sahf
popf
and
jecxz
cwtl
je
fldenv
lock
out
mov
sbb
pop
or
cmp
dec
lcall
mov
mov
jge,pn
add
and
lret
int3
je
mov
cmp
lahf
mov
test
or
or
call
inc
movsb
outsb
out
js
push
movsl
mov
sbb
mov
sbb
js
pop
mov
pop
fisttps
adc
or
xchg
adc
test
aam
cld
cltd
dec
mov
pop
out
popa
std
sbb
push
adc
fisttpl
push
stos
pushf
jne
sti
xor
or
push
mov
inc
xor
jns
fs
and
jp
loopne
das
popa
clc
mov
outsl
fidivs
xlat
jb
sti
sbb
sbb
push
xlat
cs
out
mov
faddl
or
testl
imull
icebp
dec
loope
repz
sbb
fldt
aas
xchg
push
ret
idiv
mov
clc
push
ret
sub
test
es
mov
inc
cmp
xchg
pop
ret
dec
xor
sbb
fs
push
mov
imul
sbb
addr16
call
mov
mov
fbstp
sbb
fldl
mov
cmp
je
mov
xor
jne
and
mov
sub
sub
nop
jo
cmpsb
sahf
or
jl
andl
lock
mov
cmp
call
adc
inc
xchg
push
push
jmp
imul
xchg
aad
add
xchg
je
and
cmp
mov
xor
movsl
cwtl
inc
fisubs
test
gs
push
sub
and
adcl
fs
add
xor
movsb
jge
dec
inc
sub
pop
xchg
ja
push
mov
lods
xor
pop
and
stc
sub
andb
inc
idivl
fistpl
je
shll
fadds
adc
call
movsl
imul
ja
lahf
scas
packssdw
fistl
or
cmp
inc
sbb
into
sub
cmp
ss
adc
daa
push
loope
leave
test
movsb
lods
pop
dec
ret
sbb
mov
jne
jecxz
pusha
push
push
mov
ja
push
dec
stos
out
jle
dec
dec
jg
push
push
fists
or
xchg
dec
push
mov
jmp
scas
pop
pop
mov
ss
or
outsl
mov
push
cmp
mov
adc
mov
dec
divl
cmp
or
ret
sahf
sarb
rolb
ret
pop
ds
pushf
and
hlt
push
fists
inc
rol
shll
ret
ljmp
sub
sub
xchg
andb
pop
cmp
push
add
dec
pop
daa
or
sub
jecxz
int3
add
sub
mov
call
adc
mov
hlt
mov
adc
sbb
shl
add
dec
or
push
insb
xchg
lds
add
into
pop
jmp
mov
push
jns
mov
lahf
movsb
push
xchg
and
movsl
jne
in
je
scas
or
dec
mov
ja
dec
and
lret
push
push
add
sub
dec
decb
hlt
sbb
in
out
int
xchg
sbb
imul
sbb
push
cmp
push
add
jmp
push
push
jne
inc
arpl
addr16
or
call
lods
push
xor
call
lock
scas
cmp
mov
call
in
sub
sbb
or
arpl
fadds
or
test
int3
adc
je
and
and
lret
nop
lock
push
push
mov
or
inc
push
sbb
psubb
bound
adc
push
sub
test
bound
jno
sbb
inc
std
mov
inc
cwtl
inc
xor
jmp
test
xchg
dec
int3
pop
les
xor
push
test
call
in
andb
push
pop
mov
inc
jl
xchg
mov
jbe
dec
enter
or
push
adc
push
inc
fsubs
test
out
repz
push
sbb
sti
pop
ja
ret
jb
ror
lahf
and
push
cmp
inc
mov
and
loope
in
mov
jne
pop
into
jmp
mov
adc
push
inc
push
in
dec
fistpll
inc
sti
lret
ljmp
shlb
pop
fcoml
js
mov
sub
pop
fcomps
or
push
xchg
xchg
add
fisubs
add
adc
repz
add
mov
imul
imul
add
pop
loope
cli
pop
jb
fisttps
xchg
fimull
inc
rorb
mov
ret
push
inc
rorl
mov
inc
jo
ja
fidivl
sbb
mov
scas
pop
sbb
sahf
pop
inc
inc
cmp
jb
cmp
shll
enter
push
cs
push
adc
pop
mov
jecxz
ror
pusha
test
mov
jno
xchg
icebp
or
shlb
pop
jbe
iret
arpl
jge
mov
les
sub
push
adc
mov
adc
pop
cmp
cmpsb
pop
pop
cmpsb
add
loopne
call
xchg
and
push
jge
jmp
pop
fnsave
or
andl
or
mov
pushl
or
pop
xchg
int
xor
cld
xor
or
test
and
leave
mov
sub
mov
imul
mov
leave
mov
sub
xor
dec
cs
push
loopne
pop
jae
sbb
jae
or
xor
dec
mov
xor
addr16
add
je
and
loop
cmp
xor
mov
test
push
push
inc
mov
adc
test
iret
push
xor
mov
mov
mov
push
adc
daa
clc
jl
rclb
add
inc
jne
call
std
insb
mov
dec
xchg
decb
mov
mov
mov
push
in
pop
or
push
neg
dec
lods
or
icebp
jne
push
jg
rcrb
mov
and
inc
pop
mov
mov
mov
inc
pop
jns
push
fs
negb
pusha
push
push
dec
push
xchg
popa
and
sbb
dec
mov
mov
dec
push
stos
or
addr16
bound
cmp
adc
xchg
cmpsl
jp
xchg
inc
and
data16
add
loop
push
push
sahf
nop
in
mov
fistpl
test
mov
mov
clc
mov
or
xor
dec
nop
adc
and
decb
inc
jmp
xor
mov
call
add
adc
jl
or
and
xchg
mov
icebp
mov
mov
sub
push
test
bound
loope
xor
pop
push
sbb
ficomps
dec
or
nop
xchg
mov
jnp
jge
push
mov
std
fcom
daa
mov
jnp
in
ss
mov
test
repnz
imul
push
lea
add
push
into
pop
adc
or
jns
aas
ret
fs
imul
pop
add
lea
cltd
xor
and
dec
mov
or
add
mov
ds
dec
adc
sub
lea
movsb
ds
jl
int3
lea
jmp
inc
adcl
xor
cltd
subb
outsb
fs
sahf
pop
adc
andl
test
mov
outsl
xchg
aas
sbb
lcall
mov
sahf
pusha
loopne
dec
test
inc
dec
and
pop
and
adc
xor
cmp
std
push
dec
ss
jmp
or
fildll
add
add
movsl
add
inc
inc
sbb
and
popf
dec
jnp
push
add
xor
je
cmp
and
in
hlt
jb
cmp
hlt
out
outsb
ret
es
notb
fstpl
ljmp
jno
pop
mov
push
add
mov
xor
aas
ret
or
sub
push
out
mov
sbb
insl
inc
hlt
push
xor
mov
mov
fisttpl
movsb
mov
aad
neg
add
xchg
sub
mov
pop
sub
pop
mov
pusha
repnz
mov
test
jge
ficompl
jmp
push
mov
hlt
movl
test
fs
add
in
leave
mov
add
adc
insb
push
arpl
cmc
or
outsb
cmp
pop
adc
in
pusha
aad
jb
addr16
add
aam
add
std
test
or
insb
cwtl
mov
add
leave
mov
lods
jge
add
xor
filds
or
cmp
sbb
cmp
ficoms
and
enter
sarb
and
add
iret
shld
sub
mov
or
and
or
das
adc
add
sub
inc
fdivl
jno
add
mov
adc
out
pop
mov
mov
movsl
in
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
popa
cli
sbb
fdivs
test
inc
repnz
xchg
push
hlt
jnp
add
sbb
hlt
or
cmc
fnstenv
mov
ljmp
mov
bound
pop
ficoml
gs
aam
add
popa
mov
into
subl
mov
dec
sbb
xchg
fadd
roll
movsb
sti
hlt
shrl
imul
xor
mov
lods
sarb
add
inc
in
add
pop
dec
or
stos
leave
jl
fnstsw
add
add
adc
or
leave
and
test
or
aam
mov
push
add
ficomps
leave
fldcw
and
rolb
mov
test
pop
cmp
or
mov
mov
in
mov
mov
lcall
mov
cmp
inc
aad
scas
ja
popf
adc
adcl
jae
or
jecxz
cmp
push
sbb
jp
iret
push
in
decl
sbb
daa
scas
add
mov
pop
jge
hlt
lock
add
push
inc
push
imul
xorb
aas
sbb
subb
sbb
loopne
sub
mov
ficoml
int3
es
out
mov
cmp
aad
mov
call
xchg
roll
mov
push
repnz
dec
icebp
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
or
pusha
pop
jp
inc
ret
out
arpl
push
xchg
addr16
mov
xor
imul
sbb
outsl
add
xchg
ja
add
add
mov
and
es
aas
lds
cmpb
add
push
pop
cmpsl
call
ret
iret
shlb
sbb
mov
fs
repnz
in
pushf
mov
insl
lar
ss
jmp
pop
addr16
jb
push
add
xchg
adc
mov
add
sbb
add
mov
faddl
jl
or
clc
roll
icebp
clc
mov
push
pop
int
mov
pop
mul
ja
outsl
xor
sbb
dec
pop
jle
jo
ud0
cmp
pop
pop
or
adc
xsave
shll
popa
rol
push
js
loop
mov
push
add
add
popa
add
cmpsl
notl
pusha
rorb
inc
imul
add
scas
fcompl
fldenv
or
inc
lock
aaa
push
cld
mov
mov
add
pushl
loop
push
ret
inc
xchg
mov
cmpsb
mov
sarb
sub
add
fldenv
jp,pn
add
add
push
outsl
sub
mov
mov
lock
add
adc
pop
mov
cwtl
xor
cltd
jo
addr16
or
or
add
or
or
faddl
xor
and
cmp
pop
pop
or
aaa
xor
push
lahf
sbb
pushf
pusha
push
jo
js
sti
inc
xchg
jecxz
add
jo
jo
gs
add
mov
jns
or
mov
enter
js
js
adc
outsl
fs
pop
push
adc
xor
jae
les
mov
insb
outsl
lds
arpl
fdivrs
test
outsl
ss
std
adc
jno
incl
popa
sub
xor
mov
jle
dec
xor
push
or
sub
mov
sub
xor
and
mov
jl
rorb
push
inc
adc
ds
jae
jb
mov
inc
xchg
inc
mov
push
jne
mov
sbb
outsb
and
dec
sub
xor
push
addb
lcall
adc
adc
or
sbb
cmp
push
sub
cmp
popf
les
sbb
repz
dec
jecxz
or
or
inc
mov
jb
xorb
out
iret
popf
mov
push
dec
dec
jno
movsb
push
xchg
jl
mov
pavgb
dec
cld
push
dec
adc
cmp
adc
insb
xchg
nop
je
stos
push
jb
cmpsb
jle
addr16
push
dec
sub
aaa
mov
ljmp
mov
jo
sahf
xor
jbe
imul
hlt
je
fs
aam
imul
and
neg
sbb
pusha
lcall
das
mov
pop
fldl
inc
pusha
adc
daa
jo
mov
adc
xchg
call
cmp
mov
and
push
pop
nop
and
aaa
in
test
push
lods
push
push
add
xor
nop
xor
pop
push
andl
add
addr16
inc
fists
into
sub
push
jle
and
push
insl
loopne
mov
sbb
cmp
push
jne
jae
pusha
dec
popa
and
mov
push
xorl
lcall
adcb
sbb
ret
data16
push
out
and
cmpsb
push
popf
out
push
bound
or
pop
inc
inc
pcmpgtw
and
popa
aad
and
cmp
out
loope
dec
pop
imul
jp
or
adc
push
adc
gs
ss
push
aad
lds
sbb
inc
jb
push
popa
shrb
and
aam
bound
inc
fsts
dec
push
insb
lret
push
gs
inc
cltd
dec
outsl
cmp
inc
mull
or
je
pop
inc
inc
rclb
loop
inc
add
test
adc
or
movsl
dec
dec
shll
popa
addr16
inc
in
js
call
mov
sbb
popa
inc
inc
ret
inc
or
shll
mov
andl
or
mov
or
adc
sbb
and
fdivl
push
fs
dec
jb
sahf
jle
loope
cwtl
ds
sbb
sub
mov
and
mov
les
pop
or
adc
mov
xchg
or
ss
js
xlat
jo
inc
add
add
add
xchg
lods
shlb
and
or
or
push
mov
mov
arpl
and
add
push
clc
inc
pop
or
jo
push
in
adc
dec
lods
mov
add
mov
sub
cmpsl
dec
inc
in
outsl
adc
in
inc
adc
sub
dec
clc
mov
xor
xchg
add
pop
adc
cmp
push
jo,pt
bound
jl
movsb
fs
mov
lods
and
imul
test
mov
and
sbb
mov
aas
jo
and
adc
and
js
icebp
or
hlt
test
pop
movsl
push
or
cmpsb
pusha
subl
in
inc
push
cwtl
rclb
sbb
mov
and
data16
fldcw
adc
sbb
test
aas
fmul
dec
cmpsl
cwtl
mov
mov
xchg
and
and
insb
push
inc
dec
hlt
mov
test
dec
sbb
mov
fsub
mov
test
mov
jp
mov
call
inc
add
arpl
or
mov
nop
sbb
fsubl
inc
dec
inc
cmp
dec
sbb
and
ret
or
pop
sbb
and
lea
insl
shll
add
or
movsb
mov
repnz
dec
mov
push
mov
enter
dec
push
sub
fchs
pop
push
sub
in
insb
adc
and
or
lds
add
les
push
fcoml
lret
stc
sbb
sub
push
inc
outsb
in
cmp
mov
cmp
add
push
mov
fsts
dec
adc
adc
movsl
mulb
sub
cmp
cmp
jg
stos
in
mov
pop
mov
sahf
adc
mov
or
pop
cmpsl
cmp
mov
mov
aad
fcoml
adc
inc
or
jne
add
xchg
insb
sub
scas
and
mov
shr
lods
push
xchg
orl
mov
in
adc
pop
gs
das
insb
sub
gs
jl
outsb
cmpsl
mov
ret
movsl
adc
je
bnd
jbe
xlat
push
mov
int
fs
inc
gs
cmp
scas
adc
inc
push
adc
lret
flds
mov
mov
xchg
adc
push
lret
flds
xchg
es
push
jb
push
outsb
add
fcoml
sbb
divl
dec
push
jl
and
andb
sub
cmpsl
adc
mov
aaa
push
shrl
in
insb
ds
movsl
inc
adc
test
jl
adc
outsl
nop
fadds
add
add
add
add
inc
xchg
or
addl
loope
and
in
and
fwait
out
or
cmpsb
negl
add
add
jp
insl
inc
and
mov
jnp,pn
jge
sub
jns
in
inc
push
outsl
outsb
gs
ja
je
fldenv
out
jecxz
ds
and
jae
arpl
push
cs
push
outsb
fstpl
jb
outsl
fistpll
dec
cmp
gs
sbb
xor
insl
xchg
or
arpl
sbb
jns
lods
mov
aam
and
clc
dec
xor
and
jb
adc
iret
data16
push
mov
mov
pusha
lret
dec
mov
pushf
imul
arpl
hlt
adc
jmp
adc
jne
xchg
jp
in
pusha
pop
dec
outsb
aas
jbe
stos
imul
nop
pop
insl
cmp
out
jnp
push
jo
xorl
imul
enter
mov
inc
sbbb
push
inc
push
ljmp
stc
inc
insb
aad
dec
das
out
inc
cmp
je
into
pop
jmp
pop
mov
mov
push
out
imul
in
or
sub
sub
faddl
gs
jge
sub
fs
xor
insb
test
repnz
inc
std
jb
stos
test
adcb
jecxz
dec
data16
adc
adc
push
jae
xchg
pop
cmpsl
jmp
fisttpll
gs
sub
popa
pop
popa
push
sbb
ljmp
out
fisubrl
mov
mov
sti
pop
imul
xor
jl
loop
mov
add
insb
outsl
imul
jbe
jne
adcl
ret
dec
jae
test
loopne
popa
addr16
ja
outsb
adc
cmp
add
mov
or
adc
int
or
test
sbb
pop
inc
push
inc
pop
mov
cmovbe
xchg
pop
cmpsb
add
xor
dec
pop
add
or
add
xor
dec
pop
add
xor
push
jne
ss
dec
pop
add
or
add
cmp
dec
pop
add
or
add
lods
aas
xor
add
adc
iret
adc
jnp
xor
rorb
movd
sbb
jb
mov
add
add
xor
inc
sub
mov
and
jb
fwait
add
add
mov
pop
test
fwait
add
add
inc
sub
add
add
test
fwait
add
add
inc
sub
add
add
test
sub
sub
mov
push
or
pop
push
inc
sub
pop
mov
push
dec
clc
xchg
mov
push
daa
xchg
inc
or
dec
inc
push
out
adc
push
frstor
or
outsb
or
or
or
mov
dec
push
and
or
add
dec
or
or
outsl
or
rorb
fcoml
call
into
jge
shlb
test
push
je
xor
dec
add
movsl
or
add
or
or
add
or
dec
add
or
lret
or
add
push
imul
add
dec
or
mov
mov
mov
adc
fimuls
les
sub
adc
pop
dec
rorb
roll
xor
arpl
pushf
inc
or
pop
inc
pop
out
adc
dec
dec
outsb
or
and
or
dec
add
or
adc
mov
mov
aas
jb
and
arpl
adc
pop
inc
push
push
sub
sub
ds
push
dec
dec
xchg
pop
flds
and
or
push
sub
push
push
xchg
push
and
xor
xchg
mov
dec
jge
lods
pop
fwait
pop
ds
push
icebp
iret
mov
cli
mov
int3
inc
xchg
inc
push
aas
mov
xchg
in
lahf
dec
inc
inc
lods
and
lods
inc
iret
mov
pop
push
shrl
call
pop
inc
lahf
inc
dec
inc
inc
push
in
gs
cltd
sub
xchg
addr16
push
inc
dec
mov
int3
loop
push
add
test
pop
leave
stos
pop
jl
mov
sbbl
cmp
mov
pop
mov
gs
into
pushf
ja
adc
fs
adc
js
arpl
ja
adc
push
gs
ja
adc
js
addr16
ja
adc
js
imul
cmp
jae
and
sub
sub
fisttps
int3
loope
movsb
pop
test
dec
adc
loopne
jne
loop
js
jmp
insb
lds
pop
dec
inc
sbb
xor
inc
push
gs
imul
mov
or
pusha
and
lock
imul
fldenv
bswap
inc
jle
and
and
es
sub
and
das
jle
pop
repnz
daa
xchg
pusha
aas
and
and
shrb
jne
push
jle
and
inc
pop
nop
and
and
and
stc
sub
enter
sub
das
pop
nop
pop
cld
cmp
and
stc
pusha
bswap
jle
inc
and
imul
push
sbb
and
inc
repnz
nop
and
es
and
stc
sub
inc
das
repnz
pop
nop
cmp
daa
aas
and
jle
enter
cs
test
enter
and
push
jne
xchg
pusha
test
jno
fildl
sbb
cld
cs
js
and
nop
and
and
test
les
aas
and
and
inc
dec
gs
test
dec
dec
dec
sub
and
add
or
pop
or
mov
incb
gs
inc
outsb
outsl
ja
or
cwtl
dec
push
inc
out
dec
fiadds
bound
and
push
push
xchg
dec
adc
push
push
inc
push
xor
mov
fcmovu
loopne
add
gs
push
dec
sub
inc
xor
arpl
cmp
inc
dec
dec
js
pop
gs
inc
outsl
adc
ret
xchg
ret
dec
push
mov
pop
fldl
inc
dec
int
mov
lea
pop
jbe
dec
lcall
jae
imul
cld
mov
mov
cs
and
pop
adc
mov
inc
xchg
call
dec
add
and
inc
dec
mov
inc
repnz
add
adc
xor
ds
xorb
loop
sbb
add
jo
stc
add
std
cmp
movhlps
xchg
int3
jmp
icebp
xchg
add
popf
shlb
sub
stos
stos
push
ljmp
data16
adc
sbb
xor
jne
arpl
or
leave
add
fadds
inc
icebp
out
cwtl
aad
aam
dec
clc
push
or
mov
lret
add
in
shl
cli
hlt
std
add
jne
adc
movsl
mov
jnp
cmp
fnstsw
movsb
adc
repnz
or
mov
adc
int
enter
cwtl
or
out
test
push
std
test
xchg
popf
test
cmp
fsubl
lcall
add
rcr
xor
pop
faddl
add
mov
push
jle
add
jb
mov
ret
adc
mov
xchg
rclb
test
xor
rcrb
mov
xchg
jne
sub
xor
pushf
push
jbe
jns
push
push
je
mov
jne
xor
jle
pop
in
sub
pop
dec
inc
jge
or
push
inc
dec
inc
cmp
inc
clc
ljmp
stc
out
lcall
je
into
enter
imul
sbb
pop
popf
fdivrl
jo
adc
inc
lahf
pop
dec
js
pop
mov
cli
movsb
fdivrp
aaa
fwait
push
cltd
adc
arpl
xchg
iret
dec
repz
or
sbb
gs
inc
repz
es
mov
fwait
sub
les
pop
sahf
mov
sbb
jge
into
jae
imul
or
jne
sti
mov
cmp
adc
dec
iret
mov
call
pop
fbstp
xchg
cli
xchg
jge
pop
xchg
movsl
es
out
and
out
mov
jge
xor
enter
dec
ret
xchg
int3
ja
and
jbe
fiadds
cld
in
leave
jmp
cli
fdivr
jecxz
shr
mov
in
xor
addr16
lock
arpl
arpl
scas
aad
je
cld
sti
stc
out
repz
xor
insl
mov
in
push
xacquire
sti
lock
ds
cli
jl
inc
jmp
out
idiv
mov
and
push
daa
dec
inc
fs
jns
pop
enter
sub
add
add
dec
inc
push
push
dec
push
dec
icebp
out
cmpsl
addr16
jae
dec
shlb
xor
xor
pop
push
sub
in
and
repz
sbb
push
xor
xor
popa
push
dec
push
dec
xor
cmp
cs
in
and
xor
xor
push
test
movsb
and
adc
or
dec
addb
loope
cmp
aam
subb
lcall
add
jge
sbb
outsb
sub
shrb
pop
insb
jae
ljmp
sbb
adc
cmp
ds
dec
mov
lods
mulb
or
adc
repnz
push
inc
lahf
enter
in
sub
cmp
inc
xchg
or
in
pop
std
sub
adcl
adc
sbb
repnz
dec
sbb
scas
xor
push
loop
lret
inc
jne
gs
add
loopne
adc
mov
bound
and
mov
cmp
daa
dec
inc
mov
jb
test
or
faddl
mull
enter
push
or
pop
popa
lahf
add
cmp
xchg
sub
mov
inc
sbb
arpl
sub
dec
pop
jl
outsl
mov
jecxz
je
int3
mov
leave
pop
flds
push
dec
int3
inc
lahf
xor
add
jno
cmp
je
add
push
sbb
or
mov
adc
fldcw
push
cmc
pusha
pop
add
adc
sub
dec
pusha
shlb
hlt
scas
movsb
les
mov
adc
jp
test
adc
mov
inc
push
mov
imul
push
mov
add
mov
adc
js
adc
stos
adc
cmpsb
jmp
mov
xchg
adc
xor
xor
mov
or
mov
mov
das
or
and
test
add
fadds
inc
jo
test
mov
xchg
cmp
and
and
sbb
lcall
aaa
adc
xchg
and
imul
outsl
data16
stc
fucomi
popa
insb
negl
add
jle
jbe
jb
sbb
pop
out
or
cs
std
loop
int
mov
nop
cmp
imul
pshufw
jg
inc
cmp
adc
inc
fs
or
insl
push
bound
js
push
xor
adc
pop
cmp
sbb
adc
jae
inc
cwtl
add
and
inc
outsb
mov
lods
push
lret
sbb
jne
push
test
aaa
add
dec
jl
mov
cmp
jno
jne
je
iret
data16
jo
sub
les
fs
push
sbb
sub
imul
insl
mov
call
and
sub
pop
jmp
add
jb
mov
std
hlt
lds
xor
sgdtl
std
dec
jg
rcr
enter
outsl
movsb
mov
mov
mov
pop
push
add
addl
inc
ljmp
ljmp
add
pop
push
stos
add
add
incl
addl
dec
dec
sbbb
push
push
push
push
push
push
pop
pop
or
bound
mov
add
imul
pushl
mov
ja
jns
xor
ss
cmp
sub
and
pusha
popl
fwait
mov
call
ss
icebp
testl
jbe
push
lret
adc
adc
xchg
pop
and
int
xor
clc
adc
sbbb
mov
push
mov
pop
xor
push
add
push
call
mov
sahf
aam
add
pop
cld
loopne
pusha
call
add
lea
addl
add
dec
in
arpl
lock
and
les
pushf
jl
iret
shlb
mov
dec
mov
mov
rcr
repz
je
add
mov
lock
popa
ret
pusha
dec
mov
cmp
add
stc
cmp
je
decb
cmp
cmp
sti
jnp
jle
clc
idiv
adc
dec
clc
sbb
add
or
ss
sbb
pop
iret
outsb
push
adc
jp
push
inc
add
insb
aas
and
pop
inc
cmp
push
add
jl
cmp
and
jmp
cmp
xor
add
xor
adcl
pop
pop
ror
rol
hlt
cmp
jne
loope
sarb
sbb
adc
sbb
fstp
popa
ret
cli
fldenv
sub
sub
pop
adc
mov
cs
lods
test
mov
add
jecxz
xor
daa
dec
aas
sbb
pop
fs
xor
inc
pop
jo
lods
cld
push
pop
jg
xor
jl
add
pop
xor
pusha
push
cmp
or
jb
cwtl
decb
out
out
lds
xchg
hlt
dec
push
loop
out
jno
xor
mov
sahf
je
inc
add
adc
mov
push
das
pop
or
pop
insl
dec
jle
aad
pop
jne
xor
sub
fnstenv
add
pop
xorl
push
jmp
loop
inc
je
cmp
inc
jle
pop
push
lahf
cmp
outsl
ret
pop
pop
cmp
hlt
mov
cmp
xor
cmp
jg
subb
jno
add
test
ljmp
mov
inc
imull
js
data16
xchg
mov
cmc
rolb
xor
adc
mov
outsb
iret
movl
nop
popf
fs
dec
sub
mov
lds
pop
sarl
imul
xchg
sbb
add
pusha
add
add
imul
dec
cmp
test
insl
dec
cmpb
mov
push
push
pop
mov
rolb
je
cmp
add
add
pop
mov
sub
add
adc
and
cmp
dec
xchg
ret
cmp
js
push
orb
pop
xor
add
loop
pop
jecxz
pop
je
add
adc
aaa
jge
stc
ss
adc
lods
lds
loopne
cmpl
imul
lock
add
mov
cmp
sub
jmp
jo
push
shlb
and
call
mov
inc
add
inc
subb
mov
mov
or
addr16
sbb
pop
lea
sbb
dec
or
add
xor
das
or
push
cmp
dec
push
cmp
lcall
pop
loopne
jmp
inc
and
adc
enter
jo
add
add
js
inc
mov
xchg
cmp
jo
bound
bound
mov
orb
repz
adc
bound
adc
adc
dec
jbe
lcall
test
adc
sti
sub
adc
sbb
pop
and
adc
mov
rcr
ds
xor
and
pop
das
popa
scas
add
adc
test
loop
test
add
or
gs
repnz
data16
stc
inc
add
add
mov
push
add
add
sub
push
push
call
lret
insb
add
push
or
jecxz
dec
hlt
mov
enter
xchg
xor
xchg
lret
cmpb
idiv
in
std
inc
in
push
add
xorb
stc
fld1
loopne
into
cmp
in
push
xchg
inc
mov
repz
sbb
mov
leave
sbb
xor
loope
aad
add
lds
lret
cmc
hlt
add
movsb
std
arpl
or
fsub
inc
add
hlt
not
je
add
rolb
in
aas
nopl
mov
lea
xchg
jnp
mov
loope
add
test
add
sub
push
mov
aam
cmp
mov
pop
je
clc
idivb
pop
push
fistpl
mov
inc
es
out
insb
je
cmp
lahf
adc
aam
add
nop
stc
into
inc
xlat
pushf
lea
orb
push
insb
shl
sbb
sbb
inc
js
add
xchg
lock
das
fwait
cmp
bound
cmp
push
adc
mov
jb
cmc
shrb
mov
add
adc
pop
aaa
or
push
adc
mov
leave
nop
adc
mov
addl
mov
cmp
fcomps
insl
cmp
stos
testl
push
inc
xchg
test
leave
sub
add
dec
sbb
push
inc
testl
cmp
sarb
xchg
dec
mov
inc
push
outsl
sub
xchg
or
add
dec
xor
or
enter
xor
bound
push
cld
jb
ss
push
pusha
cs
push
dec
push
mov
xor
daa
je
xor
fistps
cli
stc
xlat
insl
push
push
push
das
lcall
aas
mov
jo
jb
aam
cmpsl
push
jae
sbbb
jne
arpl
mov
inc
popa
arpl
clc
movsb
xchg
jle
xor
jae
mov
cmp
insb
insb
inc
iret
xor
xor
outsb
cmp
dec
dec
inc
push
pop
push
mov
nop
leave
push
push
add
cmp
dec
sti
inc
dec
les
xorb
idivl
jg
ret
inc
mov
add
push
sub
or
pop
sub
stos
push
pop
or
test
pop
pop
pop
mov
xchg
dec
dec
push
xchg
inc
fs
xchg
lret
in
out
add
jo
adc
fs
push
call
iret
cmpb
push
sub
gs
bound
mov
pop
scas
dec
sbb
inc
shlb
push
pop
push
inc
test
xor
das
mov
sub
outsb
dec
fs
repz
inc
jns
rclb
xor
push
test
xor
xor
int3
inc
and
adc
inc
push
sbb
pop
sbb
xor
mov
or
mov
mov
or
loop
cmpsb
in
ja
cmp
add
out
push
dec
mov
dec
xchg
xchg
sub
xor
sti
xor
cs
add
jb
iret
inc
sbb
cmp
icebp
clc
daa
push
enter
xchg
data16
cltd
add
das
loope
push
inc
or
dec
ds
stos
inc
or
jns
or
push
inc
lcall
repz
insb
out
out
arpl
jae
imul
je
sbb
push
inc
jl
push
arpl
adc
sbb
and
nop
sub
inc
jb
jo
push
popa
add
or
inc
sti
aad
xor
dec
popa
iret
in
xor
shrl
sub
and
loope
js
and
dec
inc
lock
out
and
add
scas
inc
fdivr
jno
popa
iret
hlt
stos
and
in
and
mov
je
pop
and
pusha
inc
cmp
out
jle
push
lds
sbb
std
das
xor
insb
ret
les
pop
xor
and
data16
insl
xchg
in
mov
in
dec
sub
iret
call
sub
ja
loop
pop
test
inc
outsl
jne
pop
adc
mov
inc
adc
ja
scas
sarb
fistpll
adc
or
or
dec
dec
push
add
in
aaa
cmp
sub
das
sub
push
or
dec
inc
or
movsb
and
dec
adcl
inc
xchg
jnp
cmp
jnp
in
imul
mov
imul
pop
sub
push
dec
pop
adc
xchg
inc
out
xchg
pop
mov
cmp
or
dec
push
inc
ret
xchg
lret
dec
xor
imul
rol
xchg
push
lahf
inc
js
movsl
sbb
cs
jg
mov
in
mov
or
inc
sbb
ficomps
nop
shl
das
pop
mov
cmp
pop
and
fwait
adc
cmpsl
roll
pusha
adc
add
and
mov
lret
dec
push
xor
and
push
or
lods
push
jae
inc
dec
fistl
test
mov
mov
add
cmp
and
arpl
jne
dec
add
adc
loope
gs
lods
movsb
xor
test
fstl
push
and
gs
xorl
adc
lcall
pusha
popf
push
fsubrl
pushf
xor
movsb
adc
inc
inc
jnp
dec
pop
dec
xor
shll
je
fs
aam
jmp
and
push
gs
je
sbb
das
sub
xchg
xchg
or
mov
hlt
imul
por
pop
sarl
sub
add
sub
dec
sbbl
sub
bound
lcall
dec
mov
std
jp
fsubs
nop
in
sub
movsl
mov
xor
sbb
dec
mov
rorb
dec
aam
inc
pop
xor
xor
add
mov
inc
push
adc
decl
sub
or
ret
inc
inc
xchg
or
dec
sbb
add
call
bound
mov
repnz
mov
call
imul
or
xorb
mov
xor
sub
pop
inc
add
or
loope
xchg
inc
mov
or
insl
jae
or
popa
incl
jb
inc
or
dec
and
jg
jae
mov
and
imull
push
pop
loopne
out
mov
push
pop
inc
in
popf
adc
mov
xor
and
gs
test
fisttps
jo
pop
fptan
push
imul
lods
jns
int3
jne
mov
popf
dec
nop
bound
dec
mov
pusha
xor
mov
lods
pop
movsl
repz
and
mov
xchg
and
cli
pop
mov
fisttpll
arpl
xor
push
pop
and
shlb
pop
xor
push
and
addr16
rcr
xchg
sub
sub
inc
inc
in
pop
rcrl
dec
push
dec
sub
cs
insl
pusha
sbb
mov
pop
xchg
xchg
push
push
and
leave
adc
pop
rcll
inc
sbb
aaa
xchg
mov
imul
xor
xchg
in
dec
lds
push
push
aaa
xchg
leave
rcll
jmp
pop
sub
bound
stc
add
outsb
sub
push
push
iret
adc
cmc
adc
imul
shlb
pop
lds
jp
mov
call
cs
fistpll
jge
pop
aas
sbb
pop
jl
mov
dec
mov
inc
fnsave
dec
lahf
cwtl
nop
dec
in
inc
movsb
cmp
xchg
xor
movsl
inc
lods
push
dec
test
in
mov
cmpsb
movsb
je
cmc
arpl
lds
inc
push
movsl
test
adc
mov
push
cmp
xchg
cmp
sbb
int
push
cmc
mov
pop
je
ds
xchg
mov
push
sub
cmp
scas
push
xor
dec
fwait
imul
adc
inc
dec
add
push
dec
inc
pop
sti
gs
and
xorb
inc
or
inc
subl
adc
mov
and
xchg
sbb
loop
inc
add
sbb
cmp
sbb
adc
adc
fdivrl
lods
movsb
or
insb
adc
inc
or
nop
clc
push
mov
ror
mov
or
push
stc
and
in
mov
aam
mov
cmp
sbb
in
mov
adc
mov
inc
mov
xchg
xor
enter
mov
adc
stc
adc
mov
test
les
ds
mov
fsubs
les
and
loop
mov
pushf
loop
inc
dec
and
loop
mov
fmuls
inc
mov
xorl
adc
clc
mov
lods
mov
inc
mov
push
in
jl
mov
aam
arpl
les
mov
enter
jl
mov
clc
mov
mov
and
mov
cmp
xor
push
adc
hlt
mov
aam
js
mov
enter
jl
mov
or
mov
and
inc
lock
js
int
test
out
jo
pop
cmpsb
xor
enter
or
sbb
mov
pushf
sbb
mov
xchg
or
je
push
and
or
sbb
inc
lods
in
or
mov
sarb
add
xor
jp
out
sbb
pop
push
loop
inc
push
outsb
lahf
or
add
data16
aas
push
add
repz
jns
mov
mov
outsb
sub
push
jo
sbb
dec
push
scas
dec
dec
cltd
dec
and
xor
mov
loopne
xor
imul
dec
and
xor
mov
dec
fs
fs
dec
jne
popa
fldt
frstor
sub
je
inc
push
pusha
xor
inc
push
push
push
inc
push
inc
pop
dec
push
dec
adc
cmp
inc
ja
pop
lea
lret
gs
insl
loopne
movb
xor
push
and
mov
and
imul
xor
ja
arpl
outsb
outsb
pop
sub
sub
pop
dec
xor
push
xchg
dec
outsb
pop
sub
pop
imul
lods
out
aas
daa
xor
bound
je
nop
movsb
iret
pop
insl
pushf
sti
data16
ret
xchg
insb
imul
jne
aad
dec
gs
jbe
inc
mulb
pop
inc
dec
test
dec
outsb
jecxz
out
or
mull
jl
inc
lods
push
jb
mov
dec
jl
inc
negl
loope
es
xor
jb
cmp
push
xor
adc
sub
lret
push
adc
imul
sbb
hlt
sub
jecxz
push
adc
lret
push
je
sbb
out
sub
and
imul
mov
add
jae
jne
or
push
test
out
je
lods
sbb
inc
inc
movsb
outsl
inc
inc
cmp
push
imul
dec
adc
movsb
cs
inc
sub
bound
sbb
movsb
and
adc
mov
nop
jnp
clc
adc
cmp
add
inc
push
inc
dec
push
dec
dec
ljmp
loope
jb
xchg
mov
int3
shrl
js
xor
jae
and
or
lea
in
sub
repz
sub
dec
xchg
inc
dec
jmp
inc
out
jo
jae
mov
dec
inc
adc
inc
mov
inc
adc
xor
inc
xor
xchg
movhps
or
fstps
mov
ret
imul
push
imul
inc
repnz
stos
lret
sub
dec
mov
xorl
and
stos
das
ficompl
inc
push
test
loopne
pop
jne
jae
imul
lcall
xor
sub
es
dec
fnsave
popa
jne
je
cmp
fs
insb
hlt
imul
in
jl
inc
inc
jb
adc
lock
sbbb
sub
test
je
rclb
das
cmpsb
cld
dec
test
jae
jbe
mov
jne
std
xchg
push
insb
pop
mov
sub
or
mov
dec
cmp
adc
je
and
and
div
sub
outsl
xchg
cmp
insb
call
and
inc
inc
insb
pop
ret
sub
push
pusha
mov
xor
inc
nop
cmp
fs
and
or
adc
scas
inc
movsb
sub
xor
xor
mov
xchg
andl
daa
leave
mov
adc
sti
inc
dec
push
dec
nop
jl
push
xor
push
push
scas
in
adc
sub
lods
adc
xor
xchg
inc
fcomi
dec
cmp
inc
nop
mov
cmp
ret
sub
arpl
lcall
stos
dec
sub
and
frstor
decb
sub
inc
js
not
bound
mov
dec
dec
inc
in
cmpsb
cmp
jbe
cli
xor
imul
push
lods
pop
call
inc
xor
and
imul
std
insb
dec
in
sub
sub
je
sahf
xor
dec
mov
or
jns
jns
int3
xchg
mov
sbb
jge
inc
push
daa
xor
dec
je
xor
loope
jae
jae
shr
pop
das
mov
jne
adc
aaa
push
fldcw
and
in
pop
cmp
sahf
in
or
outsb
jp
mov
das
stc
shll
icebp
neg
xchg
enter
push
adc
add
dec
fs
push
pop
dec
out
aaa
sub
inc
test
mov
xor
loope
repz
jb
pop
inc
test
int3
aas
jo
jbe
icebp
dec
in
out
ret
xor
out
pop
dec
and
sub
xchg
insb
pop
push
jmp
shrb
call
icebp
sub
dec
inc
es
xchg
lcall
cmp
or
and
mov
adc
or
pop
insl
inc
mov
jne
pop
adc
cwtl
test
push
add
or
les
mov
inc
arpl
in
sub
jae
lods
in
inc
aaa
mov
push
aaa
iret
loopne
aaa
adc
cmpsb
fs
nop
pop
and
xor
icebp
adc
sub
jo
jae
lret
push
cs
mov
pshufw
inc
rorb
dec
cmc
in
outsl
push
push
shr
pop
push
lahf
inc
scas
cltd
xor
sarl
mov
inc
lods
push
movsb
cmp
mov
dec
rcll
inc
inc
mov
cs
jg
jmp
jmp
and
insl
repnz
ljmp
push
push
mov
fmuls
sub
xchg
aaa
sub
jae
sub
fistpl
imul
push
sub
push
dec
mov
adc
leave
push
xor
roll
ret
dec
jno
aas
ret
aad
repz
fistpl
jp
stos
adc
je
or
xchg
fsubrs
imul
addr16
xor
sahf
sarl
outsb
sar
xor
push
sbb
push
cmp
cmpsl
mov
and
pop
popa
cmp
cmp
xchg
enter
sbb
inc
dec
lds
movsl
or
cmp
dec
inc
sarb
fistl
in
cmp
xchg
and
push
or
or
jnp
in
and
push
sub
jecxz
lcall
jo
test
stos
fsin
adc
ds
loope
sbb
mov
dec
adc
jbe
adc
xor
out
or
dec
loop
notb
push
dec
sub
cmp
pop
adc
adc
cwtl
and
rclb
rolb
ss
inc
outsb
jbe
out
ljmp
ja
or
jb
push
dec
scas
xor
inc
stos
pop
cmp
inc
cs
sub
adc
mov
arpl
inc
mov
outsb
imul
push
loope
sbb
xor
hlt
sub
push
insl
jo
push
pusha
inc
outsb
cmpb
dec
fiaddl
xchg
pop
jb
loopne
push
adc
push
adc
add
repz
jns
xor
inc
outsb
jae
lock
pop
push
shrl
sub
and
and
mov
mov
xchg
inc
lret
xlat
mov
pusha
mov
and
and
xchg
or
adc
mov
sbb
xor
inc
inc
inc
rcrb
leave
inc
pop
sub
mov
test
bound
roll
inc
adc
ret
cmp
push
cmpsb
push
dec
xor
dec
mull
adc
adc
xor
and
xchg
pop
pop
inc
and
cmp
outsl
outsl
jp
bound
xor
add
sub
push
and
data16
dec
xchg
xchg
add
popa
std
and
sub
push
push
mov
pop
jp
and
or
dec
int3
cs
imul
sbb
scas
aas
mov
cmp
jno
mov
push
pusha
dec
push
daa
outsb
or
int3
aas
int
push
mov
sub
outsb
fs
xor
fs
inc
or
mov
jo
bound
repnz
imul
cmp
mov
dec
imul
andb
clc
outsl
mov
loop
jl
in
jmp
mov
inc
insb
inc
adc
leave
pop
scas
movsb
mov
push
sbb
cmp
xchg
or
pop
roll
push
inc
test
adc
and
inc
test
popf
stc
add
sbb
jae
in
adc
sbb
arpl
enter
scas
push
hlt
or
mov
adc
pop
sub
bound
je
adc
imul
push
test
cmp
lock
out
dec
adc
lret
push
cmp
lods
mov
mov
ja
arpl
out
inc
addr16
xor
inc
lods
call
addr16
imul
jns
mov
xchg
pop
mov
pop
cmpl
data16
fsubl
adc
out
jne
xor
xor
adc
shrb
imul
xorb
call
repnz
imul
pushf
jae
dec
outsl
aam
push
cli
mov
xor
or
sbb
cmp
xchg
cmovl
inc
xor
andl
inc
addr16
pop
jbe
mov
pop
dec
pop
stc
shll
or
or
insb
mov
sbb
jbe
add
mov
xor
xchg
lret
insb
push
or
jb
inc
mov
outsb
inc
push
and
push
enter
dec
or
loopne
fwait
orb
add
and
cltd
mov
jbe
xor
sbb
leave
xchg
pushf
adc
sbb
repz
sub
rorl
jne
mov
and
xor
mov
xor
jae
sub
subl
dec
xchg
xlat
jecxz
inc
mov
pop
jns
xchg
into
and
js
jp
and
xchg
inc
jo
pop
outsb
inc
jnp
arpl
andb
test
xor
int3
in
cmp
je
pop
scas
pop
ret
fldenv
cmp
in
sub
push
lds
dec
mov
dec
push
sub
in
jo
jb
repnz
jno
enter
call
jecxz
xchg
xor
mov
or
mov
sub
in
dec
popl
gs
adc
mov
in
dec
xchg
nop
call
pop
mov
pop
or
push
inc
pop
mov
jp
mov
adc
push
out
cmp
or
and
adc
jo
inc
lods
xchg
into
and
inc
or
dec
and
push
xor
cmpsb
stos
adc
outsl
mov
push
in
bound
adc
nop
pop
loop
xchg
push
addr16
addb
das
ds
pop
xor
jne
or
ds
adc
dec
dec
enter
sbb
cmp
cld
dec
jg
pop
pop
mov
fucomi
jmp
jmp
fs
popl
idiv
or
mov
pop
pop
mov
mov
sbb
lcall
pcmpgtb
sbb
add
lods
jbe
cmp
add
ja
popa
sub
jge
xchg
pop
test
xchg
out
scas
scas
xor
out
nop
mov
sub
scas
ds
dec
mov
xchg
sub
ss
dec
jmp
jb
adc
xor
pop
and
mov
mov
idivl
and
inc
cmp
xchg
mov
xor
mov
lret
popf
arpl
inc
dec
cmp
dec
jmp
push
pop
arpl
mov
aam
cltd
or
fs
popf
adc
ficompl
lods
stc
popa
push
and
xchg
mov
daa
rorb
arpl
adc
sub
scas
xor
enter
loopne
popf
push
pop
jo
dec
sub
mov
lahf
imull
aaa
fs
outsb
stos
arpl
xchg
add
dec
push
into
xor
jne
adcl
mov
xchg
dec
les
mov
fcoml
repnz
dec
sbb
inc
dec
sub
and
inc
push
ss
gs
data16
or
inc
dec
mov
xchg
inc
test
or
je
pop
mov
sub
nop
jge
dec
xchg
jg
push
sub
and
jbe
cmp
jp
adc
jecxz
inc
jne
push
add
xor
xor
dec
jo
dec
pop
xor
dec
jg
jo
pop
pop
insl
push
insl
jmp
push
cmp
jle
push
dec
icebp
xor
aaa
mov
fprem
and
jl
adc
adc
mov
das
stos
insl
notb
cmp
dec
push
jne
lods
dec
jb
movsl
adc
dec
push
mov
push
es
push
jns
jns
dec
imul
and
repnz
add
int3
sub
xchg
jns
xchg
adcb
push
inc
pop
dec
sbb
and
subl
je
push
imul
out
fsubrp
and
xor
dec
sbb
lret
push
jno
xchg
icebp
dec
mov
cmp
dec
js
pop
shlb
daa
in
fadds
cmp
cmpb
sub
sbb
imul
xor
xchg
push
jae
lret
iret
dec
mov
sbb
add
mov
cmpsb
outsb
dec
mov
loope
dec
repnz
adc
sub
xchg
or
jl
xchg
movsl
sbbl
inc
jae
scas
insl
or
cmp
leave
adc
inc
and
inc
jb
nop
xor
sub
and
fdivl
and
push
scas
xchg
scas
jl
lret
xor
jo
jl
popa
xchg
dec
popa
js
mov
clc
dec
sarl
mov
inc
jle
mov
and
aam
mov
mov
mov
xor
pop
lock
in
xor
pop
cmp
insb
hlt
int3
add
out
sub
inc
fisubrs
repz
inc
imul
and
nop
jle
and
sub
sub
xor
sub
xor
test
cmp
xor
cmp
addr16
mov
mov
dec
mov
in
push
clc
repz
jnp
push
sub
mov
nop
sub
dec
push
aad
dec
imul
mov
and
dec
outsb
and
in
aaa
nop
jno
push
mov
dec
jo
in
lods
push
outsl
jne
dec
sub
dec
and
mov
imul
sahf
sti
jp
sbb
cltd
jle
xchg
pop
aam
push
dec
push
xor
cmc
bound
test
stc
dec
mov
xor
mov
mov
and
mov
insb
js
in
out
mov
xchg
push
movsl
shll
movsl
and
fadds
xchg
aas
cmp
xchg
cmp
xor
xor
mov
xor
push
hlt
xchg
push
aam
das
cmp
sub
xor
xchg
bound
scas
sub
sbb
or
and
repz
dec
dec
insl
insb
movsl
sti
das
push
cld
lcall
stc
inc
lds
addr16
lods
fisubl
out
shrl
sbb
leave
pop
pop
test
mov
scas
cmpsl
scas
dec
xor
sub
data16
aas
pop
push
push
cmp
in
rcr
jae
das
jp
and
pop
in
mov
hlt
mov
push
push
idivl
push
dec
mov
cltd
aam
sub
dec
pop
pop
lods
sub
push
xor
cmp
sbb
xor
cmp
push
push
inc
fldl
aam
push
mov
int
ret
fstps
out
mov
adc
inc
dec
adc
mov
scas
dec
mov
mov
dec
ja
cmpsl
or
jmp
loop
inc
jmp
repz
ret
std
inc
mov
mov
inc
shrl
fdivp
out
inc
ret
sub
jmp
stc
decb
inc
and
orl
outsl
negb
push
in
in
inc
mov
das
ret
pop
jmp
jg
pop
dec
enter
inc
std
jbe
cld
cmc
xchg
loopne
dec
in
popf
mov
inc
repz
bound
movsl
xor
dec
cld
xchg
inc
and
inc
push
dec
mov
outsl
mov
sub
js
frstor
je
in
or
call
test
fldt
ret
jo
jae
fstl
ficoms
or
fs
aas
outsl
jne
outsb
imul
add
jo
stc
jb
cs
call
daa
popf
clc
testl
fisubl
divl
outsl
inc
dec
mov
sub
mov
mov
ror
dec
and
daa
imulb
jle
enter
insl
adc
orb
dec
pop
fisubrs
cld
ss
jne
dec
jp
and
jae
push
inc
popl
lea
or
xchg
inc
xor
pop
or
push
xor
stos
leave
das
sub
jns
inc
inc
jne
inc
jl
rorl
out
dec
test
inc
sbb
pop
xchg
stc
mov
jbe
les
je
out
aam
fs
jmp
or
mov
fs
dec
filds
xchg
jns
clc
dec
xchg
ds
jb
inc
push
lock
inc
add
loope
pushf
fcomps
push
add
dec
xor
or
cmp
dec
push
nop
adc
dec
and
stos
adc
in
ret
fucomi
ds
push
es
mul
and
inc
es
outsl
pop
xchg
fucom
fs
enter
xchg
je
push
dec
call
xchg
scas
fcomps
sbb
mov
cmpsl
fcompl
dec
ljmp
pop
test
pop
in
and
push
cmp
incb
mov
andb
sub
xchg
xlat
mov
adc
cmp
pop
mov
dec
pop
pop
mov
mov
adc
xchg
scas
adc
lcall
pushl
mov
mov
add
insl
sub
daa
imul
sub
inc
scas
pop
xor
js
cmp
add
mov
adc
cwtl
adc
or
and
dec
mov
sbb
mov
dec
or
sub
mov
adc
xchg
sub
inc
hlt
inc
in
call
aam
les
mov
mov
push
mov
dec
int
adc
jp
pop
jnp
ficoms
push
imul
jmp
in
mov
dec
xchg
cs
push
pop
inc
pop
je
push
xor
jne
dec
dec
jno
cmp
insl
mov
bound
push
outsl
shrb
jno
ret
xor
mov
aaa
mov
je
daa
mov
pop
push
xchg
sub
sbb
dec
imulb
dec
orl
xor
movsb
and
add
inc
sub
push
xchg
sti
push
push
dec
cmp
aaa
lret
push
cwtl
inc
popa
fisubrl
sbb
arpl
in
xor
push
or
arpl
jge
iret
cs
inc
mov
loop
cmpsl
inc
dec
inc
pop
cmpsl
pop
jge
outsl
je
push
and
imul
in
imulb
sti
xor
lahf
push
arpl
push
fdivl
pop
imul
inc
inc
jecxz
es
dec
hlt
jne
push
imul
mov
lcall
nop
bound
fs
cmpsl
or
arpl
or
cmpsl
pop
rcrb
sub
aaa
push
daa
fwait
jl
stos
flds
in
xor
out
fmull
repz
add
inc
and
pop
xor
cltd
sbb
mov
clc
sbb
insb
daa
popa
mov
addr16
repz
clc
fmuls
jo
cmp
dec
int
das
cwtl
mov
scas
nop
mov
subl
roll
gs
jg
xor
inc
fnstenv
cmpsl
push
setle
xchg
sbb
stc
cwtl
mov
movsb
pusha
mov
pop
test
mov
neg
xchg
dec
cmp
dec
xchg
movsb
icebp
mov
dec
sub
inc
addr16
jp
xchg
dec
in
loop
push
and
xchg
nop
xchg
ja
mov
push
inc
cwtl
test
inc
test
jmp
rorl
jo
mov
into
pop
xchg
add
xlat
xchg
add
aad
sub
cmp
ss
dec
mov
add
out
jle
inc
test
push
xchg
lret
push
xchg
or
popa
jbe
sub
dec
mov
xchg
out
jg
lahf
icebp
mov
inc
cmp
test
rclb
add
in
mov
cmpb
leave
adc
sub
xor
test
push
int3
sub
sbb
push
dec
and
lret
rclb
test
add
mov
push
sbb
stos
jns
arpl
dec
sub
daa
or
in
outsl
sbb
jmp
dec
inc
or
hlt
fmul
pop
ficomps
imul
dec
nop
nop
add
push
xchg
inc
inc
in
test
mov
cltd
je
insb
dec
or
mov
mov
mov
add
dec
sub
add
and
mov
movsb
cwtl
push
push
jne
or
xor
jmp
add
and
loopne
jo
in
push
or
adc
adc
pop
pusha
adc
aad
call
movsl
add
lods
adc
test
push
sub
xor
sbb
pop
fisubl
xor
pop
cltd
data16
inc
test
xchg
in
jo
scas
cmp
arpl
loopne
cmp
nop
daa
lcall
jmp
outsb
hlt
jne
xchg
daa
sbb
xchg
fcomps
add
loop
je
lret
adc
add
and
cs
in
sbb
mov
in
xor
arpl
mov
int
mul
pop
adc
jp
popf
jns
mov
inc
fwait
test
mov
and
dec
adcb
push
int3
ror
enter
mov
sub
in
fdivl
mov
push
adc
lods
test
sub
call
push
enter
inc
rorl
fs
push
outsb
cmc
shl
or
popa
pushf
sbb
inc
dec
data16
push
and
enter
popf
lcall
mov
arpl
dec
adc
xchg
cmp
xchg
jne
je
fwait
and
imul
dec
ljmp
jbe
js
popf
cld
and
jo
mov
sub
sbb
fwait
imul
sbb
pop
out
repz
mov
insb
les
mov
cmp
inc
lods
sbb
jns
sbb
mov
fs
mov
sub
sub
xor
mov
cltd
xor
pop
pop
fadds
dec
jns
jge
and
inc
aam
out
jne
fs
call
cmpsl
cmpsb
xchg
movsl
rcrb
insl
pop
xor
sub
mov
sbb
lret
js
pop
add
rcrl
rorl
push
xor
pop
sbb
xchg
sbb
in
cmc
or
into
nop
test
dec
cmp
jnp
outsb
jnp
insb
daa
into
je
adc
fldt
jb
mov
adc
mov
shrb
lret
lea
jne
ljmp
pop
aad
pop
inc
push
xor
cmp
repz
fisubrs
jne
sbb
add
fisubs
xor
jne
xor
mov
cmpsl
add
xor
adc
xor
xor
imul
sub
push
dec
push
dec
or
push
cmp
adc
add
popf
sub
adc
push
dec
mov
pop
cs
xchg
xor
sub
lea
ss
sub
das
dec
stc
mov
fidivs
adc
pop
sub
sbb
push
mov
push
outsb
dec
dec
mov
sub
xchg
xor
cmc
mov
push
push
adc
inc
cmp
pop
dec
outsl
mov
sub
mov
or
cli
pop
adc
push
sub
add
dec
inc
fs
imul
push
inc
jne
pushf
scas
push
mov
sar
stc
inc
mov
pop
xchg
lret
push
sub
lock
outsb
mov
cld
das
inc
xchg
add
lcall
jl
adc
sub
adc
pushf
push
jmp
mov
cwtl
push
cmp
lods
jl
push
out
aam
fidivrl
loope
xchg
nop
aaa
in
cmp
fnstsw
aad
lret
pop
xchg
rcr
inc
and
leave
mulb
adc
sbb
sub
cmp
ror
pop
ss
arpl
xchg
lret
test
sub
in
cmp
movsb
loop
jb
in
cmpsl
mov
and
outsl
stc
pop
rorl
mov
es
pop
mov
ljmp
dec
or
mov
xchg
cli
push
or
mov
mov
mov
stos
scas
sub
pop
pop
mov
stos
sub
outsb
je
mov
aas
out
outsl
loope
cltd
dec
or
inc
cmc
outsl
repz
xchg
jae
jb
and
das
iret
inc
enter
adc
mov
mov
cli
dec
in
inc
mov
shrb
mov
mov
xchg
xlat
ss
push
fs
lcall
cs
pusha
push
pop
cmp
jecxz
pop
sbb
xchg
push
cmp
sub
lea
outsb
mov
shr
fmull
invd
lods
inc
or
cmp
daa
and
pop
add
loopne
aas
push
add
daa
mov
cmp
cs
add
aaa
xor
mov
in
fildll
fdivs
outsb
mov
fsubrp
fsubrl
pop
push
pushf
jp
or
andl
pushw
arpl
negb
push
ja
outsb
jae
xor
shlb
sub
out
xor
adc
inc
xor
and
add
add
cld
mov
int3
cs
popa
xchg
jbe
fiadds
push
test
adc
and
xor
popa
jl
test
sub
scas
andb
hlt
inc
xor
inc
xor
cmp
cld
and
outsb
jg
adc
test
push
cwtl
test
js
insb
inc
fs
mov
and
dec
cmp
sbb
mov
or
and
addb
inc
dec
and
pop
or
fcomps
fs
int3
dec
les
mov
and
mov
dec
mov
jo
mov
pop
and
dec
dec
xchg
inc
sbb
xchg
mov
or
and
sbb
adc
or
mov
pop
fsts
call
dec
fcoms
shlb
dec
xchg
xchg
mov
jl
je
mov
call
sub
sbb
repnz
sbb
cltd
adc
or
adc
sbb
xchg
or
add
jo
test
cld
pop
fs
or
dec
call
inc
int3
enter
mov
xchg
lods
and
adc
dec
insb
xchg
fs
push
adc
clc
jo
dec
adc
cmp
cmp
sub
and
sbb
adc
or
add
cld
pop
inc
clc
lock
adc
and
dec
int3
xchg
les
mov
test
mov
xchg
mov
addb
adc
dec
dec
xchg
inc
and
xor
mov
adc
or
add
hlt
pop
adc
and
inc
fcom
mov
adc
and
dec
mov
inc
cwtl
fcompl
fcoml
mov
test
xchg
js
jo
push
jo
and
or
adc
and
dec
sbb
adc
or
cld
pop
inc
hlt
in
mov
adc
and
dec
enter
mov
lods
movsb
mov
test
push
push
and
dec
cmp
xor
sub
and
mov
adc
adc
hlt
pop
jmp
mov
adc
and
dec
mov
test
mov
test
jl
je
push
inc
dec
inc
mov
adc
and
dec
and
or
and
push
add
dec
in
fsubl
aam
enter
adc
xchg
xchg
and
adc
dec
pop
xchg
push
and
cmp
xor
sub
dec
sbb
cld
push
inc
hlt
in
mov
adc
and
dec
enter
mov
mov
dec
test
insb
mov
push
and
dec
cmp
xor
sub
and
mov
or
adc
clc
push
and
inc
call
shlb
dec
rclb
mov
and
dec
jl
je
insb
inc
fs
mov
and
dec
cmp
xor
sub
mov
adc
adc
clc
push
stc
movsb
pop
and
or
xchg
int3
and
inc
mov
cwtl
and
dec
test
insb
mov
dec
and
dec
cmp
and
mov
adc
adc
hlt
push
and
inc
in
mov
adc
and
dec
mov
lods
and
adc
dec
push
inc
push
dec
mov
cmp
dec
and
sbb
adc
or
and
push
add
dec
call
inc
int3
les
test
mov
inc
test
adc
dec
push
xchg
dec
and
xor
adc
cld
push
sub
loopne
fcoms
shlb
dec
rclb
mov
and
dec
js
insb
and
in
mov
dec
or
mov
and
dec
adc
push
fyl2x
or
adc
and
dec
enter
mov
lods
mov
and
dec
js
jo
fs
pop
push
mov
cmp
xor
sub
and
sbb
mov
dec
or
adc
and
dec
rclb
mov
mov
mov
insb
mov
and
dec
inc
movsl
cmpsb
mov
adc
sub
xchg
adc
or
add
inc
dec
hlt
mov
adc
and
dec
rclb
mov
mov
xchg
mov
addb
adc
push
dec
dec
xchg
cmp
xor
mov
adc
adc
clc
dec
and
inc
call
shlb
dec
mov
inc
mov
test
dec
je
insb
and
push
mov
and
dec
xor
sub
and
sbb
mov
add
cld
dec
add
dec
in
xchg
loopne
fadds
mov
dec
mov
inc
xorb
fs
pop
loop
inc
cmp
and
xchg
or
add
clc
dec
inc
lock
and
dec
les
lods
movsb
mov
adcb
pop
mov
and
dec
xor
sub
and
mov
pop
or
das
adc
dec
rclb
mov
pushf
and
dec
mov
jo
mov
pop
and
dec
dec
xchg
inc
and
inc
xor
sbb
adc
inc
cld
dec
or
xchg
in
and
inc
fmul
mov
adc
movsb
and
adc
dec
insb
xchg
pusha
and
push
dec
mov
cmp
dec
sub
or
and
dec
add
dec
in
fsubl
rolb
mov
dec
pushf
xchg
xchg
and
jo
push
xchg
push
jg
inc
adc
sub
and
sbb
adc
ret
inc
fs
xchg
fsubs
rolb
mov
cwtl
xchg
nop
and
jo
fs
dec
push
xchg
dec
and
xor
adc
mov
jmp
pop
or
adc
and
dec
mov
test
mov
test
jl
je
insb
xchg
and
dec
mov
xor
dec
and
add
inc
inc
hlt
mov
adc
and
dec
enter
mov
pushf
adc
jl
je
insb
mov
and
dec
cmp
xor
sub
mov
adc
inc
add
and
dec
fcoml
les
movsb
dec
pushf
xchg
nop
and
jo
push
xchg
dec
jg
cmp
xor
sub
and
sbb
adc
or
mov
incb
dec
in
xchg
in
fadds
mov
movsb
xchg
pushf
and
adc
dec
fs
pop
and
inc
mov
xor
sub
and
sbb
adc
or
mov
inc
and
push
or
mov
adc
movsb
and
adc
dec
insb
xchg
and
dec
mov
and
dec
sub
or
mov
inc
xor
dec
aam
int3
and
inc
mov
mov
xchg
mov
jl
je
mov
and
dec
dec
xchg
inc
and
inc
xor
mov
adc
and
dec
or
icebp
xchg
js
and
rolb
mov
dec
mov
inc
test
adc
dec
pop
xchg
push
and
cmp
mov
and
sbb
adc
or
add
clc
aas
jmp
mov
adc
and
dec
mov
inc
mov
mov
dec
je
insb
and
push
mov
and
dec
xor
sub
and
sbb
mov
or
das
adc
or
inc
enter
adc
xchg
cwtl
and
je
push
xchg
push
and
cmp
mov
and
sbb
adc
or
add
cld
cmp
fcoml
aam
int3
dec
les
lods
movsb
mov
test
fs
mov
and
dec
cmp
sbb
mov
clc
cmp
in
and
dec
fcoml
les
movsb
dec
pushf
xchg
xchg
and
adc
dec
pop
xchg
push
and
xor
sub
and
dec
adc
cmp
loopne
fcoms
shlb
dec
nop
xchg
mov
jl
je
mov
and
dec
dec
xchg
inc
and
inc
xor
sbb
adc
inc
cld
cmp
hlt
xchg
in
and
inc
mov
adc
and
dec
mov
test
mov
mov
andb
jo
and
dec
mov
xor
sub
and
sbb
adc
ret
repnz
or
or
and
inc
int3
les
lods
dec
mov
inc
mov
and
dec
pop
xchg
push
and
inc
cmp
and
xchg
or
mov
cmp
loopne
fcoms
mov
mov
xchg
andb
inc
jo
mov
and
dec
inc
mov
adc
and
dec
adc
aaa
fucomp
and
pop
enter
or
and
inc
mov
mov
xchg
test
jl
je
mov
push
and
dec
inc
xchg
cmp
xor
sub
mov
adc
or
add
clc
ss
shrb
adc
dec
int3
xchg
les
mov
mov
dec
test
push
dec
and
dec
cmp
xor
sub
and
mov
adc
adc
clc
xor
stc
push
or
mov
dec
pushf
mov
in
and
or
and
pop
mov
and
dec
cmp
xor
sub
and
or
add
cld
xor
hlt
dec
in
xchg
in
fadds
mov
mov
inc
test
adc
dec
pop
xchg
push
and
cmp
sbb
xchg
add
cld
xor
movsb
pop
and
or
xchg
aam
int3
inc
les
and
dec
cwtl
xchg
nop
and
jo
push
xchg
push
and
cmp
mov
and
sbb
adc
or
clc
xor
loopne
aam
int3
and
inc
mov
mov
xchg
test
jl
jo
mov
and
dec
inc
xchg
cmp
xor
sub
mov
adc
or
clc
xor
dec
mov
and
inc
enter
adc
xchg
xchg
and
adc
pop
dec
push
xchg
dec
and
xor
sub
and
sbb
adc
or
add
cld
xor
mov
adc
and
dec
int3
xchg
les
mov
movsb
adc
andb
inc
push
push
and
dec
inc
xchg
cmp
and
sbb
dec
or
jmp
pop
or
adc
and
dec
mov
test
mov
mov
jl
je
push
inc
dec
inc
mov
xor
sub
xchg
sbb
or
add
inc
cs
mov
adc
and
dec
enter
xchg
js
xor
test
mov
xchg
test
jl
je
mov
push
and
dec
cmp
xor
sub
mov
add
cld
sub
dec
in
fsubl
aam
int3
les
movsb
dec
pushf
xchg
xchg
and
adc
dec
pop
xchg
push
and
inc
cmp
pop
sub
inc
repnz
add
cld
sub
stc
or
adc
and
dec
int3
xchg
les
mov
pushf
adc
js
insb
inc
fs
mov
and
dec
cmp
xor
mov
adc
and
pop
and
clc
sub
mov
adc
and
dec
les
test
mov
dec
jl
je
insb
inc
fs
mov
and
dec
cmp
xor
sub
and
mov
or
adc
hlt
sub
movsb
pop
and
push
or
mov
dec
cwtl
xchg
nop
and
jo
push
xchg
push
and
xor
sub
and
sbb
xchg
or
cld
sub
and
in
inc
in
mov
adc
and
dec
mov
inc
pushf
xchg
mov
jo
push
dec
mov
and
dec
sub
or
mov
sub
jmp
mov
or
pushf
inc
xchg
mov
jo
push
inc
push
inc
mov
xor
sub
and
sbb
adc
outsb
daa
jmp
dec
fcoms
sarb
mov
and
insb
adc
dec
push
xchg
dec
and
xor
mov
adc
and
dec
add
cld
es
mov
adc
and
dec
rclb
pushf
mov
dec
je
insb
and
pop
mov
inc
and
dec
sub
and
adc
or
inc
and
fsubl
dec
rclb
mov
mov
xchg
mov
addb
insb
adc
dec
push
xchg
dec
and
xor
sub
and
sbb
xchg
or
cld
and
movsb
pop
or
adc
and
dec
mov
inc
test
mov
dec
insb
xchg
pusha
and
inc
mov
cmp
xor
xchg
and
adc
adc
or
cld
and
or
mov
adc
and
dec
fcoml
mov
test
pushf
dec
nop
xchg
test
js
insb
push
and
dec
inc
xchg
cmp
sub
and
or
add
clc
and
dec
loopne
fsubl
rolb
mov
mov
jo
mov
sbb
xor
jp
les
or
jo
jns
jp
popf
popa
mov
scas
jp
in
pop
rorl
test
fistpl
cmp
popa
insl
hlt
bound
jb
cmp
ja
idivl
gs
popa
imul
inc
je
jns
jo
addr16
push
mov
inc
sub
jp
push
jnp
lahf
imul
sbb
sbb
cmc
xor
or
xchg
mov
xlat
jge
lahf
out
xchg
fs
ret
xor
mov
test
push
in
addr16
mov
fldenv
mov
mov
and
mov
insl
inc
test
adc
or
int3
jo
jne
or
loop
jne
and
dec
movsb
arpl
or
mov
sbb
insl
cmc
popa
fisubrs
mov
iret
sbb
clc
ja
jl
inc
and
or
out
push
les
fildl
in
ret
mov
ja
or
inc
or
mov
cmp
jp
gs
or
fwait
imul
push
mov
lods
arpl
in
fstps
bound
addr16
mov
push
lods
ds
movsl
jecxz
ljmp
xchg
and
inc
lcall
stc
dec
mov
gs
inc
and
xchg
xchg
test
xor
adc
cs
xor
dec
rorb
sbb
jae
testl
mov
push
sbb
xor
pop
xchg
ss
inc
or
rcl
out
cmp
popa
or
dec
stc
mov
sbb
or
adc
insb
xor
or
or
insb
xor
mov
mov
data16
mov
xor
fs
xor
mov
xor
scas
imul
sbb
or
sahf
jb
adc
add
js
xor
rorb
xor
or
cmpsb
xor
xor
mov
xor
pop
fucomip
ret
cmp
test
cmp
inc
imul
js
cmp
dec
inc
inc
xchg
cmp
out
sbb
sbb
enter
bound
jns
lret
pusha
and
lods
add
sub
lret
pop
fwait
mov
fwait
inc
js,pn
xor
in
hlt
xor
out
or
in
aas
xchg
adc
sbb
sbb
sbb
xorb
adc
or
mov
xor
add
xchg
insb
sub
test
pop
cmc
sahf
and
cmp
data16
addr16
inc
ret
xor
inc
or
sub
sbb
addr16
or
pop
inc
fwait
lret
mov
xchg
adc
out
in
or
mov
jno
fs
lods
cmc
push
adc
adc
outsb
movsb
adc
or
data16
cs
ja
fisubrl
or
adc
js
or
or
inc
data16
dec
and
or
push
mov
sti
test
xchg
mov
adc
and
dec
dec
xor
push
imul
lock
lock
and
jle
and
leave
dec
adc
in
adc
and
insb
rclb
fsubl
push
xor
stos
mov
test
jns
or
sub
and
lea
imul
into
xchg
loop
and
gs
push
stc
xor
outsb
or
lret
jns
enter
imul
mov
data16
iret
out
jae
fs
andb
pop
insl
icebp
stc
jbe
fcoml
or
adc
jo
or
adc
or
push
orl
jp
and
out
outsl
ljmp
loopne
test
stc
xlat
adc
mov
mov
dec
or
or
or
outsl
xor
es
mov
jne
mov
adc
push
push
addr16
outsl
or
add
dec
add
and
push
int3
push
decl
and
adc
orl
iret
push
jne
loop
fmull
jns
or
or
arpl
je
into
mov
or
push
or
adc
jmp
test
pusha
mov
jo
xchg
popa
adc
add
or
mov
in
and
addr16
jns
sbb
or
mov
push
out
pushf
dec
xchg
js
pop
and
cmp
xlat
outsb
adc
cmp
sbb
divb
adc
sti
push
push
adc
rcrl
dec
push
xor
popa
testl
mov
enter
imul
adc
rclb
fs
or
push
jno
xchg
dec
jge
or
loope
imul
addps
js
arpl
mov
and
mulb
or
jb
or
mov
pop
outsb
or
or
dec
lock
push
lock
iret
or
sbb
inc
or
mov
outsb
adc
mov
data16
xchg
stos
jg
adc
ret
push
jge
mov
test
mov
sub
insb
mov
and
mov
mov
pop
adc
push
in
or
adc
inc
or
xor
movsb
or
add
cwtl
jns
adc
or
shlb
imul
lret
test
outsl
mov
nop
adc
insl
sub
mov
gs
and
ds
adc
adc
cmp
xchg
push
jo
enter
outsl
sbb
cltd
sbb
xor
adc
je
inc
push
and
jb
andb
insb
rcr
jo
cmc
mov
test
xchg
or
sub
xor
or
cmp
out
jp
or
outsl
outsb
bound
cmp
test
mov
and
or
or
ret
bound
dec
push
jmp
jle
push
pop
sub
or
outsb
cmpsl
mov
enter
inc
mov
adc
inc
or
fs
xchg
or
or
mov
pop
fstl
or
insb
sbb
adc
pushf
pop
cwtl
push
or
or
int3
adc
or
in
and
or
cmp
aaa
xor
and
pop
push
push
outsl
xor
push
or
xchg
sbb
stc
out
les
adc
vmovups
xchg
les
push
and
or
jb
gs
pop
in
divl
lods
or
or
arpl
and
aam
inc
xchg
call
or
js
out
sbb
js
sbb
or
xor
and
loopne
call
and
leave
ret
insl
cmc
daa
push
mov
cmp
or
push
cmp
adc
xor
loop
das
inc
adc
sub
or
fidivrs
test
call
and
in
adc
mov
leave
sbb
or
or
sub
push
jmp
dec
movsl
inc
push
aaa
inc
mov
sbb
insl
mov
outsl
imul
and
mov
aad
hlt
fsts
jb
pop
jns
sub
aaa
mov
adc
vpcmpeqb
sub
or
adc
test
jge
mov
sbb
jno
mov
sarb
pushf
stos
dec
aam
enter
cmp
mov
mov
or
fwait
push
cmpsb
adc
and
daa
fwait
cmp
out
or
call
xchg
fstl
cld
and
inc
es
sub
jmp
add
lds
adc
xchg
or
movsb
js
iret
repz
outsl
sbb
push
mov
or
outsl
adc
adc
insb
test
adc
or
data16
mov
mov
push
sub
bound
or
outsl
push
data16
pushl
or
or
bound
cli
inc
orb
cmp
or
push
sbb
call
inc
je
sub
jns
mov
xor
aaa
or
leave
jno
and
insb
arpl
push
mov
xchg
or
or
pusha
dec
cwtl
xchg
int
sub
pop
test
mov
imul
dec
cmc
cmp
or
xchg
je
or
jbe
adc
dec
adc
gs
orl
inc
leave
shlb
mov
or
sub
xor
outsl
cmp
mov
dec
cmc
sbb
pop
int3
sbb
and
fs
xchg
ljmp
arpl
jns
adc
arpl
popa
test
dec
adc
adc
dec
adc
inc
jns
filds
movsb
scas
and
adc
sahf
enter
rclb
nop
push
pop
scas
adc
adc
jl
mov
xor
inc
jo
or
test
or
or
jno
leave
testb
mov
mov
adc
icebp
loopne
xor
push
or
aad
pop
jb
or
sbb
xchg
imul
adc
sub
jb
imul
lret
out
dec
push
lcall
adc
cltd
or
fiaddl
sub
arpl
pop
and
shr
push
adc
adc
push
pop
jnp
outsb
pop
mov
sbb
dec
movb
push
xor
adc
and
and
out
int3
and
adc
or
and
mul
aas
orl
lds
gs
mov
outsl
adc
scas
dec
je
in
rcl
or
sbb
or
lret
jnp
mov
mov
jbe
test
sarl
popf
pop
or
jecxz
movsl
or
mov
adc
xchg
jl
xor
push
xchg
outsb
lcall
arpl
stos
cwtl
sub
ret
mov
pop
adc
cwtl
movsl
or
dec
lods
repnz
cmpsl
into
push
mov
popa
lahf
xchg
lods
xchg
or
sahf
data16
in
and
jg
fdivs
or
dec
push
jb
test
and
addr16
mov
adc
ljmp
fisubrs
mov
out
fldcw
jg
stc
jns
or
inc
or
jae
pusha
icebp
out
and
adc
xchg
icebp
adc
loop
fsubl
mov
pop
adc
pop
dec
sbb
push
test
scas
nop
ficoms
cld
and
lods
pushf
or
pop
imul
test
scas
ja
or
out
mov
outsl
lcall
shll
dec
pop
fcmovu
adc
push
scas
shll
mov
in
sbb
fs
and
insl
jecxz
dec
xchg
dec
test
or
jecxz
mov
sbb
loope
cmp
mov
xchg
loopne
sub
jne
cmp
lds
mov
xor
cmp
and
iret
adc
insl
out
adc
fs
insb
fimull
cmpsl
inc
adc
or
insb
or
and
jae
lock
inc
or
dec
mov
xlat
adc
jle
pushf
and
aaa
dec
pop
in
dec
push
js
pop
je
push
or
mov
mov
xchg
xor
movlps
ss
adc
movsl
mov
or
mov
cmp
push
enter
push
jo
jnp
and
js
rcl
or
sbb
popa
jbe
sbb
jae
mov
push
sbb
lcall
cmpsb
sbb
add
rcrb
and
std
and
jp
cmc
push
divl
aaa
or
outsl
cld
and
mov
xor
pop
sbbb
cmp
sub
sbb
and
or
push
or
or
jnp
inc
sub
cmpsb
push
shlb
adc
jmp
rclb
mov
xlat
insb
jae
or
and
sti
xchg
mov
imul
fmull
adc
movsb
int3
lahf
add
jns
or
js
xchg
mov
adc
fs
in
mov
pop
mov
inc
or
adc
shll
or
gs
xchg
pop
test
or
or
popa
adc
adc
or
cli
sub
or
pop
or
or
imul
adc
hlt
and
das
rcrb
xchg
jp
rep
adc
sub
xlat
jle
add
mov
es
sub
daa
sbb
jge
or
dec
ss
adc
mov
test
and
jae
sbb
or
or
imul
sbb
xchg
jae
xor
jne
gs
fimull
adc
aaa
mov
sub
push
or
xchg
pop
jne
or
mov
addr16
mov
dec
mov
or
outsl
adc
mov
leave
push
xchg
cmp
loop
nop
or
mov
adc
ficoms
fs
cs
imul
icebp
shll
pushf
insl
sbb
sbb
adc
arpl
inc
xor
push
or
inc
xchg
in
fdivl
sub
lock
adc
lods
pop
filds
js
je
and
jo
or
dec
popa
outsl
outsb
sbb
imul
popa
pop
xchg
fidivrl
inc
addr16
insb
and
bound
or
mov
xchg
push
pop
push
xchg
xlat
jne
hlt
sbb
xor
lds
push
and
lahf
adc
popa
adc
jns
and
adc
repnz
dec
call
shlb
sbb
pop
mov
jp
mov
pop
or
xchg
jbe
xchg
push
adc
fists
jns
sub
sub
sar
adc
repz
inc
or
bound
dec
adc
out
jae
or
cld
lock
cmpl
inc
or
gs
imul
test
or
sub
mov
je
imul
push
insl
jns
mov
rcrb
or
addr16
pusha
nop
incb
repz
insl
lods
or
or
dec
adc
ss
rolb
daa
sub
dec
or
imul
mov
insb
xor
sub
or
dec
adc
outsl
or
inc
xlat
sbb
inc
negb
xor
or
xchg
outsb
xchg
and
cwtl
sub
push
dec
adc
dec
movsb
adc
je
fsubl
adc
enter
pop
add
xor
or
cmpsb
stc
insb
adc
js
gs
outsb
loop
movsb
or
das
inc
xchg
dec
ficoms
popa
aaa
jns
imul
ficoms
gs
pop
cmp
in
mov
adc
push
jne
jo
xchg
pop
mov
outsb
mov
imul
inc
inc
push
mov
or
sbb
cmp
push
and
cmp
fistl
sti
je
or
insb
xor
movaps
jae
lods
shrb
xchg
sbb
gs
mov
dec
push
jae
rclb
shl
xor
loop
pushf
sub
popa
or
mov
sbb
test
das
sub
fisubs
arpl
xchg
int
bnd
movsl
jno
push
test
xor
sbb
movsl
into
mov
je
sub
or
popf
mov
or
push
xchg
xchg
adc
lcall
or
adc
jne
or
gs
mov
or
dec
and
outsb
jns
mov
fs
inc
sbb
insl
lret
inc
or
lcall
dec
mov
push
call
js
xchg
push
insb
push
gs
bound
or
or
adc
or
pop
cltd
xor
sbb
mov
js
insb
sub
or
ja
or
xchg
dec
push
or
sahf
xor
pop
sbb
adc
insb
jo
outsl
sub
adc
cmp
xchg
fs
or
iret
fwait
in
inc
mov
and
sbb
mov
or
mov
repz
mov
shrb
or
adc
or
adc
fbld
inc
loop
xor
push
pop
lcall
mov
push
or
cmp
stos
loope
adc
test
adc
xor
or
rcll
repnz
or
xor
imul
int
out
sbb
adc
imul
and
das
inc
fistpll
or
adc
cld
sub
fwait
xchg
cmc
out
fwait
pop
cmc
mov
sbb
aam
jae
push
mov
call
dec
pop
lods
ds
negb
and
xor
xchg
xor
and
icebp
imul
adc
and
into
insb
adc
leave
and
in
dec
and
sbb
dec
test
dec
jne
xchg
mov
ret
push
idivl
cmp
inc
or
xchg
repnz
outsb
push
fucomip
je
mov
push
dec
sbb
fs
adc
and
mov
insl
gs
adc
pop
or
mov
outsl
adc
xchg
aad
adc
fcoms
fs
or
sub
popa
cmp
jecxz
or
xor
xchg
and
mov
gs
out
adc
adc
inc
sbb
pop
adc
or
dec
repnz
adc
or
push
or
das
fst
sbb
fisubrl
or
mov
jge
movsb
add
or
orb
mov
inc
sbb
cmp
std
adc
test
adc
fcoml
iret
xchg
movsl
les
ja
mov
outsl
sbb
mov
jecxz
js
fwait
pop
adc
aam
lahf
loope
jle
adc
or
cli
or
dec
adc
mov
rcll
jns
enter
push
sub
sbb
popf
jb
inc
rorb
mov
jbe
insl
mov
test
enter
ficomps
jmp
popf
gs
adc
jb
jp
push
fst
popa
xor
jo
cmc
push
dec
or
jp
pushf
popf
gs
xor
xor
dec
or
push
or
mov
adc
std
iret
das
jne
movsb
iret
sbb
adc
mov
pop
or
mov
or
xchg
out
call
stos
or
push
aam
sbb
sub
add
adc
addr16
mov
sub
mov
xchg
mov
sbb
pop
or
xor
push
ficompl
mov
adc
adc
cltd
jp
push
adc
jbe
or
cmp
xchg
push
in
or
jg
popa
fs
ss
mov
rcr
or
out
xchg
insb
test
sbb
xchg
mov
pop
xchg
and
xlat
mov
mov
push
int3
mov
jmp
cltd
fdivrs
je
scas
jbe
adc
or
insl
jmp
imul
jo
and
and
or
int
cmp
push
test
dec
inc
adc
mov
sbb
rcll
test
std
inc
or
or
jb
jns
jge
into
test
or
xchg
sub
xor
cmc
mov
popa
orb
sbb
loop
push
xor
adc
or
popf
sub
xchg
cli
adc
imul
adc
inc
and
sbb
shl
dec
adc
lcall
mov
push
cmpsb
arpl
pop
adc
je
jo
cli
and
inc
push
dec
push
adc
mov
or
or
imul
loopne
mov
imul
and
adc
mov
or
or
mov
imul
xchg
arpl
dec
rcl
inc
sub
aad
popf
arpl
je
mov
sbb
or
or
hlt
cmpsb
inc
imul
enter
sub
aam
mov
jg
dec
orb
push
or
movsb
outsb
xor
imul
sbb
adc
dec
rorb
push
mov
fisubrl
aam
mov
or
ja
mov
cmp
adc
or
jns
stc
sbb
adc
jo
xor
jae
fwait
push
jns
test
les
pop
sub
or
mov
daa
notb
inc
sbb
insb
orb
jbe
popa
adc
movsb
cmp
mov
lahf
lds
mov
adc
jno
lahf
in
and
call
jae
bound
adc
insl
notb
cmp
test
inc
sbb
fisttpll
and
or
cmp
sbb
jo
mov
or
or
pop
dec
xor
inc
push
in
dec
jae
adc
jbe
js
sbb
jns
add
or
sbb
sub
or
mov
mov
cmpsb
mov
adc
bound
loope
adc
or
or
data16
test
in
loopne
sbb
dec
or
je
adc
inc
adc
insb
and
inc
push
dec
loop
insb
adc
xor
sbb
testl
sti
cmp
xchg
xor
add
xor
popf
fsubrs
pusha
stos
jne
in
incl
dec
jbe
sbb
push
sub
daa
push
dec
mov
mov
xchg
inc
or
test
mov
adc
or
fmul
adc
mov
or
adc
out
adc
in
sarb
lret
cmp
push
and
ljmp
lret
add
xor
arpl
sbb
push
jno
adc
inc
test
movsb
je
call
jb
gs
outsb
outsb
mov
sbb
insb
mov
mov
inc
add
mov
cmp
or
imul
or
or
imul
cs
andl
jnp
inc
jae
xchg
adc
inc
fnstsw
or
mov
xchg
or
mov
popa
js
je
and
dec
mov
dec
cld
and
mov
and
insl
popa
jo
pop
pop
cmp
sub
lods
fcomp
adc
loopne
je
int3
adc
jecxz
jno
dec
adc
out
icebp
jge
dec
lds
stc
sub
adc
adc
or
mov
popa
sbb
ficoms
mov
pavgb
adc
jp
pop
aam
sbb
fldcw
aas
mov
pop
push
adc
out
test
movsl
dec
jb
or
jns
mov
push
adc
jne
jo
push
adc
push
inc
shrl
or
imul
dec
adc
xchg
or
gs
stos
xor
cmp
in
or
data16
inc
out
push
adc
sti
xchg
adc
fadds
ret
hlt
mov
sub
sbb
sub
inc
adc
cmp
mov
push
xor
jns
sahf
stos
je
jp
cmp
dec
imul
repnz
int
outsb
popf
pushf
or
adc
repnz
mov
sub
inc
stos
sub
or
and
push
insl
js
adc
outsl
push
cmpsl
mov
ret
int
js
sub
pushf
cmp
outsb
bound
jbe
nop
dec
jbe
in
sub
adc
xor
jmp
insl
and
jecxz
imul
adc
dec
sti
mov
adc
inc
repnz
jno
sbb
sbb
dec
adc
js
fiaddl
mov
imul
das
cld
adc
or
outsl
addr16
or
mov
nop
or
int
loop
add
fs
or
lods
shlb
sub
or
pop
out
mov
dec
or
sti
sbb
or
or
outsb
fstpt
push
dec
sbb
jb
je
aam
push
or
dec
inc
shrb
cmp
mov
pusha
adc
push
ficompl
int3
iret
cli
insb
ret
mov
or
or
or
int
xchg
imulb
dec
mov
lock
stos
inc
cmp
or
and
icebp
and
add
and
or
and
and
and
sbb
xor
jo
xchg
test
cmpps
int3
shl
out
dec
and
push
fs
movsb
adc
loop
cwtl
adc
aaa
loope
movsb
or
mov
xor
ja
xor
sarl
jne
mov
dec
mov
dec
notl
xchg
movsb
imul
jbe
inc
int3
mov
std
cmp
ja
xchg
loopne
lcall
xor
xor
or
push
sub
arpl
or
pushf
sbb
pop
or
push
js
jbe
jns
or
ja
push
pop
les
es
sub
rclb
add
xchg
and
mov
mov
mov
cld
cmp
insb
and
or
or
xchg
and
or
or
dec
or
jp
cltd
insb
bound
add
sub
mov
dec
xor
mov
or
mov
or
adc
pop
shll
fs
cmpsb
js
movsl
icebp
das
cld
ficoms
sbb
hlt
pop
imul
andl
push
fsubs
popa
mov
mov
cmp
push
dec
xor
push
jl
dec
testb
movsb
or
ret
je
or
xor
sbb
or
ja
or
test
or
addr16
adc
ficompl
xlat
test
adc
clc
and
popa
mov
out
out
dec
xchg
mulb
movsl
stc
mov
fnstcw
sub
push
test
fnstcw
adc
inc
dec
push
push
cmpl
imul
insl
sub
das
addr16
add
jns
mov
dec
ret
xor
add
dec
dec
push
loopne
in
inc
inc
inc
test
jl
sub
inc
push
dec
mov
push
push
dec
inc
sahf
je
jp
mov
sbb
decl
aam
dec
push
cmp
test
dec
mov
js
push
mov
js
xchg
test
sahf
cs
jns
dec
mov
mov
fxch
sbb
rep
movsb
js
push
dec
jo
cmp
js
je
dec
inc
rclb
mov
jmp
cmp
and
and
call
or
jae
push
les
jo
jne
dec
sbb
pushf
stc
and
adc
add
jbe
jb,pn
jmp
inc
repz
pop
jmp
sbb
call
dec
pushl
movsb
xor
dec
cmp
icebp
push
mov
or
dec
jno
pop
cmp
xchg
cs
adc
fisttpll
test
and
aas
addb
out
cltd
add
sarl
jmp
mov
inc
push
das
inc
push
pop
cs
fidivrs
and
inc
dec
sbb
push
aam
jb
push
mov
insl
leave
ja
xchg
rcrb
add
inc
jae
push
push
scas
daa
mov
aas
mov
pop
pop
inc
xchg
ja
cld
or
insb
stc
or
mov
jmp
movsb
jmp
sbb
and
repnz
leave
sub
fsub
decl
lret
jns
push
dec
and
xchg
cs
push
add
mov
out
movsl
mov
mov
mov
add
sti
ja
je
aam
pushf
cs
sub
xor
addr16
das
or
or
je
jne
push
xor
shll
mov
out
ss
sub
pop
jnp
xor
fldl
and
sub
xchg
aad
je
mov
jne
push
insl
cli
xor
gs
incl
les
cwtl
scas
nop
shl
fs
shll
dec
add
jle
mov
imull
sahf
push
ss
pop
mov
and
sahf
push
je
fldcw
ja
cmp
xchg
cld
popa
je
inc
adc
xor
xchg
and
push
outsb
and
sbb
or
cmp
gs
stos
mov
lods
arpl
mov
lretw
sbb
pop
gs
stos
gs
sbb
add
push
pop
push
arpl
cmp
pop
in
test
mov
jb
push
push
dec
add
adc
fidivrl
pop
clc
sbb
lcall
inc
push
aaa
push
daa
push
adc
push
cwtl
out
xchg
pop
xlat
jg
cwtl
pop
mov
call
mov
jbe
sub
jle
inc
dec
repnz
xchg
cmp
in
mov
decl
add
inc
pop
pusha
cli
inc
jo
cmp
sbb
or
jp,pn
dec
xor
and
sahf
push
sar
js
jns
xchg
jae,pn
push
out
leave
gs
push
jnp
stos
imul
xchg
test
dec
inc
jae
gs
pop
in
sub
dec
lds
pop
leave
das
jle
out
adc
pop
addr16
imul
sti
push
aaa
enter
jp
pop
jle
and
sub
push
fdivrs
pop
sub
push
repz
and
cmp
ljmp
lods
jg
and
js
stos
or
jne
pop
outsl
lods
pop
out
das
clc
sub
inc
cmc
and
inc
sbb
jns
and
rclb
movsl
mov
cmp
jp
insl
inc
jge
outsl
push
cld
push
jmp
sub
dec
sub
inc
divb
cmpsb
jmp
xlat
jo
mov
push
xlat
jns
das
push
stos
inc
popa
out
xlat
pop
push
jns
mov
ljmp
sti
xlat
shll
mov
and
mov
movsb
mov
in
mov
mov
pop
jns
pop
movsb
cmpsb
sbb
jnp
xchg
shlb
dec
mov
adc
xor
adc
push
xor
stos
in
dec
jae
popa
ja
cmp
xchg
in
mov
in
inc
jae
cmp
jl
mov
or
push
lods
sub
jg
xor
cmp
mov
cmp
out
sub
mov
cmp
jp
sbb
inc
sarl
mov
inc
pop
add
xor
jp
jp
jg
jecxz
and
imul
xor
jle
dec
inc
repz
imul
lock
mov
and
pop
mov
push
xchg
hlt
jl
mov
or
pop
and
cmp
pop
pop
popf
das
push
adc
cmpsl
or
out
mov
fnstcw
mov
test
dec
inc
ficoms
inc
dec
js
cmp
out
cmpsl
fnstsw
in
xchg
jbe
je
push
sub
add
outsl
pusha
pop
push
lea
scas
out
cmc
scas
jecxz
in
sub
out
jns
jb
icebp
out
loop
aas
sub
fimull
xchg
sub
cwtl
and
jae
mov
push
push
rep
jb
stc
in
dec
outsl
push
shrb
xor
jmp
out
inc
push
mov
adc
je
andb
shll
push
sbb
mov
in
insb
je
push
inc
mov
lret
mov
pop
dec
sbb
gs
inc
cmc
lods
mov
jns
shl
adc
inc
dec
stos
pop
hlt
rclb
test
popf
jbe
push
pop
stc
aaa
sbb
aaa
pop
leave
jg
popf
cmc
cmp
dec
inc
xchg
adc
fiaddl
inc
stos
sbb
scas
push
cmp
scas
inc
mov
inc
cmp
jae
loop
cltd
das
ds
jp
rcl
nop
aam
inc
xchg
inc
clc
push
cmpsl
jne
leave
push
inc
cwtl
mov
test
popf
fldt
in
mov
and
xchg
mov
int
cmp
test
int
jg
add
inc
xlat
loope
decl
adc
inc
inc
inc
cmp
push
sahf
push
cmp
dec
adc
sub
push
xchg
fimuls
lret
cmp
jmp
push
pop
add
das
xor
cwtl
inc
mov
insl
jg
mov
inc
stos
cmpsb
push
sub
inc
push
aas
jns
pop
add
push
inc
push
fs
daa
aad
mov
xor
cmp
add
out
les
scas
cmpsl
adc
in
addr16
xor
and
sub
fs
lods
pop
xchg
mov
sub
jno
scas
fmul
out
fsts
sub
inc
xchg
sub
mov
outsl
aaa
mov
pop
dec
popl
cmp
cli
insl
dec
jne
pop
call
and
sti
xor
pop
fstl
sahf
mov
push
hlt
xchg
xor
aad
sub
incb
cmp
jle
xchg
mov
in
mov
cli
test
insl
call
mov
mov
js
sarl
std
clc
std
cmp
xchg
stos
fwait
adc
xchg
inc
lret
cmp
cmpsl
mov
test
mov
xchg
cmpsb
std
xchg
out
mov
lods
cs
aaa
je
andb
cld
mov
jb
xor
sbb
inc
repnz
pop
mov
outsl
adc
imul
xchg
lea
and
mov
test
mull
pop
std
jnp
js
sub
sub
mov
or
inc
bswap
ja
sbbb
push
pop
push
repz
jbe
push
adc
hlt
dec
xchg
scas
mov
lock
call
dec
adc
nop
scas
inc
push
mov
adc
dec
sarb
lret
call
cs
inc
cwtl
pop
xchg
outsl
mov
jbe
les
clc
lret
hlt
in
leave
fwait
and
dec
mov
mov
fsts
sbb
add
inc
inc
push
dec
dec
cmp
jp
js
ja
jmp
inc
cmpsb
out
pop
fmulp
push
stos
cmpsl
lds
outsl
jecxz
in
push
lahf
fiadds
xchg
je
sahf
xchg
repz
enter
out
jg
dec
push
jne
sbb
inc
fidivrl
pop
lea
sbb
mov
dec
mov
dec
jge
inc
int3
shrb
pop
shrl
add
sbbb
jne
fnstsw
dec
stos
outsl
int3
pop
push
mov
mov
sbb
cmp
in
push
pop
inc
je
dec
push
fbld
testl
dec
fcoms
hlt
mov
in
xchg
mov
nop
rcr
push
jle
xchg
test
sub
std
in
xor
sub
add
int3
test
push
or
lods
push
inc
adc
das
jns
cmpsl
jne
mov
pop
int
lods
add
jl
jge
push
sub
mov
fdivrs
outsl
inc
stos
push
outsb
mov
js
mov
js
pop
sahf
cs
into
add
mov
and
jb
je
xchg
or
dec
gs
shll
adc
push
sarl
mov
mov
ja
pushf
pop
mov
pop
mov
dec
and
adc
mov
addr16
adc
xchg
pop
dec
or
and
jne
sub
xchg
data16
gs
xchg
mov
int3
pop
sahf
pop
dec
fistpll
lock
or
pop
fs
adc
push
shrb
fisubrs
test
sub
js
movsl
or
mov
andl
aas
sub
dec
or
movsb
inc
adc
add
lods
jb
test
mov
or
insl
mov
pop
and
mov
ret
jge
js
cmp
or
jb
nop
or
rorw
pop
add
sub
xor
ret
dec
push
mov
hlt
mull
or
adc
or
jo
or
or
push
jge
imul
adc
or
pop
or
adc
xchg
sbb
ja
subb
mov
bnd
or
adc
popa
jmp
sub
and
loop
or
sub
fs
addr16
push
sub
xlat
gs
and
lret
mov
cmp
pop
lods
outsb
mov
adc
mov
int3
jp
xor
mov
out
lods
repz
inc
pop
xor
xor
imul
je
jo
cmc
dec
hlt
xchg
push
shrb
rclb
xor
shlb
lret
push
inc
popf
ds
push
fwait
mov
aam
cmp
cld
aam
in
imul
gs
fmul
push
mov
iret
xor
movsl
jge
pop
lea
lret
xlat
out
sub
outsl
jo
cmp
ja
stos
inc
ficoms
movsb
sub
outsl
push
inc
mov
popf
pop
mov
or
xor
mov
sbb
mov
inc
stc
lods
je
cwtl
imul
lds
call
dec
adc
sub
mov
jb
push
jl
popa
lcall
mov
pop
mov
into
fs
jbe
pop
aam
xor
data16
sub
test
inc
sahf
addr16
mov
push
data16
in
daa
faddl
aam
movsl
and
jo
or
and
inc
pop
imul
jae
pushf
and
int3
fsubr
or
or
cmp
cwtl
sbb
sub
inc
lret
cmp
cmp
adc
jno
lds
cmc
out
push
movsb
pusha
into
push
or
ja
jo
ret
adc
or
dec
cwtl
jns
or
daa
pop
enter
xchg
cmpsb
jl
jo
pushf
sub
sub
callw
jp
adc
adc
icebp
push
mov
sahf
insl
and
push
or
loope
sbb
or
sar
add
adc
ljmp
in
addr16
leave
das
or
insb
pushf
aas
outsb
test
scas
push
mov
jg
scas
int
mov
cmp
es
jns
pop
test
inc
sub
pop
inc
dec
inc
pop
dec
jmp
or
xor
cltd
sbb
pop
es
es
movsb
lret
jle
mov
pop
and
xchg
adc
pop
jle
data16
jne
or
stc
pushf
shrb
xchg
mov
addr16
fisubs
adc
dec
and
jmp
mov
scas
leave
test
jns
cmp
rorb
ljmp
ja
mov
mov
hlt
mov
dec
jnp
or
cmpsl
and
inc
xor
cmp
ret
cmp
lock
dec
idivb
mov
or
lahf
push
dec
push
fdivrl
fiadds
jmp
add
pop
ja
mov
and
adc
sub
or
xor
rcrb
sub
int3
cld
mov
pop
gs
insb
loopne
stos
pop
and
popf
dec
cmp
int3
mov
stos
push
push
add
push
je
sub
pusha
sub
add
lret
jg
cmpsb
sub
push
rcr
adc
nop
mov
sbb
mov
or
fldl
je
inc
xor
push
imul
gs
push
pop
dec
int3
xor
jne
sub
inc
push
and
pop
dec
js
cltd
mov
pop
outsb
and
push
xlat
cwtl
repnz
ret
cmp
fs
sbb
js
and
jb
xor
pop
je
sub
jo
xor
jns
pop
movsb
and
push
iret
jo
push
gs
xor
popa
lret
leave
je
or
adc
enter
adcl
test
sub
and
aam
mov
xor
mov
sbb
ret
lcall
lret
jo
dec
jne
sbb
cmp
psllq
xor
sub
add
jae
iret
adc
popf
js
mov
pop
pop
in
cs
sub
int
movb
sbb
cmc
loopne
jne
ljmp
pop
pop
repnz
or
stc
mov
sti
popf
ljmp
lret
sbb
mov
shl
and
jne
inc
dec
inc
push
jp
dec
pushl
mov
push
or
push
or
outsb
ds
in
shl
add
repz
js
popf
sub
or
faddl
or
outsb
inc
sarl
or
add
xor
sbb
ret
cmc
push
aad
in
icebp
pop
ret
sarb
scas
xor
fcompl
mov
xor
jo
xchg
pop
lcall
in
mov
rorb
dec
dec
xchg
test
inc
aad
inc
pop
js
mov
or
pop
xor
sub
nop
pop
dec
aad
or
and
or
or
inc
jne
dec
les
xor
cmp
dec
sbb
or
mov
ret
and
and
mov
andb
push
xchg
cmp
xor
sub
sbb
call
xchg
les
mov
nop
adc
pop
and
xor
adc
hlt
shll
and
adc
and
dec
inc
in
dec
sub
cld
rolb
aam
clc
xchg
mov
test
cwtl
mov
pusha
dec
pop
xchg
dec
and
xor
mov
adc
adc
clc
mov
inc
aam
mov
mov
dec
jo
and
dec
inc
mov
adc
or
add
hlt
mov
and
inc
les
xor
mov
or
pop
mov
inc
and
dec
sub
add
inc
mov
int3
and
dec
mov
movsb
and
adc
pop
dec
dec
xchg
cmp
sub
mov
mov
and
pop
loop
lods
mov
and
dec
insb
xchg
pusha
and
xor
and
adc
or
or
xchg
loopne
aam
enter
adc
jo
fs
pop
dec
mov
xor
and
sbb
adc
in
mov
or
xchg
mov
test
pushf
nop
mov
pusha
xchg
push
and
sub
cld
mov
and
dec
les
pushf
mov
push
and
sub
and
adc
or
or
xchg
in
rolb
mov
pusha
xchg
inc
and
sbb
mov
mov
jno
loopne
aam
les
xchg
test
cwtl
inc
test
insb
adc
push
jb
and
dec
sub
and
adc
inc
mov
mov
adc
cmp
cwtl
xchg
mov
js
push
inc
and
dec
sub
and
adc
or
inc
mov
mov
adc
and
dec
mov
inc
xchg
mov
pusha
dec
push
xchg
inc
and
sub
mov
adc
mov
lock
dec
aam
les
mov
jl
insb
and
dec
inc
xchg
cmp
sub
and
or
cld
mov
mov
in
aam
les
pushf
nop
mov
dec
dec
xchg
inc
and
sub
adc
in
mov
fsubl
dec
lods
xchg
pushf
and
adc
dec
cmp
sub
and
mov
mov
inc
call
les
dec
movsb
xchg
cwtl
and
adc
adc
and
dec
adc
cltd
and
fadds
mov
dec
js
push
cmp
adc
add
clc
scas
adc
and
inc
aam
mov
mov
pop
dec
mov
xor
dec
adc
or
cld
scas
xchg
and
fadds
mov
dec
js
insb
and
push
inc
mov
adc
and
xchg
add
clc
lods
xchg
and
loopne
aam
mov
dec
nop
xchg
test
js
push
cmp
sub
sbb
adc
hlt
lods
sub
dec
enter
mov
movsb
cwtl
mov
insb
xchg
pusha
and
xor
cld
stos
mov
xchg
enter
mov
xchg
and
dec
adcb
dec
mov
xor
sub
xchg
adc
clc
stos
sub
dec
les
pushf
mov
push
dec
inc
xchg
xor
sub
mov
xchg
fsubl
rolb
mov
xchg
xchg
mov
jl
jo
mov
dec
and
dec
xor
add
outsb
test
xchg
js
and
rolb
cmp
je
push
inc
mov
sub
dec
adc
aam
les
mov
xchg
xchg
and
pop
adc
dec
xor
or
inc
cmpsb
call
and
dec
mov
movsb
and
push
dec
cmp
xor
and
mov
movsl
sub
dec
rclb
test
push
dec
inc
xchg
xor
sub
mov
adc
movsb
add
and
dec
aam
mov
mov
pusha
dec
push
xchg
dec
and
sub
mov
push
int3
adc
pushf
inc
in
adc
sub
or
mov
dec
rclb
movsb
imul
outsb
push
mov
push
or
enter
sub
shll
or
jns
or
or
in
push
arpl
mov
leave
out
adc
inc
sub
aam
ds
inc
pop
test
adc
dec
ljmp
adc
push
push
push
dec
sbb
dec
sbb
xor
pop
dec
dec
testl
push
fdivrl
xor
fisttps
lcall
gs
js
fs
pop
and
push
dec
or
xor
das
mov
ret
clc
dec
std
fildl
jl
push
inc
dec
lahf
jg
mov
sbb
push
or
rorl
ret
push
inc
inc
inc
and
push
push
inc
mov
jne
sub
sbb
sub
sbb
enter
repz
adc
jl
push
dec
repnz
and
sbb
push
and
nop
mov
ror
adc
dec
adc
push
inc
push
push
xor
out
fwait
dec
adc
dec
inc
mov
negb
adc
movsl
sbb
cmp
push
dec
sbb
push
sahf
in
orl
inc
push
inc
xchg
mov
dec
sbb
jecxz
dec
dec
mov
in
and
jl
or
dec
addr16
cmpsl
inc
mov
xchg
pop
push
dec
xor
inc
pushf
push
cld
or
push
inc
dec
push
sbb
or
cmp
and
cmp
dec
jle
lods
sbb
xchg
inc
and
adc
push
bswap
adc
xchg
xor
dec
inc
lea
sbb
xor
dec
dec
adc
mov
inc
sbb
repnz
lds
sti
xor
inc
cwtl
jmp
pop
mov
xor
push
xor
adc
pop
lcall
push
cwtl
sbb
lods
pop
enter
dec
pushf
sbb
jns
js
pop
gs
xor
mov
inc
dec
xor
sub
cmp
cltd
negb
xor
sub
dec
or
jl
inc
sub
inc
xchg
push
mov
pop
nop
mov
xor
lcall
fs
mov
or
xor
or
jno
or
dec
stc
xor
movsb
sahf
pop
push
rorl
aad
sbb
mov
push
pop
xchg
lret
movsb
push
aad
leave
adc
pop
xor
inc
adc
sbb
lea
dec
inc
jae
insl
inc
pop
lret
rcrl
pop
mov
push
loop
cmp
adc
xchg
pusha
sbb
dec
push
xor
cmp
dec
dec
cmpsb
inc
dec
bound
xor
cmp
test
sub
adc
ret
scas
ficomps
inc
push
dec
dec
sub
or
sbb
ficomps
or
xchg
dec
dec
shl
adc
mov
fnstsw
sbb
sbb
cmp
fs
les
aad
xchg
sahf
das
or
pop
fnstenv
sbb
mov
bound
popf
dec
mov
push
inc
mov
xchg
addb
xchg
and
push
mov
adc
sbb
xchg
aad
ja
dec
and
dec
mov
mov
icebp
in
pop
sbb
xor
jmp
mov
push
imul
pop
push
mov
jb
fisttps
push
pop
lahf
imul
adc
movsl
push
inc
push
adc
inc
fcmovne
sbb
inc
ficompl
jecxz
int
or
fwait
and
loop
xchg
adc
shrl
or
dec
mov
cmp
jne
pop
sub
mov
mov
dec
fnsave
movsl
push
andl
in
sub
inc
mov
fimull
or
movsb
fcomi
cmc
inc
cmp
sbb
push
inc
dec
div
or
mov
push
shr
xchg
mov
insb
sbb
lods
inc
push
in
test
and
std
into
mov
in
aad
or
imul
loope
xor
and
or
into
pop
dec
jns
dec
xchg
aad
or
lods
outsl
xor
movsl
adc
inc
lahf
push
sub
ret
push
push
stos
inc
inc
xor
xor
repnz
insl
sbb
or
imul
push
mov
adc
mov
push
popa
cmpsb
inc
or
out
orb
mov
push
cmp
cltd
lods
insl
sbb
imul
mov
mov
cmc
rcrb
dec
int3
fcoms
push
cmp
inc
sbb
push
aaa
mov
sbb
daa
push
pop
sbb
mov
dec
sub
nop
push
mov
stc
xor
xorl
xor
mov
dec
adc
mov
inc
jmp
aaa
inc
adc
and
xor
rclb
aam
push
dec
shlb
outsl
push
add
dec
push
inc
aam
call
push
or
sub
xor
loop
shrl
and
pusha
ljmp
xor
adcb
mov
mov
sub
in
sbb
sbb
mov
and
js
out
inc
addr16
std
push
push
mov
int
adc
push
popf
push
or
mov
xchg
jns
dec
jbe
sbb
sub
jbe
sbb
xor
xchg
xor
pop
lods
ss
nop
lds
jbe
and
imul
adc
aaa
movd
or
aas
dec
inc
xorb
pop
aaa
ss
sub
xor
push
addr16
cmp
jmp
cmpsl
sbb
pop
test
sub
dec
sub
cld
cmp
dec
in
inc
in
repz
imul
adc
jl
jns
imul
gs
jo
pop
ljmp
dec
cwtl
lcall
dec
push
push
lcall
sahf
js
and
jg
sub
idivl
pop
jbe
sbb
jb
ficompl
ret
in
pop
jns
mov
xor
test
stos
stc
ljmp
sbb
js
jbe
cli
mov
std
jl
mulb
pushf
add
xchg
dec
xchg
push
pop
xlat
mov
dec
sbb
cltd
or
dec
push
aam
sahf
incl
shlb
push
push
out
pop
fimull
xor
insl
and
iret
stos
pop
push
scas
xor
xchg
inc
push
clc
xor
fnstcw
aaa
dec
and
xchg
pop
mov
in
mov
inc
jg
movsl
or
adc
aam
cli
or
push
dec
in
and
movsb
add
pop
dec
push
inc
jl
loope
xor
push
push
sub
in
and
jb
rorl
mov
sbb
adc
inc
inc
lahf
and
imul
clc
testb
inc
cmp
cmpsl
lret
sub
and
pop
push
inc
xor
sub
cmpsb
sbb
push
aam
pop
pop
push
inc
push
cmc
xor
jo
sbb
repz
or
rorl
jo
adc
adc
ficoml
shr
mov
push
push
aaa
cmp
mov
or
dec
inc
xor
iret
dec
push
cmp
lock
xor
dec
lret
enter
lcall
sbb
roll
pushf
insl
and
and
adc
and
push
or
fsubr
popa
dec
sbb
push
cmp
dec
adc
and
fs
dec
sub
sbb
inc
adc
sub
sbb
ja
enter
or
ja
les
mov
movsb
mov
cwtl
sbb
nop
jle
jno
push
stc
js
cmpsb
sbb
clc
movsb
test
test
mov
mov
xchg
mov
test
inc
xchg
jo
popf
fists
sbb
dec
dec
jl
mov
mov
dec
scas
sub
inc
push
xor
xor
add
sub
push
dec
sbb
dec
pop
jne
adc
push
test
pusha
out
xchg
jns
scas
and
cmp
sbb
pop
dec
dec
mov
push
pushf
or
in
push
pusha
rclb
or
dec
es
push
or
repnz
lcall
shlb
adc
push
lcall
push
dec
adc
cmc
dec
std
push
dec
dec
lods
sbb
and
xchg
sbb
mov
cmp
fnstcw
dec
sbb
inc
mov
dec
mov
popf
xchg
push
sbb
lods
and
mov
pop
xchg
dec
sbb
insl
xor
movb
dec
sbb
aas
fstps
int3
and
movsl
jne
je
push
xor
xor
fcoms
call
mov
xchg
sbb
xor
mov
jl
jno
lcall
das
adc
or
xchg
push
xor
into
mov
sub
mov
dec
js
inc
or
adc
and
lahf
push
inc
mov
hlt
sub
test
sbb
jb
shl
daa
cltd
rorb
inc
andl
add
push
lret
sbb
xlat
cmp
lods
dec
push
sbb
pusha
dec
dec
push
enter
push
adc
sbb
lock
je
jae
inc
out
inc
push
mov
mov
std
push
sub
cmp
dec
mov
push
sub
adc
sub
inc
dec
les
cltd
flds
or
rclb
lret
xchg
dec
pushf
sub
cmp
pop
dec
xlat
repnz
xchg
movsb
lret
sbb
clc
push
jp
scas
or
push
sub
loop
lahf
cmp
or
fisubs
dec
adc
inc
push
jbe
push
push
sbb
ja
lret
pop
mov
xchg
das
xchg
outsb
jl
jb
jle
sbb
xchg
push
sbb
and
inc
push
dec
adc
rcrl
cmp
inc
cmp
add
dec
sub
bound
cmp
inc
dec
xchg
sbb
push
fdivs
xor
push
inc
pop
mov
inc
adc
test
jb
sbb
pop
or
pushf
pop
outsl
xor
and
dec
pop
fcmovnb
gs
push
lcall
jecxz
roll
jecxz
rcll
dec
mov
mov
jno
dec
or
adc
sbb
popa
add
inc
test
and
mov
and
dec
sbb
fldl
push
nopl
sub
cmp
fldcw
push
push
sub
stos
aas
aad
int
cmp
jle
and
mov
ret
insl
je
lret
mov
adc
dec
dec
push
repnz
incb
insb
std
popa
sbb
movsb
xor
inc
jnp
ds
mov
pop
mov
movsl
in
push
icebp
push
jae
dec
or
jo
nop
fsubr
dec
adc
imul
pop
inc
mov
xor
dec
inc
lcall
pop
test
gs
out
cmp
jno
push
pop
or
push
push
sub
mov
and
loope
sbb
mov
and
inc
dec
dec
push
int3
adc
jmp
inc
insb
popa
ja
push
in
stos
inc
call
and
xor
push
sub
repnz
sbb
bound
sub
adc
test
insb
repnz
icebp
pop
bound
mov
pop
xor
and
mov
and
lret
sbb
mov
mov
push
movsb
inc
orb
adc
sbb
xor
je
cmp
inc
sub
and
mov
adc
sbb
mov
inc
fsubrl
pop
sub
in
mov
std
cld
pop
mov
cli
push
stos
in
adc
arpl
push
dec
dec
sub
push
xor
push
loope
dec
jbe
xchg
lock
adc
mov
lods
test
adc
push
cwtl
push
adc
dec
push
lea
or
lods
push
inc
pop
gs
test
mul
push
inc
push
je
push
inc
mov
jno
mov
test
sub
inc
pop
pop
jne
inc
mov
sub
cmp
inc
inc
mov
mov
sub
aaa
or
je
into
cwtl
inc
adc
cmp
in
lcall
aas
imul
inc
hlt
dec
inc
or
inc
xor
lods
movsl
and
mov
push
xchg
inc
stc
and
jg
mov
or
mov
push
sub
dec
inc
cmp
fcoms
and
es
or
pop
repz
and
or
sbb
or
insl
sbb
sub
inc
movsl
inc
mov
gs
mov
push
rcl
cltd
inc
dec
dec
test
xor
adc
in
mov
inc
dec
sub
mov
int
sub
inc
xor
push
sahf
fdivr
sub
mov
cwtl
mov
jae
and
xchg
cwtl
out
sti
mov
jl
mov
pop
push
fimuls
int3
and
pop
dec
jne
cmpsl
dec
lds
jo
and
icebp
dec
pop
push
repz
push
pop
mov
dec
cmp
mov
fstpt
or
fnstsw
lods
push
daa
popf
rcll
dec
cmp
jns
enter
repz
mov
add
xchg
adc
fistps
loope
cmpsl
fisttpll
arpl
or
in
add
lcall
imul
add
cmp
fs
hlt
lock
cmp
and
loope
cmpsb
or
or
fildl
imulb
pop
pop
pop
jbe
adc
jmp
adc
cs
dec
mov
jmp
push
adc
ret
aam
mov
or
mov
enter
dec
or
sbb
notb
std
adc
subl
and
das
std
push
mov
mov
ja
arpl
inc
lods
push
xchg
pop
mov
pop
mov
ljmp
data16
inc
aas
je
icebp
add
jae
mov
fs
pop
in
outsl
mov
aad
jecxz
pop
mov
outsb
mov
xlat
test
pop
lods
shrb
outsb
test
rcll
fiadds
mov
dec
jmp
outsl
int
lock
mov
mov
fnsave
dec
sub
test
test
jmp
xor
dec
addr16
sti
stos
fs
aad
and
outsl
or
jne
ja
lea
ljmp
jb
adc
jb
dec
nop
nop
mov
dec
aam
scas
pop
test
xchg
or
pushf
sbb
jmp
in
sbb
stc
incl
pop
xor
leave
mov
jae
push
adc
loop
sbb
mov
sub
shlb
xor
mov
or
or
xor
jl
or
rolb
or
ds
js
inc
and
inc
pop
sbb
call
daa
or
cmpl
add
xor
push
shlb
ret
push
test
je
mov
adc
repnz
cli
push
call
ljmp
scas
pop
outsl
sbb
or
pop
xor
add
dec
sbb
inc
pop
cvtpi2ps
pop
pop
push
sub
mov
lea
inc
xlat
rep
mov
stos
sbb
push
push
dec
push
dec
add
add
test
arpl
addr16
inc
das
fisttpl
dec
push
lods
test
mov
gs
dec
cmc
pop
out
jl
aas
test
jne
enter
mov
jno
sbb
sbb
xchg
inc
adc
and
lahf
inc
pushf
or
sub
inc
insl
and
outsl
shrb
flds
xchg
add
std
push
inc
sub
sarl
rolb
movsb
mov
or
inc
add
fdivs
sbb
sbb
rolb
mov
adc
and
dec
mov
inc
push
test
or
dec
cwtl
mov
add
and
adc
dec
je
or
insb
inc
adc
pop
and
dec
push
xchg
adc
dec
inc
sbb
adc
pop
dec
xor
and
xor
mov
sub
add
jg
xor
lcall
out
cmpsb
adc
adc
inc
mov
insb
sub
addb
inc
add
dec
sub
jo
les
and
and
inc
insb
add
or
leave
and
push
fisttps
adc
loopne
or
jle
cwtl
test
shll
cmp
sub
and
movsb
call
adc
push
mov
or
pop
xchg
shlb
push
xor
rcr
fisubs
loopne
xor
jle
mov
mov
movsl
notb
add
sbb
add
xchg
or
pop
inc
or
mov
sub
sbb
or
push
lcall
adc
cltd
add
jnp
inc
add
xor
inc
mov
xor
push
sbb
gs
xor
sbb
and
dec
sbb
jb
lret
xorb
cltd
or
push
test
xchg
inc
sub
nop
sub
mov
xlat
cmp
pop
xchg
or
add
test
xchg
repnz
jb
push
inc
xchg
mov
in
cmp
xchg
cwtl
xchg
or
mov
movsb
and
inc
xchg
lods
hlt
cmp
int
adc
sub
data16
pop
adc
clc
cmp
cmp
pop
clc
cwtl
pop
arpl
ret
and
js
lock
mov
shlb
inc
pop
xchg
or
fwait
shlb
jne
sub
add
dec
add
add
js
push
and
add
push
xchg
adc
andb
lret
add
sbb
jg
xorb
lock
or
push
push
push
test
mov
inc
std
or
jl
adc
test
lret
add
adc
or
xchg
cmp
or
movsb
xchg
enter
aam
repz
adc
xor
or
insl
inc
xor
cmp
insb
ja
mov
mov
cltd
or
push
das
xchg
or
insb
mov
inc
mov
add
or
adc
cmpxchg
adc
push
adc
and
leave
sbb
mov
mov
ret
clc
and
lock
mov
sub
imul
in
mov
dec
sbb
addl
add
add
loopne
mov
adcl
out
cmp
cmpsb
iret
or
jp
outsl
movb
mov
or
mov
mov
cmp
divl
jl
loopne
mov
add
popf
sti
jmp
stos
push
inc
add
repnz
add
pop
stos
cmp
scas
xchg
shr
aam
jne
add
dec
jp
iret
inc
gs
add
xchg
push
cmpsb
scas
mov
inc
or
addl
in
xchg
cmp
cmp
out
mov
out
mov
andb
add
std
mov
fadds
and
stos
xchg
add
repz
mov
subb
leave
fwait
xchg
and
les
int3
inc
add
add
aas
jno
or
mov
clc
pop
add
dec
lea
cmc
add
shrl
pop
mov
icebp
adc
and
lds
mov
insb
add
jmp
xor
in
xchg
mov
jno
add
popa
test
ja
stos
in
das
add
dec
les
leave
cmp
add
jne
int
clc
lcall
xchg
cmp
push
mov
iret
clc
and
and
loop
loopne
xor
jp
rclb
add
jle
push
jl
mov
out
das
lea
mov
sti
inc
dec
loope
jmp
pop
jg
sub
jge
mov
jl
rcr
push
arpl
push
int3
and
call
cli
cmp
jp
and
lods
cmp
mov
cmp
addb
add
xlat
cmp
mov
pop
or
mov
jecxz
cmpsb
jl
add
test
pop
mov
jne
aaa
fldt
cmp
jno
sarb
add
out
dec
nop
pop
cmp
push
fisubl
xor
loop
mov
cmpsl
push
lahf
inc
add
adc
ss
push
scas
into
imul
pop
add
rcr
jge
call
out
pop
push
xchg
add
push
andl
dec
dec
push
gs
std
add
adc
pop
ficomps
add
cmpsb
fmuls
gs
cwtl
add
aas
inc
push
gs
out
stc
and
inc
lock
sbb
scas
enter
rolb
jmp
inc
cmp
ljmp
xor
inc
lea
mov
cmp
rclb
add
rolb
add
add
add
add
add
and
add
xor
add
nop
add
add
adc
in
or
add
pop
add
inc
je
iret
xchg
dec
pop
cmp
jmp
xor
mov
mov
cs
int3
cltd
mov
shrl
jl
cmp
push
jle
xor
hlt
mov
xlat
mov
and
sahf
idivl
xchg
mov
shlb
iret
fdivr
cld
pop
lcall
push
push
push
add
jmp
add
jmp
pop
pop
pop
pop
pop
pop
pusha
call
mov
add
call
jmp
push
add
call
lea
lea
xor
call
call
jmp
push
add
jmp
pushl
pushl
call
add
add
cmpl
jne
lea
cmpl
jne
xor
pusha
jmp
mov
mov
mov
call
lea
push
or
jne
push
jmp
push
push
push
call
add
cmpl
jne
inc
or
je
add
mov
popa
mov
jmp
add
mov
mov
add
call
add
push
push
push
push
push
call
mov
pop
pushl
push
call
add
call
call
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
call
add
mov
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
test
je
xor
push
mov
mov
movl
jmp
pushl
pushl
call
test
je
call
movl
mov
add
mov
jmp
inc
cmpb
jne
inc
call
mov
cmpw
je
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
call
add
mov
cmpb
jne
push
push
pushl
call
jmp
add
add
add
ljmp
adc
add
je
sub
add
push
mov
mov
pop
ret
push
mov
cmpl
je
sub
add
pop
ret
push
push
cmpl
je
mov
mov
sub
add
pop
pop
ret
push
cmpl
je
mov
sub
add
pop
ret
pusha
cmpl
je
mov
mov
jmp
sub
add
sub
add
add
cmpl
jne
popa
ret
pusha
mov
or
je
mov
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
inc
jae
add
adc
imul
gs
xor
cs
insb
add
adc
ja
adc
xchg
add
jae
add
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
add
or
add
push
push
mov
jmp
inc
cmpb
jne
jmp
dec
cmpb
je
cmp
jne
cmpb
jne
pop
inc
jmp
pop
pop
ret
cmpl
jne
mov
jmp
mov
jmp
xor
push
push
push
push
call
mov
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
or
jne
push
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
push
lea
push
pushl
push
call
push
push
pushl
call
popa
ret
pusha
cmpl
jne
pushl
pushl
call
mov
call
movl
call
lea
mov
mov
lea
push
pushl
mov
mov
xor
xchg
popl
add
popa
ret
push
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
leave
ret
pusha
lea
push
call
mov
lea
push
call
mov
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
lea
push
push
push
call
or
jne
lea
push
push
push
call
jmp
cmpl
jne
pushl
pushl
call
push
lea
push
lea
push
push
call
popa
popa
pop
ret
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
push
push
push
push
call
mov
push
push
push
call
push
push
push
push
push
push
pushl
call
cmp
je
mov
call
push
pushl
call
mov
push
push
push
push
call
mov
push
lea
push
push
push
pushl
call
cmp
jne
mov
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
cmp
je
cmpl
jne
pushl
pushl
call
push
lea
push
lea
push
push
call
push
call
push
push
pushl
call
cmpl
je
cmpl
je
pushl
call
jmp
call
popa
ret
push
push
pushl
call
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
call
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
lea
push
lea
push
push
call
cmp
jne
push
pushl
call
push
call
popa
mov
leave
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
pushl
pushl
call
push
pushl
call
popa
mov
leave
ret
pusha
call
mov
pushl
pushl
call
mov
lea
push
push
push
lea
push
push
push
call
popa
ret
pusha
mov
lea
mov
mov
jmp
call
lea
push
push
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
mov
pusha
push
lea
pushl
pushl
call
push
pushl
push
call
lea
mov
add
jmp
dec
cmpb
jne
inc
pop
jmp
movzbl
mov
inc
inc
cmpb
jne
movb
popa
lea
pushl
push
lea
push
pushl
call
add
pushl
push
call
or
je
push
lea
push
lea
push
push
call
push
call
jmp
push
call
or
jne
push
lea
push
lea
push
push
call
push
call
incl
cmp
jbe
movl
pushl
call
popa
ret
pusha
lea
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
pushl
pushl
lea
push
pushl
call
add
pushl
pushl
call
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
mov
jmp
push
call
or
jne
push
call
or
jne
call
jmp
inc
cmpb
jne
inc
cmpb
jne
popa
ret
pusha
cmpl
je
cmpl
jne
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
jmp
jmp
movl
mov
add
jmp
pusha
mov
xor
jmp
inc
inc
cmpb
jne
repz
jne
movl
popa
jmp
inc
cmpb
jne
inc
cmpb
jne
cmpl
jne
jmp
mov
mov
inc
inc
cmpb
jne
mov
incl
popa
ret
pusha
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
popa
ret
pusha
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
call
popa
ret
pusha
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
mov
xor
cltd
jmp
mov
rol
xor
inc
cmpb
jne
cmp
jne
mov
cltd
jmp
mov
rol
xor
inc
cmpb
jne
mov
mov
cmp
jbe
cmp
jbe
cmp
jbe
jmp
xor
xor
rol
inc
dec
cmp
ja
jmp
push
lea
push
lea
push
push
call
popa
popa
pop
ret
call
popa
ret
pusha
cmpl
jne
call
mov
pushl
push
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
lea
push
call
pushl
push
call
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
popa
ret
pusha
mov
mov
or
jne
movl
cmp
jne
cmp
jbe
movl
popa
ret
pusha
cmpl
jne
pusha
push
push
mov
imul
add
push
push
call
mov
popa
mov
cmp
jne
mov
rdtsc
mov
cmpw
jne
movl
add
add
movb
inc
movb
movb
xor
xor
rol
add
mov
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
add
mov
popa
push
xor
cmpw
jne
mov
mov
sub
sub
pop
ret
jmp
popa
ret
pusha
call
call
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
movl
lea
push
call
cmpl
je
cmpl
je
call
or
je
mov
cmpl
jne
cmpl
je
lea
push
push
call
mov
cmpl
jne
movl
cmpl
je
cmpl
jne
mov
add
mov
cmp
jne
movl
mov
mov
mov
cmpl
je
movl
mov
lea
push
push
push
push
push
push
push
call
cmp
je
movl
inc
cmpb
jne
inc
dec
jne
popa
ret
pusha
cmpl
je
cmpl
jne
cmpl
jne
pushl
pushl
call
mov
push
lea
push
lea
push
push
call
popa
pop
popa
ret
popa
ret
pusha
push
call
push
lea
push
push
push
push
call
pop
lea
mov
add
sub
jmp
movb
dec
cmp
ja
popa
ret
pusha
mov
test
js
mov
mov
addl
jmp
push
call
test
jns
cmpl
jne
mov
addl
popa
ret
pusha
lea
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
lea
mov
jmp
xor
rol
inc
dec
cmp
ja
popa
ret
pusha
lea
push
call
mov
popa
ret
pusha
lea
push
call
mov
popa
ret
pusha
mov
mov
add
mov
add
mov
add
xor
lea
mov
add
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
xor
jmp
mov
add
movzwl
mov
add
mov
add
mov
popa
ret
add
add
add
inc
add
xchg
inc
ja
icebp
clc
or
jg
icebp
lret
imull
sbb
nop
xchg
or
xchg
js
or
push
scas
xlat
lock
jne
gs
xor
fs
insb
add
jb
jb
add
insb
and
popa
gs
and
data16
and
and
jb
jae
add
jne
and
je
insb
outsl
popa
and
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jae
gs
outsl
jb
and
jae
fs
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jb
imul
jo
jb
cmp
imul
and
outsb
popa
insl
imul
and
jb
jb
and
inc
jo
insb
imul
and
and
jb
popa
fs
jb
outsb
outsb
imul
outsw
cmp
push
popa
jb
imul
jae
ja
jb
and
jne
push
outsb
je
jb
and
and
je
jbe
imul
jns
jne
ja
outsb
je
je
and
outsb
arpl
and
and
insb
and
outsb
insb
outsl
popa
fs
or
outsb
imul
jo
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
add
jne
and
je
outsl
ja
insb
outsl
popa
and
jae
gs
jb
and
fs
insb
and
insb
sub
and
arpl
jae
cmp
sub
pop
outsl
jne
popa
jb
and
je
arpl
outsb
arpl
and
imul
je
or
sub
inc
imul
outsb
outsl
je
bound
outsw
jne
and
and
insl
outsl
je
and
jb
gs
or
sub
pop
outsl
jne
and
jb
ja
insb
insb
and
jae
bound
imul
popa
arpl
jae
and
imul
je
or
arpl
popa
jo
insb
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
and
outsl
addr16
insl
and
insb
insb
and
ja
arpl
and
inc
outsl
ja
insb
outsl
popa
fs
fs
insb
and
insb
and
and
jb
jne
je
popa
outsb
and
outsb
and
je
bound
insb
outsl
popa
fs
popa
jae
and
jae
popa
jb
and
jae
popa
jo
imul
and
and
and
insb
and
outsb
and
and
outsb
insb
outsl
popa
fs
popa
imul
add
add
push
xchg
jb
cmp
push
dec
pushf
adc
clc
or
add
add
pop
push
dec
inc
inc
add
pop
push
dec
push
push
dec
inc
add
pop
dec
push
dec
inc
inc
add
pop
push
inc
inc
push
pop
push
add
pop
push
inc
inc
push
pop
inc
add
pop
inc
dec
dec
inc
push
pop
inc
add
pop
inc
dec
dec
inc
dec
add
pop
push
push
push
add
pop
dec
inc
inc
inc
pop
push
add
jne
addr16
fs
arpl
and
sub
popa
jae
and
outsl
jae
and
and
outsb
and
and
jae
popa
jb
and
outsl
ja
and
and
gs
cmp
push
insb
gs
jae
and
je
and
je
push
and
and
outsb
dec
arpl
push
outsl
data16
arpl
or
jb
imul
je
insb
insb
gs
popa
outsb
jae
je
popa
je
jns
jne
popa
jb
and
outsb
outsb
imul
bound
addr16
add
add
add
insb
insl
outsl
outsb
cs
insb
add
movsl
out
test
aam
or
sub
adc
pushf
inc
cld
call
mov
and
lock
add
add
inc
add
add
xor
push
bound
je
cmp
and
ja
insb
outsl
popa
imul
add
insl
jo
gs
cmp
and
jb
outsb
je
inc
imul
and
inc
add
inc
add
jne
add
add
add
add
aas
jne
add
inc
add
add
ret
ret
pusha
mov
mov
mov
cmp
jbe
cmp
jbe
mov
cltd
mov
imul
div
jmp
xor
lea
call
popa
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
inc
add
ja
outsb
add
add
add
add
add
add
add
outsb
add
add
mov
add
add
add
add
add
jae
or
add
incl
add
outsb
add
add
add
outsb
add
and
outsb
add
jae
jae
add
popa
add
jns
and
add
add
add
imul
jae
add
add
mov
pop
add
push
add
add
add
add
add
add
incl
add
outsb
add
add
add
add
jb
outsl
add
jb
add
jae
and
add
add
mov
add
add
add
add
add
add
add
add
add
incl
add
push
add
je
add
add
add
add
push
add
add
or
and
into
add
add
incl
add
outsb
add
add
add
outsb
add
cmp
add
add
mov
add
add
add
add
add
add
or
add
add
outsl
add
jo
insb
add
je
add
add
add
add
push
add
add
daa
add
add
or
push
add
incl
add
add
add
add
add
add
push
add
add
popf
add
add
push
add
add
incl
add
arpl
add
add
add
add
lret
add
add
add
add
mov
and
add
add
push
add
jae
jae
ja
outsl
add
add
add
add
add
add
outsb
add
add
mov
pop
add
push
add
add
add
add
mov
push
add
add
incl
add
add
and
jo
popa
add
jae
ja
outsl
add
add
add
add
push
add
add
push
add
add
or
add
incl
add
jae
ja
outsl
add
add
add
add
add
add
push
add
add
sub
or
add
add
incl
add
push
add
add
test
or
sub
push
add
add
incl
add
add
imul
add
add
add
mov
add
adc
lret
add
xor
cli
fists
add
add
add
add
adc
add
add
out
sbb
add
xor
add
add
cmp
sldt
push
inc
add
add
add
add
add
nop
push
add
add
add
incl
add
add
pop
xchg
fisttps
gs
sub
lahf
jne
dec
aaa
and
or
fidivs
ret
rolb
push
jge
cmc
pop
pop
loope
adc
stc
jp
add
je
scas
xchg
jne
xchg
pop
les
sub
jle
xor
sti
fdivrl
loop
nop
fidivrl
bound
sti
pushf
insl
jmp
push
dec
push
xchg
push
ss
leave
jne
push
fadd
adc
lds
mov
jnp
or
adc
cmp
xor
adc
aad
data16
ja
pop
sbb
inc
jo
inc
icebp
stc
mov
jl
mov
lds
mov
mov
push
hlt
out
pop
mov
fcmovne
scas
add
fs
jp
dec
inc
mov
popa
mov
in
push
rcr
or
xor
popf
sub
test
icebp
inc
into
and
ja
out
sbb
minps
or
roll
ret
add
pop
popf
popl
and
cmp
cmp
ds
sub
inc
and
repz
sub
pop
add
xchg
mov
xor
pop
push
bnd
mov
sbb
jne
or
jg
imulb
cmp
mov
xchg
pushf
shrb
push
testl
sbb
test
mov
cltd
xchg
hlt
adc
mov
push
jbe
xchg
dec
jp
xchg
cmc
roll
movsb
push
cs
jne
test
push
mov
inc
cli
or
jnp
outsl
faddp
ret
xchg
loope
les
pop
lea
inc
bound
std
clc
insl
movsl
xchg
adc
cmp
daa
dec
pop
clc
push
xor
es
xchg
je
jns
lods
push
shll
stos
bound
sub
andl
sahf
loop
xor
scas
sbb
scas
mov
push
push
pop
push
popf
mov
inc
jae
mulb
stos
jl
sub
mov
sbb
fcmovnbe
mov
mov
cmp
xchg
cmpsb
xchg
jne
fimuls
shrl
stos
aaa
inc
lock
and
mov
jl
fdivl
mov
in
movsb
aam
and
adc
ret
mov
std
scas
sbb
dec
cmp
push
lods
jle
jecxz
ljmp
loopne
pop
lock
out
sti
pop
cmp
push
les
sar
aaa
mov
jo
mov
cld
and
out
int3
int
iret
loop
test
popf
jecxz
inc
lret
lock
in
aam
dec
dec
test
inc
std
push
subb
add
in
test
inc
mov
stos
mov
lret
mov
enter
push
cltd
and
mov
ret
sub
shlb
test
add
cltd
movsb
in
jp
scas
pushf
icebp
jp
insl
sbb
test
lds
cltd
fs
cmpsl
loope
inc
in
cmc
js
pop
aad
adc
add
je
in
fldl
ljmp
cmp
in
imul
jne
cld
pop
push
mov
cld
sbb
add
dec
xchg
in
dec
rcr
jns
inc
test
inc
lret
mov
mov
mov
insb
mov
jnp
add
ljmp
lock
push
mov
lods
xchg
lret
pop
int3
pushf
mov
jns
xor
hlt
les
xor
fcomi
lret
lahf
sbbb
cltd
iret
lahf
dec
adc
mov
adc
pop
dec
dec
imul
int
fxch
jle
.byte
