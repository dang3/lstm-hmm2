inc
jae
jns
addr16
jo
pop
push
sub
pop
outsl
cli
inc
pushf
jns
enter
xchg
in
std
dec
xor
adc
push
sub
dec
jae
aad
sbb
add
clc
pop
mov
mov
lds
fsubr
inc
shll
jge
movsl
pop
mov
push
insb
jne
pop
in
inc
subl
loope
lods
mov
push
inc
insb
out
or
xchg
lret
pop
mov
mov
mov
pop
cld
xor
mov
mov
push
lods
aam
cmpsb
adc
xchg
pop
cmp
addr16
fidivs
jno
movsl
jbe
sub
fisttps
call
push
mov
lock
mov
jae
cs
cltd
add
cwtl
inc
mov
pop
movsl
push
xor
rcrb
repz
mov
cltd
pop
sub
stos
out
inc
std
mov
xchg
sar
test
cmp
mov
int
sbb
inc
push
stos
push
rcrb
mov
dec
aam
movd
sti
dec
addw
jle
insb
enter
push
leave
pop
push
mov
push
cmp
jge
inc
add
sbb
test
orl
push
inc
cmp
pop
in
sti
jg
add
arpl
sbb
lahf
mov
cs
data16
jmp
dec
and
mov
out
call
repz
shll
push
lock
inc
add
mov
ret
out
lds
xchg
xchg
inc
loop
rorb
inc
aas
dec
pop
dec
out
xchg
sbb
aas
push
icebp
or
arpl
jl
sub
sbbl
adc
dec
out
in
adc
pop
enter
adc
push
xchg
loop
loopne
sbb
in
jmp
mov
pop
mov
mov
out
hlt
xchg
jnp
push
movsl
xor
popa
data16
outsb
add
in
ret
mov
nop
icebp
cmp
pop
cmp
test
jle
pusha
aaa
mov
outsb
xchg
jo
pop
test
inc
repnz
or
mov
push
jbe
das
xchg
fs
cmp
and
mov
cmpsl
out
int
mov
add
jl
mov
js
std
bound
pop
push
push
sahf
dec
jne
dec
mov
clc
and
sbb
mov
shlb
sub
sub
aaa
les
lds
mov
sbb
add
adc
push
push
push
daa
ds
mov
mov
popa
out
pop
lods
shlb
test
lret
clc
stc
xchg
pusha
cmc
cwtl
mov
pop
pop
xor
push
bound
ja
aas
stos
repnz
movsb
and
loope
mov
dec
mov
sub
push
xchg
call
fsubr
mov
dec
push
jecxz
push
movsl
insb
and
ret
cmp
or
add
lcall
xor
push
push
fldcw
adc
and
movsb
pop
sub
aam
leave
inc
rolb
data16
xor
mov
rol
xorl
dec
out
sbb
inc
jb
push
mov
insb
mov
mov
in
pop
dec
in
mov
out
rolb
mov
dec
lods
adc
jmp
cwtl
lea
add
inc
andl
mov
sbb
mov
jo
xor
stos
out
ja
mov
sub
jl
test
add
mov
mov
sub
sub
test
push
xor
jnp
adc
pop
rclb
cmp
xchg
jecxz
push
outsb
aaa
lahf
lock
je
mov
push
jecxz
int3
cs
aad
aam
ljmp
or
adc
pop
xor
xchg
cwtl
inc
bound
sub
mov
and
pop
outsl
inc
stos
fnstsw
push
ja
push
pop
push
subl
dec
xchg
or
bound
aad
xchg
dec
mov
xor
imul
aad
sub
inc
repnz
mov
nop
xor
mov
sbb
xchg
inc
pop
mov
or
pop
jg
loope
nop
sar
mov
cmpsl
pop
jecxz
stos
loop
inc
roll
int
rcll
popf
cmp
cmp
mov
and
lcall
push
push
or
mov
dec
mov
sbbb
and
cmc
and
stos
jns
and
lret
mov
push
xor
add
pop
sbb
add
aas
dec
sub
scas
jnp
cs
xchg
pop
popa
leave
mov
int
fldt
xchg
mov
cltd
add
int3
out
jno
push
xor
aam
lock
mov
xlat
push
rorl
aam
cld
add
out
dec
rolb
pop
out
rcrl
mov
out
push
jb
mov
inc
mov
test
pop
inc
cmc
jne
ret
jecxz
inc
stos
or
jg
jno
ds
jg
icebp
adc
push
stos
into
cmpsl
pop
push
mov
ja
mov
test
loopne
push
pop
adc
mov
jne
xchg
mov
lret
cmpsl
dec
xlat
push
sbb
pop
jno
hlt
mov
push
stos
insl
add
ds
mov
out
xor
mov
and
jae
int
fcoms
test
jnp
pop
pop
out
lahf
pushf
push
dec
lods
jl
shlb
sub
gs
mov
pop
jae
add
sub
sub
loop
jmp
daa
dec
fsubrs
test
movsl
loopne
dec
pushf
mov
repnz
aad
xchg
lock
hlt
mov
add
add
loope
test
nop
mov
sarl
sub
cmpsl
andb
lods
push
xlat
xor
cli
cld
cld
push
push
push
push
lea
push
push
push
push
push
push
and
pop
pop
jb
ja
sub
push
push
pop
pop
cld
neg
neg
and
lea
jae
add
stc
clc
test
jo
push
add
or
stc
mov
cmp
cmc
cld
mov
push
pop
add
cmc
add
jb
push
mov
pop
add
push
dec
pop
cld
jmp
jmp
call
and
lea
push
jge
and
pop
stc
cld
add
push
sub
pop
test
test
push
or
pop
stc
add
mov
add
sub
or
stc
or
cmc
add
add
lea
test
push
sub
pop
jbe
rol
clc
push
add
pop
push
push
mov
pop
pop
jle
push
push
shl
pop
pop
jb
jno
and
sub
ja
push
push
push
push
pop
pop
pop
pop
nop
pushl
pop
and
push
add
pop
and
and
and
or
rol
cld
testl
je
loop
jecxz
inc
ror
ja
test
push
mov
pop
push
push
or
pop
pop
xor
and
jge
push
push
push
pop
pop
pop
sub
push
add
pop
jmp
adc
mov
ret
insl
push
out
scas
es
lock
xchg
cmp
add
cmpsl
or
cmp
lahf
jne
leave
mov
frstor
stc
pop
out
and
mov
sbb
jae
inc
push
mov
push
xor
pop
pop
jae
push
push
pop
pop
add
add
jmp
bound
pop
jl
or
imul
scas
pop
fwait
psllw
mov
fisttps
xchg
mov
aas
and
push
lods
cmpsl
je
xchg
pop
push
pop
xchg
pop
push
mov
pop
push
jo
push
add
pop
push
pop
cmc
sub
loop
jecxz
mov
mov
dec
xchg
lods
jo
out
mov
sbb
in
push
jnp
inc
push
push
push
push
or
pop
pop
pop
pop
push
push
xor
pop
pop
push
push
and
pop
pop
cmc
jle
and
jne
push
push
push
mov
pop
pop
pop
or
cld
dec
jne
add
test
xchg
rol
push
call
push
sub
xchg
push
sbb
gs
and
xor
lods
mov
daa
sub
lahf
ret
sti
sub
jae
mov
jmp
xchg
arpl
xorl
pop
dec
jne
or
sub
nop
rcpps
mov
sbb
imul
mov
ficoms
dec
dec
push
es
stc
or
scas
mov
fwait
and
mov
cli
xchg
pop
push
adc
pop
xor
xor
popa
bound
add
mov
push
add
lea
or
or
pop
push
cmp
sub
fstp
xchg
add
inc
ret
sbb
prefetch
sbb
push
sub
mov
and
mov
xchg
mov
shll
mov
ficoms
in
dec
das
imul
and
lods
mov
mov
cld
push
jmp
jge
aaa
sahf
sub
scas
stos
cmp
jbe
out
and
bound
in
adc
pop
inc
shlb
jne
cltd
or
and
adc
pop
sbb
insb
mov
fs
mov
fstl
add
out
idivl
mov
or
xor
nop
aad
pop
sbb
negl
add
jl
mov
popf
sub
out
dec
out
pop
xchg
neg
in
call
test
sub
cmc
fisttps
jmp
jge
ret
add
lcall
pop
push
mov
pop
test
cmpsl
xor
aam
cltd
shlb
or
clc
mov
dec
pop
sbb
inc
pop
cmp
mov
mov
xchg
in
jl
cmp
lahf
mov
loope
sarb
loop
or
int
and
adc
and
or
stos
ja
lods
xlat
das
imul
mov
insl
pushf
lea
mov
adc
insb
ljmp
pop
fwait
adc
int3
jo
insl
cmp
and
or
stc
push
cmp
into
in
sbb
jbe
mov
dec
aas
push
cwtl
jl
das
sub
mov
lea
fstpt
gs
mov
adcl
scas
insb
out
inc
jl
cwtl
rorl
mov
dec
rep
push
and
adc
movsl
jge
jae
dec
aas
jg
movsb
out
pop
mov
or
mov
bound
cld
jmp
mov
inc
pop
rolb
jbe
xchg
mov
insl
dec
mov
inc
and
cmc
aam
mov
lea
movsl
jbe
push
inc
jo
sbb
js
test
std
cld
fmul
insb
insl
mov
in
or
popa
jge
cmp
lods
repnz
cmp
fcomi
sub
fwait
push
insl
call
dec
jae
lods
daa
add
mov
mov
xchg
jl
mov
icebp
das
imul
iret
mov
lods
push
popa
cmp
jl
adc
mov
out
mov
in
fwait
adc
enter
pop
sbb
push
std
lcall
mov
xorps
lods
sub
mov
dec
les
insb
insl
repnz
std
mov
test
jmp
sub
ror
bound
cld
aam
repz
mov
call
movsl
lods
bnd
mov
xor
pop
jp
dec
fisttps
mov
inc
mov
mov
adc
lret
je
add
fwait
xchg
mov
stos
inc
mov
lret
lods
outsl
hlt
aam
jecxz
gs
insb
movsl
idivb
jle
insl
add
sbb
sbb
sub
mov
mov
mov
jge
sub
push
insb
popf
adc
or
pop
fwait
push
lods
movsb
jae
mov
fistps
jge
cmc
xchg
insb
icebp
int
mov
xor
push
fsubrs
das
imul
mov
insl
inc
mov
fistpll
into
cmp
lods
icebp
ljmp
mov
adc
mov
mov
inc
cmc
push
mov
and
jbe
test
push
cwtl
cld
test
sub
mov
mov
mov
xchg
mov
xchg
dec
jno
test
fwait
ss
cmp
sarb
pop
ljmp
push
lahf
inc
aas
xor
sub
sarl
push
pop
fadds
test
jno
repz
cmp
loop
mov
loopne
sub
push
xor
jbe
or
ljmp
add
cmp
cmp
pop
insl
pop
ljmp
into
inc
loopne
jnp
sbb
push
adc
mov
dec
dec
push
add
pop
fdivrs
push
mov
cld
les
jge
lds
sub
iret
mov
ficoml
push
cmp
mov
xor
mov
insl
mov
mov
ficompl
cmp
jg
jge
fs
popf
sub
dec
faddl
out
movq
cwtl
adc
repnz
dec
lcall
push
lods
adc
mov
jmp
dec
scas
lock
pop
daa
lret
lcall
inc
insl
sub
push
cmp
sub
fiadds
push
push
lods
stc
leave
mov
xchg
pop
jmp
pop
and
sti
mov
sub
mov
inc
leave
jb
cmpl
decl
lods
pop
iret
mov
testl
dec
repz
pop
jp
sbb
incb
adc
pop
mov
mov
imul
cmc
mov
out
mov
jnp
imul
adc
jnp
sub
movsb
movsl
inc
test
gs
int3
sar
xor
adc
mov
ljmp
lods
sbbb
and
jb
ds
xchg
jnp
fstp
div
xchg
lahf
pop
sub
xor
iret
push
xor
imul
jle
movsb
sti
xor
scas
xchg
pop
dec
add
imul
mov
cmp
adc
sub
jge
add
or
movl
cmp
lcall
loope
inc
cld
es
fucomi
pop
mov
cmp
mov
jge
cwtl
movsb
adc
sub
mov
add
in
push
idivb
dec
fmuls
mov
mov
adc
sahf
ror
sti
cmpl
jmp
mov
fists
dec
in
ds
leave
jge
mov
xchg
std
adc
popf
sub
int3
decl
mov
addr16
and
or
aad
jo
xchg
xchg
xchg
cmc
sub
pop
mov
in
mov
es
dec
mov
pop
int
int3
cmp
sub
sub
adc
inc
sahf
insb
das
or
mov
fwait
addr16
sti
push
inc
xchg
in
divl
fsubp
das
mov
call
and
loop
lea
mov
into
loop
inc
movsb
mov
lods
jle
call
cmp
in
mov
aad
or
fidivs
xchg
test
mov
call
cmp
adc
pop
jnp
scas
arpl
scas
sbb
fucomp
in
and
ljmp
mulb
sti
lret
mov
mov
lea
int
insb
outsb
push
adc
xor
xchg
jp
push
sbb
add
fcompl
sbb
lock
dec
loope
subb
sbb
mulb
pop
inc
cmc
mov
inc
pop
cmpb
mov
mov
fdivs
jmp
sbb
or
insb
pop
cmpsb
lea
add
inc
jg
arpl
fs
enter
mov
sbb
pushf
mov
cmp
iret
lahf
stos
mov
ret
gs
loope
dec
hlt
jb
je
pop
sbb
aad
adc
pushf
out
fcomp
jge
int
inc
loopne
in
push
inc
jb
pushf
push
aas
fidivrs
pop
lahf
arpl
or
mov
sub
xor
sbb
cmpsl
sbb
adc
rclb
lea
push
sti
pop
arpl
sahf
cmp
mov
mov
imul
rcrb
imul
in
jno
or
aas
mov
std
fisubs
rcrl
js
es
loope
add
mov
fimuls
sti
xchg
dec
sub
stos
jl
mov
pop
cwtl
adc
sub
or
mov
and
or
fisubrs
xor
pop
dec
test
clc
xor
pop
andl
push
push
push
mov
jb
outsl
sbb
xchg
adc
push
lods
inc
dec
sub
fcomps
stc
or
orb
pop
add
xor
adc
stos
inc
daa
inc
mov
mov
cmp
jmp
dec
jbe
and
insb
fisubs
adc
shrl
cmp
sub
or
xchg
imul
fwait
xchg
fdivl
int3
mov
data16
or
aad
add
popf
stos
push
sbb
les
rorl
test
xchg
je
or
je
stos
sbb
xchg
jb
push
imul
cli
dec
add
ret
enter
into
push
loop
mov
mov
shll
clc
pusha
mov
push
das
repnz
movsl
fwait
jns
xor
push
and
pop
cs
pop
dec
jl
xor
push
popa
iret
in
push
push
mull
pusha
xor
icebp
ss
inc
mov
movsl
cmpsb
cmpsl
pushf
lcall
jle
or
inc
je
mov
and
psubsb
out
leave
dec
out
fwait
popa
inc
cwtl
cwtl
std
push
sti
bound
imul
jb
fisubs
jnp
fisubs
cmpsl
adc
pop
xor
mov
jns
lea
out
iret
mov
and
in
cmp
jno
ret
xchg
int3
lea
sbb
cmpsl
mov
into
jecxz
push
mov
aam
mov
push
mov
test
cld
jb
insl
jno
cs
loop
dec
push
jnp
mov
sti
sub
mov
push
xor
xor
and
push
mov
mov
test
dec
dec
pusha
test
adc
out
cmp
aad
mov
in
into
sarl
lods
inc
pop
cmp
cmc
cltd
insb
scas
mov
adc
decb
pop
or
add
adc
push
push
test
mov
movsl
call
inc
pop
popa
stc
in
out
pop
lea
pop
push
insb
sub
and
scas
mov
out
leave
rorl
aad
or
sub
push
dec
or
mov
cmp
bound
popa
frstor
dec
repz
pop
cmpb
movsl
cmpl
mov
jl
mov
mov
je
sub
fisttpll
addr16
mov
cmp
xor
aas
fadd
in
inc
loop
and
fwait
loopne
xor
xchg
int
bound
sti
ret
mov
iret
das
xor
mov
pop
push
mov
cwtl
fcomps
pushf
outsb
cmp
negl
jge
jne
jmp
mov
cmp
jne
adc
push
fmulp
js
cltd
push
jnp
ss
je
decb
sti
xchg
adc
xchg
cmp
jbe
and
fildll
hlt
mov
movsb
fldenv
cmc
testl
iret
sbb
adc
imul
out
jmp
test
movsl
or
outsl
mov
adc
frstor
in
dec
mov
scas
cli
push
imulb
mov
inc
mov
sbb
test
mov
add
mov
add
push
inc
sahf
out
cmpsl
add
lds
and
je
adc
fdivrl
mov
jns
adc
mov
stc
mov
xchg
mov
sub
call
lret
pop
xlat
push
int
int
mov
imul
sbb
push
cmp
adc
lods
and
inc
data16
into
out
jnp
sub
inc
sbb
icebp
inc
jnp
arpl
stos
frstor
cmc
enter
mov
push
fwait
sbb
cmpsb
fxch
jne
pushf
push
adc
dec
test
push
mov
jns
int3
fs
inc
lret
outsl
mov
adc
push
daa
mov
pusha
rorl
sbbb
and
fnsave
cltd
xchg
jmp
scas
repz
sub
xor
pop
imul
ffree
pushf
jp
outsl
movsl
loopne
in
incb
fmuls
pop
cwtl
lock
cmp
mov
test
sbb
in
cmc
mov
std
and
xchg
loopne
adc
movsb
push
gs
push
das
ds
out
xor
mov
jmp
stos
pushf
mov
mov
jle
paddsb
xchg
lods
outsl
xchg
je
inc
call
pop
jns
mov
sbb
pop
aad
jo
dec
rorb
mov
mov
mov
dec
and
cmpb
adc
pop
repz
mov
fs
push
push
xchg
out
sbb
pop
dec
xor
imull
jecxz
cmpsl
in
lret
push
jae
leave
test
ljmp
add
dec
adc
sub
movsb
mov
push
out
sbb
int3
dec
lret
mov
push
imul
pop
rorb
stos
and
movsl
test
jle
mov
jp
and
fdivl
repnz
bnd
sub
ljmp
mov
pop
cmp
mov
ss
out
and
test
cmp
jg
push
and
xor
hlt
scas
int
scas
loope
add
mov
ja
nop
mov
sub
sub
add
fisttpll
cmp
imul
and
dec
ficoml
decb
sub
stos
xor
jl
ror
add
bound
xor
rolb
jg
loopne
in
ja
inc
jne
das
dec
bnd
shll
pop
fwait
cmpsb
repnz
adc
cli
and
or
or
push
arpl
mov
push
mov
fisttpll
mov
fnstenv
xchg
mov
xor
aad
call
cmp
rcrb
scas
jnp
mov
mov
xor
cmp
stos
pop
cmpsb
inc
into
and
mov
adc
cmpb
lahf
mov
pop
mov
xchg
inc
cmp
dec
ss
pusha
adc
pop
call
scas
jae
into
and
or
sbb
cmp
sbb
je
out
stc
dec
arpl
sub
int3
sbb
pop
je
pusha
push
inc
femms
cmp
arpl
pop
pop
rorl
js
loop
movsb
cmpsl
imul
outsl
fld
movsb
scas
movsb
mov
jecxz
call
mov
jns
dec
hlt
or
sub
jg
in
fidivs
xor
push
pop
andb
shll
add
ret
mov
or
nop
push
fs
inc
loopne
or
vpand
dec
popa
pop
mov
leave
mov
ja
mov
dec
xchg
inc
mov
je
or
cmp
movsb
stc
jecxz
jbe
pushf
int3
lret
mov
sbbb
fisubl
mov
sbb
stos
aas
bound
jbe
xchg
inc
js
and
xchg
pop
lock
addr16
sub
mov
fsubr
xchg
scas
mov
push
fbld
imul
pop
mov
shlb
cmp
or
testb
ret
lock
loop
lock
push
outsl
dec
adc
jmp
pop
xchg
test
xor
add
sbb
pop
aad
loope
imul
mov
or
mov
data16
xchg
test
jne
cmp
xor
adc
test
push
add
pop
inc
insl
out
xchg
jbe
xor
cwtl
outsb
lret
dec
fcmovnb
mul
jl
xchg
mov
add
pop
cwtl
aaa
outsb
in
push
scas
jmp
lds
dec
dec
aad
mov
into
xchg
jb
adc
inc
pop
and
mov
loop
cld
mov
xor
jp
push
add
inc
inc
js
sbb
aad
outsl
mov
or
stos
adc
loop
jp
ljmp
push
shll
and
and
sub
xchg
jl
pushf
mov
mov
imul
jne
mov
sub
and
xchg
fs
mov
loopne
test
popa
stc
push
pop
adc
sbb
push
call
lret
rorl
movsb
fcmovnbe
neg
int3
fstl
int3
or
sbb
rcrl
sbb
lret
xor
shrb
push
add
push
inc
add
jno
lods
and
mov
or
sbb
jmp
mov
mov
ss
xchg
sbb
ror
es
ljmp
movsl
sahf
lcall
lods
imul
mov
dec
pop
push
cmc
mov
enter
cmpsb
push
mov
mov
mov
mov
dec
or
pop
bound
test
stos
mov
std
mov
fcoml
lret
jnp
pop
push
imul
cwtl
push
lcall
repnz
sar
adc
int
push
int3
mov
xor
test
push
add
or
ret
jmp
mov
and
dec
stc
loop
mov
pop
xchg
dec
push
cmp
repz
in
ja
cmpsl
add
dec
pop
test
sti
rcll
inc
jl
sahf
pop
in
into
adc
mov
push
xchg
aas
sub
mov
jo
call
imul
xchg
ret
pop
sub
daa
sub
les
pop
stos
shlb
or
sub
loop
xchg
aaa
xchg
mov
sbb
inc
stos
cmpsl
hlt
out
into
mov
insl
sub
cltd
into
arpl
rcrb
push
mov
dec
mov
ret
push
mov
jb
lds
nop
push
mov
fwait
lock
pop
xor
or
repz
sub
push
jo
repz
sub
inc
ss
int3
fs
mov
xor
sub
mov
jbe
mov
and
aas
imul
sub
inc
ss
inc
ror
scas
lahf
sub
enter
or
xor
adc
loopne
adc
mov
ret
icebp
andb
inc
cmp
add
add
stos
or
inc
or
xchg
lods
stos
or
aad
push
flds
scas
mov
into
out
jns
adc
dec
test
aad
mov
movsb
adc
mov
fisttpl
nop
and
les
jae
jo
insl
mov
mov
sbb
add
and
xor
pop
adc
jns
popa
fisttpl
sub
mov
out
rolb
cs
mov
idiv
push
pop
cmp
pop
xchg
loope
push
mov
std
xchg
out
mov
arpl
jnp
mov
imul
in
test
sub
lahf
out
out
mov
add
ja
sub
sub
repnz
push
rorb
cmp
pop
dec
aaa
repnz
gs
pminsw
xor
push
or
rorb
sub
inc
jmp
rorl
xchg
fisttps
push
dec
jno
cmp
int3
fimuls
jno
test
gs
call
sub
fs
mov
lea
add
adc
xchg
aad
add
aad
add
inc
mov
imul
push
mov
pop
sahf
xchg
or
or
mov
fucomi
ljmp
push
cmc
mov
or
add
jecxz
or
clc
lret
imulb
stos
adc
dec
push
sbb
adc
lret
jecxz
mov
ja
movsl
jecxz
jae
xor
gs
das
inc
iret
cmc
mov
loope
pop
fsubl
cmc
shrl
or
xchg
add
mov
scas
mov
dec
or
cli
and
lahf
pop
rclb
les
mov
xchg
sub
movsl
push
ja
aam
aad
stos
popa
aas
ret
andb
mov
xchg
xor
scas
cli
js
inc
push
or
test
or
or
push
xchg
add
fiaddl
rclb
out
mov
pusha
xchg
lahf
add
aaa
inc
jbe
mov
pop
push
scas
inc
aaa
adc
aaa
aam
add
sub
stc
jns
inc
jns
in
xchg
imul
jns
hlt
and
shrl
or
mov
aas
or
sbb
xchg
sub
mov
inc
xchg
ja
pop
push
xchg
jle
adc
add
mov
adc
xchg
jle
js
rcrb
stc
cld
cmp
lock
out
test
stc
mov
cmp
icebp
mov
daa
stos
stc
int
pushf
nop
mov
andl
add
shll
mov
test
rclb
imul
test
js
ret
lea
cmpl
inc
ja
cmp
cmp
jns
inc
xor
fdivrl
mov
pop
popf
nop
push
cli
hlt
mov
bound
faddp
mov
fisttpl
adc
lods
int
sub
stc
sub
cmpb
mov
cmpl
inc
adc
pop
test
push
push
in
xlat
movsl
adc
dec
js
pop
call
pop
loope
psraw
cmp
cmp
inc
xchg
mulb
lcall
pop
add
jp
inc
mov
ss
pusha
sbb
inc
cmp
fimuls
jg
or
rclb
xchg
jmp
adc
or
stc
dec
push
fistpll
add
mov
daa
sub
dec
mov
or
jmp
outsl
lret
jnp
push
or
jae
and
jo
stc
push
stos
or
aam
mov
push
xor
es
movsl
cmp
lods
stos
sbb
mov
dec
sub
mov
cmp
sub
stc
pop
test
sub
cmp
mov
sbb
jb
aad
hlt
ja
shll
shrb
ret
cwtl
or
add
sub
lahf
mov
xor
sub
xchg
daa
and
popf
push
adc
mov
mov
enter
test
inc
lahf
std
dec
pushf
jmp
jecxz
sbb
and
pop
mov
fsubrs
std
add
aas
jmp
fdivp
dec
xchg
stc
mov
in
adc
dec
lcall
dec
jmp
repnz
sti
shl
mov
aas
dec
test
xor
pop
iret
cmp
xor
int
adc
xor
push
insl
xor
pop
notb
lret
test
int
xchg
dec
or
addb
pop
enter
adc
mov
shrl
lods
imul
push
lods
stos
in
mov
mov
inc
shlb
test
cmp
pop
fsubrs
mov
inc
push
fisttpll
dec
adc
and
push
es
and
ret
mov
fmuls
stos
jns
fsts
xor
pop
pop
sarb
imul
mov
pop
loopne
or
shll
adc
in
add
adc
push
inc
and
stc
out
cmp
mov
mov
iret
xchg
jge
mov
xchg
fdivrl
icebp
popf
xor
lahf
sarl
out
les
fimuls
test
pop
xor
pop
sbb
testb
ljmp
repz
test
dec
or
xchg
pmulhuw
arpl
sub
imul
sub
dec
cwtl
xchg
xor
mov
into
out
adc
int3
xchg
mov
pop
jne
es
int3
cmpsb
jecxz
fdivrl
test
mov
pushf
sbb
addr16
adc
in
les
cmp
stos
shlb
mov
mov
pop
adc
xor
add
leave
mov
adc
jbe
adc
gs
loope
mov
xchg
mov
stos
or
jmp
fidivrl
adc
add
gs
pop
adc
sbb
adc
sahf
dec
mov
push
aad
cmp
dec
jmp
or
push
fwait
xchg
pop
inc
xor
add
scas
inc
scas
iret
data16
incl
xor
andl
push
mov
dec
imul
fstpl
das
ret
jns
mov
sub
xchg
inc
mov
adc
ja
shll
mov
and
jno
mov
xor
push
arpl
jns
sub
pop
mov
dec
das
or
push
sub
mov
ljmp
lcallw
pop
les
ret
xchg
lods
push
in
adc
ret
cld
aam
imul
push
xor
jno
imul
add
popa
call
add
mov
and
add
sti
sbb
rcll
fxch
inc
xchg
cmp
inc
loop
jno
test
sbb
xchg
fiaddl
int3
xor
mov
or
mov
and
ss
xchg
inc
sarb
pop
push
aas
sahf
mov
mov
repnz
rorl
jb
in
cmp
lret
sbb
cmc
mov
js
inc
cwtl
sub
pop
inc
add
cltd
adc
ljmp
in
inc
imul
xchg
xor
lahf
iret
test
int
push
inc
lock
addr16
mov
mov
adc
and
test
cli
rorb
int
sbb
cmpl
fisubrs
hlt
push
enter
sub
mov
hlt
fs
imul
dec
add
mov
sub
lcall
pop
xchg
push
jecxz
cmp
cmpsl
gs
sar
insl
adc
push
jnp
stos
in
cmp
ret
cmp
insl
ja
into
sarb
xor
nopl
gs
aam
sbb
in
gs
sub
push
cmp
adc
data16
popf
fwait
jo
sub
mov
stc
and
pop
fistps
cmp
mov
mov
cmp
clc
xchg
jecxz
popf
add
inc
popa
cs
sbb
cmpsb
mov
pop
xor
ja
int
hlt
clc
jo
dec
mov
jbe
sbb
and
mov
int
ret
inc
pop
mov
xor
sub
ret
popl
lock
sbb
mov
inc
ret
rorb
jle
add
icebp
mov
repz
push
cmpsb
rcrl
push
mov
mov
icebp
mov
or
push
mov
push
inc
gs
cmp
and
pusha
cmpsl
cwtl
cld
jle
mov
mov
mov
sub
cmp
repz
mov
sbb
fmull
cltd
outsb
mov
ja
icebp
add
shrb
pusha
jns
sahf
shl
mov
pop
sub
test
into
jns
cmp
mov
pop
mov
push
insb
add
inc
bound
push
mov
jae
sbb
mulb
sbb
das
rcll
data16
cmpsb
add
out
push
pop
lds
push
mov
dec
cmp
mov
xor
xchg
mov
decl
mov
aam
ret
dec
std
or
mov
push
mov
sub
jns
repz
gs
mov
xchg
and
loope
mov
push
mov
xchg
cmp
lods
xor
repnz
jns
fs
int
fcoms
negl
xchg
out
ja
insl
and
cmp
inc
clc
xchg
jbe
push
mov
dec
xchg
cmp
fildll
mov
xchg
adc
cmc
push
repz
mov
lods
loop
push
mov
mov
mov
inc
sbb
xchg
ret
cmp
mov
fst
arpl
mov
jp
cmp
lret
loope
sbb
adc
imul
sbb
iret
inc
mov
ret
imul
clc
cmp
subb
imul
cmp
ret
bound
lret
dec
xchg
loop
mov
idivb
xchg
stos
aas
addl
stc
pop
dec
lds
fsubrp
adc
jecxz
andb
mov
js
or
fcomps
xor
pop
pop
rcr
loopne
inc
mov
mov
sub
cmp
pop
loop
push
inc
cwtl
cmp
out
jno
pushf
rcll
inc
jmp
imul
mov
mov
jg
and
inc
mov
sub
outsl
inc
cmpb
jmp
sub
dec
adc
cmp
clc
mov
and
outsl
jne
push
sub
and
push
xor
pop
cli
mov
cwtl
push
xchg
pop
repnz
sub
cmp
jg
leave
xchg
pushf
and
arpl
jge
enter
pop
hlt
jle
nop
xor
roll
je
inc
fidivrs
push
cmp
push
mov
cmc
shll
out
repz
mov
and
pop
lret
or
xor
xor
outsl
arpl
jne
push
jle
xchg
call
push
lods
push
and
adc
push
cmc
jg
fisttpl
inc
outsb
mov
nop
mov
mov
dec
sbb
inc
mov
push
idivl
lods
movsl
lods
jbe
jecxz
sbb
pushf
ja
sub
subb
mov
add
cmpl
xor
mov
add
push
cltd
repz
rorb
sub
xchg
hlt
ret
lea
test
rorl
clc
leave
mov
call
faddl
lahf
mov
sbb
mov
fcmovnb
adc
es
sahf
fiadds
stc
add
mov
popl
sub
movsl
ljmp
sbb
cmp
mov
add
pop
cmc
push
inc
sub
ret
mov
adc
cmp
aaa
pop
jbe
lods
dec
in
xchg
cmp
fisubrs
sti
mov
cmp
insb
push
mov
loop
or
pop
push
mov
in
xlat
sub
movsb
sub
push
inc
inc
dec
dec
sti
jns
lock
cmp
mov
scas
mov
cmc
mov
dec
fwait
sbb
mov
mov
aaa
push
cs
lds
sub
arpl
pop
push
dec
pop
cmpl
xchg
aaa
cs
mov
aaa
daa
sub
lahf
data16
scas
aas
scas
inc
cmc
push
insb
sti
push
stos
pop
fcom
mov
mov
insb
loope
push
rorl
cmp
outsl
rolb
pop
mov
outsb
jl
lods
jp
ss
sub
iret
adc
cmpsl
sub
push
movsb
lret
inc
jne
loopne
mov
mov
cmpsl
adc
pusha
int
sub
push
jg
jno
idivl
pop
sbb
ret
push
and
pusha
jae
addr16
jo
js
jecxz
pop
jb
xor
xor
or
in
insl
loope
mov
in
mov
inc
scas
iretw
call
sti
xor
mov
fcoms
int3
dec
stc
mov
pusha
decb
shll
xor
xchg
cmp
loopne
mov
scas
xlat
shl
dec
sbbb
in
mov
dec
cltd
fimull
or
inc
inc
fidivrl
lret
jecxz
inc
lahf
adc
add
jb
fstl
xor
sti
jmp
outsb
pop
adc
mov
ljmp
push
frstor
pop
lea
and
imul
xor
jmp
lahf
in
ret
jns
test
shlb
jecxz
add
adc
cmpsb
jae
jo
aaa
dec
inc
shlb
mov
inc
int
cmp
pushf
mov
jp
mov
loop
dec
lea
aaa
jo
fnstenv
push
mov
addr16
cmp
adc
and
das
push
mov
aaa
js
hlt
in
test
ljmp
notl
xchg
ja
inc
lret
add
dec
cmp
xchg
and
faddl
push
out
and
sahf
jo
sbb
push
mov
dec
ret
bound
out
mov
subb
sub
jo
inc
mov
mov
lcall
addr16
aaa
sbb
enter
movntps
cmpsb
push
sbb
inc
cmpsb
aaa
mov
push
pop
test
int3
push
pop
hlt
loopne
mov
jne
jb
fsubrl
mov
and
cmp
mov
dec
nop
or
xor
movsl
cwtl
outsl
or
lahf
test
sub
add
sti
sarb
fistps
enter
cs
pop
popa
inc
xchg
mov
bound
dec
and
mov
xchg
pop
xor
into
or
jecxz
sbb
or
or
cmp
mov
movsb
in
aas
dec
shl
add
fstp
mov
or
push
enter
lret
jl
cmpsl
add
and
add
je
xchg
jmp
loop
inc
lahf
jbe
inc
daa
jle
jnp
mov
ret
iret
mov
ds
popf
and
out
mov
mov
ret
mov
dec
lcall
adc
mov
sbb
xchg
or
stos
xchg
bound
mov
cmp
xchg
adc
pushf
lock
fisubs
out
xor
cmp
pop
push
scas
mov
movsl
daa
inc
into
pop
mov
movsl
mov
mov
bound
jl
cwtl
pusha
mov
xor
aad
mov
mov
add
jo
insb
or
adc
fxam
and
and
test
jo
mov
out
bound
lret
dec
sub
jecxz
pusha
ret
xor
out
pop
adc
dec
sub
repz
or
and
jno
adc
add
stos
inc
mov
outsl
inc
dec
subb
xchg
lahf
cmp
fdivr
stos
ret
movsl
movsl
movsl
mov
xchg
gs
rcr
sub
int3
inc
int
stos
jg
sub
add
cmp
cmpsl
dec
xchg
in
mov
ja
cltd
cmp
shlb
in
mov
das
enter
adc
mov
xchg
mov
divl
movsb
push
or
mov
data16
push
dec
insl
adc
sahf
cld
pop
xchg
pop
fadds
mov
enter
stos
mov
lods
xchg
ficoml
jnp
outsb
shr
push
addb
insb
sbb
mov
clc
xor
imul
mov
into
xchg
pop
shl
test
dec
insb
sarb
push
xchg
gs
scas
ds
cld
inc
mov
popa
add
cmc
jb
jns
cmpsb
push
adc
mov
dec
sbb
push
cmpsb
lods
pop
roll
shll
lahf
add
inc
push
push
insb
and
push
mov
and
orb
leave
xchg
loop
cwtl
add
mov
lea
xchg
iret
push
adc
cli
sahf
cmp
lahf
xchg
iret
test
orl
xchg
or
dec
fldl
aam
jge
adc
push
mov
sub
mov
xor
cmp
mov
movsl
mov
arpl
mov
jge
in
jbe
imul
pop
mov
sbb
jp
imul
or
add
andl
xchg
and
jp
pop
push
inc
ja
fcomp
ljmp
inc
std
lea
enter
lods
ss
mov
out
movntq
adc
xchg
popa
je
pop
adc
sarb
push
and
push
rolb
aaa
mov
test
or
data16
fldcw
mov
mov
mov
frstor
cmpsl
xchg
cmovg
shlb
clc
scas
les
mov
dec
in
nop
sub
lock
repz
scas
pop
mov
out
cwtl
xchg
push
lock
fisttps
dec
shr
push
mov
or
arpl
out
adc
sub
fcomps
mov
cmp
push
out
test
cmp
ds
arpl
mov
sbb
lds
insl
push
movsl
test
pop
xchg
mov
stos
shl
mov
insb
pop
cmp
cmp
adc
push
aaa
dec
add
lds
cmp
mov
bound
pop
aas
lock
lea
mov
lret
cwtl
push
mov
mov
mov
jmp
gs
rcll
push
popf
mov
inc
jno
nop
pop
mov
add
mov
sbb
and
mov
sub
call
lea
push
int
mov
push
jge
rclb
dec
or
sbb
or
push
cmpsl
mov
sbb
cwtl
jmp
outsb
jmp
das
xor
push
sub
lea
mov
push
shr
lock
jl
jne
repz
cld
icebp
mov
repnz
jae
adc
cmp
adc
mov
or
out
stos
cmpsl
ret
mov
popf
mov
stc
push
sbb
xor
mov
test
mov
cltd
nop
mov
pop
arpl
cmp
pop
fisubrl
xchg
cld
dec
dec
mov
cmp
inc
andl
cli
mov
xor
sbb
add
add
mov
int
xlat
mov
pop
push
jb
or
mov
add
inc
cmpsb
sbbb
movsb
fwait
sub
shlb
push
sbb
into
inc
cmp
push
mov
sub
cmpsl
pop
sub
mov
outsb
cmp
pop
mov
jno
mov
mov
mov
sbb
test
movsb
mov
jae
push
mov
repnz
iret
out
xchg
scas
call
into
sbb
push
shr
flds
out
out
lods
imul
repz
pop
or
sbb
outsl
sti
adc
cmpsb
lahf
loope
pop
cmp
dec
push
movsl
bound
rolb
aam
jp
dec
clc
jb
and
sbb
insb
pop
push
test
push
sub
outsl
or
xchg
test
mov
sbb
adc
pop
xor
push
shrb
and
fwait
cmc
cwtl
arpl
arpl
xchg
loopne
test
inc
sbb
imul
mov
ret
cmpsb
add
cmp
lret
push
mov
lods
jne
lahf
ja
scas
xchg
addb
and
int3
lahf
iret
inc
orb
in
out
mov
cli
dec
add
pop
out
ss
stos
push
pop
test
ljmp
lock
xchg
ss
ret
jns
inc
add
dec
aaa
pusha
mov
pusha
test
xchg
stos
jle
adcb
mov
dec
outsl
dec
lretw
inc
pop
sbb
popf
insl
testb
inc
insb
xchg
nop
outsl
jmp
and
stos
movsb
stos
xchg
cmp
push
inc
in
jl
lahf
lret
aaa
xor
lock
imul
mov
int3
stos
iret
es
adc
mov
lds
std
in
sbb
mov
outsb
arpl
cmp
xor
pop
loopne
lret
std
xchg
sarl
mov
out
dec
sub
repnz
mov
shll
cld
cmp
mov
push
add
les
or
cmp
add
mov
mov
jae
add
mov
shll
mov
cmc
mov
mov
data16
rolb
jp
test
mov
mov
pop
adcl
xlat
and
js
add
imul
jno
sub
test
mov
imul
push
xchg
and
addr16
xchg
fidivl
push
pop
sub
dec
sub
or
faddl
sbb
xchg
push
lea
lods
sbb
inc
sbb
fnstsw
subl
aam
ret
cmp
cmc
xchg
sbb
mov
push
into
and
in
xor
in
iret
cmp
lcall
leave
sub
test
leave
xchg
inc
fstps
lahf
les
push
mov
imul
mov
aaa
lods
mov
push
gs
scas
cmp
cwtl
in
push
fistps
dec
xchg
xchg
stos
enter
xchg
xor
cmp
imul
push
cmp
lahf
lret
lods
jl
jmp
jns
xor
movsl
fsts
loop
rcrb
movd
das
sbb
rcrb
cmp
sub
and
pop
iret
out
inc
pop
imulb
sbb
mov
aas
mov
inc
les
xlat
mov
jge
add
es
add
notl
pop
out
push
ret
les
shlb
loop
xor
lods
lods
ja
subl
xchg
and
fcomps
xchg
mov
adc
shlb
rcl
sbb
mov
mov
mov
cmp
lahf
out
lahf
cmpl
pusha
pop
xor
push
dec
testb
pop
es
test
bound
and
aaa
loopne
lret
and
lret
out
push
add
mov
xchg
fistpll
mov
cld
pushf
jne
mov
addr16
cmp
add
lret
test
rolb
push
popf
and
out
inc
daa
cli
test
xor
adc
sub
xor
xchg
aad
imul
mov
lods
pop
std
push
test
loope
mov
mov
mov
cli
xorb
jge
or
loop
dec
cmp
sarl
xchg
lods
gs
test
xchg
js
jl
and
stc
push
add
jmp
idivl
sbb
xor
mov
outsl
imul
dec
xchg
data16
or
popl
sub
in
icebp
adc
or
sub
pop
clc
cmp
xor
js
popf
jo
enter
inc
mov
int3
fs
int
sarb
sbb
inc
mov
xchg
push
mov
xchg
pop
inc
mov
push
cmpsl
xor
mov
or
addr16
jmp
test
mov
xchg
sbb
aaa
jg
call
jns
or
jbe
lret
jns
mov
jne
sub
mov
mov
xlat
xchg
dec
lahf
vpcomq
roll
adc
shrl
gs
cli
inc
lahf
fiaddl
testb
pop
xchg
cmpsl
test
sbb
pop
sub
jbe
xchg
shlb
sub
aas
js
xchg
jbe
and
shll
and
xchg
or
mov
sbb
ret
lea
jno
ljmp
jns
xor
sbb
sbb
mov
movsb
inc
or
mov
sub
mov
cmp
cmc
scas
ret
aaa
xchg
mov
mov
mov
repnz
dec
or
ja
ss
into
dec
stc
push
unpcklps
sbb
popf
nop
nop
mov
pop
lods
pop
sbb
cmpsb
mov
xchg
dec
sarb
push
test
dec
adc
xor
pop
movsb
popa
sub
sub
pop
fucomi
and
jge
inc
xor
fs
ss
in
xor
mov
add
dec
adc
xchg
lcall
cld
cmc
mov
daa
mov
fwait
and
add
enter
jmp
ss
fldcw
jbe
push
jno
push
lds
xchg
dec
inc
mov
lea
aam
cmpsb
and
push
xor
adc
jmp
jne
es
jo
dec
xlat
mov
loop
lds
add
stos
jg
push
test
arpl
sbbb
rcrb
push
push
mov
jmp
xchg
dec
inc
out
add
adc
add
gs
subl
cmp
int3
mov
inc
bound
mov
adc
push
popf
adc
ss
add
in
xor
mov
mov
pop
add
stos
out
pop
xor
popa
jle
aaa
push
pop
inc
lods
jo
daa
push
imul
imul
test
inc
adc
call
xor
aaa
lahf
adc
loope
in
lea
out
pop
xchg
andl
pusha
adc
hlt
int3
addr16
in
fsubs
mov
and
ds
das
xor
push
and
and
mov
jecxz
mov
adc
cwtl
es
mov
xorl
jne
dec
test
or
incl
pextrw
xchg
movsb
jae
adc
mov
cld
in
add
movsl
into
inc
mov
dec
scas
es
adc
jae
lds
jno
mov
lods
dec
ss
add
scas
test
xchg
xor
jbe
jne
gs
push
jle
add
outsb
out
adc
fsubl
and
mov
lods
int3
jns
sub
xor
fcomp
or
mov
gs
xor
jae
mov
repz
mov
in
out
xorl
ficoms
cmpsb
aam
test
les
dec
jl
mov
es
pop
mov
daa
icebp
pop
lods
mov
mov
jge
mov
or
cmp
inc
pushf
rcl
and
dec
and
shr
loope
jae
sub
jnp
cli
jnp
outsl
jno
mov
fs
test
pop
push
mov
fildll
mov
pop
movsb
jno
lea
idivl
cmp
test
mov
xchg
aam
sub
adc
sub
and
push
and
jne
aam
daa
mov
xchg
ret
dec
push
sub
loop
pop
jno
sub
xchg
inc
dec
mov
inc
mov
rcll
leave
test
mov
enter
outsl
mov
cmp
xor
scas
push
add
in
lret
in
xor
xchg
shrb
ret
movsb
fsub
mov
cmp
xchg
ret
xlat
out
xchg
ljmp
dec
mov
mov
or
jno
loope
cmpsb
fs
adc
loop
sbb
xor
lret
cmpsb
inc
xor
repz
adc
jecxz
data16
jne
imul
gs
and
cs
lods
pop
loope
fbstp
fwait
rcr
cmp
jae
jb
dec
rolb
pop
or
fstp
loop,pn
mov
jne
mov
and
ficoms
shr
mov
outsl
sahf
fisttpl
hlt
adc
sbb
pushf
ret
inc
lret
inc
inc
xorb
jl
repnz
lea
cmpsb
or
push
mov
ret
mov
ljmp
scas
pop
adc
mov
icebp
aaa
ss
mov
insb
outsb
push
jne
add
addr16
pop
repnz
pop
arpl
and
lods
cmp
cltd
mov
loope
fnstenv
mov
push
add
mov
adc
inc
push
xor
loopne
fwait
mov
lods
mov
dec
jle
push
inc
popf
in
jbe
in
sahf
mov
filds
dec
jge
notb
ficoms
xor
mov
loop
inc
ds
cmp
fisttps
pop
jl
adc
stc
dec
push
push
jg
clc
clc
icebp
lcall
test
mov
clc
adc
xchg
push
enter
pop
stos
or
outsl
inc
in
push
loope
out
pop
cmc
fcom
sbb
jmp
addr16
inc
stos
pop
lea
mov
xchg
cmpsl
cli
sbb
test
xchg
out
cmc
xor
xchg
loopne
fdivs
rcrb
loope
movsb
loope
sbb
or
xor
add
mov
mov
dec
stos
pop
aad
pop
dec
jbe
mov
jge
push
cs
cmp
inc
mov
icebp
add
outsl
pop
jl
in
mov
pop
cs
imul
mov
pop
push
shrb
xor
sbb
push
mov
cmc
leave
jmp
popf
fildll
out
adc
xor
jge
negb
lea
adc
ret
add
in
mov
ljmp
push
mov
mov
mov
add
test
fidivrs
mov
lahf
adc
mov
push
or
adc
incl
xchg
add
enter
jo
nop
popa
mov
and
mov
xchg
cmpsb
pop
or
xor
lcall
mov
pop
xchg
mov
lea
push
mov
mov
mov
jb
popa
cmp
and
pop
mov
outsl
inc
pop
pop
dec
mov
jno
cmp
int
mov
inc
into
das
gs
in
movb
imulb
cld
sbb
mov
mov
inc
xchg
jl
aad
sbb
xlat
and
push
ss
ljmp
scas
sarb
lea
fidivrs
xchg
das
or
sahf
int3
add
ficompl
fbld
push
xchg
cmc
mov
mov
lea
adc
imul
ss
mov
stos
iret
scas
call
call
out
fists
inc
jne
fwait
adc
pop
adc
adc
add
mov
xlat
push
sete
divl
pop
cmp
sub
or
lret
ret
mov
scas
push
js
ljmp
xchg
enter
lret
sbb
fcomip
fwait
and
push
pusha
and
fdivrl
cmp
roll
test
shrl
lea
les
push
xchg
ja
push
stc
fwait
pop
push
jge
push
mov
or
and
and
lret
mov
sbb
inc
xchg
rolb
inc
add
testb
jmp
cmpsl
xchg
clc
data16
sbb
jbe
push
push
cmp
cltd
sub
jns
rclb
or
or
daa
or
adc
adc
leave
lahf
rorl
pop
add
out
inc
fbld
push
sub
sbb
mov
xchg
and
mov
test
test
ficomps
fistpl
je
js
stc
or
test
ss
shlb
add
into
popf
frstor
pop
xor
push
fldt
subl
mov
stos
lock
jp
sub
scas
mov
mov
loop
or
mov
shlb
lds
faddl
xor
in
jle
jle
sub
cs
and
push
adc
outsl
xor
rcll
int3
cmp
jl
jmp
push
mov
inc
mov
scas
lret
push
lods
pcmpgtw
lret
jg
add
push
out
inc
adc
pushf
push
sub
das
ljmp
dec
sti
ret
and
xor
into
mov
mov
std
test
iret
outsl
lock
imul
rorb
dec
rcl
addr16
dec
or
scas
mov
out
mov
fldt
xchg
xchg
fcmove
fs
sbb
and
pushf
test
jnp
pop
in
xchg
push
xor
push
jl
test
jno
cmp
push
and
mov
divb
lret
pushf
push
leave
or
mov
loopne
inc
adc
cmp
rclb
ds
push
add
sbb
les
sub
je
xchg
mov
jo
add
inc
adc
xchg
and
sarb
hlt
les
hlt
shl
adc
pop
adc
cmp
mov
mov
std
dec
mov
mov
lea
bound
fiaddl
sub
subb
xor
push
xor
sub
enter
inc
lock
aam
cmc
xor
lret
inc
xchg
lahf
movsl
scas
dec
mov
pop
or
or
jl
or
adc
add
mov
mov
lret
jbe
mov
sbb
lcall
mov
cmp
push
dec
pop
inc
or
aad
pusha
or
movsb
sbb
mov
add
iret
aaa
push
cmpsl
int3
mov
shr
lods
lods
enter
pop
push
adc
shll
pop
mov
push
ss
push
mov
pushf
jae
pushf
int3
and
mov
xchg
outsb
aas
or
mov
inc
andl
hlt
pop
mov
out
jecxz
lock
jne
jle
ja
dec
out
bound
cmp
call
dec
dec
in
dec
cmp
and
xchg
inc
xor
fsubrl
ret
jle
mov
inc
push
inc
jl
push
dec
stc
push
cwtl
or
and
or
fcmovb
sbb
ret
push
jnp
xor
push
out
jmp
cmpsb
xchg
aas
addb
inc
bound
bound
mov
sbb
hlt
sbb
ljmp
and
test
cmp
iret
rcr
sti
and
dec
into
cmp
fsts
sbb
fmuls
mov
xorb
scas
add
fcmovb
mov
mov
jne,pt
or
scas
jb
mov
sahf
jg
ret
adc
ds
rcrb
dec
xchg
ret
or
push
shll
sbb
dec
dec
fmull
mov
stos
pop
mov
xchg
and
je
push
jge
push
mul
pushf
stos
adc
in
andl
and
pop
xorb
roll
sub
sub
fdivs
sub
je
jb
stc
les
xchg
jg
xor
cmp
aam
xlat
test
jae
rcrl
pop
adcb
jecxz
or
sub
pushf
cs
adc
notl
mov
inc
fisubs
pop
fwait
add
sahf
xor
xchg
mov
inc
aam
fucomi
adc
jl
mov
lret
mov
loop
push
and
xor
dec
push
jg
out
out
adcb
in
ss
loop
movsb
jp
xor
inc
ss
mov
cmpsl
xorl
mov
lcall
cmpl
mov
incb
mov
cmp
push
mov
add
add
je
sub
xchg
iret
loop
sbb
adc
mov
inc
clc
add
dec
stos
call
test
movl
and
pop
aad
pop
jne
std
jmp
mov
mov
jmp
mov
repnz
fcoms
pusha
jns
mov
and
mov
push
jbe
and
subl
mov
stos
es
je
mov
stc
test
addb
mov
bound
cmpsl
scas
mov
fadd
cltd
insb
movl
loop
jbe
mov
dec
xor
ret
or
es
push
pop
xchg
lds
jmp
or
mov
xchg
xchg
mov
imul
das
fisubrl
lods
clc
mov
push
cltd
inc
and
push
popf
ss
pop
mov
pop
rorl
idivl
je
or
aaa
fstl
out
loopne
rcrl
cmp
dec
rcrb
lret
cmp
insb
jnp
sbb
jns
sub
mov
pop
cli
daa
cmpl
insb
fidivl
je
mov
sbb
lods
and
stos
fwait
not
aad
cmp
xchg
and
xor
jnp
outsb
adc
das
cmp
in
lods
cmp
push
xchg
dec
shrb
or
pop
xor
xchg
rclb
popa
sub
les
or
cmp
dec
mov
and
lds
dec
sarl
inc
int3
inc
pop
ret
cmc
mov
insb
filds
jns
sbb
bound
pushl
jo
outsl
jp
jle
pop
shlb
dec
rcr
mov
rorb
mov
arpl
or
popa
push
adc
pop
out
jns
push
out
pop
divl
and
lods
cltd
scas
pop
insb
mov
std
sub
mov
test
inc
xor
cmp
xor
js
jl
stos
iret
das
lock
push
aaa
inc
ret
or
inc
push
in
addr16
aas
rclb
pop
push
mov
int
xchg
xchg
hlt
xchg
je
pushf
es
inc
mov
sub
enter
dec
jl
mov
outsl
aas
orb
cmp
js
add
pop
mov
daa
popa
aad
mov
jbe
jo
cmp
mov
repz
daa
mov
sub
test
mov
add
prefetchwt1
pop
imul
roll
cmc
xor
fdivl
jp
fistpl
sub
cmp
push
push
pushf
mov
in
push
dec
and
insl
xchg
adc
pop
insb
pushf
and
mov
xchg
cmp
hlt
xchg
inc
lret
add
ret
push
pop
adc
test
pop
xor
movsl
add
into
lret
mov
in
pushw
mov
jns
adc
jb
xor
mov
fisubrs
enter
cmp
or
sarb
fstps
in
mov
fs
dec
push
sub
insb
sub
jmp
mov
or
icebp
mov
inc
or
push
pop
inc
fidivl
xor
and
adc
xor
into
out
or
sbb
sub
jns
in
ret
dec
call
or
sub
sahf
or
xlat
mov
adc
cmp
pop
inc
fnsave
out
jnp
pop
orl
inc
sub
inc
nop
cmp
jg
cmp
shll
push
mov
inc
xchg
repnz
jmp
call
xor
sbb
aas
or
xor
inc
aas
mov
icebp
and
jne
lret
insb
push
and
loop
stos
je
adcl
lods
fbld
es
into
xchg
mov
cmc
jb
fdivrs
push
jmp
nop
imul
and
xor
setb
aam
rclb
pop
outsl
fwait
and
adc
pushf
aas
push
add
negb
mov
addb
stos
in
xor
mov
loop
call
mov
inc
cmp
fstpl
mov
xor
push
sbb
repz
pusha
mov
jecxz
movsl
adc
les
call
mov
cmp
dec
in
push
mov
rcrb
fwait
pop
pop
and
mov
sbb
adc
sub
lods
stos
add
add
pop
mov
fs
aam
dec
sti
jo
push
imul
xor
addr16
push
pop
test
lret
jo
daa
rcrb
out
mov
mov
scas
dec
push
add
mov
adcb
lods
sub
push
pop
sub
sti
test
inc
into
mov
jge
add
mov
jle
and
add
int3
adc
insl
inc
std
lcall
inc
xor
aas
into
imul
icebp
mov
push
sbbl
xor
sbb
popa
andnps
lods
or
int
pop
std
pop
adc
xchg
lds
cmp
pop
jle
out
mov
in
ljmp
sub
movsb
push
jb
mov
sbb
inc
jae
bound
and
aam
mov
aam
adcb
xchg
pop
mov
lahf
in
xchg
rorb
jecxz
sub
stc
gs
or
xchg
fisttpll
cmp
push
push
sub
fistpl
inc
xchg
pop
lahf
dec
cld
fldt
pop
cltd
mov
lock
push
movsl
and
es
jo
repz
mov
aam
mov
ss
pushl
sbb
dec
push
mov
xchg
cmp
dec
aam
mov
dec
imul
or
xor
cltd
stc
fnstsw
jl
fisubl
push
fsubl
mov
xor
iret
negb
inc
test
push
mov
add
add
lahf
in
mov
push
xchg
mov
dec
into
movsb
add
add
pop
sti
mov
movsb
cvtpi2ps
mov
cmc
xorb
into
mov
and
mov
fdiv
inc
xorb
push
jne
pop
mov
loope
jmp
xor
movsl
arpl
clc
into
dec
imull
add
nop
and
pop
lret
iret
inc
mov
or
ret
test
test
jp
lahf
inc
cmovbe
mov
loope
fwait
mov
jp
loopne
push
into
and
add
add
push
ds
into
jecxz
jg
std
jmp
add
xchg
and
sbbl
mov
test
mov
arpl
push
cmp
pusha
add
lds
sub
lahf
or
aad
test
pop
sti
aam
dec
pop
data16
addr16
jmp
iret
addl
jl
push
pop
mov
inc
pop
je
pop
push
dec
cmp
add
je
sbbb
lds
or
inc
sbb
sahf
push
sti
cmp
int
or
mov
jmp
adc
adc
push
jnp
xor
cmc
mov
fldenv
dec
xor
ds
mov
add
mov
pop
mov
cmp
sbb
jmp
outsb
xor
js
mov
push
cmpsl
jbe
cmpsl
cmp
icebp
imulb
mov
inc
mov
cmpsl
frstor
shlb
mov
jnp
ss
cmp
push
mov
jb
lret
mov
xor
mov
frstor
lds
pop
pop
aam
mov
pop
int3
cmp
jge
andl
mov
and
insb
jno
push
mov
test
push
test
arpl
lcall
cmp
je
shlb
pop
mov
dec
pop
push
out
aas
pop
pop
mov
pushf
jns
sub
xor
or
sbb
mov
inc
jne
sti
aas
je
pop
xchg
jne
in
imul
repz
cmp
jbe
xor
int3
sbb
fadds
cmovnp
jge
mov
out
mov
sarl
mov
add
lgs
pop
lret
xchg
rorl
push
insl
insl
sti
ljmp
xor
mov
shlb
ret
mov
push
icebp
xchg
mov
fs
cltd
jl
xor
ja
test
std
cld
sti
push
jmp
jge
push
scas
lods
int
into
test
out
pop
rolb
shlb
repz
test
scas
push
cltd
jmp
mov
lds
xor
jmp
incb
fwait
pop
test
fcompp
dec
ds
clc
out
push
int
cmpl
mov
add
jle
shlb
dec
push
mov
movsb
sub
aas
sbb
loopne
dec
mov
adc
push
fldenv
sahf
xorb
pop
mov
dec
push
sbb
jne
repz
add
mov
cmp
xchg
jle
out
in
cmp
mov
add
dec
fdivrs
lahf
jno
rorl
ja
inc
cmp
aad
sbbb
stc
int
or
sbb
push
ja
movsb
and
xor
andl
cmp
and
lods
mov
jl
mov
mov
out
js
xor
adc
in
fsubs
inc
mov
cmp
add
lds
inc
mov
push
jmp
scas
cmpsl
insl
or
push
loope
pop
sahf
int3
popf
fstpl
pop
iret
xchg
xor
or
bnd
ss
mov
or
aam
fdivrl
xchg
push
xchg
and
loopne
fwait
into
sub
cld
jno
jne
dec
enter
pop
cmpsb
fdivp
jo
mov
mov
cmp
jns
or
fwait
xchg
xchg
mov
fs
cwtl
fcomip
movsb
fsubl
xor
addr16
or
inc
ret
mov
ss
fwait
fs
pop
cmp
ds
mov
push
cmp
pushf
cmpsl
sahf
je
xchg
cmp
enter
push
push
add
insl
jle
push
sahf
xor
xchg
dec
sti
int
add
mov
insb
out
fcoms
sub
lcall
dec
push
and
pop
sbb
push
outsl
or
pop
sbb
xorl
pushf
inc
xor
inc
add
or
adc
js
push
stos
and
stos
mov
adc
sub
insb
xor
dec
test
mov
fwait
mov
inc
and
add
int
ljmp
popf
cmc
push
adc
inc
gs
xchg
movsl
scas
pop
and
fdivr
lds
in
loop
into
push
mov
sub
sahf
fistps
jle
jg
jno
je
sub
xchg
dec
or
xchg
stos
std
pop
popf
scas
adc
insb
inc
shrl
and
jb
popa
push
mov
dec
sub
jecxz
add
jp
mov
inc
dec
lea
pop
jg
je
sub
xchg
sahf
mov
dec
repz
sub
hlt
cltd
jo
testl
imul
aad
push
push
mov
loopne
imul
inc
pop
out
cmpsb
cltd
stc
inc
jle
mov
popl
mov
push
inc
jns
inc
into
xlat
xchg
xchg
mov
hlt
jmp
loop
pop
jne
arpl
inc
sub
cmp
fs
loop
add
imul
and
bound
or
dec
jno
sub
push
data16
inc
aas
mov
sub
gs
aam
lods
push
dec
mov
sbb
lock
sbb
mov
push
in
out
xorb
dec
hlt
jae
adc
rcl
push
sbb
test
cmpsb
iret
jns
sub
xor
jo
or
mov
mov
xchg
push
out
in
js
movb
into
jge
popa
divb
movsl
mov
in
jns
xchg
lods
cmp
xchg
outsb
test
adc
mov
mov
mov
lds
xor
call
sub
add
xchg
or
hlt
dec
int
jecxz
fs
dec
jae
mov
loopne
mov
cmp
movsl
mov
testl
dec
scas
jle
xlat
shll
sub
inc
fsubl
add
stc
ror
mov
xchg
pop
fs
mov
daa
jle
inc
sub
mov
popa
jecxz
lds
mov
cmc
les
std
pushf
ljmp
cmp
inc
mov
cwtl
inc
bound
push
inc
fwait
mov
fs
dec
fsubrl
sub
jae
lods
scas
loope
push
mov
mov
scas
aaa
inc
shrb
xchg
call
arpl
cmpsl
mov
sarl
outsb
pop
das
shlb
jbe
rclb
adc
ficoml
pop
sub
cmp
pop
and
push
dec
mov
out
lods
scas
pushl
mov
inc
test
push
pop
pushf
in
leave
fidivrs
popa
in
inc
cli
jbe
repnz
jmp
xchg
hlt
push
sbb
lret
jb
mov
adc
dec
mov
jne
cmc
dec
cmp
cs
xchg
adc
mov
dec
fsubs
mov
inc
aad
jbe
arpl
aad
cmp
scas
pusha
movsb
cmp
sahf
xor
insb
outsb
mov
stc
dec
mov
bound
xchg
xchg
movsb
int3
jmp
or
mov
xor
shlb
testb
pop
and
mov
lcall
cmp
pop
xchg
add
dec
push
ror
push
pop
mov
xor
pop
test
rorl
or
aaa
xlat
aad
cmp
cmp
jmp
pop
or
add
sub
adc
pop
lds
inc
mov
cs
cwtl
fldenv
popa
sbb
mov
lcall
bound
arpl
inc
cwtl
fdivrl
sub
xchg
outsl
mov
jmp
pop
testb
jo
xchg
mov
rcrb
mov
int
add
xchg
aam
sub
lahf
orb
xor
aas
inc
mov
xor
jae
mov
scas
repnz
push
mov
xchg
fbstp
xchg
mov
movsl
sbb
push
pop
jns
mov
mov
lret
arpl
fsubrs
mov
cli
mov
xchg
ret
cmpsb
movsb
dec
add
shll
and
loope
in
jnp
xor
jns
cmp
sbb
fdivl
dec
mov
insb
out
xor
xchg
sbb
clc
push
ds
and
outsb
outsl
nop
jge
ret
test
cmc
dec
ret
pop
xchg
nop
push
orb
sbb
out
sub
xchg
in
repz
mov
stos
scas
insl
jl
ja
mov
scas
jle
pop
addl
jp
pop
jo
clc
mov
mov
cwtl
mov
add
lcall
jb
and
and
pop
jle
mov
gs
push
clc
inc
mov
mov
insb
push
mov
xchg
push
cmp
xchg
push
xor
xor
stos
popa
dec
stos
xchg
or
xchg
mov
subl
adc
push
jnp
decb
inc
movsb
and
mov
dec
add
fsubs
push
mov
stc
dec
adc
rcrb
mov
insb
fsubp
or
pop
mov
pushf
out
scas
cmp
lods
lods
imulb
or
fildll
mov
cmc
add
out
xor
push
dec
or
aas
and
mov
in
sub
movsb
les
xchg
pop
add
and
add
push
push
int
sub
jl
sub
mov
fdivl
add
jl
inc
stos
push
scas
cmp
mov
insl
loopne
jne
aam
pop
add
mov
pushf
js
sub
imul
and
adc
sub
jl
inc
mov
jge
mov
xchg
jle
xchg
or
dec
rol
in
mov
nop
jbe
je
inc
mov
call
adc
add
push
sbb
mov
mov
add
lret
xor
in
mov
aaa
mov
pop
sbb
inc
ja
rcl
mov
loop
mov
repz
insl
and
pop
arpl
mov
add
enter
ds
repz
adc
call
out
lods
push
mov
push
cmp
out
push
pop
lods
popa
bound
add
fwait
shrl
pop
ret
leave
add
je
ret
mov
loop
pop
loope
fcomip
cmp
data16
and
jmp
fistl
js
fidivrl
daa
imul
fucomp
fisttpl
or
fstl
subb
sbb
and
mov
mov
fistpll
rol
sub
or
sbbb
icebp
sbb
cmp
mov
test
mov
ljmp
mov
xor
mov
jg
and
push
int
int3
insl
lock
or
mov
and
jno
outsl
dec
clc
or
lcall
xchg
mov
arpl
mov
andb
mov
mov
lods
rcr
mov
push
imul
iret
repz
jo
mov
jno
mov
push
add
lahf
cmpsl
mov
cmc
in
imul
mov
popf
cmc
test
mov
push
add
mov
sbbl
mov
dec
or
add
push
mov
dec
push
jns
xchg
jp
adc
jecxz,pn
repz
push
xor
iret
addl
gs
fs
mov
or
jecxz
in
cwtl
cli
shlb
inc
fcompl
push
add
scas
push
push
mov
inc
inc
lahf
loope
out
cmp
out
mov
enter
popa
lret
mov
into
mov
repz
cmc
mov
or
sbb
jge
xorb
sbbb
lock
xchg
lret
inc
mov
cmp
pop
daa
lds
in
xor
insl
add
mov
or
push
push
cmp
jno
imul
sub
fs
sub
clc
add
lcall
movsb
xchg
cld
inc
mov
lret
add
out
pop
out
or
sbb
push
sub
push
or
pop
sub
ret
adc
enter
push
pop
clc
popa
inc
cs
cld
xor
sbb
in
fadds
test
shrb
lahf
dec
js
fidivrs
mov
cltd
or
repz
cmp
xor
enter
xchg
xchg
daa
or
jne
mov
fnsave
and
xor
inc
loope
sbb
aad
inc
jb
lds
andb
outsb
int3
pop
xchg
in
and
jge
lret
sub
xchg
inc
xchg
sbb
inc
mov
mov
mov
daa
pop
jae
add
cwtl
ljmp
mov
in
sbb
loope
pop
pop
stos
sarl
addr16
add
arpl
stos
repz
scas
fwait
mov
dec
mov
dec
shlb
gs
popa
pusha
pop
jb
mov
jmp
push
xor
sub
bnd
pop
mov
dec
out
xchg
hlt
in
out
cmpsl
push
shll
out
mov
dec
sbb
mov
ret
or
xchg
cmp
repz
insb
std
bound
push
jno
pop
popf
mov
add
mov
cmp
or
pop
jae
push
cmp
out
pop
in
xchg
dec
movsl
dec
out
aaa
aad
test
adc
loop
test
shlb
cmc
repz
sub
jge
lods
mov
pop
mov
jle
pop
push
test
ret
out
cmp
or
ret
adc
sti
dec
bound
repnz
stos
sbb
push
sub
dec
push
mov
pop
adc
aas
sbb
mov
mov
and
xlat
int3
lahf
jne
and
jecxz
ret
sbb
and
insb
pushf
xchg
mov
pop
icebp
mov
in
mov
cmp
mov
mov
das
jbe
fistps
inc
out
sub
mov
sub
push
pop
outsl
int
repz
mov
bound
pop
sbb
popf
pop
flds
mov
add
push
adc
add
add
mov
xchg
mov
les
subps
popa
jne
cmp
mov
dec
cltd
loopne
das
dec
adc
mov
movsl
or
hlt
sub
mov
test
mov
or
rolb
fcmovu
popa
sbb
loope
dec
or
or
pop
test
and
and
or
in
xor
repnz
stos
pop
repz
xor
push
and
hlt
scas
xor
push
into
add
shrl
or
sbb
add
pop
add
xchg
sti
arpl
sub
bound
enter
sbb
sub
mov
daa
ret
imul
dec
add
mov
dec
cld
insl
adc
mov
outsl
icebp
xor
xor
fs
out
push
or
subl
idivb
insb
ret
out
push
mov
mov
mov
lret
mov
and
mov
jne
and
mov
outsl
bsr
sbb
movsl
pop
lods
sahf
dec
mov
iret
cmp
aas
fistl
aam
or
imul
loop
xor
test
push
inc
leave
scas
xor
lret
and
lahf
sbb
ret
std
icebp
add
cld
jnp
ljmp
xor
pop
fsts
xor
and
rclb
test
inc
out
or
cltd
push
call
lods
ret
mov
jecxz
int
lods
test
sbb
adc
jnp
fdivs
mov
cmp
stos
int
mov
clc
shl
pop
cmpl
popa
jnp
mov
mov
adc
in
mov
lea
jl
mov
es
and
xchg
pop
or
and
iret
sbb
outsb
sub
stc
pop
xlat
inc
aam
movb
roll
frstor
pop
mov
mov
cmpsl
push
adcl
cmc
xor
ja
les
inc
ja
mov
adc
sbb
leave
jecxz
rcll
mov
fsubl
into
outsl
sub
add
bound
xchg
mov
pop
dec
ret
sti
xlat
push
icebp
mov
dec
jmp
adc
and
test
je
shll
test
pushf
xchg
cmp
popa
test
push
xor
mov
jb
sbb
or
inc
inc
jecxz
shrl
pop
mov
push
imul
inc
out
add
mov
lcall
daa
rorl
sbb
pop
mov
nop
or
xor
add
cmp
insb
dec
jne
bound
dec
icebp
add
stos
mov
sbb
mov
fsubrs
push
pop
cli
iret
sub
ss
or
cmp
scas
jno
hlt
xchg
pop
stos
sarl
js
mov
sbb
insl
jg
jno
mov
aad
lret
hlt
dec
xor
scas
fsts
mov
inc
xor
xchg
inc
pop
xchg
pop
or
or
adc
jle
xor
dec
jb
fdivrl
ret
leave
loopne
add
xchg
dec
out
std
shrb
jb
or
mov
jl
jo
cmp
sbb
mov
test
and
mov
imul
adc
and
inc
mov
aas
push
add
lcall
imul
or
mov
outsl
scas
outsb
sti
das
mov
cmp
dec
jno
das
retw
fcmovb
dec
mov
out
imul
mov
push
and
add
pop
sbb
xchg
repnz
data16
mov
pop
mov
cmp
stos
jl
idiv
cmp
mov
push
pop
stc
in
inc
cmpsb
mov
mov
insb
or
in
fstp
xor
loope
rep
dec
ror
test
xor
iret
pop
sarb
mov
jno
adc
mov
daa
jb
mov
xchg
dec
pushf
loopne
lods
cmp
jp
add
movsl
add
aad
push
xor
scas
jne
test
push
repz
out
ret
data16
push
inc
or
xchg
lret
stc
xor
dec
xor
mov
mov
and
fsubrp
xchg
out
rorl
mov
gs
jo
xchg
fdivl
jnp
and
pushf
leave
ja
mov
jns
mov
mov
or
cld
mov
icebp
pop
push
int
xor
out
xor
lret
xchg
fldt
xchg
mov
cmp
or
cmp
stc
xor
xor
dec
insl
xor
sbb
cmp
pop
js
push
and
and
dec
scas
fwait
aam
mov
jmp
adc
shrb
inc
jno
sbbb
repnz
dec
std
push
jecxz
ljmp
loopne
mov
flds
lea
push
in
pop
scas
and
sub
iret
adc
xchg
dec
bound
mov
std
loopne
or
das
mov
xor
rclb
iret
bound
mov
in
aas
test
push
jae
call
pop
mov
mov
out
fidivrs
push
pop
jno
cmp
fstcw
and
pushf
inc
pop
and
mov
sub
cltd
fwait
loope
cmpb
insl
cmp
mov
push
mov
hlt
cmp
mov
sub
jbe
dec
fidivrs
les
add
out
jg
popf
out
enter
fidivrl
mov
mov
sub
sbb
out
jp
and
mov
xchg
test
scas
lret
leave
imul
jae
xchg
vfrczps
loopne
jle
lods
push
fucomip
mov
cli
jecxz
ret
bnd
stos
push
add
jns
bound
jg
or
and
sub
pop
and
xor
xchg
stos
pusha
pop
mov
push
loope
sub
dec
pop
cmp
mov
dec
out
sarb
loopne
fs
pop
xor
lcall
dec
push
jge
lods
ret
jo
insb
repnz
aaa
mov
fmuls
push
xchg
lods
and
jns
in
pop
enter
mov
jmp
imul
and
jmp
mov
sub
aaa
lods
popa
jg
push
cmp
fimuls
sbb
mov
mov
mov
mov
mov
mov
sbb
mov
ret
rcrl
xchg
mov
shlb
and
pop
in
cwtl
mov
push
mov
push
push
dec
cli
outsl
lret
mov
dec
loop
fbld
jge
jno
lods
mov
cmpsl
mov
push
pushf
pop
repnz
add
xchg
ss
cmp
mov
stos
test
int
aam
inc
dec
pop
cmp
jno
ret
fdivs
testl
or
mov
add
adc
insl
adc
or
sub
or
mov
lcall
jns
dec
out
lea
inc
data16
mov
out
inc
sbb
jb
lods
mov
fildl
lock
cmp
jge
mov
stos
repnz
inc
pop
fistps
push
imul
add
push
into
out
aas
test
movsb
in
adc
mov
dec
and
pop
leave
mov
cmp
hlt
sub
repz
pop
pop
mov
mov
add
sti
inc
inc
sub
mov
add
repnz
jbe
pop
lahf
add
add
out
rcl
insb
push
mov
xchg
repz
xchg
mov
push
push
cmpsb
cmp
xchg
dec
adc
or
out
ret
cwtl
mov
xchg
xor
dec
call
pop
or
push
pop
jns
xchg
shrl
test
cmp
dec
fwait
dec
add
lock
rcr
adc
in
outsl
xor
pop
jnp
mov
or
lods
clc
adc
ja
or
sbb
es
sbb
inc
rolb
xor
add
test
add
in
js
mov
fdivl
clc
arpl
pop
mov
andb
pop
add
jp
iret
sti
inc
loopne
aas
es
data16
pusha
out
inc
mov
add
call
mov
mov
mov
icebp
xlat
push
xchg
daa
ljmp
aas
dec
push
and
sarb
xchg
sub
movsb
sarb
mov
push
fiaddl
xor
pop
mov
pandn
or
sti
adc
inc
aam
mov
add
or
aas
sbb
mov
jmp
jp
nop
sbb
dec
and
or
ffree
jo
cld
cmp
xor
or
mov
pop
out
or
cmp
loope
jnp
pusha
pop
jb
add
stc
imul
mov
gs
fsts
aas
fs
xor
lret
add
xor
mov
push
jmp
dec
lods
das
adc
aad
stos
sbb
ja
insl
scas
repz
adc
push
push
push
jb
sbb
add
or
xor
adc
add
fnsave
jbe
nop
push
mov
jl
inc
orb
mov
imul
mov
addl
les
xchg
adc
dec
mov
mov
clc
cs
add
push
cmpsb
dec
xchg
js
push
push
jne
lds
fcoml
cmp
pop
imul
pop
xchg
sub
mov
negl
mov
sub
push
lcall
arpl
pop
jmp
push
and
fcmovnu
out
mov
rcl
inc
out
pop
jge
sbbb
popa
loope
mov
sbb
and
dec
loop
xor
xchg
rclb
lock
xchg
lcall
mov
imul
int3
mov
aaa
clc
stc
jnp
mov
push
popa
scas
jno
ljmp
mov
pop
sbb
imul
adc
and
push
mov
loope
cmp
shlb
rcll
jbe
hlt
das
repz
icebp
test
adc
jmp
icebp
sbbl
pop
std
jmp
mov
rcll
push
sub
aas
inc
ljmp
bound
xchg
fisubs
cmpsl
xor
inc
dec
xor
popa
lahf
inc
ljmp
call
and
xchg
cmpsl
je
sub
fldt
arpl
push
jne
cs
sub
jp
sub
lods
aas
mov
fwait
das
dec
fnsave
inc
mov
pop
das
mov
jbe
clc
aas
mov
pop
add
pop
arpl
mov
and
xor
push
fbld
icebp
out
pop
pop
subb
add
cmp
into
jne,pn
or
loope
xor
mov
js
js
loop
lcall
jns
push
scas
fstl
mov
lock
test
pushl
in
mov
sub
fcmovb
lahf
dec
aam
decl
pop
cmp
jno
lret
push
lea
pusha
mov
cmpsl
push
inc
mov
inc
lahf
fidivl
cmpsb
les
ret
pop
out
inc
icebp
pusha
xor
lcall
pop
cmp
ljmp
testl
dec
jp
stos
lret
popf
push
divl
jns,pt
addr16
push
ljmp
inc
jmp
inc
rcrb
imul
sub
ja
call
sub
inc
gs
xor
ret
add
jno
fwait
and
pop
fsubl
inc
mov
sub
addr16
mov
jbe
shll
out
xchg
adc
ja
jae
sbbb
imul
xchg
sub
mov
and
jle
hlt
cld
sbb
xor
mov
mov
popa
sbbl
mov
mov
mov
adc
mov
imul
xor
inc
jae,pn
mov
xchg
ss
xchg
mov
inc
push
rdtsc
lahf
loope
daa
xor
lods
out
ljmp
sbb
popa
xchg
insl
es
jp
push
scas
rcll
popf
cmp
xor
dec
mov
pop
into
dec
xlat
fldl
jl
in
lods
lods
push
notb
in
inc
xor
mov
pusha
andl
pushf
dec
push
out
cs
aaa
inc
inc
add
xor
fiadds
and
xchg
lods
adc
inc
imulb
xchg
fistl
out
jge
aaa
mov
jb
xchg
mov
add
test
xor
repnz
aas
mov
xorb
cld
pop
mov
jge
rolb
push
sbbb
and
jb
pop
dec
inc
imul
es
ret
orb
pop
sbb
mov
outsb
jge
repz
mov
mov
mov
and
decb
cmpsb
mov
inc
adc
add
rcl
mov
mov
dec
outsl
outsl
push
mov
dec
jno
adc
arpl
lret
inc
push
jbe
fstpl
daa
adc
insb
xchg
pop
mov
ss
pop
hlt
xchg
out
adc
sub
push
es
xchg
and
rclb
push
fwait
loope
and
and
push
xor
imul
pop
pop
sti
repnz
cmc
cmp
and
lock
sub
or
leave
daa
iret
xchg
dec
bound
add
and
xor
in
fst
pop
add
adc
mov
fldcw
jo
mov
fdivr
hlt
push
std
pop
insl
aaa
pusha
mov
aas
fstl
or
add
dec
cmp
outsb
lea
stos
sbb
notl
rcrb
cs
loopne
dec
push
mov
out
test
jae
aas
push
fwait
xchg
sbb
mov
sar
lahf
mov
push
inc
lods
fbstp
outsl
leave
les
sti
sbb
insb
inc
push
ss
xchg
fwait
push
xchg
sub
or
out
std
gs
mov
mov
in
dec
fistpl
push
shll
jle
xchg
push
aad
sub
xchg
pop
out
pop
test
rolb
cmp
pop
aaa
sbb
rcrb
jnp
in
test
mov
xor
xchg
mov
sbbl
and
fiaddl
add
xchg
pop
pusha
mov
cli
ljmp
insl
xchg
pusha
ss
scas
mov
cmpsl
or
adc
jns
pop
stos
lods
test
outsl
fisubrs
ljmp
ss
sbb
sub
fyl2x
jo
mov
sub
adc
or
sti
data16
insl
testb
cmp
cmp
ljmp
out
sbb
std
mov
pop
adc
mov
cltd
push
mov
pushf
iret
add
cmp
inc
dec
mov
in
pushf
mov
mov
pop
xchg
jb
data16
pusha
jp
or
loop
sub
adc
into
das
push
cmc
xor
repz
xchg
decl
lahf
mov
push
ret
cwtl
pop
outsb
cmp
imul
inc
ljmp
shl
pusha
xchg
jo
pop
mov
lods
imul
xor
test
pushf
rclb
dec
jnp
cltd
mov
xchg
pop
add
mov
aas
addr16
and
outsb
loopne
cwtl
cmp
aaa
es
rcrb
xchg
sbb
sub
insl
dec
xor
pusha
xor
mov
sbb
pandn
xchg
dec
out
fwait
cmp
adc
push
mul
push
leave
mov
jbe
jecxz
add
dec
or
cmpb
push
rcrl
out
stc
lea
decb
xchg
inc
mov
sbb
lods
xchg
pop
or
add
mov
or
xor
mov
and
and
mov
lock
sub
jle
xor
lods
sub
out
jg
mov
mov
jle
push
daa
jno
push
testl
mov
stos
and
es
push
test
inc
aas
cmp
push
clc
repnz
lret
or
push
mov
push
int3
das
gs
mov
es
inc
xor
cmpsb
pop
dec
sbb
lcall
sub
xlat
les
fnstcw
int3
je
sbb
xor
pop
inc
daa
addb
inc
xor
rcl
push
sub
push
fwait
mov
add
jge
sbb
enter
pop
cmp
leave
pop
clc
lahf
push
insb
adcb
inc
mov
pop
dec
ret
ret
lret
pop
or
xorl
pop
negb
cli
int3
call
ljmp
cmp
sarb
xor
insl
cmp
sbb
stos
cmp
inc
into
aaa
shl
repz
jg
dec
sbb
ds
dec
xchg
fwait
aaa
xor
imul
out
out
jp
sub
notb
dec
and
lods
sub
push
jb
dec
add
dec
xchg
lods
ficompl
call
adc
add
xchg
jg
and
inc
test
mov
push
inc
push
outsl
sbb
aam
insl
pop
adc
xchg
lods
imul
add
pop
dec
psubq
xchg
xchg
iret
adc
xor
xchg
or
pop
popf
push
movntps
push
enter
mov
mov
lcall
inc
enter
xor
mov
mov
add
pusha
or
clc
scas
xor
sbb
mov
fstpt
aas
xchg
sub
ljmp
popa
dec
sbb
fwait
sub
lods
clc
fldcw
push
leave
push
or
jbe,pt
and
jmp
mov
ss
mov
inc
das
imul
shrb
cmpsl
popa
cs
mov
cmp
or
jno
fnstsw
add
pusha
imul
mov
mov
jae
inc
sub
mov
xchg
mov
mov
jne
outsl
pop
mov
xlat
adc
js
add
das
mov
aam
mov
mov
adc
add
sub
mov
mov
sbb
fs
leave
lret
fsubrl
js
xor
call
mov
ret
sarl
cmp
fwait
sbb
push
or
jge
push
lods
pop
adc
mov
add
adc
cmp
sahf
scas
push
aas
push
shr
push
lret
ret
and
sbbb
push
cmpsl
insb
repnz
jno
push
mov
loope
xor
mov
push
icebp
iret
incl
vmwrite
mov
testl
mov
push
iret
les
or
dec
dec
xchg
fucom
pop
fdivrl
xchg
cmp
nop
and
sub
dec
insl
xor
sbb
mov
xor
mov
xchg
xor
std
inc
mov
xchg
cmp
inc
mov
xlat
ljmp
shlb
leave
sbb
mov
inc
pop
iret
lds
pusha
pop
mov
xchg
jae
push
sarl
jne
pop
das
inc
push
pop
aaa
xor
sub
incb
in
adc
xchg
inc
clc
scas
adc
sarb
adc
stos
xchg
push
jmp
movsl
inc
jp
movsl
lods
jo
gs
call
pusha
lcall
ficompl
ds
xor
sar
add
lods
hlt
mov
dec
mov
pop
mov
mov
lret
lret
inc
mov
dec
loop
lret
repz
gs
pop
mov
sbb
pop
push
rcrl
add
sub
les
mov
jge
cmp
out
pop
cld
xchg
xchg
pop
xchg
sbb
scas
test
adc
shll
aad
fnstsw
sbb
cmp
in
pop
sub
jbe
mov
jl
mov
mov
in
sarl
mov
test
insb
imul
bound
ror
push
jb
fists
leave
enter
imul
fsubrl
les
xchg
popa
xlat
push
mov
jnp
shrb
in
pop
jb
incb
fwait
push
clc
xor
and
jg
adc
scas
out
lods
je
loopne
stos
dec
icebp
outsl
xorb
scas
icebp
push
subl
movsl
cmp
jno
testb
pusha
sub
or
mov
jp
dec
in
int
pop
push
mov
fstps
push
insl
movsl
xchg
dec
inc
shrb
push
das
mov
rolb
dec
jne
aad
xchg
ljmp
repz
neg
sbb
mov
bound
dec
cld
mov
popf
xor
sti
outsl
or
loop
sub
rcrl
mov
dec
sub
mov
jg
inc
jp
and
xchg
push
les
fwait
imul
jbe
clc
rcrb
ljmp
xor
mov
xor
shl
push
clc
sti
xchg
insb
mov
lret
sbb
in
nop
iret
std
cmpsl
scas
call
sahf
add
lcall
mov
cmp
mov
movsl
mov
dec
cmpsb
and
jg
inc
xchg
mov
cwtl
dec
or
push
push
sub
int
popa
sbb
jg
or
decl
pop
aad
insb
jmp
xchg
pop
xchg
fstl
fmull
fwait
lret
in
pop
push
pop
mov
mov
dec
jp
lret
xor
hlt
das
js
pop
xor
adc
pop
out
dec
and
push
pusha
cltd
sub
aam
call
divb
inc
call
test
pop
ret
mov
or
insl
ss
dec
add
mov
test
push
adc
daa
mov
xlat
shlb
scas
js
mov
scas
cmp
push
nop
cmp
dec
aas
faddl
pop
mov
mov
cmpsl
cmpsl
mov
dec
mov
divl
mov
insb
xchg
cmp
test
sti
adc
mov
lock
mov
mov
ret
dec
sti
movsl
lahf
push
inc
lahf
fcompl
push
cmp
out
pop
inc
or
fcoml
mov
mov
cld
push
xor
cmpsb
adc
mov
out
fdivrp
inc
int
out
aas
sbb
jle
mov
cmp
test
ror
lahf
cmp
adc
mov
jg
loope
cwtl
and
notb
dec
sub
clc
jle
mov
ljmp
and
push
stc
imull
out
pop
and
xchg
xor
push
call
adc
push
inc
or
rcl
out
imul
jnp
lods
outsb
fsubs
add
mov
sub
jno
mov
fnstenv
popf
cltd
push
fmul
pop
jno
push
jbe
sub
push
sbb
jp
or
mov
and
in
test
ja
shll
and
fxam
scas
fidivrl
push
xor
lds
sarb
loopne
pop
scas
hlt
mov
leave
sub
out
push
pop
outsb
dec
adc
push
jmp
push
pop
cmp
test
inc
inc
icebp
divl
mov
mov
fisubrs
dec
ret
movsl
das
clc
aam
mov
sahf
push
gs
push
xor
add
mov
cmc
fwait
dec
lock
add
clc
cmp
imul
decb
out
fstpl
ljmp
xchg
faddp
mov
imul
repz
out
lret
and
inc
push
hlt
jle
xor
stc
and
repz
or
add
sbb
inc
popa
dec
out
mov
cmp
cs
pop
lea
adc
rolb
pcmpgtw
pop
fiaddl
ja
lods
pop
push
jge
pusha
scas
jo
sahf
sub
mov
jmp
mov
xor
imul
scas
push
inc
pop
lahf
adc
das
dec
xchg
popf
mov
lret
mov
lea
inc
dec
jbe
fwait
push
loopne
xchg
cmp
shrb
mov
lcall
scas
aas
push
ud0
fisttpll
pop
mov
or
pop
xchg
cwtl
sar
xor
ja
rorl
scas
ja
in
pop
sub
mov
sub
adc
push
into
mov
daa
call
dec
push
ja
sahf
sbb
or
scas
pop
jno
stos
call
andl
int
push
inc
xchg
cmp
pop
jg
bound
jecxz
pop
xchg
pop
sbb
outsb
and
lret
lahf
or
add
ret
leave
scas
sahf
mov
add
push
popa
and
orl
je
xchg
movsl
out
mov
dec
inc
lods
sarb
mov
push
nop
adc
inc
cltd
rep
test
mov
daa
mov
leave
add
push
scas
cmp
or
pop
cmpsl
xchg
orb
pop
sub
movsl
shlb
imulb
popa
out
or
lahf
pop
add
sbb
cmpb
mov
enter
or
pop
lahf
das
std
mov
mov
rorl
jge
mov
int3
enter
and
js
in
mov
dec
mov
adc
clc
pop
push
repz
or
dec
int
cld
mov
add
mov
or
aaa
push
sub
add
aam
scas
loope
jle
cli
and
mov
jg
repnz
or
rolb
pop
pop
cmp
out
cmp
pop
mov
dec
add
mov
xor
push
lock
testl
rol
add
sahf
stos
lods
sahf
mov
lahf
jle
outsl
insb
es
and
adc
xchg
lret
xlat
pop
mov
cmp
push
out
sbb
mov
and
leave
xchg
das
repz
push
shlb
pop
inc
jge
dec
out
lcall
push
lock
pop
add
ljmp
lods
dec
lock
fadd
pop
mov
pop
cmp
cmp
lahf
mov
inc
and
shlb
scas
fnstcw
fists
lcall
or
cmp
mov
mov
mulb
jnp
adc
mov
xchg
or
jg
mov
and
aaa
fbstp
shrb
aas
or
loop
lds
jmp
adc
enter
sbb
jno
addr16
push
push
sub
sub
and
mov
out
mov
test
mov
and
adc
cmp
shll
popa
lret
xchg
cmp
mov
cmp
in
orb
addr16
or
mov
inc
and
pop
nop
lods
jle
jb
add
push
outsb
sbb
fs
adc
lock
sub
loop
sahf
into
negb
add
push
cli
mov
adc
stos
xor
sbb
popf
add
out
adc
xchg
inc
sbbb
pop
mov
ja
loopne
mov
push
mov
dec
out
adcb
mov
aaa
lret
sub
in
pop
nop
sbb
jecxz
pusha
lods
leave
ljmp
out
adc
or
or
mov
clc
fsubl
lods
pop
shlb
cli
push
push
push
cmp
sbb
sub
xlat
pushf
pop
inc
in
psllw
or
pop
insl
dec
in
fcom
cs
xchg
test
jnp
pushf
xor
sbb
lahf
push
cmpsl
stc
adc
out
stos
mov
jmp
dec
sub
add
or
or
inc
stc
call
inc
pop
popf
mov
lret
imul
cmp
lcall
push
jmp
test
repnz
push
xchg
fcomip
mov
xor
mov
mov
push
aaa
push
pushl
adc
adc
add
lahf
jbe
xor
sub
lret
cmpsb
mov
outsb
cmp
sti
mov
fdivrs
lods
scas
bound
loopne
loop
pop
inc
push
out
mov
cmp
loope
xor
out
hlt
fwait
leave
pop
in
js
out
hlt
ret
or
mov
pop
xchg
mov
stos
sub
mov
jg,pt
cs
or
mov
test
mov
sbb
popf
sbb
ss
adc
or
mov
and
cmpsl
pop
push
dec
mov
negb
cmp
jo
mov
stos
adc
cmp
mov
sti
sub
and
sub
bound
pop
notl
gs
mov
sbb
iret
pop
nop
mov
and
inc
pop
lods
adc
dec
and
mov
pop
mov
mov
test
xor
adc
in
std
or
stos
into
cs
into
cmp
enter
push
add
dec
scas
mov
outsb
mov
faddl
movsb
jmp
add
cmp
ret
pop
call
mov
ss
repnz
jo
sub
or
dec
and
mov
xchg
mov
call
or
mov
pop
fimull
lods
cli
inc
rclb
push
dec
imul
inc
jno
imul
sub
aaa
mov
pop
sub
xor
jnp
cmp
es
loopne
mov
and
mov
xlat
jge
scas
sbb
mov
out
mov
into
subl
outsb
sub
xchg
bound
ret
xchg
test
call
or
xchg
fwait
cmpsb
ret
or
into
into
scas
pop
inc
fbstp
inc
inc
rorl
add
mov
and
sahf
sub
jno
lods
adc
xor
xorl
daa
pop
mov
mov
std
popf
pop
mov
imul
push
sbbl
outsb
ror
imul
scas
dec
sbb
jnp
repz
xlat
inc
sbb
pop
aam
dec
adc
sar
lock
out
mov
and
movsl
loope
ret
lea
xchg
lret
lock
xchg
mov
icebp
jge
cmp
cmp
mov
xor
int3
fistpl
dec
ucomiss
pop
pop
cmpsl
mov
sub
das
inc
call
dec
mov
jl
cmp
stos
lods
pop
sti
dec
pop
xor
jae
sbb
pusha
movsl
mov
mul
jecxz
les
mov
xchg
adc
out
push
das
je
xlat
add
loope
test
insb
pop
jns
fucomi
mov
cmp
inc
xor
push
jmp
push
cmp
lcall
jo
xor
adc
sub
mov
jg
mov
inc
sbb
jecxz
sahf
dec
out
dec
stos
cwtl
inc
in
pop
push
push
add
pop
jl
jbe
lcall
pop
adc
pop
jecxz
add
out
sbb
mov
es
cs
imul
jg
mov
inc
push
jne
jns
imul
pop
shll
into
mov
jb
stos
fsub
mov
ret
lret
into
bound
dec
jle
int
sbb
popf
stos
test
add
imul
clc
lods
sub
mov
fildl
popa
pop
cld
and
push
fdivrl
idivb
fists
mov
push
dec
sub
or
xchg
lret
xor
daa
sahf
push
pop
lods
mov
xchg
mov
stos
xchg
jb
push
adcb
fcompl
xor
stos
rcl
stos
cmpsb
scas
or
mov
mov
cmp
inc
pop
jl
mov
in
andl
sub
mov
and
jne
pop
jno
test
clc
sub
jmp
add
idivl
add
shrb
or
addr16
jle
sahf
add
repz
lock
and
shlb
mov
or
je
iret
mov
push
fwait
ljmp
xchg
xchg
pop
inc
outsb
inc
ja
sub
and
movsl
test
mov
int3
subl
mov
xchg
fstps
stos
xor
xor
cmc
inc
mov
scas
inc
fcomp
mov
inc
and
aas
inc
mov
sbb
scas
cltd
out
lret
jge
mov
fucomip
add
cmp
pusha
jns
imulb
movsb
add
jecxz
or
jl
xlat
mov
push
bound
in
mov
fisttpll
imul
daa
loop
mov
hlt
pop
insl
pop
inc
mov
in
mov
in
jnp
insb
repnz
inc
jle
in
sbb
mov
in
scas
pop
sub
cmc
adc
insl
sahf
inc
cmpsl
mov
pop
mov
jle
mov
add
das
xchg
shll
imulb
sbb
mov
in
or
es
out
pop
lahf
sahf
jl
outsb
or
outsb
pop
in
cmovo
xor
xor
mov
aas
out
xchg
push
dec
pop
sbb
mov
jle
jno
incl
shll
add
lods
loopne
adc
dec
sti
mov
int3
test
pop
movsl
dec
lods
mov
adc
int3
push
mov
insb
fldcw
sub
mov
pop
out
push
add
fwait
lret
mov
mov
xor
or
pop
enter
xchg
mov
adc
daa
mov
aas
inc
adc
loope
jmp
arpl
inc
mov
cmp
xchg
push
xchg
pop
ret
leave
ljmp
sub
jge
hlt
jnp
ror
movsb
or
sub
inc
sahf
cld
in
bound
addr16
cltd
jns
pop
cmp
inc
stc
mov
sbb
mov
add
movsl
fldenv
lock
adc
add
mov
lret
lds
sub
adc
fwait
pop
jns
pop
scas
ss
scas
sti
mov
lcall
dec
jmp
aaa
jb
shl
mov
jle
imul
mov
test
fldl
xor
xchg
mov
pop
sahf
lret
xchg
dec
pop
xchg
cwtl
subl
movsb
fwait
xchg
and
int3
lret
xlat
ret
fs
aad
cmp
jbe
dec
adc
add
mov
jl,pn
cld
pop
repz
sbb
pop
ss
call
test
iret
mov
mov
sarl
cmp
aad
or
scas
cmp
dec
jne
mov
outsl
mov
test
jmp
and
pop
inc
mov
cwtl
jge
idiv
jecxz
push
mov
aaa
mov
decb
rcll
out
ss
addr16
loop
jno
mov
shlb
push
and
inc
jne
pop
jae
sbb
dec
scas
call
jmp
scas
jge
add
and
push
sub
dec
mov
push
jg
rorb
jae
movsl
sub
fistpl
das
divl
ja
insb
int
jge
sbb
cs
dec
scas
xor
insl
popa
sub
push
orl
add
mov
into
mov
xchg
dec
loop
or
bswap
dec
int
sub
fstl
xchg
xchg
and
ss
stc
mov
popf
and
sub
cmpsb
and
shlb
outsl
lock
push
jle
jmp
inc
testl
outsl
cmovo
pop
push
pop
xchg
cmp
fsubrs
test
movsl
ja
dec
mov
cli
or
stos
shrl
jae
das
popf
push
cmp
push
inc
sbb
jp
adc
xchg
mov
cmp
out
icebp
sbb
sbb
mov
in
mov
scas
push
mov
call
out
and
ljmp
cmp
fidivl
and
push
xchg
out
push
rcll
or
pop
and
adc
jnp
xchg
leave
incb
mov
pop
push
add
fwait
sub
pop
cmpsb
xor
push
sarl
fmuls
adc
mov
shrb
fisubrl
pop
push
mov
cwtl
add
fcomps
xchg
and
ret
jb
push
in
imul
push
scas
mov
mov
dec
jecxz
cmp
push
mov
outsl
sbb
add
mov
lcall
xchg
cmp
lods
sub
fstpt
jecxz
out
mov
jl
xor
inc
insl
push
push
mov
fdivs
jbe
int
mov
cltd
lods
jg
sbb
and
mov
dec
stc
dec
or
es
and
dec
insb
xchg
inc
loopne
xchg
mov
mov
jg
pop
xchg
inc
movsl
dec
cmp
mov
mov
or
mul
jge
test
xor
pop
popf
cmp
pusha
lea
imul
out
sub
inc
add
arpl
mov
in
dec
outsl
adc
xchg
sub
mov
fcomps
jl
nop
mov
jge
clc
bnd
push
mov
inc
ljmp
mov
out
or
pop
cmp
pop
dec
call
fs
ljmp
jecxz
out
jnp
sarb
mov
scas
hlt
and
repz
xor
jg
mov
mov
mov
cmpsb
in
or
sarl
fadds
mov
fsubrs
sub
dec
push
cli
out
jg
rorl
cmpsb
sbb
into
lods
stos
add
sbb
bound
lret
or
and
movsb
mov
dec
xchg
imul
or
add
mov
mov
cld
cwtl
mov
and
test
mov
push
psubusw
mov
xlat
imul
sbb
mov
inc
shl
mov
mov
outsl
shr
dec
cmpsb
orb
mov
sahf
dec
xlat
push
mov
jl
repnz
dec
xlat
jns
ret
xchg
sub
dec
inc
in
sbb
adc
in
cmp
or
xor
mov
fstpt
mov
sub
sub
jg
lods
adc
mov
pop
pop
pop
in
or
test
inc
ret
inc
mov
pop
adc
jge
shrl
push
mov
subb
cld
push
sbb
dec
addl
imul
jne
mov
sbb
xchg
cmp
lods
mov
mov
loope
xor
fs
push
ret
xchg
iret
fxam
out
add
movsb
fwait
or
cmp
bound
mov
int3
or
push
sbb
out
sahf
popa
sbb
xchg
sub
mov
xchg
dec
cld
jp
mov
popa
cld
out
aam
mov
daa
jae
dec
cmpsb
cltd
adc
inc
pop
imul
jns
scas
dec
pop
xchg
das
leave
or
mov
ss
mov
adc
mov
add
mov
mov
mov
lods
ljmp
aam
ljmp
mov
pop
cmp
test
xchg
das
cmp
cmp
inc
in
adc
xchg
add
outsl
cmp
lods
mov
repnz
mov
sub
fistps
jnp
or
mov
mov
sub
lods
dec
push
fwait
mov
mov
mov
cli
jecxz
subl
jmp
ss
add
inc
mov
push
jle
dec
fs
gs
ret
xlat
inc
dec
in
ret
pop
gs
or
sti
insl
ret
push
movsb
mov
out
jmp
fdivrs
repnz
jecxz
sub
imul
push
mov
mov
daa
pop
ss
movsb
mov
lahf
or
je
jp
clc
cmpsb
pop
test
pop
sbb
movsl
test
adc
sub
sub
gs
stos
mov
stc
and
scas
adc
mov
inc
rol
shl
lods
mov
repnz
xor
iret
cmp
mov
out
mov
addl
sub
add
sbb
imul
xchg
mov
xchg
sbb
dec
lods
xchg
sub
stos
sbb
mov
dec
rcrb
xchg
cmp
ljmp
pop
or
pop
arpl
and
pop
stos
movsb
mov
pop
jl
arpl
jp
xor
pop
cli
xchg
pop
je
dec
lods
ss
shl
loop
or
ss
xor
cli
push
shr
sbb
pop
mov
stos
clc
fbld
int3
xorb
cmp
and
stc
dec
icebp
xchg
push
popf
dec
inc
mov
push
mov
pop
mov
in
scas
in
loop
out
inc
adc
or
sub
mov
in
mov
nop
lods
push
lcall
fwait
repnz
mov
fisttps
sub
aam
out
dec
push
sahf
xchg
xchg
stos
loope
or
cmp
in
push
cmp
mov
push
adc
loopne
stos
leave
es
add
subl
cmpsb
sbb
je
cmp
push
call
enter
stos
ds
fwait
and
lds
pushf
gs
lret
or
add
adc
pop
nop
jl
pop
jnp
jg
inc
sarb
das
push
jnp
aam
inc
repnz
cmpsb
test
jecxz
jne
pop
adc
test
xchg
popf
divb
gs
jae
xchg
out
popf
sub
enter
cmpl
push
cmovne
dec
xchg
xchg
mov
jb
js
pop
cmpsb
imul
cmp
sbb
pop
pop
int
std
shr
jae
dec
sbb
sbb
pop
push
mov
pop
lods
lods
jl
or
jl
push
rorl
adc
jmp
xchg
xor
mov
xchg
negl
es
sub
lods
sub
xchg
andb
push
sbbb
mov
jmp
ds
fildl
scas
fdivs
les
imul
lds
iret
inc
and
and
mov
mov
adc
mov
rcll
stos
test
cs
lods
bound
xor
adc
stos
mov
les
bound
add
test
push
lods
sub
fsubl
pop
ss
xor
cmc
repnz
aad
in
xor
mov
mov
test
pop
inc
cwtl
lcall
rcll
cld
fbld
mov
lcall
xchg
insb
shlb
aad
cmpsb
in
add
adc
or
icebp
xor
dec
test
xlat
sub
pop
xor
adc
push
inc
adcl
pop
cld
or
stos
ja
mov
leave
push
stc
ljmp
adc
sti
ud2
or
and
cmp
mov
mov
adc
xor
or
das
fistpll
mov
stos
adcl
jl
sub
mov
mov
mov
cmpsl
cli
xchg
fisubl
inc
cmp
and
aaa
mov
shrb
pop
cmp
bound
nop
jl
sub
fbstp
call
pop
xchg
add
loopne
jg
pop
jmp
cli
xor
inc
jecxz
sub
sub
mov
push
mov
xchg
imul
adc
stos
mov
sub
jae
jge
dec
pop
in
add
loopne
rorb
in
xor
add
pop
aas
stos
lds
cmp
push
es
pushf
mov
cmovo
outsl
ja
shl
inc
mov
sbb
lret
lods
imul
mov
pop
fists
mov
xchg
pushf
fistpll
dec
mov
subb
cmp
jbe
inc
sti
push
aam
mov
and
out
cmp
imul
sub
les
mov
test
aas
push
lods
mov
pop
mov
fiadds
stos
dec
in
push
out
push
adc
rclb
xor
pop
xlat
icebp
jno
add
shll
xlat
cmp
jmp
imul
cld
js
fmull
fwait
push
cltd
push
mov
sbb
hlt
mov
leave
pop
leave
fildl
jle
push
push
mov
pop
mov
std
sbb
dec
fcom
fs
stos
sbb
jb
fisttpl
xor
in
adc
fwait
pop
cmp
aaa
loope
test
push
mov
fimuls
push
and
rcrl
sub
aaa
std
repnz
pop
test
test
xor
pop
ljmp
inc
push
cmp
ja
sbb
test
cmp
cli
lret
push
in
add
pop
in
dec
cmpsl
mov
fcmovb
pop
mov
mov
xor
jne
dec
nop
inc
aad
xchg
cwtl
xchg
ret
imul
cmp
xchg
inc
push
dec
es
xchg
sbb
pop
dec
daa
adc
es
insb
mov
fsts
add
mov
int3
add
inc
add
and
or
mov
xor
adcl
xor
push
shr
or
mov
lock
sub
push
popa
sub
ljmpw
fdivrl
mov
ds
scas
xor
sub
loopne
lods
les
adc
mov
aaa
movsb
xchg
jae
add
adc
ss
stos
insb
pop
sub
dec
call
das
cmp
or
inc
sub
xchg
or
test
push
outsb
add
dec
jnp
loopne
mov
sub
ret
js
aam
loope
pop
mov
insl
mov
pop
movsl
outsl
in
int
hlt
jmp
push
sti
sahf
cli
sub
push
lods
insb
scas
lcall
push
or
mov
iretw
xor
mov
sbb
xchg
addb
ret
pop
inc
sbb
test
push
stos
or
pop
sub
xlat
rol
mov
shlb
ss
jecxz
sbb
aas
mov
les
inc
xor
sahf
stos
jbe
insb
and
cmpsb
or
test
test
pop
cmp
cld
add
jl
scas
fs
dec
pop
clc
pop
jno
mov
cmp
cmc
mov
dec
xchg
addr16
mov
xor
mov
xchg
das
inc
in
aaa
jo
mov
pusha
repnz
shll
pop
test
xor
mov
notl
lods
ljmp
decb
jge
idivl
mov
lea
inc
or
inc
hlt
add
adcl
out
lahf
fbld
mov
add
daa
js
scas
push
ljmp
stos
mov
and
cld
and
pop
mov
ds
mov
push
or
cmp
repnz
or
jnp
jbe
subl
and
push
imul
outsl
jb
mov
adc
mov
popa
xchg
inc
inc
call
jb
pop
mov
lock
mov
lret
jp
inc
xchg
push
mov
push
sub
add
mov
xor
pop
add
xor
ret
sbb
in
in
out
je
and
cmp
mov
sub
pop
and
popa
mov
scas
repz
add
lahf
push
int
fucom
inc
mov
scas
leave
mov
push
je
bound
adc
scas
test
in
sarb
mov
xchg
cli
xor
lods
or
add
mov
sbb
and
das
std
cmp
cmp
add
push
push
jg
outsl
subb
inc
pop
xchg
pop
aam
dec
mov
cmp
xchg
outsl
push
push
xor
out
jns
scas
lods
cmp
adc
stos
shlb
aas
add
jmp
rorb
pop
out
mulb
sub
add
sbb
xchg
pop
in
loop
xor
bound
test
cli
sbb
ds
sahf
fs
xor
push
cmp
add
mov
mov
pop
sbb
inc
jbe
xchg
loope
fistps
dec
cmp
mov
mov
loop
push
xchg
jb
adc
xor
pop
add
push
jle
sub
ret
aad
nop
das
xchg
cmp
jmp
les
mov
movl
mov
and
adc
adc
add
lods
ret
xchg
inc
cmp
test
fstpl
mov
fwait
es
xchg
inc
push
push
xor
test
aad
jmp
mov
lods
stos
test
lods
inc
cld
imul
aas
lds
outsl
xor
or
and
pushf
sub
andb
in
js
mov
push
sbb
int3
push
cli
add
rolb
pop
inc
and
push
mov
test
fdivrs
jge
loope,pt
add
in
dec
setno
test
ja
int3
cmc
mov
mov
dec
sahf
lock
jl
mov
add
cmp
sbb
lods
sbb
clc
iret
sub
mov
rorb
sub
inc
shlb
pop
sbb
cmc
adc
add
movsb
push
int
les
jo
bound
or
fldenv
sub
lahf
inc
rcl
push
test
jmp
stos
or
xchg
sti
fistl
dec
fdivrs
jbe
inc
adcl
lret
sub
rorl
mov
or
loopne
xchg
into
int3
mov
or
aad
ss
loope
test
dec
ss
push
mov
mov
jns
inc
jno
or
das
jns
arpl
add
cmp
jp
movl
xchg
cmp
aaa
in
fnstsw
loope
mov
jl
sbb
dec
mov
lds
aaa
push
loop
jge
je
fidivl
jns
insb
jge
dec
jmp
jae
inc
jo
imul
mov
dec
jno,pt
or
add
adc
shlb
popa
push
mov
pop
outsl
and
ficompl
pop
repnz
jle
rorb
mov
loopne
push
dec
jle
mov
in
mov
daa
popa
sti
fs
enter
jns
pop
mov
lret
mov
roll
and
pop
aam
cmp
shll
test
cmp
in
dec
dec
fs
adc
cmpsl
pushf
call
inc
sub
mov
in
hlt
sarl
rolb
adc
or
pop
or
rorb
fbstp
rcrb
sahf
mov
sbb
sub
xchg
mov
shlb
jg
movsb
imul
push
xchg
jle
or
test
movsl
mov
xor
clc
xor
data16
mov
lcall
sbb
xchg
add
mov
rorb
xorl
jo
sbb
xchg
in
sti
stos
dec
inc
scas
sbb
cwtl
mov
add
jno
xchg
dec
nop
in
add
jns
lods
fwait
xorl
cmp
imul
loop
sbb
cwtl
jns
xor
rcrl
gs
cmpsb
stos
enter
pop
fwait
inc
in
pop
pusha
addr16
test
dec
idiv
jg
adc
push
ficompl
mov
cmp
pop
jae
pusha
sbb
push
rorb
sbb
mov
jmp
xor
loopne
fimull
outsl
jmp
cli
dec
into
fcoms
dec
jge
sub
inc
sub
cmp
idivb
cmp
bts
stos
insb
jmp
or
dec
mov
push
push
test
std
xchg
sub
jb
je
imul
jno
aaa
addl
and
arpl
cmp
mov
push
roll
or
xor
int
push
add
ret
dec
jl
dec
imul
xor
xchg
stos
out
xor
in
xor
gs
jne
mov
fdivs
inc
inc
xchg
lods
lret
dec
test
and
dec
sarl
fldl
add
int3
ja
push
jo
dec
push
aam
fs
sbb
mov
adc
sarb
mov
loop
imul
and
sbb
in
xchg
subl
mov
js
mov
xchg
mov
mov
push
pop
add
mov
jg
ja
int3
xor
icebp
sarl
fstps
aad
int3
lret
loopne
xchg
sub
movsb
sub
add
lcall
orl
dec
cli
push
cmpsl
sub
dec
popf
and
imul
stos
addps
mov
outsb
popa
imul
inc
jge
roll
cmpsl
insl
repnz
into
or
mov
out
scas
inc
popa
inc
test
test
sub
xchg
push
pop
loop
test
mov
insb
add
pop
mov
imul
mov
test
fsubr
add
shrl
cmp
sub
pushf
in
jg
loop
add
sbb
or
xor
stos
js
pop
es
and
sahf
and
dec
cmp
int
push
sbb
mov
dec
imul
mov
mov
mov
lea
mov
loope
xor
cli
mov
xchg
xchg
inc
jb
sbb
test
push
stos
int
stc
xor
mov
jb
mov
xor
call
out
shl
push
lret
xlat
adc
adc
sub
mov
xor
ljmp
int
in
jg
cld
aam
daa
pop
jp
sub
sub
adc
shrl
xchg
jbe
mov
or
stc
cwtl
out
iret
jae
scas
or
push
mov
sub
cmc
push
repz
les
xor
jae
icebp
sub
icebp
lcall
std
mov
mov
mov
test
loopne
mov
dec
sub
push
ss
mov
pop
inc
cmpsb
add
mov
aam
and
aas
jae
pop
pop
sub
mov
xchg
je
xchg
pop
or
inc
leave
arpl
fistps
or
xchg
sub
call
sub
sbb
pusha
fsubl
cld
xor
je
mov
pop
repz
inc
xor
mov
mov
sbb
stos
and
aam
sbb
xchg
pop
add
daa
inc
cli
mov
pusha
cmc
adc
or
sub
adc
mov
xor
ds
sar
stos
insb
out
jo
xchg
cmp
jo
lret
pop
push
or
cltd
mov
pop
cmpb
adc
imul
add
loopne
icebp
inc
and
push
ja
cmp
pop
les
testb
arpl
push
stos
xor
movsb
shlb
push
pusha
icebp
loope
xor
movsb
shrl
enter
addr16
inc
divb
mov
ja
push
cmp
dec
xchg
dec
mov
adc
xchg
mov
sub
adc
jb
fwait
call
ljmp
pusha
ret
sub
adc
sti
ss
mov
pusha
loopne
fists
outsl
dec
pop
sbbb
loope
ret
repz
adc
ret
mov
jne
rorl
and
cmp
inc
cmpsl
pop
push
sbb
mov
in
xor
les
dec
outsl
sbb
sbb
jg
mov
test
dec
sbb
and
adc
push
adc
xchg
scas
sub
roll
and
ja
test
pop
movl
mov
test
aad
push
inc
in
ja
lret
iret
mov
test
fcoml
add
negl
inc
test
int3
inc
pop
nop
int3
fldenv
das
repnz
out
jmp
cli
lret
xchg
and
inc
ds
mov
outsl
popa
xor
js
pop
cli
lds
sbb
pop
push
clc
mov
push
out
mov
push
dec
jl
xor
pop
jns
mov
jbe
test
fwait
repz
xor
sti
popa
adc
sbb
inc
inc
aad
scas
mov
or
pop
ljmp
lods
das
or
sbb
xor
sbb
or
push
cs
das
lods
inc
sub
or
cmpsb
int3
pop
movsb
and
mov
mov
mov
jae
fwait
adc
sbb
pop
js
push
nop
mov
fstpt
out
xlat
pop
pop
lcall
test
sbb
negl
push
inc
lock
push
stos
pop
stc
mov
imul
inc
cmc
mov
test
sbb
pop
shr
push
imul
sbb
mov
mov
dec
cmp
dec
jp
sbb
jbe
fsts
cmp
xor
xlat
dec
stc
sub
jecxz
xor
cld
and
cmp
push
dec
xchg
rep
movsb
xchg
js
add
lcall
xchg
ds
in
iret
push
inc
std
add
sub
cmp
sbbl
cmpsl
jp
gs
lahf
in
insb
pop
mov
movsb
into
xor
stc
stos
dec
int
xchg
xchg
sbb
outsl
mov
inc
es
lea
out
dec
pop
push
in
jno
mov
xor
test
sarl
inc
rcrl
out
jl
ja
pop
sbb
cs
shll
enter
push
jo
outsl
cltd
sbb
lea
aas
add
mov
lods
shll
mov
pop
push
sub
inc
mov
mov
loopne
ja
aam
dec
loop
xor
icebp
pop
cltd
mov
push
shrb
cmp
jecxz
adc
outsb
dec
xor
aas
leave
out
add
cmp
xor
mov
call
xchg
ret
dec
push
adc
mov
les
loopne
pop
and
je
sahf
mov
push
or
shlb
jo
push
xor
faddl
loope
xchg
loope
cmc
xchg
adc
mov
movsl
test
icebp
sbb
sub
xor
sbb
push
cmp
mov
mov
pusha
cmp
pusha
call
fidivl
xor
cmp
std
cld
mov
add
fwait
sbbl
aaa
jne
mov
xor
addb
push
pop
fs
xchg
aas
test
mov
aas
imul
pop
insb
jne
fstp
xor
add
push
xor
int
xor
popf
mov
pop
push
xchg
loop
mov
and
aam
or
icebp
loope
lods
mov
cmpsb
imul
in
or
iret
cli
cld
or
mov
test
mov
loopne
popf
call
mov
mov
adc
mov
inc
lret
repz
push
cli
lcall
subl
cwtl
push
push
jp
mov
imul
pop
dec
mov
outsb
cmp
fwait
or
insl
ss
mov
out
mov
mov
and
icebp
sbb
ja
pop
outsb
push
mov
gs
clc
pop
and
or
ss
rclb
or
adc
sub
sbb
dec
test
sbb
and
mov
sarb
adc
push
sbb
fwait
fs
sbb
push
imul
sbb
sub
sub
mov
mov
lret
push
test
data16
notl
sbb
and
and
or
addr16
xchg
iret
ljmp
stos
adc
mov
cmpsb
mov
les
icebp
push
mov
cmpsw
jmp
in
sbb
jl
popa
mov
out
cmp
mov
out
push
adc
push
push
outsb
xorl
sub
jns
test
and
adc
mul
movsl
cmc
nop
cmpsl
sub
inc
sub
push
fisubl
inc
out
repz
sbb
jge
xchg
insb
push
cmp
adc
fisubrl
xor
movsl
scas
pop
inc
out
adc
xchg
lret
inc
lods
lea
dec
cmpsb
push
fsubl
pushf
mov
lea
cwtl
jno
add
cmp
stc
jp
jle
and
shll
sub
pop
pusha
sbb
nop
mov
mov
clc
cmp
decb
mov
in
cmp
inc
unpcklps
cwtl
fstps
mov
add
lods
clc
imul
pop
mov
sbb
jns
setg
push
jne
sahf
cmpsl
pushf
sbb
mov
jl
out
inc
inc
xor
clc
es
sar
aaa
push
sub
sbb
test
sub
xor
xchg
and
sub
inc
inc
cmpsl
iret
pushaw
sbb
test
pop
add
pop
call
sbb
outsl
fdiv
aad
iret
stc
xlat
sbb
std
repz
xor
xor
xor
mov
cli
ret
dec
in
clc
push
lahf
cmpsl
pop
je
aad
sbb
call
add
out
sub
cmp
test
test
out
aaa
scas
and
scas
cs
ret
sub
push
movsb
stos
jb
stos
push
sahf
mov
pop
lcall
dec
mov
dec
rorl
pop
stc
dec
std
dec
out
or
inc
pop
mov
not
fwait
mov
xor
adc
jns
loopne
filds
std
mov
sbb
pop
mov
rcrb
fs
sbb
aam
adc
insl
push
xchg
pop
fisttpll
fidivs
notb
and
dec
cltd
add
pop
cld
filds
cmc
lea
sarl
outsb
pop
dec
fcomps
bound
sbb
stc
ficomps
mov
stos
lods
imul
vmovsd
mov
inc
das
mov
lods
add
add
sarb
jl
jmp
or
ror
jg
pop
push
or
push
and
js
adc
lret
mov
cmp
enter
das
jmp
xchg
adc
addb
adcl
mov
lods
xchg
pop
inc
xor
ret
push
push
jnp
out
rorl
mov
mul
push
sar
pop
icebp
leave
push
mulb
xor
daa
adc
or
jl
cld
mov
cltd
adc
loop
cmpsb
mov
or
pusha
in
repz
into
and
aaa
insb
adc
stos
mov
mov
sub
pop
cmp
je
test
leave
popa
mov
sub
insb
pop
push
jo
inc
out
stc
xor
in
inc
fwait
xchg
jl
dec
aaa
in
mov
sbb
call
aaa
imul
pusha
sbb
xchg
xchg
and
sub
testb
in
mov
xor
mov
pop
pop
data16
pop
cwtl
push
dec
xor
lret
outsb
rcr
jp
loopne
mov
lret
mov
cmp
pop
xchg
icebp
dec
lret
pop
mulb
jae
sbb
jns
cmpsl
inc
or
mov
jp
pop
fildl
roll
push
xor
mov
insb
mov
pop
sahf
xchg
inc
outsl
mov
cmp
ret
sub
imul
push
lret
pop
cmp
jo
fcomi
jnp
sub
sahf
pop
ret
fildll
mov
pop
jl
popa
sub
jp
adc
adc
jnp
pop
jp
sarl
test
das
or
adc
dec
in
or
iret
test
jns
cwtd
xchg
cmpsl
and
pop
test
out
sbb
cmpsl
sub
lret
cltd
ss
aam
xchg
pop
inc
push
arpl
and
adc
fcmovnbe
push
xchg
movsl
pushf
jmp
cmpsb
test
jp
mov
pop
add
jne
push
mov
add
add
sub
stos
les
sahf
mov
orb
aad
xor
jge
jo
loop
adc
sub
cli
jge
sbb
cmp
and
lret
inc
repnz
push
jno
push
and
mov
cld
push
sbb
pop
xchg
add
add
jle
inc
out
pop
ret
ss
cltd
xchg
jp
mov
mov
lods
sbb
xor
ljmp
rclb
cld
inc
mov
xchg
cmc
pop
daa
jge
and
enter
fcomip
jbe
lcall
int3
outsl
inc
daa
sub
sub
cmp
adc
cmpsl
cmpsl
mov
fsts
les
scas
test
enter
push
test
mov
xchg
cmpsl
xor
push
and
lods
dec
pop
lods
repz
push
rcrl
aad
mov
cmp
fst
das
rorb
call
mov
subl
mov
adc
cwtl
loopne
jnp
test
mov
xor
out
pop
lcall
pop
dec
fcomps
push
in
jge
lahf
push
cmp
lahf
cmp
aad
daa
sysenter
push
mov
mov
cmp
daa
mov
push
sbb
jp
movsl
outsl
js
nop
xlat
cmpsb
loope
out
lahf
cmp
push
out
inc
mov
push
inc
jae
stos
sub
sbb
mov
mov
rclb
aad
jae
dec
in
fs
mov
stos
insl
sbb
jmp
push
stos
iret
test
movsb
leave
subl
test
repnz
jb
mov
sbbb
push
cmp
xchg
or
cli
jp
mov
adc
inc
jp
js
arpl
xchg
call
sbbl
sub
and
inc
stc
sub
and
cwtl
icebp
decl
xchg
xchg
hlt
or
mov
add
cltd
insl
call
cmp
in
cmpsl
mov
add
pop
xchg
enter
mov
pop
xor
push
imul
jns
cld
xor
dec
out
adc
or
and
icebp
aas
mov
pop
lods
fiadds
fstpt
ljmp
pusha
cs
fwait
cmc
dec
loope
push
add
sub
aaa
jno
sbb
add
popf
jp
loope
lods
loop
xor
nop
js
daa
cmp
rol
mov
sbb
gs
fidivs
or
rclb
ret
loop
jne
div
imul
or
les
fidivs
or
xchg
ja
jns
push
fimuls
sub
pop
mov
mov
add
pop
pop
test
jae
mov
call
fdivl
push
mov
imul
adc
xchg
jne
or
in
pop
adc
and
dec
push
int3
jmp
sub
mov
or
test
mov
pop
xor
aas
fsts
outsl
stc
in
pop
lea
sbb
cltd
pushf
or
ja
aad
in
pop
mov
cmp
sub
es
cltd
or
jp
clc
dec
pop
sub
arpl
xor
js
jb
sbb
sub
push
gs
dec
nop
mov
and
mov
cwtl
dec
jb
shrl
cltd
fs
and
int3
leave
xchg
pop
and
out
and
jne
js
in
repz
mov
aad
divl
lret
int
lret
sub
out
mov
xchg
sub
mov
jnp
test
negl
push
subb
jle
shll
mulb
adc
out
push
addr16
push
inc
sub
inc
test
test
mov
mov
xor
cmpsl
jmp
nop
inc
pop
aas
push
jmp
pushf
mov
ret
add
stc
repz
bound
and
xorl
xchg
adc
out
sub
rcrl
mov
iret
jle
je
add
sub
jnp
ficomps
jmp
mov
xchg
out
lret
inc
cwtl
test
addr16
shll
aaa
mov
mov
push
xor
loope
mov
xor
leave
xor
mov
cmp
enter
loope
and
stc
xor
cmp
add
xor
mov
js
bound
imul
out
mov
stos
push
adc
les
mov
iret
call
mov
push
adc
xchg
pop
daa
fwait
pop
sbb
xor
ss
cs
mov
out
mov
testl
push
or
shll
hlt
mov
in
test
daa
add
push
jmp
adc
mov
inc
iret
stos
jno
fldcw
mov
sbb
shl
fcomps
arpl
gs
mov
sahf
fsubrs
andb
rol
movsl
js
jle
ds
xchg
fstps
into
es
or
mov
or
lea
sbb
dec
push
pop
cld
sub
sub
sub
xor
divl
pop
mov
jmp
sub
mov
push
hlt
add
jae
mov
idivb
add
ds
in
icebp
popf
pop
mov
sbb
dec
jle
or
imul
mov
fists
sahf
and
xchg
add
xor
xchg
sub
xchg
sbb
test
std
fldl2e
pop
pop
orb
stc
shll
out
aad
sub
add
test
outsl
pop
adc
int3
jp
mov
cld
nop
cmpsl
fdivp
add
iret
pop
mov
dec
das
or
insl
lea
outsb
imul
sbb
and
jns
inc
pop
nop
inc
stos
sub
cmp
cld
out
repnz
sbb
jge
addr16
xor
jge
addr16
fwait
inc
int
pop
enter
ja
aaa
bound
das
jnp
sbb
shlb
das
cs
int3
movsl
stc
repnz
mov
push
adc
xchg
shlb
adc
lods
xor
mov
out
mov
popa
rcl
cmpsb
je
outsb
cwtl
inc
test
cltd
insl
jg
cmpsl
jno
out
mov
movsb
std
cmp
gs
cmp
imul
sub
xor
mov
test
xchg
lret
pushf
pop
cmpsb
mov
add
fwait
jns
pop
js
xchg
sbb
sub
in
xchg
jno
out
xchg
call
xchg
popa
popf
sub
repz
cmpsb
inc
jo
dec
jo
rcrl
adc
sub
test
out
mov
cmpsb
jne
mov
add
das
addr16
bound
ds
cmpsl
stos
dec
push
jge
adcb
rolb
imul
mov
jmp
push
xor
repnz
imull
pop
mov
dec
leave
adc
outsl
push
mov
mov
xor
ss
and
sarb
xchg
dec
jmp
fwait
aam
call
xchg
dec
adc
push
pop
or
cmc
ja
stc
lds
mov
pop
bound
and
sbb
fcomi
mov
jg
push
cld
repz
mov
std
dec
cmp
filds
xchg
aas
or
daa
sub
and
push
stos
and
inc
ljmp
or
cmp
jmp
in
push
cmpsb
and
test
mov
xor
leave
cmp
inc
cwtl
gs
fadd
push
inc
jle
mov
js
add
test
ror
dec
push
data16
outsl
adc
jge
push
dec
or
sub
les
add
dec
insl
and
icebp
cmpsl
jnp
or
pop
pop
adc
ss
pop
pop
dec
test
mov
int
sbb
cld
jecxz
push
jns
xchg
cltd
mov
cmp
repnz
inc
dec
movsb
lods
jmp
fstl
push
not
inc
ret
enter
mov
sub
mov
mov
jne
mov
int3
lahf
fisttpl
and
popa
aas
ljmp
mov
lds
mov
pop
push
repnz
or
jno
arpl
movsl
daa
xchg
shlb
mov
test
xchg
sub
stos
sahf
jmp
pop
dec
cltd
cmpsb
cmpsb
fistps
jg
sbb
repnz
inc
scas
imulb
shrl
sub
popf
fsts
pop
das
pop
icebp
or
jno
mov
rolb
loope
ds
iret
jae
jg
cld
rclb
aad
enter
push
xchg
leave
mov
push
and
or
test
pop
sub
gs
add
ficomps
cmpsl
cmp
hlt
aam
mov
aas
jne
sbb
pop
shll
jle
pop
xchg
scas
sub
fdivp
adc
sbb
cmp
push
fs
mov
out
jmp
out
mov
xchg
shll
pop
mov
pop
adc
push
push
or
mov
sbb
clc
lea
clc
adc
xchg
adc
dec
ret
out
push
mov
mov
add
out
cmp
cmpsl
out
mov
stc
adc
push
mov
push
or
mov
pop
test
movsl
mov
cmpsl
mov
lret
xchg
mov
jo
add
jns
mov
out
ja
cmpsl
sub
arpl
dec
pop
and
fnsave
inc
sub
mov
mov
mov
xchg
push
xchg
mov
and
fbld
push
push
bound
imul
pop
test
pop
fwait
pop
or
aaa
lahf
imul
sbb
cmp
scas
or
xchg
xchg
xorl
jg
rorb
xchg
lods
adc
push
mov
sbb
adc
testl
aaa
xor
movsb
cmp
push
leave
ljmp
out
call
cmp
xchg
mov
cmpsl
push
int3
enter
mov
push
and
mov
push
jnp
pop
lods
sub
fcomps
movsl
jl
cmc
jnp
arpl
fdivr
inc
aas
test
cwtl
lock
sbb
xor
mov
push
jmp
xor
sub
stos
push
inc
push
lock
call
sbb
push
inc
dec
idivl
lahf
orb
stos
call
xchg
xchg
dec
dec
mov
xchg
in
popa
fisttps
les
test
stc
xchg
or
leave
adc
push
inc
dec
and
cld
xchg
shll
ljmp
and
cmp
xlat
fs
cmp
ds
adc
pushf
pop
cli
iret
inc
in
jbe
dec
dec
sbb
gs
sbb
insl
rorb
push
daa
xlat
cmpsl
arpl
loopne
lock
cmpsl
mov
fistpll
add
mov
aaa
cwtl
imul
stc
xchg
test
lahf
xchg
jmp
lods
pop
ret
xchg
jmp
push
pop
xor
sub
mov
lea
mov
into
cmp
shlb
add
inc
mov
jns
jge
cmpsb
stos
lahf
sub
cmp
mov
pop
lea
aas
dec
cld
add
ficomps
mov
lret
pop
dec
out
lcall
repnz
js
add
cmpsb
arpl
adc
push
sub
lahf
mov
pop
aam
push
cmpsl
mov
or
xor
lret
lods
mov
cwtl
xor
inc
daa
sbb
dec
test
xor
lret
enter
daa
test
mov
or
mov
shll
jmp
fldl
in
repz
pmaxub
aad
adc
daa
dec
xor
pinsrw
aas
aaa
lahf
jmp
push
xchg
dec
pop
into
mov
xlat
xchg
pop
out
sub
and
or
popf
fdivrs
inc
or
daa
xchg
cs
xchg
and
aam
xchg
imul
or
ljmp
pop
xor
mov
jmp
cmp
xor
pop
inc
push
fwait
cmc
cmpsb
ds
pop
shll
xchg
in
dec
movsb
addr16
inc
xor
imul
dec
lret
ret
mov
imull
shlb
xor
xadd
fwait
dec
jg
push
das
push
pop
inc
dec
fwait
in
scas
push
push
lods
sar
pop
orps
pusha
push
mov
sub
mov
pop
xor
cmp
test
and
cmp
subl
jb
lock
cmp
xor
mov
sub
cmp
mov
inc
mov
mov
jb
xchg
cmp
enter
dec
loop
stos
aad
lods
mov
lret
xchg
add
pop
fisubs
inc
ret
nop
pop
stos
pop
push
ljmp
push
and
jb
aaa
das
in
xchg
gs
mov
xor
xchg
pop
fsubrp
sub
mov
xchg
testl
mov
stos
inc
and
jb
xchg
sbb
imul
add
mov
shr
or
cwtl
movsb
or
ja
out
popf
xchg
out
and
inc
jl
sbbb
lods
push
or
sub
push
popf
clc
in
sub
pop
bound
sbb
das
mov
enter
and
aad
ja
fcmovnbe
dec
scas
int
fsubrl
jg
cwtl
push
and
inc
cmpsb
fsubrs
dec
mov
push
jne
test
mov
sub
enter
lods
test
stos
out
sub
mov
and
sub
xchg
mov
cmpsb
sti
inc
mov
fstp
xor
sub
outsb
sbb
sti
mov
in
mov
add
jmp
cmp
cmpsb
fucom
jg
loopne
xchg
gs
lods
xchg
sub
mov
movsl
pop
shr
aaa
push
xchg
sub
mov
filds
imul
inc
es
inc
in
nop
jmp
mov
mov
subl
adc
xchg
sub
mov
adc
mov
inc
cmpsl
stos
or
rcrl
lahf
mov
js
pop
std
imulb
cs
loope
out
push
cmc
les
call
fdivl
push
xchg
xchg
or
xchg
push
cwtl
cmp
andl
iret
jns
dec
mov
push
and
negb
xlat
outsl
cmp
cmc
xchg
mov
mov
push
xor
mov
rcl
rolb
sub
cmpsl
or
scas
enter
mov
mov
mov
ljmp
popa
sbb
jns
mov
jl
je
jno
mov
or
dec
test
mov
ds
mov
outsl
push
enter
inc
pop
and
sbb
inc
sub
test
cmpsl
pop
nop
cwtl
add
or
mov
sbb
adc
push
push
lds
inc
mov
jle
dec
loope
loop
fwait
outsb
sbb
fisubrl
mov
clc
xor
xchg
mov
push
cmpsl
int3
arpl
sub
xchg
cltd
and
and
xor
jge
jne
mov
lret
dec
mov
sbb
movsl
dec
dec
cmp
inc
mov
mov
cmp
cli
inc
sahf
stos
mov
and
iret
data16
pop
dec
mov
jbe
mov
andl
fistpl
lcall
adc
jnp
ss
outsb
sbb
lods
mov
dec
in
mov
repz
mov
jo
rcl
jecxz
xor
sbb
xchg
mov
lahf
jae
xchg
mov
movsl
pusha
adc
mov
enter
fsub
out
inc
jno
gs
mov
lods
dec
xor
pop
add
movsl
add
jle
les
jo
add
push
shlb
shlb
push
pusha
mov
jo
inc
bound
das
xchg
dec
dec
clc
pop
mov
in
not
mov
out
lods
pop
test
in
in
sbb
dec
xor
into
ljmp
and
mov
cmp
add
test
icebp
adc
mov
xchg
mov
add
jo
clc
adc
adcb
aad
repnz
add
pop
sub
xor
sub
aaa
rorb
push
mov
addr16
or
dec
dec
xor
pop
xor
shr
mov
lods
pop
lea
push
mov
push
fisttpll
pop
pushf
push
xor
jbe
mov
jg
xor
jp
sbb
sub
cmpsb
mov
pop
mov
fdiv
iret
cmp
jns
loope
mov
aas
push
pop
loopne
adcb
inc
push
popf
rolb
popf
adc
rorb
xor
test
ss
cmp
pop
mov
imul
fwait
or
imul
sub
mov
dec
addr16
xchg
test
jne
rclb
das
mov
xor
push
sub
rcl
inc
mov
ljmp
sbb
pop
daa
cmc
sbb
xor
sub
or
add
and
cwtl
and
outsb
cmp
das
rolb
adc
cmc
insb
xor
mov
insb
add
in
adc
sbb
test
std
int3
idivb
cmc
push
jge
jae
rorb
js
icebp
mov
cltd
outsb
add
int3
dec
out
shl
fsubr
xor
xchg
loopne
mov
mov
pop
xchg
ficoms
testl
xchg
mov
push
push
out
push
ret
ja
mull
jp
fiadds
cmpsl
mov
jecxz
sarb
push
dec
daa
cmp
and
inc
scas
addr16
xorl
push
lea
pop
mov
push
jne
movsb
add
inc
push
mov
ja
dec
fdivs
cmp
mov
xchg
daa
jmp
icebp
add
test
jg
xchg
repnz
movsl
mov
mov
push
inc
shrl
mov
arpl
xchg
pop
and
jmp
shlb
fadds
sarb
testb
jg
push
adc
pop
test
pushf
test
js
cs
xor
dec
sub
mov
notb
push
pop
int3
in
pop
mov
and
es
xor
mov
jge
sbb
mov
jbe
jbe
inc
ja
push
out
mov
movsl
xor
dec
jmp
addl
shll
movsl
dec
and
lret
adc
in
jmp
sbb
pop
sub
les
loope
push
cwtl
movsl
mov
pop
xchg
xchg
scas
pop
mov
sub
sbb
imul
es
and
cmpsb
inc
pop
cmpsb
mov
mov
test
out
sub
xor
adc
sbb
gs
stc
mov
mov
loope
std
dec
ja
mov
repz
stos
pop
jno
ljmp
movsl
jge
rcrb
lods
fidivrl
notl
in
rclb
in
mov
inc
jle
or
ret
push
push
ja
inc
ss
xor
xchg
lcall
pop
xor
cmp
inc
sahf
lds
add
movsb
popf
out
push
xchg
push
dec
and
mov
pop
nop
out
xor
dec
cmpsb
jecxz
cmp
idivl
flds
sbb
stos
ja
xchg
iret
aaa
je
push
addr16
add
lds
and
test
adc
mov
les
out
aas
cmpsb
lcall
test
int3
lcall
std
xor
jmp
les
imul
jne
mov
je
cwtl
sbb
push
jno
sbb
arpl
test
and
cmpsb
movsl
adc
jbe
dec
and
fildl
aam
push
cmpl
mov
stc
or
xor
push
fisttpll
imul
add
xor
gs
xchg
aad
jno
shll
dec
movsl
jns
or
mov
leave
or
mov
js
mov
mov
testl
adc
xchg
mul
mov
xor
das
les
xchg
lds
push
movl
jb
pop
mov
mov
out
sbb
orl
push
fstpt
test
es
add
outsb
cmc
sbb
das
outsl
fs
jns
dec
xlat
xor
das
mov
mov
jae
jle
add
push
xor
pop
jae
fs
std
int3
notl
out
xchg
adc
jae
jnp
add
mov
push
jo
daa
sub
push
out
mov
fsubr
das
fsubl
fsubs
aad
adc
fists
leave
inc
mov
sti
xchg
mull
dec
push
push
test
out
test
mov
call
lcall
cmpsb
insb
mov
jecxz
fistpll
aad
cmp
nop
and
sbb
into
pusha
xor
inc
scas
ret
imulb
inc
xor
ja
ds
nop
aaa
cltd
int
cmp
mov
negl
shrl
enter
xor
aaa
jns
prefetchwt1
aad
mov
repnz
xor
jle
push
stos
xchg
aaa
inc
imul
out
add
mov
inc
and
adc
jle
fbld
mov
xchg
aad
add
sbb
lret
pop
xor
insl
lret
mov
cmpsb
dec
mov
jl
cld
mov
pop
mov
pop
lds
add
pushl
xor
insl
dec
bound
das
mov
push
ja
es
cmp
out
test
addr16
data16
inc
es
mov
lcall
pop
out
cmp
xor
and
jb
es
pop
push
pop
mov
xchg
xorl
negb
jbe
adc
mov
int
mov
sar
jo
sbb
push
xor
xor
scas
xor
in
mov
mov
mov
sbb
dec
rcl
movsl
mov
jg
fwait
lea
test
push
fiadds
rol
push
nop
test
xor
es
sti
or
je
setb
test
gs
test
les
daa
loopne
fwait
popf
cmp
jns
dec
sbb
fwait
lods
add
std
mov
pop
mov
popa
repnz
mull
cmp
xchg
movsl
movsl
lea
scas
mov
mov
push
ds
push
out
mulb
imulb
push
cmpsb
std
lcall
xor
rcr
sub
loope
xor
xor
cvtpi2ps
pop
sub
inc
or
pushf
int3
pusha
xchg
int
out
push
fsubs
ds
jmp
imul
into
mov
movsl
les
inc
idiv
addr16
xchg
pop
outsl
xor
mov
ret
test
rcrb
xor
jno
and
fwait
in
rcll
sub
std
cmpl
or
mov
idivb
mov
int
sahf
xorb
sahf
ss
repnz
loopne
pusha
sbb
movsl
hlt
movsl
cmpsl
je
push
scas
xor
daa
mov
mov
rcll
mov
aam
inc
stc
fptan
dec
js
lock
ja
fsts
out
xchg
js
negl
cltd
add
mov
nop
scas
jle
push
das
inc
dec
ja
lods
or
sbb
sbb
xorl
and
mov
inc
pusha
lcall
movsl
ret
jnp
xchg
idivb
xchg
sub
mul
adc
xor
fidivrs
gs
in
mov
aaa
int3
xchg
cmp
cs
or
pop
add
stos
push
sub
xchg
mov
mov
or
xor
cli
push
daa
shll
push
dec
and
in
jl
mov
mov
xchg
sti
lahf
xchg
cmpsb
inc
test
mov
fucomip
lock
mov
das
push
cmp
popf
and
add
adc
pop
xchg
jbe
pop
pop
push
dec
xchg
out
push
ljmp
sbb
enter
xor
imul
xchg
bound
dec
push
int3
lock
cmpsl
sar
or
pop
adc
inc
dec
mulb
xor
inc
rol
inc
and
notl
xor
sbb
cmpsb
or
push
call
add
xchg
inc
sub
fwait
dec
add
push
dec
xor
mov
movsl
fwait
cmp
xor
jmp
cld
in
sub
mov
jecxz
inc
daa
sahf
enter
loopne
arpl
xor
and
cmc
popf
fsubp
cmpsb
mov
scas
sub
je
ds
jge
es
push
in
xlat
push
sbbb
mov
mov
mov
add
mov
pusha
add
dec
mov
shr
xchg
sti
inc
inc
sub
sbb
lock
lret
lret
in
mov
int3
xor
cmp
sbb
cmp
cmp
mov
ja
scas
out
xchg
adc
inc
and
js
push
imull
pusha
mov
mov
mov
into
mov
add
mov
lahf
mov
xor
pusha
xchg
lock
lods
rcll
mov
cmc
sbbb
push
inc
pop
dec
movsl
std
sbb
add
adcl
test
lret
out
rcrb
dec
les
gs
sbb
push
mov
std
pop
pusha
mov
aad
mov
out
and
xchg
es
pushl
adc
sahf
jle
shll
out
gs
cld
dec
push
xchg
daa
fsubl
mov
out
mov
adc
push
add
mov
aas
mov
mov
jg
mov
push
outsl
add
loope
add
scas
sbb
or
push
push
fisubrl
ret
xchg
andb
lds
add
mov
push
push
in
pop
out
push
repz
scas
sbb
cmpsl
sub
jmp
sbb
mov
adc
mov
in
xchg
and
add
movsl
sbb
fcomip
mov
pop
scas
gs
mov
in
pop
imul
lods
and
xchg
mov
jecxz
xor
int
popa
mov
not
xor
add
lcall
sub
incl
cmpsl
lret
inc
pop
stos
and
sub
jmp
sbb
lcall
add
scas
pop
scas
int3
jne
stc
mov
cltd
hlt
adc
inc
sbb
outsl
imull
fst
push
jmp
xchg
movb
and
leave
jp
and
loopne
frstor
xchg
notb
rolb
adc
loopne
js
lret
mov
mov
call
fsubl
insl
sbb
push
mov
sahf
test
loopne
leave
shrl
fldl
jo
ss
mov
xlat
adcb
outsb
aad
push
sub
decl
int
cmp
pusha
adc
sub
mov
movzbl
xchg
int
stos
add
xchg
adcl
pusha
sti
addl
xchg
js
add
rcll
pop
lret
and
loopne
in
ja
sub
fldz
rolw
and
push
jno
sub
jne
gs
cld
sti
jae
stc
cs
insb
sahf
push
jle
cmpsb
testb
pop
mov
mov
and
dec
mov
repz
test
lds
mov
cmpsl
xor
es
mov
adc
push
out
inc
sub
jns
addr16
out
xchg
xchg
mov
or
stos
in
std
jle
js
into
dec
pushf
xor
lods
jecxz
jbe
jns
mov
int
in
add
es
shll
fldl
je
cwtl
movsl
jle
xchg
call
mov
mov
out
cmpl
js
int3
push
movsl
lcall
mov
test
pop
push
and
scas
nop
movsb
jae
jmp
add
es
sub
std
scas
dec
in
ja
iret
push
outsb
cmp
loop
notb
mov
sbb
cmp
in
xor
sahf
rcr
out
gs
xor
fists
xchg
dec
sarb
ljmp
or
int
scas
sbb
scas
sbb
push
cmp
push
xor
mov
xor
jle
and
xor
push
test
data16
std
push
sub
push
cmp
scas
popl
inc
xchg
dec
dec
cmc
fisubs
test
les
mov
jp
fimull
cmc
std
mov
mov
push
xor
insb
push
les
clc
fs
mov
aaa
das
loope
and
mov
mov
std
gs
push
add
movl
hlt
cltd
mov
fdivs
inc
sub
xchg
mov
add
ljmp
cmpsb
fld
cmp
bound
and
es
aam
xchg
add
js
jae
hlt
cmpsb
jb
lret
aad
std
int
nop
inc
leave
jnp
in
mov
or
xor
dec
or
jo
test
addr16
xchg
imul
xchg
movsl
push
lods
enter
lds
jge
or
xchg
cmpsb
sub
mov
rcrl
sarb
je
cli
jnp
push
sarb
cmp
push
xor
dec
push
fldcw
jns
mov
fmull
pop
jbe
jbe
js
pop
mov
xor
loop
sbb
movsl
ss
push
push
cwtl
cmp
loop
jg
fstl
cmpsl
cs
xchg
arpl
dec
jno
and
cmp
imul
stos
xchg
pand
xor
test
mov
add
cmpb
popf
ja
cmp
jo
nop
cmp
mov
cmp
jge
push
movsl
push
mov
jl
inc
mov
outsl
sub
stc
adc
mov
push
adc
js
notb
push
dec
rcl
xchg
add
pusha
ljmp
loop
xor
mov
cmpl
les
lods
ja
in
ss
cmp
pop
in
pop
push
dec
cwtl
jae
aam
popa
jne
mov
or
push
mov
cmp
add
and
push
loope
jbe
or
aaa
idivb
testb
sub
pop
into
push
mov
xchg
fldt
adc
and
repz
xor
bswap
xor
xor
xor
mov
cmp
or
ret
subb
jo
xor
test
scas
inc
adc
test
or
adc
dec
gs
or
aam
pushf
inc
mov
das
xchg
daa
xchg
pop
lods
and
jmp
pop
data16
xchg
scas
mov
dec
hlt
dec
loopne
leave
es
add
and
gs
test
xchg
fistpl
push
movsb
into
rcl
pop
ret
cmc
stos
outsb
or
stos
dec
dec
xchg
or
and
scas
xor
das
pop
nop
and
rcrb
jne
jne
xor
sbb
aaa
or
popf
ds
dec
cmc
cli
stc
push
mov
mov
inc
cmc
inc
push
pushw
add
inc
out
mov
add
lret
push
scas
mov
cmp
repnz
inc
rol
mov
test
rcr
or
mov
pop
out
fdivs
stos
jae
andb
test
in
push
popf
ficompl
push
in
mov
call
jne
dec
mov
loop
inc
add
out
enter
push
mov
repnz
imul
out
mov
stc
stos
adc
push
mov
mov
jg
bnd
call
xchg
cli
or
bsf
jo
aaa
das
jle
mov
lea
fsubrl
ret
and
pop
xchg
movsl
in
repnz
pushl
es
push
movsl
add
push
es
je
lea
lds
adc
jle
je
mov
adc
imul
mov
inc
mov
test
pop
push
sti
inc
xlat
loope
pop
push
add
sub
es
stos
movsb
in
movsl
mov
mov
jne
xchg
push
fdivp
andb
sub
mov
out
cmp
ffreep
out
dec
ret
scas
sbb
cmc
add
xor
dec
sub
jne
aas
cs
inc
and
lea
lock
xorl
mov
fs
fldt
mul
xchg
push
xor
int
push
adc
dec
pushf
loope
ret
test
lds
cmpsl
mov
dec
iret
mov
out
dec
mov
rcll
pop
stos
xlat
ja
mov
decl
xorl
je
inc
sub
aad
push
ret
xchg
lahf
lea
fstl
loopne
ud0
xor
outsl
or
enter
mov
sbb
jmp
or
lcall
mov
and
sbb
shrl
movsb
sub
dec
mov
and
mov
fcompl
ds
sbb
je
insl
sub
lret
xchg
pop
xchg
mov
push
inc
mov
movsb
add
jl
xchg
and
icebp
cmpsb
movsl
jle
mov
cmc
dec
inc
mov
daa
sarb
pop
cmp
or
outsb
cmp
repz
inc
xchg
movsl
sbb
jg
pop
sarb
mov
push
scas
lcall
in
cwtl
daa
and
sub
mov
into
cmc
std
aaa
pop
movsl
adc
in
pop
cmc
inc
mov
or
hlt
adc
push
pusha
icebp
dec
mov
dec
xchg
iret
inc
cmp
imul
sub
pusha
add
pop
adc
bound
sbb
cmp
rclb
pop
pop
push
inc
xor
cmp
hlt
pop
mov
shll
inc
sbb
mov
es
pushf
test
pop
mov
xor
dec
in
xchg
fbstp
aas
xchg
add
dec
inc
xchg
mov
jns
gs
xchg
lret
insb
fisttps
das
xor
sbb
je
movsb
scas
and
in
rcl
test
ds
stos
dec
and
mov
mov
xor
std
xor
shll
loope
inc
mov
push
add
mov
inc
xor
mov
push
sbb
jmp
lcall
rorb
xorb
push
stos
xor
iret
lahf
fsubs
arpl
and
jb
push
adc
xor
mov
movsl
ret
pop
and
lods
push
and
rorl
aas
xor
inc
out
xor
sub
mov
add
fs
mov
movsl
jg
mov
ss
fcmovnb
push
dec
iret
dec
sbb
push
mov
movsb
mov
xor
inc
shll
movsb
cltd
jge
mov
shrl
jp
fprem1
add
hlt
das
adc
idiv
cmpsb
hlt
loop
xchg
jno
pop
xchg
call
scas
loope
xchg
or
dec
es
adc
dec
xchg
xor
and
push
pop
les
push
hlt
jo
cmp
cli
jbe
xchg
aaa
fcmovu
mov
sahf
fdecstp
orl
sbb
testl
xchg
cltd
mov
mov
and
insb
or
push
pop
lods
bound
loop
lods
and
add
jg
sub
popa
xchg
pop
push
in
push
movsb
mov
pushf
cmp
sub
jo
insb
mov
dec
xchg
mov
sbb
sub
lods
je
push
mov
neg
dec
pop
test
ljmp
popa
lret
test
jne
cmp
aad
ror
cwtl
vmovapd
bound
or
dec
pop
push
sbb
je
sarl
mov
je
fistl
cld
jmp
pop
pop
xor
lret
pop
in
xchg
mov
lods
inc
mov
push
and
shlb
insb
icebp
sbb
lret
or
lret
or
fdivp
dec
jne
ds
cmc
out
xchg
repz
push
adcl
cwtl
imul
inc
sub
rorl
mov
movsb
mov
cltd
insl
into
xchg
rclb
mov
and
lea
clc
data16
xor
icebp
movsb
shlb
mov
inc
in
mov
test
xchg
movsb
push
std
cmpsb
dec
and
divb
test
jb
adc
ja
mov
jp
shl
rclb
in
cmpb
cmp
fs
andb
int3
or
push
ret
push
filds
in
imull
sbb
pop
cmpl
mov
mov
cs
or
inc
dec
and
das
gs
loop
ret
mov
inc
cmp
xor
notb
call
pop
inc
cmc
pop
and
push
xchg
das
adc
mov
lock
test
insb
lret
jecxz
into
adcb
pop
mov
cld
cmp
pop
mov
inc
xchg
loop
lret
into
insb
push
xor
xor
inc
mov
movsl
mov
subl
outsb
mov
clc
mov
push
jg
add
bound
scas
add
pop
pop
push
mov
data16
fwait
sub
jbe
in
adc
ja
jno
jnp
sub
pusha
inc
dec
sub
xchg
sahf
and
mov
cmp
repz
or
popf
or
test
lds
xchg
arpl
pop
shll
push
mov
mov
repz
mov
dec
pop
loope
jp
mov
and
stos
xchg
sbb
pop
fcoms
fst
adc
and
ret
outsl
test
stos
and
test
pop
cltd
and
movsb
inc
xlat
ret
fdivrl
adc
mov
subb
loope
fldcw
xor
pop
inc
hlt
aaa
stos
fcomi
mov
jecxz
les
xchg
cmp
xchg
xor
out
push
lahf
sub
ss
call
dec
cwtl
insl
pop
scas
adc
lods
mov
lret
push
push
lds
shl
push
insb
and
adc
adc
dec
adcl
pop
in
dec
add
and
fisttpll
cwtl
es
pop
out
addb
mov
loop
loopne
or
inc
fbstp
test
movsb
pop
xchg
and
in
fwait
mov
add
lods
and
and
mov
dec
xchg
mov
mov
add
mulb
aaa
mov
js
test
shll
mov
aad
jb
in
movsl
shll
and
push
imul
iret
test
cmp
fyl2x
arpl
mov
and
lods
jge
popf
push
xchg
std
and
cmc
mov
lcall
push
cwtl
popa
gs
inc
mov
or
mul
jmp
in
ds
ret
pop
xchg
lock
mov
dec
push
addl
aad
lds
leave
ret
vprotb
xor
pusha
fpatan
mov
add
jne
add
xchg
test
hlt
popa
std
dec
test
call
gs
adcl
pop
add
pop
pushf
scas
jnp
je
adc
rcrl
dec
jecxz
sub
mov
xor
cs
fnstenv
pushf
pop
sbb
fldl
dec
loopne
push
sbb
fwait
mov
das
inc
pop
adc
pop
mov
lea
loop
adc
mov
outsb
inc
and
inc
cltd
pop
inc
fisttps
leave
test
test
add
vcvtpd2dqy
mov
cmp
data16
push
jns
adcl
xchg
push
enter
or
shl
cmc
stc
xchg
rcrb
inc
adc
mov
sub
xchg
adc
xlat
sub
mov
call
cltd
repnz
clc
inc
fcoms
xor
cmp
cmp
xchg
adc
xor
sub
divb
lea
pushf
jg
cmp
jo
pop
pop
loopne
mov
shrl
aad
pop
xchg
jmp
push
dec
insl
or
test
pop
cli
cmp
xchg
iret
ljmp
jmp
xchg
mov
movsl
out
dec
mov
adc
jge
sarb
mov
xchg
adc
mov
shrl
in
pop
inc
mov
sahf
push
add
pop
mov
xor
sub
mov
dec
loop
shll
push
mov
popa
sbb
push
sub
test
and
rol
incb
push
shrb
xlat
stc
gs
das
fstl
add
sahf
mov
cmpsl
sbb
push
std
jecxz
pop
sti
pop
je
inc
adc
fcmove
gs
mov
in
ljmp
imul
xor
cs
push
cld
je
shrl
xor
lret
test
push
pop
xlat
xor
mov
sbb
mov
adc
sbb
mov
mov
jp
and
push
fsubs
loop
movsb
fwait
sbb
mov
jg
pop
sbb
mov
fcompl
cld
mov
mov
sub
jge
sub
mov
sub
inc
aas
imul
sti
mov
outsb
lea
mov
scas
and
imul
lods
jl
lea
pop
fdivl
hlt
inc
arpl
ss
ja
movsb
decb
sub
outsb
mov
jle
fimuls
or
sbb
ja
addr16
push
adc
fildll
mov
sub
jno
popf
addl
inc
shll
ds
ss
fcoml
and
sbbl
xor
mov
pushf
iret
cmpl
stos
aas
xlat
sbb
mov
orl
jae
rol
hlt
inc
fcoms
cmp
popa
int
xchg
fs
lods
xor
push
shll
je
ja
hlt
push
pop
xor
xchg
mov
movsl
inc
out
mov
sbb
or
sub
and
xchg
inc
cs
adc
rclb
ret
addl
sbb
inc
aam
mulb
xchg
in
in
mov
bound
adc
insl
jns
push
mov
dec
inc
fxtract
cmc
mov
add
mov
rcrb
push
jge
je,pt
inc
ljmp
movsl
repnz
mov
mov
push
cltd
mov
ds
daa
js
aas
or
pop
dec
loope
push
xchg
js
or
mulb
mov
push
cmp
cmovo
mov
clc
adc
xor
and
dec
and
xlat
repnz
fiaddl
inc
in
lods
dec
and
je
mov
cld
and
mov
dec
jecxz
in
ds
aam
ret
mov
xchg
xor
test
mov
mov
push
push
mov
ret
pop
xchg
inc
enter
mov
inc
add
xchg
int
jecxz
or
mov
mov
not
cmp
aad
hlt
mov
dec
dec
cld
add
xchg
dec
mov
jo
movsb
repz
lods
jns
icebp
jno
xor
fnstsw
mov
mov
push
mov
fildll
imull
cmp
xchg
addr16
inc
es
dec
inc
mov
cwtl
push
mov
push
fiaddl
and
pop
mov
cs
inc
jmp
aad
dec
daa
ret
mov
scas
add
push
xor
and
add
mov
and
or
push
xchg
cmp
iret
hlt
add
jns
out
stos
stos
mov
inc
dec
test
dec
psubusb
imul
aaa
add
cwtl
jle
enter
inc
lods
movsl
aas
cmp
ss
out
mov
and
inc
cmpsl
aad
push
dec
xor
popa
mov
adc
cmp
mov
mov
in
lcall
jae
sarb
lahf
dec
scas
jb
mov
adc
xchg
pop
cmp
stos
fdivrl
into
jae
cs
sarl
adc
pop
jnp
dec
scas
stc
mov
fbstp
pcmpgtw
mov
addl
rorb
pop
sub
sti
jle
mov
sbb
popw
mov
jae
mov
dec
adc
sub
jno
dec
or
xchg
mul
pop
sub
fs
in
in
ds
jge
sub
xlat
pushf
push
lea
adc
scas
inc
pop
jmp
push
sub
popa
jae
mov
hlt
mov
js
cmpsb
repz
loopne
push
iret
and
xacquire
call
cwtl
inc
lock
push
lret
aad
stos
push
fs
or
xchg
jmp
das
mov
ror
xchg
jae
test
cmp
pop
dec
pop
gs
pop
sub
push
and
lds
xchg
cmp
cmpsl
xor
dec
mov
sbb
inc
xchg
lea
add
jnp
xchg
imul
lods
fnstsw
imul
add
loope
jns
arpl
mov
push
pop
jno
xchg
jae
std
cmp
adc
mov
jo
mull
jae
inc
mov
mov
insl
jecxz
in
pop
adc
int3
pop
mov
add
cmpsl
adc
push
js
jo
and
repnz
aad
and
sub
inc
rcr
mov
mov
adc
out
inc
out
andl
jb
sub
sbb
test
mov
xchg
pop
cmp
daa
add
add
xor
pop
or
dec
xchg
pusha
imul
push
in
cmp
pushf
hlt
xchg
popa
sub
inc
push
push
jge
add
xorb
movsl
push
mov
jo
mov
inc
and
cld
mov
cwtl
push
bound
lret
out
and
cli
into
std
xorl
inc
sti
test
dec
mov
aas
in
add
push
int3
mov
or
dec
cmpsl
fldenv
adc
push
sti
mov
sbb
or
xchg
push
mov
data16
jecxz
adc
pop
repz
jl
mov
push
fbstp
ja
stos
out
xchg
fcmovb
push
dec
jne
mov
idivb
sbb
sti
adc
xchg
sub
push
push
mov
ret
cmp
ficoml
pusha
mov
push
sbb
cmp
outsb
mov
xor
push
lahf
out
inc
xchg
sub
push
into
std
loop
sub
cltd
dec
inc
ret
mov
mov
in
roll
mov
mov
jp
data16
int3
mov
xor
fldt
je
fisubl
or
xchg
mov
jae
lea
scas
iret
rcrl
lea
popa
xchg
inc
jb
xchg
inc
aaa
fstps
mov
movsl
stos
and
cmp
sahf
or
mov
mov
mov
cltd
repnz
lods
pushl
fs
xor
sub
jg
enter
xchg
jecxz
scas
lods
cwtl
scas
cmpb
pop
notb
xor
jl
push
mov
pop
stos
mov
mov
pop
push
or
cli
aam
ss
adc
sub
sahf
lods
insb
mov
shl
cmp
push
test
negl
jmp
lahf
shlb
mov
sbb
mov
stos
or
inc
lods
sbb
icebp
mov
pop
push
mov
push
mov
jnp
lret
outsl
repnz
mov
addb
into
and
aas
lahf
adc
lahf
mov
mov
xchg
add
outsb
mov
js
or
xor
and
movsb
mov
xor
jnp
sub
pop
mov
lea
mov
insl
mov
mov
pop
pop
aaa
adc
adc
xor
and
or
pop
shlb
push
adc
jb
push
ret
rolb
mov
mov
push
stc
inc
mov
lcall
or
incl
fxch
xchg
mov
mov
mov
out
pop
xchg
sbb
jo
xchg
xor
jnp
lods
ja
cltd
jo
sbb
aam
or
adc
aam
mov
icebp
mov
or
mov
add
inc
lods
xor
jle
jae
repnz
sub
push
jecxz
mov
orl
rcl
gs
jmp
inc
mov
mov
push
out
push
inc
dec
mov
sub
or
rorb
push
out
mov
out
rorb
mov
das
sbb
mov
inc
test
jbe
adc
jbe
mov
push
sbb
pop
pop
sub
lock
dec
lock
sub
rcrb
test
mov
shlb
sbb
mov
xchg
adc
aad
mov
daa
sub
addr16
dec
xor
push
test
and
out
add
or
pop
scas
adc
bound
jb
aad
cmpsl
or
add
testl
sti
and
orps
and
xchg
repnz
dec
mulb
rcr
mov
shlb
in
aaa
push
pop
ret
cs
movsl
sbb
mov
sbb
in
mov
fisttps
pop
mov
jmp
icebp
fldenv
inc
mov
leave
push
add
ljmp
sbb
pop
mov
fstpt
enter
and
shll
and
test
jne
xor
aam
pop
sti
jge
or
out
mov
lret
jae
add
cmp
pop
xchg
mov
mov
jecxz
in
push
mov
mov
pop
jecxz
pop
inc
cli
sub
mov
mov
cmp
fnstcw
int3
std
lods
dec
sahf
pop
repnz
test
xor
mov
pop
or
ds
shll
std
adc
and
inc
aam
mov
das
movsl
repnz
testl
and
scas
aad
out
mov
push
or
jg
fstps
jo
and
repz
aas
stos
nop
ss
addb
xchg
or
test
outsl
inc
in
shlb
adc
loope
jb
popf
inc
mov
psadbw
bound
mov
jno
xor
je
and
bound
cmp
and
andb
mov
pop
and
loop
mov
push
add
mov
push
jae
xchg
pop
or
nop
fnsave
mov
xor
pop
mov
fsubs
sub
mov
pop
pusha
lcall
mov
push
repz
mov
cmpsb
popf
pusha
sub
fcmovu
out
or
bound
or
test
mov
out
add
jle
sub
popa
pop
sbb
pop
inc
sub
icebp
push
lea
out
scas
and
jb
std
jno
pop
sahf
mov
adcb
pop
repnz
push
int
push
jns
add
fdivl
adc
jle
addl
sahf
adc
fnstenv
and
adc
jno
pop
loope
push
mov
sbb
mov
adc
mov
mov
rorb
dec
cmc
sbb
cmc
lods
fwait
pusha
outsl
push
jecxz
adc
popf
jo
add
divb
push
push
es
push
mov
sub
xchg
imull
pop
and
rorl
pop
mov
jns
shrb
push
and
pop
jns
test
mov
push
adc
add
and
mov
push
lret
inc
aam
int
push
push
sub
es
bnd
cmp
jb
mov
pop
popa
fcom
lcall
mov
xchg
sbb
mov
scas
scas
out
or
push
roll
int
push
clc
imul
sub
xchg
jmp
push
scas
and
arpl
fcomi
nop
test
push
xchg
ficoml
test
pusha
cwtl
imul
push
repnz
pmulhuw
rcrb
dec
inc
adc
popf
icebp
dec
add
xor
jnp
pop
mov
cs
cwtl
pushf
sbb
pop
stos
popa
icebp
lods
subl
out
or
jno
repz
xor
imul
cs
jmp
je
movl
push
pop
push
mov
sbb
insb
push
and
outsb
add
dec
push
movsl
inc
mov
dec
and
lea
in
cmp
aad
scas
sahf
jns
cmc
aad
into
repnz
jae
sub
dec
add
mov
fcomps
push
xchg
cltd
xor
cmp
out
inc
test
and
test
out
popa
shll
pop
int3
sub
lods
addl
int
jge
aam
stos
mov
push
rcrb
enter
pop
das
dec
xor
out
cwtl
push
faddl
and
mov
insl
dec
aad
jle
rcll
aaa
add
mov
imul
mov
in
lods
push
imul
dec
mov
push
sbb
inc
cwtl
ret
adc
andl
xchg
push
xchg
mov
icebp
fbstp
mov
add
mov
jb
cld
xor
and
jno
cmp
xlat
and
ret
or
je
jns
mov
mov
loope
mov
ret
cmp
inc
mov
and
adc
out
aam
jnp
xchg
xchg
xchg
pop
neg
fidivl
jae
sub
stos
lahf
mov
scas
cmp
rclb
lret
rolb
in
mov
stos
mov
jb
adc
mov
jg
mov
mov
je
pop
fisttpl
lds
pop
mov
js
push
popa
shrl
add
cli
inc
adc
ret
sbb
mov
push
cmp
loope
mov
out
lahf
jbe
push
out
xchg
sub
repz
push
mov
lea
mov
out
fstpt
aaa
and
pop
mov
adc
ficoms
les
sub
adc
jno
pop
aaa
pop
sub
lea
pop
mov
and
pop
mov
jl
in
pusha
dec
adc
mov
push
subl
cltd
pop
xchg
jecxz
outsl
pop
jecxz
mov
lcall
mov
push
cmp
rolb
sbbl
in
push
shlb
mov
xor
not
popa
int3
data16
lret
and
and
test
pop
adc
test
fnstcw
int
xchg
adc
mov
fimuls
or
xchg
lret
hlt
or
sub
jmp
int
dec
or
dec
or
dec
movsb
xchg
xor
dec
sbb
add
and
inc
push
add
lods
das
fs
jecxz
adc
mov
sub
xor
adc
andb
in
sahf
inc
mov
test
stos
lods
in
push
outsl
cmovns
dec
ret
loopne
push
mov
movsb
ret
addb
inc
out
vpmovzxdq
cwtl
or
add
and
xor
mov
jp
mov
icebp
popa
push
js
sub
data16
mov
cwtl
cltd
and
sub
mov
shl
icebp
jns
inc
xchg
in
and
addb
push
ret
loop
lods
inc
outsb
inc
jno
dec
cmp
mov
or
scas
cmp
push
mov
call
sub
push
and
sub
mov
add
mov
call
repz
enter
jae
cmc
sub
sbb
adc
fcomi
cmp
mov
adc
jge
addr16
arpl
jno
sti
sub
mov
lods
jle
aas
lahf
stos
shlb
orb
sub
stos
mov
jb
pop
add
sub
jmp
cmp
mov
cmc
and
xchg
outsl
xlat
mov
xor
xor
and
xor
dec
mov
lods
dec
sbb
lahf
mov
jp
bound
xchg
or
sbb
adc
dec
stos
jb
or
xor
mov
pop
push
cltd
cmpsl
call
or
test
lcall
mov
mov
dec
inc
lahf
fimull
inc
pop
sarb
pop
adc
bound
scas
dec
and
adc
mov
lret
xor
sbb
stc
dec
out
xchg
sbb
repnz
outsl
xchg
pop
and
shlb
mov
test
out
ljmp
mov
icebp
xor
mov
aas
xor
xchg
mov
fs
and
inc
mov
pop
pop
mov
shrb
jecxz
jno
fimuls
sarl
xchg
fmul
pusha
pop
test
or
inc
stc
in
mov
dec
gs
mov
sbb
test
pop
insb
xor
xlat
xchg
repz
dec
and
std
mov
xchg
lea
lea
sub
and
insl
and
pop
lcall
push
xchg
lea
inc
sbb
xor
mov
cmp
shr
mov
xchg
ret
jecxz
xchg
or
xor
push
push
lahf
sbbb
mov
cmp
adc
fbld
bound
icebp
jecxz
cwtl
jb
scas
insl
pop
sbb
sahf
pop
out
dec
sti
iret
cmp
pop
fldcw
cmp
mov
push
push
hlt
mov
icebp
clc
mov
and
dec
fldcw
mov
pop
push
fwait
in
adcl
aam
push
arpl
jb
and
mov
push
pop
fisubl
mov
ja
or
add
cli
popf
adc
xchg
and
sbb
pushf
inc
movsb
or
loope
fisubrl
lock
push
stc
lcall
xchg
shl
push
xchg
push
cmp
lods
inc
lods
xchg
out
lock
lret
push
push
jmp
fsts
bound
das
loop
cmc
jmp
sub
sub
lock
pop
aad
and
jmp
xor
inc
sub
xor
fldlg2
imul
scas
push
xchg
ljmp
loopne
cmp
mov
in
inc
scas
add
cs
xchg
clc
xchg
mov
add
cmp
movsb
ficomps
and
mov
or
sbb
mov
pop
sarb
sub
push
inc
pop
or
push
fdivp
enter
leave
jno
das
enter
lret
push
push
pop
xchg
bound
mov
imul
push
add
xchg
pushf
mov
xchg
loopne
mov
xchg
sub
aas
sub
inc
sbb
push
pop
mov
push
insl
pop
ja
ret
cmp
and
bound
movsl
pop
sub
lahf
aam
aas
xchg
jo
push
pop
pop
bnd
mov
sahf
mov
aad
sub
pop
icebp
fbld
sbb
sbb
mov
imul
divb
adc
fwait
aad
jb
aad
mov
push
aad
outsb
in
xor
dec
rcl
add
popf
mov
mov
leave
lret
mov
je
inc
jno
inc
int
insl
mov
les
or
or
sbb
mov
or
jge
movsb
mov
xchg
ret
into
sar
sahf
fidivrl
xchg
sub
sub
inc
lret
out
pop
sub
jo
test
pop
lods
testb
rcrb
clc
pop
lea
iret
pop
negl
ret
js
mov
sub
or
inc
add
mov
sti
dec
ficomps
rcrl
and
rol
divl
mov
lahf
mov
and
in
clc
xchg
xchg
lret
adc
push
lahf
bound
andb
cmp
iret
addr16
xchg
mov
and
or
or
jg
lret
subb
or
sti
xor
push
xor
scas
inc
xchg
sbb
push
push
adc
cmp
and
jp
jo
cmp
xchg
pop
push
sbb
ja
stc
jae
xor
ss
loopne
mov
or
ljmp
or
in
mov
sbb
mov
push
lock
ror
ret
aad
setg
jp
mov
pop
ret
or
or
mov
adc
outsb
loope
xor
dec
outsb
xchg
mov
push
adc
mov
pop
fs
rcr
sub
sbb
add
sahf
dec
xchg
orl
push
push
adcl
js
mov
lods
mov
repnz
push
xor
outsl
push
xchg
test
bound
hlt
outsb
xchg
loope
jp
push
dec
jbe
enter
sbb
rcll
shr
faddl
dec
sub
nop
cs
adc
pop
cmp
pop
pop
jne
addr16
mov
mov
scas
dec
outsl
dec
ja
push
mov
daa
xchg
and
pop
lret
add
jb
dec
mov
cmp
fwait
jge
pushf
or
loope
daa
mov
xlat
mov
cmp
cmp
loopne
in
jp
cs
mov
xchg
dec
mov
in
in
push
pushf
arpl
icebp
push
arpl
adc
push
cmp
and
fwait
subl
fdivl
inc
cwtl
sbb
loope
nop
xor
cmpb
adc
jg
xor
sub
repnz
mov
xor
mov
pop
rcrl
cli
fiadds
cmp
ret
hlt
and
and
dec
add
pop
faddp
pop
icebp
outsb
enter
incl
sub
push
stc
mov
mov
adc
andl
adc
inc
xchg
mov
cltd
enter
xor
jmp
imul
fwait
sbb
xchg
adc
and
inc
fiadds
push
mov
scas
cltd
mov
xor
or
and
adc
xlat
mov
fistpl
cwtl
jg
or
xchg
pop
push
test
aad
mov
push
sbb
or
jp
inc
setbe
pop
test
sahf
sbbb
enter
add
aad
mov
ljmp
xor
rcl
mov
out
add
fbstp
out
lahf
adc
lret
push
lea
dec
aas
popa
cmp
fisubl
testl
mov
insb
lock
ds
pusha
aaa
jnp
and
out
lock
cmpsb
and
in
push
lock
jo
jne
jo
insl
popf
dec
push
jmp
mov
mov
in
arpl
push
add
jbe
nop
dec
clc
cmp
lcall
loope
shrl
jo
setno
mov
in
mov
and
jns
pop
or
xchg
imul
add
cli
test
test
test
mov
adc
hlt
fwait
test
loop
and
lahf
jbe
mov
add
xchg
shrb
xchg
lods
aad
xor
jmp
adc
mov
pusha
xchg
gs
rclb
cmp
dec
mov
jns
add
cmp
jmp
pop
mov
int3
insb
pusha
popa
add
jo
mov
jp
test
xor
pop
xor
scas
pop
pusha
add
push
test
mov
out
loop
int3
movsb
dec
ret
adc
fdivp
lret
pop
mov
les
and
lea
fdivr
into
cmp
scas
jo
inc
les
popl
cmp
stos
mov
outsb
mov
and
in
push
bound
cmp
lds
lods
jp
sub
inc
xlat
dec
popa
lds
sub
je
dec
iret
jns
icebp
and
or
popa
adc
add
or
mov
cmp
mov
xor
ljmp
mov
cmpsb
sub
pop
outsb
int
add
ficoms
shr
sti
sub
call
je
icebp
mov
hlt
mov
cmp
xchg
ret
outsb
lret
into
mov
loope
sahf
cwtl
dec
add
and
or
pop
xor
mov
insl
decl
push
add
pop
ror
add
inc
sub
add
jp
xchg
pushf
mov
xor
outsl
mov
push
dec
or
in
fcompl
xchg
mov
sbb
or
jb
lock
imul
js
xlat
cld
jb
iret
and
add
pop
dec
pop
cmp
std
xchg
and
inc
jg
ret
inc
loope
cwtl
sub
into
leave
lahf
xchg
stos
add
push
add
adc
icebp
adc
lcall
or
xchg
pop
cli
mov
cmp
mov
push
pop
sbb
xlat
dec
jb
cld
mov
pushf
and
mov
mov
negb
repz
or
jmp
sbb
popa
sub
lahf
dec
pop
addl
add
xor
jae
xchg
and
jmp
push
enter
inc
lock
outsl
enter
push
xchg
mov
lret
fdivrp
pop
rcl
rclb
movsw
fisubl
negb
xchg
xchg
stos
dec
fwait
adc
es
push
test
pop
cmp
and
add
mov
sub
jmp
xchg
mov
or
popf
cmc
shrl
aas
or
pop
mov
es
or
das
clc
aam
xchg
mov
pusha
out
mull
push
int3
out
bound
adc
lock
jno
cmc
mov
dec
add
pop
sub
push
in
dec
cmp
cli
mov
inc
adc
push
sub
sahf
jne
xchg
hlt
mov
mov
lahf
xchg
stos
dec
push
xor
out
jb
push
icebp
mov
dec
shll
pop
lea
cmp
xor
mov
pop
xor
and
jns
sub
repz
subl
das
mov
cmp
mov
xchg
inc
mov
lahf
out
mov
or
loop
sub
mov
dec
jno
add
adc
sub
pop
cwtl
add
push
loope
mov
inc
stos
sarl
les
icebp
ja
sbb
inc
in
out
arpl
pop
stos
icebp
in
shrl
xor
or
push
rcll
push
cltd
cwtl
icebp
mov
cmpl
adc
mov
mov
dec
cmp
rclb
cs
pop
out
aaa
push
outsb
sbb
xchg
inc
add
xchg
cmp
mov
xlat
mov
pusha
rclb
mov
ds
xchg
pop
mov
sahf
int
push
scas
jbe
int
stc
enter
out
or
sbb
mov
stos
and
sub
push
push
or
leave
lret
inc
pop
shll
mov
jno
xlat
ret
push
or
mov
mov
jb
lock
std
repnz
sbb
out
mov
cs
pop
push
int3
cwtl
addl
lret
mov
test
and
cmpsl
xor
jle
adc
and
add
or
xchg
push
inc
inc
pop
pop
xor
mov
xlat
sub
sbb
xor
and
and
movsl
mov
ljmp
xchg
call
push
imul
notb
orl
mov
sbb
sub
cmp
jo
xchg
daa
mov
push
or
mov
xchg
sub
idivl
addr16
loope
stos
push
call
inc
sbb
jmp
push
dec
sub
jo
or
mov
repnz
sti
int3
push
push
fwait
mov
jge
lahf
imul
inc
mov
test
and
mov
lahf
xor
sbb
sub
dec
xor
push
push
sbb
fidivrs
fwait
sbb
decl
popf
shl
push
mov
pop
loope
into
adc
dec
icebp
inc
inc
xor
push
rol
jnp
dec
sbb
mov
call
ljmp
rcll
daa
fwait
sbb
jmp
jl
cmp
mov
loopne
xor
rol
jae
lcall
add
std
addr16
and
pop
mov
test
sub
arpl
sub
mov
ss
aam
test
or
fists
ret
popw
or
jmp
cs
pop
or
je
mov
cld
ret
test
imul
adc
in
out
aas
push
insb
mov
stos
add
jmp
and
scas
push
ds
cld
mov
cwtl
push
in
hlt
aad
xchg
daa
rcrb
and
pop
mov
call
sahf
pop
jo
pop
js
dec
xlat
ss
decb
dec
jp
mov
cmp
or
dec
push
xorl
jae
sbb
or
clc
pextrw
scas
adc
and
inc
bound
scas
ljmp
daa
pop
lods
adc
add
fbstp
mov
lds
jne
mov
xor
cmpsb
fs
mov
adc
aam
repnz
cmpsb
adc
add
inc
sub
push
iret
leave
dec
jae
les
push
sub
fs
push
jb
lahf
leave
jae
or
adc
mov
xchg
pop
lret
pop
sbb
xchg
and
cmpsb
or
test
mov
lret
movsb
xor
popf
sub
scas
cs
jl
les
dec
fmuls
fucomp
sbb
daa
cmp
stc
jns
in
inc
sub
mov
fst
and
cmp
pop
push
mov
mov
xchg
add
mov
cmc
sbb
in
out
mov
cmp
push
dec
mov
out
jo
or
hlt
or
mov
test
ret
jp
mov
in
clc
sub
shll
lock
stos
fsts
sbbl
stc
cld
int3
out
push
or
rcrb
sahf
and
or
stc
test
test
xchg
jge
or
xlat
mov
roll
fstpl
in
in
ljmp
adc
push
pop
add
pop
mov
xor
inc
mov
xor
sti
js
adc
pop
push
sarb
and
popf
inc
mov
enter
adc
mov
fwait
aas
xlat
dec
in
push
push
cld
xchg
dec
xchg
loopne
sahf
jno
in
aas
repz
push
addr16
sti
sahf
xor
stos
fisubrs
sub
push
mov
jg
dec
cmp
fnstcw
repz
outsl
jne
loope
sti
mov
sbb
rcrb
mov
fcoms
pop
pusha
sbb
scas
das
subb
lahf
insb
mov
je
fs
mov
push
push
das
mov
stos
mov
hlt
inc
pop
arpl
pop
ja
adc
fwait
add
and
inc
cmp
mov
mov
popf
dec
jmp
mov
loopne
push
call
fstpl
sub
lock
and
aas
call
inc
mov
push
push
iret
dec
xchg
xorl
mov
lahf
sti
adc
adc
loope
cmp
mov
xchg
incl
and
pop
jae
mov
and
sbb
sub
outsl
lcall
pop
inc
jo
xlat
bound
cmp
jle
outsl
js
mov
test
movsl
shlb
add
jmp
xchg
fisttps
das
incb
imul
fcmovnu
enter
fmulp
in
pop
pop
das
xchg
push
dec
daa
inc
jp
shlb
iret
sahf
mov
addr16
push
shl
xchg
movsb
sbb
popa
movsl
pushf
aad
sub
inc
dec
xlat
and
lods
cmp
jecxz
mov
pop
cmpsb
lahf
repnz
das
add
pop
pop
out
sbb
jno
repnz
pop
insl
cmpsl
mov
sbb
out
test
in
subl
sub
popf
mov
ret
mul
sbb
add
outsl
popa
outsl
adc
pop
das
mov
mov
sub
and
call
cld
add
mov
add
jno
inc
lcall
popa
mov
bound
int3
scas
xorb
cmp
stc
xor
dec
or
pop
push
and
jns
fpatan
sub
fadd
fwait
mov
lods
push
jge
insl
dec
cs
pop
cmpsb
xchg
mov
jo
rorb
pop
aaa
icebp
sub
jo
out
and
push
in
out
xchg
push
sub
loope
jg
push
addr16
call
pop
jo
mov
mov
push
or
inc
shrl
or
sbb
jb
pop
xor
popf
push
out
ss
out
jb
xor
xchg
xchg
xchg
sub
aaa
scas
cmp
incl
pop
jno
jmp
mov
xchg
sub
push
sahf
sbbl
jmp
int
cwtl
pop
inc
dec
mov
xchg
add
adc
cmpsl
mov
lcall
xor
hlt
adc
pop
mov
pop
mov
and
daa
lret
jnp
les
pop
xor
fisttps
sbb
or
incb
loopne
jecxz
xchg
dec
popa
sbb
dec
add
cltd
lahf
js
ret
stc
sbb
sbb
fimull
shrl
jg
push
outsl
fistps
jns
inc
shrl
popf
je
cmp
mov
xchg
arpl
dec
cmp
lods
inc
mov
and
into
test
mov
mov
seto
and
outsb
lret
movsb
into
aad
outsb
add
dec
xor
push
sahf
gs
fdivl
addr16
add
jns
clc
lods
int3
ja
insl
mov
jne
sub
stc
stos
adc
loope
xchg
das
sbbl
fisubs
pop
shl
stc
dec
adc
in
push
xchg
lock
cmp
outsl
sbb
jle
lods
daa
lock
sbb
pop
jmp
xor
stos
mov
cld
mov
push
push
mov
xor
mov
clc
xchg
daa
out
cmp
call
add
cmpsl
lahf
or
aad
cmpsb
push
adc
call
lock
and
xchg
cmp
ja
inc
mov
out
and
imul
push
cld
outsl
aas
addr16
mov
mov
inc
mov
add
popa
aas
das
fdivrl
mov
dec
int
or
ss
jno
rcrb
sbb
fs
push
ljmp
jne
mov
popf
inc
xchg
leave
insl
cmp
pusha
out
adc
mov
sub
lods
not
sbb
lahf
inc
mov
jo
out
call
insb
cmp
stos
fists
leave
sub
mov
mov
insb
push
sub
mov
xchg
popa
or
outsl
sub
data16
dec
lods
dec
imul
repnz
lcall
int3
int3
inc
mov
ja
cmp
pop
inc
sub
push
adc
mov
pop
ds
push
pop
cmp
orb
bound
pop
inc
mov
sbb
iret
pop
shlb
adc
push
dec
in
fstpl
ss
shr
mov
or
es
fwait
test
or
subl
js
push
mov
je
fucom
out
daa
jno
scas
xchg
jbe
dec
mov
adc
pop
cmpsl
adc
out
xor
sbbb
into
movsl
cmpsb
incl
and
xchg
and
imul
xchg
iret
cmpsb
clc
xchg
xor
outsl
mov
inc
jbe
arpl
mov
jbe
mov
ret
pop
add
loope
mov
shl
out
xchg
les
ja
cmp
nop
lods
out
jnp
in
mov
test
test
out
cmp
sbb
mov
xor
xlat
mov
add
inc
aam
push
rol
pushf
mov
add
inc
lods
movsl
sahf
add
jne
jge
pop
icebp
and
flds
sbb
cmp
fmuls
ret
leave
das
popf
rorb
bound
lods
pusha
fs
fwait
int3
popf
iret
lea
in
sbb
sub
push
inc
les
and
arpl
mov
movsl
push
movsl
lock
adc
add
int3
movb
mov
push
xor
xor
cmp
push
cld
xor
clc
scas
fisttpll
scas
dec
dec
incb
fistpll
jmp
out
fidivrs
and
sub
or
mov
push
stos
sahf
jno
cmp
or
mov
xorl
push
cld
ljmp
fdiv
popa
fstps
push
adc
test
jne
pop
fimuls
lea
adcb
int
cmc
test
arpl
xor
xor
xlat
mov
dec
pop
cwtl
dec
lock
cltd
xor
cmp
jmp
cmp
lahf
pop
push
sbb
add
pushf
idivb
nop
pop
imul
fisubrs
or
mov
insl
push
cmc
or
sbb
mov
jge
dec
movsl
lods
outsl
es
mov
test
pushf
pop
cmp
sarl
pop
sahf
repnz
dec
lods
lret
adc
xchg
test
and
or
dec
cwtl
xlat
les
aad
push
loopne
movsb
pop
sub
xchg
sbb
xchg
leave
popf
jnp
popf
imul
jbe
subb
cmpsl
dec
xchg
sub
mov
out
loop
push
jg
popa
xor
pop
push
jge
enter
cs
push
mov
subb
lds
push
jae
outsl
out
add
jns
ficompl
sub
pop
mov
je
jno
sbb
outsl
addr16
aam
les
lahf
xchg
xchg
outsb
dec
dec
fsubrs
mov
pop
mov
imul
jle
and
dec
stc
repz
ss
or
fwait
out
outsb
add
jle
pop
out
pop
pop
xchg
dec
inc
lock
lds
xchg
inc
arpl
test
mov
gs
mov
pushf
out
test
cmpl
and
push
fs
jno
push
sahf
aaa
mov
in
dec
xlat
lahf
add
icebp
fimull
dec
mov
inc
cmp
fcmovne
icebp
fistl
or
jle
sub
fs
ror
push
addl
ret
push
inc
sti
data16
fdivrs
repz
add
jge
mov
cmp
pusha
out
movnti
popf
and
mov
pop
pushf
aam
ds
pushf
mov
out
lahf
xlat
jmp
aad
cmp
mov
cs
add
cmp
xor
jo
push
into
in
cmp
adc
outsl
jno
and
mov
sub
sbb
sahf
xchg
nop
mov
and
outsl
sahf
iret
setne
xchg
or
data16
fcmovnu
lods
inc
pop
add
xor
idivb
gs
fistpl
push
push
setbe
fstps
pop
inc
repz
pusha
add
clc
testl
sub
lock
pushf
jge
das
or
jmp
es
aad
in
rcrb
jb
xchg
mov
pop
push
or
mov
test
dec
sub
push
shlb
push
out
cltd
outsl
mov
lahf
adc
out
mov
aas
lret
pop
scas
push
add
popa
pop
dec
mov
adc
push
nop
dec
mov
mov
add
mov
adc
dec
jno
jne
cmovp
imul
xchg
popf
xor
bnd
push
and
movsb
sub
inc
and
movsb
lret
jnp
xor
mov
xlat
out
push
sarb
jge
pop
mov
or
xlat
jbe
sub
ficoml
shrl
cmp
mov
cltd
lock
leave
add
mov
mov
shll
mov
cmp
adc
fisubs
add
or
repz
dec
and
adc
mov
int3
fmull
and
gs
cld
add
ret
lahf
cmc
mov
jb
mov
inc
jbe
lret
jle
popf
rclb
fmull
inc
and
add
outsb
dec
cmc
inc
and
fstpt
lods
adc
out
pop
stc
scas
repnz
xlat
cvttps2pi
aam
pop
in
mov
xchg
mov
xlat
and
sub
pushf
xchg
loopne
pop
jmp
repnz
jle
jno
insb
jb
out
fisubrl
pop
pushf
movsb
pop
push
xor
cmp
repz
cld
ret
mov
mov
je
inc
cmpsl
dec
sub
sub
mov
lret
jne
ljmp
pop
sub
int
nop
adc
idivb
fidivs
or
pushf
insl
cmpsb
mov
sbb
sub
loop
mov
call
xor
fwait
mov
pushf
dec
loope
push
push
sub
pop
fimull
aas
movsl
jae
popa
and
mov
popf
jg
fsubp
mov
lods
pop
adc
addr16
insb
mov
push
and
ljmp
jb
push
das
cs
and
inc
xor
fistpl
fwait
clc
pop
hlt
in
pop
inc
jp
pop
mov
jo
fs
das
xchg
mov
in
mov
push
mov
add
popa
jb
outsb
cwtl
outsl
xchg
mov
cmc
pushf
push
add
sbb
adc
or
mov
adc
sub
test
stos
jae
mov
xchg
ret
mov
in
and
popf
cmpsl
dec
or
push
jne
xchg
stos
je
push
iret
mov
push
jne
cmpb
cs
test
sbb
out
movsb
xlat
mov
lea
pop
push
sub
fcoms
out
jecxz
lods
pop
mov
adc
or
sub
xor
andb
fildl
push
push
mov
jno
loop
pop
pop
or
cwtl
sbb
js
jge
add
test
sbb
ds
mov
or
stos
out
adc
sbb
mov
les
in
mov
mov
aad
mov
xor
cmp
sub
xchg
xchg
hlt
sahf
add
pop
aas
mov
fldcw
or
push
sahf
fucomp
inc
loop
adc
dec
and
adc
dec
mov
adc
push
jnp,pn
xchg
pop
pop
sahf
pushf
xchg
push
mov
adc
popa
inc
jbe
xlat
data16
rorb
add
cmc
out
cmpsb
and
pop
cmp
outsb
outsl
mov
jge
ret
fwait
sub
mov
xchg
cwtl
fyl2xp1
mov
lahf
ret
jo
jae
popf
jmp
jge
fwait
xor
ficomps
out
inc
cmpsb
pop
xchg
ret
pop
dec
mov
sarl
imul
stc
sbb
ret
scas
cmpb
cld
sbb
insl
stc
inc
jae
jg
aaa
jl
rcl
les
cmp
stc
movsl
daa
mov
outsb
pushf
out
dec
xor
sub
xchg
aad
popf
test
outsl
and
in
cmp
jo
lods
fwait
movsb
pop
test
xor
enter
mov
and
negl
aam
pop
lea
xor
sbb
rcrl
push
jg
sub
pop
inc
fistl
jmp
xor
pushf
push
xchg
jae
pop
fcomp
or
ret
xor
test
inc
pop
dec
fstps
inc
fs
fsts
mov
add
cmp
test
int
sub
adc
call
cmp
cmc
mov
mov
loopne
dec
pushf
pop
or
fbld
incb
rorb
outsl
xchg
mov
xor
xor
into
push
daa
jle
lds
cmp
scas
ljmp
lea
jns
add
gs
into
or
dec
jnp
jo
popf
aam
sahf
testl
outsl
mov
pop
pop
and
sub
mov
inc
mov
andl
lods
xchg
repnz
testl
dec
popa
sub
call
adc
out
cmpsb
jbe
and
insl
mov
in
cs
into
push
fwait
addb
and
in
pop
inc
in
mov
test
push
popf
mov
lods
into
aam
mov
cmp
dec
decb
test
shll
mov
das
sbb
sub
pop
popf
mov
aam
push
xchg
jge,pt
fcomp
xchg
out
int3
inc
popaw
add
or
inc
loope
inc
test
leave
mov
push
jbe
data16
js
leave
mov
jb
test
adc
in
nop
sub
test
mov
add
out
test
outsb
jo
inc
sbb
out
scas
cmp
dec
xchg
xor
mov
dec
enter
movsb
test
nop
pop
enter
xchg
mov
test
add
lock
test
or
out
sbb
rorb
test
in
pop
cmp
push
inc
inc
repz
daa
rol
adc
lods
inc
jne
jge
ss
inc
ds
movsl
fistpl
rclb
or
rcr
or
movsb
sub
out
call
sub
mov
repnz
mov
sbb
lret
inc
xchg
in
push
jb
cwtl
jl
pop
dec
js
aam
inc
lock
inc
xchg
cmp
mov
mov
dec
mov
rorl
outsb
xchg
popf
sbb
xchg
cmpsb
sahf
pushf
cmp
fwait
sub
ljmp
fwait
int3
push
add
imul
mov
call
out
inc
loop
jae
scas
mov
and
out
sahf
push
sub
sbb
out
pushf
ljmp
pop
dec
dec
lret
xchg
cld
xorb
adc
test
push
adc
and
clc
jnp
push
jnp
arpl
adc
addr16
gs
scas
lret
xchg
mov
pop
xor
sub
subb
xchg
add
addr16
andl
push
sahf
ret
scas
push
test
js
shl
jmp
out
mov
pop
popa
and
mov
and
pop
lcall
and
repnz
std
rclb
adc
push
lods
test
sbb
sub
sbb
xchg
inc
adc
mov
enter
aam
mov
jge
push
xlat
repz
xchg
push
and
and
in
popf
jg
fiaddl
push
sti
fsts
lret
sbb
push
scas
sub
sbb
mov
mov
loope
pusha
jmp
loopne
push
add
fdivrl
out
sub
gs
std
leave
shl
dec
adc
jp
shrl
orb
and
insb
dec
lods
cs
xchg
pop
fstpt
sbb
fmul
fistl
inc
sbb
dec
jb
push
pushf
hlt
push
jb
sub
jae
xor
das
or
imul
sub
lret
in
xor
cmp
sub
inc
xchg
js
in
call
popa
das
dec
loop
xor
adc
sub
imul
je
jge
dec
and
xor
in
movsl
cmp
jno
xchg
fwait
push
fcomps
punpckhwd
jne
push
add
clc
mov
mov
fwait
orl
ss
mov
loopne
dec
sbb
pushf
mov
xor
lods
and
sbb
aam
jg
mov
sbb
pop
or
sub
cltd
sbb
pusha
sbb
mov
inc
add
jmp
mov
and
cs
dec
in
push
aam
pop
sub
aam
inc
mov
cmp
inc
and
in
test
lock
pop
fisubl
push
lods
push
imul
sub
clc
hlt
mov
popf
subl
push
test
mov
push
push
jmp
sbb
je
int3
jae
nop
push
cmp
mov
mov
shl
mov
jnp
push
outsb
xor
adc
shll
pop
ficoml
adc
lods
push
cld
hlt
mov
mov
rcrl
data16
xor
in
jne
shlb
shlb
adc
imul
sub
int
dec
or
inc
jnp
sbb
jbe
jns
sbb
outsb
push
sbb
or
mov
dec
sahf
out
mov
leave
int3
outsl
gs
push
iret
out
push
fwait
xchg
enter
es
sbb
jb
push
pop
call
loope
inc
or
and
or
fmulp
roll
mov
push
xchg
out
jle
pop
mov
sahf
aaa
addr16
jnp
xor
sub
ret
cwtl
pop
lcall
inc
mov
mov
in
push
sbb
data16
hlt
push
pusha
lcallw
mov
aaa
pop
aaa
jle
mov
push
inc
mov
loop
into
adc
fs
xchg
cmp
adc
sbb
mov
inc
jmp
mov
jne
pop
sub
xor
insb
cmp
pop
das
imul
cmp
gs
sti
repz
cmp
push
sub
dec
movsl
call
int3
jnp
roll
es
push
adc
stos
cmp
loope
leave
pushf
scas
popa
add
pop
shll
mov
pop
outsl
cmp
inc
fistpll
lods
mov
rcl
or
lods
jbe
and
or
stc
test
into
or
sub
lcall
jae
pop
cli
sti
pop
xlat
xchg
jp
mov
push
insb
push
jmp
inc
scas
cmp
adc
mov
imul
add
mov
mov
data16
fwait
xchg
into
iret
add
mov
in
aam
pop
dec
mov
loope
inc
rolb
adc
add
xor
jb
and
lods
xchg
sti
pop
add
cld
inc
popf
cmpsb
stos
bound
pushf
xor
xor
std
sub
push
fcompl
hlt
jns
adc
cli
sbb
jo
pop
mov
pop
ja
mov
fidivl
mov
jmp
repz
mov
sub
pop
jl
fimuls
add
xchg
push
outsb
roll
jmp
lods
or
ret
xchg
dec
jae
aad
and
in
repz
jmp
mov
jge
sub
push
adc
fcomps
pop
add
and
cmp
and
mov
sbb
movl
pushf
xchg
jns
push
push
xchg
int3
mov
jmp
jl
adc
push
or
in
push
add
aaa
lcall
pop
popf
pop
xlat
mov
les
inc
lcall
dec
adc
lock
and
mov
add
shrb
cmp
jb
shll
add
out
inc
add
lods
repnz
mov
xchg
daa
enter
inc
xchg
cmpsb
mov
xor
and
add
dec
subl
push
jb
and
cmp
cmc
ret
sub
fcoms
jbe
cmp
arpl
fidivrl
fcompl
and
push
add
ja
test
pop
repnz
iret
into
ds
jl
sahf
ret
push
or
xchg
cmpb
jp
jecxz
dec
icebp
or
fiaddl
inc
fildll
mov
leave
subb
sub
lcall
test
push
gs
or
lds
jl
xchg
cmpsb
jg
xlat
inc
orl
mov
pop
sub
hlt
movsb
repnz
fwait
es
test
fsubrl
rcrl
test
mov
stos
sbb
and
ss
sahf
xchg
dec
pop
arpl
int
cmpsb
int3
insb
mov
insl
rclb
adc
in
fstpt
push
xor
movsl
stos
jl
imul
and
movsb
sub
pop
in
cmpsl
mov
inc
sbb
xchg
inc
add
fildl
inc
clc
mov
out
xchg
or
mov
pop
pop
and
push
fisubl
icebp
xchg
xor
popa
and
pushf
packuswb
scas
call
in
mov
int3
mov
mov
jmp
push
mov
stos
lock
or
ret
aam
in
out
rcrl
sbb
sahf
cltd
sub
inc
jnp
push
fwait
mov
popa
aaa
arpl
orb
or
xchg
and
jbe
pushf
dec
rolb
cmpsb
insb
cmpsl
popf
fistpll
xor
mov
push
adc
mov
dec
pop
popa
into
inc
xor
pop
addb
adc
xchg
in
sub
sub
jno
jb
sbb
mov
cmpsb
stc
sbb
cmp
mov
ljmp
mov
pop
xchg
fistpll
ds
fidivl
add
or
mov
xor
pop
xchg
andb
jmp
push
xchg
mov
ljmp
inc
lock
imul
sub
and
add
adc
dec
pop
push
push
adcb
dec
mov
adc
popf
enter
mov
cmpsl
fsubl
jmp
stos
push
in
shll
cmpsl
into
shl
iret
ret
std
outsb
xor
push
mov
xchg
ja
test
xor
cmp
pop
jbe
es
out
inc
sub
jmp
adc
mov
fs
sub
or
lret
xor
sahf
pop
les
push
mov
or
sub
cltd
clc
or
lcall
pushf
fwait
popf
push
or
pop
jmp
push
pop
lret
divb
mov
hlt
jns
dec
cmp
push
fisttpll
imul
out
sbb
mov
push
cmpsb
mov
iret
xor
xor
das
jmp
addr16
in
enter
js
lret
nop
jnp
mov
ljmp
push
dec
fstl
out
pop
cmp
mov
xchg
adc
mul
out
cmpsl
push
sub
mov
jno,pt
pop
lret
and
or
mov
jecxz
cltd
jb
pop
scas
and
dec
xor
xchg
aam
push
inc
fcoml
divb
movsl
xchg
xchg
cmp
enter
daa
fsubs
push
outsl
inc
mov
cwtl
xchg
in
es
mov
dec
mov
xor
test
lods
int
mov
fildll
and
pop
rcl
pop
inc
add
dec
ja
out
pop
popf
int
sbb
cmpb
cli
movsb
das
mov
push
cmpsl
push
fistps
mov
inc
js
test
jecxz
xor
inc
les
repnz
cltd
mov
dec
cmp
imul
push
add
or
sbbb
aas
push
push
cmpsb
lock
out
ja
push
out
xchg
add
leave
iret
mov
pop
cwtl
xor
cmp
mov
sbb
xchg
ficompl
push
mov
subps
pop
dec
jo
test
mov
mov
push
mov
test
jb
repnz
ret
and
sub
mov
jbe
rorb
xchg
sub
mov
ret
scas
mov
pop
fdivs
daa
divl
aam
lcall
xchg
int3
lcall
ja
repnz
int3
lods
dec
lds
dec
adc
and
or
sbb
aam
adc
pushf
pop
lret
inc
xchg
pop
inc
mov
dec
xor
fisubl
in
mov
mov
push
out
pop
cmp
jmp
mov
pop
js
sub
fst
xchg
push
aad
cmp
push
inc
xchg
and
enter
push
xchg
in
cld
lahf
push
sub
sbb
push
in
hlt
pop
cmc
mov
insb
outsl
in
mov
rcrb
jb
test
cmpsb
lods
cmpsb
xor
lods
mov
scas
sbb
xor
into
int
sub
jno
jle
sbb
data16
cmpsb
adc
or
out
add
mov
ja
imul
pushf
jb
sub
push
sbb
mov
jo
iret
int3
test
dec
lret
xchg
add
mov
xchg
xchg
xchg
push
fwait
popa
xor
inc
hlt
gs
or
mov
hlt
dec
lods
jp
xor
or
hlt
or
divl
rclb
sub
mov
push
daa
icebp
inc
lods
loope
dec
sub
pop
add
popf
lods
pushf
mov
inc
test
mov
negl
mov
push
jmp
cmp
outsb
sbb
mov
ret
mov
test
inc
roll
add
and
or
or
cmp
arpl
hlt
rorl
add
in
ret
into
sbb
divb
lret
bound
test
push
inc
cwtl
add
sti
mov
notl
and
lahf
in
fsts
jge
imulb
lret
pushf
xor
lret
push
dec
jns
add
hlt
test
xor
push
dec
push
iret
arpl
jge
addl
cmp
mov
notl
and
push
fwait
xchg
scas
shll
cld
mov
pushf
xchg
or
shrb
adc
aad
sahf
and
adc
les
sti
lahf
popa
repnz
xchg
mov
lahf
dec
repz
int
dec
xchg
mov
into
xor
js
notb
and
add
and
xchg
divl
rclb
sbb
sub
je
jb
pop
push
ds
mov
je
mov
sbb
fidivl
adc
mov
xchg
sub
sbb
mov
xor
jo
mov
roll
out
data16
repz
dec
inc
lcall
lahf
pop
ljmp
test
in
shlb
mov
sti
pushf
sbb
out
lock
lds
xchg
inc
mov
push
xchg
dec
mov
jae
push
mov
sti
or
push
mov
xchg
ss
das
pop
cmp
inc
dec
mov
or
jo
iret
inc
xchg
fs
xchg
xor
outsl
test
add
add
shlb
loope
dec
std
jmp
js
enter
cld
or
xchg
sbb
sbb
add
aad
mov
pushl
addb
nop
std
filds
pop
arpl
stos
fisubrl
in
adc
add
xchg
daa
mov
in
test
dec
lcall
arpl
pop
xor
xor
push
lret
dec
mov
imul
xor
mov
sarl
movsb
push
testb
mov
enter
je
mov
ja
pop
inc
fsubr
and
mov
imul
jbe
and
mov
fnsave
cmc
pusha
loopne
sbb
imul
fsubs
xor
pop
lds
sbb
jecxz
sub
dec
dec
cmp
or
push
mov
std
jbe
jne
jae
lret
push
cwtl
push
pop
test
fnstcw
xor
js
sbb
idiv
and
sbb
arpl
enter
pop
cmp
sbb
sbb
cld
rolb
mov
out
cld
pcmpeqb
out
testl
dec
adc
sub
aam
movswl
xchg
mov
ds
es
and
je
mov
mov
int
xchg
xor
jnp
lahf
lods
or
mov
cmp
dec
test
aam
cmpsl
dec
jecxz
jnp
xchg
inc
dec
mov
pop
ret
inc
pop
pop
aad
mov
cwtl
inc
lods
pop
push
stc
in
lcall
daa
push
lock
in
stos
jo
loopne
cwtl
xchg
das
xchg
test
inc
out
out
inc
iret
dec
jle
dec
repnz
push
and
in
aas
sub
iret
cmp
jb
xchg
mov
repnz
dec
inc
stos
mov
imul
out
adc
or
push
mov
dec
lods
lods
mov
sahf
xlat
xor
mov
cwtd
lods
pop
pop
jbe
je
pop
cltd
adc
sbb
int3
call
xor
pop
mov
aad
outsb
cld
push
mov
in
pushf
push
cmp
push
imulb
push
pop
push
cmpsl
in
pop
out
negb
jl
in
mov
mov
cltd
stos
es
inc
stos
cmp
dec
mov
sub
mov
jb
mov
fldt
xor
in
scas
rcl
push
mov
clc
hlt
int3
and
sbb
cmp
and
rcrb
mov
jl
insl
jge
std
fs
fbld
sbb
pop
add
mov
ficoml
test
jle
push
mov
mov
push
cmp
mov
cmp
out
pusha
fcoms
sub
mov
ficoml
cwtl
jl
fiadds
fcmovbe
or
in
jp
dec
mov
mov
aad
test
mov
scas
or
orb
jge
mov
jo
pop
pop
jbe
pop
pop
in
mov
adcb
mov
pusha
aam
push
add
roll
sbb
push
fldl
push
mov
hlt
or
jge
mov
popf
call
dec
in
cmp
fwait
ret
shll
mov
lcall
ds
nop
lock
mov
adc
mov
pusha
push
outsb
pop
dec
mov
lret
imul
outsl
in
dec
add
push
popa
mov
mov
pop
pop
mov
test
pop
jnp
xchg
sbb
inc
lret
fwait
mulb
addr16
add
xchg
cld
xor
clc
cmp
test
in
bound
jno
mov
outsb
or
ljmp
dec
sbb
xor
movsb
or
lret
jecxz
mov
dec
xlat
mov
stos
fstpt
inc
mov
mov
movsl
cmp
ljmp
in
mov
jno
aad
fcmovnbe
nop
xchg
jno
adc
sub
mov
fcoms
aaa
push
inc
scas
imul
loope
aam
push
jno
cmpsb
mov
jmp
aaa
cmp
ret
xchg
jg
call
lea
mov
sub
test
aas
push
or
dec
fs
inc
out
jno
fnstenv
cwtl
pop
stos
cltd
dec
sbb
mov
fcmovbe
imul
scas
jmp
mov
push
sub
xchg
push
lods
and
inc
sub
inc
push
adcl
or
ljmp
add
cltd
in
push
arpl
nop
enter
call
or
arpl
popf
push
mov
mov
dec
jle
loopne
dec
and
fstpl
and
cmp
and
stos
arpl
add
andb
mov
jl
fwait
sahf
ss
or
pop
out
push
aad
daa
out
adc
xor
movsb
dec
gs
insb
or
fadds
outsb
aad
movsb
cmc
xlat
call
mov
mov
pop
xor
sub
or
cmc
dec
imul
sbb
repz
enter
ss
in
lods
add
mov
fucom
call
adc
out
pop
repnz
mov
push
jae
pop
and
add
push
sbb
push
fwait
outsl
testl
sbb
fwait
push
xchg
xchg
cmp
repnz
frstor
adc
xchg
mov
in
rcrb
dec
daa
aad
negl
xor
repnz
and
pusha
popa
test
cmp
push
or
call
mov
cld
or
or
push
popf
test
cld
dec
sub
rcr
mov
mov
ret
dec
mov
jmp
cmp
dec
cltd
mov
ljmp
ss
cmc
imul
mov
clc
mov
pushl
dec
dec
mov
movsb
mov
sbb
mov
rol
mov
push
pop
shlb
push
test
mov
cmp
sbb
aas
sub
or
je
movsl
fsubs
fsubs
cmp
loopne
push
jb
loopne
adc
inc
bound
inc
repnz
and
inc
or
nop
and
test
pop
pushf
popf
dec
mov
inc
fcmovu
sarb
sbb
mov
pushf
adc
mov
movsl
dec
sti
adc
dec
test
jns
or
sbbl
les
out
imul
test
jnp
mov
mov
inc
jg
push
xor
fiaddl
pop
stos
call
pop
and
test
rorb
cld
cld
xor
and
lods
xchg
pop
xchg
dec
xchg
inc
sti
or
pop
mov
loopne
dec
sub
jle
lods
loopne
icebp
fs
call
int3
xor
loope
and
sbb
shll
pop
mov
mov
fs
test
test
or
push
xchg
sbb
mov
mov
scas
and
mov
adc
pop
push
loope
ret
inc
pop
and
or
or
mov
shrb
mov
pop
aaa
pop
pop
sbb
mov
ss
into
bound
outsb
mov
jno
pop
lock
shrb
jp
push
aad
ljmp
out
enter
inc
sub
sti
xor
add
xor
jae
subl
or
mov
cmp
push
aam
in
inc
sub
std
fs
pushf
test
adc
push
test
in
mov
push
mov
inc
rcrb
dec
or
cwtl
mov
out
sub
xchg
dec
pushf
sti
popf
imul
jns
clc
enter
in
hlt
stc
xor
popa
hlt
pusha
xor
push
mov
sahf
inc
lahf
xchg
adc
sti
stos
test
or
pop
mov
xor
pop
pop
movsb
aad
cmp
sbb
lahf
aaa
cwtl
and
mov
fsts
fbld
movsb
pop
lods
push
and
mov
test
dec
mov
popf
addr16
lcall
out
mov
sub
mov
and
dec
or
ret
and
sbb
call
push
jnp
or
pop
jle
lret
in
mov
cmp
frstor
xchg
movsl
sub
and
push
push
pusha
inc
cmpsb
fcoms
lret
arpl
pop
and
ret
sbb
adc
repnz
movsl
mov
cmp
or
cld
jns
lock
mov
pop
jl
mov
push
or
inc
dec
scas
sub
mov
dec
pop
imul
in
xor
ljmp
mov
clc
mov
jb
lcall
arpl
pop
scas
or
pushf
pop
fwait
shlb
sbbb
inc
fnstenv
movsb
jecxz
cmp
lock
and
aam
cmpsb
mov
or
xchg
cltd
mov
sub
xchg
xchg
add
fcompl
adc
in
and
jae
jnp
add
aaa
idiv
add
jno
mov
into
gs
cmp
shll
mov
das
fs
test
xchg
test
sbb
and
mov
dec
dec
ret
sub
jecxz
pop
cmpl
lds
fwait
sbb
push
fldcw
repz
cwtl
sub
nop
test
mov
and
and
sub
incb
jnp
cltd
jg
iret
dec
repz
mov
movsl
ds
pop
das
push
xchg
std
mov
or
aaa
jmp
insl
push
xorl
push
dec
mov
js
jns
lahf
test
fwait
xorl
ror
and
push
push
jmp
or
fs
mov
cwtl
test
hlt
es
xchg
mov
cmp
stos
aad
pushf
push
add
shlb
imul
sub
adc
mov
cmpsl
test
add
lret
or
test
scas
or
mov
xchg
fwait
and
in
out
addr16
inc
nop
push
pusha
mov
imul
cmp
push
lcall
and
jne
push
shrb
sub
imul
out
cltd
lods
xor
sbb
fwait
mov
push
pop
leave
xorps
sbb
out
pushf
out
dec
scas
rcrb
xchg
xor
inc
enter
push
rolb
mov
jne
mulb
xchg
sub
ds
pop
loope
mov
shr
insl
addr16
sbb
repz
push
hlt
add
xor
push
and
mov
dec
outsl
adc
shl
pop
std
insl
jae
or
call
dec
jns
leave
pop
adc
in
adc
mov
into
mov
repz
iret
out
gs
mov
inc
and
lods
lods
scas
popa
mov
int3
rcll
adc
daa
lock
or
stos
or
mov
inc
jmp
les
mov
pop
lret
add
lcall
lods
aam
loope
sub
inc
adc
fildll
inc
loopne
and
xchg
mov
or
add
mov
mov
push
test
into
in
or
add
ja,pn
ret
lcall
fsubrl
jno
push
mov
test
insb
ret
xlat
test
movsb
sbb
sub
aaa
hlt
loopne
fsubrl
mov
orl
rcr
mov
xchg
pop
arpl
mov
push
jno
das
sub
xor
dec
out
inc
scas
orb
xlat
jp
js
in
push
ds
mov
cs
pop
lcall
insl
pop
dec
outsb
repz
stc
cmp
arpl
out
inc
or
clc
fnstsw
and
ficompl
fimuls
lret
jnp
aaa
pop
test
out
cwtl
add
fadd
in
test
mov
add
sbb
stos
addr16
nop
mov
pop
inc
in
mov
clc
inc
test
add
jmp
dec
sub
cwtl
jne
fs
inc
add
lods
push
je
push
mov
xor
sahf
lret
jp
outsb
xchg
dec
ret
xor
aaa
sub
dec
in
test
cmp
rolb
and
adc
or
mov
lds
rclb
aas
sbb
mov
loopne
sbb
jg
jb,pn
inc
out
xchg
sbb
and
in
push
in
stos
mov
test
inc
sti
cmp
je
mov
mov
cmp
stos
pop
jne
pop
dec
fwait
mov
mov
push
push
sbb
jns
or
pop
mov
popa
xchg
cs
mov
sub
test
push
cmp
jnp
loop
outsl
adc
pop
xchg
popf
push
mov
mov
incl
imul
or
xchg
dec
insl
or
lods
push
test
icebp
or
cmp
mov
mov
dec
shll
scas
sbb
stos
sub
or
dec
inc
sbb
dec
jno
inc
int
std
fiadds
clc
lahf
xor
bound
loop
push
xor
stos
out
shlb
sub
mov
jbe
iret
mov
jae
clc
cltd
insb
pop
repnz
inc
add
add
ds
insl
xor
out
and
pop
iret
pop
mov
mov
pop
por
cs
test
and
sbb
cmp
pop
pop
mov
xchg
mov
and
cltd
push
add
jne
ret
pop
push
in
xor
or
add
jne
push
dec
sub
fstpl
dec
add
push
xchg
inc
adc
divl
push
pop
pop
cltd
mov
jnp
imul
mov
cmp
dec
pop
or
stos
cmovp
movsl
imul
mov
loopne
aam
push
mov
rorb
ret
les
or
inc
loopne
nop
add
fs
inc
mov
pop
xor
outsb
popa
push
outsl
push
pusha
cmp
cmp
ret
push
xor
mov
jne
jno
out
call
pusha
or
test
cmp
movsb
les
std
fsubrs
test
sub
jnp
jb
push
xor
mov
mov
nop
jno
loopne
mov
jge
int
cmpl
and
stos
inc
int3
ret
pop
pop
or
sbb
sub
aaa
sbb
iret
pop
les
fists
pop
mov
mov
gs
pop
inc
mov
mov
test
push
and
jb
sbb
test
aam
xor
js
jne
pop
insb
je
mov
cmp
mov
mov
cmp
into
out
andl
xor
es
mov
js
push
dec
and
inc
adc
arpl
pop
jg
ret
push
rcl
add
bound
fbstp
sbb
mov
cwtl
es
or
into
jo
push
push
test
ffreep
cmc
mov
xchg
pop
adc
incl
xor
bound
pop
mov
jnp
ljmp
mov
dec
lea
cwtl
adc
cmpsb
sub
jo
xchg
add
out
rcl
inc
cmpb
and
pop
push
dec
cmp
ficoms
call
push
ret
mull
jae
lcall
xchg
das
sub
xlat
shlb
mov
imul
mov
mov
and
adc
ret
inc
or
cmp
pop
in
imul
stc
sbb
jne
mov
aas
mov
ret
xchg
dec
movsl
dec
mov
je
pop
lds
outsl
lds
cmp
lea
rcl
xlat
dec
fcomp
js
repz
gs
in
test
cwtl
shll
dec
or
inc
outsl
jo
xchg
lock
ljmp
cmp
pop
loope
inc
leave
mov
push
bound
out
fistpll
mov
leave
test
les
ret
mov
push
pop
pop
scas
mov
aam
push
inc
xchg
clc
lcall
xchg
in
pop
xchg
jo
lret
es
int
leave
cmp
arpl
mov
repz
push
je
dec
pop
cltd
cmpl
mov
xchg
push
negb
xchg
aas
fwait
xchg
lcall
sbbb
adc
xlat
insb
fcompl
jae
aam
cltd
cmp
test
mov
arpl
mov
sbb
and
jns
clc
test
movsb
xlat
js
push
and
push
js
push
and
fdivrl
mov
sub
ret
das
and
lods
pusha
ret
mov
fsts
jg
dec
mov
pop
stos
or
scas
push
sarb
xchg
jmp
inc
sub
ds
loope
push
out
arpl
pop
push
orb
faddl
mov
xor
ret
fildll
fsts
or
enter
dec
cwtl
stos
mov
inc
data16
dec
sub
fucomp
inc
repz
jo
fmuls
lahf
push
cmp
cmp
enter
cmp
popa
js
fsubl
push
pushf
push
ss
loope
inc
adc
sbb
mov
test
das
jne
mov
add
sub
adc
pop
data16
mov
mov
test
out
xchg
rcl
mov
test
push
pop
sbb
or
jle
mov
mov
dec
and
aad
adc
push
sub
test
mov
sub
xchg
mov
sbb
mov
push
lods
scas
fldcw
xchg
jb
arpl
adc
adc
xchg
and
xchg
notb
dec
and
mov
popl
cmp
inc
sub
add
push
sbb
add
pusha
repz
xor
cmp
daa
iret
iret
adc
dec
xchg
dec
inc
je
pusha
nop
push
fwait
lcall
les
fwait
imul
je
xchg
in
cmp
ret
xor
mov
leave
repnz
push
mov
out
adc
push
lods
xchg
sub
jp
fdivr
pop
pop
pop
jo
and
and
xchg
jmp
aam
pushf
lcall
jb
les
mov
lea
fidivrs
push
cs
fstps
push
insl
clc
sbbb
cs
mov
clc
sbb
cmp
test
inc
popa
test
cmp
xor
jmp
ret
ds
and
sbb
mov
xorb
pop
pop
sbb
pop
xchg
cwtl
lret
inc
pop
shlb
cmpsl
leave
sbb
xor
or
push
ljmp
ja
push
scas
or
or
jge
xor
test
add
test
inc
lods
aad
das
cltd
fidivs
mov
inc
daa
or
scas
mov
adc
in
xor
andb
xchg
mov
es
or
les
and
add
stc
imul
divb
jnp
movsb
dec
add
sbb
daa
push
lahf
clc
or
inc
mov
fisubrl
scas
push
push
nop
aaa
cmp
iret
fdivrs
popa
and
mov
dec
inc
iret
dec
sarl
scas
pop
jbe
cwtl
cli
movsb
push
jge
xchg
push
sub
test
adc
aas
test
popf
mov
mov
jp
xor
lcall
fs
push
mov
fsub
jnp
add
dec
lcall
sub
pop
mov
int3
scas
cltd
pop
aaa
jg
imul
adc
mov
pop
mull
or
stc
in
inc
dec
dec
fcomps
inc
mov
pushf
mov
ret
hlt
xor
xchg
mov
gs
jge
sub
std
pop
xchg
mov
jnp
adc
push
push
inc
push
sub
xchg
sub
not
cmpsb
lret
popf
test
xchg
cli
out
pop
arpl
scas
push
pop
cltd
out
mov
lret
test
mov
repz
dec
sbb
addr16
shrl
and
jl
push
sub
xor
out
into
int3
dec
inc
notb
or
in
dec
add
nop
pop
xchg
test
pop
stc
sub
xchg
roll
rcll
outsl
sub
cmc
mov
shrb
or
mov
aam
nop
not
cltd
push
xor
sub
sbb
sub
push
dec
jmp
cltd
jne
push
add
mov
and
lahf
insb
ret
xchg
stos
ret
fcmovbe
mov
in
rcll
mov
mul
and
out
out
scas
das
arpl
mov
add
xchg
stos
add
daa
fnsave
inc
dec
and
jle
jp
dec
jo
pop
jmp
jmp
push
adc
divb
jmp
arpl
add
lahf
aaa
mov
out
sbb
les
push
roll
test
jns
sbbb
lds
jb
std
imul
pop
pop
repz
cwtl
pop
ret
fcomp
dec
andb
cmp
mov
xorb
and
or
mov
fwait
sub
xchg
push
jne
inc
jbe
adc
lds
push
fisubrl
mov
cmp
pop
fisttps
adc
les
adc
adc
inc
test
lods
in
inc
lret
add
mov
jle
cmp
pushf
ljmp
inc
xor
mov
js
inc
les
mov
adc
and
pop
outsl
daa
jns
add
call
cwtl
ja
dec
loopne
mov
mov
loope
popf
aam
js
mov
iret
mov
dec
push
shlb
roll
xor
frstor
and
push
mov
loope
and
leave
sbb
fbld
out
xchg
in
and
dec
outsb
mov
cmp
fisubrl
inc
enter
lahf
mov
adc
enter
jle
pop
lds
ljmp
enter
pop
test
xchg
xor
xor
adc
xlat
stos
test
mov
pusha
rcrb
add
lret
mov
insb
pop
cmp
popf
mov
add
push
shl
stc
stos
push
pop
mov
or
dec
movsl
pop
mov
xlat
in
arpl
cmpsl
jp
sti
add
test
sbb
cltd
mov
es
loope
aaa
pop
dec
mov
stc
push
pop
out
hlt
shrl
mov
inc
sub
arpl
ret
mov
mull
out
mov
cmp
fldcw
add
xchg
mov
rcll
cmp
push
xlat
int
mov
ret
aam
sti
dec
imul
out
push
xor
stos
nop
lds
mov
adc
sub
pop
addl
test
inc
lds
ret
into
lods
in
clc
inc
int3
push
loop
jns
scas
xor
mov
aas
loopne
dec
mov
jb
mov
imul
rcrl
pop
cltd
sub
in
or
push
dec
xor
cltd
sub
cmp
ficoms
out
or
xor
ret
testb
push
and
and
ljmp
xor
stos
lods
ds
add
pop
leave
test
testb
pop
lret
dec
sub
xor
inc
dec
lcall
mov
cmpsl
mov
mov
pushf
mov
out
cmp
jnp
mov
mull
jmp
or
and
ss
dec
mov
out
adc
out
negl
add
adc
cwtl
push
sub
pop
pop
and
xor
mov
iret
or
jns
sub
pop
leave
mov
dec
int3
sbb
and
adc
adc
sbb
xchg
out
xor
mov
push
xchg
dec
popl
mov
movsb
push
mov
lock
mov
aam
sbb
pop
fmull
leave
mov
cltd
push
or
popa
jne
pop
mov
or
jle
pusha
dec
loopne
stos
mov
rcrl
outsl
push
scas
in
cmp
xchg
mov
dec
mov
sub
rclb
mov
cwtl
push
sbb
sbb
and
sub
add
rcll
int3
mov
and
in
xchg
jle
mov
xor
call
fidivrl
sub
jbe
lods
pushf
stos
xchg
pushf
negl
adc
in
inc
dec
push
add
jmp
scas
inc
dec
lahf
jge
test
jae
mov
ret
insl
inc
and
adc
sbb
dec
cmp
inc
xor
popf
mov
sub
xchg
pop
add
jmp
les
sbb
jo
scas
loop
mov
xchg
mov
daa
lret
in
lock
sub
shrl
out
insl
mov
pop
nop
jge
stos
mov
dec
shl
xchg
andl
pushf
gs
mov
push
ret
rcrl
cwtl
aad
mov
ret
fmull
pop
push
xchg
xchg
mov
push
test
mov
and
or
cmp
incb
inc
or
xchg
call
addl
loop
pop
imul
jge
fisttpl
jg
fldl
mov
fadd
cmc
imul
shll
and
int3
and
inc
mov
sub
xor
ffreep
out
xor
mov
les
int3
mov
in
sar
sbbl
movsl
sub
pop
stos
xchg
dec
jno
dec
lahf
add
adc
outsb
sbb
ljmp
mov
test
stos
cmp
inc
push
jne,pt
repnz
jne
cltd
sbb
cmp
sub
adc
out
pop
and
mov
fs
mov
cld
mov
xor
lahf
test
sbb
das
jb
mov
inc
cltd
mov
jae
fists
inc
or
add
mov
mov
dec
jb
cmpsl
jl
clc
bound
cmp
mov
mov
sti
jne
ret
inc
sub
int3
fcoms
and
cwtl
fmul
test
test
dec
add
sbb
mov
lods
cld
aad
roll
mov
bound
inc
pop
xchg
andl
sub
iret
jge
inc
stos
push
xchg
jg
pop
retw
sbb
add
lcall
out
pop
test
mov
xchg
inc
add
sbb
test
movsl
and
push
push
stos
das
out
or
sub
mov
jno
cmp
xchg
pop
scas
pop
pop
dec
int
xor
frstor
fstpl
adc
sbb
adc
idivl
inc
sbb
lods
pop
xchg
mov
div
mov
xchg
lcallw
addr16
fsubs
sahf
dec
jne
jl
gs
adc
cld
mov
xchg
jb
ja
cwtl
flds
mov
adc
xchg
insl
push
mov
jle
push
loope
cltd
push
addr16
inc
hlt
roll
xchg
sub
adc
adc
movsb
jae
lret
add
lods
and
push
mov
sbb
mov
ret
nop
mov
int
call
xor
dec
gs
pusha
enter
fs
cmp
pop
jbe
mov
imul
lea
xchg
xor
testl
stc
aam
cltd
inc
ja
push
aad
jle
add
ds
fstps
aad
icebp
lods
xchg
outsl
addb
fnsave
out
lea
pop
cmp
pop
sbb
popa
fstl
shlb
sub
daa
mov
gs
jecxz
sbb
push
fstps
aad
inc
xchg
in
push
add
imul
sub
pop
mov
add
and
hlt
adc
xchg
cmpb
fildll
dec
xlat
mov
push
pop
icebp
and
and
in
loopne
test
xchg
mov
icebp
out
jmp
testl
pop
cmp
inc
xchg
syscall
imul
and
sbb
mov
dec
xor
iret
xchg
test
and
addb
push
mov
adc
sets
xchg
cli
hlt
lret
push
in
iret
addr16
mov
dec
outsb
or
and
pop
repz
aaa
xchg
out
cli
stc
or
xchg
xor
push
imul
fs
fistl
pop
xchg
or
loope
dec
pop
into
ret
xor
dec
rep
push
aas
pop
mov
adc
nop
or
movsl
mov
loopne
into
xchg
pop
scas
inc
mov
jns
push
add
xor
and
jno
nop
mov
mov
adc
push
xor
aas
xor
ret
imul
push
and
xchg
jno
aad
xchg
push
add
sbb
hlt
aad
insb
or
fistl
xchg
mov
or
and
je
and
xchg
push
sub
lods
jp
push
push
data16
pop
sub
popa
outsb
ret
ljmp
addb
enter
call
sub
add
push
push
mov
movsb
pop
ret
push
jb
fisttpl
clc
scas
out
xor
ja
clc
in
cmp
inc
lods
pop
or
push
push
add
sub
xchg
dec
and
pop
push
sbb
xchg
pop
insb
ret
xor
adc
rorb
jne
fcompl
xor
inc
pop
push
mov
gs
inc
xchg
add
sub
aas
leave
mov
push
pop
aad
lahf
xor
add
cwtl
lcall
xor
xor
dec
or
xchg
mov
cli
cmp
push
push
push
cwtl
add
nop
popa
mov
sbb
xchg
ret
xchg
aad
lods
mov
cmp
sbb
imul
xchg
out
test
test
fadds
xor
fisubl
mov
hlt
out
jb
pop
mov
sarl
shl
jno,pn
lds
mov
pop
testl
mov
inc
es
push
rol
mov
lret
insb
fldt
and
sub
mov
mov
mov
jge
mov
fucom
les
mov
sti
sub
mov
cwtl
test
sub
push
xor
sbb
dec
mov
clc
retw
rcrb
es
xor
je
fcoml
cmp
pop
inc
jno
push
xchg
test
xor
mov
mov
shlb
adc
sti
data16
scas
gs
adc
xchg
xor
scas
jmp
mov
push
shll
adc
pop
leave
inc
pop
jecxz
mov
xor
dec
push
pop
ret
dec
jmp
pop
lret
jbe
push
add
push
xchg
pop
cld
gs
sub
adc
std
and
aad
icebp
and
lcall
jmp
popf
pop
orb
inc
fists
and
arpl
xchg
lahf
fcoms
mov
nop
dec
out
push
cmpsl
aad
sub
xchg
push
sub
and
mov
jg
jge
ret
dec
or
das
cs
push
aam
adc
pop
sub
sbb
or
or
repz
lahf
or
js
in
pusha
xchg
aad
cltd
cmpsb
adc
sbb
push
cwtl
xchg
cmp
int3
or
cmp
test
stos
clc
test
cmp
inc
xchg
xchg
pop
xchg
sub
in
lahf
loop
imul
inc
xlat
pop
andb
jno
pop
xchg
sbb
push
jne
ljmp
cltd
call
or
dec
adc
stc
call
pop
pop
cwtl
mov
mov
pop
xchg
inc
fwait
mov
bound
xor
in
scas
out
pop
dec
xlat
push
and
fisttps
adc
xchg
es
xchg
clc
cmp
lods
scas
je
imul
addl
mov
arpl
test
jbe
in
mov
jecxz
xchg
and
xchg
jno
jp
out
sbb
daa
inc
xor
jecxz
or
aad
jnp
pop
or
sub
addr16
xchg
test
push
ljmp
mov
mov
pop
inc
add
stc
push
ret
iret
fadd
mov
aaa
mov
dec
push
push
xchg
push
xchg
in
insb
push
incb
xchg
movsb
mov
push
out
pop
cmpsl
ffree
mov
das
xor
out
xlat
std
and
xchg
jle
xchg
sub
sahf
xor
pop
mov
and
dec
icebp
xchg
sub
inc
in
cwtl
mov
inc
xchg
cld
lds
sbb
or
movsl
xor
push
ret
daa
aaa
xchg
test
mov
mov
sub
shll
sub
dec
xchg
xorb
cmpxchg
pushl
xchg
pop
pop
push
and
pop
repz
vmread
ja
lods
into
fisubs
lods
cmpsl
iret
xchg
jnp
shlb
loopne
jno
jbe
push
repnz
dec
sti
outsb
mov
aaa
lea
cmp
add
xchg
mov
pop
jbe
adc
test
push
and
xchg
push
and
fiadds
cmp
std
inc
cwtl
rcll
sub
das
fistps
sbb
addr16
outsb
mov
lea
mov
std
add
insl
stc
lock
push
sbb
mov
inc
movsl
push
scas
out
jmp
pop
mov
rcrb
es
xchg
sbb
fists
xchg
pop
jmp
fidivl
adc
fisubl
jle
xor
aad
mov
cmp
mov
fisubrs
push
xchg
cmp
xchg
je
and
and
pop
dec
mov
ds
lret
out
xchg
pop
xchg
data16
sbb
jle
ror
and
sub
xchg
iret
xchg
mov
lods
stos
adc
sarb
push
out
lret
dec
std
and
sub
jmp
jns
stos
or
into
iret
fwait
jbe
repz
pusha
cmpsl
imul
ja
xchg
in
aaa
outsb
enter
cmc
mov
mov
mov
xor
mov
pop
xor
cwtl
enter
xchg
dec
arpl
inc
cmp
lret
push
mov
in
jne
mov
or
mov
jle
dec
and
xchg
or
sti
fmul
and
jb
or
add
test
push
adc
xor
xor
ja
jo
scas
out
pop
stos
xchg
pop
xor
add
sbb
in
xchg
jl
mov
into
push
lret
inc
cmpsl
and
mov
and
jecxz
scas
mov
xor
xor
insl
xor
xchg
cmp
jno
jp
sub
xchg
in
xor
enter
xchg
or
and
xchg
inc
xchg
lret
insl
push
into
ds
dec
and
xchg
pusha
cld
addl
add
cmc
pop
shl
movsb
les
ljmp
cmp
ljmp
sub
xchg
pushf
incb
iret
inc
in
push
hlt
les
test
add
xchg
divl
enter
lcall
mov
pusha
and
ljmp
rcll
lods
inc
and
imul
pop
mov
xchg
mov
movl
mov
data16
xchg
mov
sbb
adc
push
jle
push
subb
loope
shlb
mov
mov
mov
sbb
iret
pop
inc
lea
adc
xchg
xor
addr16
push
decb
xchg
or
aam
xchg
add
loope
movsb
inc
pop
jb
or
xchg
adc
outsb
push
mov
inc
xor
xor
push
pusha
jns
xchg
jnp
popf
mov
mov
push
xchg
sbb
movsb
aam
pop
inc
gs
addr16
adc
lret
aam
or
leave
and
ret
outsb
add
dec
incl
or
sbb
loopne
inc
iret
adc
jecxz
add
sahf
cs
loop
dec
add
adc
sbbb
dec
sub
lea
imul
dec
mov
mov
cmp
jge
pop
mov
inc
push
sbb
fsts
push
jbe
ds
pop
lahf
in
cmc
add
iret
inc
lods
cmp
push
xchg
insb
and
fidivrs
pushl
jns
loope
imul
sti
push
cs
push
out
mov
pop
roll
gs
fbld
sub
mov
shl
or
xchg
pop
mov
xchg
pop
stos
pop
cmp
loopne
xor
std
mov
es
mov
sub
pop
push
popf
lret
jb
cltd
xchg
loope
shlb
dec
popf
sub
ret
aam
push
iret
ret
cltd
add
movsb
xor
mov
cltd
mov
mov
addb
pop
mov
pop
lahf
insl
sub
sbbl
push
sbb
or
jbe
mov
pushf
int3
mov
jnp
adc
int
scas
add
data16
in
inc
push
and
movsl
dec
aad
sbb
jne
jno
lods
add
cmp
mov
xchg
mov
repz
mov
aaa
cli
sub
add
and
adc
mov
aam
dec
sti
pushf
aam
hlt
lcall
js
jmp
cmp
loopne
xchg
and
ja
sbb
and
ja
es
aaa
mov
ror
nop
outsb
push
aad
loopne
shll
out
incl
fs
mov
and
xor
out
stos
inc
and
add
sbb
mov
leave
mov
sub
cmp
mov
aas
hlt
lahf
pop
cmp
jbe
std
pop
mov
adcb
push
icebp
hlt
adc
vunpckhpd
mov
std
insb
pop
inc
lahf
daa
loopne
adc
sbb
loope
hlt
sub
fs
xchg
nop
inc
add
aas
or
push
inc
lret
fistpll
outsw
or
in
lahf
insl
faddl
push
repz
rcrb
divb
push
xlat
divl
cwtl
test
inc
hlt
int
jle
cwtl
mov
fcmovne
lret
and
mov
sub
les
dec
out
or
xchg
sub
addr16
rclb
xor
bnd
aaa
out
outsl
add
aas
push
pop
stos
jno
loopne
mov
repz
in
scas
negb
fstpl
dec
mov
ss
in
or
jns
sbb
adc
cmp
adc
out
jle
add
cld
cmp
inc
fnstcw
lock
jp
idivl
dec
xchg
int
adc
sub
xchg
movsb
mov
fs
fnstcw
sbb
mov
pop
test
cpuid
sub
xchg
jnp
mov
xchg
inc
sub
push
orl
sbb
jecxz
add
mov
jmp
dec
and
add
ffreep
decl
add
or
mov
push
aam
imulb
das
push
mov
orl
insb
xchg
mov
mov
mov
fstl
outsl
push
mov
in
sbb
mov
icebp
stos
gs
imul
mov
jae
out
fwait
lds
shll
js
addr16
lret
cmp
or
push
sbb
lods
cli
aad
imul
cmp
or
and
fst
adc
cld
movsl
add
mov
call
arpl
cmp
dec
push
cmc
cmpsb
loope
mov
mov
es
sbb
das
negb
insb
incl
ret
insl
test
insb
fsubl
cmpsl
popf
les
stc
mov
je
test
iret
in
lcall
lcall
enter
pop
cmp
cmpsl
fsub
iret
sti
mov
insl
xor
das
scas
xchg
jne
aas
xor
lahf
inc
nop
jb
dec
jmp
pop
sub
sti
cs
jge
clc
pusha
orl
ret
mov
inc
ss
sbb
loop
jb
mov
fistpl
lret
mov
cmc
push
cmp
hlt
push
movsb
jmp
xchg
sub
inc
push
sbb
les
insb
xchg
ficoms
add
push
add
jge
jae
fsts
cmp
xchg
inc
lret
pushf
pop
jle
sub
mov
shll
jle
test
lahf
addr16
jge
mov
lods
idiv
push
push
scas
adcb
sbb
mov
mov
outsb
mov
lahf
jmp
fcoml
imul
cltd
fs
or
xchg
les
aad
xchg
sbb
inc
cld
add
call
dec
add
mov
lahf
test
jo
inc
mov
jecxz
mov
shll
lock
xchg
iret
bswap
xor
sti
sub
in
xor
and
and
mov
push
in
add
jae
gs
or
jnp
mov
dec
xor
shl
das
dec
jo
loop
aaa
addl
das
fneni(8087
mov
inc
or
lret
sbb
sbb
jne
sub
sbb
rol
ret
push
push
aad
mov
lahf
mov
adc
or
or
sub
xchg
mov
dec
dec
loope
in
data16
pop
iret
sub
fwait
shll
popf
mov
out
cli
xor
and
cwtl
jp
push
stos
test
mov
xorl
mov
adc
insb
mov
pop
ja
sub
mov
push
push
xchg
mov
cltd
int3
push
or
and
mov
lcall
xchg
testb
adc
xchg
es
jmp
cmpsb
in
lahf
in
and
push
gs
ret
mov
andl
int3
fs
jnp
sbb
fisttpll
enter
and
rclb
mov
add
pusha
test
or
imulb
inc
imul
xchg
in
loop
movsb
mov
xchg
sahf
les
cltd
cld
mov
jno
or
inc
mov
cmp
icebp
fcoms
mov
mov
mov
push
sti
sub
mov
test
shrb
stos
add
mov
movsl
aas
les
xchg
adc
out
mov
jge
decb
fwait
jae
xor
jnp
inc
pop
bound
aad
and
inc
shlb
loope
xchg
or
xor
movsl
dec
cmp
lcall
ror
sti
push
inc
and
pushf
call
adc
out
mov
mov
rolb
pop
dec
jno
call
push
mov
add
negl
add
jne
enter
dec
inc
add
fmuls
jecxz
aas
xchg
and
stc
add
lcall
in
mov
mov
pop
xor
cmp
push
lods
clc
cwtl
jg
jno
dec
das
int
push
clc
daa
jb
mov
cmp
pop
mov
stc
xchg
stos
xchg
sti
xchg
dec
push
sub
xchg
xor
adc
addb
imul
jb
imul
mov
xor
xor
pop
jnp
fistps
dec
dec
mov
es
cmpsb
adc
adc
icebp
push
or
inc
pop
jbe
cld
clc
jmp
pop
xchg
dec
or
push
cmpsb
stos
push
mov
or
push
insb
js
movsl
ja
mov
add
jecxz
sub
inc
repz
inc
test
adc
faddl
lock
test
lea
inc
cmpsl
and
mov
cltd
popf
and
jnp
add
and
outsl
ss
pop
cmp
lret
mov
inc
aas
pop
jae
xchg
jecxz
lock
addl
pop
or
sahf
test
pop
adc
inc
popf
pusha
iret
push
cmc
pop
xor
ret
mov
das
pop
or
incb
clc
jnp
scas
dec
sbb
ds
lods
and
imul
sti
mov
mov
mov
fucomp
add
push
xor
js
imulb
dec
cltd
mov
popf
shlb
mulb
es
lea
pop
push
pushf
pop
popf
mov
int3
mov
add
aam
sub
mov
jp
movsl
in
mov
cwtl
icebp
sbbb
and
push
call
lret
inc
adc
sub
or
push
mov
add
adc
mov
enter
pop
pop
jb
jbe
shrb
inc
lea
decl
xchg
inc
lret
xor
inc
sbb
fisubrl
std
cltd
inc
cltd
fisttpll
cmpsl
lock
push
push
ret
cli
jne
pop
adc
jne
lds
xor
push
pop
sbb
xor
jae
mov
sub
mov
fists
cmc
push
insb
icebp
add
fs
dec
sub
cwtl
clc
ss
pop
jno
dec
mov
pushf
push
aas
adc
jnp
nop
add
add
pushf
lret
mov
rclb
js
jge
or
pop
es
mov
out
push
rol
xor
fdivs
mov
cmc
lret
xchg
mov
fsubs
faddp
imul
popf
movsl
cmp
cld
repz
je
jle
dec
sbb
jmp
jmp
testl
or
inc
sbb
outsl
movsl
sub
xor
das
cmp
pop
adc
imul
into
xor
mov
cmc
lock
jb
dec
sbb
mov
add
jmp
push
les
pop
mov
nop
divb
andl
lods
ljmp
ljmp
mov
xor
sbb
adc
sub
cld
shlb
cmp
sub
and
insl
shlb
rorl
mov
cmp
dec
rcr
imul
jnp
inc
fmull
or
inc
sbb
pop
push
sub
adc
jne
sbb
fdivs
cld
xor
mov
mov
in
jle
push
mov
lcall
in
int
inc
jg
hlt
outsl
push
insl
pushf
fmuls
mov
sub
shrb
dec
cmp
lret
ss
mov
push
rolb
nop
lock
mov
scas
in
out
sti
jno
shr
xor
outsb
std
pop
daa
mov
addr16
int3
fisubl
lods
in
mov
and
jb
mov
dec
cli
dec
jo
pop
sbb
mov
dec
mov
push
enter
fcoml
je
dec
icebp
cbtw
fwait
into
je
insl
je
cmp
cltd
sbb
dec
icebp
sbb
stos
jp
pop
mov
cmpsb
inc
mov
lcall
and
mov
fstl
adc
cld
and
pop
pop
xchg
lds
mov
ror
sbb
jge
push
sub
mov
pop
mov
or
clc
aam
mov
push
mov
clc
in
int3
xchg
xor
into
mov
cli
cld
pop
xchg
push
lahf
add
pop
mov
mov
adc
clc
stos
inc
test
arpl
in
mov
or
scas
jecxz,pt
mov
pop
lods
ja
add
add
and
jle
adc
inc
add
pop
arpl
jnp
add
ljmp
jp
dec
das
int3
cmp
xchg
xchg
mov
sbb
mov
repz
xchg
lods
insl
bound
in
rorl
pop
mov
push
adc
jns
add
adc
dec
aaa
or
jo
in
ljmp
dec
add
cs
cmpsb
sub
addb
push
stos
xsave
aam
jnp
adc
fistpll
in
popa
or
inc
icebp
int3
pop
pop
cmp
ret
out
int
aas
shll
push
push
test
in
fstl
lods
je
stos
or
in
shlb
add
xchg
jbe
push
lods
add
mov
lock
andb
mov
movsb
push
stos
movsl
add
fs
jecxz
into
outsb
push
sbb
add
xchg
cli
call
bound
xor
dec
shrb
push
loopne
into
pop
in
in
jg
pop
add
jnp
mov
out
mov
xchg
mov
xor
fs
out
xchg
data16
sti
in
mov
imul
lahf
cmp
push
inc
jge
push
mov
dec
xchg
mov
or
fwait
push
jbe
push
push
xor
pop
adc
jno
cmpsb
gs
jno
cld
popa
gs
jg
lea
and
shr
stos
pop
notb
ror
sbb
add
ja
sbb
jno
jno
ss
fisubl
fwait
sub
repz
inc
test
sahf
inc
aam
xchg
sub
mov
adc
jae
or
mov
inc
arpl
pop
jle
outsl
iret
je
mov
sbb
and
cmp
lret
inc
xchg
dec
push
sub
mov
jp
or
or
or
leave
adc
shll
out
dec
adc
dec
out
push
add
xchg
or
mov
enter
push
mov
push
popa
inc
xchg
push
sub
daa
in
mov
andl
sbb
bound
les
pop
xchg
cltd
clc
jae
sbb
push
in
and
mov
cmp
mov
je
stos
das
dec
es
dec
xchg
mov
outsb
pop
dec
sbb
adc
les
xchg
in
inc
repnz
mov
sbb
mov
jp
pop
push
lcall
dec
ja
or
mov
xlat
enter
xchg
push
popa
and
rcrl
inc
jo
test
mov
sbb
pop
jne
shrl
mov
pop
in
decb
lcall
inc
clc
pop
dec
sbb
jmp
testl
les
xor
jmp
pop
fs
lds
xchg
jge
xor
lcall
lret
sbb
lock
pushf
inc
and
je
lods
insb
push
or
sub
xor
cmp
mov
leave
jo
sbb
lcall
xchg
mov
int
dec
arpl
popf
pop
pop
test
or
dec
mov
jmp
aas
fistpll
movsl
jae
xor
dec
arpl
push
fnstcw
cmpsb
inc
rorb
hlt
sub
mov
mov
push
push
mov
or
ss
movsb
sub
ljmp
lods
mull
test
push
mov
jge
in
jnp
dec
fmul
jne
outsb
xor
add
popf
mov
lods
ds
int3
xor
push
stos
aad
clc
jnp
leave
pop
sbb
loopne
jl
jo
adc
in
imul
fs
mov
fildll
push
aam
bound
ret
sub
int
mov
ret
lods
inc
test
js
cmc
int
or
sbb
push
outsb
test
ret
sbb
cmp
shrl
jl
outsl
jge
xchg
xor
mov
add
sub
popf
mov
mov
fidivrs
inc
cmp
lret
add
in
popa
push
xorb
sbb
pop
in
push
loope
mov
mov
sti
cwtl
negb
cmpsl
daa
xor
pop
mov
push
adc
movsl
sub
push
mov
cs
mov
out
adc
sbb
or
js
mov
xchg
xchg
inc
enter
sub
nop
cmp
insb
jae
fcompl
xor
stos
cmpsl
int3
mov
fs
call
add
push
imul
call
xor
push
mov
sub
sbb
adc
push
jb
mov
cmp
or
test
loop
cwtl
sbb
fcmovb
cmc
xorb
mov
sbb
mov
mov
adc
xor
xchg
mov
sbbb
add
imul
xchg
push
repz
std
adc
cmp
std
push
push
inc
je
mov
xor
lahf
add
clc
fmull
push
and
mov
dec
push
cmp
jmp
enter
das
xchg
pop
jecxz
pop
xchg
cmp
dec
jecxz
popa
xchg
rolb
dec
lahf
dec
add
xor
inc
sbb
push
pop
adc
dec
xchg
out
mov
lds
adc
cs
divb
xchg
sbb
jae
inc
paddusw
xchg
movsl
mov
pop
cmpl
test
popa
fistpl
mov
add
ds
popf
divb
loopne
xchg
fs
shlb
data16
mov
jecxz
add
mov
aam
repz
int
pop
pop
jo
scas
inc
sub
ret
xchg
hlt
jmp
stc
xchg
inc
arpl
mov
mov
addl
pop
loop
xchg
jle
and
mov
mov
scas
or
mov
sub
ficoml
popf
hlt
cmp
std
add
mov
push
mov
jmp
lahf
inc
inc
xchg
mov
cmpsl
push
inc
bound
mov
adc
dec
jno
jl
inc
jp
movsl
andl
imul
push
into
push
xchg
xor
imul
aam
outsb
shrb
loopne
gs
inc
int3
dec
je
lock
jg
push
in
push
or
jle
inc
in
cmpsl
ret
inc
aad
addr16
jbe,pt
dec
xchg
push
mov
out
mov
or
xchg
dec
je
mov
xchg
and
inc
and
dec
jne
xchg
std
inc
clc
xchg
cmp
mov
dec
xor
mov
loop
sub
push
xchg
sub
fstps
scas
push
dec
pop
into
adcb
mov
mov
sbb
mov
orl
adc
inc
pop
fcmovbe
insl
add
push
pop
dec
jg
in
jmp
inc
inc
jb
xchg
loopne
imul
fisubrs
or
xor
add
insb
addr16
mov
inc
loop
insl
nop
adc
pop
fyl2x
inc
jb
cmp
decb
xchg
rcl
in
xchg
fs
add
lods
mov
repnz
sbb
cmc
daa
mov
lock
call
aas
mov
xchg
addr16
sbb
cli
sti
fs
mov
mov
imulb
and
jae
aad
push
push
inc
xchg
cwtl
das
call
fmuls
ljmp
add
orl
or
mov
lcall
mov
ja
mov
stos
adc
mov
or
in
stos
or
jnp
scas
out
add
loope
int3
pop
clc
mov
pop
nop
aaa
adc
shlb
shrb
mov
mov
imul
jmp
andb
bound
sbb
pop
stos
dec
fmull
fsubrs
les
mov
dec
pop
into
mov
lret
in
add
fisttpll
jne
sbb
and
insb
aaa
ja
lods
popf
mov
aas
jbe
pop
inc
enter
aad
pushf
cmp
lods
xor
add
mov
dec
push
cs
adc
ret
ljmp
jge
nop
jo
stos
and
cmp
add
enter
rcl
pop
iret
fsubl
and
sub
lds
sbb
mov
lret
add
cwtl
inc
push
jne
mov
push
jmp
in
push
popa
cmp
in
mov
fmull
xchg
push
push
mov
mov
jl
clc
push
les
xor
inc
and
pop
ret
sub
or
je
fisubrl
lods
ja
xchg
or
mov
sbb
dec
sub
mov
sub
cli
or
jp
and
pop
unpcklps
dec
and
sub
movsw
ja
aaa
lods
dec
imul
jl
pop
aam
in
mov
out
mov
and
sub
in
jb
jmp
push
dec
fsincos
pop
mov
or
dec
imul
xchg
mov
arpl
jg
pop
iret
sbb
xchg
lcall
mov
pusha
push
test
jne
xlat
sarb
sbb
inc
hlt
mov
pop
les
mov
rcll
hlt
and
adc
mov
cmp
popa
dec
add
ss
push
fsubr
insl
pusha
inc
test
and
mov
jle
pushf
sbb
jmp
aam
jmp
cmpsl
xchg
adc
inc
pop
lahf
ljmp
psubsw
int
cld
xchg
dec
or
xchg
std
fldenv
or
in
push
add
lods
lds
fnstcw
push
inc
pop
addr16
cli
sub
imul
sbb
in
cmp
fcoms
aad
insl
add
jge
stos
roll
fadd
mov
movsl
mov
dec
fsubl
mov
movsl
ret
int3
cmp
jge
das
clc
add
or
push
leave
ret
mov
mov
push
lea
pusha
mov
xchg
jbe
xor
sub
stos
push
pop
inc
cmpsl
push
out
loope
push
clc
rorl
hlt
or
mov
sbb
xor
add
faddl
dec
push
inc
xchg
xchg
jle
clc
or
shll
mov
rsm
mov
insl
mov
gs
fdivrl
adc
fscale
mov
sub
rorb
lods
enter
jae
cltd
dec
jo
inc
aas
pop
xchg
mov
push
or
mov
and
xor
pop
xlat
mov
mov
sbb
push
or
mulb
daa
and
cmc
adcl
les
mov
push
stos
loope
mov
lret
cmp
cwtl
jmp
cli
push
dec
fs
push
je
and
dec
jbe
and
mov
test
lret
test
xchg
mov
push
push
stos
jno
adc
sub
rclb
insb
fidivs
fs
insl
gs
jo
lcall
push
push
pop
cmp
test
addl
cmp
mov
fs
xor
or
mov
stos
ss
or
cmp
imul
daa
dec
js
add
ret
mov
add
xor
fbstp
in
popa
cmc
inc
inc
inc
jne
inc
mov
sbb
fs
xchg
cmp
sahf
add
push
push
or
mov
adc
cli
sbb
lock
hlt
les
aad
add
and
pop
int3
mov
popf
sbb
mov
adcl
inc
mov
aam
or
dec
das
hlt
pop
mov
shlb
icebp
ss
fdivr
jae
cmc
out
aas
jg
mov
int
mov
or
inc
lcall
test
call
push
jg
rcrl
sbb
inc
inc
xchg
orb
test
jns
aaa
jge
je
out
sbb
lret
inc
dec
cmpsb
leave
xchg
or
mov
jle
xchg
adc
fldenv
xchg
mov
lret
cmpl
ds
sbbl
xor
sahf
inc
jns
adc
sbb
int
rol
sti
cmp
or
mov
jmp
leave
mov
push
pop
cmp
sub
dec
xchg
ret
clc
int
ja
jl
out
std
out
mov
sub
sub
adc
add
pop
daa
inc
pop
cmp
push
dec
fxtract
xor
sub
pushf
jmp
js
lcall
ret
dec
mov
pop
push
shr
jecxz
cmpb
testb
xchg
sub
dec
push
dec
fst
jmp
movsb
out
int3
jnp
jge
cld
mov
test
call
xor
push
sub
lds
pop
inc
xchg
jecxz
in
add
mov
sub
xchg
sbbb
or
popa
dec
cli
xchg
mov
mov
jmp
mov
ja
xchg
scas
jns
xchg
scas
mov
adc
or
sbb
fildl
xchg
aas
enter
cmc
push
xor
fcompl
or
pop
pop
jnp
es
nop
push
sbbl
sbb
cmp
dec
mov
jae
dec
dec
hlt
push
push
je
and
iret
sbb
or
outsb
mov
or
fs
dec
or
in
outsl
add
pop
shlb
dec
mov
jge
lahf
subl
jl
mov
repz
call
push
mov
push
pop
fwait
cmp
dec
divl
jbe
mov
cmp
dec
popf
lea
inc
pop
xchg
xchg
leave
cmp
sub
or
stc
mov
aad
mov
cwtl
movsb
xchg
mov
jle
jne
pop
mov
pop
mov
sbb
mov
lods
push
loop
mov
popf
es
lret
pop
nop
and
mov
mov
jae
and
cmc
sahf
dec
cmc
or
out
ret
mov
dec
mov
mov
xorb
addr16
les
cmpsb
subl
add
mov
lea
pop
insl
adc
pop
sbb
or
or
lcall
xchg
sub
jg
mov
xchg
and
pop
mov
sub
lods
push
int3
stos
push
aaa
or
ja
xchg
dec
xor
int3
mov
sub
into
mov
icebp
fdivs
push
scas
or
bound
mov
mov
mov
lea
mov
iret
xchg
stos
xchg
xor
pushl
lea
sub
adc
test
les
inc
xor
xor
repnz
or
daa
jno
inc
mov
nop
mov
push
lret
dec
mov
lea
je
push
es
and
jg
rcll
popa
inc
movsl
notb
lcall
pop
adc
lret
rorl
pop
dec
xchg
dec
popf
icebp
add
test
ds
mov
scas
lahf
jb
or
shl
repnz
pop
push
orl
cltd
push
pop
cli
ret
add
push
lock
cmp
inc
xor
cmp
jge
dec
jne
lods
add
add
inc
or
push
movsl
filds
out
insl
xchg
cmpsl
mov
xlat
outsl
add
ret
leave
frstor
dec
mov
shlb
inc
loope,pn
or
jmp
mov
bound
das
pop
pop
cmc
push
inc
into
mov
movsb
push
or
lahf
orb
pop
inc
fs
int3
mov
fwait
push
jp
jmp
xchg
add
jo
call
rcrl
pop
inc
enter
dec
shlb
xor
hlt
inc
test
es
adc
movsl
pop
mov
je
mov
mov
xchg
adc
ret
loope
add
push
ds
push
mov
cs
mov
sbb
call
cmpsl
cli
push
add
lods
pop
test
rcrb
or
xchg
mov
out
pushf
sbb
push
pop
jl
subl
xor
adc
push
test
mov
clc
std
mov
jg
push
xchg
push
jle
lods
inc
test
push
insb
aaa
mov
and
ds
adc
sti
cmp
inc
add
ds
jmp
outsb
mov
dec
and
sbb
push
test
inc
push
lret
aad
aas
enter
outsb
loop
sahf
add
dec
aaa
dec
or
or
ficoml
inc
lea
xchg
sub
sub
mov
les
cmc
popa
xchg
xchg
into
and
sbb
pop
and
scas
xchg
out
jnp
mov
dec
out
xchg
add
pop
leave
fidivrs
lret
mov
movsb
shlb
or
mov
push
faddl
xchg
mov
mov
xor
out
jge
inc
jmp
popa
add
fwait
and
test
adc
out
inc
jnp
imul
lock
pop
ficoml
lret
and
and
push
incl
inc
mov
mov
jns
sbb
mov
pop
mov
pop
call
jno
cmp
fcoms
dec
push
pop
sub
inc
test
sub
sbb
test
mov
push
leave
mov
je
imul
mov
xchg
xchg
sub
mov
loopne
ret
inc
fucom
sbb
mov
mov
shrl
pop
adc
data16
mov
jge
mov
fidivrs
push
pushf
adc
out
lcall
dec
adc
jecxz
enter
in
cmp
xchg
cwtl
mov
mov
inc
or
dec
xchg
inc
sub
pop
lock
jg
test
cmp
push
mul
pop
add
add
aaa
xor
dec
sub
movsl
mov
push
cmp
jecxz
pop
mov
sub
lods
sbb
aas
fbstp
add
lcall
notb
jl
cmp
pop
dec
jle
enter
lods
sub
push
scas
rclb
add
inc
mov
gs
xlat
lea
sti
daa
dec
xchg
dec
mov
jge
jbe
loope
push
fcompl
push
xchg
cs
add
into
xchg
cmp
data16
hlt
into
addr16
mov
mov
sbb
mov
mov
into
push
jp
push
xor
add
fs
imul
fimull
imul
xor
xchg
add
jecxz
loope
int3
xchg
adcl
xchg
jns
adc
iret
mov
bound
repnz
lea
aas
outsb
loop
push
sbb
or
sub
xor
incb
lret
mov
clc
addb
dec
xchg
popa
pushf
cmp
pop
lock
mov
call
xchg
dec
xchg
scas
std
or
mov
mov
add
fs
inc
sub
push
jne
adc
popa
das
in
ds
xor
cli
dec
insl
or
aam
leave
das
or
mov
in
mov
and
dec
nop
pop
ret
and
pop
or
mov
stc
pop
hlt
adc
out
pop
in
and
mov
adc
lods
lret
pop
pop
pop
mov
stos
imul
xchg
xchg
or
and
les
imul
enter
pop
shrl
shrb
xor
dec
pop
or
mov
jp
sub
xor
pop
movsl
jne
sti
in
rcrb
sub
xor
out
xchg
pop
inc
lret
aaa
mov
jns
mov
sbbb
test
fsts
lea
xchg
aam
outsl
xor
pop
shrl
out
xchg
loope
int3
cs
pushf
sbb
cmp
movsb
in
cltd
add
jae
rep
popa
fsts
adcl
xchg
mov
lret
hlt
jge
iret
add
cmc
xor
fwait
xchg
dec
aad
enter
fbld
and
loope
fwait
sahf
mov
montmul
cmpsb
add
arpl
imul
push
push
fsub
inc
jbe
jp
enter
dec
mov
les
pop
int
loop
cmp
or
lcall
or
cmp
inc
add
and
push
push
inc
js
and
adc
mov
pop
add
pop
pop
or
adc
int
fwait
or
mov
dec
loopne
pop
arpl
or
test
sbb
loope
clc
ss
aad
xchg
cmpsb
mov
and
in
out
fs
xor
jl
fwait
adc
jb
sub
in
dec
dec
icebp
mov
fnstsw
scas
inc
xor
mov
stos
add
push
cmp
ret
mov
jnp
loop
lods
rcrb
xor
fldt
or
ds
mov
push
rcr
inc
loope
jbe
shl
cmc
pop
aas
dec
sahf
fistps
outsl
ljmp
sahf
mov
pop
and
popl
or
arpl
mov
mov
inc
cmp
mov
jge
mov
xchg
stos
test
testl
stos
pop
sbb
data16
aad
scas
cmpl
inc
push
dec
pop
push
in
ficoms
je
xchg
ljmp
js
push
inc
or
les
test
aad
pop
adc
mov
mov
fadd
xchg
in
push
pop
arpl
idivb
pop
insl
adc
adc
test
cs
xchg
mov
xor
cld
sub
push
mov
or
xor
sbb
mov
sti
hlt
mov
rcrl
fmul
mov
lods
push
je
test
jns
outsb
int
dec
inc
ret
lahf
or
ret
pop
dec
push
testl
pop
cli
shl
fldcw
cld
jecxz
movsb
jge
and
inc
mov
adc
lods
push
jmp
cmp
loope
adc
or
or
xchg
lret
pop
adc
push
addb
jle
imul
ds
imulb
inc
and
mov
popa
and
test
daa
sub
jb
loop
sahf
cld
sub
and
frstor
jnp
inc
stos
push
cmp
add
popf
add
xchg
call
mov
lret
lahf
sbb
cmpsl
cmc
popf
nop
adcl
and
or
in
ljmp
inc
xchg
scas
xlat
loopne
leave
aad
scas
dec
or
aam
sub
pushf
cmp
daa
gs
jmp
cmpl
dec
mov
cmp
fists
and
enter
pusha
add
xor
jle
sti
add
and
repnz
xlat
sub
cld
subl
sbb
sub
rclb
or
aas
inc
or
scas
les
and
lods
mov
rclb
lret
xchg
subl
test
jge
aad
sbb
hlt
push
pop
sub
movsb
mov
mov
repz
mov
mov
ljmp
adc
cmc
sub
mov
das
notl
mov
clc
mov
sahf
cltd
mov
lahf
popa
andl
mov
lea
pop
popa
jb
orl
mov
popa
fs
sbb
fdivrl
ja
dec
gs
or
add
jae
cmp
lods
push
cmp
xchg
je
xor
mulb
setl
in
mov
xor
lret
jne
mov
cmp
pushf
lods
js
jecxz
jge
sub
shrb
mov
arpl
pusha
sbb
xor
movsb
mov
imul
push
and
arpl
xchg
rcl
shlb
push
daa
jl
fldt
jmp
pop
pop
repz
test
je
inc
mov
mov
into
xchg
cmpsb
and
lock
mov
lahf
iret
jb
add
mov
hlt
cmpl
jnp
loop
dec
cmp
loopne
xchg
or
dec
maxps
jge
cmc
sbb
pop
adc
jg
and
stos
insb
xchg
xor
sub
sub
adc
jecxz
aam
inc
pusha
jmp
inc
popa
in
inc
fwait
dec
jp
or
mov
pop
iret
in
sbb
lret
mov
dec
insb
out
popa
lahf
adc
mov
int3
sub
add
adc
and
cmp
dec
add
loop
and
out
xor
push
pop
dec
adc
sbb
jl
add
jns
out
bound
dec
and
xchg
inc
pop
mov
mov
rolb
sahf
inc
dec
pushf
adc
call
mov
sbbb
and
insb
pop
dec
xchg
jg
push
js
pusha
push
push
sbb
and
jbe
and
push
imul
sti
adc
jp
adc
xor
mov
aas
jg
inc
cld
movsl
iret
jp
jecxz
inc
roll
inc
jle
add
jne
mov
movsb
mov
pop
pushf
xor
mov
mov
dec
inc
sti
mov
enter
cmp
les
sbb
nop
and
std
pop
mov
sub
inc
push
shll
jns
dec
cltd
or
gs
clc
call
pop
mov
adc
stos
mov
fadds
push
gs
aam
inc
jge
call
adc
popa
mov
xchg
and
mov
popf
mov
jle
movsb
xchg
test
sbb
sbb
mov
movsl
subl
dec
cmp
es
out
xor
xor
in
icebp
movsl
test
inc
and
mov
inc
add
mov
ss
xchg
push
jne
mov
mov
aaa
fwait
mov
ss
dec
push
and
das
xchg
inc
xor
fistpl
mov
shrl
sub
sbb
mov
mov
cltd
orl
adc
push
xor
xchg
xchg
das
and
mov
mov
sub
xchg
cmpsl
shl
cmpsl
xchg
addr16
ja
arpl
jl
enter
xor
stos
or
sti
sub
add
mov
das
cmc
lret
pop
xchg
mov
loope
mov
jae
scas
cmpsl
add
adc
inc
inc
mov
pop
or
fs
enter
test
mov
pushf
inc
mov
jae
pop
ja
and
fimull
push
enter
pusha
inc
clc
js
ret
inc
xor
cs
test
jl
fwait
popa
and
negl
lret
mov
inc
mov
notb
pop
subb
fstl
push
ret
or
data16
es
inc
in
shl
cmovs
sbb
and
loopne
inc
dec
pop
vsubsd
lret
cwtl
push
adc
push
pusha
loope
addr16
jns
fs
iret
pushf
fiaddl
xchg
cltd
int3
iret
inc
inc
repz
shrl
flds
or
repnz
adc
push
xchg
mov
push
pop
mov
dec
sub
jmp
sbbb
out
fwait
ret
and
test
loope
mov
in
insb
mov
push
cmp
outsb
push
inc
inc
xor
inc
hlt
rolb
int3
dec
out
pop
sbb
std
xlat
pusha
mov
jnp
xchg
je
ret
fwait
sarl
sysenter
adcl
andl
adc
mov
mov
pop
pop
imul
loopne
mov
mov
je
sti
aad
push
sub
stos
popa
jg
pop
mov
xlat
inc
pop
sub
mov
jp
hlt
xchg
clc
cmp
add
mov
aas
mov
xor
scas
push
imul
adc
inc
aaa
and
aam
fcmovnbe
rclb
fwait
test
sub
insl
outsb
mov
pop
cli
sbb
pop
push
sbb
mov
adc
int
or
shr
pop
pop
push
fistps
sub
adc
fwait
push
nop
add
dec
push
ret
iret
jl
je
mov
aad
inc
pop
iret
popf
dec
fs
mov
scas
adc
subl
lock
xor
addl
adc
scas
cmp
mov
push
pop
addr16
dec
jbe
inc
inc
test
jle
jl
imul
push
cmpsb
mov
setle
gs
ficoml
push
sub
adc
sub
dec
ljmp
mov
addl
ret
adc
xchg
sbb
inc
pop
cmp
sahf
jge
pop
pop
out
iret
loop
out
push
inc
popf
adc
into
out
xchg
pop
xchg
les
cmp
add
sbbb
pop
hlt
xchg
in
hlt
push
ret
pop
pushaw
ret
dec
dec
sub
imul
fwait
insl
push
sub
jl
cmp
sbb
and
mov
call
mov
pop
xchg
xor
mov
andl
fistl
in
pop
xor
or
in
ret
fcomps
fsubs
cwtl
jecxz
xchg
push
sbb
orl
negl
leave
push
inc
sub
pop
andl
adc
xchg
mov
adc
les
nop
movsl
dec
push
mov
pop
loop
lcall
aad
and
jo
popa
scas
inc
cltd
inc
or
outsb
push
xchg
nop
mov
xor
inc
cs
pop
ljmp
sahf
or
ljmp
data16
std
dec
lahf
pop
pushf
mov
imul
mov
or
gs
push
mov
imul
ljmp
xchg
mov
add
and
pop
rol
jne
cmp
out
xor
push
dec
fidivs
cwtl
inc
adc
jno
sub
or
mov
mov
lods
shl
gs
sub
cmp
ss
mov
dec
xchg
jg
dec
insb
fnstenv
add
sbb
test
xor
sti
push
xchg
out
mov
mov
pop
out
stc
adc
cltd
xchg
std
out
pop
xchg
and
rclb
pop
mov
ja
lcall
ja
or
push
lds
xchg
test
adc
sbb
out
jb
test
insb
mov
cmp
cs
adc
sahf
sub
daa
mov
lods
jno
orb
popf
lret
orb
call
mov
lahf
sbb
aam
leave
add
imul
ss
xor
cmc
roll
shll
sbb
loopne
jae
dec
shll
mov
inc
pop
pop
add
mov
sbb
mov
addb
mov
or
push
dec
push
nop
jmp
mov
sbb
dec
xor
mov
test
mov
imul
dec
inc
cmpsl
fisttps
sub
leave
insl
mov
test
xchg
mov
xchg
je
push
jbe
add
fstpl
xchg
or
and
cmp
sti
xchg
outsb
call
cli
mov
cmp
pop
in
xchg
dec
mov
pop
add
cmp
dec
sti
in
xchg
xchg
movsl
insl
insl
or
mov
iret
dec
add
ja
or
mov
or
pusha
daa
sbb
pusha
test
inc
xchg
imul
mov
jg
lahf
cs
dec
mov
adc
push
jb
ds
sub
sar
ljmp
inc
int3
ret
orb
gs
mov
lods
dec
jmp
ret
lret
int3
jns
out
dec
in
jns
sub
jl
hlt
call
or
mov
inc
imul
icebp
sbb
or
out
xor
cli
lcallw
xchg
inc
not
jne
repz
in
shll
test
mov
xchg
mov
scas
xor
mov
pushf
xchg
ds
pop
push
or
mov
in
push
and
sbb
cmp
xor
mov
inc
sub
adc
pop
pusha
adc
xchg
aaa
fs
cwtl
int
clc
push
mov
push
fidivs
fiaddl
inc
icebp
xchg
cmp
sub
fists
jge
mov
sbb
imul
sub
shl
and
push
inc
dec
adc
mov
dec
pop
mov
fstl
push
outsb
ret
and
push
or
out
pop
add
dec
and
mov
popf
int
arpl
pop
pusha
into
xchg
mov
push
imul
push
addb
and
test
imul
pop
dec
cld
pusha
jbe
dec
sub
xchg
push
cmp
and
lahf
and
mov
xor
lahf
enter
ja
sarl
rclb
mov
test
lock
sub
mov
in
sbbl
and
mov
js
ljmp
pop
push
mov
dec
adc
mov
push
dec
movsl
cmpsw
insl
popa
sbb
outsb
and
xor
mov
aaa
out
popf
rcl
add
bound
xchg
ret
push
inc
cmp
xchg
test
pop
ljmp
jmp
mov
pop
mov
lahf
pusha
xchg
nop
int3
repnz
lret
data16
fstpt
fs
or
and
xor
and
inc
cmp
jbe
subl
mov
pop
mov
fs
adc
insl
sahf
fucom
sub
mov
xchg
mov
es
into
popl
or
xor
lahf
pushf
test
push
jp
insb
movsl
arpl
lea
xor
faddp
hlt
add
sub
push
xchg
inc
xchg
mov
loop
enter
or
xchg
bound
dec
push
or
clc
jae
std
movsb
mov
je
push
nop
adc
shll
popa
jp
arpl
sahf
inc
sbb
mov
add
sbb
or
pushfw
insl
jo
hlt
clc
sbb
or
pushf
mov
cli
add
mov
ret
pop
or
and
loopne
and
mov
into
fldt
xlat
bound
sub
xchg
push
push
push
adc
or
sub
inc
mull
jb
pop
sbb
xor
mov
mov
cmp
inc
cwtl
sub
cltd
mov
jnp
rdmsr
or
jl
jp
xchg
xlat
ret
or
int3
xor
mov
nop
cmp
sbb
shr
sub
test
sub
cltd
popa
pop
std
lcall
add
lods
push
inc
int3
and
dec
inc
test
pop
mov
lahf
and
fs
mov
adc
dec
mov
nop
fadd
sub
cmp
enter
mov
xchg
rcrl
push
loop
mov
push
adc
inc
xor
pushf
mov
jb
push
adc
inc
aam
ret
and
subb
dec
lea
int3
ljmp
jo
sub
jp
das
incb
pushf
stc
popf
pop
out
push
aad
adc
push
pop
xchg
rcrb
lret
ds
int3
pop
mov
pop
adc
mov
cwtl
xchg
adc
xchg
pop
jns
pop
ret
lcall
je
fstp
pop
mov
sbb
cmovo
fstl
out
pop
lods
sbb
bnd
mov
inc
movb
push
lds
or
xchg
cmp
mov
loopne
cmp
xor
in
xchg
add
test
pop
enter
push
je
pop
dec
in
ffreep
jle
subb
or
int
and
push
aaa
inc
ficoms
xchg
mov
adc
outsb
test
or
movsl
repnz
stos
cwtl
and
pop
push
mov
ficoms
or
xor
mov
pop
pop
and
fstl
and
xchg
adcl
aam
pop
mov
outsl
inc
loope
pop
or
movl
adc
jns
popa
jbe
es
sub
imul
in
adc
mov
sub
dec
mull
jne
or
icebp
repnz
ja
jmp
scas
clc
dec
je
push
jns
add
andb
cld
lods
mov
mov
movsb
stos
or
in
inc
adc
and
shrb
dec
mov
inc
cli
jb
outsb
jae
xor
mov
jb
add
andb
pop
xchg
mov
lock
mov
out
cmpsl
out
mov
push
cwtl
flds
sub
adc
adc
movsl
sub
outsb
push
inc
lock
xor
mov
mov
or
lods
push
test
dec
push
jbe
roll
les
mov
repz
push
lods
pop
and
and
nop
int
inc
adc
stos
nop
mov
pushl
adc
nop
mov
mov
fsubrp
mov
sbbb
mov
xchg
js
testb
cmp
dec
sub
fcmovbe
dec
jnp
and
mov
popf
dec
push
call
mov
int
in
mov
je
inc
adc
mov
adc
mov
jg
sbb
scas
aas
ss
pop
js
xchg
je
fs
test
mov
and
sarb
dec
push
sub
mov
adc
mov
mov
pop
add
loop
imul
sub
negb
xchg
or
ja
inc
cmp
out
scas
cmp
sub
cmp
shrl
add
pop
add
data16
xchg
ja
mov
out
jle
pop
mov
shrb
pop
jns
ljmp
cltd
leave
mov
mov
in
lods
add
bound
idivl
ficoms
sbbb
mov
sub
and
xchg
mov
aam
outsb
xor
into
ds
arpl
xor
sub
adc
nop
in
fs
stc
aas
xor
insl
out
jge
dec
add
enter
movsb
test
add
fbstp
daa
jae
pop
test
fstpl
add
mov
mov
pop
in
xchg
lea
loope
xchg
mov
pop
cld
rcrb
and
repnz
xchg
pusha
mov
leave
jg
xchg
sub
clc
lret
aad
sbb
mov
and
ds
xlat
lcall
mov
mov
sarb
ja
inc
adc
test
pop
jmp
lahf
xchg
outsl
imul
adc
jle
mov
in
push
push
or
and
sub
sub
add
bound
pop
pop
pop
jns
pop
fdivl
aad
into
fsubl
jmp
fisubl
pop
push
and
add
inc
lcall
sbb
fsubl
mov
adc
int3
dec
add
mov
jae
push
das
inc
sub
test
mov
sar
mov
mov
enter
jbe
arpl
dec
outsl
insl
imul
xor
loopne
loopne
jl
lret
jb
loope
xchg
xchg
call
adc
aaa
loope
sbb
cwtl
sbb
and
add
fwait
int
ds
adc
loopne
xchg
mov
cli
adc
out
push
imul
pop
adc
sbb
stos
push
cltd
pop
pop
insl
push
jge
les
leave
in
mov
mov
lock
inc
incl
ljmp
fcmovnu
jmp
mov
pop
and
ss
jecxz
mov
stos
mov
inc
pop
test
mov
dec
mov
ret
nop
xor
out
lea
and
lret
push
mov
inc
fwait
mov
ret
scas
sbb
orb
fld
mov
fsubrl
fstps
les
rcrb
outsl
mov
idiv
enter
push
inc
mov
cmc
lods
cmc
imul
call
jl
jno
fadd
mov
pop
jne
xchg
in
shlb
es
mov
inc
mov
sub
mov
aas
sub
add
mov
adc
jg
movsl
inc
lahf
enter
sbb
sub
add
loope
xchg
xchg
xchg
fisttps
push
mov
push
xor
lods
aas
pop
inc
jno
les
inc
or
stc
test
xor
adc
jo
push
xchg
lods
dec
add
das
xchg
daa
and
jno
xchg
xchg
mov
addr16
lret
and
outsb
jg
ja
mov
jp
push
xchg
ja
out
pop
pop
mov
jg
cmp
pop
and
push
lock
jmp
push
jb
movsl
inc
ljmp
xorl
xchg
mov
dec
add
sbb
push
mov
xchg
cmp
cltd
adc
pushf
mov
sahf
clc
pop
pop
jne
xchg
inc
jne
mov
inc
sub
sub
ss
or
push
iret
cmp
cmpsb
leave
mov
jle
iret
clc
rol
sahf
inc
sub
xchg
sub
and
adc
fisubs
jl
add
sbb
adcl
ret
int
push
mov
pop
repz
cmp
ljmp
ret
ja
addl
and
jg
xchg
andb
out
sbb
sti
adc
xlat
add
fiadds
xchg
ljmp
add
lret
movsb
cmpsl
xchg
cwtl
xor
add
lods
aas
je
insb
in
dec
cmp
mov
push
push
push
outsl
xchg
ljmp
and
insl
jl
and
cmp
data16
mov
sti
adcb
pop
mov
dec
or
adc
sahf
hlt
int3
aam
xchg
fistpl
mov
jnp
add
daa
daa
test
pusha
cli
outsb
jecxz
mov
adc
and
add
sub
lea
adc
aad
lahf
and
push
mov
cmpsb
jg
push
aad
nop
test
push
and
mov
lods
adc
jnp
jecxz
mov
or
cmpsb
fcom
mov
lahf
test
mov
add
dec
xchg
fidivl
sbb
iret
js
addb
bound
sub
sbb
sub
or
sub
out
xor
pop
pop
nop
scas
and
cli
xchg
jp
mov
jmp
lahf
imul
insl
or
repz
adc
cli
inc
jp
xor
ljmp
stos
cmp
push
mov
jecxz
inc
hlt
cmp
aas
lea
cmp
gs
frstor
cs
ds
mov
pop
mov
ljmp
cmpsb
cld
mov
movsl
jnp
xor
scas
xchg
cmpsl
lret
popa
popf
cmc
jecxz
lahf
ss
inc
push
add
lods
into
inc
cmp
xor
out
dec
sbb
mov
cmpsl
in
mov
loop
sti
add
lds
xchg
cmp
addr16
mov
call
lock
cmp
aad
pushl
nop
ja
xor
pop
pop
jg
test
adc
movsl
lods
lahf
aad
hlt
pop
rcr
scas
aas
sub
jno
dec
mov
mov
loopne
sub
lock
aas
rorl
jns
xchg
xchg
add
dec
sti
lea
ficoms
mov
jg
xor
dec
xchg
and
adc
inc
hlt
jg
shll
lock
in
mov
add
mov
xchg
test
jg
fwait
in
xchg
outsl
pop
pop
mov
nop
or
inc
xchg
jbe
inc
xchg
inc
je
movsl
lods
sti
xor
icebp
sbb
push
mov
cmpsl
sub
add
into
and
leave
jb
cltd
inc
jo
adc
mov
adc
pop
mov
pop
out
and
or
mov
test
stc
mov
pusha
mov
movsl
repnz
xor
dec
data16
mov
mov
enter
fidivrl
sbb
mov
xchg
push
ds
dec
push
bound
int
aam
xchg
or
test
jl
add
scas
cwtl
stos
fsubl
imul
iret
les
mov
lret
scas
sbb
test
jns
popa
xchg
out
aam
orb
push
in
xchg
call
mov
push
dec
push
push
lret
movsl
lcall
roll
shrl
iret
inc
xor
or
mov
mov
mov
lods
cli
sub
xor
lret
aaa
dec
mov
lret
ds
movsl
lret
fnsave
push
mov
push
mov
popf
push
add
insl
divl
xchg
dec
je
loop
cmp
andb
and
inc
pop
test
dec
adc
or
and
test
pop
lds
jmp
divl
pop
sub
inc
lcall
pop
cltd
xor
xchg
aad
and
imul
daa
lahf
or
xor
mov
pop
sti
aad
addl
fs
loopne
or
pop
std
inc
mov
dec
xchg
jne
sub
pop
push
mov
or
push
pop
mov
pop
movsl
hlt
inc
sub
and
orl
xor
cmc
repz
aaa
movsl
je
cmp
ficoml
mov
in
add
stc
mov
mov
rolb
cmpsl
js
fidivrl
movsb
mov
cmp
add
inc
sub
mov
lret
jecxz
leave
stc
mov
push
lret
movsl
cmc
in
mov
mov
sub
orl
push
ljmp
adc
mov
push
aaa
xor
mov
lahf
xor
cmc
test
hlt
xchg
mov
mov
bound
outsl
xor
js
adc
lods
addb
hlt
je
into
or
xchg
xor
outsl
mov
pushf
xchg
stos
or
lahf
rorb
test
aas
popf
push
or
and
cmc
pop
test
pop
pop
out
inc
aam
mov
popa
adc
addb
daa
pop
int
in
xlat
ja
inc
and
and
imulb
loopne
adc
push
adc
mov
out
add
sbb
or
push
int3
mov
scas
sahf
daa
sbb
pop
les
jne
daa
dec
test
in
mov
outsl
loope
and
je
fdivl
pop
inc
aad
rcr
sub
inc
fbld
xlat
add
loope
int3
and
cmpsb
cs
rorl
add
mov
sbb
arpl
outsl
mov
dec
ret
inc
icebp
add
xlat
inc
sarl
cmp
std
push
xchg
jp
ret
xchg
and
pop
nop
in
mov
jge
insl
mov
pop
sub
andb
shll
pushf
dec
ss
ljmp
dec
or
js
rorb
popa
xchg
clc
jmp
fwait
hlt
push
sub
aaa
mov
shll
movsl
dec
outsb
movsb
shr
mov
mov
nop
xlat
fwait
mov
pusha
adc
push
dec
inc
iret
cmovge
jbe
jecxz
add
or
nop
xorb
incb
dec
mov
fwait
dec
cmp
scas
xchg
fcoml
mov
sbb
or
mov
mov
mov
pop
es
int3
enter
jnp
or
push
sahf
clc
add
rcr
add
xor
outsl
cmpl
es
fisttps
or
sti
and
and
jo
aas
movsb
and
outsl
inc
push
scas
in
pop
hlt
push
test
stos
stos
jnp
sub
lea
mov
push
jb
jne
sahf
and
iret
cmpsl
aas
imul
rcrl
in
adc
inc
xchg
mov
jo
mov
or
xor
popa
fistpl
int3
inc
inc
cs
mov
inc
test
add
lds
push
sbb
mov
and
inc
xor
sbb
and
jl
mov
jle
pop
pop
cli
rcrl
mov
push
pop
xchg
push
pop
lds
xchg
dec
and
aaa
mov
enter
bound
xor
cmpb
les
adcl
sub
scas
fcompl
pusha
pushf
jmp
jl
addb
xor
adc
push
nop
jge
aas
sbb
and
cmp
add
xor
ljmp
scas
mov
decb
push
push
jne
sub
das
movsb
jbe
lahf
push
popf
mov
lcall
out
out
jmp
and
icebp
push
push
add
ljmp
scas
cmp
dec
hlt
in
in
dec
inc
bound
test
xor
lea
mov
jle
sbb
imulb
outsl
in
ret
test
in
push
ja
jmp
movsl
jl
sub
jne
xor
sub
inc
sub
mov
je
dec
lahf
imul
into
sub
fdivrl
das
sub
jb
mov
into
fsubs
sub
jmp
mov
arpl
cwtl
aas
aaa
fsts
jo
cmpsl
mov
xchg
add
dec
jmp
inc
xchg
add
jo
es
add
jecxz
xor
js
xlat
push
xchg
dec
rcrl
daa
std
inc
push
lahf
pop
jo
shrb
ds
std
xchg
loopne
or
mov
das
sub
push
lock
cs
leave
xorl
dec
xor
cmpsl
mov
and
mov
call
in
mov
mov
ja
sub
lods
dec
ret
cmp
dec
sub
cmp
repnz
popa
sbb
mov
scas
fnstcw
adc
xlat
test
std
xor
mov
jno
hlt
mov
mov
xchg
adc
les
or
push
je
mov
cmpsb
mov
add
sub
cmpsb
cmp
adc
rcr
popf
add
mul
scas
jo
sbb
pop
lahf
dec
sub
jge
sub
xchg
arpl
in
loop
lcall
add
pushf
movsl
mov
xchg
add
data16
int3
inc
mov
ja
in
jbe
sti
dec
push
data16
mov
xor
inc
fdivrl
enter
push
push
loope
sub
call
adc
rolb
in
sub
jo
mov
shll
xchg
mov
mov
test
aad
rcll
inc
push
push
add
add
push
leave
aas
mov
xlat
test
mov
imul
mov
fwait
enter
fldl
in
decl
add
lock
add
shr
in
stos
cmp
fnstsw
xor
jns
into
ficomps
xchg
std
in
shll
jp
mov
imulb
in
xor
loope
shrl
add
sbb
push
sbb
fcomps
stos
cmp
insb
sbb
push
dec
gs
adc
jne
inc
in
mov
mov
push
dec
xor
es
xchg
nop
sub
mov
ja
and
sbb
jg
jl
fildll
mov
stc
cmp
mov
sahf
outsl
push
stos
mov
and
ds
push
out
add
jecxz
in
andb
sbb
xchg
outsb
add
cmpsl
push
scas
loope
xchg
dec
push
mov
push
jo
or
cwtl
push
sysenter
sti
xchg
data16
inc
xchg
add
jg
stos
int
mov
frstor
je
movsl
rcrl
jno
aam
ret
imul
sub
addb
out
xchg
aam
mov
jmp
dec
ret
mov
adc
ret
imul
das
jnp
cmpl
cmp
and
ds
cmp
out
fsubrl
cmp
xchg
xchg
sub
outsb
mov
xchg
rcll
cmp
loop
popf
movsl
fiadds
les
jmp
xchg
test
mov
fdivrl
mov
xchg
jmp
les
adc
lret
sbb
ret
mov
and
dec
std
cld
in
mov
xor
inc
xchg
xchg
jle
shl
out
loopne
jo
jle
sbb
popa
sub
test
push
sbb
pop
popf
mov
orb
sub
mov
lods
movsb
mul
dec
cmp
and
sub
xor
and
jge
adc
jnp
jnp
pop
sbb
jl
mov
mov
fists
popf
adc
orb
xlat
sbb
aad
pop
pusha
dec
inc
xchg
shrb
pop
imul
jmp
lcall
jg
mov
in
inc
inc
pop
lret
and
mov
xchg
lods
test
fnstsw
mov
or
add
imul
cmp
es
add
pop
in
jecxz
out
into
lahf
rorb
int
rorb
jno
loope
or
xchg
or
leave
mov
push
negl
test
paddsb
out
insl
jbe
pusha
imul
sti
or
xor
and
mov
das
adc
loope
mov
fsubp
xlat
xchg
inc
push
fs
fists
into
adc
rcrb
lret
push
add
mov
pop
mov
and
orl
jg
jae
mov
nop
pop
pusha
jle
adc
outsl
xchg
or
into
dec
xor
movsb
out
mov
and
dec
ja
scas
sub
xchg
or
mov
inc
rolb
add
mov
shrb
stos
stos
jge
pop
push
jecxz
mov
push
psllw
adc
jge
sbb
stos
pop
sub
jle
divb
out
idiv
pusha
and
dec
and
inc
leave
adc
push
adc
mov
nop
mov
mov
pop
sar
mov
inc
fs
mov
push
stos
jle
mov
or
cmp
dec
or
lea
sbb
adc
ja
rcrl
and
add
loope
andb
mov
out
mov
std
repnz
scas
lret
jge
pop
ja
push
xor
test
inc
push
fstpl
inc
ss
dec
fistpl
ljmp
xlat
loopne
push
insl
test
stos
mov
xlat
lea
fcoml
lret
lea
cmp
and
sub
push
dec
repz
enter
xchg
cli
or
loope
iret
inc
lods
xchg
iret
mov
inc
push
inc
add
pop
xchg
jnp
mov
pusha
or
add
idivl
mov
cli
cmpsl
lock
inc
jge
sbb
sarl
ret
add
popa
add
ss
and
mov
cld
jmp
movsb
sbb
andb
test
int3
push
and
mov
jne
out
xor
repnz
dec
jl
repnz
sub
in
push
in
pop
mov
loopne
gs
repz
lea
and
enter
xor
test
lock
or
or
lret
aam
fmul
outsb
mov
out
push
stos
jl
nop
xchg
in
negb
push
dec
xchg
pop
xchg
in
mov
fs
and
adc
outsb
repnz
push
lret
fsubl
out
and
cmp
cmpb
xchg
rol
add
push
scas
sbb
pop
sub
push
bound
jbe
imul
xchg
sarb
in
fnsave
dec
loope
lret
data16
mov
mov
cwtl
add
sbb
jmp
call
mov
mov
pop
jo
aad
dec
jnp
daa
mov
pop
sbb
mov
jecxz
arpl
and
aaa
add
int3
arpl
icebp
in
in
test
pusha
ret
xchg
xor
ds
inc
shll
xor
out
dec
fstps
outsl
movsl
inc
xor
sbb
daa
popa
and
push
mov
std
ja
add
inc
loop
int
mov
aas
push
mov
test
outsb
leave
xor
out
pushl
ret
cmp
sbb
inc
add
gs
in
aaa
mov
in
push
xchg
jge
pushf
sub
or
icebp
xchg
lret
lods
or
jecxz
testl
inc
add
into
cmp
push
bound
in
or
mov
inc
sbb
jne
xor
icebp
out
push
cmp
push
jecxz
xor
ja
test
or
mov
scas
dec
push
mov
scas
imul
out
aam
dec
repz
dec
pop
jge
fiadds
ds
inc
std
lds
in
lcall
push
mov
jno
inc
mov
dec
mov
in
pop
push
faddl
xchg
lods
mov
pushf
aad
int3
jle
push
je
inc
add
aam
or
xor
aaa
hlt
hlt
mov
adc
sbb
pop
jbe
scas
push
adc
adc
loop
gs
mov
repz
outsl
insb
shrb
shrl
inc
jle
and
cmp
xor
movsb
pop
aad
aas
cmp
lahf
lret
jp
inc
xlat
mov
push
outsb
cmp
jne
xchg
stc
loop
xchg
out
pop
mov
mov
fsubr
movsl
inc
popf
loopne
int3
movsb
cmp
scas
xchg
sahf
and
cltd
adc
adc
insb
fisubs
nop
hlt
in
mov
and
in
inc
and
dec
xor
test
mov
mov
inc
or
stos
jno
mov
clc
in
pop
pushf
jmp
jmp
data16
aad
dec
andb
xchg
ret
mov
xchg
divl
mov
and
je
arpl
in
or
les
mov
push
xchg
insb
add
push
js
push
mov
add
jns
pusha
rcrl
adc
lds
jge
jecxz
jmp
imul
pop
push
adc
scas
inc
push
dec
lcall
leave
loop
inc
mov
mov
movsb
adc
lret
and
fwait
xchg
enter
add
sti
lret
jnp
sub
mov
add
lret
push
mov
adc
arpl
rcrb
xor
repz
xorl
jg
and
fstpt
rcll
or
notl
inc
and
out
jecxz
push
pop
xchg
popf
and
cltd
test
mov
jae
mov
sahf
aad
outsb
sub
pusha
push
cltd
sbbl
in
inc
aad
fmull
pop
xchg
cld
pop
lods
pop
lods
push
mov
les
mov
pop
mov
notb
data16
in
pop
loopne,pt
insl
stos
ret
sub
sub
push
in
subl
or
jb
filds
lret
mov
xlat
and
xor
adc
and
push
insl
shll
sbb
faddl
cwtl
xchg
push
push
fimuls
xchg
mov
jl
add
cmpl
cmp
and
inc
flds
dec
dec
lcall
cmpsl
fldenv
push
ds
dec
cmp
xchg
cmp
test
inc
mov
mov
xor
int3
dec
shlb
clc
mov
and
mov
testl
out
or
jns
or
xchg
add
sub
push
lea
push
nop
outsb
jg
push
jne
divb
pop
push
adc
mov
mov
cmp
repnz
data16
xchg
or
cmpsb
adc
xor
into
cmp
adc
push
decl
add
xor
mov
mov
dec
xchg
pop
jne
ret
xor
mov
fdivl
stos
xor
dec
in
fdivrl
mov
cld
pop
in
imul
dec
daa
sub
inc
or
das
out
dec
mov
orl
loopne
clc
sbb
insb
fwait
sbb
xchg
jns
add
fldl
gs
jge
test
insl
xchg
incb
pop
int3
les
dec
cmpsb
call
push
mov
aas
cmp
pop
fidivs
push
adc
fimuls
xlat
cli
data16
xchg
cli
daa
sub
inc
aaa
pop
cld
xchg
cmp
jmp
lcall
sub
stos
insl
sub
mov
std
xor
les
cld
daa
stc
adc
xchg
sub
pop
ljmp
mov
mov
sub
cltd
in
xchg
movsl
or
jne
dec
lret
nop
fistpl
ja
push
mov
inc
mov
and
mov
lock
xchg
sti
ljmp
nop
jnp
out
cs
lods
roll
shlb
sbb
jno
aaa
lretw
sub
push
xor
js
cmc
xor
mov
mov
popf
mov
sbb
push
inc
ja
mov
scas
loope
mov
mov
jb
addr16
pop
jb
leave
movsb
out
in
cmp
loop
loopne
mov
movsl
pushf
outsb
clc
and
jecxz
cs
testb
jmp
mov
bnd
xlat
dec
cli
lds
sarl
jg
cmp
and
sbb
sbb
in
fisubl
adc
sahf
and
insl
sub
ljmp
cmp
scas
out
or
insb
or
inc
hlt
dec
push
pop
incb
and
mov
pop
mov
fsub
mov
xchg
ret
adc
or
jg
mov
lods
jae
imul
xor
icebp
add
jb
rclb
mov
mov
lods
sub
adc
jl
lods
push
nop
call
jo
negb
xor
push
scas
fstpt
mov
jo
inc
testl
movsb
cwtl
xor
shll
cltd
lods
int
out
push
shll
jl
adc
decl
jg
stc
mov
sbb
xchg
push
jmp
addl
jl
mov
inc
sti
xchg
sub
inc
pop
xchg
or
xchg
jbe
cmp
pop
cltd
filds
xchg
sub
cwtl
xchg
fbld
push
pushf
push
jbe
and
and
mov
cmpsl
xchg
lret
mov
or
cmp
imul
into
mov
loopne
pushf
repnz
xchg
and
pop
mov
jecxz
shlb
mov
mov
neg
adc
mov
mov
sub
mov
aad
adc
out
repz
add
or
mov
outsb
dec
imulb
sbb
or
es
sub
mov
mov
icebp
add
fs
scas
fidivrs
adc
push
arpl
adc
rcl
or
pop
je,pt
or
sub
addl
xchg
dec
cmpsb
negb
std
gs
fimull
mov
call
fidivl
fdivl
push
pop
int3
jg
mov
push
test
mov
mov
insl
xchg
add
test
inc
fcomps
cmp
xchg
pop
inc
inc
adc
mov
jns
sub
nop
test
imul
cmpsl
push
mov
out
push
mov
jp
add
cltd
and
pop
mov
call
lcall
loope
lret
cs
inc
jg
mov
mov
dec
sbb
dec
fcoml
xor
push
fstp
shl
data16
jge
cmp
mov
lahf
in
pop
shrb
or
jne
sahf
les
or
imul
mov
mov
mov
push
xor
int3
push
xchg
mov
mov
sahf
xor
cmp
arpl
sub
shll
adc
cmp
decl
and
cmc
in
xor
mov
add
lods
repnz
les
flds
jae
xchg
es
into
push
stc
shl
aaa
mov
xor
or
push
push
jecxz
xchg
std
bound
in
add
ret
pop
mov
sub
inc
xchg
out
movsl
fs
out
aaa
pop
inc
and
or
bound
add
je
or
push
mov
das
insb
sarb
fiaddl
movsl
xchg
pop
cmp
dec
sbb
adc
mov
mov
mov
in
ret
std
dec
add
cmp
or
test
cli
aas
cmp
cmpb
mov
jns
lcall
jo
hlt
xchg
cmp
xor
pop
add
sub
pop
test
pop
dec
nopl
out
push
or
rol
mov
enter
inc
je
outsb
pushf
push
in
xchg
inc
xchg
scas
adc
inc
jae
lret
mov
mov
pushf
jns
aaa
pop
push
aad
icebp
inc
dec
jo
and
mov
aad
clc
mov
dec
insl
loopne
adc
push
andl
push
pop
call
push
aas
in
cmp
shr
or
ss
inc
xor
cmp
xchg
xchg
pop
pushf
js
movsb
fisttpl
ret
jg
pop
jne
mov
imul
call
hlt
mov
push
sbbl
ja
jmp
mov
lret
xchg
out
and
int3
insb
aaa
rorb
pop
ret
sub
in
mov
add
xchg
scas
ss
int3
mov
mov
xchg
push
in
push
mov
fdivrl
ljmp
lret
jbe
ret
fdivl
loop
mov
cmp
dec
cmp
push
jp
sbb
arpl
int
mov
mov
or
push
dec
sub
pop
jne
dec
pop
xchg
push
sbb
sub
add
add
sub
into
mov
jg
xchg
xchg
adc
push
push
fmul
push
icebp
aam
adc
adc
xor
push
mov
loop
fisttpll
sbb
rsm
in
mov
inc
pushf
or
sarl
mov
addr16
mov
stos
out
xchg
jecxz
xor
rorb
or
scas
pop
mov
enter
jl
push
xor
mov
adc
jecxz
mov
bound
shl
cmp
aaa
mov
pushf
orl
in
fcom
or
popf
sub
push
es
inc
jl
lahf
ss
idiv
call
jae
or
cmp
int3
addr16
add
inc
and
in
mov
and
and
fwait
jno
fildll
and
mov
push
in
ljmp
cmpl
std
pushf
popf
mov
mov
cli
cmp
fimuls
ja
adc
push
mov
mov
int
nop
icebp
push
and
out
cmpb
and
test
leave
out
and
pop
mov
in
xchg
shll
insl
scas
mov
es
out
jge
adc
mov
dec
push
xor
pop
or
push
push
cs
out
mov
inc
ljmp
and
scas
fisubl
in
loopne
loope
imul
int3
insb
cltd
inc
inc
and
ds
or
mov
mov
cwtl
mov
pop
je
int3
movsb
mov
lock
jp
int
nop
aad
dec
ficoms
add
or
jecxz
fstpl
jnp
cmp
dec
lea
fildl
in
push
es
add
mov
imul
mov
xor
pmulhw
imul
cmc
call
inc
mov
mov
cmpsb
cs
mov
aaa
push
cmpsl
xchg
add
scas
dec
lea
pusha
mov
dec
lahf
sbbl
add
sbb
adc
xchg
mov
or
sahf
in
mov
add
mov
fldcw
ret
lret
mov
aas
xchg
mov
dec
cld
call
test
cmc
sub
mov
rclb
lods
sbb
cld
aaa
mov
pop
std
jne
pushf
add
loope
inc
adc
fistps
mov
mov
aas
movsb
inc
inc
jbe
dec
dec
and
mov
orb
sbb
push
cmp
bound
fsubp
test
or
movsb
ja
fldl
mov
and
ds
sbb
das
and
outsl
push
insb
mov
imul
scas
imul
xchg
inc
jge
xchg
lds
jp
sbb
test
push
push
and
gs
ret
fstl
dec
inc
lret
lods
xchg
xchg
out
dec
out
or
xchg
ret
cmp
jo
insb
or
jl
mov
repz
ljmpw
cmc
fcoml
lahf
fcomi
sub
lds
sbb
jns
inc
jns
daa
pop
pop
jecxz
pop
cmp
add
sti
dec
or
call
std
pop
adc
and
push
fstpt
xor
in
inc
mov
jne
fs
nop
lods
add
sbb
xchg
arpl
iret
xor
movsl
fstl
xor
mov
dec
ffreep
dec
mov
test
aad
mov
pop
mov
cmp
jl
fscale
xchg
cmpsb
sub
jae
outsl
xchg
mov
pop
cld
test
jno
dec
pop
mov
sub
stos
xchg
insb
jmp
add
cmp
mov
xchg
add
and
test
cmc
scas
lcall
jl
adc
insb
rcrl
jns
pop
inc
sti
sbb
stos
and
stc
and
out
pop
adc
mov
pop
and
adc
and
jb
or
cs
sbb
cmc
cmp
inc
xor
adc
mov
xchg
or
stos
mov
std
xchg
cmc
test
andl
cmpl
int3
jne
lcall
lods
pop
jle
jno
and
faddp
rolb
dec
mov
imul
movsl
sbb
push
adc
cmpsl
pop
cmc
and
xchg
test
adc
pop
mov
adc
mov
add
sti
cmp
nop
int3
push
push
mov
dec
add
xchg
neg
fldenv
mov
ds
dec
stc
jo
mov
out
rorl
xor
sub
scas
mov
and
aas
jae
mov
xchg
cld
test
push
inc
movsl
or
push
sbb
pop
iret
push
or
or
imul
push
cltd
xlat
pop
push
adc
cmp
mov
jne
les
or
lods
pop
stos
dec
xchg
mov
pop
sbb
inc
pop
dec
sub
xor
jmp
xor
push
pop
stos
fbstp
hlt
inc
add
and
test
rcll
addr16
pop
push
push
lahf
andl
clc
rol
cmp
leave
iret
sbb
mov
out
and
mov
or
lcall
adc
push
mov
adc
stos
fldt
sbb
inc
cmp
mov
sti
or
repnz
aam
adc
loopne
and
inc
leave
lods
and
pop
cmp
lahf
mov
in
mov
out
lret
jl
stc
mov
xor
cmpsb
sbb
jo
fldcw
js
shll
inc
and
test
stos
cmpl
dec
frstor
insb
repnz
hlt
and
mov
inc
jg
mov
xchg
cmp
xchg
jb
mov
ret
and
push
cmpsl
jmp
rorb
push
outsb
adc
cmp
mov
push
inc
mov
xchg
lea
call
jp
aaa
sbb
popa
xor
dec
out
mov
and
fdivrl
xchg
add
loop,pn
jp
cmpsl
push
adc
jbe
cmp
pop
repnz
lods
call
test
aad
sti
mov
mov
push
test
stos
xor
in
mov
and
dec
lds
mov
lahf
cmp
js
addb
hlt
pop
loopne
dec
je
add
inc
sub
js
test
push
out
stos
das
movsl
sub
dec
push
xchg
ret
mov
xchg
or
daa
xor
xchg
dec
add
ret
xchg
jo
inc
and
sub
ds
add
xor
or
xor
es
ljmp
xor
push
aam
mov
mov
xor
jns
xchg
adc
sub
mov
pop
fcmovnb
mov
mov
pop
mov
pusha
stos
sub
mov
mov
or
fwait
popl
add
das
jo
pop
sbb
ljmp
or
xchg
mov
cmpsl
jmp
mov
dec
mov
jg
es
sbb
loopne
xor
adc
pushf
xchg
aas
mov
insl
xchg
jnp
add
push
cs
cmp
es
movsl
adc
dec
jl
leave
lds
pusha
dec
sub
add
jae
dec
xchg
outsl
test
pop
stc
cmp
fwait
mov
mov
ljmp
mov
les
inc
xor
dec
pop
mov
lods
stc
and
add
iret
mov
jle
stos
xchg
jmp
push
inc
adc
jecxz
mov
mov
push
adc
cmp
lock
cmp
in
std
lea
dec
popa
stc
mov
cmp
sbb
fwait
push
incb
cmpsb
mov
inc
mov
ja
sbb
dec
es
push
jae
jno
rcll
sahf
adc
push
lahf
cmp
dec
iret
push
lock
add
add
gs
stc
cmpsl
mov
jmp
cmp
mov
cmp
gs
out
or
inc
mov
inc
jle
sbbl
in
inc
push
std
pusha
or
repnz
repnz
jge
jns
mov
mov
out
sub
pop
dec
xchg
cli
xchg
jle
cli
orl
cmp
movzbl
xchg
and
inc
push
andl
jne
hlt
xchg
insb
xchg
push
les
and
call
out
imul
jmp
movsb
fs
lea
jge
je
adc
and
or
dec
das
pop
aad
lock
sub
sub
stos
add
rorb
aaa
hlt
mov
daa
cmovbe
mov
insb
ret
xchg
push
or
mov
jmp
jl
frstor
int3
lret
loope
es
insb
add
hlt
adc
dec
test
outsb
ret
scas
ret
fsubr
sbb
dec
je
dec
test
imul
mov
gs
stos
and
xchg
popf
dec
dec
mov
add
dec
fldl2e
aas
dec
or
lret
mov
and
inc
in
or
cs
add
xor
div
jmp
mov
adc
mull
movsl
mov
movsl
dec
sti
pop
mov
pop
sbb
arpl
das
sub
ds
jl
aam
or
cmpl
adc
test
inc
mov
mov
pop
xchg
in
mov
scas
int
lcall
pop
mov
mov
adc
leave
sbb
dec
movsb
add
add
cld
outsl
jbe
testl
aad
jno
arpl
scas
jp
pop
into
popf
imull
fwait
dec
stc
stos
mov
dec
push
loopne
aas
roll
pop
test
lcall
or
loop
flds
xchg
fstpl
insb
pop
push
test
inc
ja
nop
jmp
jle
pusha
xlat
mov
testb
cmp
sbb
and
add
xor
iret
in
jp
cli
xchg
stos
jbe
sbb
subb
fwait
sub
loope
pop
icebp
pop
pop
mov
test
in
imul
jmp
testb
fbld
xor
scas
lret
push
xor
jb
les
xor
out
and
cmp
and
and
mov
loopne
mov
das
mov
fs
pop
out
cmpsb
loop
lds
jecxz
mov
xor
js
push
daa
inc
sub
inc
subl
sub
scas
rolb
xor
add
push
mov
mov
add
jo
clc
call
xchg
lcall
je
enter
or
inc
mov
mov
lret
je
cmpsl
xchg
stos
sub
mov
daa
xor
pop
cmpsb
loopne
xchg
test
test
sahf
das
std
aad
cmp
cmp
cmc
inc
adc
testl
mov
lcall
leave
into
insb
leave
ljmp
les
or
lcall
inc
jne
sbb
pop
xor
mulb
cmpsl
insl
adc
mov
sub
js
xchg
and
and
testb
cld
mov
fmul
inc
loope
daa
mov
orb
int3
xchg
sbb
jae
scas
hlt
push
and
lahf
inc
cmp
test
adc
dec
lcall
scas
popf
nop
or
inc
cmp
mov
or
pop
cmpsb
dec
outsl
adc
in
out
loopne
xor
cmpsb
push
ja
cltd
jo
jle
inc
movsl
dec
pop
push
mov
jge
mov
repnz
pop
icebp
insb
mov
cmp
out
std
ret
dec
fnsave
push
sbb
insl
inc
xchg
sbb
movsl
jg
and
pusha
xchg
cld
inc
jne
ss
push
in
test
pop
enter
sub
add
sbb
test
orb
outsb
in
loopne
sbb
push
out
push
outsl
cmp
cli
loopne
les
dec
mov
in
gs
pop
iret
mov
and
pop
adc
out
inc
adc
enter
cs
pop
ffreep
gs
jp
int3
cld
roll
xchg
cmpsl
sbb
fistpl
bound
jne
out
or
jbe
dec
orl
xor
xchg
call
pushf
bound
add
out
jbe
dec
pop
xchg
xor
sbb
stos
and
mov
aaa
sub
loopne
sbbb
mov
das
jecxz
lcall
leave
stos
jne
out
mov
sub
inc
xor
jp
andl
mov
inc
cmp
outsl
sbb
inc
push
cli
pop
fcompl
jecxz
ret
jnp
in
lahf
jb
pop
lcall
add
test
or
pop
add
sub
mov
mov
jl
mov
sub
hlt
cmp
xor
adc
movsl
nop
pop
adc
stos
imulb
mov
cmp
inc
jp
aad
out
ja
jns
dec
fmull
mov
ret
or
cs
loop
dec
arpl
sbb
fsubrs
xchg
lret
ret
or
xchg
xchg
in
pop
hlt
or
gs
pop
mov
outsb
mov
and
push
jne
jns
push
enter
das
repz
dec
hlt
stc
sti
or
stc
aas
mov
or
or
push
fisubrs
enter
in
inc
pop
fcomps
mov
ss
xchg
cmp
jnp
nop
push
cmc
aam
popa
pusha
not
and
lret
add
push
nop
mov
mov
movsb
arpl
hlt
leave
js
xor
dec
pop
mov
adcl
repz
loope
push
xchg
aas
dec
cmc
pop
mov
orl
jno
xor
cli
mov
pusha
dec
jns
adc
mulb
aam
pop
out
add
scas
ret
mov
push
adc
pop
or
jae
negb
dec
cmp
sub
aas
frstpm(287
jle
pop
fs
adc
mov
jns
int
add
andb
jo
mov
or
mov
or
cmp
cmc
mov
shrb
mov
pop
xchg
scas
mov
mov
mov
push
xor
test
cld
stos
adc
add
pop
sarl
add
push
test
stos
inc
xchg
inc
das
xor
xchg
addr16
mov
and
dec
cmp
stos
jns
mov
imul
loopne
sub
mov
xor
push
sarb
jle
imul
insb
mov
sbb
inc
cmp
lretw
ret
es
inc
mov
jb
adc
jbe
sbb
jmp
mov
cld
pushf
dec
sbbl
sbb
cs
std
fldcw
adc
btc
out
sbb
add
dec
inc
notl
jb
mov
insb
push
arpl
enter
nop
xor
mov
sbb
xchg
imul
dec
jle
insb
xor
jle
push
and
dec
xor
lods
outsl
pop
icebp
mov
sarb
fs
adc
sub
mov
cmp
popf
fsubrs
inc
add
xchg
cmp
bound
test
cmpsb
pop
out
jmp
lock
stos
divb
imul
ja
or
repnz
shrb
mov
ficoms
in
nop
jns
and
mov
sbb
fimull
cltd
inc
add
mov
inc
jno
iret
xor
or
call
enter
mov
fmuls
bound
jnp
mov
add
leave
adc
flds
fiaddl
pop
pop
mov
js
imulb
icebp
out
mov
out
mov
jne
lock
loopne
das
mov
leave
pop
push
fbstp
imul
lcall
xchg
fs
push
add
imul
or
shl
mov
outsl
repnz
jo
xchg
cmp
fwait
mov
cmpsb
mov
loopne
nop
xor
or
and
jnp
mov
dec
push
mov
adc
pop
xor
lods
and
and
rcrl
aaa
mov
insb
das
sub
mov
xchg
pop
jl
lods
addl
iret
or
lds
xor
xor
sbb
jl
pop
aam
lahf
jb
jmp
xchg
cli
out
movsl
in
pusha
clc
lods
dec
inc
pop
shll
pusha
gs
dec
loope
cld
mov
sbb
das
ret
mov
sbb
mov
or
mov
nop
push
out
addr16
jmp
xchg
shl
insb
xor
ret
and
pusha
mov
pop
loope
in
dec
test
arpl
in
aam
adcl
daa
shrb
mov
lods
add
add
pop
xor
dec
pop
test
mov
jge
push
mov
pushf
mov
xor
jne
mov
inc
sbb
and
in
jae
cmpsl
popf
or
add
jns
and
lahf
pop
xorb
test
xchg
pop
inc
stc
pusha
mov
rorl
cmp
stos
xchg
sti
push
push
lcall
rorb
insl
dec
push
xor
xor
inc
iret
mov
push
sbb
icebp
cmpl
or
addb
sub
das
mov
dec
sbb
loope
adc
dec
in
rcrl
xchg
adc
sbb
sbbl
pop
pushf
stos
pop
pop
cwtl
rcr
je
outsb
lds
push
nop
movb
or
xchg
shr
dec
mul
fimull
rcll
inc
fwait
mov
ljmp
fwait
enter
adc
pop
mov
adc
scas
cwtl
cwtl
mov
push
mov
roll
push
inc
in
and
es
scas
push
scas
das
or
clc
mov
fildll
mov
movsb
lret
sarb
test
push
mov
push
mov
in
mov
push
add
pop
jge
xchg
test
mov
out
push
aad
inc
sub
and
cmp
repnz
xchg
jns
jne
sahf
repz
pop
mov
push
ss
adc
mov
popa
mov
vpmaxub
mov
and
addr16
gs
ret
or
add
lret
jo
test
xor
adc
aas
sub
dec
mov
aam
sbb
xchg
in
in
mov
arpl
shrb
pop
mov
sbb
xchg
es
mov
jae
mov
cmp
or
mov
shll
popf
ret
add
adc
jae
xchg
or
js
push
dec
ficoms
or
xchg
adc
fwait
push
jle
leave
sub
mov
mov
and
pop
outsl
repnz
or
loop
dec
adc
xor
mov
insl
inc
cmp
adc
arpl
popf
or
cmpsb
fwait
mov
scas
outsb
in
scas
lret
enter
pop
jmp
jo
or
mov
jne
dec
ljmp
fists
cmp
fldt
add
pop
stos
adc
inc
cmpsl
bound
push
mov
push
jmp
cld
sbb
inc
movsb
cmp
add
ret
vpsubd
inc
mov
outsl
mov
dec
gs
pop
out
add
adc
mov
xor
inc
leave
inc
sub
pop
in
cmp
jecxz
test
jmp
pusha
iret
push
sub
es
pop
sbb
push
ret
lods
fcomps
mov
imul
scas
dec
addr16
testb
ss
repz
pop
scas
mov
fnsave
in
xor
mov
mov
movsl
dec
ljmp
push
xor
in
mov
cmp
pop
dec
sub
xchg
mulps
xchg
jb
jnp
ret
push
shll
hlt
push
out
inc
inc
lret
xchg
movsl
mov
in
hlt
fldcw
cmp
dec
and
xor
sub
into
stc
les
or
push
mov
jle
and
mov
cltd
lret
mov
xlat
sahf
mov
bound
pop
pusha
push
sbb
out
sar
hlt
outsb
inc
aas
adc
inc
inc
jno
mov
dec
xor
into
inc
cwtl
cmp
pop
mov
push
mov
gs
mov
xchg
into
sub
popf
addr16
and
push
aad
mov
movsl
sbb
fildl
inc
mov
or
ret
sub
loopne
or
das
xchg
loop
fdivs
dec
mov
fdivr
sbb
andb
scas
xchg
pop
js
mov
xlat
cmp
and
xor
ja
in
push
lods
fsubs
inc
jae
not
push
xchg
push
lahf
jmp
insb
gs
rclb
mov
push
pop
cmp
and
sbb
cli
inc
ret
scas
mov
mov
or
jne
or
mov
cmp
mov
aaa
lods
pop
movsb
loopne
cmp
sti
test
and
cmpsb
ja
mov
test
dec
mov
loop
jo
adc
dec
jnp
enter
orb
xchg
jb
call
xchg
fs
ss
fstps
pop
mov
push
xchg
adc
or
ds
repz
sahf
jg
inc
and
push
js
and
dec
jecxz
push
sbb
jbe
inc
enter
jp
repnz
movsb
subl
jecxz
jae
insl
ret
imul
cmp
push
push
pop
pop
sub
leave
mov
mov
rorl
cmp
dec
data16
and
pop
test
sbb
xorl
mov
test
dec
lret
xor
je
outsb
dec
adc
mov
xchg
das
sbb
add
or
or
testb
jmp
adc
dec
lds
sub
popfw
int3
inc
fsubl
add
pop
aas
enter
aam
fildl
nop
dec
loope
loope
and
mov
sbb
xchg
mov
in
pop
in
xor
xchg
test
mov
adc
dec
lret
not
mov
adcb
loop
lret
sbb
or
clc
clc
mov
add
mov
mov
les
mov
inc
sub
mov
movsb
cmp
push
enter
stc
cmc
nop
bound
movsl
shr
cwtl
aaa
mov
sahf
fwait
sbb
std
testl
fsts
jns
pop
nop
imul
ljmp
inc
data16
fstpl
jl
add
js
push
or
rcll
dec
inc
lahf
fcompl
fisttpl
add
inc
xor
in
inc
hlt
sub
pop
mov
shl
jo
mov
lcall
cmp
movups
dec
and
mov
xchg
sahf
dec
clc
jne
int
jmp
jle
outsb
dec
movsl
jge
sbb
fiadds
pop
cs
or
stos
mov
mov
stc
lret
or
ret
mov
lods
mov
mov
loop
into
or
lea
mov
xor
movsl
push
jge
push
and
dec
lret
jbe
stos
stos
lahf
shll
cli
add
pop
jbe
imul
ss
mov
or
cmp
pop
ljmp
addr16
call
sbb
push
subl
sub
rclb
pusha
sub
inc
nop
pop
scas
pop
mov
xchg
shlb
fisubrl
or
imul
mov
std
and
cmp
pop
lahf
pop
es
xchg
or
jo
or
dec
repz
shr
rorb
les
pop
fistpll
aas
jg
dec
sbb
xor
popa
lahf
sti
inc
xchg
jne
jae
mov
or
dec
push
dec
and
cmpsb
mov
rcr
aam
jle
fwait
mov
xchg
pop
in
sbb
add
xchg
lds
or
xchg
movsl
repz
xor
and
jne
fwait
ljmp
fwait
nop
cmp
std
cld
pop
sub
das
adcl
insb
xchg
mov
lock
cmp
add
loope
mov
cmc
mov
sti
push
xor
cld
shll
adc
mov
lods
loope
sar
add
negb
jge
dec
setbe
xor
testl
jbe
fdivl
add
daa
and
or
mov
mov
mov
popa
inc
or
sti
jb
mov
cmp
in
aas
xchg
cmp
lret
arpl
or
loopne
in
pop
orl
push
cmpsl
pop
sub
or
push
cs
data16
and
mov
cmc
jl
outsl
add
jmp
xor
push
jb
in
xchg
test
jae
sbb
cwtl
shrl
xor
jle
adc
sub
in
sub
cltd
clc
cmp
xchg
mov
inc
outsb
stos
scas
mov
fsubr
cmpsl
in
mov
nop
inc
jno
pop
push
sbb
call
gs
scas
mov
inc
mov
mov
jmp
cmp
xchg
adc
loopne
scas
mov
lods
push
push
jns
adc
mov
popf
adc
adc
add
jb
xchg
adc
lods
lcall
jecxz
lcall
daa
cmp
mov
lods
lahf
push
sar
out
in
cmp
and
sbb
test
mov
fistps
pop
insb
shll
repnz
pushf
test
jl
add
fidivl
pop
push
hlt
sub
push
dec
and
call
jle
fwait
mov
jl
jne
pop
hlt
fidivs
jl
sub
and
xchg
and
lret
in
cmp
mov
mov
dec
js
repz
adc
inc
scas
mov
shrl
xchg
fs
mov
cmp
xorb
mov
add
dec
inc
xchg
out
fstps
cwtl
xchg
mov
in
or
enter
mov
jno
pop
push
rorb
ja
jmp
xor
repz
test
aam
rcrl
cmpb
out
mov
popa
je
pop
push
aaa
mov
pop
repz
xor
mov
iret
xor
push
adc
inc
mov
ret
jge
loopne
loopne
scas
fcomi
outsb
shll
loop
xor
mov
mov
sbb
ja
add
adc
mov
cmp
dec
mov
das
cmpb
insl
sahf
push
fcompl
jb
out
clc
dec
xor
xor
cmp
lret
jecxz
mov
pop
sahf
test
add
in
mov
repz
mov
jno
ret
mov
cmp
xchg
in
xchg
cmpsb
lods
clc
add
pop
dec
xchg
scas
adc
inc
test
fcmovnu
sbb
test
cmc
jp
dec
add
push
test
ds
xchg
pop
jp
mov
push
mov
pop
pop
iret
sbb
es
jae
ret
dec
out
scas
fstl
imul
or
mov
ja
mov
out
das
pop
add
xor
or
cmp
cmp
cld
jg
clc
loop
push
outsb
sarl
cmpsb
pop
push
in
ljmp
sub
int3
pop
fiadds
imulb
imul
push
push
pushf
dec
push
mov
jne
test
or
or
lahf
stos
outsl
enter
cltd
leave
dec
xor
lock
and
loop
addr16
pushf
pusha
mov
pop
mov
xchg
out
out
stos
or
cmp
pop
dec
sub
inc
sbbb
divl
incb
addl
cli
and
pop
in
cmp
mov
push
jl
pop
lods
sbb
jmp
sbb
stc
lds
mov
ds
call
pop
and
roll
xlat
mov
mov
jg
jmp
jne
mov
dec
mov
push
sbb
js
idivl
mov
fwait
xchg
adc
in
call
filds
mov
into
push
pushf
hlt
inc
xchg
sbb
ds
jp
mov
ljmp
and
push
xchg
in
fwait
sub
sub
aam
push
dec
sub
insb
lods
lods
cltd
or
cwtl
inc
mov
lret
mov
jbe
lahf
add
enter
sbb
or
xchg
arpl
push
add
mov
sbb
mov
jbe
js
fldenv
mov
add
lds
es
sbb
out
mov
pop
prefetchwt1
adcl
mov
xor
mov
ret
inc
lea
popf
das
cmpsl
pop
bnd
ss
out
sar
mov
fcomps
cmc
aas
repnz
test
out
or
sbb
lahf
test
mov
or
xlat
push
std
pusha
addr16
inc
fstps
or
in
sbb
movsb
xchg
mov
xor
mov
mov
out
stos
fisttpl
xor
inc
sbb
test
inc
sub
xchg
int
adc
into
jecxz
mulb
mov
stc
leave
mov
and
mov
push
dec
and
pop
push
sbb
imul
xchg
mov
out
jle
lods
mov
sub
sbb
lahf
inc
ficompl
push
popf
and
jae
scas
loopne
sbb
mov
les
mov
les
mov
add
push
fwait
sub
push
xchg
mov
mov
test
dec
aam
xchg
jg
mov
sub
adc
mov
stos
mov
cmc
dec
mov
xor
cmpsb
out
cmpsb
jle
inc
mov
dec
pop
andb
adc
loopne
insb
in
xchg
mov
popf
xlat
mov
or
inc
mov
fs
push
jno
inc
xorb
xchg
je
pusha
dec
clc
cmp
mov
inc
je
shll
rolb
mov
faddp
jmp
jno
lret
dec
outsb
aaa
jo
xchg
lods
xchg
rcrb
push
mov
push
xlat
fdiv
cmp
fisttps
or
adc
mov
cmpl
movsb
fyl2xp1
mov
ja
dec
ss
repnz
loope
jnp
das
pop
jecxz
mov
outsl
mov
outsb
pop
and
sahf
inc
jp,pn
lods
inc
or
pushf
std
mov
inc
jle
or
imul
sbb
sbb
pop
jp
cmp
lea
lcall
sbb
into
stc
dec
mov
xlat
sarb
pop
push
or
xor
shl
mov
cmc
xchg
pop
ja
rorb
inc
mov
jg
push
ds
xor
nop
jle
xchg
dec
insb
lods
aaa
sub
ret
ljmp
in
dec
sbb
repnz
insb
popf
cmp
mov
das
mov
std
mov
jno
mov
mov
push
hlt
cli
cmpsl
push
sbb
ffreep
sbb
cs
in
shll
xor
inc
test
inc
push
xchg
sbb
sub
lret
aas
mov
mov
cmp
sarl
test
es
push
sub
sahf
lds
mov
es
cmp
fidivrs
fistpl
shrl
mov
xchg
mov
pushf
inc
aad
vmovdqu
xchg
xchg
popl
jo
pop
push
rcll
and
icebp
nop
ss
ljmp
test
pushf
shlb
xor
adc
inc
cmp
xlat
lahf
pusha
xchg
cld
sub
dec
add
adc
hlt
mul
adc
rclb
je
jbe
sbb
ljmp
sbb
aaa
sahf
pusha
cmpb
jno
pop
repnz
push
pop
xchg
mov
jle
adc
pushf
push
stc
mov
sbb
push
sub
cmp
out
es
mov
xchg
or
mov
sub
or
test
ljmp
mov
aas
das
js
inc
jae
stos
test
loop
mov
dec
mov
loop
pop
mov
aam
repz
pop
adc
outsb
mov
std
clc
fnsave
jg
filds
ds
inc
pop
dec
inc
fiadds
mov
stc
dec
sti
pop
je
cmpl
inc
pusha
fadds
fcompl
mov
lret
cmpsl
test
fmull
mov
inc
pop
sbb
je
fldt
daa
les
call
mov
or
xchg
push
pop
mov
enter
mov
sub
sub
push
clc
loope
or
pop
sub
pop
sbb
add
dec
jbe
pop
gs
inc
call
cmc
cmpsb
push
outsl
xor
or
mov
jmp
lret
mov
in
idivw
pop
push
inc
dec
cs
addr16
push
sbb
jg
mov
cltd
lcall
lods
jne
jle
loope
mov
xchg
jnp
adc
push
push
jmp
push
dec
inc
out
shrl
jbe
cli
xor
push
loope
adc
lcall
cmpsb
sahf
rclb
iret
cmovno
and
fwait
add
push
cmp
adc
sub
fidivs
jae
popf
data16
out
movsb
fcomi
push
roll
sbb
xchg
loop
imul
fstps
pop
jecxz
test
sub
push
sahf
mov
dec
fnsetpm(287
pop
cmpsb
cld
mov
dec
mov
and
ss
dec
inc
cmp
jno
negl
outsb
sub
js
or
leave
shll
test
loope
xchg
insb
xchg
in
mov
and
adc
outsb
mov
pop
dec
mov
loopne
daa
xor
mov
sbb
daa
dec
dec
mov
ret
incb
neg
andl
or
inc
cwtl
mov
cmp
or
in
popf
call
dec
dec
cmp
cmp
push
out
inc
lret
xor
jecxz
push
xorb
mov
push
adc
sbb
in
sub
sahf
xchg
repnz
aam
mov
xchg
pushf
aad
push
mov
jne
xchg
sub
fcmovnu
pushf
aam
cmp
std
jp
mov
xor
and
adc
movq
lcall
push
sbb
xchg
aas
arpl
sbb
loope
insl
mov
mov
cmp
inc
subl
ljmp
mov
in
lds
movsb
xor
das
dec
enter
jb
jb
xchg
iret
test
cwtl
imul
fcomp
shll
shl
je
mov
pop
mov
jns
mov
scas
mov
mov
insl
pop
xor
rclb
imul
jo
xchg
add
aas
mov
mov
mov
mov
jb
test
pop
sub
cmpsb
sbb
xor
sub
mov
adc
in
mov
xchg
sbb
mov
jno
lcall
call
into
sbb
jp
push
jecxz
sahf
test
mov
lahf
les
xchg
or
mov
mov
cld
daa
das
lods
js
mov
lahf
push
cmpsb
iret
xor
lea
fs
pushf
ficompl
arpl
loop
in
mov
mov
cli
loope
cwtl
pop
mov
inc
or
mov
shlb
add
inc
and
and
imul
or
aaa
aas
pop
pop
and
in
stos
mov
movsb
leave
adc
imul
dec
out
lods
fdivr
call
incw
movhps
fdivrl
repnz
call
scas
xor
inc
and
xlat
sbbb
xor
fisttps
out
or
inc
cmp
aas
int
cmpsb
add
adc
stc
fcmove
aad
leave
mov
xor
fnstsw
xchg
nop
mov
cmp
loop
cli
lea
sub
fidivl
shll
mov
inc
lods
mov
fidivs
lods
sbb
mov
gs
js
xchg
jp
pop
dec
pop
loop
or
ret
fisubrl
xchg
je
and
or
jb
ja
pop
rcr
loopne
cmp
fs
repnz
or
aaa
ja
push
xchg
mov
xor
aaa
xor
lods
pop
out
out
in
xchg
xor
jp
imul
cmp
dec
or
jns
addr16
cltd
mov
jae
loope
sbb
pop
fcmovbe
mov
jge
sarb
xchg
cmp
fmul
push
loop
fistps
pop
fbstp
out
or
add
jmp
push
jnp
mov
xchg
xchg
jmp
mov
movsb
std
pop
outsl
push
jmp
xor
aam
hlt
xchg
test
jmp
sbb
mov
popa
call
leave
shlb
in
test
movsb
lea
xchg
push
inc
cmp
cmp
arpl
xchg
push
cmpsb
xchg
mov
cmpsb
imul
pop
cmc
sbb
xlat
mov
xor
divl
pop
sub
mov
adc
gs
rcrb
jecxz
nop
dec
push
clc
jnp
mov
insl
xchg
out
sbb
push
xchg
mov
push
pop
sbb
test
sub
icebp
jne
fcmovnbe
addr16
je
xchg
xchg
or
jle
jp
inc
mov
fcoms
adc
fwait
sbb
xchg
pop
dec
jae
mov
add
dec
jmp
xlat
add
push
jno
lea
sub
xor
and
fndisi(8087
inc
rol
imul
insl
xor
xchg
push
subb
or
lea
push
inc
arpl
arpl
out
inc
hlt
pop
dec
inc
cmp
popa
mov
or
insl
in
ss
add
iret
lcall
out
jne
sti
mov
and
imul
adc
pop
add
loopne
push
divl
out
lea
sub
scas
lcall
cmp
jno
dec
dec
rorl
sbb
sbb
shll
mov
inc
mov
adc
push
pop
nop
nop
lds
fidivl
in
les
dec
int
aad
icebp
cmp
popf
sub
mov
loop
mov
mov
cmp
push
xlat
ss
push
out
mov
int
loope
shrb
aas
enter
push
sahf
jmp
ljmp
xchg
mov
mov
or
jl
aad
cmp
add
cmpsl
cmp
xlat
adcb
add
xor
roll
rol
and
inc
xor
test
arpl
adc
dec
dec
xchg
mov
ret
xor
mov
sti
fildl
pop
lods
mov
movntq
out
mov
ss
adc
jge
push
and
push
enter
test
dec
sub
inc
cmpb
and
cmpsl
xchg
cmpl
stos
mov
repnz
mov
fistpll
sub
fstl
mov
aaa
int
jg
adc
out
lods
inc
jno
sbb
xor
lods
out
adc
dec
adc
sub
mov
lahf
mov
cmpl
insl
and
xor
xchg
xor
push
mov
out
inc
pop
jno
jns
dec
push
lret
aad
jbe
aam
add
sub
sbbl
out
mov
xor
push
test
sub
mov
add
lock
out
pusha
inc
sub
pushf
or
leave
in
sti
jb
stc
test
or
nop
xor
movsb
lods
inc
mov
push
je
loop
push
and
call
divl
mov
inc
add
lods
lods
adc
nop
in
and
xor
aam
or
sub
xor
int3
ret
fstl
pop
pop
sub
in
mov
fwait
cmp
pop
scas
pop
hlt
cs
sbb
cmpsb
lods
iret
insl
test
lock
lret
cmpsb
popf
and
push
jbe
sahf
call
dec
or
push
movsb
fists
aam
xor
std
aad
mov
je
jae
mov
and
mov
in
lea
push
push
adc
shlb
mov
scas
mov
stos
lds
and
dec
mov
jnp
mov
popf
push
add
test
sarb
in
hlt
mov
sbb
stc
adc
ds
mov
mov
shl
xor
sti
lcall
popa
jo
scas
and
pop
and
push
add
cmp
and
aas
or
sub
addl
mov
cmc
xor
push
pop
lea
or
mov
idivb
pusha
jno
repz
cmp
sbb
jp
movsl
mov
xchg
cmc
in
movsl
push
iret
inc
popa
fdivr
nop
fdivp
daa
sub
jg
incl
lahf
jo
incb
iret
out
mov
andb
cmp
jnp
xchg
js
cmpsb
pop
sub
cwtl
dec
sub
pop
sbb
and
sbb
push
jge
mov
aam
ss
jne
fsubl
ljmp
push
jae
repz
mov
mov
sub
jle
popa
ret
outsl
cs
fmull
ret
stos
nop
mov
push
mov
daa
out
xchg
cltd
arpl
outsb
fidivs
clc
cmp
push
cmp
test
mov
mov
cltd
push
ds
and
testl
dec
inc
cmp
sti
mov
ljmp
inc
je
sub
pop
xor
add
push
sbb
xor
mov
lods
fucomp
pop
push
punpcklbw
add
jns
mov
cmc
jmp
dec
xor
inc
sbb
mov
xor
popa
cmp
gs
adc
lods
imul
pop
fcompl
adc
sbb
inc
outsl
loop
or
pop
ficoml
lods
icebp
inc
loop
dec
xchg
testl
mov
ja
xchg
outsb
adc
jns
lea
enter
cld
or
sub
lods
notb
push
das
sahf
mov
pop
push
xor
adc
jae
out
dec
sti
and
add
call
ficoms
xor
aaa
in
mov
xlat
jo
stos
mov
imulb
and
pop
enter
xchg
add
cs
jnp
dec
jp
mov
dec
hlt
clc
xchg
das
insb
mov
cmc
and
cwtl
dec
rorl
add
sub
ret
gs
pop
inc
fsts
fmul
popa
enter
cmp
mov
fsubr
push
mov
jnp
and
out
mov
cltd
es
pop
inc
daa
jno
in
insb
aam
sub
aas
push
inc
cmp
loope
cmp
push
lods
clc
push
adc
fstl
lods
or
jp
gs
leave
and
jg
adc
jbe
repz
pop
stos
dec
nop
dec
inc
fdivr
sub
sub
jp
push
stos
iret
jb
xlat
loope
in
loopne
fsqrt
push
mov
cmp
pop
lret
or
xchg
push
outsl
subb
aaa
ret
jne
cmpsb
out
add
pop
add
and
xchg
dec
mov
test
outsb
out
pop
push
cmp
xor
cmp
jmp
lret
leave
adc
repz
or
lcall
or
sub
mov
lods
mov
rcrb
mov
mov
mov
jg
loop
int
out
fs
mov
inc
inc
ss
push
cmp
iret
sti
cmpsb
dec
xchg
mov
inc
mov
jg
rol
movsb
in
movsb
push
inc
fwait
in
lock
sbb
cmpsl
lods
test
and
mov
push
lea
test
mov
les
mov
cmp
sbb
mov
les
xchg
mov
pop
pop
lea
stos
sbb
das
cmp
inc
cmp
jg
mov
cld
xchg
xor
and
push
xchg
andb
mov
inc
lret
mov
in
sub
xchg
inc
hlt
test
shlb
scas
xor
popa
push
jbe
mov
jle
dec
pop
hlt
push
push
add
push
adc
fsubrs
mov
jmp
push
xor
icebp
adc
cmp
xor
cmp
add
mov
enter
movsl
mov
std
aam
std
and
cwtl
sti
xchg
les
mov
mov
loopne
adc
imul
pop
and
cli
pusha
cmp
scas
test
fidivl
push
fbstp
adc
or
jecxz
lods
add
jo
pop
mov
mov
repz
jecxz
xchg
sub
mov
mov
push
in
loope
and
jge
mov
std
push
jmp
das
sbb
or
mov
cmp
sub
or
in
out
fldt
xchg
mov
cmp
jno
pusha
fistpll
test
hlt
sub
orl
pop
pop
sub
fildll
xor
xlat
stc
sub
fdivrs
rclb
sbb
test
mov
addb
dec
cmpsb
mov
pop
or
mov
out
outsb
jg
gs
sub
dec
test
call
hlt
cmp
dec
imul
sbb
in
insl
and
dec
iret
dec
adc
scas
xor
sbb
clc
out
ret
lock
mov
movsb
push
repz
or
mov
int3
pop
jbe
lret
loopne
fisttpll
aam
cmc
outsb
out
push
jge
lods
xchg
cld
cmp
adc
ret
mov
rolb
loop
push
rep
es
sub
std
push
mov
mov
fs
ljmp
loop
insb
fdivp
out
shrb
add
sbb
es
jne
insl
test
scas
add
scas
outsb
jne
movsl
add
popf
mov
movsl
add
pop
loope
shr
add
loopne
add
daa
lret
and
je
movsb
lds
out
and
pop
cmc
mov
cmpsl
cltd
loopne
mov
push
flds
mov
sub
fimull
mov
xor
inc
dec
xchg
mov
fists
dec
push
add
aaa
xor
cmc
inc
dec
mov
xor
pusha
movsl
pop
lret
xor
xor
rcll
sub
int3
sbb
jbe
hlt
xchg
jo
jge
ret
cmp
xchg
mov
cwtl
xchg
out
ljmp
mov
fcoms
gs
hlt
mov
fdivs
or
xor
add
add
xchg
repnz
les
inc
cmp
jne
pop
xor
out
push
or
lock
jmp
sub
fidivrs
jecxz
icebp
cs
jae
push
gs
int
movsl
lods
and
mov
jnp
push
into
push
mov
out
mov
fists
sbb
in
std
scas
jne
das
in
fs
fs
lods
jle,pn
test
je
push
xor
sub
xchg
push
xchg
scas
inc
leave
push
dec
gs
mov
jae
loop
shrl
mov
xchg
hlt
fbld
push
cmp
xor
inc
popa
jo
xchg
and
cmpsb
leave
stos
push
or
jbe
sub
shlb
sub
faddl
xor
inc
xchg
frstor
inc
ds
lahf
int
pop
pop
jmp
and
icebp
or
jge
shlb
pop
js
mov
inc
jp
jno
mov
xchg
call
xchg
mov
xor
fildll
rorl
jns
mov
cltd
mov
xchg
push
sbb
inc
daa
and
lock
stos
fsubl
paddsw
das
loopne
ret
bound
dec
xchg
cmp
and
push
adc
je
in
int3
sbb
inc
lea
dec
data16
stc
lea
fdiv
je
jmp
imul
mov
jb
int3
and
add
cmc
push
les
fnstenv
adc
cmp
pusha
xchg
mov
into
inc
cltd
sub
and
repz
push
rorl
dec
jns
fbld
out
or
das
or
repnz
cmp
shll
and
mov
pop
sub
xchg
push
ret
sar
inc
popf
mov
lahf
std
lods
adc
andl
sub
push
call
mov
sbb
fimuls
mov
sbbb
call
fcmovnu
or
sub
pop
inc
stos
jl
loopne
in
addr16
add
xor
fs
xchg
add
cmp
inc
scas
out
idivl
mov
mov
outsl
jns
add
enter
mov
fcomps
js
clc
pop
test
push
push
insb
cmpsb
or
adc
lock
movsb
in
cmp
mov
out
pop
mov
inc
pop
loope
add
inc
loop
add
int3
jle
mov
jb
mov
mov
xchg
cmp
cmp
mov
sbb
mov
xor
icebp
cmp
pop
fsubrs
subb
adcl
mov
add
xchg
cmp
dec
pop
pop
adc
inc
xchg
xor
daa
repnz
dec
leave
insl
arpl
sbb
mov
sti
and
sbb
lret
nop
test
daa
jnp
mov
jbe
repz
or
les
and
mov
hlt
xor
popf
push
dec
pop
add
sbb
push
sarb
xlat
pop
mov
lock
flds
dec
add
stc
rcrb
int3
dec
mov
jne
popf
test
xchg
mov
gs
inc
scas
jo
ljmp
stc
mov
outsl
sbb
fcoml
test
insl
stc
idivb
push
movsb
ficompl
xlat
sbb
push
loope
cli
add
dec
int
push
xchg
jge
aas
push
out
mov
push
adc
ljmp
adc
mov
mov
loopne
lock
loopw
aam
dec
test
mov
xchg
mov
out
lret
sbb
lea
mov
bound
mov
lds
andl
inc
xchg
adc
sbb
adc
pop
mov
sbb
xchg
int
in
cmp
loopne
cld
add
popa
mov
sbb
ss
fnstcw
imull
incb
int3
add
rol
es
ficompl
sbb
mov
das
jae
mov
sar
in
sti
mov
cltd
push
xchg
mov
test
push
gs
pop
pusha
sub
dec
out
jns
aaa
stc
ljmp
fidivl
repz
lahf
xchg
cmp
sub
pop
and
mov
sub
daa
xchg
dec
sbb
stc
mov
mov
lods
jmp
paddusw
push
sbb
pop
sti
outsl
stc
sbb
adc
cltd
sbb
mov
data16
rorb
daa
lds
lds
add
insl
pusha
insb
fstps
sahf
bound
dec
mov
xor
je
sbb
and
ja
pop
pop
or
addr16
mov
subb
test
adc
xchg
mov
sub
add
pop
test
or
pop
jecxz
adc
mov
sub
rclb
sbb
jbe
lcall
sbb
mov
xchg
dec
aas
cltd
mov
subb
aad
out
add
xchg
lahf
rcr
cmp
aad
sub
inc
ret
scas
inc
repz
test
divl
jo
lods
cmpsb
imul
pop
jno
notl
jo
lds
lea
stos
cltd
inc
in
mov
movsl
mov
imul
push
clc
subl
mov
mov
mov
icebp
in
orb
in
jo
std
ss
test
push
cmpb
hlt
adc
mov
cmpsl
es
loopne
lock
fdivr
sub
adc
dec
mov
cmp
test
dec
es
jp
aad
lcall
aaa
and
cld
outsl
dec
or
push
jne,pn
movsb
add
add
mov
dec
adc
xor
cmp
fstl
or
push
cwtl
arpl
orl
out
cld
insl
dec
popa
cs
cmpsl
mov
je
outsl
leave
xchg
shrb
add
int
sbb
shlb
inc
test
out
xchg
insb
imul
xchg
mov
and
ret
test
dec
mov
fsubs
xor
mov
push
fxch
sti
das
mov
or
xor
pop
in
pop
js
pushf
mov
cmpl
pusha
test
adc
pop
pop
pop
fnstsw
sbb
fdivrl
jle
fcoms
lcall
jo
cmp
das
or
test
pop
vmload
es
cli
mov
cmp
cmp
sbb
or
out
scas
cmp
mov
test
daa
gs
push
fs
stos
dec
out
adcl
js
push
xor
xor
cltd
lahf
mov
call
mul
test
pop
cmp
fisubl
lcall
lcall
jo
repz
xchg
pop
rclb
xchg
es
out
mov
xor
loop
jne
jne
jmp
daa
xchg
adc
pop
mov
xchg
mov
shl
fcoms
imul
sti
cmp
call
adc
gs
arpl
inc
mov
adc
ss
pop
sbb
fistps
hlt
shlb
mov
bound
clc
mov
fs
lret
clc
test
sub
and
mov
ja
jo
insl
ljmp
hlt
icebp
or
xchg
xor
stos
scas
jne
jge
bound
jge
enter
je
inc
xchg
ljmp
jecxz,pn
pop
ja
mov
xchg
add
dec
out
sbbb
mov
fwait
cmp
inc
testl
xchg
push
fdivp
sub
test
test
or
sub
fisubl
xchg
cmp
mov
mov
fiadds
js
cld
int3
sub
fdivr
movl
push
addr16
push
scas
add
push
inc
stc
mov
and
sahf
scas
stos
test
and
or
scas
mov
lcall
mov
repnz
jle
enter
iret
adc
and
xor
leave
sahf
test
insb
sbb
es
inc
jle
das
push
xchg
dec
push
fwait
mov
fwait
and
dec
jne
mov
imul
mov
xchg
pop
orl
push
mov
out
lock
stos
lock
addl
ds
add
scas
roll
add
dec
into
cmc
cltd
ja
and
arpl
sub
std
sbb
lock
repz
stc
shl
push
xor
enter
outsl
cwtl
incb
dec
test
or
arpl
daa
mov
mov
repz
out
add
std
sbb
push
push
mov
inc
pop
sbb
mov
xchg
and
cmpsb
packsswb
sub
movsb
or
addr16
sbb
xchg
mov
inc
sbb
outsb
das
ficompl
addb
fcom
cwtl
bound
fsubr
rol
ja
jno
lods
xor
push
stos
pop
cwtl
pop
fs
in
lods
negl
push
test
dec
cmpsb
pop
jns
lcall
xchg
andl
rcrl
lret
repz
popf
negl
jmp
mov
mov
dec
xchg
lods
cmp
jb
pop
pop
xor
xchg
mov
outsl
xor
call
mov
jmp
lret
jg
aas
jne
test
inc
dec
jg
dec
lahf
lret
je
cmp
dec
das
inc
stos
sub
sbb
jg
movsb
test
notb
jmp
cli
cwtl
sub
scas
bound
mov
scas
popa
sbb
test
push
dec
insl
out
test
jo,pt
lahf
ficomps
push
insl
push
push
jo
daa
sbbl
xor
shr
jno
inc
inc
movsb
push
adc
sub
and
sbb
addb
jns
sahf
pop
insl
scas
pusha
out
push
cmpsb
mov
fwait
push
movsl
call
cmp
es
mov
hlt
jge
sub
dec
xor
cmpsb
mov
xor
sarb
nop
push
test
stc
insl
add
push
sti
xorl
xchg
and
cmp
mov
scas
cmp
mov
test
lods
xlat
shlb
pusha
pop
add
in
add
sbb
add
insb
ficoms
mov
and
and
rcr
lret
aam
or
xorb
xor
inc
sub
adc
aas
dec
sub
ret
cmp
sbb
cmpsl
mov
or
cs
mov
push
inc
stos
jg
inc
gs
push
cmp
mov
stos
adc
cmp
movsb
in
pushf
sbb
insl
adc
push
dec
cmp
jecxz
fs
fdivrp
pop
lods
mov
push
fwait
aaa
js
mov
mov
std
inc
sub
sbb
adc
je
fsubrs
cwtl
or
pop
fiaddl
xor
les
or
inc
adc
xor
cmp
jle
out
xchg
xchg
pop
movsl
push
std
test
lea
cmp
ffreep
loop
out
xchg
loope
addl
iret
xchg
lret
xchg
call
jns
mov
outsb
dec
adc
adc
call
push
imul
push
fs
xor
lods
cmc
popa
dec
lret
or
mov
or
out
adc
jle
or
jecxz
sahf
and
pop
jl
mov
into
sbb
inc
mov
arpl
add
mov
push
js
pop
fadds
shrl
xchg
adc
add
inc
nop
pusha
pop
cltd
sub
je
and
popf
lcall
mov
push
mov
xchg
notl
xchg
shlb
xor
push
add
push
pop
das
aam
mov
and
repz
subl
fisubrl
pop
cmp
das
subb
mov
loope
out
rorb
scas
andl
clc
pushf
les
mov
xchg
out
mov
dec
sbb
popl
clc
mov
sub
es
sbb
mov
imul
int3
mov
call
mov
mov
pop
dec
daa
push
push
inc
lahf
outsb
fisttps
int
xor
loop
or
rol
cltd
cmp
jmp
jle
stos
ds
sbb
xchg
or
add
and
bound
hlt
shlb
pop
jo
test
sbb
jae
cld
xorl
leave
inc
xor
xchg
and
pop
aas
ret
addl
out
scas
hlt
imul
inc
lcall
adc
push
rcll
lret
and
xor
rcrb
jge
dec
fwait
inc
out
push
jbe
jo
addl
pusha
test
jp
mov
adc
jae
cmp
dec
mov
aam
inc
stos
popa
fwait
add
cmp
add
or
adc
push
adc
mov
lods
jle
fdivl
mov
add
aaa
ret
xor
in
shll
xchg
sbb
or
xchg
and
test
add
adcl
mov
fnstcw
insb
inc
outsb
mov
sti
or
sti
arpl
std
pop
rcrl
push
aam
int
cmpsl
fcomip
mov
test
mov
cli
pop
mov
fdivrp
push
sbb
dec
fs
in
sbb
mov
push
call
jl
mov
fs
test
xchg
and
arpl
outsb
mov
and
std
pop
xchg
rcll
das
and
inc
ja
push
xor
jnp
adc
cmc
push
dec
jo
mov
fwait
cmp
in
popf
sbb
popa
rclb
lret
mov
xchg
pop
mov
xchg
gs
xor
push
js
push
push
lea
movsb
fiaddl
dec
adc
mov
pop
arpl
push
das
push
insb
jecxz
inc
in
insl
out
cmc
cmp
add
jle
imulb
mov
or
pop
out
cmpsl
jb
push
add
loop
mov
jbe
fsubrl
sub
icebp
testl
loopne
fincstp
jmp
push
imul
pushf
jl
loope
out
mov
cmp
nop
ffree
in
outsl
mov
sub
imul
push
cs
add
imull
jbe
cmp
fcomps
xchg
iret
sbb
roll
xchg
fcompl
jns
cmc
std
push
add
push
mov
gs
xchg
sti
call
xlat
ret
mov
addr16
pop
jnp
mov
cwtl
movsl
inc
jae
xor
insb
cmc
rol
adcb
lock
clc
mov
mov
cltd
xchg
das
les
out
nop
fwait
mov
xor
mov
mov
popf
mov
sub
test
mov
sarl
push
add
outsl
jle
lahf
mov
into
jge
ss
dec
addr16
push
mov
in
lret
cld
jns
cmp
subb
add
arpl
cmp
sub
dec
movsl
stos
out
mov
in
subb
jl
sbb
sub
out
pop
sub
mov
test
add
jbe
out
call
test
pop
outsb
pop
adc
mov
xchg
add
mov
int
sbb
dec
daa
ja
mov
cmp
sub
inc
or
xchg
xor
pminsw
jg
inc
sbb
inc
push
xchg
std
test
pop
and
dec
sbb
sbb
xor
ljmp
jp
and
xor
mov
inc
mov
sti
js
stc
std
dec
push
push
mov
imul
jno
cmc
mov
add
and
addr16
and
sub
xor
mov
dec
push
lret
jmp
push
test
call
cmpsb
inc
aaa
xor
stc
push
ja
in
cwtl
ret
and
push
pop
mov
xor
inc
mov
pop
mov
out
add
inc
mov
sub
sbb
cltd
jp
add
jnp,pt
shlb
mov
jge
inc
clc
ss
adc
fmull
push
call
inc
adc
add
sbb
out
inc
in
cltd
xchg
push
cmpsl
push
nop
and
cmp
xor
add
push
ljmp
pop
out
test
lret
sbb
jno
jnp
xchg
sub
addr16
stos
call
mov
push
loopne
push
push
out
mov
rcrl
stos
ljmp
xor
addr16
es
shrl
mov
insb
jns
pop
jmp
fwait
push
jge
jns
les
insb
push
mov
xchg
mov
into
and
inc
loopne
push
ds
cs
addb
pushf
mov
scas
mov
popa
dec
mov
xchg
bound
sahf
jb
and
add
sub
jl
ljmp
fsubrs
lahf
out
fisttpl
push
add
or
adc
adc
dec
dec
xchg
aad
stos
dec
cmp
movsl
out
jecxz
pop
sbb
push
das
stc
pop
jge
ljmp
popa
sbb
rcrl
int
or
push
dec
mov
out
loope
pop
fldenv
sbb
pop
scas
sahf
inc
sub
add
test
sbb
out
adc
filds
stos
jo
dec
je
sub
inc
addl
mov
mov
sbb
ret
pop
xor
test
xor
mov
and
cmp
xchg
negb
jo
xor
inc
mov
dec
icebp
mov
mov
xchg
and
mov
aad
sahf
dec
mov
inc
push
in
inc
jo
in
aad
movsl
mov
imul
daa
test
popf
pop
cmp
and
test
adc
jle
subb
imul
mov
fimuls
push
stos
mov
outsb
dec
out
xchg
mov
jp
mov
push
adc
add
js
rolb
push
pushf
hlt
ret
into
in
xor
adc
cmp
inc
enter
pop
orl
ljmp
sub
adc
das
push
push
mov
push
repnz
loopne
mov
jo
incb
add
outsl
xchg
xor
mov
test
jecxz
repz
sahf
adc
repz
fwait
mov
lods
sbb
hlt
stos
sahf
or
cmp
arpl
pop
mov
push
out
cmpsb
pop
mov
adc
shll
imul
push
mov
mov
xor
loop
adc
lret
push
sub
js
jge
jecxz
inc
dec
jecxz
lods
fildl
hlt
push
xor
repz
sbb
loope
scas
into
push
mov
ss
shll
imul
inc
loop
cmpl
mov
or
jecxz
push
lret
push
data16
out
fdivrs
jg
inc
or
lods
fwait
es
hlt
sub
sti
and
sbbl
faddl
movsl
push
outsl
xchg
mov
xchg
sub
shll
pop
jnp
mov
loope
inc
dec
push
push
cmpsl
or
xchg
hlt
ret
push
adc
cmp
xor
enter
pop
add
imul
jg
fidivrs
push
es
and
dec
mov
push
cmpsl
stc
shl
and
jo
and
add
push
inc
pop
mov
sub
loop
push
fcmovb
lret
dec
adc
aaa
inc
jl
stos
rolb
sbb
sbb
sbb
cmp
mov
cmpsl
push
out
dec
lock
adc
shll
shlb
push
arpl
je
cltd
sti
pop
int3
das
int3
xchg
cmp
mov
mulb
mov
mov
std
sbb
sub
mov
scas
fcomp
movsb
xor
pusha
negl
add
adc
pop
mov
dec
movsb
lahf
xor
xor
mov
xor
lret
sbb
jecxz
popa
jns
sahf
dec
or
and
cltd
mov
cmp
push
pop
in
lds
dec
loopne
std
rcrl
add
ss
movsl
add
xchg
imul
mov
into
lods
cmp
fimuls
xchg
or
cmpsb
cmp
cld
sbb
ret
pop
not
xchg
mov
adc
push
jg
xchg
mov
mov
hlt
lcall
leave
adc
xchg
pop
aas
insl
sbb
sub
aas
or
cmpb
data16
iret
pop
push
nop
dec
test
hlt
push
sbb
push
cli
repnz
fbld
dec
add
lret
in
inc
rcrb
push
mov
lods
adc
aas
divl
imul
dec
std
cltd
mov
sub
fwait
gs
cli
sub
mov
lahf
not
sub
pop
lret
dec
adc
lahf
cwtl
inc
iret
test
xor
xchg
mov
mov
and
aam
arpl
shll
mov
in
add
stc
dec
xchg
call
ljmp
mov
jae
mov
loopne
mov
cmp
pusha
aas
jp
test
mov
or
xlat
je
push
idiv
imul
out
std
or
lret
xor
or
pop
scas
outsl
sbb
andb
shrb
jne
loop
xchg
or
push
dec
xor
add
cmpsl
lock
dec
jecxz
inc
in
add
cli
lret
add
or
pop
mov
adc
push
sarl
and
cmp
cmp
lods
int3
or
sub
fwait
and
xchg
and
lret
pop
test
xchg
adc
or
pop
roll
test
out
mov
xor
mov
jno
jmp
pushl
dec
fnstenv
test
sbb
fistpl
loopne
enter
repz
cs
loope
mov
add
rclb
and
cmp
cmpsb
adc
xchg
push
idivb
push
inc
sub
mov
xor
test
incl
xorb
jge
inc
insb
repnz
pop
mov
loopne
jo
es
cltd
jle
adc
jne
ja
push
stos
adc
mov
push
rcl
cltd
mov
mov
dec
sbb
outsl
pop
lret
mov
das
mov
les
and
inc
hlt
jle
stos
mov
inc
mov
cmpsl
mov
push
je
adc
shll
mov
sbb
cmp
xchg
mov
mov
test
outsl
or
stos
insl
outsb
nop
lret
je
xchg
push
in
pop
repnz
fisttpl
mov
lds
movsb
push
push
iret
loopne
adc
outsb
jb
push
adc
and
cs
les
jne
push
and
jno
jae
data16
dec
or
mov
mov
mov
out
ret
cmc
test
and
test
aam
sbb
or
into
js
repz
jnp
fmull
mov
push
cli
pop
mov
mov
mov
xchg
sub
out
cltd
inc
and
xchg
and
inc
in
jecxz
xlat
mov
jp
mov
xchg
mov
cmc
stc
push
imul
inc
mov
adc
pop
jp
into
cli
call
out
fmuls
dec
int3
lods
insb
enter
cmp
out
and
and
and
popa
inc
inc
jne
pop
mov
mov
call
xor
fnstenv
add
fimuls
and
push
xchg
mov
into
add
aad
outsb
xchg
jb
mov
sub
das
je
add
jne
inc
rep
pop
jnp
jg
push
inc
and
dec
cmp
xorl
and
sbbb
push
inc
das
xlat
xor
or
pop
jnp
shrl
mov
cmp
inc
stos
mov
cmp
mov
and
jle
int
and
jo
repz
dec
push
ret
stos
inc
ret
hlt
and
loope
loopne
sub
jae
js
xchg
mov
dec
loop
out
jmp
pop
push
add
std
subb
mov
xchg
inc
mov
ds
lahf
xchg
sbb
ljmp
adc
xor
dec
scas
in
mov
stos
sbb
sbb
sub
pop
out
sbb
xor
sbb
push
lods
jge
fnstsw
cmpb
and
push
mov
sti
jp
cwtl
arpl
out
int3
test
inc
pop
les
leave
sbb
cltd
hlt
inc
dec
lock
sbb
pop
sbbl
or
pop
push
enter
pop
subl
jge
adc
pushf
jg
cmpsl
push
ds
push
mov
and
adc
inc
pop
xchg
cmp
jmp
sub
xor
add
lret
ret
push
adc
shl
popf
mov
fdivrl
int
adc
jno
repz
fcoml
xorb
add
adc
pop
int
pop
stc
mov
cltd
je
push
imul
adc
pop
xchg
ret
mov
inc
sub
test
data16
push
lcall
pop
mov
mov
adc
mov
das
xchg
ret
xlat
fwait
push
xchg
adc
sarb
test
sbb
xor
popf
clc
insb
roll
daa
pop
mov
xchg
loope
insb
arpl
iret
call
not
xor
add
inc
test
xchg
xor
bound
in
aas
outsl
popf
mov
jbe
cwtl
pusha
setnp
int3
lcall
or
jo
or
adcl
jne
or
ret
sbb
adc
xchg
fmulp
sahf
lods
xchg
push
mov
pop
mov
test
imul
cmpb
pop
xchg
push
lods
push
mov
jmp
xchg
jns
roll
clc
orl
sbb
pushf
push
pop
inc
or
or
xchg
add
push
add
subl
mov
loopne
mov
js
xor
fldenv
outsl
mov
cmp
cmp
add
or
dec
movsb
xchg
imul
mov
paddw
std
addb
jbe
sbb
xchg
mov
xchg
pop
ret
adc
std
inc
add
cld
outsl
jnp
data16
mov
xor
xchg
mov
and
mov
xor
mov
pop
adc
outsl
in
pushf
lcall
push
jb
dec
subb
scas
jne
rcl
xchg
jmp
shll
scas
js
mov
mov
in
mov
icebp
rcl
outsl
loope
sbb
xor
inc
dec
inc
and
mov
imul
pop
lret
adc
xchg
fiaddl
push
jno
dec
sub
lahf
dec
mov
push
cmp
adc
xchg
inc
fisubs
ds
push
adc
imull
xlat
ret
ljmp
cmpsl
fsubrl
mov
test
in
cltd
les
xchg
xchg
jo
test
cmp
sub
and
jae
popa
jmp
ret
mov
les
movsl
mov
pop
stc
push
out
std
inc
and
sub
mov
xchg
adcb
push
mov
xchg
and
rcrl
dec
sti
or
jmp
or
roll
xor
outsb
sbb
rol
ds
mov
fisttpll
push
dec
dec
inc
pop
mov
inc
aas
xchg
xor
es
xchg
scas
dec
sbb
js
int
add
int3
cmc
jmp
lcall
mov
jno
outsb
adc
rcrb
outsl
lret
cltd
shlb
adc
or
popf
adc
sbb
pop
push
adc
aaa
enter
aas
cld
lcall
cmp
mov
xchg
fidivrs
inc
test
rcll
jmp
hlt
ret
mov
push
das
xchg
js
in
mov
sbb
sub
xchg
cmp
cs
mov
bound
xlat
xor
or
stc
or
sbb
imull
mov
cmp
inc
mov
push
out
addl
orl
xor
inc
pop
ret
xorl
xchg
je
adc
pop
xor
and
inc
adc
lea
pop
dec
jb
sbb
inc
jmp
push
not
std
add
pusha
sbb
mov
scas
flds
mov
cmc
mov
pusha
sub
lock
addl
scas
movsl
data16
xchg
xor
cld
cld
adc
add
mov
test
sbbb
ret
push
cmp
cmp
lea
dec
outsl
cmc
mov
xchg
repnz
and
ss
mov
inc
pop
leave
inc
rcl
lods
gs
hlt
dec
jecxz
xchg
add
cmpsb
or
pop
enter
pop
xor
sarb
cmp
pusha
pushf
dec
lock
das
lds
mov
push
iret
loopne
mov
sbb
jns
inc
xchg
negb
xchg
mov
and
inc
loope
fcmovbe
jo
or
or
lcall
in
in
sbb
jmp
mov
fnstsw
int
arpl
adc
dec
out
dec
lea
adc
fmul
mov
push
jae
ret
les
push
cmp
scas
in
pop
xchg
je
add
pop
mov
push
es
jo
in
pop
dec
dec
inc
sbb
aas
jmp
std
insl
repz
xchg
out
dec
scas
sbbb
shl
push
int3
pusha
cmp
rcrl
dec
inc
adc
test
icebp
in
and
cmpsb
or
add
jge
dec
enter
mov
inc
jo
mov
lods
nop
outsl
fsubl
push
outsl
mov
mov
xchg
sbb
enter
xor
pop
sub
stos
gs
xchg
hlt
daa
jo
xchg
mov
jno
add
mov
dec
data16
and
lock
pushf
loopne
lret
adc
xchg
mov
mov
enter
mov
lret
mov
rclb
scas
dec
inc
loope
mov
dec
adc
mov
pavgb
cwtl
std
cmc
stos
inc
scas
inc
pop
adc
jge
mov
sub
xchg
dec
inc
push
pushf
or
adc
mov
adc
xchg
jbe
stos
sti
cmpsl
push
xorb
pcmpeqd
repnz
pop
mov
jge
lret
daa
mov
imul
or
in
sbb
aam
pop
pop
mov
add
shlb
pop
sbb
in
lds
dec
fcmovb
mov
xlat
sbb
jl
xchg
mov
pop
and
ja
leave
push
xchg
dec
repz
movsb
or
jae
inc
sub
fbld
pop
xchg
xor
push
dec
jecxz
mov
test
ficoms
mov
test
jns
subb
mov
sbb
loopne
orl
dec
cld
jb
sbb
jne
mov
shll
les
sub
sub
ja
add
push
jae
clc
adc
mov
hlt
out
icebp
movsl
xchg
mov
sub
add
or
push
jp
leave
ds
push
dec
mov
xchg
lcall
mov
dec
jg
clc
insl
scas
fidivrl
sub
incl
mov
adc
cmp
mov
xrelease
dec
mov
fcomip
mov
fldt
mov
or
mov
mov
rcr
out
inc
clc
aas
push
and
xchg
sbb
call
dec
mov
fidivs
fisubl
sbb
xor
fs
push
js
fsubrp
sbb
ret
mov
pop
es
mov
jne
mov
data16
loopne
xor
lcall
cmp
jge
lret
jp
mov
sbb
push
int
enter
hlt
sub
dec
fs
push
mov
xlat
fisttps
cmc
js
lcall
lcall
cmpsl
fcomps
sarb
or
lock
push
pop
lods
pop
mov
les
clc
in
inc
pop
sbb
ljmp
scas
fidivs
ret
test
inc
sbb
add
xor
lcall
pop
xor
lea
rcrb
cld
fists
xor
test
push
fnstenv
cwtl
insb
inc
push
in
loop
xchg
jns
pop
pop
mov
sbb
enter
sahf
sbb
stos
dec
outsb
pop
testb
pop
out
call
push
cmc
stos
mov
mov
in
sub
shll
pop
inc
sub
add
pushf
and
adc
mov
dec
dec
mov
jg
aam
xchg
push
fs
stos
inc
enter
das
icebp
inc
adc
cmp
int3
data16
loop
test
cmpsb
xlat
pop
xchg
daa
sbb
dec
aaa
mov
jp
inc
iret
mov
jae
mov
mov
sbb
sahf
into
decl
pop
add
out
loope
and
mov
jno
jmp
push
adc
int3
popa
mov
call
cmp
mov
arpl
mov
or
ret
or
pusha
jg
inc
cmp
enter
dec
push
add
mov
pop
cmpsl
jg
sbb
mov
inc
hlt
adc
mov
push
push
out
sub
mov
sub
jns
or
fildl
xor
and
adc
mov
lret
sbb
pop
mov
sub
dec
lock
data16
roll
gs
mov
cmp
xchg
adc
xor
adc
arpl
cmpsb
jbe
ss
call
mov
outsl
add
cs
das
lcall
dec
sub
orb
cmpsl
sbbb
ret
shrb
inc
data16
cmp
lock
scas
fildll
xchg
test
inc
and
mov
push
mov
cmp
fsubrp
inc
ja
fs
pushf
aam
pusha
rorb
mov
shrd
daa
mov
pop
imul
add
pop
jl
inc
mov
dec
xchg
xor
mov
jae
inc
sub
dec
in
xchg
sahf
decl
inc
gs
lret
cmc
int
addl
dec
xor
mov
clc
in
push
jbe
popa
popa
sahf
fcmovb
addl
sub
xchg
jns
and
mov
pop
inc
pop
aam
subl
sarb
or
push
out
ror
incb
mov
mov
pop
adc
or
inc
adc
jp
push
xchg
pop
js
shr
mov
jecxz
sbb
adc
pop
movsl
mov
movsb
jmp
cmp
out
aas
fcompl
cmp
inc
mov
xchg
push
or
xchg
clc
lret
imul
sbb
jne
mov
mov
mov
mov
xor
out
aaa
aam
xor
je
inc
sarl
repnz
out
rolb
lcall
or
nop
shr
xorb
push
mov
arpl
jnp
dec
mov
dec
and
pop
sbb
jne
gs
xchg
test
xchg
mov
inc
daa
mov
cmp
jnp
fwait
add
jp
sub
jmp
mov
mov
sub
add
jo
fwait
test
idiv
rolb
mov
pop
mov
jno
mov
xchg
lods
outsl
in
or
and
sub
push
stc
lods
outsl
pushf
outsl
int
lea
xor
xor
mov
mov
ljmp
pushf
iret
or
pop
pop
xor
orb
push
xchg
rcrl
xchg
or
mov
mov
sbbb
push
dec
mov
sub
xor
je
cmp
mov
add
pushl
call
rolb
mov
orb
pop
cwtl
std
dec
inc
jns
xchg
mov
lahf
inc
shl
or
xchg
cmp
pop
pop
sbb
add
inc
push
push
push
fdivl
fcmove
pop
and
test
mov
mov
pushf
mov
and
hlt
sbbb
mov
js
inc
cmp
lcall
imul
fisubl
jecxz
imul
or
dec
jo
push
push
in
loopne
xor
jo
test
sbbb
xchg
icebp
nop
mov
nop
jecxz
inc
rclb
das
xor
inc
stc
shrb
mov
out
sbb
shrb
adc
pop
xor
fs
jg
mov
adc
cmp
xor
mov
sar
in
icebp
mov
pop
rol
adc
jno
inc
mov
adc
mov
aas
nop
lret
or
lea
dec
sbb
lock
out
dec
mov
rcll
sbb
lock
lea
addl
mov
jo
clc
jg
adc
les
out
repnz
jns
jb
or
test
sbb
dec
andb
loop
outsl
rcll
leave
xlat
xchg
or
and
outsl
pop
mov
in
inc
jno
jo
addb
hlt
aas
sub
xchg
iret
adc
xorl
cmp
and
ljmp
xor
pushf
jg
data16
shrl
mov
push
jo
out
loopne
arpl
jo
in
pop
add
jo
xor
mov
popf
cli
inc
xor
sub
fldl
xor
mov
sub
sbb
sbb
sbb
rolb
xor
pop
jno
out
subb
adc
out
mov
sbb
jo
orb
in
cwtl
mov
pop
xchg
loope
xchg
rcrb
xor
inc
mov
rcrl
fildl
hlt
les
jno
cli
jg
xor
sbb
stos
scas
xor
mov
rorl
mull
pop
add
lock
pop
addl
mov
xor
stc
movl
pop
dec
jns
cmc
push
or
icebp
ret
outsb
sbb
cmpl
mov
xchg
jg
pop
out
jmp
or
sub
gs
movsl
hlt
add
adc
xorb
cmpsb
shrd
push
pushf
enter
pop
out
fadd
ljmp
xor
fstpl
sbb
push
ss
out
loopne
mov
pop
add
fbstp
outsl
pusha
lea
adc
xchg
popf
shll
cmpl
mov
sub
stos
jg
bound
nop
and
dec
pop
xor
mov
adc
pop
out
mov
andb
popf
push
notb
or
je
add
pop
push
mov
and
xlat
in
sahf
jg
mov
fstpt
adc
cli
subb
rclb
dec
sbb
xchg
popa
scas
outsl
sub
push
rcll
push
lock
cmpl
sti
daa
fimull
icebp
sub
sub
sbb
out
dec
jp
xor
xchg
or
ret
ret
sub
fistps
mov
push
jmp
fmull
xchg
popa
outsl
loope
mov
cli
rolb
xchg
inc
subb
xchg
mov
mov
lods
movsl
hlt
mov
jge
pop
orl
enter
pop
jg
shr
lcall
jp
mov
or
jg
imul
sub
push
lock
out
loopne
in
jo
push
pop
add
into
je
xor
movsl
mov
inc
inc
add
xlat
jo
and
das
jnp
jae
stos
sbb
jae
cmp
jg
dec
pop
out
xor
out
orb
adc
mov
mov
inc
jg
xchg
sbb
cmp
rorl
jmp
push
pop
dec
sbb
xchg
inc
pop
test
out
cmc
clc
sbb
and
mov
sbb
push
push
xchg
testl
mov
aam
xchg
mov
clc
sbb
adc
dec
inc
xchg
dec
dec
add
pop
addl
cmp
pop
jl
sbb
xchg
test
dec
out
mov
jg
push
insb
iret
orl
mov
push
mov
cmpsb
in
stc
inc
rcrl
xor
xchg
pop
mov
dec
xchg
out
lods
dec
and
aad
nop
call
sbb
push
daa
repnz
pop
inc
test
fsubrs
xchg
inc
fwait
lret
mov
mov
popa
out
repz
and
lahf
data16
lret
call
in
sbb
call
sub
adc
jmp
cli
in
out
jecxz
clc
fwait
jae
imul
ss
lahf
mov
aam
push
iret
ljmp
xchg
push
mov
decl
cwtl
inc
and
dec
dec
ret
push
ljmp
je
subb
aaa
sbb
sub
test
pop
ja
sbb
mov
mov
enter
dec
adc
popa
clc
inc
jg
aaa
jne
inc
sbb
xor
fidivl
adc
sbb
sti
call
jle
int3
icebp
mov
leave
mov
fistpl
adc
popa
dec
cmc
xlat
rep
sub
in
xchg
inc
je
aaa
or
test
mov
lahf
mov
ds
push
push
mov
mov
dec
pop
sbb
popa
inc
adc
shll
ror
call
dec
repz
sbb
and
test
adc
insb
dec
aas
test
pop
lcall
or
adc
push
xchg
data16
bound
push
pushf
pop
mov
out
xchg
and
push
inc
sbb
imul
mov
aad
add
lret
sbbl
adc
jns
pop
push
adc
dec
pop
enter
dec
out
adc
rclb
cmp
mov
daa
negl
or
jb
pop
std
clc
pushf
lds
loopne
aaa
sub
stos
sbb
mov
iret
xor
mov
adc
add
mov
stos
out
stc
clc
sbb
add
out
call
push
mov
pop
dec
scas
scas
or
or
dec
adc
sub
jne
icebp
mov
sbb
lret
adc
lods
add
cmpsl
aad
mov
pop
jle
aad
aaa
idivb
cmp
sub
sti
leave
outsb
js
nop
outsl
in
inc
fld
mov
js
mov
and
aam
xchg
ljmp
pop
dec
scas
aaa
int3
out
imul
dec
jns
mov
repz
push
je
inc
lret
in
sub
xor
or
cmc
out
dec
lds
xor
in
stos
push
add
jo
dec
mov
push
sub
xlat
mov
lods
cld
inc
inc
out
add
cld
sub
stc
push
pop
adc
repz
stos
dec
fstl
cmp
inc
pop
xor
out
out
out
mov
pop
adc
out
mov
push
ljmp
jg
in
jbe
je
push
push
cmpsl
fcom
jbe
aaa
sbb
je
fidivrs
popf
dec
je
mov
jo
add
cmp
ror
fisttpll
xor
rcll
dec
loopne
loop
lock
ds
cmpl
adc
rorl
lock
int3
fiaddl
aas
out
and
cmp
mov
sub
inc
adc
cmp
inc
fcompl
imul
mov
dec
repz
pop
cmpsb
xor
inc
out
sub
iret
sub
push
pop
dec
stos
sub
sub
push
aas
cmp
cmpsb
rorb
addr16
pop
add
ljmp
cmp
jg
notl
dec
mov
dec
xchg
cmp
in
loopne
adc
imull
cs
add
cld
fs
xor
sub
iret
sbb
inc
dec
xor
xlat
cs
sub
pusha
shll
out
mov
stos
cmpb
ror
cmp
in
inc
pop
pop
enter
pop
mov
popf
sarb
mov
filds
pop
ret
push
das
addr16
add
cmp
push
jns
pop
pop
and
pop
pop
sub
xor
mov
dec
sub
push
mov
cli
jg
cmp
mov
jae
inc
or
in
pusha
jmp
lock
pop
xorl
adc
mov
das
jnp
push
adc
sub
jno
lock
cltd
or
dec
mov
sub
adc
push
inc
fmul
mov
outsl
orb
jo
les
cmovae
iret
add
fldcw
dec
into
xlat
hlt
adc
adc
repz
xchg
pop
sub
aas
lods
cltd
push
das
popf
mov
ljmp
cmp
decb
xchg
das
push
das
mov
push
psllw
loopne
mov
movsb
popf
aaa
mov
mov
fs
aad
mov
cmp
xlat
das
sub
imul
push
mov
stos
jg
adc
lfs
int
sub
fisubrs
jg
mov
adc
in
mov
orb
push
mov
jno
je
out
iret
pop
sarb
cs
cmc
cltd
dec
pushf
jno
fstpt
outsl
int
scas
sbb
lea
dec
sbb
xchg
xchg
scas
out
lock
rorl
cmp
lock
orl
jns
fildll
jl
adc
enter
inc
jns
ljmp
dec
sti
nop
mov
out
mov
dec
add
fmull
bound
xchg
jle
ljmp
out
mov
rolb
pmovmskb
aas
xchg
xchg
gs
les
popf
enter
out
mov
ljmp
cmp
mov
iret
or
aam
adc
pop
rdtsc
jmp
jo
je
add
stos
pusha
xchg
cs
dec
add
inc
mov
dec
mov
fsubrs
stc
out
dec
mov
sbb
outsl
shrb
shlb
push
pop
scas
ret
jle
mov
adc
lret
das
xor
test
ficoml
push
add
in
outsb
cmp
xlat
or
pop
scas
imull
xor
mov
iret
inc
movsb
mov
push
jl
push
in
lea
dec
sbb
idivl
insb
mov
rorl
call
lock
sbb
cmpl
mov
out
inc
jle
popf
push
xchg
xchg
jmp
rol
xor
in
pop
fwait
js
insb
sub
xor
fmull
in
mov
add
push
js
xchg
popa
imul
cmpsb
into
pop
inc
mulb
sahf
rorl
cmp
scas
shrl
movups
lret
xor
mov
ljmp
and
jle
xchg
das
nop
jmp
mov
loopne
mov
jae
dec
add
cld
and
in
add
sbb
pop
xlat
sub
and
out
sahf
mov
xchg
btsl
scas
add
in
fcomip
sub
out
push
lahf
sub
xor
inc
enter
adc
push
inc
jne
dec
push
shlb
mov
lahf
adc
in
sahf
dec
or
push
lds
pop
lret
scas
daa
xchg
fisubs
stc
sbb
sbbl
aas
pop
sub
into
mov
cwtl
popa
sahf
fsubl
sbb
adc
iret
pushf
cmp
outsb
cmp
mov
paddsb
out
jle
jns
push
wbinvd
loopne
push
cwtl
dec
jg,pt
lahf
pop
xchg
push
std
neg
popl
add
dec
ficomps
and
add
mov
xchg
jle
js
or
mov
aaa
outsb
lahf
cmc
repnz
inc
test
dec
xor
pop
push
push
adc
test
adc
out
imul
jle
xor
fdiv
enter
or
mov
mov
leave
sub
push
inc
xchg
enter
mov
inc
fimull
mov
xor
insb
jg
dec
xor
out
stc
aad
pop
data16
push
pop
push
cmp
and
lods
or
std
sbb
mov
addr16
xchg
add
sbb
xor
inc
ja
cwtl
sub
push
sub
push
incb
xadd
adc
hlt
jecxz
pop
and
mov
push
xor
sub
lods
mov
pop
push
mov
xchg
scas
adc
sbb
xor
and
mov
flds
dec
xor
rorl
into
iret
sbb
pop
sub
cmp
addr16
inc
push
fcoms
lods
mov
std
arpl
testl
lock
repz
or
scas
call
pop
loopne
fsubrl
lods
pop
adc
mov
fiaddl
push
inc
and
mov
mov
loope
sbb
out
mov
call
jle
jmp
testb
pop
int3
push
xchg
mov
add
jb
dec
enter
dec
lcall
insl
mov
push
mov
dec
adc
add
cwtl
out
cmp
mov
ljmp
outsl
movsb
mov
adc
xor
scas
outsb
inc
enter
icebp
rcll
gs
mov
add
int
pop
mov
out
mov
cli
daa
in
adc
pop
add
pcmpeqd
daa
sti
enter
mov
xchg
xor
in
arpl
inc
mov
mov
loope
cmp
out
aad
fs
add
push
fsts
and
mov
or
mov
iret
js
and
es
aad
pop
push
xchg
xor
sbb
test
mov
pop
push
inc
push
addr16
add
push
sub
cltd
xlat
pop
data16
cmp
sbb
add
jl
pusha
push
mov
mov
fwait
lahf
mov
jae
xor
xchg
popf
xchg
dec
repnz
lahf
push
sub
jb
xor
lret
pop
sti
fnsave
push
cmp
sub
pop
sub
jns
add
mov
test
aaa
fistl
xchg
dec
xor
jo
add
js
lods
adc
jmp
mov
mov
mov
andb
pop
fcomip
in
mov
mov
popa
and
imul
adc
xchg
dec
push
jmp
leave
out
mov
icebp
and
mov
push
loope
inc
dec
push
in
les
pop
decl
cwtl
jle
idivl
movsb
pop
mov
push
cli
jge
jbe
xchg
les
mov
xor
lcall
push
addr16
adc
adc
add
int3
mov
jbe
or
pop
cmp
arpl
in
nop
push
cld
mov
frstor
dec
mov
dec
out
cmpsl
outsb
xchg
mov
pop
sub
sub
xor
fcoms
mov
mov
jp
popf
pop
lods
gs
push
in
mov
sub
jle
dec
cmpsb
adc
cmp
pop
dec
sub
jge
jl
fsubr
leave
mov
hlt
xor
or
test
xchg
mov
test
repz
shrl
into
dec
inc
or
sarb
scas
out
lds
mov
xlat
sub
addr16
es
xor
mov
jg
out
dec
shlb
add
dec
sahf
fsubr
pushf
xorb
and
nop
loopne
xchg
inc
sti
or
mov
shlb
mov
and
cli
push
fists
rolb
sbb
mov
inc
sahf
dec
es
fmull
pushfw
mov
mov
clc
dec
inc
cmp
xchg
js,pt
enter
dec
scas
mov
movsl
jmp
repnz
cmpsb
jmp
dec
add
mov
in
mov
xor
test
pop
bound
jnp
ret
mov
repz
push
stos
fwait
xchg
hlt
dec
cltd
or
mov
sub
add
out
inc
lea
cld
mov
jg
add
je
jle
hlt
or
and
hlt
mov
ljmp
mulps
xchg
scas
add
pop
inc
pop
lret
add
dec
aam
js
pop
andb
stos
mov
scas
inc
pop
fistl
xor
lret
xlat
testl
in
ljmp
push
cmp
lahf
mov
push
repz
cmp
mov
xor
mov
das
divl
loop
inc
sbb
adc
test
je
mov
jle
push
cmp
sub
bound
lock
mov
dec
outsb
jecxz
fs
add
imul
sti
outsb
loope
andb
xor
mov
mov
xor
cli
jge
fmulp
icebp
shll
inc
mov
cmpl
jg
xor
out
dec
daa
push
movsl
std
dec
xlat
leave
in
mov
stc
movl
adc
idivb
ret
mov
popa
imul
test
inc
pusha
adc
jb
mov
lea
arpl
shl
dec
adc
xor
test
sbb
jge
lock
add
hlt
jle
add
cmp
jno
push
addr16
stos
out
rcl
mov
jle
mov
xor
dec
popa
test
pop
fisubrl
hlt
and
xchg
movsl
mov
dec
xchg
loope
xchg
int3
mov
in
pusha
call
pushf
int3
fldl
mov
and
inc
cmpsb
add
data16
and
rcrb
pop
shlb
add
jb
test
fadds
out
adc
pop
test
mov
scas
je
xor
enter
out
rolb
jmp
hlt
pop
or
div
icebp
lods
pop
mov
sahf
dec
test
mov
jge
aaa
stos
mov
push
test
xor
sub
pop
mov
inc
push
aam
sbb
outsb
cmp
pop
sub
in
ret
in
out
adc
xchg
sbb
insb
add
sbb
sbb
lock
iret
stc
shrl
jns
fisttps
xor
out
jge
outsl
xchg
fistpll
cld
stos
pop
mov
dec
xchg
push
out
or
dec
xchg
std
jmp
enter
fsubrl
mov
and
xor
out
inc
or
iret
lds
fbld
dec
jns
mov
int
push
test
imul
mov
js
shll
into
pop
mov
mov
cmp
xor
movsl
mov
testb
xchg
pop
cmpl
mov
dec
jo
movsb
mov
cwtl
fimuls
push
pop
shll
mov
add
lcall
call
mov
mov
bound
adc
je
inc
imul
push
adc
or
jecxz
mov
les
data16
cltd
jmp
test
in
pop
daa
insl
adc
nop
scas
es
or
lds
fisubl
xchg
divps
rcr
enter
dec
add
fiadds
pop
int3
arpl
cmp
push
in
fsubs
std
xchg
jne
xchg
fnstcw
movsl
jl
inc
test
mov
sbb
add
call
push
repnz
out
or
inc
loop
or
out
mov
push
mov
jmp
mov
imul
rclb
cld
xchg
xorl
or
jecxz
or
mov
mov
cmc
xchg
xor
mov
jge
hlt
adc
jae
insl
aas
adc
pushf
pop
lcall
movsl
mov
cmp
mov
shlb
jne
mov
lds
xlat
sub
xchg
cmp
xchg
lods
ror
jns
sarb
xchg
testl
dec
data16
pop
inc
popa
inc
and
inc
sub
inc
fimuls
in
mov
pusha
repz
mov
jg
stos
add
and
gs
push
xchg
jge
lret
xchg
push
push
out
mov
lret
cmp
lock
push
pop
mov
lret
xor
into
repz
leave
pop
lds
mov
movsl
jnp
push
or
ja
push
cmpsl
jnp
jbe
imul
jle
pop
pushf
addr16
cwtl
xlat
lret
aam
push
aad
pop
lret
sub
push
test
cmp
shll
loopne
loope
push
dec
ret
dec
cmpsb
mov
push
das
popa
lock
fmull
inc
in
mov
jle
inc
std
mov
and
xchg
outsl
fimuls
dec
aad
mov
mov
xchg
fsts
js
popa
xchg
pushf
ret
nop
mov
pop
jge
mov
and
subl
repz
inc
cmp
adc
imul
stc
fwait
adc
in
cltd
pop
lods
call
lock
subl
mov
mov
lahf
push
popa
cli
adc
aad
xor
adc
out
inc
push
pop
decb
push
leave
aad
jne
mov
test
outsl
dec
pop
subb
fmul
or
lea
mov
gs
fsubs
dec
mov
gs
lock
ja
or
or
out
sub
call
test
sbb
std
aas
pop
mov
push
add
test
xchg
stc
out
dec
inc
call
fsts
ljmp
push
in
cli
into
in
jp
mov
fdiv
add
test
movl
std
addr16
cwtl
cmp
cwtl
ss
pop
pop
jo
shl
in
mov
xchg
hlt
adc
inc
adc
add
mov
mov
mov
mov
test
push
adc
js
cs
test
or
jg
sbb
cmp
and
xchg
mov
sbb
fstp
xor
hlt
sub
dec
inc
lock
xchg
jg
xlat
test
pop
push
lret
xchg
imul
push
mov
push
pop
pop
sbb
arpl
ljmp
sub
push
mov
stc
push
xchg
mov
scas
add
je
outsl
cmpsb
insl
fldcw
cwtl
pop
lret
dec
adc
movsl
jno
js
xor
pop
cli
ljmp
mov
fsubs
lods
jp
cwtl
push
xchg
test
xor
fsubl
ljmp
jp
mov
test
mov
cs
sbb
mov
insl
clc
sbb
ds
cmpsb
in
sub
fisubrl
popf
enter
pop
jge
inc
add
and
mov
and
and
aas
inc
popa
jne
fldt
mov
jae
enter
mov
fs
daa
in
adc
fadd
pop
lahf
mov
ljmp
subb
fistl
jae
ret
cmp
mov
enter
adc
sbb
xchg
pusha
aad
xor
dec
mov
push
add
pop
jp
xor
cmpsl
mov
push
in
roll
push
int
fs
dec
int
aaa
inc
out
and
push
xchg
out
cltd
gs
bnd
sub
clc
dec
fs
push
mov
add
loopne
mov
sub
into
cmp
adc
rclb
in
jno
inc
fdivrl
mov
daa
jmp
imul
scas
add
or
stos
pop
cld
loop
hlt
jns
divb
push
data16
push
les
negl
daa
leave
shrb
adc
jo
or
push
adc
iret
and
xchg
and
mov
jne
mov
mov
adc
mov
cmpsb
cmpsb
int3
lret
push
cmp
outsl
push
out
pop
or
out
cmp
mov
movsb
and
test
ficomps
inc
xchg
pop
cmpsb
lret
sub
mov
xor
push
push
ljmp
xchg
fs
dec
jo
outsl
clc
js
cmp
pop
scas
xor
sub
outsb
sub
repz
push
push
gs
ja
push
pop
and
es
ss
je
repnz
and
loop
pop
xchg
outsb
xor
aad
std
mov
xchg
add
pop
enter
js
iret
mov
or
in
sub
scas
inc
loop
pop
dec
mov
movsl
popa
dec
into
bound
aas
xor
punpcklbw
or
mov
adcb
jo
lods
pusha
push
test
pop
mov
push
mov
call
les
inc
xchg
lret
leave
or
lcall
shl
mov
pushf
scas
push
sbb
test
push
scas
cld
dec
jmp
mov
roll
repnz
xchg
sbb
xor
inc
addl
out
in
mov
movsl
dec
mov
mov
push
xor
loope
cli
scas
push
or
xor
cmp
mov
inc
dec
subb
adc
or
mov
dec
aad
mov
pop
push
or
lock
pop
or
cld
add
popa
fildll
mov
cwtl
xor
adc
imul
xor
movsb
pop
jg
stos
aam
inc
aad
mov
int3
push
xor
ret
jbe
mov
adc
fidivrs
rorl
int3
xor
lcall
icebp
in
ja
outsb
daa
lahf
dec
sub
xchg
push
andb
push
and
xor
push
mov
outsb
dec
rolb
mov
mov
dec
mov
sbb
fisubrl
mov
mov
pop
jnp
call
mov
dec
sub
sbb
testb
into
xchg
cmp
out
add
in
push
cwtl
and
xor
fs
lret
pop
pusha
aas
outsb
lea
hlt
xor
or
pop
leave
pop
jo
clc
lret
xchg
lcall
aad
imul
cwtl
sbb
dec
mov
xchg
insb
mov
mov
cmpsb
sti
fldl
bound
inc
sarb
bound
xor
add
pop
lret
pop
or
inc
mov
cmp
rorb
clc
dec
mov
mov
add
insb
sbb
inc
cltd
bound
xor
and
into
xor
pop
adc
gs
xchg
mov
mov
unpcklps
sub
push
push
push
dec
add
lods
pop
sub
adc
lods
or
rcrl
adcb
icebp
inc
cmp
sti
add
clc
ds
in
pop
iret
sarb
lahf
dec
cmc
gs
or
sbb
add
sbb
inc
add
rolb
stc
cltd
xor
sbb
cld
sbbl
popa
xor
xlat
dec
repz
xor
mov
jo
push
fistps
mov
lods
pop
inc
dec
jae
adc
push
mov
scas
add
ficoml
imul
int3
push
pop
pop
ljmp
mov
icebp
adc
inc
xor
pop
fmull
adc
push
push
jns
shlb
jmp
nop
outsb
adc
fildll
xor
mov
push
mulb
mov
out
mov
ja
sbb
adc
jo
rclb
insl
out
rcr
xchg
jnp
decl
cld
repnz
add
leave
mov
cmpb
xor
jl
pop
rorb
out
bound
fcompl
adc
and
dec
xor
inc
mov
insl
mov
or
xchg
push
ret
iret
sbb
cmp
lods
mov
jge
mov
sub
inc
mov
mov
xchg
or
out
and
mov
jbe
jl
or
out
and
xchg
cmp
jb
mov
cmp
dec
inc
pop
fs
je
add
xor
ud1
lahf
jl
js
jbe
lods
jnp
je
add
jbe
jecxz
stos
jae
cmp
dec
loop
dec
fdivrs
fidivs
cmp
in
sbb
lods
dec
push
adc
mov
sbb
les
test
inc
daa
enter
pop
pop
mov
mov
jge
cltd
mov
test
daa
out
or
rorb
scas
inc
jecxz
and
ret
loop
jge
mov
push
repz
std
inc
cmc
xchg
xchg
mov
sbb
ss
cld
push
leave
mov
data16
insl
sbb
cmp
out
aas
out
bound
push
pushf
cmpb
adc
dec
cmpsb
add
and
inc
jl
loop
lea
xchg
jp
jecxz
or
sub
lret
mov
lock
in
xchg
fcomip
adc
mov
mov
std
sub
pop
xchg
jl
out
and
jle
mov
les
dec
dec
data16
or
idivb
cmp
and
cltd
mov
pop
jmp
sbb
cmp
lret
repz
mov
lcall
jnp
jae
insb
lahf
add
jbe
sub
dec
es
ss
inc
pop
data16
int3
repz
cli
or
sbb
cld
repnz
dec
inc
mov
pop
in
aaa
gs
mov
cmp
push
or
mov
icebp
xor
lahf
rcr
cmc
aad
fcompl
xlat
mov
add
arpl
xchg
sbb
nop
pop
jl
imul
inc
fdivrs
imul
mov
mov
lea
mov
or
xchg
push
out
call
insb
sub
adc
int
cmpsb
inc
jb
fldt
repnz
jl
loopne
dec
stos
mov
jp
xchg
imul
bound
sub
mov
outsl
dec
mov
cld
gs
xchg
daa
sub
divl
lahf
inc
sub
xchg
jnp
pop
data16
imull
or
in
mov
mov
cmp
push
or
inc
cli
jl
sbb
lret
stos
fdivrl
leave
mov
or
jecxz
int3
or
cmp
push
sub
mov
jae
sbb
xchg
jge
xor
mov
popf
mov
cli
int3
subb
adc
movsb
or
sub
cmp
inc
lea
repnz
popa
pop
ds
dec
xor
out
mov
add
scas
rclb
fnstcw
inc
xor
dec
or
fsub
xchg
je
mov
icebp
xchg
mov
or
inc
fmuls
pop
fmull
dec
inc
lea
jl
lods
mov
test
out
bound
scas
orb
xchg
mov
fnstenv
aaa
insb
outsb
push
les
in
and
in
out
xchg
or
fwait
insb
or
cwtl
dec
popl
sub
lock
jl
mov
mov
bound
cmp
mov
sub
int3
push
shlb
insl
adc
sarl
mov
data16
cmp
push
test
shl
jge
mov
cmp
insb
xor
jge
add
mov
jns
in
mov
sbb
mov
cmp
int
cmp
repnz
loop
mov
cmc
or
scas
add
dec
pop
es
ss
push
or
aam
test
gs
xchg
cli
bt
adc
pushf
sub
fidivrl
int3
scas
mov
xchg
lds
mov
cmp
adc
adc
clc
mov
push
test
push
jl
pop
out
in
ja
imul
and
jnp
pop
dec
dec
nop
sub
pop
adc
jnp
mov
or
mov
mov
cmp
leave
sar
bound
repz
xor
xchg
lea
cmpsb
mov
inc
or
sahf
ss
andb
lahf
mov
and
repnz
or
sub
adc
ret
sub
mov
dec
push
pusha
insb
mov
cmp
sarb
and
mov
jb
test
xchg
mov
test
adc
push
dec
ret
in
popa
mov
sub
add
jmp
push
and
and
mov
sarl
mov
loope
xchg
xor
jle
add
lods
xchg
jno
aaa
imul
ljmp
mov
sbb
test
test
jmp
aam
adc
aam
stos
add
dec
jge
int3
and
sub
out
in
or
push
cmp
test
mov
sbb
scas
and
scas
not
inc
inc
sub
les
mov
sbb
sub
shlb
bound
shl
cmp
or
std
bound
addr16
lods
cmp
adc
out
add
ss
ss
jl
xchg
jbe
lods
out
sub
jns
out
push
or
add
mov
jo
pop
mov
mov
imul
and
and
mov
mov
xchg
mov
idivl
mov
mov
cmp
push
push
lret
imul
pop
xchg
outsb
add
loop
fcmovnbe
cmp
mov
sub
mov
or
mov
in
push
cld
loop
xchg
aam
mov
scas
add
or
jl
aaa
mov
pop
incl
cmpsb
enter
mov
pop
or
push
mov
ljmp
inc
xor
mov
jl
fwait
pop
jmp
je
jl
dec
jge
fsubs
or
aad
jnp
scas
ror
xchg
mov
xchg
aas
aaa
fnstsw
incl
or
push
mov
mov
dec
fdivrs
imul
add
mov
pop
dec
cmp
fwait
ret
imul
imul
cmpb
or
pop
cmpsb
lods
xchg
aaa
popf
xor
xor
dec
jne
in
lret
pop
push
or
sub
mov
fstpt
xor
stos
push
and
std
imul
aad
sbb
mov
push
cmp
fidivl
add
idivl
xchg
loopne
aad
popa
and
imul
mov
adc
fucomi
pop
les
int3
inc
xor
lea
jge
xor
lds
pushf
dec
shl
jns
lret
pop
pop
push
daa
fld1
or
inc
mov
push
daa
dec
inc
adcb
sub
mov
ljmp
or
pushf
push
mov
into
sub
dec
xor
out
sub
mov
cmp
mull
push
sbb
jmp
mov
pop
fadd
scas
and
and
fdivs
std
mov
adc
imul
sub
push
and
in
enter
test
loopne
jnp
mov
repz
dec
sub
out
repnz
mov
out
pop
aaa
push
pop
xchg
ret
and
mov
aas
test
arpl
insl
or
sahf
js
add
mov
mov
int
inc
pop
es
std
divb
push
xchg
loopne
mov
mov
scas
popa
cmpsb
mov
lods
mull
sbb
test
loop
movsb
aam
and
sarl
pop
roll
inc
jmp
pop
push
pop
or
loop
enter
xchg
ds
jae
mov
in
movaps
out
cmp
jle
adc
mov
push
cmpb
sub
mov
int3
lahf
mov
fcmovb
push
fists
orl
sbb
ljmp
test
into
add
xlat
test
out
and
add
aam
arpl
jns
add
pop
mov
sbb
xor
jl
imul
pop
decb
xchg
add
sub
adc
loope
mov
adc
push
lods
sub
gs
mov
fldcw
jno
scas
in
pushf
outsl
and
flds
popa
les
enter
dec
jbe
aad
cld
outsb
fsubl
jns
sbb
pop
mov
mov
jmp
daa
out
rcrl
inc
hlt
enter
das
dec
xchg
test
jg
out
xchg
fwait
sbb
dec
pop
enter
mov
xor
mov
scas
inc
bound
mov
fsqrt
jnp
push
loope
fs
inc
lcall
cld
cmpsb
call
jae
test
stos
cwtl
sub
adc
pop
daa
stos
loopne
lret
push
lahf
aad
or
pop
sub
es
xlat
nop
xor
in
jge
mov
fidivrl
test
sub
inc
int
mov
call
mov
dec
xor
xchg
out
add
aam
out
mov
fsubl
aad
clc
test
adc
hlt
std
adc
or
scas
dec
aas
ljmp
lods
loop
xchg
push
cmp
add
leave
arpl
jp
pusha
ds
fsubrp
mov
push
aaa
in
sub
xchg
into
push
cmp
popa
mov
push
addr16
adc
adc
test
xchg
int
add
cmp
sbb
pop
loope
sbb
in
and
fisubrs
rolb
mov
sub
idivl
dec
mov
and
lea
les
lret
imul
lds
loope
fs
fisubl
lahf
jnp
push
sti
fisttpll
stos
jg
add
mov
sbb
jmp
hlt
clc
and
lahf
scas
inc
into
mov
mov
dec
or
inc
enter
xor
or
sbb
icebp
add
adc
test
idiv
push
in
adc
pop
loope
out
les
mov
dec
cmc
jb
test
jp
out
rorl
dec
sub
enter
jae
outsb
mov
mov
inc
and
xor
fcomps
push
stc
jle
fcmovu
mov
push
ret
cmp
mov
jmp
fistpl
fadds
mov
dec
fdivl
dec
cmpsb
mov
inc
or
jp
scas
inc
das
inc
sahf
rol
xchg
inc
and
cwtl
mov
shl
rorb
adc
adcl
lret
cmp
add
ljmp
add
push
mov
fs
xor
jmp
insl
add
adc
push
popa
xchg
pop
aaa
jg
jp
outsb
lret
in
or
xchg
jge
data16
stos
adc
add
jno
xor
lds
mov
rcll
jae
clc
adc
sub
or
ret
or
or
outsb
gs
test
enter
mov
popf
mov
add
sbb
jnp
mov
adcb
pop
gs
inc
repnz
cli
fs
mov
test
xchg
in
mov
sbb
aas
loope
stc
pop
movsb
push
mov
out
push
bound
jmp
dec
or
pop
cmpsl
ljmp
jp
movsb
adc
adc
jnp
stc
fadds
inc
insb
fdivrs
mov
mulb
arpl
insb
mov
es
insb
lahf
loope
or
nop
pop
push
addr16
nop
out
adc
add
jp
ficoms
push
pop
int
std
cmc
int
add
outsl
mov
les
loope
arpl
and
mov
lret
push
inc
popa
sar
ja
leave
pop
sar
mov
or
inc
xor
mov
jmp
fcomps
into
mov
fbld
mov
addb
sahf
dec
cmp
mov
aam
and
mov
bound
add
cmp
add
jmp
adc
adc
test
adc
rcll
stc
push
ret
jecxz
push
push
test
push
jge
jno
pop
mov
testb
xor
out
testb
imul
push
push
popf
jmp
push
add
jl
ja
or
pop
addl
xchg
dec
fucomi
mov
add
lret
pusha
jae
bound
pop
inc
mov
xchg
fsubs
gs
stos
sbb
mov
mov
cld
and
repnz
pop
fdiv
cld
mov
pop
icebp
aam
lret
insb
mov
mov
or
stc
and
jne
adc
frstor
gs
pop
sub
pop
arpl
add
push
das
repz
ljmp
xor
pop
cmc
xchg
cmp
pop
mov
jns
lock
or
and
jmp
int
inc
mov
call
pop
mov
push
je
jmp
adc
sbb
dec
sarb
aad
add
inc
imul
adc
mov
cmpsl
stc
and
outsl
mov
icebp
pop
sti
or
inc
push
mov
or
rolb
rol
mov
je
mov
inc
mov
inc
mov
mov
add
jmp
faddl
inc
scas
lea
aas
lock
mov
and
int3
sub
mov
xchg
cltd
insb
cmp
mov
repz
add
mov
in
movsl
push
lods
sbb
cld
adc
mov
cmp
mov
jg
sub
loop
sub
adc
sub
push
test
push
mov
into
in
fildl
pop
outsl
or
in
outsb
popf
leave
or
adc
pop
stos
outsb
enter
imul
jbe
sub
stc
push
xor
daa
mov
push
cwtl
in
inc
data16
hlt
fstpt
push
inc
shlb
out
pop
mov
cld
jmp
scas
rorl
xchg
pop
into
sub
mov
mov
stos
inc
push
dec
mov
lods
icebp
sub
es
lar
mov
mov
dec
mov
xor
sbb
adc
cmp
outsl
popf
jl
or
xchg
pop
hlt
cmp
popa
pushf
xchg
sbb
cmc
mov
fstpl
sub
jb
jmp
pop
movsb
lret
jmp
adc
push
mov
mov
and
rclb
cmp
arpl
jne
dec
outsb
adc
dec
daa
icebp
mov
aaa
test
jns
mov
pusha
daa
jmp
lds
cmp
xorb
mov
repz
imul
add
aaa
cmc
dec
ret
cmc
aas
mov
les
sub
push
fs
xchg
pusha
lret
pusha
out
sub
sbb
or
loopne
aam
mov
xor
mov
das
pop
push
or
sbb
repnz
scas
inc
jno
cmpsb
adc
pop
jmp
jg
fnsave
out
push
inc
stc
mov
cmp
shr
call
lods
jb
fisttpll
dec
je
lsl
in
sbb
xchg
loop
neg
mov
enter
pop
add
cmp
cmp
js
push
mov
sub
fwait
push
adc
pop
jb
shll
pop
pushl
push
jno
aas
lds
xchg
xchg
scas
insl
add
pop
mov
ret
mov
pop
inc
fidivrl
xchg
test
pop
inc
xchg
mov
mov
xchg
fiaddl
sti
aaa
push
in
add
and
pushf
pop
arpl
cmpsb
pushf
adc
icebp
jmp
inc
cmp
fmuls
hlt
pushf
xor
add
out
loopne
mov
push
inc
out
and
jg
xchg
add
pop
mov
push
push
inc
adc
pushf
xlat
rolb
data16
das
mov
je
mov
shll
inc
push
mull
inc
push
test
shrl
icebp
out
push
aad
jmp
xchg
mov
mov
and
loopne
pop
iret
aam
into
call
add
cli
ja
repz
xchg
sub
cmc
dec
cs
cmpsb
and
xchg
rcl
pusha
cld
fstps
xchg
lods
sbb
xchg
jnp
jmp
inc
es
push
jo
aaa
nop
sti
mov
push
or
xor
push
int3
addr16
push
sbb
out
lcall
inc
mov
fmuls
jne
imul
add
jg
add
test
push
dec
mov
sbb
adc
cmp
lds
lods
lods
bound
pop
std
hlt
xor
adc
ja
mov
or
movsl
movsl
xlat
dec
and
or
mov
and
popf
call
dec
push
insl
data16
das
fiadds
in
adc
xor
mov
sbb
inc
out
lcall
jmp
jb
dec
pop
lcall
pop
push
adc
pop
cmpsl
sub
mov
sub
jnp
mov
pop
xchg
pop
add
lock
xor
jo
test
arpl
es
push
add
sbb
add
adc
push
mov
jns
cmp
jne
push
int3
and
int
fstpl
mov
in
repnz
loop
sti
xlat
loope
cmp
ljmp
movsl
in
inc
sub
push
adc
jg
pop
or
stc
cltd
into
repnz
test
hlt
and
mov
scas
mov
jge
test
push
pop
or
cmc
arpl
insb
dec
push
dec
pop
jp
adc
push
icebp
inc
loope
adc
sub
pop
pop
popa
mov
testl
ljmp
add
loop
ss
or
sub
xchg
leave
imul
push
dec
sbb
cmp
pop
pop
fstpl
dec
xchg
loop,pn
mov
or
mov
fiaddl
cmp
jns
dec
inc
sbb
ljmp
cli
adc
iret
adc
lret
cwtl
pop
dec
jnp
test
cmp
mov
dec
es
loope
sub
push
leave
xor
jne
push
notb
inc
sub
outsl
xchg
dec
sbb
loope
jo
ds
jbe
xor
sbb
lds
clc
xchg
fld
dec
jnp
into
xlat
lret
orb
addr16
cmpsb
pop
inc
mov
cld
mov
cmp
cmp
push
das
stos
xchg
js
inc
add
stos
incb
push
and
push
lods
imul
inc
fmulp
pop
adc
int3
std
stos
pop
jge
jns
dec
mov
test
dec
gs
push
js
test
lods
ljmp
insb
add
mov
jnp
lcall
xchg
or
rcll
add
cmp
nop
enter
popa
mov
loope
nop
xor
stos
ljmp
jl
pop
js
leave
xchg
push
cmp
aam
and
jnp
mov
in
jnp
cmp
rcll
test
pop
ds
xchg
inc
or
xchg
mov
xchg
jp
hlt
dec
or
es
movb
sqrtps
ret
jle
cli
adc
std
imul
jmp
sti
icebp
mov
jo
jns
sub
jp
clc
xchg
imul
jp
and
bound
jg
dec
cmc
sub
in
jle
sbb
leave
fdivp
jns
es
push
imul
jp
sub
mov
dec
loopne
xchg
or
pusha
testb
scas
add
add
pop
int3
xchg
sub
mov
mov
fildll
aad
mov
push
popf
aad
mov
lods
mov
test
lret
test
in
scas
into
cmp
pop
sub
cmp
dec
and
leave
mov
jns
cwtl
rorb
sub
sub
xor
add
and
stos
cmp
xchg
mov
or
imul
mov
xor
lret
inc
into
jbe
jmp
rcll
rorb
xchg
mov
add
jb
lret
fildll
es
movsl
add
inc
jecxz
jp
les
mov
mov
push
xor
dec
sbbl
insl
push
test
jmp
test
std
xor
xchg
inc
and
and
dec
stc
inc
leave
pop
mov
ficoml
mov
loop
test
add
sahf
stos
adc
mov
pop
pop
add
ljmp
push
mov
dec
in
imul
push
adc
sti
jb
stos
mov
add
inc
jae
sub
pop
and
imul
fadd
mov
sub
mov
adc
lret
jb
fmull
cmp
cmp
sbb
jnp
out
int
sbb
fcmovb
fdivrs
mov
adc
jae
sub
divl
push
jp
sub
ja
in
pop
int
mulb
add
and
jns
inc
dec
leave
pop
icebp
loope
stc
nop
imul
fmull
and
cmpsb
pop
cmp
dec
std
lds
inc
lods
repz
adc
cmp
sub
adc
push
add
ljmp
inc
or
inc
sub
cmp
icebp
sub
dec
shll
fists
cld
jns
ss
jmp
rol
and
mov
sub
jl
lcall
mull
pavgw
jp
mov
or
lcall
iret
mov
add
inc
btr
addr16
jp
je
xchg
jo
mov
mov
fstpt
add
call
and
and
repnz
lret
push
pop
jp
push
pop
inc
cltd
cli
dec
stos
jb
mov
add
fildll
pop
sub
pop
gs
iret
test
mov
jns
xchg
rorb
insl
push
cmp
ret
test
aam
xchg
mov
inc
loopne
mov
mov
fdivrs
or
std
nop
xor
aas
jp
out
lods
loope
aam
dec
cmp
cmp
cmc
xor
sbbb
push
cmpsb
pushf
cmpb
cmp
push
popa
jl
in
fs
jp
mov
test
sub
enter
jl
dec
jl
fisttps
push
dec
insb
fstpt
std
sub
lds
dec
cld
lods
mov
test
inc
jmp
xor
cmp
fistpl
enter
mov
lret
cmp
inc
lret
imul
loope
or
jns
or
lahf
jns
iret
sub
xorl
jnp
movsl
jae
call
rol
push
sub
push
es
cmp
stc
sbb
aam
pop
cld
cmp
mov
dec
mov
and
sub
test
scas
pop
jns
fs
jmp
adc
or
pusha
xchg
xchg
int
roll
hlt
jcxz
ja
outsl
add
xchg
rolb
sub
lcall
ret
call
jl
stc
push
mov
addr16
adc
dec
lods
sub
aam
push
ror
movsl
stc
das
sti
mov
ja
imul
cmp
aaa
sub
jecxz
js
lret
push
dec
sbb
jp
jmp
fldl
sub
cmp
mov
jns
fs
aaa
dec
jo
pop
aaa
std
imul
jns
push
dec
inc
mov
push
push
sub
negl
xor
adc
clc
mov
popa
add
lret
sub
add
call
dec
in
push
imul
jp
dec
sub
mov
mov
sub
fdivs
popa
addb
jle
xchg
jmp
push
es
cmp
mov
jno
gs
je
lret
mov
or
test
ret
aad
or
mov
pop
sub
int
lods
lods
aaa
jge
mov
lock
jp
pop
sarl
push
out
sbb
jecxz
lret
xchg
stc
cli
mov
mov
mov
or
mov
push
mov
push
repnz
imul
movsl
pop
pop
dec
add
mov
fadds
je
dec
in
je
roll
adc
mov
cmp
jnp
xchg
scas
out
pop
xchg
in
lea
and
test
ret
fisttpll
jae
inc
mov
pop
fiaddl
mov
and
rol
nop
cmp
cmp
add
cs
mov
mov
hlt
lock
inc
cli
push
dec
sub
aam
or
mov
daa
mov
add
push
sub
mov
inc
mulb
mov
push
mul
jns
fidivs
lods
test
cmp
insl
xchg
sub
es
cmp
dec
pop
in
inc
jns
call
xorl
mov
fldl2t
test
stos
in
dec
adc
mov
ds
inc
sub
gs
jp
movsl
xchg
movsb
xchg
mov
scas
aas
leave
sbb
daa
rcrb
inc
mov
inc
xor
aaa
and
es
mov
stc
adc
or
cmp
lock
push
adc
cmc
std
cwtl
es
dec
filds
lea
inc
add
out
psrad
in
xchg
adc
add
fists
ret
xlat
inc
add
cmp
cwtl
sbb
sbb
sbb
cs
dec
popf
dec
sbb
insb
aaa
cmp
mov
push
inc
cmp
jg
scas
xchg
mov
xchg
jl
aam
or
push
int3
pop
dec
testl
ljmp
add
icebp
adc
jl
adc
lea
mov
jmp
dec
jle
mov
cmpsl
nop
inc
out
adc
jge
loop
pop
xchg
or
add
idiv
lahf
jno
push
ss
loope
gs
das
pop
in
call
aam
dec
roll
mov
mov
push
scas
fadds
mov
sti
xchg
cmp
lret
push
xor
push
lcall
sub
xchg
mov
xchg
cmp
sysret
into
mov
dec
xor
arpl
xchg
or
scas
popa
and
xor
inc
xchg
int3
mov
jge
out
lcall
xchg
dec
jnp
aas
dec
fwait
cmpsl
pop
and
test
dec
push
sahf
adc
jecxz
and
jo
int3
pop
adc
pusha
dec
xchg
sahf
stos
pop
fiadds
sub
hlt
jge
not
xchg
inc
aaa
nop
push
fsts
out
adc
sbb
mov
test
in
pop
sub
push
insl
mov
sbbb
stos
sub
pop
cmpsl
fisubrl
sub
cmovo
mov
popa
push
sti
mov
les
mov
les
mov
lods
pop
sub
dec
sbb
dec
sbb
mov
inc
jne
sbb
dec
arpl
pop
repz
sub
inc
adc
andl
jle
mov
imul
sbbb
lods
or
aam
mov
rep
in
push
jecxz
sub
mov
int3
addb
jns
int
push
cmp
xchg
mov
inc
pushf
xor
repz
ret
xchg
pop
mov
or
shll
shrb
or
cmpb
adc
lods
sub
sub
loope
call
or
scas
popf
cld
inc
decb
stos
sbb
adc
js
sarb
mov
es
leave
push
inc
dec
cmp
into
mov
addr16
nop
cmp
jae
aad
clc
mov
loope
jno
std
dec
out
dec
mov
push
or
rorl
das
popa
mov
leave
push
lds
movsb
lods
push
push
pop
jle
outsb
test
dec
cmp
push
sub
mov
dec
sbbl
outsb
push
shll
lret
mov
inc
mov
xor
cli
enter
stc
xchg
xchg
ret
and
pop
xor
imul
push
int3
fcompl
pop
sub
inc
in
jns
sbb
frstor
adc
cltd
mov
aam
push
shll
push
mov
pop
dec
ja
mov
add
rorl
jnp
mov
xchg
ljmp
fs
cmp
xchg
add
imul
imul
mov
pop
sbb
mov
clc
bound
popa
adc
scas
dec
fs
scas
cs
push
ficomps
out
sbb
mov
dec
test
sub
cli
imul
xchg
dec
js
stos
fisttps
aaa
repnz
rcll
clc
and
push
cmpsl
inc
imul
adc
ja
pop
les
jns
mov
dec
movsl
pop
mov
out
or
ja
and
mov
paddsw
xchg
sub
sarb
pop
cli
pushf
clc
pop
pop
stos
xchg
fnstenv
mov
pop
adc
gs
push
aaa
mov
mov
popa
add
fxch
cmp
dec
inc
fsubl
leave
or
xchg
sub
icebp
mov
test
or
jmp
in
loop
push
jge
dec
and
cmp
negb
mov
mov
test
pop
loope
lcall
jns
int
mov
jmp
mov
mov
jae
leave
lret
or
clc
negl
fmull
mov
shll
shrb
stos
outsl
lock
xchg
int
mov
sub
sub
js
ljmp
inc
pop
jp
addl
or
mov
jns
and
dec
addr16
sub
inc
fimuls
mov
jecxz
mulb
shll
push
leavew
or
negl
mov
out
adc
faddl
cmp
or
loopne
leave
pop
pop
xor
jmp
pop
sbb
lahf
js
jb
mov
inc
mov
fmull
add
mov
outsb
movsb
add
out
xchg
imul
rcl
fcomps
aam
enter
jl
cli
dec
shll
mov
test
adc
lods
jns
sti
cmp
add
pop
loopne
int
or
fisttpll
xor
xor
out
jle
ja,pn
pop
dec
insl
lahf
xchg
jns
out
std
xchg
ficoms
jno
mov
sbb
imul
xor
sahf
fdivrs
insb
jle
add
jge
or
hlt
bound
repnz
daa
mov
adc
mov
aaa
call
popa
call
repz
leave
jo
cltd
fimull
cwtl
loope
and
and
in
mov
js
stos
pop
or
icebp
add
cmp
mov
jne
and
ret
outsl
mov
pop
pop
inc
mov
inc
sarl
pop
push
xlat
in
roll
jnp
andb
inc
jb
out
or
insb
and
pusha
in
sti
jns
sub
push
test
jge
repz
outsl
add
dec
call
fisttpll
add
sub
xchg
sub
cmp
sbb
andl
pop
jb
fcomi
or
sub
test
cmp
add
jmp
insb
in
js
add
or
pop
lds
ror
jg
sbb
addr16
push
scas
ja
pop
roll
or
xchg
cmp
pop
mov
cmp
inc
scas
out
pop
and
movsb
jmp
ja
popf
jle
data16
xchg
int
cs
mov
mov
push
xchg
movhps
push
adc
outsl
mov
sarl
push
mov
mov
or
insl
je
mov
in
mov
jmp
push
push
xor
or
mov
push
test
sub
shll
inc
push
dec
addl
movsb
ja
test
mov
leave
jl
js
jmp
into
jecxz
sbb
mov
lahf
orb
sub
popl
mov
sub
out
mov
xchg
add
pop
cs
pop
das
es
cmp
mov
and
inc
mov
add
pop
cli
shrb
arpl
add
ss
or
pop
sub
in
stos
add
jge
sbb
mov
js
mov
mov
dec
push
mov
adc
pop
lret
xchg
notl
pop
mov
or
fdivs
dec
lret
inc
jecxz
js
add
pop
lcall
cmp
mov
jae
or
sahf
repz
mov
ja
dec
adc
ret
clc
mov
xlat
jns
in
push
pop
xchg
test
fidivl
sbb
js
xor
and
fs
xor
push
jo
outsb
mov
into
jmp
xor
pop
push
sti
mov
lods
shlb
popf
sub
fs
cmp
aaa
cmp
test
add
adc
push
dec
push
notl
pop
outsl
mov
mov
cmp
xor
std
adc
fs
mov
je
sub
popf
inc
lock
mov
lahf
jae
dec
mov
iret
dec
dec
xchg
sub
sub
push
pushf
cwtl
push
fs
das
jg
xor
inc
dec
cmp
push
and
pop
addr16
push
mov
push
cmpsl
push
rcll
addr16
js
jnp
jg
sbb
mov
rclb
xchg
dec
push
hlt
fdivp
push
ja
neg
push
iret
mov
xchg
stos
mov
test
rcrb
stc
mov
adc
mov
or
rorb
jl,pt
sbb
push
pushf
repz
sbb
out
pop
sub
scas
cmp
pop
vpunpckhbw
inc
out
stos
cmp
mov
aaa
icebp
imul
push
ret
das
jle
xor
add
rclb
inc
and
mov
pop
add
dec
rcrl
xchg
iretw
dec
stos
notl
rcl
xchg
sbb
pop
test
aaa
aas
hlt
lret
lock
mov
fs
call
aas
int
xadd
push
lahf
js
sub
sub
sub
sub
jno
loopne
or
cwtl
mov
sbb
stc
xchg
cmpsl
push
aas
mov
stos
lcall
cmp
jecxz
mov
xor
call
xchg
loope
push
sbb
pop
repnz
sbb
jge
repnz
repnz
adc
jg
shrl
cmp
push
data16
mov
pop
adc
pop
adc
mov
and
dec
and
mov
lret
adc
mov
fwait
icebp
push
push
mov
jle
outsb
insl
pop
out
sub
repnz
popa
inc
cmpsb
adc
adc
sub
call
leave
shl
inc
into
dec
into
mov
inc
or
dec
neg
bound
add
jno
mov
mov
inc
stos
mov
repz
insl
adc
das
or
push
mov
out
mov
arpl
jle
out
cwtl
push
mov
lods
jo
orb
jb
ds
ja
lahf
sub
pop
xchg
cmp
fdiv
in
insb
pop
rclb
add
dec
pop
test
scas
ror
loop
out
push
mov
sahf
dec
in
mov
cmp
addr16
xor
hlt
mov
adc
fwait
cmpsl
jl
xor
dec
cli
jecxz
adc
pop
dec
dec
clc
xchg
pop
and
test
les
iret
subps
mov
mov
or
gs
mov
aaa
and
out
and
arpl
sbb
mov
out
test
std
lret
bound
mov
push
pop
jg
sbb
dec
add
adc
xor
cmpsl
mov
rorl
xor
loopne
adc
xor
xchg
lock
mov
cmp
out
jmp
mov
inc
popl
leave
pop
movsl
xor
lods
shl
fildll
das
fcmovbe
popa
decb
cwtl
ja
jnp
adc
inc
jbe
inc
adc
lret
mov
iret
mov
cmp
pop
je
out
jp
cmp
lret
sub
negl
scas
cmp
aad
les
xor
pop
cltd
ret
sbb
or
inc
inc
ja
or
and
movsb
notl
nop
and
push
dec
xor
mov
cli
mov
adc
pop
adc
xchg
pop
cwtl
cmpsl
jle
ret
mov
pushf
test
mov
mov
arpl
shrl
sbb
insl
adc
adc
mov
inc
mov
in
movsb
jnp
icebp
frndint
cmpsl
and
js
das
mov
jg
lds
lahf
test
aas
std
mov
fstl
xchg
sub
or
push
pause
pop
cmpb
dec
stc
dec
push
cmp
mov
or
ss
ja
pop
xchg
mov
dec
jecxz
sub
idivb
ds
jne
movsl
shrl
rorl
decb
xor
pop
ret
or
mov
push
arpl
jbe
arpl
push
dec
sub
add
pop
jge
xor
mov
mov
xor
cld
push
aas
out
pop
push
dec
or
fistl
scas
xchg
pushl
fidivrs
fs
jno
jmp
cmpsb
stos
lahf
inc
insl
xor
sub
test
xchg
fcomps
icebp
or
cmpsb
push
subl
push
xor
pop
jl
jp
xor
daa
out
or
cmp
cld
faddl
iret
adc
movsl
call
outsb
es
cmpsl
jae
inc
add
mov
xchg
jg
jecxz
cmpsb
cmpsb
jo
in
jo
das
les
jge
and
cli
test
in
call
mov
repz
mov
mov
cmp
inc
sub
dec
jnp
insb
lcall
icebp
and
and
fcomp
xchg
sub
sahf
mov
out
dec
push
stc
cmp
fisubrs
daa
clc
sbb
xor
cmp
or
push
xor
and
jne
repz
dec
pop
sti
inc
mov
pop
mov
inc
sub
xchg
adc
mov
ror
pusha
ret
and
fisttpll
cmp
cwtd
sbb
mov
xor
inc
inc
dec
in
sbb
mov
jl
push
dec
stc
push
jle
fstpl
mov
mov
xor
mov
mov
push
jge
ret
inc
and
sub
mov
test
mov
pop
or
or
cli
scas
les
enter
xchg
inc
pusha
pushf
into
lods
push
mov
pop
pop
inc
mov
fsub
jecxz
mov
popl
sbb
js
push
lods
adc
aas
ret
out
or
stos
addr16
mov
sti
sahf
adc
push
or
call
int3
arpl
test
rolb
or
xchg
lods
iret
xor
inc
sar
cmp
repnz
jae
xchg
ret
ja
push
xchg
das
xchg
jns
mov
sbb
ds
bound
mov
push
sub
jne
bnd
insb
lahf
push
mov
loop
test
and
repz
mov
inc
or
push
xchg
test
inc
xlat
push
mov
push
mov
insl
cmp
mov
ret
stos
in
pop
decb
mov
pushf
leave
inc
mov
xchg
pop
mov
push
cli
and
and
subl
data16
cmp
and
fnsave
mov
icebp
jo
push
js
leave
push
sbb
sub
jae
mov
cld
adc
mov
jge
inc
repnz
push
mov
dec
jmp
mov
loope
enter
pop
xchg
movsl
and
xchg
fmul
fisubrl
mov
icebp
pop
iret
and
divb
in
mov
mov
mov
aam
je
ja
in
mov
inc
xor
xchg
or
sub
mov
icebp
mov
fnstcw
aad
lcall
outsb
and
lea
mov
inc
xchg
pop
leave
dec
mov
pop
jp
popf
or
daa
scas
rorl
push
adc
pop
mov
cmp
aam
shlb
lods
mov
dec
mov
pushf
cmpsb
and
data16
mov
in
icebp
repnz
mov
dec
mul
mov
movsb
or
dec
cwtl
mov
ljmp
mov
xor
inc
lahf
jbe
int3
aam
adc
sbb
lea
push
xchg
push
xchg
out
inc
mov
mov
inc
dec
in
mov
repz
jo
fildll
in
add
scas
ljmp
aas
push
sbb
in
add
xchg
and
xor
cltd
test
add
add
mov
adcb
pop
sub
mov
js
cli
push
orb
push
and
ljmp
xor
and
fwait
cmp
or
jp
sub
gs
je
xchg
mov
aad
leave
leave
inc
dec
ljmp
adc
data16
stos
insb
icebp
or
out
mov
movsl
fisubrl
add
push
cmpsl
fwait
mov
lea
test
pop
pop
jne
rclb
mov
sub
pushw
aaa
aad
outsb
adc
push
data16
push
mov
dec
stos
xchg
and
js
lcall
call
push
pop
clc
call
inc
xor
test
pop
mov
pop
es
pop
leave
in
insl
jl
pop
xchg
xchg
cmp
cs
inc
mov
xor
hlt
mov
faddp
mov
ja
sbb
jle
push
jbe
mov
xor
mov
sub
push
push
cmp
loop
jno
mov
xchg
adcl
jno
sti
arpl
jecxz
arpl
leave
pop
sahf
adc
cmp
fdivr
lcall
ja
scas
pop
mov
add
pop
sar
test
cmpsb
lcall
add
mov
subl
fstps
or
shlb
add
sbb
loopne
push
mov
push
lret
pop
cmp
repnz
add
and
push
pop
lea
cwtl
push
mov
in
aaa
pop
loop
decl
jmp
pop
pushf
cmp
mov
xlat
call
dec
cmp
push
fs
pop
sub
cmpsb
divb
xchg
add
popf
inc
in
adc
add
fldcw
jp
aaa
xor
jns
xchg
xchg
push
inc
inc
pop
xor
or
addr16
lock
fwait
xchg
dec
movsb
jle
xor
xor
sbb
dec
movsb
adc
fcmovbe
dec
jmp
ret
jo
push
jne
lock
shl
ljmp
movsb
xor
sbb
je
mov
sub
jne
dec
push
inc
mov
popa
push
mov
sarb
mov
add
and
xchg
shll
cmp
push
adc
in
adc
test
xchg
in
mov
lods
idivl
inc
adc
or
sbb
fsubrs
std
adc
iret
addl
lds
insb
jae
lods
aas
cwtl
out
addl
pop
add
xchg
lods
inc
dec
dec
cmp
aaa
sarb
les
mov
call
pop
jb
orb
aaa
cmc
or
clc
fbstp
inc
pop
cs
pop
fstl
push
js
push
fcompl
xchg
out
xchg
push
mov
movsb
shrl
cld
lods
pop
pop
inc
mov
into
mov
idivb
loope
sub
inc
test
pop
inc
imul
cmp
aam
jbe
mov
mov
xlat
jno
test
daa
xlat
ror
les
or
xchg
jnp
xchg
mov
popl
sub
and
movsb
aas
aad
dec
rorb
push
xchg
mov
add
mov
sbb
push
in
rorl
inc
rcl
stc
push
testb
lds
xchg
shlb
dec
pop
rcll
cld
rol
mov
push
xor
fcoml
xor
cmc
sti
xchg
hlt
mov
es
sub
inc
mov
xlat
or
fstps
fldcw
adc
test
mov
dec
dec
outsl
pop
mov
int3
mov
fstp
rorl
sti
jp
mov
lcall
arpl
jno
mov
testl
js
test
and
out
inc
inc
or
inc
stos
dec
mov
into
inc
out
jl
test
cmp
std
xchg
clc
lcall
sub
loop
insb
pop
mov
cmp
iret
push
imul
adc
in
mov
inc
mov
pop
out
rorl
lds
cmpsl
loopne
inc
xor
pop
push
fbstp
pop
sbb
xlat
push
xchg
xchg
in
test
sbb
mov
jge
xchg
xchg
fildll
or
cmp
mov
nop
cmpl
sub
bound
xlat
push
xchg
outsl
iret
push
fs
decl
jnp
aam
cmp
cmp
jmp
push
dec
inc
sub
push
mov
cmp
roll
mov
mov
inc
mov
adc
xchg
lock
adc
pop
push
test
sbb
arpl
nop
sbb
cmpb
pop
cmp
dec
orb
pop
sbb
mov
push
aaa
inc
pop
lcall
pop
in
in
test
pop
and
mov
sbb
gs
fsubr
fucomip
fdivs
mov
push
push
jl
outsl
data16
add
or
or
movsb
test
jno
add
pop
xor
cltd
xor
mov
mov
or
jge
pop
mov
roll
fisubrl
mov
mov
jecxz
sub
rclb
push
rorl
adc
add
std
dec
aam
cmp
nop
es
shll
imul
sbb
xchg
sbb
lods
mov
mov
pop
push
insb
pop
sub
xor
mov
imull
outsb
push
dec
int3
int
sub
mov
push
fadd
jne
cmpsb
lds
push
sbb
sbb
sub
push
xor
aas
dec
sarb
mov
sub
inc
push
fs
pop
jmp
push
ljmp
lahf
ror
lret
outsb
fisubrs
push
iret
push
jbe
xchg
data16
cmp
inc
lock
xchg
lret
xchg
outsl
les
push
jb
imul
jbe
adc
xor
adc
rcll
xor
pop
xchg
push
inc
in
cmp
pop
subl
lahf
adc
sbb
lahf
mov
xchg
imul
xchg
fisttps
adc
pop
mov
push
mov
lods
mov
clc
sub
inc
sub
fisubs
enter
repnz
mov
test
xchg
into
mov
cmpsl
jp
cmp
out
xor
es
mov
mov
xchg
aad
out
inc
enter
jecxz
cmpsb
xchg
cwtl
xchg
jne
sub
xchg
les
out
mov
push
sub
and
out
int3
rep
and
movb
xor
mov
push
sbbl
jne
aaa
mov
les
mov
ljmp
std
or
sub
push
sub
or
sahf
inc
lods
div
insb
cmp
pop
push
jp
arpl
mov
mov
ror
mov
idivl
xchg
ja
cmpsl
mov
cmp
or
lret
dec
lahf
xchg
pop
inc
aad
jmp
xchg
and
xchg
stos
fistpl
jg
mov
sub
sub
sub
xchg
fisttpll
push
inc
pop
inc
gs
das
push
mov
lods
mov
mov
test
push
xlat
and
sub
and
in
divb
inc
adc
cltd
bound
jge
cmp
push
out
dec
mov
fstl
cmpsl
ja
jl
add
jbe,pn
push
push
sub
fidivrs
push
fisubl
imul
loop
sub
in
lods
sahf
sbb
rclb
push
add
and
scas
outsl
aad
outsb
inc
lea
in
pop
les
les
jo
ljmp
orb
jl
cwtl
scas
scas
push
sub
push
or
dec
into
fcmovu
xchg
stos
std
mov
dec
xchg
sub
adc
mov
loopne
inc
ss
shll
mov
ret
cmpsb
divl
xchg
pop
test
imul
add
inc
lret
outsb
push
push
jmp
add
cltd
ficompl
mov
stos
mov
movsl
lds
mov
mov
cmp
xchg
add
shll
sahf
sub
aad
cmp
mov
cli
addb
cmpsb
movsb
push
test
or
add
pop
xchg
in
cmp
xor
adc
push
add
shrl
mov
push
or
add
cmp
and
xchg
push
out
std
mov
imul
pop
adc
pop
dec
jnp
lods
test
fwait
cmp
out
arpl
mov
xor
movsl
push
andb
and
adc
lds
ljmp
mov
xchg
and
sub
add
dec
ss
aam
sub
rclb
xchg
dec
arpl
push
in
mov
xor
push
scas
lahf
andl
scas
pop
test
unpckhps
clc
aas
stos
cmpsb
inc
out
mov
aad
mov
dec
sub
test
sub
imul
aad
sub
stos
xchg
mov
into
pop
jo
add
add
push
andb
mov
inc
dec
bound
aad
idivl
push
pop
out
in
mov
push
pushf
pop
test
mov
adc
pop
sub
inc
xchg
jge
fistpll
mov
lds
sarl
push
xchg
mov
out
add
outsb
add
or
mov
inc
dec
sbb
arpl
lock
mov
xor
lods
push
mov
mov
arpl
or
cld
push
xor
testb
fsubrs
mov
and
ljmp
or
mov
mov
jecxz
mov
std
cmp
ljmp
fnstsw
and
mov
inc
out
sbb
add
negl
pop
adc
inc
sub
cmp
mov
xor
mov
pop
xor
or
sbb
bsr
jmp
out
jae
mov
pop
push
pusha
jecxz
inc
or
xlat
xor
pop
ficoml
and
sbb
inc
mov
adc
or
jmp
cli
jl
mov
mov
jle
push
xchg
sbb
mov
rcrl
call
jge
xchg
mov
mov
jle
xor
cmc
jle
push
lods
loop
out
add
push
insb
add
sbb
out
test
dec
jbe
mov
lds
fnstsw
sbb
inc
pop
call
cmp
or
arpl
inc
or
std
icebp
xor
in
popf
cmpsb
idivb
insb
les
add
ljmp
mov
ds
push
sub
sbb
sbb
jmp
std
cmp
mov
and
outsl
or
jne
cmc
shll
popf
xchg
sbb
nop
insb
test
push
pop
adc
fs
cmp
lret
xchg
cmp
jmp
out
sbb
cs
pop
sub
sub
mov
mov
jecxz
pop
or
lret
adc
sbb
aad
insl
inc
in
push
aad
or
cli
and
movsb
test
popf
aad
test
jbe
sbb
lods
xor
pop
in
ljmp
pusha
mov
mov
in
int3
rorb
push
ds
pushf
out
aad
ja
jp
add
pop
push
xchg
cld
mov
sub
out
xchg
inc
test
int3
push
test
jne
sbb
lds
xchg
cmp
inc
mov
push
adc
lods
mov
sbbb
popf
cmpsb
dec
out
aaa
cmc
push
outsb
les
push
push
pop
aas
ljmp
orb
ja
cwtl
movsb
in
dec
sub
push
jno
adc
fadd
fildll
insb
mov
xchg
std
jne
mov
and
pop
lret
inc
mov
repz
lcall
scas
imul
psubusb
or
popa
cmpsl
pop
jbe
dec
jmp
lds
paddusw
lds
mov
mov
jecxz
pop
and
insb
lret
add
repnz
int
lcall
cmp
pop
cmpsb
adc
xchg
adc
push
jle
cli
hlt
adc
mov
cmpsl
sbb
cmp
push
ret
jbe
int
sbb
pop
inc
push
in
std
sub
jge
mov
jnp
and
and
push
jle
rclb
cltd
out
cmp
inc
imul
cld
xor
in
xlat
mov
cmpsb
cmp
fadds
shlb
push
dec
sbb
pop
ds
in
lods
insl
mov
dec
shr
xchg
inc
jmp
lock
pop
lret
xor
adc
mov
inc
aaa
inc
fldcw
cmp
jmp
ljmp
decb
mov
sub
dec
sbb
cs
insb
lds
popf
std
aam
push
xchg
or
jp
inc
andb
push
pop
lret
inc
jne
lock
inc
testl
or
mov
dec
sub
popa
dec
jmp
int3
push
sbb
push
leave
lds
jne
mov
push
in
jp
in
and
mov
add
lock
pop
into
cwtl
es
inc
inc
mov
shrb
gs
push
aad
sub
push
cmpsb
cli
sub
repnz
sbb
stos
je
sub
pop
gs
cmc
in
push
js
jge
xchg
push
adc
mov
enter
lock
fsub
cwtl
out
inc
inc
ja
lret
popf
aas
push
xchg
int3
mov
sub
and
mov
jne
movsb
fadds
ja
aad
push
dec
pop
into
pop
and
jae
cmp
add
or
lock
lret
sbbb
loop
cmpsb
or
cmp
les
push
movsb
pop
sub
jp
or
or
or
cs
push
dec
popf
jb
fisttps
insb
jl
test
xchg
popf
daa
js
sbb
add
inc
test
shll
mov
negl
pop
test
add
stos
sub
lcall
dec
mov
jge
jbe
xchg
in
paddsw
lahf
subl
sub
mov
js
in
insl
and
cli
lret
add
pop
repnz
test
mov
inc
hlt
les
push
fcmovbe
cli
movsb
sub
mov
mov
sbb
push
dec
test
clc
es
in
fstps
lret
sub
gs
push
adc
jp
je
and
in
sbb
rclb
xchg
out
mov
pop
add
sti
add
sub
mov
cmpsb
fcomp
mov
adc
xchg
sub
mov
les
rcr
stc
jp
je
and
int
lret
cmpb
adc
pop
push
sbb
movsb
test
lret
test
in
mov
idivl
sti
fdivl
xchg
pop
fsubrl
push
aas
ljmp
cmp
sub
lea
or
or
mov
call
mov
mul
inc
test
ds
movsl
mov
je
mov
or
rcrb
call
cltd
push
push
bnd
sub
out
dec
sbb
test
cmpb
dec
outsl
jne
mov
retw
dec
xchg
mov
mov
or
or
arpl
in
and
adc
dec
and
mov
ror
adc
les
mov
fnsave
in
or
jge
or
loop
jae
sysenter
rorb
divb
cld
mov
and
cli
push
and
push
inc
inc
sub
in
out
mov
mov
ja
push
call
inc
jmp
aam
mov
sub
sbb
movsl
or
mov
sub
push
das
push
jecxz
ret
in
jnp
ficoms
mull
loope
stos
sub
jg
pop
hlt
pop
push
cmpsl
pushf
clc
pop
out
ret
xchg
lcall
stos
mov
jo
std
fidivl
inc
scas
loop
pop
and
out
or
jge
scas
mov
mov
pop
popf
cmp
xorl
push
out
xor
je
mov
sbb
mov
in
mov
shll
shrb
fnstenv
jns
lea
rorl
es
cmp
paddsb
test
adc
out
mov
aaa
test
jne
or
mov
outsb
ja
rclb
in
std
sub
repnz
mov
inc
insb
fnstenv
je
pop
imul
repnz
inc
mov
mov
je
cmp
jle
jb
rcrl
je
xchg
mov
repz
pop
fdiv
call
stc
je
addr16
repz
cmp
pusha
cmp
xor
jmp
rcll
pop
and
cmpsb
jle
loope
shl
and
push
lret
in
cmp
shrl
andb
loope
sub
push
dec
push
push
add
or
sahf
incb
shl
std
and
cs
cmp
xchg
sar
fimuls
jge
loopne
xchg
mov
push
lret
dec
sahf
ljmp
ffreep
mov
xor
jle
data16
jmp
or
imul
mov
adc
aas
add
jo
xlat
dec
lahf
mov
rorb
mov
sarb
out
and
maxps
push
add
in
sbbb
jns
movsl
loop
cmpsb
roll
cmpb
mov
test
jmp
lods
jp
testb
cmp
inc
inc
jae
jmp
inc
imul
mov
sbb
mov
mov
mov
xchg
push
adc
and
and
aad
mov
push
and
data16
bt
and
cld
lret
shlb
int
sbb
icebp
pop
outsl
gs
adcl
push
adc
loope
mov
pop
icebp
push
dec
xchg
mov
test
cwtl
add
cmp
inc
cmpsb
rcr
dec
and
notl
std
lods
add
adc
add
mov
lret
rorb
jno
lods
mov
pop
stos
mov
hlt
outsb
push
ss
pop
jns
jl
xor
insb
and
xor
stos
in
adc
xor
int
jnp
and
test
lods
inc
xor
xor
cs
cmp
xlat
jae
cmp
mov
push
in
dec
loopne
mov
jnp
push
icebp
aam
xchg
dec
adc
mov
mov
lds
pop
in
cmp
ret
dec
xor
dec
je
std
out
pop
jo
push
jb
sub
shl
xor
inc
mov
call
insb
add
ja
inc
sub
xor
lods
cmpsb
mov
cmc
push
ja
xor
aam
imul
scas
dec
stos
push
fnstenv
arpl
icebp
lret
pop
mov
cs
mov
fstl
call
adcl
rcrb
das
js
lcall
mov
imul
dec
rcrl
stc
adc
dec
push
sub
insb
xor
jb
out
adc
pop
and
mov
mov
incb
or
inc
cwtl
xchg
imul
jo
rcll
lret
arpl
jg
sub
push
mov
movsl
mov
cmc
xor
pop
fmuls
pop
imulb
adc
xchg
scas
fs
push
test
pop
dec
and
rorb
not
fs
add
adc
jge
out
mov
roll
push
cmp
dec
mov
scas
notl
sub
xchg
jbe
movsl
loope
xor
xchg
imul
icebp
jle
lahf
insb
shlb
scas
sub
jp
pop
out
inc
sub
cmp
out
fldenv
xchg
push
pushf
pop
imul
daa
mov
xor
in
adc
andb
jge
push
jbe
je
fstl
mov
fildl
out
out
push
sahf
fs
out
in
sbb
adc
cmpsb
lcall
loope
xchg
sub
imul
mov
lock
mov
jb
xchg
stc
dec
or
cmpsb
mov
scas
sbb
push
stos
xchg
inc
idivl
sub
mov
dec
push
sub
test
push
lret
sahf
push
pop
and
cmp
sbbl
push
ret
push
aad
dec
cmp
pop
dec
mov
dec
push
sbb
lfs
into
pop
gs
cmp
fistpl
jle
outsb
movsl
mov
dec
sub
aam
mov
sbb
imul
adc
ror
imul
push
jge
and
cwtl
cmp
ljmp
xor
mov
sub
jecxz
scas
push
aad
sbb
pusha
icebp
mov
clc
scas
inc
sbb
and
jmp
adc
cmp
pop
xor
jmp
jmp
cmp
dec
cmp
sub
mov
lods
push
adc
mov
cmpsb
jle
iret
or
outsb
adc
iret
in
or
lea
xor
mov
pop
jge
mov
pop
dec
push
jg
fistps
mov
shrb
ret
push
or
xchg
lea
pop
sbb
idivl
or
xor
adc
or
jle
ljmp
cld
fmull
pushf
xchg
xchg
call
jp
stmxcsr
pop
sbb
rclb
movsl
mov
fs
pop
int3
test
call
cmp
les
cmp
adc
loopne
gs
lods
stos
sub
cmp
mov
pop
sbb
into
jge
dec
decb
mov
push
dec
outsb
shrb
jle
das
cmp
mov
mov
insb
scas
add
ja
bound
and
into
and
sbb
xchg
fidivrs
ss
in
stc
std
or
sub
jb
and
leave
fstpl
imul
bound
push
lcall
adc
xor
stc
add
int
lods
outsb
or
sbb
push
xchg
mov
lret
cmovns
test
cmp
mov
sbb
mov
adc
out
pop
push
sub
sub
mov
mov
jmp
add
xor
pop
mov
loopne
jae,pn
ficoms
sub
outsl
inc
jl
loop
push
ret
stos
in
movsl
push
add
push
push
jmp
dec
cltd
or
lret
addb
add
jge
imul
sbb
mov
jae
shll
and
mov
lods
or
sbb
decl
mov
or
cmpsb
sbb
cmp
iret
mov
pop
aam
mov
fldenv
and
jge
adc
mov
mov
lods
sti
stc
mov
inc
test
push
adc
adc
xor
cltd
xchg
fcmovnbe
mulb
push
add
ret
mov
mov
dec
cmp
hlt
push
cmp
sub
add
jl
push
sbb
subl
aad
add
std
jl
jecxz
shll
paddq
jp
cld
decl
push
int
dec
gs
mov
sbb
mov
insb
jge
test
mov
test
jae
dec
leave
xchg
xchg
fiadds
sub
mov
je
mov
mov
adc
out
sti
xchg
call
idivb
pop
sub
mov
sub
inc
icebp
addr16
adc
push
pop
jmp
sbbl
stos
ja
stos
in
test
clc
es
pop
fnstcw
stos
mov
aam
inc
inc
adc
mov
mov
sti
mov
sbb
aad
into
jae
pop
out
push
jp
jg
jge
cmc
xor
lods
fstpl
mov
les
fbstp
and
ja
lret
daa
push
inc
pop
or
sbb
cmpsl
rcr
xchg
rcrb
mov
ret
fwait
cltd
xorl
cmp
push
cmp
push
inc
je
pop
mov
jmp
jne
mov
adc
movsl
ss
leave
ss
mov
dec
ljmp
lahf
xchg
dec
push
dec
cwtl
test
push
inc
les
lods
andl
enter
std
lods
mov
sub
btrl
and
test
ret
ret
idivl
subl
movsl
or
cwtl
in
lods
jno
pop
jmp
jne
push
arpl
inc
adc
mov
dec
adc
sbb
int3
loopne
dec
add
xchg
and
fistpl
jg
rclb
aad
rcll
adc
xchg
dec
sub
das
xchg
imulb
js
sbb
aaa
shrb
icebp
cmp
in
push
push
xor
lods
mov
or
test
and
cli
jecxz
dec
loopne
jne
mov
mov
pop
mov
add
mov
mov
jmp
jae
jl
fdivs
cld
hlt
fs
addl
lods
in
rcll
andb
jp
rorb
push
int3
movsl
lahf
pop
sub
repnz
call
dec
sbb
insl
add
jl
dec
and
mov
jmp
pop
sub
sbb
stos
jb
cli
dec
mov
sbb
lods
push
std
lods
js
xor
xlat
adc
xchg
pusha
mov
push
dec
in
mov
xor
lcall
push
cltd
adc
lret
pop
mov
inc
insl
xchg
adc
dec
pop
mov
imul
jle
and
arpl
mov
pop
mov
insb
jbe
and
movsb
pop
ficomps
shrb
in
sbb
jge
sbb
sub
cli
xor
xchg
sub
scas
add
test
cltd
add
bound
jge
mov
into
or
cld
into
jmp
ret
cli
mov
adc
sbb
jle
mov
les
std
cmc
pop
mov
xor
arpl
test
jecxz
dec
jg
mov
iret
or
dec
inc
or
sub
lret
into
fsubrl
or
mov
pop
cmovg
adc
cmp
mov
cmp
mov
inc
xchg
push
scas
xchg
iret
out
inc
cwtl
add
mov
inc
daa
or
filds
sti
rclb
or
imul
and
mov
push
mov
jnp
push
ret
cmp
jl
into
add
mov
add
fcoml
loope
test
add
call
adc
or
xchg
or
inc
push
pusha
xor
mov
fnstsw
bound
xchg
lods
lods
lea
xlat
mov
pop
popa
jae
in
repz
cli
repnz
mov
cwtl
shlb
sub
push
jg
test
pop
lods
in
xchg
mov
push
mov
bound
outsb
sub
and
and
lods
push
ret
lods
js
add
repnz
out
jge
outsb
into
xorl
scas
rcr
lods
inc
fdivs
hlt
adc
xchg
and
hlt
les
lret
pop
int3
xchg
int
xchg
sbb
dec
stos
icebp
mov
mov
in
cmp
adc
js,pt
jae
push
jecxz
pop
dec
insb
ja
cwtl
sub
push
fidivs
daa
pop
test
gs
push
xchg
mov
mov
xchg
ret
jae
repnz
inc
ffree
cli
and
xchg
pop
push
push
aas
xchg
lods
imul
fiadds
enter
iret
mov
movsl
ret
xchg
mov
cmc
and
enter
std
or
push
scas
inc
inc
and
mov
inc
mov
jle
jno
cwtl
aas
jno
fbld
sub
mov
out
mov
repnz
fwait
and
fwait
xor
mov
out
jns
fsubrp
stc
fwait
mull
jb
add
fidivs
mov
pop
lods
fdivr
jl
push
and
or
rcrb
xchg
jp
por
push
mov
scas
int
add
int3
xchg
fildll
in
xor
les
clc
cltd
bound
xchg
lods
rcrl
fwait
adc
jg
add
jnp
stos
rsm
jle
and
enter
push
mov
cmpsl
xchg
sbb
adc
cmpsb
xor
fcmovnu
aas
mov
insb
sbb
adc
sahf
jmp
mov
cltd
xchg
lcall
dec
dec
arpl
xchg
scas
xor
scas
cli
dec
and
fisubrs
push
out
jg
test
jl
mov
adc
in
test
jnp
xor
fs
pop
push
push
push
repz
ljmp
out
add
test
inc
dec
and
pusha
mov
and
inc
sbb
mov
aas
ret
sbb
pop
jo
lods
inc
stos
push
adc
ror
and
sbb
jge
rorb
insb
in
and
adc
stos
lcall
inc
sbb
pushl
inc
push
xchg
and
xor
mov
orl
fdivrs
jg
lcall
ret
ds
inc
push
test
jg
mov
jb
cmp
and
mov
lret
push
push
jl
inc
adc
stc
and
iret
negb
popa
lods
lods
loop
scas
jno
jl
dec
push
mov
test
out
push
loope
mov
and
push
pop
push
dec
pushf
jae
mov
jp
xchg
jmp
cmp
jge
xor
adc
push
fisttps
into
sub
in
ss
cld
jbe
test
mov
xchg
shr
scas
xor
cmpsl
mov
addl
rep
pop
cmp
dec
jle
push
mov
fbld
jns
shrb
mov
iret
mov
repnz
sar
flds
popa
adc
arpl
scas
aaa
xchg
mov
ja
shl
fstl
dec
or
cmp
jns
arpl
mov
xor
ja
jge
cmc
je
inc
cmp
pop
test
push
ljmp
and
pop
adc
mov
or
fwait
stos
outsb
jno
loope
lds
mov
sbb
xchg
jl
inc
fdivrs
dec
dec
dec
cmpsb
int3
jbe
adc
movsb
pop
test
sub
mov
sti
push
dec
loop
push
mov
shr
push
mov
int
pop
in
or
inc
mov
cld
fdivs
add
or
pop
scas
mov
dec
ljmp
or
cmpsb
cmp
pop
mov
mov
or
insb
jl
fistps
dec
mov
jb
dec
push
movsl
sarb
sbb
retw
rcl
lea
lahf
sti
adc
cwtl
test
xchg
dec
ss
fimuls
cmp
data16
inc
inc
cmpsl
jge
scas
sti
hlt
lods
out
or
leave
inc
dec
ljmp
jb
pop
adc
mov
xchg
lods
dec
int3
mov
lods
pop
addl
cli
arpl
pop
add
cli
int3
sub
or
pop
imul
je
cmp
pop
dec
dec
dec
ficoms
mov
jp
ss
jge
loop
mov
in
enter
inc
pop
sbb
cltd
lods
gs
iret
out
xchg
add
ljmp
mov
rcrb
dec
xor
imulb
xor
mov
sub
mov
data16
arpl
into
in
mov
nop
bound
call
cltd
adc
cwtl
push
or
into
rclb
fxch
push
addl
dec
and
mov
dec
aad
and
or
std
loopne
aam
pusha
pop
fbstp
mov
mov
test
and
mov
cltd
jns
in
fimuls
mov
cs
pop
stos
dec
fstl
mov
push
ljmp
call
dec
pop
mov
lahf
and
mov
and
push
xchg
loop
pusha
jns
sbb
pop
movsl
adcl
es
sub
mov
popa
aad
int
clc
or
lahf
pop
sub
movsl
sbb
adc
push
xlat
into
jnp
mov
mov
push
inc
jge
and
lods
push
outsl
inc
mov
push
mov
ljmp
scas
stos
jbe
add
pushf
sbb
arpl
push
and
mov
movsb
add
icebp
mov
mov
mov
imul
shrl
cmp
pop
lock
cltd
mov
jb
iret
push
adc
cmp
shrl
lahf
lret
push
inc
mov
and
xor
sbb
inc
lods
jle
dec
and
lea
movsl
mov
mov
movsl
sbb
and
xchg
mov
add
cmpsb
shlb
lods
mov
pop
pop
and
cmp
cwtl
push
mov
fldcw
ja
jnp
jns
fwait
jno
mov
lods
mov
mov
mov
or
adc
dec
mov
inc
jo
es
fcomp
push
sbb
sbb
jle
cmp
into
lods
mov
mov
xchg
aaa
or
or
aam
popa
fcmovu
mov
push
rsqrtps
pop
and
orb
push
jbe
rcll
inc
add
dec
jnp
dec
ficoms
out
je
sbb
add
pop
outsb
sbb
push
repz
inc
dec
xchg
push
mov
cld
sbb
out
jnp
xchg
icebp
stc
cld
add
fldcw
mov
adc
insl
lods
stos
sbb
ffree
hlt
xor
jl
popa
nop
mov
in
mov
dec
cwtl
mov
pop
dec
sub
adc
mov
or
sub
sub
mov
pop
out
loop
stos
fadd
out
movsl
cmp
loope
jnp
lock
mov
arpl
std
gs
and
adc
movsb
adcl
and
out
adc
mov
xchg
xchg
dec
mov
jmp
mov
icebp
out
leave
cltd
call
gs
imul
into
push
jg
sbb
push
cmp
inc
hlt
mov
or
add
fisubrl
lods
cld
push
mov
sahf
xor
and
arpl
into
mov
adc
fists
fs
scas
sbb
sahf
cmp
out
push
dec
mov
mov
jecxz
dec
or
xor
mov
ror
sahf
cld
xchg
lods
mov
sti
push
cmp
fwait
mov
mov
push
shrl
jl
push
idivl
ljmp
imul
lret
test
pop
sahf
xchg
loop
jno
jnp
mov
test
lahf
fidivrs
cmpsb
mov
fnsave
mov
cmp
icebp
xchg
mov
dec
lock
or
and
fs
xorl
push
and
adc
sbb
xchg
and
notb
into
push
xchg
sti
nop
out
in
std
pop
jge
jle
xchg
les
inc
mov
mov
lret
and
and
mov
jle
rorl
mov
clc
and
xor
imul
loope
cld
lea
push
cmp
dec
packsswb
add
ljmp
cmp
rcrl
fwait
cli
int3
es
and
mov
or
adc
push
pop
push
and
jle
insb
in
jno
out
add
sub
xchg
dec
xor
mov
push
push
adc
add
jmp
adc
inc
jg
call
jmp
nop
cmp
push
test
or
hlt
xor
and
imul
mov
outsl
lods
popa
in
loope
cmp
orb
jns
mov
scas
cmp
mov
iret
pop
int3
dec
xor
loopne
jno
arpl
xorps
jp
scas
jecxz
add
sbb
pop
mov
or
call
mov
test
jge
xor
pop
jp
lea
scas
push
mov
clc
std
or
push
cmpb
mov
mov
jnp
or
mov
jb
xchg
out
or
push
xchg
jg
pop
and
add
or
stc
insl
xchg
dec
jmp
sub
fistpll
inc
sbb
imul
daa
addr16
add
out
lods
fdiv
mov
jno
pop
lock
sbb
mov
es
js
decl
and
jp
int3
bound
jle
mov
in
cld
mov
das
or
mov
cmp
imul
mov
clc
add
and
mov
mov
test
and
dec
xchg
repz
icebp
jp
outsl
or
stc
sti
adc
push
xchg
mov
cmp
cmpsl
cmp
ficompl
mov
or
dec
pop
xorb
jnp
ror
push
mov
mov
stos
mov
cs
fiaddl
movsl
mov
in
imul
cwtl
add
mov
push
pop
sbb
mov
mov
nop
xor
std
stos
sahf
and
incb
mov
push
insl
ds
cmpsl
lea
mov
in
fildll
pushw
lods
out
orl
or
mov
xchg
arpl
outsb
add
dec
decl
add
lea
lahf
and
lcall
xor
fdivr
sub
loop
aam
or
dec
inc
xchg
cmp
mov
test
iret
into
testl
arpl
jnp
lock
or
ror
xor
shrl
adc
call
push
jnp
mov
jp
mov
jl
je
mov
arpl
outsl
mov
addl
addr16
pop
ret
sbb
sar
adc
int
jno
add
es
jl
adc
cmp
int3
mov
mov
pop
lods
xor
or
arpl
mov
into
mov
ljmp
adc
sti
sbb
or
pop
jo
mov
jo
jb
stc
push
lret
test
sbb
lods
mov
mov
in
and
jnp
incl
pushl
test
icebp
clc
inc
iret
jmp
enter
hlt
stos
divb
mov
adc
in
movsl
int3
outsb
scas
mov
mov
call
call
pop
pusha
dec
mov
sti
negl
pop
jnp
mov
fdivrl
mov
mov
xor
push
shrb
call
stos
adc
mov
imul
cmpsb
jge
subb
inc
arpl
out
pop
popa
sbbl
mov
stos
inc
inc
shl
push
dec
popf
popa
outsl
push
jb
lds
clc
test
sub
sti
xchg
mov
fdivrl
rcrl
mov
pop
jmp
and
pop
pop
mov
cmp
jmp
add
ror
and
stos
jns
imul
mov
pop
xor
mov
jo
ja
inc
pop
mov
lods
cmpb
sub
mull
rcll
inc
jb
dec
jno
mov
mov
hlt
mov
xor
lea
adc
mov
jmp
stc
ret
idivl
push
and
call
push
inc
and
mov
jnp
scas
lods
pop
cld
iret
cmp
fcmovbe
scas
dec
bts
test
sub
enter
dec
push
xchg
dec
and
test
es
add
mov
stos
mov
sbb
into
push
pop
inc
test
bound
out
inc
rcrl
lods
clc
cmp
clc
insb
or
or
sbbl
adc
insl
and
imul
or
out
add
sti
jb
lret
cli
std
int3
fists
xor
adcl
adc
leave
je
sub
stos
mov
push
or
lcall
cmp
imul
pop
add
fidivs
xorb
ret
pop
cmp
ss
pop
or
clc
lcall
push
hlt
xchg
out
xchg
mov
je
sub
pusha
inc
push
sti
idiv
addb
outsb
pop
std
and
add
not
push
loopne
iret
mov
dec
dec
popf
gs
sar
mov
bound
mov
xchg
or
cmc
ds
pop
and
sbb
jl
imulb
and
out
mov
js
push
bound
in
imulb
fsubl
add
cmp
sahf
sti
push
xor
cmp
aas
std
cmp
icebp
jnp
jg
push
inc
lock
out
cli
add
cmc
or
mov
sub
int
sarl
dec
push
push
push
shl
in
push
jns
mov
stos
rcrb
and
mov
popa
inc
lahf
stc
test
cmp
lods
jbe
icebp
xor
inc
push
push
and
negb
aam
xor
jp
hlt
xchg
pop
jnp
loopne
movsl
stos
out
lret
int3
push
int
jb
in
xchg
xchg
andb
movsl
mov
ret
lret
sub
popa
inc
lret
or
sub
mov
xchg
dec
or
ret
push
out
sbb
xor
pop
mov
enter
std
stos
lods
fldcw
hlt
xor
lret
pop
scas
inc
pop
dec
sub
sub
shll
xchg
cld
ret
pop
ficomps
jg
adc
movsl
xor
xchg
ja
add
out
or
call
xchg
mov
jb
pop
mov
sub
xchg
out
push
in
jae
inc
or
loop
imul
or
loope
stos
ret
repz
adc
mov
mov
hlt
mov
sbb
mov
mov
add
es
jp
mov
mov
dec
pop
jge
xchg
fistpll
data16
xor
out
pop
add
fisttps
and
inc
push
dec
sarl
and
repz
stc
sti
xchg
cmp
mov
pusha
and
adc
shl
aas
lret
and
bound
subb
sbb
shrb
loope
imul
jecxz
cld
cmp
xor
cltd
cli
addb
sbb
sub
dec
sbb
stos
cli
cmp
or
or
and
popa
int
js
ds
xor
popa
mov
jg
pop
inc
cmp
idivl
sbb
movsb
loope
mov
push
dec
xor
xchg
repnz
bound
mov
rclb
jmp
push
mov
lahf
sti
pop
lahf
mov
jmp
sbb
sbb
mov
add
xchg
sti
mov
pushf
xorb
lods
jae
jge
dec
lock
xor
orl
sub
sbb
jnp
xchg
ficoml
pushf
sti
inc
push
jge
lahf
lods
push
or
aas
test
pop
mov
inc
cmc
mov
inc
aam
ja
mov
xchg
add
rclb
test
push
sbb
leave
js
mov
imul
jle
scas
adc
fisttpll
push
lods
repnz
mov
in
int3
int3
mov
or
inc
dec
arpl
cmp
jmp
push
dec
insb
mov
and
gs
dec
loop
lcall
fwait
xchg
int
lods
fwait
add
add
cmpsb
sub
pop
add
or
xlat
int3
movsl
jle
jno
mov
out
xor
inc
iret
jl
push
hlt
inc
test
sysenter
pop
xor
adc
sti
push
cmp
in
sahf
daa
mov
sub
mov
test
repnz
add
imul
sub
push
cltd
fsubs
shl
or
mov
repz
xchg
test
test
mov
aad
xor
mov
rcrb
lods
daa
adc
lret
mov
aaa
dec
popf
lret
repz
push
inc
mov
jp
mov
jge
dec
add
sbb
cli
out
lea
xor
mov
mov
mov
inc
cmpb
loope
movsb
adcb
mov
clc
or
stc
jo
jbe
ja
mov
ja
adc
mov
jno
cmp
xorb
mov
jg
out
aas
fdivr
addb
cmp
icebp
ja
arpl
call
idivl
jbe
pop
imul
xchg
pop
cmpsb
pusha
add
mov
lret
jo
iret
and
icebp
mov
cs
jecxz
dec
roll
outsl
data16
inc
mov
xchg
pusha
add
cmp
inc
je
arpl
fwait
pop
jae
mov
fcoml
jns
or
push
and
cmp
and
ds
test
dec
out
pop
jmp
fisubrs
popa
push
addr16
lock
dec
jge
scas
mov
xor
mov
sbb
pusha
jb
push
mov
test
push
push
loop
mov
add
in
push
in
jo
movsl
gs
jg
or
mov
fdivl
rol
sti
pop
add
lods
cmp
pop
xor
jmp
addr16
and
and
cld
out
jecxz
icebp
mov
mov
add
daa
jp
xchg
push
lods
ljmp
cs
xchg
jmp
mov
dec
adcb
adc
cltd
mov
repnz
pop
aaa
push
adc
inc
push
pop
jp
gs
hlt
inc
jns
sub
dec
sub
movsb
fidivs
cmc
stos
fildl
push
cmp
cmp
inc
and
dec
rcl
scas
clc
sbb
test
cld
inc
adc
mov
jg
mov
clc
lods
es
data16
mov
dec
ljmp
pusha
inc
jle
in
mov
adc
jl
jmp
push
sub
aaa
add
jle
negb
jns
scas
enter
es
xchg
inc
or
push
out
mov
mov
and
mov
mov
inc
insb
sub
movsb
scas
gs
pop
dec
ljmp
out
arpl
push
imul
idiv
cli
push
shrb
jne
add
pop
addr16
bound
mov
int
fdivs
stc
jo
xchg
mov
or
lods
ja
out
mov
shlb
dec
jo
das
mov
xorb
adc
lock
sub
inc
push
and
mov
mov
jg
cwtl
mov
stos
jle
sub
sbb
push
mov
decl
lds
loopne
cwtl
cmp
add
jno
pop
lds
shll
xchg
adc
decl
adc
sbb
cmp
cmc
lret
cmpsl
inc
adc
es
mov
push
scas
lahf
jle
sub
mov
mov
js
pop
jecxz
aam
jo
ja
add
std
mov
es
mov
je
test
lcall
jmp
mov
push
sbb
push
jle
xor
into
outsl
mov
in
rorb
adc
pop
mov
xchg
jl
rclb
push
cwtl
push
sti
out
and
ja
adc
xchg
sti
test
call
cld
dec
inc
mov
and
inc
jns
mov
clc
mov
and
sbb
aas
je
arpl
jne
enter
rol
movsb
adc
cld
cmpsb
mov
movsb
pop
les
push
push
js
and
sbb
mov
icebp
or
fisttps
cwtl
js
and
mov
sbb
mov
mov
out
std
inc
or
xchg
pop
xchg
mov
bound
shll
cld
test
imul
cmc
pop
test
subl
jb
cmp
sub
lret
mov
call
js
out
lahf
push
and
mov
and
iret
sub
or
mov
sub
jecxz
mov
jo
cmp
out
dec
cld
imul
mov
sbb
cli
mov
bound
sbb
jo
test
addl
pop
adc
out
jge
repz
leave
sbb
add
jbe
sarb
push
pop
pop
cmc
out
bound
ja
xor
cwtl
sub
lea
push
jmp
and
enter
ret
test
mov
shl
xlat
lods
inc
imul
ror
add
test
subb
adc
xchg
mov
rcrb
mov
add
aad
mov
jmp
sti
stos
cwtl
orl
es
lds
push
xchg
inc
test
test
test
pusha
scas
out
icebp
sbb
out
push
mov
inc
icebp
cmp
dec
icebp
rcl
xchg
shlb
in
aaa
imul
lret
cmp
xor
pop
and
lea
or
clc
test
arpl
add
xchg
leave
xor
loop
lods
xor
sub
add
stc
jbe
jnp
mov
mov
or
xchg
adc
dec
lret
out
sbb
das
sbb
test
add
cld
or
dec
inc
rcl
in
jo
mov
inc
lret
mov
ret
ret
aaa
xchg
cmp
sbb
mov
shlb
push
push
out
xor
sahf
inc
jns
xor
xor
das
test
sbb
addr16
pop
and
jle
test
mov
cmp
inc
repnz
push
add
inc
cmp
jo
inc
fadd
and
mov
dec
cmpsb
jo
xor
push
mov
mov
xor
jecxz
mov
cmp
jge
xchg
scas
adcl
int
mov
ret
and
push
cmpsb
mov
inc
movsb
popf
ja
or
mov
loopne
add
ds
movsl
dec
lret
jp
mov
cmp
call
loope
and
cmp
sahf
sub
push
mov
dec
jnp
mov
sbb
jp
jbe
arpl
pop
jmp
int3
adc
push
daa
inc
inc
pop
cs
rolb
leave
or
xorl
pop
xchg
mov
stos
sub
adc
adc
or
and
dec
roll
push
mov
mov
ja
pop
ljmp
mov
push
mov
out
sbb
fisttps
mov
push
sub
add
cmpb
mov
pop
aad
dec
lea
lock
lock
cmc
test
add
std
lock
fdivp
push
ljmp
cs
push
jp
push
mov
xor
outsb
sub
cmpsl
sub
add
mov
jmp
bound
mov
mov
lea
leave
and
test
sbb
sbb
mov
pop
add
push
push
aam
sbbb
pop
cmp
imul
int3
shll
std
jns
mov
jbe
rorl
mov
mov
sbb
pop
loope
jmp
jecxz
bound
and
mov
dec
mov
sub
push
out
loopne
mov
cli
jg
sbb
xor
or
rcr
sub
dec
and
je
dec
sarl
jge
or
jp
and
mov
loop
loope
xlat
sub
mov
sub
push
adc
jmp
test
mov
and
fistpl
inc
rol
mov
mov
loope
and
das
pop
stc
lods
add
push
shrb
dec
arpl
std
cmp
mov
jns
adc
call
ffreep
jo
add
lahf
and
in
lock
inc
adc
pop
enter
jg
adc
xlat
sbb
std
je
add
faddp
mov
push
or
jbe
mov
push
shrl
movsl
and
btc
fdivrs
out
adc
test
pop
cwtl
adc
and
and
fsubr
jb
cmp
push
bound
fs
std
or
ss
mov
adcb
cmp
test
pop
movl
add
gs
out
leave
add
xchg
jae
les
xor
jecxz
pop
push
xor
or
sahf
ret
andl
in
mov
xor
test
xor
outsb
out
push
ljmp
out
or
bound
enter
add
fdivl
lock
int
lods
lahf
rorl
clc
out
test
xchg
and
scas
and
cmp
cwtl
pop
push
sti
inc
xor
repz
mov
sub
lods
push
shl
mov
popa
inc
test
cs
mov
cmp
jle
add
aam
sub
daa
cltd
stc
adc
jb
inc
mov
rorb
ds
imul
push
add
sbb
arpl
push
xor
sub
in
or
push
lock
fs
shrl
mov
or
lcall
pop
push
jmp
xor
mov
fsubrl
mov
in
nop
xchg
inc
fcoml
sbb
scas
fsubl
mov
sbb
sub
lcall
cmpsl
pop
dec
int
jnp
pop
push
nop
outsl
xor
mov
in
outsl
leave
outsl
inc
sbb
es
jno
pop
cmc
xor
fiaddl
or
mov
and
dec
ficoms
subl
lock
fidivs
gs
arpl
xchg
test
sahf
inc
test
and
inc
mov
pop
data16
out
push
in
jno
nop
add
int3
pushf
lcall
fdivr
cli
stos
out
cs
adc
pop
repnz
xor
and
adc
sub
mov
popf
pop
mov
rcl
hlt
mov
dec
xlat
push
jl
ret
cmp
pop
shlb
es
daa
ret
or
into
push
fldcw
ss
sub
cld
add
push
lods
mov
bnd
dec
cmp
movsl
and
adc
mov
aad
cltd
jo
mov
mov
sub
inc
ds
mulb
inc
push
inc
xchg
adc
mull
ss
pop
jg
dec
mov
and
sbb
repz
cmpsl
jmp
mov
cmp
pop
push
dec
stos
pop
lods
dec
leave
cltd
jp
enter
out
and
test
mov
dec
inc
push
sbb
pop
mov
addr16
sar
push
cmp
push
roll
push
inc
bound
mov
mov
pop
movl
pop
xor
and
gs
test
cmp
add
push
and
lods
cmp
push
adc
xchg
jecxz
push
test
fstl
dec
adc
xchg
inc
jge
popa
rol
inc
pop
mov
fs
fimull
aad
jmp
or
mov
idivl
adc
stos
scas
mov
fistpll
repnz
dec
mov
orl
adc
lods
les
mov
add
or
cli
rorl
xor
cmp
dec
cmp
jbe
fistps
add
cltd
dec
sbb
lldt
xchg
out
mov
push
xor
mov
insb
pop
cmpsw
mov
xchg
notb
lods
scas
push
mov
add
shr
data16
cltd
fdivrp
int
pop
jb
lahf
pop
movsl
sub
cmp
cli
inc
loope
sbb
inc
adc
or
jle
cmp
mov
movsl
sub
jb
dec
hlt
xor
repnz
or
jecxz
loope
arpl
inc
repnz
and
cmpsb
push
cmp
outsb
and
push
mov
cmp
outsb
lds
test
add
push
nop
idivb
pop
and
xor
scas
jp
mov
xchg
inc
jbe
adc
push
mov
or
adc
push
mov
movsl
ja
inc
stc
xchg
xor
xchg
cwtl
push
sub
dec
nop
push
and
aad
imul
sub
clc
es
cmp
xchg
cmc
add
insl
lods
push
test
mulb
mov
arpl
or
jp,pt
pushf
push
mov
popa
mov
pop
pop
cli
mov
int
pop
pop
ja
mov
data16
mov
dec
or
mov
dec
jnp
inc
rorb
xchg
cmpsb
push
ret
sahf
mov
dec
data16
test
add
daa
adc
aam
sub
xchg
xor
std
in
enter
jae
mov
cli
push
adc
xlat
xchg
cmp
xchg
pop
test
ficompl
mov
adc
enter
test
loopne
sbb
das
cmp
xor
outsl
aaa
xorl
hlt
ret
or
mov
xor
aaa
xchg
and
das
xchg
test
iret
aaa
jg
cmc
sbb
movsl
and
mov
inc
or
pop
mov
lea
lods
in
mov
icebp
push
and
mov
into
mov
inc
cmp
mov
push
imul
popf
das
std
cmpl
sbb
pop
sbb
xchg
inc
jp
inc
in
pop
fstpt
pop
jmp
mov
and
or
gs
fadd
aad
out
jnp
and
scas
cmp
mov
scas
mov
call
add
pop
jno
push
out
xchg
insb
or
addr16
ficomps
xchg
mov
cmp
sbbl
mov
mov
je
in
mov
or
xor
iret
inc
lahf
mov
aas
and
pop
and
mov
push
cmpb
mov
pop
cmp
or
adc
test
loopne
gs
in
pop
adc
lcall
xchg
mov
or
in
cmp
pop
sub
xor
repnz
addr16
cli
call
mov
push
mov
jecxz
mov
adc
mov
dec
add
sbb
test
pop
sbb
add
les
pop
cmp
push
test
divl
mov
push
push
mov
push
popf
cld
pop
fsubl
lds
sub
dec
jmp
mov
add
outsb
mov
jl
in
mov
stc
dec
sbb
dec
pop
push
pop
and
add
and
mov
ds
pop
xchg
xor
and
mov
ss
into
push
jb
jp
outsl
repnz
mov
mov
test
mov
cmp
icebp
rcrb
fiadds
scas
aam
inc
jmp
sbb
dec
jge
dec
gs
leave
sahf
pop
adc
aam
push
or
loop
test
sarl
dec
sbb
scas
push
or
aad
ss
xor
sub
ficompl
adc
dec
fucom
mov
fmuls
clc
aas
pop
xor
ds
cld
xlat
jo
push
sahf
xchg
push
scas
test
adc
mov
mov
adc
pop
ljmp
aaa
adc
or
aam
sbb
hlt
cmp
ja,pt
int3
xchg
push
adc
jo
std
sub
xor
adc
stos
add
jle
xchg
sbb
out
inc
sbb
and
cmp
movsb
sbb
cmpsb
pop
add
cmp
sahf
mov
xchg
or
cltd
or
xor
and
jb
call
test
nop
fdivrs
mov
cltd
int
ljmp
lahf
mov
and
dec
or
add
les
lret
leave
lahf
or
adc
sbb
xor
lcall
rol
test
popa
push
int3
je
cwtl
push
mov
mov
repz
fsubl
in
mov
jnp
int3
dec
adc
add
push
out
mov
xor
je
dec
add
pop
xchg
and
and
loopne
and
xor
pop
mov
cmpsl
lds
mov
dec
inc
and
jge
push
adc
xchg
add
push
xlat
dec
enter
dec
flds
rorl
sbb
ret
sub
add
daa
adc
mov
in
shrl
mov
js
mov
add
cli
hlt
and
jnp
pop
ljmp
inc
jns
cmp
and
fmuls
andl
rorl
popf
lds
and
or
or
fsubl
pop
or
call
inc
xchg
jg
mov
and
insb
push
mov
cmpsl
mov
fnstsw
push
lahf
pop
lods
aad
mov
test
iret
idiv
cli
rcrl
mov
push
das
arpl
hlt
aam
mov
fdivrs
fwait
arpl
insl
add
movsb
rclb
inc
add
mov
jmp
cmp
xchg
ret
lret
xchg
ret
mov
push
dec
cmp
mov
ret
mul
and
icebp
pop
mov
and
in
stc
mov
in
mov
mov
sub
dec
pushf
and
jmp
push
shll
cmp
sbb
aas
arpl
mov
call
cmp
push
or
lods
lock
movsb
ss
dec
pop
in
mov
xchg
sbb
jmp
loop
fadds
mov
mov
fs
pop
insb
lcall
hlt
fldenv
ds
popa
push
inc
xchg
xchg
ljmp
xchg
sub
pop
int3
rcll
mov
in
sbb
mov
cltd
jno
mov
push
dec
xchg
pop
lea
aad
aam
insb
ss
hlt
and
inc
cmpsl
add
movsl
dec
cmp
dec
xchg
lock
or
pushf
addr16
xchg
enter
leave
les
mov
dec
mov
dec
and
sahf
mov
stc
sub
xlat
jcxz
push
aad
jle
loop
mov
imul
jge
inc
aaa
and
adc
and
pop
fbld
mov
cmp
sbb
es
out
cmpsb
add
cmp
xor
cmp
ret
hlt
push
add
push
pop
or
divb
testb
sahf
mov
sbb
fbstp
and
sahf
in
push
gs
test
les
pop
call
mov
and
insl
sbb
or
dec
mov
repnz
sub
cmp
sub
aad
cld
pop
repz
dec
pushf
movsb
mov
sub
mov
cmpl
cmpsl
cmpsb
adc
xor
push
mov
lret
je
xor
sbb
stos
xchg
mov
stos
imul
sub
add
insb
test
xchg
jp
addr16
movsl
in
dec
jnp
dec
and
push
inc
push
stc
mov
mov
lcall
das
out
push
ja
movsb
push
inc
sub
cmp
mov
pop
call
sub
mov
stos
push
push
mov
stos
pop
pop
aam
cmp
jno
push
jecxz
mov
cli
into
jl
add
out
xchg
pop
push
mov
push
fs
inc
inc
stos
sub
cli
xor
fs
xor
imul
sbbl
ficomps
push
mov
mov
repz
sti
test
xchg
xor
aaa
or
mov
aam
push
cmp
sub
subl
and
mov
push
cmpsb
mov
adc
sbb
lock
aam
inc
jle
jne
pop
dec
out
mov
int
pop
les
mov
dec
jno
mov
sub
loopne
push
repz
inc
add
cmpl
xchg
dec
int3
xor
push
movsb
inc
aad
or
jnp
lds
pushf
cld
mov
iret
xsha1
cmpsb
dec
pop
shll
fs
shl
inc
inc
mov
stos
es
int3
push
aas
hlt
dec
xchg
int
jp
mov
lods
mov
lds
test
in
popa
ret
cli
add
lea
iret
add
dec
ds
shll
sub
mov
inc
and
ljmp
cmp
mov
imul
push
andb
in
int3
and
insl
in
pop
pop
add
push
orl
xchg
fstpt
sbb
aad
pop
test
xor
sbb
pop
jae
mov
mov
je
sbb
sahf
in
mov
into
sbb
je
xor
rcrl
in
inc
mov
pop
in
add
push
pop
or
mov
add
mov
daa
cltd
mov
ljmp
lods
xor
sub
and
xor
mov
xchg
out
inc
jmp
lock
insb
or
jnp
push
je
idivb
les
jecxz
push
jecxz
call
pop
mov
pop
stos
push
aaa
xor
aaa
sbb
in
jns
mov
aas
lahf
int3
mov
sti
dec
jbe
jo
xlat
lcall
cmp
rcrb
call
lahf
mov
and
jno
xor
dec
cli
lcall
cmpsb
xchg
jae
sub
or
popf
in
jle
and
sarb
xor
aam
sub
xor
ds
shl
add
shrl
jne
daa
cs
or
sub
jl
push
mov
push
sbb
sbb
cmp
mov
push
mov
lds
mov
push
xor
jl
mov
sti
pop
pop
dec
and
mov
push
shlb
push
xchg
mov
jae
mov
jge
rolb
and
ss
push
testb
out
sub
icebp
inc
cmp
rcr
or
outsl
jmp
inc
lret
daa
adc
icebp
sbb
jbe
enter
inc
xchg
cmpsl
int
mov
fucomi
push
add
mov
push
aaa
add
subl
lret
pop
hlt
sbb
arpl
sub
pop
out
sub
cmpb
notb
xchg
fistpl
repnz
int3
inc
stos
cmp
xor
aam
lods
push
xchg
js
pop
adc
data16
dec
mov
dec
cmpsl
mov
pop
test
je
mov
and
into
mov
mov
push
daa
cmc
sub
pushf
scas
dec
or
xchg
adc
insl
cli
mov
jae
fcoms
enter
xchg
adc
pop
lea
mov
popf
push
mov
mov
inc
mov
mov
fsubrl
in
jnp
xchg
sti
mov
scas
cmp
test
or
sub
pop
aad
jl
subb
cmpsl
mov
add
dec
out
out
lahf
repnz
push
sub
leave
push
xor
test
jp
mov
xor
sbb
repnz
clc
lahf
aas
ret
lods
jae
cmp
push
ja
out
into
add
or
mov
mov
subb
shll
les
aaa
or
add
repz
insb
dec
push
add
in
les
xor
sub
sbb
cmp
popf
in
adc
mov
iret
adc
dec
adc
push
add
adc
cmp
sbbl
inc
or
mov
inc
mov
pop
ja
dec
jbe
or
ret
std
and
shll
inc
mov
les
enter
daa
lods
stc
rclb
pusha
or
mov
jle
ja
arpl
arpl
ret
xor
pusha
push
xorb
roll
or
fs
popf
jg
dec
arpl
jnp
bnd
inc
loopne
mov
jns
add
mov
sbb
arpl
add
mov
push
pop
leave
cmpsb
insb
mov
cmp
mov
xchg
mov
mov
cmp
out
out
ljmp
sbb
les
sub
add
xchg
stos
sub
add
negb
jae
cmp
inc
dec
pop
inc
ret
add
push
aaa
pusha
push
xchg
addb
ret
lds
adcl
mov
pop
loop
xchg
hlt
jae
std
sub
cld
ss
mov
mov
in
sub
call
in
push
ret
pop
push
xchg
add
jp
loop
mov
gs
aad
cli
or
test
xchg
cli
push
mov
ds
xchg
xor
jl
and
imul
dec
orb
in
xchg
adc
mov
bound
mov
icebp
xor
mov
out
repz
rcl
fdivl
popf
inc
or
xor
cmp
jmp
fmull
push
add
hlt
scas
cmp
enter
jp
xlat
test
lret
dec
jo
inc
loope
mov
mov
mov
orb
jns
rclb
add
rcll
cmpsl
into
dec
xor
fs
mov
cmp
lock
xlat
iret
stc
mov
inc
add
shrl
sahf
sbb
add
imul
adc
in
pop
jb
cmp
mov
inc
lods
push
call
inc
loope
dec
jge
dec
bound
das
mov
mov
or
mov
cmpsb
adc
rcl
scas
mov
push
cmp
dec
repz
push
mov
jb
jo
movsl
or
mov
roll
sti
jecxz
das
outsb
sbb
dec
arpl
lahf
xchg
dec
andl
inc
stos
rol
in
movsl
icebp
mov
add
mov
bound
je
jp
mov
in
push
mov
and
dec
lock
mov
xor
adc
xor
daa
mov
cmp
fsubs
outsb
stos
nop
inc
pop
adc
pop
push
std
sub
pop
pop
arpl
dec
pop
mov
sbb
add
movsb
fimuls
xor
loop
arpl
sbb
stos
leave
inc
cs
out
mov
or
cwtl
jnp
aaa
and
sub
xor
cmp
in
insb
xor
adc
sarl
rclb
mov
into
fwait
mov
inc
sub
movsl
inc
dec
arpl
add
stc
push
mov
addl
fs
sub
xlat
adc
es
in
stc
in
sub
push
and
lret
sub
rcll
movsl
lods
repnz
pop
push
sub
or
mov
mov
jge
mov
or
xor
js
push
mov
outsl
insb
or
jo
sbb
jle
in
dec
add
inc
pop
cmp
push
or
sbb
or
lock
leave
adc
xor
jle
sub
cmp
push
push
aam
pusha
pop
cltd
add
push
mov
mov
mov
nop
push
out
add
iret
aas
enter
dec
test
add
cmc
sub
cltd
mov
std
and
push
adc
jge
push
add
push
cmc
push
sbb
lds
mov
xchg
xchg
mov
imul
shlb
imulb
aad
jp
div
or
lock
cltd
mov
movd
mov
sahf
stos
sbb
ss
icebp
sbb
aaa
push
lret
push
loopne
pop
inc
jae
stc
ja
mov
orb
subb
pushf
adc
inc
mov
insb
cltd
sti
sbb
arpl
mov
push
in
enter
add
lods
jns
mov
or
lea
mov
xchg
mov
leave
sbb
out
aas
xchg
divb
fistl
insl
stos
jl
in
fiaddl
int
xor
outsb
inc
sahf
fisubs
loop
in
mov
les
sub
cld
mov
jle
or
and
outsl
push
aad
push
mov
out
rorl
push
addr16
bound
pop
mov
jle
mov
enter
adc
dec
out
pop
lods
cltd
repnz
fwait
xchg
mov
ss
mov
fidivl
sbb
sbb
cltd
dec
dec
and
je
xchg
ljmp
aas
lods
pop
shlb
xchg
dec
dec
ret
add
cld
popf
cld
jle
mov
or
mov
cmp
pop
cld
jb
shll
push
push
pop
dec
xchg
inc
or
mov
cmpsl
loop
ss
sbb
xor
out
inc
lahf
das
and
popa
into
jo
lret
rcl
roll
or
push
call
jnp
push
cs
sbb
in
xchg
adc
ror
mov
dec
das
orl
mov
cli
add
iret
bswap
push
cmc
inc
movsw
fs
mov
xor
or
fisttpll
adc
jg
jg
push
mov
push
and
pushl
and
jge
jl
andl
subb
push
test
xor
fwait
hlt
movb
je
and
cli
aam
dec
stc
adc
pop
push
leave
jne
xchg
push
fwait
adc
daa
xorb
add
in
xchg
and
jecxz
out
lods
xor
fbstp
mov
enter
jmp
and
cmp
addl
mov
cmpsl
mov
jbe
cmp
addr16
aaa
mov
xor
and
cwtl
in
mov
pop
pop
or
jne,pt
xchg
loopne
xchg
ret
xchg
in
clc
rorb
lea
cltd
and
cwtl
inc
cmp
push
adc
add
movb
stos
repz
xchg
adc
ret
mov
add
out
rcl
mov
sti
lret
arpl
inc
fsubp
call
or
sub
cmp
mov
clc
push
dec
ss
insb
outsb
cmovno
lods
xor
xchg
mov
sbb
js
and
add
dec
push
outsb
out
jmp
clc
test
ja
mov
lods
stos
adcl
rolb
xchg
loop
jo
push
test
std
adc
data16
ficomps
fdivs
psrlw
cmpsl
add
lock
hlt
dec
inc
and
sti
inc
insl
out
pop
xor
test
jecxz
xchg
adc
jecxz
jge
test
shlb
aaa
mov
test
lret
stc
push
mov
xchg
mov
in
test
mov
xor
insl
dec
dec
cs
fmulp
push
insb
adc
or
insl
push
inc
xor
xchg
sbb
test
dec
add
movsb
loopne
fs
imul
cmc
xor
and
fisubs
lret
pop
fiadds
push
imul
pop
repz
movsl
xchg
scas
rcr
add
or
inc
push
sti
sbb
sbb
pop
iret
push
iret
or
aas
test
addr16
sbb
addb
mov
xor
adcb
mov
vrcpps
insb
nop
mov
mov
dec
and
sbb
pop
in
ss
es
or
cli
dec
rorb
inc
test
ror
jl
and
cld
das
or
rolb
and
jne
and
mov
push
xchg
divps
mov
push
loop
sub
xchg
lahf
bnd
clc
pusha
pop
sbb
mov
push
add
inc
jns
dec
xor
sub
in
ds
les
jle
fcomi
fildl
sbb
pop
rcl
xor
je
enter
mov
sbb
dec
insl
push
mov
sub
fs
subb
and
sbb
pop
mov
sbb
mov
cltd
popf
cwtl
xor
mov
and
shll
cmp
sahf
pop
arpl
jnp
push
xor
pop
add
fs
test
out
scas
push
jle
cmp
mov
lock
cmc
inc
mov
sbb
out
call
dec
mov
cmpsb
daa
imul
loopne
jno
push
add
iret
mov
inc
fistps
xor
orb
push
loope
jg
and
xor
lahf
inc
push
cltd
push
lods
ret
loope
pop
pop
aas
scas
sbb
mov
icebp
xchg
icebp
jo
push
inc
outsb
mov
insb
mov
xor
add
stc
insb
xor
mov
cwtl
clc
push
xor
hlt
lock
cmp
xor
mov
mov
xlat
popf
dec
ds
jno
std
outsl
sub
inc
jp
add
jmp
and
out
enter
lret
hlt
test
nop
insb
push
fdivrs
xchg
mov
inc
mov
sarl
mov
mov
sti
sub
test
repnz
xor
xchg
xchg
mov
add
lret
xor
ss
inc
dec
in
pop
lahf
adc
push
sbb
cwtl
jl
data16
mov
xor
cmp
push
or
jae
pop
mov
pop
jmp
test
cmp
sub
mov
mov
push
mov
add
sbb
in
outsl
xor
pop
cmp
clc
movsb
sub
pushf
in
cs
cmp
arpl
rclb
mov
xchg
mov
pop
outsb
push
out
shll
inc
cmp
scas
add
insb
mov
xor
xor
or
adc
inc
dec
mov
push
pushf
test
lods
loop
das
adc
add
add
popf
je
or
lahf
adc
xchg
mov
sub
cs
int
jg
xchg
int3
in
mov
or
mov
push
mov
idivl
xor
mov
es
adc
mov
push
lret
or
xchg
xchg
inc
or
test
jbe
daa
mov
inc
jecxz
cmc
ss
fwait
jbe
pop
jle
popf
dec
jnp
sbb
in
add
enter
inc
mov
insl
stos
xor
mov
mov
rcr
push
mov
sahf
mov
in
subb
push
dec
je
mov
mov
inc
jle
push
mov
cmp
jae
jnp
dec
dec
jae
loopne,pn
push
aas
test
repz
out
aas
adc
shlb
lods
int3
and
xchg
fadd
jg
incl
xor
movsb
bound
pop
into
loope
xor
pop
cmp
fdivrs
xchg
enter
xchg
fwait
shrl
dec
jl
in
addb
jmp
xor
push
xchg
pop
fmulp
data16
push
int
xor
aas
push
add
xor
out
clc
pop
xor
push
or
jg
std
hlt
push
sub
cmp
enter
ds
in
xchg
mov
data16
adc
aam
fnstcw
cwtl
pop
xor
fs
xor
or
pop
dec
daa
hlt
icebp
and
push
jnp
pop
das
inc
rep
jnp
enter
xor
lods
fs
mov
fnstsw
add
repz
movsl
inc
add
xor
add
mov
das
sub
adc
out
jnp
fs
push
dec
scas
cltd
les
cmpsb
jecxz
jb
jne
repz
lods
int3
adc
inc
jmp
jp
sarl
xor
jo
dec
push
xor
cmp
push
sub
or
outsl
jl
cmpl
into
lahf
xor
daa
fsubr
and
jecxz
mov
push
std
cli
mov
push
leave
pop
jl
mov
lret
or
arpl
loopne
sahf
cmp
sub
dec
or
cmp
cmpsl
push
pusha
dec
push
pop
cmp
bound
or
int
ljmp
pop
test
adc
add
add
stos
aaa
orl
stos
and
mov
mov
or
shlb
xor
loope
dec
lcall
push
out
mov
int3
jns
lds
fidivs
cmp
xchg
xor
and
test
pop
testl
mov
mov
mov
jnp
pop
or
sub
and
pop
jnp
jns
hlt
mov
lahf
push
jne
sub
out
test
adc
sbb
push
adc
insb
push
jecxz
add
push
sti
jl
mov
and
das
jns
cmp
inc
xchg
jge
aam
adc
cmp
xchg
cli
mov
push
xor
repz
test
push
cmpsl
xchg
xchg
mov
in
shll
push
adc
add
or
sub
push
stos
push
loope
xor
ja
push
hlt
lret
mov
repnz
lret
ja
stos
scas
dec
sbb
sub
in
pop
inc
fists
mov
sbb
and
mov
add
inc
popa
ror
add
test
ficompl
push
push
das
jnp
jge
pop
adc
test
inc
jg
push
es
and
mov
jno
dec
pop
inc
fwait
sbb
cmc
dec
idivb
xor
movsb
fistpll
addr16
xchg
loopne
jecxz
dec
lea
sti
and
and
inc
in
nop
lahf
roll
push
and
fnstsw
shlb
dec
jp
lret
inc
pop
jmp
lds
or
dec
fisttps
clc
add
jbe
mov
push
cmpsl
rcl
dec
dec
in
das
fwait
jno
lods
pop
mov
mov
data16
dec
push
stos
pop
pop
mov
sahf
in
pop
inc
fisubs
insb
inc
jle
stos
stos
xor
add
adc
xchg
lret
scas
mov
jmp
int3
cmp
dec
or
loope
int
xor
mov
push
dec
push
inc
enter
jbe
loop
out
inc
les
iret
and
cmp
dec
mov
adcl
jmp
hlt
stc
imul
out
mov
call
adc
inc
aam
and
rol
mov
dec
sarl
jmp
mov
pop
ss
jg
mov
or
lods
lret
and
xchg
add
fmuls
adc
arpl
push
mov
pop
stos
dec
addr16
mov
xor
jle
mov
sti
dec
test
mov
dec
fwait
sub
mov
or
lcall
pusha
cmp
xchg
stos
ret
out
and
inc
lods
jecxz
pop
pop
insb
mov
jmp
push
mov
frstpm(287
dec
mov
lret
sub
movsl
pop
xchg
xor
cmc
lods
push
loop
or
cmp
sbb
and
adc
mov
out
addl
cli
push
sub
mov
xor
mov
sbb
inc
pop
xchg
lea
jmp
arpl
or
mov
sub
xchg
shll
push
xor
inc
lods
andl
cs
xchg
lcall
mov
mov
pop
sbb
pop
push
pop
rcr
push
lahf
jmp
mov
mov
pop
pop
adc
scas
pop
and
into
sub
add
pop
repz
bound
dec
out
ss
push
in
popa
cmp
xchg
jp
cli
jno
dec
pop
pop
sbbb
idivb
xor
stos
pop
add
cld
jle
add
fsubp
push
mov
mov
add
rcl
sbb
inc
popa
mov
fbstp
mov
int3
movsl
push
movsl
jp
mov
jge
pop
js
xor
pop
leave
popa
xor
jns
das
imul
cmp
stos
xor
dec
sar
leave
rclb
pusha
lahf
mov
mov
xor
add
faddl
dec
dec
mov
jl
and
xchg
test
aad
icebp
jns
mov
add
test
pop
out
sbb
jo
mov
mov
mov
pop
jne
fidivl
inc
mov
push
arpl
stc
shlb
push
push
shl
popa
lods
xchg
sub
rcl
scas
mov
fsubrl
mov
mov
stos
mov
pop
stos
aas
xor
ficoml
es
call
repz
imul
push
and
inc
add
ss
or
cmp
aaa
pop
ss
in
jo
pop
ret
or
jge
jp
and
shlb
cmp
cwtl
ja
push
rcrl
dec
lea
scas
stos
mov
ja
pop
movsb
lds
push
and
adc
and
xchg
push
fildll
push
xchg
mov
xchg
pop
push
test
mov
ja
sbb
cmp
mov
repz
mov
push
push
or
mov
sar
fsubp
or
xlat
push
or
loope
popfw
xchg
fisttpl
add
cmp
into
or
xchg
mov
enter
test
popa
lods
js
mov
cs
cwtl
add
pop
mov
mov
cmpl
dec
or
test
enter
mov
push
mov
aas
int3
add
add
je
jg
or
xchg
mov
push
fistps
aad
ljmp
testb
pop
int3
pushf
sbb
or
cmp
lcall
cmp
mov
bound
adcl
and
or
ss
call
loopne
push
mov
movsb
jp
jno
or
testb
lcall
add
sti
mov
lret
in
js
or
mov
addr16
xchg
test
cmc
xor
sahf
push
jge
mov
cmpsl
cmp
stos
loopne
xchg
mov
call
adc
sbb
shll
push
ret
sar
pop
add
vaddss
push
mov
inc
cmp
jb
mov
cwtl
and
inc
lock
addb
or
xor
ja
lret
mov
stos
sbb
xchg
test
pop
xor
subb
sub
pop
pop
das
and
call
jns
or
push
and
jmp
push
jns
mov
sub
call
ljmp
xchg
xor
ret
shr
jb
shrb
push
push
push
mov
pop
fists
jmp
cmp
add
lret
out
pop
repz
push
sbb
jecxz
push
mov
adc
ss
int3
push
or
cli
cwtl
pop
mov
add
mov
or
push
fwait
cmp
cmp
push
sahf
inc
shlb
pop
jecxz
insb
inc
ja
cmpsb
in
movsb
adc
arpl
fdivr
sub
dec
xchg
cmp
movsl
sub
shll
fucomi
lret
mov
inc
adc
pop
pop
sub
pop
sbb
or
adc
icebp
icebp
jl
push
jle
inc
dec
fnstsw
add
faddp
pop
inc
lcall
lahf
mov
push
lahf
sub
add
stos
jmp
nop
int3
add
jp
lods
je
movsl
adc
jge
mov
and
mov
push
aad
inc
jmp
cmc
inc
stc
and
bound
imul
fs
mov
xor
adc
fistpl
shll
inc
pop
cmp
push
cmpsb
shlb
xchg
add
and
xchg
pop
sub
mov
cld
jo
gs
ljmp
xchg
loop
lods
cli
and
inc
cmp
cwtl
jle
popl
addr16
icebp
xorb
mov
and
xchg
adc
or
add
dec
dec
pop
aas
bound
cmp
pusha
mov
pop
ss
push
cmp
cmp
stc
and
cwtl
pop
iret
push
pop
in
popf
sarl
js
out
xor
insl
js
idiv
dec
clc
insl
test
xchg
popa
clc
shlb
and
pop
jae
pusha
xchg
push
mov
push
daa
and
mov
dec
push
pop
sub
jmp
pop
push
rorl
pop
pop
pushl
aas
or
jl
sub
adc
aam
push
dec
in
pusha
cmp
mov
jno
mov
fdivr
jecxz
loop
inc
lds
mov
outsb
mov
fistpl
dec
xor
cmp
lret
stos
shl
test
and
xor
movsb
sarb
cli
out
in
pop
orb
sub
and
mov
dec
sub
and
push
ss
outsl
outsb
inc
mov
stc
lods
add
dec
cmp
inc
and
ret
icebp
xchg
arpl
mull
cli
add
cmc
lret
shll
popf
add
mov
ljmp
cmp
shl
dec
fwait
jb
mov
sub
dec
mov
sbb
xchg
insb
test
cmp
pop
pop
sbb
insl
mov
movsb
inc
lods
push
rcrl
in
in
iret
mov
les
stos
push
pop
or
jmp
cmpsl
movsl
in
pop
xor
dec
imul
dec
imul
popa
jnp
xchg
jge
push
xchg
xor
xor
test
stos
add
popf
xchg
pop
sub
es
pop
mov
xchg
test
call
sbb
pop
gs
and
cli
loop
call
sbb
rol
test
addl
pop
mov
mov
rcrl
pop
pop
mov
loopne
sub
pop
ds
inc
mov
mov
jno
xchg
add
push
adc
pop
adc
dec
fistl
in
xchg
mov
imulb
scas
mov
arpl
xor
stos
mov
cmp
repz
sub
iret
arpl
loop
jg
pop
in
xchg
add
mov
adc
mov
push
call
mov
je
iret
addr16
lahf
adc
mov
pop
loopne
pop
xor
jge
xor
ret
sub
cs
nop
cmp
push
jmp
loop
cmp
in
cmp
jno
xchg
lret
jecxz
mov
dec
aas
and
out
mov
push
add
or
test
imul
mov
jnp
out
rorb
ljmp
bndstx
pop
jae
mov
dec
mov
cld
cs
mov
pushf
cltd
or
inc
and
repnz
call
mov
pop
xor
cmp
jecxz
ja
call
xchg
push
xchg
in
jbe
mov
pop
adc
xor
sub
push
inc
sbb
dec
inc
loope
dec
xor
inc
cmp
les
adc
jne
or
int3
jge
mov
rolb
incb
mov
std
add
bnd
or
enter
mov
jl
sub
mov
int
jle
mov
dec
adc
pop
jge
inc
cld
mov
into
sbb
pop
je
aas
in
xchg
or
leave
imul
cwtl
lods
test
sub
push
cmc
std
cmp
add
cmp
xor
push
adc
popa
and
test
data16
add
lret
inc
sbbb
les
mov
sbbb
test
clc
gs
in
sub
testb
sti
xchg
pop
repnz
gs
cmp
adc
or
inc
out
fbstp
mov
and
lahf
lahf
sarb
fwait
push
mov
fst
jge
je
lret
pop
mov
mov
sub
add
out
lea
add
mov
aad
dec
movsl
mov
js
or
pop
sub
bound
pop
mov
iret
jl
outsb
cmp
push
je
mov
push
mov
sbbb
or
mov
dec
mov
and
inc
loope
mov
mov
fldcw
pusha
pop
add
and
inc
idivl
cmp
sahf
sub
ja
add
js
mov
cs
in
sbb
mov
add
jo
xchg
sbb
cmp
or
push
mov
sahf
pop
sbb
arpl
es
jle
pop
xchg
in
and
cwtl
test
pop
lret
or
int3
loopne
xorl
pop
and
test
mov
mov
cmp
stos
push
xor
fcoml
je
mov
cmp
jl
add
fdiv
lea
ja
js
fdivrs
mov
daa
in
clc
lahf
in
inc
and
cs
out
aaa
lret
xor
popa
xor
push
mov
xchg
loopne
lods
sub
adc
repnz
mov
cmp
out
rcpps
lock
and
push
ljmp
ss
dec
ret
lcall
push
cmp
cli
test
mov
fwait
outsl
in
mov
jnp
mov
out
pop
mov
dec
push
clc
mov
sahf
in
mov
or
popa
outsl
push
mov
and
mov
push
repnz
lea
mov
addb
cld
push
data16
and
mov
clc
icebp
adc
test
mov
mov
mov
jecxz
pop
rorl
shrl
test
cli
scas
pushl
and
popf
es
cmpsl
mov
xchg
jnp
sbb
adc
aam
repnz
push
andl
divb
stos
cmp
rcl
sar
jp
cwtl
loop
dec
cs
cmp
loop
push
call
adc
fidivs
inc
or
rsqrtps
mov
pushf
movsl
pop
in
xchg
jmp
mov
sbb
mov
cmp
jecxz
mov
js
mov
and
dec
cmpb
ja
stos
xchg
add
jp
and
inc
inc
clc
repz
inc
or
push
loopne
dec
xor
aaa
pop
jmp
cli
mov
push
addr16
push
in
add
sub
jp
bound
mov
push
xor
popf
dec
cmpsl
fdivrl
loop
rcll
fcoms
fs
jle
xorb
xor
cmpsb
push
arpl
js
xor
das
pusha
mov
and
jbe
jb
cs
incb
cli
inc
adc
push
jbe
inc
and
mov
ljmp
add
mov
dec
cmpsb
mov
imul
xor
sarw
cmp
add
loop
into
mov
cmp
dec
jbe
fbld
mov
ljmp
sub
mov
jno
push
inc
cmp
dec
out
outsb
mov
mov
xchg
movsl
and
test
adc
pop
aad
lea
jg
cs
xor
daa
xor
adcb
sbb
test
mov
scas
sbb
popl
and
pop
loopne
add
cmp
mov
rcrl
out
je
ja
popa
test
outsb
xchg
dec
xchg
or
cs
xlat
adc
push
ficoml
test
mov
sbb
xlat
popa
fildl
jl
arpl
test
enter
cmp
mov
cs
or
sbb
xor
mov
pushf
push
pop
ficomps
or
add
mov
mov
outsl
lret
add
mov
push
pop
insb
dec
mov
sbb
xlat
inc
pop
cmp
dec
pop
or
je
idivb
stos
lods
push
in
inc
pop
cld
mov
jge
xor
adc
push
mov
and
jecxz
cld
dec
push
test
jle
call
xor
and
mov
sbb
and
pushf
push
xor
mov
stos
outsb
mov
cli
jl
ljmp
sub
xlat
insl
push
roll
mov
cmp
and
ret
xor
jae
dec
mov
cmp
sarb
lods
sarl
cwtl
and
cmp
sarb
push
out
mov
xor
loop
dec
test
aad
mov
xor
inc
lods
in
fmull
dec
fwait
adc
daa
mov
icebp
test
sub
inc
xlat
aaa
push
cmp
xor
into
mov
ja
loopne
adc
pop
and
push
dec
pop
inc
in
call
push
mov
mov
and
or
jmp
sbb
lds
jle
loope
ficoms
cmp
xchg
mov
mov
in
fstpl
adc
test
test
push
mov
notl
nop
aam
cltd
mov
xchg
aad
mov
ljmp
xor
test
and
inc
mov
jns
inc
stc
sbb
repnz
fwait
mov
imul
je
mov
dec
inc
ds
out
dec
pop
fldenv
mov
mov
jmp
mov
dec
mov
mov
mov
push
or
into
jb
xor
inc
mov
mov
dec
test
cmc
call
mov
dec
pusha
aam
lods
call
stc
inc
push
dec
shrl
mov
or
notb
push
stos
xchg
ja
mov
cmp
imul
push
or
sub
ds
push
ret
jle
xchg
sbb
mov
and
adc
mov
pop
pop
inc
sub
mov
movsl
xchg
xchg
xchg
inc
or
lds
jmp
lock
test
bound
ds
sbb
jns
dec
add
imulb
pop
xchg
std
adc
hlt
mov
cmp
jp
in
insb
add
cmp
mov
cmp
pop
ficoml
orb
inc
push
lods
adc
test
push
push
jae
adc
push
push
ret
mov
add
std
cltd
cmp
adc
xchg
inc
dec
aam
ficoml
pcmpgtb
lahf
fwait
push
daa
rorl
cmp
dec
jecxz
and
ja
add
inc
sti
shrl
ljmp
pop
mov
dec
push
jmp
fists
jp
fbstp
outsl
inc
test
inc
push
aad
sub
aaa
sbb
lods
sub
jp
add
bound
mov
xchg
flds
sub
xchg
lds
nop
and
nop
test
sub
or
testb
orl
pusha
mov
shlb
mov
sbb
inc
scas
cmpsb
pop
or
sbb
xchg
out
xchg
cmpsl
mov
cmp
loop
mov
jnp
pop
shlb
sub
xor
test
ja
inc
vmovapd
insb
sub
cli
jnp
mov
add
sbb
into
out
shll
rcll
ds
jge
hlt
xor
sbb
xor
and
ret
out
mov
ja
lret
ja
mov
fsubl
jne
out
dec
fucomi
jne
push
test
push
rcrb
lret
push
lds
mov
bound
and
test
iret
adc
call
push
test
cmp
inc
in
ljmp
mov
inc
fwait
cwtl
adc
sub
xchg
mov
mov
pop
ja
insl
mov
std
loope
xor
adcl
test
data16
add
adc
sti
mov
lret
pop
pop
push
add
cmp
jns
call
sbbl
lret
into
cmp
movsl
loop,pt
imul
xchg
pop
add
insl
mov
mov
sti
aam
jle
gs
aam
cli
cmp
mov
ss
mov
cmp
ror
int3
fs
in
mov
xor
mov
push
movsl
sar
lea
push
ja
sbb
push
pop
cmp
xchg
imul
mov
js
and
test
add
aam
mov
cmpsb
imul
pop
das
int
cld
push
bound
push
repz
lea
cmp
sub
fdivrs
imul
mov
jp
xor
push
and
jmp
cwtl
aad
push
das
imul
dec
cld
sbb
lea
push
and
pop
std
mov
and
shrl
inc
popa
js
imulb
fucomp
adc
xor
cmp
sarb
pop
imul
call
sub
sbbl
jmp
cs
fcom
adc
imul
movsl
add
mov
push
lahf
push
inc
jmp
mov
les
cli
sti
hlt
js
leave
lock
sbb
mov
cwtl
sub
into
leave
sahf
sbbb
fs
data16
jl
pop
das
or
sbb
cmpsb
sarb
jg
pop
pop
pop
jbe
xor
pop
stc
lods
ret
xchg
sub
stos
and
imul
and
push
or
stc
imul
sahf
lods
sbb
inc
cmp
mov
int
inc
adc
jmp
fs
push
lahf
jne
sub
sbb
ret
push
cmp
test
jp
fdivrs
imul
jmp
sbb
mov
insb
call
xor
stc
hlt
mov
push
inc
sbb
jbe
cmp
sbb
push
pop
nop
cmp
xor
push
imul
jmp
sahf
mov
clc
mov
adc
sbb
sub
push
fisttpll
xchg
fnstenv
dec
and
popa
mov
or
aam
pop
xchg
imul
arpl
pop
jmp
test
data16
cmp
pushf
in
sub
mov
mov
in
imul
or
fcomps
push
and
loope
or
push
sbb
cwtl
and
push
dec
arpl
sub
xor
stc
push
test
lods
fld1
jl
imul
bound
xor
mov
mov
mov
imul
mov
sbb
dec
or
bound
imul
lock
push
mov
cld
sbb
lea
fisubs
mov
inc
fwait
inc
pop
shlb
popa
clc
adc
daa
xchg
aaa
rcll
xchg
movsl
cmp
cmp
dec
lret
sbb
imul
fnstcw
sbb
push
sbb
movsl
sub
xchg
jns
call
mov
loop
fcmovb
jae
dec
fwait
add
repnz
sbb
and
or
inc
imul
mov
ja
dec
mov
mov
fnstcw
mov
decl
in
push
mov
fbld
imul
push
push
mov
sub
jns
xchg
test
lcall
test
arpl
call
rcr
stc
addr16
mov
xchg
lea
sub
outsl
cmp
adc
int
popa
sub
inc
repz
push
jne,pt
test
adc
push
mov
mov
inc
or
pop
fwait
clc
flds
sub
fstpt
imul
mov
cld
xlat
nop
add
imul
mov
push
xchg
xor
jbe
mov
out
xchg
rcll
sahf
movsl
stc
cmp
cmp
pop
dec
lret
push
push
rcr
imul
lahf
push
mov
cmpsl
cld
adc
icebp
sub
push
lds
nop
pop
call
push
mov
out
sub
nop
aam
or
cli
cmp
mov
push
fmuls
test
fstp
cmp
repnz
test
mov
lea
add
mov
adc
mov
push
les
bnd
sbb
jbe
movsb
sub
cmp
xchg
and
push
loop
leave
fdivrp
push
outsl
mov
scas
push
jb
cmp
lahf
adc
clc
mov
bound
sub
repz
iret
xchg
cmp
ja
push
and
addr16
xchg
in
hlt
scas
jp
icebp
push
or
push
mov
add
jmp
out
lock
push
in
push
outsl
sub
jns
sbb
and
popf
out
mov
xacquire
dec
mov
popa
js
adc
cmpsl
sub
xchg
sbb
cwtl
movsl
mov
lahf
push
lret
imul
pop
call
sub
in
sbb
lahf
fbld
xor
adc
cwtl
loop
jne
jae
loope
add
lds
push
pop
sub
hlt
std
aam
jno
gs
xor
mov
stos
push
test
hlt
fidivrl
cmp
in
addr16
mov
in
push
sahf
aas
or
pop
icebp
in
xor
mov
mov
pop
jg
push
out
pop
jbe
arpl
pop
stc
icebp
xchg
sub
and
addr16
push
push
addr16
mov
lea
test
lea
push
xchg
shlb
mov
repz
fwait
addb
lods
jg
daa
push
adc
sbb
push
cmp
in
xchg
or
insl
fwait
js
pop
sub
dec
imul
pusha
cld
push
pusha
cmp
stc
hlt
mov
pop
addl
cmpsl
shll
jg
cmp
or
push
sub
adc
xor
mov
lret
outsl
pop
push
cs
jns
pop
cmc
push
pop
rorl
sub
xchg
popa
mov
sbb
shl
push
orl
and
or
test
int3
aam
adc
gs
cli
mov
xchg
outsb
sbb
xor
stc
push
test
sbb
out
lds
aaa
push
cmp
fadds
mov
ja
cmpsb
push
test
rcll
push
ret
out
in
pop
addr16
dec
clc
pushf
sbb
daa
mov
push
push
std
mov
push
mov
cmp
js
shll
or
repz
jge
andb
adc
das
or
pop
in
xor
push
idiv
out
sub
or
sbb
imul
loop
push
push
dec
outsl
cmpsl
into
cld
sbb
shlb
mov
sub
inc
pop
mov
jg
clc
inc
sbb
xchg
jle
adc
aam
movsl
cmp
cmp
inc
lret
sbb
mov
js
fdivrl
fs
push
sbb
mov
addr16
das
mov
sarl
dec
pop
data16
addr16
jae
sbb
nop
sbb
push
mov
aad
inc
stos
int
fcom
out
push
and
cmpsl
nop
sbb
sbb
leave
cmp
cmpsb
mov
push
xor
push
cld
cmp
pop
mov
add
andl
addr16
lret
mov
test
addr16
inc
dec
mov
outsl
fucomi
sysret
push
addr16
mov
das
mov
sub
scas
sbb
cmp
iret
add
aaa
pop
frstor
mov
addb
mov
cmpsl
dec
pop
ss
cmp
iret
push
mov
shrb
or
insb
fwait
clc
test
sub
add
pop
xor
fistpll
imul
xlat
aam
lea
frstor
jns
jmp
test
mov
mov
popa
mov
pop
imul
and
int3
adc
fists
cmp
push
lret
insl
pop
push
add
jns
sahf
fwait
push
fchs
mov
push
pop
insl
mov
pop
xor
loop
pop
jmp
add
or
and
sbb
clc
lods
aaa
inc
sub
aam
inc
nop
gs
test
mov
sbb
fmuls
test
popf
ret
hlt
cwtl
into
test
mov
sbb
dec
out
addr16
jl
roll
out
shlb
push
pop
scas
push
daa
add
loope
mov
jbe
pop
xor
cmp
xchg
addr16
nop
and
push
and
cmpsl
sahf
sub
add
cwtl
mov
movsb
push
scas
push
xor
fiadds
int
hlt
shll
push
repz
sahf
xchg
andb
adc
addl
in
addr16
xchg
in
les
or
sbb
mov
es
imul
dec
push
add
daa
arpl
push
stos
xor
and
jge
mov
add
shrl
dec
popa
js
adc
cmpsl
dec
xchg
jge
adc
shr
movsl
mov
mov
sbb
call
sub
push
sbb
mov
addr16
bound
mov
icebp
jae
sbbb
sbb
adc
out
not
pop
nop
ljmp
das
je
daa
mov
sbb
shll
push
movsl
xchg
into
addr16
mov
xlat
call
insl
jl
mov
or
pop
xchg
icebp
xor
cltd
sarb
dec
loope
mov
and
testl
sbb
cmpsb
mov
aaa
jno
fldt
daa
push
addr16
mov
mov
cmpsl
push
pop
scas
sbb
xor
mov
sub
in
repz
mov
subb
adc
adc
pop
ss
xlat
das
push
rcrl
xlat
and
imul
cmp
mov
cmpsl
mov
mov
inc
outsl
call
pop
add
imull
inc
sbb
mov
popa
aaa
pop
sbb
data16
cmp
push
cmp
cmp
mov
and
mov
ret
jns
pop
ljmp
jmp
insb
mov
pop
jno
loop
pop
bnd
push
cltd
add
mov
and
pop
mov
mov
not
pop
add
scas
cli
mov
jbe
call
xor
cmp
je
into
or
addr16
jns
aaa
roll
addr16
sub
push
sahf
push
push
cmpsl
les
push
jno
jbe
sub
mov
inc
xchg
push
pop
pop
inc
cmp
repz
xchg
call
pop
push
xor
addr16
int
subl
test
repz
xchg
cltd
andb
adc
data16
pop
jae
addr16
push
negl
cmp
or
push
fwait
aaa
and
sub
sarb
jns
fbstp
push
outsl
cmpsl
cld
jp
push
jno
lea
and
out
mov
enter
adc
add
daa
xor
xchg
jmp
xchg
push
enter
pop
cmp
jbe
sarl
xchg
push
sbb
lahf
loopew
das
mov
jnp
out
add
leave
sub
addr16
inc
mov
daa
adc
repnz
and
add
inc
addr16
cld
aam
mov
gs
add
cmpsl
mov
sbb
imul
cmp
mov
jb
out
popw
jns
clc
xor
sub
addr16
mov
loope
adcb
addr16
xlat
pop
ja
call
jno
mov
mov
adc
out
aas
push
adcb
mov
daa
mov
scas
push
in
cmp
insb
add
aaa
cmp
in
int3
lea
js
jl
cmpsl
lods
pop
popf
data16
push
mov
jg
jp
les
or
fwait
idiv
sub
xchg
sarb
fisttps
outsl
push
sbb
lea
frstor
ja
sti
mov
ds
imul
out
xlat
xchg
cld
adc
sahf
xchg
daa
sub
push
ficoms
pop
push
and
jns
loop
xlat
add
lahf
dec
push
das
js
jp
cmpsl
movsb
xor
loop
into
loop
mov
stc
push
nop
push
into
pusha
and
or
sub
aam
sbb
cli
lea
xchg
sbb
fdiv
ds
insl
fdivrl
ja
in
cmpsb
cmp
out
jcxz
jl
xor
push
sbb
xor
mov
imull
loope
rorb
data16
pop
cmp
xchg
addr16
and
rorw
lock
cmpsl
fsubl
push
mov
mov
pop
call
loopne
cmp
in
xor
testb
bound
mov
mov
aaa
mov
mov
fsubrs
rol
addr16
push
ja
lahf
in
adc
or
pop
fwait
mov
xor
out
fnstsw
push
je
outsl
daa
stos
push
push
lcall
cmp
loop
addr16
mov
fs
shlb
pusha
popa
jbe
or
cmpsl
mov
xchg
jno
adc
ljmp
call
ret
addr16
xor
notb
jns
lret
sbb
lea
aaa
push
imul
das
loop
or
jae
divl
nop
push
popa
bound
push
inc
rolb
push
aam
out
gs
dec
mov
xor
pop
insb
xor
data16
fistpll
cmp
into
addr16
xlat
sbb
out
dec
gs
sub
or
pop
jge
xor
mov
mov
pop
push
out
jge
push
int3
or
leave
das
pop
idivl
xchg
es
and
outsl
jo
aaa
xchg
insb
aaa
push
addr16
ja
mov
scas
push
and
pop
int
fisubl
or
repz
shll
clc
in
mov
pop
cs
push
notl
and
scas
cmpsb
jp
mov
or
insl
fwait
jbe
aaa
sub
popa
out
addr16
fbstp
push
jg
push
out
lea
fsubs
negl
mov
push
xor
addr16
arpl
mov
mulb
sub
adc
mov
movsl
ja
stos
cmp
add
xor
jns
es
push
push
xor
das
clc
jl
mov
pop
cwtl
ret
mov
mov
push
jl
and
add
inc
cmpsb
mov
popf
gs
cli
mov
inc
mov
insb
sbb
xor
imull
nop
into
shlb
out
addr16
push
or
or
xor
mov
ja
pop
push
cmpsl
sub
pop
add
pop
mov
push
andl
out
inc
dec
testb
pop
mov
stc
fs
mov
jmp
push
scas
xlat
aam
cmp
xor
int
and
bound
mov
adc
movsl
add
addr16
hlt
push
divl
in
ljmp
push
xorl
pusha
out
dec
imul
les
push
mov
lea
ret
and
or
shlb
jl
imulb
xchg
cli
adc
dec
xchg
movsl
ss
mov
lret
outsl
pop
addr16
leave
jns
insb
out
push
sbb
lahf
addr16
das
mov
adc
in
loop
jmp
mov
daa
test
xor
popw
or
addr16
pop
xchg
gs
cli
ja
inc
mov
add
cmp
and
pop
push
xor
pop
adc
cmp
pop
sahf
ljmp
add
push
jl
xlat
or
imul
xchg
cmpsb
les
mov
mov
push
dec
aas
push
addr16
mov
loope
pop
daa
sahf
push
scas
push
or
cmp
mov
int
sbb
div
jo
andb
adc
jge
cmpsl
sub
ss
popf
cmp
data16
push
mov
mov
out
mov
or
push
fwait
negb
es
pop
jo
dec
fcoml
sub
data16
cld
aad
daa
lea
frstor
ja
cli
mov
pop
xchg
inc
push
leave
dec
shlb
jle
mov
sbb
out
cmp
sbb
testl
pop
pop
outsw
ds
addr16
mov
xlat
sub
jbe
bsf
jne
loop
cltd
cli
jae
cs
add
dec
inc
nop
push
shll
dec
add
es
aam
mov
cli
ss
outsb
mov
or
je
test
cmp
stc
into
cmpsb
mov
pop
push
and
gs
jl
pop
and
out
ret
mov
cmpsw
xchg
shl
inc
push
daa
or
push
ja
jbe
aad
pop
mov
mov
or
jbe
pop
rcl
stc
movw
ljmp
addr16
es
repz
insb
dec
adc
std
imul
addr16
mov
cmpsb
int3
mov
push
jge
or
jo
mov
ds
aas
sarb
dec
mov
outsl
daa
pushf
or
push
adc
lea
lds
ss
cli
mov
call
dec
shlb
imul
cmp
imul
sbb
lret
jo
addr16
call
mov
lahf
addr16
push
das
aaa
and
mov
add
loop
mov
jae
xchg
add
shrl
data16
mov
inc
ds
out
rcl
push
jbe
sbb
mov
push
add
test
jno
cmp
lds
pop
xlat
rclb
data16
jl
and
or
pop
jne
xor
nop
shlb
push
jbe
push
cmp
idiv
in
sbb
mov
aaa
addl
cmp
stc
flds
pop
cmpsl
mov
jo
pushaw
sub
mov
fbld
stc
repz
sub
adc
das
push
daa
rolb
ss
dec
cmp
pmulhuw
and
xor
or
add
jbe
aaa
sub
int
dec
sarl
pop
outsl
out
jbe
push
imul
and
stc
mov
mov
inc
push
repnz
gs
dec
int3
xchg
aam
adc
and
cmpsl
adc
lret
push
pop
data16
jns
test
push
mov
lahf
data16
pop
das
div
jo
and
xadd
data16
jae
add
xchg
xlat
pusha
outsl
and
add
cmpsb
xor
aam
icebp
mov
pop
mov
mov
insl
mov
or
sbb
ss
and
cmp
lods
xchg
shlb
out
gs
push
jl
pop
and
mov
pop
cltd
shlb
push
cmpsl
sub
loope
fstl
pop
mov
in
in
mov
jmpw
negb
xor
pop
icebp
in
stc
popw
test
dec
pop
scas
aad
push
cmp
mov
int
and
bound
add
mov
mov
imul
xor
gs
rclb
pushf
in
sub
or
sbb
sub
out
mov
jmpw
jne
push
outsl
cmpsl
les
lea
int3
and
cltd
lahf
inc
push
cs
mov
adc
and
fwait
aad
addr16
lcall
shlb
aad
sbb
or
jmp
cmpsb
pop
mov
push
int
lahf
gs
push
das
mov
ja
out
adc
push
pop
into
loop
mov
jae
insb
cwtl
add
push
mov
push
add
pushfw
adc
addr16
jecxz
lods
lea
and
jne
popa
mov
pop
xor
mov
mov
in
mov
out
dec
jbe
test
or
adc
mov
inc
push
callw
aad
adc
xor
loop
cmpsb
adc
mov
or
mov
sbb
out
xor
xchg
stc
gs
mov
push
mov
scas
push
sbb
les
int
add
bound
loopne
in
andb
adc
mov
pop
ror
ljmpw
nop
in
aad
jne
bound
addr16
sbb
es
sarl
addr16
mov
outsl
inc
jge
aad
pop
lea
into
and
in
cmpsb
mov
shlb
jnp
mov
add
out
lret
xchg
stc
adc
stos
nop
movsl
cmc
pushf
dec
xor
push
mov
pop
data16
aas
call
gs
in
inc
das
jbe
jg
movsl
mov
mov
jae
shrl
nop
push
sub
and
adc
es
clc
aam
inc
nop
gs
dec
cmc
ss
pusha
mov
pop
sbb
clc
cmp
ja
or
push
mov
out
gs
push
or
push
popa
repz
stos
shl
inc
push
and
adc
push
roll
adc
xchg
gs
and
dec
bound
jle
sub
mov
adc
out
cmp
sub
int
sbb
bound
inc
lock
xorl
ss
adc
gs
xchg
in
adc
push
inc
insb
or
add
out
jmp
push
repz
scas
fcomip
jl
outsl
and
js
lea
fsubs
ss
mov
fisubrs
shll
js
jbe
sub
movsl
jl
xchg
mov
dec
xor
push
js
pop
gs
aam
es
testb
mov
xor
mov
fsub
gs
jae
leave
lahf
add
jge
and
sub
in
stc
aam
jmp
mov
cmc
test
and
mov
test
and
cmp
imul
pop
aad
inc
out
sarw
jbe
and
adc
mov
push
out
jae
push
repnz
ffreep
pop
divl
xchg
and
gs
insb
dec
xor
fidivrs
stc
gs
mov
scas
pop
movsl
add
scas
push
xor
popw
and
mov
in
out
push
jg
andb
adc
insb
jb
and
add
dec
cli
push
ss
mov
aad
bound
addr16
xor
cmpsb
in
fistpll
gs
fbstp
pop
or
push
in
lea
fldenv
cmc
pop
out
es
test
shlb
jb
xor
mov
xchg
pop
sti
adc
xor
mov
movsl
push
lret
add
call
in
testb
icebp
stos
lahf
data16
divb
dec
adc
mov
jae
add
nop
aad
jno
gs
ret
test
aam
mov
gs
outsb
mov
jmp
sub
cmc
cmp
pop
push
stos
pop
out
imul
or
sar
xor
lods
shlb
push
movsl
mov
push
jge
jbe
xchg
iret
pop
mov
ljmp
lret
inc
mov
inc
arpl
cld
add
and
nop
sar
fs
mov
mov
scas
aad
js
rcrl
int
inc
xlat
bound
sub
mov
jg
out
and
gs
popf
in
enter
inc
bound
iretw
add
gs
mov
add
jne
pop
outsl
movsl
bound
cld
adc
sbb
mov
test
push
popa
push
shlb
jge
testb
and
sub
adc
inc
popf
movsl
ss
mov
lret
add
cmp
call
cmpsb
adc
push
push
xorl
mov
push
mov
loop
inc
test
adc
push
nop
push
pop
jl
data16
mov
add
inc
gs
hlt
aam
pusha
lahf
gs
jne
pop
mov
mov
test
sarb
mov
into
in
mov
push
xchg
pop
out
cmp
imulb
mov
gs
scas
shlb
push
push
mov
aad
sbb
popf
ret
cld
hlt
xchg
cmpsb
dec
xchg
and
gs
add
in
sub
jl
stc
gs
test
scas
push
mov
cmp
pop
xor
bound
xchg
aam
scas
andb
adc
jae
movsl
sahf
sbb
mov
push
mov
xchg
in
mov
pop
or
add
es
mov
gs
fbstp
dec
outsl
pushw
pop
cld
aad
xor
and
xchg
push
xor
gs
jo
mov
sbb
in
iret
xchg
jmp
movsl
cmc
pop
mov
and
jae
pop
shrw
call
cmp
lahf
adc
jbe
push
mov
adc
cmp
add
out
nop
push
jae
and
daa
mov
sbb
inc
es
mov
pushf
mov
xor
pop
mov
add
mov
in
jne
into
movsb
cld
mov
out
and
jl
movsl
xor
in
frstor
push
lods
shl
dec
push
and
jmp
roll
or
mov
fstpl
jbe
add
movsl
cmp
adc
popa
sti
mov
jo
scas
push
mov
cmp
cs
int
inc
frstor
rolb
andb
adc
scas
and
xor
gs
in
je
jp
jmp
adc
sub
in
mov
popw
mov
cmc
mov
outsl
and
scas
xor
adc
ss
mov
jle
inc
aad
dec
shlb
popa
jbe
sbb
movsl
xchg
cmp
gs
mov
out
pop
lret
adc
call
es
push
push
in
lahf
gs
das
xor
adc
gs
jae
xor
add
sbb
sbb
in
loop
push
add
mov
mov
jno
test
cmp
mov
into
or
out
fs
ss
adc
sub
push
out
jo
push
jno
jbe
sahf
cmp
cmc
xor
xchg
and
mov
gs
dec
xor
jle
push
gs
xchg
mov
mov
scas
adc
or
pushw
xor
mov
in
clc
repz
into
test
adc
icebp
jbe
and
sbb
fs
in
xchg
inc
jne
jo
or
adc
cmpsb
cmp
mov
arpl
outsl
out
or
push
fwait
xor
cmc
lods
pushl
push
inc
dec
shlb
insb
popa
xor
cmpsb
cmp
aam
out
orw
fs
add
call
in
nop
push
push
pusha
mov
das
testb
dec
adc
pop
xorl
dec
dec
nop
aad
insb
and
push
mov
and
inc
cmpsb
xchg
in
adc
mov
in
add
test
pop
call
into
and
mov
out
gs
jl
subl
mov
jmpw
jne
inc
push
movsl
mov
loope
xor
fs
pop
mov
in
in
fwait
and
fs
dec
notb
inc
jmp
mov
mov
scas
aad
pop
cmp
or
int
neg
bound
cmpsl
andb
adc
ljmp
gs
and
inc
jne
sub
or
adc
gs
jmp
aam
xchg
dec
dec
mov
outsl
movsl
or
cld
adc
sub
mov
mov
das
popf
inc
push
int3
inc
shlb
popa
hlt
call
mulb
loope
adc
scas
xchg
movsl
xor
mov
callw
aad
sbb
in
call
movsb
into
xchg
push
push
movsl
mov
das
mov
add
sbb
jae
movsb
popf
add
jle
and
adc
xor
scas
in
aam
xor
gs
movsl
sbb
adc
mov
cmp
sarl
out
fs
jl
cltd
xor
adc
popa
pushf
shlb
loope
rclb
jbe
mov
pop
jne
out
xchg
movsb
nop
and
mov
mov
sbb
in
ret
push
gs
xchg
mov
cld
mov
and
cwtl
or
cmp
int
adc
repz
pushf
andb
jbe
outsl
mov
adc
pusha
icebp
push
mov
in
popl
push
sbb
gs
fwait
hlt
das
shrl
shr
mov
gs
mov
xor
pop
outsl
and
cld
aad
sub
and
hlt
mov
push
inc
adc
inc
shlb
outsb
popa
mov
and
in
movb
out
cltd
movsl
cmc
add
xor
adc
sbb
fs
jmp
mov
aad
mov
xor
je
or
mov
loop
or
jae
lahf
pushf
add
and
jns
gs
pop
mov
cmc
enter
out
adc
mov
cmc
xor
jno
fs
sbb
pusha
ret
jmp
into
movsb
dec
and
inc
lods
out
and
imul
xor
mov
shrb
push
mov
dec
pop
jbe
int3
ds
cmp
xchg
mov
dec
mov
popf
jb
jl
sbb
adc
fucom
stc
jle
mov
push
fbld
and
mov
sahf
int
faddl
repz
mov
cmp
push
adc
ja
repnz
and
sub
ds
jne
lock
lea
mov
jne
add
sbb
or
dec
jle
mov
outsl
imul
lea
int3
and
hlt
mov
push
lahf
inc
jmp
push
pop
push
idivb
xor
adc
pop
frstor
mov
stc
push
push
call
mov
dec
lret
enter
pop
add
mov
loop
push
mov
mov
add
push
push
and
inc
inc
pop
fldl
gs
out
cmc
repz
mov
andl
ss
test
popf
lcall
ja
pop
fcmovnu
sub
adc
add
pop
or
aaa
mov
shl
das
push
and
loope
mov
jbe
pop
lods
pop
cmp
jne
and
jg
adc
add
cmpsb
pushf
inc
push
addr16
fstpt
sub
jl
pusha
fnsave
or
repz
lahf
lret
test
movsb
push
mov
popa
dec
lods
fs
mov
fsub
arpl
jae
xor
or
fs
hlt
or
movsb
imul
out
rcr
hlt
inc
sub
lds
cld
push
push
pop
lea
mov
cmc
xchg
mov
pavgb
mov
shlb
adc
mulb
xchg
sbb
pop
out
frstor
movsl
pushf
adc
adc
push
xchg
mov
fwait
jns
scas
out
push
push
aaa
rcrb
jbe
add
mov
shlb
mov
das
nop
aad
adc
gs
push
mov
pop
lods
inc
movsb
aad
aam
cmp
divl
adc
divb
in
xor
push
into
cwtl
pop
adc
sub
arpl
add
pop
or
stos
mov
and
loopne
xlat
cmpl
popa
push
in
jbe
sub
adc
fsub
and
fs
lret
imul
mov
adc
xchg
clc
mov
pop
fs
das
icebp
les
int
mov
push
and
cmp
hlt
and
push
mov
inc
xchg
push
test
fsubp
and
cmp
mov
adc
je
push
test
fwait
mov
dec
fs
rcr
jns
sub
rolb
cld
sub
movsl
and
jo
ja
repz
shlb
popa
hlt
mov
scas
xchg
mov
adc
cld
loope
inc
fwait
mov
lret
clc
pop
add
xor
jns
jl
push
xor
inc
lahf
in
cs
xlat
add
mov
js
sub
jnp
cld
jae
pop
arpl
movsl
adc
nop
inc
jns
es
push
mov
mov
test
enter
mov
cmp
test
mov
aas
test
mulb
into
push
popf
rcrb
jo
in
mov
jne
call
jl
mov
test
shlb
mov
out
xchg
push
jbe
lods
enter
mov
dec
cmp
mov
data16
gs
push
arpl
xlat
pop
leave
stos
sbb
push
dec
je
fs
dec
int
inc
movsl
bound
mov
aam
into
andb
je
jg
je
ss
scas
fs
mov
loope
jecxz
cmp
outsl
or
fwait
hlt
insb
dec
sub
mov
dec
gs
fbstp
je
ror
dec
lea
mov
jne
divb
adc
daa
shlb
jg
mov
pop
mul
pop
mov
push
movsb
mov
sub
movsl
repz
lret
jb
fs
dec
call
gs
push
aad
les
je
jne
mov
inc
mov
fs
divb
fmulp
add
je
nop
push
icebp
add
gs
push
mov
mov
inc
and
mov
adc
gs
xor
mov
sbb
and
test
test
clc
into
movsb
test
pop
adc
sbb
arpl
pop
or
push
outsb
icebp
xor
shl
and
out
jnp
adc
pop
jbe
cmp
xchg
arpl
fisubl
fs
sbb
or
jmp
mov
ret
pop
in
sbb
gs
int
sub
bound
icebp
repz
enter
sub
xor
push
pop
ss
mov
arpl
mov
movsb
fadd
jp
pop
sbb
fwait
mov
dec
sub
pop
cmpsl
mov
fs
ret
fcomip
bndldx
fadds
cld
adc
inc
lea
and
enter
sub
fs
pop
mulb
test
movsl
mov
lds
in
sbb
pop
decb
hlt
adc
jns
mov
push
adc
ret
lahf
arpl
mov
aam
cltd
loop
imul
add
xchg
pop
and
mov
xchg
mov
in
adc
mov
cli
repz
mov
dec
je
adc
inc
xchg
cmp
jmp
arpl
das
out
mov
je
inc
or
adc
xor
lret
ret
in
push
loope
out
jbe
push
pop
cmc
pushf
xchg
and
in
and
arpl
sbb
push
arpl
ret
pop
mov
jle
push
int
cmp
repz
cmp
andb
adc
pop
mov
push
subb
xor
in
in
cmp
inc
or
sarl
mov
arpl
xlat
fbstp
push
lea
cltd
and
std
mov
dec
inc
adc
shlb
pop
popa
xor
push
mulb
xchg
add
adc
or
movsl
jae
lds
movsl
in
lret
bound
ss
jns
push
call
lahf
imul
hlt
sbb
and
cmpsb
loop
shl
xor
aad
sub
es
out
mov
mov
xchg
aam
test
arpl
cli
mov
sbb
sbb
mov
cmp
jl
into
and
adc
fnstenv
or
ret
xor
aad
sbb
sub
test
stos
push
jbe
out
pop
push
xchg
xchg
xchg
mov
mov
or
mov
mov
stc
nop
dec
decl
sub
push
add
dec
int
push
cltd
bound
enter
mov
sub
mov
js
in
pop
mov
jmp
xchg
push
repz
and
lds
mov
or
sbb
mov
mov
in
cmp
jae
adc
push
or
inc
lea
and
aad
push
xor
shlb
sub
and
mulb
ljmp
stos
leave
arpl
dec
lret
cltd
fs
and
xor
dec
pop
lods
jne
push
mov
inc
fwait
jl
cmp
mov
in
fisubs
arpl
inc
and
dec
cmp
les
push
movsb
and
test
push
jnp
lcall
sub
stos
in
pop
das
xlat
inc
jecxz
sub
cmpb
enter
movsl
insb
push
out
jmp
gs
cmovns
cmp
xor
and
cld
in
gs
dec
pop
shrb
imul
cs
mov
in
fs
dec
movsl
in
jno
and
icebp
add
sbb
sbb
inc
xchg
mov
mov
aad
pop
cwtl
movsb
sub
cltd
popa
bound
mov
fs
jg
mov
jo
jns
ret
and
jg
int
push
cld
or
adc
sbb
std
dec
int3
mulb
aam
in
dec
arpl
arpl
movsl
add
lods
pop
push
aas
lds
jecxz
xchg
inc
pop
add
pusha
call
loope
or
mov
inc
and
xchg
shlb
lods
adc
mov
jb
arpl
dec
fldt
jecxz
pop
or
push
xchg
cmp
arpl
inc
je
aas
nop
out
sti
std
xor
adc
mov
cwtl
xchg
mov
jo
into
aaa
dec
cmpsb
aad
in
xchg
sub
fnstsw
xchg
mov
mov
lahf
xor
repz
mov
mov
inc
les
xor
pop
push
pop
scas
inc
repnz
or
xor
repz
lahf
lret
mov
add
call
push
es
jecxz
push
mov
outsb
push
jmp
insl
ja
pop
jg
outsl
dec
les
cwtl
inc
dec
icebp
je
cmpb
and
scas
xchg
js
movsb
adc
and
mov
shll
xchg
push
jnp
mov
stc
in
popa
cmp
bound
xchg
cmpsl
idiv
pop
rcl
dec
outsl
loope
scas
mov
xchg
adcl
mov
mov
int
adc
outsb
push
aam
ss
mov
mov
outsb
stc
mov
cld
aas
stc
loope
int
mov
mov
lret
cmp
fisttps
push
mov
mov
jns
cmp
push
adc
lret
pop
adc
xor
jnp
fs
dec
aam
mov
jae
and
add
add
pop
mov
push
cmpsl
inc
jecxz
aam
xor
gs
and
repz
or
and
push
sbb
mov
xchg
xor
loop
arpl
lret
pop
shll
out
jmp
dec
or
adc
mov
arpl
cmpsl
push
in
add
push
out
sub
repz
addb
jae
mov
xor
cld
repz
inc
adc
inc
mov
movsl
fstpl
mov
addb
dec
pushf
arpl
add
int
mov
pusha
rclb
or
rorl
or
jae
je
mov
stc
cld
and
adc
shlb
add
lods
or
or
pop
scas
and
push
insl
jp
lret
push
sbb
cli
arpl
add
lds
sbb
adcb
sub
sahf
adc
fs
mov
mov
xchg
xchg
jecxz
loope
or
int3
dec
hlt
movsl
push
out
add
rclb
sbb
lock
sbb
fsubrl
xchg
or
push
sti
daa
cmc
mov
aad
pop
push
jae
test
out
jmp
ror
and
sbb
out
popa
jge
cmpsb
xor
sub
mov
fs
xor
push
mov
pop
out
je
mov
lea
mov
fistps
push
insb
xchg
and
mov
adc
push
loope
xor
cs
fs
cs
in
ljmp
sub
hlt
jmp
movsl
arpl
cmp
fxch
mov
bound
jle
iret
dec
add
insl
cld
adc
or
cltd
xor
test
dec
data16
cmp
je
cmp
mov
dec
dec
mov
mov
mov
stc
aad
je
lret
push
test
cmp
push
dec
jl
dec
imul
xor
pop
fs
jo
shll
fs
adc
imul
mov
in
and
xorb
jecxz
insb
adc
out
inc
jb
fdivrl
nop
push
xchg
sub
add
or
xor
or
dec
jo
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
