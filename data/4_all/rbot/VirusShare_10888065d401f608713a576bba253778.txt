push
mov
mov
push
test
je
mov
test
je
jmp
pushl
pushl
pushl
call
add
mov
test
jne
jmp
mov
movb
mov
mov
mov
mov
mov
pop
pop
ret
pusha
cld
movzbl
test
jne
mov
sub
mov
mov
add
mov
call
mov
movb
cmpl
jne
popa
jmp
popa
pushl
push
call
push
call
ret
pushl
push
call
push
call
ret
mov
push
mov
push
test
mov
je
mov
mov
mov
inc
inc
dec
jne
mov
pop
pop
ret
mov
test
je
mov
push
mov
mov
mov
push
mov
mov
shl
mov
shr
rep
mov
and
rep
pop
pop
mov
ret
push
mov
sub
lea
push
call
test
pop
jne
lea
push
call
pop
leave
ret
push
mov
sub
mov
mov
push
push
pushl
add
push
lea
call
lea
mov
push
push
pushl
lea
call
test
je
cmp
jne
lea
lea
push
lea
push
push
call
test
je
cmpl
jne
mov
xor
mov
lea
push
lea
pushl
mov
mov
mov
call
cmp
jbe
mov
lea
lea
lea
push
push
push
call
test
je
cmpl
jne
mov
test
je
mov
lea
add
push
push
lea
push
call
test
je
mov
cmp
jne
inc
cmp
jb
lea
call
xor
jmp
lea
call
push
pop
lea
call
mov
pop
pop
leave
ret
push
mov
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
pop
pop
ret
push
mov
push
mov
push
mov
push
push
mov
andl
andl
mov
mov
test
jne
xor
jmp
mov
sub
mov
sub
jne
mov
call
test
jne
jmp
mov
cmp
jb
mov
mov
push
add
mov
push
mov
add
push
call
add
add
sub
add
add
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
andb
push
mov
mov
lea
mov
add
mov
lea
push
mov
pushl
call
mov
test
jne
and
jmp
mov
sub
mov
mov
lea
push
push
push
mov
add
push
push
call
add
test
je
xor
jmp
andb
lea
push
mov
pushl
call
andl
add
mov
pop
pop
pop
leave
ret
push
mov
push
call
test
pop
jne
push
call
test
pop
jne
push
call
test
pop
jne
mov
test
je
mov
push
mov
add
push
mov
mov
add
push
call
add
xor
pop
ret
push
mov
push
push
mov
push
push
mov
test
je
mov
mov
mov
sub
mov
je
mov
add
push
add
jmp
mov
test
mov
je
mov
andl
sub
shr
test
jle
mov
mov
mov
and
cmp
jne
and
add
mov
add
add
mov
incl
cmp
jl
add
cmp
jb
pop
pop
xor
pop
leave
ret
push
mov
mov
push
push
push
mov
test
je
mov
lea
jmp
add
push
call
test
mov
je
mov
mov
mov
add
test
mov
je
lea
cmpl
je
mov
mov
sub
mov
test
jns
and
jmp
lea
push
pushl
call
test
je
mov
mov
add
mov
cmpl
jne
add
mov
test
jne
xor
pop
pop
pop
pop
ret
push
pop
jmp
push
mov
mov
mov
test
je
mov
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
push
pushl
call
mov
pushl
push
push
call
add
pop
cmpb
je
pushl
pushl
pushl
call
xor
pop
ret
push
mov
pushl
call
xor
pop
mov
mov
mov
pop
ret
mov
test
jne
xor
jmp
mov
sub
push
mov
cmp
push
jae
test
jne
xor
jmp
mov
sub
pushl
sub
push
pushl
call
jmp
test
je
mov
mov
sub
cmp
jae
add
push
push
call
pop
pop
ret
mov
test
jne
xor
jmp
mov
sub
sar
push
mov
cmp
push
jae
test
jne
xor
jmp
mov
sub
sar
pushl
sub
push
pushl
call
jmp
test
je
mov
mov
sub
sar
cmp
jae
lea
push
push
call
pop
pop
ret
push
mov
push
push
mov
push
mov
push
mov
mov
sub
cmp
jae
mov
test
je
mov
sub
cmp
jb
mov
test
jne
xor
jmp
sub
lea
test
mov
jge
xor
push
call
pop
mov
mov
mov
jmp
test
je
mov
mov
inc
inc
cmp
jne
test
mov
jbe
mov
test
je
mov
mov
mov
inc
dec
jne
mov
lea
cmp
je
mov
sub
sub
add
test
je
mov
mov
inc
inc
cmp
jne
pushl
call
mov
mov
pop
add
mov
mov
test
jne
xor
jmp
mov
sub
add
mov
add
mov
jmp
mov
mov
sub
cmp
jae
cmp
lea
je
mov
sub
test
je
mov
mov
mov
inc
inc
cmp
jne
mov
mov
mov
sub
add
je
mov
test
je
mov
mov
inc
decl
jne
mov
jmp
mov
mov
inc
cmp
jne
jmp
test
jbe
mov
mov
sub
jmp
test
je
mov
mov
mov
inc
inc
cmp
jne
mov
mov
sub
cmp
je
dec
dec
cmp
mov
mov
jne
lea
jmp
mov
mov
mov
inc
cmp
jne
add
pop
pop
pop
leave
ret
mov
push
mov
push
mov
jmp
mov
mov
inc
inc
cmp
jne
mov
mov
pop
pop
ret
push
mov
push
push
push
push
mov
push
mov
mov
mov
sub
sar
cmp
jae
mov
test
je
mov
sub
sar
cmp
jb
mov
test
jne
xor
jmp
sub
sar
add
test
mov
jge
xor
shl
push
call
mov
mov
pop
mov
jmp
test
je
mov
mov
mov
mov
add
add
cmp
jne
test
mov
jbe
mov
mov
test
je
mov
mov
mov
mov
add
decl
jne
mov
mov
shl
cmp
mov
lea
je
mov
sub
sub
add
test
je
mov
mov
mov
mov
add
add
cmp
jne
pushl
call
mov
mov
pop
mov
test
lea
mov
jne
xor
jmp
mov
sub
sar
add
mov
lea
mov
jmp
mov
mov
sub
sar
cmp
jae
mov
shl
cmp
mov
lea
je
mov
sub
test
je
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
sub
sar
sub
mov
je
mov
test
je
mov
mov
mov
mov
add
decl
jne
mov
jmp
mov
mov
mov
mov
add
cmp
jne
add
jmp
test
jbe
shl
mov
mov
mov
sub
jmp
test
je
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
sub
cmp
je
sub
sub
cmp
mov
mov
mov
mov
jne
lea
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
add
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
je
push
mov
add
mov
mov
mov
add
cmp
jne
pop
mov
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
xor
xor
movl
mov
mov
test
je
add
jmp
movzbl
inc
lea
test
je
mov
mov
inc
inc
jmp
xor
mov
inc
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
lea
je
add
jmp
movzbl
inc
lea
test
je
cmp
jne
mov
jmp
movzbl
add
shl
add
inc
cmp
je
inc
mov
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
lea
test
jne
inc
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
lea
je
add
jmp
movzbl
inc
lea
test
je
inc
inc
mov
mov
cmp
sbb
neg
add
mov
mov
sub
mov
add
mov
mov
inc
inc
mov
mov
inc
inc
decl
jne
jmp
mov
pop
mov
mov
sub
cmp
pop
pop
sbb
and
add
neg
sbb
and
leave
ret
add
pusha
std
or
push
and
add
xor
add
add
sub
dec
add
add
and
sub
or
movsb
or
inc
or
pop
or
fs
jbe
or
subb
add
add
pop
or
fs
jbe
or
subb
add
add
cltd
add
popa
jo
insb
insb
outsl
arpl
inc
add
je
jb
arpl
jae
gs
jo
add
jo
jb
add
add
je
jb
arpl
fs
jae
add
ret
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
fiaddl
add
add
add
mov
jnp
or
inc
or
mov
add
fists
mov
mov
and
pushl
mov
and
cmp
call
or
pushl
stos
pop
pop
lcall
mov
pop
call
divb
push
lcall
cwtl
and
cmp
dec
dec
aaa
sbbl
ljmp
cwtl
lahf
inc
cld
sub
or
mov
and
pop
xor
setp
add
cwtl
aaa
xor
mov
repz
decl
or
inc
call
jne
or
or
into
xor
insb
mov
jbe
mov
mov
xor
push
and
cmpsb
and
not
fs
cld
inc
out
outsl
or
lret
cwtl
decl
mov
pushl
sub
jmp
adc
xchg
mov
adc
lret
fcomp
push
sub
imul
fidivrl
insb
pusha
aas
add
movsb
mov
repnz
scas
pop
add
pop
mov
mov
mov
mov
xchg
mov
xor
push
aam
into
sub
cmp
pusha
fdivrp
cmc
cmpsb
call
into
int3
daa
lcall
gs
cmc
xchg
fistpl
push
jns
mov
inc
dec
idiv
dec
repnz
sub
incl
pop
aad
push
mov
jb
idiv
mov
jb
or
push
pop
and
aad
mov
aas
nop
mov
sahf
xor
test
fcos
stos
mov
xor
cli
inc
outsb
inc
out
call
jbe
inc
movsb
mov
out
push
mov
add
push
imul
jmp
pop
push
dec
out
mov
incl
cld
es
sti
dec
inc
cmc
cltd
stos
mov
stc
push
jge
xchg
scas
xchg
jmp
cli
xchg
test
mov
sbb
incl
loop
fsubr
loope
sbb
movsb
adc
bound
popf
lods
iret
sbb
int
xchg
ljmp
xor
stc
out
rcll
aas
mov
hlt
int3
aam
ja
inc
lcall
mov
repnz
inc
lcall
push
lret
push
cmp
stc
inc
mov
and
lcall
hlt
jo
pop
push
and
lcall
sbb
sbb
cli
insb
jns
xor
movsb
push
cmp
fucom
outsl
jne
incl
decl
mov
inc
lcall
sbb
movsb
daa
sub
dec
xor
push
fdivs
xchg
decl
lds
decl
adcb
decl
mov
mov
push
sahf
or
ficomps
jae
fwait
out
mov
push
pop
ljmp
add
decl
jge
out
jne
faddl
sbb
dec
mov
sahf
insl
lahf
mov
jp
test
push
sub
int
mov
loopne
inc
mov
pop
out
cmp
lret
clc
push
incl
in
and
cmp
nop
in
dec
mov
popf
mov
icebp
hlt
loopne
test
ss
mov
into
dec
imul
pop
cld
ret
jp
enter
enter
out
loope
sahf
ds
out
sbb
out
test
cmp
sub
pushl
dec
jmp
fimull
jnp
mov
add
xor
jp
pop
psllw
jbe
push
xor
aam
into
jo
cmp
push
loope
call
push
aam
icebp
xchg
add
ret
fs
add
hlt
jb
mov
call
pop
add
sar
dec
enter
mov
mov
jmp
outsl
add
push
movsl
loope
pushl
lods
jecxz
test
arpl
adc
inc
xor
and
cs
enter
or
dec
xlat
push
cwtl
mov
xchg
xor
cmp
pop
jge
fdivl
mov
rol
cli
dec
stos
loopne
icebp
and
inc
pop
cltd
jns
incl
mov
dec
jg
ljmp
test
add
xor
mov
aas
int
decl
stos
dec
sar
lea
adc
pop
adc
fs
std
mov
xlat
popa
decl
adc
inc
faddl
in
test
call
fwait
mov
or
out
lcall
mov
jb
pextrw
es
fstl
xor
add
pop
addr16
push
in
jae
pop
pop
cmpb
or
xor
or
repz
cli
rcrb
xchg
push
sahf
pop
ljmp
sbb
test
fld
out
sahf
add
adc
movsb
out
cmp
mov
inc
xchg
incl
sti
pop
cmp
ret
decl
test
std
mov
ja
pushl
adc
call
loope
mov
test
mov
pop
inc
push
push
jecxz
fcmovne
push
mov
pusha
andb
jg
incl
push
xlat
insb
repz
data16
push
push
js
arpl
fisubl
mov
lcall
xchg
incl
pop
jl
sub
fcoms
mov
fs
jmp
mov
adc
cli
and
out
push
pop
je
mov
or
icebp
cmp
dec
xchg
nop
inc
cmpsb
pop
ljmp
push
fst
xchg
sti
and
sbbb
pop
mov
pop
xchg
mov
pushf
pop
in
imul
dec
lods
inc
cmp
cmc
in
int
incl
fistpl
pop
add
dec
decl
inc
les
or
push
lcall
test
cmp
jge
ljmp
icebp
add
dec
test
ljmp
sub
and
pushf
incl
lret
jecxz
inc
roll
insl
pop
xchg
scas
pop
xor
aad
xchg
imul
dec
loop
push
ljmp
sbb
pop
inc
mov
ret
jp
into
push
pushf
mov
not
sub
pop
jmp
adc
sub
nop
inc
pushl
test
mov
pop
jmp
scas
das
push
mov
xchg
jl
shl
pop
ljmp
popa
adcb
sub
pop
jmp
incl
out
ljmp
cld
pop
ljmp
out
mov
cltd
jnp
xorb
push
incl
pop
cmc
in
dec
add
je
clc
lcall
jg
xor
imul
jns
shr
xorl
push
fsubrl
push
pushl
mov
or
arpl
or
push
clc
das
inc
int
pop
xor
pop
mov
pop
icebp
clc
dec
xchg
jb
mov
jne
ret
mov
fcompl
lcall
mov
xor
out
scas
test
aaa
lcall
xchg
xchg
xchg
gs
flds
test
add
mov
in
scas
out
out
pop
pushf
mov
fs
push
xchg
cwtl
xlat
push
rorl
dec
incl
jmp
stos
jbe
dec
decl
cmc
nop
jnp
xchg
xchg
xor
mov
fucomp
aad
mov
sbb
out
sub
jne
jmp
movsl
outsl
jmp
arpl
jne
mov
sar
pop
jns
adc
and
jmp
iret
mov
pushl
mov
mov
jnp
lods
xor
push
fnstcw
int
push
bound
cmp
fidivrl
cmpsb
cmp
or
decl
lods
push
inc
fcmovnbe
xor
idiv
add
pop
jo
outsb
fstpl
sbb
pop
jnp
mov
xor
mov
cmpsl
ljmp
data16
mov
add
icebp
xor
lods
in
test
pop
sbb
incl
pop
lcall
xchg
adc
hlt
sbb
call
aam
push
cld
stc
fbld
cmpsl
mov
das
fstpl
cmpsb
icebp
push
or
test
aaa
xchg
cmpsb
or
fmull
xchg
xlat
fsts
push
stc
sti
cmp
jg
adc
xor
mov
cli
jmp
out
cli
mov
je
dec
and
add
sbb
jecxz
test
jp
sti
add
enter
mov
sahf
cld
mov
mov
js
jg
scas
outsl
inc
rcll
scas
lret
jb
xor
clc
lret
inc
xchg
dec
mov
pop
pop
call
cli
mov
hlt
xchg
int
call
or
jecxz
popa
loope
ds
and
add
inc
mov
cmp
pop
ret
or
pop
jp
mov
add
mov
sbb
push
mov
adc
xchg
inc
decb
hlt
mov
sbb
aas
mov
test
out
or
add
in
sub
aas
jg
incl
fistps
mov
jbe
xchg
and
outsl
mov
and
inc
mov
pop
decl
pushf
ret
int3
call
pop
mov
aad
std
inc
scas
lock
inc
mov
pushl
mov
mov
fldcw
xor
jb
nop
sbb
ss
xor
lds
inc
push
push
inc
cld
mov
mov
out
pushl
daa
or
mov
stc
dec
cmp
test
adc
mov
movsl
in
xor
mov
jns
or
fcmovb
test
fisubrs
sti
pushl
fcomp
mov
mov
xor
adc
and
call
jmp
jl
mov
in
sti
lock
aad
stc
jg
add
andl
inc
call
jns
jge
es
mul
and
outsb
vpaddd
jecxz
mov
jle
cmp
ret
push
and
cwtl
mov
jl
test
jmp
push
stos
stos
dec
cmp
mov
sub
lcall
sahf
jmp
pop
cwtl
test
jmp
push
cmp
call
push
mov
in
bound
dec
pop
adc
add
xor
into
and
push
mov
pop
fdivs
ljmp
mov
xlat
jle
mov
nop
cmp
xor
sbbl
pop
dec
in
sar
in
lret
repz
inc
dec
in
mov
push
dec
lret
cltd
jbe
sar
cmp
mov
jbe
dec
std
jbe
outsb
dec
inc
sub
pop
decl
pop
fisttpll
mov
xchg
pop
add
add
mov
fwait
shlb
imulb
and
mov
jns
xor
mov
fcoms
push
cmp
xchg
add
outsl
dec
adc
push
fisubrs
repnz
sub
jg
pop
pusha
push
aad
call
jne
mov
pusha
popf
xor
or
xor
mov
xchg
fiaddl
ds
adc
cli
nop
xchg
pushl
enter
cmpsl
incl
xor
sbb
jp
pop
xchg
ljmp
mov
xor
call
sub
fprem
pop
add
lods
icebp
sar
aaa
pop
jp
std
sahf
inc
out
addr16
or
push
cmp
jl
xchg
jg
dec
loopne
mov
pop
jmp
int3
out
or
stc
jae
push
cmp
or
and
mov
sub
inc
or
jg
idivl
mov
gs
push
inc
mov
xor
pushl
and
dec
loope
or
movsl
jmp
jmp
jb
cld
xchg
adc
adc
pop
mov
loope
mov
sub
or
dec
repz
ds
lods
outsl
adc
xchg
movsl
sbb
xchg
or
sub
mov
dec
inc
incl
mov
xchg
lcall
jb
adc
adc
ljmp
dec
push
repz
mov
dec
jg
call
decl
imul
imul
clc
out
sarl
mov
mov
cmp
mov
dec
xor
push
lcall
xchg
je
hlt
jnp
sti
shrl
std
idivl
into
cmp
dec
jmp
jno
scas
outsl
rclb
sbb
jmp
push
mov
jmp
call
mov
mov
pusha
call
sbb
movsl
lret
sbb
or
push
add
sub
fdiv
mov
pushl
aaa
inc
pushl
aas
lea
push
mov
movsl
out
push
inc
pushf
jp
add
jecxz
rcl
push
jp
in
jnp
mov
push
mov
shl
jle
jns
jl
pop
les
adc
mov
inc
lret
js
sub
out
in
dec
lcall
imul
pop
lret
fs
jg
jg
filds
in
inc
xchg
nop
lcall
arpl
out
gs
movsl
xlat
ja
call
movsl
ja
ds
loope
fwait
add
out
outsl
dec
push
and
add
pop
daa
shl
ror
sbb
pop
sbb
enter
jp
mov
movsb
mov
lcall
pushl
and
or
dec
mov
xchg
incl
daa
and
ljmp
sar
dec
aaa
lcall
adc
decl
xchg
jp
decl
iret
and
pop
lcall
decl
punpckldq
out
addr16
add
cltd
ss
ja
aam
dec
ds
ret
test
cmp
mov
fcoml
ret
jg
popa
call
pushf
push
cmp
inc
inc
cli
push
pop
mov
xor
xor
pop
mov
pop
hlt
outsb
add
xor
jnp
cmp
addr16
dec
mov
jmp
push
jg
adc
stos
mov
call
cltd
out
push
das
pop
jle
je
test
xor
lcall
dec
mov
lods
sub
jno
sub
sub
fcomi
out
jl
push
daa
in
push
adc
xlat
decl
stos
mov
filds
dec
hlt
test
std
std
js
xchg
call
or
and
add
nop
dec
dec
jmp
or
push
addl
mov
call
lcall
decl
inc
into
xor
nop
rolb
ret
clc
cmp
in
in
gs
cli
and
adc
pop
mov
ljmp
in
sahf
call
sar
mov
fsubs
jo
dec
imulb
or
in
repnz
aad
lcall
push
pushf
sub
sub
push
or
dec
jae
pop
lock
jg
mov
fdivrs
mov
cmp
inc
addr16
ss
or
sbb
cmp
push
mov
movsl
sar
sbb
out
or
rorb
sarb
jmp
mov
pop
imul
or
out
pop
adc
xchg
jbe
add
scas
cltd
pop
lret
sbb
sar
cmp
dec
movsl
add
inc
jns
enter
mov
push
out
mull
sbb
fimull
pop
cwtl
test
pushl
fiadds
xchg
xchg
jmp
sbb
sti
jge
mov
arpl
cmc
insl
push
pop
inc
mov
push
xor
je
into
jmp
call
mov
cmc
mov
mov
and
in
insl
aam
mov
incl
sbb
jo
shlb
xchg
fs
xor
jnp
cld
lods
or
loop
inc
js
lcall
ss
adc
stos
lods
jge
push
movsb
or
daa
out
lahf
mov
mov
jmp
sub
sub
push
mov
int3
fildll
fwait
xor
test
xchg
and
xchg
xchg
lods
int
cli
add
repz
popf
push
sbb
xchg
cmp
pusha
and
in
in
aas
pushl
pop
or
pushf
cmp
mov
shrl
xchg
cmpsb
js
fdivr
sbb
dec
jp
incl
movsb
or
jge
lcall
fldl
jmp
sbb
out
dec
sahf
mov
test
mov
cltd
sub
fwait
mov
inc
jo
decl
repnz
xchg
sarl
jo
jmp
dec
mov
inc
daa
insb
das
bound
jnp
or
out
and
fucomp
jmp
pushl
lds
sbb
popf
ret
push
int
repnz
xor
ja
mov
or
adc
or
ja
and
push
dec
mov
sub
cmp
sub
jnp
lcall
adc
cwtl
jmp
xchg
pop
cli
popf
ja
jecxz
aaa
mov
out
add
sbb
cmp
pop
leave
cmp
shlb
cmc
iret
xor
enter
jne
inc
sbb
pop
cmc
aad
inc
decl
out
push
inc
in
decl
out
lretw
outsb
insl
ds
ret
pop
mov
fldl
clc
push
icebp
mov
lods
sbb
decb
push
outsl
and
mov
jno
clc
arpl
es
jne
outsb
sbb
dec
decl
xchg
jge
pop
in
mov
cmp
ret
dec
or
dec
push
jge
jae
cmp
push
add
test
sbb
pop
addr16
frstor
jmp
sub
push
sbb
ror
ret
incl
jns
decl
or
push
lcall
rcll
or
call
insl
test
inc
jnp
jl
cmp
push
or
lcall
mov
jg
insb
fnstenv
repz
sbb
rorb
push
mov
test
pop
outsl
fnsave
cmp
lret
fsubrs
pushl
aas
sahf
fcomps
mov
xchg
mov
mov
jbe
scas
decl
jnp
nop
stc
push
mov
xchg
add
in
push
aad
ret
lock
icebp
stos
pop
mov
int3
pop
mov
cmp
adc
xrelease
call
icebp
flds
xchg
shlb
cmpb
call
add
incl
popf
sbb
imull
ret
insb
jge
lock
bound
lahf
xchg
mov
xchg
pop
mov
mov
mov
jecxz
jecxz
mov
stos
or
push
ds
lds
cmp
dec
rclb
lods
jecxz
pop
jbe
sbb
xchg
push
sub
es
jmp
push
xor
mov
lret
or
int
repz
stos
push
cld
push
mov
xchg
aam
loopne
and
cmp
dec
cmc
push
sub
ret
dec
cmp
ljmp
push
leave
push
push
xchg
mov
push
mov
hlt
and
mov
push
hlt
push
popa
idiv
push
or
pop
movsb
push
sub
pop
pop
and
and
int
jg
dec
sbb
or
xchg
outsl
loope
test
incl
cwtl
mov
je
jge
dec
out
cmp
ret
ljmp
into
pop
mulb
int
lods
jmp
mov
inc
rcl
pop
xchg
jmp
push
data16
incl
jl
sbb
cmpsb
jg
jge
jle
ljmp
or
pop
dec
mov
mov
shrl
cld
dec
inc
fiaddl
out
dec
incl
mov
ljmp
cli
rol
stos
xor
incl
pop
sbb
ljmp
popa
xchg
jge
xchg
ljmp
adc
xchg
icebp
ss
mov
mov
cs
xor
dec
or
or
push
mov
push
jbe
movsb
mov
into
pushl
sub
xchg
sti
decl
or
lock
pop
jo
mov
sub
out
jg
rcrb
xchg
xor
pop
and
les
das
dec
lret
push
incb
xchg
sub
xchg
xor
inc
push
xchg
jb
aaa
fwait
add
lods
ret
fimuls
mov
cmpsb
jmp
inc
stc
cmp
fimull
loop
fisttps
mov
idivb
out
pop
jno
loopne
into
mov
ud0
idivb
imul
lods
mov
dec
dec
decl
xor
fstpt
or
cmp
xor
jp
leave
mov
cmp
push
std
test
das
mov
sub
incl
rcrb
sub
shr
imul
arpl
mov
dec
js
push
ljmp
decl
dec
loopne
addr16
xchg
cs
sahf
aam
or
call
add
mov
imul
fs
pushf
inc
xchg
mov
add
ljmp
cwtl
stc
xchg
ljmp
call
call
negl
xchg
pop
call
push
fcomp
cs
xchg
call
jg
and
clc
clc
pushf
dec
loop
and
clc
jg
and
divb
test
imul
pusha
mov
xchg
add
insb
loopne
imul
lods
pop
xchg
and
dec
jbe
xchg
into
ljmp
mov
mov
mov
ss
push
mov
cmp
mov
add
movsl
xchg
mov
outsl
icebp
ljmp
sbb
incl
sbb
inc
pushl
test
lahf
aas
pop
add
sbb
inc
mov
mov
fildll
sbb
bound
lret
cmp
decl
int
pop
cli
and
pop
ficomps
jmp
pop
sub
inc
cld
add
test
ret
ljmp
push
pop
cld
int3
jmp
pop
cmp
insl
xchg
roll
call
dec
jb
push
cwtl
cmc
movsl
test
outsl
jle
inc
fdivrp
xchg
fsubrs
mov
decl
sub
pop
std
mov
out
lahf
loope
inc
aas
jl
jecxz
push
js
jg
lret
dec
push
mov
ljmp
xor
sub
push
cmp
pop
cmp
cmp
pop
push
int3
je
mov
adc
cmp
inc
imul
nop
dec
sub
xchg
out
inc
call
push
mov
incl
mov
dec
ljmp
loop
sub
ret
rolb
dec
xchg
das
jbe
xorl
mov
cli
test
fisttpl
and
pop
icebp
sti
push
repnz
and
test
push
cmpsb
and
incl
add
inc
loopne
in
mov
inc
cmp
xchg
adc
cmpl
sub
lret
outsl
pop
fimuls
dec
jno
mov
add
adc
das
int
out
cs
pop
test
lcall
mov
divb
pop
sbb
pop
jecxz
mov
inc
loopne
mov
filds
pop
jl
jnp
inc
cmp
mov
pusha
jle
mov
cltd
out
cmp
bswap
dec
andl
cld
ja
mov
jb
ror
sub
push
out
cs
adc
loop
inc
pop
lcall
leave
pusha
inc
das
dec
mov
cli
mov
int3
scas
dec
decl
cmp
xchg
pop
pop
mov
movsb
aad
inc
xor
leave
push
pop
push
loopne
sbb
sub
mov
pop
in
lret
sub
ljmp
push
cmpsb
add
je
jne
xor
out
xchg
jmp
das
pop
push
lcall
lret
inc
xchg
mov
sahf
jecxz
or
adc
aad
sbb
push
push
and
sbb
call
shll
cmc
lcall
lds
cmpsb
add
add
icebp
jmp
inc
sbb
adc
xor
inc
xchg
push
lcall
adc
push
call
incl
call
push
loop
incl
xor
jns
xchg
mov
testb
fwait
dec
ds
pop
mov
stos
xor
inc
mov
arpl
push
pop
dec
cmp
cld
jmp
mov
jmp
fmul
xchg
sbb
xor
or
sbb
cmp
shll
mov
je
jle
aaa
and
out
incl
bound
push
mov
pop
ljmp
add
outsl
lret
leave
xor
repz
cld
ljmp
bound
push
dec
or
faddp
icebp
clc
pop
push
outsl
movsl
pop
mov
jnp
cmp
iret
mov
mov
scas
jno
inc
or
dec
imul
and
ljmp
push
push
shlb
out
dec
mov
ret
addr16
call
sbb
dec
inc
ljmp
in
pop
cmp
jae
sarb
sti
jmp
or
mov
cmpsl
jmp
sbb
int3
lods
cli
lret
lock
pop
call
fldcw
mov
pop
mov
inc
sahf
in
xchg
daa
mov
mov
dec
test
jmp
repz
add
jg
test
dec
sub
push
inc
sub
sbb
jecxz
ja
movsb
mov
push
cmp
sbb
decl
repz
fisttpll
lcall
cld
add
hlt
dec
ja
icebp
scas
push
icebp
mov
fiaddl
mov
ljmp
notb
les
mov
cmp
fisttps
stos
xchg
ud0
or
jl
add
clc
mov
filds
hlt
adc
cwtl
les
je
aas
call
insb
imul
mov
xchg
xor
lret
std
xchg
in
inc
mov
lock
in
mov
mov
ds
xor
and
inc
push
lds
pop
jno
pop
push
sahf
mov
dec
pusha
lret
aaa
out
jmp
fucom
push
mov
iret
test
pop
lcall
push
jno
xlat
out
push
cmp
push
inc
movsb
fidivs
mov
fwait
lahf
loop
sbb
inc
adc
pusha
sar
or
std
pcmpgtd
pusha
xor
mov
divl
lds
aad
stos
movsl
test
mov
xchg
push
aas
clc
xchg
mov
clc
mov
mull
call
push
push
stc
or
fcomip
in
mov
mov
icebp
cmp
mov
jg
jg
push
dec
mov
incl
int
outsb
sbb
lahf
call
push
push
outsl
push
inc
aas
cmp
xor
jle
push
out
je
push
inc
pop
inc
jmp
jno
lcall
mov
jns
clc
inc
mov
cs
clc
sub
add
xchg
pop
in
lods
data16
cld
idivb
mov
test
jo
aaa
xchg
lret
in
mov
jp
jmp
jg
sar
mov
pop
clc
push
imul
in
sub
shufps
call
mov
mov
mov
push
movsb
gs
int3
mov
jp
sub
stos
and
repnz
repnz
daa
sbb
ret
jb
jmp
xlat
clc
jge
mov
lret
andl
pop
pop
call
mov
lcall
inc
mov
pushl
ja
push
mov
sub
xchg
fcoms
pop
lcall
lock
mov
mov
mov
incl
pop
call
adc
lcall
incl
test
div
cmp
subb
pop
xor
push
in
push
popf
arpl
xlat
jge,pt
cli
call
std
adc
outsl
in
pop
or
push
mov
jmp
je
xchg
lahf
mov
nop
jmp
test
jle
mov
bound
sahf
mov
pop
lret
inc
movsl
ljmp
nop
rorb
inc
ja
stos
aam
fbld
rol
pop
sbb
xchg
out
mov
add
hlt
adc
sub
loopne
lahf
or
jg
mov
and
mov
call
in
or
inc
repnz
ret
mov
push
cmp
mov
pop
lock
sahf
fldenv
jne
das
xchg
inc
fidivrs
sub
or
shrl
lods
cmp
dec
stos
mov
jg
mov
pushl
popa
lods
mov
push
mov
mov
incl
lods
je
jmp
mov
xchg
pop
pop
dec
lcall
sahf
mov
pushl
push
push
pop
out
leave
decl
lret
lcall
mov
repnz
lcall
dec
jmp
outsb
dec
test
inc
jns
ljmp
cmpsb
lods
pop
xchg
push
cmp
cmc
push
sub
mov
enter
movsb
decl
fcmovne
nop
js
call
nop
xchg
sbb
jl
loopne
js
call
add
je
dec
imul
cmp
inc
ljmp
lcall
xchg
test
push
xchg
decl
add
inc
sarb
mov
mov
mov
cmp
inc
jg
fucom
or
sahf
add
clc
xchg
test
mov
mov
jecxz
jle
out
sub
dec
mov
xchg
sub
pushf
and
cmp
sbb
clc
mov
mov
push
and
loop
jmp
jae
sti
in
push
adc
dec
sarl
ret
xchg
in
mov
mov
jne
mov
incl
cmp
jne
movsb
push
in
je
lcall
ret
notl
sub
sub
mov
cmpl
adc
call
adc
aaa
xor
aad
mov
mov
xor
decl
xchg
enter
imul
pop
xchg
fstpt
dec
in
inc
fcos
xor
mov
inc
cmp
popf
sbb
das
jl
add
pop
pop
cwtl
std
cmp
gs
scas
inc
cld
xchg
inc
dec
mov
lcall
or
push
mov
jmp
hlt
fwait
push
clc
cmp
in
addr16
xchg
add
jno
pop
cmpsl
int3
xchg
mov
int
xorl
ja
hlt
sbb
popf
push
outsl
cmp
jge
mov
xchg
loop,pt
iret
jmp
adc
js
cwtl
scas
jl
loope
pop
push
xlat
decl
cmp
das
decl
jnp
cmp
imul
mov
lret
lret
jl
xchg
cmp
rorl
int
xchg
popl
mov
cltd
push
push
add
push
fistps
xchg
cltd
fldz
pop
xor
insb
sbb
arpl
int3
mov
fcomip
test
pushf
inc
add
lahf
stos
dec
ja
jp
xchg
add
jmp
dec
cmp
aaa
pop
les
mov
xor
add
jg
xchg
pushl
rcrb
mov
push
inc
adc
xor
loop
jmp
dec
cmp
ljmp
xchg
mov
add
dec
daa
call
ljmp
and
test
mov
mov
mov
mov
mov
or
xor
push
cmp
call
mov
jbe
sar
in
ds
fwait
inc
lock
test
mov
in
sbb
jno
adc
imulb
pop
mov
jl
rol
ja
jae
call
bound
cld
mov
push
xchg
popf
dec
test
in
rcll
scas
arpl
inc
scas
sub
jecxz
hlt
aam
imul
inc
or
sti
adc
fstp
inc
sub
cmp
lods
call
sub
jnp
adc
jp
jg
jp
mov
cmpsl
loop
ds
or
mov
cmc
sbb
jbe
add
das
imul
or
stos
cmp
stos
xchg
lret
inc
lcall
sub
push
fistl
test
scas
scas
cmp
jne
ljmp
cmpl
loope
mov
sub
push
push
xchg
cld
and
lret
fs
jge
mov
mov
pop
fmuls
jp
iret
inc
repnz
fwait
adc
mov
push
test
xchg
push
scas
mov
pushf
adc
cmp
mov
shrb
das
into
jmp
fcompl
ret
jge
mov
incl
notb
out
ret
add
push
aam
fisubs
mov
call
int3
stc
and
jnp
mov
pop
push
push
xor
jbe
out
out
push
movsl
adc
push
push
dec
in
outsb
xor
sahf
icebp
test
lock
jl
jns
mov
and
pop
mov
out
or
in
jmp
mov
inc
loope
dec
pushl
and
gs
cmp
sbb
leave
adc
cmp
xor
incl
jle
and
incb
decl
cld
aad
andl
loop
adc
fbld
hlt
out
add
adc
push
mov
mov
mov
lea
popf
and
push
mov
jne
jno
and
mov
push
jmp
nop
scas
sar
xchg
push
xchg
pushl
dec
out
sti
push
jb
jne
mov
faddl
decl
insl
in
pop
test
push
lods
std
mov
mov
or
lret
and
mov
mov
in
das
shlb
lods
cli
jnp
loopne
xlat
xchg
or
shr
mov
nop
fldenv
push
ja
jle
or
mov
ficompl
out
js
xchg
inc
fdivl
inc
jl
cmp
xor
sbb
cmp
and
ds
ret
jno
xor
popa
jno
decl
js
add
decl
mov
ljmp
pushf
sbb
push
jae
pop
loope
dec
pop
and
mov
xor
out
aad
mov
movntq
mov
push
or
pushl
insb
push
gs
pop
and
xchg
and
xor
data16
mov
push
pop
push
mov
shrb
add
stc
lods
xchg
jmp
dec
subl
punpcklwd
dec
inc
jl
cmpsl
mov
shrb
inc
mov
pop
imul
aad
push
lcall
in
stos
cmp
les
mov
and
push
hlt
loopne
movsl
xor
push
inc
loop
xor
cmp
lods
test
js
mov
adc
imul
and
fildl
fbld
adc
push
mov
mov
sti
loop
xchg
test
lods
dec
decl
arpl
imul
popf
aaa
aad
xchg
pop
into
enter
sbb
movsb
and
dec
int
std
dec
lcall
mov
int3
ret
xchg
lock
xor
sbb
adc
scas
mov
jmp
int
stos
pushl
stos
and
shll
dec
pop
pushl
cli
push
xor
aaa
andl
jne
loopne
mov
mov
adc
mov
decl
in
rcrb
inc
push
xchg
les
lcall
xchg
and
mov
mov
ret
add
push
fimuls
cli
dec
mov
in
mov
addr16
decl
adc
sub
sbb
or
push
dec
push
cli
cmp
in
cli
repnz
test
lock
sbb
das
xchg
aad
hlt
fstpt
xlat
les
adc
jmp
out
adc
daa
mov
repnz
je
loope
mov
fwait
cmc
sbb
xchg
and
sbb
leave
movsl
jno
movsb
sbb
pop
and
pushf
ljmp
movsb
fidivrl
jmp
hlt
jge
stos
loope
out
jle
mov
test
call
sub
pushl
xor
mov
cltd
insb
loope
adc
lcall
mov
push
iret
cld
lock
adc
dec
mov
aas
xor
sub
dec
jge
jnp
popa
inc
clc
push
or
clc
mov
scas
inc
inc
aam
xor
mov
imul
adc
in
inc
leave
leave
cmpsb
shll
xor
sub
push
icebp
mov
cmp
leave
mov
or
aam
and
mov
jmp
mov
ficompl
dec
mov
mov
mov
test
or
mov
bound
mov
jb
jne
jg
outsb
and
pop
xchg
scas
and
stos
add
mov
sbb
sub
clc
loope
cmp
mov
outsl
push
add
mov
xor
test
push
xchg
and
push
cmp
bound
push
mov
lcall
frstor
loopne
xchg
fwait
movl
mov
adc
rolb
xor
inc
cmp
xchg
iret
dec
inc
stos
cmc
in
je
xchg
add
ficoms
inc
insb
xchg
stos
jl
lds
push
mov
hlt
xchg
dec
mov
addr16
mov
lcall
cs
cwtl
xor
ljmp
stos
repnz
mov
rcl
pop
add
jo
lret
ret
mov
movsb
mov
js
cs
cmp
leave
shrb
mov
sti
movsl
or
sbb
add
sub
mov
fcompl
mov
pop
mov
leave
and
repnz
inc
insl
jns
push
jmp
leave
pop
scas
js
call
das
adc
jmp
or
push
incl
mov
test
mov
sar
imul
xchg
inc
mov
aam
and
clc
ja
stos
mov
aaa
and
mov
mov
aaa
and
sbb
divl
xchg
pop
sar
or
scas
fdivrp
cld
in
and
xor
loop
jbe
pop
pop
add
ljmp
in
shlb
jne
xlat
fisubs
in
lret
out
call
out
inc
sbb
pop
sar
jl
and
leave
mov
mov
add
popa
fbstp
jge
cmp
es
lock
stc
mov
stos
aas
pop
iret
pusha
pop
mov
nop
and
xchg
decb
xchg
mov
jmp
movb
cmp
leave
sbb
push
push
incl
xor
pop
out
push
lcall
pop
es
das
cwtl
mov
cmpsb
cmpsl
lcall
jne
mov
insl
mov
mov
mov
pop
lcall
shlb
inc
sarb
mov
shll
fcmovbe
repz
inc
cmpsl
rcrb
adc
mov
mov
ss
mov
xchg
mov
sbb
mov
mov
cmc
cwtl
imul
xor
stos
cli
jp
incl
adc
inc
mov
std
mov
lods
insb
into
decl
ja
ljmp
mov
sbb
pushl
or
cmp
popf
ljmp
mov
or
mov
arpl
mov
cwtl
push
xchg
stos
jbe
inc
clc
andb
imul
sub
paddq
mov
xchg
aas
fwait
pop
stos
jno
in
decb
pop
jno
cmp
mov
inc
bound
cwtl
cmpsl
cmc
cltd
imul
lods
and
xchg
lret
mov
xor
andb
scas
jg
cmpsb
loopne
arpl
sbb
rcrb
testl
pop
mov
rol
jg
dec
scas
or
mov
cmp
montmul
cmpsb
xchg
pushl
je
dec
push
or
mov
inc
sarl
lock
mov
xor
lcall
aam
sub
xor
fdiv
mov
push
mov
dec
gs
sub
mov
popa
addl
jmp
pushl
iret
mov
inc
pop
lahf
fcompl
clc
ljmp
dec
add
mov
dec
pushl
and
aas
mov
pop
pusha
sar
hlt
lcall
cmp
mov
jae
adc
dec
or
js
cmp
ficoml
lods
sbb
adc
test
jl
lahf
inc
incl
lds
in
jmp
push
adc
imul
insl
adc
cmpl
pushf
pushl
push
popf
iret
push
pop
push
bnd
gs
jl
pop
lods
fidivl
stos
je
insb
lods
test
mov
jmp
sub
notl
and
sbb
add
inc
jb
jmp
mov
mov
jecxz
call
icebp
call
aad
stc
mov
mov
ljmp
test
jae
mov
dec
movsl
fcoms
push
pop
pop
daa
lcall
push
daa
and
cld
xor
lea
sbb
outsl
sub
xor
lcall
js
lcall
sbb
call
nop
mov
or
mov
arpl
inc
movsb
mov
pushl
and
pop
stc
mov
xor
je
pop
nop
stos
std
push
mov
loope
loopne
xlat
jg
cs
lods
xchg
mov
sahf
mov
in
test
shl
ljmp
mov
hlt
decl
xchg
mov
add
pushl
push
js
or
lock
add
mov
mov
std
mov
mov
fldl
ja
mov
xor
hlt
iret
arpl
mov
mov
test
jmp
outsb
mov
inc
pop
lock
aam
ljmp
dec
jg
fmulp
int
push
cli
sbb
gs
mov
in
cmp
leave
mov
sahf
push
cmp
add
add
js
sahf
dec
inc
push
mov
daa
dec
outsl
insb
scas
push
jl
mov
mov
add
adc
bound
jmp
xchg
push
fstl
lcall
loop
push
pop
js
outsb
xor
lcall
cs
lcall
xor
push
jmp
stos
frstor
pop
into
incl
jne
mov
mov
fbstp
insb
pop
repz
jecxz
xor
mov
rcrb
popa
fildl
xorl
repnz
addr16
ljmp
jle
std
dec
int3
ja
mov
jg
jg
push
shl
lcall
pusha
adc
xchg
sub
fwait
nop
jnp
mov
xor
xchg
pop
inc
inc
roll
aas
ljmp
mov
jns
pop
cmc
or
stos
icebp
sahf
movsb
clc
xlat
cmp
push
adcl
mov
movsl
jmp
pushl
rolb
inc
mov
jns
xchg
xchg
mov
dec
jg
cmp
inc
and
or
aam
popa
add
jno
test
push
xchg
ljmp
inc
jne
dec
testb
inc
cwtl
out
xchg
sbb
out
andl
aas
arpl
mov
push
xchg
out
sub
std
or
sub
les
sbb
enter
pop
int
out
int
int
sub
push
xor
jmp
les
call
xor
push
jae
push
call
mov
mov
fnstcw
lds
ss
jp
push
aaa
pop
into
push
mov
xchg
movsl
test
mov
stc
gs
mov
jno
jae
sub
and
scas
jg
or
sti
mov
push
ret
in
leave
call
adc
dec
sarb
add
jmp
jnp
stc
jecxz
pop
call
or
jg
add
add
sub
push
sub
xchg
in
call
dec
lock
and
push
outsl
cwtl
lcall
xor
xrelease
pop
loope
cmp
jmp
into
fidivrs
jmp
cmp
fldenv
inc
jge
inc
or
out
into
inc
sbb
adc
pop
mov
incl
inc
mov
sub
js
jmp
loope
pusha
outsb
idivl
adc
pop
mov
fs
jp
cmp
add
stc
test
push
outsb
jmp
daa
gs
push
mov
lret
dec
scas
lcall
sbb
dec
data16
xor
pop
lea
mov
lcall
sbb
mov
cmp
mov
push
push
jmp
xor
imul
movsb
cmp
mulb
test
out
mov
sub
dec
lods
jne
arpl
std
push
adc
lods
test
mov
imull
jbe
jge
mov
sar
mov
sar
icebp
mov
ljmp
push
sbb
dec
clc
xor
jmp
ja
xor
sub
lods
in
popf
mov
loopne
movsl
xchg
repz
pop
ja
stc
test
mov
jecxz
jmp
rolb
sbb
xor
call
and
aad
cmp
leave
ret
lods
cmpsb
fisubl
stos
xor
cmp
push
scas
adc
mov
sbb
test
insb
daa
je
jg
mov
imulb
incl
into
add
decb
fstpl
call
pop
repnz
sbb
adc
pop
jmp
xchg
mov
jb
cmpsl
and
decl
mov
jb
xor
loop
and
cmc
ret
pop
or
mov
out
in
popf
int3
bound
inc
lcall
xchg
push
xchg
call
shr
sbb
lret
push
btc
outsb
mov
lods
pop
ret
pushl
push
adc
adc
push
js
sbb
sbb
cmpsb
sbb
ljmp
popa
je
xchg
ljmp
mov
repz
fstpt
push
das
mov
fucomip
xor
inc
clc
daa
test
loope
jae
xchg
and
arpl
les
in
mov
faddp
je
cs
xor
incl
sbb
and
add
inc
call
jl
push
xchg
xor
mov
pop
pop
ljmp
data16
sbb
divb
loopne
dec
sbb
cmp
mov
jg
push
add
cmp
or
ss
cmp
push
les
xchg
sahf
pop
mov
cmc
dec
ljmp
sub
sub
mov
aaa
xor
fdivs
and
dec
inc
mov
cmp
decl
scas
aas
idiv
in
xor
or
push
cltd
in
leave
pop
push
data16
adc
pop
xchg
jo
jmp
jp
scas
push
outsb
push
inc
mov
fistl
adc
cmpb
sbb
fs
shll
sahf
clc
test
imul
mov
fwait
pushl
test
ud0
lock
push
mov
push
jne
cmp
or
fists
rol
xchg
leave
push
xor
xor
out
inc
sbb
mov
test
ss
jmp
dec
pushf
xor
ja
cmp
scas
decl
sbb
mov
xor
adc
sbb
cli
or
into
ljmp
lea
mov
fisttps
add
incl
outsb
pop
das
incl
xor
jmp
mov
mov
clc
in
outsl
and
sbb
mov
loop
or
adc
and
or
cwtl
ljmp
shl
ljmp
imul
jge
filds
loop
mov
test
mov
pop
mov
mov
mov
call
dec
in
pusha
jne
inc
pushl
test
inc
mov
sub
push
cmp
fistpll
fcoms
mov
js
cmp
dec
jb
je
adc
inc
mov
enter
incb
pop
cmpsb
fists
repnz
call
and
shl
sbb
jp
and
into
push
push
or
mov
sbb
or
mull
add
jp
data16
cld
adc
rclb
push
sub
movsl
mov
test
cmpsb
cmp
add
sahf
fdivr
outsl
ljmp
xor
pop
sbb
jmp
cmp
fsubs
push
inc
cmp
xorb
call
inc
std
mov
mov
clc
popf
xchg
incl
cs
lods
lret
idiv
push
rcrb
add
cltd
or
pushl
lret
incl
pop
cltd
dec
or
sbb
cltd
pop
xchg
lods
pop
out
lea
mov
movsb
ljmp
pop
pop
fcmovb
cmp
mov
aaa
nop
ret
addr16
ud0
and
loope
rcll
jmp
inc
ds
ljmp
add
mov
les
xchg
sti
test
stc
scas
mov
and
das
sbb
dec
jo
sbb
push
and
dec
cmp
loop
pusha
cmp
imulb
adc
push
dec
repz
pop
lea
lcall
add
jecxz
arpl
jg
shl
hlt
lock
pushf
fldenv
in
pushl
cmp
stc
lods
rcrb
dec
push
fdivp
mov
mov
cmp
jmp
xchg
ljmp
stos
push
ljmp
sbb
into
ljmp
iret
push
push
clc
mov
aaa
ret
leave
int
int
in
mov
inc
xor
idiv
divl
add
mov
gs
call
xchg
lds
xchg
bound
repnz
hlt
je
sub
push
xor
and
mov
dec
pop
and
cmpsl
daa
jecxz
xchg
lcall
mov
xor
xchg
inc
popf
arpl
shr
lret
sarl
loopne
sar
test
stc
ret
jg
and
sbb
incl
push
enter
pop
ljmp
mov
and
sar
pop
loope
xchg
pop
adc
call
sub
jne
in
std
out
sarl
and
ss
ds
xchg
decl
dec
mov
mov
push
xchg
les
cmp
xchg
or
cmp
dec
jns
jmp
mov
in
adc
std
dec
orl
sub
adc
push
xchg
enter
mov
mov
push
mov
jns
jmp
movsl
out
mov
nop
movsl
call
and
clc
add
inc
das
xchg
cmpsb
leave
lods
adc
adc
mov
lret
cmp
jge
leave
xor
dec
clc
mov
or
lods
push
decl
test
dec
stc
sbbl
xchg
psrld
sbb
loope
sbb
hlt
xchg
and
mov
xchg
pop
ja
out
mov
push
lea
inc
add
aad
in
mov
es
sbb
mov
mov
jmp
out
fldl
leave
pop
xchg
push
inc
inc
lcall
dec
lahf
cmpsb
cmc
shlb
xchg
das
adc
adc
loope
hlt
push
push
inc
insb
jg
cld
jmp
pop
pusha
adc
push
push
mov
xchg
out
push
aaa
sbb
decl
dec
outsb
xor
in
sub
lock
cmp
test
push
outsl
sbb
cld
pop
decl
fadd
mov
dec
and
outsl
sahf
dec
mov
dec
sub
push
adc
lcall
stos
mov
or
add
jmp
popa
jbe
fprem1
test
incl
test
test
push
rorb
xor
mov
mov
ljmp
xor
sub
mov
or
push
dec
xchg
inc
decl
cwtl
fcomps
lahf
rcrb
icebp
dec
testl
incl
add
clc
int3
sub
xchg
aad
lcall
aas
enter
jmp
adc
pop
movsb
push
pushl
mov
xchg
jmp
lret
mov
outsb
pushl
dec
mov
icebp
push
movsb
lods
sarb
push
decl
add
repnz
jne
push
pop
fidivs
sub
cmp
dec
int
lea
push
out
je
sti
and
mov
mov
pop
stos
add
loope
and
add
addr16
subl
aad
cmpsl
or
cs
decl
mov
pop
jmp
pop
movsl
push
mov
dec
fildl
inc
loope
loopne
adc
adc
cmc
push
decl
out
push
cld
movsl
sbb
incl
jbe
and
repnz
pushl
push
xor
pop
or
es
mov
aaa
inc
arpl
cmp
aad
cmpsb
fstpl
xlat
cmp
cmc
jl
movb
stos
cmp
or
push
xor
and
mov
das
popf
pusha
pop
and
jl
jo
outsl
f2xm1
into
lret
shll
aam
xchg
es
sbb
xchg
push
clc
incl
addr16
pushl
ja
inc
call
sahf
sbb
daa
and
mov
adc
mov
jecxz
mov
imul
pop
shl
incl
jnp
adc
lock
mov
pushl
loop
leave
jmp
test
pop
pushf
mov
cmp
xchg
call
and
add
xor
jle
adc
inc
or
xchg
pop
or
sub
xor
cmp
lock
dec
mov
idiv
mov
mov
pushl
test
lcall
and
cmp
pop
dec
mov
push
push
inc
jmp
shll
push
inc
js
popf
push
adc
hlt
incl
mov
imul
jmp
xor
cli
in
mov
test
add
popa
xchg
inc
roll
loope
or
dec
jle
or
xchg
movsl
fwait
call
cs
sahf
and
mov
pop
test
cmc
out
fs
inc
clc
test
insb
popf
je
out
cmp
xchg
cmpl
or
inc
cwtl
adc
ljmp
pop
adc
sbb
xlat
enter
outsb
mov
test
lret
add
mov
lcall
imul
xchg
aad
sar
xchg
lahf
rcr
inc
decl
mov
inc
cmp
orl
xor
cmp
iret
jmp
rorl
inc
adc
ljmp
xor
inc
movsl
push
jmp
imul
std
mov
xchg
mov
test
dec
xorb
pushf
aad
xchg
jmp
push
xor
int
decl
jge
movsl
or
lcall
fiaddl
jg
dec
lahf
inc
lcall
push
xchg
jns
xchg
cmp
outsb
out
xchg
sbb
dec
call
ret
ficoml
test
int
outsl
push
pop
inc
imul
stc
sbb
and
call
testb
jnp
sub
jb
popa
icebp
movsl
mov
jns
out
cmp
sub
enter
add
adcl
aaa
cli
push
insb
decb
mov
rorl
lret
push
mov
insb
scas
test
adc
mov
std
mov
or
int
mov
sti
jnp
xchg
aam
sarl
rorl
call
gs
aam
jmp
sbb
jp
fisubrl
fsubs
jns
rolb
dec
fst
fwait
lcall
mov
inc
pushl
jnp
xchg
mov
mov
sbb
push
fcos
outsb
jnp
add
fcomip
xlat
pop
outsl
imul
dec
mul
je
pop
ja
ljmp
lcall
pop
xor
clc
pop
aam
js
jmp
pushl
xor
push
mov
mov
xchg
dec
decl
pop
sub
imul
outsl
jb
pause
dec
test
or
add
jno
int
pop
imul
mov
cmp
jecxz
test
xchg
push
jg
out
fimuls
or
xor
loope
cld
mov
das
push
cmp
jne
fnstsw
jbe
loop
pusha
movsl
pop
movsl
xor
xchg
cmc
in
jbe
repnz
into
pop
rorb
addr16
es
xchg
in
outsl
sbb
mov
mov
inc
jmp
dec
jnp
fldenv
jno
dec
mov
push
ret
pop
mov
int
jp
ret
dec
or
incl
jae
aam
and
pop
lcall
push
je
xor
out
mov
xchg
incl
push
xchg
ret
push
pushl
cwtl
mov
add
xchg
xchg
dec
xchg
jp
mov
sti
inc
jl
ljmp
mov
pop
das
insl
sarl
lcall
dec
mov
lcall
xchg
imul
repz
clc
jecxz
sub
call
std
mov
jp
mov
sbb
push
cmp
movb
arpl
pushl
outsb
adc
or
add
cmp
inc
push
xchg
scas
decb
rcr
push
mov
ret
xchg
decl
xor
cld
xchg
jmp
pop
bound
pop
and
and
cltd
adc
daa
mov
lfs
add
pushf
dec
push
data16
and
jecxz
push
inc
inc
pop
in
or
lcall
call
mov
insb
mov
lcall
inc
scas
mov
arpl
lds
clc
mul
push
xchg
xchg
jmp
lods
inc
lea
jecxz
out
xor
or
fdivr
gs
js
xor
stos
cli
jg
les
and
das
inc
call
xor
jae
and
ret
cli
push
mov
mov
xchg
push
cwtl
orb
hlt
mov
cmp
lds
imul
in
testl
outsb
in
or
scas
pop
jmp
fcoml
aam
inc
clc
inc
mov
push
int
hlt
repnz
push
ljmp
dec
pop
aaa
popa
fsts
jnp
ds
cltd
call
mov
mov
daa
push
sub
jmp
aas
test
pushl
popf
mov
dec
ja
push
pop
sub
sub
cs
jmp
push
icebp
xchg
rorl
sti
add
inc
adc
incl
cwtl
loope
call
outsb
adc
adc
icebp
adc
pop
adc
xor
enter
pop
mov
pop
idivb
mov
incl
jg
sub
pop
adc
popf
add
data16
mov
out
pusha
xchg
mov
mull
out
adc
xchg
pop
js
das
in
and
xor
pop
adc
shr
cmpb
pushf
orb
jmp
xchg
xor
aas
pop
mov
lea
aad
mov
dec
imul
mov
and
pushw
push
cmp
fildl
adc
mov
xor
jae
or
add
mov
add
xchg
mov
ljmp
cltd
fsubrl
aaa
adc
mov
loop
jecxz
xchg
mov
and
jno
aad
stos
and
sbb
shrb
mov
jg
mov
fcmovbe
lcall
pop
int
mov
jg
push
imul
push
mov
ljmp
cmp
lds
mov
mov
pusha
inc
ss
pushf
jae
pop
push
add
call
movsb
mov
incl
setae
les
outsl
aaa
fcmovu
mov
xor
mov
mov
es
sbb
and
in
mov
push
call
pusha
sub
push
pushf
fsin
pushl
faddl
mov
mov
xor
aam
fstpl
ljmp
dec
push
sub
sar
insl
shr
mov
js
jmp
testl
leave
ds
incb
out
dec
ds
cld
rorl
insb
neg
push
mov
cs
inc
or
or
xor
call
adc
aaa
mov
lods
test
cmpsl
jecxz
aad
fldenv
sub
inc
sub
pushl
mov
xchg
push
movsb
mov
les
inc
outsb
mov
jg
fmuls
mov
cmp
jl
cmp
mov
hlt
pushl
sbb
daa
stos
pushf
mov
mov
mov
xor
std
dec
sbb
lea
mov
xchg
dec
je
call
popf
push
lcall
aaa
inc
cld
call
divb
fisubl
jg
std
mov
sub
xchg
xor
cmp
stos
test
adc
clc
and
movsb
incl
mov
mov
incl
sbb
cmp
incl
jbe
or
sbb
pop
push
insb
pop
sbb
shll
mov
fisubrl
andb
mov
js
pop
jae
incl
test
out
adc
fstpl
repz
jns
push
mov
xchg
or
fwait
adc
xchg
pushl
mov
lea
rolb
dec
sub
call
pop
push
push
mov
cmp
addb
daa
push
outsb
cs
rcrl
xchg
fdivl
dec
pushl
sbb
nop
call
lock
inc
push
gs
adc
jae
mov
sbb
testb
popa
inc
mov
call
ljmp
pop
mov
mov
bound
sub
rclb
dec
mov
jmp
jge
lcall
cld
mov
sbb
adc
push
jle
das
jmp
push
sar
jns
adc
sub
fdivr
jg
and
push
dec
mov
jno
cmpl
mov
out
cld
daa
insb
arpl
adc
addl
cmc
mov
xchg
dec
rcrl
dec
incl
sub
lret
mov
add
jle
mov
fmul
ss
mov
mov
sbb
dec
imul
mov
out
test
push
jl
inc
cmp
xchg
inc
decb
pop
adc
mulb
in
push
cmc
ljmp
xor
xchg
xchg
pop
cmp
mov
dec
jbe
inc
or
mov
mov
popa
sub
cltd
sub
jmp
test
repz
ret
push
mov
pop
sub
jmp
sbb
fnclex
nop
outsl
add
repz
call
mov
or
fcmovb
push
sahf
pop
mov
fucomi
sbb
cmp
mov
inc
mov
lcall
mov
adc
adc
sahf
ds
jae,pt
or
xchg
lods
jl
mov
int3
xchg
sub
leave
jns
clc
lcall
xchg
or
or
adc
push
fdivr
in
fsubrs
sbb
inc
incl
jns
les
dec
lret
shll
xlat
sbb
xor
xchg
lcall
std
ds
punpckhdq
pop
sbbb
call
pop
dec
insb
incb
jo
aaa
sub
out
movsl
pop
mov
sub
rorl
jbe
incl
adc
js
mov
push
pop
test
inc
cwtl
xor
jo
lret
push
push
stos
pop
shrb
incl
leave
fildl
fidivl
dec
mov
std
popa
call
mov
or
ljmp
repz
or
mov
jae
and
xchg
adc
cmp
sub
bound
jmp
jne
arpl
decb
imul
mov
test
mov
loop
cmp
mov
xchg
aaa
sbb
mov
enter
cmp
and
ret
shll
dec
fcmovb
jle
mov
mov
ss
mov
jnp
decl
jle
mov
sub
mov
and
sbb
shlb
cltd
mov
fs
aas
test
outsl
incl
pop
call
fwait
daa
jl
push
sbb
add
mov
fmuls
dec
addr16
lock
mov
jnp
inc
mov
inc
sbb
dec
jmp
ljmp
call
testb
inc
push
loop
negb
xor
in
and
mov
jnp
sub
movsl
cmp
mov
stos
aas
add
mov
fcomps
cmpsl
in
jecxz
lcall
dec
push
in
mov
clc
ss
ror
fildll
or
push
cwtl
sbbl
call
pop
sbbl
push
xlat
rclb
call
shll
arpl
cmc
gs
jge
xor
incl
lcall
lds
push
js
arpl
adc
mov
cmp
or
mov
incl
mov
in
pop
jmp
and
jae
call
adc
decl
xor
movsb
ljmp
loope
xchg
adc
inc
inc
mov
sub
pushf
inc
test
pop
icebp
mov
push
or
decl
iret
les
shl
jp
sbb
rcr
sub
rcll
cmp
inc
test
jmp
dec
enter
adc
xor
jecxz
mov
jo
int
xchg
insl
cmp
xor
dec
cwtl
inc
jecxz
mov
xchg
fmuls
pushl
adc
xor
int
mov
daa
inc
fucomip
xchg
pop
cmp
push
pop
or
xchg
mov
dec
mov
call
lods
scas
sub
mov
xchg
xchg
pop
lahf
mov
mov
fsubs
test
sbb
in
ds
sub
adc
mov
movsl
or
jo
mov
lret
xchg
add
mov
scas
lock
divb
or
pop
adcb
shrl
cs
jp
stos
mov
cmp
lcall
in
or
cmp
pop
add
xor
jmp
cs
jo
xchg
incl
push
inc
cmp
fs
js
dec
mov
adc
add
jnp
test
sub
pop
or
inc
fistpl
lret
mov
loope
jmp
mov
sbbb
xchg
mov
insl
xor
pushl
hlt
and
mov
inc
lret
xor
popf
inc
cwtl
ljmp
pop
pushf
js
popf
add
int
int3
dec
fs
incl
into
dec
outsl
test
cli
jns
sbb
insb
dec
decl
mov
push
popf
lods
push
adc
inc
jmp
lret
rclb
out
push
aaa
jmp
mov
pop
sbbb
adc
pop
pusha
dec
jae
mov
sub
xchg
icebp
ret
sbb
pop
jle
cs
lods
out
call
adc
push
xor
mov
test
sub
repnz
dec
or
inc
jg
cld
call
mov
aad
jl
lea
mov
je
xor
inc
cmp
adc
dec
pop
cs
fiaddl
in
in
xor
push
cmp
dec
mov
mov
lcall
and
push
lret
pop
int
hlt
jmp
mov
xor
jbe
mov
add
jno
xchg
mov
ja
pop
incl
sbb
fwait
aaa
bound
movsl
popf
movd
add
jmp
sub
stos
mov
lret
popa
pop
stc
and
mov
stos
sub
sahf
cmpsb
xchg
mov
idivb
mov
mov
adc
scas
scas
and
lods
call
push
cli
enter
lock
stc
outsb
cld
aaa
sub
je
addr16
fadd
jle
add
gs
push
clc
ret
xchg
add
out
and
sbb
enter
mov
or
or
aad
mov
aaa
and
inc
mov
icebp
push
sbb
mov
cli
or
out
call
and
mov
inc
jp
fwait
mov
add
movsl
mov
xorl
ss
call
out
sar
mov
jae
mov
push
out
fistps
pop
data16
fstp
cmp
push
int
add
and
mov
cs
aad
pushl
loope
push
in
aas
call
jge
mov
rcll
mov
ljmp
sar
xor
jmp
xchg
rcrl
inc
jno
fsubrl
dec
mov
adc
sti
sub
mov
fsubrl
cmp
pop
jbe
loopne
cs
fwait
jp
lock
jne
stos
sahf
pop
pop
sbb
call
loopne
in
in
or
pushl
ljmp
in
inc
jae
mov
add
xchg
jns
mov
incl
and
cmp
mov
loopne
lcall
imul
aas
dec
js
ja
out
sub
stos
cmp
xor
dec
jmp
daa
insb
cld
aas
clc
dec
out
call
syscall
jl
jbe
add
xchg
sbb
sbb
je
dec
fnstcw
arpl
jo
aas
mov
pop
push
xchg
or
push
mov
stos
mov
pop
rolb
scas
icebp
or
jle
rorl
mov
fwait
cmc
movsb
test
adc
dec
lcall
and
mov
std
lcall
jge
or
movsl
sarb
sbb
push
dec
mov
imul
movsl
loopne
clc
cwtl
sub
aaa
mov
es
sahf
decl
enter
pop
jp
jo
pop
ja
mov
ficoms
ljmp
lret
push
add
loopne
popa
cmc
jmp
stc
adc
push
mov
cmpl
adc
mov
mov
lret
imul
xor
inc
inc
or
gs
dec
or
decl
and
out
roll
lock
pop
sbb
popa
movsl
test
push
jp
std
jl
sbb
lods
or
dec
ret
ss
push
cmp
call
pop
out
test
nop
mov
push
mov
das
notl
arpl
shll
jge
sarb
jg
xor
dec
dec
js
jnp
xchg
push
call
jge
mov
xchg
cmp
fwait
es
jg
insb
and
cld
jmp
inc
icebp
dec
jg
incl
xchg
imul
bound
dec
incl
negl
push
sti
dec
sub
inc
imul
movsb
add
jp
jmp
xchg
stos
loop
mov
xchg
in
xchg
xchg
in
and
outsl
push
loope
or
jg
hlt
jle
xor
incl
loope
push
mov
push
and
leave
cmc
mov
test
in
scas
xor
ja
lcall
ja
xchg
js
mov
or
gs
dec
mov
jecxz
pushl
push
jl
adc
xor
fldt
xor
or
mov
ljmp
push
sahf
and
pop
mov
jmp
sbb
adc
xor
sbb
outsl
inc
xorl
addr16
push
loop
add
lods
pop
sti
jmp
xchg
out
incl
out
pop
negl
call
dec
sub
jae
mov
lret
data16
sub
sbb
or
inc
or
sti
ljmp
lods
lods
movsl
lcall
cmc
test
push
mov
repnz
jae
daa
loop
cli
scas
filds
ljmp
sbb
adc
pop
shl
fwait
call
imul
mov
dec
jmp
movsb
and
fdivrp
and
lock
test
jp
outsl
xchg
add
inc
fisubs
push
lcall
data16
out
inc
xor
xor
push
fnstcw
incl
imul
outsl
cmpsl
inc
loop
or
sub
sbbb
call
mov
orb
call
repnz
sub
test
jmp
pop
sahf
int3
fcmovnb
ljmp
push
loope
in
cmpsb
xor
dec
cli
fimuls
jb
sar
or
mov
int3
repnz
lea
repz
xor
jno
lock
adc
push
incl
xor
insb
cmpsl
ljmp
mov
inc
repz
rcrl
jl
push
or
mov
xlat
test
mov
in
sub
iret
cmp
cmpsb
aaa
mov
jno
push
pushl
mov
aam
jecxz
or
int3
call
push
jbe
push
push
push
lar
and
jg
ficomps
push
jo
call
jg
push
inc
push
mov
pop
mov
cmp
decl
stc
scas
mov
mov
add
shrb
push
shrb
mov
lcall
andl
fldt
jo
jmp
lret
add
call
cltd
dec
inc
movsl
jbe
cs
ror
mov
mov
incl
fwait
xchg
lret
inc
fstpt
jmp
adc
cmp
in
mov
jg
mov
push
std
add
js
aas
lods
divb
fwait
pop
std
pop
adc
andb
inc
ds
jmp
cmp
jno
outsl
inc
add
imul
cmp
mov
call
cltd
sar
cmp
mov
cwtl
lret
inc
sbb
jmp
sahf
dec
mov
dec
popa
and
cltd
push
shll
add
decl
or
ss
jmp
mov
inc
mov
pop
int3
clc
mov
ret
jg
mov
sahf
add
std
and
call
jle
ljmp
mov
in
inc
pop
mov
add
pop
loopne
or
adc
xlat
icebp
lahf
mov
jmp
call
aaa
ljmp
sbb
out
cmp
pop
mov
push
sbb
scas
adc
stos
in
lahf
pop
push
push
incl
mulps
test
push
sub
dec
dec
insl
mov
fnstcw
in
incl
dec
adc
mov
loop
out
arpl
add
std
test
jnp
or
stc
and
addb
jecxz
sbb
cs
cmp
clc
dec
aam
inc
sbb
andb
inc
cmpb
pop
mov
outsl
lods
mov
fmull
incl
lcall
pop
incl
daa
mov
mov
andb
nop
arpl
mov
cmp
xchg
pop
push
sub
sub
call
sarl
outsb
into
pop
lcall
je
pusha
loope
mov
adc
in
bnd
pop
lahf
cmp
mov
stc
movsb
mov
sbb
fwait
rorl
mov
mov
movsb
decl
stos
outsb
add
aaa
inc
mov
pop
fisttpl
into
and
loopne
pop
mov
xor
jne
lret
sbb
fiaddl
ljmp
insl
nop
inc
call
fsubs
push
inc
or
pop
cmp
push
decl
lock
cli
mov
lret
mov
jmp
adc
mov
insl
mov
sbb
les
ljmp
dec
or
pop
pop
imul
repnz
and
in
push
sbb
cmp
sbb
inc
pop
daa
int
enter
and
add
inc
pop
out
jg
ja
cmp
pushl
adc
jnp
pushf
mov
push
xchg
stos
cmpsl
mov
decl
sbb
sarl
lcall
cmc
cmp
cli
clc
lea
hlt
mov
jns
xlat
sbb
fiaddl
rorb
push
mov
xor
or
ud0
push
ret
xchg
sub
dec
dec
jns
or
std
rorl
dec
mov
lods
pop
pop
dec
and
ret
lcall
adc
dec
mov
hlt
push
nop
mov
xchg
pop
xchg
mov
pop
pop
add
call
in
push
mov
jmp
dec
test
adc
loope
jp
imul
adc
test
lret
dec
mov
std
sub
push
stos
mov
cmp
mov
xor
loop
dec
cwtl
gs
dec
fdivr
loopne
in
sub
sar
add
sarl
and
ret
or
lock
push
dec
mov
mov
mov
push
dec
call
std
idivl
lcall
fdivl
test
jp
stc
sbb
iret
pop
inc
xor
push
xchg
lahf
clc
xchg
lods
in
mov
and
or
sbb
decl
sub
xchg
out
mov
incl
mov
aas
add
jg
aam
call
inc
adc
push
xchg
in
loop
ret
or
decl
rcrb
cmp
push
sbb
repnz
sbb
cwtl
xor
sbb
xor
push
pop
fcmovne
add
inc
dec
add
fs
repz
scas
mov
dec
cmpb
mulb
xchg
mov
cmp
inc
es
test
outsl
pop
mov
dec
loop
adc
push
int3
xchg
clc
adc
cmpsl
pop
lcall
push
cmp
popa
das
das
arpl
pop
or
loopne
dec
icebp
cltd
lahf
in
push
not
jmp
cmc
ret
in
or
out
jbe
outsb
adc
jae
movb
cmp
sbb
dec
sahf
incl
inc
and
jg
testb
gs
repnz
jge
out
fsubs
xchg
das
call
or
sti
mov
lcall
test
jmp
xchg
decl
ljmp
and
jp,pt
roll
lods
mov
jb
fsts
mov
add
mov
jns
inc
incl
xorb
inc
push
mov
popa
lcall
and
sarb
incl
push
mov
xor
in
mov
jge
and
in
xor
ja
rorb
adc
stc
jmp
out
adc
decl
movsl
insl
rcr
scas
out
cmc
sbb
addr16
pop
stos
lods
xor
sub
fidivl
push
jo
call
test
mov
pop
pop
icebp
stos
ja
adc
lcall
jle
jae
out
dec
je
loop
jge
ljmp
adc
call
std
pop
xchg
decl
stc
push
int
pop
in
icebp
incl
clc
pop
test
es
call
mov
pushw
cmp
fs
xchg
cmpsb
nop
and
ficoms
lods
je
inc
and
xchg
scas
cld
mov
sub
jno
jg
sbb
mov
ja
loope
test
jg
mov
jl
movsb
fcmovnbe
ret
jmp
cwtl
mov
add
sub
adc
pop
dec
add
push
lods
push
repz
lds
sbb
jmp
lods
pusha
mov
xor
xchg
call
mov
cwtl
shrl
inc
mov
mov
and
test
xchg
xchg
mov
decl
repz
dec
sarl
loop
sub
pop
add
and
roll
into
mov
popf
hlt
cltd
add
out
xor
jo
mov
push
mov
ret
cmp
and
mov
lcall
cmp
lcall
hlt
cmp
jmp
aaa
bound
hlt
or
pop
pop
ljmp
clc
fldcw
mov
xlat
mov
lcall
shlb
pop
sar
mov
stos
pop
pop
dec
aas
jl
adc
dec
mov
subb
test
out
mov
fdivrs
call
out
cmp
leave
aad
fnsave
or
pushl
mov
daa
stos
mov
or
call
loop
dec
sahf
fisttpll
loop
leave
aam
out
call
in
cmc
pop
fcompl
pop
cmp
push
lcall
rorl
xchg
or
loop
cmp
fbld
pushl
test
out
call
aaa
fidivrl
incl
inc
and
pop
orl
mov
aam
fdivrp
out
sub
sub
xor
loopne
loope
jge
sarl
xor
push
pop
sub
movsl
rcrl
int3
sbb
push
es
cmp
call
incl
xor
iret
call
stc
or
mov
loopne
pushl
or
cmc
cltd
mov
sub
jnp
insb
push
mov
jbe
cli
sub
push
inc
test
scas
inc
incl
or
xchg
std
loope
popa
or
or
call
cwtl
jnp
lcall
bound
test
jno
mov
fidivs
or
rol
add
call
pop
enter
mov
cmp
lahf
mov
dec
mov
leave
and
repz
iret
fcomp
push
xchg
xor
inc
call
inc
pop
clc
hlt
movsl
pusha
xchg
in
outsl
xchg
iret
aaa
jecxz
pop
std
mov
add
pushl
mov
leave
fisttps
jl
and
adc
jg
mov
lcall
cmc
mov
lret
pop
mov
stc
lahf
inc
mov
call
out
push
cli
repz
pop
rcl
popa
xchg
dec
into
ret
lods
mov
test
lcall
mov
jecxz
push
sub
push
daa
mov
fbstp
in
push
test
or
lods
imul
push
ss
xchg
cltd
push
mov
lods
jnp
xchg
je
or
xor
lret
scas
inc
mov
arpl
pop
mov
cwtl
lds
dec
decl
add
lcall
cmp
jge
xchg
mov
xor
jge
sbb
dec
mov
sbb
lret
les
in
inc
dec
bound
mov
and
push
repnz
sub
ffreep
out
jns
clc
cmc
std
pop
cmp
fidivrs
pushf
pop
call
mov
push
jbe
add
call
sbb
inc
call
hlt
jbe
push
inc
pop
pop
bound
dec
xor
rcr
decl
mov
mov
outsb
jnp
shld
xchg
mov
clc
dec
and
fwait
jg
cld
aad
pop
adc
and
call
adc
jb
adc
pop
js
pop
popf
sbb
xor
in
fistpll
push
ret
pushl
jge
inc
icebp
mov
fwait
inc
stos
call
ljmp
popa
or
push
enter
xchg
and
lock
adc
outsl
mov
icebp
sti
inc
and
leave
mov
out
call
xchg
inc
lock
decl
fldl
decl
loope
clc
call
stos
clc
inc
lock
sub
jle
lahf
push
xor
pop
roll
mov
push
xor
pop
call
aad
fdivr
sub
call
dec
decl
sub
and
sbb
fs
mov
imul
fidivs
pop
inc
inc
inc
inc
mov
jecxz
jp
mov
shrb
pop
pop
jmp
fldenv
jmp
pop
pusha
sub
popf
popf
jno
sbb
ret
add
repnz
xor
jae
mov
cli
sub
push
sbb
decl
into
xchg
outsl
adc
je
movsl
xchg
loop
imul
jge
dec
xor
enter
ds
push
lahf
mov
add
test
scas
in
int
jnp
icebp
jmp
push
fld
sub
jno
adc
mov
adc
pop
fsubl
arpl
mov
mov
hlt
pop
jmp
aam
mov
fdivrp
insb
es
mov
ljmp
and
pop
inc
lcall
addr16
ficoml
js
add
jmp
ret
adcb
lods
decl
dec
mov
xchg
lds
popa
lret
out
jmp
sub
push
loop
movsl
mov
push
scas
push
and
pop
push
push
fadd
fs
dec
lahf
jo
adc
incl
xchg
ret
iret
lods
call
jge
ss
jae
gs
jmp
std
sub
dec
es
in
pop
sbb
daa
sbb
push
sub
fstl
xor
jp
dec
add
mov
jmp
mov
pop
jmp
jmp
pop
sbb
pushl
iret
stos
mov
popa
data16
add
mov
or
sti
into
pop
dec
scas
and
leave
outsl
lods
cmp
sbb
dec
adc
add
mov
mov
pushf
daa
xor
inc
fld
push
xchg
pushl
imul
sti
adc
dec
pop
xchg
push
add
mov
ret
insb
jno
das
clc
dec
jle
fwait
inc
mov
push
aaa
adc
lock
cld
dec
faddl
fwait
pop
insb
fcos
push
adc
dec
insb
lock
bound
aaa
test
jg
jns
dec
shr
inc
xor
or
xchg
and
sub
adc
incl
int
cmpsl
stos
xor
cmpps
adc
jmp
xchg
and
in
nop
inc
je
jbe
mov
sub
outsl
xchg
mov
or
or
push
jno
lods
xchg
sub
jns
mov
sbb
repnz
dec
aaa
sbb
mov
mov
js
ret
outsl
and
ljmp
mov
mov
repnz
in
mov
sub
pop
ljmp
cli
cmp
sbb
icebp
or
aam
notl
jle
mov
mov
js
adcb
dec
xor
lods
mov
aam
cltd
add
loopne
pop
call
cmp
jmp
push
mov
leave
xor
mov
in
nop
mov
push
dec
incl
xchg
test
dec
push
add
cld
xchg
pop
div
cmc
call
ss
jb
and
sti
inc
mov
repnz
outsl
shr
leave
xchg
fcmovnu
dec
xchg
pushl
sub
fldcw
negl
ljmp
lea
jmp
dec
sub
cs
lcall
pop
sbb
fwait
lods
fsubr
and
sub
and
jp
jo
push
or
decl
xor
nop
adc
ror
int3
cld
insl
xor
or
xor
inc
incb
sbb
rclb
and
ret
das
jmp
push
mov
xchg
mov
mov
call
fldcw
adc
das
sub
add
sbb
push
inc
sub
jp
je
mov
cmp
mov
pop
loop
mov
pop
dec
mov
pop
sub
leave
ja
outsb
add
jmp
add
pushl
out
adc
icebp
pop
in
sar
push
sub
test
sub
rcr
xchg
mov
mov
sub
xor
out
mov
andl
arpl
out
mov
adc
mov
ds
int3
or
in
cmc
push
outsl
aad
std
jne
xor
fwait
mov
decl
sub
jmp
and
add
cmp
pusha
test
out
dec
xchg
pop
cltd
sub
mov
sbb
jl
inc
or
loopne
jbe
jmp
and
push
dec
incl
repnz
or
mov
ret
pushl
mov
repnz
cmp
insl
xchg
in
mov
idiv
mov
push
pop
cmp
and
test
imul
xor
xchg
inc
mov
mov
pop
mov
dec
outsb
cmp
sub
dec
xchg
ljmp
sub
gs
test
fiadds
push
hlt
push
xchg
ljmp
mov
sub
test
mov
pop
fimuls
lea
cmp
mov
xor
ds
bound
in
jmp
xor
sahf
bound
sub
cmp
mulb
or
cmp
sub
push
push
loopne
incl
dec
ret
jmp
jge
sub
mov
stos
mov
orb
xor
jge
shlb
sar
and
inc
jno
mov
arpl
sub
sbb
lcall
cmp
lcall
mov
sub
fdivr
fildll
cld
nop
cmc
jp
dec
out
jge
xchg
fistps
inc
sahf
xor
jb
add
cmp
adc
mov
sbb
pop
push
test
xor
push
or
lcall
sub
pop
inc
ret
aas
push
push
pop
or
int3
jno
fdiv
jbe
cmp
dec
pushl
shlb
decb
mov
es
lock
mov
ret
loope
mov
shll
stos
mov
mov
sbb
pushf
aam
add
aam
push
stc
call
and
call
out
ja
pushf
mov
xor
mov
xchg
jl
sbbl
sbb
adc
ds
pushl
sub
mov
jo
inc
data16
das
or
dec
and
push
sub
stos
rcrb
add
jge
psubusw
push
xor
leave
xchg
call
jl
jg
call
push
shrb
or
jp
arpl
dec
pop
imul
sbb
loop
aaa
dec
jne
rorb
pop
sbb
or
cmp
das
adc
arpl
cmpsl
mov
jb
jg
shrb
sub
ss
lds
call
daa
sbb
out
push
dec
xchg
mov
cmp
stos
jbe
outsl
loop
add
lret
mov
in
and
sub
pushl
cmp
cmc
pop
jae
and
jmp
shlb
jge
mov
pop
mov
outsl
jg
xlat
outsl
loope
dec
mov
jg
jge
push
or
xor
mov
cmp
in
lret
sbb
ljmp
or
das
ljmp
cs
jnp
sbb
jle
inc
jns
decl
mov
lods
push
pop
stc
push
pop
jmp
imul
sahf
push
imull
mov
push
pop
inc
rcl
push
push
std
jno
subb
inc
mov
rcll
or
decl
pop
pop
xor
aas
cmpsb
pshufw
rorl
mov
sar
push
das
pop
loop
popf
mov
pop
pop
push
movsb
rcl
jmp
push
dec
push
lcall
outsl
ret
fstps
add
call
mov
jmp
jge
jge
into
cmp
rol
push
mov
lcall
fstl
scas
imul
mov
push
incl
fldt
push
sub
pushf
hlt
xor
push
aad
outsb
xchg
sbb
push
jae
sbbb
sahf
push
fcmovu
sub
stos
push
inc
dec
mov
aad
aam
mov
pop
orl
stos
push
mov
pusha
decl
lret
and
jnp
push
flds
loop
cwtl
int3
pushf
mov
clc
es
call
mov
or
pop
dec
decl
pop
sti
mov
iret
jg
bound
ljmp
mov
pop
call
popa
in
jnp
cmp
incb
xchg
pop
lea
repnz
pop
cmpsl
cld
push
mov
and
cmp
ret
fidivs
fmull
mov
inc
daa
cs
cmp
data16
dec
xor
outsb
push
add
hlt
fwait
loope
scas
decl
jne
or
dec
fistl
mov
fnstsw
or
push
test
pop
push
mov
adc
aas
cs
aaa
jg
mov
xor
mov
lret
dec
jae
decl
sub
shl
and
pusha
popa
roll
xor
decl
shlb
lds
sarb
fs
in
popf
aas
cmp
mov
movsl
dec
xor
jnp
mov
test
inc
mov
dec
pusha
pop
ja
test
pop
jle
out
cmp
icebp
xchg
cmp
xchg
mov
cmp
lods
adc
xchg
lock
mov
jmp
divb
dec
xchg
cltd
mov
decl
out
adc
enter
sub
loopne
adc
mov
clc
mov
decl
cmpsb
push
ss
mov
add
jge
adc
sub
jg
ds
pop
aam
push
sub
jmp
cmp
outsl
pushf
and
call
leave
lret
out
inc
jg
adc
fs
fwait
cmp
sbb
cmp
sbb
pushf
call
das
pop
lods
push
adc
js
mov
jo
nop
adc
xchg
pop
dec
mov
dec
test
sbb
mov
and
fisubrs
push
mov
cmp
aad
jmp
leave
addb
cmp
mov
cmp
jmp
sub
mov
aad
test
xlat
cmp
inc
fcoms
xchg
inc
sub
fdivrp
pop
jo
fwait
xchg
mov
icebp
ret
mov
mov
lods
or
fcomps
or
sbb
add
jmp
add
outsb
sbb
dec
or
mov
cli
popa
mov
das
xor
push
je
cld
inc
mov
aad
sub
adc
pop
lods
scas
sub
push
sbb
imulb
mov
outsl
lahf
decl
pop
push
loope
nop
jg
jecxz
loopne
insb
jg
pop
and
ror
call
jae
lods
fcomi
cmpsb
hlt
mov
dec
lods
outsl
fcomps
add
sub
pop
call
lret
or
dec
mov
push
adc
mov
in
dec
mov
push
popl
pop
inc
aaa
inc
push
cld
cld
lea
andb
mov
jecxz
push
rcrl
jg
aad
in
sub
pop
inc
aad
shrb
pop
shr
mov
jp
inc
mov
incl
loopne
sbb
clc
pushf
fwait
dec
xchg
pop
icebp
sbb
outsl
popf
mov
decl
xchg
int
pop
ret
xchg
addr16
jno
adc
pop
decl
scas
sbb
xchg
mov
ljmp
pusha
xchg
jno
xchg
lock
jecxz
cli
xor
scas
decl
cwtl
test
sbb
orl
sub
pop
dec
mov
adc
dec
push
and
outsl
and
xor
je
ja
loopne
cltd
mov
push
inc
push
leave
mov
xorb
neg
fdivrs
clc
pop
cmp
scas
orl
xchg
in
dec
push
xor
out
xchg
push
ds
inc
cmp
push
or
in
mov
jns
nop
stc
fs
aas
dec
and
dec
jns
pop
lea
jmp
sub
sbb
call
jne
mov
daa
adc
pushf
mov
mov
or
incl
lret
push
insl
mov
insl
pop
out
cmp
sub
lret
rcl
push
mov
jnp
or
ret
sub
das
movsl
adc
loopne
enter
sbb
subl
xor
test
ljmp
sbb
sub
les
mov
sub
inc
in
or
ljmp
icebp
ja
arpl
ss
lds
std
or
push
jge
jge
call
fwait
jecxz
push
xchg
incl
or
fbstp
fisubl
and
in
add
pop
outsl
cmovb
pop
lods
mov
jne
paddusw
push
xchg
jg
and
mov
push
inc
mov
cltd
ljmp
and
in
fwait
ljmp
ud0
pop
pop
stos
out
jl,pn
xor
sbb
jecxz
dec
mov
jle
push
call
push
sub
pushl
fidivrs
popf
dec
add
mov
cmpsl
adc
and
and
jmp
lahf
and
pushl
stc
mov
loope
ja
push
and
sbb
outsl
sub
pushl
pop
ds
xor
fidivl
fildll
repnz
sub
push
cmp
ss
xor
testl
rcrb
push
push
and
fdivr
dec
cld
aaa
push
inc
inc
jp
stc
scas
shlb
mov
mov
pop
cmpl
add
dec
addr16
repz
rorb
imul
lock
in
repnz
pop
call
mov
pusha
incl
out
mov
out
or
fmull
fiadds
std
leave
dec
sub
push
cmp
and
inc
pop
pop
or
push
lods
mov
insb
aas
das
insl
adc
rol
cmpsl
jo
cmpl
inc
sub
dec
or
dec
push
pop
sbb
rclb
jno
out
lock
push
dec
ljmp
jae
and
test
inc
sbb
pop
je
outsb
add
icebp
cwtl
jb
pop
cld
cwtl
add
cmc
test
outsl
push
cmp
fidivl
xorb
sahf
popf
repnz
ljmp
out
jne
pop
push
and
jg
cltd
movhps
loope
and
out
mov
push
add
inc
add
jno
in
pushl
mov
mov
loope
cltd
cs
jg
scas
stos
in
out
outsl
ljmp
sub
add
cmp
addr16
inc
rorl
out
mull
push
dec
dec
dec
ljmp
pop
dec
ljmp
pop
dec
shl
cmc
lcall
xorl
int3
ds
dec
out
std
cmp
lcall
mov
stos
test
mov
sbb
push
pop
mov
jg
aad
frstor
push
dec
mov
pop
lcall
jb
aam
call
mov
xchg
xor
pop
mov
sbb
adc
pop
je
push
push
inc
call
xchg
shr
cld
mov
jecxz
mov
mov
mov
das
rcl
sar
lahf
jge
push
mov
cmpsb
cmp
jo
adc
loopne
repz
xchg
rcrl
adc
sub
xchg
aam
and
jno
fucom
lock
xchg
insb
and
andb
jmp
rolb
or
cmc
rcrb
incl
incb
add
sarb
adc
movsl
pop
mov
stos
jo
sbb
add
push
fcmovu
push
std
sub
pop
inc
movsl
sbb
cmp
out
jle
mov
hlt
fs
cld
outsl
push
je
push
pop
out
adc
add
mov
sbb
jnp
adc
shl
mov
push
test
jle
mov
jp
mov
push
jae
cmp
mov
hlt
movsl
mov
jge
std
lcall
xor
out
insb
imul
cmpsb
std
sbb
push
xor
cli
daa
mov
fs
or
push
xor
clc
lret
stos
push
sbb
pusha
pop
add
testb
negl
lock
notb
jmp
ljmp
aad
jge
and
pop
icebp
subl
mov
scas
cmp
pushl
dec
pushf
pop
add
imul
fidivs
sub
push
popa
out
sub
pushf
sbb
jmp
jnp
push
and
xor
cld
add
xchg
sbb
fistps
mov
adc
lcall
push
xchg
xor
ret
js
call
das
call
pushl
in
ljmp
jmp
jbe
jmp
test
jb
int3
arpl
test
mov
in
mov
push
call
hlt
pop
xor
dec
inc
ljmp
xchg
test
add
lods
mov
cmpsl
imul
push
mov
test
inc
cli
aas
in
inc
int3
cmpsb
mov
jo
incl
push
push
sahf
inc
and
sbb
pop
adc
nop
jg
cmpsl
imul
mov
pop
ja
cmp
dec
mov
dec
lods
ljmp
loop
or
pushf
repz
imul
sub
test
aad
call
popa
std
pop
adc
daa
or
push
jb
push
mov
jmp
stos
outsl
les
daa
decl
cld
xchg
cs
xchg
jmp
in
movsl
sub
jmp
jg
push
mov
sahf
cmp
lods
movsb
lock
cmp
lcall
lods
fbld
outsb
adc
lahf
imul
xlat
jle
mov
xor
mov
cmp
lods
daa
mov
loope
mov
mov
and
fldenv
decl
mov
mov
jne
icebp
imul
ss
mov
ja
or
cld
xor
ds
pop
mov
ljmp
fdivr
or
repz
or
mov
call
jbe
out
test
aaa
mov
dec
incl
sti
nop
cmp
mov
clc
dec
outsl
mov
lock
sbb
lret
cli
loopne
jle
lcall
aas
jp
push
loope
loopne
stos
jl
or
inc
cmc
call
pop
xor
pushl
mov
pop
lcall
lock
mov
mov
inc
je
imul
pop
aas
nop
push
mov
jmp
lret
das
xchg
aad
shlb
push
bound
fwait
scas
jle
stos
pushf
xor
icebp
cmp
out
test
pop
sarl
inc
push
ss
int
mov
add
jmp
movsb
and
mov
ret
in
ja
lret
adc
push
dec
pop
out
pushf
cmp
mov
cmp
into
mov
adc
pushf
cld
jae
or
idiv
mov
pop
inc
xchg
out
pushf
decl
mov
jge
ds
jmp
aam
jmp
jg
inc
mov
fucomi
mov
mov
call
dec
jne
scas
adc
xchg
cmp
xor
xchg
cmpsb
test
or
int
lock
xor
sbb
pop
push
clc
dec
incl
repz
jmp
inc
hlt
and
adc
data16
mov
clc
jb
decl
mov
fdivr
repz
clc
fdivrp
mov
and
enter
adc
sub
rolb
out
fldt
xor
es
sbb
xor
jb
adc
jb
xor
jmp
dec
mov
aaa
ja
ficoms
adc
push
and
btr
les
mov
dec
hlt
push
rcrb
adc
cli
pusha
adc
cmpsb
xor
shll
loop
daa
mov
call
pop
sar
pop
mov
xor
aas
sub
add
pushl
xor
pushf
dec
scas
call
xchg
dec
loope
cmp
shlb
sarb
sar
fimull
out
jp
incl
in
inc
lcall
xchg
cwtl
gs
imul
dec
sti
push
popa
mov
mov
incl
cmpsb
clc
arpl
test
pushf
xchg
outsl
sti
mov
jnp
mov
adc
cs
adc
enter
mov
jg
dec
mov
sub
movsl
and
push
stc
and
pop
sub
dec
xchg
dec
inc
call
dec
aad
subb
cmp
incl
cmp
rol
mov
lcall
test
sbb
pop
mov
arpl
cltd
mov
pop
lds
jno
ret
lret
lret
mov
dec
fdivrl
xchg
mov
jno
mov
push
call
and
dec
movsb
jle
xchg
mov
mov
jne
push
ds
sub
int
mov
rorl
pop
pop
scas
pop
ret
call
mov
lods
pushl
sub
jp
xor
xor
movsl
add
jmp
push
cltd
cmp
data16
aaa
inc
in
loop
and
filds
decl
jo
push
or
push
sub
dec
icebp
xor
mov
std
test
sbb
dec
loope
sbb
jg
dec
int3
adc
xchg
adc
or
gs
std
inc
call
pop
inc
jae
or
mov
ret
enter
and
mov
pushl
mov
xchg
out
adc
dec
pop
call
mov
dec
add
mov
out
pop
cmp
movsb
js
pop
sub
xor
repnz
call
mov
mov
iret
in
pop
jl
mov
add
jnp
popf
and
or
int
sub
dec
xchg
jmp
push
cmp
xchg
das
or
hlt
fsub
loope
jb
or
mov
mov
movsl
cmc
iret
or
test
fbstp
jmp
mov
decl
jge
iret
push
insb
fwait
and
dec
jno
call
into
into
daa
jge
inc
call
neg
mov
sub
call
es
imul
push
inc
je
stos
cmp
and
scas
push
dec
shrl
test
mov
add
mov
sub
or
cli
xchg
leave
test
mov
stc
call
clc
ja
fwait
insl
mov
push
aas
cmp
fnstsw
and
mov
mov
scas
pop
push
sub
pop
movsb
xchg
and
iret
inc
inc
adc
in
sub
xchg
xor
jo
clc
cmp
mov
rcll
adc
pop
decl
adc
lahf
xchg
cld
arpl
das
popf
nop
insl
in
incl
xchg
cmp
lea
push
mov
fildl
incl
jecxz
xor
lahf
mov
mov
call
stos
inc
add
adc
dec
lcall
jmp
stos
movsl
dec
in
in
dec
mov
sbb
adc
ja
adc
in
test
cmc
and
xchg
in
xor
and
xchg
sub
xchg
js
pop
in
cli
call
mov
imul
mov
mov
ds
mov
dec
dec
dec
xchg
mov
imul
mov
pop
cwtl
xchg
enter
inc
mov
lods
mov
inc
xor
loope,pt
dec
ds
mov
enter
adc
mov
mov
adc
and
les
inc
mov
dec
inc
insb
or
cmc
lcall
rep
jo
in
clc
clc
ljmp
add
adc
imul
jmp
aas
mov
ja
loopne
lock
and
pop
push
sbb
adc
xor
adc
icebp
imulb
mov
sahf
imul
roll
cmc
or
jmp
jecxz
outsl
xchg
out
incl
inc
xorl
aas
hlt
xor
adc
cli
std
es
rcrb
xchg
ss
aaa
adc
call
insl
arpl
stos
in
sbb
mov
push
incl
test
jmp
cmp
jp
sub
jge
test
ret
sub
inc
lods
dec
adc
xchg
push
fptan
sub
adc
notb
insl
jo
popf
mov
rcll
dec
push
aaa
ljmp
ljmp
sub
xlat
scas
out
jmp
outsb
jmp
outsl
jmp
xor
dec
stos
adc
and
or
loop,pt
test
mov
pop
inc
xchg
xchg
and
fs
cmpl
pop
fstps
adc
call
ja
push
add
adc
out
loope
inc
push
or
add
sub
out
cmpsl
movsl
jge
pop
cmp
dec
hlt
imul
ljmp
cltd
push
aam
cmpl
shlb
ret
lret
mov
dec
mov
insb
in
push
cmpsb
dec
call
add
xchg
mov
mov
mov
mov
mov
cmp
rcrl
fcoms
mov
lcall
in
jmp
loop
pop
inc
xlat
mov
bound
lods
call
mov
sub
mov
pop
push
xchg
movsl
repz
add
aas
jl
out
xchg
les
xor
or
jmp
js
outsl
and
ss
xchg
mov
xchg
push
pop
insb
imulb
pop
ficoml
sub
pushf
jge
pop
pop
clc
decl
mov
in
call
add
sbb
pop
jle
adc
cmp
add
divl
cld
loopne
aad
fists
cmp
adc
shl
aaa
mov
mov
hlt
sarl
call
test
jmp
dec
mov
dec
xchg
mov
std
scas
shr
aaa
ljmp
jl
sbb
dec
ja
push
push
xor
aaa
jo
xchg
xchg
jmp
iret
xchg
fdivr
inc
lods
inc
scas
stos
add
sar
imul
inc
fsubr
pop
clc
aam
clc
cmpsb
fists
lds
xor
pushl
iret
rcrb
cmp
lahf
stos
cmc
test
inc
inc
adc
jge
lcall
pop
sbb
loopne
dec
sbb
test
xor
pop
mov
cwtl
sahf
in
out
lcall
insl
sbbl
or
mov
jmp
pop
xor
jecxz
dec
int
jle
cmp
sbb
adc
insb
popf
mov
jecxz
or
ljmp
test
push
das
sbb
pop
stos
dec
and
dec
int
mov
jbe
fdivl
adc
int
imul
jmp
push
scas
push
xchg
repz
decl
cmc
or
cmp
jge
pop
xor
ljmp
jbe
test
adc
arpl
outsl
mov
push
and
hlt
mov
nop
sar
or
jo
pop
mov
in
inc
push
push
jle
incl
lret
xor
call
jmp
mov
cwtl
scas
loop
shl
pop
pop
jge
incl
aad
sarb
xchg
mov
ss
scas
push
pusha
loope
mov
mov
int3
push
fwait
push
ljmp
sbb
and
inc
sbb
or
pop
dec
jb
mov
shr
jbe
fisubl
cld
mov
mov
nop
rcrb
jge
mov
fildll
sub
lock
test
fisubl
stos
mov
sub
xchg
inc
ret
jmp
xchg
test
or
lock
jle
mov
or
std
xchg
jecxz
push
imul
dec
sbb
xor
orl
xor
push
ffree
lahf
mov
decl
gs
xlat
mov
xor
jmp
fsubr
inc
mov
add
ficoml
xor
adc
xchg
lcall
xor
aaa
fisttpll
xorl
scas
rorl
fstpt
rclb
xchg
push
jl
dec
in
inc
sarl
pop
mov
push
mov
les
mov
mov
lods
sbb
leave
dec
jecxz
pop
dec
jg
aam
pop
mov
incl
scas
jb
jmp
aad
sbb
clc
pop
repz
adc
xor
imul
push
cli
adc
jb
mov
movsl
aas
push
stos
mov
mov
inc
decb
out
fdivr
dec
adc
xor
dec
jmp
imul
mov
call
bound
push
mov
pop
jmp
and
mov
lcall
cld
unpcklps
ljmp
mov
incl
stos
pxor
adc
jmp
inc
scas
sub
cmp
mov
decl
push
rcrb
cmpsl
arpl
pop
adc
test
mov
roll
sbb
mov
pop
cmp
lcall
out
out
mov
mov
iret
lock
gs
lds
inc
cmpsl
call
jbe
lcall
adc
or
imul
loopne
or
mov
jmp
in
negl
sbb
test
decl
dec
mov
mov
ret
imul
roll
push
adc
jp
sub
std
sbb
arpl
and
sub
push
pop
cmp
pop
cmc
js
cmp
and
in
jmp
aam
inc
iret
ret
pop
shlb
jg
xor
push
jg
pop
loope
xchg
ret
fwait
xor
mov
test
das
jp
jmp
dec
adc
das
test
std
push
pusha
mov
push
jns
fwait
push
into
ds
push
mov
pop
xchg
jle
adc
incl
in
jg
xor
or
dec
repnz
cmpsb
lock
push
and
das
fcompl
jmp
aam
sbb
lcall
jno
pop
dec
das
incl
rorl
mov
out
dec
aad
jge
jbe
das
insl
add
arpl
outsb
mov
pushl
sbb
in
cld
mov
sub
mov
ljmp
add
mov
outsb
imul
add
dec
push
fldenv
call
sbb
lds
xor
dec
mov
out
out
dec
mov
mov
decl
cli
pop
pop
out
call
mov
pusha
pop
mov
movsl
or
or
add
mov
test
pop
mov
push
mov
sti
jecxz
scas
nop
jg
sub
lcall
clc
and
pop
fwait
pop
dec
sbb
iret
mov
dec
cmp
pop
dec
dec
xchg
or
cmp
inc
push
lea
sbb
lahf
incl
pop
movsb
mov
cmp
adc
hlt
in
mov
imul
or
push
les
clc
lods
ljmp
jno
clc
pop
adc
mov
xchg
mov
in
jbe
push
jmp
jbe
stos
lcall
jge
jae
ljmp
scas
cmp
or
loopne
xchg
or
pop
fnstcw
sbb
sbbl
je
insb
dec
out
push
xor
or
pop
cmp
pop
and
lods
lret
jns
sub
std
jmp
mov
lcall
test
lcall
int3
fdivr
test
ljmp
mov
jmp
and
push
inc
jb
pop
inc
testl
in
pop
sarl
lods
ds
mov
fcoms
cltd
inc
out
inc
rorb
pushl
out
clc
data16
cmp
lods
ds
lcall
inc
int
lcall
pop
leave
into
insl
dec
imul
mov
inc
push
jb
lcall
pop
mov
pushl
aad
mov
movsb
rcll
lcall
decl
jmp
pop
lock
dec
xchg
mov
sbb
or
nop
xchg
push
push
jo
or
mov
jle
dec
jmp
gs
push
push
jg
jmp
dec
mov
ljmp
push
pop
xlat
incl
out
mov
arpl
scas
mov
loopne
jl
add
mov
int
xor
daa
ljmp
je
pop
fcompl
mov
inc
jne
leave
jecxz
imul
add
jge
xlat
fists
popa
mov
adc
pop
jle
inc
mov
jle
aas
push
outsl
shll
lods
push
sub
scas
push
aaa
mov
data16
pushl
gs
je
inc
xchg
ljmp
dec
test
mov
push
int3
pop
call
mov
outsl
lcall
add
cmp
divb
call
jmp
shl
outsl
daa
test
sbb
stos
ret
cs
loope
push
aas
lods
cmp
mov
mov
dec
cmp
cmp
fsubrp
fcoms
cmp
sbb
add
sahf
sbbl
jg
pop
cmp
je
decl
add
jecxz
int3
jecxz
ljmp
jne
iret
mov
test
pop
aaa
xlat
and
push
aas
jbe
pop
inc
inc
cld
stos
mov
fwait
sub
mov
loop
notb
adc
mov
pop
sbb
loope
je
fdivr
fwait
sub
xor
sub
out
mov
inc
sar
addr16
repnz
sahf
push
ljmp
bound
cwtl
lcall
inc
in
inc
cmpsl
adc
call
dec
cwtl
in
xchg
xor
aad
shll
and
in
mov
int
xlat
pop
sti
cmp
inc
ret
fimull
mov
jmp
pop
sub
ja
into
out
mov
or
xor
xor
xor
xchg
sbb
inc
stc
pop
subb
ss
and
add
daa
pop
jae
sub
xchg
mov
sbb
xchg
jg
into
fnstenv
xchg
pop
push
jae
mov
rclb
mov
bnd
xor
and
stos
out
mov
hlt
mov
hlt
cltd
out
sub
fldcw
decl
push
mov
inc
push
push
cs
or
add
fisubl
jmp
ljmp
ljmp
repnz
test
sti
mov
xchg
clc
js
in
and
jg
aad
je
jecxz
xchg
adc
xor
loop
pop
jge
les
mov
pop
xor
mov
incl
xchg
jg
cmpsl
or
cmp
sarb
cmc
cmpsb
push
adc
das
rcll
sarl
xchg
pop
mov
inc
inc
push
fdivrl
mov
cld
pop
mov
sti
lcall
sbb
xor
cmpsb
xchg
decl
int
fldcw
mov
enter
movsl
xchg
and
stc
inc
enter
inc
in
sbb
shlb
sub
pushl
leave
jo
mov
push
push
pushf
les
dec
add
pusha
leave
dec
mov
ljmp
loop
stos
test
add
jp
or
aad
lcall
test
jo
mov
insb
scas
cmp
cli
lahf
jbe
lods
std
xor
jae
mov
je
and
cs
inc
mov
rorl
jge
mov
cmc
inc
add
mov
push
xlat
adc
or
lcall
pop
cld
mov
fisubrs
ljmp
lock
jecxz
mov
add
sbb
roll
into
xchg
bound
pop
jmp
repz
es
aaa
data16
ljmp
in
aam
stc
add
fdivr
sub
fcos
inc
add
and
movsl
dec
loope
dec
int
lahf
jl
lea
je
push
int3
cli
out
adc
jle
jl
or
incl
adc
xor
incb
jne
inc
mov
stos
lods
push
out
imul
mov
incl
dec
stos
mov
js
pop
decl
inc
xor
mov
add
jns
daa
mov
lock
repz
mov
frstor
mov
and
jp
cmpsb
je
pushl
adc
xor
jecxz
sbb
out
pushf
loop
push
sahf
lahf
mov
int
loop
cmp
inc
je
or
mov
add
decl
jmp
sarl
sbb
jle
push
add
push
repnz
xchg
lcall
cmp
in
jnp
cmp
jo
dec
mov
inc
leave
call
and
lcall
adc
push
mov
adc
pop
jmp
jg
cmpsb
inc
lock
cmpsb
fisubrl
dec
mov
xor
adc
call
test
icebp
push
call
sti
or
or
loopne
or
mov
pop
decl
bound
or
xchg
fs
adc
lods
and
imull
call
adc
jge
inc
aad
call
in
das
loop
popa
or
pushl
insl
jp
and
mov
jmp
shl
or
fidivl
push
test
cmp
rcl
sbb
lea
fisubs
mov
ljmp
adc
adc
dec
push
fistl
test
push
incl
and
mov
pop
pandn
pop
push
jb
nop
inc
fisubs
call
addb
jb
lock
and
jp
mov
sbb
popf
cmc
push
loope
fs
sub
jl
or
mov
cmp
arpl
ljmp
mov
repnz
loopne
dec
cmp
inc
jmp
orl
cmc
push
loope
das
and
adc
mov
sub
push
jecxz
sbb
jno
adc
or
and
or
fistpl
pop
mov
inc
xor
or
xchg
mov
adc
lods
sub
dec
mov
xchg
insb
jne
sub
jmp
mov
out
std
mov
or
ds
incl
fildll
inc
lea
mov
inc
cmove
inc
call
jg
add
shlb
dec
pop
and
lea
adc
ljmp
inc
inc
test
lahf
scas
pop
dec
jae
sbb
incl
inc
add
lcall
mov
dec
adc
inc
scas
add
call
sbb
xor
sarb
push
cmpsl
jo
addr16
xor
dec
incl
inc
leave
xor
mov
test
sub
ret
pop
push
xchg
outsb
ja
push
loopne
push
movsl
addb
mov
arpl
insb
mov
mov
pushl
push
or
fdivl
push
bound
xorl
ret
add
into
jmp
sahf
cmp
sahf
cmp
or
addb
sar
ror
aaa
int
sbb
incl
movsb
xorb
add
pop
fists
cmp
arpl
mov
jmp
bound
out
jnp
pushl
loope
push
add
mov
call
xor
popa
xor
out
icebp
sub
pop
mov
outsl
std
sbb
push
pop
cmp
mov
adc
insb
xchg
or
out
testb
stos
adc
outsb
push
xchg
mov
jbe
scas
shl
roll
loop
cmc
data16
add
popa
inc
jmp
jg
xlat
subl
xor
push
mov
es
jb
cmp
cltd
add
sbb
xchg
out
addr16
jmp
push
or
mov
loope
stos
pushl
xchg
xchg
or
sub
mov
ljmp
out
xchg
lgs
jp
loop
repz
cltd
shll
pushf
jg
lock
cmp
imul
test
mov
pop
mov
jge
leave
inc
adc
mov
xchg
daa
cmp
je
sarl
data16
jmp
je
xchg
mov
xchg
mov
popf
dec
or
fidivl
test
incl
add
test
fldl
pop
add
fbstp
cli
stos
dec
jmp
sbb
add
pushl
jmp
lcall
inc
fiadds
push
xor
push
idiv
jg
mov
cmp
sar
and
xchg
mov
jge
adcl
lcall
cmp
push
add
mov
adc
push
inc
pushl
lods
push
mov
fbld
ljmp
inc
pushl
js
hlt
push
dec
push
and
cld
mov
xchg
or
jno
push
mov
mov
fcomps
push
push
popa
jmp
rcl
cmp
mov
xor
pop
mov
jmp
sub
out
ss
jg
ret
dec
push
lock
xchg
ljmp
mov
jge
sbb
hlt
decl
dec
jne
jl
arpl
movsl
cli
mov
divl
enter
leave
movsl
in
cmp
es
aad
push
jle
xor
xchg
imul
pop
fsts
outsl
dec
mov
xor
lcall
xchg
out
push
jmp
adc
cmpsb
mov
push
lahf
insl
outsl
cmp
mov
jg
adc
ss
rorb
cmc
push
adc
add
push
mov
stos
decl
test
jmp
inc
enter
add
ljmp
cld
decl
push
push
call
xchg
dec
fwait
movb
fdivrl
jl
sbb
call
sbb
pop
cmp
cld
test
loope
and
xor
shll
jne
pop
loopne
orl
cmp
or
xchg
adc
aas
dec
int
adc
pushl
mov
adc
fildll
mov
stc
mov
and
inc
inc
sbb
lock
inc
das
mov
cmc
jge
jae
sbb
and
inc
lcall
ljmp
pop
jg
sahf
xor
jbe
xchg
hlt
or
out
push
sub
aad
in
icebp
sub
aas
add
and
sahf
mov
sti
cmc
pusha
sub
jmp
ja
jcxz
dec
icebp
outsb
sub
add
sub
sub
push
push
xor
hlt
xchg
rcrb
das
in
sbb
adc
adc
dec
test
sbb
fsub
jne
cmc
sbb
lret
out
jecxz
cwtl
test
filds
and
mov
ja
pop
fisubrl
or
mov
jl
lods
fwait
push
and
dec
mov
ljmp
das
adc
fcom
movsb
pop
push
orl
push
push
ja
mov
jg
inc
inc
rorb
pusha
sub
enter
mov
mov
push
jmp
insl
add
sub
test
pop
orb
mov
enter
in
add
divb
mov
cmp
jmp
cmpsb
pop
test
testl
das
or
jbe
cmp
mov
popf
fildll
leave
fs
xor
call
or
imul
xor
add
std
mov
jo
adc
add
dec
mov
mov
dec
loopne
int3
and
sub
bnd
mov
out
jecxz
inc
jnp
xor
or
fdivrp
cltd
jge
push
ljmp
push
xor
mov
sarb
xchg
test
push
mov
push
icebp
daa
add
and
mov
xchg
dec
and
and
or
cmp
addl
lcall
imul
iret
sub
outsl
ljmp
inc
mov
jnp
xchg
jg
mov
sub
xor
inc
pushf
test
pop
cmp
mov
mov
out
mov
pusha
aaa
inc
loope
sub
gs
pushl
loop
fsubrs
mov
insb
gs
jnp
idiv
cmp
xchg
jmp
imul
inc
hlt
fstps
cmp
jns
xlat
outsl
cmp
test
es
mov
xor
popa
or
lcall
mov
nop
xor
xchg
add
pop
fldenv
popf
mov
jl
xor
mov
adc
mov
ret
shl
inc
mov
jmp
ljmp
dec
inc
scas
push
popf
xor
jbe
inc
in
jmp
add
or
filds
or
or
or
incb
lahf
pushl
imul
fstpl
outsb
mov
hlt
jge
leave
sub
or
es
cwtl
dec
jns
call
jmp
cld
jmp
loopne
cs
stos
add
jae
stc
cmp
inc
icebp
mov
mov
dec
jb
jo
sarl
lods
pushl
xchg
lcall
dec
lret
testl
cmpl
push
fnstcw
jmp
xchg
out
lret
lcall
ret
in
pop
or
and
and
mov
pop
inc
jmp
dec
fbld
incl
iret
ficomps
in
pusha
mov
idivb
inc
inc
setle
pop
leave
mov
rcrl
pop
and
call
jo
imul
and
cld
std
lods
mov
mov
mov
xor
out
push
decl
push
jg
addr16
mov
inc
sub
sbb
sti
insb
sar
dec
les
xchg
mov
add
inc
xchg
sbb
dec
out
xor
jmp
mov
cmpsb
out
adc
jne
in
loop
jbe
xchg
pop
adc
push
sbb
push
inc
jae
decl
mov
das
test
ret
je
add
pusha
scas
jecxz
jbe
mov
or
mul
and
inc
mov
std
push
xor
popa
test
out
pushl
rcrl
or
sbb
and
mov
es
sub
leave
es
popa
inc
shl
jne
dec
outsl
insl
stc
lock
jp
lods
shll
cltd
aaa
adc
test
in
pop
mov
iret
loopne
stos
jae
cltd
xor
daa
lods
decl
leave
mov
add
subb
sbb
push
dec
repnz
mov
inc
or
jbe
inc
ljmp
pop
ds
mov
and
fsubp
jmp
fistpll
cmp
mov
lret
mov
int3
or
aaa
jecxz
push
push
loope
mov
xor
bound
test
push
icebp
cmp
movsl
push
adc
lea
cmp
std
pop
inc
out
outsl
add
lcall
jmp
loopne
mov
je
jmp
imul
fmul
pop
xchg
mov
ljmp
outsl
mov
outsl
test
gs
push
mov
xchg
ljmp
xchg
incl
push
stos
lcall
inc
test
jmp
adc
decl
push
push
cmp
mov
sbb
and
sti
shl
mov
sub
insl
repnz
in
mov
ljmp
fstpl
pop
call
std
xchg
pop
jle
inc
jbe
or
icebp
stos
iret
dec
popa
cmpsl
addr16
jns
or
push
jecxz
or
pop
jmp
pop
ss
ret
lcall
jo
lods
dec
insb
push
push
faddl
shll
mov
cmpsl
std
icebp
dec
stc
adc
das
fadds
push
hlt
fists
je
add
call
xchg
dec
add
adc
insb
mov
mov
adc
lock
jmp
xchg
stos
mov
lea
add
pusha
inc
sbb
mov
mov
pop
inc
in
decb
sbb
fists
mov
stc
dec
xchg
adc
jb
int3
inc
je
in
ds
shrb
dec
decl
xlat
loope
clc
lds
jmp
icebp
mov
pusha
movl
inc
push
inc
dec
out
test
test
xlat
mov
cmpsl
outsl
mov
cwtl
and
or
pushl
std
mov
dec
movsl
icebp
mov
jb
call
xor
pusha
mov
aaa
push
aam
mov
aam
loope
imul
ljmp
mov
inc
cmp
sub
call
jae
hlt
mov
jp
ss
mov
cli
push
push
repnz
aas
adc
hlt
std
sti
jnp
xorl
mov
sbb
mov
xchg
cmp
sub
sbb
daa
icebp
shll
int
and
mov
ljmp
cltd
aas
and
std
cmp
lods
inc
ljmp
out
adc
and
fmul
cmp
shrb
loop
push
cs
sub
fstpt
pop
xchg
repz
inc
pop
std
inc
dec
mov
lcall
adc
das
call
xchg
icebp
dec
add
mov
movsb
mov
dec
inc
adcl
mov
rclb
gs
pushl
fs
movsb
ficoml
jmp
outsb
repz
and
outsl
loope
fnstsw
clc
jo
fsubrs
pop
pop
pop
pushl
xchg
aas
repz
lods
icebp
inc
inc
outsl
icebp
jge
mov
iret
mov
std
xor
lcall
sbb
mov
fcmovu
enter
cmp
arpl
mov
mov
cmp
jmp
adc
jns
cmp
sbb
clc
and
sti
lea
in
lods
scas
or
pop
cmpsb
pop
cld
add
call
add
andb
call
outsl
pushf
movsl
mov
pop
or
pop
arpl
push
repz
push
iret
xor
push
shlb
incl
fs
inc
cmp
loop
bound
jb
mov
mov
pop
cmc
jp,pn
icebp
jecxz
pop
dec
sub
jp
ficoms
leave
hlt
repnz
ret
pushl
test
pop
scas
jmp
cmp
jg
xchg
lods
jmp
lret
inc
jg
daa
enter
sub
cli
out
sbb
fidivs
and
and
sar
aas
xchg
movsb
adc
movsl
inc
pushl
pushf
push
jmp
out
stc
jbe
xor
insl
cmpps
or
call
repz
out
inc
inc
call
push
pop
jmp
adc
nop
std
cmp
push
cmp
push
pushf
cld
or
insb
arpl
decl
ds
ja
loopne
stos
in
cmp
mov
decl
stos
rcrl
leave
outsb
cmp
outsb
popaw
insl
movsb
cmpl
clc
jl
add
mov
loopne
fwait
jmp
cmp
call
lret
pusha
into
decl
pop
lret
out
xorl
pushf
loopne
add
jg
sub
mov
sbb
arpl
xor
lock
jmp
pop
push
adc
pop
sahf
aas
stos
push
mov
daa
stc
fcmovbe
cmc
pop
jle
sub
sbb
mov
fistpll
loope
ljmp
pop
rolb
icebp
rol
xchg
jmp
push
cmp
fisubs
lcall
imul
loope
test
out
rclb
mov
mov
cmp
std
add
jmp
rorb
outsl
and
and
add
jge
fsubl
pop
inc
orb
cmpsb
jp
and
das
sbb
or
xor
std
xchg
dec
xor
push
idivb
jle
std
sti
inc
pop
mov
xor
stos
push
fistl
hlt
push
push
in
int3
jb
das
jmp
outsl
fs
call
push
jmp
cmp
arpl
sti
mov
mov
test
dec
ljmp
inc
out
inc
dec
jg
push
sub
test
ljmp
pop
mov
stc
daa
xchg
iret
dec
push
jle
test
push
mov
jns
cmc
cmpsl
adc
cmpb
jno
in
dec
popl
and
xor
pop
std
mov
fsubs
dec
sti
outsb
mov
jecxz
push
incb
jl
and
jmp
lods
call
stos
pop
daa
mov
push
clc
ds
sub
sbb
idivl
jb
jmp
or
xor
fdivrp
pop
pushf
jns
ffree
lret
xor
dec
int3
lret
xor
decl
ret
mov
fiaddl
push
shrb
xchg
std
aad
sbb
push
orl
fneni(8087
imul
mov
fiaddl
out
or
mov
enter
insb
lret
aad
imul
xchg
or
icebp
pop
and
inc
decl
testb
pushf
and
stc
movsl
out
pusha
stc
push
and
cwtl
out
stos
inc
inc
call
push
stc
stos
mov
dec
sbb
mov
mov
stos
cmp
pushf
pop
fildl
cli
hlt
call
jge
push
sbb
fdivr
sub
dec
xchg
call
lahf
or
imul
pop
push
clc
lock
inc
inc
pop
mov
mov
and
dec
xchg
sub
mov
jne
adc
decl
loopne
addl
stos
lahf
adc
xor
add
jg
cmp
pushl
ret
neg
cmp
xor
dec
pushf
cmpb
aaa
jmp
loope
leave
mov
sbb
dec
inc
fcos
test
ja
xchg
cld
inc
sbb
xchg
pop
pop
add
cld
mov
cmp
daa
das
inc
dec
pop
pop
decl
jg
incl
repz
call
loop
sbb
stc
jmp
repz
and
dec
lret
and
mov
cmp
add
dec
sbb
in
aaa
dec
gs
push
jo
movl
or
clc
push
pop
dec
jmp
cli
dec
and
xadd
dec
test
dec
mov
fcmovb
dec
inc
dec
and
jae
nop
pop
cld
and
fcom
push
or
sbb
sarb
ja
std
sarl
mov
loop
push
push
sub
push
loop
fcomps
mov
pushl
adc
incl
ljmp
cmpsl
sub
cmp
int
xor
std
sbb
xlat
cmpsb
jae
pop
pop
insb
pushl
or
jb
jbe
mov
cmp
loope
jle
loopne
icebp
adc
data16
cmc
jp
sub
outsl
test
shll
mov
pop
call
xor
hlt
sbb
sahf
inc
das
or
insb
xlat
cmc
movl
pop
popa
or
dec
or
icebp
mov
ja
pushl
cmp
or
lahf
dec
fdiv
int
addr16
decl
ret
int
or
bsr
push
mov
pop
pushl
fnstcw
lret
out
jno
call
outsl
sub
ja
test
or
in
fidivl
cmp
pop
sbb
mov
mov
cmp
ljmp
push
mov
xor
mov
insb
cmpsl
dec
mov
pop
pop
loope
cmc
imul
mov
jg
and
iret
call
imull
stc
adc
mov
out
ret
sbb
push
inc
pop
lahf
cmpsl
pop
enter
out
call
push
shll
jmp
pop
xor
cli
jg
aaa
repz
jnp
jp
das
test
inc
push
out
sbb
mov
movsl
mov
xor
pop
push
clc
adc
out
aaa
icebp
dec
sti
sbb
dec
in
icebp
in
fstps
mov
cmp
inc
pop
push
jp
clc
dec
pop
jo
adc
fistpl
mov
iret
pop
imul
push
jbe
jmp
mov
jno
pushl
std
xchg
mov
ds
lahf
push
enter
add
jle
inc
ret
fstpl
pop
push
ljmp
adc
fnstcw
movsl
scas
add
pushl
insl
scas
div
xor
fbstp
stc
push
add
pop
cld
out
xlat
je
xchg
fs
pop
decl
in
inc
call
push
rorl
jmp
incl
add
jmp
or
mov
jns
pop
decl
sar
xor
lcall
inc
lret
dec
ljmp
mov
mov
rcl
mov
mov
pushl
xchg
jno
incl
hlt
add
and
test
jecxz
jne
xchg
arpl
jns
xor
bound
mov
mov
push
sti
subl
icebp
es
movsb
dec
lcall
mov
fucomp
mov
push
test
dec
xchg
or
cmp
mov
incl
add
lods
jo
mov
xchg
add
sbb
std
dec
gs
scas
popa
xlat
pushl
or
lcall
xchg
incl
jle
mov
incl
jbe
pop
or
dec
mov
xchg
int3
call
cmpsl
sti
push
iret
insl
jmp
mov
mov
lcall
movsl
push
je
lret
xor
cli
iret
andl
leave
fwait
jnp
pop
in
inc
pop
xor
and
das
enter
sti
cmpsl
fidivrl
dec
cmp
jbe
pop
cltd
popf
pushl
ret
mov
sbb
cmpsb
cli
sub
jbe
pop
aaa
cmp
jmp
pop
lds
repnz
into
jmp
xchg
dec
mov
icebp
jnp
cmpsl
jno
int3
sub
sbb
in
sub
in
call
mov
pushf
adc
in
not
inc
lcall
dec
and
les
mov
das
and
cld
dec
cmp
mov
or
out
ss
test
push
pushf
mov
xlat
mov
inc
adc
int
lcall
add
stc
pop
mov
cmp
xorb
sbb
mov
shr
fdivrp
inc
dec
aaa
lods
fistps
sub
push
inc
enter
push
dec
insb
fistl
daa
mov
cmp
jle
lock
sub
fs
das
and
addl
xor
and
mov
mov
lret
fwait
and
loop
or
fidivrs
nop
sub
cltd
and
fs
lcall
and
movsl
hlt
faddl
xor
push
push
clc
inc
pop
and
and
add
push
adcl
mov
lret
cli
jmp
insl
inc
add
outsl
cltd
inc
js
lahf
sarl
aam
dec
bound
push
fimuls
stos
sbb
mov
fisubl
xchg
xor
push
jecxz
mov
adc
mov
aad
fnstsw
push
ljmp
popf
mov
pop
jmp
lret
cmp
mov
lock
inc
ss
mov
out
stos
pushf
pop
sbb
ljmp
subps
pushl
pop
ds
iret
pop
pop
lcall
imul
and
cmp
pushl
test
lcall
jle
dec
pop
in
jnp
push
pop
insl
xor
pushl
xor
nop
pop
xchg
call
push
inc
and
aaa
dec
stos
mov
xchg
stc
incl
dec
in
adc
mov
rcll
jmp
hlt
loope
call
mov
ds
int3
cltd
pop
ljmp
js
nop
popa
fcmovne
mov
sbb
sbb
cmp
ss
pushl
ss
in
dec
adc
push
icebp
dec
inc
incl
jl
pop
mov
push
filds
jmp
aam
pushf
add
or
iret
cmpsb
xor
test
pop
movb
jbe
fld
adc
fbstp
test
ds
or
cmp
test
jmp
or
cmc
mov
sub
mov
mov
mov
lea
mov
hlt
sub
sbb
rcrb
decl
aad
xor
lods
cli
mov
ds
pop
mov
in
or
std
pop
sbb
pop
mov
ljmp
mov
int3
sbb
decl
in
pusha
adc
in
lds
leave
imul
jno
push
lods
push
push
out
fildl
dec
decl
push
call
or
mov
mov
sbb
dec
adc
imul
outsl
cmp
sbb
jmp
iret
sbb
sar
push
lcall
ficompl
sub
inc
mov
jbe
aam
mov
fistpll
adc
mov
push
xchg
mov
sbb
mov
clc
mov
mov
push
cmp
jl
jmp
scas
mov
cmp
mov
pop
repz
negl
lods
inc
movsl
adc
insb
jmp
jbe
xor
lcall
fdivl
mov
inc
cmp
in
add
xor
ljmp
jmp
adc
and
xchg
cltd
pop
jecxz
in
mov
mov
test
mov
gs
out
lds
pusha
jns
aad
xchg
adc
test
in
mov
cmpsl
lcall
dec
mov
sbb
stc
js
pop
sbb
or
decl
mov
incl
popf
inc
dec
fdivrs
push
xor
cs
lock
adc
pop
jae
pop
int
adc
std
pop
push
mov
out
pop
call
jge
mov
rorl
fnstsw
ljmp
shlb
adc
call
fisubrl
xchg
cli
mov
aaa
pop
leave
inc
call
out
stc
jle
xor
push
mov
mov
das
hlt
imulb
mov
aas
sbb
adc
mov
pop
mov
lods
js
xchg
aaa
je
es
nop
in
sbb
lret
xchg
push
push
mov
jne
outsl
pop
xchg
pushf
mov
cmp
roll
aaa
movsl
lret
xlat
xchg
into
popa
outsb
mov
pushl
rclb
push
nop
jl
fstpt
outsl
mov
shlb
pop
shrl
in
adc
mov
loopne
faddp
lret
ljmp
mov
lea
lret
mov
int3
into
mov
ret
sub
sar
jbe
lods
xchg
idivl
out
in
insb
dec
pop
loopew,pt
sbb
test
dec
add
movsl
inc
mov
test
mov
xchg
outsl
and
inc
jg
out
aaa
and
addl
mov
xchg
add
icebp
inc
cli
jmp
mov
xchg
lods
mov
mov
inc
pop
pusha
cs
cli
lods
pusha
xor
movsl
mov
add
pop
es
loopne
mov
lods
sar
jg
mov
imul
sbb
sahf
decl
insl
shlb
cmp
unpcklps
icebp
or
ljmp
add
jns
pop
cltd
pop
arpl
ud0
push
pop
inc
in
add
ret
and
or
imul
jns
xor
shlb
mov
loope
sbb
dec
scas
cmp
jg
fs
push
mov
call
hlt
mov
popf
movsl
fildll
pop
stc
mul
in
aam
dec
incl
mov
repnz
addr16
sbb
pushl
or
adc
jg
in
xchg
adc
adc
mov
js
int
decl
adc
dec
lret
aam
cmc
mov
icebp
jl
mov
or
and
cld
sub
scas
stos
push
pop
test
xor
into
inc
stc
popa
call
loop
int3
insl
sbb
idiv
insb
push
xchg
cld
roll
rol
pop
subl
in
pop
xor
subl
pop
mov
call
mov
jnp
call
jbe
cwtl
sbb
insb
into
jmp
mov
pushf
call
shl
cmpsb
popa
pop
jmp
xchg
push
pusha
push
lods
into
lea
call
xorl
iret
stos
push
lret
arpl
cmp
imul
pop
outsl
movsb
lret
mov
fadds
mov
nop
mov
mov
pop
ret
pop
add
push
arpl
sub
jmp
push
xchg
jmp
arpl
in
arpl
in
std
in
xorl
mov
cmp
pop
jmp
pop
pop
enter
clc
or
pushl
and
in
and
pop
xchg
inc
insb
sbb
jbe
incl
call
push
cmp
cli
and
adc
cltd
mov
jno
adc
jl
incl
fxch
push
jnp
test
inc
dec
roll
sub
out
fwait
aaa
aam
xor
mov
sbb
lcall
push
sbb
in
mov
xor
sub
call
aaa
mov
push
jb
mov
icebp
call
push
mov
call
dec
sbb
mov
ret
mov
bound
cmp
cltd
lret
sub
ljmp
cmp
add
and
iret
or
xor
xor
sub
neg
fistps
decl
sub
das
mov
movsl
lcall
adc
or
inc
cmp
movsb
in
push
sub
pop
push
jg
inc
cli
or
outsb
jp
or
dec
ljmp
out
adc
xor
pushl
les
loop
fwait
inc
inc
lcall
cld
enter
hlt
push
cmp
xchg
mov
mov
dec
add
push
or
jns
pushf
add
push
stos
scas
lret
shlb
ljmp
ss
pop
pop
push
je
cmp
repnz
scas
pop
mov
push
push
pushl
cmpsl
call
jl
movsl
xchg
inc
je
add
loopne
cmp
fbld
or
adc
test
aas
popa
lods
xlat
fdiv
lret
arpl
sti
pop
mov
mov
and
and
mov
push
movsl
pushl
xchg
outsb
fcomi
int
repnz
sub
arpl
rorl
adc
insb
xor
cmp
movsb
jno
sbb
jne
adc
mov
arpl
mov
std
xor
outsb
and
addr16
cmp
jmp
out
iret
imulb
jg
btr
pushf
mov
cli
mov
dec
jmp
jae
push
xor
jo
inc
jmp
mov
sub
popf
lds
ljmp
xor
lcall
add
jns
fs
call
scas
iret
mov
pop
notl
stc
fcos
mov
mov
jmp
shlb
fisttpl
loope
fdivrp
clc
ds
sub
sbb
repz
jle
xor
aam
sbb
mov
ret
loopne
mov
cmpsl
push
loop
xor
decl
insb
mov
call
ja
jp
jmp
loop
dec
sub
ljmp
shrl
cmp
xor
insl
aas
cmp
and
lock
addr16
sub
clc
sbb
in
int
sub
push
mov
aas
adc
xchg
mov
xchg
fwait
addl
mov
inc
subl
mov
int3
call
xchg
int3
inc
jmp
xor
les
jns
icebp
or
mov
sbb
jl
jp
or
mov
xchg
xchg
ljmp
and
add
hlt
rcr
pop
mov
jmp
mov
sti
ja
dec
ljmp
sbb
sub
push
test
jl
fisttpll
aas
scas
jecxz
sub
mov
xor
jmp
mov
mov
jmp
rorb
adc
inc
nop
push
mov
cld
fdivrp
fisubrs
adc
out
push
incl
lds
lret
outsl
pushl
out
mov
jg
les
call
cmpsb
outsb
sarl
out
call
adc
inc
lcall
lcall
sbb
mov
test
fstpt
mov
cmpsb
ret
lods
jne
mov
in
sub
cs
xor
ds
jb
in
pop
jmp
stos
lcall
adc
and
jg
jne
out
inc
sbb
mov
das
mov
dec
inc
outsl
aad
add
shll
decl
jns
xchg
jmp
mov
jo
fisubrl
ret
adc
push
pop
mov
je
mov
into
aad
inc
ljmp
daa
lea
or
sbb
or
in
or
lret
push
mov
dec
jg
and
call
dec
adc
cmp
and
adc
dec
mov
aam
or
inc
dec
lock
test
js
cmc
dec
jns
or
into
pop
pop
jl
jnp
std
sub
cmp
call
mov
push
loop
add
lret
and
mov
cli
add
push
sbb
sbb
in
adc
jbe
pusha
in
daa
xor
lods
jb
leave
add
sub
pop
hlt
dec
push
jp
repnz
push
fsubs
sub
pop
call
frstor
call
ljmp
ljmp
sbb
cmp
bnd
clc
add
sub
cmp
sub
test
lds
push
ljmp
cwtl
icebp
xlat
xchg
jmp
jne
jp
push
jb
ret
push
mov
sbb
shrb
mov
dec
stc
lcall
mov
mov
test
call
dec
push
fwait
orl
mov
cmp
mov
into
pop
push
cmp
insb
das
enter
mov
lahf
gs
add
ljmp
test
sub
nop
push
lea
jae
inc
cmp
sbb
ljmp
xchg
lret
in
push
outsb
ret
fbld
push
incl
ret
ja
rorl
push
pushl
loopne
add
and
jmp
imul
sahf
inc
jge
icebp
or
cmpsb
dec
lds
fcmovne
jns
jo
int3
xor
mov
and
call
fnstcw
decl
lea
loope
add
dec
outsl
mov
addr16
push
rcr
fldl
int3
sub
jg
movsb
dec
nop
dec
cmp
ljmp
aas
jp
cmp
stos
cmp
adc
xorb
xor
out
mov
cltd
in
mov
jg
mov
test
inc
call
jecxz
cmc
mov
or
fadds
ret
dec
fistpl
imul
xor
inc
add
pop
imul
xchg
shl
xor
sbb
fs
xlat
pop
dec
inc
lret
lret
add
mov
insl
jno
mov
mov
call
jle
xchg
xor
cmp
jae
or
pop
lcall
dec
fdivl
pop
jmp
mov
repnz
mov
add
cmp
lret
jg
rorl
pop
frstor
add
ficoml
dec
or
lcall
sbb
sbb
pop
popa
push
inc
leave
jge
jne
cli
sbb
or
adc
ficomps
fdivrs
pop
dec
shlb
add
and
fists
call
fnstsw
jmp
icebp
pushl
dec
in
mov
lcall
loopne
in
and
fcomp
pushl
push
aas
xchg
xlat
pop
xorb
jmp
popf
cli
scas
pushl
sarl
push
lahf
stos
mov
push
sbb
push
mov
pop
scas
clc
cmp
rcrb
insl
cld
and
data16
in
int3
arpl
icebp
adc
repnz
fldt
add
and
incl
insl
inc
jne
into
loop
lea
xchg
or
pop
xchg
or
fistps
rcll
inc
bound
xchg
push
add
cwtl
jae
mov
incl
je
outsb
inc
ja
int3
negb
push
xlat
arpl
mov
cmp
mov
add
jg
aam
stos
pop
callw
and
inc
repz
mov
inc
int3
repz
adc
jg
inc
and
jmp
fbstp
add
fcmovnb
xor
dec
pop
inc
or
data16
jg
mov
dec
jmp
test
bnd
les
test
test
push
jmp
jl
cmp
push
das
popf
push
xlat
pushl
repnz
sub
mov
mov
call
xchg
mov
ds
push
adc
jnp
push
push
push
jne
ljmp
push
sahf
cltd
repnz
sbb
scas
call
dec
dec
cld
ret
jne
push
jnp
std
jne
add
or
push
add
adc
js
or
dec
or
push
aam
mov
jns
push
sub
push
jg
test
sub
movsb
testl
xor
jmp
mov
jmp
cli
or
mov
pop
sub
ud0
pushf
ss
mov
jo
incl
les
ja
lahf
pop
fs
aam
inc
xor
or
pop
loop
dec
adc
push
mov
incl
push
push
and
lret
sub
cmp
pushl
in
fistps
cld
or
fstps
rcll
cmpsb
daa
or
aas
decl
xchg
cmpsl
pushf
incl
and
jecxz
and
out
fmulp
fcomp
icebp
or
add
imul
adc
incl
mov
inc
jo
into
shll
ja
mov
in
fcomip
xor
xor
out
outsb
stc
daa
pushl
cmp
adc
imul
in
outsb
sub
mov
movsb
jp
aas
nop
inc
cld
dec
sarb
mov
lret
divl
sub
jecxz
xor
mov
lods
pop
xchg
adcl
dec
lods
ljmp
loopne
pop
aaa
adc
repz
test
sbb
mov
push
outsl
inc
push
inc
dec
fisubrl
or
into
sahf
das
push
sub
or
xor
jns
jmp
idivl
icebp
pop
imul
pop
mov
daa
cli
leave
jb
lcall
or
mov
aam
xchg
push
pop
adc
inc
dec
push
or
jecxz
decl
add
call
xchg
punpcklwd
insb
cltd
insb
dec
pop
in
test
add
paddsw
xchg
pushf
test
arpl
call
in
mov
fwait
inc
xchg
lcall
sbb
jmp
js
pop
ljmp
fbstp
cs
cmp
aas
sbbb
ljmp
pop
jmp
add
fcmovnu
adc
outsl
movsl
jg
sub
xor
adc
xchg
test
jmp
outsb
xor
lock
das
dec
clc
jmp
mov
test
into
xor
xchg
pusha
cmp
jnp
xor
dec
scas
or
in
es
mov
mov
jmp
inc
pop
repz
les
push
cli
cld
mov
outsb
push
adc
mov
cld
stc
jae
xchg
sub
das
fcompl
fsts
dec
call
ss
inc
bound
mov
xor
jl
cmp
lcall
int3
pop
push
cli
cmp
test
insb
adc
or
dec
jmp
aaa
add
jo
or
ffree
jmp
jge
cmp
fsubl
mov
xlat
dec
and
lcall
lret
loopne
out
xchg
ret
dec
mov
ljmp
cld
and
mov
out
in
adc
mov
shrb
mov
les
xchg
incl
not
sub
pushf
jmp
sbb
rclb
mov
pop
inc
jmp
jmp
or
add
add
mov
add
stc
lcall
pop
dec
xor
jb
xchg
inc
das
incl
lahf
jne
mov
jmp
sub
movsl
pop
mov
mov
mov
xor
dec
pushl
daa
pop
or
nop
divb
mov
pushl
pop
cmp
lods
out
push
lret
in
jge
mov
xor
stc
das
xchg
shrl
lock
xlat
inc
mov
in
arpl
or
loopne
or
push
pop
sti
ret
rcrb
les
pop
cld
cmp
push
call
js
mov
lock
and
ror
xor
ss
mov
jb
push
sbb
fdivr
mov
and
aaa
pop
adc
nop
frstor
rcr
adc
adcb
stos
jl
incb
call
inc
ret
jg
movsb
inc
inc
xchg
ret
mov
ret
mov
mov
incl
arpl
and
fwait
jnp
cld
and
adc
outsl
mov
pop
lods
inc
dec
div
mov
pop
mov
push
filds
scas
insb
cmp
shrl
pop
sub
or
mov
lds
mov
mov
out
lock
sti
mov
insb
jmp
pop
or
lock
ljmp
clc
sbb
shlb
ret
out
xchg
jae
push
loope
aaa
cmp
ljmp
lods
out
scas
rcrl
or
inc
add
imul
mov
ret
inc
dec
push
add
add
pusha
movsb
mov
out
aaa
addb
mov
testb
cmpsl
push
bound
jb
and
mov
mov
adc
cld
jg
adc
mov
sbb
sub
fisubl
movsl
scas
dec
pushl
enter
mov
sub
cmp
xchg
inc
popf
add
ljmp
or
xor
cwtl
mov
int
push
call
jae
call
scas
es
xor
hlt
pop
ss
movsb
aad
push
mov
test
ljmp
pushf
into
popa
incl
in
shr
mov
sahf
jbe
js
or
dec
jl
lods
push
aas
std
scas
cld
pop
xchg
daa
add
lret
insl
lock
sub
push
mov
mov
loopne
out
int3
push
movsb
or
sub
shl
incl
xchg
inc
outsl
jge
aam
lcall
xor
addl
cltd
nop
cmp
imul
shr
stos
push
xor
sub
fildl
cld
fildl
pop
xchg
repz
aad
jl
ss
icebp
push
inc
scas
sahf
push
push
pushl
popa
adc
insb
testl
jecxz
xor
cmpb
loop
sar
and
xchg
nop
shll
sub
js
out
push
mov
movsl
std
mov
adc
cli
jbe
inc
jo
or
cld
outsl
scas
jg
cltd
dec
cld
and
ret
dec
lods
cli
cmc
rclb
push
pop
jmp
xor
cld
inc
sub
sbb
sub
push
in
mov
and
daa
add
stos
mov
sub
int3
jmp
pop
std
sub
and
mov
fstpt
scas
in
dec
addb
and
ljmp
call
arpl
addr16
mov
outsl
icebp
and
outsb
jle
jmp
scas
jmp
inc
xchg
pop
push
xchg
dec
and
into
fwait
cmp
incl
jge
stos
addr16
mov
incl
out
lcall
jo
jmp
dec
mov
xchg
loopne
mov
and
std
fs
idivb
add
adc
js
call
popa
xchg
ds
sbb
fs
and
rcl
cmp
mov
xchg
ljmp
sbb
adc
mov
movsl
cld
popf
daa
dec
adc
jl
rolb
loopne
mov
shl
mov
idivl
call
movsl
cli
out
jge
aad
test
push
in
pushf
subb
mov
mov
pop
jno
incl
lds
std
leave
dec
mov
pop
sahf
inc
mov
icebp
dec
sti
gs
cmp
sub
cvtpi2ps
call
incl
outsb
sbb
fwait
push
mov
xchg
clc
enter
bound
or
out
jno
xchg
mov
mov
lock
cmp
jns
pushl
adc
xchg
inc
xor
mov
or
call
or
test
adc
dec
daa
test
cld
mov
sahf
lea
mov
fldl
pop
pop
or
pop
cmp
xlat
jecxz
xchg
push
mov
push
out
push
fmuls
inc
mov
sub
fld
mov
dec
xor
jo
insl
mov
jb
pushl
imul
mov
test
test
sbb
dec
cwtl
cmp
int
jp
jo
das
and
inc
call
es
add
fsin
cmp
loop
mov
fbstp
ret
enter
inc
popf
fld
clc
dec
sbb
jmp
lods
or
push
and
and
pushl
mov
cmp
mov
cwtl
jge
aam
xlat
jp
in
out
push
insl
push
decl
add
sti
adc
je
pushl
mov
mov
mov
out
cld
cmpsl
push
fisttpl
xchg
je
push
outsb
lcall
adc
nop
or
push
ja
mov
mov
jmp
mov
imul
imul
iret
out
in
jmp
repz
mov
popf
xchg
push
sahf
and
jle
leave
nop
icebp
lcall
dec
icebp
xchg
in
test
jno
mov
inc
pop
push
sbb
or
and
pushf
adc
cmp
mov
xor
add
les
push
mov
imul
xchg
or
pushf
mov
xchg
nop
movsl
stos
mov
decl
xchg
cltd
mov
incl
test
sahf
je
in
incl
aaa
in
cmp
pushf
fistpll
pop
pushl
mov
ret
jecxz
bound
mov
inc
aam
adc
popf
bound
mov
mov
lcall
push
mov
incl
jno
push
jge
mov
fists
pushf
outsl
scas
aad
iret
mov
scas
jl
push
mov
lahf
cmp
xchg
lods
mov
fbld
test
notrack
add
stc
frstor
incl
mov
xor
loop
icebp
ds
mov
out
stos
or
insl
inc
pop
negb
cmpsb
shl
mov
incl
cs
iret
cld
ds
call
add
cli
movsb
or
ss
xor
push
jge
dec
pop
je
pop
pushl
sub
in
jb
hlt
mov
aaa
subl
call
mov
aas
incl
jecxz
es
cmc
clc
or
inc
addr16
into
jnp
mov
stc
inc
movsl
inc
sbb
mov
mov
pop
pop
adc
adc
dec
mov
in
mov
mov
mov
dec
andl
sbb
mov
jg
adc
leave
inc
cmp
xchg
popf
cmp
mov
adc
cmp
fdivrl
sub
stc
shr
clc
push
or
movsl
int
cmp
cli
fdiv
jecxz
push
and
insb
ljmp
jmp
sarb
incl
mov
push
or
inc
incl
loop
xor
push
clc
mov
jp
call
test
mov
or
call
call
out
xchg
xor
roll
rcl
mov
insb
hlt
sub
add
icebp
adc
push
adc
and
fisubl
mov
jae
cmp
xor
aaa
and
mov
decl
sti
push
xor
or
jo
fldcw
shlb
out
insl
outsl
mov
jg
push
inc
aas
bound
iret
pushl
push
lods
dec
push
jl
xor
pop
aad
sbb
scas
addr16
dec
gs
lcall
jg
outsl
xchg
fnstcw
jle
and
sbb
pushl
jp
mov
mov
ror
add
inc
loope
fisubl
jp
sti
in
icebp
jle
ljmp
mov
lret
cmp
stc
push
into
mov
cltd
js
fs
cli
and
out
inc
fbld
test
dec
cmp
sub
xchg
js
aam
xchg
pop
lods
lret
lds
and
mov
lcall
adc
mov
jnp
js
insb
clc
decl
idivl
test
add
sub
inc
div
les
insl
outsl
imul
jg
jnp
out
mov
inc
dec
outsb
fstps
cld
scas
push
call
add
iret
push
lds
mov
movsb
aaa
ljmp
cld
add
jl
shrb
sbb
cmp
mov
cmp
mov
lds
test
aaa
fwait
cmovbe
out
pop
cs
sub
mov
scas
btc
ljmp
fldenv
jmp
aas
add
add
fwait
dec
inc
out
sbb
mov
add
lcall
pushl
std
jae
or
mov
jmp
outsl
cmc
dec
gs
ja
scas
xchg
sub
out
dec
add
xor
rolb
js
es
je
push
cmp
clc
cmp
call
push
into
leave
sub
add
or
jge
subb
cli
add
jg
repz
bound
mov
cmp
cbtw
idiv
cmp
mov
fcoms
inc
call
push
nop
leave
lret
mov
call
int3
arpl
inc
inc
xchg
push
jns
in
mov
jb
jg
stos
pop
xchg
decl
mov
sarb
xchg
cmpsb
insb
jo
jecxz
lock
mov
cli
lds
pushl
cmp
dec
ss
lcall
inc
push
mov
rol
loope
mov
dec
jg
xor
or
sarb
and
and
or
loop
test
dec
cltd
clc
push
rorb
or
xchg
inc
shlb
mov
shl
rolb
flds
ret
incl
adc
inc
cmp
jle
into
in
sbb
sub
xor
cli
fs
adc
dec
test
enter
es
push
pop
enter
inc
call
push
and
js
jb
mov
scas
jge
jg
outsl
or
mov
pop
inc
jg
mov
jmp
jl
in
push
stos
sub
subl
fbld
xchg
out
lcall
sbb
xor
push
and
pop
mov
jle
ljmp
in
loope
mull
std
cmp
ret
mov
add
dec
mov
cmpsl
insb
scas
or
or
decl
xor
cmpsb
bound
jg
adc
adc
xlat
mov
mov
cmp
xor
xor
sbb
test
call
mov
or
and
aam
test
pusha
mov
sbb
cmc
test
das
pop
add
lock
in
xor
inc
lcall
pop
ljmp
push
js
fistl
push
lcall
mov
imul
sub
jg
jne
push
mov
sbb
dec
in
mov
adc
push
xlat
movsb
push
lcall
fdivs
sub
insl
jge
lcall
gs
push
mov
push
sar
and
dec
cli
aam
je
bound
lock
scas
adc
xorb
mov
jp
cmpsl
and
inc
movb
clc
adc
les
inc
and
idiv
lea
in
out
push
clc
in
jmp
push
mov
ret
imulb
and
pushf
pop
mov
cs
das
insl
dec
out
or
xlat
notl
add
mov
rcr
inc
leave
push
pop
xchg
dec
incl
inc
mov
pop
movsb
or
and
sbb
fdivrs
sti
lods
sbb
pop
fidivs
and
out
ja
xchg
insb
ljmp
sub
jno
incl
mov
mov
mov
pop
xchg
scas
inc
inc
pop
pushl
push
mov
fists
adc
in
lods
and
lods
mov
adc
or
std
push
fs
or
dec
sbb
out
lds
out
mov
rcrb
stos
test
neg
adc
xchg
xor
or
test
inc
pop
and
lock
jl
inc
mov
add
pop
xchg
add
jo
or
push
movq
push
xchg
call
mov
pop
lret
call
cmpsb
cli
jge
xchg
movsl
gs
inc
add
std
jo
sub
fisttpll
or
test
dec
inc
fidivs
jecxz
mov
imul
mov
cmp
push
and
pushl
imul
and
outsb
pop
cld
adc
xor
add
xor
sbbl
pushl
mov
adc
xchg
push
xlat
cmpsb
jl
push
int
and
mov
cmp
mov
or
xchg
lds
pop
in
in
mov
and
jmp
es
fisttpl
or
jmp
inc
push
and
incl
mov
xchg
pop
sbb
adc
call
in
das
repz
lock
repz
adc
sar
xor
add
sub
mov
mov
test
decl
cmp
shr
or
fs
lret
pop
cli
dec
pop
sub
mov
and
shll
movsl
add
jo
stos
mov
adc
cmp
ljmp
inc
cmp
rcrl
cwtl
sar
cld
call
mov
pop
dec
push
test
mov
imul
or
outsb
lock
fisubrl
jne
fcmove
mov
icebp
push
incl
jbe
and
sub
mov
jae
inc
sub
mov
push
xor
or
jmp
int3
ljmp
mov
loop
jb
outsb
xchg
rcr
ret
mov
dec
and
stos
ljmp
mov
push
in
aad
mov
and
and
jg
loopne
jecxz
lret
add
adc
insl
mov
lcall
dec
loop
decl
jne
or
push
jmp
dec
sub
pop
outsl
push
pause
nop
lcall
and
aam
pop
decl
jns
fwait
ljmp
lea
lock
in
jl
jl
cmp
xchg
fsts
decl
mov
ljmp
jge,pt
xchg
decl
mov
ud0
mov
rcll
scas
nop
daa
clc
pushl
orl
pop
call
mov
ficoml
mov
in
mov
ljmp
shl
fsubrp
or
fldl
ljmp
inc
mov
mov
jae
call
inc
adc
jo
xchg
cli
push
aaa
adc
add
jbe
pop
push
cmp
push
cmp
add
iret
push
mov
mov
call
mov
pop
and
loope
decl
call
and
sar
inc
ret
cmc
inc
sbb
mov
xchg
mov
xor
add
loope
cwtl
cltd
add
xor
cmc
inc
fisubs
sbb
ja
cli
popa
jno
or
daa
cmp
imulb
xchg
xor
xor
dec
and
dec
data16
or
push
jmp
pusha
stos
xor
stc
xor
sub
and
push
ficomps
jecxz
aad
rolb
ljmp
imul
ljmp
jbe
push
ljmp
out
inc
sahf
inc
pop
hlt
test
pop
jecxz
inc
pop
mov
shr
inc
cmpsl
cmp
jbe,pt
out
stc
mov
cs
push
leave
add
in
push
adc
and
and
loope
ljmp
cmp
xchg
add
mov
and
in
fsubrl
movsl
inc
mov
and
push
mov
bound
std
cmp
out
cmc
scas
fwait
movsb
mov
lahf
sahf
xor
ljmp
test
in
push
mov
pop
out
xchg
and
push
pushl
adc
in
jns
mov
push
in
mov
cli
lcall
push
mov
std
mov
idivl
js
jns
mov
cmp
cs
xchg
sti
popf
and
push
fbstp
test
lods
dec
xchg
int
scas
mov
loopne
test
call
lret
loopne
dec
pop
xor
mov
sub
lcall
cli
ret
clc
or
cwtl
imul
mov
xchg
sbb
cmp
push
adc
sbb
adc
push
xor
std
push
test
decl
out
pop
jmp
movsb
div
incl
jle
add
push
icebp
cmp
outsl
test
jecxz
push
mov
lret
dec
in
mov
pop
dec
dec
jns
hlt
inc
jge
dec
mov
jae
pop
add
test
in
jmp
mov
push
inc
pusha
test
jo
jno
mov
roll
pop
mov
call
test
cmp
jmp
aas
fmuls
xchg
mov
adc
jmp
mov
add
and
mov
scas
push
aaa
jmp
icebp
jg
clc
cmp
jl
pushl
cmpl
push
call
das
dec
xchg
xchg
daa
adc
adc
push
push
out
inc
fldt
shlb
test
push
gs
dec
xchg
xchg
inc
das
push
out
sub
pop
cmp
fimuls
cmc
ret
and
xorb
inc
and
mov
add
or
lea
cld
push
lcall
insb
js
call
mov
shl
repnz
push
imul
insb
mov
movsl
mov
lcall
push
into
add
data16
or
mov
fdiv
cltd
cmp
xor
and
mov
jl
insl
std
shlb
aad
sbb
xor
dec
roll
int3
xchg
jmp
movsb
idiv
hlt
movsb
scas
inc
movsb
xchg
push
outsl
scas
dec
push
push
test
or
scas
popa
ljmp
mov
sbb
or
ja
out
add
mov
pop
mov
movb
jmp
lahf
xor
mov
jnp
lods
mov
pop
mov
imul
je
adc
adc
stos
in
mov
scas
imul
in
call
or
inc
cld
push
adc
roll
mov
push
sub
repnz
inc
lods
daa
jmp
dec
leave
mov
aad
and
popf
xorw
rorl
pop
lods
mov
mov
or
jle,pt
jns
push
cltd
lcall
icebp
xorl
and
insb
sahf
nop
lds
pop
lea
mov
outsb
inc
lock
popf
imulb
jae
mov
pushl
sbb
inc
mov
test
mov
pop
das
cs
es
push
in
sahf
mov
sub
mov
mov
stc
add
outsl
int3
data16
cmpl
xorps
test
mov
loop
loop
jae
into
pop
outsl
mov
gs
das
mov
ja
inc
add
inc
in
cmp
or
xor
jmp
xor
movsl
daa
call
shll
inc
pop
insb
jmp
push
adc
add
or
jge
movsb
add
push
xchg
jle
fildl
call
jmp
mov
jns
ret
xor
pushl
outsl
sbb
popf
icebp
add
sub
xor
lods
push
jmp
dec
jle
jmp
jns
loope
fdivl
xchg
and
dec
sub
cltd
fidivs
mov
sbb
cmp
push
adcb
cmpsl
adc
adc
ljmp
jp
inc
mov
mov
cmp
and
adc
icebp
mov
repz
sbb
fwait
mov
fs
sbb
xor
xchg
push
int3
cmpl
std
fwait
adcb
bnd
enter
loop
dec
dec
mov
mov
mov
aas
repz
pushf
cmc
cmp
push
mov
fwait
stos
lcall
pop
loope
adc
test
fdivs
add
xchg
subb
hlt
aaa
mov
test
repnz
mov
mov
xchg
loop
stos
aad
fwait
push
sbb
in
shr
lret
xchg
xchg
mov
or
dec
mov
pop
fs
jmp
cmp
jmp
decl
fs
adc
lods
cmp
push
ret
popf
jb
pushl
mov
into
call
sub
sti
push
xchg
dec
xor
popf
xchg
xchg
inc
pushl
add
sbb
or
mov
hlt
in
test
jb
int3
sub
lcall
mov
lea
xchg
pushl
inc
out
or
add
pushl
inc
xchg
cmp
cmpl
sub
or
jg
aas
js
cmp
pop
test
cltd
cli
xchg
sar
add
stos
sbb
sahf
add
std
outsl
or
ds
outsl
inc
mov
jmp
mov
push
mov
sahf
imul
xorl
add
mov
and
jp
sahf
dec
cmp
pop
jp
sbb
or
mov
loopne
sub
lret
pop
mov
insb
sub
sub
cmc
loopne
fnstsw
mov
or
icebp
jmp
enter
or
add
incl
in
sar
or
push
cmp
lcall
rorl
pop
mov
adc
es
test
leave
jne
decl
fwait
mov
adc
aas
sub
je
sbb
out
pusha
jle
imul
out
push
mov
mov
adc
sub
ljmp
js
sbb
pushf
push
mov
out
int3
cmpsl
sahf
ret
imul
movsl
icebp
test
xor
into
pop
adc
adc
add
out
jne
adc
sub
mov
aas
xchg
andl
pop
jmp
mov
jmp
aad
mov
pop
or
xchg
in
cmp
cld
addr16
mov
adc
in
in
std
sar
xchg
addps
pop
test
inc
jnp
mov
sbb
dec
clc
andl
leave
data16
add
int3
mov
sbbb
scas
xlat
pushl
pop
sub
loope
sti
outsl
or
test
arpl
icebp
es
add
mov
aad
sbb
cmpl
insl
jmp
lret
pop
mov
mov
and
push
mov
cwtl
pop
dec
push
daa
jl
scas
jle
ljmp
xchg
dec
adc
push
es
add
mov
cmpsl
popa
int
push
dec
xor
mov
adc
or
movsb
lcall
inc
ror
fldl
add
pushl
and
add
mov
decl
jb
dec
rorl
ret
lcall
jmp
test
ror
pushl
flds
jg
out
or
cmp
sahf
daa
cwtl
fildll
daa
jne
aam
shr
push
rcrb
xor
inc
stos
loope
xor
jl
pushl
and
push
push
decl
stos
mov
loop
and
jle
push
mov
cmp
xchg
xor
stos
and
jns
shlb
lcall
adc
pop
push
jmp
sub
xchg
dec
dec
leave
mov
or
loope
incl
cmp
mov
inc
aaa
mov
cli
pop
scas
ja
js
lcall
add
xchg
scas
pop
test
jle
cmp
inc
lods
call
outsl
popf
fimuls
hlt
ss
pushf
jne
icebp
jl
jne
das
movd
dec
adc
xor
int
inc
daa
je
and
dec
ds
aam
test
cwtl
into
ljmp
push
pop
sub
arpl
push
addl
stos
push
xor
add
hlt
outsl
test
call
fnstcw
pmullw
enter
cmp
hlt
add
push
incl
or
addb
xchg
std
sbb
test
fcompl
push
inc
xchg
inc
and
mov
ljmp
add
jnp
ja
sbb
sbb
jle
lahf
movsb
or
cmp
aas
mov
es
mov
cmp
dec
xchg
cmpsb
jg
inc
add
js
scas
jmp
mov
cmc
js
ljmp
stc
incb
loopne
xchg
xchg
or
mov
inc
xchg
mov
add
insb
mov
add
mov
lods
insl
jmp
imul
call
je
xor
loop
jg
pop
mov
pop
pop
scas
pop
pushl
dec
lock
incl
mov
test
outsl
test
sbb
jmp
movsl
jno
cmp
addl
std
fdivrl
cmc
mov
dec
iret
daa
mov
sub
inc
mov
test
std
add
mov
test
aaa
push
shlb
lahf
scas
call
je
pushl
xor
mov
xchg
test
aad
jle
shlb
cmp
and
inc
mov
push
push
insb
clc
ss
aas
mov
xor
leave
je
push
mov
loop
mov
mov
dec
std
jge
sbbb
ljmp
imul
pop
cwtd
push
sbb
dec
into
push
les
or
js
push
loop
sbb
loop
and
call
loope
mov
jg
jmp
int3
inc
addr16
jle
mov
and
pop
jecxz
or
roll
jle
push
pop
mov
cwtl
mov
pop
lret
lahf
dec
in
rcr
jge
xlat
incl
mov
add
icebp
shll
js
popf
and
fildl
add
and
xchg
cmp
pop
mov
insb
jo
int
ljmp
or
sti
jo
aaa
js
pop
popa
jg
add
js
xchg
cmpsl
jns
mov
int
adc
mov
stos
cmp
pushl
out
dec
inc
movsb
dec
std
lahf
mov
sarl
pop
push
push
incl
mov
push
pop
imul
xor
lods
cli
push
pushl
test
pop
mov
and
sub
rcrl
pop
jmp
jmp
pop
incl
sbb
sbb
call
jns
hlt
jnp
mov
jb
ss
xor
clc
fs
adc
ss
sub
xchg
push
in
outsl
push
imul
jo
cmp
std
decl
orb
hlt
mov
or
jne
ljmp
jp
sbb
cmp
ds
sub
into
lea
clc
push
mov
cmc
jg
or
stos
addl
ljmp
aad
repz
push
bound
pop
in
add
fisubrl
sub
sbb
daa
mov
lcall
add
std
sub
push
das
or
sub
imul
mov
or
rcr
pop
sti
aam
test
mov
mov
rclb
push
aam
enter
xor
and
xchg
xchg
jp
out
sub
daa
popa
mov
call
push
icebp
xchg
adc
clc
push
cmp
cmpl
pop
pop
out
int3
mov
jbe
mov
mov
ds
lds
clc
add
push
fs
stos
xor
mov
jp
pushl
mov
lods
lcall
aas
xor
cli
andb
sub
pop
push
jbe
ljmp
xor
iret
jns
push
dec
jmp
test
inc
fsin
jae
cmc
sub
xchg
mov
cmc
jg
and
jmp
scas
sub
movsl
adc
repnz
stos
add
leave
pushl
xor
sub
aad
ljmp
push
mov
nop
push
push
test
fistpll
ret
dec
popa
out
jb
push
xchg
shr
jle
mov
mov
push
push
sti
pop
jmp
adc
cmp
adc
addb
ljmp
out
lds
or
xor
fwait
push
data16
push
sub
fdivr
cmp
pop
divl
shlb
fcmovnu
sub
mov
adc
adc
xor
ret
cmp
js
mov
sub
mov
sub
icebp
dec
jle
scas
cs
in
std
fildll
mov
jne
jb
insl
jae
jns
jecxz
jno
push
sar
pushf
adc
int
jecxz
jmp
xchg
ror
fsubrs
or
test
in
dec
scas
pop
cld
push
mov
lods
ja
cli
pop
mov
mov
inc
movsl
jmp
mov
fnsave
cltd
loope
pusha
dec
js
mov
jle
cmp
cld
jmp
push
xchg
and
dec
aad
call
xchg
std
je
mov
mov
adc
imul
jne
mulb
sub
incl
inc
inc
lahf
jecxz
inc
pushl
filds
in
push
outsl
outsl
call
pop
mov
rclb
mov
stc
adc
andb
xor
into
popa
mov
clc
int3
and
in
lcall
cltd
adc
jb
jmp
lods
in
lods
mov
pop
dec
loop
fnstsw
jno
call
pop
jl
fldenv
call
and
jg
and
cmp
mov
fbstp
aaa
adcl
lods
mov
push
bnd
ss
pushl
insl
mov
sub
mov
decl
xor
pushf
pop
fstpt
lock
dec
test
add
dec
pushl
add
stc
mov
mov
fistl
xchg
dec
imul
addr16
mov
mov
fwait
and
adc
loop
xor
stos
inc
ficomps
sti
add
cmpsb
jbe
insb
ss
icebp
call
xchg
mov
sub
pushl
test
roll
pusha
mov
filds
incl
lea
pushl
rclb
fdivl
inc
inc
push
push
add
fcmovnb
add
push
mov
xor
or
add
icebp
add
add
push
sub
jl
ja
nop
dec
push
mov
je
fcmovnb
pop
jae
add
jnp
inc
add
push
jnp
mov
mov
add
adc
dec
mov
out
push
add
loopne
ja
push
xchg
mov
mov
pop
or
sbb
je
fs
push
pop
add
push
and
push
popa
cmp
push
lea
cmp
jae
enter
inc
ljmp
mov
xor
xor
push
in
mov
add
jecxz
and
int
cmp
je
add
out
inc
inc
decb
movl
mov
push
out
jae
je
insl
add
pusha
mov
jge
shl
frstor
ja
pop
mov
sbb
dec
sub
das
shll
push
outsb
push
ja
dec
mov
decl
mov
imul
cmp
insl
push
ffree
ret
push
lods
dec
out
mov
or
enter
fs
add
add
cmp
jae
mov
and
cmp
xor
jmp
sub
sub
call
cli
add
imul
cmpl
add
loop
movsb
and
sub
inc
xor
mov
sbb
inc
rcll
inc
out
lea
push
inc
pop
out
loope
outsl
fs
in
inc
dec
inc
insl
sbb
mov
adc
pusha
or
out
into
jb
lret
jae
and
sti
lock
enter
jne
add
je
jmp
sub
and
mov
lea
add
and
and
std
stos
mov
mov
jns
cmp
add
jns
pop
add
dec
cwtl
sbb
xchg
test
jmp
mov
gs
xchg
lock
mov
or
movl
or
test
jge
or
subl
or
adc
out
jmp
pop
cmp
in
mov
sti
ret
ret
xor
aas
rorb
cmp
ja
shl
icebp
push
mov
shl
rcr
and
mov
xchg
xorb
aad
ljmp
sarl
aad
inc
push
cmp
push
push
cs
mov
pop
mov
push
pop
test
ds
adcl
jmp
mov
lods
sub
cmp
lods
ja
inc
mov
in
mov
fwait
ljmp
cmp
sbb
jecxz
and
js
pop
ja
lds
call
mov
pusha
push
inc
xchg
push
add
movsb
cli
push
in
dec
jno
fildl
loopne
movsb
lock
push
jae
fs
insl
xor
or
push
hlt
jmp
je
mov
flds
addb
mov
or
clc
add
sbb
mov
clc
sub
xor
pop
sbb
or
sub
pop
jg
enter
xor
insb
rol
xlat
ss
lea
inc
dec
xor
fcmovne
xchg
test
and
inc
sub
call
pop
jmp
sub
cmp
je
mov
je
xchg
enter
or
push
jmp
sbb
imul
push
pop
push
push
or
jbe,pt
cmp
in
inc
pop
mov
xor
xchg
mov
push
or
jo
lods
push
repz
out
adc
pusha
movsl
shrb
lret
pop
call
loope
fcoms
add
xor
add
mov
add
test
nop
xchg
test
add
outsl
in
and
mov
pop
xchg
add
pop
out
sbb
jmp
jnp
fdivrl
adc
cmp
cmp
or
ret
push
jnp
mov
sub
sti
adc
adc
out
mov
cmp
add
rcrl
push
test
testb
adc
std
push
lea
fldt
dec
cmpsb
mov
roll
sbb
popa
hlt
sti
or
out
mov
push
pop
adc
sarb
mov
or
movlps
fmuls
inc
mov
mulb
or
push
or
in
lods
cmp
mov
and
cmp
faddp
lea
cld
movsb
adc
sbb
push
xchg
pop
test
sar
clc
and
lea
sbb
bound
push
outsl
adc
and
mov
rolb
testb
inc
fsincos
mov
push
add
roll
dec
add
cmp
ja
pop
sub
lds
jecxz
dec
outsb
add
ret
add
in
and
push
fisttpll
sbb
pop
adc
jle
xor
push
mov
and
ljmp
fstps
and
and
das
lock
pop
nop
and
loope
inc
or
inc
insl
inc
and
or
jle
jne
mov
inc
push
mov
scas
or
cli
je
roll
outsl
ja
mov
icebp
sbb
addr16
clc
xor
mov
inc
adc
add
push
mov
jb
jmp
mov
cmpb
adc
sub
pop
or
and
inc
sub
inc
pushf
and
xor
or
pop
pop
pop
add
add
clc
and
je
add
gs
outsl
push
xor
pop
lock
mov
pop
inc
sub
cmp
ja
cmpb
jne
repnz
mov
xor
pop
in
adc
sub
push
mov
aaa
mov
cmc
mov
loop
cmp
pop
or
xchg
add
xor
rorb
mov
jge
call
dec
pop
or
jns
lods
jp
call
mov
push
insb
sbb
pop
mov
insl
es
mov
push
ja
scas
inc
add
fwait
mov
push
push
inc
mov
jge
lea
mov
jg
insl
adc
popa
aad
sub
push
and
jne
push
pop
incl
incl
add
adc
or
nop
or
adc
inc
add
pop
mov
cmpsb
cmpsb
mov
ret
lcall
push
dec
inc
dec
xor
cs
xor
or
out
sbb
decl
jb
jb
inc
outsl
or
push
jb
arpl
fs
gs
pop
or
out
popa
insb
adc
je
arpl
inc
lods
cmp
or
ja
inc
js
bound
and
add
add
nop
incl
