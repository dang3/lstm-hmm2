dec
int
jo
arpl
and
and
jo
arpl
inc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
pop
add
adc
add
adc
add
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
loopne
add
or
add
add
rolb
add
add
add
adc
add
add
add
or
add
add
add
add
add
adc
add
add
add
sub
add
pop
add
loope
add
pop
add
pop
add
add
pop
add
add
add
add
addb
add
cld
loopne
add
add
or
pop
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
into
and
inc
mov
add
add
pop
add
add
call
decl
je
lea
mov
cmp
je
movl
mov
mov
sub
mov
add
lea
add
mov
mov
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
add
push
pushl
push
push
call
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
push
sub
add
rolb
add
sub
jge
jnp
xor
ret
cmpsb
inc
dec
adc
adc
mov
je
iret
xchg
jno
ja
inc
mov
cmp
sub
mull
adc
mov
fldenv
in
jbe
frstor
imul
push
int3
mov
pop
inc
xchg
js
cltd
pop
pop
jne
xchg
add
inc
faddp
xchg
mov
repz
fisttps
shrb
inc
or
bound
rol
gs
call
adc
sarl
adc
mov
mov
aas
jge
xchg
xor
ja
cmpb
inc
xchg
dec
xor
pop
repnz
addr16
repz
and
inc
sub
icebp
jnp
push
mov
fwait
das
bound
dec
adc
imul
sbb
adc
mov
xor
adc
xchg
das
ss
jo
push
scas
mov
lods
jmp
daa
lret
jge
leave
xor
cltd
test
push
daa
inc
push
into
xchg
cmp
pop
movsb
repz
rorl
xchg
shrb
mov
xor
mov
pop
sub
orb
fisttpl
add
pop
sbb
cli
push
lcall
int3
xor
push
fstpt
push
testl
out
ja
loopne
mov
pop
or
jne
and
mov
aam
push
lods
mov
mov
jl
mov
aam
leave
jno
adc
xchg
or
mov
jmp
jno
bound
mov
lar
cmp
push
gs
ss
mov
mov
push
roll
mov
shlb
xlat
iret
ss
stos
pop
lcall
mov
lcall
test
rcrb
push
arpl
adc
subb
cmc
imul
adc
or
push
ret
icebp
lods
cmp
cmp
ret
push
inc
movsb
lea
pop
xlat
test
je
adc
ss
xor
ficoms
fs
xor
pop
leave
cmpsl
push
jno
movsb
sbb
adc
mov
in
pop
xchg
pop
adc
mov
push
sahf
into
or
add
jg
mov
push
icebp
shll
jmp
cmpb
lcall
ret
mov
jb
sub
dec
pop
or
mov
cltd
outsb
out
xchg
lret
or
xchg
std
cmpsl
adc
stos
sbb
and
mov
push
rcrl
ror
mov
mov
jnp
mov
adc
adc
addr16
notl
test
add
pop
ficoml
jns
pop
push
std
js
cmp
icebp
insl
enter
sti
sub
xor
push
pushf
pop
cmpsl
vmread
out
aam
cwtl
je
inc
inc
cmovns
and
rcrl
pop
mov
ret
fwait
or
pusha
cs
xlat
mov
mov
repz
lret
xor
outsl
jg
add
in
push
mov
xchg
jno
cs
and
rol
push
ljmp
mov
jmp
fnsave
addb
xchg
cmp
sbb
mov
ja
stos
test
add
add
xchg
or
dec
cmpl
addr16
fsubrl
mov
fcomi
pop
nop
push
add
xchg
or
or
pop
clc
xor
movsl
jge
scas
cltd
mov
add
in
sub
cli
mov
mov
pusha
mov
movsb
xchg
cmp
inc
mov
dec
imul
out
pop
sub
push
inc
in
push
and
sub
iret
pop
sub
mov
and
sti
stos
aad
das
sbbb
push
xor
icebp
inc
sub
inc
add
popf
inc
cmpsb
daa
loope
cmp
adc
adc
push
je
mov
es
jae
aaa
mov
and
mov
cmp
cmp
cld
cmpsl
xchg
or
subb
push
cmp
out
punpckhbw
mov
movsl
in
js
lret
xor
jmp
out
add
add
jno
lock
cmp
pop
cmpxchg
out
mov
movsb
mov
fmulp
xor
xor
pusha
mov
or
lcall
outsb
mov
adc
cmp
movsl
or
stc
add
out
jnp
lahf
mov
imul
adc
mov
stos
push
inc
repz
iret
and
je
xchg
addl
scas
cmp
scas
aam
loopne
flds
push
outsl
test
pop
mov
mov
mov
push
in
mov
xchg
loope
rorb
or
and
movsl
dec
push
dec
rcrl
in
fidivl
fisubl
cmp
inc
sbb
std
arpl
daa
sbb
popa
or
sbb
push
and
lods
sbb
scas
int
loope
outsl
xor
sbb
dec
pushf
cltd
sbb
fstps
jb
xor
addb
aaa
add
jmp
xchg
leave
xchg
aad
xlat
sbb
fnsave
ss
and
sub
into
push
hlt
inc
cmp
inc
adc
pop
in
lods
jp
pop
scas
pop
xlat
rolw
mov
xchg
incb
out
mov
mov
add
cmc
sub
mov
cmp
add
jle
adc
mov
out
cmp
dec
lahf
loop
xor
nop
in
sub
xchg
pop
pop
mov
iret
dec
mov
sub
mov
test
out
xor
les
pop
cmp
mov
inc
int
int3
push
inc
xor
loope
rcrb
lcall
push
push
stos
jno
and
ret
imul
adc
in
inc
pop
stc
cwtl
arpl
jmp
sub
adc
lcall
movsb
loope
cld
xchg
xor
popf
lock
call
push
sub
adc
and
scas
pmulhw
mov
and
pop
shlb
mov
dec
xchg
frstor
shlb
push
int
dec
out
sbb
popf
add
outsb
dec
icebp
xchg
jb
ljmp
fimull
imul
sarb
fistl
jl
dec
cli
jbe
leave
ss
sbb
push
stos
gs
jno
adc
jg
cwtl
push
lods
xlat
xchg
add
xchg
xor
test
dec
outsl
gs
push
test
aam
fwait
fs
jg
pop
or
cmpsl
aad
jne
ljmp
in
dec
mov
adc
mov
jge
addr16
push
cmp
cmp
daa
push
fsubrl
pmuludq
cld
or
pop
rcrl
jno
rorl
jp
loopne
jge
in
mov
sti
in
inc
dec
sub
push
push
mov
xorl
ret
daa
adcb
icebp
and
jb
loope
inc
jge
ljmp
cmp
or
fdivl
sub
sbb
test
cmp
add
dec
pop
jae
das
add
adc
hlt
adc
or
mov
ret
movsb
mov
loop
jle
push
sub
jl
fsts
push
dec
dec
xor
or
movsl
loop
dec
ret
call
or
loopne
std
enter
ret
xchg
jbe
xchg
push
repz
cltd
jno
jl,pt
push
loop
cmp
push
lock
stc
shll
cmpsb
pop
imul
movsl
icebp
sbb
scas
out
xchg
mov
sub
inc
xchg
xor
sub
inc
stos
sbb
ss
sub
enter
lret
testb
adc
aas
push
rcr
adcl
out
repz
mov
pushf
jo
jg
test
and
pop
push
xchg
and
mov
roll
pushf
xor
bound
push
pop
push
xor
add
rcrb
aad
and
test
mov
int
sbb
imulb
add
push
mov
mov
mov
outsb
mov
adc
mov
and
sub
enter
cmpl
aad
scas
divb
stos
xor
push
sub
leave
rcll
insb
mov
into
add
pop
cmp
jp
gs
pop
push
adc
and
jbe
jo
test
fldt
rcrl
pop
mov
out
mov
mov
sbb
jg
xchg
sti
inc
or
dec
loop
in
push
stc
pop
jns
out
lret
xchg
dec
out
fiadds
push
clc
iret
jmp
adc
cmp
int3
pop
jge
push
jb
pop
lods
popa
jbe
loop
push
out
popa
repnz
stos
mov
scas
test
jmp
sbb
add
cli
push
xchg
fs
test
mov
inc
repnz
clc
jecxz
cmpsb
cs
repz
mov
sbb
mov
int
or
inc
test
dec
xchg
and
sbb
enter
inc
pusha
js
fcompl
sarl
mov
xlat
pop
and
xchg
sub
dec
call
mov
int
xorb
test
adc
mov
and
push
sub
dec
push
mov
fwait
mov
sub
ret
pop
xchg
sbb
jo
push
sbb
ss
and
aad
push
pop
jp
add
mov
ss
adc
out
and
pop
jb
in
pop
push
test
jns
repz
sub
andb
aad
mov
ljmp
push
lea
jb
test
popf
fcompl
lret
pop
jbe
jg
es
push
ds
xor
pop
aad
in
aas
scas
dec
push
xchg
jne
pop
cmp
daa
rorb
ljmp
ja
stc
mov
imul
push
jb
push
add
dec
pop
pop
xor
fiaddl
xchg
adc
dec
repz
or
movl
push
testb
in
push
mov
push
jl
xchg
rol
push
jmp
mov
mov
xchg
rorb
leave
call
mov
iret
xchg
comiss
gs
aad
pop
int
sub
fistpl
pop
pushf
insl
xchg
jl
mov
push
cwtl
mov
mov
mov
inc
fisttpll
sbb
sub
mov
or
call
mov
mov
fwait
lahf
movsl
sti
mov
and
data16
sbb
test
xchg
aam
xor
std
or
push
in
sub
cld
cltd
sahf
cmp
mov
into
sub
and
mov
js
cmpb
xchg
outsl
jnp
std
xor
scas
pusha
pop
sahf
cmp
pop
ss
cmp
sub
cli
mull
flds
cmp
cmp
mov
inc
pop
out
enter
cmpsb
xor
push
inc
sarl
push
cmp
cmp
jle
jbe
jne
add
sbb
sarb
pop
pop
idiv
mov
xor
dec
dec
cmc
aam
xchg
pop
outsb
or
push
pop
aas
xchg
and
nop
add
hlt
mov
mov
pop
add
stos
les
rcll
adcb
add
call
or
cmp
lcall
add
push
test
and
adc
jo
inc
adc
imul
mov
mov
xor
and
sub
repnz
test
lcall
mov
rcpps
xor
xor
movsl
dec
mov
daa
sbb
je
icebp
mov
mov
xchg
jo
popa
jnp
mov
fs
out
das
or
jl
mov
push
or
nop
pop
inc
inc
xchg
movsl
push
negl
xchg
push
mov
pop
nop
xchg
xor
dec
test
mov
xor
lock
divl
addr16
shlb
sub
add
mov
lea
outsb
mov
das
aaa
xlat
and
stos
cmp
in
pop
lret
xchg
push
jp
stos
xor
mov
cli
inc
inc
mov
fwait
dec
adc
sub
mov
pop
jnp
cwtl
push
pop
push
movsl
das
cmp
dec
ja,pt
popa
scas
dec
cmp
sub
mov
adc
jbe
jne
shll
cmpsl
imull
mov
ret
sbb
fcompl
in
cltd
stos
or
mov
decb
int
mov
xlat
push
arpl
outsb
and
inc
push
hlt
lahf
sbb
and
jge
pop
int3
xchg
aas
xchg
pop
push
cmc
inc
sbb
ret
adc
lret
sahf
out
test
or
pop
filds
xor
scas
dec
jo
mov
rcr
pop
cs
mov
clc
push
lahf
add
add
bnd
push
push
mov
fists
addr16
pop
fidivl
aam
and
roll
aaa
test
es
add
push
out
jmp
push
nop
xor
xlat
enter
lret
cmp
arpl
pop
daa
sub
das
frstor
sub
adc
lods
add
je
daa
in
fldcw
xorb
iret
push
mov
or
cwtl
add
mov
lods
rorb
mov
push
cli
jecxz
push
icebp
dec
sbb
inc
jle
mov
xchg
stos
icebp
mov
out
mov
mov
pop
cmpl
jecxz
pusha
sbb
sbb
ljmp
dec
fwait
adc
mov
test
adcl
pop
aam
xchg
sub
or
subl
xchg
lahf
movsl
in
out
in
stos
lea
popf
imul
scas
mov
js
xlat
inc
adc
cmp
sub
in
jge
jle
add
in
pop
sub
sub
insb
cli
jge
adc
dec
sub
dec
es
lds
icebp
jp
inc
sti
mov
ss
jae
sub
outsb
mov
cmp
nop
leave
sbb
xchg
mov
adc
sub
pusha
pop
scas
ljmp
push
pop
push
pop
mov
xchg
sub
nop
stc
push
out
dec
fstps
into
mov
xchg
imul
lods
pop
dec
cmpl
cmp
jmp
xchg
adc
adc
cwtl
mov
sar
into
popa
cli
test
and
add
and
iret
arpl
adc
push
int3
pop
mov
int
sbb
std
adc
mov
hlt
fs
pop
scas
arpl
or
hlt
push
fsubr
inc
fmull
jg
sub
adc
xchg
in
sbb
adc
or
push
int
iret
xchg
shrl
sub
popf
or
mov
mov
fstps
or
jmp
fbstp
pop
sub
scas
out
or
sub
mov
mov
jns
mov
or
mov
pop
ds
fwait
jg
mov
jo
fwait
push
sub
stc
jns
push
adc
dec
mov
out
cmp
mov
inc
cmp
push
pop
push
in
adc
pop
scas
mov
xor
jp
xor
push
out
lds
pop
fsubrl
mov
stos
jbe
cmp
mov
mov
push
das
cld
inc
or
fbld
dec
idivb
xor
insb
adc
into
daa
stos
cmp
test
dec
mov
sti
rcll
movsb
and
and
jmp
icebp
ds
push
mov
jbe
std
ss
cltd
je
aaa
mov
stc
xchg
push
ja
in
popl
out
add
xor
dec
push
jno
mov
sub
mov
mov
ja
fxch
push
push
adc
cli
in
and
jae
inc
xchg
rolb
imull
out
jae
pop
shr
and
mov
je
ja
sub
add
cli
jne
push
jne
js
sub
cmp
lea
mov
jae
and
xchg
jns
int3
outsl
clc
pop
mov
and
es
js
add
cwtl
xchg
mov
pop
xchg
sub
mov
fimull
cmp
jns
cmp
mov
or
push
cwtl
es
subl
jns
xchg
jbe,pt
mov
mov
imul
mov
in
mov
xchg
jl
mov
mov
lock
imul
sahf
ja
pop
pop
or
shll
out
loop
fsubr
ret
sbb
mov
sbb
dec
je
dec
sbb
mov
les
and
mov
xchg
or
dec
adc
jae
sbb
insb
in
lods
mov
and
dec
push
mov
push
mov
pop
loop
mov
inc
xchg
mov
jno
or
or
clc
sahf
cmp
dec
push
inc
aas
fldenv
sbb
cli
jae
mov
sub
stos
iret
adc
bts
out
xor
jbe
lret
mov
and
out
lret
js
mov
inc
mov
fwait
or
mov
pop
dec
es
scas
pop
adc
enter
subb
pop
aas
movsb
mov
cli
jl
mov
mov
pop
dec
cltd
shlb
dec
repnz
push
popa
xchg
inc
dec
mov
adc
mov
adc
pop
mov
jns
sub
jb
cs
bound
fldcw
jmp
jg
push
jae
mov
hlt
and
inc
cli
les
add
clc
das
fs
adc
ficomps
mov
cld
mov
xor
push
aam
out
sarb
sub
and
mov
mov
jle
mov
jbe
pinsrw
sbb
cmpsl
negl
insb
and
jns
sub
lahf
mov
adc
pop
es
sbb
fstps
ret
xchg
or
sub
fnstenv
mov
lahf
add
enter
pop
loopne
cltd
inc
ss
stos
test
mov
arpl
mov
in
xchg
dec
enter
outsb
mov
pop
cmc
jne
lret
jnp
cli
mov
inc
jl
daa
lea
push
imul
std
sub
cmpsb
divb
iret
push
out
jns
xchg
xchg
popf
cmpsb
out
scas
cmp
in
jbe
bound
out
push
sbb
sbb
aaa
mov
push
lret
jecxz
scas
push
shlb
cmpsl
add
aam
movl
je
imul
mov
mov
adc
and
iret
ret
lret
scas
and
mov
cwtl
xchg
xchg
bound
lea
out
negb
cltd
inc
mov
fdivrs
mov
jl
sbb
int
iret
ljmp
lret
repz
or
push
pop
pusha
sub
adc
loopne
push
gs
xchg
outsl
roll
imul
icebp
jnp
insl
adc
or
pop
push
shr
fstpt
daa
shl
adc
cmp
fnsave
test
sbb
lea
inc
out
or
gs
or
cmp
pop
lods
ljmp
push
ret
cld
cmp
int3
sti
mov
push
mov
mov
dec
out
stc
insb
mov
gs
mov
cld
xchg
sbb
pop
xor
push
pop
call
push
cmp
sahf
je
adc
les
pop
ljmp
fldl
lcall
pusha
lahf
jge
stos
jecxz
xchg
sbb
ja
and
add
push
movsb
cmp
cmp
out
cltd
pusha
and
insb
ds
push
mov
nop
sarl
pushl
xor
push
out
adc
test
loope
divl
das
cld
mov
mov
mov
ret
mov
add
arpl
fisttps
fwait
outsb
sub
icebp
sbb
repnz
je
inc
fsubl
jg
rcrb
add
mov
mov
cli
int
pop
in
addl
sbb
sti
rorb
mov
adc
or
jo
cmpb
icebp
lret
or
scas
repnz
or
loopne
xchg
mov
cmpsb
and
adc
mov
add
pop
jne,pn
addr16
popf
hlt
xchg
rcl
sahf
dec
inc
xor
add
jmp
xchg
hlt
inc
mov
cmc
inc
jge
into
add
sbb
iret
dec
pop
fdivs
inc
shrb
rolb
pop
add
add
rorb
jns
lret
std
sub
sub
inc
fs
jp
js
cs
mov
add
cmp
lock
aas
jmp
push
inc
pop
adc
rorb
push
testl
mov
popf
jae
fiaddl
xchg
ds
cmpsl
mov
inc
inc
call
ss
sahf
cld
lret
xor
xor
hlt
rorl
scas
and
cmp
jno
into
aad
push
scas
outsl
insl
sbb
je
insl
cld
push
inc
jo
ja
jbe
cmp
cltd
jbe
mov
adc
xchg
push
popf
and
insl
push
sub
mov
cltd
outsl
push
dec
test
scas
xlat
cli
popf
jns
adc
cmp
and
push
mulb
mov
shl
inc
movsb
ss
lret
push
xchg
divl
data16
fisttpl
xor
or
push
or
adc
jbe
cmpsl
sub
sbbl
negl
add
xchg
fldt
imul
rcrb
sti
arpl
xchg
and
idiv
leave
cmp
sub
mov
pusha
popf
sti
insb
lcall
cwtl
nop
lret
mov
mov
test
ret
lods
loop
jo
dec
pop
dec
cmp
xor
cli
negb
inc
jecxz
out
aaa
xlat
sub
xchg
pop
sbb
mov
pop
mov
andl
pop
dec
adc
scas
adc
adc
pop
outsl
repz
int
and
outsb
fisubl
mov
adcl
pop
mov
cmpsl
adc
mov
push
cmp
pop
cmp
aam
mov
and
cmp
mov
cmp
out
loop
test
rcll
xchg
and
loop
insb
shl
popa
adc
mov
xchg
cwtl
ret
int
insl
pop
jbe
test
inc
push
add
xor
scas
pop
cld
and
mov
inc
inc
mov
shlb
ds
inc
cmp
mov
push
pop
ljmp
cmc
dec
ja
dec
js
sbb
into
add
jg
in
dec
ret
fcomps
imul
adc
and
sbb
pop
fnstcw
scas
mov
shrl
cmp
adc
push
test
push
push
shlb
push
ret
cmc
lods
mov
in
test
in
arpl
pop
sbb
jmp
cmp
push
push
xchg
imul
pop
add
loope
mov
xor
mov
lcall
call
jp
fldl
iret
out
adc
sub
leave
jecxz
loopne
xchg
fistps
xor
gs
mov
les
push
inc
jno
test
cmp
fwait
mov
sbb
and
out
fstpl
pop
pop
push
out
dec
push
ficoms
jg
fldl
jle
jge
jo
jne
pop
mov
or
ret
mov
inc
jne
fsubs
scas
movsl
cmc
outsl
xchg
add
xchg
dec
lods
cmp
push
jb
arpl
xchg
sub
push
xchg
xorl
jmp
inc
cmpsl
pop
aad
push
or
cmp
push
xchg
sbb
das
daa
cwtl
dec
outsl
add
pop
add
mov
mov
jp
push
sub
mov
dec
jl
les
push
pop
lea
cmc
cmpsl
sub
jge
cmpsl
or
jae
mov
fmulp
add
imul
jne
push
cli
add
std
inc
scas
test
loop
inc
dec
insb
lods
mov
sarl
mov
out
adc
push
stc
daa
ret
pop
mov
push
mov
fnsave
pop
cli
pushf
jle
sub
out
jle
addr16
push
mov
repnz
les
mov
fs
add
rcrl
insb
test
and
xchg
dec
rcrl
mov
das
int
inc
mov
add
fnsave
pushf
aaa
pop
mov
or
mov
dec
add
imul
xchg
rcl
mov
imul
fisubrs
inc
xor
push
mov
xchg
shll
mov
test
push
jns
mov
dec
outsb
and
test
or
faddp
imul
pop
inc
xchg
jge
movsb
test
pusha
jne
movsb
andb
lods
cltd
js
movsb
repnz
les
shll
fildll
push
jg
pop
je
sbb
divl
add
pop
cmpsb
test
add
test
jnp
mov
jns
pushf
sub
mov
add
mov
notb
bnd
mov
push
jecxz
cs
cmpsb
xchg
jns
add
or
jb
jl
and
sbb
mov
pushf
push
and
inc
add
and
orl
repnz
dec
cmp
pop
leave
jp
pop
push
cmp
aas
sub
lret
sahf
and
push
pop
fs
std
rcrl
scas
aam
das
nop
xchg
jmp
adc
sub
sar
push
cltd
sti
fcoms
jno
xchg
jl
push
repz
jg
inc
lret
adc
cli
and
mov
jno
xor
mov
pop
rclb
inc
mov
adc
loop
imul
or
xor
mov
cmp
test
and
outsl
test
aaa
das
loopne
nop
shll
mov
out
inc
movsb
shrb
sub
sbb
iret
mov
int
xchg
push
jg
xchg
aad
stos
mov
repnz
imulb
shl
xchg
movsb
push
push
es
adc
and
repz
lcall
pop
rorb
cmp
repnz
sbb
cmp
outsb
add
lods
jg
jge
lea
lahf
mov
xor
xor
in
dec
dec
inc
cmc
mov
repnz
push
xor
cmp
push
sub
loopne
cmp
dec
sti
add
hlt
xor
popf
pop
sbb
pop
push
test
jp
fnstsw
or
je
cld
ret
insl
add
mov
mov
dec
pushf
test
test
aas
or
lret
mov
loop
scas
out
inc
mov
jnp
adc
cmp
ret
pop
mov
sbb
in
dec
xchg
sub
jge
cmpsb
sub
leave
fwait
lret
in
test
pop
mov
leave
outsb
mov
ljmp
cld
xorl
es
out
jns
jae
sub
push
cmp
outsl
sub
popf
inc
sub
jg
dec
cmp
pop
ja
mov
mov
jmp
shl
jp
xchg
int
pop
adc
pop
xchg
cmp
sub
jne
fildl
mov
and
leave
and
jle
push
scas
cld
xchg
popf
or
mov
mov
std
cmp
out
mov
cmpsb
mov
xchg
cmp
sbb
xor
xchg
fs
push
clc
xchg
sahf
aam
rorb
jbe
in
test
pop
xchg
cltd
push
mov
inc
decl
pop
sub
inc
mov
faddl
daa
imul
dec
or
or
arpl
std
lods
jo
popf
iret
jle,pn
push
xor
test
gs
movsb
dec
inc
jno
shll
subl
ret
popa
mov
or
aaa
lds
sub
pop
aad
ss
or
rorb
out
pop
pop
jo
loopne
fnstenv
cmpsb
push
mov
and
mov
sbb
lods
adc
adc
jg
stos
pop
clc
int
stos
out
dec
xchg
mov
mov
lods
jge
mov
fidivs
popf
mov
cmp
aad
ret
push
xor
rolb
pushl
mov
clc
in
popf
notb
into
mov
pop
movsl
xor
loopne
in
subb
push
push
stos
mov
insl
shrl
outsl
xchg
mov
dec
push
sbb
fists
dec
jo
jb
leave
dec
mov
enter
loop
pop
jl
pusha
rcll
lea
aam
mov
imul
clc
in
jb
cs
aas
adc
sub
pop
sbb
jae
hlt
lods
mov
xor
dec
jge
or
leave
movsb
adc
fidivrs
rorl
cmp
push
jns
mov
push
out
pop
dec
cmpsb
lock
mov
cmp
arpl
cmp
je
mov
int
sbb
mov
in
xor
cwtl
iret
hlt
divb
mov
mov
in
fxch
sub
ret
mov
arpl
xor
and
fwait
lods
xlat
test
cmpsl
call
enter
in
inc
cmp
mov
enter
out
and
xchg
mov
add
and
and
js
test
adc
sbb
or
and
test
pop
push
mov
mov
adc
in
jge
stos
sub
xor
idivb
cmc
sub
push
ss
or
mov
mov
int
push
mov
adc
mov
dec
and
pushf
fistps
mov
mov
icebp
xor
jp
pop
sub
mov
movsb
out
std
mov
cs
dec
xchg
dec
dec
adc
insb
add
test
test
aam
jecxz
jg
jl
jp
mov
loope
popf
add
jmp
adc
int
pop
mov
sub
in
mov
lret
lock
gs
pushf
sbb
jmp
xchg
sahf
mov
loop
int
fcomi
or
xor
into
adc
rcrb
mov
movsb
jae
cs
out
xor
lods
andl
xchg
cli
xchg
roll
xor
lcall
adc
pop
decb
cmp
in
int
pop
dec
inc
repz
jl
adc
jle
add
push
test
push
sbb
cmpsl
dec
aas
scas
fimull
paddw
iret
std
stc
jge
and
adc
scas
mov
lea
cltd
mov
xchg
push
je
arpl
mov
mov
push
aam
into
pop
nop
aaa
mov
sahf
sub
scas
das
dec
repnz
pop
fnstsw
mov
xchg
sbb
mov
daa
dec
sbb
pop
popa
mov
and
sarb
inc
jb
jp
sub
mov
mov
out
scas
pop
push
je
iret
pop
jb
jle
jno
jae
test
pop
leave
das
repz
mov
jecxz
inc
sbb
pop
jo
lock
inc
mov
mov
out
fnsave
mov
scas
ds
jge
rol
daa
jno
mov
sub
test
pop
mov
icebp
inc
mov
xchg
xor
insl
int3
cmpsb
mov
add
and
test
dec
xchg
jo
pushf
xchg
cmp
aad
sub
xchg
push
push
dec
add
fiaddl
xchg
mov
es
xchg
popa
xchg
push
adc
adc
and
std
lods
mov
push
lahf
dec
cld
loopne
aas
sub
pop
ljmp
adc
sub
inc
add
rcrl
mov
jnp
push
enter
pop
push
jmp
call
mov
sbb
pop
lea
xchg
jl
jg
fstpt
mov
push
cmp
adc
into
fs
mov
pop
stos
pop
sbb
or
fnstcw
sbb
mov
mov
in
popf
xor
pop
sub
out
inc
loope
push
pop
faddl
call
cmp
mov
aam
pop
cmp
hlt
xor
sti
enter
scas
adc
shr
or
jle
mov
dec
jb
lcall
cmpsb
cmp
sti
push
fsubrs
and
in
inc
rolb
push
jp
ja
in
out
xchg
push
cmp
fistpll
fwait
xchg
mov
xchg
cmpl
push
js
or
in
insb
fcmovnb
mov
or
clc
push
or
sbb
xchg
fsubrl
adc
fmuls
test
sub
cmp
jge
enter
adc
sub
pushf
pop
add
jb
mov
pusha
inc
int3
adc
cld
nop
addl
mov
mov
fistpll
fists
mov
arpl
push
stos
jb
cld
sub
dec
into
jb
insl
inc
inc
mov
jo
test
sbbl
mov
inc
sbb
push
rorb
cmp
aad
pop
mov
imul
adc
mov
mov
xor
clc
inc
mov
xchg
in
push
mov
idivb
orl
mov
dec
jl
ficomps
jbe
dec
in
and
or
loope
lret
push
incb
iret
push
dec
xchg
push
push
and
push
sub
dec
lret
and
ja
push
push
roll
out
dec
repz
add
test
fisubrl
inc
sub
in
lahf
daa
jb
dec
int3
leave
mov
dec
sub
sub
movsl
mov
call
clc
and
loope
pusha
inc
xchg
sub
push
mov
jge
or
dec
inc
push
xchg
test
jp
jne
pop
mov
dec
sbb
xchg
int3
xorl
mov
in
adc
dec
or
push
fcmovbe
ljmp
push
dec
fdivrs
pop
fdivrs
xchg
mov
aaa
imul
fldenv
shrb
mov
push
fcoms
outsb
mov
add
notb
insl
outsl
jmp
gs
sub
scas
sbb
lcall
jb
sbb
pop
xchg
cmpsb
ljmp
adc
stos
push
in
adc
popa
in
test
adc
adc
jae
add
fildl
add
outsb
mov
cmp
dec
int
into
stc
mov
cmp
adc
dec
inc
sub
jecxz
scas
xor
adc
xchg
call
sahf
pusha
or
testl
sub
mov
push
leave
xor
icebp
clc
mov
adc
dec
add
or
stos
jno
cmp
in
sbb
add
in
es
lret
mov
fisubrl
mov
xor
dec
ret
mov
sub
or
enter
sahf
or
dec
pop
adc
imul
xchg
cmpsb
cltd
loop
aaa
es
int
stc
int3
mov
and
jb
adc
notl
dec
test
pop
out
xchg
mov
mov
cmpsl
nop
out
sbb
mov
movb
sti
adc
dec
sahf
and
or
push
dec
ss
cltd
stc
xor
jo,pn
loope
push
data16
repz
inc
cmp
movsb
mov
dec
pusha
cwtl
int
fdivrl
cltd
pop
insl
sbb
pop
fadds
push
sub
mov
cmc
sbb
fiadds
loope
fcmovb
js
cmpsb
clc
cmp
push
rcll
or
jne
rcrl
std
xchg
dec
xor
mov
xchg
movsl
mov
pop
push
repnz
mov
in
cmc
ds
xchg
xchg
insb
mov
call
pop
mov
mov
leave
mov
sar
cmp
mov
icebp
adc
add
pop
das
mov
outsl
clc
adc
fwait
push
mov
push
xchg
dec
or
insl
mov
insl
ficoms
cltd
and
push
into
add
out
cwtl
jle
pop
or
or
lods
add
mov
int
jnp
push
test
mov
jg
cwtl
notb
mov
push
es
movl
cltd
movsl
inc
adc
sub
adc
into
je
ds
or
pop
and
int
rorb
and
xchg
mov
bound
push
or
push
div
rcl
xchg
aam
int
push
lods
jg
negl
js
fdivr
in
sahf
jle
jge
pop
xor
leave
rcl
lods
push
sub
jmp
stos
mov
dec
mov
out
test
pop
cmp
aam
jl
dec
jb
pushl
shlb
imul
imul
inc
imulb
xchg
xlat
mov
je
adc
and
jne
mov
or
mov
sbb
cmp
push
bound
dec
or
sbb
pusha
addl
fwait
adc
fmul
or
les
repz
std
or
jge
cmc
dec
pop
popa
sbb
mov
push
push
mov
mov
and
lcall
and
iret
xchg
adc
das
dec
dec
push
repz
lcall
in
les
mov
pop
xor
sub
adc
xchg
inc
cwtl
stc
popf
sahf
pop
mov
pop
out
pop
jnp
jge
jmp
push
push
inc
test
or
mov
and
dec
push
lods
jmp
shr
popa
mov
mov
scas
mov
imul
test
into
xor
outsb
sub
shlb
push
xor
cmp
in
and
inc
xlat
pusha
divb
fstps
xchg
sbb
mov
sahf
xor
push
jl
out
xchg
out
inc
clc
push
push
movsb
xchg
iret
mov
mov
popf
aad
push
pusha
push
scas
fwait
imul
jle
inc
xlat
sbbb
lret
cmp
icebp
dec
sub
bound
and
pusha
lret
xor
stc
mov
test
cmpsl
movsb
movsb
xorl
lea
or
xor
js
daa
pop
test
jb
fdivrp
cli
int3
inc
in
stc
pop
dec
lods
sub
mov
aad
push
aam
sbb
dec
fmulp
ret
mov
xor
lds
xchg
jnp
push
and
inc
xor
push
pop
repz
cwtl
movsb
inc
dec
cmp
outsl
sub
pop
xchg
xor
shl
fwait
and
pop
xchg
fildl
push
push
inc
pop
cmp
imul
lods
sub
aad
mov
pop
xor
push
mov
call
movl
pop
in
jg
mov
pop
fldenv
movl
jmp
rclb
mov
stos
mov
test
fidivl
je
insb
sub
iret
aas
jns
std
dec
xor
ret
lock
arpl
nop
mov
or
and
mov
jb,pt
push
mov
jmp
xchg
pusha
fsubs
jmp
or
fdivrs
mov
and
jno
mov
sub
stos
or
push
mov
imul
psubsw
cmp
div
mov
enter
xchg
fildll
scas
sbb
sbb
out
ret
inc
or
popa
pop
jae
cmp
in
dec
cli
add
cmpsl
mov
jbe
aad
insb
lds
roll
xorl
ds
cltd
hlt
mov
pusha
in
inc
popf
iret
popf
xlat
nop
arpl
fs
clc
ds
in
fiaddl
jg
adc
out
inc
xchg
mov
jg
mov
sub
out
fcmovu
jg
into
add
movsb
shlb
jl
xlat
add
pop
nop
movsb
dec
or
pop
mov
loop
mov
mov
out
cmp
or
in
in
mov
popa
dec
add
pop
sahf
hlt
cmpsl
shrb
sub
xchg
js
sbb
xchg
ret
hlt
pop
mov
cmp
pop
mov
scas
inc
insl
call
xchg
ret
push
cmpsb
jne
lock
cmp
inc
pop
shlb
std
stos
int3
gs
push
test
sbb
and
jnp
jmp
lods
xor
jns
call
mov
or
cmc
enter
dec
add
push
lds
cltd
aaa
cmpsb
aad
cs
ja
jle
nop
cltd
rcr
loopne
jmp
jno
xchg
or
call
cmp
and
xlat
sub
rcl
add
mov
in
arpl
xor
cmp
push
inc
andb
mov
loope
pop
repz
mov
jecxz
xchg
adc
fidivrl
xor
push
ja
out
shlb
mov
inc
movsl
add
pop
mov
leave
dec
fsubs
jecxz
mov
insb
sbb
jmp
or
mov
xchg
call
mov
add
mov
les
lods
pop
add
in
lods
mov
shl
push
add
pop
js
roll
and
add
stos
dec
xor
mov
push
push
sub
sub
outsb
das
lret
and
cmpsb
ffree
or
gs
mov
test
and
mov
add
adc
mov
cli
and
in
out
in
and
lret
aas
fidivl
insb
fisubrs
in
jbe
lods
mov
pop
lods
out
fidivs
aas
aaa
fcmovnb
or
cmp
dec
roll
mov
loopne
inc
stos
xor
or
fucomp
fiadds
xor
cmp
xlat
jge
sbb
xor
ret
movsl
scas
add
push
pushf
fnclex
push
int
sbb
add
inc
add
enter
jl
dec
mov
push
add
jo
and
stc
add
sbb
jnp
add
icebp
adc
adc
loopne
and
or
sub
loope
mov
jb
stc
xchg
push
sar
push
dec
mov
jge
mov
scas
movsb
xor
out
xor
outsb
jle
rorb
sub
and
xchg
fisubl
aam
mov
cmp
insl
cmc
cmp
lds
xchg
in
jg
mov
or
mov
xor
mov
shlb
add
pop
addr16
mov
loope
in
stc
jmp
and
pop
popf
and
insb
pop
ljmp
test
je
adc
pop
shll
push
mov
mov
loope
add
mov
xor
mov
out
mov
loopne
js
or
adc
xchg
addr16
mov
push
sbb
les
mov
xor
out
movsb
push
imul
test
imul
pop
pop
fidivrl
or
je
push
pop
jbe
movsb
clc
xor
sbb
jb
outsl
mov
xchg
prefetch
fucom
pop
aad
in
movsl
and
sbb
fadds
insb
or
insb
movsl
lock
rolb
js
aam
adc
pusha
pop
sbb
outsl
pop
jp,pn
mov
mov
testl
test
sub
out
fcompl
movsl
mov
aas
push
test
mov
mov
push
into
jp
jns
xchg
pop
out
adc
dec
dec
cltd
out
enter
ja
mov
cmpsl
and
push
ret
dec
mov
sbbl
js
cmp
sbb
iret
pop
lods
xchg
cmpsb
sahf
pusha
es
inc
cmpsb
test
in
push
hlt
push
inc
mov
mov
xor
fldenv
outsb
dec
dec
das
inc
sub
dec
dec
or
imul
imul
or
xor
jbe
lahf
pop
loopne
and
out
je
xchg
mov
xor
xchg
adc
add
inc
mov
ret
push
add
inc
fwait
shl
mov
jecxz
rcll
inc
push
call
xor
aaa
popa
xchg
insb
add
jo,pt
and
xchg
outsb
data16
movsb
sbb
je
int
inc
mov
mov
ficoml
es
pop
fcoml
or
fs
adc
dec
neg
sub
inc
pop
xchg
sahf
cmp
mov
xor
cmp
and
popf
mov
mov
call
insl
and
cmpsl
jo
into
sub
jmp
in
pop
sbb
call
push
dec
mov
fistpll
repnz
in
push
repnz
imull
jb
mov
aas
test
sub
jns
and
sbb
repz
dec
mov
into
imul
mov
xor
sbb
push
jge
or
in
pop
negl
jg
add
jno
sub
push
cmp
cwtl
push
mov
aam
fcoms
adc
or
in
lret
inc
xchg
ficomps
xchg
mov
mov
xlat
xor
pushf
pop
mov
dec
mov
sahf
mov
xor
jmp
pop
lret
push
push
loope
mov
sub
cmp
cmp
pop
push
mov
shll
test
cmp
shlb
out
jae
ja
mov
faddl
das
pop
or
clc
data16
sub
into
jmp
pop
imul
data16
in
stc
cmp
push
in
test
bound
and
loop
mov
mov
push
and
daa
iret
lcall
fwait
add
in
cmp
add
or
ror
add
decl
pop
sbb
popf
leave
dec
cmp
jecxz
in
push
dec
rcl
js
shll
push
push
push
repnz
fisttpll
aaa
xor
js
mov
aas
jecxz
aam
or
mov
inc
sbb
in
mov
push
jmp
test
jae
mov
push
xchg
cmp
dec
jp
pop
push
nop
xchg
inc
cmp
jl
ss
mov
xor
fsubrs
xchg
test
dec
into
sti
cmp
aad
xchg
mov
loope
dec
stos
sahf
divb
das
inc
inc
jp
sti
fidivs
sub
call
jle
sub
and
mov
js
sarl
imul
mov
dec
jbe
bound
dec
popa
popf
je
out
rolb
adc
adcl
cmpsl
hlt
mov
repz
or
or
cmp
sub
shll
push
clc
loop
sbb
js
jne
mov
sahf
push
jae
repz
aam
dec
shlb
pop
push
aaa
cmp
popa
pop
sub
test
sub
jecxz
loopne
and
imul
outsb
and
cmovbe
ljmp
adc
bound
jbe
xor
lock
mov
stc
cmp
mov
lods
push
outsl
shll
popf
sub
or
ret
roll
or
adc
fildl
bswap
or
or
mov
dec
dec
int
dec
cli
jle
repnz
mov
jne
add
sysexit
mov
inc
nop
push
push
sahf
les
push
push
hlt
fadd
jp
dec
cmp
push
jmp
sbb
out
mov
fnstenv
imul
cmp
stc
popl
stc
jecxz
sub
mull
or
in
sub
jno
repnz
into
jns
mov
mov
test
std
mov
je
cmp
mov
jae
decb
out
mov
sbb
adc
cmp
xor
ja
ja
popa
fdivs
adc
imul
fwait
int3
sti
jg
and
mov
jmp
jg
sbb
shl
iret
cmp
or
int3
leave
test
sub
mov
dec
jne
pushf
loope
addr16
loopne
cmp
pop
mov
cltd
cwtl
js
loop
insl
sbb
inc
sbb
cmc
sbb
cmp
add
jns
das
and
in
ficompl
jae
xlat
xor
aas
add
pushf
sub
lock
adc
pop
sbb
and
lock
les
mov
mov
lahf
add
test
push
mov
and
fisubl
sub
lret
out
pop
flds
adc
add
mov
mov
popa
cmp
adc
jecxz
movsb
stos
lds
push
js
stos
and
out
jo
cmp
rcl
mov
or
cmpb
mov
call
lret
out
dec
cltd
cld
xor
push
outsb
rcrl
aad
sbbb
sti
lods
lds
ljmp
xor
rclb
nop
lcall
jmp
inc
pop
outsb
fmulp
hlt
fwait
test
test
cld
mov
add
push
lock
mov
insl
in
loopne
add
enter
and
add
adc
fists
das
fisubrl
or
mov
clc
adc
or
sub
js
jno
sbb
or
pop
and
aaa
mov
sub
fwait
inc
ja
sbb
add
lds
lret
imul
xchg
into
out
or
notl
or
sbb
decl
pop
iret
sbb
js
loopne
inc
or
pushf
ret
push
jmp
lea
inc
call
outsb
mov
lret
fldenv
xor
push
addl
outsl
fisttps
sub
aad
and
pop
dec
ret
inc
scas
jle
add
imul
lahf
dec
or
push
pop
cmp
stos
mov
sbb
daa
stos
div
cwtl
dec
add
jne,pt
mov
lods
add
adc
out
stc
pop
add
sub
adc
lret
add
je,pn
hlt
imull
stc
nop
dec
data16
bound
cmp
enter
cmp
add
sarl
fldl
pop
add
dec
lret
push
rolb
and
cli
sbb
imul
out
test
cmpsl
sub
lahf
ret
dec
loopne
mov
inc
adc
xor
std
icebp
sbb
push
mov
cs
or
loop
out
orb
mov
mov
and
jle
or
adc
cmc
and
sbb
in
xor
int
fistpll
inc
fsubs
js
dec
cmp
xor
mov
in
test
xor
lea
mov
jb
stos
out
packsswb
aam
stos
scas
inc
mov
add
sti
and
rclb
repnz
dec
mov
cs
clc
mov
leave
xor
push
ret
insb
pop
xlat
or
pop
mov
cmpsb
loope
sahf
dec
push
and
cmpsl
lock
sbb
sub
cmp
push
fidivs
pop
gs
fdivr
push
cmc
mov
sbb
adc
lds
mov
xchg
ljmp
aaa
inc
and
aas
fwait
push
and
sarb
iret
adc
fs
sti
add
out
lret
adc
or
dec
add
xchg
adc
addr16
cs
cld
jne
addr16
gs
lods
mov
jmp
sbb
jg
pop
or
add
ret
mov
cwtl
ds
ret
mov
jp
push
push
mov
outsb
xlat
icebp
addl
or
mov
lds
sahf
rolb
xlat
push
sahf
les
negb
push
xorl
dec
hlt
pop
jp
dec
jne
dec
sub
adc
ret
divb
loop
roll
loope
in
ret
xchg
movsl
fistps
shrl
dec
xorb
and
pop
and
les
cmpsl
popf
in
in
mov
lahf
sub
clc
sbb
jae
in
and
xor
mov
pop
mov
cmp
inc
mov
orl
push
dec
pop
loopne
notb
jg
adc
push
in
mov
inc
push
out
add
sbb
pusha
hlt
jb
xor
and
xchg
inc
inc
arpl
mov
inc
repnz
inc
shlb
sbb
push
ljmp
sbb
cmpsl
mov
mov
lcall
sbbb
inc
cmp
popa
jecxz
pop
iret
pop
mov
loop
ss
mov
xor
push
hlt
mov
fisttpl
pushf
imul
mov
cli
jo
in
xor
sbb
cmp
ret
repnz
sub
xor
sub
xchg
loopne
imull
test
scas
jae
or
aad
fsubs
adc
push
shll
and
mov
jo
lret
pop
daa
xchg
and
insl
shll
out
lea
sahf
es
int
inc
jg
sub
fs
inc
inc
test
test
shlb
aaa
pop
xchg
dec
mov
je
jb
shll
inc
sbb
in
or
xor
and
adc
fisttps
fstl
clc
xchg
stc
xor
inc
ljmp
pushf
sub
popf
stos
icebp
push
pop
mov
fnsave
fstl
sbb
das
mov
aaa
push
fwait
lahf
cmp
inc
mov
aam
scas
mov
xor
mov
xor
lret
daa
es
push
mov
push
ds
push
mov
jae
bound
fnstenv
data16
and
sarl
arpl
sbb
cmpsl
imull
ja
and
aas
mov
inc
mov
cli
mov
jecxz
adc
inc
shrl
sub
subl
mov
push
mov
sbb
add
xor
dec
and
inc
or
lods
aas
fists
push
mov
pop
add
xor
repnz
add
adc
mov
cmp
or
jbe
xor
xchg
sub
in
dec
ljmp
push
cs
dec
data16
sub
cmp
nop
stos
inc
in
cmc
inc
int3
sahf
mov
sbb
inc
dec
lret
mov
dec
fadds
mov
adc
ja
xchg
outsl
sub
or
mov
sub
xor
aam
out
aas
insl
pop
ftst
mov
nop
fisubrs
add
mov
jno
ret
enter
cld
ja
adc
lret
xchg
lret
jp
adc
in
stc
into
add
clc
test
cmp
daa
push
add
inc
mov
js
pushf
and
pop
sbb
dec
aam
pop
aas
pop
mov
test
xchg
or
mov
xor
push
stos
repnz
xor
add
dec
or
sar
push
xchg
sbb
pop
push
repnz
lea
adc
add
sbb
mov
hlt
shll
sbb
push
mov
shrb
xor
int3
sub
cmp
and
mov
daa
sbb
nop
dec
push
mov
pop
sahf
aad
cld
xor
mov
add
push
and
and
out
inc
imul
test
pop
dec
outsl
lock
xchg
leave
imul
adc
jmp
inc
inc
add
push
mov
pmulhuw
pop
fwait
and
pop
out
cmc
rcr
ja
mov
das
fldt
push
jg
pusha
int
xor
push
or
test
mov
sub
pop
enter
aas
repz
fldl
in
test
fwait
xchg
cmp
dec
jbe
xor
dec
decb
hlt
mov
push
leave
lds
xor
sbb
rcrl
test
mov
inc
sbb
sbb
jae
cmp
dec
cmpsl
sub
adc
xchg
fldenv
int3
test
scas
stos
push
pop
rorl
repnz
or
adc
sti
lds
mov
in
into
push
mov
jmp
leave
cltd
cmpsl
mov
data16
sub
and
mov
outsb
sbb
mov
cmpl
imul
fcmovnu
iret
jnp
shlb
arpl
inc
sub
hlt
enter
test
push
xor
bnd
popa
jmp
pop
sbb
dec
push
imul
push
jle
inc
adc
pop
dec
ljmp
adc
stos
mov
orl
fnsave
in
int3
repnz
xchg
clc
ds
cmp
inc
inc
call
xchg
jne
xchg
pop
jb
aad
cmp
jb
out
pushf
scas
stos
sbb
cmc
or
stos
std
outsl
out
add
popf
xor
imul
sub
scas
mov
ljmp
xlat
mov
rol
jbe
enter
mov
fnstcw
xchg
sub
test
notl
pop
outsb
sbb
jnp
mov
add
jge
or
ret
stc
mov
dec
aaa
mov
stos
lods
cmp
push
pop
bound
fcmovb
push
frstor
testl
cwtl
call
cmp
xchg
add
cmpl
and
mov
pop
add
loope
das
lcall
lcall
test
loope
and
movsb
loop
shll
mov
mov
int
rclb
mov
pop
adc
fwait
inc
inc
cwtl
xchg
sbb
test
adc
mov
ficoml
push
sbb
mov
insl
xchg
sub
aas
sti
mov
adc
sar
sbb
push
enter
fidivs
in
jecxz
sub
add
mov
xorb
xor
sub
sbb
es
dec
lods
int
push
movsl
jb
xor
fstps
out
movsb
cmp
leave
outsl
inc
cmp
outsl
stos
fcmovnu
inc
sbb
repz
mov
mov
icebp
or
jge
sub
push
orl
inc
jb
stc
jmp
addr16
lahf
sub
dec
jg
mov
mov
xchg
or
imul
imul
movsl
sbb
push
testb
ljmp
stos
int
loop
movq
push
arpl
and
movsb
xchg
sub
xchg
sbb
in
cmp
fsubr
sub
dec
cmp
pop
and
sti
popf
stc
lea
push
inc
int
add
push
insb
lds
fwait
lahf
shl
in
int3
and
je
jnp
push
fisubrs
ljmp
pusha
push
mov
bound
mov
insl
stos
and
xor
mov
in
js
mov
pushf
addr16
dec
mov
es
add
hlt
mov
dec
lock
shlb
dec
xchg
adc
cwtl
in
jbe
jecxz
or
aaa
jb
dec
loopne
adc
stos
subb
or
xchg
mov
test
leave
in
bnd
jl
sbb
leave
nop
mov
and
les
jp
pop
repz
call
fstpt
mov
pop
fidivs
loopne,pn
xchg
mov
mov
cld
inc
adc
adc
mov
mov
xor
inc
movsb
bound
or
sub
inc
pop
popf
or
sub
pop
test
cmc
and
jmp
add
pop
fcoms
cmc
pop
icebp
ss
inc
push
mov
test
inc
dec
xchg
daa
sub
test
mov
out
mov
or
lock
inc
movsl
stos
xchg
add
pop
lret
iret
pop
mov
outsb
cmp
pop
mov
xor
js
popa
mov
je
fwait
adc
sub
mov
loop
sub
dec
insb
dec
dec
movsb
dec
sti
xlat
js
pop
sti
xchg
insl
lods
inc
insb
js
inc
hlt
xor
dec
pop
cmp
fsubl
xchg
inc
xchg
dec
mov
movsl
stos
in
aas
out
shrb
jae
cld
cmpsb
sti
mov
or
imul
sbb
mov
lods
ret
sbb
sub
pop
dec
xor
push
push
push
outsb
cmp
cmp
test
lar
lahf
popf
call
cmp
jg
shll
js
xor
jl
rep
xchg
das
jae
xchg
icebp
and
lods
flds
xchg
push
loope
jmp
sub
fcomp
pop
div
xchg
repnz
outsl
add
jge
dec
imull
add
dec
loope
dec
xchg
push
shll
call
cmpsl
lods
movsl
aad
pop
cmpsb
loop
repnz
add
fistl
sub
lods
fidivl
jp
insb
lahf
lods
xor
sub
sbbl
sbb
adc
mov
jecxz
jle
push
xchg
mov
adc
sbb
loope
jns
xchg
cmp
lods
arpl
enter
mov
sub
push
cmpsb
xchg
add
mov
subb
push
mov
xorb
xor
repz
or
cmp
add
loop
xchg
dec
subl
inc
mov
dec
xchg
jp
push
mov
xchg
sub
cmp
push
xor
cmc
and
xchg
aas
rcll
xor
cmp
xchg
adc
pop
pop
push
mov
adc
push
shrl
outsb
and
scas
rol
xchg
push
sti
xchg
aas
and
cmpsb
mov
xchg
cli
fcomp
enter
and
int3
into
lret
mov
lret
inc
imul
jmp
iret
mov
popf
popf
push
pop
and
or
cmp
jae
aad
sbb
shll
in
jg
fbstp
cmp
mov
pop
sub
push
mov
lods
and
jp
inc
and
jno
mov
ja
jecxz
inc
push
out
jmp
xor
xchg
gs
pop
add
mov
aam
xchg
mov
add
imul
mov
inc
mov
or
divl
movsb
dec
outsl
loop
pop
loopne
cmp
xor
add
jne
fcoms
mov
mov
inc
inc
or
subb
cmc
shr
int3
adc
push
pop
and
push
outsl
int3
pop
inc
mov
repnz
adc
test
lahf
or
xor
lret
sub
adc
sub
xor
or
xchg
dec
outsb
imul
test
sub
jbe
neg
and
syscall
adc
and
rclb
dec
ja
dec
adc
mov
loope
insb
iret
cld
push
rol
nop
lods
mov
mov
shll
fcompl
mov
mov
mov
jmp
test
xor
jnp
fcmovnu
les
mov
out
xchg
adc
xor
jo
fs
popa
cmpsl
dec
and
or
push
aas
fdivs
cmp
adc
aad
cmc
pop
mov
push
ljmp
mov
pop
repz
in
mov
lret
add
sbb
pop
dec
jp
xchg
ss
mov
leave
sub
sti
cmp
js
daa
sub
dec
sbb
std
jnp
and
add
xorb
aaa
push
loop
jecxz
roll
and
mov
mov
sbb
scas
lds
and
ret
movl
mov
cld
push
fstpl
sub
sbb
dec
pop
das
jp
push
push
add
push
lret
insl
in
dec
adc
jp
rclb
push
es
push
inc
mov
outsb
ret
in
jae
adc
cmp
add
mov
into
push
cmp
movsb
cmp
xchg
mov
stc
sahf
stos
or
xor
mulb
pusha
daa
mov
adc
push
xor
bound
jmp
int
push
ds
xchg
inc
add
out
dec
ss
pop
daa
sahf
cld
ljmp
xchg
add
push
loop
push
mov
test
push
int
push
pop
stc
add
mov
adc
sub
mov
icebp
push
mov
mov
loopne
mov
leave
incl
xor
outsl
fs
fadd
xchg
fildl
add
jae
add
hlt
xlat
scas
pop
inc
dec
in
sub
jo
lcall
jg
inc
or
cmp
hlt
add
shll
cltd
inc
clc
iret
jne
cmp
ret
and
js
pop
pop
cwtl
nop
fcmovnb
aas
fmull
xor
lret
scas
xchg
jns
scas
pcmpgtb
xchg
lods
dec
lcall
xchg
pushf
inc
pop
inc
ret
jp
pop
and
mov
gs
das
pop
add
lret
rcl
push
mov
cmp
dec
sbb
gs
sub
add
xor
stc
inc
push
xor
in
in
sahf
add
mov
fistps
or
out
push
scas
ja
sub
pop
adc
jo
inc
jbe
insb
sub
xor
cmp
out
adc
int
pop
inc
lds
daa
je
and
sbb
mov
in
jg
lea
dec
rorl
sbb
inc
push
aad
wbinvd
lods
sarb
sub
stos
xor
add
mov
xchg
or
les
insl
hlt
and
and
out
jnp
sub
addr16
cmc
push
sub
mov
inc
in
push
lods
sub
rolb
inc
popf
lret
int3
jae
sub
aas
and
inc
mov
sbb
inc
pop
mov
push
fnsave
cwtl
mov
xchg
stos
out
mov
cltd
bound
mov
ja
insl
lahf
mov
adcb
inc
test
jle
push
jp
out
lret
mov
gs
pop
pop
mov
jnp
dec
mov
xor
mov
mov
int3
mov
dec
adc
xor
enter
stos
popf
sub
les
test
push
and
movsl
mov
lods
mov
mov
add
pop
and
popl
or
aas
adc
loop
mov
or
leave
adc
or
dec
jne
in
push
add
sbb
mov
addb
lret
insb
mov
dec
aad
adc
pusha
pushf
cli
ds
fisttps
jns
xchg
into
repnz
in
fnsave
movb
or
clc
pop
pushf
inc
pusha
shll
pop
inc
div
inc
in
push
ficomps
les
fimull
pop
test
xor
fwait
gs
xrelease
mov
sub
and
jne
inc
sub
jl
and
out
in
lahf
not
popa
push
xchg
ja
dec
dec
scas
add
mov
xchg
mov
mov
dec
jge
outsb
mov
rcll
adc
xor
push
je
xor
mov
inc
jl
adc
insl
rorb
cmpsl
arpl
mov
sbb
push
sub
mov
inc
je
out
pop
mov
mov
jnp
scas
or
scas
sbb
cmp
push
mov
xor
aaa
fstpl
sub
test
pop
mov
mov
mov
popa
mov
int
gs
jge
jl
adc
shr
icebp
xchg
jl
mov
add
xor
add
fnstenv
sti
loopne
mov
out
scas
or
add
paddsb
jo
mov
incb
or
dec
aam
orb
mov
repnz
fildll
imul
mov
and
sub
iret
out
into
xchg
outsl
int3
add
fdivs
nop
daa
push
lret
inc
lcall
pop
mov
sub
add
dec
into
adc
imul
movl
pop
repz
gs
fs
push
movsb
jle
sahf
stos
push
cmp
data16
inc
dec
or
jmp
cmp
mov
fdiv
subl
sbb
sahf
dec
ficoml
fistl
cmp
sbb
jne
mov
jl
xor
data16
xor
ja
jge
xchg
xchg
fcomps
dec
roll
push
jecxz
mov
jbe
je
lods
adcl
sub
push
je
xlat
into
inc
and
loop
push
adc
jg
outsl
aas
fistps
fisubl
jle
xor
test
mov
pop
ss
arpl
mov
xlat
pop
mov
cmpsb
pop
mov
jae
xor
push
mov
sbb
cltd
bnd
stos
mov
mov
xchg
mov
filds
push
movsl
movsb
dec
jb
pop
pop
popf
and
ljmp
lock
ljmp
cmp
xor
cmp
push
sar
cwtl
mov
inc
movaps
sub
jae
test
xor
lock
loope
rcrb
pop
jmp
mov
fnstsw
addb
inc
pusha
ds
push
insb
xchg
xor
cpuid
nop
inc
push
arpl
test
into
push
adc
lea
jb
xor
jnp
or
iret
and
repnz
add
xchg
shrb
mov
orb
mov
call
lods
addr16
inc
outsl
pop
repnz
mov
in
pop
sbb
pop
or
rorb
hlt
jbe
out
fs
cli
cmpl
xor
xor
cld
cmp
push
add
pop
xchg
adc
sbbl
cmpb
and
test
in
les
cmp
mov
sahf
or
xor
dec
ret
or
sub
dec
jle
addr16
imul
leave
popf
pop
into
sbb
int
shr
icebp
add
sub
adc
push
call
nop
sub
aam
push
shl
push
cwtl
inc
sub
dec
scas
imul
jl
es
xchg
cmpsl
leave
or
sub
pop
and
pop
das
int3
jne
insl
xor
or
push
out
ss
jg
mov
sub
jmp
mov
outsl
add
insl
jg
jbe
rcl
pop
or
or
aad
inc
cmovne
and
and
loope
and
push
mov
outsb
mov
dec
jge
pop
and
mov
add
jae
arpl
mov
out
clc
sub
push
xor
jne
sub
mul
pop
xor
and
lds
ds
jae
sahf
mov
clc
push
xchg
mov
xor
std
insl
aas
mov
loopne
jl,pn
inc
popf
xchg
test
mov
int3
pop
mov
in
shrl
xor
mov
mov
out
outsw
sub
test
push
lods
mov
push
lock
ds
test
inc
jle
mov
aam
sysexit
ja
ficompl
lds
jo
add
push
sbb
ffreep
xor
dec
jbe
push
mov
rorb
mov
sub
mov
or
mov
xor
jo
out
ret
mov
xor
xchg
gs
in
pop
inc
roll
mov
adc
nop
push
and
push
test
into
xchg
or
in
fdivr
scas
iret
lret
xlat
lret
dec
movsb
sub
and
out
movsb
lods
repnz
sbb
push
mov
sub
xchg
mov
into
push
xchg
mov
dec
cltd
test
add
fmuls
inc
push
sbb
pop
ret
lods
out
hlt
scas
jecxz
cltd
adc
pop
rcll
test
mov
rorb
aas
adc
sarb
or
daa
in
mov
or
jg
or
sahf
mov
int3
adcb
in
repnz
push
ss
pusha
xchg
sti
jo
sahf
push
scas
or
in
out
lcall
fcompl
sbb
mov
je
xlat
pop
cmpsb
push
leave
push
call
je
pop
dec
adc
int3
std
out
push
mov
jmp
and
and
mov
or
push
imul
push
fidivl
jmp
scas
loopne
ret
popa
push
sbb
loop
stos
add
fimuls
ja
neg
loopne
push
push
push
add
mov
sbb
sub
mov
aaa
sbb
xchg
fmulp
xor
out
mov
pusha
inc
push
ret
or
loopne
or
cli
or
xchg
lret
ret
rcrb
loopne
or
mov
out
mov
in
dec
xchg
jecxz
sub
mov
dec
mov
aas
pop
xlat
int
push
xor
xchg
mov
mov
fsubl
add
mov
cmp
mov
jl,pn
pop
ret
inc
push
add
mov
mov
pop
xorb
xor
inc
insl
xorl
sub
daa
mov
jge
test
cmp
insb
fldt
lock
repz
cmpl
mov
jae
imul
pop
inc
push
push
testl
sub
inc
adc
xchg
mov
movsl
es
clc
lods
call
xchg
mov
sti
insl
sub
ja
sbb
inc
jg,pn
movsb
push
xor
insl
sti
inc
push
push
imul
xchg
dec
sub
xchg
mov
mov
rolb
and
cmpsl
lods
xlat
mov
pop
mov
outsb
icebp
aad
or
xchg
dec
pop
ret
adc
lret
jecxz
ljmp
mov
xor
lea
out
divl
testl
fldl
jns
inc
mov
lret
fsubp
imul
cmp
mov
dec
pop
mov
adc
mov
lods
xchg
sti
jne
aad
pushf
pop
cmpsb
xchg
loopne
mov
fnstcw
jbe
xor
out
es
push
aam
lret
popa
mov
sbb
dec
xor
and
sub
lahf
jae
xchg
xchg
inc
les
jo
stos
sar
mov
push
add
fnstenv
data16
in
jae
xchg
js
cmp
ret
sti
push
sbb
mov
cmpb
arpl
dec
and
lock
addr16
sbb
arpl
pop
inc
jno
and
mov
out
dec
popl
call
sti
test
mov
dec
mov
pop
push
mov
divb
jmp
sbb
movsl
mov
arpl
sbb
jecxz
imul
and
xchg
push
daa
sbbb
jae
inc
and
jns
push
mov
adcb
mov
in
push
xor
mov
dec
enter
sbb
mov
sub
pop
icebp
cld
std
mov
mov
cmp
fs
mov
int3
cmp
fdivp
ret
aas
pop
sub
cmpsb
push
out
inc
or
test
aas
cmp
and
out
int
lods
xlat
ss
call
out
or
loop
pop
push
sbbb
bound
insb
rclb
hlt
or
push
xchg
add
pop
sbb
push
repz
std
movb
sbb
pop
cli
imul
lcall
pop
pop
fcomps
rorb
popf
lret
mov
pushf
bound
pop
adc
rorl
jl
mov
loop
data16
aam
mov
fisubrl
push
push
and
and
sub
sbb
pop
push
xchg
icebp
dec
rcr
repnz
repz
mov
mov
sbb
pop
xchg
and
cmp
pop
cmpsl
jp
insb
jge
movsl
bound
movzbl
ret
jo
fistps
and
adc
adcb
dec
mov
sbb
push
fs
fsubrs
int3
lds
jnp
fildl
sahf
push
mov
cli
imulb
push
in
ljmp
xchg
rcrb
mov
das
push
adc
pop
cltd
enter
mov
pop
push
cmpsb
mov
xchg
add
arpl
fadd
dec
pop
mov
pop
idiv
stos
sub
cmp
add
xor
ss
pop
ret
jno
test
jnp
aas
adc
cmp
scas
in
mov
add
jne
cmp
inc
and
mov
or
cmovg
cmpsl
mov
mov
push
sub
imul
dec
cmp
movb
or
adc
jbe
lret
jb
xor
stc
xor
sbb
and
repnz
fstpl
movsb
mov
cmp
xchg
dec
clc
adc
arpl
shll
pop
leave
jge
repz
ror
sbb
cmp
or
adc
loope
rorb
cmp
jbe
lock
add
sbb
mov
stos
fmuls
push
stc
ret
inc
xor
add
jae
mov
sub
test
ret
cwtl
xchg
fbstp
out
out
repnz
adcb
rclb
sti
cmp
pop
lods
add
sti
push
test
jno
cmp
xchg
pop
pop
lret
mov
adc
ljmp
cli
and
shrl
pushf
daa
nop
push
push
nop
mov
mov
in
xlat
scas
pop
mov
pop
outsl
mov
sbb
sbb
jl
das
fdivs
mov
rcrl
popf
dec
iret
outsl
sub
sbb
clc
ljmp
mov
aaa
nop
cli
xor
aad
and
lock
insb
push
dec
pop
pop
xchg
sub
andl
dec
shr
add
scas
pop
add
mov
pushf
repnz
push
mov
cmp
in
xchg
mov
add
daa
andb
adc
dec
xorl
in
pop
mov
mov
iret
shl
in
xchg
push
cltd
or
xchg
mov
mov
lcall
loope
je
add
sbb
xchg
ret
ljmp
arpl
fwait
adc
cmpsl
dec
gs
pavgb
push
xchg
insl
pop
ja
mov
imul
lea
pop
out
and
aas
stos
xlat
inc
inc
ljmp
xchg
mov
xor
push
lock
mov
jmp
daa
inc
mov
repnz
inc
xor
imul
test
mov
cmp
rcl
mov
sbb
or
mov
mov
out
fdivrs
xor
fcomi
dec
xchg
jmp
inc
or
imul
mov
insl
mov
insb
arpl
xor
movsl
leave
ja
sarl
aad
dec
or
mov
xchg
jb
out
loopne
movsl
pushf
push
into
and
pop
push
push
xchg
add
fisubs
je
jbe
sbb
pusha
inc
pop
ds
mov
sbb
adcb
ds
scas
aas
sbbb
jge
insb
scas
jb
icebp
xchg
lea
sub
add
hlt
pop
sbb
ds
inc
ss
std
jmp
mov
imul
cmp
fnsave
adc
nop
pop
mov
cmp
pop
out
cmp
jne
fldl
jge
cmp
out
lahf
cmpsl
and
fbld
pushf
mov
cwtl
xchg
jns
mov
xchg
in
leave
repz
xchg
jbe
lea
lea
mov
jecxz
gs
inc
sahf
mov
pop
xchg
sahf
xchg
cs
imul
xor
ljmp
pop
cmpsl
sub
shlb
pop
sub
jo
add
cmp
sbb
aas
mov
fmul
jge
sub
addl
mov
icebp
add
jl
fxch
push
push
and
mov
cmc
test
sarb
xor
inc
pop
push
out
fidivs
sbb
jl
sub
dec
xor
es
shl
popf
mov
mov
inc
jle
mov
sub
adc
jmp
jge
add
mov
in
xor
pop
aas
int3
hlt
loop
sub
jmp
sar
cmp
jmp
inc
jbe
hlt
xor
es
mov
jns
scas
fisttpll
dec
mov
enter
mov
loope
jo
mov
rcll
sub
fcompp
adc
sub
cli
jl
mov
or
sarb
mov
push
fisubrs
in
stos
rolb
sub
icebp
loope
push
inc
xor
dec
dec
insl
mov
xor
adc
popa
adc
push
mov
xor
rcrl
into
addl
jp
lods
repnz
or
ltr
ljmp
imul
mov
jmp
mov
loop
insb
jp
sti
insb
sbb
push
pop
sbb
cmp
scas
push
push
fcmovnu
incb
mov
xchg
mov
stos
adc
pusha
mov
lahf
jno
xchg
sbb
add
xor
add
insb
jle
popa
pushf
mov
inc
jmp
push
pop
scas
mov
jp
add
push
inc
in
std
pop
mov
mov
movsb
lea
ss
cmp
mov
cmp
xor
mov
std
negb
outsl
sub
ja
mov
daa
push
push
pop
sbb
pop
and
sub
push
pop
pop
sub
cmp
cmp
loop
cmp
int3
aad
test
cs
pusha
loop
sbb
pop
add
push
movsl
inc
cmp
inc
daa
xchg
cmp
mov
mov
and
pop
clc
lods
push
mov
mov
aam
jmp
fidivl
adc
test
cmp
les
js
into
pop
ret
subl
ret
je
es
test
jno
cmp
mov
aad
mov
and
jecxz
and
and
sbb
jnp
jae
jno
cmpsb
lds
ds
test
js
pop
sbb
xlat
add
push
and
dec
mov
pop
lret
pop
adc
xor
push
jb
sbb
push
and
cmp
dec
fsubrs
sti
fwait
and
repz
je
hlt
xchg
aam
inc
jg
xlat
shr
mov
aaa
dec
cltd
adc
unpcklpd
test
adc
mov
mov
daa
lahf
jge
paddb
ljmp
mov
xor
nop
test
or
icebp
add
hlt
mov
lds
xor
mov
jle
jle
fwait
push
imul
rorb
loopne
jb
shlb
dec
xor
imul
mov
push
xor
xor
outsl
clc
es
imul
xchg
add
hlt
out
lods
push
mov
push
or
pop
push
ret
sbbw
iret
leave
mov
cmpsb
movsb
or
push
inc
icebp
mov
pop
std
pop
and
loopne
int
nop
imul
add
mov
sbb
push
sti
and
sbbl
imul
cmpsb
sub
and
jle
loopew
sti
dec
push
cs
popa
test
xchg
pop
dec
jp
dec
loopne
jge
push
gs
inc
inc
xchg
outsl
inc
fsubl
add
inc
add
test
mov
adc
xchg
bound
shll
pop
jns
sub
jp
dec
xor
add
lcall
loope
mov
test
xor
pop
daa
lea
iret
cmp
sbb
popa
add
push
in
or
pop
inc
mov
pop
push
jmp
pusha
sbb
xor
inc
cs
int
test
movsb
movsb
mov
push
inc
daa
or
addl
lods
xchg
fisubl
sbb
pop
test
iret
adc
sarb
xchg
cmc
ljmp
inc
jle
or
jl
inc
call
shrb
and
mov
loop
das
dec
dec
cmp
add
jae
ja
add
pop
rcrb
sub
shrb
push
and
xchg
and
sbb
loopne
jecxz
mov
pop
andl
sub
mov
inc
sbb
push
dec
or
mov
pop
sub
mov
in
pusha
das
jnp
cmp
mov
cmp
out
jg
mov
jno
xor
ja
sbb
pop
mov
sub
testl
jae
lock
pusha
or
iret
imul
jmp
repnz
test
mov
xchg
or
mov
out
pop
addr16
lock
add
loopne
jl
mov
insl
adc
cwtl
cltd
sti
sub
jns
iret
out
cmpl
and
roll
mov
imul
gs
ss
mov
xor
insl
pop
adc
jg
sub
nop
add
inc
and
aas
sub
stc
lret
adc
adc
outsb
imul
ljmp
mov
sub
stos
test
dec
push
test
dec
add
mov
sub
leave
xchg
mov
ja
ljmp
add
pushf
push
rcl
shlb
iret
add
fcompl
ss
in
jo
in
mov
jmp
push
cmp
pop
mov
pop
xlat
or
cmp
cwtl
mov
jae
sbb
loope
mov
pop
adc
shlb
xchg
jg
mov
add
adc
repz
and
mov
adc
xchg
dec
lods
inc
add
movsl
push
enter
js
ret
out
or
push
jb
push
xor
bnd
xlat
shlb
inc
mov
push
mov
fwait
mov
into
stc
enter
sbb
lret
repnz
push
mov
inc
out
test
pop
orb
xchg
cmp
push
inc
gs
ret
jnp
repz
mov
lods
push
ret
hlt
pop
push
repz
fistpl
add
clc
ret
jp
xor
iret
pop
and
scas
cld
sbb
rcll
jns
negb
arpl
sub
imul
cld
nop
imul
cmp
lea
adc
int3
das
mov
sbb
dec
test
ljmp
sub
mov
sar
fildl
js
jnp
shrl
add
sub
jmp
popf
imul
xor
jecxz
or
outsl
int
stos
scas
mov
cmp
movsb
imul
rorl
sbb
push
sub
js
pop
adc
lods
aad
std
out
lret
add
or
pop
jle
shl
pop
xchg
adc
and
dec
fucom
jno
cmp
jmp
inc
loope
xor
pop
fwait
lods
loopne
aad
and
xchg
jecxz
popf
fdivrl
int3
lds
jmp
out
push
cwtl
inc
pop
sub
jne
mov
std
fcmovbe
pop
and
mov
dec
js
pop
in
or
mov
inc
arpl
scas
jle
cmp
imul
cltd
rol
jns
les
adc
jns
cltd
pop
fwait
xor
push
xchg
push
mov
hlt
test
fs
dec
sbb
repnz
jge
icebp
lea
arpl
sarb
shl
pop
jbe
fdivrs
xchg
dec
sbb
sub
cmp
and
add
sbb
fcmovnb
mov
fstl
and
inc
cmpsb
jae
cmpsl
pop
xchg
push
ljmp
out
ss
or
sbb
sub
xor
cmp
xchg
daa
fiaddl
pop
adc
out
jle
rcr
cmp
cmp
and
jo
push
fnstsw
pushf
sahf
mov
push
inc
lcall
jp
rol
outsb
cmp
fdivrl
or
mov
xor
xor
inc
arpl
cmp
mov
xchg
dec
mov
lds
rcrl
push
push
lods
cmp
aaa
xlat
sbb
icebp
fsubl
das
xchg
push
adc
or
scas
daa
imul
fs
jne
cmp
sub
pop
jl
inc
pop
and
mov
lods
nop
sbb
xchg
addr16
stc
xchg
repnz
dec
or
mov
xchg
imul
cltd
cmpsb
test
sub
std
jne
dec
push
std
mov
fbld
pop
negl
inc
leave
insl
jg
imul
ret
popa
and
cmp
push
or
xor
stc
bound
jge
nop
repz
scas
fidivrs
sbb
pop
dec
scas
jne
pop
idivb
xor
inc
cltd
push
lods
xor
sub
or
pop
mov
xor
sbb
loop
xor
je
mov
mov
lods
jl
das
out
mov
push
icebp
pop
and
cmp
adc
push
lock
cmp
mov
lea
cmpsl
leave
daa
cmc
int
sarl
xchg
jle,pt
lcall
inc
add
mov
sbb
cmp
pop
or
jns
sub
push
ja
lods
bound
dec
stos
sub
push
loop
popa
lock
xchg
xchg
mov
xchg
sub
cmpsl
movsl
adc
out
testl
add
xlat
or
sbb
or
xor
mov
xor
xchg
cmp
mov
mov
adc
sub
jno
xchg
pop
ljmp
pushf
cmp
dec
in
fsubr
lea
rcl
sbb
cmp
shrl
cmpsl
push
lcall
fcompl
imul
test
in
cmp
insl
stos
sbbl
test
rolb
mov
push
aad
xor
jne
lds
mov
lods
inc
xchg
test
push
mov
addr16
loop
loop
push
shrl
iret
nop
adc
lods
scas
inc
add
test
dec
xchg
mov
push
rorl
push
mov
pusha
cmp
stos
sarl
aam
mov
out
jp
pop
and
aaa
paddd
mov
mov
imul
mov
cmp
in
mov
popa
test
dec
rol
xlat
push
cmc
xchg
lahf
pop
adc
jg
push
popa
and
flds
addr16
jno
pop
cmpsb
sar
cmpsb
dec
xlat
out
lock
repz
and
lds
rcl
jnp
pop
mov
jb
sub
arpl
jmp
jge
push
mov
mov
jle
int3
jns
push
pushf
and
fstpt
loop
push
inc
pop
cwtl
int
hlt
lcall
scas
inc
inc
sbb
icebp
out
ja
jle
xor
pop
mov
inc
or
inc
xor
jecxz
cmp
pop
icebp
pop
sbb
xorl
arpl
jmp
xor
adc
icebp
xor
and
jp
add
inc
lods
xchg
cs
xchg
sbb
insb
cmp
pop
xchg
movsb
xor
xorl
and
sti
xchg
mov
fldenv
jmp
pop
sub
adc
xor
lock
divl
out
mov
test
or
pop
pop
sub
andl
inc
rcrl
sbb
mov
imul
call
lds
ja
sbb
cld
fbstp
shrb
mov
loop
adc
cmp
xchg
mov
notb
jle
push
aaa
sahf
cmp
out
bound
aam
scas
fistps
fwait
scas
mov
or
pop
movsl
jae
or
sub
arpl
or
shrb
insl
push
mov
pusha
daa
stos
out
mov
aas
inc
fsubrl
aas
push
push
clc
fstpl
cmc
aam
cli
sub
cmp
sarl
fwait
add
add
mov
xchg
and
adc
xchg
cwtl
daa
out
orl
xlat
sbb
cmp
adc
fs
adc
test
jg
jl
int3
and
sub
xchg
adc
mov
sbb
repnz
imul
adcb
xchg
push
mov
jecxz
popf
iret
and
push
cmp
pop
mov
cmpsl
mov
daa
cmpb
out
pop
fisubl
hlt
pop
xchg
pop
adc
in
ret
cmc
int3
push
xor
scas
aad
or
pop
stos
loop
mov
jmp
lcall
push
popf
mov
push
call
pop
stos
cmp
mov
test
jbe
gs
shrb
lret
mov
mov
mov
loop
loopne
subb
out
out
lahf
test
jnp
add
jns
outsl
mov
ficompl
rcl
test
xlat
sub
add
aas
ss
daa
mov
out
or
mov
sub
xor
test
pop
xlat
sbb
ret
lds
jmp
cmpsb
insb
jmp
jb
pushf
mov
and
hlt
aaa
test
mov
add
arpl
out
sbb
add
das
push
mov
adcb
sub
push
push
mov
sbb
xchg
pop
shll
mov
dec
pop
push
movl
mov
incb
sub
test
pushf
lea
loopne
push
ror
adc
adc
cmp
jge
insl
and
js
repz
adc
adc
pop
xchg
lock
mov
cmpsl
dec
insb
int
out
push
mov
inc
mov
test
inc
leave
mov
mov
daa
daa
push
push
mov
mov
or
dec
scas
aaa
jo
xchg
cmp
xor
ret
imul
pop
mov
cmp
subl
xchg
int3
dec
clc
mov
stc
scas
insl
push
int
sarb
pop
cmp
mov
inc
mov
cmp
into
mov
rcrl
addr16
sub
call
jno
lea
sbb
aas
mov
dec
or
popa
stos
mov
mov
nop
sub
fsubrs
fsubr
shll
mov
xchg
pop
mov
sub
in
mov
mov
cli
xchg
movsl
pop
stos
inc
pop
sahf
push
jb
sub
ficoms
dec
inc
push
daa
add
lea
mov
aam
sub
ret
dec
or
sbb
cmpsl
popf
popf
dec
mov
and
int
pop
mov
aam
popa
xchg
imul
fbld
push
fsubrp
test
sub
and
add
bound
push
pop
shr
int
adc
mov
aad
in
mov
movsb
aaa
scas
mulb
mov
mov
lea
lock
jno
nop
cmp
xlat
inc
push
loop
stos
adc
xchg
sub
loopne
mov
cld
jp
push
mov
push
or
add
jbe
push
inc
or
insb
movsl
cli
jmp
pop
in
sbb
std
into
xlat
cmp
inc
xor
loope
gs
mov
xchg
mov
out
daa
mov
leave
xor
push
dec
jns
test
mov
push
aad
inc
popa
outsb
nop
cmp
sahf
mov
add
sub
scas
and
enter
jbe
fiaddl
cltd
push
jp
xor
in
test
or
mov
repz
xor
and
xchg
or
xchg
xchg
fisttpl
icebp
out
mov
xor
adc
mov
pop
popl
out
scas
stos
and
out
pop
or
movsb
jb,pn
and
cmp
and
pop
lret
es
into
and
xor
mov
incl
jns
adc
sbb
enter
cmp
inc
dec
xchg
imul
popa
mov
pop
xor
fadd
xlat
inc
push
je
jno
inc
jb
and
push
dec
dec
movsb
inc
movsl
inc
xor
and
jnp
cld
repnz
rcrl
dec
push
repnz
loope
ss
mov
push
xor
dec
cld
cmp
jne
scas
rolb
pop
fadd
dec
shll
insl
movsl
pop
mov
dec
cmpsb
mulb
mov
cmp
add
ljmp
cmp
popa
lds
ds
push
push
decb
mov
out
fmull
xchg
and
xor
xchg
add
cmp
jmp
sbb
add
mov
iret
mov
cmp
int3
push
jae
cmc
inc
cmp
sub
iret
jge
xchg
dec
jns
stos
pop
loope
lods
movsb
mov
dec
loopne
mov
mov
inc
ret
mov
push
cmc
rcll
and
js
mov
data16
int3
fimull
shrb
mov
or
ret
or
jmp
jmp
cmp
and
cmpsb
mov
or
or
fs
test
fiaddl
jge
push
jb
and
rclb
dec
cmpl
cmpsl
loope
xor
mov
adc
or
xchg
xchg
add
clc
call
ja
clc
jle
push
gs
popa
jl
cld
int3
loope
fcomps
ljmp
popf
icebp
daa
addr16
pop
ss
scas
mov
leave
fisubl
lds
movsb
repz
les
inc
xchg
repz
mov
sub
xor
cld
or
stc
xor
xchg
push
pop
mov
cwtl
mov
mov
pop
in
pop
xor
sbb
stos
loopne
mov
inc
mov
mov
sbb
pop
mov
rorb
xor
aaa
test
js
adc
inc
popf
leave
int3
fiadds
inc
mov
dec
xchg
cltd
inc
inc
adcb
lret
js
mov
push
sti
dec
int3
mov
std
pop
cmp
movsb
mov
push
cmc
movsb
push
les
mov
inc
lret
push
mov
xchg
mov
and
sub
cmp
scas
or
scas
les
ds
imul
jmp
xorl
loope
xchg
sub
sbb
push
cmc
push
bound
cmp
pop
sbb
movsl
arpl
jle
mov
xor
fwait
push
repz
aaa
push
hlt
sub
pop
jae
lahf
pop
stos
xor
mov
lods
stos
arpl
mov
sbbl
mov
sbb
test
xor
popa
adc
push
sbb
je
or
mov
stc
and
push
out
pop
adc
insb
mov
or
int3
cmp
mov
dec
jbe
adc
jp
sub
jo
sub
or
push
cmp
and
fsubl
dec
jmp
cmpsb
test
loop
cltd
pop
arpl
int3
lods
repz
stos
icebp
movsl
push
jb
inc
rcrb
push
aaa
lret
or
adc
mov
mov
and
push
mov
test
es
jae
jecxz
insl
cld
test
jmp
out
lods
sub
movsl
adc
push
std
icebp
outsb
cld
test
mov
mov
sbb
icebp
or
adc
xchg
test
enter
outsb
inc
movsl
ficomps
xor
and
mov
imul
popa
xchg
std
popf
xchg
cmp
jmp
mov
cmp
in
addr16
jle
ficomps
cmp
push
lds
pop
das
adc
arpl
repz
aas
dec
inc
mov
mull
mov
scas
sti
jge
in
ljmp
repnz
or
sbb
push
xchg
ds
orl
dec
pop
xchg
sub
pushf
out
jae
movsb
nop
pop
jl
or
dec
dec
out
lods
cli
add
and
out
sbb
mov
loope
das
mov
xchg
setg
dec
dec
into
cwtl
out
xor
pop
adc
pop
push
test
adc
ja
inc
je
aaa
cltd
and
jg
mov
and
and
inc
push
jecxz
iret
mov
fiaddl
inc
dec
xchg
imulb
push
xor
cli
and
psubw
add
dec
lret
aaa
out
test
push
add
jecxz,pt
or
jecxz
stc
adc
cmp
mov
cli
or
push
js
les
loopne
fistl
repz
out
mov
cwtl
testl
push
inc
dec
and
pop
fwait
inc
mov
push
mov
inc
icebp
pop
flds
xchg
out
mov
mov
push
aam
add
xchg
ficomps
lahf
jbe
lods
xor
or
test
mov
insb
xchg
add
pop
int
mov
add
shll
dec
out
xchg
xchg
cmp
mov
cmpsl
mov
xchg
and
or
rcr
inc
jg
test
iret
push
lret
sti
sub
adc
pop
pop
enter
cmp
sbbb
stc
aam
std
fsub
push
inc
sbb
xchg
mov
ss
out
jns
mov
mov
repnz
mov
sub
lret
push
enter
xchg
test
orl
push
adc
ss
xchg
test
pop
movl
aas
inc
add
pop
lods
xchg
dec
dec
sbb
dec
mov
dec
insl
mov
jg
mov
mov
cmp
stos
movsl
xchg
fwait
mov
adc
daa
out
test
and
dec
js
mov
loopne
xchg
cmp
or
and
or
stos
inc
dec
mov
icebp
ja
shll
xor
repnz
scas
mov
xor
stc
fsub
sub
dec
shll
cwtl
loop
inc
xchg
jp
mov
cwtl
sub
adc
sub
cmp
hlt
in
in
push
or
dec
lcall
inc
ffree
nop
pop
mov
cwtl
cmp
int
mov
fldenv
clc
cltd
test
rcrl
inc
dec
adc
add
sub
mov
or
lds
mov
push
jbe
mov
loop
outsb
sbbl
cmp
int
sahf
dec
std
xor
adc
mov
cmp
mov
xor
push
arpl
jno
fimuls
ret
xchg
fwait
and
sbb
mov
std
pop
jge
cwtd
push
in
push
ds
in
add
push
xchg
adc
test
mov
pusha
lret
cmp
push
nop
imul
jno
and
mov
cmp
jmp
popf
jnp
push
and
dec
push
aam
mov
mov
aas
xor
mov
jmp
push
out
adc
in
push
loope
and
xlat
fwait
sbbb
test
adc
rolb
ljmp
stos
or
mov
sub
sbb
gs
xlat
cmp
sti
and
push
sub
adc
add
loop
cmp
dec
addb
adc
jmp
inc
dec
jb
mov
and
je
inc
adc
pop
dec
out
and
jo
fpatan
jno
jbe
or
push
cmp
adc
outsb
push
adc
sti
cmp
bound
je
mov
dec
data16
push
fisttpll
lret
lods
je
mov
movsl
add
sbb
adc
pusha
movsl
popa
dec
call
push
xchg
stc
mov
mov
int
idivl
adc
scas
add
pop
pop
adc
gs
adc
in
mov
nop
pop
jl
out
rcll
clc
imul
dec
sarb
cmp
dec
xor
scas
shrl
pop
cmp
sbb
outsl
pop
and
jle
mov
cmp
sbb
xchg
push
push
push
inc
cld
mov
adc
int
insl
lret
inc
lahf
push
shl
sbb
push
addr16
push
pop
push
jb
and
push
jnp
cmpsb
cli
enter
push
lret
jecxz
outsb
aam
orb
xchg
sbb
insl
jl
out
hlt
popa
cmp
and
stos
iret
int
push
aad
pop
jg
lock
std
adc
push
scas
push
ljmp
push
sbb
mov
cmc
cmp
lret
push
pop
das
xchg
push
mov
out
repnz
lock
insb
rcll
jecxz
std
adc
add
scas
mov
enter
jo
sbb
sahf
cmpl
rorl
sbb
push
xor
cmp
test
mov
add
clc
dec
cwtl
arpl
xor
lds
imul
in
dec
int
popa
sbb
pusha
adc
or
xor
pop
push
jno
mov
icebp
sub
adcb
dec
int
sbb
call
scas
cmp
aad
sbb
xor
inc
mov
add
loope
dec
mov
loope
nop
test
iret
fbstp
mov
pop
aam
lods
ja
imul
or
xor
pop
mov
dec
push
rcrl
loopne
mov
mov
rcll
int3
enter
mov
xchg
mov
add
mov
lds
aam
movsb
or
es
mov
xchg
xor
pop
pop
mov
push
push
fwait
xchg
cmpsl
dec
mov
imul
daa
mov
push
iret
cmp
sub
ret
incl
xchg
ficoms
xchg
aaa
mov
push
and
jl
jnp
pop
lock
sub
mov
dec
jno
pop
xor
bound
mov
add
pop
ret
mov
mov
sarb
push
xchg
outsb
and
jae
ds
mov
stc
mov
fistpll
dec
or
add
repz
or
push
fdivrs
or
leave
fnclex
push
inc
sub
sahf
cmpsl
movsb
jo
pop
pop
rcrl
pop
out
inc
dec
jmp
in
cmc
lahf
lret
xor
or
xchg
pop
repz
cwtl
fnstsw
mov
fistpl
mov
sbb
cld
adc
mov
cmp
sbb
lods
xchg
push
ds
xchg
jecxz
pop
fidivl
fwait
cmp
xchg
xlat
dec
push
inc
ds
mov
fstpl
jecxz
inc
clc
cmp
aam
into
lods
jne
scas
inc
and
xchg
mov
cmp
xor
inc
test
or
push
push
arpl
sub
or
sub
outsl
add
xor
testb
sub
fstl
cmc
in
stos
pop
cmc
jne
loop
setb
pushf
enter
cmp
cmpb
or
ret
xor
xchg
pop
sbb
in
xor
cltd
pop
fstps
ljmp
aaa
fnstenv
mov
wrmsr
add
js
inc
fimull
mov
cmp
out
inc
cmc
fwait
xchg
in
jge
lea
jno
pop
pop
jmp
test
arpl
dec
xchg
push
hlt
dec
fcmovbe
rorb
mov
mov
xor
into
jmp
in
sbb
jecxz
push
inc
mov
pushl
add
out
mov
cmp
jmp
rclb
adc
adc
in
sub
mov
cmc
or
add
shlb
scas
cmp
fidivs
test
or
xchg
in
inc
dec
dec
pop
popf
sub
lret
lahf
cld
add
stc
jo
rep
push
imul
jge
icebp
andl
in
inc
testb
rol
cmp
popa
shll
jmp
lds
cld
inc
sbb
lods
das
pop
aad
sbb
xchg
fmuls
aas
mov
xor
nop
push
js
dec
jmp
popf
call
mov
fildl
pushf
or
push
mov
sbb
cltd
cmp
jae
push
js
cmp
push
or
xchg
inc
sahf
add
or
mov
loop
inc
ret
es
inc
es
es
pop
adc
or
popa
xchg
push
or
fs
xchg
ja
shlb
jb
loop
bsr
push
fs
mov
xlat
inc
out
cmp
mov
mov
test
adc
ret
cwtl
add
mov
xor
cmp
add
mov
sub
and
outsb
in
out
addb
dec
mov
adc
aaa
dec
xor
aaa
sbb
add
sbbl
xor
shl
inc
xor
and
push
adc
jb
jno
js
icebp
or
pop
fs
setg
or
movsl
inc
and
fcoms
add
pop
jmp
dec
xchg
jmp
mov
aad
rcrb
jecxz
cmp
repnz
sub
lock
hlt
testb
stos
in
xor
or
mov
dec
nop
sub
lods
xor
out
scas
mov
jg
jne
out
in
xor
push
les
pop
add
xchg
jno
xor
lea
adc
imul
fistpl
sahf
leave
enter
mov
repz
sbb
iret
call
and
sub
int3
push
out
addl
and
test
je
jl
bound
jns
sub
xlat
pushf
dec
or
adc
das
or
cwtl
push
jae
xor
dec
sbbl
mov
mov
mov
seto
mov
sub
shrb
cld
shl
push
dec
test
pop
or
mov
sarl
xchg
daa
sbb
mov
stos
lods
iret
decl
mov
mov
pop
push
sub
lds
loop
mov
orps
insl
sub
ljmp
jbe,pn
sbb
xchg
rcrb
stc
aas
add
xchg
bswap
es
insb
pop
cmp
xchg
arpl
daa
xlat
push
addr16
pop
imul
stos
loope
push
subb
hlt
dec
dec
hlt
mov
cmp
xlat
dec
imul
adc
mov
inc
xchg
aad
in
dec
xchg
scas
mov
mov
push
xchg
jge
aam
repnz
adc
fidivrl
or
xchg
inc
jge
or
fcmovb
push
inc
mov
movsb
or
jo
bound
dec
jmp
fwait
dec
mov
out
in
loopne
sub
sahf
jl
cmp
adc
out
movsl
add
hlt
push
fldenv
sub
push
mov
cmp
shll
repnz
and
out
pop
cmp
in
push
or
push
out
pop
in
and
out
adc
mov
ret
cmp
into
jle
adc
mov
roll
or
pop
insb
pop
cmc
push
bound
mov
or
lock
lock
add
je
cmp
divb
or
fwait
xor
push
insl
mov
jb
adc
cmp
push
lret
push
cmp
lcall
mov
fs
stos
dec
mov
repz
cmpsb
jecxz
xchg
fwait
mov
popa
sti
dec
and
xor
pop
test
mov
add
repz
adc
push
icebp
mov
mov
icebp
aad
outsl
movsb
mov
adc
mov
aad
cmc
into
and
fxch
stos
test
or
xor
out
mov
popa
stos
mov
push
add
movsl
inc
scas
aaa
les
mov
jno
mov
and
aam
inc
mov
sub
mov
or
xrelease
mov
lods
mov
loope
xorl
mov
addr16
xor
arpl
and
pop
mov
repnz
hlt
and
or
mov
arpl
mov
xor
jl
xchg
jg
je
dec
cmp
inc
outsb
jo
out
jae
mov
jmp
push
fdivr
cmp
ret
insb
sub
imul
cmpb
lahf
imul
fs
lahf
jne
sbb
lcall
dec
in
mov
int3
imul
fmull
push
mov
mov
lds
cmp
inc
mov
or
inc
mov
push
repz
mov
cmpsb
in
xor
cmp
xchg
jmp
dec
sbb
adc
inc
jg
sbb
adc
sub
mov
cld
in
mov
jp
jp
push
pop
pop
cmp
adc
pop
xlat
aam
pop
fwait
pop
adc
mov
mov
idiv
xor
and
call
lret
cmp
cltd
sub
mov
lds
pop
sbb
js
jns
scas
in
lcall
mov
in
les
stos
insb
insb
cld
sub
fnsave
stc
xchg
jecxz
mov
test
dec
and
sbb
cli
sub
push
push
xchg
int3
nop
add
or
jmp
mov
js
mov
insb
mov
push
mov
jle
jnp
clc
jbe
mov
and
cwtl
ljmp
mov
test
inc
or
fwait
popf
xchg
es
push
xlat
mov
add
cmp
stos
jne
inc
movb
dec
push
clc
cmpsb
int
mov
sbb
lods
ja
hlt
ja
in
mov
mov
inc
int3
mov
push
es
push
fidivrl
test
sub
test
mov
decb
jno
movsl
xor
xor
and
push
fucomp
add
stos
test
and
mov
sub
mov
fstl
int
sub
jmp
test
arpl
ja
insl
mov
or
andl
inc
pop
dec
push
leave
mov
dec
jo
dec
mov
push
ja
and
shlb
inc
enter
and
and
loopne
sub
rcrl
or
sbb
or
jmp
mov
inc
sbb
sbb
dec
inc
mov
mov
push
lcall
scas
ds
popa
sbb
xor
pop
xor
outsl
mov
js
xchg
loopne
push
mov
cld
int
jge
cmp
cmpsb
dec
add
jmp
pop
scas
call
xor
out
push
mov
enter
filds
pop
iret
icebp
pop
rol
jnp
and
les
ljmp
xchg
push
arpl
adc
decb
pop
mov
data16
int
out
fsubrs
insl
adc
pop
sbb
sub
or
mov
hlt
jp
fucom
cmp
jge
lcall
mov
adc
jb
jp
mov
fcmovb
xlat
out
xchg
ljmp
and
jl
push
fsubrl
scas
lds
or
sbb
dec
cld
xchg
add
adc
or
add
xchg
xchg
outsl
mov
inc
imul
aas
ljmp
or
mov
push
dec
dec
xchg
pop
lods
jge
inc
sub
xchg
cmp
push
mov
inc
mov
in
xchg
xor
dec
data16
jmp
push
mulb
fcoms
dec
sbb
fsubrl
push
stos
mov
xchg
jp
or
fcompl
inc
xchg
sti
data16
xchg
xor
dec
mov
pop
xchg
jg
xlat
jl
push
inc
pushf
call
jbe
stos
popa
xchg
cmp
push
shll
pop
fucomip
push
mov
cmp
push
js
mov
insl
daa
sbb
cltd
push
call
sbb
pop
lods
incl
out
cwtl
sbb
test
movsl
push
ljmp
jmp
add
lods
push
lds
sub
mov
inc
out
in
lods
dec
or
mov
clc
in
movsb
ds
adc
imul
cmpsb
lcall
aad
jecxz
mov
jle
and
shlb
aam
sbb
pusha
adc
test
pop
push
in
in
shl
and
mov
cmp
cmp
push
stos
and
ja
or
sub
int
aad
dec
sbb
or
sub
arpl
push
jbe
mov
or
addr16
jb
push
adc
fcoms
mov
icebp
lcall
pop
nop
ds
std
cmp
je
cwtl
cltd
loopne
inc
cmp
sub
aas
rcrb
popf
adc
cmpsb
pushl
aas
aaa
jo
int
mov
popa
lea
pop
lock
mov
mov
dec
cld
insl
xor
loopne
std
mov
mov
jl
call
insb
addr16
or
cld
icebp
ss
mov
jbe
add
scas
ljmp
in
pop
ds
int3
ljmp
call
mov
add
jp
jb
inc
das
icebp
out
cld
xchg
mov
sub
daa
mov
popa
add
repnz
iret
cltd
mov
push
push
arpl
pop
fmuls
insb
ss
xchg
je
dec
ds
lret
mov
pushf
loop
pop
xchg
and
xchg
in
cmpsl
es
pop
pop
inc
sub
push
or
in
nop
or
mov
dec
and
pop
mov
adc
mov
jne
outsb
pop
into
clc
xchg
and
rolb
das
and
movsl
sub
ds
gs
inc
add
pop
test
jmp
ds
push
jge
rcrl
add
jmp
iret
add
mov
sbb
jb
popaw
stos
cli
mov
pop
or
addr16
rorb
in
or
mov
inc
gs
aam
and
mov
inc
mov
pop
inc
shufps
inc
xchg
pop
fldt
fidivrs
push
and
pop
ret
xor
xchg
mov
mov
test
mov
jge
jns
stos
adc
lods
rcll
jnp
jg
repnz
cltd
ret
leave
push
hlt
mov
jno
sub
ficomps
repnz
ja
jg
int3
outsl
mov
sahf
fistpll
xlat
xchg
pusha
dec
out
das
outsl
and
or
mov
sbb
xor
or
in
inc
push
inc
jnp
pop
mov
mov
ds
xchg
mov
test
repnz
popa
fldl
sbb
xor
and
xchg
aas
insb
pop
cmp
cmc
in
jb
aas
es
dec
adc
mov
cli
cmp
inc
loopne
mov
push
iret
aas
rcrb
pop
mov
push
std
xlat
dec
stos
insb
nop
gs
stos
cwtl
bnd
push
mov
dec
std
dec
fistpll
ret
and
cmp
jl
pop
imul
push
faddl
jecxz
out
lcall
out
add
mov
imul
mov
mov
das
push
or
pop
mov
pushf
outsl
notb
shrb
or
jbe
push
jg
jmp
jns
pop
out
inc
mov
dec
pop
gs
fwait
mov
dec
sub
adc
pop
subb
mov
add
int
cli
mov
pop
jo
jge
adc
jg
fldl
xchg
shlb
lret
adc
xchg
repz
or
xchg
fldl
mov
cwtl
lret
andl
and
add
or
and
mov
out
pop
neg
mov
pop
popa
imul
push
pop
push
dec
dec
xor
addr16
sub
rcr
jnp
inc
sahf
jecxz
ret
push
leave
cli
inc
iret
and
mov
scas
repnz
xor
enter
lods
in
dec
lods
enter
mov
in
xlat
sbb
mov
lretw
mov
mov
repnz
out
jne
insl
dec
cmpsl
adc
and
fwait
out
fwait
in
dec
dec
fbld
fcoml
nop
popa
push
jg
mov
xor
das
cmpb
cltd
cwtl
mov
sub
rcl
pop
push
inc
fwait
pusha
cmp
jb
rcrb
and
xchg
rorb
pop
dec
sub
lock
sbb
fcompl
out
shlb
cwtl
sbb
pop
imul
pushf
shrb
test
std
icebp
rcr
cmp
fstl
adc
int
sbb
pop
add
std
lret
fmuls
test
xor
test
mov
les
or
xchg
test
mov
jns
xchg
xchg
shl
sbb
arpl
adc
sti
jl
xor
decb
mov
rcrl
add
mov
sahf
es
int3
add
add
xchg
mov
sbb
daa
dec
inc
sbbb
jecxz
nop
inc
into
movsl
jle
gs
fcomps
dec
inc
push
lock
call
cli
mov
lods
push
xchg
sbb
mov
push
adc
or
inc
inc
push
mov
mov
dec
jcxz
mov
je
orl
in
movsl
outsb
ret
fidivs
cli
pop
jb
cmp
mov
inc
or
fcoms
xchg
add
xchg
ljmp
push
imull
ss
mov
and
mov
dec
lea
push
aam
xchg
nop
outsb
jp
mov
mov
inc
jmp
xchg
fldt
cmpsl
jmp
sbb
push
pop
ret
mov
mov
vcvtpd2psy
test
sbb
loope
cwtl
or
ret
out
jmp
bound
sub
pop
jns
dec
in
and
jmp
faddl
mov
jno
xchg
int
je
sbb
repz
test
lods
fstl
push
xor
lea
pop
into
xchg
aam
pusha
jne
mov
insb
mov
jl
fistpll
repnz
jo
ds
sub
fidivs
jle
inc
lods
jg
lret
scas
mov
in
inc
jmp
mov
fld
rcrl
inc
dec
push
jno
and
push
icebp
pop
aas
adc
decl
inc
mov
cmp
mov
add
add
jb
dec
dec
aam
mov
pusha
mov
loopne
aad
sub
mov
dec
mov
jnp
mov
ss
xchg
sub
sub
fadd
pop
icebp
int3
sti
out
popa
and
mov
or
das
test
clc
jge
in
dec
jge
adc
fldt
lcall
loope
cwtl
dec
jne
imul
rcll
imul
push
jp
xor
inc
in
shrb
cmp
mov
sbb
push
sahf
fwait
test
inc
inc
js
out
xor
loope
xor
gs
dec
dec
aam
sub
hlt
pushf
cmpsb
pop
sti
inc
je
inc
les
xchg
push
jns
xlat
sub
lcall
jb
pusha
scas
aaa
lahf
arpl
repz
pushl
lea
mov
sub
iret
xlat
mov
lret
in
jecxz
gs
inc
cmc
jb
aaa
add
pop
push
shl
dec
push
push
outsb
push
sbb
fdivp
cwtl
je
hlt
xchg
popa
push
cmp
mov
sti
push
dec
stc
and
stc
test
cmp
mov
mov
leave
test
jnp
lods
outsl
inc
xor
out
divl
xchg
loopne
dec
popa
aas
mov
jl
and
mov
stc
push
mov
xor
jae
push
ljmp
xlat
sub
mov
or
mov
mov
imul
gs
testb
cmp
adc
scas
dec
push
push
cmpsb
nop
inc
lods
xchg
adc
push
adc
xlat
jl
sub
sub
add
mov
daa
loopne
mov
imul
mov
inc
lret
aaa
push
out
push
roll
push
xorl
test
shlb
xor
rcll
rcrb
or
cmpl
data16
xor
jle
fsubr
cmp
fsubrl
jae
cltd
mov
out
minps
push
mov
mov
pop
inc
pop
out
jne
lock
fimuls
shll
pop
das
fldl
inc
dec
xchg
inc
add
cmpsl
ljmp
icebp
jle
cmp
mov
int3
and
out
mov
inc
pop
ljmp
mov
mov
lock
imul
imulb
add
xor
mov
jnp
jae
int
out
pop
hlt
je
sbb
popa
xlat
push
iret
adc
jmp
nop
out
xor
mov
arpl
sub
mov
stos
xchg
adc
adc
sub
ljmp
dec
aas
push
dec
scas
stos
cmp
int
or
mov
loopne
or
sbb
sbb
into
add
rep
movsl
out
dec
cmp
jge
pop
inc
xchg
es
mov
adc
sub
mov
ja
mov
or
into
shlb
mov
ret
or
clc
loop
das
push
jecxz
mov
test
test
pop
xchg
xlat
out
add
jo
or
mov
xchg
lods
lea
test
iret
jp
sbb
std
mov
push
mov
sbb
icebp
push
outsb
inc
es
out
pop
js
int
add
pop
push
out
xchg
push
add
or
fisttpll
sub
loope
adc
push
stc
sub
mov
push
dec
add
mov
int
mov
push
and
testl
jnp
ret
repz
or
pop
push
sub
xlat
stc
out
push
push
call
mov
js
in
inc
inc
cltd
or
xchg
jl
pop
pop
daa
sbb
aad
xchg
jns
ficoms
adc
je
sub
dec
insl
xchg
lcall
pop
mov
insl
lds
add
loop
arpl
inc
dec
and
lock
pop
mov
rolb
out
clc
scas
mov
sahf
movsb
jae
test
jnp
pop
pop
repz
fsubs
aas
sub
rol
sub
push
mov
je
push
cmpsb
mov
repz
aaa
popf
ret
gs
mov
mov
mov
lds
fnsave
pop
xchg
jecxz
jg
jo
sub
cmpl
pop
inc
vpsrld
inc
imul
nop
fs
dec
repnz
das
arpl
sub
jecxz
xchg
xchg
xchg
and
inc
jg
orb
jl
xor
cmp
dec
inc
test
jnp
add
add
adc
inc
sbb
into
out
cmp
int3
iret
movl
cli
cmc
mov
dec
cmc
sub
hlt
mov
push
and
rorb
shll
cmpsb
xorl
and
mov
test
cmp
adc
xchg
cmp
test
inc
subl
sbb
or
inc
pop
fs
cmp
xor
fidivrl
jo
or
les
nop
mov
cli
fcompl
inc
pop
fnstcw
xlat
dec
das
xchg
mov
sub
aad
or
cld
mov
xchg
xor
lods
dec
out
adc
jnp
popa
inc
clc
imull
pop
js
push
add
test
aad
inc
inc
je
mov
es
sub
add
mov
jb
ja
test
xor
adc
gs
jbe
adc
adc
and
inc
iret
or
clc
lret
andl
pop
pop
mov
loopne
or
inc
pcmpgtd
mov
adc
std
mov
inc
sti
mov
pop
xchg
arpl
mov
or
cmpsb
xchg
dec
cltd
dec
subl
xorb
loop
aam
punpckhdq
fildll
push
sahf
xchg
pop
testl
loop
xor
pop
push
mov
dec
push
adc
add
jbe
mov
or
hlt
mov
mov
xchg
aas
lahf
testl
stc
fs
push
jbe
es
cld
xlat
bound
push
mov
inc
mov
data16
dec
fldt
test
mov
or
mov
aam
dec
xchg
mov
mov
divl
jne
cmp
fcompl
popa
jg
inc
stos
xor
xorl
in
fmull
push
lret
leave
push
jge
jl
push
push
mov
inc
pop
jb
jle
push
jb
mov
mov
addr16
pop
addr16
inc
sbb
pop
stc
stos
mov
scas
inc
push
aam
push
call
inc
icebp
or
mov
ret
xchg
sarl
and
sbb
mov
and
sbb
movsb
mov
adc
pop
cmpsb
ds
lods
mov
rorl
enter
fstpl
dec
imul
add
test
mov
and
cli
xor
sbb
sub
enter
xor
es
addl
fmuls
xor
push
sub
pop
out
xor
push
mov
leave
sbb
gs
mov
enter
cld
dec
add
xchg
dec
test
cwtl
lret
mov
push
in
pop
add
sbb
enter
nopl
or
outsl
arpl
aas
xchg
inc
nop
or
test
pop
and
xchg
mov
in
jb
fcoms
rolb
clc
sahf
gs
in
mov
mov
lret
adc
ficompl
mov
dec
aas
cmc
mov
out
gs
adc
sub
aaa
jnp
add
pop
std
add
dec
inc
aaa
sub
push
int3
push
ret
sar
insb
inc
push
pop
js
lcall
imul
gs
adc
dec
cmpsl
jb
imul
addl
icebp
stc
bound
mov
out
pop
jbe
or
sbb
dec
or
jl
mov
adc
push
daa
andl
test
and
pushf
cli
xchg
inc
lret
mov
fldt
mov
movsl
mov
sbb
xor
sub
rorl
mov
xchg
mov
push
int
push
outsl
cs
pop
pop
ja
pop
mov
nop
or
leave
stc
mov
xor
sahf
jo
mov
rcrb
icebp
lcall
imul
xor
lods
or
lret
inc
xlat
xchg
test
add
inc
jecxz,pt
bound
xchg
hlt
adc
push
mov
aad
bound
adc
jl
fisubrl
hlt
in
andb
mov
inc
jno
mov
mov
lahf
insl
mov
iret
movsl
je
into
fcomps
ds
clc
nop
xorl
out
lcall
lock
nop
pusha
daa
push
lds
xor
dec
or
lds
insb
xor
imul
mov
rolb
xor
xor
xor
leave
aas
and
pop
repz
daa
pop
aad
dec
mov
add
shlb
jnp
inc
je
cltd
add
jmp
scas
sbb
push
cs
mov
inc
push
mov
sub
inc
cmpsb
xor
into
mov
cmpb
adc
sub
or
icebp
std
flds
out
push
cmpsl
or
jge
out
movsb
sbb
int3
xchg
test
sub
and
iret
sbb
sbb
icebp
pop
pop
pop
mov
cli
inc
arpl
pop
add
jne
mov
in
jbe
xchg
pop
dec
pop
ss
push
addl
dec
pushl
push
popf
cwtl
shlb
ja
jnp,pt
cmp
aas
add
out
sbb
fldenv
mov
test
data16
sbb
aas
shrb
test
shlb
imul
mov
scas
cmpsl
sar
cwtl
xor
test
push
loopne
popf
adc
add
out
insl
jo
int
jl
outsb
fwait
ret
dec
test
repnz
mov
cmp
xor
add
push
pop
fimull
dec
leave
jae
lcall
xor
xchg
mov
xchg
es
adc
scas
lock
xchg
mov
test
cmp
jecxz
loope
cmc
js
cwtl
ds
xor
sub
adc
add
jno
rcr
sbb
push
mov
mov
adc
mov
mov
fmuls
jp
sub
push
lahf
sbb
mov
adc
push
jmp
cmp
fwait
nop
and
fs
dec
out
ret
test
ja
mov
stos
xor
fsubs
hlt
mov
push
mov
dec
xchg
mov
or
scas
fistl
int
out
sbb
dec
or
push
pop
cld
add
pop
das
jg
add
cli
fldl
and
int3
ret
addr16
test
xchg
aas
and
addr16
jb
loop
data16
pop
jge
leave
jmp
test
mov
arpl
fs
mov
jl
lea
add
outsb
loop
mov
imul
sbb
push
stos
xor
shll
scas
dec
lds
bound
sbb
add
xor
lods
fldl
cmp
push
mov
outsb
mov
xchg
mov
les
sub
adc
mull
or
push
xlat
stos
or
shlb
lret
xchg
scas
mov
add
out
xchg
xor
cmp
int3
mov
cs
and
and
pop
loope
fs
stos
and
rep
xchg
fs
aam
mov
out
mov
cwtl
loopne
sahf
xor
mov
stos
mov
xor
dec
int
enter
or
stos
out
jl
pop
mov
jb
xchg
push
loopne
ja
popf
xlat
and
mov
and
repz
push
jo
pop
cli
into
push
mov
lock
out
icebp
int
loopne
fdivrl
jmp
push
stos
outsl
jbe
add
pextrw
mov
imul
xchg
imul
out
xor
cmp
mov
xor
cmpsl
repz
data16
jle
cmp
mov
xor
lea
xor
shrl
icebp
sbb
inc
jecxz
push
push
push
mov
in
nop
int3
cli
dec
xor
and
mov
jb
lods
lods
mov
jns
fsubr
pop
mov
test
xchg
jns
mov
inc
xlat
push
xchg
jno
or
xchg
es
inc
push
cld
mov
in
loop
ss
mov
test
xchg
es
push
aas
cmp
sbb
sahf
sub
mov
xor
mov
hlt
xor
ja
scas
adc
dec
bound
xlat
js
cmp
jb
xchg
sbb
enter
cmc
lock
test
cmc
out
mov
xchg
inc
not
inc
cs
adc
loopne
xchg
test
jo
js
pop
mov
mov
mov
repz
aad
scas
pop
pop
cmp
or
scas
mov
jo
ret
cmpsb
inc
xchg
mov
imul
xor
jns
mov
jns
jno
into
out
dec
mov
xor
jmp
jnp
subb
xor
mov
or
adc
or
mov
repnz
addb
adc
adc
xchg
push
or
pushf
mov
jae
les
in
jb
fxch
mov
jno
mov
cmp
and
and
jp
lock
inc
divl
mov
ret
dec
dec
mov
loope
out
lea
adc
push
arpl
and
xor
add
adc
les
lods
rcrl
imul
xchg
and
ret
inc
in
or
pop
out
or
pushl
jo
rcll
test
inc
sbb
or
mov
push
test
and
adc
fdivrp
sarb
or
xchg
js
insb
mov
roll
mov
arpl
shll
dec
in
outsb
std
dec
lds
rcll
in
jb
rcrb
aam
addr16
or
mov
or
test
data16
cwtl
mov
pop
lret
imul
addb
mov
sbb
fwait
sahf
xlat
flds
clc
cmp
xor
insb
adc
adc
xor
lcall
or
hlt
out
mov
mov
jns
sub
and
ljmp
adc
iret
loope
int
sub
jmp
lret
cmpsb
xchg
cli
incl
jle
in
lret
incb
xor
jp
pop
ret
mov
push
lods
dec
jae
and
pop
sarl
adc
jbe
pushf
dec
inc
ss
sub
iret
fdivl
mov
ret
and
fs
mov
popf
pop
lea
sbb
sub
or
mov
push
popf
das
insb
lods
shlb
or
push
daa
movsl
push
lret
sbb
cmpsl
mov
mov
shrl
mov
subb
shrb
leave
xchg
push
inc
lods
inc
dec
inc
loop
xchg
mov
fisubs
cmp
cmp
pusha
push
mov
mov
or
nop
imul
cmc
leave
in
cmp
push
cmovne
fsubrs
mov
xor
xchg
scas
xor
test
pop
add
into
mov
sub
imul
shrb
adc
mov
cmpsl
jo
shl
popf
sub
sub
ja
rcll
je
dec
lods
jmp
add
dec
cmp
gs
cmpb
mov
mov
cltd
xor
cltd
pop
mov
jp
ret
inc
jnp
adc
fisttps
ret
imul
in
std
mov
enter
sbb
inc
in
mov
inc
adcb
add
jae
push
testl
and
and
cwtl
adc
inc
pop
push
and
xchg
xor
and
cmp
out
fwait
ljmp
pusha
add
and
jns
mov
jae
imul
addb
pop
or
push
push
pop
test
in
cmpsb
sub
add
sahf
stos
sbb
push
adc
shrl
in
cs
or
or
jb
in
sahf
test
stc
cs
iret
lds
call
pushf
fdiv
push
mov
sbb
pop
mov
jmp
iret
add
out
js
xor
std
cmpsb
iret
push
mov
repnz
mov
jmp
mov
popf
jl
into
mov
and
xlat
lods
xlat
scas
loopne
out
pop
cld
sahf
mov
in
popf
and
adc
je
js
mov
mov
fidivrl
xor
pusha
pop
mov
push
mov
or
loop
sbb
pop
add
sarb
fcomps
fwait
mov
push
cmp
aam
and
scas
inc
mov
lcall
inc
std
dec
pop
pop
rorl
pop
cmp
pop
jbe
add
test
shll
adc
sub
xor
out
jne
xor
outsb
sub
sbb
es
addb
aaa
mov
xor
sbb
jb
pop
and
insl
inc
and
xchg
push
jne
ret
repnz
icebp
mov
pop
jne
jb
sub
bound
subb
out
imul
mov
mov
fcomps
fcoms
shlb
jg
mov
cmpsl
or
and
loope
pop
inc
mov
popa
iret
mov
stos
sub
push
or
and
lods
int
push
nop
xor
cmp
fildl
cli
inc
into
cmp
ds
mov
pusha
mov
mov
xor
adc
xchg
push
pop
dec
adc
push
sub
dec
mov
dec
stc
ret
imul
lods
inc
aad
xchg
push
jnp
in
leave
popf
insb
fbld
rorl
xchg
adc
dec
loopne
mov
or
outsl
es
push
inc
data16
enter
adc
flds
cmp
sahf
jle
or
sahf
sub
jg
pop
lcall
mov
add
xchg
mov
stos
sub
jne,pn
add
filds
jnp
add
cltd
cwtl
fsubs
sub
es
sbb
push
or
mov
cmc
cli
ja
fs
adcb
cmpsl
dec
and
xor
nop
xchg
rcr
fwait
pop
fwait
lcall
lret
mov
sub
xor
push
pop
ja
stc
sbbb
iret
rcrb
in
syscall
inc
jne
or
xchg
stc
dec
out
push
daa
loopne
loope
mov
arpl
push
and
cmp
shrb
shlw
mov
cmpsb
or
clc
daa
dec
xchg
cmp
jp
lods
repz
and
push
and
movsb
sub
inc
mov
jecxz
xchg
mov
int3
or
pop
push
mov
sbb
pop
subb
cli
push
or
lock
jne
inc
push
ret
pop
ret
dec
inc
mov
lret
xor
add
adc
fidivl
add
mov
push
sbb
ss
in
push
sti
lret
rcll
das
cmp
out
and
pop
enter
imul
mov
movsb
xor
adc
fwait
xor
add
outsl
mov
and
cmpsb
mov
dec
or
dec
dec
cmp
push
bound
mov
xor
mov
xorb
out
stos
aad
xchg
sbb
lret
es
aas
rcrl
push
mov
push
dec
notl
and
ret
xchg
ret
dec
xchg
in
je
in
cltd
lea
js
and
dec
mov
hlt
ja
push
add
dec
mov
mov
push
lahf
fstl
and
fisttpll
pop
lods
add
jno
insb
dec
sub
movsb
fwait
dec
push
fst
test
cmp
sti
lea
in
outsl
iret
mov
xchg
xchg
jmp
push
inc
dec
repz
mov
xchg
aaa
movsb
xor
sub
cmp
lock
or
cmp
jle
fsubr
mov
lret
test
test
or
notb
aas
xchg
cmpsb
lock
adc
frstor
lea
out
pop
xor
mov
cwtl
lret
ljmp
jge
rcrb
add
add
and
rcll
js
sbb
dec
mov
mov
jb
addr16
or
sbbl
sub
push
inc
xor
cmpsb
sbb
mov
out
sti
int
inc
cs
or
ror
fbld
push
fsubl
mov
sub
ficoms
es
sbb
jmp
push
cwtl
mov
andb
rcrb
lret
jb
test
xor
push
cli
and
push
xchg
test
sarl
test
mov
push
cmpsl
pop
fdivrs
mov
xchg
jo
scas
cmc
dec
mov
test
cmp
xchg
rcl
enter
sbb
cmpsl
jno
ss
jnp
cmpsb
repnz
and
stos
mov
sbb
add
push
add
lea
incl
mov
outsl
mov
call
inc
sbb
mov
popf
faddl
sti
popa
add
or
or
aam
adc
movsl
xchg
jb
add
add
stos
pop
pop
xor
and
mov
sbb
xchg
mov
aad
aaa
mov
xchg
cmp
xor
mov
fwait
dec
push
dec
push
sub
mov
jmp
int
jl
or
jge
cld
icebp
cmp
subb
shl
mov
dec
out
and
add
sub
inc
add
xchg
and
out
sbb
lahf
add
cld
jno
or
sahf
nop
mov
jmp
push
xor
loope,pt
testb
add
jne
in
rcrl
shlb
push
adc
jge
loopne
sahf
filds
jne
int
add
mov
jo
push
out
inc
rcll
xlat
adc
add
xchg
test
push
xor
sbb
loope
or
mov
add
imulb
adc
pop
push
push
rorb
adc
pop
mov
xorb
imul
add
jb
sbb
psubq
cs
pop
cmpsb
and
push
nop
xchg
mov
imul
jp
pop
arpl
mov
push
mov
neg
ret
dec
jo
dec
daa
pop
imul
xor
sub
jg
hlt
popa
adc
lods
dec
lcall
mov
mov
push
rorl
insl
sub
sarl
and
cmp
stos
lods
sub
es
idiv
aas
insl
pusha
lret
stc
push
outsb
adc
or
fsubr
dec
mov
lea
lods
js
pop
mov
bswap
fs
jnp
out
and
repnz
mov
jns
jo
cvtps2pd
add
in
pop
int
iret
jl
dec
cmp
sub
addl
cmp
adc
dec
outsl
jbe
cwtl
aam
popf
dec
sarb
dec
std
mov
ljmp
js
mov
xchg
mov
fcomip
addl
stos
ret
fdivrl
mov
xor
pusha
mov
mov
xor
cld
sbb
xor
sbb
aam
or
imul
inc
xchg
shll
mov
call
call
loopne
mov
xor
push
fcmovnbe
je
cld
push
jnp
xor
lock
adc
lea
ljmp
loop
xchg
lock
int3
aam
or
in
push
mov
dec
mov
lret
gs
or
xchg
mov
lods
outsl
outsb
out
inc
mov
jno
int
xlat
mov
sub
pop
inc
sub
rcrb
xchg
lods
out
add
jo
jmp
push
jb
faddp
push
mov
imul
fs
cmp
cmp
imul
push
mov
in
or
dec
pushf
sbb
push
popa
inc
mov
lock
mov
mov
jmp
subb
and
scas
adc
shrl
inc
adc
fs
mov
shll
cmpsb
push
fs
daa
adc
jmp
iret
xchg
frstpm(287
imul
pop
adc
icebp
push
push
jns
add
push
popa
bound
push
jno
inc
daa
nop
sub
out
and
mov
add
shll
sub
push
fsubrl
icebp
fstpl
dec
aaa
shrl
in
in
test
outsl
test
mov
cmp
out
xchg
jno
mov
cmpsl
int
pop
and
dec
pop
je
movsb
dec
sahf
mov
add
and
mov
lcall
ror
pop
ss
cmpsb
sub
out
das
cld
mov
bound
test
cmpl
adc
xchg
push
inc
sub
jne
lret
mov
ret
push
add
movsb
imul
dec
xchg
cwtl
out
sbb
add
sbb
pop
ret
pop
push
dec
mull
je
js
js
cmp
jns
shrl
jecxz
subl
xchg
dec
xor
jle
jl
js
movsb
xor
inc
movsl
mov
lahf
aad
filds
sbb
or
pop
or
push
push
clc
mov
cmp
decl
outsb
lock
cltd
jle
xchg
and
sahf
sbb
out
mov
orb
arpl
sbb
mov
bound
out
inc
repnz
cmp
jbe
imul
mov
daa
movsb
data16
pop
and
adc
xchg
arpl
jl
pop
or
fdivrs
mov
inc
sub
mov
setbe
mov
movsl
dec
int3
mov
bound
inc
test
ja
pop
mov
mov
jp
push
sub
mov
ds
lcall
xlat
insb
lahf
inc
arpl
push
mov
xor
orb
pop
popf
scas
push
shlb
shlb
pop
fs
mov
out
cmp
mov
cld
xor
mov
cmp
cmp
addb
aad
pop
gs
mov
mov
pop
dec
inc
je
sub
jb
popf
fdiv
and
mov
mov
xor
pop
jno
aad
mov
jle
or
and
test
push
inc
add
sbb
ret
add
out
inc
outsl
or
or
push
paddb
adc
stos
int3
pop
mov
sub
and
mov
std
jp
cld
das
ret
mov
dec
mov
testb
pusha
or
lods
mov
or
add
daa
leave
cmpsb
test
cwtl
div
test
in
add
dec
add
push
popf
stos
sbb
xor
cmp
xchg
fldcw
ss
push
xor
pop
ja
rorl
stc
push
adc
push
inc
fwait
dec
repnz
cmp
rolb
movsl
adcl
fidivrl
lds
xchg
jne
mov
xor
bound
fcoms
cli
xchg
das
jg
jo
dec
jecxz
adc
xor
call
xchg
xchg
add
sbb
push
jb
fcmovne
fs
dec
pop
in
xchg
stos
or
or
cld
imul
out
jne
lret
mov
dec
fistpl
fwait
subb
or
test
subb
jl
adc
mov
lahf
out
rol
pop
fbstp
xchg
out
xor
stos
stos
test
lcall
sub
test
mov
cld
jecxz
insl
or
loope
popf
test
pop
sbb
lret
popf
je
cmp
popf
sti
adc
jmp
push
xor
sub
mov
pop
push
dec
or
gs
cwtl
jnp
inc
adc
out
push
xor
xchg
aam
insl
or
popf
pop
nop
jae
inc
lods
ja
xor
test
or
push
iret
loop
outsl
je
pop
mov
scas
cld
mov
mov
or
sub
lods
xlat
or
jl
and
mov
or
cmp
xchg
shl
mov
fisubs
bound
add
mov
or
out
mul
shll
lahf
or
shlb
loopne
mov
pop
sbb
test
add
adc
int3
shrb
dec
scas
xchg
cmp
flds
mov
loop
cmp
xchg
lcall
das
icebp
inc
sub
mov
in
mov
movd
or
add
outsl
push
dec
adc
jle
push
ficoms
xchg
stos
repnz
pop
lock
int3
xchg
adc
sar
leave
mov
cmp
arpl
ss
xlat
jbe
in
jno
push
mov
fcmovne
sub
in
insl
push
das
add
call
fs
test
jmp
js
mov
ficompl
jo
push
rclb
or
jnp
repz
jmp
xchg
das
out
lods
icebp
or
add
shll
mov
sub
dec
mov
xchg
sub
pop
daa
push
inc
js
lea
fwait
iret
mov
dec
push
dec
shrb
rdtsc
test
add
pop
jae
mov
push
out
sub
or
outsl
cltd
fsts
sbb
test
mov
cltd
sub
dec
sbb
dec
xchg
and
pop
xor
adc
mov
cmpsb
cmp
xor
js
adc
cmp
mov
adc
lret
cmp
mov
mov
mov
jne
inc
outsl
cmp
insb
push
lods
lds
jo
dec
jae
ret
mulb
jnp
push
loopne
cld
push
push
aaa
mov
xchg
mov
ret
mov
fdivrs
cld
divb
mov
test
movsl
gs
lcall
outsl
add
int3
je
or
loopne
push
mov
subl
nop
mov
mov
or
sti
sahf
mov
stc
hlt
add
mov
mov
mov
inc
fs
scas
loop
sub
inc
mov
popa
jne
sub
xlat
dec
inc
push
inc
sub
fs
adc
pushf
cmp
js
into
sub
icebp
aas
scas
or
push
jns
or
and
dec
push
loope
ds
lock
jbe
sub
or
jg
xchg
lods
mov
repz
inc
dec
movsl
jno
adc
fs
repnz
subb
cltd
jge
stos
jle
into
sahf
jne
cmp
inc
iret
mov
push
pop
data16
sub
and
mov
imul
cld
icebp
in
sbb
cmc
pusha
repnz
sbb
and
aaa
movsl
fildll
leave
jle
jmp
xor
ss
rcl
imul
leave
shll
lcall
mov
imul
cld
xchg
push
aam
mov
loope
sbb
sbbl
sub
mov
shr
adc
cmpsb
insb
xchg
fiadds
scas
push
or
adc
mov
test
das
pusha
lret
add
rolb
mov
push
xchg
sbb
fsts
testb
icebp
lcall
mov
jae
lds
js
lea
inc
mov
jp
lret
add
jns
lds
aam
hlt
pop
popf
arpl
fsubrp
push
call
call
push
push
inc
aam
jno
mov
xchg
repz
sahf
popf
in
jne
adc
add
sub
pop
fnsave
leave
sub
cmp
fs
xlat
scas
jmp
xor
aaa
jle
ja
or
and
jge
adc
mov
mov
or
insl
inc
cs
popa
inc
fiadds
outsl
inc
inc
fwait
mov
mov
lret
adc
mov
sub
outsl
xor
xor
cmpl
mov
rclb
in
pop
loope
jl
movsl
mov
dec
int3
inc
mov
jno
jb
inc
ljmp
mov
mov
in
clc
push
cld
jl
push
adc
dec
pop
push
stos
movsl
jno
adc
sub
xlat
pop
test
jne
stos
and
sbb
stc
sbb
xor
fidivl
jmp
lahf
xchg
fnstenv
mov
mov
push
jle
sbb
mov
mov
xchg
pop
loop
insl
out
cld
adc
dec
jae
bound
mov
stos
cmpsl
movsb
adc
pop
incl
mov
and
dec
adc
mov
mov
fidivs
cld
mov
cli
sub
je
xchg
xor
cmpsb
arpl
push
imul
mov
inc
jae
aad
and
xchg
sbbl
sahf
xlat
jb
in
movsl
and
xchg
cmp
rcrl
fcmove
jne
jno
push
mov
cwtl
iret
push
inc
test
lock
ret
bound
mov
fwait
lahf
out
cmc
dec
and
rorb
pusha
enter
and
add
js
mull
jp
mov
xor
inc
mov
movsb
xchg
dec
imulb
js
int3
fsubs
idiv
jmp
adc
sbb
iret
jp
shll
pop
ja
nop
mov
iret
fs
and
lret
test
jle
sub
cmp
mov
xor
negb
dec
ja
imul
dec
imul
lea
cmp
jp
dec
pop
test
movsl
push
jno
sub
add
mov
stos
fwait
jnp
xorb
sbb
enter
jecxz
test
into
sub
shrb
lcall
jmp
out
hlt
hlt
hlt
and
xchg
fsts
jecxz
xchg
scas
pop
outsb
imul
lock
inc
loop
push
fsubp
stos
push
lock
inc
repnz
or
loopne
pop
cwtl
cmp
dec
addr16
and
es
in
loope
std
cmpsb
mov
enter
fcomps
sbb
mov
sbb
xor
mov
cmp
push
or
stos
int3
out
pop
arpl
pop
movsl
push
inc
js
jae
leave
in
jmp
push
stos
les
pop
sbb
pop
lcall
hlt
sti
add
shl
rcl
outsb
fcoms
ss
pop
inc
mov
push
loopne
cld
mov
lcall
xor
pop
insl
inc
inc
lret
into
and
and
add
clc
enter
mov
mov
push
sahf
jp
js
sub
and
lods
xchg
pop
dec
sub
dec
jbe
movl
jae
jns
ret
jno
and
push
sbb
mov
or
jb
dec
stc
mulb
jno
lcall
fwait
adc
jnp
mov
das
jecxz
in
cwtl
jecxz
aaa
outsl
and
push
inc
xchg
push
mov
xchg
push
aaa
add
lock
push
dec
stos
lods
or
imul
sbb
js
loope
xor
addr16
or
nop
jne
push
mov
cmp
push
inc
call
andb
les
xchg
xor
mov
and
jae
out
inc
xchg
test
adcl
adc
cmpl
repz
notb
mov
in
inc
inc
or
outsl
es
movsb
negb
addb
mov
or
stos
mov
jle
and
dec
mov
repz
sub
sbb
pop
xchg
xor
dec
dec
mov
sub
jbe
mov
clc
out
lret
mov
inc
cmp
jp
in
fsubrl
jmp
sub
and
mov
ss
lods
mov
fidivrl
aam
inc
xlat
mov
push
fistpll
jne
punpckhwd
fsubrs
imul
loope
enter
or
adc
xlat
imul
cmp
adc
or
push
stos
enter
xor
pop
repz
aas
lods
lods
sub
pop
out
pop
clc
fiadds
cmpsl
hlt
sbb
fsubl
xor
aam
lds
mov
sbbb
pop
into
mov
cmp
ljmp
inc
aas
mov
mov
in
sti
dec
push
es
dec
mov
inc
jge
sbb
cli
sbb
dec
in
stos
das
insb
jns
push
xchg
adc
pop
cmp
inc
pop
cli
int
add
dec
add
out
mov
in
mov
ja
jne
lcall
xchg
xchg
pop
adc
lret
rolb
test
push
adc
sub
mov
dec
push
popf
mulps
or
sub
testb
jb
lahf
mov
sahf
fistps
mov
cld
stc
xor
mov
mov
add
inc
adc
xchg
int3
push
xor
addl
popf
inc
imul
imul
leave
jns
das
dec
popa
push
xchg
out
scas
jl
dec
adcl
push
mov
push
xchg
pop
xchg
mov
in
add
mov
ja
or
or
xchg
call
adc
dec
sti
popa
sbb
mov
cmpsl
push
js
inc
mov
adc
out
or
cmc
pushf
cwtl
leave
out
push
and
xor
lock
mov
out
mov
sbb
xor
bound
jns
jne
stos
test
dec
int3
cmp
push
fdivrs
lret
test
fists
mov
cli
rorl
arpl
testb
lock
jbe
int
inc
iret
jg
scas
or
sbb
add
popl
fld
shll
adc
adc
xchg
push
push
cwtl
xchg
jns
pop
mov
cld
imul
fcoml
adc
and
sub
dec
faddl
cwtl
outsb
stos
add
pop
lea
adc
out
ss
mov
jg
xor
jne
test
mov
fs
ja
sbbb
pushf
repnz
fcomps
push
jle
push
test
movsl
repz
mov
or
mov
ds
add
ss
xlat
loopne
out
cmp
xchg
lods
push
in
outsb
paddusw
add
xor
pop
or
sub
fmull
add
lds
les
out
lods
movsl
jecxz
mov
orb
mov
test
cmpsl
test
jge
jae
jmp
fnstenv
cmp
mov
push
xchg
jo
mov
dec
jp
movb
in
ror
sbb
dec
mov
dec
scas
movsb
dec
inc
dec
movsb
sub
negl
insl
fdivr
pop
inc
pop
inc
imul
loop
cmpsb
xchg
xchg
jg
jnp
push
mov
or
sti
test
adc
inc
cltd
mov
mov
fsubl
out
inc
ret
test
fs
out
movsl
pop
sbb
std
pushl
sbb
hlt
lea
jno
pop
push
scas
mov
popf
in
jl
out
pop
jmp
add
mov
mov
and
xchg
lods
mov
cmp
cmp
pushf
mov
sti
lea
leave
icebp
push
iret
cli
pop
pop
clc
inc
add
sbb
pop
into
pop
add
roll
adc
lret
push
xor
or
test
sub
out
mov
test
sub
dec
mov
inc
fstpl
mov
push
jl
addl
out
pop
add
negb
dec
repnz
mov
scas
fs
sbb
js
push
and
sbb
sub
sub
mov
test
test
repz
es
leave
fnstcw
fwait
mov
repz
movsl
jmp
lcall
bts
xchg
lcall
dec
inc
cmp
mov
sub
not
push
or
iret
cmpsb
pusha
pop
in
in
into
cs
mov
adc
or
add
notb
add
xchg
insb
sbbb
ret
test
add
cwtl
orb
leave
xorl
pop
mov
mov
mov
bound
dec
jecxz
pop
arpl
lea
sbb
arpl
xor
gs
fstpl
xchg
fcom
inc
sahf
push
mov
jg
push
xor
pmuludq
loop
xchg
sub
daa
das
xchg
mov
dec
or
clc
fs
les
push
aas
jmp
inc
ss
adc
out
das
repz
jo
push
stos
mov
inc
mov
hlt
xchg
adc
cwtl
xor
mov
out
sbb
add
test
pop
xchg
dec
orb
add
enter
test
es
cmp
sahf
imul
push
xlat
sub
lock
imul
scas
push
scas
movsl
clc
pop
push
xchg
ljmp
and
imul
jl
push
cmp
in
push
cmp
jmp
movsb
gs
addr16
jmp
push
xor
ret
stc
inc
mov
fsubl
ret
dec
shl
cmp
pop
ror
adc
into
sub
jmp
mov
in
lea
cld
push
cs
je
out
jo
repnz
decl
jge
stos
mov
shll
sub
jnp
mov
lods
and
movsl
or
pop
mov
push
pop
jl
jmp
xor
and
icebp
lcall
jl
cwtl
lea
push
xor
cmp
sahf
jle
mov
mov
sub
dec
and
push
hlt
and
add
mov
or
pop
add
pop
mov
jmp
jno
dec
inc
rcll
fs
daa
mov
repnz
cld
dec
sahf
test
adcb
mov
push
sub
int
or
dec
push
sbb
xchg
sti
out
out
aas
popa
bts
xor
pop
push
jg
cmp
jl
jbe
xor
rcl
inc
pop
jae
loopne
fsubrs
cmp
cli
fs
in
and
push
movsb
mov
add
stc
data16
outsb
arpl
or
ret
out
adc
cld
loope,pt
sbbl
data16
cmp
sub
mov
loopne
enter
mov
push
lahf
std
or
jmp
pop
shlb
js
and
mov
aaa
inc
psubsb
jnp
setae
mov
jge
inc
mov
jecxz
rorb
imul
cs
jns
adc
pop
lcall
xchg
movl
dec
jg
pop
inc
imul
out
or
xor
bound
or
pop
pop
jno
iret
aam
flds
or
nop
or
insb
push
rcrl
addr16
and
push
xor
dec
das
inc
dec
jns
bound
out
add
lret
xchg
clc
sbb
dec
mov
std
movsb
sbb
ret
cmc
inc
xchg
inc
cmp
pop
loop
mov
mov
push
xor
or
cmp
jbe
outsb
and
dec
push
jne
out
fisubrs
inc
pop
sbb
fwait
dec
out
arpl
testl
jg
inc
jbe
jne
lret
sub
jbe
shrl
jo
xchg
fsubp
or
inc
jge
mov
mov
mov
ljmp
cmp
mov
cmp
xorl
pop
mov
sbb
add
aas
push
inc
add
stos
ja
push
and
push
add
push
add
movsb
push
idivl
mov
dec
inc
sti
fldcw
adc
cmp
dec
jp
lods
loope
xchg
mov
fisubrl
scas
aam
cli
in
cmp
insb
inc
mov
inc
sbb
sti
cwtl
test
inc
inc
xor
jnp
pop
dec
mov
outsb
jns
inc
ds
in
lret
cmp
cs
stos
cwtl
sbb
adc
jns
dec
lock
push
jg
cmpsb
sub
sub
or
or
inc
ror
dec
push
jecxz
fs
mov
jno
lods
sahf
imul
lret
xorl
int3
out
push
pop
and
sub
inc
pop
movsl
sarl
and
cmp
mov
or
clc
inc
xchg
idiv
sbb
ret
xchg
xchg
mov
stc
dec
xchg
adc
cwtl
inc
cmp
mov
cs
dec
fwait
in
daa
cs
cmpl
push
push
mov
test
dec
mov
in
frstor
jbe
aaa
xchg
cmp
jae
subb
jp
shrl
bound
jg
scas
sub
addr16
and
ja
adc
not
movsb
xchg
xchg
leave
mov
dec
fcoms
mov
sub
fs
pusha
outsb
stos
sbb
inc
lds
jae
sub
mov
mov
hlt
cmp
fstp
in
jge
negl
aam
mov
cmp
test
jns
push
xchg
mov
shlb
jo
jno
movl
xchg
push
aam
scas
mov
stos
dec
frstor
imul
test
mov
cmpb
add
fdivrl
pop
adc
xor
or
push
xor
cs
aaa
xchg
int
mov
arpl
xchg
dec
cmp
or
popa
scas
in
in
push
dec
sub
or
mov
adc
cmpsl
cs
rclb
fidivrl
lock
rolb
push
jg
xor
pop
jmp
cmp
mov
add
aaa
out
add
inc
mov
dec
in
inc
and
jbe
xlat
sti
out
es
mull
call
sahf
dec
mov
push
mov
clc
sub
dec
addr16
mov
push
jno
jmp
inc
xchg
pop
cltd
xchg
popf
lret
mov
sti
repz
es
push
ljmp
inc
rol
and
imul
ljmp
imul
hlt
add
mov
and
movsl
mov
pusha
outsb
push
jb
inc
push
push
inc
jle
fcoms
lds
push
outsb
clc
add
sti
dec
or
sbb
into
pop
sub
xchg
push
lret
pop
rolb
xchg
mov
xchg
and
dec
das
ljmp
inc
add
or
mov
xchg
jnp
scas
mov
ficoml
fwait
sbb
insl
movsb
fistps
xor
ds
out
push
test
leave
add
sbb
cltd
in
pop
bnd
pop
in
jge
jecxz
mov
aad
pop
pop
fwait
xchg
lahf
adc
mov
mov
hlt
push
add
popa
stos
fldcw
cmp
test
cmp
popa
jg
fxch
mov
faddp
xchg
and
sbb
push
loop
and
pusha
sbb
stos
dec
arpl
addr16
and
mov
mov
xchg
xor
inc
mov
add
or
cli
stos
nop
rolb
pusha
push
or
mov
dec
aaa
in
stos
mov
pop
nop
add
popa
sbb
aas
sbb
cmpsb
adc
inc
imul
and
hlt
aam
sbb
push
jge
ljmp
es
inc
pop
aam
jnp
or
inc
mov
mov
and
cmp
stc
test
test
cmc
sahf
adc
sbb
push
mov
outsl
jne
jne
add
popa
cli
push
and
std
xchg
iret
outsl
std
imul
ret
sbb
ljmp
pop
cmp
mov
incb
xchg
jb
push
stc
shll
push
pop
into
cmp
sub
xlat
pop
repnz
imul
out
adc
es
mov
mov
insb
std
push
mov
mov
arpl
jmp
mov
lret
std
push
dec
mov
dec
or
stos
int
jp
push
push
cmp
hlt
mov
test
xchg
int3
andl
push
inc
sbb
mov
clc
sbb
ss
stc
sbb
ss
adc
xchg
jmp
jbe
in
jecxz
adc
aad
push
sub
jecxz
mov
mov
cmp
adc
ret
mov
mov
pop
hlt
pushf
aaa
pop
jl
cwtl
outsl
sbb
mov
mov
xchg
add
shll
jo
adc
mov
mov
inc
pop
loopne
xchg
inc
and
cmpsl
adc
mov
push
xchg
mov
inc
dec
and
test
inc
adc
sub
pusha
outsb
scas
rorl
popf
jae
push
sbb
and
push
jbe
mov
jp
sub
aas
sti
gs
jecxz
inc
pop
ja
mov
adc
push
aaa
jnp
jnp
mov
sub
mov
add
and
aad
std
call
dec
pop
sub
decl
stos
xchg
arpl
sbb
clc
jbe
cmpsb
and
outsb
repnz
jo
xchg
push
movsb
push
test
das
pop
mov
xchg
fidivrl
inc
sbb
adc
cmp
sbb
cmp
fimull
pop
ds
into
mov
mov
push
mov
adc
inc
mov
cld
loopne
adc
fbstp
shl
mov
xchg
cli
mov
mov
fisubrs
inc
push
sbb
pop
lock
xor
stos
mov
sbb
mov
fcoms
pushw
pop
repnz
out
das
and
pop
push
xor
imul
push
inc
ljmp
icebp
lahf
fidivs
and
dec
icebp
sbb
jo
or
shll
push
push
pop
push
je
notb
jp
pushf
push
ret
ret
dec
and
and
pop
jmp
arpl
imul
pop
xchg
add
cmp
adc
fcmovu
pop
es
es
cmp
imul
sbb
jns
pop
shlb
outsb
repnz
jb
add
pop
nop
mov
lahf
out
loopne
iret
and
mov
inc
xlat
pop
ss
insb
popf
mov
out
jae
xor
js
cmp
repz
mov
push
mov
jle
jg
mov
sbb
add
cmpsb
xchg
fidivrl
aaa
mov
sbb
loopne
mov
push
xorl
lds
out
cmp
jg
ja
lahf
hlt
dec
mov
iret
movsb
mov
jmp
jle
das
or
aad
adc
loope
cli
sub
adc
pusha
lods
fldt
movsb
push
or
dec
xchg
aaa
add
mov
pop
xchg
scas
add
sti
mov
sti
jge
data16
cmpsb
fwait
daa
jo
fsts
int
xchg
cmpsl
sar
repz
pop
lock
push
mov
pop
xor
and
sub
sti
mov
je
pop
nop
out
mov
lods
lea
sub
push
push
int
push
adc
in
out
push
fsubr
mov
popf
xor
adc
pop
dec
addr16
mov
xchg
mov
cmc
dec
into
fimuls
in
xchg
clc
popa
add
bound
or
add
orl
xor
mov
fs
loop
jns
stos
iret
loop
inc
enter
push
shrb
clc
add
pop
inc
lcall
iret
sbb
xchg
mov
js
inc
push
lea
inc
addb
sbb
jl
xchg
fldenv
mov
xchg
pop
mov
loop
sub
adc
mov
int3
dec
jno
idivb
jp
lea
cli
insb
sarl
cld
stos
scas
push
ret
inc
sub
push
rorb
mov
js
rcll
mov
insb
cmpsl
xchg
cs
mov
inc
inc
xor
test
cmpsb
push
push
xchg
cmp
dec
dec
jae
stc
loopne
in
arpl
or
mov
push
rcrl
adcb
mov
mov
nop
mov
xor
xchg
mov
leave
xchg
inc
loop
fnstenv
xchg
outsb
mov
adc
inc
cmp
pop
cmpsb
sub
pop
and
inc
sti
mov
lahf
xor
mov
imul
push
push
loop
xor
rcll
cmp
loope
aaa
mov
adc
lds
in
jb
bound
mov
out
lahf
es
xchg
ljmp
repnz
cli
jmp
scas
mov
dec
sbb
pop
xchg
enter
lret
aaa
or
xchg
add
popf
loopne
jmp
fs
int
out
pop
int
xchg
sub
add
inc
into
push
das
ss
outsl
test
pop
push
mov
pop
pop
test
fwait
sbb
cmp
stos
cld
inc
xor
cmpsl
int
mov
das
or
cmp
xchg
lock
mov
fwait
pop
jmp
add
or
insb
sbb
adc
dec
stos
daa
decl
xchg
mov
int3
and
pop
pop
push
add
sbb
sbb
dec
mov
cmpsb
clc
adc
mov
mov
xlat
dec
hlt
movsb
jo
fmulp
rcrl
cmc
sar
ds
add
jl
xchg
lahf
cltd
push
jecxz
sub
xor
dec
xchg
push
and
inc
inc
fcomps
mov
shl
add
outsl
sbb
in
mov
stos
je,pn
les
mov
xor
push
xchg
and
inc
xchg
add
xchg
fnsave
pop
in
popf
or
icebp
mov
dec
lods
daa
inc
push
and
sub
sub
sub
mov
mov
outsb
pop
std
mov
daa
dec
stos
inc
adc
enter
loope
dec
rorb
pop
add
loopne
xor
lods
shrl
in
fstl
xor
add
add
ja
daa
mov
pushl
addb
pushf
dec
push
and
and
mov
mov
add
jnp
rorb
and
mov
adc
sbb
fcompl
stc
movsl
adc
adc
pextrw
mov
pusha
in
xchg
inc
outsl
rclb
add
mov
jmp
sahf
ljmp
xchg
push
arpl
and
mov
mov
push
jmp
clc
fistl
ds
jle
jne
rol
mov
sub
imul
xchg
or
cmpsb
arpl
jp
and
mov
xor
clc
xchg
push
push
adc
cmc
adc
adc
daa
dec
xchg
mov
movsl
cmpsb
xor
xorl
add
adc
mov
fucom
into
iret
fnstsw
ss
sub
adc
sbb
adc
inc
dec
in
cmpsb
pop
iret
pushf
clc
xor
mov
xchg
push
rcll
scas
xor
clc
sub
mov
mov
enter
dec
shrl
fisubrs
rcl
rorb
xor
dec
xor
lahf
dec
xchg
mov
test
in
xchg
cmp
loopne
iret
dec
fimull
mov
mov
cmc
mov
insb
add
dec
xor
ljmp
pop
pushf
pop
call
jp
sbb
ljmp
sbb
fwait
push
inc
pop
jae
lods
int3
or
shrb
scas
pushf
lret
jo
dec
dec
pushf
sbb
aam
mov
stos
adc
xchg
fldcw
ret
dec
add
xchg
mov
bound
lods
inc
ficoml
dec
cmp
cmp
jb
orl
inc
adc
mov
dec
push
psubq
and
ret
or
sub
xor
cmp
mov
add
mov
popa
hlt
sti
mov
sbb
sbb
jae
xor
sub
shr
jmp
mov
out
rcll
sbb
pop
arpl
lods
arpl
mov
bound
xor
mov
xor
add
push
jbe
jbe
sbb
mov
fwait
jb
lds
jbe
xchg
inc
mov
xlat
les
in
fnstsw
sbb
jg
jp
or
testb
stos
bound
test
fiaddl
outsb
mov
lods
lods
int3
add
int
fdivr
push
loopne
mov
push
push
bound
mov
xchg
rorl
test
dec
addr16
pop
imulb
mov
xorb
and
int
sbb
add
dec
push
sub
cmp
sbb
mov
mov
dec
cmp
xchg
pop
sbb
in
cltd
adc
in
sbb
daa
mov
xchg
xchg
fcoms
ret
mov
pushf
das
loope
hlt
test
jo
aad
inc
pop
in
add
out
and
mov
lock
sub
and
mov
add
loope,pn
cmp
stos
dec
aam
xor
lea
popa
dec
xchg
adc
fldt
jmp
pop
lret
aas
lods
fldt
aad
mov
pop
xchg
pop
pop
test
ljmp
adc
fwait
popf
jmp
hlt
pop
or
mov
gs
xchg
push
icebp
mov
sbbb
push
cmp
faddl
iret
fadd
push
andl
sbb
cmpsl
jl
hlt
pop
cmc
repnz
shlb
cli
fdiv
push
mov
sbb
adc
test
xchg
das
out
mov
mov
cmc
out
pop
popf
scas
xchg
push
or
jns
sti
adc
push
or
sub
sbb
lods
clc
cltd
imul
push
into
mov
les
cmp
insb
cld
loop
push
shl
cmpl
pop
pop
ret
fldl
mov
jo
add
cmp
push
int3
xchg
gs
fdivr
ffree
mov
sbb
xor
add
into
or
int
daa
in
and
sub
lret
dec
inc
xchg
mov
xor
sub
pop
add
sbb
mov
mov
or
adc
cwtl
pop
rol
and
orl
mov
and
add
and
pop
push
lods
fwait
pop
inc
or
xchg
ljmp
sbb
jl
roll
cmpsb
in
hlt
mov
push
fisttps
lret
movsl
fcmovnu
shl
and
lea
lock
popf
xor
fxch
orb
ss
or
jp
push
lahf
outsb
sahf
pop
add
bound
lods
fsubl
pop
sar
xchg
mov
mov
jge
fbld
push
xor
sub
xorb
sub
shlb
pop
fstpt
xchg
aam
dec
jge
xor
aam
cltd
dec
and
cmpsb
jo
out
addr16
jbe
add
mov
jg
scas
movsl
cmc
xor
xchg
sub
arpl
push
fs
dec
pop
and
xchg
out
shlb
jmp
call
push
push
pop
jle
mov
lret
sbb
stos
cltd
xchg
adc
fcoml
jl
or
add
inc
xor
bound
fdivrs
out
lods
adc
jne
push
dec
mov
rorb
int3
mov
or
jnp
cmp
insb
aam
sub
sbb
mov
fsubp
pop
daa
inc
and
mov
xor
jnp
cwtl
dec
sbb
fstl
in
pop
mov
stos
xchg
add
ds
mov
jno
jl
ss
mov
inc
out
pop
in
icebp
lock
rolb
cmpsl
push
mov
outsb
fucom
cmp
daa
sbb
popf
push
divw
push
sub
or
test
pop
fidivs
call
sub
sub
mov
leave
and
mov
orb
fdivl
cvtdq2ps
or
adc
leave
jbe
cmp
shrl
xlat
xchg
inc
outsb
int3
fiadds
test
cmc
xor
mov
jno
std
out
xlat
movsl
mov
test
lds
add
scas
jns
xor
pushl
int
cltd
push
or
ds
pop
aad
xchg
sbb
stc
popa
ficompl
or
in
fcom
js
repz
xor
cli
adcb
arpl
fwait
in
add
inc
data16
cmp
std
dec
es
mov
mov
xor
push
scas
pop
xchg
xchg
jae
adc
lret
pop
mov
jo
mov
pop
ds
arpl
and
popf
imul
call
or
data16
jecxz
les
lods
add
rorb
cltd
xor
jno
das
inc
pop
dec
or
adc
mov
push
cmp
mov
nop
pop
mov
idivb
cs
jbe
jbe
cmp
add
imul
or
inc
cmp
daa
dec
mov
push
mov
mov
cs
mov
xchg
add
cltd
test
daa
pusha
dec
push
inc
fs
shll
bnd
bound
xchg
into
xchg
or
gs
lea
xchg
mov
push
idivl
cmp
popf
pop
aaa
sbb
sbb
popl
test
scas
sub
hlt
dec
dec
pop
adc
cld
adc
call
cmpsb
jmp
fbstp
imul
lds
pop
movsb
in
in
push
lret
jo
adc
mov
cmp
dec
pop
adc
pop
test
mov
mov
mov
sub
outsl
pushl
dec
xor
sahf
cmp
fldenv
push
and
pop
movsl
inc
sub
pop
or
pop
adc
mov
scas
adc
mov
mov
lods
mov
cmp
movsb
add
mov
sub
pop
mov
test
das
cmp
sbb
cltd
or
jns
mov
int
mov
mov
cmp
xor
jmp
shrl
movsb
xchg
jge
scas
adc
cli
mov
xchg
mov
jl
push
xchg
jle
and
lods
and
sub
sub
push
push
xor
int3
mov
adc
push
dec
jae
add
daa
shll
sub
in
orb
shlb
fdivr
adcl
mov
mov
loope
lds
fistpll
pop
lods
cmp
iret
or
into
fimuls
addl
pop
pushf
dec
std
arpl
test
inc
jns
mov
test
pop
jmp
push
xchg
icebp
sub
inc
cmp
and
push
das
pop
mov
xor
sbb
xor
mov
lea
lret
cmp
dec
sbb
repz
aaa
cmp
sub
outsb
xchg
sbb
mov
or
adc
es
mov
stos
movsb
pop
sub
xchg
mov
enter
adcl
scas
in
push
xorl
jo
stos
fwait
jbe
mov
aad
sbb
outsl
loopne
ja
dec
lahf
mov
sub
cmpsb
sub
xlat
pop
xchg
call
les
push
mov
imul
lea
enter
stos
jmp
aad
negb
sahf
jmp
adc
fwait
jbe
loopne
fldenv
mov
push
cmp
out
xor
pop
xchg
xlat
mov
or
lahf
jecxz
inc
repnz
mov
call
or
push
push
mov
dec
mov
pop
loopne
mov
fcompl
add
mov
addr16
lret
sbbb
push
shr
shl
rcrl
cmc
adcb
jmp
mul
jnp
sub
pop
xor
xchg
or
push
stos
es
repz
adc
mov
push
sbb
stos
lock
ret
jl
or
pop
mov
push
and
test
xchg
jno
xchg
or
data16
sbb
jno
push
and
mov
mov
ljmp
lret
mov
nop
mov
xor
cld
xchg
ficompl
inc
mov
adc
xchg
adc
mov
imul
jecxz
cmpsl
mov
push
shll
pop
ljmp
push
adc
cmpsl
jbe
fdivr
mov
fidivrl
in
push
mov
sbb
daa
fcmovne
pop
sbb
sbb
int3
push
test
cmp
jp
shrb
add
push
inc
into
fwait
cmc
sbb
iret
sub
or
subl
dec
xor
xor
mov
inc
push
cmp
jo
das
sti
fdivp
push
lea
jns
fwait
icebp
fs
and
mov
stos
out
js
cmp
lea
rorl
insl
add
icebp
fidivs
enter
out
or
xchg
xchg
pop
popa
xchg
mov
sub
mov
stos
xchg
ss
fcmovnbe
pop
adc
ljmp
adc
or
out
add
mov
mov
mov
jmp
xchg
add
jmp
daa
cwtl
pop
fldcw
gs
mov
mov
mov
fisubs
xor
and
cmpsl
daa
pop
das
add
jl
dec
out
rol
mov
sub
subb
in
test
test
or
rcll
xchg
inc
xchg
lds
es
scas
or
fsubl
call
mov
mov
fists
mov
insb
adc
cmp
in
mov
xor
sarl
mov
repz
jge
scas
inc
sub
xor
fwait
lret
lret
lds
cmp
jbe
cmp
dec
gs
loope
loopne
gs
sbb
inc
sbb
ss
fcomps
cli
shll
frndint
jle
imul
sti
xor
nop
loop
adcb
das
mov
inc
sbb
sbb
ficoml
stc
push
jno
divl
movsw
and
inc
sbb
xor
and
mov
add
and
call
mov
lods
jl
enter
outsl
jae
je
shll
mov
cmp
dec
xchg
sti
adc
inc
dec
pusha
test
mov
jle
mov
clc
les
js
loopne
xorb
mov
adc
mov
clc
mov
sub
sbb
and
dec
lock
addb
adc
xchg
pop
xorl
dec
and
add
jecxz
out
cmp
inc
sbb
insl
jnp
add
outsl
xchg
pusha
mov
inc
adc
int3
mov
enter
mov
mov
test
jp
xchg
sbb
xchg
push
je
cmp
adc
leave
loop
jp
dec
cmp
sbb
push
mov
mov
fwait
scas
dec
pusha
out
dec
das
mov
in
leave
hlt
scas
adc
or
shlb
inc
in
cmp
ja
stc
push
adc
in
lods
mov
loope
adcl
dec
and
int3
push
mov
inc
push
xchg
mov
call
repz
xchg
xchg
xchg
scas
jge
arpl
addr16
pop
repz
or
xor
repnz
iret
in
aad
push
hlt
xchg
fwait
iret
mov
int3
gs
lret
out
hlt
mov
inc
push
jge
leave
xchg
imul
mov
sbb
jmp
js
insb
stos
lods
dec
and
insl
lds
in
lds
cmp
mov
fwait
push
mov
dec
sub
fdivrs
mov
jnp
pxor
sbbb
dec
sub
ljmp
mov
inc
hlt
cmp
lds
test
push
popa
arpl
insl
idivb
movsl
mov
rolb
adc
loope
rcrb
fimull
jbe
jle
fdivs
or
xchg
xlat
inc
inc
std
bound
popf
out
mov
test
xor
jmp
or
call
inc
pop
xor
sbb
mov
pop
cld
cmpsl
daa
icebp
inc
es
cmp
movsb
pop
sbbb
aas
jb
jo
int
sub
icebp
imul
ret
push
mov
in
popf
jl
pop
pop
push
in
cltd
lret
aaa
incl
mov
pop
stc
mov
add
and
adc
sbbb
xor
jmp
mov
fdivs
adc
out
add
int3
dec
xor
cmpsl
xchg
dec
mov
mov
sahf
sbb
cs
push
mov
mov
mov
lcall
lea
clc
dec
push
mov
xchg
aam
imul
clc
pop
sti
imul
cmp
rorb
rorl
xor
xchg
cwtl
jle
in
push
mov
scas
xchg
enter
dec
or
stos
mov
out
ja
mov
dec
aas
movsb
mov
pop
out
loopne
add
sub
outsb
cmp
cmc
hlt
sub
icebp
mov
test
stc
and
adc
and
movsb
jecxz
fistps
incb
cmpsb
ret
mov
xchg
mov
dec
push
aam
pop
dec
arpl
adc
repnz
in
out
cmp
out
shll
pop
add
xor
mov
inc
insb
ss
dec
cmp
push
or
lret
stos
insb
andl
iret
stc
mov
mov
push
inc
das
dec
push
mov
cmpsl
pop
dec
sub
inc
into
outsb
negb
ss
jne
test
xchg
ljmp
adcb
mov
loopne
mov
push
inc
mov
push
test
out
iret
adc
test
dec
lcall
data16
loopne
mov
and
add
adc
cmp
and
mov
int3
bound
push
inc
dec
loop
in
sub
aas
aaa
fwait
mov
jae
jl
pop
lahf
mov
sbb
scas
lods
sub
int3
popf
dec
mov
xor
lahf
jb
imul
jne
cmp
dec
pop
insb
rcll
sub
sub
add
add
pop
jge
mov
scas
mov
pop
insb
movsb
fstpl
outsl
scas
xchg
clc
pushf
adc
add
lock
adc
repnz
xor
push
mov
adc
push
mov
out
aaa
push
test
std
in
cmp
sub
clc
lock
subb
pop
cmp
dec
stos
cmp
rorl
pop
jo
or
pop
je
sahf
sti
std
outsb
in
cmp
pop
shl
idivl
arpl
movsl
movl
sub
fs
pop
fists
in
push
stos
mov
in
ror
sub
arpl
loopne
cs
or
repnz
fwait
rcrb
mov
repz
bnd
dec
mov
pop
pop
adc
mov
jl
scas
xchg
pop
xor
sarb
push
sysexit
or
movsb
loopne
xor
and
xchg
and
add
xchg
pop
imul
fstps
pop
adcb
fwait
mov
outsl
or
popa
mov
ss
ret
cmp
push
sub
inc
sub
adc
jmp
pop
mov
pop
mov
orb
adc
test
inc
pop
push
jns
les
sub
leave
popa
dec
and
aas
push
and
pop
pop
icebp
jb
iret
in
xchg
adc
arpl
add
arpl
sub
hlt
xor
adc
or
repnz
mov
push
jno
pop
pop
mov
fwait
sub
insb
adc
divl
jne
jae
out
push
push
cmpsb
aam
cmp
mov
call
pop
push
jne
or
movsb
cmp
insl
fstl
repnz
test
mov
pslld
cmp
nop
testb
cltd
ljmp
mov
loopne
xor
or
pop
mov
adc
adc
push
into
xchg
rorb
into
subb
mov
mov
sbb
mov
cmpsl
or
jbe
movsl
clc
rcrl
jle
outsl
mov
roll
and
dec
test
sbb
cli
cmp
mov
mov
ret
sti
xchg
addb
es
aas
fsubr
sahf
fidivrl
into
sbb
and
pop
hlt
jns
insb
gs
dec
fistpl
push
xor
rorl
mov
mov
fmul
ljmp
xlat
xor
int3
adc
sub
pushf
mov
stc
cwtl
mov
icebp
pop
add
cmpsl
mov
stos
cs
subl
inc
popf
xchg
xor
jae
push
pushl
mov
divl
enter
xchg
pop
pop
loope
inc
sbb
mov
adcb
call
movsl
jne
jmp
pop
ljmp
lea
xchg
mov
rorl
jecxz
push
icebp
sbb
lahf
icebp
aam
inc
sub
and
push
push
loope
jle
cld
jg
jp
ret
mov
repnz
mov
das
shr
dec
pusha
movsl
les
hlt
mov
lds
rcr
ja
cmp
push
js
jmp
push
xchg
addr16
insb
adc
pop
testb
outsb
lea
test
jnp
dec
pushf
fsts
inc
ljmp
sub
mov
shll
push
or
je
inc
iret
pop
sti
cmp
cmp
stos
pop
inc
fwait
xor
lahf
outsl
cmp
sub
icebp
in
push
out
test
cli
cmp
adc
divl
and
cs
add
jl
lods
and
enter
decb
aam
xchg
daa
xchg
xor
sbb
call
push
mov
loope
jbe
nopl
jecxz
mov
les
addr16
sbb
pusha
sub
aad
loopne
fistpl
xchg
hlt
xchg
faddl
cmp
aad
out
add
sub
or
test
pop
dec
add
js
js
add
test
cmp
mov
sub
clc
shll
jns
icebp
push
adc
xor
mov
rcrb
jb
out
push
mov
cli
fists
push
sti
cs
cmp
out
cli
fstpl
mov
or
xor
and
dec
les
push
fbstp
pop
out
jp
nop
pop
bound
mov
sbb
subl
mov
cmc
mov
addl
push
insb
int3
in
adcb
in
mov
out
roll
jbe
cmp
sub
je
pop
cmp
test
cmp
push
mov
mov
pop
mov
sbb
mov
rorl
push
xor
icebp
shl
in
inc
jge
push
lods
aas
imul
add
sbb
mov
pop
scas
mov
xor
idivb
mov
aas
repz
jmp
mov
dec
add
jmp
xor
dec
mov
inc
stc
pop
lods
add
insb
pop
les
je
push
and
xorb
pop
fists
repz
pop
fdivl
xchg
out
cmp
add
ret
insl
fwait
arpl
fadd
and
mov
inc
icebp
sub
cli
aam
pop
mov
rorb
faddl
icebp
push
xchg
out
int
sub
mov
add
or
lds
loopne
lods
insb
mov
inc
popa
divb
inc
pop
cmc
inc
mov
rcrl
data16
cmp
mov
imul
xor
fcoml
std
aaa
jecxz
ret
or
add
jb
scas
mov
xor
and
aaa
add
mov
inc
mov
push
fdivrl
cmp
sub
jb
movl
adc
xchg
xchg
jmp
faddl
pusha
call
push
dec
cwtl
xlat
cmp
add
nop
out
xchg
cld
fcmovnb
int
fadd
mov
fidivrl
sub
sub
xor
xor
adc
andb
cwtl
add
push
mov
cmp
dec
inc
cmp
add
mov
das
pushl
jae
xchg
jb
jns
shlb
mov
scas
rcpps
push
xchg
out
dec
sub
add
inc
cwtl
call
add
mov
orl
lar
mov
call
cmp
cld
fiadds
dec
into
scas
jl
pop
lret
enter
pusha
inc
movsl
mov
in
dec
mov
jo
stc
std
or
mov
push
daa
lock
and
stos
mov
jb
mov
mov
jae
dec
repnz
sbb
ret
sbb
int3
imul
push
dec
and
imul
jmp
pop
in
stc
scas
xor
hlt
cmc
cwtl
adc
out
push
jg
mov
pop
out
mov
fdivl
jecxz
adc
push
push
stos
cmc
fscale
cltd
mov
xchg
xchg
cltd
pop
mov
imul
adc
push
mov
sar
sbbl
popf
xchg
adc
dec
mov
xchg
inc
add
cs
popa
mov
stos
loopne
dec
sbb
jb
inc
lea
jecxz
jno
dec
inc
dec
sarl
or
mov
iret
mov
mov
mov
cld
dec
inc
in
test
loopne
inc
out
pop
stc
mov
repnz
pop
lods
push
imul
sub
ljmp
fld
sbb
shlb
daa
bndstx
mov
mov
lret
sbb
push
jp
pop
inc
mov
jns
fiadds
mov
add
daa
jp
adc
cmpsl
hlt
xchg
mov
mov
popa
sub
xchg
orb
in
insl
mov
jae
mov
xchg
adc
in
lods
decl
add
xchg
sbb
das
arpl
jmp
mov
fwait
sbb
add
iret
xchg
fsubrs
xchg
repnz
into
or
mov
adc
fsubs
add
xor
xchg
ljmp
pop
pop
push
mov
jle
out
sub
shll
xor
push
stos
mov
mov
cmp
push
pop
outsb
popa
cmp
mov
inc
inc
adc
xchg
xchg
add
sub
std
sbb
xchg
in
stos
push
mov
jl
outsb
dec
jl
jmp
fdivs
cwtl
lret
lods
cmpsl
pop
dec
add
inc
jmp
pop
sbb
mov
syscall
ljmp
push
int3
hlt
xchg
jne
mov
mov
imul
dec
out
jne
in
mov
cmp
dec
lds
add
add
in
ja
imul
cltd
dec
test
mov
mov
call
dec
mov
mov
or
or
pushf
xchg
sub
xlat
xchg
inc
mov
pop
lretw
pop
jle
push
fidivrl
ror
pop
int3
lock
cmp
mov
jno
push
xchg
into
into
shl
sub
push
negb
mov
mov
add
lret
xchg
stos
dec
pop
out
adc
daa
mov
clc
stc
cmp
fcmovne
push
jo
imul
daa
outsl
cmpb
scas
mov
lds
int3
inc
xchg
cli
dec
jno
mov
sbb
in
mov
push
push
add
mov
xorl
pop
push
cmpsl
cli
jecxz
mov
or
mov
ds
push
pushf
sbb
dec
xchg
adc
insl
dec
fiaddl
dec
icebp
lret
scas
add
sub
clc
inc
hlt
call
popf
cwtl
jne
add
push
bnd
jb
mov
lcall
ja
outsl
sar
xchg
repnz
fucomi
iret
push
sub
les
enter
lcall
and
gs
jbe
popa
jnp
xor
or
xor
mov
xlat
or
popl
cltd
cmpl
scas
lahf
mov
pop
repnz
mov
bound
nop
outsl
roll
sbb
adc
mov
mov
je
sub
mov
out
cmp
sbb
iret
jmp
push
std
popa
das
sbb
cmc
lock
scas
fwait
mov
test
js
outsl
adcb
pop
dec
loop
inc
test
and
jae
sub
sub
fidivrl
icebp
push
adc
fidivrl
sarb
inc
arpl
ds
jge
push
cmpsl
push
inc
jae
addb
jmp
sbb
sbb
imul
jns
fnsave
into
add
mov
push
mov
stos
sbb
dec
pusha
mov
and
xchg
repz
out
sbb
jae
test
add
fidivl
cmp
jp
mov
pop
popa
sub
fldt
inc
sbb
mov
xchg
lret
inc
arpl
push
xchg
stos
xchg
push
xchg
cwtl
push
or
mov
lret
jge
decl
shll
sbb
rclb
mov
sub
push
mov
or
sub
aaa
inc
and
push
aas
and
dec
dec
cmpl
jb
lods
mov
movw
loop
or
cmp
popf
in
pop
cmpsl
jae
and
clc
je
data16
push
popf
xchg
cmp
mov
stc
adc
pusha
nop
out
push
ret
mov
arpl
testb
or
mov
imul
xor
lods
xor
or
push
pop
insl
dec
cltd
or
aaa
clc
xchg
cmp
inc
jbe
pop
gs
push
add
andl
dec
loop
fistps
loop
lods
out
test
mov
inc
dec
fildl
mov
fistps
fisttpl
dec
dec
call
inc
rcrb
pop
mov
inc
lds
sub
sub
mov
jmp
xchg
fstl
test
test
mov
cmc
sbb
inc
dec
pop
dec
push
xchg
cmpsl
in
lret
push
in
test
mov
cmc
icebp
push
or
aaa
adc
and
ljmp
lea
add
scas
in
mov
cmp
lahf
jnp
mov
iret
sti
hlt
jl
movsl
out
xchg
or
sub
lods
or
aaa
or
sbb
popl
mov
sbb
dec
pop
in
push
mov
lret
pushf
stos
in
hlt
scas
mov
xor
fbld
into
pop
cmp
inc
jne
push
call
xchg
pop
mov
pop
or
lock
shll
push
inc
enter
jp
outsb
push
hlt
mov
mov
js
dec
call
pusha
sbb
lret
cmp
cmpsb
icebp
dec
jno
push
test
loop
add
popl
sbb
dec
aaa
pop
loop
or
imul
negb
cwtl
inc
dec
push
jns
inc
leave
mov
mov
in
shlb
xchg
cld
mov
adc
xchg
movsb
loope
or
xor
adc
dec
dec
pop
mov
movsl
pushf
adc
adc
divl
sub
dec
test
inc
fst
xchg
ret
jnp
call
and
nop
lcall
jae
inc
jbe
pop
push
cli
ja
mov
or
cs
lahf
mov
mov
adc
jb
out
dec
in
pushl
push
cmp
sbb
pop
imul
test
cmp
xor
and
mov
inc
clc
sbb
xor
cld
mov
out
jno
push
push
roll
cmp
ret
push
jg
loope
mov
and
pop
out
gs
sbb
leave
mov
push
into
pushf
push
mov
mov
xor
add
in
test
inc
scas
neg
add
ds
xor
fnstcw
popa
inc
jl
lods
xchg
ficomps
jns
popa
aas
negb
daa
mov
sbb
add
int
imul
xor
cld
or
insl
mov
repz
fdivrl
rcrb
jo
jmp
out
xor
xor
ret
fldenv
sbb
push
jle
push
sbb
outsb
cmp
movswl
xor
add
cmpsb
pop
das
xchg
mov
lock
pop
rcll
sub
aam
jns
insl
ljmp
std
mov
and
jns
hlt
gs
repnz
inc
mov
gs
sbb
inc
lds
cltd
loope
fisttpll
cltd
xor
mov
fistl
lods
adc
push
lret
sbb
mov
lahf
mov
std
mov
rol
pop
adc
jg
push
in
pop
inc
ja
pop
int
in
mov
stos
jne
add
insl
call
mov
cmpsb
cmp
xchg
adc
jl
mov
shrb
pop
mov
outsl
sub
dec
mov
jmp
sbb
dec
shl
rcr
negb
fcoml
sbb
adc
insl
or
int
pop
sub
xorl
negb
or
or
fs
movsb
test
jbe
jge
jb
popf
rorl
mov
cmp
lret
mov
xchg
mov
out
mov
insb
sub
es
xor
test
mov
push
cwtl
xchg
sbb
insb
int
ja
inc
cs
fcoml
xor
jp
pop
push
paddusb
mov
inc
negl
sub
jle
cmp
leave
mov
mov
add
jne
gs
getsec
inc
pusha
int
fwait
push
cmp
or
lret
out
popf
loope
and
fisubrs
in
mov
mov
inc
lds
aam
loop
jno
roll
cmpsl
or
jne
mov
xchg
aam
setno
adc
lcall
dec
lea
inc
sbb
pop
in
mov
jno
xor
pushf
dec
cmp
popf
in
outsl
dec
or
movsb
pop
xchg
cld
test
push
adc
mov
shrb
dec
cmc
mov
cmp
xchg
repz
cmp
push
test
enter
mov
cmp
rclb
add
add
icebp
xor
and
das
jno
loopne
lods
sbb
mov
stc
mov
andl
mov
shl
shrb
xchg
repz
xchg
popl
mov
mov
stos
xchg
mov
jmp
fucomip
shll
jae
cwtl
call
xlat
ss
arpl
cs
lret
push
inc
test
pop
daa
jle
jne
jno
push
lahf
cmp
xchg
mov
movsl
xor
and
inc
xor
fwait
dec
inc
xor
stos
or
push
sbb
leave
inc
lock
pop
push
and
add
jge
sti
pop
outsl
mov
xchg
aas
add
test
ret
scas
mov
int3
cli
in
jecxz
push
xchg
push
push
add
cmpsl
mov
adc
xor
add
push
cmp
aad
iret
jmp
sbb
clc
ret
push
xchg
ret
in
mov
cmp
pop
adc
sub
jo
fnstenv
mov
xchg
and
xchg
and
fnstcw
mov
lock
insl
mov
or
inc
pop
pop
inc
int3
cmp
or
pop
mov
xor
mov
adc
ja
sub
fsubs
fwait
cmpsb
in
repnz
xchg
mov
ss
push
repnz
xor
or
mov
leave
in
ud2
bound
xchg
pop
pop
clc
lea
push
int3
xor
xchg
cs
mov
push
das
push
lret
mov
jle
push
fcoms
pop
sub
xchg
sub
test
push
mov
jbe
push
xchg
xchg
int3
add
ja
add
shrl
xor
adc
inc
push
shl
ljmp
iret
adc
shr
stos
ljmp
idivb
push
xor
sbb
jbe
mov
jmp
mov
add
mov
mov
and
sub
push
jmp
jmp
xchg
loop
repnz
mov
scas
cwtl
xchg
cmp
je
jmp
pop
adc
cwtl
jecxz
cmp
repnz
popf
xor
mov
test
xchg
mov
shr
sub
in
and
push
insb
xlat
adc
jp
movsb
cltd
xchg
inc
iret
cmp
jp
adc
lock
popf
out
xchg
dec
enter
adc
or
xlat
mov
stos
sub
add
and
xchg
dec
pop
out
mov
mov
adc
push
ljmp
pop
xchg
jo,pn
mov
aaa
lods
add
rclb
pop
sbb
cmp
adc
testb
push
and
lods
mov
jle
arpl
ljmp
xor
rcrl
inc
stos
je
lcall
push
sub
imul
dec
cmp
stc
sub
or
dec
push
int3
mov
ret
outsl
pop
lcall
fsubl
sahf
sarl
or
imul
and
cmp
push
inc
or
mov
add
inc
ret
adc
add
addr16
in
add
into
ja
add
fistpll
je
cmpsb
dec
and
popa
mov
xchg
testl
call
dec
jg
mov
mov
dec
add
das
lea
xchg
jl
or
loope
and
jbe
xor
jl
movsl
mov
or
scas
mov
jge
push
push
jbe
sub
dec
pop
push
sbb
push
aad
iret
adc
inc
push
push
mov
in
loope
push
pushf
es
test
out
aam
or
je
dec
xchg
pusha
mov
inc
fildl
push
sub
sub
push
in
cli
xor
sub
outsl
xchg
xor
pop
std
push
sahf
das
pop
lods
sub
sbb
jge
adcl
insl
xchg
pop
dec
cmp
dec
fbstp
nop
in
sbb
divl
dec
pop
jecxz
rcl
arpl
add
dec
lods
popa
rol
std
das
nop
js
pusha
movsl
lods
xchg
adc
dec
ljmp
fstps
dec
dec
add
scas
ret
dec
scas
and
nop
jae
push
sub
cmc
in
shl
mov
xchg
push
cmp
aad
popf
test
jg
sbb
lahf
jo
negb
das
and
jge
mov
cwtl
push
pop
cmc
jg
cwtl
xor
xchg
push
xorb
insl
adc
lds
ret
lahf
fsubrs
add
push
imul
test
pop
cltd
movsl
repnz
dec
int3
imul
or
cld
and
sub
xor
and
movsl
sbb
pop
mov
pushf
adc
out
inc
push
dec
xor
jmp
inc
lahf
cld
jbe
scas
or
sbb
test
xor
pop
mov
jne
dec
sti
pushl
cmp
cmp
adc
cltd
fsubp
repnz
add
fldenv
sbb
movsb
xchg
sub
cmpsb
insl
insl
arpl
int
cltd
and
lahf
out
cmpsb
out
dec
les
push
inc
imul
or
sub
mov
in
aad
out
rorb
out
out
push
dec
sbb
es
fwait
jns
in
fistps
jg,pt
lcall
jb
push
mov
call
cltd
sub
testb
and
into
mov
xor
mov
dec
xchg
and
xor
mov
pop
inc
mov
test
loop
mov
imul
add
repnz
add
pop
sbb
mov
xorl
push
adc
or
cmp
subb
ss
inc
pop
push
cmp
addr16
out
ds
jg
fstpt
mov
gs
xor
push
aaa
mov
add
mov
aaa
fdivp
push
lock
test
jecxz
jmp
inc
stos
pop
shrl
pop
negb
mov
clc
push
lret
pushf
aad
sub
or
jae
lret
aaa
xchg
mov
sbb
or
push
mov
dec
mov
inc
jae
cmp
sub
test
lds
and
jg
xchg
cmp
shlb
aaa
faddl
test
aad
and
cmpsl
leave
mov
cmp
push
mov
lods
shlb
or
jecxz
movsb
loope
call
outsl
inc
clc
cwtl
fildll
cwtl
mov
outsl
hlt
jecxz
pop
inc
dec
scas
adcl
inc
rorb
jbe
jns
call
fisttpll
icebp
arpl
mov
bound
shlb
mov
push
pop
dec
jp
xchg
push
ja
and
mov
pop
adc
neg
pop
or
rorb
daa
jo
jecxz
push
ucomiss
sub
into
mov
stos
imul
mov
lea
out
imull
addb
and
jnp
popf
cmp
dec
sar
lock
ja
hlt
aad
sarl
scas
mov
pop
stc
ds
sub
callw
in
pusha
call
pop
repnz
orb
mov
adc
pusha
cmp
cmp
adc
test
aaa
xchg
jecxz
cmp
outsb
dec
ficoml
test
jmp
fs
jne
xor
pmaxub
lea
adc
push
pop
sbb
dec
sub
jle
iret
or
lret
mov
pop
pop
jg
cmp
pop
jae
mov
push
sub
lahf
inc
out
shll
jbe
mov
xchg
cmc
jle
loop
cmp
imul
in
loop
js
pop
and
xor
jecxz
out
adc
cmpsl
movsl
inc
xorb
and
das
jb
jmp
sub
sti
fwait
dec
iret
adc
xor
inc
add
lods
adc
into
outsb
sbb
xor
jno
sub
ljmp
mov
jno
lret
jo
sub
jno
adc
mov
ret
stc
inc
cmc
icebp
pusha
ficoms
push
push
cmp
lahf
sbb
jns
jbe
and
out
std
out
ret
xchg
cmpsb
jae
pusha
and
int3
sub
clc
mov
ljmp
ret
mov
je
test
adc
fdivrs
mov
jno
add
iret
adc
jbe
sbb
jp
imul
sbb
daa
push
xchg
cltd
sbb
popa
sar
jo
ret
test
push
inc
cmp
xchg
sbbb
pop
add
iret
pop
repnz
outsl
lea
out
je
stc
scas
scas
add
cwtl
xchg
scas
add
add
push
sbb
scas
mov
insb
mov
scas
cli
addr16
in
std
cli
xor
dec
fs
mov
sbb
lret
sahf
ret
push
mov
mov
sub
je
mov
sub
fisubs
cmp
leave
mov
decl
cmp
fdivs
mov
mov
mov
jbe
fwait
mov
mov
cmpsb
mov
fildll
jle
mov
sbb
mov
push
loope
push
sbb
jl
or
add
push
movsl
dec
cli
mov
mov
mov
out
lock
es
std
aaa
les
gs
jne
push
insl
insl
inc
add
pop
xor
clc
imul
fcoms
lcall
pop
push
or
cmp
mov
aas
jge
dec
in
xchg
cmpsb
mov
mov
adc
cwtl
cld
std
mov
jno
rorb
nop
cmpsb
or
imul
loope
les
sti
arpl
test
daa
sub
mov
outsl
pushf
pop
push
jns
cmp
push
hlt
lret
mov
jge
ret
dec
shll
jmp
int3
push
in
cmp
in
lret
arpl
xchg
jg
arpl
mov
mov
subl
les
arpl
cltd
and
pop
mov
jl
sub
add
xchg
or
aas
bound
pop
sbb
es
cltd
outsb
insb
mov
xor
sub
push
cltd
jae
dec
cmpsb
mov
outsl
icebp
and
scas
popf
test
cmp
jmp
mov
xchg
or
les
xor
in
pop
mov
shl
dec
xor
les
mov
add
or
jnp
sbb
sub
aad
xlat
mov
jno
mov
xchg
cmp
sbb
test
push
jb
xorl
pop
aam
push
int3
stos
aas
shr
push
jle
lods
into
mov
dec
mov
jae
pop
in
xor
icebp
dec
bound
rcll
das
sti
ss
std
clc
aam
or
fistpll
stc
add
movsb
es
movsb
aam
mov
repz
loopne
jmp
sub
ret
push
fwait
mov
pop
xchg
mov
or
and
scas
inc
mov
adc
push
dec
lcall
roll
lods
cmp
fwait
dec
sub
inc
adc
in
test
js
or
insb
idiv
jno
lds
rclb
inc
and
imul
sbb
or
das
sti
push
mov
lods
mov
inc
shr
sbb
push
daa
jle
jmp
ljmp
fwait
add
jecxz
sbb
and
push
hlt
int
lret
sub
addr16
xor
mov
cmp
test
and
scas
mov
inc
add
cmp
out
fnstsw
movsl
sbbb
push
and
or
fs
add
push
push
mov
aas
daa
and
xchg
jecxz
test
adc
add
das
bound
dec
in
std
call
insb
lods
mov
add
in
add
cmp
pop
dec
nop
jge
hlt
mov
rol
std
xchg
mov
mov
push
enter
movsl
imul
jle
mov
and
dec
lds
fildl
jl
test
into
imul
fcomp
gs
jg
cmpsl
pop
push
clc
mov
imulb
imul
dec
sbb
xchg
in
and
rolb
sbb
jp
popf
scas
mov
test
push
test
int3
and
push
outsl
xor
in
sti
std
pop
cwtl
mov
jmp
sub
push
mov
pop
cmp
dec
pop
sub
xor
ret
adc
push
inc
loop
mov
push
fsubs
sti
jmp
mov
mov
mov
push
and
and
idivb
cmp
pusha
outsl
mov
sbb
out
imul
sbb
js
pop
sbb
pop
daa
dec
xchg
dec
icebp
adc
mov
sub
dec
cmp
dec
jge
dec
lcall
pop
rcrb
test
pop
cmp
rcrb
mov
mov
outsl
xorb
addr16
clc
das
add
out
je
cmp
sbb
or
imul
popa
inc
lock
rcll
push
mov
mov
loopne
pusha
mov
out
xlat
int3
imul
cmp
into
push
ud0
dec
sbb
stc
or
lahf
mov
scas
jne
lock
out
cltd
cmc
dec
jb
and
jne
mov
aad
lods
jae
xor
lret
stos
mov
sub
loop
dec
dec
lahf
adc
xchg
outsl
lret
sub
fnstsw
mov
dec
or
pop
lret
mov
xor
loope
sbb
adc
and
dec
push
jecxz
das
je
and
adc
jne
mov
pop
daa
icebp
sub
dec
loope
iret
pop
cmp
add
jle
add
je
pusha
inc
imul
mov
adc
jo
pop
xchg
push
sbb
ret
add
shrl
lcall
stos
sub
repz
lret
add
jae
jns
xchg
inc
fstpl
in
mov
pop
cmp
dec
or
test
stos
xchg
scas
pop
xchg
addl
iret
mov
nop
test
test
aas
cltd
hlt
push
push
push
imul
push
and
stos
ret
pop
jae
cmp
sbb
xor
add
adc
push
mov
nop
cmp
cmp
cwtl
push
into
jnp
mov
shrb
inc
int
add
lret
xor
cmp
lret
out
out
mov
movsb
adc
mov
inc
iret
jp
xchg
push
ret
mov
clc
ljmp
jle
xchg
in
push
adc
pop
push
pop
inc
sub
lods
mov
sbb
add
arpl
test
mov
loop
shll
adc
adc
enter
mov
push
fisttpl
ljmp
fld
test
fcomps
inc
xchg
mov
out
mov
lds
jmp
add
test
and
cmp
dec
int3
sbb
mov
and
test
push
or
pop
inc
orb
cmp
adc
dec
icebp
or
or
movsl
sbb
xor
sbb
mov
in
xchg
pop
fdivl
mov
rcrb
out
mov
push
sbb
aad
sub
scas
nop
jecxz
clc
push
push
mov
mov
push
cmovb
push
shll
xor
push
hlt
cmp
shl
loope
cmp
mov
js
sbb
out
or
out
inc
lret
cmp
sub
leave
cmp
push
dec
les
xchg
adc
cmp
sbb
lock
mov
xchg
out
mov
or
add
push
push
notb
mov
cmp
fucomip
repz
push
and
xchg
mov
cmp
out
cltd
dec
push
mov
and
or
jl
sub
xchg
inc
xchg
jg
jl
cmpl
lret
mov
movsl
dec
jno
sbb
xchg
jmp
notb
sub
aas
push
imul
incl
shll
lds
outsb
pop
inc
adc
xchg
mov
xchg
jne
and
inc
jmp
pusha
pmulhw
fwait
rcl
dec
daa
mov
push
lahf
jmp
inc
aam
jnp
or
cmp
sbb
xchg
xchg
test
mov
xchg
dec
pop
xchg
pop
cltd
lret
arpl
pushl
movsl
es
adc
mov
ljmp
or
aas
loope
loope
mov
sti
xor
cmc
cmp
shl
and
test
jmp
jne
xor
mov
and
dec
test
mov
xchg
cmpsl
pop
cmpsb
mov
push
dec
ds
rcrl
adc
inc
rorl
fwait
mov
scas
lcall
sub
pop
jae
jmp
js,pn
aam
pusha
jl
dec
enter
mov
and
test
cltd
xchg
adc
mov
cltd
jae
mov
sbb
mov
repz
push
cli
jmp
ret
mov
sbb
notb
jnp
pushf
pop
push
pop
ret
inc
rcll
xor
jb
gs
add
jbe
xchg
lock
jne
dec
sbb
popf
pop
mov
jns
je
jne
in
mov
mov
in
bound
adcl
mov
test
cmp
popf
xlat
xchg
or
cmc
sbb
lahf
psadbw
push
push
test
fcoms
xor
sub
cltd
push
sub
sti
rorb
adc
test
popf
mov
outsl
xor
call
and
aad
ret
bound
inc
stc
out
add
dec
xor
mov
sub
scas
jb
les
or
jne
mov
sub
hlt
pushf
aam
xchg
mov
cs
jne
sub
std
jl
outsl
call
inc
mov
test
rcrl
mov
mov
push
scas
rorl
push
daa
jg
adc
sub
add
gs
dec
dec
test
cwtl
mov
dec
mov
jl
test
fcmovb
loopne
es
push
outsl
pop
enter
pop
and
fsubs
or
inc
dec
dec
loopne
out
sarl
gs
loop
jl
dec
xchg
enter
or
pop
daa
in
sbb
ljmp
push
ss
mov
mov
xor
pop
jns
adc
rol
cmp
test
add
adc
pop
pop
push
push
loopne
and
adc
fcmovnbe
cltd
popf
sbb
or
cmp
mov
xchg
and
and
jmp
test
fwait
xchg
flds
pop
mov
fst
mov
mov
add
push
movsl
push
sbb
lcall
int3
fstpt
pop
cmpsb
jl
xchg
jmp
das
lds
mov
loopne
pop
cs
out
mulb
jl
aam
dec
mov
xchg
sub
dec
xchg
xchg
xchg
jp
or
cwtl
sub
repnz
mov
lcall
pop
push
sbb
jp
out
mov
pop
int
add
stc
es
jno
call
orl
out
movsl
je
push
mov
jb
push
dec
stc
rep
out
cmpsb
push
add
or
mov
ds
cmp
outsl
in
push
xchg
mov
daa
cli
inc
mov
scas
push
mov
orl
mov
xor
jnp
rorb
push
mov
loope
mov
negl
out
shrl
or
mov
mov
pop
sahf
push
cwtl
sub
mov
loop
rclb
dec
hlt
rcrb
repnz
out
and
xor
fistl
push
jp
cmp
cmp
data16
cmpl
lea
cmp
xor
hlt
xchg
jmp
and
xor
xor
es
fmull
setnp
mov
mov
cmp
pop
push
cmpsl
movsl
jecxz
cld
push
cmpsl
add
pop
scas
das
add
pop
fdivr
popf
lcall
andl
out
add
add
jl
sarl
cmp
repz
add
outsb
lea
push
push
jp
test
pop
mov
test
test
push
lea
test
dec
sbb
mov
outsl
cmpsb
ja
dec
fcompl
cmp
push
xchg
push
mov
xchg
imul
sub
push
jo
inc
cli
xchg
xchg
cmp
fisubrl
das
adc
shlb
jne
cwtl
dec
ret
add
mov
lock
mov
imull
int
pop
fsubs
popa
inc
loop
in
xchg
inc
daa
sahf
dec
call
js
pop
mov
lods
jno
or
out
mov
dec
stos
sti
data16
dec
lock
mov
int3
mov
mov
cmp
loop
leave
xchg
imul
outsl
add
jno
scas
push
fsubl
cmc
push
xor
loopne
sub
push
xchg
mov
lret
xchg
pop
ss
xchg
mov
mov
mov
sub
inc
xorb
add
cmpl
inc
stc
push
rorb
cmp
jl
fisttpll
sbb
jno
orl
xchg
sub
push
aam
lds
clc
sub
xor
mov
sub
popf
push
out
push
mov
sub
ljmp
push
insl
xor
sub
or
sub
dec
int3
jnp
mov
mov
cmp
mov
imul
repnz
mov
daa
mov
out
jl
dec
aaa
cs
loopne
sub
inc
pop
sbb
imul
ja
mov
push
and
push
add
mov
sub
cltd
in
iret
add
jae
or
jbe
iret
aaa
mov
stos
mov
jno
mov
lock
adc
inc
stos
push
inc
pop
or
lcall
test
sub
jmp
adc
repnz
mov
add
xchg
daa
adc
add
mov
out
mov
fisubrs
push
loopne
xor
jnp
std
cwtl
fidivs
pop
rclb
xchg
sbb
xchg
enter
pop
in
lods
pusha
mov
jae
leavew
dec
xchg
and
pop
insb
sbb
add
testb
rcrl
add
mov
add
fs
mov
add
sbbl
xchg
cs
or
pop
push
and
addr16
adc
into
call
aad
into
mov
cmp
pandn
mov
out
fcomps
in
out
and
jmp
lret
jge
dec
test
sahf
fldt
gs
aas
add
sub
out
add
ljmp
into
mov
into
dec
shr
lret
mov
js
adc
and
and
ret
loop
shrb
jecxz
aas
bound
mov
push
xchg
cmp
icebp
jg
adc
and
mov
xchg
test
lods
je
insb
into
mov
push
pop
insb
lea
sbb
mov
dec
addl
ss
push
mov
lock
and
mov
imul
cmp
sub
pop
sub
lret
ja
pop
enter
out
mov
sbb
imul
repnz
rcrb
neg
jmp
mov
jae
ficompl
jnp
xor
dec
mov
fdivr
jbe
gs
fcmovbe
loop
pusha
shr
jg
cmpsb
nop
lods
xor
rorb
adc
jb
sub
arpl
or
mov
mov
dec
loop
ds
add
ret
aad
dec
aad
cmpsb
test
lods
hlt
inc
stos
rcr
outsl
inc
or
adc
sub
lahf
push
scas
adc
in
out
sub
adc
out
mov
icebp
mov
es
data16
xor
adc
lahf
jg
das
mov
xor
popa
aas
pop
cmp
fadd
dec
enter
cmp
add
shrb
sbb
pop
mov
push
push
loope
mov
mov
repz
xor
bound
lahf
mov
jne
stc
ljmp
mov
mov
jbe
stc
cmpl
xor
inc
fdiv
rorl
insb
lods
dec
das
sub
lods
rcr
out
push
iret
jl
stc
nop
dec
xchg
sahf
popf
pop
shrl
xchg
out
ret
sub
lahf
dec
fcmove
mov
pop
sub
jns
xchg
clc
push
cmp
push
adc
or
mov
jae
call
rcll
pop
mov
cli
nop
push
test
push
divb
ljmp
and
ret
cmpsl
xchg
jmp
lods
jne
es
mov
ficoms
lea
mov
js
mov
jmp
xlat
add
scas
pop
data16
movsl
stc
sub
imul
repz
cwtl
out
jecxz
sub
pop
les
push
in
scas
inc
xchg
enter
dec
mov
or
icebp
pusha
mov
mov
stc
cmp
push
push
dec
dec
mull
push
repnz
mov
pop
roll
loopne
or
mov
out
popa
xor
push
scas
push
movsb
lret
mov
cs
and
sti
js
sbb
lds
add
cmc
pop
or
sbb
xchg
cwtl
lcall
je
sbb
jbe
mov
dec
je
lods
push
pusha
aaa
icebp
xchg
aad
sub
sub
jo
fstps
jle
sbb
mov
jp
in
aad
mov
aad
lods
fimull
sub
adc
jnp
mov
push
out
push
sarl
ds
andb
mov
arpl
cmp
sarl
insb
jp
add
fs
and
leave
xor
mov
mov
ficomps
out
dec
lods
fcmovnbe
push
fisubrl
aas
in
push
in
push
mov
insl
mov
mov
shrl
hlt
jno
scas
lret
cmc
icebp
insl
mov
repz
jle
mov
sti
std
insb
in
leave
cmpl
add
movsl
dec
sub
js
iret
bnd
xor
int
add
jle
mov
jo
outsb
mov
xor
or
jmp
ret
adc
ss
xor
cli
fiaddl
sbb
xor
or
addr16
sub
int3
dec
aad
mov
das
jnp
mov
xchg
lea
pop
mov
pop
mov
jp
mov
lock
push
xor
push
in
xor
aam
xchg
mov
xchg
pusha
andl
out
inc
cmp
movsl
loop
scas
cmp
inc
xchg
mov
or
in
outsb
sbb
mov
std
das
rorl
scas
das
and
mov
dec
sbb
add
mov
aad
add
imul
je
mov
arpl
fcom
dec
add
loop
nop
in
cwtl
inc
aaa
push
jbe
push
movsb
mov
adc
inc
ljmp
pop
add
sub
mov
lods
or
dec
ret
mov
dec
lret
mov
mov
sub
cltd
shlb
mov
ret
or
clc
insl
loop
mov
lahf
insl
xlat
add
lods
scas
sbb
mov
in
iret
lahf
xchg
in
out
cmp
pop
and
xor
mov
and
pushf
sub
mov
ja
cltd
xchg
adc
pop
pop
call
ja
dec
aad
in
aas
cld
aaa
shr
push
xchg
xor
jnp
dec
dec
pop
jp
js
lahf
adc
sbb
cmp
pop
int3
aaa
cwtl
incl
scas
jge
xor
cld
jns
or
leave
jp
fstl
bound
out
shlb
iret
test
out
outsl
inc
stos
insl
push
iret
jmp
sub
mov
xchg
mov
adc
xlat
mov
pop
stos
fistpl
jb
idiv
jmp
or
enter
addb
sub
idivl
jns
aaa
and
dec
dec
enter
dec
stos
int
xchg
int
xchg
std
insb
xor
daa
cld
outsl
mov
sbb
cmp
decb
adc
lret
sbb
cltd
inc
mov
mov
fnstenv
sbb
adc
incb
or
lret
or
and
imul
jae
mov
jle
std
sbbb
sbb
inc
inc
inc
and
inc
aam
call
jle
and
mov
inc
test
xor
in
xor
push
pop
test
sub
addr16
pop
mov
sub
scas
gs
mov
xchg
nop
fst
imul
aad
adc
fstpl
test
cmp
mov
sbb
aas
xchg
pop
out
stc
cmc
jg
lret
int
jl
adc
ror
sbb
pop
cmp
mov
sub
xor
fldcw
dec
rclb
out
xor
dec
add
in
sar
outsb
icebp
jge
mov
jb
aaa
test
outsl
test
cmpsb
jno
shll
push
cli
or
sub
in
cld
sbb
cmpsl
jae
lock
insb
mov
sub
mov
or
jl
jnp
cmp
sahf
aam
sbb
push
push
xchg
mov
xor
mov
lds
fstl
and
popa
pop
inc
fldl
bound
lods
outsl
das
sub
gs
lret
xor
test
and
xchg
pop
and
xchg
inc
pmaxsw
test
lahf
imul
dec
lods
jnp
movsl
movsb
daa
mov
test
jno
xchg
mov
or
jo
jmp
aas
or
jne
std
les
xlat
cmp
stc
xchg
call
sti
outsb
adc
mov
pop
xorl
mov
mov
imul
js
aad
xchg
imul
lret
cli
lock
and
lahf
seto
jae
mov
jle
int3
mov
add
sbb
repz
in
int3
sub
icebp
sub
sub
fnstcw
insl
lahf
sub
ret
sub
push
add
sub
push
adc
cmp
mov
push
sbb
pop
lea
ljmp
in
loope
xorb
and
push
mov
jnp
push
in
pusha
outsl
ret
bound
insl
dec
fisubs
movsb
inc
ljmp
scas
add
pop
pop
and
or
pop
das
nop
int
mov
mov
in
outsb
cmpsl
or
mov
jne
add
adc
clc
jbe
add
in
jmp
cwtl
inc
dec
jo
mov
aad
scas
in
xor
test
push
mov
pusha
andl
push
aaa
mov
hlt
imul
gs
jle
fs
in
mov
jg
jl
dec
cmp
test
push
pop
lds
sub
insl
cmpsl
dec
push
cmp
inc
jmp
jnp
sub
je
xchg
imulb
mov
loopne
inc
mov
sub
loopne
cmc
outsb
mov
xchg
mov
inc
and
pushf
or
add
mov
ljmp
pop
mov
lret
mov
popa
dec
push
hlt
add
sbb
out
mov
dec
add
sub
inc
xlat
int
xor
lahf
push
fstl
lods
mov
pop
cli
icebp
jge
push
mov
sbb
scas
cmp
out
loope
or
xor
xlat
pop
sbb
pop
inc
fisubrl
test
ret
test
sbb
jbe
mov
inc
adc
mov
in
xor
loop
push
xchg
data16
or
repnz
sbb
daa
lret
jb
xchg
das
sbb
add
mov
daa
sbb
xor
std
pop
ja
fistl
mov
xchg
cltd
inc
lods
xchg
aam
cmpsb
pop
pop
out
cwtl
subl
add
fs
aad
arpl
inc
xor
xchg
pop
inc
adc
jle
mov
push
or
imul
or
jecxz
movsb
ljmp
jl
xchg
aas
mov
adc
out
stc
jb
pop
xchg
adc
pop
add
pop
cmp
lods
pop
in
call
mov
out
mov
xlat
popf
scas
pop
aam
add
iret
add
outsb
mov
mov
inc
mov
xchg
fwait
push
dec
sub
jp
out
in
xor
lea
add
cmpsl
scas
test
call
inc
pop
cltd
push
pusha
loope
adc
mov
lods
lods
popf
aaa
push
sti
out
pop
hlt
fdivrl
adc
movsb
sbb
xchg
pusha
fmul
sub
lret
mov
cwtl
jg
xchg
pop
imul
inc
das
push
js
es
push
vpcmpeqw
add
pop
jmp
aas
mov
xchg
fsubrl
adc
rorb
bound
cld
jbe
aaa
mov
out
push
dec
addr16
mov
xchg
aaa
and
scas
cmpsb
adc
pop
addr16
adc
stos
mov
das
add
out
bound
sbb
push
repz
test
lahf
jge
movb
lahf
fsubl
dec
movsb
js
sbb
subl
sbb
rorb
test
lods
jb
jle
push
mov
inc
popf
cmpsl
jp
lret
and
fwait
repnz
mov
push
arpl
in
xchg
orb
shrl
jb
addr16
lea
sbb
push
aas
ljmp
adc
add
dec
xchg
xchg
or
stos
inc
mov
xor
and
aad
in
mov
inc
rclb
sahf
lret
xlat
ret
inc
sub
push
cs
mov
cs
jns
loop
mov
sarb
and
cmp
popf
mov
xchg
jb
es
out
mov
push
fimuls
jbe
sbb
dec
and
gs
mov
leave
fcomps
arpl
lret
or
out
enter
xchg
shll
cld
lods
ja
outsb
cs
mov
insl
mov
cmpsl
adc
dec
outsb
mov
xor
xchg
sahf
mov
inc
sub
mov
xchg
pop
sbb
cltd
fld
loope
push
in
ret
daa
divl
push
jl
sub
cmp
jb
or
into
xchg
call
mov
imul
inc
test
adc
pop
out
imul
out
adc
movsb
dec
inc
sbb
fwait
sbb
mov
fs
xor
outsb
mov
push
adc
jmp
repnz
or
loop
repz
out
sub
loop
rcrl
jne
ja
mov
mov
loope
adc
stc
and
dec
sub
push
mov
movsb
and
sbb
mov
pop
gs
sbb
ret
lret
dec
jbe
mov
test
jnp
xchg
mov
pushf
outsb
iret
adc
add
ret
icebp
and
add
sub
mov
pop
adc
pop
clc
jmp
xor
gs
lock
adc
push
dec
sub
mov
add
xor
dec
dec
pop
popa
cmpsl
sub
and
push
fisttps
mov
lahf
outsl
iret
mov
call
stos
shl
mov
lret
out
mov
jecxz
out
fs
mov
cwtl
scas
jmp
int3
subl
popa
fistps
mov
add
bound
pusha
in
dec
adc
cmp
in
sbb
sti
or
dec
mov
mov
xchg
cli
in
add
cmc
dec
shlb
bsf
push
inc
aam
pop
cltd
mov
imul
add
jno
sbb
sbb
xchg
out
mov
xchg
and
pop
sub
sahf
mov
fs
fimull
lret
loope
inc
aam
sbb
fucomi
add
fbstp
mov
add
push
ret
pop
rclb
aas
test
aam
or
lods
mov
aaa
cs
adc
mov
sahf
rorb
xchg
push
inc
lret
out
sub
lret
mov
aas
pop
sti
mov
dec
lss
cmp
cmp
rclb
lahf
rcr
repnz
sub
pushf
negl
test
inc
xlat
fldt
or
in
iret
cmc
lods
notb
mov
out
cs
pop
repnz
jmp
and
fimuls
sub
jl
and
add
sbb
incb
outsl
or
cmp
dec
mov
lea
cmp
mov
ja
adc
mov
and
add
and
sub
movsb
mov
dec
aas
mov
adc
cmp
out
data16
imul
jnp
push
xor
jp
call
adc
stos
mov
xchg
inc
ret
pusha
out
daa
push
jge
mov
pop
call
stc
out
sub
mov
jmp
fwait
test
cltd
inc
fwait
call
adcl
xlat
push
and
test
cmp
pusha
push
mov
mov
mov
xor
or
mov
lret
ds
stc
repnz
pusha
cld
lods
mov
ljmp
jl
fstpl
out
not
pop
push
fsubs
ds
in
inc
cmp
sub
mov
out
jo
dec
push
cmp
out
mov
and
dec
inc
dec
or
jp
xor
fiaddl
xchg
fwait
mov
sbb
lcall
daa
scas
call
push
jmp
xchg
push
inc
xlat
ret
jge
xor
mov
pop
push
outsl
out
imul
and
adc
mov
mov
jecxz
sbb
sarb
rcr
and
ret
loope
shl
in
negl
push
mov
xor
cmpsl
clc
xchg
popf
xchg
pop
mov
push
lock
hlt
lods
fcomip
div
pop
cmp
dec
sbb
dec
fs
cltd
loopne
repnz
lock
or
cmp
rcrl
loop
test
dec
sqrtps
jcxz
jo
fistps
test
and
hlt
popf
addr16
mov
push
push
jmp
scas
std
mov
push
test
sti
xrelease
jnp
cmpsb
cmp
ficoml
into
push
cmp
icebp
ret
jae
aaa
jecxz
in
jb
movsb
clc
lret
inc
inc
xor
pop
pop
mov
mov
ds
sub
mov
out
push
sub
in
sub
fsubp
pusha
push
jbe
lods
aas
sbb
jl
inc
fldpi
divl
sbb
xchg
mov
outsb
push
xor
cwtl
xlat
sub
lock
es
dec
bound
push
cmp
rcll
out
dec
mov
mov
scas
dec
stos
cld
lods
ret
sbb
pop
jo
je
xchg
xchg
dec
outsl
nop
das
jnp
fisttps
test
sbb
push
repz
mov
lods
sbb
inc
add
mov
xor
inc
xor
lret
inc
jp
adc
and
jecxz
mov
cltd
dec
dec
call
fmuls
xchg
xchg
sbb
out
test
pop
out
inc
adc
aaa
aad
sub
pop
add
test
icebp
inc
dec
fwait
daa
adc
sbbl
mov
dec
stos
or
fwait
adc
sub
xabort
loope
scas
les
jp
idiv
inc
jmp
rcll
outsl
jp
inc
clc
loop
or
aaa
mov
call
push
imul
loopne
pop
pop
divl
pop
jns
decb
sbb
pop
xor
cmpl
ds
inc
jae
sbb
inc
lahf
mov
out
mov
mov
push
inc
push
mov
fstpl
sbb
push
mov
insb
lahf
add
sub
pop
lcall
hlt
fyl2xp1
mov
and
lret
sbb
sti
cmpsb
xchg
decb
repnz
js
mov
mov
push
mov
or
pop
andb
push
js,pn
adc
std
lods
adc
ficompl
push
dec
xchg
push
andb
cmpsb
push
mov
push
lds
xor
mov
ds
es
xchg
sti
push
mov
or
mov
inc
shll
jo
pusha
sbb
mov
enter
mov
push
or
xor
popa
cmpsl
and
ret
cmp
into
dec
pushf
call
ror
sub
mov
jp
pop
cld
add
pop
gs
mov
push
inc
ret
cmpsb
in
out
xor
aad
xor
cmpsb
ja
lds
or
mov
cmp
sub
lret
inc
pusha
daa
xorb
movsl
subb
mov
sahf
lock
adc
adc
aam
mov
or
out
mov
fwait
inc
mov
dec
rorl
fs
test
flds
and
add
xor
jg
fisubl
mov
jecxz
add
push
or
aaa
mov
repnz
cmc
xor
push
incb
mov
sbb
sub
and
push
icebp
lret
fildl
xlat
test
dec
or
mov
dec
sub
push
out
fmulp
sbb
nop
outsb
andb
fidivrs
jbe
test
cld
lret
sbb
cld
lods
xlat
pop
dec
jle
test
pop
add
icebp
js
dec
push
mov
cld
icebp
or
adcl
xor
in
es
xchg
jne
out
js
mov
or
sbb
ficoms
mov
mov
scas
jno
pop
or
js
scas
ret
xor
pop
sub
pop
test
and
add
cmc
leave
add
shr
lock
jo
and
add
out
mov
jno
inc
push
add
loope
pop
jno
push
add
push
and
sbb
add
inc
imul
mov
push
jns
or
lret
mov
pshufw
orl
mov
mov
mov
pop
mov
test
mov
insl
or
arpl
add
and
sbb
or
aad
adc
or
test
sub
dec
add
adc
jae
fcoml
cld
es
popa
insl
cmp
or
scas
fdivl
cs
fs
mov
pop
mov
pop
rcrb
or
jae
outsl
add
pop
testl
jno
jne
ja
pop
jo
in
insb
cmp
data16
pop
pop
push
jg
cmp
xchg
paddw
loope
fsubs
dec
lahf
push
lock
test
or
pop
pushf
mov
pop
cmp
adc
inc
adc
or
in
stc
mov
pop
int3
xor
jg
ja
pop
xchg
pop
nop
sahf
insl
and
test
lock
movntps
addr16
loope
push
xchg
mov
cli
cmpsl
cmc
lahf
cmp
add
jecxz
dec
mov
ret
cld
lret
cmp
sbb
insb
push
jmp
pusha
dec
jmp
sahf
pop
adc
adc
dec
mov
or
sub
mov
into
insb
jge
out
jmp
loopne
mov
in
push
xchg
inc
adc
or
cs
enter
xlat
or
jg
cmp
sbb
in
lock
pop
cmp
clc
out
mov
insl
cs
sub
popf
fimull
inc
ljmp
pop
lahf
insb
inc
in
sbb
movsb
sbb
clc
jmp
sub
push
mov
ret
pop
data16
ss
cmp
sub
std
push
int
sbb
mov
sbb
adc
pop
mov
out
jno
push
lcall
mov
mov
mov
fadds
pop
dec
jl
mulb
imul
adc
xchg
adc
or
sbb
loopne
mov
fcmove
push
pop
mov
cmp
aas
in
pop
dec
mov
scas
iret
insl
mov
iret
shll
call
cmc
ljmp
ss
imul
mov
outsb
lret
push
cld
mov
ficoms
fistpl
fs
jge
test
div
insb
adc
idiv
pop
xlat
push
or
push
jno
lock
and
fstps
shrd
stos
adc
hlt
mov
lret
and
cltd
shll
add
xchg
ss
push
lcall
gs
sahf
jo
jnp
or
enter
adc
pop
push
adc
sub
loopne
xchg
lods
ljmp
and
test
xchg
fldcw
mov
mov
pop
adc
outsl
or
insb
test
add
cltd
jge
not
push
sub
cmc
mov
icebp
imul
mov
data16
shll
fcmovb
mov
or
xor
mov
shrl
sti
dec
xor
cmp
mov
push
sub
mov
enter
rcr
and
cmpl
test
mov
movl
nop
cwtl
push
xor
stos
loope
push
fwait
add
imul
repz
push
push
push
aaa
test
or
cmp
cld
dec
jae
add
push
scas
stos
jns
nop
outsl
movsb
out
data16
jae
inc
sub
das
out
cld
call
nop
loop
cmp
xlat
js
inc
aad
stos
push
fs
imul
add
push
xorb
xchg
es
out
jne
insb
inc
data16
lret
enter
sbb
lea
push
pop
inc
cmp
mov
inc
rorl
lds
and
sub
jmp
das
push
jae
rcl
pop
das
addr16
lcall
xor
addr16
jae
sub
imul
subb
mov
lcall
fs
dec
mov
aad
pop
sub
rorl
push
push
xchg
ljmp
fnsave
movsb
inc
dec
popa
or
push
pop
xor
test
pusha
cld
and
in
xchg
insl
inc
adc
loop
cmpsb
aam
in
out
push
cmpsb
xor
sbb
mov
ret
icebp
and
adcb
or
cmp
call
sub
inc
idivb
add
inc
xchg
jnp
xchg
subb
inc
mov
aas
loope
mov
aad
shl
mov
xor
push
pushf
cmp
into
fs
dec
cmc
pop
push
popa
pop
push
push
xor
ds
loope
sbb
pop
decl
ret
pop
jne
jae
scas
mov
pop
testb
das
inc
test
xor
pop
gs
jnp
shrb
pop
call
jg
test
sub
out
dec
std
pop
dec
addb
into
or
shlb
push
repnz
pmulhw
jle
cltd
mov
cmp
jl
popf
out
or
int
enter
adc
pop
xchg
push
shlb
notl
lock
cltd
cmp
or
push
gs
daa
and
inc
mov
loopne
push
int
push
adc
int3
jmp
xchg
pusha
or
sub
adc
dec
lret
fmuls
clc
xor
test
rcrl
pop
in
xor
xor
xor
push
dec
lahf
xchg
mov
push
aaa
cmp
subb
jmp
popf
cmpsl
mov
xor
mov
insb
jne
or
jo
and
inc
and
sbb
in
push
hlt
dec
popa
jo
cmpsl
pop
sbb
mov
out
scas
dec
loopne
mov
fnstcw
stos
cld
out
mov
add
fldcw
nop
int3
jbe
and
outsb
mov
repz
jl
arpl
cmp
cli
fwait
xor
adc
xor
xchg
call
jb
into
mov
arpl
nop
test
aad
arpl
inc
sub
pop
enterw
jle
mov
test
sub
mov
addr16
andb
mov
mov
push
dec
es
mov
inc
test
dec
call
push
jecxz
xchg
mov
cmp
inc
and
fucom
cmp
in
shlb
mov
mov
sahf
out
in
test
mov
test
pop
mov
xchg
inc
xor
mov
iret
outsb
inc
pop
decb
adc
out
aad
repz
out
dec
lahf
push
sahf
sbb
cli
dec
jo
pusha
into
push
adc
cld
pop
jae
orl
push
ret
jmp
add
pop
mov
push
outsb
mov
test
mov
inc
or
outsl
inc
or
pop
push
dec
lods
loopne
cmp
add
aad
push
or
add
mov
idivb
sbb
xchg
nop
inc
cmp
ud1
jns
add
fisubrl
repz
xor
je
insb
mov
mov
cmc
in
cld
sub
jnp
inc
aad
movsb
loop
xchg
shl
add
lret
daa
popf
insb
gs
mov
idiv
jno
mov
xor
sub
imul
lds
jo
fistl
inc
sub
inc
cmp
xchg
dec
in
dec
cld
jge
mov
inc
repnz
pop
xchg
in
cwtl
into
fwait
outsb
xor
or
js
sbb
enter
sub
daa
mov
clc
decl
in
mov
sahf
shl
pop
cltd
jno
ret
mov
cmp
mov
dec
cmp
movsb
pop
jmp
cwtl
outsl
scas
and
es
add
mov
push
or
imul
test
adc
outsl
and
xchg
jnp
loope
mov
scas
test
sub
add
imul
movsl
lcall
sub
sub
xchg
dec
sbb
popf
push
daa
ss
xor
jle
mov
sub
fsub
fwait
jae
test
jp
aas
movl
jae
scas
dec
or
cld
inc
fldl
push
hlt
jbe
cmp
mov
xchg
cmc
addr16
ret
cmp
fldt
out
mov
pop
and
jns
jg
inc
bnd
cmp
cld
nop
cmp
ret
das
es
mov
mov
jg
jae
js
mov
inc
loope
pop
insl
fidivrs
mov
xor
sub
outsb
push
pop
inc
int
ret
out
adc
std
adc
xor
xor
les
push
dec
scas
int
pop
ret
mov
dec
push
add
sbb
es
push
setb
jp
jecxz
pushf
je
aad
call
cmp
adc
int
mov
stc
and
xchg
jnp
data16
push
add
mov
das
imul
adc
cmpsl
scas
mov
pop
aaa
lods
mov
inc
daa
jbe
dec
jmp
fldenv
insb
add
sbb
jbe
rcr
lock
outsb
jl
cmp
push
test
dec
pop
mov
or
xchg
cs
dec
inc
pop
rolb
push
aam
jb
mov
cmp
sbb
rorl
je
loope
xchg
shrb
stos
pop
out
movb
push
daa
sub
adc
mov
push
test
sub
sub
mov
xchg
xchg
jo
mov
jp
ljmp
dec
inc
mov
icebp
mov
inc
jmp
shr
inc
lahf
push
inc
mov
popa
movsb
mov
popl
mov
adc
jne
dec
iret
cmc
sbb
roll
inc
xchg
mov
mov
roll
cs
lret
movsl
daa
mov
push
pop
inc
jecxz
sti
cmp
mov
arpl
bound
lahf
xchg
xchg
inc
dec
mov
adc
cli
jns
pop
adc
adc
cltd
fbstp
mov
fidivrl
xor
mov
cmp
push
sub
or
std
mov
sahf
push
mov
mov
pop
rcrb
cmpsb
adc
shlb
cmp
inc
xor
jbe
jnp
test
pop
mov
mov
setnp
sub
inc
mov
jecxz
xchg
leave
sahf
pop
push
popa
sahf
mov
aas
mov
aas
divl
or
iret
or
cwtl
stos
xchg
fmuls
shll
cwtl
sub
sbbl
int
mov
mov
add
ja
ds
cmp
les
shll
insb
repnz
dec
repnz
fdivl
xchg
push
addr16
dec
pop
push
and
push
in
ss
mov
faddl
xor
aam
nop
das
mov
xchg
stos
adc
subb
jns
iret
jg
or
lret
adc
add
out
push
insb
into
push
ds
dec
testl
ja
inc
mov
scas
repz
ds
and
mov
mov
test
push
jnp
lock
xor
push
and
jl
psrlq
sub
out
push
test
icebp
pushl
pop
stos
mov
push
imul
cmp
insl
dec
adc
push
std
test
add
test
fcmovb
dec
jns
stos
cwtl
imul
add
ss
into
lret
into
add
push
jne
sbb
jno
lahf
mov
cmp
jae
xchg
ret
jbe
push
daa
leave
stc
mov
push
movsb
test
inc
push
dec
and
add
mov
out
inc
aam
mov
in
jno
xchg
test
inc
movsb
inc
sti
sbb
inc
push
sub
dec
sub
lock
fidivl
mov
aaa
mov
popl
cld
mov
and
addr16
test
std
in
sub
add
jae
cmp
data16
mov
sub
cmp
jnp
push
push
add
jo
mov
and
xor
nop
mov
and
fs
pop
stc
push
cmp
mov
mov
mov
add
adc
push
mov
mov
data16
ljmp
mov
xchg
jns
lcall
inc
movsb
call
daa
addr16
mov
pushf
xchg
lahf
pop
dec
add
sbb
push
aad
cmp
mov
mov
test
or
dec
and
sub
scas
cltd
imul
mov
inc
sahf
cmpsb
mov
add
hlt
mov
push
jmp
pop
mov
xor
repz
or
repz
pusha
pop
test
mov
adc
sub
lret
add
es
cltd
mov
rcl
pushl
cmp
inc
jno
cmp
or
lods
or
in
lret
pop
inc
daa
pop
mov
notb
es
sub
push
jmp
xchg
and
and
rclb
jo
sar
fs
sub
sub
loop
push
pop
in
sub
ror
xchg
scas
sub
mov
sahf
call
fsub
cltd
lcall
mov
xchg
push
inc
scas
jb
lret
jl
lret
pop
loop
mov
add
pop
sbb
mov
stos
sbb
popa
pop
xchg
enter
test
mov
je
sti
xor
dec
aas
ret
das
and
push
jl
leave
xchg
pop
pop
pusha
sbb
jecxz
xchg
nop
jge
adc
cmovb
mov
lock
mulb
fcmovu
div
js
loopne
cmp
into
sub
push
sbb
pop
adcl
imul
xor
push
or
cmpsl
or
fmul
and
ljmp
adc
int3
fwait
negb
repnz
gs
mov
pusha
adc
sarl
js
icebp
mov
or
push
adc
mov
je
jg
add
adc
push
cmp
mov
mov
dec
push
mov
stos
sbb
fisttpl
arpl
pop
xor
into
fdivrl
mov
sbb
cwtl
xchg
push
push
aam
push
cmp
pop
xor
xchg
insb
and
mov
not
out
and
and
arpl
adc
or
jne
jmp
sbb
or
into
mov
pop
fwait
xor
pop
add
mov
int
pop
push
sub
xchg
dec
sbbb
inc
dec
dec
xchg
addr16
inc
jmp
or
pop
cmc
lods
and
fdivl
icebp
pop
mov
and
inc
pop
and
mov
push
mov
mov
out
xchg
test
mov
aam
mov
and
iret
cmp
xchg
xchg
loop
out
rorl
inc
arpl
arpl
mov
and
aam
pop
lahf
daa
mov
scas
mov
sbb
and
std
sbb
inc
movsb
das
lock
