jp
dec
cmp
fcoms
mov
pop
push
sub
pop
xor
adc
gs
sub
pop
and
cmp
and
loope
ja
push
adc
popf
dec
push
sbb
pop
fisttpl
mov
imul
test
push
cmp
fbstp
ret
hlt
xchg
lds
cmp
test
aas
sub
and
lods
sbb
pop
imul
xchg
xchg
mov
test
dec
les
adc
insb
in
faddl
mov
jns
and
outsl
dec
cmpl
xchg
and
sub
xor
and
int
push
mov
cmpl
mov
fwait
jbe
xor
mov
dec
nop
in
or
mov
xor
xchg
jmp
and
rcrb
sahf
xchg
jno
ja
sub
pop
fwait
shrl
xchg
push
jg
mov
push
pop
leave
and
aas
rcrw
iret
enter
xor
jmp
cltd
cmp
fdivrl
fsubrs
arpl
out
cltd
push
sub
pushf
or
iret
aam
inc
xor
orb
or
sahf
or
jbe
in
or
jmp
sbb
and
hlt
mov
cmpsb
fsub
pop
jmp
xorl
mov
mov
into
cmp
int3
or
es
jne
xchg
pop
mov
lret
cltd
mov
js
push
rcr
cmp
mov
into
inc
push
icebp
mov
xor
bound
sub
mov
xor
pusha
fwait
adc
js
mov
xchg
sbb
out
repz
push
and
or
clc
lds
sub
out
push
cwtl
fisttpll
aam
lods
test
dec
inc
pusha
xchg
fcoml
sbbl
jns
pop
ficoms
inc
mov
and
fidivs
movsb
add
push
push
aaa
incb
jle
test
cmpsb
loopne
adc
xchg
sahf
xchg
leave
rclb
imul
cmp
imul
aad
dec
addr16
inc
inc
xor
fwait
xchg
lret
ja
outsl
and
repz
xchg
jmp
shrl
test
aam
mov
adc
pop
pop
push
jno
fadds
mov
jbe
mov
lret
addr16
pop
dec
sbb
xor
inc
jge
das
negl
std
dec
dec
icebp
scas
sbb
pushf
and
dec
das
sub
test
fistps
outsb
jno
inc
and
orl
xchg
addr16
stos
lahf
inc
cwtl
push
and
test
sbb
ret
and
adc
and
dec
push
pop
adc
cmc
fbstp
fdiv
jnp
outsb
jb,pt
lds
pop
sub
jl
sbb
andb
aaa
jmp
add
jp
idivl
push
jp
gs
pop
ja
lods
es
in
stos
and
imulb
dec
mov
sti
pop
ljmp
js
pop
mov
xor
jg
lea
mov
scas
es
jl
data16
rorl
dec
insb
sub
pop
and
scas
movsb
movsl
mov
loope
xchg
shlb
lods
ret
orl
rol
lea
xorb
mov
lea
lock
iret
pop
inc
ljmp
rep
rcrb
sub
cli
sub
ret
sbb
mov
fsin
xlat
cmc
sbb
cmc
mov
push
mov
inc
stos
dec
inc
pop
cmp
push
fidivrs
jmp
inc
sbb
jmp
mov
lods
sbb
enter
lds
lret
jns
inc
mov
pusha
pop
push
mov
clc
negl
xchg
mov
jae
push
cmpsl
dec
insb
sub
hlt
popa
rcrb
mov
repz
lahf
xor
jno
repz
sub
sti
mov
mov
inc
lods
pop
mov
andl
roll
outsb
jge
arpl
push
push
inc
jl
or
in
ret
mov
and
inc
jne
jle
sub
mov
xchg
dec
shr
std
in
orl
test
aaa
mov
add
mov
jp
aad
aas
xchg
stos
cli
adc
shll
shlb
inc
push
lahf
xchg
adc
insl
enter
fdiv
pop
movb
daa
push
jns
cmpsb
ss
in
je
test
xor
lahf
jl
lcall
xchg
adc
pop
lods
loope
inc
fistps
fldl
mov
dec
xlat
andl
imul
sbb
ja
ret
adc
sub
je
stos
mov
popf
stos
fiadds
xchg
mov
pop
dec
push
push
push
outsl
mov
ret
pop
push
push
jnp
mov
std
imul
not
aas
shrl
stc
hlt
scas
int
in
pop
sbb
aad
clc
aad
push
movsb
fiadds
pop
push
adc
fimull
jl
pop
fwait
sti
sbb
fdiv
sbb
jb
dec
xor
test
mov
push
out
movsl
pop
loope
fadd
add
pop
mov
push
fdivl
leave
ljmp
xchg
cmp
mov
inc
and
adc
mov
lahf
test
xchg
fwait
jb
jl
jne
repz
out
aad
pop
rcrb
ret
int3
xor
fisubl
adc
push
out
ret
imul
testl
iret
andb
jg
pushf
decl
ss
int
out
fsub
test
mov
add
dec
fwait
shrb
and
ficoms
mov
das
mov
repz
adc
mov
call
jle
nop
and
cmc
insl
icebp
sbb
out
inc
inc
pop
mov
sti
fwait
int3
lret
imul
jge
and
xchg
push
arpl
jno
add
cmpsl
stos
dec
rorb
sarl
adc
sbb
mov
imul
cmp
adc
jne
cmpsl
in
inc
rolb
cmpsl
or
mov
xor
into
fbld
call
out
stos
or
cmc
xor
xor
xor
adc
sbb
push
cmp
into
inc
mov
js
cmp
pop
push
xchg
cmp
jo
xchg
mov
push
in
sub
bound
xor
pop
inc
ret
sub
movsl
insb
in
mov
loopne
movsl
mov
push
cmpb
ss
jl
cltd
jg
cmp
jg
pop
xchg
xchg
dec
in
call
sub
sub
lahf
pop
fbld
mov
iret
ds
cld
inc
pop
jl
ljmp
lods
jecxz
cmp
or
mov
sti
mov
push
xchg
mov
lods
fwait
adcl
xor
call
mov
pop
dec
push
lods
mov
fisttps
sbb
repz
fnstenv
icebp
add
addl
imul
out
jmp
rcrl
out
adc
cmp
push
imul
inc
push
fldcw
dec
or
mov
fwait
rol
jmp
xchg
shrl
xchg
sahf
pop
in
fstps
lret
ficoms
dec
dec
pop
cmpsl
jo
inc
mov
jo
and
cmp
push
rolb
ret
repnz
push
mov
pop
jae
rcl
mov
mov
or
adc
lods
icebp
frstor
mov
pop
shrd
dec
lret
xor
pop
aad
fstpt
scas
pop
imull
mov
and
pushf
xor
pop
jle
dec
push
mov
sbb
stc
jo
lcall
and
outsl
xchg
push
pop
adc
push
add
dec
and
jno
aaa
push
mov
jmp
in
push
movb
mov
jp
mov
xlat
push
or
test
popa
clc
or
cwtl
dec
rorl
ret
lea
dec
int
jo
add
adc
xchg
mov
xor
jo
xchg
dec
loop
in
mov
fisttpl
movsb
sbb
xchg
mov
test
cltd
pop
cmp
xor
xlat
push
loope
and
hlt
sub
pushf
iret
mov
pop
pop
push
cmp
movsl
andl
loop
xchg
dec
movb
enter
fwait
sbb
cmp
aas
xchg
mov
imul
mov
jg
popf
negl
xchg
popf
loop
cmp
cli
stos
mul
jl
and
jg
jns
sub
fldl
xor
mov
adcb
andl
push
movb
mov
inc
sbb
jnp
add
lret
sahf
enter
test
xchg
aas
fwait
jo
out
stos
and
mov
mov
sar
or
cmp
lds
nop
dec
movsl
lea
sub
gs
aad
fcmovnbe
test
xchg
jne
mov
adcb
daa
ss
test
dec
mov
jp
out
aas
or
hlt
decl
sbb
in
sti
jae
jno
inc
out
or
mov
dec
jae
fnstcw
fsubl
shlb
mov
mov
ret
testl
movsl
cmp
test
lahf
mov
xchg
add
jge
idivl
cmp
aaa
push
jns
adc
push
cltd
movsb
xchg
mov
sbb
dec
fcoms
mov
test
mov
and
push
and
and
rcrb
xchg
cs
sub
insl
cmp
dec
gs
aaa
push
lds
rorb
add
mov
push
dec
pop
mov
loope,pt
xchg
lret
outsb
inc
dec
sub
mov
aas
push
dec
jp
mov
sbb
pop
pushf
sahf
mov
add
fcoml
mov
sbb
cld
mov
fadds
ficoml
js
add
and
jno
scas
outsb
lret
rcll
xchg
mov
test
cltd
inc
shrb
and
test
fisttpll
mov
fidivl
sbb
loope
repnz
faddp
or
dec
ret
mov
pop
add
dec
adc
mov
jne
mov
sbb
addr16
inc
push
daa
pop
popa
loopne
or
loop
push
mov
xchg
xor
mov
add
imul
dec
dec
dec
adc
fisttpl
push
clc
xchg
stc
sub
mov
and
test
xor
js
stos
test
movl
dec
loopne
xor
notl
push
xchg
shll
out
cmp
mov
inc
jae
xor
flds
int
cltd
repnz
loop
fs
lret
or
and
jbe
inc
jle
stc
mov
mov
or
pop
stos
cs
xchg
cmp
fs
pop
push
es
sbb
cmp
jmp
xchg
or
clc
xchg
es
movsb
and
xchg
cld
inc
out
out
cmpsl
jbe
inc
sar
gs
ret
lods
stos
into
je
rol
sub
jle
ret
xchg
aam
add
repz
cli
xchg
insl
dec
mov
add
dec
add
lock
pop
rclb
push
popa
or
push
mov
ljmp
ret
lcall
mov
cmp
xor
call
fnstenv
and
pushf
fcmovne
cmp
add
aad
and
push
mov
pop
in
cmc
mov
cmp
rclb
in
sub
mov
adc
in
int
mov
cltd
sub
pop
sarb
mov
mov
dec
ret
aam
xor
xor
sar
mov
jb
in
push
xchg
mov
or
insl
jae
mov
add
pop
sub
push
inc
daa
dec
enter
call
rorl
jmp
pop
mov
ja
movsl
pop
and
mov
mov
mov
movsl
adc
xor
and
xchg
xor
jmp
loope
push
mov
cli
sub
push
test
push
inc
iret
pop
or
jb
fldenv
jg
lods
testl
jo
dec
jecxz
mov
std
fcomps
mov
push
sti
es
cmp
mov
sub
insb
dec
psrlw
sub
inc
jb
and
data16
lds
jecxz
mov
or
mov
outsl
movb
scas
or
and
pusha
mov
shl
inc
mov
adc
scas
xchg
into
dec
and
and
inc
mov
or
sub
sub
push
sub
sahf
cld
loopne
les
pop
jb
das
mov
daa
pop
xor
dec
mov
aaa
dec
scas
mov
mov
outsl
push
inc
adc
cld
add
movsb
sub
mov
ss
sbb
mov
push
mov
popf
lret
das
pop
jno
mov
mov
cmp
je
sbb
rcrl
cmp
sub
popf
in
add
cmp
xlat
out
popa
fildll
xchg
lret
scas
out
fildl
clc
push
sub
jp
mov
mov
push
popfw
repnz
add
inc
sub
inc
divl
sbb
xor
pop
shr
repz
jae
jbe
pop
cmpb
pop
push
les
loop
scas
mov
rcl
xchg
jecxz
js
idivb
mov
sbbl
lea
cmpsb
test
or
mov
lea
jmp
or
jae
jecxz
leave
jge
push
jle
jg
cltd
fisttpll
cs
fwait
sub
fcoml
cld
in
cmp
push
pop
mov
pop
int
adcb
pop
in
adc
les
addl
lods
mov
fisubrs
pusha
mov
sub
stos
call
mov
hlt
ficompl
lahf
aas
pushf
pop
shrb
mov
shlb
clc
test
sub
xchg
mov
jmp
cmp
ret
push
mov
dec
adc
int3
fistl
inc
fwait
xlat
lock
push
cld
or
es
cmp
sbb
or
adc
addr16
sti
sbb
loope
shr
aad
call
repz
pop
stos
sub
icebp
pop
iret
stc
fdivrl
shll
inc
aas
cmpsb
push
shrb
and
iret
push
inc
and
das
enter
adc
adcl
int
mov
in
jnp
jl
inc
push
sub
xchg
fcmovnbe
lahf
movsl
rolb
xchg
roll
sub
sbb
xor
cmp
filds
ror
inc
lea
popf
iret
es
fmulp
sbb
add
mov
scas
xlat
inc
push
mov
dec
jae
rol
push
cli
adc
fisubl
mov
rclb
das
into
lods
mov
sub
pop
dec
mov
cmpsl
adc
mov
sbb
pusha
lods
shll
mov
xor
stos
push
sub
aam
dec
hlt
shlb
aaa
and
repz
aam
leave
test
xchg
std
push
sbb
ret
sub
roll
cwtl
loopne
pop
add
cmpsb
out
shlb
push
js
mov
mov
dec
sbbl
into
mov
pop
cmp
mov
push
pop
cld
mov
dec
adc
inc
jno
mov
mov
dec
xchg
sarb
dec
int3
adc
xchg
cmp
push
fisttpll
pop
cmp
sub
xchg
test
jl
or
inc
fidivrs
repnz
xchg
pop
add
pop
dec
push
outsl
or
js
rcll
or
mov
cmp
pop
pop
inc
sub
jge
fisttpll
jo
es
rcrb
movsb
push
xchg
cmpsb
dec
in
jno
stos
outsl
sahf
sar
cmp
pop
jle
jl
sub
in
movsl
fwait
add
xchg
gs
pop
cmp
inc
sub
mov
pusha
pop
inc
outsb
stos
enter
lock
mov
pextrw
add
hlt
inc
push
mov
sub
push
push
lret
mov
test
gs
xor
jmp
push
stc
inc
repz
stos
call
clc
push
clc
stc
lahf
jo
cmp
aam
call
loop
aam
ljmp
out
leave
cmp
cs
cmp
mov
xchg
sub
adc
mov
add
popf
rclb
inc
loope
lods
mov
or
mov
loope
andl
jmp
out
into
dec
fldt
fildl
aas
cmp
add
ret
adc
scas
in
popa
lcall
scas
movsl
icebp
and
lock
sarb
movsb
rcll
popl
rol
sti
mov
scas
cmpsl
ret
add
jmp
out
subb
test
inc
jmp
fdivp
push
cmpl
lret
jmp
outsl
pop
repz
cmp
cmp
test
mov
shll
and
repz
mov
jns
in
sub
dec
cmp
xor
add
push
jne
lock
bound
push
lods
in
add
inc
jmp
dec
mov
aaa
xchg
jg
inc
lods
out
push
rcl
add
lahf
aad
mov
and
sbb
xchg
xchg
icebp
mov
pop
divl
add
aam
inc
pop
inc
and
stos
or
outsl
lea
jle
out
fxch
lcall
daa
adc
sbb
mov
ja
enter
in
test
inc
popa
push
outsb
add
inc
scas
cltd
mov
shll
mov
dec
push
add
xor
call
data16
inc
and
repz
jge
pop
inc
fcoms
and
xchg
lods
pop
bswap
dec
dec
sub
lea
push
hlt
dec
rolb
xchg
lcall
mov
pop
mov
neg
adc
stc
js
fldenv
or
fcmovbe
repz
popa
mov
lret
shl
in
sahf
cmovp
outsl
lret
out
stc
pushf
jmp
adc
fcomps
xchg
int3
xchg
pop
inc
data16
scas
movsb
ret
pop
ficoml
into
pop
pop
push
aaa
fstpl
jmp
inc
lock
insb
aaa
repnz
fsubl
dec
ret
negb
nop
push
pushf
dec
dec
lods
popa
int3
ss
and
rep
jo
sbb
gs
adc
adc
xchg
in
sbb
inc
jl
fnstenv
js
and
test
pop
dec
xchg
sub
cwtl
jg
inc
fistps
fldl
push
pop
das
stc
dec
lret
inc
ret
faddl
mov
mov
lcall
sub
movsb
mov
adc
rcrl
mov
cmp
popf
xchg
stos
sub
push
rcrb
pop
push
dec
jnp
fwait
pop
iret
xchg
cmpsb
xchg
mov
aam
test
into
mov
inc
fidivl
jge
cmp
mov
jae
xlat
setne
inc
mov
and
daa
gs
add
jae
lds
pop
inc
push
int
in
mov
test
out
xor
cmp
mov
inc
adcb
clc
insl
int3
mov
sti
leave
pop
cmpsb
icebp
cmp
dec
jp
sub
iret
add
pop
fwait
mov
movsl
adc
dec
push
std
sarb
xlat
push
stc
out
mov
arpl
fcom
ret
std
jae
mov
insl
pop
add
cmpsl
jbe
inc
xlat
xchg
xor
push
pop
js
sub
in
pop
add
mov
push
pop
rorl
stos
lea
aam
js
push
and
aam
into
data16
mov
add
mov
rorb
gs
sub
or
dec
xchg
mov
push
lods
ret
xchg
mov
inc
test
sahf
lret
cmp
push
roll
or
adc
out
push
lds
jbe
jle
scas
fnsave
push
movsb
faddp
lcall
fwait
outsl
or
enter
in
inc
loopne
jmp
cmpsb
cmp
pop
sub
in
icebp
jne
sub
push
out
mov
loopne
test
xchg
mov
fdivrl
movsb
data16
mov
inc
push
pop
ja
cmp
cmp
shl
ljmp
pop
mov
mov
mov
insl
inc
adc
iret
mov
das
lahf
shlb
pushf
push
mov
sbb
mov
in
inc
out
loope
pop
or
push
cmc
imul
xchg
stos
fwait
pusha
and
fstps
nop
mov
inc
and
out
add
pop
xor
test
mov
out
lret
cltd
or
push
fsubs
mov
loopne
dec
imul
jne
xchg
lods
xchg
inc
ret
aaa
push
lock
call
cltd
jmp
jecxz
lds
or
jg
cs
in
push
push
inc
or
inc
xor
xchg
xchg
pop
mov
mov
cmp
stos
sti
mov
mov
pop
imul
and
lret
mov
jno,pn
arpl
les
sbb
xchg
test
and
addr16
xor
cmp
repz
xchg
dec
xchg
xchg
and
into
push
and
repnz
roll
jmp
test
popf
test
sub
leave
add
sbb
fdivrl
pushf
and
xchg
cmp
mov
dec
les
fwait
cmp
movb
mov
repz
mov
push
xorb
sti
sbb
in
push
cmp
add
xchg
inc
and
and
sub
xchg
es
out
lock
and
inc
test
pop
orl
pop
fimull
aaa
jns
mov
jnp
fdivrl
jo
inc
arpl
mov
sahf
lea
jmp
lret
test
push
dec
ficoms
sub
leave
inc
iret
mov
or
loop
clc
mov
or
mov
mov
dec
cwtl
jne
nop
out
mov
leave
cmp
add
xchg
inc
mov
or
je
sbb
jns
es
or
cmpsb
int
nop
mov
sub
mov
shlb
cmp
rcl
xor
jbe
sub
pop
leave
xchg
xlat
sub
pusha
and
iret
movsl
sarl
xor
test
das
stos
subl
cli
adc
cmp
aam
xchg
xchg
and
and
mov
lret
xchg
out
lahf
pop
in
test
mov
movsl
cmp
push
cmp
aas
adc
int
fists
or
fwait
xor
popf
lds
addr16
clc
and
fldpi
fwait
mov
mov
popf
pop
iret
filds
cmp
movsb
jle
push
test
rcll
push
adc
into
dec
jb
out
mov
js
add
xchg
push
mov
call
out
inc
xchg
data16
fidivs
jp
rcll
les
sbb
aas
xor
clc
out
mov
fdivrs
pop
mov
insb
push
aam
xor
repnz
jnp
sahf
push
leave
mov
jmp
adc
mov
js
subl
mov
push
repz
mov
adc
lret
or
lods
test
mov
jle
lret
push
mov
lds
imul
pop
cmp
mov
cmpsb
cltd
cwtl
pop
dec
lods
cmp
xchg
aas
gs
cld
aaa
mov
outsb
and
sbb
push
cltd
sub
cmp
dec
push
outsb
scas
sbb
shlb
clc
stos
adc
aad
xor
bound
cld
xchg
jg
sbb
inc
and
or
mov
data16
popl
bound
call
xchg
enter
stos
orl
sti
pop
adc
cs
subl
gs
lahf
inc
mov
or
in
sub
rclb
js
or
push
dec
fistpll
fwait
es
shll
mov
cmpsb
add
adc
lock
mov
es
lds
add
cmp
xchg
lahf
pop
sbb
mov
xchg
in
sarl
jle
clc
mov
inc
out
ret
adc
push
jp
mov
pop
lret
push
in
aas
xchg
jbe
pop
adc
xor
inc
ljmp
cmpsb
les
arpl
pop
gs
mov
xchg
xchg
std
mov
rcll
into
dec
ficompl
icebp
inc
sbb
popf
fstpt
jmp
and
xlat
mov
mov
inc
lcall
movsb
mov
pop
cmp
sbb
aas
mov
sar
lahf
cli
aad
xlat
inc
mov
lods
loope
call
ffree
and
push
idivb
add
pop
adc
or
pop
xor
push
stc
push
popf
fcoml
jl
mov
aad
jbe
cltd
or
and
aad
bound
or
inc
gs
shll
loope
xchg
xorb
cmpl
rclb
mov
xor
inc
mov
stc
enter
outsl
rcl
and
pop
out
insl
sbb
sar
mov
add
and
or
das
fnstcw
inc
loopne
push
mov
aad
mov
decl
lret
adc
and
mov
stc
in
pop
aas
mov
orl
cmp
and
iret
jg
test
pushf
mov
adc
inc
call
nop
nop
adc
inc
sub
inc
cmpsb
dec
mov
xchg
cmp
repz
dec
imul
sbb
lds
and
stos
lret
nop
aam
cld
lock
stos
int3
xlat
jbe
sbb
pop
les
or
sub
jnp
bound
pop
dec
push
mov
daa
gs
sub
mov
hlt
sbb
pusha
gs
aam
dec
fistpll
jecxz
mov
stos
fucom
repz
mov
scas
insl
mov
jle
into
and
popa
lret
fmull
or
jo
adc
rcrl
mov
ror
test
aad
xorl
mov
mov
fst
dec
mov
pop
cwtl
ljmp
add
cmp
ret
lea
pop
mov
pop
outsl
aas
mov
inc
movsb
movl
out
mov
jge
shrl
lods
jge
pop
shll
ljmp
addb
lods
dec
enter
jge
jno
adc
out
jne
call
adc
ret
cmc
jns
mov
test
mov
mov
xor
icebp
loope
xor
lahf
adc
mov
mov
data16
mov
or
sbb
sahf
loope
dec
adc
jp
pop
leave
shll
xchg
mov
adc
fcmovu
sub
sbb
ret
sub
push
ret
xor
in
push
adc
jmp
loopne
rol
mov
fistpl
pop
xchg
lahf
sub
jmp
stos
gs
adc
sub
push
pushf
flds
mov
sahf
out
pusha
fstl
jmp
rol
ret
mov
out
cli
stc
rcll
pop
stos
rcll
lret
jno
lret
mov
jno
inc
and
xor
push
fildll
call
add
leave
cli
adc
int3
je
pop
subb
jmp
push
and
fldt
lret
loope
cmp
ret
push
xchg
or
jmp
and
fdivr
pop
fidivs
scas
inc
or
inc
addl
cli
ret
test
cmp
loope
jecxz
out
js
or
test
jmp
jae
mov
push
mov
sub
fstl
jmp
push
sbb
push
sub
lcall
leave
lds
fistl
shrb
jnp
mov
clc
push
out
push
hlt
cmc
jne
addr16
cmpsl
bound
cwtl
jp
insl
xchg
pop
and
or
mov
jp
mov
insb
sarb
clc
imul
jbe
adc
jecxz
addr16
xor
or
pop
imul
dec
xchg
xor
addl
jns
lds
scas
jmp
push
aaa
xchg
fstps
xor
int
stc
adcb
fstps
repz
stos
add
ret
fcmove
and
cmp
das
xlat
mov
loop
loopne
push
jae
jecxz
mov
jge
rcll
sbb
sarl
pop
out
add
xchg
sti
push
inc
ret
sti
rol
outsb
fs
and
in
cmp
cli
adc
leave
pop
adc
in
mov
push
test
mov
add
hlt
int
and
cmp
cld
loopne
insl
aam
cmpsl
add
xor
popf
lcall
push
fisttpl
xchg
inc
mov
mov
jbe
push
fwait
mov
jg
lcall
les
pop
loop
cmp
rolb
sahf
mov
int3
lods
jmp
mov
fidivrs
repnz
test
lock
sub
lret
cld
xchg
sub
cmpsb
sti
push
xor
sahf
xor
shll
xor
push
sbb
mov
sbb
rclb
xchg
std
sahf
cmp
pusha
repnz
sub
mov
and
movsb
fdiv
call
sub
jae
sahf
jno
movsb
fistl
xchg
loop
push
and
ret
pop
js
fbstp
push
ret
adcb
jns
stos
cli
and
mov
adc
stos
pushf
sbb
push
adc
stc
adc
scas
push
ja
inc
outsl
cmpl
notb
xor
iret
inc
push
lcall
dec
xlat
stos
cmpl
cmc
insb
xchg
cmp
pop
faddl
xchg
inc
fsubrs
jns
aaa
cmp
nop
enter
and
les
scas
xor
pop
out
in
enter
add
and
xlat
pop
cli
cmp
dec
arpl
in
pop
lret
jmp
int
shll
arpl
fmul
popf
lods
or
push
adc
xor
and
sti
lods
pop
add
cli
test
mov
lcall
test
push
and
mov
scas
xchg
jl
push
push
dec
jge
and
xchg
xchg
fisubl
cmp
cmp
inc
int3
xlat
in
pop
pop
ret
sti
fstpt
sub
and
cmp
mov
xor
xchg
fs
push
pop
imul
jmp
andb
es
rcrl
test
movsb
insl
add
push
loop
scas
jl
dec
aad
loop
insb
add
adc
ss
cmp
pop
in
sbb
xchg
mov
je
sub
jo
cmp
mov
fmull
xor
cltd
lods
insl
mov
out
push
mov
int3
pop
xchg
aas
loope
cmp
js
dec
les
adc
lcall
and
nop
jmp
cs
push
stos
or
jbe
sbb
xchg
movsb
mov
mov
es
sar
jecxz
pop
push
push
mov
push
jge
movsl
scas
leave
les
push
loope
mov
andl
outsl
jge
cmpsb
test
dec
or
adc
leave
sbb
lods
pop
lods
xchg
inc
push
popf
xor
movsb
cmpsb
push
xchg
mov
or
push
aam
shrl
lcall
sti
push
movsl
cmp
xor
xchg
int3
jo
pop
ret
arpl
fwait
sarl
push
dec
or
addl
and
inc
pop
cmp
jbe
jae
xchg
mov
mov
popf
js
addb
lahf
sbb
shll
xor
mov
mov
or
jae
mov
dec
lods
aad
ja
bound
lods
mov
mov
xchg
repz
subb
shll
in
fidivrl
jns
adc
addr16
add
scas
cmp
rcrl
rcrl
xchg
test
ds
out
sbb
or
sbbl
or
xchg
lahf
mov
mov
adc
dec
aas
cs
outsl
movsl
pop
jae
cmp
pop
fcomi
out
sub
ja
sub
pop
xchg
fidivrl
in
mov
ja
ret
jmp
cmp
or
xor
xchg
aad
int
cwtl
mov
adc
xchg
repnz
fcmovnbe
cmp
scas
lea
dec
lods
xchg
fwait
xchg
push
loop
or
gs
ljmp
popf
jp
test
mov
cmp
ja
fldcw
dec
mov
insb
jge
rorl
push
sbbb
push
rcll
dec
stc
mov
aas
and
addr16
scas
vaesdeclast
push
clc
xchg
inc
imul
cs
les
out
sub
push
cmpb
insl
stos
xchg
cwtl
mov
inc
and
mov
mov
inc
sub
fsubrs
fdiv
icebp
je
push
in
call
mov
pop
daa
mov
xor
add
jns
repz
dec
hlt
daa
aaa
sti
out
pop
insl
out
inc
dec
xchg
ret
popf
insl
push
pop
jo
jl
test
fists
jp
jb
or
pop
xor
sub
mov
inc
cmp
xlat
aad
mov
iret
mov
enter
xchg
in
mov
test
sub
jo
mov
data16
sti
dec
gs
xchg
int3
dec
icebp
ja
inc
in
rcrl
mov
popa
cld
fs
mov
mov
xchg
jl
jo
mov
cltd
jl
push
push
jge
xor
scas
pop
outsl
mov
push
push
xchg
mov
in
jp
mov
push
mov
loope
pushf
pop
xchg
stc
sub
test
sahf
cmp
aaa
sub
fiaddl
insl
push
in
fldt
mov
jle
xor
xchg
jg
or
dec
cwtl
sbb
nop
fstpt
mov
in
test
notb
and
jl
rorl
sbb
movsl
mov
xchg
jg
or
xlat
mov
push
sub
dec
in
push
in
mov
shr
mov
mov
mov
mov
add
test
dec
adc
inc
aaa
xchg
stos
icebp
outsl
sahf
dec
mov
sub
or
mov
jns
es
xchg
xchg
mov
jg
insl
lahf
xchg
lea
pop
mov
and
lcall
cwtl
pop
rorl
push
leave
mov
jl
sbb
mov
leave
lods
outsl
sub
adc
pop
push
aad
ret
ds
mov
inc
fldcw
xchg
ficoms
test
bound
mov
push
rcll
jbe
in
mov
lea
std
aad
pusha
sub
add
or
push
pop
fwait
or
xchg
dec
mov
mov
inc
push
adc
popl
inc
dec
or
inc
iret
out
outsl
ret
aas
idiv
popa
ja
xchg
add
xchg
nop
xor
lea
cwtl
xor
ret
aad
pushf
jo
or
lock
pusha
or
cmp
mov
fwait
in
push
push
push
leave
stos
fstps
daa
or
xchg
cltd
repz
fcomps
jns
and
mov
sbbl
jnp
push
cmp
cmpsb
insl
bound
inc
xor
cmp
mov
call
loopne
adc
jmp
pop
jns
dec
rcl
pop
jp
iret
xchg
sub
or
int
into
push
cmpsl
lea
lock
mov
movsl
and
int
sbb
sbb
enter
pusha
xchg
adc
xchg
and
inc
iret
outsl
sbb
mov
loope
mov
mov
pop
sbb
inc
fisubrl
ds
xchg
loop
in
and
aas
mov
and
inc
lret
les
xor
cmpsb
insl
and
aaa
leave
add
bsf
sbb
pop
jb
mov
addr16
cmpsl
inc
daa
mov
std
jbe
in
ret
mov
sub
aaa
mov
lret
lea
xchg
adc
loopne
jecxz
cmc
cmp
push
add
icebp
test
cmp
sahf
movsb
cmc
lahf
imul
adc
in
rcl
clc
push
or
nop
enter
ds
fisttpl
lods
xchg
out
cmp
lods
std
mov
inc
outsb
adc
aam
mov
loopne
bound
jns
dec
loopne
jno
nop
mov
cmpsl
sbb
test
in
mov
ret
aam
test
hlt
pop
stos
ljmp
push
push
rclb
testl
popa
mov
les
repz
cmc
push
lcall
jae
ja
sub
in
push
sahf
in
add
xrelease
jo
jge
stc
sub
std
sub
mov
pop
movsb
jb
fdivrs
sub
pop
inc
jae
nop
fwait
negb
sub
rol
cmc
int3
aas
sub
arpl
ja
mov
mov
pop
arpl
pop
sub
jg
or
inc
lret
sub
popf
adc
leave
pop
mov
xor
scas
ds
jns
out
mov
mov
movsl
rcl
jle
sub
cli
sbbl
mov
adc
aaa
in
rcrb
ljmp
jbe
mov
pop
out
adc
xor
sbb
and
mov
xor
lods
movsl
jge
pop
test
xchg
test
das
fstpt
jle
mov
sar
loopne
xchg
pusha
test
xchg
cmc
pop
andb
js
test
sahf
popa
popa
out
mov
cld
ljmp
mov
ss
rorb
ret
dec
mov
jae
jg
or
jbe
cmp
daa
in
movsl
mov
ret
arpl
push
lods
outsl
ret
into
push
add
shl
and
mov
lods
popa
xchg
pop
and
mov
sub
das
shl
xor
xchg
xchg
ljmp
pop
adc
add
cmpsl
mov
jns
inc
shl
movsb
push
pop
push
cmpsl
decl
adcl
cs
mov
jmp
fsts
test
rol
pop
addb
fstl
adc
sarb
loope
xor
pop
push
push
jge
sbb
jmp
lret
loopne
js
pcmpeqd
add
xor
lret
loopne
out
jle
ljmp
inc
ret
jl
jne
into
xchg
add
and
mov
imul
jne
clc
cmp
repnz
fcomip
leave
fsts
dec
ret
pop
out
int3
rclb
sbb
xor
xchg
pop
add
loop
test
out
repz
test
or
sbb
and
ljmp
push
mov
cld
jp
das
mov
fsubr
push
xchg
fistpl
xlat
addr16
mov
leave
lds
inc
add
add
add
movsl
lret
cwtl
cli
es
sub
cwtl
sbb
and
mov
aas
faddp
add
and
stc
loope
aaa
cwtl
into
roll
pusha
jge
mov
jns
sub
xchg
xchg
popa
inc
mov
push
popf
call
js
aas
aad
xor
and
and
enter
leave
cmp
das
fldcw
jns
scas
int
jmp
xor
jnp
mov
fstpt
dec
insl
inc
rol
cmp
or
psubb
inc
cwtl
mov
mov
cmpsl
mov
inc
aas
sbb
hlt
cli
push
into
idivb
pushf
dec
test
adc
ret
dec
jp
or
xor
and
scas
ja
sub
xchg
sub
cld
cwtl
lret
xorl
imul
out
or
mov
ficompl
mov
inc
mov
stos
adc
push
fisubl
cmp
int3
mov
add
push
pop
sub
lret
mov
pop
inc
inc
dec
cmp
je
jg
cmpsb
lods
in
int3
and
cli
pop
sbb
daa
je
cli
hlt
jo
ret
in
push
sti
scas
mov
sbb
push
out
addl
lds
inc
or
inc
ret
pop
insl
sub
jne
add
or
mov
mov
fildl
push
mov
mov
mov
filds
xor
mov
nop
lods
hlt
cmpsb
cmp
sahf
mov
or
mov
lods
cld
pushf
sub
ret
push
jnp
dec
fwait
out
xor
jmp
mov
imul
fisttps
insl
mov
push
aaa
cmp
imul
add
call
sbb
add
shrl
repz
jmp
out
in
repnz
lock
jge
cld
cs
icebp
xor
movsb
in
and
or
addr16
pop
sub
call
push
cld
imul
push
fadds
push
xchg
push
leave
popw
dec
mov
dec
mov
xor
xchg
cmc
dec
pop
fldt
test
dec
in
pop
iret
mov
dec
hlt
jp
nop
mov
and
mov
popa
sti
lret
in
test
jbe
mov
test
sahf
or
lock
jmp
mov
dec
decb
xchg
gs
test
cmp
push
xchg
push
jbe
rorb
pop
sbb
ljmp
jge
ds
gs
xchg
gs
pop
test
or
adc
shl
popf
rcl
pop
lcall
leave
icebp
push
fwait
and
iret
jl
mov
dec
ret
rcrb
xor
out
hlt
lods
xchg
stos
dec
addr16
lds
inc
mov
cmp
adcl
and
in
jne
jle
test
scas
stc
insb
subl
xchg
inc
ljmp
sub
stc
repz
push
mov
pop
dec
dec
add
bnd
jno
outsb
lahf
ljmp
cmc
ret
xchg
outsl
mov
dec
or
rcl
aas
mov
xlat
inc
repnz
out
mov
jmp
hlt
pop
fidivrs
mov
ficomps
mov
fmull
fcomi
mov
stc
popa
loopne
adc
mov
sbb
test
sub
jbe
add
pop
mov
jns
jl
popa
fistl
xor
xchg
pop
clc
nop
xor
xchg
fsts
jl
int3
cmp
aas
mov
add
mov
pop
cld
lret
pop
adcb
stc
sahf
cmpb
xchg
data16
test
cmp
or
inc
fcompl
mov
bound
sbb
loopne
lahf
push
das
fmuls
mov
jns
xor
xchg
xchg
and
cmp
int3
mov
jle
adc
movsl
repz
lret
mov
inc
arpl
aas
scas
in
add
clc
mov
test
stos
mov
cld
dec
lcall
or
pushf
push
nop
stc
jge
sub
mov
pushf
add
jle
mov
decb
add
lods
cmp
fnstenv
mov
in
cmp
adc
dec
xlat
jns
mov
dec
pop
mov
xchg
xchg
mov
movsb
jmp
inc
xor
push
clc
scas
or
cmp
sub
cmc
sub
sahf
sbbl
pop
add
and
adc
scas
pop
in
mov
mov
gs
sub
clc
and
call
les
lock
outsl
ss
and
cmpsb
fists
aaa
jl
mov
shl
movsl
addb
and
jnp
inc
aas
fistpl
andb
mov
loope
pop
lcall
inc
and
add
sti
jae
sbb
cmp
negb
popa
push
gs
fwait
push
xor
push
into
jle
adc
fbld
adc
push
jg
cmp
mov
xchg
in
push
pop
sarl
mov
xchg
jl
hlt
push
adc
pop
sbb
fld
test
cs
adc
jne
or
xlat
lds
xor
push
imul
aas
test
icebp
xor
mov
cmc
lods
stc
add
mov
int
xchg
out
adc
das
es
or
out
mov
test
push
cmp
add
decb
jmp
add
hlt
xchg
adc
inc
in
pop
outsl
jnp
push
add
je
sbb
xlat
or
aaa
repz
sub
push
lock
adc
call
cld
jnp
sub
enter
stos
dec
sub
mov
lcall
lock
lods
jb
movsl
push
pop
inc
mov
xchg
subb
les
cli
pmaddwd
call
ljmp
lcall
lods
mov
jge
dec
scas
js
push
jmp
dec
mov
imul
daa
cmpsl
mov
mov
jns
xorl
lock
or
das
lahf
dec
adc
aas
adc
mov
sahf
pop
sub
scas
in
pop
jl
push
dec
mov
les
jo
jae
add
adc
pop
addr16
cld
dec
lret
bound
loopne
sub
mov
pop
lods
stc
xchg
outsl
fs
daa
mov
push
sarl
fs
adc
cli
xchg
lea
aam
sahf
and
rcl
dec
iret
add
ret
and
xchg
pop
cmp
nop
push
add
aad
lahf
lret
add
fimuls
add
jmp
pop
xchg
out
push
rcrb
mov
vmovaps
cmp
outsl
inc
mov
xor
insb
dec
addr16
mov
cwtl
mov
pushl
sbb
pushf
mov
or
daa
mov
inc
mov
push
scas
scas
stc
push
push
movsl
and
stos
or
pop
cmp
out
mov
cmp
xchg
xor
movlps
sub
addr16
aaa
loope
movsl
loope
repz
xor
ss
rcr
emms
fbstp
in
dec
ja
cmp
inc
xchg
fstp
fnstsw
inc
icebp
and
ss
sub
or
int3
push
pop
jl
adc
xchg
mov
xchg
adc
mov
mov
les
add
push
mov
andl
dec
fnstsw
hlt
jmp
les
adc
dec
fldcw
fwait
and
std
int
mov
inc
aaa
sub
sbb
daa
sub
cmp
ret
pop
and
cwtl
cmp
pop
add
fisttpll
in
push
push
test
jmp
cmp
jns
pop
mov
xchg
in
loope
xchg
fcomps
fidivrs
hlt
enter
push
sub
fistpl
gs
jnp
stos
xchg
dec
lods
test
jbe
lods
aas
inc
sbb
mov
push
int
cld
or
mov
jns
push
shrl
addps
loope
shll
lock
mov
mov
in
pop
push
mov
or
push
jno,pn
add
enter
enter
sbb
pop
jb
popf
shrl
call
aam
mov
hlt
call
xchg
cld
test
sub
jl
mov
mov
mov
out
imul
cltd
jns
imul
or
jns
loop
push
sbbl
mov
ret
pop
push
sub
hlt
pusha
sarb
dec
inc
repz
cmpsb
inc
push
jo
lds
sbb
imul
push
sub
add
rcll
lret
orb
xchg
mov
jb
fstl
push
and
cmp
movsb
push
push
loope
movsl
mov
dec
xchg
pcmpeqw
jecxz
data16
push
dec
dec
cli
rcrl
lods
lods
js
mov
mov
in
bound
inc
loopne
pop
mov
fsqrt
add
clc
push
mov
fldl
fistps
rcll
mov
cmpsb
xchg
adc
jne
jns
iret
xchg
mov
popf
pop
inc
add
cmpsl
mov
cld
adc
dec
mov
cwtl
mov
mov
jecxz
mov
stos
mov
enter
dec
push
call
loopne
fcmove
xchg
std
ss
mov
leave
push
insl
push
sub
mov
lcall
inc
aaa
push
test
xor
xchg
int3
jae
into
test
pop
sahf
std
icebp
fsubl
sahf
ds
test
outsb
xchg
mov
adc
imul
or
lods
and
out
imul
cmp
mov
imul
xorl
call
xchg
cwtd
lcall
xchg
mov
int
cmp
repz
xchg
xchg
cmc
or
xchg
repnz
sub
push
adc
jecxz
mov
jl
xchg
xor
xchg
and
ja
insl
test
xorb
leave
in
sbb
and
pop
add
bound
arpl
dec
fmul
fistps
mov
ret
repz
fsubr
shrb
xor
and
fdivp
imul
jmp
pushf
push
loopne
pusha
test
cmp
or
daa
jecxz
outsb
push
ds
movsl
xchg
pop
pop
out
push
repnz
mov
dec
jmp
inc
iret
cltd
inc
test
inc
gs
dec
rolb
repz
inc
push
rcl
out
lcall
sahf
xor
cmp
jbe
push
lock
jnp
or
hlt
add
cmpxchg
clc
gs
je
add
push
and
inc
or
jecxz
jne
xlat
dec
cld
xor
jp
xchg
js
jmp
lds
popa
jne
cwtl
inc
cmpsb
sbb
sarb
xchg
in
mov
int
negl
mov
out
cmp
lock
or
aam
cmp
dec
shrl
divl
add
push
in
xchg
sub
inc
inc
and
mov
mov
or
lods
mov
cmp
aam
mov
imul
in
in
xchg
dec
push
xchg
cli
mov
push
add
jo
xchg
dec
addb
stc
and
pop
test
or
ror
dec
push
add
test
jno
sub
sbb
adc
mov
jo
pop
push
mov
or
or
pop
dec
jb
ja
mov
sub
nop
pop
ficoml
sahf
ja
test
xchg
sbb
fwait
xchg
jb
test
popa
cmpsl
ja
jnp
fdivrs
xor
jno
pop
push
dec
jns
std
scas
adc
mov
into
jbe
mov
negl
adc
push
rolb
pop
sbb
jmp
test
lock
push
es
jp
cmp
les
lcall
or
in
pop
sbb
adc
sub
int3
xchg
shlb
aam
xlat
inc
icebp
lods
ret
imul
stos
mov
rcll
test
es
push
test
andl
sbb
stos
mov
mov
xchg
pavgw
jge
sbbb
iret
es
pushf
std
andb
lret
je
jge
cltd
xor
call
jmp
ljmp
lcall
lret
pop
lret
jle
cmc
shrl
sbb
mov
les
das
sub
pop
das
pop
push
in
dec
inc
rorb
xor
xor
jae
ljmp
mov
cmp
rcr
xlat
inc
xchg
push
dec
jecxz
mov
out
xchg
std
aaa
push
sbbl
in
cmp
cli
lcall
cs
int
cmp
dec
aad
mov
fldcw
add
rcrl
test
mov
leave
loopne
jno
in
pusha
cwtl
lea
mov
sub
dec
insb
jo
pop
cmp
jle
out
lahf
inc
ljmp
lahf
cli
shll
or
pop
arpl
lds
iret
aad
cli
ret
in
dec
test
mov
gs
test
dec
pusha
xchg
rcrl
sbb
mov
push
stc
xchg
or
and
stos
je
mov
jmp
arpl
gs
pushf
xchg
out
inc
inc
jbe
mov
xchg
icebp
ljmp
mov
sub
push
es
fildll
or
stos
mov
lahf
popa
ljmp
inc
mov
mov
xchg
mov
lock
xchg
pop
xor
cs
scas
fs
movb
notb
int3
sub
ja
test
pushf
cmp
sub
inc
in
xchg
rcr
fcmovu
dec
mov
lods
repz
dec
xchg
sarb
in
dec
lahf
pop
stos
arpl
lret
lock
push
dec
dec
jno
daa
lcall
jecxz
pop
stc
clc
jg
xchg
lcall
out
cld
int
leave
xor
push
jns
cwtl
xchg
and
push
mov
dec
adc
add
loop
fsubp
mov
sbb
lret
icebp
pop
aas
sahf
pop
stos
lds
jo
jns
xchg
std
clc
mov
loope
and
sahf
and
popa
mov
movsl
mov
subl
add
aad
inc
mov
jae
dec
or
sub
stos
dec
mov
fildll
test
cmp
xor
push
jb
xchg
ret
sbb
in
nop
jno
test
jecxz
pop
lea
add
je
cmp
cs
scas
mov
xor
xor
mov
xor
sub
mov
inc
cmpsb
test
cmp
jno
ljmp
popa
xchg
adcl
jne
mov
out
jae
in
and
cmp
cmpb
mov
sub
jae
mov
xchg
add
mov
divl
leave
in
gs
insb
cmpsl
movsl
in
jp,pt
mov
adc
loopne
fwait
sbb
and
dec
mov
stos
sbb
testl
sub
shrb
sbb
or
pop
pushf
sub
fidivrs
add
mov
out
lods
popa
cli
inc
lock
xchg
fnstcw
add
add
fsubrs
nop
aad
jae
sbb
sbb
out
stos
push
iret
cmp
cmp
addr16
ret
js
in
xchg
inc
test
adcb
stc
std
lret
les
pop
inc
xor
ja
xchg
mov
mov
push
mov
loope
add
sbb
dec
pop
std
jmp
testl
jg
push
mov
mov
outsl
stos
push
idiv
mov
sub
and
xor
outsl
push
aam
addr16
lods
mov
data16
jl
mov
insl
pop
dec
inc
xor
xchg
pop
aas
test
dec
mov
dec
leave
or
cmp
outsb
jmp
int
and
test
and
xchg
rorb
aad
fnstsw
lret
cmp
leave
call
repz
cmp
popf
and
inc
mov
test
lods
or
rorb
int
or
mov
jbe
xchg
lock
cltd
lods
xchg
push
rsqrtps
in
cmp
adc
push
cmp
dec
adc
lods
int3
test
sub
int3
fisttps
push
inc
dec
sub
fmuls
sbb
sub
sbb
xor
adc
mov
idiv
stos
outsb
dec
push
or
inc
push
jge
sub
mov
sbb
push
xor
dec
ljmp
fs
test
mov
xchg
popa
hlt
push
loopne
xor
test
cmpl
lahf
inc
xchg
mov
sbb
in
xchg
push
lret
mov
and
jnp
test
bound
divb
fdivrs
int
cmovnp
aad
movsb
addr16
cmp
jmp
dec
dec
jns
std
ja
lods
inc
sbb
inc
add
cmp
pop
inc
inc
jnp
cmc
lods
call
ljmp
lock
inc
jecxz
stos
mov
in
cmp
fldl
cmp
mov
lods
out
lods
mov
xchg
pusha
ljmp
sbb
xlat
jge
inc
push
repnz
addr16
push
dec
das
inc
jo
pop
notl
imul
xchg
outsl
inc
inc
popa
shrl
lds
xchg
shr
subb
rol
dec
pop
js
pop
repz
cwtl
insb
rcrb
jno
lret
cmp
xchg
sbb
fxch
jmp
es
imul
sub
repnz
in
clts
out
lahf
mov
int3
or
dec
ss
fistpll
jp
mov
cmp
push
jno
push
repnz
addr16
or
lods
dec
fdivr
pop
testb
int3
push
inc
adc
jge
pop
lods
test
nop
stos
push
inc
insb
fstp
and
mov
push
lods
sahf
inc
cmp
ret
xchg
arpl
aad
andl
dec
fucom
movl
notb
rcrl
imul
jbe
add
or
jb
adc
push
js
test
test
push
into
dec
jbe
lea
sbb
ja
or
lock
adcb
mul
inc
mov
ss
shrl
mov
cmc
push
jmp
pop
sbb
aas
pop
pop
add
add
jmp
cld
xchg
jmp
pop
dec
lret
aad
or
aam
push
push
cmp
inc
sub
jl
mov
fwait
sub
mov
lret
pop
sbb
pop
das
das
cmp
or
js
dec
adc
fisttps
xchg
inc
stc
je
xchg
cmc
lcall
rclb
xchg
jge
sbb
in
mov
jno
xor
scas
mov
mov
xchg
pop
dec
ljmp
jmp
and
movsb
cli
fdivr
xlat
inc
sbb
push
cmp
add
das
adc
aas
fwait
stos
mov
dec
sub
jecxz
fiadds
cld
jbe
data16
out
mov
or
mov
adc
cmp
sub
push
pushf
inc
mov
inc
and
andb
std
xlat
je
adc
popf
pop
and
aaa
arpl
fninit
je
and
cmp
repz
and
pop
shrb
out
lcall
inc
sub
lds
call
sub
stos
xchg
pop
xor
cmp
cmp
in
mov
xchg
rol
xchg
sbb
mov
fwait
add
push
mov
and
cmpl
mov
js
lods
insl
das
mov
lock
push
sbb
aam
out
mov
fcomps
dec
adc
sbb
dec
add
movsl
add
sbb
xor
repz
int
or
push
repnz
icebp
cmp
jecxz
and
inc
jp
pop
pop
mov
xchg
mov
mov
addr16
arpl
or
cli
out
pop
lods
outsb
incl
xor
inc
xor
jl
mov
adc
stos
or
xchg
lret
je
jg
dec
aas
add
in
pusha
add
push
fs
jno
repz
dec
mov
xchg
adc
cld
mov
sub
adc
into
push
push
and
adc
sub
lods
inc
int3
jecxz
dec
popl
xor
push
ret
outsl
push
rol
call
clc
cmp
dec
add
out
cld
fstp
aad
adc
or
jge
rcl
and
call
adc
pop
xchg
cmovae
push
daa
and
shrl
jl
out
popa
mov
add
sarl
outsb
cmpsb
iret
fisubl
pop
dec
lret
push
mov
xchg
les
sbbb
pop
mov
es
aam
xlat
jg
enter
sbb
pop
sbb
jecxz
push
inc
pop
jmp
cmp
ret
jmp
iret
adc
inc
test
sbb
lea
mov
lds
cli
and
inc
dec
and
repnz
push
jmp
pop
add
fistl
sahf
cmc
negb
fstps
mov
int
insb
jecxz
out
cmpsl
enter
ljmp
adc
lds
pop
sub
std
adcl
pop
push
lret
stos
adc
xchg
inc
aas
enter
pop
dec
lret
pop
push
xchg
out
or
popf
xchg
clc
sahf
adc
or
lcall
je
push
in
and
add
lock
mov
cmp
add
add
add
xor
jl
daa
xchg
je
je
xorl
shll
adc
pop
sbb
aam
pop
insb
nop
mov
or
loopne
aas
test
clc
pop
hlt
fwait
push
add
out
les
xchg
sbb
lods
imul
and
lds
push
orl
sbb
ds
inc
bound
xor
dec
add
xor
icebp
movsl
shlb
xchg
or
aam
and
or
out
mov
fisttpl
fwait
std
idivb
pop
cld
popf
fbld
pop
cmpsl
sbb
ljmp
inc
iret
jp
insb
stos
push
repz
inc
jb
xchg
pushf
das
fmulp
inc
cltd
outsb
mov
xchg
int
clc
out
shrb
insb
clc
shrl
adc
shll
and
movsl
ffreep
adc
iret
dec
fadds
jae
leave
xchg
adc
cmp
cli
sub
movsl
and
mov
adc
stos
adc
inc
lock
lahf
mov
popa
pop
push
aad
ds
push
out
or
call
std
inc
aad
push
test
cmpsl
nop
movsl
lret
dec
loopne
or
fistps
popf
ljmp
xor
sahf
scas
xorb
outsb
shlb
push
outsb
jmp
roll
mov
sbb
iret
xchg
sbbb
mov
xor
jge
cmc
rcrl
lock
int
dec
pushf
cmp
xchg
in
xchg
push
icebp
int
sbb
pushf
jne
out
jmp
popa
fistpl
addb
lret
sahf
jno
scas
push
jge
dec
lods
repz
mov
fidivrl
movsl
push
imul
dec
orl
into
arpl
mov
aam
xchg
adc
std
inc
push
push
icebp
mov
in
inc
bnd
lret
dec
loope
outsl
incl
cltd
aas
aad
out
aam
pop
push
and
fldt
add
lock
pop
jae
fwait
add
jecxz
sub
mov
sbb
inc
mov
cs
adcl
std
lret
stc
rcll
out
movsl
jg
cmp
mov
mov
push
jge
sahf
pop
xorb
push
and
movsb
ret
addr16
mov
ljmp
push
enter
test
test
add
ffreep
in
mov
cwtl
cld
idivl
cmp
jg
sub
mov
loopne
ljmp
insl
and
jo
sub
pop
jmp
cmp
jae
int3
xor
mov
add
negb
dec
push
fisubl
adc
insl
int
and
pop
or
cmpb
adc
lret
push
or
int
xchg
jnp
pop
push
int3
jne
mov
shlb
lret
stc
xchg
test
push
pop
pop
fsubrl
or
in
in
add
or
cmp
jp
mov
ror
adc
int
dec
sub
add
push
ficoms
sbb
cld
mov
ljmp
popa
adc
out
ds
cmp
out
lret
lods
adc
leave
mov
mov
sti
adc
xor
adc
pushf
int3
mov
ljmp
push
jl
outsl
insb
icebp
int
sub
lcall
dec
data16
leave
pop
mov
mov
or
jno
ret
jecxz
nop
dec
in
xchg
or
push
fwait
jmp
cli
mov
mov
std
filds
xchg
mulb
out
fisttps
jmp
stos
mov
jmp
aaa
leave
fisttpl
enter
push
popf
xor
push
insb
repz
dec
inc
mov
lcall
add
fsts
cmpsb
add
sti
jne
das
setge
movsl
imul
mov
repz
sbb
imul
rorb
adc
cmp
lock
xchg
mov
xchg
mov
movsb
int3
hlt
mov
lods
sbb
loop
jae
inc
mov
movq
fists
pop
movsw
add
xor
stc
cmc
push
push
std
push
or
leave
push
push
rorl
dec
loopne
mov
lds
cli
xchg
mull
outsl
ret
lret
push
in
xor
pop
hlt
ds
es
cmp
xchg
in
inc
pop
jecxz
lds
mov
loope
pop
add
repz
and
cmp
ret
pusha
add
fists
daa
arpl
cmc
das
xlat
push
subb
fs
out
or
push
mov
push
fcmovne
push
aam
aas
stos
aad
insl
test
iret
mov
clc
adc
cld
add
cmp
loope
imul
jecxz
lcall
stos
xor
lods
jl
loopne
dec
loope
or
dec
aam
xchg
int3
jbe
sarb
leave
push
pop
fwait
and
mov
cs
mov
pop
cwtl
dec
mov
cmp
ret
or
mov
aaa
adc
pop
sbb
pop
xchg
cmpb
repnz
mov
out
in
jno
test
int
cmp
xchg
cmp
out
and
inc
add
push
imul
mov
mov
mov
xchg
nop
imul
xor
loopne
sbb
push
les
dec
xchg
push
aad
scas
and
mov
pop
fisttpl
xor
sub
movsb
sub
std
pop
subl
cmpsl
fwait
sbb
into
pop
enter
sub
aad
aad
pop
xchg
pop
clc
nop
insl
jecxz
rclb
rcrb
repnz
mov
ss
hlt
sti
rorl
out
pop
aad
cmp
jae
scas
adc
sbb
lock
pop
sub
xchg
out
sahf
mov
lret
scas
xchg
cli
and
and
push
sbb
imul
pop
ret
cmpl
stc
and
xchg
jecxz
es
outsl
and
xor
inc
std
mov
jo
xor
cmp
aam
divl
int3
inc
mov
sub
aad
mov
fildll
push
jbe
imul
mov
lcall
loop
xchg
lcall
out
push
fcmove
push
sub
sbb
inc
mov
jmp
add
xlat
dec
mov
dec
xchg
push
pop
push
cwtl
popa
ror
test
pop
ret
cld
add
test
mov
lahf
out
dec
mov
sarl
and
ljmp
mov
pop
cmp
push
lea
dec
arpl
in
clc
inc
lahf
mov
stos
xchg
mul
mov
leave
testl
xchg
sahf
or
ja
push
and
adc
gs
and
std
lds
mov
xchg
sub
adc
int
cmp
xor
inc
cmp
xorb
jo
stos
int
ja
xor
les
fsubrl
lods
lock
insb
add
sbb
iret
fdivs
inc
stos
jl
repz
data16
out
mov
lods
mov
and
fisubs
adc
mov
mov
in
sbb
test
loope
cs
movsb
ret
mov
or
lods
lea
imul
xor
mov
nop
lret
push
mov
add
xchg
push
ret
pop
call
mov
ds
sub
mov
add
lods
xchg
dec
shlb
fsubrl
mov
jo
sbbl
mov
inc
inc
xchg
sub
adc
xlat
stc
repz
lods
movb
mov
cmp
mov
in
rcr
vmread
inc
sub
sub
test
xchg
push
cmp
jns
test
push
rcrl
ljmp
mov
cwtl
adc
scas
cli
mov
sahf
mov
push
lods
push
data16
jo
mov
sub
mov
xchg
andl
fidivrl
bnd
mov
jg
add
or
fwait
cmp
in
xchg
fwait
pop
sbb
icebp
mov
mov
shl
or
imul
inc
push
jmp
pushl
or
daa
fs
stos
and
cmp
sbb
aad
clc
ja
loope
shll
js
subb
xor
jmp
stos
rclw
sub
xor
test
jl
xor
sub
push
rcr
addl
push
movsb
fldt
popa
inc
add
call
rclb
lret
or
add
and
adc
rcl
and
orl
sub
test
push
ljmp
fxch
mov
aad
sub
sbb
mov
fstpl
insl
lahf
out
flds
fisttps
cli
icebp
loopne
push
popa
loope
addr16
fdivs
pushf
xchg
adc
push
shll
add
xchg
out
sub
cmp
lcall
or
mov
imul
enter
ret
push
mov
and
add
mov
std
outsl
mov
loop
ret
iret
xchg
xor
inc
cmp
mov
mov
inc
bound
sahf
popa
lcall
orb
cmp
lods
and
pop
dec
xlat
ja
or
in
sbb
repz
xchg
mov
gs
pop
bound
fbstp
xlat
rclb
push
fcmovnb
test
rcrb
pushf
mov
test
hlt
bound
and
xchg
and
outsl
aad
or
and
cmp
xor
or
sbb
adc
fadd
shrb
ljmp
or
shll
lock
int3
test
add
jb
bound
jae
imul
or
outsl
movsl
pop
xchg
or
add
sbb
mov
xor
push
ds
jbe
sbb
pusha
lods
sar
dec
je
push
je
pop
push
xchg
daa
nop
mov
sub
lock
push
int3
and
lock
std
repz
fcomp
in
add
or
loope
xor
daa
sub
imul
fcomps
daa
test
lcall
mov
cld
push
sbb
pushw
mov
push
dec
into
pop
dec
or
jnp
and
test
adc
cwtl
std
dec
cli
pop
mov
mov
sub
dec
mov
in
inc
jbe
mov
add
aas
nop
gs
pop
sbb
inc
adc
test
mov
cli
popf
mov
ja
cmp
outsb
inc
lds
insb
adc
jnp
lret
iret
les
or
jne
add
ljmp
pop
and
hlt
ja
mov
add
in
ffreep
out
sub
inc
test
mov
decl
fistpl
ret
bswap
and
rolb
ds
fiaddl
jb
sbb
aad
shr
enter
add
sub
ss
lea
stc
pushf
out
mov
shll
aas
pop
mov
jge
inc
cltd
and
mov
aas
daa
daa
shl
shll
sbb
call
jecxz
cmpsb
roll
jbe
push
xchg
lret
mov
cmc
mov
mov
in
cmp
jnp
lock
cmpb
xchg
rclb
fisubrl
xchg
dec
jmp
jl
and
aad
sub
or
jo
lret
fisttps
push
or
push
in
pop
dec
mov
push
popf
aad
or
and
not
sub
and
mov
cmp
push
dec
repnz
cli
sti
lret
ljmp
mov
mov
adc
fs
adc
xchg
pop
in
inc
pop
sahf
nop
jo
jle
jae
fs
fisttpll
dec
or
pusha
test
push
or
int
xlat
pop
test
ret
mov
add
adc
in
mov
mov
mov
cmp
jl
jge
and
repz
xchg
mov
push
mov
inc
adc
call
sarl
push
jmp
add
mov
or
jo
add
push
push
mov
pop
adc
ss
and
mov
into
sub
mov
addr16
pop
sub
push
popa
add
test
loope
hlt
adc
std
push
loopne
aas
push
dec
xchg
and
repz
dec
out
push
repz
xchg
sub
je
sub
add
ret
jle
rorl
outsl
mov
dec
lret
cmp
leave
int
fwait
adc
adc
inc
xchg
cmpsb
dec
out
and
jns
jb
and
ljmp
ret
mov
xor
aad
daa
icebp
and
lods
loopne
clc
xchg
popf
sub
sub
mov
cs
xchg
movsb
inc
lods
xor
xchg
outsl
or
outsb
insb
sub
sti
ret
shl
clc
xchg
sub
adc
or
fcmovbe
lret
mov
movsl
sub
sub
int3
xor
cmp
xor
rorb
sbb
mov
ret
push
jl
ds
add
stc
repnz
lods
jl
loope
xchg
jbe
iret
mov
lcall
clc
mov
cmp
out
jnp
or
lret
cwtl
ljmp
loopne
iret
cmp
sbbl
pushf
ljmp
xchg
ret
xchg
repnz
jno
test
loop
out
and
es
out
inc
negl
mov
stc
cwtl
notb
sar
test
popf
in
mov
es
addb
into
cmp
pop
inc
mov
xor
add
dec
jns
mov
loope
icebp
pusha
mov
cmp
leave
filds
clc
inc
pop
rcl
sub
dec
out
hlt
mov
xlat
cmpb
test
test
cltd
je
fistpl
lds
or
in
xor
ret
mov
xor
cmp
stos
aam
dec
or
sbb
mov
dec
jecxz
mov
cmp
adc
icebp
insl
jl
negl
pusha
adc
out
cltd
xchg
daa
stc
pusha
inc
mov
xorl
outsl
shlb
or
fcoms
cmc
and
std
inc
movsl
and
adc
mov
rcrb
incb
adc
repz
aad
mov
int
sbb
cld
sbb
ret
aad
sub
mov
pop
loop
outsb
ljmp
cli
andb
jge
inc
ret
lret
ljmp
xlat
add
xchg
push
outsl
adc
bound
sbb
xchg
sbb
jns
loope
and
stos
cltd
mov
int
pushf
pusha
sarb
or
sub
jb
mov
idivb
fisttps
pop
push
xor
iret
pusha
scas
sub
shr
das
adc
xchg
mov
mov
push
cmc
ret
fs
stc
fcomps
and
xor
in
jns
movsl
repz
sbb
pop
pushl
sub
and
dec
xor
shlb
jge
into
ret
sub
xchg
shrl
push
negl
ja
cmp
ror
mov
mov
ret
lock
and
mov
mov
fsts
ret
adc
mov
aam
jae
pushf
test
or
loopne
mov
lods
xor
cmpb
cli
jp
scas
rcl
inc
das
hlt
jb
lods
test
lahf
out
lret
sub
adcl
mov
lock
jecxz
push
mov
shll
mov
mov
jo
xchg
push
fcos
movsl
fidivs
loop
pop
jno
mov
mov
idivb
mov
sbb
mov
mov
fstpl
in
push
sbb
cmpsb
mov
popa
imul
lret
xor
jmp
xlat
ja
fcompl
jg
data16
and
jo
sub
lahf
inc
push
pusha
mov
fsts
xchg
rorl
xor
fadds
outsl
in
scas
xlat
jbe
sub
xchg
dec
insb
aaa
mov
xchg
cmpsb
shrb
or
push
int
jne
out
sub
test
lahf
insb
fisubrs
ss
imul
sub
jg
or
hlt
nop
cmpsb
lcall
int3
pop
sahf
imul
arpl
sub
outsl
sub
ror
mov
lods
push
push
cltd
and
and
out
imul
or
out
es
jg
sub
test
int
movsl
lods
sub
xor
add
lcall
push
pusha
outsl
rolb
out
roll
xor
mov
sbb
mov
scas
rorl
imul
sbb
out
cld
mov
stc
popa
mov
sti
dec
gs
mov
pusha
lcall
inc
leave
in
xchg
mov
mov
les
add
push
gs
ffree
mov
leave
jnp
fcmovne
xchg
or
push
mov
ja
adc
inc
lret
sti
adc
jecxz
sub
std
in
imul
inc
sbb
add
sub
aas
lcall
leave
loope
pusha
inc
sbb
outsb
data16
add
mov
pushl
dec
xchg
imull
mov
insb
xchg
or
movsl
xchg
pop
gs
xchg
or
inc
or
add
pop
mov
mov
mov
scas
push
cmpsl
arpl
jg
xchg
sbb
in
jge
jb
sbb
sahf
xor
xor
xchg
clc
ffreep
add
sbb
push
xor
cmp
jnp
xchg
out
int3
mov
inc
cli
scas
das
pop
xor
call
or
call
jp
push
rcrb
ret
cmp
jl
sub
je
ret
das
daa
pusha
ja
jle
xor
out
adc
cmc
adc
xchg
adc
dec
pop
mov
adc
popf
mov
jno
aas
xlat
inc
mov
inc
shlb
in
std
mov
stos
cltd
xlat
sbb
adc
push
dec
lcall
lcall
clc
hlt
scas
incl
or
and
lret
xor
fwait
ds
pusha
outsl
add
rol
ljmp
js
push
sarb
enter
pop
ds
mov
xchg
jp
fsubrs
adc
scas
mov
mov
push
jno
fsub
ja
hlt
xor
insl
in
int3
or
cmpsb
imul
or
mov
pop
jae
jmp
sti
jp
xchg
cmp
in
ljmp
iret
jecxz
stc
jnp
iret
dec
sub
roll
loopne
inc
shrl
and
int3
stos
inc
xchg
insl
jge,pt
add
popf
xlat
popf
jae
popa
sti
push
or
std
scas
mov
outsb
lret
pop
test
push
push
cmp
inc
mov
in
push
enter
in
les
bndstx
inc
pop
mov
pushf
out
inc
testb
jp
sti
sti
push
jo
jnp
sub
lret
xchg
inc
hlt
adc
push
add
in
dec
fldcw
out
xor
fbstp
jp
inc
adc
and
jne
shlb
mov
inc
dec
mov
sti
inc
test
pop
push
xlat
dec
iret
xchg
cmp
mov
nop
rcll
shll
jnp
jecxz
and
push
dec
arpl
mov
loopne
sub
cltd
mov
add
test
addr16
lahf
adc
xor
mov
addl
jne
push
mov
repnz
lea
or
jp
cltd
repnz
sbb
cmpsb
test
lahf
enter
xor
stc
retw
repz
out
arpl
pop
inc
shlb
add
popf
adc
loopne
int
movsl
arpl
inc
cmp
adc
cmpl
xor
pop
add
das
jae
out
popf
imul
or
jecxz
test
sar
cmpl
aas
sub
das
mov
pop
mov
cli
rcrl
dec
push
inc
adc
inc
push
fldz
xor
jb
pop
cli
test
lret
insb
inc
mov
sub
rclb
cli
cmp
stos
mov
int3
dec
ret
xor
out
fldl
mov
push
popf
inc
mov
orb
ljmp
mov
xchg
in
and
jmp
and
xor
inc
add
mov
dec
jbe
pop
lods
and
sahf
mov
push
xor
sbb
mov
arpl
mov
daa
ja
ja
pop
in
add
das
xor
mov
jmp
mulpd
mov
xchg
inc
call
aad
insb
cmp
lock
sarl
std
xchg
fdivl
stc
push
push
das
jbe
jae
mov
das
enter
nop
sbb
lods
je
leave
movsl
sarl
jne
cld
push
and
cmp
adc
daa
add
into
into
xchg
aad
gs
xor
shll
fstpl
sbbb
and
mov
loope
push
pop
mov
stos
inc
bound
popfw
xchg
lods
lock
sub
int3
mov
xor
mov
xchg
adc
mov
push
fs
cmp
ss
dec
jle
cmp
or
sub
mov
cli
jl
cwtl
repnz
lret
dec
aaa
pop
icebp
mov
push
insl
mov
push
adc
or
mov
push
mov
call
shlb
xor
pusha
cmc
adc
fnsave
shlb
pop
jg
adc
bound
lcall
adc
js
inc
lcall
stos
cmp
aaa
push
inc
mov
aad
mov
mov
mov
cmp
imul
sub
cmp
call
inc
lds
pop
xlat
xchg
mov
mov
sti
and
inc
push
xchg
fs
clc
clc
fdivl
mov
icebp
lods
mov
sbb
fcmovb
ds
mov
mov
jg
insb
push
xor
mov
shll
and
push
push
sub
lret
sbb
xor
adc
aam
inc
jge
addr16
loopne
xchg
cmp
test
jle
dec
xchg
add
mov
sbb
jb
lahf
sub
fisttpl
orl
cmp
out
lret
xchg
stos
mov
fwait
inc
nop
negl
cmp
dec
lods
cmpsl
sub
mov
jb
je
jbe
mov
and
call
inc
loopne
xchg
call
lret
jmp
jg
or
push
test
outsb
or
pop
into
ljmp
xor
fcoml
sub
inc
inc
mov
xchg
and
push
insl
sub
mov
divl
sub
lret
addb
inc
stos
mov
xor
int
mov
pushf
mov
xchg
jle
cld
subl
loopne
xchg
popf
mull
imul
sar
xchg
ret
gs
xor
shr
jbe
dec
inc
cs
xchg
jbe
mov
ret
inc
add
sbb
push
fs
ja
aad
test
mov
sbb
dec
adc
int3
jp
je
popf
aam
sub
push
test
lods
adc
xchg
jecxz
mov
mov
in
jg
xchg
test
aad
ljmp
dec
addr16
lods
adc
popf
xchg
jg
jecxz
cmp
mov
sub
xor
outsb
cmp
imul
ss
outsb
sbb
into
cmp
mov
xchg
inc
mov
dec
data16
push
sti
jmp
shl
js
fisubl
inc
inc
mov
and
cmp
nop
cltd
mov
and
jmp
into
enter
hlt
rcrl
jae
faddl
aaa
inc
cmp
push
inc
adc
movsb
ror
int3
xchg
inc
add
add
mov
pop
mov
jle
into
and
push
int3
xor
jne
sub
mov
test
ret
mov
pop
ds
jb
fisttpll
xchg
lds
jle
push
xor
mov
push
fiadds
and
fdiv
outsl
mov
or
jo
xor
int3
sub
xor
test
push
aad
pusha
das
xor
and
mov
test
cwtl
mov
and
ret
aaa
push
inc
sub
xchg
mov
cmp
sub
cltd
test
stc
scas
cmpsl
pop
rcl
adcl
dec
notb
into
pushf
sbb
mov
or
and
iret
aaa
xchg
insl
pop
xor
jne
aam
lods
loopne
mov
inc
jp
test
movsb
cmp
mov
scas
or
cmpsb
cmc
mov
xchg
fimull
mov
hlt
mov
lock
scas
jle
lret
xchg
jl
les
xchg
fsubr
dec
jg
push
xchg
cmpsl
lret
jle
stos
gs
icebp
jbe
fdiv
sub
push
iret
fldl
push
shl
and
pop
cmpsl
xor
iret
pusha
jp
mov
pushf
aaa
sub
xlat
inc
mov
mov
inc
inc
in
pop
stc
cli
mov
fcmovb
enter
cmpsb
roll
stos
in
lock
dec
movsl
aaa
pusha
loop
sub
mov
pop
inc
jbe
sbb
cmpsb
lock
xor
push
rcrb
std
frstor
and
imul
rclb
enter
cmp
jle
dec
ret
add
pop
lods
pusha
mov
jno
int3
sub
push
fstpt
jnp
jle
call
loopne
and
mov
lahf
aas
enter
bnd
repz
lods
jmp
setp
dec
jle
loope
bound
mov
add
cmp
mov
jl
add
push
bound
mov
jle
les
adc
movsl
loope
sbb
mov
adc
ljmp
xor
dec
push
pop
lret
pop
icebp
mov
xor
mov
ja
jae
jg
push
xchg
lcall
mov
sub
xchg
addr16
mov
sbb
imul
add
pop
inc
or
imul
inc
ret
popa
pop
add
fldcw
push
mov
cmp
aad
pop
hlt
insb
xor
push
or
add
fisttps
pop
push
mov
dec
and
stos
js
sbb
push
xor
sbb
mov
or
movsl
loopne
pop
dec
in
cmp
inc
pop
xchg
scas
pop
push
inc
out
mov
sub
mov
call
cmp
sub
movsl
inc
push
xor
in
fcomip
aam
add
sbb
or
adc
aaa
movb
dec
cmpsl
in
lahf
int
sarb
and
ljmp
lret
cmp
add
pushw
jecxz
cmc
adc
repz
sbb
add
loopne
xchg
shll
xchg
pop
inc
or
and
sub
jo
add
loopne
pop
hlt
cmpsl
jmp
sbb
mov
or
pop
mov
popf
pop
jmp
andl
in
mov
push
dec
dec
adc
mov
lret
push
mov
adc
ljmp
fwait
pop
jns
or
popf
xor
xchg
adc
dec
mov
mov
xchg
or
mov
insl
fmull
insb
pop
sub
sub
notb
xchg
enter
jl
push
in
addr16
rolb
icebp
movsb
fidivrl
pop
fwait
push
shll
outsb
rolb
sbb
movsb
insb
xorl
out
mov
and
inc
fmul
push
shrb
cmc
xlat
jg
mov
and
out
or
jmp
sbb
cmpsl
pushf
cwtl
test
stos
mov
mov
lock
mov
jnp
adc
dec
push
ror
roll
fildll
mov
mov
arpl
push
aam
lods
in
push
aad
scas
lods
std
xchg
mov
jge
das
push
out
aam
add
jp
sbb
jmp
mov
cmp
xchg
call
movsl
xor
sbb
xor
jecxz
ss
or
cld
sub
call
ficoml
dec
shrl
outsb
push
and
cmpsl
inc
stc
push
sti
cmpsb
rorb
mov
xorl
in
int3
std
cmc
loope
aad
adc
jle
lahf
add
fbld
ficoml
mov
jo
aas
pop
mov
loope
pop
sub
cmc
pushf
mov
outsl
pop
mov
lea
cmp
lret
mov
cmpsb
in
stos
add
sub
mov
adc
or
mov
xchg
jp
inc
inc
xchg
enter
iret
dec
cmpsl
pusha
and
and
movsl
push
pushf
xor
movsb
in
mov
mov
mov
adc
stos
lock
aas
push
mov
movsl
rcl
nop
pop
pop
and
test
push
fsubr
js
inc
push
movsl
std
add
call
inc
sarb
mov
pop
push
and
jnp
pushf
out
lret
scas
movsl
fdivl
bound
mov
std
jmp
ljmp
icebp
or
hlt
mov
adc
mov
jp
add
push
int3
insl
xor
mov
and
aam
in
dec
out
cwtl
sub
cmc
nop
out
pop
test
inc
xlat
hlt
push
lcall
sub
cmp
rcrl
movsl
iret
rorl
or
cltd
dec
cmp
xchg
je
sub
cmp
ret
imul
mulb
xor
push
es
mov
xchg
dec
sbb
jmp
jmp
loope
jge
imul
push
xchg
das
addb
ss
lcall
jbe
les
push
shll
leave
inc
cmp
shl
cmp
xor
push
pop
sahf
sub
fldl
shlb
jl
das
xor
pop
lahf
lock
inc
or
pop
nop
adc
xchg
cmp
pushf
out
push
mov
rol
mov
sbb
rolb
xchg
std
inc
out
rcll
push
cmpsb
aad
inc
fucomi
pop
out
mov
mov
sub
mov
pop
cmovge
inc
dec
lods
out
dec
xor
push
in
shl
pop
jp
loop
sub
je
mov
jl
mov
jnp
mov
sbb
pop
scas
dec
sub
xchg
icebp
add
lds
addb
xchg
sbb
pop
stc
fldcw
ds
xchg
cmpb
xchg
inc
cmp
mov
loopne
lret
aaa
daa
cmpsb
pushf
pop
leave
in
in
leave
push
inc
push
sub
cs
pusha
xchg
stc
adc
push
nop
mov
adc
push
mov
imul
jl
jne
rorl
repnz
ret
jmp
pop
mov
sbbl
push
std
xchg
sbb
inc
adc
ljmp
pop
cmp
int3
mov
movsl
inc
mov
sbb
xchg
fadd
mov
mov
jmp
call
jmp
fbld
jnp
and
subl
lds
xor
bnd
jne
sti
mov
pop
xor
insl
push
insb
jl
dec
push
enter
push
dec
cmpsb
push
xlat
inc
flds
out
test
lds
lods
mov
push
pushf
dec
repz
popf
push
test
out
popa
movsl
call
inc
test
movsl
arpl
outsb
stos
test
daa
je
xchg
test
fdivrs
scas
rcl
mov
sub
mov
push
js
out
ret
aam
mov
xchg
int
xor
rol
jo
or
jne
dec
adc
xchg
int
mov
dec
mov
pop
cmpsb
mov
xor
push
lock
stos
int
fsubs
in
push
test
in
jns
add
sti
sbb
mov
pop
push
call
jne
mov
setne
jmp
notl
fwait
inc
hlt
xor
arpl
mov
int
fcom
xor
int3
pop
rcrl
xchg
cmpsl
jno
daa
push
mov
nop
ret
push
xchg
mov
mov
pop
dec
stos
int
scas
xchg
lcall
out
xorb
mov
jge
or
stos
mov
cmpsl
inc
movsl
addr16
mov
nop
adcl
mov
dec
ret
mov
pop
jmp
imulb
sub
dec
in
mov
pop
mov
data16
mov
ret
push
mov
jno
pop
xchg
inc
stos
inc
loope
sub
jnp
js
hlt
mov
xchg
jmp
xor
jns
mov
xchg
insb
loopne
adc
ffree
lea
xor
fwait
inc
daa
cmp
insb
sti
xor
aas
adc
aam
xor
or
add
jne
fistpll
in
sbb
fiaddl
push
scas
sub
pusha
add
idivb
loop
jae
shlb
addb
xchg
push
cld
insb
mov
call
aad
in
mov
push
pop
xchg
add
int
lods
mov
stc
fistps
aam
in
lods
daa
xchg
in
inc
xor
xor
jne
rcrl
repnz
movsl
ret
jb
in
dec
insb
cli
xchg
jno
mov
lahf
xchg
ja
shll
sbb
lea
or
push
xchg
int
sti
mov
xchg
in
loopne
stc
or
bnd
arpl
lcall
lret
mov
sub
lret
and
cs
sbb
scas
int
shrb
push
fcompl
mov
iret
mov
stc
push
imul
sarb
or
fidivrs
fsts
push
dec
xchg
aaa
xor
or
sbb
dec
nop
sti
push
mov
pop
push
mov
mov
imul
frstor
ror
cli
jmp
mov
jg
mov
mov
mov
and
hlt
loop
dec
xor
or
push
push
cwtl
lahf
hlt
dec
lret
push
insb
ret
in
add
mov
and
cltd
fstpl
aas
mov
dec
loop
inc
cwtl
stos
pop
or
sub
jecxz
cmp
ja
imul
lds
jmp
sbbb
pop
rorl
idivb
xor
mov
xor
loope
daa
and
add
xchg
sarb
cmp
int
int3
cmp
loop
xor
cwtl
pop
mov
sub
test
pop
gs
leave
lea
loop
mov
data16
dec
xchg
xor
in
repz
cmp
test
mov
push
pop
inc
mov
inc
out
mov
jo
jae
scas
aaa
xchg
cmp
lods
pop
push
fwait
dec
outsl
ja
dec
dec
cmp
lcall
shll
mov
push
cmp
cs
and
idivb
repnz
jl
mov
in
push
jp
jmp
rcr
adc
push
out
mov
in
mov
and
loopne
lcall
test
in
xchg
stos
and
sti
leave
daa
xchg
aad
js
mov
xorb
imul
mov
xchg
sbb
xchg
adc
or
mov
insb
mov
aad
add
idivb
lods
mov
pop
push
push
rorb
lds
call
inc
rol
pushf
sbb
sub
add
and
test
inc
imul
cs
cli
shrl
aas
mov
cmp
shlb
enter
out
pextrw
sub
ja
push
adc
xchg
pop
jnp
jbe
cmp
inc
cli
jg
int3
dec
pop
nop
pop
int
rcr
cmp
cmc
lret
aad
gs
dec
push
lcall
sub
nop
ja
out
cmp
push
pop
mov
sti
into
push
clc
xchg
adc
cmp
test
loop
adc
xor
sbb
dec
mov
daa
shl
dec
pop
add
add
inc
iret
aam
push
mov
negb
arpl
sbb
fidivrs
jne
dec
pushf
test
xchg
or
add
sbb
jmp
mov
adc
inc
idivl
lock
imul
mov
adc
mov
daa
sub
leave
mov
cmp
hlt
xlat
sbb
movsl
loop
xor
sub
leave
or
push
aaa
int
clc
rdtsc
leave
add
cmpsl
or
jge
adc
ret
add
cs
lds
cmp
mov
in
int3
int3
add
je
pop
mov
iret
dec
lods
lret
inc
mov
dec
jmp
mov
adc
sbb
ds
and
sahf
int
scas
fiadds
inc
push
clc
fildll
or
iret
pop
jne
fsubrl
mov
jge
sbb
mov
ds
fcomip
xor
fst
iret
dec
jne
ffreep
leave
add
or
add
movsb
pop
push
xchg
push
mov
jmp
lock
hlt
jg
shl
int
clc
ret
xor
rcr
mov
add
and
pop
nop
push
clc
loope
pop
push
rcr
enter
sub
inc
leave
cmp
sahf
out
iret
fistl
mul
sub
fidivs
cmp
fldl
nop
notl
xor
mov
or
subl
scas
fs
clc
cmpsb
dec
scas
std
les
testl
mov
xchg
das
inc
mov
stos
js
outsb
push
sbb
push
sub
pop
movb
inc
or
inc
mov
aas
scas
sbb
das
aad
inc
and
sub
mov
pop
mov
cs
jmp
xchg
movsl
jl
jae
jg
int3
test
add
stos
dec
or
in
andb
jnp
ss
ret
mov
push
sahf
and
ds
push
popf
xchg
in
or
add
push
sbb
inc
xchg
mov
xchg
mov
dec
push
jne
out
cmp
or
lcall
cwtl
test
repnz
repz
add
sbb
loopne
daa
movsl
out
inc
mov
pop
mov
dec
lahf
sub
pop
je
addl
xchg
test
stc
mov
add
cmp
lret
cmp
jle
movb
mov
pop
adc
idivl
jl
mov
es
jmp
dec
jmp
push
vpslld
loope
inc
cmp
test
xor
aad
push
xchg
fisttpl
add
dec
ret
js
xchg
fdivl
push
arpl
les
cmpsl
xlat
out
ret
xor
push
inc
lret
pop
dec
sub
mov
mov
sbb
dec
sahf
icebp
call
mov
inc
in
pusha
test
fsubrs
fidivl
stc
cmp
mov
xchg
fisttpl
dec
or
jnp
jecxz
insl
iret
or
fmull
shlb
cli
sbb
mov
xor
adc
sbbb
shrb
rclb
leave
mov
stc
dec
jno
jmp
gs
xchg
xor
sar
xor
mov
jb
call
inc
jecxz
adc
jmp
les
jle
jae
xor
addl
or
jle
rol
rcl
inc
fcompl
out
outsb
adc
leave
jb
aaa
adc
cld
outsl
push
dec
je
scas
ja
sub
outsb
scas
or
popf
mov
sbb
or
clc
jp
les
lds
lcall
or
xchg
mov
mov
or
mov
in
fimull
ret
mov
fiadds
stos
repz
inc
test
sti
outsb
outsb
sub
ret
outsl
nop
cltd
xchg
aad
test
push
das
jbe
inc
out
xchg
aas
in
inc
movsb
sub
scas
addb
lds
loop
in
xor
outsb
sar
mov
leave
xlat
xlat
xchg
fs
ljmp
mov
leave
pop
or
mov
mov
lods
int
jp
sbb
jnp
into
pop
pop
xchg
push
xchg
or
jae
or
jo
call
rcll
in
fwait
hlt
cmpsb
mov
cmpsb
clc
push
es
xor
popf
add
mov
stc
lea
mov
leave
pop
shrl
xchg
adc
mov
aad
in
or
ret
ret
popa
push
mov
or
jge
dec
mov
add
icebp
pop
and
jb
mov
testb
lods
clc
fcomps
sub
push
rorl
cmc
nop
fistpll
cli
mov
andl
fidivrs
mov
mov
subb
fnstsw
mov
sahf
or
pop
sub
imul
xor
xor
daa
and
add
leave
mov
out
mov
and
xor
adc
std
inc
sub
pop
inc
lcall
pop
add
test
mov
sbb
loopne
inc
call
push
pop
xlat
lock
jl
js
xor
cli
mov
cld
push
or
xor
xchg
add
mov
adc
mov
xor
adc
sahf
leave
dec
sub
push
add
lea
pop
addr16
push
push
push
in
in
push
daa
aam
lock
test
shll
dec
shrb
aam
lods
ret
pop
jg
mov
data16
push
pop
fstpl
loope
mov
call
in
lcall
jecxz
adc
inc
and
stos
mov
cltd
fwait
xchg
push
sbb
push
cmp
mov
mov
cwtl
dec
jmp
sahf
cmp
cmpsl
loopne
adc
adc
cwtl
int
inc
jns
dec
mov
mov
cli
iret
and
push
outsb
jge
lret
mov
daa
push
test
sub
je
fidivrs
mov
idivl
mov
stos
cmp
fsubr
in
fstpl
hlt
call
xor
sub
push
jns
ljmp
jge
jns
hlt
jp
add
pushf
add
sbb
in
cs
jb
pop
orl
mov
enter
add
xchg
aad
add
xor
popf
push
test
lods
xchg
scas
inc
mov
mov
pop
xor
dec
cmc
loope
repz
je
xchg
std
aad
xchg
mov
int
sub
inc
push
and
push
or
mov
cs
cmp
or
cmp
fdivrs
mov
shr
lahf
xor
popf
cmp
inc
int
adc
aaa
jmp
ljmp
bound
add
jno
clc
cmp
ljmp
fiadds
fdivs
add
in
mov
sub
leave
cmp
cmp
int3
xor
repz
sarb
shll
sbb
cmp
test
add
notb
and
cmp
pushf
xor
adc
ret
orl
mov
mov
addr16
into
popa
shll
add
xchg
sbb
pop
loopne
ffreep
int
sub
dec
mov
push
imul
push
out
test
aas
lock
jnp
jnp
mov
and
inc
xorl
dec
inc
fadds
cmp
std
mov
je
nop
pop
imul
push
mov
lea
clc
or
es
mov
outsl
js
push
cmc
or
int
adc
insb
jge
cmp
xchg
and
in
xor
lock
xor
subl
pusha
loope
repz
sbb
decb
ds
mov
leave
cmp
push
aas
mov
and
int3
rorb
cmp
xor
shrl
mov
mov
adc
and
fcomip
xchg
out
dec
inc
int
xor
dec
int
push
cmp
outsl
sbb
xor
jbe
out
clc
notb
cmc
bound
cld
and
les
not
sub
orb
mov
repz
dec
fbld
and
leave
cmp
xchg
xchg
sub
inc
sti
call
push
int
xor
loopne,pt
sbb
icebp
cmp
ficoml
aam
sbb
or
sarb
int3
sbb
negb
xor
cmp
inc
movsb
and
scas
sbb
aad
push
jo
mov
push
loopne
fcom
imul
clc
dec
jno
sbb
adc
aad
out
sub
jl
pop
mov
pop
pop
and
in
mov
push
stos
mov
loop
sub
js
and
popa
sti
mov
sbb
dec
insl
xor
xor
test
inc
add
std
adc
inc
popf
mov
pop
clc
insb
insb
pop
aas
test
imul
outsl
insb
insb
adc
inc
xor
mov
cwtl
sub
in
xchg
sbb
loop
std
mov
fistpl
ja
outsl
xor
sbb
pop
jmp
daa
in
popf
mov
ret
xchg
sbb
gs
fimuls
int3
add
sub
dec
mov
enter
sarl
rcrb
stc
clc
movsb
and
add
jl
movsl
sub
mov
cmp
ret
mov
adc
jb
fldcw
mov
jae
adc
in
push
and
add
insl
stos
mov
inc
fwait
pusha
push
push
outsl
sub
xor
mov
mov
in
dec
mov
xor
jo
xchg
jb
xor
lahf
mov
inc
jbe
xor
xchg
xchg
mov
imul
insb
or
dec
dec
sbb
popf
inc
cmp
pop
cltd
push
test
adc
mov
shl
xor
lcall
ljmp
inc
mov
jecxz
push
lea
fistpl
lods
mov
std
xchg
insl
or
inc
cwtl
ficompl
ret
mov
sbb
mov
cmpsb
stos
hlt
cwtl
xchg
cmpl
out
jp
mov
mov
ret
ret
lea
ljmp
scas
jns
adc
adc
scas
xlat
dec
cld
in
rol
sub
xchg
imul
jns
push
xorl
jae
pop
fldl
repnz
in
add
imul
ja
push
mov
iret
xor
mov
dec
int3
call
dec
adc
fcmovb
inc
and
sbb
lods
mov
movsl
ret
cs
popa
cmp
divb
cmp
aam
push
jge
jnp
jge
inc
daa
cmpsb
filds
int
inc
mov
xor
arpl
lcall
mov
dec
inc
and
fwait
jecxz
cmpsb
addb
and
xor
lds
rcrb
sbb
adc
sbb
lahf
and
sub
test
ss
sub
daa
decl
add
push
mov
cmp
pop
jae
mov
xor
rcr
rol
in
jne
icebp
sub
cmp
outsb
mov
test
fucomi
pop
and
ret
pop
mov
mov
mov
pop
clc
iret
int
sbb
int3
movsl
pop
push
aas
ja
dec
lret
shll
mov
add
jno
inc
mov
jle
mov
jl
mov
cmpsb
add
mov
inc
es
pop
sarb
jnp
cld
jp
into
mov
jge
xor
jge
popf
aaa
cld
sti
mov
jo
shl
mov
mov
xchg
mov
js
xchg
out
mov
sbb
xor
mov
push
movsl
lods
iret
dec
mov
dec
xchg
cmp
insb
out
xor
aad
dec
cmp
jne
stos
decb
fdiv
lods
dec
add
lds
lret
cmp
gs
jle
fwait
roll
mov
bnd
popf
lock
xor
or
shll
mov
dec
aas
mov
in
loopne
push
fsubl
jmp
leave
lcall
les
mov
sbb
push
ljmp
rorl
pop
je
nop
pop
push
add
rolb
stos
bound
and
pop
push
mov
dec
dec
fadds
pushf
adcl
fisttpll
shlb
or
outsl
push
into
ljmp
xor
hlt
insl
test
lock
lret
jecxz
addr16
adc
xchg
mov
xchg
pop
cmpsb
insb
sub
or
add
ljmp
cmpsl
mov
or
pop
push
repz
cmp
mov
arpl
out
popf
sbb
sub
mov
shlb
cld
jb
inc
adc
test
subl
dec
cmp
xchg
xchg
adc
dec
nop
xchg
ret
xchg
mov
xchg
mov
jl
popf
push
dec
mov
loope
std
mov
push
in
push
mov
pusha
pop
pop
mov
add
add
clc
sti
inc
inc
push
cltd
xchg
lods
push
jp
jmp
add
aam
movsl
inc
jmp
fs
jnp
stc
and
ret
testb
popa
jg
std
xor
jnp
xchg
outsb
add
fldcw
xchg
clc
xchg
movb
sub
dec
arpl
les
inc
pop
add
jne
lea
dec
xchg
pop
or
dec
add
xor
or
inc
neg
mov
add
xchg
add
lock
idivb
out
int3
mov
fxch
jno
sbb
insb
jle
and
jmp
sub
in
xchg
scas
mov
data16
dec
mov
jle
or
dec
xor
fists
inc
fnstcw
dec
shll
mov
inc
mov
sti
mov
cmpsl
test
cmp
call
dec
addr16
movsb
les
insl
cwtl
aam
enter
jne
mov
inc
cmp
and
adc
movsb
les
sahf
and
imul
mov
fmull
rcrb
xchg
sbb
add
push
and
bnd
and
popf
cli
ret
mov
aad
insl
stc
aad
dec
adc
adc
xchg
aaa
imul
nop
mov
dec
pop
sbb
xchg
xor
cli
push
testb
jae
xor
lock
push
cld
pop
cmc
dec
dec
lds
inc
dec
add
in
add
jecxz
lret
cmp
in
imulb
mov
lock
and
sub
inc
mov
in
shlb
add
pop
sub
push
popf
clc
mov
test
add
dec
rorl
push
sub
mov
fnstsw
add
lock
push
sub
fcompl
dec
hlt
jp
popf
into
rorl
popf
cmpl
testl
push
popa
pop
orb
pop
and
out
sar
into
pop
movsl
in
imul
ret
lock
lahf
out
scas
inc
ss
daa
fildl
inc
dec
xor
in
subl
pop
and
lcall
inc
sub
push
or
sbbl
jmp
cmpsb
lods
orb
insl
aaa
xor
sbb
push
jae
jmp
push
xor
cmp
mov
loope
mov
sti
and
jmp
cmpsb
sub
gs
cs
ja
mov
gs
pushf
std
in
jbe
mov
and
sbb
jl
fists
rorb
jb
in
sub
cmp
out
pushf
mov
push
mov
pop
add
and
jmp
test
cmc
xchg
mov
ja
sar
add
popf
add
add
repnz
xor
pop
xchg
and
loopne
fadd
dec
cld
lea
dec
and
xorb
das
and
aas
and
push
cmp
dec
stos
roll
and
mov
arpl
lret
dec
jo
cwtl
pop
rcl
mov
push
xor
xlat
movsb
scas
mov
add
rclb
cwtl
sub
mov
mov
mov
stc
xor
movsb
xchg
inc
push
mov
dec
push
dec
daa
xchg
sub
decl
stos
sub
orl
xor
imul
cmpps
gs
pop
mov
popf
adc
es
cmp
fnstsw
inc
je
jbe
sub
pop
add
fcomp
adc
repnz
mov
jns
cmp
xrelease
pop
mov
xchg
add
insl
pop
loope
mov
stos
xchg
push
inc
imul
dec
sbb
mov
out
mov
enter
xor
addr16
and
push
fisttpl
jle
sbb
es
mov
mull
iret
dec
xchg
in
inc
xor
lea
fsubl
hlt
ljmp
into
push
mov
loop
ljmp
xor
xchg
fstl
mov
pop
pop
adc
sub
or
in
in
leave
xchg
and
and
iret
fcompl
xchg
mov
sbb
and
push
or
fdiv
mov
xchg
fcomi
andb
xchg
test
xchg
and
fldenv
sbbl
and
push
repz
test
cmp
decl
inc
jae
xor
sub
jecxz
imul
jecxz
cmp
pusha
jmp
inc
int
or
ret
std
pop
aaa
sub
stc
mov
add
ret
loopne
jno
jbe
lahf
cmp
std
inc
cmpsb
dec
sub
pop
cs
in
sub
rolb
push
sub
sbb
aas
xchg
mov
dec
jno
cmpsb
stc
mov
je
call
pop
sub
mov
xchg
mov
xchg
pop
roll
and
lretw
xchg
xor
pop
cmp
sbb
push
cmp
rcl
lods
popf
movsb
js
fmul
push
pop
dec
das
xchg
insb
dec
outsb
sbb
int
fdivr
adc
lds
fs
aas
sbbb
inc
rclb
jmp
pop
jns
in
inc
cwtl
call
lret
addr16
out
gs
mov
cwtl
loop
mov
lret
cmp
mov
pop
mov
movb
clc
fsubrl
jl
and
cmp
inc
leave
fiaddl
lods
fimull
insl
push
push
sbb
sbbb
leave
push
ret
adc
inc
push
shr
ljmp
ds
jmp
xor
imul
sbb
enter
jne
scas
xor
call
xchg
xchg
ljmp
cli
lret
mov
sar
xchg
xor
add
jns
cmpsl
inc
cltd
arpl
push
cmc
lret
ret
std
call
int
scas
mov
lcall
aas
push
in
xor
out
in
jmp
repnz
in
and
shrl
jecxz
lcall
outsl
add
mov
cmp
mov
mov
and
aaa
sahf
xor
pop
sbb
sub
sar
cld
push
sub
aas
xchg
pop
and
or
cmc
scas
xor
push
cmp
mov
mov
push
mov
push
jg
jmp
fdivrs
mov
ja
icebp
xlat
imull
mov
insb
dec
cltd
xor
decl
sub
mov
cs
dec
rorb
incl
dec
jb
jmp
or
cmpsb
or
adc
push
mov
or
in
mov
push
lret
inc
idivl
vprotq
dec
arpl
lahf
or
das
cmpsl
pop
insl
inc
ret
xchg
and
mov
aas
shrl
les
cltd
aam
or
add
dec
or
popa
das
lea
mov
push
dec
mov
addl
jno
les
jb
mov
out
loopne
cmpsl
aam
std
js
and
xor
cltd
mov
mov
add
jo
push
cmp
sub
pusha
test
xchg
bound
test
hlt
pop
icebp
scas
mov
scas
shll
mov
jns
mov
ds
insb
movsb
arpl
nop
es
push
icebp
jbe
aad
ret
pop
test
or
add
adc
gs
push
jg
idivb
and
test
pop
into
nop
pushf
jns
mov
call
dec
out
jp
inc
pop
out
cmp
pop
vpsubw
mov
push
lock
dec
leave
imul
loopne
icebp
dec
dec
xlat
xchg
aas
dec
cmp
push
and
mov
movsb
cmp
data16
dec
lret
loope
adc
cld
xchg
lods
push
add
imul
inc
sbb
mov
adcl
arpl
std
movsb
iret
cmp
dec
sti
add
ret
scas
outsl
sti
ret
cmp
bound
mov
sub
sub
xchg
xchg
jnp
jl
or
insl
into
and
rolb
cmp
add
jmp
push
popf
cmp
cmpsb
push
test
pop
sti
or
fs
ds
xor
das
lods
push
jmp
mov
cmp
cmp
push
sub
mov
push
or
call
add
ret
xchg
sub
mov
dec
pop
adc
xchg
xor
in
sbb
xor
mov
xor
mov
and
cld
mov
daa
lock
xchg
ret
xchg
adc
mov
iret
xchg
fiaddl
fisttps
add
push
xchg
add
sub
lds
jo
adc
adc
jns
dec
lea
in
jle
push
ds
jmp
sbbl
xchg
dec
mov
push
lret
or
lret
fcomps
sbb
push
je
sub
sub
fwait
cli
dec
dec
cmpsb
and
mov
in
in
add
jns
das
cmp
sbb
mull
es
cmp
test
popa
jecxz
pop
add
mov
cmp
popf
sahf
xor
mov
bound
push
mov
pop
fmull
fildll
adc
sbb
cmp
test
roll
clc
gs
mov
testl
nop
jg
dec
mov
jb
mov
stos
jg
mov
roll
mov
sub
lea
jg
adc
repz
mov
cli
push
lods
ss
leave
cmc
mov
dec
cmpsl
xor
pusha
mov
cmp
call
mov
repnz
les
pop
lret
enter
outsb
dec
dec
cmp
iret
dec
inc
xchg
ret
adc
aaa
xchg
mov
in
jge
fisubl
arpl
dec
jl
pop
mov
dec
fstpl
and
cmpl
jne
out
outsb
pmullw
xchg
adc
sbb
mov
mov
xor
dec
sub
mov
inc
je
or
stos
ja
and
push
jge
add
aaa
ret
push
sub
lcall
hlt
inc
cltd
jns
ds
mov
pop
es
cmpsl
sbbb
mull
jb
test
sbbl
sahf
aas
pop
sub
ja
xor
adc
pushf
xor
hlt
mov
lock
outsb
sti
cmp
gs
jbe
jge
adcl
push
pusha
imul
pop
lahf
mov
mov
int3
in
cmp
rorl
mov
adc
pop
les
xor
les
cltd
ret
mov
out
dec
lock
les
jg
mov
fmul
cmp
les
mov
nop
cmpsb
mov
jmp
jle
xchg
and
sahf
or
aad
cmpsl
movsl
jo
sub
sub
cmp
testb
jmp
call
cld
dec
ljmp
pop
aad
stos
or
ret
sbb
dec
sbb
mov
sub
shr
cmp
xchg
aam
lods
xchg
xchg
adc
or
push
xorl
pop
pop
lcall
pop
pushf
sub
jle
hlt
in
sub
xchg
addr16
sub
mov
in
xchg
or
and
cmp
or
mov
sti
cmp
test
andb
aaa
clc
into
fs
jnp
cmp
pushf
insb
pop
in
ds
gs
sbb
mov
adc
hlt
int
adc
in
aaa
fldt
pop
aam
loop
mov
js
sub
jecxz
out
jmp
adc
push
or
pop
add
arpl
out
fwait
sub
dec
sub
hlt
shl
lea
adc
push
inc
sbb
imul
rclb
jns
imul
add
movsl
push
repnz
arpl
push
mov
daa
jmp
sbb
pop
rcl
jge
adc
hlt
mul
leave
test
arpl
mov
int3
pop
sub
jl
movsl
test
xchg
xor
sub
inc
add
in
ljmp
lahf
lret
inc
and
lds
xchg
or
push
adc
sub
incl
and
xor
push
push
and
jb
aas
adc
lock
cmpsl
pop
xchg
add
mov
sub
imul
pop
and
icebp
lret
stc
mov
add
and
inc
int
enter
mov
insb
out
and
xchg
cmp
sub
popf
mov
cmp
pop
fnstcw
jp
je
fwait
xchg
int3
mov
popf
imul
lret
test
imul
sbb
add
mov
leave
int
pushl
sub
mov
push
xchg
sub
fxam
call
push
je
xchg
data16
out
mov
adc
push
mov
push
sbb
jl
scas
and
jp
dec
mov
pushl
mov
int3
test
dec
cmp
inc
push
fwait
push
cmp
negl
cmp
jmp
in
insl
push
mov
fadds
ja
xor
dec
ljmp
push
xchg
rclb
inc
cmp
js
mov
xchg
pop
mov
je
fistpll
dec
jle
mov
cwtl
in
icebp
sbb
pop
sbb
fidivl
sub
or
lods
xchg
pop
xchg
icebp
xor
fdiv
pop
xchg
push
push
data16
adc
pop
mov
out
outsb
adc
mov
push
cwtl
loope
push
adc
test
in
aaa
fwait
cmp
fistps
cmp
ss
loop
rcrb
lcall
jbe
sub
cmp
lds
insb
scas
or
lods
das
mov
xor
mov
dec
mov
cwtl
subl
jne
out
or
push
mov
pop
sarl
mov
loopne
aam
xchg
repnz
add
cmc
jns
mov
jns
or
mov
and
ljmp
arpl
pop
imul
test
dec
dec
jae
xor
fucomip
dec
aas
clc
inc
xor
dec
mov
dec
inc
xchg
sub
scas
incb
adc
mov
jle
ret
pusha
or
mov
movsb
shr
push
xchg
popa
lret
push
pop
inc
mov
lret
js
cltd
dec
fnstenv
clc
loop
aam
cmpsb
push
jmp
pop
push
mov
push
dec
xchg
jb
dec
pushf
imul
ds
inc
lods
jne
movsl
add
dec
enter
bound
call
mov
pop
test
fnsave
mov
inc
les
cli
sub
movsb
sub
test
mov
popa
jns
lret
je
push
ret
dec
test
mov
repz
dec
add
or
int
bound
add
add
sti
sub
test
daa
pop
test
jnp
mov
cmp
xchg
mov
les
pop
sarl
addr16
imul
shrb
movsl
insb
push
repnz
sub
mulb
push
mov
or
push
dec
shlb
inc
adc
sbb
pop
les
imul
fwait
mov
adc
rcrb
out
xchg
dec
cmc
or
rolb
dec
ljmp
xchg
scas
cli
mov
fstp
pop
mov
push
jae
les
xchg
push
ja
test
add
and
inc
les
movsl
pop
test
inc
clc
pop
mov
repz
fldcw
adc
outsb
and
imul
cmp
push
mov
mov
inc
cmp
push
dec
jae
jmp
int
mov
jl
lods
push
mov
inc
fidivrs
scas
pop
pop
sti
adc
push
lds
int3
inc
jg
xchg
cwtl
inc
aas
inc
lahf
call
add
cwtl
mov
lods
push
add
pusha
mov
js
pop
divb
imul
daa
push
adc
jbe
push
add
jle
xchg
push
mov
mov
lds
clc
mov
sti
adc
fxch
mov
imul
xor
jo
popf
js
mov
arpl
leave
aaa
xchg
or
mov
hlt
sub
jb
dec
or
int
push
movsb
iret
dec
icebp
jmp
jno
sbb
arpl
jp
add
call
or
dec
sar
adc
ds
xchg
sti
leave
sbb
or
xor
cld
and
fwait
dec
ret
mov
in
clc
adc
dec
fwait
sub
addr16
add
movsl
xor
hlt
ret
imul
jnp
stc
push
iret
mov
outsb
not
jmp
add
mov
imulb
pop
inc
push
mov
insb
xor
addl
xchg
push
aas
cwtl
mov
adc
clc
sbb
ljmp
xor
lea
loope
aaa
xchg
repnz
add
mov
stos
mov
mov
mov
xchg
xchg
adc
xchg
jmp
mov
jae
jle
popa
xor
outsl
adc
clc
jl
add
mov
les
ljmp
repz
aad
xor
scas
movsb
das
jmp
jnp
bound
push
int
sbb
repz
lahf
sub
fisubs
in
pop
insb
pushf
mov
fistl
iret
push
xor
int3
aam
sbb
add
leave
jmp
dec
xchg
cmp
sub
adc
in
ret
mov
xchg
insb
frstor
lods
jb
add
cmp
popa
ja
addl
xchg
push
negl
dec
push
pop
adc
mov
sub
shl
dec
out
movsl
loop
pop
sub
xchg
sub
or
push
push
xlat
xchg
or
pop
jb
das
fildl
mov
repz
stos
push
and
dec
jmp
mov
xlat
addr16
xor
es
mov
cwtl
mov
inc
jns
cmc
pop
in
rcll
or
lahf
pop
pminub
dec
imul
ret
push
test
mov
iret
pop
pop
pop
sbb
jge
push
cmp
xor
mul
test
dec
arpl
inc
insb
and
enter
cli
sbb
cmp
add
mov
cli
push
mov
sub
fidivl
push
lret
and
add
cmp
push
scas
pop
push
js
xor
push
xor
stos
or
xor
gs
iret
loope
jmp
pop
or
sbb
testb
fmull
test
shl
mov
iret
xchg
maskmovq
mov
cmp
pop
lods
mov
sub
gs
pop
stos
test
mov
cli
jle
jcxz
mov
lea
rorb
movsb
pop
fadds
cwtl
mov
xlat
cmp
stos
mov
daa
and
cmp
mov
rcrb
scas
out
xchg
sbb
daa
xor
push
sti
cli
sub
push
aam
and
xchg
popa
sbbl
and
sahf
sar
add
inc
cltd
mov
loope
cs
loope
xor
ret
int3
out
push
push
xchg
dec
adc
adc
ret
fstp
mov
xchg
inc
mov
jle
add
push
fisubrs
insl
fs
jmp
xchg
add
ret
leave
mov
fidivrs
jecxz
sbb
sbb
sub
lahf
call
jbe
dec
sti
cmp
xchg
inc
pushf
mov
sti
imul
rcrl
sahf
dec
repz
lds
inc
jg
dec
jmp
jns
mov
inc
sbb
daa
mov
or
js
out
jl
push
push
pop
es
mov
pusha
fmull
ret
jle
aam
fidivs
mov
sbb
in
pop
test
mov
sti
cmp
clc
lahf
xlat
test
inc
mov
ja
sbb
je
mov
std
inc
orl
sub
imul
pop
repz
mov
cmpsl
addb
add
jg
and
jns
jnp
arpl
test
inc
xchg
into
jmp
jnp
icebp
jns
pop
aad
je
rcrl
sbb
cs
cmpsl
dec
daa
add
or
or
cmpsb
ror
and
ret
sbb
mov
jl
dec
filds
push
ljmp
jg
mov
mov
in
mov
mov
jnp
pusha
push
adc
pushf
into
sarl
xor
jae
out
xchg
roll
and
lret
mov
ljmp
ffree
loope
xlat
pop
repnz
pop
sbb
jae
cmp
jae
sub
stos
std
les
cmpsl
push
outsb
fisubrs
sahf
dec
push
adc
dec
movsl
je
or
loop
leave
mov
push
in
fistpl
mov
xchg
gs
popf
adc
loop
daa
inc
dec
loop
push
pop
push
mov
mov
xchg
and
lea
mov
inc
sbbl
mov
xor
popf
lret
adc
rolb
test
icebp
jmp
mov
aas
jl
mov
and
jmp
and
decb
mov
loope
addb
and
sub
fdivrs
sbb
or
in
in
sbbb
test
pop
lahf
aas
rcrb
cmp
sbb
and
decb
idivl
ret
inc
cmpl
inc
mov
jo
mov
pop
fdivrl
xchg
cmpsb
xor
xchg
out
mov
pushf
iret
jle
and
dec
xor
mov
in
dec
shrb
movsl
jp
jo
imul
push
imul
sub
repz
add
and
add
xchg
jle
in
mov
test
ficomps
lret
add
ds
sarb
mov
shlb
das
subb
out
int
je
dec
fs
sahf
mov
inc
popf
movsb
pop
fldl
test
leave
cmp
les
js
rol
sub
cli
inc
sub
cmc
jmp
test
jle
es
insb
sub
pop
test
loopne
bound
mov
movsb
xchg
xor
insb
dec
adc
int3
inc
mov
scas
mov
lds
neg
xor
sub
xchg
sahf
aas
stc
mov
or
je
fs
sbb
push
push
test
enter
lcall
pop
or
cmpsl
jecxz
pusha
shll
fst
aad
aam
mov
jg
xlat
inc
in
dec
and
lods
adc
xchg
cwtl
lock
dec
adc
push
shll
fistpll
pop
add
push
mov
mov
fldt
dec
icebp
test
movsl
addr16
add
outsl
xor
fst
movsl
fdivr
in
dec
test
and
dec
cmc
add
add
add
xlat
inc
mov
mov
sbb
test
adcl
xor
and
test
loop
sbb
shl
cmp
mov
out
sbb
addr16
stos
xor
mov
fidivrl
pop
insl
test
daa
sub
xchg
xchg
jb
dec
cmpl
xchg
pop
mov
das
or
ror
sub
jmp
test
push
mov
clc
xlat
mov
repz
xchg
adc
inc
scas
int
mov
xor
ds
jbe
inc
push
insb
xchg
stos
daa
xor
testl
stc
adc
nop
mov
sbb
in
jno,pt
mov
lea
add
pop
pop
xor
xchg
ljmp
xchg
mov
ja
ja
sbb
inc
adc
lcall
mov
sbb
sti
add
jmp
pop
or
insl
jge
jns
jmp
dec
jns
rclb
out
enter
mov
imul
pop
shll
stos
add
sbb
rcrl
ret
test
std
test
pop
jl
mov
push
pop
faddl
out
hlt
movsb
adc
aaa
scas
loopne
imul
pop
jbe
jle
add
dec
xlat
addr16
push
mov
ja
push
jle
andb
addb
movsl
add
pop
int
test
push
pushf
popf
cwtl
ret
popf
mov
mov
scas
repz
out
xor
pop
add
ret
pop
adc
inc
scas
popl
jns
lcall
mov
clc
shl
pop
mov
addb
lea
mov
mov
inc
xor
in
jne
xchg
incl
out
pop
fs
sbbb
dec
mov
push
push
fsubrl
loope
push
sub
mov
lds
and
cmpsb
dec
lds
or
inc
fmull
ficompl
or
mov
imul
addr16
and
xchg
sahf
mov
jo
xor
cmp
sbb
mov
inc
repz
cmp
test
fcompl
xchg
cli
mov
sub
addb
loop
andb
push
shrl
add
adc
pop
inc
jge
int
aaa
loope
das
mov
add
sub
out
mov
imul
xchg
cs
sub
lret
aad
js
lcall
daa
mov
roll
ss
or
sub
mov
gs
xorl
enter
cmp
xor
loope
fmull
xor
cmp
rclb
ja
bound
jmp
aaa
lcall
mov
sbb
shr
cmp
jmp
aad
out
mov
pop
fsubrs
imul
repnz
test
gs
mov
dec
daa
daa
mov
jle
out
lods
cmpb
adc
enter
aaa
js
popf
push
lds
pop
test
sbb
xor
cmp
push
xchg
fisttpll
sub
out
dec
cmpb
xchg
sub
arpl
lret
jg
xchg
and
outsl
add
sbb
movsl
pop
jno
xchg
enter
fscale
mov
in
mov
sbb
fnstenv
pop
imul
inc
xchg
repz
pop
gs
cmp
xchg
stos
cs
pop
mov
push
cmpsl
ror
in
sarb
pop
inc
xchg
pop
mov
imul
cmc
sbb
mov
cltd
sub
nop
jecxz
fistpll
sub
loop
cs
sub
push
nop
cwtl
sbb
adc
mov
cs
sbb
adc
ret
adc
push
and
test
stos
add
outsb
sbb
movsl
adc
adc
sub
mov
push
out
mov
pop
cld
les
mov
inc
xchg
in
adc
mov
aas
lahf
dec
xchg
aaa
jecxz
xchg
sbb
dec
xchg
add
out
push
stc
fcmovb
xor
fadd
and
lret
movsb
fiadds
sahf
int3
fcmovnbe
adc
push
imul
test
jnp
dec
shll
sbb
outsl
jmp
mov
test
inc
std
cmc
or
test
sub
inc
clc
and
in
inc
dec
cmp
adc
jmp
mov
dec
and
movsb
xchg
or
push
mov
add
push
repnz
push
loop
aaa
addr16
pop
mov
push
pop
ffree
pop
idiv
jnp
pop
mov
test
rcll
add
mov
loop
movsb
ja
cmp
jge
in
sbb
adc
and
fbstp
shll
lcall
add
popf
push
inc
ljmp
push
push
shrl
mov
jle
cmp
xlat
and
xor
xor
inc
sub
insl
aas
dec
jnp
stos
xchg
idivl
mov
or
sub
gs
dec
pop
jne
cmp
jecxz
xchg
push
push
or
imul
add
mov
aaa
xor
dec
mov
mov
pop
in
adc
cmpsb
fdivrs
and
push
sub
arpl
fadds
les
mov
cmp
mov
outsl
add
mov
bound
mov
pop
and
out
mov
inc
xchg
sti
sbb
jmp
push
or
in
or
cmpsb
push
jno
lahf
fwait
std
add
arpl
pop
loopne
xchg
jns
jg
mov
add
sub
adc
mov
pop
cld
fnstsw
or
push
lret
mov
xchg
inc
in
mov
insl
sub
mov
or
icebp
mov
add
sahf
xchg
aad
inc
push
nop
sub
test
mov
mov
out
in
adc
je
dec
xchg
sub
add
mov
sahf
les
push
jmp
lock
dec
cld
mov
rorl
inc
mov
repnz
sub
push
push
shrl
add
mov
xchg
cmp
inc
mov
jl
mov
xchg
cs
in
jo
stos
sahf
movsl
std
inc
mov
sbb
push
push
mov
daa
pop
adc
jnp
sub
mov
dec
mov
std
test
test
mov
loope
clc
jle
add
aam
outsb
mov
xlat
add
mov
mov
push
addr16
test
pop
pop
add
fcomip
insb
mov
icebp
lods
in
and
fdivl
push
leave
shl
aam
shlb
iret
addb
into
cmp
shrl
lahf
gs
cmp
dec
pop
addr16
dec
shl
cmp
mov
add
pop
insb
jmp
or
aaa
je
mov
dec
or
popa
lret
mov
fidivs
insb
fcmovu
sub
xor
hlt
in
stos
lret
jae
loope
sub
mov
ss
sub
and
inc
and
dec
aad
cmp
js
sbb
push
addr16
addr16
stos
negl
ja
repz
adc
fnsave
fcomip
xlat
mov
jg
sub
cmp
dec
and
popf
dec
pop
fdivrp
mov
lea
idiv
jl
xor
push
decb
adc
rcr
test
adc
adc
or
mov
push
je
jecxz
imul
lds
push
subl
pop
test
imul
shr
scas
and
imul
cmp
mov
jecxz
xchg
jecxz
fst
ss
xor
fs
dec
or
or
push
aad
push
lods
movl
mov
mov
adc
and
idivl
stc
inc
das
les
in
pop
cmp
adc
movsb
pop
push
sub
push
aad
sbb
mov
stos
in
xchg
and
sbb
pop
std
fsubs
cmp
pop
lea
xchg
xor
addl
or
mov
or
dec
xor
and
data16
pop
inc
loope
mov
hlt
aad
push
pop
add
lock
or
or
sahf
out
inc
stos
cwtl
movsb
sbb
cli
xor
cmpsl
dec
xlat
dec
test
jns
mov
cmpsl
push
cmp
in
test
ds
push
jmp
ror
xchg
outsb
push
mov
dec
insl
pop
add
or
push
jo
fstl
inc
call
push
sub
fistl
icebp
fsubrl
cmpsl
push
jp
sahf
movsb
rcll
repz
mov
add
jmp
sbb
mov
mov
push
jecxz
ret
sbb
pop
aas
pushf
push
sbbb
inc
into
imul
sarl
call
jge
lahf
jge
sbb
lods
jno
push
cmp
xor
cmp
or
imul
adc
int3
imul
lock
cwtl
fmull
orb
xchg
xchg
mov
cli
negl
int
or
jbe
add
jge
mov
xchg
leave
push
dec
pop
adc
xchg
add
cmp
out
ljmp
daa
cmp
add
lret
pop
addb
das
and
pop
lret
fiadds
xchg
xchg
add
lret
movsb
icebp
adc
pop
stos
lahf
lds
loope
dec
sbb
mov
rorl
enter
lahf
ret
mov
out
push
lret
fists
shlb
mov
std
mov
movsb
pop
push
cwtl
out
ja
rorl
test
adc
xor
test
sbb
xor
add
pushf
jb
mov
pop
adc
and
cmp
mov
stc
js
or
inc
cmpsb
mov
xchg
xchg
cmc
inc
jno
jb
insb
lds
int3
cmpsb
in
into
push
clc
movsl
fwait
scas
icebp
outsl
cmp
insl
lock
adc
in
mov
mov
fistpll
sub
xor
and
add
out
stc
push
xchg
pop
js
pop
fs
imul
rol
add
sub
sbb
in
sbb
sbbl
push
xchg
adcb
inc
fldcw
fsubl
jg
push
mov
in
mov
cmp
sbb
movsb
sub
fisubs
add
jo
rorl
scas
gs
nop
cwtl
jbe
je
pop
sub
mov
mov
cltd
test
shll
add
jb
jl
jle
mov
popa
and
out
test
dec
subb
adc
fs
lods
popf
je
add
into
jecxz
dec
pop
fistl
cmpsb
add
adc
test
ret
add
pushf
insb
sub
pop
dec
repz
jo
push
xchg
shlb
adc
xchg
repz
push
jle
out
call
mov
idivb
cmp
ds
loopne
ja
out
outsl
pusha
testl
dec
push
incl
shl
xchg
jne
lock
lds
xchg
mov
jbe
xchg
inc
pop
out
loop
ret
xor
sub
and
or
mov
test
ret
cwtl
xchg
cld
cmc
cmpsl
insb
or
cs
test
xchg
mulb
je
addr16
cmp
addr16
pop
insl
sbb
test
xchg
push
enter
and
gs
push
test
xchg
int
or
in
add
iret
out
mov
mov
sub
push
mov
test
in
xchg
stos
mov
in
std
outsl
add
and
fimuls
push
lea
aaa
and
sub
dec
push
adc
jbe
pop
adc
jmp
sub
adc
mov
mov
rcrl
ror
add
lcall
roll
mov
push
aaa
xor
lret
je
jmp
out
scas
adc
cs
cmp
test
xor
xchg
mov
mov
shr
xchg
mov
sbb
mov
gs
repz
fstps
shrl
idivb
enter
push
out
or
or
dec
jno,pn
rcll
adc
jbe
mov
les
xchg
xchg
iret
cwtl
push
sub
aad
out
loopnew
push
ret
iret
stc
gs
xchg
sub
pop
imul
outsl
dec
inc
mov
bound
ja
add
cmp
and
mov
outsl
xor
or
aam
lds
pop
adc
cli
hlt
push
fstl
rcll
je
cli
adc
pop
dec
cmp
push
dec
rcr
nop
insb
call
rol
leave
dec
std
push
aam
sub
ret
popa
outsb
lock
insb
push
iret
cld
scas
jle
cmp
jns
imull
pop
repnz
mov
fnstcw
and
ffree
out
insl
cmp
pop
push
les
xchg
pop
or
nop/reserved
mov
arpl
aam
jecxz
pop
mov
sub
push
aam
lods
mov
cmc
mov
sbb
orl
adc
test
clc
dec
xor
inc
in
mulb
fisubl
pop
inc
push
aaa
lods
ret
lahf
push
aad
pop
add
das
mov
adc
aaa
jo
cli
cs
fs
sub
insb
imul
insl
in
aaa
sbb
rcrl
push
rcll
lcall
cmp
into
jecxz
or
lock
iret
xor
mov
jmp
pop
loop,pt
jmp
fs
mov
xlat
fcompl
sub
shlb
mov
mov
sub
mov
add
popf
imul
les
mov
mov
mov
xor
push
mov
inc
pop
xor
jb
sub
pop
imul
adc
fcmove
and
imul
test
lcallw
dec
rorb
dec
and
cld
push
iret
das
push
mov
xchg
jle
xorl
sbb
mov
fisubl
pop
enter
mov
cmp
fstl
dec
es
pop
jns
je
inc
push
xchg
daa
lea
lds
popa
cs
ss
arpl
or
xlat
lret
sahf
jae
mov
add
pop
flds
and
insb
xchg
pop
call
fs
ljmp
push
les
add
pop
mov
aas
cli
inc
push
inc
stc
in
or
fcoml
mov
pop
push
ljmp
movsl
fsts
dec
pushf
ljmp
mov
inc
or
or
int
aad
cmp
add
mov
mov
sti
pop
jecxz
and
outsl
xchg
shll
adc
sti
addr16
jmp
fisttpll
add
lret
pop
fcoml
dec
pop
xchg
sub
leave
aad
int3
inc
push
sub
adc
add
iret
cwtl
cmp
or
int3
dec
aad
push
into
ds
add
lock
movl
adc
aad
xor
lret
aam
shrl
pusha
dec
xchg
sbb
lods
and
movsl
add
ss
mov
repz
lahf
xlat
sahf
pop
and
jecxz
jb
sarb
stc
or
int
add
and
adc
shll
dec
repnz
xchg
mov
sbb
xchg
stos
push
aad
and
xchg
mov
sub
jnp
ror
mov
daa
repz
xchg
rclb
lods
int
cmp
xor
pop
dec
movsb
rcr
repnz
adc
fdivr
out
sbb
sub
cmp
shrl
xchg
sub
cmp
lret
or
pop
mov
lods
mov
push
pop
mov
cmp
push
add
leave
or
shrb
insl
xor
inc
mov
int3
or
in
pop
pop
pop
loope
pop
push
iret
pop
pop
out
inc
je,pt
dec
outsl
shrl
hlt
push
pushf
fisubl
sahf
rorb
xsha256
cmpsb
aad
mov
lahf
lods
push
pop
std
fwait
pop
pushf
xchg
jecxz
dec
sahf
push
hlt
push
fwait
push
scas
inc
aad
loopne
jno
dec
gs
sahf
test
pop
push
loop
cwtl
and
sbb
cmp
cmp
sbb
cs
dec
xor
leave
sub
ret
stc
gs
jecxz
xlat
or
sub
dec
sarl
pop
aam
adc
cmc
and
call
ljmp
jl
jo
repz
cmp
mov
sbb
jmp
pop
push
or
xor
mov
shll
roll
mov
aam
inc
add
jns
push
push
fdivrs
sbb
ret
sbb
cmp
sahf
push
sti
popa
mov
push
jae
sub
fisubrs
hlt
push
icebp
dec
std
dec
dec
in
jnp
dec
jnp
pushf
sub
mov
sub
lea
mov
mov
push
dec
inc
cmc
mov
xchg
test
iret
movsb
jl
ret
xchg
pushf
rcrl
int
imul
jae
fdivrl
mov
pop
imul
adc
pop
add
cmp
xchg
shl
stos
dec
aad
mov
popf
neg
mov
in
pushf
gs
lds
jmp
mov
movsb
addr16
int3
movsb
sbb
je
dec
ret
jno
fcoml
cld
mov
fwait
inc
sbb
sub
fiaddl
scas
push
xor
call
lds
insb
lock
sub
cli
movsb
ss
shlb
repz
sub
repnz
fcoml
lahf
adc
mov
jmp
lock
pop
mov
aad
negl
mov
in
sti
mov
adc
mov
leave
xchg
call
lods
cmp
push
ljmp
xchg
pop
aaa
cmpsl
mov
jo
push
sbb
dec
cmpsl
sub
xor
fstpl
sbb
cmp
xchg
add
mov
lock
dec
add
lds
pop
mov
movsb
jb
movsb
idiv
lods
xlat
out
in
dec
leave
mov
mov
aad
adc
rcrb
loop
int3
loopne
adc
mov
mov
shl
push
cltd
test
xchg
cmpsl
xlat
inc
xor
sub
inc
enter
test
das
dec
adc
xor
xor
leave
aad
insw
fstps
insb
lahf
shl
mov
xchg
sbb
je
fwait
pop
mov
adc
stc
pop
and
sbb
fwait
push
dec
sti
stos
or
pop
lods
dec
and
xchg
push
xchg
fs
testl
je
mov
push
mov
stos
rcll
stos
dec
or
adc
cmp
mov
xor
shlb
inc
push
add
mov
insb
insl
fcoms
nop
mov
mov
pop
roll
lods
xchg
cmp
lret
push
pop
pop
mov
xchg
fisubrl
fistps
fcoml
cmp
adc
enter
int3
lret
repz
adc
fdivrl
shrb
hlt
mov
sub
adc
adc
in
lahf
sbb
fisttpll
fdivs
shl
rol
pushf
aad
cli
orl
js
arpl
mov
pop
lods
jl
jnp
das
add
mov
mov
cmpsl
pop
cmp
adc
sub
aad
enter
call
sub
inc
dec
dec
in
js
push
adc
mov
mov
hlt
xor
mov
aas
into
sbb
cmp
sbb
repnz
aam
mov
push
rclb
adc
cmp
frstor
andl
movsl
leave
lods
xor
mov
dec
in
pop
mov
js
frstor
aad
mov
xor
repnz
sbbl
inc
roll
cmp
adc
dec
mov
jmp
sbb
or
jae
pop
add
or
adc
loope
icebp
cmp
repnz
jp
push
add
or
mov
or
cld
mov
movl
in
sbb
jb
adc
loop
jl
add
xchg
jge
test
test
ficomps
dec
xlat
sbb
xchg
cmp
pop
enter
push
mov
jae
mov
hlt
or
hlt
ficompl
fsts
cs
shrd
xchg
out
mov
add
iret
cli
push
dec
mov
arpl
or
cmp
push
xchg
or
xchg
das
pop
les
fadd
aad
push
lret
jecxz
scas
popf
or
fstpt
jnp
les
pop
push
push
es
popf
push
shll
lods
dec
lock
xor
or
lea
push
mov
jo
pop
jle
fidivs
sub
es
mov
mov
aad
lcall
nop
leave
sarb
xor
jbe
vhaddps
sahf
sbb
push
xlat
dec
ret
jno
mov
imul
inc
dec
rolb
dec
sub
lcall
mov
movsb
mov
pusha
adc
repnz
mov
pop
mov
lcall
dec
je
dec
lret
push
adc
insl
lcall
leave
daa
movsb
ficoms
mov
push
fstl
arpl
aaa
mov
fs
jge
adc
push
xor
cmp
push
pop
and
fistps
pop
push
scas
in
outsb
fldl
inc
aaa
or
rclb
and
jo
fiadds
enter
rorb
or
lods
das
mov
into
add
push
adc
sti
jmp
mov
negb
popf
aas
dec
insl
rolb
push
sbb
andl
js
inc
jb
ret
loop
or
lock
cmp
clc
lods
cmp
pop
xlat
js
push
mov
mov
les
aad
sub
fistpl
sub
loop
push
cld
enter
ljmp
jmp
lret
rol
loope
mov
pop
or
icebp
xchg
lea
pushf
sahf
adc
popl
cmp
sub
inc
frstor
xchg
dec
rcrl
es
mov
jecxz
in
daa
cmpsb
adc
and
bound
mov
cwtl
add
cmp
inc
movsl
jecxz,pn
lret
lds
cmpsb
insb
xor
dec
push
and
and
jmp
ror
mov
shll
jns
dec
lret
jae
lock
mov
adc
incl
inc
es
sub
adcb
and
cltd
mov
rcll
mov
in
mov
and
pop
fwait
cmp
lahf
pop
movsb
sub
paddb
out
inc
fsts
stc
fadd
cmp
sub
sub
push
ljmp
jo
lahf
jmp
mov
mov
aad
xchg
or
dec
leave
ret
push
inc
adc
cwtl
mov
fsave
xchg
stc
sub
scas
ret
lods
sub
dec
lds
fisttpl
push
enter
call
in
pop
sbb
and
lock
dec
cmpsl
int
imul
fdivl
call
mov
scas
pop
cmpl
leave
lahf
scas
or
popa
test
orl
cld
jecxz
imul
pop
sub
cmp
inc
push
pop
xchg
es
test
push
fcompl
add
int
fsubp
gs
cmp
mov
loop
xchg
gs
sub
pusha
aaa
scas
roll
loop
aaa
scas
and
mov
jl
jnp
insb
push
imul
icebp
arpl
sbb
fildll
call
mov
lds
xchg
nop
lds
rcrl
cmp
push
cli
adc
add
fnstsw
mov
mov
addr16
clc
mov
jnp
out
and
pop
and
sahf
imul
jb
es
sub
jns
mov
out
shlb
mov
aas
mov
xchg
jbe
push
call
je
std
add
xlat
mov
addl
mov
jecxz
xor
mov
cmp
pop
mov
mov
lds
lret
rcll
or
and
jge
pop
xchg
mov
lea
pop
and
pop
ds
adc
fbld
lods
sar
aad
and
pop
push
sbb
push
mov
shll
push
fnstenv
push
or
mov
arpl
jmp
jmp
adc
adc
addr16
call
shr
out
inc
sub
roll
int3
mov
add
enter
add
cmp
nop
jge
push
jno
lds
icebp
shrb
sub
outsb
cmp
in
pop
lock
sub
mov
ret
mov
scas
sbb
rclb
jb
cmp
fimull
shll
outsl
mov
xchg
cwtl
push
lds
mov
rol
movl
xor
repnz
orb
xchg
add
xchg
mov
xor
stos
in
jo
and
cs
cmpsl
adc
inc
shr
test
mov
mov
mov
xor
iret
add
cmpsb
outsb
sbb
addb
aam
push
mov
shlb
ret
rcrl
hlt
loopne
rorl
dec
xchg
sub
and
aaa
js
mov
stos
dec
mov
fisubrl
sbb
sti
int3
sbb
movsl
xchg
hlt
aaa
stos
add
mov
insl
xor
cmc
mov
in
and
decb
fstpl
iret
push
or
dec
mov
pop
jns
loop
jle
xchg
lea
or
shrb
outsl
xchg
out
inc
mov
call
stc
rcrb
pop
cmp
jb
pop
push
movsl
leave
jle
add
ljmp
mov
fcoms
hlt
ret
mov
xchg
ljmp
sbb
stos
ror
rcrl
inc
dec
jo
aad
sub
cmp
cmpsb
and
jge
push
or
cli
stc
aaa
pop
sbb
xchg
dec
out
push
loop
lock
out
mov
adc
and
sub
mov
test
out
sub
ret
push
fcmove
adcl
add
roll
xlat
nop
in
mov
pop
inc
in
stc
into
push
add
mov
iret
movsb
movsl
sub
add
rcrl
loopne
test
fisttpl
mov
pushf
lock
ljmp
outsl
lcall
lret
xor
cmp
or
enter
mov
insl
push
dec
mov
push
lods
into
mov
repnz
xor
aad
scas
xor
add
loope
popf
cs
inc
mov
xor
inc
push
pop
push
xchg
cld
in
inc
mov
push
rclb
imull
js
jne
fadd
mov
mov
mov
enter
dec
fs
outsb
mov
fs
inc
rcrb
xchg
test
push
outsl
mov
sbb
outsl
xor
cmp
xchg
dec
or
push
mov
or
lahf
cmp
inc
xor
cli
push
imulb
in
pushf
pop
sub
std
adc
mov
add
int3
das
in
and
mov
fcoms
dec
mov
nop
fbstp
and
mov
dec
cmp
filds
dec
add
adc
fldl
fbld
cmp
push
out
cli
xchg
enter
jnp
into
push
xlat
xchg
sbb
shll
ds
inc
icebp
ret
dec
xor
xor
sub
and
xor
ja
xlat
push
enter
add
fs
scas
xorl
mov
and
lret
xchg
pop
fcompl
push
std
cmc
nop
and
fdiv
mov
and
jns
and
nop
dec
xchg
mov
icebp
lods
sub
pushf
jmp
cmp
hlt
ja
adc
int3
jmp
dec
push
cmp
rcrl
cvtdq2ps
push
add
mov
jbe
inc
stc
enter
sahf
add
repz
shrl
je
cmp
or
shrl
mov
cmpsb
in
sub
test
testl
js
cltd
xor
mov
xor
cltd
dec
data16
fucomip
outsb
out
mov
cmp
fsubrs
js
sbb
and
in
call
sbb
daa
jmp
adc
xchg
mov
ja
sub
inc
test
daa
xor
mov
mov
mulb
outsb
add
xchg
lods
aaa
dec
pop
adc
adc
pop
inc
sbb
mov
popf
fwait
sub
popa
movsl
ljmp
outsl
or
lahf
dec
xchg
in
adc
js
add
fsub
out
pop
addr16
lods
fwait
cmp
mov
mov
outsb
adcl
orl
xchg
loop
push
fidivl
cmpb
fcompp
shlb
pop
call
adc
lds
shl
ficomps
pop
shrb
mov
or
sub
pushf
divl
pushf
lret
fwait
pop
lea
sarl
push
rcr
std
push
aad
aas
imul
push
pop
jg
insl
xor
xchg
in
addr16
sbb
enter
add
pop
cmp
mov
stos
insb
push
out
xor
inc
insb
lcall
add
mov
adc
dec
out
movsl
or
xor
cmp
mulb
mov
dec
arpl
and
mov
xor
sahf
daa
fisttps
popa
or
ss
pusha
push
mov
adc
or
jb
pop
idivl
add
push
inc
dec
addl
ljmp
scas
jbe
xlat
fidivrl
in
out
aam
ljmp
fdivr
mov
in
dec
mov
add
in
adc
push
adc
fcomps
pushf
xchg
xor
mov
insl
push
mov
rcrl
mov
mov
push
fwait
and
or
sub
enter
ss
xor
test
cmp
pop
xor
les
cmp
loop
into
sbb
mov
mov
movsl
cld
jmp
ret
ss
loop
fstpt
or
xchg
cld
ljmp
das
or
adc
neg
lret
sub
and
sub
push
adc
cmp
aam
stos
iret
in
call
fisttps
pop
in
rcrb
lock
cld
mov
pop
fwait
and
add
les
int
daa
stc
lock
lret
adc
movl
les
or
push
or
sbb
cmpb
push
jns
mov
push
lahf
pop
loope
mov
incb
fldenv
pop
push
aad
or
jg
xor
or
cltd
testb
or
fmul
and
aad
aas
adc
mov
pop
mov
pusha
lods
pop
jns
or
sbb
data16
adc
jno
int
push
sarl
xlat
mov
int
pop
ret
add
cmpsb
roll
fiaddl
inc
inc
mov
sub
outsl
mov
outsb
loopne
push
je
xchg
and
bound
cli
nop
ljmp
dec
xchg
mov
mov
sahf
mov
jg
xchg
call
rcll
jns
xor
int
push
iret
in
and
mov
pop
movsl
adc
xchg
and
pushf
out
dec
sub
in
pop
jecxz
pop
fadds
jp,pt
in
and
hlt
mov
test
cmp
lea
mov
aad
insl
xchg
xor
iret
divl
dec
movsl
cmp
into
out
in
es
pop
shlb
stos
cmp
adc
cmp
sbb
stos
adc
scas
ljmp
ja
dec
mov
fstp
pop
pop
fisubrs
push
pop
in
or
inc
inc
repz
leave
cmp
test
inc
lcall
ljmp
xchg
stc
fsubs
pushfw
push
inc
sarl
mov
xchg
xchg
mov
and
push
jmp
pop
inc
xchg
ja
rcr
outsb
dec
lcall
xchg
add
mov
flds
pop
cmp
hlt
push
and
jno
sub
pop
in
sub
fdivl
mov
cmpsl
pop
ja
push
pop
js
rcll
fsubr
add
add
or
das
icebp
daa
jecxz
lret
call
sbb
and
enter
ret
inc
cmp
mov
sub
adc
aaa
push
int
out
shlb
xlat
je
mov
push
aaa
xor
fsubrl
inc
jmp
sub
repnz
mov
push
jns
sti
jg
shll
int3
cmp
cmc
fisubrl
sub
mov
and
ret
or
insl
fisttpl
add
and
add
mov
aas
iret
dec
daa
mov
dec
subb
mov
dec
mov
pop
lods
test
pop
xlat
jl
xor
aas
adc
les
movl
jecxz
dec
ds
mov
lcall
stos
rol
jg
sub
test
jae
ret
imul
push
or
or
iretw
cmpsl
sarl
arpl
jmp
aam
jnp
xchg
jno
sub
mov
test
aam
test
jecxz
cmp
aad
mov
leave
ret
sbb
dec
out
push
xchg
aam
outsl
mov
popf
mull
dec
mov
xchg
xor
outsb
loope
xor
xor
cmpsl
test
sti
lock
fisubrs
sbb
ds
pop
fs
xchg
jge
mov
mov
fsubl
dec
mov
cmp
movsb
sbb
cmp
sahf
pop
adc
sbb
cmp
fs
dec
rorb
cmpsl
popa
sbb
rcr
rcr
dec
cmp
ficomps
stos
xor
orb
outsl
in
jmp
aam
fisubl
and
sub
mov
sbb
pushl
push
fucomi
shrl
dec
stos
mov
add
mov
out
std
fst
es
push
repnz
xlat
outsl
rcr
push
ljmp
call
and
push
mov
shl
xor
mov
das
rcl
jecxz
cmp
incb
push
or
ljmp
or
lods
xchg
push
push
addr16
mov
push
in
push
mov
pop
addb
mov
gs
je
out
out
or
mov
mov
jns
add
xor
jae
fnstsw
or
xor
xor
sahf
add
out
xchg
xchg
jns
pop
xchg
enter
add
sbb
cmc
jmp
jge
add
and
cltd
ds
call
rorl
js
imulb
or
fwait
test
mov
sub
in
push
aad
adc
test
jmp
jge
xor
xchg
sbb
int3
test
and
sahf
sar
cmp
and
leave
lret
pop
sbb
out
stc
xchg
pop
jle
inc
push
loopne
xchg
je
enter
iret
and
xorb
shll
mov
pop
and
pop
int3
stos
xor
rcll
iret
cmp
mov
sbb
popa
js
dec
jle
addl
or
cmp
pop
je
xor
mov
sbb
sbb
push
mov
jl
in
fwait
sub
hlt
cmpsl
in
mov
jmp
push
add
xchg
and
mov
mov
xchg
push
cmp
shll
addr16
fisubrs
cs
xchg
mov
sub
or
imul
inc
xor
lret
xchg
mov
inc
xchg
fisttpll
icebp
in
jbe
out
jle
dec
inc
xchg
xor
and
push
fsub
and
daa
pop
outsl
shrl
or
push
shlb
cld
aas
pop
and
xchg
pop
rorl
sub
sub
cmc
scas
mov
fistpll
pop
jecxz
and
fistpll
movsb
mov
movsl
sub
scas
daa
ret
dec
pop
inc
ss
cmp
mov
rorb
aas
cmpsl
and
adc
dec
repnz
aam
dec
xor
popf
inc
mov
movl
outsb
stc
push
das
pop
push
xor
outsl
xchg
and
loope
pop
aad
out
pop
xchg
xchg
out
insl
out
pop
bound
push
mov
sahf
test
dec
jo
inc
and
adc
test
fiaddl
xchg
lret
out
in
xchg
clc
lds
popf
dec
and
dec
enter
js
push
int
sub
daa
cltd
cmp
fbld
cltd
incb
scas
int3
clc
add
dec
or
jmp
rclb
pop
mov
jnp
push
cmp
pop
clc
inc
adc
fcoml
shrb
push
fcomps
pop
pop
mov
inc
int3
decb
fxch
and
sbb
fisubl
ds
int
mov
and
out
push
orl
lds
add
rcl
push
push
lret
lds
stc
lret
sub
sbb
cmp
insl
fidivrl
dec
mov
inc
nop
push
add
push
dec
pop
pop
xchg
outsb
or
cmp
jnp
es
xor
fbld
adc
es
add
adc
sbb
mov
xchg
jge
push
gs
lcall
test
dec
out
mov
pop
in
stc
fldcw
nop
movsl
jp
fcomps
fwait
xchg
faddl
cwtl
mov
sbb
fsubrs
clc
pushf
adc
push
not
test
cmpsb
les
mov
jge
ja
or
ja
xor
sahf
inc
jmp
fiadds
jecxz
mov
sub
es
add
pop
faddl
repz
xor
push
jg
popf
fstpt
das
out
push
sub
shl
ss
pop
lea
int3
enter
jnp
push
push
std
cli
addl
mov
aam
cmpsb
xor
std
imull
inc
repz
clc
aad
outsl
push
jl
out
cli
cmpsl
mov
lock
adc
rol
pop
dec
inc
push
mov
adc
ds
and
pop
sbb
cs
xor
and
inc
sub
mov
push
sbb
add
pop
mov
shlb
jno
repnz
pop
adc
adc
push
nop
icebp
test
mov
lods
repnz
fdivl
push
add
je
push
adc
or
cs
test
sbbb
cld
sub
lret
lret
repz
xchg
int
les
push
dec
int
add
imull
mov
pop
add
daa
push
enter
cmp
rol
jge
out
adc
pusha
mov
or
fucomip
lret
pop
daa
add
jge
pop
loope
std
or
and
cmpl
in
mov
xchg
les
mov
ror
inc
inc
push
popf
imul
mov
mov
in
mov
in
and
jo
sub
sub
in
in
test
push
cmpsb
fsubrs
data16
xacquire
leave
adc
cmp
jno
pop
test
jmp
fcoml
mov
addr16
loopne
cmp
add
sub
adc
imull
js
pop
cmpsb
shl
cmp
leave
iret
inc
fnstenv
outsl
dec
mov
ret
cli
cmc
ror
cmp
out
mov
fs
out
jge
mov
in
and
xchg
daa
int3
sub
daa
pop
repnz
sub
and
pop
leave
add
lret
or
cli
stos
scas
xor
sub
aaa
mov
scas
pop
cld
jb
inc
sar
sub
dec
adc
mov
bound
clc
cwtl
lret
jo
mov
int
aaa
inc
neg
inc
xchg
xchg
or
out
pop
lret
adc
stc
int
in
call
sub
sahf
or
out
lods
mov
aam
test
dec
cmpsl
shrb
lcall
popf
xchg
push
push
call
lret
cwtl
loopne
cs
loopne
iret
sbb
and
sahf
and
xchg
or
cmp
movsb
pop
in
cmp
clc
fcoml
fisubrs
cld
pop
movsl
mov
sub
sub
fisttpl
das
push
sub
mov
sbb
daa
xor
insb
aad
cmp
sbb
icebp
lret
rcrl
out
dec
xchg
and
inc
pop
xlat
push
mov
aam
dec
or
icebp
push
add
pop
bound
cltd
lea
adc
adcl
scas
addr16
rcrl
jl
rcll
les
ret
sbb
lds
inc
leave
dec
cmpsb
cmp
int3
sbb
cld
sub
and
mov
push
add
movsl
mov
mov
fdivl
pop
cmp
and
adc
push
pushf
adc
ret
insl
call
mov
sar
dec
lods
aad
xchg
popa
jae
xor
arpl
push
cmp
sub
pop
pop
fistl
mov
xor
movl
testb
inc
or
dec
push
iret
xchg
test
adc
xchg
inc
cltd
icebp
mov
mov
lock
xchg
inc
xchg
jle
dec
pop
dec
loop
and
push
pop
sarb
push
int3
xchg
sar
pusha
jmp
mov
insl
in
jno
movsb
xor
js
data16
into
push
inc
mov
cld
add
inc
cwtl
cmp
insb
mov
scas
fneni(8087
jle
xor
fdivl
push
enter
mov
push
ss
fdivrp
aaa
mov
mov
sahf
int3
xchg
rcl
xor
xchg
lds
in
dec
dec
jecxz
scas
mov
jge
inc
stc
cmpb
in
pop
jle
rcrb
mov
in
call
and
inc
rsqrtps
xchg
pop
scas
xor
outsb
addr16
jp
or
jno
dec
jne
mov
jecxz
sub
je
add
aas
inc
pop
cltd
hlt
mov
jb
andl
ljmp
pop
stos
fsts
xchg
adc
xchg
in
data16
mov
jle
test
xchg
push
int3
out
xor
sub
inc
dec
xchg
shr
mov
jb
dec
mov
cld
xchg
push
shrl
icebp
sub
nop
pop
mov
mov
xlat
pusha
xor
xchg
fildl
fdivs
rorb
lret
les
cmp
sbb
xchg
popf
lret
xchg
xchg
push
dec
xchg
rolb
pop
push
mov
mov
push
or
addr16
pop
shrb
sbb
movsl
ret
jecxz
in
jg
outsb
push
inc
rolb
sub
xchg
cwtl
fnsave
lods
jmp
iret
test
dec
orb
fstpl
scas
fdivr
out
jge
add
jns
sbb
enter
call
test
stos
push
movb
sub
mov
dec
inc
mov
sub
leave
bound
repz
enter
pushf
stos
movsb
outsb
jg
insl
lods
repz
fiaddl
jae
fstpl
stos
je
add
add
cld
cmp
aas
push
push
rorb
sub
stos
out
ret
mov
sub
xor
js
lret
shr
insl
fnstcw
xchg
xlat
inc
mov
sbbb
xchg
mov
xchg
mov
and
xchg
pop
jmp
cmp
adcl
ret
xor
push
sub
mov
sub
jmp
jmp
jno
push
lock
leave
adc
fistpll
pop
jp
in
add
lods
int
push
jmp
lods
rclb
add
adc
data16
pop
in
pushw
lods
or
and
rorl
sarl
mov
insl
cs
sbb
mov
mov
mov
std
sub
inc
cs
inc
mov
adc
cmp
testl
clc
out
and
cmpsl
scas
inc
subb
jne
bound
xchg
shlb
and
aad
mov
sbb
stos
xor
notl
jo
xor
lret
push
loop
and
pusha
pop
fs
and
ljmp
xor
add
and
popf
jecxz
cmpsl
fsubrl
adc
sub
sub
dec
and
mov
ficompl
outsb
pusha
in
lds
sub
ret
xchg
int
mov
sarl
in
pop
sub
ret
inc
push
aaa
pop
mov
lock
xlat
or
hlt
inc
popf
ja
loopne
jne
lcall
push
rol
lods
push
fsubr
adc
sbb
sub
insb
mov
cmc
push
enter
addr16
daa
xchg
jns
shll
aam
leave
ja
lret
stos
outsl
and
mov
pop
loope
inc
hlt
jbe
cmp
arpl
push
adc
adc
aas
push
cli
nop
out
jo
mov
dec
fdivrs
jno,pn
mov
out
inc
stos
in
cmp
pop
in
test
negb
adc
mov
dec
lods
jg
jo
mov
and
jecxz
pop
dec
por
mov
push
mov
jl
add
inc
jmp
loope
aam
sahf
xor
push
inc
xchg
mov
pmaddwd
lds
std
cltd
imul
pop
in
hlt
ret
add
push
mov
mov
jge
and
add
mov
aam
push
xchg
xchg
leave
pop
stos
dec
mov
jge
pop
inc
sub
sub
mov
mov
data16
dec
inc
cmpb
fdivrs
push
jmp
sbb
cmp
push
push
mov
mov
jno
cmpsl
data16
iret
sahf
dec
lcall
xor
aad
mov
sub
cmpl
test
pop
cmpsb
add
adc
fwait
pop
fs
cli
mov
ud0
push
ja
sub
xchg
ret
rcr
cmp
mov
lods
jmp
xor
and
pusha
fimuls
mov
imulb
inc
in
fmul
sub
jge
aam
rclb
add
notb
jge
in
jns
inc
push
jb
out
mov
xor
cld
pop
sub
push
aam
or
cmpsb
sub
pushf
jno
pop
mov
mov
loope
in
stc
std
adc
jge
mov
xchg
test
xchg
lods
and
lret
xchg
mov
aam
push
lods
jnp
arpl
lds
pop
xor
fidivrs
insb
cwtl
outsl
test
push
dec
xor
popl
push
pop
call
mov
ja
stos
lcall
mov
or
push
dec
lods
mov
jbe
pop
mov
dec
and
fbld
mov
outsl
push
shll
lods
mov
into
pop
mov
je
and
insl
push
jl
mov
mov
xchg
pop
sub
aas
add
dec
sub
jno
push
sar
pop
ss
bound
fists
sbb
lret
insl
out
lcall
mov
sub
jle
pop
idivl
rcll
push
outsl
enter
jae
sbb
aas
gs
dec
lret
pop
mov
mov
es
in
xor
add
int
jns
aad
aas
and
cs
or
sub
lds
adc
jo
dec
mov
sub
cmp
sbb
xor
int3
ficompl
int3
cli
rorb
mov
sub
mov
ljmp
clc
and
out
adc
xchg
int3
cmp
jg
lods
cmp
inc
or
cmp
push
xchg
sub
adc
daa
fmull
xor
data16
sub
jnp
test
dec
sub
mov
mov
orb
dec
into
add
aad
stos
in
aas
add
pop
mov
xor
out
test
les
mov
cwtl
ja
jp
sub
pop
lcall
imul
fcmovnb
cmpsb
pop
pop
test
out
test
xchg
mov
xchg
xchg
ds
cmpsl
add
loope
repnz
add
jno
roll
popf
pop
mov
movsb
jnp
mov
lret
movsl
cmpsl
or
adc
xor
mov
stos
fldenv
mov
pop
add
xor
shr
lgs
jnp
xor
mov
repnz
xchg
jo
pop
aad
mov
mov
or
push
fwait
xchg
cmpsl
rcrb
mov
adc
push
push
mov
mov
popf
or
pop
ds
cmp
mov
dec
into
jns
mov
or
cli
pop
imul
sub
lods
stc
inc
inc
and
cmp
stc
lret
adc
pop
mov
shll
pop
pop
jecxz
pop
inc
pop
popf
imul
push
add
mov
fistpll
dec
imul
push
pop
xor
xchg
ds
je
mov
movsl
pop
pmaxub
in
hlt
push
in
fildll
jae
jmp
or
cmp
jecxz
add
xor
pop
popa
cmp
xchg
cmp
loope
idivb
insb
shl
repnz
adc
pop
std
cmp
fdiv
or
cs
shl
roll
scas
loopne
pushl
ret
or
fildll
fbld
adc
aam
aad
inc
js
add
pop
call
xchg
cmpsl
jno
outsl
mov
jecxz
mov
inc
mov
lret
xchg
xorb
push
in
scas
imul
jae
shll
loope
jle
mov
cmp
lahf
xor
mov
dec
mov
or
mov
inc
push
or
mov
ss
mov
out
cmp
add
icebp
jg
and
imul
jne
cmp
sbb
pushf
and
cwtl
leave
shrl
jecxz
or
fisubrs
pop
add
out
add
rcll
pop
pushf
pop
push
aas
mov
pop
mov
and
mov
sbb
ja
xor
dec
fisubl
push
xchg
out
gs
fwait
jp
add
sub
stos
lods
lret
ret
in
cli
adc
popa
adc
dec
mov
stos
rcl
and
pop
jo
orps
lret
mov
pop
jge
dec
xchg
insb
or
testb
push
dec
cltd
scas
lods
ret
fmull
and
loopne
daa
popl
out
lcall
adc
test
cld
jle
sub
insl
rol
xlat
push
add
les
jb
in
mov
mov
add
imul
xchg
push
pusha
lret
idivb
xchg
pop
push
hlt
int3
pop
sub
call
sub
sahf
xor
sbb
enter
das
mov
enter
sbb
jbe
xchg
les
xchg
movsb
jo
ror
push
mov
ljmp
rorl
test
int
rcr
mov
movsl
jmp
rorl
aam
or
lds
pop
jmp
xor
jecxz
sti
pop
test
sub
ds
cmp
imull
das
shrl
xor
out
and
dec
rol
addb
stos
bound
enter
addr16
int
mov
cwtl
in
xorb
rcrb
jecxz
xlat
xor
je
div
cmp
into
mov
aam
mov
test
mov
adc
lods
gs
scas
shl
movsb
pusha
nop
xor
cmc
jcxz
mov
mov
sbb
lods
adc
mov
mov
pop
mov
pop
sub
test
scas
push
out
shll
repnz
adc
test
cmp
jbe
iret
insl
mov
mov
mov
push
test
or
daa
xchg
xchg
cld
lods
in
mov
xchg
arpl
cmp
jae
nop
push
daa
xchg
jl
pop
add
cmp
mov
int3
loopne
outsb
or
cli
mov
add
mov
mov
mov
add
xchg
movsb
sub
xchg
sbbb
ret
pusha
popa
mov
hlt
mov
lods
mov
std
push
push
les
int
pop
sub
mov
test
dec
push
inc
xor
mov
fcoml
sub
mov
push
add
mov
mov
or
pop
xchg
cmpsb
ljmp
xchg
popf
inc
stos
int3
js
xorb
ret
and
cmp
pop
mov
scas
pop
adc
fdivl
sbb
aad
scas
xor
movsb
xchg
mov
sub
cli
jne
rorl
mov
xchg
cmp
mov
daa
mov
aas
jmp
out
sbb
mov
mov
cltd
xchg
loopne
and
inc
sbb
adc
cmp
xor
jbe
push
xor
sarl
popl
or
push
jmp
gs
loope
jnp
push
pusha
add
bound
mov
add
aad
jno
aas
int
push
fsubl
rcrb
mov
jbe
and
push
jg
icebp
push
push
aaa
lret
movsl
jae
or
xchg
inc
pop
fdivl
iret
roll
loope
jne
fldt
xchg
sub
arpl
lds
sbb
sub
mov
push
adc
adc
xchg
aas
scas
les
int3
mov
xor
xlat
pop
out
sub
xchg
mov
push
in
mov
rorb
sub
push
and
int3
test
cmpsl
push
into
cltd
and
out
jne
scas
mov
dec
mov
sub
into
jb
and
packsswb
aam
stc
out
fsubl
and
ja
cs
inc
stc
outsb
pop
adc
cmp
repz
cmpsl
fisubrs
clc
xchg
sub
repz
jno
addr16
popf
fwait
test
insb
pusha
pop
mov
imull
pop
sub
push
lods
int
in
jecxz
aam
stos
shr
movsb
xlat
push
sbb
adc
rcrl
xchg
aaa
or
mov
inc
pop
sub
call
mov
movsl
out
pop
imul
fyl2x
add
cli
mov
jmp
jns
dec
stos
ss
lret
and
jle
mov
mov
in
push
and
and
ss
jno
push
nop
fiaddl
loope
daa
in
sub
push
inc
stos
in
lods
mov
push
pop
leave
out
jbe
psrlw
jns
shll
pushf
sbbl
cld
fsubrs
mov
inc
xchg
aaa
leave
pop
mov
sub
ja
jmp
rcll
sbb
es
popf
pop
jbe
and
mov
into
push
xchg
xor
jo
inc
push
or
adc
in
mov
leave
scas
push
xor
int
jl
dec
fs
pop
call
fistl
adc
adc
sub
lods
loope
shlb
jecxz
and
or
rclb
outsl
pop
aad
push
fistl
mov
pop
incl
pushf
in
ret
repnz
push
cwtl
into
pop
jbe
repz
fisubl
je
rolb
jg
dec
push
outsb
in
sub
adc
cltd
jno
jecxz
cmpsb
mov
pop
movsl
ss
dec
mov
aad
and
sub
pop
addr16
movsb
sub
sar
fs
cmp
cmp
sub
in
in
sbb
aam
xor
pop
sbb
cli
and
stos
sbbb
sbb
ja
lahf
adc
xor
jae
xchg
add
cwtl
ds
fwait
jp
rclb
inc
dec
adc
xor
ja
sub
xchg
dec
lods
sub
test
mov
js
scas
dec
sar
rcr
xchg
mov
mov
mov
jae
add
insl
into
test
dec
sahf
aas
sbb
cmp
flds
movsb
cmp
test
fbstp
mov
daa
bnd
cmpsl
cmp
inc
outsb
or
cmp
jns
inc
adc
scas
or
push
orl
sar
test
adcl
aam
xchg
adcl
call
sti
cmp
and
xchg
pop
sub
cld
fisubl
push
mov
int
ds
mov
and
repz
pop
imul
and
or
mov
pop
mov
cmpsl
dec
cwtl
cli
push
adc
cmpb
push
sub
sbb
std
xchg
out
in
push
add
nop
or
repnz
dec
rcrb
cmp
into
mov
ja
mov
test
das
cmpsl
adc
arpl
pop
mov
sub
and
jg
mov
movsb
jne
dec
inc
cli
out
daa
cmp
xchg
in
mull
fcompl
jge
rorb
push
sar
arpl
repnz
jge
push
inc
fs
loopne
jmp
push
pop
lds
mov
jbe
or
int
xchg
int3
scas
rcrl
push
iret
inc
mov
inc
adc
mov
mov
iret
iret
mov
fadd
push
in
push
into
xchg
xchg
add
pop
mov
pop
fsubp
cwtl
sub
call
loop
lods
cmp
cmp
cmp
fsub
sub
stos
push
in
std
mov
inc
icebp
nop
in
and
call
fstpl
fdivrl
stos
out
shrb
fs
shrl
adcl
scas
es
or
jo
sub
js
push
data16
cld
xchg
lret
cmp
cmp
fimull
xchg
sub
popa
fdivrl
pop
in
cld
add
shl
imul
pop
push
aam
clc
sbb
pavgb
fildl
rcrl
test
xchg
cmp
push
sub
shl
xor
ret
sbb
lds
xor
les
xlat
outsb
push
std
dec
and
into
rorb
shll
adc
xor
pop
jo
nop
lods
mov
or
xor
or
enter
xor
adc
rclb
cwtl
sub
sub
lahf
out
pop
adc
pusha
jmp
and
pop
out
cmp
leave
sub
fmul
and
pop
cltd
int
pop
insw
push
daa
xor
sbb
lods
xlat
rcrl
mov
and
flds
sub
aam
or
pop
jns
and
roll
mov
jmp
rolb
sub
and
mov
lds
cmpsb
sbb
or
ret
add
mov
sub
clc
xchg
jl
cltd
dec
or
fisubs
insb
rorb
into
test
mov
sbb
pop
stos
sub
xlat
and
mov
int
and
xlat
test
jae
test
xchg
out
pop
push
mov
cmc
addr16
and
xor
pop
adc
loopne
scas
and
mov
lock
adc
pop
push
cmp
adc
repz
fsubl
in
mov
shlb
inc
out
sbbb
sub
sub
mov
xor
mov
mov
call
xchg
xchg
nop
dec
xchg
pop
push
fbld
sti
rcrl
rcll
aad
push
pop
mov
sbb
adc
jb
xchg
test
add
cld
push
inc
cld
aas
sbb
int
mov
gs
loope
int
jae
cmpsl
mov
jnp
dec
movsb
stos
loope
ja
or
pop
push
imul
xchg
push
jns
sarl
fdivrp
out
pop
mov
mov
pop
adc
add
sub
lods
and
mov
arpl
les
mov
lret
aas
lock
lea
test
lea
add
scas
adc
mov
ret
repz
add
push
xchg
addr16
pop
add
pop
mov
aas
popa
sub
shr
jb
xchg
daa
cmp
aad
sub
push
cmp
popf
sar
fidivrs
dec
mov
sarb
test
jnp
das
into
in
jmp
repnz
jae
idivl
in
or
cmp
int
sti
in
sbb
jne
add
xchg
mov
out
in
push
mov
out
mov
lret
add
push
sub
push
inc
jb
ret
mov
mov
rcl
adc
mov
out
rol
leave
leave
rcl
ja
inc
pop
scas
lods
ret
push
loope
dec
jg
lret
shll
repz
dec
shrl
jmp
mov
mov
and
xchg
and
inc
gs
out
jg
push
mov
daa
push
mov
push
push
leave
into
stos
paddw
pop
repnz
inc
xchg
and
div
jbe
cmp
iret
gs
mov
and
sbb
jb
fwait
dec
in
jbe
sbb
dec
xchg
push
lea
mov
imul
dec
nop
in
lods
iret
imulb
aam
sbb
jg
addr16
scas
movsb
jbe
rcl
sbb
lahf
and
adc
scas
fucomi
push
cmp
ror
xchg
jmp
fldenv
inc
int3
out
xchg
xor
insb
jno
lock
or
bound
and
xor
inc
imul
dec
out
sbb
cmpsb
call
xor
ret
add
pop
int3
hlt
cmp
push
shl
stc
fnstsw
out
push
mov
int3
sbb
push
mov
nop
mov
rcll
mov
dec
popa
aad
add
mov
subb
mov
jbe
mov
movl
sub
mov
push
xor
mov
and
scas
loopne
xchg
adc
daa
loopne
mov
pop
jecxz
mov
loop
pop
roll
cmp
xchg
mov
ja
pushf
loope
dec
in
xchg
gs
mov
fs
icebp
aas
mov
out
lcall
sub
xor
into
imul
sti
cwtl
rcrl
cmp
repz
aad
cwtl
or
cmc
inc
loope
pop
or
fiaddl
xchg
mov
xchg
ja
pop
out
aam
stos
out
repz
sbb
ret
cmp
and
sti
sbb
cs
cld
and
cld
into
sub
scas
and
std
sti
sub
pop
nop
sub
ds
int3
shlb
std
rclb
cmp
xchg
cltd
ljmp
pop
mov
lea
daa
fcompl
mov
std
xor
les
rclb
addr16
lds
ret
xchg
or
lret
or
into
dec
lods
out
not
pusha
pop
xor
add
fdivs
pop
stc
cli
int3
push
or
dec
fldenv
aas
xor
shll
push
dec
inc
pop
lahf
sub
dec
mov
add
mov
lods
out
mov
call
or
xor
xchg
out
hlt
cs
mov
add
fidivrl
mov
xchg
mov
test
sahf
pop
jae
test
dec
xchg
scas
out
or
int3
sub
cld
out
jmp
cltd
push
lock
orl
add
sub
movsb
fwait
test
mov
inc
xchg
push
aad
and
mov
cwtl
inc
imul
mov
push
test
orb
pusha
mov
xor
shl
or
cmp
lahf
mov
adc
sbbb
sbb
call
sub
sti
mov
inc
mov
mull
sahf
sbb
pusha
cwtl
sbb
cmp
sub
test
mov
sub
mov
pop
pop
rcrb
jp
aaa
cmp
mov
xchg
jbe
xabort
mov
mov
ret
sub
push
and
jl
cli
inc
inc
call
xchg
push
out
pop
filds
fisttps
notl
xor
and
pushf
sub
push
sub
inc
insl
repnz
ja
xlat
pop
push
cmpsl
sub
cmp
pop
cmpsb
je
int
imulb
mov
std
xchg
rcll
push
ret
mov
adcb
push
and
cli
jae
sub
or
sbb
inc
repnz
insl
xchg
fisttps
aam
or
sub
lcall
stos
aas
sahf
fsub
and
mov
stc
xor
iret
mov
pop
push
push
cmp
es
leave
shrb
or
pop
int
daa
mov
inc
adcb
into
cmp
inc
out
test
mov
dec
adc
add
rorl
sahf
lret
mov
inc
push
fnsave
pop
shrb
xchg
push
jnp
adc
xchg
imul
loopne
movsb
inc
cmp
es
movsb
data16
pop
pextrw
or
xchg
clc
fst
push
fucomi
or
iret
sbb
lret
sub
cwtl
xor
jne
sbb
fptan
and
lret
leave
test
test
stos
xchg
aad
iret
adc
push
xchg
imul
pop
incb
push
mov
add
jns
xchg
jge
pushf
lods
shlb
aad
test
mov
inc
lahf
xchg
stos
pop
icebp
cmp
aam
xor
jns
xchg
ds
and
fbstp
loop
subl
inc
cmp
dec
lahf
cmp
iret
fstpt
dec
xor
sub
jp
pop
push
pop
mov
jge
es
clc
aad
sub
loopne
shll
push
cmovs
test
lret
push
fsubr
mov
idiv
in
insl
xchg
and
jmp
fsubr
push
cmp
and
std
inc
pop
in
cmp
ret
lods
mov
push
xchg
loop
nop
mov
insb
daa
hlt
imul
bnd
std
insb
outsl
std
or
mov
push
imul
ficoms
outsb
or
add
dec
push
fnstcw
out
ret
xor
xor
dec
jl
sub
xchg
add
sbb
mov
xor
adc
test
nop
sub
lret
fwait
fistpl
leave
adc
out
sub
mov
inc
adc
cmp
les
add
sbb
movsb
lahf
pop
test
xchg
inc
scas
movsl
loop
xchg
sbbb
xchg
mov
cmp
mov
out
or
xlat
insb
shlb
dec
mov
imul
icebp
test
cmp
push
shll
mov
jbe
or
and
jmp
sub
adc
lret
pop
pop
mov
mov
mov
sub
mov
loop
arpl
fists
test
hlt
xchg
sbb
dec
out
je
mov
cwtl
mov
out
cmc
daa
call
push
out
push
sbb
ficoml
test
jo
mov
mov
push
xor
sahf
sub
ds
shll
hlt
mov
add
shl
jns
test
pop
out
pop
mov
stos
fisubrl
ljmp
dec
push
lret
popf
xor
mov
mov
xchg
shl
and
clc
or
nop
lret
ss
fwait
add
cli
rorl
mov
or
mov
and
outsb
and
cld
ret
push
adcb
push
pop
sbb
add
xchg
cmpb
fs
push
dec
in
ds
mov
loopne
stc
decl
mov
pop
pop
push
jae
add
scas
notl
xchg
sub
cli
scas
cmpsb
inc
call
xchg
jmp
stc
mov
cmp
fnstsw
lret
lret
add
push
loope
dec
xlat
sub
mov
dec
sub
mov
add
mov
or
aas
aad
rcl
pop
outsb
fdivl
icebp
xchg
aad
movsb
mov
cld
aas
xor
lods
cmp
mov
jmp
dec
jle
xchg
lret
test
aas
cmpsl
hlt
aad
data16
into
nop
lret
enter
jg
aaa
int3
mov
daa
jb
lea
popa
and
pushf
js
dec
fsubs
jo
pop
movsb
fwait
cmpb
mov
inc
sbb
mov
ja
dec
stos
pop
mov
jle
in
xchg
movsl
mov
jns
les
xchg
loope
nop
loopne
sub
mov
adc
xor
add
jmp
mov
cmc
mov
pop
cmc
enter
fwait
lcall
pop
cltd
mov
dec
jmp
inc
adc
icebp
adc
fcoml
pushf
pusha
test
nop
sub
sub
sub
test
and
rorl
incl
mov
xor
jle
ret
or
in
cli
int
and
in
xchg
dec
fstpl
popl
add
xchg
adc
dec
sub
sahf
pop
int3
rorb
pop
repnz
jno
mov
mov
or
repz
lret
das
insb
and
aaa
mov
xlat
addr16
sub
adc
xchg
xor
sub
mov
imul
pop
out
pop
add
sub
xor
jae
shll
add
fdivr
push
ljmp
cli
add
cmp
in
jge
daa
jge
mov
sub
xchg
cli
lahf
push
push
cmp
popa
clc
cmp
inc
push
or
push
inc
fsubrs
addr16
leave
jp
lret
mov
pushf
icebp
shrl
lcall
fnstenv
out
jmp
jno
roll
shl
dec
fcmovne
pop
lock
jbe
cli
adc
push
sti
fdivs
push
fnsave
or
outsb
push
sbb
xor
xor
out
ljmp
adc
and
sub
inc
xor
and
mov
push
cmpsb
pop
push
cmpsl
push
insb
aam
sub
scas
xor
adc
fcompl
repz
int3
cmc
in
insl
fs
jae
mov
fstps
mov
pop
fadds
xchg
xor
and
lock
mov
push
lea
xchg
out
cmpsl
jle
shlb
out
xchg
mov
lcall
js
jle
mul
aad
pop
pop
push
scas
lods
mov
shlb
in
sub
pushf
lret
and
ds
dec
and
push
inc
fstps
in
adc
push
outsl
mov
lcall
lds
outsl
stc
or
jae
frstor
cmp
subb
rcl
pop
xlat
jns
push
pop
push
scas
lods
lds
push
lock
jns
mov
shll
adc
mov
mov
pop
adc
out
mov
inc
jge
in
lret
and
arpl
nop
mov
mov
outsb
cmpsb
ret
jle
xchg
lods
mov
inc
loop
shlb
mov
jne
push
xchg
push
sbbl
mov
js
cmp
push
int3
sub
ret
mov
fwait
jl
outsl
pop
jle
cs
mov
jo
and
xchg
pop
mov
orl
cmp
pop
and
rcrl
push
adc
enter
nop
adc
ja
inc
or
add
mov
push
sbb
insl
test
lods
xchg
negl
ds
addr16
mov
push
les
xor
stos
dec
xchg
lret
daa
lods
pop
xchg
dec
and
in
inc
cld
or
pop
xchg
dec
sub
mov
jmp
push
mov
xor
cwtl
cs
fadd
jmp
shrb
xor
stos
stc
test
sub
call
out
int3
sbb
ja
data16
and
rol
mov
xchg
cwtl
push
jp
xchg
jl
xchg
pop
ss
pop
imul
icebp
scas
pop
addr16
ds
and
lods
es
sub
sub
test
sub
push
sbb
jo
mov
sbb
cmp
mov
dec
daa
jmp
sahf
push
sbb
sbb
and
push
shrl
pop
shlb
lahf
dec
and
jbe
insl
adc
shl
clc
cmp
sub
les
fmuls
and
dec
xchg
push
fst
cmp
jecxz
lahf
pop
push
inc
jp
adc
mov
mov
dec
lahf
push
add
lds
cmp
inc
jne
fisubrl
pop
or
dec
inc
lret
pop
and
dec
pop
enter
jae
cmp
xchg
in
mov
lahf
add
sub
lods
fistpl
push
inc
xlat
shl
loop,pn
cwtl
lods
jns
fsubrs
inc
sbb
leave
dec
es
jmp
lea
sbb
out
jecxz
std
mov
fwait
xchg
mov
mov
es
sub
xor
loopne
jle
lahf
mov
insl
xchg
adc
std
icebp
pop
lods
adc
test
xchg
lds
loopne
aad
std
inc
enter
sub
arpl
sub
imul
lods
pusha
or
stos
or
lea
fnstcw
cmp
sub
data16
adc
adcl
mov
scas
adc
mov
add
pop
jbe
xchg
cmp
mov
pop
lods
inc
mov
or
mov
jmp
mov
cwtl
fdivp
sbb
pop
cli
sbb
sub
aad
pushf
hlt
push
lcall
lds
xchg
fnsave
int3
jg
ret
mov
scas
xchg
fcoms
push
test
xchg
push
add
pop
int
xchg
dec
popf
mov
outsl
dec
into
sub
sbb
pop
sbb
stos
imul
aas
ret
mov
mov
dec
mov
scas
sub
adc
cli
sub
sbb
cmp
dec
xchg
push
xchg
loop
sub
aas
pop
cmp
rcr
mov
lock
xchg
mov
outsl
xchg
in
into
sti
loope
cs
ljmp
shlb
pop
sar
movl
insl
orb
xor
or
in
out
daa
lret
xchg
cmc
ret
mov
movsb
cmp
pusha
in
rcll
je
pop
add
and
shl
sub
fsubl
ror
sbb
out
dec
jge
popa
je
rorl
sti
std
call
leave
setno
jo
ljmp
jo
rorl
std
add
in
enter
cmpsb
jecxz,pt
xor
ficoms
in
sahf
mov
aam
xor
fisubs
rcr
push
test
movsl
pop
movsl
xchg
cmp
lds
dec
mov
pop
sub
das
fdiv
jae
and
shll
lods
lahf
push
and
adc
lds
outsb
iret
in
lea
les
test
add
ret
jecxz
sahf
sub
or
mov
sub
lcall
and
inc
and
js
int3
fidivs
iret
scas
push
fidivs
rol
xchg
xor
movsb
push
enter
test
into
pop
or
mov
add
test
jne
or
cmp
addr16
jl
arpl
call
shlb
lcall
shll
jmp
ret
and
xchg
mov
and
ficoms
roll
push
clc
and
repz
jnp
mov
pop
jno
jae
cmp
fcomps
sar
sar
movsl
aam
out
mov
fisttpl
stc
fldl
mov
int3
pop
pop
subb
scas
fwait
aaa
push
sub
dec
or
mov
ret
pop
aaa
cli
insl
popf
mov
fs
movsb
sar
mov
shl
loopne
dec
xchg
xchg
xchg
mov
repz
sbb
call
jne
divl
movsl
xor
jge
add
mov
leave
cltd
pop
push
lret
sbb
addr16
xchg
insb
pop
xchg
faddl
aam
cmpsl
mov
test
pushf
jmp
mov
xchg
cmp
mov
push
dec
sub
jnp
repz
sar
aaa
pop
push
mov
out
gs
sahf
lods
mov
insl
pop
xchg
dec
lock
adc
mov
jg
lds
leave
pushl
in
push
icebp
lea
push
or
js
lcall
dec
cs
dec
pop
lods
mov
imul
imul
repnz
call
outsb
or
nop
shrb
mov
sbb
add
xchg
mov
xchg
cs
jge
repnz
ja
pop
mov
cmpps
mov
sti
les
adc
sub
imul
push
sub
scas
out
popf
pop
jg
adc
xor
ret
fldt
mov
sarb
iret
inc
sbb
pop
popf
mov
into
sbb
xlat
mov
sti
ja
jmp
adc
push
aam
xchg
and
cmp
movsl
in
scas
out
stos
out
in
sub
notl
push
cld
sub
aas
mov
sub
pop
dec
mov
addr16
movsl
arpl
mov
mov
ret
sub
and
in
jo
sbb
je
vmovlps
insl
ss
clc
notl
sub
add
sbb
add
or
shrl
ljmp
pop
and
sub
push
sub
pop
insl
xchg
mov
in
sub
arpl
pushf
or
push
add
lcall
mov
rcl
pop
cli
aam
xchg
dec
xchg
lret
int
pop
mov
jno
jnp
imul
inc
add
cmpsb
dec
call
jne
in
mov
add
addr16
cs
xlat
and
stos
or
mov
fs
flds
popf
mov
cmp
aad
cwtl
jbe
out
push
dec
ficoml
clc
sbb
daa
sub
inc
xorb
ja
aad
xchg
std
cltd
or
pop
or
inc
lcall
xchg
jns
aad
lea
add
arpl
addr16
push
add
rcrb
mov
xchg
fcomip
cltd
cmp
mov
or
add
loop
xor
out
pushf
pusha
icebp
push
call
popf
aad
xchg
iret
jecxz
add
mov
ljmp
jnp
xor
cmpsl
push
notb
push
popa
adcl
ret
stc
stos
jl
xchg
aam
pusha
clc
and
dec
inc
js
add
shl
data16
or
adc
push
cmp
cltd
repz
inc
test
pop
xchg
or
jmp
cmp
ret
fprem
fcomps
shlb
pop
pop
pushf
lret
testl
pop
adc
xor
xor
cltd
les
xor
inc
xor
out
test
or
incl
cltd
iret
lcall
push
imul
xchg
push
xchg
xchg
fs
jecxz
aad
loopne
pop
orl
jno
cmc
repz
fsubs
stc
out
mov
xor
insl
jnp
add
push
adc
cmp
dec
xchg
sbb
dec
adc
fxam
mov
repnz
pop
mov
jmp
dec
dec
adc
mov
xchg
in
mov
lahf
fisubrl
sbbl
xchg
cli
enter
sahf
decb
nop
rcl
add
dec
jecxz
jne
pop
jp
or
bound
pop
iret
xchg
test
sub
dec
mov
push
arpl
lds
sub
and
in
mov
rclb
mov
out
sbb
xor
xor
int
jae
sub
xchg
sub
and
ljmp
out
aas
cli
sub
pop
aad
lock
cmc
in
and
pop
xlat
fcoms
in
out
sti
cld
out
cli
dec
popf
xchg
xor
repnz
enter
fidivs
mov
clc
movl
cmpsl
ficoml
je
push
pop
sub
mov
mov
jmp
sub
ror
push
enter
rclb
fistl
sahf
decb
roll
and
push
add
outsl
testl
mov
mov
push
push
adc
das
mov
mov
insb
scas
out
mov
and
push
rcrl
ret
in
fstl
aas
stos
dec
enter
inc
repnz
dec
push
mov
in
jo
shl
arpl
stos
sub
mov
xchg
mov
dec
mov
push
sbb
xchg
and
adc
gs
out
pop
jg
pop
gs
cmp
fisttpll
lret
jo
pop
filds
mov
lret
cmp
mov
or
scas
jp
and
mov
or
ljmp
xor
test
fs
addr16
outsb
inc
add
jnp
pop
in
or
adc
dec
or
clc
ret
xchg
xor
aad
fs
push
xlat
fs
xchg
jge
out
add
scas
rclb
inc
pop
sub
ljmp
clc
repz
mov
inc
shrl
pop
mov
mov
xlat
lret
cli
or
subb
xor
lock
pop
sbb
add
cld
cmp
aaa
add
mov
pop
or
mov
inc
mov
xchg
and
sub
gs
adc
xchg
add
and
aaa
xchg
and
frstor
stc
cmpsl
fistpll
ja
repz
sbb
pop
dec
adc
dec
rep
stos
insb
idivl
iret
jle
nop
cmp
add
fs
push
mov
xorb
arpl
lods
ficomps
imull
mov
out
pop
add
xchg
jmp
pushf
adc
mov
rorl
test
ss
pop
lea
pop
mov
aad
xchg
ret
cmp
stos
mov
adc
mov
mov
pushf
cmp
cld
cwtl
jp
cmp
push
nop
fs
adc
les
push
in
xchg
pusha
sbb
dec
outsb
mov
pop
cmc
push
sbb
jns
int
in
rol
bound
xor
enter
mov
nop
js
stc
fisubrl
das
sub
mov
daa
jp
rcrl
cwtl
xor
insl
cmp
push
adc
mov
cmp
xchg
mov
test
fsubs
enter
lds
repz
mov
test
iret
jle
and
out
fdivs
jmp
adc
sub
jb
fcomps
fidivs
sti
xor
mov
ja
lret
dec
mov
jecxz
push
xchg
mov
stos
int3
xchg
in
icebp
xchg
pop
and
sub
pop
sub
pop
imul
shll
movsl
iret
sub
inc
xchg
movsb
out
mov
rcll
pop
fldt
xorl
xchg
xchg
lock
mov
orb
popf
enter
adc
push
inc
ljmp
cmp
imul
idivl
xchg
in
fs
negb
pop
aad
cmp
sbb
add
add
jns
inc
jno
testb
les
cs
lds
cmp
xor
scas
xor
dec
dec
into
adc
cmp
mov
sub
push
iret
push
dec
cmp
push
pop
lods
ds
je
xchg
icebp
mov
push
lcall
rol
cmp
lods
sbb
add
push
fstps
adc
or
lret
or
and
int3
mov
pmaddwd
add
pop
sub
in
jmp
mov
stos
loop
mov
insl
xor
or
lds
adc
inc
arpl
cs
mov
fidivl
xchg
aas
hlt
mov
lods
xchg
add
add
adc
mov
insl
gs
ds
sbb
nop
xchg
std
fwait
inc
fwait
stos
lret
loopne
test
and
jmp
in
pusha
mov
inc
hlt
sbb
pop
ret
xlat
cwtl
int
jecxz
les
nop
xlat
sbb
jb
out
out
cmp
ret
mov
inc
in
push
jnp
lock
daa
mov
xchg
cmp
fcoml
and
dec
xor
fxch
int3
lret
mov
jecxz
andb
add
xchg
pop
mov
dec
cwtl
int3
dec
xchg
push
loop
inc
int3
push
movsb
mov
sbb
sbb
jmp
adc
xchg
fldenv
mov
mov
insb
aad
shrb
rclb
enter
sub
gs
inc
out
and
push
into
imulb
in
push
aas
leave
cld
inc
cmpsl
rolb
mov
sbb
in
mov
sub
mov
orb
leave
mov
je
shll
xor
loope
jns
inc
rcrl
das
mov
stc
rcll
das
or
movsb
sub
sar
pop
sub
leave
sbb
cmp
mov
and
jmp
push
mov
rorl
repz
lods
in
in
xor
jg
jno
add
cmp
sbb
dec
imul
fstl
sub
pop
lods
vshufps
lock
sbb
js
lods
popa
adc
dec
daa
xchg
in
in
lods
shr
adc
enter
push
xchg
dec
pusha
push
cmp
cs
into
iretw
mov
aam
xor
sbb
sub
cmc
enter
fists
fadds
cmpb
pop
ret
rcr
lods
out
jge
or
out
jb
pop
std
jge
fsub
cmp
xor
mov
test
push
jb
addr16
lcall
in
or
dec
repz
lret
dec
clc
lcall
data16
mov
mov
mov
cmp
sub
push
aas
mov
xlat
and
jl
popa
mov
lds
or
arpl
ss
insl
jns
mull
jg
aad
cltd
push
jmp
and
fmuls
stos
dec
inc
popf
ret
pop
rolb
lods
roll
dec
push
popa
cld
mov
jnp
lods
in
pop
sbb
stc
xlat
mov
dec
xchg
cwtl
xor
rcr
sbb
js
inc
mov
flds
test
xlat
xchg
outsl
nop
int
dec
xor
jae
fsubrl
ret
add
fstp
sbb
pop
dec
in
shlb
negb
mov
or
mov
jp
mov
or
lret
aaa
out
pop
ficomps
cmp
movsl
shr
rolb
iret
ret
shl
andb
jp
es
or
ud2
pop
icebp
xchg
jae
lds
mov
push
repnz
cmc
mov
push
add
ror
push
and
gs
aaa
test
fsubr
int
les
add
mov
dec
fucomp
ficomps
test
gs
sbb
pop
ds
cwtl
adc
dec
xchg
into
int3
sub
fwait
cmovnp
lds
in
aam
cmc
lds
dec
pop
cmp
popf
lock
sub
enter
ljmp
cmp
lds
cli
adc
je
push
jge
je
fsubs
and
test
mov
pop
inc
cwtl
cwtl
outsl
jb
out
jo
test
cli
ret
rol
and
ret
pop
dec
mov
mov
loope
jge
xor
xchg
pop
lret
jl
pop
jl
mov
dec
xchg
sub
lahf
jp
lods
lret
rcrb
daa
push
push
sbb
or
add
loop
push
mov
sbb
mov
xchg
xorl
inc
ret
mov
gs
lods
std
push
dec
pop
push
aas
ja
push
das
inc
and
add
cltd
adc
sarb
mov
and
arpl
addl
lods
aas
iret
dec
cmpl
in
xor
cld
mov
adc
lahf
dec
xor
repnz
push
and
sub
ror
int
mov
xchg
sub
pusha
lds
xor
lods
pop
sub
mov
mov
jnp
mov
pop
repz
cltd
int
mov
shlb
inc
out
stos
dec
fisubrl
out
sbb
stos
jge
add
xchg
push
scas
fisttpll
mov
stos
fsts
push
leave
aad
fimull
sarb
push
movsw
and
fcoml
adc
sub
fistl
out
dec
cmpsl
bound
xchg
add
fistps
mov
mov
stos
push
cwtl
loopne
shlb
rorl
mov
dec
stos
test
test
cli
sub
pop
xchg
daa
dec
jecxz
lods
mov
dec
sar
pop
je
inc
cs
cmp
frstor
mov
fisubrl
pop
xchg
xchg
mov
aam
and
inc
ffree
push
popa
pop
stos
adc
bound
and
stos
int3
insb
pop
cmp
push
inc
ds
push
ficoms
mov
lea
ljmp
outsl
cmpsb
nop
pushf
clc
mov
shl
shrl
test
mulb
inc
mov
mov
jnp
pushf
mov
jmp
jmp
mov
aas
lock
xchg
and
in
shrb
pop
fdivrs
mov
sub
and
fimull
pop
sub
sub
or
push
pop
mov
pushf
mov
jb
jle
cs
xchg
jge
fucomip
inc
outsb
les
repnz
pop
les
scas
add
mov
int3
pop
imul
and
call
pop
xchg
pusha
mov
inc
dec
dec
into
sub
sysenter
adc
or
jno
pop
mov
int
outsl
addr16
jns
cmp
inc
xor
out
xor
insl
mov
mov
xchg
inc
cmp
mov
mov
add
mov
push
cmc
jmp
adc
inc
ds
das
jle
leave
call
jecxz
mov
mov
adc
fldcw
and
inc
mov
push
clc
loope
movl
pop
mov
or
imul
cltd
jne
lcall
jl
ret
loope
out
mov
sti
jo
jmp
push
stos
imul
cld
sbb
fmul
scas
out
jb
repz
adc
out
jge
mov
push
and
pop
nop
lcall
call
xor
int3
mov
cmp
sti
ljmp
push
dec
jle
movsb
movsl
inc
jecxz
mov
sbb
ds
mov
testb
sub
xchg
in
jns
stos
ret
xchg
xchg
mov
xchg
jecxz
cwtl
push
pop
in
movsb
ret
or
or
cmp
ljmp
xor
sbb
cwtl
ret
sub
lds
fstl
cvtps2pi
sub
sub
outsb
jg
clc
adc
loope
or
fisttps
stos
mov
leave
es
imull
icebp
cs
lea
aas
cmp
add
imul
push
sti
test
mov
bound
or
mov
mov
clc
mov
push
repz
dec
sub
daa
inc
outsl
xchg
or
push
and
xor
and
add
pop
mov
mov
out
jecxz
pop
aaa
sbb
test
jmp
jmp
xchg
cmp
dec
lahf
roll
and
lret
xchg
sbb
push
je
fwait
mov
mov
imul
aad
sub
inc
pushf
aam
xchg
cltd
sub
mov
xor
jb
push
test
sbb
test
and
mov
std
lods
cmp
andb
cmp
shlb
pop
mov
add
pop
push
int3
push
aaa
jns
pop
in
xchg
mov
cld
sbb
das
repnz
dec
mov
jecxz
movsb
mov
xchg
stos
mov
sub
sub
das
adc
and
aad
push
orl
stos
movsb
sub
push
test
or
mov
mov
mov
push
popf
rorl
mov
in
ja
stc
cmp
out
iret
out
xchg
sbb
pop
mov
andb
push
cmp
cmc
outsl
or
mov
les
aas
fs
push
sbb
popf
xor
or
int3
rcr
cmp
and
adc
rol
push
jecxz
lock
adc
loop
cmp
popf
and
bound
push
je
je
pop
dec
xchg
jne
or
jp
adcl
mov
cmp
insl
cmpsl
sbb
imul
xor
aaa
lods
test
xlat
fimuls
and
push
fwait
cmp
cmc
sahf
mov
pop
fimuls
adc
mov
pushf
aas
jmp
jle
mov
fisubs
filds
sbb
sub
sub
or
adc
cmp
lret
imul
cld
pop
sub
cmpsl
out
mov
sbb
jge
jo
fwait
push
push
jge
scas
imul
aad
outsl
imul
xor
pop
mov
out
sub
test
mov
mov
insl
add
sbb
fldenv
mov
xchg
mov
jnp
adcb
out
pop
push
adc
inc
repz
pop
pop
js
int3
lahf
jo
mov
push
add
fwait
pop
loope
jge
outsl
xchg
xchg
mov
add
adc
add
cmpsl
out
pop
and
outsb
leave
mov
lods
and
loopne
aaa
sarl
xchg
adc
or
mov
sbb
fdivl
insl
or
or
adcl
jg
cmpsb
in
rolb
ss
popw
push
sub
cli
out
and
adc
movsl
push
push
sbb
je
enter
push
xchg
loopne
jecxz
and
mov
ds
adc
sbb
loop
mov
out
flds
and
in
sbbl
mov
mov
je
ss
leave
lcall
push
xor
xchg
addl
and
or
gs
adc
mov
adc
pop
push
or
sub
adc
and
icebp
push
fwait
lret
int3
jbe
sti
dec
xor
dec
cld
cmp
out
and
fucomi
aaa
xchg
out
lahf
cmp
in
movsl
decl
repnz
ret
ds
lds
xor
jno
popa
inc
fwait
cmp
push
out
mov
aaa
lret
loop
xor
repz
js
jmp
rcrl
test
xrelease
cmp
aam
fs
xchg
lret
jae
sub
sub
movsb
jmp
fcmovnu
push
popf
lock
mov
pop
push
ret
jp
xchg
les
movsb
and
lret
aam
cld
insb
movsl
mov
add
stc
test
lret
push
sub
jbe
movsb
imul
pop
rcrb
negl
mov
clc
mov
cmp
pop
inc
mov
pop
cmp
imul
xorb
add
std
xchg
cmp
sub
sarl
pop
andl
mov
aas
push
cli
cmp
dec
jno
mov
dec
mov
out
add
adc
dec
mov
xchg
outsb
call
jno
daa
fdivl
adcl
push
adc
push
lods
scas
cmp
and
cmp
jmp
insl
fsubl
lds
sbb
int
push
aam
test
adc
ret
inc
sbb
cmp
sbb
inc
xchg
movsb
and
rorb
dec
sub
sbb
out
stos
aaa
pop
inc
rclb
rcrl
jmp
hlt
mov
jns
xor
cltd
in
dec
push
adc
es
lock
les
loopne,pt
adc
or
fimuls
inc
pop
divb
dec
bound
sub
mov
jmp
cld
jmp
mov
pop
stc
and
lret
add
fidivs
xchg
fidivl
mov
lret
fstps
out
outsb
out
int
jbe
insb
xorl
push
sub
or
notb
cmp
pop
and
inc
lret
lret
inc
mov
sub
data16
into
mov
mov
icebp
adc
mov
xor
cld
cmp
adc
lcall
mov
es
sar
icebp
aad
pop
fsts
in
into
jno
or
adc
lods
mov
clc
xor
into
mov
adc
ja
jecxz
mov
imul
das
ror
les
mov
mov
test
sbb
push
jmp
cli
fldenv
jl
pop
movsb
loopne
dec
insl
fldcw
dec
in
lea
cltd
mov
sub
jno
pop
add
sarl
sbb
lahf
lcall
pop
cmp
insb
and
add
rcll
dec
cmpsb
ljmp
aas
fistl
cmp
xor
and
push
sbbl
jb
and
mov
pop
lcall
sbb
dec
fs
test
dec
lret
movntq
cmp
dec
lret
and
ror
paddq
pop
movsb
fisttps
cli
je
loopne
in
push
ret
adc
mov
jp
pop
cmpsb
adc
jmp
inc
sbb
mov
sbb
je
pop
ror
scas
sahf
fldt
mov
and
sub
jmp
or
sub
fsts
add
call
push
call
fidivrs
cwtl
adc
xor
aad
xchg
xchg
jae
jp
add
xor
mov
push
aaa
push
add
add
xor
xor
ret
push
add
aas
xor
push
dec
xor
movsb
outsl
cmpsb
sbb
push
dec
leave
aaa
adc
add
sub
out
rclb
hlt
jmp
cltd
pop
idivb
sbb
sub
pop
pop
xor
nop
enter
dec
pushf
scas
iretw
call
mov
loope
aaa
call
add
cmp
popf
sub
icebp
xchg
xchg
fistl
mov
dec
cli
sub
mov
fsts
mov
loope
dec
std
movsb
pop
test
pop
ds
fsubrs
cmpsb
cmp
stos
mov
imul
dec
xchg
int
push
test
lock
cmp
or
or
ret
xchg
jnp
fidivrl
adc
inc
pop
addr16
mov
jo
bound
pop
adc
sub
sbb
adc
sub
xchg
and
cld
fcmovnu
xor
loopne
sarb
push
sub
jo
aad
mov
ds
arpl
pop
rorb
lahf
in
xchg
cltd
cmp
mov
jp
xchg
inc
jns
mov
and
inc
lds
mov
scas
mov
or
jbe
fdivrs
and
cmpsl
mov
sbb
adc
push
fdivl
cmp
test
sub
dec
mov
ljmp
xchg
sub
mov
jae
pop
jg
imul
sbb
int
adc
sbb
push
xlat
lds
outsl
lret
add
and
mov
xor
ds
sub
xchg
loop
or
nop
imul
push
mov
lret
inc
imul
out
arpl
arpl
fcmovbe
dec
fdivl
ljmp
les
xchg
pusha
mov
push
repnz
pop
mov
adc
lds
js
ja
inc
jnp
adc
cmc
dec
mov
sub
lahf
fidivs
dec
xchg
mov
and
mov
pop
les
push
mov
divb
mov
jb
dec
mov
cwtl
mov
and
xlat
fs
call
xor
xor
and
call
mov
arpl
sbb
sbb
jg
sbb
ljmp
out
xchg
sarl
xchg
cmpsb
sub
fwait
ja
int3
rcl
icebp
mov
inc
sub
pop
aaa
dec
pop
mov
cld
or
ds
xchg
pusha
jmp
fadd
inc
mov
push
and
nop
add
push
repnz
test
cmp
lcall
pop
and
aas
push
rol
and
pushf
xor
sub
mov
lock
js
jbe
mov
out
aad
pop
adc
aam
and
aam
mov
shlb
jmp
push
aad
push
ret
pusha
mull
in
adc
in
ljmp
ret
ds
pop
movsl
enter
jne
mov
in
push
ja
mov
gs
add
jl
mov
ret
mov
mov
jns
shrl
ror
std
setge
add
or
aas
out
xchg
imulb
lea
fwait
insl
xor
and
push
jmp
dec
sahf
jno
mov
xor
test
lcall
mov
dec
mov
cmpsb
push
jns
daa
pop
inc
fcomi
adc
inc
adc
stc
push
pop
adc
cli
jp
pop
fnstenv
movsb
adc
repnz
test
ljmp
ffreep
out
push
fildl
jmp
xchg
xchg
stc
pushfw
aam
movsb
call
aam
notl
lea
shl
xor
add
repnz
dec
jmp
mov
jl
xchg
mov
jl
inc
inc
dec
hlt
rorl
add
mov
lret
sub
in
lock
leave
mov
sub
sub
cli
shlb
jo
mov
sbb
sar
ficomps
mov
inc
xor
pop
xor
lods
fadd
cmp
xchg
fnstsw
fidivl
int3
cltd
ret
js
aam
arpl
mov
rorb
or
sbb
jmp
lock
out
dec
xchg
les
sbb
inc
xchg
dec
sub
cwtl
dec
dec
sub
testb
movsl
aad
mov
or
mov
xor
je
imul
out
pusha
jnp
push
sti
stos
xor
or
mov
int3
add
cltd
leave
sbb
push
ret
cld
rcl
frndint
mov
push
add
xchg
lds
adc
push
jns
pop
lods
into
in
sub
pushf
dec
pop
push
cmp
dec
out
cs
test
aas
xchg
xchg
push
jne
clc
push
dec
je
sub
mov
adc
bound
add
enter
pushf
inc
cld
addr16
mov
lods
clc
adc
sub
out
mov
aam
jns
in
or
jo
ss
popf
fnstcw
adc
xchg
lret
push
ret
sbb
and
xor
mov
jmp
les
lods
rorb
fwait
pop
mov
sub
sbb
les
and
jge
cmp
adc
aad
stos
pop
or
cmp
mov
stos
shl
cld
insl
cld
mov
mov
lock
dec
aam
jbe
push
cmp
movsl
lret
lcall
insl
faddp
xor
ljmp
aad
add
adc
insl
cmp
shlb
cmp
xchg
xor
add
sub
cmp
out
lea
pop
sub
bound
jno
and
lds
popf
jecxz
or
mov
mov
jp
xlat
sti
xchg
xchg
inc
sbb
cmp
insl
sub
in
inc
sub
pushf
test
outsb
or
std
sub
push
aas
fmulp
je
repz
imul
into
jbe
aam
xchg
dec
daa
adc
xor
mov
rcr
sub
or
mov
adc
lods
test
or
cmp
scas
js
push
rol
and
or
jge
jo
pushf
ja
mov
xor
fsubl
test
pop
push
mov
lret
cmp
testl
shrb
inc
lods
mov
cmpl
enter
xchg
test
jo
fidivrl
lahf
sub
divl
xchg
jmp
jmp
movsl
hlt
out
cli
jg
fs
push
iret
in
or
jno
cmpb
lods
cld
cmp
stos
imull
mov
shlb
mov
dec
dec
mov
ja
repnz
jno
dec
popa
and
shlb
loopne
out
bts
sub
mov
adc
aad
sub
inc
dec
xor
sbb
push
rcrb
push
jnp
fs
dec
mov
and
js
jecxz
out
ds
shlb
and
jg
add
test
aas
vmovsd
xor
loope
loope
and
adc
leave
es
aad
mov
hlt
cmc
in
rclb
dec
daa
sbb
xor
pusha
mov
popa
cwtl
rcrb
xchg
shr
fmulp
mov
lods
sub
sub
xor
in
rcr
cli
add
repz
aas
adc
sub
mov
jmp
stc
jmp
jmp
fdivrp
mov
push
je
incl
fsubrp
push
mov
lret
das
insl
xor
sub
je
and
icebp
pop
es
or
cltd
js
mov
adc
dec
mov
cmc
cmpsl
xor
insb
xchg
lret
dec
push
test
mov
jp
scas
nop
add
cmp
test
mov
cmp
add
or
sbb
xchg
movswl
lret
aad
les
les
rcrb
push
fsubp
or
enter
mov
inc
cld
inc
cmp
pop
shrl
rcl
out
push
ffreep
mov
adc
mov
add
cmp
push
jl
fldcw
or
mov
mov
lret
jg
repz
sarl
fbld
pushf
add
ljmp
pop
icebp
add
sbb
lock
aad
enter
ljmp
mov
fimuls
filds
xchg
xchg
addw
push
stos
insl
mov
fs
sub
int
push
or
jl
xor
sbb
stos
pop
pop
mov
shll
xor
sub
and
xchg
xchg
jno
shll
roll
je
jne
mov
int
lods
int3
cmp
jb
mov
les
mov
aas
push
or
fstpl
xor
popf
inc
dec
lahf
test
mov
push
xor
pusha
es
jmp
pop
pop
imul
int
mov
dec
out
shll
cmpsl
mov
movsb
mov
cmp
sbb
dec
inc
and
push
outsb
testl
int
and
stc
mov
cwtl
mov
pushf
sub
lds
or
mov
cmp
push
xor
fiadds
cld
lods
mov
imull
frstor
inc
mov
xchg
outsb
or
or
aaa
sti
addl
or
cmp
outsb
xor
pop
aas
xchg
adc
sarl
mov
loopne
cwtl
mov
and
js
fmul
push
loopne
jae
clc
stos
iret
ja
push
jg
scas
aam
push
arpl
stos
sub
aas
cmp
pop
fistl
shlb
mov
xor
out
xor
lock
pusha
fisubrs
mov
mov
fdivrl
loope
fisttpl
mov
ror
xor
lret
lret
adc
subb
std
pop
adc
ficoms
dec
lret
repnz
sub
add
test
lahf
ljmp
loopne
cs
inc
adc
mov
xchg
push
loope
adc
aam
sub
jo
loopne
dec
fs
rclb
sub
aam
lock
into
rcrb
jno
and
cwtl
aad
inc
sbb
dec
sub
jbe
and
xor
dec
pop
cmc
fprem
lods
imul
jecxz
nop
sub
jle
cli
push
mov
imul
xor
stos
adc
fildll
daa
pop
enter
in
xchg
ds
faddp
pushf
sub
push
shl
add
dec
adc
test
adc
xor
mov
pop
cmc
inc
adc
inc
pop
cld
cmpb
inc
hlt
stos
rcr
sub
inc
rcrl
ljmp
pusha
into
push
cmpsl
test
push
mov
enter
js
xlat
ss
mov
inc
xchg
cltd
rcrb
xchg
jns
fs
jnp
jecxz
add
push
mov
inc
inc
lret
loop
mov
or
push
pop
sub
or
dec
scas
lret
cwtl
rcll
dec
cli
sub
bound
cmp
pop
data16
lods
inc
push
mov
fists
push
sub
and
imul
mov
push
repnz
aad
pushf
pop
fucom
xor
fsubs
daa
fistpl
movsb
dec
repnz
or
leave
mov
in
or
cmp
cwtl
test
aas
jo
inc
mov
outsb
out
sub
pop
xlat
lret
daa
and
sub
mov
and
scas
ds
push
aad
lret
sti
sbb
xor
jp
loopne
outsl
inc
cmp
mov
out
stc
jb
std
pop
cmpsb
jg
enter
pop
or
xchg
xlat
jmp
inc
cmp
push
shll
shl
daa
cmpsl
int3
shlb
mov
cmp
mov
jecxz
push
pop
xlat
xor
cmp
sub
outsl
hlt
cmpsl
sub
hlt
or
mov
out
pop
movsl
iret
pusha
fdivrl
jl
mov
or
inc
fmull
out
std
mov
add
out
push
jmp
push
fisubrs
add
js
mov
stc
lcall
loop
mov
call
ret
cmp
shrl
cltd
xchg
xor
test
cmpsl
out
scas
jns
dec
loopne
repnz
inc
pop
fldl
mov
xor
mov
test
fcomp
cmp
out
outsl
or
push
sbb
and
out
or
ljmp
test
push
push
lock
dec
add
pop
mov
scas
movsl
fistps
cwtl
mov
decl
pop
mov
sahf
pop
xchg
sub
and
cmpsb
push
sbb
aaa
cli
cmp
in
mov
andb
idivb
pop
in
pop
rol
xchg
repz
jg
xor
ret
pop
fidivrl
into
popl
cmpb
test
mov
xlat
or
ret
scas
push
test
mov
push
xchg
add
fisttps
call
jmp
stc
out
xor
push
add
ficompl
xor
jo
sti
dec
dec
test
mov
or
ret
jg
pop
add
add
xor
mov
mov
outsb
cli
movsl
repnz
jbe
hlt
xchg
cltd
xchg
xlat
xchg
push
jns
jl
dec
cli
int3
mov
imul
hlt
fidivl
leave
mov
cmp
and
jg
leave
jb
jge
hlt
and
int3
movsb
or
mov
xchg
mov
cmpsl
xor
pop
xor
insb
dec
xor
or
cmp
xchg
jae
or
clc
gs
popf
scas
lock
repnz
cmp
xchg
fsubrs
push
mov
shl
in
ljmp
push
leave
mov
push
loopne
xchg
add
rorb
es
dec
fwait
mov
jno
lret
mov
mov
incb
lock
das
or
loopne
scas
aas
jecxz
xor
dec
shl
clc
sub
xchg
lea
cmpb
cmp
dec
pop
arpl
or
insl
scas
out
dec
aad
cmpsl
jo
add
sbb
sahf
add
cwtl
xor
frstor
pop
cwtl
xchg
stos
jmp
rcrl
in
jae,pt
jne
test
leave
leave
fsubp
ds
dec
out
int
jno
add
push
loope
sub
push
push
outsl
cmpsb
mov
adc
movsl
sub
xchg
xor
cwtl
aad
sarl
mov
add
aaa
and
scas
mov
adc
sub
scas
aad
mov
pushf
scas
imul
std
pop
sbb
cmp
ficompl
inc
sub
cli
test
scas
push
add
mov
aad
leave
push
cmp
jl
inc
ljmp
fcmovne
pop
les
or
mov
test
mov
les
and
pop
xlat
bound
and
mov
in
adc
push
sub
out
mov
and
xor
sbb
jns
std
lock
test
enter
cmp
and
push
gs
push
mov
sti
and
and
sub
lret
ret
outsb
add
pop
sbb
push
pop
shrb
or
dec
pop
out
inc
cmpsb
leave
pusha
divb
add
daa
jo
dec
loope
rcrl
stos
addr16
jp
inc
sbb
add
stos
imul
enter
cmpsl
es
or
pop
add
cmp
lock
and
dec
loop
movsl
fidivrs
gs
add
popa
ret
mov
test
sbb
and
cmp
xchg
xorl
cmc
jmp
sbb
enter
leave
pop
fisttpll
push
fldt
jle
xchg
xchg
fcoml
out
dec
std
mov
pop
negl
cmp
in
dec
jl
in
cs
pushf
mov
dec
adc
das
mov
insb
pop
outsb
cli
push
xor
sbb
mov
push
adc
fld1
lods
sbb
adc
mov
in
inc
push
stos
xor
or
push
pop
add
xchg
mov
or
mov
aas
jae
into
pop
sub
ja
xchg
mov
stc
add
inc
mov
aas
in
out
stos
rcr
adc
xchg
jle
xor
mov
xchg
outsl
les
push
xchg
icebp
lods
idivl
sub
dec
or
pop
stos
cmp
dec
idivb
and
test
jne
loope
cmp
pushf
lret
clc
bnd
clc
fs
jns
jle
ret
dec
mov
jp
mov
and
mov
bound
jo
in
pop
scas
or
sub
movsl
adc
push
push
push
in
sub
mov
and
ja
xchg
movsl
add
jmp
pop
ret
daa
loop
sub
imul
pop
faddl
pop
jne
mov
into
cmp
jmp
pop
out
fcmovu
int3
mov
dec
add
jnp
inc
aas
test
lret
push
cmp
inc
pop
cmp
dec
repz
adc
std
popl
fdivrl
mov
stos
movsl
or
xchg
vpaddsb
pop
lret
push
cmp
push
fists
idivl
repnz
and
fwait
shr
jp
cmp
xor
lcall
mov
jns
mov
adc
xchg
cli
daa
inc
xchg
ficoms
fimull
adc
scas
orb
test
jp
push
push
cmp
fidivrs
xor
jmp
addr16
in
inc
in
and
mov
ja
cwtl
je
les
pop
and
loopne
ds
mov
gs
lock
mull
enter
dec
jge
out
pop
pop
dec
out
addr16
mov
cmp
adc
sbb
idiv
cmp
ljmp
and
sbb
sbb
movsb
adcb
jmp
sbb
pop
adc
xor
jg
lret
adc
cmp
sysret
insl
or
rclb
cld
enter
mov
mov
movsb
mov
push
inc
mov
jle
insl
xchg
dec
cmp
andl
and
push
dec
pusha
lds
sahf
cmp
push
loopne
jp
mov
or
jns
inc
or
inc
ljmp
pop
andl
cld
loop
mov
aam
add
mov
adc
jg
mov
jmp
sub
pop
mov
mov
out
adc
int
mov
ljmp
daa
mov
add
mov
pop
ds
sbb
sahf
adc
ret
aaa
lods
lret
pop
aas
inc
or
jo
mov
jl
aaa
add
imul
rorl
sarl
inc
adc
inc
aam
adc
sar
push
stos
les
test
cmp
mov
mov
cmp
cmpsb
lret
gs
fsubrs
cmc
roll
hlt
jge
and
in
movsl
ja
lods
out
fs
mov
popf
fdivrs
xor
repz
xchg
outsb
cmp
xorb
sub
daa
lret
add
in
cmc
in
cwtl
lahf
mov
push
add
mov
mov
mov
push
rcrb
mov
in
and
int3
fiadds
in
cwtl
or
or
mov
jno
add
mov
xchg
enter
mov
mov
jmp
mov
and
outsb
mov
out
push
loopne
mov
orl
mov
cmp
dec
idivl
jns
mov
cltd
hlt
dec
xchg
popa
scas
fists
xchg
xchg
sub
test
push
incb
cmp
and
push
xlat
pop
pushf
cvtdq2ps
mov
stos
hlt
cmp
fists
xchg
xchg
cmpsb
int
inc
pop
dec
pop
mov
aad
xchg
divb
bound
bound
xlat
mov
imul
xor
inc
xor
jb
xlat
imul
iret
fldl
inc
add
jge
stc
hlt
push
test
ss
arpl
fs
jb
ret
mov
out
dec
xor
sahf
into
cwtl
jne
outsl
int
js
or
cmp
outsl
mov
jl
xorl
dec
adc
dec
les
cmp
mov
pusha
in
in
sbb
nop
std
push
cmp
std
inc
or
sub
mov
aad
je
fcomip
adc
loop
outsb
daa
in
sbb
in
cmp
pop
scas
xchg
dec
rcr
adc
in
lahf
fwait
add
and
imul
out
jmp
xor
outsb
in
pop
out
and
pminub
rorl
and
and
aas
mov
xor
and
hlt
xor
inc
daa
cwtl
out
xor
sbb
outsl
jae
push
mov
or
pop
sbb
mov
mull
push
stos
aad
pusha
in
loop
sub
leave
pop
int
jne
enter
mov
insl
shl
sub
iret
cmpsb
xchg
daa
push
add
fidivrl
lret
testb
call
test
add
xor
shrb
or
jbe
sahf
adc
ljmp
adc
sbb
test
jmp
sahf
add
inc
out
and
aam
mov
add
mov
mov
popf
jns
fldl
mov
pop
mov
push
sub
lods
in
cwtl
icebp
mov
add
jp
fmuls
mov
pop
sarl
cmpsb
sub
cmp
addr16
or
xchg
inc
xchg
xchg
adc
inc
ljmp
fs
pop
outsl
sub
fcomi
or
mov
lock
js
mov
sbb
lahf
jge
or
cmp
shlb
ret
mov
push
adc
mov
lock
push
push
xchg
xor
rorl
jecxz
popa
pop
fmull
fcmovbe
xchg
adc
add
mov
ficomps
push
adc
xchg
xchg
xchg
xchg
xor
jnp
or
daa
mov
cs
adc
pop
sti
cmpsb
lods
into
mov
add
dec
add
push
out
mov
and
cs
sbb
mov
sub
xchg
test
fsubs
mov
and
adc
jle
pop
lret
mov
cld
repz
test
test
xor
mov
mov
push
cli
fwait
stos
leave
pop
and
sbb
dec
xchg
cmpl
rcrb
sbb
lret
cmp
gs
jl
cmp
out
dec
mov
sarl
dec
lods
lret
inc
aaa
lods
lds
push
mov
aas
jae
shll
push
add
icebp
add
and
jae
rcr
cmp
aad
add
push
or
cmpb
dec
jecxz
rcrb
sbb
dec
add
or
jno
lock
aam
fistps
out
jle
ficoms
add
adc
dec
icebp
js
cmp
movsl
push
pop
call
fadd
push
rolb
ret
add
iret
mov
push
pop
and
cmpsl
adc
cmp
push
divb
in
pop
fistpl
sub
stos
jno
sbb
inc
icebp
add
test
xchg
pop
cmp
das
sbb
push
int
add
inc
pop
lea
fldenv
sbb
shll
jecxz
jbe
and
frstor
jmp
int3
sbb
mov
fadd
jb
push
into
cmp
jg
mov
cmp
nop
mov
adc
adc
iret
pop
or
addr16
xor
pusha
or
pop
xchg
int3
inc
aas
cmp
outsl
xlat
icebp
fsubl
addr16
fnsetpm(287
mov
jns
cmp
faddl
lds
div
adcl
lock
movsb
shl
lret
sbb
shl
lret
lahf
mov
mov
mov
mov
mov
inc
dec
mov
inc
fstpt
jbe
push
sbb
in
dec
push
movsl
stc
call
inc
xchg
cmp
testl
pop
je
cmp
sub
stos
sbb
pop
rorl
pop
push
movd
dec
push
mulb
sub
fists
lock
mov
clc
jo
not
jns
popa
in
aam
pushf
rcr
nop
or
fistpl
or
sub
rcll
and
adcb
lahf
aaa
jge
call
jecxz
imul
xchg
add
mov
repz
aad
pushf
mov
imul
scas
push
lock
roll
mov
pushl
sti
repz
xchg
jne
adc
inc
test
or
pop
pushf
pusha
jae
lock
sub
and
lret
das
mov
sbb
mov
lcall
cmp
push
mov
dec
dec
xor
imul
decb
into
into
in
inc
jns
jo
jmp
imul
lods
aam
lret
jg
add
jmp
push
xchg
cmp
inc
xchg
dec
sar
and
insl
andl
adc
adc
out
jno
fidivl
je
negb
imul
mov
mov
in
icebp
push
imul
iret
mov
stos
adc
aad
push
clc
outsl
lods
punpcklwd
shlb
push
xor
or
in
mov
popf
inc
and
gs
xor
jo
or
jmp
add
test
imul
rorl
mov
mov
and
sbb
mov
adc
fnstcw
mov
xlat
push
clc
and
sub
into
das
mov
mov
and
gs
add
adc
sbb
scas
pop
mov
cmpsb
imul
or
mov
outsl
lock
sahf
daa
cli
clc
imul
std
mov
dec
loopne
lret
fmul
imul
je
cmpsl
dec
inc
add
icebp
sarl
ss
imul
lahf
repz
call
fildl
lods
out
jb
test
ret
popf
inc
push
roll
cmp
call
inc
inc
pop
adc
and
push
idivl
push
mul
ficomps
imul
xlat
mov
ljmp
xchg
insb
incl
popf
in
ret
stos
cmpsl
mov
testb
xlat
push
shll
push
mov
into
imul
bound
nop
xor
out
test
xchg
clc
mov
xchg
jb
js
add
adc
ljmp
xor
and
add
test
orb
dec
mov
adc
xor
sbb
or
fs
cmp
fdivp
mov
mov
inc
std
clc
sbb
jmp
outsb
popf
mov
add
xor
mov
ret
sub
scas
imul
jg
mov
jb
lock
call
lahf
clc
in
adc
shll
out
ret
imul
out
movsl
inc
cli
ror
cmp
push
xor
imul
add
aaa
adc
jnp
sbb
imull
stos
dec
add
imul
or
adc
enter
clc
popf
test
push
imulb
out
negl
shrl
jle
gs
mov
cmp
inc
hlt
pop
in
clc
push
dec
sub
ret
daa
sbb
add
in
mov
and
add
cwtl
xchg
inc
mov
out
jge
jns
dec
dec
pushl
mov
dec
adcb
insb
xchg
movsb
lret
push
into
lds
cltd
add
adc
popa
test
cmc
push
aas
lock
and
xchg
clc
out
push
or
mov
sub
mov
sbb
mov
sub
stos
sbb
add
sbb
jge
pop
cmp
push
f2xm1
mov
fstpl
xor
sub
xchg
int
dec
into
dec
cmc
into
adc
xor
push
cmpsb
fldcw
cmpsb
mov
mov
and
clc
pushf
fistl
fists
int
add
les
jge
cs
call
ret
mov
pop
idiv
stc
popa
loopne
ret
cli
mov
mov
ret
outsb
std
int
cmpxchg
loope
enter
div
fstpl
xchg
pop
sahf
fsin
inc
out
mov
jns
cmp
test
push
fsubl
les
add
gs
call
pushf
aaa
rcl
jae
lea
mov
push
pop
stos
outsb
cmc
mov
xchg
pop
mov
fldenv
pop
scas
scas
cmp
fists
subl
adc
xchg
movsl
enter
xchg
push
mov
xchg
cltd
mov
and
imul
daa
loopne
mov
mov
mov
jecxz
cltd
push
ret
jmp
idiv
or
pop
cmpb
ljmp
les
add
int
xor
xlat
insl
arpl
hlt
pop
shr
loop
loop
cmp
test
sub
js
sbb
mov
loope
mov
or
in
add
mov
lret
xchg
shl
jne
mov
out
add
jg
add
repnz
jp
fwait
leave
jae
push
pop
adc
jae
sub
mov
jmp
shrb
and
ret
sub
inc
loope
adc
aam
mov
orb
dec
scas
nop
push
mov
fcoml
add
fstl
adc
jns
mov
mov
mov
rcl
rcrb
jmp
xor
and
test
cmp
add
sbb
shr
sub
fsubrl
jbe
lahf
test
std
mov
mov
dec
shlb
or
sub
sbb
mov
add
add
pop
mov
jno
repz
les
icebp
scas
scas
mov
ftst
lcall
adc
cmp
pushf
rcrb
jp,pt
or
xchg
shlb
jp
psrlq
mov
push
lock
or
in
std
cmp
cmp
enter
stos
hlt
sbb
sbb
je
das
xorb
or
ja
sub
enter
test
mov
popf
int
sarl
mov
sbb
aam
fisubrs
xchg
nop
or
sbb
dec
xlat
mov
mov
sti
or
rclb
sub
and
insl
pop
lea
xchg
in
decl
lcall
aam
mov
sub
cli
inc
push
fs
bound
sub
clc
mov
pushf
jno
pop
bound
lods
jo
cmpsl
mov
xchg
cltd
stos
cltd
or
jae
loopne
sti
adc
sub
mov
pop
add
cmp
testl
xor
mov
xchg
mov
dec
sti
pop
push
popa
call
sub
mov
lahf
mov
pop
shrl
rcr
mov
xchg
clc
mov
mov
rcll
leave
shlb
test
push
fcmovb
mov
in
sbb
int
rcr
xor
icebp
aam
sbb
out
repnz
adc
sub
jecxz
inc
loope
xchg
dec
mov
and
jae
mov
push
jp
call
mull
daa
mov
icebp
mov
sbb
cwtl
ret
std
push
jb
nop
cmpb
cmp
cmp
popa
fs
cld
mov
push
aam
xorl
hlt
fcomps
cwtl
add
clc
or
jmp
sub
pop
jl
aad
fs
dec
cld
mov
adc
and
shr
jmp
nop
sbb
in
icebp
fistpll
mov
inc
cwtl
mov
inc
enter
pushf
inc
repz
pusha
mov
dec
and
repz
fidivrl
gs
inc
mov
loopne
adc
cmp
pop
mov
insb
push
lds
xchg
sub
xor
jg
int3
cmp
mov
mov
shl
fnsave
mov
fmulp
in
jecxz
fisttpl
in
mov
aam
ret
lret
stc
jo
pop
fdivs
loope
pusha
mov
dec
push
leave
sub
pop
inc
mov
jmp
in
je
orl
fcmovb
int3
mov
mov
out
add
mov
sub
out
in
sub
hlt
adc
mov
fisubrs
and
or
arpl
mov
test
inc
xchg
sbbl
aad
pushf
loope
xor
test
push
xor
cmp
pop
shrl
jo
or
into
mov
and
popf
jl
lods
mov
jo
test
enter
cs
mov
lret
stos
xchg
iret
aad
mov
cmp
rol
mov
pop
gs
aas
mov
les
mov
movsl
mov
cltd
fisttpl
mull
cmpsb
push
xchg
ja
sarl
scas
fistps
xchg
andl
je
mov
mov
mov
mov
lods
ss
jo
mov
fsubrl
mov
fistps
jl
inc
sub
cld
rcrl
les
mov
cmp
movsl
mov
enter
jl
inc
mov
lods
xchg
sub
dec
test
int
mov
add
movsl
xor
popf
dec
enter
call
sbb
mov
pop
bound
jns
inc
or
insb
push
lock
add
daa
cmpsl
jp
shrb
out
adc
pop
xchg
push
pop
jle
enter
les
pop
test
cmp
dec
jecxz
scas
xchg
insl
out
push
int3
or
jo
pop
jmp
jbe
stos
xor
push
inc
int
pop
mov
cmp
dec
sahf
popa
sub
push
xchg
sub
push
aad
inc
dec
pop
pop
lret
mov
adc
es
dec
rcrb
pop
aad
test
ret
pop
xchg
dec
mov
cs
loopne
in
cli
ja
jp
into
dec
cmp
outsb
mov
out
inc
mov
test
rorl
cltd
push
std
aas
lods
adcl
rclb
fimull
sbb
cmp
push
lods
mov
aam
js
bound
aad
les
out
mov
xchg
sbb
sbb
sbb
push
movl
jge
out
xor
sti
in
dec
ja
leave
xchg
je
enter
jb
dec
cltd
js
jg
mov
notb
test
shrl
add
sbb
sub
sub
in
lret
pusha
dec
rorl
inc
add
imul
sbb
jnp
cs
mov
or
or
push
fwait
cltd
cmp
fcoml
rcl
fiadds
sbb
fs
push
jecxz
fdiv
clc
and
out
subl
lods
jle
sbb
addr16
js
and
lret
push
mov
mov
mov
call
in
cmp
pusha
movsb
mov
mov
mov
pop
dec
mov
or
dec
scas
pop
xchg
js
mov
add
and
arpl
faddp
lods
jo
adc
and
daa
jecxz
movsb
xchg
outsb
xchg
pop
sbb
aam
inc
inc
popa
cld
sub
adc
jp
lea
mov
inc
lods
jp
aaa
jecxz
mov
loopne
push
mov
jle
test
xchg
lods
or
insl
jge
ljmp
mov
sub
pushf
test
mov
jnp
dec
adc
or
adc
nop
iret
roll
in
add
sub
add
push
cmpsl
adc
mov
mov
sbb
xchg
insl
xor
add
std
push
inc
addr16
or
movsl
pop
scas
cs
mov
adc
mulb
xor
push
or
repnz
adc
jo
xchg
lock
lcall
sbb
mov
leave
in
xchg
shll
ficompl
jmp
cld
lock
push
mov
insl
cli
mov
bound
sub
insl
mov
or
xor
add
push
mov
push
movsl
sub
jl
imul
in
mov
push
popf
imul
fmul
mov
cwtl
xor
int
mov
jge
int3
out
movsl
bound
xchg
or
imull
add
aaa
bound
mov
dec
movsb
mov
popf
adc
mov
xor
inc
arpl
xor
addr16
lret
jnp
sub
push
fs
ret
push
fmull
cmpsl
dec
fisttpll
xor
cltd
nop
mov
and
push
faddl
rolb
fadds
insb
insb
xchg
ds
and
outsb
cs
lret
push
pop
insl
int
testl
sarb
mov
in
in
push
rcrl
push
sub
aaa
pop
stc
and
cli
jg
xchg
and
mov
leave
pop
xchg
mov
and
jp
pop
cmp
adc
fstpl
sbb
out
popa
mov
push
sub
xor
cmpsb
mov
push
push
sbb
mov
mov
pop
lods
jg
inc
push
sbb
sbb
xchg
out
or
xor
pop
lods
cmp
jge
push
cmpsl
fsubp
in
fistpl
cmp
or
js
xor
lahf
push
sbb
repz
and
popf
cmp
fs
lahf
mov
pop
mov
mov
cmp
jae
cmp
leave
jmp
repz
cmpsl
sub
leave
jp
in
enter
pop
idivb
out
xor
shll
cmp
aad
pop
das
insb
fldenv
jae
imul
and
idivb
mov
sub
xor
rclb
xor
loop
repnz
scas
out
imul
and
or
mov
push
cmp
push
lret
int3
jp
ret
inc
popf
mov
shl
ja
mov
enter
xchg
pusha
pop
adc
fmull
repnz
cwtl
sub
push
popl
and
pop
pushf
dec
in
xor
data16
xor
stc
push
xchg
xchg
pop
dec
dec
pop
cmpsl
loopne
sub
fstps
loope
mov
add
sbb
fildl
xchg
loopne
mov
jae
sub
out
jbe
call
push
imul
arpl
cmp
jb
loope
sbb
push
int3
insb
aam
pusha
movsl
outsb
loop
rorb
push
fstl
adc
leave
out
add
lds
mov
aas
clc
jecxz
pop
in
adc
and
out
xchg
inc
ret
ss
cmp
fucom
sbb
test
bound
stos
push
sub
icebp
cmp
test
lds
int3
adc
sbb
stc
aaa
sub
sahf
js
cmpsl
decl
in
push
ret
rcrb
ljmp
pushf
fwait
clc
ret
push
mov
jle
stos
mov
stc
cmpsb
sub
push
scas
stos
call
data16
fisubrs
sub
jg
mov
test
push
std
push
loope
icebp
mov
pop
mov
cmp
outsl
sbb
mov
movsl
inc
std
and
push
data16
loope
stos
mov
cmc
mov
dec
xor
mov
sbb
cmp
adc
sbb
outsl
mov
xorb
dec
adc
enter
dec
sub
sbb
cli
and
push
cmc
rcll
sub
jae
jge
cs
push
mov
fimuls
mov
xor
cmp
cmp
or
xchg
icebp
divl
popa
gs
jg
outsl
sub
sub
dec
xchg
sbb
jne
loope
insb
push
pop
mov
clc
lods
bound
push
stos
aad
push
bound
pop
pop
jmp
xor
mov
cmp
js
stc
jmp
mov
js
adc
movsbl
jo
inc
jbe
jp
pop
xchg
jmp
and
xchg
movsl
push
fmuls
fidivrs
sub
movsl
cwtl
mov
xlat
push
into
stos
mov
add
mov
arpl
jbe
cmp
push
xor
lock
sti
mov
mov
dec
pop
ja
and
das
mov
outsl
sub
jmp
and
in
data16
cmp
or
pop
fcoms
jnp
icebp
xor
lret
sbb
mov
mov
sub
scas
jecxz
sbb
add
aaa
mov
xchg
jl
xor
out
push
or
int
rcl
std
mov
dec
push
xorb
nop
and
popf
rorb
lcall
dec
fimuls
xor
mov
dec
arpl
lret
rclb
clc
inc
stos
and
sub
popa
mov
rclb
addr16
push
stos
xorb
lret
sbb
cmp
mov
cmp
sub
outsb
icebp
add
push
pushw
sub
iret
pop
arpl
addr16
in
in
add
insb
jmp
stos
jmp
into
adc
outsb
in
cld
cmp
mov
divl
inc
int
shlb
enter
les
ficoml
outsb
or
ret
pop
iret
adc
xchg
pop
sbbb
push
sahf
jecxz
dec
ret
xchg
jg
enter
push
cmpsl
test
inc
jecxz
out
sub
xor
push
dec
mov
sahf
ljmp
mov
sbb
jb
shlb
dec
lock
lods
jecxz
and
xlat
movsl
and
jmp
outsb
test
std
push
ds
lock
sub
push
pop
add
in
mov
js
in
idivb
xchg
push
int
jmp
and
in
jno
mov
rol
pushf
pop
cmp
mov
jl
lods
xchg
add
and
test
sarb
scas
push
ss
mov
or
in
in
cmp
sub
call
shrl
sub
sub
xor
popf
stos
aam
cwtl
xor
and
out
xchg
mov
mov
inc
testb
jp
push
cs
add
inc
cli
imul
inc
push
cmp
xor
and
lea
pop
and
cmp
mov
shrb
sbb
pop
xchg
pop
fisttpl
cmp
shl
enter
int3
iret
lods
or
mov
jp
shlb
dec
enter
jge
repz
mov
dec
ljmp
ljmp
cli
arpl
jns
mov
jl
lods
jg
lret
adc
test
das
mov
jb
and
pop
sub
xor
stos
adc
adc
arpl
iret
pusha
sub
aas
and
addb
dec
add
xchg
push
mov
lods
into
data16
mov
xchg
adc
punpcklwd
aad
int
stos
leave
ret
fildl
inc
sbb
fstps
shlb
iret
or
inc
insl
ret
xchg
mov
sub
jge
or
int3
mov
add
mov
jge
xor
icebp
mov
imulb
adc
cli
imul
cltd
cmpsb
sub
push
imul
mov
cs
fbld
and
in
mov
in
scas
push
xor
cmp
cwtl
or
xchg
dec
add
pop
mov
leave
pop
addr16
sub
cmp
xlat
add
sahf
and
add
add
mov
push
xchg
addb
pushf
bound
or
in
jle
notl
cmpsl
cmp
adc
sub
cmp
dec
mov
scas
mov
fidivl
mov
out
pop
test
testb
fsubrl
inc
outsl
test
pop
lods
mov
mov
push
cmp
dec
mov
mul
pop
mov
and
mov
xor
jge
daa
jno
add
adc
test
dec
les
mov
jle
add
popa
xchg
inc
cmp
mov
inc
jnp
mov
in
mov
insl
xlat
sub
jno
lods
inc
push
nop
mov
cwtl
cmp
repnz
cmpsl
aas
out
loop
mov
add
push
aad
add
xor
add
out
mov
pushf
xchg
add
test
test
in
and
xor
aam
out
xor
stos
mov
mov
xor
mov
pushf
roll
push
stc
stos
in
out
and
ljmp
repnz
jg
mov
daa
out
adc
dec
sbb
cmpsb
and
fisubl
mov
jp
mov
jle
test
ds
adc
mov
xchg
xor
and
mov
pushf
and
push
int
in
into
and
ljmp
fisttpll
jb
mov
push
jle
xor
inc
mov
daa
cmp
call
sub
mov
fisttpll
es
sahf
push
sahf
jl
ds
xor
imul
outsb
shlb
mov
jle
adc
sub
mov
cmp
sbb
out
das
xor
ds
call
push
jmp
mov
sub
movsl
insb
push
xor
jmp
add
ja
sub
xchg
sub
movsb
insb
push
xor
ljmp
sub
lods
or
mov
lea
ss
dec
fbld
jle
pusha
in
inc
stc
shll
push
movsw
push
jns
jle
or
jmp
fsubrs
jecxz
mov
push
movsb
stos
sbb
andb
nop
mov
notb
test
and
data16
push
jb
inc
cli
xor
cmc
lahf
jbe
or
cwtl
divb
pop
and
mov
subl
shlb
jmp
insb
push
or
dec
sbb
push
cmp
cmp
imul
pop
js
leave
test
pop
aas
pop
or
cltd
data16
jo
rcrb
pop
cmp
lcall
out
xlat
jae
xchg
rep
mov
xchg
andb
xchg
subl
xchg
dec
test
mov
dec
adc
pop
adc
mov
pop
jne
inc
aad
ficompl
addl
mov
push
int3
cmpsl
inc
pop
dec
mov
jbe
xor
daa
pop
mov
nop
leave
test
lods
inc
pop
or
cltd
incl
call
pop
pop
xorb
pop
fiaddl
pushf
adc
les
loopne
jge
shrb
and
les
cli
cwtl
pop
jp
push
fwait
mov
sub
je
pop
adc
xchg
dec
fsts
shlb
pop
sahf
sub
dec
pop
lcall
pop
jmp
popf
pushf
xchg
push
lods
inc
pcmpgtd
bound
xor
pop
or
sub
int3
adc
je
js
mov
lock
jmp
cmp
loop
cld
je
sub
out
cli
andl
mov
pop
rep
xchg
lret
adc
dec
add
popa
ret
cmp
ret
fwait
lea
push
or
mov
sub
leave
mov
pop
inc
cs
pop
lahf
adc
mov
jmp
lret
mov
in
mov
sbb
fs
dec
in
or
add
and
ljmp
pop
add
jp
aaa
lret
sbb
sbb
cmp
rclb
fcoml
mov
or
shrb
out
push
or
cmc
mov
pop
mov
lds
addr16
out
sahf
jg
xchg
cli
fadds
std
push
add
inc
mov
sbb
outsl
push
sbb
adc
into
mov
scas
xchg
aad
ret
or
in
jnp
pop
mov
loopne
cmp
pop
sbb
repz
es
repz
xchg
fildl
xor
xchg
addl
fcoms
push
ds
jp
sbb
sbb
cmp
ljmp
lret
inc
adc
sbb
bound
jg
or
pop
mov
sbb
mov
in
jle
test
hlt
into
data16
lret
xorb
push
mov
push
sbb
sub
imul
inc
jnp
fisttps
jne
push
daa
gs
push
out
fistps
pop
push
cli
pop
rorb
push
out
and
aad
lods
jnp
push
out
push
ljmp
mov
rorb
push
dec
test
fs
int3
inc
movsl
jno
xor
mov
hlt
and
xor
xor
jns
adc
or
inc
popf
hlt
enter
mov
fwait
mov
mov
mov
adcl
into
push
ja
cmp
cmp
cs
fdivrl
movsb
mov
rclb
movsl
scas
cwtl
jnp
das
sti
popa
adc
andl
xchg
mov
idivb
pop
mov
loop
bnd
idiv
mov
push
push
insb
cmc
mov
stos
mov
sub
inc
inc
xor
sub
arpl
sbb
dec
push
and
daa
out
loop
in
sbb
lahf
cmp
mov
mov
mov
and
lea
push
je
ds
pop
jbe
sub
jle
test
les
shlb
aas
mov
pop
cmp
adc
inc
jo
mov
pop
aas
mov
mov
cmp
loope
or
jp
clc
or
or
jbe
scas
jmp
jle
loopne
int3
mov
out
adc
loop
iret
test
dec
lea
mov
inc
ds
loop
pop
pop
pop
mov
jg
mov
xchg
push
mov
adc
adc
mov
aad
movsb
pop
icebp
cmp
sub
cmpsb
and
into
jb
scas
aas
dec
jge
push
mov
lods
mov
xchg
out
sbbl
mov
pop
xchg
loopne
repnz
dec
jb
scas
aas
jge,pn
push
push
loop
dec
push
mov
sti
scas
add
lret
cli
mov
test
push
negl
nop
ds
in
jg
sub
out
xor
fsubrs
les
adc
sbb
loope
ret
stc
adc
dec
or
test
shl
fimuls
iret
loopne
sbb
imul
addr16
or
shrl
cmp
fadds
adc
jle
push
dec
or
fwait
push
rorb
dec
loope
test
lret
jg
jae
cld
add
bound
sub
pop
sbb
dec
jae
add
push
daa
inc
pmuludq
frstor
shll
ret
je
div
mov
rorb
cld
pop
pop
inc
mov
xlat
dec
mov
sub
push
aaa
insb
out
in
pop
push
stos
in
sbb
and
jmp
xlat
in
push
mov
rorb
iret
mov
xchg
into
push
je
add
mov
sub
repnz
sbb
add
jmp
in
add
mov
inc
and
int3
jl
add
jmp
mov
fldl
lahf
push
mov
sti
fildl
call
inc
sti
sub
cmp
ss
sub
fldcw
rorl
cmp
jp
pop
je
pop
xlat
decl
and
jb
mov
or
popf
pop
xchg
int3
or
cld
lods
filds
fstpt
daa
aam
mov
push
and
ficoml
ret
std
lock
xchg
push
fmul
adc
cmp
outsb
std
es
lret
icebp
adc
andps
mov
pop
icebp
gs
pop
das
pop
outsl
lods
push
fcoml
push
mov
xor
inc
inc
in
and
stc
pushf
cs
sahf
push
add
push
das
dec
push
in
out
hlt
test
inc
cmc
jbe
inc
sbb
jg
outsl
out
leave
lea
mov
pop
aad
sbb
adc
idiv
xor
pop
push
add
jb
cltd
and
jae
sub
gs
int3
cwtl
pushf
call
mov
xchg
inc
inc
and
mov
movsl
pop
jb
push
sbb
cmp
les
imul
add
cli
clc
and
insl
mov
pop
negb
pop
jmp
clc
sub
cmpsb
mov
clc
fucom
aam
inc
sbb
dec
cmpsb
or
dec
inc
and
jecxz
stc
or
leave
shr
sbb
dec
std
cmp
adc
push
out
sub
or
fstpt
add
sub
cmp
and
push
jl
jge
jmp
jo
inc
rcll
and
xor
jae
cmp
sbb
jne
fidivrl
xor
pop
xchg
loop
inc
cmp
xor
hlt
imul
inc
out
xor
cld
hlt
mov
push
and
hlt
dec
shll
cmpsb
cmpb
adc
adc
fadds
test
cmpsl
roll
es
jbe
bound
cltd
in
and
pop
mov
push
mov
add
adc
lret
or
test
push
add
aam
rorl
ss
pop
pop
xor
in
inc
mov
lock
lret
ja
sti
gs
cld
and
lcall
shll
into
enter
add
loop
addr16
pop
clc
sbb
dec
ret
xchg
in
pop
vmovaps
sub
adc
cmpsl
xchg
insb
icebp
adc
sbb
lcall
cwtl
mov
xor
lods
push
dec
das
and
daa
xchg
cmpsb
xchg
ds
aas
insl
pop
inc
dec
inc
fstpl
in
dec
sbb
mov
mov
rolb
push
dec
inc
or
jnp
push
int3
adc
push
fsts
je
pop
lea
xchg
cli
lea
je
sub
stos
adc
sarl
and
pop
add
push
pop
pushf
fisttps
and
push
push
xchg
clc
std
js
lds
cwtl
or
pusha
mov
pop
sub
adc
dec
rcrb
and
ja
inc
icebp
cmp
xor
xchg
addr16
in
xchg
inc
andl
test
jbe
mov
add
jmp
inc
xchg
dec
icebp
add
sbb
cld
xchg
mov
fbld
sbb
addl
add
sub
jmp
add
adc
popf
pusha
mov
jmp
inc
or
adc
scas
jmp
lea
call
push
nop
stc
push
out
sub
mov
pop
jns
jns
ljmp
mov
add
pop
inc
cmp
sarb
out
lret
cmpl
inc
sbb
lds
or
mov
push
notb
mov
or
es
int3
mov
mov
jne
sti
mov
into
movl
or
sbb
and
pop
std
and
xor
loope
add
cmovge
inc
movsl
pushf
int3
popf
xchg
fs
add
add
inc
sbb
add
sahf
or
pop
test
rolb
gs
das
clc
int3
rclb
mov
or
inc
ffree
pop
cmp
test
or
sbb
adc
jae
fnstsw
ficomps
test
jnp
bound
fldenv
adc
stc
repz
in
inc
fbstp
repz
out
arpl
sbb
fsubrs
pusha
cmp
mov
aas
pop
rcl
xlat
test
adc
cmp
mov
sub
lret
jle
dec
inc
popf
loope
push
roll
icebp
dec
rcll
mov
push
fisubl
outsl
inc
into
adc
xchg
cs
push
rolb
icebp
mov
aas
shl
out
xchg
dec
out
enter
popf
cld
jle
pop
out
cmp
push
dec
cmp
daa
ja
or
call
adc
sub
daa
cmp
xchg
dec
mov
and
inc
lcall
xor
cmp
sub
popa
inc
adc
and
int3
jns
sbb
cmc
lret
jp
sti
add
das
and
inc
lret
dec
rcll
push
jne
or
rcr
push
sbb
dec
fiadds
stc
daa
fisttpll
rcll
fwait
mov
jmp
iret
and
imul
lods
cmp
cld
jae
mov
inc
mov
sub
out
xchg
mov
dec
or
iret
inc
sbb
inc
inc
adc
xchg
pop
mov
hlt
sbb
divl
sub
sub
aaa
sbb
loopne
lods
dec
data16
dec
in
int
sbb
adc
jp
rolb
out
mov
add
daa
jo
add
xchg
pusha
mov
inc
fbld
ja
pop
or
mov
shlb
loope
insb
push
iret
lret
add
je
pop
ret
roll
xchg
mov
loopne
inc
fmuls
cmp
je
or
inc
lcall
sbb
insb
xchg
jne
cmp
dec
mov
and
enter
test
pop
push
xor
sbb
out
in
push
imull
sub
pop
test
dec
test
dec
xlat
aas
inc
xor
in
and
mov
xor
cmp
repnz
orl
sbb
xchg
je
and
push
cmpsl
sbb
push
lret
sub
cli
mov
and
inc
mov
lds
mov
push
orl
hlt
or
cmp
cs
push
inc
mov
test
pushf
enter
dec
out
inc
push
cwtl
inc
nop
push
fcmovu
or
popf
push
sarl
addr16
sahf
pop
mov
adc
les
lods
pop
push
add
ljmp
adc
jno
dec
add
outsb
and
sub
pop
int
mov
addr16
ja
das
mov
sub
ljmp
addr16
mov
movsb
aas
loopne
cli
dec
mov
pushf
pop
ja
iret
mov
test
lock
xor
je
xor
mov
in
add
adc
pop
bound
ljmp
mov
stos
popa
xchg
testb
jns
test
std
out
xor
fnstenv
or
or
inc
call
sub
in
sub
mov
out
mov
in
pusha
jl
lods
sbbb
mov
lods
and
pushf
jbe
sub
pop
and
pop
mov
lods
call
mov
insl
adcb
dec
lcall
popa
incl
out
mov
mov
mov
in
call
mov
push
sarl
mov
in
cmp
test
sbb
inc
sbb
jbe
mov
in
xchg
and
inc
mov
dec
fisttpl
lock
std
push
stos
aaa
or
sbb
push
les
adc
and
jae
mov
cld
fisubs
mov
cld
jmp
cmovo
mov
xchg
imul
push
push
fcomps
mov
adc
enter
pop
ret
lahf
mov
jge
imul
movb
push
dec
xor
jo
mov
jmp
repnz
pushf
and
or
and
jbe
push
xchg
jb
imul
mov
sub
sub
insl
cli
dec
xchg
cwtl
in
insb
fcmovnu
jl
push
data16
imul
inc
jge
test
pop
mov
shrb
jbe
popa
test
mov
pop
and
add
int3
inc
mov
jg
jge
aam
ret
jb
cmp
mov
push
test
fisttpl
jge
iret
mov
cmp
lret
insb
cmp
nopl
mov
xchg
push
inc
mov
add
cmp
cs
mov
imul
std
out
rep
xchg
dec
adc
int
jno
jne
mov
imul
movsb
imul
idivl
mov
dec
out
in
out
lds
cmp
mov
stos
lret
dec
cwtl
sub
sbb
filds
xor
std
mov
inc
sub
stc
daa
ret
jno
stc
lock
adc
fistpll
aad
hlt
roll
out
stc
aas
mov
pop
sbb
dec
and
out
out
repnz
in
mov
cmc
push
out
aas
clc
sahf
pusha
in
pop
es
sub
and
or
ljmp
sbb
insb
pop
mov
sbb
jns
push
clc
cmp
push
adc
pop
lods
gs
sub
dec
xchg
inc
scas
add
pop
mov
repnz
pop
les
fisttpll
mov
cmc
fcomip
jmp
inc
cmp
sar
and
ja
xchg
add
cli
iret
and
fs
js
pop
xchg
pop
fsub
xchg
add
pop
push
inc
std
ret
dec
notb
repnz
xor
cmp
testb
cld
push
mov
mov
hlt
add
daa
and
addb
mov
add
pop
loopne
mov
and
jb
lahf
xor
push
or
push
sub
in
pop
cmp
loope
ss
push
iret
test
or
jnp
xor
rorb
lods
inc
jb
mov
stc
and
jl
inc
idiv
and
jmp
fmull
mov
jo
fmull
insl
test
insb
or
inc
hlt
sub
addl
pusha
push
push
mov
fwait
xchg
ret
or
inc
popa
lcall
je
mov
sahf
jecxz
cmp
lods
mov
adc
cmp
inc
mov
aad
out
mov
repz
sub
insb
les
pop
add
or
inc
mov
movsb
mov
mov
and
cmp
and
arpl
push
imul
pop
pop
cli
mov
lods
sbb
imul
jmp
lret
insb
int3
inc
add
push
test
pop
cmp
mov
sbb
push
adcl
lods
adc
lahf
and
mov
push
add
mov
and
push
and
fnsave
mov
jmp
insl
xchg
movsb
fcoml
and
lods
lahf
and
push
mov
lods
inc
mov
and
inc
cmp
out
cwtl
loop
xor
adc
push
sahf
scas
lret
addr16
fwait
test
test
push
cmp
imul
dec
sbb
add
clc
je
mov
in
pushf
inc
fcompl
dec
xchg
mov
fmull
movsl
cmp
fisubrl
in
test
and
je
mov
cld
jl
pushf
outsl
push
cmp
fimuls
out
jp
mov
or
jmp
aaa
sub
jmp
cmp
pushf
dec
movsl
and
mov
movsl
cmp
cld
mov
cmp
sub
outsl
xchg
xchg
mov
add
js
push
mov
ss
insb
xor
adc
in
mov
and
push
sub
pusha
aaa
into
mov
gs
and
and
adc
or
push
add
adc
jle
test
xor
dec
lcall
xor
cmpsb
mov
loop
call
pop
in
add
test
cmp
mov
adcb
jo
fs
mov
in
mov
div
ret
sti
mov
leave
lahf
gs
imull
popa
int
bnd
mov
ljmp
sbb
jns
hlt
sti
icebp
dec
jge
dec
je
jbe
xor
mov
cli
adc
ja
inc
jb
imul
addr16
in
addb
jle
in
daa
cmp
aam
clc
insb
in
mov
mulb
leave
sarb
dec
xor
or
lret
add
fldpi
mov
inc
gs
sub
or
or
rorb
shr
pop
int3
sarb
fs
inc
pusha
sahf
pop
inc
mov
mov
add
pop
sub
inc
out
ss
in
mov
nop
push
repz
inc
subl
push
sub
mov
fsts
test
and
ror
fidivl
setge
mov
lods
arpl
cmp
lret
dec
js
aad
iret
push
repnz
fmull
sbb
fnstcw
test
xchg
mov
pop
dec
push
dec
inc
pusha
cmp
jno
sbb
lret
sti
xchg
xor
and
push
mov
or
dec
ret
sahf
adc
mov
rclb
cmp
sahf
arpl
cli
cmpsl
xor
loop
es
mov
pop
bound
pop
and
jb
jp
cltd
cmp
dec
sbb
sarb
and
mov
hlt
lods
inc
or
cmpl
cld
jnp
push
fmull
andl
imul
in
stos
mov
pop
xor
ss
test
test
call
popa
sub
mov
aad
aas
mov
and
push
call
dec
xchg
mov
mov
sar
mov
jbe
rorb
pop
xchg
adc
pop
mull
cmp
fs
sub
jb
ss
jmp
sub
sarl
int3
add
xor
out
insl
aam
cmpsb
test
lods
popf
jge
imull
sub
mov
sub
add
arpl
adc
cmp
jp
dec
add
pop
xchg
lcall
mov
pop
incl
adc
mov
mov
outsb
cmp
jnp
lock
ret
xor
and
mov
mov
lret
std
fdivrs
out
cld
cmp
jbe
inc
repnz
or
nop
pop
adc
mov
jb
push
xor
dec
sahf
jp
jae
dec
adc
mov
dec
lcall
je
jle
jne
jle
or
sub
sub
cmp
hlt
testb
sub
push
inc
inc
aam
xlat
dec
lret
ss
mov
cmp
dec
mov
xchg
roll
test
mov
addr16
push
add
stos
popf
sbb
lahf
and
ret
daa
js
leave
jae
shl
add
adc
xchg
push
or
repz
sub
imul
inc
or
iret
repz
or
sti
cmp
xchg
mov
rorl
pop
jns
int3
xor
push
jp
sub
pop
mov
adc
dec
mov
sub
pop
and
jp
adc
sub
mov
cmp
jecxz
mov
rorl
sbb
jp
call
lahf
mov
in
add
sbb
sbb
pop
pop
push
fstpt
mov
xlat
leave
add
ss
xor
cmp
mov
add
mov
or
sti
movsb
repnz
dec
subb
sbb
xor
add
movl
lds
fwait
ljmp
xchg
movsl
sbb
bound
pop
adc
lcall
cmp
fiadds
pop
sbb
popa
sahf
daa
pop
jb
hlt
xchg
insb
in
mov
add
rorb
mov
cld
js
sub
inc
shll
popf
pop
out
movsb
inc
loope
iret
das
jecxz
das
fnstsw
adc
mov
mov
testl
and
sti
fmull
pop
pusha
mov
dec
mov
inc
aaa
test
mov
mov
enter
mov
adc
dec
rsqrtps
lret
sbb
lds
test
cvtps2pd
mov
out
mov
inc
insb
or
hlt
mov
mov
ja
add
xchg
add
arpl
les
imul
jmp
jecxz
fisttps
and
jno
shlb
xchg
push
loopne
int
jp
addr16
adc
je
cs
dec
out
xchg
mov
pop
lret
lds
jge
in
adc
test
mov
add
push
lods
and
outsl
xor
pushf
cmp
cmp
xchg
push
imul
jmp
cmp
pop
es
inc
lods
add
xor
loop
jle
sti
sbb
cmp
mov
jae
fdivr
addr16
sub
hlt
adc
or
in
faddl
je
adc
imul
pusha
sti
pusha
pop
and
insl
xor
and
out
mov
loop
stos
mov
pusha
lahf
inc
adc
rclb
sub
pop
xor
mov
fidivrl
ficoml
sub
aas
jno
fisubrs
pushf
cmp
into
xchg
cmp
sub
lret
data16
and
ljmpw
icebp
push
ret
xor
dec
loope
lods
and
lahf
into
stos
rolb
or
mov
enter
iret
sub
movsb
rorl
xor
es
dec
add
pop
push
mov
inc
cmpsb
add
pop
lock
fstl
pop
push
xor
out
fstpt
xor
pop
imul
fiaddl
push
ret
inc
enter
test
dec
sbbl
pop
push
loope
cld
dec
xor
sbbl
daa
mov
jno
ja
dec
xorb
jge
adc
sti
ljmp
fiadds
out
push
inc
out
push
cwtl
push
lahf
aam
clc
and
sub
rorl
adc
sbb
rcl
jne
inc
sbb
xor
add
loopne
pushf
push
sub
mov
jnp
fwait
mov
dec
or
jno
cltd
xchg
push
shll
cmp
adc
mov
sbb
push
mov
xor
icebp
inc
les
push
jge
dec
in
ja
cmp
outsb
pop
push
out
dec
or
sbb
push
xchg
adc
and
mov
inc
push
cmp
je
inc
pop
sub
pop
ret
dec
push
lods
out
add
lret
std
pop
or
xlat
inc
inc
xor
inc
pop
mov
mov
inc
ret
push
imul
orl
pop
daa
jp
cmp
mov
mov
push
push
fistpl
push
insb
push
ljmp
pop
xchg
inc
bnd
sub
sub
mov
cmovb
jl
hlt
xchg
imul
add
lods
out
add
mov
test
mov
push
inc
pop
jl
jmp
das
inc
push
pop
fstl
xlat
xchg
add
pop
add
sbb
ficoms
add
jmp
loopne
cs
pop
iret
push
cmp
repz
jno
sarl
pop
sbbl
icebp
leave
mov
mov
jbe
sub
cmp
mov
mov
lahf
nop
mov
sub
mov
jns
cli
sarb
cs
fstp
and
ficoml
add
pop
or
mov
cmp
nop
dec
cmovae
call
fwait
repz
jns
int3
push
stos
std
pop
adc
ror
add
jae
mov
sub
je
and
jnp
scas
leave
mov
fistl
in
mov
data16
cltd
ljmp
fistpll
cmp
adc
adc
jecxz
add
nop
fidivrs
mov
fdivp
and
push
ljmp
jl
in
dec
dec
jl
loop
stc
jbe
jns
add
push
xor
or
in
cmp
nop
sti
and
mov
cmp
test
sbb
rolb
inc
push
and
cli
xor
mov
mov
or
sbb
insl
cld
cmp
or
push
lret
stc
or
daa
shlb
fpatan
std
or
or
xlat
inc
icebp
add
cmp
mov
test
jecxz
push
dec
out
aad
adc
js
pop
jo
add
xor
data16
movsb
jg
push
or
mov
cmp
mov
cli
mov
add
add
clc
in
push
loopne
mov
sub
pushf
inc
inc
addr16
push
or
lret
fbstp
out
cmp
xchg
xchg
xchg
icebp
repz
pop
push
in
sbb
addr16
cli
sbb
cmp
outsb
cltd
cmp
push
fmull
fmull
icebp
jo
sbbb
sar
jns
lret
lahf
ss
mov
pop
popa
mov
aam
popa
inc
xlat
fcompl
or
ret
ret
sbb
stos
lea
mov
push
or
cltd
dec
or
inc
lcall
daa
jecxz
sub
out
jns
clc
fwait
mov
xchg
xor
mov
inc
les
sub
int
enter
or
jge
orl
xor
cmp
push
imul
dec
js
jl
push
jae
popa
int3
popa
sub
mov
mov
xchg
or
data16
pop
movd
jecxz
enter
mov
inc
jp
dec
hlt
and
cwtl
jle
jno
push
xchg
inc
je
out
cmp
mov
aad
lahf
cs
pop
pop
aaa
lds
or
mov
ljmp
shl
push
sub
int
loop
cmp
xchg
xchg
jp
sbb
fidivrl
sub
loopne
fwait
or
jns
fnstenv
clc
lds
xchg
mov
outsl
lock
push
in
fldenv
jmp
sbb
jae
adc
xchg
inc
jnp
sub
jo
lcall
in
mov
add
sub
jns
adc
push
cli
cmp
mov
ss
mov
or
out
xor
cmp
dec
mov
jge
dec
repnz
lods
xchg
adc
js
and
test
mov
mov
lock
or
push
dec
adc
cmp
add
sub
fs
push
cmpsl
or
jb
sub
xchg
mov
dec
es
les
or
ds
out
and
mov
add
insb
mov
hlt
ljmp
add
cmp
cmp
cmp
mov
push
fsubrs
or
mov
icebp
test
out
xor
dec
in
push
loop
xchg
mov
push
mov
out
xor
or
lcall
pop
daa
push
cmpsl
inc
mov
std
fs
push
xchg
or
jb
test
in
int
add
out
xor
dec
and
add
sub
pusha
daa
pop
cmpsl
add
jbe
sub
sub
push
xchg
mov
and
mov
icebp
pop
fnsave
repnz
in
xchg
lcall
and
xchg
dec
mov
jp
jge
push
dec
add
mov
out
and
mov
adc
inc
movsb
xor
xchg
ljmp
add
es
mov
dec
in
fs
cmp
mov
data16
push
sub
daa
mov
in
mov
xchg
mov
jl
add
es
mov
dec
popf
fs
addr16
push
jl
add
xor
mulb
cmp
mov
bound
enter
in
daa
scas
cmpsl
xchg
mov
std
mov
ljmp
test
mov
mov
rorb
jne
sbb
push
shrb
lds
cmpsl
insb
mov
std
adc
inc
xchg
cmp
bound
pop
cltd
roll
aas
rclb
test
es
mov
dec
andl
inc
sub
jns
outsb
sub
mov
repnz
mov
ljmp
ljmp
add
sub
cmpsb
sahf
and
mov
add
push
out
sub
and
xchg
inc
and
es
mov
dec
jne
sbb
cmp
mov
push
xchg
inc
out
and
mov
or
out
aaa
cmpsb
xlat
add
subps
nop
aas
lret
ljmp
add
mov
mov
out
xor
jne
sbb
sbb
mov
mov
std
push
ljmp
shll
stos
icebp
cwtl
push
out
xor
dec
xor
add
sub
sub
jg
aam
dec
push
fs
cmp
mov
mulb
mov
icebp
push
out
xor
dec
cmc
push
mov
mov
test
outsb
es
fs
mov
ds
mov
or
out
xor
adcb
push
jl
add
es
repnz
mov
inc
and
mov
sub
pop
shlb
mov
pushf
aas
ficoms
test
lret
mov
dec
cmc
fs
dec
cmp
mov
sbb
or
xchg
call
mov
icebp
pop
fsubp
shll
testb
out
cmc
add
jle
and
xchg
pop
cs
dec
push
fs
cmp
mov
out
pop
mov
icebp
inc
cli
out
xor
dec
mov
lret
xchg
shr
jge
adc
or
and
mulb
cmp
mov
jb
sub
aaa
mov
cwtl
out
and
mov
icebp
pop
ret
xor
dec
std
push
mov
movsl
fsubr
xchg
jb
gs
add
and
cmp
mov
es
mov
cmp
sar
clc
aas
cmpsb
xchg
pushf
ljmp
add
shll
pop
cmp
mov
lcall
jle
jne
push
repnz
mov
add
mov
icebp
fs
out
xor
push
fcoml
sub
adc
inc
into
lods
xor
and
test
dec
daa
cmp
push
movsl
cmp
mov
or
bound
jae
and
dec
adc
inc
xor
or
push
and
pushf
lahf
sub
add
lock
sbb
mov
into
dec
dec
sbb
cwtl
popa
jmp
xchg
lock
in
imull
xchg
pushf
cs
jl
jg
ds
xchg
cli
lods
hlt
push
and
xlat
loop
out
xchg
ds
pop
adcl
cmc
xchg
sar
cmp
cld
lds
xchg
mov
jecxz
mov
xchg
pop
pop
fprem
sub
sahf
mov
jb
jo
fsubp
fnsave
leave
imul
cld
jg
sbb
cmp
inc
add
test
outsb
lcall
or
pop
je
out
sub
imul
cmc
mov
imul
mov
popf
fbstp
add
jnp
mov
pushf
sbb
dec
popa
je
sbb
pushf
add
cmpsl
or
out
xor
in
jnp
loope
movsl
push
jb
data16
lds
cmpsb
add
sub
ret
mov
xor
dec
mov
in
imul
test
cs
cmp
jbe
adc
test
or
or
daa
xchg
xchg
loope
outsb
xchg
add
cmp
dec
jo
and
insl
aam
ret
xchg
sub
xor
jbe
pop
insb
bound
and
cmp
or
mov
fbstp
loop
mov
mov
jecxz
lea
dec
rcrl
jge
loopne
imul
das
out
or
pop
daa
jl
lds
test
testl
add
and
jbe
int3
ljmp
pop
cwtl
idivb
ljmp
test
aaa
clc
or
lcall
in
cmp
or
mov
int
test
jle
cmp
ljmp
mov
inc
sub
or
js
in
fdivrl
mov
adc
arpl
ret
shrb
mov
iret
ss
pop
inc
dec
jae
icebp
jmp
sbb
push
sub
jns
or
push
sub
sub
and
add
pop
jbe
and
mov
mov
push
gs
pusha
pop
push
cmpsl
stc
outsb
icebp
in
xor
pushf
fsubr
ljmp
rcrl
pusha
aaa
add
pusha
movsl
add
aas
stc
ret
mov
pop
mov
cmp
inc
mov
in
stos
adc
loop
test
andl
sub
push
lea
pop
sbb
inc
adc
repz
sub
shrl
cmp
outsl
sbbl
jns
daa
mov
testl
in
jecxz
jne
mov
rorl
sbb
jbe
cmp
and
nopl
sub
xor
mov
xchg
mov
in
xor
les
mov
inc
inc
mov
bound
cs
push
sub
popf
adc
xlat
cmpsl
loopne
mov
and
out
adc
movsl
pop
jbe
pop
stos
bnd
pop
test
inc
or
add
or
adc
cmp
ja
adc
xchg
fisubrs
out
insb
or
hlt
jae
out
xchg
jne
lods
data16
es
mov
movd
int
dec
in
scas
in
mov
xor
out
test
in
xchg
jle
or
punpckhbw
pop
lret
shll
popf
dec
bnd
xor
rcrb
stc
dec
mov
lret
adc
adc
pop
test
ret
cmp
or
jne
inc
or
insb
jbe
lret
cmp
dec
push
es
insb
scas
mov
lss
xchg
mov
push
adc
sbb
test
jp
push
stc
add
mov
mov
ljmp
loop
aam
jb
movsl
push
sti
lea
add
jg
push
mov
mov
cmp
mov
jl
cmp
ret
adc
add
sbb
sub
jne
dec
icebp
fwait
pop
mov
pop
std
out
pusha
xor
inc
roll
jge
or
lds
lods
xchg
push
in
jmp
jg
xchg
xor
in
push
jecxz
sbb
into
enter
sub
mov
cltd
xor
xchg
inc
jecxz
push
xorb
or
daa
in
pop
adc
cmp
jbe
jns
lahf
out
call
adc
xor
mov
ffreep
scas
and
adc
jp
arpl
pop
movsl
sbb
adc
sub
jne
rcrl
mov
daa
out
pop
bswap
repz
sub
add
pop
insl
mov
pop
add
mov
pop
xor
xor
and
ret
stos
jo
inc
push
adc
ja
imul
xchg
and
cli
pop
addr16
fcoms
lcall
movsl
test
pop
and
dec
fbstp
vcvttsd2si
cli
push
mov
sub
cmp
cmp
push
aaa
jbe
in
lahf
pop
push
in
xor
mov
pop
in
daa
push
mov
jl
lea
sub
clc
outsl
out
cld
ficoml
pop
adcl
pop
xchg
cli
mov
jae
cmp
push
dec
loop
mov
aad
jle
jge
jle
jbe
es
jne
bound
xlat
cmp
out
inc
outsl
xlat
testl
cmp
inc
outsl
xlat
stos
jp
inc
push
cmpsl
dec
lahf
inc
lret
pop
adc
xchg
dec
push
ja
push
xor
mov
gs
jns
sub
cmpsl
loopne
lret
sbb
jecxz
mov
inc
in
fs
xchg
mov
and
jbe
jbe
cmp
mulb
xor
mov
adc
faddl
push
or
sub
scas
cs
out
xor
enter
mov
dec
ficoml
push
push
push
idiv
bound
pop
and
and
subb
hlt
add
or
cld
jp
adc
xor
push
stc
imul
jmp
pop
jmp
adc
pop
jecxz
or
pop
and
cmpsb
add
daa
cmpsl
pop
loopne
arpl
enter
movsb
xor
mov
mov
shlb
pop
mov
sti
lcall
out
xchg
cld
insb
stc
cmp
lock
cmp
aaa
andl
sbb
jae
mov
js
push
repz
out
cli
cmp
loope
icebp
jae
mov
loop
xchg
push
push
mov
fs
testb
lcall
mov
insl
sub
xor
jb
pop
fdivrl
imul
loop
xchg
hlt
cmp
push
scas
push
or
mov
xlat
push
jg
or
mov
insb
andl
xchg
push
test
cld
aaa
in
cs
adc
dec
inc
jecxz
test
adc
cmc
clc
xchg
arpl
mov
fisttpll
and
dec
loop
mov
bound
fwait
xchg
inc
mov
push
or
sub
icebp
outsl
lret
leave
xchg
testl
mov
ja
pop
ja
lock
mov
pushf
mov
sbb
stos
adc
pop
pop
scas
stc
aas
mov
ja
adc
loop
jmp
add
pop
mov
jmp
or
push
fsts
loopne
mov
std
mov
sar
adc
cld
enter
sub
repz
cld
xchg
stos
hlt
pushf
push
jo
cmp
dec
adc
sub
ret
dec
out
add
jno
test
ret
and
aas
gs
js
mov
mov
fiadds
ja
sti
stos
xchg
pop
lods
push
jne
dec
push
loop
cmpsb
jbe
pop
lods
inc
mov
sti
sbb
jmp
sub
and
lods
cwtl
pop
rcrl
inc
mov
idivl
xor
rcrb
lock
inc
and
sub
sbb
jecxz
mov
jge
mov
sbb
jmp
push
aaa
es
out
mov
adc
jbe
add
daa
adc
stc
aam
cs
leave
lock
insb
hlt
or
xchg
xor
xor
adc
jp
sarb
movsl
call
add
in
push
mov
sub
gs
mov
scas
out
xor
into
out
inc
lods
rolb
mov
loop
stos
jne
hlt
js
or
in
sub
or
repz
in
ja
movsl
mov
mov
xor
inc
mov
mov
aad
out
stc
ds
cld
outsb
cmp
cmp
stos
inc
push
cmc
sbb
sub
clc
loopne
dec
mov
cmp
xchg
jmp
xor
push
cmpb
jp
dec
push
out
cmp
or
sub
xchg
mov
insb
jno
andb
pop
pushf
push
imul
mov
cmp
sub
inc
loopne
loop
icebp
cltd
mov
xor
in
das
stc
mov
mov
dec
popf
sti
jmp
rclb
mov
aas
adc
cmp
fwait
decb
jne
cmp
pop
dec
loope
cmc
push
adc
cmp
xor
and
and
dec
das
les
insb
repz
cmp
jae
ja
lret
mov
and
xchg
jle
into
and
aaa
in
in
fcomi
pop
and
jb
mov
sub
cmp
aaa
dec
ds
pop
mov
ljmp
clc
in
xor
ja
xor
and
xor
pop
xor
xchg
sti
cli
movsl
jae
mov
arpl
dec
and
scas
cmp
mov
repnz
imul
mov
mov
and
das
mov
ret
mov
mov
loop
or
mov
in
cli
icebp
push
add
loope
inc
sub
xchg
dec
out
out
mov
sarl
jle
push
mov
data16
scas
or
test
aam
das
sarb
mov
ds
xor
test
neg
mov
loop
in
jl
rcll
insl
divb
jle
inc
sbb
mov
cmpb
out
adc
mov
icebp
or
jae
dec
pop
push
fstl
hlt
mov
jmp
jo
cmp
jns
mov
xchg
mov
dec
aas
push
mov
xchg
leave
insb
cmp
add
xchg
xor
lret
in
add
jb
xchg
sub
jecxz
inc
inc
sub
sbb
out
test
mov
inc
int3
pop
test
in
mov
call
sarl
xchg
repnz
add
lret
jbe
loop
daa
loope
cmc
sbb
cmp
jnp
sub
fst
jo
dec
cmc
xor
mov
movsl
or
iret
cmp
xor
push
jecxz
clc
pop
or
xor
jb
int
pop
xchg
outsl
mov
jns
xor
daa
mov
ret
sub
xchg
lahf
jnp
loope
mov
sub
pop
int
loopne
idivl
cli
movsb
std
pop
xor
dec
out
dec
daa
xchg
push
rol
inc
rorl
inc
jg
iret
jg
imul
movsl
pop
test
movsl
cmp
cmp
sbb
inc
movsl
vcvttps2dq
lret
ret
mov
fisttpll
cmp
scas
or
movsl
sbb
cmp
push
jp
icebp
jg
sbb
ret
mov
cwtl
jmp
sbb
scas
push
inc
sbb
jo
lret
sbb
or
jl
in
push
movsl
lea
jmp
out
clc
outsl
jmp
adc
xchg
ret
arpl
pop
add
clc
icebp
aad
add
cmp
adc
cld
sbb
insb
dec
pop
mov
dec
cmc
push
xchg
jns
add
push
movsl
jp
sbb
add
in
cmp
adc
dec
mov
test
sub
pusha
adc
cli
mov
pop
mov
scas
shlw
cmp
push
ss
adc
fisubrs
adc
int3
popa
in
jmp
inc
dec
or
arpl
movl
stos
je
int3
loope
jbe
lahf
stos
jae
popf
adc
ds
mov
mov
shlb
sti
leave
popa
sbb
out
jns
and
in
popl
mov
fistl
out
stos
repnz
cwtl
xchg
iret
pop
daa
in
je
inc
xchg
in
adc
mov
sub
nop
or
jg
loopne
add
pop
push
enter
out
enter
mov
lret
mov
mov
sbb
cmp
add
dec
sbb
ja
mov
lock
mov
and
cltd
outsb
mov
xchg
pop
in
cs
add
nop
fdiv
jmp
lahf
flds
sub
and
les
adc
push
iret
mov
rorl
fldz
popa
jge
shrb
and
les
inc
mov
sbb
mov
mov
mov
ja
data16
push
in
dec
inc
pusha
mov
xchg
fmull
dec
xchg
flds
sahf
rolb
push
xor
xchg
push
xchg
pop
push
push
mov
add
cs
sbb
cmp
stos
mov
xchg
fwait
mov
add
aad
mov
fwait
dec
dec
pop
cmc
lds
dec
mov
add
dec
lret
xchg
push
aaa
adc
push
mov
mov
ret
fcmovne
cmp
shll
in
mov
xor
outsl
jge
in
add
jl
cmp
movsl
mov
cmp
lret
add
stc
sbb
test
aas
pop
sbb
dec
cli
jbe
jb
es
and
xor
outsl
xor
aaa
mov
cmp
adc
pop
nop
push
int3
or
adc
sahf
pop
mov
pop
out
mov
mov
nop
das
jae
jge
xor
cmpsl
jae
pop
repz
push
pop
fisttps
adc
scas
rclb
faddl
add
add
mov
jg
daa
sub
jecxz
sbb
fidivrs
into
aaa
icebp
out
aam
xorl
cld
mov
mov
mov
and
push
mov
cmp
and
xchg
sub
aas
lea
adc
shlb
or
add
adcl
shlb
popa
inc
fsubr
adc
std
pop
mov
push
arpl
arpl
call
add
fisttpl
sub
add
imul
and
inc
gs
sub
repnz
les
fnstcw
sbb
imul
gs
mov
in
scas
xchg
sub
std
push
ficoms
bound
push
out
cmp
add
sub
or
jle
aam
insb
insl
add
es
imulb
cmp
in
xchg
xor
addr16
sbb
adc
into
sub
test
sbb
mov
inc
pop
addr16
push
push
push
pop
pop
icebp
cmp
enter
imul
sbb
sti
insb
sbb
and
xchg
pushf
pop
push
mov
inc
shrl
fs
cmp
mov
shlb
aas
addr16
movsb
daa
adc
inc
aas
push
in
sub
jae
cli
mov
insb
addr16
test
xchg
xchg
mov
dec
test
sub
push
fdivl
ljmp
jle
jge
daa
cmpsl
nop
mov
std
addb
lods
mov
es
xor
dec
pusha
jg
mov
loop
xor
cmpsb
mov
pusha
ljmp
mov
dec
mov
push
jns
fcomps
push
xor
popa
push
adc
add
mov
std
cmpb
xchg
mov
jl,pn
add
fnsave
idivb
jo
and
test
sahf
es
mov
cmp
aas
jle
sub
addr16
push
bound
jno
daa
shlb
test
notb
mov
ret
fs
cs
mov
jg
push
sbbb
mov
movsl
jb
xchg
fdivrl
es
mov
dec
imul
xchg
xchg
out
adc
cmp
out
or
bound
dec
xor
jmp
dec
fidivrl
leave
xchg
into
js
mov
push
das
or
dec
std
and
jl
shll
out
rorb
push
lods
nop
mov
out
inc
aad
ficomps
xchg
pop
lret
adc
or
lods
inc
ret
out
lahf
adc
mov
imulb
push
fimull
mov
or
cmp
inc
mov
push
loop
imul
cmp
sub
jle
push
lods
dec
and
inc
xchg
dec
mov
les
leave
mov
mov
fldt
test
inc
mov
clc
push
or
add
and
cld
frstor
lock
push
imul
inc
ret
jp
insb
pushf
cmp
mov
mov
and
dec
aam
adcl
xchg
cmp
testl
sbb
sub
xorb
xor
es
out
dec
mov
fucom
int3
add
mov
in
hlt
adc
xor
data16
test
mov
cmp
pop
push
jg
dec
dec
mov
or
jmp
pushf
add
and
push
or
dec
and
les
xchg
cmp
xchg
sub
das
call
loop
sbb
push
sbb
push
pop
aam
lahf
push
adc
push
sbb
push
call
pop
dec
lret
nop
je
add
adc
int3
rclb
jne
insb
pop
rcll
sarl
sti
dec
rolb
cmp
lahf
fisttpl
mov
lret
push
mov
bound
xchg
sub
jmp
imul
jb
xchg
sti
mov
mov
xor
inc
js
mov
sbb
bound
sbb
sbb
inc
xchg
cmpsb
mov
pop
jg
xchg
scas
leave
fistl
std
ds
mov
out
addb
sti
mov
jge
iret
dec
mov
roll
sti
insb
pushf
pop
bound
fisubrl
xchg
or
lds
dec
inc
mov
gs
jecxz
jecxz
push
pop
adc
je
adc
pop
dec
push
xchg
inc
or
jb
inc
mov
incb
loopne
lret
sbb
mov
and
jb
hlt
and
adc
xchg
jmp
test
inc
lret
add
arpl
sub
and
sbb
push
jmp
pop
inc
or
repz
testb
pop
sub
and
mov
lahf
popa
ret
mov
cmp
xchg
jecxz
sbbb
dec
rorb
popa
mov
cwtl
and
pop
lds
push
fidivs
add
push
mov
pop
cmp
dec
test
ljmp
jge
pop
adc
fnstcw
cmp
xorl
or
mov
mov
xor
adc
add
xchg
lcall
inc
test
mov
cmpsl
scas
dec
sbb
inc
or
cmp
xchg
rorl
lahf
sti
mov
push
xchg
or
dec
lods
jle
sbbl
andl
std
xor
mov
scas
es
xchg
sbb
xchg
lret
jnp
mov
les
loopne
addb
aam
adc
fwait
js
adc
mov
sbb
add
add
jmp
mov
ds
cmp
or
mov
lret
fs
inc
into
pop
mov
xchg
daa
aam
lods
sbb
es
sti
into
dec
xchg
inc
cld
sbb
pop
pushf
sbb
jbe
xlat
stos
dec
jmp
incb
adc
aad
xchg
fldenv
insb
dec
jns
movsb
jl
mov
sub
popf
jle
cmp
daa
or
es
mov
sarl
out
push
sahf
pop
sbb
dec
clc
or
stos
xchg
sub
insl
fdivrp
in
fsubl
xchg
or
insb
stc
inc
inc
jmp
cmc
dec
cmp
je
dec
sbb
pop
lock
inc
faddl
roll
js
xchg
mov
and
lcall
enter
and
jno
and
mov
and
mov
fs
out
int3
std
sub
adc
xchg
stos
xchg
aaa
in
push
cmc
or
add
mov
jnp
lret
sbb
push
sti
mov
cmp
iret
leave
repz
add
dec
sti
xchg
ret
inc
negl
fdiv
cli
adc
repnz
mov
jno
aaa
in
pop
stos
scas
pop
rorl
pop
lods
push
fwait
inc
xchg
sbb
imul
pop
imul
pop
sbb
sub
stos
cltd
push
dec
inc
inc
sbb
lea
stc
lret
loop
jae
jp
jnp
fmuls
shlb
or
add
cmp
vmovupd
imul
adc
inc
jmp
or
dec
push
call
sbbb
sub
in
popa
mov
out
call
pop
xchg
xor
adcb
jbe
lea
sbb
jns
mov
and
xorb
movsl
inc
cmp
mov
mov
mov
hlt
cwtl
icebp
adc
shr
xchg
cmp
jae
aas
dec
xor
push
fwait
pop
lds
int
int3
push
dec
inc
jno
out
cwtl
adc
dec
push
lods
jb
sbb
and
mov
or
push
or
push
or
fadds
jmp
aas
ficomps
jbe
jne
dec
bound
stos
inc
popa
out
inc
sbb
dec
repz
push
cmp
mov
add
dec
adc
push
xor
mov
and
adc
xchg
fisttpl
lds
pop
inc
lea
inc
sub
inc
add
mov
out
push
cmpsb
std
pop
push
mov
push
fiadds
cmc
mov
or
mov
fistpl
fadd
or
jno
and
inc
cltd
push
cmpsl
adc
inc
mov
xchg
neg
stos
and
inc
xlat
inc
insb
xor
push
sbb
ret
out
push
mov
mul
in
cmp
sbb
leave
sahf
push
in
sub
imul
inc
jnp
es
cmp
loop
cltd
or
dec
cmc
jbe
pop
or
and
pop
inc
mov
in
aaa
repnz
lcall
stc
fsub
ljmp
push
inc
incb
sub
and
cmp
jbe
xor
jns
aad
pop
jns
adc
or
test
jb
adc
cmc
xor
scas
sbbl
inc
adc
jne
in
jne
clc
inc
repz
fsubrl
shll
hlt
add
or
and
pushf
mov
insl
sti
fisttpll
pop
xchg
shll
sbb
xchg
push
fmul
jbe
sub
stc
dec
sahf
mov
loop
add
xor
mov
gs
ja
push
or
inc
or
jg
gs
scas
test
inc
pop
clc
dec
sbb
cltd
test
pop
test
push
out
adc
decb
adc
test
idivl
push
enter
mov
test
stc
ds
jns
lds
mov
xchg
fisttpll
mov
in
pop
adc
pop
lea
jb
std
cli
popf
jge
fimuls
sbb
add
repz
push
mov
sub
flds
outsl
xor
sti
popf
dec
cld
mov
loopne
xchg
or
ficoms
imull
movsb
aas
test
imul
dec
aam
xchg
and
cmp
push
hlt
mov
push
adc
fadd
xchg
mov
lret
out
cmpsb
mov
sarb
ret
rol
xor
sbb
push
mov
mov
in
push
test
push
add
cmc
pop
out
push
addl
sbbb
pop
divb
mov
and
lcall
jnp
xor
add
or
and
cld
and
push
int3
aam
jge
mov
inc
ds
fnsave
sbb
repnz
sbb
sbb
sahf
sbb
repnz
add
inc
addb
sbb
fwait
cld
ss
mov
pop
and
in
and
std
xchg
push
testb
and
inc
push
clc
ja
aad
push
cli
and
sbb
lahf
xchg
out
cmc
or
mulb
sarb
aas
inc
int3
pop
cwtl
jnp
pusha
xchg
dec
dec
out
push
xor
mov
jb
jnp
into
outsb
add
and
in
cltd
push
mov
xor
mov
mov
sbb
gs
popf
pop
and
lcall
cld
pop
jmp
out
in
repnz
add
lcall
xor
cmp
cmpsb
jp
pop
imul
xchg
xorb
inc
push
cwtl
cmp
mov
js
fiaddl
imul
xchg
in
xchg
adc
ret
in
in
xor
in
movb
xlat
pop
repnz
or
or
add
sti
inc
cli
add
and
push
xor
inc
mov
imul
add
xchg
inc
loopne
ljmp
dec
sbb
push
and
in
mov
int
push
lcall
repz
movsb
mov
push
sbb
fisubrl
jg
xor
out
push
inc
and
jb
push
push
xchg
rorl
push
adc
lret
les
frstor
dec
mov
ret
popa
dec
cwtl
mov
aam
mov
pop
xlat
loopne
inc
sbb
jno
pusha
add
bound
sbb
fxch
jne
adc
arpl
hlt
xor
add
jb
inc
int
xchg
daa
out
cli
add
pop
imul
mov
jmp
movsb
jns
aam
cmp
ja
push
mov
js
arpl
addr16
adc
inc
cmp
mov
ficompl
in
negb
out
mov
pop
push
lret
rcrb
lret
pmaddwd
lret
cs
jmp
loope
int
mov
mov
push
pmaxsw
pop
or
push
jecxz
sbbb
adc
push
push
add
lret
push
xor
outsl
mov
fdivs
jnp
jb
xchg
jp
iret
out
add
loop
aam
and
push
out
adc
imul
dec
cmp
xchg
lea
xchg
js
jne
ja
mov
add
dec
push
je
push
xlat
pusha
stc
jno
and
push
add
or
les
int
inc
shrb
ficompl
sbb
ret
add
or
and
pop
mov
pop
rcrl
push
sub
dec
fisttpll
pusha
data16
test
push
dec
sar
mov
add
jns
cmp
cmp
in
int
mov
mov
xor
iret
sbb
push
lods
ljmp
xchg
jb
sub
jp
imulb
add
aad
pop
pop
hlt
push
dec
ja
std
mov
fs
pushl
ds
jnp
xor
out
sub
jnp
sub
dec
pop
mov
bound
mov
lds
push
xlat
movsl
out
or
push
hlt
sub
pop
lahf
inc
pop
adc
xchg
mov
or
xor
push
push
pop
add
movsb
mov
out
filds
test
cmp
jbe
in
cmpsl
sti
inc
enter
adc
sti
imul
mov
insl
cmp
and
push
cld
popf
jns
daa
mov
xchg
lcall
ja
mov
shlb
les
mov
cmp
sbb
outsw
xchg
lcall
hlt
adc
jp
mov
add
inc
jge
cmpsl
inc
je
pusha
sbb
leave
les
int3
jp
mov
int3
sbb
orb
jecxz
xor
jbe
cmc
ss
loope
add
inc
ljmp
jmp
lret
das
rcl
adc
inc
out
jb
pop
jno
in
cmp
inc
fdiv
aad
dec
mov
xchg
pop
fildl
dec
fisubrl
ss
loop
add
mov
in
sbb
loopne
mov
mov
adc
mov
jne
clc
xor
enter
mov
mov
outsb
mov
jg
loop
xchg
add
mov
roll
inc
add
and
std
popf
or
jns
or
outsl
jns,pt
pop
repz
int
jmp
mov
sbb
loope
loop
inc
dec
and
fsubs
sahf
sti
mov
loopne
pop
push
jne
fisubs
sbb
push
xchg
pusha
bound
add
jp
pop
outsl
clc
add
loopne
inc
pop
sub
inc
sub
aas
loope
dec
stos
lahf
addr16
jle
lds
add
enter
and
sti
repnz
mov
sbb
inc
pop
pusha
mov
xor
dec
mov
pop
pop
mov
adc
shrl
add
std
or
jbe
mov
lds
mov
push
adc
sbb
icebp
mov
dec
jb
push
cld
adc
mov
mov
inc
filds
or
es
fstl
lcall
in
mov
jns
js
in
mov
ljmp
xor
ds
or
lahf
jne
addr16
gs
cmp
dec
or
ret
jae
mov
xchg
push
ds
iret
add
fadd
popf
movsb
lret
mov
dec
insl
mov
gs
or
push
cmp
ja
pop
fwait
or
cmpsl
cmp
xorl
fstpl
push
push
mov
push
loop
orb
pop
cmpsb
lret
mov
jg
push
pop
and
mov
cmp
addr16
mov
xchg
bound
js
movsl
dec
imul
adc
jg
in
push
cmp
in
loop
push
lea
testb
cmp
cmpsb
and
lods
cmp
test
push
push
hlt
sbb
aas
add
mov
imul
add
jge
and
ja
fscale
xor
js
adc
jb
mov
leave
icebp
aas
js
xor
inc
pop
xor
push
adc
jb
dec
xorl
cwtl
pop
ds
ret
add
pop
sbb
dec
pushf
loop
test
inc
inc
dec
inc
cmpsb
sti
test
sahf
and
and
or
xchg
mov
push
call
rorb
ret
ds
in
pop
hlt
adc
dec
sbb
cmp
or
fldl
push
gs
sahf
ror
sub
rolb
pop
mov
lock
or
call
lea
adc
push
test
jb
imul
fistpl
scas
addb
cltd
test
enter
xchg
dec
and
shr
imul
sbb
push
fimull
adcb
push
cwtl
inc
lds
mov
mov
push
lods
loop
sub
js
sahf
add
mov
sti
push
cmc
shl
popf
jo
jle
repz
xor
test
data16
add
and
xor
pop
sbb
mov
shrb
aaa
mov
test
cmp
or
sti
mov
push
xlat
xchg
insb
mov
dec
sbb
pop
lahf
mov
test
in
stos
and
or
xor
cld
cmp
cmpsb
ljmp
xor
lods
jle
push
xor
jg
cmp
inc
mov
lcall
repnz
shrl
mov
std
clc
inc
rolb
jnp
addb
jecxz
rol
mov
or
mov
or
jmp
mov
sbb
push
clts
cld
or
push
dec
rorl
fucomi
enter
int3
lret
cltd
inc
jge
mov
sub
and
mov
roll
sbb
push
stos
xor
and
in
or
sub
mov
pop
imul
push
cld
mov
xlat
stc
or
xlat
popf
jae
adc
pop
jp
insb
push
push
std
stc
cmp
mov
or
sbb
repnz
or
aas
jno
xor
push
sti
jle
mov
mov
les
xor
or
rclb
gs
adc
loope
mov
jle
and
jb
jb
xchg
inc
inc
hlt
sub
dec
and
aaa
lret
cmp
push
js
jp
xor
addr16
or
mov
push
and
push
inc
mov
outsl
in
add
and
cmp
jmp
inc
mov
adc
cmp
dec
fidivl
je
jb
push
stos
dec
pop
daa
sbb
ljmp
enter
lcall
jl
or
sub
push
test
push
adc
add
outsl
adc
ret
fmull
lret
mov
mov
xor
dec
adc
in
cs
adcb
jle
or
push
mov
xchg
in
cmpsb
or
pop
aad
cmp
jg
add
in
xchg
push
xchg
and
xor
outsb
or
call
push
aam
xchg
push
xchg
movsl
xchg
xchg
mov
inc
in
jbe
xor
pop
jnp
mulb
cmp
outsb
jmp
add
test
std
push
dec
jns
insb
es
dec
clc
push
insb
dec
mov
and
es
add
sbb
or
sbb
xchg
cmp
push
pop
movsl
gs
pop
imulb
scas
fsubrl
popf
mov
cmc
dec
push
or
popf
pop
out
test
or
adc
mov
or
fucomp
leave
pushf
call
dec
fdivrp
lods
adc
and
jge
ret
int
dec
stos
and
mov
dec
outsl
push
sub
sub
add
push
loop
fiadds
enter
je
mov
jne
lcall
icebp
popa
mul
sbb
inc
out
inc
popf
adc
sahf
mov
dec
aad
cwtl
jl
stos
popf
jb
pop
xchg
xchg
and
js
repz
into
jg
cltd
jmp
and
adc
xor
jp
inc
aas
and
mov
push
jne
push
outsb
outsb
lret
jl
sar
les
int
mov
fcom
mov
fsubl
xor
popf
emms
fcomi
jae
int3
add
lds
jae
iret
fmull
and
ficoml
jo
orb
lret
adc
xlat
xchg
iret
mov
mov
sub
adc
in
dec
fistpll
mov
mov
fidivs
mov
xlat
aas
pop
and
pusha
jo
scas
popf
out
ret
sbb
inc
xor
shlb
imul
jle
xchg
dec
in
sub
popa
movsb
lock
imul
add
cmpsl
dec
push
hlt
sub
push
pop
xchg
xchg
mov
inc
sbb
xchg
sbb
negl
jp
jg
stc
add
loop
sbb
loop
sub
pushf
jl
xchg
lods
dec
cmpsl
cmpsl
pusha
mov
or
dec
xchg
cmp
jp
test
lods
lcall
mov
sbb
or
push
cs
dec
daa
or
insb
aas
sub
test
cmpsb
sub
ja
mov
clc
ljmp
add
adc
mov
add
mov
icebp
jo
out
xor
jmp
cmpsl
ja
pop
sub
popa
push
push
sub
mov
mov
std
pop
aas
sbb
test
xchg
es
mov
dec
mov
aam
out
pop
xor
gs
push
sub
movsb
mov
std
pop
aas
push
xchg
dec
ljmp
add
es
mov
dec
test
fsubrl
mov
add
push
mov
dec
gs
cmp
mov
cli
and
mov
icebp
pop
fsubp
fnsave
into
dec
in
push
xchg
sub
cmp
sub
sub
std
hlt
aas
mov
xchg
nop
ljmp
add
es
fs
push
cmp
mov
push
and
mov
add
out
xor
in
dec
test
insl
xor
jne
sbb
sbb
push
sub
pop
mov
std
inc
aas
xor
test
mov
lods
mov
dec
mov
push
in
fs
aas
or
mov
icebp
mov
dec
fldcw
jmp
sbb
pop
cmpsl
or
jle
sub
dec
mov
out
and
mov
icebp
xchg
add
adc
push
fisubrl
flds
cmpsl
jo
es
pusha
aas
push
xchg
adc
inc
xchg
test
cmpsb
xor
push
jp
gs
cmp
mov
cli
and
mov
icebp
push
ret
xor
dec
icebp
push
xchg
test
and
xchg
lret
in
jns
mov
in
mov
xchg
sub
and
add
lds
idivb
cmp
mov
inc
and
mov
xor
adc
pcmpgtw
loopne
fisubl
mov
ljmp
add
es
loop
cmc
fs
pop
cmp
mov
or
add
sarl
add
out
xor
dec
adc
jmp
pop
daa
add
jo
sub
test
mov
lcall
bound
push
or
sub
sbb
dec
aas
or
test
xchg
test
fs
xchg
cmc
pop
pop
out
xor
insl
push
outsb
sub
mov
aas
out
xchg
push
ljmp
add
mov
mov
cmp
mov
sub
dec
dec
push
fs
cmp
mov
and
mov
icebp
test
out
xor
dec
shrl
jmp
add
sub
cmp
jle
sub
sub
xlat
cmpb
mov
lock
and
mov
icebp
mov
out
xor
dec
xor
add
sub
je
and
adc
inc
xchg
add
jp
test
lods
lcall
mov
or
sbb
push
cmp
cmp
dec
mov
std
je
es
sbb
pop
popf
test
mov
sbb
jbe
xor
jne
push
lcall
add
sub
movsb
mov
std
push
aas
push
xchg
jl
ds
test
andb
mov
dec
mov
aam
sbb
addr16
bound
xchg
test
repnz
mov
icebp
test
out
xor
dec
in
add
sub
pusha
daa
push
cmpsl
adc
jbe
xor
dec
push
lods
adcb
mov
adc
xor
push
sub
inc
daa
xor
pusha
aas
push
xchg
adc
inc
xchg
test
cmpsb
xor
rorb
push
xor
gs
sbb
sbb
mov
std
mov
ljmp
add
lea
mov
sub
data16
xor
addr16
fs
mov
in
mov
fisubs
mov
icebp
mov
out
xor
dec
fldcw
in
add
sub
pusha
daa
push
cmpsl
adc
jbe
xor
push
dec
faddl
cmpsl
hlt
mov
xchg
mov
into
sub
add
lds
cli
and
mov
dec
and
mov
and
cs
shlb
mov
in
rclb
test
es
fs
ss
mov
inc
and
mov
xor
lcall
aas
mov
add
add
cmp
mov
cmp
mov
icebp
sbb
out
xor
jecxz
dec
ja
cltd
sub
insl
xor
jne
push
incl
mov
out
mov
aas
or
test
sahf
es
mov
dec
mov
fadd
mov
add
push
mov
dec
popa
bound
xchg
mov
into
and
mov
icebp
movsb
shl
shll
dec
in
add
sub
sbb
pop
cmpsl
or
jle
sub
inc
dec
lods
xchg
lock
adc
xor
push
ret
je
and
or
dec
xchg
xor
bound
sarb
and
mov
sbb
push
shrb
lds
cmpsl
je
and
fs
push
xchg
adc
inc
xchg
test
cmpsb
xor
push
jbe
gs
dec
jne
push
fidivrs
mov
out
and
mov
icebp
dec
into
out
xor
dec
std
push
subb
cmp
jp
sub
xchg
filds
push
push
bound
jno
daa
fisubl
mov
ljmp
add
es
decb
ljmp
cmp
jbe
sub
push
fadd
sub
daa
mov
in
rclb
test
sub
leave
mov
dec
frstor
cmp
mov
inc
and
mov
sub
dec
lret
shl
and
mov
add
push
sub
inc
mov
std
je
and
test
mov
or
addr16
test
bound
jne
sbb
push
idivb
mov
push
and
mov
icebp
inc
cli
out
xor
dec
mov
call
sub
push
fmul
insb
inc
add
imul
mov
loop
movsb
mov
icebp
push
lret
xor
dec
std
push
xchg
lods
sub
ljmp
dec
dec
popa
bound
xchg
mov
lret
mov
icebp
movsb
cs
xor
dec
aad
idiv
in
loop
cmc
sbb
pop
cmpsl
add
jb
xor
lds
mov
mov
icebp
xchg
push
out
xor
dec
and
add
sub
inc
daa
cmpsl
jo
es
pusha
aas
push
xchg
adc
inc
xchg
test
stos
sub
dec
xchg
add
es
push
dec
add
mov
out
and
mov
icebp
inc
mul
in
out
dec
lea
lcall
sub
push
fmul
fcoml
dec
imul
sub
lods
mov
std
push
aas
push
xchg
jl
ds
test
sahf
es
mov
dec
mov
fmul
out
inc
xor
push
push
push
or
repnz
mov
out
pop
ljmp
add
es
mov
dec
lea
cmp
mov
dec
xchg
fmul
sub
daa
mov
call
ljmp
add
es
fiadds
ds
cmpsl
xor
push
fldl2e
fimull
fucomi
shll
add
cmp
rorb
or
imul
rolb
xchg
or
xor
add
arpl
cmpsl
dec
movsb
mov
xchg
cmpsb
aaa
rorb
imul
sub
lods
cmpsl
or
in
mov
cmp
jle
push
fimull
mov
movsb
dec
jg
das
xor
jp
sub
fldcw
daa
clc
and
pop
and
xchg
cmp
stc
cmpsb
rcll
add
adc
jno
rcrb
out
xor
fsts
cmc
dec
leave
aas
shrl
clc
mov
fdivs
addl
fcomi
jbe
fwait
imul
dec
dec
add
add
sub
data16
jp
sub
xchg
sub
or
push
fidivrl
rcr
xchg
xor
xor
out
sbb
dec
mov
mov
push
inc
call
popa
pop
cmpsb
loopne
xor
and
shlb
pop
rclb
popf
jle
lds
sbb
les
dec
arpl
lcall
xor
fnsave
dec
loop
dec
sbb
add
inc
mov
mov
jo
sub
rcll
cmp
dec
call
cld
pop
mov
lds
pop
pop
add
leave
and
sti
dec
mov
ja
sub
cmp
pop
xchg
test
mov
push
dec
out
adc
sub
jmp
in
xor
xchg
mov
test
sbb
or
xchg
cmp
out
sbb
mov
jne
stos
cmp
push
and
push
push
lret
rcrl
movsb
inc
subl
fnstenv
aad
int3
lods
push
jge
xchg
sbb
xlat
push
lahf
xor
mov
pop
faddl
pop
mov
mov
ds
pop
ss
lret
inc
icebp
mov
xchg
sbb
sub
jne
cld
sbb
nop
push
jl
mov
or
pop
cwtl
jle
mov
jle
push
ret
xor
pop
ret
pushfw
andl
jp
sarb
or
lds
add
jg
dec
mov
rorl
push
dec
jle
idivl
and
push
test
sbb
dec
shr
aam
jle
lock
mov
or
int3
sub
xchg
and
movsb
jp
rcl
cmpsb
mov
shlb
mov
xchg
add
push
insb
dec
dec
pop
and
mov
xor
mov
jle
or
pop
movsb
inc
hlt
fs
out
mov
jnp
test
stos
outsb
test
inc
add
mov
out
fildl
ja
jmp
dec
mov
push
rorl
xchg
popa
push
fsubrl
pushf
pop
mov
pop
jmp
out
cmp
cmpsb
sub
sub
loope
mov
stos
or
mov
jmp
clc
push
cmp
mov
out
cld
jo
pop
dec
mov
aam
push
in
bound
imul
fists
dec
cli
push
repz
or
mov
add
mov
mov
adc
enter
int3
fdiv
jbe
call
sarl
test
sub
out
xchg
add
jle
std
int3
in
mov
into
fists
mov
jno
mov
push
xlat
push
push
jnp
movd
ja
jecxz
jne
js
cmp
test
adc
or
jbe
ljmp
or
xor
or
and
or
jle
push
jnp
sub
add
fcomps
xchg
dec
or
jg
cmp
inc
inc
sbb
loopne
movsb
dec
xchg
js
xorb
movsl
je
pop
fdivp
mulb
call
sub
xchg
imul
or
ss
sub
idivb
add
faddl
daa
insb
divb
imul
jg
mov
sti
sbb
xor
pop
xor
add
out
ja
adc
pop
xchg
sahf
rolb
adc
or
or
orl
mov
dec
inc
jmp
pop
mov
push
dec
leave
mov
mull
xor
jns
incb
xchg
mov
pop
inc
aaa
lcall
pop
xchg
xchg
add
or
xor
inc
fisttpl
xchg
jle
add
push
in
repz
push
add
imul
ret
xchg
mov
jg
or
sbb
mov
or
mov
loop
lods
fcomps
adc
xor
xor
addr16
loopne
je
gs
ljmp
sbb
pop
lds
pop
push
orb
rorl
mov
sub
sub
mov
sub
out
test
inc
mov
leave
pop
imul
cmp
cmova
test
jl
inc
cli
mov
rcll
cld
pop
rep
ffree
orl
mov
cmp
movsb
fimull
data16
shll
mov
jle
test
or
mov
iret
jle
sub
inc
fldcw
sub
pop
cwtl
gs
mov
push
pop
mov
inc
pop
dec
push
pop
push
add
fmull
adc
mov
rol
ret
push
and
fadd
wbinvd
inc
fistps
lcall
add
adc
sti
out
shll
std
mov
pop
push
sub
pop
popf
mov
jns
cmp
lret
jbe
dec
out
xlat
iret
mov
mov
xchg
jne
divl
cmp
inc
in
mov
fisttps
cmp
add
cmp
jl
xor
in
sub
adc
lods
int3
jbe
push
jnp
jmp
dec
mov
and
xor
movsl
mov
mov
cld
lods
cmpsb
inc
int3
sar
data16
or
or
cmpsb
enter
add
cld
fsubrl
daa
jl
cwtl
addr16
shrl
xchg
xor
lret
leave
lds
inc
dec
or
sti
cmp
jge
ss
pop
lret
hlt
lods
xchg
sbb
lea
shl
mov
movsb
fidivrl
out
imul
les
pushf
lods
and
out
aad
out
bound
mov
or
inc
movsl
fidivrl
stc
add
lods
push
sub
movsl
repz
jb
test
jns
rorl
fidivrs
dec
fsubrl
enter
jmp
push
jecxz
xchg
push
mov
inc
pop
mov
ss
test
sbb
push
mov
jnp
dec
hlt
mov
xor
jmp
nop
or
inc
xchg
push
negb
mov
out
int
pop
dec
or
inc
cmpsl
pop
loopne
and
xchg
leave
mov
ja
pushf
fsubl
sbb
mov
inc
pop
jmp
movsl
jns
in
inc
xlat
jle
push
adc
mov
mov
xlat
sub
add
push
pop
clc
incb
jg
inc
orl
cmp
push
je
jmp
mov
xchg
sti
push
mov
daa
jae
and
mull
sar
mov
push
mov
inc
mov
fsubrl
xchg
pop
xchg
hlt
cmpsl
jmp
xor
push
movsl
push
cmp
ret
push
iret
aam
or
ret
lret
pushf
out
sub
jg
mov
mov
xchg
nop
inc
cmpsb
test
jbe
inc
mov
cmc
fdivl
ja
fstps
hlt
movsb
xchg
add
jecxz
sub
lret
dec
mov
add
ror
call
fsubl
ret
das
cmp
fstl
sub
imul
jp
mov
insb
lea
arpl
inc
mov
mov
popfw
sti
jp
jp
mov
or
push
adcl
clc
enter
mov
xor
cmpsb
dec
fildll
shll
adc
mov
jns
stc
les
xor
push
mov
sub
mov
mov
mov
adc
sti
sbb
testb
mov
mov
xchg
insb
push
int3
mov
insl
mov
pushw
dec
xchg
xlat
in
shlb
mov
inc
fsts
sti
mov
fcompl
adc
pop
or
jg
and
inc
mov
dec
popf
jl
mov
out
js
mov
xchg
sbb
adc
sub
xor
cmpsl
rcrl
and
add
inc
xor
mov
mov
cmovg
add
mov
jle
scas
sub
popf
jge
es
mov
jge
shrl
fdivl
out
mov
cs
inc
and
inc
cmp
hlt
mov
jbe
scas
data16
jbe
sub
cmpsl
out
xor
mov
sub
push
ja
mov
mov
fstpl
jmp
jmp
ret
sets
adc
out
sbb
std
data16
push
xlat
out
arpl
mov
data16
or
shrb
and
ficoml
pusha
or
mov
dec
add
push
addr16
sarl
add
mov
or
or
pop
jle
jp
mov
jp
popa
je
outsl
mov
jne
mov
fimull
mov
or
lods
xchg
pop
fimull
loopne
shll
adc
push
mov
dec
bound
inc
es
stos
dec
cmp
jmp
mov
sbb
adc
dec
or
mov
dec
cmpsb
and
push
aaa
add
sub
cvtdq2ps
outsl
jb
jbe
push
and
mov
or
push
jo
aam
cmp
mov
sub
push
fisttps
sub
data16
jne
jle
cmc
movsl
jp
xor
imul
repnz
pushf
or
and
jle
cmp
fdivl
std
nop
in
out
cmpsl
mov
jg
jle
cld
fcmove
xchg
lret
jp
xchg
sub
sarw
lcall
pop
xor
xor
sbb
jl
lock
imul
outsl
cmp
cld
fdivs
cmp
xor
sub
pop
ficoms
jne
mov
xor
je
mov
fnstcw
inc
or
loope
test
add
add
lcall
pushf
adcb
mov
stc
add
jns
inc
mov
push
mov
dec
pusha
or
add
inc
xlat
add
ret
out
cmpsb
and
add
fbstp
and
and
rorb
bound
leave
je
and
ss
std
jno
inc
sbb
push
jg
mov
ret
dec
inc
push
mov
fidivs
jb
les
jbe
cwtl
ror
mov
xchg
out
pusha
push
lret
lahf
je
das
sbb
std
push
shlb
dec
ja
call
push
test
mov
sub
mov
repz
jg
fstl
loope
add
hlt
push
cli
bound
push
cmp
jg
sahf
aad
popf
sub
jb
sub
or
xchg
fdivr
fidivrl
pop
push
adc
add
dec
mov
xchg
dec
in
outsb
push
test
xchg
movsb
inc
lds
int
test
sub
cmp
int
ds
add
cs
xchg
shll
push
je
nop
pop
mov
add
pop
or
pop
mov
imul
cli
jo
mov
in
cmpsb
or
sub
movsb
call
or
enter
mov
in
pop
stc
push
enterw
adc
xor
xor
cmp
xor
push
xchg
sarl
cmpsl
jmp
lcall
or
sub
sbb
sub
inc
cmpsb
jbe
enter
pop
pop
pusha
jo
rclb
inc
frstor
push
cmp
mov
les
dec
add
dec
aas
nop
mov
and
mov
lahf
dec
sahf
cmpsl
mov
dec
sbb
and
inc
lcall
push
fidivl
nop
inc
icebp
mov
mov
inc
sarl
sub
xchg
xchg
sti
mov
repz
cmpsb
dec
addl
stos
cmp
xor
adc
rclb
push
pop
and
or
call
aas
and
or
xor
cmpsb
inc
mov
lret
pushf
mov
mov
sbb
mov
es
dec
loop
bound
push
test
leave
or
enter
mov
shrl
push
jb
push
or
out
cmpsl
lods
pop
add
mov
push
cld
add
je
mov
mov
dec
movsb
push
in
cs
jae
aas
mov
inc
mov
push
mov
jae
call
shrb
clc
into
inc
push
add
insb
aad
jg
mov
jle
dec
incb
mov
shl
xchg
pop
std
cmp
test
int
dec
jae
push
inc
pop
mov
push
mov
add
xchg
les
ficompl
cmp
or
pop
ds
jg
or
bswap
cli
bound
fnstsw
mov
fdivrl
inc
lcall
mov
roll
jno
dec
rcrb
data16
cmpsb
cld
push
dec
ret
push
mov
add
add
leave
std
xor
sub
jle
loop
xor
popa
and
pop
cmp
movsl
pushf
arpl
add
mov
inc
stos
rclb
dec
ficompl
hlt
lcall
cs
popf
mov
push
dec
adc
xor
lods
jnp
dec
xor
jmp
pop
mov
rorl
or
ljmp
pushf
pop
mov
adc
pop
dec
mov
test
cmpsb
or
push
movsl
std
lods
lret
cs
bound
inc
ja
loopne
clc
data16
imul
leave
xor
dec
cwtl
fs
xor
add
adc
fildll
jmp
dec
movsl
lcall
stc
sub
sub
pop
fadd
lds
adc
les
js
sti
jp
movb
fcmove
xchg
adc
ja
dec
stc
inc
cmp
xor
push
cmp
ja
out
ret
hlt
mov
addr16
iret
jle
dec
add
aas
idiv
daa
addr16
loop
sub
ljmp
push
std
mov
push
pop
jle
dec
aam
lods
insb
adc
sub
iret
movsl
loopne
add
mov
sub
nop
loopne
cmpsb
adc
mov
cltd
sar
mov
lods
push
add
int
imul
fmuls
jo,pn
and
mov
in
sbb
xor
and
mov
dec
fucom
sub
sbb
lret
lds
add
insl
mov
mov
movsl
add
mov
mov
cmp
pop
ja
xchg
sbb
cltd
or
inc
sub
jmp
xchg
adc
push
or
lods
adc
jle
ret
xchg
or
dec
mov
jmp
lret
inc
mov
shlb
lea
push
inc
lret
lahf
cmp
aad
jbe
data16
mov
orb
insl
out
mov
aas
fisttpl
or
stc
and
push
pop
pop
cmp
daa
je
pusha
hlt
mov
xor
rcr
imul
movb
xor
sbb
sarb
inc
or
hlt
pushf
loop
mov
cmc
dec
pop
mov
jle
inc
push
pop
lods
in
orb
sti
xchg
sarb
cmpl
test
stos
insb
or
mov
jbe
push
mov
test
push
cld
push
ljmp
or
insb
iret
adc
cld
inc
mov
shlb
push
data16
loopne
dec
inc
push
out
fdivrs
lds
ficoms
xchg
das
in
xor
sbb
mov
popl
mov
or
cmp
in
pop
jecxz
ljmp
movsl
in
mov
cmp
sbb
push
inc
push
cltd
or
jg
daa
shrw
mov
mov
or
mov
adc
mov
shll
pop
sbb
jmp
outsl
push
aam
mov
jg
bound
adc
aad
mov
add
stos
cmpsb
mov
adc
add
sbb
xlat
repnz
jmp
ret
dec
faddl
inc
and
jg
pop
lds
sub
xchg
cmpsl
ret
or
lods
inc
xchg
dec
sbb
lds
dec
movsl
mov
sbb
shl
jo
and
mov
jne
fldt
popf
add
mov
sub
pand
sbb
stos
inc
in
sub
cmp
lods
arpl
sub
mov
test
cmp
mov
fs
push
int3
mov
sub
dec
pop
mov
leave
scas
out
and
ljmp
pusha
pop
fwait
loopne
cmpsb
inc
shlb
or
pushf
in
addl
xor
xchg
mov
pop
xor
add
jmp
sub
lea
xlat
mov
inc
pusha
adc
ficoml
jnp
lds
call
add
sub
jno
and
int
js,pn
ja
je
mov
or
and
dec
or
sti
divl
fwait
mov
fimuls
pop
push
mov
stc
xor
fdivs
cmpb
popa
sub
add
iret
pop
insb
or
xor
pop
lahf
sub
or
mov
push
adc
add
divl
test
repz
sti
das
push
test
sbb
fdivrl
cmp
mov
loope
in
mov
add
lea
jle
popw
xor
dec
jl
mov
dec
sub
sub
add
xor
cmp
pop
in
insb
sbb
jbe
xor
ret
pop
jl
roll
mov
push
cld
jg
imul
jle
cmp
dec
mov
les
push
or
inc
push
jp
cmp
shr
fmul
mov
xchg
shrb
int
outsl
inc
daa
data16
sbb
int
pop
mov
lock
mov
movsb
pop
sbb
pop
stos
xchg
mov
jmp
ret
and
cs
inc
insb
stc
mov
jae
cmpsb
cmp
push
add
ljmp
xor
sub
mov
sbb
mov
dec
es
push
lods
dec
lods
sbb
aam
inc
pop
leave
push
imul
lret
sbb
ret
stos
repz
leave
ja
xor
mov
js
jle
test
xchg
or
mov
pop
lret
lds
fldenv
inc
dec
ret
cmp
inc
fimull
mov
xor
aad
bound
push
push
jbe
dec
addr16
sbb
call
faddp
or
mov
cmp
movsw
dec
lret
sbb
loope
push
iret
in
ret
sub
adc
lret
ja
add
popaw
cli
mov
push
mov
jb
jp
fnstcw
in
mov
pop
sub
and
jmp
or
pushf
add
push
into
and
add
std
in
sub
or
ffreep
ffree
mov
or
sbb
fstps
inc
ret
mov
testl
ss
xor
stos
pushf
sarb
loopne
jg
das
mov
movsb
ret
in
pusha
out
sbb
mov
jle
popa
aam
rorl
push
jp
out
dec
sub
hlt
gs
lcall
cmp
inc
or
shll
mov
xchg
leave
jl
mov
dec
sbb
mov
stos
loopne
cmpsb
and
loope
data16
fucom
dec
shll
int3
mov
sbb
orl
rcll
loop
push
mov
push
jne
cmpsb
add
pop
ret
xchg
cmc
call
adc
jle
cmp
jg
mov
in
dec
push
xor
dec
mov
ja
cmp
cmp
test
fcomps
lods
inc
jp
movsl
shll
stos
dec
rolb
dec
sub
xlat
mov
jmp
mov
inc
xor
cs
icebp
or
cmp
xchg
ja
cmc
fdivl
lods
mulb
mov
add
pop
jne
decb
lock
movsb
adc
jnp
dec
mov
dec
mov
adc
imul
movsl
inc
fstpl
test
xor
dec
jl
dec
test
lret
js
movsb
cli
xor
inc
loop
adc
pop
aam
push
dec
out
pop
insl
jnp
or
sarb
jmp
adc
filds
fwait
xchg
aas
add
repz
pop
sbb
inc
adc
fwait
mov
std
jg
sbb
hlt
inc
fsubs
push
xchg
inc
cwtl
or
mov
xchg
fmuls
orb
sti
out
enter
out
in
add
or
aam
cmp
stc
cmp
testl
xchg
cmp
dec
lock
push
xchg
aam
inc
int
fistpll
or
aaa
xchg
jbe
ds
or
cmp
add
std
inc
jecxz
nop
inc
imul
js
dec
sti
test
jmp
loop
sub
inc
rcrb
je
in
fildl
lock
cmp
and
xlat
scas
fs
mov
cs
loope
adc
mov
mov
or
fnsave
or
add
or
cmp
add
cmp
in
cli
int
mov
fucomp
fisttpll
cli
jbe
inc
rclb
rcr
lock
xchg
jmp
ja
jb
push
lcall
cli
jne
jg
ljmp
incb
pop
fsts
out
adc
out
push
mov
jbe
xchg
popl
nop
lods
pop
jne
mov
pushf
or
mov
addr16
out
mov
gs
es
out
dec
imul
aaa
test
ja
insb
xchg
sub
out
int3
sub
repz
push
lods
xchg
xchg
push
jns
mov
insl
pusha
xor
fidivl
mov
ds
loop
sarl
or
jns
mov
lods
xchg
jecxz
shlb
cmpsb
jle
movsl
mov
lods
in
jnp
mov
and
fs
add
jmp
std
xchg
arpl
outsb
lods
rorl
into
sbb
rolb
inc
xor
and
iret
inc
and
imul
push
jb
in
jns
lock
in
sub
pop
xor
pusha
lds
pushf
sbb
shl
xor
rcr
inc
clc
jns
cld
pop
sbb
pop
dec
sbb
push
movsb
ds
cmp
dec
jmp
sbbb
mov
aas
fmuls
adcl
mov
push
jno
std
mov
xchg
push
add
dec
testb
std
movsl
add
fsts
loope
dec
pop
sbb
inc
leave
icebp
mov
push
fildl
fldenv
inc
out
imul
hlt
or
imul
xchg
push
hlt
lahf
jne
stos
jb
inc
mov
fiadds
shlb
jecxz
xchg
add
lock
outsl
or
cld
xchg
repz
push
mov
jmp
loop
sti
xor
out
add
inc
hlt
mov
repnz
mov
or
leave
rcrl
sbb
pushl
ret
inc
dec
mov
sbb
outsl
ss
dec
mov
push
stc
rorb
pushf
loopne
daa
cmp
and
loopne
or
xor
shl
test
lret
xor
lret
test
add
rorb
fadds
adc
cltd
fildl
or
pop
cwtl
imul
mov
ja
fistps
stc
cwtl
jge
adc
sub
in
movsl
sub
out
fwait
sub
insb
fcomi
iret
shl
std
or
xor
lret
fldl2t
test
in
jecxz
int
mov
popf
xor
mov
outsb
sbb
sub
push
fimuls
dec
mov
dec
out
and
ss
jnp
push
inc
xchg
fldt
pop
sub
jecxz
xchg
pop
leave
lods
icebp
fs
cmp
js
pop
fnstcw
rclb
rcrl
movsl
pop
out
add
lock
push
int
and
adc
out
jge
rcrb
xchg
push
icebp
push
sbb
int3
in
mov
xchg
add
outsl
fnstcw
pop
test
mov
xchg
rclb
cmpsb
outsl
bound
jbe
test
pop
pushf
add
sub
test
xchg
mov
shr
xchg
je
xchg
xor
xchg
push
call
add
fsubrs
hlt
add
jb
orb
cmp
cmc
ret
divl
stos
jb
cli
lock
or
outsl
data16
jo
dec
and
inc
sub
stos
cld
xchg
lods
popf
xchg
cmp
push
sub
add
in
mov
lods
jns
sbb
dec
mov
mov
jp
sbb
sbb
mov
pop
inc
mov
sti
cmp
enter
in
mov
scas
stc
cmp
mov
lods
fs
jne
xor
stos
push
jbe
icebp
xor
xchg
xor
mov
add
sub
mov
jo
mov
mov
mov
dec
xor
cmp
mov
add
mov
icebp
cmp
out
xor
dec
mov
add
sub
pusha
test
rcl
ljmp
mov
out
add
and
jp
mov
stos
pushf
fimull
scas
push
sub
sti
das
mov
xlat
repnz
stos
movsb
mov
lret
cmp
imul
test
sbb
sbb
mov
das
idiv
movsl
xor
jg
xor
cli
xorb
das
push
arpl
ds
cld
and
ja
inc
in
pop
cmp
lods
call
fisubrs
test
es
inc
xor
ljmp
sub
aas
jl
add
pop
adc
cmp
into
pushf
out
mov
in
imul
imul
xchg
dec
mov
cmp
lods
cmpsb
loopne
scas
data16
mov
dec
and
cmp
cmpsl
cmp
mov
scas
mov
jl
sbb
pop
or
jg
add
adc
sbb
clc
mov
cltd
cmp
ds
push
dec
inc
inc
sbb
inc
ret
push
in
dec
movsl
call
xlat
out
sbb
adc
rorb
dec
mov
jecxz
pusha
mov
pop
stc
movsl
push
mov
add
dec
inc
and
jecxz
shrl
sbbb
out
addr16
and
push
lods
cltd
pop
dec
cmpsl
pop
cmp
xchg
mov
pop
fs
jo
cmp
frstor
icebp
pusha
push
gs
sub
outsl
dec
fldcw
mov
in
bound
cmp
ret
cmpsl
sub
hlt
daa
popf
cmpsl
xor
mov
fsubrs
sub
ret
lea
sarb
and
int3
adc
stos
imul
ds
movsl
sub
xor
js
add
shl
cmp
loopne
sub
jo
in
pusha
test
xchg
shlb
xor
inc
lock
dec
add
mov
leave
mov
cmp
pushf
xor
lahf
push
sub
xchg
jl
mov
xchg
mov
stos
dec
adc
dec
push
out
jl
adc
sbb
dec
sti
dec
mov
shrb
mov
add
testb
pushf
pushf
cvtpi2ps
xchg
and
inc
movsl
aaa
add
sbb
dec
stos
mov
push
insl
pop
xchg
inc
mov
iret
and
mov
and
scas
enter
lea
mov
sbb
into
sbb
ss
dec
leave
sbb
and
test
push
adc
filds
mov
cmovle
or
andb
mov
insl
add
jne
pop
mov
popf
xchg
aas
adc
jge
jae
fldt
mov
mov
mov
into
stos
nop
jb
xchg
scas
in
bound
and
mov
xchg
bound
outsb
xor
sbb
cli
lods
cmp
cmpsl
mov
scas
inc
sarb
dec
mov
and
xchg
movsb
jmp
leave
leave
into
scas
adc
adc
cmpsb
inc
outsb
xchg
test
mov
push
out
inc
sub
push
lds
andl
jno
cmp
push
jmp
xchg
popa
shlb
mov
adc
mov
jmp
stos
xchg
popa
shll
lea
mov
iret
in
out
cs
loope
fbstp
jg
mov
mov
cmp
mov
or
lret
lcall
lret
lock
mov
push
int
mov
lea
push
sub
mov
iret
inc
mov
mov
daa
mov
lds
jb
in
sub
call
xor
sub
xchg
aaa
sbb
adc
jb
add
pop
imul
jo
test
pop
xchg
pushf
mov
xchg
scas
jg
jb
sub
xchg
mov
mov
jae
mov
mov
outsb
outsb
imul
xchg
pop
out
lock
es
mov
shl
and
or
fstpl
mov
test
enter
imul
enter
inc
mov
push
inc
mov
out
cmp
pop
int
loopne
jl
cmc
shl
decl
adc
pop
jecxz
sbb
iret
or
icebp
enter
ffreep
xchg
xchg
not
adc
push
sbb
outsl
fisttps
cmp
in
push
cmp
and
enter
lcall
test
mov
jnp
pop
divb
lods
cmp
in
rorb
add
add
add
rorb
add
add
add
or
rorb
add
rorl
add
rorb
add
rorl
add
rorb
add
rorl
add
rorb
add
or
in
or
aas
rorl
add
or
pop
rorl
add
or
adc
add
add
add
add
add
add
add
add
add
rorl
add
add
add
rorl
add
add
add
add
addb
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
or
nop
shlb
or
xorb
add
jbe
or
in
and
xor
ja
lods
jo
push
jae
adc
sub
adc
sub
seto
or
in
dec
jecxz
add
cltd
inc
add
aas
jb
adc
inc
mov
and
push
or
pop
pop
adc
xor
adc
loop
add
adc
inc
jbe
push
xor
and
sbb
mov
xchg
ss
add
or
push
aad
scas
xor
xchg
shll
movsb
daa
xor
jno
push
clc
sub
loopne
adc
xor
iret
or
or
and
push
push
mov
inc
cmp
cmp
jno
inc
stc
sbb
xor
pop
push
pop
add
cmp
pop
sbbl
sbb
cmc
test
sbb
or
sub
inc
lods
pop
sub
xor
push
inc
xor
and
lcall
mov
or
decl
add
pop
pop
add
test
add
int
stos
movsl
adc
mov
xor
add
cmpl
adc
sbb
imul
lods
jnp
out
push
imul
xor
jae
sbb
adc
and
das
dec
pop
mov
add
stos
or
mov
dec
bnd
jno
test
andb
sahf
sub
stos
fisttps
orb
pushl
out
rol
ret
mov
int3
or
dec
or
andl
mov
stos
xchg
mov
cli
lds
lsl
sti
imul
shlb
push
movsl
xchg
in
cmp
add
adc
add
or
int3
xor
adc
mov
push
orb
xchg
shl
add
fninit
test
mov
jp
movsb
and
imul
adc
pusha
fst
add
jno
xchg
ret
add
mov
xchg
mov
lock
adc
test
push
mov
fldl
ret
ss
or
and
cmp
js
or
and
inc
cmpsb
sbbb
je
lcall
repz
push
adc
adc
lods
push
adc
sbb
mov
adc
das
xor
cmp
fistpll
add
inc
add
inc
add
and
lret
lret
lea
add
test
imul
mov
les
or
enter
cmp
adcb
aad
pop
call
mov
xor
xorb
cmpb
xchg
mov
mov
or
aam
or
fildl
add
or
test
add
add
add
add
sbb
xchg
mov
aas
pop
add
adc
imul
bound
call
push
dec
xor
jns
or
or
cmp
subb
cmpb
orb
enter
bound
mov
xchg
push
stc
inc
push
jmp
xor
aas
iret
leave
xor
xchg
pop
out
adc
dec
and
dec
inc
lods
jae
xchg
xchg
or
in
dec
in
notb
push
notl
mov
jmp
or
lahf
mov
pop
add
fs
add
mov
inc
dec
and
sbb
fs
or
rorl
aam
lcall
ja
xlat
sti
cmpsl
sar
pop
sbb
cwtl
pop
cmp
mov
adcb
dec
add
push
add
add
add
add
insl
add
add
mov
aas
cwtl
loopne
hlt
movsl
cmp
sbbb
lds
push
cmp
pop
aas
adcb
rcll
adc
sub
push
inc
or
xchg
mov
mov
jmp
pop
nop
xor
movsb
and
inc
gs
add
or
roll
outsl
into
dec
add
and
divl
mov
jne
test
imul
mov
pop
push
adc
shll
lea
aad
inc
rcl
jle
out
inc
or
push
das
adc
leave
mov
dec
push
push
dec
in
inc
pop
cs
rolb
flds
movsl
add
loop
sbb
mov
mov
cmp
jle
inc
int
in
xchg
pop
sbb
call
ret
dec
adc
loope
dec
shrb
popf
and
pop
xchg
fwait
rcrl
add
stc
arpl
push
sub
aad
iret
scas
and
sbb
ds
sub
sbb
orb
jbe
mov
inc
hlt
add
and
cmp
or
cmp
inc
pop
cmp
lock
push
or
pop
testl
insl
or
adc
push
jl
or
adc
cmp
xor
or
push
mov
add
mov
and
rcrl
lcall
or
and
inc
scas
dec
inc
popf
xchg
mov
subb
mov
shll
iret
test
xchg
and
mov
add
out
mov
add
clc
add
add
and
dec
pop
xchg
outsb
and
popa
mov
adc
cs
sbbb
sbb
arpl
add
add
add
sub
aad
add
add
adc
aas
cmp
test
adc
push
inc
and
inc
cmp
sbb
jae
adcb
sbb
cmp
or
orb
call
and
cmc
xchg
push
shlb
outsb
push
jle
je
bound
dec
adc
adc
mov
pop
adc
flds
bound
pop
sahf
and
pop
out
loopne
nop
shl
dec
test
sub
add
pop
xor
or
add
loope
int
sbb
mov
ljmp
dec
mov
jo
orb
subb
fsub
shl
dec
pusha
adcb
mov
adc
dec
push
xchg
push
and
popf
mov
and
dec
imul
adc
xchg
pop
and
cmp
aas
gs
inc
incl
xchg
or
push
mov
inc
mov
pop
inc
or
or
or
sbb
or
orb
cmpl
adc
adc
adc
xor
pop
mov
cmp
mov
pop
mov
add
mov
cmp
adc
inc
imul
inc
xor
inc
xor
inc
xor
les
addr16
ss
and
and
test
dec
add
push
add
or
xchg
or
push
push
inc
imul
add
pop
add
add
and
pusha
xor
popa
shll
arpl
xor
add
addr16
imul
adc
or
lods
and
aaa
cmp
dec
add
xchg
mov
loopne
xor
adcb
mov
add
ret
cmc
mov
mov
mov
int3
cmovs
mov
lret
sub
push
mov
inc
xor
loope
ljmp
sbb
std
sbb
pop
add
dec
inc
mulps
cmp
inc
inc
adc
out
stos
movl
adc
add
xchg
sub
jae
dec
inc
orb
xchg
neg
mov
pushf
adc
orl
pop
and
add
cwtl
pop
in
add
mov
xchg
movsb
jnp
push
daa
andnps
pop
add
add
add
pop
add
test
js
sbb
pop
bound
out
add
enter
xor
dec
pop
and
pop
mov
loopne
sbb
aam
add
xchg
insl
dec
mov
add
push
dec
imul
in
stos
sbb
test
or
add
sbb
inc
push
inc
or
movb
pop
or
cmp
adc
and
les
adc
rorl
add
xchg
arpl
lahf
out
xor
ja
dec
mov
add
mov
imul
dec
add
mov
es
jge
adc
add
add
lods
add
into
dec
int3
loopne
or
movsb
pop
aam
pushf
inc
inc
and
inc
xor
test
and
jle
int
lret
call
push
leave
xor
dec
adc
rol
cmp
fiaddl
js
mov
mov
stos
push
add
nop
dec
and
xchg
dec
cli
adcb
in
gs
inc
test
js
loope
xchg
mov
push
fmul
dec
add
cmp
cli
ret
or
inc
add
push
imul
mov
bound
inc
xchg
inc
popa
xchg
or
inc
loopne
inc
and
xchg
sbb
mov
mov
and
and
push
and
insl
arpl
or
outsl
xor
je
scas
sbbb
mov
or
add
sbb
test
sub
adc
outsb
add
mov
ret
mov
in
cmpsl
add
scas
add
add
add
mov
add
lods
hlt
int3
pop
in
push
fs
xchg
jb
and
outsl
sbb
popf
add
mulb
or
fnsave
or
in
adc
imul
fcompl
jge,pt
xchg
mov
into
dec
fdivs
or
inc
mov
xchg
into
mov
sbb
or
push
pusha
imul
add
jnp
lcall
sti
push
in
rorb
jle
repz
xchg
inc
iret
xor
leave
out
add
andb
sub
negb
push
or
aas
lcall
dec
push
ficompl
js
inc
sbb
mov
push
add
push
shll
mov
or
inc
push
fisubrs
movsl
xor
dec
or
pop
test
inc
jp
dec
inc
adc
push
filds
inc
pop
into
or
push
rcrl
fistps
jp
inc
push
push
in
mov
add
cmp
popa
lock
into
fisttpl
push
cmp
inc
ret
js
add
lock
sbb
push
repz
nop
and
mov
lds
enter
mov
out
xor
mov
es
loop
or
sbb
mov
push
int3
push
mov
inc
rdpkru
pop
add
dec
mov
push
in
or
rorb
adc
xlat
sbb
xchg
mov
aad
outsl
lds
sbb
add
sahf
adc
adc
imul
sub
or
movsl
inc
out
cmp
push
add
cs
add
adc
mov
push
xchg
ficomps
cmp
mov
and
nop
and
add
cmp
sbb
cmp
shrl
arpl
gs
jbe
lcall
push
add
mov
bound
add
je
stos
call
pop
ss
in
sub
add
sub
push
xchg
mov
mov
andb
andb
into
in
lret
dec
das
inc
mov
sahf
adc
inc
add
mov
je
add
inc
pop
loop
sub
mulb
outsb
mov
cmp
adc
sub
push
and
add
stos
repnz
aad
ret
es
aas
rclb
fidivrl
add
aaa
js
leave
in
inc
lds
ret
imul
add
cs
clc
fs
push
movsl
daa
dec
inc
sbb
add
xor
into
jb
sbb
push
bound
stc
pop
shrl
ret
into
andb
jg
mov
out
push
sbb
dec
cmp
mov
and
sub
lock
pop
inc
or
mov
movsb
mov
inc
xor
fs
inc
rcrl
xchg
push
sub
loop
cs
and
mov
stc
aam
test
push
push
pop
lock
and
add
or
or
pop
aam
add
xor
sub
and
xor
lds
clc
adc
test
repz
and
insb
and
sbb
add
out
cmp
test
lea
movsb
pop
and
and
repnz
add
mov
inc
cmp
ljmp
icebp
test
es
das
add
jg
rcrl
pop
cmpsb
dec
add
insl
lahf
daa
mov
lea
cli
in
pushf
ficoml
push
xchg
inc
adc
inc
add
inc
shrb
inc
insl
test
cltd
push
xchg
or
fisubs
inc
incb
sbb
in
in
add
jb
lods
loop
pop
into
cmp
mov
xchg
lock
inc
inc
dec
adc
add
lcall
add
xor
jecxz
add
jle
add
ret
aaa
pop
scas
imul
sbb
add
xchg
testb
or
in
adc
mov
push
or
jo
add
jp
in
sub
js
movsb
es
decb
push
xchg
xor
add
ds
std
out
jmp
sahf
pop
orb
mov
and
mov
ficoml
in
lock
in
stos
dec
ja
add
out
stos
fs
mov
xor
add
leave
lahf
fs
mov
xor
sbb
sahf
ret
les
dec
adc
sub
addr16
jbe
mov
loope
fsubrl
mov
add
add
mov
inc
in
dec
test
movl
mov
push
sbb
enter
cmpsl
outsb
pop
add
push
xchg
and
cmpsb
add
outsl
test
loop
idivl
or
cmpsl
orb
mov
and
dec
lret
push
xchg
adc
xchg
add
cmp
push
mov
xor
ret
add
push
jp
inc
jmp
push
add
jle
addr16
adc
add
scas
add
mov
pop
mov
or
add
test
leave
cli
dec
pusha
std
inc
decb
jle
add
arpl
adc
je
scas
mov
dec
hlt
mov
movsb
andb
pop
leave
pop
jo
jb
xor
mov
mov
daa
cmp
xorl
or
test
ja
adcb
or
xor
dec
das
pop
xor
in
xchg
or
int
jnp
xor
shrb
jg
sbb
jmp
pusha
ret
into
popf
clc
stos
adc
bound
xchg
sbb
icebp
pop
xchg
add
jnp
push
lret
outsl
ds
cli
mov
sbb
cmp
mov
or
das
xor
in
arpl
pop
jp
es
add
stos
loope
rorl
mov
mov
add
shr
call
add
xchg
negb
push
cwtl
pop
dec
xor
add
iret
jle
add
cld
cmp
jmp
neg
cmp
hlt
call
push
in
jp
pop
xor
inc
fadds
pop
cmp
fs
pop
add
stc
push
icebp
or
out
adc
add
pop
mov
iret
jmp
subl
pushw
shr
ror
mov
cwtl
add
shll
pop
mov
cmpsl
bswap
outsl
bswap
not
adc
push
dec
sub
imul
cmp
inc
icebp
lods
push
push
in
btr
sub
push
inc
rorl
repz
lods
inc
dec
add
dec
push
pop
pop
dec
cmp
add
push
pop
orl
add
sbb
test
addl
mov
inc
shlb
int3
push
cmp
push
jp
enter
aaa
push
pop
pop
add
rcpps
mov
mov
aas
or
rclb
in
inc
scas
imul
test
sbb
sub
jle
in
out
shlb
bsf
notl
rolb
adc
inc
cwtl
mov
and
jnp
and
sbb
adcb
out
ds
neg
lods
add
pop
or
xor
add
mov
inc
repz
adc
pop
pop
bswap
and
xor
xchg
pop
dec
call
pop
leave
bswap
clc
ljmp
add
or
inc
xchg
shrb
add
out
push
jmp
int
or
sti
pop
andb
imul
inc
xor
mov
xchg
pop
lret
adc
push
or
push
pop
inc
sub
mov
pushaw
push
xchg
test
cmp
aaa
sbb
dec
pop
xchg
insb
mov
push
ret
sbb
sbb
mov
mov
pop
out
inc
mull
lock
shl
dec
mov
xor
xchg
adcl
cmp
dec
ud2
inc
shlb
mov
out
ljmp
add
mov
aas
movsb
add
dec
test
cmpb
fists
xlat
ret
out
pop
jge
dec
rcrl
imul
sub
xlat
mov
pop
pop
mov
pop
push
sub
fidivrs
and
pop
dec
idiv
dec
adc
pop
pusha
cmp
xorb
into
mov
repz
push
sub
add
ret
nop
not
mov
data16
pop
andb
pop
movsb
jne
add
and
mov
iret
mov
sub
mov
rcrl
sbb
dec
xchg
and
pop
dec
xchg
adc
test
fstpt
into
stos
sbb
pop
ror
push
adc
xor
add
add
xlat
add
inc
mov
add
mov
mov
xor
xchg
arpl
sub
and
add
ret
and
aad
lds
lahf
add
adc
data16
repnz
aaa
int3
pop
mov
sarb
imul
enter
dec
inc
sub
xor
mov
rol
mov
xchg
mov
stc
cmpb
sub
scas
dec
fisubs
cld
int3
push
adc
mov
fimuls
out
sbb
pop
inc
xchg
add
les
adc
xor
xchg
cmpsl
leave
leave
push
or
or
aaa
mov
into
aam
add
push
out
jno
xchg
pop
cltd
jno
out
adc
pop
cmp
mov
shrl
pusha
cmp
or
sbb
scas
sub
sarl
inc
and
arpl
fsts
pop
add
xchg
or
lods
dec
aaa
das
push
push
int3
add
dec
mov
icebp
fcmovb
xor
dec
pusha
rorl
cs
xor
add
test
fisttpl
mov
xchg
shl
mov
lock
jecxz
mov
sbb
pop
push
pop
or
ret
pusha
cmp
inc
dec
test
inc
jo
adc
dec
xor
mov
xchg
or
mov
cwtl
cmp
add
jne
adc
mov
push
sub
neg
lcall
xor
fimull
test
cmp
or
and
andb
inc
popa
add
mov
dec
mov
mov
aam
sub
xlat
xchg
out
add
dec
sahf
loopne
xor
sub
sbb
mov
cmp
stos
inc
loopne
shll
adc
nopl
jmp
movsl
jae
or
loopne
jp
sbbl
add
int3
cmp
mov
mov
mov
add
test
jle
or
jb
cli
sub
xchg
xlat
push
jo
or
pop
push
add
cmpsl
je
push
negl
sub
jb
ret
and
rolb
xchg
inc
das
sub
int3
jno
leave
pop
cmc
fsubl
xchg
cwtl
add
add
mov
inc
test
aas
addb
xor
xor
subl
and
cmpsl
pop
es
pusha
ret
push
setl
lds
addr16
xor
xchg
dec
sub
arpl
test
cmc
and
and
sub
add
mov
test
push
outsb
adc
adc
pop
movsb
dec
daa
rolb
out
jecxz
mov
mov
adcb
xchg
adc
or
pop
pop
and
add
cmc
cs
into
cmpsb
sub
movsb
cld
adc
rclb
add
cwtl
and
repz
ljmp
add
add
adc
or
jno
leave
int
in
jge
mov
mov
and
rorl
sub
into
adc
jb
jp
and
inc
xchg
or
adc
jp
cmpsb
lahf
or
ja
div
and
xchg
xor
pop
cwtl
incb
test
cmpsl
cmp
xor
xor
scas
fimuls
test
pushw
add
or
add
sub
cmp
add
push
add
sbb
pop
pop
dec
imul
adc
fildl
pop
xor
xor
pop
cmpsb
loopne
pop
sub
inc
dec
add
orb
sbb
dec
js
jns
imul
mov
and
sub
out
add
push
test
inc
test
jge
data16
ret
mov
dec
into
xchg
lcall
int3
lea
push
in
leave
xchg
std
cs
imull
xor
pusha
add
fldcw
mov
fistpll
leave
pusha
xor
test
dec
sbb
push
icebp
and
daa
ss
repz
dec
mov
test
push
sarb
std
adc
dec
jne
pusha
mov
inc
sbb
xchg
sahf
add
repnz
pop
in
rol
ss
or
imul
sub
xchg
test
add
lea
mov
gs
leave
inc
pop
sub
rolb
and
rcrb
hlt
mov
not
dec
aad
cs
or
sub
sub
call
push
mov
out
ror
popa
test
xchg
add
inc
mov
stos
mov
add
pushl
ret
loope
fists
cs
mov
sub
dec
not
inc
add
adc
in
nop/reserved
adc
add
pusha
lds
and
std
jb
push
roll
jae
pop
inc
sbb
mov
cli
mov
into
xchg
and
ja
inc
mov
arpl
push
fcmovnu
cwtl
mov
or
lock
lcall
pop
sub
mov
fisubrl
mov
pop
sar
jmp
neg
inc
jb
inc
xor
sbb
in
fwait
mov
mov
inc
test
sbb
or
imul
mov
and
jmp
leave
xor
sub
lds
dec
outsb
xor
cmp
loopne
xor
ss
cmp
sub
les
sbb
pusha
in
aas
lods
sahf
mov
cmp
mov
mov
xchg
sub
jnp
add
inc
jecxz
cmp
pop
or
pop
pop
add
and
cmp
jecxz
xchg
sarb
sti
adc
inc
pop
pop
dec
or
jl
or
inc
outsl
movsl
mov
out
out
loopne
sub
setnp
cwtl
scas
inc
jae
je
or
movsl
push
pop
mov
pop
pop
dec
pop
mov
ds
mov
fsubr
sub
sahf
sbbb
mov
faddl
inc
add
add
jmp
push
cmp
and
rcrb
bound
outsl
es
aas
icebp
push
fisttpl
add
in
ljmp
cmp
cmp
or
sarl
push
into
lods
xchg
adc
mov
push
mov
lcall
cmp
adc
mov
out
adc
movsb
mov
mov
jl
jbe
or
ljmp
cmp
imul
lret
stos
adc
pop
xor
pop
and
add
clc
cltd
xchg
and
add
pop
stos
xchg
les
dec
fsincos
sarl
leave
push
push
push
mov
orl
lds
cmc
rcl
bt
out
push
fcmovnb
add
inc
pushf
dec
jnp
push
lock
loopne
std
dec
test
cmc
sub
test
ret
mov
adc
dec
repnz
mov
cmpsb
adc
fadds
pop
jae
movsw
sbb
test
add
mov
fwait
xchg
and
push
test
ret
mov
or
inc
outsl
mov
push
inc
jmp
push
push
mov
leave
add
pop
jecxz
push
adc
push
jbe
push
jo
test
neg
jmp
fsubp
sub
pop
mov
add
jge
sub
movsb
sbb
or
jnp
in
pusha
daa
inc
add
push
clc
xor
pop
into
dec
adc
movups
adc
add
pop
xchg
ret
pusha
aad
push
out
cs
adc
xchg
inc
icebp
out
test
mov
sub
add
or
mov
push
negb
dec
hlt
sbb
xchg
or
cmc
arpl
test
xchg
arpl
push
add
push
add
sub
jl
js
call
adc
mov
sbb
mov
mov
int3
divl
fsubr
or
stos
scas
xchg
push
aam
hlt
xor
add
movsl
stos
insl
xor
mov
jns
fldenv
aaa
jnp
test
mov
push
pop
and
cltd
or
cld
repnz
push
test
gs
mov
push
add
adc
nop
movsb
dec
popa
xor
popa
outsb
dec
mov
xchg
inc
lock
mov
test
or
out
sub
add
push
cmpb
repz
add
test
pop
xchg
cmp
int
cmc
or
int3
mov
add
pusha
addr16
mov
and
cmc
add
daa
push
test
dec
sub
or
rcll
shr
push
insb
adc
xor
or
push
mov
icebp
clc
fwait
cli
push
jbe
movsb
add
sub
lods
outsl
shll
testl
scas
loopne
int
sarl
adc
add
xchg
mov
daa
outsl
and
xchg
pusha
loop
insb
sub
test
dec
mov
cwtl
rol
xchg
cmp
ret
mov
sub
dec
test
push
nop
cmp
fisubrs
push
daa
sub
or
xor
arpl
adc
aad
call
xchg
lahf
jle
push
ficoms
mov
xchg
xchg
mov
stos
sub
sbb
xchg
and
in
stos
cli
xchg
sbb
or
int
fdivrs
arpl
aas
popf
mov
inc
or
inc
idivb
mov
ss
push
dec
mov
and
adc
inc
pop
movsl
or
ret
mov
fcoml
sub
push
push
mov
inc
scas
cli
call
or
in
mov
dec
int
lds
clc
or
fstps
lret
sbb
sbb
pop
add
add
cmc
and
push
test
and
addl
add
cmp
testl
loope
pop
inc
test
sub
jle
mov
adc
shll
xor
gs
pop
movzwl
xor
push
pusha
jg
rorl
out
sbb
dec
int
add
test
jno
jno
mov
dec
ljmp
xor
daa
lcall
icebp
inc
sub
xorb
and
std
add
pop
xor
or
xlat
xchg
ret
enter
lods
xor
std
or
pop
or
push
xlat
xor
push
cmp
mov
les
push
test
mov
stos
cmp
or
cmp
mov
les
adc
out
pop
mov
inc
add
leave
lret
mov
push
fiadds
push
push
sahf
out
add
in
sub
fstps
inc
push
cmp
rorb
pop
not
or
pop
pop
lcall
sets
bound
add
adc
dec
sub
rclb
push
xchg
shrl
push
mov
fstl
std
add
mov
or
adc
xorb
not
adc
inc
addr16
leave
mov
cmpsb
mov
testb
pushf
adc
lcall
or
push
push
sub
dec
inc
or
je
inc
xchg
mov
mov
ss
incb
or
jecxz
pop
xor
mov
dec
inc
pop
adc
in
push
sub
ror
inc
and
std
mov
inc
test
arpl
dec
push
adc
fimull
dec
enter
pop
test
dec
test
xchg
cmp
adc
xor
push
sub
mov
adc
sbb
lods
sbb
mov
ja
add
cli
mov
mov
cmp
add
test
stc
and
lret
add
mov
rorl
pop
add
int3
sbb
insb
int3
adc
jne
jmp
bound
das
xor
xchg
jae
add
mov
xchg
add
jnp
add
xchg
push
adc
out
add
xor
mov
bound
xchg
push
or
push
xchg
les
out
dec
push
pop
sbb
push
push
pop
adc
fadds
add
pop
jl
cmp
enter
xchg
test
inc
or
mov
mov
adc
cwtl
ljmp
adc
sbbb
mov
mov
ljmp
cmc
ret
jecxz
jl
sub
mov
mov
lea
push
lods
add
mov
pushl
test
add
xor
push
push
les
cmp
pop
lea
pushf
push
sub
pop
pop
add
add
adc
jae
pop
rorb
dec
repnz
xchg
and
cltd
push
ret
xchg
push
dec
addl
scas
push
fidivrl
push
push
jae
add
aam
clc
jns
inc
mov
xchg
push
nop
pop
seto
mov
add
pushf
dec
jns
stc
mov
xchg
dec
mov
xor
pop
mov
std
inc
inc
mov
push
sbb
or
push
sub
ret
and
sahf
jb
in
xchg
fsubrs
jbe
lcall
ds
mov
in
pop
std
and
test
lret
sub
or
aad
mov
and
pusha
jnp
inc
sets
xchg
popf
orb
sbb
dec
ficomps
pop
jmp
xlat
add
push
icebp
fsubs
fistps
out
mov
xor
ds
xchg
mov
inc
and
imul
popa
rcrl
cmp
jp
icebp
mov
dec
testl
inc
jp
dec
adc
mov
add
push
sbbb
call
sbb
lcall
or
rclb
adc
pop
cld
ljmp
mov
movsb
gs
ds
pop
add
div
aad
and
pop
lods
and
lock
mov
xor
dec
xchg
repnz
add
inc
xor
mov
lahf
sub
cld
add
ret
mov
cwtl
mov
pop
popa
lahf
ss
push
pusha
jae
fsqrt
and
repz
notb
add
gs
and
push
jno
lds
xor
fisubl
cmp
stc
cmpsb
lods
add
notl
js
dec
dec
add
ficompl
or
sub
enter
mov
jno
dec
sbb
lock
es
xor
out
mov
or
add
pusha
aas
cmp
jecxz
add
fisttpll
xor
push
dec
pop
pop
push
or
mov
or
addl
inc
dec
loopne
mov
xor
push
add
mov
jae
sub
arpl
xor
andb
or
dec
dec
or
andb
mov
js
push
int
ljmp
inc
bound
std
push
xor
sub
daa
neg
insb
jae
lock
sub
into
fs
or
int
or
inc
dec
dec
ret
inc
in
add
fists
push
stc
mov
cmp
negl
push
lock
pop
push
xor
jnp
or
jb
or
not
or
xchg
ret
inc
test
test
sub
add
pop
adc
test
mov
adcb
pop
in
sarl
mov
popf
dec
rclb
adc
mov
mov
inc
ret
stos
cltd
mov
cmp
rol
out
dec
xlat
dec
shlb
dec
xor
bswap
int3
insl
inc
add
dec
pop
popf
dec
inc
not
inc
inc
dec
mov
mov
or
and
cmpsl
mov
inc
js
inc
pop
inc
cmpsb
cmc
pop
cmp
out
out
adc
ret
mov
dec
add
mov
popa
fs
push
test
cmp
dec
mov
rorb
pop
mov
lcall
xor
mov
out
jb
jecxz
add
cs
push
pxor
xor
cltd
lods
adcb
das
stc
faddl
ljmp
xor
sub
or
lret
pop
mov
xchg
cwtl
xchg
int
add
daa
xor
test
leave
push
add
pop
cwtl
loop
ret
xchg
aam
pop
int3
pop
gs
and
out
ja
mov
mov
js
test
inc
in
hlt
mov
mov
nop
pop
ja
mov
push
inc
pop
push
outsl
mov
pop
jmp
repnz
mov
pop
adc
out
inc
mov
and
dec
je
pop
adc
loope
jns
xorb
lock
push
sbb
lods
mov
cmovl
ret
pop
lock
jecxz
jp
push
pop
addr16
xchg
dec
or
mov
push
push
sub
fidivl
loop
out
mov
push
inc
adc
add
push
ja
shll
jnp
pop
mov
pusha
and
addr16
nop
lods
lods
push
inc
push
call
adc
jecxz
lds
push
rorl
fists
data16
or
xor
push
jb
or
jbe
mov
mov
addl
repz
push
out
mov
sbb
xor
btl
adc
stos
cmp
cmp
ljmp
pop
xor
jp
cmp
ljmp
fs
xor
sbb
xor
outsb
dec
xlat
test
mov
xchg
sub
jo
stc
cltd
loopne
dec
mov
add
pop
pop
inc
or
subl
loop
shlb
mov
or
pop
lret
pusha
test
add
sbb
pop
not
call
or
dec
repnz
lret
adc
and
sbb
adc
test
dec
and
cmpsb
mov
neg
inc
pop
cli
or
popa
shl
and
pop
and
popf
cmp
mov
adc
push
roll
lods
cmp
inc
test
enter
inc
push
pusha
ret
les
cmpb
or
mov
movsb
xor
aam
ret
sub
ja
xlat
add
lret
inc
jg
dec
mov
jo
cmp
inc
clc
fadd
cmpsb
sbb
or
cmp
std
in
inc
pop
pusha
adcl
mov
pop
and
cmpsb
data16
sub
cmpl
mov
and
or
push
and
add
movsb
lea
mov
ficoms
sahf
cmp
sbbb
cltd
or
lahf
sub
sbb
push
fadds
and
adc
inc
xchg
pop
lock
mov
or
rcr
sti
dec
xchg
movb
scas
push
mov
or
mov
sbb
ja
jns
fs
pop
pop
lods
adc
in
pusha
insb
addr16
cmpsb
xchg
cwtl
ljmp
xor
leave
mov
add
mov
mov
and
in
lea
add
push
loopne
enter
adc
mov
lahf
push
adc
std
in
xchg
sub
faddl
wrmsr
pop
mov
shl
and
adc
sub
xchg
test
inc
push
adc
mov
test
out
popa
ss
xor
aaa
mov
jle
inc
xchg
in
incl
or
mov
and
ret
xor
jbe
pop
dec
xor
push
pushw
or
dec
dec
repnz
stc
mov
lret
add
sub
pushf
dec
hlt
add
mov
int3
push
sub
or
dec
jle
or
push
fs
cmpsb
rolb
out
or
fs
lret
rcrb
stc
or
cwtl
je
add
pop
push
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
iret
push
outsb
cltd
push
fs
arpl
mov
or
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
add
adc
and
and
adc
xchg
push
stos
or
cmp
xor
or
jo
or
push
arpl
or
push
or
dec
pusha
jno
xchg
mov
push
cmpsl
clc
pop
or
inc
inc
or
cmp
fsub
cmpsb
dec
add
shll
push
xchg
inc
inc
push
in
call
sbb
sbb
xor
mov
and
loopne
sbb
imul
inc
adc
movsl
sub
xor
sub
movsl
lret
clc
push
cs
gs
outsl
arpl
adc
sub
and
sub
dec
arpl
mov
sub
adc
add
jmp
add
into
add
or
jb
popa
lcall
mov
nop
sbb
or
push
je
cs
sbb
jo
cmp
dec
or
xchg
inc
sbb
sub
pop
push
dec
bound
arpl
mov
rclb
jb
cmp
inc
nop
and
in
jb
cmp
mov
and
enter
insb
push
sub
xchg
or
in
aas
nop
adc
adc
jb
sbb
or
mov
push
call
add
add
mov
pop
sbb
mov
cmp
pop
lods
or
xor
aam
or
cmp
sbb
mov
and
mov
cmp
push
push
adc
test
jne
xor
rcrb
fmull
or
mov
add
jge
push
mov
nop
push
inc
orl
fs
sahf
cmp
adc
push
pop
nop
mov
cmp
rcrl
repnz
xlat
xchg
test
dec
pusha
mov
mov
or
push
add
or
adc
inc
push
adc
mov
sbb
push
mov
push
sub
adc
xchg
ret
nop
pop
push
push
push
mov
repz
test
adc
add
lea
xlat
jbe
popa
cmp
push
or
int
in
jne
adc
adc
insl
inc
mov
or
push
inc
add
adc
and
mov
fistpll
jmp
pushf
loop
xchg
call
lahf
add
or
pop
pop
mov
jo
pop
push
clc
mov
sbbl
into
add
insb
call
xor
and
sbb
xchg
sub
push
dec
bound
jmp
pop
nop
jp
add
cmp
jmp
sub
test
scas
and
stc
outsl
jl
sti
cmp
and
or
aam
sahf
xchg
or
cmp
sbb
sti
stc
adcl
fiaddl
cmp
pop
mov
lret
mov
xchg
add
add
fmuls
shlb
add
mov
test
je
and
sarl
mov
dec
adcb
call
cmc
pop
fs
and
fnstenv
xchg
push
mov
push
mov
jns
xchg
gs
push
ja
dec
fmull
aas
in
movsb
dec
adc
xchg
or
or
push
aam
sbb
add
iret
sub
push
dec
or
push
and
jae
xchg
out
ja
out
dec
add
fidivs
push
sbb
jbe
imul
jne
stos
jae
xchg
icebp
xlat
dec
lea
sub
fildll
cmp
pushaw
add
sbb
cmpl
sbb
or
adc
sbb
dec
adc
repnz
mov
ljmp
outsl
add
cs
daa
and
psllw
dec
cmp
sub
inc
mov
loope
cmpb
add
pusha
xchg
jbe
repnz
mov
dec
or
pop
mov
push
sub
push
push
or
ljmp
adc
mov
or
push
je
sub
mov
and
xor
sahf
jmp
mov
clc
sub
inc
sub
and
outsl
pop
or
out
mov
mov
xchg
inc
les
and
cmpsb
sbb
inc
cmp
mov
sub
aas
xchg
data16
aam
xor
cld
or
and
call
ja
je
push
inc
aaa
dec
push
xor
leave
inc
stos
call
and
int3
mov
xchg
ja
cmpl
movsl
xlat
and
call
out
aaa
inc
adc
cli
test
cmp
je
dec
push
adc
cmc
add
jle
fisubrl
push
lods
xor
call
mov
xorb
aaa
or
push
leave
xchg
push
mov
insl
movsb
lods
inc
jmp
xor
rorb
test
call
loop
loope
imul
cmc
and
cmp
or
nop
dec
test
cmpl
test
adc
inc
and
or
push
mov
push
pop
dec
dec
xor
inc
and
cwtl
and
jecxz
ss
push
or
cmp
jae
std
rcl
sub
lds
mov
mov
mov
ret
mov
and
movsl
xchg
adc
testb
out
jmp
jnp
push
mov
mov
dec
pushl
cmp
sub
mov
or
push
xchg
jle
adc
daa
pop
sahf
mov
adc
bswap
int3
sbb
mov
mov
inc
push
xor
pusha
rolb
mov
fisttpl
sbb
repnz
and
add
mov
mov
push
mov
pop
and
test
pop
and
push
jl
stc
adc
test
aam
rolb
aam
pushf
adc
xchg
adcb
push
push
sub
cmpsl
cmp
aad
xor
lds
add
jno
sub
or
xor
pop
xorb
into
mov
test
loope
pop
inc
loopne
cmp
or
adcl
pop
or
cmp
mov
pop
test
jns
add
enter
aad
int
mov
jmp
xchg
pop
mov
loope
lret
jle
in
subb
popf
adc
es
adc
in
shll
fisttpll
movhps
sbb
push
adc
test
add
or
jmp
in
cli
add
add
sub
outsl
xchg
fsubs
or
or
or
pushl
add
xorl
add
loop
xor
jg
pop
add
adc
jecxz
push
outsb
or
push
movsl
lret
sub
pop
test
mov
sbb
add
andl
mov
dec
dec
nop
xor
xchg
adc
push
and
or
mov
mov
enter
ret
loop
and
adc
add
cli
and
or
cmp
pop
push
push
mov
pop
fiadds
fdivs
add
or
pop
pop
pop
clc
cwtl
fsubs
add
jne
cmp
sub
xor
inc
push
or
cmpl
mov
or
dec
imul
popa
mov
ljmp
mov
push
jg
aad
pushf
jl
call
jge
fiadds
mov
je
mov
or
adc
into
scas
adc
fstpt
aad
fwait
or
cmpsl
jae
or
imul
lods
or
pop
stos
xchg
testb
pushf
dec
cmp
mov
addb
sub
cltd
nop
sbb
cmp
mov
add
fldenv
nop
dec
hlt
aam
adc
pop
cwtl
lahf
adc
jmp
dec
sti
inc
adc
mov
sbb
jg
add
push
or
pop
mov
lret
push
pop
mov
or
dec
or
or
dec
fwait
inc
pop
jmp
sub
rorl
adc
pop
cltd
xor
sysexit
movlps
int
inc
loop
and
fdivr
call
dec
or
and
push
and
mov
inc
push
roll
fsubs
xor
push
pop
test
inc
add
add
or
xchg
je
or
add
call
pop
or
lret
fs
js
mov
outsb
cli
ds
xorl
pusha
mov
addr16
icebp
add
and
jecxz
dec
dec
pop
mov
dec
inc
adc
adc
adc
leave
and
fcomps
lea
xor
and
clc
add
push
lea
adcb
cwtl
jbe
mov
cltd
pushf
movsb
push
adc
jae
xor
or
mov
adc
and
xchg
xor
mov
cli
inc
sub
je
std
or
arpl
das
dec
adc
xchg
sbb
lcall
push
cmp
sbb
sub
cmpl
cwtl
repz
mov
add
icebp
dec
mov
lret
out
into
xor
cmc
sub
leave
mov
mov
mov
adc
xchg
out
pop
jmp
sub
mov
dec
cmp
lea
push
dec
dec
leave
pop
insb
in
xchg
push
mov
movsl
mov
jne
adc
arpl
mov
sti
clc
enter
movsb
mov
pop
xchg
or
sub
and
add
out
data16
inc
fcmovbe
mov
adc
jg
cmp
nop
aad
add
movsb
scas
dec
inc
pop
or
jne
sub
or
mov
jl
hlt
jmp
in
mov
inc
popl
or
mov
mov
mov
loope
leave
push
xchg
imull
add
inc
cmpsb
shlb
sbb
sub
mov
add
xor
les
mov
pop
adc
loop
test
and
mov
mov
pop
mov
dec
nop
push
inc
pop
cli
and
mov
push
clc
les
pop
mov
add
jmp
and
jp
mov
stc
test
test
add
inc
mov
mov
dec
jns
dec
or
les
rclb
je
mov
or
call
or
xchg
ret
scas
sbb
scas
dec
xor
mov
sar
cmp
dec
test
test
push
adc
xorl
add
dec
movsl
push
faddl
mov
test
je
pushf
and
cli
add
cld
adc
xorl
sub
or
or
push
mov
or
js
mov
cmp
inc
mov
cmpsb
jge
and
pop
mov
stos
popa
in
out
and
and
jmp
lock
movl
push
sbb
addl
stc
sbb
jne
mov
fwait
pop
cmp
add
mov
jge
push
cmpsb
pop
inc
sub
imul
cmp
add
jp
test
fbld
sbb
pop
popa
adc
or
mov
repnz
daa
inc
fsubl
jl
push
push
in
push
sbb
lret
adc
add
add
aaa
dec
sub
and
mov
mov
xchg
fisttps
dec
xchg
sbbl
stos
movsl
seta
cmp
pop
scas
adc
loopne
in
sub
test
aaa
sar
sub
rorb
out
cmp
pop
push
adc
faddl
jb
mov
sti
mov
push
or
es
pop
push
inc
jmp
mov
movsl
inc
lods
sub
push
repnz
mov
cmp
cmpsb
or
pop
sbb
loope
inc
test
pop
adc
jmp
inc
js
adc
inc
clc
pusha
push
into
jo
mov
sbb
cmpsl
cmp
adc
add
xchg
call
pop
fists
mov
lahf
ret
pop
leave
enter
sbb
adc
inc
int3
test
mov
lods
jmp
xor
inc
je
cmp
sbb
test
je
mov
mov
push
cmp
pop
or
ret
push
jmp
enter
xor
sub
sbb
adc
cmc
xor
nop
jbe
adc
sub
iret
mov
cmp
sub
or
push
mov
cmp
ja
jne
ret
in
push
test
xor
and
and
mov
and
adc
pop
bound
xor
lcall
sub
imul
sahf
cmp
add
dec
xlat
out
cmp
ja
je
xchg
insl
add
rep
incl
movsb
and
inc
je
cld
inc
jl
movsl
add
sbb
clts
movw
and
and
ficoml
mov
inc
fsubrs
sub
sbb
sbb
loop
sub
push
test
sbb
jl
add
or
pinsrw
add
fwait
jne
pop
pop
pop
pop
and
cmp
jmp
dec
ret
add
mov
inc
pop
lcall
fsubr
sbb
leave
mov
add
loop
je
jb
jecxz
loop
test
loope
icebp
rcrb
scas
inc
adc
add
cmp
push
mov
divb
sbb
jb
or
fdivs
in
and
or
jne
push
sbb
lock
dec
or
cmp
push
add
adc
jmp
mov
lods
imul
add
loopne
outsb
data16
rcll
cmp
repz
xor
imul
mov
es
dec
daa
dec
inc
nop
lea
dec
and
shll
dec
mov
mov
inc
pusha
sbb
mov
push
sub
sub
and
jne
inc
pop
pop
ljmp
sub
dec
es
pusha
cmp
jmp
or
andl
shlb
lea
cmp
shlb
rolb
xor
aam
push
jmp
pusha
push
neg
jle
pop
js
pop
sub
mov
inc
mov
mov
je
ret
test
add
xchg
and
jbe
adc
addb
or
bound
push
mov
lcall
mov
pusha
adc
repz
leave
push
test
jmp
xchg
push
or
add
test
or
lea
cmp
xchg
fldt
faddp
call
push
movaps
or
sub
cs
popa
push
fsubs
adc
sub
dec
jge
scas
inc
adc
or
pop
ret
xchg
sbb
inc
pop
stc
jmp
fstp
shrl
bound
out
mov
rorl
adcb
mov
inc
add
jb
or
push
ret
inc
invd
and
adc
adcb
mov
imul
mov
or
mov
inc
mov
aam
in
or
sbb
les
mov
and
jecxz
addb
sbb
cs
xor
imul
fimuls
and
mov
inc
bound
inc
add
xlat
fadds
lods
add
js
xchg
mov
or
or
push
in
int3
into
sbb
cmp
test
popa
push
pop
mov
mov
movsl
sbb
nop
mov
add
mov
daa
lret
cmp
or
sbbl
pop
cmp
dec
addr16
leave
repnz
hlt
xchg
sbb
jl
cld
gs
mov
add
test
lds
iret
or
mov
mov
push
stos
mov
cmp
jmp
xchg
jp
add
mov
inc
imul
negl
jo
jl
xor
cmp
call
xchg
mov
movsl
popf
sti
jmp
stos
add
mov
push
sbb
push
sarb
repnz
test
cmp
lahf
fiadds
adc
push
sbbb
jmp
repnz
aam
imul
pop
loope
jp
iret
mov
add
mov
push
cmpsb
pop
scas
mov
pop
or
xorl
dec
in
xchg
cmp
cmp
in
cmp
sahf
xchg
pop
cmpsb
lock
movsl
mov
popa
test
mov
add
addr16
repz
mov
add
mov
push
add
and
clc
bound
or
cmp
and
jl
push
adc
pop
orl
pop
jne
mov
or
and
or
mov
aas
or
jl
xor
das
pop
mov
lea
cld
push
pusha
push
push
or
repz
dec
je
cmp
popa
sub
mov
sbb
inc
hlt
xchg
xchg
push
int
clc
push
mov
lds
jl
mov
lds
out
mov
je
sbb
cs
inc
mov
or
push
dec
inc
push
push
loopne
inc
pop
add
jb
popa
outsb
fs
gs
jo
push
dec
add
push
dec
popa
sbb
insb
jne
and
jecxz
xchg
out
leave
or
cmpsl
or
pusha
jo
xor
add
push
inc
rep
fs
sub
sbbl
jecxz
and
sbb
scas
bound
inc
sbb
test
dec
or
mov
insb
and
sbb
repnz
ret
popl
lret
sbb
dec
jo
push
pop
mov
push
or
push
dec
cld
sar
mov
dec
fdivs
rclb
jmp
pop
mov
cltd
loop
mov
push
or
popa
aas
add
sbb
push
in
cmp
pop
sbb
ret
sbb
dec
adc
add
loopne
adc
xor
ret
and
jne
cmp
sahf
scas
sbb
mov
jp
sub
lret
inc
xor
jmp
int
cmp
add
sub
mov
sbb
xchg
xor
add
and
sti
cmp
push
add
repnz
clc
or
push
test
ret
pop
add
sub
push
je
cld
imul
pop
loopne
dec
rorb
insb
inc
cmp
repz
in
das
mov
cmp
add
push
lret
cmp
test
mov
mov
outsb
call
pop
add
out
sbb
lock
push
push
and
jl
add
inc
sub
fs
mov
mov
inc
imul
mov
or
aaa
or
rclb
jmp
sub
hlt
or
je
xorb
pop
aaa
jno
addr16
adc
push
clc
and
xchg
or
dec
sarb
leave
sub
sbb
inc
jnp
cmpb
jbe
push
cwtl
scas
add
push
call
sbb
pop
pop
popa
push
bound
nop
cmp
or
push
loopne
enter
rolb
push
jmp
and
sbbb
inc
add
das
or
jne
or
mov
push
add
xor
mov
fwait
push
imul
pop
inc
pop
dec
mov
adc
mov
pop
pop
push
adc
ja
jns
sbb
inc
out
outsb
jne
cmpl
push
sbb
adc
outsb
cld
nop
inc
inc
and
adc
dec
je
inc
fbld
adc
pop
mov
add
into
cli
out
push
je
call
loopne
jo
jbe
das
out
imul
push
ret
jb
dec
ljmp
sbb
or
push
xor
push
cmp
push
lods
cmp
gs
sbb
lock
jo
dec
cmpsl
add
mov
adc
sbb
fistpl
test
inc
sbb
dec
sub
mov
inc
outsb
mov
pusha
mov
inc
mov
push
test
adcb
outsl
fistl
test
mov
jmp
add
sbb
xlat
dec
or
je
dec
lcall
cld
push
or
das
shrl
mov
icebp
fmuls
pop
push
or
push
push
xchg
inc
pop
sub
and
xor
xor
mov
or
andl
std
mov
or
popf
dec
movsb
jmp
pop
pop
aas
mov
mov
adc
mov
jnp
lea
pop
push
sbb
je
sbbb
mov
loop
subb
fnstcw
int3
lret
lret
or
mov
xor
cmp
push
sub
pop
push
mov
cmp
mov
add
mov
cmp
jmp
add
sub
cwtl
jle
jle
ja
push
xchg
sub
lds
sub
inc
adc
push
and
cmp
std
xchg
das
push
pop
mov
mov
inc
sub
dec
pop
adc
shll
addr16
and
inc
xlat
inc
push
inc
into
inc
adc
inc
push
inc
fiaddl
inc
flds
inc
lret
dec
xor
push
leave
or
in
sbb
ret
enter
or
sub
je
jno
aaa
dec
lret
dec
ss
xor
pop
lcall
adc
inc
sbb
sti
mov
std
out
insb
sbb
mov
and
and
lods
or
fwait
push
adc
test
mov
xor
hlt
inc
mov
outsl
and
test
jmp
push
pop
movsb
and
or
ret
enter
xchg
jp
or
cmp
jne
into
and
insb
push
mov
or
rolb
pop
push
test
sbb
xor
aam
lcall
outsb
jmp
mov
daa
xor
enter
pop
sub
nop
pusha
or
in
lods
lahf
sub
and
xor
cmp
jle
sbb
adc
cmp
fwait
rcll
in
pusha
scas
xor
mov
les
shrb
rep
ss
dec
mov
sub
xchg
mov
inc
sub
or
cmpl
push
add
mov
push
leave
int
mov
sbb
or
out
mov
inc
or
mov
mov
xor
cmp
add
call
push
leave
loop
mov
dec
dec
aam
adc
cmp
cmp
or
adc
fnstcw
dec
ret
push
insl
cmc
mov
mov
addb
mov
lea
mov
je
add
sarl
dec
jne
jmp
pop
jecxz
push
sub
cltd
sbb
add
adc
mov
pop
jmp
push
outsl
ret
dec
mov
call
add
loopne
rcrl
adc
sub
dec
dec
pusha
and
sub
jl
or
and
push
shr
jb
andl
lcall
push
neg
jbe
dec
inc
aaa
xchg
xor
pushl
sbb
and
leave
call
loopne
rcr
xor
pop
orl
jbe
or
xor
mov
popf
vpsubsb
dec
xchg
or
sbb
or
ss
lock
ret
shrb
inc
jne
dec
xor
aas
sbbb
push
pop
dec
pop
arpl
mov
ret
inc
cwtl
xorb
sub
cmpl
mov
sarb
in
loopne
mov
jne
add
add
pop
xor
pop
dec
sub
xor
jne
pop
test
inc
dec
or
fsubrs
add
add
adc
sbb
pop
cmp
mov
add
or
push
mov
arpl
xor
cs
test
xor
repnz
mov
or
or
mov
pop
test
cmp
xchg
sti
dec
bound
pop
jmp
add
mov
pop
popa
adc
clc
dec
mov
mov
mov
or
push
je
add
dec
jl
lock
push
mov
enter
rcr
push
mov
push
adc
movl
pop
sub
dec
xor
xlat
nop
xor
inc
inc
jg
sahf
in
inc
add
sub
jnp
enter
imul
fnstcw
xchg
adc
dec
sub
sub
bnd
pop
sarb
sbbl
loopne
mov
movw
rorb
mov
jo
clc
xchg
fwait
dec
inc
push
nop
js
into
dec
iret
dec
clc
cwtl
stc
and
mov
popf
mov
dec
cmp
sub
xchg
push
push
adcl
mov
cmp
push
add
out
cld
popf
cmp
mov
mov
outsb
or
cmp
jge
push
aam
movsb
mov
xchg
enter
pop
sub
cmp
xchg
in
xor
push
daa
jmp
cld
int3
xor
pop
sar
inc
xor
or
pop
xor
add
movsl
pop
xor
adc
or
loop
jmp
pop
nop
adc
cmp
aad
rorb
cwtl
movsb
into
or
test
adc
or
mov
outsl
inc
mov
pop
sub
jmp
xor
bound
data16
or
or
jmp
sub
add
sub
lds
sub
or
dec
jbe
nop
sub
xlat
insl
or
scas
rorb
shrl
dec
pusha
xchg
add
lret
and
lock
mov
cld
jns
aas
aas
inc
nop
je
cmpsb
loop
jns
push
xlat
xor
cli
cmp
mov
movsb
mov
adc
stos
push
hlt
push
pop
xor
and
inc
shlb
mov
push
popa
inc
jl
cmp
clc
pop
call
add
mov
out
sub
rcll
cld
add
cltd
and
sti
test
mov
fwait
jmp
push
dec
addps
and
mov
addr16
clc
std
mov
mov
lret
aad
push
dec
push
dec
sbb
xor
nop
movsb
xor
dec
or
inc
cld
dec
jmp
test
push
or
xchg
cmp
jne
cwtl
mov
pop
call
cld
pop
mov
aaa
add
dec
jmp
xchg
insb
sahf
push
mov
leave
repnz
add
dec
mov
jne
jb
js
or
sub
dec
xor
xchg
pop
lea
xchg
jmp
out
dec
jp
cmp
or
cli
add
imul
sub
ja
add
ret
ljmp
pop
cmp
jne
pop
dec
test
in
pop
add
lahf
sbb
inc
jae
mov
push
push
add
fstpl
int3
sub
and
cmp
pop
fnstsw
xchg
adc
in
loope
push
add
add
jmp
scas
popa
in
sbb
inc
pop
adc
pop
or
pop
jmp
sbb
xor
push
clc
inc
mov
sub
and
loopne
ds
cmp
mov
cmp
out
xor
pushl
xchg
inc
loopne
push
lret
pop
adc
pop
ficoms
inc
sbb
adc
daa
mov
les
das
xor
sub
jb
dec
jl
cmp
jge
sub
xchg
jg
add
std
pop
or
dec
xor
and
fldenv
inc
pop
in
jb
ret
xor
cld
adc
sub
jle
sub
shlb
add
stc
add
lea
pop
mov
adc
aas
cli
dec
fmuls
xchg
dec
rcrb
stc
cmpb
enter
cmpl
jne
sbb
ret
in
loopne
arpl
mov
jo
mov
or
sub
es
ljmp
or
shl
movsb
dec
jae
and
les
mov
call
in
arpl
dec
or
shrb
dec
push
mov
mov
or
sahf
mov
mov
push
push
and
mov
lcall
mov
lea
cmp
mov
dec
sub
pop
adc
inc
jns
test
pop
mov
pop
mov
xor
jb
cli
add
nop
cmp
bound
inc
or
inc
or
and
or
inc
dec
inc
nopl
add
lcall
jmp
fcoml
dec
mov
or
or
inc
adc
pop
jmp
push
add
mov
and
add
pop
add
mov
mov
adc
inc
std
xchg
push
push
lock
adcb
rolb
rclb
pop
call
or
jbe
dec
call
or
adc
sub
push
movsb
loopne
dec
ds
push
and
mov
adc
xor
xor
cmp
iret
arpl
mov
jl
mov
sbb
shll
ja
dec
xchg
outsb
sub
inc
repz
pop
mov
test
inc
lea
push
xor
jmp
addb
cmp
cmp
adc
jmp
push
dec
fildl
sub
mov
inc
add
xchg
xchg
add
loope
add
or
outsl
cld
mov
push
or
and
jle
pop
ret
and
ret
sbbb
and
or
and
dec
or
and
or
adc
pop
xchg
movlps
xor
jmp
and
outsl
xor
adc
xor
inc
pop
mov
and
jle
jb
or
sbb
push
or
ret
xor
pop
jmp
and
push
rcrl
adc
dec
test
push
adc
aaa
jmp
das
dec
jne
pop
ljmp
inc
dec
mov
xchg
fs
mov
setbe
inc
inc
and
popa
mov
xchg
sub
not
push
mov
out
adc
scas
xor
cmp
dec
jp
xchg
call
pop
and
pushf
and
jecxz
xchg
cltd
cmp
inc
sbb
ja
add
sbb
pop
cltd
aaa
inc
ljmp
xor
xchg
lds
xor
je
cmp
mov
cmp
imul
dec
scas
sub
or
shlb
lahf
inc
mov
iret
mov
mov
jbe
or
pop
loop
imul
fs
xchg
cwtl
push
jmp
dec
lcall
loopne
fs
pop
lods
inc
cld
push
pop
push
pop
sbb
sarl
jg
orb
pop
mov
data16
mov
mov
mov
xchg
out
pop
lock
mov
sbb
adc
mov
add
leave
add
add
push
call
sbb
adc
insl
call
mov
push
or
clc
std
push
cmp
or
add
xor
jge
lock
sbb
ja
mov
xlat
imul
lock
sti
inc
xor
adc
mov
inc
scas
mov
pop
decl
lods
mov
lock
lea
push
mov
popf
cmp
leave
adc
sbb
xchg
push
mov
into
aaa
call
enter
mov
out
dec
adc
jb
add
loope
sbb
sub
inc
push
aam
iret
bound
fiaddl
ret
cwtl
push
cmpl
add
int
or
orb
cmp
inc
xchg
or
lea
rclb
or
xor
and
out
lret
mov
xchg
filds
add
stos
push
inc
in
push
xchg
inc
xor
shl
dec
clc
jne
daa
mov
push
adc
push
push
pop
mov
inc
pop
mov
pop
jae
mov
pop
pop
mov
xlat
inc
mov
and
adc
adc
push
cs
push
in
mov
pop
pop
les
jmp
or
or
mov
add
adc
mov
inc
call
les
adc
jne
ss
js
dec
pop
pop
clc
inc
adc
adc
addr16
push
add
or
call
adc
jmp
dec
fwait
adc
add
dec
out
mov
xchg
lahf
push
clc
and
xchg
adc
sbb
sub
add
push
push
mov
push
and
push
das
lods
jp
mov
push
addr16
sbb
adc
push
adc
fs
adc
cmp
loop
or
add
pop
cmp
add
ja
data16
and
adc
mov
jbe
sub
sub
add
pop
push
cmp
sub
rolb
cli
and
mov
push
xchg
xor
xchg
xor
stos
dec
xchg
mov
je
inc
jmp
sti
or
mov
ret
cmp
movb
ret
dec
sub
inc
lods
pusha
movsl
inc
adc
push
sub
rorb
test
mov
dec
test
imul
xor
xlat
mov
addb
add
addr16
popa
mov
cmc
inc
inc
adc
mov
mov
lret
sbb
cmp
inc
out
mov
iret
push
jns
jle
sti
push
add
push
repnz
inc
and
adc
pushf
and
shr
cmp
sub
ret
and
inc
enter
lods
pop
mov
xor
push
bound
sbb
rcrl
or
in
fdivs
jnp
fadds
dec
push
cmpsb
popa
xchg
dec
popf
push
mov
cs
add
shll
adc
cmpb
jmp
or
or
and
mov
xchg
and
xorb
cmp
adc
adc
data16
inc
mov
shrl
shlb
movaps
xchg
add
pop
push
add
jns
fs
sbb
and
shll
and
cmc
loope
cmpsl
and
fsts
sbb
data16
popa
das
jb
push
sbb
jae
sbb
mov
loope
mov
pop
mov
adc
enter
inc
repz
adc
mov
push
mov
xchg
add
mov
and
cmp
jne
ja
xor
push
mov
push
pop
iret
xchg
and
lods
je
sub
pop
cmp
out
add
sub
xchg
inc
or
pop
mov
add
mov
cmp
jne
xchg
outsb
dec
mov
ljmp
pop
shl
add
idivb
sbb
add
fmull
popl
pusha
insl
push
inc
das
leave
popa
nop
mov
pop
int3
adc
pop
int3
or
nop
mov
cmp
cmp
roll
sub
sbb
shll
cmc
test
or
lret
loope
sub
dec
popf
movsb
sub
cmp
xchg
dec
push
push
jg
add
push
push
dec
or
lock
xor
cld
mov
in
fcoms
cmp
pop
sub
popf
inc
dec
scas
or
repz
imul
test
xchg
add
and
sbb
loop
or
jecxz
aam
or
dec
or
clc
cmpsb
adc
subl
lds
and
push
jae
inc
sbb
inc
jo
mov
pop
cmp
and
imul
adc
sbb
mov
jecxz
call
cmp
cmpsl
jae
nop
adc
and
je
sub
cmp
add
or
mov
pop
and
xlat
or
adc
jp
push
push
xor
jg
mov
inc
call
bound
pop
mov
xorl
mov
sub
mov
or
inc
jmp
push
mov
out
cmp
test
call
sbb
lods
and
insb
out
sub
pop
push
insl
ficoms
mov
mov
push
aas
sbb
or
fists
add
mov
enter
add
ret
jg
xchg
mov
push
mov
fcmovne
cwtl
nop
stos
mov
mov
sub
orl
dec
lock
pusha
mov
jo
push
or
call
or
xor
mov
dec
pop
sub
mov
push
out
xchg
mov
dec
sbb
test
hlt
mov
mov
rorb
fsubl
in
dec
or
inc
dec
and
cmp
enter
mov
test
mov
nop
sub
push
xor
mov
sbb
cmp
sbb
mov
or
call
in
stos
iret
js
test
pop
fsts
mov
out
add
rep
add
push
wbinvd
sbb
push
add
cmpsb
jno
or
mov
adc
and
xchg
sub
cld
pop
push
push
or
inc
les
cmp
jg
add
and
nop
fwait
nop
mov
jno
sbb
push
push
test
xchg
fisttpl
and
xchg
repnz
jb
cmp
sbb
mov
and
xchg
cli
enter
jb
cmp
sbb
loope
inc
loop
jecxz
in
in
jno
out
call
inc
sub
ljmp
in
jb
cmp
sbb
mov
and
xchg
ror
aam
aad
cmp
sbb
mov
and
xchg
fcmovne
fsub
fnsave
cmp
sbb
mov
and
xchg
ret
enter
jb
cmp
sbb
mov
and
xchg
lret
enter
jb
cmp
sbb
mov
and
in
jb
cmp
mov
enter
jb
cmp
shlb
push
les
adc
push
mov
xchg
frndint
outsl
lahf
ds
mov
and
or
and
dec
in
cld
in
mov
leave
push
ja
xor
xor
or
arpl
je
or
aam
pop
cmp
adc
icebp
dec
push
js
inc
dec
gs
push
jo
or
and
push
adc
add
dec
or
jb
rol
pop
pop
enter
and
mov
pop
or
dec
outsb
mov
in
pop
fs
test
sub
je
add
insb
inc
fdivrs
push
xor
cmp
test
enter
mov
cltd
push
inc
mov
iret
push
adc
adc
mov
or
imul
add
jp
adc
insb
xchg
add
outsb
addr16
scas
pop
movsb
sub
or
jbe
add
outsl
ja
sub
inc
fs
and
or
dec
pop
sub
testb
mov
cld
js
sub
fs
jo
mov
pop
enter
shl
test
and
or
call
sub
xor
pop
fs
sub
push
outsb
push
fs
adc
mov
fmuls
push
je
repz
pop
pop
movsl
or
or
xor
xor
mov
test
je
jo
jo
mov
adc
sbb
outsl
mov
push
int3
pop
mov
sub
mov
arpl
mov
insb
popa
xchg
mov
xor
dec
mov
icebp
push
jb
jns
pop
gs
nop
test
test
push
inc
push
je
arpl
addl
loopne
jo
fdiv
xchg
jo
inc
imul
cmp
int
daa
enter
movlps
sbb
in
mov
xchg
adc
enter
or
ret
popa
dec
outsl
fs
and
push
and
nop
jo
inc
bound
push
mov
pop
hlt
and
stc
jo
dec
or
lods
jg
lods
push
inc
int3
mov
subl
adc
jo
les
aaa
xor
cwtl
push
dec
cmpsb
or
or
jae
inc
jne
mov
and
cmp
call
add
fs
mov
ljmp
pop
or
pop
jp
xchg
lods
pusha
pop
lret
mov
mov
imul
cld
xchg
mov
insl
push
adc
test
insb
jne
movsb
movsb
test
out
sub
mov
cmpsl
aaa
shlb
adc
jb
rcrb
lock
and
sub
jmp
pop
out
daa
lret
dec
loop
test
js
repz
jne
mov
jbe
xor
inc
inc
ret
or
lock
add
sarb
fsubr
fldenv
movsb
mov
inc
dec
les
push
push
xor
idivl
popf
jecxz
cwtl
cli
cmp
add
pop
mov
adcb
pop
pop
sub
in
add
add
mov
rcl
add
mov
dec
jne
push
insb
dec
xor
fldenv
sahf
pusha
xor
and
push
imull
xchg
call
inc
or
sub
push
ret
push
movsl
in
add
push
pop
mov
or
push
mulps
mov
jnp
xor
sbb
imul
add
or
sbbl
faddp
setb
jmp
mov
dec
add
icebp
dec
int
jecxz
stc
mov
enter
mov
cs
rcrl
loope
lret
mov
ret
dec
ret
inc
rcrb
adc
lret
push
iret
dec
lret
pop
mov
or
and
pop
add
movsb
xchg
mov
fmull
stos
ret
pop
aas
es
cwtl
and
pop
loopne
or
push
lock
scas
cwtl
push
add
ret
xchg
shlb
cltd
and
sub
xor
clc
mov
adc
cs
jg
mov
pop
ljmp
cmp
call
dec
push
mov
add
jne
dec
mov
or
ljmp
jl
cmpb
or
push
mov
jmp
xchg
es
push
pop
jne
mov
or
xor
dec
mov
jl
push
and
inc
push
xorl
ds
xor
push
dec
lret
push
jns
push
lods
test
push
mov
pop
pusha
rcl
cmp
push
lock
lea
mov
test
xchg
sbb
pop
cmp
movsb
lret
test
filds
xor
lea
push
and
hlt
inc
clc
cld
call
jns
mov
pop
push
lock
sbb
cmpsl
push
jp
cli
fstpl
pop
and
in
dec
or
sbbl
and
xchg
adc
lock
nop
mov
movsb
xchg
loop
popf
rclb
lds
sub
test
les
cli
adc
andl
push
push
bound
sub
not
jns
pop
pop
jb
clc
shr
dec
cmpsb
std
sbb
xor
push
push
jns
lret
dec
push
pop
sbb
sub
push
sub
mov
xchg
bound
movsb
pop
xor
or
mov
cmp
popa
loope
jp
sub
mov
sbb
or
push
add
je
fildl
push
inc
fld1
jl
nop
call
das
inc
aam
xchg
clc
mov
or
add
je
inc
mov
cmp
dec
repnz
fcom
xchg
or
in
pop
sbb
testb
imul
jno
sub
xchg
jecxz
add
add
fistpll
mov
adc
lea
test
pop
cmp
or
sub
or
cmp
or
sbb
call
dec
pop
mov
jns
inc
andb
lret
xchg
cmpsb
or
js
push
into
ljmp
jge
xchg
hlt
cmp
or
je
popf
jecxz
mov
aaa
pop
stos
shlb
lahf
push
sub
jmp
das
repnz
rorl
incb
out
sub
fsubrl
push
xor
xor
and
lods
jmp
les
mov
cs
mov
fsubl
fsubs
xor
mov
push
xorb
out
or
dec
loop
loop
dec
je
xchg
or
mov
xchg
stos
push
cmpsb
xor
cmpl
push
or
mov
arpl
pop
mov
sahf
jmp
cmp
test
push
xor
xchg
ja
imul
movzbl
rolb
incl
inc
xchg
in
jmp
in
cmp
fsts
decb
nop
ret
addr16
sbb
je
test
fiadds
mov
cmp
nop
push
pop
xorb
xor
in
push
pushf
push
add
and
lds
rorl
xchg
or
and
xchg
adc
xor
or
in
rorb
xor
nop
ja
call
fcompl
shl
cld
jno
repnz
faddl
xchg
andb
addr16
stc
adc
dec
jg
add
repnz
test
or
push
add
inc
jmp
insb
inc
cmpsl
mov
jo
adc
insb
stos
inc
pop
enter
adc
add
ficomps
jno
cmp
adc
movsb
punpckldq
cmpl
jbe
sub
nop
add
xor
and
lods
add
enter
js
cmp
fldl
add
dec
and
dec
ja
insl
push
mov
call
add
mov
rorb
xchg
movsb
pop
and
sbb
or
cld
sub
mov
lahf
dec
cmp
icebp
pop
and
dec
leave
mov
or
hlt
jmp
add
jmp
jo
test
int
inc
je
jg
push
inc
fnstsw
fldl
add
adc
testl
add
adc
sub
and
cmp
add
adc
adc
or
mov
mull
mov
push
jno
xchg
mov
inc
iret
xchg
movsl
or
pop
ds
cli
xchg
ret
stos
xor
mov
pop
pop
ret
xor
sbb
lret
xchg
icebp
xchg
int
outsl
daa
jmp
sti
lret
push
adc
les
or
fdivrl
add
call
inc
add
jmp
mov
das
adcl
shr
cmp
inc
int
push
xchg
xor
mov
loopne
lock
test
inc
loop
psrlw
insb
pop
dec
cld
lea
inc
mov
lods
es
add
ret
jmp
aad
mov
mov
ljmp
inc
push
cmp
js
push
xchg
sub
xchg
push
in
dec
jl
jmp
mov
xor
stos
or
xchg
jge
lcall
push
sub
or
add
push
xor
fsubrp
repz
or
cmp
ror
jg
jmp
cmp
lock
pop
pop
pop
out
and
push
mov
push
sti
adc
mov
mov
adc
adc
repnz
andl
jle
dec
mov
test
dec
jge
add
xchg
ljmp
pop
in
jge
movzwl
sub
add
cwtl
pop
adc
ds
inc
mov
adc
mov
jmp
xor
xlat
cwtl
das
sub
adc
je
add
ja
xor
jle
mov
sbb
popf
and
pop
or
sbb
decl
dec
gs
pusha
inc
jmp
aaa
test
dec
imul
inc
enter
or
add
jge
or
adc
jp
stos
jg
mov
aam
xor
sbb
jl
dec
sbb
xor
and
in
fxch
sbb
mov
inc
lea
loop
orl
inc
stos
or
pop
inc
clc
inc
sub
loop
xchg
pop
stos
xor
dec
js
push
dec
push
mov
sub
add
pop
add
mov
dec
sti
movsb
push
aaa
aas
mov
ds
adc
je
loope
mov
jmp
dec
out
inc
pop
je
push
mov
dec
add
inc
movsb
push
add
cmovnp
test
in
fdivs
jmp
or
das
jne
sahf
mov
add
dec
nop
or
jne
movsb
das
stc
in
ret
fsts
dec
adc
or
cld
cmovo
push
lret
cwtl
mov
xor
imul
dec
mov
cmp
je
push
push
fldenv
in
mov
or
cltd
pop
lods
popf
add
pop
cs
loop
pop
push
or
aam
icebp
mov
and
outsb
inc
add
pop
out
sub
jne
push
sub
add
test
sub
sbb
je
sub
cs
cmp
fisubl
adc
xor
daa
sub
in
sub
xchg
call
cld
es
test
call
ss
pusha
lea
pop
or
data16
xchg
mov
and
cmp
or
fs
adc
xchg
or
add
sbb
inc
in
mov
cs
sbb
adc
sar
inc
xchg
inc
mov
pushf
in
fabs
dec
lods
call
jl
xor
mov
jl
fstsw
mulb
inc
pop
pop
xorb
les
jne
push
cli
add
mov
inc
es
dec
add
call
sbb
add
sahf
add
xor
stos
sbb
clc
add
or
rorl
push
mov
dec
add
cmp
jae
cmpb
cld
and
add
or
add
ja
jmp
movw
gs
and
andl
cld
push
or
fadd
ljmp
add
je
out
xchg
ficompl
pop
adc
add
imul
fadds
test
or
loop
orb
sub
sub
fidivl
repnz
push
inc
rorb
je
push
sbb
fildll
cli
mov
dec
or
add
mov
push
imul
or
add
mov
sub
jmp
add
jne
dec
loopne
jmp
test
add
push
and
sbb
and
xchg
inc
ljmp
sub
movb
adc
aas
in
idivl
cmp
pop
call
sub
push
mov
xchg
xchg
cmp
in
cmpsb
add
call
sti
xor
or
and
add
pop
xchg
stos
or
loopne
mov
frndint
ret
mov
shl
testb
nop
push
add
icebp
xorl
jo
insb
cli
popf
push
inc
inc
imul
dec
sbbl
inc
out
sbb
fadd
in
data16
jge
or
mov
cmpl
add
or
sti
sbb
and
pop
inc
ja
bound
push
int3
lods
data16
pop
dec
incb
ret
jmp
sub
or
shll
icebp
insl
adc
mov
scas
sub
push
inc
mov
inc
stc
std
repz
or
and
nop
sub
sbb
mov
pop
cwtl
js
add
mov
into
push
imul
pusha
test
jne
mov
sub
or
add
pop
jbe
and
adc
mov
dec
hlt
shrl
add
pushl
xchg
push
or
adc
enter
dec
in
test
cld
dec
mov
sub
or
and
jmp
rolb
xor
push
in
dec
mov
mov
add
jl
shr
pushf
rclb
sbb
in
dec
adc
in
ret
mov
add
lods
mov
xchg
pop
in
sbb
sub
imul
xor
movzwl
mov
add
shl
scas
push
and
sub
fs
pop
stos
adc
decl
push
ret
mov
and
dec
fwait
sub
xchg
cmp
ss
adc
xor
decl
add
mull
and
hlt
in
ret
fs
inc
push
xchg
mov
cmp
or
jno
mov
or
xchg
sahf
adc
les
cmpsl
and
push
in
dec
push
inc
sarb
stos
or
jbe
cwtl
xchg
sbb
icebp
xchg
fwait
leave
push
sbb
les
decl
insl
inc
xchg
push
cmp
shr
or
inc
jle
pusha
icebp
dec
lea
adc
jb
dec
adc
mov
push
push
mov
push
aam
dec
and
add
add
push
pop
clc
jae
jmp
jmp
xor
mov
fs
mov
insb
sbb
dec
push
add
push
daa
mov
jno
inc
jbe
fistpl
mov
push
es
aam
adc
or
shl
insl
lock
inc
sbb
ret
int
hlt
push
hlt
out
cmpsb
les
adc
cmp
mov
inc
sbbl
pusha
jne
sub
popa
ds
insb
and
pop
add
stc
lods
fcompl
mov
jno
pop
dec
in
scas
jno
dec
test
push
fnstcw
test
jae
jmp
jo
or
xchg
inc
std
adc
lds
jecxz
mov
add
and
add
negb
jle
je
or
movsb
pop
adc
adc
or
and
mov
movsb
int3
jns
loope
jge
nop
leave
mov
dec
sub
inc
decl
dec
scas
ret
sahf
rorl
push
add
popf
rcll
shlb
fistpl
xchg
jbe
lock
jae
test
popa
push
inc
aam
mov
js
dec
pop
fcmovnbe
in
adc
push
cmp
jb
dec
fnstcw
add
test
push
push
add
mov
push
lock
push
add
jne
sub
sub
movsl
sub
jp
jb
xchg
pop
in
xor
pop
ds
mov
sub
mov
inc
xor
push
mov
or
and
lret
jecxz
addb
inc
pop
scas
sbb
fisubl
repz
fsubr
push
and
inc
hlt
sbb
and
push
lcall
xor
loop
adc
cmp
jle
shr
ss
push
push
inc
adc
bt
cmp
cmp
mov
lret
push
loopne
cld
jmp
jo
lea
lahf
nop
sub
dec
mov
ds
stos
andb
add
adc
sub
push
ljmp
xor
popa
pop
je
add
nop
aaa
mov
jmp
add
test
mov
jmp
ficoms
pop
je
in
mov
xor
jno
xchg
hlt
adc
jns
loope
cmp
sub
cmpsb
and
jb
sbb
mov
popf
into
pusha
or
cmp
and
pop
push
lea
dec
push
std
dec
and
inc
das
jne
push
cwtl
out
inc
std
mov
aam
and
inc
jne
pushf
sbb
mov
cs
sbb
fcomps
xor
add
sbb
inc
and
incb
sbb
mov
xchg
test
iret
and
daa
aaa
imul
sub
mov
push
lcall
cs
aad
inc
gs
cs
ret
mov
inc
add
xchg
aas
cwtl
test
xchg
and
lods
out
adc
and
or
fldcw
es
mov
push
sbb
lahf
add
xchg
les
push
nop
mov
lea
push
push
jecxz
xchg
and
pop
jbe
mov
jbe
push
cmpsb
add
or
int3
pop
dec
sub
dec
sbb
mov
pop
hlt
jl
aam
push
inc
sbb
pop
sbb
inc
inc
and
push
or
int
mov
push
lret
pop
test
jmp
jae
dec
addr16
push
sahf
jae
or
cmpsl
sbb
aas
ss
cmp
inc
and
aam
sub
and
pop
dec
hlt
xchg
arpl
sub
ljmp
repz
rcrb
add
jmp
or
sub
mov
xchg
inc
mov
ja
test
bound
or
push
daa
pop
fisttps
cld
dec
ret
cmp
lods
inc
ja
push
dec
push
leave
mov
int3
sarl
icebp
je
sbb
ret
out
push
lret
xchg
leave
lods
jnp
js
clc
mov
into
jp
cwtl
popl
push
lea
push
or
add
arpl
ljmp
xor
call
lock
inc
lock
push
jg
or
xor
hlt
inc
mov
mov
or
clc
jle
sahf
inc
push
inc
or
jmp
scas
addb
pop
inc
fnstcw
jo
test
mov
pop
pop
mov
sub
jns
or
pop
dec
push
sub
sar
lret
or
add
ljmp
sti
dec
nop
push
jbe
sub
xchg
or
mov
in
lea
dec
cmp
je
pop
and
nop
ret
lcall
sub
push
cld
jl
shlb
cmp
dec
or
jp
dec
shrl
and
das
jmp
inc
pop
mov
sahf
jmp
cmp
in
jg
icebp
divb
pop
push
lock
dec
nop
in
dec
push
loopne
cltd
scas
sub
test
dec
pop
mov
xchg
fcoms
adc
cmp
insl
xchg
lock
xor
xor
mov
sub
cmpsl
cwtl
pop
call
lcall
xchg
jae
adc
or
ret
push
push
inc
fsubrl
jle
pop
sub
inc
push
and
jmp
sbb
aas
loopne
aas
aaa
and
xor
jmp
das
and
andl
add
fwait
add
push
add
or
or
or
or
pop
nop
int3
movsb
xchg
out
jl
test
nop
inc
pop
lock
mov
nop
lods
enter
sbb
cltd
fistpll
shlb
pop
cld
cmpl
jg
inc
xchg
inc
loopne
bound
mov
sbb
jge
xchg
scas
test
test
fildl
xchg
cmpsb
in
mov
sub
inc
mov
lea
fsts
jb
jns
push
and
mov
shlb
ror
movsb
adc
daa
shlb
and
mov
mov
mov
pop
cltd
cmp
pop
cltd
xchg
xchg
or
test
mov
and
adc
or
sub
out
jl
mov
xchg
xor
xchg
jl
aad
mov
imul
adc
cmp
rcrb
ret
ljmp
test
or
mov
push
or
fs
push
push
ja
js
inc
lock
mov
icebp
aas
adc
push
rolb
mov
jge
lcall
push
mov
sbbb
in
mov
cwtl
cs
xchg
insb
pop
inc
xchg
pop
fistl
testl
jge
push
cmpsl
lcall
mov
xchg
cwtl
or
lock
mov
xor
je
mov
aam
push
nop
mov
sbb
or
or
sub
les
inc
or
pushf
leave
sub
push
inc
mov
cwtl
test
xor
leave
adc
test
add
and
pop
test
mov
bt
cs
adc
or
shrb
jne
adc
xor
aam
and
or
push
or
push
adc
cmp
fcmove
mov
cwtl
dec
cli
clc
test
data16
pusha
xchg
clc
xor
lret
out
or
jnp
mov
jnp
add
or
adcl
jb
push
inc
sub
enter
cmpb
or
incb
fadds
add
add
adc
inc
add
mov
or
cmpb
mov
cmp
jecxz
adc
pop
adc
push
fimuls
cmpsb
mov
sub
inc
sub
pop
fwait
dec
mov
pusha
sub
mov
incl
xor
dec
lock
mov
jae
sbb
cmp
and
sub
mov
jne
mov
mov
mov
clc
nop
cmp
xchg
insb
lea
add
je
add
inc
sbb
movl
hlt
sbb
mov
inc
mov
push
inc
inc
hlt
and
hlt
xor
adc
out
cs
fsubs
orl
jge
bsr
stos
adc
adc
je
and
add
imul
sub
pop
call
jb
inc
mov
stc
sahf
push
and
or
fcompl
ljmp
or
cmp
xorb
stc
movsl
data16
or
pop
ja
and
fadd
push
in
sarb
adcb
add
jae
inc
test
or
adc
xorl
adc
mov
sbb
add
mov
sub
rol
lcall
inc
or
mov
movsb
cltd
dec
mov
cwtl
or
adc
test
xor
pop
fs
dec
and
ljmp
jne
mov
pop
mov
or
add
xchg
ret
mov
or
jno
sub
cmp
xchg
les
cmp
lea
adc
mov
addb
and
push
and
mov
cmp
or
ss
rcrb
jbe
or
test
inc
sbb
adc
push
mov
adc
mov
mov
pop
sti
jne
jle
dec
je
adc
jne
dec
push
inc
sub
test
call
arpl
and
adc
dec
in
pusha
jge
dec
adc
push
dec
enter
lock
daa
fs
clc
fwait
mov
sub
sub
ljmp
loop
jmp
pop
mov
sub
nopl
adc
mov
dec
in
outsb
sbb
and
aaa
nop
test
fmull
add
xchg
pop
mov
sbb
sarb
mov
adc
adc
mov
ret
mov
mov
sub
xor
add
and
push
or
mov
add
adc
syscall
push
int3
mov
mov
or
mov
enter
or
test
push
or
les
aas
and
les
adc
bound
hlt
mov
insb
adc
int3
sti
xchg
cld
push
hlt
mov
inc
mov
jb
ss
stc
inc
or
dec
out
cmp
ljmp
push
outsl
jmp
enter
cmp
fs
popf
jo
pop
insl
push
add
fs
mov
popa
insl
or
jo
inc
dec
push
xor
jb
loope
adc
and
cmp
cmp
into
test
testl
add
adc
data16
mov
push
lods
outsb
push
xchg
lds
push
call
pop
xor
jl
mov
pop
or
mov
dec
cltd
movsl
pop
les
imul
push
jo
arpl
inc
dec
js
movsl
push
mov
or
ret
xchg
lock
inc
fmuls
xor
pusha
rorb
enter
shrb
addr16
adc
xor
inc
lock
cwtl
cltd
fsubl
nop
adc
and
mov
mov
addl
and
and
inc
push
fmuls
inc
dec
mov
adc
and
dec
sub
cmp
adc
fs
adc
or
lcall
push
les
lock
sbb
aam
call
sbb
loopne
dec
jb
and
jb
and
ja
xchg
mov
rclb
dec
enter
sbb
les
or
rolb
mov
push
pushf
cmp
mov
orb
and
rcll
lods
sub
test
call
dec
je
mov
pushf
dec
adc
fs
dec
in
fs
dec
nop
or
adc
clc
pusha
xchg
mov
enter
sub
or
inc
cld
cmpsb
and
jl
cmpsb
or
js
mov
rcrb
cltd
or
adc
and
adc
cltd
js
adc
clc
cmp
cltd
sbb
enter
push
popa
js
mov
inc
mov
pop
jnp
ss
or
sub
cmpb
sub
xchg
icebp
mov
mov
pop
adc
xor
add
sbb
or
sub
mov
mov
inc
aaa
dec
test
nop
shlb
sub
adc
aam
dec
or
movsb
push
mov
or
cwtl
pop
xchg
or
mov
jl
mov
rclb
xor
out
adc
mov
mov
push
fimull
inc
aam
subl
mov
adc
sbb
mov
pop
xlat
loope
fimull
shlb
lods
xchg
xor
jno
cmpsb
lret
jb
and
jae
fldt
cwtl
loope
js
cmp
in
fcmovne
les
sub
add
pop
mov
fsubs
test
jbe
pop
mov
add
dec
mov
mov
xor
inc
dec
jne
jmp
inc
push
hlt
jns
add
push
aas
mov
in
fsub
cs
sbb
and
stos
add
xor
mov
std
dec
lcall
add
mov
test
daa
push
dec
sbb
dec
cld
js
cli
and
fxch
and
cld
or
testl
jmp
cs
lods
push
and
subb
sub
out
push
lret
xchg
cmp
hlt
jne
scas
shll
add
daa
dec
sub
leave
lds
mov
aas
daa
pop
pop
mov
jnp
and
adcb
adc
pop
imul
push
dec
lods
cld
lcall
xchg
test
adc
lea
pop
movsl
dec
shl
mov
and
mov
xor
clc
mov
adc
orl
enter
jo
pop
loopne
jmp
mov
add
add
xrelease
and
dec
dec
dec
movsb
xchg
jne
push
frstor
mov
lahf
mov
push
sti
dec
adc
lret
xor
inc
pop
jne
sbb
jmp
and
cmp
sbb
imulb
pop
fstps
roll
stos
pop
popa
inc
mov
ljmp
sub
mov
shll
add
push
std
xchg
leave
into
and
pop
mov
and
shll
push
jmp
push
es
cmp
and
add
loopne
rsqrtps
push
loope
dec
js
js
or
pop
or
outsb
xor
sbb
or
push
inc
sbb
sbb
sbb
sbb
push
loop
adc
sbb
xchg
sbb
and
and
push
test
and
and
adc
inc
push
mov
sub
sub
enter
push
adc
test
stc
xchg
sbb
inc
call
push
ret
je
rorl
call
mov
bound
inc
jp
sbb
imul
xchg
aam
ljmp
push
mov
sub
adc
dec
mov
mov
add
lea
xor
test
jnp
nop
mov
mov
sbb
mov
sub
cmp
mov
sub
push
and
data16
push
fidivrl
and
addr16
sub
mov
xchg
dec
sbb
adc
jb
xchg
xchg
push
jp
popf
test
mov
fnstcw
je
sub
cmpsb
fadds
in
sbb
dec
xor
ficompl
cmp
shlb
push
lret
xchg
xchg
std
lret
jp
movsl
adc
or
jne
sbb
cwtl
cmp
jae
jg
ret
push
nop
lock
push
sbb
or
push
inc
mov
mov
push
xor
shlb
jle
adc
add
dec
jne
jg
and
lea
mov
and
ret
test
inc
stc
and
or
mov
push
cmpsb
pop
shlb
stos
xchg
adc
and
or
add
push
adc
mov
dec
dec
inc
push
loop
stos
pop
adc
ja
popa
in
dec
xor
mov
mov
test
mov
mov
ds
or
inc
push
jp
popf
pop
pop
loope
in
or
mov
inc
sub
add
mov
xchg
push
movsl
push
adc
push
xchg
iret
cmp
mov
pop
pop
xor
xchg
insb
sbb
jo
adc
and
test
push
addr16
leave
xchg
xchg
dec
xchg
int3
inc
test
push
xchg
pushf
fs
xor
mov
loopne
or
outsl
xchg
sbb
sbb
pop
and
out
fadds
out
xchg
out
pop
lret
dec
aam
gs
push
push
dec
pushf
adc
jl
pushf
inc
out
leave
leave
push
aas
xor
movsl
jo
adc
and
loop
les
out
adc
and
loop
les
out
adc
or
and
jb
cmp
sbb
mov
mov
sahf
loopne
mov
cltd
or
sbb
mov
inc
test
mov
in
jb
cmp
push
pop
xchg
push
enter
jb
cmp
sbb
xchg
fst
das
cli
cmp
dec
ret
daa
cmp
push
xchg
mov
xchg
in
imul
pusha
popf
inc
mov
adc
cltd
mov
addr16
testl
leave
test
cmpsb
add
sub
cmpsl
mov
sbb
sub
xor
jge
xor
and
sub
aaa
sub
inc
rorb
pop
cmp
sub
xchg
cmp
repz
cmp
and
add
cmp
cmp
lock
xor
jnp
imul
ja
jae
add
mov
jmp
je
adc
mov
mov
or
cld
inc
js
mov
outsb
imul
jae
sbb
dec
push
in
or
jae
fildll
je,pn
adc
adc
and
int
sub
aam
in
jo
cld
mov
adc
push
out
add
jb
pop
inc
xor
pop
cli
pop
out
add
out
pop
dec
jne
mov
sbb
cmp
test
and
fsubr
dec
xorb
je
cmpl
jg
and
aas
aas
add
or
xor
and
stos
inc
cmpsl
sbb
adc
add
mov
daa
push
ds
mov
repnz
scas
cmpsl
cwtl
das
inc
mov
call
jge
jae
bound
adc
inc
icebp
adc
lea
add
or
cltd
inc
xor
xchg
xchg
xchg
mov
fwait
cmpsl
inc
mov
call
adc
adc
pusha
xorl
inc
shlb
scas
sbb
ds
call
jmp
lods
lods
orb
jecxz
dec
sub
cmp
push
movb
jae
xor
add
pop
stc
leave
popa
aas
pushf
pusha
push
dec
pusha
icebp
push
xchg
or
ja
xchg
push
xor
jmp
mov
pusha
cmpsb
lds
addb
push
inc
mov
inc
adc
add
mov
or
rorb
adc
sarb
je
push
sub
loope
pop
cmpb
mov
mov
push
lret
and
leave
lar
sub
fldl
push
mov
lds
into
cmp
sbb
add
inc
adc
mov
ja
or
add
rolb
call
add
sbb
pop
sub
mov
jl
sbb
push
ret
in
inc
pcmpeqd
dec
repnz
xchg
dec
sub
mov
test
cmp
pop
sub
inc
adc
and
and
or
cmp
push
and
out
cmpsl
adc
cld
sets
mov
xchg
sbb
add
repz
nop
mov
mov
xchg
mov
cmpsb
sub
add
jmp
loopne
and
mov
mov
cli
loop
shll
cmp
xchg
mov
cmp
or
pop
inc
cmp
push
lods
and
xchg
lahf
dec
es
adc
inc
cmpsb
lock
icebp
dec
testl
call
sbb
aas
add
adc
sbb
fsubrl
sub
es
dec
dec
dec
orl
adc
les
nop
or
scas
adc
pop
or
gs
push
adcl
aam
jnp
data16
clc
hlt
leave
inc
or
jmp
mov
and
mov
daa
or
push
mov
movsb
sub
adc
mov
dec
sub
xor
sbb
push
mov
in
sub
add
or
mov
test
test
and
push
lods
sub
or
mulps
insl
addb
fists
fcoml
daa
push
inc
sub
nop
fsubrl
mov
push
negl
clc
sbb
inc
xchg
xchg
sub
push
jne
mov
mov
push
push
les
cmp
sub
arpl
sbb
subw
lods
adc
xor
clc
mov
andb
rol
mov
inc
in
mov
adc
push
popf
mov
lahf
or
push
or
ret
mov
in
sahf
sbb
sub
fsubrs
lret
sub
jecxz
cmp
and
jns
dec
nop
pop
rclb
call
mov
stos
test
or
adc
ds
call
mov
inc
cmp
add
and
pop
xor
push
popa
jg
pop
push
popa
adc
bswap
push
sub
mov
jmp
xchg
inc
lea
add
repnz
and
cmp
ret
lods
std
adc
rorl
sti
sbb
int3
sub
fndisi(8087
movsb
outsb
dec
gs
jns
fbld
inc
mov
or
rorb
jmp
and
xchg
repz
dec
inc
cltd
outsl
dec
pop
or
add
je
sub
pop
mov
jo
movsb
sbb
dec
adc
lds
jne
add
jne
loopne
push
and
add
and
jecxz
push
and
lea
inc
inc
fisubl
fimull
lods
pop
fmull
dec
lcall
xchg
adc
xchg
and
aam
jno
fdivrs
sti
push
jae
pop
cmp
cmp
jmp
pop
scas
enter
adc
popf
mov
inc
inc
pop
clc
int
in
cltd
push
or
inc
fsubrp
and
mov
and
int3
pop
out
or
int3
push
dec
xchg
mov
cmpsb
push
loop
gs
daa
icebp
dec
loopne
enter
and
data16
rclb
xor
decl
mov
aam
push
jmp
mov
in
inc
dec
hlt
data16
xchg
xchg
adc
lret
subl
sahf
repnz
es
ds
bound
dec
mov
jp
mov
or
jne
inc
bound
roll
ljmp
and
shll
cwtl
and
add
out
jne
aaa
arpl
push
add
lret
enter
sub
xchg
inc
fldenv
xchg
and
mov
gs
and
shlb
push
lods
and
pop
adc
cltd
les
dec
sub
pop
sbb
adc
ja
ret
rclb
ret
in
adc
add
loop
cmp
pop
sub
mov
cltd
lods
movsb
xchg
scas
insb
ljmp
add
sahf
push
dec
or
clc
inc
dec
sub
leave
sbb
lods
testb
andb
dec
lock
call
mov
jp
push
or
mov
jbe
xchg
add
push
cmc
push
cmpsl
xchg
adc
dec
push
es
sbb
push
or
add
sub
or
add
push
adcl
cmp
sbb
xorl
or
ret
jbe
sbb
sub
mov
or
sub
or
rolb
and
shrl
pop
call
out
adc
push
lods
movsl
sbb
push
enter
or
push
sub
repz
adc
out
sbb
call
jnp
mov
and
ss
jb
add
cwtl
mov
mov
lret
jmp
or
cmp
sbb
iret
or
inc
fadds
or
push
repz
insl
add
jb
cld
sub
lret
inc
loopne
add
xchg
cmp
ljmp
push
movsl
xchg
push
jbe
addr16
xor
or
les
repnz
push
and
mov
adc
and
in
mov
pop
dec
sub
mov
jbe
ds
adc
adc
jmp
pop
and
pop
pop
cmpb
jne
movsb
push
add
sbb
push
jmp
mov
cmp
xchg
add
jle
lods
jmp
es
loope
cs
sub
lret
cmc
cmp
aam
jle
loope
jge
add
push
mov
daa
sbb
or
jmp
sub
ja
adc
inc
das
add
mov
jmp
stc
mov
sub
sbb
or
pop
ja
cmp
dec
xchg
and
sbb
or
or
loop
jne
dec
enter
push
cmp
scas
adc
and
push
inc
and
pop
fs
mov
jno
aaa
fidivrl
fmull
nop
ja
sub
decb
shl
out
jp
and
add
cmc
outsl
xor
loopne
shr
sbb
ret
dec
sahf
dec
jmp
sbb
lcall
and
pusha
push
adc
outsb
jb
and
xor
sub
and
inc
add
pop
imul
popf
push
enter
jmp
iret
and
int3
pop
jae
inc
jecxz
adc
cmp
je
mov
xor
mov
and
mov
mov
adc
dec
pop
cltd
mov
ja
cmp
ljmp
push
jmp
repnz
mov
dec
orl
push
adc
sub
sbb
adc
jne
adc
xor
pop
and
bound
sbb
mov
test
jae
fxch
test
clc
mov
es
std
xchg
hlt
push
add
push
or
aaa
ja
inc
insl
je
mov
pushl
nop
push
adc
cld
mov
ds
insl
ljmp
stos
mov
outsb
mov
test
jne
pop
mov
add
cld
popf
dec
jmp
jno
xor
xor
or
or
xor
mov
pop
adc
ljmp
pop
inc
mov
inc
imul
sbb
mov
and
push
int3
ss
sub
add
imul
dec
ds
mov
mov
xor
popa
stos
addb
pop
pop
arpl
xor
or
rolb
lret
cwtl
das
arpl
ret
xor
add
loop
dec
push
rcl
xchg
add
adcb
add
and
cmp
mov
push
xor
ret
pop
ja
inc
and
jmp
xorl
jmp
jo
sub
popf
subl
xchg
hlt
and
scas
movsl
into
mov
je
add
sbb
call
jbe
sub
mov
adc
mov
cs
dec
lods
sbb
inc
add
ja
mov
sub
out
mov
cmpsb
mov
and
push
jmp
inc
and
xor
xchg
dec
leave
mov
and
pop
sub
repnz
bound
pop
inc
sbb
ljmp
and
in
gs
pop
xchg
inc
jnp
or
dec
rcrl
cmpsb
enter
mov
or
shlb
int
out
jmp
adc
inc
pop
loop
enter
lds
pop
nop
dec
and
es
push
pop
add
shrd
fldt
je
inc
dec
inc
sbb
dec
mov
push
lret
stos
push
cmpsl
mov
cmpsl
mov
shlb
xor
out
into
and
dec
sar
mov
inc
add
push
dec
adc
mov
xor
outsl
xor
dec
aad
fwait
sub
or
fs
mov
cmp
mov
movsb
xchg
ss
in
mov
add
jb
add
call
cmp
jb
divb
mov
xchg
std
adc
jb
adc
add
subb
sbbl
js
outsl
hlt
push
adc
xchg
push
rcrl
lods
es
jmp
sub
xlat
pusha
add
inc
mov
xchg
sub
pop
mov
sbb
fdivl
loopne
cli
cmp
movmskps
pop
push
icebp
int3
and
push
add
mov
lahf
add
pop
sub
add
adc
movsl
jge
jb
mov
cmpsb
pushf
push
adc
sbb
shll
inc
int
cmp
inc
jno
xor
cld
jnp
push
rclb
lock
movsb
int
pop
adc
add
cmp
dec
inc
pop
sub
jno
dec
jbe
add
pop
in
and
xor
push
xorps
pop
lret
test
jmp
push
test
dec
add
hlt
int3
daa
andl
push
jb
fistps
dec
jl
pop
push
outsl
jl
inc
imul
loop
push
pop
cmp
fbstp
movsb
mov
lcall
test
xchg
test
or
jne
adc
jmp
nop
lock
nop
movsl
aaa
ljmp
je
mov
hlt
rorb
mov
sti
cs
inc
dec
or
and
cs
pop
in
cmp
fs
into
dec
dec
lret
inc
test
loopne
inc
bound
mov
sbb
and
jb
jno
push
xchg
push
nop
jnp
in
js
std
in
xor
mov
adc
add
mov
nop
sub
gs
and
xor
lea
cmp
xor
out
inc
and
push
sti
adc
xor
cli
outsl
mov
cmp
imulb
mov
inc
inc
xor
dec
add
pusha
xor
mov
jne
add
push
repnz
inc
stos
les
testb
lds
push
lea
call
cmp
je
or
inc
adc
nop
rolb
je
jmp
mov
add
mov
push
inc
je
adc
mov
or
inc
push
jne
mov
push
jmp
pop
fcoml
pop
repnz
test
add
adc
add
push
adc
push
ds
call
push
or
add
mov
mov
xchg
sahf
mov
mov
jp
inc
sbb
jnp
xchg
jmp
movsb
and
adc
mov
push
cld
inc
xchg
fdivs
and
xor
mov
dec
ret
add
inc
sbb
and
stos
je
stos
xchg
das
mov
ret
and
jl
ds
push
insb
cld
inc
mov
adc
aas
stos
in
sub
mov
inc
leave
adc
inc
sub
or
and
inc
xor
adc
mov
mov
enter
cs
jmp
mov
xor
sub
repnz
jne
mov
mov
adc
or
scas
fs
mov
mov
adc
ret
stos
push
andl
dec
add
sbb
enter
mov
jle
xor
stos
or
mov
pusha
pop
mov
outsl
mov
test
mov
inc
sub
xchg
dec
testl
dec
fisubs
mov
insl
fs
lret
shl
mov
bnd
ret
pushf
pop
mov
in
lods
push
das
add
mov
mov
push
adc
test
and
int3
lds
sbb
sbb
ret
cwtl
inc
insb
add
xlat
mov
lods
push
add
aam
jbe
aaa
and
dec
mov
invd
add
dec
mov
jae
xor
and
or
bound
jmp
mov
ret
adc
add
mov
mov
test
adc
or
dec
sbb
jge
xchg
or
shrb
je
sbbb
loopne
add
std
jnp
add
imul
mov
add
sbb
xor
mov
xor
and
adc
add
js
inc
jne
cmp
mov
inc
cmpsb
lock
add
dec
cmc
or
xchg
ret
xor
bound
push
test
mov
test
imul
sarb
jb
movb
out
push
pop
pop
es
out
ret
cltd
jae
stos
inc
mov
sbb
mov
movsb
out
add
das
mov
movsb
imul
adc
add
out
and
cwtl
jae
enter
mov
out
or
int
and
pop
aaa
jmp
les
adc
mov
adc
inc
test
imul
sarb
sub
cld
test
inc
je
cwtl
testl
test
cwtl
jae
mov
test
movsb
mov
cmp
ret
xchg
andb
ljmp
mov
ret
roll
or
popa
popf
insl
mov
mov
inc
or
cmp
into
adc
jl
xor
movsb
jl
add
iret
ficoms
jl
jne,pt
inc
cli
pusha
dec
mov
rolb
mov
xchg
jle
sub
roll
ret
mov
xchg
add
jl
inc
cmp
jle
jp
cmp
aam
jl
nop
mov
in
jl
ss
cmpsb
cli
add
jl
pop
lahf
jl
xor
gs
lods
les
rorb
fnsave
inc
and
popa
mov
ja
cltd
inc
ret
aaa
je
pop
add
or
jns
inc
dec
lds
xlat
cmpsl
and
out
dec
je
add
mov
pop
test
jecxz
adc
mov
int3
or
test
cmp
dec
filds
outsl
test
rcrl
test
dec
fildl
outsl
test
add
js
mov
adc
add
add
test
push
divl
xor
test
inc
jnp
add
mov
test
subb
xchg
scas
test
jbe
in
or
inc
push
or
push
inc
cmpsl
repnz
sbb
sub
push
mov
movl
orl
out
add
fsubl
mov
push
xor
push
sub
add
into
sahf
push
enter
inc
xchg
mov
rol
es
jbe
loopne
add
jl
push
jbe
dec
and
aam
adc
sahf
sub
cmp
ja
sub
or
add
std
mov
add
test
jmp
dec
and
mov
xor
cwtl
ja
mov
sub
inc
ret
cmpl
jb
cmpsb
cmp
jl
adc
sub
mov
mov
push
mov
pop
mov
push
or
inc
jo
ret
pop
imulb
cli
mov
and
in
mov
jg
push
clc
daa
jg
xchg
icebp
add
enter
inc
xchg
sbb
popa
or
xor
mov
jle
out
out
cli
hlt
add
scas
sub
push
mov
push
lret
push
mov
stos
icebp
pop
repz
and
aad
inc
xlat
mov
jl
bound
pop
add
xor
adc
cmp
lea
ror
ja
out
cmp
jl
mov
xchg
add
outsl
mov
fstpt
out
jl
aas
repz
rol
data16
or
fldl
adcb
xor
je
ja
add
mov
cmp
mov
lcall
jno
testl
stc
fisubs
xor
int
lea
clc
fxch
incl
jns
add
xor
cmp
inc
inc
inc
inc
inc
add
dec
dec
dec
dec
push
push
or
push
push
cli
push
pop
pop
pop
inc
mov
dec
dec
loopne
hlt
aad
rcrl
lea
adc
dec
fs
sbb
or
mov
dec
add
negl
sbb
jecxz
lods
inc
xchg
inc
pop
movsb
push
gs
adc
xor
mov
mov
or
and
or
insb
sbb
cmp
mov
inc
mov
xlat
adcl
push
out
mov
xchg
jg
cmp
jl
lret
sub
or
add
mov
mov
dec
clc
hlt
shr
shrb
fwait
test
cmp
orl
lret
jmp
inc
push
jne
mov
xchg
dec
mov
jb
roll
mov
sarb
mov
xor
dec
add
jne
inc
and
sbb
jne
repnz
and
out
dec
addl
jl
outsb
lea
aad
mov
jae
pop
dec
into
outsw
out
popa
mov
sub
xor
and
or
push
add
nop
lock
add
fstpt
jae
push
add
je
stos
add
dec
lea
push
xchg
call
push
enter
push
add
jae
in
push
push
sbb
sub
or
xor
test
pop
out
push
adcl
je
xor
ljmp
movsb
and
xor
cmp
rcrl
add
ret
repz
sbb
stos
cs
or
mov
push
inc
or
lds
push
push
xchg
push
mov
in
popa
jo
lods
rcrb
fmul
ljmp
clc
and
mul
sbb
pop
jae
inc
lahf
push
pushf
iret
or
push
pop
push
mov
dec
aaa
jne
inc
aaa
aas
movlps
stos
out
add
jge
rcr
mov
lods
mov
xor
jge
inc
in
cmovno
stos
movsb
mov
hlt
in
xchg
nop
dec
jge
lea
ja
xchg
dec
mov
push
mov
lock
sub
pop
pop
jge
jo
mov
add
adc
push
or
add
fcmovbe
pop
mov
jmp
pop
push
shlb
jge
pop
in
or
adc
sti
pop
cmp
out
lock
dec
inc
enter
push
cmp
mov
adc
repnz
push
enter
repz
pop
add
sbb
jb
dec
jmp
test
clc
nop
rcll
jmp
sub
sbb
xchg
pop
push
dec
lods
mov
inc
loopne
push
loopne
cmp
add
push
pop
xchg
sbb
mov
rclb
add
repz
cld
pop
lea
fdivl
dec
push
mov
lret
xor
push
sbb
mov
in
add
jae
nop
sbbl
lea
dec
jb
inc
out
iret
cmp
jbe
or
push
je
xchg
mov
xor
jns
sbb
out
sbb
test
push
fnstsw
xor
adc
comiss
add
inc
gs
mov
into
jmp
cmc
enter
roll
ret
jb
scas
dec
pop
hlt
fsts
or
je
cmp
and
sbb
pop
jmp
adc
and
dec
lds
xorl
nop
mov
sbb
push
inc
rorb
test
iret
add
or
into
lock
hlt
or
add
push
or
jg
jmp
mov
sbb
push
xchg
jmp
cmp
sub
lea
out
dec
inc
icebp
in
mov
and
add
cmp
es
pusha
movsb
sbb
jns
movsl
imul
push
cmp
je
dec
add
pop
ja
enter
or
shl
mov
mov
ja
nop
ffreep
lcall
or
or
not
xor
cwtl
xchg
pusha
clc
in
add
jae
lcall
xor
and
int
ds
roll
mov
dec
ljmp
lret
inc
inc
pusha
or
or
jne
push
dec
imul
xchg
mov
adc
test
test
jae
call
hlt
dec
mov
add
adc
pop
shl
lret
pop
adc
dec
mov
and
jp
out
daa
add
xor
adc
std
pusha
clc
sarl
pop
pop
adc
shll
inc
imul
cld
inc
fbld
mov
pop
or
push
adc
sub
imul
ljmp
lahf
iret
adc
cmp
pop
pop
sti
aas
inc
or
jbe
mov
and
or
in
mov
inc
mov
pop
add
iret
shlb
adc
sub
nop
adc
xlat
xchg
nop
jmp
call
dec
mov
sbb
push
nop
mov
lea
adc
sbb
test
and
mov
dec
mov
and
ficompl
mov
mov
dec
mov
adc
mov
mov
jge
test
xor
mov
dec
mov
stos
les
jb
or
cmpsb
mov
and
jno
add
test
mov
mov
xorb
ret
mov
imul
test
and
inc
sbb
mov
inc
imul
or
cmp
shlb
lods
data16
stc
mov
inc
int
cwtl
dec
shlb
xor
in
adc
or
repnz
mov
mov
test
ds
sub
jge
stc
push
hlt
in
mov
lds
mov
cwtl
dec
fidivrl
stos
push
push
inc
and
push
mov
lret
adc
cmp
push
mov
and
push
scas
mov
adc
mov
into
sbb
xorb
mov
dec
stos
jl
xor
or
sub
mov
ret
dec
push
push
rorb
fcmovb
movsb
mov
repnz
fcmovb
mov
xchg
mov
xor
fcmove
movsb
mov
test
sbb
cltd
mov
mov
iret
movsb
mov
das
lods
pop
push
or
adc
roll
mov
adc
and
popf
stos
roll
sub
pop
or
test
mov
xlat
push
test
mov
sbb
in
fsts
rorb
or
or
frstor
mov
leave
test
andl
scas
rorl
in
loopne
adcl
les
jb
or
loop
andl
lods
shll
in
in
adcl
iret
in
out
test
mov
call
adc
mov
movsb
test
movsl
push
out
jmp
or
adc
lock
push
add
sarl
sbb
in
jmp
cmpsb
add
pushf
or
es
cmpsl
push
lea
adc
bound
cmp
in
out
push
stos
inc
mov
pop
sub
adc
in
icebp
push
mov
adc
or
push
repz
lea
add
cmc
push
mov
and
shrl
mov
les
and
rclb
add
sbb
stos
std
mov
les
xor
mov
inc
mov
sbb
xchg
mov
mov
add
movsl
lea
in
dec
mov
fcmovb
repz
popa
nop
ds
pop
mov
stc
xor
mov
out
outsl
pop
pop
icebp
xor
and
dec
push
xchg
push
push
movsb
pop
mov
push
or
cmc
int3
enter
hlt
sbb
test
push
insb
lret
out
arpl
xorl
push
push
call
shlb
or
mov
aas
adc
adcl
xchg
call
inc
dec
jne
or
jp
push
sub
push
sub
int
stc
push
sub
mov
and
add
fisttpll
or
stos
je
mov
jl
sar
in
jae
xchg
mov
mov
xchg
or
adc
jmp
sub
xlat
leave
dec
mov
aad
mov
movsb
jne
cld
in
repnz
xchg
enter
cmp
enter
fs
mov
mov
or
sti
and
bound
push
mov
mov
lock
clc
mov
hlt
push
in
and
out
std
test
mov
or
push
adc
dec
or
adc
ja
ret
xchg
lret
cwtl
and
mov
push
dec
mov
push
inc
push
push
fcmove
and
add
inc
popa
add
xchg
mov
pop
or
adc
flds
cmpl
jne
scas
lahf
and
inc
movsl
xor
adc
or
test
test
shll
cli
adc
mov
sbb
lock
add
adc
add
dec
xor
sbb
addr16
fs
mov
jae
push
ret
cmp
dec
inc
dec
jne
das
mov
pop
loopne
xor
lea
jmp
adc
pusha
lods
push
sub
xchg
jle
sbb
push
lret
cmp
cmpsb
mov
dec
daa
inc
xor
mov
add
adc
inc
enter
pop
add
push
push
cli
or
or
push
int
test
and
xor
xchg
or
movsb
push
lahf
and
mov
pslld
or
push
and
or
lods
pop
stos
cmp
pusha
cmp
mov
cwtl
or
inc
and
sub
jp
and
jg
mov
push
call
sbb
adc
cmpsb
sub
xchg
mov
sbb
adc
adc
sub
test
push
and
inc
sub
arpl
gs
or
or
test
adc
inc
adc
push
jmp
xlat
mov
pop
jbe
push
inc
sub
jmp
xor
adc
adc
inc
push
jmp
mov
add
xchg
push
sub
pop
cmp
mov
mov
pop
loope
adc
pusha
aas
repz
xchg
and
imul
adc
test
test
sub
or
ficoml
rcr
push
lahf
push
movl
or
push
pop
movsb
or
add
mov
and
or
add
out
and
pushf
pop
popf
les
mov
push
push
mov
push
inc
add
movsl
sbb
call
or
jno
imul
inc
mov
inc
subb
mov
lcall
or
test
pop
call
outsb
adc
xlat
mov
mov
imul
cmc
fisubrl
push
ss
jns
jmp
dec
or
mov
xor
daa
je
leave
test
stos
leave
xchg
cmc
xorl
stos
pop
loopne
lahf
cltd
stc
xchg
cmp
inc
mov
in
push
mov
ret
or
jns
fisttps
in
fcoml
pop
dec
and
lret
push
out
loopne
xchg
or
test
daa
lret
test
mov
das
mov
pop
jecxz
xchg
rcll
cmc
mov
inc
add
and
or
and
pop
pushf
in
cmp
inc
rolb
jne
pop
ret
lea
dec
clc
sbb
xor
cmp
test
jne
jecxz
scas
test
sbb
jge
or
out
mov
jl
push
fdivl
loope
add
mov
sub
xlat
jbe
adc
adc
cmp
add
push
loop
xor
sub
fiaddl
and
or
sub
movsb
xor
fisttpll
in
push
push
pusha
mov
je
cltd
negl
inc
fs
pushf
cs
dec
push
stos
inc
test
push
sub
pop
adc
jno
push
push
push
pop
sarb
scas
push
add
lret
mov
cmp
dec
out
adc
and
pop
mov
add
inc
call
lds
cltd
push
in
or
js
adc
call
pop
fidivs
jmp
aaa
cltd
xor
inc
std
or
mov
or
ret
adc
mov
add
mov
mov
xor
cltd
mov
sub
popa
ja
pop
jp
sbb
filds
mov
adc
push
mov
aas
sbb
dec
lret
clc
push
pop
mov
jl
and
inc
fmulp
adc
pop
or
xlat
ljmp
je
loopne
stos
add
push
fisttpl
imul
jge
xchg
adc
shll
rclb
lret
ret
loope
jl
mov
bound
jge
push
decb
and
or
cmc
sbb
jo
incb
cs
arpl
jmp
mov
adcb
push
inc
pop
sarb
push
mov
dec
sub
sub
push
sarb
loope
inc
stc
push
sub
and
and
dec
add
mov
aam
cmp
pop
push
ror
or
mov
adc
push
or
add
cltd
stos
les
and
mulb
jg
lcall
outsl
ficoms
mov
mov
jb
jne
dec
int
or
rorl
scas
jb
push
jo
pop
xor
mov
jbe
adc
scas
mov
loop
adc
jns
and
jo
int
inc
or
xor
iret
xchg
and
xor
pop
xchg
or
ret
xor
xlat
xchg
push
sub
pop
add
push
pop
andl
in
call
insb
pop
fwait
hlt
add
rolb
jecxz
or
adc
fnstcw
mov
les
outsb
pop
and
loope
shll
adc
or
and
xlat
xchg
icebp
je
mov
sub
in
adc
mov
in
mov
mov
add
in
enter
push
scas
lret
push
adc
std
in
test
mov
arpl
add
push
mov
cmp
lcall
push
xchg
dec
dec
int
and
xor
call
jl
mov
fiaddl
mov
push
cltd
pop
pop
mov
adc
test
add
push
dec
and
push
stos
sub
call
lea
push
test
mov
pop
jmp
or
mov
mov
ret
cmp
cmp
outsb
adc
aas
in
xor
fdivl
fimull
inc
xchg
enter
mov
stc
and
out
sub
or
dec
out
inc
inc
fisttpl
inc
out
in
jbe
aas
xchg
xchg
movsb
enter
gs
fstpl
enter
push
rcll
faddl
aam
jg
loop
fsubrl
sub
and
push
pop
fidivl
fadds
sub
loopne
inc
and
in
pop
push
les
hlt
adc
mov
fdivl
dec
inc
mov
imul
add
icebp
sub
jmp
psubsb
pop
nop
mov
icebp
and
push
xor
cmc
ds
mov
mulb
sbb
add
addb
push
mov
sbb
stc
dec
add
adc
movb
sbb
xlat
mov
mov
add
jle
fcomps
inc
stc
mov
cwtl
or
aam
push
mov
pop
nop
orb
push
adc
push
adc
popf
in
scas
and
xchg
add
fidivrl
sbb
jns
aad
mov
xchg
and
sub
adcl
pop
inc
mov
enter
lea
loopne
test
es
push
dec
nop
dec
sti
xor
xchg
popa
lahf
ror
popa
adc
mov
push
daa
pusha
or
daa
repnz
inc
outsl
loop
xchg
jo
test
pop
inc
out
jbe
inc
add
add
inc
push
pop
xchg
jmp
jg
sbbb
shll
rorb
and
cli
mov
push
and
pop
push
jecxz
ja
mov
adc
mov
and
ds
add
mov
jmp
xor
rcll
dec
jo
ret
adc
add
enter
inc
pop
push
cmp
or
add
cmp
inc
and
aas
mov
mov
mov
xor
rorb
loopne
test
outsb
outsl
cmp
push
loop
out
rcrl
inc
out
mov
rolb
fiaddl
mov
or
mov
imul
or
ss
adc
jmp
in
mov
call
or
xchg
pop
pop
jmp
push
sbb
cmp
mov
aaa
fstl
sub
in
test
mov
sub
sbb
daa
iret
sub
dec
mov
sub
nop
cltd
push
pop
pop
mov
sub
push
jno
add
pop
dec
fcoms
or
mov
aaa
inc
std
jmp
mov
cwtl
lret
daa
jnp
mov
dec
push
insl
jo
jnp
mov
sub
clc
push
mov
push
push
dec
mov
cwtl
cmp
dec
in
fwait
je
mov
cmpb
push
lock
inc
inc
call
mov
ficoml
inc
or
les
mov
pop
in
repz
lret
push
inc
movsl
dec
iret
test
movl
in
in
mov
or
cmpsl
dec
xchg
inc
mov
adc
clc
jb
jo
jne
dec
aaa
adc
dec
or
fistl
pushf
fwait
or
inc
mov
pop
and
out
aad
sbb
or
mov
aad
fadds
or
push
lods
aaa
adc
adc
dec
xchg
sub
xchg
or
dec
jne
cltd
lahf
or
insb
scas
test
lods
cmp
sub
ja
cmp
mov
or
lret
pop
mov
mov
pop
jg
les
inc
lock
loope
fiadds
imul
sub
push
or
js
xor
mov
xchg
out
jns
mov
sbb
inc
sub
cmp
mov
fcoms
mov
sub
cltd
es
movsb
jbe
xor
pop
push
xor
add
nop
adc
add
stos
stos
cmp
adc
or
mov
rorb
lods
es
pop
add
dec
cltd
cld
popf
pop
es
outsl
add
adc
and
cmp
lahf
mov
ret
jne
int
lods
or
and
into
mov
or
sbbl
or
cmp
push
mov
push
sub
les
adc
ret
popa
cld
lock
adc
sub
sub
mov
addb
jge
and
xor
or
inc
into
cli
inc
add
popa
mov
je
push
push
inc
inc
fisttps
sub
mov
adc
or
mov
movl
pushf
add
sahf
jecxz
shrb
xor
add
xor
or
adc
push
cmp
pop
pop
out
dec
cmp
jo
ja
sbb
nop
andb
xor
mov
and
cwtl
dec
or
das
or
pop
movsl
adc
xorb
xor
mov
clc
push
mov
cld
and
into
pop
inc
or
adc
cmp
pop
ds
dec
lds
clc
lods
xchg
push
leave
push
shl
xchg
inc
adc
inc
les
add
xor
rorl
jmp
dec
xor
jge
pop
movsb
lock
add
inc
mov
cmp
inc
jmp
sbb
in
mov
sbb
inc
xor
inc
inc
xor
xchg
push
jbe
mov
clc
dec
clc
or
push
xlat
or
aaa
adc
mov
repnz
adc
mov
add
adc
cld
push
adc
xchg
aaa
xchg
adc
lret
adc
add
aaa
push
pop
adc
push
leave
or
je
sarl
cmp
loope
fsubs
je
pop
add
cld
lea
pop
or
xchg
and
mov
leave
jb
cmpsl
enter
push
into
in
push
xlat
dec
inc
jge
out
sbb
jmp
mov
popf
xchg
ret
jg
daa
aad
push
mov
and
daa
mov
xor
mov
or
xchg
pusha
imul
sub
lods
adc
add
cld
lds
dec
test
jl
inc
mov
test
jge
pop
push
sub
add
dec
jne
inc
mov
add
and
fidivrs
icebp
xor
pop
mov
rcrl
js
pop
je
or
and
call
in
cmp
repz
add
sub
add
cmp
jne
clc
insl
push
push
dec
xor
pop
cld
add
adc
add
xchg
sub
int3
pop
adc
enter
std
gs
sub
mov
jge
or
sub
jb
cmpsb
jge
mov
sub
sub
xor
push
push
pushl
nop
and
rcll
dec
fsub
dec
mov
jns
or
filds
je
push
dec
lds
adc
rcrl
xor
jmp
lahf
jl
xchg
jb
int3
push
lcall
inc
test
loopne
mov
or
adc
add
fdiv
stos
fwait
sbb
mov
mov
nop
xchg
jge
mov
mov
aas
dec
pop
push
shr
add
xor
push
push
aas
es
jmp
stos
xchg
pop
jg
cmpl
add
cmp
data16
inc
das
jmp
xchg
fiaddl
jne
mov
insl
xor
mov
js
pop
leave
push
test
xor
ja
pop
shll
popa
mov
xchg
push
and
mov
scas
push
inc
das
sbbb
mov
fldenv
lock
adc
inc
in
sbb
sbb
jge
dec
jl
test
je
repnz
mov
or
xorl
mov
push
pop
lods
xor
ja
jmp
sub
or
cmp
jae
mov
repnz
xchg
ds
add
enter
mov
xchg
push
xor
or
xor
and
or
inc
pop
lods
rolb
push
cltd
les
inc
in
pop
pop
cmp
pop
pop
dec
pusha
adc
test
jb
sbb
xor
nop
jl
add
test
scas
sbb
cmp
jl
sub
pop
cmp
push
jns
jge
fmuls
inc
dec
jne
push
inc
decl
lret
mov
adc
cmpsl
outsb
es
add
pushl
inc
scas
insl
sub
das
sub
pushl
or
push
mov
adc
cmp
mov
shrb
leave
in
je
fmuls
lods
jecxz
fiadds
loopne
lock
test
and
inc
xchg
push
invd
repz
inc
loope
gs
ds
xchg
jmp
test
add
call
test
iret
dec
xchg
push
loop
aam
sub
mov
jnp
insl
xor
mov
push
xchg
fildll
in
sahf
push
push
cmp
call
push
popf
adc
lea
aas
xor
enter
dec
sahf
push
push
pop
sub
pop
pop
adc
stos
jne
and
popf
push
jns
pop
xor
mov
or
adc
xchg
jg
pop
mov
call
jne
mov
nop
icebp
test
inc
icebp
popl
mov
pusha
cs
cmp
jg
daa
mov
test
push
sub
icebp
and
jmp
mov
shl
pop
repnz
push
and
cmpsl
sub
aaa
adc
cmp
pop
cmpsl
push
xchg
imul
rolb
and
mov
inc
out
sub
mov
decl
push
inc
mov
xchg
xchg
pop
dec
test
mov
imul
inc
jne
jecxz
and
jbe
ljmp
ret
jne
je
or
jns
lahf
fldt
cld
shrb
push
fadd
out
popa
or
mov
and
mov
adcb
and
sub
xchg
dec
int
lret
pop
xchg
xor
dec
repz
aam
sub
cs
cmp
imul
xchg
mov
hlt
xor
inc
sahf
xor
mov
cmpsl
push
xchg
subl
mov
and
rorl
sarb
loopne
pop
hlt
ljmp
add
jmp
jmp
scas
and
das
in
in
inc
jecxz
loop
xchg
int3
jl
mov
daa
outsb
arpl
test
mov
fs
imul
insb
gs
das
cmp
push
push
xchg
inc
ret
push
push
mov
sub
neg
mov
stos
lret
enter
popf
cmpl
inc
pop
or
mov
gs
or
cmp
jb
lods
push
cmp
sbb
ret
add
js
mov
pop
jb
fs
adc
mov
or
xchg
sarl
dec
jns
and
mov
mov
add
test
add
ret
call
adc
inc
loop
push
dec
adc
loopne
jmp
mov
pop
mov
jecxz
xchg
adc
push
das
xchg
pop
sar
jne
lea
lret
adc
jo
out
inc
insb
xor
or
and
arpl
adcb
sub
or
call
cmp
shll
jmp
cmp
jne
ja
loope
dec
xchg
cmpsl
push
fistps
add
sar
aas
ret
sub
sbb
xor
sbb
sbb
mov
outsb
and
sub
inc
add
add
test
or
xchg
mov
xor
je
dec
sub
add
pop
sbb
xor
or
jne
mov
and
pop
push
movsl
das
mov
pop
call
test
mov
fistpll
pop
test
fidivrs
jb
loop
ficomps
inc
jno
aas
pop
adc
jb
ja
fnsave
fnstsw
pop
mov
jl
xor
xor
jbe
xchg
xchg
inc
fnsave
fnstsw
pop
mov
jl
mov
divl
jns
stos
fimuls
enter
stos
fsubp
jp
and
repz
and
inc
jnp
and
icebp
mov
enter
pop
test
fistpll
and
jge
cmp
lea
jle
pop
xchg
inc
adc
mov
pop
xchg
cmp
mov
pop
mov
and
loopne
cmp
cmc
pop
pop
add
xlat
sbb
mov
mov
stc
add
and
and
cmp
rorl
cmp
ret
add
push
sbb
daa
ret
loope
out
test
and
adc
pushf
popf
cmp
or
adc
push
dec
out
mov
dec
jne
mov
int3
pushf
loop
movsl
test
or
adc
jb
daa
inc
clc
push
cltd
mov
mul
add
insb
lea
lock
jne
fdivl
xchg
cmp
test
cmp
inc
and
inc
mov
and
push
out
inc
cmc
mov
push
hlt
or
cmp
dec
add
sub
jb
or
jne
scas
xor
jge
scas
sbb
mov
in
dec
mov
inc
dec
mov
je
gs
mov
cmp
gs
loopne
js
and
mov
aam
movsb
or
stc
hlt
or
add
cmp
cmp
jae
inc
popa
push
cmp
repnz
loopne
das
cmp
jl
ljmp
sahf
or
push
xlat
sbb
or
cmp
fdivrs
sub
clc
adc
hlt
inc
xor
sbb
adc
mov
outsb
xchg
cli
lret
nop
jp
nop
mov
lock
cmp
xchg
push
jae
ja
in
pop
pop
xchg
pop
jb
pop
mov
adc
or
mov
jmp
inc
and
je
push
or
jmp
inc
xchg
xor
add
or
movsl
jae
jg
push
mov
adc
lahf
rorb
jne
out
lock
push
and
inc
les
iret
in
pop
mov
hlt
out
clc
jae
adc
aad
xor
cwtl
stc
ja
or
xchg
adc
push
sbb
cmpsb
sbb
pop
dec
add
and
add
adc
movsl
aas
cmpl
add
repz
lret
sbb
add
push
mov
push
mov
cmpl
mov
xor
and
orb
and
test
dec
mov
push
ror
cmpsb
xchg
mov
sub
adc
aad
popf
ljmp
jns
and
adc
and
movsb
pop
inc
frstor
dec
pop
dec
les
jne
sbb
inc
or
push
and
pop
and
mov
inc
push
je
pop
loop
arpl
loop
sub
leave
loop
jg
sub
es
sub
xchg
ja
dec
pop
stos
in
bound
fidivrl
inc
pop
push
mov
mov
inc
jo
hlt
push
sub
add
pop
aaa
jb
ss
or
jae
mov
and
add
js
and
daa
adc
xor
sub
or
unpckhps
andl
xchg
das
icebp
sub
dec
pop
shll
adc
push
add
sub
adc
fs
push
adc
xchg
popa
js
das
inc
lahf
push
mov
inc
in
push
mov
xchg
mov
lret
xor
call
cmpsb
sbb
xor
or
xchg
fisubl
loope
sbb
hlt
and
adc
or
or
and
mov
xor
adc
push
dec
bound
jo
fs
mov
xchg
mov
scas
dec
mov
inc
fsubp
mov
adc
or
inc
adc
sub
and
xor
cmp
inc
pop
push
jbe
jge
mov
and
leave
rorb
in
in
or
mov
adc
push
add
and
pop
loop
sbb
xor
dec
inc
xchg
inc
and
push
pop
mov
push
jno
js
jg
xchg
mov
inc
or
mov
pushf
mov
cltd
and
fistl
loop
or
inc
cmc
cld
mov
pop
xchg
dec
lret
sbb
mov
xchg
or
push
inc
pop
push
jbe
andb
lcall
mov
or
adc
and
dec
repnz
stc
dec
sub
dec
push
xchg
adc
sub
aas
dec
inc
xchg
dec
and
bound
ja
jle
test
mov
dec
mov
and
test
scas
mov
mov
dec
rclb
out
mov
adc
add
pop
loop
and
mov
adc
and
dec
push
xchg
bound
push
xor
pop
mov
xchg
sub
xchg
xchg
cwtl
and
xchg
dec
fs
mov
xor
into
sub
adc
ret
xchg
xchg
or
mov
xchg
pop
add
adc
out
push
mov
push
lods
fistps
pop
cli
dec
movhlps
add
sbb
xchg
daa
out
push
cltd
xor
pop
dec
xor
mov
sbb
std
dec
or
daa
popf
stos
sub
sub
sub
cmpsl
pop
stc
add
test
into
sub
loop
dec
push
mov
pushf
shl
add
cmp
mov
jg
je
fadd
nop
rcll
xchg
xchg
add
cmp
or
push
xchg
push
and
pop
bound
jge
adc
ljmp
nop
push
inc
or
jmp
and
inc
addl
sub
adc
and
dec
sub
push
sbb
push
dec
or
sti
add
shl
cmp
cli
xor
or
aaa
jecxz
sub
shlb
popf
gs
test
sbb
adc
dec
scas
sub
leave
shrl
fmul
mov
cmpb
scas
sar
popa
add
inc
push
cmpb
push
jo
inc
inc
dec
aaa
push
or
jae
mov
mov
loop
adc
push
xchg
lods
pop
push
orl
sbb
insb
gs
push
mov
jnp
mov
inc
cli
bound
jne
inc
jb
popa
imul
inc
jb
sbb
inc
jo
outsb
imul
jge
cmp
ja
stos
push
movsl
or
int
adc
cmpsb
jae
push
repz
sbbb
xor
xchg
xor
mov
sar
movsb
add
ret
pushf
sbb
xchg
pop
xor
rol
loopne
cmc
ret
sarb
xchg
adc
pop
pop
ds
sub
and
out
inc
jp
push
into
cmp
ficoms
inc
ret
or
adc
adc
inc
cmc
adc
inc
and
or
xchg
cmp
or
in
jg
and
add
mov
cmpsl
adc
or
push
adc
adc
sti
adc
lret
xchg
stos
ret
sub
dec
inc
rorb
xor
and
js
sarl
adc
aaa
test
add
stos
sub
test
sub
dec
fnsetpm(287
pop
xchg
xchg
lret
push
js
mov
hlt
test
push
cltd
fwait
sub
adc
cwtl
cmpb
cmc
mov
push
add
or
or
push
dec
and
nop
or
adc
and
adc
sbb
jno
adc
outsb
inc
push
imul
imul
inc
xchg
push
push
dec
out
pop
nop
dec
mov
cld
cltd
ret
dec
decl
push
push
add
adc
xor
or
or
push
cmpsl
push
aas
inc
and
out
jle
inc
sbb
sbb
pop
xor
or
cmp
test
xorl
adcb
hlt
out
mov
cs
pop
enter
and
cs
push
cmp
and
dec
cmpsb
add
aaa
das
xlat
adc
divl
in
sbb
pusha
pop
push
cmp
ret
dec
xchg
adc
mov
and
arpl
icebp
test
orb
cmc
enter
sub
xchg
and
std
xor
add
or
xchg
push
pusha
inc
cld
enter
adc
push
inc
js
clc
pop
enter
xchg
das
les
test
imul
sub
fidivs
outsl
mov
ss
loop
orb
int3
dec
or
cld
popa
push
sub
mov
pop
pop
mov
sub
call
pop
lret
je
sbb
jbe
inc
mov
sbb
sub
push
cmp
dec
mov
push
nop
clc
call
call
fists
inc
pop
and
adc
or
pop
push
scas
mov
hlt
pop
adc
and
or
mov
dec
shll
xchg
mov
scas
mov
mov
daa
fstl
movsl
mov
nop
inc
push
adc
pop
pop
stos
adc
sbb
and
lahf
aas
xchg
and
insb
add
in
sub
sub
push
lock
lds
dec
and
mov
mov
aad
ret
orl
xchg
add
adc
push
jne
inc
push
add
mov
mov
out
sbb
mov
xchg
and
sub
and
shll
jle
jp
cmc
or
fildll
jns
dec
push
and
xchg
in
push
ret
pushf
sub
daa
push
enter
ret
call
push
lret
jns
or
sahf
push
push
xchg
sub
movsl
sbb
push
jno
dec
and
xlat
push
out
xor
pop
xlat
add
sub
xchg
out
inc
pop
pop
pop
xor
pop
clc
in
sub
mov
add
cli
push
push
dec
call
or
mov
sbb
sbb
pop
xor
inc
scas
cmp
aaa
pushf
call
imul
inc
mov
dec
icebp
js
sub
and
and
sub
fsubs
push
push
push
inc
push
call
ljmp
push
or
dec
leave
or
movhps
pop
add
sub
dec
scas
mov
dec
lret
push
jmp
in
bnd
notb
inc
cmp
jb
cmp
xchg
mov
aad
push
mov
jmp
repnz
push
xor
adc
add
sub
mov
adc
sbb
or
fcoms
inc
fisubs
leave
stos
jmp
add
inc
jne
push
pushf
or
sarl
daa
pop
pop
out
iret
lods
or
daa
inc
pop
pop
es
call
and
dec
fwait
inc
repz
push
inc
add
inc
xchg
pop
sub
lcall
mov
cmp
movsb
xchg
and
inc
mov
call
add
add
add
and
jmp
push
mov
xor
or
cmp
inc
inc
nop
and
fs
sbb
jns
and
push
ljmp
mov
or
dec
sbb
dec
sub
cwtl
cmp
cmp
js
add
stos
sub
lock
out
jg
mov
enter
int3
data16
ret
pop
pop
outsb
pop
push
adc
xor
sbb
gs
or
lea
mov
clc
add
jb
mov
loopne
adc
movlps
or
movd
dec
das
mov
jmp
sbb
scas
shlb
out
add
mov
mov
dec
inc
sti
lods
cmpsb
jl
adcb
dec
out
cmp
xchg
jmp
mov
pushw
movb
or
mov
mov
mov
lret
mov
inc
push
inc
dec
pop
inc
cmp
mov
je
data16
jnp
in
pop
fimuls
inc
jbe
arpl
mov
outsl
daa
imul
sub
mov
dec
dec
cld
xchg
pop
xor
push
xor
add
fcomps
lret
or
mov
mov
mov
jbe
sub
and
adc
adc
leave
sbb
movzbl
jecxz
add
mov
mov
sbb
cld
imul
xchg
or
adc
mov
decl
ja
and
call
jae
jne
popa
daa
adcb
xor
aaa
mov
rol
add
popa
je
jmp
mov
int3
push
leave
push
inc
adc
mov
ss
out
dec
pop
jecxz
cmp
nop
pop
add
leave
mov
cmp
xchg
scas
sub
outsb
dec
sub
aaa
dec
in
mov
popf
and
inc
gs
lcall
das
pop
cmp
adcl
mov
popa
mov
outsb
frstor
push
cmp
test
sub
inc
pop
mov
or
mov
sub
mov
dec
sahf
dec
ficoms
sub
jae
jns
pop
cmp
call
inc
movsl
cmp
mov
dec
icebp
cmpsl
in
cmp
jecxz
sub
and
dec
icebp
adc
push
in
js
inc
lods
pop
hlt
dec
scas
or
and
dec
shll
sbb
mov
rorl
cmp
adc
jp
push
mov
and
jecxz
rcll
ljmp
pop
xorb
test
sub
cmp
and
adc
test
lea
pop
repnz
xor
or
xchg
push
fucom
insl
pop
pop
pop
inc
mov
out
cli
int
push
int3
fldl
fcompl
outsb
mov
outsl
fnstsw
xor
jl
inc
or
jmp
dec
xor
and
or
das
jno
sbb
das
mov
xchg
hlt
mov
mov
and
pop
xor
jns
push
sub
or
dec
mov
mov
and
inc
lods
dec
mov
out
popf
inc
loope
outsl
or
adc
xchg
int3
das
in
xor
pop
loopne
imul
pop
rorb
or
xchg
cmpsb
incl
xor
push
lds
dec
call
cmpsl
mov
inc
pop
push
fadd
clc
xor
jo
lea
fstpt
cli
fcom
ljmp
adc
mov
lods
insb
pop
cli
xor
push
sub
push
xchg
popf
repz
and
xor
enter
in
jo
jmp
mov
loopne
popf
push
es
jmp
inc
and
or
xchg
mov
inc
jge
aam
pop
sbb
fdivrs
hlt
incl
xchg
ficoms
and
scas
loopne
out
cmpsl
fcoml
imul
test
cmpsb
pop
and
mov
nop
loop
xor
xchg
jb
mov
shl
rcll
rorb
xchg
xor
or
fcompl
jge
push
mov
popf
or
fmull
sarl
or
test
add
sbb
cmp
jbe
stc
and
add
movzbl
xchg
inc
xor
jge
xor
mov
arpl
adc
dec
cld
add
push
or
or
push
jae,pt
mov
movl
lock
inc
mov
rolb
mov
decw
pop
inc
push
push
cmpsb
push
or
dec
push
scas
popf
icebp
push
mov
stos
push
mov
mov
and
fwait
pushl
cmpsb
add
adc
call
xchg
scas
mov
jmp
or
lods
push
mov
jnp
cmp
nop
in
je
inc
xor
stos
dec
sbb
pusha
daa
jne
adc
or
pop
lea
dec
stos
je
xchg
add
hlt
test
lock
test
adc
mov
ja
add
sbb
fistl
lret
pop
lcall
xor
call
xchg
pop
xchg
data16
jns
mov
and
push
xor
or
test
data16
test
popa
aaa
imul
or
std
push
xchg
and
mov
pop
dec
push
pop
faddp
int
daa
push
nop
xchg
arpl
cmpsb
sbb
and
fs
mov
cmp
leave
and
jmp
out
outsb
lods
sti
test
dec
adc
sbb
inc
add
jae
cmp
sbb
dec
add
shl
xchg
xchg
mov
mov
add
dec
add
sbb
jne
cmp
pop
pop
push
sub
adcl
push
lods
sub
and
aam
mov
sub
sub
fmul
cmp
push
subl
jecxz
in
push
pop
iret
lock
mov
call
popa
and
inc
mov
pop
xchg
or
cmp
jmp
push
and
push
test
pop
sub
mov
popa
adc
cs
stc
add
dec
je
sub
in
or
push
jns
mov
or
nop
iret
or
inc
push
and
call
and
add
pop
in
or
add
and
push
ds
arpl
pop
adc
xchg
mov
xor
inc
imul
pushf
cmp
sahf
sbb
and
inc
add
mov
mov
sbb
scas
sbb
sbb
xchg
inc
aaa
jnp
adc
sub
inc
xor
jp
call
adc
adc
sub
inc
data16
call
push
inc
cltd
and
jae
sub
mov
push
inc
adc
push
loope
inc
jle
pusha
in
adc
imul
orl
push
dec
inc
ja
lahf
jb
cld
jo
popa
jae
ja
push
fs
out
out
es
js
ja
dec
jo
sbb
push
push
dec
dec
dec
adc
dec
pushf
and
inc
push
lds
mov
xlat
or
inc
movl
inc
add
pop
adc
enter
mov
or
add
adc
dec
jg
fs
pop
push
sbb
sbb
pop
and
sub
jnp
movl
cmp
out
shll
mov
ljmp
test
sbb
mov
push
in
mulb
rolb
xchg
enter
daa
mov
loopne
mov
lret
ja
fwait
or
mov
or
mov
lcall
in
sub
adc
xlat
in
test
fs
jmp
scas
sysret
insb
dec
arpl
jmp
les
mov
ds
out
test
movsl
mov
or
leave
xchg
add
jecxz
xchg
pop
out
add
xchg
push
inc
imul
mov
push
sbb
push
lock
pushl
hlt
or
add
das
add
popf
out
ror
stos
pop
mov
sub
push
out
jmp
dec
sub
add
sub
inc
and
pop
xchg
push
push
aaa
xor
dec
push
inc
push
lahf
xchg
fs
bnd
sub
dec
mov
mov
push
sub
xor
aam
pop
movsl
fidivs
jmp
and
cmp
dec
bound
aas
push
jg
loop
je
fnstcw
sbb
sbb
leave
add
lock
test
jg
inc
call
push
lods
cs
jns
cli
dec
lock
out
sub
cmpsl
push
mov
xor
sbb
xor
push
and
xor
js
inc
lea
sub
gs
jae
lahf
test
lret
jns
pop
xor
pop
hlt
into
scas
or
and
lock
mov
xor
or
cmp
daa
jne
test
outsb
outsb
arpl
cs
je
pusha
jo
mov
aas
jge
scas
mov
fnstcw
jno
sbb
loopne
test
sahf
pop
js
inc
xchg
and
js
inc
test
add
pop
pop
dec
repnz
dec
pop
mov
inc
pusha
sub
sub
jnp
and
push
inc
or
push
pop
mov
inc
out
adc
mov
xor
nop
and
movsb
mov
mov
pushf
pop
mov
ret
xor
popf
lods
pop
fs
cmp
je
addr16
or
xchg
leave
rcrb
in
cmpsl
pop
adc
pop
adc
adc
call
jecxz
add
xchg
pop
shr
inc
sub
cmc
shrb
jge
pop
mov
add
dec
or
add
ret
cmp
cld
add
fmuls
adc
fadd
sbb
and
add
sarl
repnz
sbb
push
mov
clc
adc
or
pop
int
les
and
sbb
mov
test
orb
push
add
inc
or
pop
add
or
sbb
lea
cwtl
rorb
cmp
cmp
add
or
or
add
adc
adc
enter
push
jmp
ret
sub
inc
and
les
es
popf
adc
mov
inc
inc
inc
les
lods
inc
push
jne
push
arpl
les
cmc
inc
inc
pop
sub
pushf
test
inc
sub
sub
hlt
mov
jne
js
xor
xchg
and
and
push
sbb
add
add
sub
cmp
cmp
mov
inc
add
and
bound
push
cmp
test
and
push
jo
js
loope
inc
adc
inc
push
sub
fidivs
and
movsb
pop
lea
cmp
ds
or
cmp
lods
fwait
nop
jmp
loope
cmp
jns
or
int3
push
test
and
ja
outsb
shrl
fs
int3
addb
push
inc
jns
xchg
stos
gs
aaa
inc
add
cmp
inc
enter
or
mov
lock
jge
mov
sub
xor
lods
adc
xchg
and
jmp
decb
pop
xchg
jno
sbb
je
gs
dec
and
ret
dec
sub
mov
and
mov
aad
enter
xchg
imul
and
mov
push
adc
mov
inc
mov
testl
mov
adc
mov
dec
cli
pop
xchg
cs
ljmp
daa
ret
ret
cmp
push
inc
dec
push
cltd
inc
cs
mov
pop
jnp
rcl
cmpsl
rorb
fs
mov
insb
gs
lds
popa
outsb
out
jb
in
ja
push
push
std
push
or
cs
aas
or
xor
outsb
mov
cs
inc
sub
xchg
aad
icebp
and
and
push
cmp
dec
mov
inc
sub
cmp
mov
data16
inc
adc
jb
xchg
adc
adc
dec
imul
jo
adc
push
shrl
ds
xor
movsl
inc
aas
fidivs
in
cmp
or
insl
jmp
mov
fs
subb
sub
mov
mov
pop
ret
cmc
out
and
mov
jno
sbb
pop
push
popa
push
addr16
push
push
jo
xor
push
xor
rcr
sub
and
add
mov
test
sub
adc
sbb
xor
icebp
push
inc
sbb
cmp
mov
adc
and
cmp
xorb
je
lahf
mov
clc
je
add
dec
inc
and
or
loopne
fldl
lock
outsl
cmp
cmp
mov
mov
test
cmp
pop
adc
push
and
xor
inc
test
push
push
push
loopne
add
push
movsb
jmp
jbe
inc
or
in
or
or
inc
adc
adc
ror
fs
jae
or
xchg
adc
enter
sub
faddp
and
call
clc
push
and
xchg
cmp
test
lcall
xor
or
xchg
clc
enter
hlt
sbb
push
and
nop
dec
enter
xor
sbb
lock
push
mov
sarl
in
xchg
and
aam
add
xor
and
in
in
xchg
push
and
fs
in
push
test
loopne
jo
je
fdivl
aad
inc
fsubl
js
jl
fsubs
fadds
adc
enter
or
xchg
and
nop
fsub
rcrb
nop
or
mov
and
int3
xor
xchg
mov
mov
or
xchg
enter
fs
cltd
popa
movsb
ret
movsl
je
inc
xchg
leave
iret
xor
subb
pop
push
gs
movsb
or
movsl
aas
xlat
nop
jae
andb
adc
sar
jp
fisttpll
xchg
xchg
sbb
push
push
test
or
pop
in
pop
or
out
insl
add
aaa
aam
xchg
icebp
adc
sbb
xor
pushl
fildl
xor
and
std
push
cltd
outsl
jnp
mov
cltd
add
outsl
jle
and
test
mov
lret
adc
adc
mov
sub
fistpl
and
mov
xchg
les
push
test
xchg
movsb
lock
cmp
adc
out
xchg
testl
inc
getsec
test
dec
sbb
jp
sub
and
mov
sub
mov
xor
mov
enter
xor
xor
dec
ret
and
mov
pop
sbb
xor
leave
xorb
cmp
add
push
lock
dec
jae
xor
push
call
arpl
jne
movzwl
and
fs
push
adc
loopne
jmp
js
xchg
das
dec
mov
mov
fs
cmpsl
push
adcl
sbb
ss
mov
inc
cmpsb
push
inc
pop
xchg
mov
pusha
das
ret
in
adc
data16
pop
xor
pop
and
lcall
and
cmp
mov
xchg
fs
imul
push
push
jl
loopne
pop
push
or
mov
dec
mov
mov
in
into
fstl
jl
sbb
loopne
int
faddp
rorb
mov
adc
push
push
add
pop
ret
pushf
enter
dec
cmc
and
pushf
mov
cltd
cmp
push
mov
push
xor
dec
inc
mov
push
add
inc
or
inc
and
fs
mov
lret
inc
cmp
cmp
xchg
cmp
pop
mov
and
pop
xor
enter
or
or
sub
sub
xchg
sub
or
and
fbld
or
inc
cmp
adc
sbb
in
inc
sbb
test
xchg
test
ss
fnstenv
or
lea
xor
test
push
std
test
test
mov
add
pop
adc
pop
lods
repz
bound
mov
push
jne
push
or
pop
mov
int
or
clc
or
inc
or
enter
test
mov
cli
ljmp
into
mov
jle
pop
outsl
sub
mov
dec
pop
popf
xchg
sub
lds
xchg
push
adc
adc
mov
jno
outsl
call
in
or
dec
in
mov
xlat
sub
mov
or
and
jmp
cs
lods
pop
in
add
mov
cs
cmp
lahf
add
imul
adc
gs
mov
outsb
mov
enter
and
cld
aam
xor
scas
dec
and
and
push
cmp
push
and
inc
and
add
jo
outsl
dec
jne
mov
movsl
mov
cmp
dec
test
jo
arpl
pop
sbb
push
xchg
and
dec
popa
arpl
xchg
leave
jg
mov
roll
pop
rorb
adc
test
or
inc
cmp
aas
jb
mov
stos
xchg
and
inc
xor
mov
and
sahf
and
jbe
dec
inc
hlt
jb
push
arpl
pop
cwtl
std
imul
inc
test
push
inc
push
pop
xor
sub
cwtl
out
dec
inc
jb
jle
jle
lea
jle
cwtl
sarl
insb
xchg
cmp
shr
scas
jno
sahf
aam
cmp
xor
sub
pop
jnp
je
mov
imul
outsb
movsl
inc
ficomps
cmp
ret
add
jo
scas
cld
bound
dec
fdivrl
das
ficoms
imul
cmpsl
dec
movsl
pop
and
into
pop
pop
dec
dec
pop
mov
inc
adc
jne
cltd
pop
push
dec
stos
sub
or
gs
fcom
or
cmp
push
sub
add
ret
mov
jne
push
movsl
sub
add
stos
inc
fs
mov
aad
sub
popf
gs
and
sub
cs
and
mov
cmp
or
mov
mov
mov
xor
jae
and
jne
fnstcw
sub
mov
sub
push
in
push
push
cld
mov
hlt
cmpsb
and
add
sub
pmulhw
insb
arpl
shll
sub
and
movsb
mov
cmp
cmp
push
pop
lret
mov
push
inc
xor
imul
fs
je
or
push
adc
inc
mov
stc
xchg
clc
mov
das
push
idivb
pusha
out
popa
pushf
pop
add
imul
dec
sbb
or
add
daa
push
mov
or
xor
out
or
loopne
out
lahf
out
lods
jl
outsl
stos
fcoms
add
or
iret
mov
cmovno
jno
adc
sbb
movb
roll
xchg
mov
mov
sbb
popf
push
jne
add
jno
mov
lea
add
add
dec
jb
out
into
push
lret
mov
lods
pop
bound
jne
cmpsb
add
add
lea
rcrl
mov
mov
pop
sub
mov
and
out
stos
mov
aam
pushf
add
test
call
sbb
mov
shr
or
incb
cmc
add
sahf
ss
and
mov
adc
sbb
sbb
add
push
je
roll
sub
dec
les
mov
xor
cli
inc
mov
push
adc
mov
adc
cmpsb
add
add
testb
xor
ret
mov
lea
aad
mov
xchg
mov
mov
or
xchg
pop
adc
sub
jp
sub
call
or
cmovnp
inc
movsb
cmp
inc
adc
lock
sbb
scas
push
sbb
jns
cmp
inc
dec
cli
stos
push
or
sub
jl
lret
cmp
dec
imul
cmp
push
lea
push
adc
push
mov
jle
mov
inc
push
adc
xchg
sbb
and
sub
jecxz
stos
lret
or
push
lcall
dec
sbb
push
and
fbld
inc
adc
je
pop
xor
inc
jb
push
imul
mov
popa
inc
test
popa
or
push
jo
push
orb
jl
inc
and
into
ret
imul
xchg
std
add
push
mov
hlt
jmp
xlat
push
int3
scas
xor
or
inc
sbb
or
add
pop
arpl
add
push
leave
jb
pusha
jns
cli
lds
in
cmp
lea
and
les
popf
add
mov
mov
or
aam
jno
or
aaa
push
das
cltd
dec
movsl
push
repnz
pop
push
mov
jnp
push
call
xor
or
push
adc
adc
enter
lods
mov
xchg
fldenv
sub
sub
or
mov
push
ret
push
add
js
imul
es
inc
cwtl
push
out
pop
add
and
adc
call
push
cld
es
jmp
or
push
xor
sbb
in
into
mov
negl
mov
aas
sbb
and
jle
push
test
pop
bound
scas
inc
jb
pop
arpl
xor
jmp
adc
fwait
test
mov
fdivp
clc
push
pop
ud2
or
add
mov
or
sub
in
orb
fbld
mov
shrl
and
test
sbb
test
add
xorb
pop
cmpsb
dec
mov
mov
popa
mov
dec
and
cmp
xchg
lret
xor
inc
sbb
sbb
jg
mov
mov
push
fwait
scas
sbb
shrl
pop
mov
mov
sbb
and
mov
fs
or
push
push
adc
fiaddl
lock
xor
cmp
mov
jmp
nop
push
pop
cmpsb
adc
xlat
xchg
jecxz
aaa
xchg
test
mov
sub
mov
pop
fisttpl
and
mov
call
xchg
mov
ljmp
add
call
adc
mov
mov
jge
or
xor
vmread
jmp
cmp
sub
xchg
ret
pop
addr16
call
mov
push
test
pop
add
shll
daa
pop
mov
push
icebp
call
push
mov
sub
xchg
test
shl
addr16
or
movsl
sbb
add
jnp
xchg
clc
cmp
adc
sub
into
sbb
fidivrl
mov
xor
push
push
stos
jecxz
fildl
add
jne
mov
dec
aas
sbb
mov
xchg
pop
lods
cmp
push
inc
out
dec
in
ret
push
inc
ljmp
into
ret
lds
ljmp
test
xor
call
scas
inc
and
pop
loopne
stc
sbb
push
roll
popf
cmp
inc
adc
cmpsb
jle,pt
lods
xor
adcb
push
mov
rorl
and
call
xchg
adc
jbe
jo
movsl
sub
rol
movsl
ret
rolb
cmp
stos
movsl
cmp
mov
shll
cmp
xchg
hlt
loope
test
movsb
imul
call
inc
movb
mov
mov
or
and
dec
sub
mov
mov
sbb
inc
add
pop
out
les
push
test
les
imul
and
pushf
xor
imul
repz
xor
repz
xor
or
sub
cmp
test
pop
sbb
outsb
push
jo
sbb
lea
addr16
sbb
mov
mov
adc
cmc
ret
pop
enter
cmc
push
mov
mov
movb
add
pop
add
pop
inc
insl
jmp
and
push
dec
mov
sbb
jl
push
adc
jne
fs
jns
stos
test
adcb
call
insb
add
mov
push
add
mov
add
loop
dec
rcrl
int
pop
or
inc
sahf
jns
sbb
sti
push
sub
shrl
mov
loopne
scas
fcoms
ficompl
pop
add
lret
sub
rcll
cltd
pop
cli
pushf
and
das
mov
cmpsl
add
nop
mov
js
sbb
pop
sbb
dec
bound
xchg
out
jo
cmp
mov
xchg
push
push
mov
iret
inc
arpl
mov
push
mov
stos
mov
daa
mulb
call
or
lahf
and
mov
mov
sahf
adc
movsl
stc
nop
test
ljmp
push
mov
xlat
add
sbb
ljmp
cmp
das
repnz
imul
dec
es
jbe
add
sbb
out
adc
mov
add
cmc
add
dec
push
or
xor
iret
xor
mov
dec
rclb
sahf
xorb
jle
add
pop
dec
out
add
xchg
xchg
pop
dec
xor
je
lcall
pusha
lock
mov
xchg
add
push
cld
lods
loop
jo
push
add
inc
int3
push
jb
push
xchg
cli
pop
outsb
pop
sub
sbb
js
das
add
mov
cmp
pusha
lods
cmp
push
adcl
add
mov
cmp
test
imul
add
jge
sbb
lea
dec
cmp
push
add
mov
add
cmp
jp
aaa
mov
dec
fwait
sbbl
mov
enter
movups
daa
and
cmp
into
inc
or
test
or
mov
fwait
add
shrl
sbb
std
add
adc
jbe
rcrb
js
jg
inc
inc
and
ds
enter
pop
sbb
arpl
andl
mov
push
xchg
sbbb
add
cmc
lods
sahf
xorb
add
inc
ja
cmp
mov
iret
or
inc
js
xchg
xchg
add
xchg
outsb
inc
inc
sub
push
aaa
rolb
jl
add
cli
push
adc
gs
outsb
rcl
xchg
add
fsub
xchg
or
or
dec
stos
incl
push
les
pushf
mov
xchg
jmp
stos
roll
rcrl
out
add
adc
add
mov
jns
je
jecxz
jnp
add
fmuls
jo
add
dec
sub
lds
push
fildl
insl
cmpsb
push
iret
mov
or
xor
sbb
mov
or
rcll
push
mov
pop
loopne
mov
mov
jg
je
ret
push
test
cmc
xchg
sub
sbb
jb
inc
lea
add
mov
xor
add
into
cmp
jae
pop
jbe
pop
jecxz
rclb
cmpsl
stos
xchg
xchg
jp
dec
add
data16
mov
mov
mov
pmaddwd
and
addr16
fadds
sub
jmp
add
cmp
sbb
mov
add
ret
or
insl
add
mov
dec
stos
add
leave
mov
cmpsl
add
aas
and
jmp
divl
rorb
imul
stc
cmp
mov
mov
mov
fiadds
popf
sbb
decb
out
test
mov
sbb
inc
fsubl
sbb
xor
xchg
jl
shlb
cmp
add
negb
pop
jno
push
ljmp
add
fiaddl
into
popl
add
pusha
xor
sbb
mov
mov
mov
jp
or
idivl
mov
jmp
lret
add
or
add
pop
dec
pop
cmp
inc
pop
pushf
or
loopne
add
jno
je
pusha
enter
subb
lock
add
int3
cltd
mov
sbb
add
scas
xchg
pop
inc
and
add
mov
gs
decl
add
push
rcl
ja
stos
jg
xor
jb
adc
sbb
or
pop
xor
xor
push
clc
in
repz
pop
pop
cmp
out
mov
lods
add
imul
add
pop
or
add
in
out
ja
lods
add
pop
repnz
rorl
bound
leave
testb
bsf
out
pop
lock
gs
fmuls
push
add
sarb
xchg
shl
ljmp
jae
cs
sub
xchg
stc
or
and
rorl
push
mov
xchg
inc
add
daa
pop
fsubr
fwait
add
lret
cmpsl
cmc
dec
ret
les
sbb
aas
pushf
pusha
shll
test
add
subb
inc
enter
arpl
clc
add
insl
loope
cwtl
fiaddl
ret
adc
push
add
and
add
push
loope
inc
inc
and
incb
loop
rcll
xchg
sub
pop
rcll
lods
lds
fistps
xstore-rng
cmpsl
movb
or
std
dec
enter
pop
daa
add
lret
jg
dec
jp
mov
cmp
add
test
mov
sbb
mov
add
and
sbb
aas
push
js
add
mov
dec
jno
roll
add
lret
bound
cli
inc
popa
call
test
lret
in
mov
mov
adc
fildl
cmp
xlat
dec
andb
xor
add
mov
adc
adc
mov
pop
or
or
adc
mov
add
insl
dec
inc
add
xor
jg
jp
push
adc
std
push
cmp
dec
stos
sti
push
fsub
outsl
test
jecxz
push
repnz
xchg
xor
add
scas
sub
dec
push
ja
cmp
stos
adc
jg
add
subb
ficompl
jmp
test
mov
dec
vcvtqq2pd
mov
aaa
repz
outsb
mov
add
lret
clc
scas
in
jge
paddusb
adc
mov
imul
add
mov
call
push
out
jns
les
adc
add
add
addb
data16
out
add
sbb
add
xor
in
add
jl
and
es
stos
or
sbb
pop
push
lahf
pop
loop
add
dec
loope
fwait
add
test
mov
sbb
add
fsubs
cmpsb
jo,pt
sbbl
sbb
nop
stos
add
pop
and
test
lods
add
frstor
dec
jae
aam
imul
jno
xchg
arpl
push
je
cmp
lock
jge
ljmp
dec
int3
rcr
pshufw
cmp
test
mov
movsl
jmp
int
jo
add
and
aaa
arpl
bound
and
fisubl
test
add
flds
mov
pushf
stos
xchg
popa
mov
add
cmp
mov
hlt
imul
or
and
addl
xchg
pop
jae
popl
rorb
leave
add
verr
loope
push
fld
xchg
pop
fwait
sbb
loopne
fstl
in
repnz
mov
gs
xor
and
lcall
int
add
cmp
repz
cmp
push
adc
faddl
lret
imulb
or
add
xchg
pop
xchg
shlb
repnz
xchg
dec
xor
add
fiadds
or
mov
add
dec
xor
xchg
pop
and
mov
je
repz
movb
mov
xor
inc
jge
int
cmp
jae
xor
adc
adc
insl
cmp
or
sahf
push
ja
cmc
shl
xorb
xchg
add
fdivs
sbb
adc
mov
fisubrl
lea
mov
ja
cld
push
repnz
sbb
loope
addb
push
mov
or
cli
lcall
sar
fnstenv
jmp
inc
xchg
adc
pop
mov
cmpsb
jl
inc
out
mov
adc
in
sub
in
rol
out
mov
adc
imul
movsl
aaa
pop
xor
pop
sub
fldcw
and
invd
cmpsl
test
mov
or
mov
aam
in
fistl
popl
jo
mov
add
cmp
add
movl
icebp
leave
mov
insl
pop
pusha
sbb
jmp
inc
add
jg
jl
mov
add
stc
mov
add
mov
rolb
jns
mov
out
jno
add
xlat
xchg
pop
mov
js
adc
fs
clc
add
lret
ljmp
aam
adc
dec
add
fiaddl
shl
add
and
pop
add
test
push
fstp
inc
add
pop
testb
pop
mov
cli
dec
pop
es
aaa
push
test
jl
dec
cmp
repnz
sub
mov
test
cmp
push
ds
sbb
cli
inc
iret
inc
jle
add
mov
mov
inc
jb
sbbb
add
lcall
pushl
add
out
mov
int
xchg
add
adcb
push
subb
push
xor
add
pop
mov
out
and
ret
daa
pop
faddp
cmpb
jbe
add
add
pop
orb
jnp
dec
int3
adcl
xorb
pop
fadd
in
dec
add
xchg
or
fiaddl
hlt
cli
bnd
stos
inc
pop
add
subl
ror
enter
xor
in
addr16
inc
inc
pop
inc
in
in
dec
push
jns
nop
add
push
push
dec
add
jg
call
add
inc
outsb
repz
cmp
add
dec
xchg
ja
or
or
sub
add
cwtl
sub
shrl
test
jae
sbb
ret
cltd
in
mov
gs
push
lods
fnstenv
add
jge
arpl
ret
inc
xor
sub
add
popl
mov
in
popf
inc
add
dec
cli
out
jl,pn
jle
jbe
or
push
pop
xorb
pop
mov
dec
mov
cltd
push
add
dec
dec
sbbb
dec
add
or
mov
xchg
aad
jae
movsl
adc
iret
flds
jo
out
xor
sub
cli
mov
xor
mov
adcl
push
add
sub
leave
mov
add
dec
imul
xchg
rclb
lcall
shlb
cmp
fists
addl
and
cli
rolb
inc
mov
push
sbb
pop
add
shrl
add
pop
mov
cli
movb
add
dec
push
mov
loope
test
pop
mov
jmp
xchg
xchg
and
cltd
push
mov
test
js
mov
js
fildll
mov
ja
mov
and
and
jnp
bound
aas
or
jno
dec
inc
and
xlat
dec
imul
les
js
add
test
inc
js
inc
insb
icebp
inc
insb
sbb
cmp
xchg
dec
jnp
mov
pop
and
sbb
or
into
and
sbb
lret
pop
jmp
notl
add
pop
insl
mov
jae
int3
cs
xor
scas
inc
push
or
xchg
xchg
push
call
out
adc
outsb
mov
cld
sub
inc
jns
dec
outsb
cmp
mov
insb
outsb
mov
mov
inc
scas
pop
lcall
inc
outsb
loop
mov
jmp
nop
or
clc
outsb
push
in
jno
into
push
and
outsl
bound
mov
test
scas
jne
in
test
inc
outsl
iret
jge
jecxz
pushf
adc
push
scas
mov
xchg
bound
pop
mov
mov
jns
mov
ja
jo
sub
sbb
xchg
into
xchg
mov
jle
mov
dec
jo
cmp
and
pop
or
jge
xchg
jo
xchg
mov
dec
mov
pop
and
push
xchg
fwait
mov
cld
jo
aas
inc
jge
sub
mov
jno
xchg
mov
les
fst
jno
adc
jle
out
mov
pop
mov
mov
inc
mov
sub
or
js
jle
jae
cmp
rorb
jb
push
sti
sub
mov
fldl
cmp
mov
adc
sidtl
shrb
add
mov
loope
adc
add
fimuls
jae
pushf
jae
bound
push
test
fdivp
stos
jg
test
dec
inc
shrl
inc
jg
in
inc
notl
faddp
idivl
or
pop
push
xor
mov
insb
dec
in
push
adc
mov
mov
sbb
leave
inc
pop
cmp
adc
pop
aad
cwtl
push
add
push
mov
inc
push
jg
test
inc
arpl
or
lret
adc
dec
leave
jg
mov
clc
mov
jne
cmp
mov
adcl
jne
test
cmpb
inc
jne
imul
gs
push
xchg
clc
lock
jne
ret
push
and
jbe
push
je
mov
mov
cmp
mov
xchg
orl
jbe
inc
push
add
sub
pop
inc
ja
clc
jae
arpl
imul
mov
movsl
into
clc
adc
ja
sub
sub
pop
addr16
or
cmp
mov
or
aam
add
adc
outsl
pop
test
aaa
add
mov
add
or
adc
adc
and
jmp
and
adc
and
pusha
fldl
sbb
push
mov
aam
and
dec
jle
mov
sbb
jmp
in
jle
loop
test
jmp
test
mov
fs
cmpsb
or
cs
lock
adc
pop
mov
push
push
sub
out
ret
mov
pop
jns
or
ret
cmpsl
fwait
lods
and
mov
mov
and
dec
mov
repnz
adc
jp
dec
lock
test
adc
loope
test
ds
ja
jp
lods
lock
mov
mov
mov
or
sarb
mov
pop
loop
xchg
or
jnp
or
jnp
cmpsl
test
jle
mov
test
sub
mov
and
mov
jge
test
test
or
xor
fstps
cwtl
or
and
and
dec
push
sbb
and
sbb
cmpsl
out
imul
or
lock
adc
pop
xchg
in
popf
dec
stos
rcrb
mov
mov
push
mov
or
pop
mov
decl
xchg
or
and
inc
fsubrp
or
mov
sub
jge
pop
inc
mov
idiv
push
and
mov
mov
sbb
sbb
iret
jge
add
push
out
sbb
test
adc
or
push
inc
mov
jle
clc
mov
decl
push
add
adc
aad
pop
into
adc
cld
aad
jle
loopne
loope
mov
test
mov
pop
jg
cmp
mov
sub
xor
cmp
mov
pop
mov
jg
mov
iret
dec
test
aas
adc
mov
jg
inc
mov
xor
dec
adc
das
sahf
aas
and
mov
mov
adc
jno
orb
mov
dec
and
xchg
xor
xchg
aas
and
bound
cmpb
lea
inc
or
inc
add
lea
int3
cs
xor
sbb
xchg
in
lock
mov
call
mov
decl
adc
loope
orl
xor
inc
subl
out
or
repnz
sbb
subb
or
dec
popl
outsl
adc
mov
push
ret
dec
adc
mov
and
sbb
orb
out
test
mov
jnp
mov
push
xorl
mov
clc
xchg
xor
pop
pop
test
lea
lea
push
clc
sub
adc
or
es
and
nop
ja
fisubrs
and
data16
mov
fdivrs
jns
sub
inc
popl
pop
or
in
cmp
ret
sbb
lock
fcoms
out
stos
adc
test
and
cmp
sub
out
sbb
fimuls
in
adc
and
fmuls
out
sbb
rorb
push
out
mov
jns
or
lea
adc
icebp
testb
pop
xchg
adc
jne
imul
enter
lods
lods
mov
or
xchg
inc
mov
jmp
cltd
iret
jge
and
lds
jo
xchg
xchg
xchg
clc
addr16
sbb
test
adc
adc
xchg
aam
lea
iret
js
xchg
test
xchg
xchg
ficoms
push
mov
push
test
xchg
push
mov
dec
iret
lods
addl
mov
lahf
xchg
or
xor
mov
xchg
bound
dec
iret
test
xchg
jl
inc
xchg
adc
mov
sub
xchg
idivl
adc
xor
out
sub
dec
popa
dec
adc
mov
adc
in
ret
enter
aam
nop
xchg
add
dec
lods
xchg
mov
adc
ss
test
mov
out
sub
sbb
ficoms
push
scas
sbb
aam
adc
pop
in
mov
and
mov
mov
and
ss
xchg
mov
dec
and
xchg
into
and
adc
sub
mov
xchg
loope
xchg
or
movsl
xor
aad
lods
sbb
and
fiaddl
ficoml
mov
sbb
movb
icebp
ret
sub
repnz
rclb
mov
das
int3
je
push
add
mov
loop
mov
in
cwtl
adc
cltd
mov
enter
fbstp
fwait
mov
inc
enter
mov
jge
pop
fldcw
push
and
cwtl
ret
sbb
jmp
stc
cwtl
and
xchg
test
dec
or
aad
push
and
lea
mov
in
and
mov
mov
cwtl
pop
push
mov
std
loope
rorl
dec
ja
movsl
xchg
flds
fbstp
or
mov
push
adc
cwtl
sub
xor
mov
mov
or
in
clc
in
mov
xor
js
pop
pop
fisttpll
incb
jecxz
lds
sbb
test
mov
jns
cltd
repz
rcrb
shlb
mov
adc
decb
dec
nop
fstps
push
and
fwait
ret
sbb
fcompl
mov
xchg
test
dec
mov
and
nop
push
and
nop
jo
xchg
test
add
sbb
aaa
mov
lea
loope
or
push
movsl
xchg
int3
inc
and
shlb
les
push
adc
fwait
sub
xor
stos
xchg
enter
sub
fwait
icebp
fcomps
loope
xchg
imul
mov
je
insb
or
mov
jle
adc
rcrb
jecxz
sahf
xchg
test
lahf
pop
out
lods
push
call
adc
or
int3
dec
fldl
and
outsb
inc
xchg
iret
jge
mov
sahf
push
adc
adc
lahf
adc
aad
inc
out
sahf
sub
scas
sbb
int
and
xchg
adc
or
xchg
push
and
sahf
and
xchg
js
sahf
test
sahf
xchg
ficoms
cwtl
fs
add
mov
xchg
push
out
and
inc
hlt
pop
and
ret
test
sahf
cs
sahf
lret
push
cmc
mov
xchg
bound
mov
ret
ds
sahf
mov
jl
pop
sbb
xchg
push
adc
insl
sti
push
call
and
pop
lods
mov
stos
adc
push
call
shlb
adc
pop
fwait
call
or
sub
inc
mov
xor
mov
xor
call
jae
sbb
jne
js
xchg
lea
in
jo
add
sahf
sub
xchg
out
mov
add
dec
fsts
xchg
xchg
or
lahf
mov
bound
mov
ret
push
jge
mov
cs
pop
int
or
adc
cwtl
mov
xor
dec
cwtl
sbb
call
jae
cwtl
out
mov
and
call
xchg
sti
movsl
and
pop
aas
or
rcr
cmp
inc
mov
mov
testl
cwtl
mov
or
adc
mov
adc
test
add
xchg
es
cmp
pop
call
xor
paddq
movsl
cmp
cmpsb
test
data16
in
or
mov
adc
and
and
xor
cli
adc
mov
in
incb
mov
adc
mov
or
in
movsl
into
repnz
mov
test
adc
test
test
movsl
adc
sbb
fbld
fwait
insb
out
movsl
ja
or
or
nop
fwait
pushf
mull
repnz
popf
clc
loope
mov
loope
fsubs
xor
push
and
in
xor
inc
fcoms
and
ficoms
les
adc
movsb
stos
movsb
xor
cmp
push
inc
mov
cmpsb
stos
lods
arpl
inc
pushf
loope
stos
push
adc
pushf
icebp
loopne
push
adc
pushf
mov
adc
dec
out
les
popf
jle
jge
mov
popf
push
out
inc
push
scas
or
popf
ja
inc
mov
stos
js
popf
xchg
stos
mov
sahf
xor
jno
inc
xchg
mov
adc
push
out
cmp
sbb
inc
les
cmp
cmp
cwtl
jno
mov
cmp
das
and
sub
insb
test
sub
xor
mov
xchg
dec
in
mov
lea
jmp
sbb
or
cld
and
lret
push
ss
add
mov
push
addl
lahf
pop
movsl
orb
leave
sahf
sahf
ret
pusha
popa
xor
add
jb
loop
push
add
and
pushfw
in
imul
frstor
push
decl
or
mov
add
push
xor
adc
popf
mov
popl
jmp
shll
cmpsl
ljmp
mov
rclb
push
test
xor
movl
mov
add
or
aad
loop
ud2
pop
cmp
test
mov
repz
mov
scas
or
xchg
sbb
sub
mov
inc
mov
dec
lods
push
adc
mov
ds
or
cmp
cmp
ret
sbb
inc
and
dec
test
mov
outsb
sub
mov
ret
nop
adc
mov
lods
sub
inc
mov
jle
mov
test
cmp
adc
dec
sub
mov
and
lods
loope
lods
or
movsl
xor
inc
repnz
and
insb
mov
dec
adc
icebp
dec
lods
sbb
inc
mov
jl
cld
inc
scas
mov
jae
mov
cmpsb
movsl
jo
xchg
or
mov
sbb
cmp
xchg
cmp
arpl
mov
movsl
dec
adc
mov
scas
adc
xchg
mov
mov
ret
inc
movsb
mov
xor
xchg
repnz
lea
movsl
aaa
mov
movsl
rclb
adc
ret
mov
pop
mov
add
aam
pop
fnsave
dec
mov
aas
push
ds
movsb
sub
push
aam
cmp
sub
lock
test
inc
add
lods
pop
lea
fisubl
mov
and
mov
pop
jmp
dec
jmp
add
xor
rcrb
push
movsl
fs
fcomps
enter
xor
imul
and
jo
push
mov
dec
jg
inc
push
inc
dec
dec
inc
dec
add
push
push
dec
push
fildl
pop
pushf
sub
movb
and
push
inc
mov
fildll
test
pop
dec
push
and
and
shlb
pop
mov
leave
incl
aas
dec
dec
and
loop
addr16
push
adcb
ja
xor
sub
dec
mov
int
inc
push
dec
dec
jmp
xor
dec
dec
push
jl
add
mov
inc
sub
pop
fwait
dec
lahf
adc
das
lds
add
pop
popf
cli
mov
adc
jp
les
and
cmp
sub
pop
les
xor
clc
dec
add
or
add
inc
sbb
sbb
xchg
insb
mov
xor
mov
jo
pop
sub
adc
and
and
mov
mov
cmp
addb
add
lds
mov
adc
aad
adc
je
add
loope
loopne
mov
jno
adc
movsl
or
mov
adc
out
adcl
or
sbb
inc
adc
daa
add
inc
clc
sub
cmp
cmp
adc
add
adc
mov
xor
shlb
in
or
adc
or
inc
flds
xchg
insb
pop
sub
faddl
lods
mov
popa
fdivrs
or
adc
xchg
mov
ljmp
pop
call
sub
add
or
adc
pop
lock
in
or
add
int3
enter
mov
fcomp
fxch
sbb
loope
ds
pusha
push
dec
int
aas
mov
lods
rcr
test
cmp
mov
xor
cmpsb
dec
xchg
scas
cltd
mov
dec
mov
inc
adc
pop
sbb
or
sbb
sbb
add
adc
inc
xor
adc
test
cmp
imul
fsubrp
inc
int3
or
sbb
add
mov
enter
fsubs
inc
call
lret
cmp
push
pop
add
adc
sbb
dec
sub
adc
push
dec
pop
xchg
pusha
and
jo
mov
dec
cwtl
xchg
mov
mov
and
dec
fcoms
xchg
add
enter
jb
cmp
push
adc
push
inc
les
movsb
cmp
mov
adc
pop
mov
adc
xor
sbb
inc
pop
and
xchg
test
cmp
mov
pop
mov
pop
rcrl
and
lods
lods
je
js
add
add
mov
and
rclb
fsubs
inc
call
les
xchg
sarb
mov
mov
je
movsb
pop
and
pop
dec
mov
or
and
inc
fsub
mov
inc
outsl
out
lock
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
test
sbb
adc
or
fcoms
loopne
call
xor
cltd
inc
dec
mov
add
sbb
jne
and
push
je
test
imul
push
pop
jo
or
cmp
jae
adc
adc
sbb
sbb
add
push
adc
push
add
shrb
add
ja
popa
push
out
mov
sbb
insl
rorb
xor
inc
data16
add
mov
push
movsb
mov
add
mov
rclb
or
sub
sbb
jbe
add
and
repz
inc
mov
sbb
jmp
mov
hlt
movl
test
imul
std
in
leave
add
dec
pop
add
insb
cmp
arpl
or
and
pop
adc
add
inc
pusha
aad
jno
mov
cmp
aam
dec
std
test
or
movsl
cli
test
xor
inc
leave
mov
mov
xor
add
inc
iret
or
add
stos
lods
xor
es
ficoms
addb
enter
mov
and
les
mov
mov
add
mov
movb
jmp
outsl
das
add
dec
push
roll
sub
fdivl
push
jno
add
adc
out
mov
add
lahf
xor
add
js
stc
loopne
cmp
test
xchg
sbb
add
insl
shl
fs
add
pop
arpl
hlt
push
imul
pusha
and
push
xor
dec
push
xor
xchg
push
call
sbb
hlt
or
cmc
fnstenv
add
jmp
mov
add
fistps
fidivrl
adc
gs
aam
pop
or
dec
into
add
mov
aam
movsl
fisttps
xor
movsb
add
hlt
shrl
xor
std
fldcw
inc
mov
add
mov
add
add
sbb
or
fnstsw
add
add
adc
mov
add
test
or
add
lahf
in
into
push
stc
add
pop
cwtl
leave
fldcw
and
shlb
pop
cmp
or
mov
mov
in
mov
push
mov
add
inc
pmullw
scas
ja
popf
adc
adcl
jae
or
add
insl
or
jp
iret
push
in
decl
xchg
cmp
scas
add
mov
pop
jge
call
mov
add
add
ret
pop
push
testl
jno
insb
sbb
add
jbe
aam
loopne
add
mov
ficoml
int3
dec
add
outsl
fistpll
mov
sbb
mov
call
jle
shll
push
repnz
fisttps
addr16
cmpsb
fldl
add
dec
fisubrl
add
scas
testb
add
add
ret
out
mov
push
enter
mov
outsb
xor
imul
sbb
add
ss
push
xchg
ja
or
add
mov
and
es
mov
mov
pop
mov
add
mov
cmpsl
call
ret
iret
shlb
pop
sbb
loopne
fwait
repnz
pushf
mov
pop
insl
add
ss
jmp
test
jb
push
addb
adc
mov
mov
cmp
mov
fwait
mov
rclb
mov
add
jl
or
cld
roll
icebp
clc
mov
push
pop
int
mov
mov
outsl
cwtl
inc
mov
es
jle
jo
ud0
cmp
push
pop
or
adc
sahf
popl
imul
insb
push
add
or
add
dec
ret
cmp
popa
cmpsl
notl
pusha
rolb
dec
inc
imul
dec
push
scas
fcompl
flds
or
inc
lock
aaa
jle
add
jg
add
xor
jno
add
xchg
mov
add
ss
fadds
xlat
int
sub
push
mov
jp,pn
mov
dec
popa
les
add
push
sub
aaa
mov
or
filds
add
sub
insb
xchg
lea
stos
and
and
jg
mov
mov
jl
sub
add
mov
adc
int3
sbb
adc
sub
or
sub
or
out
mov
orl
lcall
lds
ficoml
lcall
lea
mov
jl
xchg
loope
jae
lods
hlt
mov
sub
or
add
inc
adc
mov
cmp
or
mov
dec
mov
cmpsl
push
dec
adcb
and
or
in
shlb
inc
mov
xchg
mov
sbb
int3
mov
popf
mov
rclb
xor
cmp
cmp
push
icebp
ds
sub
popf
js
data16
jmp
inc
in
int3
xchg
stc
int3
xchg
or
sub
dec
movsb
mov
popa
xor
adc
jo
inc
cmp
fdivrl
mov
clc
or
xchg
jecxz
xor
clc
or
xchg
and
leave
mov
and
push
cmp
xchg
jp
mov
add
call
dec
jnp
sub
insb
sbbb
push
or
jl
pushaw
adc
or
pop
stc
cwtl
mov
mov
or
xchg
sbb
lds
xchg
sub
out
dec
shll
and
or
and
add
inc
mov
cld
cmp
sbb
adc
push
test
sbb
hlt
gs
es
or
dec
std
je
add
pop
cmp
dec
adc
mov
add
fadd
ss
add
pop
ret
add
and
hlt
sub
les
cmp
subl
lods
in
dec
mov
lock
mov
in
dec
jl
inc
push
mov
enter
add
cmp
add
xor
mov
adc
and
pop
adc
cmp
jb
jle
mov
pushf
inc
scas
rorb
inc
push
push
or
xchg
and
dec
pop
mov
andb
mov
adc
or
cmpsb
adc
add
sbb
sub
inc
adc
js
xchg
xchg
or
mov
in
clc
and
sbb
sub
inc
adc
or
je
mov
dec
mov
inc
cld
or
sbb
mov
inc
and
dec
bound
sahf
scas
mov
movsl
lds
arpl
adc
sbb
and
xor
cmpsb
or
enter
lods
and
lock
sbb
adc
dec
cs
cmp
dec
inc
pusha
outsb
mov
dec
mov
enter
loop
add
adc
sbb
orl
push
sahf
mov
adc
cmpsb
or
lock
adc
or
xchg
and
mov
mov
dec
lods
xchg
mov
repnz
sbbl
dec
push
xchg
and
nop
mov
sub
sbb
adc
dec
or
inc
pop
push
enter
cmp
dec
inc
pop
insb
mov
and
dec
scas
xchg
mov
testb
xor
dec
dec
xchg
pop
and
adcb
rorb
xchg
repnz
and
adc
mov
push
sub
movsb
sub
mov
fists
je
inc
jb
jns
arpl
push
mov
dec
xlat
in
sub
dec
out
and
dec
jl
push
xchg
sbb
xlat
shl
movsl
push
adc
adcb
cmp
sbb
xor
incl
adc
sbb
jns
or
es
arpl
jmp
fcoml
jno
mov
popa
cmp
push
push
ja
iret
fs
dec
jne
insb
lcall
sti
movl
or
sub
or
imul
inc
js
inc
mov
movsb
adc
notl
jo
imul
dec
lods
mull
dec
mov
push
xchg
inc
adc
cli
popf
test
dec
pop
pop
dec
dec
enter
jmp
mov
and
test
int
or
je
or
adc
jle,pt
mov
sti
dec
lea
push
xchg
xchg
stos
jo
push
jmp
loopne
push
jp
ja,pt
inc
or
xchg
scas
and
dec
repnz
sbb
daa
cmp
pop
mov
bound
cmp
ljmp
dec
inc
fcomps
outsb
movsb
popf
push
dec
mov
aam
outsl
xchg
dec
movsb
mov
fildll
sbb
dec
push
jmp
inc
jmp
push
cmp
dec
cmpsb
outsb
dec
rorb
and
inc
mov
je
inc
add
jns
mov
dec
jns
adc
inc
dec
nop
mov
pop
push
and
xor
push
inc
sbb
ficoml
into
mov
jge
pop
loopne
gs
push
and
movsb
jnp
xchg
add
xchg
into
and
ror
outsb
stos
jb
sub
xor
clc
pop
sahf
stos
pop
clc
cld
rcrl
adc
imul
dec
push
ljmp
sub
xor
mov
fstps
dec
push
mov
jne
rorb
mov
sub
fisubrl
jle
xchg
shll
outsb
dec
xor
nop
mov
insl
lods
pop
jle
mov
xchg
mov
in
fisttpl
push
mov
adc
sub
inc
sbb
outsb
or
movsl
mov
test
test
test
into
lea
xor
inc
iret
mov
leave
xor
jno
hlt
jae
sub
mov
sarb
mov
arpl
sub
jo
inc
push
dec
adc
push
cmp
pop
pop
int
popa
sub
mov
push
outsl
and
fwait
mov
gs
les
scas
dec
mov
sub
es
arpl
cmpsb
outsb
rcll
xor
jns
insl
flds
aam
loope
insl
jo
jns
insl
cmp
jge
je
arpl
inc
inc
sbb
subb
stc
xchg
and
xchg
xor
lea
bound
fimuls
inc
stos
ja
stc
mov
push
lret
xor
test
dec
stc
and
leave
ret
sbb
in
sub
test
push
adc
scas
adc
je
stos
movsl
push
push
ficompl
mov
and
pop
and
rcrb
push
adc
sbbb
and
or
js
add
movsb
inc
xchg
dec
sbb
dec
push
in
daa
ror
push
xor
xor
loopne
fistpl
imul
mov
cmp
int
dec
adc
xchg
es
enter
adc
push
mov
adc
inc
sbb
lods
cli
jae
jmp
fdivrs
call
fsts
push
jge
sub
xchg
ss
dec
xchg
ficompl
jae
inc
sub
dec
sub
pop
sub
dec
dec
push
push
cmp
sub
mov
push
dec
aam
inc
cli
jmp
dec
pop
jb
adc
or
xchg
mov
push
or
inc
or
push
dec
jmp
xor
dec
jecxz
movsl
sub
inc
out
push
adc
push
movsl
fs
movsl
insb
dec
adc
push
lret
cmp
outsl
dec
insb
push
push
and
jae
divb
in
cmpsb
and
push
inc
push
ret
sbb
xchg
mull
sub
push
mov
clc
xor
dec
add
int3
pop
add
int
sub
into
and
ss
adc
mov
leave
xchg
or
and
add
xor
in
xor
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
bound
push
jb
sahf
cmp
cmp
cmp
cmp
dec
cmp
cmp
ja
mov
xchg
lret
xchg
ficoms
ftst
or
pushf
movl
test
lea
xchg
daa
mov
daa
daa
aad
call
clc
sbb
cmp
adc
es
xor
pushf
pusha
pushf
pushfw
jae
jns
xchg
pushf
lcall
pushf
les
pushf
out
pushf
clc
xchg
cmp
daa
cmp
push
daa
jb
mov
xchg
daa
shlb
call
push
cmp
lahf
cmp
daa
fbld
in
and
cmp
and
sub
cmp
inc
leave
arpl
mov
jb,pt
jb
jb
jb
jb
jb
jb
sbb
aas
dec
pushf
popa
pushf
xchg
pushf
clc
mov
addl
in
in
in
xchg
sub
jb
jb
inc
xchg
mov
in
in
in
cmp
and
sub
xor
dec
adc
xor
aam
ficoml
inc
xchg
pop
xchg
fs
insb
xchg
rcll
jmp
sti
nop
add
push
in
in
and
in
in
in
in
in
in
in
cmp
cmp
cmp
push
add
dec
dec
ja
nop
dec
test
dec
fmull
inc
mov
xchg
ficoms
movsl
pushf
loope
in
xchg
cmp
daa
xor
push
and
xchg
sbb
nop
into
cmp
xor
push
cmp
jle
xchg
xor
or
repnz
push
jb
test
lcall
leave
xlat
lret
int3
push
pushf
sysret
lock
cmp
lods
leave
mov
enter
addr16
sbb
xor
pushf
ljmp
daa
pusha
and
dec
testl
xchg
fs
push
jo
jbe
jnp
adcl
test
xchg
xchg
icebp
xchg
cli
pusha
imul
in
in
in
in
cmp
adc
cmp
pop
cmp
cmpl
lods
cmp
push
es
das
dec
push
dec
bound
cmp
cmp
xchg
aas
lahf
pushf
inc
inc
add
add
mov
in
cmp
xchg
cmp
aaa
aas
inc
lds
xchg
push
cmp
xchg
das
imul
imul
jb
jb
jb
dec
enter
and
add
cmp
xchg
adc
and
inc
xchg
push
xchg
pop
xchg
gs
outsl
xchg
xchg
xchg
stos
xchg
mov
sub
xchg
ficoms
notb
arpl
insl
in
in
xchg
xor
mov
jb
jb
jb
sbb
cmp
xor
pushf
jae
sbbb
mov
pushf
ficompl
pushf
cli
xchg
or
adc
sbb
and
sub
xor
dec
daa
dec
daa
push
daa
pop
daa
bound
shll
xchg
adcb
dec
mov
dec
mov
dec
rorb
dec
loop
ljmp
or
adc
sbb
and
sub
xor
cmp
inc
and
push
in
in
in
in
in
in
in
in
xchg
mov
jb
loopne
andb
subb
jb
jb
pop
pop
les
and
mov
pushf
nop
pushf
cwtl
pushf
mov
dec
sahf
rorb
rorb
dec
loopne
call
mov
xor
test
xchg
sbb
sub
out
daa
cmp
inc
daa
dec
daa
push
daa
pop
daa
pusha
daa
push
daa
andb
daa
nop
daa
cwtl
daa
mov
and
enter
fmuls
inc
call
shlb
dec
sbb
jb
jb
jb
jb
jb
jb
pop
push
cmpb
cmp
cmp
cmp
addr16
shlb
fsubs
loopne
out
shl
or
sbb
and
sub
inc
cwtl
call
in
lcall
sub
or
pushf
mov
mov
pushf
les
xchg
in
add
or
adc
adc
sbb
sbb
and
and
sub
sub
inc
in
in
in
lcall
jl
xorb
mov
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
arpl
jl
sbb
and
sub
xor
cmp
leave
jl
or
leave
mov
mov
mov
enter
aam
fsubrs
cmp
add
imul
and
je
mov
leave
cmp
inc
leave
inc
leave
dec
leave
pop
leave
js
or
leave
mov
mov
nop
leave
xchg
leave
cwtl
leave
pushf
leave
mov
leave
fmul
loopne
in
call
lock
jb
jb
sbb
aaa
sub
xor
bnd
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
pop
call
addr16
daa
clc
daa
cld
cs
cmp
adc
xor
cmp
inc
daa
inc
daa
dec
daa
dec
daa
push
daa
push
daa
pop
daa
pop
daa
insb
daa
mov
xchg
daa
cwtl
daa
pushf
daa
mov
daa
lods
daa
mov
mov
enter
lret
hlt
jb
jb
loopne
jb
dec
or
dec
adc
dec
inc
dec
dec
cmpsl
sub
and
mov
jb
jb
jb
jb
jb
jb
dec
mov
push
mov
enter
or
adc
sbb
and
sub
pusha
xchg
fs
push
xchg
je
js
jl
adcb
xchg
rclb
ror
aam
fmul
fmul
in
mov
sbb
sub
sub
test
leave
push
leave
js
jl
or
leave
mov
mov
nop
leave
test
enter
aam
fmul
fmul
loopne
in
cmp
add
jb
jb
jb
push
xor
lret
cmp
inc
sub
movsb
pushf
dec
pushf
pusha
pushf
sbbb
xchg
pushf
cwtl
pushf
pushf
pushf
mov
push
mov
call
icebp
dec
stc
pop
cmp
loope
stc
sbb
mov
shll
dec
leave
dec
int
rorl
dec
dec
loope
in
jmp
mov
xchg
stc
xchg
std
nop
add
pop
lcall
daa
popa
daa
imul
add
leave
sub
sub
xor
insl
cmp
cmp
cmp
leave
jne
jmp
test
xor
adc
movsb
push
xor
aam
dec
aas
dec
bound
dec
xchg
dec
scas
dec
roll
xor
dec
dec
dec
outsl
dec
mov
dec
mov
inc
sub
cmp
mov
mov
lock
jb
jb
dec
out
push
push
inc
inc
pop
xor
fs
mov
ss
jb
jb
jb
sbb
aaa
cltd
test
dec
fidivrs
mov
cmp
push
push
cmp
dec
pop
dec
addr16
jne
mov
aad
scas
and
jbe
jge
push
shr
push
jns
xor
in
in
in
cmp
pushf
sbbb
fistps
pushf
sti
xchg
ds
daa
or
adc
pop
daa
push
daa
and
sub
das
and
dec
inc
dec
inc
arpl
outsl
daa
jne
jge
xchg
mov
test
pushf
in
pushf
cmc
pushf
incb
and
and
test
ret
in
xchg
mov
adcb
add
gs
rdtsc
cmp
imul
mov
add
jmp
inc
std
enter
and
jb
jb
jb
jb
jb
pop
into
and
sbb
daa
xchg
and
xchg
ficoms
adc
xchg
dec
cmp
lods
daa
shll
pusha
pusha
push
in
in
in
in
in
in
xchg
push
shll
xchg
ss
ret
leave
ror
and
and
sub
xchg
xor
jle
pop
cmp
test
pushf
je
js
jl
orb
pop
xchg
pushf
mov
mov
mov
les
dec
int3
dec
rorb
dec
fsubs
popl
into
or
adc
dec
sbb
cmp
addr16
mov
mov
pusha
dec
fs
mov
daa
js
jl
test
mov
nop
and
mov
cmp
cmp
cmp
cmp
cmp
cmp
sub
or
int
les
and
xchg
xor
into
dec
or
cmp
into
pushf
test
xchg
pushf
andb
mov
sub
sbb
pushf
aam
fmuls
in
repz
decl
mov
dec
sub
push
in
dec
dec
inc
xor
leave
addr16
insl
leave
ja
xchg
xchg
mov
rol
dec
rorl
dec
out
lock
cli
dec
add
dec
sbb
and
in
in
in
in
in
in
in
in
in
in
in
in
in
cmp
cmp
cmp
and
pop
nop
push
or
push
pop
cmp
pushf
xchg
lods
bound
pushf
stos
xchg
mov
rol
xchg
lret
xchg
ficoml
repnz
cli
nop
add
or
adc
sbb
and
sub
xor
cmp
inc
in
in
in
sahf
sub
pushf
jb
jp
sbbb
mov
mov
shlb
fisubl
loop
ljmp
aaa
or
adc
sbb
and
sub
xor
cmp
inc
leave
dec
leave
push
leave
pop
cmp
pop
inc
cmp
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
add
adc
daa
mov
sarb
leave
jno
leave
shll
repnz
xchg
es
pop
push
repnz
xor
xor
aam
sbb
sbb
xor
pushf
lcall
jb
into
and
xchg
shrl
or
xor
mov
xchg
add
cmp
sahf
les
ret
and
xchg
xchg
add
mov
xchg
pop
xchg
addr16
popa
test
cmpsl
xchg
fists
rorb
dec
test
cltd
inc
xchg
je
inc
push
rcr
xor
pop
xor
je
xchg
insb
xor
pop
cmpsl
push
xchg
inc
xorl
push
cmp
pop
popa
add
pop
cmp
push
xorb
pop
rolb
lods
lret
movsb
jb
loopne
inc
in
in
jp
in
in
cmp
dec
and
roll
mov
jb
pop
fisttpl
pop
or
sbb
xor
in
in
imul
gs
jno
xor
lcall
movsb
dec
mov
clc
cmpl
ret
push
int3
jb
jb
sbb
cmp
xchg
lcall
fcoms
jp
pop
pushf
jl
fnstcw
pop
sub
push
and
in
mov
cmp
fs
scas
daa
mov
loopne
lods
sbb
xor
pushf
dec
xchg
movl
jb
jb
jb
jb
jb
jb
jb
pop
andl
xor
outsb
add
sahf
lock
mov
push
pushf
outsb
pushf
cwtl
pushf
incb
loopne
pushf
xchg
and
sbb
xor
leave
adcb
push
in
in
in
xchg
xchg
dec
and
cli
push
test
cli
and
dec
js
and
ja
xorl
pop
xlat
lcall
xor
inc
sbb
aas
cmpsl
pushf
mov
lods
mov
adc
xchg
scas
dec
movsb
loope
lods
cmp
sbbl
daa
xchg
add
dec
dec
push
mov
dec
mov
popa
shlb
xor
pushf
cmp
xchg
jnp
adc
dec
decb
loope
sub
sahf
push
pop
mov
enter
pop
aaa
es
xor
xchg
mov
pop
insb
cmp
cmp
push
daa
jbe
hlt
adc
sbb
cmp
push
dec
pop
or
mov
fs
in
cmp
jge
dec
jo
popf
and
sub
lods
jl
cmp
or
xor
pop
and
ds
jo
cmp
dec
ret
es
daa
and
loop
adc
popa
jo
leave
mov
mov
xor
mov
jle
in
in
in
in
in
in
in
in
in
in
in
in
in
or
xor
daa
push
daa
adc
push
daa
sbb
push
daa
and
es
loopne
xor
ss
jb
jb
jb
jb
jb
jb
pop
push
or
leave
push
outsb
leave
jb
jbe
or
xchg
mov
mov
xchg
cmpsb
lods
xchg
and
sub
cwtl
mov
ret
push
sahf
adc
dec
push
ficomps
dec
out
movsb
out
push
cmpsb
adc
mov
xchg
test
push
popa
scas
push
sub
mov
pop
mov
es
push
mov
ss
ds
test
dec
popa
mov
pop
pop
ret
xorb
pushf
jp
jle
adcb
xchg
in
in
xchg
test
mov
popa
fidivs
pop
loop
ret
lret
dec
rol
call
loop
loop
ljmp
or
popa
loop
leave
or
push
leave
adc
push
leave
sbb
push
leave
and
es
sub
cs
daa
add
mov
xchg
inc
daa
inc
and
shrl
pop
push
sbb
sbb
outsb
xchg
jb
jbe
jp
jle
subb
leave
mov
xchg
leave
xchg
leave
lcall
stos
in
in
in
in
in
in
in
in
pushf
xor
rcrb
pushf
loop
out
stos
out
in
in
in
in
xchg
pop
mov
daa
or
push
daa
adc
add
in
in
in
in
in
mov
push
pushf
dec
xchg
push
dec
push
pop
dec
pop
dec
bound
dec
push
sub
mov
jle
and
xchg
xchg
daa
lcall
cs
mov
hlt
lcall
sbb
sub
or
test
mov
insb
sahf
mov
fadd
push
stos
push
sub
add
sbb
pop
pop
fs
dec
cmp
jecxz
out
enter
sbb
and
loope,pn
dec
cs
outsb
ja
mov
sub
pop
in
out
and
xchg
mov
pop
jb
dec
jl
push
shl
cwtl
pop
and
cmp
mov
dec
test
inc
call
xor
inc
lock
test
cmp
sub
jb
sbb
xor
pop
ret
cmp
ss
mov
jb
jb
jb
pop
lea
cmp
popa
push
test
inc
leave
dec
leave
pop
leave
imul
ret
daa
iret
add
cmp
stos
cmp
or
cmp
sub
cmp
cmp
daa
add
push
loopne
mov
cwtl
in
in
in
in
in
in
dec
xchg
in
in
in
in
in
in
in
ljmp
dec
and
iret
daa
dec
and
lods
sub
jmp
mull
xchg
push
mov
jno
jns
and
dec
clc
mov
sbb
cmp
sbb
aad
push
xor
popa
daa
xchg
daa
int
fldenv
jmp
rorl
xchg
adcl
xchg
mov
push
pop
je
out
add
xor
jo
loopne
test
and
sub
and
lcall
mov
jb
dec
leave
push
cwtl
jecxz
in
pop
mov
inc
lods
and
add
daa
pop
daa
outsl
and
in
in
mov
sbb
sub
loopne
adc
jb
dec
pop
and
jns
xchg
sub
loopne
adc
xchg
inc
ret
mov
xchg
insl
pop
lods
jb
pop
lahf
pop
movsb
or
aam
int3
add
lret
or
mov
jb
cwtl
fs
sbb
outsb
push
cmpsl
cmp
inc
dec
dec
dec
dec
movsb
aam
lock
test
scas
cmp
daa
or
mov
fs
leave
jno
sbb
mov
dec
push
dec
dec
aam
lcall
or
sbb
es
cli
dec
insb
cmpsl
xchg
and
mov
or
cmp
xchg
test
lock
and
dec
outsl
xor
and
mov
pushf
ljmp
push
in
in
xchg
cmp
imul
das
or
mov
cmp
fldenv
ljmp
xor
or
mov
push
insl
leave
sahf
leave
mov
mov
loope
cld
cmp
push
and
dec
jb
jb
push
mov
lret
xchg
in
nop
sbb
jb
jb
jb
jb
inc
jb
mov
adc
movsl
mov
adc
movsb
pop
pusha
or
shl
jb
jb
jb
jb
jb
jb
jb
sbb
cmp
jne
pushf
fcomps
mov
sub
xchg
jo
push
mov
int
test
or
dec
das
xchg
add
mov
adc
adc
sub
mov
or
and
dec
sbb
leave
cmp
or
jns
xchg
into
xor
in
mov
mov
lock
push
loopne
mov
inc
jb
push
rol
sub
push
in
or
ss
imul
dec
mov
dec
fcoml
sarl
cmp
mov
mov
mov
in
enter
sub
xchg
std
inc
lods
inc
pusha
sub
sub
mov
mov
xor
mov
pushf
fs
xchg
pushf
mov
pushf
out
hlt
xchg
xor
mov
adcb
dec
adc
jne
into
dec
lret
les
sarl
xlat
pop
push
sub
mov
out
push
ret
pop
xor
mov
jmp
add
dec
dec
mov
fs
sbb
pushf
scas
pushf
int
loope
clc
xchg
or
movsl
sbb
rcrl
xchg
xchg
scas
xchg
lret
xchg
jmp
or
push
mov
int
add
adc
das
cmp
xchg
inc
xchg
dec
pop
push
sbb
pushf
lahf
pushf
mov
lds
adc
popa
mov
sbb
jb
jb
jb
jb
dec
jle
pop
xchg
sti
dec
adc
es
leave
ss
dec
leave
cmpsb
push
call
ret
or
push
xchg
je
mov
pop
mov
and
inc
or
sub
cmp
inc
mov
subb
sub
cld
ret
xor
sbb
push
adc
inc
sbb
sbb
and
or
sub
fmull
and
daa
fsubl
icebp
and
mov
je
push
adc
add
pop
sbb
and
mov
in
in
mov
test
in
dec
and
push
rclb
pop
test
jb
shrl
cvtpi2ps
dec
gs
icebp
sub
nop
je
stos
std
enter
imul
cmp
das
rolb
leave
leavew
jne
or
js
jb
subl
push
in
xchg
pop
lock
and
clc
jp
in
je
and
pop
dec
sbb
pushf
movsl
pushf
lds
xchg
cmpsl
xchg
ficoms
and
aas
adc
mov
xchg
mov
adc
xchg
out
test
orb
dec
jo
cmp
and
inc
cmp
add
out
xchg
sbb
arpl
pushf
xchg
adc
sbbb
push
dec
and
aam
inc
sysenter
sbb
ljmp
pushf
adcb
test
leave
ret
or
cmovle
ret
and
xchg
inc
imul
in
in
in
mov
leave
xlat
leave
fcmovne
dec
sub
daa
jno
cli
xchg
push
lock
push
pop
adc
dec
arpl
xchg
mov
fstps
imul
jb
jb
jb
push
sbb
pop
mov
lahf
xchg
xor
leave
adcl
loop
xchg
sub
cwtl
cmp
decl
sbb
jb
dec
xchg
les
hlt
nop
or
in
in
popf
adc
int3
das
add
and
cs
xor
ds
ret
in
xchg
add
out
fdivrs
push
mov
cwtl
daa
lahf
loope
mov
add
cmp
movsb
xchg
lods
shrl
es
orl
cmp
push
dec
movsb
inc
push
cld
push
sub
mov
sbb
test
xor
loopne
jae
jl
leave
in
xchg
pop
sbb
pushf
fstps
push
sahf
inc
adc
cmp
or
and
leave
imul
xchg
pop
mov
and
xor
xchg
push
push
jb
dec
out
or
push
cld
dec
testb
pop
adc
adc
sbb
push
xorl
ja
jle
scas
pop
push
pop
loopne
xchg
or
jb
jb
jb
jb
dec
xchg
cmpb
or
cmp
icebp
cmp
es
mov
jb
mov
mov
ret
mov
dec
inc
or
data16
subb
mov
push
cmp
or
and
in
outsb
les
push
push
clc
inc
gs
clc
mov
cltd
ret
push
mov
adc
push
in
popf
add
lods
in
lcall
in
nop
push
xchg
pop
xchg
imul
xchg
mov
push
sub
push
push
mov
ret
loop
mov
xchg
fsubl
xchg
pop
cmp
in
je
jnp
fcoml
mov
sub
ret
movsb
mov
push
lret
lock
cmp
push
pop
dec
push
push
pop
mov
ljmp
pop
dec
sbb
dec
and
rcrb
lods
dec
mov
sbb
test
xchg
daa
stos
and
mov
or
jb
jb
jb
jb
dec
mov
push
push
pop
pop
adc
loopne
push
xchg
add
daa
mov
in
in
je
adc
mov
fwait
sbbl
xchg
out
ficompl
jno
jl
and
fs
xchg
pushf
test
xchg
add
js
lahf
xchg
in
sbb
cld
and
je
pop
dec
ficomps
addr16
insl
shlb
jle
repnz
enter
call
std
imul
xor
dec
push
jo
dec
je
mov
cmpsl
add
loope
pop
leave
pop
fs
data16
in
in
in
mov
mov
rol
lret
daa
daa
out
out
and
push
popa
push
jnp
mov
mov
inc
adc
popf
test
adc
or
xchg
jb
jb
jb
dec
stc
or
inc
rorb
fisubrl
ja
mov
in
mov
add
lock
icebp
outsb
cmp
and
rcl
inc
jl
sbb
pushf
jne
mov
test
aam
fcoms
jb
call
pushf
hlt
pushf
clc
pushf
cld
mov
or
add
pop
cmp
movsb
inc
js
jb
pop
push
test
ret
push
cld
push
fs
jecxz
xchg
nop
push
adc
cwtl
dec
mov
mov
push
mov
xchg
call
in
hlt
in
js
loopne
dec
add
inc
or
inc
push
adc
loopne
in
xchg
movsb
add
adc
xor
insb
cmp
test
mov
add
mov
push
inc
adc
ljmp
je
lock
test
pop
mov
push
pushf
loopne
movsb
mov
cld
lods
mov
add
add
int3
ret
push
aam
fsubrs
loopne
in
call
lock
xchg
xor
dec
ss
pop
ficomps
push
das
test
xchg
in
in
in
pushf
mov
xchg
clc
loope
shlb
in
in
in
in
in
mov
sbb
xchg
sub
or
in
in
in
mov
push
loop
fdivs
andb
jbe
mov
test
mov
xor
scas
adc
aas
jl
orb
mov
daa
cwtl
daa
pushf
and
mov
dec
mov
fidivrs
sub
fs
fwait
adc
mov
fidivrs
mov
rolb
dec
insb
xchg
sub
clc
nop
das
shll
or
pushf
daa
mov
pop
inc
cmp
daa
mov
push
das
int3
dec
and
push
add
mov
xorb
jo
pushw
or
or
pusha
sub
rcll
jae
cld
adc
and
inc
enter
adc
dec
pop
clc
inc
flds
jbe
sbb
sub
pusha
roll
push
push
test
jo
sbb
push
aas
and
jo
enter
nop
repnz
call
push
dec
sbb
bound
adc
adc
push
inc
fsubrs
push
pop
jo
fsubrl
mov
and
mov
xchg
pushf
and
nop
xchg
jo
jo
outsb
inc
sub
or
loopne
fsts
sbb
adc
inc
orl
addl
xchg
mov
je
jne
jb
fs
pop
jne
pushf
imul
or
insl
jae
inc
sub
arpl
add
int3
enter
loopne
xchg
gs
push
or
mov
adc
pop
imul
cmp
and
pop
cltd
inc
jae
adc
cmpsb
dec
push
outsb
adc
or
jb
adc
lcall
dec
mov
inc
inc
cmpsb
mov
daa
or
xchg
add
push
cli
xor
popa
popa
xor
or
pushf
xor
push
adc
add
pop
push
xchg
push
sbb
gs
or
movsb
jle
or
or
aad
clc
sub
push
test
pushf
je
sbb
mov
int
test
scas
push
push
sbb
imul
dec
sub
fs
fadd
popf
cwtl
xchg
je
pop
push
adc
xchg
imul
je
popf
jo
test
push
outsl
sub
inc
xchg
push
imul
outsl
dec
jb,pt
adc
xor
mov
gs
adc
test
and
push
dec
sub
mov
xchg
call
xchg
push
pop
push
jo
dec
and
into
outsb
and
mov
jne
test
xor
dec
push
dec
insb
repnz
insb
dec
push
and
or
lods
mov
add
movsb
scas
int3
add
mov
adc
mov
andb
arpl
jae
xchg
jbe
mov
mov
scas
xor
popf
sub
sub
push
insl
mov
push
js
cmpsb
mov
or
sbb
xor
add
loop
call
and
mov
pushf
movsb
adc
aaa
fs
mov
dec
xchg
push
sub
dec
jp
xor
push
cmp
push
pop
arpl
cs
shlb
mov
sbb
dec
pop
fiaddl
rcll
pop
into
push
or
cli
inc
imul
ss
or
push
push
cmp
jns
je
push
mov
xchg
jbe
fsubs
aam
popf
hlt
ss
and
push
push
shlb
divb
sub
or
adc
movsb
push
arpl
xor
xor
lret
jmp
cmpsb
push
mov
cltd
push
bound
cmpsb
hlt
pop
push
scas
dec
sbb
cmpsb
push
icebp
dec
test
and
dec
xor
std
lret
jae
sbb
add
push
adc
jo
push
push
dec
inc
sbb
add
dec
lcall
mov
pop
inc
cmp
push
inc
and
adcb
dec
data16
sbb
adc
or
rcrb
mov
dec
into
pop
mov
mov
lretw
sub
sub
movsl
or
pop
in
jo
sub
jns
pop
in
and
adc
dec
fs
xchg
sub
negb
ljmp
or
inc
fsts
jne
out
adc
inc
jb
loopne
pushf
mov
sub
loopne
pushf
js
cltd
hlt
bound
les
xor
loopne
cmpsb
fmuls
arpl
push
inc
dec
adc
lret
rcrb
adc
das
dec
dec
outsl
inc
dec
sub
and
fs
inc
push
push
movsl
add
cmp
xorb
repz
inc
add
fwait
cmp
sbb
or
dec
lods
js
add
xlat
adc
xor
mov
subl
divl
jnp
test
sub
xor
pop
inc
jecxz
pop
push
cwtl
imul
inc
outsl
outsb
sbb
sbb
jg
pop
popf
stos
pop
pop
push
push
dec
pop
pushw
mov
mov
cld
test
imul
inc
mov
cli
bound
cltd
je
dec
inc
cltd
jo
dec
sbb
gs
scas
push
xor
data16
push
push
and
popf
repz
jo
and
inc
push
lock
inc
sub
sbb
cmc
mov
sbb
xchg
sbb
cs
push
pushw
popa
adc
mov
movl
sub
and
enter
jge
inc
dec
xor
xchg
and
xchg
xor
mov
inc
out
jge
add
push
inc
mov
rorb
sbb
arpl
push
insl
adc
imull
push
add
insl
xchg
addr16
sbb
adc
and
jo
jge
pop
ja
and
outsb
cmp
cmp
or
in
dec
xor
or
jb
mov
cmpsl
ret
pop
mov
mov
aam
enter
fidivrl
ret
push
cltd
push
pop
push
push
and
sub
xchg
idivb
outsl
lds
cmp
lcall
call
pop
sub
sub
mov
shl
test
test
movsbl
and
cmp
inc
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
inc
or
out
or
xor
shl
bt
xor
xor
shr
btr
call
lcall
out
xor
shl
out
outsb
cs
mov
test
cld
mov
call
lcall
add
and
bts
xor
btc
bsf
sub
bsf
or
call
lcall
add
sub
movzbl
inc
sub
bt
btc
bsf
neg
call
lcall
ret
neg
bt
test
inc
cmp
sub
movzbl
bts
call
lcall
icebp
movsbl
btc
and
cmp
inc
movzbl
test
test
call
lcall
pop
outsl
xor
lret
cmp
adc
bsf
and
or
movswl
call
lcall
cmp
cmp
add
bsf
sub
adc
mov
call
lcall
subl
fstps
fistps
call
pusha
and
aas
adc
mov
sub
mov
mov
sub
mov
hlt
fisubrl
pop
cmp
and
cmp
mov
cmp
insl
xor
sub
add
inc
mov
sub
popa
sub
rorb
mov
mov
fiaddl
sarb
pop
out
fcmovnu
sbbb
cmp
pop
or
fwait
bound
sbb
rclb
pop
cmp
clc
add
or
sub
or
fcmovu
fcmovnu
inc
pop
pop
fbld
and
pop
and
aam
sbb
sub
pop
xor
aam
mov
aam
sub
aam
adc
pop
or
pop
xor
mov
xor
inc
pop
pop
daa
push
mov
cmp
pop
xor
sbb
fsubs
arpl
sbb
lea
fs
rcr
pop
sub
mov
xchg
fmuls
shll
fcmove
and
or
add
or
and
pop
and
mov
pop
daa
push
pop
sbb
or
or
mov
sub
mov
pop
and
mov
gs
fcmovnu
sbb
pop
add
xorb
push
mov
pop
sbb
sbb
mov
gs
fiaddl
cmp
and
cmp
mov
mov
mov
aam
sub
add
enter
cmp
xor
fcmovnu
fildl
pop
fbstp
pop
out
fldt
sub
pop
or
pop
cmp
or
or
rorl
sbb
adc
add
and
and
pop
and
aam
sbb
sub
pop
xor
loope
aam
xor
xor
sbb
mov
call
repz
mov
popa
aam
xor
and
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
daa
push
aam
xor
mov
mov
pop
pop
mov
mov
mov
xor
inc
mov
rcr
and
aam
and
cmp
enter
and
bound
aam
add
gs
mov
aam
sub
scas
inc
inc
mov
aam
adc
cmp
inc
mov
xor
aam
xor
fcmovnu
fildl
pop
fbstp
mov
sbb
xor
mov
pop
pop
mov
or
pop
and
xor
fcmovnu
fildl
pop
fbstp
aam
and
outsb
pop
es
rclb
pop
or
aam
xor
sbb
lock
add
fldenv
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
mov
mov
pop
adc
mov
sub
xchg
in
mov
mov
fcmovu
fcmovnu
inc
pop
pop
fbstp
mov
mov
popa
xor
mov
mov
sub
sbb
adc
fiaddl
cli
fcmovnu
fstpt
pop
sub
popa
xor
pop
adc
mov
popa
xor
insb
xor
mov
push
sahf
rcll
xlat
push
xchg
lret
sbb
fldl2e
fstps
fists
xlat
fistl
fistpll
cmp
mov
sbb
pop
and
and
push
fldenv
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
sub
fistpl
or
in
mov
sbb
sub
jns
adc
pop
sub
sbb
sbb
aaa
and
fistpl
mov
sub
or
out
xor
sub
ds
mov
aam
sub
mov
pop
sub
mov
jmp
arpl
aam
sub
daa
push
xlat
lcall
aam
psubsb
sub
mov
adc
in
stc
test
or
pop
movsl
aam
sub
fiaddl
fldenv
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
fcmovnu
fcmovnbe
popa
and
mov
pop
sbb
fs
add
bound
popa
cmp
xor
fcmovnu
fildl
pop
fbstp
push
fcmovu
fisttpl
xlat
and
shll
popf
fcmovnu
fistl
shr
adc
or
ficoms
mov
and
scas
aam
and
scas
sarl
scas
aam
xor
repnz
aam
pop
sbb
pop
xor
xor
aam
pop
sbb
pop
xor
pop
xor
xor
xchg
xlat
fstpt
push
scas
push
daa
imul
pushf
fisttpl
scas
ficoms
popf
lret
or
ficoms
popf
lret
or
or
lret
or
pop
or
or
lret
or
sbb
or
lret
or
sbb
or
lret
or
sbb
or
lret
or
sbb
push
faddl
arpl
fcmovnu
fcmovnu
or
lret
or
sbb
or
lret
or
scas
repz
fcmovu
fcmovnu
fisttpl
scas
ficoms
popf
lret
or
adc
or
lret
or
repnz
andl
xchg
sbb
rcll
popf
push
push
fcmovu
fcmovnu
fisttpl
scas
ficoms
popf
lret
or
adc
or
lret
or
fcmovnu
test
out
fldt
and
test
ret
and
and
and
lea
repnz
fsubs
and
fstpl
scas
leave
pop
or
push
push
lea
repnz
xor
lock
call
inc
mov
out
pop
pop
fistpll
pop
xor
addr16
xor
sbb
nop
gs
lret
out
lcall
js
mov
pop
adc
pop
cmp
xchg
mov
push
mov
xor
test
jne
rcr
pop
sbb
inc
rcrb
into
ret
mov
mov
adc
ja
stos
aam
pop
xor
fcmovnu
fildl
pop
xor
pop
adc
push
sub
aam
sub
mov
mov
sub
inc
insl
cmp
fcmovu
fcmovnu
inc
pop
pop
fcmovnu
pop
cs
pop
adc
dec
mov
mov
nop
dec
sti
pop
or
or
pop
cmp
fcmovu
fcmovnu
inc
pop
pop
fbld
lret
clc
or
jo
mov
sub
push
shrb
sbb
adc
aas
mov
fcmovu
fcmovnu
inc
pop
pop
fbld
xor
aam
and
mov
in
mov
in
mov
mov
xor
fcmovnu
fildl
pop
fucomip
lret
mov
sub
xor
into
mov
jns
in
push
xlat
pop
cmp
xor
fcmovnu
fildl
pop
fistps
sbb
lock
pop
mov
pop
adc
pop
and
arpl
popa
ds
dec
xor
fcmovnu
fildl
pop
fists
mov
xor
sub
lcall
push
adc
dec
xor
fcmovnu
fildl
pop
fbstp
fbld
lahf
adc
dec
pop
std
sbb
sbb
sbb
mov
pop
jno
xchg
and
std
sbb
addr16
fwait
fwait
fwait
add
pop
lahf
sbb
adc
std
sbb
sub
xchg
xchg
and
std
sbb
mov
sbb
ds
insb
xchg
and
jo
fs
sti
jae
fwait
fwait
fwait
fwait
fwait
fs
push
mov
sbb
and
pop
pop
sbb
jo
mov
pop
cli
jo
jno
mov
lahf
mov
stos
pop
jo
push
jmp
lcall
push
mov
adc
fwait
fwait
fwait
fwait
jo
pop
or
cli
jo
movsl
adc
xchg
and
sbb
adc
inc
mov
repz
sbb
jge
and
pop
pop
pop
jb
std
rcrb
pop
fdivrp
or
test
xchg
sub
inc
std
sbb
rcrl
rcrl
js
and
sub
imul
std
xchg
daa
pop
mov
icebp
cmpsb
adc
mov
je
xchg
daa
outsl
std
and
dec
adc
sbb
sbb
dec
std
sbb
enter
lods
fnstcw
xchg
and
sub
fwait
add
pop
lahf
adc
xchg
xor
pop
jnp
std
sbb
inc
push
push
pop
jb
mov
xchg
daa
pop
pop
jp
insl
pop
dec
jo
fs
sti
jae
fwait
fwait
fwait
fwait
fwait
fs
push
mov
sbb
and
pop
pop
sbb
jo
mov
pop
cli
jo
jno
mov
lahf
mov
stos
pop
jo
push
jmp
lcall
push
mov
adc
fwait
fwait
fwait
fwait
jo
pop
or
cli
jo
movsl
adc
cmpsl
pop
jge
xchg
and
std
pop
jnp
xchg
push
cwtl
pop
push
push
std
sbb
repz
std
cmp
sbb
adc
in
inc
clc
std
sbb
adc
lea
dec
lock
push
std
insb
inc
std
sbb
aam
and
test
sbb
std
sbb
cmp
push
in
std
sbb
sbb
dec
sbb
dec
or
fistl
mov
jb
cmp
pop
insb
dec
xchg
and
sbb
mov
js
std
sbb
and
push
push
sbb
fldenv
sbb
mov
sbb
bndldx
mov
jb
es
xchg
and
pop
jnp
lcall
cmp
insb
pop
inc
push
std
sbb
in
std
pop
jnp
pop
jae
std
xchg
daa
push
std
pop
jnp
jae
fwait
fwait
fwait
add
pop
lahf
sbb
xchg
pop
mov
jae
std
pop
jae
sbb
or
dec
sbb
xchg
and
test
std
insb
pop
outsb
stc
sbb
adc
pop
stos
mov
movsb
xchg
and
push
std
sbb
iret
std
sbb
lods
std
sbb
lock
fwait
fwait
fwait
add
pop
lahf
sbb
adc
xor
and
insb
inc
sbb
sbb
movsb
inc
insb
dec
std
and
pop
mov
fs
sti
jae
fwait
fwait
fwait
fwait
fwait
fs
push
mov
sbb
and
pop
pop
sbb
jo
mov
pop
cli
jo
jno
mov
lahf
mov
stos
pop
jo
push
jmp
lcall
push
mov
adc
fwait
fwait
fwait
fwait
jo
pop
or
cli
jo
movsl
adc
mov
push
jno
and
xchg
daa
pop
std
sbb
jb
pop
xchg
and
sbb
and
enter
push
jae
fwait
fwait
fwait
add
pop
lahf
cwtl
loope
mov
pop
cwtl
pop
sbb
std
insb
inc
xchg
sub
insb
pop
dec
pusha
xchg
and
std
sbb
inc
cwtl
jmp
ss
sbb
rcll
jle
xchg
pop
ja
pop
jnp
xchg
and
pop
ja
jo
add
std
insb
dec
sbb
pop
loope
xchg
and
std
xchg
daa
insl
sbb
sub
fscale
sbb
loope
ja
adc
std
and
daa
outsl
std
sbb
jo
inc
sbb
push
inc
cmp
sbb
inc
std
sbb
xor
fwait
add
pop
lahf
adc
xchg
and
std
insb
inc
xchg
and
xchg
sub
jb
arpl
push
pop
inc
pop
adc
jp
icebp
pop
fstps
pop
lcall
dec
dec
std
sbb
fisubrl
sub
jae
xchg
repz
and
std
fcmovne
fs
mov
pop
lahf
pop
jae
sbb
push
dec
fsts
jb
ret
dec
sbb
xor
insb
dec
jae
fwait
fwait
fwait
add
pop
lahf
jb
data16
cltd
aas
add
lea
std
sbb
push
std
sbb
mov
push
inc
repz
mov
cltd
xchg
push
pop
jb
and
adc
jne
pop
test
sbb
int
push
xchg
sub
mov
repz
lahf
cltd
fwait
and
cmp
std
mov
xor
sbb
bound
das
push
std
sbb
scas
sbb
adc
sbb
cwtl
std
insb
pop
or
loope
insb
ds
pop
inc
and
mov
fdivp
aas
dec
xchg
fwait
into
ret
cwtl
lahf
mov
mov
push
pop
sbb
fcompl
sub
jae
mov
or
lret
and
movl
mov
pop
js
xchg
and
xchg
and
adc
cmpsl
xchg
and
and
gs
xchg
std
and
xchg
mov
xchg
mov
std
sbb
xor
fwait
fwait
add
pop
lahf
adc
movsl
cmp
daa
dec
std
sbb
xchg
std
sbb
mov
sbb
pop
xchg
xor
arpl
cli
sbb
insb
std
insb
pop
sbb
pop
or
sbb
out
and
sbb
in
push
je
sbb
mov
fwait
fwait
fwait
add
pop
lahf
adc
dec
hlt
shll
jnp
sbb
bound
sbb
add
inc
std
xchg
daa
dec
jo
fs
sti
jae
fwait
fwait
fwait
fwait
fwait
fs
push
mov
sbb
and
pop
pop
sbb
jo
mov
pop
cli
jo
jno
mov
lahf
mov
stos
pop
jo
push
jmp
lcall
push
mov
adc
fwait
fwait
fwait
fwait
jo
pop
or
cli
jo
movsl
sbb
fistpl
mov
inc
sbb
std
fldcw
xor
in
sbb
xor
and
insb
pop
xor
imul
sub
pop
cld
lods
xchg
sub
gs
sbb
testb
jnp
jae
fwait
fwait
fwait
add
pop
lahf
adc
lods
std
mov
or
dec
xchg
and
std
sbb
cltd
mov
jnp
pop
adc
lahf
std
and
popa
std
sbb
sbb
sbb
jmp
std
sbb
jne
popa
fwait
xchg
pop
dec
lcall
mov
std
sbb
push
std
fistl
pop
and
jae
mov
push
je
imul
sbb
pop
pop
jg
xchg
xor
and
sbb
aam
cwtl
sbb
jne
jae
lcall
lahf
sbb
ja
xchg
and
std
insb
inc
insb
inc
std
sbb
and
jnp
insb
dec
xchg
and
insb
inc
sbb
std
pop
jae
std
sbb
inc
std
sbb
nop
xchg
and
std
sbb
cmpsb
sbb
popf
dec
call
fwait
fwait
fwait
add
pop
lahf
sbb
xchg
pop
jbe
fs
adc
add
pop
lahf
sbb
adc
fwait
fwait
dec
jae
adc
pop
lahf
jo
fs
sti
jae
fwait
fwait
fwait
fwait
fwait
fs
push
mov
sbb
and
pop
pop
sbb
jo
mov
pop
cli
jo
jno
mov
lahf
mov
stos
pop
jo
push
jmp
lcall
push
mov
adc
fwait
fwait
fwait
fwait
jo
pop
or
cli
jo
movsl
sbb
jae
fwait
fwait
fwait
add
pop
lahf
sbb
out
test
adc
jae
fwait
fwait
fwait
add
pop
lahf
lcall
xor
push
sbb
fwait
jae
sbb
into
xchg
sub
lahf
xlat
std
ror
fs
mov
pop
lahf
std
insb
pop
add
test
sbb
jnp
std
sbb
adc
dec
repz
ja
mov
mov
pop
lahf
sbb
sub
xchg
imul
xor
jnp
inc
xchg
and
std
insb
pop
or
pop
cltd
sbb
xchg
and
mov
xor
sbb
mov
jae
sbb
jb
gs
jp
std
sbb
outsb
std
sbb
xchg
and
std
sbb
sbbl
inc
jo
js
jg
and
pop
sub
sbb
es
xchg
and
std
sbb
adc
dec
sbb
clc
std
xchg
daa
arpl
fwait
fwait
fwait
add
pop
lahf
lcall
xchg
daa
popa
sbb
fcoms
mov
push
insb
pop
and
and
mov
push
xorb
fwait
fwait
add
pop
lahf
sahf
or
push
and
mov
and
fsubl
sub
std
sbb
dec
xchg
and
loope
lcall
lahf
and
popf
fwait
fwait
std
sbb
std
sbb
sbb
and
insb
pop
scas
cmpsl
sub
pusha
std
sbb
fnstenv
fwait
fwait
fwait
add
pop
lahf
and
jnp
test
xor
inc
std
and
push
std
insb
pop
lret
js
call
data16
jae
fwait
fwait
fwait
add
pop
lahf
stos
mov
pop
js
std
sbb
sbb
insl
dec
sbb
sbb
sbb
sbb
fwait
add
pop
lahf
pop
jl
xchg
and
gs
std
pop
jo
std
sbb
insb
dec
sbb
or
ja
jae
fwait
fwait
fwait
add
pop
lahf
shr
xor
sbb
std
pop
jl
sbb
inc
push
insb
dec
xchg
cmp
daa
pop
std
pop
jae
std
push
bound
fwait
fwait
fwait
add
pop
lahf
jo
cmpsb
push
mov
pop
lods
out
mov
outsb
or
or
or
xchg
icebp
add
push
mov
xor
pop
outsb
in
push
rcl
rclb
mov
sbb
out
imul
int3
aam
push
or
push
mov
cmp
shll
push
adc
push
lret
push
add
push
sub
push
add
lods
push
push
cmp
sub
rcl
rcl
shrb
pop
xchg
neg
push
push
push
rcl
shl
adc
push
adc
cmp
sub
cmp
cmp
stc
push
not
cmp
shl
adc
rcll
sub
mov
repnz
pop
repnz
rorb
pop
xlat
rcl
rcl
cmp
adc
mov
shr
push
lods
fstl
rcl
sarb
rcl
rcl
dec
push
push
pop
xchg
and
cs
idivb
rorl
inc
jp
fcmovbe
push
sub
cmpsl
leave
cmp
rcl
rorb
push
pop
xchg
ficoms
cs
idivb
rorl
inc
data16
sarb
rcl
rcl
dec
push
push
push
in
shlb
out
cmp
rcl
rcl
shrb
pop
xchg
neg
push
push
push
rcl
shl
adc
push
adc
cmp
sub
cmp
cmp
stc
push
not
cmp
shl
adc
rcll
sub
mov
repnz
pop
repnz
rorb
pop
xlat
rcl
rcl
cmp
adc
mov
shr
push
lods
ret
push
and
push
cs
testb
shll
cmp
rcl
rorb
push
push
scas
rcl
fstl
rcl
rcrb
rclb
cs
notb
cs
neg
sbb
rcl
rcl
dec
push
push
stos
ficoml
pop
fdivp
cmp
pop
sahf
cmp
rcl
rorb
push
push
ds
pop
fdivp
push
ds
pop
idivb
rorl
inc
jle
fcmovbe
pop
notb
pop
xchg
rcr
jns
push
das
mov
push
cmp
mov
push
and
jns
and
sbb
notb
push
pop
cmp
sub
rcl
rcl
shrb
pop
xchg
neg
push
push
push
rcl
shl
adc
push
adc
cmp
sub
cmp
cmp
stc
push
not
cmp
shl
adc
rcll
sub
mov
repnz
pop
repnz
rorb
pop
xlat
rcl
rcl
cmp
adc
mov
shr
cmp
sub
notb
cmp
rcl
rorb
push
push
adc
sub
push
cmp
push
sub
or
mov
xor
and
mov
push
add
mov
adc
sub
cs
sub
push
cmp
xor
pop
notb
cmp
divb
adc
bound
mov
adc
mov
add
out
and
arpl
flds
and
and
mov
push
sub
pop
xchg
in
inc
sub
cmp
rcl
rorb
push
pop
xchg
aam
sub
push
daa
mov
cmp
call
dec
mov
clc
push
and
adc
iret
pop
xchg
aam
mov
cmp
push
cmp
stos
mov
outsb
pop
mov
sub
add
sbb
xchg
lods
repz
and
cmp
adc
cmp
sub
aaa
adcl
push
adc
repnz
cmp
sub
rcl
rcl
shrb
pop
xchg
neg
push
push
push
rcl
shl
adc
push
adc
cmp
sub
cmp
cmp
stc
push
not
cmp
shl
adc
rcll
sub
mov
repnz
pop
repnz
rorb
pop
xlat
rcl
rcl
cmp
adc
mov
shr
cmp
rcl
rorb
push
shll
and
and
adc
push
xor
and
arpl
xlat
mov
push
ds
pop
out
mov
sbb
das
mov
sbb
mov
sub
cmp
mov
or
rclb
mov
xchg
pop
mov
adc
xor
addr16
fistpll
mov
mov
xor
adc
jns
imul
or
push
adc
divl
push
adc
lret
mov
xor
mov
and
push
rcl
rorb
push
push
ds
pop
divb
sbb
out
jle
or
push
xor
adc
sub
shrb
rcl
rcl
shrb
pop
xchg
neg
push
push
push
rcl
shl
adc
push
adc
cmp
sub
cmp
cmp
stc
push
not
cmp
shl
adc
rcll
sub
mov
repnz
pop
repnz
rorb
pop
xlat
rcl
rcl
cmp
adc
mov
shr
pop
xchg
out
frstor
pop
mov
or
sub
sbb
pop
adc
pushf
cli
mov
pop
filds
rorb
push
pop
xchg
aam
push
aas
outsl
cmpsl
decl
sub
mov
xor
add
push
sbb
xchg
shll
mov
xor
and
or
std
mov
outsb
or
sub
fstpl
adc
ja
adc
jo
rcl
rcl
dec
push
push
push
ds
pop
divb
arpl
outsb
cmp
mov
sbb
pop
sbb
dec
adc
clc
clc
repnz
mov
repnz
mov
mov
cld
loop
repnz
clc
clc
sar
clc
clc
repnz
movsb
mov
mov
repnz
repnz
mov
mov
clc
clc
sar
clc
clc
repnz
mov
call
mov
mov
mov
mov
mov
clc
clc
clc
sar
clc
clc
repnz
call
mov
movsl
movsl
cld
mov
mov
mov
mov
cmpsl
std
repnz
clc
clc
sar
clc
clc
xacquire
sbbb
addb
xchg
xchg
repnz
pushf
fwait
xchg
lahf
xchg
repnz
popf
xor
clc
clc
rcl
rcl
rcl
rcl
rcl
rolb
push
push
push
push
push
inc
adc
add
loope
add
or
ud2
cmp
sbb
push
data16
adc
add
fadd
xlat
lods
out
aam
arpl
cmp
lock
mov
loop
fwait
add
addr16
dec
add
imul
xor
lock
shrl
ret
and
pop
cs
aas
pop
jmp
add
jae
or
loop
and
and
inc
es
addb
and
cmp
andb
pop
fadds
movsl
push
ret
maxps
aam
cmp
add
push
dec
xor
rol
loopne
add
cmpsl
lret
and
sbb
dec
es
sti
add
cmc
sahf
sub
push
ljmp
sbb
sub
shlb
add
call
adc
xchg
adc
sahf
adc
sbb
or
push
or
sub
push
mov
or
repz
add
sbb
loope
add
cmp
inc
cmpsb
cmc
sub
incl
sub
xchg
adc
inc
mov
adc
popa
test
sbb
jnp
fstl
call
adc
add
xor
push
out
iret
sub
xor
fstpl
xlat
push
orb
mov
cmp
inc
push
dec
push
dec
pop
inc
xor
xor
push
cmp
inc
jno
call
push
cmp
clc
ja
hlt
dec
cmp
sti
in
in
push
cmp
push
ss
xor
cmp
cmp
push
inc
pop
jmp
cld
inc
jecxz
inc
stc
dec
out
cmp
push
sbb
push
fdivs
enter
cmp
inc
push
dec
ret
inc
dec
dec
dec
test
add
add
dec
push
pop
xor
inc
pop
ja
cmp
jg
inc
rolb
cmp
push
push
imulb
out
aaa
jb
or
pop
push
sbb
cmc
outsb
sub
push
dec
inc
mov
inc
ss
cs
dec
push
out
push
pop
pop
inc
or
sbb
repz
adc
pop
dec
sti
dec
pop
or
push
inc
outsb
inc
fs
dec
mov
jmp
pop
insl
add
dec
sub
sbb
jne
jp
jb
mov
push
outsl
outsb
iret
mov
test
and
mov
dec
popa
jns
bound
scas
mov
adc
addr16
push
mov
lahf
cmovns
btc
data16
push
sub
dec
insb
and
bound
adc
inc
jb
insb
ss
xchg
inc
fs
inc
insb
outsl
jae
jle
fsubp
sbb
popa
iret
loopw
jae
dec
into
pushf
push
arpl
push
push
push
sbb
iret
popa
insl
push
ja
cmpsb
ljmp
mov
xchg
cs
adc
sub
ja
subl
scas
adc
dec
dec
mov
jbe
shll
adc
push
outsb
dec
test
imul
daa
pop
ficoms
sbb
push
enter
cmp
imul
repz
xor
cs
lea
out
jns
dec
out
gs
mov
add
cmc
lahf
std
mov
mov
mov
stos
ret
lods
mov
xor
fstpl
sub
in
sub
fildl
insb
sbb
lret
out
push
addr16
or
jo
mov
mov
pop
daa
cmp
sbb
div
cltd
add
push
xor
filds
jmp
add
loop
in
dec
cmp
push
lock
pushf
shll
add
fbld
pop
adc
dec
je
jns
cmp
jbe
jmp
data16
dec
add
cmpsl
adc
movsb
dec
repz
or
jnp
sbb
loop
push
mov
in
mov
mov
insb
mov
hlt
test
push
and
sarl
pop
sbb
mov
jle
jmp
and
inc
cs
fildll
sub
push
jne
lock
adc
test
dec
outsb
pop
leave
sub
aam
mov
push
popf
add
and
dec
add
push
inc
push
inc
pop
xor
fs
jne
dec
jp
push
push
xchg
push
jae
test
fwait
add
pusha
