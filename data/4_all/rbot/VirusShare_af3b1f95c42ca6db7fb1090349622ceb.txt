push
or
add
add
add
lock
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
cld
add
add
add
add
add
add
adc
pushf
add
add
adc
mov
add
add
adc
rolb
add
adc
enter
jge
adc
rolb
adc
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
cs
dec
dec
add
xor
xor
inc
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
dec
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
adc
add
mov
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
sub
add
lock
xor
inc
add
loopne
ror
cmp
inc
jne
lods
mov
lahf
mov
nop
jp
iret
test
adc
adc
mov
loop
sbb
sub
adc
movsb
jle
add
call
mov
insb
call
movsl
mov
dec
test
scas
xor
push
in
xor
cmp
out
std
subb
ret
inc
js
mov
dec
test
mov
in
mov
cli
cmp
mov
xorb
mov
out
push
add
push
mov
in
push
mov
lds
mov
fwait
pop
sbb
mov
dec
inc
iret
cwtl
int
mov
mov
and
pop
cli
mov
mov
call
js
mov
out
or
mov
fcmovnb
cmc
sti
xchg
mov
insl
xor
and
popf
pop
cmpsl
fistl
mov
loopne
xor
mov
fstpl
sbb
test
lea
add
dec
mov
movsb
out
mov
scas
adc
icebp
and
push
outsl
jbe
xor
dec
test
mov
ljmp
lea
lock
stos
lea
inc
cli
cs
pop
jns
loop
mov
pushf
enter
bound
shlb
mov
jns
add
push
cwtl
xor
adc
mov
ret
pop
dec
cmp
xor
loopne
inc
scas
mov
cmp
and
mov
ljmp
shl
lock
xor
lods
fidivrs
inc
out
push
cwtl
dec
int3
mov
pushf
mov
bound
dec
stc
into
inc
divb
test
addl
cmpsl
ss
adc
dec
test
loope
idivl
fwait
inc
adc
sbb
jle
ret
jnp
mov
in
push
aad
add
into
js
inc
cmp
pop
addl
subb
iret
lods
stos
movsl
lahf
mul
mov
cs
or
jp
movsb
cld
add
outsl
div
ficompl
jae
inc
ret
je
insl
loopne
aam
cltd
cmp
dec
lcall
scas
popa
xor
pop
outsl
inc
sub
pop
or
adc
cmp
sarl
xor
lret
adc
adc
in
fisubl
cld
bound
add
or
mov
bound
out
ret
cmpsb
iret
test
adc
dec
fs
or
in
cld
inc
pop
test
mov
xor
repz
pop
cmp
dec
pop
mov
arpl
add
cmp
jo,pt
or
sbb
loop
pop
or
aas
nop
ds
xor
cld
pop
and
pop
jne
enter
sbb
mov
icebp
cmp
dec
jb
aaa
mov
pop
das
fdivs
movb
push
aaa
popf
rclb
jne
sbb
jmp
inc
dec
sti
push
mov
push
xor
push
jle
dec
and
xor
sbb
or
aaa
sub
lods
mov
sbb
iret
mov
push
scas
sbb
in
clc
les
jecxz
pop
xor
cmpsl
jl
pop
adc
xchg
loope
lock
cmpsb
ljmp
aad
or
shlb
mov
and
scas
imul
lcall
fidivs
insl
cmp
adc
sbb
aaa
push
inc
xchg
push
lock
iret
cmp
jne
dec
mov
cmp
test
inc
jecxz
adc
movsl
inc
dec
xor
cmp
insl
adc
push
jl
shl
sbb
repz
xor
push
dec
ret
mov
jnp
clc
mov
mov
sub
jg
push
mov
jae
gs
cmp
jb,pn
andl
mov
mov
xchg
xchg
inc
push
add
in
or
ljmp
sub
mov
in
fwait
pop
or
sahf
ja
jecxz
push
mov
lcall
mov
rcll
mov
mov
fs
pop
imul
push
xor
aas
xor
push
sbb
pop
cwtl
rcll
sti
or
xor
cmp
pop
mov
cmp
push
ss
or
mov
mov
pop
sarb
imul
lret
imul
mov
sbb
cmp
jno
fs
or
repnz
xor
repnz
jns
stc
push
sbb
jno
pop
les
sbb
test
dec
jl
outsb
or
dec
leave
icebp
stos
flds
xor
jl
and
pop
pusha
pop
mov
xor
cmp
xchg
lret
and
adc
aaa
shlb
fmull
sub
add
jecxz
pushl
cs
mov
enter
pop
adc
push
jmp
call
sbbb
sti
inc
in
vpsubd
inc
loope
mov
in
jne
mov
loop
adc
mov
iret
and
aaa
or
xchg
add
xchg
fs
add
aas
out
sbb
movsl
fnstsw
popf
jb
aaa
sub
xchg
fstpl
xchg
jl
add
in
mov
mov
aam
push
push
sar
add
mov
psrld
aaa
mov
popl
mov
or
std
cmp
daa
jg
in
mov
cmp
pop
addr16
pop
dec
popf
lock
jp
jns
iret
cmc
mov
fldl
jmp
dec
inc
mov
adc
inc
filds
movsl
or
cwtl
sub
sahf
dec
mov
or
inc
jl
imul
xchg
jns
mov
and
pop
jns
pop
popf
rcrb
or
ja
sti
push
cmp
mov
ljmp
mov
push
ja
fs
jae
xor
mov
xchg
out
push
sbb
lret
in
or
mov
cs
jle
jg
push
fwait
sahf
jmp
repnz
xchg
mov
dec
pop
mov
lret
outsb
mov
jmp
addr16
sbb
clc
dec
mov
sarl
fdivr
aad
cld
faddl
and
insl
mov
incb
xor
mov
sub
std
push
xchg
push
sti
dec
push
mov
jno
cmpsl
andl
sbb
xchg
icebp
pop
dec
lock
pop
lahf
inc
or
mov
int3
push
mov
lds
jecxz
dec
lods
mov
es
inc
mov
add
filds
out
xchg
subb
xor
push
mov
adc
les
enter
repz
dec
aam
xor
mov
and
test
xchg
fld
add
repz
popl
push
and
fsubrs
mov
cmpsl
lcall
movsb
stos
or
inc
xor
cmpl
inc
popa
ret
jp
dec
jbe
add
adcb
sbbb
or
xchg
test
mov
aaa
cld
pop
lods
out
xor
and
cmp
mov
cli
and
fisttpl
cli
test
aas
clc
add
pop
xor
in
add
int3
mov
push
inc
dec
push
mov
xchg
pop
fidivs
loopne
int3
cli
jnp
adc
dec
sbb
or
movsl
sbb
popa
lret
movsl
lea
test
imul
cmp
adc
xchg
inc
fisubrl
dec
pusha
lea
sahf
sar
scas
dec
sbb
push
fisttpl
out
sub
insb
out
mov
dec
push
pop
adc
sub
fidivrs
pop
sbb
xor
idivl
adc
jle
ds
xor
mov
andl
cmp
push
sbb
out
xor
pusha
mov
in
stos
jae
pop
xchg
add
inc
loope
int
inc
cmp
inc
aas
imul
adc
push
jg
test
insl
push
jb
bound
sbb
and
pop
mov
sbb
jb
out
xor
cmp
popl
add
jge
outsb
stos
ja
mov
aaa
sub
in
mov
inc
pop
sub
test
xchg
shlb
pop
and
mov
movsl
ds
push
fistps
and
jnp
lcall
mov
loope
add
inc
pushf
loopne
nop
push
add
arpl
call
jge
cmc
int3
pop
dec
imul
out
addr16
sbb
jg
addr16
pop
sbb
add
pop
jo
addr16
das
adc
dec
stos
mov
in
repz
pop
xchg
and
testb
ret
mov
xchg
jmp
stc
push
movaps
movb
push
fs
jnp
sbbb
mov
mov
mov
xchg
stc
jno
iret
adc
jb
dec
jle
mov
pop
cmpsl
mov
movsl
sub
xor
jb
or
lock
sbb
stos
sub
repz
jecxz
sbb
mov
in
pop
adc
jns
sti
mov
mov
mov
fstps
lds
call
or
inc
mov
push
test
cmp
dec
outsl
loope
mov
jle
jno
fimuls
ja
in
nop
xchg
push
data16
mov
lcall
dec
test
cmpl
mov
sbb
lsl
sahf
xor
sub
stos
out
pusha
pop
or
adc
pop
jae
test
mov
or
ret
jg
ror
das
inc
call
mov
add
sahf
jo
push
out
iret
mov
jp
jle
xor
test
dec
jno
push
ja
add
enter
push
test
cmpsb
std
addps
xor
mov
inc
xor
jns
cltd
cmp
rep
dec
pop
pop
mov
outsb
fcompl
aam
xor
into
mov
cmc
cs
mov
clc
and
lret
mov
jmp
nop
and
cmp
cs
scas
mov
inc
repnz
les
dec
adcl
jp
ficomps
add
add
nop
push
mov
sbb
std
imul
pop
scas
int3
inc
mov
add
shlb
sub
mov
adc
lds
pop
mov
stos
sub
dec
cmpsl
rorl
add
adc
push
pop
xlat
push
mov
adc
jo
popa
add
std
mov
lods
sbb
out
loopne
or
sti
enter
inc
and
repz
pop
adc
jecxz
sbb
fildll
pop
dec
add
pushf
dec
cld
ss
cmp
mov
incb
and
dec
scas
out
leave
imul
mov
cmp
cmp
lahf
and
add
sub
fs
aad
cmp
nop
dec
in
loop
fcomps
xchg
loop
dec
int3
mov
jno
mov
or
mov
mov
lret
push
add
jo
dec
add
out
or
push
ds
push
mov
add
mov
sbb
push
jmp
pop
imul
mov
bnd
sbb
frstor
into
inc
jb
sbbb
dec
inc
mov
addr16
jge
les
add
push
push
lcall
mov
adc
punpcklwd
push
xchg
mov
movsl
das
jbe
das
repz
pop
ror
loopne
mov
fxch
cmp
pop
inc
dec
mov
sub
mov
jno
fsubrl
cmp
outsb
bound
xor
xor
jae
inc
notl
push
lret
dec
mov
xor
je
xchg
icebp
sahf
mov
or
pop
test
lss
mov
stc
je
jns
inc
or
mov
decl
sahf
xchg
pop
test
mov
movsl
mov
sbb
xor
push
jge
data16
rorl
jb
or
and
sti
push
imul
fdivrs
or
mov
pop
movsl
xor
rol
dec
cmpsl
sbb
pop
aaa
pop
cwtl
scas
ljmp
cli
sub
jg
andb
rolb
jne
or
fidivrs
sub
fildll
repnz
outsb
fcomps
mov
sbb
push
les
insl
sub
sahf
mov
sbb
imul
cmp
dec
fsubs
mov
in
inc
lret
inc
leave
jg
and
out
insl
cmp
insb
cli
push
mov
dec
cli
jp
test
mov
daa
adc
xchg
mov
fidivl
push
test
adc
push
mov
dec
mov
sti
mov
cmpsl
fildl
inc
pop
negb
loop
add
aas
sbb
std
fcomps
fnstcw
jmp
pop
mov
mov
mov
call
rcrl
mov
jl
mov
jb
loopne
mov
idivl
xchg
stos
mov
cmp
jmp
pop
or
inc
sub
das
mov
cmp
adc
lret
ret
xchg
aas
jnp
lods
lret
fcompl
lods
in
push
stos
jne
sbb
push
dec
adc
cmpsl
pop
push
sbb
push
mov
mov
imul
xor
xlat
arpl
push
incb
mov
mov
out
cmpsb
mov
cmp
aas
cmp
cmpsb
mov
je
dec
lods
xchg
pop
call
test
add
js
in
in
cmp
sti
cmpb
mov
mov
test
adc
push
test
dec
mov
xor
jecxz
jnp
mov
jo
outsl
sub
jno
or
fdivs
cmp
mov
pop
push
push
xchg
inc
or
xchg
loop
aam
lahf
jo
add
lahf
add
out
xchg
adc
sbb
movsb
pop
dec
mov
shrl
mov
sub
test
xchg
enter
cmpsl
push
clc
lret
pop
dec
cli
push
xchg
lcall
lret
in
mov
sahf
mov
dec
daa
jb
mov
dec
lods
mov
vcvtdq2pd
push
adc
adc
fidivl
cmc
sahf
push
and
outsb
pop
xor
scas
xor
cli
cmpsb
sbb
ss
fdecstp
ljmp
add
ret
add
das
pop
and
cmp
push
adc
jecxz
inc
pop
add
test
xchg
xor
fldl
xchg
sbbb
cltd
inc
arpl
mov
nop
je
sbb
jl
xor
dec
pop
loop
stc
or
add
xchg
int
in
sysexit
add
out
xchg
mov
ds
mul
imul
dec
rcrl
pop
push
sarl
in
cmp
scas
imul
outsb
pop
sahf
push
dec
pusha
and
bound
sub
inc
mov
pop
mov
sahf
loop
fsts
fisttps
ret
mov
add
je
aam
and
mov
clc
sub
dec
xchg
add
aaa
push
outsl
cwtl
into
jle
lcall
cmp
push
adc
sbb
fbstp
neg
jo
pop
push
ss
in
mov
pop
adcl
insl
data16
popf
lahf
addr16
fldt
mov
mov
dec
mov
movb
bnd
sbb
jp
insl
out
jae
stos
sub
scas
es
imul
int
loope
aaa
sbb
mov
pusha
repnz
and
repnz
jge
sbb
pop
les
fs
sub
out
faddp
push
xchg
fcmovnb
pop
in
mov
ds
ds
clc
cmp
inc
pop
mov
cmp
push
adc
repnz
xchg
mov
mov
jnp
push
stos
jp
mov
and
pop
es
insb
popa
sbb
scas
cli
cmp
loop
push
enter
scas
mov
mov
fsubr
adc
adc
jne
inc
push
jo
test
mov
jae
and
sbb
add
daa
and
shlb
lods
test
fincstp
dec
dec
inc
rol
jo
sub
outsb
xchg
adc
mov
test
cltd
cmp
pop
shlb
shlb
mov
out
gs
std
stos
pushf
cld
test
enter
outsl
sub
dec
cmc
sbb
cmp
add
lret
pop
dec
mov
insb
lahf
lds
out
mov
stc
addr16
fdivs
and
and
sarl
pop
test
into
push
add
sbb
mov
pop
shl
loopne
pusha
jecxz
mov
mov
xchg
xchg
mov
mov
dec
mulb
stos
push
bound
push
gs
into
aas
mov
mov
fs
jecxz
mov
fdivrl
or
pop
mov
dec
or
xchg
and
mov
xor
mov
insl
cwtl
mov
repnz
push
push
xchg
insl
mov
jp
gs
xor
mov
xor
out
mov
xorb
mov
insb
jg
nop
mov
leave
sti
faddl
cld
inc
pusha
xlat
aaa
lock
popf
mov
push
rorl
hlt
cmp
sub
cmp
js
pop
loop
stos
mov
cmpsl
dec
pushf
out
inc
jb
shll
cmp
ljmp
lret
jp
clc
mov
repz
xchg
cwtl
shlb
mov
sbb
gs
adc
enter
and
arpl
adc
dec
cwtl
or
daa
jl
mov
add
inc
into
xchg
push
inc
out
dec
fwait
xchg
out
adc
jo
lods
sbb
cwtl
push
lret
pop
mov
fstpt
xchg
xchg
fidivl
rolb
popa
jno
shlb
outsl
or
or
push
jno
aas
pushf
rclb
sub
je
shl
mov
sub
mov
nop
repnz
out
jmp
stc
xchg
repnz
in
xchg
cltd
outsb
popa
sub
fnstcw
nop
repnz
cmpsb
repz
mov
shrb
fldln2
adc
mov
stos
mov
mov
push
cltd
ret
in
out
jp
js
and
jbe
pop
and
movl
xor
inc
push
mov
lret
jno
ja
pop
jbe
push
popl
retw
mov
push
pusha
xor
inc
and
sub
fcomip
std
scas
xchg
mov
or
jmp
mov
outsl
decl
movsl
xor
mov
xchg
and
adc
sbbl
xchg
jnp
into
fdivs
or
mov
mov
dec
inc
int3
mov
outsl
adc
test
xchg
pop
mov
test
xchg
stos
add
in
mov
sbb
xchg
jge
shll
cmp
movsb
mov
dec
in
fs
xor
in
lret
add
hlt
sbb
loop
cmpb
jl
shlb
cmpsb
lcall
add
mov
inc
movsl
incb
idiv
ret
inc
in
loope
xchg
lret
sbb
cltd
in
testl
outsl
mov
mov
jbe
xor
mov
add
push
jbe
sbb
inc
mov
dec
dec
cmp
fwait
pop
dec
jne
call
mov
push
jo
xchg
sti
or
fstp
sbb
sbb
sbbb
xchg
inc
nop
jmp
sbb
lahf
fcmovnu
rorl
pop
cld
jne
cmp
movb
les
or
jmp
cmc
jo
or
stos
mov
icebp
lahf
cltd
aad
es
xchg
cmp
imul
sbb
push
call
adc
addr16
adc
xchg
cli
ja
jmp
mov
ss
adc
and
scas
xor
mov
push
ret
cmp
xor
andb
and
adc
push
lock
popa
in
sahf
enter
cmpb
jns
push
sbb
stos
or
ret
adc
push
jo
int
mov
xchg
mov
ss
mov
add
cmpsb
movsb
sti
dec
adc
rclb
dec
cmp
pop
jge
js
daa
and
repnz
mov
mov
shl
mov
outsl
das
mov
enter
xor
mov
stos
lret
pop
orb
jl
pop
cmc
mov
sub
mov
add
mov
insl
movsl
or
repz
loopne
int
mov
out
push
pop
jnp
jae
sbb
roll
inc
mov
test
pusha
fmul
fcoml
add
mov
out
pmuludq
fs
pop
idivl
repnz
iret
sahf
push
and
das
addr16
xchg
lret
in
sbb
lock
mov
inc
and
inc
aaa
mov
hlt
icebp
lods
cmp
mov
inc
push
lret
mov
xchg
repz
cld
and
rol
outsl
scas
and
inc
imul
sbb
sti
call
js
jno
sbb
fdivr
ret
jns
push
or
mov
add
cmp
pop
rorb
fbstp
add
loope
test
add
icebp
out
xchg
insl
cld
lds
jae
stc
cmpsb
push
fnstsw
inc
xchg
xor
mov
out
xor
insl
pop
dec
pop
dec
xlat
lcall
mov
mov
dec
adc
jmp
pop
repnz
fs
mov
mov
adc
aas
xor
jo
inc
call
push
and
xchg
and
loope
jno
sahf
cltd
ret
adc
mov
cmp
aaa
into
inc
fdiv
or
imul
fldenv
notb
sub
xchg
or
cmpsl
dec
rorl
dec
and
jg
loope
add
push
ret
mov
scas
adc
xchg
sti
mov
iret
icebp
xlat
iret
orb
add
jge
cwtl
test
popa
and
xor
cmp
sbb
cmc
nop
cmpsb
pop
pop
and
mov
add
ljmp
jno
fs
sub
sub
and
aad
push
pop
dec
shl
fistl
mov
add
cmp
inc
js
lock
notw
pusha
leave
or
push
xchg
mov
mov
push
repz
cmp
xor
add
xchg
std
gs
mov
mov
jle
dec
loope
lret
lea
pop
xor
sub
loope
cmp
inc
inc
outsl
push
inc
frstor
fcmovnbe
mov
jg
pop
inc
pop
lahf
dec
insb
push
std
add
mov
loopne
arpl
xor
jo
in
xchg
test
stos
loop
mov
mov
dec
ds
lds
lahf
push
mov
mov
dec
repnz
jno
enter
push
sub
aas
pushf
xchg
sub
dec
dec
lcall
adc
mov
and
pop
sahf
addr16
xchg
ljmp
iret
movsl
aaa
xorb
test
int3
cmp
mov
mov
jle
data16
sbb
lods
add
dec
or
iret
loop
jp
xchg
mov
jne
loope
push
pushf
rolb
sub
into
fmull
xor
mov
jne
popf
pop
add
jmp
mov
sar
inc
in
or
je
adc
inc
scas
inc
jno
and
cltd
mov
aas
sarl
pop
xor
xor
leave
fcom
mov
jp
push
adc
mov
mov
mov
stos
jmp
fidivl
or
jno
insl
inc
xchg
stc
push
inc
mov
in
mov
sub
cltd
xchg
mulb
xchg
sbb
adc
add
jmp
ds
adc
xchg
int3
sub
mov
mov
stos
adc
jns
push
mov
imul
ljmp
iret
lcall
loopne
xchg
pminsw
mov
cltd
and
in
xchg
dec
in
movsb
movsb
adc
mov
jno
mov
jo
loope
xchg
bound
add
div
imul
vpmadcsswd
mov
xchg
call
sahf
pop
jno
ret
jge
jnp
lock
or
and
dec
mov
call
pop
movsl
int
fs
or
push
mov
call
pop
dec
xchg
push
pop
loop
jl
sub
lahf
popf
dec
or
nop
xchg
mov
pusha
push
or
mov
and
inc
cmp
lret
int
xor
push
mov
cmpsl
pop
mov
test
pop
jns
aas
cli
test
jecxz
data16
xchg
adc
mov
and
int
or
enter
dec
popf
mov
mov
cmp
aaa
addr16
lods
aas
test
cs
mov
das
jmp
xchg
sbb
lcall
stos
pop
adc
mov
movsl
jg
jge
xchg
in
add
xor
push
cmpl
lea
insl
test
test
mov
inc
cmpsl
hlt
adc
add
pop
repnz
pushw
push
sbb
jge
imul
bound
mov
push
imul
out
and
mov
jecxz
mov
adc
movsl
jmp
das
in
es
enter
int
sahf
lds
into
int
aad
fbstp
test
pop
orb
leave
mov
cmp
ret
mov
mov
ds
adc
mov
push
in
pop
cmp
sbb
xchg
sbb
xchg
es
inc
add
adc
arpl
mov
add
cmpsb
mov
das
and
dec
jb
cmp
xor
repz
and
jbe
jmp
dec
in
aaa
aaa
mov
out
pop
dec
sbb
jb
in
adc
fcmovnbe
pop
push
cmp
xorl
push
fcmovne
adc
xchg
and
push
mov
movsl
test
into
push
sub
jge
out
xor
adc
jnp
das
ja
mov
cmpsl
mov
call
jo
xchg
loop
addr16
pop
mov
andl
push
daa
jl
jl
adc
sub
add
mov
loope
dec
fmull
mov
jge
fcmovb
repnz
xchg
test
sbb
xlat
push
cld
imul
sub
cs
pusha
pushf
mov
adc
icebp
jl
notl
jle
mov
push
push
adc
adc
cmpsl
jne
ss
dec
jns
sub
jl
mov
ret
lea
inc
or
pop
in
pop
cmp
pop
scas
addr16
or
add
mov
sahf
insb
out
xor
add
jl
lea
stos
je
les
rcl
movsb
mov
and
inc
mov
cmp
fld
or
and
sti
dec
js
xor
mov
out
stos
mov
pop
pop
dec
mov
fdivrs
dec
movsl
decb
insb
jmp
sub
mov
sub
aaa
jo
mov
jp
cmp
add
lahf
and
test
mov
rol
dec
cs
lods
sbb
sbb
mov
cmp
xor
ret
rcrb
lret
out
and
pop
ja
xchg
jae
xor
jb
xor
push
jnp
aam
cmpsb
xchg
outsb
add
pusha
in
fs
shlb
insb
outsl
sbb
cld
cmp
loope
add
std
jmp
cmpsl
movb
mov
mov
aad
les
inc
push
mov
cs
ret
mov
jmp
bound
xor
ds
mov
mov
and
jb
fs
das
repz
in
in
pop
ret
sbb
bound
add
lcall
icebp
mov
pop
xchg
sub
push
leave
adc
mov
sahf
mov
dec
into
jb
jg
add
and
std
xchg
je
ds
jg
mov
jo
lods
in
sbb
sbb
gs
inc
js
cmp
adc
mov
lcall
push
xchg
mov
mov
jne
or
jns
std
ret
sbbl
stos
test
mov
ret
in
inc
shrb
cmpsl
lcall
dec
cltd
mov
cmc
dec
pop
push
mov
mov
dec
add
int
push
movsl
loopne
sbb
sub
pop
out
pop
in
jl
lods
pop
ds
mov
jae
iret
inc
test
push
fprem
in
mov
pop
in
sbb
pop
push
fldpi
hlt
es
jne
mov
sub
jno
cld
adc
push
loope
cmpsl
jbe
cmpb
sbb
inc
iret
adc
pop
in
aas
divb
movsb
mov
inc
push
push
xchg
ret
rorb
mov
cmp
aaa
and
movsl
repnz
sbb
or
mov
sbb
pop
lahf
fisubl
repz
ficoms
data16
add
mov
sbb
cmpsb
cmp
jl
sub
dec
test
mov
popa
addb
add
shl
scas
jns
jbe
repz
sbb
int3
in
je
xor
push
loope
mov
movsl
lcall
inc
adc
arpl
ja
cwtl
inc
push
sarb
jns
iret
ljmp
or
dec
push
test
aaa
insl
hlt
add
aas
arpl
ljmp
ficoms
push
xchg
in
mov
int3
stc
push
das
mov
cltd
jb
xor
lcall
lea
add
jnp
icebp
mov
mov
ret
or
pusha
mull
stos
pop
cmc
mov
insl
and
cmpsl
dec
fsubrs
cltd
fdivrl
sbb
adc
test
inc
mov
jecxz
mov
imul
pop
pusha
or
cld
in
fs
pop
xchg
rorl
iret
pop
popf
fisttpl
sub
pop
inc
push
nop
xor
outsb
fstl
mov
push
jecxz
pop
popf
dec
in
push
decb
push
or
push
leave
js
mov
jbe
movsb
add
mov
insb
pop
pop
mov
fcomip
rcl
jns
sbb
pop
mov
into
and
loop
mov
imul
aam
mov
out
xchg
jg
pushf
test
xor
mov
inc
jnp
in
inc
sub
sti
xchg
cmp
mov
xor
inc
pmaxsw
xor
dec
sbb
cmp
fstpt
loop
or
jg
rol
or
pop
jns
lods
mov
xchg
push
add
xchg
addr16
pop
enter
ja
mov
sahf
xor
cltd
std
test
jne
push
cld
mov
or
ljmp
mov
push
mov
xor
pop
fdivr
dec
in
push
fstpl
push
pop
jecxz
and
lds
jnp
add
push
out
fsts
imul
insb
xchg
sub
jg
mov
cs
mov
addr16
xchg
and
xor
clc
es
push
or
idivl
jo
and
aam
adc
mov
mov
inc
jmp
pop
cmpl
cmp
jl
movb
sti
shr
in
movsb
in
push
out
mov
cwtl
pop
xor
in
mov
lods
aam
fdivrs
mov
test
cmp
test
mov
and
test
cmpsl
push
aad
mov
lock
and
dec
test
pop
xchg
in
loopne
sub
fnstsw
adc
cmp
mov
fnstcw
aad
stos
mov
dec
repnz
aam
dec
ja
outsb
rorb
xorl
out
xchg
cmp
mov
or
lds
xchg
adc
cmp
xor
mov
cmp
or
xchg
push
or
add
insb
rcrl
out
sub
push
lret
loope
adc
int3
rcl
lret
lds
push
stos
push
lret
and
pop
mov
lods
jle
divl
dec
imulb
jl
jb
mov
jge
jp
lret
jb
dec
mov
push
push
aas
lret
and
js
push
in
daa
push
addl
jl
dec
subl
dec
aam
rolb
push
cmpsb
mov
push
sbb
mov
cmpsb
sub
test
orb
push
add
ds
clc
pop
in
movlps
cmp
jo
push
cmp
pop
daa
out
push
scas
mov
stc
jae
mov
push
lcall
cmp
mov
aam
jnp
mov
pop
negb
inc
cltd
mov
and
add
or
pop
xchg
cmp
rcl
insl
gs
add
and
and
roll
jns
jmp
jmp
add
xlat
add
lds
out
cmp
bound
push
lods
dec
add
pop
popf
not
sbb
sub
xchg
int3
lods
inc
push
fmul
fisubl
hlt
out
push
icebp
cmp
int
lret
lcall
inc
inc
cmp
dec
add
cmp
jecxz
push
dec
in
mov
in
inc
iret
mov
adc
repz
mov
addb
clc
jno
push
jp
mov
les
insl
and
pop
addb
pop
ja
pop
or
push
popa
adc
cltd
mov
mov
lret
jne
out
into
popf
cmp
dec
clc
and
and
inc
mov
xor
xor
fcmove
jmp
inc
mov
and
xlat
int3
outsl
je
cmp
sti
mov
fyl2xp1
push
sti
loope
push
stc
push
and
lcall
aaa
mov
and
inc
mov
mov
in
add
dec
jge
outsl
cmp
jge
scas
sarb
xor
cld
add
and
pop
pop
mov
inc
xchg
jb
rorl
sbb
adc
push
sub
insl
js
popf
inc
orl
inc
sub
mov
sbb
add
repz
ss
cld
into
movsb
aaa
sbb
ret
es
adc
test
jns
movsl
cmpsl
sbb
add
loop
or
lret
gs
outsb
addr16
cmp
inc
jge
in
cltd
jmp
jg
dec
lods
aam
xor
dec
xor
lret
pusha
scas
mov
pop
ss
scas
xchg
mov
xchg
pop
adc
jge
mov
cmp
test
pop
push
mov
pop
es
test
and
adc
add
in
mov
mov
pop
and
mov
sahf
jno
push
mov
in
mov
inc
movsl
movb
dec
sub
or
mov
cmp
xchg
fcomps
add
xor
push
sbb
cmc
mov
and
lds
push
pop
cmp
xchg
cli
push
popa
fnsave
daa
mov
and
stos
bnd
lahf
movsb
mov
loopne
movsb
hlt
imul
rcl
pop
lods
orb
shrl
inc
dec
gs
jno
xchg
outsb
inc
movsl
jbe
mov
xchg
shlb
sub
jae
dec
arpl
movsb
imul
js
push
mov
imul
movsb
mov
pop
push
icebp
add
sbb
outsb
cmp
jecxz
out
lahf
jne
fwait
mov
jg
jge
pop
sub
arpl
hlt
wbinvd
dec
imul
xchg
mov
jno
repz
inc
popa
push
jbe
mov
inc
stc
dec
mov
mov
es
dec
sub
loope
jb
sbb
fwait
jbe
dec
test
lea
dec
cmp
inc
mov
push
jecxz
cli
in
jnp
ljmp
sub
jae
mov
fcoms
jnp
push
pop
sub
mov
dec
scas
mov
jnp
jnp
cli
mov
popa
in
addb
ja
sbb
lcall
xchg
jecxz
mov
test
and
ret
xchg
hlt
jmp
dec
outsb
pop
xchg
mov
xchg
lods
frstor
jb
loop
or
imul
jo
push
gs
mov
in
lahf
es
inc
js
loop
and
sbb
shlb
xor
pop
les
sub
xor
mov
in
lahf
xchg
scas
cmpsl
xor
mov
cmp
std
or
aam
data16
jecxz
mov
pop
sbb
lds
test
sbb
cmc
les
push
push
xchg
lock
fsubrp
mov
mov
xchg
clc
testb
inc
nop
fdivr
pop
sub
das
and
mov
cmp
lock
test
je
xchg
daa
mov
mov
rcrl
inc
sbb
das
es
ret
out
sbb
scas
or
jb
mov
mov
je
test
out
inc
xchg
fisttpl
pushf
ficomps
test
or
adc
nop
mov
cld
rcll
leave
sub
push
add
pop
js
test
push
scas
mov
shrl
ljmp
cmp
add
xchg
sti
add
jno
nop
addl
adcb
and
inc
les
sti
lret
repnz
pushf
adc
mov
imul
fnstsw
cwtl
fistps
sbb
fsubrs
mov
jnp,pt
pop
mov
jle
outsb
scas
into
adc
lea
repz
dec
xchg
loopne
sahf
insl
shl
pushl
stos
int3
mov
cmp
enter
xchg
sub
jae
hlt
out
push
stc
push
inc
rorb
mov
mov
idivl
and
mov
icebp
pop
sub
cltd
xchg
cwtl
enter
mov
icebp
std
push
xchg
mov
pusha
pop
outsb
add
xchg
gs
bound
adc
bound
pusha
xor
or
push
popa
add
cli
movl
and
lods
add
lods
jg
mov
outsb
add
cmp
mov
sbb
ljmp
mov
xor
ja
repnz
inc
insl
int
pop
and
jmp
cltd
ret
add
mov
cld
int
jbe
mov
cs
scas
or
testb
popa
adc
sub
dec
icebp
adcl
cmp
xor
and
mov
iret
sub
and
mov
mov
ret
or
inc
pop
pop
sub
pop
lock
test
adc
push
cwtl
cmp
mov
jne
jp
cmp
push
inc
mov
dec
cli
loope
inc
hlt
mov
and
inc
adc
mov
cmp
je
mov
repz
fmulp
imul
popw
xchg
add
cmp
fdivr
xor
sub
xchg
bound
gs
inc
ja
lock
cs
pop
xlat
ljmp
or
inc
rolb
or
shll
and
jge
cmp
sub
jno
mov
insb
popa
adc
adc
dec
mov
shl
sbb
push
inc
cmp
test
mov
dec
mov
dec
insb
sub
mov
cmp
push
lret
movsb
and
mov
push
ds
cmp
sub
cmp
jbe
lds
or
and
pop
mov
ljmp
jae
or
mov
aaa
int3
jle
sbbb
dec
pop
mov
sub
aam
neg
test
mov
loopne
outsl
push
sub
jo
add
mov
cwtl
and
sub
lock
sahf
inc
test
iret
cmp
mov
movsb
lahf
jmp
jo
mov
cmpb
and
aas
jl
jo
imul
sub
push
pop
mov
cmp
into
fs
push
sbb
fildl
lods
lea
mov
dec
pop
xlat
daa
fdivrl
push
sbb
call
aad
popf
sbb
xchg
cmpsb
stc
scas
sti
and
arpl
lret
call
mov
out
mov
xchg
ret
lds
push
fnstsw
in
roll
scas
incl
cmp
sub
in
aas
mov
jb
test
xchg
mov
addb
inc
cli
jp
xlat
jne
inc
mov
push
adc
inc
cmp
jle
inc
ret
xor
cs
push
xor
addl
pop
lods
sbb
insb
mov
test
rorb
in
std
mov
popa
dec
rcr
inc
stos
dec
and
jo
mov
inc
fisubl
sahf
test
out
sub
mov
nop
push
mov
mov
pop
lcall
hlt
jns
jnp
cmp
rorl
mov
lret
scas
jl
outsl
pop
pushf
cltd
fwait
ja
pop
jae
push
mov
movsl
in
and
lods
and
lods
and
xor
sub
adc
cwtl
add
mov
rorl
data16
scas
dec
scas
pop
inc
jmp
into
inc
xor
jle
scas
lods
jge
push
testl
xor
xchg
pushf
push
movsb
xor
jb
int3
push
lds
dec
mov
sub
cmpsb
xchg
xchg
mov
pop
cmp
lret
cpuid
jmp
out
xchg
pop
mov
xchg
jo
repz
repnz
daa
dec
push
insb
or
pop
jmp
rcr
insb
ja
pop
outsb
xchg
cwtl
jno
or
pop
mov
adc
push
fists
fnstsw
mov
fdivrs
jecxz
sahf
push
outsb
pop
dec
adc
lods
in
mov
mov
aad
popa
pop
push
dec
int3
adc
xchg
and
rcrl
jb
cli
movsl
mov
out
fdivrl
out
int
add
psllq
sub
jne
cmpsb
mov
inc
ljmp
lods
aam
cwtl
mov
xchg
icebp
fcompl
push
jbe
mov
outsl
xchg
in
mov
xor
cmp
push
dec
or
or
mov
cmpsb
loopne
jp
jb
ret
add
jno
std
pushf
mov
lretw
push
out
cs
sub
movsl
fwait
imul
enter
fwait
test
ret
pop
push
and
push
mov
fs
cmp
adc
push
mov
dec
lock
test
push
call
mov
mov
hlt
ret
fsubrp
ffree
jbe
and
cld
insb
aad
sbb
scas
idivb
xor
jno
sbb
or
test
push
mov
adc
adc
sub
xor
das
and
add
out
scas
mov
aas
scas
daa
push
and
lret
cmp
iret
or
insb
xor
popf
subl
xchg
rorb
sbb
mov
pop
push
test
movsb
inc
mov
push
ret
mov
cmc
dec
mov
sti
loopne
addb
inc
shll
paddb
dec
jge
pusha
in
push
adcb
adc
test
or
mov
dec
int
jae
lcall
push
das
stos
add
pop
xchg
int3
push
enter
fdivs
cmp
leave
scas
les
xchg
jg
jecxz
clc
jmp
sarl
ds
call
cld
les
aad
int
push
push
gs
ffreep
shll
adc
out
dec
lods
sub
icebp
xchg
lahf
push
inc
sub
lea
ss
xlat
push
add
fwait
dec
jnp
inc
pop
in
adc
dec
mov
mov
in
fimull
inc
cmp
inc
lret
mov
sahf
arpl
pop
add
repz
int3
jecxz
cmp
xchg
mov
nop
add
lcall
cli
dec
jae
pop
out
cmpsl
sarb
mov
push
push
add
cmp
movsl
inc
mov
bound
mov
or
xchg
push
fstpl
mov
testb
fwait
mov
fmuls
imul
imul
out
popf
lds
hlt
lods
popa
movsb
dec
push
andl
mov
in
xor
out
stc
fstl
in
push
sub
and
mov
mov
scas
gs
outsl
loopne
lahf
push
xchg
in
imul
out
adc
adc
stos
sahf
xchg
mov
in
shlb
dec
xchg
xor
push
mov
cmp
pop
test
pop
fcmovne
les
mov
test
loop
xchg
lcall
addb
sbb
mov
aam
cmp
inc
ret
mov
add
sub
lods
push
jp
mov
std
ss
fstl
dec
inc
lahf
ficoml
jg
mov
cmp
lret
lcall
aad
mul
dec
int
fstpl
fbld
int
test
push
icebp
dec
jmp
push
xchg
jge
in
loope
mov
test
lods
xchg
lret
pop
test
jp
cmp
test
jb
leave
ret
push
int
movsb
int
hlt
rol
ljmp
cmp
or
sub
imul
in
inc
or
sub
in
mov
dec
sub
test
jl
fidivrs
sub
inc
cmpsl
nop
mov
lods
in
sbb
ja
imul
mov
lahf
cltd
adc
sub
pop
cmp
add
push
ficoml
movsl
jnp
dec
xchg
cmp
insl
sub
inc
and
push
or
pop
ljmp
sub
push
dec
push
pusha
movsl
add
sub
mov
lods
stc
xlat
add
jno
rorb
pop
scas
sub
cwtl
inc
pushf
mov
xor
hlt
sbb
push
or
in
or
aaa
or
aad
push
mov
shl
push
cld
push
jmp
pop
or
fsubr
mov
mov
movzwl
test
lock
lret
add
arpl
aas
cltd
test
popa
mov
adc
push
pop
pop
add
and
xchg
iret
mov
jg
rol
ljmp
fs
pushf
cmpsb
push
lock
add
pop
xor
dec
mov
stc
pop
or
addr16
inc
pop
mov
or
cli
daa
xor
popa
filds
jae
cmp
jns
cmp
aad
out
out
adc
cmpsb
sbb
inc
rcll
add
je
movsb
movsb
sub
cmc
sbb
orb
dec
out
cmpsl
fwait
jge
mov
mov
pop
andl
pop
push
addr16
mov
out
add
jno
mov
mov
int3
cmp
add
mov
push
loope
jne
add
in
jmp
dec
aam
sub
or
jbe
xchg
mov
fnstcw
inc
je
cld
lock
clc
lahf
cmpb
dec
mov
ljmp
adc
ss
dec
stos
pop
mov
cmp
in
into
fs
insl
sbb
negl
aaa
cli
movsb
add
mov
sbb
sub
xor
out
out
ss
test
xchg
into
push
loopne
mov
lret
pusha
xor
cli
mov
fbld
stc
mov
dec
outsl
add
or
pop
mov
mul
pushf
cld
cmpsl
ret
adc
cmp
sbb
pop
call
sub
xchg
jne
mov
ljmp
mov
lods
fstpt
sbb
nop
ret
packuswb
pop
push
mov
jg
and
mov
xchg
lods
rorl
jnp
repz
cmp
mov
addr16
adc
push
pop
cmp
and
pop
insl
ret
popf
jge
dec
iret
jb
add
lods
adc
mov
test
lock
sar
inc
jne
push
in
bsr
cmp
cmp
mov
lods
jecxz
mov
xor
jecxz
nop
jbe
aas
sbbl
cmp
pop
test
test
addr16
jmp
xchg
dec
xchg
roll
mov
outsl
icebp
xchg
into
in
aas
pop
jbe
and
xchg
cmp
sub
adc
jge
stos
les
pop
mov
je
push
pop
adc
je
iret
lahf
push
and
mov
sub
and
mov
fcoml
out
dec
lds
daa
fnstsw
lock
outsl
ret
cmp
test
dec
jne
or
mov
pop
inc
sahf
push
xor
dec
add
add
adc
xchg
pop
mov
mov
push
inc
pop
sti
mov
sbb
fs
xchg
fwait
or
addr16
add
jb
push
stos
inc
inc
pop
jle
mov
mov
sbb
push
xchg
dec
adc
rorb
ss
lret
adc
xor
imul
and
stc
mov
xchg
jle
and
rorl
or
rolb
sahf
mov
jae
mov
xchg
cmp
popa
insb
dec
and
hlt
lret
fucomp
mov
aad
lods
jp
scas
mov
jmp
repnz
test
push
or
and
mov
mov
mov
xchg
in
bound
dec
or
mov
scas
xchg
mov
jae
xchg
xchg
push
arpl
jbe
jns
test
dec
cmp
cmp
stos
dec
xchg
xchg
dec
cmp
ja
jecxz
inc
es
mov
cmp
sbb
jg
adc
pop
push
mov
jl
testb
hlt
movsb
sbb
in
and
or
fdiv
push
sbb
gs
in
in
shlb
mov
fdivl
xor
push
sbb
dec
loop
imul
pop
fidivs
adc
mov
sahf
fldcw
cmpsl
shl
mov
fs
sahf
ja
push
lock
xchg
jge
and
icebp
or
dec
or
jmp
fsubs
fstl
and
clc
jl
inc
bound
or
stc
faddl
jae
inc
xor
push
rolb
out
jae
cltd
mov
into
sbb
mov
pop
js
cmp
sbb
mov
mov
hlt
push
push
ds
outsl
push
popf
cs
cli
std
enter
xorl
mov
adc
sbb
stos
adc
pop
xchg
jmp
loop
jmp
xor
xchg
adc
shll
popa
mov
imul
fwait
mov
xchg
ljmp
add
push
push
add
clc
enter
mov
enter
mov
push
inc
cmc
repnz
int
cmp
pusha
adc
push
inc
je
aas
outsb
rcrl
lahf
push
shlb
aad
mov
or
in
outsb
and
push
and
pop
or
test
je
popf
xor
add
xchg
test
mov
push
cmp
and
xchg
mov
movsb
cs
fiaddl
dec
stc
stos
sbbl
pop
mov
jg
add
jg
pop
mov
or
lret
andb
out
pop
fs
xor
adc
ljmp
movaps
iret
jo
or
xor
sbb
fiadds
cmp
call
call
cmp
dec
mov
int3
fistl
or
sbb
xor
xchg
mov
sub
in
mov
mov
push
push
adc
fmuls
rcl
icebp
decl
push
cwtl
inc
mov
cmp
dec
call
mov
mov
out
incl
ljmp
subb
xor
sub
repnz
scas
push
lahf
shll
loope
cmp
fidivrl
mov
popf
inc
inc
mov
add
pop
adc
fistl
jae
cld
lock
lret
insl
psllw
scas
stos
sbb
ja
xchg
sti
insl
movsl
in
mov
push
cmp
jne
out
aas
cmp
adc
nop
pop
test
dec
fidivrl
or
push
pusha
test
repnz
cld
daa
daa
sub
jb
es
nop
add
mov
test
aad
and
and
out
and
xlat
and
loope
add
mov
push
mov
test
dec
scas
in
mov
inc
mov
cmc
fildll
dec
inc
cmpsb
sbb
mov
mov
pop
into
xlat
ja
pushf
cli
mov
mov
insb
push
dec
add
sbb
loope
inc
push
adc
cmp
mull
pop
add
inc
test
pop
aaa
popl
fiaddl
in
inc
notb
mov
xor
adc
or
sarl
adc
jo
dec
pop
and
mov
or
or
jno
int
and
cmc
pop
pop
fistpl
insl
sub
adc
pop
mov
jno
dec
jl
loop
fcompl
mov
neg
pop
sub
gs
fwait
repz
inc
sbbl
sub
inc
cmp
xor
xor
out
adc
or
popa
mov
nop
xlat
leave
jo
enter
stos
mov
je
xchg
pushf
pop
ret
fbstp
xchg
test
mov
data16
adc
or
out
jg
lds
mov
push
or
mov
into
icebp
mov
pop
lahf
lahf
pushf
pop
pop
jnp
enter
pop
pop
mov
and
imulb
sbb
les
pop
jnp
mov
pop
faddl
dec
in
cmp
repnz
xchg
pop
mov
or
dec
or
aaa
mov
mov
fs
cmp
sarl
jg
cmp
pushf
imul
pop
push
es
fwait
xchg
daa
pop
push
int
dec
imulb
imul
mov
mov
jmp
push
test
test
cmc
xchg
jge
ss
lret
pop
or
dec
clc
sbb
flds
push
mov
not
scas
and
xchg
cmpb
or
jp
sbb
aam
sbb
and
cwtl
lea
xor
dec
repz
push
cld
cli
adc
loope
xchg
pop
mov
imul
ss
push
dec
and
mov
inc
cmpsb
pop
push
cmc
mov
jecxz
mov
sbb
pop
push
pop
popa
popa
lret
xchg
inc
cmpb
pop
push
jno
enter
push
mov
push
dec
iret
fs
xorl
or
jecxz
inc
repz
ficoms
sub
movsl
or
pop
lock
adc
inc
pusha
les
sbb
xchg
cmp
xor
ds
repnz
stc
es
sub
mov
jnp
cmp
test
in
cmp
dec
pop
mov
iret
iret
dec
or
fbstp
cs
rcr
pop
mov
inc
out
in
and
cmp
add
pop
aaa
adc
mov
push
cs
imulb
hlt
movsl
or
cmp
pop
mov
mov
mov
jns
jo
sub
decl
pusha
sub
popa
hlt
sub
dec
mov
test
jecxz
stos
add
jg
repz
adc
jnp
std
xchg
aad
repz
in
pushf
pop
inc
stos
int
pop
fadds
or
jge
loop
loope
int3
xorl
add
roll
mov
mov
cmp
mulb
xor
jb
pop
adc
pop
xchg
jne
mov
xor
pop
mov
lock
loopne
push
dec
test
inc
pop
sbb
pop
out
std
cmp
dec
sbb
jne
adc
inc
pop
or
push
push
push
test
lcall
sub
xor
mov
stc
xchg
push
das
scas
dec
mov
pop
lret
call
ret
pop
rcrl
enter
fbld
stos
jnp
jns
xchg
mov
mov
je
sbbb
or
sub
pop
or
movsb
and
mov
inc
push
lods
and
fdivr
fstpt
aam
jbe
pop
sub
xchg
pop
xchg
push
pusha
xchg
add
xchg
xchg
or
gs
outsl
push
divl
imul
mov
std
adc
movsl
rcll
scas
xor
mov
movsl
xor
mov
mov
imul
les
ret
lods
xchg
incl
cmp
test
mov
pop
adc
and
test
leave
adc
inc
and
out
loope
inc
push
xor
je
cli
xor
subb
out
int3
cwtl
es
leave
insb
pop
and
movsb
cwtl
jmp
rorb
mov
lret
jmp
fstl
hlt
push
jbe
inc
fistpll
icebp
dec
jmp
mov
jl
mov
cld
test
repz
adc
fistpl
push
stc
je
pop
push
fistpll
lock
xchg
push
xor
xchg
or
sub
push
pop
jmp
pop
sub
xor
aam
in
xor
imul
scas
push
sub
mov
sti
pop
cld
mov
daa
cmp
jo
rorl
push
cltd
mov
mov
sub
icebp
sub
cmp
and
daa
push
push
in
add
lock
stos
lock
lret
ja
adc
mov
rorl
add
cmp
xorb
call
in
jp
ljmp
inc
pusha
sti
mov
cld
in
pop
data16
mov
inc
push
pop
pop
in
sbb
pusha
sub
repnz
cs
inc
and
cs
fmuls
add
out
jo
sbb
inc
add
jg
xor
push
cmc
outsb
mov
jp
add
mov
mov
sub
sub
aad
cmc
push
fcmovb
addb
push
test
pop
shll
inc
lds
cmp
popa
sti
in
push
jl
or
icebp
loope
cs
mov
push
mov
mov
imul
out
mov
mov
mov
out
adc
add
and
sub
cwtl
pop
shlb
stos
push
out
shlb
addr16
jae
pop
das
bound
aad
adc
mov
sub
stos
bound
pop
cmc
aad
pop
pop
das
jge
dec
adc
cmp
movsb
cwtl
and
daa
je
cmp
or
mov
adc
mov
lret
addb
sbb
pop
and
mov
pop
mov
jns
add
fstl
fists
cmpsl
ret
test
mov
pop
or
or
or
das
jge
inc
pop
dec
add
aad
mov
rorb
xor
iret
mov
add
aas
or
pushf
cltd
arpl
pop
in
mov
xchg
jmp
mov
mov
jg
jo
jae
mov
jmp
inc
mov
mov
jmp
sti
push
push
movsb
dec
pop
in
mov
xor
and
push
jne
mov
adc
jl
pop
mov
les
int
insl
pop
aad
jle
out
sub
stos
sub
dec
arpl
sub
lahf
lcall
dec
aam
xor
scas
aas
aas
in
cmp
mov
xor
rol
lret
jne
push
jnp
cmp
jno
inc
daa
mov
adc
test
in
push
adc
mov
iret
add
lret
xor
fldcw
xor
lods
ret
push
mov
and
cmp
call
xchg
xchg
cmpsb
rcll
xor
jne
test
subb
ja
ret
pusha
xchg
xchg
mov
int3
cwtl
jmp
mov
xchg
loop
sahf
shlb
leave
into
push
push
and
lods
lods
ficompl
cmp
cmpsb
adc
les
cmp
rorb
mov
or
fisubrl
je
xor
or
movsb
add
imul
ja
mov
mov
push
es
and
aam
nop
or
lret
sbb
in
xchg
ss
repz
xor
and
leave
add
or
js
bound
in
cltd
adc
xor
mov
gs
icebp
pop
add
push
call
lea
and
and
sbb
cmp
test
scas
cli
std
cli
cmp
js
xchg
jno
sub
sbb
fs
outsb
addr16
in
pop
xorb
push
sub
adc
sub
sub
and
rcll
xor
jns
dec
lcall
mov
lret
filds
scas
mov
xchg
pop
test
dec
cmpsl
push
and
or
rcl
jnp
rclb
jnp
dec
sbb
outsl
or
sahf
pop
ja
mov
sbb
jns
fimuls
pop
or
sub
cmp
cmc
not
push
xchg
jno
cmpsl
add
mov
jmp
adc
pop
pop
int
pop
cmpsl
test
pop
int
push
push
dec
or
fildll
xchg
fidivl
sub
mulb
xchg
setb
sub
in
jmp
inc
xor
adc
cmp
ja
push
cmp
mov
xchg
push
insb
rcrl
in
sbb
sbb
pop
nop
mov
add
das
mov
lock
insb
scas
pusha
daa
inc
xor
repz
push
or
rsqrtps
xor
call
jnp
lcall
mov
pop
ret
xorl
vcvtsd2ss
dec
cmc
lods
add
or
repz
cli
cmp
pop
add
cld
add
rcl
arpl
ljmp
aam
es
pop
lret
and
jo
fcoms
pop
push
es
bound
sahf
ffree
mov
shll
or
jb
adc
xchg
xchg
loope
push
cld
sahf
dec
mov
iret
gs
push
imul
cwtl
les
adc
inc
mov
inc
ljmp
push
add
scas
in
mov
loopne
lea
mov
not
and
ja
xchg
and
fidivrs
pusha
mov
jecxz
fwait
mov
out
adc
rcrb
mov
push
lock
and
cmc
in
sub
std
and
out
shll
push
fidivl
adc
fcmovb
mov
test
push
scas
mov
arpl
mov
xchg
aam
test
adc
mov
jecxz
push
xchg
mov
subl
std
cmp
add
or
xchg
fiaddl
pop
je,pn
add
les
lods
and
or
mov
sbb
sbb
leave
add
decb
subb
pop
les
pop
xor
adc
adc
mov
xor
test
pop
cmc
out
insl
or
mov
push
test
hlt
outsb
aad
fwait
loopne
divl
and
mov
xlat
xor
fs
mov
push
sub
xchg
movsl
gs
and
mul
mov
insb
push
popf
repnz
in
js
cmpsb
packssdw
pop
adc
and
push
and
or
int
mov
js
arpl
adc
sbb
stc
add
daa
adc
mov
mov
jnp
repnz
pop
sbb
or
int3
pop
pop
iret
sub
loope
xor
sarb
stos
sbb
popf
and
bound
jmp
pop
cli
push
mov
mov
dec
cltd
cmc
test
imul
sub
lret
or
dec
jmp
leave
out
scas
adc
dec
std
adc
inc
scas
mov
adc
jle
loop
push
and
pop
cli
fsubrl
mov
jg
adc
xchg
ret
jne
pusha
faddl
mov
sub
jg
js
cmp
xchg
in
mov
mov
cmpb
and
js
cmpl
sub
push
or
sub
mov
pop
or
ja
cmpsl
jo
int
adc
cmp
add
sub
add
lods
cmp
int
pop
mov
lret
pop
dec
mov
cli
push
lods
aam
cmp
ja
imul
xchg
sbb
sbb
lds
insl
aam
dec
js
sahf
popa
cmp
jecxz
dec
loopne
fbstp
mov
pusha
cli
andl
add
int3
fsubrl
jno
movsl
int3
inc
dec
sbb
xor
mov
enter
test
lahf
mov
scas
mov
scas
mov
dec
mov
and
xor
addr16
adc
or
jg
fdivs
adc
dec
test
mov
sub
jg
dec
mov
outsb
fwait
aad
jl
and
std
insl
pusha
arpl
daa
and
ss
repnz
lods
push
out
out
adc
mov
minps
xorl
out
rolb
mov
cwtl
xchg
int3
mov
movswl
pop
push
ficoml
sub
std
push
lods
leave
mull
aaa
xchg
rol
jae
xor
mov
icebp
out
sub
dec
xor
loopne
inc
test
lahf
mov
dec
pop
push
daa
stc
mov
sub
jmp
mov
sbb
lods
scas
shlb
dec
fucomp
cmpsb
fs
mov
out
dec
ds
insl
int3
cwtl
jno
jns
push
sub
insb
push
push
loopne
pop
sub
shrb
mov
jge
jge
jb
and
mov
or
xor
sahf
repz
rcrb
mov
pop
aaa
iret
or
or
sub
fisttps
cmp
sub
mov
pushw
loopne
mov
das
xor
pop
int
sub
stc
ja
mov
sti
cmp
andl
push
pop
dec
or
jne
hlt
mov
mov
cmp
push
popf
movsb
das
adc
test
mov
dec
dec
nop
pop
sahf
sub
mov
outsb
sarl
out
mov
inc
jbe
dec
lods
stos
add
gs
popl
xor
lods
int
in
jo
jno
mov
dec
mov
jnp
ret
and
sub
out
jg
jae
ficomps
lret
sbb
push
mov
bound
adc
nop
jge
jno
and
inc
mov
cmp
dec
insb
test
push
jge
les
adc
jmp
add
lock
xor
pop
pop
scas
mov
les
movsl
add
inc
rorl
jmp
mov
xor
mov
push
pushf
fwait
mov
icebp
mov
or
out
insb
rcrl
mov
inc
cli
xchg
test
ret
xor
dec
loope
jge
adc
popf
cmp
sbbl
mov
xor
pop
inc
sub
leave
jmp
in
pop
or
repnz
out
out
nop
dec
es
sbb
adc
sar
jp
sahf
push
icebp
jbe
sbb
test
inc
call
jno
imull
push
jle
outsb
jbe
scas
test
xchg
bound
mov
xchg
and
xlat
into
cmpsb
cmp
mov
icebp
lods
test
sub
mov
ret
aad
sti
cmp
jne
inc
push
mov
pop
lret
iret
xor
xchg
adc
out
lods
out
lcall
push
xlat
cmp
or
sub
jno
cmp
mov
daa
decl
dec
fimuls
lcall
sarl
psubw
ret
cmp
cld
fstpt
iret
jbe
dec
xor
outsl
int3
fcomps
and
mov
cltd
popf
je
cs
fdivrl
cmp
mov
lods
mov
dec
mov
rcll
push
in
lock
cmp
sti
mov
inc
lcall
insl
jbe
and
mov
lret
ds
jl
sbb
cwtl
xor
test
mov
in
mov
iret
mov
adc
mov
shl
xchg
stos
arpl
movsb
les
pop
daa
adc
jne
cmp
adc
mov
rcrl
cmp
xor
das
stc
xchg
jns
es
in
ret
icebp
ja
les
sub
ret
and
add
sbb
mov
leave
lea
rcll
out
jne
repz
cli
sbb
sub
outsb
repnz
adc
mov
push
xchg
loopne
add
cmc
rcrl
scas
and
fsubrl
sbb
dec
inc
inc
mov
mov
jle
aad
fs
repnz
je
inc
mov
enter
pop
arpl
sub
pop
jle
push
push
aad
je
out
mov
mov
into
rcrl
aaa
mov
push
xchg
sub
pop
dec
addr16
sbb
arpl
push
inc
or
and
xchg
xor
leave
mov
sbb
mov
sub
add
in
enter
pop
fstpt
cmp
loop
dec
lcall
pop
sbb
inc
cmp
mov
xorl
sbb
imul
repnz
repnz
sub
adc
mov
jo
adc
push
add
mov
jmp
inc
pop
pushf
adc
in
push
fcomp
into
leave
cmp
sarl
inc
sbb
imul
repz
call
jae
cmp
mov
cld
push
sbb
sbb
mov
ja
cmp
mov
pop
mov
nop
lock
cld
imul
push
mov
inc
push
hlt
stc
call
std
xchg
icebp
movsb
xchg
mov
or
lock
lcall
jb
xor
inc
xlat
mov
cmc
lea
push
mov
stos
sub
cmc
sbb
cmp
iret
sub
stc
roll
fnstcw
int3
ljmp
ja
repz
xchg
xchg
stc
xorb
pusha
inc
xor
jmp
xchg
inc
inc
cmc
xlat
sbbb
mov
lock
js
fbstp
xchg
enter
scas
lcall
adc
movsl
dec
loopne
push
in
push
cmp
enter
mov
add
fidivrs
cs
pop
fnop
movsl
mov
fisttps
lds
ficoms
pop
into
or
jmp
aam
aaa
mov
bound
mov
idivb
mov
subl
cltd
daa
pushf
mov
out
cmp
pop
daa
test
add
dec
mov
mov
subb
mov
lds
xor
push
ret
add
rcrl
in
add
push
movsb
inc
dec
mov
ret
jge
xor
gs
dec
xor
in
xor
sbb
popf
or
xor
sbb
fstpl
xchg
je
and
xchg
cltd
pop
mov
mov
cmp
sbb
sub
sti
dec
js
std
cmpsl
mov
scas
repz
cmp
pop
decb
and
movsl
mov
cmpsl
imul
cwtl
rclb
xchg
orl
cwtl
cwtl
sti
iret
addr16
jecxz
and
xchg
dec
xchg
cmp
mov
test
mov
imul
xor
cmp
jmp
jne
xchg
cmp
jp
dec
inc
das
fimuls
movsl
mov
sub
fisttpll
test
jnp
push
mov
mov
pop
pop
lret
ds
add
adc
inc
incb
mov
push
cs
inc
add
insl
mov
addr16
sbb
insl
adc
jg,pn
push
mov
int3
jmp
ss
mov
add
sub
ja
xchg
mov
sbb
jge
data16
js
add
xchg
push
pop
or
sbbb
test
movsb
jge
mov
aam
jo
enter
and
mov
xor
mov
nop
in
cmp
insb
mov
mov
inc
dec
cld
cmc
mov
mov
and
ja
jl
sti
fs
scas
lret
dec
movb
cmpsl
jnp
push
scas
mov
lahf
dec
cli
popa
sbb
or
push
xchg
lcall
rorb
dec
fsub
daa
dec
mov
out
jl
or
ficompl
xor
cmp
bound
lret
rcrb
adc
icebp
dec
jp
inc
enter
or
mov
cs
and
sub
xor
inc
mov
jae
movsl
add
aas
enter
xor
daa
loope
and
add
insl
mov
pop
outsb
iret
xchg
xchg
ficoms
inc
push
adc
es
int
into
decl
dec
call
or
push
ds
imul
pushf
ret
pop
sub
lods
mov
arpl
push
fists
out
enter
lcall
inc
std
mov
xlat
inc
insl
xchg
mov
or
aam
fidivrl
hlt
into
and
test
add
inc
icebp
jbe
call
dec
or
xlat
cmp
hlt
pop
jo
adc
movsb
es
jg
lds
pop
push
out
cmp
mov
ljmp
enter
jne
sar
push
sub
push
jns
fstpl
subb
inc
ret
jle
and
or
adc
lret
sub
add
xchg
inc
mov
mov
mov
aaa
push
pusha
cmp
mov
add
xlat
popf
ljmp
jg
cmpsl
xchg
lcall
dec
test
sub
movsb
sarl
lock
aas
int
dec
in
ds
dec
sub
push
loopne
and
aam
mov
inc
test
xor
jle
xchg
jecxz
daa
cs
push
es
jle
add
out
test
iret
imul
jb
aam
arpl
xchg
adc
mov
popa
hlt
fwait
adc
dec
lret
lret
pop
shll
clc
stc
hlt
jp
int3
test
mov
test
xor
call
sahf
mov
outsl
scas
sahf
popf
adc
or
inc
and
test
xchg
xor
push
fisubs
iret
fists
inc
sbbl
mov
dec
dec
sbb
rol
sub
jno
sbb
xor
das
add
push
mov
lock
adc
test
stc
push
xor
pop
sbb
pusha
adc
xchg
pop
mov
fsubrs
xchg
jae
mov
push
icebp
std
jo
pop
mov
mov
sub
push
sbb
movsl
lret
and
adc
pop
cmpsl
add
mov
dec
jo
in
out
addl
cmp
loopne
push
xchg
fnstsw
cltd
or
imul
roll
aas
stos
shlb
mov
jge
enter
inc
sbb
mov
loope
shll
push
push
call
xchg
push
mov
jb
jmp
daa
subl
and
movsb
lds
test
enter
cld
clc
test
jge
add
cmp
loop
mov
lahf
push
divl
mov
xchg
add
mov
mov
or
xchg
pop
dec
mov
inc
dec
decb
aas
fdivr
scas
dec
shlb
jg
idiv
stos
mov
and
outsl
frstor
push
arpl
sahf
mov
test
sahf
jae
daa
lods
mov
inc
push
pop
push
or
jo
push
adc
hlt
loopne
cmp
mov
int
xor
or
stc
outsl
mov
mov
sub
ds
jne
xchg
push
xchg
cmpb
nop
in
or
adc
sahf
mov
aad
ja
push
and
aam
mov
pop
into
pusha
loop
push
jns
popf
push
jl
xchg
jg
ret
jns
jnp
insb
dec
push
out
mov
xchg
ss
clc
and
or
xor
mov
sub
sbb
and
jne
pop
rcll
pop
push
mov
cld
and
insl
jae
fwait
add
push
pusha
or
sub
stc
adc
add
mov
jl
mov
out
jnp
mov
repz
nop
inc
in
mov
add
sti
sbb
xchg
mov
dec
sub
add
mov
fsubl
cld
call
ljmp
push
mov
add
inc
cmp
push
and
jg
leave
xor
fwait
addr16
mov
pusha
add
cmp
aam
pop
out
inc
imul
pop
aaa
xor
or
jmp
sbb
aad
push
in
xor
mov
cli
iret
sub
out
sub
and
mov
sbb
lea
xchg
push
push
sbb
hlt
pop
daa
add
push
out
outsb
sahf
lahf
movsl
enter
in
adc
jmp
sub
jg
test
pusha
or
mov
int3
xchg
sarl
sbb
mov
jg
jl
dec
and
arpl
popa
shlb
xlat
sub
sub
or
or
mov
aaa
pop
push
jge
cmc
mov
mov
and
xchg
sbb
cmp
lea
and
sub
mov
pop
pop
fcmovnu
xchg
cld
xor
daa
inc
stos
or
out
xchg
mov
sub
add
jb
mov
cs
std
jne
add
add
movsl
mov
les
inc
jne
mov
in
stc
popa
adc
pop
test
and
movq
xchg
rcrb
mov
mov
mov
push
mov
cmp
movsb
cli
push
xchg
int3
xlat
stos
shlb
mov
aas
cmp
lea
sbb
sub
test
cmp
mov
out
or
jb
jle
daa
std
iret
dec
imul
addr16
out
fiaddl
push
xchg
cmpsb
pop
sub
dec
pusha
dec
cwtl
or
sub
clc
pop
dec
fdivl
dec
jmp
sti
out
fwait
sbb
roll
cmp
mov
lret
stos
push
lcall
push
int
dec
data16
mov
push
sub
cmp
cmp
adc
aad
fisubrs
stos
mov
jecxz
or
hlt
mov
push
pop
js
jo
jle
popa
xchg
jae
fnstsw
fnstenv
les
repnz
lret
cli
cmp
fdivrs
jmp
mov
inc
lods
iret
fucomp
bound
xchg
jb
pushf
nop
loop
jo
pop
in
test
mov
jg
hlt
ljmp
adc
fisttpl
cmp
fs
test
out
adc
sub
shrb
jmp
rcl
outsl
rcll
inc
xor
andb
jmp
scas
xchg
sbb
sub
add
jmp
add
pushf
xor
in
mov
testl
mov
push
push
mov
add
nop
outsb
mov
inc
and
pushf
mov
add
iret
and
in
in
mov
xchg
repz
and
push
jp
mov
inc
sti
adc
and
aam
pop
xor
and
cwtl
ds
sbb
ret
enter
dec
lea
adc
cs
jecxz
testb
cwtl
pop
mov
test
ficoms
sub
icebp
test
jne
xor
iret
mov
xor
test
sahf
insb
cmp
leave
or
in
out
clc
dec
add
mov
push
cmp
cmp
mov
lret
popa
jo
inc
mov
jbe
or
xor
inc
or
lret
loopne
adcb
xor
adc
sbb
jecxz
cltd
lods
inc
push
pcmpeqd
adc
test
cmp
loope
lock
adcl
rclb
lret
jns
fbld
sub
scas
rclb
test
stc
dec
mov
icebp
and
es
pop
mov
pop
pop
dec
lret
jnp
jb
jo
or
adc
add
or
cmp
lock
push
mov
aam
xor
sub
sub
dec
sbb
les
mov
mov
push
cltd
cli
mov
sbb
int3
lods
fldcw
arpl
pusha
call
insl
fiaddl
or
xchg
fldenv
inc
sbb
mov
jae
leave
cmp
jb
mov
sub
mov
push
fwait
ds
dec
inc
pusha
xchg
cmp
mov
mov
stos
mov
jns
cld
daa
adc
cmpsb
roll
sub
push
addr16
sub
mov
or
out
out
and
sub
mov
dec
pop
lahf
stos
sub
jno
or
mov
sahf
pop
xor
popf
xor
sbb
dec
ror
mov
and
insl
outsl
adc
lea
mov
jns
xor
fnstsw
push
cwtl
jl
clc
xlat
and
sbb
dec
incb
inc
repnz
and
sub
dec
jecxz
test
mov
jg
adc
inc
dec
gs
push
aaa
mov
pop
jmp
rcr
mov
inc
cmpsl
mov
inc
sub
imulb
mov
xlat
ret
sbb
push
xor
inc
xor
dec
mov
pushf
xor
fcomps
imul
aaa
xchg
jmp
or
arpl
jns
xlat
and
mov
cli
adc
mov
xchg
mov
mov
addr16
dec
sub
ret
arpl
jmp
pop
repz
rorb
push
cli
fstpt
insb
in
pushf
enter
in
add
or
ja
stos
scas
pop
pop
out
jbe
jecxz
lret
fsubrl
pop
int3
cltd
push
and
xor
pop
testl
mov
xchg
mov
popa
pop
push
cmp
das
pop
sub
fildl
adc
xor
mov
hlt
cmpsb
xchg
ret
push
rcrb
pop
lods
mov
mov
mov
popf
shll
dec
sbb
or
repz
mov
mov
repnz
sub
aaa
adc
lds
rcl
cld
inc
xor
mov
dec
jmp
jbe
jns
sbb
mov
sub
fists
in
cmp
push
sbb
in
pop
lods
sbb
rclb
sub
push
inc
or
sahf
test
movsl
stos
cmp
push
pop
push
mov
aad
xchg
jo
dec
cmpl
orb
cmc
xor
stc
scas
mov
add
add
cmpsb
fsubrs
pop
aad
popf
xchg
aaa
xor
vminsd
push
punpckhbw
and
sub
adc
ficoms
out
or
bound
mov
sub
push
adc
pop
lea
jnp
fcomp
cld
mov
mov
sti
cld
fs
or
mov
mov
popf
mov
pop
inc
loopne
sahf
ret
xchg
sbb
lret
jbe
jg
xchg
lock
repnz
jp
pusha
xor
push
cld
inc
pop
je
mov
dec
cmp
js
in
loope
data16
inc
mov
xchg
or
lret
mov
decl
sbb
jbe
push
xchg
jne
shlb
lods
cwtl
push
or
pop
xlat
push
lea
lea
mov
mov
mov
pop
and
inc
ljmp
nop
icebp
aam
or
incb
divb
or
dec
xor
jb
inc
xchg
jecxz
mov
into
leave
inc
pop
sub
push
sbb
mov
cmp
arpl
xchg
cmpsl
scas
mov
js
lahf
icebp
xchg
lcall
loope
pop
jle
pop
xor
mov
jp
mov
add
xor
fcompl
dec
fs
lock
xor
out
aam
stc
push
push
jle
xor
pusha
jmp
ja
repnz
inc
sub
cmp
in
xor
ret
push
fisttpll
or
push
mov
cmp
mov
and
es
jnp
mov
cmc
mov
lea
cli
jbe
mov
mov
stos
decb
aas
push
and
ficoml
popf
fldl
and
popa
cli
into
fisubrs
pop
push
leave
dec
xor
aad
and
push
and
jnp
sbb
push
sti
mov
xchg
mov
dec
xchg
fnstsw
adcl
inc
and
test
xor
icebp
xor
leave
sbb
mov
or
pop
mov
or
int
push
push
ror
pop
adc
repnz
pop
mov
push
leave
icebp
sub
pop
push
mov
push
push
imul
popf
std
pop
and
fimuls
addr16
jg
mov
pop
lock
hlt
or
loop
clc
lret
dec
daa
mov
dec
clc
cli
cmpsb
and
mov
xor
ret
fisttps
mov
int
lret
lret
bound
mov
sti
fnstsw
ljmp
mov
repnz
mov
nop
mov
adc
add
dec
inc
jne
andl
push
out
and
dec
jle
push
or
dec
or
and
jl
sub
jge
dec
cmpl
std
cmp
jp
pop
jge
divl
pop
mov
imull
mov
pop
pop
loopne
test
stos
cld
sub
movsl
outsl
arpl
push
mov
inc
mov
lahf
jl
mov
movsl
ss
andl
pushl
dec
ja
jno
or
dec
xlat
inc
sub
ret
enter
out
inc
out
cmpsl
dec
inc
sub
push
or
mov
fs
or
xchg
rolb
inc
iret
inc
mov
adc
xchg
scas
repnz
aaa
add
pop
mov
das
mov
mov
test
inc
jns
inc
mov
enter
daa
dec
icebp
pop
mov
cmp
push
mov
add
leave
loopne
mov
repnz
clc
sub
dec
std
ss
lahf
out
leave
out
mov
sub
push
add
outsb
testl
leave
inc
cmp
mov
mov
int
aaa
jecxz
mov
in
add
jge
test
and
lock
jecxz
lcall
dec
cmp
stc
adc
in
test
or
incb
fs
aas
mov
lret
cli
jnp
loopne
lcall
jo
or
jno
push
sbb
and
mov
pushf
in
pop
jmp
xchg
pop
jp
xor
cmpsl
pop
jge
cmpsl
xor
call
rcrl
js
jo
inc
repz
cmp
sub
sbb
idiv
lock
xchg
pop
pusha
mov
adc
ljmp
cmp
lock
cmp
push
push
ljmp
in
test
jne
jl
outsb
add
and
fcmove
mov
cli
and
xchg
or
lods
and
outsl
or
xchg
aam
aad
ret
xchg
push
call
arpl
mov
mov
or
popa
dec
mov
fxch
lret
cli
repz
xor
test
inc
inc
sbb
shlb
loop
ret
das
xorb
inc
pop
ds
popa
dec
jbe
shll
and
cmpb
dec
mov
out
jp
xchg
stc
notb
jmp
mov
lds
lods
outsl
mov
imul
mov
mov
inc
test
push
or
cmpb
filds
inc
pushf
xor
push
pushl
jmp
mov
daa
mov
dec
cmpb
cmp
mov
mov
fsubl
xor
xor
mov
in
pop
adc
mov
repz
inc
nop
ja
cli
les
fdivs
mov
fs
dec
out
sbb
mov
popf
jmp
dec
ja
in
dec
and
les
imul
cmpsl
lea
mov
add
ljmp
pop
dec
dec
mov
inc
xor
shl
in
add
mov
leave
jns
jnp
ja
lret
hlt
int
cld
cmc
mov
bnd
add
xor
inc
dec
jae
out
out
fucomip
loop
test
sbb
jo
stos
ja
dec
xchg
push
fsts
jmp
test
pop
shrl
push
jnp
mov
cmpsl
test
outsb
xchg
jmp
movsl
jb
ret
dec
ficoml
jg
inc
fnstsw
jno
mov
and
loopne
les
loope
imul
rorb
stos
fcomps
mov
add
loope
aaa
add
push
sbb
mov
or
mov
es
test
int3
fisubrs
pusha
mov
sbb
mov
xchg
cmc
inc
cmp
jo
insl
jns
fimuls
aaa
sub
in
outsl
and
js
sbb
stos
lcall
dec
mov
fadds
loopne
xchg
xor
dec
adc
or
loop
dec
dec
xchg
or
mov
jb,pn
loope
fisttpll
sub
sti
or
inc
or
xchg
sub
cwtl
xlat
cmpsl
mov
fnstenv
arpl
jmp
cmp
push
ret
call
pop
pop
hlt
pop
ret
nop
xchg
sbb
shlb
xchg
sub
test
inc
gs
mov
imul
adc
filds
mov
dec
and
test
insb
and
sub
or
mov
fsub
push
jne
aad
push
jle
fistpl
loop
mov
jmp
out
rol
test
popa
mov
jne
rolb
ret
call
sbb
jns
outsb
loopne
pop
fdivs
adc
lock
dec
das
in
and
lret
adc
jmp
cli
mov
stos
gs
gs
hlt
ret
aam
or
addr16
ja
sbb
scas
or
inc
mov
pop
imul
pop
inc
pop
add
sub
das
cltd
fildll
sbb
pop
adc
xchg
cli
xor
mov
mov
push
fwait
inc
out
push
movsb
loop
in
add
bound
out
mov
dec
lcall
mov
aas
rol
popf
enter
jg
xchg
repz
cmpsb
pop
push
cwtl
sbb
adc
ja
ret
out
test
out
push
stc
push
scas
negl
icebp
sbb
mov
xchg
fisubrs
jg
lock
and
xchg
insl
mov
xchg
mov
lods
mov
xorb
testw
cld
rolb
sub
add
pop
repnz
or
pop
push
inc
js
cld
adc
sti
divl
pop
sub
lret
inc
lret
xor
pop
xchg
insl
jbe
sub
inc
cmp
rcrl
or
popa
push
aad
pushf
sarl
sbb
pop
and
scas
xchg
stos
pop
mov
jmp
bound
jge
xchg
dec
test
mov
or
add
push
push
pop
mov
sbb
int
or
xchg
fcomip
outsl
std
inc
sbb
lods
jp
pop
jle
pop
das
lcall
out
repz
cli
sub
pop
mov
lods
mov
and
xchg
adc
jle
fldenv
push
adc
jge
call
aam
rorb
and
imul
mov
ret
or
lret
sbb
add
sub
dec
mov
sub
lods
loope
sbb
shl
cmp
xchg
aas
adc
add
sar
cmp
xor
jge
sbb
xor
sub
pop
xchg
mov
cmpsb
pop
fwait
mov
mov
out
push
pop
xchg
enter
imul
inc
xchg
fs
mov
mov
xor
pop
out
mov
divb
cmp
cmpsb
ret
dec
inc
je
push
rolb
push
inc
mov
and
sahf
adc
fwait
mov
sub
sub
rorb
ret
fmuls
push
jp
sbb
lods
decl
cmp
in
repnz
leave
and
pop
aas
ficoms
sbb
xlat
push
dec
popa
push
andl
loopne
enter
arpl
test
push
cmp
rclb
mov
or
loopne
adcb
insb
in
cmpsl
and
aam
sub
es
or
andb
cltd
and
jle
setnp
les
cli
popa
rorb
push
xlat
sbb
lods
cwtl
or
push
adc
scas
insb
sub
test
rclb
pusha
std
lret
dec
nop
repz
dec
mov
push
inc
jp
ljmp
mov
pop
pop
pop
inc
lahf
xor
xor
pop
mov
xchg
pop
orl
jge
scas
andl
enter
mov
lcall
test
xor
shlb
cmp
pop
sub
sub
scas
pop
xchg
pop
push
fcomps
cmp
xchg
adc
imul
mov
or
xor
sub
daa
leave
jle
mov
bound
add
and
xchg
sub
or
or
je
lret
cmp
push
loope
loop
jl
cmp
adc
out
shll
mov
iret
les
cli
rorl
push
aad
sub
adcb
adc
fmul
lea
jo
sti
repnz
add
inc
mov
cwtl
push
daa
imul
dec
lret
inc
out
dec
mov
pushf
lret
xor
loope
lea
out
aam
ficoms
pop
out
das
mov
lods
in
sbb
cmp
push
push
xchg
xchg
inc
mov
xchg
jns
incl
lahf
loopne
js
jg
or
mov
mov
pop
call
dec
xchg
jb
mov
push
test
inc
stc
cli
and
stos
xor
sbb
scas
inc
loopne
repz
cmp
cmp
xchg
adc
add
mov
sub
push
adc
pop
insl
out
push
gs
movsb
mov
jne
or
pop
sub
dec
adc
jns
xchg
dec
sbb
mov
aam
cltd
popa
ljmp
inc
mov
cltd
inc
insl
imul
sub
sbb
loop
cmpsl
std
rclb
stos
je
pop
idivb
test
pop
or
inc
in
pop
lahf
pop
fldenv
xchg
xchg
sahf
test
lahf
adc
int3
clc
insl
imul
mov
adcl
push
call
pop
push
mov
push
cld
je
mov
cld
jg
mov
mov
roll
iret
inc
sbb
push
leave
in
push
lock
inc
mov
pop
ja
test
out
rol
cmp
frstor
push
aaa
repz
loopne
lods
cltd
or
lods
xchg
ret
jne
lcall
xchg
or
adc
andb
sub
adc
push
lret
in
andb
and
cmp
xchg
cmp
add
and
or
jne
ficomps
sbb
rcl
mov
sbb
sub
add
loop
sbb
fimull
mov
mov
out
adc
out
push
insb
popf
lahf
ficoml
xchg
mov
shrb
lret
movsl
cmp
pop
in
dec
dec
jne
mov
mov
add
push
hlt
add
cmp
aam
sub
aad
cmp
hlt
mov
dec
dec
outsl
push
fldt
arpl
pop
leave
jo
ret
xchg
xchg
mov
dec
fldt
out
inc
out
cmp
ret
inc
shlb
mov
out
adc
mov
ss
outsb
out
xchg
aad
outsl
mov
in
out
mov
adc
movsb
add
pop
nop
add
imul
popa
fiadds
dec
sbb
movsb
aas
push
mov
sub
iret
pop
adc
mov
and
pop
push
sub
je
sub
xor
xor
adc
jecxz
sub
fs
scas
lret
out
inc
xchg
fcompl
shll
sub
loop
cmp
mov
jno
pop
les
lahf
adc
sti
shrb
pop
xchg
mov
sbbb
or
mov
add
inc
mov
cltd
jecxz
push
ljmp
push
loop
fcomps
pop
lds
dec
pushf
rcrl
rcll
push
loope
mov
sahf
fdivl
add
insl
insb
mov
idivb
insb
sub
loope
call
flds
pusha
scas
inc
xor
sahf
gs
das
or
dec
sti
ss
cltd
xchg
fyl2x
bound
push
sub
dec
in
jo
movsl
xchg
pop
aam
notl
push
rorl
fcmovnbe
jmp
xor
jb
loop
adc
adc
sahf
pop
xor
movsl
imul
adc
sub
jp
cmpsl
in
mov
pop
scas
push
not
xor
pusha
arpl
push
mov
in
test
or
mov
lods
addr16
mov
outsb
push
test
call
fnsave
mov
mov
fiaddl
out
xor
hlt
lret
ret
jmp
adc
fistpl
xchg
cmp
push
into
cs
inc
daa
neg
lcall
sub
sub
and
and
stos
mov
pop
mov
mov
pop
sub
mov
add
sti
cmpsb
stc
mov
inc
lahf
push
push
and
lods
ret
fstl
add
and
fcomps
and
or
filds
incb
fcoml
shl
cmc
cmp
or
loopne
push
fnstsw
adc
rcrl
lcall
jnp
adc
push
dec
push
sbb
push
insb
aaa
js
pop
cmpxchg8b
leave
lods
int3
cmp
dec
cmp
and
push
in
pop
mov
fstpt
or
lret
fldenv
sbb
pop
sbb
jns
rcr
ret
arpl
sub
aad
orl
add
or
sub
push
fisttpl
test
dec
push
imul
sarl
mov
push
xor
inc
xchg
push
and
sbb
bound
les
xor
lcall
js
add
sbb
xchg
inc
sbb
cli
loopne
fucom
jp
fs
pop
std
xchg
and
xor
out
cltd
std
movsb
sbb
cmp
cmp
lea
scas
ja
lea
js
or
jp
divb
outsl
stc
cmpsl
test
fnsave
loop
sub
and
pop
stos
js
mov
fimuls
mov
xchg
push
mull
mov
in
lods
ret
fiaddl
dec
sub
add
lds
push
sbb
jl
das
jg
data16
push
add
cmc
shl
imul
ret
pusha
sub
inc
sbb
xor
repnz
xchg
in
or
mov
daa
loope
loop
inc
ret
fwait
and
cmc
ja
add
push
adc
and
inc
mov
cld
mov
inc
in
add
sub
xchg
orb
outsb
gs
dec
ss
or
lock
cli
push
aas
test
out
loopne
push
sbb
and
xor
scas
fsubl
icebp
adc
xor
cmpsb
cmp
rorb
mov
mov
scas
bound
outsl
loop
mov
xor
test
dec
and
pop
mov
into
push
fsub
jbe
pop
sahf
xor
cmp
insb
fidivl
and
imul
mov
mov
cltd
loope
mov
and
mov
jg
pop
test
aaa
push
ja
lods
adc
aad
dec
push
and
xor
cmpsl
mov
dec
push
es
cwtl
adc
and
jmp
fists
stos
and
xchg
loop
mov
adc
jns
xchg
pop
add
sub
aaa
inc
jne
dec
gs
jb
movsl
cmp
aaa
insl
cmp
aad
pop
in
scas
mov
lret
iret
push
lahf
outsb
jecxz
pop
cmc
bswap
sbb
jo
cli
call
jmp
movsb
or
cltd
cli
dec
pop
mov
cmp
xchg
ja
cwtl
aad
fcompl
scas
sub
and
in
shll
cmpsl
arpl
mov
cmp
pop
sbb
adc
leave
mov
int3
cwtl
stos
xchg
sub
jmp
jp
xlat
xlat
mov
jp
push
lahf
popa
jle
test
add
xor
fstpt
fs
jmp
cmp
jg
lds
jne
scas
push
rcrl
out
jbe
movsb
insb
loope
adc
push
paddsw
fisubl
paddq
incb
and
jb
xchg
lods
test
dec
mov
mov
fsub
enter
std
push
adc
out
sbb
ljmp
adc
mov
call
rclb
push
xchg
arpl
or
sti
int
scas
ds
pop
sbb
xor
js
je
or
mov
jmp
std
loope
aas
dec
cmp
jnp
enter
adc
cmp
mov
movsl
inc
push
cmc
push
fdivl
mov
lret
add
xchg
imul
int
ficomps
jne
lret
mov
in
lcall
mov
add
ds
addr16
insb
adc
mov
shl
loope
leave
fldt
dec
cwtl
mov
or
mov
xor
aam
outsl
mov
mov
scas
sub
add
xchg
sbb
loope
or
inc
bnd
mov
mov
and
mov
mov
xchg
pop
xor
out
int
xor
cwtl
cld
xchg
dec
inc
test
xchg
mov
dec
dec
ljmp
jns
loopne
rcll
scas
push
sbb
ret
test
movsl
add
xchg
sbb
mov
and
dec
jge
repz
dec
sbb
dec
es
or
das
sub
or
push
lods
or
lods
adc
arpl
push
ret
call
pop
bnd
mov
jp
jp
jl
pusha
jno
push
leave
cmp
ljmp
jl
jno
inc
test
dec
inc
dec
hlt
loop
dec
mov
gs
insb
js
fistps
sti
mov
mov
out
addb
in
data16
adcb
or
test
adc
dec
das
ret
jnp
mov
test
inc
popa
or
daa
shr
sarl
cmp
fists
lods
lock
imul
test
stos
jne
fs
mov
and
xor
out
fadd
out
mov
in
mov
push
repz
std
push
js
sbb
sbb
push
insl
sub
frstor
lea
inc
ds
mov
out
sarb
andl
dec
sbb
das
imul
pop
adc
cmp
or
cmpsl
mov
jmp
notb
dec
into
hlt
enter
arpl
and
or
jg
mov
push
ds
pop
fwait
sbb
out
cmp
fsub
mov
and
mov
mov
fwait
push
aaa
mov
icebp
pop
jecxz
popf
mov
inc
add
aad
pop
jo
jbe
inc
push
pop
dec
push
add
pop
mov
inc
test
sbb
lret
pop
aaa
or
ffree
dec
and
ss
out
pop
mov
jmp
out
je
add
push
mov
push
inc
adc
fsubrl
call
adc
fildl
xlat
cltd
es
stos
cmc
mov
jp
in
loopne
or
imul
adc
scas
jmp
mov
or
jle
xchg
or
fxch
movntps
js
jbe
jo
in
add
mov
cmp
pop
fisttpl
movl
lret
or
push
ret
mov
jg
out
and
pop
add
sarl
rorl
adc
fidivl
pop
jnp
pop
clc
leave
insl
inc
out
mov
pop
pop
int3
xchg
ja
mov
mov
cmp
xlat
mov
aas
xchg
sbb
mov
xchg
pop
outsb
sbb
push
mov
mov
int3
or
js
xor
jbe
sbb
lds
call
nop
fnstsw
push
iret
dec
push
jnp
mov
pop
leave
push
jnp
aas
iret
sti
ss
inc
fsubrs
in
push
pop
jae
and
cmp
and
mov
in
mov
das
mov
and
decb
iret
push
fildl
cmp
and
lock
repnz
mov
rorb
xor
or
adc
add
sbb
pushf
ficoml
in
rcr
test
push
mov
jmp
into
cmpsl
xlat
mov
xor
adc
jmp
push
inc
lret
gs
das
or
in
pop
stos
fsubrl
pop
inc
mov
push
mov
inc
push
imul
sbb
inc
ret
inc
adc
add
mov
fldl
pop
mov
mov
imul
xchg
pop
sbb
push
push
sbb
movsb
movsb
push
test
jge
cld
fxtract
popf
inc
sub
push
addr16
xchg
adc
and
inc
test
mov
in
sbb
repnz
lds
or
stos
arpl
divb
mov
loop
les
cwtl
add
addl
out
addr16
clc
adc
jbe
aas
cmpsb
push
hlt
sbb
sbb
sahf
dec
leave
inc
les
adc
push
jmp
clc
outsl
das
pop
clc
add
cmp
xor
jge
xor
xchg
xchg
and
xchg
mov
jl
push
in
sub
mov
push
lds
loop
mov
lret
cmp
and
pop
and
inc
ss
adc
fcmovu
arpl
push
divl
dec
cmp
sbb
mov
add
bound
insb
cmp
call
in
dec
and
ret
mov
push
sbb
adc
popa
jnp
inc
mov
fidivrs
imul
and
stc
std
fucom
iret
adc
pusha
pop
or
jmp
add
cmpb
lock
mov
xlat
ss
call
outsl
outsb
aaa
push
or
adc
pop
aam
faddl
inc
stos
movl
adcl
mov
ret
ss
cmp
rcrl
jecxz
in
or
adc
adc
shll
std
loopne
xor
sbb
push
mov
fldenv
imul
xlat
jl
testl
es
pop
andl
repnz
adc
and
jo
jbe
cmpsl
test
dec
xchg
repnz
lea
sbb
pop
sub
jb
push
call
jl
xchg
dec
ljmp
push
cmc
dec
xchg
mov
lahf
insb
push
inc
rcrb
mov
bnd
repz
and
rcll
or
imulb
sbb
lock
lret
jmp
loop
pop
loopne
movsb
xchg
je
jo
ror
push
jecxz
mov
andl
fnstsw
jle
sub
add
mov
out
xchg
jp
push
cmp
fwait
xchg
mov
xchg
and
inc
lock
dec
iret
cs
jp
xor
call
jb,pt
push
pop
adc
or
cmc
shrb
es
mov
mov
cmp
inc
mov
mov
cs
jbe
cmp
adc
lea
xchg
loope
repnz
gs
inc
out
movsb
jl
insb
mov
int3
sub
pop
sbb
add
pop
xchg
int
or
and
lret
jp
insl
mov
lcall
pop
das
push
fsubrl
xor
mov
scas
mov
jo
mov
mov
ss
repnz
adc
mov
out
shrl
out
add
icebp
inc
out
or
mov
shll
addr16
rcrl
data16
xor
cmp
out
mov
mov
pop
es
mov
mov
mov
cwtl
shrb
into
aad
pushf
add
ja
push
pop
bound
mov
dec
add
popf
sub
xor
pop
cmpl
fwait
dec
arpl
xchg
xchg
sbb
js
mov
push
in
add
push
stos
roll
cli
mov
cmp
push
lods
pop
ljmp
arpl
adc
mov
enter
and
ds
push
xlat
pcmpgtb
aad
in
inc
nop
fsubs
jg
mov
xchg
lcall
cmc
arpl
aam
iret
in
mov
ffreep
cmp
aad
xchg
fisttps
std
shrb
ret
icebp
xchg
mov
sub
push
lods
cmp
loopne
aad
outsb
aaa
mov
sub
fcoml
fnstenv
cmp
adc
cld
in
add
addb
adcl
fwait
push
mov
add
push
inc
cs
push
icebp
movsb
push
fdivrl
adc
pop
mov
sub
testl
nop
push
cwtl
rcll
inc
movsl
imul
pusha
insl
stos
pop
dec
fistl
jne
pop
xlat
aaa
adc
and
or
dec
push
fstpt
add
cmp
cmc
pop
lret
das
cmp
outsl
xor
mov
cmp
aas
push
repnz
add
aas
jo
add
jne
add
and
cmp
inc
sbb
fistpll
fistpll
mov
pop
pop
jecxz
popf
dec
sarl
cs
dec
scas
test
addr16
xor
adc
adc
or
pop
test
or
ja
je
cmpsl
leave
mov
sbbb
nop
xor
push
inc
push
xor
sbb
add
cmp
add
int
dec
and
mov
jbe
icebp
dec
call
push
ret
pop
or
jno
cmp
cmc
mov
cmp
cltd
filds
aaa
or
fldenv
xchg
xchg
inc
mov
cmp
movsb
sub
mov
sub
cltd
xor
lds
cmpsl
xchg
test
gs
cmp
ljmp
jge
pop
xor
xchg
int
jecxz
cmovge
mov
int3
inc
jae
xchg
sarl
sbb
or
icebp
xchg
daa
subb
inc
fst
aaa
jmp
andl
cmpsb
xor
jmp
and
xor
xor
push
xchg
enter
adc
in
pop
lock
push
dec
in
inc
push
stos
mulb
mov
jne
ljmp
pop
sub
shll
xchg
std
shrl
cmpsl
pop
adc
mov
and
sbb
inc
in
cmp
adc
adc
xchg
es
icebp
jns
add
inc
out
lea
dec
adc
pop
popf
test
data16
xchg
imul
ret
movsb
dec
in
pushf
mov
cmpsl
sub
icebp
loopne
and
or
push
cmp
add
lods
mov
and
or
sub
jne
xor
push
jl
mov
push
cld
dec
push
ss
mov
hlt
jg
mov
push
inc
jge
add
mov
cli
add
pop
imulb
je
ret
mov
adc
mov
loopne
adc
in
jecxz
hlt
aad
add
addl
add
in
shrb
cmpsl
mov
xor
mov
fbstp
add
xchg
sbb
pop
in
adc
test
cltd
ret
or
pusha
mov
cmp
jae
lea
sbb
in
out
js
inc
pushf
fsubrp
clc
iret
mov
lock
push
pavgw
ret
adc
adc
adc
jmp
cmpsl
xchg
xor
jns
fistps
mov
jmp
dec
pusha
arpl
insb
xor
mov
dec
je
rorb
push
add
push
pop
mov
ja
pandn
add
pop
sti
mov
cmc
into
popaw
int3
test
xchg
call
out
adc
rcrl
mov
adc
jge
pop
sub
mov
pop
dec
lock
pop
cli
scas
dec
cli
add
pop
lahf
cmpl
imul
jae
int
into
pop
lea
dec
in
js
inc
int
subb
jno
mov
ljmp
cmp
pusha
aas
dec
arpl
imul
push
sbb
sarb
pop
sub
mov
mov
in
int3
lcall
dec
sub
andl
dec
enter
in
aad
xchg
xor
scas
push
and
mov
loopne
inc
dec
mov
dec
cmp
ret
fdivrs
cmp
sbb
dec
cli
jae
in
push
test
mov
mov
and
je
fiadds
sub
ret
sub
mov
pop
xchg
in
sbb
sahf
cmpsb
push
lods
mov
mov
pop
mov
push
jmp
xor
fs
inc
mov
js
pop
pop
mov
mov
inc
push
in
xor
nop
shll
dec
or
stc
add
mov
sub
mov
jge
repz
test
repz
inc
int3
xchg
ficoms
xchg
adc
sub
std
lahf
lret
out
xchg
idivb
push
push
iret
das
mov
xor
mov
xor
and
push
mov
dec
into
add
mov
fcmovnbe
inc
fstps
cltd
lcall
dec
jnp
sbb
fdivs
push
lods
mov
lea
addr16
inc
enter
imul
inc
pop
aad
or
push
inc
je
add
and
xor
mov
fstpt
inc
stc
loopne
xchg
ja
xor
aam
popa
sbb
fstpt
loope
lahf
pop
sbb
lret
pop
loop
ja
fcomps
push
nop
dec
in
push
cmpl
push
and
xchg
imul
mov
in
mov
testb
cmpsb
jnp
fists
cmp
ljmp
insl
push
inc
push
fucomip
mov
rol
pop
xor
jmp
mov
xor
rcl
sahf
jae
das
push
jnp
subl
push
jmp
xor
cwtl
jne
mov
jne
cmp
cli
push
mov
jae
sub
dec
pop
sub
mov
fs
add
int
push
aad
mov
fnstsw
loop
loope
out
mul
xchg
fists
jmp
jge
or
and
les
gs
sub
inc
mov
dec
nop
xchg
cmp
mov
cmp
push
or
aam
ja
fst
rolb
les
cs
jae
bound
or
inc
mov
mov
xor
popa
cmovge
sbb
sbb
fnstsw
mov
repz
lahf
sbb
push
stos
js
and
jb
or
xlat
shl
pop
lods
sbb
test
test
nop
jbe
stos
push
test
lea
es
lcall
inc
ss
lea
lock
sub
jnp
repz
in
in
mov
sub
aas
out
push
jb
leave
cmp
inc
ficoms
xor
fwait
adc
popa
cmc
popa
xor
push
mov
cmpsb
mov
enter
cmpb
pushfw
movsl
cmpsb
int
adc
add
test
xor
fs
das
mov
sahf
xchg
jbe
fbstp
sub
cmpl
jae
add
dec
iret
fistpl
mov
decl
and
jle
dec
popf
in
or
out
adc
add
gs
ljmp
push
loopne,pt
pop
push
adc
insl
mov
fnstcw
repz
test
adc
out
pop
dec
dec
lods
pop
clc
cld
je
lock
inc
mov
stos
jp
mov
xor
shlb
shrl
pop
outsb
ret
pop
add
sahf
xchg
mov
loopne
mov
test
mov
out
mov
mov
dec
nop
addr16
push
mov
cmp
jle
add
or
int3
xor
push
lea
ja
lahf
cmp
cmpb
movsl
mov
mov
dec
test
dec
je
mulb
rorb
popf
out
ret
add
xorl
push
ja
or
mov
pushf
les
in
xchg
cmpb
cmpsb
leave
movsw
xor
pop
mov
pop
push
rclb
sbb
cmp
and
lret
jb
std
out
loopne
jl
dec
jmp
jp
and
jge
mov
mov
push
insb
call
push
fwait
xchg
and
mov
mov
xchg
mov
loope
es
pusha
inc
ret
fbld
dec
xchg
and
ljmp
jb
cmpsw
dec
jmp
lret
push
out
out
icebp
xor
roll
dec
aam
xchg
movsl
and
fisubrl
adc
imul
pushf
stc
dec
add
jmp
movsb
mov
pushl
and
cmp
enter
orb
aas
mov
imul
rorb
lcall
cmp
aas
mov
les
push
jb
pop
fsub
sti
cs
mov
mov
cli
jae
cltd
adc
std
cmc
lcall
arpl
pop
lods
mov
cmp
jae
pop
lcall
dec
inc
popa
mov
xchg
mov
daa
or
cmp
ljmp
jo
lcall
gs
add
pop
jmp
xor
jp
addb
je
mov
sub
xchg
cmpb
push
ret
lcall
jbe
mov
jg
sbb
ja
xor
clc
test
add
pusha
out
push
rcll
lds
mov
and
fmul
push
fldcw
push
repz
add
push
and
inc
es
xchg
lods
or
fdivl
push
and
stos
clc
dec
xchg
in
bound
inc
stc
sub
adc
jb
test
push
rorl
not
sbb
fnstcw
rclb
in
popf
popf
inc
pop
cmp
xlat
fs
mov
fcompl
mov
pop
push
dec
sub
fists
mov
sub
f2xm1
movsl
shrb
or
pop
push
add
mov
mov
out
xchg
jge
out
dec
in
imul
pop
push
sahf
rol
mov
mov
sub
pop
out
or
js
stos
fcoml
into
pop
daa
repz
xchg
inc
sahf
stc
jg
bndldx
inc
loope
mov
jle
mov
fisubrl
mov
stos
mov
jge
dec
arpl
pop
lcall
mov
mov
inc
loope
pop
lret
es
cmp
addl
fistpll
mov
mov
adc
pop
int3
imul
mov
mov
dec
loopne
repnz
fistps
std
xchg
aaa
stc
lock
sub
out
test
into
ds
push
jle
or
or
nop
jbe
inc
test
insb
sub
add
jnp
jo
dec
repnz
jle
push
pop
mov
insl
inc
push
lods
add
mov
cld
sbb
sbb
mov
adc
scas
int
cld
scas
xchg
or
lcall
int
fs
jl
imul
or
mov
loop
pop
ja
cltd
and
and
mov
sahf
addr16
test
pop
mov
test
push
adc
lcall
mov
roll
loop
cmp
jecxz
stc
sbb
outsl
push
inc
cmp
xor
mov
test
jl
lods
sarl
jl
loop
jg
add
arpl
ffreep
add
outsb
and
sbb
fs
sub
jbe
xchg
es
popa
or
add
movsb
jg
mov
xchg
mov
movsb
jp
test
pushf
jmp
fisttps
or
pusha
pusha
insb
lea
cwtl
cli
faddl
adc
add
fmul
dec
push
hlt
xor
pusha
in
repz
cld
pop
mov
popa
movsl
fcoml
mov
lret
orb
popf
mov
and
test
mov
shlb
data16
in
jns
out
repz
and
sbbl
in
inc
orl
mov
fisttpl
sbb
inc
es
cwtl
cmp
movzwl
vmovshdup
rcrl
mov
dec
cmp
jbe
cwtl
push
cmp
mov
iret
int
mov
jo
push
into
popa
fcomps
pop
sub
or
inc
mov
ds
push
mov
jmp
fnstsw
jnp
test
dec
daa
dec
test
loop
rcrl
arpl
mov
mov
insl
jg
xchg
mov
push
pusha
lea
jle
ficomps
mov
and
test
cwtl
lcall
mov
scas
insl
fbld
pop
pusha
jle
shlb
cmpsl
push
jns
xchg
mov
fwait
mov
les
lret
aam
or
shrb
push
rorb
bound
negb
hlt
jmp
insl
in
clc
add
hlt
jmp
jae
sub
shr
stos
inc
mov
movsl
xor
adc
mov
into
or
stos
adc
sbb
sbb
lods
and
lret
jnp
movl
imul
mov
popf
sbb
mov
int
rcll
xchg
mov
pop
test
test
out
lahf
push
orl
out
mov
hlt
sub
xchg
shll
xchg
js
jb
pop
inc
inc
rorb
ds
nop
mov
cmp
push
fsubl
imul
rcrb
stc
cmp
cmpsl
pop
stc
shll
pop
call
gs
jl
movsb
lcall
cmp
test
adc
xor
add
pop
scas
mov
ret
pop
dec
dec
adc
lahf
add
jl
push
jne
ja
push
fidivl
mov
push
outsl
pop
pop
aam
mov
xchg
std
lock
outsl
jnp
leave
add
ret
sbb
xchg
mov
sbb
sub
lret
shll
cmp
mov
sub
fimull
lock
push
cmpsl
mov
clc
stc
js
push
push
inc
loop
cli
lods
cmp
stos
mov
fwait
enter
aam
fldcw
in
mov
xchg
shll
scas
test
sti
call
or
daa
lods
pop
sahf
out
xor
mov
mov
pop
pop
jae
or
push
add
decl
xor
negl
out
jae
mov
rorl
lods
xchg
inc
shrb
pop
std
andb
fsubr
push
fdiv
mov
sahf
jecxz
mov
icebp
xor
nop
js
jno
test
mov
enter
enter
xchg
sbb
pop
jbe
mov
pusha
dec
insl
or
xor
mov
mov
out
out
or
leave
mov
mov
test
pop
xor
out
iret
or
lret
jae
insb
test
sbb
shlb
fmull
adc
inc
inc
gs
insb
stc
lret
test
cmp
je
pop
ret
movsl
xor
pop
xchg
mov
mov
fldt
and
xor
push
adc
leave
xor
push
ds
dec
insl
dec
jg
fisubrl
and
lret
inc
sub
lds
mov
aas
add
rcrb
loopne
and
insb
dec
or
sub
dec
lds
jmp
push
in
lock
push
loop
stc
movsb
mov
cli
adc
lock
mov
xor
or
mov
inc
adc
mov
out
divl
aaa
int
test
inc
insb
add
or
cmp
push
ret
in
inc
mov
sub
add
mov
mov
shlb
out
out
das
jecxz
mov
imul
jnp
mov
inc
cmpsb
add
jnp
insb
stos
xchg
ret
shr
xlat
jl
loop
rol
dec
out
mov
mov
sbbb
int
push
and
ja
aam
fsubs
cltd
push
push
arpl
stos
repz
cmp
inc
jae
pusha
add
inc
xchg
dec
sbb
dec
push
jecxz
out
mov
mov
inc
outsb
lea
rcrl
inc
in
xchg
xchg
jnp
ja
loope
sub
loop
cmp
lods
dec
mov
mov
aaa
xchg
int3
add
mov
xchg
enter
sbb
fsubrs
adc
inc
mov
jnp
sub
sbb
add
inc
sbb
cmp
sahf
test
cmp
dec
adc
mov
shrb
js
cmc
test
mov
mov
mov
in
imul
push
or
leave
int
or
inc
cwtl
fs
jg
out
pushf
xchg
lahf
mov
xlat
jno
xchg
or
xor
mov
xor
jnp
or
adc
addl
aad
push
lret
lds
push
ret
adc
insl
addr16
call
int
pop
lcall
pop
inc
popl
test
stc
xor
loop
sar
or
rcrl
sbb
sti
clc
jnp
popa
pop
ds
rcrb
fldl
das
add
lock
ja
pop
lret
sub
lahf
inc
cmp
and
shlb
lds
jmp
mov
jnp
or
mov
adc
movsb
sub
rcrl
imul
into
adc
test
sub
cmc
stc
pop
jb
cmp
jo
int3
mov
lahf
cmp
cwtl
rcll
incb
xchg
xchg
cmc
push
enter
nop
and
filds
sub
add
scas
cli
roll
bound
mov
ror
push
mov
popf
test
pop
add
mov
push
aas
lock
inc
sub
ljmp
loop
cmc
inc
pop
aas
xor
add
jno
push
int
popa
push
and
sti
jle
xor
ss
rcrl
popf
jmp
or
iret
xor
pop
xchg
ja
popa
sti
xchg
dec
or
ja
cmpsb
xchg
lods
xchg
hlt
fdivr
cmc
iret
out
sarl
or
popf
das
mov
sbb
sbb
mov
and
push
mov
outsb
and
cs
loopne
adc
and
mov
dec
jne
lds
iret
pop
lcall
xor
enter
or
fwait
int3
xchg
mov
dec
mov
dec
xlat
int3
mov
jle
dec
fdivrs
or
mov
ljmp
orb
jge
sub
punpckldq
cld
add
pushf
pop
inc
adc
inc
pop
mov
loope
test
lds
call
push
mov
enter
orl
mov
aaa
idivl
repnz
aad
stos
or
pop
mov
aas
jno
and
sbb
mov
xor
in
into
pop
mov
jne
std
out
mov
std
in
and
add
and
inc
scas
xchg
cmpsl
add
xchg
push
lret
pop
mov
push
sub
push
jo
mov
pushf
sub
mov
ja
rcrb
clc
cltd
das
je
dec
sbb
push
xchg
insl
push
cmp
or
add
into
xor
push
sub
xorl
iret
mov
lods
sbb
dec
xchg
test
pop
insb
not
ds
inc
negl
add
js
mov
pushf
jg
pop
divb
fwait
push
es
ret
cmp
mov
ds
imul
ficoms
incl
push
add
mov
rcll
and
jnp
sub
cmp
adc
imul
mov
xchg
in
addb
mov
fs
test
std
leave
sub
lods
xchg
fmul
push
jle
xchg
leave
sub
add
ret
negl
push
es
cmp
pop
or
iret
xor
mov
pop
test
cmpsl
out
cltd
push
xchg
lret
add
call
pop
mov
push
dec
mov
xchg
imulb
jle
mov
imul
aaa
xor
push
adc
pop
ss
push
dec
or
jmp
sub
cmp
mov
lea
jnp
dec
mull
out
sbb
jmp
sbb
push
sub
xor
sbb
mov
jge
add
pop
cltd
je
lret
fs
arpl
add
sub
dec
pop
cmc
jbe
jmp
fadd
std
js
dec
aaa
aaa
test
je
dec
cmp
test
adc
rolb
push
adc
ja
push
xchg
call
imul
insb
pusha
sarb
xchg
pushf
test
mov
jne
add
lretw
mov
sub
xchg
in
ret
or
mov
xchg
ss
mov
lock
mov
imul
out
jno
lods
inc
into
repnz
imul
jmp
mov
ret
shl
sti
lods
mov
sub
push
fs
dec
and
dec
lods
fwait
mov
dec
sti
cmp
sbb
pushf
mov
add
int3
mov
xor
iret
fistps
dec
loopne
and
jp
enter
dec
sbb
mov
mov
ret
out
dec
int
fstl
scas
push
mov
sbb
mov
repnz
insl
hlt
mov
pop
loopne
pusha
cmc
lods
push
dec
sbb
push
mov
and
out
xor
and
mov
lods
or
scas
cmp
int
pop
fnstsw
mov
pop
stos
or
push
pop
mov
mov
outsb
jmp
cmp
push
rolb
aad
daa
std
addb
aam
mov
fimuls
test
mov
pop
jg
cmp
cmp
in
out
orl
or
mov
dec
test
ljmp
cmc
out
or
subl
movsb
mov
or
inc
jbe
mov
mov
into
rolb
push
je
lea
dec
out
push
ljmp
push
scas
push
pop
ret
add
xchg
test
pushf
jecxz
add
sub
inc
jecxz
pop
push
insb
xchg
stos
enter
into
mov
arpl
mov
test
pusha
jecxz
jg
xchg
inc
push
mov
stc
cmp
dec
jae
sub
ss
sub
jae
lds
insb
cmp
inc
sbb
fdivrs
subl
test
mov
mov
inc
movsb
sub
test
ljmp
xlat
push
and
aas
shlb
ret
lret
out
sbb
mov
push
add
loope
pushf
dec
in
out
and
mov
jl
loop
aaa
jl
into
xor
jns
loop
fld
or
mov
sub
inc
or
jmp
addl
mov
xchg
bound
and
mov
dec
das
cmp
or
inc
xlat
stos
sti
mov
jge
cmp
mov
jmp
mov
loop
push
ret
rorb
fimull
arpl
lds
gs
jo
xchg
xchg
sub
lock
int
scas
rcr
mov
out
fidivs
es
xor
repnz
gs
or
pop
fsubs
pop
shlb
mov
clc
iret
pop
cmp
push
dec
push
adc
dec
push
ficoms
aam
out
inc
dec
adc
push
ds
lahf
iret
sbbb
bswap
inc
fxch
push
iret
out
push
and
pop
push
dec
mov
xchg
je
pop
ljmp
ffreep
pop
pop
imul
pop
addr16
lret
out
repz
aam
loop
push
fdivrs
imul
fdiv
xchg
mov
outsb
inc
loop
loope
fdivs
jb
bound
xlat
jle
cmp
dec
pop
fstpl
aas
adc
dec
cwtl
mov
pop
dec
js
lret
sbbb
lret
inc
les
lret
cmp
add
mov
or
loope
dec
insb
dec
sub
ljmp
call
cmp
push
scas
cmp
or
dec
or
test
fnstenv
addb
movsb
test
sub
sub
inc
rcll
fimuls
loopne
shlb
push
iret
dec
sub
cmpsl
test
xor
cmp
ficoml
lea
dec
dec
cli
push
cmpsb
bound
int
xor
sahf
mov
jge
clc
ja
icebp
mov
xor
xor
push
jnp
or
sbb
popa
in
jmp
js
scas
ljmp
inc
mov
repz
xchg
pop
pop
out
and
add
test
adc
mov
inc
cmc
fcompl
adc
cmp
repnz
notl
pop
test
out
cmp
adc
push
dec
lea
jp
and
mov
shrb
xchg
and
push
cmc
insl
mov
inc
cmpsb
and
pop
xchg
pop
xchg
call
in
push
sbb
sti
dec
jge
test
cmp
inc
jbe
shr
daa
cld
dec
add
or
icebp
movsb
loopne
fcompl
add
xlat
push
mov
mov
push
inc
jl
jo
imul
push
cld
inc
mov
mov
imul
sarl
stc
sti
in
mov
bnd
jbe
mov
mov
mov
pop
push
pop
mov
pusha
pop
sub
fcomps
and
mov
fwait
sbb
xor
pop
fdivp
icebp
adc
sub
scas
loope
sub
subb
xor
sbb
cmpsl
push
int
dec
rclb
loope
data16
frstpm(287
cmpsl
mov
mov
sahf
das
icebp
inc
push
mov
xchg
stc
push
in
cmp
sbb
or
mov
mov
adc
lahf
lret
mov
iret
cmc
orb
test
jmp
lds
lock
sarb
adc
icebp
cmp
cmp
les
aas
dec
dec
invd
mov
mov
cltd
push
fisubrl
add
arpl
fildl
mov
mov
dec
cmc
imull
pop
pop
sub
sbb
xor
lods
insl
add
rorl
push
inc
cltd
xchg
mov
adc
fisubs
and
repz
movsl
and
movsl
clc
mov
push
bound
mov
or
fcmovnb
loopne
dec
inc
inc
addr16
adc
or
add
push
in
fwait
sbbb
cwtl
adc
inc
adc
push
lds
inc
inc
mov
sub
pop
dec
xor
nop
and
insl
test
xor
mov
xlat
sti
js
call
shl
aam
fimuls
sub
pushf
inc
jmp
and
xor
data16
ss
sarl
mov
nop
js
mov
test
push
and
test
pushf
addr16
or
ljmp
sub
inc
push
cmc
mov
mov
add
mov
push
jae
xor
fidivl
adc
ljmp
xlat
jbe
add
bound
lds
in
and
loop
aam
out
sub
push
push
in
call
lea
inc
int3
mov
sub
arpl
dec
jge
addr16
xchg
sti
lods
dec
and
aaa
incl
lods
lods
out
nop
xor
or
jmp
cld
adc
jne
aad
cltd
stos
std
mov
pop
dec
lods
fwait
and
or
fadds
mov
test
sub
xchg
int3
adc
lds
outsb
add
sub
jae
push
pop
and
subl
xchg
cs
outsb
or
xchg
cmp
fs
cmp
arpl
aam
or
mov
and
in
push
in
jecxz
cmpl
popa
outsb
sub
out
adc
pop
and
call
xor
xchg
decl
sahf
mov
xchg
add
adc
jno
pop
xor
push
sub
pop
and
or
push
mov
jp
insb
inc
push
push
pop
cmpsl
cwtl
jecxz
mov
out
xor
scas
inc
jb
adc
adcb
dec
cmpsb
out
jle
mov
cmp
mov
mov
add
shll
push
stos
mov
and
test
jmp
mov
neg
addb
and
lret
ja
inc
je
shrl
outsb
xchg
inc
mov
loopne
mov
lret
mov
adc
loope
cmp
fisubs
and
ss
push
fnsave
or
in
adc
cmp
ret
xlat
mov
aas
adc
dec
mov
jg
std
daa
xchg
test
aas
repnz
fists
cmp
imul
xchg
sub
sub
pop
sahf
adc
adc
push
lret
bound
inc
xor
jmp
xchg
and
jae
cmp
int3
mov
pop
mov
xcrypt-ecb
cmpsl
jecxz
ljmp
xchg
xor
add
daa
pop
sar
imul
bound
prefetchwt1
inc
jecxz
or
add
inc
and
adc
fnstcw
fcmovnb
imul
cmc
mov
nop
shl
push
mov
popa
fdivl
cmp
mov
idivl
mov
stc
xchg
adc
xor
fiadds
sti
imul
mov
jno
aas
loop
cld
dec
movsl
cs
iret
and
dec
xchg
cltd
in
std
push
dec
mov
call
mov
jne
and
pop
push
and
arpl
out
cmpsl
inc
imul
cwtl
aaa
popa
andb
push
cmc
pop
push
out
outsb
adc
sbb
mulb
outsl
add
adc
xchg
jle
sbb
pusha
and
inc
clc
push
insb
or
jmp
insl
lock
shrb
mov
out
xor
inc
pop
push
imul
cltd
or
push
add
dec
and
je
pop
xor
jne
icebp
fstp
adc
mov
pop
add
and
clc
adc
xor
loop
push
and
xchg
cmp
loope
pop
or
jle
leave
aas
push
pop
icebp
aad
pop
pop
scas
das
lods
fstpt
roll
dec
push
filds
xor
sub
repz
mov
cmp
mov
mov
mov
stos
lcall
in
insl
adc
ss
es
aad
mov
out
in
movsl
cmp
push
add
cmc
decb
insb
fs
int3
daa
fs
adc
inc
arpl
arpl
cmp
pop
shl
negb
cs
rcrb
adcb
mov
push
cli
xchg
subl
jmp
dec
je
jno
push
outsl
mov
sbb
push
xchg
mov
sub
inc
hlt
jne
sbb
mov
pop
js
negb
jg
push
dec
ja
or
cli
xchg
xchg
sub
mov
xchg
pop
and
cs
sub
push
shrb
cltd
jne
inc
out
xor
mov
lea
mov
mov
repnz
rolb
arpl
out
popa
add
rcrl
xlat
sti
pop
outsb
rol
push
nop
mov
push
mov
popf
iret
shll
cmp
push
out
sbb
aaa
sar
xor
js
gs
cs
and
adc
xchg
out
fs
shll
sub
mov
jecxz
sbb
adc
mov
jno
mov
mov
shll
jno
xor
lret
and
das
scas
loop
jp
ret
ss
or
loope
arpl
and
mov
test
jge
inc
pushl
mov
mov
jecxz
daa
aad
test
leave
decb
adc
mov
fucomip
and
xchg
xchg
and
hlt
std
add
dec
into
dec
dec
call
or
sbbb
jne
add
idivb
jp
or
dec
out
bound
mov
mov
mov
fs
xchg
data16
push
pusha
fwait
jns
push
push
xor
cwtl
mov
mov
aas
mov
ss
push
jl
aaa
pop
xchg
inc
int
cmc
subl
sub
pop
mov
xchg
dec
fnstsw
jg
push
push
xlat
popa
nop
pop
pop
mov
inc
push
push
cmp
imul
ja
rorb
or
leave
fmull
or
ljmp
pop
mov
sbb
std
ds
jge
maxps
dec
out
int3
push
gs
stos
mov
nop
xor
ja
outsb
sbb
sub
fwait
dec
movl
and
fdivl
fisubl
cmp
js
and
xchg
mov
adc
and
xchg
xor
stc
lds
mov
clc
int3
sub
xchg
sub
movsb
push
loop
add
push
popa
mov
daa
popf
pop
jns
fistpl
data16
mov
stos
imul
iret
mov
add
dec
fcmovnbe
pop
push
inc
xor
dec
pusha
and
sub
inc
testl
xchg
das
cmp
mov
outsl
push
xchg
loope
and
stc
and
xlat
push
and
inc
shll
pop
lcall
mov
sbb
inc
add
lcall
mov
jns
mov
push
pop
cmc
imul
int
aad
into
or
fwait
mov
rcr
adc
cmpsl
icebp
cmp
outsl
jo
adc
inc
movsl
outsl
jnp
cmp
pop
repz
clc
push
sbb
call
popf
xor
mov
repz
lret
jns
sbbl
cmp
jae
inc
or
xor
mov
push
inc
cli
pop
fs
imul
jne
scas
orb
push
jge
and
gs
mov
aam
or
mov
jnp
ds
inc
pop
ficomps
mov
mov
mov
inc
sub
push
subl
sub
jl
shr
shl
pop
bound
fnstenv
jae
push
push
cwtl
mov
jge
mov
sbb
icebp
pop
jg
add
jle
test
movsbl
adc
vlddqu
pop
pusha
orl
lahf
push
cmp
mov
lcall
shlb
decl
movsb
loop
int3
sub
test
push
insl
or
sbb
adc
jecxz
lea
mov
mov
xor
icebp
cwtl
cmp
pop
pusha
popa
mov
cmp
movsb
adc
in
adc
adc
sbb
loope
in
add
imul
dec
xchg
and
insb
mov
or
lahf
mov
dec
insb
inc
jecxz
in
addr16
adc
sbb
adc
lds
push
std
pushf
pop
push
hlt
sub
mull
mov
sub
jl
push
fistl
dec
jb
shlb
inc
add
jbe
cmp
ret
pusha
jb
pop
inc
jmp
xorl
add
jge
sub
adc
cmp
clc
mov
mov
mov
adc
sub
xor
in
xchg
pop
dec
cmp
fwait
mov
out
xor
add
cwtl
xchg
pop
cmc
aad
add
push
outsl
cld
push
pusha
pop
mov
dec
outsb
mov
mov
xlat
mov
adc
sbb
jne
scas
lea
fldcw
cmpl
xor
or
mov
inc
js
mov
or
ljmp
mov
add
stc
out
inc
add
push
inc
xor
pop
sbb
mov
xchg
jecxz
mov
push
into
pop
test
lret
or
dec
and
leave
or
mov
mov
xchg
adc
adc
js
pop
cmpsl
sub
sub
ljmp
xor
xchg
push
or
add
and
push
test
mov
sub
shr
inc
add
adc
sbb
ss
xchg
loope
xchg
rcl
dec
mov
mov
adc
dec
insb
sbbl
sbb
pop
out
sub
mov
fdivs
pop
mov
out
adc
dec
sti
and
ret
ret
aam
shl
cld
mov
data16
xor
aas
sub
test
push
insl
push
faddp
adc
push
cwtl
pop
dec
dec
dec
test
int3
stc
fwait
push
jns
adc
pop
pop
test
xchg
mov
dec
clc
mov
adc
sub
mov
pop
std
das
xchg
jmp
loope
mov
divl
cmpsl
xor
dec
sbb
lcall
loop
xchg
jg
mov
and
xchg
xor
and
or
jo
repz
sbb
dec
push
push
mov
vpmacssdqh
inc
scas
or
inc
and
mov
arpl
sub
mov
jnp
sub
cmp
or
lea
test
sahf
adc
add
cmp
push
outsb
loopne
popf
dec
mov
push
dec
jb
xor
ret
mov
dec
movsl
movsb
cmp
sahf
stos
or
sub
ljmp
sbb
lret
mov
pusha
cwtl
adc
adc
add
cmpb
dec
xor
cs
data16
ficoml
movsb
inc
sub
dec
shll
mov
xchg
cmp
lcall
sub
xor
xor
pushf
paddsb
add
imul
add
int
fnstcw
cmp
or
aas
cltd
les
xor
mov
mov
mov
cmc
lods
sbb
repz
lahf
cs
mov
shlb
jl
clc
ss
dec
sub
jne
lahf
sbb
add
leave
push
stos
jbe
mov
loopne
adc
outsb
cmp
push
mov
pop
ss
mov
repz
jns
add
sti
pop
lahf
iret
testl
inc
addr16
dec
push
or
dec
dec
in
es
push
aaa
jns
je
push
or
adc
leave
loope
cwtl
sarb
pop
mov
dec
gs
outsb
fnstcw
mov
jmp
xchg
js
push
mov
dec
add
adc
sub
out
pop
dec
cs
push
mov
dec
mov
shll
add
jge
xor
inc
dec
test
repz
rclb
jmp
jno
inc
cmpsb
jp
inc
scas
scas
xlat
and
repz
sub
add
es
ljmp
pusha
add
jbe
pop
sbb
into
jmp
jge
or
mov
lret
xchg
jbe
and
or
fildl
popa
sahf
outsl
sub
cwtl
adcl
xchg
jmp
jg
mov
mov
mov
push
lahf
pop
call
stc
cwtl
add
shr
mov
mov
testl
daa
mov
xchg
pusha
imul
dec
mov
xchg
shlw
loopne
push
jp
or
push
xchg
dec
mov
mov
mov
imul
les
outsl
mov
sbb
lahf
xchg
pop
rcr
push
decl
and
pop
enter
xchg
fcomps
lcall
sbb
xchg
mov
fldl
je
repnz
inc
sbb
pushl
movsb
pop
xor
push
inc
pop
and
pop
ja
cld
out
xchg
insb
pop
xorb
mov
pop
or
jne
pop
xchg
pop
mov
dec
repz
push
jae
jle
lret
inc
push
pop
push
imull
mov
sub
add
je
test
scas
arpl
inc
mov
sbb
sub
pop
xor
cmpsb
cld
lds
inc
cli
cmp
fdiv
aam
sarb
inc
testb
stc
js
lods
mov
cmpsb
pushf
dec
and
adcl
lret
add
jl
pusha
inc
sbb
or
out
sub
arpl
lods
sbb
lock
add
in
icebp
lret
lods
jnp
shl
je
fs
stc
inc
outsl
movsl
push
sub
out
movsl
adc
sub
dec
adc
loope
out
pop
fiadds
int
inc
scas
sbb
es
push
mov
pop
adc
or
jle
loop
cmp
and
dec
enter
outsl
flds
dec
out
mov
push
add
pop
jne
pop
mov
dec
test
pop
or
inc
adcl
xchg
out
adcl
jg
mov
int3
test
cmpsb
movsb
sahf
inc
inc
ror
jnp
je
ret
popf
mov
jl
mov
inc
lea
mov
imul
add
loope
mov
push
push
or
jmp
lods
sti
cmp
xchg
orb
int3
mov
adc
lret
mov
jb
mov
in
das
icebp
test
add
dec
mov
cs
stos
lock
mov
sub
lods
sbbb
inc
not
nop
sarl
test
lret
sub
lods
jae
lea
mov
and
sbb
lea
and
lods
or
insb
not
xchg
jae
lret
jo
sti
mov
lret
mov
stos
inc
test
or
inc
lods
repnz
mov
jp
ret
xchg
incb
push
mov
sarl
jl
shll
scas
xchg
mov
cltd
leave
dec
or
adcl
movsb
jne
hlt
fwait
and
mov
or
mov
into
xor
stos
popa
cmpl
imul
mov
outsb
outsb
lahf
xor
nop
shr
push
call
pop
outsl
jns
fildll
mov
mov
push
pop
xchg
je
fstpl
sub
mov
push
orb
and
mov
dec
sbb
pop
xchg
pusha
pushl
in
andl
test
cmp
fcompl
jb
lcall
inc
sub
inc
xchg
sbb
or
in
in
int
xchg
nop
push
xchg
mov
push
fildl
scas
fidivs
daa
lds
mov
jb
insb
xchg
xchg
in
arpl
fbld
das
shrl
mov
imul
cmp
scas
add
mov
fs
arpl
popf
push
hlt
sbb
cmp
sbb
mov
lods
xchg
pop
mov
aam
dec
popf
sbb
xlat
sar
xchg
dec
into
cmpl
sub
mov
mov
jne
inc
movsb
sbb
imul
popf
or
inc
ljmp
into
adc
jno
mov
mov
push
xor
xchg
jmp
loopne
pop
test
es
xor
jle
push
mov
cltd
andl
repnz
cmpsb
aaa
mov
sub
mov
dec
cmp
scas
mov
movsl
inc
mov
mov
xchg
inc
cmp
xor
jle
rcrb
mov
leave
xor
cmpl
add
aad
pushf
int
stos
sbb
xor
in
ds
adc
cmp
cmpsb
jle
les
mov
mov
pop
xchg
sub
mov
hlt
pop
lcall
daa
mov
test
pop
fmul
mov
stos
hlt
push
rclb
jo
fadd
aaa
xchg
shll
sbb
pop
and
mov
nop
int3
fcom
pop
loopne
mov
mov
push
daa
push
cmc
sub
and
or
lods
lea
push
inc
int
sub
movsb
push
fadds
rcrb
icebp
mov
inc
add
loope
fs
std
cmp
in
mov
mov
and
in
add
or
iret
sahf
frstor
mov
or
xchg
lea
out
cmp
cltd
sti
xor
sbb
adc
sub
xchg
add
push
xor
dec
icebp
dec
jae
lods
pop
xchg
lods
fstpl
scas
cmp
addb
dec
mov
scas
sbb
mov
popf
movsb
scas
scas
movsb
ja
mov
jmp
or
push
je
sbb
in
pop
or
jp
fldl
xchg
inc
outsl
gs
lcall
xor
fwait
push
xor
in
into
stc
pop
mov
mov
or
adc
outsl
lahf
fdivr
xchg
mov
ja
cmp
scas
out
fildll
into
xor
ror
popa
add
sbb
int
scas
test
push
cmp
in
or
cmp
in
mov
sbb
adc
jmp
loope
xchg
and
roll
sub
lods
inc
enter
sbbl
mov
loopne
inc
mov
adc
popw
test
out
test
stos
pop
lods
jmp
movsl
jnp
dec
ret
xchg
shlb
insb
or
fisubrl
push
fcmovne
stos
or
jno
inc
xchg
inc
mov
daa
out
in
push
xchg
jecxz
inc
lods
pop
pop
push
or
jnp
das
cmp
cmp
loop
popf
lea
xor
imul
or
xchg
in
loopne
out
lds
jb
xor
mov
outsl
xchg
movsl
mov
push
xor
cmpsl
movsb
rcrl
mov
cli
xor
into
mov
cwtl
sbb
cmpsb
xchg
pop
or
cmp
mov
nop
into
cld
or
mov
push
stos
cmp
pop
data16
inc
jo
add
jbe
aad
mov
ret
fs
cli
sarl
mov
cmovp
mov
jle
fildll
mov
jl
mov
xchg
mov
mov
jecxz
dec
loope
pop
dec
ret
fmull
ficoms
pop
xchg
push
and
sbb
jnp
insb
shll
mov
stc
push
xlat
jecxz
mov
and
sub
lret
outsl
pop
push
rcr
xor
pop
xor
sub
leave
sti
add
mov
mov
xchg
cmp
roll
fstpt
dec
fs
inc
cltd
dec
repz
jne
mov
out
sbb
push
xor
pusha
mov
out
jns
fidivrl
shrl
push
out
insb
lcall
pop
xlat
sbb
decl
fwait
rcrl
adc
cltd
shrb
sbb
or
add
add
and
mov
adc
jp
sbb
sbb
cmp
xor
test
jns
push
in
fcomps
mov
pop
sbb
sub
or
fwait
inc
je
push
test
sbb
inc
pop
inc
ss
dec
orb
dec
add
mov
cwtl
cmpsb
clc
xor
mov
out
mov
mov
les
cmp
imul
jne
movsl
dec
pusha
ja
scas
inc
mov
sbb
jae
test
adc
rorl
sbb
pop
add
aad
idivl
pusha
and
out
push
or
pop
push
int3
or
lret
popf
pop
inc
sbb
lahf
jge
cli
pop
scas
ret
sbbb
sahf
fwait
push
jae
imul
sar
out
jecxz
orl
push
orl
jnp
jo
jge
mov
jl
stos
cmc
jle
dec
js
pop
mov
xor
jno
mov
insl
jnp
sub
push
or
lock
imul
and
repnz
cmp
jbe
cmp
sub
push
cs
and
nop
ret
push
iret
sbb
sbb
mov
mov
mov
shlb
dec
pop
in
mov
shll
adc
mov
inc
mov
nop
out
adc
call
push
pop
stos
out
mov
ret
sti
jecxz
test
add
sahf
addr16
and
cmpsl
stos
repnz
pop
imul
insl
movsl
pop
push
jns
mov
cld
aaa
or
aam
fldt
push
cli
or
rol
adc
stos
ret
cmp
lret
fs
adc
add
cld
divps
inc
adc
jmp
pop
or
test
add
ja
adc
pop
xlat
pop
fbld
adc
jb
enter
xor
cmp
mov
sub
sahf
das
js
daa
aas
insl
push
test
inc
push
in
and
xor
dec
pop
decb
jl
ljmp
lcall
std
dec
dec
stos
and
adc
lds
lahf
jle
cmpsb
cmpsb
lods
mov
mov
dec
movsb
orb
mov
fldenv
cmp
adc
jge
sub
push
lahf
push
in
xchg
mov
xchg
push
ljmp
sarb
in
sahf
test
test
and
sahf
mov
mov
loope
out
rsm
sbb
test
addl
cmp
cmp
jb
push
inc
rcll
movsb
into
lret
inc
hlt
dec
xchg
push
orl
jmp
mov
push
jae
mov
or
fnstenv
or
add
jmp
add
dec
sbb
fcomps
stos
jnp
clc
les
mov
sbbb
push
inc
cmc
sub
cli
subb
stc
xchg
loop
in
dec
adc
loop
lock
jg
sarl
imul
outsb
mov
jg
insb
loop
jne
fdivrl
inc
popa
xchg
test
cmpsb
sbb
ret
inc
sub
movb
in
jp
inc
xlat
xchg
sarl
iret
mov
popf
dec
pop
out
mov
mov
fildl
dec
push
sub
test
repnz
sub
inc
fdivl
sub
mov
ret
add
aam
lret
popf
das
addr16
inc
jecxz
popf
fcompl
jl
dec
push
fistpl
fs
push
jl
filds
mov
repnz
ret
cbtw
adcl
das
stos
iret
bound
loope
imul
subl
adc
mov
mov
pop
push
sbb
inc
lds
inc
in
mov
adc
nop
cmp
xchg
jae
or
mov
mov
and
ds
pop
jecxz
mov
ja
cmp
jbe
dec
movsb
sub
mov
sbb
jp
loopne
mov
fs
jo
pop
je
push
mov
mov
push
xchg
cs
push
xchg
and
rcll
xor
push
xchg
jle
in
lea
hlt
insb
push
imul
in
leave
and
aam
pop
in
sti
cmp
pop
test
push
dec
cmp
xchg
fsts
js
pop
xchg
pop
andb
mov
jge
cli
lret
adc
xchg
pop
std
add
sub
pop
mov
cmp
mov
inc
inc
add
ret
hlt
pop
test
dec
mov
outsl
popa
mov
push
popa
mov
and
fwait
mov
dec
bound
xchg
scas
adc
mov
out
push
pop
push
roll
das
mov
call
daa
push
pop
dec
mov
inc
sub
aad
cmp
dec
std
and
lret
mov
jmp
and
loope
mov
sub
in
aam
ror
das
bound
add
xor
cwtl
xlat
or
shlb
push
fists
aad
ret
and
lods
cmp
sbb
pop
xlat
stos
setno
sbb
cmp
sub
mov
jb
idivb
ret
cmp
mov
or
mov
inc
dec
inc
jae
int3
jl
mov
cmpsb
push
rcr
inc
fadds
into
mov
roll
jge
outsb
add
jge
mov
cmp
and
cli
fistps
add
repnz
dec
sub
outsl
cmp
ds
add
pop
mov
int3
mov
xchg
movb
cmp
lock
mov
dec
pop
rcll
sti
addr16
out
and
jb
arpl
add
jo
sbb
mov
lahf
arpl
inc
or
xor
out
push
insb
push
fwait
test
adc
pop
movsb
push
lcall
lret
adc
cmp
push
push
add
push
cmc
rcrl
rorl
icebp
arpl
add
and
loop
xor
movsb
mov
or
test
or
test
xchg
mov
cli
inc
push
ljmp
adc
dec
adc
jle
sti
mov
movsb
inc
mov
jnp
cmpsb
mov
add
fisttps
jns
mov
mov
xchg
adcl
aaa
mov
sub
xor
cmp
cmpsb
inc
mov
jnp
cmc
sub
aaa
and
insb
pop
mov
rcrl
adc
mov
call
es
add
add
imul
cwtl
push
divb
lds
dec
mov
sub
addr16
mov
fbld
dec
and
mov
in
mov
call
cmpsl
inc
mov
in
xchg
iret
jo
mov
inc
sti
jo
bound
lock
sub
rclb
mov
outsb
repz
fstpl
cmpsb
cmp
and
lods
inc
mov
adc
fstps
pop
in
push
sub
jmp
leave
mov
jne
js
nop
cmp
ljmp
stos
sub
jbe
and
dec
data16
subb
mov
in
xchg
jo
mov
push
xchg
sub
pcmpeqw
jmp
jle
lock
mov
mov
mov
out
mov
lock
cmp
fwait
ret
sbb
dec
movsb
cmp
mov
es
mov
mov
xor
ficoml
fisttps
popf
add
stc
fimuls
in
and
dec
popf
cmp
jle
pushf
and
sbb
je
mulb
or
cmp
push
sarl
jae
je
and
or
inc
dec
add
test
das
push
add
insb
mulb
je
loop
loop
add
pop
filds
bound
xchg
or
add
jmp
xor
ljmp
leave
cmc
repz
cmpsl
jle
jae
in
dec
mov
imul
outsl
in
out
test
xchg
mov
ja
adc
pusha
sbb
leave
arpl
pop
dec
dec
xchg
and
jb
mov
test
mov
adc
sub
popa
mov
lods
fwait
xor
xor
and
outsl
stos
cmp
cs
pop
imul
xor
add
dec
enter
xchg
or
imul
lret
fstp
push
jne
lods
add
cmp
cmp
and
scas
mov
inc
mov
xor
hlt
and
pop
sub
pop
sbb
rdpmc
test
jl
in
test
mov
mov
popf
rorl
cmpsb
fimull
mov
inc
cmp
xchg
jecxz
and
push
lcall
adc
sti
scas
fisttps
mov
or
jo
adc
int3
xlat
push
lcall
icebp
xor
aas
addr16
push
aaa
pop
adc
add
ja
pusha
jnp
out
pop
mov
push
adc
mov
jae
das
aad
lret
xchg
xlat
push
scas
fidivrs
pop
and
scas
je
and
sub
sahf
les
insl
rclb
xlat
mov
inc
sarl
jp
aas
add
aaa
jne
cmpsl
mov
or
mov
mov
xchg
jge
hlt
dec
xor
pop
stos
dec
add
push
cmpsl
in
fisubs
inc
mov
jl
repnz
dec
pusha
dec
das
ret
cmp
lds
loop
or
repnz
jmp
ljmp
mov
jl
rorl
push
bound
cmpsl
test
popa
adc
push
cmp
mov
test
cmpsb
mov
mov
push
pop
fidivl
loop
jl
adc
repz
mov
sub
xor
sub
sahf
stos
fwait
leave
frndint
in
test
cmc
and
jae
sub
xor
and
daa
jecxz
mov
mov
lock
xor
pusha
push
cld
jns
sarl
sub
pop
mov
sbbb
fstl
push
insl
adc
aad
pop
add
jp
fsubp
push
cmp
jne
xor
jg
sub
adc
inc
out
clc
hlt
mov
add
and
adc
cli
lock
push
sbb
in
jge
sub
pusha
cwtl
xchg
push
push
fwait
iret
cmp
nop
xor
rclb
lea
mov
xchg
fs
div
jmp
xor
leave
inc
or
addl
shrb
mov
cmp
xchg
ja
cmpsl
lods
xchg
fildl
js
or
and
sbb
outsb
mov
mov
aaa
lea
add
mov
add
adc
arpl
in
rorb
enter
das
sbb
decl
push
jb
dec
in
ret
jl
jbe
push
mov
imul
cmp
or
repnz
cwtl
push
shl
sub
cmpsl
push
lret
push
jno
insl
cmp
cmp
pusha
sub
sub
pop
loopne
jg
push
xor
cmp
cmp
adc
mov
and
xchg
mov
xor
pop
imul
lock
xlat
scas
pop
cmp
imulb
stc
sbb
push
dec
out
repz
fbstp
jb
pushf
sub
scas
gs
mov
mov
out
fwait
imul
lea
add
popa
mov
test
sahf
imul
ja
outsb
mov
mov
push
dec
mov
dec
rcrb
and
xor
testl
inc
aas
cld
inc
movsl
call
cmp
jne
sbb
jle
mov
mov
jne
jecxz
lods
mov
inc
xor
dec
cmp
jg
sub
cmp
lret
je
fdivrl
sub
pusha
mov
push
push
add
lods
xor
outsb
punpckhbw
push
xchg
push
shll
out
jnp
adc
or
cmp
adc
add
js
pop
fwait
or
add
jp
cwtl
mov
inc
mov
mov
imul
test
es
pop
pop
xorb
xchg
push
aam
mov
popf
rorb
fcoml
int3
push
inc
mov
add
xchg
mov
pushf
and
or
andb
inc
ljmp
imul
jno
pop
out
jbe
push
jbe
roll
rcll
jb
pop
or
cmp
daa
fwait
cmpsb
or
test
int3
lods
cwtl
pusha
push
mov
sub
inc
push
cwtl
xorb
jo
rorl
mov
dec
nop
idiv
push
push
jae
iret
pop
inc
mov
lods
pop
ja
lock
testl
cmp
out
lods
jne
insl
mov
test
sbb
pop
mov
lahf
lcall
jg
int3
bound
roll
ljmp
mov
sbb
bnd
ror
fmull
xlat
adc
lods
inc
mov
mov
popa
mov
mov
sbb
and
push
add
addb
mov
scas
fisubl
fcoms
jno
aas
or
xchg
sub
jns
sub
icebp
ficoml
stos
stos
pop
inc
test
call
daa
push
enter
adc
sahf
bswap
mov
mov
fisubrl
gs
cmpsl
push
xor
rorl
js
movsb
sub
loope
scas
push
ret
pop
test
xchg
and
in
inc
clc
jg
push
or
inc
or
sub
imul
push
jl
xabort
cltd
fs
cmpl
xor
enter
mov
in
jmp
in
gs
cmc
or
or
mov
cmc
iret
sahf
sbb
ret
and
mov
pop
push
pop
roll
pop
push
mov
mov
push
jne
inc
imul
jge
ja
dec
repnz
addr16
sti
sub
cltd
loop
sbb
shll
idivl
popf
dec
shrb
jne
lea
xlat
add
mov
mov
push
jne
jo
push
push
xchg
inc
lds
gs
aaa
mov
nop
add
or
jae
mov
subb
pop
call
in
repz
sub
in
or
or
stc
add
rorb
popa
outsb
lret
lret
stos
icebp
mov
jle
xchg
cmp
lea
js
add
adc
std
call
fs
or
andl
aad
xchg
aas
ja,pt
call
cmp
fnstcw
pop
inc
hlt
sbb
movsl
outsb
cmp
popf
cmp
out
data16
push
push
movsb
sbb
jp
js
int
mov
push
xor
imul
sub
jge
mov
dec
loope
adc
lret
popa
mov
push
mov
cwtl
mov
dec
fdivrs
or
aam
ret
fwait
repnz
leave
divb
mov
dec
ljmp
xchg
dec
popa
xorl
pop
stos
adc
loope
push
incb
pushf
push
enter
jle
cmp
jecxz
mov
imul
divl
cmp
and
int
inc
stos
iret
repnz
sub
cltd
aaa
cmp
pop
lock
jo
aad
mov
das
mov
aas
insb
mov
popa
and
popf
cli
mov
movsl
mov
stc
leave
push
push
pop
xor
sbbl
jle
fs
push
test
cld
pop
jl
daa
lahf
ror
test
aam
fdivrl
aas
inc
push
or
xor
cli
mov
pop
adc
repz
inc
pop
and
les
cmp
sti
cli
push
add
test
sahf
dec
xchg
pop
es
xchg
rolb
mov
repz
into
mov
xchg
movsb
fs
int
fidivl
lret
insl
mov
jno
lock
push
mov
js
sub
into
mov
loope
pop
push
dec
data16
jnp
mov
mov
lea
aaa
and
cmp
fcoms
add
push
cwtl
mov
pop
pushf
push
repnz
mov
jp
sbb
pop
aad
mov
insb
bound
or
sub
jb
sbb
scas
add
mov
stc
sub
push
mov
fdivrs
test
mov
jl
imul
inc
push
jmp
mov
sub
mov
repnz
leave
fcompl
inc
fwait
pop
mov
in
inc
adc
fisubs
test
lahf
je
hlt
lds
jo
or
sub
push
data16
addb
cli
out
add
out
mov
mov
mov
sbb
ficompl
addr16
mov
sub
jp
cmpsl
cmp
mov
out
loop
pop
mov
pop
adc
jg
into
pop
jb
and
insl
idivb
ljmp
push
enter
mov
adc
cmp
int3
roll
mov
mov
rcr
pop
push
fidivs
mov
leave
jecxz
mov
pop
sbb
sbb
sub
movsl
sbb
dec
jb
pusha
mov
test
cmp
outsb
mov
push
divb
or
addl
xor
add
sub
sbb
pop
xchg
sbb
jecxz
adc
shrl
pop
xchg
bound
mov
or
dec
stos
ficoml
mov
sbb
mov
push
rcrl
bnd
and
mov
push
mov
hlt
pop
divb
mov
outsl
add
scas
mov
repz
lods
xor
push
xchg
xchg
xchg
and
mov
ficomps
xchg
jge
xlat
mov
insl
movsb
add
cmp
sbb
lret
in
mov
fdivs
lea
sbb
jge
cmp
sub
ljmp
pop
out
pusha
iret
movsb
jo
lds
push
cli
in
sub
test
outsb
pop
leave
push
mov
push
in
pop
cmp
pop
pop
outsl
faddl
movsb
sbb
adc
adc
dec
fs
int
mov
jl
mov
push
inc
in
and
push
sub
sub
cmp
jo
dec
adc
jge
sbb
shr
mov
lds
dec
ja
shlb
sbb
xlat
adc
dec
bound
pushf
fdivp
push
adc
jp
mov
fnstcw
lods
or
sbb
push
xchg
lods
or
cltd
xor
lds
sub
popl
neg
and
mov
cmp
jns
and
orl
xor
or
and
cwtl
cmp
push
and
xor
and
xor
and
repnz
xchg
cld
in
pop
or
jo
adc
lret
ret
mov
fcoms
pop
bound
xchg
push
insl
or
adc
push
lods
dec
jmp
jmp
sub
in
das
cld
jbe
adc
push
in
popf
outsl
inc
sub
lret
sub
loopne
mov
jae
dec
cmc
xor
cmp
loope
les
mov
adc
xchg
push
sub
xor
cmp
sub
ret
into
jb
setbe
and
cmpsb
push
fmulp
movsb
sub
mov
jg
mov
xchg
test
cmpsb
mov
jmp
ror
lahf
cwtl
mov
dec
cwtl
jmp
lret
jbe
fidivl
loope
ss
sarl
out
stos
dec
mov
cmpsl
adc
cld
jae
lcall
sub
mov
inc
push
insw
ss
jge
jmp
nop
bound
mov
mov
xlat
sub
inc
pushf
idivb
stos
mov
cli
call
cltd
xor
fsubl
and
imul
xor
lret
addl
bound
xchg
std
mov
lcall
jo
cmp
mov
fisubl
stc
xlat
mov
clc
dec
sbb
loop
dec
jne
pop
shll
lahf
xchg
push
les
pop
sbb
cmp
jno
inc
icebp
jne
sbb
outsb
dec
lods
frstor
sub
ljmp
xchg
into
rcrb
aam
mov
jno
std
imul
cmpb
mov
rcrl
mov
adcl
scas
imul
add
movsb
idiv
and
jmp
inc
xor
gs
scas
or
dec
sbb
sbb
repnz
lock
mov
push
dec
int3
out
rorb
subl
lret
mov
or
sub
push
adc
lcall
in
loop
adc
in
xor
loope
jno
jge
imul
js
fcomps
pop
pop
sbb
inc
cld
sub
repnz
dec
je
push
cli
daa
fadd
sub
mov
hlt
shll
and
cmp
daa
xchg
inc
jge
inc
cli
data16
xchg
push
pushf
jmp
dec
imul
dec
inc
mov
dec
adc
push
mov
and
rol
dec
adc
stc
repnz
rcrb
jno
outsl
xchg
mov
stos
in
stos
sbb
shll
lods
or
mov
or
dec
dec
cmp
jp
roll
xor
cmp
push
jo
and
jmp
cs
out
mov
dec
into
jns
aaa
add
imul
cli
push
scas
pop
push
xor
imul
jne
mov
mov
dec
adc
mov
mov
es
cmp
cmc
jecxz
jno
mov
pushf
lods
add
jl
int3
aaa
stos
gs
lea
dec
or
add
ja
lcall
imul
sub
and
mov
or
mov
push
mov
shll
dec
and
sti
call
lret
pop
xor
stc
adc
mov
lock
shrl
mov
or
and
fisubrs
in
dec
insb
fmull
push
scas
cmp
mov
inc
ret
push
push
jb
cld
cld
xor
in
pushf
call
out
fmuls
jge
jp
fimull
mov
rcrl
add
xor
jle
out
movsb
imul
loopne
int3
add
mov
push
or
rcrb
and
inc
cwtl
adc
out
sub
add
xchg
mov
fidivl
mov
int
sub
loope
dec
lock
test
dec
pop
iret
dec
pop
cmp
popa
nop
adc
jae
lds
popf
jmp
jp
iret
xchg
cmc
ja
push
fildll
inc
mov
add
xor
adc
pop
aam
rorl
sbb
adc
sub
or
bound
daa
xchg
xor
aam
outsb
inc
ss
mov
xlat
or
or
pushf
ljmp
pop
mov
cmp
xchg
fs
lret
int
dec
pop
mov
test
aad
xor
in
mov
hlt
insb
dec
jmp
sbb
xchg
stos
sahf
or
dec
pop
stos
xor
dec
xchg
adc
pop
inc
in
aaa
adcl
adc
xorb
mov
jmp
shrl
insl
cmc
cmc
repz
or
loopne
sbb
pop
jb
or
loop
push
lods
flds
mov
pop
cmp
sbb
stc
movsb
lcall
jecxz
add
pushf
in
leave
into
sbb
addr16
push
xor
mov
cmp
mov
xchg
xlat
push
mov
aaa
lcall
in
popa
cmp
mov
shr
mov
push
outsl
pop
or
mov
adc
jne
insl
mov
inc
fisttpl
pusha
notb
add
mov
sbb
imul
mov
or
das
fwait
lret
inc
pop
adc
xor
sbb
fbstp
daa
les
inc
pop
adc
imul
adc
adc
sti
mov
lcall
pop
lahf
xor
test
xchg
sub
fstl
push
cmp
sbb
xor
xor
stos
or
sar
and
or
aam
jo
push
add
es
sbb
mov
fsubrl
cwtl
add
fldl
xchg
cmp
sahf
iret
xor
xchg
in
ja
outsl
mov
jle,pn
mov
and
add
xchg
sbbl
das
push
sahf
push
pop
jg
cmp
inc
dec
jp
cmp
and
mov
iret
arpl
sub
dec
cmp
scas
bound
test
jge
into
add
jnp
cmp
dec
add
dec
cmpsl
insb
sub
jne
cmp
jmp
and
out
add
adc
pop
or
mov
or
mov
push
ja
cmpsl
sbb
out
adc
enter
xor
mov
nop
inc
repnz
sti
xor
test
inc
add
notb
cmovo
or
jl
into
jo
xchg
adc
cmp
cmp
xor
int3
cmc
mov
mov
popf
mov
dec
cli
mov
cld
pop
cli
sub
and
lret
pop
enter
fisubrl
loop
xor
punpcklwd
pusha
ja
add
jl
mov
sbb
mov
add
test
xchg
xchg
or
lea
jne
push
loopne
mov
outsb
mov
pop
cmpsl
imul
inc
or
mov
iret
jp
jl
scas
push
jg
cmp
dec
push
dec
inc
sub
inc
inc
cmp
mov
dec
movsl
cs
sbb
stos
popl
jmp
stos
pop
and
sarb
or
jb
dec
cld
movsl
movsl
pop
mov
insb
int3
imul
push
jp
push
cmp
sbb
loop
leave
stos
jne
pushf
jge
cld
sahf
inc
out
and
mov
mov
cmp
cmc
adc
dec
fiaddl
cwtl
lock
lahf
mov
adc
or
mov
cmp
fwait
sti
add
jl
jp
or
iret
inc
pop
ficoml
cmpl
cmp
jnp
scas
dec
cmp
jns
test
and
adc
rcr
movsl
daa
jp
jne
adc
rcrb
ficompl
xor
cmpsb
push
dec
mov
xchg
jnp
xor
loope
test
bound
das
push
sub
addr16
cli
dec
lea
xchg
push
insl
or
lock
in
fwait
enter
cwtl
or
sub
ja
pop
mov
and
repz
inc
roll
push
mov
sti
push
pop
jecxz
sbb
mov
sub
dec
leave
mov
mov
mov
shll
mov
lds
pop
std
xchg
cwtl
add
pop
jnp
sbb
cmpsl
mov
repz
insb
and
jp
int3
adc
add
test
push
inc
lret
pop
sbb
xor
mov
and
or
stos
in
sbb
xchg
push
fdivl
in
sbb
fldenv
xchg
pop
cmp
mov
or
push
int3
mov
sbb
out
stos
shr
fsts
fstpl
dec
add
push
fisubl
jnp
and
cmp
fwait
adc
mov
pop
push
aam
jl
push
and
popa
push
test
outsl
adc
dec
mov
loop
ret
lahf
aaa
cld
in
sbb
loopne
add
out
jmp
flds
fcoml
mov
adc
jo
jmp
or
or
push
lret
sbb
stos
outsl
mov
and
addl
test
enter
rclb
jl
jge
ljmp
rorl
lea
sbb
mov
xor
outsb
cli
pop
push
inc
lcall
inc
xchg
xchg
jbe
imul
in
inc
xchg
lock
inc
xchg
imul
out
loop
ljmp
dec
jmp
fwait
push
sub
jno
movsb
stos
imul
add
jns
xchg
mov
dec
cmc
mov
jae
mov
sub
push
in
cmp
inc
jecxz
les
adc
movsb
cmc
xor
test
repnz
ljmp
mov
pop
dec
adc
pop
mov
lahf
pushf
popf
xor
push
mov
addl
fwait
adc
xchg
mov
into
or
ss
insb
inc
push
gs
sbb
loopne
call
xorl
sub
imul
pop
jne
loope
stos
mov
ficomps
mov
adc
mov
int
scas
leave
cmpb
or
and
pop
test
iret
fidivrl
sub
and
lcall
test
in
xor
adc
jno
xchg
xchg
mulb
dec
call
cmpsl
scas
dec
rorl
or
xchg
push
xor
arpl
sbbb
lcall
mov
adcl
lahf
sti
mov
enter
sbb
lock
test
add
clc
xchg
push
sub
inc
pop
pop
pushf
cs
inc
test
and
addl
lea
popf
cmpsl
out
in
push
icebp
push
mov
jecxz
pcmpeqd
add
sub
movsb
shrl
dec
cmp
repnz
or
ds
shll
push
xchg
sub
pop
mov
cli
fcmovnbe
and
in
sbb
pop
mov
pop
sbb
dec
imul
sbb
in
jp
movsb
jmp
daa
sbb
pop
pushf
lods
loope
cld
add
sbb
cld
jge
mov
adc
dec
pop
pop
pushf
adc
lret
mov
cmp
cmpsb
dec
aas
ja
inc
or
stos
fdivrl
ds
cmp
xchg
cs
cld
dec
push
fisubrs
popf
mov
or
jb
push
out
cmpsl
lahf
ret
jg
xor
xchg
mov
lret
repnz
pop
les
cli
std
push
rcr
sbb
push
cli
sbb
push
dec
add
xchg
das
jg
bound
cld
push
std
xchg
in
dec
fdivr
mov
mov
outsb
mov
mov
and
adc
insb
leave
fimull
sbb
or
shrb
jmp
adc
imul
mov
and
pusha
xchg
pop
rcr
lahf
mov
pop
inc
test
xchg
or
push
data16
inc
insb
mov
sbb
popa
pushf
orl
cmpsb
and
in
mov
xchg
push
cmpsl
stos
jne
lods
mov
push
jno
out
pop
and
rorb
cld
fdivp
jbe
add
in
add
lret
push
xchg
sbb
adc
jg
rcrb
xchg
xor
inc
jo
fcmovu
lret
mov
lahf
movb
mov
test
xor
aam
cmp
push
pop
test
push
dec
dec
out
movl
push
mov
movsl
andb
and
pop
je
fucom
fwait
jnp
push
sub
or
dec
lods
cli
lds
test
scas
mov
dec
push
and
mov
push
cmp
lds
jle
repnz
movsl
inc
adc
dec
xchg
ljmp
or
iret
or
cwtl
or
pop
popa
jp
scas
outsl
inc
dec
ret
fisubl
fldl
pop
loopne
inc
in
jecxz
push
or
out
sub
rcll
stos
cmp
cwtl
sub
adc
ret
out
cmpsb
sbb
mov
cmp
popf
mov
jo
cltd
pop
mov
pop
movsb
and
cli
dec
lock
pop
pop
jp
bound
jno
dec
dec
es
add
and
jg
push
jb
into
loop
lret
lret
push
push
adc
lret
jo
addr16
or
bound
dec
inc
pop
add
push
test
repz
pop
mov
pop
gs
rorl
push
jecxz
dec
mov
mov
mov
ret
shrb
sub
jecxz
lret
mov
dec
xor
bound
sbb
daa
cli
sub
jle
sbb
and
sarl
lock
mov
pop
push
jl
xor
and
popa
xor
and
test
test
dec
shll
jmp
daa
mov
shl
cmpsb
nop
cmpsl
outsb
sti
xor
sbb
fisubs
popf
icebp
fimuls
into
fdiv
pushf
xlat
cmpsl
hlt
xor
sbb
mov
dec
dec
out
or
or
ss
roll
dec
das
mov
mov
or
pop
mov
xor
imul
test
shlb
repnz
add
mov
arpl
xchg
inc
pop
pop
jp
call
sub
adc
sbb
push
shrl
or
dec
xor
call
jge
or
fsubl
push
jmp
es
sub
fwait
mov
or
pop
ret
fcomip
out
sbb
push
ss
lret
cld
jmp
xor
test
inc
loop
pop
xor
jecxz
sbb
mov
shr
jnp
jmp
sbb
in
mov
iret
push
push
xor
xor
aam
aad
je
xor
shll
push
pushl
mov
in
xchg
jne
jnp
sbb
addr16
loop
repnz
sub
push
or
pop
in
outsl
aad
ds
inc
jl
jne
mov
or
data16
sti
fildll
fistpll
fsubs
lea
mov
jg
es
jo
sub
xchg
jno
or
aas
in
push
movsl
fdivrl
sub
popa
mov
fwait
roll
mov
hlt
lods
push
ret
outsb
leave
mov
xor
jl
push
xchg
loop
adc
hlt
mov
mov
push
fmuls
popa
pop
nop
leave
pop
pop
pop
fimull
je
movsb
in
mov
jmp
ja
jbe
leave
push
push
ret
jno
mov
bound
jae
pusha
pusha
lret
dec
das
test
movsl
mov
insb
xchg
sub
stc
pop
or
add
scas
push
loop
sbb
cmpsl
sbb
sub
jle
filds
jle
push
adc
sub
les
outsl
dec
push
add
sti
jmp
pop
dec
push
rolb
shll
add
dec
add
adcl
fadd
bound
std
shrl
fstp
push
inc
xlat
shlb
aad
mov
or
iret
inc
push
or
xor
lods
int3
fnstenv
lret
sub
iret
and
jl
lock
jecxz
dec
mov
ret
mov
stos
adc
ja
or
mov
mov
jo
push
testl
mov
add
mov
mov
jle
add
jno
dec
mov
mov
xchg
sbb
ret
xchg
pop
lret
aad
sbb
cmc
mov
les
sbb
mov
jbe
aam
out
fcmovnb
test
xor
stc
pusha
mov
scas
xchg
outsb
xchg
push
dec
inc
js
fs
lret
mov
mov
je
sahf
pop
jecxz
push
lods
scas
imul
pop
scas
push
lret
popa
test
in
and
jge
push
fcom
cmpsl
push
lods
push
icebp
and
insl
leave
roll
or
mov
fwait
js
mov
adc
cmp
sbb
in
or
or
dec
mov
xor
pusha
loopne
jl
jp
push
mov
icebp
out
shlb
pop
stos
inc
dec
push
cwtl
repnz
cmp
jge
aad
shlb
xchg
dec
cwtl
ss
adc
adc
fnstsw
gs
fwait
mov
sbb
dec
or
and
adc
shrl
cs
rorl
xor
sub
outsb
or
pop
sarb
mul
hlt
jle
mov
xchg
fistl
jno
jae
jne
in
xor
popf
cmp
std
movsb
vhaddps
cmp
or
add
mov
pop
lods
or
add
jo
stos
push
inc
cs
mov
jo
in
push
arpl
sbb
scas
xchg
push
out
push
xchg
and
stc
jae
push
push
push
ret
dec
mov
xor
aaa
inc
xchg
stos
mov
in
sahf
js
imull
xchg
sub
sahf
push
jp
inc
dec
stos
jle
pop
or
fwait
push
js
mov
jbe
fdivrl
ljmp
push
std
scas
fldt
push
addr16
inc
jbe
and
lock
add
sti
xchg
jbe
lods
stos
test
adc
std
sbb
outsl
inc
xchg
mov
repnz
jmp
mov
and
insl
sbb
mov
lods
jge
fdivs
adc
or
ljmp
gs
adc
sub
fimuls
sub
shrb
mov
mov
popa
not
ret
negb
aad
cmp
stc
and
rorl
cld
xor
xchg
and
xchg
outsl
jmp
cmp
mov
mov
lods
sbb
dec
aad
mov
jb
jmp
into
loop
dec
sti
jo
xchg
or
outsl
pop
jp
jp
mov
jmp
in
cmp
orl
je
and
inc
cmp
xor
mov
js
mov
sub
mov
hlt
push
push
sub
ja
mov
dec
js
mov
adc
xor
icebp
stc
jle
test
sahf
mov
mov
mov
adc
pop
rcrb
cmpsb
inc
test
ret
mov
jmp
xchg
jae
pop
cmp
add
aas
adcb
push
int3
stos
cld
bound
subb
push
fcoms
push
inc
aam
mov
add
je
sahf
push
ficomps
pop
or
test
sbb
lea
inc
mov
jae
fdivrl
loop
push
cmpsb
and
cli
mov
xchg
push
movsb
pop
repz
mov
sbb
sti
mov
popa
in
pop
xlat
ljmp
insl
call
das
sbb
out
push
out
add
sti
ljmp
xchg
jbe
pusha
imul
jae
pop
jecxz
shlb
movsb
cmp
cmp
out
mov
sub
jge
add
inc
jg
sti
rolb
sbb
test
out
fldl
in
pop
mov
push
push
test
sub
ds
sbb
push
insl
repnz
cmpb
into
shrb
mov
xorl
mov
fisttpll
out
test
ja
sbb
mov
sahf
std
sti
xor
testl
cli
outsw
inc
icebp
and
and
cmp
stc
repz
push
test
ja
and
sub
imul
mov
sub
gs
and
or
sbbb
cltd
lahf
dec
push
jmp
std
xchg
xchg
mov
jb
or
out
repnz
inc
pop
xchg
push
cwtl
or
or
leave
mov
mov
enter
fcmovu
mov
insl
mov
sbb
loopne
and
or
sbb
sbb
sbb
inc
sahf
push
add
push
mov
ja
cmp
cs
xor
dec
inc
clc
movsb
pushf
cmp
mov
cmp
mov
sub
pop
or
ljmp
xchg
cwtl
cmp
imul
mov
jnp
pop
adc
hlt
xlat
enter
ficoml
enter
loope
movsb
aad
mov
loope
adc
sub
dec
mov
pop
adcl
lea
jb
outsb
push
or
inc
loope
nop
jno
lea
cmc
adc
or
inc
add
cmpsb
pushf
push
es
insl
mov
das
inc
push
pushf
push
jp
insl
scas
repz
adc
divb
xchg
cld
nop
jl
inc
fistl
or
div
sbb
fs
mov
aad
dec
hlt
les
xor
test
cmp
cli
add
imul
sub
leave
test
xor
push
inc
subl
pop
hlt
sub
cmc
jp
cltd
jmp
push
sbb
jnp
test
lods
or
ds
adc
mov
aaa
mov
mov
lcall
fsubs
sbb
and
out
mov
inc
mov
add
stos
out
adc
shrl
add
sbb
xor
add
and
notb
fiadds
sub
mov
ss
sbbb
punpckhdq
push
xor
rcrb
inc
or
xchg
jbe
cmc
xor
stos
push
gs
shlb
aas
pushf
das
fnstenv
push
roll
out
jg
jmp
mov
lock
mov
repz
xchg
mov
test
pop
test
mov
jge
cmp
cltd
xchg
and
xor
mov
nop
out
pushf
add
fnstcw
sbb
push
xchg
ret
sub
shrb
jb
mov
mov
bound
stos
je
stc
and
rcrl
add
lds
cmp
inc
pop
cli
hlt
and
fidivs
hlt
add
daa
cmp
icebp
jbe
stos
push
fcmovbe
test
sub
sub
leave
movsl
jp
pop
jg,pt
and
out
lahf
pop
sbb
mov
aad
dec
push
mov
dec
sbb
xchg
or
call
shll
std
pusha
jmp
xchg
add
xchg
stc
enter
jno
incb
jns
mov
popf
adc
in
lock
into
shrb
int
movsb
push
ljmp
not
inc
inc
dec
jb
sbb
pusha
out
push
xor
pop
ficomps
mov
push
clc
add
add
cltd
jge
jle
mov
popf
scas
dec
jb
mov
nop
jnp
scas
xor
pop
orl
mov
push
push
jl
int
pushf
aas
test
stc
mov
jp
mov
cmpps
and
stos
adc
push
movsl
nop
inc
inc
inc
sar
push
dec
rcrl
sarl
xchg
pusha
or
ror
add
push
loope
ja
sub
pop
adc
gs
loop
or
or
mov
loop
outsb
sub
loop
add
out
dec
sbb
rcrb
es
inc
lahf
loop
repz
loope
shl
addr16
jns
shlb
xor
call
fcmovnb
lods
cld
xlat
sar
adc
repz
ret
jecxz
aas
push
addr16
addr16
inc
push
mov
ds
jns
mov
pusha
mov
jb
jle
mov
cmp
mov
cmpsl
shrb
and
push
daa
adc
addr16
insl
xor
xlat
mov
sbb
loopne
movsb
std
stos
test
mov
push
pop
jle
scas
fs
jo
sbb
inc
mov
dec
pop
push
inc
jmp
mov
or
or
je
jo
add
bound
mov
mov
mov
or
into
jmp
and
and
and
push
lds
pusha
std
out
push
dec
add
jno
jle
cmp
xchg
push
jno
xor
and
ficompl
ds
adc
loop
fadd
jmp
or
adc
jmp
dec
sbb
jl
jnp,pt
pop
xor
mov
jns
sbb
cmp
adc
scas
mov
push
push
xor
or
or
and
dec
dec
xchg
data16
enter
ficompl
xchg
mov
sub
push
negl
fdivp
movsb
jmp
lcall
movsl
sbb
retw
shll
iret
in
sbb
mov
ret
add
adc
or
imul
sub
lretw
push
clc
jle
sub
or
loopne
mov
mov
mov
rcll
dec
lea
cmpb
push
pop
sbb
outsl
add
or
fwait
in
les
lcall
adc
mov
loope
stos
jo
cmc
outsl
adc
repz
sub
es
lock
jmp
mov
or
shll
dec
cmp
adc
add
jl
in
xchg
std
jg
xor
outsl
inc
flds
add
pminsw
mov
imul
xor
add
shrb
jae
push
mov
std
gs
repnz
les
push
or
sbb
daa
xchg
fidivl
in
mov
ret
mov
xchg
lahf
jmp
out
dec
add
push
aas
and
shlb
sar
or
jg
scas
clc
and
mov
rol
outsl
nop
xchg
shlb
stos
xor
js
test
lods
ficoms
mov
mov
std
inc
cli
adc
adc
lcall
shrb
jno
outsb
inc
mov
hlt
insb
mov
jmp
gs
mov
icebp
arpl
out
mov
adc
mov
cmpsl
je
adc
je
pop
push
mov
and
leave
mov
mov
mov
push
mov
mov
mov
int
push
test
add
jle
adc
adc
and
cmp
inc
fmuls
or
les
mov
aam
mov
or
repnz
incb
xor
popf
rol
jg
and
fidivrs
mov
enter
sub
sti
enter
lods
pop
adc
out
pop
mov
negb
mov
push
sub
imul
mov
inc
pop
test
push
inc
and
aas
movsl
cld
push
ss
sbb
data16
cmp
mov
mov
jnp
mov
imul
xchg
mov
jb
and
xor
pop
jbe
mov
mov
fnstcw
mov
mov
test
inc
cmpsb
push
jmp
dec
mov
mov
xchg
rorl
jne
mov
or
call
aaa
lahf
mov
jae
incb
xrelease
pop
and
mov
adc
jbe
repz
mov
dec
dec
test
jns
aaa
ret
cld
pusha
push
aaa
fwait
repnz
popf
push
jnp
pop
pop
jg
or
cmc
stos
push
add
test
jge
jo
inc
aaa
loope
cli
adc
xor
pop
adc
dec
cmp
or
jg
mov
fisubrs
gs
jo
cmp
call
jp
inc
andb
mov
sbb
xlat
stos
fiadds
neg
imul
ret
lds
repz
int3
dec
in
popa
les
fwait
adc
xor
fnsave
xor
pop
push
cmp
and
dec
add
pop
pop
mov
mov
cwtl
push
je
stos
inc
jmp
mov
jg
add
pop
shr
or
push
ljmp
test
mov
fists
mov
jmp
sbb
out
fnstenv
lock
cltd
fdivl
dec
xorl
sbbl
les
jge
sti
mov
dec
aad
push
movsl
sbb
push
adc
mov
jne
dec
shr
stos
repz
pop
mov
out
bound
lret
insb
pop
adc
sub
nop
lock
dec
std
dec
into
sbb
or
in
xchg
in
push
loopne
mov
inc
movsl
popf
scas
push
mov
jbe
cmp
push
push
mov
scas
int
out
fidivl
inc
xchg
out
mov
sbbb
add
stos
mov
add
pop
cli
mov
int
or
pop
dec
mov
rorb
xorl
les
xor
mov
pop
dec
aam
sti
clc
mov
cmp
sub
mov
imul
fstl
xchg
pop
cmp
dec
sub
push
or
int3
inc
cmp
in
mov
dec
lock
jmp
popa
jl
lcall
cs
mov
push
push
xchg
test
arpl
shll
pop
les
xchg
or
push
and
out
inc
xor
int
dec
mov
out
cmpsl
bound
adc
in
jb
push
dec
mov
das
add
stc
and
loopne
sub
fistl
and
hlt
not
mov
fistpl
inc
xchg
adc
push
sub
movsb
dec
shll
dec
adc
loope
push
fnstenv
hlt
jno,pn
pop
scas
cmp
mov
jo
and
into
adc
js
pop
lods
sub
mov
addb
hlt
fxtract
jns
lcall
mov
in
roll
mov
loop
ljmp
pop
clc
sub
pusha
mov
push
jns
cwtl
dec
shll
and
repz
mov
push
adc
add
mov
dec
and
mov
mov
ret
xor
pop
pop
inc
cmc
arpl
jo
mov
xchg
adc
mov
dec
inc
jo
stc
call
mov
fidivrl
jb
into
mov
push
xor
cmp
sub
cmp
pop
sub
mov
sub
fcomp
lret
xor
fwait
daa
mov
cmp
push
push
into
mov
mov
or
subb
xor
adc
icebp
adc
fcomps
lret
xchg
mov
add
jae
out
movsb
in
pop
push
dec
dec
fimuls
test
push
pushf
loop
repnz
cmpl
test
inc
aad
pop
dec
sub
ss
sbb
pop
inc
je
subl
jae
mov
daa
jp
dec
pop
loopne
jns
mov
aas
mov
xor
inc
clc
lds
in
and
ljmp
arpl
aam
sbb
mov
shll
mov
fsubl
and
dec
outsl
arpl
rolb
ret
stos
cmpsl
or
ret
sbb
cmp
pop
xorb
pop
aad
jns
adc
fs
push
test
dec
icebp
mov
test
inc
xor
ret
pushf
out
mov
adc
dec
rcrl
fists
push
out
test
dec
inc
jae
shrb
push
pop
jo
aad
ljmp
jmp
mov
in
mov
daa
outsb
stos
jns
mov
mov
adcb
fcmove
push
mov
or
hlt
imul
aaa
pop
cmc
mov
push
out
dec
pushf
xor
clc
cmp
test
xor
cltd
inc
dec
cmc
jg
mov
and
bound
xor
push
rcr
and
cmp
or
cwtl
push
pusha
leave
jmp
mov
fs
and
or
mov
popa
pushf
pop
test
ljmp
lcall
out
into
push
aam
xchg
sub
in
sti
xchg
pusha
cmp
ja
adc
mov
jae
jbe
cmpsl
lods
adc
std
into
repz
mov
jp
cwtl
and
pop
out
lahf
ljmp
mov
ja
xchg
in
and
mov
imul
mov
sub
pop
cmp
mov
sub
in
lret
into
mov
out
test
push
lahf
push
sbb
cmpsb
sub
cld
jno
out
xor
stos
sbb
add
mov
xor
mov
inc
jp
ljmp
vmwrite
fwait
notrack
cmp
sbb
and
jb
mov
mov
xor
xchg
sub
lock
sub
cmp
popf
push
je
pop
push
xchg
pop
add
mov
bound
adc
mov
fsts
cmp
int
mov
movsb
mov
pop
mov
adc
sbb
arpl
mov
movsb
xchg
subb
pushf
out
xchg
lret
cld
stos
repnz
sub
loop
pop
xchg
add
iret
cld
sbb
loope
cmp
mov
xor
xchg
lcall
xchg
add
adc
jl
movsl
fld
and
fs
mov
jmp
jno
xchg
dec
sbb
mov
cmp
xchg
addb
popa
xor
out
and
imul
add
lock
push
aad
ljmp
cmp
sbb
into
add
ret
mov
jne
aas
es
jg
inc
lods
lock
icebp
mov
pop
hlt
pop
je
testl
in
mov
mov
cmpb
das
pusha
jb
cmp
xchg
jne
aam
pop
dec
xor
dec
jg
scas
cmp
fucomi
and
out
cmp
cmp
mov
idivl
mov
cli
cmpsb
push
out
negb
call
les
les
lea
xchg
pop
add
jne
int
stos
mov
cmp
test
mov
or
cltd
insl
mov
imul
lods
mov
mov
cltd
mov
jne
jecxz
jo
and
ja
sahf
xchg
daa
pop
mov
cmc
mov
adc
xchg
mov
nop
pop
sub
nop
add
push
or
push
add
pop
xchg
inc
aam
push
pop
mov
fildll
aas
add
jmp
adc
lods
jp
fisubl
sbb
outsb
push
push
sarb
pop
cmpsb
rorb
cmpb
adc
lods
add
add
hlt
mov
push
fs
jns
repz
stos
addr16
addr16
scas
mov
lret
mulb
pusha
push
inc
mov
xor
or
jecxz
add
xchg
stos
arpl
sbb
shl
jne
cltd
pop
imul
xor
jge
shr
insl
std
inc
mov
in
bound
adc
mov
mov
rcrl
dec
pop
xorb
mov
or
push
push
jg
and
push
into
add
sub
mov
cltd
filds
sub
pop
pushf
cmp
loop
mov
hlt
test
push
shr
xchg
or
int3
mov
mov
or
pop
mov
inc
inc
push
lcall
dec
fsubl
push
xor
pop
sbb
sti
fcmovu
mov
sti
xchg
push
dec
fiaddl
or
shlb
in
insb
pop
movsl
ror
mov
bound
add
and
inc
and
movsb
testb
testb
inc
sbb
and
fimuls
out
push
inc
leave
outsl
cwtl
lret
dec
xchg
inc
dec
cld
fldenv
fimuls
insb
inc
xchg
sti
jg
test
mov
mov
or
pop
add
stos
fwait
je
test
sbb
out
je
mov
maskmovq
notl
loop
loop
add
subb
stos
mov
repnz
xchg
or
jmp
clc
mov
lea
iret
push
stos
sub
popa
cli
xchg
lock
xor
loopne
add
cmp
sub
pop
dec
cmp
pop
movsb
push
jg
test
popa
data16
clc
lock
or
add
mov
cmp
test
add
sbb
add
sbb
movzbl
std
fildl
or
bound
mov
mov
jg
sbb
jmp
mov
pop
in
jge
notl
mov
flds
jge
xor
lret
mov
inc
fistl
jecxz
inc
daa
fchs
adc
scas
lret
cmp
add
into
mov
bound
lcall
cmpsb
inc
adc
push
jns
movsl
stos
aas
cmc
ret
push
je
push
pushl
enter
fimull
stos
sbb
inc
mov
dec
fdivs
pop
xchg
js
pop
in
rclb
aam
clc
jmp
int
mov
sub
add
mov
adc
cmpsl
or
xchg
aas
pop
sbb
add
in
lods
iret
loope
add
sarl
mov
sbb
out
enter
ret
inc
aas
cmp
out
dec
movsb
imul
pop
push
fs
ja
or
dec
push
movsl
cltd
jae
add
mov
push
in
mov
loop
orb
rorb
xor
repz
rcr
add
mov
lcall
call
inc
scas
add
add
cmpsb
xchg
fists
sbb
dec
lds
xchg
jge
mov
subb
outsl
pop
cmp
nop
adc
aad
sub
call
cmpsl
or
stos
cwtl
ss
repz
pop
daa
fs
sub
inc
xor
jecxz
inc
fstpt
xor
fsubrl
or
adc
std
mov
push
leave
pop
nop
cltd
dec
cmp
push
jbe
xor
sbbl
dec
sub
neg
inc
mov
imul
aam
enter
mov
inc
lret
pop
jo
in
mov
xor
xor
push
in
icebp
filds
aaa
push
mov
je
aaa
fisubrl
mov
lods
in
das
mov
cmp
fsubs
pop
add
fistpll
pop
aas
mov
lods
jmp
xor
mov
sti
mov
xchg
std
lahf
jnp
pop
leave
push
add
mov
jle
jp
push
dec
call
icebp
je
or
aam
test
push
mov
ret
fiadds
ljmp
xor
and
mov
pop
mov
mov
pusha
xor
in
movl
fnstcw
loop
inc
dec
sbb
mov
bound
xchg
and
push
sti
aad
pop
call
sti
and
push
adc
dec
sbb
sub
pop
adc
aas
pop
xchg
mov
icebp
ljmp
sbb
mov
and
imul
pop
dec
enter
mul
push
scas
push
jo
in
mov
aas
flds
push
ss
mov
push
repnz
xchg
mov
xchg
inc
gs
cmp
push
jbe
pop
scas
jo
imul
lods
or
pop
xor
lcall
or
push
jecxz
xchg
lret
je
adc
mov
bound
and
push
xchg
fistl
add
out
lea
or
inc
sbb
int
subl
cmp
fsubr
mov
jnp
sub
inc
ret
imul
or
mov
fadds
mov
testb
inc
test
loope
ret
xor
sbb
and
popf
addr16
dec
pop
cmp
xchg
sub
jge
movsl
jmp
int3
repnz
mov
imul
jg
ljmp
xchg
in
dec
daa
jae
pop
push
mov
in
inc
fs
lods
adc
and
mov
mov
cmp
pop
out
ljmp
add
mov
lcall
mov
pop
push
mov
jp
pop
ljmp
scas
test
outsb
movsb
pop
cmp
mov
xchg
repz
in
fidivrl
push
sbb
dec
sub
cld
js
jo
test
push
push
pusha
cmp
push
jo
inc
mov
jg
divl
sbb
scas
pop
sbb
lcall
nop
jl
sbb
icebp
mov
pop
pop
cmpsb
cmpsl
inc
push
sahf
and
or
jae
cmp
mov
and
aaa
dec
stos
loope
imul
or
sbb
cwtl
xorl
jns
push
sbb
mov
pop
pop
adc
pop
xor
mov
jbe
inc
test
iret
or
push
and
rol
repnz
insl
outsl
push
fstl
sar
jae
cmp
sub
fldenv
aam
sbbb
pop
arpl
dec
xchg
dec
jmp
fmul
dec
enter
push
mov
sbb
jmp
adc
pop
loopne
dec
mov
pushf
xor
jne
aam
push
inc
in
loop
rcll
push
xor
dec
xor
cli
cmp
mov
flds
ficoms
inc
cmpsb
mov
cltd
xchg
add
sub
in
mov
pop
hlt
insl
xor
into
jp
mov
ret
cmpsb
pop
fwait
mov
aas
imul
imul
aaa
jns
xor
mov
int
sbb
pop
dec
mov
mov
xor
or
ja
clc
xor
dec
xor
test
inc
mov
cmpb
pop
jmp
fiaddl
mov
xchg
fildl
add
sbb
gs
cwtl
mov
stos
adc
das
les
sub
iret
inc
pusha
js
out
aam
fnstcw
or
ret
das
cs
lret
in
jp
out
adc
orb
push
push
cmp
push
sbb
push
sbb
xchg
pop
gs
out
data16
sbb
mov
sbb
and
cltd
or
shll
fbstp
or
std
dec
xchg
inc
pushf
lods
push
mov
push
cmp
mov
shll
fbld
dec
sub
mov
or
int3
add
mov
pop
add
popf
fwait
add
cmp
cmp
jbe
pop
daa
or
aam
or
dec
dec
pop
and
loopne
rorb
ss
scas
xor
mov
mov
xor
pop
mov
rol
outsl
jg
xchg
or
shll
sbb
sti
call
jge
mov
data16
xchg
roll
cmp
jecxz
call
cmpsb
in
or
pop
lahf
or
mov
call
lock
jmp
cltd
mov
jno
sbb
jge
scas
loopne
stos
jne
mov
mov
ljmp
inc
sub
stos
or
hlt
sbb
ds
loop
jne
clc
jecxz
push
dec
push
mov
out
push
arpl
and
mov
push
ljmp
dec
sahf
pop
jbe
pusha
jp
mov
aad
sub
and
sbb
pop
push
or
jno
fucomp
cmpsl
push
aas
pop
sub
mov
mov
mov
pushw
mov
inc
cmpsl
mov
adc
mov
scas
mov
sbb
aad
mov
add
lods
add
mov
xchg
adc
lods
pushf
pusha
clc
outsl
sti
loopne
jo
rcl
mov
sahf
xor
jo
sub
inc
cmc
mov
ja
cmp
fs
sbb
or
jnp
pop
push
scas
test
gs
or
sets
mov
mov
add
jne
insl
inc
daa
mov
push
mov
push
mov
stos
dec
inc
sub
ffree
xchg
pusha
test
js
xchg
aad
lds
scas
add
mov
push
sub
ljmp
fidivrl
insb
cmpl
xchg
mov
loop
out
xchg
dec
dec
lahf
mov
rolb
xchg
gs
pop
sbb
loop
lret
pop
arpl
iret
mov
adc
and
push
pop
loop
cmp
cmp
pop
shrl
jp
sbb
mov
dec
nop
outsl
and
repz
xlat
mov
jge
inc
jae
dec
mov
jnp
pushf
lods
cld
xchg
daa
negl
inc
adc
cwtl
les
and
pop
push
cmpsb
imul
jge
aam
xor
inc
aaa
das
xchg
mov
and
xor
xor
and
lds
cmp
mov
out
cmp
out
inc
push
mov
dec
and
mov
test
shr
push
fcmovb
dec
repz
jae
clc
imul
jo
add
fdiv
sbb
sbb
aas
xlat
or
arpl
popl
lret
push
or
ret
mulb
scas
out
ja
gs
enter
push
xchg
mov
cltd
add
xchg
imul
mov
leave
in
adc
sub
adc
fstpl
xlat
inc
std
test
lods
xchg
in
jns
push
lret
add
xchg
jne
push
orb
data16
pop
ret
je
scas
ret
pop
ljmp
jnp
cmp
sbb
mov
hlt
cmpsl
push
mov
in
pop
cld
xchg
xor
cli
rorb
and
jge
xacquire
push
mov
call
iret
dec
fisubs
mov
jno
mov
ret
test
jmp
add
std
popf
psadbw
pop
jg
sarl
shl
fldenv
ficomps
mov
mov
xor
xor
or
fistpl
in
jp
cmpsb
pop
jmp
andl
xor
mov
aam
call
pusha
js
inc
nop
test
hlt
lret
adc
pop
outsl
mov
xchg
dec
ja
dec
pop
adc
imul
rcrb
lea
les
stc
jo
pop
aad
insl
movsl
xchg
and
loop
add
sbb
fdiv
daa
icebp
pop
aas
add
ljmp
mov
add
xchg
or
mov
push
adc
pop
mov
fisttpl
ret
pop
call
mov
scas
inc
adc
inc
icebp
mov
bound
xchg
cwtl
cmpb
ret
sub
sub
xchg
xchg
pop
clc
jmp
pop
ss
dec
sbb
fistpl
subb
and
mov
push
pop
ds
inc
orl
mov
lcall
ret
or
push
test
aad
jg
mov
mov
loopne
inc
or
push
insb
dec
clc
and
cmpsb
adc
stos
mov
push
cmp
pop
cmp
fimuls
push
pop
shl
insl
cli
gs
xor
sub
mov
jnp
into
jmp
and
lds
cmc
loopne
fwait
in
inc
dec
mov
cmpsb
insb
mov
mov
imul
push
mov
cmp
xchg
test
sahf
add
fwait
jb
repz
mov
inc
and
mov
adc
stos
and
jp
push
cmpl
ljmp
add
sub
int
test
and
stos
fists
inc
push
inc
pop
sub
xor
scas
xor
arpl
mov
push
or
cli
bound
insb
mov
rorb
sub
mov
jnp
stos
lahf
lahf
int
sub
iret
bound
dec
jl
std
sub
xor
sbb
add
into
mov
xchg
mov
add
pop
cs
notl
pop
sar
scas
stc
push
and
std
ljmp
mov
js
call
dec
leave
cmp
inc
adcb
in
cmc
mov
xor
in
mov
xchg
rolb
hlt
fdivs
jae
cmp
stos
sub
pushf
rolb
xchg
add
add
pop
push
ret
sub
mov
inc
jle
stos
out
shrb
or
popa
mov
xor
pop
fmull
test
adc
adc
jbe
insb
mov
lret
dec
push
cmpsb
xchg
cmp
dec
stos
mov
stc
aaa
js
test
cmp
popf
aad
lret
lret
sub
repnz
out
scas
cmpsb
push
testb
xchg
mov
shl
jl
daa
mov
mov
and
cmp
jae
or
mov
nop
dec
les
fucomp
data16
popf
cmp
fmul
sahf
ss
jecxz
dec
out
fiaddl
pop
popf
fldl
out
mov
pop
ficoml
ret
sbb
mov
jno
and
lret
mov
repz
test
ss
lods
out
call
rclb
dec
fwait
xchg
push
dec
inc
lock
cltd
mov
xlat
jp
test
ss
sbbb
sbb
das
or
mov
jl
xor
mov
das
push
lahf
dec
lock
add
cmc
or
shrb
or
push
cmp
data16
push
adc
sti
int3
das
mov
sbb
icebp
nop
popl
mov
lret
jno
test
or
enter
jne
loope
outsb
push
push
add
scas
and
sbb
add
je
cmp
push
jecxz
mov
in
fcomp
cmp
lods
pop
into
lods
adcl
rcr
cld
stc
lea
xor
or
jmp
mov
mov
xlat
mov
adc
sbb
je
bound
movsb
leave
sub
xor
or
repnz
mov
ret
add
pop
popl
ss
jo
bound
rcl
out
int
xor
add
mov
pop
sub
push
cs
enter
xor
push
ds
fldenv
in
enter
mov
push
loope
nop
mov
fs
lcall
cwtl
into
insb
xorb
mov
dec
sub
out
lret
dec
jmp
cmc
inc
mov
push
mov
lods
ror
lods
inc
mov
pop
je
sbb
or
push
aaa
movsl
fmuls
jmp
jno
push
mov
lret
stos
xchg
jmp
push
fnstcw
push
pop
andb
nop
sbb
xor
lret
sub
jne
gs
xor
loopne
test
lock
fidivrs
shll
adc
add
jmp
pop
pushf
dec
stos
inc
push
ret
int
or
pop
sub
pop
aaa
leave
mov
mov
imul
lcall
push
sti
or
cmp
mov
into
add
pop
sbb
divb
popf
sahf
call
lahf
jl
jle
pop
outsl
sbb
jns
dec
add
ficoml
ret
mov
inc
xchg
repnz
jl
in
outsl
shr
or
ret
inc
aad
xorb
lcall
sbb
dec
ss
xlat
jecxz
sbb
xchg
sbb
push
mov
xor
cmpsl
push
sahf
stos
or
mov
sub
imul
hlt
mov
orl
cmpl
cmp
or
pop
xchg
push
sub
sbb
loopne
push
and
mov
jge,pn
xchg
or
or
adc
or
or
addr16
imul
jo
scas
ret
int3
int3
dec
lea
push
push
sahf
xor
sub
sub
push
push
test
int
pop
fdiv
fidivl
in
jno
pop
mov
push
loop
mov
negb
jecxz
out
out
jmp
jb
xor
mov
mov
lds
cld
loope
or
sarb
mov
lahf
jno
ret
arpl
jle
test
dec
dec
xchg
dec
fimull
int
mov
xchg
rol
pop
xor
xlat
lcall
pusha
in
addr16
pop
or
inc
inc
and
mov
in
loop
xchg
dec
lods
popf
xchg
int
add
cmpb
push
dec
imul
out
push
shl
insb
stc
lret
shrl
push
dec
loop
leave
inc
adcb
or
dec
add
lret
movsl
mov
outsb
or
lds
xor
insl
add
dec
sub
xchg
test
adc
or
incl
mov
push
dec
test
pop
cmp
sub
notb
mov
test
lcall
pop
jmp
sub
imul
and
mov
dec
dec
std
movsl
insb
ja
sub
and
mov
mov
jno
jns
xor
dec
lea
clc
sub
inc
push
push
push
out
and
test
adc
out
outsl
enter
xor
jg
subl
pop
sub
push
imul
sbb
mov
sub
je
aam
sub
lods
or
jle
mov
cmp
sbb
mov
ret
jne
dec
rcr
je
pop
lcall
inc
ss
ja
push
mov
push
cmp
cmp
dec
sbb
arpl
push
add
nop
stos
pop
xor
cmc
mov
dec
popa
shrb
out
push
ss
int3
cmp
cmc
in
lock
shlb
cmp
es
std
sub
test
fistps
aad
dec
jmp
dec
imulb
push
gs
stc
xor
scas
lock
mov
out
data16
or
iret
je
mov
mov
arpl
fmul
imul
sbb
loope,pt
imul
js
inc
rclb
loopne
mov
jmp
leave
jp
inc
outsb
pop
cli
arpl
pop
cld
xor
fnop
addr16
stc
mov
int
ljmp
xlat
adc
cltd
push
or
or
out
shl
les
jg
sub
adc
add
inc
jecxz
adc
mov
push
mov
mov
mov
xchg
insb
in
imul
fidivrs
gs
and
cmc
ja
sub
leave
add
mov
sub
ljmp
out
xchg
inc
jo
loope
sub
jp
xchg
movsb
inc
lock
push
add
mov
scas
or
aad
xchg
repnz
sub
arpl
out
insb
and
lcall
jae
testl
adc
dec
or
icebp
mov
jecxz
fmull
adc
imul
lea
and
into
jle
iret
test
cltd
pop
cmp
stc
lea
enter
incb
sbbb
jnp
push
cmp
dec
mov
or
sbb
cwtl
mov
lret
xchg
cmp
or
test
mov
xorl
sbb
mov
fs
out
arpl
ret
rcr
xor
xchg
aad
leave
jp
mov
inc
mov
lahf
cmp
cmpsl
ds
adc
in
aas
pop
fmul
mov
xor
or
lcall
inc
push
add
add
fstpt
test
insl
int3
shll
xchg
inc
fiadds
jg
and
cmp
xchg
lock
mov
cli
add
xchg
mov
out
adc
mov
mov
cld
add
inc
xor
push
mov
adc
loop
les
insb
add
jae
add
sbb
add
aaa
rcl
inc
fidivs
das
mov
clc
sub
leave
leave
xchg
repnz
sub
into
cmpb
enter
lds
les
mov
lods
jmp
push
push
cmp
cwtl
push
loopne
dec
add
pop
out
push
push
mov
push
dec
sbbb
mov
fimuls
push
popa
sub
sbb
lret
test
pop
dec
or
fidivs
popa
dec
xor
subb
push
into
mov
ja
pop
lock
adc
push
sbb
xor
sub
scas
ret
jns
int
push
xor
push
xchg
int3
xor
jg
jno
xor
js
fsubs
paddsb
fidivrs
es
insb
xlat
aaa
outsl
mov
pop
push
aad
xorb
sbb
jp
cmpsl
jo
adc
mov
lods
je
jns
push
push
lock
sti
addl
cmp
data16
test
xor
or
mov
sub
dec
icebp
push
xlat
jp
jnp
dec
sbb
dec
ljmp
sbb
arpl
ljmp
fwait
lock
in
les
jg
les
loop
inc
mov
daa
pop
out
push
leave
push
mov
decl
sub
pop
sar
jb
push
add
das
push
jge
push
adcb
xchg
xchg
dec
dec
jne
lret
pop
jmp
pop
inc
mov
mov
leave
cmp
jge
sbb
rclb
rcrl
and
mov
ljmp
dec
out
mov
xchg
cmp
rorl
jne
pop
cmp
push
pop
scas
push
fnstsw
and
aam
sbbl
outsb
cmpsl
mov
imul
mov
out
shll
ss
pop
ret
jno
mov
xchg
cli
xor
leave
pop
insl
pop
push
mov
pop
mov
daa
push
shrl
fwait
lods
or
pop
ficomps
aam
ficomps
cmp
out
pop
mov
mov
pop
mov
outsb
inc
cs
es
sub
sub
sbb
movsl
mov
iret
jb
cmp
ljmp
mov
push
sub
dec
xchg
add
or
dec
dec
jp
fucomip
adc
inc
out
orl
dec
subb
sahf
ret
adc
std
cwtl
gs
test
je
lock
xchg
iret
ret
xchg
push
cmp
fdivrs
and
fimull
aad
imul
mov
dec
cmp
dec
in
popf
addr16
addr16
sub
xor
callw
push
ljmp
mov
and
hlt
mov
clc
adc
jns
mov
scas
push
lock
arpl
mov
insb
mov
out
cmp
pop
sub
in
jnp
push
mov
outsl
sbb
jno
repnz
xchg
imul
sahf
test
mul
push
jl
jl
loop
and
push
in
int3
sub
jbe
test
bound
lret
fwait
push
cmp
popa
pop
cmpsb
xchg
push
jo
das
mov
fsubrs
mov
cmp
frstor
ljmp
adc
out
cmc
jns
inc
mov
pushf
adc
dec
ret
in
push
and
lret
outsl
jmp
mov
lret
ljmp
movsb
adc
lea
mov
mov
std
mov
cmpsb
cli
clc
sbb
test
cmpsb
pop
and
inc
cmc
xchg
adc
aad
stos
push
push
repnz
adc
xchg
scas
dec
movsb
pop
add
xor
jae
dec
cmpsb
mov
out
addr16
fs
outsl
in
pop
mov
xor
mov
adc
pop
push
ja
test
dec
mov
jb
aas
mov
cli
mov
or
inc
adc
push
iret
and
and
and
aad
cmc
and
jmp
add
sbb
std
int3
dec
sbb
jle
loopne
pop
jp
add
test
call
push
or
push
push
fisttpl
ja
xor
dec
pusha
mov
popa
addr16
in
lea
mov
bound
mov
xor
ljmp
outsb
mov
cs
and
loope
cmp
xchg
pop
test
lcall
es
and
popf
das
cmp
into
push
sub
mov
or
cmpsl
fs
inc
cmp
push
and
sbb
lods
push
mov
mov
sub
mov
in
daa
adc
in
test
adc
and
int3
xorb
inc
or
fucomp
adc
pop
dec
nop
jge
mov
fmull
sarl
ljmp
outsl
lcall
pop
push
add
add
scas
xor
cwtl
test
xchg
cs
shll
cmpl
dec
push
iret
lret
jg
xchg
mov
mov
hlt
jg
jbe
cmp
mov
xor
scas
movsb
test
pop
mov
jl
hlt
cmp
lret
and
lods
lods
pop
add
mov
mov
dec
das
sub
jb
mov
mov
je
and
lds
stos
mov
mov
xchg
jg
sbb
xor
mov
xchg
mov
in
cld
mov
push
into
mov
out
dec
outsl
pop
daa
mov
push
and
xor
xchg
pop
sbb
bound
fisttpl
adc
vandps
push
divl
sub
imul
popf
push
push
mov
lret
clc
jo
xchg
add
je
pop
out
stos
push
pop
fs
push
call
push
pushf
xchg
cmp
imull
cmp
jge
adc
test
push
dec
push
cmpsl
cltd
in
adc
jecxz,pt
jns
ror
push
mov
sti
mov
fsubrl
mov
mov
call
sub
bound
aam
push
lods
inc
out
sahf
pop
push
lea
push
adc
fldcw
popf
ret
sbb
or
jae
xchg
xchg
sbb
push
sar
pop
jae
adc
in
mov
jmp
xchg
ret
jecxz,pn
push
dec
pop
inc
icebp
pop
jnp
lods
inc
sub
lcall
fucom
iret
ds
inc
int3
daa
pop
add
clc
cmp
xor
in
xchg
lock
cmp
or
fstpl
mov
mov
add
leave
aas
fwait
movsl
lock
mov
mov
iret
or
shr
aad
or
jg
fwait
in
out
inc
stc
jecxz
enter
or
fidivl
cltd
iret
es
shlb
adc
and
mov
cmp
pop
add
shrl
dec
xchg
jge
pusha
and
adc
pushf
icebp
mov
aam
test
out
jecxz
mull
jnp
mov
subl
outsl
mov
insb
cmp
fstpt
jg
cmp
clc
push
imull
pop
sub
rorl
mov
jno
pop
ret
out
push
xor
bound
sbb
or
test
xor
adc
jmp
sub
mov
mov
andb
mov
xchg
addl
test
jge
repnz
sbb
xchg
or
decl
and
xlat
sub
pusha
add
daa
hlt
push
repnz
adc
mov
inc
push
enter
dec
fnstsw
xor
push
sbb
inc
pushf
cmovge
jmp
sbb
push
add
cmpsb
rcrb
mov
sub
or
sbb
mov
push
sub
ret
roll
sbb
leave
cmpsb
xchg
add
mov
push
xchg
or
jg
dec
inc
movsb
xor
mov
sub
xor
sbb
jae
xor
add
fstps
and
call
enter
outsl
out
push
cmp
mov
cmp
decl
xchg
pushf
in
mov
dec
inc
jl
mov
mov
mov
lcall
call
sbb
jle
and
sbb
push
xchg
arpl
sbb
mov
loopne
pop
lcall
mov
subl
sbb
inc
sub
sub
jns
fiadds
dec
js
sti
sub
mov
or
and
add
aam
fs
out
mov
lret
leave
mov
push
mov
ljmp
xchg
mov
pop
sub
jno
imul
pop
ret
sbb
push
inc
adc
out
push
dec
cmp
pop
arpl
daa
into
aad
xlat
in
xchg
sbb
cli
pushf
lds
pop
jmp
push
xor
out
mov
insb
jmp
pop
sbbl
test
repnz
dec
mov
xchg
add
and
incb
stos
add
and
inc
mov
adcb
mov
mov
jge
movzbl
daa
sbb
push
outsb
aas
fcmovu
imulb
sbb
xlat
xchg
mull
push
xchg
xchg
repz
shlb
jmp
fwait
rolb
in
adc
roll
jmp
cld
ja
lret
fistpll
mov
xchg
or
jmp
adc
jge
xchg
inc
mov
lea
jns
fidivrl
jle
aam
shrb
ret
inc
sub
inc
or
mov
loopne
push
test
jae
add
fnstsw
orb
fcmovnbe
xchg
add
jmpw
adc
lcall
add
cs
js,pn
out
adc
lock
sbb
xor
cmpsb
mov
sbbl
mov
jno
test
nop
in
lds
cmp
jne
popa
sub
dec
cs
or
imul
in
shr
daa
leave
xorb
pushfw
and
outsl
lods
mov
popf
movsb
lcall
pop
fisttpll
test
add
scas
mov
cs
shlb
mov
shlb
push
push
inc
sub
js
into
pusha
push
push
cmpsl
and
cmpsl
adc
hlt
lods
adc
int
push
ret
testb
mov
pop
mov
loope
push
cmp
int
gs
xchg
stc
xchg
das
dec
or
insb
fnstenv
xor
fnstcw
mov
jg
popa
mov
jnp
xor
aas
ljmp
int3
xchg
sbb
hlt
fsubrs
fcmovu
mov
sti
jne
xchg
push
fsubrl
test
xchg
mov
pop
fs
test
sub
daa
mov
lahf
push
cmp
push
clc
outsb
push
xchg
pop
dec
fdivrs
mov
aaa
mov
cmp
xchg
xchg
nop
or
in
mov
jb
push
repnz
jo
and
and
pop
mov
jb
pusha
out
or
nop
jg
push
push
sahf
insb
hlt
jnp
mov
outsb
test
adc
insl
push
mov
fsubr
jno
mov
into
rorl
mov
cmp
fists
sbb
xor
adc
dec
xlat
mov
call
push
dec
pop
or
add
sbb
les
and
fldenv
ss
or
sub
or
sbbl
push
loop
push
shrb
push
add
and
or
or
push
and
dec
mov
pop
or
and
push
xchg
mov
scas
add
xchg
out
fcoml
outsl
dec
movsl
sub
adc
dec
pop
jo
xor
jmp
jl
loop
mov
dec
push
push
movsl
outsl
adc
and
mov
sub
jmp
adc
add
faddl
pop
pop
test
imul
adc
inc
add
cltd
mov
jns
pop
andl
push
jns
mov
bound
xchg
adc
aam
pop
test
mov
xchg
pop
mov
mov
xchg
push
push
es
push
jg
adc
iret
mov
xchg
in
and
sbb
adc
mov
inc
fnstsw
fwait
out
adc
or
movsl
dec
clc
cmp
push
or
test
nop
add
and
sbb
jae
cwtl
or
scas
push
leave
punpcklbw
outsl
xchg
push
shll
pop
scas
mov
dec
or
das
daa
call
jge
mov
pop
test
cld
jecxz
imul
cld
and
addb
and
nop
in
testb
aaa
sar
dec
sahf
repz
out
movsl
and
stos
inc
in
cs
xlat
jno
and
xchg
insl
push
cmp
lret
neg
adc
push
sahf
mov
popa
imul
xchg
adcl
mov
out
cmpsb
pop
adc
fsubp
mov
lock
xorb
js
subps
imul
adc
popa
movsl
pop
sub
cmc
sarl
or
mov
sub
dec
inc
pop
fiaddl
cmp
mov
push
push
cmp
filds
das
mov
push
addr16
movsl
xchg
lea
pop
push
das
sub
sub
cltd
out
outsl
mov
cmpsb
dec
sbb
movsl
xchg
in
popf
out
loopne
pop
mov
bound
push
sub
dec
loop
mul
shlb
sar
in
stc
dec
push
xchg
in
cmp
or
cltd
or
scas
xor
inc
and
outsl
cmp
xchg
xor
jns
es
popf
rcrl
aad
in
repnz
cld
aaa
test
aaa
adc
mov
add
inc
cmp
shrb
hlt
or
and
test
add
sbb
aam
mov
movsl
faddl
into
andb
ja
dec
sub
mov
xor
mov
jae
lret
xchg
nop
push
jl
insl
sbb
push
push
ds
xor
ret
in
aam
fldenv
pusha
call
addr16
hlt
ret
rol
sbb
popa
in
mov
outsb
pop
or
jp
adcl
movsb
adc
push
adc
stc
and
mov
sub
ja
add
cwtl
outsb
cmpsl
shrb
arpl
dec
mov
pop
mov
push
cmp
push
iret
iret
xor
dec
into
pop
mov
mov
in
cld
mov
jnp
lret
loop
in
xchg
addr16
sti
movsb
aam
xchg
mov
xchg
insb
sub
and
mov
inc
push
call
xchg
andl
pop
fwait
scas
pop
jl
push
adc
into
jle,pt
lods
push
pop
cmpsb
xchg
push
mov
rsqrtps
pop
sub
lahf
push
dec
or
cli
leave
inc
dec
add
pop
shll
jp
push
and
iret
mov
pop
test
add
cwtl
or
lods
mov
sub
out
add
das
lock
movsb
push
sti
icebp
lret
fisubrs
sbb
dec
add
push
iret
aam
call
psubsw
lret
popa
cmpsl
jb
jb
sahf
pop
cmpb
fstpt
popa
push
aas
into
outsl
rol
sub
fnstsw
cmp
xor
cmp
sbb
sub
adc
iret
jmp
mov
fimull
sub
pusha
jae
cltd
xlat
ret
jbe
push
lock
push
push
add
adc
mov
xchg
push
add
lock
mov
sbb
and
jne
je
loopne
out
loopne
lds
int
push
xor
pop
das
js
sbb
lcall
popl
pop
test
movl
loopne
into
testl
adc
push
mov
xchg
int3
dec
in
mov
mov
jae
push
pop
sub
scas
rcrl
xlat
outsb
movsb
mov
mov
cltd
loope
testl
adc
pop
pop
pop
xchg
hlt
mov
pop
bswap
jne
xorb
xor
std
fnstsw
cmpsl
popa
dec
cmc
fisubl
fdivs
out
add
push
stos
add
scas
sbb
ljmp
mov
and
pop
xchg
mov
xor
aas
pop
cltd
jmp
jecxz
popf
and
lods
jmp
or
cwtl
mov
sub
or
push
mov
cmp
out
inc
jb
xlat
sub
pusha
xor
aas
sahf
repnz
orb
scas
aam
jmp
sti
mov
adc
test
lds
popa
dec
cltd
xor
cmpsl
pusha
xor
or
push
ja
jnp
mov
push
das
leave
cmpsl
cmc
adc
and
mul
ss
test
lcall
stos
inc
ret
lret
push
mov
push
add
sti
inc
mov
and
daa
cld
dec
xchg
addr16
addb
rolb
les
cmp
int
jae
cmp
fidivrl
insb
dec
es
cmp
sub
mov
and
call
pop
loopne
push
pop
dec
add
mov
xchg
fs
ffree
jno
pop
shrb
add
cwtl
and
dec
dec
and
mov
xchg
or
psraw
xchg
jno
mov
out
insb
aas
das
add
adc
out
icebp
jnp
sub
sbb
nop
stc
es
ljmp
int3
jge
pop
mov
and
push
mov
loop
cli
xlat
test
inc
mov
fadds
jmp
stos
push
and
sub
cltd
mov
or
sub
js
clc
mov
test
dec
mov
in
lcall
pop
sbb
or
int3
push
mov
in
or
adc
aaa
jmp
push
jo
fisubs
pusha
push
les
jge
ja
pop
and
jb
adcl
push
test
cmpsb
scas
xchg
divl
inc
dec
and
daa
clc
xchg
movsb
sahf
lds
lods
fdivrl
loope
pop
jae
ds
loopne
aam
xor
adc
in
test
or
push
xor
pop
xlat
mov
and
leave
jne
arpl
dec
pop
adc
add
mov
repnz
cld
cmp
or
cmp
and
inc
movsb
ja
sbb
push
add
divb
xchg
shlb
loopne
cli
add
push
dec
xchg
mov
sub
cmp
fistpl
cmpl
xchg
repz
fldt
fisubs
mov
and
sbb
into
mov
les
stos
lret
fstps
mov
push
pusha
or
cltd
js
out
ds
mov
out
sti
popf
adc
sbb
loop
push
push
mov
bswap
aaa
or
pop
xor
mov
cwtl
mov
mov
cmpsb
adcl
pusha
and
dec
jb
loopne
xchg
pop
pop
ds
loope
aad
adc
daa
xchg
rcrl
insb
xor
xchg
and
outsl
mov
or
decb
inc
pop
ljmp
js
inc
mov
fstpt
mov
mov
cmp
push
pop
jno
jnp
inc
adc
aaa
jg
adc
pop
cwtl
jmp
sub
ror
or
lret
pop
inc
adc
add
insl
xor
in
sub
call
lahf
adc
lods
jecxz
mov
xor
cwtl
pop
mov
pop
sbb
das
aaa
nop
xchg
aad
enter
aaa
mov
mov
push
dec
sbb
jp
add
leave
jae
stos
mov
push
xlat
xlat
sub
sbb
xlat
dec
cmpsb
add
into
divb
add
in
xchg
sbb
or
push
test
dec
jbe
jns
out
xchg
fs
fnstsw
xchg
cmpsb
inc
mov
inc
mov
pop
std
cmp
inc
xchg
push
xchg
pushf
lret
insb
xchg
pop
aaa
or
inc
nop
pop
rclb
jo
outsl
rorl
aas
imul
testb
pop
adc
call
ljmp
and
mov
or
cmp
scas
lds
dec
xlat
stos
mov
fisttps
in
pop
notl
data16
pushf
mov
lock
lds
add
popa
jb
push
aas
xor
xor
aas
fwait
push
dec
dec
sbb
jbe
fdivrs
jno
mov
insb
sahf
mov
ljmp
fstps
xchg
xor
push
aas
in
jbe
dec
jno
cmovno
xchg
je
jp
pop
fsubl
sub
ret
in
fildl
jns
push
ficompl
andl
cmpsl
sti
xchg
mov
push
xchg
std
pop
add
adc
or
inc
pop
and
xchg
call
in
or
jnp
dec
and
fwait
cmpsb
loopne
mov
repnz
sub
lods
mov
loop
xchg
or
pop
jae
jmp
pop
pop
jae
jae
push
jl
push
sbb
ret
and
mov
sbb
movsb
out
mov
mov
cld
out
jb
leave
rolb
jg
add
adc
jno
lods
sbb
or
mov
jge
stos
mul
psrad
push
mov
push
xchg
scas
aam
push
pop
mov
lods
sub
stos
jnp
mov
jp
adc
js
sbb
xor
aad
xchg
andb
jne
lret
sahf
dec
push
cmp
xchg
fiaddl
sbb
fisubrs
fistps
pop
into
mov
fists
loop
pop
fsubr
mov
cld
pop
roll
lcall
sub
cmc
fstps
push
cmp
and
adc
out
mov
xor
mov
lcall
imul
outsb
out
shr
mov
mov
decl
popa
push
sbb
pop
lahf
push
shrb
jecxz
loopne
xor
das
stc
add
mov
adc
mov
pop
jmp
cmp
sub
icebp
mov
push
cmpsb
inc
sub
xor
push
cmpb
sti
lea
xchg
mov
or
call
ss
inc
dec
jmp
xchg
add
movsb
jns
fdivs
sbb
ffreep
sub
pop
dec
pop
scas
jmp
xchg
lahf
mov
pushf
push
xor
data16
push
in
sarl
push
mov
xor
cmc
and
adc
pop
sub
inc
lcall
insb
notl
mov
xchg
mov
mov
cmc
stc
pop
out
pop
push
shll
inc
mov
movl
cmpsb
xchg
xor
movsl
outsb
push
pop
cld
lcall
imul
ds
adc
and
test
push
js
arpl
mov
mov
nop
sbb
push
adc
sbb
xchg
adc
cmp
movsl
xor
sub
and
pusha
cli
orb
stos
mov
pop
fwait
arpl
push
lret
dec
jl
aaa
adc
mov
pop
aad
int3
mov
sbbl
xchg
aas
scas
mov
and
test
sub
lods
icebp
jecxz
ss
sbb
icebp
jecxz
push
and
cmp
fs
into
xchg
sub
mov
pop
mul
xor
fs
and
test
mov
push
jne
jg
ljmp
mov
test
das
push
aad
aaa
sbb
enter
push
push
dec
pop
pop
or
hlt
bound
pushf
mov
aam
dec
cmpsb
mov
xor
xchg
jl
outsb
xor
arpl
aas
mov
test
push
push
xor
movsb
scas
and
mov
dec
leave
mov
fstps
pop
adc
and
into
and
fldt
repnz
jne
and
mov
fists
mov
outsl
cmpb
rorb
mov
xchg
xchg
adc
xchg
addr16
and
xchg
in
test
adc
leave
mov
scas
mov
movsb
loope
ja
cmc
jg
and
out
inc
jmp
out
scas
sub
fisubl
cmpsl
aas
add
cmp
popa
lock
jo
lods
mov
and
cmp
ss
ljmp
lds
pop
mul
movsb
inc
lret
inc
mov
insb
inc
mov
fcmovnb
pop
and
inc
xchg
mov
sub
mov
fstpt
arpl
mov
xchg
lahf
push
lahf
js
std
dec
lock
xchg
ss
inc
repnz
in
xor
sub
mov
bound
jne
mov
in
sti
push
inc
bound
jno
push
inc
out
popf
push
pop
mov
jle
jl
mov
xchg
popa
out
and
jp
jns
ret
lahf
std
cwtl
je
loop
jnp
out
dec
into
mov
and
outsb
push
sbb
scas
push
sbb
jnp
and
ret
testb
lcall
fisubrs
and
outsl
and
add
in
mov
push
push
cmpsb
inc
test
pop
inc
cs
inc
repz
or
call
xchg
mov
cmc
rcrl
add
push
push
push
jbe
add
pushf
aaa
and
xor
mov
stc
xor
cmp
lret
lret
pop
add
cmp
rcrl
xchg
leave
js
xor
mull
dec
sub
icebp
idivb
daa
sub
adc
sub
in
inc
je
xor
insl
inc
adcl
sub
aaa
inc
mov
lcall
or
cmpsb
stos
xchg
jmp
das
mov
add
mov
push
adc
cli
xorl
movsl
adc
adc
aaa
jle
cmp
xlat
or
sahf
jb
loop
lds
or
add
jmp
mov
call
nop
inc
fidivrl
mov
add
push
clc
sub
jae
mov
imul
shrb
jb
jae
mov
sahf
aas
call
xor
shll
and
int
cmpsb
shr
pusha
pop
jg
add
jle
addr16
loope
xchg
mov
bound
cmp
int
scas
xchg
or
sbb
push
dec
dec
add
das
outsb
fstps
or
xchg
test
jmp
arpl
in
push
or
or
cwtl
loop
mov
loopne
mov
or
xchg
lea
lods
repnz
or
jb
ret
adc
pop
cmp
jecxz
data16
fmuls
movsl
movsb
rcr
aas
shll
adc
lock
cmp
pop
sahf
sub
push
inc
and
addr16
mov
test
cmpsl
push
mov
idivb
mov
shll
cltd
addr16
cmp
ret
push
imul
cmp
jne
cmp
xchg
dec
mov
les
daa
mov
push
jmp
adc
pop
call
cmp
in
lret
jmp
or
adc
mov
lock
dec
pop
cltd
mov
jnp
not
mov
xlat
ja
loope
pusha
mov
enter
mov
jo
pop
call
sbb
stc
sub
inc
jl
mov
popa
movsl
cmpsb
mov
lahf
xchg
out
pop
mov
ret
dec
sbb
loope
inc
pusha
cmp
jno
mov
cwtd
mov
mov
cmp
pop
and
ficoms
push
mov
lods
ret
and
stos
inc
pop
sbb
and
adc
orb
lret
mov
inc
std
lods
add
dec
sahf
fdivs
add
imulb
ss
cld
cmp
inc
stc
cmpb
or
in
sbbb
jnp
xlat
add
cwtl
out
sub
mov
lahf
insb
mov
inc
fisttpl
into
ds
jno
xchg
jbe
push
aas
add
dec
ss
dec
push
xor
or
test
cmpsb
jecxz
repnz
push
fwait
stos
outsl
cmpsb
lret
je
xchg
rcrb
xor
std
xor
ds
rcll
ret
daa
mulb
push
mov
mov
popa
mov
mov
mov
shl
loopne
xor
enter
and
or
fcmovu
fwait
push
cmc
fcmovnbe
mov
lret
mov
push
mov
sub
int
sar
shl
sub
jnp
std
inc
xchg
int3
cmp
jmp
fldcw
ret
enter
popa
jp
and
or
adc
push
imul
xchg
fdivrs
mov
stos
ret
call
popa
jp
aaa
cmp
xchg
or
mov
mov
sub
imul
stos
jl
push
cld
cli
into
mov
push
lock
mov
push
cli
xor
arpl
cmp
inc
and
cmp
mov
mov
ljmp
rorb
push
or
loope
decl
es
inc
xchg
clc
jns
jns
add
mov
ret
dec
lea
jp
in
xlat
adc
add
inc
test
cld
mov
std
sbb
in
fstpt
es
insb
push
repnz
loop
fisubrl
push
push
dec
xor
cld
cmp
call
xchg
jo
mov
dec
ljmp
or
lds
in
and
xchg
popa
inc
jmp
nop
and
adc
into
pause
ds
adc
add
xor
fwait
imull
mov
add
sub
inc
mov
mov
call
scas
jl
imul
add
test
cmp
mov
mov
or
stos
repz
in
sbb
mov
sub
adc
cmp
daa
inc
lahf
jno
xchg
lahf
mov
repz
lret
inc
inc
fimull
cmp
jo
push
ret
insl
jae
test
test
adc
rorb
imull
loope
add
nop
sbb
adc
mov
outsb
ret
ljmp
sarb
das
xchg
stos
shrl
xchg
outsl
xor
push
faddl
lock
mov
push
into
fldl
inc
mov
pusha
inc
adc
fidivrl
sub
push
dec
mov
mov
rcll
aaa
cmp
ss
ja
cwtl
mov
cwtl
mov
add
or
shll
add
add
mov
repnz
mov
xchg
jmp
jmp
lret
xchg
subl
ss
out
ret
add
xor
xor
fcompl
add
mov
jl
mov
push
nop
lahf
mov
xchg
dec
pop
jne
ja
jnp
push
fwait
addb
and
pop
adc
stos
pop
fwait
cs
mov
sub
or
pop
adc
ret
mov
popa
addr16
mov
or
mov
lock
subb
cmp
mov
jl
lahf
rcrl
pushf
push
popf
shll
jnp
jmp
add
mov
and
clc
xor
dec
sarb
std
sub
inc
pop
inc
mov
movsl
test
adc
sbb
cmpsb
sub
clc
xor
dec
stos
fcoms
leave
sbb
dec
les
fwait
pop
sbb
pop
or
shrb
jmp
loop
dec
adc
dec
or
jle
mov
mov
xchg
sub
stos
jl
scas
ret
and
outsb
fnstenv
shll
xchg
jecxz
bound
cltd
nop
pop
jg
ret
push
shll
cmpsb
sbb
imul
inc
jb
icebp
push
jno
sbb
in
jbe
aas
mov
cmp
out
ret
dec
mov
outsl
addb
cmp
clc
add
jge
ja
call
addr16
mov
loope
xchg
fidivrs
ret
int3
pop
and
jg,pt
push
stos
xor
mov
test
repz
idivb
dec
xlat
jp
insb
inc
jl
xor
out
xchg
xlat
mov
cmp
jg
jp
inc
add
xor
xor
hlt
mov
pop
jecxz
mov
insl
mov
inc
lret
mov
mov
mov
hlt
push
cmp
lods
mov
cmp
sbb
and
dec
inc
push
add
gs
dec
mov
pop
insl
movsb
decb
movsl
push
bound
outsl
xor
lret
xor
pop
rcrl
sub
popf
sub
shr
and
ja
mov
mov
test
cli
aad
lods
mov
pop
pop
xor
clc
mov
mov
xchg
mov
add
mov
sub
or
mov
mov
ret
jle
pop
ret
arpl
lods
addb
jg
pop
and
fs
add
iret
bnd
andl
dec
adc
leave
arpl
pop
cmp
fidivl
push
cmpsl
jo
loop
push
jns
sub
cltd
xchg
les
movsl
aam
cmp
lods
in
mov
addr16
jns
jp
or
addr16
mov
push
mov
xchg
jge
push
sbb
and
mov
mov
int
mov
cs
jle
mov
shrb
in
dec
cmp
subl
add
mov
dec
sub
leave
jle
jl
sub
push
call
mov
aam
push
into
sbbb
out
push
xor
sub
mov
ja
pushf
xchg
pop
lret
pop
ret
cmpsb
int
cltd
test
lock
adc
stos
scas
jle
es
cmp
mov
dec
push
or
out
mov
mov
and
ret
outsb
pop
lock
enter
push
in
sbb
aad
mov
cli
xor
or
jmp
mov
pop
lods
dec
aad
xor
cmovle
add
jbe
inc
xchg
xchg
outsb
xor
jns
pop
fbstp
outsb
or
push
add
je
mov
or
mov
mov
test
inc
in
rcrb
mov
ljmp
int
add
aaa
cmp
or
xchg
les
imul
jb
push
negb
stc
fmuls
cmpl
jno
jno
gs
jmp
fmulp
fidivrl
sub
lock
add
cs
jne
cmc
icebp
aaa
xor
mov
cmp
or
sbb
fs
push
jl
mov
cmpsb
ror
xor
cmp
aaa
inc
sbb
in
adc
aaa
mov
push
rorl
into
jnp
imul
inc
adc
sub
iret
icebp
ljmp
hlt
and
das
fcmovb
xchg
mov
push
movsl
xchg
mov
push
dec
inc
call
and
int
inc
push
xchg
outsb
in
mov
jmp
adc
mov
xor
xchg
cmp
mov
add
pop
xlat
xor
or
test
and
xchg
imul
cltd
push
and
movsl
hlt
adc
cwtl
leave
mov
add
xorl
incl
shlb
jo
ret
enter
loop
xor
sub
dec
sub
add
mov
sub
and
in
jnp
add
xor
dec
jae
jnp
add
cmc
add
inc
pop
movsb
pop
mov
pop
push
test
rcll
mov
inc
ss
mov
outsl
push
jb
jno
mulb
scas
cmp
xchg
test
xor
cmpsl
out
cld
push
adc
aas
or
lahf
push
pushl
call
fnstenv
xchg
movsl
fimull
andb
fstpl
fdiv
xchg
das
or
mov
xor
sub
or
xchg
cli
fsubrs
pop
hlt
dec
cmp
and
mov
loop
in
rcrb
cmp
clc
cltd
push
pop
fsubs
inc
jo
js
mov
sub
xor
loop
fsubl
mov
xor
adc
push
and
ss
adc
inc
pop
push
pop
xchg
sbb
inc
or
stos
jno
popf
int
fs
push
call
jno
inc
into
daa
mov
and
sarb
adc
xchg
mov
mov
mov
add
sbb
dec
scas
mov
aam
rcrl
out
or
arpl
sbb
shl
or
loope
add
and
stos
jp
xchg
cmc
cmp
xchg
bound
fmuls
jecxz
shlb
adc
sbb
push
adc
cmove
gs
push
inc
addr16
lds
out
xor
or
and
rorb
cmp
sbb
mov
sub
or
dec
in
mov
push
enter
push
inc
sbb
jae
inc
sub
insl
pushf
inc
adc
sub
incl
jp
xchg
mov
popa
xchg
dec
add
movsl
imul
clc
in
dec
les
icebp
jmp
jb
rolb
xlat
adc
jge
inc
or
or
mov
xor
pop
cli
inc
pop
sub
push
fistps
mov
ret
cmp
js
test
sbb
inc
inc
add
cmp
mov
pusha
jo
or
mov
mov
pop
arpl
mov
enter
pop
sub
push
fildl
xchg
sub
mov
add
mov
mov
sub
addr16
push
sti
addb
test
adcb
and
adc
mov
jmp
sbb
pop
es
int
outsl
popf
insb
jmp
mov
xor
push
mov
aas
outsl
insb
mov
xchg
insl
cmp
hlt
push
mov
xor
mov
iret
cwtl
int
push
jmp
scas
mov
sub
popa
test
mov
stos
push
xchg
and
scas
stc
cmp
mov
xchg
dec
sbb
and
push
adc
rcrb
out
ja
pusha
mov
rorb
lds
add
jl
bound
mov
sahf
dec
dec
shll
je
rcr
jno
movsb
cltd
xchg
ljmp
mov
cmpsb
scas
std
popf
pop
cmp
divb
or
cs
ret
sbb
aaa
mov
dec
inc
arpl
inc
imul
push
sahf
scas
xchg
adc
pop
out
cmp
mov
das
fisubs
dec
int
loope
ficompl
cmp
push
and
mov
dec
and
mov
pushf
pop
call
cld
or
es
mov
jne
out
mov
shll
sub
imul
dec
dec
shrb
mov
cmp
insl
aad
aam
jp
mov
cmp
shlb
push
jnp
push
call
push
loope
add
push
jb
pop
mov
js
pop
loop
lret
inc
hlt
dec
je
andl
xor
sub
adc
mov
dec
push
xchg
loop
adc
lret
push
jo
push
inc
xor
push
pop
rclb
inc
sbb
lahf
imul
movsb
dec
fidivrs
push
dec
add
nop
leave
scas
dec
in
and
cltd
ss
cmp
fwait
aad
aam
pop
or
gs
cmp
add
cmpsb
xchg
mov
xchg
mov
sar
call
xchg
adc
pop
lret
sbb
cmp
cmp
xchg
sbb
adc
in
repz
inc
scas
pop
add
and
cmp
hlt
or
mov
adc
fsqrt
jno
ret
add
add
test
sbb
dec
add
ret
jo
mov
mov
pop
lds
or
mov
cltd
out
out
xorb
icebp
mov
js
mov
sbb
add
sub
imul
adc
xchg
test
ljmp
lret
adc
in
pop
mov
or
pop
mov
mov
adc
adc
cld
pop
xor
inc
add
mov
cmc
popa
adc
mov
jmp
shlb
das
adc
cmp
fs
into
dec
inc
cmp
or
mov
jecxz
call
mov
stos
outsl
nop
pop
fisubrs
iret
lcall
jg
push
jno
or
insb
nop
xor
pop
testb
fbld
movsl
inc
push
rol
ds
into
jecxz
mov
add
idiv
repz
movsb
xlat
arpl
pushf
mov
pop
rorl
or
imul
imul
inc
add
sbb
and
jmp
enter
jo
xor
sub
icebp
je
pop
push
sbb
outsl
cmp
js
dec
aaa
adc
mov
data16
fisttps
popa
push
cmpsl
nop
in
insb
jae
shrb
jbe
xor
sar
push
and
jge
sub
arpl
or
xchg
in
ror
inc
mov
mov
mov
insl
push
push
xchg
fldenv
adc
ljmp
cmp
jle
lods
loope
jbe
jp
jmp
dec
or
cmpsb
dec
pop
or
and
dec
push
mov
push
pop
push
xchg
or
push
into
jle
xchg
lret
lea
xor
mov
or
mov
scas
out
ljmp
add
sbb
inc
mov
fwait
mov
daa
jl
sahf
orl
cmp
inc
dec
cmp
dec
lahf
sub
push
idivb
sub
sarl
fldenv
or
xchg
or
test
inc
repz
or
xlat
xlat
xchg
pop
mov
push
out
mov
das
xor
fsubs
lods
dec
lods
cmpsl
push
push
lcall
nop
lods
jne
xchg
push
decb
sub
mov
outsl
pop
popf
sub
std
sti
jno
call
jnp
xor
pop
adc
test
cmp
mov
out
cmp
dec
cmc
repnz
imul
push
sbb
in
dec
inc
mov
mov
je
push
movsb
cli
mov
fstpt
in
push
dec
sub
xor
mov
jmp
mov
mov
outsb
lcall
add
addl
add
mov
push
or
pop
popa
enter
loopne
sbb
add
aad
mov
and
cli
pop
jge
fs
ja
jnp
orb
lods
cmp
sub
je
mov
adc
push
rcl
xchg
cwtl
mov
add
out
push
ret
leave
fcoms
rolb
out
fists
es
sub
adc
rolb
sub
int
hlt
mov
push
out
bnd
jp
lea
mov
pop
inc
and
je
jae
movsl
out
cltd
lea
cmpsl
addr16
inc
push
xor
inc
int3
add
add
pop
pop
in
into
pop
imul
lea
or
xlat
inc
xchg
cmpsl
in
scas
xchg
xchg
popa
in
mov
cli
jo
sub
jbe
lds
repz
movsl
sti
loop
mov
mov
loope
loopne
or
jmp
fwait
mov
mov
mov
sbb
clc
fstpl
add
fs
xorps
shl
pop
push
xchg
in
jmp
outsl
inc
xorb
jmp
pushf
js
dec
xor
shll
stc
push
mov
pop
xor
inc
out
movsb
nop
xor
jo
cld
xchg
jnp
fst
fmuls
test
test
decb
es
xchg
jbe
jecxz
add
leave
int3
mov
sbb
mov
outsb
cld
mov
pop
xchg
add
stos
inc
cli
cmp
daa
pop
mov
xlat
ss
das
and
ja
xchg
jno
sub
push
scas
sub
xorb
push
cmp
lea
cmpsl
dec
mov
das
ds
xchg
xchg
cmp
aad
jle
cmp
aam
ds
mov
and
mov
cmpsl
in
stc
nop
sbbl
push
fsubp
or
filds
mov
pop
mov
cmp
cmpsl
cmp
pop
lods
xlat
jnp
pop
jle
int
pusha
arpl
in
call
and
lods
insl
push
mov
sbb
cmp
or
imul
jmp
les
loopne
xor
push
jno
jge
sub
or
ja
or
lcall
jb
add
xchg
addr16
dec
movsb
ds
xchg
mov
divl
ja
stos
mov
jl
xchg
lahf
psubsb
sbb
es
cmp
std
inc
or
imull
sbb
cmp
and
add
pop
jb
in
int3
sbb
and
jnp
inc
cs
cmp
faddp
mov
jmp
cs
lret
dec
ja
leave
sub
mov
xor
adc
out
inc
jmp
push
pop
add
pop
cmp
into
xor
mov
leave
pusha
jg
mov
push
push
mov
add
cmp
test
aas
popf
scas
xor
add
or
lods
imul
mov
mov
std
sbb
push
inc
sub
jbe
test
fisttpll
jle
dec
add
loope
xlat
ret
cmp
out
fidivs
fimull
call
ljmp
sub
sarl
xchg
int
lea
sub
lock
int
shl
inc
mov
test
stc
xchg
jnp
inc
or
dec
cmp
add
sbb
fildl
mov
shl
dec
pop
jmp
aam
xchg
nop
frstor
xchg
pop
insl
idivl
std
rcrl
lea
out
cmp
nop
adc
jg
call
adc
pop
inc
cmp
jmp
jle
lahf
js
adc
ret
stos
cs
ljmp
out
xchg
mov
mov
popf
mov
cwtl
rcrb
ret
dec
push
ja
outsb
scas
mov
xchg
sbb
aam
xchg
sub
jne
shrb
lock
int
jb
dec
dec
push
icebp
ss
jmp
lret
xlat
mov
mov
and
mov
pop
push
and
lret
push
sbb
push
lods
mov
addr16
pop
scas
sahf
lea
xchg
xchg
jp
mov
out
fmulp
out
cmpsb
cbtw
shlb
dec
aaa
xchg
mov
loope
nop
and
push
xchg
insb
enter
cmp
stc
aam
xor
or
jmp
pop
cmpsb
lahf
pop
push
jb
cmc
xchg
sahf
mov
mov
sub
push
in
sub
add
call
ljmp
jecxz
stos
inc
into
ds
loope
lock
mov
jne
lods
mov
idiv
ljmp
andl
fs
orl
les
jecxz
dec
sbb
add
mov
mov
jge
and
xchg
ds
scas
in
xchg
es
imul
sbb
xchg
push
mov
lock
fimull
sbbl
fildll
enter
lea
ljmp
push
xchg
dec
push
jno
mov
cmpsb
dec
stos
pop
mov
je
loopne
sub
pop
sub
fnstenv
and
or
inc
jle
pop
mov
adc
cmp
mov
cmp
add
adc
call
shll
adc
movsb
cmp
mov
fisubs
jp
arpl
or
mov
xor
mov
mov
sub
stc
jns
sbb
pop
adc
cmpsb
pop
ja
jmp
xchg
out
lcall
roll
test
or
movsb
mov
test
mov
dec
and
pop
and
adc
lahf
mov
pop
sbb
mov
das
mov
fstl
movsb
into
test
in
xchg
rclb
jo
out
popa
mov
and
sarl
adc
ljmp
mov
inc
dec
jnp
fistps
mov
jb
leave
xor
mov
mov
or
xchg
outsl
add
and
lods
inc
fadd
inc
push
lods
jg
cs
sub
jmp
imul
mov
imul
add
xchg
iret
std
jno
inc
sub
insb
loop
mov
les
mov
xor
xchg
shrb
fisubs
xor
push
or
je
pop
rorb
mov
and
or
push
add
sbb
loopne
pop
jg
loope
les
jb
out
cmp
stc
iret
and
mov
mulb
rclb
or
ficoms
popa
adc
mov
sbb
sbb
dec
scas
mov
movaps
push
and
xchg
arpl
out
fwait
mov
sbb
sub
daa
jne
xchg
sti
in
dec
pop
movsl
push
push
sub
mov
xchg
vorps
rcrb
cmp
sbb
insl
mov
in
in
cmp
aas
xchg
xchg
jle
aad
jno
ljmp
fisttpl
cmp
pop
or
mov
ret
or
push
cmc
hlt
xchg
sti
lock
stc
cmp
sbb
mov
test
xor
mov
enter
cmp
inc
inc
rcll
loop
mov
mov
sahf
movsl
int3
dec
cmpsb
and
xlat
outsb
test
aad
scas
cld
mov
push
test
stos
cld
pop
xchg
inc
jo
pop
lahf
aas
inc
sub
xchg
cmpsb
push
in
roll
sbb
push
enter
negl
dec
loop
mov
movsb
mov
inc
inc
subl
inc
push
popa
jno
cmpsb
push
mov
xchg
jp
shr
les
pop
and
push
push
mov
push
lret
push
aaa
lock
pop
and
stos
mov
outsb
pop
sahf
mov
test
icebp
mov
mov
in
daa
xlat
sbb
negl
jmp
das
sub
sar
push
xchg
ja
cld
ljmp
std
inc
arpl
xchg
out
mov
or
mov
jmp
es
add
jp
ret
mov
adc
xor
in
mov
mov
insb
sub
das
adc
popl
and
push
mov
adc
test
hlt
mov
aaa
lods
adc
cwtl
jge
loop
lods
mov
repnz
hlt
xchg
cs
push
pop
dec
dec
xchg
jno
ret
mov
or
sti
ret
fists
push
sub
js
xchg
cltd
aas
out
dec
sbb
or
daa
addb
sub
sbb
je
jbe
xchg
and
mov
sahf
xchg
push
or
and
mov
insb
push
jecxz
inc
test
das
subb
and
or
imul
test
sbb
icebp
insb
mov
sub
xchg
inc
pop
ja
pop
ja
test
fistl
xor
jbe
test
cmpsb
dec
pop
cmp
sbb
in
jb
adc
mov
fisubrl
jmp
add
pop
cmpl
or
mov
and
addb
in
xchg
scas
and
mov
cs
stos
popa
or
outsb
in
and
jne
mov
sub
and
pop
stos
pop
xorl
lods
cwtl
fidivrs
int3
mov
cmc
push
in
xchg
mov
and
cmpsb
pop
add
nop
xchg
inc
adc
pushf
push
or
jbe
lahf
popa
fmul
in
dec
dec
int
sub
fldl
lock
xor
sub
jb
sub
add
adc
pop
add
mov
int
cmp
loop
mov
fwait
and
jmp
icebp
test
or
decb
mov
pop
xorb
sub
sub
adc
lock
ret
out
dec
sbb
xor
dec
sub
rcrb
std
lcall
xchg
sti
add
push
push
ljmp
call
int3
je
sbb
add
push
adc
cmp
daa
mov
push
cmp
jns
cld
fsubrs
popf
or
sub
nop
fs
lods
ja
cmpsb
xchg
ljmp
cltd
pop
jne
rcrb
lock
ljmp
mov
jns
fbld
cmp
xor
sahf
gs
sub
sbb
sbb
iret
jge
out
mov
or
mov
xchg
loopne
inc
iret
and
jecxz
cs
or
repz
popf
into
jp
jae
loope
arpl
je
sbb
rolb
sbb
mov
push
push
outsl
incb
test
sub
pop
sbbl
inc
dec
cwtl
jl
jnp
jge
aas
outsb
test
mov
call
pop
shlb
addb
cmpsl
rol
into
std
loope
ja
test
add
loopne
cmpl
sbb
cli
jo
xchg
cmp
popa
pop
sbb
out
inc
sbbl
pop
in
xor
push
test
and
mov
cmp
std
sbb
outsb
xchg
and
in
ret
sbb
dec
rorl
fadds
mov
mov
push
mov
lock
inc
push
dec
or
jbe
and
out
or
sbb
pusha
clc
cmp
out
add
jg
pop
arpl
sbb
cmc
cmovb
push
xchg
andb
mov
mov
pop
test
dec
adc
mov
dec
push
addr16
repz
push
into
lahf
xor
cmp
ljmp
mov
dec
stos
adc
xlat
jns
lahf
mov
xchg
mov
jmp
lret
insb
pop
cmp
xor
insb
jg
roll
pushw
stos
dec
fcmovnb
mov
ret
xor
xchg
pop
add
int
ret
aad
adc
jns
cmpsl
xchg
popl
mov
dec
sti
aas
xchg
xor
mov
mov
jecxz
ds
dec
hlt
fildl
add
test
or
xchg
add
lock
movsl
inc
loope
loop
arpl
lock
loop
jecxz
pop
int3
jns
mov
sub
sbb
sub
xor
inc
aas
pop
mov
xor
outsl
popf
inc
pop
sbb
and
mov
xchg
adc
dec
je
shll
gs
popl
fcom
decl
xchg
dec
test
or
sub
mov
rol
add
push
push
add
add
sub
mov
mov
test
sub
scas
push
jno
cmpsl
add
imul
pop
pushf
inc
xchg
outsl
jbe
cs
mov
xchg
shll
cmpb
jp
mov
out
enter
jle
mov
lahf
add
dec
pop
mov
pop
or
js
pop
cmp
sbb
push
fwait
nop
cmc
or
or
div
test
xor
add
cwtl
jns
sub
insb
sbb
pop
inc
add
push
sub
adc
add
push
imul
and
sub
test
test
stc
jmp
leave
cwtl
out
xor
push
dec
add
pop
pop
lret
pusha
xlat
mov
dec
dec
add
mov
push
mov
test
cltd
aam
fiaddl
sarl
pop
rcrb
pop
or
adc
adc
sub
push
lret
adc
jb
nop
in
pop
or
aas
insb
jns
mov
notl
adc
ret
js
out
or
add
les
in
xchg
add
fcom
inc
andl
lods
loope
pop
pop
hlt
bswap
repnz
mov
sbbb
fucomp
or
rorl
mov
iret
push
aad
dec
sbb
add
dec
sub
push
cmp
leave
add
ret
xor
pop
adc
pop
aas
scas
movsl
cmp
push
xchg
fcoml
mov
pop
addl
pop
arpl
cmp
jmp
adc
xchg
pop
into
jge
mull
mov
jbe
sbb
adc
mov
pop
add
fiaddl
mov
sub
jb
rclb
cmp
shrb
push
xrelease
inc
sub
mov
mov
fldt
xor
hlt
adc
mov
inc
mov
mov
cli
jg
mov
xchg
sub
test
mov
fldcw
sub
sub
mov
dec
mov
js
jl
jle
push
mov
cmp
xor
mov
jecxz
add
scas
or
pushf
sbbl
ja
stc
xlat
xor
sbb
in
cmpl
dec
push
pop
push
adc
or
or
add
je
sbb
sbb
or
loopne
pop
pop
leave
xor
pop
or
sub
in
jl
push
js
sub
jb
push
xor
mov
mov
icebp
cltd
push
mov
sub
and
pop
jns
in
sbb
ljmp
mov
imul
and
notl
xchg
pop
sti
mov
call
jp
loop
lcall
rcll
xor
sbb
nop
ret
jecxz
add
dec
sbb
je
adc
loop
addl
das
stos
test
daa
fisubl
cmc
loope
mov
pop
mov
mov
movsl
mov
out
dec
gs
in
sub
out
imul
lcall
lret
push
loopne
mov
repnz
inc
cmc
rclb
add
gs
filds
xchg
jp
stos
xchg
dec
push
fwait
ret
clc
sub
mov
sbb
shlb
imul
jmp
lcall
bound
mov
pop
mov
and
punpcklwd
out
add
mov
test
adc
mov
sub
pop
aaa
sbb
and
mov
jp
mov
out
fwait
lret
sti
mov
mov
cmp
lods
push
outsb
cwtl
and
push
mov
lcall
inc
loope
pop
mov
cmc
repz
sahf
sub
cmpsb
fnstsw
mov
pop
stc
js
pop
imul
sbb
dec
mov
mov
shll
dec
mov
push
push
pop
fistl
pop
sub
lds
pop
mov
lea
repnz
xchg
lods
rorl
es
mov
sub
imul
push
inc
and
sbb
jno
cmpsl
sbb
shr
jmp
jne
mov
pusha
iret
nop
or
divb
cs
dec
mov
ret
jl
mov
push
dec
and
rcll
ret
cli
inc
xor
sbb
sub
xchg
push
pushf
jle
mov
push
xchg
push
mov
mov
gs
sub
xor
roll
mov
cmp
cmp
test
mov
or
mov
cmpsb
aaa
out
jle
dec
nop
mov
jae
jl
xor
in
dec
push
fs
xchg
cmpsb
and
sbb
xchg
inc
insb
mov
lds
xchg
orb
rolb
pop
xor
and
sbb
pushf
rorb
jecxz
mov
sub
mov
mov
xchg
repz
leave
js
aaa
lret
les
loop
xchg
dec
fcompl
adc
int
mov
ret
cmpsb
xor
pop
mov
mov
insb
mov
cwtl
vpavgw
adc
xor
outsl
adc
push
cmpsb
push
xorb
sbbl
mov
shll
popa
std
imul
gs
push
movsb
push
xchg
adc
pop
pop
dec
sub
pop
or
test
adc
out
mov
jle
scas
dec
stc
sbbb
lods
xchg
scas
sbb
add
mov
mov
incb
sti
sbb
xchg
test
jae
pop
cmp
mov
stos
out
add
ljmp
icebp
pop
mov
jns
and
loopne
jno
dec
adc
pop
cmpsl
jnp
xchg
dec
mov
aam
inc
inc
push
fwait
cmp
add
or
int3
das
push
adc
xor
rcrb
xor
mov
xchg
mov
addl
das
fs
xor
mov
out
aad
sub
fcmovnb
dec
inc
xchg
scas
rcrl
lret
inc
mov
cmp
sbb
dec
daa
mov
add
cs
dec
mull
pop
dec
clc
lods
sbb
and
sub
adc
jbe
add
and
and
push
ret
cmp
push
sbb
scas
and
in
lea
mov
sbb
adcb
xor
rorl
repz
data16
sarb
dec
nop
into
push
sbb
nop
lods
shl
iret
mov
jmp
cs
mov
push
rclb
stos
sbb
into
lods
bound
test
out
loop
int3
mov
xor
sbb
aad
xchg
cmp
adc
cltd
jmp
add
cmp
shlb
divl
xchg
add
and
repnz
pop
rcr
cmp
pop
fisubs
pop
loope
push
gs
jge
int3
sub
insl
sbb
add
dec
mov
dec
mov
inc
out
or
in
shll
sbb
cmp
sbb
loope
aas
xchg
in
and
pop
inc
jp
fimuls
mov
hlt
mov
imul
mov
add
leave
sub
movsb
out
jbe
negl
into
add
mov
inc
ret
sbb
out
std
inc
jmp
sbb
inc
rclb
repz
push
cltd
lods
mov
fdivrs
cmp
and
sarb
inc
sub
mov
push
mull
sti
mov
lahf
and
imul
push
jecxz
cmp
cmc
je
dec
dec
cmpb
ss
call
fldl
xchg
dec
sub
jne
fwait
push
lea
cmc
cltd
pop
filds
add
xlat
xchg
insl
fdivrl
outsl
faddl
jecxz
push
push
pop
stc
xchg
xchg
mov
test
fistpll
sub
fsubrs
dec
add
pop
movsl
es
xor
xor
nop
lea
loope
sbb
cmp
test
xchg
adc
jns
and
add
mov
inc
pop
ss
cmpsb
sub
in
fs
sub
popf
pusha
push
icebp
movsl
push
push
mov
shl
xchg
mov
loop
inc
sub
jne
lret
or
push
dec
jp
mov
loope
push
push
jmp
lcall
mov
xchg
popf
test
pop
or
sbb
add
inc
inc
or
je
lods
outsb
aaa
cli
lea
pop
es
sbb
mov
adc
sub
fbld
leave
jecxz
pop
pop
xor
jg
mov
daa
rcll
je
mov
jne
mov
in
mov
pusha
push
fs
mov
cwtl
leave
add
cmc
outsl
mov
bound
add
ja
data16
sbb
mov
js
arpl
call
jae
cli
andl
cwtl
dec
mov
hlt
dec
ss
push
jmp
fdivrp
aas
adc
clc
mov
sub
push
dec
fs
mov
mov
jg
sub
cwtl
xlat
xchg
pop
adc
xor
or
push
mov
add
sub
outsb
sbb
and
mov
mov
cmp
movb
xchg
je
pop
dec
lock
push
inc
je
mov
push
sbb
jbe
stc
pop
push
push
dec
jl
mov
sbb
lret
insl
mov
out
adc
jae
pop
jnp
out
mov
xor
and
test
mov
and
mov
dec
cmp
arpl
addr16
aam
fwait
into
pushf
pop
jne
pop
or
sub
popf
sbb
mov
mov
loopne
adc
andb
xor
scas
mov
or
add
jl
rorl
cs
stos
bound
pop
scas
xchg
and
test
sti
xchg
inc
out
fbstp
notl
cmp
or
dec
loopne
mov
daa
pop
dec
sub
fsubrs
push
shl
test
pop
pop
repz
or
or
push
sub
aam
jb
out
add
or
push
mov
ja
les
push
xor
mov
mov
cmp
xchg
pcmpgtd
movl
mov
sar
sbb
sahf
cli
push
test
jbe
out
in
dec
push
lret
test
ret
movsb
in
out
dec
add
subl
movsl
mov
fdivr
push
jo
rolb
sub
dec
jecxz
xor
sbb
jo
mov
cmc
pop
mov
and
pushf
xor
inc
push
pop
stos
es
cltd
push
pop
lock
stos
push
clc
mov
mov
addl
int
inc
jns
dec
pop
aaa
in
inc
out
jle
pop
jecxz
dec
out
lahf
fadd
sar
movsl
scas
mov
ss
imul
jae
cmp
pop
fcos
fsubl
inc
sahf
push
cld
cltd
cltd
scas
out
int3
int3
inc
bound
imulb
aad
fwait
cld
inc
sub
aad
repz
sarl
mul
icebp
fcmovbe
popf
mov
sti
mov
mov
sbb
mov
mov
mov
inc
cs
bound
and
and
js
fs
inc
xor
xchg
pusha
inc
sbb
xor
and
dec
add
dec
inc
mov
mov
lods
sbb
add
mov
xor
sarl
rol
lret
sbb
rcr
add
rol
jne
inc
cmp
sub
arpl
cmp
movl
xlat
push
pop
and
xor
cwtl
rcrb
mov
sti
jno
popa
ja
cmp
inc
stc
jo
push
gs
cmp
or
mov
ss
bound
sahf
gs
aas
repz
dec
mov
dec
inc
mov
roll
shl
fdivrp
push
out
cmp
stos
repnz
out
add
adc
mov
and
lea
fadds
cmp
or
andl
loop
cmp
push
mov
data16
jg
fcoml
mov
stos
xchg
ljmp
or
dec
cmp
inc
cwtl
scas
rcrb
jecxz
nop
cmpsl
pushf
cmp
scas
test
or
repz
pop
ficoml
mov
aam
mov
sti
popa
cwtl
or
int
and
inc
mov
stc
sub
sti
cs
add
push
bound
shlb
dec
jno
mov
add
bts
outsl
cwtl
aas
mov
xor
sbb
jle
fsts
ja
push
aad
cltd
mov
mov
or
imul
jg
push
sbb
jge
sub
lds
pop
dec
shll
repnz
int3
out
cmp
adc
xlat
testb
sub
jge
imul
push
mov
mov
cmp
adc
insl
pop
sahf
outsb
jp
jp
and
jl,pn
sti
xlat
mov
push
out
dec
les
movsl
imul
test
das
lret
leave
inc
insb
pop
sub
pushf
dec
and
into
fdivl
iret
jg
das
sahf
inc
andl
jg
inc
or
push
push
out
shr
lret
inc
daa
sbb
adc
or
inc
sbb
not
out
pop
mov
inc
pop
std
xchg
pop
jo
jae
cmp
pop
push
lret
jp
push
xor
dec
add
sbb
pop
repnz
ja
xor
xor
push
out
fdivs
ret
lret
out
pop
adc
or
cld
push
xor
nop
inc
cmpsl
icebp
out
in
or
fs
sub
shlb
out
imul
inc
mov
iret
mov
lahf
js
and
push
lret
xchg
xchg
mov
xchg
outsb
fs
stc
mov
push
cltd
mov
scas
mov
enter
ljmp
sbb
xchg
mov
adc
das
mov
gs
rolb
or
fwait
repnz
cli
add
sub
mov
pusha
pop
mov
mov
xor
add
bound
jnp
pop
mov
stos
shl
fistpll
mov
aam
sbb
das
in
ds
mov
xor
loopne
inc
popf
cltd
movsl
in
sbb
das
xchg
mov
in
jp
std
cmp
xor
je
inc
mov
mov
rolb
xchg
fs
pop
sub
jecxz
popa
repnz
xor
inc
in
int
cli
xor
nop
add
iret
mov
loope
mov
test
pushf
pop
pop
cmp
outsl
inc
cmp
mov
sbb
aaa
fists
xorl
lret
pop
arpl
mov
xor
mov
and
daa
pop
into
pop
mov
mov
push
sti
inc
xchg
aas
sub
push
lcall
sub
mov
xchg
or
cmp
aaa
jmp
and
and
data16
out
in
sub
sub
testb
mov
scas
imul
in
repz
xchg
adcb
cs
and
mov
gs
xchg
or
cmp
loope
arpl
sti
mov
lea
and
leave
lret
out
arpl
mov
out
xchg
scas
fists
push
jo
fcoms
sub
cmp
adc
jle
stos
popa
and
cs
mov
mov
fcomi
dec
hlt
int3
pop
pop
daa
cmp
inc
loope
shll
rolb
lret
push
add
movsl
dec
mov
pop
enter
and
add
cmp
stos
enter
out
mov
sbb
mov
aad
mov
outsb
dec
xchg
dec
inc
or
shll
rcrb
mov
addl
testl
aas
in
cmpsl
sub
adcb
scas
mov
std
xor
inc
or
sbb
fistpl
push
aam
cmp
mov
pusha
mov
jmp
aam
daa
mov
pusha
push
out
add
fdivr
data16
mov
inc
push
jg
mov
xlat
fistpl
inc
lahf
jne
addl
out
push
and
mov
push
movsb
fidivs
jbe
push
xchg
fcmovb
jg
jae
pop
es
test
arpl
mov
and
ljmp
mov
add
or
bound
shll
cs
xchg
addr16
mov
pop
outsl
push
pop
das
xlat
or
mov
movsb
imul
imul
pop
cmp
test
insl
filds
and
xchg
fnstcw
int3
cmp
fists
xchg
mov
mov
push
popf
jle
leave
lds
aas
ds
fisubs
dec
pop
aad
xor
inc
add
dec
inc
movsb
lcall
jmp
push
xchg
sbb
test
inc
leave
mov
push
xchg
pop
xchg
xchg
pop
mov
in
test
pop
xor
and
inc
cmp
adc
sub
pushf
pop
out
mov
lods
adc
inc
ret
xchg
test
lods
jns
lds
mov
mov
xchg
mov
sub
mov
xchg
jnp
or
pop
sahf
sbb
mov
jns
adc
jecxz
jle
aaa
mov
push
adc
xchg
loop
rol
push
fsubs
movsb
arpl
mov
mov
fwait
inc
jmp
mov
addr16
xor
sti
and
test
lods
or
push
mov
or
ljmp
js
adc
jne
adc
inc
ljmp
sub
popa
ret
or
add
sahf
xchg
inc
inc
outsb
fcoms
loope
frstpm(287
fs
pop
stc
lcall
lret
pop
cmpsl
or
jmp
outsb
jnp
sub
fnstsw
sbb
xor
movb
in
mov
jg
loop
push
sbb
out
jae
cmpsl
lods
jne
outsl
lret
add
jbe
and
push
xor
addb
mov
addr16
mov
mov
mov
cld
mov
xchg
clc
out
xchg
and
jae
insb
and
mov
push
dec
sbb
stc
xor
xchg
xchg
mov
mov
mov
cmc
aas
lret
dec
data16
test
cli
sbb
fs
add
fwait
xchg
es
pop
iret
xchg
in
jnp
dec
sti
adc
sbb
pop
loop
int3
mov
mov
jns
inc
or
add
test
mov
mov
pushf
iret
add
movb
jo
lret
jg
cmpsb
ret
mov
and
mov
pop
fsts
jo
repz
test
mov
sahf
adc
insl
movsb
mov
lds
jecxz
loop
shrl
lods
xor
sbb
push
add
lcall
adc
xchg
in
mov
pop
xchg
ljmp
push
lock
je
mov
in
stos
lret
mov
cmp
test
rorb
out
mov
je
cmp
jmp
data16
push
sbb
xchg
sti
scas
adc
sub
cmp
adc
cmpsb
sub
pop
inc
and
inc
into
dec
push
leave
movsl
inc
xchg
xchg
cmp
sbb
ja
mov
sbb
insb
cmp
jno
and
dec
pop
lods
sbb
pop
and
cld
inc
cmp
rep
rolb
test
pop
dec
jl
and
jbe
ret
jl
sbb
mov
decb
jmp
sbb
or
mov
jmp
mov
mov
jl
or
call
push
mov
jecxz
cmpsl
jae
fs
push
or
fidivl
add
int
lea
mov
dec
mov
push
push
cwtl
outsl
hlt
push
jb
fs
xlat
and
mov
mov
inc
xchg
aam
mov
xor
mov
pop
std
cli
repz
pop
mov
jbe
pop
mov
rolb
repnz
mov
push
xchg
mov
popa
outsl
mov
loope
out
stos
adc
mov
int3
adc
or
test
push
es
lcall
ret
xchg
push
sub
mov
inc
testb
push
cld
lods
push
mov
lods
daa
rol
jp
test
mov
in
mov
sub
stos
xchg
push
push
xlat
loopne
mov
jae
aaa
test
arpl
negb
ja
sub
jl
iret
xchg
fisttps
ds
ret
inc
and
or
mov
popa
mov
lahf
int3
dec
inc
mov
fistpll
mov
mov
ret
aam
cld
mov
scas
clc
inc
iret
pop
jb
xor
inc
out
ja
mov
adc
pop
repz
xchg
sub
outsl
cmp
nop
lret
imul
insl
adc
loopne
imul
stos
mov
mov
push
and
ror
or
sbb
fdivs
mov
adc
add
sub
outsl
aaa
mov
pop
xor
and
push
std
mov
xor
cmpsl
pop
shrb
pop
jae
sbb
ss
push
jae
sti
cs
mov
jg
push
nop
push
mov
icebp
insb
fdivs
jecxz
sti
addr16
mov
test
and
outsl
xchg
mov
jge
mov
arpl
xor
movsb
adc
jp
jecxz
xor
mov
insb
xchg
fwait
inc
inc
lds
lea
lods
mov
bound
sbb
in
nop
and
cmp
push
bound
mov
xchg
mov
pop
out
popf
sbb
xor
aas
pop
lds
cmp
sbb
je
in
rol
mov
cmpsb
jnp
jnp
gs
and
mov
push
sbb
pop
mov
dec
add
jecxz
push
sub
test
add
stc
repnz
fistpll
pop
fmulp
pusha
stc
sub
outsb
rcll
jb
stc
push
js
push
mov
shlb
arpl
test
jae
dec
jle
fnsave
sbb
pop
inc
mov
std
push
mov
inc
inc
pop
jae
xchg
ljmp
or
movl
in
iret
hlt
xchg
mov
pushf
jns
sub
mov
mov
pop
or
push
shrl
movl
std
movsl
and
imul
mov
or
sbb
dec
mov
xchg
xchg
lock
arpl
mov
xchg
shlb
stc
or
push
lock
jmp
lret
out
mov
sub
fwait
int3
jnp
fs
mov
sbb
daa
and
xchg
bound
jb
jecxz
aaa
push
jnp
dec
cwtd
mov
xor
mov
sahf
jno
int
imul
test
jl
enter
inc
test
aas
lret
popa
sbb
insw
push
push
push
inc
mov
adc
cmc
cmp
in
jecxz
dec
sub
xor
mov
xchg
fsubr
fmuls
pushf
sar
inc
xchg
stc
jnp
and
rolb
adc
out
sub
sub
cmp
mov
imul
data16
inc
les
fcmovnu
pop
les
inc
pop
push
das
jp
dec
jb
les
lods
adc
js
xor
jle
lahf
or
dec
movb
test
pop
mov
jo
out
sub
jmp
lds
inc
out
or
pusha
pushf
pop
movsl
mov
rcll
addl
sahf
cmc
xchg
hlt
cs
inc
into
pop
leave
push
dec
repz
js
cmpsb
das
into
push
or
push
push
dec
mov
cmp
push
xor
or
lods
jle
add
inc
fsts
pushf
mov
jnp
mov
add
xchg
pop
je
out
arpl
scas
jo
sbb
add
repnz
xchg
push
push
cli
fiaddl
xchg
mov
loopne
inc
or
inc
jg
add
mov
out
lods
lock
dec
inc
dec
imul
cmp
mov
test
testl
cmp
fs
mov
jl
inc
popa
into
popf
fbstp
ret
call
sarl
test
adc
dec
fs
mov
xorl
pop
test
fdivrl
rcrb
cmp
push
daa
push
sub
pop
cmpsl
icebp
sbb
or
jbe
fiadds
cmp
mov
inc
mov
cwtl
adc
comiss
push
push
xor
movl
inc
cld
jmp
mov
inc
daa
mov
xor
pushl
or
dec
push
dec
cld
int
repz
xchg
and
mov
je
sub
out
in
iret
arpl
jns
jle
push
or
aas
pop
inc
insl
push
xchg
jmp
cmp
xchg
dec
lret
test
xchg
in
test
xor
xor
mov
mov
pop
inc
mov
dec
aad
sti
mov
test
arpl
lods
adc
ret
jo
nop
shlb
enter
xor
cmp
cmc
push
sbb
add
jb
push
mov
ret
push
in
add
mov
loop
push
xor
cld
fildl
fldenv
mov
hlt
dec
outsl
fdiv
or
lods
hlt
add
sub
out
nop
mov
scas
cli
pop
repnz
outsl
jb
psrld
jnp
shl
stos
ret
pop
add
inc
nop
lret
jo
xor
jmp
dec
mov
cs
cmp
outsb
das
es
cmpsl
int3
and
pop
lcall
out
pusha
inc
aas
scas
add
push
push
cmpsl
cmp
sub
mov
mov
data16
in
inc
mov
mov
dec
in
mov
xor
lret
fsubrl
int
mov
xchg
cli
xchg
in
xor
pop
fsts
push
sub
and
pop
or
lods
adc
fidivl
jmp
je
jno
dec
cmp
jo
sub
push
or
int3
stos
or
out
insb
imul
mov
enter
xchg
mov
pop
sub
icebp
adc
dec
jb
pop
jg
jne
xchg
cli
arpl
jecxz
aad
and
push
pop
mov
arpl
xor
adc
and
or
push
stc
jno
and
ror
leave
nop
sub
test
jb
pop
cmpsb
jb
mov
in
rclb
and
and
clc
dec
adc
xlat
sti
rcll
jb
popf
clc
push
mov
sbb
or
push
outsb
pop
popa
loop
int3
iret
ja
pop
lds
sbb
ret
js
jae
fimull
int3
adc
outsl
sbb
xchg
js
sahf
sbb
adc
ss
cmp
out
cli
jbe
stc
cs
fsqrt
jmp
jno
mov
xchg
mov
cmp
movsb
je
and
pop
xor
mov
jnp
inc
inc
lods
cmpsl
mov
out
testl
and
movsl
negl
push
lret
xchg
dec
and
mov
cmp
fsubrl
cmp
aaa
js
inc
popa
pop
fwait
cmp
add
ss
rcr
pop
in
testl
cmp
adc
aad
mov
sub
pushfw
push
out
push
push
adcl
lods
adcl
mov
push
jl
and
xchg
push
sti
icebp
mov
test
mov
dec
test
push
mov
sbb
bound
xor
push
adc
xchg
lret
mov
sub
inc
add
sbb
popa
jg
nop
sbb
and
jg
scas
sbb
pop
adc
jmp
sbb
inc
cld
xchg
sub
push
stc
cld
in
mov
cmpsb
les
sbb
adc
inc
jecxz
push
sahf
xor
out
dec
std
sbb
push
sbb
push
imull
push
shll
add
jmp
sub
ljmp
jae
xor
mov
cmpsb
adc
jns
out
or
and
popf
dec
inc
mov
mov
adc
loopne
out
cwtl
dec
jb
push
xor
popa
jp
mov
xor
out
dec
cli
or
pop
rorl
lret
in
repnz
repnz
sbb
daa
mov
out
push
jb
push
fwait
fs
test
out
adc
cmpsl
xor
shl
or
mov
seto
jp
sub
pop
xor
mov
jg
loope
mov
lods
clc
sub
add
xorb
roll
inc
stos
mov
ds
sbbl
push
mov
stos
mov
scas
rol
xor
lcall
outsl
test
sahf
sub
hlt
cmpsb
cmp
xchg
inc
and
sbb
jno
push
push
popf
jne
sar
mov
mov
mov
pop
pop
in
ret
pop
xchg
or
and
cltd
jmp
and
mov
xchg
rcrl
add
pop
jmp
test
into
adc
loopne
pop
addr16
ja
out
insl
int
or
fisubrs
ret
or
adc
pusha
adc
lds
jnp
adc
mov
add
add
test
dec
pop
or
mov
leave
cli
lock
shl
sub
and
div
aam
or
pop
push
mov
fnstsw
pop
push
test
shlb
jp
xchg
inc
cmc
mov
jmp
sbb
adc
push
xor
cmp
lods
cmp
sub
mov
cmp
outsb
addr16
sti
dec
pop
or
imul
rolb
pop
or
rcrl
movsb
pop
inc
vcvtdq2ps
cli
jb
mov
add
push
pop
dec
push
mov
cltd
pop
push
test
pop
daa
rcrb
push
mov
fisttpl
sbb
cmc
lcall
xor
mov
add
adc
int
dec
xchg
cmp
push
xor
mov
ss
outsb
mov
jnp
cmp
cmp
loope
push
pop
and
outsl
mov
jl
push
insl
mov
sub
xor
dec
jmp
movsb
add
nop
mov
cmp
pop
clc
ret
and
or
cmp
in
mov
mov
fcoml
ss
ret
xor
jae
xor
daa
rcl
das
cmpsl
out
mov
push
dec
dec
addl
inc
adc
insl
jp
mulb
pushf
jne
lock
pushf
dec
pop
ret
popf
icebp
je
out
xor
pop
push
jae
out
mov
rcll
or
adc
sarb
jno
inc
fidivrl
loope
mov
mov
push
xchg
sub
pop
gs
ss
mov
mov
dec
js
shll
arpl
xchg
adc
jmp
loope
aad
jbe
or
fcmovu
pushl
pop
cmp
pop
rolb
mov
pusha
fwait
push
mov
out
mov
inc
push
cmp
pop
pushl
sub
jnp
subb
lock
sarb
mov
sub
loop
ds
sub
fildl
dec
pop
mov
cmpsl
test
mov
outsl
pop
push
mov
into
adc
jmp
lret
les
or
sub
xchg
adc
xchg
inc
scas
int3
in
push
adc
add
or
or
or
sbb
mov
sbb
inc
push
sbb
loopne
adc
adc
mov
xor
inc
lcall
mov
in
mov
xor
sub
ss
and
mov
push
faddp
adcb
imul
or
lock
in
push
push
stc
jnp
outsb
scas
sbb
leave
outsl
fcompl
dec
sbb
push
push
cmp
lret
std
xor
xor
mov
fldt
push
je
jo
mov
or
adc
mov
idivl
rorb
fldl
jecxz
fcmovbe
mov
leave
dec
dec
inc
test
xchg
stos
popf
push
mov
pop
sub
ljmp
pop
in
call
lahf
outsl
inc
test
jge
call
dec
mov
js
aad
leave
stos
mov
into
add
scas
ret
pusha
cmpsl
sub
and
mov
adc
test
xchg
mov
sbb
xor
mov
pop
and
bound
jge
add
dec
fucomp
mov
jns
gs
push
push
out
shll
push
arpl
push
in
fwait
dec
pop
adc
adc
fwait
insb
sbb
insb
add
xchg
adc
into
push
movsb
mov
or
addb
adc
xchg
jbe
pop
add
out
int
mov
mov
dec
fisttpll
out
int
daa
add
enter
hlt
clc
adc
pop
stos
jb
cltd
pop
stos
sarl
push
fsubrp
jo
and
and
ret
scas
cmpsb
or
add
pop
xchg
add
mov
and
dec
lods
icebp
andnps
aad
adc
xchg
mov
push
loope
dec
fxch
adc
hlt
outsb
xchg
sarb
loop
sub
fsubrp
dec
push
jmp
int3
std
lods
or
jns
rcrb
mov
cmpsl
stos
jecxz
sub
js
decl
jge
inc
dec
in
jbe
mov
scas
xor
ljmp
sbb
pop
enter
mov
repnz
and
into
jp
sub
test
jge
rcr
lret
pusha
loop
es
sub
push
shrl
fadd
push
and
mov
push
stos
mov
mov
pop
pop
fdiv
pop
fsubl
lret
push
and
pop
imull
mov
popa
mov
add
aas
mov
ja
and
jg
ljmp
outsb
lods
mov
push
add
pop
or
push
cmp
and
mov
inc
sbb
pop
inc
fidivs
out
aas
filds
and
adc
adc
idivb
rcrb
pop
push
mov
inc
mov
sub
aas
andl
pop
inc
xor
into
mov
xor
add
cmpsl
into
mov
push
cld
hlt
dec
or
aad
xchg
xor
mov
xchg
cltd
jecxz
dec
xor
data16
sub
daa
in
xor
popl
lods
test
inc
fistps
testb
mov
outsl
sbb
mov
rclb
fmuls
clc
test
or
lds
pop
sbb
call
inc
mov
lds
or
lods
clc
in
int3
mov
mov
lods
in
mov
cld
repz
mov
test
pusha
add
loope
addr16
inc
jae
or
out
inc
and
pusha
dec
fistps
ror
mov
fucomi
mov
or
adc
out
xchg
sub
push
pop
inc
sub
test
cmp
add
add
hlt
dec
dec
test
jmp
pop
inc
add
fisttpll
push
vmwrite
sbb
add
xchg
push
ret
inc
mov
push
imul
lahf
mov
stc
insl
stos
inc
and
mov
jecxz
out
inc
and
push
lret
lcall
jg
lds
push
lods
inc
sbbl
orl
aad
xlat
mov
ja
mov
popf
dec
or
push
ret
hlt
mov
pop
in
mov
fwait
cmpsb
push
pop
stc
bound
pop
jne
cli
fimull
lcall
leave
sbb
jecxz
repnz
insl
scas
push
cmp
push
push
daa
shl
jb
fwait
or
pop
xchg
jnp
or
int3
ret
gs
in
inc
cli
push
iret
enter
sub
clc
and
sbb
jne
jns
sbb
std
fisubl
aaa
push
scas
dec
mov
icebp
das
add
arpl
mov
out
aaa
sub
loopne,pn
movsl
das
in
add
xor
inc
mov
jo
insb
inc
jge
push
jns
mov
mov
lds
pop
pusha
add
cmp
test
pusha
mov
push
movsl
lret
lret
pop
xor
movsl
test
pop
cld
cmpsl
mov
inc
lds
nop
nop
fidivl
fbld
aam
jo
in
loop
pop
or
fldenv
dec
mov
push
stc
leave
cmpsb
lcall
shl
stos
mov
jo
or
in
or
jo
dec
out
xchg
in
int3
cmpsb
out
mov
add
xchg
ret
test
mov
pop
bndldx
cmpl
cld
pop
in
jne
mov
fcomps
and
xor
sub
hlt
shll
pop
add
fisttps
adc
pusha
jbe
int3
add
jl
xchg
xchg
mov
push
sbb
daa
pusha
or
dec
popf
movb
pop
jne
and
add
and
fstpt
sbb
out
xchg
xor
call
into
add
mov
flds
pop
jl
push
or
lahf
dec
jns
adc
inc
divl
dec
lcall
jbe
xlat
cmc
loop
mov
inc
cltd
adc
xor
add
pushf
mov
pop
andl
mov
cwtl
jb
xor
xchg
cmp
lahf
lea
pop
cmpb
into
xchg
xchg
out
pop
je
lret
bound
jmp
cmp
stos
mov
cwtl
ficompl
out
sub
mov
jns
rcrl
add
movsb
rclb
mov
push
inc
movsl
push
js
fimull
jno
clc
jmp
ds
repnz
mov
mov
fs
cmp
stos
lods
mov
pop
arpl
aaa
push
and
pop
or
mov
sbb
pop
stos
dec
insb
push
loop
sub
shr
out
test
push
pusha
test
xchg
xchg
mov
inc
pop
cmovne
test
scas
push
adc
lds
push
nop
mov
mov
mov
or
or
enter
fsubrp
add
mov
ficomps
out
push
loop
push
dec
jno
cmovge
and
and
int3
mov
push
xor
insl
jle
pop
jnp
lock
int3
pop
pop
in
mov
or
shlb
mov
add
inc
outsb
sub
xchg
sub
ret
mov
dec
push
negl
insl
and
fnstenv
jecxz
in
cmc
xchg
ds
mov
xchg
mov
xor
ljmp
cli
mov
into
inc
cmp
int
xor
insb
int
imul
lods
cmc
sbb
popa
insl
mov
sub
mov
mov
jl
shlb
test
mov
ficoms
and
js
fldt
xchg
cmp
sahf
xchg
adcb
mov
cmc
and
in
pop
mov
xor
pop
mov
jns
xor
mov
nop
repz
or
inc
or
les
scas
test
sub
arpl
cmp
or
mov
jno
pushf
test
inc
cwtl
dec
mov
mov
nop
pop
icebp
cld
push
mov
js
adc
enter
and
xor
lods
ret
push
jmp
scas
cltd
adc
mov
lahf
mov
in
mov
scas
sbb
test
xchg
test
xchg
jl
shlb
cmp
das
in
rcr
in
in
mov
jmp
std
inc
jecxz
out
scas
jmp
stos
insl
cmpsl
mov
sti
xacquire
or
xchg
push
pusha
add
aas
jp
ljmp
repnz
mov
les
add
jns,pt
scas
arpl
leave
addb
jns
shlb
mov
cmp
adc
mov
call
inc
mov
xor
and
mov
jo
push
std
or
push
loopne
adc
mov
dec
aas
ret
sub
sub
rcr
xchg
xchg
sub
outsb
sbb
shrb
and
imulb
add
mov
cmpsl
jne
loop
mov
icebp
xchg
push
mov
and
jmp
outsl
mov
xchg
jmp
shlb
add
test
aad
lods
push
push
hlt
dec
subb
les
sub
ja
leave
aas
dec
std
leave
add
in
or
sbb
int3
stc
addr16
shll
stos
lret
in
jns
mov
mov
jl
xor
cmc
dec
daa
bound
sub
add
fdivrl
fbld
push
pop
imul
sahf
ret
add
cmpsl
lods
pop
shr
inc
jo
sar
aam
xor
inc
bnd
cmc
push
jmp
int
cmpsl
xchg
lea
je
push
sahf
aas
data16
scas
out
hlt
hlt
icebp
pop
jae
push
add
fimuls
cs
adc
enter
shrb
gs
mov
int
loop
das
addr16
sub
aad
ja
jecxz
lret
sub
lods
cmp
jecxz
jge
popa
ljmp
enter
shlb
adc
dec
lret
inc
mov
mov
shr
jo
es
ficomps
inc
test
lret
pop
mov
dec
inc
pop
imul
xchg
loopne
cmp
dec
clc
fistpl
dec
data16
rcr
and
fdivs
sbb
stos
dec
ja
push
sbb
repnz
push
ret
clc
sub
rorl
lods
orb
ljmp
xor
insl
mov
call
fsubl
scas
in
adc
mov
xchg
scas
xor
cltd
loop
mov
sbb
pop
xor
iret
iret
fstl
mov
ljmp
sub
clc
fsubr
iret
xchg
pop
lods
repnz
int
jnp,pn
std
adc
int
or
outsb
cmp
lods
mov
es
mov
and
out
sub
insb
mov
cmpl
test
sbb
sub
bound
push
cmp
push
ljmp
or
xchg
sahf
ret
lret
cmpsb
jg
sbbl
adc
call
pop
pop
les
push
popa
out
xchg
in
inc
hlt
xchg
push
into
add
andb
mov
loopne
inc
out
ljmp
push
sbb
or
mov
adc
pop
push
adc
mov
inc
repz
mov
in
ret
inc
movsl
add
rdtsc
jbe
test
push
sti
xor
stc
stos
out
pop
orl
popa
push
inc
jbe
leave
pop
dec
mov
mov
cmp
mov
dec
les
subl
ret
rcl
cmpsb
stos
fmulp
jnp
mov
fcmovbe
and
lods
rcr
decb
mov
dec
dec
lods
xchg
adc
mov
int3
out
js
js
mov
mov
bound
adc
dec
rolb
cmp
xor
mov
and
cwtl
xor
ds
dec
ficoms
sub
pop
ret
add
mov
lcall
inc
jbe
mov
movsb
js
jecxz
je
add
cmp
pop
ret
add
int3
inc
sbb
fsubs
aas
ret
mov
sar
pop
pusha
sbb
mulb
adc
xchg
xor
xlat
push
mov
mov
enter
aad
shll
cmp
fisubs
inc
cmpsb
or
lahf
adc
test
int
jle
outsb
mov
icebp
scas
cs
fidivrl
xchg
push
jle
push
jns
fstl
lock
push
add
cmc
shll
jp
and
repz
enter
mov
jae
or
mov
sub
mov
int
mov
cmpl
out
inc
loopne
pop
daa
pusha
mov
adc
arpl
test
jg
jmp
jecxz
rcl
out
mov
cmp
loopne
push
fsub
or
inc
mov
pop
mov
xor
or
les
xor
incl
mov
movsb
sahf
sub
adc
out
lret
xchg
mov
out
push
lret
mov
pop
xor
movsl
pop
das
mov
inc
adc
mov
gs
push
adc
test
or
mov
std
popl
xchg
test
lahf
or
insl
adc
sbb
jo
or
fbstp
icebp
fisttpl
mov
add
sahf
fwait
mov
fldl
mov
push
mov
cmp
pop
sbb
ficoms
in
add
jle
mov
inc
fmul
push
inc
mov
mov
sub
lods
lds
out
inc
jb
dec
jmp
cmc
xlat
fidivrl
leave
test
pop
setg
cmp
sahf
fsubr
xchg
or
jbe
add
mov
sub
iret
dec
dec
ret
mov
mov
jnp
pop
in
daa
jg
dec
add
adc
outsl
and
movsl
fnstenv
mov
jp
mov
jb
aam
std
outsb
push
push
sbb
adc
jo
scas
mov
movsl
xor
and
xor
cwtl
loopne
and
movsl
cmpl
cmpsl
mov
mov
mov
mov
sbb
loop
scas
xchg
ss
jl
xor
xchg
popf
loop
sub
or
in
sar
xor
adc
pop
nop
cmp
pop
decw
mov
push
test
lock
push
fistps
fistpll
mov
mov
sub
cltd
int
test
sar
pop
xchg
cmp
out
ret
mulb
jbe
popa
lods
push
pop
fistl
std
fmul
movsb
jns
pop
shll
fldenv
hlt
jne
or
jbe
fldt
andb
inc
sub
xchg
inc
pop
int3
add
subl
or
or
pop
iret
pop
incl
in
fldcw
stos
je
aad
jns
cmp
clc
jno
clc
lahf
sub
xor
mov
das
jnp
nop
xor
sbb
lret
cmp
pop
mov
mov
ret
insb
movl
xchg
push
xor
push
test
mov
jbe
xor
mov
pop
cltd
mov
into
dec
push
mov
xchg
xchg
ss
sub
xlat
mov
dec
jb
mov
das
out
xchg
aaa
mov
lret
jge
add
dec
mov
rclb
xor
aaa
cmp
rorb
out
push
and
gs
lods
inc
xchg
pop
pop
int3
fsubrl
shrl
mov
and
dec
daa
add
adc
sub
iret
hlt
in
test
scas
ljmp
dec
xchg
mov
jb
xor
test
dec
ds
cvtps2pi
lcall
stos
jo
xchg
xchg
fbld
add
fwait
lret
sub
or
jo
xchg
or
inc
jge
pop
les
dec
pushf
das
mov
lret
cmc
jmp
push
dec
popa
enter
push
adc
in
or
out
push
pop
rorb
cld
mov
and
aas
xor
push
test
push
and
cmp
in
xchg
mov
fwait
inc
fisubs
hlt
dec
in
pop
out
and
sub
outsb
out
sbb
pushfw
dec
xchg
push
mov
mov
pop
xchg
xlat
jle
adc
into
aam
dec
subl
divb
cmp
lods
int
test
repz
aaa
mov
scas
cmp
aaa
pop
je
mov
lret
cli
and
xchg
out
adc
pushf
add
inc
aam
inc
hlt
adc
lods
call
pop
out
xchg
xlat
inc
push
nop
mov
jns
and
fisttpll
adc
push
les
jnp
add
cltd
xor
mov
dec
cvtps2pi
out
mov
stc
movl
andl
rcrl
xchg
fdivrl
adc
add
push
and
out
sti
mov
dec
fsubr
push
sbb
and
adc
cltd
cmp
inc
add
push
je
pusha
mov
push
xchg
ds
insb
call
aaa
rcrl
add
sub
cld
jmp
gs
mov
jl
sbb
fstl
mov
fistpl
cli
dec
out
sbb
loopne
rorl
pusha
sbb
fsts
sbb
lea
push
orb
pusha
popa
sbb
mov
test
inc
shll
sub
jge
push
lret
fldcw
jmp
lea
jnp
xchg
inc
cs
repz
mov
out
mov
mov
imul
xchg
test
inc
das
adc
rcrl
fs
insl
pushf
out
push
xor
push
jnp
push
mov
pmaxub
mul
fdivs
jae
mov
and
jne
mov
int3
outsb
dec
enter
pop
mov
cwtl
jno
dec
xorb
bound
das
test
mov
xor
mov
jg
or
cmpsb
scas
fisttps
inc
int3
sbb
inc
sbb
pop
push
sbb
push
pop
iret
push
ljmp
adc
push
sub
repnz
xor
mov
movsb
xlat
jmp
jo
in
je
repnz
fwait
jp
sahf
mov
fbld
sahf
mov
into
push
xlat
push
insl
lock
cmp
push
movsb
add
movsb
hlt
ljmp
sbb
cmp
imul
sbb
sub
jb
or
pop
cs
adc
ud0
fildll
xchg
insl
sbb
push
xchg
jecxz
aaa
out
xchg
adc
xchg
cmp
jge
push
mov
stos
mov
sbb
pop
mov
bound
and
inc
sbb
jae
lret
push
lods
daa
mov
out
aas
sbb
and
inc
xchg
insb
subl
cmpsb
lahf
inc
fiaddl
cmp
adc
inc
psrld
cmpsb
mov
mull
add
or
mov
fisubrl
fadds
inc
or
push
test
out
lods
xchg
xchg
aaa
adc
xor
push
push
jge
test
in
add
or
idivb
jmp
out
push
push
xrelease
test
aaa
fwait
push
inc
aas
dec
pop
repnz
jmp
ret
ds
jmp
adcb
mov
popf
icebp
clc
pop
imul
push
sbb
iret
data16
sub
xchg
push
dec
cld
jnp
sbb
push
mov
xchg
mul
mov
inc
mov
iret
add
scas
push
push
test
aad
or
mov
adc
xchg
std
in
push
cmpsb
push
into
mov
and
push
scas
fsubs
in
sbb
and
adc
testl
notb
xor
sbb
addb
enter
fisubrl
je
push
jmp
enter
push
or
adc
in
insl
jl
dec
xor
and
sahf
fwait
pop
pop
xorl
js
sub
in
test
scas
sub
js
dec
lret
push
iret
xchg
insb
leave
push
adc
add
dec
add
hlt
mov
mov
inc
xchg
mov
xor
push
pop
push
xchg
sub
idivl
scas
arpl
jl
pop
sub
xchg
scas
push
cmp
int
cmc
cmp
cmp
jno
jp
jns
sahf
xchg
movb
daa
mov
test
add
outsb
mov
xchg
outsl
fwait
int
call
cmp
fmul
lcall
scas
mov
test
addr16
pop
into
jbe
or
sub
push
sahf
cli
mov
xor
sbb
lahf
aam
push
lds
int
xor
xchg
sbb
ljmp
sbb
sub
pop
push
mov
sub
fldl
jp
pop
pop
xor
push
test
jl
mov
fisubs
mov
ljmp
add
in
imul
cmpsb
jle
stos
nop
out
shlb
push
cmp
leave
mov
cmc
dec
and
push
jnp
lcall
mov
sbb
cmp
mov
shll
in
cld
mov
pop
mov
mov
mov
fs
sbb
lods
in
scas
mov
hlt
cli
xor
mov
pop
aaa
xlat
pop
sbb
adc
lea
scas
ss
jge
dec
cmp
cwtl
mov
das
popf
adc
loope
lods
mov
test
rcrl
scas
pop
xchg
jp
sub
push
mov
pop
jl
xor
xchg
push
shl
or
adc
test
jge
mov
leave
or
test
cli
out
push
adc
pop
mov
and
inc
mov
bound
pop
ljmp
sbb
xchg
adc
pop
cmp
inc
pop
mov
mov
jo
add
mov
pop
arpl
lret
pushf
lcall
psrld
cmp
icebp
mov
and
mov
mov
push
cmp
xchg
sbb
in
pop
push
mov
in
xor
sub
xchg
pop
filds
repnz
sbb
and
sarb
in
dec
rolb
add
xor
push
or
sub
xor
mov
pop
or
mov
out
mov
jl
cmp
iret
std
pop
mov
xchg
arpl
testb
daa
hlt
in
iret
jge
dec
pop
lret
loopne
sbb
mov
pop
cs
xchg
jo
test
pusha
mov
sbb
icebp
imul
jle
js
leave
test
fs
cmc
xor
push
movsl
insl
fcoml
ret
sbb
pushf
mov
in
lods
add
xchg
dec
aas
lods
in
jp
ds
in
dec
fwait
cmpsl
xchg
push
aaa
jns
xchg
inc
pop
mov
xor
outsl
adc
pushl
sub
xor
adc
dec
xchg
aas
popf
stos
pop
push
mov
mov
dec
adc
imul
add
and
inc
scas
sti
sub
stos
or
jnp
add
ds
and
mov
mov
push
mov
mov
es
mov
xchg
jge
ljmp
inc
das
into
repnz
in
mov
mov
dec
ficomps
imul
mov
xchg
cmp
aam
push
inc
repnz
jge
cmp
adc
and
mov
push
fwait
mov
adc
test
movsl
sahf
hlt
nop
jne
test
mov
mov
jge
cld
aam
jae
rorb
sbb
adc
in
jno
cmp
xor
pusha
mov
sub
out
sbb
jg
sub
test
cmp
popl
add
mov
scas
ficoml
movsb
inc
scas
pop
dec
add
and
mov
and
int
popa
pop
and
test
sbbb
pop
arpl
sbb
mov
cltd
gs
test
pop
stos
outsb
xchg
es
add
and
push
popf
hlt
sub
das
mov
rcll
mov
push
push
pop
incl
add
mov
inc
fucomip
or
movb
adcb
enter
imul
adc
dec
je
xor
enter
push
pop
jle
icebp
ret
cld
loop
sub
lret
jb
das
mov
adc
into
cmpsl
iret
std
icebp
adc
jns
test
mov
imul
mov
inc
pop
cmp
or
inc
mov
jo
mov
rcr
mov
imul
and
cwtl
push
pop
sbb
mov
cmp
iret
leave
pop
rcr
test
aas
push
sub
jp
sub
ret
push
sbb
xor
out
inc
push
es
add
fwait
dec
loope,pn
stos
adc
add
and
and
dec
sub
push
js
and
mov
jb
popa
fstpl
or
hlt
mov
xchg
leave
inc
xor
hlt
fisubrs
cmpsl
imul
jb
add
dec
mov
adc
loopne
pop
or
es
push
fwait
push
cwtl
push
test
jmp
pop
stos
pop
in
or
mov
mov
cltd
xchg
repz
push
dec
popa
pop
add
xor
push
fistpl
fdivr
daa
pop
mov
dec
jne
lock
pusha
loopne
stos
jl
dec
mov
stos
inc
mov
adc
sti
es
out
daa
sub
dec
cmpsl
das
out
pusha
pusha
add
inc
xchg
pop
mov
mov
out
pop
or
cmp
xchg
shll
out
out
les
pop
add
xor
ljmp
cli
loope
inc
pop
push
or
and
mov
cmp
xor
adc
out
pop
fs
lods
jns
dec
mov
dec
push
jl
add
pop
outsb
push
ret
in
pusha
xchg
xor
gs
clc
adc
lcall
mov
inc
js
in
cli
clc
sbb
xchg
push
xchg
test
lds
das
nop
int
lea
mov
xlat
and
hlt
out
sub
scas
imul
sub
lea
dec
outsb
jae
test
mov
pop
push
xor
rcr
or
movsb
inc
leave
dec
push
scas
lods
fcompl
cmpsb
fistps
dec
cs
lock
popa
push
dec
imul
xorl
mov
mov
xor
data16
mov
pusha
loopne
pop
fsubrl
in
jge
inc
add
pop
insl
out
aad
cmp
test
rcll
jecxz
jb
dec
mov
and
lahf
push
inc
shll
lret
sbb
xchg
dec
mov
popf
orl
push
mov
add
mov
push
inc
movsb
cwtl
ja
inc
push
cmpsb
inc
jnp
mulb
mov
outsb
into
imul
xor
add
rolb
mov
dec
cs
inc
call
mov
xorb
mov
aaa
xor
inc
add
add
int
mov
das
adc
data16
aam
xlat
cmp
stc
insl
loopne
nop
int3
fldt
call
sbb
idivb
xor
push
outsl
and
imul
rcrb
int
loopne
mov
push
jne
xchg
addr16
rol
adc
mov
lock
cmp
sub
iret
xor
lds
mov
filds
lret
jno
sbb
and
shlb
lret
mov
leave
push
popf
imul
mov
cmpsb
adc
sti
or
adcb
xor
aam
repnz
daa
lock
bts
aam
rorb
cli
loopne
mov
stos
stos
ja
pop
imul
xor
scas
jp
cs
das
loop
cmp
push
test
push
dec
xchg
jp
mov
stos
sidtl
pop
ss
loopne
adc
push
cmp
jno
out
and
sbb
shll
inc
add
fcomps
aaa
push
and
or
ja
mov
outsb
lahf
lds
in
pushf
out
adc
idivl
sbb
pushf
shlb
fs
mov
pop
and
cmp
scas
or
out
cltd
cli
pop
xor
fidivrs
add
fnstcw
xlat
loopne,pt
sbb
fstl
enter
pushf
jb
popf
inc
dec
icebp
sub
xchg
repnz
sbb
push
push
data16
faddp
jle
push
iret
into
jg
pusha
xor
pop
xchg
imul
adc
test
xchg
push
aad
mov
and
push
ja
xchg
movsb
int3
and
sub
sub
dec
fsubl
xor
enter
pop
pop
mov
push
pop
dec
inc
jge
push
cmc
clc
pop
rcrl
lret
add
test
dec
add
mov
hlt
shrl
xchg
xor
int3
jp
enter
hlt
add
fldenv
dec
cld
jle
mov
and
jge
mov
scas
loop
mov
in
lea
roll
lds
lahf
mov
xor
fistpll
hlt
lret
pop
pushf
fwait
xor
jle
inc
rep
adc
cld
aad
xor
xor
outsb
mov
into
xlat
loop
bnd
lock
push
out
das
jg
push
sbb
mov
or
xor
lods
lcall
clc
subl
popl
in
pop
lods
push
mov
and
cmpsl
cmp
push
loope
mov
mov
push
inc
sbb
inc
dec
out
jno
and
xor
sahf
ja
dec
aam
aam
mov
jge
cmp
out
dec
pop
cmp
pop
inc
lcall
in
ss
mov
xchg
push
adc
iret
add
push
jp
testb
sti
add
int3
pushf
lcall
mov
into
adcl
hlt
inc
cmp
mov
add
xor
fdivs
adc
or
cmc
sub
add
pop
in
lods
and
cmp
mov
mov
dec
push
xchg
cmpsl
ficompl
adc
mov
test
or
aaa
jae
nop
dec
jno
jmp
push
mov
jns
and
pusha
int
popf
sbb
cli
xlat
fdivr
icebp
lahf
push
js
fimull
mov
jne
in
xor
sub
loopne
sysret
out
leave
rol
repz
mov
outsb
je
lock
mov
mov
or
mov
jp
arpl
xchg
mov
add
pushf
xchg
add
stos
mov
adc
ret
mov
add
iret
fsubrs
lock
adc
mov
imul
sbb
into
jno
iret
mov
stos
shrb
mov
inc
shrl
cwtl
ret
jbe
enter
decb
inc
sbb
jns
push
pop
adc
jnp
adc
sbb
outsb
xor
mov
repz
sbb
mov
jecxz
xlat
mov
stos
xor
das
mov
add
outsl
adc
push
pop
mov
mov
out
stos
dec
jmp
aad
test
sbb
aaa
push
and
lock
leave
pop
add
sbbl
pop
fidivs
xchg
jae
xor
fisttpll
cmc
mov
scas
ljmp
mov
mov
mov
call
dec
ljmp
sbb
or
hlt
stos
dec
shr
shll
add
ss
out
inc
xor
lods
xlat
out
adc
bound
add
nop
inc
imul
add
cltd
add
xchg
popa
xchg
xchg
or
icebp
push
mov
mov
adc
inc
jns
mov
jmp
shl
mov
scas
sarl
push
cltd
call
movmskps
test
lods
outsl
sahf
xchg
stos
test
rol
loope
mov
push
pushf
rcll
jbe
fnstsw
int
adc
push
pop
int
mov
aaa
xor
iret
lahf
fs
xor
imul
mov
fcmovnu
jle
pop
pop
popa
rcrb
ss
test
lcall
aaa
cltd
adc
shlb
sub
or
in
add
test
lea
mov
mov
or
fldenv
popf
push
das
mov
push
jns
and
ds
adc
sahf
jge
ds
xchg
jno
push
pop
pop
push
inc
cmc
or
dec
insl
inc
je
int3
mov
test
mov
arpl
jecxz
nop
orb
add
pop
fldcw
push
and
int3
dec
jo
insb
inc
enter
in
mov
adc
xchg
pop
xchg
fcoms
fsubs
cmp
mov
les
fcmovbe
loope
repnz
jo
clc
xor
inc
jecxz
pop
inc
prefetch
or
sub
or
jg
add
out
inc
push
test
fwait
mov
push
adc
and
sub
mov
divb
in
jne
shl
fmuls
shlb
inc
nop
shl
fsubrl
jmp
lret
push
cmp
pop
fdivs
and
inc
ljmp
into
push
xor
fsubl
popf
repz
add
pop
leave
xchg
popa
xchg
shl
dec
sbbb
sbb
insl
push
fsub
pop
lea
mov
xchg
shrb
inc
orb
pop
push
lock
ljmp
idiv
push
jnp
insl
fimuls
insb
shlb
xchg
pop
jg
xchg
xor
jmp
scas
lret
pop
ja
clc
mov
sub
add
gs
mov
popf
fs
add
xchg
shll
jnp
pop
dec
out
jp
ja
and
cld
add
pop
xchg
inc
je
popf
pop
inc
cmp
dec
mov
xor
pop
xchg
mov
testl
mov
out
call
fimuls
test
subl
fsubs
sub
jle
mov
push
mov
sub
mov
sbb
popf
pop
bound
popf
gs
stc
enter
popa
add
imul
push
shrl
pop
cwtl
or
mov
imull
and
cmp
fcmovnbe
test
inc
inc
nop
mov
nop
adc
sub
cmpsb
clc
stc
js
test
out
scas
out
rcr
imul
mov
jb
dec
sub
shl
stos
or
pushf
sbbb
and
fldt
xchg
add
popl
jo
jle
pop
cli
ljmp
mov
xchg
dec
dec
adcl
lahf
addr16
mov
jnp
fwait
imul
lcall
sarb
mov
jo
lods
loopne
or
sbb
cmpsl
mov
sbb
sub
nop
xchg
in
out
jg
jp
in
mov
mov
mov
icebp
inc
sbb
jo
cmp
push
enter
mov
adc
mov
or
cmp
mov
mov
cmp
jne
hlt
add
iret
jmp
ss
mov
or
inc
cmpsb
icebp
lret
aaa
stos
push
jmp
cmp
jb
mov
dec
mull
xlat
iret
inc
mov
fstps
push
xor
sbb
scas
shrb
add
pusha
sahf
out
jecxz
jmp
clc
mov
mov
es
adc
dec
sbb
add
in
push
adc
xchg
shl
popf
scas
test
daa
push
inc
std
or
outsb
icebp
pop
cs
std
jno
lds
xor
lods
and
xorb
leave
psubb
pop
dec
fisttps
mov
push
es
iret
out
sbbb
adcl
inc
mov
insb
mov
pop
jno
lret
pop
pop
sub
sub
jle
ja
fcomip
push
test
nop
test
mov
popa
pop
cmp
gs
cwtl
mov
inc
pop
sbb
ja
pop
movsb
aad
repz
into
or
jmp
jle
pop
pop
lret
lret
cmp
movsb
jbe
mov
inc
ret
test
popf
cmp
cmp
out
daa
xchg
rcr
add
cmpsb
test
adc
xlat
mov
mov
pop
fwait
pop
and
popa
cltd
inc
repnz
adc
and
sbb
xchg
and
push
stos
lahf
dec
lret
popa
xor
sub
jo
pop
mov
dec
push
sarb
pop
enter
add
sub
andl
sbb
ret
sub
mov
fwait
mov
sbb
pop
pop
push
push
adc
dec
aam
das
int3
cld
mov
arpl
popa
enter
jno
aas
and
orb
dec
push
lods
int3
enter
and
push
andb
lods
imulb
lret
ret
pop
int
jge
or
imul
xor
mov
shl
insl
push
lds
sbb
call
dec
and
lods
loop
jae
push
aaa
cmp
ja
add
cmp
cmc
mov
push
rcl
xchg
jno
sbb
xor
push
mov
aaa
sub
mov
sub
xchg
xchg
lret
pop
imul
push
or
ds
push
dec
mov
xor
shll
pop
jbe
jmp
popl
add
addr16
daa
outsl
aad
std
jae
xor
jecxz
fs
ret
aas
jns
ss
pusha
push
lock
cwtl
and
icebp
aad
dec
lock
hlt
shl
outsl
loop
adc
fiadds
arpl
pop
fcmovnu
dec
pushf
add
cmp
scas
push
xor
pop
mov
divb
and
mov
orb
fsubrl
out
inc
push
mov
xchg
jb
stos
cwtl
sub
jp
ret
adc
mov
rorl
test
sahf
pop
pusha
adc
lahf
sub
icebp
or
jae
inc
push
cli
push
or
sub
pop
movsl
mov
orb
jg
ror
enter
jp
xchg
xor
jmp
push
dec
stos
and
cld
test
notl
andb
mov
dec
push
lahf
jbe
jmp
jns
push
push
popa
aam
xor
mov
cmp
mov
fwait
mov
mov
mov
adc
sbbl
movsb
clc
xchg
cmp
je
in
mov
add
fnsetpm(287
mov
lahf
ffreep
addb
out
aaa
inc
cmp
mov
push
out
hlt
stos
cmp
loopne
dec
std
dec
int3
inc
push
fdivl
mov
data16
inc
hlt
hlt
inc
popf
ret
loope
ficoml
movsl
mov
jle
das
mov
pop
scas
mov
pop
add
push
jb
lret
inc
dec
jp
add
xchg
dec
mov
jae
pop
jno
xchg
cmc
outsl
push
mov
shll
rolb
adc
mov
fwait
sub
dec
xor
xor
dec
popa
mov
xchg
outsl
out
mov
out
je
add
sarb
dec
std
sub
pusha
into
imul
xchg
call
inc
outsl
ss
dec
jbe
lahf
lret
cld
stos
ss
arpl
sahf
jl
clc
xchg
inc
lret
das
cmpsl
aad
xor
rcl
inc
test
mov
subl
shrl
gs
cmp
inc
push
rcr
popa
popa
test
mov
dec
sar
loope
imul
xor
cltd
test
adc
xor
mov
inc
int3
dec
mov
pushf
aaa
iret
das
mov
or
xchg
out
sbb
aaa
mov
mov
push
mov
js
push
sub
cmpsl
jecxz
mov
loopne
test
lods
into
xchg
mov
enter
jmp
cmp
cmp
vpmuludq
negl
push
mov
xchg
cmp
and
pop
fucomi
pop
shr
lods
push
movsl
mov
push
or
sbb
push
fmul
pop
movsb
xor
test
sub
cltd
aaa
out
test
pop
std
lret
pop
mov
pop
cmpsl
mov
into
and
jns
popa
stos
lods
bound
les
xor
dec
pop
aad
xchg
push
and
sahf
aaa
push
push
mov
scas
mov
cli
mov
fucomip
mov
adc
pop
or
inc
in
sbb
ret
push
cwtl
into
and
imul
fnsave
jg
cmp
cmp
shl
inc
jmp
sbb
add
out
adc
sub
inc
ret
sbb
aaa
jnp
jmp
cmovp
jge
fnstcw
decl
dec
inc
inc
adc
lcall
jo
les
sbb
lea
fwait
xor
fiadds
loop
scas
mov
inc
and
cmpsl
shll
lret
or
inc
cwtl
mov
rcrb
test
into
jae
xchg
pop
mov
xor
mov
mov
push
loop
sti
or
fs
cwtl
stos
and
fs
lret
inc
fcomps
xor
dec
pop
call
es
inc
cmp
push
rcl
movsl
ficomps
pop
cmp
lock
mov
stos
dec
mov
int3
sarl
sub
neg
idivb
mov
or
mov
mov
test
lock
mov
mov
ljmp
sub
bound
les
mov
dec
mov
gs
inc
or
jo
into
into
add
mov
pop
aad
cmp
inc
jno
enter
in
lods
mov
in
and
insb
jecxz
daa
fwait
and
mov
popa
insb
dec
sub
fdivl
dec
mov
test
sub
push
push
loope
mov
xchg
sbbb
mov
insb
imul
pusha
push
or
jg
pop
test
loope
out
in
test
repnz
pop
jp
stos
addr16
xor
mov
lret
fisubs
testl
or
mov
stc
dec
in
int
or
inc
ja
push
or
mov
and
mov
xchg
hlt
jb
outsl
lds
stc
out
xchg
xor
rorl
aaa
jg
cmp
insb
jne
jns
addr16
sbb
pop
mov
test
std
loopne
rorb
ds
mov
and
add
mov
lcall
testb
out
sahf
push
mov
add
out
pop
xchg
pusha
ja
fcomps
sbb
in
rolb
data16
stos
push
mov
daa
into
scas
aaa
mov
dec
arpl
mov
scas
popf
xor
or
aam
ds
xchg
jbe
cmp
fcoms
sbb
cwtl
stc
scas
sub
fcoml
adc
mov
add
mov
jnp
repz
lods
cmpsl
es
xor
insl
dec
push
repnz
adc
xchg
sbb
hlt
fidivl
stos
sub
sarb
iret
sub
repnz
inc
sbb
mov
sub
dec
les
adc
add
unpckhps
fwait
xchg
push
repz
stc
mov
lods
xlat
sub
or
arpl
bound
je
ds
cmp
je
add
or
aaa
addr16
aas
xor
and
int3
ljmp
std
call
and
xor
clc
sbb
dec
iret
adc
addps
pop
push
ficomps
flds
shlb
ret
cmp
aas
repnz
adc
daa
jg
mov
fwait
pop
nop
pop
xchg
inc
notb
iret
cmp
mov
or
nop
mov
mov
cmpsb
fwait
xchg
sti
mov
push
clc
add
out
hlt
mov
pop
es
cltd
stc
dec
xchg
cwtl
gs
leave
mov
add
pushf
mov
xor
in
sbb
mov
fnstenv
mov
add
cmp
dec
notl
jp
jle
jns
mov
rclb
dec
xor
mov
fs
sub
stc
mov
js
mov
mov
fsubr
lods
pop
popa
adc
mov
add
xor
xchg
inc
test
aaa
loop
inc
sahf
mov
xchg
pop
pop
xlat
xchg
pop
dec
ljmp
fnstcw
outsb
mov
xor
arpl
dec
xchg
push
mov
xor
cld
lods
mov
int
cli
lods
xor
push
sub
dec
test
sub
jge
push
cmpsl
in
in
in
push
and
pop
jle
inc
aas
pop
add
enter
pop
outsl
xor
and
adc
stos
jg
inc
push
dec
cmp
mov
add
pop
sub
or
loope
sbb
es
jns
cmc
les
cmc
mov
lods
test
jmp
cmp
les
jns
out
in
outsl
ret
jl
nop
iret
xchg
xor
pop
in
fildll
test
movsl
or
aad
test
pop
xchg
stc
das
pop
lret
sbb
je
push
fisubrl
iret
cmp
test
mov
xchg
push
stos
xchg
mov
xchg
pop
pop
jnp
scas
mov
dec
dec
fwait
jg
adc
push
jb
insl
daa
jg
sub
xlat
es
orb
fbstp
mov
sbb
into
loop
mov
in
popa
std
ficoml
adc
fcoms
inc
sub
out
mov
mov
jp
push
lret
xchg
jg
pop
inc
sbb
loopne
sub
mov
jno
mov
jne
inc
fsincos
cwtl
nop
xchg
pop
aas
aad
mov
mov
scas
cmp
mov
mov
mov
int
xor
cmp
aaa
rcrl
sbb
mov
mov
pusha
daa
or
outsb
cmp
mov
adc
push
mull
cltd
sbb
pop
ljmp
pop
clc
cmpl
test
stc
popf
mov
dec
mov
and
arpl
xchg
test
push
and
and
inc
ljmp
lcall
addl
mov
xor
aam
jle
leave
mov
aas
je
xchg
dec
arpl
pop
js
pop
or
cmp
gs
ret
dec
movswl
scas
stos
js
stc
sub
xchg
xchg
mov
popf
fs
mov
repnz
in
sbb
push
jle
jnp
adc
loope
pop
pop
sarl
in
fdivrl
test
add
mov
fmull
aam
jmp
sbbb
cmpsb
aam
cmpl
daa
stos
mov
dec
es
loope
cmp
ss
scas
loopew
rcrl
mov
pcmpeqb
xorl
jo
dec
dec
lahf
sub
or
push
add
stc
stc
lods
xchg
inc
repnz
cmc
and
inc
iret
sbb
pop
outsb
fsubrl
pop
pop
jecxz
xor
mov
inc
addb
fbld
cli
mov
loopne
rolb
andb
pop
xor
mov
or
or
test
xchg
loope
into
add
lods
dec
cmp
mov
jo
push
sbb
test
xchg
xor
loop
or
push
sahf
xchg
jp
mov
fadds
adc
inc
scas
sbb
setae
lods
adc
addr16
out
push
lret
jnp
mov
out
xor
mov
fs
call
push
loopne
add
cli
pop
mov
mov
cmp
fnstsw
es
gs
inc
sbb
mov
into
sbb
cmp
in
xor
in
sbb
lds
mov
sbb
pop
sarl
dec
jno
push
lods
or
mov
jg
je
je
lret
dec
pop
or
std
in
xor
or
int
dec
cmpsb
sbb
sub
mov
pop
adc
shl
outsb
js
add
jl
int3
out
sbb
out
shrb
xchg
negb
jp
sub
stos
movsl
mov
pushf
fcomi
fucomp
imulb
push
cli
dec
jb
je
adc
jmp
mov
pop
pop
cmpsl
dec
aaa
mov
out
lahf
pop
bnd
xor
out
pop
mov
mov
cmpsl
xor
inc
dec
mov
or
push
stc
or
mov
mov
gs
or
leave
dec
pmaddwd
outsb
in
fwait
cmpsl
les
push
mov
fstps
mov
insb
sahf
sub
push
fidivrl
test
scas
aas
jecxz
and
dec
cwtl
test
mov
mov
mov
and
roll
lret
inc
and
or
imul
mov
mov
repnz
mov
shrb
stos
jno
mov
or
outsb
jg
adc
and
lret
inc
or
adc
daa
adc
inc
pop
jnp
or
push
or
adc
fs
and
mov
xchg
mov
and
dec
xor
mov
insb
je
rolb
mov
push
xchg
aam
and
mov
mov
jne
mov
push
dec
mov
cmpsl
call
ss
sub
lret
and
dec
push
daa
mov
dec
ficoms
in
dec
inc
and
cltd
push
adc
push
clc
jbe
call
scas
es
out
cmp
inc
int3
push
push
mov
xor
mov
test
mov
jbe
les
pushf
or
roll
out
push
daa
cmp
scas
in
cltd
or
sbb
ja
push
cmp
jo
aaa
int
mov
adc
or
int3
cmp
clc
jo
pop
roll
scas
clc
in
pop
lcall
pop
inc
adc
faddl
fdivs
rcrb
or
xor
jno
das
inc
sbb
mov
mov
popa
in
fnstenv
adc
ss
lret
xlat
fisttpl
inc
and
stos
lret
fcomi
pop
rcrb
jecxz
arpl
pusha
sahf
je
test
sub
xor
add
sub
dec
adc
hlt
stc
and
insb
cli
adc
mov
outsb
mov
push
insb
push
lret
push
stc
add
shl
daa
in
rolb
out
cs
leave
add
lock
stos
fdivrp
cmp
pop
out
inc
iret
les
cs
mov
sub
sub
jle
inc
dec
adc
cmc
cli
cmp
mov
cld
mov
mov
mov
or
sbb
mov
scas
add
cmpsl
rcl
pop
cmpb
test
add
or
mov
dec
push
enter
mov
xor
aaa
mov
xor
push
fildll
cltd
dec
push
lods
fdivrl
cs
and
adc
add
pop
icebp
std
ds
cli
mov
ret
shll
rcll
pop
ret
js
cmp
dec
fisttpl
inc
push
inc
xor
inc
inc
movl
bound
push
mov
push
aas
adc
fwait
add
cmp
cmpsl
pop
int
ja
xchg
dec
lea
xchg
jecxz
xor
sbb
xor
cmp
inc
push
sbb
cmp
clc
cmpsl
pop
test
fidivs
das
aas
scas
dec
sbb
mov
ljmp
es
pusha
aad
shrb
cs
dec
add
in
and
jmp
inc
cmpsl
sub
addr16
inc
out
mov
jae
or
ficomps
xor
repnz
mov
test
xor
push
rorb
cli
inc
jns
mov
dec
rclb
dec
xchg
lds
addr16
add
add
popf
lret
add
call
cmp
ret
pop
icebp
sbb
fisubs
scas
sbb
or
pop
int3
xor
ret
into
lea
pop
inc
dec
movsb
sti
jns
fldcw
insb
and
jg
cmpsl
jmp
cwtl
xorb
int3
add
mov
rorl
adc
pop
dec
cmpsl
pop
fisubrs
ret
cmpsb
mov
pop
and
jmp
icebp
mov
xchg
xchg
test
jge
inc
jns
ja
les
inc
xchg
xor
dec
or
adc
shr
cmp
js
inc
sub
sbb
es
fcmovnbe
xchg
mov
cli
pop
hlt
ja
test
add
dec
dec
inc
sub
rcll
loop
add
add
in
jne
mov
sbb
fsubrs
and
jnp
inc
pop
in
sarl
movsl
gs
cmp
lds
fbstp
and
push
inc
mov
mov
and
in
cs
cmpsb
adc
jmp
cli
pop
scas
jbe
cmpsl
mov
in
push
xor
mov
imulb
inc
adcb
mov
mov
inc
mov
mov
loop
cmp
inc
lret
sub
lods
jbe
stc
jno
add
aam
cmpsb
jnp
add
lcall
xchg
adc
xchg
mov
outsl
mov
xor
cmp
popa
mov
sbb
fsubrp
outsl
dec
pop
add
mov
insl
and
sbb
mov
cmp
adc
mov
mov
cmp
je
push
into
in
js
gs
int
ss
mov
jbe
adc
stos
in
xor
lds
mov
aas
test
gs
or
xchg
out
sub
add
daa
sbb
out
cmpl
mov
pop
pop
inc
movsl
mov
push
mov
lret
imul
lock
cvtps2pi
xchg
std
jp
and
adc
adc
xchg
orl
sbb
sbb
testl
push
push
dec
loopne
addr16
rolb
imul
daa
popa
dec
pop
js
jg
jnp
push
loope
jns
lds
cld
mov
add
xlat
subb
cmp
cltd
add
add
push
scas
ja
out
fstpt
mov
mov
outsb
jns
shll
or
shlb
inc
xor
pop
fmuls
leave
mov
les
mov
pop
dec
mov
push
imul
hlt
push
xchg
nop
outsl
pcmpeqd
mov
lret
and
add
pop
xchg
push
xchg
adc
sbbl
les
sbb
or
pop
jne
lea
or
pop
pop
ja
xchg
fisttps
mov
dec
das
xchg
data16
add
lds
sbb
xchg
mov
inc
mov
cltd
scas
mov
xor
cmp
jae
push
lods
and
xor
in
ret
sbb
mov
jmp
sbb
add
and
or
mov
hlt
add
cmp
fisubl
in
cmpsb
repnz
inc
adcl
iret
aam
xchg
pop
adc
or
dec
les
call
into
je
inc
and
hlt
jg
iret
loopne
das
pusha
inc
loope
clc
jmp
inc
pop
out
adc
xor
call
ds
nop
push
add
push
fisubrl
cli
es
aam
mov
insl
and
pop
lock
cmp
cwtl
mov
mov
lea
ret
pop
enter
jmp
dec
adc
pop
enter
pop
push
pop
insb
pop
jecxz
enter
inc
fmuls
xchg
ljmp
pop
push
iret
flds
xchg
or
jne
dec
xor
xchg
bswap
es
stc
cmp
cli
movsl
sbb
insb
imul
negl
test
ds
gs
cmp
movsb
inc
pop
sbb
and
outsb
cmp
out
mov
enter
dec
mov
out
sahf
out
enter
aad
insl
lret
div
rcrb
js
iret
push
aas
cmpsb
dec
pop
fsubl
arpl
xor
int
leave
loopne
andb
inc
mov
lcall
dec
and
xchg
insb
jl
inc
push
xor
sub
popf
xor
idivl
inc
mov
cmc
cmp
inc
pop
inc
sbb
dec
fstpl
cmp
loopew
dec
outsb
fwait
pop
mov
mov
cmpb
cmp
rcl
bswap
sub
push
add
lret
lea
adc
ss
test
mov
lock
or
mov
sti
js
adc
cmp
jae
cmc
data16
fs
mov
push
lcall
popf
mov
int
fstpt
aaa
lcall
aas
js
xor
fdivp
stc
pop
outsl
in
jns
rolb
mov
xchg
leave
xor
jl
arpl
pop
stos
jg
daa
addl
cld
dec
cmp
aaa
pop
push
pop
xchg
nop
frstor
ja
and
shrb
mov
repz
jmp
inc
xchg
mov
push
sbb
fisubl
push
mov
popa
aaa
inc
pop
and
jecxz
leave
std
aas
lock
popa
add
out
mov
push
gs
lods
ret
sub
mov
out
dec
push
pusha
fldt
or
outsl
loope
cmp
xor
outsb
popf
push
pop
sbb
cwtl
xor
or
addl
mov
pop
inc
popf
enter
xor
loope,pn
in
popf
outsl
imul
shll
cltd
sbb
dec
movsl
sbb
stc
cmp
and
jle
enter
repz
jle
int
sub
fmuls
ret
cmpb
xchg
rcl
dec
add
jae
jnp
inc
lds
ja
das
aaa
and
dec
push
cmp
dec
std
adc
or
xchg
dec
push
fstl
mov
mov
nop
mov
cld
mov
nop
sbbb
mov
add
aad
repnz
ret
rolb
jae
jg
mov
cwtl
xor
jmp
push
adcb
insb
ds
pop
js
cmp
cli
jns
jne
je
cmp
xchg
and
das
or
adc
pop
pop
adc
pop
les
mov
cmp
mov
stos
xchg
loopne
or
mov
pandn
xor
cmp
push
test
shlb
xchg
cs
mov
cld
mov
loopne
pop
gs
cmovne
icebp
mov
dec
sbb
ret
cwtl
inc
ds
sub
or
push
mov
popf
or
daa
ret
ret
cwtl
fs
test
sete
loop
pop
cwtl
mov
mov
push
push
in
bts
sbbl
int
filds
mov
mov
repnz
ret
xor
hlt
mov
push
and
jo
pop
adc
popf
insb
pop
sti
scas
xchg
fwait
dec
mov
lods
xchg
cmc
stos
sbb
call
movsl
xor
fnstenv
mov
and
imul
out
cmp
or
popa
xchg
ljmp
scas
xchg
inc
jne
in
cmpl
dec
and
adc
jmp
jg
or
fmull
push
cmp
xor
gs
mov
ret
scas
xchg
mov
push
and
xorl
cmp
movsb
jb
mov
pop
sbb
mov
lcall
lret
es
mov
movsb
je
or
stos
daa
add
sub
cmpsl
gs
and
or
push
nop
add
and
mov
mov
imul
je
fwait
push
sbb
xchg
nop
lcall
adc
vphaddbd
leave
mov
or
into
outsb
mov
aad
iret
fdivs
inc
jo
xchg
lods
add
mov
inc
fwait
loop
hlt
popl
sub
inc
gs
fnstsw
sbb
shl
jg
jbe
stos
idivb
fs
ljmp
mov
mov
dec
xchg
adc
cmpl
mov
lret
inc
in
xor
jno
imul
sbb
pop
sbbb
inc
cmp
pop
bnd
xor
je
dec
mov
cmp
mov
mov
cmp
xor
in
and
jo
int
pop
xor
or
and
or
lods
insb
mov
jmp
mov
dec
xchg
arpl
rclb
test
ret
cltd
jmp
inc
jnp
add
stos
jle
inc
lahf
outsl
cltd
gs
ret
pop
inc
push
cli
adc
or
push
cs
and
mov
jo
imul
gs
push
out
jns
sbbl
and
rclb
jmp
push
sbb
loope
or
sti
popf
cs
std
leave
pop
pop
cmp
mov
call
mov
int3
sbb
hlt
out
add
imul
push
mov
fmull
cmp
out
mov
mov
jmp
lea
cmpsl
xlat
inc
data16
inc
and
jb
popa
ds
loopne
loope
pop
ja
dec
imul
dec
push
xchg
sub
testb
loope
push
add
aad
xchg
cltd
mov
pop
addl
push
jns
mov
push
int3
ret
rolb
mov
sbb
mov
shr
pop
rorb
adc
mov
loopne
mov
xor
xchg
dec
cmp
outsb
inc
jb
sub
add
dec
mov
jne,pn
icebp
nop
dec
loopne
in
sbb
adc
pop
ficoms
sub
adcb
jbe
inc
shll
mov
jecxz
push
sbb
mov
insl
pushf
pusha
loope
repnz
dec
pushf
jl
dec
inc
xchg
sub
cli
aas
shlb
pop
sub
aad
cltd
lret
roll
sbb
cli
aaa
test
ja
jns
pop
dec
cltd
xor
sahf
sti
jge
cmp
xchg
xor
test
xchg
xor
ljmp
addr16
in
sub
add
scas
out
and
popa
push
outsb
insb
or
sti
sub
repnz
push
mov
mov
lea
push
bound
inc
jg
fnstenv
adc
jmp
jb
out
or
outsl
mov
mov
add
shrb
shrb
xchg
fwait
inc
lods
jo
push
push
out
loope
jge
pop
dec
sbb
out
pop
jne
and
popf
and
mov
in
repnz
sbbl
in
addr16
ja
lds
repnz
mov
sbb
roll
mov
dec
mov
sbb
popf
psraw
mov
adc
mov
and
nop
psrlw
stc
lds
cmpsb
out
loope
stos
aad
xor
jecxz
push
inc
and
sbb
sub
inc
adc
aad
stc
adc
cwtl
and
and
andl
in
xlat
pushf
lret
pop
subb
add
sub
adc
insb
push
jecxz
xor
sub
je
mov
dec
xlat
inc
iret
mov
or
fcmovu
gs
xchg
pushf
aad
ret
dec
enter
mov
cmp
lods
stos
in
aam
in
leave
aad
popf
dec
jp
jmp
cmpsb
shl
punpcklbw
cwtl
inc
int
jne
pop
cwtl
cwtl
int
jne
mov
mov
sarb
push
daa
pusha
push
dec
cmp
inc
daa
mov
sarb
adc
mov
aas
call
cld
popa
stos
push
sbb
mov
cltd
mov
addb
pushl
mov
and
or
adc
nop
jp
out
lea
movsb
aad
push
or
cmp
sbb
and
and
and
mov
int3
pop
fisubl
or
fwait
dec
xlat
or
pop
aad
xlat
sbb
repnz
stos
push
clc
xor
fsubl
lods
mov
push
aaa
push
arpl
sahf
lret
enter
out
mov
imul
mov
xor
jmp
enter
and
mov
mov
push
adc
add
aas
dec
add
cld
jae
xchg
sbb
or
das
in
push
cld
jb
daa
aam
mov
iret
or
cmpsl
cmpsb
dec
mov
arpl
xchg
mov
test
scas
cli
cmc
xchg
xor
jmp
push
in
scas
jo
dec
insl
mov
jno
push
adc
dec
jbe
outsb
fnstcw
mov
lret
stos
jg
push
pop
jnp
loope
mov
repz
scas
mov
mov
in
sahf
sahf
addr16
fwait
rolb
pop
test
sub
lret
dec
sub
out
mov
jo
outsb
pmulhw
sub
xchg
nop
sub
push
jb
loop
inc
mov
outsb
cmc
push
jnp
std
out
cli
adc
loopne
lds
out
jno
leave
jns
out
rcl
sbb
daa
test
scas
incb
sahf
ret
enter
mov
adc
clc
jl
aad
add
hlt
lds
jo
rcll
inc
mov
test
stc
push
pushf
lock
adc
pop
mov
fadds
mov
iret
mov
repz
fiaddl
mov
jae
cmp
xchg
ret
pop
jmp
and
pushf
rcrl
push
mov
mov
test
xchg
out
popa
inc
sahf
lock
jle
inc
stos
add
adcb
mov
cmp
xor
loopne
daa
wbinvd
xor
ss
push
and
xchg
rcrl
test
cmp
xchg
push
out
in
jmp
movb
stc
test
aas
pusha
jne
test
inc
push
mov
mov
jg
in
decl
lcall
mov
dec
or
cs
jmp
push
pop
xchg
popa
jne
or
and
cli
add
inc
pop
mov
xchg
pushf
pop
mov
sub
pop
icebp
mov
mov
mov
pop
in
ljmp
mov
in
adc
adc
mov
sti
test
lahf
dec
adc
je
ss
lahf
or
or
mov
sahf
stos
movb
testb
jp
lds
push
fs
cmp
rcrl
push
aad
jp
mov
ret
mov
stc
and
mov
jp,pt
fcmovnu
pop
dec
xor
adc
shll
adc
sbb
mov
push
mov
scas
jg
sub
mov
sbb
aas
cmp
and
sub
out
in
std
push
sub
not
out
mov
pop
mov
inc
push
adc
enter
push
loopne
aaa
ja
sbb
jnp
in
jo
cmp
pop
sbb
push
sub
push
dec
add
sub
inc
jbe
pop
scas
adc
sbb
les
push
push
push
bound
mov
sub
inc
sub
ss
enter
mov
and
aad
mov
mov
mov
rolb
push
mov
inc
sub
cli
shll
mov
jae
imul
in
xor
xor
js
add
jne
mov
cmp
out
sub
lea
xor
push
pop
roll
data16
ljmp
cmp
gs
xchg
push
dec
sbb
arpl
sbb
xchg
shll
fwait
popa
add
int
xor
inc
push
test
sub
fnstenv
jo
sti
movsb
mov
fs
pop
xchg
cli
repnz
push
mov
stos
pop
aad
or
arpl
sbb
outsb
dec
std
decl
mov
test
call
add
test
jo
frstor
popa
and
jnp
movsb
sbb
sub
xchg
in
sbb
lods
mov
cmp
test
cmp
pop
jl
loope
roll
movsl
or
jne
sub
jecxz
mov
out
sub
mov
adc
out
lret
dec
ds
inc
jbe
insl
push
pop
push
xchg
jg
dec
adc
mov
dec
inc
cmp
dec
mov
push
sti
pop
jae
fwait
xor
fistpll
pop
in
aam
lods
xchg
xchg
lods
xchg
fists
pop
cmp
icebp
add
in
addr16
ljmp
fadds
adc
dec
push
aam
dec
lock
mov
loop
in
jle
nop
adc
mov
sub
push
jle
push
pop
sbb
mov
cmp
mov
xor
loopne
sub
or
xchg
mov
and
push
cs
pop
popf
cwtl
call
xor
dec
loop
nop
mov
adc
lahf
xchg
in
inc
rorb
fsts
les
jecxz
imulb
flds
push
imul
sub
frstor
fs
sbb
cmp
sbb
jo
xchg
ss
dec
sti
call
dec
inc
xor
js
sbb
sbb
xchg
rclb
pop
sub
adc
mov
movb
cmp
pop
xchg
daa
and
cmp
jg
jle
sti
out
dec
dec
repnz
inc
and
sub
out
ret
xor
push
lcall
enter
loope
and
inc
int
xor
add
ret
mov
popf
rolb
jecxz
rcrb
movsb
adc
lods
imul
cli
imul
push
fcoml
ret
ja
dec
pop
outsb
jge
xor
pusha
ret
cmovp
rorb
popf
adc
xchg
dec
mov
ja
into
mov
jbe
mov
or
sbbb
test
pop
ret
dec
lahf
popa
pop
add
addr16
in
movsl
test
mov
cmp
fisttps
lahf
iret
dec
pop
js
push
popa
cmp
mov
mov
push
out
or
push
sbb
jmp
int
test
scas
pop
test
dec
icebp
push
aam
cmp
outsl
fsubr
mov
and
call
iret
leave
mov
inc
es
test
xor
repnz
jg
sarb
ja
pop
mov
mov
pusha
jmp
dec
mov
mov
out
add
pop
lods
mov
and
mov
sub
mov
ja
pop
xchg
outsl
call
pushf
adc
das
mov
pop
fisttpl
sti
shll
adc
cmc
sahf
popf
add
jmp
aam
popa
dec
and
jne
pop
cmpsl
jecxz
scas
daa
test
cwtl
mov
xchg
jl
xor
and
xor
pop
mov
outsl
fwait
jg
lret
ret
or
mov
and
dec
dec
imul
fildl
xchg
push
push
pop
or
lahf
mov
adc
cmp
mov
out
movsb
cmp
dec
out
mov
mov
xchg
aaa
fsubr
xor
mov
adc
stos
repnz
push
or
sub
sub
in
or
ja
cmp
shl
cmpsb
xchg
inc
fwait
sbb
out
insb
icebp
xchg
divl
into
mov
test
lret
jo
aaa
imul
dec
cmp
loopne
push
cmp
inc
inc
outsb
movsl
fidivs
mov
scas
stos
inc
mov
or
xor
xchg
adc
xchg
inc
sbb
pop
cmp
jp
mov
ds
pushf
add
mov
inc
add
ss
sub
loopne
jnp
inc
xchg
pop
dec
in
ds
add
lcall
xchg
push
loope
stc
mov
adc
popf
stos
inc
fwait
mov
cld
mov
mov
je
xchg
xor
jnp
mov
aad
sub
sbb
repnz
adc
pop
xlat
enter
lock
mov
or
adc
jle
in
aaa
shrl
jmp
stc
push
lock
push
out
movsl
stc
and
loope
xlat
fs
dec
sti
aas
cmp
pusha
std
mov
xchg
dec
test
sub
pushf
and
pop
sbb
jbe
jmp
and
sbbb
add
or
or
and
shl
lret
dec
dec
fmull
mov
stc
mov
rcl
xlat
shlb
or
out
push
mov
inc
mov
sti
in
loopne
add
lock
je
fimull
js
notb
and
je
ds
sub
lds
inc
push
inc
nop
push
jo
jno
sub
mov
mov
gs
and
xchg
xchg
lret
fs
push
push
mov
push
mov
cmc
xchg
popf
bound
rol
add
idivl
gs
bound
pop
mov
xor
sbb
pushf
repz
icebp
mov
pop
and
cmp
sbb
push
inc
add
jno
lahf
shlb
sub
in
fsubrs
mov
in
push
mov
cmpsl
lcall
dec
sbb
das
incl
pushf
add
mov
jo
xchg
pop
jl
fisubs
and
les
pop
or
sbb
nop
bound
dec
cmp
xor
sub
iret
adc
std
inc
jnp
mov
push
mov
gs
pop
stc
in
adc
adc
mov
inc
cmp
pop
dec
loope
ds
add
or
push
mov
dec
orl
subl
xchg
or
cmp
push
rorb
mov
xor
insb
dec
dec
push
xchg
or
les
sahf
pop
pop
mov
add
loop
or
imull
adc
data16
push
out
loope
mov
faddl
fucomi
cmp
addr16
in
cmp
loopne
sub
push
or
out
jge
inc
add
ljmp
dec
jl
pop
cld
int
add
nop
in
sub
pop
lods
mov
adc
jge
jmp
cmpsl
cltd
ficompl
push
mov
sahf
icebp
cmp
mov
xor
dec
imul
jecxz
dec
dec
dec
add
pop
fidivrl
sub
mov
bnd
loop
and
cmp
pop
xor
pop
dec
addr16
mov
aas
push
pushf
pop
cmpsl
pop
push
icebp
jb
and
imul
adc
push
cmpl
jno
ret
add
push
ret
push
rcr
adc
adc
pop
sbb
call
pop
daa
popf
push
repnz
cmovp
jl
add
adc
dec
pop
mov
test
in
mov
inc
outsl
stos
mov
adc
cmc
repnz
int
clc
mov
bound
mov
mov
stos
sbb
or
mov
cld
or
xchg
repz
nop
add
sub
arpl
imul
inc
mov
addr16
es
in
clc
adc
mov
lahf
add
test
test
cmc
dec
xor
mov
jle
int
arpl
pop
cs
shl
mov
out
lahf
adc
repz
mov
jp
add
mov
xor
cltd
inc
adc
pop
ss
and
jmp
ss
shrl
jnp
outsl
lea
adc
repnz
jp
int
fidivl
imul
cmp
inc
fs
mov
or
mov
es
mov
cmp
xchg
mov
jge
sbb
mov
ficomps
add
out
and
xchg
cmp
mov
or
xor
scas
xchg
pop
xlat
jp
xor
cmp
std
aas
dec
or
xor
sti
pop
mov
pop
mov
sub
cwtl
mov
out
pop
inc
jb
lods
call
icebp
cmp
pop
xchg
inc
inc
fldcw
and
fisubrl
leave
aas
dec
mov
clc
test
shlb
xchg
call
xchg
les
add
or
outsl
sub
push
lret
std
dec
pop
push
into
mov
loopne
xor
jo
cld
call
push
icebp
push
push
fwait
mov
mov
je
js
cmp
paddw
call
imul
or
inc
push
testl
std
mov
out
or
addr16
cltd
sub
cmpb
xchg
jl
cmp
mov
stos
insl
ljmp
fisubl
cltd
lcall
out
cmp
jp
push
and
dec
push
mov
lods
or
push
jge
adc
in
cmpsb
mov
fstpl
sub
cmp
mov
mov
out
cmp
dec
cmpsl
popa
ja
gs
aam
adc
xor
shr
jg
xchg
adc
or
cmpsb
fdivs
fcoms
aam
stos
mov
mov
mov
lods
xor
das
pop
mov
cld
scas
add
loope
fwait
xorb
ja
and
jg
loop
stc
jp
sbb
test
inc
shll
dec
rcrb
lret
pop
dec
lods
lret
mov
xchg
mov
lret
sub
cmp
sbb
ljmp
lcall
mov
lods
mov
add
das
jle
add
push
push
jg
dec
inc
ja
sbb
add
sub
pop
mov
outsl
mov
pop
es
daa
mov
and
push
or
decb
enter
jnp
sbb
adc
fdivr
fs
fstpl
xchg
scas
pop
into
in
orb
mov
notb
aad
sbb
push
in
cmp
mov
popf
fwait
bound
adc
mov
pushf
aam
popa
and
jne
sahf
cmpl
sar
xor
pop
loop
xchg
cmp
aas
pop
mov
in
test
aaa
push
cmp
clc
aas
cs
adc
movsl
jl
pop
pop
push
jl
fcmovbe
jmp
inc
xchg
jecxz
dec
mov
fidivl
or
inc
jp
jg
out
lcall
into
xorl
daa
jb
mov
sub
dec
sub
xchg
mov
jne
inc
ficompl
jbe,pt
xor
je
loop
jo
imul
mov
cltd
cmpsb
jbe
daa
and
push
pop
fdivs
inc
aaa
dec
sahf
fxch
std
fnstenv
jns
mov
dec
and
sahf
adc
insl
test
push
lahf
lahf
aaa
cli
fstpt
ljmp
decb
into
or
stos
ljmp
and
pop
and
fs
dec
icebp
sbb
std
out
xorb
pop
xchg
add
pop
insl
mov
mov
cli
lock
mov
adc
inc
jle
push
lods
rcll
stos
lock
imul
jl
push
sbb
test
sbb
jbe
xchg
arpl
adc
pop
sub
lods
xor
push
cltd
xor
mov
xor
mov
scas
test
stos
sbb
ss
add
and
pop
push
sub
mov
xor
aam
mov
nop
mov
and
int
push
xor
ds
pop
dec
bound
push
scas
adc
lret
pop
aam
into
es
xor
test
sbb
mov
not
xor
aad
dec
dec
mov
sbb
jo
xchg
aaa
test
dec
inc
cmp
cltd
mov
lahf
shlb
cmovg
mov
pop
testl
inc
movsl
xor
out
cmp
adc
inc
or
add
push
es
test
jecxz
int3
into
or
add
das
sbb
popa
dec
mov
jmp
xor
fwait
aaa
mov
jns
mov
jge
cwtl
pop
and
mov
cmovno
dec
mov
dec
leave
sbb
push
sub
push
lods
divb
jmp
ss
mov
pop
out
adc
shll
das
dec
xor
adc
test
jge
push
arpl
or
sub
ret
pop
out
lahf
or
mov
hlt
je
mov
in
mov
inc
jo
and
push
and
xor
and
pop
enter
scas
movsl
lds
sub
push
mov
sub
fisttpl
or
repnz
dec
pop
imul
push
cmp
adc
repz
int3
scas
pusha
jnp
pop
push
pop
dec
adc
arpl
pop
test
scas
lcallw
sub
pusha
in
jle
hlt
sbb
out
dec
mov
pop
imul
into
push
mov
outsb
mov
shll
or
xchg
in
lcall
mov
ret
test
add
sbb
fcomi
cmove
int3
jno
loop
call
ret
cmpl
mov
xchg
leave
lret
loopne
int
mov
mov
pop
mov
mov
push
ja
dec
in
add
shl
and
xor
cli
aaa
enter
adc
mov
pop
hlt
xchg
addr16
not
or
enter
aam
mov
movsl
mov
fwait
mov
out
ds
fwait
cmc
repz
movsl
dec
mov
lahf
push
test
popf
dec
push
pushf
stos
sbb
cwtl
mov
and
fcoml
pop
inc
lods
into
scas
dec
dec
lds
popa
xor
inc
int3
out
std
adc
add
inc
in
call
aad
in
inc
dec
push
loopne
mov
imull
loop
jge
outsb
push
push
iret
jne
pop
push
aad
fabs
bound
aas
dec
and
mov
mov
ss
push
cltd
cmp
inc
push
mov
dec
jo
add
inc
fiadds
and
hlt
adc
repnz
mov
mov
xchg
test
dec
insl
leave
xor
xlat
mov
jbe
push
mov
adc
aas
scas
es
nop
and
jne
call
mov
inc
mov
loopne
addb
test
enter
addr16
ljmp
jbe
sbb
incb
xor
lcall
xor
jnp
imul
aad
addb
jmp
fimuls
push
std
mov
xor
push
xchg
add
ds
jne
xchg
popa
xchg
dec
hlt
mov
int3
pop
push
dec
nop
popa
jo
dec
std
leave
cmp
xor
cmpl
cs
mov
adc
mov
push
pop
mov
xor
pop
stos
push
sbb
xchg
les
in
shlb
xchg
push
ret
pushf
push
subl
mov
mov
std
je
fdivl
leave
out
mov
sbb
sbb
and
test
enter
cmp
out
fistpl
inc
push
jnp
outsl
cmc
imul
mov
movsb
loope
das
in
pusha
adc
test
popa
xchg
xchg
inc
xor
pushf
fldcw
call
sbb
sbb
popf
leave
xor
adcb
lret
pop
cmp
pop
stos
xchg
mov
scas
push
jmp
js
add
sub
daa
scas
xorb
cmp
test
pushf
sti
mov
push
lret
sbb
fistps
push
xchg
inc
test
xorl
pop
mov
lods
fcompl
push
das
push
pop
xor
imul
push
mov
pop
xchg
sbb
or
jle
jge
cmpsl
mov
mov
stos
or
test
loope
stos
loope
sub
hlt
inc
push
fsubs
shll
jnp
sub
addl
pop
aaa
sbb
sbb
arpl
mov
scas
loopne
mov
jmp
lcall
sbb
fucomp
dec
ror
test
mov
cmp
addb
mov
xchg
loope
outsb
pop
or
scas
and
dec
cli
cld
jb,pt
mov
scas
sub
inc
add
stos
push
push
scas
stos
inc
out
and
sti
xchg
and
push
mov
cmp
enter
mov
mov
clc
add
sub
fistl
xchg
mov
sub
inc
sub
add
mov
nop
pop
imul
sub
pop
or
dec
pop
pop
adc
cs
cmp
and
ss
adc
dec
lds
out
mov
adc
push
xchg
loope
pop
outsl
jmp
sbb
or
mov
push
pop
es
ljmp
cmp
cld
out
push
or
sbb
cmp
pushf
fstpl
dec
xchg
xchg
loop
ljmp
movsb
mov
mov
fildl
sub
inc
push
xor
jg
scas
and
mov
xor
dec
addl
inc
cli
xor
pop
cmp
repz
aam
in
mov
ret
shlb
push
stos
cmc
xchg
insb
xor
data16
out
mov
mov
enter
clc
xchg
add
test
jno
inc
arpl
je
mov
in
xor
and
sub
aaa
sbb
pop
dec
in
mov
outsb
cli
sar
out
adc
pop
ficompl
inc
jae
fs
jne
gs
push
ficompl
pop
or
pop
test
popf
mov
pushf
test
adc
repnz
nop
jg
mov
out
cltd
sbb
cld
xchg
pop
mov
mov
mov
sbb
pop
cli
lret
sub
pop
data16
xchg
dec
jl
sbb
test
fwait
cmp
pop
or
scas
aas
mov
jge
or
push
push
in
addr16
inc
sub
mov
popa
pmaxub
or
adc
int3
and
and
jo
mov
sbb
inc
cmp
inc
loopne
scas
xchg
add
fucomp
mov
sub
cwtl
arpl
test
sti
jno
cmp
mov
outsb
adc
ss
mov
jb
scas
jb
or
pop
aad
xor
push
sub
mov
mov
add
cmp
and
aad
hlt
filds
cmp
adc
jb
xor
lret
or
mov
mov
sub
pop
nop
and
loopne
or
inc
inc
aas
mov
mov
lret
push
sbb
cs
in
enter
cmpsb
addl
xchg
push
sub
jle
cmc
xchg
sub
ja
dec
nop
xchg
inc
cmp
jae
sbb
and
aad
xchg
decl
jg
pop
fmull
sub
mov
enter
adc
ret
sbb
and
jmp
fcmovne
pop
dec
mov
sub
scas
xchg
nop
dec
xor
incl
mov
out
sti
jp
in
inc
add
add
hlt
scas
inc
or
ret
add
pop
cmc
popa
xchg
mov
js
imul
movsl
xchg
xchg
xchg
je
pop
push
mov
outsl
push
testl
icebp
mov
adc
jne
pop
xchg
lock
clc
pop
lea
sbb
nop
mov
sbb
ret
lds
imul
or
sub
sub
or
js
divl
in
ds
cwtl
lret
cmp
fs
fstpt
sub
cmp
cmc
jnp
add
push
dec
cld
mov
and
pop
scas
idivb
jo
pusha
stos
insb
imul
and
in
movups
sub
loopne
test
sub
movsb
lea
xor
pop
js
ljmp
fidivs
mov
ret
or
pop
mov
add
mov
addl
inc
mov
dec
sub
adc
add
stos
pop
fisubs
mov
adc
lods
lcall
push
and
add
dec
adc
mov
jl
cmpsb
sub
out
push
and
sub
inc
adc
inc
mov
das
mov
xlat
sbb
fwait
movsl
outsl
mov
pop
sbb
mov
lret
dec
jbe
sub
outsw
xchg
sub
xchg
inc
lret
mov
repnz
xchg
arpl
fwait
push
shrb
mov
mov
addl
add
add
mov
push
inc
add
js
mov
test
cwtl
gs
add
add
push
jg
xlat
jae
orl
fcmovne
add
movsb
push
les
cmp
lcall
jg
jns
and
pop
test
sbb
mov
sarl
adc
outsb
stos
xor
jo
inc
xor
les
loop
repz
stc
mov
xlat
rorl
push
test
push
addr16
sub
mov
imul
inc
sub
mov
icebp
mov
movb
into
add
ret
mov
adc
sub
cli
xor
repnz
adc
sub
mov
mov
ja
and
ds
inc
arpl
out
dec
adc
mov
jbe
stc
sbb
xchg
addb
cmc
cli
in
aam
jmp
cmc
ljmp
mov
pop
aad
xor
mov
jl
push
and
cmpsl
pop
sub
or
pop
gs
xor
ret
data16
daa
ss
call
pop
or
fistps
mov
sub
mov
xchg
adc
fdivrl
xor
xchg
hlt
addl
or
pop
and
pop
cmp
xchg
std
mov
jne
std
into
mov
data16
lcall
cmpsb
cs
sbb
mov
jbe
inc
sbb
data16
sarl
cld
sbb
pop
lds
stc
or
les
pushl
inc
pushf
sbb
add
cmc
hlt
stos
cmp
push
fsubr
adcb
xchg
or
cwtl
hlt
mov
add
add
rorl
mov
lods
fidivl
mov
aad
inc
xchg
cmp
pop
inc
xchg
jb
jb
cltd
or
or
mov
mov
xorb
stos
dec
mov
add
addr16
xor
jne
out
aas
mov
push
push
sbb
shlb
add
xor
dec
stos
sbb
push
dec
ljmp
loopne
mov
pop
data16
sub
mov
jbe
inc
and
popa
inc
sbb
mov
jnp
loop
fidivrs
add
push
inc
jo
fimull
or
in
mov
jb
mov
stos
enter
fldenv
nop
ja
stos
and
jle
out
outsl
jo
pop
fisubl
fsubrl
repnz
pop
xchg
mov
outsb
cltd
daa
inc
mov
cwtl
enter
popf
xor
stos
jecxz
add
mov
arpl
f2xm1
mov
jge
aaa
adc
mov
addb
std
sbb
inc
lret
testb
test
jno
fs
mov
sbb
mov
lods
stc
loope
out
ret
fisttpll
loope
xor
xlat
aas
xchg
pusha
ds
cld
mov
mov
push
dec
xchg
das
int
dec
dec
mov
cs
mov
cmpsl
fisttpll
loope
mov
mov
inc
icebp
andl
pop
sub
loope
insl
lret
nop
imul
mov
in
mov
pusha
or
daa
das
orb
hlt
movsb
or
add
adc
stc
pop
aaa
test
dec
inc
or
cmp
mov
lahf
mov
jge
lcall
sbb
fs
inc
adc
cmp
cmpsb
sub
imul
xor
out
jge
in
cmp
shll
sti
push
mov
dec
sbb
jb
sub
inc
inc
or
inc
js
jg
stc
push
hlt
add
or
pop
sub
lea
arpl
xchg
jne
xor
cmpsb
mov
enter
fldcw
lcall
sahf
stc
rolb
xchg
adc
je
mull
adc
xor
loope
mov
push
xchg
data16
leave
out
jne
inc
fldenv
cmc
fsubrs
aaa
pop
xchg
sbb
jb
sahf
in
lret
mov
fwait
lcall
aas
sub
aad
outsb
push
les
mov
in
cmpsl
mov
sub
mov
inc
mov
test
add
ljmp
rcll
inc
cwtl
jl
mov
fdivrl
cmp
addb
sbb
add
sbb
adc
in
and
adc
insl
mov
rcl
out
cmp
jns
mov
sub
das
push
sub
dec
sbb
stos
pop
mov
lock
lret
addr16
cli
aam
xor
ret
inc
cmp
addb
cvtps2pi
cmpsb
push
push
daa
pop
sub
aam
inc
leave
insb
mov
and
cmp
ljmp
lea
fsubrs
addl
sub
lods
fs
rorb
xchg
pop
sbbl
arpl
push
out
jb
lods
daa
les
pop
jbe
add
aad
test
outsb
fimuls
arpl
xchg
cmp
lods
mov
pop
jae
dec
pop
push
mov
adc
test
test
xchg
lods
mov
int
scas
cltd
into
std
stos
dec
mov
sbb
adc
std
pop
sbb
imul
loop
mov
mov
push
jecxz
in
inc
xchg
add
mov
pop
aam
outsb
xchg
lcall
dec
sbb
call
xor
dec
jae
insl
lods
mov
ds
insl
and
jb
negl
dec
pop
or
in
mov
addr16
shrb
sbbl
out
dec
bound
pop
sub
pushf
stos
in
call
pop
fdivs
mov
fmuls
pusha
nop
or
pusha
inc
gs
mov
dec
adc
shlb
sub
rolb
ss
sub
pusha
aam
pop
mov
or
dec
leave
ja
adc
dec
dec
stos
push
arpl
stos
mov
add
fmul
mov
in
and
mov
inc
sbb
dec
jnp
stos
cld
jg
loope
or
lea
aad
adc
leave
add
shlb
js
lods
jmp
ds
jnp
pop
dec
sbb
rolb
repnz
mov
loope
adc
xchg
popf
loopne
pop
fcmovnu
and
sarl
mov
sub
sub
and
sub
jl
lret
mov
fisttps
ret
cs
jecxz
and
aas
jb
xchg
push
or
mov
test
jle
jp
xchg
cmp
sbb
inc
loopne
adc
pushf
xchg
push
sub
adc
sub
xchg
mov
test
filds
jnp
out
xchg
add
xor
mov
jne
xor
push
xor
sahf
push
jmp
sahf
jmp
mov
cld
out
out
cmpsb
loopne
rclb
fistpl
and
mov
lods
stos
ds
lods
int
and
hlt
dec
hlt
int3
mov
dec
popa
pop
mov
mov
push
inc
or
sbb
sub
jns
jo
mov
icebp
repnz
pushf
mull
aas
int
push
out
or
add
push
shrb
mov
out
mov
push
jne
inc
stc
popf
cld
mov
mov
pop
movsl
in
pop
xchg
pop
ror
in
data16
addr16
push
roll
inc
popa
fs
lock
xor
cld
xchg
sahf
adc
fmul
rorb
adc
es
pop
and
inc
out
jge
lods
push
faddl
mov
je
into
fsts
into
dec
xchg
jge
sbb
or
roll
jmp
lret
jle
out
xchg
and
outsb
cmovs
cmpb
add
loope
sahf
inc
push
pop
xchg
jnp
test
push
xor
testl
xchg
sbb
adc
mov
pop
xchg
pop
or
mov
mov
test
or
push
ljmp
movsb
mov
aam
sti
inc
jb
mov
pop
xor
out
mov
sub
mov
cmc
sbb
push
imul
adc
lea
iret
cmc
ljmp
stos
jo
mov
sahf
adc
and
fcomip
adc
dec
sbb
out
dec
or
xchg
adc
sbb
in
xor
pop
add
ds
mov
int
imul
or
pop
and
ret
push
sub
sbb
xor
lea
or
movsb
arpl
adc
mov
outsl
mov
add
rcrb
jmp
lea
jo
shlb
push
int
add
imul
outsl
and
outsl
sub
mov
dec
jno
xchg
or
xchg
cld
testb
sbb
daa
mov
lea
push
inc
adc
addr16
cmp
nop
repz
or
pop
jae
outsl
dec
das
loopne
dec
jecxz
fstl
sub
in
jle
notb
roll
repz
jb
cmp
dec
ret
xchg
out
mov
in
cmp
jp
fcoms
jno
cltd
lock
mov
mov
js
adc
or
sbb
call
or
sub
pusha
fildll
mov
push
ja
jecxz
pop
jg
mov
add
scas
fsubrl
add
ljmp
stos
jno
cli
mov
mov
stc
in
and
inc
mov
ss
cwtl
inc
das
adc
jae
mov
js
in
sbb
xor
int3
test
push
mov
and
into
mov
loope,pt
sti
cmp
push
mov
jg
cli
mov
outsl
mov
sbb
in
loop
mov
out
or
inc
jmp
mov
adc
mov
sbb
rclb
jnp
loopne
fldenv
cli
fistpl
faddl
inc
cmp
xlat
cmp
xchg
inc
add
jl
daa
test
addr16
pop
mov
div
icebp
add
sub
movsl
mov
loopne
sbb
repnz
rcrb
out
pusha
daa
jbe
hlt
insl
pop
test
mov
jnp
mov
push
ss
ret
mov
jb
jecxz
pop
sbb
xor
inc
fistps
adc
movl
repz
jne
scas
cmpsb
push
xor
mov
aad
imul
rol
adc
pusha
test
adc
fistpl
rcrb
cwtl
fcoms
scas
push
mov
xor
xor
les
and
push
rclb
pop
ljmp
lret
sub
cld
jecxz
scas
fiaddl
pop
lods
mov
cmpsb
pop
push
fistl
lods
sahf
jae
xor
push
xor
je
scas
decl
mov
cmp
in
lock
pop
cmp
iret
pop
les
icebp
inc
jns
lret
lret
pop
add
pop
mov
in
gs
dec
ret
ret
fmuls
dec
scas
sti
sub
call
inc
into
pop
ljmp
adc
and
lcall
insb
pop
cltd
fwait
iret
insl
leave
sbb
sbb
inc
pop
mov
and
loopne
movsb
nop
inc
loopne
sbb
xchg
xchg
add
lds
rorl
push
lea
dec
loop
inc
add
and
and
lods
adc
fnstcw
mov
jbe
mov
leave
dec
int3
or
dec
mov
push
out
inc
or
push
lds
lcall
mov
pop
pop
test
aas
rcll
add
mov
push
adc
fisubrs
push
push
subl
mov
jb
iret
in
stos
jmp
push
xlat
and
not
rcll
clc
jne
mov
ja
xor
enter
fs
jb
pop
or
cwtl
xchg
mov
lret
add
jne,pn
jb
aam
ss
xor
mov
mov
xor
add
sbb
lcall
lods
rolb
imul
out
dec
arpl
leave
pop
xchg
push
loopne
xchg
and
add
nop
jne
or
inc
mov
loope
xchg
insl
inc
jmp
stos
scas
rorb
cld
jnp
out
or
mov
adc
call
enter
sarl
imul
xchg
dec
arpl
dec
pop
mov
inc
pop
mov
ja
inc
insb
xor
es
mov
ficomps
fcomps
out
mov
cli
mov
lahf
test
xor
das
push
and
ficomps
in
cmp
aaa
jbe
out
dec
pop
cmp
adc
sub
mov
ss
sarl
rcrb
jge
loop
jb
push
daa
test
mov
pop
mov
cld
lds
mov
adc
inc
in
jne
sub
xchg
rcll
arpl
sbb
fadd
jmp
les
push
jg
pop
inc
push
push
adc
insb
adc
ret
push
mov
cwtl
jae
pop
mov
mov
fldl
pop
lcall
pusha
in
stc
inc
loopne
ret
cmp
xor
push
sub
cmp
arpl
rcll
das
in
sbb
fiadds
push
in
dec
mov
sub
or
and
outsl
out
and
mov
pop
push
cld
sub
mov
mov
sub
ljmp
test
xor
int3
and
xor
mov
cwtl
les
lcall
fnstcw
adc
js
stos
and
and
ror
lahf
sub
pop
pop
push
push
mov
js
fsubl
lock
cmpsb
std
sar
outsb
sbb
pusha
outsb
xchg
pop
and
xchg
in
test
mov
cmp
je
and
cwtl
loopne
adc
and
mov
pushf
dec
add
stos
xchg
lods
inc
data16
sbb
xchg
sbb
test
sbb
notl
pusha
add
lret
sub
jg
das
push
xorb
sbb
aam
push
adc
pop
sub
jae
fldenv
aaa
js
cmp
nop
pop
cmp
ret
jp
xchg
pop
add
add
mov
xchg
int
sub
inc
ffree
inc
jb
xor
loope
sbb
pop
testb
mov
lods
pop
ffreep
mov
test
rol
sbb
mov
dec
je
dec
repnz
in
loope
lds
mov
pushl
pop
lret
lds
add
out
in
sbb
sbb
adcb
movsl
loop
mov
or
syscall
jp
cmc
in
test
lret
lcall
shll
shlb
xchg
data16
loope
lods
stc
iret
fsub
jno
fnstcw
and
cli
sbb
cmp
mov
pop
xchg
add
and
mov
dec
in
push
mov
jno
out
mov
ja
es
lret
jmp
pop
mov
adc
jbe
inc
mov
dec
mov
popf
push
int3
ret
dec
mov
stc
jge
fildll
popa
jo
jg
lds
cmp
inc
scas
or
add
xchg
orb
push
andb
sahf
push
jb
mov
mov
and
ror
stos
dec
fdivrl
addl
sar
mov
rorb
rolb
lret
test
inc
into
paddsw
push
xchg
adc
dec
jo
pop
bound
xchg
pop
jmp
mov
aas
or
jmp
nop
or
sub
lods
leave
inc
xlat
imul
fwait
repnz
mov
rorl
and
hlt
dec
lahf
inc
arpl
daa
mov
jl
ret
mov
cmc
repz
or
pusha
imul
bound
or
xchg
movsb
cld
es
int3
or
dec
ds
mov
jno
inc
jle
ret
cmp
and
icebp
adc
out
xor
enter
mov
cwtl
cmp
mov
adc
jl
out
dec
cmp
adc
pop
sub
xor
stos
in
sbb
add
mov
subl
je
ret
sti
repz
ljmp
stos
rcll
fisttpll
xor
xchg
and
test
xlat
jns
bound
popf
outsl
imul
es
sbb
pusha
mov
scas
mov
aam
xchg
lock
cmpsb
inc
mov
dec
xchg
push
or
sub
imul
push
nop
pop
stc
jb
pop
fimuls
pushf
sbb
sbb
sbbl
mov
jns
or
dec
std
xor
xchg
sahf
push
hlt
jge
in
lea
imul
sub
lods
cs
cmp
int3
mov
lods
cltd
std
xor
repnz
cli
dec
loopne
repnz
xchg
sbbl
lock
stos
xchg
jmp
xchg
lods
cmpl
jns
test
dec
xchg
cli
fs
adc
das
gs
es
out
xchg
push
adc
sbb
clc
xchg
inc
in
aas
add
pusha
inc
out
stc
sbbb
sbb
loopne
xchg
stc
or
pop
xchg
fsubs
mov
sbb
add
jbe
lret
push
mov
and
mov
mov
pop
xchg
push
jne
lret
pop
sub
inc
rol
data16
dec
icebp
adc
in
pop
inc
imul
sbb
ljmp
fsubs
pop
in
fs
ret
in
mov
push
sbb
cltd
dec
gs
inc
cwtl
test
jae
push
cmp
mov
cmp
icebp
xchg
roll
mov
adc
cld
xlat
fdivl
insl
add
jge
fmull
insl
push
xchg
std
leave
adc
fwait
mov
shlb
mov
enter
test
sub
xchg
sub
cmpsb
add
xor
cwtl
clc
jmp
sub
sbb
es
test
icebp
sub
and
cmpsb
mov
fdivrl
mov
aaa
add
mov
outsb
add
int
add
test
lahf
xchg
add
xlat
xlat
add
ret
clc
fdivr
jecxz
js
test
mov
cmc
add
sahf
sub
and
xchg
lahf
addr16
jno
fstpl
adc
cmpsb
test
lret
jmp
jne
jnp
adc
and
testl
and
mov
xor
cwtl
movsb
mov
dec
pop
xchg
cmpsb
sbb
cwtl
notb
orb
imul
add
inc
inc
pushf
lret
push
test
sub
adc
sahf
test
or
jp
xor
dec
es
mov
sub
in
xchg
push
cmp
cwtl
xchg
xor
add
test
xor
sub
out
xchg
ds
sub
cmp
xor
in
mov
mov
and
xor
es
cmp
jbe
and
xchg
jle
xlat
dec
and
dec
popf
mov
bound
mov
jecxz
cmpsb
mov
xor
test
or
rol
cmp
shlb
jl
rcr
mov
daa
ja
or
adc
jl
lds
jne
test
pop
enter
sub
loopne
mov
jmp
and
jnp
inc
rorl
sarb
insb
jmp
rorb
lods
push
in
adc
insl
popa
ljmp
cmc
ds
ds
pop
jns
pop
cmc
out
scas
sti
adc
lea
leave
je
push
sbb
test
fildll
mov
inc
mov
js
icebp
push
js
mov
xchg
and
in
js
sub
js
jl
pop
adcl
arpl
adc
inc
push
mov
lea
bound
cltd
xor
sti
add
cmpsl
xlat
add
pop
cmp
pushf
add
in
mov
sub
frstor
add
js
mov
pop
imul
out
addl
adc
fdivrl
mov
or
int
cltd
fcmovb
out
xor
negl
gs
ss
lock
sahf
cli
dec
push
mov
inc
or
add
js
stos
pop
or
dec
movsb
xor
mov
xchg
sub
loope
pop
sbb
sub
imul
cld
inc
and
in
cltd
std
outsb
cmp
jp
or
push
fsts
call
test
test
add
out
adc
imulb
sub
nop
rcrl
jge
sarl
out
jge
mov
mov
mov
pop
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
mov
push
outsl
test
rcrb
and
and
and
mov
cmp
hlt
cld
dec
inc
fwait
clc
pop
adc
jns,pt
lea
cltd
push
sar
sub
outsb
inc
cmp
shll
sbb
das
test
pop
pop
inc
sub
mul
repz
pop
popa
dec
mov
jmp
pusha
mov
jle
dec
movzwl
pop
jne
leave
stc
aaa
sub
pop
dec
repz
inc
and
sub
jns
out
cwtl
lods
xor
jmp
je
mov
cmp
jb
loope
mov
sub
subb
test
push
or
xchg
and
loope
or
sbb
clc
fistpl
or
cli
cmp
shlb
mov
pop
mov
pop
out
push
pop
jb
fwait
loop
jne
out
add
stc
fsubs
lods
hlt
cmp
pop
test
std
or
sbb
jmp
test
loop
and
dec
pop
cmc
pop
push
out
cmpsb
loope
ret
enter
mov
add
in
mov
inc
cmp
popf
sbb
and
pop
fisttps
mov
push
lret
scas
mov
mov
in
insl
adc
push
jno
lds
std
outsl
xor
mov
andl
nop
es
add
sub
jns
push
icebp
xor
adc
pop
pop
int3
mov
testl
in
jmp
and
stos
jmp
ja
das
lods
es
lret
or
outsl
mov
jae
xchg
mov
mov
outsb
add
jb
lods
mov
outsb
inc
sbb
out
add
jns
imulb
cmp
xchg
sbb
cmpsl
lret
outsl
xchg
cmp
xchg
push
dec
fildl
push
jb
xlat
clc
jbe
mov
xor
push
in
test
xchg
push
repz
push
pop
xorl
fisubl
jns
and
fnsave
adc
scas
jp
inc
mov
gs
sbb
not
pop
push
cmpsb
xor
ret
mov
inc
mov
dec
or
and
ja
mov
lock
test
imul
jmp
push
xor
orl
cmp
or
xchg
imul
into
dec
and
int3
gs
inc
xor
mov
dec
ja
nop
ss
clc
call
dec
xor
push
adc
icebp
scas
leave
mov
pmaxsw
addb
jb
mov
mov
fdivs
hlt
pusha
jmp
lcall
outsl
movsl
and
pop
movsl
xchg
fxch
jl
call
aaa
and
loop
cmpsb
add
and
mov
jl
add
imul
inc
loope
sti
iret
mov
test
jle
and
or
adc
pop
mov
gs
mov
xor
enter
rorb
lcall
movl
and
andb
add
inc
pushf
cmpsb
in
dec
mov
test
mov
add
cltd
fdivrl
cld
cmp
fwait
xchg
push
scas
lock
jno
insl
in
dec
mov
cmp
in
inc
inc
or
lock
xchg
call
cli
mov
ror
mov
push
and
mov
cmp
push
push
mov
inc
mov
pop
insl
xchg
inc
mov
aas
jge
incl
push
ss
icebp
push
ja
aas
fcmovb
xor
std
cmp
jnp
test
pop
test
loope
mov
sahf
inc
cmpsb
pop
clc
push
adc
push
mov
sub
test
nop
mov
sbb
mov
jge
and
mov
fucomip
inc
sbb
jnp
andl
add
dec
aad
cmp
pusha
fs
or
sbb
push
fistps
add
test
sbb
lea
mov
int
xchg
stos
and
sub
aas
or
inc
stc
adc
fildll
movsl
pop
inc
jg
jg
jp
mov
out
aas
ljmp
mov
push
push
xchg
lret
cmp
pop
lods
and
call
int
add
daa
sub
pushl
mov
ret
jb
cmp
cmpsb
neg
adc
iret
xor
or
dec
jae
fiadds
push
sbb
xchg
or
push
in
push
arpl
cmp
jle
mov
insb
xchg
scas
fldl
add
xchg
nop
jnp
jo
mov
aad
sub
ljmp
lret
aaa
dec
hlt
shrb
aam
cmp
or
pop
xlat
sbb
or
adc
out
int3
es
mov
clc
mov
fdivrl
nop
mov
jp
icebp
sahf
xor
call
in
push
pop
pop
fists
inc
arpl
popf
aas
in
ljmp
push
mov
lret
and
shl
mov
jg
adcb
push
xorb
pop
inc
cwtl
mov
in
call
lret
in
and
jne
iret
fisubs
cmp
ss
lcall
xor
or
push
fmull
xchg
xor
sbb
mov
cmp
xchg
dec
jo
out
xchg
cmp
adc
aad
rcll
jbe
fwait
pop
and
lcall
cltd
cmp
cmp
in
pop
jmp
xor
adc
adc
ja
stos
daa
cli
adc
dec
shl
add
out
movsl
test
xchg
jle
push
or
stos
or
cmpsl
lcall
pop
mov
fsubr
dec
jne
shl
call
movsb
std
mov
gs
stos
lret
repz
pop
xorl
popf
repnz
rorl
xor
sub
mov
inc
inc
ret
xchg
mov
mov
sbbb
cmc
repnz
outsb
arpl
das
jmp
cld
pop
jl
mov
mov
int
push
jg
out
fwait
out
fnsave
addr16
xchg
or
push
rcrl
adc
adcl
repnz
cli
or
cmpsb
jne
dec
cmp
lret
jge
jb
cs
sbb
cli
mov
sarl
test
adc
jb
fdivrs
ss
or
loopne
and
mov
cmpl
lods
jecxz
mov
jbe
repnz
inc
sbb
ja
mov
adc
pop
scas
imul
dec
jb
dec
ffree
call
arpl
sbb
xor
int
inc
cmp
insl
jge
int
scas
dec
and
inc
out
in
cltd
dec
push
retw
iret
sbb
or
enter
jo
xor
adc
sahf
stos
jmp
or
xor
loope
mov
cmp
sbb
gs
pop
cmp
cmp
test
pushf
pop
fmuls
xchg
insb
sbb
test
fsubrp
jno
cmp
sub
mov
mul
inc
fadd
nop
adc
jl
add
push
ds
js
sahf
adcl
sarl
movhps
inc
cmp
xchg
jno
xchg
jno
dec
lock
push
xchg
mov
cwtl
or
fimuls
inc
aad
pop
hlt
ljmp
movsl
add
fdivs
inc
int
repz
lahf
xor
rorb
mov
cmp
pop
ss
repnz
pushf
loop
adc
jl
cmp
mov
xor
inc
add
jle
mov
add
sub
pop
hlt
mov
jecxz
hlt
fadds
roll
inc
int3
jecxz
jnp
outsb
fists
outsl
pop
dec
lret
cmp
repnz
and
or
lds
and
inc
scas
cmp
adc
or
sbb
and
inc
jecxz
inc
inc
cmpl
je
mov
in
push
test
pop
xor
orl
xor
xor
std
fistl
cmp
sbb
movsb
pushf
cmpsb
add
call
mov
push
add
stos
iret
mov
or
nop
icebp
int
mov
mov
int3
push
sahf
jno
aaa
push
mov
aas
or
out
jecxz
sahf
dec
cltd
jbe
mov
pop
repz
sahf
fistpl
setne
pusha
cmc
icebp
cwtl
cmp
push
rcrl
int
and
fisttpl
insl
pop
jmp
mov
icebp
pop
push
dec
test
cmpl
movsb
mov
out
or
pop
test
mov
dec
push
jnp
inc
call
loopne
addr16
cmpsb
xchg
dec
in
pop
fisubrs
js
sbb
shrl
pop
cmp
jbe
cld
sub
jge
mov
lea
xchg
mov
sbb
sub
iret
pop
jae
push
xchg
shll
xor
adc
mov
imul
cmc
push
push
mov
and
mov
cli
je
jo
add
imul
jge
dec
fildl
xchg
push
jo
inc
movsb
xchg
jl
enter
add
fcmovnu
or
shll
push
in
pop
xchg
adc
xor
cmp
clc
in
cmpsb
inc
lock
xchg
xor
push
mov
cmpsb
lods
xchg
push
mov
test
xor
nop
lds
jl
adc
cli
out
push
loop
jg
pop
dec
fistl
mov
movb
adc
cmpsl
jno
popa
inc
rcl
les
stc
fs
insl
xchg
push
jne
inc
iret
add
dec
lds
add
icebp
pop
popa
gs
movsl
push
xchg
mov
and
cmc
repnz
and
movsb
insb
adc
push
dec
xor
sbb
mov
jb
cmpsl
xor
jo
in
popa
mov
subb
xlat
out
mov
popf
cmpsl
in
xor
enter
aad
ret
cmpl
push
in
push
dec
mov
jecxz
aad
xorl
scas
into
lcall
pop
repz
cmp
inc
pop
or
xor
aas
addl
and
add
xor
lods
dec
ffree
cltd
jno
pop
dec
popf
mov
fs
cmp
test
ja
in
subl
inc
je
pop
inc
ret
add
loop
pop
addr16
inc
jo
sbb
cmp
and
mov
lods
push
or
aam
test
dec
sbb
in
stos
rolb
sbb
mov
repz
test
or
icebp
cli
ret
or
mov
jecxz
test
inc
mov
adc
inc
into
mov
push
lret
cmpsb
adc
jmp
movsl
bound
add
pop
or
imul
lret
cmc
aaa
movl
xor
int
test
mov
xor
loope
sahf
ret
sub
inc
dec
push
stos
mov
popa
je
inc
das
int3
repnz
imul
leave
hlt
popa
frstor
jp
lret
sub
jp
mov
push
daa
cmc
ds
sbb
gs
mov
jns
popf
or
andl
insl
mov
fcoml
jno
push
call
aam
je
sbb
insb
not
push
or
mov
les
enter
pop
fisubrl
adc
addr16
xor
mov
insl
xchg
pop
dec
fcmovbe
sub
jno
xchg
pop
icebp
cwtl
push
test
jno
mov
ficomps
xor
adc
cmp
test
enter
cltd
or
shr
xor
test
lcall
daa
jns
mov
cli
adc
cmpsl
cmp
dec
mov
out
cs
push
push
jp
ss
out
sub
mov
add
inc
call
xchg
mov
jecxz
es
imul
cmp
sub
xor
fisttps
addb
sahf
and
and
out
xchg
and
jp
popf
mov
sub
dec
dec
mov
pop
test
iret
push
les
loop
xor
add
mov
ljmp
xor
rcrl
mov
inc
or
lods
test
sahf
shr
add
cmp
pop
cmc
xchg
mov
push
mov
pop
add
sbb
int
fdivl
outsb
lock
inc
repnz
dec
cmpsl
movsb
pusha
fcomps
sbb
ds
add
leave
aaa
add
push
aam
push
pop
popf
ret
add
cmp
shl
xchg
stos
jb
jmp
xchg
mov
adc
push
stos
push
cmp
jecxz
cld
test
adc
leave
cmp
cmp
and
xor
sti
rcll
or
cmpsb
aam
dec
cltd
insl
sti
mov
and
stc
pop
aam
jns
imul
pop
idiv
lds
jns
pop
repnz
cli
pop
fsubrs
fwait
jns
sbb
arpl
jecxz
mov
xor
iret
add
jne
insl
or
mov
xchg
sub
ds
ret
daa
xchg
cmp
daa
xlat
bound
stc
ds
inc
pop
arpl
aad
in
xchg
fs
dec
lcall
lret
mov
mov
out
insb
dec
jae
fsubs
int3
xor
gs
iret
pop
dec
and
test
pusha
cmc
lods
imul
fwait
adc
dec
dec
imul
or
mov
pop
push
xor
rcl
scas
shl
mov
pop
or
push
popa
pop
dec
push
push
push
mov
rcr
pop
or
jnp
loope
mov
cmpsl
popf
cmc
push
inc
aad
movsb
ljmp
gs
pop
repnz
fnstenv
cmpsb
lods
mov
sbb
add
gs
pop
hlt
subb
out
mov
arpl
ds
mov
hlt
popf
xor
popa
fdivrp
idivl
movsb
mov
lods
adc
in
in
mov
test
inc
or
sub
sub
mov
test
pandn
jge
cld
rcrl
cwtl
pop
xchg
adc
jae
arpl
adc
jae
lods
mov
pop
inc
rcrb
enter
negb
loop
inc
dec
dec
pop
repnz
push
das
iret
out
sbb
adc
jne
sub
mov
negb
mov
repnz
ljmp
rep
push
pop
fiaddl
jp
jne,pt
mov
rolb
mov
cmp
fsubr
mov
movsb
loope
pop
aaa
jnp
jle
cs
add
jp
cmp
jg
push
cmc
sub
cmpsl
jne
xchg
cmp
pop
xor
and
jle
int3
and
out
xchg
cmp
mov
cmp
test
mov
fs
fld
add
lahf
pop
bound
dec
pop
incl
adc
pop
xchg
and
or
rol
gs
push
cmpsl
pop
loop
sub
gs
cmp
lods
push
scas
cmpsl
sarb
ljmp
sbb
jnp
into
xor
cmp
nop
cmc
xchg
pand
dec
pop
std
movsl
leave
push
aaa
test
xor
aaa
sub
dec
jne
or
or
cmp
imul
in
sub
xor
ficomps
adc
adc
inc
push
nop
jge
push
jae
test
cmp
inc
call
sti
loop
adc
frstor
negb
xchg
push
pop
pop
pop
inc
daa
cld
jnp
sbbb
push
or
repnz
aam
cs
addb
filds
push
pusha
shr
push
insl
ja
sbb
sbb
jg
xorb
dec
mov
fists
dec
add
mov
push
cld
fisttpll
clc
push
pop
inc
adc
pop
arpl
insb
mov
xchg
out
push
or
gs
mov
mov
mov
cmp
inc
repz
ret
loopne
hlt
rolb
or
push
dec
mov
xchg
out
popf
xchg
jp
xor
stos
rdpmc
in
lcall
sub
sub
lret
jnp
mov
pushf
in
jnp
fstps
test
mov
xor
cmp
movsb
cmp
ss
push
lea
mov
out
pop
sub
scas
push
sub
mov
xchg
jp
dec
and
addl
sbb
dec
inc
sbb
add
sbb
jnp
cmpsl
pop
sub
sar
push
pop
and
mov
xor
scas
mov
push
or
repnz
out
movsl
jg
ljmp
fndisi(8087
stos
jno
mov
xchg
inc
adc
pop
sbb
pop
scas
cmp
push
test
cmp
outsl
clc
es
jecxz
cmp
dec
mov
gs
jecxz
mov
stos
cltd
mov
add
ret
push
mov
ds
or
push
push
bswap
out
mov
dec
es
cmp
cld
std
testb
fnstcw
insb
sbb
sub
jecxz
das
jg
adc
xchg
add
inc
add
mov
or
out
push
sbb
les
bound
cmp
lret
movsl
fnstcw
push
pop
cmpsl
add
icebp
lock
cmp
xor
inc
mov
out
sti
mov
push
jl
mov
orb
cmpsl
jecxz
call
popf
pop
xor
das
mov
pop
mov
fiadds
sub
loopne
sahf
xchg
cmp
sbb
incl
and
fwait
add
lods
inc
mov
fimull
outsb
out
shrl
or
jl
or
insb
cwtl
push
cmp
pushf
rcl
xor
mov
lcall
shlb
fbld
hlt
sti
clc
ret
in
daa
xor
and
cmp
incb
addr16
dec
sbb
movsl
outsb
pop
shlb
push
negl
mov
int3
outsl
sub
add
sti
aad
arpl
adc
sbb
out
dec
std
stos
pusha
push
xchg
outsb
cld
and
fwait
test
xchg
xlat
enter
insl
adc
add
mov
std
sti
in
push
pop
test
bound
mov
pusha
push
mov
sbb
inc
push
dec
daa
dec
jb
cmpb
and
sbb
fmuls
jne
ret
ljmp
cmpsl
adcb
xor
hlt
xor
sahf
test
lea
xor
xor
clc
jbe
inc
call
rolb
outsb
jae
in
cmp
lret
push
mov
and
cmc
xlat
inc
adc
arpl
nop
mov
out
inc
add
jnp
jbe
in
adc
std
inc
in
adc
or
loopne
mov
outsl
cmp
dec
stos
int
jecxz
and
insl
or
and
jb
arpl
inc
stos
and
pushf
cs
in
pop
inc
push
and
sbb
int3
lahf
dec
dec
inc
in
shrl
push
and
scas
mov
jmp
fs
xchg
lods
sbb
push
jg
sbb
aad
add
mov
dec
fldl
sub
sbb
stc
inc
jge
fs
in
cld
cmpsl
movsl
push
add
jb
gs
push
or
test
ror
aad
jbe
jns
xchg
nop
sub
cwtl
cli
xor
in
bnd
jae
or
ljmp
push
cld
repz
and
jns
pop
fwait
aas
test
sub
pcmpeqd
mov
scas
pop
cli
movsl
cmpsl
sbb
sub
popa
fstl
or
movsl
lahf
cmp
inc
jge
idivl
sub
stc
pushl
fbstp
pop
lret
xchg
and
orb
call
fsubr
cmpsl
dec
inc
add
sti
push
repz
cwtl
cld
test
arpl
lret
jp
xor
push
mov
gs
sbb
mov
xor
cwtl
movsl
imul
push
add
jle
pop
cs
xchg
pop
aam
leave
pop
mov
sub
fwait
push
cli
out
cmc
adc
das
cmp
popa
jb
sub
dec
hlt
cmpl
jbe
loopne
xchg
movsl
ds
test
shl
or
xor
xor
or
call
mov
cmc
sbb
inc
movsb
push
mov
lds
stos
repnz
sub
cmp
iret
push
scas
aaa
adc
mov
and
inc
outsl
push
pop
dec
jl
sbb
lcall
jae
sbb
lahf
leave
dec
lea
popa
sub
arpl
and
fnstenv
push
cmp
fstpl
mov
sahf
mov
pop
mov
adc
movl
ljmp
popf
or
lods
icebp
ret
jbe
mulb
jp
mov
pop
xor
orl
jnp
fwait
mov
xchg
cmp
inc
das
mov
xor
hlt
mov
test
and
sbb
paddw
lods
pop
adc
jo
stc
fs
ja
xorb
call
shrl
xor
push
loopne
cmp
jecxz
fucomp
ret
mov
fisubrl
out
idiv
ds
inc
sbb
and
or
test
jae
ret
and
repz
xchg
cmpsb
mov
jnp
inc
xchg
push
popf
mov
adc
inc
out
mov
sub
mov
icebp
stos
test
outsl
xor
in
addr16
push
setl
imul
lds
xlat
or
bound
test
popf
xlat
pop
aad
or
test
jae
fidivl
mov
aas
add
sbb
inc
jg
repnz
nop
outsb
xorb
nop
pop
or
call
mov
inc
sub
inc
scas
mov
in
enter
cmc
cmpsb
inc
nop
adc
ds
enter
imul
and
mov
jne
cld
push
scas
in
negl
out
icebp
sub
ds
sbb
ret
add
pop
sub
fisubrs
js
mov
mov
sbb
mov
aad
pop
std
jle
push
gs
push
out
mov
loop
mov
shr
pop
shlb
fldenv
dec
mov
xchg
sbb
icebp
inc
and
push
sub
push
pop
push
inc
and
decl
cwtl
sub
add
sbb
imul
std
add
push
mov
sahf
test
xchg
lock
popa
fwait
mov
push
in
sbb
sarb
out
frstor
cmp
dec
pop
imul
mov
add
mov
loope
orb
xchg
loop
cmpb
out
dec
mov
filds
mov
xlat
test
pop
mov
dec
fwait
cld
cwtl
or
popf
rcrb
je
sub
roll
jecxz
add
or
sbb
sub
mov
js
out
pop
xchg
jo
push
dec
push
enter
add
test
cltd
mov
movb
push
pop
sub
cltd
sarl
mov
push
push
ljmp
cmpsb
lock
and
lds
jne
or
icebp
das
jae
shr
outsb
and
scas
dec
test
test
jae
mov
jp
bound
and
cmpl
clc
and
pop
clc
outsl
cmp
pop
xor
inc
and
xchg
call
dec
mov
in
fsubl
jb
sar
and
testl
add
mov
adc
push
outsb
sub
add
mov
adc
mov
leave
mov
or
fcmove
rol
or
std
ficomps
xchg
pop
scas
sbb
fildl
jge
push
push
nop
aaa
sbb
imul
or
arpl
mov
test
push
or
mov
xor
mov
loope
out
fidivrs
mov
jmp
cmp
test
mov
adc
sub
xchg
cmpsb
movsb
decb
push
and
mov
repnz
mulb
shl
ss
xor
mov
pop
cli
cmp
out
cmp
mov
sbb
repz
lret
and
repnz
jae
add
xor
push
inc
pop
js
sahf
adc
lret
cwtl
mov
data16
pusha
or
cwtl
stos
ficompl
xchg
inc
push
aad
sti
dec
sbb
and
popa
dec
lret
sub
fbstp
cmpsl
jnp
jae
idivl
repnz
sahf
push
sub
insb
inc
jecxz
testb
inc
cli
enter
jnp
sbb
mov
dec
pop
jo
andl
arpl
or
pushf
sub
stos
in
pop
pop
pop
loopne
xchg
stc
mov
mov
shll
fwait
test
push
jb
sbb
in
mov
jecxz
or
ror
jne
adc
rcr
imul
clc
jnp
shl
pop
cwtl
mov
ljmp
jmp
pop
dec
shlb
mov
into
aas
sbb
fs
push
pop
xchg
int
ret
jmp
mov
jns
jnp
mov
pop
mov
imul
fdivl
mov
incb
lahf
mov
adc
ljmp
in
push
mov
xchg
fcomip
jl
jge
lods
mov
jmp
cmp
rorl
lock
cmp
sbb
adc
xor
outsl
hlt
jae
mov
out
cli
adc
push
and
xor
std
mov
test
negb
fisubs
inc
andl
loopne
scas
rcll
cld
scas
shll
lea
std
pop
out
sarb
push
int
xor
jmp
mov
cltd
xchg
sbb
jnp
dec
push
sub
insb
int3
and
sub
mov
insl
dec
cmp
out
and
push
cmp
lahf
xor
daa
pusha
and
inc
jp
push
cli
mov
and
sub
push
popf
dec
enter
or
dec
lahf
adc
fdivs
push
sbb
movsl
sarl
insl
or
fsubrp
pop
and
xchg
inc
and
cmp
mov
fwait
add
sbb
mov
cli
sub
jg
cmpsb
pop
cs
sub
jb
and
in
mov
ja
and
add
es
js
gs
pop
jae
hlt
pushf
xor
adc
nop
mov
push
mov
fsubrl
xchg
dec
push
mov
fidivl
pop
pop
repnz
js,pn
pop
pop
mov
in
std
repz
pop
rcr
sub
mov
inc
imul
mov
ret
jns
sarb
mov
push
xor
mov
xchg
mov
iret
xchg
adcb
jae
out
push
fwait
clc
orb
cmp
pusha
push
inc
aaa
sbb
mov
in
icebp
sbb
dec
jmp
repz
lret
pop
imul
lahf
out
pop
int
mov
add
shrb
sahf
lret
push
lahf
xor
outsb
popa
repnz
fsubrl
xchg
ffree
or
in
dec
shl
push
loopne
cmpsb
xor
sub
int
cmp
jmp
aas
lea
cld
push
jne
daa
jne
shl
es
push
sarl
rorb
xchg
or
and
std
js
out
gs
in
push
xor
xlat
xchg
jbe
add
out
push
mov
movsb
fwait
cld
js
adc
sti
mov
in
lret
jno
dec
mov
xchg
pop
dec
dec
mov
ret
repnz
fldt
xchg
push
inc
jb
lahf
cs
pop
ss
outsb
add
out
enter
movsl
dec
icebp
push
int
push
mov
jmp
arpl
jp
xor
mov
ss
scas
and
jae
cmc
mov
push
adc
pop
and
ja
movsl
aaa
jae
fcmovne
lods
fcmovnbe
fsubrl
xor
test
sub
lret
jnp
sbb
jmp
push
xchg
cmp
out
test
ficompl
and
add
xor
aad
jmp
cmp
jecxz
pushf
lds
fwait
push
adc
xor
jno
test
dec
pop
call
pop
push
test
fs
sahf
mov
repnz
jge
fistpll
pop
out
es
movsl
jg
in
sub
xchg
push
jmp
btcl
fsubl
in
cmp
sahf
jo
arpl
scas
jmp
pushf
movsl
jmp
ja
sahf
loope
push
jmp
daa
outsl
fwait
jne
js
push
stc
in
mov
adc
xchg
cmp
adc
mov
add
imul
dec
test
cltd
pop
iret
dec
stos
roll
mov
xchg
xor
loope
xchg
adc
inc
add
fisttpl
aaa
insb
mov
bound
andl
loope
dec
xor
out
out
mov
mov
imul
mov
andb
cmpsb
jmp
xchg
add
in
mov
mov
sbbl
int3
fldl
dec
ss
sbb
jae
mov
lret
ja
or
add
mov
insl
jo
or
mov
jge
insb
push
xchg
repnz
sbb
push
test
sti
push
les
popf
jmp
xchg
enter
and
addr16
stc
stos
mov
dec
arpl
or
mov
ret
adc
mov
sbb
xor
jo
icebp
shll
push
orl
rcrl
call
arpl
cmpsl
popa
into
mov
movsb
lahf
fsubrs
ljmp
aas
and
into
mov
push
outsl
mov
pop
int3
mov
mov
aad
sti
sbb
jl
scas
push
pop
cmp
jo
xor
mov
pop
and
mov
ljmp
repz
es
loope
imul
cmp
repnz
lock
les
lea
pop
mov
cmpsb
scas
loopne
push
sbb
mov
lods
push
imull
sbb
or
push
ja
sbbl
je
push
movsl
pushf
mov
or
movsl
idivb
xor
dec
test
nop
xlat
inc
push
pop
aas
cld
add
fimull
clc
outsb
aas
or
push
push
andl
xchg
cmp
sbb
imul
xlat
lds
lds
add
pushf
mov
inc
call
jmp
sbb
jb
icebp
pop
push
inc
lock
les
sub
ljmp
fcoml
cmp
mov
test
movl
fwait
or
stos
fstps
pop
std
mov
jbe
pushf
cmc
popf
cmp
xor
ret
addr16
push
insb
mov
imul
in
push
fcomps
jmp
push
dec
fsub
int3
sub
mov
cmc
dec
adc
add
out
int
sub
sahf
pop
cmpsl
fisubl
xlat
mov
out
popf
sti
pop
inc
sti
ret
adc
sahf
xchg
cmp
in
test
notb
jbe
rorb
cmp
push
sti
movsl
lods
jne
jge
sarb
mov
in
inc
sub
sbb
leave
push
das
insb
outsl
adc
add
or
lods
std
into
xchg
call
or
cmp
and
mov
mov
fwait
aaa
add
mov
int
dec
fdivrs
cmp
and
dec
es
push
jecxz
in
sti
or
aad
ret
inc
sbb
insb
push
sbb
rclb
fisttpll
bnd
sbb
aaa
jmp
pop
pop
dec
scas
test
mov
lds
push
call
fdivrs
faddp
or
add
cmpsb
inc
and
pop
aam
fs
dec
data16
mov
adc
xorb
cmp
sbb
mov
adc
xchg
adc
or
push
in
push
ljmp
pushw
outsb
or
bound
out
cmp
lds
adc
fs
lods
std
daa
push
or
cli
popa
mov
nop
std
bound
push
out
bound
jg
or
outsb
and
xor
rclb
sbb
loope
xor
dec
orb
or
ss
inc
mov
fs
adc
sbb
dec
leave
in
fnclex
test
rcrw
jle
add
cmp
in
fbld
cld
outsl
and
dec
clc
lea
push
cmpsl
je
mov
loop
cmpsb
mov
mov
ret
cld
jbe
in
xor
sbb
push
iret
cld
es
or
jp
push
neg
cmp
dec
mov
insl
jae
xchg
in
stos
es
xchg
fdiv
add
push
push
cmpsl
sub
and
ljmp
dec
rep
int
pop
cmp
push
push
xchg
mov
cli
mov
push
les
and
idiv
mov
lds
subl
lret
stos
lahf
fsubrl
dec
pop
dec
mov
mov
mov
inc
out
mov
inc
add
in
xor
pop
pop
cmp
adc
jg
xchg
jnp
arpl
fdivrs
nop
test
movsl
mov
insl
fidivrs
mulb
pushf
mov
push
push
arpl
dec
xor
push
ret
test
mov
or
fwait
ljmp
xchg
mov
pop
in
push
loope
jb
mov
cs
jl
cmp
test
adc
mov
lods
out
clc
movsl
je
push
cmp
cmp
mov
cmpsl
das
shlb
jl
loope
in
fs
cmp
pop
sbb
fiadds
mov
jne
lret
or
xor
adc
sbb
fsts
lock
mov
das
cwtl
bound
pop
adc
lock
dec
in
jmp
bnd
xchg
jbe
dec
mov
mov
xor
in
out
jecxz
sub
jle
add
cmp
adc
fwait
inc
xor
bound
push
push
sub
shll
repz
ret
mov
faddl
xchg
push
into
pushf
sbb
or
mov
sbb
jb
dec
or
cs
mov
les
ds
scas
clc
and
inc
scas
leave
repnz
push
and
xchg
xchg
adc
jmp
leave
mov
aas
inc
testl
cmp
and
pop
test
popf
sbb
sbb
xchg
sbb
int3
lahf
aad
dec
pop
jns
push
mov
shll
fidivs
ja
adc
scas
mov
aas
sbb
repz
cld
xlat
shlb
xor
dec
mov
fists
push
mov
mov
pop
jp
adc
or
jecxz
xchg
pusha
dec
lahf
dec
adc
or
jmp
mov
hlt
push
push
rcll
sub
pop
fmuls
sub
das
mov
sub
daa
xchg
push
dec
mov
and
lea
insl
jnp
or
popl
jmp
hlt
fisubs
xchg
add
in
sub
out
cld
jae
dec
in
add
dec
jns
dec
ss
pushf
mov
adc
leave
jae
notb
out
xchg
int3
and
pop
mov
inc
shrl
sub
cld
inc
pop
mov
sbb
xor
sarb
lods
or
movsb
mov
leave
jbe
mov
outsb
ds
ficomps
je
je
mov
sub
aas
or
aaa
mov
sti
dec
or
in
popf
scas
popa
popa
jb
dec
cli
xchg
test
sbb
adc
roll
imull
std
push
fnstcw
mov
test
xor
push
xchg
int3
jnp
pop
stos
movsl
ljmp
or
jl
adcb
sbbl
pop
icebp
ds
pop
out
add
inc
stc
adc
dec
aam
aad
mov
xor
fnstenv
mov
sbb
pop
mov
sub
jno
push
cli
adc
outsl
sti
push
sub
in
ds
sub
or
test
aad
adc
push
add
fs
mov
push
repnz
jne
inc
cmpsl
mov
and
dec
add
es
or
sbb
sub
and
mov
sbb
mov
data16
push
xchg
daa
clc
popf
outsb
imul
lcall
shlb
imul
jp
and
add
sub
sbb
cmp
jo
testl
or
push
dec
jl
add
and
rorb
ds
stos
mov
cmpsl
adc
push
push
xor
dec
mov
insl
jecxz
sarl
stos
out
mov
push
xor
fdivp
repnz
insl
mov
add
mov
sbb
icebp
xchg
test
dec
push
lcall
fs
and
lcall
movsl
sbb
pop
adc
cmp
sahf
movsb
aad
or
test
fcomps
inc
scas
lcall
out
sub
push
mov
xlat
stc
mov
ds
insl
test
jl
xchg
pop
jge
xchg
mov
jp
mov
fstpl
shrl
pop
push
arpl
or
lock
js
sti
idivl
mulb
sbb
pop
popf
shr
into
jl
sub
in
and
push
daa
inc
mov
add
xchg
push
scas
popf
out
cmpsl
cmp
fcomps
push
add
push
mov
cmovge
mov
mov
pop
add
mov
scas
xchg
in
jecxz
fcomp
mov
pop
inc
pop
pop
xchg
push
insb
addr16
xchg
or
int3
cld
data16
push
das
gs
sub
mov
or
pop
xorb
ds
add
pop
std
imul
jno
adc
sub
push
dec
cmpsb
lret
and
scas
arpl
ret
fcomps
sbb
mov
cli
xor
sti
and
insl
scas
hlt
or
xchg
in
adcb
jmp
mov
aaa
subl
and
jne
icebp
xchg
mov
pop
pop
aam
jmp
pop
and
lret
or
xchg
add
lret
cwtl
outsb
dec
or
out
mov
stos
ds
popa
jg
imul
cmp
or
dec
pop
ljmp
enter
sbb
cmc
rolb
xchg
out
dec
out
outsb
jg
movsl
sub
lahf
lcall
push
or
cli
imul
nop
adc
mov
mov
popf
fwait
bound
movsb
jnp
out
pop
dec
pop
inc
stc
aaa
jmp
and
cmp
or
sbb
test
jecxz
popa
or
popf
mov
es
stos
jbe
push
xor
out
out
addr16
cmp
cld
stos
mov
idivl
test
rorb
push
and
fcmovnb
das
xor
mov
dec
punpckhwd
movsb
adc
and
lret
dec
std
mov
xchg
mov
sub
ja
push
jne
mov
ficoml
push
xlat
jmp
loope
mov
popf
push
cmp
jp
jo
pusha
in
andb
and
mov
out
sub
or
test
movsl
stos
aaa
in
stos
jl
mov
push
add
shll
adc
sub
jmp
outsl
fldenv
lahf
test
xchg
movsb
clc
mov
dec
popa
push
or
dec
pop
aad
clc
inc
inc
cld
jle
out
sub
sub
pop
fucomp
loopne
aad
fstps
in
and
mov
mov
fnstenv
cmpsb
xor
fwait
popf
in
adc
imul
push
decb
jge
push
push
pop
adcb
ret
pmulhuw
ljmp
inc
mov
xlat
pop
negl
inc
adc
jge
sub
push
push
fcos
mov
out
call
mov
inc
mov
mov
sub
add
pop
sahf
adc
dec
mov
fwait
sub
inc
mov
in
mov
mov
dec
ljmp
out
fs
gs
cmpsl
adc
lods
xor
xchg
bound
pop
adc
fwait
imul
aad
mov
repz
sub
mov
hlt
mov
mov
jge
std
jl
cmp
cmpsl
adc
jno
xchg
rolb
xchg
ss
cltd
sbb
mov
ljmp
test
stos
shlb
fiaddl
arpl
inc
rol
add
testb
push
clc
jns
jnp
fstl
add
push
test
mov
iret
cmp
ret
inc
pop
jo
mov
aas
jecxz
jmp
int3
lret
aad
loope
lods
aam
aas
lods
lock
rorb
lcall
mov
push
xor
fs
pop
xor
or
call
out
aam
mov
jp
jge
pusha
pop
aas
iret
sub
adc
dec
and
lgs
in
in
mov
sbb
imul
cmp
add
daa
mov
mov
push
add
jno
sub
adc
mov
xor
mov
push
out
icebp
sub
adc
inc
xchg
pop
and
ret
xchg
or
mov
insb
popf
pop
cmpsb
jg
call
lock
dec
pushf
adc
xchg
or
xor
sar
cmp
pop
pop
ror
mov
idivl
ja
out
clc
inc
scas
dec
pop
sbb
xchg
mov
lds
rorl
mov
cmp
es
iret
add
cmp
fs
cmc
cld
or
ljmp
add
mov
or
out
aad
add
in
daa
cs
nop
in
mov
subl
jno
aad
repnz
push
dec
je
imul
popl
pop
shlb
movsb
and
push
in
or
je
dec
or
es
mov
or
orl
lret
shr
es
xchg
stos
pop
pop
and
pop
or
pop
into
or
pop
lock
out
jns
xchg
leave
mov
fwait
push
sbb
adc
xor
call
fcoml
nop
test
push
add
dec
lods
mov
jne
into
push
jmp
out
scas
cmp
or
imul
sbb
fidivrl
std
jb
dec
lahf
aaa
cwtl
cmpsb
dec
push
jl
cwtl
or
pop
or
lgs
out
pop
mov
mov
dec
test
cwtl
sbb
jle
jg
cmc
dec
pop
insl
mov
add
jg
lahf
push
cmpsl
mov
pop
and
mov
pushf
insb
mov
xchg
or
ds
fisttpl
sub
jle
inc
mov
mov
inc
cwtl
fcomip
pop
pop
mov
es
rorb
xchg
sbb
inc
lret
mov
and
pop
sar
sub
mov
cld
cmpb
ret
push
pop
rcrb
push
js
xchg
jg
add
xchg
repnz
mov
gs
cltd
stc
dec
movsl
sub
mov
imul
cwtl
les
mov
inc
lock
dec
and
adc
repz
mov
test
leave
mulb
scas
mov
cmp
cmp
lock
fnstsw
mov
ud0
push
dec
pop
cmp
loopne
pop
call
push
enter
std
ljmp
test
stc
out
cltd
push
mov
push
mov
push
cmpsl
cld
stc
push
loop
ds
cld
dec
sub
sti
les
lock
out
xchg
test
xor
shlb
pop
adc
xchg
iret
js
xor
mov
pushf
lods
cmpsl
fcoms
loope
jbe
sbb
testb
jmp
test
sbb
ljmp
stos
xor
jecxz
push
aaa
add
mov
imul
pop
push
add
adc
push
jmp
mov
call
rclb
or
bound
dec
pop
pop
aaa
outsb
or
inc
xchg
adc
lret
mov
cmp
pop
xor
lds
push
std
jb
inc
negb
pop
in
out
sbb
jp
scas
cmpsb
cli
mov
mov
pop
cmpb
xchg
mov
dec
lahf
add
mov
and
cmp
dec
mov
push
jl
add
jno
int
push
dec
popf
mov
pop
sub
loope
push
or
out
push
cmp
lods
cmp
repz
add
push
jecxz
push
dec
mov
jle
push
xchg
sub
push
movsb
popf
stos
sub
std
cmp
stc
fldl
push
adc
xlat
xor
fs
ljmp
movsb
dec
mov
or
sbb
insl
imul
enter
mov
out
popw
aam
in
adc
ret
jl
int3
jmp
dec
cmc
inc
es
jb
add
mov
fstpt
daa
insl
mov
lds
lock
aaa
xor
pop
mov
jae
mov
dec
sar
or
sub
cltd
cs
fs
repnz
pop
pop
cli
int3
mov
push
ss
pop
es
fs
push
insb
push
cmp
xchg
sub
mov
pusha
add
adc
pop
dec
mov
call
push
adc
adc
dec
das
xor
pop
xchg
dec
mov
loope
fstps
or
rclb
mov
or
xlat
cmc
ljmp
mov
packssdw
dec
into
push
je
push
pop
out
leave
movsb
adc
mov
or
aad
mov
xchg
push
out
fimull
mov
jb
and
pop
leave
mov
xorb
jg
push
out
cmpsl
sub
mov
sbb
out
loope
shl
jbe
mov
repz
outsb
loop
cmc
cli
icebp
ficomps
push
cmp
cmp
adc
mov
push
lock
out
adc
inc
iret
outsb
cltd
jb
insl
mov
dec
mov
fdivr
pop
dec
rcrb
xor
adc
push
xchg
xchg
notl
popf
dec
inc
out
clc
xchg
insb
rcrl
and
lahf
push
mov
stc
inc
mov
repnz
mov
sbb
add
adc
pop
faddl
decb
lods
rorl
jmp
clc
scas
and
push
and
mov
lahf
and
ret
mov
int3
inc
enter
mov
ss
sub
dec
xchg
sti
jns
sub
xor
ret
xor
mov
sub
enter
aad
mov
inc
push
and
decb
push
testl
cmc
mov
sub
jmp
pop
adc
xchg
out
ret
mov
adc
xor
cmp
sub
sbb
int3
dec
gs
nop
test
lds
imul
scas
jg
test
xchg
cmp
adc
push
roll
aaa
xor
inc
adc
idivl
call
mov
inc
jmp
lods
mov
xchg
stc
add
push
lahf
lret
jp
jne
ja
int
and
fwait
inc
mov
loop
xchg
cmp
jp
inc
aam
stc
mov
sub
ljmp
mov
xorb
cmp
xchg
fldenv
faddl
or
insl
lods
mov
loope
mov
pop
enter
shlb
cmp
aad
popa
fs
les
ss
dec
xor
mulb
outsl
push
cltd
nop
pop
dec
jo
mov
popa
decl
pop
aas
mov
add
mov
lods
and
subl
cmp
pop
std
loop
lcall
das
jge
cmp
lea
out
xchg
fstps
in
mov
repz
popf
popa
lahf
dec
test
mov
subl
adc
cmp
in
aaa
rcll
mov
xlat
cmc
xchg
adc
test
movsb
push
movsb
lcall
gs
mov
jne
or
clc
out
xor
xor
and
push
mov
adc
sbb
gs
inc
leave
stc
mov
mov
aas
cmc
mov
push
aam
sub
jns
iret
insl
xchg
mov
scas
pusha
jnp
adc
js
enter
xor
sub
idivb
cmp
bound
xor
cwtl
sbb
addr16
das
mov
mov
stc
out
pop
int
test
ret
jno
popf
jae
pusha
cmpb
jo
and
xchg
cmpb
inc
adc
sbb
xor
out
cmp
mov
lods
and
mov
mov
pop
cmp
repnz
sub
push
pop
int3
cmp
dec
loopne
pop
add
sub
scas
lock
inc
add
aam
pop
test
sub
stc
enter
jne
fwait
fs
cmp
imul
dec
mov
push
cltd
out
mov
mov
xchg
inc
sub
imul
mov
out
sub
jl
jne
sub
sub
and
jae
roll
in
cmpsb
rcrl
cmp
imul
movsb
iret
rcrb
pop
pop
sbb
push
sub
test
shl
fidivs
jbe
or
or
xchg
test
outsb
test
mov
faddp
mov
inc
push
arpl
add
mulb
neg
mov
aaa
inc
push
or
mov
mov
imul
ja
and
mov
ds
cmpsb
jae
jecxz
push
mov
movsb
add
dec
repnz
in
adc
push
push
loopne
lds
push
jecxz
push
sbb
decl
cmpsl
cmp
je
mov
hlt
pop
mov
jg
mov
in
or
rcr
cmp
ret
test
outsl
xchg
xchg
jne
scas
sub
mov
ficoml
xlat
test
in
mov
loopne
mov
mov
push
loopne
dec
or
mov
testl
mov
nop
bound
movsl
fwait
xchg
out
mov
aam
inc
pop
sahf
xor
add
jnp
cld
adc
aad
and
xor
push
lods
aaa
and
mov
pusha
test
or
es
adc
jne
xchg
mov
imul
idivb
mov
or
mov
enter
cld
lret
out
out
imul
popa
punpckhwd
sti
lods
pop
push
inc
mov
mov
xor
subb
test
xor
sbb
int3
xchg
call
push
faddl
rol
mov
xchg
mov
push
ficompl
ss
mov
dec
xchg
bndldx
sub
sbb
movsl
or
test
cli
jne
jnp
pop
out
je
cmp
fcoml
lods
rcrb
push
push
flds
leave
inc
or
lahf
dec
add
cmp
insb
scas
add
idivl
or
arpl
aaa
add
jp
xor
xor
in
leave
jl
mov
mov
push
pop
mov
mov
je
test
into
push
sbb
mov
cmp
outsl
ret
es
cmp
mov
xor
rolb
in
cs
movsl
mov
and
xchg
sbb
mov
mov
xor
in
pop
mov
inc
mov
xchg
aad
or
test
pop
popa
jno
dec
and
lods
jmp
or
sbb
leave
xor
pop
repz
pop
sbb
ss
mov
jp
fcomp
loope
std
mov
ret
xchg
and
xor
hlt
adcl
les
pop
adc
cmp
or
lods
cmp
sti
fsts
inc
bound
arpl
ja
push
cmp
lds
adc
xchg
xchg
les
int3
jns
sbb
into
stc
and
pop
int
sub
lock
inc
filds
add
cmc
add
push
ljmp
mov
mov
push
rcll
addr16
push
scas
mov
cmp
inc
sub
sbbl
aam
add
lods
mov
scas
add
jo
dec
es
rcl
push
ret
pop
and
shrb
dec
enter
iret
repz
dec
cmp
je
mov
decw
ljmp
add
sbb
xorb
cwtl
mov
xor
outsb
inc
out
dec
xor
movsb
stc
mov
ljmp
jno
pop
or
inc
jns
jbe
push
sub
jnp
rolb
push
cs
adc
jl
xchg
cmp
ds
leave
les
ret
test
repz
add
sbb
stc
cmpsl
jae
nop
rcll
movsb
push
out
jne
jg
stos
pop
mov
or
and
imul
outsl
hlt
in
sbb
or
stos
inc
push
push
lret
int3
mov
mov
inc
aam
jbe
test
mov
ss
clc
jb
es
into
adc
mov
dec
shrl
pop
jmp
out
dec
test
es
sbb
loopne
enter
test
sbb
adc
inc
jbe
mov
shrl
inc
icebp
inc
lods
inc
mov
push
or
mov
bound
mov
inc
dec
cmp
testb
mov
in
cmc
push
je
and
pushf
mov
ja
jno
push
push
in
or
xchg
out
inc
insl
in
lods
dec
push
lds
sti
push
xor
arpl
inc
gs
jns
notb
cwtl
jmp
ret
fisttpll
mov
push
mov
push
xor
mov
lods
scas
cld
xchg
pop
repz
jne
loop
xor
sarl
cltd
aam
pop
xchg
inc
mov
ja
ret
mov
je
cmpsl
loope
and
fistpll
push
cwtl
and
cmp
push
cs
and
adc
mov
daa
nop
nop
pop
push
sti
mov
sbbl
cmp
add
insl
adc
popf
cmc
mov
mov
in
rcl
mov
ljmp
and
lret
push
pop
je
hlt
and
in
cmpsl
pop
dec
xchg
xor
es
aam
add
pop
and
xchg
or
pop
jle
xchg
shrl
xlat
pop
outsb
mov
pop
cmp
test
cmp
add
inc
adc
fstl
jno
pop
pop
btc
xchg
inc
jmp
xor
mov
imul
lret
mov
fstps
fst
js
mov
sub
or
call
ss
pop
out
sub
mov
movl
test
jmp
xchg
xchg
push
sbb
inc
in
out
icebp
cmp
decl
pop
in
fwait
dec
pusha
xchg
cmp
ficompl
lea
addl
lock
ja
xchg
stc
ret
mov
mov
xlat
xorl
iret
push
lea
jno
xchg
out
mov
and
cmp
lahf
jns
out
and
mov
sub
out
inc
mov
andb
add
push
enter
lds
mov
sbb
mov
rcll
daa
adc
out
stc
aaa
push
les
fcmovne
adc
push
pop
mov
in
xchg
xor
enter
dec
cmp
in
and
and
or
cli
std
add
xor
mov
cmp
and
data16
pop
cmc
push
bnd
sub
cmp
inc
jge
dec
jo
fwait
cwtl
xchg
mov
pop
not
hlt
jge
and
push
mov
or
aad
repnz
pop
je
jne
sti
inc
pop
push
and
dec
mov
les
call
xchg
lock
inc
or
jge
sti
enter
je
ds
sbb
fadds
ds
mov
roll
jno
or
xchg
push
aam
lret
adcb
jg
push
gs
pop
ret
es
mov
mov
push
or
adc
and
pop
add
add
andl
push
repz
popa
in
fcmovnbe
shrl
cltd
push
sbb
fidivrl
jns
jge
idivl
ret
test
inc
into
adc
push
movsl
dec
cmp
and
dec
xor
lret
js
mov
add
and
shll
push
and
jo
arpl
int
repnz
inc
pop
int
xchg
out
sub
sar
aad
push
jge
popl
add
mov
js
xor
ret
into
daa
jle
enter
xor
xor
lahf
sbb
ret
flds
mov
arpl
push
scas
or
cmp
cld
xchg
mov
pop
push
sbb
add
sti
stc
add
mov
mov
es
xchg
push
popa
sbb
clc
pop
out
cwtl
icebp
sub
scas
xchg
lret
sub
push
and
sbb
or
xor
insb
icebp
mov
mov
mov
adc
fbstp
push
pusha
dec
orb
fs
arpl
or
lds
clc
cmpsb
add
or
aaa
mov
pop
xchg
dec
arpl
xchg
fldt
xor
stos
or
mov
jnp
pop
and
xor
sbb
fistl
idiv
mov
int3
pop
imul
call
ja
sbbb
testb
sub
jp
cmp
sbb
sbb
mov
testl
in
frstor
dec
dec
push
ljmp
lea
sub
jle
outsl
xchg
in
xorl
movsl
push
fiaddl
ficompl
adcl
jo
dec
jmp
mull
in
and
cld
shl
rolb
inc
push
sar
add
or
hlt
sbb
lock
dec
ficompl
ja
in
dec
mov
out
add
lcall
enter
dec
jno
rep
xor
in
sarl
mov
lods
fsubs
jno
ds
incb
pop
fwait
in
idivb
dec
jno
sbb
mov
or
icebp
mov
stc
dec
pop
aaa
mov
push
cmpsb
movsl
dec
roll
test
cmpsl
jb
jnp
mov
imul
xchg
jns
pushf
jne
mov
cmp
rol
jo
movsb
adc
fldl
xor
add
dec
fwait
mov
cmpsb
mov
add
mov
mov
cmp
scas
and
cmp
mov
push
mov
pop
pop
cmp
or
int3
in
xchg
push
test
cmpsl
and
mov
aam
sbb
cmp
push
mov
roll
add
push
pop
test
jl
es
dec
mov
mov
lods
inc
sub
xlat
out
movb
jne
int3
xchg
sbb
adc
and
ja
out
js
dec
push
iret
lret
frstpm(287
cmp
cmova
adc
setne
dec
cmp
icebp
enter
cwtl
push
loop
mov
outsl
push
mov
popf
jae
mov
push
adc
ftst
out
dec
jmp
in
insl
dec
dec
mov
ss
push
popa
inc
loop
cli
sbb
pushw
loope
cs
pop
das
jb
add
loope
and
sbb
lods
pushf
mov
jnp
mov
cmp
mov
jo
xchg
sub
icebp
mov
sub
out
push
sti
popa
ss
adc
xchg
adc
xor
and
push
sahf
icebp
cltd
loop
jno
sbb
dec
mov
loop
mull
jo
dec
dec
fwait
mov
push
xlat
inc
pushfw
insb
adc
sbb
and
jae
adc
lahf
flds
or
mov
or
shrb
fdivl
jmp
ret
xchg
insl
aas
in
sahf
push
fadds
cmp
cmp
in
repz
push
icebp
jo
cli
mov
fcmovne
addl
scas
push
xchg
out
xchg
or
sbb
ret
pop
outsb
lea
outsl
push
jo
lret
cli
lea
push
mov
ret
jnp
dec
cmp
pusha
and
je
mov
sbb
cld
loopne
jl
bound
movsl
lea
mov
cmp
ret
dec
inc
sub
pop
enter
test
inc
add
mov
jbe
ljmp
lret
mov
adc
xor
jg
jmp
test
lds
cmp
test
sbb
xor
in
dec
outsb
and
push
mov
cltd
cli
leave
test
push
cli
lea
inc
sbb
fsubrs
into
pop
xchg
lds
sbb
jmp
fstpl
lea
inc
push
fisttpll
sbb
jle
icebp
movsb
fsubl
adc
mov
jecxz
inc
xchg
pop
mov
jb
jne
mov
xchg
mov
jae
stos
pop
jg
xchg
pop
dec
cmpsl
cmpsl
jo
repnz
jae
mov
mov
add
pop
loop
jge
test
leave
cmp
fstl
add
sbb
push
jle
pop
movsl
fidivs
mov
mov
mov
scas
mov
stc
mov
fisubrl
fiaddl
jecxz
adcb
xor
sbb
mov
mov
lret
jnp
pop
ds
dec
add
je
js
movsb
sub
push
xor
pop
testl
scas
jge
push
add
xchg
je
es
movsb
pop
repz
iret
cmp
cmp
loope
sbb
jo
pusha
pop
jmp
push
adc
xor
stos
scas
xor
sbb
test
mov
icebp
inc
and
cmpsb
jbe
add
mov
pushf
jne
cli
inc
test
xor
filds
or
fsubrl
mov
lea
mov
cmpsb
xchg
repz
movsb
sub
ffree
mov
sub
rclb
or
add
xchg
inc
jb
idivl
mov
pop
out
int
mov
push
xchg
xlat
stos
clc
mov
cli
push
mov
outsl
push
outsl
push
imul
insb
fcoml
and
mov
push
ljmp
arpl
cltd
or
and
sbb
mov
test
xlat
lds
pop
das
pop
sbb
push
sub
adc
mov
add
mov
fnstsw
les
in
cmp
addr16
jne
mov
adc
sahf
scas
mov
xor
sub
xor
cld
sbb
jge
pop
sub
clc
and
mov
jp
out
cmp
sbb
xor
cli
or
mov
fucom
inc
mov
lock
loop
mov
test
add
sti
mov
push
sub
lahf
ljmp
push
hlt
xchg
into
sbb
lahf
push
mov
je
jns
leave
mov
xor
push
pop
fcmovbe
jno
mov
xor
adc
fwait
sub
test
push
xor
and
dec
or
clc
outsb
xor
imul
movsl
pop
aam
outsl
xor
fldt
pop
mov
jae
rcrl
jbe
call
aam
in
pushf
stos
cld
pop
addb
in
out
repz
getsec
push
sub
das
ret
call
dec
sub
mov
js
push
ss
dec
gs
repnz
clc
cs
mov
or
sahf
fistps
mov
test
loop
pusha
aam
mov
rcll
sti
and
insl
adc
loope
mov
ss
dec
mov
push
cmp
xor
stc
clc
test
out
jp
and
test
int3
sub
nop
lock
inc
add
mov
push
ljmp
test
shrb
out
lsl
mov
mov
andb
dec
sub
jb
xor
out
or
dec
lds
cmpsl
int
mov
test
pop
fiadds
adc
ja
push
enter
outsl
outsb
pop
arpl
out
insl
sahf
add
xor
outsb
cmpsb
or
lds
fiaddl
rorl
movsl
sub
test
or
pop
mov
stos
orl
sub
ds
xchg
out
dec
repnz
mov
push
dec
into
in
and
in
pop
aaa
gs
std
sbbl
loop
je
pop
adc
loope
neg
jecxz
test
scas
aad
xchg
roll
imul
pushf
adc
test
shlb
xchg
fisttps
lcall
mov
outsb
shrb
jbe
stos
in
lods
je
push
hlt
notl
ret
push
adc
fstpt
inc
mov
adcb
loope
cmp
xor
cli
cmp
jge
shlb
stos
es
or
aaa
xchg
cli
inc
inc
adc
cs
shr
jle
std
dec
cmp
daa
lret
aad
aad
or
enter
data16
xchg
mov
sbb
and
inc
jnp
add
fisubl
mov
out
enter
aas
mov
mov
pop
int3
sbb
mov
xchg
adc
mov
fdivrl
mov
mov
mov
push
aaa
adc
popf
out
inc
pop
mov
sahf
orl
andl
push
mov
fisttpl
jmp
sarl
adc
popa
lahf
fsts
in
mov
sub
std
add
sbb
sbb
jbe
mov
mov
pop
push
xchg
shlb
cmpsb
xchg
mov
push
mov
mov
repz
add
jge
popa
xor
inc
je
pop
jbe
mov
pop
mov
loopne
inc
jecxz
push
push
test
xchg
adc
loope
aad
adc
xchg
adcb
jecxz
cmc
jl
pop
dec
mov
or
add
iret
adc
add
ss
rclb
mov
pusha
sbb
jne
sub
cmp
adc
jge
mov
out
fnstenv
inc
and
jl
out
jl
loope
jns
xor
call
call
addr16
xor
inc
adc
pop
mov
inc
icebp
testl
popf
xor
sub
cmp
lods
inc
loop
rolb
push
loope
inc
and
jp
jbe
mov
imul
movsl
pushf
cltd
sbb
dec
shlb
jp
xor
jno
test
adc
push
adc
push
pop
add
bound
movsb
repz
hlt
jno
dec
icebp
xchg
lahf
pop
and
mov
pop
into
adc
mov
fstpt
gs
sbb
mov
mov
jb
pushf
ret
cmp
jnp
aad
fs
icebp
jb
imul
push
jb
inc
test
icebp
and
mov
jns
xor
std
fnstenv
cmp
sbb
mov
movsb
and
push
cmpsl
xor
loope
int
and
push
or
and
js
mov
xor
adc
add
daa
pop
push
mov
cmp
in
cmp
movsb
pop
pusha
sub
rorl
shlb
mov
push
cld
fistl
jbe
bound
adc
dec
mov
pusha
cmp
mov
xchg
or
mov
aam
clc
adc
repnz
lahf
mov
jp
and
ret
sub
push
inc
xchg
sahf
push
jne
and
stc
pop
or
les
stos
int3
xchg
fnstcw
movsl
ret
lods
push
xor
test
pop
adc
xor
or
das
fcoml
fstpl
subl
cwtl
sub
stc
addr16
int3
jmp
add
fs
mov
and
adc
ficomps
mov
xchg
pop
jecxz
push
fists
cmc
xchg
mov
aas
cld
mov
fwait
add
lock
les
add
mov
in
es
filds
mov
and
aaa
shlb
pop
jne
jmp
filds
jbe
pushf
push
adc
jns
or
fldcw
and
pop
mov
sub
and
jp
xor
fisubl
and
repz
mov
mov
xchg
push
cmpl
jmp
dec
sub
inc
fsubl
outsl
push
sbb
repz
push
testl
pop
cmova
cmp
bnd
sub
adc
jo
cmp
test
jo
and
iret
in
lahf
pop
push
sbb
popf
cmp
lcall
fidivrl
ja
je
repz
loope
or
insl
mov
or
jmp
jae
pop
push
mov
push
and
inc
lcall
adcl
xchg
xchg
leave
xor
sub
add
in
mov
call
pop
adc
fwait
mov
or
fld1
sbb
add
pop
xor
ljmp
inc
or
lock
cs
push
adc
lret
mov
int
jns
cmp
mov
inc
movsl
mov
dec
das
ficoml
into
inc
rolb
xchg
iret
lods
imul
lret
add
push
lret
mov
and
pop
in
mov
dec
enter
pop
hlt
clc
add
imul
lret
xor
mov
lods
rorb
ja
dec
jb
stc
data16
add
mov
cli
pop
and
mov
call
int
enter
add
inc
sbb
inc
xchg
inc
loope
pushf
or
movsl
je
jle
xchg
pushf
and
cmp
xor
testb
mov
outsb
fcmovb
das
pusha
push
jg
leave
inc
cmc
add
jl
into
shrl
imul
arpl
mov
or
frstor
xchg
test
pusha
adc
orb
fnstsw
in
pop
cmp
cmp
fld
pop
mov
mov
push
jp
xchg
lcall
je
pop
sbb
dec
mov
movsb
bound
sbb
push
iret
mov
sahf
mov
cmp
adc
push
push
or
mov
xor
lea
mov
add
mov
cmp
push
outsl
out
xchg
inc
mov
cmp
inc
nop
adc
sti
stos
ss
mov
push
outsb
add
jae
popf
jle
cltd
ficomps
pushf
or
push
mov
data16
and
inc
inc
jmp
int3
jo
push
out
jo
mov
hlt
inc
sbb
test
iret
int
mov
aam
inc
aam
mov
and
dec
fsubrl
mov
sbb
loop
fs
push
pop
or
jno
fidivrl
jl
push
mov
cmc
out
mov
push
cltd
mov
cmp
inc
push
or
dec
sbb
sub
addl
popa
arpl
and
enter
jns
dec
ja
push
ds
xchg
daa
test
push
or
or
aam
jns
sub
push
dec
xor
pop
cmpsl
sbb
pop
inc
loop
fs
cld
outsb
jmp
cmp
out
jae
cltd
inc
addr16
dec
mov
adc
out
mov
outsb
test
dec
mov
mov
mov
dec
jno
pop
push
filds
pop
jp
xchg
cmp
push
lea
xchg
mov
jl
rcrl
mov
popf
pop
cmp
sbb
cmc
std
das
jmp
push
bound
mov
mov
cmp
out
stos
sub
aad
and
dec
das
inc
fistpl
xor
push
ret
popa
pop
cltd
out
sbb
adc
jo
jge
sub
adc
cli
pushaw
or
hlt
test
sub
roll
dec
fisubrs
or
int3
fsubrs
rorb
js
xchg
pop
lahf
cmp
imul
je
inc
stc
aas
addr16
jle
cmpsb
in
add
xchg
out
mov
daa
scas
push
push
mov
ret
dec
out
std
jno
sbb
test
dec
xor
sub
loopne
in
faddl
bound
adc
xchg
push
add
repnz
dec
sub
je
jge
jle
fcomps
mov
sbb
pop
call
inc
or
xor
sub
ss
fwait
aas
mov
in
lods
jnp
or
sarl
jo
cmp
pop
fmuls
in
mov
push
adc
aam
repnz
mov
inc
cwtl
push
dec
fnstsw
push
jle
insb
mov
ret
jecxz
repnz
ror
inc
maxps
sbb
lds
and
sti
ljmp
fbld
call
lahf
lcall
test
cmp
adc
out
fbld
pop
leave
or
lcall
sub
js
cmpsl
cmpsb
pop
mov
push
nop
pop
mull
jmp
mov
adcb
jp
shlb
rcll
jbe
jle
mov
mov
mov
out
sub
mov
aaa
lcall
ss
xchg
mov
mov
mov
sub
cmp
int
aaa
ljmp
jle
jg
mov
dec
insl
pusha
push
outsl
inc
push
xchg
repnz
lock
jge
xor
mov
data16
sbb
mov
cmp
lcall
and
jb
in
aam
bound
repz
bound
ja
mov
sahf
insb
js
int3
jp
in
arpl
imul
inc
pushf
shlb
mov
call
sahf
lock
inc
dec
xor
and
shrl
and
clc
ds
jmp
jno
mov
stos
xor
fidivl
mov
mov
ret
xor
add
lret
and
es
lods
xchg
add
outsb
in
xchg
xor
divps
jb
and
add
sbb
inc
push
stos
add
stos
stc
adc
xor
ds
mov
stos
dec
jnp
adc
adc
jbe
jne
mov
fwait
inc
or
aad
mov
dec
adc
mov
push
jae
inc
iret
repz
sub
jge
sbb
mov
aas
adcl
sub
dec
or
push
out
pop
ljmp
inc
aad
sti
leave
mov
int
std
jl
aam
sbb
push
insb
movsl
mov
xchg
int3
scas
cli
cmp
sbb
and
pop
nop
aad
imul
test
or
cld
adc
popa
add
lret
jo
cmp
xchg
repz
orl
xchg
in
mov
sub
cld
or
hlt
cld
dec
jle
cmc
mov
ret
aam
imul
sbb
or
add
pop
sub
adc
mov
sbb
imul
and
jge
mov
or
xchg
mov
inc
cmp
pusha
mov
or
pop
jmp
cmp
hlt
mov
lcall
pop
mov
lret
mov
out
xchg
rorl
adc
and
cmpsb
mov
and
xlat
inc
rorl
enter
and
idivl
sbb
sub
cmpsl
aas
andl
mov
jge
mov
outsl
stos
xor
push
fadds
jo
jo
out
fnsetpm(287
or
xchg
fcmovbe
mov
popa
sarb
nop
lods
xlat
idivl
jmp
repz
xchg
icebp
adc
icebp
mov
repz
mov
fptan
imul
andb
push
and
popl
mov
ss
inc
test
add
lahf
adc
out
lcall
jae
and
or
dec
lcall
mov
rolb
hlt
js
cmpsb
adc
or
scas
int3
mov
lock
aaa
daa
std
dec
call
jo
mov
lea
mov
adc
xor
dec
out
xchg
add
popa
mov
cmp
inc
aad
in
mov
xchg
std
inc
pop
mov
xchg
jb
sub
pop
and
sub
lcall
xchg
repz
int
adc
fwait
enter
adc
out
cmpb
lods
data16
lea
xor
jns
pushf
add
dec
push
mov
jp
sbb
mov
lods
mov
lock
out
sub
add
jns
stos
xor
xchg
inc
loop
adc
jmp
push
dec
int
test
fiaddl
push
push
call
fsubrl
pop
int3
lret
xchg
scas
es
add
fmuls
cs
pusha
hlt
push
in
adc
fistpll
lcall
xor
jb
movsb
xor
dec
pop
ss
xchg
inc
outsb
mov
pop
aad
movsl
push
xchg
dec
insb
scas
inc
cmpb
ss
inc
into
xchg
xchg
and
and
cmp
rcrl
mov
mov
movb
add
sbb
addw
xchg
sbb
cmc
ret
add
dec
pop
je
fwait
inc
rorl
pop
insb
mov
mov
push
jbe
clc
cmpsb
fmull
inc
pop
dec
sub
or
dec
cmp
loop
int
je
mov
ja
loope
adc
mulb
pop
mov
insb
repnz
int3
lea
jecxz
mov
or
call
imul
or
mov
fdiv
sub
outsb
xor
in
int
inc
fcom
jnp
lds
mov
ljmp
stc
xor
jae
clc
in
or
mov
test
push
mov
loopne
mov
daa
sub
dec
jno
push
push
andb
out
cmp
invd
stos
push
in
fadds
sbb
loopne
aaa
sub
dec
inc
mov
dec
sbb
andb
mov
into
jae
popa
movsb
dec
icebp
aaa
rol
fisttps
pop
mov
sbb
mov
push
mov
jl
sbb
test
nop
mov
aad
dec
jmp
pop
inc
sbb
mov
mov
mov
cmc
xor
loop
push
out
orl
xor
icebp
insl
inc
dec
sbb
test
push
pop
or
inc
pop
stos
movsb
ljmp
xor
ret
cmp
dec
lret
mov
and
mov
and
lret
mov
pop
sti
xchg
mov
adcb
adc
movsl
ljmp
cmp
fimull
bound
mov
or
gs
mov
jle
and
out
fcomps
outsb
bound
stc
ret
sub
scas
dec
push
add
cmpsb
cmp
mov
pop
push
cmp
xor
cmp
pop
lods
scas
lock
push
mov
pop
insb
push
ficomps
ret
jmp
xchg
mov
mov
rolb
inc
fidivl
stc
push
mov
addr16
wrmsr
jp
push
adc
xchg
jle
imulb
dec
adc
and
push
call
lret
nop
cmpl
shlb
in
mov
adc
stc
loope
clc
push
adc
call
jg
inc
pop
fsincos
or
xchg
and
mov
jne
es
add
xor
pop
enter
popa
std
mov
test
mov
mov
loop
or
and
div
bound
mov
data16
nop
testb
das
xchg
lahf
pop
pop
add
pushw
jmp
fs
adc
es
xor
cmp
je
push
out
pop
mov
pop
pusha
popf
xor
pop
jbe
xor
add
add
xor
addb
add
dec
cmp
test
int
shll
cmpsb
sbb
decb
inc
out
jp
mov
rol
cltd
adcl
mov
mov
pop
push
and
sbb
sahf
cmp
adc
movsl
pusha
cmp
mov
loopne
sbb
mov
cltd
ja
in
jg
push
add
lret
mov
pop
lahf
nop
imul
ret
jnp
dec
sahf
mov
ret
dec
fnsave
fists
adc
negb
xor
es
sti
fincstp
pop
test
clc
xchg
xor
xor
xor
popf
pop
push
mov
jb
ds
test
sbb
and
rorb
pavgw
leave
jp
mov
mov
icebp
mov
and
rcll
adc
out
jb
push
jle
jbe
sahf
hlt
mov
ljmp
scas
xchg
add
sahf
push
cs
mov
or
sbb
ss
mov
arpl
lods
mov
sarl
mov
repnz
loop
ror
mov
xchg
cmp
jbe
pop
std
lahf
inc
in
inc
push
cltd
test
add
data16
popa
adc
cmp
out
push
data16
push
cltd
or
aad
dec
push
test
push
test
dec
int3
sbb
les
mov
imul
lret
pop
or
xchg
xchg
bound
inc
or
inc
or
or
icebp
inc
loope
xor
ret
push
movsb
stos
sub
sbb
in
push
shrb
fcompl
ljmp
mov
xor
jnp
pop
add
fsubrl
adc
clc
les
leave
mov
dec
cmpl
or
lea
mov
lods
mov
pop
cmpl
faddp
lds
js
and
xchg
mov
push
lcall
lahf
dec
or
pop
add
push
std
dec
jne
xchg
add
mov
cmp
dec
xor
mov
or
xor
push
adc
mov
xlat
fs
sbb
inc
out
cmp
out
out
daa
mov
outsb
les
jb
mov
pop
push
cmp
outsb
gs
ss
in
jnp
jecxz
cli
mov
xchg
xor
pop
or
out
cmpsl
pop
xchg
cmp
in
popf
out
xchg
fstl
sbb
xor
scas
jge
je
jne
and
xchg
fcmovnu
fists
clc
adc
sbb
mov
fdivrs
sub
jno
inc
cmp
mov
addl
xchg
fadds
iret
das
movsb
out
nop
cmp
sub
sahf
dec
cmp
inc
mov
cmp
mov
movl
stc
mov
pop
sbb
nop
cmp
push
jecxz
xchg
cli
jge
inc
push
movsl
testb
inc
jo
movsb
movsl
dec
jmp
js
push
mov
out
stos
or
int3
push
sbb
test
sbb
sti
jmp
ret
jge
jbe
out
adc
fldt
call
add
jbe
repz
pop
push
or
add
int3
rcll
pop
dec
rorl
mov
xor
push
outsl
out
xlat
inc
daa
dec
pop
loopne
mov
jno
fdivrs
out
mov
xchg
je
out
dec
pop
dec
jg
push
fistps
sbb
xor
xchg
push
sub
mov
mov
cmpsl
inc
sbb
and
mov
leavew
orl
mov
jge
mov
sbb
mov
sbb
outsb
mov
mov
xchg
mov
pop
insl
xor
test
mov
adc
push
mov
jle
lods
sbb
cmpl
mov
cmp
pop
incb
lcall
and
pop
xchg
mov
xchg
mov
es
pop
loopne
arpl
repnz
popa
xchg
pop
pop
shl
imul
cmp
in
mov
mov
ja
shl
adc
ja
push
sbb
in
es
pushf
lcall
add
imul
mov
pop
adc
imulb
ja
mov
adc
dec
imul
sbb
mov
mov
mov
pop
fidivl
xchg
enter
jo
mov
aam
push
mov
and
xchg
repnz
cmp
popa
xchg
addb
mov
jne
std
sub
test
push
daa
xchg
test
jbe
call
pop
fcom
lods
cmpsl
jl
scas
inc
add
das
xchg
jmp
cmp
jns
cmp
push
xor
sub
out
push
and
sub
jge
test
jb
jnp
push
adc
inc
fistpl
out
es
pop
mov
cmp
jo
rolb
pop
mov
mov
pop
pop
jmp
cmp
jo
inc
jecxz
or
adc
popf
rcrl
pop
dec
xor
icebp
repz
insl
mov
js
and
or
inc
push
outsl
xor
adc
mov
in
mov
or
cmc
lds
jne
leave
adc
dec
out
push
add
sbb
movsb
loop
pop
cmp
sub
clc
movsb
pushf
imul
or
outsb
xor
and
xchg
dec
jmp
pop
outsl
shr
scas
xchg
mov
pop
movsl
dec
dec
lret
dec
iret
mov
add
cwtl
and
xor
mov
pushf
sub
cmpsl
repz
mov
es
pop
insb
cwtl
rcr
pop
aam
in
scas
fdivrl
mov
fwait
xchg
arpl
js
or
lret
or
sti
adc
jg
imul
xor
call
test
push
adc
mov
lods
stos
inc
adc
xchg
jle
pushf
mov
rcll
xchg
push
dec
stc
add
add
cmp
inc
mov
lcall
loop
je
imul
ja
mov
inc
into
sub
into
in
mov
cmpsb
jns
ss
cmp
dec
fwait
jl
test
cmpsb
call
movsb
nop
push
fbstp
mov
repz
and
xchg
adc
sahf
enter
ljmp
add
imul
sub
xchg
push
js
leave
stos
dec
push
sub
cmc
daa
push
mov
iret
cmpsl
ljmp
mov
add
out
mov
nop
sti
jp
mov
and
popa
jb
xchg
out
mov
jl
push
cs
push
dec
xchg
addl
gs
ret
mov
dec
add
jae
sti
jae
xor
cmp
movsl
inc
jns
adc
inc
je
dec
lods
or
mov
scas
mov
fnstenv
mov
jmp
or
pusha
insb
dec
cwtl
jae
enter
scas
lds
jge
cmc
mov
shrb
ret
ja
outsl
hlt
xorb
rorl
fwait
cmc
and
xor
xchg
jnp
dec
add
outsb
push
mov
popa
das
push
aas
jl
sbbl
add
mov
xchg
push
inc
xchg
adc
and
push
in
jecxz
cmpsl
lock
cmp
xchg
adcl
std
dec
js
push
pop
cld
ret
mov
mov
adc
shll
ljmp
mov
pop
lcall
adc
in
dec
fiadds
sbb
stc
push
pop
push
mov
nop
sbb
test
pop
xchg
jmp
inc
aam
in
je
insb
mov
xor
ficoml
dec
aas
cld
or
cltd
shlb
add
out
enter
mov
push
inc
movsb
or
fists
push
xor
ret
shlb
pop
push
dec
cmpsb
mov
jo
jne
aad
hlt
sub
cmc
fwait
in
push
mov
inc
xchg
xchg
or
fs
xor
fnstsw
ret
icebp
inc
push
inc
mov
popf
movsl
or
ficompl
ret
dec
mov
lds
fistpl
sub
jmp
inc
mov
adc
adc
or
jge
mov
xchg
inc
add
decb
mov
sahf
mov
push
rolb
sbb
cmp
or
or
pop
adc
clc
inc
jo
imul
cltd
outsb
fistpl
fdivrs
outsl
insl
mov
pushf
mov
dec
adc
xchg
loop
test
or
daa
sub
fisubs
mov
std
jecxz
mov
movsl
pop
ret
idiv
call
lcall
movsb
fists
xor
cli
or
push
xchg
movsl
inc
dec
popf
and
sarl
lods
mov
test
dec
cmp
pop
cmp
pop
xor
pop
lret
test
hlt
jle
mov
cmpsb
mov
jle
int
pop
out
jns
pop
mov
or
into
push
xchg
mov
int
cmp
jecxz
insl
inc
in
pop
push
dec
cli
loope
scas
pop
loope
mov
pop
and
insl
jge
cmp
pop
jne
mov
fwait
cmp
ret
adc
fisttpl
jp
add
rolb
lods
dec
sub
std
jmp
pop
gs
push
mov
loopne
fprem
push
jg
pop
sbb
adc
adc
rcrb
je
mov
mov
testl
push
lods
cmp
das
lcall
inc
dec
out
sbb
scas
pop
mov
lods
mov
jl
int3
sbb
pushl
out
movl
mov
dec
test
mov
fcmovnbe
shr
pushf
mov
leave
mov
adc
movsl
jo
mov
sub
jnp
mov
sbb
xchg
push
ljmp
mov
dec
dec
shlb
dec
adc
jbe
leave
das
orl
mov
and
cmp
inc
outsb
push
xchg
divl
cmp
in
into
lret
add
push
ds
stos
les
sbb
dec
inc
xorb
cmpb
lock
shrb
scas
std
outsb
lcall
hlt
enter
mov
clc
nop
dec
cs
pop
xchg
jno
push
inc
adc
test
mov
cmp
lods
addr16
cli
in
test
mov
jns
call
in
pusha
jle
dec
fistpll
or
aam
dec
cmp
pop
push
xor
scas
dec
sbb
je
ds
pop
jmp
mov
pop
pop
stos
int
stos
sub
dec
out
mov
int3
xor
add
pop
out
ljmp
cmp
push
lcall
add
mov
jae
lahf
pop
pop
adc
aas
test
into
data16
sbb
daa
orl
leave
pop
sub
xor
std
test
or
sarb
mov
mov
fcmovne
mov
pop
xchg
scas
fldt
xor
pop
std
cmp
mov
enter
dec
xor
sti
jecxz
mov
outsb
add
xor
sub
in
mov
popf
stc
sub
shll
add
pop
xchg
jg
add
jge
push
adc
pop
sub
jle
repz
iret
in
out
cmp
add
push
loopne
mov
sub
lock
dec
pop
mov
bound
das
lcall
cli
mov
mov
mov
add
lret
mov
and
jo
imul
inc
xor
jg
push
add
sbb
inc
push
adc
inc
pop
mov
pop
xchg
scas
jne
or
dec
jo
daa
das
imul
mov
pop
mov
mov
fidivrs
push
in
pop
bound
mov
push
pop
push
idiv
adc
lock
leave
push
ficomps
add
or
lcall
push
lock
or
out
insb
pop
sarb
popa
lahf
add
addr16
lock
push
xchg
pop
xor
enter
ret
inc
div
dec
xlat
mov
cmp
mov
mov
jnp
jns
jne
rcrb
mull
int
out
sbb
sbb
or
cmpsb
gs
std
push
or
les
bound
inc
xor
inc
and
jo
jo
sahf
rcr
ficoms
pop
dec
out
jno
getsec
jmp
xchg
add
xchg
loop
inc
dec
cmpsl
rolb
xor
decb
dec
jecxz
pop
rcr
dec
xchg
cmp
insl
mov
insl
or
aad
xlat
dec
jne
sbb
icebp
sahf
mov
sbb
and
in
xor
in
pusha
movsl
stos
and
int3
jo
cmp
lcall
pushf
inc
out
xchg
sub
mov
cld
adc
or
cwtl
sbb
pop
or
pop
sbb
enter
int
fs
pushf
jecxz
jno
loope
mov
pop
dec
mov
es
int
pusha
mov
push
fidivs
dec
test
xchg
mov
sarb
dec
test
imul
jns
cmp
lret
xchg
push
hlt
mov
adc
loope
or
pop
andb
mov
mov
cmc
mov
shll
pop
adc
mov
clc
push
xchg
cmp
stos
out
in
sbb
cwtl
or
adc
aas
test
imul
les
mov
sahf
jecxz
pop
push
mov
adc
jge
lods
xor
rcl
negl
idivl
stos
and
iret
cmp
mov
fistl
push
arpl
lock
cld
jle
lock
inc
inc
push
push
mov
push
ffree
sub
push
ficoms
inc
std
enter
fdivr
outsl
insl
adc
imulb
in
mov
pusha
stos
push
outsb
fsubr
pop
jns
test
push
fisubs
lock
adc
imull
fistl
sti
or
cmp
cmp
jle
sar
jno
stos
lret
cmc
xor
xchg
jg
jmp
pcmpeqb
aam
lret
sub
sti
pop
lret
mov
jecxz
pusha
out
mov
dec
dec
push
pop
fldlg2
sub
jg
mov
repnz
inc
fsubl
out
pop
jmp
sbb
lret
orb
cmpb
fdivl
cld
mov
testb
jl
repnz
dec
lcall
jp
fstp
jbe
mov
fidivs
lahf
insl
sub
out
les
lods
in
or
push
jmp
arpl
jne
mov
cmpsl
pop
scas
push
movsl
cmpsb
push
fiaddl
out
inc
aad
scas
pop
pop
xchg
dec
in
lcall
fwait
jbe
loope
faddp
rorb
sub
push
sub
mov
lods
xchg
or
pop
adc
addl
daa
fiaddl
ja
fistl
jno
push
mov
js
cmp
dec
mov
out
cmp
sahf
jns
scas
insb
jns
out
sbb
adcb
inc
in
push
scas
gs
add
dec
mov
lods
pop
insb
es
xor
lods
jmp
xchg
dec
addr16
adc
in
into
in
or
cmp
mov
jmp
jle
lahf
cmp
ds
leave
or
sbb
mov
jle
push
mov
leave
and
movsl
adc
out
call
pushf
into
or
fnstsw
fildll
sub
adc
fs
mov
xor
fisttpl
aam
and
mov
js
int3
icebp
sbb
and
mov
sub
fistpll
mov
jge
jns
cmpsb
lret
sbb
sbb
jp
stos
stos
or
bound
xor
jb
mov
pop
imul
addr16
fcompl
sub
dec
fsubp
outsb
rolb
stos
and
in
and
int
push
pop
or
je
mov
jge
mov
das
add
or
scas
popl
icebp
ret
cmp
dec
insb
js
mov
icebp
nop
push
je
in
ret
aaa
ds
lds
lret
imul
push
adc
adc
xor
clc
xchg
or
in
cmp
or
inc
sarl
mull
pop
std
int3
pop
jle
call
xchg
fistps
inc
fcmovbe
rcrl
push
xor
ja
scas
jb
pusha
adc
or
jp
jmp
push
rol
repz
lret
dec
stos
out
in
xor
xchg
inc
cs
sub
mov
movsl
cmp
mov
adc
mov
shl
mov
xchg
lods
pop
bswap
stos
rcrb
mov
sbb
cli
test
int
mov
rol
add
sbb
mov
xchg
test
add
jp
add
lods
out
jo
les
xchg
mov
push
push
outsl
bound
outsb
jb
movb
fimull
imul
mov
sbb
sub
repz
lret
sbb
addr16
cmp
xor
ja
jbe
mov
sbb
or
inc
and
and
push
das
daa
test
mov
mov
daa
lcall
inc
rorl
out
fs
jnp
lea
mov
and
shlb
xorl
jle
xor
jae
enter
ret
cmp
mov
push
and
sbb
sbb
insb
cmp
sahf
add
xchg
icebp
loop
jge
xlat
mov
popf
cmp
push
scas
enter
cmovnp
adc
enter
push
sub
out
xchg
mov
xchg
mov
sbb
mov
lock
mov
sub
dec
adc
test
bnd
and
and
push
jnp
or
fcmovu
jecxz
bound
sub
xchg
jge
sahf
dec
mov
cwtl
enter
inc
push
or
addr16
mov
xchg
cmp
out
lea
xor
inc
dec
lret
mov
xchg
inc
negb
sbb
fidivs
xchg
mov
pusha
inc
adc
mov
not
cwtl
push
fldcw
inc
rol
cmp
cld
push
js
je
cmpb
in
stos
int
push
adc
push
aas
andl
ds
and
daa
sbb
jno
repnz
and
outsl
sbb
jp
enter
pop
rorb
popf
push
div
scas
cmpsl
js
nop
push
imul
in
jmp
sub
mov
sbb
mov
push
add
add
pop
push
push
rolb
ss
or
or
dec
cmpsb
inc
int
aaa
jb
pop
jg
mov
dec
call
dec
repz
sbb
rcll
cmp
aad
addr16
xchg
mov
mov
rcl
push
incl
shlb
mov
jg
mov
shrl
pop
cld
clc
in
sahf
pop
lret
adc
inc
packuswb
sbb
fs
pusha
xor
sbb
addr16
jp
out
lds
sbb
mov
and
pusha
rorl
arpl
sti
push
jmp
add
ja
xor
out
insl
mov
sti
mov
movlhps
dec
cmp
or
pop
cmpsl
scas
cmp
lock
sarl
js
iret
enter
mov
xchg
add
cs
icebp
push
int3
insb
xchg
xchg
push
push
cs
fldl
sbb
pop
push
push
loop
cmpsl
cmpxchg
mov
bound
adc
pop
adc
pop
dec
rorl
fnstsw
ja
cmpsb
pusha
or
mov
mov
bnd
fwait
jno
pop
bound
mov
fs
insl
aam
xor
lret
inc
sub
inc
push
or
lods
inc
fcomps
mov
push
sub
xor
cmp
cwtl
imul
sbb
xor
pop
adc
leave
inc
pop
jge
lret
fldt
xchg
jb
add
jg
cmp
outsl
in
adc
mov
dec
mov
js
test
xor
stos
movsl
lahf
or
stos
pop
inc
scas
mov
dec
and
push
call
aaa
lret
into
cmpsl
and
testb
sbb
insl
and
addr16
dec
dec
xor
xchg
mov
add
mov
xchg
inc
notb
ret
mov
dec
xchg
shrl
nop
lahf
dec
ret
add
shll
shlb
xchg
dec
es
mov
sbbl
or
daa
movsl
aad
add
adc
cmpsl
cmp
adc
pop
fstpt
ljmp
push
adc
out
add
shrb
roll
mov
jle
lahf
rcll
out
cld
xor
mov
push
inc
pop
cmp
out
xor
int
fldt
sbb
jo
or
fdivl
lret
in
push
sti
cmpsb
mov
scas
js
out
fidivrl
push
jbe
mov
icebp
in
pop
sub
test
shll
mov
fidivrl
sub
and
mov
and
cmc
int3
dec
lods
dec
das
pop
and
test
pop
pop
xchg
sysret
leave
adc
stc
dec
es
pop
sub
or
stc
sbb
dec
fcoml
xchg
hlt
jl
inc
sbb
in
lahf
dec
pop
clc
movsl
cmc
jp
movsl
push
xchg
pop
push
or
sbb
mov
iret
push
stc
ficoml
mov
xchg
test
push
pop
mov
sbb
int3
repnz
insl
mov
pop
movsb
fwait
jmp
or
fistps
ror
lods
stos
inc
xchg
test
xchg
iret
cmpsb
es
sub
add
test
sub
jecxz
jg
aam
jo
xchg
inc
in
adc
mov
hlt
mov
cld
orb
lea
jne
sbb
dec
pop
mov
xor
es
outsb
out
test
push
aas
add
xor
dec
push
imul
lds
fstpl
stos
xchg
and
push
repz
call
scas
add
mov
mov
xor
sahf
pop
sti
jmp
cmp
shlb
mov
lahf
shl
xor
aam
fcos
ja
mov
arpl
add
xchg
lods
sub
movsb
fs
into
and
and
xor
fdiv
pusha
gs
pop
or
gs
mov
lods
js
inc
mov
sarb
aaa
fsubrl
data16
fwait
pop
rcrb
fisttpl
mov
sub
lret
mov
inc
fsubs
popf
in
rorb
or
int
rcll
mov
pusha
cmpsl
adc
xchg
mov
push
jge
gs
and
nop
sbb
loopne
mov
push
sbbl
fmull
sbb
outsb
or
popa
adc
sti
push
loop
mov
pushf
pop
mov
cmpsb
pop
ja
push
push
push
daa
stos
push
out
dec
cmp
push
add
out
dec
adc
xchg
xlat
out
adc
stos
add
mov
pop
xor
and
dec
mov
enter
lods
fisubrl
sbb
das
cmpsl
fiaddl
cmc
xchg
dec
lcall
sbb
loop
into
bound
pop
xor
data16
lods
inc
popf
mov
inc
bound
movsb
fcmovb
loope
sub
xchg
add
pop
pop
into
sub
xchg
xchg
out
adc
lret
or
pop
lods
add
sbb
adc
jp
push
imul
and
push
out
jb
lods
adc
mov
or
shll
jle
outsl
outsb
mull
xchg
decl
and
pop
or
or
dec
ds
decb
push
push
lods
or
sub
movsl
cmpb
sub
mov
pop
cwtl
push
mov
leave
add
ljmp
fnstsw
int
dec
lcall
push
cmpsb
mov
mov
in
jbe
gs
cmpsb
in
mov
xchg
and
push
scas
aas
lods
lods
xchg
and
and
mov
popf
or
xlat
sub
xchg
test
insb
leave
loop
push
notl
push
xchg
fsubs
clc
repnz
fstpt
adc
jp
cli
movsb
mov
lea
or
les
inc
ret
push
inc
ss
and
test
or
cmp
cmp
pmullw
std
pop
xor
sub
add
lahf
subb
insl
dec
mov
lahf
or
xor
push
cltd
add
cmp
fcoml
dec
xlat
mov
cmp
jne
loop
cltd
sbb
jle
pop
fs
pop
leave
jo
dec
popa
push
pop
insb
xor
stc
loopne
dec
fwait
loope
lcall
pop
add
xchg
adc
jae
mov
incb
dec
xor
sub
xchg
mov
mov
ljmp
push
sbb
add
pop
insl
rolb
repz
test
pushf
push
iret
mov
sub
test
mov
cmpsb
dec
shll
ss
adc
mov
inc
int
stc
fnstsw
and
jne
out
lcall
out
push
mov
add
push
sarl
popf
cmp
sub
pop
xchg
mov
or
dec
mov
inc
mov
fstpt
pop
pusha
mov
dec
ret
jle
shrl
mov
fidivl
mov
cmp
sarb
adc
jne
xchg
lock
adc
jmp
test
jbe
push
sub
gs
testl
and
cmpsb
sbb
mov
mov
sbb
mov
jp
inc
aad
mov
popa
clc
mov
sbb
or
rcrb
ds
lods
push
pop
std
shll
dec
cmp
fs
outsl
mulb
iret
mov
mov
stos
test
sbb
cmp
dec
sub
imul
aaa
aad
sahf
inc
xchg
mov
scas
ror
push
ss
sbb
clc
pop
mov
mov
jno
jecxz
add
shr
out
push
xor
mov
push
icebp
sub
lock
hlt
add
inc
sub
xchg
mov
out
mov
test
inc
in
insl
xchg
dec
jns
inc
or
test
xchg
pop
mov
mov
push
std
ljmp
outsl
xchg
shll
jmp
rol
test
test
jl
jp
push
dec
pop
call
ficoms
andl
test
fstpl
call
xor
mov
enter
rolb
in
inc
cmp
pop
dec
push
ds
cmp
lret
out
pop
xchg
mov
inc
cld
hlt
popa
mov
add
lret
into
dec
pushf
pop
adc
cmp
sub
jl
xchg
mov
fs
pop
scas
inc
sub
and
adc
xchg
pop
push
cmp
ds
cmc
mov
test
xchg
adc
sub
jno
adc
mov
inc
fstps
add
inc
and
movsl
test
je
sti
pop
cmp
push
stos
pushf
decb
push
fwait
test
mov
fstps
sahf
cmpsl
int
mov
jg,pn
inc
mov
arpl
mov
sbb
jmp
dec
sbb
idivb
js
cld
xchg
push
cmpsb
iret
rorb
in
mov
push
std
inc
mov
or
add
mov
insl
movsl
cmp
jno
ja
jl
inc
xchg
stos
shufps
or
cmp
pop
inc
out
inc
dec
sub
jo
ret
cmp
mov
adc
mov
push
fdivrs
imul
mov
mov
adc
push
clc
adc
sbb
push
sub
lock
loope
sahf
out
add
mov
gs
adc
ret
sub
add
sarl
into
or
xor
inc
jl
mov
ljmp
jp
in
sbb
int
jecxz
push
sub
aad
sbb
xchg
xor
sar
pop
lock
or
enter
scas
adc
dec
pusha
xor
aas
repz
pop
mov
push
dec
sahf
dec
fwait
arpl
and
and
cmp
cli
fldl
cmp
repnz
jmp
sahf
out
sbb
in
shlb
test
mov
leave
test
pop
in
cs
or
fsubrl
subb
shlb
das
nop
stos
sbb
ljmp
pop
adc
mov
mov
push
std
or
cmp
sub
add
mov
cmpsb
and
inc
xor
dec
push
popf
and
sub
sarb
pushf
nop
in
iret
adc
pop
pusha
cmpsl
addr16
push
xchg
mov
fists
push
mov
lock
imul
cmpsl
rcll
cmp
jp,pt
out
bound
xchg
frstor
adc
lcall
push
adc
fisubrl
fwait
cmp
ja
cmc
mov
orl
cmp
imul
aam
or
ljmp
sbb
cmp
pop
jb
and
push
adc
ds
test
jmp
push
xor
mov
jbe
or
push
dec
or
or
jne
aaa
sbb
in
outsb
xchg
xchg
xchg
test
scas
frstor
loop
lds
inc
push
cmc
sbb
aas
xchg
lods
out
out
xchg
cmpsb
and
repz
dec
dec
push
outsl
outsb
arpl
rcll
push
jg
adc
sub
push
mov
jns
dec
arpl
test
xor
push
in
rcl
jno
jmp
mov
loope
ja
dec
test
fstp
cmp
andl
into
jb
shlb
addr16
push
jnp
cmp
movsb
sub
jno
leave
cmpsb
pop
push
outsl
jmp
shrb
leave
jmp
xor
cmp
jnp
xchg
lret
cs
into
repnz
roll
aaa
push
test
push
lods
scas
jb
lret
jecxz
add
pop
cmpsb
dec
mov
ja
xor
sbbl
xor
fwait
cmp
xor
cmp
jge
iret
scas
push
inc
gs
ds
cs
in
movsl
or
adc
mov
add
jge
repnz
pop
adc
cmp
rol
dec
sub
adc
aas
mov
nop
enter
mov
out
testl
pop
pushf
cmp
sbb
lret
fst
mov
sbb
push
xchg
or
fidivl
scas
mov
lods
cwtl
fimull
or
add
sbb
pop
push
imulb
cmp
push
adc
push
mov
xchg
push
js
cmc
jle
pop
out
mov
and
fnstsw
adc
jge
lahf
ret
mov
jnp
rcll
iret
mov
xor
sti
xchg
dec
shll
or
xchg
jne
test
mov
loopne
fwait
sub
add
xor
mov
fidivrl
imul
pusha
fdivs
jne
sbb
insb
and
out
test
imul
enter
mov
and
inc
xchg
movsb
test
add
pop
jne
shl
xor
adc
fwait
aad
mov
sti
sbbb
push
js
ds
inc
out
or
pushf
adc
xor
dec
stos
loopne
xchg
lods
shl
cli
jmp
cmp
aad
stos
pop
testl
jle
icebp
daa
push
inc
jp
mov
cltd
scas
inc
sub
mov
ljmp
add
lds
icebp
sbb
adc
xor
js
jl
das
shll
dec
fcoms
mov
dec
mov
jno
jg
push
mov
dec
dec
push
pop
es
les
mov
dec
cltd
fwait
xchg
fsubrp
jno
jmp
repz
push
inc
call
hlt
testb
std
cmp
test
sbb
cmpsl
aad
test
dec
dec
or
xchg
mov
daa
xchg
mov
add
jnp
pop
mov
xor
cmp
fidivrl
arpl
popl
fisttpl
mov
movsb
mov
in
mov
aam
adc
mov
sub
push
xchg
sub
mov
bound
inc
and
xchg
lds
pop
xor
in
xor
lods
sbb
push
mov
pop
add
xchg
pop
and
fistps
push
jo
jmp
aad
mov
inc
aaa
faddl
dec
mov
pusha
insl
xchg
lcall
repz
scas
je
inc
scas
jle
ficoml
jl
call
and
xor
out
jne
mov
adc
out
mov
cwtl
sub
cmp
or
mov
push
jbe
hlt
repnz
or
les
xchg
inc
inc
cld
dec
adc
repz
bound
sub
push
xchg
adc
xchg
and
out
or
das
arpl
fld
shl
ds
cltd
lret
lea
outsb
ret
shr
mov
or
and
sub
inc
test
lock
mov
int
rcll
inc
lock
scas
and
and
cmp
movsb
popf
cld
call
jg
or
into
add
cmc
and
push
scas
js
fadds
xor
mov
mov
dec
mov
mov
popf
dec
mov
out
movd
push
fmuls
jns
adc
jl
roll
call
inc
rol
leave
fdivrs
test
dec
enter
fisttps
sahf
push
scas
sar
adc
dec
or
bnd
jl
adc
jns
popl
pop
cmp
movsb
daa
pop
and
out
adc
fcoms
std
jge
movsb
sub
test
push
in
fidivs
push
push
dec
sahf
mov
gs
adc
inc
mov
mov
jmp
shlb
cmp
inc
adcb
mov
adc
and
in
lds
imul
cmp
sar
jns
inc
push
xchg
sbb
jp
mov
mov
lahf
repz
arpl
ds
push
imul
mov
inc
push
xor
lret
mov
fnstsw
stos
data16
dec
fbstp
stos
push
subb
xor
dec
dec
adc
add
pop
sub
mov
subl
cmp
cld
dec
mov
cli
pop
dec
call
movsb
gs
push
push
test
dec
mov
orl
subl
ret
xchg
mov
out
test
jmp
ds
hlt
and
or
mov
stc
mov
aas
stos
mov
xchg
mov
insl
push
iret
int
imul
jbe
out
hlt
mov
gs
rorb
xor
leave
mov
stos
scas
xchg
js
daa
mov
aam
push
jmp
popf
lods
fadds
add
push
push
je
popa
xorl
ja
or
add
das
je
int
ljmp
nop
sub
sub
lret
shlb
popl
mov
testb
and
ror
jg
loopnew
data16
ffreep
push
loope
mov
shll
mov
loop
leave
test
or
ljmp
push
out
mov
add
ss
cmp
sbb
bound
add
jb
ffreep
daa
icebp
mov
aam
mov
push
mov
leave
cmpsb
dec
mov
ret
mov
repnz
leave
sti
adc
dec
adc
sbb
push
lret
cmpsb
scas
test
and
jp
mov
mov
std
and
js
pop
mov
push
scas
jg
xchg
jo
pop
and
or
ja
out
cmp
ds
push
cwtl
add
cmp
push
test
les
popa
decb
je
movsl
cmp
mov
insl
dec
adc
mov
xchg
jo
test
imul
leave
push
jmp
fidivrl
sahf
inc
pushf
mov
aam
fadds
push
jecxz
lret
mov
lahf
repnz
mov
in
test
movnti
mov
rolb
or
or
or
es
fistl
xor
jb
cli
out
xor
lcall
dec
gs
test
data16
sbb
leave
int3
scas
adc
fmuls
jecxz
daa
inc
fldcw
scas
adc
adc
push
xchg
jecxz
mov
inc
or
testb
clc
xchg
adc
mov
es
in
ds
leave
cmpsb
fistl
or
cmpl
mov
loopne
repnz
imulb
incb
and
insl
fsubrs
jne
xchg
mov
jecxz
enter
negb
mov
or
es
out
aam
lcall
sub
dec
push
daa
dec
or
jbe
inc
or
jp
stc
stos
pop
pop
into
pop
iret
pop
push
jp
pop
cltd
outsb
cmp
jns
cmpsl
jmp
dec
xor
test
arpl
imul
jo
adc
popa
jnp
add
icebp
mov
or
pop
pop
jge
aam
movsl
jl
je
push
aam
daa
jge
dec
mov
cmpsl
dec
das
repz
adc
push
in
orb
lds
std
popa
add
cmc
pop
adc
scas
imul
fsts
mov
cmp
inc
inc
popf
lret
addr16
rclb
and
push
jle
insb
ret
sub
mov
lret
sbb
orb
fidivs
pop
dec
rcll
xorl
aas
xchg
inc
mov
mov
loopne
roll
xchg
pop
test
jnp
daa
push
add
imul
repz
jo
lret
push
icebp
sbb
aad
scas
inc
xchg
daa
push
in
loop
and
fisubrs
xor
fimull
mov
fnstenv
hlt
dec
xlat
xchg
insl
xor
popa
sbbb
push
adc
cs
sbb
testl
decl
repnz
mov
add
int3
jo
push
xchg
imul
pop
sbb
xchg
cmp
mov
cwtl
xchg
into
cmpsb
adc
movsb
cs
xchg
fiaddl
jle
adcl
stos
sub
xchg
cmp
in
cmc
in
push
mov
popa
daa
lds
lods
lret
push
mul
push
rclb
loop
cmpsb
xor
out
mull
add
pop
mov
push
pushl
add
adcl
mov
inc
sarl
push
lret
and
xor
jnp
sbb
pushf
test
mov
adc
push
iret
rcrl
aam
fiaddl
sahf
aad
adc
xor
jbe
inc
xor
cmp
mov
dec
icebp
jne
add
sbb
sub
ja
xor
and
xor
lret
add
and
cmp
in
fstps
aam
mov
out
out
mov
std
and
sbb
xor
lds
ja
and
rorl
ss
scas
and
mov
pop
adc
aam
mov
ret
add
in
cs
mov
mov
rcrb
inc
jecxz
cli
jns
and
out
sbb
jge
sbb
jmp
les
mov
mov
inc
pop
out
jecxz
push
mov
lods
dec
xchg
mov
fwait
loopne
mov
dec
pop
push
bound
leave
add
hlt
xchg
xor
pop
ret
push
dec
jbe
hlt
js
leave
rcll
fmull
inc
bound
imul
int3
add
loopne
dec
dec
cmpsl
adc
es
and
test
mov
xor
sub
cltd
jp
sub
cmp
adc
mov
icebp
gs
push
lock
or
dec
sarl
pop
shrl
jg
mov
mov
shll
imul
loopne
sub
mov
prefetch
lea
jbe
push
push
xlat
jae
xchg
mov
push
cmp
mov
xorl
ss
sub
mov
std
mov
push
adc
mov
jl
loop
aas
jbe
pusha
lcall
pusha
daa
mov
mov
mov
inc
les
or
mov
ja
pop
lret
jae
cmp
mov
push
add
pmaxsw
pop
mov
xchg
xor
sub
in
outsl
add
lods
jb
cmpsb
andl
in
shlb
dec
inc
pop
incl
mov
cld
cmp
fdivrl
lret
ret
mov
and
decl
loopne
jo
pop
mov
mov
popf
fimull
in
stos
push
ret
outsl
iret
add
push
lret
fbstp
fstl
sub
pop
inc
movsl
xor
add
pushf
xor
lds
mov
mov
incb
xchg
into
xor
sbb
mov
xor
jnp
lcall
xchg
jnp
movsl
lea
lahf
leave
int
mov
pop
dec
add
lret
and
enter
pop
jp
or
xor
dec
sub
lock
repnz
lcall
std
inc
fwait
mov
sub
je
ljmp
loope
inc
aam
dec
push
in
sub
movsb
push
or
pop
test
sahf
inc
aam
ficoml
push
add
imulb
inc
stc
and
mov
test
inc
movsb
aam
stos
add
mov
pop
out
cwtl
xlat
lret
scas
call
aaa
loope
dec
jl
fsubrs
enter
test
pop
xor
pop
lcall
stc
adc
not
aad
jl
inc
repnz
test
mov
inc
jo
dec
test
in
orl
pop
mov
pop
adc
mov
ret
lret
adc
popl
mov
leave
add
mov
enter
popa
in
jo
bound
daa
cmc
dec
lock
inc
pusha
mov
test
icebp
mov
out
or
xchg
jecxz
imul
cld
scas
lods
mov
out
pop
sbb
cmp
loope
pop
cs
mov
sbb
push
mov
scas
jnp
in
fldt
mov
and
shl
stos
lods
stc
aaa
add
imul
or
cmpsl
out
mov
stc
std
nop
ss
mov
xor
stos
mov
adc
xchg
pop
push
shrb
sbb
lcall
or
sbb
mov
lret
or
mov
jmp
xor
cmp
push
and
sbb
jae
test
ficompl
cmp
jmp
iret
test
adc
pop
dec
or
les
mov
outsl
inc
jl
shrb
mov
orl
scas
xchg
dec
xchg
mov
jns
mov
mov
push
dec
mov
sti
and
pop
jae
les
movsl
or
mull
iret
fcoml
add
sti
fldcw
dec
lahf
sbb
repnz
push
or
xchg
mov
sub
sub
xor
pop
ljmp
pushf
mov
mov
xchg
inc
or
push
mov
in
in
icebp
dec
mov
xor
xchg
icebp
xchg
insl
cmp
fsub
out
aad
mov
int
cld
mov
sbb
adc
jo
movsb
sub
test
in
cmp
in
es
xor
xchg
mov
jge
mov
xchg
pop
int
cmp
ds
jle
jg
cmpsl
inc
sub
outsb
and
popf
mov
mov
pop
add
sti
cmp
push
aas
data16
jge
mov
mov
dec
inc
push
jne
xor
adcb
out
out
mov
jae
pop
loop
shll
shll
das
gs
sub
push
xchg
push
mov
adc
nop
fwait
aaa
ficompl
push
jne
or
jns
js
mov
sbbl
fistpll
shll
popf
outsb
repnz
pushf
add
mov
add
jl
mov
leave
mov
testl
push
fildl
or
mov
loopne
aas
pop
fstl
sub
fadd
mov
bnd
out
jno
test
pushf
movsb
cmp
and
cld
cmpsl
movsl
dec
or
mov
aam
sub
xchg
fisubrl
fxch
mov
xchg
fstpl
push
scas
and
dec
fnsave
je
mov
dec
push
jg
pop
sbb
mov
test
push
scas
adc
repz
pushf
mov
stos
jmp
jge
cld
and
push
inc
mov
inc
pop
ret
fld
and
lcall
sub
sub
pop
ja
xlat
imul
inc
mov
push
dec
inc
jno
dec
ds
jb
fidivrl
clc
js
xor
pop
pop
dec
mov
mov
rolb
in
clc
mull
or
add
lea
out
dec
fidivrs
mov
mov
push
aam
mov
push
fstl
and
adc
loope
jl
data16
adc
and
jmp
dec
adc
out
icebp
insb
pop
popa
dec
inc
inc
pop
out
jmp
data16
es
push
pop
or
push
or
dec
inc
adc
jp
stos
pop
and
mov
or
aam
or
aaa
push
xchg
aaa
mov
jl
fsubrs
push
in
cmc
push
jnp
lea
jle
roll
cmpsb
test
into
lock
jnp
xchg
xor
cli
sub
adc
pop
jmp
add
test
lret
mov
sbb
xchg
sti
xchg
push
mov
aad
outsl
cwtl
mov
repz
mov
inc
xchg
cmpsl
pop
xchg
jmp
sti
xor
ret
out
fcomip
mov
cmc
leave
loope
jg
xchg
dec
in
jle
lret
divps
je
mov
xor
subb
adc
mov
loope
imul
sbb
sbb
xor
and
sahf
add
xlat
inc
xchg
subb
test
mov
jl
push
aam
bound
jbe
pusha
mov
add
adc
and
mov
dec
scas
dec
cli
jb
stos
ja
lea
je
in
add
mov
pusha
dec
out
xor
in
sbb
fists
imul
mov
sub
iret
push
jp
and
jge
fucomip
pop
cmc
enter
mov
mov
insb
rcr
or
or
test
sahf
push
add
mov
and
pop
or
cmp
adc
adc
xchg
pop
dec
dec
inc
mov
add
and
rorl
push
or
mov
fidivrs
lret
mov
je
mov
mov
jne
fbld
xchg
clc
test
mov
push
cwtl
and
xchg
pop
mov
js
push
das
jge
ret
xlat
pop
jo
addl
inc
test
fiadds
and
mov
or
daa
jo
or
adc
call
adc
hlt
mov
punpckhdq
cmp
sbb
cmp
stos
lret
mov
int
out
cld
sub
mov
ljmp
mov
je
pop
and
sbb
push
in
adc
sbb
push
push
cmp
jl
dec
sbb
lds
and
inc
cmpsl
xor
pop
pusha
cmp
test
xchg
mov
and
dec
lea
pop
loope
gs
scas
mov
addl
dec
ljmp
loop
mov
push
sub
mov
mov
inc
ret
movsl
or
mov
xchg
andl
cltd
pushf
mov
push
lea
lss
inc
push
mov
icebp
adc
out
cli
push
jle
leave
mov
popa
adc
lret
pop
repnz
adc
pop
jmp
adc
sub
pop
enter
mov
xchg
dec
in
insl
mov
xchg
loopne
cmpsb
mov
scas
scas
movzbl
in
add
mov
add
mov
push
mov
push
arpl
lret
xor
fadd
sbb
push
fs
test
mov
add
push
dec
ds
xor
cwtl
and
fadd
daa
pop
jae
out
dec
mov
jp
lahf
cmp
push
fimull
dec
cmp
outsb
jb
in
clc
xchg
push
ror
mov
mov
pop
mov
and
sub
aas
mov
and
push
pop
and
lcall
sub
and
xor
cmp
jecxz
sub
into
dec
mov
cmp
out
fwait
es
cli
mov
into
test
jecxz
xor
pushf
mov
fs
hlt
in
sbb
pop
insl
jle
or
and
fldl2e
sub
lods
cmc
test
dec
repz
mov
pop
cmc
scas
cli
fmull
lods
clc
mov
fwait
adc
icebp
or
fdivrl
call
dec
lahf
mov
sbb
and
xchg
fidivrl
adc
outsb
dec
decb
xchg
add
jle
in
dec
rcrl
sub
aam
movsl
mov
outsb
addl
mov
jnp
mov
jl
xchg
mov
into
add
stos
inc
and
xchg
mov
mov
icebp
sbb
dec
mov
lcall
push
or
sbb
andb
imul
or
dec
inc
aaa
inc
cltd
xchg
pop
dec
cmp
ljmp
dec
mov
popa
popa
adc
lcall
fisubs
mov
or
enter
push
pusha
pop
aad
sub
push
pop
xlat
cwtl
test
fiadds
leave
test
fwait
pop
hlt
cmpl
mov
mov
and
inc
insb
dec
cmc
jae
pushf
iret
xchg
in
outsb
fistl
xchg
or
test
pop
push
xor
fwait
pop
adcl
add
and
test
jae
add
ret
sbb
mov
hlt
les
ficoml
adc
cmpsl
addl
push
push
test
add
repz
mov
cwtl
push
cmc
xchg
dec
mov
pop
movb
inc
scas
cmp
xchg
xor
cmp
adc
int3
scas
jle
push
shlb
jo
pop
mov
jbe
pop
ficoml
pop
push
aam
arpl
adc
js
cmp
inc
dec
xchg
adc
mov
inc
sbb
lret
repz
ja
cmp
push
movsb
insl
into
dec
imul
sbb
ljmp
pop
pop
es
std
fdivrs
dec
loopne
roll
pop
jge
adc
xor
cmpb
add
adc
pop
push
stos
xor
scas
mov
or
add
inc
push
fbstp
adc
inc
int3
rclb
push
push
popf
mov
in
mov
je
shr
ret
sub
and
icebp
pop
insl
loop
aam
jo
adc
adcb
xor
jecxz
pop
iret
test
xor
xchg
nop
lods
jmp
xchg
dec
pop
mov
daa
jle
push
mov
mov
mov
in
pushl
adc
mov
adc
lret
inc
fcompl
lock
aad
sti
pop
pushf
popf
xor
xchg
sbb
repnz
andl
aas
cmp
leave
fsubs
mov
dec
push
fildll
pushf
or
fadds
addl
cli
test
fcomps
lods
sti
outsl
ljmp
stos
mov
push
sbb
loop
inc
xlat
outsb
into
sub
aaa
sub
jle
cmpsb
movl
push
scas
lods
scas
mov
aas
cli
or
lret
jmp
outsb
rcrb
lods
push
pop
hlt
outsb
mov
iret
not
lcall
cmp
jnp
aam
movsl
loopne
mov
mov
sub
sub
dec
mov
je
je
xchg
imul
stos
adc
sbb
test
xor
xchg
mov
cltd
and
mov
leave
pop
orb
test
orb
add
mov
lds
rcl
xlat
push
cmp
insb
call
roll
mov
cwtl
xchg
add
fisubrs
xor
mov
dec
fwait
sahf
je
fists
pusha
negl
loop
outsl
shll
cmp
std
das
mov
cmp
and
movsb
push
sbb
in
pop
inc
in
xlat
icebp
push
pusha
arpl
fs
pop
mov
sub
dec
fs
notl
or
xchg
outsb
in
dec
outsl
jp
mov
stc
int
into
leave
out
cld
insl
cli
and
jne
aaa
and
lahf
sub
daa
jo
jge
mov
mov
jg
leave
nop
movsb
in
js
lret
sbb
scas
fwait
inc
push
out
inc
pop
inc
mov
ret
imul
imul
sbb
sub
push
pop
fsubs
stos
add
movsb
dec
ret
or
sar
outsb
or
fwait
stc
inc
sbb
push
xor
das
call
or
mov
leave
fisubs
ja
sahf
push
daa
or
pop
xchg
push
aad
xchg
cld
dec
push
mov
add
fldl
sbb
dec
aas
aas
inc
add
fstl
sarl
pop
xor
ja
push
cmp
jmp
inc
adc
inc
scas
mov
and
xchg
rcrl
js
adc
repz
inc
hlt
cmp
push
adc
and
decl
loop
xor
cmc
in
sub
cmp
mov
test
js
fwait
jbe
cli
in
adc
or
add
push
pop
add
and
in
aas
inc
mov
fdivrl
test
fcmove
stc
dec
xor
test
push
ret
adc
jo
or
mov
rcr
fucom
cmp
pop
imull
shl
sti
mov
imul
adc
sub
mov
or
inc
adc
fisubl
dec
dec
mov
in
mov
stc
pop
movsb
jmp
out
mov
cmp
test
sub
cmp
addl
insb
pop
cwtl
lods
mov
or
gs
mov
cli
faddl
and
orl
out
dec
icebp
shlb
repnz
sbb
mov
cmpsl
popf
and
adc
movsb
fisttps
addr16
dec
gs
adc
cmp
fldcw
stc
das
sbb
lods
inc
in
ljmp
and
mov
lahf
mov
xor
mov
xor
or
sbb
adc
push
lds
xchg
inc
ds
int
lahf
dec
insb
movsl
inc
sbb
xchg
push
or
mov
mov
dec
jae
cmc
jge
push
xor
hlt
sub
xchg
xchg
push
cmp
or
jl
jl
gs
pop
xchg
mov
push
cmp
mov
enter
sub
je
push
lea
repnz
std
cmpsl
sub
xchg
rol
pop
mov
xchg
mov
data16
or
stc
pop
cld
mov
pop
shll
lds
or
sub
sub
xor
sub
popf
pop
sbb
mov
mov
cmpsl
sub
push
cld
pop
inc
addb
add
insl
mov
xor
sbb
mov
test
mov
sti
lcall
or
scas
iret
push
popf
xchg
shlb
stc
cs
mov
and
xor
sub
mov
mov
orl
jne
pop
aam
sahf
xorl
stc
shll
sbb
bound
sbb
sbb
rcrl
fsts
in
data16
lds
mov
xor
enter
adc
or
lret
mov
divb
test
orl
or
jmp
or
into
scas
xchg
mov
js
xor
lret
pusha
adc
pop
fidivl
pop
jno
sub
ja
shll
mov
iret
add
sbb
xor
sbb
add
mov
xor
xor
orl
add
push
add
mov
jno
fwait
scas
mov
mov
mov
mov
aad
mov
dec
insb
outsb
and
or
bound
dec
ja
test
in
pop
jl
xor
icebp
dec
or
jge
scas
push
cmpl
xor
cmc
jns
sub
dec
jp
add
inc
pop
add
lret
inc
lods
pop
les
clc
dec
scas
push
mov
cmp
pop
out
jne
stos
ficoml
rolb
sbb
jno
stos
arpl
sbb
mov
push
int
adc
movsl
inc
push
inc
jnp
outsb
jns
add
jle
or
adc
repnz
or
roll
mov
or
aam
clc
daa
iret
add
loop
xchg
popf
cmpsl
mov
fcomip
add
mov
pop
inc
lods
cmp
fcom
ss
ret
jo
xor
sub
cmp
cmp
dec
clc
adc
pop
sahf
arpl
cmp
sub
mov
pop
in
shll
lock
pop
mov
adc
lahf
dec
fwait
shll
sub
mov
pop
loopne
or
adc
stos
xchg
push
inc
addr16
xchg
jl
dec
out
pop
fcoml
xchg
and
push
cmp
sub
shll
cmp
arpl
mov
stc
stc
imul
inc
outsl
push
lock
rcll
push
xor
xor
and
mov
adc
pop
out
rcrb
lahf
pop
fldt
pop
adc
inc
enter
cmp
cmpsb
cmp
push
mov
or
xor
add
aad
sbb
adc
ret
rcr
dec
mov
test
stos
xor
jbe
adc
sbb
cmpsl
xor
and
pop
mov
inc
push
cmp
imul
out
and
loopne
add
sub
pop
add
xor
std
in
xor
add
push
xchg
leave
hlt
movsl
jle
fisttpll
cwtl
lret
sahf
xchg
mov
rcl
or
push
mov
test
mov
icebp
int
xor
repz
cmc
orb
pop
idivl
push
jecxz
mov
imul
aam
dec
addl
and
out
jns
enter
shrb
pop
imull
jge
pop
mov
xchg
and
daa
in
push
cmp
shlb
test
wbinvd
mov
sbb
lret
xor
add
push
cmpsl
xchg
xchg
jno
icebp
scas
sti
dec
xor
inc
cmp
adc
imul
rcll
popf
dec
adc
mov
cmp
adc
push
lahf
dec
loop
test
jmp
inc
jno
add
mov
push
in
hlt
or
repz
xlat
jmp
jmp
incb
mov
pop
adc
paddsw
iret
pop
xchg
incb
dec
dec
lret
fucomp
hlt
mov
decl
or
push
jl
mov
out
pop
pop
loopne
lds
scas
mov
push
dec
mov
clc
add
jg
imul
pop
loop
bswap
test
loopne
aas
lea
mov
rcr
std
jns
aaa
cltd
xchg
inc
sbb
les
sarb
je
cmp
pop
rcl
or
adc
sbb
mov
inc
add
add
mov
movsl
movsb
adc
scas
adc
fsubr
sbb
mov
xor
and
pop
fsub
jle
in
aaa
xlat
imul
mov
imul
dec
out
xchg
sub
mov
xor
and
fs
ret
test
sbb
shlb
out
push
and
stos
ss
maskmovq
imull
ja
pop
cmpb
sub
fwait
or
inc
inc
add
dec
xor
xor
xchg
pop
pop
out
or
std
add
shrb
mov
or
in
test
cld
mov
dec
push
std
push
inc
lret
lods
pop
jecxz
ret
xorb
xchg
pushf
xor
test
sbb
test
lea
xchg
sbb
mov
int
fildll
jae
out
es
xchg
pop
add
jg
inc
jne
int
and
stc
pusha
mov
mov
pop
dec
mov
movsl
pop
and
dec
push
pop
in
adc
mov
or
or
popf
adc
daa
dec
adc
scas
sbb
and
adc
dec
pop
dec
jae
sub
inc
mov
flds
mov
xor
mov
mov
add
xchg
int3
ljmp
in
in
and
repnz
cmpsl
leave
dec
scas
lret
pushl
gs
pop
ljmp
mov
pushf
sub
pusha
imul
push
fucomp
lock
add
imul
sarb
adc
dec
sub
fists
das
lods
daa
xor
loope
sbb
mov
hlt
loope
cmpsb
dec
shlb
mov
mov
push
cmp
push
pop
pushf
stos
ret
sbb
lcall
aaa
inc
repz
stos
insb
fdivr
shlb
push
mov
repz
adc
mov
frstor
mov
ret
mov
or
enter
cwtl
dec
mov
enter
aas
push
and
jns
jns
mov
imulb
sbb
cmpsl
cmp
jne
shll
xchg
mov
lcall
loope
cmpsl
aad
xchg
clc
movsb
stc
scas
xor
pushf
cmpsl
addl
sbbb
cmp
loope
mov
xchg
movl
sarl
fs
or
jle
mov
or
stos
out
loopne
fcoml
mov
add
jg
paddw
mov
out
pushf
jle
dec
xchg
inc
js
xchg
stos
push
cmp
xor
mov
or
popa
dec
ret
aad
sbb
and
or
pushf
xchg
jns
cmp
adc
or
fisttpll
out
xor
out
andl
xor
out
outsl
imul
mov
pop
sti
cmpb
xchg
push
xchg
cmp
fwait
dec
bound
push
add
les
jp
aas
push
mov
jecxz
cmpsb
sub
imul
sub
lea
inc
notl
movsb
imul
adc
sbb
xorps
lock
jne
into
push
jl
mov
out
cmpb
test
pop
gs
insb
fcomip
aaa
add
mov
jge
mov
test
add
or
jecxz
push
jae
fnsave
mov
popf
cmc
hlt
inc
lds
stos
or
sbb
pop
xchg
ds
add
mov
mov
push
repz
es
add
scas
jp
mov
bound
stos
lock
fcoms
sub
icebp
pop
roll
lahf
in
out
test
mov
scas
hlt
mov
lcall
ret
sbb
ficoml
aas
xchg
push
or
or
push
push
fiadds
jecxz
lea
xchg
xchg
jno
pushl
xlat
jno
lock
sbb
into
clc
pop
and
push
jo
push
in
jge
sbb
add
loop
mov
sahf
dec
and
cli
and
push
out
pop
bound
and
ljmp
fstl
add
sub
xor
push
dec
sub
repnz
popa
out
mov
mov
lret
pop
xchg
jno
xchg
arpl
iret
and
fcoml
shll
adc
or
mov
jge
pop
sbb
movsl
push
or
push
pop
xor
jmp
cmp
mov
insb
sar
test
scas
push
sub
push
push
into
ret
aam
ja
sahf
in
jne
mov
aaa
shrl
and
ret
clc
xchg
or
out
pop
jnp
imul
add
lret
in
sahf
jb
add
shlb
lods
adc
and
xchg
sti
test
adc
jle
test
aad
jl
mov
addl
aaa
mov
dec
sbb
in
test
nop
insb
mov
sbb
iret
dec
push
cwtl
cli
es
xor
out
inc
out
sub
add
mov
push
xor
int
daa
pop
push
sbb
mov
imul
int3
inc
ja
sub
cmp
repz
fs
xchg
adc
xchg
cmp
pop
adc
shlb
lods
mov
imul
fwait
jo
adc
jns
mov
and
push
insl
jo
jge
pop
pop
popa
push
test
cmp
pop
and
and
xor
lds
loop
std
enter
push
inc
lods
jns
mov
mov
mov
lcall
popa
inc
add
in
clc
cmp
dec
mov
mov
jb
nop
decb
dec
adc
xor
jmp
test
sahf
mov
and
addb
hlt
mov
pop
int
in
aaa
sub
adc
faddl
pop
push
insl
xorb
or
adc
scas
mov
pop
ss
mov
dec
inc
repnz
pop
mov
xchg
bound
mov
pop
ja
sbb
xchg
dec
jo
adcb
jbe
test
or
inc
dec
or
dec
call
sbb
call
mov
fwait
popf
mov
or
in
dec
enter
in
sahf
clc
aas
mov
and
rolb
sub
out
stos
and
data16
loope
sub
jne
outsb
loope
pop
arpl
pop
lea
jbe
mov
lods
loop
adc
fld
fs
mov
idivb
mov
xor
xlat
shlb
rcrb
mov
sbb
lds
lahf
jns
pop
or
mov
jo
cld
in
in
inc
stc
mov
dec
lods
mov
in
je
fdecstp
cmp
cmpsl
cmp
fmull
sti
shrb
sub
ja
bound
sahf
or
movsb
cmc
ret
ljmp
fwait
int3
xchg
mov
frstor
insl
mov
jle
ss
fwait
or
mulb
or
hlt
sub
notb
xchg
xor
jnp
leave
jle,pn
jnp
aaa
push
sub
lahf
xor
push
lods
jecxz
push
inc
dec
jae
pop
mov
sahf
enter
out
and
scas
sbb
jle
pushf
arpl
cs
sbb
pop
xchg
jg
jb
push
imul
sahf
push
ljmp
test
out
push
sbb
add
cmpsl
jb
xchg
add
movsl
xlat
out
in
cmp
sbbl
xor
in
xor
cli
lock
sahf
pop
mov
sbb
pusha
clc
lahf
push
outsl
cmpsb
out
ret
xlat
push
daa
in
bound
adc
mov
sub
lock
mov
inc
aam
jle
mov
push
popl
jae
mov
add
je
sbb
insb
ja
notb
and
cmc
mov
jo
fdivrs
cmpsl
lock
wrmsr
add
lods
add
sbb
inc
idivb
sbbl
loope
xor
sbb
xchg
dec
aaa
pushf
cmp
fdivrl
fisubs
pop
fnstcw
int3
arpl
push
adc
and
dec
jbe
enter
ja
xchg
iret
repz
dec
or
rorb
mov
shl
mov
xchg
imul
or
mov
in
mov
js
fwait
jecxz
movsb
lds
push
and
enter
stos
shlb
mov
add
daa
inc
mov
nop
mov
sub
inc
push
stos
data16
nop
scas
and
inc
ljmp
xchg
rcr
and
xchg
xorb
imul
nop
pushf
pop
or
adc
repz
jo
outsl
and
test
xchg
loop
jmp
cli
les
ss
insl
inc
pushw
subps
or
xor
mov
bound
sbb
dec
push
loopne
push
mov
data16
inc
xchg
cmp
in
cwtl
xchg
xlat
icebp
dec
stos
jo
cmpsb
out
push
loope
cmpsb
sar
int
outsb
repz
cmp
xchg
sbb
lahf
imul
scas
enter
push
xchg
sub
popa
lcall
jecxz
out
bound
js
mov
clc
fidivrl
call
mov
aaa
leave
mov
jno
test
cmpsl
and
data16
loope
lcall
sbb
and
mov
scas
xor
adc
mov
mov
lahf
fdivrs
xor
sahf
aaa
adc
dec
insl
mov
inc
enter
mov
sub
es
add
stc
mov
cltd
ret
cmc
clc
mov
fwait
and
and
xlat
aas
jns
cmp
push
cmp
mov
negb
bound
into
clc
cmp
dec
sbbb
inc
adc
pop
jecxz
jp
insb
test
cmp
jmp
or
inc
pop
stos
int3
mov
lcall
cld
jmp
and
mov
push
mov
pop
add
stos
push
mov
int3
push
cld
push
and
sar
loope
in
mov
lods
or
pop
pop
inc
std
in
sub
test
push
shrl
hlt
pushf
pop
ficoml
sbbl
clc
and
out
push
cs
jg
pop
in
inc
inc
cmp
mov
cli
shl
or
pop
daa
mov
insb
rcl
and
shll
in
sub
mov
gs
mov
loope
sbb
xor
popa
adc
ds
pop
jnp
test
test
outsl
pop
orl
decb
push
push
or
pop
cmpsl
mov
xor
push
mov
bound
sbb
ja
inc
mov
icebp
call
pop
xchg
lods
stc
sbb
out
pusha
add
jns
jge
aas
stc
nop
mov
popf
std
xor
popf
mov
mov
pop
mov
hlt
xchg
mov
cmp
cmp
rolb
popa
outsl
jno
and
sbb
xchg
in
aam
mov
cmp
pop
in
sbb
xlat
mov
or
pop
or
and
nop
sub
std
sub
mov
adc
add
ret
sahf
jle
jno
shrl
test
and
jno
sbb
cltd
imul
mov
fld
push
push
sub
jge
in
cmc
jae
mov
or
mov
jo
enter
les
pop
mov
mov
cs
or
inc
mov
hlt
push
or
pop
inc
cltd
ja
mulb
jne
push
xor
lds
jp
insb
xchg
stos
pusha
or
aas
and
das
outsb
cmp
movb
mov
imul
sti
ljmp
jne
js
stos
int
ret
dec
das
fwait
dec
clc
mov
xchg
pop
out
cld
jl
lret
cmp
mov
dec
mov
iret
add
lcall
call
rolb
loop
mov
daa
adc
std
clc
sbb
rorb
mov
jmp
dec
fldenv
push
sub
add
out
ljmp
das
stos
sub
and
push
mov
je
adc
xchg
dec
mov
push
sbb
ljmp
push
mov
add
jp
adcb
and
loopne
cmp
ds
insb
lahf
jecxz
out
bnd
into
in
subl
test
sbb
aam
xor
cwtl
jmp
hlt
leave
lods
xorb
jb
jae
loopne
or
jno
rcl
push
idivl
xchg
lock
aam
xchg
movsl
stos
daa
mov
sub
mov
dec
or
aaa
jp
fsubr
push
pop
jbe
inc
mov
push
push
mov
je
dec
sub
repz
xor
and
lcall
fs
and
and
es
lret
jne
push
into
mov
cmp
inc
dec
arpl
xchg
shrb
cmp
and
gs
jo
loopne
hlt
push
push
sub
and
xor
pushf
adc
adc
jl
adc
popa
mov
mov
fbstp
or
inc
mov
mov
bound
adc
cmp
inc
mov
mov
ret
dec
std
push
cmp
roll
and
imul
fldenv
pop
dec
and
jmp
out
adc
push
mov
jmp
mov
xor
sbb
adc
jo
pop
scas
dec
icebp
daa
and
or
add
les
jle
popa
ljmp
fnstcw
pop
push
movsb
fists
cwtl
xor
pop
fnsaves
jo
loop
roll
cmp
enter
pop
push
stos
push
inc
sbb
jb
and
pop
imul
push
add
adc
cmp
or
sarb
ficompl
xor
push
mov
sub
mov
or
lret
sbb
ljmp
or
inc
sbb
jge
cmp
inc
xchg
sbb
popa
sti
mov
push
orl
mov
pop
lahf
movsl
ds
push
jb
dec
iret
sub
daa
sarb
add
pop
test
xor
push
mov
into
sbb
xlat
pop
je
pop
xchg
cmc
jnp
cli
mov
add
popf
stos
xor
fdivl
and
mov
xor
repz
mov
xchg
popa
daa
loopne
lds
aas
pushf
adc
loopne
xchg
push
icebp
mov
call
mov
pop
jb
and
ret
mov
ds
mov
adc
pop
adc
pop
scas
hlt
ficompl
mov
dec
jae
iret
jo
push
js
cmp
not
pop
mov
imul
les
push
daa
jecxz
mov
xrelease
and
or
adcl
lcall
mov
dec
pop
pushf
fcmove
in
mov
push
fwait
cmp
lcall
mov
add
cmp
lods
mov
dec
leave
inc
out
jnp
aas
cs
push
test
idiv
mov
lods
dec
movb
inc
cmp
jge
in
test
cld
out
adc
dec
sbb
pop
pop
sbb
xor
movb
aam
mov
clc
mov
jbe
pop
adc
ret
call
mov
in
adc
inc
push
test
int3
jae
push
push
loopne
jnp
hlt
jnp
pop
icebp
dec
dec
arpl
pushf
mov
mov
aas
or
jne
test
sub
out
cli
push
and
sub
les
add
movsb
push
arpl
addl
js
xchg
es
mov
movsb
add
or
bound
idivb
in
mov
jne
leave
xchg
fcompl
in
dec
repz
addb
lea
sub
mov
jl
xchg
sub
jg
out
sub
push
shl
repnz
adc
and
sbb
sbb
and
or
ss
ljmp
mov
ljmp
jp
xor
dec
enter
mov
fwait
jo
mov
movsb
das
out
fimull
and
or
xchg
sub
dec
cmpsb
scas
add
xorl
in
dec
clc
cwtl
and
sub
fs
gs
stos
ret
aad
mov
sbb
loop
or
fadd
pop
mov
mov
fsincos
fidivrs
push
in
sbb
or
cmp
rol
cmpsl
arpl
mov
pop
rcrl
stos
sbb
loop
push
or
jmp
ja
and
jl
into
inc
loopne
and
in
mov
pop
dec
mov
jb
in
or
mov
test
push
sbb
in
testb
les
dec
pop
addr16
pop
flds
filds
jnp
cli
pop
xchg
in
mov
movb
dec
aam
imul
jg
dec
adc
jne
fstpl
mov
sbb
cmp
cmp
jp
pop
push
sahf
xchg
sarl
lods
je
lods
sahf
xchg
mov
sub
jl
push
stc
inc
mov
xchg
popa
icebp
mov
aas
push
int
push
sub
adc
pop
adc
sbb
mov
sbb
jge
ret
dec
repz
leave
enter
push
lret
andl
push
jp
es
sub
xchg
sbb
ljmp
push
mov
pop
out
addl
std
testl
jmp
pop
mov
inc
es
ds
push
lods
es
push
popa
mov
js
nop
cmpsb
inc
lret
add
in
incl
aaa
movsb
add
enter
lahf
mov
mov
je
push
push
enter
sbb
sub
mov
jge
test
add
mov
add
mov
int3
mov
xchg
add
cli
inc
sti
or
int
inc
mov
mov
dec
inc
mov
mov
aad
adc
ss
decb
lock
cld
ss
sub
leave
xor
xchg
cmpl
xchg
xchg
subl
mov
sbb
jo
pop
fdivr
bound
inc
add
mov
cmpsl
stc
test
imul
push
sti
dec
imul
jnp
push
fcom
ret
pop
int3
mov
push
add
xchg
fisubrl
mov
sbb
push
lea
jb
inc
lea
nop
sbb
pop
cmp
out
daa
mov
movsl
pop
outsb
out
int3
ret
sbb
arpl
xchg
outsl
jmp
push
sub
jae
cmp
pusha
add
push
pop
mov
fdivl
ss
rorl
fcom
addr16
idivl
or
mov
or
push
pop
call
pop
add
sbb
jle
xor
jp
mov
cmp
xlat
cli
adc
jecxz
enter
jne
add
nopl
imul
lods
mov
mov
pushf
dec
lea
cwtl
into
fmulp
xor
andl
fxch
mov
mov
pop
mov
or
imul
frstor
aaa
aam
dec
xor
insl
aad
outsl
adc
fbld
mov
jnp
test
lcall
mov
sbb
mov
cmp
in
movd
dec
cmpsl
mov
push
test
inc
movsb
mov
push
fldenv
mov
jb,pn
adc
or
lods
ror
dec
fcompl
or
das
pop
in
jne
sbb
xchg
cs
daa
rol
dec
xor
pop
inc
orb
test
cmpsl
cmp
aaa
mov
cmp
ret
jg
sbb
bound
xchg
or
and
scas
es
vaddsubpd
pop
rcll
aas
test
xlat
loope
and
mov
dec
mov
push
xor
lods
cmp
push
dec
scas
push
mov
cs
jnp
je
lret
popa
add
js
adc
in
outsl
lods
push
insl
mov
sar
adc
xrelease
lods
xchg
pop
lea
mov
mov
call
xchg
mov
cmp
sbb
pop
add
scas
adc
xchg
leave
jae
jle
cmp
leave
cld
in
scas
loope,pt
adc
in
imul
jo
xor
mov
push
cmp
push
movq
outsl
ret
popa
jo
fstpt
call
int
push
jmp
test
fisttps
xchg
xchg
xor
pop
cmc
mov
out
xor
cmpsb
mov
daa
jecxz
xor
into
jns
js
hlt
dec
insl
mov
ret
dec
daa
mov
aam
inc
repnz
out
jecxz
cwtl
xchg
xlat
ret
mov
std
pop
mov
lods
and
lahf
push
xor
je
jbe
sub
cli
aad
inc
arpl
mov
mov
cs
jae
dec
jnp
sbb
test
div
or
inc
add
out
sbb
inc
add
adc
fld
lret
push
lods
jmp
insb
bound
dec
xor
cmp
daa
pop
or
push
movsl
sbb
dec
mov
pop
sbb
scas
pop
std
dec
pop
sbb
push
shll
dec
mov
mov
adc
mov
jmp
fdivrl
cmp
fidivs
inc
mov
or
fucom
arpl
inc
iret
cmpsb
mov
push
out
mov
xor
adc
xor
aam
pusha
sbb
adc
mov
mov
sbb
fmull
mov
pop
xlat
xchg
lea
xchg
rcl
or
jle
jg
cmp
xchg
loope
dec
cli
xor
shufps
test
ret
test
xlat
cmpsl
xchg
and
and
or
loope
addl
pop
add
mov
nop
ss
cli
hlt
aam
lods
push
and
push
cld
sub
iret
mov
pusha
mov
and
ljmp
clc
addl
inc
iret
inc
pop
pop
int3
out
adc
push
dec
jecxz
and
add
push
flds
mov
xchg
push
mov
lret
insb
fldenv
xor
outsl
test
imul
int
shll
and
call
dec
inc
inc
mov
sbb
outsl
mov
inc
push
jmp
dec
jmp
sbb
jge
sarl
adc
loopne
aas
jmp
cli
dec
and
push
sbb
mov
mov
jg
and
sub
fnstsw
mov
xorb
xor
out
cmp
rcll
aad
pusha
add
mov
sbb
fwait
das
mov
xchg
push
xchg
lret
daa
sub
cmp
mov
jg
ds
or
pop
lea
or
loope
fs
push
adc
or
fadds
dec
lds
arpl
in
fnstenv
pop
add
orb
adc
mov
int
test
jns
mov
sbb
inc
mov
pop
lods
cwtl
mov
sbb
mov
or
mov
or
pop
fwait
push
hlt
push
aaa
lock
inc
mov
push
cs
mov
aam
rcrb
pop
popa
xchg
ds
clc
dec
movsb
xchg
inc
int3
mov
sahf
xchg
das
aaa
jg
cmp
cwtl
out
andb
repz
in
mov
jns
or
clc
mov
lahf
sub
movsl
xchg
lahf
call
dec
push
repz
cwtl
add
mov
rolb
test
jg
cmp
pop
aas
dec
dec
testl
mov
pop
jmp
lahf
pop
add
push
mov
leave
or
sbb
scas
jmp
pusha
jo
test
subb
cmp
loopne
push
fucomip
jne
pop
cmp
dec
xlat
inc
dec
fdivrl
mov
rcrl
fwait
inc
cmpsb
negb
arpl
and
addr16
test
cmp
and
aam
cmpb
push
sbb
jne
imul
jne
outsb
push
das
lret
aaa
mov
xchg
xor
pop
or
jmp
xor
lods
stos
cmp
inc
outsl
stos
lock
mov
cmp
mov
das
aas
push
bound
sbb
stos
hlt
xor
mov
cmpsl
inc
fnstsw
cmp
inc
pop
jmp
mov
insb
and
fldl
aam
push
cwtl
cmc
shll
push
cmp
jnp
ret
sarl
hlt
aas
jp
pop
dec
and
push
fistl
ret
pop
jae
js
pop
notl
push
or
pop
arpl
ss
add
rcrl
idivl
xchg
cmc
lahf
xor
sub
jp
cmc
stos
clc
mov
pop
fprem
aad
add
std
cwtl
inc
sbb
lods
rorb
add
outsb
and
out
push
cmpsl
aaa
les
mov
lahf
shlb
and
aas
xchg
mov
dec
and
inc
ret
in
stos
sbb
or
jae
mov
xchg
pop
daa
loop
movsb
orb
jae
into
adc
filds
lcall
mov
enter
dec
into
inc
push
cmpl
mov
dec
loop
adc
std
inc
xchg
cmp
inc
cmp
idivb
jnp
jne
mov
cmpsl
cltd
outsb
sbb
or
adc
jmpw
pop
fcomps
fcom
jo
xchg
addr16
jge
xlat
out
sti
notb
addr16
mov
push
mov
hlt
scas
cmp
mov
mov
and
scas
or
lea
cli
mov
cmp
or
pop
out
pusha
dec
jb
sbb
mov
xlat
rcrb
dec
push
loop
push
cmp
jns
dec
and
dec
jns
mov
sub
jg
cli
sahf
sub
lahf
cmpsl
jnp
pop
fdivl
shl
shlb
sbb
jne
test
mov
adc
inc
push
lea
sub
mov
cmc
jmp
call
orl
fiaddl
add
mov
inc
insb
loope
fimull
add
dec
mov
out
mov
popa
xchg
pop
sbbb
fstpt
ljmp
into
jmp
int3
push
and
mov
and
push
sahf
or
pop
lods
fwait
mov
and
mov
into
imul
in
dec
pop
xlat
into
int3
mov
inc
xchg
and
popa
jp
shlb
test
jne
mov
dec
sub
pop
cld
pop
aas
add
sbb
mov
push
dec
cmp
insb
cld
dec
cmpsl
pop
data16
pop
dec
into
mov
xchg
fincstp
je
rolb
ret
into
fcmovnb
jbe
jne
lock
roll
ja
insb
pop
or
push
bnd
popf
lods
mov
xchg
jl
jo
mov
xor
or
push
mov
mov
sbb
test
out
dec
test
rcll
xor
mulb
mov
adcl
je
insl
dec
cmc
xchg
cmp
and
stos
xchg
lcall
mov
mov
push
sbb
inc
repz
lock
inc
test
scas
dec
push
mov
lods
out
and
jae
test
dec
call
das
shrb
mov
outsl
aas
cmp
jb
sbb
mov
and
inc
clc
mov
push
dec
push
cwtl
add
jb
pop
dec
enter
jne
repnz
add
fxch
imul
aad
ja
pop
mov
mov
fwait
cmp
sbb
push
mov
xchg
jns
xchg
adc
movsl
jp
pop
xor
pop
and
fisubs
push
mov
fadd
nop
add
icebp
addr16
adc
pop
inc
cld
adc
sbb
popa
dec
movsb
scas
ss
jmp
xor
outsb
xchg
jmp
stc
fidivs
cs
mov
mov
sub
testl
cmc
cld
add
push
test
clc
call
mov
lods
nop
ret
enter
das
fdivl
lods
cmpsb
fmull
push
add
mov
xchg
inc
aas
mov
test
mov
shrd
fsts
xorb
dec
xchg
shll
add
mov
cmp
dec
daa
cwtl
stos
fwait
clc
shrl
inc
sub
dec
rep
movsl
and
xor
clc
popl
sbb
mov
scas
mov
das
repnz
ss
push
mov
mov
in
push
inc
xchg
pop
add
sbb
inc
pushf
pop
or
jbe
scas
xchg
shrl
scas
loope
insl
sub
daa
sbb
add
mov
mov
pop
aam
xor
and
data16
jae
outsl
sbb
push
test
mov
xchg
push
sub
sarl
aad
sub
stc
inc
pusha
into
push
xchg
xchg
jl
roll
loope
fisubrs
in
aas
push
aad
xlat
outsl
dec
add
outsl
std
subl
add
jnp
out
push
repnz
lahf
pop
jne
inc
dec
xchg
add
test
add
dec
lcall
fdivr
adc
inc
or
filds
in
jae
les
sti
jno
sbb
xchg
shrb
mov
jecxz
fstpt
in
ljmp
ja
in
in
xchg
jg
dec
and
jnp
sbb
pop
test
xchg
jo
dec
pop
mov
test
or
add
test
imul
inc
andl
cmp
lods
movsl
mov
push
xor
ret
pop
sbb
inc
addr16
js
cmp
pop
xchg
icebp
adc
xor
add
cld
mov
fldenv
dec
fnsave
aad
cli
pop
movsl
imul
repnz
ret
fildll
ss
js
call
pop
xchg
incl
inc
les
cli
aam
out
jnp
loop
jne
imul
mov
add
pop
cmpsl
push
mov
cmc
mov
jo
out
ret
cmp
pushf
pusha
xorb
movsb
cmp
aaa
cmp
pop
out
jge
xor
jl
cmc
data16
pop
pop
adc
xlat
mov
testl
sub
in
je
cwtl
std
popa
dec
jne
and
in
jno
xor
cs
mov
inc
sbbb
push
scas
sub
inc
notb
fstpl
test
inc
sahf
inc
lds
cmp
fwait
shrl
xor
ret
clc
cmpsl
xor
sub
loope
sar
arpl
jl
mov
pop
mov
inc
xor
sbb
inc
mov
cmp
lcall
imul
jmp
leave
inc
jle
add
and
push
cs
lcall
mov
sub
gs
std
cltd
mov
pushf
dec
jl
or
sub
lcall
jae
jnp
mov
arpl
insb
ss
ficompl
jnp
sbb
cmp
rcr
cmpsb
xor
push
mov
das
add
xor
push
cmp
lods
inc
sbb
lahf
into
lcall
ret
lahf
cmc
out
push
xor
ret
sub
repnz
mov
outsb
cmc
bound
cwtl
pop
sahf
pop
or
es
les
xchg
jno
insb
pop
add
add
fnstenv
jp
repnz
xorl
sti
int
pop
jns
aas
cmp
add
jecxz
fcmovnb
out
dec
mov
dec
and
jno
dec
outsb
popf
xchg
or
mov
or
call
rol
sahf
mov
or
add
add
mov
sbb
cmpsb
int3
fnsave
xchg
jae
lret
add
shlb
cmpxchg
fs
add
js
cwtl
jbe
cli
xchg
rorb
cmp
adc
mov
jge
outsb
inc
dec
dec
aam
out
mov
aad
mov
arpl
adcl
test
or
cmpsl
sub
xor
mov
pop
and
cmpsl
gs
lods
jnp
ror
xor
mov
test
es
sbb
dec
in
hlt
notl
shlb
cmp
and
adc
cmp
loopne
mov
es
int3
jns
jmp
imull
sti
imul
and
fstps
sub
mov
or
mov
mov
sub
pop
ljmp
mov
divb
pop
faddp
mov
scas
cmp
imul
and
pushl
stos
dec
mov
insb
jnp
subb
jl
test
jns
pusha
pop
mov
or
lret
outsb
pop
cs
xor
mov
pop
popf
inc
add
ret
cltd
dec
test
mov
dec
xor
les
aas
icebp
sbb
and
mov
cmp
adc
aas
daa
outsb
mov
xchg
xor
add
jno
inc
lods
pop
pop
xchg
mov
mov
sbb
scas
rol
idiv
cmp
notl
push
adc
vpsubw
addl
push
mov
jo
pop
loop
pop
pop
pushl
jb
rorb
nop
lods
mov
adc
and
mov
or
rcll
es
pop
adc
imul
add
jmp
lahf
and
int3
pop
daa
mov
sub
sarb
adc
nop
sbb
sbb
xchg
jg
push
jp
movsl
imul
dec
push
jp
mov
mov
add
mov
push
jle
and
pop
ss
add
enter
ss
cmpsl
sbb
jb
and
push
inc
or
jo
test
xor
xchg
loope
mov
mov
jbe
es
push
mov
jmp
jns
pop
push
in
test
xchg
leave
mov
push
imul
ljmp
or
mov
adc
jp
out
cmp
sarl
jl
mov
xchg
cmpsl
enter
test
xlat
inc
dec
dec
inc
enter
mov
pop
ss
cmp
pop
sbb
xchg
rcrb
add
imul
cmc
xchg
jp
adc
sub
mov
sub
cwtl
xchg
cmp
outsl
imul
jo
scas
inc
mov
cmpb
mov
adc
ret
ja
adc
int
and
mov
cmpsb
outsb
cmpsb
out
sbb
lds
scas
xor
ds
xchg
cmpsb
pop
mov
push
adc
repnz
fnsave
cmc
add
ret
mov
or
sbb
mov
xchg
iret
sbb
xor
lret
dec
lock
int
mov
xchg
xchg
stos
insb
pusha
push
jmp
aam
xchg
out
add
and
add
out
push
xchg
jns
dec
jp
out
outsb
jle
ljmp
pop
dec
nop
adc
jl
push
and
push
cmp
mov
adc
stos
jge
incl
add
leave
sbb
hlt
and
mov
push
cmp
clc
cmpsl
out
out
xlat
ror
sub
xchg
insl
mov
popf
or
lock
std
je
insb
mov
or
mov
mov
out
push
push
or
xchg
ja
dec
dec
lret
cmpsl
cli
cmp
mov
jl
sahf
test
add
je
mov
adc
fiaddl
mov
jge
imul
loopne
stos
and
popf
sub
or
dec
addl
loop
jo
fwait
les
mov
fwait
mov
or
mov
pushf
outsb
popf
cmpsb
insb
dec
xor
xchg
push
jbe
pop
mov
xor
sub
xor
push
jmp
repnz
fmuls
sub
movsb
or
into
add
je
cmp
xor
adc
add
ss
xor
fcomps
mov
sbb
aaa
lds
sbb
sub
sbb
xlat
sbb
lret
cli
ds
jecxz
sbb
cltd
in
sbb
xor
iret
add
push
repz
test
sbb
mov
clc
push
inc
sub
sub
es
pop
in
and
jg
push
sub
and
pop
addl
pushl
xchg
dec
out
mov
pop
mov
int
xchg
call
sub
cmc
mov
daa
jmp
dec
notl
pop
xchg
jnp
test
push
cwtl
mov
sub
cmpsl
int3
mov
lcall
rcl
pop
add
out
lea
pop
mov
in
call
or
in
rcr
sarb
mov
xchg
mov
jmp
in
ljmp
push
jle
jns
add
and
push
mov
idivl
idivl
mov
dec
mov
cmp
popf
mov
adc
cld
loope
xchg
jne
inc
aad
out
pop
mov
jmp
loope
cmpsl
lret
rorb
call
hlt
jmp
subl
jo
cmp
mul
xor
cli
mov
test
lret
mov
imul
mov
loopne,pt
test
xchg
gs
movsl
insb
outsb
scas
nop
es
mov
xchg
and
jmp
lahf
jno
push
cmp
lret
test
pop
cmp
test
shrl
jnp
loope
loope
jo
or
stc
sub
gs
aas
add
outsb
push
stos
sbb
enter
inc
xchg
mov
lock
ret
jecxz
divl
xchg
xchg
incl
mov
ficoms
inc
cmc
ds
popf
aad
xor
rcll
and
andl
sub
jb
xchg
sub
mov
arpl
xchg
mov
push
mov
xor
ss
cmp
sahf
push
or
jmp
scas
cmpb
mov
mov
loope
cmp
mov
orb
icebp
and
loop
loope
fmul
mov
insb
mov
movsl
mov
ds
and
rcr
cmp
loopne
sbb
dec
push
lret
std
les
jge
jns
sti
loope
xlat
gs
outsb
nop
sbb
xlat
daa
xlat
ficoml
pop
xor
adc
mov
loopne
xor
iret
ljmp
rclb
rcll
lahf
aad
repz
sbb
jbe
cmp
xchg
gs
sbb
jge
nop
lock
dec
mov
push
ret
pusha
ja
adc
mov
add
popa
fistpll
arpl
and
cmpsb
fs
add
clc
inc
insl
inc
movsb
cmp
lds
push
int3
jp
adc
outsl
dec
loopne
mov
push
xchg
mov
les
test
mov
fimuls
jge
or
adc
into
xor
dec
fildll
fbstp
push
loopne
idivb
adc
stos
xchg
xor
repnz
fs
mov
push
aaa
sbb
push
ds
adc
mov
cwtl
cs
loopne
pop
cmp
stc
sbbl
mov
xchg
dec
movsb
cmp
mov
cs
pop
scas
push
cmp
xchg
xlat
or
xor
jne
mov
imul
pop
stos
pop
fbld
fisttpll
aam
pusha
mov
cmc
push
ds
mov
addr16
pop
dec
daa
inc
sbb
decb
sbb
jne
sub
mov
aam
and
roll
xchg
clc
inc
addr16
hlt
cmp
filds
sub
mov
fisttpl
or
mov
scas
add
sub
jge
mov
outsb
lock
pop
mov
pop
or
lcall
fsts
sub
adcl
cmpsl
xchg
sarb
dec
mov
xor
test
js
pop
xchg
mov
clc
xor
loope
shlb
das
popf
mov
xchg
and
ror
cmovo
mov
cmp
push
mov
jmp
inc
fstps
cmpsl
cmp
jb
push
out
push
gs
subb
das
xor
lret
js
add
inc
pusha
jp
mov
mov
bnd
inc
xlat
shrb
imul
mov
dec
or
jne
pushf
out
imul
jb
xor
lret
rcrl
loope
fs
mov
sahf
div
stc
mov
jmp
mov
jnp
or
xchg
ret
cmpsb
dec
cli
xor
insl
testl
mov
dec
sub
inc
push
bound
mov
mov
dec
mov
xor
push
mov
movsb
dec
sbb
push
mov
xchg
aad
cmpsl
orl
cmp
cld
mov
inc
ja
cld
mov
mov
xchg
lods
push
call
add
mov
imul
pop
bound
sbb
or
mov
jecxz
sti
cmc
mov
mov
fisttpl
into
mov
sbb
icebp
fcmovne
jle
clc
dec
sbb
adc
movsl
out
xchg
ja
cmp
into
stos
mov
ss
mov
mov
jecxz
fnsave
std
lods
sub
and
push
dec
std
cmp
xchg
pop
push
pop
adc
add
sub
fidivrs
dec
pop
scas
dec
sub
push
mov
jmp
fdivp
dec
jo
es
enter
or
inc
mov
test
sbb
pop
mov
pop
push
movsl
nop
loopne
sub
push
pop
push
mov
loope
insl
aam
mov
and
subl
clc
push
mov
addb
add
push
fcoml
fcmovnbe
into
mov
cltd
push
mov
pop
imul
mov
ret
cld
mov
or
ror
mov
pop
push
cmp
nop
gs
fwait
iret
add
dec
push
stc
or
push
ljmp
push
out
clc
jge
dec
fldenv
jnp
pop
adc
jo
out
push
cmp
pop
xchg
mov
pop
jns
jnp
iret
or
sbb
cmp
pop
push
rclb
test
sbb
test
mov
cmpsl
das
icebp
ja
jbe
clc
inc
pushf
mov
ret
xor
cmc
and
mov
notl
sbb
insl
popf
in
mov
mov
sub
push
mov
xchg
pop
or
imul
test
insb
pop
pushf
shll
xor
jo
lods
jle
shl
sar
leave
mov
push
nop
jne
arpl
mov
cmp
or
mov
jl
xor
sub
leave
mov
cmp
les
arpl
out
stos
ljmp
ss
mov
je
inc
xchg
and
dec
mov
aad
mov
ret
imul
cmp
mov
inc
push
shl
push
mov
mov
lock
xor
test
cmp
pop
push
cltd
mov
and
mov
mov
cmpsl
ret
cmp
pop
mov
cmp
xorl
lods
test
inc
orl
xlat
jp
mov
dec
adc
leave
mov
jg
mov
pop
mov
scas
mov
mov
add
test
in
cmp
leave
xchg
mov
pop
das
inc
and
push
bsf
stos
jmp
mov
inc
stc
xor
rcrb
gs
decb
test
scas
leave
xor
mov
into
cmc
xchg
addl
xor
outsb
sub
test
aaa
repnz
popa
mov
nop
ja
jl
clc
in
mov
mov
dec
mov
jne
sub
aad
lods
xchg
jnp
sub
lea
or
mov
or
pop
adc
iret
arpl
ja
sub
sti
into
mov
insb
or
pushf
jecxz
cwtl
insb
inc
mov
pushf
in
dec
iret
adc
dec
xor
cmp
jmp
ljmp
jno
inc
rcrl
mov
sub
loop
pop
shll
aaa
or
shll
jnp
sub
sti
sub
outsl
and
dec
addr16
loop
and
xchg
nop
insl
inc
push
test
jb
mov
jo
js
jbe
push
lcall
ffree
movsb
fildll
push
push
mov
negl
mov
xchg
jle
jg
mov
push
jg
inc
addr16
mov
ret
rorl
shll
in
imul
mov
popf
scas
sub
mov
mov
fildl
dec
cld
add
stos
mov
xchg
jmp
imul
xchg
outsl
pop
into
dec
test
outsl
out
lds
pop
fisubl
push
pop
lcall
in
andl
xor
adc
mov
cli
cmp
or
ret
inc
or
scas
or
pusha
adc
cwtl
and
mov
jecxz
sbbb
xchg
xchg
jae
sbb
jae
inc
cpuid
sbb
jecxz
cmp
orb
mov
sub
ds
xchg
clc
bound
inc
mov
cmp
and
add
push
dec
mov
pop
xor
shrb
leave
das
jo
push
aaa
pop
clc
rsm
out
mov
jmp
push
add
cmpsl
dec
jp
or
loop
inc
pop
xchg
sbb
fcoml
mov
es
cltd
and
mov
dec
mov
pop
push
pop
sti
out
rorb
pushf
and
sbb
add
lock
loope
ja
iret
mov
sbb
ret
loopne
push
xchg
enter
pop
data16
mov
enter
mov
push
push
xlat
test
add
cs
in
sub
cmpsl
adc
popf
jne
mov
cmp
mov
cld
xchg
push
out
add
xchg
sbb
mov
fidivrs
inc
movsl
xchg
aam
aas
lds
pop
sbb
cmp
jp
add
btr
push
outsl
mov
or
in
outsl
and
push
ret
or
sub
mov
loopne
sbb
mov
jl
or
push
push
push
fsubrs
dec
imul
std
mov
out
and
mov
dec
fimull
hlt
das
fimuls
cmpsb
mov
and
fnstenv
mov
scas
cld
pusha
test
movsb
fisubl
fidivl
fcmovne
dec
jo
pop
shr
add
push
pop
ja
mov
gs
fwait
mov
rcrl
push
jmp
mov
int3
inc
push
imul
out
mov
add
cld
adc
push
and
add
push
sub
pop
jo
push
mov
xchg
lds
mov
sbb
pop
bound
add
mov
xchg
test
sub
lods
popa
and
xchg
sbb
loope
mov
mov
shll
stos
js
cmp
push
int3
lods
adc
jmp
push
fbld
int3
or
sub
out
mov
sti
rclb
adc
push
fstps
in
ljmp
decl
push
xor
int3
add
mov
lods
lea
add
test
scas
ret
mov
lret
mov
and
lds
add
movsb
dec
negl
add
dec
out
xor
push
add
or
push
xchg
jmp
aam
dec
push
subl
sub
bound
leave
cmp
fs
xchg
xchg
xchg
cmp
ficoml
mov
mov
shrb
inc
jae
inc
fnsave
and
push
cmp
lret
insb
mov
xchg
mov
mov
jmp
out
rclb
push
mov
rorb
jmp
outsl
jmp
xor
jg
in
stos
jns
jmp
les
sub
lcall
cmp
xchg
cmpsb
lret
pop
data16
push
jnp
test
sbb
sbb
inc
fwait
into
div
jg
movsb
sub
sub
jo
fsub
fadds
clc
jb
jae,pn
xor
notl
pop
or
lock
pop
mov
test
jl
mov
push
and
jp
out
clc
sbb
idivl
out
pop
push
addr16
jbe
scas
int
pop
in
and
mov
dec
xorl
mov
add
call
sbb
fwait
or
xlat
std
sub
push
mov
lcall
aaa
add
movsb
jle
out
push
dec
inc
shl
jge
add
push
popa
dec
outsl
add
cs
inc
les
mov
icebp
test
and
jns
xchg
fsubl
addr16
filds
mov
sbb
mov
mov
daa
je
dec
inc
mov
sub
inc
sbb
dec
stc
sub
shrl
sbb
mov
aas
stos
in
pop
insb
and
test
fs
mov
xorb
sbb
mov
inc
in
push
test
notb
add
jae
lcall
in
xor
adc
repnz
mov
dec
clc
popa
jnp
mov
or
xchg
and
js
inc
test
cli
inc
out
inc
ljmp
stc
mov
fs
jo
movsb
inc
stos
sbb
fisubrs
imul
mov
mov
popf
loop
inc
push
out
movsb
push
jne
cmp
mov
or
dec
repnz
adc
xchg
cmpsl
add
mov
pop
lea
sub
pop
xchg
pop
es
popf
jmp
sub
xor
sbb
lret
adc
popa
mov
test
sub
aaa
or
mov
mov
mov
xchg
lret
push
push
mov
pusha
mov
imul
test
lock
or
mov
imul
call
dec
push
insl
lret
mov
push
xlat
push
lods
sub
pop
loop
ljmp
rclb
sahf
mov
mov
stc
push
cmp
inc
push
xor
mov
sbb
fwait
cmp
scas
shrl
in
cwtl
subl
mov
pop
sub
push
cmp
ret
jg
mov
adc
insl
mov
push
aas
sub
imul
dec
mov
pop
mov
jl
pop
xchg
xchg
cs
test
jbe
mov
faddl
pop
test
jnp
in
fcoms
pop
test
movl
push
jp
dec
in
enter
shl
out
addb
jg
jl
shl
dec
inc
jp
jg
adc
mov
adc
fs
or
cli
mov
popf
lds
dec
xchg
jbe
dec
cmp
mov
shll
pop
sub
sbb
subl
lea
dec
fstl
ds
aas
push
loope
mov
mov
pop
cmp
pop
jmp
lahf
orb
bound
ss
xor
popa
in
pop
jg
and
jecxz
inc
inc
not
mov
push
outsl
push
sbb
insb
and
rcr
fxch
fists
and
cmp
scas
dec
jle
jno
jmp
add
cmpsb
or
repz
ret
pop
lock
jmp
mov
lock
inc
aaa
stos
out
adc
and
pop
fdivrl
push
stos
popf
sbb
aad
addps
rclb
ds
out
mov
movsb
adc
and
xor
and
adc
jo
mov
jne
and
mov
mov
xchg
daa
cs
cmp
shrl
ljmp
mov
mov
aad
imul
pushl
mov
imul
pop
pop
out
add
mov
popf
lods
ret
addr16
stos
out
repz
jle
aam
push
loope
fdivrl
mov
push
lret
jg
mov
jmp
sub
mov
lret
shl
mov
mov
jb
xchg
xlat
cmpsb
jp
mov
cmpb
xchg
cltd
adc
lods
sahf
js
mov
dec
adc
repz
cmpsb
mov
test
aaa
ficompl
xchg
xchg
jmp
pushl
xchg
mov
sbb
lds
mov
jnp
cltd
push
or
sbb
pop
dec
int
push
xor
pop
cmpsl
jecxz
ret
cmp
and
pusha
add
push
sub
movsl
scas
in
insl
mov
gs
in
jne
out
adc
addr16
pop
cmpl
xchg
jmp
and
mov
popf
addr16
push
mov
sub
pop
mov
repnz
inc
sub
idiv
pop
js
ret
shlb
fistps
add
or
adc
lret
ss
cwtl
mov
test
sbb
cmp
push
cmp
imull
stos
inc
adc
arpl
std
or
pop
push
cs
mov
push
jbe
pop
in
mov
lock
in
into
jnp
lahf
push
std
int3
test
pushf
out
or
clc
pop
dec
pop
and
pushf
inc
xchg
movsl
dec
jbe
jne
cmp
shl
xor
jp
iret
test
outsb
mov
add
out
mov
or
dec
testb
std
inc
dec
std
scas
adc
adc
dec
clc
jl
stc
xor
insb
push
incl
cmpsb
mov
cld
xchg
jns
nop
jl
mov
scas
insb
imul
mov
add
push
cmp
sub
mov
pop
pop
je
aaa
push
pop
repnz
jmp
xor
insl
push
dec
jno
lds
rcrl
xchg
mov
mov
pop
mov
pop
lret
out
jecxz
fcoms
fdivl
add
adc
rcrb
addr16
jno
jge
push
sub
sub
jo
fnstenv
addr16
jmp
and
xchg
fists
add
test
out
mov
adc
das
call
lret
jns
neg
cmpsb
icebp
mul
push
inc
cli
dec
pop
pop
dec
adcl
cli
aas
lods
pop
pop
and
push
mov
loope
xchg
das
scas
sbb
and
mov
mov
cmp
mov
repz
sbb
shrb
add
xchg
stc
lods
dec
rclb
jp
add
jo
xor
andb
jp
insb
mov
int
jge
or
cld
popa
pop
lret
lods
mov
cmp
inc
pop
nop
mov
push
mov
rolb
je
out
or
or
idiv
mov
test
mov
les
or
into
push
xchg
ret
in
and
aaa
testl
leave
dec
roll
sbb
notl
iret
bound
fisubs
out
and
lods
mov
hlt
in
sub
cmp
std
call
pusha
iret
push
dec
xchg
gs
and
jnp
mov
xchg
pop
bound
lock
mov
icebp
mov
in
xor
in
adc
in
outsl
add
sarb
sub
jmp
loopne
dec
fs
mov
mov
cwtl
or
jge
out
mov
movsb
and
jmp
rol
cwtl
clc
xchg
lods
out
or
lods
sarb
fxch
mov
sbb
cmp
pop
sbb
stc
push
xchg
sbb
mov
inc
cmp
xor
and
cli
lods
xchg
push
and
push
cld
jmp
mov
stos
idivl
fmull
pop
inc
inc
sub
sbb
dec
cmpsl
aas
subl
outsl
mov
xor
mov
and
and
cmp
bound
and
pop
cltd
stc
les
or
repnz
cmpsl
push
loope
out
or
push
xor
or
pop
imul
fistpl
push
dec
ss
mov
clc
nop
sahf
mov
sub
pop
lock
jo
imul
jns
test
insl
cmp
iret
jns
inc
or
scas
fstpl
mov
or
loopne
stc
out
rorb
jge
or
fimuls
cmp
es
aam
repnz
pusha
jle
xchg
into
mov
in
jbe
or
cld
mov
pop
inc
xchg
cmp
cmc
leave
stc
push
sbb
sbb
fcoml
adc
mov
pop
pusha
rorb
mov
or
sbb
adc
and
add
and
pop
pop
push
and
insl
popf
pop
dec
xor
xchg
hlt
dec
and
mov
fisubrs
mov
xchg
in
pop
iret
mov
insb
sbb
popa
pop
jecxz
lock
sub
daa
rolb
aas
mov
clc
cmc
out
insb
lds
subl
cmp
mov
stc
ror
jnp
dec
push
xor
repnz
add
mov
lods
add
aaa
mov
arpl
loope
lret
loop
xchg
lods
sub
xchg
inc
xchg
pop
jge
insl
je
and
das
sahf
jbe
fsubrl
pop
xchg
pop
js
mov
cmpb
dec
ss
mov
jne
rcrl
fimuls
mov
dec
imul
fwait
scas
jmp
es
loopne
es
pop
push
jnp
sub
and
sbb
sub
movntps
push
mov
inc
fdivrl
add
xor
jno
insl
insb
movl
int3
mov
jle
mov
jl
sub
fldcw
aaa
pop
je
bound
jb
sbb
or
jo
pop
imul
mov
or
xlat
lods
std
ja
rep
push
jae
push
or
movsb
xchg
xchg
fdivp
test
mov
sbb
je
clc
mov
arpl
adc
lret
mov
scas
scas
out
sbb
mov
bound
and
mov
lcall
test
inc
inc
aas
pop
leave
iret
cmp
lods
subl
fimull
ljmp
outsb
or
icebp
mov
mov
or
daa
cmp
jae
cmp
lods
int
adc
gs
and
mov
js
xor
stos
jns
lods
add
int
fisubrl
mov
xchg
test
rorl
xor
fcmovnbe
out
aad
mov
repnz
jg
jns
rorl
push
jae
lods
push
rcrl
push
mov
mov
mov
adc
stos
aam
and
xchg
gs
popf
inc
dec
push
cmp
mov
or
std
hlt
mov
push
fldcw
sub
sub
mov
lahf
test
xchg
lods
sub
pop
adc
bound
outsb
xchg
dec
gs
push
nop
jmp
dec
scas
divb
pop
out
scas
dec
pop
mov
in
sub
mov
push
lret
mov
ljmp
lods
movsl
pop
or
sub
cld
outsl
test
mov
push
aam
xchg
sahf
cwtl
or
sub
out
add
mov
mov
and
mov
and
clc
mov
pop
add
sarb
or
xchg
xor
lcall
adc
testb
mov
cmc
cs
daa
test
pop
test
dec
sahf
dec
imul
xor
pop
adc
test
xor
cmp
out
adc
xor
test
adc
loop
into
jp
pop
in
cltd
pop
jne
insb
sbb
ja
pop
inc
inc
xlat
push
ja
push
cmp
nop
and
div
testb
cmpb
sub
pusha
imul
cs
and
cmp
pop
cmp
scas
loop
xchg
cmc
mov
repnz
mov
test
aad
push
mov
or
and
push
and
out
sbb
insl
dec
inc
or
xchg
icebp
test
push
cld
or
dec
lret
adc
dec
inc
dec
dec
adc
xor
or
sbb
nop
mov
mov
xchg
mov
ja
jmp
xor
jp
lock
arpl
cld
icebp
mov
movsl
add
js
fdivr
fnsave
pushf
sub
sbb
shr
dec
cmpsb
and
and
and
jp
mov
in
sub
std
std
mov
pop
push
divb
xor
and
push
test
pop
mov
adc
dec
rorb
add
into
ja
push
pop
jae
loope
inc
jmp
inc
or
test
test
loope
push
cs
sbb
clc
mov
jle
xchg
push
mov
push
insb
mov
jmp
push
mov
and
loopne
sub
sub
pop
icebp
sbb
sub
int3
in
lock
jge
push
das
ss
pop
jno
stc
xchg
mov
and
aam
xchg
and
pop
xchg
sbb
shrb
adc
xchg
jp
sub
fldenv
xchg
jle
loop
shrl
in
dec
cwtl
test
lahf
repnz
jecxz
push
cwtl
je
add
into
and
subl
pop
cmp
push
cltd
lds
add
lods
mov
jmp
adc
mov
cmp
mov
inc
cltd
lret
lret
dec
mov
aas
push
mov
mov
push
leave
and
mov
loope
dec
push
push
out
and
popa
jl
es
and
in
repnz
jg
or
mov
mov
jnp
ret
jmp
jp
mov
jno
negl
shll
inc
imul
jbe
mov
add
shlb
dec
xchg
or
and
push
negl
jbe
lahf
mov
push
insb
out
insl
dec
cwtl
rcr
repnz
push
rol
arpl
push
or
aas
xor
hlt
push
xchg
sahf
add
inc
pop
mul
mov
xor
in
jbe
push
ret
ja
and
sbbl
iret
cmpl
fadd
pop
mov
movsl
add
inc
cwtl
adc
stc
inc
push
bound
dec
adc
shlb
pop
sub
rolb
in
clc
fisubl
repnz
mov
out
rcrl
adc
mov
mov
into
dec
ds
out
in
ljmp
shll
fistps
mov
or
into
cs
popf
jg
call
dec
imul
jecxz
mov
or
push
dec
and
cmp
push
testb
mov
inc
cli
mov
sub
mov
pop
int
cmc
mov
lods
dec
push
in
cli
and
inc
ds
inc
pushf
sub
cltd
andb
out
push
adc
inc
lds
jg
inc
insb
pop
add
fiadds
xor
fistps
jne
cmpb
inc
and
xchg
push
jg
push
movhps
addr16
sahf
ucomiss
mov
jbe
inc
mov
in
xor
adcl
xchg
xchg
xor
ja
stc
mov
mov
fiaddl
or
cltd
test
loopne
pop
fdivrs
out
mov
repz
sti
andl
push
adc
in
pop
mov
dec
clc
pop
and
mov
stos
bound
icebp
inc
mov
pop
fcompl
jge
imul
cmp
push
ret
sub
iret
mov
mov
das
mov
mov
in
lock
stos
jnp
push
sbbl
add
test
push
orb
mov
pop
xchg
outsl
push
lret
mov
lret
xor
pop
xchg
sub
dec
in
addb
sub
mov
jae
jmp
into
sub
iret
adc
adc
pop
popa
jge
mov
mov
mov
lds
in
or
mov
cmpl
dec
call
lret
insb
push
int3
out
ds
inc
test
sahf
lahf
es
add
mov
jbe
mov
sbb
sbb
xor
test
mov
pop
dec
fdivs
sub
ret
popf
mov
pop
pop
xchg
hlt
lock
pusha
adc
push
jge
bound
xchg
mov
loope
mov
sbb
sbb
loope
jge
fstpt
push
call
jmp
imul
xor
lds
adc
das
push
or
and
inc
fcoms
jg
cmpb
push
addr16
inc
dec
and
aam
data16
sub
mov
jae
repnz
fildll
and
stos
jmp
popf
imul
movsb
loopne
iret
dec
sbb
lea
add
enter
pop
or
lahf
rcrl
icebp
adc
or
std
outsl
mov
jno
fwait
inc
xor
mov
icebp
cmp
lcall
jns
or
jp
or
jo
out
addb
pop
push
test
dec
xchg
jo
shlb
adc
inc
and
call
pop
je
addr16
cwtl
idivl
call
mov
cmc
xchg
pop
mov
xor
and
jno
call
jecxz
testb
adc
xchg
enter
addr16
data16
jns
pop
lods
inc
sti
std
addr16
stos
dec
insl
or
je
sub
out
push
sbb
cmpsb
in
movsb
xchg
outsb
xchg
dec
inc
arpl
xlat
dec
jl
rol
rorl
icebp
push
fadds
mov
daa
mov
pop
pushf
pop
sbb
mov
or
je
mov
mov
aas
into
gs
dec
mov
mov
xchg
push
pop
test
cmpsb
loop
xchg
out
test
imul
mov
loopne
push
and
sbb
mov
mov
int3
sub
inc
mov
in
mov
loope
cmp
std
sbbl
and
ds
in
and
cltd
inc
sbb
adc
mov
jmp
push
jmp
adc
pop
xorb
mov
mov
ret
insb
dec
addr16
jns
nop
pop
cmp
hlt
test
int
jns
cld
faddp
xchg
jns
ljmp
adc
sub
jns
cmpsb
data16
enter
rcrb
adc
in
loopne
fcom
pop
sbb
and
xchg
arpl
js
jnp
imul
ficompl
jl
insl
or
mov
hlt
or
push
shll
lea
mov
stos
xchg
push
sub
jne
imul
jge
in
push
lods
fldt
out
adc
jnp
and
jb
mov
xor
popa
js
cli
hlt
adc
pop
repnz
arpl
fsubrs
sub
lret
not
jmp
les
cltd
js
in
outsl
or
add
jbe
xor
enter
push
sti
faddp
mov
sub
pop
mov
sarl
mov
movl
sbb
dec
test
test
cmp
pop
xchg
sub
mov
push
or
jb
sbb
notb
inc
arpl
or
pop
or
hlt
loope
pop
xchg
sbb
ret
xchg
xchg
jmp
fs
and
jno
fists
fistpll
add
mov
rclb
or
add
pop
fisubs
sub
das
add
fisubrs
pop
sub
mov
cltd
cmp
inc
ror
add
jg
leave
and
mov
mov
stos
fiaddl
iret
xchg
in
jl
add
je
arpl
dec
push
mov
dec
fildl
bound
ror
inc
loopne
adc
cli
or
xchg
xchg
push
xchg
jns
inc
pop
or
movsb
sub
push
pop
sbb
pop
cmp
aad
inc
data16
test
lea
xlat
dec
test
and
hlt
aam
pop
test
pop
test
scas
push
es
cmp
aam
popf
xchg
push
xchg
mov
xchg
aam
arpl
dec
pushf
pop
gs
enter
rclb
popf
stc
shll
jne
adc
xchg
mov
addr16
xchg
mov
insl
xor
add
loopne
mov
repz
gs
cmp
stc
in
ljmp
loope
pop
fcoms
and
sub
mov
jb
push
iret
or
push
mov
pop
ret
imul
scas
test
sbb
fldenv
icebp
cmp
xor
ja
xchg
dec
in
xchg
scas
out
enter
cmpsb
or
test
loop
pop
jg
sbb
and
and
cmp
ja
mov
faddl
outsb
sbbl
shlb
pushw
add
testb
les
push
cld
jae
psubb
cs
sbb
mov
xchg
jns
daa
mul
sbb
inc
mov
jno
inc
int3
or
js
icebp
push
and
adc
add
rorl
xchg
repz
sbb
iret
sbb
jecxz
add
cmp
push
fcoms
mov
dec
sub
jl
sbb
push
mov
fistpll
add
push
int
into
xchg
jp
ljmp
test
sub
sub
inc
mov
cmp
in
ret
fisttps
popa
mov
loope
ds
insl
push
data16
xor
sbb
sti
test
orl
or
sbb
imul
cmpsb
sub
test
into
out
add
andl
das
dec
mov
aas
in
ja
cwtl
jge
aad
mov
dec
inc
repnz
shr
pop
aad
jbe
ss
pop
icebp
loop
xchg
inc
sub
mov
test
sub
xchg
jb
push
pushf
loopne
loopne
mov
std
jno
mov
mov
mov
leave
cli
or
movsb
cmp
out
sti
push
mov
je
cmc
jg
je
fdivl
addr16
pop
or
inc
mov
hlt
andl
xor
xor
es
cmp
jge
mov
js
inc
mov
xorb
xchg
add
scas
pop
sbb
or
push
push
sub
mov
mov
mov
fwait
mov
dec
and
xor
push
repz
sbb
push
or
sbb
adc
aaa
xchg
push
mov
imul
jp
loopne
es
add
nop
test
mov
dec
js
out
scas
arpl
out
icebp
jmp
bound
int
adc
ja
push
stos
ljmp
outsb
imul
int
ljmp
push
sarl
ret
imul
imul
push
mov
shll
jle
lds
push
and
cltd
ja
cmp
imul
inc
jo
movsl
loopne
gs
dec
lds
aaa
xor
scas
lahf
mov
push
lods
aaa
arpl
mov
lds
ret
gs
and
add
int
inc
push
test
sbb
loopne
sub
daa
in
inc
shrl
test
lea
aad
popa
pop
pop
jae
jno
dec
or
push
icebp
xor
sbb
gs
daa
lods
dec
push
int3
push
pop
jo
mov
xchg
pushf
mov
mov
cltd
mov
test
jmp
push
inc
push
cmp
xchg
loope
loopne
jae
jl
repnz
dec
adc
pushf
jns
mov
pop
mov
sbb
fsts
and
cli
std
mov
shr
es
lods
call
out
inc
sbb
lahf
pop
ljmp
jp
adc
jns
pop
mov
push
pop
xor
mov
push
sbb
pop
mov
xor
or
icebp
test
fistps
cld
pop
dec
in
xor
std
clc
jbe
cmpsb
push
iret
std
mov
lock
jmp
aaa
inc
jle
lcall
push
xor
xchg
mov
ljmp
push
and
pop
not
or
sbb
cltd
push
xor
dec
xchg
or
sbb
jge
mov
add
xchg
fsts
and
cmp
cmpl
loopne
jno
imul
jl
lods
mov
imul
mov
xor
cmc
mov
into
in
dec
cs
xor
outsb
mov
mov
sti
ror
push
cmp
cmp
or
jecxz
pop
sbb
mov
rolb
push
adc
mov
sub
add
aam
cmpsb
sub
push
pop
stos
js
mov
inc
or
push
int
mov
insl
mov
adc
xor
iret
xor
outsb
hlt
push
inc
adc
add
mov
fisubl
inc
call
mov
pop
xor
adc
lods
bnd
pop
movsl
icebp
daa
jmp
jmp
ret
movsb
fisttpl
icebp
mov
mov
push
addr16
inc
icebp
mov
adc
xchg
fxch
cli
clc
jmp
insl
out
in
xchg
and
paddq
or
ja
inc
sub
push
sub
and
lahf
adc
and
loopne
lods
cmp
js
bound
jo
jne
sbb
or
or
mov
fnstcw
push
mov
int
dec
cmp
jns
repz
inc
stos
sub
clc
mov
jnp
out
loope
rcl
push
and
jne
ret
cmc
inc
xor
outsb
das
frstor
xor
insl
dec
les
adc
or
int3
rcll
xchg
arpl
pop
dec
loope
add
sbb
clc
or
roll
andl
sbb
popf
or
mov
int3
fldl
lds
test
shll
adc
cmpsl
js
iret
fisttps
les
add
fisubrl
xor
xchg
filds
ds
cmpsl
xchg
xchg
ds
out
mov
mov
aam
repnz
cmp
lret
icebp
jbe
std
adc
pop
aad
rcll
adcl
push
arpl
fadds
jmp
popa
faddl
test
mov
adc
jmp
xor
dec
sub
jns
ljmp
xor
jmp
pop
mov
fwait
test
and
sbb
or
mov
pop
js
mov
sti
pop
das
jne
xchg
imul
jo
in
inc
or
scas
mov
fsubrp
leave
hlt
adc
sbb
jp
sub
push
mov
mov
out
sbb
or
pop
pushf
lret
js
adc
shl
add
mov
loope
cltd
lahf
pop
sub
popa
mov
pop
lock
fs
jnp
lods
imul
outsb
pop
mov
cmp
jmp
fdivs
arpl
jg
mov
xchg
lret
pop
mov
add
out
fiaddl
sbb
dec
loope
std
or
pop
and
xchg
cmovns
push
gs
or
lock
xchg
inc
inc
sbb
stos
out
aam
out
jg
int
data16
sbb
adc
cmp
std
mov
mov
push
dec
call
stos
imul
mov
lahf
mov
dec
jecxz
insb
ja
and
mov
adc
loopne
xchg
pop
dec
imul
mov
sbb
cwtl
or
call
sub
adc
xchg
loopne
xchg
and
mov
into
aad
ljmp
adc
ret
ljmp
cmc
sub
adc
pop
or
cmpl
insl
xor
mov
inc
push
or
add
push
popl
inc
imul
loope
or
xchg
ret
andl
outsb
shll
dec
popf
leave
xchg
sub
and
pop
fcompl
mov
ret
jns
bound
or
sub
xchg
dec
or
push
inc
mov
xor
jge
and
xor
pop
int
sub
test
jl
lret
out
or
gs
pushf
xlat
mov
jl
dec
rcll
lret
nop
push
mov
adcb
pop
fstpl
ficompl
loop
sbb
xor
jb
mov
leave
mov
in
mov
cmpsl
rol
xchg
mov
dec
push
mov
lock
movsb
cmc
push
mov
jne
mov
mov
lds
sub
jmp
dec
push
popa
inc
daa
xor
mov
imul
int3
jo
insl
imul
push
adc
jl
inc
inc
int3
jmp
cmc
mov
ljmp
push
mov
call
adc
in
mov
push
scas
cwtl
mov
mov
into
scas
mov
lret
mov
inc
outsb
xor
fidivrl
daa
jle
push
push
jp
or
add
insl
scas
add
or
add
repz
mov
or
xlat
std
out
loope
loopne
out
inc
sub
mov
sub
lods
jge
lahf
mov
lock
shrb
dec
mov
call
es
dec
mov
adc
mov
sahf
into
ljmp
cmp
mov
fnsave
jbe
stc
pop
push
xchg
mov
inc
add
stos
lahf
movsb
adc
fidivl
push
icebp
shl
mov
pushf
sbb
mov
sub
push
mov
shll
mov
dec
shrl
std
stc
dec
shlb
lret
aaa
dec
or
int3
bound
dec
enter
sti
arpl
addb
orps
dec
push
imul
dec
adc
mov
je
cmp
das
insb
inc
jle
xchg
push
scas
cmpsl
pusha
mov
mov
pop
pop
push
adc
xchg
lea
pushf
sbb
pop
pop
and
mov
imul
xor
fdivl
out
enter
push
dec
jp
sub
pop
mov
pop
out
je
mov
lods
cwtl
mov
and
stos
in
ss
dec
rol
inc
push
pop
imul
dec
sbb
push
aad
test
cmp
add
or
xor
push
movsb
dec
stos
dec
addb
mov
cmp
repnz
add
and
icebp
scas
out
jl
into
sbb
mov
fs
push
jl
push
sub
push
inc
loopne
mov
mov
addl
pop
push
mov
loope
imul
mov
lret
xor
test
mov
mov
ss
stos
divl
mov
adc
pushf
out
mov
out
clc
daa
inc
mov
jg
sbb
lea
jae
xor
ja
es
out
popf
xchg
xor
lds
xor
or
or
xchg
mov
fistps
sub
pusha
mov
mov
xorl
xor
aas
inc
push
xor
inc
jns
jecxz
cmc
imul
xchg
or
mov
xchg
mov
clc
cmp
inc
jg
sub
adc
add
mov
xlat
xor
outsl
sahf
stos
dec
jecxz
mov
fwait
popa
cmp
adc
hlt
mov
sub
cmp
adc
lods
cmp
jmp
or
sbb
dec
incb
mov
push
inc
or
pop
push
dec
and
in
push
mov
cltd
jns
jl
insl
hlt
pop
jmp
ljmp
pop
mov
sub
repz
mov
insb
rol
dec
mov
dec
push
aam
imul
std
cvtdq2ps
movsl
xchg
push
test
inc
jmp
notl
insb
mov
pop
repnz
jno
addr16
in
pusha
mov
mov
xchg
fsubs
jmp
scas
mov
jge
add
dec
popf
inc
test
mov
gs
test
repz
rol
ficomps
mov
mov
inc
int3
jne
add
je
dec
mov
push
mov
leave
push
jnp
outsl
int3
inc
lcall
and
mov
test
sbb
mov
adc
mov
es
popa
int
and
push
add
mov
xor
inc
add
movsb
leave
jl
pop
jbe
xor
jae
aas
or
arpl
sbb
ficoms
daa
clc
dec
pop
jg
push
cli
pop
popf
mov
icebp
fadds
jbe
lods
lods
popa
cld
or
ja
je
sbb
test
xor
lahf
push
sbb
fs
xor
das
es
lret
nop
rclb
xchg
jl
pop
sarb
cmpsb
push
inc
sub
test
incb
jns
push
arpl
xor
vunpcklps
mov
xchg
ret
mov
stos
push
mov
mov
dec
into
shll
inc
out
mov
cmp
in
push
pop
or
add
psrlw
sbb
adc
or
sbb
lret
or
and
lahf
dec
adcb
clc
mov
sarb
ds
mov
xchg
pop
rcrb
mov
dec
cmp
out
in
cli
popf
push
xchg
and
pop
aam
jp
cmpsb
sub
out
cltd
mov
out
sbb
sbbb
adc
or
xchg
mov
enter
fadds
jne
xor
lods
add
pop
cmpb
out
mov
jne
inc
cld
scas
sbbb
rcl
pop
pop
mov
inc
insl
dec
add
push
and
mov
sbb
inc
jnp
ret
mov
xchg
xlat
lcall
jae
jle
dec
add
jecxz
std
pop
stos
outsl
incl
pop
and
sbb
adc
nop
add
stc
popf
xchg
dec
pop
add
xchg
sbb
jmp
data16
fisubrl
sub
dec
ljmp
dec
sub
mov
xor
loope
cmp
nop
mov
mov
sahf
jbe
pop
mov
faddl
mov
out
and
sbb
jbe
push
jne
jmp
ljmp
mov
xor
int
hlt
addb
mov
dec
dec
xchg
out
cwtl
push
lods
ret
lds
aam
pusha
sbb
xor
jbe
jg
bnd
jl
rol
xchg
iret
pop
cld
dec
cs
jle
cmp
fcompl
lea
mull
add
ret
add
stos
loope
iret
inc
mov
sub
mov
cmp
adc
mov
out
test
or
ljmp
mov
scas
push
loop
cld
das
lret
out
std
pop
test
or
pop
or
and
cmpsb
aaa
jp
outsl
push
stos
jne
test
xchg
loopne
add
mov
insl
pushf
inc
rorb
fwait
push
jae
lret
jecxz
lea
repnz
fs
sub
mov
jnp
mov
fsub
add
cmc
stc
xchg
pop
test
addr16
stos
mov
xor
cli
scas
stc
xchg
inc
and
pop
movsl
dec
out
and
pop
data16
mov
or
jge
mov
nop
lock
xor
dec
repz
cmc
jb
cmpl
cmp
movsb
add
push
into
das
dec
std
xchg
jl
daa
dec
sub
cmpb
sub
mov
adc
xchg
inc
sbb
add
insl
cmp
addr16
mov
cltd
mov
mov
jmp
cmp
adc
xchg
stos
enter
mov
mov
fwait
call
out
jnp
jae
in
loopne
repnz
out
lods
mov
xor
sbb
shr
lret
and
sarl
in
jne
jb
bnd
mov
add
mov
insl
or
or
fs
pop
cld
xor
fsts
mov
adc
jnp
pop
ret
sahf
or
inc
je
pop
mov
xor
push
lcall
dec
pop
mov
mov
mov
sub
jb
or
scas
xchg
xorb
mov
in
shrb
mov
in
fs
nop
out
fistpll
rcl
pushf
add
xchg
imul
aas
adc
jb
mov
adc
mov
pop
and
lret
pand
cmpsl
inc
pop
xor
cwtl
or
jns
icebp
arpl
adc
and
movsl
ja
xor
xor
scas
test
jno
add
push
mov
inc
fwait
cmp
sbb
test
inc
cs
stos
outsl
test
out
fistpl
test
aam
aas
pmulhw
adc
push
pusha
and
arpl
das
cmp
mov
mov
rorb
sahf
mov
cwtl
daa
loopne
cmpsb
in
cmpsl
dec
gs
nop
loopne
movsb
sahf
pcmpgtw
push
pop
incb
jle
je
cwtl
xchg
sub
addr16
push
or
ja
lods
mov
mull
add
mov
sbb
add
out
pop
pop
pop
cwtl
scas
aam
shrl
mov
movsb
xchg
push
mov
in
cmc
mov
jnp
jg
std
cmp
cmpsl
xor
ret
cli
cmp
xor
rcrl
fs
adc
insb
sub
andl
hlt
mov
ss
sub
pop
inc
pusha
add
push
or
test
insb
psadbw
pop
sbb
pusha
add
mov
repnz
fiadds
mov
lods
leave
pop
and
cmpl
clc
sbb
xor
sbb
xlat
aas
fisttpl
int3
or
lret
push
fildll
cmp
lods
jno
sub
fiaddl
lea
dec
jmp
jmp
xlat
jmp
or
test
jecxz
rcrl
and
ds
sbb
xchg
jp
fdivs
push
testb
cmp
cs
jecxz
push
fwait
in
sub
jmp
fisubs
push
mov
jne
jae
sub
js
xlat
push
push
mov
int
pushf
js
lods
iret
push
and
add
jmp
mov
ljmp
dec
or
mov
pop
loop
xor
clc
mov
ja
rcrl
and
cmp
mov
adc
cmpsl
rolb
shll
mov
mov
mov
test
lds
inc
mov
dec
fs
in
or
and
imul
fidivrs
arpl
fidivs
aad
cmp
add
mov
ljmp
jnp
jne
mov
sbb
push
test
test
xor
add
push
loopne
out
adc
push
leave
imul
stos
jae
iret
out
pushf
jns
push
xchg
out
fdiv
int3
rcrb
into
js
mov
pop
pop
rol
test
sub
mov
mov
mov
push
sbb
push
into
fnstenv
inc
pop
pusha
dec
mov
fwait
pop
andl
or
and
jle
mov
test
add
in
pop
adc
stc
inc
sti
xchg
adcb
cmc
rcrl
dec
mov
pop
push
jge
mov
jle
imulb
add
ja
cmpsl
lcall
call
xchg
xor
adc
jo
movsl
rol
enter
dec
insb
push
retw
push
dec
pop
mov
jecxz
fucom
fwait
inc
mov
ss
repz
pop
dec
pop
adc
mov
xlat
xchg
or
mov
add
jae
bound
fildll
aas
pop
mov
fcompl
loope
sub
adc
adc
mov
add
and
jecxz
std
cmpsl
dec
pop
data16
loopne
xchg
stos
xlat
nop
or
mov
xchg
lcall
mov
or
in
push
arpl
add
mov
jo
or
xchg
shrl
sub
orb
aad
pop
insl
jbe
xchg
sbb
lret
push
shrb
or
push
pop
cmpsb
jo
jo
xlat
shl
jge
xchg
loope
inc
shlb
sbbb
or
and
mov
enter
lds
push
sub
jp
not
mov
sti
stos
jge
ret
iret
gs
and
jl
stc
mov
jb
xor
push
insl
cmp
xor
pop
aaa
popf
dec
lea
sbb
fdivl
sbb
mov
ret
jmp
push
inc
fs
in
rcll
lret
push
lds
jne
out
dec
and
leave
repz
or
xor
pushf
out
mov
sahf
dec
xor
xor
cmpb
mov
incl
or
jecxz
mov
adc
seto
jge
xchg
fs
push
jbe
lret
push
mov
or
jae
rclb
dec
jbe
pop
fdiv
insl
fwait
in
inc
mov
push
mov
sub
in
int3
xchg
mov
ja
lcall
movsb
adc
pushf
cld
mov
xor
cltd
push
movb
xchg
pop
mov
dec
cltd
sbb
inc
xorl
or
sub
sub
pushf
xchg
loope
cmp
subl
popf
xchg
push
sbb
std
ljmp
or
or
and
xor
dec
aam
js
cli
push
mov
fwait
pop
loopne
jo
jns
fistpl
shl
ret
jl
insb
repz
cli
and
fisttpll
xor
cmp
and
ds
push
jnp
lret
jp
mov
dec
int3
stos
shlb
nop
add
push
dec
sbb
sub
cmp
out
repnz
sarb
xchg
fcmovnu
dec
cmc
test
movb
jne
outsb
or
sub
out
enter
rorl
mov
mov
stos
xor
stc
mov
mull
sti
decl
push
lret
dec
inc
or
fstl
es
test
mov
fmulp
cmp
or
xchg
jnp
rcrl
mov
cmp
dec
inc
insl
push
loope
lret
repnz
cmc
push
add
mov
lods
or
push
scas
es
ds
dec
ja
mov
mov
pop
ror
frstpm(287
mov
xchg
or
movsb
push
xor
lahf
mov
jb
mov
jmp
rcrl
add
sti
mov
push
xchg
xchg
inc
jecxz
int
jnp
push
rorl
mov
popa
jno
push
inc
lcall
int
ret
push
mov
test
into
xchg
jnp
xor
push
ret
gs
iret
dec
mov
shrl
insl
mov
cltd
enter
fnstenv
loope
or
scas
outsl
lock
xchg
mov
shll
lret
xchg
add
sahf
xchg
mov
out
inc
shl
cmpsl
pop
iret
rcll
popf
push
and
ljmp
stc
sahf
xchg
pop
gs
int3
in
popf
shlb
jo
ds
sahf
jmp
popf
push
dec
call
ss
dec
adc
or
jne
stc
cmp
ja
shrl
out
aam
push
push
jns
xchg
add
sahf
mov
mov
stos
mov
rcr
rcrb
mov
cmp
sub
sub
add
adc
or
adc
xor
and
jns
or
test
push
gs
iret
lods
sub
leave
xchg
fimuls
je
call
push
mov
js
pop
ret
sbb
cmpsl
jo
out
rcrl
mov
popf
inc
outsl
sub
icebp
add
enter
rclb
clc
inc
loope
outsl
jp
sub
out
in
xchg
cli
add
aas
jae
jecxz
xor
je
add
sbb
pop
out
mov
std
lods
xlat
sub
adc
pusha
dec
cmpsl
xor
xchg
cli
arpl
and
cmp
sub
sti
ret
jle
cld
adc
or
ja
lods
addb
stc
cmc
cwtl
mov
jno
insl
sbb
and
das
ss
clc
pop
lea
adc
adc
rcll
js
mov
adc
jae
std
jne
pop
int
push
out
std
sub
ds
push
and
fstpt
cwtl
imul
sti
cmp
or
cltd
scas
dec
lock
rcll
arpl
sarb
lds
sbb
roll
jecxz
fwait
push
jnp
sub
in
sub
cltd
sbb
aam
mov
icebp
test
cwtl
stc
sbb
dec
inc
xor
in
push
mov
sahf
rcll
out
les
ret
repz
and
stos
sbb
pop
std
pop
aas
jecxz
out
adc
cmp
xlat
jns
add
jno
or
sbb
sub
or
jg
xchg
xor
lods
xchg
daa
push
shl
push
fcomip
loopne
stos
dec
jno
repz
imul
in
xchg
mov
aad
and
jge
or
les
in
test
dec
outsl
cwtl
inc
xchg
psubsw
cli
mov
mov
notl
xor
bound
xchg
sbb
out
pop
lcall
xchg
das
pop
fisubrs
gs
push
or
sahf
adc
lret
inc
std
cmp
cmp
loope
push
rcrb
out
xchg
dec
jmp
in
inc
out
cmp
push
sahf
lcall
pop
adc
arpl
out
mov
dec
xchg
xlat
mov
loope
cld
icebp
push
fcomi
ds
push
imul
mov
mov
mov
cmp
movsl
sbb
fstl
or
stos
add
mov
or
push
dec
rorb
xorb
repnz
roll
fcmovbe
loopne
and
stos
test
jle
fstpl
push
out
mov
jnp
xor
gs
stc
add
ficoms
inc
cmp
dec
pop
sarb
pop
mov
xor
and
sti
cmc
mov
jno
pusha
imulb
ss
pop
filds
sbb
je
xor
lock
nop
bound
and
es
add
scas
pop
shrb
or
outsl
jle
test
or
inc
daa
xchg
inc
pop
fmul
cmpsl
fisubrl
add
push
and
fdivrl
xchg
cmp
xchg
pop
addr16
insb
pop
movsb
mov
scas
pop
out
jecxz
and
inc
dec
in
add
cs
pop
inc
fisubs
pop
mov
jns
lret
cltd
push
cmp
jle
mov
fistl
loope
xor
jbe
mov
addr16
gs
sub
jnp
sub
add
jae
pop
daa
addr16
jno
jns
jne
arpl
iret
imul
lahf
add
lock
mov
cmp
pop
jbe
fldcw
dec
std
mov
pusha
xchg
mov
in
add
or
pop
inc
fstpt
ljmp
add
and
sahf
ja
popf
mov
cltd
mov
push
adc
in
push
push
sub
cmc
std
xor
clc
inc
sbb
scas
sub
orl
jb
xchg
bound
adc
xchg
insl
add
sub
lock
mov
subb
pop
add
push
jbe
xlat
in
xor
pop
push
imul
push
outsl
incl
nop
mov
shlb
loope
repnz
sbb
pushf
xchg
mov
rclb
add
outsl
movsb
test
popl
inc
pop
inc
scas
add
dec
leave
xchg
sbb
push
cmpsb
adc
out
cmc
adcl
mov
mov
mov
pop
jnp
mov
pop
test
dec
leave
inc
stos
add
stc
in
int
in
in
mov
mov
mov
adc
fistpl
scas
pop
xchg
icebp
lgs
arpl
mov
icebp
mov
hlt
test
mov
test
xchg
mov
push
pop
mov
je
sub
pop
ret
jae
rorb
adc
mov
fwait
push
bound
mov
or
insb
orl
mov
xchg
and
lret
jmp
push
pop
xor
lods
subb
gs
test
dec
testb
sahf
leave
mov
insb
jl
fisubl
daa
jo
fcompl
mov
add
out
mov
leave
push
jge
bound
inc
mov
testl
jle
dec
inc
idiv
pop
cmp
pushf
repz
sbb
out
mov
xor
cmpsl
push
pusha
fistl
rcll
pop
jle
dec
fs
movsb
sbb
push
xchg
adc
leave
mov
jecxz
mov
cltd
sub
out
pop
imul
popa
clc
mov
inc
xchg
adc
rorb
popf
fists
fwait
or
and
add
lret
sahf
pop
sub
mov
int
pop
adc
or
push
iret
sub
cmpsb
push
cmp
sarl
mov
leave
pop
aas
mov
in
xchg
lahf
mov
push
push
jg
nop
stc
jge
mov
pop
pop
or
dec
ret
sub
pop
out
mov
ret
push
nop
inc
adc
and
fiadds
decl
addr16
idivl
shlb
repz
mov
dec
leave
in
xlat
dec
notb
pop
daa
sub
jb
fdivp
pop
mov
mov
shlb
inc
sarb
sub
je
sahf
add
push
jo
jbe
popa
shr
xchg
decl
or
cmc
jno
push
pop
sbb
mov
dec
out
sbb
dec
pop
fcoml
aad
hlt
out
push
pop
jl
loopne
jne
cmp
pop
nop
fwait
jg
cs
mov
pushf
sahf
loopne
loopne
in
into
push
xchg
push
nop
mov
push
lret
cmp
stos
mov
xor
adc
dec
dec
das
stos
xchg
mov
xor
stos
iret
popa
or
sbb
lahf
imul
dec
mov
clc
arpl
popa
push
imul
fs
xchg
push
ret
movsb
adc
sub
xchg
pushf
data16
cmp
jl
and
inc
mov
scas
jge
scas
sysret
mov
fiaddl
cwtl
pop
push
mov
pop
mov
push
lds
mov
mov
cld
rcrb
xchg
daa
and
add
dec
scas
and
jp
insb
jo
movsl
mov
mov
out
mov
mov
xchg
cmp
dec
loop
mov
push
fmull
out
dec
add
push
xor
add
sbb
stc
push
inc
jge
xchg
stos
xchg
mov
outsl
xchg
fldcw
xlat
xchg
jno
lea
mov
mov
je
lret
cld
addr16
ja
and
and
orl
out
fdivp
mulb
ja
fstl
jb
mov
push
in
int3
jle
rcrl
xor
push
shl
mov
pop
push
mov
mov
fs
loopne
out
mov
push
mov
cmp
fs
mov
pop
and
mov
sbb
lds
sbb
inc
sub
sub
out
arpl
sbb
or
pusha
lcall
loop
add
jnp
fdivrs
cld
ret
xlat
flds
fisubrs
or
dec
jp
mov
mov
jbe
loopne
sub
jg
jbe
pop
jnp
inc
sub
dec
inc
bound
jp
lods
mov
xor
stos
clc
mov
jae
pop
mov
mov
or
pop
test
mov
sbb
inc
ja
mov
xor
scas
lret
sbb
addb
js
fs
cmp
sbb
iret
fistpll
mov
repz
pop
das
jns
jp
push
mov
push
cmp
cs
ss
fsubs
mov
iret
mov
xchg
adc
xchg
cmpsb
sti
lahf
test
cs
xor
nop
sahf
pop
rcl
cld
ds
imul
mov
cltd
fidivrl
adc
fsubp
jge
xor
testl
icebp
jge
jg
cmp
sbb
insl
jbe
ss
adc
fsts
std
sbb
and
ss
int
push
mov
xor
aad
out
jne
push
into
or
jmp
fxch
mov
mov
push
pop
dec
dec
sbb
stos
sbb
xchg
pop
sub
cmc
sub
cltd
jecxz
fidivrl
test
push
xor
iret
repz
jmp
dec
sub
ret
arpl
push
je
mov
andl
push
mov
test
add
jmp
adc
clc
and
adc
jg
jae
sbb
pop
pop
dec
adc
lds
mov
and
xchg
adc
cmp
inc
xlat
and
dec
jns
cli
iret
mov
pop
or
hlt
daa
xor
dec
add
jnp
out
leave
scas
addr16
xor
xchg
jbe
mov
es
xlat
mov
push
pop
loop
std
ret
fnsave
xor
pop
rorb
loop
arpl
or
push
cmc
dec
mov
mov
add
rorb
fidivs
in
xchg
gs
inc
pop
fildl
xchg
dec
stos
sub
fwait
sbb
xchg
inc
mov
inc
movsb
sti
mov
mov
sbb
daa
nop
out
sbb
fistpl
jp
fdivrs
dec
xchg
or
adc
cltd
popf
push
push
adc
xor
xor
or
dec
adc
add
sbb
jno
cmp
repnz
dec
dec
pop
jno
js
jge
inc
jbe
xchg
icebp
loope
jo
xchg
xchg
enter
sarl
shlb
scas
push
inc
out
sub
add
push
pop
inc
movsl
test
aas
in
push
pushf
stos
ret
pop
mov
lea
out
or
xchg
mov
insb
test
out
fildll
stos
cld
adc
cwtl
adc
push
or
cmp
and
xchg
inc
xor
mov
xchg
cld
sub
daa
ret
movsl
sbb
pop
scas
scas
mov
pop
or
setle
xor
or
dec
dec
stc
mov
xor
pop
xchg
mov
push
orb
rep
mov
test
pop
int3
cltd
ja
adc
fmul
mov
push
je
bound
stos
xchg
push
ret
cltd
mov
std
inc
push
add
call
movsb
cmp
and
jecxz
test
mov
mov
cmp
and
fnstsw
push
fistpll
mov
imul
movl
stos
and
out
mov
stc
push
mov
jbe
repz
icebp
push
lcall
jbe
mov
into
subb
sti
mov
mov
pop
fwait
test
pop
in
mov
mov
mov
xor
push
aam
jne
icebp
push
repnz
daa
subl
in
test
pop
or
js
and
push
mov
lock
sbb
xchg
mov
fs
repz
lock
pushf
ret
in
pop
pop
in
push
sub
stc
jmp
jecxz
das
lods
js
sbb
adc
int3
repz
lods
das
xchg
jp
cmpsl
jecxz
adc
bound
jns
sti
inc
adc
xor
lcall
inc
fs
sub
xchg
xor
test
mov
add
cmp
stc
aaa
fisttpl
or
cmp
aad
ja
ja
out
mov
and
negb
add
sahf
fdivrp
push
pop
ja
leave
or
mov
mov
mov
pop
out
jbe
xor
dec
xchg
call
lahf
fstl
scas
jo
lods
shl
push
aaa
stc
push
pop
lret
shlb
lods
push
repnz
mull
mov
add
add
push
and
push
stos
cmpsw
xchg
adc
out
stos
jne
mov
and
lock
imul
orb
cs
jne
xor
xchg
mov
xor
and
out
repnz
cmp
pop
adc
and
int
mov
jnp
push
pushf
pusha
inc
jp
es
ljmp
pushl
hlt
jb
mov
les
pop
mov
adc
jno
gs
leave
and
inc
mov
out
and
jp
xchg
add
call
stos
adc
xlat
js
in
xor
leave
xchg
dec
in
mov
shl
xchg
sbb
mov
rolb
lcall
adc
inc
push
aaa
and
xor
rorl
dec
xchg
pushl
ficomps
and
and
bound
xchg
add
or
jl
popa
add
lds
rdpmc
xchg
in
lock
loopne
dec
mov
push
daa
add
inc
sub
jg
pop
and
dec
cmp
fdiv
push
notb
aad
ficompl
in
xor
mov
cltd
sbb
cs
pop
jmp
fldcw
adcb
jo
scas
outsb
cwtl
in
add
mov
out
stc
and
ljmp
ret
gs
add
cmp
adc
sbb
mov
jge
cwtl
or
add
std
es
jmp
popa
fstl
mov
jne
push
mov
cltd
sbb
push
mov
test
cmp
stos
es
sbb
jae
leave
and
jecxz
dec
mov
xchg
rorb
les
pop
mov
mov
push
ret
adc
out
aam
cmpsl
test
imul
fsubs
lea
cmpsl
gs
lea
mov
adc
idivl
popf
add
mov
push
xor
jge
push
push
add
fsub
in
scas
lret
xor
fwait
mov
shl
xchg
cmp
int3
out
cmp
and
xchg
add
xchg
adc
out
inc
out
pop
xchg
mov
stos
dec
std
xchg
testb
jg
cmpsl
jne
mov
aam
sbb
cltd
out
icebp
inc
imulb
shlb
sbb
mov
or
mov
in
push
fwait
sar
movsl
or
popa
out
adc
inc
mov
aad
insb
jge
push
pusha
dec
cmp
dec
xor
sub
xor
xor
xchg
into
aaa
mov
push
inc
push
xor
pop
adc
mov
and
xchg
push
pop
pushf
xlat
shll
movsb
sbb
fxch
test
mov
pop
sub
lret
mov
inc
cld
sbb
addb
icebp
rcr
lret
icebp
int
shrl
cmp
xchg
movl
sbb
jbe
lea
frstor
sbb
sti
dec
lret
xchg
adc
jg
int3
mulb
fisubrl
inc
jbe
sbb
fneni(8087
js
mov
hlt
shlb
mov
out
xchg
dec
sub
dec
xchg
cltd
xchg
pusha
in
xchg
out
popf
cmp
in
push
rorl
cmp
add
jne
leave
subl
mov
ss
push
cwtl
push
push
push
shr
subl
movsb
xor
sarb
adc
mov
imul
push
and
lock
stos
popa
pop
iret
rolb
daa
leave
in
es
rorb
push
pop
mov
lcall
lods
mov
sub
iret
cmp
xchg
pop
es
and
push
mov
or
enter
jns
dec
out
sub
jle
inc
inc
lahf
xor
push
loope
fs
ds
jp
push
cmp
pop
add
test
cmp
fcmove
dec
adc
and
lods
daa
in
hlt
cmc
popf
mov
pop
push
pusha
iret
out
pop
imul
movsb
scas
test
outsl
pop
in
test
iret
adcb
bswap
jecxz
mov
pop
sub
adc
js
mov
out
daa
idivb
fisttps
fbld
and
pop
int3
jnp
jecxz
mov
test
xchg
leave
sub
lret
or
mov
pop
imul
pandn
mov
rorb
and
inc
or
push
adc
addr16
inc
push
cwtl
mov
cltd
jg
repnz
jae
push
push
cmp
push
pop
jnp
cld
xchg
mov
cwtl
fimull
xchg
aaa
xor
and
cltd
pop
cmp
xchg
jo
mov
pop
std
fidivl
std
or
lahf
sarl
sbb
pushf
cmpsb
jmp
jae
sub
lods
or
ret
cmp
ficoml
ss
and
and
mov
xchg
lret
pop
cmp
xor
xor
and
mov
stc
jns
test
and
cmp
pop
stc
jg
test
pop
sti
jo
pop
jae
mov
movsl
jl
arpl
xchg
fmul
pop
push
pop
jo
xchg
or
xchg
push
inc
popa
rcrl
jp
jp
leave
add
jns
cs
push
cmp
outsb
outsl
sbb
cmpsb
push
call
testl
outsb
and
call
aam
xchg
sub
arpl
loopne
pop
mov
test
or
xor
lods
push
in
jnp
inc
movsl
sub
sbb
repnz
mov
dec
dec
fcmovb
clc
cmc
xchg
cmp
push
inc
addr16
dec
adc
xor
outsb
xorl
inc
dec
icebp
cwtl
xor
jmp
insb
xchg
mov
add
cmp
fidivl
inc
push
fistl
dec
enter
sub
cmpsl
adc
cli
push
xor
orb
cmp
cmpsl
pop
cmp
das
or
insl
mov
and
sahf
out
pop
call
add
xchg
inc
je
jnp
nop
cltd
scas
mov
jl
push
arpl
inc
push
enter
sub
loope
out
pop
fwait
mov
sbb
daa
adc
es
push
bound
mov
mov
pop
lock
lcall
inc
movsb
pop
aas
push
mov
sbb
aam
cmp
mov
ljmp
dec
iret
neg
mov
jns
mov
adc
or
jo
lods
iret
jp
xor
push
dec
test
out
xchg
xor
dec
pop
push
loope
inc
push
push
outsb
xor
outsb
insb
jo
dec
pop
lahf
ficoml
cmp
push
in
and
cmp
mov
push
or
repz
jbe
dec
fldenv
jle
pop
and
cmc
lcall
aas
add
mov
add
int
sub
sub
in
repnz
jbe
pop
scas
push
mov
xchg
shll
popf
lock
je
repnz
mov
repnz
jmp
mov
xlat
or
cmpsl
movsb
movsb
pop
push
out
push
dec
inc
fldt
je
jp
arpl
mov
xor
es
pusha
inc
arpl
dec
jo
imul
pop
fisttps
hlt
sti
outsl
mov
popf
sbb
xchg
out
push
test
dec
add
mov
adc
xchg
mov
cmpl
cmp
repnz
ss
outsl
movsb
and
test
iret
fists
sbb
or
sub
mov
imul
clc
push
jbe
aam
notb
ja
mov
push
sub
sub
adcb
sarb
cmp
dec
or
ret
lahf
sbb
mov
loop
repnz
arpl
or
sub
pop
addb
push
lods
mov
add
jne
shll
sarl
clc
mov
jnp
rorl
push
bound
mov
cmp
les
push
outsb
sub
fists
fidivl
jne
ljmp
insl
push
xchg
adc
mov
push
mov
in
sbb
aad
sub
fisubl
push
fistps
xchg
dec
ret
jns
cmp
xchg
leave
mov
shlb
add
repnz
test
adc
cmp
jae
inc
ret
jp
and
loope
or
or
xor
fwait
mov
cmpsb
mov
cmp
inc
clc
int
ficompl
pop
cmc
ss
mov
pop
cli
lods
sbb
insb
sbbl
in
mov
clc
dec
add
into
pop
mov
loop
scas
lea
and
lret
cmp
pop
negb
int3
xor
bound
int
roll
xchg
xor
xor
mov
mov
push
std
cmp
xchg
lcall
dec
rolb
pop
test
shll
lds
jnp
jnp
sti
loop
sub
imul
loopne
leave
jecxz
dec
out
std
insb
popf
mov
fsubrl
popa
insl
in
adc
inc
not
stos
mov
adc
arpl
in
stos
xchg
testl
out
movsl
jmp
dec
pop
aam
adc
or
ret
pop
dec
sub
xchg
push
cmp
and
inc
push
jmp
adc
xchg
stc
dec
push
mov
fildll
cmp
movsb
inc
cmp
sub
in
imul
js
fldcw
movsb
xor
mov
lea
pop
add
adc
xchg
ret
mov
pop
mov
mov
mov
cmp
hlt
adc
cs
cmp
mov
jge
mov
icebp
movsl
outsl
stc
mov
call
test
ret
push
push
mov
inc
sbbl
mov
xor
cld
xor
test
xor
add
ss
ss
dec
xchg
inc
cmp
add
aad
xchg
xchg
aad
ss
xchg
stos
leave
inc
cmp
aam
add
movsb
fwait
jo
sbb
pop
or
xor
inc
into
xor
nop
fs
dec
in
pushf
adc
ljmp
in
bnd
je
add
aas
out
mov
sbb
jne
ljmp
xor
mov
leave
sti
out
cli
cmpsl
dec
shlb
aad
sub
sbb
data16
sbb
sarb
add
mov
lahf
aaa
push
mulb
in
fdiv
add
mov
int3
jle
rcrl
sbb
cmp
pop
lock
push
popl
jo
xchg
jb
cmp
mov
pop
or
repz
mov
arpl
mov
mov
in
push
sbb
ds
popf
gs
lock
leave
test
cmp
or
mov
inc
shlb
inc
inc
into
cwtl
jmp
fmull
or
test
jnp
cwtl
in
icebp
nop
scas
sbb
or
fnstcw
jbe
xor
inc
inc
cmpsb
outsb
lods
or
adc
mov
fstl
or
stos
pop
add
push
xchg
xchg
stos
push
outsb
sub
mov
or
stos
and
ljmp
ror
and
les
clc
inc
inc
fimuls
test
cmpsl
outsl
push
ss
cmp
stc
push
pop
sbb
fdivp
daa
pushf
lcall
loope
cld
inc
lods
jnp
popa
jmp
dec
xchg
inc
lods
lahf
iret
mov
pushf
imul
and
adc
dec
pop
add
sbb
scas
push
es
fildl
mov
mov
movsl
xchg
sbb
movsb
insb
mov
jle
test
shlb
jns
leave
mov
or
cmp
adc
clc
sub
stc
icebp
pop
adc
xchg
add
test
mov
jle
push
in
into
fdivr
cmpb
xchg
jns
jb
jno
add
jbe
cmp
rol
out
rcl
ss
shll
fisubs
jbe
pop
test
enter
inc
cmc
and
xchg
jo
jg
aad
push
sub
jae
lret
std
mov
into
dec
mov
mov
mov
dec
add
xlat
hlt
sub
out
and
adc
jno
insb
add
or
incb
pop
inc
cmp
in
cmp
xchg
xchg
les
subb
push
push
test
out
push
add
sti
xchg
sub
fdivr
roll
or
addb
pop
xchg
jae
js
sub
and
inc
jmp
lea
jmp
pop
daa
ret
mov
mov
cwtl
pop
cld
mov
adc
xchg
xchg
add
mov
popf
mov
mov
xlat
mov
sbb
inc
test
mov
scas
idivl
arpl
inc
or
xor
lock
and
arpl
lods
movsl
mov
pop
pop
push
ja
int3
mov
mov
jle
mov
sbb
mov
ficompl
xor
cwtl
and
leave
and
int3
and
sti
ret
rol
xchg
mov
mov
inc
jae
mov
cwtl
incl
cmp
cmp
into
mov
les
gs
movsb
gs
aas
xchg
mov
jmp
dec
call
jmp
dec
adc
arpl
mov
fwait
push
je
mov
mov
sbb
fists
rclb
daa
fstp
inc
mov
mov
sbb
fs
push
ret
outsb
push
jmp
add
ret
out
mov
cmp
decl
push
or
pusha
cltd
mov
jbe
std
int3
mov
jg
pop
adc
pop
incl
jo
and
les
imul
sub
cltd
lret
cmc
outsl
and
push
xchg
scas
sub
jp
fisubs
pcmpeqb
daa
and
dec
jno
inc
dec
sub
adc
push
movsb
add
mov
or
pop
pop
test
fwait
xor
fisttpl
imul
and
int3
test
push
jno
stc
and
push
lcall
add
ds
or
jmp
sub
aas
mov
insb
xor
add
adc
pop
mov
xchg
xor
enter
xchg
mov
sti
and
pushf
mov
mov
mov
cmpsl
scas
fs
pop
fnsave
xchg
dec
sub
inc
inc
ja
out
icebp
cmpsl
xchg
adc
adcb
fdivrs
ja
stos
inc
or
push
xor
sbb
test
movsl
pop
int
cmp
push
pop
ja
inc
xchg
movsl
mov
lcall
push
pop
aas
jl
fisubrl
jno
movsb
aam
fisubrs
lcall
xchg
popf
rcrl
and
jmp
fs
dec
cmp
adc
inc
popa
push
cs
or
or
xor
es
mov
ds
cld
std
or
call
and
inc
pushf
cmp
ss
iret
cmp
ds
jmp
push
xchg
adc
adc
adc
loop
in
cmpsb
sbb
xchg
outsl
out
sbb
cmp
jecxz
test
out
sbb
insl
mov
lock
aam
xchg
mov
sbb
or
xor
xchg
xor
scas
clc
aas
cmpsb
xchg
inc
imul
out
mov
stos
dec
fstl
pop
cmp
mov
add
sbb
adc
dec
mov
jge
mov
movsl
imul
add
std
sub
mov
loop
sbb
popl
loop
adc
xchg
jecxz
xor
testl
jmp
cmp
inc
xchg
or
add
sbb
push
test
aam
jne
imul
mov
das
or
rcll
mov
mov
insb
cmovle
rep
lods
je
imul
xor
push
jne
mov
inc
stos
fstp
cli
test
out
fdivrl
cld
icebp
add
je
inc
icebp
addl
ljmp
sub
mov
in
test
jle
mov
ja
stos
add
sub
cmp
or
sbb
xchg
xor
inc
mov
cmc
leave
mov
mov
in
fs
arpl
out
inc
mov
addr16
arpl
xchg
xchg
cmp
cs
cmp
push
xchg
pop
xlat
dec
xor
sbb
pop
daa
or
rcrl
sub
jnp
adc
mov
jae
je
movsb
dec
daa
sbb
aaa
lea
leave
xor
in
cmp
and
pop
xchg
mov
sub
ljmp
imul
insb
sbb
mov
stos
xor
fcomp
inc
ss
sbb
push
jnp
sti
aas
jmp
pop
mov
aas
rcl
stc
lea
jge
out
adc
dec
movsl
aad
sbb
insb
pop
mull
inc
out
in
enter
jno
arpl
mov
push
loopne
cmp
bound
sbb
mov
mov
dec
dec
sahf
add
aad
jg
jp
leave
test
jle
rcrl
gs
out
in
adc
and
nop
mov
fidivl
pop
movsl
int3
xchg
pop
mull
xchg
mov
stos
cld
arpl
or
dec
cmpsl
mov
adc
lds
test
or
push
sub
xchg
mov
in
xor
sbb
in
mov
xor
jbe
lods
cmpsl
stos
and
lcall
jo
mov
das
popf
mov
lods
negl
rcll
jb
mov
push
iret
jg
fwait
sub
or
in
lret
add
xchg
aas
push
inc
repnz
jg
jg
lcall
jns
xor
ret
addr16
mov
mov
jmp
push
push
inc
inc
rclb
nop
ret
fcompl
pop
aam
arpl
loope
pushf
leave
ficoml
pop
add
jae
fisubs
jmp
scas
in
popf
sar
xchg
inc
fwait
lds
add
jle
cs
mov
push
data16
mov
inc
out
mov
push
out
lock
xchg
int3
mov
pop
or
out
pop
xor
adc
lea
call
sbb
pop
add
aaa
test
cwtl
adc
leave
pusha
jle
pop
add
sahf
mov
add
xchg
sub
sbb
fsubl
shr
and
in
aad
mov
icebp
sbb
out
fnsave
mov
sti
ss
or
ss
imul
mov
sbb
into
cwtl
ret
imul
sub
cltd
jge
ss
cmp
jmp
fsts
xor
fiadds
cmp
push
jle
dec
addr16
insl
fs
cs
fiadds
scas
adc
push
ds
das
shrl
stos
mov
cmp
in
out
testl
repz
sub
lods
imul
push
pop
push
fidivl
inc
adc
dec
dec
sub
out
ds
inc
cmc
xchg
pop
test
in
xchg
popa
push
jbe
rolb
jb
sbb
mov
push
push
pushfw
cli
cmp
dec
sbb
add
cmp
sub
std
pop
sub
test
int
pop
adc
add
sbb
fwait
xlat
js
mov
hlt
imul
fwait
ror
std
ss
mov
jae
bound
ds
fwait
cld
subb
aam
rclb
mov
mov
sahf
xlat
mov
push
lock
push
sub
mov
pop
lea
jns
sub
out
mov
adc
fcomps
into
ret
in
cltd
cmpsl
arpl
sbb
adc
pop
addr16
xchg
mov
ficomps
mov
mov
test
mov
lcall
xor
jo
std
std
outsb
test
subl
mov
lret
aad
std
fsubs
lea
jecxz
sub
hlt
lcall
add
arpl
loopne
test
sbb
out
ljmp
xchg
out
dec
xor
cmp
cltd
jno
scas
sbb
mov
sub
cmc
hlt
hlt
cmc
xchg
dec
adc
icebp
movsb
mov
sbb
push
push
cmp
shll
cmp
xor
cmpsb
cld
mov
mov
mov
cld
and
cwtl
sbb
sub
addr16
in
sbb
jns
loope
cltd
mul
aam
mov
mov
les
sub
outsl
scas
daa
aad
mov
xchg
fmull
leave
test
pop
popa
mov
add
pop
jo
xor
ljmp
shll
xchg
ret
xchg
lea
and
sbb
adc
mov
lds
test
mov
pop
sub
std
iret
push
std
out
cmpl
jns
je
jns
sbb
inc
pop
cld
roll
jp
test
fcom
sbb
stc
pop
push
ficoml
loope
nop
jns
jnp
mov
rclb
scas
mov
into
fisubl
js
pop
pop
test
inc
sbb
int3
sbb
mov
cwtl
mov
test
mov
xor
push
and
pusha
mov
jo
adc
jp
xchg
jbe
sbb
pop
pusha
pop
int
and
ficoml
into
lds
mov
stos
cs
jecxz
mov
adc
imul
xchg
xor
mov
movsb
rcrb
aas
sub
int
push
xchg
loopne
pop
mov
data16
xchg
adc
outsl
fwait
jo
stos
pop
or
int
fmuls
add
sub
mov
iret
xor
and
fwait
xchg
pop
pop
adc
mov
test
dec
in
cwtl
or
xor
push
mov
or
ljmp
pop
out
pop
or
dec
into
jbe
pop
fsts
aas
xor
rcrb
lods
mov
cmp
pop
insb
dec
push
loop
sub
jp
cmp
jle
adc
pop
rolb
add
mov
xor
adc
rcrl
cmp
xor
in
fistps
cld
into
enter
mov
enter
mov
cmpsb
jo
out
or
rclb
mov
imul
jp
pop
popf
xchg
or
xor
xchg
cmpsb
mov
lahf
sub
mov
mov
xchg
in
sti
or
mov
aas
push
adc
push
push
jecxz
orl
insl
daa
push
lahf
jge
mov
out
jbe
push
xor
aam
push
push
push
insl
mov
xlat
mov
inc
xchg
mov
cs
mull
jbe
push
mov
icebp
movsl
mov
roll
shl
or
sub
sub
push
leave
pop
fldenv
roll
sbb
popa
repnz
xor
loope
mov
or
sub
enter
xchg
loopne
mov
mov
popl
fdiv
inc
fdivs
cld
inc
loop
out
dec
pop
cmp
and
or
aaa
popf
sub
cmpsb
repz
arpl
fsub
cmp
add
inc
and
and
sar
xchg
cwtl
idivl
or
mov
lret
xchg
push
xchg
mov
inc
mov
jecxz,pn
sbb
sbb
jbe
sub
test
js
clc
mov
or
dec
push
mov
push
addr16
hlt
add
sbb
pusha
jae
lcall
add
and
pop
shll
jp
sub
jno
dec
ss
mov
pop
push
jg
ret
sbb
js
push
pushf
jge
sbb
outsb
jb
cmpsl
cmc
mov
push
lods
push
mov
jg
jo
scas
fistl
push
daa
nop
in
push
mov
xor
inc
fisttps
cmp
jmp
sbb
in
addb
adc
xor
mov
mov
fldenv
cmp
and
cwtl
sub
rcrb
icebp
jbe
sub
ljmp
aam
or
in
lds
add
jmp
les
xchg
ffreep
and
sbb
xchg
sub
cvtpi2ps
mov
pop
test
xchg
negl
inc
data16
jae
mov
push
scas
pop
ret
outsl
addr16
push
ficompl
add
push
add
inc
mov
cmovp
arpl
inc
pop
sbb
mov
and
ret
inc
repnz
les
testb
cli
sub
jb
pop
mov
mov
or
push
or
es
xor
push
mov
add
pusha
scas
fimull
mov
imull
mov
ficoml
stos
js
xor
xchg
das
aam
aam
and
sbb
mov
add
jb
or
xor
push
mov
sub
sbb
inc
lcall
mov
add
jbe
fistpl
divb
pop
dec
or
xor
sub
aad
mov
hlt
xor
insl
dec
daa
adc
pop
rorl
push
hlt
in
cmp
test
inc
mov
xchg
shlb
inc
out
pop
outsb
fcmovbe
paddd
das
xchg
imul
or
push
dec
pop
jno
fwait
xor
cwtl
mov
fbld
inc
dec
lock
pushaw
ljmp
sbb
insb
jge
push
and
mov
or
mov
movsl
cmpsb
push
cld
add
outsl
into
mov
mov
add
pop
xchg
mov
enter
jae
pop
xor
addb
rorb
pushf
pop
testb
fidivrl
sub
mov
xlat
inc
or
sub
pop
ljmp
into
and
lock
imul
in
shrl
stos
stc
pop
aas
ss
repnz
inc
lea
stc
lcall
je
sub
movsb
lahf
cwtl
or
sub
or
mov
xor
lods
mov
lcall
adc
and
mov
cmp
pushf
sub
xchg
jmp
mov
add
xchg
insb
sbb
cmp
and
jmp
pushf
mov
cli
cs
jne
cwtl
popf
push
loop
addl
xor
shll
sbb
cli
inc
outsl
dec
cltd
inc
or
sbb
jl
popa
shl
sub
jno
mov
cmp
into
decb
rcrb
mov
pop
or
xchg
lds
arpl
dec
cli
push
stos
outsb
shll
or
and
scas
mov
sub
lret
jnp
push
mov
arpl
fisubrl
ret
sub
call
xor
repz
adc
cltd
aam
mov
or
mov
outsb
cmp
sbb
add
loopne
ret
pop
xor
cs
xor
cwtl
insb
push
out
push
dec
ss
je
stc
repz
sub
pop
lahf
popa
test
adc
xchg
filds
lret
fst
stos
mov
mov
mov
mov
or
adc
inc
repz
or
sub
adc
jl
call
xor
and
xchg
fildll
cwtl
xchg
and
inc
rcr
or
js
movsb
ja
inc
push
jne
es
ljmp
ret
sub
cmpl
hlt
mov
sub
jnp
lret
dec
jbe
fimull
push
popa
xchg
xchg
addr16
rcrl
push
push
dec
iret
jmp
add
dec
bound
lea
stos
pop
daa
push
mov
les
push
icebp
pusha
shl
ss
outsl
jl
testb
sub
jno
test
iret
xchg
repz
jg
fsts
mov
jp
mov
in
dec
popa
fisubrl
xor
adc
das
xchg
and
shl
fidivs
adc
movsl
cld
adc
test
xor
daa
aas
gs
imul
jge
and
nop
ds
sbb
loopne
sti
push
call
sbb
pop
add
dec
das
pop
scas
sub
rcrl
sbbl
push
adc
loopne
jle
popa
rcll
ss
stos
stos
mov
mov
ljmp
push
adc
ljmp
stos
add
mov
jmp
fnsave
lods
bndldx
loope
js
push
les
xor
push
cwtl
mov
sub
je
xor
in
cmp
notb
insl
aam
scas
les
ficoms
pushw
mov
lcall
mov
in
frstor
fdivrl
ret
push
push
xor
add
sbb
dec
rorl
mov
inc
inc
push
pop
sbb
mov
aad
gs
sub
mov
mov
pushf
push
adc
adc
pop
movsb
pop
orb
inc
jb
add
gs
mov
loopne
pop
push
dec
fadd
inc
jecxz
adc
lea
je
das
out
dec
cli
add
adc
addb
push
pop
and
das
das
sbb
cmp
sarl
fs
jb
int3
cmp
cmp
hlt
fstl
cmp
sub
adc
mov
leave
inc
xlat
xor
testl
rcll
push
cmp
bound
aas
xchg
cltd
sub
adc
jl
dec
lret
dec
jge
jmp
je
xabort
test
cmp
mov
cmp
lods
mov
xchg
movl
cmp
sti
scas
fbld
jp
xchg
test
jmp
imul
sbb
pop
out
mov
push
sbb
cmp
pop
bound
push
mov
xchg
xor
inc
in
rol
fmul
cmp
shll
nop
mov
and
inc
adc
jmp
xchg
fistpll
jmp
stos
jp
cli
sub
xchg
mov
gs
mov
inc
xchg
lea
loopne
aad
insl
mov
les
int3
mov
jnp
xlat
popf
loope
sahf
lcall
pop
push
inc
push
jle
mov
aaa
lcall
arpl
lcall
push
mov
xchg
stc
pop
and
pop
push
sub
jbe
repnz
mov
mov
mov
clc
adc
mov
mov
sub
push
mov
xor
and
mov
pop
paddw
cli
pusha
dec
cmp
lret
jle
pop
or
fdivs
fmull
push
mov
int3
movb
das
inc
mov
push
pusha
inc
inc
push
pushf
xor
scas
pop
shr
mov
lret
dec
mov
pop
loope
mov
aad
popa
pop
hlt
insl
mov
stc
fcmovnbe
or
rolw
fdivrl
mov
and
cmovo
inc
mov
jmp
sub
mov
sbb
shl
and
leave
jbe
inc
rcll
sarb
pusha
sub
mov
imul
xorl
pop
jge
jl
andl
adc
and
cmpsl
jns
xor
pop
mov
data16
stc
xchg
fists
fisubrs
mov
mov
jae
xor
xchg
jne
gs
jg
sub
inc
faddl
add
cmpsl
and
in
orb
and
fs
data16
or
jo
fisubrl
insl
mov
or
pusha
sub
sbb
data16
sahf
mov
and
shrb
loop
rcrl
pushf
xorb
sbb
dec
scas
scas
das
xlat
lds
xchg
gs
lds
mov
mov
xchg
int
xchg
jmp
lds
jp
mov
in
jmp
mov
pop
adc
cmc
cmpsb
cmp
stos
sbb
pushf
out
mov
adc
inc
daa
repnz
push
in
notb
cmp
cld
ret
insb
ja
push
adc
inc
stc
mov
int
or
ret
mov
jp
shl
push
or
aaa
rcrl
scas
sti
in
xchg
mov
cmp
push
inc
lret
es
cmp
orb
push
push
add
push
mov
fldl
mov
testb
sub
xchg
test
leave
divb
cli
mov
gs
sub
push
movsl
mov
insb
enter
mov
stos
lret
addb
mov
cmpsb
imul
jle
idivb
lcall
push
test
mov
adc
jo
sahf
test
outsb
mul
xchg
pop
loope
sub
jns
cmp
add
sub
ja
repz
out
pop
inc
mov
mov
sub
sbb
sbb
add
scas
lret
adc
cmpl
sbb
imul
stc
out
lea
aas
fs
imull
jle
mov
hlt
sub
shll
loope
dec
loope
xchg
push
or
push
fldt
addr16
add
inc
mov
les
jno
popf
fwait
xor
stos
in
shrb
pop
jge
push
cmp
cmc
push
fwait
roll
cmp
push
inc
xchg
or
aaa
popf
ret
cmp
jne
inc
ljmp
lock
xor
out
jmp
xor
mov
adc
jg
les
or
adc
dec
std
adc
jp
mov
xchg
cmp
inc
jg
sub
insb
xor
cwtl
inc
push
add
and
adc
dec
jns
fadds
push
push
push
xor
sahf
imul
cli
inc
aad
sbbl
js
loop
cwtl
push
outsb
push
mov
sti
or
sahf
rorb
sar
push
into
mov
in
xor
pop
loope
xchg
ds
jo
pop
jno
loopne,pt
daa
pop
pop
ficomps
adc
lahf
mov
and
xchg
push
pusha
imul
adc
or
repz
cmc
mov
shll
add
enter
aas
sub
xchg
sbb
xor
dec
push
into
fimull
das
xor
xorl
pop
jg
mov
push
pushl
xchg
pop
mov
or
pop
xor
in
cmp
mov
or
push
and
mov
fadds
push
pop
inc
es
pop
sbbb
jge
mov
xchg
clc
test
inc
dec
test
sahf
cmpb
fiaddl
fcoms
mov
shrb
push
mov
cmp
sbbl
inc
lahf
mov
out
in
notb
sar
std
mov
sbb
adc
vmovups
add
dec
shrb
mov
xchg
jmp
inc
sub
mov
shrb
aam
push
pop
cld
push
lods
mov
insb
push
mov
pop
rorb
xchg
push
sbb
push
push
addr16
out
xchg
inc
pop
jle
mov
int
mov
outsl
mov
rcll
clc
test
lcall
les
inc
orb
aaa
pop
int3
cmp
pop
cmp
icebp
repz
pop
push
dec
shll
test
out
sub
int3
push
push
hlt
jns
sarb
xchg
xor
dec
outsl
mov
cmp
cs
ss
sub
mov
and
pop
inc
cmpl
sbb
and
test
dec
sbb
mov
mov
movsb
push
xchg
sbb
pop
bound
mov
rorb
aas
mov
loopne
fwait
mov
test
jb
inc
add
mov
outsl
sbb
add
mov
ret
aad
pop
out
loopne
xchg
push
sbb
sbb
jl
inc
iret
insb
popf
inc
jmp
int3
pop
add
and
push
sbb
inc
push
jnp
movsl
dec
lahf
push
ffree
and
gs
sbb
pop
fmulp
divb
and
dec
icebp
jmp
mov
and
push
push
xor
jnp
ret
dec
scas
imul
sub
dec
out
sbb
push
aas
enter
dec
adc
dec
sub
in
dec
lret
or
in
pop
sbb
or
clc
and
ss
xor
iret
adc
and
pop
roll
xchg
or
pushf
out
xor
ljmp
and
mov
dec
dec
lds
cmp
movsl
sbb
add
cmc
adc
outsl
ret
out
jns
cmp
test
xchg
cld
xchg
loopne
sub
sub
ficompl
sub
dec
pop
das
add
mov
mov
adc
cld
ret
iret
loopne
nop
sarl
scas
pop
sbb
mov
ljmp
xor
push
and
call
or
inc
pop
mov
dec
or
jbe
sarl
push
into
insb
dec
mov
dec
insb
jmp
and
cmpsb
fstl
lahf
pushf
movsb
dec
ja
pop
adc
pusha
in
aas
and
mov
cmp
daa
stos
mov
daa
push
push
pop
loopne
fcomp
std
xor
jle
mov
sbb
mov
mov
repnz
add
push
popf
fistpl
call
or
fdivrs
mov
dec
sbb
scas
xchg
je
pop
dec
rcr
cli
xor
icebp
test
aaa
fstl
subl
mov
clc
lods
fcmovu
into
xor
rclb
pop
fs
mov
stc
push
mov
das
aam
xor
dec
clc
lods
and
push
add
lods
inc
jle
push
push
aaa
push
negl
pop
gs
ja
and
jo
or
add
adc
pause
or
xor
push
add
push
adc
sub
cmpsl
cs
sti
mov
or
test
fstps
movsb
loopne
pop
scas
ret
aas
push
jl
cmpsb
cmpsl
fucomi
xor
mov
cld
lods
mov
sbb
in
xor
dec
push
mov
xor
jp
mov
add
je
inc
mov
sbb
add
leave
or
sbb
loope
inc
pop
xor
inc
or
mov
in
mov
jmp
add
pop
or
das
pop
pop
mov
jl
stos
nop
jle
les
add
mov
mov
sub
inc
pop
sub
xchg
outsl
cmc
add
mov
int3
lret
pop
fwait
or
mov
in
dec
movsb
iret
js
aas
lock
cmpsl
inc
sbb
int3
data16
inc
jp
icebp
out
add
int3
movsb
jle
jecxz
mov
jge
push
push
sbb
in
jb
adc
mov
sub
dec
cmpsl
sub
xchg
sahf
insb
and
lret
aaa
xchg
leave
in
in
mov
mov
clc
stc
sbb
fimull
inc
pop
outsl
pop
lods
jmp
and
or
mov
and
adc
mov
cmp
pop
add
pop
or
pop
movl
cmp
push
cmpl
adc
outsl
xchg
push
mov
dec
sbb
xchg
adc
adc
dec
in
add
andl
mov
push
xchg
imul
xchg
loopne
aaa
stos
out
xchg
adc
mov
inc
xchg
popf
inc
imul
or
scas
push
xor
mov
or
xor
mov
dec
aad
cltd
push
xchg
cmpl
lea
sub
add
ds
testb
subl
inc
ss
sub
imul
and
es
and
repz
lods
sub
imul
jo
adc
push
fdivr
jmp
outsb
mov
cwtl
push
insl
testl
inc
insb
push
push
push
push
cmpsb
outsl
sub
icebp
sub
sub
data16
add
and
mov
dec
mov
fucom
inc
jb
in
daa
adc
mov
cmp
sahf
out
aam
je
adc
into
fiaddl
cltd
in
add
stc
int3
add
push
jb
ret
jbe
jle
in
stos
aam
jmp
ret
xor
es
iret
popa
daa
xchg
adc
push
mov
imul
inc
dec
inc
add
add
das
mov
addl
sub
repnz
lcall
adc
or
scas
jns
cmp
jg
lahf
lea
inc
pusha
dec
mov
or
gs
test
mov
pop
dec
sbb
cmp
mov
push
cmp
pop
sbb
js
sbb
adc
push
clc
push
in
fnstsw
mull
cs
sbb
add
lea
cs
dec
call
inc
push
imul
inc
jbe
pop
sbb
mov
mov
inc
incb
je
fdivr
mov
push
add
popa
push
mov
arpl
cmpsb
es
scas
addl
cmpsl
pop
mov
fcmovnb
subl
mov
push
jle
out
je
clc
mov
stc
sub
pop
sbb
mov
and
mov
mov
cwtl
mov
mov
cld
xchg
sub
movb
cmp
mov
add
je
maskmovq
int
imul
in
push
ficoms
iret
sub
lcall
and
push
and
stos
std
adc
inc
add
mov
lock
cs
jg
je
push
sub
loop,pn
loopne
push
push
push
xchg
mov
sbb
sahf
push
sbb
jp
jmp
jnp
push
add
stos
adc
jbe
fidivrl
pop
repz
hlt
leave
pusha
rolb
fs
push
mov
jo
sub
loop
cli
int3
mov
lea
sub
jecxz
lahf
fisttpll
fbld
xchg
and
aas
addr16
push
fcoms
jmp
mov
mov
xor
scas
stos
rclb
pop
ret
stos
fdivrl
out
xchg
pusha
jg
or
jnp
jo
jmp
mov
into
pop
lcall
xchg
mov
jns
movsb
push
cmp
aam
andl
scas
dec
out
aad
outsb
inc
pop
lods
lcall
xchg
shll
aam
out
jno
pop
fists
cmpsb
and
xor
add
fxch
pusha
push
xchg
push
jl
mov
push
or
xchg
adc
call
popf
and
sub
out
or
inc
push
or
adc
les
pop
push
and
adc
stos
stc
lcall
adc
xor
sub
das
sbb
mov
mov
sub
mov
cmp
fcoms
outsb
xor
divl
lret
mov
xchg
mov
mov
lea
outsb
adc
shrl
imul
pop
adc
adc
or
stc
fstps
std
jle
lcall
jle
and
lock
or
addb
pop
jg
ss
repz
gs
insl
fstpl
ret
dec
inc
aam
in
mov
adc
ret
mov
cld
sub
les
xor
movb
xor
fwait
inc
leave
cmpsl
cmp
cmpsl
and
aad
test
out
sub
lret
add
cmp
ljmp
jge
mov
adc
shlb
rorl
sub
shl
cwtl
sub
test
leave
push
stc
rorl
call
loope
dec
and
push
pop
add
mov
jmp
ret
sub
sahf
stc
add
xor
loopne
subb
mov
insl
jecxz
push
jo
rolb
add
push
jmp
and
jae
push
mov
dec
outsl
popf
pusha
cmp
pop
stos
test
outsl
or
cmpsl
incb
or
movsl
cwtl
add
rorb
mov
repz
inc
inc
push
fs
push
sub
add
or
mov
in
jne
dec
movsl
iret
or
fidivrs
out
dec
or
lods
lret
dec
adc
push
push
mov
xor
push
cmpsl
int3
pop
mov
jo
daa
inc
mov
out
in
lea
int3
push
mov
das
add
scas
sub
dec
cmp
inc
mov
mov
mov
mov
add
insl
iret
add
inc
sahf
pop
pop
ret
cmp
inc
loop
pop
jnp
movb
jl
dec
mov
testb
jae
in
in
lcall
test
mov
ret
subb
or
mov
mov
cs
pop
xor
xor
aam
jg
data16
fisubrs
mov
pushf
inc
cli
pop
dec
dec
jbe
pop
insl
push
sahf
inc
adc
mov
xchg
jb
inc
aam
arpl
dec
lret
mov
int3
push
ror
into
lock
fisubl
int3
les
in
stos
push
dec
jl
jb
insb
fisubrs
add
popa
loope
sbb
jmp
mov
jecxz
and
test
movsb
addr16
xchg
cld
mov
mov
repz
xchg
movsb
mov
pop
inc
mov
scas
jle
shlb
xchg
pop
sbb
movzwl
xchg
mov
mov
popa
lea
aad
out
imul
mov
iret
imul
mull
pop
push
pop
cli
or
pop
xor
cli
aas
sahf
and
imul
mov
cmpsb
fwait
and
mov
addr16
push
inc
flds
lret
sahf
sub
mov
cmp
cmp
lods
das
xchg
leave
gs
cmc
leave
sahf
or
sbb
ja
push
into
push
lea
inc
xlat
xchg
js
iret
aad
pushf
jle
xor
shrl
mov
cli
xor
cmpsb
pop
cmp
mov
cmp
sub
or
sub
push
xchg
push
push
loop
xor
cmpsb
mov
cmpb
mov
mov
pop
xchg
imull
out
ss
adc
lods
inc
inc
pop
lret
fsts
push
aad
movl
lods
mov
scas
loop
sbb
adc
inc
call
jp
ret
mov
stc
jle
inc
outsl
push
inc
aaa
mov
pop
lcall
xchg
cmpsb
or
je
adc
jp
aas
aas
inc
outsb
adc
fs
and
out
mov
mov
fucomi
mov
pushf
int
imulb
push
pop
cmp
out
xchg
pushf
xor
fcoms
clc
out
dec
cmpsb
int
jp
dec
xchg
sub
dec
seto
inc
mov
pop
inc
push
ljmp
pop
xchg
insb
gs
daa
ds
cmpb
mov
sub
popa
fists
lock
rclb
loop
stos
dec
pop
adc
xlat
mov
call
test
imul
dec
test
pop
fsts
mov
inc
call
pop
jne
fldt
dec
pushw
bound
sbb
lret
leave
into
push
push
pop
add
jbe
jecxz
or
dec
sbb
mov
xchg
dec
sub
cmp
scas
insl
mov
pop
and
movsl
sbb
pop
cmp
add
out
xor
add
or
lcall
dec
mov
jo
cltd
movsl
daa
xor
imul
sbb
ljmp
add
lea
jbe
cmp
jg
imulb
push
js
sar
mov
add
test
jae
sbb
aas
adc
in
dec
xor
je
xchg
stos
scas
dec
cli
shll
lods
push
inc
das
popa
xchg
pop
dec
sub
pushf
cs
shll
xchg
or
add
add
and
pushf
pop
adc
pop
xchg
adc
emms
ret
rorl
cmp
aam
mov
ret
mov
lds
mov
testb
mov
or
cs
rcr
or
movsb
shlb
mov
or
xchg
add
pop
add
mov
pop
and
and
lods
cmp
pop
js
ds
leave
nop
pop
pop
push
insl
repz
ret
rcrl
push
faddl
ljmp
mov
das
mov
ffree
adc
pusha
add
jnp
push
imul
out
std
inc
ret
lods
inc
jne
cli
or
sahf
enter
incl
cmp
mov
insl
ds
or
jno
outsl
cmp
fwait
lea
pop
outsb
inc
mov
idivl
mov
cld
mov
popa
test
popa
in
test
push
cmp
jmp
into
fdivs
mov
pop
sbb
ret
lret
popa
cltd
cmp
test
sbb
xchg
rorl
int3
push
sub
outsl
fdivl
dec
jae
mov
mov
pop
mov
push
dec
gs
outsl
aaa
dec
pop
imull
cs
adc
lods
pop
jle
xor
and
pop
xlat
repz
sub
fcoms
out
shll
and
sbb
or
xor
xor
aam
pop
cmp
and
mov
cmp
push
mov
rolb
rolb
pop
fmull
xchg
pop
xchg
bt
enter
int
push
pop
pmulhuw
cli
or
push
push
mov
mov
les
mov
leave
cmp
idiv
out
xchg
test
test
fdivs
mov
jo
clc
lock
cmp
cltd
ljmp
xchg
test
test
xor
mov
push
mov
mov
mov
push
call
repz
lods
push
lods
idivb
jo
insl
sbb
mov
clc
bound
dec
ror
or
pop
sarb
sbb
xchg
aaa
mov
pop
xchg
fcomp
adc
pop
enter
in
pop
outsl
push
xchg
out
pop
or
test
xorb
mov
les
xlat
popl
cli
std
sub
shr
mov
xchg
jge
ljmp
pop
js
daa
adc
jmp
xchg
popa
cli
repnz
repz
icebp
test
xor
jns
iret
mov
aam
push
add
xchg
xchg
mov
cmp
int
stos
add
mov
jnp
and
cmpsl
das
movsb
mov
pop
mov
mov
popa
pop
dec
aaa
test
jl
in
and
pop
pop
flds
setbe
mov
insb
dec
fisttpl
inc
mov
insl
fldt
das
lods
scas
jmp
sbb
jno
jnp
pop
fsubrl
loop
test
out
mov
push
outsb
jb
jmp
dec
subl
aad
mov
pop
test
aas
pop
loope
mov
cmpsb
leave
push
adc
jno
mov
jp
rol
sbb
ret
lcall
mov
or
aaa
dec
mov
push
fldcw
ficompl
push
xor
es
std
pop
inc
popa
jae
addr16
push
out
sbb
lret
imul
je
cmp
insl
int3
mov
iret
incb
sbb
dec
std
sub
and
fcomps
cltd
popf
aas
stc
data16
xchg
adc
lret
mov
insb
jmp
mov
push
mov
pop
int
pop
ret
and
sub
sub
scas
mov
jg
aam
into
mov
scas
push
mov
inc
push
pop
fsubr
sbb
mov
jp
pop
mov
add
push
xchg
push
daa
popf
push
mov
inc
negl
fldl
pushf
nop
and
icebp
adcb
sahf
outsb
popf
cmp
mov
movsl
and
xor
fdivs
push
inc
lcall
outsl
push
mov
out
xchg
testb
inc
mov
rorl
int
pushf
sub
hlt
enter
stc
rclb
stos
inc
sarb
pop
xor
dec
add
in
sbb
scas
sbb
or
mov
pop
pop
push
sub
daa
daa
pop
ret
xchg
cmp
push
cmp
jo
mov
dec
aaa
lret
fldt
mov
aaa
jb
mov
sub
push
inc
out
js
icebp
or
movsb
stos
fimull
iret
scas
mov
fistps
aaa
cmpsl
lret
cs
lcall
xor
xchg
test
mov
adc
push
rcr
adcb
and
dec
jno
push
in
lret
and
xrelease
enter
inc
push
jp
inc
xchg
cld
in
add
dec
dec
lds
outsl
cmp
stos
andb
mov
cli
mov
repz
movsb
ret
jmp
lret
sub
mov
pop
sbb
xchg
ss
xlat
in
or
imul
dec
xchg
sbb
or
movl
loopne
cmp
sub
jg
push
mov
fidivs
out
cld
add
push
mov
insl
test
ret
lahf
data16
adc
ja
push
cli
pusha
dec
nop
jmp
jecxz
test
in
jle
sbb
rclb
inc
adc
mov
jp
lods
xor
je
adc
out
xchg
leave
adc
fimull
push
sbb
xlat
daa
imulb
scas
repnz
sbb
add
and
sbb
push
arpl
or
insl
popa
push
and
mov
jge
mov
and
jle
adc
aaa
pop
add
inc
push
in
jle
std
mov
popf
daa
rolb
xchg
and
mov
inc
test
jno
pop
dec
pop
inc
movb
cmp
add
xchg
add
mul
popf
pop
lock
lea
and
mov
insb
mov
fs
cmp
int3
jns
dec
push
add
jnp
or
mov
or
insl
insl
xor
fildl
movsb
cmp
mov
dec
js
mov
enter
cmpsl
bound
cmpsb
test
xchg
in
jne
imul
mov
mulb
push
inc
sub
lahf
cmp
adc
lahf
loope
and
aad
shrb
jmp
cmpsl
sbb
mov
ja
push
add
pop
sbbb
ss
js
jbe
addr16
dec
js
inc
icebp
leave
lahf
or
nop
xchg
jg
dec
rclb
mov
add
popf
outsb
div
stos
add
inc
xor
mov
push
cmp
fcomps
xchg
jmp
push
push
icebp
ds
mov
xlat
int3
jns
out
imul
mov
popf
scas
les
push
ret
insl
sub
jp
mov
lahf
xchg
adc
jo
mov
adcl
jecxz
imul
lcall
xor
adc
das
loopne
cmp
push
adc
movsl
sub
mov
imul
dec
imul
aaa
incl
clc
cmp
std
jne
jae
sbbl
mov
inc
add
das
pop
adc
lods
je
fists
add
sahf
bound
rcr
je
dec
ds
inc
adc
lods
movsb
inc
and
lds
push
or
xchg
daa
xchg
aam
iret
and
sbb
and
xor
and
inc
xchg
sbb
dec
xor
in
fimuls
ss
xor
cmp
jecxz
push
mov
cltd
push
pop
sub
divb
push
fdivs
push
fprem1
mov
mov
push
loope
addr16
pop
stos
dec
jmp
push
mov
or
mov
ss
push
clc
sub
cld
aam
pop
adc
xor
dec
jno
roll
jbe
mov
and
gs
fiaddl
sub
int
lods
lcall
ja
flds
and
addr16
push
pop
sar
lcall
mov
add
adc
sub
add
push
lahf
jne
xor
push
sbb
pop
loopne
ja
sahf
pushf
inc
int3
mov
pop
cmp
loopne
jbe
loope
sub
stos
je
xor
mov
sub
gs
push
je
fldl
inc
clc
cwtl
mov
imul
fdivrp
inc
mov
push
test
aad
cmp
mov
sarl
in
push
hlt
dec
fwait
outsb
cmp
xchg
movsb
mov
push
mov
add
jbe
pop
enter
into
mov
pop
sbb
and
cmp
sbb
jle
cld
cs
adc
push
mov
dec
repz
insl
pop
in
dec
xlat
ljmp
fwait
sub
cbtw
into
sbb
mov
lock
leave
jne
jg
and
int
inc
leave
mov
jo
cmp
adc
xor
shr
imul
mov
sahf
ficomps
pop
cmc
pop
mov
leave
fwait
stos
push
jae
and
sbb
mov
and
fmuls
jbe
mov
in
jb
adc
lret
pop
loop
int3
mov
rcl
inc
ss
add
aaa
and
ret
inc
lret
bound
sub
stos
gs
test
fisubrs
and
clc
ja
cmp
dec
mov
lea
pop
mov
movsb
xchg
xchg
popa
mov
nop
lea
jne
movsb
cmp
cld
xchg
cmp
push
mov
jle
je
mov
hlt
repz
clc
mov
movsl
out
jo
scas
std
sbb
adc
lret
sbb
out
jno
mov
jns
movsb
mov
aaa
xchg
adc
mov
adc
cmc
fisubrl
jmp
pushf
pop
popf
jne
mov
mov
push
in
enter
jl
xor
cld
jns
stos
test
xlat
lods
dec
lods
xbegin
stos
xchg
movsb
add
push
jbe
add
ds
xor
dec
and
or
rorl
and
scas
daa
dec
cwtl
xorl
push
xor
xor
add
popf
jle
mov
aad
jb
dec
scas
sbb
popf
or
add
dec
outsb
pushf
out
jmp
and
stos
stos
clc
call
insl
pop
fcoml
mov
jmp
or
leave
cmpl
sbb
push
sub
xor
test
iret
pop
xorl
inc
adc
movsb
scas
pop
sti
cmp
push
fisubrl
and
stos
mov
lcall
jae
scas
or
or
pop
pop
jg
outsl
lds
out
mov
cli
mov
mov
dec
out
imul
scas
mov
add
and
adc
mov
inc
cld
adc
out
scas
jmp
xor
or
repz
stos
aas
sub
lods
mov
ret
lcall
es
repnz
ss
mov
jne
xchg
sbb
xchg
in
pop
mov
rcrl
inc
mov
jmp
mov
shlb
imul
pop
mov
clc
sub
cmp
add
mov
jmp
shlb
addr16
mov
mov
shlb
or
iret
xchg
cld
jne
inc
aaa
sub
inc
cmp
dec
std
pusha
shll
mov
int3
shll
add
enter
jnp
xchg
push
mov
xchg
dec
mov
xchg
cmp
or
scas
xor
aam
or
shll
or
jmp
arpl
lds
nop
sub
or
aad
mov
in
inc
ljmp
aad
xchg
setbe
iret
insb
int3
inc
out
aaa
add
insb
push
xlat
pop
dec
pop
fdivs
std
adc
aaa
addr16
sahf
ficoml
pop
ret
insl
mov
cld
inc
les
inc
sbb
aam
jns
insb
cs
sub
mov
lds
sbb
cmp
mov
sahf
fistps
not
jg
enter
in
mov
push
lods
sahf
xorl
mov
mov
lahf
mov
out
aaa
outsl
and
fstpl
idivb
dec
xchg
and
xor
ja
jo
push
jmp
adc
adc
cs
push
add
faddl
inc
jge
lret
es
mov
adc
cmp
imul
mov
in
pop
cmpsl
mov
jno
add
xor
lcall
or
rcll
stc
dec
ss
pop
dec
test
jae
out
shlb
loopne
outsb
adc
cmp
add
xchg
fadds
push
icebp
test
and
inc
out
mov
pop
xchg
test
shrl
cmpsl
cli
mov
shll
loopne
cmpb
sub
mov
dec
jae
call
mov
add
pusha
mov
sbb
dec
and
repz
cmp
xor
imul
push
ja
adc
jmp
pop
jg
dec
pop
xchg
add
or
adc
shlb
arpl
aaa
and
push
or
lds
out
add
jae
inc
pop
dec
ret
mov
fstp
or
xchg
out
iret
hlt
and
inc
jbe
inc
adc
dec
xchg
aam
or
bnd
dec
jge
pop
fnstcw
mov
adc
cmpsl
xor
add
xchg
aam
in
mov
mov
add
aam
lods
popf
xchg
in
js
add
sbb
daa
mov
hlt
push
mov
das
mov
inc
push
pop
out
shlb
pushf
mov
je
inc
mov
dec
xor
ja
pop
lret
and
or
enter
cs
cmp
fwait
adc
add
mov
jae
ficomps
clc
cmp
cmp
loop
sti
pop
mov
lock
add
into
imul
mov
das
jne
sbb
or
fwait
repz
jle
cmp
inc
pop
mov
ret
inc
rcrb
into
push
dec
pushf
loop
add
in
mov
pop
shll
int
mov
sti
mov
mov
push
push
les
dec
or
jp
push
into
sahf
pop
mov
scas
lds
stos
movsb
das
lahf
add
push
xchg
jmp
dec
jmp
aas
ja
dec
mov
dec
jp
sbb
out
pop
xchg
pop
cmpsl
xor
inc
sub
shlb
cmpsl
cli
sub
xchg
loop,pn
shll
mov
cmp
and
or
mov
cli
or
mov
loop
xor
nop
adc
mov
inc
jno
mov
cmp
pop
mov
ljmp
xor
icebp
outsl
push
dec
repz
mov
sbbl
stos
jae
or
fs
inc
ror
jae
mov
pop
das
out
xchg
lock
jbe
jle
ret
mov
imulb
cmc
xor
push
rorb
cmp
mov
int3
insl
inc
add
mov
mov
dec
xchg
jp
cmp
jb
movsb
out
es
mov
data16
bound
ret
jno
xor
ja
fs
xor
cmp
jp
fimuls
lret
jl
or
push
or
ljmp
fcomps
icebp
ljmp
adc
call
out
outsl
je
push
pop
fldt
iret
pop
mov
mov
aas
lods
push
mov
stos
xor
insb
enter
adc
aas
aam
imul
aad
sbb
adc
mov
xchg
fwait
repnz
pop
rcrl
divl
xor
add
cmp
inc
imul
or
sub
or
pop
xchg
xlat
fnstenv
push
cmp
outsl
mov
sahf
dec
inc
or
fidivs
adc
dec
cmp
sbb
cmp
jnp
pop
xchg
cmp
pushf
outsl
rclb
sub
rcrl
addl
aad
leave
sti
aas
adc
cmpsb
jo
popa
aad
fmull
sub
test
push
mov
jp
loope
adc
dec
ret
cmpsb
shrb
in
js
jns
mov
stos
out
aam
cmp
imul
inc
mov
xchg
inc
into
in
xchg
jae
sub
sbb
pmullw
push
enter
add
xchg
xlat
jge
push
xchg
jae
and
int
insb
add
cmpsb
or
sub
pusha
pop
aas
pop
lret
rolb
sbb
cmp
xchg
lahf
jle
jnp
in
mov
loope
adc
mov
mov
xlat
sahf
pusha
and
call
xor
xchg
pop
jmp
lcall
loope
in
mov
mov
push
cltd
fwait
aaa
cmp
std
stos
sarb
loop
sub
inc
call
out
mov
cs
pop
inc
stc
adc
pusha
jno
xor
adc
mov
cli
scas
xor
mov
scas
and
ss
cmp
cmpsb
out
mov
test
xor
pop
add
or
xor
xor
adc
stos
dec
stos
add
repnz
fnstenv
or
add
push
sub
lods
push
inc
subb
push
push
adc
xchg
stos
mov
xchg
outsl
or
adc
testb
bound
sti
negl
mov
adc
sti
lods
xchg
notb
jo
lds
ja
out
pushf
push
stos
movsl
xor
mov
inc
fdivrp
mov
xchg
or
cmp
test
pop
out
mov
pop
dec
add
mov
clc
and
insl
int3
push
inc
inc
mov
notl
ret
add
lock
dec
into
and
push
out
mov
divb
fs
ret
das
pushf
sub
push
repz
add
imul
sbb
test
add
mov
push
addr16
push
idiv
movsb
test
dec
mov
data16
in
lret
mov
pusha
test
inc
test
xchg
mov
push
stc
sahf
fistpll
clc
scas
dec
outsb
das
mov
jle
rolb
lods
les
mov
inc
les
lea
xchg
test
out
or
sbb
cld
shll
lret
add
cmp
in
not
das
mov
int3
int
in
xchg
test
mov
ds
inc
adc
dec
outsb
mov
popf
iret
lea
or
ror
aaa
in
test
daa
cmpsl
xchg
inc
jne
fcoml
push
test
aam
movsl
mov
scas
fists
fistpl
xchg
dec
xchg
cmp
pop
cmp
ds
call
ret
push
daa
push
movsl
sub
push
mov
repnz
xchg
pop
cmc
lock
je
push
jbe
cwtl
sahf
cmp
mov
int3
adc
push
lods
fcomps
jo
xadd
or
sbb
loope
cli
add
dec
adc
loop
xor
popf
rorl
int3
and
into
mov
mov
testb
pushf
mov
popf
pusha
hlt
roll
incb
rcl
loop
add
or
addb
pause
pop
add
shr
inc
scas
aad
mov
inc
pop
jbe
lret
and
mov
int3
push
js
loop
inc
dec
stos
aaa
lcall
jns
mov
lret
jnp
xchg
and
cli
cltd
jecxz,pn
sub
sub
out
ja
pop
leave
dec
push
inc
arpl
cltd
scas
mov
fists
xchg
and
lret
repnz
sahf
mov
stos
dec
es
mov
aaa
mov
sbb
imul
cwtl
jge
sub
and
jle
sub
xchg
leave
xor
push
out
repz
dec
sbb
mov
fwait
imul
call
mov
inc
mov
mov
mov
pop
jge
and
cmpl
fsubr
inc
test
loopne
je
cli
sbb
or
iret
sub
scas
inc
push
sbb
mov
sub
les
inc
nop
pop
in
iret
jno
or
or
mov
xchg
sub
dec
fcompl
pop
inc
and
adc
repz
fisttps
xor
xor
and
inc
mov
test
rolb
out
mov
mov
fisubrl
mov
outsl
xor
push
sbb
lock
mov
xlat
mov
xchg
adc
insl
adc
repnz
push
or
xor
add
hlt
repnz
test
fcompl
adc
sub
stc
fldenv
jp
inc
lret
sub
nop
test
shrb
xor
fistpl
add
adc
or
fwait
sbb
pop
adc
fimuls
fcmovu
or
push
cmpsb
jge
dec
es
sbb
xor
jecxz
loop
pop
dec
and
lock
push
stos
push
in
push
sbb
inc
fisubl
rorb
loopne
add
or
xchg
int
xchg
cld
ficoms
and
sub
xor
xchg
scas
dec
sub
jnp
pop
popa
loope
dec
into
and
ja
dec
cmpsb
pop
sub
or
out
mul
sub
pop
out
jge
test
push
jl
dec
mov
mov
in
push
fwait
int
popf
push
xchg
adc
loop
mov
fnstenv
out
xlat
lods
les
test
or
int
add
fnstcw
xor
mov
mov
pop
jb
popa
cmp
dec
cmp
and
cltd
out
jmp
out
arpl
in
xchg
and
xor
mov
popa
mul
mov
inc
psadbw
in
mov
and
ret
imul
mov
dec
inc
pop
adc
add
mov
hlt
add
leave
test
stos
testl
idivl
push
add
pop
xor
cmpsb
cwtl
mov
and
add
add
shlb
mov
pop
icebp
jmp
addl
push
push
loopne
imul
and
sub
lcall
popa
ret
pushf
sar
into
sbb
cld
addr16
call
fcomps
stos
inc
lods
fnsave
pop
sub
mov
mov
fwait
push
jae
pop
dec
or
jmp
notb
push
add
insl
int
leave
sarb
jmp
add
mov
mov
sbbb
fucom
arpl
push
xorl
sbb
pushf
add
loop
lea
pop
mov
sbb
add
xchg
or
ror
dec
pop
push
lret
jmp
je
out
pop
movsl
push
ds
jb
or
bound
pop
jl
and
scas
test
mov
mov
fs
cmp
into
xor
jb
popa
mov
orl
jo
inc
cwtl
jae
mov
test
pop
push
jo
stos
mov
mov
fists
sub
push
test
stc
and
lds
fisttpll
arpl
cmp
or
jl
sarb
ja
pop
mov
adc
je
add
sbb
lea
mov
cmpl
lahf
jge
sbb
mov
pop
into
cs
scas
arpl
inc
andb
lret
pop
and
lret
in
mov
add
fisttpl
or
xchg
xor
or
jne
sub
ds
jp
xchg
cmc
push
cli
mov
aad
andl
adc
rorl
add
push
shll
fs
retw
bound
mov
ljmp
and
ret
add
fwait
cltd
lahf
add
jo
or
mov
xorl
jns
popl
icebp
in
xchg
add
jge
lahf
dec
sbb
sahf
jae
dec
imul
rclb
mov
icebp
incl
rorb
adc
mov
int
sbb
adc
dec
jge
loopne
jge
stos
push
sbb
lods
cmovle
in
push
pop
fwait
daa
mov
sbb
mov
adc
pop
dec
shrl
jno
cmp
into
outsl
test
xchg
xchg
fists
dec
negb
loop
scas
sbbb
outsb
xchg
jge
inc
xchg
sub
fbld
lcall
sub
cli
stos
cmp
lods
aas
jl
add
scas
xchg
sub
lock
sub
stos
push
aad
sub
sub
aas
push
and
sbb
cld
inc
pop
nop
icebp
and
pop
push
mov
lea
scas
jge
mov
loopne
push
push
call
jmp
fsubs
pop
sbb
mov
jge
lods
cmpsl
insl
hlt
leave
xchg
mov
xchg
lods
ret
popf
jge
std
push
jmp
xchg
sub
xor
cld
imul
xchg
xchg
not
fsubs
mov
or
jmp
mov
jo
or
imul
add
fmuls
xor
out
mov
movsb
and
insb
stc
xor
pop
in
fsts
jbe
cmp
sub
fwait
pusha
pop
ds
iret
jp
push
pushf
gs
aam
aas
jecxz
and
loope
notb
sub
das
cmp
mov
inc
stos
fstps
iret
ja
cmp
jno
cmp
data16
mov
lret
lock
jle
inc
jne
pusha
lods
dec
cmpsl
mov
xor
jmp
cmp
test
pop
cltd
imul
fidivrs
stc
xlat
mov
bound
rorl
divl
arpl
movsb
mov
pusha
clc
enter
push
fmull
in
out
sbb
ret
loop
pushf
push
push
pop
sub
fstpl
mov
jmp
inc
outsl
and
mov
scas
and
mov
imul
or
fnstcw
movsl
sbb
add
addl
outsl
sub
sub
xchg
add
pop
sbb
das
add
fdivs
mov
addb
sub
or
roll
inc
lahf
dec
pop
inc
lds
cmpsl
pop
sbb
cltd
mov
and
push
mov
ss
es
jae
xchg
jae
test
push
mov
call
lret
sub
xor
sbb
push
orl
ds
xor
decl
inc
sbb
xchg
pushf
shll
in
xchg
fistpll
xor
mov
fdivrp
testb
mov
int3
jle
int3
test
into
xchg
adc
push
or
divl
stos
pop
cmp
movsb
arpl
cmp
jmp
push
pop
mov
mov
xor
in
insl
pop
cmp
fadd
shrb
cmpsb
shll
xor
jle
aas
out
jo
dec
mov
outsb
push
mov
test
bnd
daa
sarb
insb
cmp
sar
fimuls
shll
mov
ja
bound
sti
lds
movsl
sbb
fdivs
arpl
inc
js
data16
push
and
daa
xor
jecxz
pop
xor
sub
call
mov
sub
mov
imul
jno
add
mov
scas
dec
sahf
jno
xchg
xchg
cld
ja
adc
push
pop
or
push
adc
out
sahf
and
sbb
inc
pop
loopne
xor
jecxz
stos
out
insl
adc
nop
push
mov
movsl
sar
pop
insb
leave
or
cmp
push
push
stos
rorl
sbb
jge
mov
loop
arpl
stos
inc
lds
jp
push
cmpsb
outsl
and
jge
out
fadd
sti
sub
sbb
fistpl
mov
jne
xor
add
lahf
enter
mov
mov
aas
test
gs
pop
or
inc
inc
movsb
loop
jnp
jns
lods
jbe
fiaddl
pop
or
push
or
mov
xor
or
adc
add
lret
vmulsd
adc
jae
jecxz
cmp
cmc
mov
add
mov
cltd
ret
test
pop
int
mov
outsb
and
nop
sub
mov
mov
mov
movsl
push
mov
add
inc
or
mov
repnz
fsubrl
push
call
ss
fadd
rcl
mov
lock
and
sbb
jmpw
mov
cmc
icebp
ljmp
popf
fiadds
dec
bound
push
ljmp
mov
push
and
and
xchg
mov
cmpsl
mov
gs
lret
lcall
mov
dec
dec
mov
int3
mov
dec
leave
and
sahf
jbe
and
jl
push
add
adc
lcall
call
out
lret
jbe
mov
cmc
iret
mov
push
cld
pusha
dec
mov
add
fs
mov
lods
lret
loope
mov
addr16
int
movsb
jo
icebp
add
dec
scas
mov
jle
push
and
sub
std
cli
mov
stos
or
outsb
lcall
adc
pushl
jecxz
push
movsb
adc
outsb
repnz
ds
xchg
sbb
sbb
jge
push
adc
sub
sub
xor
mov
ja
inc
cmpsl
xor
mov
pop
jnp
mov
test
addr16
mov
pusha
lcall
xchg
mov
adc
cmp
mov
dec
cmp
adc
jge
arpl
ss
mov
ljmp
add
or
bound
sub
shrb
divl
sbb
jno
mov
mov
insl
cmpsb
xor
pop
push
stc
inc
sbb
cmpsb
sbb
js
or
jns
insb
add
xchg
mov
loop
xchg
xchg
cmp
pop
jmp
cmp
aas
sbbb
pop
lahf
xchg
mov
shrb
jns
push
xor
xchg
in
addl
movsb
loop
test
sbb
cld
xor
and
lret
dec
fisttpl
rcrl
movzbl
pop
fcoms
movsb
jecxz
xor
mov
push
std
push
out
or
pop
lods
inc
mov
and
push
jg
pop
negl
mov
dec
mov
push
mov
mov
inc
dec
mov
mov
int
ja
cld
adc
lea
add
imul
sbb
xchg
mov
jo
jno
push
lods
outsl
fcom
sub
loope
sbb
clc
test
mov
arpl
xchg
inc
pop
mov
fdivrs
pop
push
pop
and
gs
in
cmp
insl
rolb
cwtl
and
xchg
and
fwait
notb
gs
outsb
mov
adc
cmp
cmp
or
jp
xchg
xchg
mov
cld
mov
fcmovnb
dec
dec
icebp
in
mov
inc
inc
ret
fisttpl
and
xlat
test
sti
aam
dec
stos
mov
or
test
cmpsl
push
xor
push
imul
jl
rol
jmp
push
mov
data16
ss
and
ret
icebp
mul
scas
jne
outsl
pop
ja
mov
jo
cmp
pushf
sbb
les
inc
in
cmpsb
imul
loope
test
pop
stc
lcall
aaa
repz
pushl
je
or
fcoms
cli
add
aaa
adc
sbb
lcall
xor
dec
pop
push
test
sub
pop
mov
int
or
add
repnz
adcb
jno
mov
dec
mov
out
lea
xchg
mov
stc
jecxz
jnp
je
hlt
sarb
cli
sti
jge
cwtl
xor
jmp
fimuls
scas
aaa
sbb
adc
add
gs
int
mov
and
sub
decl
movsb
add
movsb
leave
aaa
adc
cmp
mov
mov
aam
nop
imul
or
mov
xchg
mov
bound
insb
dec
jg
hlt
fcomps
push
fdivrs
dec
or
inc
add
test
jecxz
or
aad
add
pop
xor
cltd
les
pusha
xor
jle
fsubrs
scas
call
xchg
sub
test
push
fimull
inc
out
sub
or
mov
jns
and
and
jno
addr16
jp
cmp
jnp
mov
or
data16
mov
sub
jae
lcall
pop
cmp
jb
mov
pop
push
add
jg
mov
fadds
ret
in
les
call
out
push
test
mov
xor
pop
hlt
daa
les
int3
out
pop
push
arpl
call
sub
les
sahf
dec
and
pop
icebp
ja
rcr
cmpps
mov
bound
add
movsb
aaa
add
sub
sbbb
lock
into
mov
rcrb
nop
xchg
dec
adc
pop
fistpl
cmp
inc
or
lahf
adc
and
push
loopne
std
jge
mov
scas
xchg
fxch
cwtl
test
outsl
ljmp
out
push
cwtl
sub
lahf
jg
cmp
std
cmp
add
jge
cmpb
xor
hlt
mov
cmp
and
pop
stc
inc
arpl
cmp
ret
cmp
dec
cmp
ret
fwait
or
lcall
fldl
adc
jo
in
mov
push
inc
test
inc
jecxz
xor
std
and
ret
out
or
and
mov
add
sub
push
addb
mov
das
cmc
fisttps
out
lahf
std
loopne
push
in
rcll
repz
cmp
jl
xor
loopne
push
cmp
dec
addr16
cmp
mov
loopne
decl
out
xor
in
mov
xor
mov
mov
data16
mov
scas
nop
ja
ja
lea
ljmp
and
lock
xchg
fs
dec
jp
fabs
add
mov
lahf
ja
je
mov
test
mov
pop
in
pop
ljmp
nop
mov
or
popf
cmpl
out
ret
std
sub
dec
lods
xchg
mov
cmp
add
test
mov
dec
fldcw
xor
pop
shl
jns
sub
add
adc
inc
mov
mov
adc
mov
sbb
dec
push
rcrb
cmpb
jb
daa
cmc
outsb
sbbb
cmpl
aad
pushw
in
aam
jmp
call
imul
cmp
adc
push
xchg
add
pop
ret
xlat
jno
inc
psllq
cltd
fnstcw
cmpb
xlat
mov
xor
enter
insl
dec
orb
xorl
adc
jge
cld
movsb
push
clc
jne
pop
mulb
adc
jb
jns
fisttpl
pusha
mov
out
xchg
scas
cld
lods
push
push
sbb
sub
adc
sub
adc
dec
shll
push
movb
repnz
or
add
xlat
push
add
in
aaa
pop
xlat
xor
pop
pushf
ja
jmp
stc
popa
mov
mov
jp
dec
push
les
scas
xor
out
mov
push
xchg
and
aas
dec
nop
enter
insl
dec
cmp
xorb
shlb
adc
mov
sbb
and
in
es
and
rcrb
sub
scas
cmpsb
fs
das
lret
popf
inc
jbe
inc
jmp
ja
pushf
roll
xchg
mov
outsb
mov
lret
xor
jns
scas
repz
mov
pop
shl
xchg
aas
cwtl
loop
jae
jo
or
arpl
insb
clc
stc
inc
xlat
xchg
mov
popa
add
clc
js
fs
and
pop
stos
mov
pop
jmp
add
idivl
stc
or
cmpsb
and
in
aad
mov
cmpsl
push
fdivrs
aas
jge
sbb
mull
adc
lea
out
jmp
out
xchg
pushf
fdivl
mov
sbb
push
movsl
inc
sub
xlat
jecxz
mov
add
loopne
jnp
hlt
cmp
test
cmp
ret
mov
insb
push
mov
sbb
and
jne
mov
stos
mov
pop
mov
mov
fistpll
mov
or
lock
lcall
add
push
gs
popa
sub
ds
mov
jbe
fisubl
jp
pop
enter
add
mov
cli
cld
sbb
or
adc
inc
lds
sti
adc
ret
mov
push
and
call
lcall
and
pop
push
pop
pop
daa
rolb
imul
aam
fsubr
pop
sub
mov
dec
insb
dec
sub
cmp
cmp
movhlps
add
mov
push
aam
mov
inc
jg
mov
scas
xor
pop
sub
sbb
sbb
push
data16
cmpsb
nop
out
movsb
aad
add
push
adc
test
fnstsw
fdivs
inc
adc
orl
pop
fldt
loop
xor
arpl
repnz
sbb
push
cs
pop
cs
aas
cltd
mov
aaa
and
hlt
sbb
popa
mov
getsec
add
add
cmp
shll
aam
imul
cmc
sub
and
cmp
cmc
lcall
sub
lcall
rcrb
mov
dec
adc
xchg
mov
cmp
add
push
ret
dec
add
popf
ficomps
out
fdivrs
insl
fdivl
daa
fcomip
cmp
les
add
push
mov
lcall
cmp
out
jnp
push
mov
test
mov
pop
and
inc
pop
push
leave
mov
xor
fstps
scas
dec
adc
and
xor
pushf
push
xchg
popa
les
dec
popa
mov
pop
lret
xchg
xor
aaa
jno
inc
fnstenv
mov
cli
es
fists
addr16
test
enter
fimuls
adc
cmp
add
jmp
call
shrl
fcompl
scas
jl
ficoms
dec
xchg
std
or
mov
fsubr
push
shl
sti
insl
das
cltd
cld
adc
push
pop
clc
fiadds
gs
ss
push
xchg
idivl
mov
cmp
dec
add
insl
inc
pop
pop
loope
dec
cmpsb
pushf
hlt
mov
pop
xchg
pushf
pop
cmp
aad
lret
xor
mov
xchg
and
cmp
je
pusha
shll
jg
in
aaa
aas
dec
arpl
mul
add
sbb
inc
fs
sbb
xor
jmp
add
sub
insb
lods
pop
mov
cwtl
push
daa
mov
adc
mov
sbb
fistpll
adc
add
shlb
movsb
add
adc
jl
cmp
xchg
das
icebp
add
mov
inc
or
fnstsw
sbb
add
ljmp
xchg
das
sbb
lcall
imull
arpl
std
mov
jae
pop
lods
sahf
push
cwtl
jbe
popa
imul
inc
mov
enter
xchg
push
inc
xlat
fsubp
adc
xchg
sub
shr
pop
mov
pop
mov
cwtl
push
addr16
cmpsb
insb
xor
adc
call
leave
je
insb
incl
into
fimull
int
sbb
or
test
rolb
mov
pop
addr16
decb
shlb
es
push
mov
stos
cmp
push
push
insl
jp
mov
push
mov
addr16
cmc
inc
repz
rcll
test
mov
stos
cli
in
fldt
add
out
nop
aaa
lret
fimull
pop
inc
loopne
repz
inc
leave
jb
into
jno
mov
lret
js
mov
ja
mov
add
dec
mov
ljmp
xchg
xlat
cmp
pop
dec
or
jmp
insl
mov
call
cltd
mov
jnp
icebp
or
addr16
push
and
or
cltd
jg
inc
mov
mulb
pop
dec
lea
jge
push
inc
je
adc
xchg
jmp
mov
or
cwtl
lret
cmp
sti
outsb
repz
lret
mov
ss
stos
test
sarl
lret
cltd
inc
insb
call
dec
sub
mov
popa
std
push
sub
jae
pusha
lahf
shrw
adc
daa
test
push
mov
hlt
leave
cli
lret
test
arpl
int3
mov
and
push
or
push
jmp
push
inc
sub
sbb
dec
dec
lea
stos
je
loope
push
out
mov
xor
and
lret
jb
arpl
repnz
or
and
int3
mov
shlb
std
or
jge
stos
test
cld
jno
ds
loop
aas
mov
cltd
pop
sub
jb
mov
cmpsb
mov
xor
into
je
test
enter
dec
xchg
xchg
mov
xchg
lret
cwtl
aam
icebp
sbb
lds
lret
outsb
xor
bound
mov
inc
xchg
add
jecxz
sbb
loope
cmp
shl
adc
ss
sbb
enter
ljmp
ret
pop
sub
push
jmp
add
inc
push
jns
dec
xor
pop
dec
stos
jno
cmpsb
lret
sub
and
push
inc
lret
sbb
cltd
sbb
jl
cmp
dec
push
fnstcw
cli
push
sbb
jno
sub
sbb
out
pop
jbe
sub
or
xchg
in
add
fisubs
fsubl
test
bound
pop
inc
mov
dec
js
push
jle,pt
loope
xor
and
adc
inc
dec
mov
into
xor
out
push
dec
inc
sbb
scas
dec
lock
mov
dec
jne
mov
mov
cmpsb
icebp
mov
or
and
jge
loop
fcomps
xchg
inc
push
inc
lock
push
lret
test
jne
adc
mov
mov
in
mov
mov
adc
mov
es
imul
jb
adc
cld
test
std
xor
faddl
mov
xchg
test
inc
push
cmpsl
lods
icebp
adc
mov
sarb
out
repz
icebp
push
mov
mov
movsb
je
xchg
or
nop
pop
cmpb
pop
adc
pop
inc
int
cmp
mov
jle
movsl
hlt
nop
xchg
cmp
adc
jbe
jl
mov
jbe
stos
push
xor
add
test
sbb
imul
jno
sub
xchg
test
clc
iret
popa
mov
rcr
mov
mov
popf
inc
loope
mov
push
rorb
and
mov
push
push
sahf
es
add
sbb
inc
sub
inc
pop
jae
pushf
lods
pop
sub
or
nop
into
es
jmp
es
sub
outsl
call
mov
outsl
add
je
in
xor
push
andb
addr16
cmp
xchg
subb
push
pop
nop
jnp
add
jge
stc
push
push
fadds
cld
jbe
mov
or
loop
pop
les
dec
aaa
lods
test
movsl
leave
fwait
pushf
loopne
cwtl
xchg
inc
mov
xchg
fisubrs
lea
lock
shrl
movsl
test
mov
cmp
ds
push
fldcw
mov
cmp
shll
sahf
mov
mov
mov
ljmp
stos
mov
or
sub
pop
and
push
into
inc
sub
ljmp
dec
cmp
enter
lods
inc
sbb
cwtl
hlt
popf
inc
das
repnz
sahf
mov
shlb
fnstenv
push
mov
lods
lods
cmc
mov
shrd
add
inc
test
lods
push
mov
daa
repnz
outsb
lock
push
dec
mov
xor
inc
jl
imull
inc
mov
xchg
enter
iret
mov
leave
push
lea
add
sub
xor
daa
add
adc
dec
mov
dec
xor
dec
sub
xlat
push
sbb
mov
add
mov
mov
aaa
push
bound
bound
adc
jno
into
sub
lea
stc
cli
adc
lods
mov
sub
or
adc
push
dec
or
fbstp
in
dec
add
pop
and
xor
or
into
jp
inc
dec
das
inc
push
xor
push
push
xchg
mov
mov
dec
cmp
out
jb
mov
mov
push
aad
inc
addr16
cmpsb
in
push
xchg
mov
xor
or
xlat
xor
faddp
test
das
in
push
insb
int3
sub
xor
fists
mov
xchg
sbb
in
sbb
xor
mov
cwtl
adc
imul
mov
push
and
push
jae
mov
dec
or
outsb
aaa
cltd
fiaddl
shlb
fdivrs
cmp
in
arpl
aad
jno
mov
andb
adc
imul
xor
jge
pop
mov
jo
mov
test
fstps
mov
js
jmp
out
stos
xchg
push
or
push
push
fsts
insb
sti
dec
xorb
mov
adc
pop
and
imul
imul
lahf
aaa
int
jb
jg
inc
les
clc
rorl
jne
cmp
sub
ret
test
lea
jbe
push
and
inc
mov
leave
cmp
test
xchg
mov
and
jno
icebp
cmp
cmpsl
inc
pop
data16
mov
loopne
popa
sub
inc
std
mov
inc
andb
and
je
pop
mov
push
lahf
andl
inc
mov
pop
xchg
ljmp
stc
push
adc
xchg
loopne
xor
mov
push
enter
pop
dec
out
sbb
cwtl
enter
lds
pushf
mov
movsb
and
jg
popa
test
or
faddp
and
xchg
pop
aas
test
or
scas
and
bound
in
push
stos
test
mov
insl
idivb
fisttps
xchg
jl
lea
stc
subl
icebp
popf
inc
add
jne
cmp
dec
sqrtps
xchg
sahf
sarb
xor
push
std
aam
add
ds
xlat
push
ror
or
pop
cwtl
mov
push
xor
push
or
test
dec
imul
mov
adc
jmp
pop
popf
sti
jg
lahf
add
in
imul
cmp
mov
stc
xor
add
out
inc
dec
jne
andl
aad
hlt
mov
mov
in
xchg
lahf
xor
push
or
mov
inc
mov
push
mov
ret
in
jl
cmp
lahf
hlt
xor
sub
xchg
in
push
sub
loopne
shlb
pop
mov
inc
shlb
aas
sub
idivb
inc
adc
push
aad
and
cmpsl
mov
push
cli
cmpsl
mov
cmc
jbe
or
imul
hlt
mov
enter
cmp
sarl
mov
jle
cwtl
fmulp
push
jns
in
mov
sbb
cmp
jno
xchg
push
in
mov
xchg
push
ljmp
orb
icebp
rcll
push
cld
cwtl
cmpsl
dec
jbe
addr16
jmp
cmp
xchg
xor
int
inc
cld
imul
dec
jge
insb
push
adc
stos
fstps
sbb
fcmovb
insl
aad
aam
mov
jmp
mov
fiaddl
cwtl
ss
adc
mov
sbb
bound
adc
lock
jmp
gs
clc
into
rcl
ret
out
push
pop
dec
insb
in
sub
es
push
inc
add
stc
adc
add
fstpt
xor
dec
mov
and
sub
sub
inc
flds
mov
add
repz
pop
pop
les
mov
push
push
popf
out
push
mov
incb
and
ret
lods
lods
mov
and
lods
mov
jne
and
mov
xor
inc
xchg
hlt
andb
adc
adc
xor
fs
mov
or
jnp
jecxz
xchg
dec
mov
out
sub
leave
xchg
ds
adc
lahf
xor
xchg
jge
outsl
aaa
adc
gs
test
and
pop
sbb
cltd
push
push
lcall
jbe
push
test
pop
testb
adc
mov
into
xchg
cmp
push
inc
enter
add
gs
fiaddl
lods
push
add
xchg
xor
fwait
jp
or
test
jns
es
rcl
push
rcr
cli
mov
clc
enter
inc
mov
sub
mov
ja
adc
mov
int3
add
push
test
ljmp
lods
cwtl
jmp
adc
daa
push
pop
inc
scas
insl
xchg
jg
and
ljmp
or
mov
clc
xchg
repz
std
push
fcomip
or
jb
imul
fwait
test
mov
jno
push
xchg
adc
outsl
mov
aad
fs
das
jmp
add
and
inc
dec
inc
loope
or
fsubr
mov
xchg
sbb
xor
xor
pop
add
pop
in
mov
cmpsl
jnp
mov
xor
repz
inc
jle
xor
push
xor
lods
dec
xor
gs
unpckhps
xor
jb
sub
mov
popa
cmp
fwait
xor
popa
xchg
aaa
pop
stos
pop
pusha
fidivrl
xchg
icebp
das
pop
loop
into
jmp
out
push
xchg
or
xlat
icebp
xor
stos
mov
mov
mov
add
lret
in
inc
sub
repz
divb
mov
mov
sbb
and
stc
adc
pop
xchg
mov
jae
sarl
mov
and
int3
orb
ds
inc
xchg
nop
ljmpw
fst
or
hlt
ss
outsl
pop
fldl
push
pop
xchg
add
out
mov
into
mov
inc
inc
xor
adcb
cmc
enter
in
lock
test
push
into
adc
testl
jecxz
jnp
jo
test
or
sbb
fiaddl
pushf
xchg
or
add
jge
or
pop
fs
in
pop
jecxz
push
mov
fsubrs
mov
loope
int3
xorl
test
movsl
sarl
enter
out
dec
and
ss
mov
icebp
xchg
inc
stos
or
pop
outsl
outsb
aad
stos
mov
pop
arpl
ss
pop
pop
or
push
cld
xchg
test
pop
in
pop
lods
lcall
mov
fucomip
xor
hlt
jecxz
sbb
dec
addr16
cwtl
mov
nop
and
shlb
jle
jb
pop
pushf
mov
mov
insl
pop
xchg
bound
mov
adc
xchg
mov
and
push
mov
dec
cmp
inc
xchg
sbb
stos
js
xchg
xchg
dec
test
cwtl
mov
lea
in
fwait
fwait
inc
xchg
enter
iret
sti
int3
and
mov
dec
xchg
cmpsl
pop
and
icebp
andl
adc
push
push
cmp
push
sub
outsb
add
xor
movsb
std
jne
or
adc
cli
test
jne
mov
sub
mov
push
cmp
xchg
outsb
and
or
mov
mov
or
xorl
lret
mov
add
flds
cmp
data16
push
cmpsl
dec
icebp
fbld
jge
jg
sub
out
xlat
xchg
add
and
inc
je
xor
push
dec
iret
jo
xchg
pushf
call
jp
and
jns
test
fisubrl
insb
jl
scas
jne
and
or
lock
xchg
dec
and
and
in
js
ds
or
stos
sbb
aam
jmp
test
rcrl
mov
or
fnstcw
bound
dec
js
cmp
jb
stos
nop
adc
in
movsl
repz
sub
lret
sub
lock
xor
scas
push
adc
add
adc
and
in
inc
imul
xchg
lcall
mov
andb
ds
or
mov
mov
add
pop
mov
cltd
push
sbb
fildll
push
repz
data16
mov
jp
cli
inc
cmp
jle
xor
in
or
out
dec
adc
jge
sbb
daa
aam
add
pop
test
popf
sbb
add
movsb
jns
aad
adcl
add
push
daa
mov
push
cltd
sub
js
std
push
out
ret
and
gs
add
push
jecxz
cmp
adc
and
cmpl
jp
stos
mov
sub
mov
fwait
imul
inc
insl
mov
mov
inc
andb
and
fdivl
push
nop
jle
xchg
mov
in
jp
xchg
xchg
and
and
inc
push
mov
aas
push
shl
jne
out
rclb
or
pop
xor
sub
inc
mov
xchg
idivl
cmp
sub
and
jmp
and
loopne
jne
das
adc
cmp
mov
dec
pop
stc
mov
adc
xor
sub
mov
cmp
clc
mov
lret
dec
orl
push
mov
jns
dec
movsb
pusha
mov
mulb
jle
and
xor
xor
sub
mov
fadds
in
jno
jecxz
movsb
sub
dec
fcompl
aaa
inc
rcrl
clc
imul
sbb
fstl
rol
cmp
mov
inc
ret
adc
sub
ds
mov
ja
outsb
mov
or
xor
xchg
out
lcall
pop
xchg
ljmp
cli
ljmp
imul
push
arpl
xlat
stos
pop
mov
lahf
mov
cmp
movsb
cltd
sub
mov
outsl
push
fsubl
mov
and
inc
ljmp
int3
xchg
push
les
movsb
fildl
into
mov
ja
fisubrl
repnz
inc
fwait
lcall
pop
or
mov
loopne
nop
jle
adc
xchg
inc
and
mov
xchg
in
movsl
add
mov
insl
int3
daa
xor
mov
push
dec
or
inc
sbb
inc
xor
imul
dec
sbb
adc
jmp
aam
ret
in
call
or
inc
jbe
loop
push
dec
xchg
out
outsb
aam
imul
out
test
adc
mov
jmp
xor
or
or
push
sbb
scas
enter
pop
rorb
inc
cmpsl
sbb
cmp
sub
push
inc
sbb
loop
adc
clc
jnp
clc
push
xor
sub
lods
mov
cmpsl
jns
into
mov
mov
lock
shll
and
sub
cwtl
ret
dec
dec
mov
aam
mov
and
cmc
out
xchg
jecxz
out
jb
push
cli
insl
or
adc
inc
push
adc
push
mov
mov
loop
mov
je
inc
mov
mov
mov
loopne
jne
in
sarl
jl
ret
inc
push
cwtl
xchg
popf
dec
xor
sub
push
arpl
cmp
add
cmp
add
jb
rclb
idiv
jnp
scas
lds
fstp
insl
dec
call
test
mov
xor
mov
icebp
pop
shll
hlt
cli
and
aas
cmp
sarb
cmp
clc
cmc
mov
aaa
dec
stos
lds
cmp
sub
push
lret
jns
or
mov
dec
xchg
and
rcrl
push
dec
insb
xor
and
inc
sub
cltd
outsb
mov
and
xchg
lds
pushf
cld
pop
js
push
das
xor
pop
sbb
lods
mov
add
into
popf
iret
push
xor
pushf
lret
pop
rcll
loope
int
fnsave
ja
pop
pop
or
ret
mov
dec
cmp
cmpl
fldl2t
movsb
inc
mov
repnz
pop
nop
dec
cmp
cmp
inc
mov
jo
mov
jg
mov
in
jbe
and
popf
mov
add
mov
mov
jecxz
jp
loop
push
sbb
lcall
cmp
pushf
mov
inc
pop
les
xchg
sahf
pop
adc
mov
fists
dec
jg
adc
jbe
or
daa
xchg
inc
lret
leave
movsb
aaa
test
cmp
shll
lea
aas
in
sbb
stos
dec
lret
mov
sarb
dec
stc
jecxz
push
xchg
cmp
movsl
lods
sar
push
pop
gs
cmc
sub
enter
xor
pop
in
rcrl
inc
int3
movsl
stos
sti
mov
pop
fmulp
hlt
add
push
sar
fiadds
mov
hlt
cwtl
clc
push
pushl
cld
inc
jmp
movsb
loope
ljmp
sub
push
dec
and
dec
outsb
movsb
fiadds
pop
movsl
rcrb
pop
sub
inc
mov
dec
xlat
jo
jl
cmp
out
sub
leave
rcll
lahf
push
mov
dec
mov
outsb
inc
push
icebp
jp
and
jae
jecxz
push
mov
xchg
push
mov
cmp
mov
lods
pop
dec
pop
leave
xchg
sbb
cwtl
lods
cltd
mov
mov
and
push
mov
sub
adc
sbb
mov
jo
cmp
mov
inc
cmp
cmpsl
mov
out
enter
sbb
dec
jae
and
mov
repz
ret
fisttpll
or
sarb
mov
push
dec
aaa
xchg
sub
mov
xchg
dec
clc
xchg
xchg
and
jecxz
faddl
daa
pop
outsl
outsb
xor
mov
and
pop
xchg
pop
fiaddl
dec
push
and
fidivs
ljmp
lahf
out
pop
jae
in
adc
out
push
insl
mov
insl
in
pop
xchg
sbb
decb
pop
outsl
stc
or
sbb
mov
rclb
bound
addr16
cli
pand
mov
jno
mov
mov
jmp
aas
hlt
lahf
lds
jno
xor
subl
dec
push
or
push
xchg
je
imul
imul
movsl
test
push
xor
sub
pop
mov
nop
sub
xchg
addr16
fwait
inc
lcall
in
or
fldt
mov
gs
lock
gs
stc
mov
add
mov
aas
or
decl
xchg
adc
push
adc
test
movsb
addb
xchg
lahf
enter
fnstenv
lods
jne
lret
inc
add
mov
push
sbb
iret
pushf
test
mov
arpl
dec
dec
sti
stc
jo
jle
xchg
add
mov
lret
pop
jmp
pop
int
adc
dec
inc
push
inc
cmp
sarb
inc
pop
pop
bound
ret
and
dec
ret
hlt
fcomip
inc
scas
into
movl
scas
sub
in
movsl
enter
sbb
jmp
mov
push
dec
pop
lock
pop
out
nop
pop
fadd
fisttpl
aaa
cmp
sub
push
mov
jg
negb
fs
mov
data16
xlat
nop
jp
push
cmp
xchg
ret
rcrl
mov
aas
out
aas
xor
addl
jecxz
or
or
adc
movl
xchg
call
xchg
dec
mov
loopne
sub
mov
enter
pop
mov
popa
sub
inc
xchg
sub
out
ljmp
sub
ds
fcoml
gs
mov
in
in
mov
mov
rorl
lahf
loope
pop
pop
mull
mov
push
adc
xchg
and
add
lea
xor
fdivl
pop
lcall
cld
in
adc
sub
in
or
add
rclb
in
add
push
cmp
mov
mov
cwtl
imul
lahf
adc
xchg
ret
aaa
pop
push
pop
jecxz
je
pop
mov
stos
fnsave
ljmp
fmuls
fisubs
sbb
dec
cmp
jmp
aam
dec
std
xchg
rcrl
inc
xchg
rcrl
stos
fidivrs
arpl
jno
jg
inc
pop
sbb
cli
aad
fistpl
ljmp
outsl
xchg
in
loop
lret
pop
in
cwtd
sti
stc
inc
jbe
jge
push
mov
or
mov
fsubr
mov
pop
out
dec
pop
cmp
testl
cs
shrb
test
mov
movsb
enter
push
xor
dec
scas
xor
lret
jecxz
notb
aas
pop
in
sbb
out
gs
push
push
inc
xchg
sub
loop
outsl
adc
jmp
out
jb
xor
jne
and
cli
les
dec
inc
outsl
push
mov
mov
jne
int3
icebp
mov
jp
jne
inc
fnstcw
jbe
repnz
mov
mov
push
sbb
idiv
jno
test
sbb
mov
push
filds
cltd
push
mov
outsl
ljmp
add
mov
inc
dec
xorb
mov
out
mov
adcb
mov
lcall
imul
outsb
jle
movsb
stc
mov
lret
add
loope
pop
push
mov
clc
jmp
push
fcompl
cld
mov
ss
push
jne
lods
pop
cli
mov
mov
cmpsb
xor
ds
stos
xor
dec
add
fnsave
ljmp
or
loope
bound
and
sbb
sbb
fwait
push
fstpt
cltd
js
add
leave
mov
dec
sub
or
add
mov
sbbb
push
cltd
stos
faddp
jbe
xchg
xor
insl
sbb
sbb
jecxz
fbld
adc
and
scas
and
mov
loop
bnd
jg
inc
notl
lcall
pop
or
add
imulb
jg
add
xchg
sahf
push
hlt
sahf
mov
jbe
fsts
out
fidivl
iret
add
xchg
scas
jmp
dec
push
call
imul
cmp
shrl
daa
cmp
popf
test
xchg
push
sbb
cmp
inc
mov
sub
xchg
add
mov
dec
dec
fwait
out
ret
arpl
xchg
addr16
sub
mov
or
in
jmp
or
test
mov
mov
xor
push
add
pop
popa
or
stc
stc
mov
jnp
ret
inc
test
jmp
in
mov
push
xor
mov
adc
out
and
repz
mov
addl
mov
inc
rol
push
inc
or
aam
call
ret
out
mov
xchg
xlat
xchg
push
push
aam
lahf
jne
mov
pop
and
xchg
dec
outsb
les
scas
outsl
cmp
arpl
lods
shl
and
mov
stos
test
ret
mov
push
jno
loope
mov
jo
mov
into
push
xchg
pop
js
sbb
cmp
imul
xchg
dec
xchg
and
scas
adc
inc
mov
fwait
or
or
repz
push
push
out
sub
stos
stos
leave
aas
add
jbe
insl
shrb
pop
ror
jg
lcall
push
daa
aas
jns
mov
ja
mov
cmp
outsl
mov
mov
cwtl
or
mov
mov
inc
cmpsl
mov
sbb
ljmp
rorl
fs
jp
push
adc
scas
les
fldcw
loopne
sbb
mov
and
pop
mov
push
repz
test
std
push
fcomps
pop
das
mov
xchg
pop
sub
dec
xchg
pushf
push
sub
std
fbstp
jo
xlat
ljmp
sbb
fisttpl
fistpll
mov
xchg
sbb
sub
imul
add
lahf
and
sbb
or
xor
push
inc
hlt
bound
pushf
mov
mov
test
adc
aam
test
frstor
iret
inc
adc
les
subl
inc
lret
or
and
pusha
or
lcall
jmp
xchg
movsb
add
adc
lret
adc
sahf
jecxz
inc
xor
lds
dec
inc
cmp
sarb
mov
lods
fcompl
sbb
mov
call
in
xchg
mov
cs
iret
push
hlt
push
stos
pushf
jo
daa
aas
sbb
fcoms
clc
mov
test
movsb
sar
xchg
mov
lock
lahf
push
fisttpl
jb
sti
out
movsb
push
mov
jnp
mov
jge
inc
sbb
mov
imul
mov
lods
nop
js
inc
mov
negb
or
mov
and
jns
shl
push
pop
dec
out
dec
xchg
cwtl
add
in
fiaddl
js
jp
out
adc
jo
fisubrl
adc
jmp
jmp
sbb
ds
push
loopne
imul
movsl
daa
mov
jns
in
int3
in
jo
out
clc
sub
mov
ret
xor
inc
push
cmp
xor
lahf
popf
hlt
inc
and
or
cmp
sbb
pop
mov
mov
test
out
in
mov
adc
cld
jecxz
and
add
inc
cmp
mov
cmp
sarl
adc
pop
aad
pop
and
cli
bound
mov
mov
or
mov
mov
dec
sti
outsb
lods
es
pop
out
mov
adc
pop
mov
mov
adc
andb
data16
dec
pop
cmc
cmp
jp
pushf
out
lret
call
out
cmpsb
mov
push
dec
cmp
outsl
adc
cmpsb
mov
cwtl
mov
dec
add
inc
cmp
cmp
mov
mov
pop
xchg
mov
lret
test
lcall
repnz
xlat
mov
jmp
incb
clc
push
sub
push
and
sub
inc
mov
cld
adc
xchg
iret
push
clc
into
xor
cmp
mov
pusha
jmp
call
inc
adc
add
adc
mov
xchg
inc
insl
sti
or
push
in
add
pushf
int3
cltd
call
pop
or
dec
jb
cmp
in
mov
ror
lds
adcl
cmpsb
jno
and
mov
inc
fwait
pop
adc
ja
mov
cltd
roll
pushf
iret
divl
inc
jmp
decb
lds
and
leave
jo
imul
std
mov
adc
sbb
outsl
and
or
mov
pop
out
in
incb
xor
nop
cmp
dec
add
sub
sub
inc
sti
inc
mov
pushf
fs
inc
cmp
mov
enter
sub
loopne
xor
mov
sarb
clc
out
mov
je
mov
mov
adc
fbld
ret
test
js
test
cmpb
xchg
addr16
sti
sbb
dec
inc
pop
xor
mov
dec
adc
test
dec
imul
fsubr
mov
scas
inc
fwait
pop
cmp
add
sbb
insl
ret
mov
mov
cmp
clc
in
clc
dec
fcompl
push
push
enter
stc
sbb
mov
add
cmpsb
xor
cmp
add
pop
adc
xor
push
jo
bound
dec
rcll
lock
or
fnstcw
sbb
add
pop
nop
or
rolb
adc
test
lcall
and
mov
loopne
pop
je
or
dec
enter
cmpsl
push
jle
ss
jp
ljmpw
jne
ds
mov
fnstenv
in
dec
xchg
inc
idivl
lods
in
fildll
push
xchg
std
adc
inc
mov
pop
mov
sar
and
adc
jg
pop
imul
push
sti
mov
inc
ss
mov
jae
add
mov
cmp
jle
stos
ja
pushfw
adc
mov
mov
icebp
data16
cmpsb
orb
jge
mov
scas
push
movsl
xlat
shl
pop
shrb
dec
dec
scas
lret
gs
mov
pop
mov
std
dec
or
es
pop
pushf
push
or
enter
adc
add
insb
lret
addb
cmp
js
xchg
filds
jb
gs
and
int3
lea
dec
inc
fdivr
push
cmp
or
sub
xor
fsubl
es
sub
sti
out
xchg
js
call
jne
mov
push
divb
movb
pop
inc
jl
xchg
mov
cmp
sbb
jl
fs
movsb
adc
in
aaa
rcrb
imul
mov
rcrb
pop
dec
outsl
insl
pushf
add
jge
out
push
ret
pusha
stc
adc
dec
in
sbb
push
sub
sarb
mov
jb
mov
fwait
and
ds
adc
inc
in
pushf
push
jns
xchg
inc
test
popa
sarb
lret
stos
adc
and
adc
and
sub
outsb
mov
pop
leave
lret
cmp
adc
ss
dec
xchg
push
aaa
mov
int3
pusha
inc
jae
xchg
fcmovu
cmp
mov
insb
dec
call
out
push
sub
inc
cmp
inc
push
or
xchg
out
xor
pop
fwait
cmpsb
mov
jb
inc
add
negb
or
xor
cmp
lcall
les
xchg
test
arpl
push
daa
fadd
stc
adc
hlt
les
imul
mov
frstor
shlb
sub
or
xchg
outsb
add
aaa
sub
repz
ret
jb
cmp
adc
pop
movsl
cmpsl
sub
mov
test
std
and
into
xchg
push
stc
stos
stos
icebp
push
insl
cmp
loopne
adc
ret
out
dec
idivb
and
lcall
cmp
data16
pusha
cmp
push
stc
dec
pop
ret
and
mov
cmc
mov
pop
push
sub
rorl
cmc
enter
jb
in
and
jp
sbb
not
lret
inc
and
lret
sub
pop
add
test
movsb
aam
jbe
fcmovu
leave
xor
mov
cmpl
push
cmpsb
cmp
sbb
mov
popl
and
dec
mov
adc
inc
mov
je
sbbl
xlat
mov
mov
add
and
into
pop
cmp
daa
sub
mov
mov
add
mov
mov
data16
xor
sti
xor
mov
lret
cmpb
mov
lret
dec
outsl
decb
and
push
adc
int
xchg
out
or
mov
repz
mov
mov
mov
cmp
push
jno
mov
dec
fisubl
cmp
mov
sbb
aas
mov
divb
pop
and
dec
je
sub
jno
bound
insb
and
fisubs
popf
dec
xor
stos
cmc
pop
testl
jl,pn
cltd
jle
adc
pushf
sub
movsl
adc
sub
enter
pop
jns
in
pop
and
insl
shll
pop
cmp
fcomps
lds
loope
mov
cli
dec
pop
and
je
cwtl
mov
pusha
pop
subb
js
cltd
inc
leave
test
push
mov
xor
sub
jge
insl
sub
inc
outsb
mov
xlat
test
and
repz
notl
ljmp
in
je
fcoml
pusha
xor
mov
jae
and
lods
aam
sahf
pop
ret
mov
mov
sub
cli
jle
push
mov
aaa
cmp
test
call
lret
cmp
cwtl
divb
mov
aaa
jnp
ret
scas
inc
xor
xor
lret
xchg
xchg
adc
lods
jo
shlb
sbb
loop
int
inc
xor
mov
pop
leave
push
xor
inc
mov
je,pn
sub
stc
lret
movsb
dec
test
pusha
lock
cmpl
ljmp
scas
aas
hlt
mov
jae
cmp
cmp
insl
pop
pop
sbb
dec
jo
cld
in
mov
cmpsl
push
xor
cltd
por
fildl
pop
push
sub
jnp
pop
jmp
jmp
test
pop
mov
aaa
jmp
pop
loop,pn
jmp
cmc
in
xor
or
sub
add
mov
dec
cmp
push
jno
sahf
add
ret
fidivl
cmp
xor
in
or
and
pop
dec
push
sti
pop
xchg
jne
inc
movsb
sub
cwtl
xor
jne
and
dec
xor
jnp
js
idiv
sbb
imul
push
mov
js
movsb
ja
idivb
int3
pushl
dec
or
sub
jl
or
mov
into
ljmp
mov
pop
scas
cmp
xor
loopne
cmp
push
xchg
sbb
sbb
mov
cltd
ljmp
int
pop
push
jne
sbb
mov
jne
nop
mov
iret
push
sbb
repnz
jae
jecxz
mov
xchg
test
mov
sbb
mov
mov
sbb
cmp
push
lret
orb
mov
xchg
scas
jb
scas
pop
loope
rdpmc
fsub
or
or
ffree
ds
push
rcll
and
add
mov
call
sub
stc
mov
push
lds
push
lea
pop
add
inc
shlb
xor
aam
inc
push
xchg
cmpsb
jmp
call
mov
xchg
dec
jne
mov
or
mov
jno
mov
cmpsb
inc
cmp
ficoml
aam
rorb
mov
aad
aam
test
loopne
push
sbb
shlb
mull
jbe
cmp
sti
inc
xchg
add
mov
lods
jmp
jmp
jae
jb
leave
adc
fwait
mov
xorb
push
or
mov
cmpsl
cmp
mov
mov
adc
inc
sbb
imulb
jp
mov
jno
test
rolb
adc
jl
mov
mov
cmpl
in
xor
sti
jb
fisttpll
sti
pop
push
inc
xor
enter
out
push
xor
adc
inc
mov
dec
rolb
cmp
inc
dec
arpl
xlat
mov
repz
adc
jne
pop
push
dec
jl
sub
sub
cltd
adc
xor
inc
pop
ret
notb
std
cmp
push
pop
dec
lcall
mov
adc
and
push
mov
aad
call
push
idivl
pop
adcb
js
lods
jecxz
call
gs
jo
lahf
mov
cmp
xchg
mov
push
pop
sbb
lcall
test
and
sbbb
and
add
faddl
push
aas
cmp
and
mov
jge
ror
inc
notb
and
sub
into
out
out
stos
int3
mov
jne
dec
mov
push
repz
dec
nop
gs
je
adc
iret
sub
test
mov
mov
cmpsl
imul
sarb
mov
test
jo
mov
and
pop
cmp
xor
and
xlat
inc
xchg
and
stc
sbb
sbb
ja
dec
mov
mov
cltd
add
xchg
into
dec
jb
xchg
jb
in
pop
fmul
cmpsb
and
cmp
adc
cmp
jmp
jle
xchg
cmp
or
cmpsl
adc
leave
rclb
lods
jae
adc
xchg
xchg
mov
scas
add
pop
push
adc
mov
loop
hlt
sti
ja
jp
mov
push
adc
push
fsubrs
stc
push
xlat
pop
pop
inc
xchg
test
dec
cld
sti
or
addr16
pop
push
imul
fnsetpm(287
clc
icebp
xor
fwait
xchg
lahf
cld
sbb
jle
dec
mov
sbb
mov
push
das
mov
cmp
fadd
pop
inc
or
jg
and
insl
mov
cmp
cmp
mov
pop
push
adc
mov
pushl
xchg
xor
pusha
mov
mov
jle
xchg
out
and
add
sub
sahf
and
push
lcall
je
sub
pop
lods
pop
cmp
out
or
aaa
clc
aas
or
mov
emms
mov
incl
inc
out
or
push
stos
int
ss
jne
ret
call
ss
xlat
cmpsl
in
adc
imulb
daa
in
bound
and
and
je
fiaddl
rclb
out
sub
jnp
jns
add
dec
mov
push
lds
inc
mov
cld
bound
cmp
xor
mov
mov
repz
rcll
xchg
push
jmp
ljmp
jecxz
inc
lea
repz
testb
adc
fwait
pop
mov
cs
push
adc
shrb
cmp
inc
test
inc
aad
jge
ss
adc
jle
mov
out
aas
rorb
cs
push
inc
test
push
outsb
fsts
pushf
out
jl
mov
push
arpl
lods
jnp
out
pop
sbb
jmp
sbb
push
leave
imul
add
jmp
push
cmp
repnz
xor
filds
movsb
mov
add
insl
std
popa
lock
sub
out
leave
push
mov
js
out
enter
xor
xchg
mov
icebp
out
adc
and
mov
cmpsb
mov
outsb
push
cmpsb
arpl
mov
and
dec
icebp
pop
jae
push
push
mov
shr
bound
sbb
fcoml
shrl
pushl
jne
jp
push
les
rcl
sbb
pop
and
jb
mov
out
loop
repnz
mov
mov
lods
cmc
sbb
lret
loopne
cwtl
jbe
inc
xchg
test
and
xchg
inc
stos
xchg
mov
pop
aad
in
out
in
lds
ret
cmp
sub
xchg
pop
cmp
mov
adc
pop
insl
sbb
mov
mov
xor
cmp
filds
insb
inc
cmp
adc
inc
cltd
cmc
jp
dec
xchg
movsb
sbb
cmc
lods
jbe
andb
and
or
pop
mov
cmp
cs
loope
dec
dec
sub
mov
inc
sub
addr16
xchg
mov
pop
mul
or
inc
cmp
lock
push
add
ljmp
dec
push
clc
stos
pushf
inc
cmp
dec
stos
daa
insb
add
ss
mov
sub
pop
ljmp
les
pop
pop
jbe
xchg
push
gs
cld
sbb
push
sbb
lcall
int
jle
addr16
adc
psllq
repnz
pop
push
mov
and
jbe
and
movsl
pop
call
push
push
out
or
sarl
dec
insb
in
lcall
mov
sub
fisttpll
xchg
addb
or
inc
inc
and
arpl
push
xchg
in
in
jmp
lahf
in
fmul
daa
adc
das
jne
sub
in
ds
mov
enter
bound
adc
in
jecxz
add
mov
push
pop
pusha
data16
cmp
adc
xchg
cld
xor
out
lds
jp
scas
cmp
inc
mov
jne
fisubs
gs
in
ret
push
out
xchg
insb
fstpl
sbb
vpunpckldq
fstp
cmp
mov
mov
cmp
bound
and
push
cmp
lret
mov
popa
frstor
fbld
outsb
lcall
out
mov
and
decb
scas
sub
or
mov
xchg
xchg
inc
pop
jns
stos
adc
test
outsl
das
mov
emms
or
or
mov
and
pop
jbe
inc
js
repz
inc
ljmp
dec
movsb
cmp
sbb
mov
lret
in
and
hlt
into
mov
out
jmp
push
mov
in
dec
xchg
cmp
lods
push
ret
scas
xor
jae
adc
out
stos
js
xor
dec
lock
lcall
pop
jge
loopne
in
pushf
mov
loope,pn
lret
sbb
or
ret
jg
mov
lods
mov
mov
ja
jae
add
pusha
xor
mov
inc
aas
jo
movsb
cmp
and
push
imul
push
iret
cwtl
mov
inc
stos
lret
sahf
je
and
bnd
ds
mov
jg
mov
adcl
dec
loope
push
xor
mov
xlat
fwait
pop
stos
jl
mov
idivb
cmp
inc
adc
dec
inc
sbb
popf
add
cmp
inc
jle
adcl
aaa
sbb
adc
mov
pop
mov
in
in
adc
add
fldenv
sbb
sbb
das
push
ljmp
and
jge
and
ja
imul
xorb
ljmp
insb
mov
imulb
inc
inc
out
cltd
cmp
aaa
and
ja
les
subl
hlt
adc
call
fnstsw
lret
ss
lea
lods
push
mov
leave
xabort
out
popa
ljmp
aaa
outsl
aam
pop
and
test
sub
ljmp
fwait
inc
imul
mov
sahf
lret
loopne
stos
cmpsb
or
rcrl
stos
mov
jecxz
cmovbe
mov
jnp
xchg
mov
iret
fistpll
in
sub
stos
rorb
jne
push
sub
stos
pop
mov
call
xchg
mov
adc
xor
jnp
movsl
mov
dec
cltd
mov
jge
push
enter
test
fdivs
inc
es
and
test
fistpll
sub
std
stos
and
push
sarl
in
testl
cld
cltd
jno
add
cmpsl
dec
sahf
mov
pop
in
or
outsb
cmpsl
lods
negl
xchg
jmp
bound
mov
jmp
lea
dec
adc
fwait
adc
mov
or
hlt
pop
js
push
adc
cs
in
adc
dec
xchg
xor
push
adcw
outsl
xchg
sbb
movsl
adc
pop
and
xchg
roll
outsl
in
outsb
xchg
sub
sbb
int3
in
xor
mov
or
hlt
aad
sub
push
movsb
xchg
sub
jbe
ljmp
out
cmp
sub
lahf
shl
dec
jnp
mov
cmp
adc
mov
lods
cld
pop
rcll
inc
insl
leave
mov
push
inc
xor
cmp
fnstcw
inc
cltd
dec
icebp
test
inc
iret
or
test
push
cmp
push
adc
loopne
fs
sbbb
sub
mov
cmpsb
popa
sbb
aaa
lret
shrl
xor
leave
and
and
or
cmp
shlb
mov
lods
and
scas
adc
jle
sahf
sti
adc
mov
add
adc
outsl
and
mov
mov
rcr
dec
inc
enter
dec
ss
jmp
adc
stc
nop
mov
in
inc
mov
mov
mov
subb
ds
inc
mov
mov
aas
stos
dec
xchg
push
pop
push
push
push
push
xchg
ds
push
mov
es
pop
movsl
mov
mov
int3
rol
mov
aam
les
mov
cmp
in
and
push
adc
pop
sub
shlb
inc
mov
lea
out
pusha
lahf
ja
pushf
pop
or
xor
pop
aaa
and
clc
and
rol
push
das
data16
stc
outsb
inc
lock
aaa
movsb
in
test
push
and
aam
ret
xchg
stc
adc
mov
push
test
or
mov
and
push
daa
sbb
in
xchg
cwtl
mov
outsb
cs
mov
fsubrp
stos
cwtl
sub
push
push
xchg
or
stc
jp
adc
clc
cs
and
insl
lods
xchg
shlb
popa
mov
adc
mov
test
or
push
and
cmpb
lret
inc
jp
xchg
cmp
push
adc
pop
fbld
mov
fildll
outsl
mov
popf
inc
jnp
add
dec
pop
xchg
ret
rcl
xor
lods
or
leave
jbe
in
mov
in
adc
xor
loop
cld
push
sub
in
test
sub
in
lds
cwtl
sbb
sarb
jge
inc
ds
daa
add
popf
dec
lods
cltd
mov
inc
xor
popa
ljmp
jne
outsl
in
mov
fisubs
loopne
cli
sub
mov
imul
xchg
inc
mov
pusha
iret
jnp
movsl
mov
xchg
lcall
and
lea
adc
into
push
popa
mov
or
ds
push
and
xlat
jno
fisubl
lods
jp
sub
pop
das
mov
ret
or
test
inc
dec
sbb
push
push
inc
iret
pop
out
ss
rolb
pop
test
daa
xchg
in
scas
mov
dec
sbb
rclb
add
in
fists
mov
mov
lods
pop
adc
xchg
mov
ror
lea
cmp
shll
sahf
jb
jb
cmpsb
inc
push
pop
mov
mov
mov
add
or
