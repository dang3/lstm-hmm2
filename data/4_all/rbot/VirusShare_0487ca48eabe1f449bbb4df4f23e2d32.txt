add
dec
sbb
xchg
ljmp
imul
mov
pop
push
sbb
mov
and
push
ret
jns
mov
mov
jmp
pop
jmp
or
data16
movsb
test
push
add
adc
hlt
rcll
cmp
adc
aam
in
and
loopne
xchg
mov
loopne
or
inc
adc
lea
mov
add
stc
pusha
imul
mov
test
mov
inc
push
adc
stos
mov
insl
sub
push
adc
pop
in
mov
adc
sar
jmp
lds
scas
sbb
imul
sub
dec
imul
inc
mov
dec
test
andl
movsl
jnp
pop
lds
insb
xlat
jns
xor
out
mul
mov
loop
mov
cld
stos
cmpsl
and
jle
inc
icebp
outsb
push
les
lock
pop
ds
rol
testb
popa
xor
loop
push
rcrl
jge
ljmp
or
in
icebp
xchg
testb
out
mov
pop
push
dec
mov
fsts
push
or
xchg
popf
pop
mov
leave
pop
and
das
fldcw
mov
pop
xor
push
mov
mov
fiadds
add
outsb
mov
mov
pop
in
mov
push
push
std
pusha
push
jl
je
push
cmp
cli
das
sbb
mov
dec
pushf
pop
ret
rorl
das
aam
arpl
push
lahf
std
loope
jne
inc
jg
sub
sub
mov
jo
js
push
sti
add
sbbb
or
aam
jnp
dec
les
inc
cwtl
mov
or
stc
dec
mov
js
lock
pop
pop
push
js
gs
loope
int3
scas
std
pop
notb
pop
jl
xchg
or
outsb
push
xor
sub
sbb
mov
sub
mov
adc
stos
rcrb
pushf
mov
jae
imulb
loop
xor
addl
fldcw
sub
loope
out
nop
mov
push
ret
mov
jne
xor
into
ja
push
xor
popf
and
mov
stos
and
fiaddl
xor
pop
xorb
sub
mov
jle
loop
test
pop
loope
xchg
jns
add
or
xchg
stc
addr16
inc
jnp
je
sub
stos
hlt
out
out
scas
je
adc
sub
xor
out
adc
and
or
xorb
mov
cmpsl
mov
or
jbe
jmp
push
rorb
and
dec
ds
fwait
mov
jo
mov
ljmp
adc
jb,pt
add
xorl
test
hlt
ljmp
stos
sub
xor
mov
sbb
daa
mov
sarl
cltd
sub
mov
test
jo
or
xor
jns
int3
iret
sbbl
insl
out
pop
aad
pop
cli
imul
xchg
pop
sbb
mov
push
pusha
xchg
in
xchg
push
mov
lret
xor
sarl
and
jmp
mov
sub
bound
rcr
mov
mov
mov
mov
sub
sub
filds
fdivs
pop
xor
fistl
jo
notl
xchg
push
sbb
test
pushf
ret
into
arpl
outsl
push
dec
jmp
je
adc
lock
lahf
int
stc
scas
mov
mov
cs
gs
repz
lods
mov
dec
or
mov
jl
dec
scas
xchg
cs
es
pusha
negl
mov
push
fmuls
ja
loop
xchg
jmp
fidivrl
mov
sbb
push
arpl
or
sub
and
andb
pushf
cmpsl
pop
lret
fldl
mov
lret
pop
popf
lcall
aas
lock
jle
mov
mov
mov
out
inc
cmp
imul
xchg
sbb
loop
xor
dec
add
inc
in
andl
cmp
andl
add
lretw
add
jbe
scas
pop
lds
add
dec
sbb
and
and
ja
jge
aaa
cmp
lahf
sbb
mov
pop
fbstp
mov
push
rcr
ss
fimull
fdivrl
and
ret
les
sbb
movsb
pushf
sbb
cmp
shlb
das
add
xchg
pop
sbb
push
sbb
mov
add
adc
pop
test
mov
pop
adc
adc
jle
adcb
mov
stos
inc
clc
stos
loope
mov
aaa
jb
mul
pop
mov
or
in
mov
add
testb
idivb
push
dec
movsl
or
scas
sub
pop
nop
dec
in
fs
mov
xchg
cli
xchg
pop
mov
push
stos
xchg
daa
cmp
fists
outsl
scas
adc
and
xchg
push
cwtl
xlat
dec
out
add
mov
sbb
daa
mov
inc
mov
adc
ret
lods
xchg
or
mov
loope
data16
das
sbb
rorl
test
and
push
jmp
out
lods
fadds
pop
movsb
pop
cmp
test
cld
push
sahf
das
xchg
sbb
jns
mov
fadds
cmp
insb
shll
or
mov
std
pop
inc
loopne
icebp
stc
fsubl
cli
dec
fcmove
test
jno
shr
mov
test
hlt
js
aad
popa
add
dec
xchg
jo
add
aam
fbld
dec
push
test
sub
mov
gs
cmpb
scas
adc
mov
jmp
test
and
jae
mov
cmpsl
inc
iret
jno
fwait
add
adc
pop
mov
and
mov
daa
sbb
ret
xchg
mov
sbb
inc
dec
pop
bound
ss
pop
push
jmp
xor
imul
enter
xchg
clc
shlb
test
aaa
loop
sub
push
xor
pop
ja
mov
shl
adc
sub
lcall
daa
pop
mov
ret
mov
inc
stc
or
add
comiss
pop
mov
sti
shll
push
ja
sbb
mov
mov
add
imul
call
pop
add
jle
push
insb
cltd
je
arpl
jp
mov
pop
dec
push
sbb
rclb
lock
jle
mov
les
fisubrs
addl
pop
cmc
rolb
jbe
jne
mov
div
adcl
pushf
jp
leave
sub
fdivrl
pop
or
pusha
mov
ljmp
jecxz
inc
sbb
push
lock
loope
xor
cmc
dec
sar
stos
push
into
fsubrl
jp
cmp
pop
cmp
xchg
mov
test
repnz
imul
std
cmp
xchg
jnp
mov
mov
mov
loope
xchg
jp
mov
xchg
xor
loopne
std
fldl
addl
jge
data16
inc
dec
jbe
lods
cltd
sub
xor
adc
push
mov
sbb
je
test
cmp
cmp
out
test
jo
lret
ret
cmpsl
or
pop
jne
ljmp
popa
leave
mov
fimull
mov
jecxz
aad
xchg
sub
mov
into
icebp
fisubs
xchg
jmp
adcl
clc
leave
mov
inc
es
jecxz
out
push
inc
or
cmp
pop
inc
scas
fisubrs
mov
inc
pop
mov
in
add
mov
fst
pop
scas
shlb
repnz
xchg
mov
int
adc
rcrl
outsl
add
sahf
pop
sub
fldcw
pop
mov
dec
pop
and
int
dec
leave
and
adc
mov
add
cmp
xlat
add
sub
push
add
test
int
mov
and
xor
inc
mov
in
jno
dec
cmpsb
pop
subb
jnp
fcmovne
inc
adc
xor
fisubl
jle
hlt
push
daa
and
and
out
push
jle
out
cmpsb
jp
inc
push
dec
hlt
imul
sti
pop
outsb
into
xor
out
mov
lea
std
fisubl
cmp
cs
cltd
pop
shlb
movsb
mov
movl
divb
addr16
adc
pop
in
mov
idivl
xor
jnp
ljmp
push
jae
ret
shr
pop
subl
pop
push
aam
das
es
pop
pop
and
idivb
cwtl
cmp
int3
jnp
imul
xor
add
testl
das
lds
test
shl
cli
popa
push
aas
cmpsb
xchg
setl
or
movsb
jle
inc
mov
leave
pop
je
jns
fxch
pop
shlb
loopne
mov
insb
xor
pop
out
jno
cmp
jo
rcrl
dec
inc
sbb
loop
mov
add
ds
xchg
or
add
mov
sahf
je
pushw
fisubrl
mov
xor
mov
xchg
jno
roll
iret
mov
mov
cmp
adc
add
nop
mov
outsb
lcall
ret
jmp
xor
leave
xchg
icebp
inc
gs
cs
fnsave
enter
push
push
test
pop
xor
xor
inc
xor
sub
fwait
lahf
mov
aam
mov
jp
mov
cmp
loopne
mov
and
pop
xchg
mov
xchg
and
jb
mov
inc
ljmp
xlat
xor
fwait
popa
inc
test
mov
insl
sahf
ljmp
push
inc
std
loope
pop
mov
loope
sti
and
cld
and
sbb
mov
das
int
hlt
imul
lret
lret
push
jg
mov
push
sbb
jmp
xor
add
sbb
mov
stc
sti
ret
sbb
xor
jmp
mov
pushl
leave
ja
jo
or
sub
subb
add
fwait
and
adc
cli
pop
push
sub
push
fs
cmp
xchg
cmpsl
xchg
mov
inc
dec
repnz
movsb
and
jno
pop
sbb
lcall
jae
mov
mov
adc
xor
sub
dec
out
pusha
xor
inc
sbb
pop
test
xchg
shll
dec
pandn
xor
inc
adc
insb
popa
addl
mov
mov
lock
leave
mov
fimuls
jno
clc
insl
mov
loopne
out
sub
push
pop
decb
movsb
aad
sbb
push
and
inc
loopne
sub
in
xchg
ljmp
sub
adc
ret
cmp
mov
adc
dec
ret
dec
cld
pop
or
push
pop
fs
xchg
dec
or
mov
in
loop
inc
popf
ljmp
cvtdq2ps
subl
pop
popa
xchg
cmp
lret
loope
hlt
fwait
dec
mov
inc
cmp
js
xor
lret
or
xchg
mov
jmp
mov
test
cmp
popa
xchg
jmp
pop
subb
push
gs
cmp
clc
mov
enter
jle
in
or
cmp
cs
rcl
add
cmp
jbe
je
jecxz
pop
xor
and
jo
andl
jb
les
push
or
cmp
jns
flds
mov
sahf
or
nopl
aas
adc
mov
jmp
fnstenv
mov
mov
and
test
mov
pop
repnz
adc
sbb
popa
sbb
xchg
inc
repnz
xchg
lods
ret
cmp
mov
insb
push
pop
add
stc
or
lahf
adc
xlat
repz
sub
mov
out
xor
lods
ds
sbb
mov
sub
mov
aas
test
or
lea
xchg
adc
dec
jl
lahf
das
mov
cltd
popa
jno
push
daa
daa
sbbl
out
sub
mov
je
into
fs
js
and
sbb
mov
and
pop
adc
out
adcl
xchg
jecxz
mov
ja
stc
cmp
in
jge
mov
inc
in
jae
inc
jmp
popa
xchg
andl
js
pop
push
mov
cmp
das
popf
cmp
movsl
mov
inc
insl
mov
mov
out
cld
mov
fs
mov
cmp
jl
jl
mov
pop
shlb
jle
ss
dec
inc
sbb
xchg
adc
fisubrl
out
rorb
movsl
and
jns
mov
inc
addl
cld
ror
out
push
xchg
shll
sysexit
repz
les
jb
out
jb
filds
mov
or
test
jo
enter
stos
sahf
scas
imul
pop
hlt
jns
outsl
push
pop
sbb
mov
sbb
jge
mov
jg
scas
lock
inc
jmp
ds
pop
mov
add
mov
sahf
lret
mov
outsl
sbb
sub
loop
insb
repz
cs
push
xchg
and
in
lods
mov
pcmpeqb
xchg
adc
dec
inc
sub
fisttpll
test
fdiv
in
loop
xlat
ret
loop
sub
xor
js
or
test
dec
cli
or
fldl
push
data16
mov
call
jb
imul
adc
lds
leave
lcall
jae
or
jae
cmp
jmp
incb
push
adc
lods
jmp
inc
push
test
lods
jp
idivb
mov
pop
and
int3
pop
dec
mov
mov
stos
xchg
fnsave
jmp
imul
lods
or
jns
xchg
rclb
test
daa
xor
lret
mov
lret
imul
out
sbb
push
cltd
mov
adc
cmp
sub
pop
xchg
fnstenv
cmp
aam
in
xor
verw
push
lcall
and
or
sarb
push
shr
in
jmp
cmp
ret
out
mov
dec
fcompl
gs
add
cmpsl
pushf
iret
mov
lcall
lcall
mov
add
xchg
mov
jnp
fnstenv
int
cmp
fldl
mov
xchg
cmp
push
lahf
in
jno
fcoml
push
mov
scas
mov
add
pop
or
out
in
sub
hlt
lahf
jb
jb
ret
mov
ret
mov
push
cmp
div
aam
push
stos
ja
cmc
mov
or
mov
mov
xchg
call
push
int3
daa
pusha
lea
nop
cmpsb
cmp
idivb
hlt
lods
sub
loop
adc
mov
cmp
cmpsb
repnz
ja
mov
into
lret
out
cmp
push
push
add
jns
xor
bound
cld
lods
add
inc
test
adc
and
sbb
loopne
cli
pop
cli
adc
negl
adc
xchg
pop
stc
cmpsl
jle
clc
insb
clc
ja
std
jle
icebp
jge
push
xor
hlt
jle
mov
cltd
ficompl
arpl
out
pop
movb
dec
xchg
into
mov
push
jg
sub
dec
out
rorl
andl
inc
push
nop
push
jge
call
xor
stos
mov
and
xchg
in
pushf
test
int
aaa
xchg
aas
mov
leave
outsb
insl
or
lcall
in
xchg
popa
sub
mov
test
fistl
rolb
sbb
pop
in
sub
out
xchg
add
fdivrl
lock
dec
jl
inc
sbb
inc
repz
les
aad
dec
and
in
pop
cmpsb
imul
sbb
inc
insb
or
xchg
out
cld
xchg
push
jns
sbb
ss
xchg
fbstp
dec
testb
sub
mov
push
cmp
sbb
jb
mov
lds
sbb
mul
pusha
fimuls
and
popf
or
fldl
mov
cltd
rcrb
or
repz
jecxz
mov
pop
xchg
hlt
sbb
pop
rcr
inc
xor
xor
and
rcll
push
std
jge
jl
adc
dec
ja
dec
xchg
lds
push
cmp
stos
push
test
xorb
mov
mov
cli
mov
aad
jecxz
xchg
mov
inc
push
and
rclb
push
lds
je
in
xchg
mov
xor
sbb
gs
loope
fidivrs
lock
jae
cmp
and
arpl
cld
aam
fcoms
xor
stc
hlt
lock
lods
test
dec
xchg
mov
outsb
jmp
mov
mov
cmp
jecxz
pop
pushf
int
lea
je
shrb
and
andl
push
in
mov
lea
into
mov
push
imul
test
cmp
push
sti
js
sub
push
adc
mov
sub
je
jb,pn
aam
push
add
fstp
or
mov
sub
sarl
out
xchg
rclb
pop
add
mov
loop
aas
sub
out
inc
daa
sbb
arpl
mov
stos
rorb
pusha
xchg
jg
imul
hlt
dec
add
pop
in
mov
lds
and
dec
mov
into
mov
add
and
js
xor
mov
cli
sbb
xchg
lods
dec
xrelease
add
in
fisubrs
sbb
adc
enter
sbb
mov
dec
jmp
mov
mov
mov
adc
cld
xchg
daa
push
xchg
mov
test
andb
fistps
fs
dec
in
mov
pop
filds
push
jmp
test
mov
jns
loopne
rorb
mov
data16
cmp
jnp
mov
xlat
pushf
and
dec
out
sbb
xchg
ljmp
add
add
and
adc
mov
out
clc
mov
dec
pop
cmp
lock
cmc
sbb
or
inc
cwtl
xlat
pop
int3
jae
xchg
insb
out
mov
loop
cmp
adcl
ret
outsl
mov
lea
mov
mov
popf
in
rcrl
bound
push
sub
fsubl
rcll
push
jae
out
mov
jae
imul
cmc
mov
enter
pushl
push
out
add
xor
cmp
or
sahf
adc
shll
xor
add
mov
ret
push
cmp
xchg
and
push
call
in
mulb
cmpl
dec
inc
fs
stos
outsl
es
dec
xchg
outsl
es
push
pop
xchg
jno
data16
add
jno
inc
std
inc
fwait
cmpsl
and
pop
jmp
jp
movsb
ss
mov
mov
pop
push
in
aas
sti
jns
add
mov
daa
mov
push
movsl
in
xchg
aas
and
jne
repz
in
cmc
fcoms
imul
jns
mov
mov
addr16
mov
cmp
lahf
sub
movsl
mov
mov
fdivr
sbb
jmp
cmpsb
mov
xchg
bound
out
dec
int
imulb
fmuls
xor
shrl
hlt
mov
out
add
push
xor
clc
and
and
into
inc
mov
jp
hlt
and
push
cs
cmpsb
inc
jb
jge
cmp
jne
and
in
mov
js
cld
lods
insl
frstor
jle
xor
arpl
sub
out
mov
scas
or
orl
jecxz
pop
push
pop
loope
inc
or
fwait
repz
in
or
fwait
xchg
mov
leave
pop
push
and
test
add
andl
mov
stc
mov
mov
xchg
lods
adc
xchg
adc
jp
pop
sti
and
movsl
sahf
rcll
out
xor
cmp
aad
push
adc
or
inc
fidivl
pop
mov
inc
iret
icebp
pop
cmp
enter
jo
aam
cmpsb
jbe
in
mov
mov
jns
xchg
dec
push
mov
mov
inc
ja
pop
mov
xchg
pop
or
sti
stos
inc
pop
pop
xchg
lahf
fcomp
sbb
or
pop
sub
ret
jle
or
push
scas
jg
out
ret
test
ja
adc
into
cmp
fs
pop
sbbl
pop
test
mov
cwtl
test
scas
mov
xor
bound
pop
fidivrs
ret
mov
inc
dec
jl
or
add
sbb
add
icebp
mov
mov
popa
mov
sbb
loopne
mov
stos
cld
cmp
cwtl
xchg
enter
mov
mov
xor
jo
and
push
les
xchg
xor
pop
mov
xchg
test
ljmp
jle
repz
or
and
pusha
jno
pushf
xchg
mov
decl
decb
mov
mov
mov
mov
ds
les
jg
cmpsb
push
clc
mov
sbb
cld
push
fdivl
cwtl
sub
sbb
push
or
cmp
dec
xchg
adc
fadds
jbe
insl
popa
cs
popa
jecxz
ror
pop
sbb
or
xchg
aas
jg
push
out
orb
xor
xor
push
fstps
push
inc
insl
inc
pop
sbbl
sarb
cmp
xchg
or
repnz
out
adc
xchg
push
push
inc
sub
popf
push
test
pushf
lods
fidivl
jb
push
mov
push
bound
pop
lea
or
or
mov
mov
cltd
sahf
mov
xchg
lcall
mov
add
xchg
cs
je
fs
and
mov
xchg
je
xor
dec
data16
loope
ret
daa
sbb
xchg
pop
outsb
je
jg
scas
dec
lahf
call
pushl
test
xor
mov
stos
pop
ja
dec
data16
sub
adc
and
mov
aad
cmpsb
rolb
or
stc
rclb
rcrb
aad
dec
clc
movsb
popf
sbb
idivb
and
or
decb
inc
test
fnsave
in
test
jb
loope
ss
enterw
jge
jno
push
inc
aaa
cli
cmc
repz
pop
sub
jns
mov
ja
mov
sbb
mov
mov
scas
int
mov
jbe
es
or
iret
xchg
xor
repz
add
mov
dec
repz
insl
loop
pop
push
sarl
adc
pop
popf
add
std
and
or
aas
or
out
jae
imul
test
fcmovbe
mov
test
jecxz
and
pop
nop
lock
test
jl
xlat
push
insl
fwait
jecxz
and
in
out
dec
dec
scas
cmp
test
lcall
orl
test
outsl
mov
fmuls
add
jle
mov
adc
loopne
popf
test
cmpsl
sub
stc
stos
adc
insl
pop
jb
mov
lret
jb
loop
ss
mov
and
adc
lea
out
loope
fstl
mov
push
push
mov
dec
outsl
pop
xor
in
jae
inc
addr16
push
pop
pop
pop
dec
push
sbbb
ret
pop
xchg
addl
jg
mov
and
jnp
push
insl
mov
mov
pop
scas
jl
sub
sbb
inc
and
jno
pop
lock
cld
inc
jae
jbe
cmp
cmp
pop
inc
pop
add
movsb
or
adc
sbb
mov
mov
adc
jno
icebp
pop
jge
out
dec
aas
adc
insb
cwtl
mov
mov
mov
fs
xchg
pusha
dec
push
rcr
stos
negb
sti
stc
int3
mov
or
xor
rcrl
push
pop
shlb
jl
mov
xchg
xor
dec
in
cs
push
mov
repz
jnp
rcrb
push
mov
jle
dec
inc
shr
mov
fsubp
scas
push
pushf
push
jo
lock
jg
sub
addb
pop
cwtl
mov
xor
insb
or
dec
push
sbb
out
loop
push
and
mov
aam
cmp
repnz
shlb
inc
fcmovnb
jge
or
jmp
cmpsb
nop
je
pop
insl
push
fwait
lahf
cmp
inc
rol
jnp
daa
neg
fnstenv
and
mov
movsb
test
movsl
sbb
mov
in
cmp
pusha
loopne
popf
cld
push
outsb
les
mov
jns
mov
mov
shll
and
rcrl
mov
lcall
out
imul
into
dec
cmp
pop
orb
inc
dec
sbb
xor
or
inc
ds
scas
pushf
stos
and
adc
jge
or
sbb
push
xorl
xchg
sbb
mov
call
xor
fwait
inc
test
pushf
xor
add
sbb
inc
cltd
jne
shl
leave
test
mov
pop
aaa
cli
pop
stos
lock
or
popl
push
in
push
shrb
fldcw
into
sahf
mov
out
inc
adc
jecxz
pop
push
adc
jno
addb
add
push
shl
push
mov
adc
gs
pusha
dec
sbb
std
mov
jmp
jbe
lret
pop
in
arpl
adc
sub
pop
sbbb
xchg
jge
add
fiaddl
mov
pushf
in
sub
ret
mov
ja
mov
push
test
es
adc
push
jge
imul
and
mov
stc
mov
inc
fs
xchg
sbb
mov
out
adc
add
and
into
xlat
jb
mulps
rcrl
popf
addb
repz
sbb
cmp
or
sbb
test
dec
sub
pushf
sub
test
rol
mov
testl
mov
out
jno
sbb
sub
lret
scas
or
scas
xor
mov
bnd
fisubl
lds
comiss
or
out
pop
mov
in
push
insb
loopne
sarl
or
repnz
sub
les
xor
cmp
dec
xchg
xchg
push
sub
adc
les
icebp
pop
mov
push
inc
aam
mov
mov
xchg
mov
xchg
rorb
outsl
mov
jmp
aam
sbb
pop
in
decw
sub
les
cmp
or
sbb
dec
dec
mov
mov
xchg
test
sub
mov
fwait
inc
sbb
pop
fnstcw
sbb
xchg
xchg
xchg
xchg
xorb
arpl
test
shl
mov
mov
clc
cs
aad
push
out
inc
testl
jle
int
xor
sti
subl
cmp
push
fistpll
movl
cmp
les
insl
movsl
sbb
nop
mov
out
imul
insb
and
gs
stos
jecxz
push
les
out
pop
imull
jo
lcall
fisubs
cmp
xlat
in
ja
push
loopne
je
inc
ljmp
dec
test
cmp
inc
std
enter
push
mov
mov
xlat
sti
xchg
out
jle
jno
bound
sbb
pop
jecxz
cmp
shl
xor
fsts
ror
fstps
jae
idivb
or
or
or
cmp
loop
sub
decl
inc
gs
out
arpl
shll
pushf
sbb
dec
pushf
cli
jbe
push
ficomps
mov
or
jge
fs
jl
add
cmp
inc
xor
frstor
ret
adc
adc
mov
addr16
adc
mov
pop
mov
ds
lods
adc
cli
mov
lcall
mov
xor
pop
in
or
sbb
xor
mov
jae
pop
sti
push
mov
fstpt
scas
les
stos
sub
mov
sbb
lcall
loop
push
aas
popa
enter
xor
orl
stos
mov
xchg
nop
movlps
xchg
xor
push
scas
mov
iret
mov
inc
into
into
inc
stos
fsubrs
loope
loop
rorb
jbe
add
out
in
pop
sti
lock
rcr
sub
int3
scas
mov
gs
mov
inc
sub
xchg
jbe
xlat
push
mov
mov
push
repnz
lret
data16
ljmp
jo
mov
xchg
inc
mov
mov
or
jbe
adc
xor
das
loope
push
dec
inc
sbb
rcrl
or
int3
mov
lret
push
test
push
mov
push
clc
and
mov
pop
int
inc
out
pushf
in
xchg
popf
stc
rclb
and
les
adc
or
aam
shll
or
movntsd
imul
repnz
sub
fisubrs
xchg
mov
aaa
cmp
in
sbb
cmpsb
add
mov
sub
ret
stc
adc
lcall
hlt
mov
sbb
into
lods
cmp
movsb
les
mull
lea
addr16
loop
in
mov
cmpsl
imul
add
hlt
inc
xchg
lock
pop
popa
mov
cmpsw
dec
sbb
adc
xchg
jb
loope
sub
mov
cmp
leave
xchg
inc
cmp
lea
add
dec
pop
mov
ds
mov
rcll
loope
pop
shlb
sbb
aad
fadds
mov
mov
mov
xor
in
or
lret
hlt
mov
test
out
xchg
icebp
insl
jnp
sbb
scas
dec
fisttpll
aas
cmp
rcr
and
iret
repz
enter
mov
in
js
out
mov
mov
inc
shrb
fs
data16
je
mov
mov
icebp
push
add
in
lods
mov
sub
mov
cmp
adc
je
fcoml
ror
out
mov
data16
mov
sbb
jle,pt
jno
cvtps2pi
adc
pop
and
xor
jae
mov
mov
jns
jnp
mov
push
loopne
xlat
pop
mov
pop
movsb
jno
cmpsl
imul
js
jle
push
ljmp
jp
nop
in
mov
scas
push
sub
mov
mov
xchg
jns
cs
hlt
push
subl
fists
js
cmpsb
data16
in
sbb
jnp
jmp
inc
in
pop
loopne
ficoml
ret
mov
mov
mov
sbb
gs
out
mov
xor
dec
ja
jl
push
mulb
jne
fldt
shll
cmp
cld
ss
lret
cs
lahf
cld
jp
adc
mov
push
shrl
adc
sbb
jne
or
ja
xor
shrl
mov
cmp
in
xchg
push
repz
testl
push
lcall
test
pop
xchg
mov
jge
cmpsl
nop
scas
dec
scas
sbb
and
jae
pushf
mov
mov
fnstsw
add
ret
pop
scas
aaa
jecxz
or
movsl
insl
xlat
mov
jnp
outsl
cmp
pop
inc
or
cmpsb
stos
fwait
mov
push
lret
sbb
fbld
xchg
jg
pop
push
mov
sub
push
mov
nop
cmp
imul
mov
ja
pop
scas
lods
stos
pop
lock
mov
push
cmpsb
jo
mov
into
shll
stos
inc
lea
dec
cli
imul
std
gs
add
sysexit
or
dec
xchg
cmp
cmp
rcrl
movsb
mov
cmp
ds
push
inc
cld
cmc
xor
mov
and
mov
xchg
popf
push
xor
andb
push
jns
mov
jle
or
bnd
push
addl
adc
int3
inc
invd
sub
pop
cltd
lea
jge
fs
icebp
dec
push
fldt
ja
push
test
xlat
jg
xchg
aas
or
imulb
shlb
or
js
lock
mov
add
daa
sti
hlt
mov
sub
mov
add
sub
clc
negb
in
aaa
rcrl
cmp
xor
push
mov
pop
out
sbb
cmp
lahf
das
sub
rcll
les
mov
cwtl
movsb
arpl
mov
idivb
cmp
add
daa
or
sbb
lahf
lock
shll
add
xchg
adc
enter
xlat
stos
mov
rolb
test
mov
or
ret
lock
fucomip
push
ss
scas
imul
pushf
fwait
adc
test
mov
nop
xor
push
xchg
fdivrs
sbb
out
repnz
pop
dec
and
push
or
inc
add
jno
loopne
mov
stos
ja
js
stos
repz
ss
and
adc
mov
push
stos
mov
sarl
movsb
pop
je
cmp
xor
pop
orb
xchg
in
cmp
mov
add
les
aam
enter
mov
mov
fildll
cli
fs
in
push
cld
mov
pop
push
lcall
inc
jecxz
xchg
inc
lods
cmpsb
aam
int3
add
push
ror
in
aad
mov
bound
push
inc
stc
shlb
daa
xchg
pop
in
outsl
and
add
cld
int
sub
lret
and
dec
call
ds
aas
arpl
fcmovnu
add
jp
xlat
push
aaa
nop
push
pop
mov
ss
test
movsl
pushf
enter
sti
jecxz
ret
jbe
popf
rol
sbb
adc
movsb
pop
inc
jge
xor
je
jnp
pushf
jae
or
mov
mov
ja
out
push
ret
pushf
ret
mov
test
aam
fidivs
insl
es
add
cmp
inc
push
test
xchg
shrl
scas
into
xor
lahf
and
adc
mov
in
in
mov
cmc
inc
mov
ja
mov
das
mov
rorl
movsl
lcall
sub
aas
mov
inc
jne
and
mov
xor
or
cltd
int
cwtl
mov
inc
sarl
hlt
addr16
xchg
sbb
jae
xor
push
cli
sub
mov
add
dec
jae
in
lret
xor
xchg
inc
sbb
ljmp
dec
inc
enter
ret
inc
pusha
rol
lahf
pushf
jecxz
sub
inc
lret
push
popf
cmp
sub
jge
call
add
in
jle
fucomip
inc
xlat
aam
repnz
adc
lods
imul
xor
dec
add
inc
mov
push
test
std
iret
test
push
jnp
cmp
jae
mov
roll
cmpsb
or
int
dec
scas
ret
dec
dec
cmp
cs
out
insb
stos
adc
rcr
daa
shll
adc
push
lea
mov
cmpl
in
adc
adc
inc
mov
sti
iret
xchg
fmul
pop
lcall
cmc
pop
cmp
cmc
adc
mov
ret
stos
loope
or
mov
nop
cmp
inc
scas
inc
lcall
xor
movsb
shrb
ss
fld
xchg
xor
push
cltd
sahf
mov
nop
fld
cld
stos
mov
jecxz
inc
hlt
xchg
lret
fs
stos
mov
lret
adc
pop
out
gs
mov
mov
pop
clc
popf
stc
add
add
xlat
movsb
adc
mov
sub
mov
rcrb
cmp
mov
cwtl
sub
mov
pop
lea
sub
dec
or
and
cmp
pop
ret
pop
scas
mov
mov
imul
jb
imul
add
iret
test
xchg
xor
sbb
xchg
outsl
sbb
xchg
cmp
push
rcr
mov
jge
pusha
push
int3
ja
pop
add
fisubl
lret
cmp
mov
mov
movups
or
fwait
jmp
pop
das
stos
fmuls
out
fwait
jp
outsb
mov
or
aas
inc
cmp
add
mov
fdivl
in
fiadds
push
cmp
fisttpl
mov
addr16
shlb
lret
xchg
dec
loop
faddl
mov
cmp
aaa
pop
fnsave
jl
mov
or
gs
add
daa
sub
xchg
mov
pop
or
pop
or
mov
mov
ret
add
mov
movsb
sub
or
fucomi
je
pop
sti
mov
je
jns
js
jge
sub
rcrb
sbb
push
xchg
mov
insl
lahf
xor
push
arpl
mov
out
icebp
dec
or
mov
add
lahf
sub
fstl
inc
jecxz
lret
in
sub
cmp
cmp
cmp
xchg
push
int
cli
lret
jle
mov
aad
adc
fadds
icebp
ja
sbb
movl
adc
fwait
mov
sbb
push
jecxz
js
xor
add
lock
and
fnsave
add
jbe
xor
add
inc
mov
movsb
testl
cli
mov
and
pusha
cld
xor
out
sti
dec
xchg
loopne
add
cmp
mov
and
lds
mov
jge
mov
sbb
sub
dec
lret
ds
orl
jmp
mov
loopne
psubusb
adc
fisubl
pushf
fmulp
pop
jp
cmp
cwtl
je
or
dec
scas
shl
in
cmp
call
jmp
mov
aad
mov
cmc
andb
je
iret
push
enter
js
mov
mov
push
dec
in
cmc
hlt
cmpsb
stos
pop
jnp
cmp
lds
js
hlt
jo
popf
cwtl
sti
lock
pop
aad
push
add
or
push
and
and
adc
outsb
adc
jp
cli
push
cmpsb
xrelease
lods
cmc
inc
lock
inc
mov
inc
sbb
and
fdivp
sub
sbb
cltd
inc
pop
repz
ret
lock
xor
pop
int
mov
stos
out
pop
mul
icebp
and
rol
sub
cbtw
mov
sbb
mov
in
ret
fadd
ds
sti
fwait
in
sub
ret
cmp
pop
fstpl
mov
sub
jb
cmp
rcl
dec
stc
and
pusha
test
xchg
adc
std
sub
bound
sbb
push
pop
dec
adc
sti
dec
push
rcll
hlt
xor
dec
push
fucomp
ds
adc
xor
icebp
cmp
mov
int
xchg
jg
jl
lock
cltd
pop
mov
insl
gs
or
inc
popa
data16
adc
jg
lret
jmp
push
in
push
and
int
scas
clc
pusha
cs
mov
mov
jns
stc
and
and
jmp
ret
aam
fists
inc
in
mov
push
mov
sbb
and
xor
subb
movsb
jnp
pop
dec
lret
fistps
clc
nop
jno
sti
and
inc
shl
xor
ret
inc
ficoms
bndstx
loopne
mov
mov
push
outsb
mov
push
test
sub
sub
imul
jecxz
push
adc
dec
int3
cmpsl
scas
imul
and
insl
mov
lds
jmp
dec
mov
pop
fdivrp
add
lods
mov
rcr
mov
fidivrl
and
mov
sti
inc
xchg
dec
fstl
dec
test
dec
into
arpl
das
sbb
sub
inc
imul
jo
pushf
cmc
sbb
inc
or
test
cmpsl
aad
les
loop
inc
mov
rcll
fdivr
adc
mov
push
pop
and
mov
mov
xchg
rcll
cld
inc
push
cmp
flds
imul
loope
cwtl
push
subb
ljmp
mov
adc
mov
test
ret
xchg
sbb
pop
out
add
fwait
cmpsb
stos
ds
clc
loope
adc
mov
adc
lds
inc
sarb
enter
xchg
repz
mov
pminub
sbb
push
paddw
lock
into
faddl
sub
in
adc
js
mov
xchg
add
adc
bt
cli
imul
adc
xchg
repz
xchg
sub
sub
call
mov
lea
push
push
frstor
push
mov
mov
or
imull
xchg
mov
mov
loope
sub
lret
and
push
sbb
xchg
mov
out
scas
add
or
jnp
addl
add
xchg
ret
dec
mov
mov
push
dec
jne
jmp
and
mov
hlt
shlb
push
leave
insb
setbe
inc
nop
js
lea
adc
or
add
add
push
int
lds
push
xor
mov
insl
mov
into
jo
push
clc
jo
mov
jp
shlb
mov
subb
decl
adc
fs
push
ret
dec
je
xor
cmp
push
int
adc
test
or
out
lgs
adc
push
sbb
es
shlb
andb
add
dec
add
aaa
cmp
ljmp
pop
idivb
pop
andl
xchg
stc
sbb
mov
shlb
inc
cltd
sub
xlat
sahf
repnz
rcr
or
popf
adc
add
push
push
push
mov
push
stos
cmp
adc
dec
subl
sbb
repnz
mov
inc
jmp
ret
and
dec
arpl
lds
pop
xor
ret
daa
mov
adc
pop
push
pusha
sbb
test
sub
push
iret
add
cmpsb
incb
rol
xlat
ss
fwait
jnp
inc
movlps
subl
mov
jbe
push
cltd
out
mov
adc
outsl
iret
push
cld
jge
sub
clc
aad
bnd
jbe
xor
jb
sub
xchg
push
sub
pop
hlt
xchg
loope
scas
pop
pop
mov
dec
sbb
cld
mov
add
fs
loopne
aam
jnp
sbb
jae
pop
stos
xchg
lahf
shrl
ror
jle
sahf
jno
lret
push
arpl
inc
in
jmp
pop
ret
jnp
insb
repnz
inc
lds
lcall
fsubrs
xchg
mov
dec
mov
stos
xchg
fnsave
or
aas
ret
xchg
fisubrl
stos
and
movsb
leave
sahf
push
push
push
jle
jb
sbb
dec
mov
push
in
andb
mov
push
movsl
dec
dec
outsl
ljmp
test
fidivrs
jns
or
jo
jb
dec
mov
ret
icebp
stc
jb
les
aad
mov
out
adc
cmp
int
roll
cltd
aad
push
adc
or
xor
xor
ljmp
push
cltd
shl
xchg
mov
fdivrl
outsl
fwait
push
sti
scas
mov
dec
xchg
mulb
xchg
inc
mov
outsb
cmp
and
es
pop
push
push
jbe
loopne
xlat
pop
mov
je
jmp
xor
iret
fdiv
aam
and
push
push
mov
sub
and
stos
test
xchg
xor
cmp
or
sbbb
sub
jp
jecxz
mov
shrl
fsubrl
cmc
mov
stos
inc
cmpsb
cmp
push
dec
jae
adc
pop
jno
les
cmp
dec
loop
adc
adc
adc
clc
aam
sbb
cld
xchg
jge
pop
pop
faddl
enter
push
adc
adc
repnz
and
test
repnz
ror
mov
mov
xchg
mov
xor
sbb
jns
sbb
or
inc
jecxz
or
mull
imul
stc
enter
rorb
fwait
cli
jne
mov
dec
pop
idivl
addr16
pop
inc
loope
cltd
pop
sbb
rcrb
push
dec
cli
dec
js
adc
inc
xor
repnz
xlat
push
xchg
or
sarb
xorb
push
pop
fld
sahf
je,pn
jp
addr16
loope
mov
xor
cmpsl
out
cmp
cltd
xchg
xchg
cmp
mov
popa
or
pop
mov
xor
jp
pusha
mov
cmp
popa
ss
arpl
std
push
or
cld
arpl
fwait
sub
adc
pcmpeqd
inc
je
mov
sbb
adc
sub
incb
sub
xchg
inc
push
call
push
sarb
jnp
aad
addr16
jmp
loope
mov
mov
out
dec
scas
push
push
aam
dec
lock
push
lods
jp
aam
rclb
lret
inc
jnp
xor
and
fiadds
sbb
sub
lds
es
mov
cmp
mov
mov
mov
js
stos
ret
xor
lods
or
in
and
fs
sub
mov
xlat
pop
pop
outsl
call
popa
ficompl
sbb
push
dec
mov
jp
test
push
push
add
fwait
and
fnop
insb
outsl
lret
xchg
jg
pop
pop
and
ja
fcomip
xorl
fists
fwait
or
sarb
dec
test
fsubrl
ror
jbe
xchg
mov
inc
aas
ror
and
sbb
dec
outsb
test
sub
cmpsl
int3
loope
mov
mov
pusha
notb
ret
pop
dec
jle
xor
call
dec
ror
aaa
das
inc
loope
xor
ds
and
sbb
int3
sub
push
cld
aaa
and
inc
gs
mov
std
push
lock
cmp
push
xchg
mov
inc
dec
fs
jecxz
and
daa
or
insb
push
cld
mov
dec
mov
adc
test
jnp
aaa
lods
dec
sbbl
pop
cmpsl
mov
ret
jo
fdivrs
mov
mov
in
test
jns
add
adc
dec
jp
xor
pusha
jnp
adc
xchg
stos
adc
out
jae
test
fists
jb
mov
test
aas
adc
mov
rcll
sub
inc
and
push
stos
sbb
push
pop
call
cmp
cmpb
mov
push
mov
out
ss
pop
sbbb
bound
lock
out
sti
decl
cltd
movsl
sbb
jne
mov
mov
int
push
cmc
cmp
lret
xchg
ret
shrl
or
ret
xor
addb
pop
jmp
aam
iret
out
push
xchg
aas
mov
sub
pop
jle
adc
scas
push
xchg
arpl
cld
xchg
sbb
out
in
outsb
gs
ja
in
lcall
aas
xchg
xchg
mov
sub
leave
pop
lock
sbb
mov
adc
filds
or
pop
mov
sbb
pop
cmp
mov
or
in
jge
push
insb
inc
clc
inc
mov
int3
rolb
push
jne
cld
xor
loopne
outsb
mov
mov
mov
dec
cmc
jo
lret
cmp
imul
ret
fidivrl
jo
test
sub
sbb
push
in
insb
add
ret
xchg
xor
mov
mov
shrl
and
scas
mov
int
xchg
cmp
enter
cltd
mov
ss
mov
push
daa
xor
bnd
add
jae
scas
ret
je
lea
fs
cmp
mov
mov
pop
shlb
repnz
mov
int3
in
movsl
push
loope
data16
or
ret
adc
dec
mov
es
lea
adc
stos
or
dec
adc
out
push
sbb
out
pop
les
test
lret
xor
or
jecxz
idiv
push
jge
loopne
xor
aam
sbb
les
mov
ds
cmpsl
pop
pop
adc
mov
adc
jnp
sub
push
les
mov
cmp
push
sbb
push
scas
adc
outsb
pop
fbstp
insl
mov
or
rclb
mov
sbb
adcl
out
sbb
xchg
subb
and
xchg
adcb
lea
out
mov
mov
sbb
fs
in
and
out
or
xchg
cmc
mov
xchg
aam
push
jbe
iret
mov
mov
iret
icebp
test
imul
outsl
divl
ss
int
lea
mov
jne
push
dec
into
lods
ss
bound
jnp
dec
push
lcall
or
addr16
data16
sub
sbb
cmp
fnstsw
and
orb
js
lret
pop
mov
sbb
ret
lea
sub
ret
mov
pop
push
aad
pusha
fisubrs
jnp
pusha
shrl
fldl
fsubrl
jp
insl
js
cltd
outsl
lea
adcb
jnp
test
inc
mov
mov
inc
mov
dec
sbb
mov
cmp
popf
add
push
adc
jmp
out
inc
cs
lock
add
xchg
lret
sbb
out
shll
or
rcrb
mov
cmp
jle
je
and
xor
stos
dec
pop
lret
push
dec
lea
test
cmp
xchg
arpl
iret
adc
ss
jo
movsb
push
add
xor
test
xchg
or
xor
pop
mov
lahf
std
movsl
and
mov
in
push
adc
aam
ss
iret
xchg
jg
mov
lock
gs
sbb
mov
sbb
push
fbld
add
stc
mov
in
lcall
lea
xchg
subl
ljmp
push
push
sti
aad
inc
movsb
std
jae
imul
inc
push
loopne
pushf
clc
out
std
add
gs
scas
and
and
fcmovbe
and
push
mov
leave
or
stos
fdivrs
subb
into
daa
pop
pop
imul
fdivs
sbb
sbb
stc
sub
xlat
fsub
icebp
shrl
mov
enter
mov
jbe
bound
push
das
jl
in
mulb
inc
rcrb
aad
roll
arpl
test
decb
mov
push
out
movsl
xchg
js
jae
cmc
or
or
jnp
ret
rol
stos
pop
in
into
stos
loop
cmp
push
mov
sbb
les
inc
rclb
or
dec
and
popa
iret
ja
pushf
jnp
movsl
push
out
fwait
repz
ffreep
sbb
aas
fimuls
jb
loop
add
outsb
push
fs
pop
or
int
cmp
lahf
jno
mov
add
inc
sbb
xor
or
push
fxch
sbb
movsl
jge
in
sar
insb
loop
lret
lock
insb
divb
cmp
dec
mov
mov
imul
stc
sti
xchg
in
mov
pop
dec
push
dec
lock
xor
sbb
xor
jb
lods
std
js
in
lret
jle
mov
or
pop
dec
jge
fstpt
dec
mov
mov
ret
push
roll
cmp
cs
mov
sti
repz
stos
push
ljmp
xchg
ljmp
adc
cld
outsb
test
and
jae
sbb
push
and
inc
cmpsb
jecxz
cmp
lods
cld
roll
ja
push
inc
pop
xor
and
cmp
addb
cmpsb
cmp
adc
dec
and
adc
mov
movsl
push
fdivs
inc
enter
loope
mulb
sbb
sarl
stos
xchg
ffreep
and
out
lret
rorb
sub
adc
cld
mov
clc
andl
jg
ds
xchg
int
inc
dec
push
sbb
popf
cwtl
or
mov
adc
adc
jl
or
and
cmpb
ret
addr16
test
xchg
repz
fldt
out
or
shr
mov
push
sbb
sahf
cmpsl
or
mov
dec
pop
clc
sbb
cmp
push
mov
orl
icebp
xor
mov
sub
lfs
dec
imul
xchg
push
adc
xor
jns
xchg
in
cltd
sub
in
mov
and
mov
and
popl
mov
mov
sub
cmp
loop
pop
jg
loope
orb
pop
das
sar
mov
add
enter
out
cmpsb
sub
loop
mov
daa
sahf
jo
add
cld
sarl
pop
sub
rol
cmp
xchg
sbb
inc
fadd
out
dec
out
mov
je
xor
add
sub
out
sub
cmp
jbe
pop
scas
inc
jmp
outsb
add
push
movl
lods
xchg
fists
push
lcall
test
mov
pop
rol
jns
or
fadd
loopne
loope
pop
xor
rclb
cmp
mov
and
push
cld
sti
sub
dec
jge
pop
aas
mov
dec
xchg
xchg
insl
faddl
push
xchg
sub
rol
mov
iret
lds
arpl
xor
cltd
pop
scas
out
dec
lret
ror
ffree
sahf
mov
xchg
insb
fisubs
cmpsl
xor
lock
pop
sub
or
cmpsl
lret
mov
or
frstor
xchg
rorl
pop
push
in
imul
adc
repnz
fisttpl
pop
and
leave
std
jo
adc
imul
add
xchg
repnz
jnp
jne
or
jg
cmp
les
dec
in
leave
mov
sub
stos
pop
jmp
rclb
imul
ret
mov
or
loope
lock
xor
rcrl
ret
hlt
xor
fsubrs
xlat
cmp
xchg
mov
stc
fistl
insb
fs
cmp
inc
sarl
adc
dec
xor
mov
push
shlb
loopne
rcr
and
mov
outsb
scas
mov
inc
ljmp
jo
jne
mov
shrb
sbb
mov
xchg
xor
inc
mov
jb
cmp
daa
pop
xor
sbb
lcall
or
into
das
add
lret
imul
push
testl
mov
ljmp
lods
fimuls
sarb
xchg
sbb
fsubp
pushf
fnstcw
cltd
popa
xor
cld
aas
xor
pop
mov
sbb
cmc
and
dec
outsl
les
pusha
cld
xchg
sbb
and
pop
lds
fcmovbe
lret
adc
mov
cli
sub
jo
add
push
add
iret
inc
out
mov
ss
adc
cmp
int3
out
cmp
dec
aad
pop
and
popa
sub
sbb
dec
aaa
idivb
pop
cli
dec
lahf
out
mov
jmp
leave
xchg
aad
add
xor
xchg
gs
in
mov
aad
xchg
push
lea
shrl
sahf
pusha
add
sbb
lock
mov
add
sbb
repnz
das
jnp
repnz
mov
mov
lahf
mov
or
inc
test
out
inc
cltd
and
outsl
adc
xlat
mov
imul
or
dec
sbb
mov
cmp
cwtl
and
and
jmp
dec
or
add
and
jo
shll
push
mov
pop
out
mov
aaa
sub
sbb
lds
add
jo
sahf
sbb
jecxz
mov
in
pop
adcb
fidivrs
dec
cmp
mov
icebp
hlt
sbb
and
add
sarb
lret
push
scas
in
ljmp
mov
lret
scas
jae
xchg
mov
test
or
cmp
das
outsb
aad
mov
xchg
push
and
and
stos
adc
xor
lret
and
ret
xor
icebp
xor
jg
add
push
and
jmp
jecxz
mov
les
in
nop
adc
push
addr16
pop
pop
mov
ret
dec
aam
pushf
mov
lods
xchg
cltd
loop
test
pop
loope
icebp
cmpl
or
outsl
nop
cs
std
stc
orl
hlt
push
xor
inc
or
or
cmpsb
icebp
into
fwait
and
out
lds
dec
and
sbb
ds
fwait
xchg
or
inc
mov
daa
pop
push
cmp
fdivrs
fsubrs
mov
pop
xor
bound
push
dec
jge
fwait
push
ss
test
insb
push
loope
gs
adc
sub
mov
inc
add
adc
mov
inc
cmpsl
add
adc
nop
call
cltd
sub
enter
mov
pop
popa
gs
rcrl
and
jl
mov
xor
cmc
int3
push
jmp
push
movsb
dec
sub
xchg
insl
int3
xor
dec
xor
push
enter
fs
adc
sbb
rclb
stos
jne
xor
movsb
insb
jg
pop
push
add
adc
mov
adc
pop
mov
lock
jg
enter
sbb
xlat
dec
cmp
cld
adc
inc
push
addr16
add
sti
jmp
mov
pop
fdivl
pop
stos
test
shlb
fwait
clc
repnz
mov
dec
push
xchg
xchg
cmpsb
cmpsb
cmp
mov
daa
jl
negb
addl
insb
mov
dec
jae
xchg
add
andl
fwait
lock
int
loope
cwtl
dec
jg
iret
jb
jg
outsb
push
or
or
shrl
xchg
dec
adc
fisubrl
mov
loopne
imulb
xchg
int3
jb
mov
xchg
shl
jbe
and
popf
imul
scas
inc
push
sti
pop
sahf
pop
inc
push
jnp
outsb
mov
fwait
rorb
arpl
mov
mov
les
enter
inc
roll
inc
jne
imul
sub
add
cmp
xor
add
out
cltd
sbb
flds
push
mov
lods
nop
dec
xor
lcall
pop
xor
test
cmp
test
sub
nop
xchg
push
pushf
xchg
mov
lahf
clc
xchg
xor
test
dec
addl
or
lods
jmp
and
jecxz
and
and
fmull
fimull
scas
push
shl
xchg
mov
xchg
ja
pop
inc
adc
push
pop
test
je
cmpsb
push
add
mov
adc
mov
imul
faddl
or
cmp
popa
dec
push
cltd
sub
hlt
daa
test
cli
push
mov
sub
mov
jg
cltd
and
cmpsb
in
imulb
sahf
adc
push
js
xor
clc
dec
fwait
pop
jle
add
mov
icebp
loopne
push
ret
push
dec
nop
hlt
push
inc
dec
and
adc
sub
cmovb
push
and
inc
sarl
test
out
int
or
or
fidivrs
das
nop
mov
cmp
sbb
adc
push
push
cld
xor
mov
inc
jmp
dec
cmpsl
das
push
enter
mov
xor
add
xor
pop
fisubrs
adc
push
fcoml
clc
xchg
leave
stos
sti
cmpsb
push
mov
lcall
xchg
xor
jae
mov
cmp
adc
sub
pop
clc
cmp
vpshuflw
repnz
ret
test
lcall
roll
cmp
jns
int3
repnz
or
xor
cmp
push
lea
jmp
lds
stos
or
imul
imul
cli
shl
cmpl
mov
repnz
push
out
aam
jg
out
inc
mov
xchg
cmp
test
and
push
test
cld
mov
cmp
push
cltd
dec
cmpb
insl
iret
out
lea
pop
cmpsl
js
cs
fcmovnb
pop
mov
rcrl
jne
incb
mov
dec
orb
jl
push
cmp
inc
pop
lods
into
or
aaa
movsl
ret
aas
aas
add
ret
popf
push
cli
jb
cmp
lds
or
arpl
pushf
jg
dec
xchg
jb
lahf
subb
stos
and
xchg
dec
cmc
repz
cmc
nop
sub
or
jmp
out
fisubs
pop
xchg
mov
dec
daa
mov
iret
mov
popf
dec
imul
nop
stos
jns
or
fisttps
cs
cmp
jle
pushf
sbbl
test
bound
push
mov
pop
mov
pop
jmp
push
call
jecxz
data16
mov
data16
test
sub
aam
mov
xchg
in
xor
insb
imul
jl
pop
jne
nop
mov
and
cwtl
ret
mov
xor
and
hlt
inc
xchg
pop
jne
cli
xor
dec
or
loop
sub
dec
push
and
out
xlat
adc
and
sub
aas
sqrtps
add
mov
daa
push
jp
mov
inc
xor
bound
cltd
sbb
movsb
repnz
pop
shrb
nop
gs
fnstsw
cwtl
add
xor
outsl
nop
jae
mov
cmp
push
aam
in
fs
xor
dec
sub
addl
xor
jae
iret
dec
xchg
out
pop
mov
inc
sbb
pop
jnp
mov
loope
sbb
in
inc
cmpsl
push
jmp
xchg
jb
cmp
and
jp
mov
sahf
mov
dec
pop
sub
test
mov
mov
adc
jmp
je
rcll
push
jae
sahf
jae
pop
mov
movsl
xchg
adc
ret
iret
mov
push
fisttpll
sbb
xchg
jbe
adc
shll
insl
or
orl
push
xor
inc
inc
addr16
out
data16
ds
pop
andb
sub
test
mov
mov
js
add
pop
incl
and
and
cmp
test
sub
mov
mov
cmp
pusha
loopne
adc
aaa
pushf
aam
dec
inc
popf
push
rolb
test
mov
test
aam
sbb
cmpl
mov
shlb
xchg
and
jae
fistps
testb
xchg
cmp
or
in
sbb
cmp
cmp
mov
pushf
inc
pop
mov
popa
adc
outsl
dec
iret
sub
inc
out
mov
mov
ds
shl
adc
popl
xchg
test
push
jns
xchg
jne
pushf
insb
add
xchg
clc
mov
arpl
jl
in
add
mov
repz
add
rolb
or
aad
sbb
leave
cltd
jecxz
add
push
cmp
xchg
xchg
sbb
lahf
loop
bound
cltd
dec
cmp
inc
rolb
imul
lret
jo
dec
dec
xor
sub
jge
dec
jl
das
jo
mov
mov
add
dec
insl
and
pop
push
imul
lcall
or
push
scas
out
pop
pop
sbb
das
aas
or
imul
movsl
sub
lock
push
addb
je
sbb
mov
xlat
in
mov
xchg
mov
sub
and
jmp
xorb
dec
add
push
lcall
pop
test
stc
pcmpeqw
inc
dec
les
in
ret
push
aaa
iret
negl
sti
scas
out
sub
xchg
xor
cltd
mov
inc
testb
outsl
aad
jmp
jl
adc
pop
jge
xchg
xchg
mov
js
insb
movsl
lcall
mov
in
mov
into
fwait
test
sahf
shlb
call
or
cwtl
or
or
dec
inc
dec
mov
cld
inc
sti
push
lret
jmp
push
repz
sub
jnp
adc
int
jl
fs
cmp
test
mov
jle
into
inc
sahf
lock
add
sub
gs
cld
mov
into
dec
insb
movsl
ficompl
fnsetpm(287
out
xlat
outsl
mov
fstps
mov
sub
or
lods
fdivrp
xor
mov
inc
mov
std
adcb
add
sbb
xchg
ret
and
fadd
jp
push
sub
pop
push
jg
stos
test
test
aam
pop
mov
cmp
loope
mov
add
fs
mulps
and
arpl
mov
out
pop
out
cmp
je
addr16
iret
in
pop
dec
js
xor
aaa
add
and
cmp
je
jbe
pop
or
pop
das
push
jmp
cmp
mov
ljmp
repz
mov
inc
in
in
cmp
mov
adcb
and
push
pusha
cld
stc
into
int3
push
push
orb
cmc
out
in
adc
pop
in
xchg
xor
push
sub
pop
aad
cs
loopne
jp
xchg
hlt
jmp
popa
mov
mov
iret
mov
push
pop
aad
fs
mov
add
fmulp
test
mov
lahf
lret
push
imul
dec
cmp
ljmp
andl
idivb
mov
mov
fistps
xchg
sahf
cmc
imul
test
mov
out
xchg
fisttpll
arpl
pop
into
in
das
jns
test
cmp
loop
insl
jle
fsubrs
sbb
movsl
mov
or
xchg
das
xlat
adc
push
sbb
insb
xchg
dec
mov
mov
add
movsl
dec
icebp
jbe
inc
adc
mov
sarb
sub
lea
ds
fidivrl
add
insl
sahf
sahf
outsl
insl
xor
adc
gs
inc
jns
lret
ljmp
mov
mov
sub
in
mov
pop
data16
pushf
mov
outsl
and
icebp
fisttpll
sub
out
add
jl
pop
pop
lret
add
sbbl
daa
mov
loopne
adc
inc
test
dec
bound
test
xor
sbb
out
sub
mov
jne
lcall
imul
out
popf
scas
add
pop
or
or
scas
std
repnz
fiaddl
lods
push
cmpsl
or
sub
xchg
mov
sbb
pop
add
aaa
pusha
bound
jle
inc
stos
inc
xchg
out
dec
imull
dec
and
sub
cmpb
and
mov
lret
jg
popf
and
fprem1
mov
int3
sti
sub
xor
imul
data16
nop
popa
dec
fisubl
pop
sbb
inc
sub
rcl
sub
push
xor
lds
in
sub
pop
movsl
mov
xchg
std
sbb
mov
mov
mov
mov
dec
in
push
lods
inc
push
inc
add
pop
xchg
aaa
in
mov
rclb
rclb
imul
add
rep
or
repnz
or
jl
iret
sbb
lret
adcb
js
pop
cmp
push
outsb
loop
xor
sbb
jp
pop
fwait
lods
imul
add
jecxz
frstor
jno
roll
push
scas
push
xchg
fsubr
je
inc
out
popa
xchg
xlat
add
test
and
jmp
push
pop
dec
mov
mov
mov
inc
pop
adc
je,pn
cmp
fninit
add
outsb
xchg
out
pop
push
subl
and
cmp
push
or
imul
aam
mov
cld
xchg
push
adc
ret
mov
jmp
pushf
push
es
add
mov
jl
loopne
dec
lea
jae
scas
xchg
sahf
lret
into
out
mov
mov
lcall
insb
cmpsl
mov
push
and
sub
cltd
adc
mov
aas
mov
daa
ljmp
xor
fwait
sbb
sbb
push
outsl
std
fwait
pusha
bnd
cmp
pop
mov
jo
pop
pop
mov
dec
inc
push
roll
jo
cmp
jmp
mov
stos
movsb
mov
inc
add
fmull
push
and
add
js
push
pop
imul
scas
adc
jo
inc
pop
jnp
outsl
cld
sub
adc
add
jno
outsb
imul
jmp
jb
cld
mov
ffree
imul
jo
lds
adc
xchg
daa
xlat
cld
jle
mov
insl
iret
sbb
gs
and
sti
pop
test
not
push
or
jp
sbb
push
push
aad
bound
andl
fisubl
push
mov
outsb
xchg
jge
adc
mov
or
int
sbb
mov
daa
xchg
ret
xchg
int3
push
push
mov
outsb
adc
rcl
ja
push
pop
in
sbb
inc
and
les
dec
mov
test
sub
or
aad
int
pop
dec
inc
das
movd
clc
ret
mov
xor
jl
cmpsb
dec
and
gs
imull
loop
imul
jle
or
lea
xchg
cwtl
push
pop
jne
pop
popa
test
mov
into
or
jne
sub
adc
inc
shll
mov
js
inc
xlat
repz
push
aaa
sbbl
pusha
push
sbb
iret
movsl
xor
xor
cs
out
mov
mov
ja
or
mov
cmp
insl
inc
mov
xchg
or
push
idiv
ja
push
popf
stc
push
mov
jbe
and
mov
add
stos
xor
lret
pushf
dec
mov
pop
imul
insl
mov
outsb
dec
imul
inc
jmp
imul
pop
sub
dec
or
adc
mov
ret
add
in
adc
push
mov
inc
popf
dec
mov
mov
sar
and
shlb
add
leave
andl
gs
sbb
jmp
xor
and
int
xchg
pop
es
in
or
sbb
imul
pop
cwtl
xchg
sar
cmpsb
xor
cld
movsl
mov
fsubp
mov
mov
mov
imul
scas
add
insl
insl
sbb
fscale
ficomps
sahf
sub
mov
nop
fcomp
cmp
mov
xchg
movb
add
inc
fwait
shr
daa
leave
adc
add
push
addr16
lcall
pop
arpl
fcmovne
inc
stos
icebp
push
loop
pop
push
pushl
fisubs
andb
into
pop
xchg
ds
sbb
mov
jb
jo
test
nop
jl
xchg
rcl
mov
js
xor
pop
push
shlb
pushf
sti
push
cmp
xor
scas
jl
sti
jg
mov
frstor
cs
addb
aaa
repnz
pop
or
adc
mov
add
mov
lret
enter
xor
pop
push
stc
test
loope
or
or
rcrl
push
mov
call
and
int
push
adc
lret
push
mov
inc
shl
ret
adc
or
shll
in
mov
pop
or
adc
xchg
push
push
mov
dec
hlt
jno
mov
jp
or
adc
cmp
arpl
ret
jge
cmp
stos
sti
in
push
mov
das
cmp
add
jmp
fnstsw
or
mov
out
push
lahf
cwtl
mov
mov
gs
mov
jbe
out
cs
sbb
rcr
or
xor
mov
enter
stos
mov
adc
fwait
xchg
in
cmpsb
pusha
mov
xor
push
mov
outsb
sub
in
push
dec
int3
in
xchg
mov
push
mov
jb
loop
xchg
lcall
xchg
std
loope
sbb
mov
mov
push
loopne
lcall
iret
out
leave
push
popa
movsb
xor
lcall
mov
cmp
sub
mov
popa
test
les
xchg
frstor
xchg
cmpsl
cs
lret
lret
dec
arpl
jp
mov
test
mov
mov
ss
cld
sub
lock
pop
inc
dec
add
mov
mov
jecxz
std
dec
ds
outsw
ret
jb
mov
adc
push
es
pop
insb
xorb
movsb
int
xor
xchg
sub
mov
mov
mov
aam
loop
fwait
sub
sbb
sbb
dec
fdivs
or
loopne
adc
cmc
dec
stos
mov
jge
or
leave
cwtl
jecxz
jno
cli
adc
ftst
jne
cmp
lret
out
loop
dec
mov
pop
repnz
sub
xchg
xchg
xchg
pop
rcl
sbb
and
in
stos
scas
insl
inc
and
aad
fimuls
repz
and
push
ljmp
dec
push
aam
rorb
stc
xor
push
cmp
icebp
mov
cmp
ficoms
pop
add
pop
sbb
push
movsl
test
aas
adc
pop
mov
bound
cli
jno
adc
ret
dec
jge
nop
lock
sub
or
cld
aas
adc
rcrl
pop
xchg
ret
test
call
repnz
xor
inc
std
scas
gs
je
jmp
xchg
mov
sub
dec
xchg
jb
clc
sub
ss
mov
mov
out
sub
cmp
or
mov
inc
imul
xchg
inc
repz
nop
ja
xor
xchg
loop
jo
jmp
xor
cmp
fcompl
adc
lea
arpl
mov
mov
mov
jb
idiv
mov
dec
mov
es
lret
mov
and
outsl
and
xorb
cmp
cmp
iret
cmp
mov
xchg
aaa
dec
enter
jp
or
dec
xchg
inc
aad
xor
shlb
push
and
mov
pushf
fwait
in
add
pop
adc
jmp
xorl
fistpl
lea
sub
je
cmpsb
xchg
cltd
in
inc
repnz
lock
mov
adc
subl
mov
stc
dec
push
sbb
dec
jmp
pop
out
ret
mov
inc
adc
ja
pop
push
nop
push
hlt
and
xchg
or
cmp
mov
jne
hlt
cmp
cmp
xor
aas
push
lods
clc
inc
mov
out
es
dec
subb
xchg
loopne
sub
ficomps
inc
das
outsb
add
mov
mov
call
pop
pusha
inc
sti
cltd
or
mov
pop
mov
cmp
call
mov
scas
mov
popf
loop
jle
dec
and
or
xchg
hlt
and
mov
mov
sbb
bound
jge
bound
hlt
cmp
popa
fwait
xchg
push
loopne
xlat
or
push
adc
dec
mov
ret
cmp
mov
ljmp
xchg
call
int3
cltd
loope
stos
adc
mov
mov
imulb
mov
push
imul
incl
arpl
adc
sub
addr16
sbb
push
xor
sub
inc
inc
jl
cmp
shrl
fisttpl
aam
aam
pop
pop
in
sub
xor
and
cld
jno
xchg
fsin
xchg
add
and
mov
adc
std
push
es
fidivs
mov
mov
out
mov
jne
push
adc
mov
call
enter
aaa
inc
mov
or
ud0
lahf
adc
push
hlt
sub
rcrl
movsb
nop
push
inc
mov
imul
push
test
scas
push
mulb
pop
leave
lock
lock
int3
mov
negb
pop
out
rcll
aaa
icebp
enter
into
lea
dec
arpl
mov
icebp
sbb
xchg
mov
dec
jmp
adc
out
mov
mov
add
mov
cmc
cmpsl
out
dec
cld
jmp
es
in
sub
aad
ret
fmull
outsl
inc
inc
call
jno
jmp
imul
test
cltd
inc
test
mov
mov
outsl
mov
sbb
aam
in
sub
dec
dec
fcmovne
das
pushf
int
iret
mov
cmc
xlat
in
push
jae
into
mov
mov
insl
xchg
xor
out
sub
in
push
scas
lcall
xor
xchg
or
test
mov
push
dec
dec
pusha
pop
shlb
cmp
mov
nop
outsb
or
inc
mov
jbe
lcall
inc
sbb
jge
mov
xor
push
lods
aam
nop
mov
sbb
mov
out
or
cmp
pop
inc
stc
pop
pop
xor
mov
into
lahf
cmpsl
add
in
cmpsb
data16
xchg
pushf
cmovle
bound
mov
sub
jle
int3
lahf
sti
mov
sbb
mov
adc
pop
push
mov
jae
lds
test
test
inc
or
push
fnsaves
ss
out
pop
push
in
sub
and
push
mov
ret
or
addr16
into
add
ljmp
sub
sub
pop
inc
in
sbbl
lret
cmp
jmp
xlat
ljmp
mov
xorl
add
mov
popf
repz
ljmp
xchg
and
jmp
adc
movsl
int
mov
and
or
lcall
push
cld
je
mov
aad
mov
addb
cmc
fisttps
mov
xchg
scas
lret
test
fs
mov
lret
xor
push
je
dec
leave
jae
repz
sbb
je
dec
jno
jmp
cmpsb
stos
sbb
call
push
or
icebp
je
lods
clc
loope
icebp
mov
inc
popf
pushf
movsb
lahf
aaa
test
fistps
sbb
andb
xacquire
xchg
mov
add
pop
mov
push
loopne
add
push
arpl
or
mov
push
leave
scas
fldenv
aaa
into
sbb
ret
adc
xchg
aas
repnz
ror
je
sbb
mov
ror
lea
iret
lods
fmuls
aas
push
mov
test
push
cmp
push
mov
xor
aaa
ficompl
pop
adc
shrb
jbe
adc
cmp
sub
scas
cs
mov
adc
mov
adc
jp
jp
in
pop
mov
cltd
fisubl
xchg
les
jecxz
dec
lret
or
std
jb
cmp
mov
xchg
lret
jno
std
inc
lret
and
jmp
outsb
test
sub
jg
mov
or
add
sub
fisubrl
insb
mov
inc
sub
out
push
dec
mov
inc
out
cmpsb
lods
jnp
and
cmp
leave
cmp
daa
shr
daa
out
movsb
jle
das
and
clc
inc
jmp
and
sbb
sub
lea
mov
xor
leave
loope
mov
mov
dec
cmc
push
and
sbb
mov
cli
andl
fdivrl
mov
stc
and
add
xor
mov
les
das
xchg
dec
push
jbe
or
dec
mov
test
lods
mov
repz
fisttpl
or
or
ljmp
xor
rcll
mov
mov
fwait
inc
mov
leave
push
cmpb
mov
out
jmp
pop
push
sub
aam
pop
sub
and
cmpsb
sahf
dec
mov
xchg
or
xchg
shl
cmp
jo
test
insl
into
lea
into
dec
loope
in
mov
bnd
mov
sub
mov
scas
iret
into
mov
ror
imull
test
mov
mov
bound
sbb
and
or
cmpsl
sbb
jmp
xor
or
loop
inc
je
cmp
rcrl
add
and
fistpll
mov
jecxz
hlt
outsb
imul
insl
in
push
jecxz
lcall
jbe
jge
icebp
sub
mov
jl
cmpsl
cmp
out
aad
mov
hlt
out
pop
cmp
xlat
dec
mov
lahf
mov
mov
fidivrs
and
loope
jbe
iret
jg
lcall
scas
xor
push
jle
stos
mov
or
das
repnz
xchg
test
loop
sbb
lock
push
fcomip
mov
ja
lods
add
es
stos
shrb
in
iret
lods
mov
mov
and
xchg
xchg
cmp
push
cmp
mov
faddp
stos
jnp
or
push
icebp
mov
andl
sbb
mov
cmp
cmp
push
or
mov
filds
outsb
cmp
cmp
cld
mov
adc
dec
cmp
leave
rorl
bound
or
sub
fnstenv
cmp
loope
mov
cltd
popa
fcmovu
out
outsl
out
sub
jnp
jns
out
inc
cmpsl
add
cld
jb
int
mov
cmc
ljmp
notl
push
dec
xchg
fdivrl
sahf
scas
rorl
fnstenv
pop
imul
iret
xchg
lret
test
inc
xor
push
ja
pop
add
mov
test
mov
add
inc
in
fdivrl
mov
leave
push
xchg
hlt
insb
push
mov
adc
cmp
adc
inc
sub
pusha
mov
mov
jecxz
xor
into
cld
shrb
xlat
ss
mov
mov
sbb
in
sti
jg
fs
xor
js
cmp
sub
cld
pop
cmp
cld
pop
mov
aam
je
inc
rolb
ret
pop
mov
or
out
std
stc
xor
adc
sub
mov
ret
popa
scas
nop
out
fidivrs
add
cmp
fldcw
lret
sub
outsl
mov
repz
pusha
rcl
lds
repnz
pop
xchg
mov
mov
or
and
push
jne
mov
sahf
or
aam
js
cltd
sub
and
int
cmp
repz
pop
mov
clc
jbe
cmp
jp
stc
jbe
mov
rcr
lcall
movsl
outsl
movsb
mov
mov
adc
jl
xchg
ror
loope
lods
inc
aas
and
pop
mov
repnz
push
pusha
subl
sarb
dec
jae
arpl
lcall
movsb
popf
jecxz
cltd
mov
insl
dec
dec
jno
mov
lret
addr16
or
xor
ljmp
sahf
insl
cld
out
insb
in
mov
test
outsb
movl
and
pop
or
enter
pop
push
add
jnp
mov
or
lods
or
mov
imul
aad
dec
xor
mov
lahf
pop
mov
inc
and
sbb
inc
movsb
shll
adc
mov
movsb
lcall
pop
into
inc
pop
xor
jae
and
adc
repz
xor
cli
and
dec
popl
push
ret
pop
ds
daa
pop
ss
adc
sbb
pushf
xor
das
mov
cmp
push
pop
cmpsb
rorb
test
pop
fwait
xchg
sarl
stos
insb
loope
cmp
in
cld
inc
mov
add
inc
dec
mov
iret
lds
add
inc
loop
fs
mov
cmp
cwtl
ja
add
lods
dec
mov
jae
adc
cmp
adcb
lahf
cmc
pop
ret
adc
add
and
pop
sub
adc
std
test
mov
pusha
adc
fiadds
cmp
dec
cli
in
daa
push
mov
fisttpl
mov
fcompl
iret
jns
cmp
push
xchg
push
pop
fdivrl
inc
hlt
jns
lcall
mov
outsb
inc
in
pop
inc
push
push
into
inc
ds
and
mov
push
les
xor
popa
adc
mov
movsl
dec
popa
dec
das
arpl
or
mov
xchg
lock
rorb
pop
ljmp
mov
repnz
xor
lods
xchg
add
jnp
aad
pushf
mov
bound
mov
or
insb
mov
mov
xchg
xchg
fisubrl
aaa
int
mov
jo
out
adc
pop
push
sub
add
ds
rol
cld
mov
and
cmpsl
ret
or
repnz
scas
cmpsb
lods
sub
jne
xor
cmp
dec
cmp
or
jl
sub
xchg
les
adc
sahf
out
xor
out
call
sti
mov
xlat
sub
mov
push
lock
sbb
cmp
inc
sbbb
xchg
pop
pop
lahf
cmpsl
stos
scas
lret
adc
adc
mov
fiadds
testl
mov
mov
pop
mov
dec
pop
jns
jg,pn
sub
ds
pop
fsubr
jno
popf
mov
jmp
rorb
xchg
inc
aaa
sub
jo
push
push
pop
movsl
xchg
push
jg
repz
xchg
hlt
push
fwait
bound
inc
gs
dec
pop
into
clc
mov
sahf
dec
cmpsb
insl
fadds
popf
out
jmp
add
stos
pop
push
std
mov
xor
jmp
and
mov
mov
ret
stc
push
add
cs
mov
pop
test
ficomps
in
repz
cmp
cmp
jb
pop
pop
pop
cmp
cmp
fsub
and
pop
out
lods
pop
jb
cmp
scas
mov
jle
mov
outsl
push
pop
or
mov
mov
push
push
shr
icebp
jp
xor
popa
jns
das
mov
dec
mov
mov
jp
movsb
test
mov
mov
fstl
mov
cld
and
mov
out
mov
loope
pop
ja
sbb
xor
mov
gs
in
sub
rcl
out
xorb
negl
add
lock
xor
push
mov
xchg
pop
sbb
pop
mov
sbb
push
mov
sti
mov
into
imul
or
or
pop
jp
icebp
pop
cmp
add
sub
outsl
adcb
xor
stos
pop
lods
inc
mulb
lds
add
mov
dec
in
sti
sub
pop
jecxz
roll
mov
out
fucomp
xchg
mov
jbe
inc
xchg
jbe
xlat
mov
dec
mov
cld
and
imul
mov
fbld
adc
hlt
sub
mov
les
das
pop
mov
mov
pop
arpl
in
fs
jmp
std
test
insl
inc
les
loope
sub
int3
loopne
pushf
dec
pop
xchg
cmp
jb
cmp
xchg
ret
loop
lea
lret
inc
adc
aad
std
and
add
push
add
dec
xor
push
imul
pop
test
jb
xor
add
jmp
mov
js
sbb
lcall
add
xchg
and
add
into
and
inc
outsb
xlat
mov
xor
aad
xchg
cld
push
and
xchg
bound
and
sahf
je
xchg
lea
or
inc
dec
xchg
and
and
fwait
jnp
int3
mov
inc
mov
ss
jg
xor
xlat
ret
cmp
xor
jno
sarb
in
or
xor
les
push
xchg
inc
sti
rorb
mov
jae
shll
push
insl
inc
inc
push
sbb
pusha
or
xchg
lods
xchg
mov
aaa
mov
mov
fs
int
out
imulb
dec
sbb
cli
call
mov
and
je
sbb
dec
and
je
popf
cmp
imul
add
aad
push
xor
pop
jg
jmp
and
push
sbb
mov
mov
sarl
jge
dec
adc
mov
test
mov
and
leave
sbb
adc
push
lcall
xchg
jo
inc
cld
movb
dec
mov
sarb
jae
call
fildl
mov
mov
mov
cld
mov
inc
cmp
notb
pop
dec
dec
test
je
mov
jp
cmp
push
pop
or
jg
mov
fs
es
sarb
dec
fbstp
shll
bound
or
xlat
pop
aad
cs
int
mov
and
adc
sbb
rorl
mov
push
sbb
sti
sbbl
aad
push
push
jns
jo
sti
loopne
push
xchg
jmp
cli
jp
aaa
jmp
cld
lods
push
js
popa
inc
shlb
jmp
jp
xchg
and
stos
push
mov
mov
test
and
fldt
push
or
ljmp
pop
cwtl
add
add
push
sbb
std
rcl
adc
cmp
pop
mov
or
jmp
jecxz
push
mov
fsubs
movsl
and
fdivl
pop
mov
cmp
jl
daa
cltd
push
jmp
sti
xor
imul
dec
add
mov
fidivl
stc
push
sbb
imul
int3
add
cmc
clc
jge
ret
cld
fists
loop
loopne
push
lock
lods
dec
inc
and
cli
push
out
enter
in
popa
pop
xchg
sbb
add
adc
in
pop
dec
js
or
mov
hlt
xchg
jnp
cmp
and
sub
jl
mov
mov
jp
enter
mov
adcb
push
add
stos
out
pop
cltd
push
loopne
jne
pop
clc
sub
mov
movsl
add
pop
or
imul
jae
xor
jge
push
and
ljmp
leave
inc
push
xor
xchg
rorb
mov
lret
pop
mov
add
test
test
stc
and
sbb
sub
rclb
pop
cs
push
dec
push
sahf
jp
and
mov
xchg
jns
movsb
ret
cli
loopne
dec
jbe
mov
lock
add
fimuls
es
jae
cli
or
or
rorb
pop
test
and
inc
jnp
cmp
rol
push
fadds
icebp
mov
cmpsb
mov
pusha
mov
rcrl
jp
xlat
jb
sahf
pop
jg
xor
sahf
cmp
in
xorb
xchg
inc
cld
pop
mov
ret
lahf
push
insb
pushf
aas
in
xchg
movsb
sahf
fcompl
pop
push
aaa
mov
jo
mov
lcall
movsb
sahf
or
rorb
loopne
dec
push
movb
pop
iret
jecxz
inc
xchg
jb
xchg
test
out
scas
fdivp
xchg
clc
sub
int3
jne
hlt
jne
or
mulb
in
das
shrl
push
cmp
sub
jle
fdivr
jae
pop
mov
xlat
jo
mov
add
shl
adc
ja
call
adc
adc
enter
jbe
jns
pusha
test
dec
push
pop
and
js
adc
mov
add
adc
push
xchg
sub
aas
sbb
lret
in
mov
out
pop
cmpsb
or
jecxz
fs
jle
inc
hlt
sbb
jp
and
sub
into
sub
push
cmp
ret
fstps
arpl
rorl
stc
out
mov
xchg
jmpw
gs
xchg
sub
fbld
addr16
movsb
or
sub
and
cmp
jno
loop
jo
outsl
fwait
or
ror
loop
icebp
imul
sbb
outsb
cmp
dec
push
jle
sahf
push
cwtl
fmul
jecxz
ss
inc
push
cs
mov
movsb
js
pop
mov
fimull
mov
mov
push
jns
mov
shll
leave
sub
add
pop
leave
pop
pop
push
and
push
mov
inc
pop
xor
test
mov
lock
cli
push
sub
jmp
lahf
aam
cld
jns
enter
or
dec
jle
out
lea
pop
lds
mov
imul
push
call
aam
int3
pop
lahf
xor
icebp
inc
jg
xor
lods
loope
adcl
jl
sarb
and
cltd
dec
sbb
xor
mov
icebp
iret
movsl
fwait
mov
out
sbb
jge
mov
int3
jb
scas
out
cmp
pusha
jl
jnp
pop
push
inc
pop
repnz
and
mov
test
xor
sub
push
fisttpll
jge
lods
cmpsb
test
sub
sti
adc
sbb
xlat
loop
adc
sarl
lret
adc
adc
in
fwait
sbb
mull
inc
mov
and
mov
mov
nop
sbbb
dec
ret
dec
sub
aam
pop
pop
sbb
adc
xor
sar
adc
sub
fisubl
sub
jmp
les
lock
imul
pop
sub
mov
out
out
nop
adc
xor
in
jne
js
call
cmpsl
sub
jge
mov
test
cwtl
jg
add
outsb
inc
or
shrl
xchg
xor
cld
popf
and
jo
mov
stc
subl
in
jg
xchg
sub
aam
push
outsl
adc
sbb
repz
ja
incl
mov
cmp
add
xor
mov
dec
and
outsb
mov
popf
mov
dec
rcrl
arpl
rcr
popf
aam
cmp
into
shrl
xor
push
pusha
or
daa
xchg
xor
fwait
dec
jmp
sub
daa
jo
inc
js
paddusw
mov
mov
pop
jb
adc
inc
jmp
pop
cmp
shl
cmp
cmp
test
lods
icebp
mov
fs
xchg
inc
arpl
jmp
icebp
jns
mov
imul
lds
fisubs
fcoml
imul
stos
mov
lods
adc
out
jae
and
sub
add
popf
frstor
xor
movb
leave
test
pop
jbe
cmp
mov
lea
ljmp
shrl
loopne
mov
jecxz
inc
jle
jbe
adc
push
jae
imul
jle
sbb
mov
iret
notl
pop
daa
sbb
mov
sbb
and
inc
test
icebp
scas
cmpsb
pop
rorl
into
cltd
cmp
add
adc
or
inc
lcall
out
les
inc
add
cmp
xchg
lret
shlb
stos
jo
sub
into
cmp
push
int
cwtl
mov
add
ja
xchg
out
ret
cmp
in
xchg
mov
fsubrp
lahf
iret
bound
pop
test
jmp
rcr
inc
or
pop
cmp
lcall
jae
clc
jmp
mov
xchg
xor
fstl
test
out
xchg
jl
test
nop
imul
mov
jnp
test
lret
pusha
fs
inc
fldenv
add
jbe
sahf
xchg
stos
xchg
inc
bound
pusha
stos
cltd
xchg
lods
mov
cmp
cmp
repz
filds
iret
jb
jae
mov
movsb
add
sti
roll
inc
pop
nop
xor
fwait
pop
add
loopne
lock
adc
dec
xchg
mov
negb
pop
xor
jae
test
lret
stc
hlt
pop
leave
enter
xor
ljmp
push
mov
lret
test
push
fdivrs
nop
mov
mov
ficoml
sti
es
rol
push
mov
call
push
in
ret
or
cvtps2pd
loop
xlat
sbb
jno
jmp
and
xlat
or
sahf
cli
add
jnp
mov
lods
les
inc
bound
jb
push
cmp
inc
fbstp
cmc
fdivrs
cltd
cld
inc
fistpll
mov
cmp
adc
inc
sbb
mov
xchg
fisttps
adc
lods
insb
frstor
jge
xchg
pop
addr16
pop
insl
das
jbe
mov
popf
ret
popf
movsl
dec
or
jno
cmc
cmpb
sbb
pop
inc
es
mov
adc
fwait
es
popa
jns
push
arpl
sub
adc
jb
aad
or
mov
jg
scas
and
popa
insl
fmulp
dec
subb
lds
mov
dec
lret
sub
ljmp
arpl
subl
fsubr
jp
mov
mov
iret
arpl
inc
jne
jnp
jg
mov
sub
xchg
int
sbb
int
cmpsb
mov
xor
in
enter
jp
in
imul
mov
cmpsl
mov
mov
adc
mov
fnsave
cld
fwait
pop
ret
pop
jge
adc
push
aaa
jmp
sbb
iret
lea
push
call
divl
pop
loopne
adc
xlat
pop
jmp
or
in
icebp
jnp
sbb
pop
sub
inc
movsb
mov
int3
sub
cmp
cmp
dec
je
lret
push
out
int
mov
arpl
pop
adc
fimull
mov
mov
sub
mov
movsl
test
mov
pop
or
ja
and
jle
mov
sub
push
xchg
divl
into
and
adc
leave
scas
or
sub
mov
stos
xchg
cmp
lods
arpl
add
ret
in
lret
popf
fmul
and
inc
push
lea
fmull
push
add
pop
pop
dec
lods
std
mov
aad
xchg
pop
dec
sti
push
adc
xchg
daa
je
movsl
mov
and
into
jge
fs
xchg
xor
inc
dec
push
int3
cmc
dec
mov
pop
mov
out
cld
test
cmpsl
sbb
negl
dec
scas
imul
dec
adc
sub
das
and
mov
or
dec
loop
push
sahf
bound
jg
adc
jbe
sub
enter
inc
xor
leave
jp
jmp
jmp
pop
in
mov
in
xchg
jnp
cld
cli
mov
mov
lods
pop
lea
jbe
jmp
inc
out
jo
jno
in
insb
push
aas
ljmp
mov
hlt
hlt
mov
lret
push
sub
pop
adc
in
jb
mov
sub
xor
dec
push
xor
mov
mov
shrl
xchg
jbe
cmp
xor
cs
shrl
pusha
mov
mov
mov
decl
imul
jo
call
stc
sub
adc
fnstsw
sub
pusha
mov
jle
adc
iret
sub
inc
and
outsl
push
inc
enter
dec
in
cli
sbb
movsl
pop
mov
xchg
pop
fwait
cld
test
daa
jnp
mov
inc
aaa
out
lods
jle
fwait
lcall
sahf
cmp
je
test
push
andb
jmp
xorl
dec
mov
jecxz
mov
xorb
pop
xchg
mov
neg
or
outsl
es
push
or
cmpsb
movsl
jecxz
inc
vhsubps
fimull
lea
push
mov
push
and
cmp
mov
inc
adc
in
push
push
push
xchg
sbb
mov
aam
int3
rcl
test
push
cmpsl
stos
clc
mov
movsb
and
push
cmp
add
adc
aas
sbb
jecxz
xor
aaa
mov
outsl
call
dec
out
mov
popa
fcomp
add
xchg
subb
xor
popa
lret
repnz
das
fstl
cwtl
adcl
pop
mov
pop
pop
mov
inc
out
mov
mov
sbb
icebp
push
cmpsb
adc
pop
cs
lea
adc
xlat
and
xchg
pop
cmp
xchg
dec
in
dec
cmpsb
and
jle
mov
dec
push
adc
cmp
lock
stos
mov
out
cmp
push
les
sub
dec
bound
inc
xorl
mov
mov
sub
cmp
jb
mov
stc
jne
mov
xchg
mov
and
loop
mov
lahf
out
pop
repnz
sub
pop
push
in
cmpsb
clc
mov
fs
dec
faddl
sti
jo
lods
cmp
mov
sbb
sbb
cli
gs
adc
pop
and
or
insb
xor
mov
lret
out
push
xchg
loopne
or
inc
xchg
jmp
mov
ret
mov
cpuid
inc
jns
adc
movsb
add
sbb
dec
lea
or
or
mov
es
mov
aas
fiaddl
ss
add
sarb
icebp
rorl
lods
les
pop
in
lods
sbb
mov
jo
leave
shlb
repnz
pop
mov
imul
scas
or
fldl
xor
idivb
xchg
std
xlat
lods
ja
jo
push
jo
cwtl
loop
adcb
stos
adc
and
jp
notl
lods
cli
je
outsb
xlat
dec
push
mov
pop
popa
mov
mov
gs
push
sbb
add
pushf
inc
cmp
fcmovnb
mov
imul
xchg
inc
xchg
dec
test
xchg
das
mov
jp
or
cmp
jno
testl
push
into
mov
and
in
in
out
shll
xor
ss
mov
scas
push
xchg
jge
pop
decb
dec
fnstenv
mov
xchg
aaa
sbb
scas
mov
adc
daa
jne
or
cwtl
cmp
test
repnz
push
icebp
mov
sbb
jne
movsl
mov
push
jg
or
push
xchg
sbb
xor
cmp
jb
aaa
ret
add
xlat
dec
pop
cmp
sbb
lret
gs
and
pop
leave
adc
fsqrt
lea
xchg
repz
lds
stc
dec
mov
jbe
mov
test
pusha
add
jnp
test
and
dec
cmp
xor
add
xchg
pop
sbb
clc
clc
push
mov
popa
or
mov
test
movsb
mov
mov
inc
push
inc
push
aam
jbe
or
sbb
scas
lods
mov
loop
ret
xor
das
xor
jo
sub
xor
jno
inc
inc
aas
ljmp
mov
insb
popa
je
es
push
xchg
sbb
inc
sub
mov
cwtl
add
xchg
pop
sahf
xchg
jbe
push
sbb
pusha
lods
sub
pop
lahf
mov
out
test
daa
sbb
jecxz
pop
and
int3
and
lahf
or
mov
inc
das
ret
mov
ljmp
sar
imul
mov
decl
jns
popa
adc
fsub
pop
push
mov
jns
mov
fcoms
push
push
imul
adc
shlb
dec
sub
mov
nop
stos
inc
xlat
or
jnp
push
clc
dec
push
cmc
lea
lock
dec
adc
fimull
cmp
lods
mov
xchg
cwtl
mov
jno
pop
and
mov
bound
cmpsb
push
ljmp
jge
or
sarb
imul
mov
out
push
push
ret
scas
mov
sahf
lea
add
leave
cltd
xchg
jmp
icebp
mov
enter
mov
rcll
frstor
inc
js
sbb
in
into
and
fs
dec
leave
cwtl
outsl
and
dec
int3
sub
xchg
ja
or
in
mov
add
scas
or
pop
xor
iret
sub
popf
add
pop
popa
mov
adc
shr
bound
xchg
pop
aas
dec
push
insl
pop
jg
xabort
or
pushf
lods
add
mov
icebp
mov
jae
or
pop
mov
into
cmpsb
mov
mov
lret
dec
mov
cmpsb
jmp
loope
lret
jmp
or
jl
movsl
jb
mov
xchg
daa
dec
and
push
jecxz
jae
mov
mov
add
inc
pop
sbb
js
outsb
push
push
sti
pop
push
fs
loope
test
mov
in
push
xlat
jo
stos
add
cs
pop
cli
stos
mov
jg
fimuls
mov
lret
sub
cmp
leave
push
repnz
sub
mov
lret
or
and
sbb
xor
cwtl
mov
xor
test
arpl
dec
lock
insl
fisubrs
mov
dec
xchg
mov
fdivl
lret
hlt
sbb
xor
pop
ja
sbb
cmp
xor
sbb
push
mov
out
sbbb
in
loopne
repnz
xchg
add
stc
jge
stos
or
jmp
popa
mov
test
ja
push
add
inc
xor
push
xchg
mov
rclb
jl
adc
mov
and
or
jp
sub
and
sub
and
pop
adc
testb
testb
scas
dec
pop
sbb
add
ja
jnp
xor
xor
out
lret
push
mov
cmp
cmc
repz
pop
sbb
mov
test
decb
adc
and
or
add
je
aam
testl
aaa
adcb
inc
int
sub
mov
xchg
xor
daa
sub
dec
or
je
cld
movsb
adc
sahf
in
shrb
xlat
test
jnp
jecxz
sub
adc
and
sar
aaa
ror
sub
add
jae
jno
loop
shrb
mov
pop
cltd
xchg
pop
xor
std
out
imul
rcll
sub
ljmp
lods
add
fdiv
popa
stc
test
sub
in
call
add
popf
test
mov
mov
bswap
int3
cmp
or
add
push
jp
fdivs
push
aam
mov
xchg
dec
in
movsl
in
jns
push
scas
mov
jecxz
xchg
sub
mov
adc
fistpl
inc
jle
inc
imul
dec
fcomi
test
sarl
adc
imul
mov
xchg
pop
inc
movsl
push
pop
repnz
xor
xor
cmp
andl
jnp
ss
mov
inc
push
dec
test
mov
scas
scas
xchg
nop
inc
push
jecxz
cltd
inc
sahf
jnp
dec
cltd
jo
jg
mov
xchg
pushf
adc
repz
sub
jne
loope
pop
imul
xor
push
mov
push
adc
and
mov
mov
xchg
or
cwtl
or
mov
rorl
jne
xchg
leave
cli
mov
jns
loope
icebp
int
ficompl
mov
test
push
xlat
add
pop
bound
mov
jecxz
or
ja
mov
int
dec
cmp
push
xor
adc
sbb
pop
gs
add
xor
lods
incl
adc
stos
mov
xor
es
mov
cli
adc
aad
xor
sbb
mov
repz
or
stos
or
orb
leave
push
jb
cwtl
xchg
xchg
sbb
inc
mov
xchg
lret
xor
outsb
fistl
addr16
fnsetpm(287
jmp
jle
jmp
loopne
adc
lret
dec
pop
cs
scas
cmp
stc
aaa
rorl
stc
sbb
push
mov
jbe
movsl
out
cmp
adc
dec
jg
cld
out
xor
outsb
jp
push
and
into
inc
fistpll
loope
mov
add
fistpll
xchg
repz
dec
or
std
rol
push
xchg
push
mov
xchg
lock
add
ret
divb
nop
adc
sub
test
outsl
push
loope
mov
sbb
call
mov
xor
jle
xchg
add
int
or
mov
test
cs
xchg
jne
and
mov
mov
ss
cs
lcall
mov
adc
dec
pusha
clc
out
out
outsl
adc
add
jns
jmp
xor
test
in
fnstenv
or
jae
xchg
stos
push
call
sub
sbb
and
test
not
iret
xchg
out
adc
push
jb
cmp
cmp
pop
into
or
iret
sti
flds
lea
and
jo
loopne
or
fnstenv
shld
mov
mov
leave
stc
and
cli
repnz
les
imul
and
pop
bound
mov
insb
adc
test
icebp
sub
mov
jbe
pop
inc
nop
and
sti
mov
call
push
xor
js
aas
or
mov
lahf
add
shrl
enter
xchg
cmpsb
dec
mov
aas
mulb
cmp
inc
cwtl
and
sub
sub
dec
xor
add
loopne
fdivl
pop
std
fbld
jg
aas
push
xor
stos
mov
pop
fists
inc
jge
push
push
mov
and
stc
subl
andl
mov
mov
mov
insl
or
aam
call
rolb
dec
push
lock
lret
push
cmp
sub
push
dec
cmpl
pop
sti
dec
shll
fldln2
sti
mov
int
int
rorb
shll
rcrl
cmovs
xchg
out
inc
aaa
movsl
cmp
xchg
mov
xchg
sub
iret
cltd
cmp
out
cs
adc
cli
push
jp
jo
inc
or
xchg
jp
sahf
pop
lret
mov
in
dec
mov
mov
and
add
mov
shl
add
cmpsl
fcmovu
andb
rorl
daa
scas
cld
dec
dec
add
mov
jbe
icebp
jmp
in
or
sub
cmp
jg
outsb
jns
inc
cmp
add
cld
add
sbb
dec
fwait
inc
or
bound
adc
sub
push
data16
and
push
lahf
and
xlat
xchg
daa
popf
mov
cmp
xor
sub
scas
dec
adc
dec
mov
leave
inc
dec
mov
rclb
cld
fs
jno
dec
pusha
je
push
dec
inc
iret
je
jnp
fisubl
les
jmp
icebp
aad
lret
stc
or
xchg
enter
mov
mov
mov
mov
leave
movsb
mov
daa
push
sbb
gs
mov
aad
add
jnp
test
mov
fcmovnb
jo
mov
into
int
cld
cmpsl
dec
jbe
sub
ficoms
rclb
push
lret
sahf
or
adc
lcall
iret
lods
push
in
fwait
dec
mov
push
add
insl
icebp
jg
adc
add
push
jno
mov
cmp
fsubrl
add
arpl
adc
mov
loope
xor
or
cld
das
idivb
add
cmpsl
xchg
push
andl
cmpsb
xlat
xorb
and
dec
js
je
sub
mov
mov
xor
mov
popa
lret
cmc
jle
push
sub
dec
mov
mov
or
mov
jne
pushl
dec
adc
mov
icebp
jnp
mov
frstor
inc
popa
or
jp
cmc
jo
adc
and
ret
shll
hlt
inc
cld
leave
push
mov
pop
xor
int3
pop
cld
inc
jns
repz
mov
call
mov
mov
and
xchg
xchg
ds
out
cmp
sbb
insb
popf
scas
mov
out
mulb
jns
rcr
sbb
dec
xchg
loop
lahf
pop
lods
mov
add
cltd
jno
push
imul
add
popl
mov
mov
sbb
ss
shlb
or
mov
mov
adc
and
dec
dec
data16
fldt
pop
lock
push
ja
push
sbb
cmp
mov
cmp
out
jae
pusha
in
mov
sbb
push
sbb
es
jnp
stos
push
out
cmp
andl
sub
jecxz
iret
cmp
jg
mov
inc
add
sbb
jmp
or
mov
adc
mov
xor
pop
insb
jns
adc
in
mov
add
lcall
fwait
mov
hlt
icebp
repnz
ss
mov
sub
adc
add
push
lods
pusha
xchg
dec
into
arpl
sub
xchg
adc
loopne
aam
data16
jnp
lret
inc
les
jns
inc
mov
bound
xchg
mov
push
loope
mulb
push
repz
outsl
jno
dec
pop
xor
sbb
adcl
pop
test
mov
int
jns
sti
out
xor
pop
mov
jo
and
imull
shll
imull
inc
mov
test
movsl
icebp
mov
addr16
lods
and
fcoms
or
popf
movsb
into
and
call
pop
mov
orl
test
loopne
add
scas
push
bound
lcall
inc
cmp
lock
mov
aam
aad
in
push
ret
xchg
call
lret
xchg
sub
nop
insl
sub
cld
int
ljmp
les
mov
arpl
and
push
pop
pop
add
in
mov
and
aam
jg
pop
ljmp
mov
fldcw
xchg
adc
pop
andb
pushf
lods
cli
or
adcl
int3
js
push
cmp
out
rorb
sbb
mov
cld
fwait
sbb
out
sub
mov
loop
loop
outsl
orb
outsb
or
cli
out
pusha
jnp
std
test
int3
movsb
mov
gs
push
out
sbb
inc
lahf
andb
pop
push
ret
jp
pop
ret
shrb
xchg
jl
sti
adc
mov
mov
mov
or
inc
push
xor
xchg
and
fsubs
mov
mov
push
push
imul
mov
jb
mov
nop
jecxz
sbb
xchg
cmc
and
loop
mov
push
test
dec
faddl
or
sahf
pushf
xchg
sbb
mov
ret
push
movsb
in
movsb
incb
addb
mov
push
stc
jmp
ja
mov
mov
movsb
in
pusha
jge
sub
mov
icebp
push
incl
pop
ds
xchg
fisttpll
and
loop
mov
cli
lcall
ja
lea
clc
cmpsl
cmp
or
inc
orb
xchg
adc
inc
pop
xchg
aam
dec
fs
fwait
ss
add
call
ret
mov
cmpsb
jl
ds
lcall
loopne
or
icebp
rcr
mov
sub
daa
cmp
mov
cmp
iret
stos
push
or
mov
mov
and
addr16
pop
cltd
bound
pop
stos
aas
jns
xchg
adc
adc
addb
outsl
inc
lahf
andb
lea
mov
mov
pop
repz
xor
add
aas
lea
mov
or
bnd
pusha
xor
sub
adc
pop
cmp
loop
mov
lods
cmp
clc
add
pop
pop
mov
pop
ret
jno
mov
or
sub
pushf
adc
sub
add
push
xor
pop
add
insl
out
sub
mov
pop
cld
loopne
push
fadds
pop
inc
leave
cmp
inc
dec
pop
add
adc
xlat
repnz
jle
jns
in
mov
and
xlat
outsb
imul
faddl
dec
or
lods
adc
iret
out
pop
pop
cltd
repnz
fidivl
dec
out
in
inc
dec
and
rcll
xor
loop
div
jb
lahf
ja
fstpt
aaa
out
mov
add
push
mov
push
push
sbb
inc
sbb
fisubs
push
ja
cmp
jge
or
leave
or
jno
sub
jmp
xchg
mov
test
xchg
test
pop
dec
mov
loop
push
lock
sar
std
sub
nop
inc
sti
mov
mov
fcomps
dec
addr16
aam
cmp
mov
test
dec
outsb
xor
xlat
push
xchg
subb
cmp
pop
add
repnz
movsb
repz
and
imul
dec
adc
xor
je
loope
sub
push
mov
lock
or
insl
les
test
sub
dec
adc
das
sub
push
push
pushf
or
pushf
cmpsb
pop
into
fs
xchg
aaa
in
inc
lret
mov
cmpsl
pop
or
decb
test
jns
movb
lcall
es
roll
sub
sbb
sbbb
ror
fs
add
push
dec
dec
mov
jno
pop
int
or
fsubrs
inc
inc
ffreep
scas
mov
repz
loope
jle
insl
adc
repz
xchg
add
cmp
ds
inc
out
xor
mov
push
mov
mov
push
popa
xchg
push
dec
fnstenv
sub
or
insl
cltd
xchg
jp
xchg
jle
loopne
adc
cli
dec
mov
or
ljmp
jge
insl
arpl
inc
cs
jno
movsb
cmp
inc
mov
pop
sub
xchg
lock
mov
lds
mov
icebp
stc
pop
push
int3
pop
jecxz
mov
and
cmpsl
dec
jp
add
mov
test
data16
xchg
xchg
insl
xchg
aaa
jae
add
xchg
daa
lds
mov
or
das
and
jl
cmp
leave
lret
mov
lcall
sub
aas
and
xor
gs
mov
dec
push
outsl
jge
adc
jb
mov
mov
dec
icebp
or
mov
imul
jns
xchg
fimull
push
pusha
or
jae
mov
push
sbb
lods
ljmp
mov
std
test
jge
mov
fdivrp
loope
testl
jbe
xchg
nop
faddl
insb
mov
pop
roll
in
jp
pushf
std
out
fdivl
mov
mull
aad
in
pop
xchg
add
movsl
push
push
lea
adc
inc
or
or
pop
pop
cs
punpckhwd
sub
cmp
test
imul
mov
mov
cmp
sahf
call
leave
add
movsl
pop
test
lock
scas
mov
sbb
divb
js
dec
cmpsb
and
jnp
push
inc
insb
xor
cwtl
push
pop
dec
pop
addb
xchg
ds
outsb
cmpsl
test
out
into
cmp
jecxz
out
jl
pop
inc
sub
or
aas
test
std
push
in
ret
and
mov
pop
mov
cmp
aas
add
push
xchg
es
cmp
cli
or
orb
test
sahf
sub
push
movl
mul
movsb
shrb
es
add
or
movsl
ja
cs
arpl
cld
pop
mov
push
cmp
push
jge
sub
cmpsl
sbb
bound
lret
inc
lahf
and
mov
adc
cmp
lret
mov
notl
fwait
push
lahf
imul
cli
xchg
js
add
jns
mov
rcll
loop
test
cs
nop
and
cs
ds
lods
movsl
mov
es
push
ret
mov
imul
jo
loop
dec
int
mov
lea
mov
adcb
repz
lret
push
jmp
int3
inc
inc
dec
jns
mov
jmp
fisttpl
dec
ljmp
imul
inc
enter
adc
inc
and
inc
pop
mov
ljmp
je
mov
mov
divb
push
fbstp
insl
xchg
outsl
dec
mov
dec
adc
pushl
pop
mov
push
fcomip
sub
add
clc
lds
jecxz
lcall
mov
sub
mov
xchg
cmp
xchg
in
movsb
mov
push
xor
out
dec
lds
mov
icebp
cwtl
int3
cmp
aaa
mov
lea
cmp
sub
imul
in
or
scas
xchg
pushl
xchg
fisttpll
xchg
loop
out
jne
xchg
jae
push
movsb
lcall
and
add
fstpt
push
push
mov
gs
mov
adc
fimull
or
xor
mov
xchg
aam
call
sub
or
bound
in
aaa
data16
jp
jl
cs
pop
mov
loop
push
adc
mov
xchg
stc
pop
test
rorl
cmpsl
cmp
sbb
in
lds
xchg
das
call
mov
push
lret
arpl
sahf
xor
pop
push
into
stc
push
sbb
outsb
hlt
mov
sti
push
scas
add
int3
sbb
xor
lods
mov
sbb
daa
pusha
imul
push
add
arpl
insb
push
das
pop
ss
iret
gs
imul
shl
mov
jb,pt
jmp
aam
int3
push
out
outsl
xchg
mov
inc
mov
dec
adc
or
mov
push
gs
pop
cmc
aam
or
ret
xchg
test
inc
roll
fsub
out
mov
push
fists
gs
stc
lds
push
jno
push
dec
mov
mov
adc
arpl
ljmp
subb
nop
and
rorl
in
sbb
loopne
or
mov
mov
out
mov
jno
insb
mov
jecxz
cmp
fdivp
xor
inc
xlat
pop
push
int
sarb
int3
insb
repnz
push
es
dec
ljmp
and
loope
js
sbb
inc
orl
sub
repnz
dec
jge
jb
push
sbb
fdivrl
enter
ret
dec
mov
sbb
mov
push
movsb
mov
cmp
push
cmp
xchg
sbb
xor
stos
aam
ss
imul
add
addr16
into
bound
rcll
daa
inc
or
insl
pop
mov
jg
mov
cs
mov
dec
jecxz
or
adc
or
out
jecxz
popf
je
cmp
jo
push
jb
loope
mov
xor
lahf
push
pop
lea
leave
cmp
xchg
mov
outsl
ljmp
mov
adc
sbb
das
and
or
cmp
mov
fiadds
add
mov
cli
rcrb
insb
dec
repnz
mov
sarb
or
jbe
mov
jae
add
adc
jno
int3
jp
icebp
pop
dec
into
add
mov
mov
mov
rcrb
pop
test
aaa
adc
shrb
lds
xchg
and
icebp
push
movl
xlat
ret
int3
inc
data16
inc
rolb
push
aaa
inc
daa
push
xchg
mov
mov
xchg
mov
pusha
int3
ds
mov
bnd
jne
mov
mov
push
adc
pop
pop
std
sbbl
lock
stos
or
jbe
fs
cltd
inc
aam
shlb
xchg
es
adc
jb
loop
fwait
bound
push
jno
sub
xchg
loope
mov
sbb
jl
xlat
jns
mov
add
mov
inc
mov
adc
loopne
mov
repz
lcall
sbb
lret
push
fistpl
or
and
jecxz
and
jno
stos
inc
ss
repz
jmp
cmpl
int3
sbb
jecxz
out
or
jle
sbb
sahf
mov
cltd
push
insb
inc
in
test
movsl
lret
cmp
out
inc
aaa
sbb
scas
aad
or
ret
and
dec
aaa
mov
ja
test
dec
xchg
test
inc
fdivr
jge
sarb
mov
pushf
ja
mov
aam
sub
shl
jns
cmp
in
add
iret
cmp
mov
out
xorl
or
out
xor
sub
pop
sub
enter
sbb
adc
mov
and
int
nop
ja
aam
mov
das
push
and
dec
push
movsl
and
out
sbb
sbb
xchg
xchg
je
sub
int3
adc
leave
pop
inc
cltd
test
fstpt
iret
add
pop
and
ret
xchg
out
fwait
fs
cli
pop
rorl
outsl
arpl
lcall
pop
pop
or
pusha
mov
add
adc
loopne
xchg
test
pop
adc
dec
sbb
cmpsl
jmp
data16
rcrl
sbb
daa
loopne
fiaddl
inc
sahf
dec
inc
decb
jae
pop
inc
bound
mov
cmp
pop
into
fbstp
jo
outsb
lcall
jbe
fistpll
imul
pop
xor
sarb
cmp
cmc
popa
dec
cld
loope
movsb
pop
and
dec
push
or
pop
dec
dec
sub
sbb
icebp
gs
in
lock
lahf
call
cmp
xor
fsubs
or
mov
icebp
lock
sub
aam
jp
cmp
xchg
sbb
pop
ja
sbbl
lea
fs
add
shl
daa
fidivrs
idivb
cmc
adc
mov
push
xchg
push
inc
icebp
xchg
dec
mov
pop
push
pop
sub
lea
mov
pop
repz
jo
test
data16
hlt
cmc
pushf
dec
popa
pop
mov
and
imul
lods
push
xchg
push
testl
inc
xchg
mov
sti
pop
mov
leave
mov
enter
mov
pop
xchg
cmp
push
jg
cmp
cli
sahf
pop
inc
fs
adc
ljmp
pop
inc
or
ja,pn
mov
xorb
or
pop
lss
std
xchg
gs
stos
sbb
mov
rcrl
test
stc
cmpsb
outsb
in
sahf
shl
fs
xor
into
xchg
lea
push
loopne
and
inc
das
adc
popf
adc
inc
push
push
test
mov
movsb
push
push
xchg
jo
cmp
sbb
cwtl
and
lret
loope
fadd
cld
sub
adc
mov
out
rolb
stos
jo
aas
imul
setg
outsl
cltd
cli
adc
push
jg
ret
jecxz
dec
pushf
js
into
mov
jno
sbb
xchg
or
push
jns
adc
daa
enter
mov
xlat
inc
mov
dec
xchg
enter
dec
movsl
cmc
push
push
pushf
test
or
das
sti
and
or
imul
shlb
inc
outsl
jl
les
lret
cwtl
sbb
je
ljmp
mov
out
imul
into
test
mov
adc
or
int
xor
sbb
loopne
push
pushf
xlat
stc
pushf
lcall
adcl
jno
cmpsl
inc
sbb
pop
ret
or
xlat
je
push
sbb
jge
pop
popl
std
mov
pop
sub
push
mov
jnp
jb
fsts
pop
fstl
push
and
dec
int3
dec
xchg
mov
out
subb
lcall
iret
mov
adc
popa
sbb
scas
add
mov
cltd
xchg
jne
es
mov
popa
sbb
mov
lret
dec
mov
rcrb
pop
je
mov
adc
cmp
jae
cs
or
xchg
sbb
fwait
iret
in
shl
movsb
or
pop
data16
inc
lahf
jmp
faddl
mov
mov
jp
insb
or
aad
jb
and
frstor
ja
adc
popf
test
cmp
test
fimuls
stos
out
sbb
push
mov
push
mov
movsl
mov
les
jg
imul
xchg
lret
ficoms
in
aam
sub
jno
xchg
cld
mov
push
pop
mov
sub
mov
cmp
cmp
out
lahf
mov
pop
dec
leave
icebp
std
adc
stos
pop
sbb
fs
inc
stc
fcoms
xchg
jmp
ljmp
and
or
fs
cmp
inc
sub
xchg
movsl
aad
aam
dec
inc
add
sub
adc
push
das
adc
xorb
jg
or
xchg
nop
icebp
xlat
aad
mov
push
pop
jp
and
out
test
push
loop
clc
dec
ljmp
lods
and
lcall
jo
sub
inc
mov
test
call
inc
ljmp
mov
jmp
pop
inc
ficompl
cmp
jb
mov
pop
outsl
push
ret
stos
hlt
lods
jp
outsb
test
out
and
popa
cmp
cmpl
pop
cmp
dec
cltd
movsl
xor
push
popa
mov
aad
add
xor
sbb
and
mov
or
mov
rclb
dec
fdivs
shll
testl
iret
filds
and
sub
cmpl
jbe
das
cmp
bnd
or
movsl
xor
sbb
mov
cmp
adc
cmp
leave
ss
test
push
rcr
xchg
out
mov
push
std
dec
cmp
mov
clc
es
sub
stos
out
and
pop
imul
mov
aas
popa
xor
lods
icebp
sub
inc
inc
mull
push
xchg
test
ficoml
cmp
or
loopne
adc
adc
add
push
jmp
xchg
sub
mov
mov
cmpsl
and
ret
mov
mov
cmpsb
push
push
mov
imul
sub
pop
mov
pusha
pusha
in
adc
add
inc
sbb
mov
inc
xchg
sbb
adc
sub
dec
push
mov
add
in
fildl
xchg
pop
push
insl
push
and
fs
sub
or
loopne
jno
xor
sub
cs
cmp
xor
inc
jg
mov
imul
out
loopne
push
stos
xchg
adc
mov
jns
push
sub
jmp
test
or
pop
lds
xchg
inc
test
fdivrl
add
push
lock
pusha
xchg
add
adc
sti
sbb
jecxz
outsl
add
adc
das
xor
addr16
subl
push
inc
int3
xchg
dec
cmpsb
pop
scas
int3
jnp
or
imul
adc
xlat
dec
mov
insl
inc
add
movsl
mov
mov
lods
jo
fists
xchg
add
lahf
mov
add
pop
mov
cld
sub
imul
pop
test
push
jle
cmp
mov
jp
loopne
loope
mov
jl
daa
repnz
aad
add
adc
scas
hlt
out
cmp
mov
xorb
pop
mov
lds
shrl
pop
jns
jno
inc
jbe
push
cmp
fcomip
push
mov
xchg
iret
arpl
lods
mov
pop
imul
dec
and
fs
sub
jb
and
rcr
test
outsb
xchg
or
sbb
outsl
push
orb
in
sarb
std
gs
rclb
rcrl
inc
lds
pop
cli
push
xchg
out
fsubr
push
fildll
mov
mov
ret
pushl
xchg
and
enter
jecxz
and
jl
imulb
fmuls
insl
add
or
and
mov
or
andb
es
jb
push
adc
fsubrs
clc
mov
ret
fildll
mov
mov
leave
add
testb
mov
test
js
and
leave
jbe
push
jl
popf
fcmovnb
dec
jno
add
mov
test
add
pop
cmpsb
rcrl
inc
out
es
scas
xchg
xor
ret
sub
lahf
test
movsl
outsb
fdivl
lcall
dec
mov
or
fwait
cmp
mov
fs
shll
push
dec
adc
inc
pop
nop
dec
loopne
or
ljmp
mov
and
dec
sub
add
cmpl
loopne
popa
in
fldcw
push
fnsave
cmpsb
cmp
pop
and
jmp
mov
cmp
jmp
out
cld
xor
es
ror
mov
mov
adc
mov
mov
dec
test
mov
xchg
dec
xor
mov
jecxz
jns
enter
adc
or
test
out
mov
dec
mov
adc
xchg
sahf
cmp
push
loop
xor
pop
sbb
mov
or
nop
mov
in
or
jns
in
out
xchg
lods
mov
xchg
aaa
dec
mov
or
or
enter
push
outsl
jae
insl
loopne
mov
push
sbb
xor
inc
mov
cld
pop
dec
out
inc
addl
stos
mov
dec
xor
push
xchg
pop
pop
add
outsl
out
lea
push
sub
xchg
jb
insb
sbb
pop
cmp
jecxz
or
and
mov
jg
addb
sbb
inc
aad
mov
js
scas
add
jae
rcrl
jmp
das
imul
mov
lahf
leave
xchg
enter
stos
dec
mov
push
mov
inc
pop
mov
push
xor
cltd
pop
mov
mov
mov
loop
jne
adc
xchg
add
dec
xchg
lea
xchg
adc
cli
sti
sbb
lods
mov
stc
gs
fisubl
jno
sbb
dec
mov
and
mov
mov
daa
add
cld
pop
or
add
hlt
mov
mov
xchg
jecxz
push
jbe
add
add
xchg
xlat
mov
mov
inc
and
xor
hlt
pusha
iret
flds
imul
stos
xor
and
mov
jecxz
sbb
fcomi
cli
mov
sahf
aam
lods
insb
xchg
ja
ljmp
stos
and
int
push
loope
mov
aas
mov
mov
jne
test
inc
lret
enter
mov
scas
sahf
data16
pop
xor
xor
mov
std
fwait
adc
in
adc
ret
out
add
push
xchg
scas
add
inc
aaa
sbb
xor
or
add
pop
jecxz
mov
sti
jl
dec
sarl
call
add
js
mov
dec
neg
adc
lods
cmp
inc
enter
adc
into
lea
and
pop
test
cmp
add
fstpt
push
sahf
adc
test
roll
jle
cli
cmp
jmp
jle
loopne
sti
mov
or
add
cmovo
enter
in
push
in
dec
in
gs
shlb
sbb
mov
pop
test
jne
roll
out
addr16
push
sub
lods
sbb
ret
pop
addr16
clc
mov
fadds
pop
and
hlt
mov
xor
cld
adcb
mov
mov
sbb
mov
or
mov
sub
dec
cmp
push
rcl
jl
pop
lock
lret
sti
push
popa
stc
xchg
movsb
jecxz
xchg
cltd
ljmp
mov
lods
iret
addl
add
arpl
jbe
jge
ret
and
sbb
mov
adc
adc
and
push
pop
pop
or
cli
andl
movsb
into
repz
pop
call
idivb
test
sahf
cmp
lcall
test
imul
std
add
popf
adc
test
aaa
inc
or
jns
xchg
fldt
out
cwtl
dec
repz
pop
add
int3
jne
mov
das
subl
ret
and
fsubr
int3
mov
mov
xchg
mov
or
rclb
iret
dec
loop
sti
repnz
in
test
das
xor
shrl
push
lret
lcall
inc
add
out
push
sub
lahf
mov
cmc
ret
jae
mov
cmp
pop
cmp
bndstx
ljmp
int3
lods
clc
fs
jnp
pushf
dec
out
movsb
sbb
in
and
sub
sbb
jge
outsb
outsb
xchg
mov
sarl
mov
jb
mov
pushf
sub
push
jns
rcl
xchg
add
shrb
jge
cmp
lds
pop
pop
and
mov
mov
adc
xor
loope
cmpsl
imul
aad
push
jg
pushf
adc
popa
pop
mov
popa
jbe
xor
cmp
inc
cmp
inc
sti
dec
push
test
adc
inc
je
mov
or
cwtl
inc
fidivs
insb
pop
pushf
or
push
push
mov
out
repnz
push
mov
push
or
les
inc
out
in
stos
int
xchg
sub
fmull
cmp
adc
out
jo
scas
pop
icebp
aaa
add
jbe
stos
jge
or
pop
cltd
dec
sarl
jnp
sti
and
mov
outsl
inc
lahf
gs
jae
mov
test
gs
outsl
dec
sbb
stos
adc
or
clc
clc
lods
addr16
movsl
jg
and
sbb
rcrl
jbe
dec
add
jle
push
pop
adc
or
pop
aaa
mov
or
and
fidivrs
iret
jnp
divl
mov
test
imul
nop
out
in
fidivrl
iret
out
jno
sbb
cld
lret
sbb
push
dec
xlat
push
notb
or
rclb
add
in
cmp
pop
outsl
loope
arpl
xchg
gs
pop
test
cmp
add
imul
xor
jae
ror
mov
cmp
mov
mov
mov
xchg
pop
call
push
xchg
decb
imulb
adc
rolb
leave
mov
mov
mov
mov
jp
xchg
jp
lds
addr16
mov
add
daa
adc
aaa
test
movsb
shrl
add
or
or
push
int
insl
mov
pop
lea
push
or
and
enter
fisttpl
sub
out
xor
mov
fmuls
inc
rcll
inc
cmp
pop
mov
xor
jne
orl
add
int3
int
xchg
sbb
add
mov
aam
rclb
jg
movsb
inc
cmp
pop
and
scas
push
inc
sbb
leave
stos
es
insb
aam
std
adc
jno
lds
adc
xor
mov
or
shlb
cmp
ss
ja
cmpsb
test
sbb
add
add
out
xlat
int
out
imul
mov
repnz
mov
ret
jo
test
mov
xchg
mov
notl
dec
pop
sub
je
jmp
xchg
fiadds
int3
or
inc
dec
inc
push
push
lock
orl
add
test
fs
mov
arpl
cmp
push
cmp
dec
dec
loop
xchg
push
sub
or
rorl
imul
jae
shlb
ss
ffreep
sub
cmp
in
mov
out
inc
cltd
leave
icebp
mov
and
popa
mov
jae
pop
push
enter
and
stc
addr16
or
fdivp
loop
jecxz
adc
push
in
mov
ds
xchg
pop
cmp
lods
in
js
test
addb
dec
icebp
mov
ljmp
xchg
repnz
cmp
jb
xchg
pop
xor
ja
out
cwtl
mov
xor
push
jnp
mov
int
test
mov
and
pop
hlt
ficomps
ljmp
xchg
or
mov
cmp
cmp
and
dec
pop
sub
andl
inc
mov
mov
and
out
inc
cmp
sbb
enter
out
aad
adc
ja
js
or
add
sub
and
jne
sub
mov
jmp
pop
mov
cmp
push
shl
int
nop
add
mov
cwtl
or
mov
and
insl
sbb
sbb
mov
and
and
mov
jg
imul
pop
add
es
mov
dec
jmp
ss
jae
outsl
inc
mov
xchg
lock
push
loope
popf
adc
aam
inc
mov
and
fisubs
cmp
je
lods
pop
pop
and
push
fnstcw
lahf
adc
aaa
xor
push
mov
ljmp
ss
dec
pop
das
cmpsb
jb
and
imul
jo
xor
leave
push
xor
xchg
sub
je
insl
sub
mov
insl
mov
and
icebp
stos
aad
mov
pop
rorl
xlat
cli
in
mov
popf
out
repnz
mov
loope
pop
jge
mov
add
mov
jo
addl
adc
mov
mov
outsl
push
or
mov
scas
mov
cmp
out
jmp
aaa
jmp
jle
inc
jbe
push
mov
ret
test
cmp
xor
loope
std
lea
dec
cmpsb
sbb
and
xchg
jbe
les
jmp
sbb
sahf
repnz
loop
cmp
decb
dec
sbb
dec
xlat
data16
mov
xorl
in
cmc
xchg
dec
jmp
sub
test
call
sbb
jg
sub
xor
std
push
cltd
sbb
push
scas
pop
scas
fimull
lret
xor
mov
sub
out
je
aad
jl
pop
jmp
xor
mov
stc
lock
dec
mov
xor
mov
enter
lock
push
mov
les
xor
arpl
pop
push
jno
fs
addr16
pop
cmpsl
xchg
jle
out
aaa
sbb
hlt
sti
dec
lcall
cmp
xor
ret
lods
mov
je
es
mov
bnd
ds
and
out
pusha
pop
adc
or
dec
sbb
pop
sbb
insl
loopne
orl
aam
dec
sub
sbb
sub
pop
xchg
movsl
sahf
xchg
pushf
fmull
in
in
loop
jp
scas
pop
jle
add
imul
or
inc
push
lret
jns
icebp
jb
pop
jmp
sbb
xchg
mov
out
sbb
add
loopne
cli
mov
cmp
lcall
test
loop
mov
xchg
mov
lods
aas
stos
sub
mov
add
push
inc
mov
mov
adc
orl
xchg
pop
repnz
adc
pop
das
js
dec
insl
in
xchg
in
and
pop
push
in
test
or
sub
sub
sbb
cs
test
pushf
shlb
iret
stc
repz
dec
mov
mov
mov
ror
data16
fcmovb
in
fadd
subl
jo
aam
add
imul
movsb
xor
inc
pop
dec
and
movsb
and
cmp
adc
mov
or
or
xchg
sahf
cmp
fnstenv
add
imull
mov
dec
lcall
and
cmpsl
cmc
rolb
es
mov
in
sub
pusha
sbb
pop
sahf
es
push
pop
sbb
into
jns
sahf
sub
aam
xchg
mov
pop
and
push
pop
imul
mov
std
loop
push
es
out
push
ret
pop
sti
int
jnp
clc
popa
dec
call
scas
xor
add
sub
xor
lods
scas
cmp
data16
sahf
lock
in
inc
das
arpl
push
incl
lcall
lret
call
inc
xor
fs
shll
outsb
jo
pushf
inc
mov
shl
inc
push
push
push
pop
ret
mov
xor
sbb
test
sub
add
mull
xor
xorb
out
mov
cwtl
lcall
in
popf
xchg
push
dec
sti
push
push
mov
cmp
in
and
inc
push
sarb
imulb
or
ficompl
mov
loop
lods
xchg
out
rdtsc
pop
xor
or
movsb
out
push
stos
xlat
nop
leave
xchg
inc
in
fstl
mov
out
mov
stos
in
imul
mov
insb
push
cmpb
ds
adc
aas
fsubrs
or
nop
std
daa
push
pop
sbb
clc
push
fisubl
push
es
es
xor
sbbb
testl
dec
fdivrl
cmp
jmp
rclb
jno
in
add
shl
orb
dec
pop
aas
iret
and
test
js
sbb
adc
js
out
and
nop
icebp
inc
fnstcw
mov
fcoms
imul
push
jp
fdivrl
lock
ss
or
dec
mov
inc
lcall
xchg
jne
fs
xor
xor
xchg
adc
push
arpl
cmp
in
sub
mov
leave
or
cmp
mov
gs
mov
ret
addb
jbe
out
dec
inc
ss
aaa
cli
jl
inc
jge
cmp
mov
or
inc
push
jmp
cmp
mov
jmp
addr16
inc
divl
push
arpl
and
adc
or
dec
pushf
mov
dec
insl
sbb
adc
push
and
pop
dec
ret
cli
lret
arpl
int3
imul
sub
xlat
out
mov
dec
mov
out
loopne
andl
popf
cs
jle
sub
inc
adc
cmp
iret
inc
in
fwait
push
adc
je
insl
adc
pushf
jne
sbb
cmp
inc
aas
mov
aas
inc
mov
sub
imull
ljmp
sbb
sub
clc
mov
pop
aaa
push
fidivs
cld
imul
bound
jl
jo
negl
rcll
push
mov
dec
ja
or
outsb
sub
add
daa
cmpsb
mov
jmp
pusha
cli
imul
aam
pop
mov
mov
and
mull
and
sub
nop
addr16
orl
mov
cmpsb
add
inc
jb
repz
idivl
rcr
inc
nop
sub
aam
shrb
dec
jb
mov
cmp
lods
loope
test
pop
rcll
mull
xchg
xchg
out
adc
dec
pop
and
imul
and
rol
jecxz,pt
xchg
and
rol
test
sub
mov
sbb
test
out
jp
xor
push
push
or
inc
pop
arpl
test
lret
insl
imul
bound
jmp
adc
bswap
mov
out
orb
shrl
icebp
add
out
xchg
aaa
fcmovb
adc
mov
push
in
dec
sub
int
cwtl
mov
out
insb
jg
jns
mov
stc
push
inc
xor
ljmp
inc
rorl
xorb
xor
sbb
cmp
cmpsl
sub
cs
in
adc
jmp
scas
or
popa
jl
push
bound
add
orb
cmp
jl
mov
xchg
mov
icebp
popf
xchg
cmpsl
mov
imul
pop
mov
in
or
mov
stos
iret
add
dec
adc
pop
mov
jo
jmp
dec
jmp
lea
stos
fdivrs
lret
or
pop
clc
mov
fcomps
mov
or
mov
sahf
lcall
cmp
sbb
out
pop
rorl
mov
jns
mov
mov
push
repz
out
addr16
and
pop
adc
cmp
loopne
mov
xor
pop
xchg
or
and
inc
add
loope
cmp
loope
or
aaa
jne
test
mov
hlt
and
push
lods
cwtl
inc
mov
and
cs
adc
or
pop
cmpl
adc
fmulp
ret
and
nop
push
ja
loope
out
ds
int
dec
add
aaa
mov
imul
fnstsw
xchg
je
popa
loopne
sti
or
push
in
xlat
out
adc
adc
ret
pop
mov
lcall
pop
xchg
cmp
push
insb
shll
pop
dec
mov
push
fwait
mov
cmp
push
pusha
das
and
inc
add
lea
pusha
lret
cmpsb
mov
or
in
fs
dec
ret
push
daa
xchg
dec
cmpsl
push
mov
sbb
pop
fsubrl
mov
jne
inc
repz
dec
cli
cli
dec
stos
mov
push
std
lahf
mov
insl
pop
pop
dec
ja
loop
inc
xorb
es
lods
cwtl
dec
xchg
leave
push
lods
mov
pop
imulb
cld
adc
pop
jns
mov
lods
gs
ljmp
push
call
out
fnstcw
cld
xor
js
push
add
push
push
push
jae
lock
mov
add
loopne
lcall
and
push
lea
adc
stos
xchg
scas
insl
jmp
fldcw
sbb
cmp
movsl
fldl
mov
inc
dec
xchg
adc
pop
mov
mov
jge
cmpsb
push
cmp
loope
push
mov
push
mov
xchg
ja
addr16
mov
repnz
loope
ds
push
push
pusha
mov
mov
cmp
fldt
mov
in
inc
sbb
jle
scas
cld
jns
outsl
and
cwtl
fisttpl
sbb
mov
sti
xchg
scas
fimuls
stos
sahf
inc
out
ret
push
inc
iret
jns
ljmp
mov
dec
sub
in
sbb
sahf
lret
sahf
imul
push
xchg
addr16
add
pop
hlt
nop
repz
test
bound
xchg
daa
xor
aas
je
or
pop
pushf
lcall
icebp
out
stos
adc
and
test
xchg
mov
inc
adc
jo
lret
dec
das
mov
pop
xchg
mov
out
mov
adc
jg
stc
lret
dec
test
add
mov
arpl
push
roll
inc
and
ds
filds
pop
bnd
jne
popf
mov
mov
cmpsl
leave
xor
sub
add
pop
mov
or
sub
scas
decl
cmc
lret
je
fs
xchg
fmul
out
dec
std
icebp
fcomp
stos
in
movntq
out
inc
testb
mov
push
dec
sub
push
cwtl
cwtl
mov
fiaddl
sub
loope
adc
push
sbb
mov
push
mov
int
les
push
add
pop
jns
subb
xchg
call
push
js
adc
cmp
nop
lret
test
popa
loopne
adc
fdivrl
dec
xor
jmp
adc
aad
cmp
jae
mov
push
gs
pushf
lahf
das
insb
addr16
lods
mov
push
out
push
sbb
push
jnp
cmc
jecxz
lcall
push
imul
loopne
out
pusha
ret
fdivl
rcl
lds
jle
out
sbb
mov
sbb
fistl
aad
loopne
lcall
test
jle
mov
cltd
fisubrs
sub
dec
out
pop
mov
mov
ret
call
inc
xchg
sbb
insl
movsb
mov
adc
xchg
cmp
sub
pop
mov
icebp
cwtl
stos
mov
xchg
es
adc
xor
std
fdivrl
les
pop
outsl
std
ret
and
xor
jg
pop
jp
nop
outsb
sub
je
sub
movsb
bound
xlat
jl
jp
push
enter
pushf
cmp
js
push
loop
es
dec
mov
shl
daa
and
sub
adc
pop
mov
insb
xchg
push
add
aam
push
xor
xchg
and
sahf
orl
add
test
fcoml
shl
test
sbb
das
cmpl
xor
out
push
sub
inc
jg
sbb
jnp
cltd
aad
arpl
and
pop
mov
out
es
incl
fwait
adc
mov
inc
lret
inc
and
push
or
data16
rcl
push
add
clc
test
ja
leave
insl
das
cs
mov
mov
jae
ret
push
push
jp
pop
out
out
push
xchg
dec
jo
jbe
sbb
cmp
stos
mov
scas
bound
xchg
push
mov
sbb
sbb
dec
repz
mov
push
fisubl
mov
inc
inc
cmpsb
mov
aad
push
adc
je
sarl
xchg
rolb
rolb
int3
pop
lahf
nop
cmp
cltd
and
cmp
loopne
call
mov
pop
hlt
pushf
push
mov
sub
in
lock
insb
ljmp
hlt
lcall
mov
sbb
push
push
push
adc
sub
cmp
jle
xchg
mov
mov
ds
pushf
loope
int
pushf
fnstsw
dec
jl
in
rep
jb
sbb
sub
daa
push
inc
xor
push
sub
add
and
and
roll
xchg
cmp
stos
stc
fcos
dec
push
cmp
mov
ljmp
sbb
lea
xor
sbb
xchg
xlat
xchg
nop
in
lahf
mov
jmp
stos
jl
jno
sub
dec
call
repnz
sub
cmpsb
or
stc
sub
mov
adc
jg
movsb
arpl
sub
lret
jg
movsl
add
sti
cmpsl
leave
sbb
jge
out
jle
int
push
cs
jb
cmp
adc
lahf
pop
arpl
out
aaa
add
jno
cmpsb
outsb
fstps
xchg
mov
loope
mov
nop
es
lret
cmp
in
mov
sub
fyl2x
sub
pushf
mov
inc
adc
sub
das
mov
jle
xchg
mov
jg
cmpsl
mov
mov
pop
cmpsb
mov
pop
mov
inc
adc
call
dec
jl
sbb
add
fst
xchg
mov
and
add
lret
push
inc
testl
mov
push
cmpsb
lret
mov
fsqrt
cmpsl
ret
mov
jl
es
jb
inc
loop
push
loopne
mov
add
dec
int
cmp
mov
movsl
inc
and
mov
inc
cmp
int3
jmp
cmpsb
sub
loop
xchg
inc
push
mov
cltd
adc
mov
lret
sub
les
jnp
out
mov
jecxz
out
mov
add
inc
pop
jl
aam
pop
mov
cli
and
adc
push
fmuls
leave
mov
pop
int
in
or
jo
fs
in
xchg
dec
mov
mov
sti
je
into
movsl
jecxz
mov
shl
lods
cmpsb
jno
sbb
mov
fidivs
jb
cmp
xchg
inc
cmp
mov
jmp
insb
dec
loopne
pusha
mov
iret
dec
xor
xchg
mov
in
jmp
jl
out
imul
mov
ror
sbb
test
cmpsb
and
mov
dec
add
push
adc
data16
and
push
cli
jae
outsl
ja
test
add
adc
dec
stos
dec
nop
mov
les
icebp
aam
jl
mov
mov
push
cltd
inc
pushf
sbb
cs
xor
inc
jl
fnstenv
push
outsb
int3
or
fxch
pusha
shlb
ret
jnp
xor
mov
cmp
cmp
les
bound
jl
mov
rcrl
lahf
cmp
ffree
pop
or
aas
or
ss
pop
dec
sbb
std
jb
push
inc
mov
xchg
daa
insb
sbb
cmpsl
in
outsb
sub
push
stos
sbb
xor
roll
icebp
scas
mov
jno
jl
mov
pop
shr
rorb
aaa
adcb
jle
int
push
lcall
xor
loop
scas
push
add
fsubrl
and
es
fmull
jae
cmp
sbb
jnp
leave
into
loop
fidivrl
repz
push
out
mov
push
jo
xlat
xchg
shrb
jg
icebp
roll
sub
lahf
lret
dec
aam
fcom
xor
jo
jmp
pop
pop
inc
pop
mov
add
subb
aam
mov
data16
push
push
mov
adc
ja
out
scas
mov
lock
xor
and
jp
mov
push
cwtl
mov
stos
sbb
in
xor
push
int
push
fnstcw
popf
mov
xorl
inc
cmp
xchg
adc
sbb
fwait
jae
cmp
leave
out
ds
xchg
bound
aam
shlb
das
in
inc
jmp
pop
icebp
sbb
mov
adc
notl
cmpl
or
xchg
lds
dec
test
shl
cmpl
inc
add
xorl
dec
loope
mov
out
ljmp
sbb
push
jns
mov
fstl
fistl
lcall
div
lret
shlb
jnp
popf
pop
push
inc
add
push
push
jb
mov
xor
test
adc
xchg
cwtl
adc
test
filds
aas
lods
mov
mov
push
push
arpl
mov
pop
jne
mov
mov
push
lock
imul
inc
sub
xchg
hlt
cmp
dec
mov
mov
jmp
mov
lock
popa
sbb
or
push
or
int3
imul
inc
das
aaa
adc
icebp
jg
jno
sub
push
xchg
shrl
mov
daa
push
jno
dec
cmpsl
pop
movsb
les
xchg
pop
shlb
lods
pop
mov
lahf
pop
loope
xlat
addr16
inc
scas
pop
inc
out
push
mov
stos
cmp
adc
mov
inc
mov
pushf
push
pop
pop
dec
call
fsubs
lret
test
xor
push
mov
xor
mov
cmp
lds
fs
push
insb
dec
mov
lcall
jp
stc
mov
jmp
imul
cmpsb
mov
mov
push
lea
and
mov
cmp
mov
outsb
pop
mov
lcall
pop
test
sahf
test
lods
lret
add
mov
push
add
mov
sub
jp
in
loop
add
in
imul
add
pop
iret
push
outsl
xchg
mov
pop
xor
xor
outsl
scas
nop
out
imul
adc
xchg
push
jl
and
sub
cmp
mov
mov
mov
faddl
mov
pop
sub
movsb
add
cmp
mov
mov
test
lret
dec
push
pop
imul
inc
push
and
icebp
pop
lret
scas
sbb
clc
int
lock
pop
mov
and
pop
fnsave
orb
xlat
aaa
lret
adc
ret
xchg
cmp
mov
add
add
ss
xchg
xchg
and
test
or
or
xor
xor
cmp
xchg
xchg
shrb
xor
js
mov
call
and
sub
out
pop
push
scas
cmp
fwait
xor
mov
xchg
loop
jmp
lret
add
cmp
xor
out
int3
sbb
bswap
orb
sbb
sarb
mov
mov
xlat
pusha
dec
sub
je
mov
push
shlb
ds
sbb
xlat
and
dec
add
jnp,pt
xchg
cmp
mov
mov
jl
negb
daa
pop
fstpt
aam
fisttpll
xor
dec
add
vpsraw
jnp
ret
jns
repnz
push
je
mov
pop
mov
cmp
std
pop
sahf
push
dec
lret
mov
mov
dec
mov
jmp
cltd
push
jae
sub
sbb
xchg
fs
into
cmc
push
sbb
jbe
cmova
out
cmp
cmp
sahf
mov
push
pop
loopne
or
mov
in
mov
adc
sbbl
xchg
mov
lahf
cld
xor
mov
dec
or
sub
and
push
fidivs
adc
loop
shrl
jp
and
dec
dec
cld
and
data16
xchg
push
sbb
jbe
adc
test
inc
vpsrlw
xor
sti
cmp
mov
pop
xor
cmp
xchg
js
mov
jmp
incl
sbb
cmpl
js
stos
andb
push
fimuls
sbbl
add
dec
xchg
stos
mov
lret
xchg
xchg
andb
sub
mov
loopne
mov
insl
pusha
pop
stc
push
popf
mov
xor
lock
mov
neg
xor
sub
push
push
fmul
inc
cs
add
xchg
test
sub
movsb
xchg
dec
hlt
cmp
jmp
mov
push
xchg
je
scas
test
lods
jl
gs
out
or
or
push
and
adc
sub
data16
pop
push
cmp
int
sub
hlt
aas
push
mov
mov
cmpsl
in
mov
imul
int
div
sahf
test
repz
fnsave
mov
imul
sbb
test
add
lcall
adc
push
fsubs
xchg
sbb
out
loopne
out
inc
in
insl
call
mov
mov
insb
lds
aas
scas
add
imul
adc
popa
pop
std
mov
aad
sbb
jae
xchg
das
call
ror
mov
cli
sub
xor
inc
adc
nop
ficompl
push
push
call
cmc
fdivrs
fwait
adc
stc
cmc
mov
in
shl
nop
xlat
repnz
pushl
pop
mov
ss
xchg
lcall
adc
dec
popw
es
jbe
sbb
sub
sbb
ret
sbb
imul
lret
or
jbe
cmp
inc
lret
mov
leave
pop
pop
rcll
push
ss
cmpsl
xchg
xchg
mov
xchg
das
pushf
pop
orb
jl
inc
mov
mov
insb
xlat
cmp
repz
and
aas
lcall
icebp
insl
imul
loopne
daa
test
lret
push
and
in
inc
sub
insb
and
cmp
inc
into
les
std
shll
js
jnp
jp
test
repnz
xchg
jecxz
in
jle
sbb
dec
mov
nop
fisubs
cltd
inc
mov
enter
daa
pop
mov
idivl
and
pop
shlb
mov
in
and
dec
lods
sbb
loopne
arpl
popa
push
cmp
and
dec
pop
les
jno
mov
pop
leave
sub
js
jno
mov
sti
hlt
sub
int
lret
jb
clc
inc
bound
ljmp
jl
dec
inc
leave
mov
xchg
cwtl
mov
jb
ja
das
outsb
xor
repnz
pusha
xor
rorl
push
add
cmp
mov
insl
xchg
lds
call
cmp
mov
in
fdivrl
cmpsb
insb
addr16
movsl
mov
ss
sbb
push
mov
outsl
mov
pop
push
fldcw
insb
cmp
jle
xchg
inc
in
xor
pushf
xorb
sti
push
enter
push
test
xor
lcall
cmp
mov
out
mov
loop
popf
pop
cmp
and
pop
or
in
lock
inc
mov
popa
xor
aad
or
push
push
fs
imul
or
dec
lcall
pop
sbb
stc
inc
adc
inc
cmpsl
dec
cld
mov
dec
push
je
or
pop
mov
pop
or
into
icebp
jo
negl
or
inc
pop
mov
movsl
or
rcll
out
jae
sbb
pop
inc
pop
sahf
out
jmp
faddl
mov
imulb
push
mov
mov
adc
push
inc
pop
lahf
mov
sub
in
dec
insl
adc
sbb
pop
push
out
or
in
jp
movsb
dec
mov
out
out
sbb
mov
pushf
mov
and
xchg
fstl
gs
arpl
xchg
out
and
push
pop
imul
xchg
ja
popa
std
ret
or
mov
icebp
test
mov
jmp
mov
lods
enter
cmp
fcoms
mul
ret
and
sbb
or
pop
jecxz
mov
mov
loopne
cmp
fnstcw
fbld
sub
xor
pop
xor
outsb
fidivs
or
into
cmpsl
add
repz
test
mov
push
subb
sub
sbb
push
or
insl
push
bound
outsl
push
scas
ljmp
dec
cmp
div
in
jne
int
xor
add
sarb
push
lahf
test
aam
adc
cmc
mov
daa
sbb
ss
in
dec
inc
lods
bndldx
shrb
mov
adc
sahf
cs
sbb
sub
pop
sar
jno
push
dec
cmp
mov
call
mov
jns
add
test
js
jno
cltd
sub
sbb
mov
insl
sub
and
stc
popf
mov
in
std
test
sbb
rcl
dec
pop
out
xor
inc
js
pop
sti
sub
sbb
into
sub
cwtl
cli
in
dec
jecxz
dec
mov
imul
loopne
out
lret
sbbb
fbld
ds
dec
out
test
insl
enter
inc
fcoms
sub
mov
xor
adc
sbb
mov
test
pusha
scas
jb
sbb
mov
mov
inc
scas
or
inc
int3
mov
sahf
out
ss
pop
stos
dec
outsb
inc
and
add
out
mov
sub
mov
push
nop
or
test
call
fwait
cmp
outsl
mov
pop
into
mov
sub
pop
or
push
dec
mov
lock
inc
sbb
std
fldl
mov
fs
stos
cmc
cmp
dec
inc
cmpsb
jp
int
mov
cld
test
call
imul
adc
rcll
jo
fisttpl
sub
dec
or
mov
dec
and
movsb
rcrb
dec
test
inc
mov
cmp
dec
shll
iret
test
repnz
lcall
or
rclb
jp
out
push
xchg
andb
push
jns
test
int
jge
jg
fisubl
cmc
lret
xchg
xchg
aas
sbbl
frstor
hlt
fwait
cs
pop
inc
in
pop
xchg
test
std
inc
les
jmp
sti
xor
dec
test
ffree
lods
sub
mov
fsubl
xor
sbb
das
dec
and
and
loopne
fiadds
sbb
ret
les
iret
loopne
sbb
or
lods
popa
sbb
dec
js
mov
mov
loope
imul
out
adc
ret
push
insb
sub
push
cmp
sarb
int3
cmpsl
sbb
add
sbbl
or
loopne
ss
data16
mov
lods
test
mov
mov
ret
xchg
sti
sub
cmp
inc
addl
mov
in
fiadds
fxch
pop
arpl
sub
enter
pop
dec
sbb
ffree
xchg
cs
nop
sbb
popf
jns
push
cmpl
adc
pop
iret
inc
sub
dec
or
popf
inc
daa
mov
test
gs
repz
and
adc
pop
jg
mov
sbb
dec
xchg
mov
pop
repz
mov
mov
stos
arpl
leave
pop
xor
push
fistpll
movsl
push
mov
cmpsl
fnstsw
jle
clc
addb
pop
les
or
into
or
mov
xlat
out
mov
push
jmp
push
in
scas
dec
and
jbe
int
jno
mov
pop
pop
lds
xchg
dec
jl
sar
jo
xlat
or
jo
xor
fldcw
dec
cmpsb
push
push
dec
cltd
loop
test
adc
pop
add
mov
test
sub
test
ljmp
inc
sbb
mov
dec
into
inc
sbb
popf
adc
push
pop
mov
mov
in
movsb
sub
inc
loop
sbbl
jmp
pop
leave
push
out
xor
jle
sete
mov
in
pop
out
jg
outsb
mov
lock
sti
mov
test
clc
lods
dec
xor
cmpsl
in
cs
push
adc
lock
add
pop
xor
push
dec
sar
mov
inc
ds
jb
pop
push
sbb
mov
xchg
data16
pusha
fimuls
and
pusha
test
dec
xor
in
pop
jge
cmc
pop
clc
xchg
shll
or
frstor
dec
out
js
and
stc
repz
mov
push
in
lods
popa
cmp
es
test
xchg
xlat
sbb
adc
adc
pop
sub
pop
into
fisttps
loope
or
push
pop
fidivl
push
push
fldl
cli
lock
lods
out
sti
mov
pop
dec
push
sbb
mov
mov
mov
jne
or
cmp
add
mov
out
mov
divl
lcall
inc
mov
test
inc
mov
mov
xor
dec
add
inc
sbb
clc
pop
mov
shl
popa
daa
mov
pop
xor
daa
aaa
mov
cmp
push
sbb
filds
mov
fldenv
and
xchg
pop
xor
adc
dec
jl
cs
and
lea
push
stos
cmp
jnp
lret
jmp
shrb
mov
addl
sahf
mov
sub
or
shll
mov
out
lods
cmp
push
dec
jnp
jo
in
addb
pushf
mov
mov
xor
push
xchg
xchg
pop
lods
mov
aad
popa
or
push
scas
adc
test
jecxz
jg
mov
sbb
fwait
leave
ud2
add
dec
dec
push
jbe
xor
jbe
lods
lods
jb
adc
pop
push
inc
cltd
or
jp
mov
xor
lea
mov
jns
sbb
inc
jge
outsl
sub
inc
sbb
add
jne
test
sub
mov
xchg
fs
mov
dec
adc
adc
outsb
jle
cmpsl
int3
adc
jae
cmp
push
dec
dec
adc
xchg
outsl
push
sbb
push
jp
leave
dec
push
dec
leave
std
psrlw
dec
aaa
or
aas
loopne
push
pop
in
jb
ja
je
cmc
jle
push
rcll
pop
dec
in
dec
push
adcb
add
sti
jbe
adcl
cs
roll
inc
ret
shll
jbe
push
popf
cmc
sbb
mov
push
xor
imul
push
inc
shlb
cmp
out
xchg
mov
xchg
fidivl
adc
fiadds
fwait
jno
daa
outsb
leave
sbb
repz
mov
loope
xchg
lcall
rorb
push
stc
leave
shll
mov
sbb
cli
je
stos
mov
xchg
stos
inc
roll
add
flds
jnp
dec
or
pusha
jo
or
mov
clc
cmp
aaa
dec
scas
adc
inc
inc
pop
std
shl
outsb
pop
push
pushf
dec
repnz
mov
in
adc
call
fwait
ljmp
mov
mov
fmuls
ljmp
int3
xchg
inc
scas
enter
data16
aad
xchg
in
and
mov
mov
inc
xchg
pop
popa
ljmp
sub
inc
rcl
mov
mov
or
inc
fisubs
insl
int3
cmp
outsb
sub
push
std
pop
and
in
mov
mov
mov
push
out
test
lret
bound
incb
mov
pushl
push
lds
scas
pop
jbe
lahf
xor
sbb
jmp
mov
in
mov
fwait
ljmpw
sub
scas
dec
scas
and
pmullw
xchg
mov
mov
jmp
and
mov
push
mov
pop
stc
xlat
fxch
push
popa
insb
dec
mov
js
sbb
outsl
mov
rolb
bound
inc
inc
and
movsl
xor
scas
adc
sub
xor
sub
xor
cmp
cmpsl
test
jno
test
mov
xchg
pop
lods
and
lahf
sbb
fs
aaa
add
cmp
aaa
inc
mov
ja
testl
int
jnp
inc
pusha
or
mov
pop
mulb
mov
mov
enter
mov
out
fwait
repz
cmp
cmp
sbb
ss
in
cmp
xchg
mov
mov
mov
jb
jb
sbb
cmp
mov
stos
out
mov
cmpl
scas
or
jnp
shll
or
cli
lock
fs
dec
insb
outsl
mov
fstp
add
imul
cli
test
cmp
push
fadd
sarb
ss
cs
shlb
cwtl
adc
rol
ret
xor
push
mov
stc
adcb
or
daa
adc
cmp
xchg
mov
xchg
mov
rorl
cmp
xor
stos
or
dec
int
adc
adc
insl
inc
pop
jle
movsl
xchg
adc
xor
xchg
in
mov
aad
lock
lea
fs
mov
mov
stos
xchg
mov
mov
ljmp
push
xchg
or
add
jae
add
mov
int
push
mov
add
fbstp
fcmovnbe
xchg
mov
dec
into
mov
sti
or
xlat
icebp
xor
faddl
mov
inc
rcrb
pop
or
and
in
popf
lret
andb
push
loop
adc
aam
sti
mov
inc
cmp
pop
cld
imul
add
cli
push
mov
adc
push
stos
push
sbb
in
rorb
jae
mov
imul
repz
imul
mov
jns
cmp
or
test
lea
pop
fstl
int
mov
pop
lcall
xor
add
dec
and
popa
std
pop
inc
loope
add
jo
pop
mov
insb
lret
ss
dec
sub
mov
mov
sub
test
push
clc
je
xchg
out
and
dec
cmp
and
lds
ja
shll
aam
sbb
or
mov
out
hlt
sbbl
fnstsw
and
push
and
xchg
xchg
sahf
movsb
pop
xchg
lahf
jp
nop
fwait
jecxz
or
es
xchg
adc
mov
add
fadd
loop
mov
push
dec
jl
push
push
dec
dec
lcall
js
in
mov
push
mov
dec
lock
cmpsl
mov
mov
sub
mov
mov
aas
leave
push
inc
cli
mov
and
xchg
adc
mov
dec
mov
dec
jnp
ret
xchg
sub
test
mov
jp
pop
test
aad
into
clc
insb
sti
sbb
mov
movsl
test
lds
xor
adc
pushf
xor
inc
les
jnp
loopne,pn
jo
xchg
cmpsb
jecxz
aam
sub
lods
pop
rol
cmp
add
adc
adc
dec
or
shlb
pop
mov
enter
outsb
push
dec
insl
daa
and
pop
xchg
in
jl
stos
orb
or
mov
pop
mov
inc
mov
out
mov
in
js
jno
or
test
test
sti
push
sub
xor
andl
or
cmp
rcll
ret
ljmp
ss
xlat
in
test
mov
mov
jecxz
xchg
push
sbb
inc
xchg
xor
ss
cmp
loop
jbe
mov
jg
mov
mov
dec
jb
fstl
push
out
and
sbb
push
sbb
out
enter
sub
fs
sub
idivb
outsb
test
cmp
ss
ret
aad
mov
dec
rclb
aam
iret
adc
xchg
std
and
ljmp
outsl
test
jb
repz
add
push
pop
aaa
sarb
dec
jecxz
stc
lds
mov
js
pop
data16
add
repnz
repnz
or
stos
cmp
in
xchg
imul
jecxz
outsl
ja
xchg
addr16
loopne
xchg
test
ret
jo
ret
test
and
push
push
pop
dec
mov
cmp
icebp
push
mov
sar
mov
push
imul
pop
lahf
fstl
mov
dec
jl
popa
insl
mov
mov
addb
xlat
add
mov
push
add
test
sub
add
test
jl
cwtl
and
loop
cmp
popf
int3
jo
and
mov
push
add
add
mov
repz
cwtl
out
xor
int
mov
test
pop
lret
or
cmp
pushf
test
scas
sbb
movq
mov
sbb
and
ja
pop
mov
cmp
sbb
mov
cld
aaa
jmp
cmp
mov
push
cmpsl
cmp
adc
xor
scas
pop
repnz
mov
jl
lods
jns
cmp
sub
push
mov
arpl
stos
xor
jb
sbb
push
cmp
pop
fwait
pop
lcall
hlt
fs
dec
and
and
js
dec
xchg
sub
subb
jmp
dec
sbb
xor
insb
ljmp
cmp
outsl
stos
dec
or
clc
bnd
mov
mov
pop
movsl
les
and
mov
xchg
pop
stc
ficomps
add
jae
shr
push
adc
push
loopne
bound
jbe
push
mov
lret
mov
addr16
jae
dec
mov
cmpsb
stos
adc
sti
cltd
or
mov
inc
dec
adc
adc
xchg
push
sub
pop
fwait
mov
das
ret
fistpll
pop
call
test
aaa
mov
sub
movsl
mov
shlb
pusha
sub
notl
int
jb
lret
adc
add
sarb
push
inc
sub
jno
loopne
cmpsb
push
cmp
sub
testl
dec
cmpsb
adc
xor
bound
sbb
shrl
stos
ret
jmp
mov
pusha
adc
xor
ret
inc
xchg
jp
sub
jg
enter
pop
shr
inc
or
stos
rol
in
sar
ljmp
inc
sub
stos
cmp
cmp
gs
fucomp
xor
fnsave
jno
mov
sub
xor
jl
push
in
xchg
inc
out
nop
stos
popf
or
stc
inc
sub
jl
scas
mov
das
gs
sbb
or
mov
fcmovnb
mov
ret
js
loop
cmp
test
je
mov
fld
xor
test
ficoml
xchg
cmp
or
xor
aam
and
add
mov
jmp
jne
xor
out
mov
cmpsl
pop
ljmp
bound
sbb
addr16
push
cmpsl
insl
ud2
push
cli
jno
mov
sub
mov
push
jle
inc
cltd
adc
stos
insb
pop
sub
arpl
cmp
hlt
add
notl
xchg
push
notb
sub
inc
mov
test
inc
test
sarb
pop
jge,pt
scas
test
out
outsb
int
cltd
popa
mov
inc
gs
xchg
pushf
jb
jne
xor
setp
mov
adc
nop
fisttpl
inc
in
sub
pop
adc
out
mov
paddsw
mov
test
cmpsl
jp
sbb
shr
adc
pop
dec
sarb
pop
scas
pusha
xchg
test
add
mov
dec
dec
cmpsb
packuswb
pop
test
shll
ret
movsb
xchg
or
push
dec
jo
test
fisttps
stc
clc
push
jnp
jae
jo
mov
mov
xlat
sbb
lock
dec
out
cmpsl
fcoml
orb
popf
pushf
xor
es
push
test
push
bnd
add
popf
lock
add
inc
jne
in
dec
stc
xchg
adc
stos
mov
aam
lods
gs
sub
pop
cs
mov
mov
and
xor
cwtl
arpl
shlb
lock
xchg
loopne
xchg
jg
jmp
pop
adc
fcomip
add
faddl
add
mov
jmp
push
sbb
xor
mov
fwait
ret
jle
jge
dec
enter
decb
xchg
lret
rcll
mov
xor
fnstsw
scas
mov
out
int3
push
bnd
lcall
test
mov
mov
inc
push
loop
fsubl
std
inc
popa
xor
mov
push
shl
and
mov
lahf
xorl
and
jo
or
xorb
lds
mov
push
push
mov
loopne
rorl
or
xchg
test
sub
fisttpl
mov
sbb
sbb
fidivl
dec
add
and
push
dec
push
cmp
adc
sbb
jo
fwait
mov
scas
adc
arpl
sbb
sbb
jb
ss
jl
and
fstps
fildl
scas
rclb
aas
mov
test
sahf
cmp
pop
and
test
test
sbb
sub
ret
inc
xchg
or
aam
mov
dec
sarl
dec
test
inc
jmp
dec
lods
push
mov
je
mov
push
or
shl
jbe
pop
in
sub
jp
loope
pop
push
das
subl
sub
pop
xor
mov
std
jne
ret
lock
movsl
xchg
in
jle
dec
cmp
outsl
mov
insl
xor
push
bound
cmpsb
cmpsl
lds
out
jno
into
pop
xchg
add
adc
mov
repz
sti
or
outsb
xchg
inc
xchg
das
mov
shrl
sbb
roll
enter
and
xchg
cmpb
ss
addr16
icebp
and
xlat
ret
xor
or
xchg
pop
inc
xchg
cltd
dec
inc
add
outsb
jne
das
mov
xchg
and
fcmovbe
mov
add
divb
inc
in
jae
adc
scas
ficomps
fadd
out
daa
jae
xchg
jae
cmp
fimuls
cltd
jecxz
or
mov
mov
loopne
mov
lcall
mov
mov
mov
jae
jp
sbb
jo
inc
mov
pop
mov
ljmp
xchg
sbb
ret
sbb
dec
adc
bnd
decl
mov
inc
dec
xor
add
mov
outsl
xor
xchg
rcl
dec
cmp
sti
cs
into
mov
imul
incb
dec
imul
in
cli
lcall
dec
nop
cltd
inc
lret
cmp
ret
push
les
das
imul
sarb
mov
or
nop
negb
xor
cmp
fwait
adc
xchg
push
inc
mov
pusha
popa
mov
clc
sbb
rcrb
cltd
ss
push
xor
xchg
cmp
xor
lcall
out
gs
sub
test
sub
stos
daa
xor
cmp
pop
pushf
or
dec
fsubr
jno
sbb
xor
lcall
dec
and
and
jecxz
pusha
mov
ror
mov
shrl
or
xor
xor
iret
mov
outsb
in
push
aas
imul
fs
es
add
jg
mov
mov
aam
mov
ds
movsb
push
cwtl
int
cwtl
dec
pop
xchg
pop
popf
sub
add
lock
push
xchg
pushf
mov
pop
push
xlat
cmpl
into
xchg
rcl
dec
addr16
dec
arpl
xchg
xor
xchg
clc
add
insb
add
lret
in
xor
or
aas
jne
jle
mov
lahf
mov
in
cmp
push
pop
es
xchg
pushf
cmc
fsub
mov
fisubl
movsb
sahf
sbb
inc
js
dec
add
sti
mov
fmul
cwtl
or
sub
test
dec
push
xchg
push
xchg
shl
fcmove
sbb
mov
pop
out
pop
pop
arpl
dec
sarb
pmuludq
mov
roll
mov
shl
pop
iret
push
add
cmc
cmpsb
clc
push
mov
cmp
xchg
sbb
mov
das
add
or
cltd
cmp
fdiv
mov
xor
mov
frstor
test
movsl
pushf
mov
and
ret
icebp
pop
adc
pop
out
fsubrp
sbb
pusha
test
scas
in
xchg
xor
stc
scas
push
mov
repz
mov
dec
cmpsb
aam
sbb
push
repz
aaa
cmp
clc
dec
cmc
cmp
popf
mov
mov
nop
dec
in
mov
and
aam
iret
adc
jecxz
inc
and
call
iret
mov
test
jb
dec
xor
enter
fnstcw
in
sub
mov
lcall
pop
xor
jae
inc
popa
test
sahf
xorb
or
push
cli
in
test
popf
and
adc
sub
xor
test
cmp
inc
iret
fcmovne
idivb
jne
pop
push
jge
adc
jne
stos
mov
mov
jne
mov
cld
push
fisttpll
loop
mov
pusha
lcall
sbb
int3
or
fcoml
aam
cmp
push
lahf
stos
sub
mov
adc
sub
lea
xchg
adcb
inc
popa
loopne
aaa
das
mov
mov
and
pop
cs
pop
sarb
sti
arpl
push
push
jg
sbb
push
jp
rorb
cs
xchg
int
sub
jae
and
and
add
movsb
mov
or
test
jg
push
inc
cmp
int3
sarb
pushf
aam
lock
gs
loope
loope
ja
mov
loop
rcrl
int3
hlt
mov
stos
jle
sub
add
xor
cmp
insb
push
jge
std
lods
dec
dec
test
popf
in
dec
cmc
mov
movsl
test
sbb
scas
mov
fbstp
xchg
dec
mov
mov
insb
jge
xchg
xchg
pusha
fistps
lret
ds
dec
mov
jnp
ja
in
inc
or
add
xor
push
xor
push
fidivl
push
call
adc
jne
inc
push
test
stos
bound
addl
lods
repz
mov
fwait
xchg
lret
jbe
dec
sub
addl
mov
xor
pop
inc
pop
and
lock
mov
dec
pop
loop
sub
in
xor
xchg
fldenv
and
scas
mov
push
lahf
sbb
call
lret
stos
mov
mov
xchg
inc
rolb
or
addr16
es
div
xchg
sbb
fisubrl
rorb
dec
sti
pop
repnz
push
mov
cmpsb
sbb
pop
adc
enter
idiv
out
pop
fldenv
mov
movsb
pop
subl
jg
lcall
popf
lds
pop
out
xor
mov
ret
sbb
push
sbb
sbb
mov
movsb
in
push
out
fidivrl
out
sbb
cmp
outsb
fdivrl
mov
sbb
push
adc
out
stc
cmpsb
scas
or
das
pop
jo
dec
or
rorb
aad
bnd
sub
push
and
fiaddl
mov
fsubs
and
or
popa
dec
jmp
mov
xchg
push
mov
fwait
push
push
sbb
push
xor
lcall
je
add
imul
xchg
jbe
repz
mov
jnp
pushf
ret
notb
mov
shlb
jmp
popa
push
fpatan
int
sub
sub
in
les
or
jno
gs
inc
adc
pop
ret
xor
in
push
testb
or
pop
xchg
sub
push
cli
stos
push
push
push
inc
push
cltd
pusha
jecxz
test
aaa
sub
fisttpl
adc
jae
jge
xchg
ljmp
sub
mov
xchg
pop
in
mov
outsl
sub
xor
mov
pusha
insl
mov
dec
sub
popa
arpl
and
int
and
addr16
fidivl
cmp
adc
xor
inc
in
in
arpl
push
outsb
push
push
inc
mov
mov
pop
jae
loop
aaa
dec
sti
pop
addr16
stos
mov
mov
pop
stos
cmp
loope
jp
and
or
cmp
add
push
sub
inc
mov
inc
dec
mov
test
dec
jecxz
mov
out
adc
movsl
xorb
inc
cmpb
mov
mov
sub
in
jge
jb
repnz
jbe
sti
cmpsl
inc
cmc
push
ds
lret
sub
mov
sbb
sub
jns
shll
bound
divb
or
mov
int
cmpsl
pop
addb
icebp
sbb
bnd
xchg
xchg
jnp
and
pop
adcl
and
mov
ret
ficomps
mov
push
mov
das
gs
lea
sbb
add
lods
dec
cltd
dec
ret
fstl
rorb
addr16
nop
ror
int3
int3
add
scas
aaa
push
popa
or
jecxz
or
jae
scas
pop
es
rclb
dec
dec
push
add
les
xchg
xor
add
aas
sbb
mov
jmp
xor
out
jge
scas
fisttps
mov
jp
pop
dec
sub
loope
adc
push
popa
inc
and
aaa
sbb
les
inc
adc
pop
cmp
nop
outsb
call
push
sub
sbb
adc
pop
out
push
fs
push
lock
xchg
test
ret
and
jge
sub
data16
or
aas
mov
inc
xor
scas
cmp
in
adc
stos
loop
icebp
push
loope
cmpsb
repnz
aaa
xchg
mov
sbb
and
dec
es
xchg
aas
dec
aas
insl
jmp
dec
mov
popf
add
stc
sahf
rol
arpl
sbb
pop
add
sub
out
push
xchg
outsl
cld
sub
mov
negb
pop
pop
stos
dec
inc
mov
out
and
adc
pusha
sub
mov
test
adc
or
out
outsl
xchg
cmp
and
loope
out
arpl
adc
xchg
sti
lods
in
fwait
imul
subl
cmp
outsb
dec
mov
out
or
dec
ljmp
scas
lods
fsubl
lcall
sahf
jge
je
mov
pop
xchg
fistps
jae
shlb
jae
or
add
test
sbb
mov
in
leave
mov
scas
popf
xlat
lea
fidivs
and
dec
cmp
in
ret
pop
repz
push
adc
inc
arpl
lods
call
pop
aaa
pop
pop
rorb
sbb
mov
in
sbb
aad
aas
mov
out
adc
xlat
mov
push
test
lahf
and
decb
xor
dec
jg
adc
mov
jae
mov
out
leave
adc
mov
fsub
lahf
std
pop
pop
xor
icebp
mul
mov
aam
out
and
les
cmc
les
mov
mov
mov
pop
push
test
mov
mov
adc
fisubrs
mov
popa
jg
inc
add
outsl
into
je
sub
ljmp
pushf
inc
icebp
mov
addr16
inc
sbb
push
mov
mov
and
and
mov
in
loopne
std
lret
test
xor
add
lahf
push
adc
inc
inc
mov
sbb
mov
sbb
test
test
shlb
pop
fidivl
mov
in
xor
xor
dec
ljmp
cmp
pusha
mov
xchg
sub
xorb
mov
mov
push
ds
aaa
mov
dec
ficomps
popf
adc
mov
adc
mov
insl
cmpsl
pop
cwtl
adcb
cltd
pushf
and
into
pushf
jo
add
cltd
cmp
adc
dec
out
cmp
add
aad
or
jne
cmpb
and
shrl
mov
cmp
mov
mov
mov
pop
jnp
ret
dec
dec
inc
xchg
fiadds
out
sub
dec
sti
rcrb
jns
aaa
les
or
push
inc
and
cmp
cmc
adc
daa
out
cmp
and
jnp
sub
out
jo
pusha
std
iret
movsl
jp
mov
repnz
fisubs
xchg
jbe
sbb
xchg
xlat
in
mov
adc
push
stos
into
adc
data16
push
jge
aas
pusha
pop
push
xor
popa
or
dec
mov
es
jns
repz
cli
jmp
ss
cmp
aaa
ficomps
shll
fisttpll
stos
jne
or
mov
sbb
and
dec
cmp
je
call
lea
pushl
sbb
inc
push
push
mov
dec
js
push
push
jnp
test
add
jg
mov
xor
lret
scas
xor
imul
bound
mov
push
imul
mov
dec
cmp
sti
lea
in
and
mov
sbb
adcb
loop
inc
sub
mov
add
ja
xchg
pop
lods
and
out
sub
push
push
push
add
ficomps
std
or
cmp
sbb
hlt
pop
addr16
pop
leave
js
mov
shlb
jmp
int3
cs
sub
ds
push
mov
xlat
add
aaa
or
repnz
mov
lret
aam
lahf
in
sti
dec
rclb
push
pop
and
fistpll
xchg
pop
mov
adc
cltd
lahf
mov
mov
sub
inc
lods
movsb
pop
adc
xchg
dec
daa
ret
lret
and
mov
repnz
pop
and
in
rclb
xchg
dec
mov
mov
out
montmul
cmpsb
add
push
loopne
xchg
imul
dec
and
aad
sahf
cmp
push
decb
jb
cmp
out
sub
sub
test
lea
pop
adc
push
arpl
jno
fstpt
push
scas
xchg
mov
cmpsb
gs
in
lea
es
das
push
fdivl
mov
pop
push
out
dec
aaa
dec
in
or
push
addb
scas
aas
shr
mov
leave
and
rorb
adc
mov
push
dec
xor
sbb
jmp
enter
fisttpll
js
pop
insb
and
and
ss
push
inc
and
push
shrl
data16
hlt
fstpt
roll
mov
imul
lret
dec
mov
jle
sbb
and
orb
xchg
mov
or
into
mov
lret
dec
cld
sbb
daa
or
aad
or
push
cmp
ss
jae
mov
cltd
outsl
xchg
add
aam
or
out
outsl
outsl
jo
stc
std
gs
push
xchg
hlt
cs
xlat
ret
sub
xor
mov
push
cmp
adc
je
movsb
fs
aam
insl
mov
orb
cmpsl
and
scas
push
xchg
pop
push
xor
mov
add
daa
mov
test
sarb
stc
aaa
push
pop
imul
mov
dec
xchg
lahf
mov
test
or
mov
cmp
inc
jl
jo
mov
push
mov
leave
shrl
mov
or
shlb
dec
in
mov
add
mov
imulb
test
push
pop
lea
xlat
enter
xor
inc
mov
sbb
xchg
ret
sbb
repnz
and
mov
fstl
clc
outsl
fcom
jne
sbb
adc
pushf
leave
insb
shrb
inc
push
lods
or
mov
fsubrl
mov
cwtl
or
mov
nop
jecxz
imul
mov
fs
loop
sbb
xchg
cmp
bound
jns
cwtl
loopne
inc
out
xchg
ja
outsl
jge
pop
insb
pop
pop
loopne
aad
enter
inc
push
adc
xchg
fstpt
xchg
int3
dec
or
je
and
mov
or
add
es
imul
or
daa
nop
test
xchg
scas
mov
mov
push
dec
insb
lods
lds
outsl
aam
dec
daa
mov
add
jmp
in
pop
sbb
jg,pt
xor
pop
xor
adc
sbbb
mov
mov
mov
mov
jmp
mov
dec
aam
fwait
pop
lea
mov
inc
and
andb
add
bound
insb
xor
xchg
stos
jmp
cli
xor
add
movsl
aaa
cmp
mov
fstpl
rorl
aaa
xor
mov
jno
loopne
les
push
leave
xchg
sub
jae
xor
sbb
dec
mov
cltd
lds
lea
dec
leave
hlt
jle
je
pop
mov
sbb
add
leave
jge
dec
cmc
stc
in
jle
mov
inc
into
xor
pop
jmp
out
jecxz
or
aas
test
fistpll
xchg
dec
pop
scas
scas
orb
ja
mov
in
sub
dec
aad
cmp
dec
sahf
pop
jns
jl
adc
in
mov
lds
xchg
jo
xchg
mov
out
fwait
decb
pop
pop
je
mov
push
mov
xchg
add
fstpl
and
fucomip
icebp
in
or
cmp
mov
cmp
je
lahf
push
push
cld
xchg
xchg
subl
enter
xchg
lods
jmp
cmp
in
scas
data16
rorl
pusha
jb
dec
lea
pop
or
jno
popa
xchg
mov
lea
repz
in
jg
xlat
imul
or
or
imul
jns
jns
sbb
stc
mov
adcl
push
movsb
addr16
andb
shrl
pushf
xchg
mov
int
push
ret
pop
repz
cmpsl
rorl
ja
repnz
into
push
test
adc
and
push
lahf
ds
adcb
mov
mov
mov
mov
arpl
or
pop
filds
testl
call
jle
xchg
lret
ror
mov
cmp
shl
popa
or
sbbb
sbbl
mov
cmpsl
je
add
divb
mov
stc
cmp
sbb
das
push
iret
mov
xchg
adc
mov
sti
dec
aad
popf
sub
aas
leave
lock
mov
orb
mov
lret
pusha
pop
sbb
dec
into
add
push
addb
lock
ret
mov
sub
cli
mov
dec
lret
mov
insl
xchg
test
aam
xor
inc
enter
pop
adc
sbb
loope
mov
jg
shlb
xchg
inc
imul
push
cmp
nop
lcall
lret
pop
jo
mov
push
mov
pusha
pop
dec
insl
std
les
lods
jo
push
xor
cmp
scas
mov
adc
cld
mov
xchg
add
push
xor
mov
sub
lea
or
xchg
out
pushf
lea
cwtl
ja
es
cmpsl
mov
sub
clc
je
lea
aad
push
std
icebp
pop
in
shlb
ds
enter
mov
imul
aam
and
daa
cltd
clc
inc
cwtl
outsb
add
and
jbe
mov
pop
adcb
xchg
mov
jecxz
pop
pop
and
repz
jp
pop
add
push
orl
movsb
adc
pop
sub
push
sbb
jo
test
aam
and
mov
add
aas
es
cld
or
adc
lds
lcall
xchg
adc
jp
leave
mov
into
sbb
jb,pt
mov
loop
pop
push
cmp
xcrypt-cfb
cmpsl
and
push
pop
or
repnz
or
rorb
test
mov
aas
test
clc
mov
aas
cmc
inc
xchg
inc
pusha
mul
testb
imul
nop
inc
inc
std
cmpsl
xor
sub
push
shr
addr16
mov
notb
mov
lcall
push
inc
repnz
or
dec
scas
xchg
out
xchg
or
jbe
lcall
jp
loopne
lods
jge
pop
test
and
sbb
insl
btr
and
aas
stc
sub
jle
dec
mov
bnd
sbb
nop
xor
mov
pop
dec
xlat
or
dec
sahf
jbe
pop
jmp
data16
push
cmp
das
ret
repnz
dec
mov
test
mov
inc
rcrb
daa
cli
jb
in
pop
stos
pop
jecxz
cmp
jmp
pop
jmp
xor
mov
movsb
jmp
adc
add
cmp
xchg
or
jp
rorb
lcall
cmp
inc
mov
pop
test
sbb
push
in
dec
fcmovnb
arpl
push
sbb
and
shrl
sbb
sub
dec
inc
ret
add
add
outsl
shl
pop
pop
mov
sub
push
push
pop
rorl
repz
sub
cmp
stos
lea
jge
dec
and
xchg
xor
pop
push
cmpsb
das
jo
dec
cwtl
push
adc
mov
pusha
sti
filds
scas
or
pop
jnp
cmc
bound
out
mov
mov
aas
push
xor
xchg
sub
orb
hlt
pop
sub
mov
cmp
arpl
inc
ds
das
incb
xor
je
sbb
adc
inc
adc
sbbl
ss
dec
popf
out
sti
pop
and
mov
lods
pop
inc
movsb
fbld
and
cld
int3
inc
jbe
pusha
std
ss
push
xor
pop
mov
sbb
imul
es
dec
mov
clc
fsubr
pop
mov
nop
out
jo
mov
push
popa
dec
mov
mov
pushf
sub
jbe
pop
push
lds
pop
cld
aaa
test
add
shl
mov
or
jnp
lahf
or
dec
sti
sahf
int3
cmc
mov
mov
cmp
movsb
push
cmp
jae
push
rol
jmp
fidivrs
push
stc
pop
cmovle
pop
pop
scas
mov
xlat
gs
jns
popa
sahf
stc
lock
inc
or
fucomp
and
push
mov
push
dec
ret
or
add
pop
hlt
popa
fbld
adc
cmp
xchg
dec
cmpl
mov
aas
push
jg
jl
adc
pushf
xchg
outsl
dec
pop
mov
pusha
xor
mov
mov
sub
cmpsb
pop
sti
dec
icebp
sbb
lock
xchg
and
ja
testb
mov
cmp
cli
mov
sub
adc
mov
lret
scas
aaa
mov
and
pop
dec
fwait
call
mov
and
out
cmp
add
cmpb
cwtl
mov
pop
cmp
xchg
mov
jmp
jmp
es
cmp
sbb
cmp
test
sub
jb
mov
call
hlt
mov
int
addr16
lret
aam
out
cwtl
inc
push
jge
push
cs
xor
or
js
stc
scas
jne
adcl
jg,pt
outsl
add
dec
lret
mov
ds
lods
lcall
mov
jle
sbb
ret
push
or
test
lcall
push
jno
add
mov
sub
ja
iret
inc
add
push
mov
jl
cmp
scas
decl
pop
or
enter
mov
fistpl
xchg
cmp
add
popa
jg
fldcw
bound
movsb
xchg
mov
lea
mov
xor
adc
cmc
enter
push
xchg
std
and
mov
in
cmp
js
inc
call
mov
pop
xor
add
mov
cmpsl
xchg
js
fldl
or
xor
iret
mov
test
xor
dec
jb
cmpsb
push
and
mov
inc
xchg
mov
test
popl
cltd
insb
out
loopne
mov
inc
fs
cli
cmpsl
popf
mov
fcomi
sahf
xorl
fstl
das
push
cmpsb
lahf
mov
stc
outsb
xchg
xlat
out
mov
jbe
dec
jae
xlat
gs
cld
popa
pop
mov
cmc
insb
loopne
mov
push
enter
data16
pop
out
ss
cmp
mov
aas
shll
rcrl
das
shl
pop
fildl
jne
stc
js
jo
fidivs
xchg
cmp
cld
cld
xchg
or
pop
cmp
sbb
jae
push
les
sbb
and
sub
js
jbe
aad
mov
xchg
cld
aam
leave
lret
mov
imul
pop
xor
sbb
or
sbb
popf
adc
fadds
enter
jmp
cmp
jnp
mov
ret
push
fdivrp
aaa
push
push
push
icebp
repnz
std
cltd
xchg
lds
mov
movsl
dec
pop
xchg
sbb
mov
lret
mov
rcl
pushw
sbb
loope
lock
add
decl
les
xor
dec
test
pop
dec
test
push
ficompl
mov
outsb
lret
rclb
test
in
aad
rcrl
inc
push
cld
jb
pop
add
jnp
sub
out
push
adc
clc
cs
ret
and
outsl
and
data16
add
jne
int
or
or
lret
hlt
sbb
mov
add
les
outsb
aam
fwait
inc
pop
xlat
adc
dec
sbb
xor
les
and
out
push
jg
jae
sub
push
dec
xor
push
stos
xchg
lahf
lods
mov
xchg
adc
or
imul
xchg
mov
jb
mov
call
xor
cmp
mov
dec
inc
mov
das
sbb
or
aas
sub
mov
pop
pop
cli
jl
mov
mov
sti
mov
aad
lock
pop
dec
mov
in
cmpsl
pusha
push
movsl
dec
jne
inc
sub
mov
sahf
pushf
mov
inc
dec
xchg
fnsave
or
jbe
shlb
scas
mov
inc
sarl
sub
lahf
dec
cmp
sbb
mov
mov
add
movsb
push
rcll
xor
rclb
gs
mov
cmc
mov
clc
xlat
mov
mov
fcmovnu
out
add
lret
and
pop
mov
or
or
inc
lahf
divl
pop
xorl
hlt
cmpsl
sarl
loopne
mov
cmpsb
shrb
sub
movsl
sti
shrl
push
lea
xchg
xor
hlt
jl
sub
xchg
clc
dec
es
data16
movsl
test
cltd
mov
mov
ja
int3
pop
lret
popf
xor
mov
shrb
pusha
jmp
xchg
pop
out
mov
test
sub
sbb
imul
jmp
ljmp
sub
push
in
jle
cmp
xchg
pushf
mov
hlt
and
pop
and
fwait
or
outsb
pop
push
adcb
pop
lea
cld
insl
out
int3
mov
ss
int3
scas
mov
pushf
pusha
pop
icebp
mov
cs
cmpsl
pop
insb
or
xorl
in
xchg
or
fbstp
nop
push
aam
sub
pop
in
mov
pop
fmul
sbb
inc
jge
fdivrl
cmp
in
xchg
sub
jno
jnp
lods
orb
in
jge
cmp
dec
pop
repz
cmp
mov
repnz
pop
push
test
push
idivb
popa
xchg
cmp
adc
or
movsb
xlat
iret
push
jp
add
and
lahf
xor
mov
jl
dec
dec
pusha
add
sarl
xchg
scas
mov
ret
xchg
and
testb
repz
push
js
xor
ret
movsb
mov
inc
adc
cwtl
mov
idivl
fs
sub
sbb
mov
and
dec
lcall
dec
test
test
insb
icebp
and
dec
cmp
adc
inc
sbb
add
jl
cmp
add
xlat
and
call
xchg
shl
or
lea
js
dec
jb
inc
addl
jne
push
mov
or
call
xchg
sbb
push
inc
xchg
mov
xor
int
out
mov
nop
arpl
mov
xchg
pop
jae
sbb
jecxz
mov
adc
sbb
int3
aas
inc
out
dec
and
into
add
aaa
pop
rcl
push
mov
sbb
add
push
cmp
cmp
jno
cwtl
jb
std
sub
sbb
hlt
in
addb
leave
push
push
cmc
inc
cmpsl
xchg
fsubr
jmp
imul
push
add
lcall
pop
das
push
and
int3
mov
sub
xchg
roll
sahf
cmpsb
push
in
aaa
repz
xchg
mov
push
or
xchg
push
lock
or
pop
jb
lahf
xchg
leave
cs
xor
rcr
out
lea
jle
mov
sbb
xor
jo
sbb
je
mov
mov
repnz
xor
fmul
sub
pop
mull
shll
inc
cmp
push
in
and
in
inc
loop
cmpsb
into
imul
jg
fisttps
sbb
int
and
sbb
xchg
popa
shl
addr16
ret
pop
pop
sbb
adc
test
xchg
xor
test
cwtl
inc
out
aaa
in
jb
push
mov
lcall
pop
out
mov
sub
push
cmp
rorb
or
pop
fldt
and
loope
test
jb
popf
mov
sbb
mov
add
pop
ret
xor
dec
mov
push
mov
bound
pop
outsb
mov
mov
ret
repz
xor
stos
push
mov
dec
jge
push
jo
insl
cmp
js
sbb
adc
lahf
cmc
xchg
jno
aad
and
stc
iret
inc
jbe
in
xchg
fwait
dec
icebp
mov
aam
jo
nop
pop
xor
out
sahf
xor
movsl
xor
ror
rcrb
popa
mov
xor
fiaddl
gs
jnp
sub
call
jle
imul
lods
js
dec
mov
push
cwtl
ja
add
cmp
push
test
push
or
subl
jecxz
cs
push
sub
push
gs
arpl
insl
dec
inc
xor
loop
pop
nop
fdivrs
xor
lret
push
movsl
cli
cs
inc
lea
mov
fsubrs
aas
stos
je
xchg
cmp
inc
xchg
in
pop
sbb
sub
es
shlb
sub
mov
ret
aas
loopne
pop
push
loope
cli
pop
popf
daa
push
inc
lahf
cmc
pop
bsr
mov
shll
dec
sub
scas
jecxz
aad
nop
push
mov
dec
lea
daa
mov
add
les
mov
ret
outsl
lret
mov
dec
in
push
xor
cmpb
and
call
mov
cld
das
and
push
loopne
fnstsw
mov
loope
test
sub
sbb
push
loop
dec
cwtl
faddl
adc
push
mov
lock
xchg
xor
adc
aad
ja
sahf
add
cli
in
addr16
push
unpcklps
push
xchg
cli
fnsave
xlat
cmp
repnz
jge
mov
lods
inc
flds
lods
inc
adc
or
mov
lahf
je
test
push
jle
cmp
call
jle
test
inc
add
add
aam
cltd
shrb
pop
mov
hlt
mov
adc
es
lcall
ljmp
jne
xchg
addr16
mov
push
cmp
pop
ret
xor
jl
cmpsb
addr16
fidivrs
dec
xchg
inc
sub
xor
aam
shl
in
jns
cs
in
push
leave
bound
push
inc
test
adc
stc
pop
imul
pop
push
andl
pop
or
jge
jo
adc
push
stos
imul
sub
dec
cmp
lahf
repz
add
adc
sahf
or
dec
mov
xchg
mov
cli
sbb
sub
mov
scas
push
and
mov
data16
dec
adc
hlt
sub
sbb
mov
mov
arpl
and
xor
add
mov
nop
and
inc
in
xchg
jge
sub
push
mov
cmc
mov
enter
mov
loop
xor
shlb
fstps
nop
jmp
xorb
loope
mov
adc
push
adc
mov
in
mov
jl
xor
ficompl
js
mov
addr16
adcb
pop
inc
inc
ret
push
repz
inc
mov
imulb
cltd
and
mov
add
enter
lods
sti
or
sub
loop
sbb
cmpsb
enter
test
fst
fistpll
mov
push
in
test
aad
fidivs
ja
sbb
push
mov
loopne
enter
aas
mov
push
into
lds
inc
sub
insb
push
mov
push
cmp
mov
inc
mov
das
leave
sbb
add
test
dec
mov
adc
mov
jae
aad
dec
push
sahf
cltd
inc
movsb
enter
daa
cmp
in
cmp
cmp
test
xchg
mov
orb
int3
ljmp
pushf
ja
jle
mov
xchg
lcall
enter
jb
push
ss
orb
lret
and
imul
call
je
mov
je
mov
adc
cwtl
sbb
test
xchg
xchg
insb
sar
add
jle
dec
rorb
sub
ficompl
push
mov
mov
inc
subl
jge
xchg
push
pop
cmp
add
xchg
xchg
stos
imul
arpl
xor
sub
inc
mov
and
and
sub
popa
fsubs
outsl
incl
or
cmpsl
sahf
or
xor
mov
ret
xor
fldenv
push
mov
in
clc
test
pop
shlb
ficompl
mov
mov
mov
push
sub
xor
sbb
ret
cli
in
or
mov
aaa
clc
loopne
fdivrl
repz
dec
call
xchg
iret
movsb
fdivrl
addr16
jge
rcl
jecxz
hlt
adc
xlat
sub
test
es
test
push
mov
scas
adc
jmp
jb
mov
std
push
lock
pop
sub
add
jl
xor
int3
not
daa
xchg
pop
fldcw
fdivs
jno
mov
lret
adc
push
test
repz
ds
or
popf
sub
out
jecxz
cmp
sti
out
xchg
test
fwait
mov
in
push
sub
ljmp
pop
jge
scas
push
in
fwait
call
jo
cltd
rcll
inc
je
fistl
mov
jle
jae
insl
jp
xchg
lcall
movsl
adc
dec
sbb
push
repz
dec
arpl
add
test
pop
and
jb
rcl
and
and
fwait
add
fidivrl
int
cmp
and
inc
mov
inc
mov
mov
outsb
iret
in
sbb
mov
lods
dec
adc
das
mov
ljmp
dec
jnp
inc
test
add
mov
mov
jge
sbb
mov
arpl
loop
je
gs
sbb
outsb
adc
sbb
in
xor
pop
fmuls
lea
push
cmp
dec
lea
ss
insl
add
xchg
ret
rorb
add
pop
call
lods
add
pop
mov
jp
sbb
sbb
jo
insb
dec
in
nop
push
jno
adc
sub
mov
insb
sub
sub
cmp
push
mov
lods
jmp
lea
mov
mov
dec
mov
mov
mov
testb
add
and
daa
jg
or
pop
and
imul
sarb
roll
sbb
mov
test
ljmp
mov
pop
dec
mov
out
sbb
sub
push
push
xchg
divps
jmp
inc
inc
jmp
pushf
xor
das
or
adc
pop
mov
pushf
pop
popf
xchg
test
sahf
push
jge
adc
add
add
adc
mov
cltd
imul
adc
adc
sbb
xchg
lahf
mov
mov
movsl
test
and
std
adc
xor
push
or
into
cmp
cmp
mov
mov
mov
xchg
lcall
sub
sub
popf
mov
dec
lret
pusha
push
mov
inc
and
mov
mov
sub
in
imul
pop
test
loopne
js
fcoml
mov
mov
shrl
mov
cmpsl
ja
cli
mov
mov
sbb
lret
in
jno
dec
xor
test
cmp
repz
or
test
sbb
pusha
sbb
rcrb
cmpl
fstl
lret
mov
aas
and
adc
sbb
jmp
cmp
sbb
adc
add
pushf
xadd
cld
xchg
in
idivb
mov
ljmp
push
xchg
adc
mov
sbb
lret
mov
fwait
lock
jbe
in
mov
rorl
repz
cltd
or
imul
mov
jne
jmp
aam
cmp
sbb
and
daa
and
inc
fldcw
lea
push
stc
mov
sub
mov
shrb
mov
xor
mov
inc
rcl
in
andl
jns
mov
mov
scas
stc
xchg
sub
stc
pop
int
clc
xor
cs
jno
add
cli
xchg
jno
pop
lea
inc
gs
fwait
out
pop
sub
and
popa
push
loop
xchg
adc
cmp
dec
pop
rcrb
divl
cwtl
xchg
cs
jmp
jecxz
je
mov
lock
fisubs
shr
scas
sub
insb
punpckldq
xor
sbb
insl
xchg
je
jl
les
ret
lods
clc
mov
mov
mov
add
adc
scas
inc
sti
aad
js
jl
and
mov
sti
push
iret
iret
pop
daa
push
loopne
hlt
adc
mov
jo
arpl
dec
ja
cmp
rcrl
jo
cli
dec
dec
sbb
jg
cmc
jne
lcall
cli
mov
loopne
sub
popf
stos
into
inc
hlt
mov
mov
insb
adc
sub
bound
les
mov
pushf
bound
iret
adc
pop
pop
outsl
cmpsb
roll
lret
sub
push
fnstenv
mov
pop
stos
outsl
sahf
jl
loopne
repz
arpl
cmp
jb
jne
mov
inc
daa
mov
xchg
mov
jg
mov
or
repnz
inc
stc
sub
popf
lcall
mov
xchg
stos
xchg
in
stos
roll
add
inc
clc
sub
bnd
jne
jge
pusha
pop
ret
xchg
push
inc
stos
cmp
cwtl
jp
mov
arpl
ret
cld
jnp
mov
rcrb
push
lods
in
sub
arpl
enter
sarb
cmpl
push
std
cs
jae
loop
jne
enter
pushf
adc
mov
sub
repnz
dec
movsl
rcrl
and
xchg
insl
xchg
lock
fldt
pop
jnp
push
or
mov
xchg
mov
push
sub
cmp
insl
sub
sbb
cli
fnstcw
test
and
call
lea
sbb
and
mov
mov
mov
sub
rcl
rclb
jp
inc
xor
xor
or
imul
pop
sbb
xor
idivb
repnz
sub
mov
int3
in
dec
dec
lea
fmul
std
lds
test
xchg
adc
lods
jl
pop
sbb
pop
mov
inc
push
aad
mov
mov
jne
das
cmpsb
cmp
mov
les
fstps
push
cmp
mov
lahf
jecxz
out
mov
imul
pop
das
xor
insl
xor
inc
sub
mov
cmp
push
mov
in
or
jo
or
stos
rcrl
mov
je
xchg
pop
lock
mov
mov
jnp
sti
lods
int
push
lods
sbb
mov
inc
in
jge
jmp
je
movsl
or
xor
push
pop
push
cld
jecxz
ss
and
inc
js
insb
lods
shrb
pop
scas
mov
pop
cwtl
sub
loop
in
cmpsl
fwait
pop
add
xchg
mov
adc
push
scas
or
push
adc
fnstsw
xor
popf
and
ret
sbb
add
or
daa
sahf
jb
subl
cmp
std
cli
dec
mov
xchg
rcrl
idiv
int
push
popa
stc
mov
std
sbb
mov
lds
adc
in
iret
xchg
sub
add
pop
sarb
test
es
cmpl
push
sub
mov
lret
imul
lahf
clc
xchg
mov
fwait
fwait
adcb
push
lds
mov
jle
inc
and
inc
cmc
loopne
pop
mov
jl
add
call
xor
test
faddl
push
jbe
push
aad
repz
neg
rorb
pop
mov
shrl
pop
stos
sbb
aas
dec
cmp
sahf
push
adc
mov
jecxz
outsl
sti
mov
push
mov
add
xor
mov
movsl
dec
imul
test
push
pop
sbb
mov
and
lcall
testb
and
add
push
jge
daa
lret
aad
daa
pop
adc
pop
sbb
adc
pop
repz
out
fidivrs
sahf
pop
je
add
rcr
call
shlb
pop
pusha
mov
fucomi
repnz
fcmovb
xorl
and
pop
mov
and
mov
sub
adc
lahf
mov
mov
pop
jae
pop
enter
call
dec
fiadds
ja
scas
ret
mov
imul
ss
aad
or
enter
test
mov
or
fwait
or
sub
int
sub
adc
jnp
or
xor
lods
test
arpl
std
and
mov
inc
mov
scas
test
inc
add
mov
cld
cmc
sti
data16
leave
sarb
xchg
insb
jp
mov
cld
and
push
mov
outsl
test
mov
push
out
aas
fs
xchg
ja
jmp
imul
and
or
ds
dec
sbb
pop
stos
rcr
dec
test
mov
rorb
or
xor
cwtl
fisubrs
dec
push
push
cmpsl
adc
xor
idivl
xchg
ret
lds
ret
xchg
cmp
jae
loop
sub
xor
sbb
popa
in
insl
jge
std
aam
xor
in
cmp
or
cmp
iret
pop
mov
lds
out
ja
test
call
fcmovnb
xchg
jnp
push
test
cld
or
pop
jb
ljmp
cmp
outsb
mov
xchg
sbb
lahf
pop
outsl
jle
shrb
push
xlat
call
test
add
fidivrl
lods
sub
push
lret
repz
mov
ret
push
popl
mulb
arpl
sbb
mov
dec
rcrb
dec
imul
inc
fadd
shll
iret
jge
push
scas
pop
mov
adc
mov
mov
push
xchg
imul
inc
subl
inc
scas
cli
cmpsb
shll
cmp
into
xor
dec
jne
sub
leave
add
test
in
jne
inc
inc
mov
jecxz
test
mov
aaa
or
and
dec
leave
xor
fiadds
mov
stos
gs
sahf
cli
jl
testb
adc
shr
lods
sbb
fucomip
das
mov
pop
popf
das
enter
jl
std
pop
xor
pop
lock
fcomi
mov
cs
mov
lahf
mov
push
pop
in
je
iret
rol
sub
scas
sbb
clc
fsubl
push
adc
pop
sti
aad
mov
push
inc
push
sahf
loopne
jns
out
or
mov
xchg
ds
add
data16
xlat
in
pop
sbb
push
mov
lahf
dec
mov
shlb
inc
and
jns
rolb
je
xchg
xchg
addr16
cs
enter
mov
insb
dec
push
loopne
fldl
or
xlat
mov
insb
rclb
push
sub
push
or
add
lods
cmpsl
lock
sarl
stos
out
xchg
out
lds
mov
mov
sarl
int3
ja
mov
fcomi
nop
scas
in
lods
adc
lret
cld
cli
jmp
imul
xchg
jl
call
es
std
mov
inc
and
shrd
fidivs
test
lods
js
xchg
ja
jae
pop
adc
rclb
repnz
lock
adc
shlb
push
popf
cmp
mov
add
std
dec
stos
and
mov
jo
adc
dec
mov
js
mov
imul
sbb
daa
inc
pop
mov
jns
arpl
pop
push
hlt
adc
dec
or
shl
in
and
popa
push
add
mov
outsb
stc
dec
mov
mov
cmp
out
cmpsb
push
stos
je
xlat
inc
in
adc
inc
lahf
loopne
out
push
adc
sbbb
push
in
add
fs
loope
cltd
sbb
hlt
add
jge
ret
ret
out
add
roll
sahf
xchg
dec
pop
sti
jecxz
pop
xor
addl
and
movsb
mov
adc
xorb
enter
nop
or
push
mov
les
or
xchg
add
sbb
incb
daa
xchg
add
jmp
push
imul
sub
push
icebp
scas
test
mov
orb
pop
add
iret
add
and
cmp
stos
divl
xorb
or
xor
loope
fnstcw
loop
jp
adc
popf
mov
fisubrs
pop
jnp
mov
xlat
mov
jmp
xchg
mov
pop
scas
xchg
pop
xor
xor
ret
jmp
pop
fildl
jmp
stos
pop
mov
push
lcall
inc
in
jns
jmp
add
scas
mov
cmp
clc
mov
sbb
push
jb
pop
aam
fdivp
cmp
adc
push
mov
imulb
shll
out
les
jnp
fs
lock
sbb
mov
pop
sbb
add
ja
mov
int
es
inc
sbb
jbe
mov
cltd
stc
aas
stc
mov
sti
jns
stos
ds
js
pop
rol
aam
adc
sub
push
sbb
fs
xor
in
ja
dec
movsb
sbb
repnz
xor
ljmp
testb
pop
iret
mov
jle
stos
and
pop
lahf
ljmp
lock
pop
mov
adc
rcrb
cltd
jb
jb
pop
push
sbb
jg
push
xchg
mov
jne
hlt
rol
sarl
xor
aad
pop
mov
fidivrs
ljmp
into
xchg
jecxz
mov
push
loope
mov
popf
push
pop
jb
lea
out
inc
mov
aaa
add
jo
loopne
pop
andl
or
dec
gs
mov
and
cltd
std
repz
ret
ja
shlb
imul
les
insb
push
mov
repnz
ret
ffree
jp
push
mov
ss
cmp
repnz
mov
rcrl
imul
ds
mov
bound
adc
mov
enter
xchg
xchg
fcomps
hlt
add
leave
pusha
into
cmp
fwait
rcrb
sbb
cmp
pop
or
pop
cmpsl
lcall
xchg
nop
mov
mov
pop
add
jge
stos
sbb
jecxz
xchg
xchg
cmpsb
jmp
fdivrl
mov
jmp
shr
or
arpl
lods
jnp
cmp
addr16
aas
mov
sbb
cmp
jno
and
clc
jge
and
in
mulb
daa
aad
push
mov
lret
adc
rorb
sbb
sbb
mov
pop
sldt
ja
cli
sub
lods
lods
mov
ja
cmpsb
mov
pop
dec
imul
cmp
inc
sub
cmc
pop
pushf
dec
cs
inc
out
and
mov
xor
ljmp
inc
adc
ja
notb
adc
mov
mov
test
inc
mov
bound
inc
cmpsb
xlat
rep
jl
add
adc
xor
lret
sub
and
push
push
pop
lcall
sub
dec
sbb
cmp
cmp
cmp
and
out
int
push
mov
dec
mov
out
cmp
jle
shr
out
add
stos
adc
adc
sbb
repnz
sub
rcrl
sub
push
je
jbe
call
pop
testl
xor
dec
inc
cmpsl
out
mov
jns
out
and
cmc
fs
and
in
movsb
jl
mov
sbb
lock
mov
xor
cmc
in
nop
dec
add
int3
mov
test
loopne
ljmp
iret
rol
xor
push
pop
or
fildl
loope
stos
adc
in
and
xchg
sub
cmp
adc
nop
mov
sarl
enter
pushl
cmpsb
and
test
adc
fldz
push
nop
xor
inc
and
sbb
repnz
mov
mov
xor
in
out
pmullw
loope
mov
cmp
rcll
inc
xchg
cmp
sub
ja
pop
mov
mov
loope
sbb
loop
aaa
inc
xor
pop
xchg
dec
icebp
jb
ffree
cmp
aaa
loope
xchg
lcall
ja
mov
add
add
aas
xchg
insl
lds
fistps
sub
iret
jl
fimull
xchg
dec
fstps
mov
fcmovb
fsts
popf
lcall
inc
xchg
mov
fimull
addr16
pop
and
repz
aad
add
dec
dec
nop
or
mov
jae
inc
mov
lods
mov
add
sbb
mov
jge
pop
mov
sti
aad
popl
jg
push
and
lcall
xchg
out
push
ret
inc
mov
test
stc
push
cltd
lock
repz
je
stc
ljmp
xchg
test
cmc
iret
mov
cli
outsb
mov
jnp
lea
or
pop
sbb
fwait
adc
addr16
fidivrl
jbe
fdiv
inc
push
push
push
adc
cltd
dec
dec
dec
or
out
mov
inc
mov
in
jns
in
push
imul
shll
xlat
in
outsb
sbb
dec
mov
scas
imul
movsb
gs
jb
aaa
sbb
cmp
or
jle
xor
sbb
dec
mov
xor
cmp
movsb
outsl
movsl
jmp
insb
add
in
push
and
push
movq
jbe
mov
pop
cmp
fcom
push
pushf
jns
insw
das
pop
leave
mov
arpl
sbb
imul
add
add
js
in
aas
cmc
mov
jo
aas
sub
add
shll
into
pop
lds
aad
or
add
jmp
or
xlat
cmp
mov
scas
xchg
mov
push
loop
and
sbb
push
sub
jae
ljmp
xor
lods
and
outsb
push
outsl
sub
test
mov
jns
test
add
les
or
popl
sub
loop
sub
and
add
cmp
sub
inc
mulb
inc
and
dec
int
push
sbb
shll
cli
xor
push
in
sbb
sbbb
push
mov
mov
push
xchg
dec
js
loope
jecxz
imul
stos
xchg
mov
lea
add
or
pop
mov
mov
cmp
stos
data16
iret
ret
lds
es
inc
adc
aam
scas
cmp
mov
test
add
fsubs
into
and
dec
pop
pop
jp
adc
xor
jl
mov
jecxz
adc
dec
xlat
shlb
and
xchg
mov
stos
jg
and
insb
add
rclb
sub
cmpl
aas
mov
xor
sbb
jge
mov
enter
jns
push
add
or
or
mov
or
pop
adc
sbb
cli
mov
mov
adc
mov
push
hlt
adc
add
adc
loop
out
mov
lret
pop
dec
outsl
dec
std
xchg
sbb
sub
loop
adc
xor
xchg
cmc
push
fdivl
mov
jae
and
out
push
mov
loop
xchg
call
xlat
mov
mov
mov
ss
pop
pop
rorb
jns
xor
add
jnp
in
mov
mov
lea
cmpsb
jge
aam
rcrb
fsubr
mov
adc
icebp
xlat
dec
or
fdivs
fisubrs
iret
mov
cmpsb
or
pop
pop
in
jmp
lret
mov
mov
cmp
in
fwait
outsl
sbb
lods
aaa
mov
dec
cmp
les
outsl
loope
or
dec
mov
sub
test
sbb
jnp
mov
orl
adc
sub
ds
sbb
lods
mov
andl
pushf
fistpll
inc
push
ja
xchg
cmpsb
or
or
pop
or
sub
push
test
cld
adc
loop
push
sbb
icebp
pop
ret
int
mov
sar
fcmovne
leave
dec
mov
xchg
in
out
movsl
and
mov
pop
das
push
mov
std
movsb
jno
dec
add
xchg
insl
cmp
sahf
roll
jg
aam
dec
pop
mov
jp
faddl
das
push
xchg
sub
scas
test
adcb
push
xor
xor
out
or
imul
sbb
movsl
test
pop
pop
insl
mov
jbe
adcl
xlat
push
sbb
pop
stos
or
pop
dec
xchg
nop
cmp
movw
or
dec
stos
mov
pop
jle
in
int3
push
xchg
cmpsl
pop
push
adc
jns
addr16
pop
sub
mov
mov
ret
shrb
sub
stos
push
divl
fs
xchg
das
pop
inc
shll
enter
push
imul
jg
es
add
mov
rcrl
fdivs
add
sub
inc
nop
mov
rcrb
sti
out
fwait
test
cmp
scas
pop
xlat
jo
push
orb
xor
inc
sbb
mov
xor
mov
mov
cmp
repz
roll
loop
roll
pop
and
imull
pop
and
jno
cs
dec
jg
fadds
dec
mov
push
push
ficoms
or
fisubrl
mov
cmp
sub
popf
dec
stos
push
add
cmp
pop
pop
aas
jb
testb
movsl
int3
pushw
je
cmpsl
xor
test
gs
sbb
hlt
cld
jle
jb
clc
push
aam
pop
aas
jae
les
xchg
arpl
nop
mov
rcl
fsubs
fucomp
sbb
push
mov
gs
sarl
cltd
adc
inc
es
jno
push
loopne
in
dec
mov
mov
and
aaa
rcll
dec
and
push
push
jl
test
scas
dec
in
fistpl
aam
jno
and
xlat
lahf
push
popl
movsb
mov
cmpsl
add
out
movsl
inc
cmp
mov
loope
scas
in
test
fldt
das
dec
add
jmp
out
fisubs
iret
sub
push
insb
stc
inc
sbb
cmpsl
shll
and
in
outsl
repz
inc
je
xchg
push
mov
fdivrs
leave
popf
sub
mov
inc
push
mov
add
inc
add
aas
scas
mov
jecxz
int
out
test
xor
lds
add
in
mov
xchg
into
test
scas
pop
lret
shll
xor
aas
mov
ljmp
inc
xchg
mov
mov
loop
pushf
push
shlb
outsl
aad
xchg
push
out
hlt
sbb
or
xchg
roll
lahf
and
push
push
or
or
lock
arpl
add
subl
cmp
subb
ja
ret
out
dec
sti
repnz
jae
add
stos
jmp
and
push
mov
hlt
xchg
mov
mov
pop
xchg
push
dec
add
mov
leave
insl
cmp
push
lea
dec
ret
test
mov
pop
pop
jo
shlb
cld
xchg
lods
jp
mov
mov
sbb
pop
or
aam
xor
into
jo
movsb
push
sub
mov
xchg
inc
add
outsb
pop
aam
shl
out
pushf
mov
pop
push
testl
or
jle
loop
pop
cmp
mov
add
lods
and
ret
sbb
scas
or
inc
xor
push
gs
xchg
mov
not
fidivl
js
and
pop
inc
inc
sub
and
add
test
jbe
mov
and
hlt
or
popa
push
scas
xor
xchg
jnp
or
sbb
in
aam
push
add
cli
mov
sub
jmp
fdivp
adc
mov
cmp
add
fmull
cmp
inc
sahf
mov
push
xor
xor
dec
pop
mov
mov
lret
in
sub
push
pop
and
ja
cmp
cmp
or
loop
shr
jp
and
xor
xchg
hlt
loop
dec
mov
inc
gs
fisubrs
mov
push
out
pushf
push
leave
aam
data16
fs
test
and
cwtl
jecxz
test
cmc
imul
repz
pushf
cwtl
data16
dec
push
pop
out
push
push
aad
push
idivb
mov
fnstenv
imul
movsb
subb
lcall
jne
sti
dec
insb
imul
inc
pop
loopne
fsubrs
cld
cmp
movb
push
add
sbb
scas
mov
cmpsl
and
negl
test
jg
sub
inc
aam
pusha
mov
pop
adc
sbb
mov
out
pop
jbe
xor
fstpl
push
outsl
xchg
faddp
mov
inc
lcall
dec
andb
dec
inc
sub
jne
imul
lret
mov
ret
mov
xchg
fsts
stos
movsl
xchg
dec
push
xchg
test
aam
jecxz
fadds
fwait
lods
cmpsl
jge
mov
and
push
out
iret
fwait
xor
pop
fwait
mov
mov
aas
jb
out
sar
adc
or
inc
pop
lcall
mov
jbe
std
out
cld
push
icebp
popf
push
jnp
pusha
xchg
adc
insl
cmp
mov
cltd
clc
js
pop
scas
loope
out
mov
sbb
xchg
or
push
mov
loope
push
mov
mov
dec
fidivrs
shl
and
adc
loope
push
into
mov
mov
push
sbb
add
test
scas
mov
nop
push
insl
or
inc
cli
scas
test
test
lea
inc
imul
ja
mov
shl
add
fsubl
jg
lret
ljmp
jle
inc
outsl
rsqrtps
mov
enter
push
mov
mov
call
fcoml
push
jecxz
sarb
fidivrl
rol
sub
mov
xchg
sahf
push
inc
js
jnp
es
dec
fdivrs
xor
dec
rcrb
lcall
bound
mov
imul
or
icebp
cwtl
push
inc
or
fiaddl
popf
scas
dec
arpl
ret
pop
out
cmp
mov
imul
push
cmpsl
push
call
sbb
xchg
mov
push
adc
cmp
sub
sbb
mov
inc
mov
adc
mov
test
mov
dec
jmp
and
insl
xchg
adc
and
es
inc
cmpsb
call
mov
adc
inc
cmpsb
mov
ja
sbb
lock
sub
mov
push
int3
in
ss
gs
xchg
mov
fcompl
and
xchg
add
add
dec
xor
mov
negl
sub
fistpll
or
fiadds
or
mov
xchg
lods
mov
xor
pop
adc
cmp
or
ret
ja
add
dec
in
pop
mov
mov
loope
std
mov
call
imul
popf
push
jge
inc
sbb
fcmovnbe
xor
in
pop
in
lcall
fbstp
das
into
pop
push
mov
out
out
lret
mov
es
mov
insl
faddl
push
stos
cwtl
insb
pusha
daa
rclb
inc
mov
sahf
dec
cmp
sub
add
push
stos
jecxz
cwtl
cmp
arpl
jbe
or
in
rorb
test
dec
mov
push
push
jnp
ljmp
aam
fldcw
and
ss
jnp
mov
mov
es
test
mov
mov
andl
sub
jo
test
or
or
push
leave
popf
fimull
mov
mov
xchg
sbb
orb
pop
push
jmp
loope
int3
inc
pop
pushf
cmp
les
xchg
cltd
dec
adc
push
lock
in
ja
cld
cli
rcrl
adc
xlat
mov
mov
mov
and
leave
mov
xchg
wbinvd
into
sub
cmp
cmp
inc
mov
mov
shl
adc
test
in
mov
in
movsb
mov
inc
mov
jns
cmpsb
stc
jg
and
nop
sti
mov
push
test
push
push
sbb
or
jl
jp
inc
adc
imul
jecxz
mov
roll
cmc
sbb
xchg
and
pop
jecxz
dec
testl
in
rcrl
xor
mov
ret
mov
sub
bound
jb
inc
je
jne
cmc
cmpb
jmp
pop
xor
inc
or
mov
loop
dec
adc
ljmp
mov
inc
insl
push
jg
sbb
stos
gs
dec
les
sub
out
movsl
xchg
mov
out
call
cltd
mov
jo
mov
mov
mov
xchg
inc
flds
pop
cmp
pop
fdivl
add
ss
mov
xor
test
fidivs
shrb
mov
addb
xor
xchg
jg
jne
dec
inc
xlat
adcl
dec
jb
cmp
pop
jl
pop
add
dec
idivb
ljmp
fsubl
or
cmp
int3
mov
xor
test
and
ds
dec
ss
or
jae
jns
xchg
fwait
sub
xchg
cld
aam
pop
cs
mov
gs
insb
ret
lods
cli
xchg
fucomi
clc
iret
mov
cwtl
mov
lahf
div
or
imul
daa
loope
lret
iret
std
popf
test
xchg
inc
aad
ficomps
mov
add
add
imul
decl
shrl
add
cmp
pop
mov
inc
cs
into
pop
cs
pop
or
subb
mov
aaa
or
std
fcomp
scas
mov
jbe
insb
sbb
outsb
pusha
sub
xchg
xchg
push
or
aad
push
push
xor
xchg
xchg
xor
lret
sbb
mov
insl
stos
ja
fsubs
dec
xor
or
xchg
lods
and
sub
inc
fs
xor
hlt
outsb
pop
sbbb
sbb
jge
addr16
push
mov
dec
scas
fldcw
test
cmpsl
inc
and
lock
pop
cltd
popf
xchg
pop
sbb
xchg
imul
addr16
shll
dec
fistps
fistpll
xor
sub
hlt
mov
or
stc
iret
jae
std
mov
push
mov
in
dec
xor
sahf
dec
clc
es
or
jge
shlb
fmull
dec
movsl
push
scas
pop
jp
mov
mov
jns
inc
xor
dec
leave
add
stos
adc
in
or
adc
pop
mov
jo
iret
movsl
inc
xlat
addr16
inc
xchg
ret
jbe
clc
ret
jge
gs
mov
jmp
cmp
adc
cmpsl
xchg
cmpb
test
mov
jno
stos
sub
fidivl
test
pop
scas
and
loope
sahf
xchg
lock
outsb
jl
xor
movb
daa
inc
pop
or
push
aaa
daa
xor
sahf
shr
data16
cmp
adc
mov
jmp
mov
lock
aad
sbb
adc
pop
int
sbb
jle
cld
popf
jae
xorb
cmp
negb
push
subb
call
and
lret
pushf
mov
pxor
xchg
sub
or
out
loope
sbb
adc
stos
and
jb
out
movsb
fcomps
nop
out
push
cmp
jg
push
rorb
cmp
movsl
push
scas
adc
and
cmc
or
test
clc
push
mov
jmp
dec
inc
lods
bound
icebp
daa
lahf
pusha
jle
add
push
xor
lea
call
mov
mov
pcmpgtd
andb
cmp
bound
jg
shrd
push
sub
push
aad
cmpsl
cmp
fdivl
fistpll
movsl
arpl
add
dec
or
movsb
je
jecxz
pop
test
sub
xchg
pop
inc
mov
sahf
jo
clc
cmp
cltd
lods
mov
mov
aad
push
ret
push
push
inc
add
negb
data16
mov
mov
push
jbe
shr
insl
sub
lds
test
pusha
fs
int
cwtl
test
insl
push
jg
xor
jb
cmp
cwtl
std
mov
out
mov
das
gs
sub
inc
iret
pop
cltd
add
mov
arpl
pop
ret
fmull
inc
pop
lret
and
jl
cltd
cmc
xchg
dec
mov
insl
cmp
ret
jle
bound
cmp
mov
mov
push
cmp
mov
mov
imul
push
and
and
sbb
xchg
movsl
xchg
sti
loop
push
lods
dec
test
imul
sbb
ja
loop
scas
pop
add
call
jae
cld
cmp
jae
dec
out
sbb
mov
popa
ljmp
ja
test
fsts
pop
or
daa
xorl
mov
nop
repnz
shr
cs
mov
ficoms
pop
inc
out
loope
sub
adc
repnz
xchg
sbb
ds
in
outsl
mov
lods
mov
sahf
xor
mov
adc
stos
lret
and
pop
sub
movsl
repnz
mov
mov
int3
jne
adc
add
mov
test
adc
sub
jnp
cld
mov
inc
sbb
je
nop
ljmp
addr16
icebp
adc
cmpsb
mov
xchg
inc
pop
cld
add
mov
or
and
pop
push
jmp
mov
fwait
daa
xor
mov
dec
cwtl
push
aam
inc
pop
stc
pop
sub
test
mov
dec
and
stos
ljmp
mov
push
insl
and
xchg
push
and
inc
adc
fsts
popf
cli
aam
cwtl
mov
fsubrl
out
pop
loope
aaa
out
repnz
int3
aam
iret
hlt
sub
shll
inc
imul
dec
cld
jo
into
mov
adc
aad
pop
scas
and
xchg
mov
cld
movsb
loopne
pop
mov
cmp
out
sub
inc
mov
pop
pop
std
test
inc
test
int
mov
sub
or
push
inc
cmp
jbe
testb
mov
mov
mov
mov
inc
insb
push
ja
mov
push
cli
jle
lea
cli
ss
xor
sub
out
aas
pushf
ss
into
adc
stos
shll
loop
or
mov
fs
scas
push
daa
adc
pop
pop
mov
out
sbb
arpl
loop
jb
aaa
das
xchg
iret
inc
mov
fisubrl
or
icebp
push
imul
test
je
jmp
push
inc
stos
add
cmp
je
movsb
mov
nopl
std
sub
inc
xor
ja
fcompl
rol
sbb
or
test
mov
mov
cmp
push
int3
add
data16
cmp
nop
cs
shrb
ja
in
sub
cli
sbb
mov
ret
int
movsl
mov
or
popa
test
mov
or
outsb
out
xchg
adc
or
push
pop
cmpsl
sub
xchg
gs
int3
mov
add
jg
push
pop
clc
sbb
cmpsl
out
paddb
mov
push
cli
pop
sti
loopne
jmp
cmp
cmp
mov
ficoml
rcrb
push
lret
icebp
shll
push
movsb
xor
adcl
enter
adc
ljmp
cmpsl
adc
or
mov
jne
pop
imul
jge
xchg
aas
ja
push
inc
cmpsb
std
cs
xchg
push
sub
push
sub
aam
notb
out
fdivrs
jno
bound
cmp
je
add
mov
sahf
sub
or
nop
insl
imul
jp
fwait
jl
inc
cmp
mov
iret
pop
movsb
outsb
loop
sahf
inc
push
dec
cmpsb
mov
enter
inc
cmp
dec
mov
mov
sub
jnp
dec
dec
test
popf
lods
mov
hlt
dec
and
lods
mov
adc
xchg
xor
jno
mov
sbb
std
aaa
jecxz
sub
mov
xor
jne
cmp
and
or
das
xchg
cmpsb
dec
and
jle
dec
jl
pop
test
aam
sbb
cwtl
push
sbb
cld
addr16
repz
in
jbe
das
addr16
js
aad
fs
ss
inc
mov
in
add
push
arpl
jmp
and
sub
xchg
cmp
push
sbb
out
dec
add
mov
mov
testl
nop
dec
sbb
pop
or
sahf
stos
sub
pop
or
test
mov
loope
xor
dec
in
movsb
pop
filds
xor
cmp
add
cmpsl
pusha
ja
xchg
mov
xlat
gs
pop
mov
push
aaa
dec
setb
mov
nop
call
or
sti
pop
xor
test
mov
sub
jecxz
addr16
movntq
dec
jge
add
bound
pusha
and
pop
leave
addb
rep
inc
pop
popa
loop
cltd
shrb
cmp
mov
and
sti
jle
popa
inc
sahf
pop
shl
imul
push
movsl
std
add
xor
ljmp
mov
add
sbbl
push
imul
adc
pusha
push
insl
stos
dec
inc
imul
out
imul
nop
sbb
mov
das
xor
shr
std
outsb
fistpl
xchg
jle
nop
rolb
mov
push
cmc
push
ljmp
mov
push
sub
push
fs
movl
mov
loope
jo
jne
add
pushf
push
stos
pop
pop
pop
adc
jae
daa
subl
push
push
cmp
loopne
ss
mov
out
inc
je
pop
clc
dec
cltd
pusha
ret
mov
das
sub
mov
daa
push
fsubrl
movsb
ss
jno
pop
inc
in
shrd
fs
inc
es
add
sahf
sbb
in
and
lods
sbb
add
stos
xchg
dec
filds
or
outsl
mov
inc
fmul
or
test
mov
xchg
sub
push
cs
mov
sbb
cmp
and
add
fcompl
in
add
loope
mov
mov
cmpsb
leave
jae
shll
cmp
movsl
jl
mov
push
pop
into
and
xchg
mov
fmuls
mov
xchg
scas
jecxz
fmull
and
fcmovb
and
stc
pop
and
sub
and
jne
sbb
dec
inc
mov
add
out
addr16
ja
cltd
sub
push
arpl
adc
pop
jno
jo
mov
push
cwtl
jb
loopne
ret
nopl
xchg
sbb
sub
jns
xor
cltd
mov
enter
mov
jp
pop
lods
pusha
fildl
popa
push
jmp
fistpl
bound
lret
mov
or
push
bound
aad
jnp
mov
dec
xchg
insl
push
push
bound
test
pop
clc
stos
sbb
and
jecxz
push
sub
inc
test
test
mov
dec
push
enter
add
sti
sbb
jecxz
or
sbb
mov
xchg
add
insl
test
das
popa
sbb
div
cld
outsl
inc
mov
aam
adc
sbb
fmull
fsubrl
leave
push
sbb
sub
xor
jge
inc
out
jecxz
cmp
daa
test
inc
mov
repz
add
push
xor
xchg
nop
jnp
and
cmovge
cmc
or
dec
mov
jb
jne
or
hlt
cmp
shrb
xor
out
jns
subl
ss
pop
addr16
sbb
pop
and
xor
mov
mov
loope
das
adc
stos
lret
add
rcl
daa
outsl
push
int3
mov
iret
aad
push
jp
mov
js
add
jb
mov
mov
daa
mov
iret
out
jnp
jp
cmpsb
cli
addl
sti
loope
jb
inc
fs
dec
popf
jecxz
cmc
lretw
test
in
popf
or
in
push
mov
lock
adc
dec
mov
mov
addr16
or
cmp
out
xor
xchg
leave
push
icebp
test
mov
mov
dec
dec
adc
lds
add
test
xor
dec
sahf
outsb
jg
mov
test
jae
sbb
mov
aad
cmp
insb
andb
xchg
jne
push
jnp
lea
jp
les
mov
push
dec
mov
pop
icebp
ret
scas
outsb
ret
push
out
xor
adcl
mov
sbb
fwait
nop
lods
data16
sahf
dec
sub
mov
gs
pslld
cs
es
xchg
jb
dec
mov
sti
icebp
sub
out
xor
mov
and
mov
cwtl
cmpsb
ret
test
movl
decl
jmp
jno
jo
xchg
loop
fdivs
inc
js
jg
ret
lret
fsubs
add
ret
sahf
mov
rep
in
cpuid
filds
mov
adc
jae
rcrl
jge
jo
js
add
mov
mov
cmp
inc
cmp
shlb
sub
xchg
jecxz
nop
mov
clc
adc
sub
jb
loop
ret
cmp
fwait
push
in
repnz
fcompl
hlt
je
lds
sub
lods
add
add
push
dec
scas
fsts
or
adc
push
ds
ficomps
scas
mov
and
fwait
hlt
cmp
and
data16
jl
add
pop
mov
movzwl
jmp
sbb
in
insl
aas
sub
add
jbe
and
jns
dec
movsl
adc
aad
mov
in
mov
repz
lea
push
fisubs
cld
int
push
fistps
adc
insl
nopl
cmpsb
jb
scas
lcall
in
sbb
mov
pop
aad
mov
pushf
and
xor
adc
or
sub
xor
lahf
sub
adc
add
clc
pop
adc
push
jnp
fstpt
add
push
add
dec
add
mov
jmp
icebp
int3
or
lret
and
xchg
and
xor
loop
imull
ja
xchg
mov
push
inc
xchg
mov
cmp
lahf
je
add
insl
push
xchg
mov
dec
push
sbb
les
in
fwait
add
push
inc
es
pop
jns
xor
sbb
inc
fcoml
imul
std
or
mov
mov
lahf
sub
inc
inc
jno
pop
jbe
adc
outsb
orl
push
dec
mov
enter
add
adc
insl
faddl
jmp
pop
repz
cs
mov
mov
sub
mov
hlt
enter
insl
push
les
push
rol
sub
push
cmp
xchg
out
mov
ss
adc
sbb
popa
aad
jae
test
dec
and
out
fwait
aas
call
mov
popf
repnz
lahf
loopne
add
mov
jmp
push
mov
roll
push
in
mov
sub
add
les
pop
insl
inc
ja
addr16
adc
cmp
cltd
sbb
iret
data16
je
mov
pop
xchg
jp
test
push
xchg
cmc
imul
mov
flds
lcall
push
and
and
pop
sti
fstl
xchg
jl
cmp
fs
xor
aaa
add
jecxz
push
mov
addb
aam
bound
mov
cs
rolb
push
dec
inc
add
push
add
dec
mov
dec
inc
inc
inc
and
and
push
and
fsts
pcmpgtw
shlb
icebp
xor
fcmovnb
das
adc
jmp
pop
inc
push
sbbb
adc
cmp
pop
or
mov
mov
sbb
es
lock
xor
jo
pop
xor
xchg
pop
pop
iret
addr16
mov
je
mov
or
enter
xorb
in
pop
xor
xor
add
mov
xor
mov
or
add
cmp
adc
aas
and
pop
icebp
jno
adc
mov
jecxz
int
and
insl
lret
cmp
pop
adc
sahf
stos
inc
cmp
xchg
mov
cltd
icebp
cmp
dec
imul
xchg
add
or
xlat
add
aam
shl
jmp
packssdw
xor
and
push
dec
sub
jnp
push
lods
mov
mov
cltd
fildll
insb
stc
jbe
mov
mov
aaa
sbb
sub
mov
cmp
mov
dec
jp,pt
scas
xor
test
jg
idivb
iret
sub
xor
sbb
outsb
mov
inc
mov
mov
data16
stc
movsl
push
test
outsb
xchg
inc
loope
inc
neg
ret
out
ljmp
mov
pop
daa
push
xor
adc
dec
in
xchg
pop
rcrl
dec
ja
pushw
cmp
xchg
loop
dec
cmc
fs
test
sbb
push
inc
xchg
add
test
test
dec
cmpl
das
pop
push
sbb
dec
jp
mov
cmp
mov
add
in
mov
rcrl
orb
les
mov
rol
mov
push
scas
cmp
scas
xor
xchg
clc
inc
popa
xchg
mov
hlt
push
or
loopne
push
cmp
pushf
out
into
lods
orl
mov
pop
sbbl
int3
inc
ds
pusha
inc
mov
jae
adc
sbb
rol
xor
es
xor
jg
adc
xor
orl
pop
iret
inc
lds
in
jge
sub
stos
mov
lods
mov
or
int3
and
mov
popa
or
pop
fchs
cmp
jns
js
icebp
aaa
aaa
jp
cmp
sub
outsl
pop
scas
mov
adcl
jecxz
stos
test
sub
pop
mov
jne
aad
gs
mov
push
cmp
mov
jmp
insl
negl
cmp
xlat
push
pop
cmpsb
push
loope
pop
insb
xchg
pop
pop
imul
or
inc
scas
or
shlb
jle
lahf
outsl
or
in
aas
aas
and
adc
mov
mov
mov
and
gs
pusha
loope
fiadds
push
stos
push
mov
out
nop
rorl
jle
ss
dec
loope
adc
sub
inc
dec
and
pop
xchg
jecxz
mulb
int3
std
mov
aad
mov
lock
push
fisubs
pop
ljmp
push
xlat
inc
cmpl
pop
xor
xchg
xor
adc
mov
sub
sub
sbb
jbe
push
addr16
test
leave
and
out
jecxz
push
fwait
pop
sti
push
shll
adc
mov
fstl
adc
jg
ss
push
insl
jmp
das
mov
sub
imul
mov
jns
jg
lods
adc
push
mov
pop
arpl
pop
add
xchg
ret
pop
imul
imul
test
xchg
outsb
shll
daa
sarb
movsb
xor
sub
gs
pop
lcall
stos
pop
jnp
or
fisubl
xor
mov
add
xor
xlat
negb
sar
in
into
mov
mov
fldt
xor
filds
add
sbb
xchg
mov
js
pop
stos
inc
shl
xchg
and
inc
lret
xchg
icebp
jg
out
fcmovbe
lret
out
cmpsb
fsubp
adc
cmpsb
jne
out
pop
lds
jnp
sub
inc
dec
and
sti
inc
je
in
stos
add
mov
test
adc
shr
cmp
xor
enter
mov
dec
fucomi
mov
sub
pop
out
cmp
cmpsb
repnz
or
xorl
imul
jo
dec
cmp
in
ret
fisttpll
dec
and
call
xchg
notb
push
inc
sbb
subb
test
lret
jno
jb
mov
cltd
aas
jge
lock
push
mov
clc
or
nop
push
mov
in
std
mov
ret
ja
mov
je
ret
and
push
cmpsb
adc
in
cmpsl
xorl
pop
in
stc
pop
inc
dec
push
ss
aad
pop
imul
mov
icebp
pop
in
cltd
lea
mov
pop
lock
jp
mov
repz
in
fucom
jno
push
aaa
shlb
xorb
xchg
sbb
lock
imul
jecxz
lcall
test
inc
js
lock
lret
fsubs
sub
imul
xchg
adc
or
mov
pop
jle
mov
and
dec
aam
inc
xchg
out
xchg
mov
cs
fs
jmp
loop
cltd
aas
xor
outsl
cld
sub
out
jns
and
rcl
aad
add
out
aad
sub
int
jb
frstor
xor
aaa
cmp
das
outsb
mov
repz
mov
pop
mov
mov
enter
inc
enter
xchg
xor
dec
push
or
mov
and
cmpsl
fs
mov
or
jg
lds
pop
add
push
movsl
and
pop
jmp
jecxz
iret
out
or
mov
dec
inc
add
jns
cmp
dec
xor
push
cmpsl
sub
mov
mov
fcoml
cmp
pop
loop
lret
dec
xor
bswap
js
ds
out
arpl
xchg
out
jmp
jp
push
jecxz
sbb
enter
mov
in
sub
in
outsb
in
mov
mov
out
adc
in
xlat
add
shrb
jmp
dec
adcl
mov
es
xchg
xchg
in
xchg
fcomip
test
pop
sti
imul
insb
push
popf
push
push
inc
mov
lea
fcoml
scas
or
inc
push
ljmp
ret
or
adc
xor
mov
jmp
fs
lds
stos
fnstenv
dec
mov
add
xor
fcmovnb
inc
xor
add
xor
add
mov
lods
sub
aas
shl
outsb
arpl
insb
xchg
and
iret
mov
ror
stos
inc
push
in
xor
lcall
cmp
push
cmp
out
jno
cli
scas
and
dec
mov
in
sub
movsb
push
adc
aam
in
notl
pop
xchg
cmpsb
push
and
stos
lret
aam
jge
jae
loopne,pt
sbb
jno
inc
pop
sub
add
mov
xchg
xchg
lret
xchg
mov
inc
test
push
xor
imul
aam
cmp
roll
call
les
inc
cld
sbb
in
cmpsl
popw
dec
pop
and
hlt
or
xchg
jmp
lahf
outsl
jns
out
jbe
xchg
jecxz
cmpsb
and
xchg
mov
xor
daa
mov
in
lods
test
pushf
stos
add
sbb
popl
push
test
sub
iret
cli
rorl
popa
aad
lods
ljmp
sbb
fcomps
call
cmpb
in
lahf
loopne
jge
test
das
dec
mov
decb
fstps
mov
mov
cld
xchg
cli
pop
stos
pop
jno
leave
lock
adc
mov
xchg
xor
daa
in
ficoms
vprotw
dec
pop
xor
dec
mov
sbb
cmp
pop
lods
fwait
push
cs
push
mov
out
xchg
stc
and
scas
pusha
scas
mov
not
jne
mov
cmpsl
sub
sub
sub
xchg
lods
stos
out
icebp
jge
inc
pop
aas
pop
add
int
xchg
lret
iret
xchg
lret
scas
leave
mov
roll
xchg
stc
in
in
inc
sbb
push
ret
scas
adc
push
push
mov
pop
sub
adc
sub
pop
mov
shlb
repnz
or
jmp
lea
mov
cmpsl
pop
scas
test
sbb
and
lret
cmpsl
cmc
sti
hlt
inc
gs
mov
nop
cld
cwtl
in
es
int
add
in
cmp
aam
pop
mov
shr
js
inc
pop
inc
cmp
cmpsl
cmp
mov
rorl
shl
andl
aas
imul
or
inc
pusha
sahf
pop
in
mov
shrd
sbb
lods
sub
into
lods
iret
dec
xor
push
jl
mov
add
jnp
dec
xchg
cli
nop
dec
mov
mov
imul
loopne
and
test
ja
hlt
lods
iret
pop
outsl
filds
or
pop
fisttpl
mov
mov
adcl
xor
mov
leave
ja
xchg
or
test
push
push
push
dec
jl
add
movsl
mov
push
cs
add
sbb
inc
mov
lret
inc
jg
jle
movsb
adc
gs
popf
lods
sub
int3
enter
xchg
enter
inc
or
or
test
arpl
add
loopne
ror
sbb
push
cmpsl
lcall
rolb
lret
or
pop
shrl
lret
shrl
inc
xchg
clc
call
xor
mov
mov
push
bound
mov
test
leave
addr16
xchg
adc
insb
je
cs
pop
inc
mov
out
pusha
shlb
adc
dec
into
jne
sbb
jo
xchg
adc
mov
jae
pop
xchg
mov
adc
push
add
pop
cmp
mov
mov
sbb
dec
mov
insl
inc
jl
adc
and
push
mov
dec
mov
inc
cltd
addb
into
out
push
lahf
fcomi
dec
sahf
fsubrl
add
ds
filds
mov
mov
jmp
aas
inc
pop
lahf
and
and
xor
sbb
sub
lret
mov
mov
jl
dec
push
xchg
popf
mov
cmp
sbb
mov
test
int3
mov
push
xor
adc
mov
sbb
inc
test
xor
pop
sub
in
cld
fdivrl
imul
scas
mov
cmp
dec
jb
fs
fcmovnbe
shlb
sub
sbb
mov
mov
shrl
testb
jp
ljmp
sub
outsb
dec
imul
add
mov
jl
clts
dec
jecxz
xchg
mov
popf
sbb
xor
outsb
or
repz
ds
mov
clc
out
xchg
and
jae
dec
aaa
bound
aam
push
mov
xchg
mov
loopne
rcrb
add
jbe
sbbl
mov
sahf
dec
lods
movsl
loop
mov
mov
mov
mov
notw
jnp
jmp
negb
pop
or
out
out
test
mov
sahf
mov
test
jno
mov
pop
jo
jg
sahf
out
out
jle
push
and
jnp
stc
xchg
or
mov
test
test
fisubl
repnz
xchg
adc
cs
dec
xchg
popa
mov
mov
in
dec
outsl
dec
nop
push
lock
fs
push
sub
ss
popa
mov
rcl
sarl
imul
cli
lods
mov
and
hlt
lret
mov
lds
dec
sbb
into
lods
daa
lahf
loopne
fidivrs
loope
iret
jo
das
mov
das
bound
fidivs
dec
dec
adc
in
sub
repz
mov
xor
aad
stos
lds
repnz
cs
mov
adc
sbb
dec
movsl
loope
mov
mov
test
sbb
insl
dec
std
ja
and
sbbb
push
dec
jo
add
out
popf
mov
les
shrl
mov
jbe
jae
cmp
aad
fs
cmpsb
lock
push
clc
inc
pop
ret
test
int
bound
stos
imul
or
xor
jnp
ret
std
sub
in
pop
int
pusha
mov
imull
push
push
sahf
enter
xchg
jne
sbbl
jns
pop
or
sub
fdivp
ja
sbb
cmp
aad
stos
stos
adc
popa
push
jmp
mov
daa
xchg
or
test
cmp
mov
and
push
cmp
inc
cmc
dec
outsl
ds
pop
jnp
mov
inc
push
push
shl
into
imul
adc
loop
les
mov
ret
testb
nop
pop
push
cmp
dec
lret
inc
xor
jns
adcl
xor
mov
sub
outsb
xchg
inc
arpl
jmp
xchg
sar
adc
loopne
mov
bound
add
cmc
add
push
pop
fcoml
imul
fs
fcoml
call
aaa
mov
cltd
mov
xchg
sahf
es
inc
out
dec
xor
ja
xchg
push
loope
mov
aam
mov
out
jb
rolb
mov
aam
sbb
ficoml
jo
fisubrl
xchg
loope
push
adc
fcmovnbe
inc
mov
sub
push
out
repz
push
bound
subl
lahf
int
out
out
pop
pop
in
push
cmp
rorb
adc
push
push
stos
add
xchg
mov
inc
inc
cwtl
lret
xchg
std
ffreep
push
cmpsb
jl
jp
fistl
shr
scas
mov
test
ret
inc
rol
lods
enter
sbb
and
inc
pop
dec
in
mov
dec
mov
jge
lock
loop
sahf
test
or
das
adc
adc
sbbb
fdivrl
jmp
sub
jnp
jb
pop
sti
sbb
outsb
shrl
mov
xlat
jp
add
sub
mov
out
adc
gs
pop
jae
sarb
leave
push
mov
ljmp
insl
das
out
int3
icebp
pop
lahf
aas
push
cmc
mov
cmp
daa
mov
mov
mov
xor
aam
inc
xlat
sbb
sub
shrl
sbb
adc
into
xchg
es
xchg
lret
jecxz
lea
cmp
sbb
pop
sub
xor
xchg
push
mov
xor
lcall
xor
fbld
in
or
or
jo
rclb
xor
ds
push
pop
mov
mov
and
sbb
jmp
ljmp
dec
mov
xorb
jbe
aad
das
fnsave
int3
cmp
sub
sbb
negb
lcall
xor
rcll
cmp
in
dec
stos
mov
test
shr
bound
xchg
push
or
lock
jecxz
int3
pop
fsts
jle
out
pop
adc
pop
ret
mov
add
add
and
dec
adc
neg
out
enter
xor
xchg
jns
stos
pop
inc
inc
mov
fildll
fmull
pop
stos
fisttpl
out
rorb
test
call
addr16
mov
imul
ja
inc
stos
add
call
mov
pop
lock
cmpsb
fldl
in
movb
insl
add
pop
test
dec
mov
jb
or
test
icebp
jbe
or
test
pop
mov
cmp
mov
test
sti
jp
iret
mov
push
mov
cli
push
lds
incl
jecxz
jns
ljmp
ljmp
cmp
push
or
mov
sub
je
cmp
jae
dec
dec
imul
leave
cmp
jb
mov
fdivr
fsubl
jge
loopne
and
lret
mov
xor
shl
jle
mov
push
icebp
lea
pop
push
aaa
les
xlat
xorl
mov
lea
ss
aaa
pop
movl
outsb
call
sti
repz
call
shl
xchg
sbb
data16
or
add
repnz
xchg
enter
inc
adc
stos
push
or
in
scas
cmp
scas
mov
je
sti
mov
mov
in
test
cmp
add
add
int
and
push
sub
mov
pop
ljmp
cmp
andl
and
mov
cltd
sub
mov
mov
ret
mov
popa
ja
aad
mov
mov
push
or
mov
cli
mov
movsb
add
push
push
sbb
xor
xchg
push
jno
repnz
stos
cli
add
jne
es
fisttps
or
test
sbb
outsl
fsubr
ret
lock
gs
mov
and
pop
stos
addb
cmp
jo
mov
jbe
add
daa
sbb
sub
add
or
icebp
int
lods
lret
xor
dec
cwtl
cmp
in
xchg
jmp
mov
rcrl
lods
das
rolb
stos
fcoml
lods
push
out
icebp
cmp
repnz
lds
and
movsb
mov
and
int3
fistps
mov
mov
mov
lret
inc
int
xchg
sub
es
add
cld
push
xor
lahf
mov
outsl
xor
and
jae
sbb
movsb
sbb
cmp
les
pop
mov
push
fs
arpl
loopne
sbb
lea
sti
into
iret
cmpsb
dec
mov
or
in
jl
mov
add
jp
xor
cmc
in
cmc
jno
xchg
sbb
add
mov
jle
jmp
dec
les
ljmp
or
aam
outsl
in
mov
sub
dec
and
bound
mov
clc
push
dec
sbb
leave
addr16
and
jns
popf
inc
int
xchg
inc
mov
les
lock
xor
int3
loope
inc
inc
mov
pop
rcll
js
ja
or
sbb
out
sbbl
jno
xchg
mov
mov
adc
jne
mov
dec
movsb
ljmp
jp
fisttpl
mov
push
stc
clc
xor
pop
sbb
xchg
xor
in
xlat
movsb
scas
inc
push
lods
sub
mov
lahf
in
jnp
fadds
add
pop
pop
cmpsl
mov
adc
lock
pusha
adc
incb
aas
loopne
scas
cwtl
mov
aam
icebp
mov
jns
add
ds
fsubp
aaa
sub
or
loop
stc
jp
xchg
inc
add
jnp
add
inc
sub
xchg
in
mov
jae
out
clc
negl
jns
data16
testl
cltd
and
ds
and
lret
mov
imul
test
mov
lds
out
daa
faddl
xchg
nop
int3
sub
inc
pop
push
pop
mov
in
cmpsb
cmpsl
or
xchg
sub
int
sbbb
xchg
loop
pop
inc
mov
insl
and
test
lret
outsb
or
mov
mov
sub
and
popa
icebp
mov
shl
sub
push
ret
cmpsl
pop
adc
and
push
xchg
aas
out
stos
bound
jg
xchg
sbb
test
fmul
ds
test
lea
sub
repz
cmp
sbb
and
inc
int
xor
xorl
sub
adc
sarl
test
or
out
out
xor
enter
or
cld
sbbb
dec
sub
lret
lds
or
ret
mov
sub
insb
jmp
jb
cli
inc
push
sarb
imul
mov
xor
idiv
adc
jmp
cmp
xchg
lods
call
jne
sbb
and
xor
lea
pop
jecxz
push
js
and
icebp
in
mov
fisttpl
push
push
jae,pt
in
sbb
push
xor
xchg
xor
sub
mov
fldenv
jbe
inc
xchg
pop
bound
call
mov
xchg
inc
imul
xor
mov
add
mov
in
addb
pop
in
shll
sbb
lea
jecxz
pop
add
adc
ret
nop
out
fidivl
sub
and
jl
jo
push
lret
jl
ja
xlat
loop
inc
or
cs
shll
js
imul
jl
inc
rcrl
lods
cltd
xchg
xor
scas
fisttps
mov
mov
pushf
or
push
fistpl
jmp
data16
sbb
mov
outsb
and
jmp
pop
fnstenv
mov
pop
gs
mov
adc
negl
sbb
dec
in
jns
or
mov
and
shlb
sbb
push
xor
add
jne
add
jne
adc
test
and
cmc
pop
mov
inc
xchg
mov
xor
push
cmp
mov
out
adc
sbb
fiaddl
add
sbb
push
cmp
es
lret
ds
push
dec
nop
mov
pop
cmp
mov
mov
in
mov
or
cmp
dec
imul
mov
pop
test
dec
sti
push
fldenv
imulb
les
pmaxsw
add
inc
push
sbb
es
iret
jl
leave
aaa
pop
cmpsl
mov
aam
pop
out
adc
ret
inc
mov
scas
lret
add
pop
dec
pusha
jnp
popf
shl
je
prefetchw
outsl
jae
or
inc
imul
jp
in
xchg
loop
adc
cltd
sub
jns
mov
test
adc
inc
add
sub
stc
jmp
inc
pop
and
xchg
addl
fldcw
or
outsb
xlat
add
add
test
ret
add
mov
outsl
test
sbb
leave
or
mov
jno
mov
mov
xchg
adc
cmp
imul
pop
sub
jo
push
adc
insl
fldl
aad
mov
bound
cltd
jne
xor
mov
mov
or
pop
cmp
sub
sub
mov
aad
mov
test
movsl
fists
dec
mov
inc
add
cmp
jns
inc
sbb
or
repnz
and
adc
jle
mov
mov
call
stos
pop
sbb
jg
outsl
cmp
enter
mov
das
inc
mov
pop
push
sbb
dec
les
push
fstl
lock
decb
inc
daa
subb
jecxz
andb
shll
pop
leave
inc
inc
scas
mov
hlt
scas
aad
mov
jge
pop
cli
push
jl
cmc
ljmp
add
imul
je
inc
fstl
sub
out
scas
mov
nop
fiaddl
pop
add
fsubr
cmp
movsl
aam
dec
mov
or
mov
push
push
movsl
hlt
jo
or
movsl
sbbl
mov
xchg
dec
je
sbb
mov
sti
movq
lods
test
je
cmc
jge
lahf
and
loope
ds
mov
mov
inc
out
icebp
std
xchg
test
pop
fldt
push
mov
movsb
notb
gs
xchg
rolb
add
lods
mov
and
push
imul
movsl
test
jp
jo
cltd
dec
jecxz
je
dec
out
aas
movsl
mov
adc
es
adc
add
lods
push
cmpsl
mov
xor
mov
push
xchg
cmpsb
je
dec
dec
insb
jecxz
inc
xor
notb
clc
mov
orl
js
das
inc
adc
xorb
mov
and
cmc
rclb
mov
xor
mov
insl
and
mov
vpmaddwd
xchg
xor
gs
arpl
sub
xchg
pop
out
stc
test
gs
clc
test
push
push
popa
mov
in
test
shrb
push
out
call
mov
xor
or
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
hlt
mov
loop
jmp
mov
pushf
sbb
xchg
cmp
dec
rorb
inc
or
ja
dec
sbbb
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
mov
xor
pop
cmp
cmp
scas
aam
xor
pop
fsts
mov
push
xchg
aaa
push
cltd
adc
into
and
adc
pusha
divl
test
pop
f2xm1
push
cmp
jbe
inc
stos
sub
pop
imul
and
xor
js
push
lock
repz
and
imul
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
xchg
cmp
dec
rorb
inc
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
and
mov
mov
xchg
push
mov
cmp
ss
mov
movb
sbbl
add
dec
subb
sbb
in
sbb
mov
add
pushf
pop
add
jmp
call
stos
into
add
pop
jl
add
popa
or
rorl
dec
das
pop
lea
out
push
lds
xor
cmpsl
inc
leave
cs
call
or
imul
push
inc
mov
stc
mov
daa
mov
mov
idivl
adc
mov
enter
adc
ja
imul
or
leave
mov
addr16
shll
icebp
or
push
addr16
mov
sbb
out
cmp
push
fbld
lock
pushf
xor
inc
ja
inc
das
test
andb
das
popl
fcmovnb
adc
mov
std
hlt
std
ficomps
loopne
lret
je
mov
xlat
dec
loop
rcll
fdivs
insl
jae
mov
jno
xchg
test
or
mov
and
lret
xchg
bound
mov
or
mov
scas
or
test
dec
ficoms
inc
and
in
push
cli
std
lock
sbb
xchg
jl
pop
mov
pop
rorl
fiadds
add
jnp
push
sbb
arpl
fimuls
hlt
pop
dec
xor
add
faddp
in
pop
sbb
ror
ret
sbb
les
and
xchg
cmpsb
jge
xlat
rolb
add
mov
and
js
inc
ror
shl
aad
mov
insl
sub
push
dec
cmpsb
idivb
xchg
cmp
loope
and
and
mov
push
enter
test
xor
add
add
pop
outsl
dec
and
cltd
lcall
daa
les
fstl
push
jecxz
lret
or
in
jb
pop
push
fwait
jno
sbb
xchg
cmp
add
dec
mov
mov
xor
fcomip
shr
and
xchg
sub
shlb
pop
rorl
into
and
cmp
adc
popf
fnstcw
test
mov
sub
mov
mov
sub
sbb
xchg
mov
pop
lret
mov
iret
mov
pop
leave
jecxz
orb
dec
cmp
shrl
pusha
iret
ss
fistl
adc
add
or
cmp
jmp
imul
iret
insl
push
cmp
imul
mov
fcoms
scas
out
jo
adc
cmp
leave
push
icebp
and
or
adc
ljmp
lahf
aaa
int
mov
xor
mov
xor
mov
jecxz
sahf
jp
pop
fisubl
add
add
fdivs
test
mov
sbb
xchg
ja
stc
icebp
cmp
mov
mov
xchg
or
mov
leave
lds
sub
mov
jne
nop
mov
and
add
pop
mov
mov
outsb
mov
fdivr
fcmovbe
cmc
out
or
pushf
sub
cmp
sub
mov
cld
mov
xchg
or
push
mov
test
int
pushf
andb
addl
subb
add
xchg
push
in
loop
or
push
inc
sahf
clc
adc
jp
dec
or
fcom
push
mov
loop
mov
movsb
aas
jmp
out
jne
or
dec
lea
loope
ss
cmp
ret
push
push
fdivl
push
and
jle
jge
xor
cmp
push
xchg
ds
stos
imul
sbb
das
subb
outsl
jo
sarl
fisttps
lods
sbb
stc
inc
sub
fisttpll
sub
jno
inc
sub
mov
xchg
xchg
dec
dec
xor
es
cmpsb
scas
sub
dec
sbb
out
push
xchg
mov
shr
popf
enter
popf
loope
repnz
jae
dec
iret
notl
scas
adc
notb
xchg
inc
pop
gs
jmp
mov
sub
aaa
testb
jmp
cmp
mov
enter
ds
xchg
nop
jo
fisubl
jbe
mov
pop
jae
movsl
lock
cli
fwait
outsl
xchg
ror
mov
dec
sub
push
dec
lret
lret
outsl
jne
pop
stc
mov
xchg
dec
sub
cli
mov
out
xchg
sbb
push
adc
das
jecxz
lcall
lcall
js
mov
push
xchg
std
xor
dec
xor
push
add
lahf
movsl
in
inc
mov
sbb
mov
int3
inc
lret
ljmp
orl
aaa
push
fistl
mov
in
rorl
sbb
jecxz
mov
pop
sub
cmp
sbb
stos
nop
dec
out
xchg
cmp
or
lahf
jbe
mov
jl
subl
rcrl
in
fsubrp
jbe
cmp
out
push
xchg
fcomps
cmpsb
pop
xor
push
push
push
mov
stos
adc
xchg
addr16
sbb
stc
mov
or
fcoml
xchg
movsb
lret
pop
scas
test
pop
cwtl
movsl
inc
outsl
inc
jmp
cmpsl
jge
dec
mov
dec
sub
rcrb
xchg
into
xor
push
add
sub
lcall
daa
shlb
or
leave
jae
dec
xchg
or
or
das
lods
test
mov
fldenv
mov
add
or
push
std
dec
and
push
sbb
divl
mov
shr
mov
and
repnz
sbb
ja
loope
pop
jb
int
in
pusha
sbb
jmp
daa
add
sbb
enter
or
mov
jbe
sahf
mul
xchg
sub
add
fwait
pop
xchg
out
std
fwait
in
je
or
jbe
inc
out
push
inc
mov
or
test
or
int3
imul
stos
pushf
sete
orl
jle
inc
sbb
lahf
mov
mov
or
out
jo
test
push
mov
fiadds
adc
mov
or
fcomi
cmpsb
loope
dec
push
dec
ret
fwait
sub
repnz
cmp
into
lret
mov
jmp
aas
mov
outsb
out
sub
inc
sub
push
mov
test
sarl
inc
outsl
jnp
in
aas
adc
mov
aam
in
xchg
insl
mov
shrl
out
cwtl
add
push
push
xchg
add
fistps
fisubrl
hlt
mov
push
cmp
enter
lods
jge
xchg
pop
rolb
test
xchg
cmp
insl
out
pop
mov
test
xchg
xchg
push
dec
mov
aas
and
es
decl
ret
inc
test
test
mov
data16
push
xchg
ss
ljmp
sbb
insl
sarl
adc
test
test
or
cmpsl
sti
testb
xor
rorb
xchg
icebp
test
inc
or
sub
xchg
fstpl
jle
push
mov
insl
and
insb
cmp
mov
push
aaa
inc
sub
jbe
jne
imul
cs
mov
xchg
push
movsb
cmp
lcall
pusha
repz
xchg
cli
and
ss
out
and
andb
mov
push
les
xchg
movsb
mov
fbstp
nop
jmp
xchg
jmp
inc
mov
jb
test
inc
inc
test
xchg
dec
outsb
xor
pop
data16
dec
adc
push
mov
adc
in
adc
outsl
movsl
mov
testb
movsb
xchg
pusha
test
or
iret
pop
pop
data16
clc
pop
push
add
cmpsb
jb
inc
or
cmp
inc
inc
add
movsl
cmp
mov
cmp
and
int3
in
cs
stos
orl
test
mov
sbb
add
sti
cmp
in
shlb
arpl
nop
and
and
imul
push
jb
xchg
cmp
mov
lahf
add
mov
sarb
repnz
xor
pop
in
xor
xorl
xor
add
jno
cmp
mov
mov
add
push
mov
daa
int3
loope
pusha
cmpsl
adc
stc
cs
lret
mov
xchg
pop
sub
rclb
or
out
mov
pop
jno
jae
fwait
jmp
jle
ret
or
add
pop
roll
add
jo
rcrb
ja
inc
add
jmp
mov
mov
adc
in
sub
adc
push
xchg
and
inc
jmp
mov
mov
mov
sub
jno
or
sub
and
in
or
sbbl
or
pop
inc
test
push
jne
stos
dec
push
sbb
insl
mov
jno
sbb
inc
mov
orb
daa
adc
ffreep
push
pop
int3
xor
pusha
sbb
ficoml
xor
scas
fistpl
mov
add
cmp
nop
loopne
mov
dec
roll
sbb
sahf
lods
ds
push
in
mov
lahf
fnstcw
cmpsl
sbb
js
inc
adc
std
add
leave
push
lret
xchg
gs
or
or
push
adc
negb
test
sti
dec
sbb
dec
cmp
std
clc
pop
jnp
jae
and
mov
pop
xor
push
cmp
sub
dec
popa
dec
fnstenv
mov
test
push
das
rcrb
sbb
dec
adc
xor
movsb
sbb
fnstenv
fadd
add
loop
iret
sub
or
inc
cmp
or
cltd
jle
popf
mov
std
outsl
stos
push
and
icebp
call
xchg
decl
cmp
ret
in
mov
fiaddl
jl
repz
pop
das
jae
mov
push
lahf
pop
cwtl
lock
and
cmp
jns
sbb
add
movsl
push
pop
mov
fists
xor
push
ret
ja
adc
push
out
jno
push
fidivl
jo
mul
push
test
not
mov
push
dec
sbb
rclb
push
lds
movsl
inc
cwtl
fisubs
push
ja
push
popa
adc
nop
mov
add
maxps
clc
xor
imul
push
mov
pop
xor
addb
test
fsubs
adc
popa
out
fstpt
xchg
das
or
repz
shll
push
mov
jl
std
shlb
dec
add
in
or
and
mov
loopne,pn
loop
jp
dec
int
fcoml
insb
or
mov
pop
jp
cld
push
inc
ret
lahf
xchg
jmp
jae
mov
push
fcomi
fisubrl
inc
insl
push
xchg
mov
and
push
sbb
pop
mov
mov
mov
pop
jno
sbb
xchg
mov
bound
push
pop
lds
popa
in
xchg
cmp
aas
nop
mov
dec
divb
mov
sbb
pop
sbb
sahf
out
int3
aad
adc
inc
test
xlat
mov
into
xchg
push
pop
fbstp
add
add
mov
push
arpl
and
repnz
pop
add
movsb
fwait
xchg
xchg
adc
js
aas
inc
push
mov
popa
or
push
cmp
imul
divb
cs
mov
idivl
dec
mov
fidivs
adc
in
loopne
push
xor
sub
es
xchg
pop
inc
cmp
cmp
sarl
sbb
mov
ss
aaa
out
xorps
std
movsb
jnp
sub
sbb
adc
stos
repnz
sub
cmp
loope
push
mov
shll
fucom
dec
xchg
loop
int3
xchg
or
mov
dec
cltd
fwait
xchg
and
sub
add
mov
and
scas
stc
psllq
incl
jp
adc
rolb
jmp
rorb
xor
fcoml
mov
xchg
cmpsb
cltd
xchg
xor
push
js
inc
push
in
cmpsb
jb
dec
push
daa
daa
imul
jecxz
mov
adcb
pop
lret
je
outsl
scas
movsb
push
jns
out
jbe
pop
fwait
ret
andl
add
lds
fisubrl
ds
jge
jbe
sbb
sub
fs
push
int3
sub
xchg
fisttps
movsb
cmp
mov
fs
lock
mov
jne
movsb
mov
push
lods
aad
in
aad
mov
popa
neg
movsl
add
bound
aaa
dec
addr16
push
jns
push
out
je
in
mov
jbe
movsl
aad
jb
sub
repz
iret
shll
mov
jae
ja
mov
and
les
jl
jo
dec
enter
cmp
sti
cmp
adc
lock
and
incb
mov
test
in
mov
dec
movsl
lea
hlt
cs
or
adc
lds
push
shlb
mov
mov
mov
rcrb
mov
jne
xchg
fsubl
xchg
std
mov
out
inc
arpl
cmp
cltd
xchg
loopne
sbb
pop
inc
push
adc
xchg
shr
shll
out
sti
push
dec
ret
ljmp
inc
inc
dec
or
sub
ret
data16
and
push
mov
add
mov
pop
insb
mov
jno
lahf
movsb
les
jl
mov
mov
xor
or
int
sbb
fcom
push
xchg
cltd
push
insb
push
push
and
sbb
xchg
mov
and
inc
cmp
decb
cwtl
out
mov
push
jp
test
fidivs
push
mov
movsb
dec
mov
mov
sbb
aad
aas
test
lea
and
aaa
dec
ret
stos
bound
cmp
mov
mov
jmp
rorl
push
dec
push
fisttpl
pusha
pop
and
mov
push
mov
mov
aam
jno
enter
roll
jae
fadd
push
sbb
xchg
call
add
add
pop
mov
cli
je
insb
xchg
mov
xchg
aad
xchg
push
es
test
insl
test
inc
outsb
add
mov
dec
push
adc
test
sti
push
pop
push
pop
mov
rorb
test
jns
stos
movb
daa
add
les
push
sub
lock
lods
and
pop
dec
add
mov
pop
sbb
lds
add
je
lret
or
addr16
sbb
rdmsr
xor
sbb
mov
in
sub
pop
sbb
jbe
pop
ficoms
cwtl
jle
mov
sbb
xor
mov
or
repz
adc
mov
adc
jl
jecxz
pop
cli
gs
cld
xchg
movsb
ss
mov
add
fisubs
enter
xchg
fidivrl
or
pop
xchg
aas
hlt
js
cmp
testb
int3
addr16
enter
xlat
daa
push
add
xor
adc
adc
adc
cs
pop
mov
in
nop
mov
pop
lods
out
mov
mov
je
pop
mov
inc
ficoml
shll
out
xchg
mov
adc
jno
mov
dec
pop
lcall
fdivs
jnp
jg
cld
imul
dec
dec
nop
dec
cmp
mov
cwtl
loop
cmp
fsubrs
mov
sti
pop
stc
pop
cwtl
mov
loopne
dec
and
cmpb
sub
test
xchg
dec
mov
add
cltd
lret
aam
in
sub
movsb
test
xchg
push
mov
and
mov
shlb
loop
mov
inc
ss
xor
ss
sub
dec
cmp
ss
mov
push
jbe
pop
lods
sub
pop
xchg
adc
jo
insl
pop
mov
jb
mov
mov
sbb
sbb
outsb
cmp
psllq
gs
mov
sbb
sub
nop
adc
aaa
mov
sbb
out
push
test
xchg
mov
cmovns
stos
mov
push
jns
dec
add
sub
scas
stc
je
xchg
xchg
rcrl
add
scas
xor
mov
mov
sub
gs
test
sub
dec
adc
mov
aas
pusha
out
mov
jbe
sub
dec
pushf
adc
int3
outsb
push
add
insb
fadd
rorl
and
pop
xor
stos
push
mov
std
jmp
std
scas
sub
daa
dec
fstpt
shll
das
inc
into
push
fmulp
cmp
or
cwtl
mov
mov
sahf
ret
sbb
es
out
or
or
andl
nop
push
dec
repnz
popa
pop
or
push
in
jns
inc
push
nop
xor
iret
sub
lods
adc
xor
outsb
rcrb
hlt
inc
test
cmp
out
xor
mov
mov
hlt
in
js
iret
adc
stos
mov
loop
xchg
fdiv
sbb
aaa
dec
in
ss
adc
sahf
je
mov
fcmovb
shl
loop
into
mov
pushf
mov
imulb
shl
jl
cmp
push
movsl
jo
pop
subl
pop
push
push
lea
mov
or
mov
subl
in
popa
lods
lcall
in
fdivrl
lret
movsb
or
stos
sar
add
sub
lds
jl
repz
mov
sbb
rolb
fisttpll
push
daa
loop
imul
lock
lret
loopne
fidivrl
dec
fs
int
mov
ss
repnz
mov
adc
adc
fs
test
or
sti
imul
icebp
inc
add
lock
aam
movsb
dec
icebp
xchg
dec
sbb
out
movsb
aam
xchg
mov
mov
push
xor
mov
push
jmp
push
lods
sbb
mov
cwtl
jp
mov
icebp
mov
sbb
orl
cmpsb
jae
adc
mov
test
inc
out
lock
pop
in
mov
sbb
jmp
sbb
pusha
jo
pushf
and
mov
jae
jns
or
addr16
out
pop
aad
std
push
shlb
mov
jl
cltd
outsb
jp
mov
dec
negl
dec
mov
adc
cmpsl
enter
stos
or
add
sbbl
and
outsl
mov
scas
sarb
adc
lods
or
aam
out
loop
sub
cwtl
fcmovu
shlb
cmpl
loope
jne
add
xchg
aas
fdivl
vcvtsd2si
inc
scas
mov
out
test
fisttpl
aad
sub
repnz
jl
gs
ljmp
shll
fimuls
adc
mov
shr
pop
cmpl
jne
and
jmp
jp
ljmp
hlt
push
push
add
mov
divb
and
jne
outsl
inc
mov
mov
lods
loop
mov
or
in
dec
stos
fucom
hlt
pop
pop
cmp
cmp
int3
or
outsb
lods
leave
gs
test
cmp
das
pop
rol
sub
je
lea
pushl
xchg
cmpsb
cmp
mov
mov
out
aaa
movlps
sbbb
dec
mov
in
mov
scas
cmp
out
push
nop
adc
scas
or
pusha
stos
shr
mov
and
and
add
jecxz
repz
push
mov
cmc
repnz
test
mov
subb
xchg
daa
sub
push
mov
int3
stos
lret
lcall
cmpsb
or
inc
je
sub
jp
and
rcrb
test
cmp
xchg
pop
mov
mov
outsl
test
ds
lret
in
add
cltd
push
ss
fwait
push
add
arpl
add
add
fsub
or
xchg
out
insb
ret
and
cmp
ljmp
iret
push
cltd
ficompl
stos
shll
gs
sahf
data16
popf
aas
xchg
pop
pop
loope
xor
add
scas
into
sbb
hlt
loop
shrb
inc
mov
jecxz
and
and
mov
pop
fs
mov
aaa
aaa
push
scas
sbb
mov
outsl
xchg
mov
mov
rcl
mov
movd
dec
ja
or
push
and
inc
cmp
pop
sub
arpl
movsl
mov
push
movsb
cltd
rcrb
out
pop
sub
lret
add
daa
sub
jl
daa
pop
mov
pop
addr16
add
xchg
scas
popf
pusha
dec
push
pushf
dec
ror
jae
mov
add
mov
orb
lea
adc
jp
ret
daa
push
nop
mov
sbb
push
pop
mov
fidivl
ds
mov
shrl
int
fsts
mov
int
jmp
dec
decb
jnp
andb
sbb
out
xchg
pop
adc
fidivrs
out
add
mov
out
mov
jo
fdivrl
push
dec
fnstcw
inc
inc
xlat
add
loope
aam
daa
leave
es
jecxz
lods
lcall
fsubl
ss
xchg
xchg
int3
mov
outsb
cmp
inc
imulb
imulb
mov
fistpl
lea
rcll
fbstp
or
sub
imul
pop
mov
scas
ljmp
int
sahf
aaa
sti
ret
cmp
shrb
mov
rclb
inc
sbb
inc
addr16
pop
sub
cmpsb
jb
and
jno
movsl
out
push
add
pop
mov
movsb
mov
or
mov
inc
cmp
stos
in
cmp
js
ffree
sbb
enter
and
and
pop
fwait
add
or
insb
add
cmp
cmp
jmp
popa
fcomp
mulb
pop
lcall
pop
imul
popf
pop
push
pop
call
pop
mov
imul
sub
sub
fdivrl
mov
jecxz
je
ds
push
adc
push
adc
lret
fldt
fadd
movsb
idivl
mov
fsubrl
mov
pop
add
or
push
lret
movsb
std
ss
mov
das
mov
push
out
ret
std
pop
jae
or
pushf
jle
ret
mov
jne
or
ficoml
and
add
es
jmp
pop
les
jle
mov
into
fst
xchg
movsb
push
mov
insl
scas
les
sub
cmpsl
xchg
movsl
pop
hlt
dec
cmp
test
scas
lds
push
aaa
xchg
bound
test
insb
imul
orl
arpl
test
inc
shld
sbb
xor
xchg
cmpsl
lcall
shlb
into
pop
mov
mov
mov
loop
mov
xchg
dec
cmp
xchg
jg
je
cltd
xorb
xchg
fidivrl
cmc
gs
test
lds
sbbb
mov
test
sub
fisttpl
jmp
adc
jmp
sahf
xor
lret
jbe
inc
in
lahf
dec
mov
stos
pop
inc
aam
or
sbb
push
sub
jns
or
imul
outsl
inc
orb
insb
mov
push
in
add
lahf
faddl
sarb
sbb
fldenv
fisttps
jg
aas
test
xorl
stc
xorl
cwtl
adc
mov
dec
add
cmpsb
dec
push
jecxz
nop
aaa
fs
cmpsl
push
jle
fsubrs
cwtl
loopne
sahf
int3
sub
jbe
lds
testb
push
xchg
lret
int
aaa
dec
enter
enter
add
mov
sti
mov
in
inc
fs
lods
jbe
sarl
lds
sub
sbb
lea
call
add
testb
rolb
je
sbb
stos
sarl
popf
mov
or
xchg
bound
js
cwtl
mov
fistpl
rorl
push
pop
or
push
pop
test
imul
idiv
cld
ja
and
jmp
and
pushf
xchg
aad
je
inc
sbbb
test
push
inc
stos
xchg
sub
mov
daa
es
mov
jp
cmc
dec
mov
outsl
jecxz
cmp
je
test
dec
mov
cmp
insb
cmc
data16
fnstsw
neg
std
in
into
bound
mov
inc
test
adc
sbb
sbb
pop
sbb
cmpsb
sub
cltd
out
push
hlt
and
rcrb
dec
or
aad
sub
pop
es
es
pop
cs
stc
ficoms
or
fwait
sbb
add
lods
les
flds
fcomps
pop
pop
int3
jle
cmp
sti
adc
mov
mov
adc
arpl
cmp
cmp
divb
dec
inc
push
leave
xchg
hlt
cmp
or
mov
xchg
or
adc
scas
cwtl
inc
push
mov
dec
int3
mov
mov
push
stos
leave
imul
cmpsb
add
ficompl
jb
imul
inc
add
cmp
push
mov
stc
mov
sub
sub
pop
lret
loope
jnp
hlt
xor
sbb
stos
pop
loope
lods
dec
or
aam
jecxz
popf
aad
out
fs
pop
push
and
scas
jb
imul
jnp
test
daa
cmp
add
stos
cmp
lret
mov
inc
cltd
rorb
arpl
pushf
and
mov
scas
and
xlat
xchg
imull
rorb
inc
mov
sbb
arpl
xor
cmpsb
test
scas
add
sub
or
jo
sti
sub
sub
shl
xchg
and
dec
cmpsb
idivl
sti
es
add
mov
dec
mov
jecxz
adc
jge
fldenv
pop
out
ds
loopne
fwait
adc
mov
pop
dec
xchg
int3
rorb
test
jge
aad
lret
xor
in
add
xchg
dec
mov
jb
fdivl
cltd
inc
push
shl
sbb
push
sbb
mov
int
outsb
mov
int3
cld
jle
push
or
fdivp
or
stc
xchg
ja
and
and
xor
push
or
xlat
and
sti
dec
cltd
sbb
testb
xorl
mov
shlb
psllw
pop
enter
aas
stc
rorl
mov
xor
leave
add
out
mov
out
in
jl
jnp
negl
push
dec
int3
adc
mov
ss
xchg
cwtl
stc
adc
dec
lods
mov
fiadds
fstps
into
fnsave
jp
cmp
add
dec
jns
mov
mov
lret
add
mov
out
mov
icebp
cmp
sub
and
dec
mov
mov
loop
jmp
mov
inc
iret
out
icebp
leave
movl
fisubrs
pop
sbb
xchg
adc
add
pop
pop
add
mov
sbb
mov
addl
mov
lcall
lea
in
pop
cmp
push
mov
idivb
lods
test
pop
mov
sub
xor
lock
ficoms
stc
pop
out
and
inc
shrl
sti
loop
aad
fcmovnbe
mov
enter
push
and
popf
popf
cmp
sub
daa
dec
std
mov
cld
cmc
fstl
in
sub
add
adcl
dec
pop
sahf
scas
or
or
dec
push
inc
push
shlb
mov
and
sub
iret
adc
ljmp
leave
mov
andb
cmp
mov
push
popa
movsl
dec
or
pop
mov
add
test
lods
push
je
add
lea
lahf
imulb
push
mov
xor
scas
mov
or
pop
or
lock
std
sub
mov
pop
push
clc
gs
rolb
vmovd
sub
jg
nop
add
xor
in
mov
jnp
push
ud2
cmp
sub
jae
cmp
fdiv
mov
pop
xchg
icebp
mov
mov
popf
mov
xor
cmp
cmpsb
je
mov
mov
aam
imul
repnz
inc
push
xor
js
xadd
lock
mov
test
daa
movsl
leave
js
stc
push
xchg
push
ja
and
pusha
mov
push
sub
pop
hlt
mov
add
fwait
lods
jo
or
push
push
sbb
xor
andl
fcompp
mov
add
lock
rcll
jmp
cmp
lods
xchg
xchg
mov
and
jge
dec
mov
or
jecxz
imul
or
pop
push
js
mov
movsl
gs
or
int
sbb
vdivss
mov
adc
cmpsl
mov
jmp
ja
mov
cmp
enter
out
inc
mov
cmc
repnz
jns
xor
xor
loope
mov
subl
js
push
cmp
clc
stos
jge
into
aaa
sub
push
test
out
iret
cmp
outsb
imul
mov
or
mov
adc
cs
cwtl
or
and
imul
cmp
mov
lods
idivl
aaa
pop
mulb
jge
and
aam
add
jnp
stos
push
sub
mov
cld
jmp
loope
iret
lds
lods
mov
movsb
imul
movsb
es
cmp
mov
dec
push
scas
in
movsl
xor
xchg
mov
cmp
mov
int3
scas
int3
mov
fbstp
bound
cmp
jmp
jae
mov
push
push
negb
lock
int3
pop
pop
push
jmp
out
test
test
inc
int
or
outsb
xchg
dec
outsb
jmp
scas
sbb
adc
xchg
jbe
lcall
push
jp
enter
jge
fldcw
fs
leave
push
outsl
dec
pop
loop
dec
and
inc
movsb
push
mov
rorb
cs
nopl
and
dec
sub
add
hlt
add
lret
in
in
mov
shl
test
or
test
scas
dec
adc
mov
adc
shll
jne
cmp
divl
mov
fmull
gs
int
xchg
pop
sub
aaa
idiv
test
nop
sub
and
mov
lahf
or
pop
fdivs
mov
sbb
xor
sahf
rorb
insb
jne
lret
cltd
es
add
in
pop
pusha
int
xchg
testb
ds
adc
jne
inc
aaa
xchg
ja
es
dec
fnsave
and
cltd
filds
jge
gs
in
in
and
and
lock
int3
mov
or
sub
push
sbb
das
ja
cmpsl
mov
push
push
outsb
in
loope
jp
dec
and
cmc
mov
sub
push
xchg
rorl
mov
jle
outsl
outsl
mov
push
dec
lahf
pop
enter
mov
adc
es
sbb
insb
jecxz
negl
outsl
mov
pop
cmp
dec
stos
jp
in
sahf
jno
push
inc
mov
push
outsl
cwtl
inc
mov
daa
cld
pop
cmp
jecxz
sbbl
stc
push
mov
mov
jle
das
push
fdivs
mov
and
es
fxam
xlat
xchg
loope
or
jge
inc
sub
insb
jmp
mov
jecxz
test
mov
xor
out
subb
jno
mov
jo
pusha
out
aad
shrb
rclb
in
mov
push
xor
fucom
mov
pusha
aaa
es
outsb
mov
mov
jl
and
push
inc
add
rorb
ffreep
jae
popa
int3
dec
test
xchg
and
call
pop
rorl
or
xor
orl
cmpsb
mov
sub
fs
dec
icebp
out
sub
inc
push
and
in
push
sahf
cmp
adc
add
notl
hlt
and
sarb
dec
fsubs
into
adc
or
sbb
decb
pop
data16
fldl
push
mov
ficoms
ret
cmpsb
popf
push
xor
inc
nop
test
lret
iret
cmp
lret
inc
jns
xor
inc
jae
push
jb
push
cs
dec
cli
in
add
mov
in
jl
fstps
sbb
in
xor
mov
out
out
push
cli
cmp
and
lahf
out
and
aas
sbb
add
add
fisubl
jg
cltd
test
mov
cwtl
add
dec
adc
test
rcll
lea
jl
push
inc
mov
inc
jnp
or
repz
inc
jl
outsl
icebp
test
cmp
lods
inc
cmp
mov
loope
jnp
xchg
jge
pop
test
mov
dec
pop
or
rcll
aaa
idivl
int
and
mov
fld
mov
jle
cwtl
dec
loopne
dec
es
into
int
push
push
das
jge
js
adc
push
lods
mov
jl
dec
add
loopne
sarb
mov
stos
rol
push
scas
jl
lea
cs
cld
xor
mov
cmp
or
inc
popa
mov
fwait
shr
hlt
popf
push
enter
mov
popa
push
rcrb
push
or
movsl
pop
pop
jmp
jp
dec
ret
push
das
in
inc
cld
adc
jne
cmpsb
int3
adc
pusha
lock
imul
adc
push
sub
xor
ja
sub
fs
jecxz
mov
jns
jmp
push
aas
sub
mov
xor
inc
jl
add
jae
jmp
cmp
push
push
mov
lret
enter
mov
dec
clc
inc
pop
sahf
fidivrl
aam
sbb
mov
mov
adc
out
adc
out
sbb
fidivl
iret
ret
mov
rorl
xchg
imul
lret
fwait
sub
mov
imul
sahf
inc
mov
or
pop
leave
pop
stos
cli
in
xor
jb
das
cmpsl
into
aad
or
out
popa
cmpsl
or
in
pop
sbb
dec
bound
mov
sbb
sbb
cmpsb
xor
adc
into
cs
stc
pop
insb
enter
iret
rcrl
mulb
movsl
cli
mov
and
sbb
jne
jnp
xlat
test
test
enter
and
jecxz
es
clc
add
ljmp
ret
fst
push
or
cltd
xchg
xor
jns
or
push
inc
or
adc
push
loop
dec
mov
cmp
xchg
outsb
xor
jmp
outsb
sbb
pop
out
hlt
cmp
cli
movsl
aaa
jo
pop
pop
sub
push
push
dec
mov
jo
dec
loope
icebp
inc
cmpsl
call
je
jne
dec
mov
stc
je
cmp
insl
fs
xchg
mov
jecxz
xchg
jg
and
popf
mov
gs
fidivs
mov
push
adc
inc
fs
fdivrs
and
cmpsb
add
xchg
icebp
mov
outsl
scas
xchg
ja
fidivrl
js
fcomi
loopne
lahf
mov
push
cltd
mov
lods
mov
mov
psadbw
sahf
lock
inc
aad
cmp
lcall
inc
sub
dec
std
dec
xor
nop
outsl
repz
push
rol
jge
push
push
mov
adc
pop
movsb
xor
inc
shrb
dec
dec
xchg
js
push
dec
and
inc
out
push
int
rcrb
scas
xor
test
lcall
jae
mov
pop
in
out
mov
ret
push
ss
shll
or
pop
jne
cld
or
ret
push
rolb
jp
stc
mov
adc
adc
ret
xchg
scas
push
outsl
pop
fldcw
stc
inc
jb
push
cmc
xchg
inc
add
js
jno
pop
daa
bound
out
dec
push
inc
movq
arpl
push
out
es
pop
ljmp
pop
gs
sub
push
sbb
cltd
push
enter
adc
test
cli
inc
iret
jae
inc
in
pop
mov
repnz
scas
insb
lods
in
adc
loopne
xlat
popa
cmpsl
lds
dec
xchg
mov
mov
lret
je
xchg
ds
sub
mov
test
xor
jno
js
popa
je
insw
aam
les
fwait
cmc
cmp
fdivl
xcrypt-ctr
cmpsl
fimull
call
pop
jmp
pop
lahf
jmp
cmp
enter
insb
sar
in
add
leave
sbb
adc
adc
sbb
mov
mov
and
dec
mov
mov
mov
scas
adc
rclb
leave
mov
xchg
pop
sbb
test
stos
xlat
dec
outsb
call
xor
add
leave
daa
insb
dec
mov
jp
jno
sti
push
sbb
push
fidivs
inc
rorb
push
inc
jle
imulb
pop
iret
out
cltd
cli
imul
popf
movsb
mov
and
mov
pop
roll
jbe
mulb
or
scas
repnz
daa
popf
adc
ljmp
and
test
mov
aas
adc
cmp
cmp
stc
jo
xor
mov
inc
mov
sbb
out
or
lock
jmp
nop
mov
mov
test
lret
fs
pop
xchg
mov
pop
cmpsl
inc
fidivs
mov
loop
int3
dec
cmp
push
test
xor
das
cltd
bound
xor
push
rol
mov
add
sahf
cmp
xor
and
jp
mov
out
dec
lods
arpl
rcll
jne
inc
shr
mov
mov
stos
push
ret
inc
adc
push
nop
add
stc
ret
repz
jecxz
or
out
aam
lods
and
jge
jbe
scas
es
jp
push
stc
dec
xchg
cmc
ja
push
jns
dec
jns
push
std
adc
ror
lcall
aas
stos
stos
cmpsl
rcrl
or
jbe
xor
adc
or
lds
sbb
pop
xor
add
jb
push
pusha
sbbb
sub
mov
cmc
fs
cmc
pop
sub
cmp
sbb
push
scas
sub
mov
push
cmp
inc
lods
inc
aas
repz
out
outsl
imull
adc
out
lahf
jge
inc
inc
mov
es
and
mov
mov
imul
out
adc
aas
ret
rcr
sar
stos
dec
jae
ret
push
int
rorb
mov
mov
icebp
movsl
push
in
icebp
loop
lahf
add
push
lds
mov
int3
leave
jnp
jg
dec
add
hlt
cmp
std
sbb
in
pop
mov
xchg
sbb
mov
clc
adc
test
pop
sbb
loop
mov
pop
loope
xchg
jmp
pop
push
add
sub
iret
push
pop
mov
sti
dec
push
mov
stos
add
cli
mov
pop
mov
or
sub
push
pop
jmp
mov
add
dec
mov
mov
sub
les
out
or
pop
aaa
in
cltd
dec
fisttps
sub
xchg
in
cld
mov
xchg
xchg
or
test
pushf
adc
adc
lds
sub
and
div
aaa
hlt
sub
and
leave
jmp
popf
xchg
add
adc
adc
or
mov
in
das
jae
mov
inc
sbb
lahf
pop
or
sub
and
push
cmc
sub
sarl
dec
pop
push
mov
icebp
xchg
inc
xchg
dec
decb
inc
shlb
loope
loop
int
lahf
jb
and
ss
push
or
enter
jne
pop
mov
pop
sub
pushf
sub
cltd
ficoms
icebp
push
adc
fsubl
mov
fdivs
ret
sub
cmpsb
adc
fisubl
popa
outsl
loopne
push
sbb
adcl
movsl
pop
pusha
rorl
das
clc
lcall
rcrb
popa
data16
sbb
call
pop
shl
mov
mov
or
push
out
mov
flds
call
xor
ret
icebp
stos
pop
cmp
shlb
and
or
movsl
jb
jge,pn
inc
dec
test
sar
lods
test
and
sbb
es
jg
fsts
mov
sub
fprem
mov
sub
pop
enter
shlb
push
sbbl
sbb
aam
mov
cmc
dec
sbbb
push
mov
insb
dec
and
xchg
lock
add
clc
dec
ret
mov
or
jg
test
mov
out
pusha
lods
call
jg
mov
js
orb
daa
push
sbb
jno
jp
and
lahf
sarl
je
lret
fwait
hlt
and
inc
jae
push
adc
push
leave
scas
mov
pop
mov
arpl
in
adc
push
loop
dec
adc
mov
jnp
mov
popa
hlt
inc
incb
nop
pusha
aad
dec
hlt
movsl
dec
sbb
mov
out
out
jno
in
pop
lods
repnz
pop
cmp
lods
dec
push
pop
ficoml
mov
popa
mov
xor
and
cmp
push
lea
movsl
stos
inc
jg
out
adc
mull
inc
sbb
inc
dec
jo
add
xor
mov
dec
sub
jne
repnz
pop
aaa
fdivrl
ds
aaa
imul
adc
mov
push
shlb
push
inc
xchg
push
cmp
aas
inc
insl
pop
xchg
and
jle
pop
fwait
adc
and
jnp
push
xchg
rep
daa
pushf
je
data16
inc
int
add
popa
lcall
movsb
js
scas
movsb
mov
stos
mov
enter
lods
mov
jne
call
ss
testb
mov
or
cmp
inc
push
jnp
lods
inc
inc
cld
jnp
add
cmpb
popa
in
and
pop
xor
mov
or
push
cmp
flds
in
adc
cmpsl
xorl
testb
inc
call
push
cld
cltd
push
dec
outsb
lahf
cmpl
std
loope
dec
loopne
or
dec
cmp
inc
repz
pop
lock
fists
cmp
ss
hlt
adc
imul
dec
jbe
in
pop
je
add
and
movl
push
adc
jne
in
ret
sub
mov
ss
jae
mov
mov
push
cmc
out
mov
pop
xchg
lods
stos
mov
jbe
dec
and
inc
shl
sbb
jg
xor
subb
daa
mov
jmp
lds
orb
inc
int
leave
in
fs
jns
pmullw
dec
hlt
xchg
push
lods
cmpsb
xor
xchg
leave
mov
shl
push
cmp
mov
inc
add
mov
xchg
pop
cmc
cmpsl
out
mov
mov
popf
outsb
pop
add
jno
popl
mov
ja
push
dec
xchg
jae
in
sub
push
gs
lret
xor
jmp
cmpsl
mov
repz
popa
sub
insb
jbe
aam
mov
ds
lods
jno
push
outsl
pop
adc
loop
icebp
popa
xchg
scas
mov
ljmp
jp
repz
or
xor
out
jle
and
sbb
aam
rorb
push
repnz
inc
add
jmp
pushf
mov
push
mov
aas
inc
test
mov
lea
sbb
sub
jge
sarb
sti
dec
mov
cld
aad
aam
std
in
test
es
mov
xor
lea
je
inc
add
mov
arpl
cmpsb
jle
fistpll
lahf
jne
incb
insl
xor
jge
pop
mulb
out
sub
lods
inc
out
dec
add
xor
int3
stc
cmp
scas
jg
in
cli
adc
jp
pop
push
mov
xchg
stos
cwtl
xor
es
orb
nop
and
loop
aad
jo
pop
mov
leave
lahf
je
dec
lock
jnp
mov
sahf
inc
ljmp
fisttps
inc
addl
pop
pop
cltd
aas
lea
popa
pop
adc
and
js
cs
out
xlat
arpl
dec
adc
jae
dec
fcmove
loop
push
pop
pop
jg
and
out
pushf
ljmp
fs
movsb
mov
stos
movaps
mov
in
mov
mov
les
adc
and
xchg
loope
add
push
outsl
pop
ja
mov
pop
ret
sbb
scas
pop
or
ljmp
sub
ret
pop
testl
mov
mov
pusha
int3
imul
jnp
pop
lret
and
pop
mov
xor
mov
sarl
inc
test
jbe
and
adc
dec
jp
add
cmp
roll
stos
dec
out
inc
lret
in
shrl
xchg
inc
mov
ds
dec
cmp
inc
enter
inc
lds
lock
xchg
arpl
sub
das
mov
cwtl
or
mov
test
jecxz
inc
pushl
pop
pop
lcall
fcmovnb
test
hlt
ret
ret
scas
push
ljmp
mov
pop
out
ljmp
inc
xchg
movsb
dec
mov
loop
popf
xlat
sub
andb
notl
ljmp
fincstp
push
loop
or
jns
ss
dec
sub
mov
mov
or
xchg
movsl
cmp
xchg
out
add
or
das
ret
movsl
cmc
push
add
js
std
iret
mov
xor
cltd
sbb
xor
dec
test
fsubrl
push
stos
dec
inc
sub
leave
jmp
inc
insl
xor
aad
scas
movl
jb
cli
sbb
cmp
sub
push
adc
add
dec
push
fbld
adc
repnz
push
das
mov
add
daa
mov
pop
iret
jp
xor
fwait
inc
push
mov
outsl
shlb
fldenv
jo
outsl
adc
rcr
push
dec
in
cmp
mov
add
sbbb
jle
inc
ficompl
sub
cmp
jp
ja
arpl
outsl
cmp
push
adc
jp
clc
cmpsb
xlat
inc
das
mov
inc
jne
sbb
frndint
pusha
outsb
mov
or
xor
push
mov
dec
test
mov
aaa
testb
test
js
lods
pop
mov
mov
fsts
xchg
xchg
popa
fnsetpm(287
mov
mov
jbe
pop
outsl
cmpsl
loope
rcll
in
lock
sbb
mov
pop
dec
or
and
xchg
xor
pushf
cltd
ljmp
pop
test
xchg
pop
ds
inc
es
fdivs
inc
leave
fwait
mov
inc
rcrb
dec
mov
stos
in
jo
roll
imul
dec
call
push
les
push
fisttpll
jb
jmp
insl
int3
idivb
push
iret
das
mov
mov
test
out
pop
jp
push
pop
popa
nop
cld
loopne
cs
pushf
bndldx
pop
xor
mov
push
or
adc
aas
in
xor
lahf
repz
aam
or
aam
int3
push
sub
rclb
mov
loopne
cld
jne
int3
imul
push
fwait
jne
pusha
das
not
cmp
sbb
jns
push
dec
test
push
push
push
lds
push
pop
bound
adc
arpl
sbb
jmp
faddl
xor
rorl
cmp
mov
test
inc
xor
mov
pop
xchg
adc
cmp
push
or
xchg
and
or
pop
mov
mov
shl
lret
dec
stc
ljmp
loope
add
shrb
mov
and
push
mov
sub
lods
add
fildll
jl
adc
pop
jae
inc
loop
inc
lcall
out
push
test
mov
jae
js
add
loop
inc
mov
shll
lock
mov
sub
adc
and
stc
lcall
mov
mov
loope
insl
popf
sub
imul
out
or
out
inc
mov
cmp
in
jne
xor
sub
or
dec
push
dec
xor
rolb
sarb
pop
and
pop
insb
movsl
add
xchg
mov
or
pop
mov
out
cli
inc
lcall
dec
out
mov
pop
adc
daa
mov
fwait
andb
mov
inc
adc
mov
push
mov
mov
adc
hlt
adc
xchg
xor
cs
sub
testl
fs
negb
mov
adc
gs
push
pop
xchg
mov
imulb
push
mov
leave
jnp
test
dec
loope
xor
jmp
repz
mov
mov
das
pop
sarl
mov
fmul
mov
pop
cmp
gs
jp
clc
in
cmp
pop
stos
fcomps
jbe
fwait
add
inc
mov
push
adc
out
shl
push
clc
adc
int3
ficompl
push
stc
int
xchg
ss
and
repz
rclb
test
sub
sub
mov
leave
int
fcmove
stc
jbe
push
fcomip
mov
pop
mov
jo
pop
add
cmp
push
pushf
popf
mov
out
push
sbb
cmp
ss
mov
mov
outsl
or
test
mov
testl
outsb
and
leave
lahf
mov
sub
xorb
bound
xchg
stos
or
ja
mov
outsb
fadds
xchg
push
pop
jno
sub
bound
mov
add
fisubs
pusha
sub
inc
in
jp
insb
or
cmp
sbb
inc
mov
cwtl
dec
jmp
scas
add
into
loope
lds
out
dec
add
mov
jg
push
lods
lods
aaa
cmp
sub
add
insb
mov
js
mov
jbe
leave
push
and
sbb
inc
sahf
mov
add
bnd
cltd
lods
testl
scas
add
mov
call
data16
movl
lret
add
pop
push
xchg
pushf
push
aas
cmp
mov
lea
int3
and
jne
cmp
les
pop
sbb
scas
lock
rol
fbstp
fsubrl
test
jmp
xor
xchg
pop
fwait
mov
cltd
inc
call
clc
ret
lahf
loope
xchg
data16
stos
or
mov
cmp
mov
xor
ret
mov
jnp
aaa
fdivp
add
xchg
mov
mov
idivb
pop
enter
sbb
cli
xchg
inc
push
push
inc
adc
das
jno
insl
pushf
inc
dec
scas
pop
imull
mov
or
iret
cltd
inc
ret
cli
xchg
mov
jg
loopne
test
pop
imul
or
rclb
xchg
add
clc
aas
pop
cmp
lock
inc
test
out
test
xchg
pop
sub
sbb
jne
gs
fsqrt
or
inc
mov
test
jl
aad
test
mov
int
inc
fs
push
aad
jae
mov
dec
xchg
fcom
and
or
inc
gs
std
notl
ss
push
jle
pop
pop
xorb
in
dec
sub
call
inc
push
lret
adc
mov
sbb
fildll
xchg
jge
into
jge
adc
stc
data16
push
js
aas
jmp
dec
push
xor
inc
add
decb
push
test
mov
inc
gs
and
fildl
je
outsb
pop
sub
hlt
dec
and
cld
and
adc
insl
test
mov
jno
insb
dec
inc
xor
jne
xchg
push
inc
aas
out
sbb
popf
popf
sbb
cmpsb
xchg
incl
cmpsl
call
call
jg
push
jo
popa
mov
int
mov
sub
cmp
mov
push
and
lahf
sub
repz
pusha
cwtl
sub
mov
ss
ds
xlat
sbb
dec
adcw
shrl
xchg
les
inc
lds
sub
dec
in
iret
sbb
push
cwtl
cmp
and
lret
and
rolb
enter
jo
les
sub
push
xchg
mov
daa
mov
sub
sahf
or
ja
dec
sbb
mov
xchg
jp
fstps
xor
filds
arpl
inc
cmc
sti
mov
orb
jno
cmpl
das
jl
gs
xchg
ss
mov
in
shr
inc
jno
mov
xor
push
frstor
outsb
rorl
mov
dec
adc
mov
adc
sarb
test
jge
hlt
lods
adc
pop
into
jae
add
and
ret
in
iret
les
jecxz
dec
dec
out
add
loope
movsb
push
repnz
adc
inc
ds
xorb
in
fisubl
mov
pop
lea
lods
pop
push
and
mov
ss
hlt
add
mov
inc
mov
push
lcall
inc
xlat
in
mov
sub
lds
test
shll
loopne
or
xchg
notl
mov
ficoml
inc
jnp
shl
adc
mov
in
lock
pop
test
inc
test
mov
andl
push
push
imul
push
sbb
shll
outsl
iret
int3
mov
fildl
sbb
jne
les
cmp
mov
lahf
ja
push
cmpsb
loope
mov
push
xchg
subb
jns
cmpsb
cmp
popa
adc
test
mov
mov
inc
sub
shrl
das
push
fcoml
mov
inc
add
rclb
mov
lods
cltd
or
in
mov
loope
jne
mov
pop
stos
lods
or
in
jb
or
xor
adc
jg
movsb
popf
xor
test
call
and
adc
and
push
xchg
cmp
dec
xchg
jecxz
mov
fwait
push
cmpsl
xchg
inc
sub
sub
notb
pop
popl
int3
nop
push
mov
mov
loopne
dec
shll
fcompl
pop
or
in
aaa
inc
aad
rolb
add
push
aad
nop
test
lods
test
sbb
or
in
scas
inc
fdivs
idivb
sub
mov
ret
mov
inc
outsb
mov
jns
imul
test
jo
mov
mov
lahf
jae
adc
or
or
jns
adc
jbe
out
add
sub
dec
scas
mov
sbb
mov
cli
inc
loope
int
lds
iret
inc
jb
mov
mov
mov
fmuls
dec
flds
movsb
andb
lock
jmp
daa
and
rorb
xchg
int
push
cwtl
xchg
lods
shll
idiv
aad
dec
push
inc
movb
push
dec
lret
xchg
push
out
fmull
fsubl
dec
xchg
xorl
mov
insl
jecxz
into
into
or
jmp
fs
adc
or
roll
cmp
mov
sbb
push
pavgb
outsl
jle
int3
sahf
fmull
push
push
push
xchg
ret
or
dec
add
popa
lcall
xchg
pop
dec
out
adc
lahf
dec
sbb
stos
inc
lcall
mov
lods
push
in
add
out
or
ficomps
push
icebp
in
outsb
adc
outsl
jecxz
icebp
cltd
inc
mov
sub
mov
sub
ds
cmp
cmp
mov
push
into
je
jae
addb
sar
insl
mov
inc
in
arpl
in
aam
or
mov
inc
or
fnstsw
in
int
fstpl
mov
jecxz
lds
jle
and
into
repnz
sbb
mov
sub
shr
xchg
fisubrs
sub
out
leave
mov
cmpsb
lret
rcr
addr16
mov
mov
icebp
sub
gs
mov
push
pop
popf
cmc
testb
int
jnp
fcompl
dec
xor
push
dec
mov
movsl
loopne
mov
movsb
dec
pop
imul
sbb
jl
idivb
ds
mov
pop
pop
jmp
add
mov
bound
ss
adc
sbb
cmp
xchg
jbe,pn
push
ss
std
mov
sbb
lods
cmp
cs
cwtl
out
sbb
jae
test
mov
int
mov
cmp
jge
movsl
mov
sub
or
mov
cmp
sub
mov
mov
mov
mov
pop
out
sbb
insb
dec
mov
pop
shll
jns
jmp
bound
movsl
xor
pop
fistpl
shrl
xchg
ret
test
iret
mov
sbb
in
mov
inc
mov
and
sbb
mov
push
push
repnz
xor
gs
sbb
xor
jbe
dec
cmp
adc
lret
or
filds
loopne
rcl
aas
stos
repz
data16
aas
repz
adc
ljmp
or
push
add
push
int
push
imul
sub
out
xorb
push
xor
cmp
xchg
cmpsl
les
stos
mov
aam
pop
jne
jecxz
mov
lods
dec
pop
repz
mov
nop
lea
cli
pushf
push
sbb
push
mov
lret
fdivrs
std
xchg
aas
sbb
xchg
dec
mov
inc
or
loope
sbb
xor
pop
mov
and
repnz
mov
push
daa
stc
imul
and
cmp
icebp
mov
and
add
out
sbb
jle
and
aaa
addl
imul
push
sti
xchg
push
pushf
add
sti
movsb
sbb
loop
out
test
cwtl
jge
adc
xchg
les
inc
inc
push
stos
aam
mov
stc
iret
dec
sbb
call
push
je
mov
jmp
cmpsl
pop
cmpsb
bound
and
inc
jbe
ja
ljmp
mov
jae
ss
dec
inc
jbe
inc
fistl
imul
fstps
in
cli
inc
add
ds
jbe
mov
xor
movsb
out
mov
adc
in
cmp
std
xor
xchg
add
aas
mov
repz
xchg
cmp
lahf
fildl
movswl
imul
xchg
push
cmp
mov
lock
xchg
xchg
push
cmp
adc
js
outsl
outsl
roll
mov
ss
jb
inc
ret
or
call
xchg
in
cmp
push
hlt
add
cmp
pusha
fcoms
jns
roll
repnz
bnd
add
fimull
mov
call
out
addr16
add
jae
data16
js
pop
jmp
ss
outsl
add
data16
adc
js
aam
mov
mov
bound
hlt
cmp
xchg
out
in
mov
adc
cld
xor
pop
pop
outsl
out
add
mov
aad
mov
mov
pop
daa
sub
sbb
cmp
fidivs
pop
add
mov
mov
xchg
push
and
sti
ret
ss
and
idivl
and
and
scas
inc
xchg
and
mov
add
mov
jbe
jno
xor
mov
icebp
pop
gs
sbb
dec
xchg
out
jl
stos
add
lds
repnz
jo
aad
rcl
sbb
cmc
cmp
rcl
mov
mov
ja
push
inc
xchg
xor
push
imul
mov
mov
in
cmp
loop
testl
movsl
mov
js
jnp
mov
push
lea
lcall
adc
sti
out
jmp
sbb
dec
imul
int3
xor
ljmp
sahf
inc
mov
std
push
or
add
scas
mov
xlat
inc
fsubs
jp
pushf
sbb
insl
jnp
out
jp
inc
je
cmpsl
jmp
mov
mov
jmp
lock
mov
jbe
lods
sub
inc
out
pop
mov
adc
inc
mov
dec
ljmp
fs
cs
pop
xchg
or
into
dec
ficomps
movsl
cs
sub
je
and
aas
mov
sbb
inc
jnp
and
flds
jo
add
lds
jo
test
pop
adcl
cmc
ljmp
jno
ficoms
icebp
pop
call
push
mov
fs
sub
sti
cltd
or
push
dec
pop
xchg
aam
xor
cmpsb
pop
shrb
cmpsl
sub
pop
out
sub
cmp
js
xor
sub
fldl
mov
loop
push
in
loop
fisubl
push
mov
sbb
cmp
adc
dec
or
and
arpl
and
inc
and
adc
add
adc
out
xchg
push
xchg
mov
cs
rcl
sub
xchg
and
nop
test
ljmp
mov
clc
inc
imul
cmp
push
push
sbb
inc
cmpsb
jne
pop
mov
iret
outsb
jecxz
insb
jnp
and
adc
mov
movsb
int
cmc
or
and
push
std
mov
mov
test
inc
movb
cmpsb
mov
fwait
adc
cwtl
loop
shl
rorb
xor
shl
filds
jl
mov
or
out
xlat
test
push
int3
cs
fwait
cs
mov
imul
das
or
mov
imul
scas
mov
repnz
xchg
jns
call
mov
cmp
push
add
push
sbb
sbb
cld
fs
mov
mov
add
jg
fdivl
arpl
push
xorl
jg
xchg
pop
push
mov
mov
cmp
insl
sarl
push
xlat
mov
out
dec
fldt
xchg
xchg
jnp
std
xor
leave
and
sar
jmp
hlt
mov
sub
arpl
fcmovnbe
add
jmp
lock
mov
dec
es
shll
xlat
outsl
pushw
out
out
jns
pop
je
xor
push
mov
test
dec
out
sbb
cmpsl
mov
xchg
aaa
mov
daa
outsb
sub
mov
adc
or
orps
aas
outsb
jge
adc
sub
rcrl
jno
pusha
or
adc
mov
mov
inc
push
mov
mov
sbb
xchg
js
jns
shrb
jmp
pop
loope
loope
out
add
mov
jnp
loop
das
pop
adc
mov
outsl
int
push
outsb
jl
pop
and
lock
ja
push
jmp
imul
pop
sti
out
mov
dec
dec
cld
mov
fildl
mov
pushf
push
jo
pop
pop
mov
or
add
in
insb
sub
jae
cmp
add
pushl
jb,pn
add
xchg
clc
jecxz
xchg
or
push
stc
sbb
cmp
bound
pop
jge
mov
pop
hlt
cld
cmp
mov
test
fdivs
jnp
cwtl
ja
inc
in
push
adc
repnz
aam
jp
andb
fdivrl
in
add
xchg
lcall
sub
jnp
jbe
cmp
xchg
dec
adc
fisubrs
iret
ficompl
subb
adc
fs
shlb
and
ret
sbb
mov
dec
ljmp
cmpb
fs
iret
add
jge
addl
test
xchg
leave
jb
popa
nop
fiaddl
test
hlt
and
push
inc
aam
cmp
insl
loope
dec
mov
mov
sub
cmp
ss
js
jl
xchg
and
gs
push
pop
and
jns
fcompl
and
sbb
sbb
xchg
data16
mov
mov
cs
pop
mov
loope
ljmp
sbb
jns
jo
sbb
push
lahf
repz
and
cwtl
repnz
cmpsb
add
data16
ljmp
cmpsl
shl
xor
pop
jae
push
xor
xchg
into
shrl
pop
xor
jecxz
or
cmpb
push
pop
push
xor
cltd
mov
lret
lds
xchg
inc
mov
push
or
xchg
loope
mov
pop
mov
and
cmpsb
jo
xchg
jb
cmp
dec
mov
inc
gs
jp
aad
mov
jo
inc
xor
pop
xor
inc
xor
and
iret
test
sub
rclb
mov
repz
daa
imul
add
mov
xchg
scas
adcb
cmp
and
mov
xchg
int
jbe
rolb
adc
pop
int
mov
mov
test
repnz
fsubrs
xchg
xchg
int
iret
inc
adcb
pop
popa
or
cmp
ja
lret
add
daa
repz
jmp
aas
pop
fldl
cli
ljmp
rcll
cmpsb
and
outsl
jns
aam
xor
cld
pop
mov
add
adc
pushf
fldcw
mov
add
inc
push
inc
lods
iret
fst
fbld
dec
shrl
scas
adc
int3
mov
jae
gs
mov
jne,pt
test
mov
push
in
cld
andb
insb
ficompl
xchg
fistl
lret
sbb
ja
cld
dec
hlt
mov
mov
push
idivl
iret
mov
repz
xlat
in
roll
sub
addr16
sarl
lcall
add
push
or
adc
jmp
or
mov
aas
cld
cmp
push
loope
stos
jecxz
fldenv
insl
push
mov
xchg
mov
or
lret
xor
xor
insl
jae
mov
jo
negl
dec
pop
and
adc
inc
fs
in
iret
xchg
fbstp
jg
rcr
inc
std
and
sbb
dec
mov
xlat
mov
xchg
sub
mov
nop
imul
push
mov
ds
jle
or
or
pop
xor
movsl
sub
xor
movsl
jmp
mov
jns
js
mov
bound
jle
mov
jmp
and
setne
sbb
mov
fmulp
pop
lods
push
xor
xor
lods
jb
inc
jb
repz
mov
test
push
inc
in
movl
fnstcw
cld
mov
or
jne
pop
mov
sub
rolb
mov
dec
xor
hlt
out
sbb
pop
lahf
es
lret
or
add
stos
add
cli
add
int3
test
or
fsubr
aas
imul
sbb
xchg
and
add
sub
lods
inc
in
adcb
ss
and
cld
lods
ljmp
jle
and
data16
int3
std
mov
mov
call
adc
mov
pop
xorl
mov
cmpsl
mov
mov
in
sub
les
mov
cld
fstp
sbb
push
sbbb
sub
jo
mov
mov
fstp
fisttpll
mov
mov
jle
xor
jo
ficoms
daa
cmpsl
inc
adc
cmp
imul
mov
lret
cmp
cmp
andl
mov
ds
gs
insl
adc
dec
out
cmp
sbb
mov
and
push
lcall
dec
xor
call
mov
and
xchg
popa
in
test
enter
push
adc
mov
adc
lcall
outsb
ret
test
shlb
idivb
lret
loopne
cmp
adc
pop
push
imul
addr16
jbe
fprem
inc
in
dec
xor
div
das
jmp
ret
aas
mov
xor
cmp
push
es
mov
fsubr
dec
mov
mov
inc
sbb
jbe
and
jo
and
xchg
icebp
add
jns
in
xchg
adc
fsubrs
mov
or
out
stc
mov
fwait
xchg
cmp
ret
negl
fs
pop
sbb
pushf
dec
dec
imul
es
push
stc
pop
pop
sbb
nop
dec
dec
movsl
mov
mov
push
out
jmp
and
sbbl
pop
xor
mov
in
jmp
mov
xchg
into
mov
cmp
jl
sbb
push
scas
and
cltd
movsl
fdivrl
enter
test
fstpl
xlat
push
aaa
cld
mov
adc
in
mov
add
pop
push
aas
movsl
lcall
aad
xlat
or
das
cltd
xchg
mov
mov
in
mov
ds
loop
xlat
stos
rcr
std
mov
cmp
push
repz
stc
cmpsb
pop
or
pop
aaa
fisubrs
or
or
dec
lea
jl
cs
or
xchg
stc
mov
imul
push
mov
loop
pop
js
fdivrs
cmc
mulb
dec
popa
mov
int
test
push
push
addr16
xchg
inc
fdivrl
jae
jp
in
pop
mov
xor
inc
movsb
popa
cli
in
int
stc
dec
repz
les
or
lock
mov
and
aaa
xchg
mov
outsb
pop
loop
cmp
out
xchg
movsb
sub
sub
scas
or
bound
mov
inc
mov
mov
adc
mov
mov
cmp
cmp
comiss
cmpsl
mov
mov
orb
fcompl
cmp
pop
das
push
lea
pop
int
or
getsec
bsf
repz
mov
addr16
scas
dec
sub
xchg
jecxz
mov
mov
inc
push
add
not
pop
ret
aas
mov
mov
cmp
in
dec
roll
mov
mov
mov
xorl
xor
push
push
ja
pushf
aam
inc
inc
andb
pop
lods
push
mov
push
cli
test
and
ja
mov
cltd
jmp
push
pop
jmp
jbe
or
pop
int
in
ds
nop
int3
xchg
bound
lcall
insb
mov
sbb
inc
sbb
inc
out
mov
inc
lcall
push
inc
dec
mov
cmp
loop
lea
subl
xchg
mov
pusha
sub
fmull
adc
into
lea
shrb
pop
cmp
sub
and
mov
test
cwtl
jecxz
cmp
sub
and
push
jp
ret
lahf
pop
cld
mov
bound
inc
inc
daa
adc
or
out
pop
jle
mull
inc
adc
rcrb
lods
int
fists
adc
iret
aam
inc
into
push
xor
shl
int3
jge
addr16
test
popf
movntq
and
mov
ds
stos
and
add
jb
mov
lds
jmp
inc
in
scas
test
test
cltd
add
lea
and
lret
mov
push
iret
pop
add
ret
int
ret
scas
psubd
push
mov
cmpsb
mov
dec
into
mov
mov
stos
xorb
out
mov
push
xor
fnstcw
rclb
and
and
mov
ror
push
mov
and
cmpsl
cmp
mov
mov
sbb
push
andb
mulb
les
xchg
popf
fstpl
dec
dec
xchg
cmp
sub
mov
pop
push
push
into
cmp
xchg
and
mov
int3
push
imul
push
ret
sbb
jnp
mov
popf
pop
test
movsb
sub
ss
jmp
sti
xchg
addl
jge
sti
in
sub
mov
pop
fsubs
lods
cmp
dec
iret
xchg
mov
adc
add
xchg
pop
sbb
dec
and
rcr
idiv
jle
push
or
jbe
shll
shrl
push
adc
mov
lret
dec
jbe
ja
aas
add
cmpsl
sub
jecxz
pop
loopne
inc
jecxz
scas
jg
icebp
inc
xchg
lock
xorl
push
pusha
adc
jmp
rcrl
mov
lret
insb
pop
mov
pushf
push
aam
into
stos
insb
mov
in
je
and
pop
addr16
rclb
cs
xchg
jno
subl
ret
sbb
je
int3
mov
push
mov
sbb
bswap
rorb
pop
call
jb
rcl
dec
xchg
add
pop
jle
cmp
jbe
enter
push
mov
dec
adc
inc
push
mov
daa
jae
in
push
mov
adc
and
jb
pop
ss
mov
push
and
gs
imul
sti
iret
subl
insl
inc
jns
in
les
push
cmp
fistpll
add
lcall
in
jo
jnp
dec
jmp
mov
in
inc
jecxz
dec
gs
mov
jnp
int
and
into
jle
je
sub
roll
dec
jp
jnp
jno
pop
and
incl
cmp
adc
int3
aam
popa
inc
shl
lret
lock
test
cmp
outsl
into
rolb
clc
xchg
das
popa
nop
cli
sbb
adc
pop
hlt
clc
cmp
imul
fldenv
and
add
or
fstpt
cmp
mov
xchg
divl
dec
inc
enter
ret
and
pop
xchg
leave
gs
stos
pop
sbb
inc
dec
jnp
mov
push
adc
leave
or
pusha
jp
outsb
mov
cli
in
cmc
test
xor
pop
mov
push
scas
cmp
sbb
lds
scas
aad
fmul
insl
mov
jmp
dec
ja
loop
sar
icebp
out
daa
lods
jae
sbb
adc
pop
dec
cmp
data16
jnp
in
sub
add
add
dec
movsb
cmp
test
add
xor
sti
pop
cld
adc
dec
es
imul
jo
bound
or
xchg
inc
xchg
sbb
jb
mov
hlt
ljmp
pop
sti
sbb
stos
add
mov
je
mov
into
nop
fisubrs
push
jmp
push
jae
arpl
add
sbb
sahf
jge
fwait
cmp
add
pop
xlat
add
les
addr16
lret
xchg
sub
lcall
enter
daa
inc
or
in
repz
mov
dec
adcl
test
xchg
hlt
pushf
and
push
data16
cmp
dec
add
filds
lret
jb
and
or
mov
mov
cmpl
mov
cmpsb
or
mov
cmpsb
outsl
cmpsl
sub
cmc
mov
in
mov
or
icebp
stos
dec
in
sti
mov
imul
aas
dec
out
add
xor
push
leave
add
mov
sub
sbb
and
loop
mov
cmpsb
sahf
cmp
test
sbb
rorl
mov
add
int
pop
add
sarb
inc
stc
jecxz
out
js
nop
imul
stc
and
xchg
jl
push
or
in
add
adc
mov
jbe
xchg
ror
inc
sbb
mov
cmp
add
xor
xor
lret
push
leave
pop
xor
or
test
lods
add
mov
xor
mov
aam
dec
mov
jmp
adc
in
push
cmp
mov
mov
nop
and
jns
leave
dec
sub
pop
arpl
mov
pop
dec
cmp
xchg
mov
out
andb
fmuls
xchg
mov
mov
or
mov
xchg
jge
xor
leave
sbb
mov
repnz
ja
xchg
mov
outsl
add
jb
insb
xchg
enter
or
mov
cmp
les
jae
mov
shlb
add
scas
lods
cs
das
and
jne
retw
adc
cmc
mov
shl
lret
ja
scas
adc
into
push
cmp
adc
jo
pusha
mov
adc
shlb
cmpsl
test
pop
je
lods
jae
or
imul
shlb
fwait
mov
push
push
push
cli
aam
adc
int3
addr16
pushf
or
mov
dec
loope
je
sub
fisubs
pop
iret
pop
add
mov
sbb
popf
hlt
sub
out
fcompl
out
ret
fildll
jmp
clc
andl
xor
pushf
rclb
sub
repz
std
pop
pop
ffree
push
mov
jae
pcmpeqb
jb
mov
add
xlat
aam
inc
sub
dec
mov
add
mov
sub
pop
xor
stc
hlt
push
mov
insl
lock
setns
and
lret
and
mov
add
rolb
dec
lods
mov
mov
mov
mov
dec
cmp
xor
ss
jecxz
mov
scas
daa
cmpsb
dec
fstps
rcr
cwtl
cmp
testl
dec
arpl
out
cmp
sbb
leave
test
push
sbb
or
test
test
inc
mov
xor
inc
pop
inc
aaa
xchg
jo
addr16
es
insb
data16
stc
pop
std
push
pop
call
add
loopne
and
cmpsl
jbe
cwtl
cmp
push
stos
xchg
aad
fwait
inc
sbb
cld
jle
sbb
mov
and
cmpsl
lcall
sub
jge
sbb
cmpsb
mov
lods
enter
cmpsl
mov
xor
loop
mov
lcall
sbb
vhaddpd
mov
push
cmpsl
mov
gs
fsubrl
lea
movsl
or
pusha
pushf
std
pop
jle
in
xchg
loopne
repnz
enter
pushf
sub
xor
xchg
pop
and
js
outsb
mov
cmpsl
pop
fidivrl
call
adc
imul
iret
arpl
mov
dec
scas
clc
mov
sub
sbb
ror
mov
mov
xchg
andps
ret
sub
stos
aam
push
aam
scas
andl
test
out
xchg
iret
in
sub
sbb
imul
or
popf
hlt
das
aam
and
xor
sbb
inc
mov
sti
jmp
sbb
outsb
push
outsl
adc
shll
xor
scas
pop
fistpl
lcall
stc
fildll
sbb
cltd
shrb
rcr
push
out
xchg
push
cmp
and
stos
jecxz
sti
iret
arpl
cwtl
cmc
mov
or
das
stos
notb
popa
jmp
out
adc
pop
dec
stos
mov
cwtl
sub
push
add
arpl
outsb
lea
out
movsb
adc
cld
das
dec
mov
incl
or
push
jmp
inc
js
addr16
inc
add
ror
sub
cld
sub
inc
mov
xchg
and
mov
and
iret
add
loop
and
adc
cltd
mov
sub
push
dec
je
push
lcall
das
dec
cmp
call
ljmp
sub
je
jne
jp
popa
cmpsl
mov
adc
jnp
rorb
movsl
cld
out
sub
mov
mov
das
pop
push
xchg
mov
rorl
or
push
int
addr16
mov
adc
out
ret
lds
in
das
orb
xchg
outsb
lahf
push
dec
mov
aam
or
popf
mov
dec
jmp
pop
lods
cmc
cmp
pop
adc
mov
adc
mov
or
push
xchg
jp
cwtl
fcmovb
aaa
inc
jno
ljmp
mov
divl
mov
pop
inc
lods
adc
add
sbb
add
push
addb
fs
jae
cmp
mov
push
add
mov
cmp
sbb
stos
xchg
push
or
and
mov
iret
in
sar
jbe
dec
test
ds
ja
loopne
push
push
lea
and
push
xchg
adc
scas
je
orb
adc
int
je
mov
pop
pop
ljmp
push
shll
dec
adc
mov
xchg
lea
loop
lret
mov
mov
mov
adc
pop
lods
inc
dec
adcb
jecxz
cmp
adc
lods
aad
rolb
negl
sbb
mov
gs
lds
jb
in
mov
add
mov
ss
es
pop
or
add
pop
shrl
push
cs
add
or
sbb
faddl
push
jecxz
or
aam
fldt
data16
ja
mov
fbstp
test
mov
jbe
mov
aas
stc
in
adc
inc
std
int3
cli
or
ljmp
ret
cs
push
mov
mov
fstl
sahf
push
lahf
jnp
mov
sbb
sti
xor
and
and
clc
sub
int
outsb
ds
adcb
xchg
cmp
add
out
enter
and
push
iret
mov
ss
adc
imul
sbb
dec
pushf
ret
loop
mov
fiadds
loope
das
std
push
mov
scas
adc
nop
mov
aad
sbb
xchg
fwait
adc
aad
shlb
out
ds
lret
mov
xor
sbb
sbb
int
arpl
insb
inc
outsl
out
xchg
out
stc
or
xorl
sarb
lcall
mov
xchg
xchg
inc
inc
jo
pusha
in
je
xor
add
mov
xchg
ds
pop
xchg
sbb
mov
lret
mulb
xor
dec
adc
xchg
dec
mov
push
jmp
scas
inc
lods
lods
mov
cmp
push
mov
mov
inc
jmp
sbb
and
jge
test
xor
cmp
pop
cmpb
sahf
outsb
nop
inc
inc
ret
fdivrs
or
push
fsub
repz
fstpt
lods
xchg
mov
pop
sub
cmp
dec
or
bound
fsubs
andl
cmp
loope
mov
stos
mov
push
xor
fsubrs
gs
fcomp
popf
xlat
mov
xchg
sub
fidivs
mov
inc
jge
gs
mov
rorl
popf
inc
fisttpl
in
je
dec
push
or
cmp
popl
cmc
lahf
call
xchg
pop
out
popf
insl
sbb
mov
adc
cli
adc
inc
mov
in
lock
xor
fnstenv
push
fwait
jecxz
adc
dec
cmp
xor
ljmp
out
cmp
pop
idivl
xchg
add
rclb
dec
cmpsl
mov
ss
cmc
lcall
enter
mov
adcb
addl
push
jg
lds
jnp
cwtl
ss
adcb
shr
sub
divb
mov
pop
les
xor
sub
rclb
pop
push
jle
push
push
stos
jle
lds
std
outsb
jbe
cs
sbb
loope
stc
xchg
enter
ret
movsl
loopne
in
scas
loop
pop
push
leave
cmc
aaa
dec
imul
mov
mov
xchg
out
push
aaa
mov
enter
lahf
xchg
jno,pn
sub
push
ss
cmp
push
rcrl
addr16
insb
sub
test
into
xchg
sub
test
jecxz
cwtl
cmp
negb
lods
mov
push
je
dec
aas
daa
repz
mov
push
dec
xchg
fisttpll
repz
adc
cs
adc
gs
cwtl
bound
cli
dec
scas
jle
adc
adc
roll
and
dec
pop
jns
push
loope
popa
adc
addl
or
dec
inc
sbb
addl
aad
cmp
fmull
mov
mov
fidivl
cld
inc
fcompl
xchg
das
adc
mov
add
sarb
pop
mov
inc
daa
icebp
sbb
imul
scas
mov
and
loopne
sub
in
push
cmp
lret
cmpsl
shl
sbb
mov
xchg
lahf
into
add
dec
je
cwtl
cld
pop
and
in
repnz
aas
or
adc
pop
imul
mov
pusha
movsl
push
loope
leave
and
cs
mov
xchg
add
repnz
sub
pop
je,pt
adc
adc
sub
and
movsb
sub
push
inc
sar
ret
xor
dec
adc
leave
lret
das
and
shlb
push
int3
add
sbb
stc
aam
or
mov
repz
out
les
sub
push
out
pusha
inc
std
cmp
pop
or
and
aam
scas
push
mov
cwtl
mov
hlt
jno
lock
mov
mov
repnz
aaa
jge
inc
pop
lods
add
movsl
add
adc
pushf
outsb
dec
jl
or
pop
dec
mov
fnstcw
xchg
cmp
sub
lea
cmpsl
aam
pop
mov
push
jp
adcb
pushf
movsb
pop
sub
push
or
push
neg
xor
jl
rolb
ds
mov
pushw
mov
imul
sub
pop
inc
adc
ret
pusha
add
sub
or
sbb
cmp
pop
clc
ss
adc
in
lock
fsubrs
roll
dec
pop
mov
fwait
pop
int3
pushf
add
insl
xor
push
loopne
loop
push
sub
stos
inc
das
push
fnstsw
xchg
jne
xor
jb
inc
int
push
pop
jmp
fcompl
test
adc
out
mov
pop
fwait
jnp
mov
xchg
jecxz
scas
testl
or
fsubs
jmp
fiaddl
inc
cmc
lahf
xchg
clc
cli
inc
jg
xchg
gs
adc
popa
popf
push
inc
aam
add
push
and
mov
sub
repnz
mov
jl
fs
data16
fs
cmp
xchg
xlat
and
cmp
pusha
mulb
cmpsb
or
jne
scas
push
outsb
push
and
into
adc
aam
in
das
fcoms
pop
push
and
or
int3
adc
xchg
or
cmp
dec
sbb
xor
dec
das
mov
push
dec
add
insb
and
xchg
jo
stos
stos
into
sbb
cmp
jmp
push
test
cmp
push
add
fwait
inc
adc
popa
push
xor
sub
push
xor
mov
lret
mov
sub
xor
dec
push
push
jb
push
loopne
dec
movsl
mov
mov
jbe
dec
outsb
xor
test
sbb
mov
add
cmp
std
insb
add
dec
movsl
leave
dec
test
ret
popf
push
push
xchg
mov
pushf
into
push
add
ds
mov
add
mov
xor
or
and
test
clc
punpckhbw
xor
shlb
sbb
sbb
push
dec
jb
cld
mov
pushl
cmpsb
mull
and
sub
sub
push
shl
cmp
sbb
xchg
sub
pop
add
and
mov
cld
mov
daa
imull
pop
pop
ficoml
dec
scas
pop
xor
xor
mov
aad
les
push
and
jbe
in
lahf
xchg
xor
xchg
enter
dec
pop
xchg
push
unpcklps
jae
mov
ja
sti
es
jnp
out
xorl
xchg
loop
jp
stos
in
pop
cmp
sub
call
leave
xchg
test
sti
sarb
cltd
adc
mov
add
shr
repz
sub
cld
test
dec
lcall
xlat
mov
mov
cmp
inc
dec
repz
stos
pop
or
rcrb
cmpsl
push
aas
fsubr
and
pop
imul
pushf
cmpsb
jmp
dec
xchg
add
in
jmp
subl
loope
mov
aad
mov
cmp
push
cmp
xchg
fsubrl
pusha
insl
jmp
test
inc
add
lock
pop
xor
loop
into
outsl
xor
cmp
or
fucomip
shll
fmull
jp
enter
push
dec
mov
add
jns
std
sub
lcall
add
lahf
fidivs
std
movsl
mov
inc
mov
nop
pop
inc
push
adc
push
and
pop
sbb
lds
shll
pop
divb
sub
adc
ret
add
ret
cmpsl
movsl
jne
inc
mov
add
shll
jbe
adcb
push
aam
dec
add
push
addr16
repz
cld
adc
pushf
mov
sbb
and
xchg
fs
dec
repnz
pop
iret
jmp
nop
jbe
xchg
mov
mov
pop
in
cli
int3
mov
stos
dec
test
push
push
lods
mov
int
jp
in
inc
sub
cmpsl
xchg
enter
jl
jns
lcall
subb
xchg
js
add
adc
jge
repz
xor
rorb
and
inc
jne
addl
incl
rcll
adc
push
mov
inc
aam
scas
aad
inc
sub
das
inc
leave
mov
sti
xor
add
sarb
cmp
aaa
ja
dec
shll
jg
adc
add
inc
or
movsl
icebp
xor
test
jg
out
cmc
aas
pusha
daa
lea
sbb
addr16
sub
in
mov
pop
or
push
sbb
pop
sub
pop
jge
mov
fmull
iret
jns
or
dec
mov
xchg
inc
rolb
lret
lods
push
mov
mov
jo
aas
outsl
cli
xorl
jmp
push
adc
push
pop
movsl
jns
push
pop
jp
add
and
pushf
mov
xchg
push
mov
xor
mov
dec
outsl
jns
dec
shr
cmp
cmp
shlb
jge
mov
loop
sub
mov
sbb
mov
jl
dec
rcll
pop
aam
in
gs
testb
int3
loope
les
mov
jp
sbb
mov
test
xor
lods
adc
push
ljmp
pop
mov
cld
inc
nop
ljmp
ss
loope
idivl
into
push
push
pand
push
sbb
pop
out
jo
xor
sub
xchg
stc
lcall
movsb
mov
repz
aas
push
and
cmc
or
inc
sbb
push
mov
dec
scas
aas
stos
mov
sbb
in
rcll
add
adc
inc
and
add
gs
mov
shlb
sub
loope
and
mov
or
jp
push
mov
lods
jl
mov
add
movsl
roll
outsl
mov
cli
and
imul
sbb
xor
dec
add
bound
mov
das
out
push
jb
push
or
jecxz
fmuls
hlt
sbbl
popa
ljmp
std
adc
lahf
out
sub
lret
adc
or
mov
negl
sbb
ficoms
add
xchg
es
inc
mov
dec
add
ljmp
out
in
xor
dec
pop
mov
pushf
ds
or
repz
cmpsl
mov
mov
cmpsb
and
or
cli
subl
jnp
mov
lds
mov
rcr
add
inc
enter
filds
movsl
xchg
in
aad
in
cwtl
call
push
jge
or
fstpt
test
jno
out
sti
xchg
or
cmpl
sbb
pop
lods
ror
out
pop
and
bound
add
push
repnz
dec
outsl
aad
jae
mov
test
movlps
frstor
xor
test
popa
stos
movsb
daa
shrb
mov
lret
cltd
mov
pop
pop
push
dec
cmp
push
das
pop
repz
sti
ljmp
xchg
shr
xchg
or
loope
push
xchg
or
ret
and
jae
or
inc
mov
sahf
je
xchg
or
sub
sbb
es
mov
mov
subb
gs
cltd
hlt
fstpl
insb
jb
xlat
mov
jecxz
negl
repnz
push
fisttps
xchg
sbb
pop
cmpsl
adc
es
mov
or
add
push
push
fistpll
pop
jg
lcall
push
hlt
iret
stos
push
sbb
insb
or
mov
lds
or
pop
les
loope
sub
lret
mov
sub
mov
scas
add
lea
jne
aam
lods
js
add
shrb
lahf
test
pop
mov
lret
popf
ret
das
jmp
pop
scas
popa
xchg
ret
mov
popf
push
fisubs
dec
js
jns
push
push
jle
les
mov
leave
jnp
fcomps
sti
stc
lock
or
inc
cmovae
add
test
xchg
outsb
sub
test
and
sbb
dec
pop
int3
pushf
or
fadd
xor
mov
testb
jle
add
jb
test
dec
xor
addr16
xchg
call
jmp
arpl
lret
movsl
repnz
faddl
inc
push
inc
insb
call
in
mov
xchg
ljmp
stos
xchg
mov
js
add
sbb
push
ss
sbb
push
jg
and
sbb
and
adc
lret
push
loopne
scas
mov
cmpsb
mov
inc
sub
mov
int
loopne
dec
push
mov
sub
ja
adc
add
idivb
pop
popf
xor
jne
jle
fnstsw
xor
sbb
sub
out
sahf
in
pop
pop
std
movsb
dec
fst
xor
ja
lods
sbb
jmp
loope
cmpsb
cld
into
orb
out
jle
imul
mov
pop
xchg
addr16
adc
stos
test
dec
cmc
ret
jp
jecxz,pn
push
adc
inc
cmp
jle
lahf
pop
sub
xchg
pop
sbb
in
ds
mov
mov
push
outsl
sbb
dec
cs
or
cmp
movsl
call
imul
int3
lret
push
cmp
xchg
or
test
dec
jo
push
sub
es
into
push
push
mov
fisubl
push
xchg
inc
pop
gs
sub
loope
inc
mov
lods
mov
iret
jbe
dec
fcomi
xlat
push
xor
pop
fs
sub
cmc
testb
adc
mov
test
jne
lods
adc
mov
out
enter
pop
and
stos
push
lcall
repz
test
jmp
fs
add
mov
fwait
icebp
mov
push
mov
mov
lods
mov
adc
loopne
xor
pop
or
ja
push
sbb
pop
or
insl
pushf
lcall
imul
inc
movsl
push
and
aam
or
push
mov
popa
bound
xchg
ds
pop
les
mov
and
jle
jnp
sub
push
imul
cmp
and
and
inc
sbb
dec
mov
leave
add
mov
push
test
adc
daa
cmpsl
add
cmpsl
mov
icebp
clc
sarl
lea
mov
dec
xor
push
daa
jle
jmp
icebp
push
ja
dec
out
mov
outsb
pop
push
addr16
shlb
mov
and
dec
push
bound
xchg
pop
pop
and
sbb
cmp
sbbb
orb
cld
sbb
and
out
dec
cld
and
push
lock
mov
in
push
xlat
aad
xchg
in
xor
loope
pushf
cmp
push
jge
xorb
inc
push
push
adc
add
xchg
sbb
pushf
push
push
cmpsb
out
int
xchg
cmpsl
mov
mov
xor
jnp
mov
aaa
andl
mov
fs
loope
pop
or
add
xchg
jns
jg
mov
fistpl
pop
add
inc
mov
sub
push
in
add
xor
in
add
mov
inc
loope
ret
pop
fsts
xchg
scas
sarl
add
mov
int3
or
out
cltd
inc
fisubs
jb
inc
mov
xchg
jmp
mov
xor
cli
stos
adc
mov
mov
ljmp
add
xor
adc
push
mov
xor
int3
adc
mov
mov
js
cmp
fidivl
sub
push
ret
inc
add
incb
add
in
ror
push
out
imulb
sub
sbb
mov
sbb
pop
inc
pop
cmpl
cmp
test
fs
movsl
cs
loopne
pop
xchg
and
adc
xchg
addb
sbb
pop
fistps
dec
add
data16
ret
into
jge
push
test
sar
and
iret
in
add
xor
and
mov
jge
xorb
jbe
sbb
mov
add
movsb
mov
repz
adc
mov
xchg
sbb
sbb
pushf
push
je
dec
add
jae
lods
popa
sub
repz
enter
mov
stos
aas
out
cmp
push
push
orl
pop
bound
push
mov
add
jle
cmp
scas
addr16
mov
loopne
jp
sbb
adc
dec
rorb
mov
pop
inc
out
dec
int
les
addl
xchg
jo
repz
adc
andb
sbbb
ljmp
xchg
hlt
and
pusha
lret
lock
in
bound
and
out
frstor
sahf
sub
adc
dec
paddw
sub
enter
in
xor
stos
mov
mov
mov
out
mov
sub
enter
xchg
mov
add
push
sub
fstl
xor
add
xchg
dec
mov
jne
lods
cltd
pop
jp
bound
pop
les
sarb
push
insb
sarb
sahf
icebp
mov
sbb
insb
fisttps
stos
lcall
outsb
xor
pushf
pop
jne
lcall
enter
push
sbb
aad
js
fistpll
out
test
loop
leave
push
jecxz
stos
inc
stos
dec
aaa
xlat
mov
in
negl
mov
lahf
mov
xchg
test
in
and
ficoms
rcll
stos
adc
jp
mov
sub
fmul
lds
push
lea
aas
push
xor
xchg
jno
fxch
mov
jnp
mov
jno
cs
xchg
inc
xchg
pop
lods
dec
mov
negb
cmovg
mov
icebp
cmp
lahf
rorl
sarb
loopne
sbb
or
jge
lahf
call
pop
jno
dec
adc
insl
dec
and
mov
jg
aaa
jp
or
cmp
cli
sub
hlt
mov
insb
subl
in
inc
dec
test
jle
inc
repz
sbb
aaa
push
iret
repz
mov
jnp
fidivrs
call
pop
adc
repnz
xchg
lcall
mov
daa
call
lcall
mov
push
jns
xchg
pushf
sti
jnp
mov
sti
inc
ss
xchg
sbb
mov
push
into
icebp
xchg
movsb
outsl
xchg
xor
sysret
jecxz
pop
ret
sub
inc
insb
rcll
xor
int
cmp
in
sub
cmp
jg
rolb
inc
repz
push
pop
xchg
out
push
inc
clc
add
add
cmp
adc
push
sbb
mov
inc
mov
jle
mov
push
cltd
or
sub
xchg
sbb
ret
add
stc
dec
sub
inc
int
inc
sub
es
fimull
icebp
test
jae
mov
or
je
xor
fld
mov
and
sub
sbb
inc
leave
pop
repnz
mov
pusha
sahf
bound
rcrb
jle
pop
andl
cltd
mov
xchg
or
inc
popf
mov
and
sub
xor
das
icebp
scas
lds
and
sbb
push
xchg
iret
inc
jg
js
sbb
aas
iret
jmp
dec
dec
adc
push
test
push
push
pop
arpl
mov
add
push
test
fsubs
and
lea
test
lahf
aam
push
out
mov
jmp
cmp
xor
repnz
aaa
xchg
cmp
pop
xchg
lock
or
sub
or
jns
lods
in
movsl
cmp
or
pop
xchg
add
fwait
sub
test
movsb
rorl
popl
xor
and
stos
loop
lds
jmp
sub
and
ja
jne
data16
push
xor
add
repz
push
mov
mov
shll
data16
adc
mov
xchg
mov
pop
add
jnp
jmp
testl
sub
div
lods
mov
inc
jmp
and
lret
xchg
sbb
cmp
and
jns
pop
sub
push
sub
sub
cli
dec
lahf
daa
add
cli
push
jae
cli
test
mov
and
mull
enter
cmp
das
aaa
aas
add
bound
xchg
call
and
mov
adc
popf
outsb
pop
gs
shll
pop
mov
or
loope
xchg
les
fwait
mov
push
int3
mov
imul
sbb
push
push
cmp
and
das
mov
jns
ss
adc
or
addl
std
fyl2xp1
adc
test
stos
jae
pop
cmpsl
out
loopne
out
jmp
cmp
xlat
sbb
rclb
xlat
decb
repnz
jp
xor
jo
sub
jnp
sbb
scas
mov
andb
jl
je
aas
lcall
into
adc
mov
push
sub
mov
fstp
scas
dec
or
imul
and
xor
push
cltd
add
xchg
inc
dec
ror
sub
icebp
and
cmp
jp
dec
out
subl
lds
or
loopne
sub
sub
or
arpl
ljmp
iret
mov
inc
jns
fs
xor
pop
ret
subb
aam
insl
dec
mov
push
dec
xor
adc
hlt
repnz
clc
dec
adc
push
sti
mov
pop
cmp
fs
fsubrp
sub
mov
add
ficompl
adc
push
movsl
incl
xchg
imul
stos
lret
adc
push
xlat
clc
dec
sub
sarl
xchg
cmp
dec
pop
cld
push
dec
pop
sbb
pop
add
into
jno
shll
mov
sbb
sbb
in
sub
push
shl
in
scas
out
lcall
push
ret
cmpsb
iret
mov
out
pop
push
mov
imul
rol
not
lahf
mov
mov
mov
push
adc
int
int3
xor
and
jge
xor
mov
xlat
push
dec
pop
loopne
xchg
mov
sbb
or
and
ret
repnz
fnstsw
xchg
pop
sbbb
xor
cmpl
push
pop
in
xor
xchg
mov
mov
pop
pop
sbb
daa
movsl
lret
jmp
xchg
mov
dec
pop
mov
ds
pop
lods
imul
scas
xchg
dec
or
mov
loopne
dec
add
mov
xor
movsb
adc
mov
ror
cs
jb
test
imul
dec
pop
push
in
addr16
iret
je
hlt
sub
leave
fidivl
dec
or
pop
or
mov
lcall
std
xor
testb
jl
aam
jo
pop
jo
sbb
fisubrl
in
pop
dec
sbb
or
je
pop
les
aam
xor
fidivrs
in
push
cltd
ret
sub
rorb
xchg
hlt
dec
mov
cmp
inc
xchg
pusha
aad
adc
pop
mov
int
add
inc
and
sub
mov
or
and
daa
xlat
xchg
repnz
loopne
jg
mov
out
into
ljmp
mov
das
inc
xchg
sub
sub
adc
in
jns
lea
into
stc
push
mov
cmpsl
sbb
or
push
data16
add
lds
jb
ret
daa
mov
adc
popf
mov
enter
clc
lret
in
and
movsl
lret
rol
cmp
pusha
pop
scas
je
loop
ds
push
stos
imull
out
add
xor
and
aas
xchg
pop
fists
aaa
icebp
addr16
xchg
push
mov
push
imul
dec
rol
add
fwait
push
xchg
loope
icebp
int3
adc
xchg
dec
add
cmpsl
mov
sbb
and
or
cmp
in
push
xchg
dec
mov
ds
imul
fmul
xchg
fadd
ja
je
sbb
add
int
adc
fdivs
inc
fs
int
lcall
xchg
sti
ret
dec
fucomip
das
jmp
cmp
sub
pop
mov
or
nop
inc
xor
loope
sbb
mov
ja
add
mov
inc
fildll
mov
test
ljmp
stc
test
mov
repnz
cltd
xchg
and
std
jb
cmc
pop
jmp
shlb
into
push
mov
xchg
rol
or
push
outsl
cmpsb
mov
xchg
int
push
push
dec
cmp
xchg
push
aas
repz
lods
popa
fdiv
xlat
adc
add
inc
pop
lretw
adc
mov
inc
mov
ljmp
cltd
pop
dec
or
xchg
xor
mov
aad
std
mov
shll
jno
mov
pop
cld
imul
repnz
dec
jge
sbb
fcoml
sarb
hlt
stos
cltd
rep
mov
mov
mov
and
fwait
adcl
clc
loop
pop
mov
xchg
inc
or
aas
out
sub
jg
adc
pop
stos
adc
mov
xchg
cmp
mov
pop
sub
xlat
sarb
push
call
xchg
in
aad
xor
mov
or
inc
sub
jne
jecxz
in
adc
sub
out
xchg
sub
out
inc
adc
in
inc
clc
push
mov
lods
popa
mov
pop
lret
gs
lcall
popf
mov
es
iret
add
mov
loop
cmpl
and
out
std
stc
dec
adc
jbe
adcb
jg
xor
cmp
push
out
or
negb
jbe
daa
in
lods
shll
jmp
insl
insl
pushf
test
repz
daa
push
push
mov
jns
fstps
jmp
push
cmp
or
rclw
xchg
pop
jmp
lods
sub
testb
stos
pop
cmpsl
lock
add
mov
push
pop
or
lret
xchg
dec
fwait
xchg
cli
stc
push
mov
and
ss
fsub
jne
int
idiv
dec
sti
sbb
mov
mov
cwtl
mov
jb
inc
jnp
push
adc
inc
fcomp
mov
adc
fst
sub
shll
in
push
testl
mov
mov
jo
jo
push
popa
dec
cmpsb
rcll
mov
pop
hlt
pop
jl
stos
xorl
daa
mov
and
test
aad
popf
inc
shlb
loop
xchg
mov
inc
lds
xor
push
test
push
cmpb
sar
cmc
xchg
cmc
jge
push
xchg
pop
jle
mov
mov
jp
lea
mov
cmp
gs
loop
test
je
lods
jnp
nop
sub
xchg
mov
push
sbb
adc
sbb
dec
int3
shrl
inc
dec
rolb
add
pop
xor
sahf
inc
mov
lock
push
jge
aas
add
sub
sets
mov
mov
fcompl
mov
jnp
jp
cmpsb
out
outsl
movsl
aaa
pop
test
popf
sub
ror
mov
cmp
xchg
testl
dec
js
bound
adc
repz
repnz
test
jmp
nop
test
cs
inc
hlt
fsubs
pop
popa
sbb
cmp
mov
sahf
xor
jb
pop
xor
inc
mov
inc
mov
mov
hlt
cmp
adc
add
orb
ja
mov
inc
mov
push
pop
cli
push
push
cli
mov
lods
cmpsb
ds
int3
inc
fcomip
mov
adc
arpl
inc
sub
movsl
hlt
or
jp
jecxz
.byte
mov
sbb
add
sbb
add
sbb
add
sbb
add
or
sub
or
sbb
add
or
add
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pusha
dec
add
add
add
incl
add
add
arpl
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
jl
add
add
add
incl
add
add
dec
add
add
add
mov
incl
add
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
cwtl
dec
add
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
mov
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
stos
dec
add
stos
dec
add
lcall
dec
add
dec
add
incl
add
add
mov
add
add
add
mov
add
mov
add
incl
add
add
add
incl
mov
add
cmp
cmpb
add
jmp
dec
add
les
add
add
incl
add
add
les
add
add
incl
add
add
dec
add
add
add
incl
add
add
enter
add
add
incl
add
add
enter
add
add
incl
add
add
add
add
incl
add
add
lret
dec
add
add
add
sti
into
dec
add
into
dec
add
add
add
incl
dec
add
dec
add
inc
rorl
rorl
mov
dec
add
xor
dec
add
inc
dec
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
aad
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
fmuls
add
add
incl
add
add
fmuls
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
fisttpll
add
add
incl
add
add
dec
add
add
add
jmp
fimuls
jmp
jmp
fisttps
in
fisttps
lock
incl
loopne
add
dec
add
jmp
loopne
add
pushl
loopne
add
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
out
add
add
add
incl
add
add
call
add
ljmp
ss
add
add
add
add
push
sbb
add
adc
add
or
ficompl
or
in
sbb
add
sbb
add
or
sub
or
sbb
add
or
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
in
addr16
inc
shll
xchg
clc
inc
jle
ja
jl
mov
cli
cmpl
mov
and
lods
cmp
bound
xchg
aas
std
mov
adc
cmpl
jno
shlb
je
mov
and
push
js
xor
loope
push
pop
out
insb
push
xor
dec
push
dec
sbb
jae
cmc
add
jne
xchg
stc
insb
cmp
pop
jge
push
inc
lcall
arpl
inc
imul
or
add
mov
pop
sahf
jns,pn
or
sbb
mov
imul
fisttps
push
out
cmp
sbbb
das
stos
fistpll
mov
scas
in
std
fs
push
ret
hlt
mov
xor
imul
decb
dec
mov
repnz
pop
insl
xchg
ljmp
faddp
pop
out
imul
jno
mov
mov
add
divb
inc
sub
lods
mov
aad
mov
jb
mov
add
clc
and
gs
mov
cld
mov
cmpsb
mov
or
cli
in
movl
stos
xchg
rolb
fiadds
cmc
outsb
mov
into
and
lock
jo
test
ret
xchg
xchg
scas
iret
test
mov
aas
sahf
movb
sbb
sbbb
mov
pop
lcall
mov
repnz
mov
out
rorb
imul
ljmp
cmp
ret
xchg
lret
xor
mov
mov
movsb
xchg
mov
adc
add
inc
and
rcrb
mov
stos
pop
mov
xchg
imul
add
xchg
add
scas
test
call
mov
push
das
cmp
mov
xchg
int3
or
or
in
cmp
jmp
ret
xlat
dec
fists
cwtl
shrl
inc
jmp
imul
cmp
rcl
cmc
fdivrl
mov
movsl
ja
in
insl
enterw
jge
popf
xchg
or
ljmp
hlt
jne
jo
cmp
scas
or
mov
int3
es
fucomip
push
sahf
scas
push
insb
leave
sbb
mov
adc
add
scas
in
pushf
sti
jae
movsb
push
in
movsb
mov
cltd
cmp
dec
cmp
enter
sahf
sub
icebp
sub
scas
insl
or
rcrl
inc
mov
mov
mov
push
icebp
push
shrb
inc
push
aas
sub
mov
test
nop
add
andl
mov
or
jns
jbe
jge
mov
push
cmp
test
push
popa
movsl
rcl
add
aad
adcl
jns
loope
insb
dec
or
fdivrs
xchg
stos
pop
mov
std
xchg
cmc
sbb
sbb
aaa
jecxz
aad
sub
xor
sbb
daa
jl
xor
jo
scas
test
fucom
insb
add
jno
pop
pop
lahf
xchg
pop
cld
xor
sti
mov
mov
pop
push
imul
push
data16
cmc
push
std
adc
push
movsb
ss
in
push
imull
or
and
inc
push
mov
jnp
jno
jecxz
cmpsb
and
das
ret
and
lcall
or
imul
mov
pop
testb
push
aas
cmp
pop
xor
xchg
sbb
xor
popf
xlat
dec
inc
push
std
outsb
out
pop
roll
or
jecxz
in
xchg
fidivl
mov
push
and
jne
loopne
or
adc
test
xor
and
in
call
pop
xchg
fistpll
push
out
push
push
sbb
scas
mov
repnz
rclb
in
lret
adc
pop
inc
mov
dec
add
inc
loop
dec
subl
int3
lock
leave
dec
es
adc
adc
xor
adc
xchg
fadds
imul
cmp
add
push
outsb
lods
daa
pop
in
sub
and
add
adcl
inc
lret
sbb
adc
pop
push
lea
scas
pop
and
push
add
push
sbb
fmuls
ja
pop
cmpsb
pop
jno
mov
pop
ret
mov
aaa
orb
sbb
outsl
ret
xlat
sbb
pop
mov
lods
mov
sbb
or
sub
mov
aaa
cltd
mov
loope
inc
cmp
xchg
int
gs
jo
dec
mov
pop
inc
jae
pop
aaa
pop
push
ds
jnp
fimuls
sti
dec
in
sti
mov
or
stos
mov
imul
fs
mov
aad
sub
lcall
xor
lock
scas
add
ljmp
mov
mov
push
stos
stc
arpl
and
ret
add
mov
repnz
pop
icebp
out
or
sub
sbb
pushl
sbb
in
bound
adcb
xlat
mov
imul
out
jl
add
mov
incl
add
cmp
mov
adc
mov
xor
cli
dec
adc
cmp
das
push
in
outsb
inc
pop
lret
mov
pop
pop
int
sahf
add
jl
imul
xor
mov
jmp
out
add
shlb
push
pusha
daa
sbb
sbb
pop
mov
aad
popa
mov
cwtl
dec
inc
imul
and
lds
stos
xlat
fcomps
mov
out
xchg
pop
fildl
mov
shl
ds
jno
loope,pt
out
scas
movsb
and
repnz
subb
into
lret
mov
jl
sbb
call
mov
push
shlb
fmulp
jmp
scas
movsl
mov
out
mov
xchg
daa
push
sti
pop
enter
push
rcl
xchg
gs
dec
enter
add
into
sti
mov
lea
push
cmp
ss
mov
dec
add
fiadds
jbe
pop
push
jl
sar
es
adcl
fistpl
ficoms
out
push
xchg
jle,pt
daa
pop
xchg
add
dec
add
push
sub
cwtl
jb
iret
mov
arpl
push
ret
mov
lahf
inc
mov
int
leave
popa
enter
push
cli
cmp
push
lods
xor
cmp
add
cmp
add
test
test
push
stos
shr
dec
pop
int3
dec
stc
pop
jo
je
imull
push
jo
nop
sub
mov
roll
push
sti
rorl
mov
sbb
ret
adc
cmp
iret
adc
enter
outsl
leave
cld
adc
insl
add
push
push
sahf
test
mov
push
or
add
movsl
adc
sbb
movsl
push
pop
out
fwait
add
or
jl
jne
stos
jg
popa
cltd
mov
insb
cs
push
mov
or
or
xor
dec
adc
loop
push
ss
int
adc
push
fldt
test
dec
jl
mov
or
mov
ret
mov
dec
push
xchg
bound
adc
push
aam
and
xchg
addr16
cmc
sbb
inc
mov
repz
pop
pop
in
mov
xor
test
loop
outsb
inc
negb
bound
aas
push
xor
pop
js
sbb
or
push
push
ss
jg
jge
imul
cmp
push
sub
mov
jnp
aas
dec
pop
imul
cli
mov
ss
stos
daa
lahf
test
insb
mov
sahf
sti
push
in
pop
das
je
lds
xchg
and
sub
jb
cwtl
add
push
leave
sub
mov
sub
pusha
pop
pop
cmp
adc
push
mov
push
sti
push
push
xor
push
pop
push
inc
sub
inc
lds
xor
inc
cmove
inc
stos
pmulhw
daa
and
imul
inc
mov
xchg
mov
outsl
lock
mov
sub
inc
pushf
inc
fs
mov
pop
hlt
jle
inc
mov
dec
xor
cmp
repz
repz
dec
cmc
call
stos
rcrb
sub
bound
mov
dec
clc
add
and
movsl
or
sub
jecxz
js
and
sub
lret
sub
rcll
xor
scas
clc
popa
in
mov
cltd
adc
insb
xor
jno
dec
push
jnp
fwait
pop
shrl
dec
scas
mov
sub
lret
enter
faddl
lahf
nop
xchg
lds
lods
je
and
pushf
aad
jg
xor
sbb
mov
sub
in
into
jp
popa
and
dec
cmc
popf
push
ret
movsl
lahf
popf
jne
mov
in
lods
and
mov
mov
jbe
xchg
movsb
pop
movsb
loope
stos
adc
xor
sbb
xchg
mov
pop
popa
mov
dec
mov
mov
test
mov
mov
add
sti
mov
lods
call
push
or
sbb
xor
hlt
push
test
xchg
stos
hlt
pop
xchg
mov
fistps
les
and
fwait
test
cmpsl
xor
inc
cmp
cmpsl
ja
add
stos
rorl
es
push
insl
jecxz
or
xlat
xchg
loopne
jno,pt
fildl
sub
scas
lcall
pop
outsl
pushf
fwait
stc
sbb
add
xchg
push
cmp
test
jbe
push
adcl
mov
dec
xchg
mov
mov
cmp
cmp
lods
scas
xchg
adc
adc
jmp
pop
and
jo
cli
cli
mov
frstor
sbb
xchg
mov
inc
aaa
cmp
push
jo
fnsave
shrb
into
add
in
dec
mov
imul
repz
gs
and
jecxz
xor
jns
movsb
divl
adc
outsb
jl
outsb
testb
jae
in
jns
js
insb
jo
sarl
loopne
cltd
rcl
arpl
push
movb
mov
test
inc
xor
sub
inc
pop
mov
xor
and
clc
pop
inc
outsl
imull
dec
aas
fcoms
mov
jge
sti
mov
jnp
lods
arpl
mov
das
inc
pushl
or
int3
mov
sbb
jnp
xor
fcoms
xchg
or
cmp
add
pop
cmp
push
in
xchg
testb
aad
jp
out
fwait
inc
repz
out
sbb
jne
jl
cld
mov
or
xchg
sti
popa
sbb
and
repz
ret
xlat
mov
daa
loopne
aam
out
xor
inc
and
js
mov
aaa
or
push
lods
lds
xlat
dec
or
std
pop
xchg
imul
or
fildll
and
adc
sbb
inc
repnz
mov
pop
push
js
dec
push
js
mov
or
jge
adc
inc
mov
ljmp
int3
push
pop
and
rcrb
cmc
bound
gs
fnstcw
clc
bound
sarb
jmp
push
cmp
push
sahf
in
or
nop
add
sub
jg
or
fistps
push
adc
or
or
out
ret
mov
scas
js
xchg
xchg
mov
or
mov
cmp
repz
or
dec
cmpsb
notl
inc
mov
test
push
lahf
cmpsb
push
jmp
jl
imul
nop
sbb
hlt
enter
fildl
adc
repnz
icebp
pop
in
mov
insb
cli
mov
ret
and
jecxz
pop
lret
rcll
or
cmc
sbb
inc
into
jl
push
jp
mov
jl
lea
popa
std
push
mov
push
shl
idiv
mov
sbb
xchg
testl
sub
gs
mov
and
xchg
xchg
jge
into
ds
out
mov
push
scas
dec
shlb
stc
mov
jecxz
je
inc
xchg
push
add
cmc
xor
test
lds
sbb
clc
bound
xchg
push
adc
adc
pop
inc
push
mov
jge
insl
push
cld
lret
movsl
scas
daa
jl
push
mov
int
pop
and
aam
shrl
ret
movsl
and
scas
add
sbb
jge
out
push
lret
xor
shlb
or
aam
dec
cmpsb
push
test
icebp
imul
cltd
fwait
insl
inc
sbb
sub
sbb
jmp
test
cmp
sub
data16
cmp
or
push
in
sbb
std
mov
or
fstps
shlb
aam
imul
push
mov
nop
or
cmc
inc
scas
jns
cmpsb
xchg
aaa
cmp
iret
out
ret
rcll
je
mov
xchg
push
push
pop
jno
sbb
aad
out
push
ja
and
or
dec
loope
fstpt
dec
or
add
daa
xor
mov
mov
mov
sub
popl
mov
jl
out
shrd
ret
jecxz
into
loopne
int
jg
out
arpl
push
jbe
scas
cmp
aaa
sub
xlat
test
pusha
and
push
mov
mov
add
adc
lret
cmp
pop
cmp
movl
inc
sub
lods
test
dec
mov
std
xlat
leave
mov
sbb
xchg
in
rcrl
adc
jecxz
add
fs
test
imul
cmp
cmpsl
filds
pop
fisttpll
aas
or
dec
shl
inc
lahf
jno
jmp
addr16
sahf
mov
lret
dec
add
push
lock
mov
cmpsl
and
pop
add
arpl
test
cmp
or
mov
imul
sbb
sbb
cwtl
cmc
inc
daa
sbb
mov
roll
in
jmp
mov
mov
ljmp
call
aaa
push
insb
xchg
sti
mov
in
jl
scas
or
stos
push
les
in
fpatan
popf
insb
mov
mov
and
in
roll
or
sarl
rolb
mov
in
std
pop
shll
inc
ret
jns
mov
inc
movsb
mov
ficompl
push
cwtl
orb
adc
dec
xchg
stc
bound
lahf
xor
dec
dec
fimuls
push
add
mov
sarb
cmp
std
fsts
dec
mov
or
in
sbb
in
add
inc
mov
jnp
cmp
js
jecxz
push
adc
cld
vzeroupper
jp
mov
enter
push
ljmp
add
cwtl
sbb
push
push
ss
add
mov
callw
ja
dec
lea
mov
lods
mov
pop
mov
std
ja
or
subb
in
pop
push
imul
xchg
cwtl
pop
adc
sbb
xchg
lret
cmp
mov
fildl
mov
into
sub
pop
int
mov
shlb
mov
orl
sar
fidivs
push
movsl
inc
mull
call
imul
and
push
xchg
jge
jp
cmp
cmpl
inc
dec
fs
call
fs
cs
xorb
test
mov
jo
pop
iret
jle
cmp
pop
sbb
enter
cmp
rolb
mov
jmp
lods
inc
idivl
and
adcb
loop
loop
xor
loop
adcl
lahf
sub
inc
dec
scas
lahf
sbb
xchg
iret
push
mov
adc
ljmp
push
pop
ss
xor
mull
in
pop
mov
adc
mov
std
jl
mov
jne
or
imull
lock
mov
dec
inc
stos
sub
mov
sbb
cmc
iret
lret
sub
lea
jb
negl
inc
push
mov
mov
jp
sub
xchg
loopne
js
daa
mov
cmpsb
stos
xchg
and
xlat
xlat
repnz
sub
dec
sub
dec
fcmovnu
cmp
mov
push
and
adcl
aam
mov
or
pop
cmp
mov
popa
imul
push
jbe
gs
xchg
xor
in
rcl
jg
mov
jecxz
mov
in
jbe
lret
mov
mov
jo
or
idiv
cmp
cmp
pop
andl
lret
mov
push
repnz
cwtl
jle
xor
adc
push
mov
pop
cs
sti
xor
fcoml
dec
mull
lcall
cmp
or
sbb
push
sub
sbb
mov
pop
dec
std
adc
pop
in
int3
lods
jno
and
adc
cmpsl
adc
cmp
add
aas
cmpsb
mul
cmp
xchg
popa
repnz
enter
movsl
inc
sbb
lods
or
or
mov
inc
sbb
cmp
or
mov
mov
jp
scas
les
or
rolb
roll
jp
movsl
test
fadd
pop
adc
sbb
pop
jg
xor
push
outsl
mov
fisttpll
lods
out
fstpl
mov
inc
test
ljmp
sbb
jo
pop
sub
fisubrs
mov
push
test
les
sti
adc
fsubs
cmp
lret
andb
adc
adc
test
lea
mov
mov
es
pop
mov
fisttps
mov
mov
out
filds
rcl
fwait
add
ficoml
pushf
cli
ja
cmc
sbbl
repz
loope
jb
mov
int
lea
lret
and
sbb
sub
sub
cmp
inc
mov
das
sub
fwait
jnp,pt
and
test
jg
add
into
aad
and
jo
sbb
or
ret
add
add
or
pop
xchg
fcompl
stc
ja
fidivl
mov
repnz
shll
ficompl
dec
mov
loop
sti
scas
test
out
jge
sub
xchg
pop
jmp
mov
cs
fwait
leave
jnp
inc
dec
dec
punpckhdq
cmp
filds
xor
dec
xchg
inc
mov
loope
repz
les
cmpsb
xor
icebp
jo
in
fsubrs
mov
cmp
fs
push
rorl
inc
push
xor
mov
mov
nop
push
add
inc
fwait
xor
jbe
ret
fmull
jecxz
xchg
fmuls
jns
in
cltd
mov
xor
shll
mov
sub
inc
shl
dec
fbld
push
nop
xchg
cmc
in
sub
sub
repnz
xor
adc
mov
xchg
and
in
mov
push
mov
sbbl
test
into
and
jb
scas
rcr
inc
mul
repz
shlb
xor
xor
jnp
push
aam
push
fidivs
clc
loopne
pop
das
and
shlb
pusha
jae
icebp
scas
int3
negl
cmp
jno
adc
cmp
inc
jp
fistl
xchg
pop
xor
jns
test
aam
xchg
repnz
lahf
xchg
idiv
stos
jg
push
add
aad
pop
pop
into
repz
push
sbb
testl
xchg
mov
insl
mov
mov
icebp
testb
and
mov
sbb
xlat
clc
dec
mov
or
cltd
fmuls
bound
adc
xchg
in
int
push
daa
scas
and
add
ss
sub
hlt
in
jae
popl
mov
ljmp
test
decl
jp
xchg
out
imul
mov
ror
pushf
jnp
cmp
arpl
in
lret
cwtl
inc
xchg
leave
dec
and
call
insb
out
push
addr16
int3
pop
lea
xor
jns
jno
cld
mov
testl
xor
in
mov
xchg
in
in
xchg
in
jno
mov
fisttpl
jmp
ss
addr16
inc
add
push
mov
jge
into
jo
or
mov
roll
addl
enter
rcrl
dec
repnz
push
pop
push
or
fildl
mov
mov
xor
test
js
ljmp
or
dec
arpl
loop
fs
les
inc
repz
outsl
xor
jno
data16
lds
ds
sub
xchg
jg
inc
cmpb
xchg
jp
jae
add
push
add
inc
pop
mov
jp
push
icebp
cli
and
out
jns
sub
fcoml
imul
mov
cmp
adc
or
popf
shr
popf
mov
sbb
out
movsl
jl
dec
mov
xchg
lods
mov
lea
adc
pusha
jne
imul
repnz
dec
cmpsl
scas
stos
gs
adc
cmc
and
outsl
add
in
xor
sub
mov
jmp
shlb
std
lock
mov
mov
sub
fcmovnb
xor
jns,pt
fbstp
out
xor
jbe
sti
test
jnp
lcall
cli
stos
icebp
rcll
xor
cmpsl
inc
add
pop
icebp
sub
sar
xor
iret
or
ljmp
loope
outsb
push
dec
cmp
and
mull
add
movsl
lcall
popf
cmpl
sarl
cmp
push
dec
leave
sahf
jb
cwtl
insl
inc
cmpb
xor
sbb
cmpsl
xchg
daa
loop
cld
shl
scas
hlt
inc
xchg
xchg
xlat
xor
mov
xor
bound
lcall
aas
insb
in
adc
dec
aas
mov
loope
or
hlt
xor
xchg
movsb
outsl
sub
sub
gs
or
sbb
mov
push
mov
rcrb
xchg
add
daa
pop
mov
insb
mov
iret
and
add
roll
lret
pop
mov
mov
pop
fpatan
sbb
xchg
sbb
lods
add
xchg
int3
pop
jae
repz
mov
out
js
xchg
pop
xchg
mov
stos
cmp
mov
imul
cli
and
jg
popl
pop
ret
xchg
xchg
pop
mov
ds
stos
jle
cmpsl
or
mov
lahf
jecxz
fucomip
imul
mov
xchg
mov
dec
hlt
pop
popa
and
lcall
jmp
push
add
sbb
lret
mov
subl
push
mov
insb
in
sahf
mov
add
pop
xchg
mov
cmc
cmp
leave
adc
mov
insl
mov
fiadds
lods
sbbl
inc
stos
mov
lds
das
shlb
inc
pop
mov
je
xor
popf
push
shll
or
imul
int3
add
push
cmp
inc
jne
jecxz
cmp
jl
out
xchg
loop
sub
popa
shll
jae
adc
lahf
jle
mov
mov
in
aaa
push
pop
ds
lods
add
stos
pop
mov
cmp
enter
lock
or
inc
cmp
stos
leave
jbe
dec
add
aaa
in
loopne
.byte
