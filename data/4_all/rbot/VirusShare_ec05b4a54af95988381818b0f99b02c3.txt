subb
enter
leave
cld
push
xchg
pop
pop
push
out
mov
xchg
cmpsb
xchg
pop
pop
cwtl
cld
inc
into
pop
cwtl
xchg
push
and
xor
out
push
mov
cs
ljmp
pop
les
jae
push
cmp
push
in
mov
sub
jg
test
lcall
sarl
in
inc
lock
cbtw
dec
rcrb
cs
add
enter
jbe
xchg
in
sbb
mov
ret
sbb
sbb
jns
xchg
xor
out
js
mov
mov
sub
cs
int
mov
and
lcall
jbe
mov
jecxz
fisttpll
pop
lds
rol
call
push
lcall
pusha
push
subl
fildl
nop
adc
xchg
sbbb
in
shl
test
enter
jnp
adc
cmp
gs
xor
les
sbb
adc
popf
dec
push
adc
xchg
hlt
push
mov
mov
cld
js
in
in
aad
mov
int3
out
mov
or
repz
jne
test
pop
test
jnp
sbb
adc
test
xchg
icebp
or
jno
jmp
mov
cli
xor
add
jns
mov
divl
mov
test
sbb
int
pop
or
pop
xlat
lods
dec
lcall
ds
sti
sbb
rcrl
nop
jne
mov
dec
les
push
arpl
insb
mov
in
sub
mov
insb
stos
adc
fidivs
xchg
mov
jmp
cli
cmp
fmull
sub
les
in
dec
adc
sub
adc
bound
iret
sub
push
jne
loope
mov
and
sahf
pop
pop
add
mov
or
stos
ror
adc
repz
and
rcll
cmp
cli
dec
jmp
xor
add
mov
jmp
ds
iret
adc
xor
or
xchg
in
cmp
xor
push
fsubrs
push
lods
cld
cmp
push
hlt
jb
xor
in
jge
pop
cltd
jmp
xor
or
inc
fisttpl
clc
je
ficompl
cmpl
repnz
and
rcr
jns
test
int
out
sub
gs
insb
mov
xchg
sbb
xor
lahf
std
jmp
pop
xorl
std
rcll
dec
inc
lret
dec
sti
push
arpl
push
dec
mov
inc
les
adc
nop
mov
loop
leave
test
xor
mov
outsl
xor
push
shll
hlt
mov
mov
loopne
stos
mov
test
and
scas
jge
testb
or
outsl
xor
and
mov
and
cmpsb
cld
inc
stos
ret
or
fmuls
cmc
outsl
cmpsl
icebp
repnz
jb
fldcw
into
dec
dec
loopne
push
cmpb
xchg
repnz
add
fisubrl
xor
or
shlb
out
mov
rolb
jnp
sahf
xor
sar
nop
in
jnp
xor
mov
push
push
mov
outsb
divl
loop
jae
ret
mov
pop
adc
shll
dec
and
stc
shll
push
cmpsl
sbbl
ja
mov
adc
or
sbb
imul
cmp
push
aam
divl
stos
xor
adc
adc
sbb
adc
lret
xor
lock
movsb
mov
cmp
mov
mov
push
stos
mov
or
sarb
mov
xchg
stc
inc
or
jle
mov
and
mov
inc
sbb
and
push
mov
insl
int3
gs
popf
pop
add
das
sub
push
lcall
js
mov
data16
pop
jnp
xor
ffree
mov
cmpsl
insl
dec
dec
xchg
inc
push
jg
mov
mov
out
mov
pop
movsl
pop
sti
push
dec
mov
mov
pop
pop
lods
ret
inc
or
jns
cmp
js
in
inc
mov
mov
aad
push
andb
push
dec
xor
push
adc
xor
das
lahf
mov
xchg
push
cmpsb
and
addb
popa
repnz
pop
das
lret
testl
ds
mov
or
insl
and
scas
and
repz
mov
ljmp
mov
movsl
xchg
daa
mov
and
and
add
push
adc
popf
fs
daa
rcr
mov
mov
xor
lret
cs
cmc
clc
outsb
outsb
and
inc
add
sub
adc
push
test
cs
ud0
lahf
push
adc
jg
adc
push
repnz
fmul
popf
and
test
jle
scas
jnp
push
ret
aas
shll
cmp
mov
dec
mov
lods
mov
sub
push
push
and
xchg
cld
inc
xor
adc
sbb
mov
in
stc
lock
test
mov
push
test
adc
insb
shll
push
add
jnp
fiaddl
jle
out
mov
repz
popf
in
cmp
fs
repnz
jns
push
jecxz
mov
rol
mov
push
nop
adc
jnp
jge
fidivl
jmp
mov
cmpsl
mulb
jp
dec
rorb
dec
dec
popa
xor
xchg
test
aam
add
lods
cmp
stos
lahf
out
call
stos
es
jg
test
cmp
mov
sbb
cmp
jbe
xchg
xor
subl
and
test
push
arpl
popf
lds
mov
stos
mov
jg
jl
mov
jo
cmp
adcb
xchg
mov
xor
dec
inc
mov
sub
and
pop
lahf
fs
xchg
push
cmc
mov
add
mov
xchg
jbe
inc
mov
dec
inc
scas
cmc
mov
cmpsb
jle
out
dec
xchg
jmp
sbbl
pop
scas
jae
cltd
inc
das
xor
or
sub
add
cltd
adc
xchg
pop
test
pop
dec
lahf
and
xorl
adc
and
or
jns
lcall
pop
dec
adc
out
test
jno
pop
dec
aaa
arpl
jne
imul
jb
or
cmc
add
out
xor
ljmp
test
dec
xor
jae
push
adc
scas
stos
ds
insl
jbe
pop
daa
mov
mov
adc
in
int
jb
shr
in
xchg
pop
xchg
addr16
add
icebp
xchg
cltd
cmp
jp
pop
adc
sub
xor
dec
xchg
ret
call
jge
dec
js
dec
lea
insl
or
filds
ljmp
dec
jno
mov
hlt
jae
cmp
pop
shl
pusha
pushf
add
cmp
das
push
inc
xor
push
int3
adc
lcall
sbb
ss
lock
jno
ret
adc
sbb
mov
adc
and
cmp
stos
mov
hlt
jg
into
insl
pop
mov
jg
xor
rolb
xchg
cmc
or
js
ja
push
push
push
in
jno
cmp
adc
jns
and
sarl
jecxz
push
mov
cmpl
inc
dec
push
iret
xchg
xchg
cmp
jle
lcall
mov
xor
leave
sub
pop
jns
ja
dec
repnz
xchg
xchg
rolb
push
mov
inc
hlt
add
cmp
xor
out
dec
pop
cltd
mov
mov
mov
jmp
mov
dec
or
jl
push
data16
jmp
mov
repnz
addb
call
cmp
jae
sti
push
cmp
push
testl
jmp
mov
sti
cwtl
hlt
and
jnp
leave
xchg
shlb
xchg
push
xchg
lds
sbbb
hlt
loope
add
jle
inc
jno
sbbb
or
scas
fistl
pop
mov
sub
inc
sahf
mov
mov
sub
mov
mov
in
xor
mov
push
shlb
mov
jp
fmull
dec
test
adc
jmp
cmp
pop
inc
cwtl
icebp
cmpsb
jge
mov
xchg
push
shrb
out
sub
rclb
lods
scas
mov
lds
repnz
jmp
pop
paddw
in
mov
mov
adc
mov
push
ret
hlt
testl
push
scas
jno
enter
mov
xor
lret
dec
adc
add
lea
imul
aaa
xlat
xor
shlb
data16
jge
sub
sub
gs
scas
arpl
jns
cmp
std
cmp
and
adc
popa
std
xorb
pop
mov
int3
aam
outsl
mov
lcall
add
lods
or
cmp
hlt
adc
repz
xlat
jg
pop
mov
fistpl
jmp
lea
add
inc
cmpb
cltd
ja
xchg
jo
repz
push
jg
call
pop
jmp
cmp
jl
mov
arpl
pop
or
cmp
pop
cmp
mov
outsl
ret
sbb
pop
mov
mov
inc
out
sub
movsl
mov
ret
push
data16
outsb
fdivp
lahf
and
hlt
mov
and
xchg
add
mov
xor
icebp
or
out
xchg
pop
imul
xchg
lahf
out
sbb
lret
lcall
jp
mov
daa
push
movsl
jmp
divl
cmp
aas
sbb
repnz
jbe
out
pop
push
mov
sub
jno
cmp
repnz
push
cmp
cmpsl
sti
cmp
adc
push
jge
bound
dec
push
cltd
cmc
jg
cmc
jbe
lods
dec
xchg
divb
addb
xchg
mov
push
repz
mov
xchg
idivl
pop
inc
or
xchg
das
pop
xchg
mov
push
inc
sbb
and
mov
arpl
shll
push
fs
movsb
xor
mov
xor
cs
addr16
std
cmc
bound
addr16
cwtd
push
andb
jl
cli
loop
mov
stos
test
mov
mov
pushf
pusha
xchg
add
pop
xchg
dec
push
pop
fsts
fistps
hlt
push
ss
mov
lcall
enter
or
xor
mov
xor
insb
jl
int3
ljmp
jmp
push
lds
ja
inc
mov
or
push
cmpsl
xor
int
inc
xorb
or
in
or
jnp
push
jo
ss
mov
dec
xor
jle
sti
and
test
mov
mov
adc
pop
cmp
xchg
mov
mov
jle
in
or
aam
je
mov
jle
mov
jnp
xor
stc
andl
jae
xchg
mov
sbb
or
dec
dec
jl
int3
inc
icebp
movsl
jns
fistps
and
inc
mov
movsb
fstpt
xchg
loopne
add
jno
dec
mov
mov
pop
clc
ds
test
bound
dec
cmp
icebp
addr16
inc
cmp
incb
mov
add
jg
shlb
sub
stos
jge
mov
fnstsw
int3
in
push
mov
insl
je
dec
mov
sbb
jge
fwait
mov
mov
pop
stos
adc
out
icebp
test
mov
ficoms
cltd
lahf
decl
pop
lods
pusha
add
jmp
clc
add
shll
sub
gs
dec
dec
ss
push
inc
add
jl
es
sbb
push
ret
stos
jge
aaa
rolb
lds
jmp
mov
scas
es
add
fsubl
sub
pushf
ja
xor
jno
pop
fcmovnbe
push
sbb
inc
call
sbb
dec
and
xor
outsb
and
mov
into
aaa
fwait
dec
pop
mov
inc
ja
ja
xchg
pop
dec
gs
and
dec
lock
ss
popa
cmpsb
sahf
cmp
fisttps
iret
adc
out
push
xor
sbb
adc
sbb
sbb
ljmp
mov
mov
pop
ret
call
push
xor
into
mov
insb
ss
xor
das
lret
mov
popf
ror
push
mov
or
enter
cltd
mov
mov
imul
fnstsw
repz
dec
jb
mov
jl
pop
xchg
fwait
mov
jl
es
stos
adc
jle
int
mov
jno
cmc
xor
xor
jno
scas
pop
inc
ret
movsl
fnstenv
fs
jge
inc
mov
scas
out
mov
sub
icebp
adc
clc
push
test
mov
iret
fists
or
mov
jle
aaa
stos
divb
insb
xchg
sub
shrb
jg
mov
nop
cmp
out
jne
test
or
sub
mov
mov
jno
je
xchg
jbe
sti
into
lods
popa
xorb
sahf
pop
stos
jp
ds
rclb
test
dec
out
xchg
in
lret
xchg
out
push
inc
push
adc
or
xor
pop
pop
xchg
mov
cmp
mov
mov
rcr
in
lcall
addr16
xor
and
mov
mov
jnp
cmp
cmpsb
xor
and
and
or
xchg
sti
and
pop
pusha
pop
test
idivl
mov
mov
ja
mov
inc
xchg
jno
jae
mov
das
lcall
cmp
in
ficompl
xchg
push
movsb
or
lods
inc
push
xor
aaa
and
mov
jg
pop
pop
ret
and
push
xchg
sahf
dec
lds
sahf
xchg
scas
cmp
ret
mov
lahf
push
mov
xchg
push
xchg
shlb
sarl
std
push
xchg
call
pushf
and
push
sub
push
hlt
jnp
xchg
cwtl
lcall
add
pop
pop
push
mov
das
addl
mov
and
xchg
sub
gs
neg
mov
test
nop
scas
jnp
adcb
mov
imul
pop
jge
in
jle
clc
xchg
jno
mov
std
fmuls
pop
inc
shll
xor
loopne
aam
sbb
outsl
pop
xor
ret
xchg
popf
fstps
or
popa
sub
sub
add
fimuls
in
push
xor
mov
shll
mov
pop
jmp
sbb
cmp
mov
xchg
add
xorb
jne
mov
popa
mov
inc
mov
add
push
loopne
mov
sbb
orb
push
jns
mov
aam
je
in
iret
push
jmp
xchg
rorb
xor
lods
mov
xchg
sti
movsb
fisubrs
push
lret
pop
jge
rclb
lret
daa
enter
fidivrs
or
pop
gs
mov
test
mov
imul
cmpl
push
pop
stc
and
shl
xchg
std
sub
nop
scas
sti
dec
mov
inc
cmp
shl
push
xchg
jno
sub
dec
push
jg
movsb
jne
out
dec
daa
push
stos
jl
jg
push
pop
dec
or
pop
push
push
lods
adc
push
arpl
dec
and
pop
in
dec
shll
or
lret
call
shrl
mov
jmp
xor
mov
shll
rcll
adc
bnd
icebp
std
lds
loope
nop
cwtl
rcl
or
outsl
or
inc
push
cmp
xor
aas
mov
aaa
jle
aas
lahf
push
divl
insb
sub
jns
sbb
xor
cwtl
pop
cmpsb
popa
xor
mov
call
insb
in
jno
xor
ret
dec
lods
pop
orb
push
push
out
dec
out
push
push
cwtl
daa
ffreep
cwtl
subb
test
pop
pop
push
xchg
sbb
push
mov
xor
gs
push
mov
lods
inc
push
mov
jno
nop
xorl
jle
pop
jbe
adc
stos
fildll
mov
mov
testb
and
dec
js
jae
test
outsl
lds
loop
jnp
jbe
cmp
xchg
pop
orb
int
inc
orb
jae
js
mov
dec
fldl
push
lcall
mov
mov
das
jnp
push
mov
out
scas
cli
ret
std
test
into
xchg
cmc
push
mov
aam
cmp
into
rcrl
lods
jecxz
test
mov
mov
jno
xor
loop
jae
pop
xor
mov
cwtl
sbb
mov
scas
incb
jmp
loop
push
insl
cwtl
ds
push
icebp
ret
jns
jbe
cltd
jl
jbe
lahf
pop
imul
add
adc
test
adcb
sub
xchg
arpl
je
push
mov
jmp
rorb
jbe
cmpsb
pop
inc
and
cmpsl
outsl
inc
aas
fs
jg
dec
xchg
test
dec
imul
arpl
pop
pop
jle
pop
mov
inc
and
jp
or
aaa
sbb
cmpb
faddl
push
cwtl
fldt
mov
jge
mov
xchg
xchg
out
dec
icebp
mov
add
mov
push
pop
and
call
adc
mov
mov
push
inc
xlat
js
inc
jb
pop
and
sub
and
lds
jno
les
xchg
add
jle
sahf
movsb
sub
shll
loope
out
fdivrs
cmp
mov
jmp
scas
testb
lea
sahf
shrl
mov
lock
inc
stos
test
ret
jg
cmp
adc
mov
cmp
jnp
add
or
adc
out
xor
in
icebp
push
jnp
dec
cli
mov
xor
mov
subl
pop
lds
cmc
out
test
ret
xchg
pop
add
push
mov
hlt
push
dec
mov
mov
roll
mov
pop
pop
stos
mov
push
mov
es
cltd
hlt
sahf
lahf
sbb
mov
aad
add
push
popa
sub
mov
cwtl
mov
inc
jne
mov
mov
out
mov
dec
loopne
shlb
sbb
and
pop
or
jle
pop
mov
sbb
mov
scas
xchg
cwtl
cmp
sbb
jae
fwait
sbb
add
sub
push
decl
fldenv
pop
ss
inc
jnp
add
daa
jo
mov
adc
jnp
divl
div
mov
cltd
div
inc
movsl
repz
pop
fs
aaa
jb
mov
inc
pop
mov
fdivrs
out
mov
push
push
shlb
jmp
out
cmpb
fcomp
rolb
leave
xor
cwtl
jo
push
adc
push
xor
ss
pop
and
add
insb
xor
xor
jg
mul
ret
sbb
push
dec
push
cli
jl
inc
sub
sbb
cmpsb
xchg
pop
out
xor
push
aaa
test
and
xor
aam
push
jge
test
aad
mov
xchg
test
sbb
pop
lea
fwait
shrl
shlb
push
rorl
pop
xor
mov
mov
mov
jae
cld
leave
push
sbb
pushf
gs
push
mov
xor
xor
sbb
mov
adcl
mov
push
fwait
outsl
in
pop
mov
dec
xrelease
and
push
cli
mov
push
out
xor
push
shll
add
fisttps
shll
cmp
push
sbb
xchg
aaa
add
test
rolb
jnp
cmp
add
test
cmp
sbb
add
and
adc
mov
jns
add
in
cs
or
jg
dec
add
mov
je
pop
push
filds
call
ljmp
test
adc
mov
movsl
ret
mov
test
insb
cld
jae
cmpb
roll
jge
inc
ret
xor
mov
and
stc
sbb
and
mov
mov
and
mov
pop
xor
ljmp
and
add
pop
mov
xor
rolb
jae
lret
mov
cmp
or
cmp
into
test
cmp
lods
into
lahf
mov
adcb
movsl
movsl
xchg
xchg
mov
inc
jne
sub
cmpsb
fiadds
jb
imul
cmp
loope
push
pop
adc
icebp
into
mov
lret
xchg
out
or
dec
lcall
xor
in
push
icebp
xchg
cld
pop
add
test
ds
mov
cmpsl
icebp
jp
mov
xlat
pusha
cmpsl
sbb
sbb
test
mov
jge
pop
or
fnstenv
inc
add
cmpsl
dec
sbbl
and
sub
addl
and
mov
fstl
adc
orb
sub
mov
jl
mov
rolb
fimuls
iretw
xchg
fs
mov
outsb
mov
adc
cmp
jge
jb
dec
jnp
ds
jns
aam
das
cmc
into
clc
mov
mov
mov
xchg
adc
je
jnp
dec
imul
jne
push
sbbl
jnp
dec
mov
sub
shll
xchg
add
lock
sub
inc
adc
inc
lea
mov
jbe
xchg
pop
stc
mov
mov
inc
push
xor
clc
mov
testl
xor
lret
adc
es
stos
pop
icebp
mov
pop
stos
cltd
cmpsb
icebp
mov
ljmp
mov
popl
movl
loope
movsb
cmp
stos
push
fs
bound
js
addb
lods
mov
and
ficoms
pop
or
xchg
sbb
jl
aaa
and
mov
decl
pop
pop
jno
iret
fmuls
js
ljmp
subb
push
and
and
push
sbb
fistpll
mov
jns
out
lods
pop
cmp
pushl
and
inc
adc
sbb
add
jae
rorl
repz
fsubrl
adc
pop
sar
ljmp
jne
mov
mov
dec
repz
mov
jns
push
repz
xor
jp
stos
pop
cmp
je
out
addr16
fwait
shll
iret
test
stos
sub
lret
rorl
mov
add
add
imul
lahf
outsb
ror
popf
jnp
and
ljmp
and
ss
cmpsl
cmpsb
in
rcll
mov
mov
fdivs
hlt
arpl
mov
lcall
add
in
inc
xchg
sti
mov
sbb
and
rcl
lahf
inc
pop
cmp
stos
sbb
aas
sti
test
lods
mov
outsl
mov
cmp
idivb
dec
std
test
dec
int3
shll
adc
cmp
push
test
in
ret
nop
adc
mov
int3
out
pop
adc
or
aaa
mov
pop
xchg
loope
pusha
fucomip
out
sub
jge
inc
inc
mov
dec
and
dec
mov
lret
lret
push
sahf
out
mov
test
and
imul
mov
add
pop
jne
sarb
jnp
push
mov
jp
mul
xorl
in
mov
clc
sbb
lods
mov
cmp
pop
inc
sub
adc
cmp
mov
sbb
ret
push
lds
mov
jle
push
xchg
push
aaa
cmc
notb
aam
lret
repz
fmuls
mov
je
cmp
aam
cmc
movsl
lds
sub
test
sub
test
sahf
xor
push
xchg
out
out
add
dec
push
and
scas
icebp
scas
enter
xor
lods
in
sbb
mov
inc
out
popf
repz
dec
mov
push
clc
jae
ja
out
mov
pop
mov
ss
out
adc
xor
mov
xor
mov
dec
xchg
movsl
xchg
inc
out
jo
sub
and
inc
insl
xchg
je
addl
out
jg
in
insl
popa
jg
sub
ret
shl
shlb
dec
and
push
repz
xchg
xor
jne
push
push
sahf
or
mov
pop
cmpsb
push
mov
int3
mov
sub
sub
pop
xchg
pop
lcall
shlb
push
js
leave
add
imul
sarl
lock
in
cmp
adc
pop
push
out
int3
fimuls
inc
xchg
sarb
adc
mulb
push
xchg
push
subb
movsb
cmp
cli
jmp
es
xor
or
inc
sbb
push
fcmovnbe
push
sahf
iret
repnz
jg
xor
das
push
mov
ss
jle
mov
scas
fwait
fs
aad
jmp
sahf
cli
jb
and
lahf
mov
lret
jl
divb
sub
stos
cmp
jne
scas
icebp
push
fwait
lret
pop
subb
addr16
gs
pop
out
loope
jb
pop
sub
mov
mov
adc
jae
inc
fs
mov
cmp
adcb
aam
jnp
sub
jnp
rorb
shll
pop
test
aad
pop
sbb
jae
dec
xlat
dec
adc
push
mov
insl
mov
scas
xor
cld
rcr
cmp
bound
pusha
xchg
sbb
jne,pt
aam
enter
icebp
repnz
or
or
loop
add
pop
outsb
mov
add
mov
lods
push
add
jmp
les
pop
xor
mov
and
clc
cmp
popa
push
mov
in
jle
sarb
xor
xchg
or
je
lods
push
lahf
xchg
jb
cmp
push
nop
pushf
mov
push
xchg
or
cli
fildll
lahf
push
dec
mov
rclb
xor
and
das
je
mov
loope
pop
hlt
repnz
lock
mov
jb
sub
imul
outsb
rorb
lret
pop
in
pusha
fs
or
fstl
xchg
mov
push
xor
lret
rolb
lret
fdivrs
sub
fdivs
outsl
xchg
hlt
addr16
loop
mov
inc
sarb
icebp
aad
int
sarb
bound
repnz
stc
jo
xor
std
stc
insl
mov
inc
push
fsts
mov
xor
dec
add
xor
add
fdivp
add
adc
aas
mov
jle
popf
pop
jl
jle
jle
mov
out
mov
cmpsl
pop
xchg
shll
xchg
mov
mov
add
into
xchg
cld
in
mov
jnp
sbb
mov
cmp
daa
cmp
jcxz
je
xchg
xor
mov
sti
cmp
mov
xor
cmpsb
pand
mov
dec
fbstp
pop
add
push
and
xchg
push
aaa
gs
sbb
lret
xor
push
cmp
jbe
xor
cmpb
push
lcall
pop
cs
xchg
jnp
lods
push
and
pop
mov
add
imul
cltd
push
clc
jl
rorb
js
xchg
sti
cwtl
fstps
cwtl
add
pop
jge
push
mov
dec
sub
out
xor
cwtl
mov
or
pusha
test
inc
ret
pop
inc
cltd
pop
dec
push
inc
mov
icebp
fdivrl
cmp
xchg
cmp
movsb
pop
or
adc
or
es
push
sub
ds
cmpsb
or
pop
mov
xchg
cltd
iret
xchg
mov
cmc
ret
out
ss
add
movsb
cltd
xor
adc
cmpsl
test
lods
fists
scas
lds
pop
ss
jnp
xchg
sbb
jl
mov
pushf
xchg
inc
dec
jnp
jno
jbe
mov
test
sahf
aas
mov
data16
cmp
sbb
loop
mov
mov
push
adc
xor
add
xchg
sub
aas
jo
idivb
movsb
shr
out
stos
inc
idivb
xchg
out
aad
cli
mov
jbe
repz
stos
adc
loop
das
sbb
stos
sub
test
xchg
aaa
cltd
add
lods
outsl
xor
jae
loopne
data16
mov
fwait
jp
icebp
push
push
in
xchg
xchg
pop
mov
rol
and
hlt
sbb
sahf
fidivs
stos
das
dec
dec
in
cmp
jl
lods
aad
sbb
stos
xchg
scas
jl
popf
shrl
stc
mov
je
aaa
mov
rorb
inc
test
cmp
lret
mov
mov
notl
data16
jl
decb
leave
jmp
stc
adc
in
jnp
xchg
mov
and
xor
dec
adc
pop
out
imulb
or
andl
sahf
mov
stos
or
push
stos
pop
add
dec
aaa
cmpsb
fstps
das
cmpsl
or
inc
cmpsl
lods
jnp
jbe
xor
push
add
jae
lahf
stos
sbb
out
lea
dec
or
push
stc
cmp
inc
lock
pop
leave
cwtl
inc
clc
lret
or
xchg
pop
insb
cs
dec
nop
cwtl
fldenv
mov
stc
dec
aas
nop
jno
xchg
mov
mov
int3
in
gs
or
lods
push
mov
push
cmc
xor
jmp
push
pop
xor
cwtl
mov
iret
xchg
cmp
lret
lods
push
andl
js
lahf
dec
ret
jge
shl
ficompl
inc
xchg
fdivrs
pop
xchg
rclb
out
pop
iret
jge
je
jmp
shll
mov
and
sbb
adc
addr16
arpl
cmpsl
out
sub
xor
dec
or
fstps
fcompl
pop
cmpb
xor
pop
ret
inc
pop
test
and
lds
hlt
icebp
jge
mov
sti
les
adc
push
mov
rcll
addl
hlt
mov
inc
ror
test
test
xor
aad
jp
dec
cli
test
adc
out
push
in
jns
xchg
xorb
ret
xor
arpl
ljmp
imulb
xchg
pop
mov
nop
adc
xchg
fwait
mov
inc
add
add
loopne
mov
negb
mov
idivb
pushl
fcmovnb
jmp
sub
aam
adc
into
sahf
int3
cmp
icebp
lods
dec
ficomps
dec
inc
outsl
rorb
xlat
cmpb
add
or
js
repz
aaa
inc
jbe
and
lea
lods
idivb
xor
mov
jbe
or
mov
outsl
push
movl
sti
clc
lret
jecxz
stc
shl
mov
dec
or
pop
pop
daa
xor
pop
xchg
lods
sub
or
adc
mov
xor
and
jle
inc
jl
andb
cmc
inc
xchg
mov
push
fldl
stos
push
push
adc
ljmp
push
push
add
mov
cmpsb
or
jae
dec
mov
idivb
dec
pop
pop
rcrl
cmc
mov
jl
jl
pop
rcrl
jne
testb
scas
adc
jne
repz
mov
ret
jbe
sub
pushf
repnz
nop
sbbl
mov
test
loop
and
and
shl
aam
jnp
pop
pop
shlb
pop
divl
push
or
addr16
pop
enter
lods
jle
mov
inc
or
add
orb
or
sbb
sahf
jb
cmpsl
jne
xor
jecxz
icebp
ljmp
adc
pop
sub
xor
out
test
adc
cmp
call
insl
xchg
cmc
sti
sbb
dec
cmp
jne
push
lods
jge
fsubl
xchg
jbe
sti
aaa
and
xchg
aaa
pop
ljmp
push
push
rcr
push
rcl
lods
int3
rclb
das
ja
and
lods
sahf
mov
mov
sub
rcrb
addr16
pop
mov
xchg
xchg
aam
out
mov
jns
pop
icebp
jge
in
xor
xor
adc
lahf
cld
je
sbb
xchg
lock
add
pushf
mov
ror
decl
inc
xchg
or
loop
mov
repnz
imul
sub
notb
bound
movsb
mov
gs
sub
stos
jp
scas
cmpsb
loopne
sbb
xchg
cs
mov
cli
adc
jecxz
sarl
cltd
loopne
cltd
mov
xor
sbb
lea
push
int3
xchg
and
pop
sbb
dec
leave
xorb
jae
mov
out
jno
lcall
lds
xchg
xor
mov
fld
jp
orb
enter
in
jno
mov
shrb
enter
dec
xchg
in
cmp
xchg
ss
jge
jp
mov
sete
xchg
addr16
out
mov
fldcw
fsubl
mov
xor
jecxz
adc
sbb
aaa
push
adc
mov
out
lret
push
jns
divl
sahf
mov
fdivr
and
insl
adc
xor
jg
mov
shl
inc
notl
cld
leave
aam
add
popl
jge
pop
adc
idivb
mov
jp
out
int
and
lods
aad
adc
jp
push
xchg
iret
xor
xlat
icebp
repz
push
insb
xchg
imul
lock
sub
loope
push
cmp
or
xchg
add
inc
rcrb
movsb
clc
xor
fcmovnbe
incl
loop
rol
mov
mov
lcall
jmp
stc
call
push
sbb
xorb
repnz
fs
jg
pop
push
mov
loope
mov
or
adc
pop
sub
stos
jl
mov
xor
dec
test
cmpps
aaa
in
adc
loopne
or
test
inc
jle
xor
sbb
in
lea
das
cmp
inc
fbstp
idivl
sbb
subb
jnp
ret
cmpsl
push
ljmp
sub
aas
inc
outsl
movb
imul
xchg
pop
js
sarb
gs
jle
jbe
mov
or
dec
scas
out
or
aaa
mov
add
in
xchg
fiadds
call
popa
xor
sahf
aas
mov
inc
test
mov
andb
cltd
adc
xlat
fidivrs
icebp
cwtl
add
cmpsl
les
std
mov
repz
movsb
jmp
jnp
mov
mov
mov
jmp
repnz
pop
pusha
pop
adcl
test
fwait
jo
mov
ja
mov
or
mov
mov
push
cmp
sar
lea
xor
sub
mov
clc
pop
xchg
pop
and
addr16
in
pop
gs
pop
inc
add
rcl
imul
in
std
mov
xchg
js
xor
arpl
sub
fcompl
jae
xor
xor
or
sub
lods
mov
repz
fdivs
not
int3
mov
push
add
dec
stc
nop
cwtl
out
inc
mov
dec
lods
or
xchg
push
push
push
add
xchg
inc
popf
xchg
jb
mov
in
adc
inc
sub
push
push
add
inc
lahf
cmpsl
pusha
pop
sbb
sarl
adc
cltd
lcall
andb
cmpl
adc
jae
addr16
jl
pop
adc
sti
sti
pop
popf
mov
std
dec
sbb
mov
push
fnstenv
aaa
ret
xor
in
xor
jp
lods
dec
pop
cli
nop
arpl
cmp
pop
loop
xor
stc
and
andb
push
je
out
addr16
add
mov
sbb
sbb
mov
and
xor
frstor
jge
nop
das
dec
stos
out
ds
mov
cmpsl
adc
loop
xor
jg
xchg
mov
push
lea
cmp
or
jge
cltd
cli
sbb
cmp
mov
push
pop
jecxz
dec
pop
push
pop
pop
fstpl
push
adc
push
xchg
pop
ret
scas
test
fsubl
stos
and
and
int
xchg
mov
cmpsl
test
and
push
push
decb
ffreep
into
out
aad
lahf
pop
or
movsb
lahf
jnp
mov
pop
xchg
in
jae
fxch
sub
pop
scas
jmp
inc
lock
stos
movsb
aad
cmp
scas
clc
lret
jne
clc
jb
jecxz
dec
ret
in
xor
lret
dec
push
dec
imul
mov
sbb
lret
je
pop
push
and
popf
out
cmp
jnp
dec
sub
mov
xor
mov
cli
dec
or
and
out
adc
jecxz
mov
jp
mov
pop
fnstenv
adcb
dec
jle
or
aam
cltd
mov
adc
ret
movsb
jne
xchg
cmp
sub
push
fwait
jb
icebp
xor
movsb
into
mov
jp
xchg
pusha
mov
xor
bsf
inc
sarl
mov
cli
dec
mov
mov
fsubrs
sbb
ret
or
xlat
xchg
xor
xor
xor
jo
push
xor
imul
push
adc
cmp
pusha
test
je
mov
jge
lods
pop
scas
jl
jbe
aad
je
movsl
sub
jb
jo
mov
lock
imul
loop
jle
aam
icebp
sbb
add
subl
push
inc
fs
in
or
xor
jnp
mov
sub
inc
xchg
mov
pop
jecxz
rol
push
sub
testl
mov
adc
orb
and
sbb
add
jl
cltd
mov
icebp
pusha
and
mov
mov
mov
aam
inc
addl
jle
in
mov
adc
fldenv
fildll
push
jnp
popf
jle
enter
jne
fisubs
cmp
push
sub
xchg
sbb
mov
rcll
adc
gs
ds
jmp
icebp
cmp
xchg
lahf
inc
fisubs
and
cmp
jl
dec
adc
lahf
xchg
dec
sar
add
cmp
das
xchg
pop
scas
addl
or
jne
or
mov
xor
add
sub
sahf
xchg
pusha
es
jns
insl
sti
movsl
push
scas
sbb
xor
pop
inc
ss
subl
es
ja
cmpsb
add
lcall
xchg
push
jne
xlat
sbb
push
xlat
pop
aam
leave
cwtl
imul
dec
push
pop
rcrb
sbb
out
ret
inc
cmp
gs
jbe
movsb
test
ljmp
shlb
test
add
test
jb
pop
mov
loopne
les
mov
mov
mov
push
fwait
jge
xchg
iret
push
xchg
nop
in
adc
lret
jp
fsub
mulps
add
repnz
negl
xor
or
sub
pop
jne
xchg
jmp
popa
adc
xor
hlt
std
jne
roll
cltd
and
jl
add
jbe
jo
sar
in
mov
int3
mov
insl
dec
lahf
lret
lcall
mov
sub
xorb
jge
movsl
jg
lods
push
out
aaa
mov
mov
sbb
dec
dec
mov
cmp
mov
in
jns
cmp
pop
or
rorb
push
adc
loopne
shll
xchg
xor
cli
scas
mov
xor
push
popf
sbb
rolb
mov
sbbl
xchg
loopne
jae
sub
and
add
ja,pn
lahf
into
int
inc
rcrb
jae
loope
jae
test
add
add
hlt
xchg
js
xchg
adcb
push
pop
mov
jle
fsts
out
push
mov
test
cmp
sahf
sbb
sub
std
mov
aad
jl
push
and
movhps
push
mov
sti
or
xchg
and
fidivrl
and
mov
cmp
fadds
icebp
jbe
add
push
or
test
mov
adc
pop
pop
jg
jl
and
iret
xor
pop
push
aad
add
push
mov
push
adc
xchg
call
or
lock
sbb
xlat
scas
fcomps
aas
aad
mov
icebp
test
les
or
mov
sahf
pop
mov
fimull
lahf
xor
xchg
push
movl
cmp
xchg
xchg
pusha
fmuls
cmp
in
not
lea
xchg
lret
push
lahf
jbe
in
iret
xchg
mov
jl
inc
and
add
cli
je
jl
out
aam
jne
int
jge
push
gs
dec
mov
sub
outsb
rcrb
adc
mov
adc
mov
out
inc
lahf
stos
xor
jns
xor
lcall
jg
lock
shll
sar
call
mov
lods
ret
pop
adc
jl
aam
cmpl
jne
lret
jge
jmp
push
inc
and
or
outsb
mov
out
insl
inc
adc
sub
push
test
xchg
xor
jo
andb
out
ret
repz
jae
shlb
mov
movsl
push
adc
jne
adc
cltd
mov
cltd
push
cmp
xchg
xor
daa
iret
pop
dec
std
out
cmc
adcl
push
mov
daa
jb
and
mov
ljmp
jg
jnp
les
jle
in
repnz
lahf
xor
mov
data16
add
mov
xchg
push
jbe
xor
out
or
and
mov
pop
xlat
pop
lods
fdivs
pop
test
movsb
push
pusha
mov
scas
testb
sarb
push
jg
loope
cmpsl
fildll
insb
scas
and
sldt
jne
cmpsl
sbb
sbb
shrb
pop
jno
fsubl
mov
push
sbb
push
repnz
aad
call
and
mov
jno
imul
mov
jmp
jnp
fdivrs
mov
mov
xchg
test
pushf
mov
adc
push
fs
dec
aam
iret
sbb
cmp
ret
xor
xor
push
ret
and
iret
sahf
dec
nop
cmc
repnz
enter
or
sbb
adc
outsb
mov
inc
test
out
mov
test
dec
sub
popf
test
adc
push
lcall
inc
push
cmp
add
jb
sbb
cwtl
sbb
test
out
jecxz
mov
pop
push
icebp
sbb
lahf
out
aam
xchg
std
sbb
out
inc
sbb
sbb
and
lahf
sub
pop
push
shl
add
fldt
xchg
pop
jecxz
mov
inc
pop
icebp
enter
decb
xor
xor
testb
mov
jmp
stos
xchg
or
mov
aaa
sahf
cmpsb
push
lea
dec
int3
jns
sbb
rolb
jb
clc
jbe
push
imul
jbe
repnz
sub
xchg
cmp
mov
test
repz
jge
push
nop
mov
or
mov
adc
jl
pop
mov
bound
add
insl
call
aas
pop
mov
arpl
mov
mov
stos
mov
mov
icebp
xchg
xor
add
xor
das
adc
mov
fs
shrl
orb
push
les
push
push
bound
jecxz
push
adc
xlat
dec
aad
cmpsb
and
in
mov
jl
xchg
movsb
ljmp
fstp
out
rol
gs
add
aaa
push
jno
hlt
add
inc
xchg
jnp
xchg
ss
out
fdivl
in
cmp
xor
sub
mov
imul
add
out
xchg
cmp
add
mov
clc
popl
bound
filds
jbe
sub
xchg
inc
orl
xchg
cmp
sarl
xchg
lret
fdivrs
divb
dec
cwtl
lret
insb
cli
imul
lret
loopne
insb
addr16
cmp
shll
insb
add
scas
ja
call
clc
dec
cmp
mov
mov
mov
mov
sub
loop
out
test
mov
pop
jp
lahf
mov
rorl
fwait
test
mov
xchg
popa
adc
lahf
iret
mov
movsb
ret
push
insl
icebp
data16
rcll
mov
sub
push
mov
sbb
dec
outsb
xor
adcb
cwtl
repnz
xchg
loope
or
mov
push
cmpsl
insl
dec
out
std
mov
adc
xor
and
js
xor
jns
or
add
dec
jle
mov
sbb
mov
or
fucomp
fists
cmc
movsl
popf
jg
jge
cmp
pop
adc
or
add
adc
adc
lock
push
adc
pop
sub
rcll
and
cmpsb
cli
pop
cmpsb
mov
iret
sub
cmpb
and
jae
pop
add
dec
cwtl
inc
in
popf
inc
mov
xlat
mov
arpl
sarl
jecxz
add
ret
insl
scas
movsl
test
xor
sub
cmp
mov
dec
push
sahf
pop
gs
and
loop
push
jns
lahf
and
xor
jns
lods
mov
dec
sbb
xor
shl
xchg
repnz
mov
push
test
in
sbb
lret
push
daa
scas
and
into
mov
lock
jle
scas
shrd
outsb
into
andb
ret
lahf
or
call
xorb
mov
data16
leave
xor
mov
sbb
push
sahf
jo
xchg
cmp
in
or
pop
repnz
sub
aam
sub
xor
xlat
ret
xchg
lock
jl
jmp
daa
cmpsl
sbb
mov
jnp
dec
cltd
mov
cmp
shll
xor
cwtl
jecxz
icebp
in
and
cltd
cmpsl
fs
cld
or
xchg
cmpsb
jl
shl
jl
sbb
jg
sub
shll
xor
cwtl
faddp
ret
icebp
inc
ret
aad
shll
int3
aad
test
jo
es
xchg
mov
mov
movsb
cld
icebp
int
jecxz
lret
xchg
adc
jno
fmul
pop
into
int
inc
ljmp
mov
aad
jl
and
jno
clc
in
jnp
lods
aaa
mov
fnsave
add
add
push
loope
test
or
dec
mov
mov
lock
test
pop
inc
dec
je
mov
mov
daa
xor
les
sbb
sbb
aas
pop
mov
cmp
inc
xchg
aas
pusha
xchg
push
ds
lret
popf
push
fwait
int3
sub
xchg
js
add
scas
pop
mov
and
pop
insb
jo
aad
cmp
outsb
add
test
xchg
fwait
mov
pushf
outsl
mov
jno
pushf
out
push
bound
add
pop
push
stc
movsb
inc
and
lods
or
mov
sbb
test
pop
pop
sub
dec
loopne
jl
push
sbb
mov
jmp
sarb
sub
ds
mov
sub
cmp
daa
aas
cs
loope
fs
sub
add
ret
pop
mov
into
dec
fiaddl
push
jbe
in
addr16
andl
flds
aam
dec
xor
fimuls
roll
pop
sbb
mov
pop
fistl
add
icebp
add
cmpsl
into
test
incl
or
add
push
mov
mov
in
jo
push
addr16
mov
mov
int3
call
push
bound
mov
xchg
fcmovnu
xorb
sub
jg
mov
out
sub
ret
inc
jg
pop
lret
lods
cmpsl
or
adc
lea
xor
cld
dec
sub
add
mov
sub
stos
dec
adc
sub
idivb
lods
mov
cmp
cmpb
scas
jno
mov
sahf
push
cmp
xchg
push
and
hlt
mov
outsb
pushf
repnz
sub
fstl
std
push
popf
pusha
xchg
in
xlat
dec
adc
push
pushf
add
data16
vsubpd
roll
adc
jp
jns
cli
lds
pxor
outsb
push
mov
cld
pop
xor
loopne
sub
jb
adcl
repnz
xor
pop
inc
lods
xchg
pop
and
jb
push
std
mov
in
cli
fcoms
xor
mov
mov
pop
pop
add
mov
fidivrs
jp
mov
cwtl
ficoml
out
xchg
ficomps
out
pop
into
jbe
push
jmp
jge
pop
xor
aaa
leave
jo
jnp
cmp
xchg
jno
test
into
test
inc
and
icebp
sub
push
arpl
xor
xorb
imul
and
mov
mov
push
jno
loope
ret
push
int
push
pop
jl
xchg
call
mov
add
dec
push
lcall
out
inc
orl
jg
xor
cmp
sub
pop
ss
mov
mov
jne
inc
stos
and
xor
mov
sub
adc
sub
gs
das
add
adc
xchg
into
lods
lea
out
add
mov
enter
jle
dec
lret
aam
pop
iret
mov
dec
sbbb
ljmp
inc
repz
xchg
xchg
xor
and
repz
xor
adc
push
and
xchg
xor
int
fldt
xor
mov
mov
popf
icebp
dec
push
stos
dec
adc
jl
cmpsl
mov
inc
xchg
pusha
sub
mov
cltd
pusha
jns
inc
sbbb
xchg
fs
dec
sub
jge
mov
jg
pop
les
dec
xchg
outsb
or
xor
in
outsb
sub
pushf
shlb
mov
cmp
push
sbb
and
jg
shlb
inc
pop
dec
scas
or
cwtl
shrb
out
lcall
xor
mov
scas
pop
adc
sub
mov
sub
test
out
mov
test
push
jne
pop
cltd
sub
xchg
mov
mov
loope
mov
and
dec
aam
and
int3
js
lahf
adc
dec
xor
and
add
or
aam
inc
inc
test
mov
mov
rcll
mov
jmp
aas
sarl
dec
push
fsubl
cmp
cmpsl
clc
xchg
mov
in
loope
test
aas
idivb
or
xchg
fs
mov
xchg
rolb
cmp
gs
cmc
test
cld
pop
or
mov
cmc
push
or
out
fstpt
orl
stos
ss
call
adc
jl
cwtl
cwtl
ja
xchg
push
cmpsl
dec
push
subb
mov
mov
dec
jmp
inc
dec
sub
push
dec
hlt
pop
in
mov
jbe
xchg
enter
sarl
fs
movsb
lahf
ret
icebp
cwtl
rorb
int
jnp
into
shlb
movsl
mov
les
mov
icebp
mov
notl
sub
pop
sub
mov
shlb
shlb
in
jp
pusha
jae
repz
sub
inc
lret
add
or
lcall
enter
sbb
xor
or
int3
outsb
in
cmpl
ds
test
and
or
jl
fwait
jne
mov
cmp
or
pop
icebp
cmp
xchg
pop
push
dec
nop
test
mov
sbb
addb
test
das
aaa
arpl
cmpb
ds
pop
mov
ljmp
jo
shll
test
or
jnp
mov
test
adc
imul
jbe
js
ja
mov
and
popf
pusha
and
mov
xor
jg
pop
scas
mov
cmpb
mov
inc
shrl
std
aad
pop
not
cmp
arpl
iret
mov
dec
and
adc
mov
in
lahf
pop
call
popa
dec
incb
and
out
push
jmp
rcrb
sbb
rcrl
push
test
mov
xlat
and
xchg
jo
out
jmp
and
push
hlt
xchg
rcll
loope
ja
sbb
inc
sar
mov
test
mov
outsb
cmp
imul
cmpsb
sbb
add
or
cld
cmpsl
and
and
and
adc
cmp
inc
xchg
jg
xchg
cmp
decl
sub
ljmp
inc
out
in
sub
fstps
and
sub
ds
popa
sbb
add
push
insl
jno
outsl
mov
stos
mov
jmp
aam
icebp
pop
ss
mov
cmp
repnz
jl
cltd
nop
xchg
mov
sbb
push
fsubp
jl
push
push
dec
movsb
mov
mov
jb
inc
and
xor
cwtl
aas
sbb
pop
popf
jnp
hlt
add
pop
cmp
jmp
inc
lds
repz
jbe
xor
pop
icebp
pop
xchg
mov
ja
or
movsb
adc
cmp
popf
movl
ss
subb
push
push
fs
test
rclb
dec
in
ror
ds
stc
sbb
pusha
cmp
movsl
rcll
jecxz
xor
jecxz
xor
das
mov
adc
std
xor
mov
fs
rol
cmp
out
data16
inc
roll
jmp
shlb
rcr
adc
fs
and
or
mov
push
adc
jb
adc
rcr
push
push
mov
push
mov
jo
adc
cmp
dec
fucomp
inc
pop
loopne
testl
mov
mov
add
divl
dec
call
or
sahf
mov
aaa
xor
mov
pop
repz
rcl
scas
jae
push
js
jl
test
xchg
pop
mov
push
ficoms
sub
pop
inc
push
adc
or
clc
jg
std
mov
adc
adc
lret
fsubr
dec
cmp
cmc
mov
xor
stos
aas
into
in
xor
adcl
cmp
mov
pop
mov
mov
mov
mov
in
lock
sub
adc
shll
xor
sbb
data16
push
dec
mov
xchg
mov
addr16
adc
xchg
and
shrb
xchg
fbld
xchg
push
dec
movsl
xor
inc
cmp
inc
aaa
movsb
pop
sub
mov
fs
cmp
push
jecxz
in
fwait
mov
jns
xchg
mov
or
sub
adc
jnp
ror
jecxz
dec
lock
xchg
out
lcall
sbb
in
xor
rcll
test
xchg
fsubrs
scas
inc
jmp
mov
sbb
test
add
jl
mov
mov
rcr
and
fsub
into
adc
xor
lock
mov
fdivp
xchg
sub
xchg
xchg
dec
cs
pop
fdiv
jnp
lds
inc
jmp
jns
adc
and
out
push
xchg
mov
sub
pop
sbb
pop
mov
mov
sub
adc
pop
inc
popa
xchg
push
sbb
pop
xor
lret
cmp
sbb
adc
jns
mov
pop
cmp
mov
daa
push
mov
rolb
xor
xchg
fninit
in
lret
aas
repnz
xchg
add
jle
jg
cmpsb
ljmp
xchg
frndint
push
mov
decl
sbbb
ja
flds
bound
mov
xchg
fdivs
imull
dec
mov
leave
adcb
in
pop
jno
pop
leave
adc
mov
rorl
mov
pop
ss
ret
xchg
push
add
mov
mov
jnp
sbb
push
lahf
icebp
or
mov
sub
sbb
icebp
jne
xchg
adc
or
icebp
testl
loopne
pop
jns
xlat
sbb
cmp
jbe
mov
mov
mov
cmpl
cli
or
push
cmc
aam
lret
jno
dec
cmp
and
jb
cltd
sbb
add
shl
sub
out
cmp
lock
sub
in
shrl
loopne
pop
in
lret
fnstsw
pop
aas
lea
sub
jae
cmp
cmp
xor
ljmp
pushf
lds
jnp
loopne
cltd
and
cli
hlt
stos
cmp
lods
pop
pop
aad
mov
xor
cmp
scas
rorl
jge
lahf
sbb
jp
ljmp
add
cmp
cltd
pop
jnp
and
subb
outsl
lahf
ret
add
or
rol
or
inc
movsb
out
scas
push
inc
rcrb
cld
xchg
lret
cli
add
jnp
and
das
pusha
push
mov
push
ret
xlat
add
push
adc
and
jb
je
idivb
mov
xchg
xchg
xor
movsl
flds
lret
lea
movsb
jecxz
out
scas
sbb
mov
cmp
arpl
lcall
sbbl
das
adc
sbb
enter
xorb
fs
js
xchg
shrl
adc
in
dec
cmpsl
pushf
je
cmp
clc
push
and
sti
jg
jns
into
sub
pop
xchg
mov
mov
mov
dec
out
xor
icebp
cmpsl
mov
sbb
jnp
lods
xorb
adc
popa
jge
pop
adc
adc
mov
push
stos
mov
les
xchg
ss
xor
mov
mov
mov
push
aad
sub
xor
adc
pushf
or
and
stos
inc
mov
jnp
xlat
ljmp
sbb
in
js
sbb
or
addr16
jns
call
mov
push
xchg
mov
nop
loop
lret
aam
sbb
mov
mov
pop
mov
xor
mov
jnp
fsubs
dec
mov
nop
pusha
mov
and
jge
mov
xlat
inc
jnp
pop
lcall
jae
pop
pop
repnz
cmp
jle
mov
repnz
mov
cmpsl
jae
push
test
mov
jp
sahf
cs
test
test
cwtl
sub
push
cmp
test
imul
sbb
sbb
imul
xchg
mov
jecxz
xor
xchg
lahf
jne
pushf
aam
mov
mov
push
inc
jnp
mov
or
repz
rcll
adc
lahf
cwtl
dec
fidivs
cmp
adc
inc
icebp
fsts
add
pop
mov
mulb
cmp
outsb
daa
hlt
sbb
inc
das
add
cltd
repnz
insl
cmp
loopne
std
repz
enter
cmp
ds
and
jl
dec
push
inc
mov
push
xor
jb
ss
test
pusha
mov
cmp
insl
data16
add
test
mov
jp
xlat
mov
stc
or
jnp
lods
popf
aam
cmp
popa
xor
jae
int
cmpsb
movd
adc
xchg
lods
int
pop
cwtl
ror
loopne
adc
sbb
push
xor
ljmp
adc
or
sub
add
pop
je
icebp
scas
loopne
and
loope
or
mov
xchg
dec
or
repnz
xchg
add
sub
inc
xor
jno
popf
lock
jg
adc
scas
sahf
dec
xor
xor
add
adc
jnp
xchg
jle
jg
stc
jnp
xor
pusha
push
sbbl
and
mov
pop
cld
xchg
xchg
sub
mov
sub
xchg
cmp
pusha
mov
mov
sbb
cmpb
mov
pop
shrl
mov
mov
dec
inc
cmp
mov
mov
int3
popf
xor
gs
cmpsb
cmp
aam
sub
add
pop
test
shll
xchg
jle
je
mov
cmp
mov
and
icebp
jno
pop
js
jge
adc
mov
je
jmp
fdivs
xor
mov
sbb
xchg
push
clc
mov
inc
xor
jg
pop
clc
loope
lods
or
sbb
xchg
fwait
pusha
sbb
andl
cmp
jl
repz
f2xm1
psadbw
xor
mov
inc
add
mov
mov
lcall
jne
out
fstps
jle
sbb
inc
sub
or
shrb
jae
push
jae
insl
seto
adc
hlt
mov
in
push
jmp
orl
xor
aad
mov
and
cmpsl
mov
add
mov
add
inc
ds
call
insl
cmpsl
xor
pushf
hlt
pop
cmp
jnp
scas
rol
add
cmpsl
dec
sub
mov
pop
ljmp
jo
aad
out
pop
mov
lds
sbb
je
sbb
out
jle
jno
cmp
or
lods
scas
jmp
cmp
dec
or
imul
mov
mov
mov
int
xchg
icebp
ja
mov
stos
sbb
repnz
jmp
jge
push
outsl
push
xchg
and
mov
repz
cld
scas
jecxz
sbb
lea
adc
incb
lods
xchg
push
lock
jmp
sub
scas
cmc
data16
lods
cmc
jge
divb
mov
push
es
or
xchg
mov
mov
insb
stos
sbb
cs
mov
push
xlat
test
jno
je
sub
f2xm1
mov
ret
pop
mov
dec
xlat
mov
imul
and
insl
imul
std
cwtd
enter
sub
pushf
and
arpl
pop
leave
cmpb
aaa
loopne
shlb
cmp
xlat
cmp
mov
movsl
sbb
testl
add
pop
push
mov
icebp
mov
stos
or
test
push
cmpb
inc
fldl
xchg
out
jmp
out
add
xchg
ret
mov
test
push
sahf
mov
sbb
pop
scas
mov
sbb
dec
subl
xchg
push
cwtl
sahf
jno
mov
pop
inc
jmp
js
in
push
and
mov
xor
shll
out
xchg
pop
inc
and
data16
in
jns
imul
popf
lahf
or
es
fisubrs
sub
xlat
pop
iret
mov
and
pop
sub
mov
dec
int
dec
sbb
ss
jo
xchg
cmp
adc
xor
xchg
push
cmp
repz
xchg
inc
fistl
cmp
fadds
cmc
xchg
in
into
adcb
ljmp
dec
add
sbb
ror
push
push
mov
mov
cwtl
jge
pushf
test
scas
adc
test
xor
out
sub
sbb
jo
mov
cmpsl
or
pop
hlt
aad
add
xchg
push
mov
or
pop
jle
inc
aas
stos
les
cmc
adc
outsl
sub
or
movsb
repz
xchg
mov
add
dec
out
or
mov
jb
stos
xchg
icebp
mov
mov
cmp
cli
icebp
test
and
outsl
jne
add
mov
shr
or
sarb
test
xchg
insb
roll
mov
xchg
aas
rep
mov
xor
rcr
xchg
in
lds
sbb
mov
lahf
lahf
lds
ss
sbbl
outsb
and
test
mulb
in
dec
enter
pop
out
xchg
pop
pop
or
xchg
sti
dec
sub
cld
dec
jbe
pop
xor
lahf
mov
negb
cmpsl
inc
movsb
jns
sub
mov
cmpsb
xor
or
arpl
xchg
xchg
test
test
adc
les
and
mov
mov
lahf
lds
push
inc
stos
sbb
pop
lret
xlat
mov
cmp
xchg
fdivrl
jnp
push
les
dec
pop
movsl
in
xor
adc
sbb
ss
and
xchg
or
xor
pop
aaa
lahf
addr16
pop
icebp
push
imul
push
sahf
xchg
leavew
sbb
outsl
push
pop
lods
addr16
push
dec
sbb
xchg
xor
cmpsl
mov
fwait
pushf
mov
cmpsb
fdivr
pop
mov
push
and
or
or
imul
dec
and
jns
sbb
shl
jge
add
aaa
or
add
sbb
adc
lea
push
scas
cmp
iret
mov
repz
sub
push
and
mov
pop
imul
cmpsl
sahf
daa
ficomps
push
hlt
pusha
sahf
or
test
cmp
and
xor
mov
xlat
repnz
and
mov
fwait
jmp
addr16
cmpl
or
js
jno
pushf
outsb
dec
add
int3
and
call
lret
mov
bound
inc
icebp
je
sub
pop
add
lods
jg
sarb
push
jmp
lock
dec
xor
inc
gs
in
or
inc
int3
mov
dec
pop
jne
push
movsb
sub
jl
push
lahf
clc
incl
outsb
cmp
add
mov
jns
mov
lret
xor
clc
int3
sbb
jl
mov
push
loop
xor
mov
cs
aam
mov
xchg
pop
xchg
jae
hlt
jae
mov
outsl
sbb
pop
push
adc
mov
adc
lret
pop
cmpsl
sarl
push
outsl
mov
sbb
adc
mov
mov
mov
sbb
and
sub
jne
add
pop
push
sbb
and
sub
enter
out
iret
mov
sarb
test
dec
or
jg
inc
inc
pop
jb
and
incl
jl
subl
stos
fidivrs
xor
inc
sub
jmp
xor
add
gs
bound
inc
pop
das
mov
daa
mov
enter
pop
xchg
ja
inc
lret
or
out
mov
mov
jmp
mov
imul
out
in
das
pop
cmp
stos
out
rcr
fidivs
lret
inc
or
sbb
xchg
ds
aas
mov
sahf
fistps
aas
arpl
push
mov
jno
fs
in
pusha
loop
add
jle
popa
fiaddl
pop
push
aad
lret
popf
mov
adcb
cld
in
adc
push
mov
pop
sarl
nop
or
sbb
cmp
pop
mov
outsl
mov
jno
mov
add
popa
pop
push
adc
sub
jmp
movsl
pop
pop
push
jge
mov
mov
or
shrb
lock
jp
rclb
ljmp
rolb
fucom
cwtl
dec
inc
rolb
sub
push
cs
adc
push
mov
ret
bound
test
test
int3
jmp
dec
pop
int
pop
jmp
dec
in
es
add
in
popa
mov
xchg
scas
and
mov
call
sbb
or
add
mov
push
xchg
push
jbe
jg
xchg
push
rorb
mov
int3
xor
movsb
insl
mov
pusha
cltd
repz
mov
or
sbb
cmp
imull
fwait
jne
hlt
stos
rclb
inc
xor
jns
push
cmpsb
sbbl
mov
adc
jns
loop
subb
cmp
jmp
mov
mov
and
lock
push
ret
cmpsb
or
lea
and
lahf
aas
push
pop
xor
adc
xchg
mov
nop
ljmp
mov
push
and
cmp
aaa
pop
pushf
pop
fnstenv
js
xor
or
sub
mov
mov
pop
dec
in
arpl
aam
pop
mov
jmp
mov
mov
xchg
cltd
movntq
out
sub
mov
jae
jl
jns
lret
insl
test
aas
repz
lahf
rorb
lods
out
loopne
cmpsb
and
stc
in
aas
sbb
mov
jp
inc
push
fnstenv
lahf
xchg
outsb
mov
jle
jo
cmp
fsubrl
js
pop
fldl
push
cmp
xchg
add
inc
into
and
mov
shl
jbe
mov
pop
in
outsl
push
xchg
push
in
je
in
shrl
push
popf
mov
jns
inc
pop
pop
pop
and
cmp
in
popa
stos
pushw
sub
shlb
xor
mov
cmp
pop
ss
in
inc
mov
repnz
ja
fldcw
ret
loope
movsl
push
inc
mov
les
arpl
add
jno
addr16
cmp
jg
inc
jb
sbb
stos
and
ret
jl
mov
sbbl
xchg
jne
movsb
add
adc
fnsetpm(287
scas
int
call
frstor
std
ja
sar
lds
mov
xorl
jg
stos
push
mov
jp
sbb
cs
sti
into
xchg
jb
lret
jmp
cltd
decb
pushf
ror
popf
in
and
lcall
loop
and
xchg
inc
test
loopne,pn
push
das
or
cmp
inc
mov
pop
jmp
mov
and
mov
cli
icebp
outsb
fs
sub
movl
mov
xorl
adc
cmovg
aam
or
imul
mov
aas
mov
adc
in
lahf
jmp
fsts
stos
mov
insb
shll
daa
ret
rcrb
outsb
addr16
and
std
int
outsl
jg
aas
xor
scas
and
xorb
jecxz
xor
fnstsw
aam
out
add
dec
jb
fdivrl
push
dec
lock
imul
popf
enter
mov
push
sbb
and
dec
sarl
outsb
push
push
je
jae
scas
sbb
ret
mov
ja
xchg
mov
cmp
insb
lods
adc
int
add
dec
cmpsl
dec
xchg
xchg
sarb
mov
mov
mov
jle
out
aaa
mov
pop
add
cmp
nop
aas
scas
xchg
add
outsl
mov
inc
add
repz
rorl
push
xlat
jno
lcall
mov
loopne
aaa
mov
mov
scas
das
imul
insb
push
clc
jbe
mov
sahf
inc
ljmp
mov
shll
outsb
mov
mov
push
aaa
shrb
mov
xchg
movsb
gs
es
and
add
xchg
pop
pop
and
cmp
movl
ficomps
stc
mov
inc
sub
lahf
dec
lods
std
or
add
dec
push
jb
jb
push
cli
mov
xchg
loopne
mov
dec
jecxz
pop
orb
lds
rcll
mov
mov
jecxz
popa
sbbl
icebp
pop
int
push
and
xchg
out
cmp
jg
adc
xchg
xchg
daa
cmpsl
mov
nop
dec
popf
sbb
movsl
xchg
mov
adc
jno
cmc
fadds
aam
fbstp
jg
nop
dec
outsb
loop
ljmp
dec
nop
inc
jb
mov
rolb
gs
js
sub
add
call
shlb
inc
sub
jno
sub
mov
or
xor
xlat
outsb
insb
idivl
jnp
es
mov
cltd
xchg
mov
sahf
sub
popf
pusha
pop
xchg
ljmp
popf
jne
out
or
xor
dec
xchg
add
std
out
xor
add
addb
jp
or
lcall
jne
icebp
notw
ds
je
dec
int3
int
mov
jne
xchg
add
pop
loope
mov
push
jnp
lock
into
ja
sar
loope
sub
fs
cmovle
mov
inc
push
or
xlat
push
mov
fnsave
push
jecxz
or
addb
mov
ds
mov
xor
xchg
outsb
addr16
les
arpl
mov
push
push
add
pop
rorb
sub
jp
pop
lcall
repnz
push
insb
and
mov
into
mov
je
std
movsl
arpl
push
or
clc
adc
xchg
icebp
mov
fnstenv
shlb
aam
popf
arpl
xor
clc
cmp
xchg
arpl
push
xchg
mov
call
cmp
mov
pop
outsl
lods
pop
xor
mov
dec
je
shll
sub
insl
stos
add
jo
or
mov
clc
mov
subb
dec
divb
cltd
inc
mov
data16
scas
push
inc
stos
sub
cmpsl
mov
std
mov
sbb
fildl
ja
rcll
dec
dec
cld
fistps
dec
loope
cld
inc
call
xchg
mov
add
call
roll
aad
inc
into
ret
sbb
mov
push
cs
or
push
sub
lcall
scas
test
xor
xchg
std
sar
adc
je
dec
or
add
sub
ja
jne
repnz
cmc
hlt
sub
push
cmp
pop
jnp
jle
cld
push
shld
inc
inc
ss
adc
xchg
fldcw
lahf
and
cmpsb
cli
adc
pop
repnz
and
push
xor
bound
cmp
xor
scas
cmp
incl
mov
xchg
xor
xor
aam
sbbb
or
into
pop
lret
nop
mov
imul
decl
push
je
jnp
into
pop
fldt
aaa
xchg
adc
adc
cmp
jo
and
aas
aas
test
jo
movsl
inc
cwtl
andb
pusha
mov
out
mov
ficoml
out
lret
sbbl
fstl
jg
ret
cmp
je
xchg
movsb
ja
andb
mov
mov
and
adc
xor
mov
cmpsl
pop
xchg
cmpsl
dec
xchg
pop
add
sub
jno
add
fstpt
jo
cmp
add
lret
mov
imulb
mov
stos
iret
jge
mov
adc
mov
jne
jne
and
nopl
xor
push
xchg
cmp
cmc
push
imul
push
ret
and
xlat
mov
xor
jne
sub
sub
fldl
cmp
dec
ja
mov
out
cmpsb
jnp
fcomps
int
mov
insl
mov
repz
mov
sar
xor
scas
pop
inc
cmp
push
mov
ds
fucomip
aad
scas
xor
add
mov
fidivs
test
mov
push
sub
jl
mov
cmp
cltd
jge
dec
xchg
pop
out
push
lock
icebp
push
and
aad
stos
jg
pop
and
add
test
push
mov
clc
push
mov
imul
je
sbb
mov
lahf
outsl
pop
cmc
data16
jmp
add
orb
jge
test
popf
mov
xlat
mov
outsl
js
adc
mov
mov
xchg
inc
cmp
mov
cltd
jecxz
sbb
mov
jp
std
loop
pop
nop
add
stos
int3
aaa
ret
xor
ret
adc
push
lds
jbe
ret
daa
or
mov
and
push
inc
lock
fadds
out
add
test
cmp
and
pop
sbb
jge
shlb
or
push
jg
mov
lahf
xor
sbb
and
lret
pop
push
inc
mov
xor
push
jnp
xchg
pop
ret
rol
loop
push
insl
pop
jbe
ss
jl
iret
fstl
xchg
nop
cmpb
mov
jmp
xchg
or
dec
inc
ret
and
test
mov
or
gs
addb
xchg
incl
mov
hlt
mov
pop
lcall
test
scas
adc
hlt
stos
xchg
clc
lods
xor
cmp
mov
xchg
test
in
stos
push
sbb
mov
loop
test
or
repz
mov
push
repz
pop
cmp
sbb
sarb
ljmp
or
xor
cld
jl
jle
xchg
addr16
adc
lret
xchg
or
sub
mov
xchg
insb
xchg
call
fdivs
cmp
cld
xchg
ja
mov
das
pop
movsb
mov
mov
jmp
inc
lret
mov
les
sub
roll
sarb
shl
mov
jbe
out
rolb
xor
push
push
mov
test
pop
adc
xchg
andb
insb
inc
pop
adc
test
lea
mov
cmc
xchg
inc
insl
dec
push
xor
inc
enter
dec
mov
cmp
je
sar
dec
rcrl
cmp
pop
jb
mov
mov
jae
pop
add
inc
shll
mov
jl
push
in
sbb
hlt
xor
lds
imul
add
push
jne
fwait
jp
aam
sub
stos
mov
lahf
lods
mov
sub
std
xchg
pop
fnsave
jae
or
mov
lea
pushf
cmp
test
jae
xchg
cmc
lds
pop
push
jmp
enter
push
addr16
add
mov
das
jo
mov
mov
cmp
movsb
mov
mov
stos
pop
adc
stos
scas
nop
dec
xchg
adc
mov
push
cmp
loope
jae
sbb
push
aam
mov
cmp
ret
jae
pop
xor
ret
ljmp
cli
popf
cwtl
decb
rol
in
adc
xchg
sar
aam
rol
mov
movb
cmp
lds
or
or
jge
sub
pop
mov
pushf
mov
insb
and
xor
jnp
pop
push
xor
ds
or
jl
dec
aam
mov
xchg
jns
sub
mov
dec
dec
jne
push
seto
add
lods
daa
cmp
mov
jae
int3
cli
push
pop
fidivrl
loope
push
iret
aad
mov
xchg
add
arpl
mov
aaa
dec
pop
loopne
lret
in
stos
rcr
dec
push
add
pusha
pusha
je
das
push
adc
pop
hlt
push
popa
mov
inc
rol
test
sbb
loope
xchg
and
xchg
xor
xor
or
dec
mov
or
icebp
xor
adc
and
mov
dec
lods
and
mov
mov
jge
add
mov
inc
xchg
dec
test
xchg
not
push
cmpsl
sbb
andl
insb
and
stos
cltd
pop
popa
ljmp
xchg
pop
ljmp
lahf
std
ficomps
fs
imul
pop
daa
je
leave
dec
or
mov
out
sub
pop
pop
adc
cmpsl
adc
pop
add
pop
push
push
dec
test
pushf
ljmp
jmp
inc
cmp
pop
jecxz
adc
cmp
xor
pusha
loop
in
and
or
out
lds
jnp
iret
sahf
in
dec
mov
loopne
imul
and
pop
and
xchg
mov
push
or
and
loope
jne
mov
or
mov
jae
push
stos
add
inc
or
jnp
int
mov
sub
mov
sbb
scas
rolb
push
pop
rcrl
fdivrs
pushf
mov
cmp
mov
fnstenv
aas
cwtl
pop
in
adc
push
inc
sub
arpl
popl
jb
and
inc
adc
test
inc
pushf
hlt
pushf
test
push
je
push
lods
gs
lahf
add
pop
xchg
movsb
das
adc
and
js
sarl
inc
cmpsl
pop
push
fwait
jbe
adc
mov
cltd
mov
cmc
pop
call
bound
dec
int3
hlt
repz
mov
push
mov
clc
sub
adc
sub
mov
fildl
ja
dec
loop
jae
xor
mov
dec
fs
fisttps
jle
xchg
js
mov
push
adc
push
or
fscale
sub
and
fdivrs
cmp
and
xchg
in
ret
add
adc
xchg
icebp
mov
mov
stos
push
out
ret
scas
push
scas
xchg
cs
iret
sub
incl
lds
es
dec
test
ljmp
dec
and
sbb
adc
xchg
xor
fdivrs
mov
add
cli
fstl
jae
lahf
jmp
inc
sti
fwait
mov
call
push
jecxz
push
xchg
shll
sub
inc
lods
pop
push
adc
adc
jnp
lahf
nop
lock
test
mov
cwtl
cwtl
inc
inc
aam
or
mov
ret
push
xor
pop
data16
jge
test
std
lret
mov
leave
rcll
push
scas
push
cmovo
xchg
pusha
add
xchg
xor
ret
mov
and
push
lcall
leave
insl
xchg
push
daa
int3
stc
ret
iret
xor
cmp
cwtl
pusha
pop
into
popa
cmp
mov
push
mov
xchg
fsubs
sub
test
push
sub
add
lds
xchg
stc
and
add
loopne
mov
xlat
lea
jmp
jo
mov
in
push
mov
cmp
mov
sbb
stos
insl
mov
std
in
dec
lods
mov
sar
popl
mov
imul
xchg
aaa
and
call
push
out
push
popf
in
sbb
pop
push
pop
inc
adc
mov
adc
and
int
push
sbb
rol
sub
dec
dec
mov
addr16
xor
or
jle
push
cltd
int3
xchg
mov
shl
dec
xor
jp
mov
aad
jbe
cmovg
pop
jne
lea
test
negb
mov
shlb
xor
mov
outsl
push
leave
or
mull
fwait
push
cltd
movsb
cmp
ret
dec
adc
jmp
xchg
inc
ss
jl
cmpsl
ficoms
sub
dec
movsb
fucomp
setnp
pop
cltd
jns
jmp
fwait
jnp
insl
mov
push
popa
sahf
sub
rol
or
push
add
leave
mov
mull
sub
dec
arpl
fwait
pop
dec
or
jae
mov
add
or
dec
xor
jbe
pop
jbe
mov
sbb
xlat
xchg
bound
jg
mov
mov
or
adc
cmp
push
jle
adc
xor
sub
cmp
icebp
jns
jns
or
stos
test
sub
hlt
push
jnp,pn
and
in
and
xor
sub
mov
sbb
jae
jae
sbb
jne
daa
idivl
stc
out
mov
jnp
mov
jnp
dec
xchg
decl
bound
mov
daa
aam
sbb
negb
mov
jle
adc
gs
mov
sbb
sub
xchg
fcomip
es
xchg
jmp
adc
cwtl
mov
mov
mov
sub
insb
cmp
xor
test
mov
sub
cld
popf
inc
push
call
mov
and
arpl
test
lcall
jbe
mov
xchg
add
cmp
rorl
lcall
jl
cmpsl
ljmp
push
lahf
jecxz
pop
stc
shlb
push
cmc
nop
inc
std
inc
and
jo
js
movsl
xchg
cmp
jp
and
ret
iret
xchg
push
xor
mov
nop
jo
xlat
and
pushf
xchg
daa
lahf
hlt
icebp
daa
in
mov
lcall
out
or
int
xor
adc
dec
mov
mov
sbb
cwtl
or
in
pop
jbe
jle
notb
mov
inc
push
call
lret
addl
lods
add
dec
adc
mov
nop
mov
pop
mov
divl
sbb
jb
jns
sbbb
pop
addr16
xlat
scas
mov
outsl
shll
hlt
test
jns
push
rol
addr16
pop
lods
out
movsb
shll
jnp
iret
das
xor
push
xor
or
hlt
push
cmp
or
push
shlb
cmpsl
lcall
push
xor
cli
mov
pop
icebp
movsb
scas
xchg
pusha
inc
mov
stos
cwtl
dec
imul
popf
or
inc
test
sbb
xchg
out
mov
push
sahf
iret
lret
rcrl
mov
inc
mov
jnp
cmc
sub
sub
sbb
mov
and
jne
dec
sbb
repnz
pop
les
mov
pop
rcl
push
mov
adc
sbb
repnz
push
les
subl
test
push
lods
push
jecxz
cs
cmp
out
ljmp
mov
jne
or
sahf
sbb
xor
scas
mov
add
ds
mov
push
fsubl
inc
fdivrs
mov
and
jle
pop
movsb
js
sub
mov
push
xor
sahf
mov
and
xchg
fstpl
sbb
gs
aaa
lods
jg
ljmp
lcall
pop
je
cmp
fcmovnb
je
mov
fidivl
fstps
test
leave
pop
repnz
inc
dec
and
loope
mov
insl
sti
jo
and
jl
fstl
adc
xchg
js
jmp
adc
jbe
pushf
xor
inc
fcomps
mov
push
sub
dec
push
daa
hlt
repz
sbb
addr16
xchg
int
jne
test
stos
movsb
fimuls
fisubl
and
dec
outsl
xor
loopne
int
fcomps
jg
xchg
mov
push
push
adc
cmpsl
dec
xorb
ja
leave
ret
lcall
jnp
add
dec
sbb
mov
mov
cmp
xlat
mov
aas
mov
fwait
ds
pop
insb
dec
mov
dec
mov
push
cmp
pushf
xor
inc
shrb
rol
cwtl
shlb
jge
lock
test
sbb
push
dec
ja
icebp
sub
add
ja
cmp
dec
les
andl
out
cwtl
lods
add
icebp
loope
push
push
idiv
stc
xchg
pop
or
ljmp
stos
mov
cld
mov
scas
push
loop
and
repz
inc
into
mov
mov
adcl
fisubrl
sub
test
lret
out
cld
lds
pusha
jg
mov
mov
movb
xor
xor
lret
jge
mov
push
mov
mov
dec
adc
xchg
sub
push
jg
lcall
pop
lock
scas
xchg
in
int3
mov
lods
xor
aam
xor
xchg
int3
mov
mov
inc
and
jle
adc
lods
mov
push
lea
push
mov
sub
lea
std
rorb
aas
pop
xchg
push
lcall
dec
sbb
dec
xor
imul
ret
shr
lock
jl
sbb
icebp
cmp
into
imul
movsb
in
rorb
xchg
int3
inc
out
adc
insb
nop
pop
push
lret
in
push
out
roll
movsb
jp
pop
dec
enter
test
mov
inc
mov
cmp
xor
cmp
mov
stos
sub
shr
sub
xlat
cmpl
pushf
mov
xlat
cmp
loop
mov
sub
push
fsubs
xor
shrb
xor
sub
sub
or
xor
mov
aaa
jle
mov
sahf
sub
into
nop
jg
stos
cli
test
and
jne
xlat
rep
xchg
jle
push
dec
popa
lds
in
jo
lock
and
in
mov
data16
add
xchg
aad
mov
push
lea
add
popa
addb
mov
xor
xchg
in
push
push
sar
fs
test
mov
cmpsl
xchg
rcr
jp
leave
shrb
loope
mov
sbb
jno
cmp
pop
lret
lret
andl
sbb
les
fucom
cmp
ja
stos
pushf
dec
test
pop
xchg
test
mov
insl
shl
mov
dec
mov
leave
push
and
jbe
imul
mov
shl
xor
das
add
inc
cmp
loopne
lcall
test
sbb
das
xchg
lods
xlat
mov
xchg
icebp
sub
jle
jmp
adc
outsl
pop
adc
cmp
std
orb
scas
sbb
sbb
mov
push
or
mov
fcoms
testl
sub
shl
pushf
pushf
cs
mov
dec
ss
lea
cmpsl
je
mov
cli
je
idivb
push
mov
les
mov
pop
nop
mov
xchg
xor
mov
aam
push
and
out
insl
xor
lds
push
popa
sbbb
loope
xchg
inc
rcrl
inc
in
and
mov
add
pop
xor
dec
mov
out
ss
jl
inc
jg
mov
shl
push
fs
inc
scas
lds
sub
fisttpl
mov
insl
jge
or
stos
icebp
push
mov
fistpll
sub
push
addl
pop
pushf
pop
into
or
adc
aam
mov
stos
push
idivb
pusha
mov
sub
xchg
push
repnz
add
idiv
int
cmp
jp
push
mov
xchg
push
fcmovb
icebp
adc
sahf
sub
pushf
add
test
cmp
call
icebp
shlb
imul
jne
mov
pop
sahf
jg
das
xor
imul
fcmovnbe
cs
cli
push
adc
icebp
in
lret
sbb
rol
pop
mov
xlat
mov
xchg
xor
adcb
adc
push
jg
mov
insl
jge
ret
fstpt
sbb
repz
mov
or
ss
lock
jne
addl
in
xchg
nop
cld
gs
rol
sub
lods
movsb
rcll
jl
inc
xchg
or
insl
jb
mov
lods
pop
pop
into
frstor
out
cmpsb
adcb
fsubs
jns
xchg
push
cmp
mov
rcrl
fistpll
aas
xor
cmc
sbb
pop
cwtl
fsubrl
movsb
stos
xrelease
call
sub
pop
ljmp
pop
or
mov
xor
and
dec
mov
mov
dec
aaa
and
outsb
out
and
push
in
pop
xor
lret
testl
pushf
dec
jg
xchg
or
inc
inc
cmpsb
lods
or
jge
jp
lahf
pop
inc
cltd
pop
sbb
insl
xchg
lret
cmp
xchg
add
iret
cmp
movsl
xor
cli
xor
dec
cmp
aaa
mov
in
int3
adc
ds
dec
lcall
sub
mov
std
js
adc
jo
jmp
daa
mov
cmpsb
jecxz
jno
pop
pop
les
andl
das
xchg
add
std
int
loope
enter
lahf
mov
add
add
inc
sub
mov
lret
popa
lahf
mov
mov
mov
insl
dec
lods
es
mov
xchg
cmp
mov
loopne
push
mov
dec
ret
leave
insl
int
xchg
xchg
test
sub
lea
xor
or
lods
call
cmp
push
gs
scas
dec
cmp
sbb
jg
xchg
cwtl
mov
push
stos
xchg
xlat
ja
sbbl
xchg
xor
inc
pop
cwtl
enter
cmp
faddl
pop
mov
pop
and
enter
shrb
incb
pop
dec
sbb
or
test
mov
scas
loope
xchg
sti
mov
sbb
inc
movsl
movsb
jmp
xchg
fists
int
push
loope
ret
cli
into
addl
or
jns
call
sub
cs
xchg
pop
mov
cmp
subl
and
jb
jge
jno
and
pop
jae
jnp
mov
sbb
jae
notl
dec
mov
sub
mov
sbb
loopne
pop
scas
jae
ss
jne
out
out
pop
jae
jo
lcall
adc
lret
add
inc
sub
push
mov
sar
rol
jp
inc
enter
jle
fxam
jno
jnp
jo
or
lds
imul
aas
movsl
pusha
popa
bound
push
cmp
xor
xlat
jo
mov
mov
pushf
cmp
jecxz
mov
fsubr
pop
inc
mov
jae
lahf
fisubrl
push
jle
inc
sahf
push
sbb
and
fwait
push
xchg
push
js
jl
fdivs
jg
insl
lock
lret
fstpl
inc
and
inc
lods
jmp
push
fstpl
in
popa
lods
sub
test
cwtl
xchg
inc
in
xor
sub
cmp
jle
xor
fwait
popf
aad
xchg
insl
xchg
jo
cmp
xchg
mov
push
out
adc
cmpsl
mov
fs
int3
fistps
xor
mov
frstor
xchg
push
push
push
stos
xchg
div
jecxz
adc
das
xchg
xchg
lret
lret
pop
push
adc
add
test
testb
shll
xor
test
daa
repz
cmc
inc
sub
cmp
das
and
inc
call
int
shlb
xchg
int3
or
jp,pn
xchg
nop
in
or
pop
push
lods
insl
cs
push
cmpsb
ss
lods
in
nop
or
pop
lea
rorl
mov
mov
mov
cld
pop
mov
jns
out
insl
and
int3
jecxz
js
je
imul
lock
push
cmpsb
mov
rcrl
inc
add
and
mov
mov
lds
sbb
loopne
ss
cmp
cmp
out
push
jo
sub
push
jno
scas
and
xor
xor
insl
cmpsl
and
adc
int3
movsl
divb
xor
lods
pop
lods
je
xchg
mov
sahf
xchg
dec
adcl
ret
mov
inc
and
xchg
xchg
jnp
jo
insl
leave
pop
aam
ja
ret
jp
lds
in
lret
pop
jmp
in
loope
jne
fs
pop
into
cmp
fsubrl
xor
jg
bound
mov
imul
ss
jl
mov
xchg
orl
inc
out
sbb
out
ja
fdivrs
jg
xchg
iret
dec
ja
dec
into
rorl
mov
pusha
pusha
test
xchg
stos
jae
pop
scas
stos
xchg
ret
mov
push
mov
sarl
mov
dec
inc
xor
arpl
ss
jb
fnstenv
cwtl
rcll
sbb
push
aas
sub
inc
and
jecxz
dec
enter
xchg
pushf
and
call
add
xchg
cmpsb
jno
test
rorl
stos
mov
sbb
dec
xchg
movsl
jnp
or
sbb
clc
stos
out
pusha
adc
daa
stc
aaa
mov
call
cmp
movsb
pop
adcl
lret
aam
sub
aaa
dec
insl
mov
mov
aaa
push
xor
mov
inc
push
aad
rorb
xchg
sarb
pushf
sub
mov
in
inc
adc
insl
int
ds
cmp
add
and
dec
mov
mov
je
xor
nop
cld
ja
push
nop
ljmp
int
pop
dec
xchg
mov
mov
ret
sub
loopne
mov
mov
lds
cmp
lcall
jmp
sbb
cmpl
xchg
add
adc
outsb
jge
dec
call
idivb
sub
repnz
jecxz
dec
in
xlat
jne
outsl
rorb
mov
mov
mov
hlt
cwtl
pusha
icebp
mov
jg
push
xchg
sbb
bound
mov
rcll
mov
sbb
xchg
sbbb
jg
sub
sub
xchg
idivl
outsl
sub
sub
jo
pop
loopne
pushf
push
pusha
push
cmc
loop
cmp
fsts
sub
mov
cmp
movsl
dec
rorl
inc
fisubl
and
push
jge
fstps
in
xor
outsb
pop
lds
fs
mov
insb
push
cmpsb
dec
mov
pop
not
pop
test
int
lds
adc
mov
icebp
adcb
xchg
mov
push
jcxz
decl
outsl
jno
jg
xor
pop
sbb
pop
scas
push
xchg
lret
jg
or
push
xchg
outsl
jno
add
into
std
ret
xorb
and
icebp
pandn
jbe
sub
push
and
sub
clc
mov
cli
xor
or
adcb
xchg
mov
jne
lret
pop
lcall
pop
rcr
xor
enter
je
addr16
sti
and
addr16
jmp
pop
test
xchg
fsubr
fnsave
faddl
and
shll
jbe
xchg
jnp
das
cmpsl
cmp
jle
fstpl
xchg
insl
js
enter
fimuls
lcall
xchg
jne
xor
testl
cmc
lcall
repz
mov
xor
inc
hlt
or
lods
shrb
stc
js,pt
out
das
cli
xor
imulb
icebp
and
mov
shll
dec
fsubs
add
push
xor
mull
jnp
popf
sbb
ja
out
cld
sub
xchg
lcall
mov
dec
mov
mov
imul
or
push
pop
iret
dec
dec
aad
mov
dec
mov
sub
xchg
filds
xchg
shr
xchg
lahf
xor
test
scas
inc
cmp
lret
imul
gs
call
cmp
mov
mov
das
push
std
jae
js
xchg
sub
xor
adc
xchg
cmp
push
push
stos
jecxz
and
arpl
sub
outsb
add
mov
mov
fidivrs
inc
rorl
pop
jb
inc
inc
mov
jge
shrl
jl
int
xchg
cmc
in
jecxz
dec
xchg
mov
adc
xchg
dec
jbe
jo
sub
sub
mov
pop
lahf
fisubs
loope
icebp
cmp
mov
sbb
dec
jnp
push
dec
insl
addl
je
fimull
sti
je
es
push
into
jle
in
iret
jns
lahf
das
or
push
mov
xchg
mov
in
xchg
int
fdivrl
adc
dec
subb
out
aaa
addb
sub
fdivl
aas
fisttps
push
lock
sahf
mov
lods
ljmp
sti
lahf
xchg
enter
repnz
rolb
loope
out
call
stc
pushf
ret
loop
sub
fstps
int
sub
lret
mov
dec
dec
jp
lods
mov
inc
pop
xor
xchg
out
mov
ja
jmp
mov
cltd
stos
lods
push
pop
fadds
stos
jle
arpl
sub
xor
or
jbe
out
lea
mov
fwait
loop
mov
ss
inc
jnp
cmpsb
enter
push
inc
cmp
jmp
push
mov
mov
dec
jecxz
sub
xorl
in
jns,pt
cs
xchg
inc
push
stos
in
mov
scas
mov
mov
aad
sub
leave
mov
mov
push
mov
lds
shlb
xlat
int3
lret
jb
push
jb
jno
shl
fmul
lret
mov
jno
adc
fmuls
mov
lds
xchg
shrb
cltd
mov
lret
mov
jmp
xchg
jbe
lahf
stc
mov
sub
xchg
fsubrl
mov
add
leave
mov
sbb
scas
mov
popa
xchg
cli
mov
imul
cmpb
mov
pop
mov
push
mov
inc
inc
add
xor
mov
fmull
sub
stos
aad
mov
add
cwtl
aam
les
sahf
out
lcall
xor
mov
dec
xlat
push
clc
inc
xchg
jmp
add
add
pushf
pop
push
out
inc
jl
ret
enter
in
sbb
add
pop
jecxz
push
sub
lock
jbe
mov
mov
repz
mov
cmp
out
push
xchg
mov
loope
ficoml
jns
xchg
loop
jg
pop
popl
out
fwait
mov
outsl
mov
sub
pop
xchg
dec
mov
and
out
pop
fnstsw
pop
into
xor
add
xchg
mov
push
fcmovne
pop
cmpsl
xchg
arpl
push
jecxz
sub
jmp
movsb
push
in
dec
xchg
and
stos
sbb
sbb
jbe
push
sbb
pop
mov
push
mov
jle
mov
dec
bound
pop
notl
int
dec
pop
inc
fwait
and
cmp
pop
dec
xchg
pop
lret
shrb
xor
mov
sub
cmp
add
js
iret
xchg
cs
fmull
scas
and
sarl
lcall
xchg
jge
nop
das
cs
push
adcb
mov
push
jle
call
insl
push
lock
aaa
xchg
cmp
nop
xchg
sub
jmp
pop
jae
pop
lret
jg
xchg
adc
sbb
cmp
stos
and
aam
pop
cs
pop
mov
push
aaa
scas
sbb
in
out
lret
clc
cmp
cwtl
jnp
ss
call
and
lret
cmpsb
sub
int3
mov
jo
aaa
mov
lret
xchg
dec
mov
lret
int3
pop
ja
adc
pop
notb
mov
in
cmp
push
in
cwtl
cmp
push
adc
xchg
popf
mov
push
fisubs
adc
shrl
adc
jge
es
jecxz
push
popa
sbb
jge
and
mov
dec
int3
orl
int3
cli
lea
int3
jmp
xchg
int3
ds
inc
fnstsw
mov
mov
ror
subb
push
loope
pop
and
pop
ss
int
ds
jecxz
pop
inc
mov
pop
xor
rcrl
jl
mov
fsubs
pop
call
xor
jp
jge
in
movd
fists
jmp
fs
or
jae
mov
dec
shll
cli
inc
xchg
push
jmp
pop
mov
and
mov
sbb
nop
pop
xor
movsl
push
xor
dec
nop
xchg
pusha
dec
or
sbb
cmp
movsb
loopne
cmp
icebp
int3
in
pop
enter
ficoml
into
push
sbb
pusha
jo
shlb
jp
in
adc
pushf
pop
mov
mov
aad
adc
inc
xor
rcrb
sbb
aas
mov
mov
lods
inc
pop
jne
mov
les
sub
fwait
jo
shll
lds
mov
sub
leave
paddusb
mov
inc
cmc
fwait
dec
popf
xlat
push
push
sbb
pushf
shll
mov
cmp
lret
movsl
rcrb
shll
adc
cmp
mov
jle
mov
fwait
and
pushf
insl
dec
xchg
lahf
bound
and
aaa
dec
fcmovu
aaa
sbb
dec
les
jnp
push
mov
cmc
push
xchg
mov
xchg
xor
xchg
xlat
test
pop
ss
lcall
call
scas
mov
test
mov
in
mov
xchg
insl
test
mov
mov
jge
fldt
pop
popf
sub
mov
xlat
scas
mov
stos
sub
sbb
les
lret
and
sti
outsb
jmp
jae
pushf
out
cmp
cli
ret
jbe
adc
fnstenv
sub
out
cmpl
ja
mov
call
cmp
lods
jns
mov
cmp
pop
sahf
add
shrb
mov
mov
fbld
xor
in
jb
movsl
adc
xchg
sub
in
inc
sbb
ja
pushf
dec
ss
xchg
cmp
aas
jle
xor
shlb
inc
xchg
outsb
stc
popfw
shll
jge
push
push
cs
loop
sti
test
cmp
cmpsb
sub
push
jg
add
loopne
mov
push
aad
pop
aam
bound
and
and
mov
pop
sub
xchg
icebp
ja
xchg
imul
mov
inc
aaa
jmp
xchg
cmp
jnp
pop
and
in
daa
jl
cwtl
cs
or
out
pusha
cmp
xor
or
pop
scas
addr16
inc
leave
movsl
jmp
outsb
sbb
imul
dec
mov
popa
jne
or
push
push
dec
rcll
loope
popa
sub
lea
popa
orl
jg
cmp
xchg
adc
xor
pop
test
jp
sbb
cmp
mov
ljmp
sbb
cmpsl
sarl
fsubl
mov
sub
mov
fildl
fidivrs
scas
push
into
mov
inc
pop
jp
out
cld
xchg
push
fcmovb
jle
pop
shl
jne
rclb
sub
jle
ret
in
je
push
add
push
ret
insb
inc
lds
popf
mov
shl
fdivp
or
xchg
loop
outsl
mov
scas
orb
jnp
out
stc
push
xchg
cmc
inc
push
sub
mov
in
adc
movsl
cmpsl
cmp
or
cmc
jnp
and
adc
cmp
add
sub
testl
out
jge
push
rcll
push
push
sbb
bound
mov
insl
ffreep
or
notb
icebp
addr16
and
fsubl
pop
jp
das
inc
push
xchg
movsb
int3
push
in
push
jbe
sbb
loope
outsl
xchg
lcall
repz
inc
inc
push
inc
jp
mov
and
jnp
or
add
sub
in
call
push
aam
fildll
insl
mov
clc
adc
out
imul
or
push
mov
cmp
and
sub
loop
test
sbb
test
mov
mov
repnz
aad
dec
adc
push
cmpl
push
shl
scas
lcall
testb
xchg
ds
mov
popa
testb
test
aas
pushf
inc
ja
push
loope
pop
test
repz
xchg
cmp
sbb
aam
fwait
aas
and
adc
and
inc
pop
jnp
push
mov
mov
inc
mov
push
sbb
rcll
mov
hlt
cmp
jnp
subl
mov
inc
cmpsb
pushf
inc
mov
cltd
mov
stc
adc
cltd
jnp
jmp
outsb
adcb
push
dec
subb
xchg
and
mov
push
jbe
dec
cs
jae
jle
sbb
xor
jns
jnp
xchg
leave
out
jle
ret
das
jne
xor
icebp
outsl
test
loop
xchg
lret
pop
mov
pop
mov
jg
push
pop
mov
pusha
cmp
mov
icebp
pop
mov
mov
test
pop
sub
fst
jb
jmpw
pusha
out
jns
xor
outsb
mov
lods
fisubrs
dec
jl
adc
jecxz
adc
in
out
test
mov
jbe
mov
lea
adc
bound
bound
popf
xchg
sahf
pusha
lock
inc
xchg
fwait
and
sbb
push
mov
fistps
int
xor
shll
jb
mov
fists
in
mov
stc
adc
xchg
cmp
icebp
or
xchg
int
xor
adc
sarl
je
mov
test
sub
sbb
rol
lds
mov
movsl
jmp
rcrb
rolb
jge
jno
mov
jnp
xor
jp
repz
mov
orb
jae
pop
stos
int
push
clc
cmp
mov
pop
cmpsl
xor
or
shl
jbe
jae
mov
mov
jp
enter
xor
in
shll
jo
adc
rcrl
cmp
test
hlt
shrl
inc
mov
cmp
or
movsb
sub
pusha
push
fadds
sarl
pop
mov
fwait
xchg
mov
sub
push
test
push
shl
ljmp
je
and
sti
jbe
cmp
lret
aad
test
xchg
ljmp
mov
ret
dec
fstp
pop
inc
fsubl
fiadds
std
rcrl
mov
jnp
mov
cmp
mov
xor
pop
cld
out
test
xchg
sbb
adc
stos
jle
push
scas
insl
jo
pushf
sbb
add
ret
aaa
test
mov
mov
fstpt
fwait
ljmp
push
mov
stos
and
sub
push
test
mov
push
leave
imul
sub
mov
les
add
cs
mov
hlt
pop
imul
ss
mov
divl
and
xor
mov
or
or
clc
sbb
jae
mov
push
sub
or
sbb
mov
bound
nop
and
std
sbb
cmpsl
fbld
xor
mov
movsb
ret
jp
xchg
dec
stos
stc
cwtl
das
mov
cltd
das
mov
and
int
test
lcall
lahf
je
xor
and
in
roll
dec
jl
insb
mov
mov
xchg
mov
sub
adc
pop
xor
int
popa
das
adc
xlat
incl
fisttps
das
jl
mov
cmpsb
jl
push
cmpsb
fstpt
cmp
enter
lock
and
pop
mov
int
into
xchg
shlb
xor
sub
or
popf
xchg
test
cmp
mov
mov
lret
lds
rcr
jb
stos
sbb
js
xchg
andb
lods
xchg
adc
mov
fs
fsubrs
add
mov
movsl
jne
sahf
jg
popf
cmp
xor
sub
fstpt
je
and
jne
and
sub
and
sub
push
fmull
scas
filds
xchg
xchg
insb
and
lcallw
mov
push
push
cld
mov
shlb
add
jmp
lcall
scas
adc
mov
out
and
setae
mov
outsl
cwtl
into
xchg
or
add
bound
pushf
push
ficomps
inc
sbb
or
jmp
sub
mov
lods
mov
ret
inc
pop
sti
jl
ja
pop
enter
jno
cld
xor
pop
cld
fistpll
jae
stc
push
adc
mov
xor
cmc
pop
test
sbb
sahf
and
mov
cmpsl
outsl
in
sbb
fisubrs
or
sbb
out
pusha
je
add
jbe
outsl
xchg
xor
gs
mov
or
shlb
add
mov
jl
or
jns
std
pusha
repz
jg
add
leave
fldt
fs
jae
test
cmp
mov
fildll
mov
and
jle
jbe
inc
movsl
push
repz
test
sti
jns
pop
push
jne
or
inc
inc
cmp
jne
and
jb
aas
test
mov
dec
jle
jbe
nop
ret
mov
or
enter
and
fwait
out
or
jle
xchg
std
pop
adc
cmp
mov
sbb
mov
mov
mov
mov
lahf
push
sub
pop
das
sbb
cld
mov
daa
inc
sub
hlt
jnp
insl
lcall
test
jnp
push
xor
orl
jecxz
out
mov
out
test
jnp
mov
cld
stos
or
pop
push
aaa
mov
xor
lret
sub
xor
mov
jno
mov
mov
jecxz
std
jnp
and
sbb
pop
lea
sbb
jp
sti
loopne
mov
arpl
mov
jbe
out
cli
movsl
setae
lock
and
jne
hlt
xor
xlat
dec
xor
mov
js
add
inc
sbb
adc
sub
mov
mov
ficoms
adc
mov
sbb
inc
roll
sub
insb
jle
pop
mov
rclb
in
enter
cld
xor
pusha
cltd
fwait
jge
loopne
ficoml
mov
popa
push
mov
int
jp
cmpsl
mov
mov
mov
jge
cmp
xor
je
or
orl
cwtl
adc
in
ja
adc
cmp
add
push
cs
fisttpl
sub
and
mov
mov
pop
imull
mov
push
sub
jb
jle
mov
and
jp,pt
out
icebp
je
movl
fucomi
aad
mov
sbb
repz
inc
push
daa
mov
push
xor
rolb
cmp
pusha
outsb
or
cltd
xor
push
pop
jle
push
and
ret
cmp
mov
adc
mov
stc
pushf
sahf
lock
and
pop
mov
dec
das
imul
sbb
mov
cmp
mov
push
jne
pop
mov
mov
mov
loopne
or
mov
shll
rol
push
mov
adc
xor
mov
stc
xchg
mov
sbb
or
cmp
mov
adc
into
xchg
push
in
xchg
xlat
jo
cmpsb
push
aam
jb
mov
es
push
test
sbbl
jb
mov
add
mov
push
bound
dec
inc
jo
fbld
cmp
xchg
pop
cmp
flds
movswl
or
es
dec
push
gs
mov
push
xor
shlb
repnz
sbb
adc
das
add
dec
arpl
stos
popf
in
or
sub
push
in
sbb
cli
add
clc
lret
enter
push
xchg
aam
out
hlt
leave
cmp
sub
ljmp
mov
orl
xchg
in
pop
mov
sarb
mov
mov
jns
inc
push
iret
sbb
pushf
das
or
out
and
sahf
and
stc
lret
adc
loop
sub
cli
test
push
mov
dec
inc
imul
cld
mov
aad
test
int
dec
xchg
paddusw
jge
cli
xor
xchg
mov
sub
outsl
sub
push
xor
pop
hlt
mov
mov
outsl
lock
aaa
cmp
mov
sbb
out
imul
cmp
mov
sar
bound
pop
pop
pop
push
stos
and
enter
iret
es
aaa
js
push
xlat
imul
mov
adc
lock
vmread
js
aaa
pop
pop
xchg
in
pop
test
into
xor
adc
push
enter
adc
or
pop
lret
movsl
cmp
js
adc
sti
adc
push
std
inc
sbb
into
cs
or
add
xlat
and
ds
inc
adc
repz
mov
mov
jne
sub
lods
adc
xor
mov
push
ror
test
faddp
subb
jae
cmpsb
pop
rorl
or
in
dec
sub
jl
lea
mov
pop
push
sub
or
inc
adc
jns
jge
iret
mov
hlt
bound
arpl
mov
xor
pop
lds
std
sub
or
bound
mov
pop
lcall
std
hlt
mov
xlat
imulb
cmp
test
mov
and
rcll
stc
mov
adc
fistl
mov
rorb
loope
jb
arpl
push
sbb
sub
cmc
jno
xchg
lret
cmpsb
mov
test
sbb
or
pop
outsl
cmp
jne
std
or
sub
je
lcall
ss
ljmp
out
mov
cmp
stos
or
push
leave
xchg
inc
adc
lret
cmp
pop
ja
call
lret
mov
pop
xchg
insl
cli
mov
mov
and
adcb
clc
xchg
xor
cmp
gs
inc
mov
jae
scas
or
inc
add
mov
push
testl
jmp
jnp
ja
shl
sbb
cmp
sbb
xchg
push
dec
mov
pop
add
lds
icebp
rcrb
mov
mov
sub
sbb
and
cld
fsubs
pop
mov
mov
sub
imul
call
int
xchg
push
popf
adc
jge
sbb
dec
repnz
xchg
and
fdivr
lds
mov
cld
roll
sub
addr16
jl
lods
xchg
cwtl
repnz
jg
mov
push
push
add
mov
insl
xchg
mov
dec
push
inc
cmpsb
into
fwait
pusha
repz
cwtl
jbe
call
in
lret
inc
into
sbb
cmpsb
sub
mov
inc
sub
js
sub
rolb
loopne
xchg
inc
clc
vucomisd
arpl
add
rcrl
je
cmp
dec
xor
std
jmp
data16
mov
ljmp
bound
test
adc
xchg
dec
push
push
aam
stc
dec
mov
dec
gs
pop
sbb
or
or
scas
add
sysret
and
call
adc
mov
mov
and
lea
pop
lret
mov
mov
mov
push
sarb
fbstp
cmp
js
cwtl
rcll
sbb
mov
and
cltd
xchg
pop
or
hlt
ljmp
aaa
xchg
adcl
jb
iret
jns
adc
add
pop
add
jnp
add
push
divl
pop
fimuls
lock
jp
orb
lret
pop
dec
cmp
and
inc
jmp
insb
popf
sub
pop
mov
into
shll
lret
mov
addr16
mov
cs
mov
arpl
cs
dec
mov
cs
dec
mov
cs
dec
mov
cs
dec
mov
cs
dec
mov
cs
dec
mov
cs
dec
mov
cs
dec
mov
cs
dec
mov
xchg
pop
push
les
xchg
out
clc
js
add
idivl
les
mov
ficoms
xor
test
inc
sbb
jp
cs
dec
call
js
pop
push
and
je
not
jne
inc
insl
nop
fidivrs
das
hlt
jle
idiv
mov
cltd
imulb
aam
sub
into
sub
fucomip
fldcw
stc
or
jb
xor
adc
cmp
sbb
in
into
roll
cmp
jb
sub
insl
lea
jge
mov
mov
pop
and
sbb
insl
dec
sbb
pop
cld
cmpsl
sub
lahf
sbb
cld
or
sti
lret
push
sbb
xor
nop
subb
jg
aad
cld
ds
scas
cwtl
mov
jno
lea
cmp
repz
mov
js,pt
pop
dec
mov
stos
jno
aam
inc
fadds
sbb
adc
inc
jle
int3
fisttps
jnp
daa
jno
sbb
cmp
mov
xor
pusha
adc
divb
lret
mov
dec
test
pop
inc
repz
xor
and
outsl
lock
jno
mov
push
add
lahf
pop
push
sub
rolb
xchg
fistpl
mov
mov
enter
insl
and
int3
cmp
cwtl
mov
cmc
imul
sarl
cmp
pop
sarl
lret
push
push
adc
arpl
in
mov
cld
movl
adc
mov
ja
mov
out
addr16
mov
mov
mov
repz
dec
dec
sbb
cmc
or
ret
push
and
xchg
xchg
sbb
sub
xchg
das
pop
push
lahf
or
nop
sarl
push
add
adc
xchg
mov
fists
jno
out
push
jae
or
xchg
int3
fwait
xor
push
das
inc
lods
insb
bsr
lods
jb
ja
add
mov
pop
push
mov
xor
jecxz
jge
fcmovnb
and
or
xor
pop
pop
push
sbb
pop
leave
das
idivl
jae
and
mov
mov
pop
fisubrl
inc
pop
je
or
out
mov
int
in
stos
lcall
mov
sbb
mov
dec
jne
or
mov
cmp
test
lret
xchg
xor
push
leave
pop
ffreep
fdivrs
jge
movsbl
int3
pop
xlat
or
and
sbb
cmpsl
adc
out
jge
andb
mov
jg
lret
mov
add
pop
or
push
shr
mov
or
mov
cmp
adc
mov
xchg
sub
out
fdivrs
xlat
mov
fsubrs
lret
cmp
push
into
lea
enter
