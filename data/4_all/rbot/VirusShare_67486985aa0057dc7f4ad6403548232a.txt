push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
call
pop
ret
push
mov
push
push
call
add
mov
pop
ret
push
mov
sub
mov
push
call
mov
push
push
mov
push
call
push
mov
push
call
neg
mov
mov
pop
ret
push
mov
movl
jmp
mov
add
mov
cmpl
jg
mov
and
jns
dec
or
inc
test
je
movl
jmp
mov
add
mov
cmpl
jg
mov
and
jns
dec
or
inc
test
jne
mov
imul
mov
movb
mov
and
jns
dec
or
inc
test
je
mov
imul
mov
movb
jmp
jmp
pop
ret
push
mov
movl
jmp
mov
add
mov
cmpl
jg
movl
jmp
mov
add
mov
cmpl
jg
mov
imul
mov
movsbl
cmp
je
mov
imul
mov
movsbl
cmp
je
mov
imul
mov
movsbl
cmp
je
mov
imul
mov
movsbl
cmp
je
push
push
call
add
mov
imul
mov
movsbl
cmp
jne
push
push
call
add
push
push
call
add
jmp
jmp
push
push
push
mov
push
call
pop
ret
push
mov
movl
jmp
mov
add
mov
cmpl
jg
mov
movb
cmpl
jne
push
push
mov
push
call
add
movl
jmp
pop
ret
push
mov
push
movl
cmpl
jne
push
push
mov
push
call
call
push
push
mov
push
call
add
call
movl
call
push
push
mov
push
call
add
mov
pop
ret
push
mov
sub
push
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
mov
cmp
jb
movl
mov
add
xor
mov
mov
add
xor
mov
mov
imul
add
xor
mov
div
sub
mov
cmpl
jbe
mov
push
call
mov
push
call
push
push
mov
push
call
cmpl
jge
mov
add
mov
jmp
mov
add
mov
mov
cmpl
jbe
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
add
mov
jmp
mov
pop
mov
pop
ret
push
mov
mov
push
call
movl
jmp
mov
add
mov
cmpl
jg
mov
imul
movsbl
cmp
jne
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
imul
movb
jmp
push
push
mov
push
call
movl
jmp
mov
add
mov
cmpl
jg
mov
imul
movsbl
cmp
jne
push
push
mov
push
call
add
mov
imul
movb
jmp
pop
ret
push
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
push
call
add
push
push
mov
push
call
add
push
call
add
push
mov
push
push
mov
push
call
add
pop
ret
push
mov
push
push
mov
push
call
add
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
push
call
mov
pop
ret
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
push
push
mov
push
call
push
push
mov
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
push
call
add
movl
or
add
aas
pop
movl
or
movl
inc
movl
cld
movl
inc
inc
in
hlt
inc
inc
inc
loopne
adc
inc
inc
loopne
das
adc
inc
inc
in
jno
and
inc
cld
jmp
mov
mov
mov
mov
mov
push
mov
push
call
add
ret
mov
push
push
mov
push
call
add
push
push
mov
push
call
add
push
push
mov
push
call
add
push
push
mov
push
call
movb
movl
mov
jmp
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
movl
push
push
mov
push
call
add
movl
push
push
mov
push
call
add
push
push
mov
push
call
movl
movl
push
movl
mov
movl
mov
movl
mov
mov
movl
in
movl
mov
pop
movl
movl
jmp
mov
mov
mov
mov
mov
push
mov
push
call
add
ret
mov
push
push
mov
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
movb
movl
mov
jmp
xor
cmpl
sete
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
mov
xor
lea
rep
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
push
call
add
mov
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
mov
push
push
mov
push
call
add
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
mov
push
push
call
mov
push
push
mov
push
call
add
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
mov
push
push
mov
push
call
add
mov
mov
push
push
mov
push
call
add
push
push
mov
push
call
add
mov
mov
push
mov
push
mov
push
call
add
mov
mov
mov
xor
divl
test
jne
mov
mov
mov
jmp
mov
mov
mov
xor
divl
add
mov
imul
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
xor
mov
cmp
jge
mov
mov
mov
imul
add
lea
mov
push
push
mov
push
call
add
mov
cmpl
jbe
mov
mov
mov
push
push
mov
push
call
add
mov
mov
cmp
jbe
mov
mov
mov
push
push
mov
push
call
add
push
push
mov
push
call
mov
push
mov
mov
add
push
mov
push
call
add
mov
push
call
mov
mov
mov
xor
divl
test
jne
mov
mov
mov
jmp
mov
mov
mov
xor
divl
add
mov
imul
mov
mov
add
mov
jmp
push
push
mov
push
call
add
lea
push
lea
push
push
push
push
push
push
push
mov
push
push
call
push
push
mov
push
call
movl
push
push
mov
push
call
lea
push
mov
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
push
call
mov
mov
mov
movl
mov
mov
push
push
mov
push
call
push
lea
push
mov
push
mov
push
call
test
je
cmpl
jne
push
push
mov
push
call
add
jmp
push
push
mov
push
call
mov
add
mov
jmp
mov
sub
mov
push
push
mov
push
call
add
mov
mov
cmp
jne
mov
mov
cmp
ja
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
mov
push
push
mov
push
call
push
push
push
mov
push
call
lea
push
push
mov
push
mov
push
mov
push
call
push
push
mov
push
call
add
jmp
push
push
mov
push
call
add
mov
push
mov
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
lea
push
mov
add
push
mov
push
call
push
mov
mov
push
mov
push
mov
push
mov
push
call
push
push
push
mov
push
call
movl
push
push
mov
push
call
add
mov
cmp
jne
mov
push
call
mov
mov
mov
add
mov
jmp
mov
push
call
mov
mov
add
mov
push
push
mov
push
call
add
lea
push
mov
push
call
push
push
mov
push
call
mov
push
call
push
push
mov
push
call
add
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
push
mov
push
call
mov
mov
lea
rep
movl
mov
imul
push
call
mov
push
call
lea
push
call
add
test
je
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
lea
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
lea
push
lea
push
push
call
movl
push
push
push
lea
push
push
push
call
mov
sub
mov
push
push
mov
push
call
add
xor
pop
pop
mov
pop
ret
push
mov
sub
mov
and
mov
mov
sub
mov
cmpl
ja
mov
jmp
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
movl
jmp
push
push
mov
push
call
add
movl
jmp
push
push
mov
push
call
movl
push
push
mov
push
call
add
jmp
mov
push
call
movl
push
push
mov
push
call
add
jmp
movl
mov
and
mov
mov
sub
mov
cmpl
ja
mov
jmp
push
push
push
mov
push
call
movl
jmp
push
push
mov
push
call
add
movl
jmp
movl
jmp
movl
jmp
movl
jmp
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
movl
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
or
push
lea
push
lea
push
push
call
push
push
mov
push
call
add
mov
pop
ret
out
inc
add
sub
dec
sub
jnp
inc
add
sub
cmc
sub
adc
inc
add
sub
add
sub
add
in
push
push
mov
push
mov
sub
push
push
push
push
push
mov
push
call
movl
xor
movl
mov
movl
mov
mov
movl
mov
mov
mov
movl
mov
movl
mov
mov
mov
mov
add
mov
push
push
mov
push
call
add
mov
mov
add
mov
push
push
mov
push
call
add
mov
mov
add
mov
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
push
mov
mov
mov
add
push
call
add
test
jne
push
push
mov
push
call
add
mov
mov
xor
mov
mov
mov
add
mov
mov
push
mov
mov
mov
add
push
call
add
test
jne
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
mov
xor
mov
mov
mov
add
mov
mov
push
call
jmp
push
push
mov
push
call
add
mov
push
call
mov
mov
push
call
mov
push
call
mov
push
push
mov
push
call
mov
push
call
mov
push
push
mov
push
call
add
mov
push
call
mov
mov
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
push
mov
push
call
add
mov
push
mov
push
call
mov
push
push
mov
push
call
add
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
push
mov
push
call
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
push
mov
push
call
add
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
push
mov
push
call
mov
mov
push
call
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
push
push
mov
push
call
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
push
mov
push
call
add
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
movl
cmpl
jge
push
mov
and
push
push
call
mov
cmpl
je
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
push
call
push
push
mov
push
call
add
jmp
mov
add
mov
jmp
push
push
mov
push
call
add
cmpl
jne
xor
jmp
mov
push
push
call
mov
push
push
mov
push
call
add
mov
push
call
mov
push
push
mov
push
call
add
cmpl
jne
xor
jmp
mov
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
push
call
add
push
push
push
mov
push
mov
add
push
call
add
push
lea
push
call
add
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
and
cmp
jne
sub
mov
lea
mov
rep
call
add
movl
push
push
mov
push
call
add
call
and
test
jne
call
and
test
jne
movl
jmp
movl
mov
and
and
test
je
push
push
mov
push
call
add
mov
and
mov
mov
and
test
je
push
push
mov
push
call
add
mov
push
call
test
je
mov
and
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
lea
push
call
add
test
jne
mov
and
mov
push
push
mov
push
call
add
mov
push
lea
push
call
add
test
jne
mov
and
mov
push
push
mov
push
call
add
movl
lea
push
lea
push
call
mov
push
lea
push
call
add
test
jne
mov
and
mov
mov
push
call
mov
and
test
je
push
push
mov
push
call
add
mov
push
push
call
test
je
mov
and
mov
mov
push
push
call
test
je
mov
and
mov
mov
push
push
call
test
je
mov
and
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
push
push
call
test
je
mov
and
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
cmpl
je
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
cmpl
jne
sub
mov
lea
mov
rep
call
add
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
cmpl
jne
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
xor
jmp
lea
push
lea
push
lea
call
movl
movl
mov
and
test
jne
mov
and
test
je
push
push
mov
push
call
add
lea
push
mov
push
lea
call
movb
lea
push
mov
push
lea
call
movb
lea
push
mov
push
lea
call
movb
lea
push
mov
push
lea
call
movb
lea
push
mov
push
lea
call
movb
mov
push
call
lea
push
lea
call
movb
movl
cmpl
jge
push
push
mov
push
call
add
movl
push
push
mov
push
call
add
mov
push
mov
shl
lea
push
lea
call
mov
mov
mov
cmp
je
mov
shl
lea
call
sub
push
push
lea
push
mov
shl
lea
call
mov
mov
mov
movb
mov
call
push
call
add
push
lea
call
movb
lea
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
lea
push
mov
shl
lea
call
push
mov
push
lea
call
push
push
mov
push
call
add
mov
add
mov
jmp
mov
add
mov
jmp
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
mov
push
call
mov
and
test
je
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
lea
push
push
push
push
push
push
mov
push
push
call
push
push
mov
push
call
add
lea
call
add
push
lea
call
push
push
push
lea
push
mov
push
call
mov
push
call
mov
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
and
test
je
push
push
mov
push
call
add
push
lea
push
push
push
push
push
push
mov
push
push
call
lea
call
add
push
lea
call
push
push
push
lea
push
mov
push
call
push
push
mov
push
call
add
mov
push
call
mov
and
cmp
jne
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
add
mov
push
mov
push
mov
push
mov
push
call
add
push
push
mov
push
call
push
push
lea
push
call
add
push
push
mov
push
call
add
mov
and
test
je
mov
push
call
movl
lea
push
lea
push
mov
push
mov
push
push
push
call
jmp
push
push
mov
push
call
add
push
lea
push
push
call
push
push
mov
push
call
push
push
mov
push
call
add
push
call
add
mov
mov
push
call
mov
push
call
add
test
jbe
push
push
mov
push
call
mov
push
lea
push
push
mov
push
call
add
jmp
push
push
mov
push
call
lea
push
push
mov
push
call
add
mov
push
call
mov
push
mov
push
call
add
jmp
mov
and
cmp
je
mov
and
cmp
jne
movl
movl
movl
movl
movl
push
push
mov
push
call
add
mov
add
mov
push
push
mov
push
call
push
mov
push
mov
push
mov
push
call
add
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
add
mov
mov
push
call
add
mov
push
push
push
mov
push
call
mov
imul
cmp
jbe
push
push
mov
push
call
add
push
mov
imul
mov
add
push
lea
push
call
add
push
push
mov
push
call
lea
push
mov
push
push
mov
push
call
add
push
push
mov
push
call
add
lea
push
call
add
test
je
push
call
add
mov
mov
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
lea
push
mov
push
call
add
push
mov
push
mov
add
push
call
add
mov
add
mov
push
push
mov
push
call
push
push
mov
push
push
push
push
call
jmp
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
mov
push
call
mov
push
push
push
mov
push
call
cmpl
je
cmpl
je
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
sub
cmp
jle
mov
and
cmp
je
movl
jmp
mov
sub
mov
push
mov
push
mov
push
mov
add
push
call
add
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
mov
push
call
push
lea
push
mov
sub
push
mov
add
push
mov
push
call
mov
push
call
mov
push
call
mov
and
cmp
jne
push
push
mov
push
call
cmpl
jle
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
call
add
mov
mov
mov
push
lea
push
mov
push
call
add
push
mov
push
mov
add
push
call
add
mov
add
mov
push
push
mov
push
call
push
push
mov
push
push
push
push
call
jmp
push
push
push
mov
push
push
push
call
mov
mov
mov
add
mov
jmp
cmpl
je
mov
push
call
push
call
push
push
mov
push
call
add
jmp
jmp
movl
movl
lea
call
mov
jmp
mov
and
cmp
jne
push
lea
push
push
call
push
push
mov
push
call
add
lea
push
lea
push
mov
push
lea
push
call
add
push
lea
push
mov
push
call
push
push
mov
push
call
push
push
lea
push
lea
push
push
push
call
mov
push
call
movl
movl
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
mov
cmpl
je
cmpl
je
cmpl
je
jmp
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
push
call
xor
jmp
push
call
xor
jmp
call
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
push
mov
sub
push
push
mov
push
call
movl
movl
movl
movl
push
push
mov
push
call
add
movl
push
push
mov
push
call
add
mov
mov
push
push
mov
push
call
movl
push
push
call
mov
push
push
mov
push
call
movl
push
push
mov
push
call
add
movl
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
movl
push
push
push
mov
push
call
movl
lea
push
call
mov
push
call
cmpl
je
push
push
mov
push
call
mov
test
je
push
push
push
mov
push
call
movl
push
push
mov
push
call
cmpl
jge
cmpl
jne
movl
push
push
mov
push
call
add
call
cmpl
jne
mov
push
call
mov
add
mov
jmp
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
cmpl
je
movl
mov
push
call
jmp
movl
cmpl
jne
push
push
mov
push
call
add
push
call
jmp
push
push
mov
push
call
jmp
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
call
mov
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
push
call
test
jne
push
push
mov
push
call
add
xor
jmp
push
push
mov
push
call
movl
movl
push
push
mov
push
call
movl
movl
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
movl
movl
mov
push
call
mov
mov
push
push
mov
push
call
add
movl
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
movl
movl
mov
push
call
movl
movl
mov
push
call
lea
push
call
push
push
mov
push
call
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
movl
cmpl
je
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
push
call
add
push
mov
push
call
push
push
mov
push
call
add
call
call
push
push
mov
push
call
add
push
push
push
lea
push
call
test
je
lea
push
call
lea
push
call
jmp
push
push
mov
push
call
add
mov
push
push
call
mov
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
jmp
int3
int3
int3
int3
int3
int3
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
mov
jmp
add
add
add
add
add
add
addb
add
push
add
orb
add
addb
orb
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
loopne
add
clc
add
addb
add
adc
add
sub
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
jmp
add
pop
add
addb
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
fadds
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
xchg
add
xor
add
in
add
add
add
cmp
add
call
add
add
add
add
add
sub
add
in
add
add
add
dec
xchg
add
test
add
in
add
add
add
hlt
cmpsl
add
push
add
add
add
add
add
add
add
add
add
add
adc
add
in
add
add
add
xor
add
in
add
add
add
str
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
sbb
add
add
add
add
mov
add
adc
addb
inc
addb
mov
inc
adc
inc
and
inc
inc
inc
add
inc
add
add
add
add
add
addb
xor
add
add
and
add
sbb
add
loopne
clc
pop
jmp
pop
inc
add
incl
loopne
decb
sarb
cmpb
add
cld
ds
cld
cmp
aas
cld
cmp
cld
xor
add
aas
incb
clc
jg
add
jg
add
incl
add
jmp
pop
clc
pop
ljmp
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
mov
or
add
add
add
jg
mov
add
add
js
sti
mov
add
add
xchg
add
add
add
js
idivl
add
add
xchg
loopne
add
add
js
add
out
out
add
add
xchg
lock
ja
add
xchg
add
out
jp
or
addb
add
push
js
out
jmp
xchg
add
jp
jmp
clc
js
add
add
push
js
scas
out
mov
ja
add
push
ja
mov
mov
add
add
or
mov
push
ja
psubb
incl
ja
or
mov
mov
add
add
add
add
clc
pop
ja
ja
ja
ja
ja
add
ja
js
add
or
inc
inc
inc
inc
inc
dec
js
add
add
out
data16
int3
dec
js
add
add
decl
hlt
ja
data16
dec
js
add
add
mov
jbe
insb
dec
js
add
add
add
or
ja
dec
js
add
add
add
or
out
out
out
dec
js
add
add
add
or
jle
ja
dec
js
add
add
add
or
ja
out
out
dec
js
add
add
add
or
ja
pushl
js
add
add
add
or
inc
inc
inc
inc
inc
dec
js
add
add
add
or
js
add
add
add
add
mov
pop
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
adc
add
and
add
add
add
push
push
push
add
sldt
add
add
incl
add
add
incl
add
incl
pop
incl
addb
add
mov
leave
leave
leave
add
incl
incl
add
add
mov
mov
out
mov
add
mov
mov
or
add
or
add
or
cmpsl
mov
int3
adc
or
mov
mov
loopne
test
sub
stos
stos
stos
stos
mov
ljmp
or
mov
xor
mov
xor
mov
inc
xor
mov
inc
inc
dec
mov
out
out
out
mov
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
bound
pushl
xor
pushl
xor
pushl
xor
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
jmp
dec
lret
into
lret
xchg
clc
lock
call
add
fcoml
xor
xor
xor
xchg
into
dec
into
into
incl
add
incl
add
incl
add
add
inc
ret
ret
dec
lret
into
into
into
decl
clc
add
fcoml
add
aam
mov
xor
xor
xchg
dec
into
into
dec
into
into
incl
add
incl
add
incl
add
add
pushl
ret
ret
inc
mov
into
decl
xlat
add
fcoml
add
aam
mov
aam
mov
aam
mov
xor
xor
xchg
into
dec
into
into
incl
add
jmp
xchg
add
add
jg
jb
mov
mov
mov
mov
ret
inc
mov
into
call
xchg
add
lcall
call
clc
test
in
fdivr
out
out
xor
xor
xchg
dec
lret
dec
into
into
incl
add
incl
mov
mov
mov
pushl
mov
inc
mov
into
dec
mov
xchg
xchg
add
aam
test
in
fdivr
in
fdivr
in
fdivr
out
out
out
out
xor
xor
xchg
into
cld
clc
lock
into
into
incl
add
jmp
xchg
bound
dec
lret
mov
mov
mov
mov
mov
mov
mov
ret
or
add
or
add
in
fdivr
in
fdivr
out
out
mov
mov
pushl
xor
incl
add
add
dec
lret
dec
into
into
decl
add
mov
xchg
jmp
dec
lret
into
into
into
dec
into
into
mov
mov
incl
add
fcoml
add
or
add
mov
xchg
xchg
stos
pushl
xor
incl
add
add
into
into
dec
lret
cld
clc
lock
add
movsb
mov
jle
imul
sahf
sahf
sahf
lcall
popf
xchg
lcall
add
fcoml
add
or
add
fcmovu
fcmovu
xchg
jle
xchg
xor
xchg
dec
into
into
cld
clc
lock
lret
add
add
xchg
mov
jmp
fmul
jmp
loope
call
clc
test
aam
mov
add
add
or
add
sbb
add
mov
lahf
xchg
cld
clc
lock
fcmovbe
int
mov
mov
pushl
xor
incl
add
add
cld
clc
lock
cld
clc
lock
add
jmp
xchg
bound
jmp
loope
call
bnd
add
add
fcoml
xchg
call
mov
lahf
xchg
inc
ret
fcmovbe
int
fcmovu
xor
xor
xchg
cld
clc
lock
cld
clc
lock
add
incl
mov
xchg
imul
add
fcoml
mov
ljmp
mov
ljmp
pushl
mov
jmp
ret
clc
lock
xor
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
cld
clc
lock
cld
clc
lock
add
jmp
xchg
movsb
mov
pop
add
fcoml
add
lcall
call
ret
jno
lock
mov
mov
xchg
inc
mov
xor
ret
inc
ret
ret
inc
mov
mov
or
add
fcoml
add
add
add
xchg
cld
clc
lock
cld
clc
lock
add
jmp
mov
jmp
fcoml
xchg
call
clc
lock
lock
lock
loope
mov
mov
jmp
xor
decl
add
or
add
or
add
or
add
ret
mov
mov
xchg
add
xchg
cld
clc
lock
cld
clc
lock
add
jmp
mov
jmp
add
jp
jp
jp
jp
ljmp
mov
ljmp
ljmp
pushl
lock
mov
cmp
incl
sub
popl
jbe
popl
jle
mov
stos
inc
mov
xchg
or
add
xchg
cld
clc
lock
cld
clc
lock
add
jmp
mov
jmp
add
cld
clc
lock
xchg
mov
xchg
xchg
mov
xchg
xchg
mov
jg
jb
jp
jp
cld
clc
lock
cld
clc
lock
incl
or
incl
add
add
add
add
xchg
decl
xchg
add
add
movsb
mov
mov
jmp
add
mov
jle
mov
jle
xchg
xchg
xchg
xchg
xchg
jle
mov
jle
mov
jle
mov
xchg
mov
xchg
add
add
bound
jmp
jmp
ljmp
pop
jmp
incl
add
jmp
mov
jmp
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
mov
mov
push
push
push
incl
add
add
jmp
incl
add
jmp
mov
incl
add
incl
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
mov
xchg
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
mov
pop
jmp
incl
add
jmp
mov
incl
inc
mov
xchg
add
add
xchg
ljmp
pop
ljmp
pop
jmp
incl
add
jmp
add
xchg
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
mov
xchg
add
add
xchg
jmp
ljmp
pop
jmp
incl
add
decl
add
xchg
lock
incl
inc
imul
ret
fcoml
add
fcoml
add
call
call
call
addb
inc
mov
xchg
add
add
xchg
cld
clc
lock
decl
add
xchg
lock
call
jmp
cld
ret
fcoml
add
fcoml
add
call
call
addb
cld
clc
lock
mov
xchg
add
add
xchg
xchg
xchg
jle
mov
add
cld
clc
lock
jmp
jmp
cld
ret
fcoml
add
fcoml
add
cld
push
and
addb
cld
clc
lock
mov
xchg
add
add
xchg
lock
call
jmp
jmp
cld
ret
fcoml
add
fcoml
add
addb
cld
clc
lock
mov
xchg
add
add
xchg
lock
jmp
cld
clc
and
cld
clc
and
cld
clc
and
inc
imul
mov
add
fcoml
add
addb
cld
clc
lock
mov
xchg
add
add
xchg
lock
ret
jmp
cld
clc
and
cld
clc
cld
clc
and
inc
imul
mov
add
fcoml
add
cld
clc
lock
mov
xchg
add
add
xchg
lock
ret
clc
mov
and
cld
clc
cld
clc
and
cli
repnz
cld
ret
cld
ret
fcoml
add
cld
clc
lock
mov
xchg
add
add
xchg
incl
imul
ret
cld
ret
cld
clc
and
call
jmp
cld
clc
add
inc
imul
ret
test
add
inc
mov
xchg
add
add
xchg
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
mov
xchg
add
add
xchg
inc
ret
xchg
add
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
adc
add
and
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
ret
add
incl
add
incl
inc
ret
add
incl
incl
incl
add
incl
add
add
ret
add
add
xchg
ret
ret
inc
rol
add
add
rol
mov
add
incl
add
add
ret
add
add
xchg
ret
ret
ret
incl
std
add
add
add
std
std
add
div
add
add
add
xchg
mov
incl
ret
ret
incl
incl
add
incl
add
pushl
rol
add
add
xchg
incl
add
incl
incl
inc
ret
incl
incl
inc
rol
rol
incl
add
incl
add
incl
add
incl
add
add
add
add
jle
repz
add
inc
ret
xchg
add
incl
incl
std
std
std
incl
add
mov
mov
ret
add
incl
add
add
stc
stc
incl
add
pushl
ret
add
add
add
add
add
add
add
add
add
add
test
incl
mov
incl
add
add
jle
addb
pushl
mov
cmp
xchg
incl
xchg
incl
xchg
incl
add
incl
loope
incl
addb
mov
addb
ret
inc
ret
ret
inc
ret
ret
inc
ret
xchg
add
add
add
xchg
xchg
xchg
xchg
ret
incl
push
push
fcoml
and
incl
add
incl
add
add
incl
push
imul
shrl
xchg
add
fcoml
and
incl
add
incl
add
add
xchg
ljmp
push
repz
stc
stc
push
call
mov
fcoml
stc
incl
add
incl
add
add
imul
shrl
repz
stc
stc
push
call
mov
push
repz
add
incl
add
add
imul
push
and
push
push
and
stc
push
and
repz
and
repz
add
incl
add
add
fcmovu
call
aam
call
aam
dec
iret
iret
dec
iret
iret
call
aam
fcmovu
xchg
add
mov
lods
inc
orb
inc
addb
inc
addb
inc
addb
inc
addb
inc
addb
inc
addb
inc
addb
inc
add
lods
inc
addb
inc
loopne
lods
inc
lock
cld
add
jb
fs
mov
loop
fstps
jae
xlat
pop
lret
aaa
mov
stos
jo
and
int3
loopne
daa
mov
call
mov
pop
fwait
mov
shl
cmp
mov
outsb
pop
subl
lds
push
mov
xor
dec
lea
mov
adc
or
sub
loope
sbb
jno
cwtl
loop
shlb
lahf
lods
cmc
cli
ret
mov
and
repz
nop
lea
shrl
dec
cld
lds
mov
leave
adc
xchg
mov
ljmp
cld
jno
and
mov
adc
lods
push
jo
push
lods
jb
push
int3
test
mov
mov
ja
inc
outsl
subb
xor
cmp
jb
into
pop
cmpsb
lods
sarb
xchg
jl
add
xchg
cwtl
scas
and
pop
sub
inc
jmp
insb
testl
fndisi(8087
lock
ret
push
sub
or
dec
cmp
xor
push
imul
dec
gs
mov
sub
das
test
lock
pop
pop
cltd
ret
cwtl
xorl
xor
addr16
pushf
dec
xchg
xor
cmc
mov
movsl
push
into
inc
in
enter
jae,pn
lret
int3
cmp
aad
leave
jne
or
iret
and
loop
in
fisttps
and
mov
add
or
xchg
orb
sbb
cmc
inc
retw
cmpsb
orb
mov
lahf
xchg
stos
cmp
fsubrl
aas
add
dec
sub
mov
inc
mov
jb
maxps
adc
pop
pop
dec
mov
mov
clc
fisubrl
clc
add
cltd
cmp
clc
dec
movsb
mov
xor
mov
adc
inc
cmp
xor
pop
push
inc
jecxz
mov
add
xor
ljmp
mov
add
sbb
sub
sub
jl,pt
popa
add
filds
mov
std
stc
cmp
jg
out
sahf
sbb
xor
add
dec
loop
cld
loop
scas
pusha
mov
jle
cli
mov
xchg
lret
inc
pop
outsl
movsl
insb
ficoms
xor
dec
stos
lds
lahf
shlb
rorl
pop
adc
xchg
popf
xchg
add
jnp
mov
movsl
outsl
pop
js
xchg
jno
or
loope
aam
nop
xchg
lea
insb
inc
pop
mov
imull
mov
mov
inc
mov
add
xor
fcmovnu
sub
cld
xchg
lret
mov
sbb
xlat
je
ljmp
into
fcompl
call
out
add
cwtl
and
xor
mov
adc
push
sub
add
xchg
aam
inc
adc
dec
enter
aaa
shlb
pusha
add
inc
mov
data16
xor
rorb
dec
inc
scas
add
sbbb
sub
push
lods
pop
xor
pop
adcw
adc
cwtl
in
insb
jmp
pop
ds
xchg
cmp
or
imul
mov
sbb
add
sbb
int3
jbe
ret
fwait
push
cld
add
jle
repnz
sti
enter
jecxz
xor
clc
mov
fstl
fadd
inc
repz
jne
cmp
rcrl
fimull
pop
mov
in
adc
stc
in
mov
xor
sub
aam
es
aaa
adcl
mov
inc
rcrb
cmpsl
xor
inc
pop
lds
fsubrl
cmpl
jns
int3
sbb
dec
pusha
push
xchg
bound
push
mov
inc
cs
out
fcomip
sub
sbb
movsl
adc
xchg
inc
in
out
stos
and
mov
xor
mov
insl
jo
in
xor
push
ljmp
in
test
movsb
pop
jnp
pop
addr16
push
mov
jle
mov
mov
movsl
dec
mov
and
pop
jns
stc
incb
mov
cmpl
xchg
add
mov
inc
inc
mov
inc
mov
inc
ss
enter
in
inc
mov
ss
add
xchg
lds
popa
subb
bound
xor
xor
std
gs
mulb
xor
fmull
mov
inc
dec
cmp
cmpb
push
pop
or
and
fnstsw
pop
pop
test
inc
stos
mov
and
sbb
and
cmp
pop
or
mov
pop
push
mov
mov
sub
mov
pop
out
mov
js
test
int3
cltd
ljmp
xchg
loop
call
pop
mov
dec
cwtl
enter
or
popf
cltd
push
cmovnp
es
add
jnp
or
testl
cmp
jbe
jae
jp
mov
mov
add
clc
insb
jge
std
mov
pop
or
addr16
xchg
cmpsl
jmp
cmp
cwtl
stos
mov
in
sbb
pop
inc
push
fisubl
out
andb
aad
fwait
cltd
cmpsl
rcr
out
sub
dec
xchg
out
int
arpl
sarb
push
es
lea
jne
imul
cmpsb
lods
mov
mov
push
lea
mov
shl
testb
adc
mov
loopne
data16
pushf
push
subl
push
loope
cmp
dec
pop
insb
daa
pop
repnz
xor
cltd
leave
movb
adc
pop
sbb
sub
cmpsb
rcrl
iret
into
stos
sbb
push
add
test
lock
mov
lock
mov
sub
inc
imul
cltd
push
ret
push
add
das
lods
movsb
mov
pushf
lds
mov
inc
jae
mov
cmc
imull
and
aam
add
into
xchg
and
loop
test
and
xor
sub
fwait
mov
adc
sbb
mul
mov
cmpsb
lock
test
pop
ret
dec
push
sub
es
mov
mov
je
pop
cld
inc
and
jne
push
inc
xchg
or
mov
sbb
pop
aam
inc
sbb
fistps
xchg
mov
adcb
xchg
add
pop
jne
adc
imul
adc
or
dec
cmpsl
fistpll
enter
and
lds
in
ljmp
test
in
in
xor
loopne
aaa
and
mov
mov
loop
int
jl
sbbb
scas
jp
sarl
adc
out
stos
push
out
test
push
sub
cmc
fldl2t
inc
mov
std
and
or
adc
add
fildl
add
mov
mov
test
sbb
inc
pop
fs
jbe
mov
fldl
adc
xchg
mov
or
push
or
lods
xchg
scas
divl
xchg
movsb
in
lea
test
xchg
xlat
jp
or
cmp
scas
js
into
jmp
cmp
fwait
in
push
insb
lcall
rorb
push
pop
add
dec
mov
subl
mov
js
jmp
aad
lock
add
scas
fstpl
jp
mov
adcl
aad
imul
jl
or
loope
push
aaa
push
adc
jno
adc
movsl
cmp
push
outsb
mov
mov
test
mov
cltd
xlat
push
xor
cmp
push
pop
or
mov
adc
and
repnz
jle
in
popa
mov
js
stc
aam
cmp
aad
mov
hlt
push
xchg
aas
test
out
pop
je
sub
lea
xchg
mov
sub
pop
popa
aad
popa
ret
jno
cld
cwtl
test
loope
ret
and
pop
hlt
cmpsb
out
mov
loopne
and
sub
jl
jo
jbe
jae
jp
mov
insb
fistpll
das
aas
jae
nop
xchg
pop
mov
dec
mov
cwtl
xchg
xor
in
ds
cmpsl
push
jmp
cmp
cwtl
pop
xchg
popa
iret
push
xor
pop
push
movb
popf
into
dec
rcrl
aaa
loope
out
xchg
rcrl
adc
insl
cli
cmp
lcall
insl
inc
sarb
push
je
inc
cmp
jg
iret
in
jmp
cmp
mov
mov
mov
icebp
out
jb
jge
insl
inc
inc
xor
sbb
sub
lds
dec
add
jnp
mov
dec
outsl
mov
jge
and
jle
aaa
imul
sub
outsl
popa
scas
pop
int
ficompl
mov
nop
loope
in
mov
das
and
out
lret
ds
jecxz
in
repnz
iret
mov
add
xor
lds
lods
sub
jne
jae
pop
sbb
idivl
and
mov
je
add
xchg
and
loop
test
and
xor
sub
fwait
mov
test
push
sub
loop
push
mov
and
xchg
adc
rorb
clc
les
imul
mov
pop
cld
inc
and
jne
push
inc
xchg
or
mov
sbb
pop
aam
inc
sbb
fistps
xchg
mov
adcb
xchg
add
pop
jne
adc
imul
adc
or
dec
cmpsl
fistpll
enter
and
lds
in
ljmp
test
in
in
xor
loopne
aaa
and
mov
mov
loop
int
jl
add
pop
jp
inc
scas
jp
sbb
cmp
outsb
out
stos
push
out
test
push
sub
cmc
fldl2t
inc
mov
std
and
aaa
mov
addl
leave
add
out
xchg
sarb
jnp
test
sbb
inc
pop
fs
mov
mov
sbb
inc
add
addl
xchg
xor
or
adc
mov
xchg
movsb
in
lea
mov
cmp
mov
mov
js
shr
sub
aas
jge
in
fwait
in
push
insb
lcall
rorb
push
pop
add
dec
mov
subl
mov
js
jmp
aad
lock
add
scas
fstpl
jp
mov
adcl
aad
imul
jl
or
loope
push
aaa
push
adc
jno
adc
movsl
cmp
push
outsb
mov
mov
test
mov
cltd
xlat
push
xor
cmp
push
pop
or
mov
adc
and
repnz
jle
in
popa
mov
js
stc
aam
cmp
aad
mov
hlt
push
xchg
aas
test
out
pop
je
sub
lea
xchg
mov
sub
pop
popa
aad
popa
ret
jno
cld
cwtl
test
loope
ret
and
pop
hlt
cmpsb
out
sbb
mov
cmp
lods
int
cmp
push
int
ret
sarl
xchg
xchg
outsl
cmc
das
pop
rolb
xchg
insl
add
push
inc
das
mov
into
fwait
je
dec
add
mov
and
aad
pop
xchg
movsl
jg
pop
fwait
sbb
cmpsl
mov
mov
icebp
jl
rolb
and
movsl
push
loope
ss
add
jno
pavgw
and
xor
inc
add
insb
jnp
mov
lds
xor
das
mov
pushf
mov
ds
test
pop
cmpsl
repz
pop
push
jle
mov
repnz
and
ds
ljmp
inc
jmp
ret
popf
in
loope
fs
mov
pop
xor
ret
mulb
fnsetpm(287
movsb
mov
mov
sub
xor
inc
subb
clc
pop
sahf
into
stos
test
xlat
rcll
push
cs
movsb
jns
roll
adc
fwait
movsl
ret
test
leave
mov
cmp
dec
push
pop
xchg
jbe
inc
mov
cltd
lea
adc
cltd
sub
xchg
js
sahf
and
jne
jnp
outsl
int
and
mov
jnp
pop
jbe
inc
insb
jecxz
loop
xor
outsb
xchg
push
sub
sub
dec
mov
pushf
dec
outsb
popf
ss
jbe
lcall
leave
pop
gs
addr16
popf
jmp
dec
add
mov
xchg
in
jmp
imul
push
xchg
arpl
sbb
ret
cmp
cmpl
loope
faddp
or
and
loopne
test
and
push
daa
push
jmp
sub
pop
fdivrl
cmpsl
mov
je
sub
lods
dec
call
add
je
cmp
data16
icebp
dec
pushf
sub
ds
cmp
jmp
pop
xchg
fcom
sbb
fdivrs
pop
pop
push
or
into
xor
jns
add
fidivs
xchg
mov
aad
xor
and
test
rcll
cmpsl
ja
pushf
mov
in
mov
adc
push
pusha
xchg
jae
or
and
fldenv
idivb
xchg
lret
js
xor
in
insl
imulb
and
popf
add
jecxz
shlb
jbe
push
mov
fs
addr16
aam
jl
orl
push
insl
fcomps
imul
imul
or
fldl
sub
pop
inc
sti
stc
adc
loop
and
inc
add
mov
pop
mov
and
out
jne
je
xor
rcll
subb
mov
xchg
or
pop
lahf
sub
dec
dec
fsubrs
lea
clc
iret
lea
and
lock
movsb
gs
mov
enter
push
sub
das
add
movsb
mov
in
cmp
xlat
dec
lret
fdivs
mov
xchg
add
addr16
sarb
mov
dec
mov
sub
mov
pop
mov
aaa
fsubp
out
sub
xor
movsl
sbb
lret
mov
iret
int3
jno
nop
test
pop
xor
sti
ret
test
inc
out
cmp
pop
ss
push
and
repnz
mov
inc
dec
bound
mov
mov
push
xor
xchg
pop
cmp
lock
adc
cmp
scas
inc
je
pop
push
mov
call
push
cmp
insl
push
popl
adc
or
push
push
dec
loop
mov
cwtl
sbb
aaa
inc
sahf
jne
jae
sahf
js
mov
clc
cltd
iret
or
push
fmull
cwtl
inc
outsl
jg
out
xor
push
adc
xchg
insb
aam
iret
or
sub
mov
xor
mov
insb
cmp
aad
out
push
addr16
jg
mov
out
adc
jle
and
bound
pop
inc
dec
mov
add
arpl
lret
xchg
pushl
mov
pop
push
mov
pop
fdivs
ret
shll
push
xchg
pop
or
mov
mov
push
roll
iret
ss
jecxz
in
cmpb
inc
mov
sbb
or
insl
push
and
sbb
idivb
push
xor
gs
aas
loope
cld
push
test
jp
enter
ds
popf
and
arpl
mov
out
sub
imul
inc
repz
cmp
and
lea
push
shll
mov
xchg
hlt
in
sarb
dec
push
ret
cmpsl
orb
and
les
pop
push
lods
sub
fs
xchg
sbb
enter
mov
mov
or
mov
lea
sub
lahf
dec
rorl
inc
fld
sti
pop
test
add
cmp
jns
pop
pop
lcall
mov
or
ss
out
dec
sub
cltd
and
or
push
add
jecxz
jns
sbb
push
inc
in
lcall
adc
lret
mov
leave
insb
sub
adc
xchg
arpl
ljmp
js
aaa
outsl
fadds
aam
or
add
sarb
aad
fs
shlb
subb
mov
or
mov
xor
dec
imul
test
cli
jae
jnp
sub
lret
and
xor
sub
gs
lods
mov
pusha
fsubl
inc
shl
leave
jnp
sarb
sbb
inc
aam
out
mov
fisttpl
js
dec
stc
jae
and
ret
and
loope
es
or
mov
xor
mov
jns
dec
out
test
mov
lock
ret
sar
inc
sub
inc
in
cmp
leave
xlat
mov
adc
mov
cmpsl
das
adc
stos
jne
punpckldq
stos
loop
cmp
push
cwtl
sbb
cmp
fidivl
and
pop
aas
leave
inc
jno
rorl
and
sbb
fcoms
call
test
mov
mov
sbb
mov
rorb
scas
mov
pop
movsb
outsl
lds
cmpsb
std
cmc
cmc
xlat
push
mov
stos
addr16
pop
gs
or
lcall
fsubs
mov
aam
scas
inc
pop
bound
and
mov
rolb
testl
mov
push
xchg
pop
jns
por
iret
mov
je
mov
cmp
insl
push
je
ljmp
mov
jo
or
jmp
xor
dec
aas
add
fwait
xchg
jnp
popa
out
ret
adc
enter
popf
push
stos
xchg
lods
push
loop
jecxz
push
mov
les
dec
popf
sub
mov
int3
outsl
gs
fwait
mov
cmp
inc
jmp
xor
dec
mov
test
add
in
pop
dec
mov
fistl
arpl
lcall
or
mov
out
daa
std
inc
mov
lahf
xchg
jnp
add
or
std
mov
cmp
sbb
out
cltd
ret
push
sbb
fs
aad
lds
sub
cmp
aaa
inc
jmp
push
xchg
lea
push
in
lds
sub
pop
test
xor
and
mov
or
adc
and
js
lods
lahf
dec
fnstsw
jle
mov
mov
outsb
or
or
bound
push
xor
cli
sbb
mov
mov
das
push
mov
push
cli
cld
add
sub
icebp
shrb
add
pop
aas
jnp
les
pop
and
aaa
sbb
inc
vrcpps
sub
repz
mov
lea
push
xchg
push
das
xor
aam
mov
out
push
xor
sub
mov
rcrb
mov
cmp
inc
pusha
cmp
cli
adc
fbld
xor
sub
dec
sub
xchg
jecxz
or
fwait
pop
push
jmp
sbb
and
scas
cli
add
xchg
int3
pushf
pop
sahf
inc
mov
sub
sbb
insb
pop
cmpsl
dec
iret
pusha
rcl
ret
fwait
push
into
out
jmp
adc
inc
cmp
out
rcrb
sahf
rcrl
dec
pop
ljmp
lods
dec
pop
in
out
incb
das
sub
fs
xchg
stc
pop
or
mov
icebp
lret
or
sti
lea
and
je
add
daa
imul
pushf
mov
hlt
push
push
pop
mov
dec
lcall
xchg
inc
pop
xlat
pop
jg
pushf
cmpl
ljmp
ror
push
push
xchg
das
mov
dec
dec
xor
inc
mov
mov
cmpsl
mov
or
cmpsb
jbe
dec
popf
imul
aad
sbbb
inc
das
lret
ret
iret
popf
sbb
insb
jnp
repz
xchg
in
or
jge
mov
in
and
in
sahf
mov
xchg
jp
jno
outsb
mov
cli
dec
loopne
syscall
add
bound
fstpt
outsl
rcrl
mov
decb
sbb
leave
std
jns
lock
cmp
jb
mov
dec
mov
les
add
out
and
pop
fnstsw
in
mov
mov
xor
jne
lods
fists
sbb
xchg
push
mov
xchg
push
cmc
cltd
sub
sbbl
sar
pop
aam
add
clc
out
sbb
es
lods
in
push
leave
es
xor
jne
int
push
push
mov
incb
pop
adc
aaa
cli
adc
adc
shlb
out
or
xor
cmp
fwait
add
inc
and
lcall
ret
jnp
out
add
addl
lods
lret
cmp
and
ret
cwtl
mov
es
pop
adc
repnz
rcll
imul
outsb
push
fisubs
pop
pop
aas
sbb
push
push
mov
aaa
mov
xchg
xchg
mov
iret
cmpsl
ret
movsb
inc
stc
es
cmpsl
sbb
es
aas
pop
ss
cs
bound
add
jmp
pop
arpl
push
dec
inc
dec
inc
adc
push
and
shlb
pop
xor
mov
push
push
jle
outsb
dec
mov
push
repnz
and
cmp
lcall
push
xchg
iret
pop
rcll
pusha
mov
lret
jo
stc
gs
push
mov
aad
in
mov
movl
in
insl
jb
push
outsb
mov
add
mov
inc
mov
in
xchg
pushf
mov
dec
push
inc
xor
test
inc
test
shlb
fsubs
sub
movsb
add
push
rol
mov
icebp
or
push
mov
pop
aad
adc
dec
dec
ljmp
dec
dec
hlt
mov
dec
loope
xor
xor
xchg
nop
daa
ret
in
xor
sub
cs
dec
mov
pusha
lods
push
add
or
cmpsb
mov
nop
mov
movsl
dec
xor
push
not
or
pop
add
pop
scas
cmp
sbb
or
out
pusha
fcomps
inc
cmc
push
insb
es
jb
jmp
imull
daa
mov
stc
fwait
adc
ljmp
jg
xchg
push
leave
cmpsl
jae
mov
bound
fldt
and
fwait
loopne
jp
mov
imull
xor
push
inc
mov
loopne
adc
pop
pop
xor
cmp
fildll
jns
in
inc
mov
rolb
jmp
xchg
stos
cwtl
push
xlat
pop
jg
and
and
jge
adc
pop
rcr
mov
jnp
push
sbb
sahf
stos
xlat
mov
dec
mulb
cmpsb
dec
or
out
std
iret
cs
sub
jle
jae
repnz
mov
cmpsb
sub
dec
sahf
pusha
pop
sub
sub
mov
hlt
fldl
loopne
out
sbb
inc
push
dec
fiaddl
adc
cmp
rclb
jbe
mov
push
stos
mov
repnz
push
data16
das
sarb
pop
pop
mov
xchg
xchg
jb
fucompp
ja
jg
and
xchg
idivl
jo
or
or
outsb
or
push
int3
stc
int3
cmp
movsb
insb
mov
hlt
xor
cmp
inc
pop
add
leave
sarb
mov
out
lret
xor
movsb
mov
arpl
leave
mov
and
pop
xor
adc
mov
ret
or
mov
add
xchg
jns
or
aas
pushf
jnp
stos
out
pop
in
cwtl
roll
add
icebp
jg
sub
imul
add
push
jnp
decb
pop
int3
dec
cmp
inc
leave
cmp
repnz
sub
jg
stos
sub
cmpl
inc
adc
popf
push
cmpsl
fwait
int3
xlat
pop
push
int
pop
mov
mov
incl
in
sub
dec
add
int
jmp
pop
sbb
fs
xor
iret
cmpsl
nop
or
arpl
jo
call
dec
cmp
push
xor
lea
fldenv
cmp
mov
ds
and
lods
outsl
in
or
xchg
xor
xor
or
push
sahf
clc
xchg
fiaddl
clc
loope
push
lock
sbb
push
and
inc
arpl
cltd
sbb
shr
sub
frstor
mov
mov
testb
xchg
push
insb
aad
push
out
jmp
push
mov
dec
in
test
mov
das
popa
repz
adc
mov
lock
xor
jecxz
pop
movsl
leave
inc
cmpsb
bound
or
or
add
dec
mov
push
push
xchg
orb
ret
pop
cmp
ret
loope
push
fwait
dec
mov
outsl
mov
addr16
leave
stc
rorl
rolb
data16
add
out
int
or
cmp
sbb
call
xorl
lahf
rol
inc
mov
jns
pop
mov
pop
fs
stos
gs
dec
cmc
lods
iret
and
jg
xchg
sub
jno
adc
push
fmuls
dec
insl
adc
xchg
adc
jnp
mov
push
add
aas
popf
sbb
loope
mov
lds
in
xchg
dec
mov
pop
mov
nop
cmp
psubq
adc
stos
lea
dec
shrl
dec
pop
inc
xor
mulb
dec
dec
aaa
ficoms
ja
and
rcll
xor
cmp
nop
scas
inc
add
or
sub
shll
xchg
push
pop
movlpd
dec
push
stos
in
push
mul
mov
sbb
adc
or
pop
and
adc
lods
push
xchg
out
out
dec
xor
loopne
mov
add
imul
cmp
adc
insl
movsl
sbb
fcom
push
xor
xor
sar
push
sub
push
cltd
out
and
mov
iret
imul
sahf
lahf
push
pusha
in
mov
sub
les
or
fmuls
dec
bound
rorl
into
sub
popf
xorl
inc
cmpsb
jle
test
adc
jle
xchg
out
dec
pop
xchg
add
pop
and
std
es
push
mov
fdivrs
inc
sbb
cs
push
cmpb
xor
pusha
jle
mov
pop
jl
push
pushf
fldcw
mov
jns
mov
lods
insb
into
or
outsb
loop
lds
xlat
icebp
and
push
cmp
popl
xchg
les
enter
ss
mov
in
inc
adc
popa
pop
jmp
inc
jle
adc
stc
in
ret
dec
popf
mov
ret
push
fs
push
mov
dec
cmc
sub
mov
mov
loope
xlat
mov
outsl
mov
lea
cmp
jae
je
pop
clc
mov
int3
int3
mov
cwtl
movsb
nop
les
pop
imul
pushf
cld
aas
mov
clc
and
jmp
imul
lea
jmp
push
shrl
inc
data16
insl
mov
mov
icebp
dec
sub
jp
dec
sbb
lcall
jb
testl
inc
loopne
negl
and
jbe
orb
jae
mov
scas
mov
mov
mov
cmpsl
je
sbb
outsb
xchg
lock
push
push
push
ljmp
std
adc
fdivl
mov
subl
stos
cmp
mov
sahf
test
ss
mov
cmp
xchg
and
jge
lahf
iret
sbb
repz
cwtl
cmp
sub
and
mov
out
lea
testb
je
pop
iret
jge
xchg
jb
mov
jmp
mov
cld
xor
out
jp
int3
push
pop
push
sarl
fnstenv
stos
adc
push
or
orb
repnz
fcompl
pop
mov
bnd
mov
in
stc
nop
loopne
push
mov
out
jge
push
jne
int
cli
and
mov
sub
adc
or
cmc
movsb
lret
push
xor
lcall
cld
push
cs
ret
out
stc
mov
mov
pusha
or
mov
test
jp
out
mov
lcall
inc
and
sub
push
xor
jbe
movsl
call
sub
push
mov
adc
cmp
insl
insb
cmp
mov
adc
add
mov
out
daa
gs
test
inc
dec
add
jecxz
push
mov
out
inc
rolb
mov
xchg
stos
xchg
add
out
pop
push
shll
std
arpl
push
lock
data16
cmp
lahf
push
fwait
inc
sub
mov
psubusb
ds
std
loop
lahf
in
push
xchg
pop
adc
jmp
cmp
or
xor
mov
push
xchg
push
xchg
and
fprem1
xchg
int
pop
cmpsl
push
inc
cld
cltd
loopne
pop
rcl
jbe
jns
fwait
push
mov
scas
pushf
adcl
jp
add
add
notb
pop
loopne
ficompl
inc
adc
outsb
dec
inc
lods
xchg
xchg
sub
fisubs
mov
ljmp
mov
out
add
push
jnp
fdivrl
and
and
pop
mov
loop
pop
xor
ret
fstl
sbb
xor
jnp
cmpsl
cmp
mov
or
lods
insb
fsubs
rcrl
jo
imul
out
xchg
scas
ss
andb
repnz
leave
mov
or
mov
cld
repnz
lds
test
fsubrs
push
nop
dec
dec
xchg
stos
ss
and
push
jns
pop
icebp
lods
cmc
iret
aam
xor
ffreep
xor
imul
mov
mov
ljmp
addl
jo
adc
sbb
jmp
cmpb
pop
imul
cmp
int
jge
popf
sub
push
or
xor
repz
iret
sub
sti
mov
mov
loopne
xor
lods
pop
xchg
call
mov
add
jae
xor
adc
jb
outsb
inc
scas
sub
leave
add
dec
mov
and
mov
jb
or
fmuls
dec
pop
in
leave
dec
jecxz
fdivs
scas
add
xchg
bound
data16
ljmp
mov
or
and
xchg
jmp
lds
movsb
or
cld
cs
roll
jle
pop
mov
xchg
test
ret
xor
daa
stos
cmpsl
fs
cmpsb
pop
loope
pop
rcrb
pop
xchg
push
pop
mov
das
aam
lcall
imul
adc
mov
cmc
mov
or
jnp
scas
lods
ss
or
xchg
mov
fucomp
adc
push
aam
fs
cmp
das
inc
insl
pop
shlw
jno
imul
iret
xchg
loope
stos
inc
jo
mov
mov
mov
inc
pop
xchg
pop
push
dec
pop
cmc
data16
sub
cmp
and
out
leave
mov
mov
fldt
outsl
cltd
jg
icebp
cmp
movsl
jo
xor
jno
arpl
enter
loop
push
fwait
pop
pushf
mov
mov
and
xchg
mov
clc
loope
xchg
shll
fisttpl
int
shrb
inc
fsubr
xchg
insb
fadds
cmp
add
out
sbb
jmp
xchg
xchg
pop
loopne
mov
scas
mov
fdivrl
pop
mov
jb
push
add
sahf
roll
add
push
jb
loopne
out
movsl
imul
and
je
lret
sub
cmp
pop
les
xor
repz
push
mulb
push
jecxz
test
push
shll
stos
mov
adc
stos
and
in
xchg
nop
mov
inc
lods
push
push
pop
sub
repnz
xor
je
xchg
flds
mov
and
insb
dec
pop
jno
inc
loop
mov
inc
add
push
push
add
jmp
push
sbb
les
ror
jb
or
jmp
pop
shrb
jne
sub
out
xchg
hlt
in
out
dec
movsl
js
stos
scas
mov
mov
aas
scas
pop
pushf
loopne
cmp
hlt
xchg
pop
dec
fldcw
inc
inc
mov
loop
loopne
ds
jg
push
orb
data16
out
pushf
jbe
lea
dec
popaw
jb
cmp
hlt
ret
xchg
mov
mov
push
dec
or
jo
imul
in
dec
outsl
fs
sbb
scas
pop
sbb
mov
stos
pop
mov
loop
div
test
hlt
pushf
xchg
fs
mov
inc
xchg
pop
imul
adc
jmp
mov
in
ret
sbb
dec
popa
aaa
cs
jmp
out
sbb
in
shr
jecxz
push
cmpsl
add
sub
jae
lret
inc
stc
sbb
shll
mov
xor
add
cmpsb
in
filds
in
mov
ret
sbb
inc
mov
gs
inc
adc
mov
mov
cmp
out
sbb
loopne
repz
scas
mov
mov
loope
fsub
push
rolb
and
mov
inc
je
cmp
mov
sbb
dec
pushf
and
dec
shrl
insl
sbb
and
add
int3
inc
push
cmp
and
ret
push
fmull
push
ja
loope
ds
cmp
lods
pop
dec
inc
inc
push
add
in
adc
pushf
inc
xor
insb
leave
push
adc
outsb
aaa
xchg
call
outsb
sub
push
xlat
pushf
dec
adc
fidivs
sbb
imul
xchg
call
outsb
push
push
jle
inc
sub
jns
out
call
xor
mov
adc
push
daa
push
jbe
cmp
mov
addl
jecxz
out
stos
aam
mov
xchg
mov
je
xor
stos
jae
or
mov
xor
adc
or
push
mov
popf
ljmp
jge
push
mov
pop
dec
lret
sbb
xor
fbld
aas
inc
cmpb
negl
push
xchg
sub
sub
pop
add
push
in
mov
and
pop
ja
hlt
jbe
push
aas
cwtl
dec
mov
pop
int
outsb
cmp
mov
mov
dec
push
xchg
repnz
adc
fsts
pop
jp
nop
pop
rcll
or
add
cld
jo
ret
jne
aad
and
mov
test
add
stos
loopne
mov
pop
xor
xor
add
cmp
dec
imul
pop
scas
insl
push
adc
push
fs
lahf
sub
xchg
dec
jbe
cmp
jmp
add
push
xchg
iret
gs
aam
dec
push
cmp
jp
gs
sbb
mov
data16
xchg
pop
xor
mov
push
addr16
xchg
push
cmpsl
roll
cld
cmp
stos
pop
js
sub
mov
mov
aad
orl
jb
clc
xor
inc
adcl
mov
jl
cmp
negl
mov
xchg
dec
je
pop
sahf
jmp
xor
out
xchg
lahf
pop
out
lock
lahf
repnz
fwait
cmp
popf
push
test
lods
jbe
pusha
out
out
jo
xor
sbb
inc
loop
push
sbb
mov
push
xor
adcb
and
pop
cmc
sub
cs
fxch
ds
mov
loop
mov
enter
cmpsb
sub
and
sub
fcmovnu
and
cwtl
out
adc
dec
aad
pop
ficoms
mov
mov
movsb
or
push
mov
add
mov
mov
push
call
sahf
push
pop
popf
or
idivb
ss
inc
cld
mov
call
cmpsb
jg
mov
pop
jo
imul
ds
jne
aaa
xor
mov
and
pop
xor
mov
sbb
sbb
push
or
mov
lds
jp
pop
xchg
lcall
sbb
pop
pop
sub
popa
popa
clc
or
aad
mov
lret
data16
push
jne
mov
jo
movsb
movsb
xchg
sbb
mov
call
push
pop
enter
jecxz
xlat
jnp
xchg
insb
pop
mov
fucomp
sarb
icebp
fs
sbb
jb
je
pop
bound
mov
int3
iret
subl
sbb
es
pop
movsl
and
push
iret
xchg
call
insl
mov
sarb
ds
inc
rclb
pop
imul
jo
sbbb
sbb
or
push
filds
test
bound
aaa
lcall
rorb
xchg
loop
pop
xchg
nop
lahf
imul
lret
shlb
test
mov
mov
into
cmpsl
insb
push
mov
ret
jg
int
mov
mov
mov
push
in
xchg
hlt
je
stc
shl
mov
data16
push
pop
sbb
mov
test
xchg
pop
mov
fsubrs
fimuls
pop
dec
xchg
xchg
push
loop
rcrb
cmp
pop
sub
in
lea
push
push
sub
mov
ss
sti
repz
sbb
mov
int3
shl
mov
sub
gs
test
rep
and
cld
cmp
push
lea
outsb
jle
xchg
xchg
test
mov
in
fidivl
xchg
jae
xor
push
or
fs
mov
xchg
and
popa
sbb
cmp
aad
mov
push
fcompl
adc
pop
mov
adc
clc
negl
test
xchg
dec
ja
mov
mov
imulb
test
dec
pop
push
jp
dec
jbe
xor
jns
rclb
push
lahf
jl
jge
mov
sub
stos
sub
or
mov
dec
out
pop
cmp
mov
bound
aam
cmp
xchg
cmpsb
mov
fcmovnb
mov
sub
pop
imul
hlt
cmc
push
xchg
movsl
das
adc
lcall
sub
out
sbb
das
xchg
loope
clc
mov
vfmsub132sd
out
xchg
jle
jl
add
shll
inc
ficomps
lret
icebp
xor
push
dec
add
aaa
imul
js
jl
mov
xchg
out
sbb
popf
movsb
add
adc
mov
add
loop
bound
test
push
xchg
bound
pop
xchg
xor
in
cmpsb
test
movl
jno
jle
pop
rorb
xchg
xor
sub
pop
jge
icebp
push
scas
xchg
sub
scas
pop
nop
cld
add
or
and
jmp
scas
or
sahf
pop
popf
scas
push
lcall
xor
mov
sahf
mov
jb
mov
dec
push
iret
dec
ss
xchg
outsl
mov
ljmp
push
call
mov
xchg
xor
loopne
or
adc
int3
iret
fdiv
and
rcrb
aad
test
xchg
xor
inc
sub
jnp
pop
pop
jp
push
iret
cwtl
cbtw
cmp
mov
jg
pop
mov
mov
mov
dec
js
arpl
push
lahf
pusha
or
aad
stos
clc
insb
add
sub
push
sbb
pop
ret
bound
xor
cmc
subl
pop
dec
out
out
dec
js
out
out
out
movd
repz
cmp
inc
push
xor
dec
or
dec
out
dec
adc
mov
sub
loope
cmpsl
leave
cltd
dec
ljmp
mov
or
shrl
lods
dec
pop
pop
sub
scas
fstpl
dec
push
fiaddl
xchg
jp
mov
pushf
pusha
faddp
aam
daa
pop
jno
je
nop
in
mov
ds
dec
jo
es
cli
or
cmp
pop
xchg
jecxz
fnstenv
clc
nop
pushf
xor
out
push
add
sbb
mov
fs
push
adc
lret
adc
dec
sahf
bswap
xor
inc
inc
rcr
shrl
mov
popa
sbb
mov
mov
popa
leave
mov
jb
ret
inc
mov
gs
bound
sub
in
cmpl
mov
ret
movsb
mov
scas
cmp
mov
jecxz
dec
lds
push
push
and
jns
inc
adc
cli
imul
stos
jns
mov
or
outsb
sbb
repz
in
and
rorb
cmp
push
or
data16
lahf
xchg
fcompl
cmp
push
mov
in
jnp
xlat
es
into
sarb
outsb
jb
adc
sub
adc
fs
add
cmp
mov
sahf
rol
pop
xor
mov
rol
adc
mov
push
xchg
adc
sub
div
imul
pop
add
lods
push
ljmp
sbb
mov
adc
mov
fdivrl
rcll
dec
and
inc
fisttpll
sahf
cmpsl
jae
sub
addr16
in
jo
icebp
xor
sarb
inc
les
pop
mov
imul
aam
or
add
in
jge
add
pusha
test
sbb
negl
add
mov
inc
mov
sbb
dec
in
std
mov
in
or
lahf
insb
mov
push
ljmp
sbb
mov
dec
mov
repz
xchg
out
int3
loop
xchg
int3
andl
mov
pop
out
dec
bound
mov
mov
lods
jecxz
cmpsb
arpl
loop
outsl
adcb
mov
nop
push
or
stc
lock
enter
dec
mov
push
jmp
loopne
cmp
mov
call
mov
lea
outsl
shrb
cwtl
cmp
jecxz
adc
outsb
rolb
lcall
add
pop
and
sbb
or
rorl
and
insb
addr16
subl
mov
adc
xchg
mov
addr16
subb
lret
pop
cltd
dec
and
add
fistps
cwtl
xchg
pop
out
clc
les
adc
movsl
or
cli
into
cltd
addr16
jae
pop
repz
xor
cmpsb
sti
dec
leave
push
mov
mov
push
xchg
lea
xchg
sti
mov
mov
lret
mov
sbb
jb
rcr
test
gs
mov
cmp
cmp
xlat
adc
and
jno
mov
mov
xor
in
or
pusha
xchg
in
mov
stos
mov
push
lock
xor
xchg
mov
dec
hlt
mov
test
and
mov
push
and
lret
jo
arpl
in
cltd
or
cmpsl
fs
cmpsb
rcrl
fimuls
test
pusha
fs
sub
xchg
cmp
fcoml
or
jecxz
movsl
adc
push
xchg
pop
add
orl
push
pop
jnp
push
rorb
ja
mov
cmp
test
push
ss
loopne
pmaxsw
sub
jmp
jns
pop
daa
dec
imul
dec
pop
lods
cltd
nop
clc
lock
mov
mov
mov
mov
movsl
pop
or
scas
outsb
xchg
std
adc
xor
out
shlb
dec
add
movsl
stos
xchg
sub
fisttps
jae
pop
push
icebp
mov
iret
sbb
aam
lret
mov
out
mov
orb
sub
adc
fwait
pop
mov
xchg
and
std
xor
jg
sbb
inc
cmpsb
popa
pop
leave
fadd
add
sbb
lahf
lods
and
fdivl
and
mov
ja
cmpsl
jne
xchg
in
aad
fists
jmp
andb
cmp
adc
adc
pushl
imul
pop
mov
cmp
addb
in
mov
push
sahf
mov
mov
faddl
js
mov
mov
pop
pusha
daa
fidivrl
sbb
lahf
cmp
add
fldcw
stos
jbe
stos
int
xor
popf
repz
cs
sahf
insb
popa
xchg
fildl
dec
cmc
push
shl
pop
in
les
inc
ret
stos
nop
push
ficompl
movsl
push
xchg
pop
insl
addl
xor
dec
fildll
cltd
lds
add
stos
imull
sbb
jns
add
test
dec
mov
push
fcmovnbe
sub
jmp
cmp
cltd
cld
mov
sub
sarb
inc
push
xor
xor
xchg
in
pop
in
ror
jo,pt
or
or
adc
dec
dec
repnz
xchg
test
cmp
shr
inc
push
add
aaa
icebp
nop
mov
sub
or
mov
jle
sarb
push
add
int
lods
imul
sbbl
pushf
inc
gs
xor
xchg
xchg
out
mov
mov
xchg
ficoml
mov
scas
and
bound
daa
lods
mov
scas
xor
iret
pop
cli
cld
push
imul
cmp
mov
inc
lret
leave
pop
jbe
cmpsb
pop
aad
push
loope
push
mov
lcall
mov
adc
mov
stc
mov
in
arpl
adc
stos
les
pop
jp
add
push
jbe
add
mov
jo
cmp
add
mov
loope
mov
test
mov
pop
mov
pop
push
idiv
mov
push
ljmp
repz
pop
or
fdiv
pop
pusha
nop
shrl
cwtl
pop
sti
sahf
adc
repnz
adc
test
fwait
xlat
ds
mov
cs
jg
loop
mov
insl
test
out
mov
jnp
test
jnp
cmp
ret
cmp
jo
xchg
sti
adc
cmp
sub
cmp
pushf
lds
in
rcrb
pop
fmuls
das
dec
mov
dec
push
or
das
test
out
push
cmp
out
mov
test
addr16
xchg
sub
or
mov
outsl
sbb
in
adc
sub
pusha
mov
pushw
out
adc
clc
jp
ficoml
rcrl
mov
loopne
and
or
fimull
nop
insl
lds
dec
sbb
or
adcl
pusha
adc
adc
xor
jge
jl
leave
and
setno
dec
push
gs
lret
shll
or
dec
pushf
adc
stc
cmp
jb
jb
fiaddl
or
fbstp
xor
or
arpl
jecxz
xchg
mov
lock
icebp
out
cmp
fldcw
xor
nop
int
jno
faddl
adc
insb
aam
movsb
jg
test
sbbl
adc
fildll
mov
jge
and
cmpsl
sarb
cmpsb
push
lea
subb
sub
cmc
inc
xor
sbb
fwait
cltd
pushf
jo
xchg
and
mov
inc
jp
fwait
stos
rorl
dec
xor
push
popa
popf
lcall
cltd
lock
or
vmread
xlat
push
push
dec
mov
sub
sarl
xchg
out
push
pop
std
insl
scas
pop
push
dec
out
jecxz
loopne
adc
mov
decl
inc
out
mov
sub
bound
jmp
push
ret
push
test
cmp
inc
mov
in
in
popa
jb
xchg
add
jbe
sbb
repz
add
xchg
dec
xchg
and
sub
cmpsb
aas
fs
mov
mov
jl
sub
addr16
popf
imul
xchg
pop
ret
pop
cmp
repz
xchg
fwait
pop
adc
cs
add
les
xchg
jne
push
inc
xchg
or
fistl
adcb
pop
xchg
sbb
aaa
scas
pop
pop
mov
mov
jbe
push
push
test
push
dec
cmpsl
dec
stc
xchg
lret
xchg
xchg
add
cs
sub
cmp
mov
loopne
notl
mov
sti
out
and
int3
cld
cld
xor
je
inc
scas
jecxz
add
icebp
rcll
movsb
xchg
mov
std
sub
dec
xor
mov
imul
mov
iret
leave
popa
fldt
lock
adc
jnp
rcr
add
pushf
push
sub
imul
mov
push
jae
xor
xchg
pop
repz
cmp
mov
inc
popf
fs
jmp
inc
push
and
pop
fbstp
jmp
cmp
out
lcall
shlb
rclb
or
pop
movq
adc
jp
cwtl
enter
cmp
test
jns
add
lcall
or
jae
jnp
dec
stos
push
add
nop
mov
scas
leave
sbb
jne
cwtl
push
stos
push
xor
cld
mov
jp
pop
or
iret
mov
push
mov
fnsave
lcall
scas
fcmovnu
lcall
add
sbb
aam
cmp
frstor
dec
imul
jo
sti
push
jmp
xchg
lock
add
inc
mov
pusha
aam
lret
or
push
xchg
xchg
sbb
loope
inc
in
pop
imul
stos
dec
jg
or
aam
fnstenv
adc
jb
or
mov
dec
je
add
add
sbb
popl
and
adc
aam
arpl
data16
lret
nop
pusha
cmpsb
mov
xchg
out
lcall
xor
jne
or
je
call
xchg
xchg
pop
addl
cmc
inc
daa
sub
leave
xchg
addb
cs
insl
loop
sub
xor
bound
inc
test
ja
fidivl
push
cwtl
out
rorb
shrb
mov
flds
loope
jno
sub
inc
lods
mov
pop
in
cmp
push
loop
loope
dec
xchg
xor
pop
call
xchg
mov
hlt
xor
xchg
dec
sub
lcall
pusha
mov
sub
sbbl
repnz
test
add
push
sub
fmull
in
dec
pop
out
stos
ret
dec
ret
jmp
inc
push
clc
mov
hlt
add
xchg
cmp
sub
sub
lret
fwait
test
addl
gs
cmp
cltd
cmp
fbstp
push
and
and
sub
jbe
cmp
sbb
test
pop
sarb
inc
into
or
sbb
xorl
cmp
mov
gs
insl
cmp
adc
cld
mov
test
cmpsb
xchg
aaa
dec
jns
push
decl
mov
in
movl
sti
data16
dec
cld
cld
or
inc
add
ss
dec
mov
dec
mov
cwtl
or
popa
dec
cmc
lret
jbe
sti
pushl
and
shll
pop
push
fdivrs
cld
mov
rol
xor
push
pop
pop
cs
popf
in
aaa
imul
mov
lods
jo
dec
mov
fldcw
out
mov
out
push
inc
mov
aad
or
fimuls
jno
jnp
fistl
aad
jno
lret
push
es
repz
shll
popf
cltd
jns
cmc
mov
or
push
add
cmp
int
pop
push
pop
and
or
pop
dec
mov
cli
lods
and
lds
imull
call
test
popl
sbb
add
push
xchg
add
and
daa
fsubr
fsub
jmp
sbbb
jp
jno
out
leave
mov
ja
inc
and
stos
xchg
add
mov
and
or
mov
xchg
mov
xor
imul
mov
add
push
in
loop
mov
mov
fs
iret
mov
fsts
filds
pusha
mov
sub
jmp
adcl
add
pop
pop
js
seta
cltd
cs
push
pop
jbe
jge
mov
and
loopne
repnz
mov
dec
push
fdivr
mov
push
idivl
and
fbld
mov
add
scas
jno
outsl
sub
sub
out
xor
xchg
out
jmp
shlb
adc
push
aad
or
mov
hlt
flds
imul
jg
stos
iret
stos
cmp
lods
adc
push
aas
clc
and
stos
fmul
sarl
cmp
inc
test
push
cmpb
jb
leave
and
push
pushf
dec
mov
rol
or
pusha
frstor
jle
scas
cwtl
mov
lods
sub
lahf
repz
loope
mov
rolb
mov
and
std
je
cmp
jmp
pop
inc
lcall
xor
aam
push
add
mov
inc
dec
lahf
enter
push
sbb
jp
cli
fwait
fs
aam
je
mov
pusha
sti
in
das
int
outsl
jne
add
sbb
outsl
daa
jl
lea
scas
push
xchg
push
inc
pusha
int
and
mov
pop
and
or
cmp
call
mov
mov
das
pop
push
add
jo
xchg
xchg
mov
cmpl
pusha
and
push
rclb
imul
mov
hlt
jno
je
mov
cmp
insw
xchg
jnp
and
xor
pop
push
mov
clc
fstpt
lahf
mov
push
xchg
pop
pop
mov
jae
pop
cltd
insb
push
dec
lcall
hlt
outsl
push
dec
outsl
xor
dec
pushf
or
push
mov
test
mov
imul
insb
adc
dec
pop
test
push
push
adc
aad
jle
push
sbb
dec
sbb
add
cmpsl
rcr
mov
dec
mov
jne
arpl
mov
movsb
xchg
sub
sbb
setle
mov
inc
jne
in
dec
addl
sub
pop
push
sbb
aaa
mov
push
and
jbe
adc
cmp
imul
cmp
pop
orb
pusha
das
and
out
pop
xor
in
fwait
imul
mov
repz
push
mov
cmp
icebp
cmp
sbb
test
push
inc
inc
dec
sbbl
push
add
aam
lahf
or
mov
sbb
dec
adc
lods
mov
sbb
mov
cmp
lcall
psrlq
fiadds
cmp
mov
outsl
adc
shr
push
pop
outsl
mov
and
test
cmp
mov
cmp
mov
xor
cmc
add
push
js
sub
mov
gs
cmp
ret
pop
dec
in
xor
pop
lret
stos
je
add
data16
outsl
xchg
xor
in
out
lds
pop
rcr
sbb
movsl
push
inc
xchg
into
add
and
popf
out
or
dec
lret
sbb
xor
pop
in
lock
inc
shll
jmp
test
pop
cs
push
ss
mov
add
imul
aad
sbb
pop
push
aam
dec
idiv
lods
add
dec
add
push
add
push
daa
xchg
xchg
jb
pusha
iret
pusha
pop
pop
add
xchg
mov
repnz
clc
nop
outsl
dec
jo
mov
frstor
clc
aaa
xchg
push
cmp
mov
push
insb
xor
jnp
xor
into
lods
or
mov
mov
mov
sbb
xchg
jb
mov
fld
insl
shll
int3
push
pop
jo
mov
repnz
sbb
dec
test
xchg
and
cmp
push
aas
insl
subb
dec
test
adc
and
nop
dec
cmpsb
jle
dec
add
push
das
les
mov
popa
sub
push
push
int3
xchg
in
aas
pop
js
cmp
mov
data16
sarl
movsl
adc
lret
stc
inc
ds
js
mov
addr16
addr16
sbb
xchg
xor
stc
lods
addr16
in
or
ret
popf
scas
mov
mov
jbe
test
dec
ret
in
fimull
outsl
xchg
mov
pop
flds
test
mov
cmp
sub
jnp
add
loope
aam
sub
into
daa
xchg
mov
xchg
mov
or
jecxz
aad
test
or
jbe
xchg
int3
adc
sbb
pop
xor
stos
out
mov
dec
mov
inc
ja
mov
push
add
loope
or
nop
pushf
xor
test
push
data16
jne
pop
pop
idivl
sub
push
xor
pusha
inc
out
lods
add
mov
dec
inc
das
stc
sub
xor
out
adc
cld
std
mov
repnz
add
dec
mov
xchg
nop
sbb
and
mov
and
inc
push
mov
cmp
mov
addr16
pop
adc
in
lods
or
or
cld
test
xchg
xor
das
mov
outsl
push
jp
dec
in
adc
outsb
jns
enter
loop
push
mov
popf
xchg
and
sbb
inc
sub
arpl
pop
and
das
xor
mov
inc
mov
fwait
pushf
push
sub
xchg
dec
cmp
mov
test
jne
shll
js
mov
int3
mov
loopne
ljmp
mov
inc
mov
adc
int
and
icebp
ss
hlt
push
mov
out
push
cmp
mov
mov
push
in
fstl
dec
fsubr
mov
test
mov
dec
xchg
lods
mov
inc
cmp
cmp
out
iret
push
clc
nop
scas
imul
lods
or
test
mov
add
cs
add
sbb
bound
lcall
jbe
repnz
mov
das
mov
xlat
pushf
mov
xchg
daa
popf
xchg
sbb
mov
lock
stos
repnz
add
mov
daa
sbbb
jg
cmp
mov
mov
ja
jmp
decb
es
mov
cs
mov
jo
lods
sbb
mov
les
jmp
aad
inc
xchg
pop
cmp
fcompl
repnz
cmpb
fdivr
lcall
imul
mov
int
lods
sbb
cmp
ljmp
inc
stos
mov
fistpll
clc
loopne
dec
mov
mov
daa
or
ret
shlb
ljmp
push
and
popf
loopne
push
out
cmpsl
dec
aas
test
ss
aad
pop
sub
movsb
push
push
mov
dec
in
inc
lods
xor
jns
inc
ljmp
nop
adc
lret
jns
push
fstpt
jl
dec
sbb
sbb
mov
jle
xchg
lcall
and
push
int3
out
into
rclb
fcomi
rcrl
jmp
adc
and
mov
pop
push
fdivrl
in
sbb
sub
mov
mov
pop
push
jo
cli
aaa
add
and
gs
rcll
adc
ret
xor
rorb
push
fstl
mov
test
lahf
rcll
jne
inc
test
mov
inc
adc
stc
loop
js
xor
movsl
loope
fcompl
addr16
stos
rolb
pop
imul
jg
jae
insb
or
ss
fdivrs
jl
mov
mov
sbb
pop
lret
ljmp
jp
lret
add
icebp
xchg
adc
cmp
or
sbb
jbe
jae
pop
and
lret
shll
push
cmp
jns
xchg
cmpl
jb
jp
jno
jg
push
jne
dec
mov
jne
or
mov
or
pop
jne
mov
sub
shll
ds
mov
aad
or
adc
cltd
mov
xchg
xchg
or
outsl
lds
popf
push
xchg
mov
and
fstl
shll
lods
or
and
xor
or
jl
jl
dec
ljmp
pop
xchg
mov
pop
lds
movsb
sbb
xchg
push
bswap
mov
stos
icebp
dec
mov
lret
cmp
push
mov
mov
mov
adc
rclb
js
sub
aam
sbb
andnps
sub
je
mov
add
xchg
and
orl
mov
gs
incl
jge
adc
push
sub
test
pop
xor
mov
outsw
mov
jbe
in
adc
and
dec
hlt
jle
divl
nop
xchg
shlb
cmp
mov
cmp
lods
xor
jmp
rcrb
in
movsl
jle
mov
cmpsb
pop
and
enter
mov
pop
pop
daa
rclb
mov
cli
xchg
mov
loop
add
jle
js
xor
mov
xor
test
cmp
shlb
mov
adc
add
fiadds
ficompl
mov
ds
dec
xchg
pop
dec
cmpsb
jbe
lcall
cli
lods
adc
push
push
pop
jnp
pop
mov
daa
cli
pop
rclb
jbe
out
push
stos
in
mov
xchg
push
aas
push
icebp
in
mov
mov
dec
sbb
push
outsb
cwtl
pushl
leave
shll
sti
and
xor
fmulp
sub
dec
bound
mov
push
xchg
mov
push
dec
and
mov
fcmove
mov
mov
aad
adc
xlat
shr
cmp
fstl
jle
stos
add
aam
dec
mov
out
xor
je
cmp
lcall
in
sub
movaps
sbb
inc
jp
mov
xor
jno
fstl
jmp
popa
outsb
push
fdiv
scas
jb
pop
stos
loopne
icebp
sub
loop
inc
or
cltd
lahf
imul
jo
push
jnp
dec
test
push
xor
in
fbstp
dec
dec
lcall
sarb
cmp
push
das
cmp
dec
lds
pusha
push
test
test
push
sub
mov
pop
lea
lods
test
mov
jno
int
adcb
pop
mov
lods
dec
mov
mov
mov
sbb
inc
mull
nop
pop
dec
sbb
add
xor
pop
xchg
and
icebp
out
inc
adc
or
mulb
push
leave
ficoms
lods
and
xor
xlat
mov
iret
mov
mov
inc
mov
xor
xchg
out
xor
mov
push
ret
lahf
outsl
out
mov
rolb
sub
ficomps
adc
adc
xor
icebp
jl
dec
js
pushw
and
add
ja
fst
insb
je
xchg
lcall
push
adc
push
imull
xor
leave
mov
sbb
ljmp
cmp
inc
popf
jo
mov
jecxz
sub
test
leave
mov
repnz
cmp
push
pusha
cmc
data16
push
outsb
rclb
lock
or
xor
mov
call
dec
xchg
fcmovb
jge
mov
sbb
and
iret
loop
dec
mov
popa
sbb
lret
ja
aas
insb
mov
adc
sarl
add
shl
push
pop
icebp
mov
push
fiaddl
push
add
fsts
ds
fisubrs
sahf
xchg
cmpsb
mov
dec
push
cmp
scas
mov
decl
out
push
es
push
dec
mov
sbb
add
ror
cmp
fbstp
mov
int
mov
jns
leave
xor
jnp
jnp
mov
sbb
pop
jno
sub
jecxz
pop
out
dec
xchg
pop
push
imul
sub
cltd
rcrb
dec
adc
ljmp
aad
stos
adc
mov
xchg
jmp
push
mov
cmc
lret
and
test
hlt
xor
leave
mov
dec
int
movsb
mov
pop
cwtl
mov
dec
hlt
adc
and
add
fildll
inc
or
sbb
dec
push
pushf
orb
adc
cld
sbbl
popf
inc
inc
cmpsb
sbb
out
mov
adc
add
repnz
je
sub
std
pop
push
xor
jl
mov
aaa
adc
fcomip
sub
xor
out
xor
pop
shrb
jge
into
add
fsts
leave
ja
cmpb
cmp
xor
sbb
lock
pop
dec
mov
pop
in
jne
movd
sbb
lock
cmpsl
daa
pop
mov
sarl
hlt
aam
cmpsl
test
xor
popl
xor
sbb
ljmp
inc
push
aaa
fwait
pop
loope
pop
jns
shl
data16
mov
roll
pop
scas
imul
mov
imul
sub
loopne
sbb
call
mov
insb
or
repnz
aam
sub
rcr
addr16
pop
iret
dec
or
sub
lds
mov
xorb
call
adc
dec
test
mov
xchg
fldenv
xor
pop
cmp
xchg
lcall
adc
or
mov
inc
and
enter
shll
pop
inc
test
jle
xor
dec
sbb
dec
mov
sbb
mov
test
popf
cli
push
stc
icebp
or
aad
dec
nop
adc
pop
loopne
int
cs
into
scas
sbb
ljmp
adc
lret
cmp
les
mov
add
inc
inc
int3
adc
xchg
dec
sbb
nop
cmp
fistpl
cli
mov
dec
xor
lds
fisubs
add
lret
into
enter
inc
cwtl
cli
scas
mov
mov
sub
lock
aad
stc
das
rclb
ds
xor
loope
iret
aaa
xor
nop
sbb
lods
imul
jbe
test
cmpsl
mov
repnz
rcrl
mov
stos
cmp
cld
rcll
clc
out
dec
rclb
inc
daa
testb
popa
xor
iret
inc
stos
cli
jecxz
icebp
int3
and
leave
shlb
jns
and
in
lods
push
imul
test
test
mov
jg
scas
bound
mov
and
aas
fsubrs
ret
mov
leave
push
mov
add
into
jmp
das
xor
rolb
enter
xor
sbb
scas
xchg
mov
sub
les
subb
testl
lods
sbb
and
out
test
xchg
mov
mov
in
aaa
mov
mov
in
cmpsl
jae
and
lock
adc
pop
mov
sahf
decl
mov
lods
out
xchg
mov
lods
mov
lods
sub
jmp
ss
into
push
mov
adc
pop
cwtl
xchg
je
mov
mov
xor
ret
je
mov
add
inc
inc
sbb
mov
push
xor
aas
insb
mov
call
mov
xchg
mov
in
lahf
jle
es
xor
dec
in
or
or
in
scas
test
ror
cmp
dec
xchg
and
push
jae
cmp
mov
and
mov
cs
cmp
movl
push
pop
xor
mov
stc
xor
imul
or
push
sub
nop
and
add
cmp
pop
dec
mov
dec
adc
push
pop
jle
xor
jecxz
scas
or
dec
test
mov
mov
addb
sbb
fimull
inc
rolb
sub
push
push
lock
dec
push
rolb
push
or
imul
lahf
cmpsl
sarl
addb
ja
fwait
das
pop
subb
in
pop
xor
and
imulb
icebp
pop
lds
rcrb
cld
cmpsl
fcompl
pop
jbe
xor
out
sub
jp
imulb
bound
sub
mov
adc
sbb
pop
fnstsw
movsl
push
vmread
mov
mov
cmp
pop
jl
into
push
or
data16
mov
rcr
and
lods
pop
in
and
loope
dec
bound
add
movsb
outsb
xor
dec
sbb
inc
scas
push
lret
fidivrs
in
and
jne
mov
dec
mov
shr
lods
outsl
cltd
aam
mov
xor
pop
aad
mov
and
out
mov
mov
shrb
mov
jno
and
outsb
mov
test
jg
and
xor
sbb
sub
pushf
pushf
mulb
mov
add
jno
push
cltd
ds
test
loop
sub
les
add
imul
fabs
push
lods
xor
jno
inc
sbb
mov
jnp
xchg
out
stc
sub
int3
push
sub
dec
mov
test
test
jle
lods
fidivrs
jmp
cmp
pop
jb
fidivl
ret
mov
movsb
add
cli
and
xor
cmp
pusha
jnp
into
test
loop
push
aad
mov
mov
jg
and
jmp
loop
mov
shll
ds
lret
pop
aas
inc
bound
jnp
leave
lcall
xchg
sbb
mov
mov
jcxz
popa
ror
iret
xchg
jnp
sti
out
cld
sahf
add
dec
in
mov
pop
pop
movhps
arpl
lahf
pop
xor
sbb
push
add
imul
adc
dec
sub
push
or
lcall
add
scas
aaa
aaa
popf
inc
insb
adc
aam
xchg
push
lock
ret
cmp
mov
mov
sbb
mov
das
popa
push
shlb
lds
cwtl
testb
prefetch
mov
mov
mov
xlat
ret
mov
jp
mov
lods
fadds
loop
mov
xchg
sbb
daa
dec
cmp
and
push
sbb
push
sub
lods
mov
push
xlat
js
ja
aas
adc
fistps
jle
sbb
or
xor
adc
sub
cli
and
out
push
pop
lock
adc
cmp
pop
cmc
or
mov
fld
sbbl
outsb
in
push
pop
lods
ficoms
dec
ret
dec
dec
insl
imul
xchg
dec
cmpsl
les
dec
inc
ljmp
mov
adc
mov
ja
arpl
sbb
xor
dec
pop
je
shll
shlb
fwait
mov
inc
nop
jmp
xor
stos
shl
mov
imul
adc
test
sub
enter
push
sub
stc
pop
lret
shll
fisubs
hlt
js
xchg
rorl
adc
call
mov
ds
mov
test
bound
mov
xchg
cmc
ljmp
loope
jo
and
cmp
aas
pop
mov
push
jge
shlb
fnstsw
jecxz
sbb
cwtl
fistpl
test
or
fxch
xor
int
arpl
add
data16
or
adc
insb
xchg
aad
cmp
loope
fdivs
adc
push
das
es
hlt
repnz
pop
mul
imul
xchg
inc
call
test
es
add
mov
mov
push
push
mov
cs
leave
dec
pushf
inc
inc
and
int3
sbb
jb
xchg
movsl
dec
pusha
xor
adc
rcl
dec
dec
gs
jl
ss
xor
gs
jbe
fmuls
hlt
sti
mov
mov
and
jge
sahf
push
sub
jb
es
adc
lcall
in
and
cmp
or
mov
xorl
cmpsl
sbb
outsl
mov
shrl
jmp
cmpb
jg
jno
scas
mov
in
dec
push
add
push
imul
cmp
sti
mov
xchg
adc
mov
push
test
pop
add
mov
jecxz
jae
push
nop
inc
fisubrs
imul
push
push
insb
fdivrs
pop
divl
xlat
out
push
push
pusha
xchg
dec
psllq
lcall
out
movsb
dec
test
pop
xchg
pop
add
pusha
push
les
pop
adc
gs
cmp
lock
sub
pop
push
jns
xchg
imul
clc
and
push
mov
or
push
inc
push
test
mov
fwait
push
insb
xchg
scas
leave
popa
aas
push
mov
inc
stos
mov
sub
add
pop
sub
nop
sbb
fs
ds
xchg
hlt
call
push
jns
gs
cwtl
dec
pminub
jp
movsl
lahf
insl
sub
mov
ss
mov
adc
or
sarb
fs
imul
or
mov
sahf
insb
bound
sbb
and
pop
ret
nop
fwait
cmp
rcrb
cwtl
adc
xor
or
and
sub
xchg
push
movsb
popa
mov
xchg
shr
or
dec
jecxz
jns
shl
jmp
test
outsb
mov
iret
lds
dec
cmp
xor
adc
scas
insl
xor
sbb
adc
ret
add
mov
pop
test
cltd
or
sbb
sbb
int3
dec
push
fwait
mov
sbb
call
sub
cmp
sub
shll
test
cmp
mov
sbb
icebp
cmp
jl
mov
mov
cmp
cmc
loope
pop
push
sarb
push
dec
jmp
test
out
mov
dec
or
sbb
xor
dec
xchg
dec
jo
test
bound
stos
dec
sbb
mov
lretw
bound
ret
cs
add
push
pop
xchg
leave
dec
int3
dec
lcall
bound
lea
push
pop
sbb
dec
pop
mov
leave
gs
push
mov
dec
addr16
push
sub
fldt
int3
cld
bound
stos
push
add
cltd
dec
dec
pop
mov
and
test
sub
mov
inc
mov
push
jl
aam
sbb
mov
test
and
cli
xor
int
mov
jle
xor
mov
int
nop
stos
jb
jnp
in
push
push
sub
mov
add
insb
or
push
bound
dec
imul
mov
xchg
call
jns
js
mov
cmp
pop
fidivrs
xor
xchg
popf
cmp
pop
popa
jae
cltd
imul
xchg
inc
adc
mov
fs
pop
orl
and
outsb
or
je
pop
into
dec
mov
sub
push
xchg
int
cmp
xor
jns
mov
jecxz
incl
movsb
jae
cmp
push
subb
inc
or
lahf
bound
les
jo
xor
pop
repz
mov
in
rcrl
lret
jno
mul
data16
sub
insl
cs
mov
nop
pushf
mov
inc
dec
sub
mov
filds
mov
or
fs
mov
mov
bound
gs
push
imul
stc
mov
jns
fcmovb
aam
push
in
movsb
scas
lret
pop
add
in
and
popf
in
in
jae
or
jbe
sbb
aas
lds
jp
popf
subl
repz
pop
dec
xchg
jnp
gs
stc
sbb
shrb
fmul
loope
jbe
sarl
push
xor
xchg
inc
fisttpll
sub
pop
add
aam
and
xchg
insb
inc
in
cmpsl
add
lahf
cmpsl
imul
push
in
insb
ja
adc
push
mov
or
fisttps
outsl
or
out
sub
mov
mov
mov
jecxz
call
test
xor
xchg
mov
and
clc
sbb
sbb
pop
adc
dec
adc
xchg
hlt
adc
addb
add
mov
mov
dec
jp
xor
in
out
pushf
fs
sub
jle
mov
dec
cmp
push
in
pop
jo
sub
cmp
push
lcall
dec
jecxz
adc
test
push
add
cmp
fisttpl
xchg
insl
lea
mov
ret
lock
pop
mov
gs
or
pop
or
std
mov
and
fnstcw
jnp
sbbb
aaa
jbe
mov
dec
pop
sahf
out
sbb
fimull
xor
sti
jecxz
iret
ret
adc
xlat
cmp
and
insl
push
jns
xor
fsubrs
cmp
mov
and
jmp
jecxz
aam
jnp
nop
pop
std
loopne
into
rolb
mov
or
rcll
xorb
mov
in
push
mov
jmp
sbb
fdivr
jb
into
push
push
nop
movsl
and
scas
imul
mov
pop
pusha
cmpsl
push
fwait
test
mov
push
in
xchg
sbb
loop
cs
cmp
pop
repz
out
and
add
addr16
pop
mov
mov
jp
into
repnz
cld
dec
mov
fsubl
cli
arpl
jmp
addl
into
int
push
in
pop
lret
test
xchg
jbe
xchg
test
shlb
jbe
mov
hlt
dec
push
push
push
adc
jae
jge
push
bound
pusha
or
sub
mov
es
pop
xchg
sub
mov
call
add
jl
adc
wrpkru
or
popa
push
mov
outsl
xchg
rclb
scas
mov
xor
fidivl
push
dec
push
mov
adc
jb
icebp
subl
push
or
es
int
pop
push
loope
push
add
or
xchg
sarl
les
xchg
aam
xor
jge
inc
orb
shlb
test
sahf
rorl
aad
mov
aad
mov
sub
outsb
popa
sbb
mov
mov
lret
sub
jle
nop
push
fcomi
cwtl
xchg
xor
mov
sbb
sbb
cmp
or
test
out
inc
sub
les
js
mov
imul
or
mov
and
mov
push
push
jno
rolb
ret
cs
push
mov
and
in
inc
xchg
negl
mov
enter
sbb
push
fcmovnb
mov
inc
mov
cmpsl
jae
lds
add
push
push
add
fisttps
mov
mov
push
dec
xchg
repz
mov
push
mov
mov
std
shr
roll
adc
out
xchg
xor
jbe
xchg
cmp
cs
test
sub
sub
adc
jo
fbstp
sub
push
cmpsl
out
mov
dec
daa
scas
mov
stos
pop
aam
pop
mov
jb
jmp
insb
xchg
sbb
out
lret
mov
inc
pop
jns
or
lret
pusha
mov
jae
cld
push
lret
xchg
mov
fldcw
push
setne
push
sbb
mov
jle
sub
sti
xchg
cmp
mov
or
rol
mov
jecxz
ds
push
cmpsb
mov
and
and
mov
lahf
or
iret
ret
addr16
inc
cmp
fmull
add
push
pop
jno
addr16
mov
add
filds
pop
mov
xchg
outsl
mov
dec
fcoml
xchg
js
sbb
aad
mov
mov
sub
xchg
cmc
mov
stos
in
sbb
mov
sbb
fs
popa
adc
xor
xchg
out
call
repnz
push
sbb
pop
dec
pop
add
sub
sub
dec
fdivrp
push
or
sbb
in
ds
sub
dec
pop
leave
jns
jmp
icebp
fidivrs
icebp
pop
shl
aas
dec
mov
data16
out
cli
adc
lock
fcmovbe
pop
push
jle,pn
pop
dec
test
dec
in
and
dec
inc
push
lcall
imul
xor
jo
pop
xchg
lds
imul
xorb
cli
push
xchg
orb
repz
in
adc
pop
arpl
ret
or
inc
mov
fistpl
and
sti
xchg
dec
xchg
mov
push
in
xchg
divb
xchg
ficomps
mov
add
dec
inc
lahf
sbb
daa
loopne
sub
aas
inc
dec
xor
lea
pop
inc
dec
loop
in
je
fisubrs
pushf
je
loopne
cmp
inc
or
stc
stc
ss
and
cmp
push
or
ljmp
mov
test
sub
push
mov
and
or
sub
in
lcall
fstpl
fadd
cmp
stos
bound
push
xchg
dec
aad
fsts
mov
test
inc
mov
cmp
jl
ljmp
and
int
gs
in
push
or
leave
xchg
scas
insb
fwait
pusha
jp
in
jecxz
mov
or
leave
movsl
ss
lock
fmull
push
cmp
xchg
cmp
mov
scas
loopne
or
flds
sbb
or
sbb
or
test
jecxz
xchg
js
nop
cmc
push
sbb
xlat
mov
or
cmpsl
xchg
fisttpl
mov
out
data16
andl
iret
sbb
inc
test
fbstp
in
add
mov
inc
outsl
push
cld
mov
rcll
sbb
lds
inc
lret
bnd
pop
xchg
cmc
fbstp
jmp
xchg
push
ljmp
in
stc
jle
fstl
xchg
lret
loope
jl
xchg
sbb
xor
shll
outsl
cmp
dec
pushf
out
cmpsb
psubusw
xchg
sbb
mov
lods
and
mov
jne
cwtl
adc
adc
into
data16
lcall
push
jns
das
jbe
imul
inc
call
dec
push
cwtl
and
mov
faddl
xchg
loope
mov
pop
daa
fcmove
aaa
sbb
aad
xchg
es
stc
xor
repz
pop
repz
insb
arpl
cmc
nop
lahf
test
sub
bound
xor
inc
iret
mov
ds
xchg
push
jno
dec
add
xor
push
and
jmp
jno
ds
push
mov
ret
jmp
xor
inc
negl
mov
icebp
in
clc
mov
mov
test
xchg
out
ss
lahf
mov
pop
and
and
imul
loope
std
xchg
adc
jae
cmpsb
sub
out
ja
xchg
adc
and
or
push
add
rol
fdivrp
mov
push
lock
push
adc
icebp
cltd
mov
cld
xor
in
call
ret
rorb
pushf
mov
adc
mov
xchg
pop
dec
pop
sub
mov
std
mov
jmp
hlt
bound
dec
or
mov
cs
std
mov
negb
nop
mov
pop
fwait
mov
js
stos
les
jmp
mov
lret
mov
in
cld
xlat
inc
mull
mov
insl
sub
add
in
inc
add
push
adc
sbb
pop
push
ds
dec
jle
or
mov
out
jno
loop
and
gs
pop
inc
mov
fidivrs
push
out
mov
iret
lcall
int3
add
and
push
mov
push
lcall
test
push
mov
aaa
cld
push
and
dec
test
cmp
jae
push
lds
pop
sbb
or
sbb
mov
test
inc
sub
or
std
movsb
mov
sub
leave
and
lret
xchg
inc
cs
and
and
inc
mov
cmp
frstor
xorb
pop
arpl
add
jp
aas
ja
shlb
lcall
in
adc
xor
test
mov
sbb
fwait
fwait
aas
xchg
jb
lcall
sbbl
fs
fsub
inc
or
or
orl
mov
ret
cmp
or
adc
or
xor
jle
es
xchg
cmp
push
das
pop
jns
ret
ret
mov
sbb
mov
lahf
mov
test
sbb
pop
ljmp
fisubrl
xor
cmp
sbb
lds
jb
push
js
stos
mov
aad
sbb
inc
push
dec
gs
call
aad
int3
xchg
daa
jns
aam
mov
add
sbb
idivb
fdivrp
lods
mov
jnp
mov
pop
fistpll
push
pop
xchg
out
and
dec
mov
jb
mov
push
dec
push
daa
jno
mov
gs
ret
mov
add
iret
push
testb
fsubl
aam
inc
stos
mov
fidivrs
mov
shr
mov
ficompl
or
in
sbb
sar
out
sbb
push
sub
cwtl
mov
xchg
cmp
aam
cmp
mov
mov
push
mov
cwtl
mov
jb
mov
test
pop
daa
aas
cmpsl
cltd
fwait
popa
insb
shll
xchg
pop
sbb
or
rol
cwtl
in
scas
cmp
stc
push
mov
pusha
cmp
pop
push
mov
and
addps
sub
rcl
sub
mov
push
push
mov
push
popa
scas
mov
jle
jae
out
aaa
and
pop
lea
xor
out
popa
loop
addr16
sbb
sbb
scas
xchg
int3
pop
loopne
ficomps
jmp
aad
fisttps
adc
lahf
push
scas
mov
rorl
and
mov
or
subl
xor
ja
fidivrl
out
xor
insl
jge
pop
out
push
pusha
hlt
cmp
sub
movsb
sbb
xor
stos
cmc
lods
jns
cmp
sbb
pop
es
das
cmpsl
inc
mov
movsl
imul
into
call
and
jns
rcll
push
adc
xchg
les
xor
dec
test
jmp
or
sub
mov
xor
dec
jnp
stos
xor
mov
xor
mov
sbb
jns
int3
mov
mov
pusha
sub
fisubrl
imulb
dec
jae
sbb
adc
loope
mov
cmp
sub
sub
push
mov
sub
call
pop
inc
int3
notb
int3
les
fs
push
cwtl
jl
bound
popf
push
xchg
add
fs
cld
xor
fldenv
dec
movb
inc
jl
dec
fwait
and
add
or
cmc
pop
in
sub
push
inc
movsb
xor
xchg
push
push
sbb
pop
push
jle
out
sbb
pop
fcoms
dec
push
dec
loop
into
cmp
xor
or
cmp
outsb
gs
dec
sti
cmp
int
in
out
outsl
pop
cmp
aad
movsb
sbb
test
cmc
mov
insb
out
xor
and
inc
dec
cmpb
mov
addl
ljmp
test
jb
lcall
mov
lods
lcall
adc
jg
push
add
lret
mov
jp
jmp
add
mov
test
shl
pop
out
hlt
sbb
notb
or
dec
clc
out
je
daa
jl
dec
inc
movsl
jmp
leave
or
xor
pop
pop
lret
jnp
jo
jns
call
int3
xor
leave
std
xlat
fdivr
out
aam
add
lock
mov
dec
in
xor
aaa
shll
xchg
mov
je
inc
add
mov
rclb
fmulp
in
out
mov
fildll
mov
sbb
sarb
pop
pushf
mov
aas
xchg
adc
mov
outsl
sub
mov
nop
sbb
clc
mov
out
mov
push
mov
fmuls
jge
mov
scas
or
add
add
and
test
xchg
fstl
aad
dec
shl
xchg
lcall
int
add
adc
mov
test
mov
jmp
rol
inc
cmp
fistps
lds
jl
and
xlat
xchg
in
out
jg
clc
loope
xchg
push
pop
jl
bound
aam
lret
cmp
or
jmp
xchg
sbb
dec
outsl
mov
jg
cmp
jns
jno
and
les
out
fsubs
jle
xchg
pop
ljmp
stos
xchg
xchg
dec
and
bound
stc
jmp
or
cld
lods
int3
shl
push
sub
psubusw
jcxz
test
or
dec
dec
mov
xor
jno
jle
popa
pop
cmc
add
popa
mov
adc
test
push
jnp
inc
mov
or
push
movsb
adc
push
adc
push
stos
push
ljmp
addl
out
js
out
inc
cmpsl
pusha
rcr
aas
out
push
fldt
repnz
xchg
lds
shrl
insl
in
jp
and
and
sub
cmp
jne
insb
ljmp
or
out
test
adc
fwait
rorl
inc
gs
jo
stc
mov
bound
mov
cmp
dec
mov
pop
fistpll
fwait
lret
add
clc
stos
dec
stc
and
into
dec
add
cltd
int3
insl
inc
mov
and
aam
mov
bound
gs
mov
fmull
push
jmp
push
ficoml
jns
jg
mov
lret
inc
cmp
dec
ds
xchg
pop
loop
into
je
lret
testb
shrb
gs
pop
mov
nop
push
imul
out
mov
xchg
mov
cmpsl
mov
stc
mov
dec
dec
gs
icebp
mov
cmp
sub
adc
cmp
inc
jecxz
cmpl
mov
hlt
jle
loope
insl
pushf
sub
dec
in
dec
cli
mov
xchg
xchg
adc
mov
test
das
fistpll
mov
sbb
jle
fucomip
mov
xor
lods
push
shlb
fwait
or
lret
add
adc
cmp
aam
xchg
push
and
inc
mov
and
and
pop
sub
loopne
xchg
mov
popa
mov
aas
sub
cmpl
je
push
pop
xlat
out
mov
scas
sub
pop
push
push
and
in
cwtl
add
mov
sbb
push
fwait
cmp
push
inc
cmc
inc
insb
dec
jne
sbb
push
pop
repz
dec
aam
std
adc
or
lds
je
cwtl
aam
xchg
mov
push
fistl
pusha
jb
negl
lret
cmpsl
stos
mov
addr16
or
dec
or
sbb
std
fwait
out
js
aad
jne
lock
popa
sbb
aad
sti
std
pushf
sub
stc
and
shlb
out
ljmp
das
cmp
mov
and
arpl
je
pop
arpl
xor
adc
sub
push
dec
stc
cmp
fiadds
mov
cmp
ret
pop
hlt
xor
jmp
movsb
div
adc
loope
ds
sub
fldenv
iret
andb
rorb
andb
push
loope
push
bnd
ret
leave
call
jb
push
dec
xor
pop
inc
xor
mov
jmp
jbe
call
call
mov
jg
push
es
ficoml
psubsb
mov
enter
xor
push
dec
ja
dec
add
icebp
mov
pop
dec
pop
mov
cltd
xchg
sbb
ret
clc
push
fistpl
repnz
jmp
fwait
jl
pop
hlt
test
insb
mov
scas
lods
and
adc
andb
cmpsl
test
mov
rorl
inc
fildl
fldcw
clc
or
inc
xor
cs
jnp
push
in
loope
mov
jno
dec
insl
cli
mov
jl
out
add
ret
daa
in
push
fisttpll
sbb
jo
imul
xchg
or
push
ret
lods
mov
mov
lds
xor
or
jno
scas
fstpl
xchg
inc
rolb
mov
xor
add
les
loope
shl
daa
jnp
fwait
inc
and
insl
xchg
repz
bound
inc
xchg
add
mov
sub
jne
mov
cmp
mov
cmc
andl
test
mov
je
pop
fstpt
aas
imul
popf
stos
ss
xchg
xor
imul
movsl
test
cmp
or
testb
loopne
cli
adc
and
out
push
in
stc
test
sbb
pop
push
pop
es
or
jge
insl
inc
jbe
mov
add
sub
into
sub
sbb
ret
iret
andl
cmp
pop
xorb
orb
repnz
xor
mov
iret
stos
adcb
mov
sbb
xchg
pushf
push
xor
mov
loope
xor
pop
inc
inc
sbb
xor
mov
xchg
pop
in
jle,pn
add
dec
imul
xor
add
sub
sbb
xor
arpl
repz
inc
mov
gs
cli
out
out
out
pop
andl
mov
cmp
adc
adc
arpl
sub
cwtl
sub
sbbl
idivl
xchg
pop
push
xchg
add
in
mov
xor
aam
xor
test
andb
mov
lods
pop
in
fwait
jmp
mov
popa
xchg
mov
push
lods
loopne
movl
imul
rol
pushf
jns
pusha
nop
int3
pop
pop
mov
aaa
dec
dec
mov
out
dec
sbbb
loope
fwait
rcr
and
dec
cmp
lods
jle
adc
push
jno
jmp
xchg
xchg
stos
xchg
loope
add
repz
cld
add
pop
sub
mov
xchg
test
add
jecxz
push
lods
push
dec
push
xor
rcr
sbb
nop
xor
loopne
pop
inc
jnp
mov
fists
sbb
pop
dec
push
lods
sbb
jb
std
mov
rolb
inc
adc
cmp
leave
mov
mov
or
sbb
push
scas
xor
loopne
push
push
cmp
adc
cmp
dec
loopne
ljmp
lahf
jo
shl
xor
aas
jmp
pop
dec
pusha
mov
push
cld
cmc
add
andb
fsubl
sbb
add
cltd
movl
add
aaa
sub
shlb
test
lret
jb
cmc
mov
cli
js
in
pop
mov
sahf
ficomps
shrl
cmpsb
inc
movsl
adc
loope
enter
sbb
in
lea
sahf
push
xor
inc
and
mov
cs
es
pop
addl
gs
xor
xchg
shll
mov
mov
push
xor
fmull
stc
outsb
lahf
pop
inc
pop
nop
pop
dec
outsl
inc
cmp
adc
aam
push
cmc
pop
cmp
cmpb
cld
inc
or
lcall
and
inc
pop
stos
setge
loope
icebp
sbb
add
xor
loopne
jns
ficompl
into
fidivl
out
shr
insb
xor
dec
or
movsl
inc
lds
std
repz
adc
mov
das
cmpsb
pop
mov
lahf
sbb
insb
or
repnz
fisubrs
inc
dec
add
add
sub
sarb
ret
faddp
sbb
and
in
sbb
xor
dec
lret
andl
movsb
jmp
push
lods
adc
jae
push
imul
scas
mov
adc
add
pop
dec
call
imul
jnp
in
ss
or
je
push
int3
sub
imul
cld
or
shlb
cmp
mov
icebp
in
in
hlt
and
mov
mov
pop
jno
pushf
mov
push
lret
xlat
shrl
out
in
mov
and
xchg
push
test
cld
rclb
ljmp
push
lret
mov
ds
cmp
mov
xor
inc
int
jae
jne
lods
push
outsl
fs
cmp
sbb
fcoms
sub
push
push
arpl
sarl
in
inc
xor
lcall
cs
out
movsl
into
movsl
xlat
test
sahf
rolb
es
sub
dec
mov
leave
inc
sub
cmp
iret
pop
inc
int3
mov
xchg
inc
inc
sub
popa
xchg
or
mov
mov
test
mov
sbb
out
cwtl
push
jns
xchg
inc
cwtl
and
aaa
scas
stos
push
out
fxch
imull
xorps
in
fisubs
adc
mov
pop
imul
std
push
movsl
mov
or
dec
sub
stos
inc
jnp
pusha
hlt
inc
mov
cld
and
and
jp
mov
int3
cmp
sub
shl
stos
sub
mov
aas
int
inc
xchg
loopne
or
mov
jns
outsl
out
cmpsl
lods
push
sub
scas
mov
add
mov
and
movsb
adc
add
das
scas
xor
mov
jbe
out
lds
jmp
jg
daa
out
lret
inc
push
out
jecxz
xchg
jmp
push
mov
sub
cmp
mov
xor
mov
popf
add
and
int
nop
xor
shrl
or
loopne
add
rcll
inc
sub
inc
and
pop
popa
pop
dec
mov
push
xchg
inc
movl
xor
test
mov
rcll
xor
dec
adc
ljmp
insl
xor
hlt
loopne
jp
xchg
xchg
jecxz
aam
xor
ficomps
fwait
or
repnz
insb
cmp
push
ret
out
mov
ds
dec
and
adc
lahf
insl
outsb
cmp
mov
cwtl
jns
imul
cmp
mov
out
adc
movsb
fidivrl
cmp
cmp
or
leave
into
xchg
imul
dec
jp
xor
jbe
je
push
sub
adc
repnz
out
or
mov
stos
fwait
bound
or
pop
fcoms
test
jle
int3
inc
imul
sti
sub
fistpl
sbb
fcmovnu
mov
pop
mov
push
jbe
fs
sbb
loop
push
xlat
imul
inc
aaa
and
notl
mov
xor
iret
cs
push
nop
std
lods
stc
push
jae
mov
nop
movsb
imul
rolb
sub
xor
ja
and
cmp
and
mov
imul
addr16
pop
mov
fistpl
inc
aas
jl
lods
enter
add
aaa
push
sti
inc
mov
addr16
aad
testl
aaa
xchg
mov
and
ds
lcall
or
mov
push
mov
movsb
lahf
dec
int
sbb
repz
cmpsl
push
xlat
movsl
rclb
loope
dec
add
dec
loope
bnd
stc
pop
xchg
pop
sbb
mov
subl
daa
xor
loope
pop
imul
dec
outsb
sahf
jae
test
inc
clc
xchg
jbe
jb
nop
adc
push
lahf
pop
add
movl
gs
mov
sbb
xchg
xor
stos
bnd
jecxz
add
dec
andl
rcr
sbbl
ret
rcr
push
inc
fistpl
ljmp
jbe
and
into
xchg
sbb
dec
sub
sahf
out
mov
sub
and
or
ss
loop
test
insb
outsl
das
fildl
xlat
dec
sti
add
xor
mov
mov
fsubs
lods
pop
sbb
dec
lcall
xchg
cld
dec
pop
or
notl
test
sub
cmp
es
cmp
xor
fxtract
stos
mov
and
or
adc
cli
lods
repz
in
pushf
and
mov
andb
roll
scas
rcl
push
and
inc
mov
mov
imul
js
add
lock
jb
subb
or
and
xchg
mov
xchg
pop
cwtl
sub
push
data16
in
adc
xor
aam
mov
adc
mov
mov
push
pop
and
rcrb
or
sub
aaa
jbe
insl
lcall
addr16
bound
sbb
xchg
push
stc
mov
add
out
pushf
dec
aas
sub
stc
sbbl
out
stos
pushf
xchg
pop
push
insl
pop
push
pop
mov
loop
cmp
xor
test
int
push
push
je
stos
pop
sbb
adc
add
xchg
test
ffree
pop
fs
into
sub
jb
out
xor
stos
fisttpll
int3
push
gs
pop
or
hlt
sahf
xor
sub
mov
xchg
stc
or
loopne
sub
jle
push
lcall
jmp
scas
dec
cs
jmp
shl
jle
push
pusha
or
push
daa
inc
outsb
out
lret
cmpsl
pop
mov
in
clc
mov
rcll
imull
clc
mov
fisttpl
inc
stc
outsl
or
fwait
add
push
sub
out
sbb
sub
pop
jb
and
pop
and
aad
lret
stos
cli
and
cmpsb
jmp
out
cmpb
cmp
sbb
sbb
dec
mov
mov
out
xor
fdecstp
adc
shrl
rcr
sbbl
xor
imul
cld
add
out
inc
cmp
clc
fdivr
sbb
jns
clc
loop
call
or
push
inc
enter
jbe
lods
jo
ja
jmp
out
jle
or
mov
add
jg
loope
jp
int3
push
sbb
aam
daa
fmuls
fs
inc
jmp
mov
inc
xchg
fs
push
mov
subb
leave
jb
movsb
jne
rcl
pushf
dec
or
cmpsl
jg
test
fsubrs
das
mov
mov
lea
jb
xlat
int
lds
arpl
mov
dec
xchg
stos
jge
pop
stos
daa
push
arpl
rclb
cwtl
xchg
pop
and
mov
stos
dec
push
lret
out
adc
loopne
int
hlt
in
fnstcw
loope
inc
data16
lds
stos
inc
into
inc
cwtl
add
pop
add
pop
dec
xchg
xor
cld
mov
and
mov
push
fs
rcrb
or
cmp
sub
jb
outsl
iret
int3
int3
mov
xchg
xlat
stc
mov
or
shrl
mov
adc
into
jecxz
add
ret
outsl
pushf
or
jns
add
sarb
imulb
testb
imul
std
stos
fcomip
pop
dec
cmp
or
shrb
sbb
sbb
hlt
pop
add
mov
push
mov
sti
jl
inc
mov
lret
mov
add
in
out
test
shll
insb
movsl
rorl
or
js
dec
push
jecxz
out
outsb
pusha
lahf
fsubrl
js
cltd
or
sar
push
les
mov
scas
push
inc
mov
out
out
rolb
mov
das
lret
pop
cmpsl
ja
xorl
sbb
fnstsw
repz
and
mov
mov
fbstp
loopne
adc
cmp
cmc
or
or
movsl
out
xchg
jno
lret
ja
insl
jl
pop
jno
fcoms
mov
push
and
and
test
jno
jbe
cmpsb
ret
add
outsb
sub
mov
dec
jl
adc
add
pop
push
sbb
mull
or
mov
jg
and
mov
or
sub
push
outsb
fisubl
dec
jnp
into
jne
xlat
lods
inc
je
jo
cmp
mov
jne
mov
insl
into
ljmp
pop
lcall
push
rcr
test
adc
pop
dec
sub
push
mov
data16
cmc
fdivr
push
cltd
jo
pusha
mov
pop
fnstenv
xor
xchg
daa
dec
xchg
inc
js
out
popa
push
sub
adc
es
cli
sbbb
stc
loope
adc
sar
insb
sti
or
sub
push
enter
fs
test
xchg
stos
stos
mov
test
jno
push
addr16
sbb
sub
idivl
adc
out
dec
icebp
aad
and
sbb
pop
jle
mov
imul
mov
or
imul
cmp
xlat
xor
dec
xchg
push
pop
push
in
arpl
cltd
popa
mov
push
dec
not
lods
lea
push
jo
jbe
sbb
pop
in
div
mov
push
mov
shll
das
inc
lods
add
sbb
aas
push
pop
cmp
inc
mov
inc
and
inc
lret
hlt
xor
push
repnz
sbb
mov
xlat
xor
movsb
xchg
sbb
enter
mov
bound
jne
fstpl
mov
or
pop
dec
adc
ret
xor
gs
xchg
pop
out
mov
lcall
mov
jns
pusha
pop
inc
jbe
gs
movsl
xorw
and
jg
rolb
push
scas
cmc
ja
imul
dec
dec
in
lret
xchg
mov
pop
into
shrl
and
scas
jne
dec
push
adc
mov
jno
dec
es
mov
aas
in
and
fucom
loop
imul
xchg
ret
dec
cmp
xor
mov
hlt
xorl
in
sahf
incb
fistpl
or
sbb
mov
nop
mov
xor
sbb
cmp
aaa
inc
outsb
push
in
add
adcb
adcl
jbe
inc
outsb
inc
pop
mov
sub
mov
fildll
cltd
mov
fidivl
push
jg
xchg
insl
push
xor
jno
or
scas
sub
out
or
clc
test
cmpsl
ret
mov
xchg
lret
jp
add
hlt
sub
cmp
stos
out
xor
sbb
push
imul
fs
xor
nop
cltd
cli
mov
push
sarl
and
mov
push
jle
js
mov
pop
mov
repz
fdivl
out
xor
push
sti
lahf
sarb
frstor
ret
arpl
das
mull
adc
xchg
mov
pop
int3
push
in
dec
pop
test
xlat
loop
pop
ret
pop
punpckhdq
std
fs
shr
pusha
outsb
pop
jge
sub
fidivl
sti
inc
gs
dec
mov
sbb
pop
aam
pop
pop
cli
mov
lahf
sti
shl
push
rcl
push
cwtl
in
icebp
lcall
out
pop
add
jns
aad
out
pop
sub
adc
adc
mov
mov
mov
and
inc
out
pop
int3
mov
lods
jmp
xor
pusha
mov
mov
in
jmp
sub
mov
mov
das
jg
je
icebp
push
loope
outsl
add
insl
or
mov
aaa
cltd
mov
xor
mov
cli
pop
sbb
and
and
add
ja,pn
inc
shlb
add
pop
pusha
cmp
inc
dec
dec
aaa
mov
stos
sub
mov
push
jg
sbb
outsb
sub
ficoms
inc
cmp
testb
std
lret
inc
mov
inc
pusha
ret
loope
mov
imul
push
sub
lahf
mul
insl
sub
adc
cmp
mov
fdivrl
mov
loop
imul
and
insb
sub
push
in
pop
sub
inc
pushf
ds
mov
stos
movsb
cmc
mov
xlat
adc
cwtl
addr16
clc
idivl
adc
icebp
jnp
inc
stos
push
push
outsb
sbb
push
pop
jecxz
xchg
mov
clc
rcrb
push
pop
mov
xor
or
jae
lods
and
cltd
out
xor
pop
addr16
or
loopne
jp
inc
outsb
mov
push
loop
arpl
sub
movsl
lcall
cmpsb
sub
lods
inc
aad
hlt
cltd
fisttpll
dec
nop
lds
stos
push
dec
cmp
push
jecxz
loope
adc
xor
fwait
cmpsl
jp
cmpsl
cmpl
in
popf
arpl
in
addr16
mov
pop
cmp
mov
mov
sub
and
scas
inc
mov
xchg
adcl
inc
ljmp
cmp
mov
sbb
mov
pop
andl
mov
push
add
je
mov
in
loop
inc
pop
sub
mov
push
sbb
cmc
js
push
sub
dec
sub
shrl
xchg
mov
out
lret
pushf
push
call
push
and
adc
adc
call
jnp
sub
dec
jecxz
jb
gs
pop
push
inc
ja
shrb
cld
xchg
test
pop
pop
push
jo
xchg
test
jae
pop
push
mov
jmp
stos
loopne
mov
pop
jg
loop
bnd
pop
mov
add
inc
lahf
lods
mov
dec
addr16
push
outsl
repz
jne
test
lods
scas
mov
push
or
data16
in
add
lahf
xor
sbb
fstpt
jo
outsl
add
stos
adc
hlt
dec
cld
cmp
xchg
sahf
add
mov
or
xor
out
insb
jb
and
mov
mov
push
mov
mov
out
inc
dec
pop
mov
xchg
push
adc
test
sbb
insb
dec
loopne
rorb
mov
xchg
lea
dec
lock
das
std
les
mov
cmpsb
push
ficoml
test
fists
incl
and
lahf
xchg
sbb
aad
jb
xchg
aad
aaa
dec
das
ficompl
aas
cmp
xor
xor
push
sbb
imulb
lea
loopne
stos
ret
stos
leave
lret
xchg
sbb
add
call
pop
jecxz
mov
mov
jge
xlat
cld
cmp
mov
and
aad
inc
int3
shrl
cmp
inc
sbb
rcrb
push
jb
movsb
shll
nop
aaa
out
xor
ret
mov
and
jg
js
insl
lret
dec
jmp
daa
sub
mov
or
add
aam
cmp
dec
dec
inc
xchg
icebp
add
pop
push
rcll
ja
jl
ret
test
mov
addb
xchg
je
sbb
test
je
in
mov
pop
cltd
js
sahf
in
xlat
loope
push
pop
mov
movsl
adc
sub
xchg
add
out
orb
outsl
sub
shll
add
mov
shll
sub
xchg
enter
or
pop
mov
filds
push
jnp
inc
bound
lcall
in
cwtl
or
mov
lods
lcall
xlat
stc
mov
ja
sbb
dec
dec
push
push
cs
inc
xchg
std
xchg
lahf
stos
insb
stos
adc
and
dec
aad
loopne
fists
inc
das
pop
fxch
or
ds
out
xchg
dec
cltd
movzwl
jp
mov
xchg
mov
jb
int
sbb
in
jle
pop
or
push
xchg
dec
dec
loop
mov
pop
clc
fwait
mov
adcl
stos
push
add
sbb
fidivs
mov
jl
scas
mov
hlt
jmp
cmp
rcr
notl
ret
dec
mov
lds
ss
rorb
xor
scas
sbb
or
mov
adc
int3
out
xchg
jl
xchg
mov
rcr
ret
xchg
addr16
aas
rcrb
testl
inc
mov
movsl
dec
subb
mov
xchg
mov
mov
inc
imul
mov
stos
in
aaa
add
adc
loope
pop
xor
ret
popa
lahf
pop
lods
fisttpll
lret
inc
sarb
or
sub
incb
inc
mov
sbb
mov
and
loopne
out
mov
sbb
or
inc
xchg
xchg
sti
pminub
into
out
xchg
andb
inc
dec
push
mov
rorb
outsl
ss
test
xlat
test
push
cmc
popa
insb
fdivl
dec
dec
pop
mov
rorb
mov
inc
lret
mov
inc
js
push
adc
mov
sbb
in
testb
movsb
dec
roll
stc
imul
jmp
lods
push
movl
ljmp
in
cli
loop
ds
imul
out
imul
out
jle
dec
shll
inc
out
imul
xor
insl
hlt
mov
adc
rorl
and
jecxz
jl
push
pop
ljmp
xor
sbb
sbbb
inc
dec
sub
dec
shl
adc
pop
inc
pop
addr16
es
jae
sub
ja
jp
inc
outsb
jle
test
in
xor
aam
add
les
jns
scas
incb
jbe
shll
ljmp
sti
xchg
fiadds
lods
and
or
ljmp
sbb
popf
mov
dec
sub
push
bnd
adc
aam
mov
bound
je
cmp
aaa
sbb
dec
mov
add
pop
push
jnp
xlat
sti
mull
adc
fcomps
fs
xchg
aam
pop
pop
mov
daa
sar
mov
xchg
out
mov
loop
push
outsl
lods
push
cmc
push
outsl
ss
push
mov
dec
jg
test
lret
hlt
bound
cmp
sub
into
mov
cmpsb
jo
jb
das
loop
and
jl
sub
insl
clc
or
add
jnp
push
push
add
mov
jecxz
mov
dec
pusha
dec
mov
test
stos
dec
lcall
mov
fcomi
mov
add
dec
fs
test
or
mov
popf
movsb
mov
cmp
cmpsl
int3
stos
outsb
pop
rolb
push
cmpsl
sub
faddl
inc
shlb
push
pop
scas
std
mov
push
mov
jb
jle
or
push
in
mov
pop
out
inc
push
ljmp
or
scas
inc
sti
pop
add
addl
mov
rclb
cmp
cmpb
gs
sbb
enter
sub
mov
jno
adc
divl
imul
xorb
gs
loope
cmp
sbbl
sahf
dec
dec
sarl
popf
xor
shlb
je
lods
rcrl
jno
into
xchg
sbb
mov
aam
sarl
push
inc
lcall
rolb
sbb
mov
jg
lods
xor
cmpsb
mov
jmp
lea
pop
outsl
mov
mov
push
or
mov
adc
mov
fidivrs
xchg
ds
lret
sti
add
cmovp
adc
mov
stc
dec
and
mov
lods
or
inc
xor
out
inc
mov
insb
push
stc
fsubrl
xor
mov
cld
cmp
dec
pop
pop
adcb
xchg
sub
pop
and
ret
nop
pushf
mov
je
leave
fdivrs
shll
adcl
mov
ret
scas
jne
call
mov
mov
out
jecxz
ret
xchg
jl
addr16
mov
dec
shrb
mov
shl
and
arpl
xchg
jns
inc
cmp
and
adc
pushf
xchg
lods
mov
dec
jg
lret
sbb
testb
sub
jne
jae
mov
cmp
cmp
inc
fisubrs
mov
xchg
out
adc
push
leave
push
sub
lods
sbb
stc
out
sub
pop
mov
popf
iret
jnp
outsb
sbb
jb
movsb
and
mov
cmp
mov
cltd
sub
subl
fdivr
add
mov
testl
rorl
push
or
jb,pn
fnstcw
adc
movsb
sahf
int
outsl
fs
stos
les
stos
fbstp
jl
adcl
insb
sub
cwtl
xor
mov
pop
dec
andl
sub
repnz
loope
xchg
push
iret
sbb
and
movsl
dec
faddl
push
sub
loop
das
ljmp
fildll
push
shll
lock
cmp
mov
ss
push
ljmp
inc
call
sarl
or
leave
sahf
pop
dec
shl
inc
lea
mov
outsl
lret
sbb
sbb
repz
scas
and
fcompl
or
aaa
add
jmp
std
shlb
dec
mov
mov
adc
adc
xor
mov
nop
xchg
sbb
or
jmp
test
push
jle
push
fldl
stos
imulb
fnstenv
pop
outsl
inc
add
push
fisubrl
fs
push
movsl
xlat
mov
cmp
dec
insb
popa
lds
mov
sub
aam
cmp
pop
popf
or
dec
sbb
dec
and
mov
ja
lock
jl
lods
or
pop
jo
sub
subb
push
sub
outsb
add
movl
mov
cmpsb
lods
sub
and
out
out
leave
ret
das
lahf
aas
lods
sub
pop
scas
sub
dec
push
lds
push
pop
sti
sub
mov
jp
adc
nop
jl
and
cltd
jbe
add
sti
cmp
out
pop
pop
sub
pmulhuw
sub
subb
aam
add
out
lahf
clc
nop
and
adc
dec
leave
push
inc
repz
outsl
cmp
ret
out
pop
lret
insl
ud0
dec
xor
add
scas
stos
jns
mov
xchg
xor
testb
xchg
xchg
jge
pop
lds
int3
stc
xor
push
or
test
movsl
mov
mov
shlb
shrl
push
adc
out
or
push
dec
rcrb
push
aad
stos
cmp
inc
fnstcw
imul
repz
xchg
push
scas
repnz
push
add
mov
push
in
imul
movsb
leave
movsl
mov
or
xor
sbb
adc
ds
lock
fists
sbb
pop
outsl
push
inc
lds
ljmp
sub
adc
adcl
dec
inc
inc
dec
sub
aas
addb
xchg
jo
pop
or
or
jae
call
jne
pop
push
dec
sub
hlt
pop
mov
orl
inc
imul
mov
adc
lock
ljmp
lds
mov
xchg
popf
jne
fnstsw
jnp
mov
sbb
xorb
stc
adc
dec
rolb
scas
ret
cmp
xchg
enter
lods
xorb
pop
jg
in
xorl
jb
jns
jle
sbb
pop
sub
aaa
add
push
mov
xchg
in
shll
out
lret
popl
hlt
mov
out
mov
dec
inc
jge
int
inc
fisubrl
in
pmullw
jbe
lcall
mov
adc
adc
dec
jno
fistl
test
sbb
sbb
dec
mov
dec
or
mov
sub
aaa
popf
fmull
adc
fucomip
dec
or
mov
or
sub
xlat
mov
mov
inc
aas
int3
xchg
loopne
cmp
insb
sbb
adc
popa
sti
lock
das
lret
pop
rcll
mov
dec
sahf
movsb
inc
outsb
adc
ss
xor
adc
and
outsl
ja
orl
push
aas
shlb
cmp
xchg
jno
scas
sbb
xchg
mov
sar
mov
fidivrs
xchg
cmp
cmp
ds
xor
cmp
mov
push
ffreep
xchg
jno
dec
xchg
fidivs
add
xchg
cs
and
call
sbb
sub
mov
mov
xor
add
inc
mov
jb
addr16
sub
push
dec
sub
out
mov
outsb
pop
mov
inc
out
int3
mov
dec
dec
fyl2x
nop
mov
out
notl
jle
dec
fisttpl
push
scas
sbb
xor
in
sub
pop
adc
or
mov
enter
cld
fldenv
ss
ss
adc
and
sbb
arpl
aam
leave
enter
mov
or
inc
test
xchg
cmc
in
ljmp
out
xor
in
pop
mull
mov
pop
gs
inc
aaa
lret
cmpsb
test
mov
dec
shll
fstpt
stos
stos
shlb
sub
xchg
in
pop
cmc
sbb
daa
insl
inc
fsubrs
insl
repnz
lret
xchg
mov
push
or
movl
inc
les
push
inc
mov
and
push
pop
pop
push
or
push
fwait
loope
mov
mov
fwait
push
xor
imul
rcr
push
es
mov
arpl
mov
jae
mov
xchg
cltd
mov
sub
sub
and
shrl
inc
push
stos
push
shll
imul
add
arpl
jp
adc
or
and
and
movsl
and
and
pop
xchg
inc
adcl
pop
cmc
cmp
pop
mov
pop
xor
dec
lds
xchg
lcall
out
mov
ret
in
jmp
push
loop
xlat
addl
push
std
sub
jns
lock
mov
cs
xchg
rorl
add
mov
add
daa
push
stos
jmp
ret
rol
call
push
xor
push
sbb
rol
outsl
sub
sbb
xorb
jbe
jnp
cmp
and
xor
inc
scas
or
jns
xor
and
push
es
sbb
mov
fisttps
shl
int3
mov
fsub
out
jbe
add
stos
cltd
mov
div
xchg
inc
aam
adc
lahf
xor
aam
pop
lods
xor
test
sub
mov
ret
mov
dec
xlat
in
adc
add
out
in
out
dec
lret
fnstenv
push
add
loopne
loopne
dec
je
or
sti
addb
mov
aas
js
push
mov
cltd
lods
lods
add
das
insb
test
pushf
push
test
inc
fcmove
mov
popf
mov
flds
pushf
jecxz
mov
inc
mov
push
jge
dec
loop
fnstsw
repnz
fdivrl
andl
shrb
fiadds
push
stc
sbb
push
lea
add
pop
push
push
mov
outsl
and
bound
fcoml
xchg
pop
mov
sub
inc
pop
pop
aam
push
push
lock
sbb
ret
aaa
cmp
xchg
clc
xor
jae
adc
xor
add
mov
popa
cmp
fsubrs
add
dec
into
and
lahf
cmpsl
in
cmp
sub
and
xchg
mov
andnps
push
loopne
and
mov
lret
lret
push
out
clc
cmp
add
sbb
loopne
jbe
cld
and
mov
cmp
pusha
add
adc
pushf
fs
rolb
add
mov
cwtl
or
icebp
mov
rclb
jo
mov
lock
push
divb
lds
sub
je
xor
jo
nop
hlt
aam
mov
into
and
ja
pop
icebp
jno
loopne
cmp
rep
sbb
jbe
cld
pop
jnp
inc
jmp
or
lcall
iret
or
jne
pop
mov
outsl
ret
imul
sbb
or
into
cmp
imul
pusha
clc
sbb
leave
call
pop
mov
xor
and
and
je
std
stc
adc
xchg
decb
js
xchg
sbb
mov
movsb
mov
or
or
push
xor
push
dec
mov
xchg
xchg
inc
lea
leave
into
push
jecxz
and
repz
mov
jae
clc
dec
or
in
stos
add
stc
mov
push
les
out
jl
mov
scas
add
cmp
mov
cld
cwtl
test
loope
and
sar
movsl
mov
sbb
mov
pushw
mov
int
inc
xchg
les
xchg
in
test
push
pusha
insl
xchg
insb
add
int
pcmpeqw
lcall
mov
and
pop
mov
dec
pop
lcall
jge
call
out
sub
mov
nop
jo
mov
or
test
lods
push
pop
dec
nop
fmull
jecxz
jno
inc
mov
xchg
inc
and
testb
dec
pushf
mov
add
pop
ljmp
xchg
aad
cmp
sbb
lcall
loop
and
adc
or
sbb
in
mov
push
ffree
dec
sub
jmp
sub
int3
jp
ficomps
jno,pt
int
mov
popl
add
mov
jmp
leave
or
adc
push
jmp
mov
xor
mov
shl
mov
test
gs
dec
pop
add
jp
push
add
mov
pop
pop
mov
mov
ret
inc
add
dec
xor
mov
sub
shrl
pop
sti
mov
test
inc
popa
movsl
push
mov
scas
push
jg
xchg
dec
pop
mov
pop
mov
pusha
xlat
mov
adc
lds
mov
pop
and
imul
das
out
outsb
movsl
and
adc
jle
adc
push
sub
leave
push
test
mov
add
adc
xchg
inc
fwait
pop
in
clc
xchg
pop
mov
adc
ja
mov
mov
cltd
or
movsl
mov
test
adc
or
push
out
jnp
mov
sbb
mov
jno
mov
jb
jae
test
mov
pusha
jmp
xchg
aas
pop
clc
add
xchg
push
or
mov
fcomp
dec
cmpsb
fisttpll
inc
stos
fcmovbe
jns
add
xchg
out
dec
cmp
sub
mov
ror
movsl
xor
out
cmp
push
pushf
mov
imul
loope
in
pushf
xchg
or
pop
and
mov
fsubr
call
add
js
aam
cmp
push
iret
or
add
loop
push
add
push
push
xlat
push
insb
fimuls
cmp
xchg
cmp
mov
fldcw
rorb
mov
push
pop
ljmp
lock
push
mov
jmp
in
dec
ds
adc
jo
jg
call
dec
jmp
sub
jg
enter
sbb
dec
cmp
bound
in
js
lcall
subl
cmp
decb
add
add
xor
and
mov
pop
repnz
sbb
add
scas
test
mov
push
stos
test
repnz
dec
sub
rolb
repz
sub
push
insb
inc
sahf
cmpsl
ss
xchg
lahf
cmp
mov
add
sub
scas
loop
daa
popf
mov
inc
pop
insl
jo
shlb
repz
daa
sbb
bswap
mov
inc
adc
imul
lea
xchg
xor
in
inc
xchg
imull
jmp
je
repnz
dec
sub
fadds
dec
aas
pop
mov
fwait
in
or
jmp
test
mov
sub
jle
outsl
scas
cwtl
push
frstor
dec
test
lahf
xchg
mov
jns
jo
test
push
mov
add
and
mov
pop
mov
fidivrs
push
mov
fimull
dec
dec
stos
sub
pop
add
jno
and
adc
mov
iret
cmp
xor
inc
lcall
imul
sub
insl
add
or
xchg
mov
daa
or
mov
mov
pop
pop
cmp
aaa
iret
push
shlb
push
cltd
cli
sahf
outsl
jg
lds
out
in
or
inc
push
test
rcrb
pop
xchg
add
out
pusha
adc
pushf
lret
in
adc
leave
adc
loope
push
fcomp
testl
fwait
inc
adc
and
dec
push
sbb
lods
jae
adc
mov
in
sub
pop
adc
enter
cld
inc
xor
fwait
je
call
lcall
mov
fisubrl
lods
incb
push
pop
fninit
sub
gs
shrb
dec
adc
fs
pop
cmp
mov
pop
and
jae
psubusw
repnz
int3
outsl
mov
pop
mov
aam
jg
ret
cld
mov
stos
mov
test
sub
out
add
mov
les
inc
lret
pop
icebp
ret
mov
add
daa
insb
idivb
addr16
mov
bnd
cwtl
lahf
jo
inc
js
into
aam
loopne
ljmp
pop
lret
mov
fwait
or
bound
aaa
imul
enter
jg
stos
xor
ret
jno
ds
mov
or
sub
adc
lret
push
mulb
enter
cmpsl
icebp
lahf
mov
nop
inc
pop
fidivl
mov
lods
sbb
xorb
or
mov
int
adc
lcall
cmp
mov
push
xchg
fistps
and
push
leave
jnp
inc
inc
pop
addl
data16
cmp
xor
aam
and
jp
fisttps
aas
jmp
xchg
cs
fimuls
xchg
cli
dec
lea
sbb
adcl
outsb
dec
dec
mov
mov
nop
scas
lock
jae
mov
jno
lds
mov
gs
hlt
jp
scas
leave
bound
in
test
fcomps
lcall
add
jnp
outsl
xor
enter
sbb
mov
xchg
jae
dec
hlt
sbb
or
popf
push
push
sbb
imul
mov
cmp
cmpsb
mov
das
stos
aam
sbb
cmp
push
or
mov
xor
lret
and
inc
imul
in
fdivrs
push
arpl
jnp
insb
testl
insl
hlt
iret
fidivs
shlb
xchg
out
ret
sbb
and
idiv
adc
jne
mov
dec
ret
cs
mov
mov
sbb
push
sub
rorl
enter
lcall
rorl
fucomp
repz
in
add
incl
jg
icebp
jns
add
pop
xor
xchg
int
dec
inc
jns
mov
mov
or
cmc
and
inc
push
rcl
cmp
lcall
cwtl
and
leave
outsb
dec
mov
or
mov
pop
mov
repnz
enter
int
sbb
push
test
js
fisttpll
xchg
std
xchg
loope
arpl
jo
dec
push
frstor
sub
mov
mov
cmp
aad
xor
add
scas
dec
and
in
fsub
jne
mov
xor
inc
insb
gs
mov
or
cmp
mov
ljmp
pop
mov
dec
xchg
pushfw
dec
inc
cmp
push
push
mov
jle
pop
bound
mov
nop
pusha
push
xor
rorl
nop
jecxz
pop
dec
inc
push
xor
out
pop
inc
fisubrl
jp
add
fildll
sub
xchg
push
mov
cmc
pop
mov
mov
mov
sbb
dec
outsb
sub
push
adc
push
xor
cs
mov
sbb
xchg
push
in
xor
and
adc
insl
dec
in
icebp
in
jns
dec
mov
mov
pop
cmc
jmp
rcll
mov
dec
sub
aaa
pushf
ret
cmc
call
xor
aaa
inc
xchg
adc
faddl
mov
outsb
lock
xchg
addb
mov
scas
popa
addr16
xor
fisubrl
shrb
ret
cmp
lods
push
mov
or
in
add
xchg
andl
lcall
outsl
outsb
mov
ja
iret
cwtl
das
fistl
cmpsl
lret
xchg
xchg
repz
push
xor
fwait
sbb
xor
addr16
idivl
out
mov
xor
insb
int
lret
pop
mov
neg
push
or
popf
mov
adc
sbb
sub
arpl
enter
mov
in
xor
int3
lds
mov
ret
cmp
xorb
ja,pt
push
rcrb
stc
inc
mov
movb
js
ret
ret
inc
sbb
mov
divb
iret
mov
cmpsb
add
mov
cmp
std
popf
mov
push
mov
mov
or
sub
xchg
or
dec
sbb
repz
pop
ja
aam
pop
push
inc
and
fdivs
stos
sbb
and
fildl
jne
mov
call
jle
popf
je
sub
sahf
enter
stc
mov
cmc
das
pop
fisttps
cmpsl
mov
xor
inc
pop
push
mov
loop
scas
inc
scas
mov
idivl
or
xchg
jle
out
cld
bound
mov
jno
pop
inc
jbe
cmp
iret
dec
add
jle
mov
jb
add
loope
jle
ss
mov
mov
inc
pusha
cmp
aam
inc
int
rorb
pop
jo
imul
mov
fcmovnbe
mov
xchg
int3
enter
movsl
dec
jg
divl
mov
into
subl
and
cmpl
mov
push
out
add
inc
or
xor
outsl
daa
das
or
repz
cmc
inc
xchg
fnstcw
cmp
mov
ret
sbb
xchg
jmp
in
xor
stos
add
and
mov
in
mov
add
pop
fucom
xchg
mov
ss
nop
lahf
add
sub
xlat
cmp
pop
sbb
jecxz
arpl
fs
lcall
adc
add
mov
mov
imul
les
clc
das
inc
inc
mov
xchg
or
negb
insb
pop
or
add
or
push
push
outsl
xor
rcrb
mov
arpl
or
cmp
and
sbb
out
cmpsb
pop
mov
dec
aaa
or
aad
jg
and
sbb
das
xchg
lds
mov
jns
subl
stos
pop
inc
stos
scas
dec
and
adc
shrb
insl
xchg
loop,pt
sti
jno
fcoml
cmp
jb
adc
cmp
sbb
mov
xchg
test
xchg
js
cmp
dec
mov
cmp
shr
bnd
jmp
dec
clc
jb
dec
jl
mov
inc
clc
fs
add
pop
cmp
adc
loope
sub
adc
pop
xor
and
loope
and
jae
int
inc
and
xchg
and
pop
icebp
push
jmp
sbbb
fsubs
mov
jg
imul
dec
in
jl
sbb
stos
push
mov
and
orl
fmuls
dec
inc
aam
push
in
int
lret
out
stos
push
and
addr16
jnp
aad
adc
or
mov
xchg
mov
out
cmpsb
lods
jge
inc
inc
mov
jnp
and
fbld
outsl
aad
cld
daa
jp
or
lret
dec
mov
decl
add
sub
push
pusha
and
xchg
repnz
cld
mov
fisubs
sub
dec
shll
or
aas
or
imul
call
inc
inc
aaa
push
addl
rol
jge
jle
push
sahf
stos
icebp
or
lret
out
push
aam
enter
jle
pop
and
add
mov
add
shl
push
xor
dec
jge
aam
jmp
aam
xchg
or
sbb
inc
adc
dec
mov
aad
and
shrb
and
cmp
cmp
jecxz
sti
lret
mull
adc
test
add
dec
jp
xchg
inc
jecxz
mov
orl
popf
mov
repz
push
jae
dec
bnd
gs
sub
xchg
js
mov
xor
sub
cs
fistpll
mov
fdivrp
in
not
inc
mov
mov
in
xchg
pop
and
adc
sub
xchg
add
fldcw
jge
lcall
lahf
push
mov
imul
mov
test
call
xchg
push
stos
int3
movsb
ds
sti
inc
lret
out
mov
sbb
stos
lock
pushf
adc
cs
pushf
arpl
adc
xor
adc
cltd
int
mov
mov
push
or
ret
mov
pop
jns
mov
in
shll
cvtpi2ps
scas
loopne
cmp
loop
bound
dec
xchg
mov
xchg
cmpsl
pop
ds
or
sbb
adc
imul
addb
and
xchg
xor
mov
xchg
jle
xchg
insl
xor
sti
fnsave
xchg
add
sub
je
sub
into
aam
mov
test
jge
jno
lahf
test
push
push
sub
mov
daa
mov
mov
jle
inc
loop
call
adc
push
popf
sub
loopne,pn
xor
frstor
imul
jle
jae
pop
jbe
mov
dec
pop
fdivl
sub
insl
mov
pusha
and
jbe
jno
insb
mov
arpl
dec
jnp
mov
mov
xchg
test
mov
fstpl
cmp
mov
hlt
mov
stos
sub
das
sub
mov
bound
inc
push
movsb
adc
in
jmp
das
jnp
mov
das
adc
mov
out
into
out
out
adc
adc
xor
push
mov
jo
cwtl
mov
push
add
pop
int3
dec
add
pop
push
sbb
cmpl
jl
sbb
div
add
pop
adc
sub
mov
xor
hlt
clc
push
mov
xchg
add
push
iret
pushf
out
pushf
push
pop
xchg
mov
sti
push
mov
insb
sbb
or
ret
dec
sbb
mov
pop
lea
mov
and
mov
xorl
xchg
mov
aas
pop
adc
ja
cmp
push
lods
sahf
sbb
js
int3
sbb
mulb
fisttps
clc
mov
pop
or
cmp
push
cmpsl
add
enter
adc
mov
xchg
mov
adc
push
ja
xchg
mov
inc
pop
out
fst
fadds
or
mov
or
cmp
subb
repnz
lods
scas
xchg
pop
inc
lret
dec
scas
test
cmp
call
movsb
jne
add
sbb
je
sub
push
sub
xchg
repz
rol
push
out
and
mov
sub
sub
or
lea
ds
push
js
out
aaa
sti
int3
xchg
lret
and
sub
mov
sbbb
pushl
xlat
testl
stc
movsl
repz
into
cs
ret
cmc
imul
push
mov
int3
jbe
jg
loopne
cmp
inc
jecxz
add
shll
out
mov
dec
lahf
or
sbb
or
leave
pop
pop
pop
or
mov
sub
sti
adcl
cmp
or
xchg
insb
les
imul
push
shrl
gs
xlat
mov
dec
xor
mov
sbb
add
cmp
pop
loop
repnz
push
shl
pop
sub
mov
push
sbb
adc
dec
std
lret
sub
cmp
adc
dec
sbb
fldenv
push
xor
push
adc
jb
popf
ja
fimull
addr16
push
fstpt
movsb
mov
loop
hlt
outsb
dec
out
pop
into
push
sub
fistpll
and
bound
and
icebp
sahf
daa
jge
repnz
sbb
ret
push
cwtl
mov
cli
rclb
sbb
sahf
sub
fsub
repz
ficoml
mov
sub
cli
xchg
hlt
adc
addb
pop
into
mov
scas
xlat
sarl
cltd
lahf
call
stos
int
xor
mov
jecxz
int
stos
lahf
push
push
adc
sarb
insb
xchg
pusha
out
add
fadds
sti
push
xor
movsl
pop
mov
inc
pop
lock
inc
dec
mov
adc
push
clc
mov
sub
mov
es
jecxz
ret
scas
mov
push
mov
push
shlb
mov
xor
ret
xor
inc
aam
loop
sbb
xchg
add
jecxz
andb
test
pop
xchg
fs
xor
fwait
cli
mov
inc
daa
sub
xchg
xchg
call
test
add
push
sub
add
fadd
mov
lock
iret
enter
aad
mov
in
cmpsl
adc
add
mov
std
test
cmpsb
mov
insb
shlb
inc
mov
inc
idiv
or
lret
lods
cmp
adc
xchg
scas
sbbb
mov
jb
lahf
adc
es
subb
shlb
push
mov
lahf
ljmp
test
mov
or
inc
fcomp
mov
pop
xchg
mov
mov
or
or
aam
aas
inc
sahf
pop
push
pop
shlb
pushf
outsb
and
sub
jae
out
jbe
adcb
repz
mov
or
lods
and
adc
fistpll
nop
ret
mov
int3
lahf
pop
dec
dec
sbb
fld1
aas
push
jns
pop
fldt
jge
movsb
bound
rolb
pushf
fsubrs
int
add
es
lcall
cmp
add
or
push
clc
hlt
mov
and
lods
xchg
inc
sbb
pushf
inc
divb
aas
pop
push
sub
dec
shlb
ss
fdivr
sahf
je
mov
jl
inc
jl
xchg
xor
or
pop
cmpsb
cltd
jl
fldl
push
cmp
insl
mov
scas
aam
imul
push
pop
cmpsl
pop
push
pop
push
push
xchg
adc
xchg
imul
push
stos
pop
add
lahf
icebp
out
mov
iret
jb
xor
xchg
cmp
or
call
and
ljmp
push
xchg
and
das
fdivrs
mov
fstp
js
jno
pop
sub
aad
jno
insb
pop
fcomps
scas
scas
lret
aam
ret
lds
shll
xchg
icebp
mov
adc
sbbb
and
add
inc
pop
das
mov
ret
lea
mov
sub
lret
vmread
xor
pop
or
insb
sbb
dec
in
iret
push
pusha
mov
clc
fdivrs
sbb
fdiv
mov
jg
aas
aas
hlt
xchg
xchg
and
ret
xchg
lea
dec
in
mov
movsb
lock
xor
or
xorl
and
pop
add
lret
dec
cmp
lahf
mov
sub
stc
dec
xchg
cli
out
pusha
outsl
pushf
ret
xor
xor
jb
pop
cmpsb
jge
jae,pn
xor
mov
sbb
mov
pop
imul
mov
out
gs
jecxz
popf
inc
cld
jb
adc
push
loope
in
push
popf
sub
cld
sub
dec
adc
cmp
clc
mov
in
scas
ss
xor
lock
cmp
cmp
and
js
fnstcw
mov
repnz
and
imul
sbb
and
hlt
out
arpl
inc
pop
dec
jns
jae
lret
mov
adc
sub
inc
cmpsl
push
stos
fisttps
fisttps
cmp
or
pop
aad
aas
movl
fistpl
je
push
or
aad
xor
lret
pop
out
push
push
movsl
pop
cltd
jle
lahf
lahf
adc
xor
in
gs
lcall
call
lcall
aad
pushf
pop
or
sub
xor
pop
mov
add
lret
adc
xchg
jp
sbb
inc
sbb
xor
dec
mov
dec
push
cmpl
ficompl
loopne
push
testl
jb
jmp
pop
or
dec
sub
aam
jg
inc
loopne
or
mov
inc
fildl
ret
clc
or
divb
xchg
xchg
mov
mov
xlat
xchg
push
lahf
scas
pusha
fcmovnu
loope
mov
sbb
data16
adc
dec
xchg
add
jns
insb
out
out
sarb
jae
adc
std
lods
mov
nop
in
xchg
adc
inc
mov
outsb
mov
inc
cmpsb
mov
inc
loopne
inc
cmp
jge
aaa
imul
decl
mov
mov
ja
fidivl
jns
orl
and
cwtl
lcall
js
mov
int3
pop
and
aad
pushf
adc
rcrl
push
aam
mulb
pop
int3
dec
fnstenv
rcll
cld
xor
fwait
call
sbb
imul
cmp
test
and
xchg
int3
test
inc
nop
pop
roll
push
fsubrl
xorb
and
leave
xlat
cmc
loopne
rcl
inc
xlat
or
xor
mov
add
popa
push
popf
xchg
mov
adc
mov
dec
aam
push
and
sbb
dec
xor
popf
lahf
add
cmp
ret
xchg
xor
ds
sub
mov
push
pop
jns
mov
pop
and
into
lock
jns
push
xchg
mov
adc
ss
pop
xchg
ja
jae
jge
shll
jg
xor
testl
dec
push
outsb
pop
in
scas
xor
fmuls
jp
in
push
cmp
popa
xor
fidivl
mov
int
push
jno
jecxz
roll
aam
sarl
lods
dec
or
cmp
fs
mov
or
imul
dec
out
jecxz
aam
sahf
dec
mov
bound
jp
jns
into
mov
mov
add
test
outsl
cmpl
mov
cmp
push
mov
mov
test
push
scas
hlt
std
fnstenv
dec
push
ja
lret
nop
mull
fistl
popf
add
insl
add
push
inc
cmp
fidivs
aad
push
fcmove
cmp
push
pop
add
xchg
push
insb
mov
out
orb
leave
sub
fsubrs
test
pop
jge
in
cmp
mov
test
jbe
xchg
call
cltd
cmpsb
divl
daa
mov
mov
mov
mov
mov
lret
fs
xchg
fstpt
dec
pop
mov
mov
into
fcos
jl
dec
jne
imul
jp
xchg
xor
movsl
cmpsl
jmp
cld
test
jmp
loope
dec
cmc
js
xchg
in
mov
jge
mov
dec
xchg
xor
push
inc
mov
test
mov
ret
pop
add
loop
testb
mov
sbb
gs
mov
and
dec
and
lea
lcall
sbb
xchg
sub
jne
xchg
cld
mov
arpl
cs
xchg
notb
shlb
push
aaa
and
test
notb
js,pt
jb
sbb
inc
xor
rclb
imul
aas
mov
sbbl
xchg
stos
inc
std
adc
jbe
push
test
sti
xchg
mov
jmp
push
pop
test
or
inc
imul
enter
loopne
mov
les
push
inc
mov
push
rcll
pop
test
cltd
mov
out
pop
into
imul
xchg
push
jnp
dec
xlat
lret
rclb
imul
add
inc
pop
cmc
sub
aam
scas
mov
jbe
jns
cmp
mov
sbb
int
pop
pop
xchg
stos
shll
aaa
mov
sub
add
lretw
scas
fcmovnu
stos
in
fbstp
shlb
and
stos
ficomps
inc
les
ja
push
ljmp
insl
mov
push
bound
nop
stc
dec
aad
cmp
mov
push
push
push
int
jnp
mov
push
stos
sti
adc
leave
jg
push
mov
push
push
cld
shl
xchg
push
scas
push
jnp
pop
dec
pop
sub
call
and
fcomp
scas
stc
stos
lret
jne
adc
xchg
push
lahf
lock
sbb
push
call
and
ficompl
daa
mov
jg
je
jecxz
adc
add
xor
int
jae
dec
popf
xchg
lret
sbb
pop
mov
loop
daa
inc
rcrb
mov
out
sub
les
jecxz
inc
jbe
pop
insl
xor
xchg
loope
inc
push
add
shlb
add
add
sbb
icebp
sub
fptan
pop
popa
mulb
jnp
xchg
mov
inc
push
imul
outsb
leave
cmp
fs
nop
xchg
nop
insl
iret
sbb
sbb
pop
inc
xchg
and
jbe
lods
aas
insl
dec
test
xor
jmp
or
sub
inc
jge
mov
fwait
pop
fmull
outsl
mov
add
lock
adc
xor
insl
xor
bound
ret
fdivs
sub
mov
cltd
pop
gs
cld
pop
dec
mov
mov
sub
xchg
xchg
add
cmpsb
addr16
sub
out
fisubrl
adc
les
jmp
pop
pop
daa
xchg
pop
lret
mov
pop
repnz
aad
dec
and
cmp
popf
and
mov
dec
jne
jae
mov
ret
inc
aas
rcrl
jmp
test
lods
gs
test
data16
in
lock
lods
lcall
pop
scas
cmpsl
inc
or
out
cld
mov
fsubrs
xor
xlat
popa
xchg
sbb
pusha
mov
clc
adcl
inc
outsl
pop
and
dec
les
js
inc
push
movl
popa
imul
test
dec
es
mov
adc
pop
push
sti
fildl
sti
or
negl
dec
lods
cs
shl
jae
sbb
push
test
push
mov
loope
sbb
add
adcb
sub
jb
ljmp
mov
mov
shlb
jmp
lock
aam
or
inc
dec
es
push
fcoms
arpl
adc
sub
icebp
cmpsl
into
in
push
jnp
xchg
sahf
mov
dec
cmp
fcoms
ss
cs
lock
jb
sub
mov
sahf
jnp
add
jmp
sub
xchg
cwtl
cmpsb
xorb
or
lods
les
sub
jae
les
out
pop
hlt
into
sub
jb
mov
dec
sbb
or
jge
cmpsb
das
xchg
sub
xor
fcompl
shrl
pop
mov
jge
dec
rorb
jle
mov
fbld
jmp
add
call
pop
ret
mov
lret
rcll
jnp
dec
jge
mov
lret
xchg
int3
test
and
pushf
mov
pop
xor
fdiv
cmp
mov
repz
nop
scas
hlt
stos
adcb
fsts
out
jle
test
imul
cmc
fidivl
mov
cld
pop
lcall
dec
insl
push
clc
test
movsl
jp
fsubrs
mov
adc
dec
repz
mov
add
aad
rol
lcall
sbb
rcl
cld
imul
out
shlb
cwtl
notl
iret
rcrl
inc
sub
push
add
lods
shrl
outsb
xchg
jbe
rclb
push
mov
jo
data16
icebp
jns
sbb
fildl
dec
mov
mov
flds
sub
stos
out
movb
jbe
inc
test
adc
xchg
cmc
shll
mov
add
movsb
mov
call
xchg
jns
xchg
xor
mov
xlat
adc
stos
int
dec
jns
dec
stos
pop
sbb
rcrl
adc
sar
and
cmpsb
jnp
iret
mov
enter
push
xchg
popa
mov
idivl
out
stc
es
in
mov
adc
sub
pusha
pop
mov
sub
fadd
cmp
sbb
inc
sub
cld
fisubrl
mov
cld
fs
push
xchg
daa
pop
cmc
jl
cwtl
out
push
xchg
push
in
jbe
and
sti
gs
leave
lret
push
jno
vmread
das
btr
xlat
lahf
arpl
push
jnp
insl
pop
das
inc
jp
popf
insb
cmc
adc
lea
pop
mov
in
adcb
and
cmc
or
cmp
sub
outsl
fdivr
jo
sub
cld
addb
lret
scas
xchg
pop
negl
jo
fdivl
gs
je
loope
aam
inc
mov
arpl
lods
sbb
xchg
sub
mov
fs
iret
cmpsb
cs
out
sbb
aad
movsb
pop
lods
arpl
push
gs
fwait
cli
mov
scas
arpl
jo
xchg
cld
xorb
divb
dec
das
jae
fnstcw
adc
push
cmpsb
les
push
jae
bound
and
xchg
xchg
iret
ljmp
jno
xor
lock
adc
shrl
push
push
xor
fdivrs
push
adc
push
mov
lock
pusha
lea
ja
pusha
and
xchg
add
mov
test
test
push
push
lahf
mov
int
or
mov
xor
inc
ds
inc
lods
and
mov
push
daa
cs
call
mov
and
stos
decl
inc
pop
ficomps
outsl
jo
lret
insb
loop
pop
or
int3
push
pop
pop
scas
aas
mov
es
jg
xor
pop
xchg
push
mov
jp
or
int
fs
into
gs
jb
stos
repz
mov
and
add
mov
loopne
in
lods
aas
add
mov
add
pop
lahf
jb
cmp
jl
jmp
push
ds
pop
pop
dec
push
popa
cmp
mov
pop
xor
push
or
sbb
in
into
adc
mov
lods
insl
sarl
cvtdq2ps
pop
jbe
mov
inc
pop
sbb
stos
xchg
and
xchg
test
in
jae
sbb
inc
shll
movsl
popa
into
jo
iret
shlb
sarb
mov
das
lock
inc
aaa
fists
push
sbb
and
in
inc
mov
aas
aam
cwtl
jbe
cmc
stos
jb
dec
push
pop
or
in
xor
loopne
xor
fdivl
dec
mov
testb
cli
scas
sbb
data16
mov
in
imul
cwtl
ret
and
movsb
fisubs
push
and
leave
push
push
push
enter
fs
pop
jne
into
pushf
mov
lret
mov
sbb
cmpsl
xchg
jecxz
push
shlb
xchg
cltd
push
orl
and
inc
push
cmpsb
in
mov
mov
stc
push
push
cld
mov
movsl
mov
and
and
push
in
xchg
icebp
mov
in
shl
das
inc
xchg
addr16
es
xchg
push
or
out
sarb
cs
aas
mov
loop
and
rcll
pop
inc
loop
enter
sbb
out
lret
push
xchg
popa
fs
adc
pop
mov
test
jecxz
aas
mov
xor
pop
or
push
mov
subl
or
xchg
sarb
mov
stc
test
jg
jbe
jb
pop
in
dec
mov
mov
shrl
into
dec
sarl
mov
in
loope
xchg
push
enter
inc
pop
test
sbb
push
jno
in
xchg
cmp
loope
push
pop
mov
jae
gs
sarl
call
leave
fs
cmp
aas
inc
dec
mov
stos
jne
and
fs
mov
nop
out
outsb
pop
test
push
jno
adc
xor
add
mulb
xor
rolb
cmpb
mov
cmp
pop
leave
fwait
test
popf
or
adc
ficompl
adc
adc
das
add
xchg
adc
es
jl
iret
cltd
pop
in
ja,pt
lahf
push
dec
bnd
add
adc
into
and
ss
push
push
fbld
sbb
fwait
lret
insl
shll
daa
pop
mov
loop
jl
shr
add
xor
pop
fdivr
lret
sub
insb
inc
mov
xchg
subl
or
test
inc
adc
sub
sbb
sahf
mov
addr16
sbb
and
movsl
or
negb
cmpsl
inc
and
es
movsb
sub
and
outsb
scas
pop
cli
mov
mov
mov
sbb
xchg
mov
test
stos
mov
std
ljmp
sub
nop
adc
and
mov
mov
add
add
cmp
int
ja
push
mov
dec
sub
or
or
xor
daa
pop
cmpsl
mov
icebp
dec
fwait
xor
hlt
shll
arpl
cmp
fs
andl
pop
mov
add
mov
cs
stos
dec
loopne
ja
sbb
inc
add
jecxz
addb
mov
mov
mov
mov
rol
rcl
hlt
insl
outsb
pusha
adc
mov
je
repnz
pop
out
bound
enter
std
and
push
in
pop
sbb
lds
adc
mov
xor
push
cmovs
jo
sub
fisttps
negb
cltd
xchg
std
push
adc
iret
push
inc
mov
push
repnz
pop
stos
or
add
repnz
loop
dec
mov
jmp
xchg
mov
ret
das
jecxz
adc
inc
pop
push
fdivs
ljmp
pop
jp
es
push
je
imul
shll
xchg
push
stc
lea
ret
or
dec
xchg
fldt
mov
lea
sbb
jbe
imul
dec
bound
cld
cld
leave
pop
dec
loope
gs
adc
jno
xchg
sbb
xor
mov
in
cmp
mov
add
cli
insl
movl
lahf
bound
cmc
pop
cld
lods
adc
std
cwtl
cmp
iret
icebp
fbstp
or
lcall
jne
sbb
and
sarb
inc
and
inc
int3
sbb
gs
icebp
inc
shlb
sub
pop
or
lock
push
dec
xor
mov
cltd
mov
xchg
test
sub
jecxz
xor
inc
mov
pop
lods
out
pop
int
outsb
pop
sti
mov
dec
mov
or
in
out
mov
xor
sbb
push
xchg
pop
jmp
add
mov
rcll
push
push
aad
mov
pop
xor
add
pop
mov
xor
movsb
lods
or
les
jno
aad
adc
inc
sbb
pop
add
sarl
push
jg
and
aad
pop
js
sbb
dec
cli
popa
stc
loop
push
scas
add
adc
stc
jl
fmull
inc
imul
xlat
pop
and
sbb
pop
pop
call
fwait
pop
clc
insb
or
fs
lret
mov
push
mov
shrb
mov
mov
sbbb
cmc
test
out
nop
int
call
adc
js
cmp
pop
add
lods
push
stos
mov
mov
outsb
cmp
nop
dec
pop
imul
mov
mov
or
imul
fsubr
aam
lcall
jns
jnp
push
outsl
sbbl
aam
aad
movsb
jg
mov
and
pushf
popf
insl
rcll
push
mov
pop
pop
sbb
sub
sub
add
pop
pop
sahf
test
ficompl
xchg
and
fnstcw
lods
movsl
jae
pop
pusha
and
dec
lahf
mov
sbbb
pop
and
xchg
cwtl
out
pop
stos
dec
dec
push
jno
xor
mov
shll
add
das
or
push
inc
mov
dec
fcomps
test
js
arpl
and
inc
and
push
int3
out
int
icebp
cmc
adc
out
das
pop
xor
jp
cmp
xchg
test
aad
jg
cmc
sbb
xor
leave
mov
push
in
cmp
push
inc
hlt
addr16
xchg
rolb
jns
push
sbbl
ljmp
jp
mov
xlat
loope
test
xchg
and
cld
test
push
scas
add
push
push
nop
mov
insl
sti
js
out
ja
add
jae
or
inc
adc
std
test
jecxz
ja
and
int3
inc
jnp
rorb
xchg
mov
xchg
data16
rclb
int3
aaa
lods
inc
into
xlat
inc
dec
and
repz
or
mov
in
out
mov
mov
aas
mov
fbld
hlt
punpckhdq
mov
fstl
jge
add
push
pop
jp
mov
add
inc
or
out
insl
inc
fidivrl
enter
fdivr
add
cmp
out
xor
pop
in
push
inc
inc
mov
stc
stos
leave
leave
inc
mov
ss
jle
and
stos
pushf
pop
das
out
adc
mov
pop
sar
cld
lds
cmp
data16
cmp
das
je
lods
pop
lret
xchg
mov
pop
fiaddl
iret
aad
in
mov
imul
cwtl
test
int
std
push
dec
shll
lods
addb
adc
testw
shrl
mov
aad
and
inc
flds
sbb
sbb
imul
movb
les
cltd
int
xorl
pop
lea
cmp
xchg
push
pop
stc
pushf
sbb
sbb
popf
mov
fistl
stos
push
push
pop
rcrl
push
imul
mov
bound
xor
fnstenv
push
xchg
insb
pusha
fadd
iret
push
inc
lds
mov
cmc
jno
shrb
shrb
outsb
lods
xor
enter
jmp
mov
cmp
adc
iret
mov
nop
loopne
in
dec
jecxz
loope
inc
cld
arpl
sbb
mov
mov
mov
mov
pop
fsubrs
sub
push
dec
ret
insl
dec
lcall
xchg
in
negb
or
sub
jmp
sub
outsl
icebp
sbb
out
dec
call
cmp
pop
pop
ja
fdivs
jge
mov
or
std
pop
std
xchg
repz
shrb
mov
ret
insl
sti
inc
sub
jle
mov
push
sbb
pop
sub
mov
mov
mov
lods
push
push
int
sub
or
push
xchg
and
jae
fmull
mov
cmp
sub
pop
js
sub
adc
mov
lcall
mov
sub
pop
mov
ja
jno
nop
xchg
out
push
jmp
push
movsb
xor
lcall
into
dec
aam
in
dec
mov
dec
dec
lock
push
dec
adc
sahf
shrb
adcb
nop
push
lcall
lcall
push
xchg
mov
jbe
mov
xchg
add
aad
fisubl
cmc
push
popf
add
repz
pop
pop
dec
or
bnd
cs
jp
mov
int
pop
mov
mov
xchg
adc
into
adc
dec
inc
enter
sub
outsl
rcr
rorb
sahf
jmp
adc
pop
pop
scas
jne
fsubrs
xor
mov
insb
inc
sbb
cmp
xchg
jae
jns
mov
das
fildl
fldt
pusha
and
push
pop
repnz
ljmp
ss
shll
add
je
aad
jno
dec
xor
xor
xor
in
lret
insb
and
pushf
and
sbb
mov
and
repz
loope
xchg
mov
mov
push
adc
mov
loope
push
add
frstor
mov
int
xchg
or
outsl
cmpsl
fmul
roll
rolb
mov
add
sbb
jle
out
shl
inc
div
mov
pop
movsb
dec
mov
sti
fld
inc
jbe
scas
mov
daa
mov
leave
lock
and
mov
iret
ret
xchg
sbb
enter
cwtl
cmpsl
lea
pusha
icebp
pop
cltd
popf
xchg
jbe
sub
scas
data16
int3
jno
shll
lcall
xchg
icebp
push
out
int
or
rorb
jle
add
outsl
sub
adcl
imul
call
popf
lcall
xchg
pop
mov
push
ret
xchg
lods
jo
jns
mov
enter
push
push
test
pop
dec
mov
xchg
xchg
sbb
shrl
lahf
loope
fs
jns
sbbl
rorl
pop
sahf
inc
mov
mov
aam
out
in
ret
punpcklwd
dec
repnz
add
pop
mov
fdivrs
fadd
mov
sahf
imulb
cmp
test
fstpl
xor
ds
iret
sarl
fldenv
shr
outsb
stc
fwait
jg
xorb
loope
imul
push
lods
xchg
push
aas
mov
xchg
outsb
into
push
sub
aad
sub
sub
jle
sub
xor
ja
adc
pop
loope
orl
lret
cmpsb
cmp
icebp
mov
sarl
sahf
lcall
sub
mov
xchg
pop
xlat
jns
push
nop
lods
std
mov
and
popa
jns
or
pusha
xchg
fidivs
xchg
or
inc
scas
push
push
add
adc
jnp
sbb
push
std
rol
cmc
xlat
xchg
or
mov
or
testb
mov
popa
pushf
sbb
dec
mov
mov
push
imul
push
inc
sub
xchg
in
cmp
sbb
dec
scas
les
jmp
ljmp
movsl
xor
shrb
sbb
enter
jg
inc
out
pushl
xor
dec
push
icebp
adc
jmp
mov
incb
arpl
xor
push
flds
ret
call
nop
mov
xchg
les
sbb
out
mov
fistl
insl
and
or
test
inc
fsts
cld
xor
pop
mov
sub
or
es
daa
fsubrl
pop
stc
pop
push
int3
jp
pusha
scas
insb
sub
roll
push
insb
add
xchg
xchg
or
iret
mov
sahf
inc
shll
lahf
popa
lods
rcrb
dec
rclb
repz
shr
mov
filds
xor
cli
cmpsl
cs
pop
fdivs
push
mov
mov
dec
sub
aas
fidivl
jno
jb
adc
fimull
mov
ja
cs
mov
and
mov
xor
mov
mov
dec
xchg
clc
sbb
aas
mov
jbe
and
imul
pop
cmpsb
sbb
xchg
dec
push
xlat
lods
inc
cltd
cs
loope
scas
stos
inc
js
clc
and
stc
aas
push
jb
shlb
xchg
push
or
lds
jno
aam
stos
sub
je
push
scas
test
stos
mov
mov
outsb
pop
inc
sbb
inc
mov
gs
loopne
aam
push
mov
rorb
add
jl
add
hlt
cltd
fnsave
mov
pop
cmpsb
popf
or
notl
sbb
cmp
into
repnz
and
sbb
mov
mov
arpl
adc
inc
or
cli
sti
in
loop
pop
insl
insb
ds
cmc
inc
pushf
rcll
jns
out
push
imul
add
icebp
int3
mov
cmp
imul
mov
aad
lea
dec
push
pop
test
ljmp
sbb
into
imul
outsl
and
push
sub
cmc
or
mov
cli
bound
das
cmp
pop
mov
xchg
int
jecxz
insb
popf
xor
or
fdivrs
jns
jl
cld
mov
dec
shr
cmp
les
mov
popa
and
sub
popf
dec
mov
inc
test
push
hlt
outsb
cld
fwait
sub
cmp
jns
dec
dec
jl
outsl
arpl
jo
mov
jg
mov
lods
xor
cltd
and
shlb
stc
lahf
movsl
push
ret
mov
daa
adc
shlb
scas
and
sbb
jecxz
jp
outsl
repnz
xor
sarl
sbb
jp
lret
sahf
push
ficomps
ror
clc
popf
pop
mov
rolb
arpl
popa
xor
insb
rcrl
xor
adc
cmpsl
in
aaa
daa
mov
push
mov
and
inc
mov
inc
jns
stc
data16
adc
mov
jmp
call
dec
jecxz
mov
xor
loop
cmpsl
jns
mov
mov
xchg
testl
jecxz
mov
sub
movsb
xor
movsl
cmpsl
inc
jmp
mov
cmc
xchg
xor
xchg
cmpsl
pop
xlat
pop
cmp
push
mov
lds
jo
and
inc
out
dec
in
in
inc
mov
push
daa
lret
cltd
arpl
xchg
push
into
loopne
lcall
lahf
popa
inc
lods
das
fdivr
mov
jno
mov
arpl
pushf
or
in
or
and
sub
idiv
in
addr16
inc
or
sub
push
fimull
lcall
sub
add
xor
andb
out
mov
mov
fistl
ljmp
or
dec
loopne
xchg
push
inc
sahf
jae
sub
mov
imul
test
dec
mov
push
out
imul
adc
push
int3
sub
cmp
test
mov
cld
div
or
push
popa
int3
mov
test
jbe
lods
push
cli
call
mov
sbb
lock
cmc
xchg
xchg
std
fwait
int
stos
push
pop
sarl
mov
sbb
cmp
ret
js
lea
addb
sub
xor
test
leave
mov
mov
lret
cli
stc
shll
arpl
sti
addb
xlat
xchg
inc
inc
or
lahf
loop
or
rolb
aas
fiadds
ljmp
xchg
lcall
push
pusha
fwait
iret
jnp
out
adc
scas
lret
movsb
mov
sbb
addl
pushf
push
inc
movl
push
in
mov
mov
pop
testl
xor
ds
xchg
jns
jnp
mov
sbb
data16
arpl
cmpsl
pusha
jge
les
cltd
fsub
jae
inc
sahf
incb
lcall
xchg
dec
gs
mov
push
xchg
icebp
add
mov
push
cmp
das
mov
icebp
in
sti
xchg
sub
mov
xchg
into
fisttps
jge
movsl
shll
pop
adc
ja
jo
mov
xchg
shrb
aam
push
mov
pushf
popa
leave
xchg
or
jns
outsl
repnz
insl
push
scas
mov
cld
sub
iret
mov
outsl
dec
out
aad
pop
in
dec
mov
pop
cmp
mov
inc
and
adc
jg
adc
jmp
mov
test
add
and
push
sahf
int
jo
jb
cltd
lods
stos
inc
mov
stc
dec
and
pop
aaa
and
leave
cmpsb
test
movsb
mov
loop
push
cltd
stc
int3
repnz
outsb
out
sub
push
sbb
or
and
push
inc
cmc
rcll
icebp
stos
cs
popf
sub
mov
mov
lret
roll
pop
sub
push
mov
add
xor
div
mov
jp
ret
test
stos
cmpb
imul
mov
mov
cli
sub
lret
add
xor
adc
inc
cltd
repz
bound
cmpsb
mov
out
push
xor
pusha
inc
les
inc
cmp
lcall
adc
jp
fisubs
in
iret
cmpsl
cmc
push
sbb
jo
cmp
shlb
int3
pop
jmp
mov
and
dec
ret
clc
adc
cmp
rcll
ficoms
and
mov
xchg
xlat
pop
data16
xchg
mov
inc
movsb
jg
pop
sbb
ret
cmpsl
aas
repnz
movsl
pop
or
inc
push
push
loopne
pop
int3
in
sbb
jns
mov
and
jmp
jno
cmp
out
outsb
mov
mov
mov
lods
aas
andl
das
mov
dec
test
cmp
inc
jp
inc
or
mov
add
cmpsl
je
or
outsl
jg
and
xor
pusha
popa
lds
in
inc
xlat
in
sarl
or
push
fsubrl
or
adc
scas
cmp
jmp
inc
adc
jns,pn
mov
add
ret
add
imul
pushf
aad
repz
sub
fisubs
hlt
lret
push
mov
in
jp
jecxz
mov
rorb
pop
mov
stc
mov
pop
call
fnsetpm(287
insb
mov
in
out
push
mov
fldt
pop
cmp
fstl
xchg
insb
lret
outsl
mov
andb
addr16
test
les
subb
dec
pop
push
inc
jo
xchg
adc
stc
pop
mov
das
ja
mov
sub
lock
bound
sub
icebp
data16
loop
jge
loope
loope
mov
mov
mov
roll
popf
xchg
test
jns
fs
xchg
xchg
cli
pop
adc
clc
add
es
fdivrs
outsb
stc
fidivs
in
mov
inc
insl
lahf
pop
add
or
int3
int
mov
pop
jge
iret
jb
ret
and
scas
jno
aaa
test
movsb
push
dec
push
push
and
test
cmp
leave
jo
and
test
mov
fldt
cwtl
push
xor
pop
inc
inc
xchg
insl
pop
mov
mov
aad
inc
inc
ss
imul
sub
scas
frstor
fs
pop
dec
mov
adc
pop
mov
hlt
lods
xchg
in
addr16
dec
add
cmp
push
std
cli
pop
add
stos
fs
imul
ret
add
orl
nop
mov
int
fldenv
out
push
xor
pop
jno
outsb
ret
bound
fcompp
or
lahf
and
outsl
and
ljmp
decl
test
mov
loope
nop
adc
jecxz
or
xchg
xor
js
dec
sub
sub
cmp
lods
cmp
adc
pusha
mov
cmc
test
sub
mov
fldt
out
in
ret
jg
jl
jp
lods
adc
jge
aam
leave
int3
int
cmp
jg
shll
imul
sub
lock
pop
imul
jae
ret
pop
cmp
insb
call
iret
xchg
je
add
pushf
lret
jnp
sarb
lea
pop
or
divb
or
push
arpl
mov
mov
sbb
dec
aas
out
ss
mov
fwait
in
into
dec
aam
in
sarb
mov
cltd
sbb
add
imul
fiadds
ret
mov
ret
inc
pop
pop
cmp
xorl
mov
push
je
xor
movsl
orl
and
sbb
or
add
mov
fisubl
mov
and
mov
jnp
push
inc
pop
jg
jno
mov
out
xchg
jb
out
nop
int
jmp
inc
bound
jp
aam
xchg
sub
xor
pop
mov
lds
pop
rorb
leave
mov
or
jecxz
pop
mov
out
sub
jbe
cmp
inc
cld
rcr
sbb
jge
jle
mov
xor
or
cmp
adc
out
lcall
mov
pushf
add
cmpsb
stc
jno
xchg
test
push
sbb
icebp
xor
pop
lret
xor
add
nop
xchg
pop
clc
inc
cli
sub
inc
and
test
std
add
repnz
jno
sbb
clc
jnp
hlt
addr16
or
jg
inc
add
push
pop
divl
inc
push
pop
jle
rol
icebp
push
flds
jnp
pop
negl
adc
dec
pusha
sub
dec
dec
lret
fs
pop
popf
addr16
or
ds
fistps
cs
lret
lret
cwtl
cmp
pop
jo
sub
fs
aad
mov
loope
das
repz
subl
add
imul
rcl
jo
pusha
bound
loope
sahf
cld
pop
dec
inc
mov
and
dec
movsb
imul
jmp
test
popf
ficomps
sub
mov
lret
push
subl
cmp
add
fnstcw
mov
iret
daa
aaa
sub
inc
in
mov
jae
ds
or
mov
and
push
jae
or
call
insb
ljmp
jne
sub
pop
repz
les
loopne
push
xor
aas
pop
popl
xchg
stos
int3
int3
mov
pop
addl
mov
dec
shll
lret
clc
in
imul
mov
add
mov
repz
mov
adc
inc
and
and
ftst
imul
push
loopne
add
adc
subl
daa
mov
cmpsl
mov
dec
adc
je
jae
push
dec
sbb
mov
xor
xor
pop
mov
insb
mov
loopne
testl
mov
push
push
push
fld
sbb
js
loop
push
push
cld
lahf
lods
ja
jmp
enter
jmp
sub
mov
fildl
repz
cmp
addr16
shrb
repnz
adc
cmp
fst
in
es
sub
lret
push
fwait
jmp
push
mov
mov
scas
aaa
xor
mov
imul
jbe
test
mov
add
dec
shll
or
outsb
inc
stos
not
mov
ljmp
and
xor
int
add
arpl
cld
cwtl
fnstenv
xlat
clc
mov
lret
fs
adc
push
xor
mov
mov
sub
stos
inc
outsl
inc
rol
jne
ljmp
sub
outsb
push
xor
sub
xchg
pop
popf
mov
xchg
test
test
mov
pop
jecxz
cmp
mov
push
scas
test
dec
push
mov
dec
dec
icebp
jmp
aaa
sub
ljmp
outsl
aaa
jbe
lcall
jmp
fiadds
push
xorb
mov
push
sbb
inc
sbb
pop
sub
sbb
lea
cmpsb
loop
pop
shrb
xchg
fstps
out
and
pusha
sarl
cli
mov
aad
jmp
ja
sbb
mov
cltd
and
movsb
xor
in
jmp
cmp
and
fistpl
pusha
cmp
mov
jae
adc
xor
mov
movsb
or
subb
repnz
repz
enter
inc
cwtl
mov
xor
and
imul
jnp
mov
mov
xor
std
mov
lcall
and
jns
paddsb
gs
test
xchg
out
add
imul
addr16
outsb
mov
sub
mov
jmp
lret
sbb
cmp
popa
fcompl
cmp
push
rcr
movsl
or
jp
push
repz
adc
insb
lods
or
fs
mov
jb
push
push
pop
jp
daa
es
xor
jns
pop
inc
mov
popf
frstor
lock
adc
out
add
das
sub
stc
dec
lods
aam
rolb
xlat
in
xor
xchg
lea
or
mov
cmpsl
in
cs
ds
loopne
lock
repz
cmp
adc
inc
rorl
xchg
xor
roll
insl
mov
rcrl
popf
cmc
cmp
adc
inc
inc
into
ljmp
push
lahf
int3
jmp
mov
movsl
dec
outsb
adc
iret
lods
and
ljmp
sbb
rclb
cmp
daa
lock
fisubrs
push
das
mov
sbb
cmp
push
inc
jecxz
mov
lret
sbb
xchg
sbb
test
in
xor
add
mov
std
xchg
ds
imul
sbb
js
cmp
insb
and
lea
cmp
leave
add
xor
pop
dec
in
xchg
stos
mov
mov
sbbl
and
in
outsl
jne
inc
mov
rolb
mov
push
pop
push
jno
mulb
mov
mov
fst
fadds
xchg
fstpl
pop
jbe
lods
repz
fsub
cmp
mov
lock
neg
ja
sti
jne
test
cwtl
mov
ljmp
imul
add
ljmp
pop
out
shrb
mov
cli
pop
das
call
and
ret
dec
cmpb
adc
push
sbb
adc
adc
test
adc
cmp
mov
daa
dec
pop
add
in
lods
je
imul
into
out
sbb
rolb
adc
stos
int
xchg
lock
xchg
cld
into
out
jae
or
mov
push
es
testl
loopne
dec
mov
repnz
xchg
push
sbb
lds
jl
add
fisubrs
test
in
push
inc
leave
frstor
out
dec
out
mov
sbb
push
jle
xchg
je
push
arpl
pop
aas
jnp
adc
push
pop
jne
movsl
add
leave
and
mov
dec
pusha
sub
test
int
sbb
stos
les
mov
pop
cmp
out
dec
clc
jp
arpl
adc
fstpt
add
out
cmpsl
or
int
out
jmp
sbb
push
ret
xchg
fdivs
jne
in
adc
stc
in
sbb
js
or
push
lds
andl
mov
push
shl
xchg
sbb
push
jno
out
mov
imul
pop
js
mov
adc
sub
and
mov
mov
add
repnz
mull
xor
imul
notb
stc
add
push
out
test
adc
mov
dec
pop
lods
rolb
sbb
loope
pop
pop
test
jae
push
dec
adc
stos
shll
loope
imul
jl
adc
push
ja
jmp
xchg
into
addr16
or
inc
es
jnp
xor
push
pop
rorl
adc
xchg
mov
jmp
pusha
add
insl
std
or
pop
daa
xlat
test
repz
inc
sbb
push
int3
push
popf
cmp
aas
mov
dec
shrb
push
fsubrl
lea
mov
xchg
mov
push
cmp
cmp
pop
movsl
insl
fnstenv
mov
mov
movsl
pop
out
jbe
inc
adc
shlb
dec
dec
out
es
dec
pop
dec
xor
push
sub
adc
pop
pop
les
cs
fcoms
prefetch
ja
add
dec
jno
xchg
addl
jno
loopne
sub
sbb
popa
sbb
pop
lcall
mov
lea
popa
std
aam
pop
xchg
mov
movsb
sarl
dec
lds
fstl
pop
sbb
jns
cmpsb
add
cltd
pop
pop
dec
pop
loop
xchg
test
jp
xor
dec
stos
mov
fcomps
xor
aad
stos
adc
popa
dec
add
outsb
mov
pop
push
add
xchg
sbb
pushf
add
push
stos
rclb
adc
fidivrl
out
fildl
sbb
dec
sub
mov
sbb
push
test
jo
out
loopne
or
jp
ret
inc
arpl
mov
data16
or
addr16
jmp
jp
jne
inc
int
fwait
stos
inc
inc
sub
xor
pop
push
stc
jae
add
into
sbbb
push
mov
ss
out
std
std
mov
push
jbe
jne
xchg
adc
mov
jae
xor
push
insb
jno
xchg
in
cs
push
pop
fwait
vpshlb
mov
jns
mov
jb
ret
jbe
rcll
mov
int3
or
aad
nop
insb
add
and
insb
stos
and
je
adc
dec
or
cmp
sahf
jg
sbb
xchg
hlt
inc
push
fildll
mov
movsl
ja
lods
incb
sbb
xor
inc
sbb
or
fnsave
repz
add
sub
add
aas
add
xor
mov
pop
pop
int
push
cld
xchg
push
leave
mov
xor
xor
jecxz
fadds
xor
inc
fwait
test
rclb
icebp
mov
call
cmpsl
or
test
clc
pop
imul
icebp
cmpsl
mov
mov
xchg
ficoml
enter
or
jge
out
mov
mov
and
jae
sahf
unpckhps
pushf
cmp
orb
ret
xor
pop
sbb
cmpsl
xorl
fnstcw
jbe
sbb
xorb
pop
inc
rcr
inc
mov
stc
xchg
adc
enter
scas
test
push
cmp
mov
imul
lgdtl
mov
xchg
xor
pop
jl
aaa
jl
inc
dec
scas
sub
aad
mov
jge
cli
fisubrl
add
jne
xchg
and
push
lahf
orb
cmp
cltd
jae
xor
mov
jb
dec
pop
in
inc
movd
push
jbe
or
movsl
jmp
out
sub
jecxz
pop
cmp
xchg
pop
inc
movsl
mov
dec
inc
xor
nop
push
in
and
addr16
test
in
inc
lea
pusha
or
out
cmp
xor
nop
jp
icebp
sub
adc
push
dec
mov
lret
or
ljmp
add
stc
loopne
push
push
ret
aam
and
sbb
rclb
dec
push
push
push
lea
adcl
cmp
xchg
lods
jecxz
cld
aam
mov
lods
scas
test
cltd
aas
xchg
shll
sbb
nop
mov
mov
jmp
sbb
nop
sbb
mov
hlt
outsb
scas
js
insl
in
je
test
jnp
cmp
sub
add
cld
inc
xor
xchg
xor
mov
or
aaa
nop
xchg
mov
sub
lahf
fs
loop
adcl
adc
dec
js
push
sbb
sahf
sbbl
push
cmp
movsl
dec
fisubl
pop
jmp
xor
sbb
sub
add
sub
call
mov
js
xchg
je
or
scas
dec
imulb
cmp
push
mov
jecxz
and
adc
popa
xchg
lds
out
inc
bound
sub
jae
aaa
jb
stos
jbe
pusha
loopne
dec
mov
cmpsb
clc
and
xchg
mov
and
pop
add
inc
mov
cmpsl
pushl
mov
xchg
pop
lahf
in
stc
adc
jbe
push
daa
push
mov
cmc
cmp
rcll
gs
inc
xchg
xchg
mov
xchg
sub
aaa
cmp
inc
outsl
adc
inc
imul
sub
and
pushf
push
mov
mov
adc
sub
jns
test
in
lods
popw
push
cmp
mov
stc
push
push
xchg
in
fs
sub
loopne
sbb
inc
push
pushf
sbb
lock
push
hlt
inc
outsb
pop
inc
xchg
loope
aas
and
sub
dec
cmp
es
fidivs
sub
sbb
fisttpll
shrl
lcall
cmpsb
lcall
sub
adcl
mov
into
rolb
das
fwait
sbb
mov
aam
call
xchg
leave
jle
jbe
pop
jb
add
and
xor
mov
jns
je
dec
ja
in
cld
mov
add
push
cmp
xchg
inc
sub
pop
insb
cli
cmpsb
loop
lret
scas
imul
push
je
fmuls
ss
or
in
pop
shll
cmp
jg
loope
stos
xchg
repz
or
sub
add
sub
ja
dec
inc
lahf
out
fcmovnbe
fiaddl
adc
add
jbe
sub
test
mov
faddl
push
out
adc
mov
fwait
pop
shrl
popf
sbb
daa
xchg
mov
mov
sub
jecxz
xchg
mov
jecxz
and
xor
or
push
or
addr16
inc
dec
aas
adc
ss
scas
xor
jge
andb
inc
mov
cmp
hlt
inc
add
jae
arpl
xchg
rclb
das
inc
pop
aaa
stos
adcl
sub
sub
pop
mov
out
pop
jbe
es
push
adc
jnp
popa
es
imul
test
addl
mov
ds
cltd
jo
imul
movsb
xchg
inc
push
push
clc
dec
in
xor
out
sbb
or
js
imul
ja
es
out
rcrb
daa
std
pop
pop
das
and
or
push
pusha
dec
outsb
dec
mov
cmp
sbb
mov
xchg
ljmp
mov
dec
xlat
cs
enter
mov
add
mov
test
stc
adc
sbb
and
inc
andb
ss
mov
rcll
cmc
push
sub
in
xchg
addr16
mov
or
outsl
jno
xchg
mov
sahf
add
lods
popf
dec
arpl
sbb
push
movsl
mov
nop
pop
ss
jmp
out
and
adc
add
loopne
lock
sub
xchg
pop
jl
movsb
std
inc
xchg
xchg
imul
hlt
adc
or
mov
popf
iret
pop
xchg
xor
dec
dec
movntq
lds
xchg
leave
xchg
sub
and
xor
jmp
inc
xchg
leave
negl
pop
jg
mov
dec
je
or
lock
lods
test
mov
and
ds
and
add
pop
sbb
mov
das
adc
pop
bound
inc
push
lods
sbb
push
and
int
scas
or
insl
adc
femms
add
pushf
mov
rcll
gs
imul
mov
outsl
lods
or
outsl
in
pop
xlat
jmp
clc
xor
pop
inc
inc
movsl
push
pop
mov
mov
cmpsl
das
push
mov
scas
mov
in
push
scas
cs
pop
push
and
ljmp
xlat
mov
and
push
loope
push
inc
mov
in
inc
xchg
cmp
cmp
xor
pop
inc
and
lods
or
xchg
and
and
movzwl
mov
pop
adc
push
or
test
repnz
and
xchg
xor
jmp
push
lock
add
cmp
mov
fistpl
or
fs
gs
test
xor
iret
and
push
mov
leave
popf
mov
movsb
popf
fstpt
xchg
adc
xchg
xor
pop
je
arpl
jo
push
jne
pushf
jmp
into
xchg
add
ret
aaa
out
xchg
out
add
xchg
jl
icebp
int
inc
idiv
lock
pop
imul
aad
mov
cld
pusha
or
lcall
pushf
jne
or
int
jbe
dec
push
loopne
push
insl
sub
fwait
lret
and
push
jnp
lret
and
test
out
sarl
fidivl
or
mov
lods
jge
icebp
in
sahf
adc
sti
xchg
popa
call
test
mov
sbb
dec
lahf
dec
adc
inc
xor
das
mov
inc
lret
and
cmp
jne
push
lods
xor
jmp
stc
cmp
sbb
cmc
pushl
popa
mov
add
jmp
int3
sub
jle
les
lods
push
xor
cwtl
jne
and
pop
je
cmpb
cmpsl
ljmp
aam
pop
scas
imul
add
ljmp
xor
xor
sbb
inc
leave
jmp
xor
cmp
flds
xorb
imul
enter
xchg
cli
adc
push
mov
push
add
push
divl
jo
loope
aas
pop
dec
test
dec
hlt
mov
or
dec
pushf
addl
lret
dec
test
mov
or
daa
dec
les
and
in
push
sbb
popa
je
push
mov
arpl
xchg
adc
pop
sbb
xor
fs
ja
mov
leave
add
xchg
sbb
data16
jecxz
dec
mov
mov
mov
push
cmp
adc
loopne
add
aas
ss
fsubrl
ret
xchg
dec
loope
imul
int3
out
cmpsl
fmulp
push
pop
sbb
test
jg
iret
pusha
call
mov
les
jae
sub
xor
ljmp
adc
jp
in
xchg
repnz
pop
test
fs
je
outsl
aad
dec
cltd
xchg
mov
mov
adc
gs
aam
mull
add
clc
iret
sub
enter
push
mov
adc
mov
inc
aaa
or
popf
xor
adc
push
sub
push
divl
jmp
gs
call
mov
arpl
mov
dec
mov
xchg
roll
je
jns
je
sbb
daa
mov
jg
cmp
mov
adc
and
cmp
cli
xlat
push
daa
stos
and
aad
rorl
in
xlat
sarl
cli
xchg
popf
subl
xchg
ds
or
loop
test
adcl
cmc
jl
push
and
mov
nop
sahf
cli
test
cld
mov
xchg
dec
and
out
cmp
xor
or
mov
loop
lret
out
dec
repnz
add
divb
jmp
aam
push
lcall
jnp
inc
popf
push
ljmp
sub
scas
jl
push
cmp
jae
cmp
sbb
mov
out
inc
or
dec
pushl
into
mov
flds
out
icebp
push
or
jmp
cmp
das
push
mov
loop
loope
push
mov
iret
cmp
and
sub
insb
inc
and
daa
mov
roll
mov
jle
fwait
arpl
or
mov
add
xlat
lds
negl
not
mov
adc
mov
in
mov
insb
pusha
mov
cmp
add
or
inc
sub
stos
mov
pop
cld
sahf
bound
adc
nop
das
push
dec
js
out
ss
cmpsb
outsl
adc
inc
xor
pop
jecxz
aam
ja
and
and
mov
test
jo
ret
fucomip
pusha
xchg
mov
sub
sbb
add
arpl
mov
lock
mov
subl
fs
sar
mov
mov
pop
jmp
pop
rclb
and
leave
sub
xchg
stc
sub
cmp
arpl
jmp
lret
popf
pop
pop
cmc
add
and
cmc
imul
add
scas
sbbl
das
lds
lahf
cli
out
sbb
rclb
jl
icebp
ficomps
jno
sbb
pmulhw
dec
out
ljmp
xor
stos
and
imul
mov
jp
jbe
sbb
mov
dec
nop
cwtl
push
lcall
cld
cwtl
sbb
shlb
loop
jl
ljmp
int3
mov
sub
lret
test
or
pop
add
popa
lret
out
cld
jb
mov
jmp
sbb
jb
icebp
and
mov
jae
mov
call
fmuls
xchg
nop
in
std
hlt
dec
sub
std
sbb
mov
or
xchg
cld
imul
sbb
mov
sub
add
xlat
sahf
and
loop
inc
and
jbe
inc
cmp
xlat
dec
or
stos
and
push
jp
out
pop
mov
mov
ljmp
mov
xor
call
jmp
xor
mov
pushf
js
and
insl
aam
arpl
std
lret
push
popa
lahf
xchg
add
jns
hlt
push
addr16
mov
jbe
add
cltd
scas
xor
dec
xchg
xchg
or
or
inc
pop
nop
adc
mov
push
push
mov
push
cmp
sub
mov
mov
push
lcall
aas
adc
cmovle
jne
xor
fstl
pop
push
and
popf
ret
add
jnp
sub
test
adc
add
mov
mov
push
mov
shrl
lcall
inc
lock
jp
mov
and
add
clc
int
shrb
out
xchg
and
mov
xor
daa
aaa
jmp
mov
cmp
push
jge
mov
xor
pop
jae
lahf
and
test
ja
iret
aaa
mov
push
aaa
out
clc
cwtl
mov
sub
loop
mov
sub
inc
and
inc
mov
pop
outsb
xor
bound
nop
or
gs
lea
xchg
push
mov
lods
or
arpl
xchg
popa
pop
icebp
out
cmpsl
pop
sub
xchg
int3
mov
rorl
mov
pop
fadd
lock
add
sbb
lret
mov
dec
in
in
xor
aas
mov
cmp
jg
mov
test
scas
jp
rorb
mov
add
movsb
stos
push
push
leave
adc
popa
mov
pop
std
and
or
les
subl
cmp
xchg
mov
into
mov
sbb
mov
fbstp
pusha
jmp
hlt
fldl
andl
call
nop
fidivrl
data16
fs
hlt
sti
adc
and
push
jns
jp
xchg
xchg
scas
fbld
mov
cld
shlb
cld
pop
mov
dec
out
add
pop
cli
inc
lahf
insl
test
xchg
pop
lcall
rcrb
adc
in
cld
adc
adc
jl
sbb
mov
scas
pop
cmp
imul
stos
push
mov
testb
add
sahf
insb
lahf
movsb
push
mov
jl
or
mov
pop
data16
in
mov
pop
mov
fsubrl
mov
sub
sbb
leave
out
cmpsl
mov
pop
dec
push
mov
sahf
adc
int
mov
mov
hlt
out
xchg
pop
push
or
mov
mov
ss
fnstcw
mov
hlt
push
xchg
aas
push
xor
aad
out
push
jae
arpl
add
xchg
and
mov
aam
shlb
popf
xor
inc
mov
aas
loope
dec
jmp
popf
add
in
dec
pop
jp
xchg
dec
inc
in
hlt
mov
cmp
pusha
testb
jne
jne
xchg
stos
out
jnp
mov
mov
imul
inc
loop
push
into
mov
roll
cli
dec
outsb
ret
fnstsw
loopne
mov
movsl
clc
mov
inc
add
jl
pop
int3
adc
add
mov
add
jne
pavgw
xchg
lock
dec
and
mov
aam
fildll
das
mov
mov
dec
cmp
mov
dec
and
enter
loopne
scas
aas
xchg
andl
cmpsb
pop
jno
and
faddp
push
lahf
inc
iret
scas
mov
int3
fwait
rclb
lods
xor
push
mov
pop
loope
pusha
jl
pop
cmpsl
xor
and
in
push
aam
adc
in
jl
jge
cld
add
inc
inc
sub
xchg
mov
xchg
mov
mov
mov
mov
mov
push
out
pop
sub
push
int
mov
or
adc
scas
ds
daa
loop
lahf
data16
movsl
inc
push
movd
xchg
pop
popa
lcall
mov
ret
sub
in
jmp
mov
data16
loop
pop
stc
outsl
cltd
cmp
mov
and
push
or
dec
int
lds
xor
adc
pop
cmc
dec
xor
jecxz
lret
ljmp
xchg
push
iret
aaa
xor
push
mov
clc
mov
or
jge
test
icebp
in
push
mov
sbb
sbb
add
sar
les
and
push
roll
push
aam
out
and
inc
cmp
push
add
jl
mov
ficoms
dec
in
xchg
pop
test
dec
adc
cwtl
repz
aaa
push
cltd
and
jb
sbb
repnz
pop
jns
jnp
pop
icebp
sbb
add
fcoml
add
fsubr
popf
in
cmp
ret
movsl
pop
xchg
mov
ret
jo
repnz
ds
in
aad
push
cmp
pop
inc
into
repz
pop
or
jg
pop
loope
sbb
cmpsb
imul
out
and
test
mov
and
stos
push
rolb
lea
call
ja
jno
xchg
or
push
and
mov
addr16
dec
in
dec
sbb
xor
ficompl
in
push
jg
hlt
push
pop
rcrb
out
in
pop
mov
jl
xchg
xor
push
mov
mov
stos
bound
mov
addr16
xor
stos
movsb
sbb
pushf
mov
inc
loope
inc
popf
outsl
xchg
adc
push
aad
sub
mov
xor
cmc
cmpsb
push
call
daa
pop
or
xchg
dec
enter
pop
xor
lahf
ja
mov
cmpsl
jns
or
xchg
sub
cmpl
mov
fs
adcl
push
fmuls
jno
mov
ret
mov
xchg
mov
bound
cmpsb
sbb
inc
pop
fsubrp
out
mov
mov
sbb
outsb
rolb
push
loop
repz
aam
cmp
out
icebp
jb
pop
dec
es
mov
adc
out
cmp
test
mov
mov
sbb
jge
push
push
push
jg
icebp
pop
dec
xchg
fdivrl
rorb
hlt
xchg
out
sahf
mov
insl
inc
xchg
push
cmc
xlat
dec
sbb
insl
int3
jl
scas
fwait
stos
stos
lods
push
rolb
inc
push
and
mov
mov
or
fwait
add
mov
sub
jl
xchg
imul
scas
add
int3
sarl
cmc
dec
or
pop
outsl
push
mov
mov
pop
outsl
insb
out
sub
sub
lret
std
scas
dec
in
mov
push
push
insl
add
inc
push
mov
cltd
cmc
mov
push
sti
lds
daa
je
add
mov
jp
push
or
mov
pop
jecxz
pusha
add
repz
xchg
lret
jo
dec
or
inc
jo
popf
subb
jns
pusha
pop
jnp
mov
mov
cmp
xor
cmpsb
cmp
cmp
ljmp
mov
xchg
jg
pop
mov
cld
and
push
dec
ja
insl
pop
mov
popa
mov
or
out
xlat
js
sub
js
dec
dec
cli
xchg
jnp
test
sbb
pop
aaa
addr16
xchg
pop
lock
lcall
aas
add
sub
and
orb
filds
pop
sbb
pop
into
mov
mov
in
cli
cmp
nop
mov
dec
add
xor
jae
fcoms
push
xor
add
ficoml
pop
adc
jmp
fsubr
out
fmuls
mov
test
aam
adc
add
out
mov
mov
imul
jno
push
cmpsb
sub
cmc
xchg
cwtl
mov
les
and
out
lret
mov
ret
loopne
mov
jno
out
adc
add
inc
add
pop
clc
jge
out
pop
cmpsl
es
lock
das
iret
mov
sub
mov
fstpl
insl
inc
rcrb
ljmp
movsl
inc
iret
in
sahf
sbb
fisubrl
and
aam
push
int
sub
lcallw
push
adc
les
mov
dec
int
into
xor
and
inc
mov
sub
mov
subl
filds
les
lahf
ret
repnz
loope
sbb
mov
xor
xchg
daa
arpl
pushf
inc
jg
je
push
cmpl
rcrb
jmp
gs
movsl
or
dec
loop
adc
ret
or
aaa
dec
push
push
roll
lea
jl
mov
nop
inc
mov
lahf
data16
cmp
jmp
xchg
cmc
mov
adc
pushf
inc
repz
xchg
fcmovu
loop
push
inc
dec
es
enterw
fwait
rcll
das
xor
xchg
stos
stos
out
cmp
aas
cmp
mov
outsb
insl
mov
mov
je
loope
sub
xor
rcrl
cmp
adc
shl
push
dec
xlat
cli
in
mov
xchg
push
push
jns
or
lcall
cmp
xchg
out
fmull
and
gs
push
mov
mov
popa
mov
jp
bound
jb
sub
jb
xor
sbb
iret
xor
js
xorb
ss
sbb
sbb
and
lods
mov
ret
arpl
setp
ret
add
jae
shr
inc
and
sub
bound
xor
addb
jbe
imul
pushf
dec
jb
xchg
lret
icebp
fsubrp
mov
and
shrb
xchg
mov
pop
je
pop
popf
shll
aad
mov
pop
jnp
push
sti
mov
adcl
cmp
mov
and
inc
xchg
fwait
xchg
xchg
lock
mov
icebp
stos
repnz
popf
call
mov
pop
jo
xchg
or
stos
xchg
mov
dec
loop
or
ret
into
mov
or
xor
in
inc
ror
sbb
cmp
popa
sbb
pop
sub
fcoms
incb
filds
dec
inc
xor
inc
adc
jae
addr16
jp
push
mul
out
repz
xchg
stc
std
cmp
movl
in
aam
mov
xchg
cltd
adc
mov
lods
inc
lods
push
aad
xor
lods
xchg
mov
shlb
sbb
jno
mov
icebp
jecxz
mov
stc
or
mov
aad
lahf
pop
mov
push
adc
mov
ds
loopne
out
xchg
cli
cld
mov
rolb
sub
dec
jb
movsb
lods
aam
mov
imul
jp
sahf
daa
mov
xor
mov
movsl
dec
clc
dec
dec
repz
sub
jg
cmp
pop
mov
pop
into
xor
mov
mov
subl
lds
sbb
ret
adc
pushf
push
mov
pop
dec
gs
leave
or
mov
adc
test
push
aad
loope
lcall
outsb
cli
mov
cmp
inc
enter
into
stos
cmpsl
push
jne
mov
cmc
and
loopne
mov
push
fbstp
movsb
mov
dec
adc
data16
mov
stc
or
cli
pop
mov
cmc
imul
adc
sub
mov
movsb
test
or
dec
xchg
insb
push
es
xor
inc
cli
or
subb
es
repnz
jns
mov
sarb
lret
mov
inc
xor
mov
push
idivb
xchg
out
int
dec
mov
loope
mov
mov
and
test
or
jge
movsl
ret
movsl
ret
dec
push
movsb
xor
cltd
jg
and
cmp
jp
and
pop
cmc
je
leave
sbb
cmc
jge
push
test
loop
lret
ret
jno
ljmp
hlt
adc
sti
jl
cmp
sarb
mov
ljmp
mov
xchg
popf
lret
add
dec
cmpsb
or
pop
orl
xchg
add
fwait
push
inc
or
bound
sbb
jle
add
mov
mov
sbb
xchg
mov
shrb
insl
mov
jne
sbb
into
push
inc
mov
xchg
push
adc
cmpsl
dec
aas
out
mov
pop
cmp
scas
loopne
pop
repnz
sbb
js
dec
jo
push
xor
jle
scas
xchg
scas
inc
xor
jo
frstor
inc
add
jae
cmp
inc
dec
push
push
out
cmpsl
dec
je
call
mov
int
insl
out
push
ret
sub
leave
lret
and
call
inc
test
adc
jnp
push
dec
mov
and
add
inc
pop
jo
jg
data16
iret
mov
stc
and
ss
pop
push
jb
cwtl
add
or
adc
lds
js
dec
add
sbb
add
pop
jae
add
imull
sbb
pop
inc
jae
mov
mov
push
xor
test
inc
scas
jo
jo
lods
sub
nop
add
xor
cmp
ss
loope
jbe
hlt
mov
mov
and
insl
in
lods
dec
push
mov
stc
and
mov
pop
inc
xchg
jbe
cmp
cmp
xchg
xchg
mov
pop
cli
push
mov
orl
sub
push
mov
imull
xchg
jne
jne
popf
loop
scas
jmp
daa
push
insl
or
jo
std
pop
mov
lret
lret
dec
mov
dec
sar
int3
int
jge
stos
enter
mov
jl
imul
loope
jge
in
aam
dec
fmuls
mov
or
fdivrp
leave
inc
mov
cmpsl
mov
cmp
xchg
cwtl
xchg
orl
or
push
xchg
fcoms
je
dec
mov
int
inc
mov
scas
adc
cmp
ret
mov
dec
pusha
add
insl
xor
adc
cmc
lods
mov
dec
jbe
clc
lea
sar
sar
xor
and
loop
popa
and
mov
lcall
scas
push
add
dec
lret
add
shll
xchg
ror
lret
out
mov
dec
push
cs
pushf
icebp
aad
push
or
es
push
push
jnp
popl
cmc
gs
pop
dec
negl
lds
sbb
pusha
push
and
fldcw
lods
aas
call
xchg
push
pop
fists
imul
ds
inc
pop
outsl
jg
jae
and
cmp
cmpsl
mov
mov
fnstenv
ficomps
mov
adc
push
sub
shll
divl
inc
xchg
xchg
cmp
sub
add
js
loopne
add
frstor
mov
sbb
mov
sbb
ficoml
push
mov
mov
and
inc
rcll
push
push
jmp
xchg
insl
push
xlat
sub
fstl
pop
cmc
add
mov
add
jae
out
repnz
ficoms
dec
or
push
jbe
cmp
ss
push
fdivrp
mov
push
push
xlat
mov
iret
aas
ror
jne
insl
and
sub
dec
push
jbe
dec
sbb
mov
ficomps
into
inc
or
cmp
xchg
mov
sub
mov
orb
dec
bound
sar
push
dec
repz
jb
fbld
add
loope
cli
in
push
js
inc
or
mov
cmpsl
pop
add
and
xor
mov
test
dec
out
push
data16
add
test
xor
and
push
incb
test
pop
test
lds
and
adc
and
mov
and
sbb
fbstp
into
jbe
stos
push
dec
int
popa
lock
xchg
frstor
cmpsb
mov
mov
mov
mov
push
xlat
dec
out
outsb
dec
sbb
repnz
mov
sbb
sbb
daa
iret
mov
cmp
fldl
mov
out
scas
sub
int3
rclb
sub
scas
fidivs
cmp
loopne
add
sub
pusha
or
fs
push
fnstenv
fldt
dec
add
addb
xchg
imul
ja
add
xchg
mov
fldl
mov
xchg
mov
cmp
cs
adc
movsl
jne
push
mov
cmp
fs
mov
repnz
loopne
out
aas
pop
fisttpl
pop
push
add
dec
cmc
fldt
movsb
ret
stos
adc
shlb
sbb
cmp
ss
xchg
shll
adc
xchg
psadbw
adc
adcb
dec
mull
sahf
sub
enter
sub
xor
adc
jle
cs
add
xchg
push
sbb
fs
rcrl
inc
sbb
test
int3
ss
mov
jp
xchg
inc
out
and
sti
loopne
push
lea
inc
outsl
mov
pusha
dec
pushf
fsin
adc
or
xchg
sbb
lds
sub
pop
jae
call
inc
out
sbb
lods
js
add
loop
jnp
decb
jne
arpl
rorl
sub
mov
cmp
or
pop
lret
push
mov
inc
sub
lret
sarl
je
inc
jle
test
xchg
lret
gs
cmpsl
xchg
lds
stos
cmpsb
pop
loope
in
shl
fistl
or
cmp
and
popa
imul
dec
inc
ret
movsl
test
mov
ds
lret
xor
jl
push
sbb
dec
fists
mov
mov
push
rcll
and
add
jp
dec
cmp
or
mov
inc
cld
mov
mov
xor
pop
or
xchg
jmp
shll
mov
mov
or
mov
sbb
jecxz
mov
jge
fildll
pop
cltd
clc
mov
leave
in
dec
daa
xchg
adc
repnz
or
in
pop
pusha
lcall
je
aam
loope
rcll
or
sbb
sub
sub
push
mov
mov
cmpsb
dec
mov
clc
movsl
sarl
fadds
daa
add
ds
int3
cwtl
rcl
and
jb
adc
fs
jecxz
mov
dec
scas
xchg
int3
and
and
leave
cmp
adc
out
lcall
pop
or
sub
cwtl
sub
inc
jbe,pn
mov
jl
out
sti
cwtl
mov
popl
ljmp
or
ja
ljmp
mov
jl
jae
mull
pop
mov
pop
push
mov
mov
fcoms
mov
cmp
outsl
mov
dec
fsubl
and
mov
inc
dec
enter
das
inc
jnp
sti
add
dec
aaa
pop
cs
call
push
mov
push
push
fsubrs
aam
ljmp
lds
test
imul
test
and
aam
pop
aas
push
das
cmc
sarl
outsl
fs
stc
sub
dec
fs
mov
or
adcb
and
test
cmp
sub
jb
push
mov
xor
das
jns
fsubs
mov
cli
dec
lea
icebp
pop
imull
pop
clc
loop
add
imul
jbe
sub
sbb
xchg
and
aam
stc
and
shrl
push
roll
outsb
insb
and
nop
jne
mull
and
push
dec
mov
cmpsl
in
outsb
cmpsl
jle
in
shrl
sbb
ret
call
cld
js
cmc
xor
jge
jecxz
shlb
xchg
pop
loop
ljmp
xchg
sub
and
aaa
std
jb
adc
hlt
mov
imul
sti
repz
add
push
jecxz
stc
test
cmp
movsl
mov
ret
in
test
mov
jns
add
mov
cmc
filds
int
push
xor
movsl
mov
ret
cmp
pop
cltd
sub
inc
sub
imul
addr16
fisubrs
and
icebp
test
lcall
lds
out
inc
and
mov
inc
push
pop
lods
push
into
mov
mov
fcomip
arpl
and
lods
fxch
in
iret
int3
push
int3
test
popf
adc
mov
outsl
add
sti
or
jnp
inc
push
xchg
fmuls
xchg
aaa
lcall
stos
mov
push
into
add
mov
inc
aam
call
stos
cmp
rcr
xchg
andb
cmp
add
xchg
sub
je
loop
repnz
adc
xor
cmpsb
mov
sbb
push
xor
add
mov
je
mov
fcoms
dec
and
add
mov
or
ss
push
cmp
sbb
sbbb
push
lds
das
xchg
cmpsb
in
scas
icebp
lds
cli
mov
movsl
sbb
push
pop
xchg
jno
cmp
jnp
movsl
xchg
ret
sub
adc
sbb
jg
fidivl
stc
lods
adc
scas
ret
leave
jbe
jo
pop
jp
outsl
xorl
leave
mov
andb
pop
mov
cmpsb
pop
jp
lcall
and
int3
xor
cld
mov
push
mov
fists
outsb
dec
sub
sub
sbb
adc
mov
mov
mov
sti
sahf
les
mov
cli
aas
fldt
test
jle
mov
daa
jne
or
scas
jbe
mov
sbb
ret
fiadds
jb
gs
int3
sub
int3
lret
out
push
enter
xor
push
xchg
xchg
xchg
fsub
loope
dec
loope
xor
xchg
pop
repz
mov
insl
loope
icebp
shl
fidivrs
fistpll
test
push
sbb
call
ja
subb
dec
inc
jg
outsl
cltd
add
mov
cwtl
dec
sbbb
ds
orl
ficompl
mov
mov
sbb
jae
shll
inc
mov
fs
xchg
inc
jmp
sbb
enter
sbb
pop
add
dec
test
push
add
enter
jo
push
or
loop
cmp
adc
je
sub
es
dec
loope
push
dec
stos
outsl
inc
mov
xor
mov
and
jle
in
xor
ret
addb
es
inc
mov
hlt
repz
add
aaa
xor
shl
cmp
rcr
xchg
sahf
sub
aas
addr16
jecxz
push
mov
fstpt
mov
shl
mov
mov
sub
fbld
js
push
lcall
xor
xchg
mov
and
sti
ret
and
fstp
jmp
test
ftst
or
shll
loope
test
into
loope
movsl
dec
hlt
les
xchg
jae
push
leave
push
pusha
sub
es
stos
pop
add
test
dec
mov
mov
dec
xchg
scas
mov
ja
neg
adc
push
pop
sub
cmp
test
mov
xchg
adc
cmpsl
push
test
testb
mov
push
dec
es
push
cmp
lods
mov
jne
push
aaa
push
iret
push
lahf
mov
jg
inc
in
add
fwait
inc
add
mov
cmp
sbb
call
js
aad
push
adc
dec
cmp
pop
push
aaa
sub
jp
sbb
xchg
xchg
in
pop
and
ljmp
add
inc
cmp
mov
out
lahf
sbb
adc
xchg
jb
popf
addr16
sbb
wbinvd
or
lds
je
push
or
mov
push
jp
adc
popf
cmpsl
xchg
sub
outsb
add
call
in
push
mov
mov
mov
test
xchg
ds
and
shll
stos
lret
dec
cmpsb
lock
cmpb
popa
mov
in
daa
jns
mov
adc
iret
pusha
gs
xchg
push
dec
jae
stc
aaa
imul
popf
and
lret
lret
lods
lea
clc
push
and
cmpsl
cmpsb
js
clc
clc
scas
sbb
jb
out
insl
xor
out
jmp
loopne
es
inc
push
cs
xor
fs
jnp
fistpl
fst
imul
pop
imul
aas
sbb
loopne
jbe
test
in
imul
int3
fisttpl
imul
pop
in
jp
jmp
lods
shrl
jecxz
pop
loopne
inc
sub
xor
xchg
jle
test
dec
aam
ret
xor
add
adc
lock
call
push
mov
inc
arpl
scas
adc
or
fiaddl
jecxz
popa
aaa
xor
fldt
pop
in
pop
jns
mov
sub
or
push
out
aaa
adc
aaa
les
mov
cltd
leave
xlat
ret
xchg
roll
fwait
pusha
insb
mov
les
push
hlt
ss
pusha
push
scas
rolb
out
xchg
adcb
adc
sbb
iret
fcoml
ds
std
ja
jge
aam
mov
idiv
jmp
shll
lahf
xchg
cmc
in
add
lock
jnp
dec
dec
jno
jmp
mov
push
sbb
add
xchg
jg
pop
dec
xchg
mov
inc
xlat
movsb
out
pop
rclb
xchg
xor
adc
scas
add
push
jo
adc
jo
push
fdivrs
sbb
add
cmc
movsl
rcrb
repnz
jns
int
ds
xchg
xor
call
in
xchg
push
mov
pop
out
push
sbb
sub
push
dec
or
lret
sub
or
aaa
mov
stc
push
arpl
pop
or
mov
repnz
fidivl
mov
lret
clc
popf
jb
ljmp
mov
dec
mov
xchg
out
push
aas
jnp
mov
sbb
jno
push
popa
iret
mov
stc
popa
cmpl
pusha
sbb
push
scas
std
mov
out
cmpsb
add
lcall
fistpl
dec
jmp
mov
sub
cmpb
add
movsb
loope
cwtl
arpl
das
xchg
pop
repnz
es
rcl
pushf
fdivs
pop
add
jle
scas
pop
mov
stc
outsb
ret
pop
sbb
mov
mov
jbe
stos
jns
or
add
add
pop
sub
dec
imul
int
leave
adc
cli
ss
loopne
pop
cmc
stc
ds
rcll
rcll
lahf
imul
pop
leave
jb
xor
xchg
add
cmp
loope
shlb
outsb
loop
movb
or
mov
mov
xor
fdivl
clc
push
inc
daa
push
imull
mov
stos
pop
nop
cmp
xchg
sbb
sahf
jb
or
js
lret
rcrl
inc
divl
dec
add
xchg
push
stos
push
mov
mov
mov
adc
fisubs
xchg
ret
inc
inc
sub
push
into
push
push
in
daa
jg
mov
mov
dec
test
hlt
cmp
in
push
adc
inc
or
repnz
pushf
inc
mov
pop
xchg
pop
iret
lcall
lds
jno
pushf
push
jg
dec
hlt
mov
fsubl
and
ss
mov
adc
cwtl
lret
js
xadd
mov
in
stos
mov
push
fstps
sub
fildl
out
xor
pushf
sbb
gs
sti
adc
dec
mov
adc
jge
dec
add
xchg
sarl
into
insl
mov
shrl
loop
jecxz
test
mov
lds
jno
mov
movsl
mov
les
mov
or
in
push
add
jmp
cmpl
xchg
mov
jp
sbb
mov
inc
mov
fldt
push
or
bound
aas
shrl
xor
adc
mov
inc
xchg
out
ja
jl
xor
lock
pop
xor
sbb
sti
sub
sbb
popa
loope
xchg
sbb
imul
imul
inc
cltd
push
jp
mov
mov
test
cmp
or
mov
push
jne
cmpsl
mov
cmp
pop
adc
sub
in
pop
orl
mov
mov
mov
dec
psrlq
jl
sub
std
cwtl
add
or
shl
mov
ljmp
imul
mov
outsb
sbb
vpshaw
std
imul
adc
inc
mov
dec
out
dec
cmpsl
xlat
aad
xlat
mov
inc
mov
cmp
test
lds
pop
lcall
out
and
fadds
pop
lahf
add
dec
sbb
jecxz
popf
add
sub
out
imul
pushf
stc
xchg
mov
dec
jns
sbb
fcomps
mov
push
push
mov
inc
sbb
stos
adc
jg
aad
xchg
adc
push
leave
inc
fists
aas
mov
test
mov
mov
cmp
mov
mov
xor
adc
mov
push
pop
and
cmp
addr16
arpl
mull
outsb
push
mov
mov
call
adc
and
add
sti
in
mov
frstor
aad
adc
scas
jns
cmc
add
into
xor
jns
rcrb
add
pusha
sub
int
cmp
jl
xor
pop
mov
mov
push
sbb
pop
scas
outsb
sbb
cmp
dec
mov
mov
sub
ret
or
enter
cmp
inc
pop
mov
push
in
push
dec
scas
lahf
lea
pop
adc
push
sub
mov
sbb
jne
xchg
and
loop
bound
xlat
arpl
cli
xchg
out
mov
in
xor
or
loope
and
test
into
mov
test
mov
cmp
aad
test
adc
test
dec
aas
mov
fsubrs
lods
jns
jl
add
dec
push
inc
push
out
jp
jo
adc
loope
sub
aaa
ss
fldcw
sahf
mov
xchg
cmp
movsb
mov
out
cld
xchg
xchg
nop
jnp
cwtl
jp
mov
sbb
lret
xchg
pop
mov
jl
push
jo
add
fnstcw
popf
pop
data16
adc
xchg
add
pop
jg
inc
sub
xchg
jne
and
andb
je
loopne
jbe
cmp
lahf
sbb
outsb
jns
imul
jnp
push
loop
outsb
fistpll
sub
xor
lock
ret
ds
jns
adc
add
cmc
popa
mov
inc
rorl
rol
ljmp
jne
xchg
mov
jb
and
shll
dec
cmpsl
lret
rorl
add
add
dec
mov
jb,pt
xor
movsl
nop
sahf
daa
gs
call
mov
cmpb
lock
cwtl
cmpsl
pop
and
and
stos
or
sub
xchg
mov
leave
sbb
xlat
pop
xor
lock
pusha
lcall
xor
ret
loop
push
daa
mov
in
gs
sbb
loop
data16
stc
ret
fsubrl
push
xchg
add
rcr
mov
pop
rcrl
pop
xor
or
test
adc
dec
mov
inc
cmp
stos
jns
jne
mov
xor
int3
sub
fidivrs
fucom
testl
hlt
movl
pop
mov
mov
jb
pop
add
jl
test
pop
call
jp
push
insl
xchg
pop
add
lahf
outsl
jp
xchg
out
and
adc
test
adc
mov
leave
inc
or
push
cmp
pop
cltd
add
fs
je
and
and
int
mov
out
jns
push
scas
pop
push
mull
add
xchg
mov
mov
cmp
rcrb
insl
jl
imul
adc
sub
decb
add
bound
inc
rorl
fbld
push
mov
repz
shrl
lahf
pop
and
sbb
jae
xor
sbb
out
int3
int3
gs
pop
repnz
mov
popf
add
pop
pusha
sub
dec
jo
push
push
jg
mov
dec
movsb
cmp
das
inc
xchg
das
loop
cmpl
or
ret
fdivrp
push
pop
push
fidivs
js
push
push
sub
sub
repnz
push
scas
add
fscale
ds
xchg
mov
push
sbb
call
lret
sbb
xchg
push
int
rolb
in
adc
add
mov
dec
dec
mov
cmpsb
xchg
ret
xor
mov
stos
sub
test
add
xor
or
dec
lret
inc
repz
mov
or
pusha
scas
jb
cmpsb
push
mov
in
insb
fiaddl
add
lea
push
mov
xchg
xchg
in
sbb
mov
mov
or
cltd
cmp
jns
pop
repz
bound
ret
adc
adc
pop
iret
xchg
pop
mov
cmp
jne
inc
movsb
pop
jae
test
cltd
iret
sbb
sbb
jmp
mov
cmp
test
call
aas
ljmp
jmp
roll
cmc
int3
rolb
aaa
pushf
jmp
mov
or
call
mov
shl
in
iret
je
adc
fmul
ret
jns
cmp
movsb
lahf
lcall
jb
ljmp
fsubl
aam
scas
mov
fimull
insb
fdivrl
xchg
jl
and
xchg
and
or
movsl
ret
adc
xlat
sbb
out
push
jge
cmp
jne
jl
mov
cmp
cld
dec
nop
pop
sub
mov
sti
mov
sub
push
lock
mulb
mov
enter
out
and
and
sub
shrb
pop
push
pop
push
mov
add
mov
aas
lret
stc
push
repz
stos
out
dec
mov
movsb
sub
cmp
lea
inc
rcrb
out
popf
shr
and
adc
out
dec
in
push
aad
or
test
in
scas
dec
or
in
fld
inc
sub
mov
incl
dec
decb
push
dec
loop
pop
nop
fists
lahf
orl
jmp
imul
ficoms
push
daa
mov
jne
pusha
add
xchg
and
pop
mov
rol
mov
xor
aas
aam
push
cmp
arpl
test
pop
movsb
inc
aam
lods
xchg
cmc
loopne
out
dec
xor
push
mov
addl
push
gs
cltd
outsl
bnd
in
fnstcw
stos
add
imulb
iret
adc
mov
mov
lahf
out
add
imul
mov
jg
dec
add
aas
adc
les
sbb
das
out
and
repz
les
sbb
sti
dec
mov
mov
push
push
mov
jmp
mov
adc
rcrb
leave
insb
cmc
stc
ficoml
arpl
pop
jmp
inc
push
ret
sub
jbe
mov
fisubs
bound
ss
popa
mov
push
push
mov
fiadds
or
sub
imul
loope
dec
fisubl
xchg
fcmovnb
addr16
fcmovu
add
mov
jp
xor
aad
addb
imul
sbb
lret
imul
xor
loope
jne
cmpsb
jmp
push
or
and
divps
sub
jno
ret
rcrb
xor
lret
mov
jp
xorl
adc
xchg
cltd
mov
cmp
fs
fistps
test
inc
add
xchg
adc
xchg
push
je
in
or
loope
mov
xor
push
inc
and
mov
outsb
rcr
icebp
out
dec
call
imul
xchg
es
fwait
stos
xchg
subb
lahf
je
fbld
pushf
xchg
pop
sub
inc
lods
test
xorl
movsl
stos
xchg
js
mull
inc
sbbb
jecxz
std
add
aas
and
cmpsl
sbb
gs
pop
loopne
outsl
jmp
enter
inc
mov
nop
push
jecxz
lds
insl
xor
push
ja
pop
mov
cmp
or
out
scas
fdivr
movsl
bound
pop
pushf
imul
popf
adc
js
sbb
stc
enter
cmp
add
add
push
out
pop
iret
adc
pop
xor
jmp
scas
jno
ficoms
loop,pt
push
jbe
in
jno
popf
push
inc
test
arpl
pop
mov
jl
ret
das
or
add
lret
inc
fwait
push
jno
sub
mov
add
cmp
inc
aad
pop
sti
int3
mov
pop
pop
push
ljmp
dec
stos
jnp
mov
push
dec
or
jo
dec
mov
fwait
nop
cmp
adc
or
cld
ss
int3
pop
sbb
pop
mov
dec
loope
cmp
and
nop
out
sbb
int
dec
cmpsb
cmp
mov
or
enter
pop
les
and
hlt
rclb
js
mov
in
xor
icebp
dec
jle
out
adc
mov
mov
dec
imul
roll
cwtl
insl
inc
orl
fsubrl
gs
lcall
ljmp
adcb
pop
hlt
or
test
cltd
out
idiv
mov
sub
insl
hlt
pop
and
adc
loopne
leave
or
dec
cmp
addb
jp
testb
cmc
loopne
push
mov
jb
std
stc
cmpsb
dec
push
jnp
clc
bound
into
jbe
jnp
xchg
cmpsl
aas
xor
lret
and
xchg
popf
xor
pop
hlt
lds
arpl
hlt
bound
out
add
pushf
fimuls
and
lods
cmp
inc
jge
sub
sti
xor
incl
inc
ret
xchg
hlt
pop
addb
add
jnp
fdivrl
fnstenv
repnz
inc
mov
xchg
add
adc
sbb
stos
daa
insl
lock
mov
das
repnz
cmpsb
or
push
sbbb
push
mov
inc
subb
ror
pop
insb
push
repz
jmp
sub
leave
add
dec
aaa
int3
adc
mov
mov
bound
idivb
lret
iret
lods
movsb
mov
pop
push
mov
add
push
adc
xor
mov
xchg
scas
jb
mov
cmpsl
ljmp
scas
dec
movsb
jp
daa
test
aas
mov
or
dec
xchg
jns
cmp
lock
pop
lret
sub
sbb
dec
push
sub
test
jle
enter
popa
inc
or
mov
cld
inc
lcall
xor
mov
jp
mov
aad
push
lcall
jle
mov
sub
push
int3
xchg
popf
imul
xchg
push
adc
pushf
daa
rcrb
or
daa
insl
stos
push
inc
in
mov
push
or
cmp
pushf
dec
outsl
xchg
in
ja
aaa
in
push
xchg
in
and
mov
rorb
pop
add
inc
push
jnp
aad
xchg
fmull
cmpsb
jl
stos
in
cltd
mov
into
aad
mov
in
int3
sbbl
pop
insl
jmp
in
xchg
rcrb
push
adc
imul
repz
in
mov
mov
cmp
leave
mov
and
xchg
adc
pop
adc
mov
jo
scas
mull
push
lods
and
inc
mov
cmp
cltd
or
mov
inc
and
push
sub
jb
mov
sbb
adc
aad
stos
daa
je
sub
adc
loopne
test
imul
pop
pop
adc
sub
std
sbb
in
cli
imul
mov
pop
and
or
push
stos
test
add
and
js
push
dec
jo
hlt
dec
cmc
jmp
sbb
ljmp
fsubp
xchg
mov
scas
jg
shll
mov
sub
out
movsl
mov
mov
scas
mov
or
sub
daa
jns
jg
aaa
mov
jl
cmpsl
sub
js
std
mov
test
fcomps
lea
rorl
fdivs
dec
sub
and
jmp
adc
mov
cmpsb
pop
push
das
aaa
loopne
and
fimuls
sahf
leave
and
push
xor
icebp
xlat
mov
fidivl
inc
mov
sarb
jmp
jo
push
mov
fnsave
imul
fwait
repz
seto
in
enter
out
xor
pop
leave
mov
cmc
inc
repnz
loopne
jmp
insb
dec
faddp
pop
outsb
rcrl
push
stos
add
mov
lea
das
mov
pushf
mov
ds
psubsw
ret
inc
jno
imul
inc
ror
daa
into
sub
fidivrs
lret
out
call
add
sub
test
cmp
test
inc
pop
movsb
mov
repnz
shrb
sti
cmp
inc
test
pop
jbe
test
pop
xchg
scas
jecxz
xchg
xchg
cmp
jmp
xchg
loope
lds
add
jnp
pop
je
cmp
push
xchg
aaa
push
pop
scas
push
mov
hlt
mov
push
pop
out
mov
iret
lahf
cmc
stos
dec
loopne
mov
les
movsl
xchg
repnz
inc
lret
xchg
xchg
lret
mov
sub
ja
out
inc
cmp
mov
push
mov
lds
ljmp
test
popa
and
fndisi(8087
lock
push
xor
ljmp
jp
shll
rcll
sbb
mov
outsb
jne
sub
dec
mov
sbbl
pop
out
test
jno
call
sbb
aam
push
test
test
in
push
push
cmovns
inc
mov
lea
in
jg
fwait
pushf
loop
out
push
jmp
notb
or
dec
cltd
outsb
stos
lret
mov
sbb
inc
and
out
cltd
push
test
data16
add
jmp
push
in
jb
std
add
cmp
dec
dec
data16
loope
cmc
jno
jmp
adc
sub
daa
jg
leave
mov
cli
xchg
push
jb
pop
add
push
cmp
xchg
pop
call
shr
and
dec
or
inc
std
xchg
js
stos
push
addr16
mov
and
fcomip
xchg
stos
push
or
pop
inc
arpl
sbb
adc
outsb
hlt
ja
or
repz
insb
jecxz
testb
andl
push
sub
pop
add
test
cmpsb
ljmp
sub
icebp
out
call
add
mov
jge
dec
dec
popf
jns
aam
loop
mov
test
mov
jecxz
fsubs
pop
pop
fwait
dec
int
add
or
lods
mov
aam
aas
idivl
mov
sub
daa
xchg
clc
les
insb
data16
mov
sub
pushf
fxch
xchg
add
jmp
call
sbbl
loopne
fdivrl
mov
aaa
into
icebp
into
and
and
daa
cld
or
sbb
fmuls
adcl
ret
ljmp
mov
dec
loop
cmp
je
fidivs
pop
push
insl
arpl
push
pop
jo
mov
xchg
xchg
inc
insb
adcl
inc
shrl
xor
rcrb
xchg
jmp
movsl
scas
jl
cwtl
xchg
pop
and
or
data16
loopne
pop
jnp
lahf
inc
mov
pop
addl
std
sbb
cmp
pop
fnsave
adc
pop
xor
pushf
push
mov
and
in
push
mov
sub
aaa
inc
fcompl
adc
inc
jecxz
mov
and
mov
or
adc
shlb
xchg
jno
cmp
add
loop
aam
sub
xchg
arpl
je
sub
mov
gs
jne
imul
out
add
test
pop
insb
mov
sbb
and
push
pop
inc
mov
iret
lahf
out
test
repz
xchg
sub
add
aaa
push
push
test
lds
pop
add
je
nop
aaa
lods
pusha
push
ss
mov
cmp
or
xor
std
sub
xchg
mov
int3
cmp
push
jns
mov
aaa
pop
dec
adc
mov
dec
call
repnz
xchg
adc
or
sbb
adc
or
test
jl
mov
faddl
clc
andl
jb
movsb
hlt
pop
push
adc
sbb
push
mov
xlat
arpl
pop
popa
cs
jp
xchg
push
in
cmp
ljmp
pop
in
mov
imul
aam
xchg
cwtl
xor
mov
jl
or
sub
cmpsl
inc
xlat
sti
cld
pop
cmpsb
pop
out
jmp
stc
add
jecxz
pop
mov
rorl
xor
push
and
and
dec
sub
repnz
sbb
imul
xchg
push
orl
imul
sub
sub
jge
cmp
addb
pop
cli
mov
cmp
aad
ss
and
or
xor
jb
mov
outsb
mov
jae
cmpsb
inc
push
mov
mov
sahf
mov
dec
sahf
push
clc
mov
cmc
pop
jp
mov
mov
or
mov
or
scas
push
inc
fcomps
ret
xor
mov
psraw
or
jmp
mov
lock
push
mov
add
xorb
arpl
jmp
or
fwait
out
jmp
sbb
cld
imul
and
hlt
or
push
push
pop
in
pop
push
mov
pop
cltd
xchg
fcom
pop
push
enter
cmp
addr16
jno
sub
or
jecxz
scas
cs
lods
fsubl
dec
enter
stos
loop
notb
fisttpl
lock
lret
in
js
and
cmp
push
outsl
lret
mov
adc
arpl
lds
and
sbb
fisubl
mov
cmp
add
mov
pop
movsl
cmp
cmp
mov
cmp
mov
add
shr
rol
negb
in
lcall
jecxz
imul
xorb
mov
test
flds
adc
das
shll
lds
lahf
roll
pop
ret
mov
push
subl
rol
das
insb
lahf
testb
std
mov
sahf
ljmp
inc
pop
xchg
mov
jmp
rol
adc
dec
sub
mov
aas
xor
in
sbb
lods
xchg
push
pop
test
mov
adc
lds
std
inc
sub
aas
stos
scas
or
aas
outsb
cmp
cld
aam
jg
mov
lods
cmp
imul
fcmovbe
mov
in
fldt
aaa
mov
arpl
sub
testb
xor
and
jo
mov
ljmp
sahf
stos
lds
adc
or
dec
repnz
cli
pop
jecxz
xor
mov
incl
lcall
ljmp
cmc
mov
loopne
add
cmp
lahf
movsb
mov
loope
in
lock
xchg
loop
cmp
xchg
cltd
fdiv
push
into
shll
lret
lret
cmpsl
iret
loope
dec
cmp
stos
popa
das
push
sar
shll
ljmp
std
jb
push
out
xor
subb
shlb
pop
lea
xchg
jb
and
inc
push
xchg
jecxz
mov
dec
mov
mov
sub
vmptrst
movsl
fldcw
rclb
jmp
es
aam
insl
inc
int
call
inc
cmp
addr16
mov
popf
popa
lods
mov
fildll
or
cmp
sbb
push
mov
push
rcll
dec
cmp
and
clc
sbb
pop
xchg
stc
mov
mov
test
mov
push
ficompl
aas
push
ds
inc
dec
dec
cmp
mov
int3
mov
or
es
neg
cmc
adc
adc
push
mov
cmp
sbb
pop
sub
sub
fidivl
fists
repnz
pop
adc
xchg
push
xor
test
inc
or
mov
push
adcl
jp
clc
call
push
push
mov
fldcw
loope
lret
xchg
cmpsb
pop
xlat
pop
jg
xchg
mov
lcall
cvtps2pd
pop
and
adc
or
xor
ds
mov
orl
insb
hlt
std
in
cs
shrb
pop
push
cmp
movsb
inc
mov
mov
pop
mov
dec
shlb
and
int
adc
sub
shll
mov
dec
pop
pusha
jnp
andb
and
stos
xchg
pop
clc
pop
scas
push
and
stos
and
addb
cli
pop
pop
jo
xchg
ljmp
or
jp
icebp
sbb
xchg
sub
imul
sub
jmp
mov
ret
mov
push
inc
xor
xchg
xchg
sub
pop
mov
cmpsl
loope
mov
push
ret
out
hlt
jbe
fwait
in
or
sbb
pop
cmpsb
add
cli
hlt
scas
jg
dec
mov
push
cmp
addl
enter
jmp
in
sbb
cmp
roll
lods
popf
hlt
ja
int3
dec
mov
test
jbe
aas
int3
cmp
cli
pop
jno
insb
adc
inc
xlat
sbb
mov
or
insb
lcall
popa
in
femms
andb
lcall
dec
mov
jns
mov
xchg
pop
lahf
scas
stos
push
addr16
test
adc
aaa
cmp
jne
outsb
lds
arpl
ficomps
inc
pop
sub
sub
inc
hlt
mov
sbb
cmpsb
into
and
jbe
enter
mov
jnp
ret
cmp
pop
lahf
mov
xlat
outsl
sahf
out
movsl
lahf
add
mov
cmpsl
shll
xor
push
mov
int
push
lods
or
mov
pop
daa
xchg
mov
fldenv
sub
bound
sub
cmp
imulb
mov
mov
mov
pushf
sti
inc
xchg
or
sbb
mov
add
pusha
xor
fisttps
cmp
fisubrl
sbb
dec
push
xlat
push
mov
movsl
adc
cmp
lods
jge
mov
ja
lds
jl
ror
dec
jno
ds
mov
or
lds
enter
and
jecxz
cmc
or
testl
push
xor
or
test
notb
inc
mov
ss
jl
xor
mov
ret
jno
les
cmpsl
dec
and
xchg
shlb
insl
add
jne
pop
mov
sahf
mull
dec
cmpsb
mov
loopne
mov
movsl
pop
rcr
fcomps
cmp
push
push
push
in
sti
lret
mov
xor
negl
jp
mov
in
xchg
mov
sub
adc
mov
das
nop
test
fstp
inc
push
inc
mov
mov
nop
test
stc
xchg
fwait
jl
cmpsl
das
out
pop
xchg
mov
in
xor
enter
dec
icebp
push
dec
orb
adc
js
cmc
shlb
and
or
cwtl
mov
mov
xor
cmp
popa
adc
icebp
insl
mov
jae
aam
pop
xchg
call
pop
leave
or
cmpsl
insb
and
outsl
enter
mov
imul
aas
sub
dec
dec
mov
cltd
xor
pop
mov
dec
push
leave
fwait
outsl
popf
les
mulb
sarb
pop
call
and
leave
clc
out
add
xor
pop
push
or
daa
push
push
sub
sbbb
sub
addr16
das
int
dec
push
arpl
jns
xor
sarl
or
adc
pop
sub
or
mov
scas
xor
popa
cmp
add
out
into
dec
aam
jno
xlat
xchg
xor
adc
jle
jl
sub
xchg
test
out
fidivs
add
movsl
cmpsb
xor
adc
or
mov
mov
inc
mov
add
sbb
cwtl
mov
xor
dec
jae
cmp
push
mov
cld
repnz
adc
adc
cmp
xor
push
add
mov
adc
mov
adc
mov
addr16
inc
out
das
xlat
bound
pop
fsubrl
pop
mov
mov
ss
pop
out
movsl
jecxz
pop
fwait
mov
outsl
push
enter
sarb
lods
cwtl
insl
stc
sub
aad
xor
mov
dec
lds
fs
pop
add
push
cwtl
sbb
add
mov
cmc
sahf
ret
add
imul
push
push
insb
jae
or
dec
sbb
and
and
std
scas
and
mov
xchg
xor
sub
xchg
enter
xor
and
test
lea
cmpsb
jo
out
lea
xor
testb
clc
cmpsb
shlb
out
sbb
push
add
and
fstl
push
xchg
mov
aam
adc
sub
das
jno
ret
ds
test
clts
push
divl
es
add
js
dec
lds
rcrb
dec
mov
push
xchg
xchg
scas
pusha
insb
fcompl
lret
dec
xchg
std
dec
movsb
sti
or
push
mov
stos
and
shrl
mov
mov
and
clc
imull
insb
add
roll
test
lcall
adc
inc
mov
jmp
out
jg
ret
aad
inc
shll
jbe
mov
or
mov
pop
bound
push
scas
jle
push
sbb
mov
sub
dec
xlat
jns
xchg
jle
push
pop
pop
popa
out
out
jecxz
cmp
push
jge
or
push
lock
xlat
mov
pop
popa
adc
cmc
loope
mov
add
lock
ror
fwait
les
loope
test
jg
or
sub
inc
popf
shrb
add
int
xor
sub
lcall
in
add
xor
ret
andl
adc
jl
mov
push
jb
sbb
cmpsb
mov
fs
test
daa
repnz
loopne
cwtl
pushf
lret
mov
mov
out
jno
testb
test
imulb
pop
or
add
ret
jbe
ja
data16
add
mov
je
jp
iret
add
xor
sub
clc
pop
or
ss
andb
jp
cltd
inc
testb
negb
xor
std
dec
sub
enter
pop
repnz
xor
std
lcall
sub
dec
xchg
outsl
sub
xor
mov
mov
sub
push
popf
lods
xchg
inc
es
cld
movntps
in
push
popa
loopne
xlat
dec
out
add
adc
fcmovnbe
sarb
fxtract
xchg
xlat
stos
mov
outsl
or
cltd
ffreep
mov
sbb
xchg
pop
les
imul
repz
inc
ret
cli
repz
sbb
mov
xlat
mov
inc
mov
mov
rcrb
mov
jg
push
lea
sub
or
jmp
dec
mov
iret
sar
add
xor
mov
cwtl
mov
cmp
imul
testb
dec
and
addb
pop
pop
arpl
or
pop
mov
das
mov
scas
or
jl
dec
or
pop
mov
cli
sub
push
xchg
xorl
leave
inc
lods
add
adc
decb
subl
cwtl
push
push
aad
or
adc
xchg
pushf
mov
ljmp
or
jecxz
imul
inc
sahf
movsl
popf
out
lahf
cwtl
fcom
shlb
in
andl
push
lret
cmc
fs
xor
mov
dec
mov
aam
adc
cltd
lock
dec
outsl
inc
jb
lods
sbb
adc
lahf
loopne
adc
cltd
dec
xor
movsb
jb
cmp
push
inc
out
sbb
sbb
or
rcrl
jle
inc
mov
jecxz
xchg
add
loope
push
sub
jg
cmpsl
arpl
arpl
pop
sarl
rorl
pop
das
in
dec
loopne
pop
jmp
in
es
push
or
inc
inc
lcall
mov
mov
jbe
lock
hlt
and
out
test
jno
mov
push
mov
dec
in
loopne
lds
mov
repnz
cmp
lcall
rcr
jp
aaa
pop
lahf
inc
stos
or
dec
and
cmpsl
test
stc
xchg
mov
fcomp
mulb
inc
xchg
test
in
pop
push
ja
arpl
pop
out
adc
sub
cs
insb
popf
movsl
xchg
loopne
pop
repz
and
push
insl
in
push
je
sub
cs
and
and
inc
shll
or
cmp
sub
inc
push
jmp
sbb
mov
xchg
shlb
cmpsb
data16
movsl
shl
shrb
inc
mov
cmp
jmp
push
jp
pusha
ss
ss
sbb
pushf
sub
mov
and
outsl
subb
pop
inc
dec
cmp
pop
inc
es
xchg
shlb
inc
mov
sbb
dec
sar
into
les
mov
int
push
rcll
cmc
xchg
aad
mov
popa
into
mov
imul
mov
lea
mov
lods
bound
cmpsl
xor
or
cli
jbe
hlt
cltd
and
fucom
inc
imull
xchg
rolb
jno
je
cli
ljmp
stc
fidivrl
js
popl
inc
sahf
call
ja
cwtl
mov
dec
adc
adc
pusha
stc
add
imul
sub
xchg
jge
clc
ds
push
lods
sbb
test
push
jle
cld
push
das
inc
or
add
add
in
adc
lea
pop
stc
jnp
mov
add
push
fsubl
push
ds
add
psubb
aam
xchg
fwait
jne
mov
inc
mov
nop
leave
pop
bound
pop
into
mov
or
mov
mov
bound
pop
aam
add
arpl
jno
mov
jnp
mov
nop
out
inc
pop
lahf
jnp
movsl
jecxz
cmp
push
imul
lret
mov
adc
aam
fstpl
mov
push
mov
adc
mov
sarl
inc
mov
sub
cmp
test
insb
adcb
mov
ds
push
dec
adc
and
hlt
hlt
arpl
push
sbb
sub
sub
mov
sbb
test
mov
movsb
dec
add
loope,pn
dec
leave
xchg
loop
inc
les
xchg
push
xor
dec
add
jno
jle
ret
pop
push
inc
push
lds
cmp
arpl
mov
test
and
shll
mov
add
call
sub
lret
dec
xchg
scas
sub
out
or
pop
xor
push
in
fcmovbe
xchg
jns
outsl
pop
ret
cmc
sub
jns
stos
mov
add
and
inc
cmp
adc
sub
jb
call
inc
adc
push
mov
jp
out
jmp
data16
dec
es
insl
fisttps
xor
sbb
inc
cli
inc
inc
je
call
xor
movsb
pop
push
out
xlat
sub
and
inc
push
test
sub
cmp
lods
xchg
push
adc
xor
stos
jns
rorb
mov
xor
lcall
arpl
xchg
fucom
enter
imul
lds
sub
cmpps
test
neg
xor
loope
inc
sti
pop
jl
test
dec
int
adc
scas
sub
insl
or
mov
mov
jno
sti
ds
fadds
into
filds
aam
inc
sbb
sub
jge
out
fwait
sbb
push
and
xor
xchg
sub
cmp
das
and
cmpsb
aad
adc
cli
jne
inc
inc
sahf
insb
sub
sahf
cmp
add
icebp
xchg
lret
mov
push
cld
loopne
mov
int3
and
jle
adc
aam
call
insl
xchg
dec
insl
cld
jecxz
mov
pop
push
xchg
cld
inc
imul
add
mov
out
sbb
cmp
xchg
loop
xchg
jcxz
data16
push
out
pop
notl
loopne
mov
sub
pop
addr16
jg
add
ret
adc
adc
repnz
pop
xor
into
fistl
jns
or
jo
sahf
fsubs
jb
addr16
mov
fadd
cld
mul
call
mov
cmp
mov
int
loopne
mov
enter
ret
mov
call
cmp
bound
mov
mov
in
inc
sbb
nop
adc
int
mov
xorb
popf
push
scas
fisubs
sub
sbb
ss
pop
mov
daa
mov
inc
mov
jge
frstor
and
and
inc
imul
pop
mov
xor
in
push
cmp
or
pop
movsl
mov
mov
loopne
or
and
pop
cmp
mov
fdivs
insl
mov
inc
mov
pop
stc
imul
add
xor
xor
mov
pop
pop
pop
movsb
and
or
mov
inc
loope
sub
push
or
sbb
sbb
mov
or
push
ret
ds
mov
sarl
cli
mov
int3
sub
push
fnsave
fisttpll
pop
cltd
divl
dec
push
push
mov
ljmp
lret
mov
shlb
js
mov
cmp
aas
push
push
pop
out
lods
jge
push
pop
push
dec
or
and
rcl
mov
and
jno
pusha
test
movsl
xor
into
mov
push
popa
mov
stos
push
out
pop
mov
in
jp
or
fdivl
jb
aam
aaa
jnp
imul
fisubrs
pop
mov
rol
rsqrtps
dec
imul
mov
insl
pop
lea
das
mov
loop
lds
je
adc
jne
addl
loopne
add
add
xchg
push
sahf
aaa
lret
mov
gs
inc
imul
hlt
lret
inc
fdivl
adc
mov
xor
push
mov
adc
pop
cmpsb
xor
negl
and
int
out
push
outsl
and
cmpsb
cmp
imul
repnz
xor
push
xor
adc
jno
jge
jb
insb
sub
xchg
hlt
jp
xchg
aad
dec
cmc
lret
lock
imul
loope
cmpl
ljmp
jns
clc
in
mov
inc
sub
pop
hlt
pusha
nop
inc
sub
inc
xchg
in
jp
dec
cmp
inc
pop
lods
inc
test
mov
and
xor
xchg
gs
nop
mov
cmp
jmp
push
or
ret
pop
mov
iret
sub
je
adc
pop
cmp
push
and
xchg
mov
add
jae
sub
test
pop
cmpsl
pop
negl
xchg
nop
and
repz
add
push
inc
fidivs
pop
lock
lcall
movsl
aam
movsb
jae
push
xchg
pop
fildl
stos
jb
mov
cmp
xor
jge
add
rclb
xchg
test
xchg
mov
das
jb
sbb
rolb
xlat
cmp
and
push
mov
jno
test
fwait
out
in
mov
data16
mov
int
fbld
jo
push
or
jae
pop
inc
sti
pop
les
add
mov
test
lods
stos
test
xchg
shlb
cmp
xchg
mov
pop
mov
clc
pop
mov
add
or
stos
lods
mov
rcll
cltd
lret
cmc
adc
das
in
pop
in
adc
xor
lea
sub
je
lcall
jmp
or
adc
leave
xlat
popf
or
subb
pop
add
xor
pushf
jmp
jb
js
push
ja
ljmp
lahf
mov
cmp
jl
jbe
das
adc
mov
pusha
inc
push
out
cmp
test
and
xchg
enter
cmp
lcall
imul
stc
push
adc
rcr
fmulp
movsb
daa
fwait
jl
or
push
mulb
lahf
push
aam
pusha
int3
add
pop
shlb
iret
test
fisubrs
add
cmp
fists
add
jno
lock
adcl
std
fildl
jb
jae
out
bound
insb
push
lds
icebp
mov
outsl
imul
add
jbe
lahf
pop
cmp
xlat
or
inc
cmp
mov
jp
pop
aas
cli
push
inc
and
subb
jnp
inc
aas
pop
sbbb
sbb
iret
out
divb
addr16
xchg
cli
dec
mov
outsl
pop
into
push
mov
jge
mov
push
lea
out
xchg
push
mov
sbb
imul
pop
push
fstl
addr16
nop
mov
movswl
jno
inc
sbb
lea
je
shrl
ficoml
int
fbld
mov
mov
adc
push
or
mov
add
jae
loope
pop
cmpsl
scas
mov
lods
jle
cmp
push
jno
mov
bound
sbb
or
mov
leave
lds
lcall
shlb
add
imul
xor
rclb
shlb
cmc
into
adc
pop
mov
push
mov
test
fimuls
mov
add
mov
push
jl
push
xor
ret
enter
push
cmpsb
arpl
xor
orl
push
mov
pop
mov
outsb
leave
and
mov
xor
testl
out
push
ja
lods
lret
pusha
push
jnp
dec
test
and
popa
mulb
cltd
cli
bound
or
mov
mov
mov
movsl
lods
mov
ret
push
popf
lds
int
push
cmc
xchg
js
fbstp
mov
cmpsb
mov
mov
mov
pop
daa
mov
push
add
sbb
mov
inc
mov
pushf
movsl
sbb
test
ja
jge
rolb
adc
jecxz
in
and
inc
jmp
sbb
in
addl
stos
ficomps
test
mov
mov
call
mov
pop
jl
sti
cmpsb
aas
mov
out
jge
popa
test
or
movsb
mov
test
lcall
pop
push
xchg
sub
or
mov
pop
cmc
leave
xor
mov
pop
clc
rcrb
sbb
je
fsubs
sbb
test
ss
aaa
mov
pop
and
xor
inc
pop
push
fldt
je
cmp
mov
xchg
fs
pushf
xor
aad
lcall
shll
cmpsl
popf
test
xor
and
fimuls
clc
movsb
mov
ret
fs
mov
xor
test
iret
jge
ss
pop
jmp
push
ja
ds
outsl
mov
jle
dec
pusha
adc
xlat
xchg
rclb
jb
outsb
pop
outsb
adc
push
pusha
dec
jns
out
pop
mov
sbb
mov
add
fsubrs
push
push
fwait
sarb
mov
stc
out
pusha
lahf
imul
jle
lock
test
inc
gs
or
lret
repnz
xor
test
mov
lcall
dec
sub
rolb
dec
lea
pop
sbb
and
stos
mov
add
mov
mov
pop
mov
fcmovnu
addr16
test
jns
pop
shll
and
push
or
mov
mov
and
les
xor
xchg
push
push
sub
int
rcr
jecxz
fnstenv
mov
sbb
push
in
movsl
mov
sbb
or
mov
xor
test
adc
cmp
ss
lahf
arpl
leave
adc
xchg
jnp
push
insb
jle
mov
jne
mov
jp
push
lcall
cs
cli
sub
mov
jbe
ret
daa
adc
scas
inc
jle
add
sbb
ret
cmp
lods
fidivs
dec
test
mov
aas
mov
inc
out
enter
adc
jno
lods
in
cmpl
inc
or
pop
pop
pcmpgtb
and
sub
in
jle
lock
mov
je
sub
mov
shll
sub
sub
pop
push
pop
adc
jae
add
sbb
scas
xor
ds
dec
lods
loopne
rcrb
mov
mov
negl
loopne
push
xor
add
mov
movsb
test
xor
lods
in
ret
repz
shl
cmp
sub
imulb
mov
sub
sub
cld
test
xor
pop
jp
aas
cltd
test
test
sub
xor
mov
imul
jmp
fwait
popl
popa
mov
dec
pop
int3
ja
add
cmpsb
addr16
test
out
ficompl
add
leave
andb
pusha
test
loopne
mov
mov
mov
xchg
pop
lock
or
dec
mov
mov
add
add
sarb
push
jp
ret
dec
lahf
sbb
test
outsb
in
add
sbb
imul
mov
adc
enter
mov
stos
add
mov
pop
or
push
jle
mov
xor
jno
dec
mov
cmp
outsl
roll
add
jmp
mov
icebp
jg
pop
pop
or
cs
push
pop
fs
fists
pop
push
sahf
pop
test
aam
inc
jo
cltd
stos
dec
mov
lds
cltd
mov
neg
popf
jmp
dec
test
cmp
pop
push
pop
sti
sub
jle
mov
push
std
inc
pusha
outsl
les
inc
inc
cmp
in
adc
push
dec
pop
push
ljmp
xor
out
mov
popa
lret
pop
sarb
cld
pop
dec
ret
add
xchg
adcb
cmp
xor
jbe
cmpsl
cmp
xor
pop
dec
and
sar
xchg
mov
mov
mov
mov
push
fwait
addl
repnz
pop
jo
inc
loope
arpl
push
push
test
dec
mov
out
push
and
mov
add
mov
cmp
mov
or
dec
addr16
adc
lret
dec
add
push
mov
cmp
push
dec
pop
mov
jnp
push
ss
push
xchg
mov
icebp
dec
inc
popf
daa
mov
out
add
sahf
cmpsb
adc
inc
in
mov
sbb
xchg
xchg
sbbb
pushf
pop
lea
loop
xchg
cmpsl
stos
xor
popf
adc
out
and
fcomip
xchg
ss
mov
cmpsl
ret
shrl
imul
stos
push
stos
fldcw
rorl
mov
sbb
inc
jbe
lcall
inc
fnsave
adc
mov
push
sahf
ljmp
outsl
mov
outsb
xchg
xchg
inc
nop
cmc
jg,pt
xchg
dec
ficoms
cmpsb
jecxz
dec
push
inc
or
pop
addr16
fidivrs
cltd
fldcw
stc
lahf
mov
dec
sbb
sub
push
adc
inc
xor
out
mov
inc
sbb
ficoml
icebp
fisubl
sub
add
lods
aaa
add
pop
pop
sub
outsb
fnsave
or
daa
sbb
test
jnp
pushf
les
dec
rorl
repz
sbb
lock
insl
xor
pop
in
sub
out
lods
mov
jg
out
or
mov
movsl
aam
int
and
mov
inc
mov
push
ljmp
in
jnp
adc
es
loop
jbe
sub
mov
fldl
fwait
push
jne
cmpsb
and
mov
shll
mov
mov
or
ds
cmpsb
pusha
aad
bound
fisubs
std
and
scas
loope
mov
mov
movsb
lods
inc
push
lods
mov
mov
pop
push
ja
sbb
adc
popl
sbb
hlt
sbb
sar
mov
sti
rorl
mov
adc
or
andb
dec
jns
enter
mov
mov
mov
imul
pop
jp
pop
sahf
loope
scas
xchg
loopne
in
jle
pop
imul
or
mov
mov
and
lcall
dec
iret
inc
and
mov
sub
nop
push
pop
repz
push
lret
std
push
mov
pop
sub
jl
lea
sub
imul
cmp
sbb
loope
cmp
inc
mov
pop
lret
inc
icebp
mov
inc
sub
mov
dec
and
mov
icebp
or
mov
xor
xchg
fsubs
mov
jno
nop
movsl
pop
pop
dec
push
sbb
popa
mov
mov
mov
in
xchg
push
mov
inc
adc
mov
mov
aad
mov
xchg
pop
push
and
test
mov
addb
lock
mov
sub
sub
dec
add
aam
mov
cmp
or
mov
enter
mov
xor
sub
inc
mov
mov
or
add
test
adc
out
dec
jge
push
mov
xchg
incl
iret
add
dec
push
sahf
lea
fcoml
out
jnp
shll
mov
pop
inc
sbb
mull
or
loope
sub
lret
adc
test
push
sbb
dec
jmp
aaa
xchg
jnp
xchg
pop
jl
cltd
mov
sub
and
int
mov
jg
cwtl
inc
and
loopne
addr16
xor
insl
jb
jg
je
rorl
imul
inc
cli
loope
pop
adc
jo
mov
add
int
imul
roll
cmpsl
lahf
les
rclb
jns
push
inc
pusha
cwtl
pop
sub
or
xor
aas
sub
cwtl
in
xchg
cs
xlat
mov
in
adcb
les
shll
jbe
ja
std
sub
cmp
stos
add
pop
popa
lar
push
inc
and
add
ja
lret
int3
add
nop
sub
test
jl
out
mov
and
inc
in
sub
repnz
dec
mov
lcall
pop
scas
rclb
stos
adc
fcomps
sub
push
and
xchg
xchg
scas
pop
adc
arpl
je
xor
cmc
push
mov
comiss
imul
int
fstl
dec
push
adc
repz
mov
push
mov
adc
mov
mov
out
sub
push
and
shlb
pop
dec
inc
test
fwait
pop
and
scas
pop
es
fs
push
pushf
push
cmpsl
jne
das
push
adc
and
leave
ja
mov
jecxz
xchg
jno
pop
inc
les
sub
inc
out
add
add
das
lahf
sarl
gs
xchg
and
mov
lods
sbb
pop
add
iret
pop
xchg
and
shlb
clc
ds
dec
sbb
lahf
mov
insb
popa
inc
rcll
popa
pop
lock
loop
and
dec
cwtl
xchg
add
xchg
aaa
dec
les
xor
cmpsb
jo
jne
mov
inc
adc
pop
jle
push
insb
jmp
sub
aaa
cmp
bound
dec
sbb
jecxz
dec
mov
adc
sahf
push
mov
outsl
xchg
in
sbb
push
pop
sub
xchg
adc
aam
jge
push
mov
cld
arpl
movsl
dec
sbb
jle
mov
fstps
data16
shl
cli
aaa
and
pop
fistpll
mov
push
sub
mov
fidivrs
ret
adcb
aas
fwait
icebp
test
sbb
jmp
sub
xlat
cmc
dec
out
push
push
leave
ljmp
in
and
sbb
aas
mov
in
or
fnstcw
lcall
repz
push
iret
daa
int
hlt
repnz
xstore-rng
cmpsl
adcb
jb
in
sub
dec
jns
push
aam
cmp
xor
ljmp
lahf
popa
or
mov
sub
pop
shl
outsb
sbb
xchg
mov
xor
jo
sub
and
mov
cwtl
jmp
jne
rol
hlt
imul
lcall
outsl
test
daa
fcomip
or
scas
pusha
pop
shr
aas
pop
jle
test
push
shll
shr
in
push
sub
or
fldl
fists
xor
scas
bound
add
add
subb
cmp
jne
cmp
js
dec
sub
inc
and
or
adcl
inc
mov
insb
xor
in
pop
cmp
icebp
lds
xlat
out
jb
mov
lds
dec
jae
lret
fldcw
scas
insb
sub
fdivs
xor
sub
in
push
pop
or
pop
scas
mov
push
or
cld
xchg
pushf
push
lods
jae
cmp
ja
jmp
lea
dec
sbb
es
mov
std
pusha
dec
icebp
int
lcall
sbb
stc
mov
aad
push
inc
pop
repnz
push
mov
jnp
shlb
cmpsb
out
aam
out
insb
les
fwait
sbb
xor
push
xchg
fistps
arpl
jl
mov
mov
sbbb
shrl
sub
pop
sub
std
popa
dec
or
add
mov
shrl
stos
push
dec
frstor
or
aas
cmp
sahf
clc
adc
out
xchg
sub
lgdtl
movsl
or
pusha
inc
gs
adc
push
in
pushf
add
cmp
xchg
mov
sbb
cmp
sbb
orl
push
mov
lods
or
xchg
out
stos
pop
mov
adc
jae
and
int3
mov
xchg
decb
faddl
lret
stc
and
mov
cmc
sarb
dec
push
pop
sub
outsb
rcrb
dec
mov
imul
mov
adc
dec
loope
sbb
mov
xchg
fcoms
add
fidivrl
pop
icebp
inc
dec
mov
test
das
pusha
sbb
or
gs
jg
lea
daa
or
lock
and
stc
loopne
mov
and
lods
imul
int
mov
scas
test
enter
pop
pop
jl
lea
js
jecxz
inc
inc
jns
adc
jp
jle
mov
movb
adc
std
in
jp
push
xor
fcoms
dec
test
jecxz
stos
and
divb
mov
or
cs
cmp
fstpt
ds
sub
std
adc
inc
inc
iret
sbb
mov
imul
outsl
cmp
pop
dec
and
pop
ficoms
pop
hlt
repz
xor
adc
cli
and
test
lock
out
push
add
adc
or
xchg
dec
imulb
ret
out
out
shrl
shr
or
mov
push
xchg
lods
inc
das
and
test
mov
scas
mov
xor
jbe
sbb
inc
enter
and
pop
xor
mov
fstps
lods
dec
push
mov
adc
mov
fisubl
bound
jl
jae
sbb
or
lret
add
pop
add
cmpsb
jle
sbb
jmp
sub
push
jno
icebp
pop
decl
push
xchg
jbe
ljmp
cmp
std
pusha
daa
inc
xlat
add
out
hlt
es
pusha
xor
inc
inc
mov
pop
mov
jle
test
jmp
and
mov
jae
inc
aas
lret
mov
adc
fwait
cmp
out
shr
mov
fwait
push
adc
or
mov
mov
hlt
popf
rcrl
mov
in
jne
xlat
inc
dec
jmp
aam
ss
notb
and
aaa
mov
sbb
adc
adc
inc
outsl
jne
cmp
icebp
in
jo
xor
sub
lock
jg
out
mov
int3
add
sub
push
ss
mov
inc
mov
aam
repz
xchg
lcall
pop
or
mov
pop
mov
fwait
pop
cmp
js
popa
iret
push
fisttpl
mov
lock
outsb
mov
dec
lret
mov
jno
adc
cmp
loop
dec
out
mov
sbb
cli
jno
inc
mov
orb
test
adc
ds
mov
inc
icebp
rcr
jge
andl
test
in
sar
shlb
sarl
push
leave
bound
dec
out
sbb
fsubrl
jnp
cltd
and
mov
push
xchg
xchg
test
pmaxub
inc
test
adc
in
push
push
xor
adcl
jnp
lods
pusha
and
sub
jmp
mov
jne
cmc
xchg
inc
inc
pop
jnp
mov
jno
clc
push
popa
push
sahf
or
add
inc
push
add
cmp
lea
sub
cld
jl
and
xor
cmpsl
push
std
lock
int3
aad
iret
addr16
imul
cmc
sarb
or
fs
lret
mov
adc
mov
cmpsb
pop
inc
cmpsl
cmp
push
inc
outsb
call
and
push
aas
es
and
test
mov
dec
dec
push
aas
pop
leave
pop
mov
xlat
fdivr
cmp
or
out
sub
and
jg
aad
out
inc
shr
push
mov
imul
adc
mov
subb
jcxz
xor
xchg
imul
fs
xor
jg
insl
imul
movl
xchg
inc
sbb
lds
push
clc
add
sbb
mov
mov
jno
frstor
mov
add
push
pop
enter
out
dec
repnz
sbb
jge
mov
fs
mov
mov
xchg
insb
jae
pop
int3
pop
ljmp
xchg
adc
iret
sub
lret
aaa
push
jecxz
add
out
or
mov
sbb
popf
xchg
xor
sub
pop
fildl
xor
jb
add
sub
lret
scas
mov
adc
ret
pop
sub
jb
or
aam
setl
call
dec
or
movsl
or
inc
popa
adc
in
add
pop
aas
xchg
jb
jg
add
clc
pushw
jae
ja
sbb
pop
or
int
and
hlt
add
cmc
push
sbb
cmp
xchg
jl
inc
push
sbb
cmp
mov
ja
push
or
dec
push
stos
fstps
sbb
and
sub
or
fcomip
jg
mov
and
gs
add
and
adc
mov
adc
movsb
iret
push
mov
xchg
daa
cmc
jge
dec
or
sub
dec
sarl
pop
mov
sbb
lret
jle
adc
dec
cmp
aad
test
lea
outsb
in
adc
fstpl
repz
or
cmpsb
stos
adc
inc
jno
and
cwtl
fadds
mov
and
mov
sbb
fwait
and
dec
mov
test
outsb
mov
in
jp
filds
sbb
xor
push
scas
lods
adc
ja
out
ret
inc
into
movsl
js
cmc
cli
jle
ret
xchg
test
leave
subl
xchg
push
iret
mov
insb
adc
add
or
or
push
adc
pop
mov
cwtl
adc
dec
adc
sub
xchg
xchg
xlat
jmp
and
sti
jb
and
mov
add
out
sbb
adc
in
icebp
or
jns
ljmp
inc
xor
mov
xchg
dec
mov
sub
xor
arpl
in
dec
xchg
outsb
repz
orb
adc
in
inc
mov
cmp
daa
mov
test
mov
fcoms
jb
shlb
subb
popa
je
mov
add
inc
into
nop
xchg
shl
mov
lds
mov
test
int3
fistps
scas
ljmp
stc
add
daa
shrb
xor
shr
movsl
pop
std
pusha
xor
sub
push
mov
idivb
xchg
enter
lret
xor
sbb
xchg
mov
pop
inc
hlt
cltd
shlb
cmp
add
sub
and
fs
jae
movl
lods
je
sub
fsubrp
aaa
movsl
jb
roll
loopne
mov
repnz
loope
ss
mov
mov
popf
enter
mov
cmp
sbb
cmpsb
inc
out
push
es
and
add
jae
mov
mov
add
push
mov
in
rorb
dec
sub
pop
mov
xlat
mov
in
iret
push
jo
dec
dec
orb
adc
hlt
pop
data16
call
lahf
xchg
pop
and
mov
push
mov
lcall
dec
popa
out
stc
fs
jge
aam
adc
cmp
in
adc
shl
cmp
and
fldl
push
inc
mov
movsl
sbb
sbb
jnp
in
mov
sahf
inc
mov
jle
out
dec
adc
pop
xor
lret
cmpsl
mov
jmp
lock
cmpsl
and
arpl
mul
repnz
push
dec
push
mov
lret
xor
mov
loop
mov
outsb
mov
xchg
test
cltd
int
shr
cwtl
xchg
ljmp
mov
test
decl
out
jno
sti
in
fcom
inc
jg
scas
xorb
in
stos
clc
adc
sbb
jge
in
stos
shlb
cs
test
aas
in
sbb
push
stos
dec
xchg
mov
mov
pop
adc
mov
jae
and
daa
das
dec
lea
xchg
mov
push
and
xchg
jmp
mov
lcall
nop
imul
dec
mov
lret
cmp
adc
dec
and
out
mov
mov
test
outsb
pop
leave
mov
lret
loop
mov
cmpsl
ror
fiaddl
fwait
mov
fiadds
xchg
stos
ljmp
mov
lret
pop
adc
lcall
xchg
push
nop
fildl
mov
idivl
dec
add
sub
movsl
push
loop
paddb
dec
and
mov
sub
adc
inc
mov
cmp
pop
adc
push
inc
inc
popf
xchg
jmp
outsl
leave
sub
inc
jecxz
shrl
xchg
push
mov
fmuls
and
mov
pop
out
testb
and
aam
mov
ret
pop
sub
lds
xchg
scas
add
sbb
dec
test
cmp
lret
lods
lahf
xchg
xor
jo
mov
dec
mov
sti
cmp
bound
test
out
enter
imul
movsl
mov
pop
jmp
mov
jp
negl
iret
mov
aad
int
sbbl
je
repnz
mov
icebp
call
ljmp
outsb
push
sbb
xchg
scas
add
pop
push
and
mov
sbb
mov
or
negl
jle
scas
pop
cmpsl
push
pop
fsts
lahf
lods
jg
jle
pop
xor
sbb
pop
pop
pop
push
jmp
and
std
int
cs
mov
mov
mov
lret
idivb
dec
rcrl
push
outsb
int
cmpsl
inc
cmpsl
mov
in
addr16
mov
mov
jb
gs
adc
xchg
or
int
push
popa
fdivp
mov
cli
or
insl
xlat
pop
popa
lods
out
sub
adc
pushf
cmpsb
lret
out
test
cmp
mov
jae
mov
test
stc
rcrl
pop
jg
xchg
movsb
dec
ja
inc
ss
out
xchg
jg
sbb
scas
subl
push
adc
inc
jno
movsl
mov
dec
adc
insl
cwtl
jge
loop
outsb
mov
lahf
pop
jo
outsb
mov
roll
and
pop
gs
sub
add
mov
push
fwait
adc
mov
mov
sub
mov
or
xchg
nop
idivl
sbb
cmp
jno
enter
mov
adc
sbb
fcoml
popf
loopne
mov
lret
in
fnstsw
push
lret
xor
test
and
xchg
mov
jl
mov
in
in
push
xor
ds
mov
imul
adc
out
je
insl
xor
push
out
sub
adc
mov
mov
jne
arpl
scas
xor
cmp
mov
or
stos
cmpsb
push
mov
bound
sbb
mov
lahf
jp
dec
adc
dec
push
dec
es
scas
jo
movsl
ss
dec
xchg
jnp
shl
and
or
mov
loope
jle
mov
insb
fs
dec
inc
lcall
jnp
adc
cld
dec
cmp
lods
sub
mov
inc
daa
or
xor
add
leave
xorb
adc
jle
dec
popa
jle
cmpsb
nop
push
lahf
xchg
ja
add
fimull
adc
cmp
insl
or
dec
jae
aam
std
fucom
dec
imul
inc
aas
lcall
insb
subb
int
sbb
or
test
pop
dec
lret
xor
pop
or
or
mov
pop
stc
pop
jnp
lea
loop
push
push
adc
dec
xchg
test
push
out
jns
je
int3
dec
lret
out
mov
das
mov
push
loop
adc
daa
scas
test
or
rcrl
scas
pop
and
std
and
pop
in
mov
fwait
iret
pop
sti
rcll
add
jecxz
clc
rcrl
cld
fbld
mov
pop
or
out
bound
pop
aad
xchg
notb
dec
cmp
sub
push
mov
ljmp
out
popa
insl
lretw
xchg
pop
inc
adc
fistpl
imul
ror
sbb
div
dec
inc
test
sub
shl
fpatan
sbb
dec
pop
sub
nop
outsb
sahf
scas
pop
in
clc
push
std
repnz
sub
mov
stc
lods
inc
fidivl
push
out
or
cld
push
pop
daa
xchg
sbbl
mov
dec
sub
and
imul
mov
mov
mov
fdiv
les
inc
cwtl
leavew
lcall
cmpl
and
add
out
scas
je
nop
inc
and
cmp
xchg
inc
call
imul
imul
fcomps
or
jne
orl
iret
sbb
xchg
rcl
jnp
xchg
cmp
add
push
cmp
lret
movsb
aaa
aad
out
push
fwait
sbb
add
dec
xchg
enter
xchg
hlt
mov
cmc
sbb
ret
es
loop
lahf
js
into
pop
lret
es
adc
test
ss
dec
sbb
es
sbb
jmp
cmc
sbb
je
xor
ficoms
aaa
xor
add
sbb
push
mov
test
loope
pop
in
push
dec
adc
incb
gs
movl
data16
in
cmp
hlt
push
mov
insl
fldt
pop
addr16
xchg
xchg
sar
push
xchg
push
int
mov
mov
xchg
mov
add
ds
into
xlat
out
cmp
sbb
add
popf
sti
cmc
xchg
adc
adc
ja
cmp
pop
adc
push
cld
lods
rcrl
mov
adc
bound
push
shl
inc
shll
enter
push
inc
pop
and
xchg
decl
pop
pop
xor
shrb
call
dec
jmp
xor
lret
mov
aam
stos
sbb
add
fadds
cmc
inc
sub
dec
int3
dec
sbb
adcb
mov
test
jecxz,pn
out
dec
dec
push
dec
xorl
je
xchg
dec
inc
fwait
mov
call
xor
cld
cmpsb
mov
pop
mull
push
mov
mov
cmpsl
sub
xor
psllq
push
adc
outsb
cmpsl
inc
inc
ret
xchg
xlat
in
sbb
nop
mov
inc
cmc
push
ret
add
lods
jb
sahf
xchg
sub
shlb
popf
mov
add
bound
pusha
adc
mov
nop
cs
notl
and
push
inc
scas
lock
mov
jmp
pop
and
and
mov
outsl
ss
sbb
in
fmulp
pusha
pusha
in
clc
xchg
jecxz
xchg
popf
fs
mov
mov
cmpsb
lret
mov
inc
adc
xchg
xor
shl
sbb
sub
xchg
adc
push
hlt
jne
insl
pop
inc
in
jle
and
out
add
jecxz
mov
cwtl
insl
mov
repnz
std
ret
or
xchg
int
pop
push
and
push
testl
and
jns
sub
ret
cmp
lds
push
push
xor
aaa
push
sub
test
les
mov
lcall
xchg
xor
int
or
adc
push
mov
push
cwtl
jecxz
mov
xchg
loope
fwait
push
cwtl
xor
xor
scas
mov
add
pop
push
or
in
mov
aaa
idivl
jg
dec
adc
push
test
add
js
sbb
inc
inc
cmp
addr16
push
lcall
push
inc
mov
imul
insb
and
xchg
fisttps
clc
popa
push
xlat
in
test
mov
loopne
es
jns
sbb
imul
ljmp
jecxz
fstpt
pop
scas
push
mov
xchg
mov
add
outsb
stc
insb
sub
push
xchg
xlat
mov
adc
outsb
enter
je
testb
sub
dec
setns
in
mov
push
lods
mov
ret
or
addr16
das
mov
loopne
inc
mov
out
shll
inc
stos
mov
mov
mov
test
ljmp
repz
push
insl
xor
rclb
pop
lcall
sub
pop
push
sub
scas
fdivl
mov
sub
fnsave
aam
fcmovnbe
xchg
push
fsin
insl
dec
and
popf
pop
adc
pusha
inc
lret
mov
cmp
inc
jo
mov
add
addl
xchg
repnz
pop
aam
dec
faddl
fistpll
mov
aaa
dec
jecxz
mov
jp
xchg
cmpsl
aad
dec
mov
cld
scas
mov
fbstp
pushf
sti
push
jb
push
cld
pop
push
dec
jmp
cmp
lahf
adc
cmp
pop
pop
lcall
dec
cmc
out
lahf
sbbb
je
cmp
cmp
push
lods
and
mov
js
cli
pop
dec
int3
lds
jbe
sub
outsl
push
cmc
pop
lods
in
inc
loopne
ljmp
jbe
adc
std
xor
jnp
aas
lods
mov
add
jmp
pop
mov
push
xchg
mov
pop
cmp
and
loop
and
xchg
inc
fsubrs
fwait
lock
rcrl
loop
cwtl
fdivrp
in
jg
out
cmc
lcall
fadds
add
fstp
je
mov
loope
pusha
sbb
dec
imul
dec
leave
std
test
add
adc
inc
outsb
aam
aad
pop
push
fstl
and
outsb
push
dec
test
or
repz
mov
jle
jbe
rorb
pop
rol
cmpsl
sub
ret
xor
mov
insb
dec
inc
jle
mov
iretw
testb
xchg
lock
or
loop
aam
iret
pop
mov
pop
inc
mov
xchg
inc
cmp
aam
jmp
lds
or
jg
aas
adc
cmp
xor
push
mov
cmpsb
ljmp
test
jge
mov
adc
imul
or
dec
stc
mov
addl
or
mov
xor
inc
pusha
bound
dec
dec
rcll
sub
cmpsl
jl
fcomp
jns
cmp
std
pop
hlt
repz
xchg
push
jnp
mov
js
add
adc
xchg
mov
int3
dec
ljmp
out
in
jl
push
add
ret
and
mov
call
dec
cmp
cmpsl
inc
or
push
push
mov
rol
xor
ret
adc
xor
mov
loopne
xchg
push
inc
gs
add
mov
push
and
pop
mov
pusha
pop
jae
cli
or
cmc
sub
movl
in
and
inc
mov
push
outsb
js
pop
dec
mov
mov
jo
mov
fdecstp
rcrl
pop
cmpsl
push
xchg
sub
pop
pusha
mov
cmpl
jb
test
ja
inc
add
jae
xchg
push
in
rorl
es
or
ss
test
insb
mov
xor
sub
adc
sbb
std
sbb
sar
xor
jbe
aas
scas
pop
jle
cmp
mov
cmp
int
mov
push
clc
push
loope
mov
cmp
mov
adc
movsb
jg
and
or
imul
bound
mov
rcrb
adc
or
push
xchg
lea
add
push
inc
das
mov
push
movsl
stos
inc
xlat
jp
xchg
and
jo
xchg
int3
fistl
and
add
adc
pop
ret
pop
push
push
pop
pop
jnp
insb
out
pusha
lret
aad
inc
mov
add
xor
daa
sbb
push
adc
inc
xchg
and
inc
push
dec
scas
sbb
dec
pop
jae
sub
or
incl
dec
js
icebp
jmp
dec
and
imul
mov
add
insl
push
mov
or
dec
sarl
jle
ret
testl
int
or
movsl
movsb
ror
outsb
rcrb
jmp
roll
xor
movsl
fnsave
adc
addr16
fwait
movsl
add
popf
repz
enter
add
xchg
mov
scas
mov
sbbb
cmp
push
mov
mov
popa
lock
aaa
ret
inc
and
cmc
movsl
test
cmpb
int3
adc
orb
mov
xchg
call
mov
or
jge
add
cmp
lds
xchg
pop
xchg
subl
inc
incl
scas
stos
xchg
inc
jle
int
loope
int3
std
sbb
cli
loopne
orb
data16
or
jb
dec
insb
or
sub
push
add
xchg
inc
sbb
ds
xchg
pop
mov
push
clc
inc
and
cld
out
or
push
stos
ret
pop
int3
jbe
scas
pop
iret
pop
and
mov
pop
sbb
sub
mov
in
mov
lret
ret
lods
int
fstpt
fs
adc
out
cmpsb
ja
jl
adc
movsl
cmpsl
lock
scas
mov
mov
xchg
rclb
scas
daa
mov
mov
fisubl
movsb
cmpsb
adc
and
push
cld
jo
sub
xorl
sbb
in
pop
jno
sub
pop
fldenv
mov
jge
int
ja
and
nop
adc
and
jae
push
cwtl
or
rol
lods
movb
pop
mov
or
scas
insb
mov
push
pop
cmpsb
int3
aad
jge
xchg
pop
dec
loope
mov
push
xor
das
in
movsl
bound
data16
cld
lret
mov
mov
inc
add
fidivs
push
jmp
insb
mov
mov
stc
xchg
adc
popa
clc
mov
dec
push
or
popa
push
push
daa
sub
repz
cmp
loop
adc
xor
sti
outsl
cmpl
xor
clc
push
push
mov
pop
or
adc
mov
pop
mov
push
icebp
imul
adc
inc
push
sbb
jnp
push
jns
lcall
push
cmp
dec
ret
jg
mov
push
adc
or
push
rcrl
aad
jle
inc
test
sbb
mov
aas
mov
mov
push
mov
cmp
push
jbe
sub
aas
icebp
sahf
sub
sbbb
cwtl
insb
test
mov
or
daa
xor
aas
scas
sbb
mov
add
call
das
fdivrs
test
sbb
imul
sbb
jge
dec
loopne
repnz
pop
imul
pop
jb
pop
cmovae
leave
imul
mov
inc
xchg
aam
jp
sbb
adc
add
loope
xor
adc
int3
int
mov
inc
and
jg
jg
sub
push
mov
das
in
fidivs
jp
jmp
sub
push
fcoms
dec
cmp
xchg
dec
das
subl
ljmp
pop
fsubrs
add
mov
dec
fcomip
lret
insb
sbb
xchg
push
movl
js
sbb
add
loop
fwait
pop
mov
push
add
inc
int
imul
xorl
sub
aam
mov
add
mov
mov
data16
push
or
out
cmp
stos
pop
scas
dec
mov
add
mov
in
pop
inc
mov
dec
out
test
xor
ret
pop
orb
pop
mov
adc
hlt
ficompl
adcb
popa
into
dec
jno
adc
cmp
cwtl
lret
cmc
sub
dec
jo
mov
inc
cmpsb
inc
mov
sub
push
push
enter
lcall
fists
lods
xchg
add
adc
in
add
or
shrb
sbb
mov
es
lods
dec
jns
pusha
mov
push
jb
add
cmp
mov
cld
jge
ds
mov
lock
jne
rorb
fsubl
xchg
addb
jbe
mov
jnp
mov
mov
lahf
int
int3
xchg
orb
std
xchg
sbb
xor
out
fcmovbe
inc
xor
push
inc
or
clc
out
dec
jmp
mov
ds
inc
in
jb
pop
mov
icebp
lea
mov
adc
fsts
scas
mov
jo
movsb
sarb
jne
inc
cmp
cmp
cmp
inc
popa
sub
xchg
les
subl
push
cmp
inc
xchg
jmp
mov
movsb
add
push
cmc
popf
mov
in
lea
and
nop
push
and
jle
inc
cmpsl
imul
insl
insl
jmp
ret
fists
lods
fidivl
in
outsb
das
push
add
add
rclb
sub
mov
pop
xchg
sub
out
test
lods
test
movsb
mov
dec
pop
lea
add
in
in
jb
insb
out
aaa
cmpsl
and
and
insb
adc
push
dec
and
push
mov
inc
sbb
add
in
lea
cltd
mov
lock
scas
movb
xchg
mov
je
dec
insl
add
icebp
push
out
mov
or
loop
mov
sbb
push
or
enter
and
jmp
add
xchg
icebp
rcrb
pop
loop
adc
sbb
inc
addr16
sub
sbb
aas
xchg
iret
fsubs
or
cmp
insb
in
scas
inc
mov
mov
call
mov
sbb
pushf
stos
mov
pop
fildll
ja
ds
xchg
dec
cld
push
push
fidivrs
shrb
ss
xor
jle
mov
cs
je
clc
dec
mov
sbb
shlb
jg
or
mov
lcall
xchg
outsb
sarl
and
popa
stc
sahf
mov
test
sbb
movl
push
sub
lret
test
adc
aaa
adc
jg
mov
mov
in
sub
call
into
push
ss
pop
and
xor
adc
xchg
lea
lret
push
imul
decl
shll
dec
mov
lret
addr16
mov
dec
mov
nop
jo
incl
pushl
outsb
dec
mov
fmuls
stos
pop
es
dec
shlb
inc
ret
andl
mov
pop
aaa
or
testl
addr16
ret
mov
jo
push
out
lret
cmpsb
xchg
pop
das
fmulp
leave
daa
dec
outsb
lods
ds
push
lock
sbb
lock
cli
stos
into
int
cmpl
stos
sbb
xchg
pop
insb
cmpsl
cmpl
jecxz
and
jmp
outsl
scas
divl
add
xchg
mov
mov
xchg
mov
fs
cvtpi2ps
inc
mov
add
xchg
mov
lock
and
sub
mov
and
cwtl
adc
sbb
popf
and
mov
call
lock
lea
add
jmp
lock
aam
sub
and
imulb
xor
into
stos
in
lods
mov
push
cmp
jo
mov
cmp
cmp
pusha
repz
test
push
test
das
jle
push
ds
sub
pop
jne
mov
in
popf
pop
mov
lock
mov
addb
push
mov
sbb
lods
fs
in
mov
in
decl
pushf
mov
shl
lahf
es
or
pop
adcb
mov
loope
jne
xchg
popf
sub
in
xchg
outsl
mov
xchg
inc
lods
cmp
lds
aas
popa
sbb
cwtl
loope
inc
push
shll
sub
xchg
adc
push
test
negl
iret
aad
cmp
cld
sbb
adc
xchg
int3
cli
jmp
fstps
pop
sbb
cs
shl
addl
push
gs
movsb
or
leave
jecxz
jno
add
loopne
jne
aam
cmp
xchg
push
cmpsl
mov
or
inc
gs
loopne
fdivrs
jl
push
and
enter
test
mov
dec
jge
movsl
push
shrl
jl
mov
insl
ficoml
addr16
insl
fwait
jbe
arpl
mov
sub
test
mov
xor
fdivrl
sbb
add
pop
push
push
insb
inc
imul
aas
xor
pop
jle
and
mov
jnp
sub
dec
xchg
mov
fisubrs
nop
jl
aas
cmpsl
inc
test
lea
cmp
mov
rcll
int
mov
jnp
xor
arpl
pop
push
xor
xchg
mov
pop
mov
mov
mov
mov
mov
xchg
xor
jnp
clc
int3
cltd
xor
xchg
sub
jbe
sti
or
inc
repz
sbb
xor
sbb
or
mov
inc
call
mov
mov
js
or
inc
pop
ficomps
addr16
mov
mov
clc
pop
mov
or
out
test
call
into
mov
and
mov
shr
dec
push
gs
fs
xchg
dec
mov
inc
repz
and
lret
sbb
pop
xchg
dec
inc
mov
call
sub
sbbb
loop
add
and
xchg
adc
pop
or
jg
jno
in
push
es
js
movsl
ljmp
repz
mov
sub
jmp
je
aas
icebp
arpl
xor
inc
aaa
dec
mov
adc
mov
lret
ja
lock
fmul
xor
or
inc
jae
mov
rclb
rcrl
cmc
aam
inc
xor
cli
pop
jns
or
push
js
cmc
push
out
jcxz
out
movsl
ds
inc
inc
xor
jl
cmc
and
jmp
adc
addr16
mov
pop
dec
popa
icebp
dec
and
test
push
add
mov
or
in
mov
or
inc
lods
outsb
addl
pop
insl
stos
adc
lret
je
imul
add
sub
loopne
pop
cs
mov
jne
shl
cmp
cmp
jbe
xor
inc
pop
lret
pop
dec
mov
fdivp
or
ss
stos
sub
shlb
cld
mov
mov
mov
xor
pop
ror
push
in
xlat
mov
sahf
pop
repnz
mov
pop
sbb
push
push
sti
adc
inc
push
lret
shrb
cwtl
pop
push
arpl
or
pop
mov
xor
cmpsl
mov
jae
mov
cmp
inc
rclb
fxam
cmp
test
cmpsb
jmp
pop
in
xchg
push
mov
pusha
fisubs
ret
test
jmp
aas
nop
or
push
jbe
pop
mov
mov
push
xchg
pop
ja
jle
fdiv
repnz
pushf
mov
dec
jp
fcomps
cmpsl
icebp
jp
or
pop
pop
fidivs
xor
mov
jne
pop
mull
jno
dec
shrb
aas
push
mov
inc
inc
dec
jge
jle
ss
xor
jecxz
mov
test
shll
iret
imul
out
adc
lods
xchg
mov
inc
mov
mov
push
std
in
rolb
mov
pop
jl
and
push
dec
test
gs
xor
fsubr
hlt
mov
popf
push
jns
in
in
dec
movsl
mov
xchg
fidivl
dec
cmp
lret
cmp
ret
popa
pop
lret
outsb
cmp
bts
pushf
call
test
out
scas
pop
xchg
out
add
lock
enter
fisubl
insb
mov
pop
cmpsl
xor
dec
and
cmp
push
loop
pop
sti
ljmp
test
and
inc
sub
inc
dec
mov
xchg
inc
push
xchg
iret
cwtl
dec
data16
cld
sub
push
fistl
sub
adc
lahf
lret
adc
dec
fists
imul
imul
push
nop
sbb
add
ror
inc
enter
jl
sub
push
xor
fdiv
cmpsb
push
dec
mov
adc
and
repnz
imul
mov
and
fildll
cmpb
lret
cmp
cltd
xchg
test
push
movsb
insb
arpl
dec
push
pop
into
and
aam
push
xor
ss
rcll
mov
in
das
jo
mov
mov
fnstcw
fldcw
ret
mov
cltd
jmp
jns
jo
int3
inc
mov
ds
mov
dec
jnp
js
mov
jge
stos
out
mov
adc
ret
fisttps
lcall
add
cwtl
arpl
xor
add
inc
mov
stos
enter
aas
fsubrs
outsb
sub
pop
pop
xlat
lret
or
ret
sub
int
dec
out
cmp
sub
push
mov
push
xor
pop
mov
mov
xchg
mov
js
sbb
xchg
fisubl
fildl
ss
mov
in
lret
into
cmp
ljmp
or
imul
ds
in
icebp
insl
xchg
sbb
push
fldcw
add
inc
jne
jo
xchg
movsb
fistps
leave
mov
xorps
hlt
bound
mov
inc
fdiv
pop
cs
add
addl
sti
imul
iret
sub
and
ja
cmp
daa
push
xchg
popf
mov
adc
add
jae
gs
repz
in
mov
fcompl
sbb
int
imul
mulb
xchg
sub
aaa
add
fistpll
test
addr16
mov
mov
push
stc
sahf
faddl
mov
jo
lahf
notl
mov
pop
xor
sub
xor
cld
rclb
scas
lock
push
fsts
call
jbe
xor
popa
dec
inc
mov
test
sbb
inc
xchg
pop
sbb
inc
and
sbb
inc
cltd
cmp
cmp
shlb
lds
adc
xlat
cli
fs
mov
xchg
dec
dec
in
add
es
jp
cmp
je
insl
jo
mov
sbb
fiaddl
ljmp
fidivrl
or
rcll
mov
sub
add
lods
mov
rcrl
cmp
or
ret
je
lret
cmp
inc
pop
pushf
rorb
and
jecxz
int
mov
cltd
cmpsl
xor
xor
sub
int
arpl
ja
imul
lea
jns
aaa
out
cmpsb
lods
mov
mov
push
and
xchg
and
imul
mov
mov
fadds
mov
push
aam
lcall
popa
pop
sbb
ljmp
ret
jno
dec
mov
movsb
dec
adc
das
xchg
jp
jne
popa
scas
pop
jmp
and
nop
add
pop
in
mov
das
aam
out
lret
cmp
mov
pop
inc
adc
lcall
pop
fwait
out
movsb
mov
pushf
lds
mov
inc
jae
mov
cmc
mov
pop
sub
and
aam
add
sahf
int
and
dec
data16
pushf
aas
sub
fwait
mov
mov
popa
adc
sbb
aaa
loop
add
and
test
pop
ret
dec
push
sub
arpl
stos
leave
mov
mov
je
pop
cld
inc
sbb
mov
push
int
mov
cs
rcrl
aas
sbb
fistps
xchg
mov
in
aad
mov
push
xchg
or
pop
jbe
adc
lahf
push
adc
stos
adc
or
dec
cmpsl
fistpll
loop
cmc
cltd
mov
sub
mov
test
in
in
xor
loopne
aaa
and
mov
mov
loop
int
jl
sbbb
out
jp
ds
xchg
test
push
mov
sbbb
leave
sub
cmc
fldl2t
inc
mov
std
and
or
adc
add
fcmovu
mov
xchg
rorb
add
xchg
sbb
dec
enter
pushf
mov
fldl
adc
xchg
mov
or
add
enter
je
jbe
mov
mov
jg
jge
test
mov
sub
mov
cmp
scas
js
into
jmp
cmp
lcall
sahf
push
in
rorb
push
pop
add
dec
mov
subl
cld
iret
push
jge
cltd
js
jmp
aad
lock
add
and
push
shl
mov
jl
aad
xlat
lcall
std
or
loope
push
aaa
push
adc
jne
push
imul
movsl
cmp
outsb
mov
mov
outsb
inc
negb
xlat
push
xor
jnp
mov
ret
inc
mov
adc
and
icebp
xchg
jle
in
popa
mov
js
stc
aam
cmp
aad
adc
dec
scas
push
hlt
push
pusha
lods
ljmp
loop
sub
lea
dec
add
sub
lret
mov
out
jl
mov
loope
lret
nop
jns
hlt
cmpsb
out
sbb
mov
cmp
lods
int3
mov
push
leave
jecxz
dec
jno
sub
ret
das
pop
rolb
xchg
insl
add
push
inc
das
mov
int
jae
stos
movsl
inc
adc
ds
and
aad
lret
jg
pop
fwait
sbb
cmpsl
mov
mov
icebp
fdivs
add
shll
movsl
push
loopne
xor
cmp
xor
arpl
and
xor
mov
push
lods
jnp
es
inc
xlat
inc
lds
jno
pushf
cld
jb
mov
sub
arpl
arpl
mov
test
mov
dec
mov
iret
mov
mov
shl
lret
int3
out
mov
in
mov
adc
sbb
lods
xor
enter
and
and
or
shl
enter
xchg
mov
outsl
je
and
jg
and
push
jp
imul
xlat
xlat
sub
sbb
mov
sub
jne
mov
xor
pop
out
dec
sub
mov
lods
mov
insb
mov
or
popa
or
push
sub
int
mov
jmp
or
xlat
cmp
popf
fwait
cmp
fwait
or
dec
xor
and
pushf
and
fisubs
out
sub
shll
sub
fiadds
clc
rcll
dec
cmp
xchg
sub
dec
out
xchg
xchg
add
data16
mov
adc
push
or
push
dec
xlat
adcl
stos
into
pop
pop
stc
in
adcl
push
mov
sti
cmovg
jle
fsub
hlt
dec
mov
dec
stos
pop
or
test
xor
adc
xchg
jg
mov
hlt
and
sub
inc
sbb
hlt
enter
push
sti
call
mov
gs
cmpb
jb
and
iret
repnz
rcrb
push
xor
mov
cmp
or
ror
cmp
add
es
push
push
jnp
fwait
aaa
fstps
mov
iret
xlat
push
daa
cmp
test
pushf
ja
add
pop
sarb
imulb
dec
jbe
cmp
xchg
imul
pop
push
and
les
out
xchg
ficompl
push
sbbl
fildl
mov
push
insb
add
gs
sbbl
dec
xor
sub
push
cltd
jbe
test
jne
xchg
or
dec
adc
decb
pushf
jnp
dec
test
mov
out
mov
dec
xchg
jb
cmpsb
xorl
in
idiv
cmc
and
and
inc
mov
addr16
cmp
nop
outsb
push
jecxz
inc
in
mov
mov
xor
xchg
rolb
xchg
fucomp
push
and
sub
nop
test
mov
add
jo
inc
nop
sahf
xchg
shl
mov
push
mov
jmp
ret
rclb
arpl
push
or
push
mov
loope
inc
dec
insb
cmpsl
cmp
and
xchg
pop
js
subb
lods
dec
pop
xor
incl
inc
mov
fidivs
aaa
inc
mov
fistps
ffree
dec
lds
cltd
ror
int
scas
rolb
adc
fcoms
xor
sbb
adc
lahf
les
xchg
out
xchg
add
jecxz
out
inc
pop
insb
aad
mov
int
jmp
in
xor
aas
sub
cmpsb
loop
mov
int3
in
pop
fs
mov
xor
sbb
rcr
or
xchg
pop
cs
mov
addr16
cmpb
mov
dec
test
inc
es
frstor
aaa
mov
movsb
es
rcl
fiaddl
filds
mov
inc
out
bound
sbb
fisttpl
ret
dec
loop
lock
cmc
fcmove
and
shr
cld
add
mov
push
add
or
out
and
jmp
daa
mov
cmpsb
mov
mov
lret
insb
pop
add
lret
jmp
jnp
iret
mov
sub
xchg
cmc
clc
outsl
xchg
ljmp
lock
or
sbb
enter
cs
mov
push
push
pop
lds
mov
cld
add
jnp
mov
inc
pop
in
inc
je,pt
xchg
jnp
xchg
das
jg
ret
and
scas
out
adc
add
add
xor
inc
xlat
jp
push
ss
sub
jecxz
dec
sub
adcb
divl
cmp
mov
jns
adc
mov
addr16
mov
add
push
fwait
jae
add
les
ret
xor
cs
pop
lea
adc
lods
sti
ja
or
sbbl
repnz
test
shrb
lock
lods
insl
lods
dec
neg
push
sub
shrb
mov
frstor
push
packuswb
shll
add
jnp
dec
rcrl
inc
dec
mov
fucomp
lret
test
xchg
test
imul
mov
inc
int3
xor
incl
lcall
inc
mov
mov
int3
jns
scas
and
fsubl
sub
pusha
imulb
adc
lods
les
jmp
aam
int
sahf
aad
addr16
jp
push
inc
inc
mov
rorl
aas
or
xorl
xrelease
and
inc
pop
fbld
mov
and
into
and
jno
mov
movsb
sarl
mov
stos
hlt
mov
cmp
in
fsubl
mov
push
push
mov
lcall
cmpl
mov
jge
add
hlt
sbb
push
jo
cmp
mov
cmp
aad
push
icebp
sbb
push
notl
push
cmpsb
repz
imul
ss
push
mov
movsl
cli
push
jns
pop
pop
sub
xchg
pop
bound
popf
cmp
mov
lods
sbb
cmp
xlat
mov
loopne
ds
add
cmp
mov
loop,pt
lret
rol
mov
popf
lcall
scas
inc
adc
dec
popf
jb
mov
lods
std
sub
in
jecxz
jle
jns
addb
dec
shl
call
jae
adc
pusha
and
stc
in
adc
lds
arpl
jns
ljmp
cmc
mov
mov
mov
cmc
inc
xchg
rorb
popf
aam
in
dec
or
std
sub
incb
lahf
in
das
out
cld
cmp
mov
cmp
jmp
int
fcomps
iret
lcall
mov
scas
in
add
dec
out
in
sbb
inc
push
loopne
pop
aas
mov
mov
mov
rolb
shrb
mov
cs
popf
lods
mov
cmp
sub
stc
frstor
shll
and
cwtl
mov
aam
pop
aas
xchg
andl
dec
push
push
inc
dec
pushf
sub
imul
xchg
and
les
xchg
inc
mov
loop
pop
push
jb
mov
roll
int
pop
sub
mov
jl
loope
cmpsl
lea
push
pushf
dec
cmp
lret
mov
and
fisubrl
inc
fdivs
xor
dec
push
add
jmp
push
ret
or
mov
or
jle
mov
adc
adc
mov
xlat
leave
cmpsl
ret
mov
mov
inc
int3
lods
jno
pmulhuw
loopew
and
mov
addr16
and
std
mov
cs
scas
sub
shrl
push
push
call
and
test
sbb
dec
outsl
fnstcw
push
sub
addr16
pop
scas
mov
leave
jb
or
push
xor
mov
shrl
insl
mov
jp
pusha
add
loop
loop
jnp
pop
inc
popf
push
pop
rol
lods
lock
dec
fimull
xor
and
push
xchg
divb
jno
fcoml
mov
outsb
outsl
dec
or
adc
jecxz
lret
aaa
xchg
int
push
mov
pop
sub
mov
fcmovu
adc
mov
cmp
dec
mov
push
gs
sub
and
in
add
push
inc
iret
rcrl
sub
mov
mov
push
sub
leave
mov
out
xchg
scas
mov
cs
fucomip
dec
xchg
in
sub
sysenter
sub
push
icebp
lea
xor
scas
in
push
mov
out
inc
dec
repz
cli
cld
mov
addr16
std
jp
or
aam
inc
mov
inc
test
or
push
addr16
add
xor
cmpsb
in
mov
lcall
xor
lods
adc
jae
scas
inc
add
loopne
repnz
xor
mov
pop
cmpsl
jbe
es
fsubs
adc
pop
sub
mov
out
aaa
add
insl
jl
push
fadds
jmp
mov
jnp
daa
push
dec
test
cmp
mov
in
mov
sbb
fildl
in
pop
dec
rcr
into
add
push
enter
imul
jnp
xchg
mov
mov
mov
mov
and
mov
pop
sbb
mov
xor
bound
cmp
repz
jns
mov
inc
leavew
adc
or
hlt
push
popa
loop
pop
ret
test
sub
push
mov
sbb
jg
cmp
cmc
and
cld
mov
mov
test
jnp
insb
jo
ja
test
scas
in
mov
pop
cmp
mov
loopne
es
movsb
ljmp
lcall
sbb
rclb
dec
rcrb
xchg
add
icebp
stos
jno
or
shl
xchg
insb
fwait
dec
insl
or
fcmovnb
xlat
adc
or
cmc
dec
repnz
ret
iret
divl
cmpb
jbe
sahf
and
mov
movsl
jge
xchg
cmpsb
lahf
jmp
fs
outsb
lahf
inc
and
call
and
mov
repnz
orl
imull
sub
add
sbb
jg
xlat
arpl
xchg
int
ljmp
ss
clc
and
inc
inc
ret
add
scas
sub
adc
in
xchg
cmp
add
in
jo
adc
adc
sbb
mov
dec
movsb
mov
in
mov
loope
cli
jge
sub
mov
cwtl
xchg
jp
stos
scas
aas
mov
sahf
push
mov
stos
lcall
mov
lret
lods
xor
mov
repnz
or
in
mov
clc
push
sbb
pop
fstpl
add
ja
pop
sbb
mov
jns
cld
mov
dec
mov
inc
fistpl
sbb
xor
or
jmp
xor
sahf
fistpll
push
cmp
push
stos
out
or
repz
out
cltd
sahf
or
jbe
jl
mov
jae
fisubrl
in
or
and
jle
sbb
jbe
pop
or
iret
mov
sahf
or
insl
mov
outsl
fucomi
dec
xor
jbe
popa
pop
pop
push
mov
rcl
sbb
adc
cwtl
xchg
add
int3
pop
pop
jle
push
fisttpl
sub
data16
adc
loope
push
xchg
loopne
xchg
aaa
and
xchg
pop
lret
inc
cmp
and
imul
mov
loope
mov
in
out
push
mov
pop
into
and
jbe
or
jnp
loopne
repz
jle
out
push
or
int3
cmp
inc
pop
xchg
inc
pop
xchg
jg
sbb
pop
mov
mov
pop
or
fsubs
mov
inc
fildll
lahf
xor
dec
adc
insb
push
sbb
aam
pop
lcall
jnp
jecxz
cmpl
out
movsl
cmp
cmp
jbe
nop
mov
pop
push
jae
inc
cmp
outsl
xchg
or
adcl
or
push
mov
cmpsl
dec
cwtl
pushf
pop
inc
rcrl
jg
shrb
mov
pop
mov
jmp
xchg
pop
jp
xor
icebp
jp
repz
adc
stc
daa
hlt
pop
xchg
dec
mov
mov
or
in
cmp
adc
dec
rcr
jo
jae
jno
fsubrp
mov
test
inc
aad
mov
fistps
popf
pop
loop
rcrl
sahf
push
clc
in
dec
xlat
sbb
rcll
pop
outsl
push
insb
mov
xchg
ja
addr16
push
loope
movb
mov
mov
iret
insl
push
sbb
lretw
xchg
popa
gs
inc
sarb
pop
ja
cmp
adc
xchg
mov
xchg
jl
jg
lea
fs
adc
rcr
arpl
cli
cmp
scas
cmp
lret
lods
jbe
fidivrs
jmp
sub
jb
push
mov
sar
xchg
mov
cmp
xchg
or
xchg
pop
mov
adc
inc
lret
repz
cmpsb
ss
fs
das
rorb
ljmp
cmp
ljmp
sub
add
jae
jne
mov
xchg
mov
jg
dec
call
push
pop
or
inc
sub
dec
sbb
lds
xchg
xchg
jnp
rorb
sbb
pop
js
or
xor
hlt
insb
jnp
adc
rcr
scas
xchg
fs
mov
sub
or
es
cmp
imul
push
lret
dec
xchg
jg
insb
push
mov
int3
not
cwtl
sub
loopne
adc
and
or
cmp
outsl
sub
xchg
repz
pop
sub
lret
fcoms
mov
popa
xchg
stos
mov
xor
cltd
mov
sahf
pushf
push
je
mov
add
push
xor
mov
jns
not
xchg
push
aam
mov
lea
xorl
jl
sbb
ljmp
dec
adc
dec
sbb
movsb
mov
xchg
mov
sub
add
fsts
out
xchg
xor
jae
test
xlat
lods
cmp
fbld
into
dec
aam
mov
mov
in
scas
adc
stos
and
movsb
js
enter
imul
ss
sub
jns
test
xor
es
xor
ljmp
arpl
bnd
shlb
push
xchg
or
int
ficoms
je
orl
sub
scas
pusha
repnz
mov
jle
xchg
in
push
mov
inc
testb
jae
push
sahf
mov
ja
push
psubusw
xor
sbb
or
scas
sbb
fsubrl
dec
or
mov
into
scas
mov
in
mov
jg
pusha
repnz
xchg
mov
ljmp
adc
xchg
xchg
inc
cwtl
shr
cmp
mov
fadd
movsb
stc
jno
aad
test
pusha
push
mov
and
les
push
adc
push
mov
mov
pop
add
mov
mov
cmp
icebp
add
xor
pop
xor
pop
adc
addr16
jl
sub
push
push
les
sub
mov
insb
fadds
push
push
pop
push
lret
lods
adc
popa
xchg
inc
std
popf
pop
bnd
mov
mov
push
jg
push
repz
and
aas
pop
movl
outsb
cs
jge
addl
fwait
xor
out
dec
jmp
hlt
dec
adc
jp
mov
mov
push
jae
loop
and
mov
jne
int
ds
jbe
in
mov
repz
popa
lret
ljmp
mov
sbb
test
mov
push
xor
insl
stos
int
cmpsb
mov
leave
sti
cmpsl
cmp
push
inc
dec
add
test
xor
xchg
cmp
movsb
mov
les
inc
dec
lods
outsb
lret
popa
or
push
sbb
rorb
rol
dec
arpl
add
cmp
sub
js
jl
lods
mov
cmp
jl
cmp
fdivs
scas
add
cmp
inc
cmc
pop
xchg
pop
std
insl
jle
mov
mov
dec
or
mul
jecxz
cmp
adc
mov
cli
push
sub
cmp
ds
stos
insl
popa
sub
mov
insb
sub
mov
xor
arpl
dec
fisubl
dec
rclb
aam
clc
out
mov
push
xchg
pop
hlt
mov
std
sub
cmpsb
jecxz
stc
xor
fsub
add
loop
shr
pushf
inc
inc
cwtl
push
jmp
icebp
jb
shll
push
mov
pop
push
icebp
adc
xchg
jno
mov
clc
adc
or
repz
pop
mov
pushf
mov
icebp
dec
call
push
mov
lds
lcall
lods
hlt
lret
pop
lea
adc
scas
out
dec
jg
repnz
out
inc
cmp
and
push
xor
inc
jb
push
rcll
popa
in
jmp
incb
clc
jb
and
test
in
rorb
and
adc
ss
mov
lret
movsb
xchg
ret
jmp
mov
mov
mov
and
loopne
xchg
gs
and
add
ret
aaa
rorb
mov
lcall
jg
xorl
cmp
fsts
inc
lcall
and
pop
sub
stos
scas
rcrl
stos
and
push
ret
movsl
adc
xchg
jo
or
pop
jle
enter
push
mov
or
in
mov
and
stos
adc
mov
leave
mov
shlb
gs
rolb
cmc
out
subl
adcb
mov
pop
xchg
shrl
sti
push
dec
das
fsubrs
sbb
sbbl
add
mov
sub
rclb
mov
inc
xchg
pop
in
enter
fldln2
add
pop
xlat
sbb
fistpl
pop
xor
sub
pop
add
sub
mov
fstp
lret
mov
sti
add
jge
mov
push
cld
ficoml
xor
and
push
adc
ljmp
out
push
sti
dec
ja
cwtl
andl
lock
js
fs
dec
mov
pop
imul
and
stc
popl
int3
movd
mov
mov
loop
or
adc
ss
fsincos
decl
lods
mov
in
mov
xor
adc
in
cmp
mov
adcb
in
mov
fisubrl
add
mov
and
test
cli
scas
dec
and
pusha
notb
pop
mov
ja
lret
jns
js
or
movsb
mov
std
mov
dec
add
pop
je
mov
mov
xlat
lea
mov
cltd
mov
mov
inc
jbe
sub
inc
mov
in
pop
bound
rcll
data16
sub
adc
movsl
add
out
data16
and
xchg
cmp
mov
pushl
cli
loope
nop
and
lcall
cli
addl
mov
and
pop
daa
lret
or
shrl
push
jle
imul
popf
cmp
fistl
adc
mov
sub
fdivl
jno
shll
ljmp
test
dec
scas
shrl
xchg
je
in
xor
popa
jmp
or
push
fsubr
add
jl
push
scas
mov
aad
test
clc
and
mov
xrelease
cli
addr16
add
mov
xlat
push
xor
xor
fcmovnu
mov
enter
or
adc
shrl
mov
mov
lods
adcb
add
inc
mov
pop
cmc
cmc
pusha
adc
daa
fcmovnb
repnz
cmp
nop
xchg
loope
out
mov
ret
cld
test
popa
push
pop
ljmp
mov
sbb
sub
and
add
fistps
mov
xchg
mov
dec
mov
aam
fistl
inc
ret
sbb
repz
jecxz
pop
pand
lahf
repnz
jge
fldl
jbe
dec
jp
movsl
push
shll
aad
std
fwait
idivb
cmpb
xor
jg
inc
dec
and
add
stos
test
mov
pop
inc
mov
inc
aas
rcrb
ja
cmp
jp
cmp
jp
addr16
fs
test
sub
push
push
pop
imul
iret
jns
adc
pop
or
sub
dec
inc
inc
push
jg
jae
sub
and
out
and
cmp
sbb
jno
fisttpll
or
scas
mov
adc
dec
fld
stos
ficomps
loop
fisttps
loope
addr16
sub
mov
in
cmp
test
jb
out
fdivs
jp
add
pop
ret
cmp
out
mov
scas
add
frstpm(287
clc
arpl
cmp
insb
sbb
and
jl
and
adc
in
jae
xor
jmp
sub
test
cmp
loope
xchg
fidivs
xor
mov
xor
xor
sbb
test
sbb
xor
cld
cmp
sbb
add
fsubl
xchg
rcr
loopne
pop
mov
js
dec
pop
adc
xchg
cmc
sahf
hlt
repnz
aaa
ficoms
push
pop
jecxz
insl
xchg
sub
sub
mov
fbld
dec
pop
mov
pop
and
mov
dec
mov
cmpsl
add
pusha
push
jp
sbb
out
stos
sub
cmp
lahf
dec
hlt
jne
pop
xor
dec
jl
ret
inc
mov
mov
testb
mov
add
loope
paddusb
ret
movsl
lcall
inc
inc
jno
fldt
push
adc
into
xor
test
lea
push
addr16
pop
push
sarl
idivb
pop
aas
mov
push
andl
scas
dec
icebp
push
sbb
pop
push
pop
push
pop
and
or
call
dec
stc
jns
mov
or
sbb
or
ret
adc
inc
xor
sub
aaa
xlat
int3
push
xchg
or
in
jl
pop
add
sbb
popa
aaa
lret
adc
aam
adc
cs
js
sbb
push
xchg
or
ja
out
cmp
test
mov
lds
pop
stc
mov
sub
adc
loop
lea
iret
push
xor
sbb
mov
js
add
push
repz
pop
push
aaa
lock
xchg
lahf
das
lock
mov
int
cmp
rcll
mov
push
pop
incl
sarl
cmpsl
fwait
outsl
jne
xchg
lock
push
add
movsl
jnp
xor
xchg
sbb
pop
xor
dec
fdivrs
xchg
push
insb
lods
lock
loopne
shrl
jae
mov
jge
aad
or
loope
xchg
int
xchg
nop
cmpsl
std
pop
inc
cmp
fwait
mov
or
clc
jecxz
push
cwtl
jno
adc
or
mov
imul
pop
jg
stc
stos
mov
nop
fnsave
andb
or
iret
lea
sub
bound
push
les
loopne
dec
int
out
out
sbb
cmpsl
jmp
rcrb
inc
mov
test
leave
shlb
test
jb
cmp
cwtl
and
stc
sarb
rorb
cmp
cltd
and
sbb
mov
dec
dec
xchg
ret
add
add
in
cmc
sub
mov
sbb
cmp
mov
sub
shlb
pop
jo
push
push
xchg
in
int
adc
lods
mov
jg
add
pusha
xchg
popa
insl
fisttps
mov
out
jnp
mov
mov
sub
mov
adc
dec
mov
jb
rcll
push
adc
xor
sbb
scas
aad
out
mov
data16
in
flds
mov
repnz
daa
inc
fsubs
jo
push
mov
adc
push
mov
adc
aam
dec
push
jnp
sti
pop
adc
add
scas
insb
add
andb
cmp
cmp
test
cmp
ss
lea
jne
dec
inc
add
jmp
mov
testl
ffreep
dec
adc
sbb
data16
popa
or
sbb
fcompl
sbb
or
scas
adc
popf
push
scas
mov
cli
push
lods
dec
sub
xor
sbb
mov
movsl
adc
push
dec
cmp
mov
jnp
arpl
scas
test
pop
cmp
mov
pop
mov
or
in
cmp
jae
fildll
mov
pop
mov
or
adc
jae
pushl
int
xor
orl
jnp
inc
iret
into
pop
into
stos
pop
mov
push
lahf
in
sbb
adc
inc
iret
lods
fstl
cli
leave
inc
sahf
add
icebp
loope
lcall
dec
stc
cmpsb
mov
xchg
xor
mov
cmpb
ljmp
nop
enter
or
insb
ret
fldcw
fwait
mov
ror
loope
ret
mov
arpl
into
jl
mov
cli
in
cmc
mov
ret
mov
inc
mov
push
lret
inc
popa
clc
pop
jb
dec
sbb
into
icebp
fistl
ret
lods
and
mov
sbb
movsl
js
pmuludq
push
cmp
ret
xchg
dec
sub
rorl
test
dec
push
stos
insb
out
rcl
adc
mov
jecxz
aad
or
sbb
enter
sbb
cmpsl
data16
pop
pop
sbbl
test
ret
add
jmp
add
fisubs
mov
cmpsb
aaa
dec
push
aad
cli
negb
xchg
fists
sub
sub
fmul
nop
out
mov
sub
xor
xchg
xchg
mov
mov
sbb
mov
pop
ret
fs
cmp
mov
stos
gs
repnz
imul
and
mov
xchg
and
jmp
mov
add
ftst
inc
sti
mov
or
lcall
int3
cmp
push
push
jl
rep
and
push
iret
fcom
push
push
fpatan
add
and
and
and
cmp
jnp
rcr
pop
addl
pop
pop
sub
clc
ror
pushf
pop
out
mov
mov
inc
push
jge
les
call
lahf
popa
dec
std
cmp
mov
lret
aaa
mov
scas
push
jmp
test
mov
dec
and
pusha
stos
dec
es
les
mov
ret
cltd
cmpsl
sahf
lods
and
and
sbb
rorb
sub
push
mov
jbe
sub
xorb
cwtl
pusha
cmpsl
or
scas
inc
lcall
jnp
test
jae
push
cmp
push
or
rorl
sbb
loope
jb
jmp
mov
mov
xlat
sub
adc
iret
and
pop
lret
jecxz
dec
cmp
add
sub
into
fwait
push
cs
lcall
sbb
ret
or
js
adc
cmp
test
push
fdivs
inc
rorl
pop
pop
repz
sub
cs
push
pop
imul
pusha
dec
lcall
and
enter
xorb
in
jmp
lock
repz
shrb
adc
push
mov
jp
dec
push
cmp
loop
rsm
xor
aam
div
add
sub
jnp
pop
clc
pop
add
lret
push
cltd
fs
cmc
jecxz
in
mov
cmp
lret
scas
iret
inc
ret
loopne
or
or
pushf
pop
int
adc
jno
add
push
cs
mov
pop
in
or
xchg
adc
inc
jecxz
sbb
rcrl
lods
jns
add
sbb
insl
mov
fs
push
jp
sbb
lods
inc
inc
mov
jmp
mov
mov
aad
push
leave
ss
cld
repz
arpl
add
sti
and
xlat
fildll
cli
xlat
add
cwtl
arpl
outsl
cmp
inc
jbe
sub
add
enter
imul
mov
lods
and
insb
movsb
sub
mov
loope
sbb
stos
or
aam
stos
jmp
xchg
dec
lret
push
mov
pop
cmc
dec
mull
lret
sub
push
cltd
imul
pop
or
flds
sarl
loop
outsl
iret
xor
dec
dec
movsl
dec
pop
dec
mov
pop
cmp
shlb
pushf
cmp
add
lock
or
xchg
mov
adc
cld
push
ds
movsl
shlb
es
sub
jnp
rcll
ss
fsubr
sub
stc
xchg
dec
popa
dec
xor
dec
in
jb
xchg
mov
int3
mov
fidivrl
jns
leave
lret
enter
cld
insl
outsl
or
sbb
out
push
fsubrp
int
pushf
fidivl
mov
psrlw
jmp
roll
mov
mov
iret
xchg
fstl
mov
inc
mov
inc
and
inc
pop
out
pop
push
xchg
add
mov
dec
push
outsb
or
data16
stos
sub
cwtl
shll
xchg
xchg
cwtl
sub
cmp
adc
testl
xor
cmp
inc
imul
loopne
int
fadds
sbb
mov
in
int
movsl
inc
inc
mov
push
pop
int3
mov
jne
sbb
mov
push
sub
mov
in
fldcw
lahf
mov
enter
loopne
cmp
mov
test
lock
mov
xchg
add
cltd
andl
loop
pop
scas
into
sbbl
outsl
adc
aam
xchg
push
enter
call
jnp
add
sub
shr
cld
nop
adc
scas
out
ja
imul
add
lea
push
lcall
les
pop
cmpb
mov
cmp
mov
lods
adc
in
xor
mov
leave
leave
xor
and
sbb
xor
add
pop
dec
mov
into
insl
or
xchg
iret
dec
outsb
add
ret
ds
cmpsb
and
ljmp
dec
cmp
fldcw
sub
sbb
loope
xor
push
ror
add
fsubrs
sarl
roll
out
add
push
aaa
or
mov
and
pop
mov
dec
test
sbb
gs
pop
jp
xor
js
je
outsb
es
add
lcall
jb
and
loope
rcrl
pop
mov
sub
stos
mov
mov
push
sbb
inc
mov
inc
jmp
mov
mov
cmp
xor
xchg
jg
jl
xor
cmp
cmp
cli
mov
pmulhw
ss
pop
stos
fsubrs
inc
push
mov
pop
fs
or
and
ds
and
mov
out
push
push
cld
cmp
xchg
add
pop
mov
fcomi
nop
pushf
mov
adc
nop
pop
xor
addr16
jne
mov
xor
xchg
iret
hlt
push
mov
xor
push
xchg
mov
adc
in
mov
fdivr
test
pop
xchg
sub
jnp
scas
lods
add
adc
pop
sub
and
ds
dec
pop
mov
xchg
std
mov
mov
lds
or
adc
mov
das
sub
xchg
xchg
sub
ss
and
or
cld
mov
mov
sbb
mov
mov
dec
leave
sub
iret
scas
jnp
sbb
cli
sbb
or
addr16
sub
sbb
jnp
dec
sahf
subl
push
test
pop
icebp
cs
lock
dec
mov
cmp
cs
lret
jg
push
fists
sub
inc
sbb
adc
adc
adcl
addl
int
jmp
fdiv
repnz
fdiv
or
stos
sub
jmp
cmp
test
ret
sbbl
ret
pop
in
clc
vpsubq
fildll
movsl
jecxz
jo
pop
push
xchg
sub
out
das
movsl
push
add
mov
les
push
aad
lahf
fwait
addr16
push
push
mov
js
jmp
incl
sbb
ficompl
in
or
jbe
not
and
jns
dec
dec
mov
lret
bound
push
mov
push
jnp
test
lods
andb
or
cli
cwtl
cmc
mov
in
xchg
das
xchg
test
push
movsl
movsb
in
bnd
fldl
jo
mov
add
test
jp
mov
add
stc
add
xchg
std
outsl
loopne
int
dec
repz
stos
sub
cmpsl
sub
lret
fcoms
outsl
pop
iret
pop
sbb
das
out
popf
iret
push
mov
stos
es
ds
jno
aad
test
push
xchg
les
arpl
inc
push
or
iret
std
aas
xor
xor
add
loopne
insl
pushf
aaa
gs
or
inc
sub
jo
je
dec
xchg
iret
in
xchg
nop
ret
sub
dec
and
lods
ja
imul
clc
out
fimuls
mov
cld
dec
xlat
xor
pop
rorb
fs
aaa
lret
shrb
cltd
xor
popf
sbb
ds
sbb
lea
xchg
mov
stc
dec
xor
xor
mov
fdivl
mov
dec
stos
roll
fmulp
xor
mov
bnd
test
in
lea
cltd
xlat
pop
pop
and
pop
dec
fidivs
sar
repz
and
adc
fsubrs
inc
sub
mov
push
addb
push
pop
je
aas
out
push
pop
lret
mov
jae
dec
push
adc
sbb
push
fs
loopne
stos
bound
push
scas
dec
pop
dec
mov
adc
and
outsl
jb
daa
sub
jp
mov
mov
sti
mov
out
in
scas
dec
sbb
in
pop
scas
and
in
mov
mov
inc
cmp
fwait
inc
adc
pop
movsl
adc
push
xchg
dec
sbb
jmp
dec
lods
rolb
test
jg
mov
and
lret
or
push
js
push
cmpsl
inc
push
jnp
adc
mov
mov
adc
aas
testb
inc
loop
xor
add
lcall
and
scas
ret
mov
push
xchg
cs
lret
mov
cmpsb
and
rclb
mov
push
and
xchg
inc
out
add
pop
adc
lock
outsb
sub
rcl
add
push
jmp
push
mov
inc
test
out
pop
mov
pushf
sub
sbb
or
xorl
and
jmp
xchg
loope
pop
outsl
jo
andb
mov
fdivrs
or
jnp
xchg
mov
adc
mov
loopne
pop
scas
xorl
or
in
leave
mov
mov
test
outsb
pop
imul
mov
jb
ret
aam
out
in
xchg
stc
push
fsubrs
aad
jnp
jmp
lds
adcl
fbstp
jp
push
add
fcompl
jmp
mov
dec
insb
ds
mov
idiv
push
lds
mov
cwtl
out
int3
das
das
stos
add
les
scas
adc
fmull
add
and
lods
outsl
mov
add
dec
mov
push
dec
andb
cmp
add
or
push
sub
adc
jp
rolb
xor
movsb
and
mov
les
mov
outsl
fistpl
push
insl
or
or
sub
mov
lods
cli
xchg
fisubs
incl
jmp
stc
mov
das
dec
jb
sahf
push
test
cmp
shlb
xlat
cmp
ds
arpl
and
lret
rolb
mov
rolb
inc
add
loop
jecxz
out
pop
adc
dec
pushf
push
sbb
xchg
mov
das
sbb
out
insb
mov
sbb
dec
mov
pop
mov
xchg
and
sbb
pop
or
test
inc
add
inc
sbb
popf
lods
or
jae
inc
fs
add
push
cwtl
mov
outsb
subb
mov
daa
lahf
xchg
cmp
out
aad
sbb
adc
pop
rorb
push
mov
inc
pop
xor
cmpsl
ret
insb
mov
or
stos
and
push
and
sub
sbb
fnstenv
inc
rorb
loope
xchg
je
int
mov
push
imul
movsb
dec
dec
inc
pop
xchg
mov
in
push
adc
xchg
add
pop
jl
push
dec
leave
aad
mov
aaa
stos
adc
or
dec
cmpsl
fistpll
ret
cltd
mov
and
pop
ljmp
int
xchg
in
in
xor
push
sbb
mov
push
inc
repnz
xlat
cli
cmc
cmc
xor
das
jp
jp
mulb
xchg
test
mov
shlb
mov
jnp
or
or
dec
push
and
adc
push
mov
mov
and
xchg
mov
xchg
rorb
add
mov
sbb
fwait
stos
fs
test
mov
push
mov
adc
iret
ljmp
lea
movsl
test
jo
adc
cli
mov
inc
mov
bound
jmp
jmp
int
or
pop
jl
pop
pop
dec
add
pushf
adc
sub
xchg
aam
mov
leave
xlat
loop
push
pop
cmp
out
nop
mov
sarl
inc
adc
sub
xor
pop
pop
icebp
cli
out
sub
pop
jecxz
cmpsl
fwait
shrb
and
dec
std
adc
push
ja
xor
mov
loope
fiadds
insb
push
imul
xchg
sbb
into
mov
cmp
int3
pop
into
mov
cwtl
xchg
cld
int
jmp
adc
and
out
dec
lods
into
in
mov
cwtl
sbb
mov
add
in
cmp
xchg
nop
cli
sub
les
enter
lea
mov
icebp
mov
add
sbb
stos
fildll
daa
xchg
cmp
test
mov
cmp
dec
jmp
mov
in
pop
xor
scas
pushf
into
add
rcrb
roll
sti
fwait
add
xor
std
mov
or
mov
jl
cmp
popf
jae
popf
xchg
test
pop
orl
lahf
enter
add
pop
lret
idivb
and
xor
jl
add
inc
xchg
xchg
xor
jle
add
jno
pavgw
and
xor
inc
add
insb
jnp
xor
inc
xlat
inc
lds
xor
das
mov
mov
ds
test
push
sbb
mov
iret
mov
mov
shl
lret
int3
out
ljmp
jnp
dec
jb
sub
inc
lods
ss
push
in
test
pop
push
xchg
daa
dec
mov
or
sti
popf
add
jb
fimuls
das
lea
mov
outsl
je
and
jg
scas
push
cmpl
jp
insb
adcl
stos
movsb
pop
in
push
sbb
mov
or
mov
jl
sbb
fwait
movsl
ret
stc
mov
imul
in
push
adc
mov
movl
mov
mov
inc
dec
sbbl
xchg
push
and
push
xchg
fmuls
es
xor
jl
in
mov
mov
mov
int
add
aaa
dec
cmp
mov
xor
xchg
jecxz
outsb
cmpsb
shld
xchg
fisubrs
in
inc
pusha
in
adcb
stos
into
aad
clc
in
fistps
inc
pushf
or
xchg
pop
aaa
orl
fdivrl
cmp
sbbl
jbe
mov
push
adc
jle
adc
repz
sub
sar
sbb
nop
sbb
insl
jne
sbb
inc
testb
pop
dec
or
inc
or
inc
add
outsb
pusha
jae
mov
mov
cmc
popa
sub
adc
pop
mov
rcrb
lods
push
inc
int3
sarb
mov
cmpsl
aam
int3
xchg
adc
fucomp
push
inc
pop
addl
mov
nop
ret
aaa
mov
mov
gs
subb
mov
xor
mov
div
jge
nop
bound
add
dec
scas
ljmp
adc
fadd
movsb
xchg
data16
jnp
test
sbb
negl
sub
inc
adc
ret
fdivr
jno
dec
pop
adc
in
ficoms
mov
push
fst
adc
lods
hlt
lods
jle
push
lock
or
rorb
pop
or
push
mov
add
testb
push
or
shl
inc
insb
pushf
cwtl
xchg
fisubl
xchg
fcoms
imul
xchg
shll
jge
jl
adcb
cld
push
jnp
push
loopne
pop
fcoml
stos
xchg
pop
mov
push
in
pushf
stos
mov
sbb
cmp
lods
call
xchg
imul
movsl
cmc
xor
adc
or
adc
sub
and
sub
das
repnz
sub
jbe
sahf
mov
rorl
loop
pop
push
pop
xchg
lret
fabs
and
pusha
data16
movsb
lods
flds
xchg
push
mov
jmp
fmul
mov
lret
mov
mov
xor
add
mov
aad
hlt
mov
cmp
std
mov
cld
lret
test
cmp
mov
jl
mov
or
jns
les
inc
xchg
jecxz
xlat
js
pop
adc
xchg
pop
test
inc
lcall
and
and
cmpsl
filds
cmc
sbb
or
popf
cmpsl
lods
xchg
das
and
xchg
rcll
add
pop
xor
push
mov
scas
repnz
hlt
out
xchg
pop
push
in
dec
push
xchg
fsubl
leave
ja
xlat
push
sub
jg
xchg
shrb
mov
mov
inc
and
test
cmp
test
mov
cmp
or
movsb
jmp
mov
mov
ret
test
xor
sbb
adc
push
jecxz
paddq
nop
sub
jmp
pop
int3
loopne
ljmp
jno
icebp
repz
sub
testb
jecxz
aas
int
arpl
pop
jbe
scas
xlat
lret
test
aam
push
add
pop
xor
cmpsl
cmp
stos
push
test
mov
or
test
sub
pop
push
daa
mov
or
inc
lahf
mov
mov
mov
inc
xor
lahf
shl
fsubs
add
cli
inc
in
fdivp
sub
aam
or
inc
mov
push
test
dec
repnz
push
fs
ficoml
sub
out
cmp
push
add
dec
in
in
xchg
and
insl
stc
adc
lcall
mov
pop
out
or
fistps
int
repnz
or
jbe
fstp
jmp
sbb
gs
out
ljmp
cld
lods
rorb
dec
inc
in
sti
mov
pop
adc
in
mov
mov
jg
bound
cmp
adc
enter
idivb
rcl
nop
imulb
mov
mov
inc
dec
cmpsl
xlat
das
push
hlt
sub
push
ficompl
rcrb
adc
cmpsb
stos
ja
lcall
mov
std
fucomp
or
cwtl
adc
jp
mov
aam
and
nop
sub
dec
xlat
pusha
ret
loope
addr16
and
cmp
jmp
xchg
mov
pop
cli
lods
cmp
in
clc
and
call
jbe
imul
and
gs
push
in
int3
mov
idiv
jge
pop
outsb
adc
fcomi
mov
arpl
ss
push
mov
push
cmpb
lret
and
sub
add
fld
lods
xor
or
sub
arpl
or
shll
push
mov
movsl
addb
push
stos
aad
or
movsb
mov
in
lret
xchg
jae
dec
in
sbb
add
rcrb
jbe
push
mov
imul
sbb
lock
mov
push
xchg
cmp
xor
xchg
sub
xlat
mov
call
xor
rcll
movsb
pop
dec
add
lea
cli
xchg
lea
in
inc
aam
jp
cmp
iret
int
lock
sbb
xchg
lock
ds
andl
add
or
adc
pop
inc
sbb
in
subb
sbb
pop
or
cmp
addr16
imulb
inc
je
xchg
idivl
aas
add
or
xchg
jmp
pusha
adc
lea
sarb
imul
jmp
int
xlat
inc
lcall
jbe
stos
imul
aad
add
jl
and
adc
stos
nop
popa
pop
arpl
pushf
or
sahf
mov
out
mov
jo
stos
and
mov
adc
cmpsb
pusha
cwtl
mov
lahf
lods
loope
xchg
fisttpl
sbb
cmp
sub
xchg
pop
xchg
xchg
loope
loope
jnp
lock
lods
mov
fdivrl
mov
add
adc
aad
cmpsb
sbb
or
dec
scas
jl
push
adc
mov
gs
and
inc
sti
movsb
add
loop
test
pop
sub
xor
mov
pusha
ret
stos
je
sahf
xchg
fisttpll
adc
fadd
notb
pop
adc
add
test
or
lods
xchg
shlb
pop
insl
lea
sbb
mov
je
imul
mov
push
addr16
out
add
or
pop
dec
pop
sub
fisttpl
push
xchg
aaa
movsb
xchg
outsb
jae
imul
rorb
hlt
xchg
fisubrs
enter
sbb
ds
jb
test
mov
adc
loop
adc
xchg
pop
inc
popf
popa
pop
mov
shlb
mov
and
fmul
ljmp
xor
mov
test
fists
cld
sbb
pop
cmc
ficompl
push
dec
iret
xor
add
sarb
inc
out
add
adc
mov
loopne
adc
cmp
mov
fsts
repz
pop
outsl
cwtl
mov
mov
cmp
mov
dec
sbb
lea
xchg
sub
daa
add
inc
adc
mov
lea
mov
dec
mov
push
or
jl
add
xlat
xchg
or
push
push
xchg
push
sbb
pop
rcl
adc
fbld
xchg
jge
sarl
jg
mov
add
xor
xchg
sbb
rcr
push
sar
inc
jp
sub
lds
outsb
lds
jl
std
cli
push
cmpsb
add
jbe
test
xor
mov
jp
hlt
imul
sub
xchg
inc
aas
lock
into
daa
inc
mov
iret
cwtl
inc
leave
cmpsl
sbb
int3
lret
sub
lret
enter
inc
ja
cld
int3
arpl
rolb
xchg
xchg
xchg
mov
cmp
jno
jb
mov
and
jne
xor
add
adc
pop
les
push
out
cmp
call
add
add
inc
aad
pop
imul
sbb
out
fwait
insl
add
and
ficoml
dec
sbb
cmp
inc
stc
push
cltd
inc
rdpmc
lahf
repz
sti
push
orb
lcall
adc
push
cmp
xor
scas
jl
ficoms
cli
lods
push
xchg
test
sahf
cmc
pusha
and
das
in
dec
dec
adc
sbb
adc
mov
repz
test
xor
movsl
mov
inc
push
insl
movsb
int3
test
shl
or
enter
stos
dec
dec
inc
pop
leave
or
not
into
adc
adc
stos
adc
rcrb
fidivl
out
cld
popf
mov
cmp
inc
sbb
xor
push
sub
fmull
push
mov
imul
outsb
push
movsl
mov
and
mov
aam
jne
stos
aaa
mov
test
jmp
and
rol
mov
inc
ja
lahf
sarl
push
mov
sarb
jns
xor
dec
mov
int
repz
pop
bound
mov
cmc
or
pop
push
xor
sub
mov
push
xor
jno
jg
int3
pop
outsl
test
pusha
out
lds
mov
lds
iret
push
ds
fcom
mov
sbb
inc
mov
mov
repz
xchg
or
fcomip
push
daa
clc
inc
je
dec
pop
out
out
and
in
faddl
adcb
mov
cltd
inc
ljmp
test
pop
xchg
inc
push
push
aam
mov
xor
jnp
loope
mov
cmp
dec
ljmp
push
hlt
mov
call
stos
mov
fwait
test
test
push
pop
xchg
dec
mov
fucomi
mov
in
loope
lods
push
or
mov
popf
push
dec
and
lds
jns
sti
fistpl
mov
adc
test
pop
fisubrs
test
xchg
into
xchg
push
pop
adc
jp
out
mov
negl
or
mov
mov
lock
test
jmp
ret
lock
jb
xchg
adc
xor
push
adc
in
imul
push
inc
adc
call
cmp
add
faddl
imul
sbb
cmp
jo
shlb
cmpsl
lret
dec
popf
loopne
dec
cmp
sahf
out
std
iret
mov
mov
jae
pop
jbe
sub
dec
xor
shlb
adc
jl
pop
fldl
pop
dec
out
sbb
push
dec
cmpsl
jns
in
inc
rcrl
jge
or
stos
mov
addr16
inc
adc
cs
cmp
sub
test
add
lods
adc
ret
ljmp
pusha
aaa
es
inc
pop
xchg
rol
mov
jge
cmp
subb
xlat
sar
cmp
sahf
or
decb
push
roll
xor
jle
xchg
jb
sub
adc
jle
dec
loope
fstp
dec
sub
fadd
stc
sbb
adc
mov
lock
jae
jmp
cld
fidivs
pop
sbb
loope
insl
lahf
pop
add
test
or
idivb
xor
aad
das
mov
imul
xlat
jns
mov
repnz
sarb
cmp
push
pop
rcrl
mov
iret
stos
cmpsb
test
fwait
sub
lods
imul
fstpt
nop
pop
xchg
and
mov
stos
mov
addr16
push
inc
lret
dec
add
iret
jb
push
pop
sub
sahf
cmp
mov
dec
fs
push
call
mov
cmp
int
mov
lea
arpl
out
movsl
xchg
push
jb
retw
and
mov
mov
adc
popf
nop
mov
cmp
stos
fisubs
clc
lods
add
xchg
xchg
rorb
or
dec
push
push
imul
push
lcall
mov
mov
add
ja
icebp
imul
dec
imul
mov
test
push
mov
notl
jne
adc
lods
or
jnp
loope
mov
sub
dec
add
shll
or
cli
iret
push
inc
addr16
call
xlat
push
mov
cwtl
iret
or
pop
inc
jb
testl
aaa
adc
in
fstpl
mov
mov
int
imul
pop
inc
ja
and
sbb
js
pop
icebp
mov
xchg
lret
cmp
fstps
mov
sub
pop
fisubs
call
lahf
repnz
or
and
jmp
pop
mov
outsb
in
add
test
pop
loop
lret
mov
dec
mov
cmpsb
cli
sti
cld
sub
nop
xor
mov
mov
sbb
outsb
loop
outsb
iret
cmc
loope
dec
or
or
xor
add
or
and
inc
iret
push
movsl
jbe
shl
loopne
inc
cli
adc
call
movsl
in
es
jae
fsubrs
jle
mov
pop
fimuls
icebp
add
ds
aas
sti
dec
push
push
clts
fildl
inc
inc
and
cmp
dec
sti
jg
or
fwait
mov
sbb
xchg
xor
movsl
or
adc
add
cmpsl
ficomps
sbb
push
inc
jb
sbb
sub
imul
jp
pop
xor
sbb
cmp
dec
jns
mov
cs
jge
push
xchg
xlat
or
push
mov
cltd
ljmp
movsl
xorb
xor
sub
insb
xor
mov
cwtl
and
bound
pop
mov
hlt
jmp
pusha
negb
pop
lret
xchg
sub
dec
aas
imul
dec
sahf
xor
dec
lea
mov
push
xor
pop
pop
je
mov
daa
and
arpl
push
push
mov
mov
mov
push
pop
mov
sbb
add
xchg
fwait
adc
in
jae
inc
rcrb
push
aam
mov
jmp
call
addr16
sub
leave
push
sub
fdivrl
add
sub
cmp
hlt
mov
pop
fisttpl
popa
pushf
xor
popa
and
push
enter
repnz
add
fistps
and
aam
xor
shlb
adc
imul
aam
arpl
ja
mov
lcall
fnstcw
dec
lahf
insb
imul
les
sub
cmp
mov
enter
mov
and
dec
into
or
dec
jp
add
lods
outsb
aas
adc
clc
leavew
lret
mov
xor
loop
pusha
mov
cmpl
fdivrl
add
inc
into
mov
leave
lods
in
out
adc
mov
movsb
push
stos
loope
push
btr
addr16
dec
sub
dec
cmp
sarb
and
pop
jecxz
loop
fmuls
test
repz
push
clc
xchg
adc
leave
clc
sbb
dec
out
dec
xchg
dec
aam
nop
mov
push
test
adc
sbb
cmpsl
xchg
ror
fstpl
xor
or
sbb
xor
outsl
flds
sahf
lret
loop
rorb
cs
mov
xor
inc
xchg
pop
imul
push
lods
stos
and
push
pop
mov
iret
loope
into
adc
add
nop
push
push
push
jp
and
shrb
mov
cmp
or
fadd
loop
mov
data16
fcomps
cmpsb
adcb
lods
leave
dec
ss
xor
out
mov
shrl
scas
sbb
sbb
cwtl
mov
out
fucom
orb
add
xchg
xchg
mov
xor
dec
jo
or
aas
or
nop
lods
fwait
mov
std
or
xchg
sbb
ljmp
fcoms
push
roll
inc
xchg
pop
mov
icebp
sar
dec
ja
fildll
subb
movsl
test
or
shlb
pop
push
lahf
inc
int
adc
jnp
inc
lret
lods
in
ret
lcall
xchg
pop
xchg
imull
ret
jg
adc
mov
add
push
or
out
jo
je
push
adc
dec
pop
jp
std
fbld
and
stc
and
mov
mul
and
dec
iret
push
mov
in
sub
xor
stos
inc
dec
nop
jbe
push
xchg
fdivs
fwait
pop
sbb
pop
repz
sbb
fstpt
xor
loop
dec
fs
push
outsb
sahf
das
xchg
repnz
xchg
mov
divl
mov
push
jbe
push
addr16
push
loope
jmp
push
mov
in
adcl
dec
adc
jmp
scas
sbb
hlt
rcpps
add
push
inc
repnz
adc
add
xor
mov
aas
bound
mov
cmpsl
icebp
or
and
jmp
arpl
jne
sub
sub
jmp
lock
bt
leave
mov
out
pop
inc
clc
sub
sbb
iret
pinsrw
push
push
mov
les
aad
fidivrs
jg
inc
ficompl
xchg
ja
lds
lods
fidivs
xchg
mov
movsb
dec
cs
or
shll
arpl
sub
movsb
jnp
cmp
ds
lock
or
xor
rcr
and
dec
mov
push
loope
lods
mov
push
insb
and
enter
cld
cs
inc
shll
mov
popf
cmp
orb
mov
mov
movsb
sbb
into
hlt
adc
into
in
lea
in
xor
pop
ja
xor
jb
xchg
add
jo
stos
cs
push
xor
mov
mov
xchg
sbb
dec
xor
mov
insl
and
xor
int3
sbb
xchg
sub
lahf
cmp
cltd
mov
cmpsl
xchg
add
mov
mov
addr16
inc
int3
or
aam
mov
mov
mov
pop
je
pop
daa
sbb
pop
shl
into
and
ds
add
stos
cwtl
push
in
fcmove
cmp
lret
movsb
jp
adc
xor
icebp
pop
je
sbb
cwtl
inc
cwtl
xor
lea
and
push
rcrb
mov
push
jle
movsl
inc
mov
stc
or
push
js
mov
aam
incl
xchg
push
adc
gs
pushl
data16
xchg
stos
rolb
lahf
stos
xor
jl
push
in
xor
and
mov
xor
mov
inc
sub
roll
sbb
or
adc
sbb
popa
xchg
or
push
mov
mov
cs
pusha
jmp
sti
pop
sub
insl
push
adc
sub
or
cld
sub
jbe
sahf
sbb
jne
dec
pop
cmp
dec
jp
mov
gs
inc
jno
jecxz
jecxz
jecxz
test
stc
sbb
out
ret
mov
inc
or
inc
adc
adc
jo
add
pop
inc
push
fbld
cmp
jle
pop
loop
pop
aad
fidivrs
in
push
pop
ja
jmp
pop
sbb
fiaddl
divl
fwait
xchg
add
sbb
dec
lock
sub
xchg
jp
xchg
or
dec
sub
push
lret
xor
mov
pop
jl
cmp
sub
inc
test
mov
xor
dec
movsl
adc
int3
jge
inc
data16
loope
data16
lret
push
ret
sbb
shrb
sbb
push
cld
or
jbe
nop
into
imul
cmp
pop
test
add
cmp
jne
push
cmp
pop
or
in
pop
lret
in
xor
add
in
decl
pop
jae
mov
rolb
jo
inc
or
js
xlat
loope
adc
lret
jmp
xchg
aad
dec
mov
dec
mov
aaa
out
out
sbb
push
ja
addl
or
test
mov
inc
lret
mov
jecxz
shll
insl
rorb
inc
hlt
dec
add
fldenv
sub
push
sbb
dec
xor
push
pop
cmpsb
push
mov
cwtl
int3
pushf
divps
mov
imulb
iret
mov
pushf
lods
dec
cmp
popa
mov
dec
in
cld
and
xchg
lods
cmc
inc
mov
dec
fimull
fninit
jg
mov
lcall
mov
jae
push
stc
aam
subl
test
out
movsl
test
mov
mov
aad
and
add
lds
test
xor
lcall
xchg
pop
stos
push
xchg
div
xor
xchg
sbb
aaa
jnp
dec
mov
fstps
push
rep
bound
stos
push
mov
lods
jne
mov
and
lds
shr
push
cld
mov
lock
sbb
movsl
dec
mov
mov
dec
rcll
xor
or
ljmp
xlat
and
lret
push
push
stos
dec
insl
push
ja
jns
movsb
sbb
pop
sbbl
orb
jns
mov
punpcklwd
out
xlat
dec
outsb
push
add
stos
mov
cs
add
scas
fwait
mov
daa
fsubs
push
ds
inc
jb
lcall
push
jecxz
cmp
jne
test
fildll
stos
jg
stc
inc
push
sub
mov
adc
clc
gs
jecxz,pn
mov
xor
insb
stos
jnp
sub
fimuls
sbb
jae
push
jbe
mov
inc
mov
cmp
inc
push
xor
adc
jno
jge
jecxz
insb
sub
jae
sahf
xchg
xor
dec
and
out
std
std
xor
negl
lcall
pop
and
fcoml
test
iret
incl
mov
mov
hlt
cwtl
out
fcmovbe
sub
cltd
icebp
cmp
or
outsb
cmp
sbb
jno
shrb
test
inc
sbb
stos
inc
adc
addb
pop
arpl
jne
add
jo
cmp
adc
sti
mov
push
imul
shrb
shll
pop
ret
sbb
jno
mov
adc
jae
xor
scas
xor
cmp
pop
mov
inc
imul
jg
sub
sub
andl
sub
sub
push
inc
movsb
sub
xor
dec
movsl
pop
jno
dec
inc
movsb
pushf
cmp
hlt
cmp
mov
push
ret
loope
fadds
add
or
lods
adc
test
cmpsb
mov
sub
fsub
push
fwait
pop
mov
push
add
inc
int
imul
xorl
sub
aam
mov
add
mov
mov
data16
push
or
out
cmp
stos
pop
scas
dec
mov
add
mov
in
pop
inc
mov
mov
pop
pop
adc
flds
idivb
clc
mov
shl
sbb
adcb
popa
into
dec
jno
adc
cmp
cwtl
lret
cmc
sub
dec
jo
mov
inc
cmpsb
inc
mov
sub
push
push
enter
lcall
fists
lods
xchg
add
adc
in
add
or
int
pop
pop
dec
lods
sub
call
sahf
cli
fcmovu
scas
test
leave
aaa
mov
inc
inc
stos
in
xchg
jle
push
adcl
out
xchg
rorl
les
enter
mov
adc
xchg
mov
jnp
sbb
push
mov
inc
pop
mov
sub
dec
sbb
ret
pop
push
push
inc
cmp
adc
inc
fsts
lret
shlb
jge
inc
mov
jno
sbb
xchg
jns
xchg
testl
xchg
pop
jns
das
push
lret
inc
test
outsb
mov
f2xm1
fst
rorb
pop
sarl
or
jns
sbb
mov
inc
add
sub
and
loope
cmp
xchg
jmp
lret
jbe
add
push
sbbb
sbb
and
std
fidivl
and
or
push
jo
insl
xor
mov
jne
and
cmp
xor
cmp
mov
push
mov
inc
mov
xchg
xchg
sub
out
xchg
mov
test
int
xchg
movsb
mov
dec
filds
add
in
jb
stc
out
mov
and
sbb
insb
xchg
stos
mov
and
inc
mov
sbb
lret
sbb
and
mov
jo
call
scas
mov
dec
and
mov
dec
mov
scas
push
mull
mov
sub
xor
mov
inc
dec
sub
rcl
in
leave
les
stos
pusha
mov
test
shlb
cmc
out
cmp
aas
outsl
imul
push
adc
test
sub
stc
jmp
dec
es
push
cmp
leave
mov
sti
or
cmpsl
sahf
lods
and
inc
aad
scas
loope
cmc
adcl
punpckldq
aaa
ljmp
xchg
adc
test
and
and
lods
lret
pop
jnp
dec
jbe
xor
jae
lock
pop
mov
or
dec
dec
daa
repnz
mov
arpl
stos
popa
mov
outsb
lods
push
idivb
mov
dec
cmp
fwait
rcl
push
sub
into
sub
xor
decb
sub
aaa
xor
cmpsl
sbb
or
sbb
fidivrs
mov
scas
xchg
sub
fdivrl
fwait
js
dec
leave
jle
dec
fbld
sub
sbb
mov
pop
fnstenv
mov
fcoml
loope
iret
jl
jge
cld
lock
mov
bound
movsl
dec
loope
mov
sub
pop
shl
pop
sahf
fmuls
ss
std
in
add
jg
test
pop
daa
popa
mov
daa
jmp
xchg
jg
adc
cmp
xchg
sbbl
jge
sahf
pop
lcall
lock
pop
hlt
jmp
imul
sahf
out
jne
mov
shll
fwait
xorl
mov
test
test
jecxz
or
dec
out
fists
sbb
mov
clc
add
add
rolb
jnp
iret
jge
dec
and
inc
in
sti
and
add
movsl
mov
pop
jp
xchg
mov
je
lods
pop
jnp
pop
outsb
xchg
jbe
iret
cwtl
arpl
cld
aam
inc
jbe
add
testb
fildl
dec
xor
dec
imul
gs
arpl
lahf
dec
jg
sub
aam
xchg
jmp
dec
dec
lret
push
outsl
add
cmp
mov
xchg
testb
addr16
pop
loope
push
out
sub
cmc
pop
pusha
mov
movsb
shr
cld
xor
filds
nop
add
call
and
xchg
stos
clc
and
dec
push
pop
iret
cs
mov
push
xchg
mov
fstpt
mov
mov
xchg
xchg
jnp
mov
out
ffreep
aad
mov
mov
pusha
mov
int3
cmp
addr16
cli
or
mov
enter
mov
dec
std
lods
dec
fs
sbb
nop
lahf
jns
pop
xchg
adc
js
mov
or
pusha
xchg
add
mov
lahf
arpl
inc
dec
nop
dec
pop
mov
inc
inc
addl
adc
jmp
and
call
jne
lret
jmp
jp
mov
imulb
lcall
sub
ret
pop
lret
cmp
add
add
leave
mov
imul
lods
stc
int
fadds
sub
add
loope
sbb
das
push
mov
dec
push
fstp
xchg
push
xchg
inc
push
inc
fcomps
rcll
leave
cld
syscall
dec
add
adc
test
in
mov
std
jnp
cmp
fwait
clc
lock
gs
mul
xchg
adc
pushw
lods
shll
fwait
loop
xor
test
dec
lods
pop
or
push
call
das
pop
xchg
lahf
mov
sub
ret
fistps
mov
or
pusha
and
sub
ja
add
xchg
add
jnp
dec
scas
cmp
lret
pop
jns
xchg
roll
nop
inc
dec
rorb
fcomip
xchg
xchg
inc
inc
mov
daa
roll
test
iret
xchg
push
ret
jmp
adc
shrl
sti
repz
in
faddl
xchg
js
or
inc
pop
ficomps
mov
enter
out
das
fisttpll
pop
mov
leave
cwtl
cld
or
pop
push
xor
jp
test
roll
clc
js
xchg
dec
lock
and
mov
mov
aad
push
popf
xor
inc
and
lret
sbb
or
leave
sub
out
je
jmp
jl
push
imul
add
outsb
fisttpll
scas
fstl
fs
out
movsl
ljmp
jmp
in
dec
dec
jne
jnp
pop
shrl
icebp
pop
shll
pop
js
adc
mov
das
out
lret
ja
lock
aaa
jo
dec
fs
into
add
and
pop
fs
lcall
add
lret
jnp
jecxz
cmp
int3
shl
out
mov
ds
inc
dec
les
jge
mov
ret
jo
pop
sti
sub
jmp
adc
mov
inc
pusha
mov
mov
mov
cwtl
or
lahf
xchg
sub
sub
pop
insl
les
sub
std
add
add
int
cld
dec
mov
popa
cmp
push
mov
cmp
jbe
repz
dec
les
pop
lret
mov
pop
push
mov
mov
orb
sub
mov
mov
in
xor
inc
push
in
jp
jmp
push
test
ret
fiaddl
and
ret
addr16
imul
shrb
push
adc
push
adc
aad
popa
xchg
dec
cmc
mov
rol
imul
fadds
push
imul
cmp
test
scas
pcmpgtw
incb
leave
and
cltd
fbld
leave
movsl
mov
test
jmp
jns
or
pop
xchg
sbb
sbb
xchg
pop
js
jg
or
repnz
mov
test
pop
mov
cmp
arpl
jnp
out
xchg
mov
push
xlat
pop
pop
test
in
jno
dec
shrb
inc
imul
jo
pop
adc
or
out
or
popf
pop
mov
les
fdivl
xor
repz
mov
mov
bound
adc
xchg
mov
in
fnstenv
or
je
outsl
aad
mov
sahf
fistl
in
jl
mov
pop
mov
aad
out
cli
push
dec
or
sub
pop
ds
jp
xchg
sbb
xor
in
aaa
orb
sub
xor
add
lcall
push
jb
and
outsb
mov
cwtl
outsl
jns
pop
jl
nop
jno
mov
sub
repnz
inc
cmp
push
lock
inc
out
imul
pop
pop
sbb
popa
push
dec
jno
es
dec
add
cmp
or
and
clc
mov
xor
fldenv
out
fcmovnb
repz
sahf
hlt
loopne
insl
cs
test
testl
ds
pusha
ja
xchg
nop
add
inc
enter
dec
and
inc
add
or
xchg
ficomps
popf
fbld
xor
pop
rorb
add
ret
pop
stos
inc
outsl
push
xor
jge
sbb
jbe
js
std
or
push
fcmovnb
sbb
pop
inc
xchg
xor
ljmp
and
adc
roll
or
jge
jo
mov
std
pop
dec
stos
xor
or
je
push
inc
lcall
pop
sub
cltd
xlat
outsb
pop
loopne
mov
or
jb
jg
mov
sbb
in
sbb
fstpt
in
imul
sbb
pop
xor
orb
xchg
pop
lods
push
fisubrl
mov
cmpsb
mov
insb
mov
jbe
or
insb
fldl
cmp
mov
or
adc
jmp
or
aam
xchg
test
es
outsb
ja
js
out
arpl
pop
pop
scas
loop
and
push
addr16
mov
cmp
fwait
add
sarl
ss
loop
std
mov
dec
cli
dec
insl
xchg
das
xor
pop
and
push
sbb
push
add
aas
mov
mov
lock
mov
add
inc
fdiv
or
adc
imul
js
ret
mov
add
mov
enter
lcall
nop
fwait
xlat
in
lret
inc
mov
lret
mov
mov
push
inc
xlat
outsb
dec
fsts
and
stos
jnp
push
push
into
mov
mov
pop
addr16
mov
cwtl
imul
aad
outsl
and
jns
lds
scas
out
rclb
push
lea
out
xchg
or
push
push
inc
das
sub
dec
out
pop
cmp
pushf
dec
and
mov
lret
fidivs
mov
mov
inc
sub
fucomip
jno
dec
pop
jbe
jp
in
or
push
jg
mov
repnz
sbb
rcl
push
jnp
fstps
and
daa
icebp
pop
into
jp
dec
icebp
mov
jbe
pop
cmp
imul
test
mov
shll
add
pop
mov
dec
jg
rcrl
aam
mov
inc
and
testl
xchg
mov
mov
out
push
ror
insb
add
das
aas
into
test
data16
stos
aad
push
test
bound
inc
mov
in
mov
jecxz
cli
lods
sbb
cmc
stos
mov
cmp
js
add
pop
jle
fisubl
out
cmpsl
movsl
andb
into
sbb
cltd
add
and
test
push
sub
dec
adc
jo
mov
mov
dec
and
outsl
rol
inc
cmp
push
cmpsb
pop
add
add
fstpt
xchg
and
imul
xchg
xchg
inc
aad
fadds
mov
push
aam
lcall
sbb
push
std
mov
lods
pop
mov
rorb
jecxz
add
jp
jne
popa
scas
xchg
mov
pop
jecxz
test
in
mov
das
aam
out
cli
addb
test
pushf
iret
mov
xor
das
lods
movsb
mov
pushf
lds
pop
inc
or
mov
daa
imull
and
aaa
out
mov
fs
add
xchg
push
sbb
and
xor
pop
dec
sub
mov
jl
cmp
mul
aad
shlb
fildl
mov
sub
es
mov
mov
je
pop
cld
inc
pop
fsubl
xchg
jne
mov
or
mov
sbb
aas
aam
inc
sbb
fists
bound
or
push
xchg
inc
xchg
add
inc
jne
adc
imul
inc
les
rorl
fbld
enter
and
lds
pop
or
icebp
out
dec
std
aas
test
pop
xchg
cwtl
popa
xor
dec
pushf
xchg
pop
sub
fcoml
sbb
adc
mov
xor
imul
add
loope
leave
push
adcl
addr16
dec
mov
dec
mov
mov
repnz
or
inc
push
dec
lret
jnp
mov
dec
or
xchg
int3
or
inc
mov
orb
repz
mov
insl
sbb
jno
in
leave
sbb
mov
nop
sub
mov
sbb
popa
inc
loopne
call
mov
in
or
cmp
aas
inc
or
cmp
and
je
nop
movsb
and
ds
inc
shl
nop
repnz
leave
test
popl
sbb
lcall
and
mov
out
mov
xchg
je
adc
cmp
push
push
aaa
insb
scas
inc
mov
adcl
mov
in
and
cli
fldcw
and
in
mov
int3
cmpsl
inc
adc
repnz
loop
fimuls
jo
push
jecxz
sbb
das
ljmp
xlat
mov
call
mov
pushf
push
push
adc
je
sub
nop
andl
scas
out
pushf
push
lea
ljmp
cli
stos
test
and
nop
and
test
jge
dec
not
add
cmp
imul
movb
jge
pop
int3
mov
mov
scas
jns
lea
jae
xchg
stos
lods
lock
ror
mov
je
pop
push
fwait
aaa
js
inc
idivl
enter
daa
aaa
lahf
cmp
sbb
das
es
sbb
aam
fdivl
push
adc
ret
movsl
xchg
xor
sbb
or
mov
out
mov
mov
mov
sahf
popa
je
xchg
mov
bsr
and
mov
xor
js
push
rcl
outsb
jae
fwait
and
int3
dec
dec
cmp
aas
xchg
bsf
dec
mov
int
or
out
pop
pop
jb
mov
pop
mov
and
int
add
gs
adc
in
add
inc
orb
test
add
out
xchg
negl
aam
out
push
xchg
dec
jl
dec
jns
pop
fwait
sub
push
and
push
shl
mov
jmp
cld
inc
xor
mov
insl
add
das
adcl
incb
pusha
into
lret
adc
xchg
cmp
cmp
loop
dec
adc
lret
jo
pop
arpl
sub
or
movsl
cmpsl
cli
or
mov
add
sbb
fmull
mov
mov
mov
enter
pop
and
and
ds
dec
and
adc
stos
xchg
or
shll
cwtl
setge
sbb
mov
xchg
jns
rcrb
jmp
dec
cmp
dec
mov
imul
mov
mov
enter
dec
cli
pushf
out
lcall
or
in
mov
std
inc
es
xor
inc
dec
repz
pop
mov
add
and
adc
push
jmp
out
and
pop
test
jo
push
shll
xchg
and
and
inc
rcll
ret
pop
in
adc
add
notl
decb
jnp
sub
cmpsb
mov
test
sub
push
lret
jmp
sbb
cld
ljmp
aas
jns
inc
pusha
adc
or
xchg
or
cmp
xor
dec
shll
lock
jnp
mov
dec
lahf
addl
add
lcall
pop
sbbb
lret
sub
test
mov
push
xlat
push
sbb
add
and
test
stc
ja
adc
imul
mov
icebp
add
or
mov
pop
add
jp
daa
jae
mov
add
cmpsb
push
add
inc
add
pop
sub
pop
ds
mov
add
dec
es
mov
cwtl
mov
lahf
and
adc
xor
int
fucom
loopne
dec
movsb
lahf
push
insl
cmpsb
roll
add
stos
sbb
sbb
sbb
pop
push
aam
cmp
fimuls
sbb
shlb
xorb
fwait
sub
ror
jl
stos
and
aas
adc
je
scas
scas
pop
adc
mov
push
add
inc
mov
dec
or
in
test
in
out
pop
jae
lret
sarb
flds
not
stos
iret
stos
fsts
stos
rorb
insl
aas
mov
imul
or
hlt
insl
icebp
out
inc
pop
clc
aad
mov
pop
insl
mov
repnz
xchg
pop
mov
pop
fwait
adcb
scas
cmc
or
mov
sub
frstor
test
lcall
xor
push
mov
xorb
loop
sub
insb
cli
int
js
inc
mov
lret
cmp
call
pop
in
shr
fucomi
ds
lods
and
and
out
push
filds
mov
inc
int
xchg
add
add
mov
cmc
mov
repz
mov
xorb
pop
enter
insb
xor
test
outsb
mov
icebp
cmp
jo
aam
push
movsl
cwtl
pushf
or
push
or
movsb
mov
mov
push
xchg
jnp
mov
jp
rcr
sub
push
jns
out
fdivrs
cs
js
cmc
ret
cwtl
jp
outsl
push
mov
push
ret
and
rorb
lods
lret
out
jbe
pop
inc
ss
repz
xchg
aas
cli
mov
or
jl
jp
lock
jno
aaa
insb
out
int3
mov
out
cmovne
das
jb
adc
scas
pop
sub
je
dec
mov
jge
or
ljmp
cmp
lahf
mov
dec
sub
mov
inc
mov
or
push
cmc
fsubs
dec
add
movsb
out
cmpsl
jo
pop
repnz
mov
cmc
and
add
or
out
adc
sub
jge
in
and
xor
aam
fs
fcoms
arpl
lret
fcmovbe
js
jo
push
rol
xorl
pop
push
and
add
orb
sub
fs
aas
push
pop
cs
add
xlat
insb
cmpsb
rorb
in
push
in
ja
mov
add
lds
sbb
xchg
dec
insb
rorb
sub
pop
or
ja
sbb
nop
pusha
mov
xor
jo
lds
rol
mov
push
adc
inc
inc
mov
mov
cmpsl
adc
leave
cmpsb
pop
outsl
pop
icebp
mov
aas
fidivl
mov
je
xchg
jle
in
mov
cmpsl
inc
add
sub
inc
push
ret
push
and
dec
inc
bound
aaa
sahf
pop
mov
jl
call
insb
out
push
mov
jae
xor
aam
and
sbb
and
jmp
xchg
mov
xchg
cli
hlt
or
push
fldcw
dec
cmp
arpl
fcoml
out
into
shll
in
push
sub
mov
shll
sub
lods
fsubrl
xor
mov
loop
jns
push
fadd
je
sbb
mov
aam
ja
mov
jbe
leave
inc
jno
flds
mov
xchg
jae
dec
addr16
fcomps
cmp
mov
into
repz
pop
ret
xor
xlat
dec
xor
std
add
int
scas
mov
pop
xor
jno
cmp
or
sbb
xor
or
fbld
mov
in
fdivrs
pop
fs
jnp
lods
push
xor
sti
filds
pop
test
es
scas
adc
ret
add
adc
cli
adc
insl
inc
popf
js
subb
movl
iret
addr16
imulb
inc
je
xchg
idivl
aas
add
or
jle
pop
pusha
adc
sub
into
push
adc
inc
jbe
jl
jns
orb
push
jmp
inc
in
xor
fwait
xchg
mov
popa
xchg
push
or
push
repnz
popf
lods
push
outsb
fxch
sahf
mov
lcall
js
ja
pop
dec
hlt
xor
loopne
mov
fiaddl
orb
loope
inc
pop
cltd
into
sbb
cmp
sub
xchg
pop
xchg
xchg
stos
sub
jne
jl
hlt
in
lods
mov
sarb
mov
add
nop
in
js
lcall
ss
push
mov
xor
pop
neg
loopne
add
leave
ja
push
test
sbb
sub
push
pushf
dec
mov
mov
sbb
xor
xchg
inc
push
xor
pop
scas
mov
aad
lahf
pop
leave
pop
pop
push
xor
mov
dec
loope
addr16
and
std
mov
cs
scas
sub
shrl
push
push
call
and
test
sbb
dec
outsl
fnstcw
push
sub
addr16
pop
scas
mov
leave
jb
or
push
xor
mov
shrl
insl
mov
jp
pusha
add
loop
loop
jnp
pop
inc
popf
push
pop
rol
cmpsl
fsubp
pop
and
xor
and
push
xchg
pushf
adc
fdiv
jnp
add
outsl
dec
or
adc
mov
lret
aaa
xchg
int
push
mov
xchg
shlb
insb
mov
mov
insb
fstpt
sbb
out
daa
out
ror
in
mov
in
sbb
sahf
mov
or
inc
mov
sbb
ret
shrb
push
sub
stos
mov
in
xchg
scas
mov
iret
cs
fdivr
fucomip
dec
xchg
in
sub
sysenter
repnz
icebp
mov
xor
scas
in
push
add
adc
repz
imul
xor
dec
mov
fidivl
mov
pushf
mov
adc
mov
sub
cmc
jp
mov
ja
xchg
stos
repnz
cmpl
push
cmpsl
ds
jle
aam
cs
popa
cmpb
mov
mov
imulb
stc
pop
or
test
outsl
int
jno
inc
sbb
aam
jl
hlt
imul
data16
xchg
inc
inc
or
mov
in
or
mov
mov
jp
andb
or
lods
push
addb
cmp
push
and
pop
cmp
ja
sbb
push
ljmp
mov
mov
pusha
lahf
cmp
or
arpl
test
sahf
jne
les
add
into
adc
aad
pop
loopne
insb
dec
jnp
xor
out
inc
pop
fildl
in
push
mov
cli
pop
lcall
cmc
and
xchg
pop
negb
test
adc
fstpt
addr16
inc
add
add
cs
daa
ds
cli
lods
in
sbb
insb
jp
lret
xchg
mov
ror
fcomi
shll
jge
push
addb
test
push
adc
xor
inc
aam
jp
xchg
push
or
test
pop
jo
sub
popa
pushf
stos
test
mov
mov
push
out
insb
xchg
add
cmpb
pop
xlat
sub
cmp
inc
or
xor
jmp
adc
mov
pop
imul
lret
cmp
add
sbb
das
mov
inc
sub
add
or
ss
inc
ja
lahf
mov
shl
push
shl
in
mov
mov
dec
js
sub
int
repz
pop
bound
mov
sub
ljmp
dec
mov
cwtl
mov
push
xor
insl
sbbb
mov
lea
xor
imul
jg
and
pusha
xor
fadds
data16
inc
mov
mov
pushl
pushf
into
addr16
jmp
push
nop
popf
add
clc
inc
ror
dec
pop
out
out
and
mov
xor
cltd
inc
ljmp
jns
sbbl
adc
pop
inc
push
push
rcll
out
shrl
mov
xor
pop
aad
dec
inc
sub
add
cmp
mov
call
stos
mov
fwait
in
fdiv
dec
ljmpw
dec
mov
fucomi
repnz
loope
lods
push
dec
mov
mov
dec
and
lds
jns
mov
cwtl
add
insb
jno
cmp
adc
test
pop
fisubrs
test
xchg
into
xchg
push
fwait
adc
jp
out
mov
negl
or
mov
mov
lock
test
jmp
mov
or
cltd
or
or
fists
imul
push
inc
adc
shll
cwtl
push
jle
mov
fldl
imul
sbb
cmp
jo
shlb
cmpsl
lret
dec
popf
loopne
dec
cmp
sahf
out
std
iret
mov
mov
jae
pop
jbe
sub
dec
xor
shlb
adc
jl
pop
fldl
pop
dec
out
sbb
push
sbb
push
pop
inc
rcll
pop
imul
xchg
insl
push
push
addr16
inc
adc
cs
cmp
sub
test
add
lods
adc
ret
fisubrs
push
aad
xor
or
jmp
jl
inc
std
xorb
ss
xlat
mov
rolb
jle
lods
sub
xor
pushf
les
fdivp
jle
xchg
jb
sub
adc
jle
dec
loope
jge
dec
sub
mov
cwtl
mov
xor
dec
jae
jmp
stc
fidivs
pop
sbb
loope
insl
lahf
pop
add
int3
int
jne
mov
sub
pop
out
das
xlat
jns
mov
repnz
sarb
cmp
push
pop
rcrl
mov
add
fidivl
inc
fwait
sub
mov
nop
int3
in
fistpl
nop
pop
xchg
and
mov
inc
xor
stos
mov
xchg
lret
dec
add
into
push
nop
pop
jne
sahf
cmp
pop
mov
pop
pop
xchg
dec
fs
push
call
mov
cmp
add
mov
sub
fs
sub
inc
movsl
xchg
push
jb
retw
and
mov
or
mov
cmpb
loope
push
dec
mov
clc
mov
xchg
xchg
gs
fpatan
sbb
and
pusha
or
add
lcall
xchg
mov
and
add
ja
icebp
cmp
je
jg
and
clc
ss
push
imull
xor
cmc
sub
movsl
jne
adc
addl
xorl
mov
pushf
jge
push
leave
aaa
dec
pop
push
add
addr16
or
cmp
push
cmc
addr16
sarb
inc
insl
je
orl
sbb
call
xchg
fcomi
adc
out
adc
and
stc
jp
mov
int
fistpl
iret
mov
sub
call
mov
cmp
test
push
xorl
aam
mov
pop
sub
bound
jns
xchg
sti
ljmp
jmp
int
fisubrs
ss
or
cmc
lods
jbe
gs
arpl
sub
jno
adc
insb
pushf
icebp
add
adc
jnp
sub
aaa
mov
fcmovu
push
mov
aas
gs
out
mov
lds
movsl
inc
sahf
mov
jno
jl
xchg
jecxz
and
aas
lds
push
pop
mov
andl
xor
movsl
jecxz
adc
jb
fmuls
repz
jle
mov
lods
cmp
stc
pop
mov
or
jg
pop
mov
out
mov
adc
cld
rcr
sbb
dec
sti
and
jbe
jecxz
jnp
stc
mov
jle
mov
mov
adc
mov
stos
mov
sahf
outsb
mov
ret
subb
js
clc
in
dec
mov
paddw
iret
lods
sbb
sbb
scas
dec
inc
loopne
mov
add
cltd
test
repnz
mov
xor
inc
pop
enter
push
sub
xor
clc
xchg
movsb
inc
shrb
inc
shrb
flds
leave
mov
cmp
sbb
pop
lods
and
icebp
arpl
sub
testl
fbstp
push
inc
cmpsl
daa
and
mul
cwtl
hlt
aam
test
repnz
int
fisttpll
das
arpl
aas
mov
call
fmulp
bound
outsl
mov
gs
stos
lcall
inc
ja
lea
test
rcrl
insl
sahf
fisubs
or
cmpsl
popf
mov
stc
push
leave
cmp
push
cmp
rcrb
add
inc
jecxz
cmp
mov
cmp
inc
scas
les
adc
pop
pop
jmp
mov
das
push
sti
orl
frstor
call
or
daa
dec
push
fs
pop
lcall
xchg
int
sbb
fdivs
std
leave
or
push
sti
add
int3
jae
mov
insb
int
jecxz
sti
inc
xchg
lds
aad
movsl
cld
xor
std
inc
inc
or
adc
sbb
not
outsb
adc
cmpl
outsb
cmp
add
fldenv
shrl
test
addr16
mov
dec
mov
dec
mov
mov
mov
inc
icebp
jle
jge
gs
cli
cmp
insb
mov
mov
push
mov
loope
movsl
mov
out
dec
sbb
push
inc
mov
rcll
les
inc
sbb
test
push
loop
add
stos
pop
inc
xor
or
insb
xchg
xchg
rcr
jle
mov
adc
stc
sub
cmpsb
clc
jns
jecxz
inc
and
or
mov
jge
pop
scas
cltd
mov
loopne
xor
and
push
mov
dec
xlat
test
test
jg
and
repz
je
cs
and
dec
ss
ret
mov
dec
mov
or
cmpsl
xor
mov
out
insl
jg
xchg
add
mov
xor
fnstenv
or
fisubl
nop
inc
sub
sub
cmp
shlb
filds
cs
insl
into
ljmp
pop
lcall
mov
sub
and
test
lcall
dec
scas
pop
mov
mov
data16
shrb
addl
in
bound
cmp
loopne
dec
sub
jmp
xchg
outsb
imul
mov
lahf
adc
add
pop
je
push
adc
sbb
mov
sar
fistpll
mov
mov
xchg
jb
inc
ret
js
inc
fstps
daa
pop
aam
sub
shrl
and
jbe
popl
push
add
xchg
mov
sbb
repnz
pop
repz
mov
jbe
xor
loop
in
push
cwtl
ljmp
clc
pop
testl
mov
pop
mov
lds
and
fiaddl
push
fdivl
dec
pop
push
push
jge
loopne
xlat
adc
ja
adc
std
add
pop
dec
cltd
mov
push
push
test
mov
xchg
dec
stos
jecxz
cmp
dec
and
xor
mov
cmpsl
icebp
or
stos
sbb
cld
jo
jmp
hlt
xor
inc
scas
shll
ja
dec
push
jae
cmp
out
lea
fwait
xor
leave
mov
andb
pop
outsb
outsb
cmpsb
pop
jne
push
push
xchg
pop
mov
into
lcall
pop
sub
adc
jbe
and
sbb
ja
pop
lock
jns
and
mov
cmp
rolb
jecxz
aas
sbb
inc
inc
lds
ljmp
lret
lock
or
iret
aam
rcr
and
inc
jb
loope
lods
int3
sub
enter
leave
cs
inc
lahf
inc
add
xor
jecxz
orb
mov
mov
pop
pop
imul
loopne
inc
or
in
xor
sub
repz
adcb
jne
mov
loope
fnstcw
sbbl
mov
and
xor
mov
hlt
add
and
ret
sbb
xchg
sub
sub
add
cltd
mov
cmpsl
and
adc
test
push
add
std
mov
or
pop
in
inc
inc
mov
scas
sub
out
or
stc
loop
xchg
out
pusha
outsl
pop
shlb
roll
je
stos
nop
lock
and
mov
ret
mov
mov
cli
adc
mov
das
into
and
xorb
dec
lea
mov
rcrb
push
xchg
push
jle
xor
dec
mov
mov
push
arpl
das
lret
lock
cmpsl
push
xchg
popf
shll
cltd
test
ficoml
and
mov
add
pop
jne
jnp
push
in
lret
lret
mov
loopne
pop
or
imul
sbb
inc
cmpsl
push
push
pop
push
lods
inc
jno
mov
dec
syscall
mov
mov
lret
pop
xchg
mov
fcom
push
or
lcall
out
push
push
add
cmpsb
inc
loope
cld
lahf
dec
adc
in
push
cltd
jg
mov
adc
mov
flds
in
push
mov
inc
shrb
cmpb
sub
pop
cwtl
cmp
lods
scas
push
popa
mov
mov
xchg
jp
sbb
sbb
push
insb
lock
popa
lcall
clc
jmp
out
mov
push
test
js
ret
xchg
xchg
add
push
dec
sub
je
jg
mov
jb
xchg
inc
ljmp
jecxz
add
adc
mov
cmp
adc
in
jae
les
or
addb
push
test
arpl
movsb
mov
mov
stc
outsb
mulb
lret
and
shll
ret
adc
adc
xchg
cmp
sbb
mov
inc
outsl
rcrl
in
data16
push
inc
sbb
mov
mov
test
lds
ljmp
sub
xchg
enter
fstpl
sbb
push
pop
push
xchg
imul
mov
into
movsl
push
inc
lea
adc
aas
cmpsb
jbe
clc
stc
jns
bound
cmp
out
test
sbb
or
pop
pop
inc
pop
mov
mov
mov
fwait
sbb
mov
pushf
jae
pop
insl
cmpb
add
ds
hlt
sbb
adc
addr16
xchg
push
outsb
stos
or
lcall
xor
push
push
pop
ret
data16
sub
dec
fs
xorb
mov
sub
pop
ffree
out
push
inc
sbb
inc
fadds
stos
pop
dec
xorl
lret
in
test
stos
ret
sub
cmp
push
and
sbb
mov
pop
ret
mov
push
cmp
xlat
int3
add
mov
in
jns
and
inc
and
iret
sub
pop
pop
xchg
mov
mov
aaa
sub
test
xor
cmp
dec
gs
divl
pop
jecxz
adc
fadd
sbb
pop
pop
fstps
ret
lahf
lods
bound
mov
pop
popa
xor
mov
adc
mov
clc
jns
shr
in
leave
mov
dec
sub
mov
bound
cmpsl
gs
mov
lea
dec
rcll
std
aam
jmp
jnp
movsb
imul
in
mov
push
push
pop
add
jns
xor
xchg
push
aas
pop
pop
dec
jmp
xchg
test
push
sub
in
dec
stos
pushf
pop
js
insb
leave
punpcklwd
jnp
shrl
add
cmpsl
mov
in
outsb
sub
iret
pop
inc
cmp
cwtl
jo
jbe
test
loope
or
outsl
dec
punpcklbw
push
daa
mov
cmp
jns
mov
sub
or
xor
test
outsl
adc
cmp
pop
or
and
scas
mov
mov
xor
xor
stos
jnp
mov
mov
sbb
jae
push
jbe
mov
inc
mov
cmp
inc
push
xor
adc
jno
jge
jecxz
insb
sub
jae
sahf
xchg
xor
dec
and
out
std
std
xor
negl
lcall
pop
and
fcoml
test
iret
incl
mov
mov
hlt
cwtl
out
fcmovbe
sub
cltd
icebp
cmp
or
outsb
cmp
sbb
jno
cmp
loopne
and
inc
adc
addb
pop
arpl
jne
add
jo
cmp
adc
sti
mov
push
imul
shrb
shll
pop
ret
sbb
jno
mov
adc
jae
xor
scas
xor
cmp
pop
mov
inc
imul
jg
sub
sub
andl
sub
sub
push
inc
movsb
sub
xor
dec
movsl
pop
jno
dec
inc
push
cmp
adc
js
push
ret
loope
fadds
add
or
lods
adc
test
cmpsb
mov
sub
fsub
push
fwait
pop
mov
push
add
inc
int
imul
xorl
sub
aam
mov
add
mov
mov
data16
push
or
out
cmp
stos
pop
scas
dec
mov
add
mov
in
pop
inc
mov
dec
out
test
xor
ret
pop
orb
pop
mov
adc
hlt
ficompl
adcb
popa
into
dec
jno
adc
cmp
cwtl
lret
cmc
sub
dec
jo
mov
inc
cmpsb
inc
mov
sub
push
push
enter
lcall
fists
lods
xchg
add
adc
in
add
or
int
pop
pop
dec
lods
sub
call
sahf
cli
fcmovu
scas
test
pusha
shll
jecxz
rcr
jno
xor
push
sub
xchg
out
adc
push
jg
jne
dec
dec
enter
mov
adc
xchg
mov
jnp
sbb
push
mov
inc
pop
mov
sub
dec
sbb
ret
pop
push
push
inc
cmp
adc
inc
fsts
lret
shlb
jge
inc
mov
jno
sbb
xchg
or
xor
sbb
pop
jo
jecxz
out
fcoms
int3
sub
outsl
bound
lret
out
sarl
or
jns
sbb
mov
inc
add
sub
and
loope
cmp
xchg
jmp
lret
jbe
add
push
sbbb
sbb
and
std
fidivl
and
or
push
jo
insl
fnsave
or
fbld
fnstenv
sub
insl
das
mov
push
mov
inc
mov
xchg
xchg
sub
out
xchg
mov
test
int
xchg
movsb
mov
dec
filds
add
in
jb
stc
out
mov
and
sbb
insb
xchg
stos
mov
and
inc
mov
sbb
lret
sbb
and
mov
jo
call
scas
mov
dec
and
sbb
fcomps
test
leave
insb
lcall
pop
sub
xor
out
mov
inc
dec
sub
rcl
in
leave
les
stos
pusha
mov
test
shlb
cmc
out
cmp
aas
outsl
imul
push
adc
test
sub
stc
jmp
dec
es
push
cmp
leave
mov
sti
or
cmpsl
sahf
lods
and
inc
aad
pop
insl
adc
sub
push
mov
adc
je
cmpsl
xor
aaa
xchg
dec
xor
jbe
inc
daa
lods
lret
pop
jnp
dec
jbe
xor
jae
lock
pop
mov
or
dec
dec
daa
repnz
mov
arpl
stos
popa
mov
outsb
lods
push
idivb
mov
dec
cmp
fwait
rcl
push
sub
into
sub
xor
xchg
cmpsb
fadd
mov
pop
mov
xchg
or
sbb
fidivrs
mov
scas
xchg
sub
fdivrl
fwait
js
dec
leave
jle
dec
fbld
sub
sbb
mov
pop
fnstenv
mov
fcoml
loope
iret
jl
jge
cld
lock
mov
bound
movsl
dec
loope
mov
sub
pop
shl
pop
sahf
fmuls
ss
std
xchg
xchg
xchg
ss
cmp
std
mov
lret
push
daa
jmp
xchg
jg
adc
cmp
xchg
sbbl
jge
sahf
pop
lcall
lock
pop
hlt
jmp
imul
sahf
out
jne
mov
shll
fwait
xorl
mov
test
test
jecxz
or
dec
out
fists
sbb
mov
clc
add
add
rolb
jnp
iret
jge
dec
and
loopne
mov
jb
jecxz
ss
cld
iret
shr
adc
xchg
rclb
pop
jnp
pop
outsb
xchg
jbe
iret
cwtl
arpl
cld
aam
inc
jbe
add
testb
fildl
dec
xor
dec
imul
gs
arpl
lahf
dec
jg
sub
aam
xchg
jmp
dec
dec
lret
push
outsl
add
cmp
mov
xchg
testb
addr16
pop
loope
push
out
mov
xchg
daa
jb
repz
loop
dec
iret
xor
loopne
movsl
dec
out
dec
mov
mov
jmp
add
clc
and
dec
push
pop
iret
cs
mov
push
xchg
mov
fstpt
mov
mov
xchg
xchg
jnp
mov
out
ffreep
aad
mov
mov
pusha
mov
int3
cmp
addr16
cli
or
mov
enter
mov
or
sbb
out
push
nop
lahf
jns
pop
xchg
adc
js
mov
or
pusha
xchg
add
mov
lahf
arpl
inc
dec
nop
dec
pop
mov
inc
inc
addl
adc
jmp
and
call
jne
lret
jmp
jp
mov
imulb
lcall
sub
ret
pop
lret
cmp
add
add
leave
mov
imul
lods
stc
int
fadds
call
lods
int
jne
inc
insb
mov
inc
rorl
imul
scas
xlat
imul
mov
push
xchg
mov
movsb
enter
loopne
cmp
jns
test
jge
mov
je
gs
sbbl
add
dec
pop
adc
jae
adc
and
int3
jp
xlat
dec
lods
pop
or
push
call
das
pop
xchg
lahf
mov
sub
ret
fistpll
xor
mov
adc
fildl
mov
dec
hlt
push
pop
or
lods
dec
out
add
and
ljmp
and
and
aam
inc
mov
pop
int
mov
fsubrs
mov
pusha
and
inc
aaa
sbb
mov
addr16
xchg
nop
mov
mov
js
or
inc
pop
ficomps
mov
enter
out
das
aad
mov
jle
leave
cwtl
lcall
xchg
add
out
sarl
test
roll
xchg
js
xchg
dec
lock
and
jo
mov
dec
or
js
push
inc
in
sbb
and
lret
sbb
ret
loop
xchg
out
je
jmp
jl
push
imul
add
outsb
in
sbb
sbb
mov
inc
jmp
and
and
jmp
insb
aaa
icebp
pop
dec
and
pop
sbb
ret
outsb
sti
movsb
cli
mov
lret
ja
lock
aaa
jo
or
or
jecxz
and
pop
fs
lcall
add
xchg
inc
xor
jecxz
ret
xchg
lds
sbb
out
ja
subb
ds
inc
aad
scas
push
cmp
mov
addr16
sti
sub
mov
mov
fistps
and
inc
pusha
mov
mov
xchg
or
inc
dec
cli
and
sub
pop
insl
dec
popf
insb
pop
je
imul
mov
loopne
pop
int
cld
dec
leave
push
and
mov
cld
cmp
cmp
jbe
ret
les
inc
pop
lret
mov
pop
inc
and
dec
fimuls
cmp
and
shlb
cld
mov
mov
mov
xor
inc
push
in
push
mov
push
push
test
ret
cmpsb
pop
and
sahf
and
addr16
shr
stos
mov
dec
addr16
adc
xor
or
pop
popa
xchg
dec
cmc
test
pop
test
rcrl
enter
cmp
inc
rcll
in
jecxz
int3
scas
gs
fmulp
and
popa
fbld
leave
movsl
mov
test
jmp
inc
xchg
or
pop
xchg
sbb
sbb
xchg
pop
js
jg
fdiv
repnz
popl
dec
jp
mov
cmp
ss
pop
jnp
out
aaa
mov
push
xlat
pop
movsb
test
test
jno
dec
shrb
inc
imul
jo
pop
or
or
mov
aaa
add
push
icebp
les
fdivl
xor
repz
mov
pop
jle
jb
adc
xchg
mov
jne
je
or
lods
xchg
fs
je
outsl
aad
dec
inc
xchg
sahf
jbe
std
in
jl
mov
int
or
push
std
dec
or
sub
pop
ds
jp
xchg
enter
scas
cmpl
aaa
cmp
sbb
xor
lret
add
inc
sbb
mov
jb
and
outsb
mov
cwtl
outsl
jns
pop
jl
nop
jno
dec
mov
inc
hlt
cmp
fwait
pop
push
lock
pushl
imul
pop
pop
sbb
popa
push
dec
and
es
faddl
add
aad
test
in
add
loop
mov
aad
xchg
out
fcmovnb
repz
sahf
hlt
loopne
insl
cs
testb
inc
sub
std
or
pusha
ja
xchg
nop
ret
ret
out
sub
mov
add
insl
addl
dec
pop
popf
fbld
out
rcrb
sub
gs
add
ret
pop
stos
inc
outsl
shlb
ret
sbb
jbe
js
std
or
push
fstpt
cmp
xchg
ljmp
cli
les
adc
aam
enter
lret
jge
jo
mov
std
xor
lret
or
je
push
insb
push
rcrl
push
bound
jmp
pop
add
int3
arpl
xchg
jg
mov
into
push
inc
in
sbb
mov
mov
hlt
pop
ds
call
mov
popw
inc
inc
jecxz
sub
inc
dec
push
pop
xor
mov
out
mov
mov
ds
cwtl
stos
jb
test
xchg
ret
pusha
ss
add
sub
adc
jmp
or
aad
xchg
inc
and
mov
outsl
ja
js
out
arpl
enter
mov
addr16
xchg
xor
cmp
fwait
xchg
aad
cmp
in
xchg
mov
dec
lods
dec
insl
xchg
das
xor
pop
and
push
sbb
mov
mov
mov
add
das
popl
adc
inc
fdiv
or
adc
imul
js
ret
mov
enter
lcall
rcrl
cmp
mov
lret
mov
mov
push
ljmp
test
into
mov
mov
pop
or
jo
ret
cmp
roll
fwait
jns
lds
popa
xchg
rclb
cld
ss
fwait
xchg
xchg
or
push
mov
das
sub
dec
out
pop
cmp
pushf
dec
pop
test
scas
xchg
sub
sbb
mov
pop
lea
imul
das
cwtl
cmp
pop
cwtl
push
addr16
pop
jbe
jmp
pop
shlb
push
pop
jo
jne
cmpsb
fs
jnp
flds
adc
and
int3
test
jnp
gs
icebp
mov
sbb
shlb
jb
jl
pusha
roll
mov
cltd
or
xchg
adc
in
mov
loopne
and
nop
cmp
xor
jb
jle
jae
jp
mov
in
add
das
aas
jae
nop
xchg
xor
mov
in
pop
bound
insl
fnsave
jmp
cmp
cwtl
stos
mov
mov
add
push
fisubl
out
andb
aad
fwait
cltd
cmpsl
push
push
sub
dec
xchg
out
int
arpl
sarl
cmc
inc
push
lea
jne
imul
cmpsb
lods
mov
mov
push
lea
imul
enter
jb
xchg
inc
mov
fadds
movsb
cmp
cmp
insl
mov
lock
ljmp
ret
repnz
dec
mov
insb
popa
jne
aas
xchg
in
inc
jne
cmp
in
mov
xor
fistl
insb
mov
das
aam
out
lret
cmp
xchg
sub
pushf
dec
aas
xchg
push
ret
push
add
cmp
mov
sub
jae
mov
cmc
addr16
sub
and
inc
dec
inc
mov
fs
add
xor
and
xor
xorl
adc
popf
popa
cmp
roll
scas
push
mov
das
fildl
pop
push
sub
es
cli
shl
imul
pusha
fsubrl
xchg
or
es
cld
push
sbb
sbb
pop
inc
sub
fistps
xchg
leave
sahf
mov
adcb
xchg
add
pop
xchg
push
adc
iret
lahf
push
sub
stos
ljmp
dec
rcrl
fistpll
inc
cs
cltd
inc
and
sub
mov
dec
mov
in
xor
inc
cmp
inc
call
jns
add
loop
cmpb
jp
sarl
adc
out
stos
push
fisttps
daa
sbb
je
jmp
xor
or
adc
add
fildl
add
imulb
sub
mov
lcall
dec
pop
and
inc
ret
les
cmc
adc
bound
push
movsl
lods
xchg
scas
divl
dec
ret
aaa
xlat
jmp
xlat
nop
sub
mov
ds
scas
js
into
jmp
cmp
fwait
in
push
insb
lcall
rorb
push
and
mov
subl
mov
js
jmp
aad
cli
negl
add
scas
fstpl
cmpb
lea
je
jl
aad
imul
mov
or
icebp
push
push
aaa
ja
adc
orb
dec
insl
mov
xchg
mov
xchg
jmp
pop
into
xlat
push
xor
pop
cmp
push
pop
or
mov
adc
ss
sub
repnz
jle
in
popa
mov
test
stc
aam
cmp
aad
mov
hlt
push
lahf
aas
test
out
sub
subl
lea
mov
sub
jle
or
aad
popa
ret
jno
cld
sahf
test
loope
inc
and
pop
cmpsb
out
cltd
data16
into
cmp
lods
mov
int
mov
xchg
mov
rolb
shrb
lods
inc
das
mov
outsl
fwait
je
xchg
dec
add
inc
cmp
inc
and
aad
pop
xchg
movsl
mov
fwait
iret
xchg
pop
cmc
scas
int
cmpsl
mov
call
push
xor
add
and
movsl
imul
add
xor
pavgw
and
xor
arpl
insb
jnp
mov
lds
xorb
pushf
cld
jb
mov
sub
int3
and
test
push
sbb
mov
xlat
mov
mov
shl
mov
dec
int3
out
ficoms
adc
sbb
lret
mov
pop
push
xor
jg
or
inc
mov
xchg
mov
outsl
je
lods
inc
sub
xchg
lods
sbb
jp
imul
sub
push
dec
in
pop
sbb
popa
pop
sub
imul
pusha
es
out
sbb
fsubl
jno
lods
mov
dec
add
xchg
cld
and
or
loope
xchg
sbbl
cmp
sub
cmp
and
in
sub
and
movsl
mov
and
push
sbb
inc
es
aaa
stc
pusha
shrl
and
into
xchg
add
aaa
dec
cmp
stc
add
inc
out
loop
add
hlt
loop
outsb
cmpsb
shld
movsl
fisubrs
in
inc
pusha
in
adcb
stos
into
aad
clc
in
loope
cmpsl
dec
inc
pushf
or
xchg
pop
aaa
orl
fdivrl
dec
stos
sbb
test
add
mov
push
adc
jle
adc
repz
sub
sar
sbb
add
mov
push
pop
je
jmp
push
icebp
cwtl
andb
jno
out
in
ljmp
aas
pop
jecxz
push
mov
mov
lods
pop
or
adcb
ret
daa
cmpsl
ficoms
mov
fnstcw
mov
fbld
daa
cmp
cmpsl
leave
je
stos
add
imulb
cmp
setge
or
ss
push
int3
mov
mov
xchg
ficompl
jmp
add
xor
insl
gs
jo
and
cs
popf
add
jecxz
push
cltd
jbe
push
xlat
push
sbb
add
and
aad
jl
sbb
arpl
mov
jg
imul
dec
push
add
fnsave
sbb
jae
mov
std
cmc
cmpsb
or
mov
roll
iret
pop
sub
pop
ds
mov
add
dec
jbe
inc
idivl
mov
dec
sarl
int3
cmp
js
cmpsb
and
sub
xchg
mov
nop
sbb
mov
aaa
mov
arpl
inc
pop
repz
icebp
pop
and
test
scas
stos
lods
or
shlb
clc
repz
pop
pop
loope
pop
pand
mov
add
outsl
sub
sbbb
fidivs
flds
loopne
sub
jae
pushf
push
xlat
push
and
int3
mov
jg
pop
dec
xor
int
movsl
xchg
arpl
scas
adc
mov
aas
cmp
pop
and
gs
test
xchg
mov
andb
push
mov
aas
sub
movsl
fwait
pop
cmp
arpl
sbb
cmp
enter
stos
mov
scas
cwtl
pop
xor
pop
pop
nop
inc
pop
repz
stc
movlps
insl
mov
dec
and
pop
fbstp
cmp
jbe
aaa
cmp
pop
mov
test
sti
sbb
mov
cwtl
mov
push
push
or
add
jne
or
lcall
cld
adc
shr
sbb
sbb
pop
pop
add
sbb
dec
subb
rcrb
pushf
jno
jmp
and
sbb
or
push
adc
mov
inc
and
out
adc
js
xchg
or
jnp
aaa
lahf
aad
sub
sahf
jne
repz
ja
dec
ret
xor
loop
push
or
add
or
jns
std
xor
push
pmaxub
pushl
cmp
ds
ret
je
and
xor
cmp
loopne
pop
cwtl
out
pop
test
mov
les
push
fnstenv
aam
jmp
mov
sti
sub
mov
fidivrs
xchg
fildl
insb
dec
js
mov
gs
fimuls
cmp
ret
bound
loop
adcl
aaa
dec
jb
pop
insl
mov
in
push
dec
or
mov
std
add
pop
ss
sbb
xor
mov
mov
dec
adc
mov
stc
inc
add
mov
inc
stos
pushl
sbbl
mov
mov
push
push
jl
cmpsb
add
ficoml
shlb
outsl
js
xlat
mov
pop
mov
popf
in
mov
mov
and
fldl2t
ficompl
dec
addr16
inc
and
out
xor
sbb
lret
dec
addb
mov
adc
movsb
pop
aam
inc
jg
cmp
pop
shll
loopne
xchg
insl
iret
daa
add
cs
test
xchg
push
xor
or
cmp
aaa
mov
ret
int
adc
mov
mov
lods
push
imul
into
mov
jo
lret
fnstsw
add
dec
jbe
add
mov
sbb
es
mov
and
add
movsb
cmp
xchg
sub
pop
mov
les
rcr
dec
sub
out
push
ret
mov
nop
call
sbb
jo
pop
push
out
mov
inc
aam
pop
and
mov
mov
fistpl
mov
fidivrs
mov
mov
int3
sbb
xchg
enter
popa
lret
jg
and
fdivrl
out
loope
push
test
inc
dec
and
xlat
lret
in
bound
cli
sbb
mov
fdivs
mov
mov
mov
or
enter
inc
mov
or
xchg
das
hlt
jae
scas
push
loop
repz
cmp
loope
adc
dec
sub
mov
gs
std
sbb
inc
mov
dec
lods
shl
mov
xor
sub
xchg
hlt
inc
cmp
xchg
fisttpll
jle
and
insl
inc
popf
cmpsb
sub
test
cmp
cmp
pop
cltd
std
and
xor
adc
xchg
add
or
jle
sahf
mov
xor
push
xchg
sarb
fcmovbe
mov
dec
cmpsb
sbb
por
in
arpl
je
ror
cli
ret
mov
insl
repnz
popf
lods
push
outsb
fxch
sahf
mov
lcall
js
ja
pop
dec
hlt
xor
loopne
mov
fiaddl
orb
loope
inc
pop
cltd
into
sbb
cmp
sub
xchg
pop
xchg
xchg
stos
sub
jne
jl
hlt
in
lods
mov
sarb
mov
add
nop
rcl
cmpsb
mov
or
nop
int
ficompl
mov
xor
pop
neg
loopne
add
leave
ja
push
test
sbb
sub
push
pushf
dec
mov
mov
sbb
xor
xchg
inc
push
xor
pop
scas
mov
aad
lahf
pop
leave
pop
pop
push
xor
mov
dec
loope
addr16
and
std
mov
cs
scas
sub
shrl
push
push
call
and
test
sbb
dec
outsl
fnstcw
push
sub
addr16
pop
scas
mov
leave
jb
or
push
xor
mov
shrl
insl
mov
jp
pusha
add
loop
loop
jnp
pop
inc
popf
push
pop
rol
cmpsl
fsubp
pop
and
xor
and
push
xchg
pushf
adc
fdiv
jnp
add
outsl
dec
or
adc
mov
lret
aaa
xchg
int
push
mov
xchg
shlb
insb
mov
mov
insb
fstpt
sbb
out
daa
out
ror
in
mov
in
sbb
sahf
mov
or
inc
mov
sbb
ret
shrb
push
sub
stos
mov
in
xchg
scas
mov
iret
cs
fdivr
fucomip
dec
xchg
in
sub
sysenter
repnz
icebp
mov
xor
scas
in
push
add
adc
repz
imul
xor
dec
mov
fidivl
mov
pushf
mov
adc
mov
sub
cmc
jp
mov
ja
xchg
stos
repnz
cmpl
push
cmpsl
ds
jle
aam
cs
popa
cmpb
mov
mov
imulb
stc
pop
or
test
outsl
int
jno
inc
sbb
aam
jl
add
add
add
and
inc
add
add
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
and
add
add
and
test
add
add
adc
add
add
and
push
add
