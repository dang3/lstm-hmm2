cli
adc
lret
stos
sti
cmp
mov
rcl
mov
mov
lds
rcll
punpckhbw
aas
scas
das
out
inc
xor
xchg
mov
add
and
or
stos
imul
hlt
bound
mov
repz
jge
scas
sub
push
and
faddl
pop
xchg
or
adc
test
rcll
or
ret
pop
lcall
or
jmp
repnz
sub
push
dec
pop
cmp
andl
lea
mov
jge
cmp
cmp
imul
jmp
cmpsb
cmc
xor
scas
mov
or
or
mov
cmc
out
clc
sub
pop
insb
push
lds
add
fisttps
shr
pop
sbb
mov
jbe
or
enter
push
insl
leave
lcall
in
mov
cmpsl
inc
enter
and
fdivrl
xor
pop
or
adc
mov
mov
xlat
fdivl
mov
or
inc
lret
outsl
sub
and
xor
fwait
mov
sbb
popa
add
adc
popa
adc
mov
adc
js
adc
jg
sub
icebp
and
aad
push
pop
sub
inc
mov
inc
and
addr16
testb
lret
adc
xor
cmpb
jecxz
cmp
popa
ds
xor
sbb
mov
imul
leave
inc
ds
popf
sub
lock
mov
mov
dec
jbe
sbb
fadds
iret
or
add
and
les
jno
ja
idivb
les
push
mov
pop
dec
outsb
pop
mov
jl
push
xchg
pop
fldcw
add
and
jae
mov
cmp
add
push
adc
sbb
jp
movsl
daa
mov
gs
jmp
jne
lock
das
mov
xor
push
jno
insl
icebp
test
adc
popa
shlb
js
fcmovb
mov
and
mov
xchg
addb
push
into
push
sahf
sub
dec
fstpl
cltd
xor
adc
loop
out
dec
xchg
addr16
in
inc
adc
xchg
mov
mov
pop
pusha
icebp
repz
xor
rol
stos
xor
out
pusha
pop
idiv
rcll
scas
and
xor
dec
ds
mov
jbe
xlat
adc
subl
gs
xor
idivl
adc
cmp
popl
call
movsb
fcoms
adc
shll
scas
stos
push
popa
dec
sub
jae
out
cmp
jg
cmp
mov
pusha
jmp
jecxz
mov
stc
addr16
in
js
sbb
stc
xchg
jg
mov
subl
push
push
push
dec
in
push
dec
mov
fwait
cmc
or
fld
xor
ficompl
push
push
mov
pop
pop
and
js
pusha
mov
sub
or
ret
cltd
jo
arpl
out
xor
jle
push
daa
in
pop
xchg
ret
xchg
out
xlat
dec
xchg
mov
jno
xchg
fldt
imul
or
lret
mov
imul
sbb
test
inc
mov
and
fs
clc
xor
das
insl
cltd
fldenv
repz
mov
mov
xlat
and
sub
or
shl
sbb
jge
cmp
inc
js
or
std
pushf
test
xchg
xchg
sbb
fxch
jge
test
add
xlat
aaa
jle
int
and
dec
ret
incb
mov
sub
inc
loope
mov
les
in
push
dec
inc
hlt
push
and
icebp
sub
xor
roll
xchg
push
cmp
lret
ss
add
pop
int
inc
notb
adc
aaa
and
jl
fiadds
jnp
scas
adc
xor
sbb
sub
add
loope
repz
call
pop
lcall
shll
inc
insb
in
fildl
aad
sub
adc
lea
ja
movsb
call
js
push
fisubrs
pop
pcmpgtd
push
and
fsubp
add
gs
mov
pop
sbb
sub
xchg
lods
inc
arpl
jb
inc
xor
in
rcrl
clc
xchg
out
sub
popf
xchg
ss
pop
js
je
mov
negb
outsb
icebp
mov
push
clc
shl
xor
cltd
fwait
data16
clc
iret
jmp
cwtl
or
dec
movq
dec
rclb
in
push
mov
lock
or
imul
jge
insl
xchg
sub
sbb
mov
jg
aas
stos
sbb
xchg
jle
mov
pop
jne
insb
test
popa
into
mov
jbe
or
loop
pop
int3
jo
adc
pop
fsts
cmc
sub
inc
fs
orb
inc
lds
cltd
cmp
pop
jl
jge
pusha
xor
shl
addr16
outsb
dec
sub
push
js
pop
or
popl
add
fisubrl
push
mov
mov
pop
ja
xchg
ss
scas
add
xorb
fsubs
xchg
test
inc
fiadds
xchg
mov
jo
and
stos
jo
fcoml
sar
add
jo
mov
sub
jne
lret
rcrl
std
fadds
dec
mov
adc
imul
push
hlt
std
jb
int3
mov
and
notb
mov
mov
push
or
inc
lcall
xchg
popa
lods
repz
cltd
or
pushf
repnz
dec
out
sub
push
stc
in
mov
cld
lock
sbb
movsl
pop
scas
push
cld
cmp
push
push
push
cmp
sbb
adc
lcall
rolb
test
jb
fdivrl
jno
dec
ja
aas
and
push
insb
push
cmp
sub
mov
adc
ret
daa
or
shlb
mov
sbb
fldenv
loopne
push
enter
cmp
lock
or
or
sti
pop
cmp
fs
je
test
sbb
js
and
pusha
push
cmpsl
mov
xor
xchg
and
dec
xchg
fsubs
fsubl
es
nop
arpl
mov
shl
mov
sbb
fcmove
dec
ror
xor
mov
or
mov
pusha
or
fsqrt
sub
clc
daa
in
sub
add
lahf
mov
jle
bswap
and
inc
pop
es
je
add
rorl
mov
xor
popa
dec
jae
sbb
xchg
shll
in
mov
pop
loop
push
movsl
cmovge
outsb
lret
push
ljmp
dec
jp
cmp
pop
fsubs
mov
and
loopne
pop
bound
xchg
fistps
sub
idivl
jge
dec
into
pusha
dec
cmc
mov
pop
enter
sahf
inc
rcll
add
xchg
cs
je
push
inc
cmpsl
sahf
fisubrl
out
jae
loope
cmp
enter
fstl
push
repz
lock
cmp
adc
adc
mov
lret
pushf
imul
adc
mov
jno
shl
sub
and
xor
mov
mov
in
pop
div
push
fidivl
int
jns
xor
xchg
mov
fstp
mov
add
pusha
and
out
test
sarb
stc
lea
push
mov
mov
out
fdivrl
and
leave
popf
mov
xor
ret
push
cmp
addr16
add
dec
orl
test
cs
inc
arpl
icebp
dec
int3
dec
imul
lret
out
mov
add
pop
ret
inc
and
in
negb
mov
adc
hlt
or
inc
cmp
pop
ja
xor
sbb
mov
dec
add
pop
mov
test
xlat
push
shlb
shlb
mov
mov
iret
xlat
xchg
inc
rol
test
cmpsb
imul
popf
sbb
scas
push
push
push
bound
orb
jne
movsb
std
xchg
mov
jno
les
jecxz
push
push
jl
xor
inc
scas
aaa
cmp
xorb
push
lcall
xchg
or
andb
movsb
lods
inc
enter
and
cmp
bound
daa
jmp
jns
lds
jmp
dec
add
xchg
lds
test
jns
mov
test
mov
out
mov
push
arpl
or
xchg
mov
outsl
fnsave
mov
adc
inc
jbe
jb
and
pop
ljmp
and
cmpsb
cmp
sub
inc
je
scas
je
or
mov
dec
xor
test
scas
jbe
pop
loop
sub
xchg
mov
mov
sub
jmp
mov
mov
dec
das
loope
adc
push
dec
mov
mov
mov
out
testb
stos
sbb
push
cmp
ja
lcall
das
sub
mov
xor
jle
mov
cmc
std
sbb
out
mov
pop
enter
inc
lds
fsub
lcall
fwait
sub
adc
rolb
and
je
outsb
mov
lods
leave
dec
pop
into
dec
daa
cmpsb
addb
xchg
cld
add
cli
xlat
test
and
lahf
add
lahf
or
jo
push
lods
sbb
xchg
adc
lret
mov
cmp
sar
push
dec
mov
idivl
mov
fsub
mov
test
push
stos
push
stos
jmp
jo
jg
pop
sarl
call
inc
stos
outsl
xor
outsb
jl,pn
push
rcrl
adc
mov
movsl
fs
xor
scas
pop
insb
inc
sbb
pop
xchg
dec
push
lret
add
jns
add
addl
xor
jg
jb
in
insb
jmp
bound
loop
icebp
cmpsl
orb
fdivr
dec
mov
cli
fcomip
loopne
test
test
stc
mov
mov
test
jp
xor
add
add
shlb
pop
dec
mov
sub
ret
mov
push
or
arpl
push
add
mov
movq
cli
out
sbb
ds
jno
xor
mov
dec
test
adc
push
ffreep
push
loope
insb
xor
sbb
sbb
ret
inc
mov
inc
sub
andl
adcl
repnz
adcb
addr16
add
pop
andb
cmpl
repz
sbb
lods
mov
and
dec
rcr
hlt
xor
sbb
and
sbb
das
cmp
jl
and
popf
loopne
pop
or
sub
sbb
inc
cmpsb
pop
jmp
dec
inc
dec
cmpb
or
cmpsb
pusha
std
cmpb
js
xchg
sahf
pop
xchg
sbb
divl
sub
and
mov
je
fildll
xor
mov
insb
push
repz
ret
xchg
test
fimuls
push
push
pop
lods
rol
dec
xchg
xor
mov
adc
ds
dec
cmp
add
pop
test
lret
aaa
test
andl
jecxz
push
dec
sub
data16
ja
icebp
imul
stc
push
jns
sub
fsubrl
cmpb
pop
lcall
push
in
dec
in
outsl
jae
ja
sbb
xor
fimull
call
scas
dec
fs
icebp
xorl
pop
mov
pop
inc
lahf
ret
dec
and
bound
pop
rorb
xor
in
movsb
js
sbb
ret
add
shrb
push
mov
mov
sti
adc
mov
sbb
cmp
cmp
data16
subb
sub
jmp
jns
mov
es
xor
mov
ret
test
push
jne
mov
mov
div
xor
clc
std
inc
shll
ret
mov
xor
in
loop
sub
add
clc
mov
xchg
ret
mov
inc
add
repz
sub
or
out
xchg
rorl
das
pop
xchg
insb
pop
notb
gs
sub
fimull
imul
aam
arpl
aas
push
mov
andb
dec
stos
outsl
mov
sbb
adc
in
push
push
and
data16
cmpsl
fstps
ds
daa
leave
xchg
mov
aad
inc
cmp
jo
inc
inc
pusha
xchg
jbe
add
push
adcb
sub
xor
add
icebp
pop
fsts
dec
mov
push
xor
sub
mov
ljmp
xchg
push
cs
leave
nop
xchg
stos
les
stos
sti
fs
fdivrs
add
jl
test
fldt
inc
clc
movsb
test
fsubs
inc
out
xchg
lea
jo
sti
mov
xchg
mov
inc
ret
cmp
repz
dec
stos
xor
mov
and
dec
adc
ljmp
xor
popa
sbbl
imul
int
push
push
xchg
insb
pop
jbe
mov
popf
and
mov
or
in
mull
js
dec
pop
out
jns
fldenv
into
push
sub
test
sbb
sub
jl
jo
loopne
jo
and
lock
cmp
inc
daa
mov
inc
jl
add
sbbb
adc
jmp
xchg
into
ficoml
je
popl
sub
lret
dec
in
jbe
pop
mov
ffree
lret
and
ljmp
sahf
and
lods
ret
lds
stos
call
mov
sub
clc
or
xchg
inc
test
adc
test
dec
pop
aam
xchg
jns,pt
or
mov
pop
minps
mov
std
xor
inc
stc
adc
bound
push
xchg
jle
pusha
aaa
loopne
subb
imul
stos
mov
pop
adc
enter
mov
scas
jecxz
xchg
mov
popf
test
orb
test
fdiv
call
shll
xor
es
sti
xor
cmp
andl
sbb
cmp
xor
iret
or
ret
je
int3
add
inc
cwtl
inc
sub
push
fsts
xor
fsubl
jmp
push
out
ret
ds
sub
xchg
js
or
loopne
mov
stc
add
iret
mov
scas
push
lds
pop
xchg
xor
jge
call
sbb
and
repnz
clc
lods
push
dec
adc
pop
imul
jp
pop
cli
jge
cmpsl
fiadds
pop
xchg
inc
xchg
mov
pop
int
xchg
jp
inc
cmc
inc
jne
add
js
cmp
jl
pop
push
mov
jnp
insb
rcrl
dec
push
xchg
or
jg
jp
push
loop
mov
mov
in
and
fbstp
ret
enter
or
sbbb
xchg
dec
arpl
adc
rcr
mov
shl
xchg
in
cmp
push
xchg
push
into
in
mov
lret
jae
sub
aam
aaa
aad
hlt
sbb
inc
push
xchg
mov
les
cwtl
ja
aam
mov
imul
dec
pusha
adc
mov
sub
lods
daa
mov
test
popa
stc
mov
shll
xor
lcall
xchg
ret
pop
and
lcall
xor
pop
pop
xor
sbb
lret
cmp
stc
cld
and
sub
pop
fldt
jo
in
pop
adc
inc
and
dec
jbe
rcrb
cld
push
cmp
push
pop
and
pop
sub
mov
sub
lahf
mov
shr
jmp
dec
mov
iret
lcallw
adc
sbb
xlat
pushf
adc
fsubrl
cltd
pop
mov
dec
jb
xor
adc
mov
shlb
lea
imul
sbb
les
or
cmpsl
sbb
mov
or
push
push
lock
out
adc
jp
dec
xor
cmp
dec
pop
movsb
xchg
push
test
mov
je
call
iret
xchg
clc
adc
mov
mov
mov
fcmovne
imul
gs
shrb
fists
xchg
xor
fildll
aam
adc
pop
add
push
jnp
test
fs
mov
insb
mov
sub
into
stc
inc
mov
jbe
add
notl
push
insb
xchg
jne
flds
shlb
dec
push
fstps
ds
cmp
setg
lods
sub
or
arpl
pop
jp
cmp
test
adc
nop
push
pop
imul
rolb
sub
pop
icebp
outsb
sub
idivl
push
imul
cs
insb
xchg
push
push
mov
cmc
pop
sbbl
fldenv
add
jecxz
stos
sahf
xor
cwtl
or
xchg
mov
repz
push
lcall
xchg
fdivl
xchg
inc
aam
cmp
and
ret
lret
xlat
ss
xchg
jno
loopne
adc
in
in
push
cmc
add
adc
fsts
iret
cmpsb
sub
push
dec
test
repnz
fadds
adc
xchg
mov
dec
sbb
sahf
mov
adc
enter
push
cmpsb
pop
ja
xchg
inc
leave
jo
xor
mov
mov
jl
pop
pop
push
and
or
fistpll
in
ret
sbb
xor
mov
adc
addr16
pop
jo
or
inc
fstpl
sub
in
scas
rorb
das
dec
inc
popf
xchg
mov
add
xor
sub
lods
clc
mov
and
out
sbb
cmp
jge
pop
popa
loopne
fsubs
fisttpll
ss
into
xchg
and
std
mov
mov
loop
sbb
mov
leave
aad
adc
fwait
out
rorb
jle
and
cmp
jle
sbb
sbb
vsubpd
pop
sub
shll
nop
cmp
adc
cmp
ja
add
jo
aad
xlat
pop
dec
dec
push
jmp
jecxz
pop
into
inc
push
testl
fwait
scas
mov
fisubrs
std
and
push
out
fwait
movsl
push
push
inc
fnstsw
in
dec
jl
dec
sar
inc
and
imul
inc
idivb
imul
jge
idivb
fsts
popa
cmp
ficoml
inc
inc
int
mov
dec
push
mov
mov
fldt
lret
cmc
ljmp
and
xchg
pop
aaa
add
popf
test
repz
in
sbbb
push
adc
sbb
test
insl
mov
ja
pop
cmp
push
jmp
addr16
insl
adc
mov
push
push
divl
add
inc
test
jo
bound
das
push
push
push
inc
out
mov
push
pushf
shlb
sub
sub
xor
movsl
pop
fnstcw
les
ss
pop
out
fsubs
repnz
or
cli
mov
push
ficomps
sub
cmp
sbb
mov
scas
mov
dec
push
mul
int3
test
push
dec
mov
roll
sub
fimuls
inc
scas
les
popa
cmc
hlt
iret
fadd
je
adc
icebp
ss
andb
xlat
mov
fld
test
ret
mov
adc
sbb
addr16
xor
testb
out
mov
andl
sub
push
ja
and
test
lcall
or
scas
lret
subb
cmp
lea
push
jg
stos
sbbb
cmp
xchg
jbe
xchg
int3
sbb
pop
lcall
sub
pop
pop
lods
push
dec
add
sbb
mov
daa
lret
jno
push
xchg
push
adc
aas
repnz
jns
lock
add
hlt
insb
pop
aad
int3
cmp
xor
sub
fisubrs
out
std
sbb
mov
sub
inc
popl
cld
shrb
jmp
or
jno
mov
and
add
iret
mov
push
jmp
mov
fwait
push
sbb
jle
pop
int
pop
aas
iret
loope
fisubl
pop
sti
adc
aam
or
clc
out
xchg
mov
out
jle
inc
inc
dec
mov
loop
call
jp
pop
pop
sub
out
xchg
sub
sub
js
sbb
add
bound
mov
into
lock
and
in
scas
jecxz
push
jg
lods
dec
aad
and
lret
push
jmp
or
and
test
cmc
pop
jge
addb
jmp
inc
popa
xchg
and
add
and
pop
lock
adc
or
sub
or
mov
stos
mov
xchg
cmp
jb
ret
xor
pop
cltd
mov
xor
arpl
sub
mov
sub
xchg
pop
hlt
sbb
inc
lea
pop
push
add
int3
bound
cmpsl
cltd
push
sub
or
iret
xor
add
inc
fbstp
repz
mov
cmp
dec
jp
xorb
and
mov
aaa
hlt
mov
xchg
sahf
into
sbb
and
jle
or
test
cmp
xor
outsb
pop
clc
and
out
xchg
scas
jl
icebp
pop
xchg
xchg
add
xor
aam
out
aad
pushf
adc
adc
and
sub
push
in
and
imul
das
xchg
ss
xor
mov
jle
and
jmp
or
xlat
stos
dec
test
adc
push
sub
fnstcw
out
in
iret
repnz
cmp
cmp
lods
lock
sti
sub
mov
ret
xchg
push
adc
mov
push
test
inc
aad
fdivs
mov
cmp
sti
mov
add
movsl
fdivr
ds
sbb
push
dec
leave
jno
ljmp
rcl
xchg
iret
xchg
sbb
xorl
sub
or
jne
and
sbb
das
in
rorb
pop
adc
testb
inc
mov
iret
inc
jne
push
test
mov
mov
mov
lret
roll
sbb
xor
pop
or
lahf
mov
out
cwtl
or
iret
pop
or
int3
pop
inc
and
outsb
or
mov
cmpsl
xchg
popa
mov
jp
insb
loopne
xor
add
cmp
ficoms
inc
and
adc
out
mov
jge
cmc
je
loopne
cmpsb
cld
stc
inc
arpl
nop
adc
mov
add
push
in
or
gs
mov
pushf
fdivrs
js
mov
mov
pop
xchg
notl
ja
push
shrb
jno
xchg
sub
xchg
adc
stos
je
pop
and
dec
xchg
xchg
in
push
loope
movsb
xchg
leave
jecxz
out
popa
pop
mov
xchg
mov
mov
lcall
jmp
out
xchg
ds
adc
ret
subb
cmp
mov
push
pusha
decb
mov
sbb
leave
out
decb
xor
mov
pop
popf
gs
mov
cltd
mov
je
cs
jo
mov
ss
repnz
adc
push
xchg
mov
or
or
fs
inc
mov
lret
pop
fwait
add
and
scas
ficoms
add
lods
xor
dec
mov
cmp
push
push
push
push
pop
mov
ja
inc
movsb
aam
pusha
mov
xor
mov
push
cs
rclb
xchg
aaa
jno
push
xchg
fs
ss
sbbb
or
es
jp
add
add
cmc
je
sahf
ljmp
and
jo
popf
push
mov
pop
push
nop
out
or
push
jp
or
fsts
mov
adc
jp
outsb
cmp
loopne
cmpsl
add
arpl
xor
xor
daa
xchg
pop
pusha
popa
ret
test
xlat
shr
ds
loop
cmp
cmovs
es
cmpsl
xchg
inc
adc
mov
push
cmpsl
gs
lods
fisttpll
mov
mov
mov
mov
scas
and
push
fs
leave
aas
dec
movsb
insb
movsl
xor
in
in
outsl
inc
sbb
sub
insl
and
cmp
pop
gs
inc
roll
gs
cmp
into
lahf
sbb
test
jb
orl
adc
test
dec
push
cmp
push
push
jb
xchg
loop
stc
jnp
rorb
mov
pusha
in
int3
sub
xchg
out
test
pop
aad
movsl
xchg
repnz
cmpsl
adc
out
cmp
sti
and
cs
nop
enter
pop
cmp
inc
das
xchg
push
cmp
test
xorb
dec
sbb
mov
stos
mull
push
pop
cmp
adc
mov
mov
stos
lea
cltd
xorb
ja
cmpsb
stos
mov
pop
pop
xchg
push
jns
sub
push
ja
lock
clc
mov
mov
ljmp
shrl
adc
mov
jecxz
add
sahf
addb
int
popf
movsl
ja
and
testl
add
adc
push
push
pop
inc
and
xor
cwtl
fdivp
loopne
xor
or
pop
adc
mov
mov
lock
test
out
sub
dec
roll
inc
shll
dec
jae
jecxz
mov
ficoms
push
push
aaa
dec
mov
adc
mov
xlat
dec
mov
adc
call
rcr
add
and
mov
scas
insl
jmp
rorl
sub
dec
mov
adc
inc
pop
mov
scas
repnz
push
lea
dec
mov
mov
cmp
mov
fldenv
jmp
or
div
and
xor
dec
sub
jns
lods
push
insb
hlt
movsl
inc
and
jp
xchg
jmp
cmp
mov
sub
xchg
cmpsl
dec
or
dec
lods
lcall
dec
jmp
cli
dec
cs
adc
dec
fisubl
pop
add
xchg
lods
xchg
inc
mov
xchg
dec
stc
cli
fdivp
js
cmp
das
clc
cmp
lahf
out
push
xlat
pop
mov
dec
mov
jle
test
mov
jg
jns
pop
sbb
in
in
inc
repnz
js
cmp
mov
lcall
sub
xor
jg
movl
movsb
push
movsl
cmp
add
mov
lret
enter
loop
test
xor
cltd
sub
ret
lret
and
scas
push
xor
push
cmp
xor
cwtl
pop
lds
push
and
shrb
ffree
jns
imul
mov
push
xchg
adc
in
iret
or
xor
hlt
push
and
int
fadd
mov
sbb
lret
or
ja
movsb
mov
sbb
adc
fisubs
scas
and
sti
and
jle
daa
jmp
out
add
sti
clc
scas
jne
cs
lfs
shrb
je
mov
stos
fsubl
mov
lahf
fnstenv
in
cmc
adc
out
stos
mov
daa
pop
ret
aam
frstor
lds
mov
repz
push
mov
mov
outsb
mov
dec
cltd
mov
mov
enter
bound
inc
xor
insb
push
cli
outsb
repnz
mov
inc
cltd
xchg
push
dec
rorb
popa
cmpsl
mov
dec
and
pop
inc
loop,pt
inc
ret
pop
imul
movsb
pop
cmc
inc
inc
cs
fs
int
std
sbb
pusha
ljmp
sub
je
mov
test
pop
mov
mov
sti
clc
xor
sub
sbb
mov
in
std
mov
repnz
xchg
lret
daa
scas
xor
lret
rcl
sub
dec
test
sbb
hlt
adc
xor
xchg
dec
cmp
mov
cmpsb
addb
lods
gs
rorl
lods
int3
fistpl
push
test
cs
push
xor
push
adc
fdiv
jg
test
and
xor
daa
mov
test
fs
or
and
cld
aad
sbb
adc
xchg
fadd
cltd
push
xor
sbb
jno
and
pop
jmp
mov
add
sbb
aas
jns
cwtl
or
fs
aam
pop
mov
jns
aas
add
xor
ret
insl
dec
xchg
lods
ret
and
pushf
jle
in
sbb
push
test
rcrb
jmp
add
pushf
or
daa
repz
mov
mov
xor
push
mov
xchg
mov
fstpl
ficompl
mov
imul
out
das
jg
jle
sub
cs
mov
leave
or
inc
lcall
mov
sub
mov
jb
mov
aaa
popa
sbb
push
arpl
loopne
and
mov
push
test
xchg
mov
stos
imul
push
aam
pop
xchg
push
adc
imul
dec
lret
inc
dec
clc
mov
push
testl
loope
jb
xchg
dec
xchg
popf
pop
std
sub
fcoml
dec
cmp
jge
dec
mov
xchg
popa
sub
lea
and
jne
movsb
insl
push
pop
push
bound
aam
loope
fbstp
ss
push
aas
imul
loop
adc
dec
mov
push
or
xor
push
movsb
fadds
cmp
call
fsts
xchg
inc
or
xchg
jno
aad
adc
adc
sbb
sarl
inc
jp
dec
mov
lock
cmp
mov
adc
mov
fcmovu
lcall
pop
fistpl
stos
xorl
push
pop
push
test
roll
aas
push
lods
iret
lods
and
popa
xlat
inc
repnz
cmp
jae
inc
lret
mov
jge
repnz
ret
int
pop
mov
inc
mov
mov
jle
pop
stos
fldcw
call
or
jl
or
mov
sub
or
adc
test
mov
or
cli
leave
sbb
cli
xlat
filds
xchg
lret
popf
fisttpl
lea
dec
cmp
push
mov
xchg
js
jnp
pop
push
subb
pop
pop
fmuls
dec
ja
dec
lods
lods
sbbl
dec
jmp
outsl
jo
pop
cmc
mov
xor
push
inc
xor
dec
mov
xor
sbb
clc
xchg
fs
push
in
loope
inc
inc
idivb
cmpsb
test
loope
fdivl
lds
das
sub
addr16
mov
clc
icebp
orl
push
mov
xor
dec
sbb
das
xor
ja
xlat
pusha
repz
pop
adc
cmp
mov
xor
shr
sar
inc
jbe
hlt
sti
testl
pop
insl
lahf
ss
lods
iret
mov
faddl
fmuls
mov
mov
dec
lret
aad
cmp
inc
neg
sub
or
mov
xor
inc
aaa
sahf
andb
mov
int3
jnp
pop
insb
jb
sti
aaa
fsin
xor
lcall
inc
jb
or
or
std
mov
jle
int
xchg
pop
xor
lds
jns
addl
pop
les
bound
xlat
addr16
sub
cmp
pop
xor
push
inc
loopne
mov
sbb
xchg
pop
jl
jp
sti
mov
lods
mov
sti
mov
jns
adc
test
inc
gs
ja
ljmp
cwtl
mov
pop
fmuls
mov
push
or
and
xchg
into
inc
inc
std
test
inc
mov
xchg
aas
sub
pop
mov
gs
mov
jae
sbb
xor
sub
mov
daa
xchg
test
adc
push
iret
mov
jb
push
mov
cmp
sub
clc
xlat
mov
out
ja
into
mov
pop
je
and
sub
scas
pop
negl
fidivs
mov
popf
movsl
or
xor
sub
sbb
cli
pop
call
pop
dec
jp
mov
jo
ds
pushf
inc
pop
xor
adc
xor
dec
mov
pop
scas
push
out
cwtl
out
addl
mov
negl
push
jae
or
out
cmpsb
sub
fwait
push
adc
iret
xor
sub
popf
sub
or
sbb
pop
jbe
xor
mov
les
sbb
int3
orb
adc
push
cli
cmc
and
repz
xlat
and
sahf
cmpsl
fnstenv
xchg
int3
xchg
sub
or
stos
insl
iret
xchg
lret
mov
loope
mov
inc
mov
mov
mov
push
shll
test
hlt
scas
sub
and
cmpsb
inc
out
rorb
cld
out
cmc
fildll
js
aam
ds
lods
outsb
cmc
push
push
jl
int3
and
aam
adc
ss
addl
idivb
sbb
mov
or
mov
stos
rorl
into
xor
std
mov
mov
xchg
arpl
sbb
in
lahf
jne
int
stc
cwtl
and
mov
pop
sub
cli
cltd
mov
scas
jmp
std
pop
ds
dec
pushf
mov
outsb
inc
xchg
inc
xchg
lea
rcrl
loope
jmp
mov
push
in
jae
jmp
test
neg
jl
pop
mov
rcl
movsl
dec
xchg
mov
dec
xchg
out
cmp
fidivl
jnp
jno
dec
mov
sbb
aad
das
outsl
pushf
pop
into
shll
cmpsb
fs
cli
movsl
jmp
mov
push
jmp
dec
shrl
jb
mov
cmp
push
mov
xchg
inc
push
and
clc
sahf
sub
inc
lcall
cmp
jno
adc
aam
fimuls
outsb
or
jg
es
sbb
push
loopne
adc
mov
in
xchg
sbbl
fwait
movsb
jmp
test
sub
pop
sub
mov
int3
push
dec
push
push
fdivrl
ret
hlt
cld
cmp
pop
mov
popa
pop
or
stos
mov
sub
pop
or
lods
outsb
lods
pop
daa
sbb
dec
es
pop
sub
in
ljmp
sub
pop
cs
cmp
inc
lcall
popa
mov
mov
fcoml
test
cli
mov
enter
adcl
lahf
push
xchg
daa
pop
imul
cmp
mov
daa
dec
stc
add
stc
cmp
divb
jg
push
jl
jb
mov
les
leave
xchg
fldt
fiadds
adc
sub
and
sbb
lock
lcall
adc
pop
in
cmp
jb
jb
sub
inc
pop
jg
mov
mov
sbb
cld
mov
enter
mov
stos
out
scas
dec
ret
add
mov
jno
shlb
xchg
jge
lret
test
mov
jnp
cwtd
fsubs
mov
cmp
jle
mov
outsb
jns
popf
mov
shl
lahf
pushf
les
mov
and
out
pop
xchg
jnp
maxps
jb
outsb
jo
shlb
cmp
and
leave
fistps
ret
aam
mov
out
ror
mov
aad
xchg
repz
aaa
test
xchg
jp
push
imul
push
cmpsl
add
xchg
mov
rcrb
lahf
leave
in
cld
jecxz
lret
in
rep
bndstx
sarl
xchg
cltd
adc
leave
fwait
adc
mov
xchg
cmpsl
xchg
shrb
enter
xchg
inc
jno
pop
mov
daa
fcoml
pop
rorl
fisubl
cmpsl
stos
ds
insl
mov
inc
jo
adc
push
mov
fistps
sti
je
fsubrs
lahf
cwtl
mov
mov
cltd
pushf
dec
mov
cmp
shrb
call
mov
packsswb
out
lcall
out
add
sar
xor
mull
dec
mov
mov
rcl
mov
fwait
insl
stc
lret
paddsb
cmpsb
push
sbb
mov
aas
lahf
mov
mov
inc
mov
sbb
push
loope
xchg
fisttpl
lea
into
enter
pop
dec
cs
lds
or
adc
mov
rcrl
or
fwait
sub
and
cmp
mov
xchg
jl
aad
xor
add
jb
and
frstor
pop
out
stos
out
int
xchg
mov
test
andb
cli
leave
mov
fwait
cmpl
adc
jle
ja
ljmp
cs
or
ljmp
jle
mov
mov
xchg
iret
mov
mov
or
lds
out
push
dec
gs
ficomps
sbb
insl
cli
xchg
add
out
js
repnz
jnp
cmp
repnz
fcmove
cld
fsubs
mov
inc
movsl
imul
fcmovbe
lcall
cltd
mov
ds
faddl
xor
dec
stos
mov
aas
cmp
dec
mov
inc
dec
insl
fsubrs
pop
subl
add
push
push
xchg
andl
mov
mov
push
lcall
inc
mulb
dec
notl
and
dec
push
lds
xor
add
adc
call
cmp
shl
sbbl
call
inc
psrlq
sahf
adc
adc
inc
icebp
int
out
push
mov
cmp
shrl
add
fcomip
dec
fwait
ja
push
les
outsl
mov
cmp
xor
mull
jecxz
dec
mov
rcrb
pop
add
mov
add
daa
cs
movsw
sub
shll
lock
ret
sub
or
movsl
xor
pop
jns
dec
push
dec
mull
cmp
je
push
dec
xchg
mov
nop
enter
sbb
mov
pop
xchg
lahf
clc
ret
or
call
mov
out
rorl
call
mov
mov
jb
in
test
jmp
lea
mov
and
inc
mov
mov
dec
jo
and
jle
pop
pop
fs
imul
out
xlat
addb
cmp
leave
icebp
jbe
mov
mov
subl
ret
das
clc
add
clc
cmp
nop
js
xor
jecxz
and
dec
add
sbb
xchg
dec
pop
cmp
mov
and
push
adc
xchg
dec
dec
clc
fadd
lcall
jle
or
cmp
sbb
jo
push
inc
push
icebp
and
test
std
and
jno
push
popf
cmp
loopne
xchg
pop
shlb
mov
cmp
sti
inc
insb
cltd
xor
xor
dec
add
mov
nopl
in
xchg
fisttpll
sub
ja
or
test
fiaddl
dec
xor
sbbl
inc
jne
or
mov
jbe
xchg
and
jne
hlt
mov
fisubrl
mov
std
es
jb
mov
dec
pop
push
cmp
adc
inc
cwtl
jns
push
ljmp
mov
insl
add
jg
lods
out
test
xorb
scas
shll
inc
lcall
pushf
dec
lahf
adc
or
aad
sar
xchg
sbb
cmp
lcall
cmpsb
inc
inc
sub
aam
sub
jae
outsl
stos
dec
dec
jp
mov
cmpsb
push
leave
fcmovnu
stc
das
pusha
lcall
cmp
pop
outsl
push
outsl
jbe
push
sub
daa
mov
std
imulb
scas
jmp
fdivs
sbb
push
cmp
out
jae
dec
push
push
pusha
popa
dec
inc
mov
nop
push
jns
cwtl
cmp
cmp
test
loopne
adc
orb
cmp
add
jg
cmpsb
aam
fdivs
add
not
je
xor
jb
jne
adc
jle
mov
addr16
and
addr16
add
out
pop
into
retw
stos
outsl
mov
std
scas
cmpsl
pop
add
sbb
push
pop
leave
cmp
fbld
ret
das
mov
xor
iret
xor
or
push
dec
mov
and
in
mov
addr16
and
pop
push
mov
lahf
or
inc
je
add
fsubs
stc
sub
adc
xor
cmp
lock
popa
dec
mov
inc
sub
sub
dec
call
mov
xchg
xchg
movsb
loopne
frstor
or
int
xor
mov
and
pop
inc
and
mov
add
xchg
sub
cmp
lods
mov
cltd
jo
fcoml
aam
push
cwtl
je
loopne
push
int
mov
jmp
test
pop
sub
mov
xor
lods
push
or
aaa
push
hlt
push
mov
xchg
xor
and
scas
xchg
loopne
push
aaa
movsl
inc
cmp
enter
jg
pop
jo
sub
add
cmc
fistpl
repnz
mov
jle
or
push
cli
mov
cmp
test
les
insb
adc
mov
xchg
dec
or
icebp
push
pop
mov
mov
mov
es
mov
xor
es
bnd
inc
cmp
sub
and
orb
push
jno
jne
xchg
xchg
sti
sbb
clc
jb
hlt
jae
pop
sub
mov
lea
imul
push
or
add
mov
jno
inc
mov
movsl
pop
cmp
into
sub
aaa
xor
cmp
repnz
mov
mov
std
in
jle
stos
jge
cmpsb
pusha
arpl
mov
divl
xchg
cmp
ds
jbe
movsl
sbb
dec
mov
sub
fucomip
or
cld
lret
cmp
sbb
sbb
mov
cmp
jb
imul
pop
stos
and
cmp
int3
add
fdivs
mov
adcb
out
jb
xchg
fwait
mov
mov
mov
add
xor
pop
dec
in
cmp
mov
pop
in
shrb
pop
rclb
fisubrl
inc
test
jbe
mov
arpl
inc
push
mov
repz
sbb
int
sbb
push
ret
push
sub
gs
clc
mov
lods
cmpsb
mov
and
or
loope
sti
mov
pop
imul
xchg
daa
sub
outsb
shrb
hlt
or
sti
jo
or
sbb
xchg
sbb
jnp
mov
xor
fcmovnb
popf
pop
pop
xor
stc
and
das
fwait
mov
sbb
ljmp
ficompl
fidivl
dec
jecxz
and
loop
mov
sbb
std
in
arpl
addr16
iret
sbb
jge
out
mov
jge
mov
mov
negb
adc
adc
xorb
xchg
in
out
dec
das
nop
stc
xchg
sbb
fwait
das
mov
adc
arpl
jbe
mov
and
jl
dec
mov
push
add
cmp
xorb
cwtl
push
push
jecxz
xchg
outsb
fmul
outsb
mov
push
dec
ja
sub
or
push
out
mov
arpl
push
nop
push
ljmp
hlt
xor
add
sbbl
dec
sahf
stos
iret
push
and
mov
xchg
mov
stos
xor
lret
decb
inc
cmp
mov
call
fwait
pushf
loope
ss
or
mov
movsl
mov
push
sub
inc
cmp
daa
sub
inc
cs
dec
sbb
add
inc
fistl
xor
aam
out
fdivrs
das
loopne
add
int
inc
bound
inc
lret
xlat
push
cltd
jecxz
push
out
dec
pusha
aas
adc
les
xor
jle
mov
ficompl
in
in
sbb
sub
inc
jo,pt
and
jo
rclb
leave
imul
mov
loop
or
in
mov
adc
es
pushf
adc
inc
rorb
dec
clc
cmp
mov
jmp
sub
mov
pop
shrl
dec
scas
pop
xchg
mov
fnsetpm(287
loopne
adc
xor
cmp
loope
sub
jp
jecxz
shr
lds
mov
sub
sti
push
adc
cmp
cli
ret
xchg
lock
pushf
testl
pushf
xor
jg
sub
sbb
sub
sub
les
push
leave
std
cmp
sub
cli
xor
lods
loope
imul
mov
cmp
ja
clc
loope
imul
pushf
cmp
mov
into
stos
outsb
testb
dec
mov
mov
daa
fisttpl
loop
adc
pop
movsb
mov
cmc
jns
ds
out
mov
push
xchg
loopne
lahf
rorl
int3
jmp
shll
fs
aad
or
cltd
popf
add
je
rcl
int3
jne
loopne
pop
pop
insb
jbe
inc
das
repnz
rep
popa
or
mov
mov
mov
out
test
pop
dec
xchg
xchg
lcall
rcrl
fisttpll
cmpsl
xacquire
mov
mov
adc
sub
add
rcll
xchg
cmp
cmpsl
mov
jnp
outsb
jno
pop
call
js
jge
mov
dec
jae
sbb
stos
into
pop
fwait
pop
sti
adc
push
dec
lods
out
repz
notb
fsubs
arpl
ja
push
inc
ds
push
inc
call
mov
ret
movsl
int
jnp
inc
add
mov
jne
jg
test
and
lahf
mov
mov
icebp
int3
mov
xor
sbb
or
or
setle
cs
cmp
movsl
adc
cmp
mov
xchg
clc
add
aaa
jg
jmp
pop
icebp
pop
std
sub
inc
pop
dec
mov
loop
or
lds
in
mov
fldl
nop
lods
push
addb
mov
sbb
add
xchg
jl
dec
adc
arpl
je
aam
jl
sbb
pop
pusha
fdivrl
cld
dec
xorl
or
cmp
push
insb
lods
lods
int3
ret
sti
sbbl
jns
mov
cmp
xchg
jb
and
test
or
jae
pop
lods
jle
addl
enter
push
ret
es
and
lods
out
sbb
cltd
outsb
sub
inc
test
push
inc
test
scas
inc
and
cmp
dec
sub
std
hlt
stc
daa
dec
lea
mov
xlat
jnp
lods
fs
adc
pop
push
popl
aad
xchg
mov
repnz
test
jmp
xchg
fdivrs
sahf
push
add
lods
dec
xor
xor
cmp
mov
adc
fs
in
xchg
add
push
mov
pusha
pop
std
pushf
andl
pushf
bound
push
scas
and
out
push
popa
in
dec
xchg
mov
lahf
pop
lcall
popa
loope
jp
mov
std
addr16
dec
shlb
jbe
dec
xchg
push
cmp
imul
imulb
push
pop
mov
popa
mov
mov
xor
icebp
test
jle
push
aaa
dec
or
ffree
mov
xchg
sub
mov
loope
movsb
sbb
js
fimuls
ret
xchg
in
icebp
inc
mov
push
cli
xchg
sahf
imul
addr16
add
mov
push
pop
shll
fidivrs
ja
or
cmp
pop
add
call
loop
pop
leave
xor
adc
sbb
lea
cli
mov
mov
mov
inc
mov
mov
jmp
add
cmp
xchg
jnp
inc
loop
jno
xor
or
addr16
push
mov
iret
das
mov
sub
into
outsl
or
mov
push
jbe
cmpsb
add
dec
push
xchg
test
cmp
add
lret
mov
push
push
mov
fmull
jg
into
pop
xchg
imul
fwait
lods
cltd
enter
inc
enter
or
cmpsb
ja
xchg
adc
jecxz
mov
lds
int3
mov
mov
call
ret
lret
negb
jae
popf
inc
mov
push
fsubl
sbb
arpl
addl
sub
dec
mov
dec
adc
push
ret
and
mov
xchg
inc
pop
push
mov
mov
xlat
sbb
jg
addr16
xchg
out
pushf
adc
adc
and
mov
mov
sub
roll
insl
jp
push
lock
ret
outsl
add
mov
movsb
daa
xor
sub
adc
les
lock
push
xchg
cmc
push
add
add
jnp
adc
shlb
rcrl
fs
cs
sbb
lods
adc
in
mov
pop
push
imul
mov
sub
add
mov
mov
ret
push
or
ficomps
imul
test
jecxz
mov
out
test
test
fcomp
jle
xchg
xchg
mov
enter
pop
cwtl
xor
sub
mov
or
jecxz
sahf
in
xchg
jnp
call
pop
test
xor
cmp
fsubl
xor
add
leave
dec
adc
in
mov
jp
in
mov
movsb
mov
lds
xchg
lock
and
repz
dec
leave
lods
ja
jl
in
icebp
int3
cmp
das
out
pop
scas
mov
add
in
sub
or
das
jbe
lret
out
ficompl
or
mov
jp
xchg
mov
inc
cmpsl
push
test
std
insb
pushf
inc
dec
dec
cs
sbb
and
sahf
mov
int
frstor
cmc
xor
pop
pusha
das
aad
lcall
aam
stos
xchg
xor
ret
mov
sub
fs
inc
outsl
je
mov
cmp
dec
and
push
rcrl
inc
popf
sub
repnz
loope
mov
cmp
repz
outsl
loopne
lea
add
js
js
test
and
iret
daa
ror
push
adc
movsb
or
inc
xchg
aaa
xor
enter
push
jg
xchg
and
fadds
adc
inc
fisubs
dec
aas
pop
xor
pushf
sub
dec
mov
jbe
and
dec
mov
mov
and
lret
insl
sti
fsubl
popa
cltd
aaa
rcr
lcall
rcr
xchg
sbb
data16
or
or
mov
sub
jp
lcall
aas
out
jge
mov
push
push
xchg
cmpsb
ret
inc
jne
jns
sbb
add
mov
jmp
mov
and
jge
in
and
add
gs
insl
xchg
cmpsl
inc
call
aas
imul
scas
fmul
add
inc
out
mov
shl
add
mov
mov
pop
cmp
push
dec
ss
and
add
mov
and
xchg
mov
pop
sub
std
mov
cs
scas
sti
inc
mov
enter
fs
fcomi
push
aas
adc
mov
push
mov
es
aas
adc
add
dec
fdivr
rcl
test
mov
add
bound
adc
sbb
rcrb
cld
jae
adc
or
outsl
lcall
ret
aas
mov
loopne
mov
cmp
pop
stos
imul
into
mov
out
add
mov
add
pop
lcall
cld
test
pop
sbb
cmp
iret
dec
mov
mov
mov
outsl
dec
push
fisttpll
adc
jno
in
mov
popa
aaa
add
add
xchg
in
imul
mov
fmul
clc
dec
adc
clc
mov
fldcw
in
cmpsl
outsl
sbb
lcall
adc
mov
lret
and
mov
roll
mov
jbe
jne
imul
mov
stos
ds
mov
fsubr
inc
shl
adc
mov
inc
into
sbb
xchg
lahf
test
addb
sbb
or
fwait
cld
add
xchg
mov
mov
cltd
imul
pop
test
or
xor
xchg
or
in
mov
lret
cmpsl
jne
add
les
popf
xchg
popf
stos
mov
or
jns
cwtl
dec
dec
stc
pop
addb
jbe
dec
out
cmp
push
xor
jae
inc
jnp
mov
sarl
pop
pop
pusha
jo
inc
lods
mov
bound
pusha
adc
jo
hlt
in
fincstp
sbb
int3
pop
out
out
adc
mov
bound
inc
and
movsb
mov
cmp
add
scas
and
pop
add
sbb
scas
cmpsb
xor
sub
jp
repz
inc
mov
in
outsb
pop
sub
adc
jo
inc
pop
xchg
dec
push
and
js
push
inc
insl
mov
and
cmp
pushf
add
stos
les
cwtl
scas
mov
mov
pusha
add
and
jle
out
jo
adc
call
mov
call
adc
lds
mov
cmpl
or
roll
dec
jl
add
push
jb
xor
sub
add
cltd
xchg
rcl
xchg
in
mov
pop
dec
das
out
movsb
cmc
movsl
lock
jb,pt
es
das
or
xor
adc
cs
pusha
xor
or
aam
mov
mov
clc
sbb
loopne
adc
inc
add
mov
lds
aad
mov
inc
leave
adc
testl
pop
decb
push
adc
xchg
std
dec
out
dec
and
pop
jmp
pop
push
jmp
xchg
popf
pop
cmpsl
mov
jo
pushf
lcall
cli
test
push
and
push
scas
pop
int
int3
data16
cmp
les
in
ljmp
or
xchg
in
fxch
adc
pop
testl
lods
inc
xchg
xchg
push
cmc
jo
push
test
xor
push
std
sbb
dec
mov
mov
push
jle
cmp
add
sbb
inc
dec
push
cmpl
adc
test
test
xor
in
inc
sub
loopne
dec
js
imul
std
sub
ja
mov
dec
loope
xchg
sahf
stos
cld
sub
push
fbstp
orb
pop
cmpsl
xchg
or
subb
adc
dec
ljmp
lcall
test
cmp
outsb
aas
or
scas
ficoml
js
and
and
fldl
mov
mov
adc
inc
sti
faddl
daa
lcall
aas
xor
mov
xchg
add
imul
stos
pushf
ja
iret
out
cmp
dec
fmuls
cmp
push
enter
cmpb
ja
cmp
sub
inc
mov
jo
xor
shrl
ss
and
int3
xchg
scas
in
dec
rorl
mov
push
mov
roll
adcb
cmpsb
fsts
in
xchg
aam
dec
movsl
jge
mov
push
outsb
pop
pushf
inc
outsl
sub
in
fisubrs
push
fisubrs
cmpsl
loopne
jnp
mov
aam
pop
hlt
cltd
enter
cmc
or
stc
xor
addr16
shrb
mov
mov
mov
jae
xor
xchg
daa
stos
loope
fnsave
cmp
divb
push
inc
pop
lret
jbe
lds
adc
and
cmp
push
fisubrl
ja
daa
cmp
and
sub
sub
mov
xor
addr16
xor
scas
inc
xor
inc
cmpsb
push
jno
arpl
fistl
mov
add
jle
pop
or
or
stc
out
andb
mov
inc
add
and
fisttpl
adc
sub
jnp
sbb
stos
repz
and
outsb
mov
popa
leave
test
xor
fwait
add
pop
mov
pop
mov
bound
sub
cmpsl
repnz
push
call
out
or
fidivs
sbb
sub
pop
xchg
lahf
flds
or
neg
push
push
cmp
aad
dec
je
enter
inc
in
fwait
lock
lret
pop
dec
in
idivb
push
jle
inc
jno
out
js
bound
mov
jnp
mov
adc
fdivl
fidivrl
nop
add
loope
les
push
shlb
les
iret
jmp
sti
icebp
repz
or
cmp
mov
dec
rolb
cmp
std
sahf
loopne
inc
imul
in
inc
cmp
les
push
mov
mov
ja
push
cltd
or
hlt
dec
xchg
inc
loop
xchg
mov
stc
repnz
sub
push
mov
fsts
stos
cmp
fwait
sbb
cmp
ret
mov
mov
push
inc
jne
push
rcll
stc
outsl
arpl
adc
mov
stc
sbb
cmp
shlb
xchg
and
movsl
ret
pop
sbb
inc
jno
fmul
rcr
sub
bound
into
hlt
adc
inc
adc
adc
add
or
cwtl
mov
loopne
inc
shll
cmc
add
ret
loope
jmp
test
xchg
mov
xchg
out
ret
gs
dec
jbe
shlb
rcrl
mov
lds
adc
push
out
out
int
test
pop
xor
push
cs
inc
cmc
cmpsb
lret
sub
ds
jl
cmp
xchg
int
pop
jbe
jmp
out
pop
dec
mov
sbb
loopne
adc
inc
mov
add
mov
pop
mov
scas
roll
push
outsb
cmp
and
xchg
jg
add
add
xchg
cmp
scas
xor
pop
fistpl
imul
dec
and
mov
lret
or
sub
mov
shll
add
insl
mov
adc
bound
mov
in
popa
pop
pusha
and
xor
sub
mov
xchg
scas
pop
or
mov
dec
test
repz
pushf
mov
repnz
test
ficomps
xchg
mov
mov
enter
sub
shrb
cltd
push
outsb
adcb
shll
and
jge
jmp
fisubrl
lods
insb
mov
leave
push
mov
out
jnp
sti
adcl
lahf
mov
jbe
and
shrb
test
mov
movsb
pop
test
mov
out
sarb
and
sub
cmp
iret
and
notb
popf
push
inc
sbb
push
sti
int
add
ds
dec
fcmovu
add
int3
jne
stos
xor
xchg
xchg
shl
lods
in
cmpl
shll
cli
mov
add
loop
cmp
dec
sub
sarb
sbb
mov
sub
pusha
shlb
add
hlt
or
xchg
movsb
cmp
stc
addr16
dec
popa
hlt
dec
sub
mov
adc
test
sti
divl
pushf
mov
out
sbb
lods
je
bnd
nop
cmpsb
cmp
mov
push
icebp
push
jno
aam
jb
pushf
mov
mov
jo
cmpsb
sub
mov
sub
mov
enter
fists
dec
shl
outsl
arpl
mov
nop
push
stc
popf
push
loopne
dec
cmp
ds
inc
aam
jo
leave
and
add
dec
dec
pop
cli
std
aaa
or
addl
ret
ljmp
sbbb
xchg
xor
lods
jb
test
pop
mov
xchg
dec
dec
mov
inc
js
mov
sbb
pop
ret
mov
jbe
inc
ds
xor
and
jnp
jae
stc
mov
lret
clc
fs
jno
lock
shlb
sub
test
mov
out
inc
lret
test
cmpsb
scas
xchg
int3
mov
aas
xchg
enter
aas
add
imul
push
add
push
lods
pop
mov
sub
adc
xchg
pop
cmc
out
aad
fstp
in
jl
lret
xor
and
cld
imul
adc
or
lods
clc
fcoms
dec
lea
nop
jmp
add
add
es
xor
mov
sbb
dec
xor
sbb
xor
es
iret
adc
icebp
pop
pop
fildl
xor
repz
lods
fistps
call
pushf
clc
stc
out
dec
outsl
xorb
insb
and
cmp
and
repz
ljmp
push
hlt
cli
insb
or
hlt
gs
adc
das
push
adc
jl
sub
mov
mov
dec
movsl
lods
je
stos
lods
sbb
out
lret
pusha
push
repz
mov
shrb
mov
add
dec
stos
sbbl
mov
mov
arpl
jge
mov
pushf
and
shll
cli
lahf
test
push
mov
adc
push
lret
pop
shll
fisubs
rolb
lret
pushf
inc
sti
sub
add
mov
xchg
adc
sub
idiv
mov
mov
push
movsb
adc
push
movsb
mov
fstl
rcrb
mov
ftst
and
bound
loopne
add
dec
stc
cmp
leave
mov
into
in
add
mov
js
xchg
xor
jno
hlt
sub
xchg
add
stc
pop
xor
aas
xor
mov
add
and
inc
or
jbe
xchg
push
cmc
das
nop
jmp
and
push
pop
push
fcoms
fmuls
and
push
in
and
sbb
lock
mov
iret
adc
mov
clc
and
test
gs
mov
push
and
and
xchg
add
retw
jecxz
fstl
adc
mov
sahf
xchg
test
or
cmp
popf
stos
dec
daa
lock
mov
sub
imul
pop
ljmp
repnz
cli
cmp
add
scas
sub
push
inc
mov
xchg
hlt
int3
pop
pop
insb
enter
push
sbb
movsb
lods
clc
loope
test
cli
inc
push
cmp
or
dec
iret
dec
je
stos
repnz
int3
adc
mov
iret
mov
jg
xchg
xchg
hlt
leave
fcmovb
shrb
ljmp
push
adc
jg
shlb
mov
pop
cs
add
aas
adc
shlb
inc
leave
adc
lcall
dec
rorb
int
fldcw
out
in
or
lock
sub
lret
ret
push
cmpsb
fwait
xchg
lcall
in
icebp
into
sahf
push
push
pop
xorl
xchg
and
rcrb
mov
cmpsl
orb
jl
out
mov
xchg
mov
mov
pop
enter
stos
pop
push
pop
sub
sub
jmp
push
loope
mov
gs
insl
pop
call
repz
das
push
mov
or
lock
int3
mov
ret
fistl
aam
fs
push
bound
data16
pop
mov
movsb
bound
das
or
push
xchg
and
sub
pushf
lock
mov
pop
or
jl
xchg
iret
arpl
cmpsb
fstl
jg
lea
push
testl
scas
subl
lods
insl
cmp
jmp
das
cmpsl
scas
mov
sti
int3
pop
pop
aaa
pop
mov
ffree
cmc
mov
stos
int3
sub
push
mov
mov
stos
add
xor
add
cmpsl
std
jnp
aas
adcb
mov
mov
sub
in
and
test
aad
xlat
jnp
jns
sarl
add
iret
mov
into
adc
push
pop
push
je
sub
mov
hlt
push
mov
pop
jge
fiaddl
hlt
js
lret
push
cmpsb
mov
je
mov
xor
cmp
xchg
xor
lods
fsub
pushf
fldenv
clc
dec
cmp
or
pop
cmpsl
and
add
idivb
xor
je
popf
repnz
cmp
aad
scas
push
dec
jnp
aam
jo
mov
add
popf
imul
cmp
sub
rorb
cli
pop
and
stc
je
mov
adc
iret
xchg
rol
inc
movsl
hlt
push
lods
out
xor
fdivs
cli
mov
adc
sahf
add
push
fdivrl
mov
adc
sbb
sub
mov
mov
jge
dec
jo
adc
mov
mov
int3
sqrtps
cmpsl
std
add
and
fstl
pop
mov
jecxz
pop
push
fcmovu
lahf
xchg
adc
cs
jmp
movsl
test
sbb
mov
fbld
ret
push
and
jns
js
out
fstps
add
andb
dec
stc
movsl
pop
repz
xchg
test
pop
cli
jae
or
add
fcmovnbe
das
xchg
scas
mov
scas
scas
scas
mov
aaa
lret
mov
call
pushf
mov
insb
jnp
sbb
and
mov
push
fsubs
pop
outsl
and
insb
rcrb
fiaddl
addb
test
dec
inc
push
push
inc
add
leave
repz
mov
push
xchg
orl
cld
push
xor
fisubrs
rcrl
dec
or
adc
jge
stc
dec
push
int
testl
xor
dec
cmp
mov
push
js
jp
punpckldq
add
cmp
outsb
mov
jnp
lahf
pop
or
std
sti
lods
cwtl
sub
adc
mov
sub
push
in
sub
dec
mov
mov
outsb
cmp
cmp
ds
mov
bound
inc
fnstcw
push
inc
sub
div
xor
mov
xchg
mov
lods
xchg
adc
imul
pop
mov
xor
ljmp
decb
outsl
sbb
cmpsb
dec
movsb
mov
shlb
inc
adc
mov
xor
lret
addb
repz
mov
lahf
mov
fsubrl
dec
lea
sub
outsb
subb
sbb
add
je
jo
sahf
stos
dec
out
scas
loopne
sarl
sub
fucomi
push
sub
rorb
jb
mov
inc
stos
fistpl
pmuludq
mov
mov
les
rcrb
ss
sbb
shll
mov
add
sub
adc
xor
sbb
arpl
xchg
int3
fisttps
jnp
jp
or
jp
outsb
and
scas
js
pop
pop
rclb
insb
mov
loope
repnz
xor
adc
adc
loop
mov
jle
jnp
lea
fldt
enter
mov
loope
or
fists
shrb
jg
dec
loopne
and
testb
sbb
stc
filds
jl
retw
adc
xor
cwtl
call
das
mov
or
sub
dec
adc
and
cmp
sbb
fiaddl
loopne
lea
xchg
add
dec
and
or
loop
dec
sbb
notb
leave
insb
outsb
dec
or
lgs
div
scas
clc
mov
xor
mov
insb
sti
fisubl
icebp
and
lahf
dec
mov
addb
sbb
enter
jmp
loopne
mov
jle
ja
mov
dec
shrb
or
push
push
lahf
push
xchg
mov
push
or
fldenv
ret
xadd
push
stos
sub
stos
imul
out
and
cmpsb
stos
out
mov
ljmp
mov
adc
mov
in
dec
add
jmp
mov
out
lahf
inc
push
stos
sbb
add
jge
pop
sub
mov
cmpsb
aam
mov
or
in
xor
xchg
pop
lret
lret
sub
dec
repnz
neg
jecxz
add
lahf
dec
add
xlat
xchg
test
jnp
repnz
sbb
xor
mull
mov
cmpsb
divl
aaa
dec
notb
jb
sub
mov
ret
dec
adc
mov
jle
filds
aam
adc
cwtl
xor
aas
dec
outsb
mov
lret
insb
adc
xor
gs
or
rcrb
lcall
cmpsl
gs
pop
push
out
cmc
pusha
lds
cmp
and
dec
imul
in
ljmp
aad
xorl
mov
inc
in
jns
clc
movsb
test
dec
loop
jns
mov
testb
pop
jmp
mul
push
mov
imull
shlb
jg,pt
jp
popl
xlat
or
cld
push
dec
loope
in
into
sbbb
daa
hlt
sahf
cmp
fildl
push
negl
andl
inc
inc
cmp
inc
push
push
fwait
jae
inc
outsl
push
pop
in
ret
xlat
testl
loopne
adc
sub
imulb
dec
and
ret
fistps
xchg
inc
sub
lods
scas
das
and
xor
push
rcl
enter
lea
fs
popf
mov
xor
add
mov
ss
sub
sarl
xor
test
push
hlt
lret
lret
movsl
cwtl
lods
nop
mull
push
cmc
pop
dec
jecxz
iret
dec
or
mov
push
xchg
fdivl
aas
pusha
lods
mov
shr
aad
adc
dec
jne
movsl
fimuls
rcll
push
jb
pusha
sub
jae
mov
jb
push
cli
push
xchg
addr16
jp
mov
xor
xchg
mov
adc
fisttpll
fsubl
lahf
icebp
movsl
lahf
int3
xor
dec
test
sub
scas
dec
dec
mov
je
cmc
arpl
enter
scas
push
xor
insl
pop
cmp
dec
pop
nop
cmc
inc
mov
in
fsts
stos
fisttpll
icebp
lcall
mov
je
push
fistpll
out
mov
icebp
fcomps
xchg
loope
xchg
clc
sahf
sbb
mov
mov
mov
cmp
repz
je
jge
stc
subb
stos
mov
mov
cwtl
fadds
loope
pop
aas
mov
leave
add
push
icebp
adcb
mov
in
adc
sti
stc
dec
lret
aad
mov
test
test
xchg
sbbb
cmp
adc
xchg
dec
in
xchg
mov
mulb
imul
dec
gs
hlt
mov
add
inc
popa
loopne
lea
divb
push
fildl
xor
daa
pop
and
je
xorb
enter
sub
les
or
push
cmpsl
dec
mov
movsl
lods
adc
xchg
pop
or
jb
int3
testb
sbb
push
shrl
mov
push
inc
loope
sub
xor
dec
ja
push
leave
xor
pushf
jge
ljmp
push
adc
jnp
movsl
sarl
testb
pushf
aas
pop
inc
add
pop
ss
rol
mov
cmpl
pop
das
daa
repz
push
imul
cmp
and
call
xor
mov
frstor
lret
fisttpll
jbe
in
leave
jle
push
sahf
in
insl
dec
dec
data16
fidivrs
and
repnz
jg
imul
xor
sbb
xchg
es
outsb
push
xchg
test
loop
lahf
lahf
stos
stos
call
and
lret
outsb
lea
mov
out
insb
jbe
lret
cmp
ja
push
scas
sub
sarl
out
lret
fnstcw
mov
and
out
pushf
mov
insb
jmp
test
repz
ss
push
cmp
es
push
push
pusha
sbb
or
xchg
sub
xor
clc
xorl
cmp
ficompl
outsb
clc
sub
mov
aaa
mov
jle
cmp
nop
out
push
lods
cmp
sbb
jge
hlt
mov
out
add
roll
dec
mov
ret
adc
in
out
inc
mov
and
jo
dec
scas
or
sub
ret
outsl
and
iret
jle
or
mov
int3
push
mov
in
in
out
hlt
pop
aas
ja
jl
out
repnz
lret
in
xchg
jmp
test
mov
icebp
inc
or
jo
addb
adc
push
or
pop
inc
sbb
sub
insl
clc
adc
xor
xor
push
push
jle
ja
sbb
add
sbb
fisttpll
lcall
rcrl
rorb
pop
ljmp
mov
in
in
xor
add
add
push
pop
or
and
hlt
aam
dec
pop
or
push
xchg
mov
cs
insl
add
jp
cli
out
mov
jb
dec
dec
ja
fucomp
jae
or
in
shll
xor
cli
lcall
add
dec
xchg
gs
hlt
xor
in
pusha
jno
icebp
dec
call
xchg
ret
lret
xor
mov
orl
xorl
jb
lret
jge
arpl
fmul
enter
sbb
xor
mov
inc
std
push
roll
adc
call
lcall
and
mov
lcall
rcrb
test
mov
cmpsl
push
xchg
ljmp
fcmovnu
pop
pop
jo
adc
mov
dec
outsl
sbb
cmp
dec
int3
mov
stos
inc
out
loope
mov
or
mov
xchg
aaa
add
xchg
std
push
ds
push
xchg
push
jge
loopne
sbb
jns
fistl
jne
jge
push
imul
cld
push
shll
add
cmc
adcb
in
iret
cli
lcall
rclb
push
push
xchg
mov
inc
stos
rcl
push
sbb
fisubl
mov
movsl
imul
jo
movsb
fdivrl
out
lret
inc
mov
adc
cmpsl
mov
and
jecxz
sub
cltd
xchg
ret
aam
mov
test
movsb
xor
sub
add
mov
push
jns
and
xchg
inc
stos
and
pusha
mov
sbb
jno
mov
lret
sbb
iret
pop
xchg
xchg
pop
mov
sbbl
leave
call
mov
movsl
push
pushf
es
mov
push
call
inc
mov
pop
incb
dec
mov
pop
mov
adc
clc
fnstsw
sti
iret
push
mov
xor
out
mov
push
mov
sub
ja
popf
jne
sbb
out
fwait
sub
mov
sub
xchg
fs
adc
stos
and
aaa
dec
push
jno
int3
ja
push
cld
mov
pop
dec
in
loop
outsl
popa
inc
sbb
add
mov
das
cs
insl
jns
enter
sub
mov
fwait
gs
out
or
push
fwait
xchg
fldt
jnp
and
in
popf
xchg
mov
mov
or
and
xchg
jne
push
sti
out
fidivrs
mov
cmpsb
or
jae
add
dec
fisubs
push
pop
loop
movsb
fistpll
in
sbb
mov
xor
jb
push
mov
mov
pop
xor
sbb
mov
insb
test
adc
mov
iret
mov
das
cmp
insb
arpl
xchg
mov
cwtl
sbb
imul
jo
fiaddl
or
push
inc
add
or
fs
lcall
fisttps
test
fsubrp
push
and
xor
add
pushf
pop
mov
dec
dec
filds
mov
scas
jne
cmpsl
test
jns
push
fwait
xlat
push
out
call
imul
fs
dec
aam
cltd
pop
loopne
subb
xchg
jno
and
fs
int
xor
add
mov
in
mov
inc
mov
out
or
mov
fisubrs
leave
sarl
or
mov
addl
enter
cmpl
or
cmp
or
jno
lret
test
leave
ljmp
pop
push
outsl
mov
popf
pushf
mov
jb
cli
add
popf
insb
test
xor
jb
int3
bound
insl
push
inc
inc
sbb
cmpsl
popf
jmp
cmp
repz
call
lea
data16
test
sarl
push
jae
cmp
mov
add
pushf
jno
test
jp
fldt
cld
insb
mov
test
fnstsw
jmp
jae
dec
cmp
dec
cmp
test
out
scas
std
ss
mov
insb
idivb
adcl
mov
or
gs
jge
nop
xor
add
adc
ret
test
lea
push
imul
inc
or
push
push
mov
jmp
pusha
nop
and
test
xchg
repz
pop
jg
scas
out
lods
xor
fs
in
movsb
cld
push
arpl
popa
js
push
inc
popa
sbb
lret
nop
popa
js
jnp
xor
stc
inc
sti
or
in
push
add
push
mov
enter
sbb
mov
and
or
sarl
out
mov
or
orb
ds
push
adc
ja
call
sub
mov
leave
push
fcompl
add
jp
cli
inc
cmp
es
mov
or
pushf
movsl
or
xchg
ret
lahf
or
mov
scas
push
pop
jbe
inc
fwait
fs
fmull
inc
es
adc
inc
orl
inc
clc
adc
into
jmp
mov
daa
aaa
dec
xor
les
ret
push
incb
xchg
push
loopne
jp
sbb
or
xchg
clc
or
inc
cld
inc
int3
mov
arpl
inc
jnp
pop
js
mov
cli
mov
inc
inc
xor
and
mov
inc
int3
push
insb
adc
aad
leave
sub
xchg
sub
movsl
cmp
mov
dec
or
pop
push
mov
aad
inc
sbb
inc
call
pop
inc
arpl
mov
inc
push
dec
and
hlt
bound
pop
sbb
iret
nop
cmp
cmp
sub
faddl
out
add
imul
call
push
sbb
xchg
cmp
mov
jne
adc
xlat
add
ljmp
imul
es
xchg
cmp
loope
push
cmp
cltd
xchg
mov
repnz
out
aas
add
fs
inc
sti
jmp
jmp
jne
ret
xchg
out
arpl
clc
or
mov
ss
inc
bound
out
jmp
and
push
icebp
sub
mov
xchg
pop
loope
pop
cltd
xchg
sahf
mov
or
out
xchg
inc
push
add
lock
or
rcrb
stos
adc
enter
out
adc
clc
rcrl
lcall
outsb
mov
push
shrb
xchg
sub
daa
leave
sbb
or
mov
sbb
ror
mov
imul
xchg
cmp
loop
shrb
repz
fnsave
cmpsb
es
fdivrs
dec
loop
dec
cmp
inc
xchg
arpl
cmp
and
repnz
pusha
xor
loop
cmp
and
adc
enter
ret
jbe
repnz
xchg
inc
dec
jg
out
pusha
loope
int
adc
pop
and
filds
mov
jl
mov
ja
push
mov
hlt
sbbl
bound
in
nop
adc
inc
imul
std
push
and
in
fadds
jecxz
cmp
loop
mov
cmp
fs
mov
pop
dec
cltd
sub
cmc
out
mov
xor
cli
in
inc
lea
dec
aaa
mov
lods
out
pop
hlt
in
repz
lret
mov
inc
pop
vpsrad
push
jge
adc
mov
test
xchg
incb
fsubl
pop
addr16
jg
int3
xor
mov
aam
nop
adc
es
sub
out
push
cmpsb
loopne
pop
sbbl
pop
mov
adc
and
xchg
int
daa
adc
ror
mov
int
pop
mov
jmp
xor
sub
outsb
aaa
add
sbb
inc
jecxz
mov
aaa
stc
or
or
imul
nop
xchg
scas
pop
xor
pop
into
xor
call
sbb
loopne
cltd
mov
pop
out
mov
in
adc
pmuludq
add
mov
jns
es
and
xor
xchg
pushf
pusha
dec
jmp
adc
insl
adc
adc
sub
fisubs
pushf
jge
aad
fldt
inc
das
inc
mov
insl
cmp
enter
pop
push
js
xorb
fsubs
daa
lret
movsb
cmp
hlt
jp
clc
jl
setl
add
inc
mov
cmp
push
arpl
andl
lahf
scas
outsl
clc
push
fsubs
jp
mov
sub
pop
fsubrp
mulb
dec
jbe
add
sub
xchg
xchg
cmp
out
push
xchg
shll
ja
dec
pop
insb
fdivl
sbb
push
add
xchg
test
xchg
jge
push
xchg
int
mov
and
subb
das
test
lds
aam
cltd
xor
jno
cmp
sbb
xchg
mov
cmpsb
addr16
dec
inc
into
or
ret
ss
iret
sti
aad
xchg
aam
inc
repnz
cld
inc
out
aaa
rcll
jl
adc
outsl
add
lahf
pop
mov
or
jae
and
mov
mov
mov
dec
incb
mov
shr
cmp
lcall
int3
xchg
stos
adc
push
and
cpuid
push
xchg
testb
scas
and
loop
fidivrs
mov
insl
fsub
or
jg
mul
fcmovb
stos
mov
pop
stc
sub
pop
dec
sub
push
xor
fiadds
jno
jl
mov
cmp
add
or
int
mov
lcall
sbb
xor
mov
sbb
pusha
andl
cmpb
add
popa
call
lds
fnstcw
lahf
and
mov
fcoms
or
mov
das
fdivr
jbe
and
xor
addb
data16
xchg
das
loope
int3
mov
push
cs
and
bound
jl
das
inc
int
ds
sbb
mov
lret
mov
in
mov
daa
mov
inc
sahf
push
enter
cmp
inc
cmc
and
cmp
popa
pop
xlat
cmp
add
into
and
mov
pop
std
xor
cmpsl
inc
push
jns
shlb
lahf
cmp
jno
sbb
push
push
ja
jnp
pop
xchg
shlb
daa
stos
xchg
sti
aad
jmp
ljmp
xchg
aad
hlt
outsb
ja
adc
mov
insl
iret
data16
or
es
jb
mov
sub
jecxz
lret
mov
push
mov
mov
cli
insb
in
in
or
call
stos
inc
mov
push
inc
cmpsl
das
addr16
test
into
or
pop
fisttps
sbb
add
insl
pushf
fwait
mov
and
mov
sub
jnp
lock
icebp
pop
cltd
fsubr
push
inc
inc
pop
mov
inc
cs
out
ret
or
in
out
or
xor
pop
sub
ret
stos
xchg
test
popf
jge
jp
clc
or
pop
dec
cmpsl
sub
jns
add
fwait
pop
push
lcall
dec
cmc
jmp
jae
dec
mov
leave
and
in
jb
mov
cmp
lahf
stos
xchg
movsl
jp
pop
mov
icebp
jns
xchg
xchg
pop
mov
sub
xchg
xchg
xchg
mov
inc
addr16
insl
fwait
scas
fs
inc
jne
ljmp
push
xchg
subb
movsb
pop
cmp
xchg
and
mov
and
mov
cmp
dec
mov
xor
rol
mov
adc
add
je
fdivl
mov
jbe
inc
inc
test
fidivl
test
xor
cli
adc
xlat
hlt
pop
test
or
or
push
add
mov
cmc
pop
scas
shll
or
idivb
mov
fistps
push
xor
dec
mov
decb
push
es
inc
push
pop
hlt
adc
inc
insl
ret
stos
ficoml
mov
outsl
loop
lds
xor
xor
sbb
scas
mov
jne
imul
jae
fdivs
mov
loopne
ds
adc
movsl
stos
sbb
sbb
xchg
cmc
pop
adc
push
lds
jmp
test
sbb
or
fstpl
in
pop
xor
pop
loope
incl
pusha
js
fwait
cmp
repz
push
popf
and
sub
adc
jnp
mov
xchg
mov
roll
sbb
insl
fmul
subb
repnz
xchg
mov
xor
push
mov
push
pop
push
dec
jecxz
mov
rorl
jp
aaa
pop
xchg
fistl
ret
insb
ds
xor
xor
or
test
addr16
lret
testl
xor
loopne,pt
jo
sbb
or
mov
pushf
ret
fsubp
icebp
das
xor
pop
js
push
insl
sub
scas
call
xchg
and
and
insl
dec
imul
push
int
sbb
add
xchg
jmp
push
iret
jge
mov
adc
pop
sbb
out
fcmovne
roll
std
add
adc
int
sbb
add
pop
push
stos
inc
inc
out
xor
ja
shlb
inc
dec
dec
jp
test
xchg
mov
pop
mov
sub
cld
into
subb
sub
aad
enter
or
pop
stc
fcomi
lods
adc
popa
mov
cmp
shl
or
fsubp
jecxz
mov
cli
pop
xor
cwtl
push
bound
mov
shl
es
add
or
aas
mov
mov
adcl
inc
jns
test
push
lds
js
add
sub
cmp
cmp
xorl
xchg
or
out
jo
lock
lock
mov
inc
enter
dec
sti
mov
inc
inc
ret
xchg
jno
sub
addb
mov
mov
mov
out
loopne
push
lds
arpl
cltd
bswap
test
pop
sahf
or
pop
das
mov
push
data16
mov
mov
dec
aas
mov
mov
jnp
lock
pop
mov
sbb
fs
insb
dec
or
stos
sub
iret
cmp
push
mov
pop
cs
push
setbe
adc
adc
loope
cmp
mov
ficoms
fsubl
xchg
cltd
add
mov
cltd
dec
lock
inc
sub
sbb
in
mov
pop
int3
hlt
push
int3
and
push
sbb
inc
pop
jb
lds
gs
xor
mov
adc
int3
push
or
and
ret
in
jae
sub
cmp
repnz
stos
add
mov
push
xchg
pushf
add
scas
inc
jae
repz
stos
fcoms
out
movsb
addl
je
idivl
ss
aaa
fucomip
or
test
xor
jne
inc
jmp
ror
test
inc
jbe
lock
cld
std
and
out
jp
fptan
loopne
mov
hlt
mov
add
jecxz
xchg
cmp
jp
xchg
add
jns
sbb
dec
push
dec
loopne
in
sub
mov
jae
cmpsl
std
bound
mov
scas
cmc
mov
jbe
push
adc
push
mov
test
cmp
pop
aaa
fwait
push
addb
sbb
sbb
leave
sbb
pop
xchg
push
mov
sbbb
es
pop
or
inc
lds
lahf
mov
xor
in
data16
andl
incb
or
cli
lods
dec
into
clc
jmp
pop
movsb
int
shrb
sbb
mov
dec
mov
push
loopne
aad
scas
sbb
inc
hlt
insl
pop
mov
push
jnp
lret
pop
and
inc
pop
rol
cltd
loope
dec
roll
inc
add
andl
jg
ss
cmc
sub
es
mov
dec
jae
dec
sahf
leave
out
jns
and
aad
push
dec
in
loopne
and
cmpsb
mov
or
or
sbb
dec
add
or
mov
loop
imul
adc
push
les
movsl
aad
pop
not
cld
cltd
or
push
cmp
and
stos
push
popf
outsl
in
jns
test
cwtl
shr
repnz
jnp
pop
je
scas
repz
mov
jns
fldl
mov
push
dec
xor
aas
les
in
xchg
xchg
test
mov
dec
inc
leave
scas
sbb
xchg
push
jno
lcall
inc
repnz
in
jl
pop
mov
dec
clc
and
js
push
scas
sar
pop
imul
add
inc
adc
dec
mov
mov
movsb
sub
lea
aaa
fists
nop
sbb
or
mov
cmp
dec
shll
in
xor
shll
movsb
xor
out
mov
popa
dec
cmp
stos
jo
lods
mov
add
cmp
push
add
and
or
lods
and
loop
jne
dec
mov
mov
pop
jl
or
push
push
icebp
cmc
bnd
test
mov
xor
mov
jae
insl
ss
movsb
sti
xor
pop
jecxz
clc
xor
loop
mov
insl
fimuls
jl
xchg
insb
outsb
sub
and
roll
js
inc
mov
lcall
mov
std
addb
out
pop
push
mov
aaa
popa
adc
bnd
and
mov
out
add
enter
adc
imul
jno
in
btc
and
pop
jl
lcall
pop
into
mov
cmp
mov
outsl
lahf
repz
add
mov
das
rcll
loop
imul
xchg
dec
cli
push
or
imul
dec
cmp
pop
dec
dec
iret
fsubl
cs
js
cmp
and
push
inc
insb
jp
pop
push
sub
push
add
mov
leave
adc
mov
aam
imul
pop
jge
addl
push
jg
cld
add
shrb
clc
test
call
xor
les
mov
emms
ret
es
js
fnstsw
les
fidivrs
jmp
icebp
or
mov
fidivrs
inc
pop
vpmaddwd
pushf
jns
rolb
fsin
sahf
div
repnz
movsl
jg
mov
ljmp
lea
inc
stos
sub
add
mov
mov
push
enter
lcall
decb
sti
lret
jo
cmpsl
ret
cs
xchg
dec
xor
jo
sysenter
movsb
cli
mov
stos
jno
and
mov
out
pop
test
repnz
dec
xor
scas
out
mov
add
sbb
pop
mov
push
fldt
fnsave
cmc
push
or
push
shlb
popa
cs
call
std
mov
sub
test
inc
adc
out
cmp
dec
jle
int
mov
pop
aaa
sub
inc
and
add
sub
fcom
pop
cltd
and
xchg
in
subl
bound
add
add
arpl
push
call
test
ret
into
jns
in
call
in
cmp
mov
int
adc
jne
mov
daa
loopne
add
in
add
adc
sub
mov
jb
fs
sbbb
lret
add
mov
outsb
cmp
in
out
mov
cmc
xchg
scas
or
rcrb
mov
sbb
jge
mov
mov
inc
das
adc
mov
xchg
fdivrl
out
or
ret
dec
frstors
mov
fcomps
aam
jbe
stos
aas
and
popa
xchg
cmp
imul
addl
imul
fcom
xor
imul
mov
arpl
cld
adc
ss
inc
clc
jne
aad
lahf
sub
das
mov
rcl
or
insl
or
mov
sub
xor
mov
pop
fildl
xor
insl
push
sbb
adc
mov
rolb
inc
jno
fmuls
scas
mov
adc
xchg
shrb
push
lahf
orl
mov
mov
mov
or
rcll
xchg
fildl
frstor
add
sbb
adc
xchg
inc
cli
lods
mov
in
push
add
in
lcall
xchg
fdivr
popf
xchg
in
aas
in
les
test
fwait
sbb
test
dec
mov
cltd
cmp
xchg
jle
ja
xchg
or
stos
in
in
or
sbb
sar
jecxz
lea
sbb
je
fwait
cli
stos
add
cmp
pushf
mov
testb
xchg
pop
add
imul
std
mov
sub
pop
sub
xchg
add
fs
fistpl
cmp
mov
xchg
jnp
sbb
jo
dec
cli
push
sub
add
or
daa
into
fdivr
jmp
jg
push
gs
pusha
out
lods
call
cli
xchg
mov
add
out
and
rcr
clc
jnp
xchg
loop
adc
cmp
ret
and
sub
lods
cmc
movsb
filds
cmp
cmp
dec
leave
dec
dec
vorps
jl
aad
sti
jns
mov
lcall
fimull
in
push
sysexit
sbb
push
lahf
lahf
ror
dec
repnz
or
jp
jo
mov
inc
int
jle
add
or
mov
out
outsb
jl
mov
sarb
sbb
cmp
aas
mov
fdivp
int
inc
adc
idiv
sub
mov
mov
lahf
mov
xchg
push
jle
add
jg
push
cmp
dec
mov
loope
movsl
outsb
mov
nop
icebp
push
sbb
out
push
xor
add
dec
shlb
ret
je
mov
pusha
inc
mov
mov
mov
or
adc
bound
jbe
push
cmpsl
xchg
insl
cmp
xor
fs
adc
xor
mov
sbb
mov
into
ja
lods
pushf
inc
mov
cmpsl
arpl
lock
notl
jae
fildll
leave
lret
push
push
arpl
push
or
xchg
jns
mov
mov
jmp
mov
cld
or
xchg
and
lret
adc
imul
cmpsl
xchg
je
push
dec
xchg
in
xor
test
sbb
mov
sti
jle
nop
pop
out
out
repz
out
pop
push
cmc
je
inc
or
jns
dec
pop
mov
or
scas
push
inc
sbb
push
cmc
ret
out
inc
adc
imul
push
cmp
and
in
pop
xor
sbb
out
jo
movb
addr16
lret
sub
aas
dec
xchg
movsl
pop
pop
mov
or
xor
ljmp
jecxz
sub
sahf
imul
xchg
insb
sbb
popf
loope
xor
aam
in
cltd
movsb
mov
jle
add
movsl
jno
subb
xchg
mov
in
in
fadd
inc
mov
icebp
pushf
xchg
push
dec
sahf
fmull
mov
xor
and
or
sbb
sub
shl
cmpsl
loop
mov
mov
insl
int3
xchg
aad
in
sub
mov
call
sbb
or
jnp
or
ss
divb
daa
adc
cmp
mov
pop
jge
loop
add
leave
aas
xor
pushf
outsb
int
mov
idivb
or
mov
rcrl
cmp
sti
adc
iret
shrl
mov
xchg
ja
push
mov
mov
sub
movsl
push
xor
imul
xchg
cwtl
lock
push
fwait
mov
stos
popf
inc
out
shrl
testb
pop
incl
push
xlat
je
fcmovnu
mov
sub
iret
sbb
sbb
xor
add
dec
pop
aas
fwait
mov
xor
push
and
cld
jmp
push
loopne
pushf
pushf
pop
mov
loopne
arpl
aam
rolb
add
repz
out
inc
mov
fistl
dec
fwait
lcall
decl
cmp
in
jp
pop
adc
pop
jo
in
imul
mov
adc
mov
add
or
les
loopne
or
xchg
cmpsl
shlb
addr16
sbb
and
in
sub
in
in
fcomps
mov
dec
mov
push
scas
mov
outsl
out
mov
loopne
inc
push
fstps
daa
stos
insb
fimull
jl,pt
aaa
aam
mov
out
adc
icebp
adc
jge
test
stos
mov
loop
or
outsb
mov
push
pop
mov
movsl
pop
iret
mov
mov
sbb
and
sbb
cli
dec
add
test
jne
adc
aas
les
lret
sub
faddl
mov
lcall
mov
xchg
je
arpl
jne
dec
dec
inc
popf
cmc
fwait
out
arpl
xor
xchg
mov
lea
out
dec
mov
lret
and
jae
ljmp
test
int
or
jle
xchg
pushf
mov
and
lcall
aad
jb
jp
test
fmull
int
inc
sbb
sbb
fists
jmp
xchg
inc
pop
mov
aad
jbe
mov
int
lea
clc
jne
sub
sbb
and
xor
hlt
enter
cwtl
mov
lahf
popl
call
pushf
std
mov
pop
sbb
inc
mov
test
mov
and
dec
jl
jmp
xchg
and
shll
test
cmpsb
lea
outsb
das
push
js
mov
dec
rcl
jb
ljmp
sbb
call
in
pop
gs
aas
jnp
mov
icebp
scas
loope
push
mov
and
xchg
imull
push
mov
in
jmp
rcrl
lds
adcl
pop
adc
mov
roll
mov
insb
mov
test
iret
call
mov
mov
lock
lods
inc
sbb
ds
out
fidivrl
js
pop
mov
in
fucomp
stc
sub
xor
add
push
iret
data16
adc
mov
aaa
popf
negl
loopne
loope
lods
xor
sbb
inc
cmp
xchg
in
in
popf
rcrb
in
add
mov
dec
xchg
cld
test
inc
push
data16
js
ss
or
push
and
sub
ss
push
dec
jg
cmp
into
pop
xor
cmp
and
xlat
inc
inc
enter
push
fs
mov
in
jmp
stos
sbb
and
mov
rcrb
in
fs
push
mov
xor
jle
cld
imul
mov
inc
lcall
movb
stos
inc
cld
aad
popf
pop
bnd
les
pop
mov
jno
xorl
mov
add
xlat
jnp
push
fwait
clc
stos
jg
je
fcoml
fimuls
lcall
lds
dec
repnz
leave
stc
rcl
shr
sbb
and
int
push
and
gs
pop
call
icebp
iret
mov
stos
adc
notl
mov
loopne
lcall
outsl
vcvtps2dq
or
out
fldenv
cmc
aaa
into
jo
adc
std
mov
sub
mov
rorl
outsb
jns
xlat
loop
mov
mov
or
sbb
mov
xor
sahf
pop
pop
insl
xchg
push
mov
fldl
fcom
add
popf
lret
bound
jg
pushf
push
xchg
fwait
cmpsb
and
push
cmpb
bound
xchg
mov
arpl
push
xchg
icebp
mov
out
pop
lock
lret
ja
arpl
mov
rol
push
push
mov
fwait
out
adc
pop
jle
xchg
stos
xor
fldl
shr
xchg
jbe
mov
notb
insl
std
xor
rorb
test
cmpsb
je
lcall
or
mov
pop
dec
adc
or
push
jmp
lahf
xchg
xchg
cmc
mov
test
mov
fldt
call
subl
bound
aad
cmp
mov
inc
pop
jnp
and
xchg
and
mov
xchg
adc
sti
and
dec
cmp
xor
xor
xchg
hlt
or
adc
xchg
push
test
sbb
jecxz
out
push
mov
outsl
movsb
outsb
add
sbb
sub
sub
fwait
push
lea
sub
xor
dec
fistpl
mov
in
out
incb
adc
je
ja
in
mov
add
dec
cld
dec
mov
testl
jne
dec
out
repnz
push
dec
lods
fisubrl
leave
sbbb
stos
push
and
dec
loopne
jg
and
insb
mov
mov
addl
cmpsl
inc
inc
ljmp
ljmp
data16
pushf
dec
mov
dec
js
push
call
push
arpl
rorb
and
jecxz
mov
sbb
in
inc
sti
scas
mov
hlt
icebp
das
rcrb
std
sub
xchg
adc
dec
xchg
xchg
sub
call
dec
rcrl
pop
test
and
test
and
push
iret
test
shrd
adc
jno
xchg
lods
sub
cs
movsb
add
imul
xchg
fistl
ficoms
mov
ds
xchg
mov
mov
and
cmp
or
add
dec
mov
cmp
xor
fdivs
test
mov
out
mov
in
push
cmp
dec
or
adc
or
jl
pop
dec
fistpll
pop
lret
mov
aas
push
aas
ja
inc
cmp
jge
stos
adc
pop
mov
jle
jae
xchg
lret
lds
xor
in
cmp
into
std
inc
mov
gs
xchg
inc
insl
inc
push
int3
movsl
inc
jl
xor
or
popf
lock
imull
push
repz
or
mov
dec
out
sbb
inc
jecxz
pop
sbb
push
inc
in
les
mov
pop
inc
mov
das
jg
ja
pop
mov
xchg
aam
dec
xlat
imul
js
mov
bound
xchg
mov
pop
ljmp
inc
fadds
shr
daa
or
subl
mov
fisttpl
dec
dec
pushf
inc
adc
pop
jp
cmp
rcll
or
xlat
out
ja
sbb
pop
jl
hlt
adc
and
pop
lret
sub
mov
popl
arpl
jns
mov
push
xor
xchg
adc
mov
dec
sbb
cmp
mov
cmp
jnp
sbb
js
add
fistpl
pop
lahf
scas
mov
aam
lds
and
push
and
or
dec
cmc
sarb
std
sub
mov
mov
cmp
dec
mov
popf
xchg
dec
add
jl
and
mov
popl
sahf
add
js
push
sub
xor
inc
xor
in
mov
out
stc
scas
pushf
mov
test
sub
xchg
push
imul
or
cmp
mov
push
neg
xchg
lock
enter
cmp
shl
fsubr
xor
iret
pusha
push
mov
xchg
into
out
jns
std
xchg
xor
sbb
clc
movsb
sbb
hlt
orb
sub
add
fimuls
sub
push
loope
jnp
mov
icebp
pop
sbb
pop
call
cmp
insb
adc
jae
cli
fstp
jns
inc
jge
mov
shl
dec
xor
push
fisubrs
outsb
mov
in
inc
mov
test
popa
iret
shl
lahf
cmp
mov
add
sbb
pop
in
in
mov
mov
or
xor
inc
fcmovnb
adc
popa
adc
cmpsl
mov
pop
mov
mull
dec
xor
ja
sbb
je
inc
xchg
push
adc
jl
pop
pop
cmp
xchg
sbb
dec
xchg
jae
dec
test
test
rcrb
sub
inc
adc
fnstcw
jmp
xor
test
jmp
mov
cmp
or
shrb
inc
mov
cwtl
and
imul
push
sub
push
lods
int3
pop
or
xor
cmp
mov
imul
sub
pop
dec
sarb
mov
lds
pop
xor
stos
cmp
xchg
or
lcall
jbe
sbb
repz
ljmp
filds
fistl
popf
imul
fdivs
xor
inc
sbb
insb
dec
xchg
mov
pop
adc
std
mov
mov
or
insb
stos
xchg
stc
dec
test
cmpl
xchg
sub
pop
pushf
push
cmp
push
add
jge
nop
mov
pop
xor
xor
jg
aas
sub
addb
mov
xor
insl
loop
add
shrl
lcall
loopne
push
pop
stc
jne
mov
lret
push
test
push
out
stc
jp
adc
xchg
or
xor
and
pop
insl
dec
shll
adc
jmp
mov
cwtl
test
and
in
pop
mov
mov
dec
jae
movsl
notb
fsubl
rcll
push
pusha
fcomps
adc
orb
add
loopne
push
adc
int3
imul
aaa
add
mov
xor
pop
cmp
push
pop
jo
push
dec
and
xor
sub
enter
dec
int3
jge
test
push
jne
lods
xchg
inc
neg
dec
pop
shr
loope
in
cmpsb
dec
mov
cmp
cmp
sbb
scas
adc
push
add
add
imul
add
and
push
ret
push
aas
fnstenv
jnp
loopne
pop
push
inc
cmc
popa
jle
mov
aaa
cmp
fidivrl
inc
mov
add
and
lahf
pop
leave
xchg
test
mov
mov
movsb
push
push
or
push
dec
das
out
push
daa
xchg
adc
fs
and
pop
dec
mov
adc
cmp
sbb
lods
push
mov
sti
cld
icebp
dec
mov
lods
dec
add
mov
je
fwait
xchg
inc
pop
xchg
sbb
or
mov
pop
arpl
aam
stc
bound
inc
mov
and
xchg
mov
mov
xor
pop
mov
fisubrs
add
movsl
inc
cs
outsl
pop
fwait
mov
shr
popl
and
pop
in
test
pop
loop
aaa
enter
fwait
lret
inc
mov
pushf
push
and
sbb
loop
add
cmp
and
movsl
or
inc
jb
inc
jl
movsl
add
pop
outsl
cmc
jle
inc
mov
adc
lock
call
xlat
jns
js
out
push
in
mov
not
roll
insl
ret
push
sti
imul
inc
jl
jecxz
mov
pop
dec
cmpsl
push
mov
movsb
push
pop
iret
daa
jns
adc
paddsw
js
inc
testb
push
mov
and
inc
gs
lahf
cltd
inc
fildll
scas
mov
es
adc
pop
sbb
movsb
mov
icebp
and
xor
mov
push
jo
push
inc
xchg
sbb
push
out
out
icebp
sub
or
dec
mov
sub
sub
jmp
sub
add
aam
orl
push
sub
imul
pop
sbbb
inc
or
push
movsl
fsubl
cmp
mov
repnz
xchg
mov
inc
cmpsb
pop
or
mov
pop
xchg
bound
daa
or
mov
loop
mov
xor
sub
xor
int3
adc
jl
js
out
stos
imul
pushf
je
xchg
and
cmp
out
inc
adc
loope
cmpsl
and
push
push
addl
in
pop
in
cmp
ss
imul
ret
clc
fs
arpl
aaa
test
ljmp
mov
mov
iret
es
in
sub
int
out
iret
pop
inc
push
aam
mov
mov
dec
in
or
outsb
sti
mov
and
add
adc
add
ljmp
xlat
sahf
jecxz
test
std
in
pop
inc
xchg
in
call
rclb
ss
lock
adc
cmp
pushl
leave
jle
das
adc
lret
negl
repz
roll
lock
fwait
shlb
jne
or
popl
repnz
adc
aam
iret
fcmovnbe
push
adc
outsl
inc
aas
lock
mov
test
adc
popl
or
sub
scas
mov
lds
mov
cmp
fidivs
fwait
insl
jecxz
mov
push
lods
cmpsb
ja
popa
adc
insb
scas
inc
sbb
push
lock
orl
std
int3
and
xchg
addr16
push
add
daa
add
sub
mov
mov
cmp
cmp
jg
jo
sbb
add
pop
add
aas
jne
cmp
jmp
das
xor
cmpsl
add
sbb
sub
push
cmc
mov
jle
lret
or
in
aad
mov
imul
jns
scas
add
cld
add
pop
mov
cmc
adc
cmp
hlt
or
xor
mov
mov
xor
push
bound
test
js
and
test
jb
cltd
out
mov
or
jns
or
push
sbb
mov
cmp
shrb
mov
jae
xlat
xchg
test
ret
xchg
filds
push
popf
pop
xchg
and
and
dec
mov
mov
test
sbb
xlat
xchg
in
loop
adc
scas
testl
rorl
inc
xor
inc
mov
pop
sub
test
jge
cmpsl
aaa
cmp
out
scas
jae
lods
add
jl
movsl
and
out
sbb
jb
cmp
add
leave
and
and
fstl
inc
xor
sbb
mov
pop
mov
scas
incb
out
lret
mov
add
es
and
jp
insl
adc
mov
loope
mov
inc
rcrb
cmp
jne
sbb
in
pusha
rcrl
push
mov
sub
or
inc
ja
lods
dec
or
fs
cld
sarl
test
fs
pusha
loope
jecxz
xchg
inc
pushf
mov
jp
ficoml
int
sbbl
push
repnz
cmpsl
mov
mov
stos
mov
popa
cmp
jecxz
jle
int
cwtl
insl
or
or
sub
or
aaa
jne
sahf
out
jecxz
jl
out
std
and
jno
fildll
mov
leave
and
pop
addr16
mov
cwtl
xor
or
leave
cmp
ljmp
aaa
push
stos
lds
cmpsl
addr16
or
push
fmuls
cwtl
or
sbb
fstp
pop
iret
mov
imul
dec
loope
dec
ja
mov
sbb
dec
scas
pop
cs
lahf
mov
sbb
adc
cld
mov
out
xchg
popf
inc
xchg
adc
aaa
push
test
cmpsl
or
jge
xor
cmpsb
inc
mov
xchg
pop
hlt
sti
sub
sti
pop
push
cmc
dec
jne
std
jge
cwtl
inc
test
movsb
push
pop
dec
incb
sbb
mov
flds
or
xchg
and
scas
and
popf
adc
cli
icebp
lcall
js
fsubrl
pop
ljmp
mov
sbb
jne
sbbl
push
stos
cmp
mov
jmp
cmp
mov
mov
inc
cmp
imul
add
scas
std
repnz
push
push
ja
pop
inc
dec
cmp
inc
mov
addl
cli
scas
xor
cli
out
popf
adc
out
xlat
fstpl
frstor
cmp
mov
in
fstpt
movsl
mov
mov
or
in
cmp
fnsave
pop
cmp
clc
mov
repnz
mov
adc
xor
xchg
pop
inc
cmpl
cmpb
sbb
stos
sahf
push
push
subb
popa
addl
lods
inc
aam
cmp
cmp
scas
xchg
push
clc
fs
sub
lcall
xchg
dec
cmp
jo
cltd
fistps
in
insb
and
push
inc
mov
shl
ret
sbb
inc
xchg
dec
jnp
sub
jns
add
sahf
xchg
sbb
test
ret
loopne
jbe
in
mov
pusha
jae
icebp
or
inc
xchg
mov
cmp
inc
fldt
jb
ret
xor
add
sbb
push
fadds
xchg
mov
cs
dec
xor
sub
jle
or
jmp
fldenv
pop
pop
mov
loope
mov
jmp
daa
jnp
adc
push
jno
loop
popa
push
fists
sub
sbb
jns
outsl
mov
fists
stos
rorb
mov
pop
stos
outsb
in
or
mov
pop
in
mov
in
clc
scas
pop
fnsave
addr16
ljmp
and
add
cwtl
gs
and
xor
push
pop
out
add
mov
xor
and
incb
aad
movsb
bound
data16
mov
ljmp
and
jle
fwait
movsb
inc
adc
sbb
inc
push
push
mov
and
add
out
sub
jp
pop
xchg
movsb
fwait
sbb
mov
cs
sbb
add
idivb
fadd
sub
inc
loop
mov
aad
xchg
or
mov
sub
int3
sahf
rcl
fnsave
sub
les
mov
nop
into
inc
inc
push
repz
std
dec
pushf
adc
cmp
adc
ja
or
repnz
int
cmp
adc
xchg
sbb
xor
or
push
add
pop
cmp
arpl
adc
and
nopl
jbe
jmp
inc
push
push
add
stos
jnp
or
sub
out
push
out
lods
fisubs
imul
push
adc
sub
loopne
jge
lods
in
mov
jae
push
xor
mov
mov
pusha
push
pop
push
push
sbb
ret
jp
out
rol
push
inc
aas
cmp
sub
push
mov
mov
test
dec
ds
jb
fwait
add
iret
daa
enter
pop
jle
push
pop
push
mov
xlat
xchg
xchg
cmc
push
push
xor
push
jbe
cwtl
lods
sti
in
and
ss
jns
testl
outsb
loop
test
cltd
or
push
jmp
movsl
repnz
dec
mov
and
rcll
and
dec
lret
loopne
loopne
aas
dec
jnp
out
sar
dec
scas
fisubl
xchg
sub
sub
ret
push
mov
pop
xor
adc
inc
pop
xchg
lcall
dec
pop
mov
inc
xchg
mov
push
repz
sbb
gs
pop
mov
mov
enter
pop
inc
nop
pop
ljmp
mov
mov
xchg
push
subb
or
loop
fmuls
shlb
addb
jbe
js
jno
sub
enter
sbb
mov
sub
movsb
fcomp
xchg
dec
dec
mov
inc
pop
mov
add
gs
dec
jns
mov
push
lret
jbe
push
push
mov
push
es
mov
out
jo
push
mov
and
loopne
addr16
mov
in
or
pop
lahf
xor
sub
push
cwtl
sbb
mov
xor
loopne
jle
mov
xchg
sub
inc
push
idivl
iret
insl
pop
xor
out
and
sbb
mov
sub
add
shrb
or
mov
test
mov
xlat
popf
aaa
clc
loop
lods
shrb
mov
mov
pop
cltd
loop
xchg
popf
fwait
jecxz
inc
in
in
xchg
test
rorb
or
aad
push
inc
push
sub
add
daa
xrelease
icebp
sahf
add
outsb
inc
cs
ret
repnz
js
lea
adc
mov
or
insl
lds
cmp
mov
ret
push
mov
xchg
or
mull
clc
aaa
idivb
or
jno
dec
xorb
dec
addr16
mov
sub
mov
cli
push
in
fdivl
aam
cmpsb
or
inc
xchg
subb
jp
leave
lock
ret
pop
and
addl
lods
insl
aaa
dec
imul
fwait
mov
fwait
je
test
adc
test
insl
xchg
jg
dec
sub
std
push
xor
repnz
pop
add
xlat
add
clc
push
cmp
mov
cmp
mov
mov
mov
sbb
test
div
pop
mov
lahf
idivl
mov
sub
pmaxsw
les
out
sbb
icebp
dec
cli
out
test
add
mov
or
jb
idiv
imul
cmpsl
notb
popf
imul
sti
in
lcall
mov
dec
mov
movsb
orl
enter
dec
push
jge
inc
inc
push
jl
sbbl
iret
movsl
repnz
adc
adc
test
rcrb
xchg
or
mov
call
jmp
fdivr
jb
push
shrl
cmp
lahf
fadd
xchg
addl
pop
stc
jp
and
scas
push
sbb
xchg
outsl
xchg
mov
loope
imul
fmuls
push
ror
xor
je
insb
aam
lods
lds
loop
xchg
push
sub
enter
adc
jmp
sbb
cmp
das
mov
js
cltd
shlb
xchg
sub
rcrb
add
lods
insl
xchg
ljmp
cmp
cmp
fwait
test
adc
iret
mov
rcrl
fsubs
icebp
stos
mov
or
int3
jo
sub
js
jb
sub
jns
icebp
jg
out
loop
or
push
push
fcmovnu
jp
cltd
hlt
push
fidivs
mov
hlt
pop
push
call
add
dec
scas
in
mov
das
dec
push
pop
jl
sti
repz
pop
sarb
xchg
push
or
add
jne
xor
push
pop
lret
pop
dec
pop
addl
arpl
loopne
testl
add
movsb
mov
call
mov
adc
jle
movb
movsb
jmp
enter
pusha
aad
pushf
fs
xchg
insl
fcoms
and
movsl
and
daa
insl
sub
lds
xchg
push
in
inc
push
mov
in
rolb
jp
mov
sbb
xchg
cld
xchg
scas
add
lcall
int3
push
lcall
pop
fdivrl
mov
hlt
xor
mov
inc
shl
push
nop
in
cwtl
addr16
sub
imul
jge
ljmp
mov
xor
shrl
mov
out
or
pop
cmp
test
xchg
rcrl
scas
xor
sbb
in
je
xchg
push
pop
test
stc
fmul
cmp
mov
sahf
inc
into
mov
hlt
mov
aas
mov
and
xchg
push
mov
cli
jge
jbe
add
repnz
leave
jo
inc
loop
adc
fnstsw
and
dec
rorb
out
xchg
data16
cmpsl
mov
and
or
test
or
sbb
std
fwait
test
int3
mov
mov
std
pusha
xor
jmp
aas
lahf
xor
and
inc
xor
jae
jmp
inc
mov
ret
mov
inc
popf
nop
fwait
jae
push
int
fcmovnb
loop
out
mov
inc
mov
dec
inc
les
pusha
ss
cmp
leave
lret
jge
add
sbb
or
and
imul
daa
and
push
mov
push
aad
or
cli
inc
xor
aad
add
movsb
sub
push
insl
mov
adc
int3
dec
jb
lahf
lret
cmp
mov
pop
lahf
mov
arpl
cld
pop
cmp
mov
andnps
lcall
enter
jno
or
call
push
mov
dec
sti
fldl2t
repz
notl
xorb
push
imul
popa
jne
or
out
leave
cmp
out
aam
cmpsl
push
adc
out
inc
clc
mov
xchg
xor
xchg
clc
dec
dec
or
imul
push
xchg
out
fisttpll
mov
cmp
bound
shl
outsb
add
es
xchg
jns
mov
push
jecxz
lods
and
mov
push
pop
aad
sbb
out
subb
jno
inc
xor
fildl
pop
mov
lods
mov
mov
mov
sub
sub
cmpsb
cld
jg
add
loope
lret
popa
movsb
add
push
inc
jmp
bound
mov
add
lock
cmp
in
outsl
xor
jb
js
pop
loopne
xchg
cmp
aaa
dec
imul
aam
fsts
xchg
imul
lahf
popa
push
out
arpl
xchg
repnz
imul
outsl
jnp
test
mov
cmp
inc
aad
sbb
sub
outsb
mov
daa
loopw
jmp
jae
addr16
jle
ja
and
jecxz
jp
mov
fs
or
pop
jbe
add
push
jbe
jl
add
cld
sub
push
jp
rorl
dec
iret
mov
int3
pop
cmp
int3
mov
or
cmp
test
xor
test
jnp
cs
inc
ljmp
cltd
dec
aaa
repz
mov
imul
out
das
adc
movsl
mov
in
sub
sbb
add
ds
cmpl
inc
push
jmp
adc
adc
sbb
dec
pop
mov
xor
push
mov
cmpsl
out
mov
nop
int
adc
stos
pop
cmp
xchg
scas
xchg
push
loopne
cmp
pop
das
jmp
mov
fiadds
lea
cmpsl
xchg
dec
lods
mov
mov
jnp
jle
ja,pn
xchg
cmpb
mov
push
dec
dec
cmp
cs
sahf
inc
fdivr
gs
lret
aam
push
sbb
mov
loop,pt
xchg
and
sub
lock
jae
push
xchg
pop
push
sbb
fwait
jns
hlt
sti
add
stos
xor
loopne
sub
sbbb
jmp
test
mov
cltd
leave
cmpsb
in
pop
call
loopne
test
aam
ss
js
dec
sbb
test
out
testl
out
mov
jge
jbe
sti
sub
push
xchg
je
mov
lods
popf
clc
lea
pop
dec
icebp
pusha
pop
aaa
fldl
adc
aam
inc
and
or
mov
rcr
sub
adc
aaa
hlt
and
aas
ficomps
jnp
cmp
jno
jb
fldcw
cmp
dec
dec
lods
push
scas
cmp
inc
int
test
ss
xor
test
lea
mov
mov
xor
orb
out
test
push
out
insl
test
add
addb
push
push
adc
roll
sbb
push
in
in
mov
mov
jo
stc
push
xchg
mov
fidivl
in
and
sub
loopne
cmpsb
and
push
fldl
imul
jo
ss
push
and
hlt
add
das
mov
cmc
jo
push
ds
sub
jp,pn
add
test
push
outsl
adc
dec
out
jno
dec
insb
sbb
push
lahf
push
inc
les
cltd
jle
mov
pusha
cs
jae
add
pusha
sub
mov
cmp
cld
cmpsb
ljmp
nop
sarl
xchg
mov
imul
jle
mov
pop
dec
aam
push
xchg
lea
push
fsubrl
sbbl
iret
jg
cmpsl
push
mov
xchg
sub
loope
out
les
cli
cmp
push
js
jae
cs
pop
sar
cmp
cltd
add
int
cmp
lret
lcall
or
repz
cli
call
mov
jmp
out
roll
push
or
test
icebp
aas
add
sbb
lahf
in
xchg
or
sub
mov
xchg
dec
ss
jecxz
inc
mov
sub
add
or
sbbl
loope
add
in
xor
adc
negl
bound
pushf
flds
or
dec
ljmp
sbb
jbe
xchg
js
mov
cmp
test
movsl
jge
sti
xor
idiv
fldl
dec
mov
push
inc
sub
call
pop
dec
xor
jnp
pop
mov
lods
mov
adc
add
adc
in
push
xlat
hlt
inc
push
sbb
push
aam
and
dec
loope
insl
mov
mov
pop
mov
cli
fidivrl
dec
sub
inc
mov
pushf
movzbl
add
fnstcw
insl
sbb
insb
dec
xchg
mov
ds
movsl
fwait
or
pop
test
imul
test
dec
jno
cmp
test
cmp
dec
mov
cwtl
stc
std
jb
mov
out
arpl
push
sub
inc
enter
push
lods
jg
sub
lock
ret
fbld
push
pusha
cmpsb
push
mov
cmp
or
in
push
pop
wbinvd
inc
jg
mov
cmpsl
ret
xor
and
inc
xchg
dec
push
mov
or
cmp
sbb
jp
lods
popf
rorb
add
dec
jbe
sti
mov
adc
shrb
ret
dec
in
mov
push
lods
test
and
mulb
lea
out
mov
pop
mov
loope,pt
sub
ljmp
ds
outsb
ja
dec
mov
push
inc
dec
lret
icebp
test
cmp
movsb
sti
pop
pop
jmp
dec
icebp
fadd
pop
pop
sub
rolb
lcall
jl
mov
sub
dec
xchg
psllw
inc
jns
aaa
inc
mov
mov
out
jbe
outsb
cwtl
cld
sub
es
rolb
sbb
push
test
inc
xchg
bound
sbb
pop
in
and
dec
inc
dec
adc
cmp
pop
popf
xlat
pusha
push
cld
pop
stos
jmp
sbb
pop
adc
pop
ljmp
outsb
push
sbb
push
test
xchg
jle
jns
jns
pop
arpl
fstpt
fistpl
sub
push
jmp
jle
xchg
jb
shlb
cmp
mov
or
xor
add
sub
mov
sub
and
sub
inc
jmp
outsb
shrb
cli
out
add
add
mov
or
mov
push
and
fstl
scas
xchg
push
xor
pop
add
jp
scas
js
jns
sub
mov
cmc
ror
cmp
shlb
loope
dec
jg
fildll
xchg
jno
fcompl
cmp
mov
lret
inc
push
push
popf
sbb
adcb
xor
rol
ret
sbb
stc
jns
jb
fsts
jns
push
sbb
or
fdivrs
pop
es
cwtl
xchg
push
jno
stos
xchg
mov
fmull
mov
stos
jb,pn
icebp
popa
jmp
mov
jnp
shll
cmp
dec
jne
cmp
notb
xor
mov
pop
mov
fwait
pop
stc
mov
neg
or
in
jg
lcall
movl
mov
adc
push
mov
outsb
aaa
cmp
add
sbb
push
mov
cli
mov
cmp
imul
movsl
imul
mov
mov
mull
movsb
adc
mov
and
loopne
xchg
int
xlat
cmp
outsl
jae
cmp
dec
mov
jns
pop
lock
pop
bound
mov
jne
mov
data16
rcrl
push
push
rcrb
adc
pop
imul
dec
into
inc
insl
adc
pop
xor
pop
or
test
or
movq
rolb
sub
rorb
or
ret
clc
jecxz
xlat
xor
js
enter
mov
ficoms
jnp
stos
and
lds
cmp
test
sub
sub
in
inc
sub
movsl
lahf
rcrb
outsb
lods
cwtl
cmp
sub
fcmovne
and
dec
pop
inc
test
sar
push
xchg
icebp
mov
outsb
ja
fwait
and
into
out
popf
call
pop
int
lret
aad
mov
pop
popa
sti
loope
jle
mov
insl
push
inc
test
xchg
jge
mov
fisubs
push
push
loopne
bound
xchg
pop
and
mov
or
add
mov
xchg
mov
hlt
dec
enter
es
loope
jl
in
xor
add
in
lahf
mov
pushf
and
mov
xchg
lock
or
fs
in
mov
rcrb
xor
inc
mov
call
stos
cs
mov
sarl
das
jle
popf
adcl
push
jp
jb
dec
pop
lock
gs
movsb
aas
cmp
popf
inc
push
jo
or
in
repz
mov
fists
iret
push
test
push
adc
out
jg
dec
sti
insl
aam
rcr
sbb
nop
aad
fs
push
dec
xor
add
cltd
sbb
adc
adc
sti
sahf
and
mov
fstl
loopne
add
shl
in
les
pusha
stc
mov
in
rcl
movsl
cmp
stc
lods
push
in
xchg
leave
pop
and
sti
jae
cmp
xor
or
int
repnz
mov
fildll
addr16
insb
and
push
jbe
in
scas
stc
xchg
xor
mov
xchg
mov
lcall
aad
sbb
imul
inc
xor
shll
pop
or
addr16
test
cmpb
push
dec
push
icebp
dec
mov
in
test
cmpl
bound
mov
lock
sti
jecxz
pop
test
xor
mov
outsl
sbb
scas
dec
mov
stos
lods
or
xchg
out
mov
and
sbb
mov
jge
mov
mul
inc
fcoml
jo
test
mov
aad
fisubl
stc
daa
push
or
mov
imul
dec
loop
adcl
xor
lea
dec
inc
test
and
sub
jns
idivl
in
dec
fwait
stos
xchg
sub
fs
test
adc
insb
negb
push
xchg
mov
test
mov
shl
sbb
lcall
test
inc
fucomip
movsl
bound
out
in
call
push
jb
dec
into
sub
ret
fisttpl
xor
sbb
sub
inc
pop
mov
pop
add
dec
movsb
ss
sbb
test
push
icebp
pusha
mov
or
fmul
dec
jo
test
movsl
add
or
test
out
loope
sti
mov
clc
nop
xchg
cltd
fcompl
ret
mov
ljmp
pop
test
and
loope
int3
jns
inc
mov
ljmp
or
mov
bound
jae
xchg
test
mov
inc
in
mov
inc
jecxz
xorb
inc
jns
sahf
into
ret
mov
jle
sub
mov
jb
std
mov
and
sub
addr16
inc
mov
push
or
adc
out
cmp
pop
lock
push
in
and
das
sbb
sub
mov
inc
and
pop
and
xchg
icebp
xor
pusha
mov
pop
lret
xchg
push
ret
fs
les
mov
and
jecxz
jle
lret
stc
mov
popf
push
mov
cmp
in
mov
test
lret
push
lods
cld
aam
idivl
inc
mov
push
out
scas
std
mov
daa
shrb
aas
adc
aad
push
cmp
in
adc
insb
imull
mov
mov
shll
rcll
cmp
fwait
pop
lret
leave
pop
test
pop
es
xchg
aam
out
jbe
cwtl
mov
xchg
xchg
or
insb
or
adcl
lea
xor
data16
sbb
js
mov
mov
clc
das
mov
and
or
pop
add
in
sbb
and
sahf
mov
push
inc
pop
adc
addl
ror
ljmp
sub
icebp
adc
and
in
xchg
jmp
call
xchg
xor
les
sub
adc
xchg
jge
push
ffree
test
mov
push
add
push
xchg
mov
imul
dec
adcb
sbb
adcl
pop
lds
lret
cmp
xor
add
or
rcrl
ds
pop
fldcw
dec
lcall
xchg
sub
out
or
aad
push
bound
scas
ficoms
mov
int
inc
mov
movb
push
pushf
je
scas
adcl
jae
jo
xor
mov
mov
stc
push
or
out
push
enter
scas
cli
and
fs
test
xor
jl
test
sub
and
fildll
sbb
mov
or
pop
js
pop
mov
mov
mov
enter
movsb
push
or
dec
cmc
sub
xchg
arpl
out
adc
xor
and
push
add
mov
iret
arpl
xchg
xor
aad
leave
jb
cli
mov
or
mov
call
xchg
xchg
insb
jb
cmpsb
or
test
cmc
sbb
fdivl
call
add
sbb
stc
and
sbb
sbb
mov
cmpsl
and
cmp
mov
mov
jne
in
cmpsb
into
ljmp
repz
addr16
cld
fidivl
ret
dec
aas
xchg
popa
lds
rorl
jbe
movsb
pop
pop
cmp
sbb
insl
mov
ret
sbb
ds
aaa
sar
sbb
sbb
sub
into
jns
jno
cmp
data16
dec
ljmp
mov
mov
mov
shlb
fsubs
nop
mov
sbb
ds
lret
repnz
mov
popa
inc
repnz
mov
frstor
mov
lock
add
es
dec
push
sbb
mov
pop
pop
ret
mov
xor
push
insl
push
pop
sub
fcmovne
push
lods
and
loop
popf
movsb
push
ja
and
cmp
cmpsl
imul
xchg
lods
in
mov
sub
sub
call
push
and
jnp
add
movsl
lock
dec
add
adc
inc
mov
ljmp
add
stos
push
and
cmp
jmp
test
push
xlat
icebp
out
lret
out
subb
inc
aam
imul
nop
aad
and
lcall
in
sub
sbb
jo
insb
ret
ret
rcrb
push
fstps
xchg
mov
lock
lock
nop
lahf
mov
int
pop
jp
popf
sub
add
int3
push
push
imul
mov
add
lret
ljmp
data16
movsb
jno
outsb
gs
cmp
bnd
out
jp
sbb
mov
adc
in
inc
out
cmp
je
adc
and
imul
out
shll
jae
fstl
test
jb
movdqa
xchg
mov
jne
out
mul
mov
push
jno
push
lods
jb
outsl
lcall
sub
loopne
popf
dec
into
sbb
movsb
sub
xchg
test
mov
pop
fsubrs
insb
xchg
jbe
push
ret
push
mov
out
add
and
bndstx
hlt
sarb
out
xchg
sbb
mov
jp
push
mov
and
ja,pn
adc
mov
aam
cli
insb
ret
jae
cmp
jne
jge
jmp
loop
test
jg
dec
leave
cld
mov
mov
out
into
pusha
gs
push
jl
mov
jno
adc
test
sbb
mov
jns
mov
shll
sbb
in
bound
jecxz
pop
inc
aaa
pop
xor
stc
pop
mov
mov
hlt
repz
mov
int3
out
mov
loopne
js
dec
std
push
fistps
stos
insb
jecxz
aas
lods
pushl
pop
test
xchg
lcall
mov
adc
mov
sti
mov
sbb
lds
mov
xlat
ret
mov
pop
out
mov
adc
dec
dec
inc
jno
sbb
gs
and
cmpsb
rcr
lock
addr16
scas
dec
bound
pusha
adc
aaa
stc
xrelease
jge
in
xor
pop
cld
mov
inc
xchg
xchg
push
stos
lds
cmpsl
imul
movsl
mov
xchg
push
mov
mov
inc
jecxz
int3
and
es
ljmp
xchg
aad
nop
mov
pushf
xor
fcmovnbe
mov
and
mov
push
inc
int
ja
out
pop
sti
leave
popa
pop
pop
jg
fs
sarl
arpl
loopne
cmp
in
sahf
je
and
mov
inc
std
enter
and
mul
and
push
jle
into
sbb
mov
push
xor
inc
xchg
sub
xor
push
add
cltd
mov
cmp
adc
jmp
xchg
in
pusha
jnp
jp
cmpsl
jecxz
sub
add
and
negl
imul
cwtl
jecxz
inc
mov
jmp
aad
ljmp
mov
ret
adc
shll
enter
push
add
dec
adc
test
out
int3
rolb
adcl
stc
pop
cli
dec
mov
mov
scas
dec
out
sbb
push
lods
jmp
dec
push
scas
aaa
repz
ret
or
add
push
sti
cmp
and
jp
mov
jne
or
push
pop
sti
add
xchg
dec
adc
jne
stos
jno
pop
inc
and
shll
sbb
es
jle
add
scas
cmp
mov
and
arpl
xor
jo
aas
dec
sbb
out
aaa
loop
xor
mov
add
cmp
xor
mov
xor
insb
mov
add
rclb
mov
push
mov
mov
stc
in
outsl
fdivr
jns
jbe
cmp
ds
sti
dec
mov
or
cltd
inc
int
lods
add
pop
inc
insb
mov
fwait
mov
mov
psrlw
push
jp
outsl
and
jmp
out
lock
push
bnd
lods
bound
cmpsb
push
mov
add
sub
fsub
or
mov
mov
sti
mov
push
add
push
push
mov
cmpsb
xchg
cmpsl
mov
fsubl
lret
enter
lock
and
sbb
mov
mov
jl
ficoml
jo
jnp
cmpsb
std
sbb
sbb
xor
sub
out
imul
or
mov
dec
and
loope
insl
rclb
cltd
pusha
pop
xor
or
sbb
int3
stos
lds
stc
shl
test
sbb
jmp
stc
enter
mov
push
out
test
pop
jnp
or
sahf
cmp
pop
and
mov
push
es
mov
add
rorl
jae
mov
jmp
addr16
stc
mov
push
fisubs
mov
imul
insl
outsb
mov
inc
fs
xchg
repnz
icebp
iret
rorb
or
out
rorl
iret
mov
xor
das
dec
mov
push
dec
lcall
lcall
inc
std
scas
pushf
shlb
xor
test
mov
jl
or
push
and
adc
cltd
sahf
fwait
dec
stos
pushf
movsb
xlat
test
not
es
pop
pop
outsb
sbb
pop
ret
sbb
inc
sub
sbb
xor
or
ret
fs
mov
lret
aad
xor
jnp
adc
xorb
mov
dec
sub
mov
lcall
push
cmp
decl
or
pop
ss
pop
mov
negb
popa
push
jl
les
mov
setae
push
push
mov
js
sti
or
adc
mov
mov
pop
popf
fisubs
ret
mov
ss
out
mov
repz
pop
sarb
dec
outsl
or
ja
sbb
mov
lea
dec
pop
ljmp
aam
sbb
xchg
or
mov
jne
cs
cltd
fistl
shll
data16
dec
and
sbb
aad
aad
in
add
fwait
xchg
into
outsb
sub
test
mov
sub
je
and
imul
mov
jno
jg
jns
cmp
cld
in
outsb
cmpsb
jo
enter
loopne
gs
test
sub
rcrb
mov
xor
sub
or
rorl
add
addr16
outsb
xchg
or
sbb
mov
frstor
fildl
xor
scas
pop
cmpsl
movb
xchg
js
cmp
jae
lock
imul
dec
loop
inc
dec
pop
and
xor
ret
rorl
addl
dec
xor
pusha
fildl
jmp
mov
ljmp
insl
fadds
sbb
push
cwtl
jecxz
movsbl
pop
add
mov
emms
or
xor
xchg
ljmp
sbbb
jae
mov
cmp
outsb
test
andb
xchg
movsb
cwtl
fwait
js
inc
arpl
aaa
jno
cmp
ja
vcvtsd2ss
xlat
ror
mov
add
mov
mov
and
out
xor
iret
rclb
leave
inc
xchg
inc
xor
mov
iret
push
sbb
adc
push
fiaddl
pop
cmc
add
in
xor
pop
lods
subl
inc
lea
xchg
add
pop
fidivs
adc
sub
popa
xchg
mov
sbb
push
rorb
addr16
sub
pop
iret
or
adc
cld
data16
movsb
push
test
in
inc
or
push
ret
out
push
mov
daa
cs
inc
jle
jne
insb
dec
push
sub
ficoms
adc
fdivs
pusha
jmp
fisttps
je
dec
pop
jnp
dec
sbb
xor
sub
mov
cmp
pop
mov
mov
cmc
mov
ret
mov
cmpsb
xchg
adc
je
adc
es
es
sbb
je
ficomps
ja
push
pop
fisttps
or
jo
adcl
jns
out
xchg
jns
mov
sub
jecxz
pushf
mov
mov
rorb
pop
inc
inc
or
jbe
fs
xchg
mov
xchg
jecxz
outsb
rorl
sub
imul
pop
push
and
xchg
push
mov
jo
adcb
scas
lods
int3
aad
out
cmp
pop
into
stc
popa
jg
pop
xor
mov
add
test
cmp
dec
sub
mov
pusha
rcrl
jne
xor
lret
sub
adcl
pop
sti
xchg
dec
jne
and
cmp
or
mov
adcb
cmp
pop
pop
sarb
push
iret
ja
js
mov
dec
sbb
bound
mov
jno
push
lea
in
mov
test
movsl
jmp
push
inc
push
pop
int
adc
loopne
aad
es
imul
adc
or
push
rclb
push
dec
enter
inc
adc
test
imul
pop
mov
push
mov
cmp
ficoms
lods
mov
scas
xor
sar
movsl
shr
adc
mov
mov
push
nop
idivb
cwtl
jo
in
lock
imul
popa
and
fwait
and
inc
lret
std
pop
sub
std
cmp
and
sbb
sbb
mov
pusha
dec
sbb
outsl
xchg
cmpsb
xchg
ret
add
jle
pusha
in
int
xstore-rng
cmpsl
add
dec
lahf
jno
cmp
out
pop
roll
and
pop
and
daa
sbb
call
aam
inc
and
and
jno
push
mov
scas
movsb
push
pushf
cs
jns
jb
lods
ljmp
dec
push
jno
lds
push
push
sbb
mov
add
ret
push
lcall
sub
in
xchg
loopne
cmp
push
addr16
cs
mov
push
ret
push
cmc
lret
sti
add
push
adc
popa
mov
icebp
xchg
or
sub
sub
data16
popa
xor
imul
pop
mov
xchg
loopne
xor
or
xchg
fs
ja
int
inc
xor
ss
inc
and
shll
mov
mov
or
mov
mov
mov
stc
out
push
sarl
mov
add
jo
or
shll
js
icebp
mov
aaa
mov
xchg
jb
xchg
lret
out
test
add
sbbl
mov
pop
ffreep
add
push
push
add
fidivs
ret
push
mov
mov
sti
push
inc
stos
ljmp
pop
xor
cwtl
insl
pop
add
add
in
es
je
repnz
mov
loope
and
push
adc
shlb
out
jg
fucomp
sbb
xor
dec
fwait
scas
lret
mov
leave
push
rcl
add
jbe
repnz
hlt
mov
rcrl
imul
cmp
icebp
shlb
pop
enter
adc
lods
pop
sahf
cld
rcll
fs
popa
in
imul
sbb
xchg
mov
fistps
jg
lcall
lcall
sub
jbe
loopne
in
dec
fsubrl
stc
out
stos
in
add
imull
jnp
filds
scas
aaa
fcomip
inc
pop
pop
imul
and
jne
in
jno
mov
cmpsl
pop
cmp
cltd
imul
ljmp
mov
mov
mov
xchg
cmp
add
ss
jge
int3
cli
cli
add
mov
mov
jns
jae
in
repnz
fcoml
or
jne
nop
add
adc
sub
aad
or
cltd
test
aaa
xor
icebp
roll
bound
imul
add
cmpsl
sahf
ss
or
fmull
sbb
addr16
dec
dec
mov
nop
xor
fistpl
mov
ficompl
jl
mov
adc
jle
clc
cmp
cmp
push
pop
je
ss
test
std
fldcw
mov
leave
mov
filds
fcomip
push
mov
cs
gs
fnstcw
lret
mov
mov
xchg
lret
daa
dec
lret
xor
je
lahf
cmpsb
or
lret
dec
daa
inc
mov
dec
xor
rcrl
or
inc
sti
daa
dec
pop
cmc
or
cmpsb
push
pop
in
lods
pop
push
xchg
push
int
and
inc
adc
push
xlat
add
int3
dec
out
and
and
lock
adc
lods
test
repnz
ljmp
xchg
scas
jp
push
movsb
pop
push
iret
pop
pop
xchg
cmp
icebp
mov
fsubs
popa
xor
or
cmc
xor
cmp
jecxz
sub
inc
push
sbb
inc
mov
in
push
pop
pop
fndisi(8087
pop
scas
push
pop
and
jle
dec
divl
and
fisttps
mov
or
mov
push
ret
adc
rorl
xchg
push
inc
in
hlt
push
and
mov
push
cmpsl
xchg
add
sbb
sbb
cmc
imul
push
xor
clc
out
in
xlat
or
adc
sbb
pusha
mov
addb
cmc
ret
out
jnp
sub
mov
fisttps
les
sub
lea
std
mov
repnz
arpl
mov
int
jl
repz
in
cmpb
dec
jl
dec
fldl2e
sahf
mov
dec
mov
aas
fbstp
mov
in
push
or
cmp
nop
or
mov
adc
lods
sbb
lock
mov
stc
mov
inc
dec
jbe
jno
jno
xchg
sti
mov
mov
xchg
int
call
pop
mov
les
inc
mov
loop
jb
xchg
sbb
addb
xchg
loop
xor
mov
cmp
xor
imul
jne
fcomip
into
mov
clc
out
ljmp
mov
dec
stos
add
lret
dec
sub
movsb
insb
hlt
sub
stos
in
mov
push
cmpsl
adc
mov
cmc
fs
les
mov
ret
lock
outsb
push
pop
mov
scas
add
push
and
fisttpl
sub
hlt
dec
fisubrs
fmull
aas
adc
insl
mov
adc
sbb
loope
xchg
push
insb
outsl
stos
dec
xor
mov
xor
adcl
mov
shrl
out
cmpsl
sbb
movsl
dec
imul
push
nop
cmp
aam
push
cltd
out
incb
fldt
dec
sahf
mov
mov
jo
loope
push
push
stos
xor
cmp
inc
test
sti
inc
or
shlb
jns
js
mov
cmp
jo
or
mov
cmpsb
jo
cmp
mov
mov
xchg
mov
repnz
jbe
mov
lods
sub
jg
cmp
inc
fcomps
push
xor
lods
sbb
push
testb
clc
int3
and
lahf
adc
xor
nop
mov
xor
ljmp
ljmp
mov
pushf
jb
sbb
test
xchg
daa
shlb
cmp
dec
out
dec
sahf
adc
ja
xor
and
into
inc
jle
fwait
xchg
out
inc
cltd
cli
ret
sub
mov
dec
fcoml
sbb
add
icebp
jae
cmpsl
pop
imul
jle
out
xchg
aam
or
mov
jb
lahf
clc
sub
xorb
aam
cwtl
push
xlat
test
outsb
or
lock
adc
push
push
inc
mov
and
mov
mov
lock
dec
xor
push
daa
or
frstor
icebp
mov
cmp
je
repnz
pop
call
mov
imul
adc
cmp
push
add
or
fldt
insl
xchg
imul
out
jmp
jb
pop
cmp
stc
popa
dec
mov
xlat
icebp
pusha
inc
inc
adc
stos
cmp
cmc
mov
dec
cli
call
mov
mov
sub
or
xor
subl
jmp
into
or
sbb
push
das
add
jnp
mov
or
fnstenv
dec
cld
mov
lcall
cs
xchg
add
push
sar
int
push
out
mov
xchg
fwait
cmp
jns
in
pusha
xor
inc
fisttpll
out
subb
lods
fcomps
loope
push
pop
iret
mov
mov
sub
inc
dec
fldl2t
jl
sub
push
cmp
ljmp
lods
cmp
pop
pusha
push
loope
inc
mov
mov
push
jmp
sbb
test
push
cmpsb
orb
call
jo
cmp
or
ja
mov
dec
popa
into
mov
movl
mov
inc
push
and
mov
fcoml
fadds
or
jmp
pop
mov
jmp
add
sbb
scas
and
pop
mov
pop
inc
sti
push
stos
adc
sbb
lods
mov
insl
and
outsb
mov
mov
popf
scas
and
rclb
sbb
outsb
lds
sahf
mov
out
pop
ss
inc
aas
mov
and
leave
adc
jne
mov
in
mov
xor
mov
xchg
adcb
out
inc
shlb
lret
jo
cli
pushf
jle
into
int
shrl
sbb
outsb
test
xbegin
add
mov
xchg
push
movsl
mov
lret
pusha
or
in
rcr
rorb
mov
pop
push
push
push
lahf
add
xor
lds
and
push
xchg
rol
pop
arpl
bound
andl
inc
or
mov
leave
lods
mov
ficomps
les
pop
mov
stc
inc
mov
mov
cmp
xchg
out
sub
mov
pushf
ficoml
int3
add
push
scas
test
fcoms
iret
or
and
sbb
rclb
pop
pusha
scas
fdivrl
push
daa
mov
xor
jae
lcall
dec
pop
arpl
mov
mov
inc
rol
xchg
cltd
or
mov
ficoms
xchg
inc
pop
inc
shl
repnz
lcall
aad
mov
dec
sub
inc
mov
fwait
cld
inc
xchg
mov
outsl
jns,pt
sbb
inc
push
lret
inc
int
fcmovnbe
fisubrs
andl
sub
cmp
lret
mov
imul
jge
fimull
sbb
fisubrl
sub
mov
adc
cmp
icebp
movsl
arpl
dec
jae
pop
addr16
daa
inc
sbb
mov
cltd
adc
mov
jns
rcl
scas
xor
and
push
push
int3
or
xor
hlt
jmp
xorb
inc
out
sbb
jnp
cmp
sbb
lds
lods
jb
push
jg
mov
lds
call
or
fisttpll
or
sbb
inc
sbb
dec
mov
das
dec
xlat
and
jg
xor
add
sub
jp
fcmove
jge
ret
xor
sub
test
decl
or
and
mov
jb
push
xor
bound
testb
xor
pop
fwait
clc
pushf
fcomp
outsl
sub
dec
cmpsb
jmp
xchg
mov
xor
pop
cmp
push
inc
inc
ss
xchg
sbb
daa
gs
lret
mov
shll
dec
in
outsl
cmp
sub
adc
leave
cmp
int3
fsubl
jl
test
or
xchg
and
ret
jb
pop
out
es
testb
dec
sbb
adcl
fdivrp
xchg
jns
push
pop
arpl
sbb
push
loopne
xchg
cmp
xchg
je
mov
mov
xor
xchg
pop
imul
fcomps
and
mov
daa
rclb
push
inc
adc
dec
in
in
mov
fs
sbbl
sub
cs
push
mov
xlat
gs
pop
fcmovb
mov
inc
xchg
stos
add
and
mov
cmc
sub
clc
cs
adcb
mov
push
lahf
sbb
cmpl
mov
mov
lods
rcr
mov
loope
push
fdecstp
arpl
les
cs
inc
aaa
sbb
jecxz
pop
ret
or
push
push
sti
fistpll
sub
imulb
push
leave
pop
lock
stc
popa
xchg
xchg
cmpsl
push
movsl
xlat
cwtl
loop
and
cmpsl
inc
mov
mov
pop
pusha
pop
lahf
jl
data16
in
push
and
rorl
mov
xchg
loope
or
mov
mov
cmc
jg
jp
stc
push
cmp
mov
leave
jl
fcmovne
push
add
shll
movsb
dec
pop
dec
ret
mov
dec
inc
lods
sub
cmc
ja
adc
nop
call
inc
leave
mov
insb
subb
shll
push
xor
je
int3
mov
and
lret
jle
xchg
mov
jbe
pop
adcl
cmpb
push
fidivl
bound
clc
rcll
loopne
clc
mov
pop
xchg
mov
rorb
xchg
into
pop
shrb
adc
xor
repnz
push
pop
cmp
xchg
or
pop
ss
jbe
dec
roll
or
pop
xor
arpl
push
adc
movsb
rorl
lea
andb
pop
mov
aad
add
out
mov
sti
cmp
jecxz
lods
add
jg
das
outsb
repnz
in
inc
scas
xchg
sbb
jae
js
fildl
ljmp
stc
sbb
jl
arpl
daa
std
sub
jnp
cmc
lods
jecxz
rorl
enter
pushf
mov
pop
mov
jl
roll
mov
es
mov
jmp
lods
fidivl
cmp
fdiv
mov
sbb
jecxz
cmp
fnsave
xorl
dec
ret
and
jge
adcl
jp
lahf
leave
mov
sbb
les
adc
outsb
inc
mov
jmp
lock
inc
leave
add
loope
mov
lret
mov
mov
js
jnp
mov
sub
xor
mov
mov
sub
xor
mov
xor
fisttpll
sub
jmp
faddl
rcrl
cmp
pop
xchg
pushf
outsl
add
and
push
pushf
stos
add
jo
ja
in
sub
lock
in
or
cli
and
ds
clc
icebp
jle
xor
iret
adc
inc
aas
inc
push
les
addl
or
adc
mov
test
lock
and
xchg
mov
mov
adc
gs
int
fistpll
or
psraw
cmp
das
or
sbb
movsb
adc
pop
jnp
sbb
cmc
es
daa
lock
incb
dec
or
lahf
sti
add
xor
not
dec
inc
add
inc
je
ret
mov
fmul
add
imul
fwait
cltd
adc
into
mov
dec
push
and
or
scas
rolb
call
outsb
add
mov
aam
dec
mov
fnstsw
loope
adc
and
bound
adc
jae
pop
aad
pop
add
repz
ss
sub
jmp
in
inc
jb
xchg
icebp
dec
shlb
popa
add
push
outsb
mov
mov
jp
movsl
ljmp
push
mov
loope
xchg
aad
dec
shrl
stc
push
dec
mov
cli
test
pop
xor
imul
js
cwtl
xchg
shl
or
mov
pop
sub
nop
adc
iret
fiadds
cmc
out
frstor
out
mov
mov
movsb
mov
sub
jne
ja
mov
or
xchg
or
into
sbb
iret
or
mov
pmuludq
imul
data16
ret
js
icebp
cmp
mov
pop
outsb
sub
notb
and
jecxz
lret
cmp
push
lods
inc
scas
cs
push
dec
fistpl
jo
sub
sbb
xor
lcall
mov
xor
sbb
cs
cmp
mov
test
and
pop
adc
mov
cwtl
aas
xchg
lods
int3
or
scas
pop
fsubs
jg
icebp
popf
mov
iret
and
ss
push
mov
sahf
cmc
inc
jns
jb
mov
out
in
scas
sahf
sub
popl
sub
inc
adc
or
pop
mov
and
outsb
pop
outsl
inc
xor
xor
imul
fwait
jl
dec
adcb
loopne
shrb
mov
push
dec
mov
nop
jns
int
push
sub
icebp
xchg
stc
cs
fwait
inc
dec
mov
aad
sbb
aad
ficoml
lods
leave
add
adc
add
pusha
dec
and
push
cld
ret
aaa
cld
lods
insb
imul
fdivl
inc
loope
popa
dec
add
out
or
or
jg
dec
xacquire
add
push
or
pop
rcll
test
dec
out
mov
mov
fcompl
test
addr16
pop
jecxz
int3
inc
adc
jecxz
sub
jle
pop
outsl
sbb
add
xor
mov
outsl
jne
or
cltd
outsb
arpl
test
pop
out
mov
test
add
insl
cmp
push
pop
mov
clc
add
push
lea
mov
cmp
adc
icebp
rcrl
dec
sub
in
add
pop
push
jae
mov
pop
mov
arpl
and
xchg
mov
repnz
je
mov
shlb
scas
fmul
add
movsb
call
mov
inc
ficoms
imul
jp
add
int3
or
rcll
mov
inc
aaa
and
sub
fmull
out
push
repz
leave
jl
jo
and
inc
pusha
inc
inc
mov
and
popf
push
xlat
cmp
cmpsl
inc
and
jle
jle
mov
leave
xchg
jmp
fistps
aam
push
cmp
divl
ljmp
test
or
push
nop
lods
in
fsubrp
mov
and
loopne
sbb
hlt
in
dec
adc
xchg
stos
jl
je
mov
pop
mov
shll
push
lcall
movsb
in
sbb
imul
insl
popa
outsl
icebp
mov
mov
mov
dec
mov
les
repnz
xchg
jp
imul
ljmp
push
push
lds
push
sbb
outsb
movsl
sbb
jge
jg
xchg
addr16
xchg
and
pop
lcall
jb
stos
insb
or
or
out
inc
hlt
xchg
out
or
mov
jecxz
ja
sti
in
cmp
imul
rorb
mul
inc
scas
xchg
cld
and
sbb
adcb
dec
sti
xor
mov
pop
cs
scas
in
fadds
mov
mov
imul
out
or
pop
stos
sub
sub
call
sub
test
sub
mov
cmc
add
in
push
fwait
pop
xor
aad
mov
testl
mov
cmp
pop
cmp
ret
inc
dec
push
adcl
mov
adc
jl
inc
pop
inc
jbe
loop
xor
xlat
sbb
das
les
pop
pop
jbe
jp
imul
cmpsb
fildll
das
mov
out
pusha
arpl
mov
movsb
pusha
and
inc
pop
outsl
xorb
cltd
test
rcrb
popa
mov
or
scas
int
xor
imul
xor
push
inc
or
xor
loope
jno
scas
repz
lret
add
jae
lds
jb
cmp
sbb
jb
adc
es
stc
cmp
sbb
aaa
inc
hlt
push
adc
sbb
jp
pop
inc
sub
test
dec
in
sahf
push
sbb
lahf
push
dec
lea
xlat
add
sar
mov
xchg
imul
xor
mov
xchg
lret
mov
pop
xchg
xor
shr
fisubrs
xlat
icebp
outsb
mov
lods
je
in
in
push
and
cli
inc
pop
xchg
jp
xchg
in
sub
test
push
jno
sub
and
jmp
cmpsl
out
mov
loop
out
pop
mov
add
lahf
or
stos
dec
mov
fcompl
jb
out
sub
int3
sub
lahf
and
fidivl
adc
pop
nop
push
pop
mov
ds
idivl
dec
and
sub
pop
gs
mov
bound
bnd
push
ja
int3
push
xor
xlat
in
fnstsw
cmpsl
int3
inc
std
fwait
mov
ljmp
xor
sub
sahf
std
cld
ja
out
mov
jno
pop
loope
push
inc
loope
jnp
or
jge
mov
subl
jle
sbb
sarb
dec
or
outsb
sbbl
sahf
es
lcall
cmpsl
mov
or
fwait
push
push
mov
ffreep
test
pop
lcall
pop
jmp
loop
or
jbe
repnz
or
in
ficoml
dec
xchg
cmc
or
inc
test
mulb
pop
inc
add
or
in
and
mov
mov
cmp
daa
push
in
mov
sbb
inc
popl
mov
sbb
mov
clc
fidivl
xor
mov
out
testb
pop
mov
stos
into
sbb
pop
repnz
mov
mov
inc
push
imul
pop
mov
gs
inc
or
dec
stos
lods
popf
adc
sbb
sub
movsb
popf
cld
cmc
pop
jl
imul
sbb
and
sbb
push
ret
push
outsl
sbb
cmp
adc
adc
cltd
pop
sbb
dec
inc
out
inc
adc
inc
jle
pop
js
pop
jge
mov
xchg
mov
movsb
cmp
cmpsb
dec
test
inc
cmp
addr16
cmc
pop
sub
jg
mov
call
hlt
inc
mov
cmp
ja
jne
dec
or
pop
cltd
pusha
sbb
aad
imul
idivl
shll
stc
mov
test
aas
mov
cmpsb
xchg
mov
add
bnd
lea
mov
movsb
lods
lea
xchg
dec
jno
cmc
sahf
dec
jp
pop
enter
push
mov
ja
imul
cli
cmp
daa
ret
push
push
or
sbb
mov
loope
sub
mov
and
jmp
shlb
push
mov
push
int3
add
mov
mov
inc
pop
dec
push
xor
ljmp
adc
lahf
dec
push
dec
xchg
outsb
xor
jg
sbb
mov
cmp
xor
sti
pop
dec
push
mov
mov
outsl
clc
loopne
aad
or
adc
adc
dec
sti
fidivrl
rcrl
inc
and
xorb
mov
adc
mov
outsl
add
xor
ja
push
clc
add
pop
xchg
fwait
in
jle
lret
xor
lea
in
rcl
sbb
inc
je
cwtl
add
sbb
push
pop
fwait
pop
push
mov
sti
cmc
mov
mov
fwait
sbbb
in
mov
xchg
movsb
and
lds
jo
adc
or
sbb
cwtl
or
mov
out
les
hlt
fdivrp
xorl
dec
popa
lcall
and
adc
ljmp
xor
lods
in
sbb
inc
jo
ds
jl
hlt
roll
pushf
test
cmp
mov
mov
aas
jnp
mov
decb
mov
cmp
out
pusha
add
fs
add
loop
sbb
push
inc
lret
inc
mov
dec
xrelease
jbe
ret
dec
xor
outsl
pop
xchg
xchg
movsb
jl
dec
adc
xor
stc
insl
or
and
fidivs
cmp
mov
mov
call
mov
xor
or
mov
push
cwtl
in
out
cmc
das
cli
int3
repz
addr16
inc
cmp
adc
imul
je
mov
jmp
mov
pop
jns
or
dec
shll
adc
mov
in
cltd
xor
enter
xorb
dec
sbbl
lahf
adc
or
push
mov
call
xor
sub
adc
lock
divb
scas
ljmp
inc
jae
pushf
in
cmp
cld
cmp
and
cmpsl
in
loop
mov
cltd
imul
shrb
or
mov
gs
in
stos
jbe
mov
pop
sub
repnz
adc
cmp
jl
jne
mov
addb
jne
in
and
sbb
jmp
int3
sbb
inc
mov
and
dec
add
mov
mov
mov
es
fcoml
add
push
iret
xchg
fisubl
sbb
sub
xchg
add
xchg
adc
sub
xor
aad
jnp
data16
arpl
fs
jmp
jge
mov
fsts
jne
or
cmp
push
lods
cmp
jmp
out
or
ss
hlt
das
xor
aad
repz
xchg
or
sub
fmul
test
ja
cmp
cli
loopne
mov
sub
pop
add
lods
addl
xchg
push
push
out
cld
lods
sbb
ret
lds
mul
pcmpgtw
mov
xchg
clc
loopne
push
loopne
cli
mov
push
pop
out
sbb
xchg
addr16
in
xor
enter
imul
jecxz
addr16
add
leave
sbb
mov
xchg
mov
mov
jne
aas
add
popf
cmp
push
mov
ss
into
mov
sub
pop
mov
pop
add
add
add
mov
pop
sub
cmp
inc
push
es
xchg
mov
imul
and
jp
mov
fwait
xchg
ds
addb
fistpl
sub
and
mov
sub
xchg
mov
inc
outsb
cmp
cwtl
call
aad
xor
out
icebp
jp
and
add
mov
dec
mov
and
insb
push
lods
leave
push
getsec
in
push
xchg
es
pop
mov
xor
in
cmp
roll
inc
xchg
push
mov
pushf
xchg
push
repz
test
add
pop
cmp
adc
or
xor
dec
jle
nop
mov
push
or
rolb
dec
icebp
out
push
push
xchg
mov
cli
inc
mov
and
shr
add
push
mov
push
out
lock
outsl
in
punpcklwd
or
dec
arpl
push
in
sahf
mull
scas
adc
xchg
lret
sbb
mov
mov
das
dec
lret
pop
or
aaa
jns
xchg
rclb
cmp
pop
push
call
jbe
aas
int
pop
xor
or
inc
xor
cmp
mov
inc
cmp
mov
mov
jmp
xchg
dec
lret
stos
ja
loopne
mov
data16
xchg
sbb
mov
jbe
ficoms
outsl
xchg
mov
popa
or
aaa
jno
dec
es
cld
mov
lret
push
lcall
sub
int3
cmp
xchg
lock
jle
dec
push
leave
lods
mull
push
pushf
or
xchg
xor
out
dec
fsubr
fwait
lds
fistps
or
dec
and
xor
sbb
mov
lock
aad
push
popa
insl
or
or
add
mov
les
xor
roll
sbb
rcr
outsl
mov
jp
gs
jbe
dec
mov
pcmpeqd
loope
cmp
adc
nop
adc
mov
jno
mov
jnp
lea
and
mov
mov
dec
imul
adc
das
mov
mov
or
adc
sahf
sbb
cmp
test
das
ja
outsb
inc
mov
sbbl
pusha
ja
mov
ficoml
mov
mov
lcall
out
jnp
push
popf
xchg
sub
push
addl
or
jmp
das
sbb
mov
cltd
jb
sub
rcrl
mov
adcl
jo
inc
fldenv
je
daa
xlat
dec
inc
lahf
inc
sub
test
inc
call
scas
dec
sub
sub
sarl
mov
pop
add
push
lret
cmp
fildl
xchg
fnstenv
sub
xor
mov
mov
sub
jno
repz
lods
push
xor
adc
dec
repnz
enter
lret
fistpll
aaa
popa
xchg
addb
or
pop
mov
mov
es
lret
into
add
and
shrl
and
xchg
mov
mov
push
outsl
lock
mov
aam
adc
das
pop
pushf
pop
popa
dec
xchg
scas
or
pop
fisttps
fs
dec
cmp
mov
nop
or
inc
dec
scas
lret
sbb
or
in
aas
dec
test
into
cmpsb
jbe
fdiv
imul
mov
pop
loope
std
cmp
pop
in
push
jp
pop
push
jmp
cmc
xchg
int
add
xor
add
test
dec
mov
mov
or
sbb
xchg
adcl
mov
loopne
push
lcall
xor
mov
cmpsl
and
pop
mov
push
pushf
stos
inc
sub
adc
sbb
and
rorl
jmp
dec
shrb
or
add
jb
jns
jo
xchg
loop
mov
pop
cmpsb
and
movsb
dec
mov
and
inc
mov
in
sub
mov
jns
jae
and
xchg
push
push
divl
cmp
stos
jl
shll
out
clc
outsl
gs
cmp
pop
xchg
dec
sti
adc
or
fadds
xchg
repnz
sbb
jne
mov
fiadds
adc
cmp
nop
mov
pop
xchg
out
aad
pop
mov
xchg
xchg
in
mov
daa
adc
xor
jb
movsb
jo
jbe
mov
pop
mov
loopne
lcall
jne
mov
mov
adc
ret
sar
sarb
mov
mov
js
xchg
fnstenv
xchg
inc
cwtl
data16
ds
je
int
cmc
xor
js
pop
pushf
lcall
push
fwait
jp
inc
loop
sbb
out
xchg
sub
jo
jns
lret
or
mov
adc
fistps
je
insl
jecxz
cltd
sub
sti
movsl
xchg
dec
jno
cmp
push
lcall
and
int
sbb
inc
mov
scas
ret
sbb
or
lahf
jl
adcl
jge
ret
pop
and
testb
sbb
icebp
add
outsb
repnz
aas
xchg
fucomp
push
xchg
or
push
push
adc
and
add
sbb
add
jbe
fimuls
cltd
sbb
out
cmp
in
test
add
cmp
ljmp
hlt
lods
dec
mov
lret
sub
push
lahf
xor
in
shlb
cmovne
inc
loopne
push
mov
jnp
ret
adc
out
lock
jmp
mov
jecxz
flds
mov
icebp
std
in
xor
lahf
jecxz
or
movsb
aam
pop
scas
lods
jne
mov
sub
cmpsb
jle
inc
jmp
test
or
xchg
add
imul
pop
imul
cmp
push
sub
aam
xchg
pop
mov
xor
mull
cmp
fldenv
imul
jb
insl
imul
mov
cwtl
adc
jmp
mov
mov
push
adc
pop
cmp
sub
xchg
out
cmp
xlat
pop
pop
shrb
inc
jp
adc
dec
sub
xor
in
outsl
xor
test
jecxz
jno
and
fmul
sahf
mov
lods
pop
inc
aaa
dec
mov
sub
scas
sbb
mov
das
push
dec
pop
jne
sub
mov
xlat
out
push
mov
aaa
add
fstpt
insb
jae
cmp
leave
jo
test
jo
insb
inc
cmpsb
cmpsl
or
ljmp
mov
les
sbb
sub
sarb
sbb
idivl
insb
adc
mov
aaa
pop
movsl
fcomip
dec
fs
rorl
mull
ss
lret
imul
xchg
aam
cmp
inc
cltd
jbe
cmp
mov
jns
pop
mov
enter
mov
dec
jno
xor
jb
mov
pop
push
icebp
inc
mov
insb
pop
xchg
push
out
sub
push
sub
lds
and
mov
pop
pop
aad
scas
inc
sub
or
sub
cltd
aad
or
in
leave
cmpsb
adc
insb
mov
jae
xchg
js
loope
aaa
ljmp
push
or
ret
push
das
movsb
jmp
sti
mov
pop
data16
push
push
idivl
sbb
jmp
jno
push
jle
push
lds
mov
in
outsl
addr16
pop
pop
out
sub
jno
and
pop
scas
sti
pushf
fsub
or
and
jae
popf
call
aad
xchg
adc
and
jae
popf
xchg
fildl
sti
sbb
jns
loopne
inc
adc
mov
and
sahf
mov
add
and
enter
fdivr
lds
mov
rcrl
rclb
in
icebp
cmpsl
mov
xchg
pusha
xchg
xor
rorl
push
pop
inc
imul
movsl
xchg
add
fwait
mov
jmp
int
xor
add
cmp
lock
jne
xchg
dec
imul
lahf
xchg
imul
ljmp
jl
mov
in
das
push
dec
mov
adc
adc
sub
pop
scas
fdivs
jl
daa
inc
push
pop
test
lods
loop
push
sbb
repz
xor
nop
inc
xchg
jecxz
pop
add
sti
pop
fistpll
int
fstl
movsb
in
outsb
pop
adc
ds
jmp
and
sbb
xlat
ret
and
fbstp
lret
aaa
test
shl
jecxz
daa
mov
shrl
xchg
inc
and
push
jg
shrb
in
sbb
pop
mov
mov
daa
shll
push
pop
push
out
sbb
leave
xchg
adc
mull
or
test
imul
sbb
popf
push
cld
cmc
cmp
pop
pop
gs
faddp
adc
fistpll
sbb
jb
cli
stos
fldenv
lcall
add
insb
pop
adc
scas
xlat
cmc
xor
xchg
popl
add
cltd
cmp
push
adcb
cmpsb
mov
xor
push
int3
mov
xchg
sbbl
pusha
xchg
xorl
lods
bswap
jge
clc
insb
push
pushf
shr
lods
xchg
push
cltd
fsubr
mov
adc
jmp
mov
nopl
jno
int3
mov
movsb
push
or
push
fmulp
sbb
sub
test
sarl
fldenv
jo
push
sbb
outsb
testl
lahf
sti
pop
enter
stos
mov
xor
mull
popa
iret
notb
xor
dec
inc
mov
dec
jmp
sub
sub
sub
push
shlb
je
ffreep
and
test
je
shlb
cmpsb
adc
es
xor
push
and
dec
push
cwtl
or
jno
lret
rorl
cltd
mov
fsubrl
and
and
xor
jecxz
xchg
addr16
pminub
sarb
test
inc
lods
scas
adcl
lahf
xor
lock
enter
xchg
push
xchg
dec
iret
lea
mov
insb
jns
int
mov
xor
pop
stos
xchg
das
jecxz
fidivrl
fbld
lahf
mov
pop
pop
fcoml
sbb
xchg
loope
scas
cld
neg
stos
and
jo
mov
insl
imull
pop
mov
repz
push
mov
jo
pop
push
fidivl
sub
add
mov
xchg
mov
int
lret
lret
adc
stos
enter
pop
sub
in
pop
movsb
fildl
adc
int
mov
in
jne
arpl
aam
cmp
shrb
xchg
mov
sti
insl
mov
mov
rorb
imul
es
or
mov
mov
stc
jg
pop
aaa
inc
mov
mov
and
mov
shlb
sbb
sahf
les
xor
push
pop
daa
pusha
xchg
hlt
adcb
xchg
ja
shll
cli
mov
shr
notb
mov
mulb
icebp
mov
pushf
or
jmp
in
es
ds
outsb
inc
arpl
cmpsb
mov
jo
popa
cmpsl
jne
stc
in
int3
jp
dec
dec
and
jmp
mov
in
cld
adc
outsb
test
cmp
sahf
push
mov
insb
xchg
jns
js
pop
jne
and
int3
mov
sahf
fbstp
stc
mov
jmp
push
shlb
js
xor
mov
sub
or
cmpb
idivl
xor
push
ret
pop
pop
into
lock
push
insl
pop
inc
mov
jb
lret
mov
cmc
sub
cltd
rolb
mov
mov
test
cld
cmp
leave
lock
loopne
sub
dec
out
mov
loope
push
cmpsb
fdivrl
cltd
loope
sbb
int
sbb
jno
sub
cmc
loope
pop
rcll
dec
lahf
xor
ret
sub
dec
or
cmp
jl
push
pop
mov
and
adc
or
call
movsb
mov
dec
mov
scas
xor
repz
or
add
arpl
test
push
or
sar
lods
sub
cmp
out
inc
jl
lock
or
out
sub
jb
xor
xchg
jmp
cltd
dec
insb
jmp
sub
pop
cli
nop
fistl
mov
inc
lahf
sub
or
ror
sbb
dec
and
lods
add
hlt
loope
adc
ret
mov
das
fwait
sbb
aad
outsl
push
mov
sarl
lea
mov
movsl
mov
leave
and
ret
sbb
sbbb
outsl
mov
mov
dec
pop
xor
sbb
mov
push
push
push
das
in
mov
repz
inc
mov
lret
mov
test
or
rclb
mov
pop
xlat
daa
stos
mov
pop
mov
inc
push
mov
sarb
mov
shrl
lret
xchg
call
lods
cmp
pusha
mov
xchg
mov
mov
mov
mov
jmp
mov
add
push
inc
loopne
ror
outsl
es
addr16
fidivs
push
jo
ret
pop
push
xor
ss
adc
sbb
das
loopne
adc
sbb
test
aaa
jle
jnp
push
dec
leave
mov
push
popf
adc
js
sbb
subb
shl
pop
rorl
movsb
in
jmp
jg,pt
rcpps
and
jg
test
roll
in
pop
sbb
jne
mov
and
lods
pop
sarb
add
xchg
or
insb
xchg
xor
movsl
sub
test
loop
jl
xor
cli
addb
cmp
ret
jb
fisubrs
inc
test
xor
shlb
scas
add
pusha
and
xor
mov
mov
ret
jl
dec
xchg
fnstenv
or
std
sub
jae
pop
pushf
sahf
lods
xor
sarl
aas
stos
jbe
add
lods
inc
and
push
or
jno
mov
rorb
cmp
cli
inc
ret
mov
xlat
mov
inc
outsl
test
divb
rorb
stc
push
icebp
stos
dec
pop
daa
test
push
and
and
mov
jmp
inc
popf
test
dec
inc
rorl
je
push
out
pushf
lock
dec
xor
loopne
jecxz
scas
inc
mov
sbb
lahf
clc
sub
push
scas
add
jnp
mov
in
xchg
mov
add
adc
jge
iret
and
xchg
and
sub
shlb
mov
add
xchg
fcomps
cltd
push
callw
and
idivl
and
xor
push
sti
jns
adc
std
cmp
pop
add
mov
cmp
popf
sub
out
and
mov
cltd
popf
and
mov
xchg
imul
sub
mov
test
insl
and
dec
jge
ret
xchg
cli
xchg
pop
and
fwait
shr
repnz
bound
mov
cwtl
aaa
and
repz
mov
inc
int3
in
idivl
pop
or
mov
cmp
fs
xchg
pushf
sub
ret
je
adc
inc
data16
jno
inc
lods
fistpll
mov
adc
pop
lret
js
lock
fcomps
xchg
xchg
push
and
cltd
sbb
dec
pop
out
test
or
subb
stos
xchg
jb
mov
cmpsb
pushf
jnp
push
les
stos
in
jns
pop
pushf
pop
inc
scas
scas
sahf
mov
js
stos
imul
and
add
pop
aam
clc
sub
push
in
in
or
cmp
jp
enter
mov
xchg
pop
in
insl
add
pop
pop
and
and
mov
adc
pop
out
mov
push
or
mov
shlb
fcomi
fidivs
sub
out
js
jl
push
test
aaa
adc
test
cli
ljmp
pop
ljmp
xorb
nop
loope
loop
sbb
movsl
mov
adc
dec
dec
and
or
leave
es
sbb
jae
int3
lods
lahf
adc
out
test
cli
cmpsl
push
out
stos
mov
or
xor
js
lock
and
push
pop
jb
pop
jae
test
pop
sahf
mov
mov
into
jge
lret
rorl
mov
adc
repz
mov
mov
adc
fcomps
addr16
adc
xchg
rcrb
daa
mov
pop
roll
add
insb
mov
shlb
movsl
adc
loopne
xchg
ds
and
add
imulb
sub
mov
mov
mov
cmp
loop
jns
aas
mov
loop
loope
imul
xor
push
xchg
lcall
inc
adc
sub
xor
out
test
jge
add
xor
ficompl
add
outsb
adc
push
mov
aas
or
dec
fdivrl
pop
pop
mov
hlt
incb
paddusw
jg
xchg
cmpsb
imul
cmpb
sub
dec
inc
cmp
addr16
jg
in
or
xchg
push
shll
lcall
lds
inc
jbe
jle
or
jecxz
inc
adc
push
xchg
pop
pop
add
arpl
sbb
push
mov
adc
into
cwtl
xchg
sbb
add
pop
outsb
cmp
dec
ret
ret
test
hlt
xor
cmpsb
mov
pushf
mov
add
mov
push
cmpsl
pop
into
mov
xchg
loopne
lock
into
leave
pop
cli
or
js
movsb
decb
lods
pop
push
mov
and
fs
stos
push
add
sub
in
rcll
pop
int
adc
dec
dec
mov
out
push
out
arpl
xchg
stos
test
movsl
jne
jnp
test
int3
jl
jnp
mov
mov
fidivl
arpl
push
pusha
fisubrs
adcl
sti
out
test
std
sub
cli
clc
mov
iret
push
pop
pop
pusha
sbb
imul
iret
test
xchg
mov
in
fs
add
mov
dec
pop
insl
jg
sarl
push
xchg
dec
orb
std
fadds
pop
popa
and
adc
js
rcrb
shrb
xchg
adc
add
add
in
mov
fidivs
adc
aad
jmp
fstps
cli
xchg
adc
dec
ds
sub
push
inc
mov
xlat
test
adc
ljmp
scas
icebp
addr16
jl
int3
jmp
popa
jmp
mov
cs
sarl
adc
mov
ficoms
add
push
sub
mov
inc
pushf
mov
aad
aaa
mov
jge
rcrb
lahf
lock
xor
icebp
push
push
xchg
mov
xchg
mov
pop
jb
fstps
xor
mov
fmull
or
imul
imul
adc
push
mov
fsubr
fucomi
lret
aam
scas
pop
and
adcl
pushf
mov
inc
xchg
dec
repz
or
mov
jo
mov
and
pop
loopne
nop
sti
xchg
mov
mov
and
or
lcall
push
mov
loopne
push
add
insb
js
jle
jmp
test
test
rclb
data16
sar
cmp
imul
mov
mov
or
lcall
add
adc
rorl
cmp
sti
lret
loop
xor
sub
cmp
and
fsubrs
idivl
sub
out
xchg
pop
arpl
stos
inc
pop
xlat
pop
sub
mov
xor
imul
sarl
outsl
xor
adc
daa
je
push
in
roll
xor
mov
or
jbe
lcall
testb
imul
sbb
xchg
pop
pop
lret
adcb
aas
loope
adc
dec
lods
jg
repz
cmc
sbb
dec
stos
mov
dec
cs
pop
or
stos
sub
adc
dec
daa
das
adc
in
cmpl
xchg
sub
int
int
mov
add
sub
push
inc
fs
call
rol
dec
mov
inc
inc
insb
cld
xchg
inc
jmp
notl
push
and
push
lahf
dec
xchg
pop
sahf
xlat
sti
xchg
xor
mov
sub
lock
dec
in
mov
jbe
arpl
jno
lods
inc
testb
jo
loopne
movsb
pop
test
and
inc
cwtl
out
fsubrs
lahf
and
adc
xchg
mov
dec
aad
cmp
bound
push
fimull
dec
inc
jge
jae
js
mov
lods
mov
cmp
xchg
test
jb
sbbb
in
mov
push
sahf
add
pop
adc
fmulp
stc
and
push
popa
loop
add
nop
push
out
out
cmp
outsb
inc
test
xchg
sub
je
lahf
adc
push
fldcw
add
shlb
xorb
rorb
push
cmp
sub
sub
sbbl
push
sub
jo
cltd
mov
mov
cmp
stc
adc
and
push
bound
pop
mov
out
push
push
aas
pushl
xor
mov
aaa
jne
pop
pop
adc
ss
and
fistl
push
inc
xor
in
or
movsl
mov
xor
iret
sti
sub
lahf
lea
dec
aaa
movsb
fnstsw
xchg
fsubs
ja
ficoms
and
outsb
fadd
or
movb
fnop
adc
icebp
mov
sbb
mov
nop
xchg
push
fistl
mov
ud0
xor
push
roll
mov
jmp
and
sub
inc
xchg
fld
clc
dec
xlat
mov
xchg
out
pop
xchg
out
pusha
divb
pusha
cmc
outsl
jl
ret
mov
aas
int3
loope
sub
out
pusha
inc
xor
jne
push
mov
loope
test
jno
dec
adc
mov
sbb
and
xchg
outsb
out
push
cmp
xchg
xchg
push
push
sub
jb
insb
icebp
ret
rclb
data16
scas
test
mov
in
jle
cmpsl
push
aas
fcoml
arpl
lret
inc
xor
scas
lock
xor
mov
and
jno
mov
sbb
sbb
sub
mov
cmpsl
cmp
push
dec
sbb
in
pushf
lock
divb
pop
in
jl
daa
test
negb
das
es
push
xor
jnp
mov
das
xor
insb
movsl
fwait
sarl
cmp
cmpsb
dec
pop
jo
inc
push
enter
clc
jmp
sbb
repnz
jae
icebp
shl
call
lds
shlb
adc
inc
insl
lahf
jge
test
inc
out
imul
mov
inc
scas
roll
jne
and
scas
jg
xchg
bound
push
dec
jp
inc
xchg
mov
push
mov
or
mov
imul
je
std
std
shrb
xchg
lea
ds
fnstsw
mov
dec
jge
test
stos
js
icebp
mov
mov
inc
test
arpl
mov
cmp
imul
or
mov
fnsave
cmpsb
fisttpl
pop
jge
flds
jge
daa
cmc
mov
ja
lret
test
push
push
cmp
xchg
xor
js
incl
mov
or
jmp
push
scas
shll
xchg
jo
jp
mov
mov
out
pop
dec
adc
sub
pop
jbe
jecxz
xchg
pop
and
mov
inc
push
sbb
or
add
ret
push
fs
xlat
inc
je
scas
imul
lcall
and
test
inc
std
aad
add
clc
dec
xchg
xchg
loop
push
repnz
sub
inc
lock
out
cmpsl
push
jmp
scas
ds
dec
mov
pop
mov
cli
outsl
lahf
into
mov
iret
and
xchg
xchg
inc
or
xchg
jle
dec
push
push
push
sti
cwtl
fxch
je
fs
lock
pop
xor
cmp
popa
mov
pop
cmp
lcall
xchg
sahf
repnz
mov
xor
lods
cmp
jne
push
dec
and
jnp
xor
sbb
call
clc
mov
jbe
jge
mov
test
pop
sub
push
mov
lcall
or
test
sub
push
repz
das
dec
pop
and
sarl
or
cld
fidivrs
push
pop
rorb
pop
lock
push
cmc
xor
sbb
jb
orb
inc
je
je
mov
lret
lea
jo
mov
inc
xchg
xchg
addl
sbb
cmpsb
jns
fdivrl
loop
bnd
xchg
aam
in
mov
cltd
pop
dec
sbb
mov
sbb
push
imull
cwtl
add
mov
pop
xchg
lcall
addr16
mov
lret
xor
xchg
cmc
adc
rcrb
sysexit
cmp
lret
out
int3
lods
sub
jmp
sbb
lahf
loop
inc
lcall
shll
mov
mov
mov
sbb
icebp
ss
cmp
or
or
repnz
arpl
imull
lret
push
clc
icebp
sbb
mov
addr16
cmp
and
cld
adc
sbb
pop
lods
fldt
jecxz
cmp
cmpl
cwtl
dec
cld
out
mov
cmp
dec
xchg
cmp
fldt
test
xchg
lret
jg
outsl
repnz
inc
mov
mov
hlt
ss
xor
ret
push
lret
xor
shrl
jnp
mov
cmpl
mov
pushf
sub
jne
sti
dec
loopne
or
sbb
imul
mov
loope
jp
addb
test
fwait
out
dec
mov
jl
movsl
add
int
fnstcw
dec
out
mov
test
enter
lahf
in
cwtl
das
int
fcoml
loopne
push
adc
std
xchg
nop
sbb
xchg
arpl
bound
push
sbb
pop
push
fdivrs
adcl
out
cmp
aad
insl
mov
mov
mov
and
loope
scas
add
xor
sbb
lahf
and
fadds
mov
adcl
add
and
pop
pushf
dec
xchg
or
or
pop
andb
pop
push
mov
and
addl
adc
dec
and
addr16
icebp
dec
into
out
loop
in
jecxz
mov
arpl
push
xlat
mov
lahf
fsubs
inc
sbb
xlat
dec
xlat
pop
mov
push
push
xor
pop
js
mov
push
popa
cli
or
rclb
fnstcw
mov
jnp
out
je
jmp
xchg
sti
xor
pop
stos
push
pop
xchg
dec
jbe
cmp
shrb
stc
sahf
filds
lret
pusha
and
out
mov
dec
mov
ss
push
stos
xorl
mov
scas
hlt
repnz
cwtl
mov
push
in
inc
leave
or
xor
sbb
shrb
jge
push
ret
bound
pushf
xchg
nop
xor
jns
inc
mulb
xchg
mov
ss
shll
pop
ret
sub
je
test
mov
aad
sbb
or
insb
and
or
push
xchg
out
push
cmp
scas
out
ja
call
cmp
or
sub
push
das
pop
and
xchg
test
adcl
mov
shl
fsubl
stos
popf
xchg
int
imul
jnp
lcall
jo
test
xchg
data16
pop
sbb
std
mov
push
mov
cmp
int3
inc
dec
inc
and
pop
dec
out
mov
jbe
out
cs
mov
fxch
scas
cmp
in
adc
imul
popf
loop
in
mov
imul
aad
cmp
mov
lret
pop
and
mov
and
jmp
pop
xor
mov
or
pop
sub
nop
push
or
std
loope
stos
inc
cli
rorl
je
dec
pop
int3
mov
pop
xor
fdivr
bound
adc
sbb
cltd
aam
fsubl
inc
cwtl
cmp
xchg
inc
lret
lahf
data16
lahf
mov
ds
out
sbbl
stos
xchg
mov
pop
rolb
push
in
pusha
nop
gs
cmpsb
sbb
push
push
sahf
call
dec
inc
dec
scas
push
push
enter
mov
push
push
mov
lods
mov
and
adc
gs
push
sti
testl
outsl
dec
in
outsb
call
push
dec
test
sbb
inc
fnstcw
mov
adc
mov
loopne
pusha
roll
xorb
xchg
cs
jno
xchg
cmp
out
nop
test
test
adc
dec
jns
add
push
inc
add
movsb
fwait
cmp
fists
mov
pop
push
adc
or
in
sti
pop
test
rcr
loopne
push
outsl
out
nop
mov
sub
and
jmp
mov
in
xor
push
test
test
shrl
jne
xchg
dec
test
jae
or
fadds
daa
cmp
mov
adc
bound
xchg
test
iret
repnz
xchg
and
sahf
and
sub
mov
add
cmp
add
jmp
sbb
push
test
xchg
arpl
inc
cmp
mov
iret
movsb
cld
dec
sbb
inc
loope
push
pop
pop
add
lds
adc
adc
repnz
out
xchg
and
mov
or
sub
stos
outsl
jg
scas
push
js
lds
push
cmp
fstps
js
pusha
push
lock
fnsave
and
js
dec
sti
fdivrl
or
jne
cmpb
pop
cld
xor
ficoms
pop
outsb
fcmovb
lods
push
sti
xchg
ds
sbb
xor
addr16
call
push
cld
lret
jmp
movsl
pop
jne
dec
xchg
cmp
add
sahf
adc
jl
sti
xchg
sbb
mov
les
pusha
jne
shl
sbb
mull
xchg
in
xchg
pop
stos
insb
inc
add
lahf
push
inc
inc
jp
and
and
roll
inc
bound
icebp
ds
les
aaa
xor
lock
xchg
mov
sbb
je
push
mov
xor
shl
aaa
adc
cmp
dec
gs
cmp
in
sbb
insb
cmpsb
cmp
adc
aas
popa
sahf
mov
hlt
movsl
stc
jecxz
push
adc
cmp
ret
fsubrl
mov
sti
pusha
xchg
leave
sub
sub
inc
cli
das
divl
jbe
pop
xchg
add
cli
inc
insl
cmp
jo
xchg
add
sbb
sbb
pop
or
xor
testl
add
pop
or
fldl
pop
rcrl
dec
and
inc
xchg
jnp
sbb
mov
frstor
loope
add
ljmp
ja
jge
and
loop
mov
popa
mov
adc
addl
xor
rcrl
in
popf
push
fcoml
or
stos
mov
push
mov
sub
movsl
stos
sub
lcall
enter
jg
ret
pop
xchg
push
mov
ret
cmp
sub
rcr
clc
inc
dec
fistps
lea
repz
xor
mov
push
push
pop
jl
sarb
mov
iret
mov
cmpsb
daa
and
push
cmp
push
cmp
and
repnz
icebp
sarb
iret
mov
inc
mov
mov
ficoml
call
stc
jl
or
cmp
call
popa
adc
or
add
lods
adc
add
mov
sbb
inc
push
sbb
mov
jp
adc
cwtl
mov
mov
mov
add
leave
and
jno
push
dec
cmp
pop
add
and
in
jns
addr16
lea
dec
into
gs
jns
and
push
ja
xor
stos
iret
and
sbb
popf
addb
add
mov
mov
and
aas
or
dec
outsb
lret
iret
jle
mov
test
sub
mov
cli
xor
movsb
fildl
dec
es
sahf
les
lret
leave
movsb
push
and
fsubrl
lahf
push
add
push
addl
test
mov
iret
sbb
and
fsubrl
aas
cmpsl
or
sti
dec
cmp
pop
cs
iret
xchg
dec
push
mov
sub
int3
addb
add
out
push
sbb
push
outsl
into
dec
lret
repnz
push
into
test
xchg
or
jle
lds
stos
jno
incb
adc
pop
jo
clc
sarl
jmp
andl
sub
jp
or
testb
dec
std
jl
cmp
and
popf
add
add
and
or
ret
es
mov
push
jbe
jo
js
insl
sub
xchg
enter
clc
sub
pop
mov
xor
sbb
pop
dec
push
xchg
in
imul
fwait
rorb
add
aam
es
loopne
fidivl
mov
sahf
xor
fcoml
add
arpl
bts
shll
mov
ficoml
mov
mov
loope
adc
dec
pop
insl
test
mov
nop
cmpsl
sahf
cmp
rorb
xor
inc
andl
sub
int
loop
addr16
outsl
mov
mov
fistl
mov
cmc
inc
mov
fisttps
jnp
mov
cwtl
mov
sub
loop
daa
lret
xchg
stos
push
mov
push
and
pop
rcll
add
repnz
nop
and
adc
mov
jbe
outsb
add
pop
jae
int3
push
inc
jnp
lret
cwtl
mov
mov
jb
sahf
mov
push
and
push
je
pop
push
pop
jns
lret
add
dec
icebp
add
inc
popa
push
push
push
stc
sarb
loope
subl
js
aam
lods
pop
mov
pop
inc
rcl
ret
inc
je
push
xor
cmp
into
das
inc
push
inc
je
pop
pusha
lods
andl
or
cmpsb
mov
jg
cmp
xchg
mov
pusha
adc
and
dec
fs
fucom
sub
pop
mov
sahf
pop
jno
cmpsb
in
push
push
mov
push
fstpt
jmp
out
test
movsb
out
sub
into
test
sbb
adc
sbb
jmp
adc
sahf
js
mov
bound
add
int
inc
inc
mov
sbb
jae
mov
mov
lret
sbb
dec
imul
out
inc
pop
cmp
clc
fidivl
lcall
rclb
add
push
mov
jge
stos
sbb
xor
prefetchwt1
into
jg
xor
loope
and
inc
push
es
push
dec
dec
loop
cld
and
mov
shl
adc
mov
or
test
mov
mov
dec
loop
inc
popa
ds
fidivl
mov
cmpsb
push
mov
test
fidivl
es
mov
test
popf
in
mov
arpl
test
and
fwait
adcl
and
jl
into
out
xchg
imul
push
loop
xchg
mov
out
push
lcall
xchg
inc
pushf
inc
mov
xchg
or
xchg
aad
push
lret
adc
enter
jg
loopne
mov
sub
inc
inc
int3
xor
add
rol
jb
mov
xor
mov
lea
popf
js
sbb
and
cmpb
push
xor
add
ja
add
rorb
dec
into
and
cmp
inc
mov
sub
push
enter
popf
jno
movsl
and
dec
mov
pop
call
and
pop
test
xorl
cmc
add
test
ret
adc
cs
xchg
test
stos
mov
pop
xchg
subb
mov
mov
xchg
mov
xchg
sub
insl
mov
push
loope
inc
inc
or
repnz
mov
lahf
mov
xchg
adc
mov
dec
inc
shl
bound
or
call
adc
scas
add
or
mov
stos
out
cltd
clc
icebp
hlt
ret
nop
in
or
je
out
mov
sbb
mov
outsl
leave
aam
push
rol
mov
lar
divb
hlt
js
dec
rol
pop
dec
mov
fstpl
push
dec
leave
dec
add
mov
xchg
mov
imul
popf
mov
imul
arpl
push
pop
cli
sub
sti
lcall
xchg
push
bound
sbb
daa
xchg
fldln2
aam
dec
cltd
mov
test
sarb
inc
rcr
inc
xor
call
scas
add
js
mov
inc
call
sub
sub
shlb
xor
mov
aam
xchg
push
pop
cmp
outsb
jns
repz
sub
mov
clc
push
push
adc
repnz
push
add
outsb
push
outsl
icebp
mov
xchg
dec
inc
faddl
pop
mov
mov
pop
push
sub
lahf
add
lret
pusha
cwtl
and
adc
cmp
push
dec
cmp
in
loope
stos
inc
xor
into
jp
stc
xchg
dec
je
neg
aad
mov
pushf
or
int3
mov
dec
jle
push
jp
cmp
mov
repnz
jne
and
mov
cmp
jp
mov
out
cs
and
jmp
div
mov
cwtl
scas
xor
test
adc
incl
lahf
ja
pop
inc
push
inc
insb
xchg
push
or
jg
or
arpl
jmp
lret
jmp
xor
mov
cmp
jnp
repz
loop
int
pop
call
and
shr
mov
mov
inc
dec
push
test
jge
adcl
xor
in
xchg
int3
push
inc
cmpsb
sahf
int3
adc
fs
out
outsb
dec
cmp
xor
xchg
mov
push
ljmp
stos
and
ficoml
jmp
sub
or
sbb
or
push
rcll
xchg
sbb
jae
ds
jecxz
lds
ret
int3
rclb
pop
fwait
add
cli
pop
and
sbb
insb
out
mov
mov
ficoms
pop
cmpsb
subl
xor
in
adc
xchg
jno
rep
mov
jge
inc
loope
mov
push
fisttpll
lcall
mov
insl
adc
push
pop
iret
adc
sub
add
mov
dec
mov
jbe
cmpsl
push
int3
pop
popa
inc
push
adc
fisttpll
loope
push
in
inc
out
add
pop
push
dec
or
add
int3
or
adcb
fidivl
stc
sbb
push
fldt
dec
jae
xchg
jbe
pop
jb
mov
mov
cmp
add
jns
xchg
xor
dec
adc
insb
pusha
mov
sub
pushf
sarl
or
pop
ret
filds
or
dec
add
inc
lret
gs
or
clc
xor
scas
add
imul
sub
test
into
call
pushf
ss
dec
insb
loopne
mov
add
lret
mov
push
out
shll
shll
fldenv
sbb
sbbb
dec
mov
mov
mov
push
xchg
into
mov
cmp
ds
xchg
inc
fldt
xor
test
cmpsl
in
or
ja
rolb
insl
pop
out
test
stc
lock
adc
test
mov
fsubl
bound
lock
mov
mov
push
fistl
push
dec
lds
xor
cli
jmp
cmpsl
mov
out
jbe
lods
pop
and
inc
pushf
mov
cld
xor
pop
leave
cmp
push
inc
sbb
add
sti
or
cmpsb
lock
jecxz
push
mov
xor
push
mov
add
push
or
adc
mov
scas
out
sarb
outsl
inc
jg
and
sbb
pop
lahf
pushf
popa
insl
jb
or
lods
or
and
inc
cli
mov
fcoms
or
adc
push
leave
bound
mov
inc
aas
pop
lds
dec
mov
roll
xor
ljmp
mov
divb
add
shrl
out
lods
mov
popa
mov
mov
jl
sahf
mov
or
xchg
ja
loop
outsl
ja
mov
dec
cmp
inc
sub
inc
das
pop
inc
mov
pop
mov
jbe
mov
outsb
mov
sub
xorb
jne
mov
outsb
cmp
adc
dec
insl
cwtl
or
fs
call
pop
inc
cs
mov
cmc
cmp
in
out
ret
sub
or
push
lods
ss
ja
jae
jge
cltd
push
xor
sbb
call
popf
push
mov
shll
inc
hlt
jle
popf
nop
add
dec
adcb
cmp
call
lret
jge
xchg
and
stos
mov
pop
adc
push
mov
divb
popa
cmpsb
test
jge
mov
mov
or
jg
ljmp
cwtl
xchg
jp
stos
out
imul
push
loope,pt
xor
xchg
mov
cmp
sbb
cltd
mov
cmp
ret
pushf
xchg
out
fildl
jmp
mov
mov
mov
mov
add
jge
xchg
sti
xor
imul
cld
xor
stos
lea
lods
pop
stc
dec
adcb
imul
push
or
mov
push
stos
jmp
fsubl
mov
testb
push
xchg
stos
repz
xor
xchg
and
arpl
xor
subl
mov
mov
rcrl
scas
mov
sub
ja
les
mov
push
and
push
pop
je
gs
popf
push
and
scas
xor
jg
out
adc
fisttpll
ljmp
mov
out
in
fistpl
push
mov
jle
shrl
xor
fcoms
add
jns
jnp
addr16
jg
pminub
mov
mov
adc
and
lock
inc
lea
dec
xor
out
sbb
ss
testl
and
in
rcll
jne
xor
out
arpl
mov
or
sbb
inc
out
mov
mov
repz
nop
data16
mov
or
mov
fs
mov
push
add
ljmp
aaa
insl
add
andb
shl
cmp
mov
fcomip
lcall
adc
inc
jmp
into
mov
outsb
test
adc
sub
sub
fcomps
addb
mov
mov
in
mov
je
insl
fcomps
xchg
andl
arpl
xchg
xchg
pusha
je
shrb
in
out
mov
inc
or
mov
fcmovb
jnp
int3
popa
xlat
es
dec
das
test
sbb
jo
lahf
xor
insl
popa
aad
dec
and
and
lds
xchg
mov
cmpsb
jge
test
mov
pushf
dec
mov
aas
sub
stc
pop
stos
fdivs
sub
mov
dec
popf
add
sbb
bound
fisubl
jnp
popa
stos
lahf
push
xchg
adc
mov
adc
arpl
das
nop
leave
gs
adc
int
stc
popl
mov
out
mov
arpl
push
pop
mov
icebp
mov
push
ficompl
mov
mov
jo
sbb
out
cmp
mov
jae
inc
arpl
push
test
pushf
or
fisubrl
addr16
sti
mov
pusha
in
cmc
jg
sub
fldt
inc
sub
fsubrp
popf
pusha
aas
dec
xchg
fs
push
add
mov
aaa
or
mov
cmp
or
pop
daa
mov
mov
sbb
lds
mov
test
shll
icebp
test
mulb
jno
ss
xor
sbb
test
sbb
es
jo
inc
lods
out
sahf
in
xor
jno
es
repz
bound
dec
lds
cmpsb
pop
xor
fistl
in
pusha
inc
roll
mov
sahf
in
or
mov
movb
call
push
das
js
add
adc
rol
mov
stc
inc
sub
ja
sbb
inc
push
les
jne
int
inc
ret
pop
cmpl
icebp
nop
cmp
mov
scas
addr16
call
in
js
repnz
mov
mov
or
or
mov
pop
inc
jbe
ret
int3
xchg
sbb
adc
adc
or
xchg
cmpsl
repnz
sbb
xor
lret
orl
inc
lods
add
add
xchg
add
mov
mov
mov
outsb
mov
jge
push
pop
xchg
mov
or
xlat
aad
js
adc
push
daa
mov
daa
adc
jns
or
xor
or
and
ud0
out
popa
jmp
push
stc
addl
clc
mov
or
ret
or
inc
or
xor
iret
xchg
data16
mov
lds
push
sbb
cmpsl
leave
mov
or
pop
adc
cmc
ss
jl
sbb
loopne
pop
push
popf
or
inc
loope
cmc
sub
mov
mov
in
jnp
lds
sbb
cmp
adc
mov
aam
stos
mov
mov
out
mov
adc
mov
shr
mov
cmp
xchg
mov
mov
loop
fwait
mov
lret
push
aas
jne
stos
push
lock
fstl
or
insl
fldenv
pop
imul
sub
push
sub
test
mov
jnp
jnp
xor
adc
mov
test
lock
or
hlt
adc
xor
xchg
subl
andl
aas
mov
xor
mov
data16
mov
es
ss
scas
stos
dec
and
or
pusha
inc
outsl
dec
xchg
das
inc
xor
leave
fs
mov
fidivl
xchg
sbb
fistps
adc
in
popa
add
in
pop
imull
sahf
sub
sub
das
in
adcl
sbb
mov
cltd
jne
pop
stc
rorl
insb
adc
movsl
addr16
popa
insl
shll
in
ss
inc
add
pop
fs
insl
pop
inc
es
push
enter
out
push
icebp
sahf
push
or
or
jb
outsb
addr16
fistpl
icebp
pushf
fadds
fistps
rorl
int
xchg
mov
mov
cmp
aaa
lds
xor
shrl
inc
mov
xchg
push
dec
arpl
push
out
xor
test
rcrl
sub
push
inc
pop
mov
jp
repnz
pop
filds
lea
sbb
je
lock
aad
clc
es
arpl
fcomps
aad
imul
push
ss
cmpb
int3
dec
or
lds
sub
jle
movsb
jg
pop
loope
ss
xor
lock
in
mov
mov
xor
in
fdivrl
call
mov
push
inc
mul
push
iret
xor
andb
sbb
adc
add
xchg
sbb
sbb
push
dec
ret
inc
in
or
xchg
push
cmp
jns
mov
xchg
inc
dec
add
adc
and
bound
or
xchg
inc
loope
imul
jmp
std
divb
push
movsl
movsb
lods
shl
cmovbe
dec
repz
cwtl
push
sub
dec
adc
loop
outsl
jae
scas
movsb
cs
cmp
sbb
mov
lret
jmp
add
jmp
repz
imull
mov
sahf
out
mov
ret
stc
mov
fcmovnb
and
push
dec
inc
sbb
lret
repz
adc
ret
repz
jo
leave
mov
ljmp
add
mov
mov
rorb
xor
jl
adc
adc
add
cmp
sbb
scas
inc
pop
in
stos
push
imul
dec
inc
xchg
imul
cld
mov
int
out
fs
leave
xchg
xchg
out
lea
das
stos
insl
ss
sub
cwtl
sti
and
pop
jge
imul
mov
js
mov
push
mov
enter
adc
std
aam
sub
cwtl
out
pop
pop
icebp
inc
jl
push
ljmp
dec
popf
jbe
cmp
outsl
sub
icebp
pusha
dec
adc
and
pop
loop
sub
sub
cmp
inc
pop
and
and
sub
sbb
mov
das
mov
fsubrp
mov
insl
push
ja
daa
xor
pop
mov
xor
xchg
aaa
push
sub
adc
hlt
lret
loopne
push
call
sahf
xchg
jge
lcall
add
xchg
roll
push
rorb
incl
stos
out
add
mov
lahf
cltd
pop
fistl
jnp
cmp
pop
push
test
sub
aas
ds
xor
dec
test
lahf
setbe
sub
mov
out
add
fcmovbe
pop
loop
stos
shlb
test
mov
lock
jp
jl
pop
jecxz
sub
cmpsl
cmp
sti
sub
push
icebp
jae
testb
cmpsl
out
mov
xchg
xor
sbb
and
pop
push
aaa
dec
mov
lods
out
scas
add
in
in
and
dec
nop
and
add
sbb
mov
out
sbb
inc
out
cmp
add
pop
xor
pop
xlat
dec
aad
push
enter
pop
int
in
push
xchg
std
cmp
or
movsb
inc
aas
jnp
push
jns
lahf
jg
mov
and
sti
push
rol
and
jle
leave
ljmp
lods
aas
pop
add
test
sub
fsubrs
clc
xor
pop
inc
and
cmpsl
imulb
mov
cld
aam
mov
testb
sbb
pop
pop
aad
xor
out
mov
push
xchg
rcrl
jg
shll
sub
fisubl
sub
sbb
outsb
mov
dec
stc
shlb
jns
mov
mov
adc
inc
cwtl
mov
or
in
cmc
jbe
mov
mov
mov
xchg
jle
into
adc
aad
inc
shrb
repz
jne
out
pusha
jge
or
mov
dec
fs
mov
cmp
loopne
push
or
push
into
mov
and
adc
shl
out
movsl
xchg
and
cltd
dec
sahf
and
popa
xor
dec
lods
cmp
fstps
sub
out
add
mov
out
or
sub
das
mov
rolb
inc
cmpsb
jp
jl
cwtl
xor
inc
jns
inc
mov
aad
shl
mov
ljmp
mov
ds
jmp
in
je
dec
neg
jb
xchg
mov
inc
mov
pop
mov
sbb
sbb
std
or
cld
insb
sub
out
jo
dec
cmpsb
imul
stos
adc
mov
xchg
ret
mov
ds
popa
mov
clc
push
or
jbe
lret
cwtl
mov
test
cmpsl
int3
sbb
pusha
lea
xor
sti
clc
jae
cs
mov
leave
loopne
jbe
int
mov
sahf
jnp
inc
xchg
push
xor
lea
pop
test
mov
nop
out
adc
and
and
lret
fs
lea
xchg
inc
and
dec
or
pop
xor
mov
fwait
cmp
sub
push
shlb
jmp
mov
repz
xor
cmp
popa
test
inc
add
js
cmc
mov
mov
push
inc
rcl
inc
sub
sbb
sti
aad
adc
sahf
stc
mov
or
test
loop
xchg
cwtl
iret
pop
mov
mov
lods
shrl
shl
cmp
addr16
and
insl
sbb
iret
sbb
addr16
in
mov
js
mov
inc
cli
sti
enter
jo
xor
jge
cli
add
mov
addl
icebp
dec
movsb
sbb
adc
insb
and
mov
mov
push
mov
or
push
or
dec
outsl
xchg
add
insb
mov
scas
add
lcall
sbb
and
ret
and
inc
add
mov
jl
mov
int3
sbb
into
popf
test
adc
rcll
cli
mov
bound
cmp
cmp
rolb
test
imul
aad
les
mov
xchg
dec
jp
lods
pop
mov
scas
in
jbe
mov
std
mov
scas
dec
dec
fidivs
sub
cmpsb
loope
mov
and
divb
fidivl
stos
cmc
add
cmp
icebp
lahf
xor
inc
and
push
jle
xchg
inc
lea
stc
xchg
mov
insl
jbe
jo,pn
mov
fstp
pop
sbb
stos
nop
push
add
jmp
and
cld
insl
jge
outsl
mov
loop
das
in
xchg
mov
outsb
into
in
inc
push
push
int
test
addr16
mov
dec
jnp
mov
jns
push
sbb
jno
add
lret
imul
push
jge
push
cmc
lret
pop
fidivrs
in
sub
xchg
pusha
xor
out
pop
push
adc
loop
push
dec
js
add
adc
data16
inc
insl
xchg
push
mov
jne
jp
xchg
pop
flds
inc
test
dec
enter
mov
adc
push
and
adc
inc
rcrb
shll
pop
arpl
or
mov
outsb
inc
minps
or
clc
push
mull
mov
push
lock
pop
sbb
pop
sub
lods
mov
ljmp
pop
sbb
and
jecxz
pop
ja
cmovo
es
lock
jae
cli
inc
and
adc
negl
mov
sarb
adcb
movsl
das
adc
nop
call
inc
xor
jae
es
std
in
loope
lcall
es
into
mov
xchg
es
jge
cmp
mov
arpl
dec
outsb
mov
sbb
scas
or
int
xor
xor
push
jl
incl
xlat
aam
jle
scas
movsl
adc
inc
xchg
mov
push
sub
cmp
sbb
xchg
mov
sbb
stos
push
mov
mov
xorl
fsubrp
sbb
daa
adc
jp
pop
negl
jnp
jge
sub
sub
outsl
push
ja
shll
int3
sub
xor
stc
push
push
mov
jmp
jle
jmp
aaa
repz
pushl
rcl
inc
lods
pop
rcll
and
jo
fs
icebp
stos
mov
aam
lods
loope
out
push
sbb
pop
loop
sbb
loop
sub
hlt
sbb
push
lods
cmp
xchg
jge
je
cwtl
or
sahf
fstpl
pop
push
adc
cltd
and
jle
ss
les
rclb
push
sub
and
xchg
add
push
mov
pop
dec
ret
pop
mov
adc
pop
fnsave
pop
push
jp
ljmp
bound
pop
nop
mov
push
les
stos
lods
cmp
stos
dec
sub
ret
or
add
xor
vpackuswb
pop
rcl
roll
jns
inc
mov
fldt
in
rorl
ss
lods
dec
xchg
iret
adc
add
into
aad
cltd
fcompl
mov
jno
mov
mov
cmpsl
mov
dec
xor
lcall
mov
insb
pop
leave
or
cmc
cltd
sbb
sub
dec
orb
mov
movsl
xchg
movsl
jp
in
push
dec
call
cmp
loopne
add
shl
push
and
cld
cmpsb
fs
lods
inc
repnz
pop
jb
aam
movsl
fcmovnu
lds
xchg
lret
cwtl
ret
mov
fistpl
jge
inc
jle
lcall
out
in
and
lcall
ds
jp
push
xor
lret
push
pop
or
jge
mov
and
or
push
mov
es
gs
adc
push
test
jne
or
cmp
pop
in
jae
push
rcll
out
or
popf
jbe
or
mov
imul
imul
mov
ljmp
pop
pop
sbb
mov
pop
xchg
loopne
testl
out
subb
lods
lahf
cs
in
sbb
jne
push
gs
push
ds
mov
xor
mov
push
jb
insl
cmpsl
setb
sbb
icebp
or
fmulp
test
or
outsl
cld
imul
mov
dec
pushf
icebp
imull
jns
inc
stos
jbe
inc
add
loope
sahf
sbb
inc
xchg
mov
in
ret
les
mov
scas
ret
repz
xor
iret
inc
adcl
fisttpl
xchg
inc
shlb
inc
ret
out
mov
lods
mov
fs
xor
mov
out
arpl
mov
pop
bound
mov
or
or
ljmp
adc
mov
or
lods
std
outsl
bound
sarb
inc
imul
imul
int
imul
mov
pop
mov
adc
cwtl
xchg
xchg
jnp
ljmp
in
loop
pop
xchg
mov
icebp
xlat
dec
xor
xor
fcom
mov
xchg
hlt
jecxz
jb
add
mov
call
lea
enter
test
jns
fnsave
sbb
imul
and
enter
or
jb
xor
mov
in
mov
dec
cmpsb
and
shlb
std
out
sbb
mov
or
stos
sub
daa
pop
cltd
mov
std
jne
dec
pop
sbb
movsl
dec
or
loopne
xor
scas
outsb
stos
xchg
xor
hlt
aas
shr
cmp
ljmp
inc
cli
jne
push
aam
fsts
xor
enter
dec
popa
rcll
mov
mov
push
sbb
aam
inc
jbe
add
enter
fcompl
add
bound
daa
int
loop
xchg
sub
or
xor
stos
loope
into
add
inc
shlb
sub
aam
cmpsl
clc
fwait
sub
push
add
pop
test
jge
in
xor
adc
xchg
lea
sub
pushf
mov
outsb
xchg
push
xor
test
sbbb
adc
scas
outsl
cmpsb
mov
pop
in
push
xchg
mov
nop
or
ror
cli
xchg
mov
push
aam
lret
jmp
jae
daa
jmp
pop
cmc
jnp
cmp
adc
push
in
clc
aam
aaa
xorb
mov
adc
scas
pusha
ja
pop
jl
mov
mov
xchg
in
inc
jne
or
xchg
lret
xor
sti
inc
or
stos
jp
mov
mov
mov
adc
clc
mov
xchg
outsb
fadd
xchg
mov
adc
ja
jge
stos
mov
pop
roll
das
dec
xchg
movsl
fcoml
dec
jns
push
jecxz
ficoml
lods
sub
insl
leave
addl
addr16
mov
or
add
fsubrp
mov
lea
inc
mov
roll
mov
pushf
push
mov
scas
jns
mov
loope
cmpsb
movsl
add
add
xchg
adc
subl
mov
out
lock
inc
mov
daa
cmpsl
jno
mov
mov
xor
jbe
jbe
mov
lahf
fiadds
sahf
shlb
mov
mov
jae
repz
pop
push
cmp
pop
jg
mov
stos
stc
or
mov
xchg
clc
push
adc
cld
push
orb
inc
mov
or
lahf
aad
rcl
dec
push
xchg
add
ds
sub
out
dec
mov
gs
mov
divb
push
pop
jge
jne
out
dec
mov
mov
xchg
jg
mov
sahf
mov
inc
xchg
dec
jnp
pop
xchg
ss
paddsb
data16
or
jne
rcrl
dec
mov
dec
pop
sahf
xchg
pusha
xchg
mov
ds
xlat
xor
bt
fistpl
fs
mov
lea
adc
mov
push
pusha
push
ret
cmp
test
xchg
jg
std
sbb
iret
cmp
enter
jns
leave
sti
mov
adc
call
xor
fdivs
inc
je
sarb
mov
dec
add
and
mov
jg
daa
add
sbb
stc
outsb
mov
mov
xchg
jle
in
or
jp
xor
cmp
inc
rcl
cmp
or
mov
cmp
ljmp
mov
xorl
loope
lret
dec
xor
or
mov
outsb
shrb
mov
sub
arpl
lahf
lods
loope
dec
aaa
and
cli
mull
ljmp
xchg
std
fsubs
add
das
cmp
fisttpll
xor
stos
sub
in
ret
testl
xlat
push
adc
inc
popf
xorb
lods
daa
mov
out
mov
gs
adc
cltd
movsb
subl
push
int3
mov
scas
sub
sub
lods
dec
mov
cmp
lods
dec
enter
cmp
js
jecxz
sbb
xor
lods
jbe
or
sub
adc
not
xor
stos
jae
dec
test
aad
jge
repz
mov
and
adc
adcb
in
dec
mov
or
sti
mov
mov
add
test
test
in
jb
rol
scas
cs
mov
add
mov
sahf
sbb
push
inc
filds
cmp
shl
pop
stos
sbb
stos
jmp
and
mov
xchg
or
and
and
lahf
push
aad
lret
ja
movsl
mov
mov
push
mov
push
inc
in
dec
dec
add
mov
xchg
mov
out
out
cli
pop
jecxz
loope
hlt
lds
call
stc
cld
sub
or
pop
stos
or
sbb
into
outsl
adc
push
pusha
xor
loopne
xor
mov
daa
test
scas
cmc
or
mov
int3
sbb
loope
sarl
inc
sub
rorl
xchg
fcomi
out
test
out
xlat
push
dec
add
adc
lds
pop
insb
sbb
push
sub
mov
fs
bound
dec
imul
dec
jo
and
jae
pusha
orb
pop
dec
push
leave
add
cmpxchg
rcrl
mov
sub
mov
pop
dec
pop
sub
cmpsl
mov
sti
xchg
fsubs
pop
cmpb
dec
sar
in
pop
mov
jo
jno
or
in
adc
jns
and
cmpl
cmc
cmp
call
sub
out
cmp
inc
cmpb
movsl
and
inc
mov
and
inc
pop
mulb
aaa
xlat
loope
in
shr
cmp
test
aaa
jge
pop
add
jae
outsb
cmp
arpl
inc
test
pop
jno
ret
cmp
in
lods
js
mov
or
in
mov
ljmp
das
xchg
sahf
xchg
jl
pop
mov
xchg
aas
mov
faddl
aaa
leave
fbstp
divl
mov
or
mov
daa
cmc
das
xchg
xchg
bound
mov
fiadds
add
repnz
arpl
pop
xor
adc
push
pop
sbb
lock
pop
xchg
repnz
push
push
outsb
inc
mov
fstps
inc
dec
sbb
push
add
call
popa
mov
imul
mov
subl
cltd
push
adc
mov
adc
repnz
cmp
addb
mov
adc
ret
gs
xchg
aaa
sbb
mul
sbb
jge
out
push
adc
ret
movsb
add
cld
mov
loopne
mov
pop
push
ljmp
out
data16
dec
shll
add
jge
inc
mov
call
out
stos
jns
xchg
push
sub
mov
rcrb
sub
adc
inc
ds
mov
sub
fistps
cmc
dec
hlt
inc
ljmp
pop
inc
mov
mov
std
insb
mov
mov
xor
addr16
fmulp
sbb
mov
inc
push
hlt
test
cmpl
jns
cmpsl
dec
lret
pop
dec
scas
idivb
decb
xchg
aaa
cmpsb
stc
cmpsl
stos
push
mov
shll
adc
aad
fildll
orl
addr16
test
cld
xor
sbb
or
sub
mov
mov
push
mov
mov
ss
rcll
fisubrl
push
mov
xlat
push
sbb
mov
in
cmp
xchg
call
sbb
fsubs
jnp
jb
out
jecxz
rcl
push
dec
jp
dec
insl
push
je
insl
mov
mov
push
insl
js
inc
cmp
cmp
in
fistpl
push
sub
lcall
or
mov
mov
xor
dec
pop
insl
and
xchg
andl
inc
lret
subb
mov
mov
sub
push
jp
fwait
pushf
push
sub
dec
outsb
sbb
pop
stos
movb
pop
pop
xchg
int
pop
test
test
mov
insl
mov
imul
cmc
out
xchg
lret
add
pop
and
imull
pop
jg
ret
jb
cmpsl
and
vcvtpd2psy
sti
push
subl
lret
std
xchg
int3
push
imul
add
xchg
and
push
std
repnz
mov
jmp
test
std
stos
dec
imull
dec
insb
or
in
push
jp
pusha
xor
mov
and
test
arpl
cltd
sbb
scas
pop
imul
lret
add
xor
pop
mov
out
adc
add
mov
outsb
push
push
sbb
or
cwtl
fwait
jle
jb
jne
std
int
imul
adc
cli
xchg
test
scas
das
call
adc
mov
mov
test
dec
lcall
mov
loopne
sti
dec
pop
int
mull
and
sub
ja
mov
stc
ror
jmp
push
push
fisubl
arpl
cld
leave
ss
insb
ljmp
push
in
sti
arpl
jb
scas
mov
in
repz
popa
aam
push
or
xchg
lods
pop
mov
lret
sahf
sbb
enter
add
or
xchg
and
add
int
notb
aad
out
imull
les
cmpsl
jb
test
push
in
cs
xchg
rcrb
adc
pop
push
mov
sub
jg
sbb
mov
or
xor
cmp
pushf
mov
and
or
aaa
sbb
cli
push
incl
lahf
outsl
pop
daa
cmpsb
aad
inc
popw
adc
xor
je
xor
fmul
ja
addr16
jbe
insl
stos
fidivl
adcl
adc
outsb
push
subb
fs
add
cld
inc
fstl
mov
or
jno
pop
arpl
lret
inc
lods
push
cmp
mov
jp
int
movsl
jge
jle
and
rcl
dec
lock
add
sub
or
mov
push
decl
sub
stos
iret
adc
scas
scas
lea
popw
pop
add
adc
cli
sarb
clc
inc
pop
shlb
lret
sbb
inc
ret
add
push
aam
jne
imul
pop
cmp
int3
enter
out
cmpsb
gs
adc
mov
lds
stos
rol
in
mov
mov
push
mov
push
test
shll
adc
sub
cmpsl
cmpsl
roll
jl
into
mov
pop
dec
dec
cmpsl
mov
out
push
jb
push
cmc
arpl
fbld
repz
out
mov
mov
adc
test
push
fisubl
pop
mov
cltd
mov
std
mov
ds
push
stos
or
dec
stos
cltd
push
mov
push
mov
scas
and
inc
jno
xchg
addr16
stos
hlt
hlt
xchg
cmpsb
cmp
mov
or
int3
cli
inc
stos
xchg
or
push
shr
incb
cmp
mov
xor
adc
in
test
cli
cmpb
jmp
cmpl
mov
inc
lret
cmc
xchg
jmp
mov
jo
sub
fmuls
xor
xchg
cmp
sbb
loop
std
mov
stos
adc
xchg
and
gs
dec
sub
lcall
je
test
ja
mov
insl
or
adcb
aaa
cltd
adc
adc
sbb
jae
and
in
cmp
js
sti
xchg
and
push
jno
leave
js
dec
lds
lcall
mov
ja
aaa
lds
cwtl
test
jecxz
aas
test
and
adc
nop
loope
push
cmp
mov
pop
and
outsl
inc
in
adc
pop
cmp
dec
sbb
sahf
sub
dec
pop
ja
jne
inc
int3
stc
mov
dec
xor
in
sub
pop
pop
mov
push
imul
in
jg
testl
stos
lock
adc
xor
mov
add
daa
push
int
cwtl
cwtl
mov
adc
cli
and
sub
fidivs
jge
aam
jg
adc
push
sub
inc
shl
addr16
lahf
xor
mov
xor
in
jb
aas
jl
in
lahf
or
add
mov
inc
lods
cmpb
mov
push
fwait
cmp
loop
push
push
inc
cmpsl
push
jmp
sbb
and
jg
push
pushf
int
aas
test
pop
ret
pop
mov
and
aas
adc
inc
push
pop
pop
push
xchg
lock
fisttpl
lret
adc
xor
mov
dec
xchg
fucomi
mov
jo
push
nop
add
push
mov
inc
adc
xchg
popa
lcall
lret
add
mov
xor
adc
enter
lock
ficomps
add
popa
xchg
add
push
pop
dec
test
ja
pop
mov
push
out
int
cmp
arpl
mov
xchg
fstl
push
stos
push
ja
adc
ja
arpl
mov
xor
sbb
insl
mov
or
add
mov
loopne
jns
mov
lds
jae
lock
int
rcll
imul
lods
cli
dec
cmp
sub
dec
cltd
sbb
pusha
lcall
sbb
lcall
mov
fucomp
loopne
jmp
cmp
sub
lods
imul
pop
ret
cmpsb
xchg
adc
movsl
scas
dec
out
jmp
adc
cltd
or
sbb
push
lret
jmp
push
xor
addr16
and
fucomip
js
stc
mov
stos
rcrb
jle
das
cmp
insl
inc
stc
xlat
inc
adc
and
rclb
mov
subl
xchg
clc
nop
xor
dec
xchg
inc
push
or
popa
inc
rcrb
sub
dec
clc
and
rcll
jb
loopne
xor
sub
and
into
and
jne
dec
fidivs
sbb
sbb
jno
popa
dec
pusha
arpl
add
inc
pusha
lods
xor
ss
pop
dec
pop
inc
mov
adc
loopne
pusha
aaa
mov
add
mov
dec
ljmp
mov
ret
jmp
mov
aaa
sahf
loopne
shr
pop
mov
or
jne
adc
adc
insb
lds
lods
nop
out
aaa
inc
clc
shll
add
inc
mov
add
loopne
in
mov
lea
push
cld
inc
fwait
popf
popf
inc
inc
jge
gs
and
xchg
sbb
ret
mov
test
enter
imul
sbb
adc
lret
bound
cmp
std
call
hlt
decl
fists
nop
xor
sub
dec
in
icebp
loopne
mov
movsl
mov
mov
fsubrl
iret
test
fidivl
loopne
test
ljmp
jge
or
lods
sub
mov
dec
adc
dec
in
inc
andb
xor
cltd
fcmovnb
cmc
sub
popf
mov
adc
insb
inc
js
jecxz
nop
xchg
decb
add
jo,pt
inc
bound
and
fiadds
inc
mov
mov
outsb
xchg
dec
insl
pop
sub
add
enter
jg
out
add
cltd
cs
push
int3
les
iret
push
pop
or
iret
dec
mov
dec
pop
sub
mull
pop
pushf
nop
leave
or
push
mov
pusha
dec
repz
fiadds
push
in
call
jns
xchg
mov
mov
xor
add
cmp
movsl
ljmp
xchg
jmp
clc
stos
mov
out
or
cli
jle
ret
inc
daa
mov
sub
push
mov
dec
adc
mov
pop
inc
iret
int
int
test
push
lcall
jp
test
mov
bound
jmp
xchg
cmp
xchg
or
lds
pop
jns,pt
add
cltd
lahf
sarb
or
popa
test
mov
out
pop
pop
lds
adc
push
les
or
lret
xor
mov
mov
roll
xchg
and
push
dec
inc
fnstcw
cmpsb
fs
orb
add
jg
pop
mov
icebp
movsb
mov
lcall
lahf
mov
out
std
cli
in
cmc
mov
ret
rorl
cli
xor
in
add
insb
das
imull
cmp
lcall
mov
gs
scas
movsl
mov
stc
imul
insb
mov
into
pop
imul
push
rorl
loop
jnp
cmpsb
jge
fsubrs
into
fwait
or
ss
cmp
add
repz
sub
add
pop
pop
push
mov
sub
adc
pushf
pop
adc
aad
sarb
repz
loop
js
lods
adc
imul
cld
aad
bound
xor
push
sub
mov
pop
in
repnz
in
imul
push
xchg
xchg
scas
push
call
push
sub
xor
add
rcll
mov
push
leave
push
cmp
push
cmpb
arpl
and
push
outsb
cld
dec
andb
jecxz
in
jmp
sub
jno
lahf
and
ficompl
loopne
xchg
sahf
inc
std
in
add
jmp
adc
sbb
int
push
add
cmpsb
pop
cli
push
jmp
aaa
je
cmp
sub
sbb
cld
xchg
int3
mov
stos
mov
jns
outsb
cmp
loopne
fists
dec
inc
xchg
dec
sub
bound
ljmp
push
icebp
add
xor
push
mov
movsb
pop
jmp
jne
cmp
jmp
or
lock
pop
mov
dec
int
mov
and
lea
adc
jg
inc
sub
ja
sub
jns
sub
in
roll
popa
push
sahf
aas
sub
lock
mov
push
hlt
test
arpl
cmc
repz
insb
mov
or
pop
xor
xchg
cmp
xor
movsl
pop
inc
inc
push
mov
xchg
xchg
jl
xchg
mov
into
les
les
mov
and
adc
push
mov
outsb
jp
or
clc
pop
pop
fisttpll
mov
pushf
jno
inc
int3
jle
adc
ror
sbb
stc
ss
hlt
xchg
ffreep
sbbb
push
jle
sub
xchg
adc
cs
mov
xor
pop
add
outsl
shl
insb
dec
es
sbb
cmp
mov
mov
pop
rorb
inc
popf
pop
pushf
lea
outsb
mov
mov
push
incb
pusha
mov
subb
jb
adc
in
jno
stc
cmpb
xor
bound
add
mov
mov
sti
mov
and
aam
popa
sbbb
or
aad
sbb
test
es
pop
mov
sbb
sbb
jns
sub
push
lods
cmp
inc
loope
out
dec
scas
decl
xchg
dec
push
imulb
add
loope
sub
cmpsb
pop
jle
hlt
sahf
jb
push
add
pop
out
xor
arpl
inc
push
mov
out
cmp
mov
cmp
adc
data16
bound
xchg
sub
pop
mov
add
xor
adc
cmp
mov
dec
insb
mov
push
mov
mov
sub
out
pop
sti
adc
sarl
hlt
out
call
fwait
adc
imul
cld
loopne
cmc
nop
insb
test
jb
pop
aas
ljmp
lahf
push
call
insl
mov
lock
mov
sbb
pop
enter
cmp
decl
or
mov
mov
mov
inc
das
mov
lds
ret
inc
push
rcr
inc
ja
mov
leave
dec
sub
lcall
adc
test
mov
scas
mov
or
jecxz
mov
mov
cmp
pusha
pop
insb
in
test
insb
out
inc
daa
xor
sbb
mov
mov
fwait
pop
and
dec
jb
jb
mov
dec
mov
jno
fdivl
scas
cmc
sbb
adc
lret
fsts
cmc
adc
xchg
lret
dec
mov
inc
adc
mov
lea
jo
jbe
adc
rorl
or
xchg
pop
fisubrl
and
imul
addb
test
cmpsl
cltd
and
lods
sub
and
add
xor
repnz
xchg
in
shll
jo
mov
inc
pop
lahf
cmc
hlt
fdivl
xchg
cld
popf
clc
ds
or
outsb
pop
out
sbb
shrb
cmp
lds
subb
push
pop
enter
mov
call
int
scas
jle
push
jecxz
in
loope
jmp
dec
imul
cmp
jne
fldcw
cld
shlb
dec
in
popf
insb
xor
add
add
sbb
dec
xchg
je
call
mov
adcb
aas
cmpsb
sar
mov
cmp
push
mov
mov
lcall
inc
mov
cltd
mov
subb
cmpsb
int
push
test
adc
or
pop
xchg
dec
lock
ret
cmp
mov
sbb
xlat
pop
mov
xchg
fcoms
push
out
stc
cmp
stos
inc
or
mov
lcall
jge
cmp
andl
pop
clc
std
jle
or
or
mov
xchg
inc
sbb
fistps
pop
push
lods
out
cmp
pop
mov
or
pop
stc
lret
xchg
aaa
ds
insl
insb
loop
shll
xor
cli
xor
insb
repz
adc
sbb
cmp
cmp
popa
in
inc
push
stc
mov
iret
stc
out
pop
mov
outsb
lods
rcrb
mov
and
push
mov
test
cmp
sub
movsl
inc
faddl
cmp
cld
sbb
fimuls
addr16
adc
popf
cwtl
or
xchg
out
add
mov
mov
add
sbbb
xor
imul
mov
insb
sbb
out
and
in
test
xchg
xchg
popf
lods
arpl
push
repz
mov
or
xor
cmpsl
rcr
push
movsb
cmp
out
pop
mov
pop
aaa
aam
sbb
popa
loop
mov
cwtl
out
cmp
scas
in
into
xchg
dec
mov
mov
mov
loope
ret
fildl
xchg
out
dec
inc
adc
inc
movsl
mov
shr
fwait
xchg
andl
cmp
jo
sub
or
push
and
mov
jae
arpl
imul
das
sub
sub
mov
mov
xchg
mov
and
shlb
sahf
leave
ds
cwtl
mov
stos
and
leave
mov
lahf
js
int3
gs
stos
add
mov
jl
test
jle
jl
adc
add
in
dec
jp
aad
push
ljmp
imul
inc
scas
rclb
jo
cmp
push
or
sbb
mov
insb
xchg
jg
iret
std
data16
jne
mov
inc
push
enter
sbb
lds
mov
push
ljmp
add
jg
leave
test
mov
lret
push
jbe
pushf
out
imul
scas
pop
pop
dec
jg
add
adc
push
aam
sarb
add
out
xchg
aas
stos
mov
xchg
push
xchg
push
fisttpll
or
and
jo
mov
sub
test
jg
or
xor
inc
cmp
jae
decl
cmpsb
dec
lds
inc
arpl
mov
mov
sahf
rolb
mov
arpl
mov
dec
push
dec
insb
lahf
push
inc
stos
lods
dec
cmpsl
mov
mov
cmp
cmp
pushf
sbb
gs
mov
lcall
lahf
xchg
xchg
cwtl
or
sub
stc
imul
add
into
add
fcmovnb
add
sub
out
stc
dec
frstor
and
lods
mov
test
inc
jecxz
pop
movsb
repnz
out
aad
mov
sti
cmp
xchg
shlb
in
xchg
mov
xorb
dec
jne
sbb
xchg
mov
dec
mov
repz
je
push
or
sbb
in
mov
cmovg
push
lret
pop
sub
or
inc
js
mov
sbb
lods
bound
icebp
bound
or
xchg
lea
or
jo
aas
lods
push
js
mov
movsl
push
mov
lds
fidivrl
add
mov
rcll
adc
xchg
or
adc
jae
ljmp
inc
mov
pushf
out
push
xchg
cmp
fmull
repnz
test
sbb
addr16
out
mov
cmc
xchg
bound
pop
xor
dec
std
repnz
repz
out
cltd
sbb
mov
jmp
jmp
xor
out
stc
fmuls
jg
mov
jb
outsb
scas
jae
xchg
shlb
out
mov
cmc
mov
nop
add
inc
pushf
or
sahf
sahf
lcall
test
test
ljmp
mov
shll
mov
mov
mov
xor
lods
clc
inc
lea
xchg
pop
mov
clc
cs
dec
lods
loope
shrl
lock
int
mov
sub
data16
scas
inc
cmp
aas
dec
shl
push
ja
xor
push
and
enter
icebp
sub
int3
mov
pop
fwait
adc
cmp
les
jmp
nop
pop
scas
inc
insl
int
pushf
out
dec
lds
jne
ret
push
lret
xor
shll
in
inc
push
sbb
cmpsb
out
add
mov
xchg
fbld
mov
mov
mov
fnsave
sar
shrl
xor
popl
out
sbb
mov
shlb
jo
adc
jb
dec
dec
xchg
mov
sub
fstl
repnz
lret
xor
mov
push
ror
outsb
xlat
lea
ror
lock
add
clc
pusha
mov
xlat
xchg
fld
jg
push
jns
sbb
enter
xchg
call
fisubrl
xchg
inc
shlb
out
call
popa
add
stc
inc
fnsave
cmp
cmp
rorl
imul
cmp
pop
out
stos
ds
outsb
dec
fsubrl
jnp
incb
out
push
adc
cmc
test
es
je
pop
es
repnz
gs
push
aad
sub
jmp
jnp
adc
jg
lock
mov
ja
mov
cmp
pop
popa
repz
push
or
mov
orb
ja
xchg
lahf
addr16
sbb
ficoms
ror
push
xchg
std
add
mov
xor
xlat
pop
jne
or
setae
iret
inc
popa
pop
push
xchg
aam
mov
push
ficompl
push
pop
stos
and
pop
stos
fneni(8087
lret
push
jmp
adc
xor
adc
enter
add
jg
push
adc
push
faddl
push
fsubl
inc
shlb
cs
imul
fs
fimuls
aad
dec
fdivr
or
and
mov
shrd
jmp
push
push
xor
cmpsl
xor
inc
sbbl
mov
jno
pop
push
or
outsb
fwait
mov
clc
push
subl
fistpl
adc
jl
hlt
cmp
dec
pop
adc
js
cwtl
adc
call
cld
adc
or
add
ja
loop
fsubl
mov
mov
ficoml
sti
jmp
icebp
xchg
std
repnz
xchg
daa
cmp
jae
fstpt
aad
cld
xchg
int3
inc
xor
jg
jb
jno
cmp
or
lahf
mov
aad
adc
adc
and
mov
push
jecxz
das
outsb
cmpsl
cmc
test
sub
popa
mov
or
or
repnz
mov
adc
mov
jnp
pop
popl
mov
jecxz
or
insb
push
insl
addl
decl
aam
jo
add
cwtl
sbb
inc
add
out
pusha
es
stos
sahf
int
sbb
ret
icebp
aas
stos
imul
aaa
pusha
in
scas
and
jl
insl
add
outsb
aas
shll
xchg
sub
cld
sub
inc
and
push
cmpsl
xchg
push
sub
inc
js
add
mov
sbb
mov
sub
adc
mov
inc
icebp
cs
outsb
aad
jle
jmp
shll
xchg
add
cmp
mov
mov
sub
xchg
xchg
test
aad
mov
push
hlt
test
xor
mov
sbb
jmp
test
add
leave
inc
add
jg
xlat
js
sarb
cwtl
lods
pop
add
jecxz
js
cld
and
xlat
cwtl
loop
int
cmp
fiaddl
ljmp
adc
push
adcb
aaa
add
pop
cs
movsl
test
adc
stc
cld
pop
sbb
imul
mov
or
adc
cmp
xor
sahf
cwtl
icebp
fnstsw
in
sub
fdivs
test
push
mov
sub
cld
mov
add
jp
mov
mov
jge
pop
add
test
dec
push
add
mov
das
add
int3
test
sub
mov
xor
outsl
pop
push
in
dec
xor
inc
out
shl
add
or
xor
pop
xchg
push
testb
mov
push
jmp
rolb
lods
push
push
data16
aad
xchg
mov
mov
in
xchg
cmp
push
cmc
cmp
cmp
pop
mov
push
inc
xor
andl
push
ficoms
sub
pop
testb
jle
or
mov
push
ljmp
cmp
or
or
scas
xor
test
fs
fs
sub
add
pushf
sbb
pop
xchg
xchg
out
mov
cld
mov
test
iret
loop
arpl
cmpsb
mov
in
jb
pop
les
jp
cmpsl
in
push
hlt
jg,pn
lret
out
xchg
lock
mov
xor
adcl
pop
pop
pop
leave
jbe
int
js
mov
gs
adc
int
pop
fucomp
or
sbbb
adcl
mov
jbe
imul
add
test
out
xchg
push
imul
mov
incb
or
sub
push
dec
loop
xchg
nop
xor
lret
jmp
mov
lock
mov
ror
or
rcrl
fisubl
xor
xchg
test
jo
xlat
jp
dec
repz
scas
pop
inc
in
pop
out
sub
mov
push
inc
sbb
mov
mov
xchg
lcall
sbb
push
js
fildl
mov
std
inc
mov
shr
cli
rorl
outsb
push
sarb
adc
xor
stos
xor
jmp
dec
sahf
add
test
insb
out
rcll
ret
push
dec
pop
mov
lret
cmpsl
jnp
cmc
push
fisttps
dec
jno
pop
stc
add
adc
push
mov
adc
mov
or
sbb
imul
lock
mov
test
cmp
push
jnp
pop
jg
mov
fs
popf
dec
or
mov
pop
sub
fbstp
insb
push
das
sbb
popf
lods
in
jle
or
scas
push
and
addr16
jmp
outsl
in
mov
inc
sahf
inc
xchg
pop
sbb
add
test
xchg
pop
mov
xor
and
ds
rclb
mov
scas
push
xlat
or
gs
inc
jmp
inc
insl
js
adc
add
mov
inc
lret
stos
pop
mov
mov
cmp
cld
sub
jmp
sbb
ficoml
xchg
cmp
je
and
cmc
pop
clc
sub
pop
stos
mov
inc
cmp
call
ljmp
jne
sbb
adc
add
scas
rcl
sub
into
out
jmp
je
scas
jnp
xchg
dec
lods
adc
pop
insb
inc
lds
aas
jne
adc
pop
ret
xor
out
mov
int3
mov
and
and
xchg
dec
mov
dec
jnp
or
cli
pop
lds
inc
in
fistl
inc
fistpl
xchg
test
bound
inc
rorl
pop
mov
subb
jne
insl
jb
jae
loop
sbb
sbb
ljmp
hlt
xchg
stc
rorl
cld
inc
stos
fisubrl
sub
sbb
mov
aad
add
sahf
ret
std
pop
sub
sbb
hlt
push
inc
pop
popf
push
lods
pop
fcmovb
or
xchg
jmp
push
dec
mov
addr16
imul
pushf
pop
push
fcmove
push
loopne
ljmp
rcrb
popa
and
stos
mov
or
add
les
xchg
das
dec
push
dec
nop
lahf
lea
insb
jo
inc
adc
movsl
data16
negb
xlat
or
mov
arpl
shll
sbb
mov
lret
lods
loop
fnsave
jle
mov
sbb
test
mov
and
int3
mov
jg
jnp
sub
xor
dec
shll
cmp
shll
add
int
in
or
xchg
jns
ja
mov
orb
lods
ret
addb
or
jg
jns
mov
lcall
mov
out
addr16
jg
jmp
jns
aaa
rcr
into
xchg
cs
aaa
or
dec
into
lret
pop
ret
je
inc
divps
cmc
mov
dec
in
push
mov
aad
pop
pop
push
aas
cmpb
mov
xor
sahf
sub
lret
pop
daa
lret
mov
xchg
push
fwait
xor
mov
jecxz
mov
xchg
in
sti
and
fiadds
cltd
scas
sub
out
sub
jno
xchg
mov
push
mov
ret
flds
and
cmp
xchg
rorb
jns
scas
push
jae
outsl
mov
xchg
jle
arpl
shll
dec
or
mov
aad
fisubrs
insb
push
test
sti
pop
cld
xorl
ficoml
icebp
pop
aam
fiaddl
std
lret
sbb
mov
cli
fidivrs
xor
movsb
jbe
fwait
das
pop
fimull
shll
negl
xchg
add
mov
dec
cltd
stos
shr
xchg
loop
dec
mov
jno
xlat
cmpsb
subl
or
shl
mov
ljmp
dec
dec
jp
fnstcw
out
scas
cmpsl
stos
movsb
xor
mov
cmp
jmp
scas
ds
scas
leave
fisttpll
adc
jecxz
mov
adc
movsb
push
stos
mov
xor
push
into
adc
in
das
cmp
mov
add
add
test
stos
sbb
cmp
xor
sub
rclb
mov
std
lcall
dec
cmp
aaa
jmp
inc
jl
sbb
mov
in
sbb
pushl
inc
test
add
mov
shr
rcll
pop
jmp
xor
mov
shlb
out
mov
les
insl
mov
jne
es
push
subb
jecxz
mov
ss
mov
cmpsl
push
stos
sbb
and
cmc
push
das
sbb
lret
lahf
aam
jbe
adc
arpl
cmp
sbb
enter
data16
xor
adc
repnz
int3
push
ja
mov
mov
fldl
sbb
push
pop
push
pop
fldl
filds
xchg
fisubrl
mov
jae
xor
test
xchg
mov
xchg
lret
enter
sbb
mov
outsb
in
sub
leave
xchg
xor
xor
jne
clc
xchg
mov
jl
aam
xchg
aaa
or
add
jnp
pop
jo
rolb
insb
enter
fsts
jp
pop
cmp
rcrl
ds
test
mov
push
lcall
divb
xor
sti
scas
inc
cmp
push
mov
push
or
dec
test
shr
popf
sbb
popf
cmp
or
pop
mov
int3
lds
idivb
jb
test
cmc
mov
jg
push
mov
repz
dec
push
xor
adc
std
add
pushf
in
push
pop
inc
rcrb
cmp
push
push
movsl
pusha
xchg
pop
std
pusha
scas
push
in
inc
or
rol
or
cmpsl
mov
cmp
test
xchg
shll
mov
xchg
pop
inc
cmc
out
and
mov
add
ss
enter
rcll
dec
lock
mov
cmp
inc
test
push
notl
por
fistps
push
fdivl
sti
cmp
inc
jecxz
inc
jb
dec
sub
sub
pop
and
ret
dec
push
mov
dec
repz
aas
xchg
cmpsb
mov
addl
es
sub
mov
xor
push
or
xchg
sti
xor
lock
pop
jb
pop
adc
test
das
mov
adc
iret
and
mov
push
adc
lock
cmp
sar
ret
cltd
fs
repz
mov
repz
out
lock
das
clc
mov
aaa
push
xor
lcall
xchg
mov
push
push
sbb
xchg
jne
and
iret
jp
mov
bound
pop
in
roll
imul
adc
and
test
and
aad
lds
push
adc
fdivrp
pop
xor
lock
mov
inc
mov
pop
inc
stos
or
push
xor
xor
test
sbb
push
mov
cltd
adc
mov
cs
adc
jp
ss
pop
clc
mov
lods
arpl
adc
stc
push
mov
std
pop
test
je
addr16
sbb
cli
and
and
xor
js
stos
jae
and
add
push
and
adc
enter
addr16
gs
mov
mov
jbe
aas
roll
mov
sbb
adc
idivl
cmp
and
pop
sub
cltd
jno
mov
add
sbb
jge
loopne
push
mov
sbb
js
jecxz
push
pop
jnp
dec
sbb
mov
aad
dec
lret
stos
xor
ds
push
test
cld
xlat
mov
int
out
add
sbb
push
dec
lcall
mov
sub
insb
aam
xchg
sbb
mov
xchg
or
lahf
jecxz
xorl
xor
lahf
mov
push
xor
pop
jle
cmpsl
neg
leave
xor
mov
jecxz
sbb
adc
and
sub
xchg
scas
popa
inc
add
outsb
dec
fsubrs
stc
mov
inc
add
out
loop
or
sub
jo
jl
scas
jge
ret
bound
leave
cmp
mov
das
jge
pop
cli
nop
jmp
call
fdiv
scas
mov
mov
mov
mov
fdivl
dec
dec
mov
and
adc
cmp
cli
andb
call
ret
jns
xchg
and
add
cs
push
fiaddl
push
testb
pop
cmp
push
out
aad
stos
jl
cwtl
das
fldcw
adc
jmp
pop
xor
inc
sub
lods
int3
imul
mov
mov
ret
inc
aas
inc
cltd
cltd
sbb
fcompl
lods
sub
pop
dec
test
cmc
push
pop
icebp
push
pushf
and
xor
test
push
xchg
inc
mov
pusha
movsl
mov
xor
push
xchg
add
dec
lret
push
dec
xor
sbb
call
lcall
or
sbb
jmp
lahf
lds
xchg
sahf
lds
pop
push
xchg
stc
dec
das
shr
add
inc
sub
decb
roll
mov
mov
pushf
cmp
fs
sarl
xlat
inc
xchg
xchg
testl
mov
and
xchg
subb
stos
pop
push
fcompl
mov
ja
jbe
ss
dec
neg
int
mov
shll
mov
pop
xchg
decb
cltd
cmp
cmc
add
mov
mov
cld
bound
orl
xchg
movsb
or
inc
xchg
and
in
xchg
mov
jo
repnz
sti
mov
fisubs
mov
clc
out
ficoms
mov
pop
pop
mov
lds
sahf
adc
sub
hlt
cli
sub
mov
loop
scas
or
faddl
xor
xchg
hlt
fwait
inc
ljmp
push
adc
push
xchg
sub
add
insb
stc
dec
xchg
enter
fstps
loopne
rcl
pop
adc
sarb
dec
jmp
xchg
jl
xchg
sbb
xchg
dec
shrl
fisttpl
sub
jg
iret
into
push
leave
inc
cli
mov
sub
pop
mov
jbe
or
mov
hlt
jle
mov
dec
arpl
enter
lcall
imull
mov
hlt
stc
mov
shrl
cmpsl
add
sub
push
pushf
inc
sbb
dec
add
scas
pop
xchg
nop
leave
adc
mull
pop
sub
filds
sbb
push
in
sub
in
es
add
jle
pop
sbb
mov
adc
push
pusha
cs
dec
sub
pop
jns
jo
xchg
lret
inc
fistpl
adc
mov
in
inc
insl
fmuls
add
leave
inc
rclb
fisttpll
xchg
fiadds
mov
pop
cmp
jne
sbb
mov
xlat
es
dec
sub
out
fistpl
arpl
sbb
xchg
add
cmpl
js
pop
push
ss
sub
ljmp
inc
jns
stc
mov
cltd
imul
jno
fbstp
jne
mov
not
dec
lcall
jne
adc
mov
loope
ljmp
or
in
test
fcmovbe
in
jmp
inc
xchg
or
jg
push
pop
add
call
and
divl
icebp
outsl
lods
dec
push
dec
ja
nop
into
scas
testl
adc
or
fstpt
dec
xor
imul
sub
jl
cmpsb
or
stos
lahf
xlat
mov
or
xchg
in
ret
es
pop
insb
lret
mov
iret
scas
pop
xchg
dec
mov
xor
add
mov
sub
repz
lret
aaa
enter
imul
xor
ja
fnsave
aas
pop
enter
sahf
fisttps
mov
pop
jnp
mov
cmp
cltd
mov
negb
and
xchg
fisttpll
lcall
es
aam
mov
lret
mov
mov
dec
jo
jmp
shl
rclb
add
mov
pop
cmpsl
out
inc
and
insl
sub
mov
mov
out
lret
loop
xchg
mov
call
shrb
insb
and
das
sub
lret
dec
jp
iret
push
imul
cwtl
jbe
lods
sub
inc
enter
imul
repnz
and
sbb
mov
mov
xchg
adc
testb
ss
out
adc
rcrl
mov
repz
sub
outsl
test
inc
xchg
aad
mov
xor
xor
dec
mov
aad
frstor
stos
sbb
call
xchg
rclb
shr
jnp
xchg
repz
movsl
mov
jecxz,pn
outsb
mov
scas
mov
adc
test
shrl
push
xchg
jl
fiadds
fistps
lods
iret
adc
lret
add
xchg
mov
pop
and
in
cli
outsb
jb
jmp
iret
movsl
inc
and
pushl
mov
sbb
imul
jne
jne
fisttps
shlb
test
sub
hlt
jnp
pop
xor
and
cltd
adc
lock
call
push
sub
repz
shrl
les
into
sbb
push
or
jmp
fsubrs
cmpsl
rol
orb
aas
scas
out
jg
xor
pop
fldcw
adc
dec
push
mov
clc
addr16
loopne
into
jo
xor
inc
cmpsl
cmp
fisttps
scas
dec
lds
ficoml
xchg
xchg
mov
cmpsl
xchg
cs
loop
sbb
push
mov
imul
pop
cltd
fisubrl
es
jg
sub
inc
imul
imul
and
std
aam
xchg
cmpsl
inc
loopne
push
jnp
sbb
and
or
fnstenv
into
jl
sarb
nop
inc
es
jge
pop
cmp
repnz
pop
jno
sub
popa
movsb
jp
dec
jno
movsb
push
mov
cmp
lahf
std
mov
add
call
dec
jnp
jbe
dec
pop
or
and
outsl
int
sbb
mov
cmp
mov
dec
ffree
mov
pop
outsb
lret
push
pop
loop
test
sbb
lret
inc
jmp
and
icebp
mov
shrb
push
cltd
sub
xchg
out
jp
mov
ja
dec
shll
test
ficomps
out
push
pop
and
dec
inc
insl
xor
xchg
xchg
mov
rclb
insb
adc
enter
decb
icebp
push
adc
ret
mov
xchg
cmp
or
jecxz
fidivs
je
jo
test
imul
mov
push
xor
mov
dec
inc
xchg
adc
lret
lock
xchg
mov
pop
lcall
inc
popf
mov
or
mov
fisubrl
jne
dec
testb
aaa
inc
cwtl
addb
leave
lret
rcrl
inc
jae
cmp
pop
test
lock
loope
sbb
rolb
imul
in
dec
mov
adc
and
daa
pop
adc
daa
pop
or
data16
fisttps
ja
inc
sbb
mov
mov
xchg
data16
or
rcrl
add
dec
pop
dec
test
jmp
int
pop
mov
ss
fisttps
and
loopne
jnp
or
idivb
mov
test
mov
cmp
jecxz
iret
dec
mov
mov
ss
jb
and
inc
mov
loopne
pop
mov
rcrb
sbb
dec
add
cmp
mov
add
aaa
or
dec
jne
fs
sub
inc
in
jo
int3
subb
cmpsl
adc
jae
dec
jns
or
test
dec
ret
cmp
push
mov
movb
inc
cmp
xor
shrb
pop
ljmp
dec
aad
cmp
fiaddl
mov
jae
xorb
jge
xor
dec
inc
mov
push
pop
movsb
or
dec
subb
xchg
lret
scas
sbb
shlb
and
jno
scas
testb
shrl
xchg
jo
mov
xchg
and
in
xchg
push
push
in
fsubl
mov
push
insl
loope
sti
adc
cltd
stos
movb
stos
cmp
mov
popa
cs
cmp
lret
dec
lds
mov
sub
loope
cmc
test
nop
je
les
pushl
aaa
cmp
xchg
push
xchg
and
mov
dec
push
xchg
xor
out
stos
loopne
push
xchg
jae
sub
nop
hlt
and
hlt
xchg
outsb
lds
inc
jno
jmp
add
jae
lds
adc
fsubl
and
and
mov
lret
jae
outsl
pop
fildl
imul
bound
push
bound
cld
lods
les
or
mov
repz
dec
cmp
mov
mov
dec
and
jge
mov
push
ja
inc
push
or
cli
cmp
mov
out
stos
cli
lock
inc
ljmp
lcall
mov
loop
sahf
mov
xorb
inc
and
pop
push
cs
jno
testl
loop
and
addr16
jmp
mov
pushf
jp
notb
cli
scas
movsl
cld
ds
push
orb
int3
pop
ja
dec
add
xorl
idiv
jb
pop
pushf
ja
je
aaa
cmpsb
loope
adc
orl
loop
pop
inc
dec
lahf
push
xchg
test
cmc
loope
lahf
jo
dec
mov
cmp
ja
fisubrs
xchg
xchg
adc
fisubl
inc
ret
cltd
cmp
hlt
jge
push
mov
data16
jnp
jne
jmp
xchg
fildl
lock
mov
js
lds
hlt
icebp
push
xor
sbb
shrl
cmp
leave
inc
mov
lds
push
push
xchg
pushf
mov
mov
lds
inc
mov
and
sbb
fsub
ret
xchg
stc
stc
out
cmp
test
adc
adc
pop
hlt
cmpl
xor
cmp
xchg
jle
js
aas
inc
adc
pop
inc
pop
dec
jne
mov
jg
daa
neg
daa
int3
leave
add
xchg
inc
xchg
mov
or
test
lret
mov
dec
add
dec
je
popf
sub
ja
fadds
or
jo
dec
fsubrl
mov
fstpt
jge
pop
js
pop
ret
sbb
ret
bound
dec
fstps
push
and
lds
or
nop
pop
int
jmp
mov
dec
fldt
sbbl
mov
js
add
push
xor
imul
mov
mov
adc
jb
call
clc
sub
movsb
add
dec
fucomip
test
cmpsl
dec
mov
push
xchg
sti
mov
rclb
insb
mov
push
mov
cmp
dec
aam
out
mov
sub
push
pop
or
insb
cwtl
into
shlb
mov
fisubl
xlat
out
in
inc
dec
push
mov
jae
add
mov
sub
pop
lock
pop
or
ss
jl
leave
mov
xchg
inc
adc
cmp
aaa
out
sbb
xchg
jg
pop
mov
sub
jbe
outsl
cwtl
data16
out
adc
ret
hlt
loop
jb,pt
enter
movsb
daa
hlt
sub
test
xchg
mov
xchg
repnz
fisttpl
lcall
dec
lock
cwtl
outsl
repz
imul
jbe
rcrl
rorl
cmp
leave
lahf
cltd
out
out
insl
mov
xchg
out
inc
dec
sahf
adc
addb
dec
adc
or
cmp
push
dec
push
movsl
int3
mov
push
xor
movsb
mov
dec
outsl
aad
pushf
cli
sarb
bound
jecxz
xchg
lret
xchg
daa
mov
or
inc
xlat
cmc
xor
and
jns
or
xchg
and
add
mov
ret
ret
pop
adc
pushf
hlt
pop
mov
jb
gs
push
xchg
arpl
aad
mov
push
fsts
jnp
inc
dec
inc
leave
adcb
js
xor
stc
cmp
testb
pusha
outsl
comiss
leave
icebp
adc
cmpl
sahf
xor
subb
jge
mov
mov
movnti
imul
and
push
mov
mov
pop
stc
mov
fisttpl
outsl
mov
out
int
dec
in
lea
mov
xor
mov
xchg
enter
push
mulb
or
sysexit
pop
mov
inc
push
xor
cmp
dec
and
pop
inc
jno
or
nop
mov
call
push
push
int
inc
orb
xchg
adc
sbb
nop
stos
out
inc
incb
loop
xchg
leave
add
or
jle
sbb
dec
ds
mov
dec
jb
push
test
inc
imul
lds
pop
outsb
ffreep
and
jns
mov
adc
jp
push
push
add
dec
sar
aas
test
mov
lods
into
inc
dec
clc
cmp
jmp
xor
scas
or
js
mov
mov
jbe
mov
jae
pop
fxch
jbe
push
sbb
data16
shll
mov
in
orl
mov
cltd
and
jb
and
addr16
xor
cmp
pop
ljmp
sbb
xlat
or
sahf
pop
in
das
sbb
leave
or
stos
clc
leave
popf
stc
faddl
out
sub
addl
lret
call
cmp
stos
notb
dec
sahf
adc
inc
mov
xchg
enter
cmpsb
or
sahf
out
sub
incb
cmpsl
xchg
xor
shrb
push
push
and
xchg
cwtl
add
std
push
shlb
sbbl
and
sbb
repz
or
xchg
pop
cwtl
rep
pushl
pop
nop
ds
and
lods
adc
mov
xchg
inc
test
xchg
loopne
jmp
adc
fbstp
jnp
pop
movsl
nop
cs
jle
stos
sub
frstor
fnsave
pop
cmpsl
sahf
pop
iret
roll
fildl
sub
or
push
pop
dec
cli
push
mov
and
or
xor
icebp
add
in
repnz
je
fdivrs
or
shl
jl
ds
ret
les
jecxz
jns
popa
fstpt
stos
xchg
daa
xchg
pop
xlat
sub
out
sbb
idivb
jo
outsb
mov
jp
push
mov
arpl
wrmsr
jmp
incl
xchg
jae
mov
cltd
jo
push
mov
fs
hlt
xor
and
and
add
xlat
push
test
pop
mov
fbstp
das
in
mov
orl
jo
and
pop
and
retw
les
subb
xchg
repnz
mov
dec
pop
xorl
mov
xor
sbb
faddp
sub
push
adc
nop
mov
imul
in
or
rolb
xor
mov
jmp
jne
je
inc
jns
popa
out
pop
mov
cmp
cmp
xchg
push
add
mov
mov
cmpsl
dec
lahf
leave
xchg
aam
sub
and
popa
adcb
es
jns
scas
dec
out
sbb
or
push
popa
inc
scas
roll
iret
gs
cltd
jge
in
inc
pusha
jl
int
fwait
adc
inc
push
pop
nop
jp
into
jge
jmp
iret
mov
dec
std
lods
enter
clc
sahf
pop
in
inc
push
in
dec
jns
cld
cltd
dec
ror
sbb
or
sub
mov
lea
aad
xor
jl
pop
daa
popf
inc
xchg
mov
std
out
addb
fnstenv
in
test
or
out
add
andl
popf
bound
push
shll
jnp
mulb
fstpl
test
jae
mov
data16
sbb
sub
and
push
mov
sub
shl
loope,pt
in
mov
icebp
add
lock
add
mov
inc
leave
mov
jle
pop
mov
outsb
inc
xchg
shlb
sub
cmp
ret
cli
inc
rcrb
mov
sub
cli
cmp
xchg
inc
ficoms
add
push
dec
in
lea
mov
mov
inc
xchg
orb
shl
lock
rcrb
push
xlat
or
and
je
jp
inc
shr
nop
sub
inc
rcr
jmp
repnz
in
popf
sub
outsl
mov
stos
test
lcall
cmc
rcll
pushf
fabs
out
loop
icebp
in
xchg
dec
adc
pop
ret
push
mov
bound
inc
add
xchg
aam
loope
fisubrl
sti
add
mov
xchg
mov
xchg
jmp
js
mov
sarl
xor
lods
mov
xor
cmp
les
jl
ljmp
iret
mov
test
xor
insb
hlt
int
sub
pop
push
adc
xchg
fwait
stc
ljmp
int
pop
xor
loope
sub
or
lret
loopne
imul
fildl
pop
inc
sbb
pop
ja
jae
rorl
fwait
repz
fcmovu
pusha
jb
in
mov
and
cmp
sub
imul
push
xlat
cs
outsb
in
dec
push
fcomi
cmp
mov
xor
lods
xor
adc
int3
shlb
sbbl
scas
mov
pop
popf
fiaddl
xor
mov
push
sub
inc
inc
cmpsl
pop
xchg
mov
and
xchg
sub
jne
pop
mov
jp
mov
push
daa
iret
sub
lods
adc
iret
pop
popf
jne
aam
ret
fistps
push
rorl
out
xchg
jno
jecxz
idivb
adc
fwait
mov
movsl
lock
and
mov
jbe
sbb
movsl
repnz
bound
jne
les
aad
mov
dec
scas
fdivs
and
jb
xchg
pop
cwtl
cld
movl
dec
sbb
movsb
cltd
jp
ja
fstpl
xchg
cwtl
pusha
adcl
mov
daa
ret
repnz
lret
cmc
je
mov
addl
lahf
mov
jb
adc
sbb
sbb
mov
pusha
inc
xchg
or
sub
push
mov
cmpsb
jmp
adc
jmp
jle
jl
iret
lret
aad
loop
sbb
insb
jo
push
xchg
xor
ficompl
movsl
jg
push
scas
ja
in
sub
inc
cmpsb
jno
insb
int3
xchg
fsub
or
xchg
hlt
stc
inc
movsb
fsin
mov
jmp
mov
and
or
sub
dec
xlat
test
jbe
popa
xor
or
iret
mov
cli
xor
lcall
fs
out
xorl
in
jp
xchg
mov
addr16
call
test
fcmovnu
aad
cs
imul
icebp
scas
arpl
shl
sub
jecxz
mov
mov
xchg
xor
or
sbb
sbb
and
jecxz
mov
xchg
jp
jns
sbb
hlt
stc
push
adc
out
xchg
jo
and
cltd
popf
or
add
js
out
xchg
pop
loop
insb
push
pusha
push
movsb
jmp
inc
inc
outsl
pop
std
roll
dec
fldt
mov
mov
cmp
shrl
enter
cmpsb
push
hlt
mov
arpl
dec
xchg
jl
pop
jns
imull
mov
loop
popa
push
stos
or
popa
jne
js
sub
addb
push
loop
cli
xorb
imul
ja
sub
data16
lret
divl
imul
pusha
dec
dec
or
mov
divl
xor
xlat
aas
sbbl
push
and
xchg
bound
repz
cltd
cmovbe
fwait
push
and
sarb
popa
shl
jmp
dec
fidivs
loopne
inc
out
lcall
call
add
adc
mov
inc
in
decb
bound
stos
and
xchg
lods
add
xchg
hlt
insb
mov
ret
lock
inc
arpl
nop
dec
mov
inc
ficomps
ss
jmp
inc
push
into
push
jae
jg
cmp
or
mov
popa
pushf
cld
es
push
push
xor
jp
dec
and
jno
cmp
push
repnz
dec
and
sub
and
adcl
jns
sahf
subl
mov
fiaddl
icebp
sbb
movsl
cld
push
das
lds
jecxz
mov
or
enter
add
mov
xchg
mov
shrl
lret
push
or
in
pusha
and
jo
sbb
loopne
push
loopne
push
pop
xchg
in
xchg
lods
fisttpl
lcall
test
addl
popa
andl
cli
jmp
loope
mov
mov
xchg
loopne
adc
or
lds
or
jns
ljmp
sub
jb
jb
dec
scas
ret
cmp
bound
icebp
mov
std
inc
sbb
push
fistpll
repz
pop
fidivrl
scas
mov
push
xor
les
faddp
jbe
xor
pushf
dec
ds
cwtl
dec
sub
mov
orl
sub
pushf
loope
cmpsl
mov
imul
test
testb
xchg
mov
dec
fildl
mov
cmp
aaa
pop
das
pop
repnz
pop
sbb
test
das
adc
mov
cmc
lea
mov
lds
fimull
adc
hlt
xorb
ret
rorb
test
cmpsb
dec
movsb
pop
and
shl
lods
imul
out
cwtl
mov
dec
pushf
dec
pop
dec
cwtl
imul
jns
jbe
stos
pop
jmp
sub
and
test
jb
xor
xchg
jo
push
insl
fistpl
loope
xchg
loopne
fs
fs
add
sarb
lods
aad
insb
cmp
test
inc
insl
sarl
and
out
jmp
insb
icebp
aaa
and
sub
in
arpl
sti
bound
or
jae
into
or
mov
loope
shll
pop
cmp
pop
lret
int
addb
mov
loopne
push
dec
dec
in
inc
sbb
in
loopne
in
mov
inc
adc
movsl
cmp
aam
xchg
mov
and
bound
mov
inc
dec
divb
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
add
rcrl
xor
.byte
outsl
mov
ds
xor
fadd
ret
xchg
jno
pusha
lods
jne
aaa
aas
xchg
stos
imul
iret
aam
add
adc
sbb
cmc
rolb
mov
inc
test
adc
imul
mov
mov
mov
jmp
xchg
std
mov
ss
insb
cmpsl
xchg
cmp
test
test
mov
mov
inc
mov
xchg
mov
pop
jecxz
addr16
jle
pop
pop
cmp
pop
or
inc
push
jnp
lock
xor
in
int
sub
scas
mov
add
jp
out
arpl
lcall
call
inc
xchg
jae
popf
cli
lods
xchg
stos
xor
mov
inc
inc
pushf
pop
xor
adc
add
push
push
and
rorl
repnz
daa
jl
adc
cmp
add
push
outsl
mov
and
mov
jbe
pop
jns
push
fs
cs
xchg
in
pop
hlt
hlt
test
dec
shlb
shrl
scas
mov
push
rcl
sub
mov
ret
push
std
sbb
or
sbb
xorl
mov
into
rolb
ja
jl
fisubrs
mov
or
out
xchg
stos
xchg
lahf
outsl
fisttps
push
jge
mov
fldl2t
in
xchg
stos
frstor
mov
add
cmc
push
push
push
cmp
sbb
xlat
test
xorl
dec
cmpsb
push
push
or
inc
enter
cltd
cmp
repz
mov
pop
jb
clc
inc
je
add
aam
jl
shlb
aaa
andl
ret
cwtl
scas
cltd
jo
rorl
mov
push
je
sbb
mov
inc
cmpsb
out
in
add
xor
scas
bound
xor
lea
inc
inc
mov
mov
leave
repnz
mov
push
mov
es
add
stc
rcrb
in
lahf
fisttpl
inc
sub
push
bound
xlat
cmovb
leave
mov
push
pop
push
lods
lcall
stc
sbb
sbb
or
je
cmp
xchg
mov
clc
fwait
sub
xor
adc
lods
mov
and
xchg
aam
add
push
lods
xor
and
pop
jg
mov
pop
inc
and
arpl
in
movsl
mov
pop
icebp
jp
fadds
add
pcmpeqb
ja
sahf
addb
xchg
jp
xchg
cmp
sahf
scas
stos
xchg
xor
ret
sbb
pushf
mov
out
push
vmovdqu
xchg
repnz
stc
std
mov
mov
cmp
push
div
mov
add
aas
add
les
inc
xor
lret
bound
ror
mov
test
push
pop
mov
jg
shlb
and
fnstenv
int
or
jo
mov
xchg
xchg
movsl
jmp
sbb
lods
cmp
xor
xchg
inc
mov
and
aam
out
es
outsb
ret
out
dec
sti
js
arpl
aad
addr16
push
or
push
inc
roll
cmpsl
ljmp
insl
stos
cld
in
pusha
pop
add
cmp
inc
dec
ret
test
lahf
lahf
add
sbb
sub
jle
bnd
dec
out
pop
adcb
pop
cli
mov
mov
fisubrl
sahf
xchg
mov
adcb
mov
lds
lea
insl
mov
mov
shlb
mov
inc
testb
shrb
xchg
in
push
and
or
mov
push
or
adc
pop
lds
push
insl
xchg
inc
and
aaa
push
sub
jne
dec
mov
dec
icebp
and
xor
imul
dec
lahf
dec
in
xor
loopne
test
push
pop
jnp
outsb
scas
adc
mov
inc
scas
cmpsb
jnp
out
cmp
sbb
in
dec
int
sbb
xlat
loope
add
push
data16
lock
fwait
mov
xlat
lcall
mov
pop
xor
lret
mov
fwait
ss
jl
sub
inc
xchg
andl
out
push
repnz
gs
outsl
call
je
mov
mov
pop
add
lea
xorb
and
xchg
mov
mov
lock
fistpl
push
addr16
pop
imulb
push
jae
aaa
stc
pushl
and
repnz
mov
cmp
push
pop
mov
xor
pop
sub
jb
adc
pop
xor
popa
scas
into
xchg
stos
jae
dec
mov
pop
orb
mov
gs
mov
fisubl
cmp
inc
dec
xchg
roll
push
dec
mov
in
sub
and
mov
jne
pushf
push
cld
lcall
call
pop
mov
cmp
test
pop
adc
mov
or
fbld
adc
das
in
sub
pop
rorl
pop
jae
mov
leave
repnz
ficomps
imul
push
bound
in
jbe
mov
ffreep
pop
outsb
xchg
popa
xchg
fisttpl
das
dec
out
xchg
xor
sub
data16
aaa
or
cmp
scas
cmp
scas
jae
push
rorl
fwait
jns
sbb
jle
in
mov
cs
ss
sbb
dec
jb
imul
xorb
negl
int3
cmp
jp
and
jge
jnp
arpl
imul
mov
out
or
xchg
mov
cld
xchg
inc
xor
jbe
aam
cmp
in
add
push
mov
loopne
mov
jl
sbb
sbb
and
sub
popf
stos
mov
xchg
pop
pop
in
mov
push
pop
jmp
jge
icebp
scas
sbb
jge
aaa
jbe
adc
cmp
xlat
test
int3
ret
xchg
fcompl
xor
sub
inc
cmpsb
pop
xor
nop
xor
popa
mov
push
enter
mov
adc
push
or
jp
jg
jno
les
mov
mov
cmp
sarl
lret
jae
rcll
mov
jno
fldcw
mov
dec
or
sbb
sub
lcall
xchg
or
xor
and
inc
adc
xor
movsl
pusha
icebp
pop
mov
cmp
mov
mov
dec
loope
enter
stos
xor
xchg
lods
fidivl
adc
mov
mov
mov
das
mov
sub
adc
pop
iret
mov
inc
lods
std
sub
push
shl
sbb
cmp
scas
cmp
nop
adc
out
lock
cmp
pop
pop
push
jmp
movsl
xchg
push
jb
mov
pushf
push
adc
and
addr16
mov
add
push
pop
mov
sub
add
lods
test
sti
out
push
or
ljmp
lock
push
xor
imul
aaa
push
sbb
and
pop
popf
mov
jmp
rcll
adc
jns
jnp
repz
imulb
out
popa
pop
sbb
cmp
sbb
or
jle
inc
push
mov
fcmove
pop
insb
repz
add
adc
cmp
mov
mov
adc
pusha
cmp
les
mov
aas
aad
jb
xor
inc
movsl
insb
clc
sbb
addr16
lret
inc
shl
js
mov
fwait
sti
mov
hlt
stos
repnz
movsb
dec
xorl
jns
lea
js
stos
adc
cwtl
cli
inc
xor
push
sbb
shr
mov
shlb
dec
ja
mov
pop
and
push
sub
test
in
mov
add
jnp
andb
push
aas
and
loope
sub
add
inc
popa
and
dec
inc
mov
std
ja
mov
ret
add
addr16
push
gs
icebp
ficoml
cmp
pusha
std
fsubrs
sub
dec
jae
jno
push
xor
xor
test
jbe
fdivrs
xchg
xchg
and
pop
or
addl
mov
arpl
movsl
dec
dec
outsb
jo
fisubrl
mov
jno
shlb
xor
sbb
add
popa
inc
mov
adc
dec
scas
or
mov
adc
test
movsl
popf
out
sbb
stos
lods
sbb
bound
mov
pushf
xlat
cmpsl
shrl
leave
insb
dec
test
stos
mov
scas
pop
jbe
mov
sbb
cwtl
mov
int3
bound
ljmp
pop
and
int3
daa
push
adc
mov
icebp
adc
test
ljmp
stos
aaa
cld
fxch
inc
leave
aas
add
mov
mov
add
add
lods
shrl
stos
cmpsl
xlat
test
shrl
gs
in
inc
mov
push
fs
movsb
cld
mov
aas
xor
mov
cmp
jb
and
sti
imul
jp
jmp
dec
lret
pop
inc
pop
or
ror
mov
in
jmp
outsl
pop
rcr
or
push
cmp
into
test
clc
mov
repz
je
cltd
ret
icebp
jmp
or
push
mov
js
out
ja
jbe
sti
sbbb
mov
imulb
mov
dec
aad
or
fs
mov
jb
decb
or
jecxz
int
popf
push
faddl
sbb
fwait
push
shl
add
sub
cmp
addr16
inc
rorb
ja
inc
sub
lea
cmpsb
adcb
pop
adc
push
mov
sub
pop
xor
das
jle
out
or
pop
cld
push
and
sahf
int
mov
inc
cmp
pop
jg
mov
mov
or
sbb
sub
dec
in
jno
sarl
xor
jp
mov
or
orl
loopnew
jbe
into
jae
mov
xchg
jmp
or
imul
psubw
popf
or
dec
imul
push
mov
repz
stc
cmp
jmp
scas
cltd
mov
ret
movb
aas
sahf
sub
fadd
xchg
sar
add
rcll
mov
int3
fistps
icebp
push
sub
mov
jmp
inc
jle
in
jmp
hlt
addr16
sub
cmp
push
mov
inc
push
in
add
xchg
jle
pop
jmp
adc
pop
out
pop
fwait
test
mov
add
fidivl
pop
dec
sbbl
inc
sarb
mov
int
jno
daa
aam
stos
sub
sar
or
dec
dec
xor
test
sub
das
jecxz
mov
imul
or
push
adc
sub
test
je
sbb
push
sbb
fnstsw
xor
sub
pusha
sbb
jecxz
scas
pushf
out
das
js
dec
cmp
xchg
jg
mov
inc
nop
inc
push
and
fldcw
imul
out
jmp
mov
xchg
mov
cwtl
push
cmp
pop
mov
and
ds
dec
dec
cmc
mov
xchg
sub
bound
test
xor
xor
jmp
mov
cmp
xor
pushl
sub
add
adc
mov
and
push
sub
test
adc
outsb
fisubs
push
shll
aam
cwtl
fadds
pop
in
dec
sti
das
mov
cmp
dec
ljmp
call
mov
fwait
xchg
cmp
scas
nop
mov
xchg
mov
adc
add
iret
andl
in
sarb
test
scas
and
in
sbb
lret
push
push
dec
cmp
adc
pop
insb
push
movsl
push
pop
inc
inc
adc
rcrl
in
aaa
arpl
shlb
mov
ja
cmpsb
cmc
inc
xchg
sub
inc
xor
xor
das
push
jle
adc
loopne
add
sahf
inc
fnstenv
lret
lds
aas
mov
loop
jns
add
lods
mov
xchg
cmp
inc
std
sarb
sbbb
bound
scas
jb
adc
mov
push
sub
repnz
cmpsl
pop
out
gs
push
and
and
push
xor
fnstsw
pusha
pop
insb
nop
and
add
movsb
adc
in
lahf
lret
ret
pop
bound
cwtl
or
cmp
dec
push
sbb
pop
int
mov
iret
hlt
jns
inc
insl
mov
shlb
pop
jno
dec
pop
cli
mov
inc
sti
test
xchg
mov
jg
in
jb
scas
ret
add
xor
pop
incb
and
add
jp
aam
jg
js
inc
insl
enter
popa
pop
jmp
mov
pop
lret
push
andl
adc
jo
mov
dec
adc
xor
int3
inc
dec
cmp
aaa
mov
lret
repz
pop
hlt
nop
and
pop
sub
daa
mov
stc
scas
insb
mov
bound
pop
lret
pusha
mov
sub
pop
fldt
push
push
dec
add
push
jp
fcoml
adc
test
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
.byte
xor
.byte
outsb
mulb
mov
rorb
imul
fimull
dec
mov
mov
stc
dec
insl
ss
loope
daa
popf
xor
xchg
jmp
scas
adc
sub
jno
mov
inc
jns
cs
aaa
movsb
lret
out
cwtl
pop
or
jle
repnz
icebp
js
mov
cwtl
jl
mov
scas
cmpsb
mov
arpl
mov
xor
hlt
lcall
mov
xor
mov
xchg
xor
pop
rcll
loope
xchg
stos
cmp
jle
fldenv
mov
insl
repz
mov
pop
pusha
cwtl
in
push
test
lcall
sub
jge
idiv
mov
xor
lock
jg
dec
jns
div
xchg
in
data16
pop
mov
push
dec
mov
daa
cmp
sbb
mov
andl
cmp
push
jl
fsubl
notl
sub
mov
cmp
aam
adc
fbstp
mov
sbb
mov
rcrb
movsb
cmpsb
clc
xor
lcall
jne
jp
ljmp
mov
adc
mov
mov
sub
jl
xchg
xor
inc
lods
out
push
popf
data16
mov
scas
xor
mov
andl
and
shufps
jp
fldenv
adc
popf
decl
mov
mov
js
mov
push
sub
ljmp
sahf
imul
add
mov
das
stc
pop
cmp
aas
dec
lock
and
popa
aaa
scas
js
clc
push
mov
imul
xchg
fldt
outsb
sti
sub
or
rcrl
pop
lret
xor
adc
lret
insb
inc
mov
cmp
lret
jmp
ret
fmull
push
jno
and
dec
xchg
sub
je
orl
mov
pop
push
inc
push
daa
mov
dec
dec
mov
popa
or
insb
push
cli
mov
es
or
test
adcl
mov
ret
xchg
fdivrl
dec
dec
decl
xor
ljmp
stc
ret
movsb
js
and
addr16
pop
in
je
lret
loopne
inc
dec
sbb
icebp
xchg
pop
iret
clc
test
or
inc
icebp
loopne
shrb
jecxz
xchg
andnps
sbb
xchg
sahf
xor
dec
cli
cmp
cmp
int3
cld
and
cmp
push
aam
popa
sbb
das
jp
cli
fdiv
xor
adc
hlt
mov
sbb
call
aad
inc
loope
mov
xor
lods
int
out
lods
fsubr
loope
ljmp
jns
out
scas
push
mov
in
dec
insl
clc
pop
cmp
mov
sub
out
lret
cmp
dec
leave
inc
out
add
gs
lahf
and
xchg
arpl
jbe
nop
dec
rcrb
or
push
mov
cld
pop
popl
jae
jecxz
mov
dec
or
push
pop
ret
std
imul
add
mov
push
adc
lret
in
out
ret
aaa
sbb
popf
ss
mov
mov
lods
push
cmp
xor
mov
scas
rclb
pop
mov
stos
popf
scas
dec
out
addr16
adcb
aaa
push
mov
ret
add
or
test
xchg
lret
addl
xchg
jbe
mov
jecxz
in
addr16
ljmp
mov
lock
push
dec
lds
fwait
lds
inc
loopne
cmp
lret
fldenv
test
scas
out
jg
sub
clc
clc
push
insl
call
mov
jge
pop
lods
clc
rclb
loope
ss
lds
ss
stc
ror
mov
cmp
ss
cmpsb
jae
aam
sahf
mov
sti
push
popa
into
cmp
dec
int3
shlb
push
mov
jne
push
mov
into
inc
mov
mov
jge
imul
orb
push
adc
adc
pop
jbe
mov
adc
data16
mov
mov
push
cmpxchg
inc
ljmp
sub
mov
mov
inc
pop
leave
xchg
jge
popf
sub
pop
dec
push
lods
jae
mov
dec
ljmp
sub
pop
cs
int
or
mov
outsl
inc
cmp
pusha
cmp
fisubl
fstpl
mov
add
or
pop
mov
sbb
push
and
lret
mov
in
xor
rcll
push
xor
jmp
dec
ss
enter
xor
lret
mov
ja
cmp
mov
xchg
ja
push
mov
fistps
xor
push
fisttpl
xor
push
jns
dec
add
out
hlt
jbe
mov
and
popf
jmp
sbb
or
adc
fwait
jge
fisubs
rorl
shr
inc
pop
add
xchg
out
xchg
sahf
pop
sub
pop
jbe
dec
mov
ljmp
js
push
adc
sbb
dec
sbb
insb
std
cltd
sub
mov
pop
in
in
xchg
pop
shl
stos
inc
rcrl
lahf
shlb
mov
es
rcr
jge
sub
shlb
shll
ret
inc
inc
dec
adc
jle
out
sbb
insb
push
inc
or
dec
push
sub
add
xor
lcall
mov
sbb
stc
ss
mov
ficoml
push
push
mov
pop
clc
sbb
aam
ja
inc
stos
pop
mov
movsb
push
adc
cmpsb
rcrb
dec
and
xchg
movsb
adc
js
aam
sub
xchg
rcll
addr16
int3
push
pop
icebp
sub
leave
mov
test
pop
js
cld
mov
int3
ds
adc
mov
lods
sahf
aas
add
xchg
shlb
push
pop
in
ds
in
mov
subl
cmp
cltd
insl
mov
out
divl
xchg
aad
dec
cmpsl
mov
rsqrtps
lret
sahf
sti
adc
mov
repz
fnop
cmovp
int3
lahf
cmpsb
push
mov
cs
in
push
dec
dec
jae
leave
jbe
aam
in
xchg
outsb
xor
mov
xor
rorl
cmp
push
aas
or
push
das
into
dec
inc
add
in
and
mov
scas
gs
cltd
cmp
lods
icebp
cmp
stos
andl
divl
popa
int
dec
je
cmp
jae
push
xor
shrb
fwait
xchg
leave
cmp
jno,pt
lods
push
loope
lock
cld
mov
les
sub
iret
outsl
pop
in
jle,pt
pop
push
fs
int
ja
mov
push
xor
mov
sarl
jle
xor
push
xor
inc
data16
adc
xor
cmp
cmp
jae
push
ret
rcr
xchg
xor
testl
cmp
xchg
sub
sub
or
loop
pop
popa
test
addr16
adc
mov
mov
in
insl
dec
cmp
mov
pop
xchg
stc
push
inc
or
dec
inc
lods
loopne
outsb
mov
push
pop
sbb
adc
pushf
je
stos
lods
xor
mov
fdivrs
pusha
aam
xchg
xor
cwtl
fwait
arpl
loopne
iret
pop
sbb
push
fldl2e
adc
xlat
lret
jg
mov
cmc
ret
icebp
sub
into
das
add
fwait
push
je
imul
insb
pushf
pop
cmp
out
lea
pusha
pop
popf
iret
inc
fs
pop
lea
push
mov
dec
xor
stc
pop
xor
int
pop
pop
rol
dec
inc
jo
jg
cltd
mov
insb
inc
sbb
movsl
push
push
jbe
lds
push
or
iret
into
dec
pop
mov
lret
imul
and
lods
sub
test
ret
sub
lock
mov
xor
into
sub
or
repz
outsb
stos
mov
mov
mov
daa
mov
cltd
fwait
mov
push
mov
sbb
sahf
cmpsl
aad
aam
sbb
repnz
xchg
ja
adc
xor
mov
pop
xor
lcall
jbe
inc
xor
push
repz
icebp
mov
loop
lcall
and
out
je
pop
xchg
xor
loope
shll
mov
loope
insl
arpl
sahf
test
adc
cmpb
outsl
add
mov
inc
xchg
push
mov
clc
push
adc
or
sahf
rorl
cmpsl
mull
jle
dec
ret
cmp
sub
out
mov
in
sub
xor
outsl
ja
loop
cmp
daa
jne
and
push
andl
push
push
push
scas
clc
cmpsb
outsl
jo
push
sub
cmp
lret
xchg
mov
jge
cmp
inc
xor
pushf
mov
push
sbb
mov
sub
sub
ss
aas
scas
dec
mov
in
inc
or
in
mov
mov
pop
push
jnp
rclb
cmp
mulb
lret
cmp
push
shrb
xor
inc
mov
rclb
aam
int3
cmp
xlat
into
cmp
inc
or
mov
add
and
ror
outsl
inc
test
lahf
icebp
aam
scas
pop
inc
lahf
outsl
shll
cmp
xchg
mov
stos
sti
jo
sub
xchg
push
dec
sub
lret
cmp
lcall
inc
adc
popf
xor
mov
add
ficoms
gs
cltd
mov
cmpsb
stos
sbb
fcmovnu
jge
xchg
pop
cmp
stc
cmp
enter
aas
aad
stos
push
sub
push
pop
fildll
mov
sub
cmp
ljmp
js
inc
pop
out
cld
mov
mov
mov
je
les
dec
push
lock
sbb
pop
pusha
mov
scas
adcl
xchg
sub
out
cmp
push
aaa
test
sub
divl
shrl
pop
cltd
stos
inc
and
dec
shrb
cli
or
jecxz
xchg
ja
sub
xor
xchg
push
dec
xor
xlat
out
inc
shr
mov
xorl
ja
gs
push
push
pusha
jnp
fidivrs
cmp
xor
cmc
lds
movsl
lcall
sub
mov
inc
jecxz
pushf
lods
shl
mov
push
outsb
out
mov
jge
sbb
jnp
xor
xchg
fwait
xor
and
push
push
jp
sub
sbb
leave
ret
in
stos
les
loope
in
xor
orb
sbb
inc
stc
xor
inc
or
ret
dec
push
das
test
ss
xor
ret
lcall
cmp
in
stos
mov
sarl
cld
lahf
pushf
adc
fwait
movsb
sahf
gs
and
cmp
fndisi(8087
sub
sub
js
mov
repnz
aas
xchg
xchg
sub
fwait
je
dec
negb
inc
incl
mov
pop
jno
inc
fisubs
lea
in
inc
and
orps
pop
mov
push
decl
test
int3
mov
pop
nop
push
jbe
mov
mov
sub
bnd
cli
jae
out
cltd
enter
inc
orb
cmc
nop
mov
cmpsb
lret
and
jmp
jno
shr
enter
inc
mov
adc
lods
dec
clc
popf
clc
popf
ja
adc
iret
cs
xlat
mov
pop
mov
jb
pop
shufps
jo
mov
inc
aas
out
das
outsl
dec
push
xchg
push
xchg
dec
mov
inc
push
adc
lret
sbb
repnz
insb
mov
jne
xchg
arpl
pop
xorb
sub
lahf
jae
xor
movsb
dec
arpl
and
adc
idivb
cmp
xchg
insl
inc
leave
daa
leave
arpl
pop
adc
inc
jb
scas
push
aaa
sub
out
notb
lcall
inc
jae
xchg
fstpl
cmp
xor
xchg
mov
call
push
fisubs
sbb
xchg
pop
push
icebp
es
push
pop
jne
mov
subl
add
xchg
mov
rcr
out
xchg
and
fmull
mov
mov
xor
xchg
mov
inc
filds
repz
in
aaa
cmpsl
push
push
enter
xchg
int
lret
dec
xlat
push
aas
pop
cld
jge
pop
mov
inc
lock
ret
jne
dec
inc
xor
xchg
inc
dec
test
shrb
jge
push
mov
inc
jge
and
pop
lock
cld
sub
dec
cmp
cmp
pop
sub
repnz
fmuls
repz
notb
adc
jle
int
nop
mov
mov
pop
outsb
mov
andl
or
cmpsl
adc
mov
fildll
mov
jle
insl
mov
aas
neg
mov
gs
in
aam
lock
aaa
add
mov
std
arpl
xchg
push
cmc
push
push
pop
mov
lcall
mov
lea
or
sbb
inc
xor
mov
xchg
dec
in
jmp
insl
adc
xor
pop
fisttps
int
loopne
jg
mov
xchg
dec
cmpsb
into
adc
imul
std
je
leave
je
push
mov
ljmp
mov
dec
xor
incl
jns
sub
cmp
stos
mov
adc
push
xchg
cld
flds
loope
dec
inc
adc
mov
icebp
add
xor
xor
leave
or
jo
leave
xchg
xchg
fistpl
lock
addr16
mov
popa
inc
lods
inc
pop
in
test
aam
mov
fistps
mov
lods
or
pusha
sub
lea
sbb
mov
fldenv
push
cmp
repnz
ljmp
sbb
fmuls
adc
inc
ret
sbb
sbb
enter
stos
inc
lahf
inc
pusha
push
aad
fstl
xorb
fwait
stc
mov
and
adc
cmpsl
pop
xchg
popf
nop
test
xor
lods
mov
aad
fsubs
dec
pop
lea
or
cmp
int3
repnz
jge
mov
leave
sarl
loope
add
push
xchg
mov
xlat
sbb
mov
stos
xor
ss
cmc
aad
pop
push
mov
push
out
inc
dec
mov
mov
mov
xor
jne
cld
mov
and
cld
mov
scas
ja
mov
xor
lock
add
into
pop
or
stos
pop
mov
or
mov
pop
adcb
inc
loop
push
popf
ret
fistpll
xorl
fs
dec
push
jp
into
jno
mov
mov
mov
inc
dec
cmpsb
mov
xor
xchg
loop
xor
pop
cli
mov
push
add
test
adc
lahf
jne
pop
mov
mov
mov
dec
insb
fsubrl
lods
mov
push
out
aas
jp
xchg
pop
mov
sti
cli
pop
adc
ljmp
dec
jb
jecxz
je
icebp
and
js
mov
pop
sbb
push
lds
mov
cld
push
in
jbe
jnp
ss
pop
xchg
cmpsb
or
sbb
scas
jnp
lret
cmpsl
mov
test
stos
inc
not
scas
lahf
insl
js
push
popf
dec
push
fimuls
cmp
repnz
add
insl
xchg
sahf
stos
or
out
int
add
movsb
leave
add
push
popa
mov
jge
push
ret
xchg
popa
or
imul
pop
adcl
ljmp
xor
push
sbb
mov
mov
cmp
or
dec
aaa
stc
mov
mov
pop
out
es
xor
inc
lcall
or
or
enter
mov
push
push
mov
out
scas
popf
pop
cli
xchg
iret
arpl
xchg
xorb
ret
popf
shlb
bound
inc
push
inc
ret
dec
xor
dec
fwait
mov
outsl
xor
mov
arpl
and
ds
clc
fdivrp
cmc
call
jecxz
push
fists
lock
test
and
fisubs
int
cmp
insl
cmp
in
loope
mov
sub
into
jnp
arpl
xlat
std
or
shl
cld
and
push
imul
test
arpl
adc
mov
add
aaa
out
cmpsl
cmpsl
xor
pop
ret
sub
sub
lds
or
fdivrp
and
or
adcb
and
sbb
fs
sub
movsl
repnz
lock
out
mov
pop
mov
outsb
fbld
call
dec
and
sbb
fdivs
movsb
mov
adc
push
ja
leave
mov
ss
xlat
mov
scas
arpl
push
es
ds
aam
adc
xchg
lcall
pop
jge
adc
mov
imul
shrl
push
xchg
repnz
xor
cmp
add
popa
or
scas
int
decb
xor
push
and
test
add
and
loope
cmp
jo
and
addr16
stos
shlb
jg
les
stos
outsl
dec
add
push
push
sti
std
lods
cmc
mov
adc
out
dec
loop
mov
xorb
cmpsl
add
mov
add
sbb
test
lock
jb
add
add
jnp
add
inc
fs
xor
shrb
adc
or
xor
mov
outsl
xor
dec
sahf
inc
xor
gs
dec
sub
call
dec
sub
mov
ja
xchg
or
jo
into
test
mov
mov
ret
push
fistpll
movsb
xchg
fucomi
je
jecxz
dec
inc
mov
sar
dec
adc
out
cwtl
or
gs
pop
jae
je
xchg
cmp
gs
ret
xchg
pop
lods
fldpi
testl
inc
cld
iret
popl
mov
mov
shll
inc
add
dec
addr16
sbb
fmuls
xor
lods
bound
and
add
test
push
sub
sbb
cmpb
pop
mov
and
push
imul
std
js
cmp
mov
inc
dec
out
rclb
addr16
daa
lea
popf
int3
in
subb
add
fwait
pusha
scas
daa
jbe
adc
nop
fwait
adc
cmc
pop
int3
xor
std
push
pop
adc
inc
inc
jp
inc
xor
adc
mov
xchg
mov
mov
jl
cmp
inc
movsb
sub
dec
pop
outsb
jnp
sub
and
js
in
sbb
aam
mov
and
xor
fstps
shrb
icebp
inc
clc
cmpsb
xor
mov
pop
ret
adc
xchg
cmp
cld
rcl
icebp
sub
push
ja
jae
pop
movsl
pop
pop
fisubrl
int
out
test
fwait
push
testb
push
mov
inc
inc
push
cmp
xlat
jle
cmp
add
xchg
xor
mov
shlb
outsl
pop
out
xor
leave
cmp
cs
in
jno
mov
cli
lret
adc
pop
loope
in
pextrw
jns,pn
inc
ljmp
lock
sti
int
fiaddl
push
mov
mov
jp
adc
adc
sub
inc
fcmovnbe
push
sbb
pop
mov
xchg
loop
or
iret
push
mov
xchg
popf
dec
xchg
movsb
dec
in
out
mov
mov
mov
call
add
loope
outsl
xor
xchg
jl
pop
mov
shlb
sub
dec
cs
es
cltd
test
push
jne
pop
movsb
stc
inc
mov
sbb
mov
mov
sub
cmpsl
test
dec
or
inc
inc
pop
xorb
pop
or
push
sub
call
cmp
dec
push
push
int
pop
inc
cmpsl
in
xchg
adc
dec
cli
xchg
cmpsl
pop
mov
lcall
mov
or
daa
push
xchg
ret
icebp
dec
cmc
leave
aam
sahf
push
movsb
xchg
stos
sti
cmp
sarl
test
sti
mov
pop
insl
subb
in
sub
je
jns
adc
lcall
sub
sbb
mov
cwtl
sub
jle
jp
dec
jmp
and
pop
jne
setns
mov
aaa
stos
mov
xchg
or
fcomi
test
icebp
lea
push
sbb
hlt
xor
flds
pop
stos
push
mov
jb
mov
addr16
xchg
stos
lods
mov
push
cmp
mov
dec
mov
and
jb
and
mov
lcall
cmp
jp
mov
push
jle
lds
or
repnz
adc
dec
cmp
mov
mov
fwait
nop
jmp
cmp
and
add
mov
xlat
cmpsb
pop
jge
push
arpl
movsl
fisubrl
nop
adc
mov
imul
cltd
js
dec
cmp
aam
push
dec
les
outsb
jns
jnp
test
das
sbb
rorl
add
and
or
pop
test
enter
or
cwtl
mov
mov
in
movd
je
sbb
xor
dec
cwtl
jle
mov
insb
adc
xlat
xchg
notb
out
shll
rorb
sbb
adc
data16
pop
pop
inc
pop
xchg
dec
lret
movsl
sbb
push
add
outsl
pop
and
push
sti
mov
aas
mov
xchg
ss
call
int
or
fcompl
jp
mov
es
test
mov
push
cmc
push
push
dec
jecxz
or
lds
inc
mov
ror
dec
jg
mov
mov
test
pushf
cmpsb
js
mov
int
repz
fcomps
fstl
pusha
and
push
ss
je
push
je
ss
or
data16
fs
scas
lahf
xchg
cmp
and
pop
mov
mov
movsl
fs
lods
fmuls
arpl
ret
sarl
rorl
add
pusha
mov
cmp
xchg
ret
loop
sub
fwait
popf
fxch
push
xchg
xchg
jnp
aaa
popf
or
insb
movsb
je
outsl
xlat
neg
test
xchg
pushf
push
ror
test
xchg
lret
adc
inc
and
jns
add
addr16
lret
pop
adc
push
mov
mov
cmp
insl
jno
mov
cltd
dec
mov
xor
xor
fadds
lahf
push
call
movsl
xor
subb
adc
mov
mov
mov
inc
pop
fwait
loop
popf
das
and
stos
aam
pop
out
mov
sbb
jb
and
das
sub
fistps
push
rorl
ss
sti
test
adc
int3
add
pop
hlt
leave
xchg
cmp
push
cwtl
scas
ja
mov
mov
shrb
dec
std
jno
loop
lret
fidivrs
push
or
pop
mov
or
mov
mov
pop
in
pop
fiadds
sub
cmpsl
test
jno
bound
jmp
cmp
mov
jbe
push
push
mov
pusha
das
pop
cmp
out
insb
mov
push
fcoms
dec
mov
lds
ds
mov
scas
jge
push
sbb
sbb
es
mov
int
das
loope
or
sbbb
dec
gs
fnstcw
sub
fldl
inc
popf
out
test
and
pop
in
mov
sub
adc
or
jmp
aaa
cmpsl
or
stc
mov
mov
int
sarl
hlt
out
loop
lock
jns
lods
push
mov
repz
pusha
sarb
jns
arpl
daa
test
push
fdivr
xor
es
loop
mov
sbb
test
cmpsl
pop
mov
mov
scas
jae
dec
mov
sub
call
or
pop
outsb
subb
into
loope
jnp
ss
push
mov
mov
mov
stc
mov
popf
dec
pop
add
pop
sub
stos
stos
add
js
or
jno
shlb
cmc
sbb
js
test
push
insl
mov
ffreep
test
jp
notb
lcall
mov
stc
push
ret
xlat
int
repz
outsb
jno
jne
push
jae
mov
push
out
push
and
in
xor
cmp
mov
test
mov
mov
push
in
jl
movsb
in
sub
sub
ja
arpl
stos
outsl
xor
je,pn
push
cmpsb
in
js
xchg
gs
xchg
inc
xchg
pop
adc
xchg
call
xchg
xor
mov
inc
inc
in
test
xor
jb
push
jns
sbb
xor
mov
jne
cltd
or
rolb
and
push
add
lea
pop
js
outsb
xor
stc
fdivrs
mov
lock
push
mov
jge
xchg
lock
mov
sub
sti
pop
push
pusha
mov
inc
imul
ss
repnz
pop
add
inc
add
lock
stos
inc
xchg
mov
xor
cmp
push
cwtl
or
push
incb
and
lret
pop
cwtl
and
in
pop
xchg
mov
push
rorl
pusha
dec
jb
iret
lock
lahf
sbbb
cmp
sahf
sub
in
or
or
and
fs
insb
iret
jmp
dec
pop
mov
add
add
cli
and
add
and
jmp
movsl
and
aad
xor
repz
mov
jmp
cli
mov
mov
negb
ret
aaa
or
sbb
mov
mov
lea
iret
add
push
stc
out
pusha
sbb
lret
xor
scas
mov
stc
mov
in
push
popa
in
in
sahf
cmc
adc
xorb
popa
cmp
enter
aas
rorb
inc
xlat
dec
inc
mov
aad
add
inc
dec
sbb
fstps
inc
call
popf
aam
dec
ret
jne
pusha
pop
leave
jae
or
mov
push
push
clc
std
or
pop
adc
add
hlt
mov
add
mov
jne
mov
jp
sub
mov
mov
mov
inc
jge
adc
popf
out
cmp
movsl
jns
adcb
and
arpl
call
cmp
repnz
mov
and
std
inc
aam
leave
adc
cmp
lret
lret
inc
inc
add
or
xor
scas
idivl
mov
mov
cmpl
sbbl
lods
ret
leave
stos
data16
loopne
xorb
sbb
push
gs
mov
psubsb
pop
in
sub
orb
sahf
les
ret
clc
cwtl
inc
aas
mov
inc
mov
mov
dec
pop
push
in
jo
mov
hlt
cli
sub
mulb
sbb
scas
xor
inc
filds
sub
scas
dec
push
adc
idivb
sbb
fisttpl
fistps
sub
push
pop
cmp
add
mov
roll
aaa
xchg
jno
cmp
or
pusha
and
jo
or
in
jb
or
mov
add
cltd
dec
mov
cmc
xor
cwtl
inc
cmp
lock
xor
mov
sti
jg
jo
repnz
jmp
jg
xor
rcll
leave
imul
pusha
mov
sub
les
adc
lds
je
lds
fs
and
pop
mov
int3
push
dec
fcmovnbe
mov
lahf
fiaddl
cmp
pop
ret
jecxz
xlat
sub
pop
popa
sbb
popa
inc
leave
lock
push
lds
clc
push
inc
xchg
idivl
add
les
sub
mov
cs
push
pop
mov
mov
repz
lcall
push
and
push
mov
ret
lret
mov
mov
xlat
decl
fldenv
push
xchg
push
mov
or
daa
xlat
nop
outsl
arpl
mov
mov
lcall
pushf
mov
test
cmp
rcll
in
or
xchg
jns
jnp
rcrb
clc
mov
mov
jl
in
stos
cmp
rol
mov
inc
fisubrl
ds
dec
iret
ret
pop
xor
inc
fistl
push
pop
lahf
mov
jl
sbb
ltr
xchg
push
movsb
xchg
sbb
fs
shrl
adc
fcoml
inc
ja
imul
sub
syscall
push
rorl
sti
adc
lods
mov
sub
inc
cmpsl
cmp
movsb
dec
mov
push
inc
or
sti
pop
adc
push
jb
xchg
jae
jle
aam
movsl
in
sub
shll
cmp
mov
inc
pusha
pop
js
and
outsl
jno
dec
xor
and
xchg
test
and
push
and
loope
pusha
mov
icebp
adc
mov
lods
xor
pop
or
ret
mov
pop
idivl
repnz
bound
and
or
arpl
jge
ret
pushf
sub
cmp
hlt
xchg
bound
push
stc
sub
jb
xor
inc
jo
adc
sahf
arpl
pop
repnz
mov
adc
or
push
mov
jns
pusha
mov
subb
rcll
call
jg
int
sub
jecxz
loopne
icebp
mov
aam
xor
pop
inc
daa
push
cs
and
sbb
fcmovu
out
mov
in
rcl
test
nop
push
movsb
push
mov
jg
js
mov
fsubs
push
in
mov
add
in
cmc
push
sub
or
test
ret
test
sarb
inc
imul
aam
cmp
std
adc
push
int3
cmp
mov
push
scas
xor
push
test
cmp
inc
mov
fdecstp
sbb
xor
icebp
push
fidivrs
addr16
fs
mov
sbb
xor
sub
push
daa
dec
or
lds
scas
stos
pop
dec
call
push
xchg
lea
cmpsb
and
cmp
sbb
imulb
andl
push
les
sub
jae
aad
mov
dec
ret
push
sub
adc
frstor
negl
xchg
pop
sti
mov
mov
mov
popf
aad
imul
xlat
test
xchg
xchg
lea
lods
ss
or
dec
push
test
pop
dec
scas
notl
xchg
pop
fdiv
mov
mov
mov
xor
cmp
test
in
add
lock
stos
or
jo
adc
inc
mov
pop
add
insb
xchg
test
jno
into
jnp
outsb
ja
mov
sub
or
addr16
xchg
xchg
mov
jge
int
push
xor
mov
mov
push
jecxz
cmp
mov
xor
pushf
fcompl
dec
cs
sub
cmpsb
pop
icebp
sub
std
insb
adcl
out
dec
out
andl
push
mov
in
orb
pop
push
mov
sub
push
negl
gs
lea
and
addr16
mov
in
lret
pop
mov
outsl
pop
sub
inc
outsl
push
leave
push
std
or
mov
pop
cmp
ljmp
add
into
je
cmp
loopne
and
lea
shlb
outsb
clc
dec
pushf
pop
test
add
mov
push
xchg
and
sbb
in
rolb
push
cwtl
and
rolb
xor
clc
ficoms
push
inc
xchg
or
mov
iret
xorl
imul
push
mov
stos
out
bound
xlat
mov
outsb
xor
popf
add
dec
iret
inc
std
lret
xor
mov
mov
inc
add
pushf
or
push
add
cmp
mov
pop
enter
movsb
shl
ja
xchg
loopne
addr16
addr16
jp
mov
call
sub
in
fwait
jo
dec
lcall
lcall
cmp
inc
jne
das
push
push
ljmp
add
hlt
ja
mov
adc
cmp
xor
sub
cmp
cmc
sahf
xchg
cmc
daa
sti
push
mov
lret
push
sub
pop
je
sub
inc
or
das
inc
repz
rolb
scas
cld
in
cmpsb
cmp
pushf
mov
cmpsl
divb
dec
mov
pop
add
mov
cmp
inc
push
sub
add
push
call
add
push
mov
lret
adc
cmp
ret
inc
test
or
pop
mov
pop
sub
and
sub
sbb
cmpsl
aam
sub
jo
or
jecxz
and
push
sbb
nop
clc
and
adc
mov
dec
mov
into
mov
mov
push
dec
jecxz
pop
push
cmp
sub
stos
into
imul
int3
xchg
or
jl
imul
sub
sbb
aas
xor
push
jno
mov
mov
dec
rorb
icebp
mov
mov
adc
arpl
jge
mov
adc
dec
mov
mov
imul
jb
add
add
cmp
outsl
add
mov
cmc
mov
adc
call
int3
adc
stos
cltd
mov
push
mov
cmpsb
sbb
lret
lds
mov
stos
or
test
adc
dec
or
hlt
movsb
cmpl
addl
ss
sub
scas
xchg
cmp
xor
in
sub
addr16
stos
aam
inc
dec
mov
pusha
push
outsb
mov
jns
lods
mov
xchg
iret
sahf
xor
dec
stos
pop
jecxz
jg
jbe
push
popf
cmp
sarl
adc
mov
mov
ret
ficoms
jecxz
mov
jne
dec
sub
dec
xchg
sub
das
cltd
sub
push
sub
mov
dec
sbb
les
fwait
or
xor
dec
in
mov
sar
stc
cs
jno
mov
loop
scas
icebp
mov
movsb
ljmp
loope
jnp
bnd
inc
lock
out
or
loop
dec
push
mov
inc
in
or
adc
sbb
loop
lods
cwtl
fwait
mov
stos
add
jecxz
stos
mov
loopne
dec
cmp
mov
ret
arpl
xor
inc
push
ds
and
jae
mov
lea
sti
iret
xchg
push
lds
rcrl
scas
xlat
inc
jl
add
in
insl
add
in
sub
push
fucomip
stos
dec
jne
jp
jae
jle
in
add
loopne
cmp
pop
jne
pop
sbb
fidivrs
scas
push
jo
cld
jbe
gs
mov
inc
iret
mov
test
cmp
jmp
fnstenv
push
xchg
mov
inc
sub
lea
cmpsl
push
dec
inc
inc
pop
and
adc
adc
in
pop
pop
pop
or
clc
push
sbb
push
outsl
movsb
jle
pop
ds
add
dec
push
adc
repz
push
mov
loope
mov
stos
jo
test
mov
add
outsb
es
inc
sub
add
push
cmp
push
mov
call
mov
iret
xchg
add
cmp
add
out
dec
aaa
push
adc
insb
pusha
jbe
push
repnz
nop
push
repnz
mov
aad
and
sbb
cmpsb
ficoml
into
cltd
fcmovnbe
jbe
in
and
sub
sub
das
cmp
xchg
lret
flds
sbbb
pop
or
fadds
cmpsb
adc
push
rorb
mov
adc
movsl
jnp
movsb
cmp
stc
lods
arpl
fmulp
repz
and
pop
xchg
adc
and
jne
dec
and
iret
mov
cmp
mov
add
or
xor
mov
dec
adc
and
out
fldl
cmpsl
pop
or
push
mov
adc
push
movsb
push
jo
add
scas
sub
pop
xchg
sbb
xchg
mov
jnp
push
dec
pusha
fldt
pop
popa
sti
jne
add
les
mov
int
xlat
jmp
xor
adcl
into
leave
into
in
xlat
jge
icebp
add
les
dec
jno
add
icebp
lods
mov
jecxz
jns
decb
jbe
jp
cmpsl
bound
cmp
repnz
mov
or
lret
pop
aaa
stc
mov
xor
adc
pop
sbb
lcall
cmpsl
mov
insl
push
fisubl
daa
pushf
add
xlat
sbb
testl
mov
mov
out
inc
outsb
pop
cmp
in
cmc
push
sti
in
xor
std
fs
scas
add
pop
or
adc
jecxz
jae
xor
in
push
loope
fcmovb
lods
or
je
mov
inc
push
jne
jl
jg
adc
cltd
fildll
jb
xchg
and
mov
xchg
inc
lret
xlat
sub
lea
pop
rclb
xchg
test
or
daa
jmp
lds
mov
xor
jno
mov
pop
adc
test
mov
test
pop
aam
lret
jb
pop
test
clc
repz
push
cmp
push
push
mov
and
cli
stc
or
dec
push
adc
dec
dec
in
sbb
les
ds
dec
dec
xor
pandn
add
mov
movsl
and
in
scas
pop
sub
mov
ret
xchg
pop
cmpsb
fwait
xchg
add
pop
inc
imul
fsubrs
mov
sbb
push
mov
fcomi
and
jbe
pop
push
out
dec
sub
pop
jle
cmp
fwait
pusha
sub
in
pop
mov
imul
adc
xor
xor
bound
shlb
sahf
pop
add
in
mov
in
mov
mov
cmpsl
jbe
cmp
shlb
push
pop
jg
aas
cli
loopne
hlt
mov
sar
imul
mov
dec
aad
xchg
ss
add
mov
and
loope
clc
push
or
lock
xchg
xchg
outsb
or
es
push
jnp
xchg
sahf
in
fbstp
mov
cmp
repz
mov
jbe
pop
pop
lods
test
inc
fldenv
nop
mov
in
xchg
arpl
xchg
fwait
leave
inc
push
aam
dec
enter
fdiv
ja
xlat
fcmovnu
push
xchg
dec
push
xchg
jno
xorb
push
cmpsb
mov
leave
decl
push
in
int
mov
adc
popa
lahf
lahf
xchg
add
jnp
and
dec
inc
adcl
push
and
push
and
cmp
fwait
cltd
cmpsb
and
sbb
xor
xchg
add
jne
movsb
test
stc
or
inc
mov
mov
cmp
adc
lods
aad
mov
xchg
pop
sbb
sti
dec
jle
jns
cmp
mov
inc
jmp
cmp
pop
pushf
and
das
mov
int
outsb
lods
aaa
dec
pop
je
pop
mov
cmp
jns
lea
cmp
fstpl
cmp
xor
xchg
or
clc
jmp
sbb
sbb
xchg
xlat
xchg
std
cltd
sub
xchg
cmp
jecxz
adc
leave
xlat
xor
mov
add
xlat
jbe
rcr
pusha
leave
les
pop
shll
sub
jne
subl
cld
mov
fsubr
mov
mov
mov
xor
push
out
lods
jne
mov
adc
ljmp
dec
fdivrl
cmp
jecxz
pop
pushf
adc
jnp
enter
sub
ja
mov
cmpsb
ss
inc
dec
je
inc
push
sbbb
sbb
adc
jge
mov
sbb
xchg
and
inc
lahf
lcall
add
mov
xor
xchg
mov
scas
jne
and
ret
ret
add
inc
dec
dec
sub
pushf
cmpsb
push
test
sbb
inc
test
push
scas
mov
ficoms
call
aas
sbb
lret
push
mov
cmc
lods
jne
sub
sahf
aaa
ljmp
mov
jae
imul
jo
inc
lea
pop
test
and
mov
gs
cmp
orl
push
fldt
inc
sub
push
sti
stos
fdivp
insb
xchg
sbb
xchg
add
jne
ljmp
jp
push
popf
nop
std
xor
add
push
lock
xchg
pop
faddp
push
lea
or
mov
call
das
test
xor
push
dec
and
cltd
mov
insb
xorps
scas
or
dec
xor
aaa
and
cs
bound
mov
xor
jbe
pop
add
push
je
add
mov
loop
loope
repz
leave
mov
xchg
hlt
sbb
mov
fldt
imul
pop
adc
repnz
mov
xchg
std
outsb
iret
pop
loopne
arpl
mov
je
jecxz
stc
sub
inc
mov
iret
add
mov
add
xchg
mov
mov
pop
call
rclb
bound
in
mov
jns
je
inc
out
call
lea
sbb
in
loope
call
icebp
add
shrl
add
test
jbe
and
cmpsl
mull
icebp
sbb
mov
and
rorb
lahf
dec
lds
out
mov
inc
adc
rorl
les
mov
inc
jl
push
xor
push
cmp
inc
jg
sbb
arpl
mov
xchg
lods
fdivp
movsb
rcll
jp
lcall
push
test
push
ret
lret
mov
inc
sahf
lea
mov
or
jg
dec
pop
repz
insl
jno
or
je
aad
mov
xor
add
xor
shll
dec
shlb
pushf
dec
insl
shll
int
jo
mov
loopew
insb
fbstp
push
lcall
sahf
pop
sarl
inc
mov
jo
js
aam
sbb
daa
cmp
inc
jmp
aas
and
in
inc
jecxz
pop
pop
pushf
jmp
xor
stos
xlat
sbb
repnz
int
test
outsl
xchg
mov
mov
and
cmp
push
movsb
inc
push
adc
std
jl
jp
dec
out
ds
in
fdivs
jmp
daa
xor
jnp
sahf
dec
add
aam
ds
js
lods
sub
ret
movsl
test
jb
jl
dec
cmp
xlat
cli
or
mov
in
imul
mov
mov
and
mov
cs
fdivrp
int
in
pop
inc
repnz
scas
pop
call
mov
mov
inc
push
mov
push
xlat
addl
jg
xchg
jmp
leave
icebp
imul
in
dec
aas
popa
jmp
adc
jno
mov
pop
pop
inc
addr16
cmp
xchg
or
in
gs
lea
filds
insl
cmp
push
loopne
fldenv
xchg
jmp
mov
je
cwtl
sub
int3
cs
lock
in
mov
daa
lret
test
sbb
bnd
mov
pushf
sbb
xor
sbb
rorl
std
lds
xchg
dec
adc
adc
int
jo
jg
cmp
in
sbbb
jle
and
scas
ror
mov
pop
mov
mov
cltd
xor
fsubl
test
cli
xchg
mov
lcall
pop
sub
movsl
fwait
pop
int
popa
ljmp
sub
fwait
inc
xor
ret
dec
xchg
ds
sub
dec
test
cs
fmull
jno
inc
sub
pop
lods
mov
xor
cltd
jbe
jecxz
mov
aaa
dec
add
xor
nop
pop
xor
repz
insb
mov
rol
add
test
mov
movsb
cmp
test
dec
inc
repz
out
push
sbb
adc
test
xor
cmp
lahf
loop
jmp
or
lea
shrb
shll
dec
jge,pn
stos
stc
or
outsb
xlat
lahf
scas
pop
fisttpl
xor
mov
mov
test
std
mov
adc
loop
movsl
imul
negl
or
daa
mov
xchg
sbb
jmp
mov
pop
rolb
xchg
sub
scas
push
lods
add
in
orb
cmp
shl
shll
xchg
mov
into
push
and
sahf
ss
dec
and
mov
xchg
mov
ror
dec
push
inc
lock
pop
and
mov
std
in
inc
xor
fisttps
mov
pusha
lahf
xchg
lahf
loope
shlb
lahf
out
mov
jp
imul
sbb
inc
popf
sub
sbb
test
mov
and
loop
xor
or
sti
nop
or
pop
daa
inc
push
pop
mov
and
test
bound
outsl
and
cmpsb
stos
test
outsl
xor
test
cmpsl
adc
mov
jmp
dec
fwait
adc
push
jbe
adc
out
aad
mov
mov
sub
arpl
loope
pop
add
test
lds
in
xor
aam
pop
movsl
fisubrs
add
hlt
rorl
gs
ljmp
outsl
push
sar
arpl
mulb
aaa
adc
mov
test
push
pop
xchg
adc
cmp
enter
lea
sub
lods
and
or
xchg
pop
ljmp
shll
stos
js
push
or
dec
frstor
mov
filds
cmpsb
in
xchg
lds
push
push
jae
icebp
rclb
outsl
lret
xlat
pusha
mov
loop
or
or
inc
pushf
dec
adc
lret
aam
mov
mov
mov
inc
arpl
push
mov
in
mov
mov
nop
aad
data16
sub
popa
aad
push
inc
cmp
inc
xchg
jbe
hlt
sub
and
pushf
in
rorb
jno
mov
xor
adc
jg
jo
xchg
push
mov
dec
shl
push
das
sahf
push
inc
push
into
xlat
lods
rcrb
jb
test
sub
jle
popf
pop
out
bound
movb
mov
jge
or
mov
lods
lret
mov
jg
frstor
pop
sbb
adc
lods
dec
js
adc
push
dec
inc
mov
jnp
jecxz
leave
fnstcw
mulb
sbbb
add
fsubs
mov
int3
inc
and
mov
or
movsl
pop
sub
dec
xchg
test
jb
jecxz
arpl
loopne
pop
mov
pop
sbb
or
in
jp
mov
rolb
pop
call
in
js
gs
xorb
ret
jecxz
add
repnz
in
mov
ds
inc
cmp
xor
enter
int3
imul
test
pop
mov
jmp
or
jmp
or
push
cmpl
jns
sub
xor
gs
mov
out
sbb
ret
jae
out
push
clc
add
pop
cmp
inc
mov
arpl
pop
pop
mov
inc
mov
lahf
cli
jns
push
mov
ret
sbb
push
cmp
pop
int
dec
std
hlt
insb
test
cmc
sub
fwait
jo
sbb
inc
cmp
test
adcl
push
cmp
aaa
dec
pop
rorl
or
gs
test
push
push
movsl
push
sbb
aaa
call
sbb
jae
inc
mov
and
add
and
fstps
sarl
fisubrl
mov
cld
or
lret
or
lcall
imul
and
xlat
loopne
adc
mov
dec
rorb
push
out
test
pop
mov
jle
shlb
sarl
movsl
sti
mov
and
sbb
cwtl
xchg
xchg
test
mov
insb
sbbb
aaa
push
inc
mov
mov
sbb
or
mov
xlat
dec
cli
adc
movsb
scas
test
mov
jge
popf
dec
sbb
dec
adcb
addr16
mov
add
mov
add
fadds
mov
inc
mov
sub
popf
ret
out
imul
cmp
sbb
xor
dec
lret
lahf
adc
dec
pop
rcll
and
lods
xor
xchg
inc
jb
push
daa
fistpl
dec
js
jbe
cmp
push
popf
jbe
lahf
push
mov
and
sahf
testl
je
adc
nop
push
adc
xor
nop
cmpsl
out
xchg
xor
mov
mov
hlt
lods
adc
es
add
ret
or
mov
push
gs
sbb
cmpsl
in
xchg
std
jp
clc
mov
iret
xchg
or
jecxz
cmc
jmp
jp
lcall
mov
inc
lcall
stos
xlat
sbbb
jne
push
addr16
cmpsb
int3
icebp
push
adc
icebp
add
lea
addr16
xchg
js
xor
push
dec
lods
mov
xchg
jae
jl
je
push
xchg
outsl
add
pop
fchs
mov
pop
imul
stos
xchg
add
and
xchg
xchg
adcb
enter
push
jmp
dec
enter
sub
stos
out
mov
outsb
test
push
stos
fucomip
pop
mov
xchg
jmp
mov
pop
ss
adcb
fsubr
cmpsb
mov
movsl
orl
mov
inc
adc
mov
cld
xlat
movsl
sub
insl
insb
jne
fistpl
test
jnp
inc
iret
pushf
icebp
pushf
lock
cld
call
jmp
fstl
cmpsl
lahf
fisttpl
xor
jo
ret
out
pop
lds
push
push
cwtl
push
outsl
inc
dec
ljmp
cmc
cli
inc
sub
jmp
mov
data16
dec
pop
adcl
jnp
and
movsb
mov
mov
clc
in
aas
xor
xor
fwait
ja
push
cld
fnsave
cwtl
inc
sti
sbb
js
mov
ret
sahf
popa
loop
into
je
jo
cmp
adc
pop
and
fldl
in
pop
outsl
dec
ja
push
inc
sbb
sbbl
or
pop
sbb
mov
jp
cwtl
add
outsl
push
dec
outsl
stos
stc
dec
out
fimull
jle
mov
negl
ja
out
lea
scas
mov
fdivl
fdivp
inc
imul
scas
pop
movsb
inc
in
dec
stos
out
test
mov
in
cmp
mov
jnp
push
pop
inc
xchg
jo
inc
sbb
and
test
dec
or
icebp
outsl
gs
ficoml
in
jb
jo
sti
mov
arpl
mov
decb
dec
mov
xchg
out
add
mov
sub
out
pop
cli
pop
imul
mov
mov
jbe
cmp
push
jnp
cmp
cmpsl
ds
push
sarl
sub
cmp
or
dec
stos
xor
add
push
mov
test
mov
push
sahf
into
scas
mov
int3
fisttps
pop
sti
leave
inc
stos
incb
negb
dec
push
pop
mov
mov
aam
std
mov
mov
dec
insl
test
xlat
iret
lds
dec
filds
sub
xchg
into
repz
mov
add
cs
sahf
leave
lcall
into
pop
inc
jnp
push
add
sub
push
mov
rolb
xor
fnstsw
je
push
icebp
adc
sbb
dec
push
lock
test
mov
mov
imul
decb
cmc
mov
imul
outsl
fiadds
ret
das
lock
test
sbb
or
jnp
bound
je
push
jne
mov
popa
dec
jne
mov
mov
jg
xchg
xor
jp
mov
xchg
mov
xor
lret
mov
sub
adc
imul
and
fnstsw
fstp
adc
xchg
and
roll
lret
add
in
dec
mov
mov
jle
mov
inc
cmpsl
je
mov
repnz
fidivl
cs
lret
jg
mov
test
insb
push
and
push
cld
sub
mov
stc
jae
sbb
icebp
mov
dec
pop
push
pusha
lods
mov
mov
std
cmpsl
test
bound
stos
cmc
jp
mov
popf
xlat
pop
push
and
cmpsb
mov
pop
psllq
xchg
in
push
xor
popa
cmc
push
jns
icebp
bt
arpl
popa
in
jle
test
dec
mov
mov
cmp
and
les
daa
xor
push
outsl
repnz
enter
addb
fildll
cld
mov
push
out
jbe
inc
xchg
inc
sysenter
inc
pop
inc
dec
sbb
adc
shrb
mov
dec
jno
lock
into
and
fwait
icebp
cmpsb
push
mov
and
stos
jno
inc
cmp
dec
push
mov
aam
mov
imul
call
fmuls
xchg
or
loop
dec
je
nop
test
fdiv
inc
jmp
adc
jns
dec
mov
or
mov
es
xchg
popa
jl
mov
int
push
mov
cmp
mov
rcl
cmp
mov
ja
add
jmp
addb
push
inc
ds
jb
pop
negl
jmp
cmpb
pop
xor
sub
int
ss
sti
mov
dec
xlat
rcl
pop
or
jo
cwtl
leave
outsb
xor
shr
scas
sub
dec
in
loop
mov
cmpsl
and
sbb
insl
mov
jmp
and
push
rcll
mov
xor
pmaddwd
out
xchg
xor
xchg
pop
jg
sbb
sub
jbe
dec
outsl
xlat
xor
cmp
fadds
popf
mov
add
es
ss
jmp
hlt
xchg
andl
mov
jmp
adc
xor
jo
dec
pop
repnz
inc
xor
mov
leave
imul
mov
fistps
or
xorl
dec
and
sbb
jl
movb
dec
lret
or
xchg
adc
cmp
testl
pop
stos
adc
dec
inc
push
nop
cmpsb
push
jns
mov
in
scas
test
aad
out
pop
ss
cs
mov
lahf
in
jle
scas
sbb
xor
out
hlt
jne
ss
les
push
adc
je
movl
and
pop
into
adc
mov
shlb
pop
in
into
shll
insb
xchg
dec
inc
xlat
dec
sahf
lock
fs
mov
addl
sti
aas
sbb
mov
fmuls
and
inc
cs
jns
sub
ja
out
xor
pusha
sti
pop
cmovg
sti
dec
add
daa
loopne
fisubl
test
push
pop
outsb
inc
add
mov
jmp
and
into
popa
add
mov
push
mov
rcrb
arpl
imul
ss
lret
sbb
sbb
rorl
jno
leave
shlb
insb
xor
mov
loope
and
sbbl
cmp
push
sbb
shrl
addb
je
sbb
ret
pop
ja
sub
add
test
movsb
fwait
and
dec
mov
lret
dec
ds
lods
fists
in
iret
push
dec
aas
fdivs
leave
lds
mov
adc
test
or
and
cmp
xchg
imul
xchg
push
addb
add
das
in
jmp
mov
or
aad
insb
jbe
mov
adc
pop
mov
xor
enter
adc
mov
repz
dec
xchg
push
push
cmc
lds
dec
pop
xchg
cmp
rorl
push
or
push
in
pop
jno
cmc
mov
push
test
xor
fistl
mov
push
push
xor
std
popa
pop
dec
xchg
push
pusha
js
insb
xor
push
and
mov
pop
push
mov
mov
or
test
shll
cmpsb
mov
inc
call
inc
das
movsb
mov
lock
aam
cs
in
testb
clc
mov
fcmovnu
int3
nop
stc
lret
lret
ljmp
xchg
push
lret
lds
jo
adc
rcr
jnp
or
jmp
lcall
push
dec
or
pop
nop
cmp
popf
jo
lcall
sbb
js
loopne
ss
mov
jle
or
pop
mov
call
stos
dec
mov
xchg
xor
decl
mov
adc
pop
cld
xor
ja
push
into
xchg
faddl
loope
arpl
je
mov
xchg
in
shrl
xor
sbb
lock
icebp
fstpt
lock
sub
cmp
dec
hlt
mov
out
sub
inc
mov
xchg
mov
xor
sub
inc
or
mov
pop
adcl
daa
push
stos
js
test
pop
lret
lret
je
cmpsb
imul
test
call
ds
enter
push
aad
mov
movsl
enter
or
inc
jne
out
jno
push
jns
out
js
nop
mov
xor
int
and
jbe
lods
xchg
cmp
xchg
sub
out
mov
sub
enter
jecxz
rcr
lods
sbb
push
pushf
dec
out
xchg
mov
out
sti
nop
les
or
or
jmp
mov
into
or
push
not
mov
aam
fcomip
pop
xchg
or
dec
xor
test
test
pop
or
cmp
jo
cld
add
pusha
cwtl
enter
test
int
add
mov
rorl
sbb
mov
mov
arpl
pop
push
arpl
bound
mov
jge
sahf
pusha
jg
cmp
or
imul
sub
push
pop
lds
push
out
shlb
sub
mov
xchg
bound
rcrl
enter
mov
ret
cli
out
jb
dec
std
mov
call
and
pop
scas
cld
sbb
sub
je
dec
xchg
xor
inc
aaa
adc
jmp
pop
inc
or
cwtl
gs
adc
ds
jbe
push
bound
int3
push
or
fstpt
dec
jno
in
mov
inc
int
and
push
xor
sbbb
int
lcall
movsb
mov
pop
push
mov
mov
clc
daa
ficomps
xor
push
inc
fadd
mov
cmp
or
push
adc
dec
fs
in
negb
xor
aas
xor
and
jecxz
mov
test
mov
mov
gs
int3
mov
hlt
jns
xor
fimull
fwait
add
into
sub
ja
jl
sahf
dec
popa
sahf
sti
add
xchg
pushf
sub
jmp
pop
aam
xor
in
xchg
popf
jnp
dec
in
orl
movsb
fidivl
pop
test
nop
insb
bound
mov
cmpsb
call
push
fnstsw
pop
test
push
dec
mov
mov
inc
inc
sbb
mov
mov
sub
add
outsl
add
in
sti
ret
je
or
lahf
lcall
sbb
test
leave
xor
or
inc
mov
jg
pop
or
neg
sub
mov
push
mov
int3
mov
cmp
push
shll
push
dec
pop
scas
ljmp
movl
and
mov
scas
mov
push
mov
xchg
xor
xor
xchg
dec
sbb
add
sbb
pushf
sub
mov
add
push
push
fcmovnb
orl
fstl
shrb
fcmovnb
pop
jge
adc
cmp
inc
fldl
loopne
cmp
mov
dec
mov
daa
mov
mov
xor
xchg
test
mov
call
test
ja
negl
clc
mov
push
lods
pop
pusha
mov
addr16
xor
pop
das
idiv
mov
lods
fucomip
or
adcb
ret
cmp
push
repnz
add
lret
adcl
sahf
incl
jp
mov
mov
cld
shlb
ret
les
loope
cmpsb
xor
je
cmpsb
dec
das
cld
jae
adc
rol
divl
outsl
cmp
xchg
int
repnz
jge
aaa
insb
pop
mov
cltd
scas
call
stos
mov
pop
repz
jae
inc
add
sbb
cmp
das
push
fs
lcall
clc
test
jg
xchg
test
icebp
setge
roll
fisttps
scas
fs
movsb
pop
or
sbb
inc
fs
jno
rol
xchg
inc
ret
push
cmc
mov
lahf
sbb
push
insb
jmp
out
dec
add
notb
pop
push
aaa
push
testb
jne
jns
mov
andl
aad
inc
push
test
pop
cwtl
decl
fmull
cmp
cmpb
repnz
add
inc
mull
sbb
sbb
pop
loope
jb
loop
loope
pop
sub
daa
imul
test
mov
popf
cmpsb
jmp
lret
shll
lods
or
loopne
ror
mov
dec
jbe
adc
xor
sub
xchg
sub
int
and
mov
or
adc
or
in
sub
pop
mov
jnp
rol
xchg
jo
inc
imul
push
push
xchg
mov
icebp
inc
fisttpll
sub
dec
add
mov
mov
cmp
ljmp
cmp
imul
or
notb
or
ds
cs
shl
cmp
movsb
fnstsw
sub
jns
xor
or
sub
or
ss
rep
adc
push
sbb
xchg
negb
sbb
push
jne
xor
icebp
xchg
cs
pusha
cmp
movsl
out
insb
stos
sub
popf
hlt
fdivrl
idivb
call
mov
pop
or
pop
adc
call
loope
push
and
mov
xchg
push
fst
xchg
in
shrl
inc
shll
test
dec
adc
loop
pop
daa
in
add
pop
cmp
inc
jecxz
jo
add
add
ss
jns
dec
push
dec
mov
mov
sub
flds
daa
jle
sbb
pop
and
jmp
dec
push
ja
sbb
inc
push
lret
cli
insb
dec
adc
sub
into
std
dec
push
dec
es
aam
sbb
out
adc
lds
or
clc
xchg
je
repz
int
scas
mov
inc
sti
inc
clc
or
sbb
cwtl
mov
int3
dec
push
into
test
std
rclb
enter
mov
out
mov
lock
mov
xor
fiadds
fldl
mov
mov
cs
sbb
leave
dec
shll
jnp
lahf
xchg
cmp
cmpsb
push
dec
jge
test
outsb
cs
and
mov
call
push
ret
add
jge
js
mov
bound
mov
mov
nop
adcl
les
mov
inc
or
jle
add
lret
ret
imul
or
je
cli
sub
and
mov
test
nop
mov
adc
lods
mov
mov
sbb
mov
mov
xlat
pop
jp
mov
mov
out
add
test
push
fucompp
pop
cld
jp
mov
mov
fidivl
jo
mov
and
ljmp
ja
mov
loope
lods
jge
and
data16
mov
test
ucomiss
je
mov
out
pushf
push
cmpsl
andps
and
add
cs
fs
ss
push
andb
inc
in
jo
jl
repz
cmp
push
push
cmp
add
and
loop
adc
fwait
and
xchg
lock
shlb
xchg
in
sbb
pop
imul
fiaddl
pop
adc
cmpsb
loop
fisubs
lods
into
cmp
jnp
mov
repz
in
ljmp
ret
bound
mov
mov
hlt
shrb
inc
sti
faddl
mov
jecxz
lcall
mov
hlt
pop
mov
and
mov
decl
dec
loopne
std
sub
lods
jne
daa
sub
mov
bound
or
scas
scas
mov
mov
repnz
test
ja
mov
pop
test
shll
mov
and
push
dec
or
into
repnz
cs
mov
pop
aas
into
jne
push
repnz
enter
loop
int3
ljmp
and
insl
mov
and
inc
fistl
xor
loope
rolb
subl
xchg
fcmovnb
pop
mov
sbb
ja
data16
js
mov
aad
push
inc
or
sub
aad
hlt
dec
sub
inc
xor
or
lods
sub
xchg
lock
push
sub
or
and
pop
bound
lcall
iret
out
mov
sbb
xor
push
mov
fisttpll
xor
jmp
outsb
cmp
fcmovnu
inc
pop
out
dec
mov
stos
out
pop
in
and
sub
leave
cltd
loope
add
xchg
or
xlat
inc
rclb
loope
mov
add
cli
mov
rorb
mov
pop
adc
rcr
arpl
std
loope
clc
push
clc
xor
jbe
inc
mov
sbb
xchg
incl
pop
fdivrs
pop
cmpsb
xchg
or
lock
je
insb
xchg
xchg
stc
nop
pop
fimuls
xchg
cmp
pop
sbb
inc
sub
lret
pop
jg
jmp
dec
pop
push
sbb
imul
icebp
cmp
or
push
adc
imull
jae
mov
fsts
fldl2e
daa
repnz
insl
pop
pusha
push
sbb
sub
mov
inc
aam
sarb
mov
popf
movsl
flds
in
fs
cmpsl
cmc
inc
jle
popa
pop
movsl
add
dec
pusha
xchg
sub
lds
hlt
mov
fwait
out
enter
ss
pop
fwait
sahf
xchg
aaa
pop
sbb
in
lock
js
popf
dec
sti
lret
out
stc
cli
loop
popf
add
data16
insb
pop
movsb
aad
mov
mov
cmpsl
dec
neg
hlt
cld
mov
jb
leave
jmp
mov
fwait
add
loopne
mov
rolb
stc
and
adc
adcb
movsb
dec
lret
mov
fwait
out
push
rorl
push
dec
sbb
out
jo
mov
rcrb
xchg
jnp
jbe
into
and
add
fsubr
int
mov
jl
push
push
add
mov
ret
mov
test
or
cmp
jecxz
jbe
jge
setne
xchg
cmp
pusha
push
sub
es
push
xchg
gs
jp
cs
inc
in
rcr
push
push
xchg
hlt
push
add
test
pop
pop
cmpsb
cmpsl
stc
andb
add
xchg
xchg
mov
or
or
jle
imul
mov
rol
out
lea
sbb
inc
int3
dec
sahf
jmp
in
mov
xor
stos
sub
fwait
jp
push
popa
adc
jl
jmp
xor
scas
xchg
lcall
or
adc
jmp
mov
pop
arpl
push
unpckhps
rorl
icebp
movb
or
jo
aam
insl
add
out
stos
push
xchg
push
lods
mov
ja
ds
xor
push
jo
adc
xorl
daa
jo
dec
int3
movsb
int3
mov
xchg
push
imul
fcmovb
sub
jnp
pushf
aas
lcall
pop
inc
imul
fucom
in
pop
mov
or
mov
jns
lret
adc
scas
outsl
in
xor
ljmp
arpl
mov
push
push
loop
sbbl
ror
js
adc
testb
jle
inc
sarl
cli
fwait
sbb
cmp
fmuls
mov
movsl
sub
xchg
or
mov
ret
outsb
sbb
jo
test
push
add
loopne
daa
sbb
insl
test
movl
in
lock
mov
adc
fsubrl
adc
and
push
sahf
loop
jmp
aad
xor
and
sahf
push
push
mov
sbb
iret
loope
mov
cmp
mov
fwait
shrl
nop
jns,pt
mov
mov
sti
mov
dec
or
jmp
stc
leave
andb
aas
xchg
test
and
lahf
mov
pop
mov
out
cmp
enter
mov
ja
push
mov
dec
std
aas
lds
push
data16
les
sub
inc
jmp
ljmp
and
iret
ret
cwtl
xchg
pop
jp
out
push
jp
sub
push
test
es
adc
mov
sahf
lods
in
or
jnp
dec
test
pop
icebp
ss
mov
repz
imul
sbb
mull
fwait
or
addr16
and
cwtl
cmpsb
mov
pop
loop
sub
ja
xor
sub
hlt
loope
or
aad
aad
mov
rorl
orb
push
push
popf
lods
inc
lea
seta
mov
xor
subb
outsb
pop
cltd
cli
mov
cwtl
jp
fdivrs
fwait
inc
stos
xchg
cld
cmpsl
cmc
pop
dec
mov
ret
stos
movsb
outsb
ss
leave
or
fdivl
popa
repz
popa
jne
cmpsl
mov
pop
dec
rolb
mov
roll
xchg
mov
rorl
test
or
aad
ret
out
insl
mov
jo
call
xor
pop
movsl
hlt
stos
pop
cmpsl
fwait
mov
insl
jb
inc
pop
rcl
cs
push
fmull
out
nop
loope
aad
adc
in
std
lahf
inc
pop
nop
sahf
data16
cmc
jo
mov
pop
sti
pop
shrl
adc
dec
testl
int
push
dec
js
popf
cmc
push
sarl
jo
popl
cld
sbb
adc
ret
adc
js
icebp
fptan
lods
dec
movsl
mov
lea
lds
out
in
pop
sub
sub
lods
fiaddl
xchg
xlat
stos
cmc
or
pop
loopne
mov
dec
xor
xabort
ja
xchg
imul
xlat
scas
push
fs
shl
lahf
adc
out
lds
sub
data16
mov
xchg
xor
loope
pop
mov
xlat
mov
daa
push
add
sbbb
ds
mov
mov
mov
imul
mov
inc
jle
das
lock
rcr
sub
cmp
mov
mov
jg
pop
aam
sub
scas
flds
cmp
pushaw
dec
rcrl
cmpsb
outsl
into
ret
push
inc
mov
ljmp
cmc
adc
xor
pop
xor
jnp
xor
lock
in
adc
sub
sahf
sbb
aad
fs
mov
in
aad
dec
push
cli
push
jb
aas
rclb
add
and
test
inc
icebp
inc
mov
cmpsl
es
or
repz
adc
sub
aas
xchg
sub
pop
fildll
xchg
inc
pop
cmpsb
or
or
mov
aaa
mov
or
cmp
xchg
lcall
mov
movsl
ss
int3
pushl
dec
pop
jp
iret
push
imul
xchg
sub
ret
movsl
call
lcall
xor
sahf
into
xorb
es
out
sbb
in
mov
orb
sub
call
sub
inc
or
iret
inc
jae
cli
and
into
sub
pop
xor
in
es
and
or
lds
lods
imul
fistps
jecxz
inc
adc
pop
push
mulb
mov
xchg
js
sti
jbe
and
lods
arpl
mov
push
jecxz
insl
roll
int3
fcmovnbe
xchg
iret
mov
push
dec
adc
rcll
jp
adc
shrd
lcall
or
or
xor
out
pop
push
dec
divb
sti
push
sti
pop
popa
inc
data16
dec
xor
negl
aam
repnz
and
aaa
aaa
jo
xchg
inc
cwtl
or
sbb
mov
and
clc
aam
or
mov
jmp
ss
dec
add
das
push
add
jno
shrb
mov
mov
push
push
adc
outsl
cs
shrb
rol
jne
lahf
xchg
mov
outsl
push
add
arpl
sbb
es
aam
sbb
xchg
xor
js
cmp
sub
push
dec
xchg
push
fdivl
and
or
sbb
pop
xchg
xchg
sbb
xor
imull
jle
add
leave
std
idivl
sbb
mov
sub
icebp
pushf
push
mov
jb
mov
stos
mov
out
imul
sbb
push
jge
pop
fs
push
mov
push
daa
dec
mov
std
inc
repz
fsubrl
lret
add
addl
leave
sbb
out
xchg
pushf
pop
and
pushl
cmpsb
out
fwait
mov
daa
fsubs
xor
es
and
into
cwtl
jb
and
jle
and
mov
sbb
xchg
js
xchg
pusha
cmp
pop
scas
mov
pusha
mov
fld
addr16
adc
int3
or
jo
pop
int
pop
and
jbe
cmp
jge
add
mov
cmpsl
lret
mov
ret
rolb
daa
bound
sub
std
pop
and
sahf
aaa
es
dec
push
shl
lods
and
cmp
aaa
mov
sbb
push
mov
xchg
push
add
add
inc
adc
cld
jle
mov
cmp
push
scas
push
ds
sub
popa
fcoms
and
jecxz
movl
leave
push
cmpl
in
aad
sbb
and
inc
xchg
add
movsb
add
arpl
pop
test
or
std
out
arpl
out
test
sub
sbb
inc
mov
ret
stos
loop
les
sub
test
or
loopne
dec
into
pop
xor
shlb
mov
les
mov
lret
add
sbb
mov
lcall
movsb
cmp
xor
test
sbb
push
lahf
fadd
inc
adc
arpl
jb
jbe
xchg
outsb
or
mov
test
push
test
or
inc
sub
jbe
rcrl
and
cli
adc
movl
push
dec
mov
pop
and
and
sub
sub
rorb
shll
dec
clc
lock
outsb
jae
push
add
jbe
push
sarl
xchg
cmp
xor
scas
fidivrs
or
cmp
dec
js
push
aad
lcall
sub
jl
std
jl
in
adcb
pusha
cmp
icebp
notl
mov
jge
xor
imul
or
adc
cpuid
loop
frstor
faddl
nop
sar
or
push
push
sub
lret
jns
fwait
outsb
push
jbe
imul
jne
cmp
das
pop
adc
push
into
fldcw
sbb
mov
adc
pop
daa
fwait
inc
dec
call
test
ret
mov
inc
loop
push
loop
das
lds
pop
out
loopne
xchg
ret
xor
cmpsb
test
inc
add
sbb
or
outsl
je
jg
pop
loope
mov
push
scas
xor
push
xor
mov
add
dec
mov
shlb
aaa
insb
mull
xor
dec
jb
xchg
jmp
stc
or
mov
jae
mov
xor
enter
add
pop
cmp
mov
enter
xlat
mov
jmp
xor
dec
mov
dec
incl
push
testl
outsl
in
cltd
push
mov
sub
outsl
xchg
popa
sub
push
sbb
xchg
fnsave
mov
shrl
xchg
scas
sub
add
xchg
fists
ds
scas
fwait
xor
add
and
inc
dec
js
xor
js
xor
mov
cld
mov
mov
pop
cmp
fiadds
std
add
cmp
mov
and
lock
jmp
push
dec
push
fldcw
rcl
enter
sub
fs
inc
and
xchg
stos
jnp
pop
pop
pop
xor
mov
sbb
jns
pop
pushf
jecxz
jg
dec
pop
or
inc
mov
push
mov
sbb
rorl
sub
ret
pop
lods
xchg
xor
imul
inc
push
stos
outsb
dec
mov
cmp
cwtl
out
stc
test
out
xor
lret
push
dec
pop
mov
push
or
push
cmc
pop
out
out
roll
popf
push
pop
stos
negb
sub
sub
cmpsl
fwait
pop
sub
pushf
xor
gs
mov
xor
push
inc
test
cwtl
ss
data16
fsubrs
xchg
loopne
test
pop
push
jp
in
aas
and
dec
push
fidivl
mov
pop
int3
loopne
inc
scas
add
push
dec
scas
adcl
rol
nop
push
int3
mov
inc
cmp
adc
in
push
loope
xchg
jo
inc
gs
xchg
jnp
imul
mov
sbb
mov
cmp
pop
mov
and
hlt
insb
imul
jl
imulb
shrb
test
rclb
test
fcmove
stc
mov
test
lret
cmpsl
mov
pushf
cmp
mov
push
jnp
or
outsl
jb
dec
addl
adc
rorb
int3
enter
call
mov
scas
jp
xorl
rol
pushf
or
hlt
cmc
mov
leave
neg
jmp
xorb
cmp
aaa
cmc
adc
lds
sub
popf
add
xor
xor
scas
and
adc
push
fs
push
xchg
mov
shll
loope
xor
hlt
or
stc
push
ljmp
pop
sarl
dec
mov
arpl
in
sbb
loopne
cmp
jno
test
jle
cmc
hlt
xchg
lds
cli
in
dec
and
scas
sbb
adc
scas
cli
push
jge
push
lret
or
mov
mov
cmp
mov
popf
stos
mov
and
pop
cmp
xor
inc
cmp
and
xchg
aaa
js
decl
and
or
inc
dec
shrl
push
ja
xchg
push
pop
ret
test
gs
imul
aad
popa
lods
fstpl
dec
and
les
mov
jo
lods
sbb
fdivs
aas
xchg
ror
icebp
sbb
rclb
andps
addl
lods
or
shll
bound
push
or
jno
dec
ja
cmp
xchg
cmp
mov
push
adc
inc
sub
jmp
cmp
pop
stos
iret
cmpsb
xchg
jae
mov
stc
xchg
cmovbe
push
je
jle
jb
je
ret
or
sbb
jne
mov
mov
ds
push
lcall
add
ret
cwtl
scas
mov
cld
mov
xchg
gs
pushaw
sahf
jg
pop
pop
mov
call
insb
les
mov
mov
insb
shld
mov
int3
jg
add
sub
inc
mov
mov
test
inc
adc
aam
pop
push
loopne
arpl
inc
scas
pusha
push
cmpsb
dec
ja
cmp
adc
outsl
pop
ret
and
in
sub
fildl
adc
sub
mov
nop
nop
push
sbb
leave
push
je
dec
inc
cmp
mov
push
sahf
mov
mov
ret
fsubrl
mov
cld
pop
sbb
rorb
add
add
mov
mov
sbb
insb
dec
aam
add
adc
mov
test
xchg
por
bound
sti
fnstenv
xchg
push
mov
adc
push
out
rcl
ret
xchg
imul
mov
dec
fwait
repz
push
icebp
push
mov
fisubrl
cmc
and
lret
push
enter
test
int
es
push
out
dec
fisubs
jno
bound
fisttpl
out
aam
mov
mov
adc
jns
shlb
or
fldcw
xchg
aaa
mov
jno
dec
add
jnp
dec
and
pop
fs
add
mov
sub
imul
ret
ror
mov
dec
lret
stos
pop
outsb
icebp
add
rcll
and
in
fdiv
cmp
jnp
inc
jp
adc
xor
das
in
xchg
cmpsl
push
leave
and
mov
test
mov
xchg
call
push
outsb
jge
les
dec
or
das
add
les
in
rorb
int3
scas
inc
das
aas
lret
add
jmp
jbe
push
and
jecxz
mov
sbb
xchg
and
cs
cmpsl
and
xor
xchg
mov
mov
lods
ss
pop
cmp
shrl
xlat
jmp
or
mov
cli
pop
fcmovne
cmp
jecxz
push
xchg
hlt
cli
roll
push
jg
mov
mov
gs
ret
mov
pop
in
mov
inc
cwtl
inc
dec
push
sub
out
bound
out
pop
inc
lods
ds
das
inc
loopne
xchg
lret
dec
adc
mov
mov
dec
cs
or
xor
ret
les
push
sub
xchg
in
adc
or
ljmp
mov
testl
add
sbb
sbb
dec
js
in
dec
stc
jae
arpl
movsb
lahf
xlat
xor
test
add
das
gs
les
mov
jno
je
xor
popa
js
add
cmpl
lahf
mov
xorl
xor
xor
rcll
pop
dec
ror
cwtl
and
cld
adc
repz
into
fwait
inc
enter
loopne
imul
inc
pop
cmp
push
cmp
jmp
outsb
lret
das
or
xchg
xor
add
cmp
lock
ret
inc
lods
jge
out
je
sbb
cmpl
mov
adc
push
les
int
adc
nop
insb
push
xchg
lods
xchg
push
dec
dec
or
xlat
cmpsl
jmp
sub
sub
jp
popf
xchg
pop
sub
mov
push
push
jmp
icebp
addr16
mov
xchg
ljmp
xor
mov
pop
inc
enter
add
xchg
shlb
sti
ret
or
loopne
lret
sbb
std
aad
movb
test
pop
pop
mov
ret
scas
ja
or
inc
sub
push
loope
repnz
lods
adc
or
insl
add
xlat
xchg
mov
mov
lods
jg
dec
out
fwait
dec
push
pop
mov
xor
jg
sub
xor
pop
pusha
jb
lret
inc
lods
aad
aaa
lret
pop
stos
popf
cmp
in
les
daa
rcl
and
loope
in
repnz
fsubrp
pushf
cmp
or
das
loopne
mov
hlt
xor
pusha
inc
or
inc
fildll
push
adcl
mov
jecxz
sub
outsl
nop
adc
cmpsb
cmp
fwait
in
aaa
idiv
sub
lcall
push
push
out
jo
shlb
pusha
andb
push
test
adc
jno
xchg
pop
out
inc
cmp
lret
jns
lock
ret
sbbl
outsl
int
outsl
repnz
movsb
fstp
jp
mov
mov
in
mov
sbb
bound
repz
jae
push
dec
push
push
test
les
adc
imul
mov
fdivrs
test
mov
add
into
in
push
clc
pop
dec
pushf
sub
mov
fdivl
pop
in
mov
shrl
test
outsb
xor
shl
mov
lret
jo
cmp
loop
cli
stc
fbld
jns
adc
xchg
jo
or
adc
mov
xchg
call
pop
push
mov
pop
popa
stc
ds
jle
inc
paddsb
std
mov
leave
mov
pop
testb
pop
xchg
add
cmpsb
mov
pop
jmp
push
test
mov
in
mov
arpl
mov
mov
pop
mov
dec
xchg
adc
aas
out
ljmp
dec
js,pt
lea
xor
shrb
cmp
shr
sub
cmp
xor
mov
sub
nop
and
pop
stc
add
test
sub
fadds
sti
mov
in
push
sahf
inc
stc
ljmp
sub
xchg
jne
mov
fs
popa
xchg
mov
cmp
int
cmp
out
push
add
inc
int3
jo
cmp
mov
andl
lock
lahf
out
lcall
js
loope
mov
js
add
popa
and
jo
lret
orl
insb
xchg
test
push
xor
add
paddusb
or
into
pop
mov
mov
jno
push
aas
xchg
jns
pop
xor
es
push
and
cmpsb
and
jg
mov
pop
mov
cmpsl
xchg
ljmp
lods
adc
add
fs
ret
pop
mov
addr16
enter
shrl
lcall
adc
sub
jecxz
ljmp
inc
add
test
iret
fistps
pop
repnz
mov
imul
test
out
or
jecxz
rorb
sti
dec
or
pop
inc
pop
cmp
pop
xchg
dec
mov
jle
mov
pop
add
repz
mov
adc
andps
mov
ret
add
fisubrl
in
cmp
out
js,pn
out
out
je
js
mov
xchg
iret
dec
sbb
pop
out
push
aaa
fldpi
repz
xor
js
mov
sub
xchg
xor
xchg
daa
cmc
adc
jl
jecxz
mov
cmp
adc
ret
jge
add
cmp
loop
add
sarb
dec
dec
lcall
pop
stos
jb
pusha
pushf
cmpsb
jle
loope
fsub
sbb
mov
jl
dec
push
cmp
jcxz
pop
xchg
adc
cld
xlat
push
xor
shlb
mov
pusha
nop
mov
bound
arpl
ja
ds
popa
and
add
iret
sbb
enter
sub
push
pop
fldenv
push
lret
arpl
outsl
push
jecxz
gs
jge
loop
lahf
ja
pop
and
xor
inc
sub
test
loope
jp
rclb
mov
cmpsb
jmp
sub
add
and
subl
lock
adc
add
add
cmp
inc
and
int
pop
aad
mov
push
je
outsb
arpl
pop
test
bound
adc
sub
mov
hlt
mov
lock
mov
mov
lock
jae
adc
loope
mov
jge
fwait
imulb
addr16
loop
test
sbb
adc
cmp
cmpsb
pop
push
or
pop
movsb
push
shlb
inc
sbb
ja
mov
jge
inc
push
jecxz
aaa
dec
call
test
mov
sbb
cmp
mov
scas
jg
cmp
add
dec
sub
cmp
daa
pop
sbb
push
or
sub
jecxz
sub
and
dec
inc
cmp
mov
les
sub
dec
in
jle
jl
adc
das
hlt
cmpsb
jg
xor
push
outsb
sahf
jbe
imul
xchg
pop
xchg
jecxz
xchg
cmpsb
pop
js
adc
sub
sub
mov
mov
jl
loop
ds
sub
sub
mov
inc
add
inc
mov
lret
sub
xor
jmp
sarb
sub
mov
dec
jnp
lods
pop
jo
jle
std
xor
sub
lods
lods
xchg
or
fsubs
dec
mov
shl
imul
aad
imull
adc
add
add
lods
jb
faddp
pop
mov
pop
in
fs
in
sub
hlt
and
stos
adc
or
jecxz
scas
mov
mov
jne
cltd
xorb
and
xor
mov
fstl
push
pop
lret
xor
xor
mov
aam
and
shrl
and
dec
mov
movsb
xchg
js
and
and
cmp
sti
jnp
xor
ljmp
int
hlt
push
mov
xchg
das
lret
mov
lds
icebp
xchg
and
je
mov
mov
repnz
inc
jo
frstor
es
push
pop
mov
sbb
nop
fimuls
pop
pop
iret
jmp
cmp
sbb
jne
mov
inc
adc
dec
nop
dec
add
cmp
sbb
out
test
loopne
cmp
loope
fdivs
lods
pushf
fwait
dec
pop
jmp
push
cmpsl
mov
xchg
mov
and
repz
cmc
test
jnp
in
push
pusha
lods
mov
mov
ss
aaa
data16
andb
lahf
or
sub
ret
call
insl
pop
jl
jno
iret
outsl
aam
mov
push
fildl
addr16
xor
jl
mov
pop
sbb
imulb
or
lods
outsl
and
dec
fwait
insl
in
shlb
int3
test
inc
cmp
shl
sbb
test
dec
cltd
daa
mov
xor
xchg
subb
or
cmp
jae
xchg
mov
out
jne
sbb
cltd
mov
clc
inc
pop
inc
push
dec
popa
les
je
sahf
sub
insl
sbb
sarl
icebp
inc
mov
out
jne
cmc
sub
in
sub
fistl
leave
or
je
xchg
lret
jns
cld
es
std
jle
xchg
rclb
outsb
insb
aaa
jg
repnz
cmp
ja
decl
sub
in
ljmp
sti
repnz
dec
mov
dec
pop
mov
cmpsl
cmpsb
mov
xor
in
xor
add
and
push
push
mov
outsl
cli
inc
sbb
mulb
aam
test
scas
adc
aaa
outsl
sarl
add
fldcw
divl
xchg
jge
js
mov
int3
sbb
adc
or
adc
test
jbe
test
gs
or
xor
fstl
nop
stc
leave
ds
adc
lods
cmp
imul
lods
pop
int
jp
dec
iret
in
fistps
xor
shlb
pop
sub
insl
push
adc
or
jge
xor
dec
inc
cld
out
push
lods
fmul
add
adc
mov
sbb
mov
mov
clc
cwtl
cmp
dec
cwtl
or
push
test
stos
dec
lods
push
sub
jecxz
fistl
sub
dec
dec
or
insl
dec
rorb
xor
sbb
inc
scas
lock
in
fildl
sub
jmp
push
loop
add
sbb
and
sub
test
mov
add
push
shr
into
cmp
adc
loopne
xchg
jecxz
or
test
aam
push
les
lret
add
pop
add
mov
or
xor
repz
mov
jle
jo
dec
jge
dec
out
sti
dec
push
cmpsl
daa
sbb
insl
mov
push
into
adc
xchg
subl
into
ficoms
sahf
jnp
daa
push
push
xor
xchg
mov
inc
mov
xor
cmc
adc
cmp
add
push
arpl
push
das
stos
ja
rcr
test
popa
sbb
xchg
mov
jns
sbbl
jo
mov
jnp,pt
arpl
cmc
cmpsb
mov
sar
enter
cltd
lret
jecxz
xchg
xchg
shll
mov
das
mov
adc
lods
shll
mov
cli
cltd
pop
or
test
sub
lods
ffreep
clc
fwait
push
lods
pop
adc
outsl
xchg
das
mov
mov
mov
sub
cmp
xchg
ljmp
xchg
mov
sahf
nop
sub
stos
and
push
sub
jo
aas
rcl
inc
fstpl
das
xor
jge
push
leave
mov
and
sbb
xchg
test
ficompl
or
es
imul
adc
nop
rolb
notb
cmp
dec
aad
arpl
mov
aaa
popa
sbb
sti
jp
inc
es
repz
pop
cmp
leave
mov
push
sbb
cli
out
cmpsl
jmp
aam
mov
sbb
xchg
insl
lret
mov
mov
fisubrl
lret
nop
sub
sbb
jns
shll
add
lods
clc
mov
pop
xchg
mov
rorb
and
xlat
jle
aas
clc
ja
orl
in
loope
lret
in
lods
push
iret
insl
mov
sbb
cmp
inc
jge
or
xchg
inc
pop
push
rolb
add
jl
xor
shll
pop
scas
ret
and
xchg
jp
cld
or
sub
shl
repz
data16
push
ljmp
push
ret
sub
fbstp
xor
push
push
fbstp
dec
dec
push
out
fwait
mov
lea
xor
fstl
push
dec
mov
adc
lret
dec
inc
push
mov
cmpsl
lret
push
subb
pop
pop
packsswb
cmp
jl
ret
lret
pusha
es
arpl
mov
cld
test
sub
xchg
aad
push
stos
xchg
ret
nop
sbb
fdiv
repz
jne
das
jae
inc
icebp
inc
adc
adc
dec
inc
and
orl
push
mov
xor
les
lock
push
mov
pop
mov
lds
mov
lcall
aam
ds
out
loopne
fnstcw
inc
jb
jp
jmp
iret
loopne
cmp
adc
pop
sbb
cwtl
jb
aaa
mov
push
std
push
dec
ret
xor
sbb
popf
push
shrl
pop
push
fbld
rcr
hlt
lahf
cmpl
mov
jns
inc
xor
or
arpl
sub
mov
sbbb
movsb
mulb
sbb
pop
jo
mov
aam
aam
ds
mov
mov
mov
into
pop
xchg
jns
push
jecxz
add
xor
adc
sarl
in
jno
lret
mov
stos
jmp
hlt
dec
popf
xor
scas
mov
add
clc
mov
test
push
pop
mov
add
mov
mov
mov
or
mov
pushf
stos
mov
jae
push
or
scas
jmp
mov
mov
aad
mov
or
shrl
stos
repnz
shlb
test
mov
pop
mov
leave
lock
xchg
lcall
ss
lcall
pop
int3
adc
fs
fs
lcall
dec
lcall
in
mov
mov
scas
inc
push
xor
xor
push
add
in
sub
dec
or
ja
dec
js
jge
or
int3
cwtl
mov
les
adc
hlt
push
adcl
sahf
ret
js
sub
xor
ss
je
sti
out
inc
add
cmpsb
ret
fidivrl
cwtl
lret
add
bound
jnp
push
out
std
out
jns
leave
pop
dec
cmp
addr16
push
icebp
jp
int3
sti
xlat
loop
dec
pop
dec
test
scas
js
xchg
das
mov
jmp
movsl
test
adc
test
xchg
xor
pop
mov
cmpsb
sti
and
push
mov
sbb
sbb
push
adc
sbb
mov
dec
push
mov
dec
inc
jmp
shlb
xchg
lret
ja
jecxz
jbe
in
mov
add
sbb
jns
into
out
and
xchg
rdmsr
xchg
dec
das
not
xor
loopne
add
adc
das
cltd
sub
fsts
cmp
and
cltd
mov
insb
mov
jne
dec
add
jg
mov
negl
je
shrb
xor
insb
pop
ja
mov
mov
cmp
cli
int
popf
inc
dec
cmp
test
jle
mov
adc
xor
mov
xchg
rolb
xchg
mov
cs
push
dec
jo
pop
andb
xor
sub
cmp
mov
adc
mov
clc
fst
mov
inc
push
hlt
aad
push
pop
cmp
dec
xor
push
out
push
mov
mov
inc
sbb
push
jns
xchg
hlt
adc
fiadds
inc
jne
mov
bound
jmp
cmp
movsl
vpmacssdql
lea
add
scas
adc
into
pop
sahf
shr
lds
xor
ss
sub
repnz
jg
addr16
dec
inc
adc
or
popl
scas
mov
pop
mov
ficoml
into
aad
push
call
mov
lea
mov
xchg
jmp
jp
icebp
add
cmp
ja
xor
and
add
push
jle
sti
pop
je
pop
shlb
mov
ret
push
mov
stos
mov
mov
test
clc
cmp
push
pop
cmp
push
dec
adc
int
mov
sub
and
push
adc
mov
pop
sub
inc
stos
scas
in
jmp
sub
cmpsb
clc
fs
jne
jnp
xor
sar
inc
test
fdiv
subb
xchg
out
mov
mov
xchg
jmp
jo
bound
fcompl
in
mov
sub
icebp
insb
lret
inc
mov
jecxz
or
push
js
sub
xchg
popa
xchg
dec
or
int
sahf
pop
cld
lret
push
sub
push
and
jge
ja
jbe
pop
insl
sub
dec
jbe
into
stc
shll
push
push
clc
out
loope
inc
cmpsb
xlat
sbb
xchg
in
fdivrp
popa
js
jb
cmc
mov
mov
aad
call
cmpsl
mov
inc
lea
int3
mov
btl
adc
out
adc
neg
dec
loope
pop
outsl
enter
cmp
imul
fildl
ja
pop
test
mov
adc
loope
not
rcll
sub
and
fnsave
dec
mov
inc
adcl
fbstp
ja
insl
xlat
ljmp
adc
add
jo
xor
fisubrs
xchg
jmp
jmp
lods
add
mov
fdivs
push
sbb
add
adc
jmp
mov
out
xchg
pop
mov
mov
ja
inc
insb
je
movsb
adc
push
push
xchg
jbe
dec
xchg
mov
scas
out
loopne
nop
cs
cmp
jo
scas
push
inc
xor
mov
out
sub
mov
js
jo
xchg
adc
push
xlat
rolb
or
fldl
cmpsb
xchg
pop
lds
es
mov
clc
imul
out
iret
ljmp
dec
pop
xchg
rorl
cs
icebp
push
jb
or
push
call
out
pop
stc
in
stos
fwait
cltd
pop
push
mov
cmpsl
shll
fisttpl
ret
or
xlat
mov
jle
push
repnz
adc
les
in
int3
mov
mov
inc
hlt
xor
test
or
and
outsl
mov
xchg
add
add
fwait
mov
mov
ss
pop
outsb
das
dec
stos
repnz
dec
sub
sub
lods
fs
test
xor
fdivrp
push
or
push
push
mov
hlt
test
xor
pusha
pushl
aaa
repnz
mov
xor
jg
fsubrs
data16
adc
push
lahf
push
ror
mov
sti
mov
push
das
xchg
sbb
sub
mov
js
popf
cltd
aaa
lcall
lds
in
xchg
mov
jp
mov
cmpsl
insb
and
and
mov
xor
daa
add
cmc
jae
scas
jae
fmul
dec
in
cmp
push
push
stos
outsb
mul
xor
sbb
or
xchg
out
jg
sti
sub
adcl
and
js
jb
es
aad
xchg
pop
das
int
in
dec
mov
shrb
arpl
aam
inc
nop
sub
jbe
popa
ljmp
into
fstps
in
adc
jno
sti
mov
fstp
xor
ficompl
cmp
inc
dec
pop
sbb
int3
int3
jg
push
popf
js
scas
add
sbb
rorl
xlat
cmp
xchg
mov
cltd
inc
mov
or
mov
add
add
bound
out
and
insb
fdivl
inc
fwait
nop
mov
cltd
repnz
xchg
xchg
jo
add
inc
sbb
lret
std
and
push
lods
sub
sbb
sub
cmp
hlt
sub
push
jg
xchg
test
gs
arpl
stc
mov
fs
gs
arpl
pop
sbb
shl
lret
adc
push
mov
push
repnz
cmc
out
scas
mov
or
ucomiss
or
cld
adc
sub
jp
fisttpll
push
icebp
outsl
ljmp
ret
xchg
mov
xor
xlat
or
lock
callw
dec
sub
xor
sbb
xlat
adc
decb
fistpll
dec
jmp
dec
jbe
dec
in
dec
rorl
mov
gs
sub
sbbl
cmp
js
inc
cmc
popa
jmp
jmp
xor
hlt
mov
in
loop
jns
pop
pusha
jecxz
sub
dec
inc
push
inc
cs
adc
aad
add
mov
cli
add
ss
dec
scas
notb
hlt
push
dec
lcall
test
int3
jae
push
xor
push
sbb
dec
dec
sub
shlb
pop
or
sub
mov
int
add
jo
push
mov
subl
out
les
add
dec
pop
sub
push
push
jo
jecxz
test
mov
sub
jbe
fldcw
xor
mov
fsubs
mov
pop
sbb
es
jmp
pop
mov
mov
imulb
xchg
hlt
fs
jbe
xchg
aad
jo
data16
test
push
inc
lds
lock
inc
mov
mov
imul
je
insb
mov
push
adc
mov
out
jmp
push
lds
frstor
mov
pop
inc
fucomi
sbb
aad
adc
imul
popf
inc
sti
jo
shr
lods
je
lods
push
mov
mov
je
adc
imul
jns
adc
jne
punpcklbw
sub
pop
mov
clc
xchg
jno
add
ds
lea
pop
test
popa
and
les
daa
aad
sub
int
std
nop
pusha
mov
sub
js
inc
idivl
push
ljmp
push
lds
test
push
scas
mov
sti
cld
fwait
je
shrb
sbb
lret
mov
imul
enter
dec
inc
nop
cmpsl
or
loope
cmp
mov
adc
out
push
rorb
test
in
jecxz
int3
out
and
addr16
mov
and
lret
inc
cmpsb
mov
mov
cmp
add
sbb
pop
shrb
or
ret
mov
lcall
and
cmpsb
rcrl
divl
push
mov
push
arpl
inc
shrl
movsb
test
sbb
stc
negl
xor
lods
cltd
xchg
out
mov
lods
inc
aas
pop
mov
in
clc
sub
stos
push
out
call
fstl
loopne
add
pop
jbe
push
xlat
mov
nop
push
mov
mov
and
add
mov
scas
inc
cmp
push
jmp
push
lods
es
xlat
push
push
xor
pop
std
iret
addr16
inc
lret
sbb
fcompl
adc
aas
xchg
mov
mov
or
adc
shll
inc
pop
call
call
inc
ficoms
popf
cmp
sub
ss
dec
iret
xor
xchg
imul
aad
lahf
add
mov
lret
or
cmpsl
or
in
pop
sahf
xchg
inc
jmp
jb
cmp
jno
in
imul
lods
out
mov
out
out
lcall
jp
xchg
inc
jge
dec
add
loope
jbe
cmp
pop
imul
pushl
jns
push
out
pop
ret
mov
jne
pusha
adcb
adc
inc
sub
pop
dec
fwait
adcl
incl
push
shrb
xor
fimuls
adc
lcall
arpl
or
out
mov
sti
mov
jge
ret
cmp
das
mov
loopne
or
sub
and
fimuls
push
repnz
sub
dec
jp
xchg
xor
mov
test
jp
rcl
mov
cwtl
xor
not
mov
jnp
aam
out
subl
mov
cmp
push
push
pop
mul
or
cld
jnp
cli
and
dec
test
outsl
pop
xchg
xchg
lods
adc
pop
arpl
inc
lcall
das
dec
fiaddl
imul
mov
mov
and
mov
mov
sub
dec
negb
inc
cmp
mov
lret
sbb
jl
pop
fmull
jno
das
adc
pop
shl
push
adcl
sbb
push
mov
hlt
sbb
jns
ljmp
adc
addb
jmp
lahf
loopne
push
or
icebp
adc
lock
gs
jo
push
xchg
xchg
mov
or
jg
jp
add
inc
xchg
out
in
leave
aaa
jb
insl
lcall
mov
jnp
push
push
mov
subb
ret
pusha
sti
cmp
mov
push
popf
movlps
cmp
hlt
push
test
out
scas
arpl
stc
es
lock
inc
inc
xchg
cmpsl
fmull
aaa
icebp
mov
add
dec
test
adc
ret
sahf
test
outsb
pushf
data16
sub
addl
xor
stc
pop
jae
sbb
mov
jge
xchg
mov
or
or
cmp
dec
shlb
outsl
out
or
xlat
adc
divb
jae
push
pop
push
rcr
jae
mov
into
into
inc
aas
cmpsl
sub
test
push
in
push
xor
lock
andb
push
cmpsb
aam
mov
roll
outsl
push
push
outsl
and
mov
pop
or
sub
jb
and
pop
or
inc
mov
andb
pop
dec
fstl
cmp
stos
push
xchg
loope
fwait
ds
cli
shlb
inc
testb
or
sbb
or
popf
sbb
int3
shlb
incb
pop
push
setb
push
add
mov
loop
push
lret
rcrl
and
aad
push
scas
mov
lock
sbb
test
pop
xchg
dec
incl
jno
sti
scas
pop
jp
insb
loopne
shll
xchg
xor
jbe
pop
daa
push
add
sub
sub
mov
in
popf
cli
popf
scas
push
xorl
inc
nop
cmc
pop
mov
pusha
lock
xor
adc
pop
out
call
sbb
push
or
shll
stc
adc
daa
jns
les
fsub
mov
adc
cmpsb
pop
push
lcall
into
repz
push
push
mov
in
mov
scas
mov
xchg
mov
shrl
sub
mov
mov
mov
dec
aad
xor
incb
test
xchg
cmp
mov
fisttps
rolb
xchg
mov
lahf
aas
adc
cmpsl
sahf
pop
in
xlat
std
jmp
addw
mov
stos
cmp
jbe
ja
fildl
or
cmpsl
cmp
enter
out
inc
lcall
nopl
ja,pt
push
movsb
sti
hlt
aaa
push
mov
jbe
pop
adc
adc
mov
jl
mov
add
out
mov
jb
out
push
sbbb
push
sbb
movsl
inc
dec
outsl
negl
mov
sub
std
or
dec
ja
imul
insb
push
xchg
out
push
fists
inc
push
push
repnz
ljmp
pusha
cmpsl
cli
scas
sahf
mov
xchg
cld
test
jle
push
lcall
arpl
arpl
shl
dec
lods
inc
adc
xor
popf
sbb
cmp
or
fiadds
cli
mov
ljmp
add
les
jno
mov
mov
jbe
test
jge
jge
push
xchg
mov
movl
bound
ret
jbe
add
xlat
out
mov
orl
aas
sub
std
dec
sub
push
data16
lret
sarl
mov
insb
div
adc
sti
std
outsb
sahf
mov
nop
and
movsb
scas
stos
cltd
fnstcw
fs
int
sbb
outsl
int3
xchg
popf
stos
cmp
xchg
mov
push
xchg
mulb
out
bound
sbb
xchg
push
ds
mov
dec
mov
dec
xchg
cmpsl
cwtl
push
shll
div
push
mov
xor
test
dec
pop
and
mov
inc
xchg
stos
adcb
mov
add
ret
stc
push
out
clc
mov
xchg
jne
insl
jp
or
pusha
xchg
dec
add
inc
push
cmc
sub
dec
das
add
mov
ljmp
out
ret
sbb
lret
pop
push
fsubrl
shll
stos
aas
in
pop
test
leave
jbe
dec
das
xchg
push
dec
push
sub
cwtl
int
add
adc
imul
stos
lods
pop
pushf
inc
jae
in
mov
and
stos
and
aad
lcall
aam
ja
int3
xor
lcall
inc
mov
jb
call
add
out
push
or
pushf
add
sbb
add
mov
inc
imul
ds
push
jbe
push
mov
nop
pop
mov
inc
in
lret
lahf
cmp
pop
test
adc
roll
in
jbe
mov
mov
lret
dec
pop
cld
fmull
and
cltd
inc
pop
push
repz
cmpl
add
ret
pop
inc
mov
sbbl
jle
push
fistpll
jbe
insb
adc
xor
aad
jo
cwtl
stc
pop
inc
pop
imul
push
outsl
lcall
call
rorl
int3
les
jp
ss
jge
in
in
and
sub
mov
adc
bound
fs
and
outsl
dec
int
pandn
add
aam
loop
test
sub
lea
add
outsl
leave
ret
in
iret
pop
dec
leave
push
and
lods
repz
and
inc
sbb
and
das
adc
inc
lods
fcomps
push
mov
push
stc
iret
jecxz
push
lock
inc
pop
add
faddl
mov
movsl
inc
sub
push
jmp
mov
or
adc
inc
filds
inc
inc
jns
fcompl
mov
xlat
pop
jnp
daa
push
sub
dec
sub
cmpsb
mov
loopne
sar
jp
pop
push
faddl
and
dec
xchg
mov
test
mov
cmp
mov
insl
int
pop
mov
mov
gs
insl
test
jns
loop
jecxz
mov
mov
lods
mov
je
sbb
int
roll
add
subl
xor
or
push
jno
mov
sub
pop
adc
int
xor
jmp
push
dec
dec
clc
mov
fwait
lock
in
xor
loop
sti
andl
xchg
popa
movsl
shl
mov
aam
sub
roll
xor
in
mov
stos
outsl
pop
mov
lock
testb
sub
mov
push
pop
add
pushf
repnz
stc
jge
je
jae
add
xor
in
ret
dec
mov
jnp
jae
and
jmp
in
push
cmp
ds
imul
and
in
or
mov
or
add
add
pop
or
out
mov
dec
pop
xor
pop
fnstsw
sbb
in
mov
ljmp
fmuls
stos
inc
stos
and
cmpsb
into
lock
movhps
sbb
sarb
sub
mov
jbe
shr
in
leave
adc
mull
clc
mov
jecxz
push
mov
hlt
icebp
or
movl
xchg
pop
repnz
inc
or
bound
pop
push
sar
push
adc
inc
mov
iret
adc
add
mov
sub
test
fs
xor
sbb
loop
leave
inc
mov
pusha
pop
and
lds
sahf
movsb
fdivs
lds
ds
or
mov
xor
xor
xor
sub
lahf
out
push
sub
mov
ret
lcall
jge
std
sbb
int3
repz
pop
idiv
cmc
insb
out
jne
or
cmp
pop
clc
inc
jp
jecxz
pop
andb
int
mov
mov
mov
rcll
loope
test
ljmp
jmp
test
fcomp
push
fwait
loopne
cltd
adc
andl
xor
add
pop
mov
fadds
aaa
hlt
pop
xchg
xorb
add
sub
or
rorl
jl
insl
push
imul
std
adc
mov
js
lret
sub
mov
movsl
mov
add
add
push
test
sbb
outsl
sub
test
fnstenv
push
inc
xchg
jp
sti
aam
xor
push
xchg
xchg
mov
imul
std
or
add
and
adc
jns
jns
cmpb
fs
cmp
push
or
mov
fmull
pop
ret
inc
fisubrs
push
in
pop
imul
into
cmp
mov
sbb
mov
scas
jns
popa
mov
jns
roll
rorb
dec
rcl
cmpsl
sub
sbb
sub
mov
and
mull
push
popa
fisubrs
pop
subl
lds
mov
or
sahf
push
cmp
out
out
js
xchg
xlat
xor
pop
enter
lahf
dec
xlat
sub
imul
inc
ret
arpl
fsubl
xor
test
in
lahf
or
movsl
filds
adc
lcall
shrl
scas
pop
es
xorb
cwtl
lods
enter
adc
add
gs
xchg
and
scas
insb
jg
fst
inc
pop
inc
dec
or
and
icebp
lret
mov
flds
int
xlat
movl
jl
hlt
int
xor
mov
add
movsl
cmpl
mov
pusha
lahf
les
cmp
ja
jnp
out
bound
daa
scas
ss
insb
pop
jge
mov
pop
gs
sbb
fldl2t
xchg
gs
sub
test
stc
inc
and
push
fs
fistpl
pop
fstl
out
push
insb
or
clc
add
aaa
cmp
jb
dec
cmpsb
sbb
leave
xor
enter
mov
add
dec
faddl
and
inc
test
popa
fmuls
cwtl
cmp
cmc
sub
or
fs
sti
and
lret
mov
mov
nop
mov
je
sbb
incb
jnp
shlb
pusha
cmp
push
push
cs
lods
icebp
sbb
dec
into
sbb
movb
adc
sbb
push
push
sbb
pop
lods
jecxz
adc
out
push
inc
outsl
into
sbb
lret
mov
pop
xchg
mov
daa
loopne
aad
pop
xchg
out
adc
test
sbb
out
cld
addr16
sub
cmp
add
leave
pop
orb
rorl
pop
push
rolb
push
add
cli
xor
jmp
inc
hlt
test
loop
pop
filds
mov
add
xor
imul
sbb
push
jb
cmpsl
push
insl
sbb
push
cmp
cs
lea
add
mov
pushf
mov
sub
scas
or
adcl
mov
sub
xchg
jae
xchg
push
sub
fisubl
mov
dec
push
adc
repnz
out
adc
lods
mov
mov
ja
popa
std
ret
gs
add
push
adc
mov
push
inc
mov
mov
test
insb
cmp
xor
sub
loope
jp
lods
test
notl
loope
xor
xchg
mov
lods
fidivs
or
inc
iret
xchg
mov
jne
int3
fsubrl
sub
or
pop
repz
jae
inc
cmp
push
jecxz
pushf
mov
and
xchg
test
rcrb
andl
xor
push
movsb
jle
lret
mov
mov
lcall
xchg
adc
outsl
fisttpl
cmc
cmpb
push
lds
das
out
js
lock
inc
out
xchg
pushf
pop
data16
xor
bound
ds
mov
les
aas
mulb
mov
xlat
lods
test
test
push
mov
xor
sbbb
cmc
daa
scas
outsl
sahf
insl
push
std
out
add
ret
xor
mov
pop
cmp
xchg
aad
mov
and
xchg
cwtl
aaa
cld
or
stos
call
sub
adc
push
imul
jnp
sbb
movsb
pop
add
cmp
xchg
popa
dec
pusha
leave
sti
push
jg
pop
inc
out
and
sbb
stc
push
sub
sbb
jns
lods
js
and
pop
insb
mov
mov
dec
rorb
mov
dec
pusha
mov
sub
into
ret
xchg
pop
cltd
mov
insb
xchg
xchg
into
xchg
pusha
out
fsin
ljmp
sub
mov
mov
shll
movsl
xchg
sub
imulb
leave
cli
cli
jb
ljmp
and
aad
mov
insl
pop
pushf
adc
dec
subb
aas
sub
jp
ljmp
mov
cmp
js
addb
cmp
lahf
lcall
sub
cs
cmp
inc
or
mov
scas
data16
les
and
pop
inc
jb
mov
loopne
popa
pop
sbb
sti
jno
insb
xchg
inc
pusha
xchg
jnp
jae
jl
xlat
xchg
je
je
sbb
movsb
ss
jp
ficompl
out
shl
push
add
stos
push
mov
pop
xlat
xor
or
mov
cmp
jnp
xlat
push
rcll
xchg
dec
sti
fwait
push
sbb
aad
xchg
sbb
in
inc
cli
adc
xchg
mov
dec
and
mov
adc
mov
pop
fcomi
sbb
shlb
or
imul
rorl
jp
stc
mov
inc
and
pop
arpl
mov
js
jae
mov
popa
xchg
jo
pop
in
xchg
clc
or
daa
stos
mov
lods
dec
imul
inc
stc
fidivrl
xchg
xchg
call
scas
mov
or
sahf
jl
add
leave
fimull
ljmp
or
js
and
jns
push
push
popa
mov
ja
imul
adc
fadd
sbb
mov
sbb
inc
repnz
in
cmc
lret
lcall
mov
inc
arpl
jp
push
data16
imulb
sub
stos
movsb
xor
adc
push
insb
pop
out
lcall
int3
lahf
mov
fnstcw
mov
push
push
xor
subb
adc
mov
add
stos
inc
mov
jo
aaa
pop
xchg
cmpsb
test
xlat
sub
xor
cmc
adc
nop
jmp
pop
clc
pop
js
push
xchg
mov
insl
cld
cltd
adc
push
fisubrs
cmpsl
and
movl
ret
push
sub
aas
fsts
rorl
fmuls
and
aaa
add
xorl
lret
mov
inc
loop
cs
push
jl
clc
idivb
mov
sbb
aam
mov
pop
push
imul
out
aad
xchg
cmc
sub
movsl
test
push
addl
psrld
push
les
and
enter
das
jns
xor
pop
mov
enter
cmp
inc
in
cld
cwtl
jb
inc
fsubl
sub
xorb
pop
addr16
cmp
js
dec
jb
sbb
aad
lea
cvttps2pi
shlb
xor
jns
sbb
arpl
das
mov
int
aas
mov
jb
out
mov
pusha
loope
push
xor
jae
cmpsb
mov
push
ret
stc
jno
xchg
cld
mov
add
mov
enter
sahf
or
inc
subb
iret
or
mov
mov
mov
popf
loope
cld
adc
fwait
cmc
out
fnstenv
xchg
scas
je
sbb
inc
pop
out
loop
add
insl
mov
mov
data16
mov
jecxz
lcall
xor
mov
sbb
outsl
test
sarl
xchg
mov
into
xchg
cmp
cltd
cmp
mov
xor
or
arpl
pop
and
ljmp
cmp
lret
cmp
push
xlat
add
sbb
lret
iret
movsb
cltd
push
pop
xor
fbstp
notl
and
cmp
dec
scas
jae
xchg
mov
mov
lds
inc
test
xor
stos
mov
cld
sbb
negl
fdiv
imul
cmp
test
xchg
pop
in
push
dec
mov
mov
push
pop
sub
cmc
mov
hlt
ror
cmp
add
pop
out
mov
in
ss
mov
leave
ror
stc
xor
pop
sub
test
in
dec
pop
pop
sub
sbb
testb
fwait
into
lahf
ljmp
fildll
mov
inc
insb
mov
outsl
jno
push
test
loopne
pushl
cmp
fsub
pop
or
inc
test
ljmp
clc
dec
mov
sarb
popa
adc
pusha
mov
lcall
enter
js
ret
repz
popa
push
push
jb
pusha
movsb
jge
jmp
daa
mov
mov
cmc
fwait
outsb
shlb
xchg
add
sub
jnp
std
and
icebp
imul
xchg
mov
jle
popa
push
ror
sbb
sub
inc
and
out
and
rcll
sub
cmpsl
data16
imul
adc
xchg
sub
jle
add
jne
sbb
mov
adc
mov
and
and
daa
add
ret
fs
lock
sbb
sub
or
adc
push
cmp
adc
lds
mov
xchg
mov
push
imul
insl
xchg
addr16
mov
sub
jp
daa
push
test
ret
jb
mov
lods
fdivrs
aad
and
aas
es
or
cli
pop
aad
in
bnd
pop
sbbb
bound
lods
dec
lcall
cmp
or
test
je
gs
jmp
mov
mov
dec
xchg
daa
stos
and
stos
adc
fisubs
js
shrl
fists
loopne
jb
aam
and
sti
ss
loop
flds
shrl
scas
fsubrl
pop
js
ja
add
push
daa
lret
inc
adc
sbb
fstps
das
jp
aam
lds
fisubl
push
push
js
mov
xchg
test
adc
scas
or
xor
hlt
and
push
test
mov
mov
aaa
push
sbb
jb
fimull
out
inc
or
push
pop
pop
adc
jnp
mov
cltd
and
mov
or
mov
sub
loop
das
bound
adc
popa
mov
mov
psubusb
add
xchg
in
icebp
xor
loop
adc
mul
mov
pop
addr16
pop
repz
aam
stos
aad
shrb
pop
and
xchg
dec
outsb
and
inc
push
mov
inc
dec
sarl
inc
fcomps
fidivl
jecxz
pop
dec
xchg
xor
fmull
cwtl
cld
pop
pushf
sub
and
call
pop
add
mov
add
mov
mov
sbb
aas
js
mov
mov
stos
sbb
in
aad
enter
shrb
jecxz
pop
inc
mov
mov
clc
bound
mov
adc
out
push
xor
mov
int
movsb
sub
jp
dec
xchg
ficompl
loope
shrb
cwtl
dec
std
mov
call
addr16
enter
or
pop
jae
lret
xchg
mov
add
loop
mov
pusha
mov
int3
pusha
xor
ret
icebp
mov
addr16
enter
call
pop
inc
scas
and
xor
cwtl
out
sahf
cmp
push
mov
jle
sbb
and
xor
loope
jnp
pop
add
push
aam
imul
outsl
sbb
lock
cmp
jo
cmp
inc
jbe
push
jp
dec
rcrb
scas
jno
inc
or
inc
stos
xor
shll
int
adc
in
imul
and
fcomi
shrb
out
insb
cmpsl
and
adc
mov
pop
xor
mov
jmp
sub
pushf
adc
or
xchg
ret
sub
call
dec
jl
add
stos
cmc
pop
dec
mov
pop
rolb
daa
iret
fsts
mov
mov
jno
xchg
cmp
mov
mov
xchg
lret
xchg
addb
jl
dec
rorb
enter
xchg
jmp
sbb
jne
push
push
lcall
xchg
adcb
fsubrp
push
and
fisubl
add
lret
inc
dec
sti
in
fistl
cmc
or
lods
lret
rcrb
jns
mov
fst
jecxz
aas
aam
das
pop
pop
scas
cs
xchg
dec
push
push
cmp
jno
outsl
aad
test
into
xlat
pop
mov
xchg
insb
mov
mov
jp
test
adcl
pop
jno
cmp
shr
inc
pop
ret
rcrb
aaa
sub
or
ja
cmc
loopne
enter
or
cwtl
cltd
push
clc
aad
inc
ljmp
adc
and
fcmovu
addr16
enter
xchg
sub
pop
lods
aaa
fwait
push
lods
dec
adc
sbb
or
pop
mov
jns
xchg
mov
dec
scas
sarb
cmp
inc
or
and
pop
es
jb
push
mov
jp
arpl
mov
int
stc
cmp
subb
lret
pusha
jo
in
rorl
leave
xor
push
das
test
xor
ret
fbstp
cmp
sub
sahf
pusha
or
mov
inc
stos
and
mov
mov
pop
ret
mov
push
add
aas
mov
pop
jnp
xlat
mov
punpcklwd
jb
push
lahf
lea
mov
push
add
mov
shll
addr16
iret
out
mov
incl
das
std
push
in
fwait
ss
mov
pop
pop
xchg
out
add
inc
mov
out
or
leave
mov
lds
inc
xor
icebp
mov
mov
dec
inc
psadbw
out
cmp
pop
lods
push
sti
mov
mov
dec
dec
lods
pushf
movsl
fs
addr16
lret
shlb
scas
cmp
push
adc
int3
inc
inc
or
je
adc
popf
adc
or
add
mov
xchg
sahf
cmp
stos
es
test
push
inc
fistpl
sub
inc
or
stc
cmp
das
sub
adc
out
in
push
or
xchg
ret
xor
xor
std
mov
xor
jae
pop
inc
popf
nop
iret
jg
icebp
push
push
sbb
loopne
jo
movsl
push
pusha
loope
dec
xchg
fidivrs
mov
sub
sbb
out
loopne
mov
outsb
lods
push
jno
les
out
lea
lahf
dec
bound
and
repnz
mov
pop
std
hlt
xor
outsl
sbb
pop
push
dec
xchg
aas
adc
mov
loopne
push
sub
or
and
or
adc
data16
sahf
stos
mov
out
data16
adc
inc
mov
sar
arpl
imul
mov
js
cmpsb
or
stos
mov
adc
daa
stos
das
xchg
js
lock
pop
dec
rclb
dec
loopne
inc
outsl
mov
sti
shlb
repnz
jmp
push
fwait
sub
fmull
jg
inc
pop
xchg
push
mov
scas
add
cmp
or
push
jle
sub
xchg
or
mov
push
cmpsb
adc
imul
bound
pop
or
pop
mov
in
fcmovnbe
sub
push
cmc
mov
add
data16
jge
in
clc
sbb
jl
jge
cmc
gs
orb
in
push
pop
pusha
ficomps
mov
addr16
sbb
sub
lret
in
out
xchg
sarl
mov
or
popf
out
js
std
fidivrl
addr16
adcb
dec
xorb
sub
pop
adc
pop
inc
inc
jge
sbbb
dec
inc
int
sarb
cmp
mov
or
mov
and
test
loopne
fwait
std
jp
xchg
mov
sbb
push
push
out
lea
or
pushf
shlb
jl
jp
xchg
pop
mov
stos
fidivs
lret
stc
mov
pop
mov
xchg
inc
je
jecxz
shll
sbb
fs
mov
mov
insb
sub
je
and
test
lods
push
jp
jecxz
lods
into
int
sub
push
cli
lods
test
pop
int3
push
mov
shll
mov
into
scas
cmp
mov
and
fwait
jne
mov
mov
popf
pop
mov
mov
or
cltd
dec
xchg
in
sbb
cmc
pop
into
insb
cltd
mov
push
fcomps
add
inc
loopne
dec
fidivrl
fwait
pop
push
insb
or
fiadds
aas
aad
dec
aam
outsl
movsb
pushf
sbb
mov
test
adc
add
out
mov
add
gs
xor
inc
push
lcall
lds
adc
data16
shrl
popf
sbb
push
test
imul
adc
pop
jecxz
push
cmp
pusha
les
or
aas
mov
pop
mov
stos
rcr
mov
mov
cld
das
shlb
mov
nop
xchg
mov
inc
dec
rorl
xchg
jmp
mov
loop
outsb
icebp
lret
repz
lcall
jno
jg
out
inc
js
cmp
test
jp
stc
test
iret
inc
test
in
jnp
adc
mov
lods
inc
ffreep
mov
sbb
xorb
sbb
lods
xor
sub
imul
xor
sub
and
dec
push
mov
ljmp
pop
jns
movsl
or
lcall
gs
or
lods
test
mov
mov
repz
push
xchg
imul
notl
mov
mov
push
dec
lret
incl
test
repnz
out
jl
fbstp
fcoml
loopne
pop
fimull
scas
nop
rcr
adc
lea
pop
fistps
sub
dec
mov
pop
xorb
and
out
lea
aaa
cmc
push
in
mov
pop
mov
mov
xor
pop
lcall
out
jle
add
pop
mov
jns
loop
push
or
mov
movsl
shlb
cmpsb
xor
mov
push
js
xchg
inc
movsb
xchg
mov
lahf
jle
jnp
pop
jmp
lret
popf
jne
mov
sub
xor
push
push
popf
adc
and
gs
push
dec
push
insl
sbb
neg
or
and
out
in
xor
in
pop
sub
fldenv
inc
push
mov
pop
repz
int
add
mov
cmp
stos
xlat
pop
loop
mov
or
pop
cld
sahf
insl
xor
out
insl
pushf
stos
adc
or
mull
sbb
test
sbb
movsl
push
stos
cmp
cmp
inc
adc
sbb
jle
xchg
imul
dec
int3
sub
rcl
mov
movl
mov
jle
cmp
aas
lds
dec
mov
sahf
mov
pop
out
mov
sub
or
int
push
jecxz
sub
mov
shrl
jmp
stos
push
ss
cmc
lds
mov
lods
fiaddl
or
psubusb
shrl
addr16
add
ljmp
repz
pusha
rcl
repnz
aaa
fcompp
mov
daa
mov
add
fisubs
add
out
inc
scas
dec
cmp
or
rorb
and
jb
movsb
out
icebp
sti
push
outsb
pop
xchg
sti
and
push
cli
rcll
xor
repz
test
imul
fwait
push
pop
push
loop
das
cmp
cmpsl
scas
pop
pop
cmp
inc
rcrl
mov
cmpsl
pop
jb
pop
cmp
popf
or
clc
push
out
lods
xchg
mov
push
xchg
add
mov
mov
out
loop
outsl
cmovle
cmpsl
or
aas
and
scas
mov
pop
mov
fsubl
inc
inc
loopne
mov
mov
sbb
shr
adc
or
pop
add
test
leave
ret
adc
cltd
add
and
jmp
xor
cwtl
add
mov
mov
pop
ds
xor
cmpsl
rcl
and
xor
test
loop
arpl
mov
ja
mov
add
adc
mov
dec
pop
xor
int3
icebp
test
pop
lret
or
test
mov
xor
iret
stos
je
pop
rorb
icebp
or
mov
das
popf
cli
and
loop
jae
xor
pop
cmp
xchg
push
jae
jg
mov
or
dec
inc
push
popf
push
xchg
test
mov
int
cmp
dec
loopne
push
outsb
in
or
push
jg
push
jo
jns
mov
dec
jbe
clc
pop
test
test
test
push
scas
hlt
stc
xchg
hlt
fldt
pop
shrl
loope
push
or
icebp
iret
and
testb
andb
push
aaa
adc
arpl
pop
xor
sub
mov
mov
sub
data16
inc
xchg
scas
lea
fcompl
and
lock
cwtl
iret
es
push
out
cmc
jmp
sub
outsl
add
lret
roll
jns
imul
addr16
and
lret
cld
enter
pop
test
mov
jecxz
repnz
lret
les
jge
mov
mov
es
mov
stos
or
sbb
sbb
fidivl
push
adc
daa
lcall
mov
xchg
fildll
sbb
push
test
dec
movaps
pop
xchg
mov
xchg
mull
aad
pop
bound
add
push
rcll
sti
push
push
inc
xor
pop
or
fldl
sub
mov
test
mov
add
xlat
out
pusha
dec
pop
in
ljmp
xor
clc
outsb
shll
dec
xchg
pop
mov
pop
aas
cmp
add
push
xchg
dec
addb
repz
fisubrs
cmp
shl
test
push
sbb
pop
cltd
pop
jno
cli
mov
in
jbe
jge
mul
cmpsb
test
or
lods
xor
dec
mov
in
xor
or
push
push
insb
adc
stos
lods
orl
loop
xchg
pop
mov
lret
fbld
rclb
jecxz
pop
xchg
pop
inc
xor
sbb
and
bnd
push
jno
gs
and
je
cli
sbb
mov
add
mov
fbstp
into
push
and
dec
ret
and
and
mov
xchg
cmpsb
pusha
inc
mov
insb
fldl
and
dec
mov
shrl
jbe
jle
mov
ret
push
mov
ljmp
push
ret
inc
test
and
ja
add
mov
insl
sbb
fcomps
mov
pop
cmp
outsb
inc
push
mov
loopne
push
rolb
dec
jno
lock
xchg
dec
jge
mov
xchg
inc
inc
adc
jmp
loope
idiv
adc
rol
ljmp
sbb
cmp
jp
mov
jp
lret
js
adc
aas
in
stos
leave
shlb
mov
jg
in
enter
jp
xchg
in
xbegin
xchg
cmp
nop
jp
fadd
test
stc
gs
movsb
movsb
frstor
push
adcb
jnp
xorl
inc
xor
test
mov
imul
sub
loope
loope
mov
or
jmp
push
nop
push
mov
jns
lock
popa
mov
mov
mov
push
gs
iret
into
sub
xchg
dec
mov
or
fisubrl
ss
dec
mov
insb
adc
pop
sbb
dec
xchg
and
bound
incb
test
sbb
test
fwait
hlt
and
popf
out
js
cmc
pop
in
jnp
lcall
cli
mov
jae
inc
dec
sbb
es
dec
push
enter
lock
or
mov
pop
imul
sbb
in
fwait
ja
pop
insl
cli
clc
xchg
ficoml
inc
pop
test
push
xchg
jne
clc
or
xchg
sbb
into
dec
repnz
loope
sbb
stc
push
and
lods
and
mov
mov
push
loopne
push
lahf
and
mov
sahf
call
xchg
mov
dec
push
and
mov
pop
mov
push
xor
xor
imul
insb
and
das
arpl
popa
test
cmp
cli
push
and
lret
xor
sub
enter
pop
xchg
mov
inc
ljmp
pop
mov
push
out
xchg
xor
xchg
inc
fs
or
xchg
iret
xchg
les
xor
mov
out
add
adc
mov
jo
dec
cmp
cwtl
roll
pop
ljmp
inc
js
arpl
mov
sub
xchg
add
add
insl
sub
dec
xchg
lret
push
jae
add
xchg
push
push
jl
pop
and
xlat
ja
enter
leave
xor
jne
dec
fstpt
subl
dec
add
mov
imul
dec
xor
xor
fsts
cmpl
sub
je
lret
adc
mov
cltd
ja
mov
gs
cmc
sub
cmp
dec
push
aam
ds
in
scas
push
outsl
cli
shlb
push
movsb
adc
stos
repnz
sub
push
leave
loope
xor
in
xchg
nop
dec
pop
lret
jbe
sbb
fwait
and
shrb
push
jle
add
lods
add
in
idiv
and
daa
dec
cmp
test
aaa
iret
lcall
xlat
sahf
dec
mov
pusha
push
outsl
icebp
insl
jmp
mov
imul
pusha
rcll
ljmp
dec
mov
fwait
inc
rorl
push
iret
mov
pop
pop
mov
test
sbb
aam
clc
stc
sbb
fcomi
mov
add
jne
add
scas
fmul
and
mov
inc
add
mov
cmp
push
mov
test
jb
and
mov
outsb
pop
aad
test
push
std
cmp
pop
aam
add
mov
clc
shrl
pop
xlat
jns
sbb
ret
ja
movsb
or
es
loopne
inc
or
or
add
adc
fstps
lock
stos
xor
fsts
xchg
or
imul
call
clc
mov
mov
mov
enter
sub
inc
jle
push
mov
in
je
pop
or
sbbb
inc
mov
mov
mov
jnp
frstor
shl
jae
push
sub
cmp
je
insl
dec
arpl
mov
jns
fcoms
xchg
lcall
push
jo
pushl
xor
cli
cmp
call
lods
out
sti
adc
push
dec
arpl
lret
and
out
fsubrl
not
pop
loop
push
sbb
out
test
sub
mov
int3
sti
add
pop
dec
in
cmp
pop
ss
shl
dec
mov
addr16
sub
in
dec
loope
push
pusha
lods
loop
push
addr16
leave
mov
stc
ss
cmp
mov
jge
setnp
clc
fwait
enter
mov
pop
sbb
std
xor
push
lds
aaa
add
or
xor
inc
icebp
add
xchg
inc
movsb
imul
loop
mov
add
lret
jp
pop
sbb
xor
imul
mov
adc
roll
cld
ret
xchg
shrl
out
scas
push
push
pop
pop
jne
xor
negb
mov
inc
push
loop
add
adc
or
sti
jge
nop
adc
mov
mov
lea
add
aaa
idivl
sbb
sub
add
cmp
test
rcrl
xchg
mov
nop
inc
lret
sub
movsl
bound
push
inc
jb
mov
out
notl
jae
dec
stc
ljmp
rolb
mov
pop
cmpsb
cmc
stc
cld
mov
mov
add
enter
pushf
addr16
pushf
fstl
ds
xor
je
cltd
inc
imul
loop
jge
push
xchg
mov
mov
xchg
xor
xor
xchg
xor
std
sub
dec
xor
aaa
enter
nop
cmp
adc
or
push
dec
dec
inc
test
ljmp
loopne
jmp
imul
add
in
test
fidivs
imul
daa
adcl
sbb
mov
jle
pop
lcall
push
out
lods
add
push
jbe
notb
dec
mov
and
mov
hlt
stos
fcompl
fildl
pop
mov
mov
popf
pop
push
jecxz
mov
pop
es
gs
jnp
outsl
lock
push
push
pushl
dec
rclb
jno
or
repz
movsl
pminsw
mov
mov
pop
xor
loope
aam
dec
cmpsb
sti
xchg
sbb
cli
subl
pop
pop
inc
divps
jg
aaa
scas
fbstp
nop
mov
lcall
sbb
lods
xchg
and
stc
mov
jb
stc
inc
dec
add
push
mov
imul
push
clc
push
mov
and
lds
icebp
cs
push
sti
ja
loop
jmp
repnz
xor
repnz
decl
shrl
fstl
das
xor
movsb
inc
repnz
xor
outsl
imul
sub
add
mov
adc
stc
xchg
jle
dec
mov
popl
add
pop
inc
sbbl
adc
imul
mov
push
call
xchg
dec
mov
loop
cmp
jns
xrstor
mov
stos
xor
cmp
loopne
repz
jp
ljmp
pop
lods
popf
dec
pop
int
cmpsb
cmpsl
adc
fwait
ljmp
push
sub
aam
pop
mov
and
fsts
shlb
nop
cmp
das
mov
push
pushf
nop
push
mov
or
push
test
imul
cs
sub
pop
push
data16
int
loopne
or
xor
cli
cwtl
sub
mov
and
inc
inc
aaa
into
lods
fsts
js
adc
mov
jl
pop
imul
mov
sub
mov
jge
pop
fmulp
or
cltd
mov
pop
insl
mov
pop
out
mov
push
cmpsb
aaa
mov
inc
push
int3
pushf
repz
pop
in
jecxz
andl
stos
lods
mov
lods
test
push
add
sbb
cmp
dec
xchg
pop
mov
insl
in
jl
ss
stos
adc
xor
pop
or
inc
mov
nop
inc
cmpl
pop
push
cmpb
adc
mov
pop
ret
jbe
mov
dec
inc
or
cmp
jge
outsb
pop
add
jmp
pop
jnp
fstl
nop
es
pop
out
adc
stos
push
lods
inc
cli
scas
jo
and
ret
xchg
xor
inc
jle
adc
inc
movsl
pop
sbb
gs
ret
mov
daa
and
xor
int
je
add
xchg
stos
mov
mov
mov
in
mov
sahf
fnstenv
and
fisubl
repnz
fstl
cmp
adc
dec
fbstp
iret
imul
insl
das
push
xchg
and
subl
outsl
repz
jb
mov
mov
pop
mov
add
roll
or
cmpsb
xchg
jp
add
jge
jbe
and
stc
mov
jae
push
sub
cli
daa
es
inc
arpl
dec
subl
sti
sub
repnz
mov
jae
or
push
adc
jmp
mov
xlat
jnp
push
fmull
cmp
shll
imul
iret
int3
or
jns
jge
adc
push
rcll
mov
enter
data16
rcrl
xchg
sbb
jp
inc
leave
addr16
mov
mov
cs
lcall
mov
inc
lret
sahf
adc
push
push
pop
xor
stos
inc
scas
pop
adc
or
sbb
xchg
jge
pop
out
leave
outsb
loopne
xor
lock
lods
lahf
cmpsl
xor
lock
in
inc
or
rcrl
push
movsb
ret
daa
xchg
mov
std
mov
int3
xor
fcmove
mov
fldt
das
lds
inc
mov
leave
pushf
js
adc
mov
mov
negb
js
xlat
sub
and
lret
fildll
out
dec
dec
insl
call
jns
in
in
and
and
adc
mov
mov
insb
movsl
jp
push
jnp
pop
in
hlt
out
sub
mov
shl
mov
icebp
repz
addr16
mov
les
sahf
and
mov
sub
push
js
inc
vmovshdup
js
popa
popa
inc
cmpl
pop
call
mov
fldt
outsl
pop
jns
addr16
ds
mull
cmp
xchg
rcl
sbb
sub
push
js
cmpsl
mov
adc
call
fldcw
int
jbe
inc
mov
mov
dec
std
mov
sahf
sub
push
dec
mov
enter
das
int
pop
xchg
outsl
pop
adc
cmc
add
push
movb
pop
mov
mov
mov
inc
mov
orb
insb
ret
pop
ss
and
push
idiv
and
adc
xor
nopl
xchg
aaa
and
inc
addr16
jae
in
lods
pop
mov
cmp
mov
into
aad
mov
cli
cmpsl
cs
out
test
hlt
repz
push
pushf
lea
jmp
call
push
fistpl
pop
ss
pop
in
mov
inc
adc
pusha
mov
xchg
scas
mov
add
lret
pop
sbb
fiadds
or
sub
cld
add
jge
jle
sbbb
mov
cltd
popf
cmp
xor
test
mov
icebp
mov
sbb
and
or
movsl
notb
int3
stc
dec
lcall
in
push
cltd
sub
xor
add
xchg
dec
mov
divl
cmpsl
and
sub
std
rolb
xchg
mov
rclb
repz
lock
sbb
jae
push
and
add
pop
push
je
insl
lods
jnp
dec
subl
and
mov
call
outsl
xor
ss
mov
dec
lea
cmc
push
mov
or
test
loope
in
xchg
daa
jmp
movsb
mov
rclb
out
test
std
movsl
xor
cmp
into
sbb
imul
shrb
test
sbb
aad
pop
into
fs
mov
ss
loopne
dec
mov
imul
mov
jae
stos
jmp
xor
or
push
xor
out
fcmovnu
scas
push
jne
lret
int3
jb
sub
test
pop
scas
stos
adc
mov
mov
inc
xchg
sub
in
into
xor
cwtl
inc
cmpsl
shrl
int
and
popf
mov
mov
ss
adc
addr16
jl
lret
imul
sbb
mov
dec
popf
test
dec
push
inc
push
sub
or
xor
sub
adc
mov
rcrb
stc
sub
xchg
cli
and
adc
sub
add
and
mul
mov
xor
cmp
stos
lret
jns
mov
js
mov
lea
jle
or
sbb
loope
mov
aad
cmp
hlt
add
mov
and
pop
dec
cmp
jmp
daa
stos
sub
cmp
subl
inc
pop
pusha
pop
int3
ret
pop
cwtl
and
and
mov
dec
shr
outsl
pop
jns
mov
outsl
mov
add
cwtl
call
mov
sub
fstp
mov
pop
push
inc
mov
xchg
adc
rorb
mov
loope
ret
clc
pop
sbb
inc
cmpsl
in
ja
pop
lock
shll
sbb
loope
lods
jno
pop
or
mov
clc
or
into
ljmp
test
and
cwtl
stos
je
adc
inc
sub
xlat
je
jae
out
cmp
pop
and
cmp
and
lret
xorb
in
add
out
incl
incl
test
rorb
adc
aad
or
sbb
int
sbb
jle
test
push
push
adc
xchg
jl
jmp
xchg
repz
leave
or
pop
fisttps
push
mov
mov
call
out
jp
jmp
cmovge
in
les
into
popa
xor
loop
adc
jno
les
cs
popa
cmp
test
dec
push
aas
xchg
movb
xor
and
ficompl
fisubl
mov
mov
scas
lea
adc
in
jg
xchg
shll
ss
jle
daa
lret
adc
jge
mov
xor
leave
out
pop
mov
repnz
adc
data16
add
or
cmpsb
leave
xchg
jecxz
dec
fnstsw
addb
cmpsb
push
sti
cmp
xchg
mov
pushf
xchg
popf
out
mov
or
xor
in
shll
fdiv
addr16
xchg
enter
cmp
mov
add
sub
cmp
dec
insb
cld
dec
fstl
and
int
push
sub
push
outsb
leave
out
cltd
jl
or
xlat
push
pop
cmp
lock
iret
xchg
cmpsb
repnz
jmp
loope
and
pop
loop
adc
xchg
pop
sarb
popa
arpl
jnp
jns
fcmovnb
and
add
jle
hlt
stc
shrb
daa
enter
pop
adc
jle
inc
pop
push
xchg
mov
aaa
cmp
out
inc
movsl
jle
test
and
popf
mov
js
popf
into
rcrl
xchg
inc
jbe
and
mov
clc
xor
shrl
lds
test
.byte
xor
.byte
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
push
push
push
push
pushl
pushl
mov
sub
cltd
sub
sar
push
mov
sub
cltd
sub
sar
push
push
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
pushl
call
andl
pushl
call
push
push
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
je
js
add
add
dec
add
add
add
add
add
add
add
jb,pn
popa
je
add
push
sbb
add
pusha
add
add
add
add
add
add
cs
je
add
add
addb
add
add
inc
add
loopne
je
js
add
add
add
add
add
inc
add
loopne
jb
popa
je
add
les
add
adc
add
mov
add
inc
add
loopne
fs
je
add
add
add
add
or
add
lret
inc
add
loopne
add
xor
xor
call
pusha
call
bound
mov
xchg
cmc
inc
push
pop
js
or
jp
and
sub
mov
pop
jge
mov
mov
sub
mov
sub
fisubrl
add
out
push
push
sti
decl
add
xchg
add
jno
aas
ror
scas
and
mov
jp
or
jo
repz
out
aaa
scas
out
sahf
cs
das
push
sub
jecxz
subl
or
pushf
or
dec
cld
bnd
xchg
pop
mov
nop
inc
mov
loop
push
jne
pop
pop
ficompl
xor
mov
mov
sbb
pop
adc
pop
lods
testl
push
or
mov
popa
int3
lret
push
popf
push
in
cmc
push
dec
cmp
push
xchg
pop
rorl
data16
jmp
mov
inc
clc
cmp
sub
pushf
or
fildll
repz
call
sub
pop
sbb
mov
jo
decb
rcrl
hlt
jl
sbb
xor
or
mov
xchg
mov
shrb
fcoml
ds
pushl
mov
xchg
nop
insl
cmpsb
add
jne
dec
sbbb
iret
and
cmp
inc
dec
or
sub
sahf
rcrl
jbe
ds
inc
push
pop
mov
incb
jle
xchg
lods
pop
or
inc
sbb
xchg
fisttpll
pop
into
ljmp
sub
lahf
push
mov
jg
jecxz
popa
lock
pop
jo
push
inc
lret
ja
enter
dec
fucomp
pop
mov
cmpsb
stos
jp
cmp
pop
pushf
sub
sbb
mov
das
cmc
leave
push
insl
dec
mov
sub
mov
push
and
jne
pop
sbb
xorb
add
arpl
jecxz
jecxz
mov
pop
out
clc
popl
mov
pop
xchg
jae
clc
mov
adcl
mov
xor
dec
jle
dec
mov
jo
outsl
fdivrs
into
and
mov
mov
in
lods
sub
and
clc
insb
jp
push
dec
xchg
mov
add
inc
dec
dec
outsb
adc
dec
xchg
mov
dec
dec
fisttpl
inc
std
in
or
ret
inc
dec
stc
lret
aad
inc
into
loope
adc
cmpsl
jmp
gs
test
add
inc
pop
data16
mov
add
gs
dec
ss
mov
jp
insb
jns
jne
cmp
hlt
addr16
inc
les
adc
js
aas
dec
push
adc
dec
sarl
mov
xchg
mov
pop
stc
push
mov
ret
xor
inc
daa
xor
jo
cltd
das
adc
push
mov
maskmovq
mull
mov
out
cmp
jae
cmpsb
sub
adc
push
jne
push
test
pop
ss
lds
loopne
lahf
notl
fisttpl
jecxz
stos
in
jns
in
mov
popf
frstor
mov
roll
cmp
and
mov
aad
or
mov
mov
add
push
mov
add
xor
xor
mov
out
sub
pop
mov
movsb
dec
lret
cwtl
mov
mov
popf
int3
cmc
mov
jle
xor
shrb
push
xchg
push
pop
or
inc
pop
inc
cmpb
mov
ds
mov
psrlw
sarl
cwtl
adc
and
mov
sub
jne
inc
or
rol
jno
sbb
add
cmp
jmp
out
xor
lcall
loopne
dec
xor
push
dec
les
in
or
lret
mov
out
outsl
or
arpl
in
ljmp
sbb
or
sub
lock
stc
cmp
cld
mov
repz
out
lea
dec
add
xor
xchg
outsl
or
jle
lock
mov
ds
jge
cmp
sbb
or
jae
and
push
inc
repnz
pop
ss
and
test
push
in
and
mov
pop
xchg
adc
push
push
in
xchg
push
pop
scas
pop
adc
ret
pop
sbb
hlt
mov
bound
sahf
xor
mov
mov
and
stos
cli
jmp
cmp
in
or
loop
adc
daa
leave
mov
sbb
lods
mov
out
xor
lahf
imul
cmp
add
dec
mov
lahf
repz
dec
jmp
test
bound
jae
dec
jno
lahf
cld
add
call
jo
sbb
stc
mov
cli
mov
loop
xchg
and
mov
pusha
loope
outsl
sub
or
inc
mov
out
aas
pop
and
out
adc
das
xlat
lahf
js
lock
cmpsl
sbb
xor
out
pop
lds
dec
xor
lea
mov
scas
pusha
cmpl
xchg
sbb
mov
mov
cmp
sbb
mov
dec
pusha
jecxz
test
aad
stos
and
push
icebp
xor
into
lods
push
std
or
test
adc
cmp
out
cs
int3
cmc
jl
addr16
je
mov
dec
filds
fldt
sbb
faddp
cmp
jl
push
xor
arpl
pusha
xlat
sbb
xchg
push
outsb
sti
aad
lock
sbb
cli
adc
loope
imul
out
leave
insb
or
pop
push
cmp
dec
popf
shr
add
pop
or
lahf
lcall
scas
jmp
xor
adc
dec
sbb
xchg
fwait
aaa
xor
ficoml
push
push
pop
insl
push
jg
inc
js
js
leave
sbbb
test
jecxz
mov
fdivrl
sti
jg
and
mov
les
rep
negl
pop
mov
inc
movsl
cmp
add
std
dec
out
rep
imul
and
jmp
out
add
bound
mov
mul
sbb
mov
leave
pop
hlt
push
ja
or
xchg
repz
arpl
cmp
shrb
xchg
arpl
mov
push
xchg
fstps
sub
dec
jmp
stos
sub
movsl
cmp
popa
jge
lahf
cmpsb
cli
push
or
pop
mov
xchg
adc
mov
clc
js
addr16
add
jecxz
sar
sub
fwait
pop
xchg
xor
push
cltd
inc
mov
sub
jl
mov
cmp
fucom
dec
pop
pushf
mov
jmp
or
pop
into
scas
lods
and
push
frstor
ror
cld
popa
iret
push
push
push
leave
xchg
sbb
cmp
outsl
cmp
mov
or
cmp
test
push
je
inc
pop
testl
inc
inc
daa
iret
adc
adc
pop
jbe
es
imul
icebp
or
pop
es
out
or
nop
xchg
xor
out
dec
scas
icebp
les
mov
sbb
das
sbb
out
dec
or
add
cmp
mov
fwait
shll
int3
scas
je
clc
sub
popf
adc
xchg
ja
adc
inc
dec
jg
dec
adc
xor
pop
pop
pushf
dec
cmp
sub
out
daa
add
sub
js
pop
je
push
adc
shlb
dec
leave
push
jg
ss
xchg
sbb
das
stos
test
cmpsl
mov
xor
add
test
cwtl
adcb
dec
pop
xchg
cli
in
fcoml
mov
sahf
daa
test
mov
pop
push
imul
mov
push
jmp
stc
or
orl
iret
and
or
push
jno
bound
repz
icebp
xchg
add
and
mov
aad
bound
xor
mov
mov
sahf
mov
sub
xchg
testl
add
cmp
pop
push
jnp
jl
pop
ljmp
inc
xorl
lods
icebp
shlb
dec
adc
clc
mov
or
dec
lcall
aam
sub
cmc
mov
push
or
test
jmp
push
cmp
sbb
cmp
loop
lcall
addr16
jb
sbb
push
insl
sub
inc
push
gs
pop
stos
call
pop
mov
add
mov
mov
in
test
jle
push
stc
into
inc
insb
or
or
pop
dec
lret
inc
pop
jno
aam
das
jno
sbb
mov
dec
jnp
cmpsb
icebp
lock
cmpsl
out
xchg
lret
sub
and
jno
mov
jne
ljmp
adc
fldt
fisubrs
mov
sbb
jmp
adc
jno,pn
xchg
inc
movsl
fcmovne
adc
jne
add
ret
pushf
jnp
in
adc
add
lods
mov
subb
mov
jp
and
aam
inc
mov
or
addr16
ja
pop
mov
push
jge
mov
cmpl
mov
xchg
loope
loope
cli
outsl
pop
cld
leave
outsb
repz
mov
dec
cmp
lods
mov
jno
and
rorb
mov
push
in
mov
adcl
cmp
shl
roll
and
sub
jbe
dec
dec
dec
mov
pop
adc
pop
mov
mov
or
dec
scas
or
pop
sahf
repnz
leave
jmp
sbb
test
mov
xchg
outsb
jno
inc
cli
ss
mov
loope
xchg
call
jnp
mov
jmp
mov
cmpb
sub
bound
scas
aas
sbbl
xchg
dec
lods
daa
pop
sbb
cmp
out
cmpsl
stos
aas
mov
in
mov
mov
add
lcall
in
jbe
jb
shll
jle
mov
sbb
faddl
lock
mov
fwait
or
cld
xor
repz
mov
fistl
dec
popa
or
jnp
dec
cmp
loop
dec
sub
sbb
xor
cmpsb
leave
into
push
scas
dec
orl
arpl
xchg
lcall
jns
mov
mov
pop
dec
insl
pusha
decl
cmc
in
push
sub
cmp
mov
popa
or
sbb
xchg
sahf
je
pop
out
outsb
bound
push
push
movsb
sbb
ret
lahf
adc
jno
outsl
call
cs
pop
in
cmp
nopl
jnp
xor
adc
cmpsl
dec
xchg
scas
push
push
sbb
push
hlt
out
cmc
out
mov
les
mov
fxam
hlt
pop
xchg
adc
mov
push
inc
nop
adc
shll
lcall
js
outsb
lret
and
jno
sub
lods
scas
pop
xchg
ja
mov
dec
mov
subl
icebp
insb
xchg
mov
adc
hlt
clc
adc
xor
dec
inc
mov
iret
mov
and
int3
sub
jmp
push
repz
push
lock
imul
mov
les
fisttpll
lock
sub
iret
dec
jmp
fs
xchg
daa
or
in
xchg
into
js,pn
pushf
pop
aad
mov
leave
xlat
std
sbb
test
mov
popa
dec
movsl
sbb
push
mov
mov
jecxz
repz
test
lret
cli
inc
in
mov
sub
xor
add
ljmp
mov
pop
scas
push
in
xor
aas
push
sbb
aam
and
leave
xlat
dec
push
mov
pop
sbb
jge
mov
xchg
pop
jmp
js
loop
cmpsb
add
lret
lret
in
cmp
imul
sub
mov
sbb
push
in
iret
icebp
rorl
pop
adc
or
loope
test
and
je
dec
in
test
xchg
roll
ficoml
dec
cmpl
fldlg2
adc
aas
add
pop
add
std
and
decl
lret
xlat
cmpb
or
mov
bound
mov
int
lcall
add
xchg
jae
sub
mov
out
cmp
movsl
aam
inc
add
inc
mov
xchg
adcl
push
mov
outsl
out
or
sub
push
gs
clc
pop
je
insb
mov
sub
mov
inc
std
or
jne
fistps
cmpb
fldz
jp
addr16
jns
mov
rcll
stos
push
sub
sbb
leave
push
movsb
mov
arpl
cltd
push
dec
cli
or
pop
dec
xchg
fwait
pushl
jge
jl
or
push
mov
mov
ljmp
pop
fs
sbb
sub
mov
sarb
mov
in
add
lock
mul
jmp
ret
push
xor
inc
bound
les
das
add
dec
int
loope
push
mov
in
test
mov
out
jp
sbb
lcall
scas
fisttpll
repnz
lahf
shlb
lods
insl
jne
hlt
dec
fcmove
or
and
jp
jbe
jne
jl
jno
into
push
mov
notl
jbe
int
jne
xchg
sbb
xchg
add
je
mov
adc
pop
leave
adcl
in
arpl
lock
mov
sbb
push
mov
sbb
inc
stos
test
xchg
rep
xchg
jg
mov
pop
pusha
cld
imul
addr16
adc
mov
cld
mov
cmp
sbb
movsb
testb
cld
pushf
pop
sub
xchg
mov
cmpsb
mov
arpl
aad
sbb
add
and
xchg
mov
or
sbb
test
or
rcl
and
pushl
jmp
cmp
testb
pop
dec
adc
fucomip
dec
aad
cwtl
shll
imul
and
std
inc
inc
shl
test
repz
lds
sub
lret
cmpb
pushf
dec
test
ja
fcomp
mov
rclb
jg
lcall
sub
int
cmp
xor
shl
repz
sbb
pop
out
xchg
dec
pop
scas
xchg
leave
icebp
dec
fucom
push
dec
push
lea
call
mov
mov
dec
jle
add
lock
jp
xchg
ss
in
dec
pop
repnz
dec
cld
mov
stos
dec
pushf
ljmp
aam
ds
stc
and
scas
es
pop
push
jg
stos
inc
add
addr16
aam
loopne
outsb
and
in
int
add
xchg
adc
push
inc
and
lock
aaa
je
movsl
stc
xchg
aaa
rolb
cwtl
pop
movsb
lcall
jb
adc
push
les
insl
mov
mov
test
ja
push
jmp
insl
xchg
xchg
fs
jecxz
sbb
sub
cmp
test
mov
imul
sub
shrl
cmp
push
inc
xchg
inc
scas
push
ljmp
jae
cmp
xor
xor
insb
roll
and
mov
xchg
pop
in
dec
push
mov
jae
sub
jg
inc
out
lds
xchg
cli
scas
mov
push
push
and
pop
pop
mov
and
rcr
adc
push
sbb
mov
into
movsb
and
mov
leave
jae
mov
cmp
sub
sti
jecxz
xor
xlat
pop
jge
ds
ljmp
ret
add
pop
xor
lea
in
jecxz
jecxz
out
mov
neg
push
xadd
xor
cli
stc
js
mov
repnz
add
cmpsl
imul
loopne
mov
cld
add
or
inc
inc
sub
mov
insb
push
mov
fwait
movsl
push
pop
inc
sarb
rclb
sbb
repz
mov
mov
lahf
push
mov
push
leave
fcomps
inc
and
stos
in
mov
xchg
mov
or
xchg
add
xchg
ljmp
xor
xlat
xchg
or
inc
sti
aad
cmp
daa
add
adc
inc
jmp
enter
jl
cltd
push
or
cld
push
cmp
cmpb
cld
jge
repnz
xor
shlb
pop
xlat
sub
in
push
adcb
out
xor
mov
xchg
jne
popf
in
arpl
sub
daa
push
cmp
mov
add
pop
ror
jns
xor
adc
outsl
push
mov
xchg
popa
ljmp
push
cld
sbbl
jp
mov
loopne
leave
dec
xchg
mov
xor
cli
cli
imul
mov
xlat
push
fcomps
mov
cmpsb
in
adc
jnp
loopne
fwait
mov
hlt
clc
arpl
int
push
push
sbb
incl
or
sub
and
ljmp
xchg
add
cli
cltd
dec
mov
mov
int3
decb
add
lret
ss
jbe
mov
dec
xor
in
nop
fsubrs
and
iret
xlat
fimull
outsb
inc
lahf
push
pop
fimull
dec
dec
mov
insl
aam
repz
inc
push
jle
mov
aas
jbe
sub
xchg
or
pop
jp
inc
and
push
jae
sbb
inc
dec
in
rcl
stc
or
or
decb
dec
aam
pop
jns
lahf
xchg
mov
es
sub
or
shlb
xchg
adc
movsb
les
jmp
add
xchg
pop
and
push
cli
test
jbe
fs
mov
inc
loop
xor
test
xor
icebp
mov
daa
mov
push
pop
jle
and
aam
mov
adc
add
fcompl
out
push
leave
push
ss
xor
lea
jmp
test
stos
cmc
lret
xor
xor
push
rcrb
enter
mov
loop
add
lock
pop
rcr
out
inc
insb
iret
test
and
cmp
push
xchg
add
or
mov
sub
xor
dec
jns
fwait
addr16
data16
jo
xor
push
push
sub
jne
dec
or
push
jmp
jb
movsl
and
adc
mov
movsl
jecxz
mov
fdivrs
fldl
jno
enter
xor
cmpb
insl
dec
ret
xchg
lods
mov
aad
mov
mov
neg
mov
xchg
std
rcrl
stc
aas
mov
repz
mov
or
daa
lahf
jb
xchg
fisttpl
mov
mov
adc
xchg
xor
je
daa
sub
cltd
push
jnp
mov
xor
mov
popf
popa
lea
loopne
mov
mov
lret
xchg
mov
dec
mov
mov
cli
imul
jg
or
mov
out
ja
pusha
je
lret
push
mov
aam
imul
xchg
jmp
int
jp
vpshufd
andb
aas
fmuls
or
popf
lret
and
aas
neg
xchg
lds
mov
rcr
mov
xchg
xchg
negl
xchg
sub
pop
lahf
dec
lods
jl
mov
mov
mov
pusha
hlt
push
ljmp
addr16
or
clc
ret
fwait
mov
call
or
sub
xchg
fisttpll
sub
jmp
insl
sbb
inc
or
sahf
dec
sub
shrb
ret
shr
js
add
dec
xchg
cmp
pop
pop
xor
xor
mov
or
adc
mov
pop
mov
mov
popf
push
adc
iret
push
mov
cmp
in
sbb
popf
and
test
scas
xchg
xchg
pop
lds
or
and
int
sbb
jp
testb
sbb
inc
rcr
xchg
pop
push
aaa
pop
push
push
sub
inc
cmp
cmp
adc
in
dec
inc
mov
cs
stos
xor
add
sti
loopne
ret
out
mov
xor
adc
and
add
stos
fbld
pop
imul
movsb
cs
inc
cwtl
imul
repnz
push
loope
addb
mov
inc
lods
jp
int3
cmpsl
lods
iret
mov
mov
jno
adc
cmp
out
dec
adc
jns
add
popf
in
xor
cltd
rorl
and
pop
popf
sub
dec
xchg
adc
insl
jnp
mov
pop
insl
mov
movsl
mov
enter
or
pop
mov
decl
push
pushl
jnp
aam
dec
xchg
or
or
stos
push
adc
inc
and
in
push
sbbb
leave
pop
jge
outsl
mov
jne
mov
xor
incb
cli
dec
fmull
sti
cld
mov
and
jg
inc
lods
dec
sbb
mov
cwtl
imul
adc
test
sbb
movsl
push
add
cmc
aad
and
push
out
push
add
dec
repnz
fidivl
loopne
sahf
pop
jmp
and
in
xor
lahf
testl
andl
xor
test
in
scas
mov
int
sbb
sbbw
or
js
stos
dec
out
fdivrs
xor
pop
dec
frstor
xchg
enter
mov
or
int3
cmp
adc
adc
in
das
ds
jmp
xchg
inc
lret
movb
xchg
xchg
mov
dec
fcmove
xor
mov
call
std
sbb
mov
into
xor
push
push
in
pusha
hlt
xchg
insl
shll
lods
or
lock
lods
mov
lds
mov
inc
out
mov
pop
sub
decl
mov
sarb
lock
dec
push
adc
jmp
mov
rcr
xor
hlt
aas
mov
in
lock
jecxz
ret
add
push
gs
push
mov
pop
sbb
scas
or
lahf
lds
cmp
push
add
jge
leave
outsb
add
sbb
mov
stos
mov
and
pop
push
mov
push
fisubl
iret
iret
push
adc
cmp
roll
sub
xor
jae
mov
les
nop
outsb
jl
bound
aas
scas
jl
sbbb
xor
adc
repz
out
mov
cmpsb
xor
adcb
or
mov
jb
stc
mov
sbb
xor
push
adc
fisttpl
call
test
mov
sbb
push
pop
add
add
sbb
push
gs
dec
aad
outsl
lds
pusha
sti
aaa
mov
xor
mov
das
sub
xchg
mov
fsubr
add
jbe
enter
sub
and
pop
sbb
lods
gs
scas
or
testb
pop
cmpsb
arpl
sti
and
adc
xchg
xchg
mov
test
xchg
xchg
test
orb
add
iret
icebp
stos
sub
clc
mov
push
iret
cmp
rcll
push
inc
out
sbb
or
sbb
mov
loopne
inc
inc
inc
mov
inc
ror
jne
or
mov
lahf
cld
mov
and
inc
or
in
cmc
je
mov
lock
popl
cmp
sbb
data16
adc
pushf
sbb
pop
dec
adc
hlt
xchg
xchg
dec
aam
mov
mov
xchg
add
push
pop
xlat
mov
add
adc
xor
out
ficoms
sub
xor
ljmp
out
sub
sub
xchg
arpl
sbb
adc
pushf
inc
test
push
mov
push
push
repnz
roll
xchg
cmpsl
loope
lcall
stc
inc
push
inc
adc
cli
lret
and
push
xchg
ret
aad
and
out
sar
sbb
inc
xchg
sub
int3
out
mov
outsl
cmpsb
add
or
and
loope
es
popf
xor
idivl
push
push
shrb
add
mov
cld
addr16
sbb
stos
arpl
push
test
push
aaa
cmp
fldl
sub
inc
lds
gs
sarb
into
ret
fildll
cmp
xor
xor
mov
in
xlat
pop
idivl
data16
repnz
lret
sub
lcall
sahf
or
js
pushf
xchg
sub
lods
sub
stc
mov
paddq
adc
shlb
inc
add
push
clts
dec
bound
and
outsl
jp
adc
jl
fdivl
sbb
pusha
jne
fcmovnu
test
pop
mov
dec
push
shlb
sti
rorl
js
push
lahf
jns
movl
outsb
std
iret
dec
adcl
xchg
mov
imul
ret
jne
lods
dec
sub
inc
jle
cmp
ss
aad
inc
lcall
cmpsl
outsb
add
mov
jg
out
mov
shlb
cmp
inc
sbb
mov
pop
dec
outsl
push
ljmp
cs
mov
repnz
aam
leave
stc
scas
nop
inc
xlat
or
daa
sub
jbe
jge
push
dec
adc
fs
pushf
stos
cltd
fwait
mov
inc
out
cld
pop
btr
out
cmc
jae
enter
jnp
cmp
rorl
je
dec
pop
adc
subl
movsl
dec
loop
push
mov
add
test
jmp
test
push
or
test
dec
fstpt
mov
xor
xchg
outsl
inc
and
out
int3
jge
int
sahf
nop
fisubrs
ljmp
hlt
adc
lea
mov
push
jl
sub
mov
test
daa
lds
insl
repz
dec
adc
ret
sbb
xchg
add
push
cs
mov
or
or
fists
jmp
mov
mov
adc
int3
mov
mov
nop
insb
dec
shrl
sti
cmp
mov
cmp
fdivrp
mov
loope
sub
xor
stos
mov
or
mov
dec
and
shl
cld
jl
inc
sub
mov
dec
sbb
lds
bnd
ss
mov
or
add
push
cmc
jb
dec
ja
imul
fisttpll
adc
pop
ss
flds
and
push
mov
ljmp
sti
nop
dec
xchg
das
mov
movsl
xchg
mov
mov
rclb
clc
mov
in
push
insb
jns
arpl
sbb
fimuls
add
loopne
movsb
ds
inc
int3
adc
hlt
aad
push
inc
hlt
xor
cwtl
xor
jnp
arpl
mov
jg
xchg
repnz
push
mov
push
xor
add
jns
es
push
shrb
mov
xchg
jnp
and
push
push
fildl
rolb
and
test
pop
xchg
dec
xlat
xor
add
xlat
cmp
lock
fs
dec
insb
sti
dec
addr16
mov
into
push
ljmp
mov
nop
sub
gs
fcoml
stos
daa
adc
jge
cmp
aad
repnz
inc
mov
stos
js
xchg
movnti
jns
testl
outsl
pusha
sbb
and
stos
test
mov
mov
dec
jne
loope
jne
popf
pop
adc
add
mov
sub
push
pop
mov
mov
push
cmp
inc
xchg
aad
push
and
fildl
js
jnp
fldenv
lock
inc
cmp
xchg
xchg
ss
inc
push
dec
add
in
xor
mov
lods
sbb
xchg
jp
je
aas
fstl
pop
ret
fadds
xor
xchg
movb
orl
cs
push
push
xchg
es
rcrb
test
pusha
xchg
pop
frstor
pop
push
mov
jne
sahf
pop
test
pushf
ret
rcll
mov
repnz
loopne
repz
jge
ds
rcll
xchg
ljmp
pop
sub
test
push
movsb
dec
std
addb
adc
adc
outsb
add
adcl
sbb
mov
add
cmp
cmp
les
std
pop
jae
and
ljmp
pushf
mov
rcll
or
mov
push
or
or
and
pop
repnz
add
negl
jge
loopne
orl
lcall
rorl
cwtl
sub
movsb
inc
lea
pop
in
mov
fnstsw
fmulp
xchg
sub
cmp
add
lret
sbb
cmp
xor
ljmp
dec
mov
sahf
les
aam
lret
sarb
xor
jmp
push
sarb
ja
lea
xchg
xchg
cmp
push
ret
adc
in
fwait
pop
adc
push
xlat
adc
push
push
jnp
mov
pop
je
dec
push
scas
inc
pusha
sub
lods
test
test
bound
dec
inc
lea
aad
and
outsl
mov
and
cmp
imul
and
mov
mov
lods
or
cmc
test
adc
lret
xor
xor
mov
repz
mov
mov
aaa
jg
mov
push
fs
cmc
das
cmp
cmpsb
sub
jb
call
xlat
insb
bound
sub
xor
andl
pop
pop
in
mov
push
outsl
xlat
jp
divl
cmp
movsb
pop
fbstp
imul
ret
out
pushf
imul
push
insb
dec
mov
aam
dec
fidivrs
cli
sahf
add
mov
inc
sbb
push
dec
inc
xchg
bnd
ds
cmpsl
shlb
jbe
mov
stos
mov
add
fidivrs
mov
mov
movsl
test
xor
or
test
cli
cmc
jae
js
pmovmskb
push
sub
imul
mov
pushf
pop
sbb
enter
ss
outsb
pop
inc
add
push
xor
cmpl
mov
cmpl
lret
sub
and
xchg
aas
dec
rorb
lret
jle
and
sbb
or
push
in
pop
pop
pop
xchg
test
push
jnp
xor
push
mov
jo
jo
ja
cmp
es
popa
cmp
mov
test
xchg
aad
pop
ficomps
lahf
push
jmp
mov
cmpsb
or
push
into
mov
fs
sub
pop
fnstsw
inc
fisttpl
mov
adc
xor
sbbb
add
les
xlat
jnp
in
cmpsb
pop
dec
xor
push
xchg
and
jb
pop
xor
cmp
adc
out
pcmpeqw
hlt
out
adc
testl
jp
jg
ds
push
mov
lcall
mov
and
inc
rorb
in
fwait
xor
out
div
pop
mov
mov
rolb
jp
insb
ljmp
cltd
xor
leave
loopne
inc
add
pop
dec
push
inc
pop
jb
movsl
cmpsl
inc
loop
mov
mov
sub
das
adcb
lret
out
sti
sbb
inc
jmp
inc
or
and
in
rol
add
lahf
mov
ja
std
push
jmp
ss
aaa
mov
aad
int
mov
mov
mov
mov
stc
and
movsl
pusha
add
adc
jmp
stos
loope
ljmp
ljmp
mov
enter
fwait
das
sbb
outsb
adcl
cmp
sarb
inc
test
mov
xchg
or
cmp
mov
pushf
cmp
mov
in
inc
pop
test
jne
or
fcomps
fistps
mov
cmp
or
shr
dec
out
push
sub
jno
mov
clc
bnd
jmp
aas
movsl
push
loop
inc
push
test
scas
ds
sub
stos
movsb
mov
ljmp
imul
jl
inc
shll
inc
ret
or
orb
rcrb
pushf
roll
lahf
cmp
fs
jmp
jno
bound
xor
cmp
jo
scas
outsb
imul
ret
adc
inc
test
fisttps
sbb
lock
aam
out
cmp
repnz
and
cmp
stc
cli
sub
inc
sbb
and
lea
movsl
or
jns
ja
mov
inc
fcoml
cmp
test
sub
push
jbe
scas
push
adc
pop
mov
outsb
or
je
pop
adc
jle
lcall
push
icebp
xor
cli
xor
inc
mov
lods
insb
movsl
sub
addl
insb
fwait
and
xchg
dec
imul
jle
cwtl
gs
xchg
imul
lret
stos
popf
sub
push
push
xchg
mov
mov
cmpb
mov
add
push
ret
daa
aaa
xchg
mov
mov
fistpll
pusha
adc
pusha
hlt
dec
shl
xor
pop
out
xchg
dec
jbe
lods
jbe
jle
mov
cltd
jb
sbb
popa
adc
mov
xchg
push
mov
sti
dec
lock
lock
xor
imul
out
add
adc
or
push
pop
mov
hlt
fsubr
movsb
cmp
push
cmp
push
bound
in
mov
loop
aad
inc
in
es
xchg
imul
ret
es
rcll
nop
mov
cld
ds
or
push
std
icebp
ret
dec
push
out
nop
adc
dec
incl
fiadds
mov
fldenv
or
sbb
stos
mov
xchg
sub
sub
mov
pop
daa
leave
es
sbb
push
cld
fdiv
je
xor
fs
test
enter
xchg
adc
out
jno
lods
adc
nop
loop
mov
ret
dec
fstl
ss
ret
in
xchg
pop
rolb
sahf
ds
dec
inc
xor
dec
add
out
mov
outsb
out
pop
pop
cwtl
pop
add
jbe
pop
cmp
rcrb
jns
jae
lds
xchg
cmp
xor
mov
pusha
movsb
sub
mov
jne
dec
adc
cwtl
nop
aas
fstl
ds
cld
ret
xorb
pushf
das
dec
in
mov
lea
xor
data16
in
pop
jno
mov
lods
test
sti
orl
lret
xchg
xor
aas
cmp
xchg
insl
arpl
cmpsb
cmp
aas
out
mov
fldcw
pop
roll
or
shrl
gs
inc
add
or
mov
mov
or
or
add
inc
xor
mov
and
add
mov
xchg
cmp
xor
out
repnz
aaa
mov
xor
cs
ret
cwtl
inc
cmp
test
pop
dec
enter
mov
test
mov
out
les
cs
jo
and
lahf
enter
inc
sub
cli
ret
rcll
inc
cmp
dec
add
cld
ja
les
shl
xchg
push
and
fwait
bound
add
push
xor
and
in
mov
out
loope
fs
fcmovb
cmc
xor
xchg
cmpsb
and
sbb
shl
ret
sbb
cmp
in
orl
gs
dec
jp
mov
mov
call
pop
pop
jl
fisttps
mulb
jns
ljmp
dec
lret
sbb
ror
push
out
inc
int3
sbb
hlt
xchg
loopne
xchg
repnz
arpl
pop
lret
call
pop
out
lds
lock
cmp
lock
fmulp
ds
dec
dec
and
sbb
sub
mov
inc
in
jno
gs
add
cmp
jle
into
push
movsl
in
cmp
or
mov
jb
stc
and
imulb
push
or
jne
fbld
pop
and
clc
cwtl
bswap
sbb
push
icebp
mov
xchg
dec
insb
or
or
outsb
outsl
adc
ja
jg
gs
arpl
fbstp
aaa
idivb
pop
jge
orl
push
sub
sbb
not
pop
xchg
xor
sbb
sub
jp
xor
ficoms
push
fs
jecxz
add
mov
bound
cltd
stos
test
aad
incb
jno
sbb
mov
loopne
sub
inc
rorb
push
pop
mov
insl
in
mov
hlt
cs
sbb
sub
add
pop
push
pushf
mov
mov
and
scas
xor
aaa
mov
jne
cmpsl
add
ds
push
jmp
les
jne
xchg
adc
psrlw
push
cmp
out
pop
add
subb
jb
sbb
repz
mov
call
repz
addl
inc
mov
pop
int3
into
popa
add
add
fimuls
lds
or
leave
in
shlb
repz
lods
mov
call
xor
pop
pop
movsb
add
dec
sub
daa
xlat
adc
mov
call
inc
clc
test
outsb
sbb
mov
addr16
mov
mov
push
pushf
and
repnz
ret
scas
jb
dec
xchg
out
mov
push
rol
mov
xor
in
sbb
rcrl
jae
xchg
mov
sbb
in
push
inc
sub
pop
movl
outsl
jle
mov
xchg
inc
stc
mov
sbb
xchg
sbb
mov
jp
or
adc
nop
xor
push
cwtl
sub
adc
xor
nop
int3
es
das
enter
mull
push
mov
and
ret
jne
xor
ljmp
mov
mov
push
jecxz
loopne
jmp
add
mov
dec
add
addr16
xor
test
mov
sbb
cmpb
or
inc
xor
test
pop
mov
or
or
shll
or
fsubp
out
popa
fsubl
mov
jge
mov
imul
pop
out
ret
repz
iret
jno
rcrl
jbe
lods
hlt
mov
add
push
rcll
mov
mov
mov
xor
or
test
pop
es
in
push
pusha
std
popf
lret
cmp
mov
fincstp
cld
inc
sbb
jbe
and
mov
lods
out
jb
aas
inc
neg
std
outsb
test
mov
mov
mov
dec
xor
mov
ror
enter
cltd
adc
ret
fimull
stc
jmp
jl
or
fwait
inc
in
loopne
adc
adc
addb
mov
xchg
loop
inc
adc
pop
daa
lods
cmp
or
inc
imul
xchg
aam
ja
pop
dec
out
sbb
mov
push
ret
dec
add
xchg
jne
inc
xchg
and
pcmpgtw
fisubs
dec
dec
dec
sub
cmp
adc
call
or
mov
and
stos
push
xchg
pop
xor
inc
sub
inc
add
and
pop
scas
mov
sub
add
std
pop
repz
pushaw
mov
mov
popa
int3
push
lds
ffreep
jg
xchg
cltd
or
scas
rclb
loope
imull
mov
es
mov
jl
xor
loopne
stc
mov
pop
arpl
mov
outsb
divb
out
icebp
adc
mov
loope
xlat
rcrb
adc
scas
daa
cld
iret
and
cli
pop
imul
lahf
pop
into
sub
jl
les
mov
and
push
sub
mov
lods
xchg
js
mov
push
xlat
mov
sbb
movsl
cmp
jbe
mov
push
mov
ja
mov
jle
aaa
fs
mov
adc
sub
inc
in
jnp
xchg
mov
mov
scas
cmc
addr16
sahf
in
imul
add
int
cli
cmpsl
js
cmp
out
pop
jae,pn
inc
jb
mov
push
jns
popf
add
inc
stc
and
sub
daa
adc
mov
mov
push
mov
iret
cld
lcall
fldt
jns
push
pop
mov
mov
into
push
cmp
and
or
push
jno
jmp
popl
loopne
scas
inc
jno
lcall
les
or
jbe
iret
or
clc
in
mov
out
and
int3
outsl
rorb
loope
lret
es
out
nop
xor
jo
cmpsl
scas
xor
pop
jle
xchg
inc
sbb
sbb
bound
in
mov
out
mov
mov
jle
inc
enter
push
pop
in
xor
adc
jle
mov
movsb
dec
xorb
cmpsl
mov
fidivs
adc
add
iret
aam
mov
push
shlb
je
push
jne
pop
jg
adc
jg
adc
jg
dec
push
test
stos
out
icebp
mov
sub
orb
dec
or
leave
shr
not
ret
jno
stos
ficomps
pop
scas
ds
das
ss
data16
pop
push
inc
jb
mov
dec
xchg
inc
or
mov
outsb
mov
pusha
in
jmp
sbb
bound
jl
mov
cltd
dec
or
or
mov
pop
pop
test
outsb
test
push
out
cmpsl
sub
fsubrl
inc
push
cmpsl
jge
sti
mov
push
pushf
xor
add
int3
mov
push
sarl
xchg
inc
push
loop
imul
adc
sti
sub
repz
mov
mov
movsl
inc
jne
xchg
pop
mov
pop
push
pushf
xor
jl
int3
fst
mov
das
scas
sbb
or
cwtl
cmp
xor
test
jmp
sbb
cli
popa
push
mov
movsb
jae
rcll
mov
add
or
cmc
or
lock
subl
adc
mov
xor
fmull
lcall
mov
repz
popa
add
push
xchg
add
xchg
lea
jecxz
inc
cmp
add
das
inc
out
or
xchg
pusha
mov
inc
inc
adc
hlt
mov
pushf
pop
cmp
cmp
insl
fsubrl
cltd
out
arpl
fdivl
pusha
add
fdivl
mov
cmpsl
xor
xchg
divl
movb
scas
sbbb
and
scas
jmp
xchg
dec
inc
shrb
and
xlat
inc
add
movsb
jg
test
mov
sub
test
rcr
cld
add
lahf
and
stc
pop
sti
xor
mov
inc
enter
shrl
rcrb
fildll
roll
adc
xchg
lods
mov
dec
dec
bound
pop
add
rol
test
popf
fidivs
push
push
push
xor
jno
mov
out
out
add
imul
xor
aam
popf
call
adc
jmp
jecxz
lret
and
lods
test
mov
add
lcall
rorl
popa
fistpl
mov
fcmovb
aad
dec
lret
xor
ds
jg
sbb
jnp
cltd
add
add
int
or
push
adcb
pop
cld
iret
or
sbb
lock
in
push
sbb
rolb
lds
mov
es
out
push
aaa
cwtl
lods
mov
test
loop
xchg
int
pop
rol
adc
and
push
xchg
xchg
jecxz
cmp
jo
pusha
scas
testb
or
dec
std
inc
xchg
jnp
mov
inc
fistpl
dec
adc
sti
mov
lea
repnz
adc
rep
or
mov
xor
in
and
jp
mov
mov
pop
push
jp
pusha
in
and
jbe
rcll
mov
mov
std
int
and
movsl
add
lcall
data16
std
fwait
add
and
adc
xchg
stc
adc
xchg
adc
mov
inc
dec
jns
adc
lahf
and
call
and
shll
xor
call
rorb
insl
repz
jnp
mov
pop
es
mov
mulb
pop
dec
je
mov
xor
cmp
imul
cltd
imul
jecxz
inc
dec
xor
frstor
pop
mov
in
jp
sbb
cmp
mov
and
fsubp
pop
cmp
and
push
sub
push
outsb
outsb
jecxz
mov
jno
mov
into
jecxz
fstpt
sbb
bound
outsb
std
and
dec
push
imul
mov
test
xor
or
sub
mov
mov
push
lods
and
inc
mov
aad
pop
icebp
xlat
out
mov
stos
push
mov
xor
dec
xor
jbe
mov
add
xor
scas
sub
or
fbld
popa
adc
lea
inc
mov
xchg
or
insl
jg
je
test
popf
pop
jl
adc
pop
pop
mov
sub
lods
and
ss
xchg
outsb
pop
pop
sbb
lea
ljmp
fadds
xor
sub
dec
add
outsb
mov
xchg
mov
imul
mov
add
in
mov
mov
xchg
mov
leave
cmp
inc
nop
dec
in
or
xchg
xchg
fs
daa
pushf
inc
addr16
inc
stos
out
ret
popa
mov
shrl
cmp
fcmovb
xchg
repnz
mov
and
xchg
scas
mov
jecxz
das
jo
fbld
lock
popa
xchg
loopne
bound
pop
in
inc
cmp
xchg
sbb
dec
xorl
je
push
scas
pop
sbb
adc
dec
xchg
xor
xchg
cmp
mov
adc
out
les
stos
push
mov
push
mov
jmp
repz
mov
sbb
in
and
push
les
sub
in
add
sbb
xor
sbbb
sub
fs
push
mov
push
aaa
mov
nop
inc
cmp
jge
sti
clc
cwtl
mov
or
dec
addr16
icebp
insb
cvtdq2ps
add
sbb
push
cld
sbbb
ja
dec
mov
loopne
pop
mull
or
push
movsl
push
arpl
fisttpl
popf
notl
add
or
xor
jno
pop
dec
lock
mov
xchg
mov
pop
mov
sahf
pop
cmpsl
pop
es
ss
xchg
fistl
xchg
push
icebp
jg
mov
cld
mov
jmp
mov
add
repnz
bound
cmc
mov
pop
push
sbb
icebp
mov
sbb
enter
push
sub
adcl
scas
dec
scas
sbb
jne
dec
and
cmp
xor
and
testl
mov
inc
sbb
paddusb
imul
in
push
push
lahf
test
sbb
sub
cmpsb
fs
imul
fwait
and
inc
test
icebp
into
pop
fmuls
shr
cmp
sbb
in
dec
jge
jo
or
mov
outsb
and
and
je
jmp
sbb
iret
hlt
mov
inc
aas
jb
test
call
adc
hlt
int3
push
dec
aaa
add
adc
push
inc
pop
out
out
lods
push
push
sbb
je
or
repz
lcall
mov
cmp
adc
cltd
movsb
push
add
js
addl
pop
stc
loopne
sbb
push
lea
test
adc
fldt
fsts
and
pop
int
or
notl
arpl
sbb
scas
fisttpl
mov
leave
pop
stos
icebp
out
addl
mov
jo
icebp
shrb
sbb
in
inc
in
sbb
sbb
add
pop
sar
xor
sub
rorb
roll
adc
rcrl
enter
cmp
cmp
sub
mov
xchg
cmp
inc
rorl
mov
jae
lret
sub
cmp
push
jg
mov
cmpsl
mov
push
ret
jo
movsl
fcomps
mov
aas
cld
fidivrs
cmp
fs
lret
inc
inc
inc
mov
jnp
sub
fmuls
popl
mov
ret
scas
xchg
pop
pop
in
sbb
fsubl
add
jmp
push
lahf
sbb
roll
ja
mov
stc
ds
add
aad
out
or
in
les
mov
fdivrs
jnp
test
dec
lea
mov
jo
iret
lahf
shrb
mov
aad
adc
sbb
mov
call
push
pop
mov
sarb
fs
add
add
and
fs
inc
fildll
in
adc
lds
mov
sub
mov
test
mov
stos
jge
jl,pt
mov
adc
flds
sbb
mov
jns
aam
jbe
test
shlb
mov
push
lahf
dec
clc
jl
adc
xor
das
lods
call
or
push
das
js
lea
inc
mov
fs
push
push
stos
bound
dec
arpl
push
adc
repnz
sbb
push
sti
gs
enter
sub
and
aad
lahf
mov
xor
jb
mov
sub
out
xlat
add
insb
movsb
xchg
cld
inc
dec
addb
inc
jmp
inc
pop
sarl
and
into
xor
xlat
add
pop
jno
mov
aam
stos
aad
jp
pop
movsb
mov
mov
scas
repnz
push
ret
jle
movsb
movsl
mov
out
in
pushf
lret
scas
and
ficoms
sbb
jl
sbb
cmp
xchg
ds
and
scas
sbbb
nop
or
jns
orb
sbb
xor
add
and
inc
sub
jle
jmp
xor
aad
xchg
insl
mov
and
mov
popf
outsb
xor
inc
push
icebp
lea
mov
jecxz
cmp
push
add
gs
push
jge
and
add
cmp
ss
cmp
into
hlt
sub
pop
xchg
adc
int
xchg
xchg
mov
outsb
mov
push
fwait
je
mov
mov
sbb
ffree
int
and
xor
in
mov
add
mov
mov
mov
into
aam
insb
fadds
cwtl
add
insl
push
lea
mov
jb
cmp
push
es
leave
push
sarl
fbld
pop
loop
adc
dec
rcrl
and
fisubl
adc
rcl
cmovnp
jp
arpl
imulb
lcall
cmpsb
loope
jne
icebp
test
mov
sti
xchg
je
pusha
mov
adc
and
pop
or
imul
jbe
stc
es
daa
lods
movb
movsb
jae
repnz
stc
scas
loopne
ret
sub
sbb
mov
cmp
rolb
hlt
daa
or
add
orl
lock
xchg
ficomps
inc
xchg
cltd
and
fdivr
mov
scas
xor
ds
lret
mov
dec
mov
rcl
add
xor
jns
test
aam
cmp
fistpl
cmpb
mov
sub
sub
jne
outsb
adc
mov
pop
sub
subb
push
adc
and
std
daa
push
stos
std
fwait
int3
scas
xchg
repnz
cmp
pop
jae
xchg
loop
xchg
cwtl
mov
dec
add
stc
jns
inc
aad
stc
ljmp
sti
int3
mov
repz
xor
adc
je
mov
and
cli
xor
orb
jae
fidivs
js
jbe
dec
pusha
cmp
pop
gs
stos
cmpsl
sub
sub
imul
faddl
ljmp
sbb
mov
iret
out
daa
xchg
cmc
bound
xchg
push
jl
lcall
xor
push
xor
push
add
sub
pusha
fsub
jge
nop
sub
ja
cmp
inc
xchg
sti
test
adc
inc
xchg
dec
cmp
push
cltd
pop
vpavgb
cmpsl
cmp
inc
xor
shl
mov
xchg
push
fdiv
xchg
xchg
sbb
push
or
jo
repz
dec
fdivrl
fwait
jae
iret
shll
and
inc
push
push
inc
cmc
sub
xor
add
cmp
xchg
and
jmp
or
or
sub
cmp
mov
mov
pop
and
mov
arpl
xchg
mov
mov
sbb
dec
mov
in
sbb
outsl
in
cs
es
dec
adc
xor
ljmp
sub
dec
pop
loope
push
cmpsb
loop
popa
cmpsb
jnp
inc
cmp
mov
out
cmpsl
jb
into
lcall
pop
rclb
cmpsl
lret
movsb
outsb
out
or
shlb
lock
push
imulb
pop
lock
mov
xlat
imul
jno
dec
xlat
xor
jbe
insl
das
push
push
mov
add
jmp
add
and
loop
xchg
subb
xchg
cmp
mulb
int3
int
push
mov
lcall
mov
mov
xchg
push
aas
popw
ret
popa
add
inc
mov
xorb
lock
jns
push
sbb
ja
inc
push
lahf
mov
add
lcall
and
roll
mov
in
sbb
sub
jb
mov
ss
scas
mov
bound
cld
jecxz
ljmp
jecxz
push
sub
data16
cld
add
push
popf
lret
add
inc
loope
xchg
sbb
lret
pop
fs
push
xchg
cmc
out
out
nop
mov
fwait
xchg
push
adc
dec
and
lds
dec
orb
mov
adc
lods
ja
jl
lret
mov
enter
cmpb
and
pop
mov
inc
or
scas
ficompl
push
jb
push
fcmovne
cmpsb
push
pop
dec
fsubs
nop
push
fldt
ja
mov
mov
popf
fldl
shlb
shlb
jp
dec
dec
mov
icebp
gs
aad
jl
out
cmpsl
dec
pop
in
stos
add
icebp
lock
je
aaa
pop
pushf
or
adc
dec
shl
mov
pop
idivl
push
ror
lea
mov
xchg
push
xchg
xchg
or
pop
fucomp
rclb
xor
scas
cmpsl
and
js
insl
lds
lahf
clc
fstps
or
imul
jg
loop
add
cmpsl
cmc
rorl
rorb
add
or
cmc
xor
les
add
or
mov
les
test
repz
mov
std
pop
js
pushf
xor
aas
fists
xor
jp
dec
cmp
jo
or
bnd
andl
scas
mov
and
nop
lret
js
aas
or
addr16
inc
cmp
push
mov
test
pop
testl
sub
ss
and
decb
test
out
aaa
pop
ja
aaa
ret
pop
xor
mov
inc
loope
fistl
jle
adc
mov
ficomps
or
push
or
insb
insb
out
cs
jl
cmp
mov
jg
fldt
sbb
ljmp
pop
push
test
ret
test
jne
outsb
push
daa
testl
mov
mov
add
ret
aaa
add
and
sbb
scas
rclb
lods
mov
xchg
mov
bound
xor
imul
mov
cmc
dec
xchg
mov
mov
xchg
mov
mov
mov
sti
int3
mov
pop
jp
daa
jne
push
cli
push
leave
adc
push
mov
dec
lods
fdivrp
xchg
add
lock
xchg
je
adcb
inc
jae
rcrl
mov
out
std
jge
dec
sub
sti
repz
cli
and
mov
dec
les
push
jle
orl
sbb
addr16
jg
rcr
push
clc
sub
mov
cld
int3
shrb
xlat
xlat
dec
pushf
adc
sub
jae
and
call
shl
cmc
xorb
mov
stos
stos
jne
movsl
pop
int
in
pop
je
dec
sbb
jae
add
mov
adc
or
insb
shl
incl
or
pop
in
stc
fists
mov
call
int
push
sub
mov
inc
sbb
or
aam
adc
adc
add
aas
es
lods
fcmovnu
and
push
jmp
pop
cmp
add
ds
push
and
jns
movsb
mov
or
mov
lock
inc
adc
xchg
jno
pop
pusha
faddl
leave
mov
inc
mov
xchg
lahf
xchg
in
mov
in
pop
mov
inc
insb
dec
dec
repnz
adc
inc
lods
xchg
mov
lret
in
push
movb
fadd
jp
sti
loopne
clts
sbb
adcl
cmpsl
rcll
inc
in
add
jge
add
rcrb
sub
inc
xorl
int3
movsb
mov
sub
inc
insb
jns
ficomps
xchg
lahf
jmp
pop
jno
jbe
scas
aas
add
jns
sub
inc
jne
inc
test
push
push
push
js
pusha
xor
push
add
inc
sbb
or
pop
mov
xchg
imul
mov
dec
sub
cvtps2pd
or
inc
jl
unpcklps
add
lods
sbb
aam
sbb
fwait
test
ljmp
fldcw
adc
dec
lods
ret
push
pop
mov
add
xchg
pop
jmp
ljmp
mov
cmp
mov
adc
mov
es
popa
es
jmp
shl
or
xchg
hlt
in
lret
xcrypt-ecb
cmpsl
mov
push
or
ficoms
mov
dec
jne
and
shrb
rcll
enter
scas
loope
sbb
addr16
inc
mov
or
fs
add
lods
fsubs
dec
lods
mov
inc
daa
enter
ss
ficomps
pop
outsb
inc
imul
sbb
sbb
add
stos
je
lahf
and
mov
sub
jae
loopne
add
movsb
dec
loopne
fdivl
mov
sbb
movsl
repnz
jo
sbb
xchg
or
or
divl
pushf
add
add
outsb
imul
adc
mov
out
dec
scas
and
das
mov
jmp
inc
and
jbe
dec
cli
jmp
adc
gs
push
mov
call
mov
cmp
loop
pop
pop
push
ret
xchg
sti
loop
aam
dec
cs
popf
aas
in
addb
test
test
lcall
cli
and
jnp
scas
leave
aam
mov
push
xchg
mov
cmp
test
add
push
jl
popf
cmp
mov
cltd
data16
mov
add
test
out
rolb
jnp
shll
pop
and
popa
lahf
ficoms
in
xchg
push
push
adc
les
cmp
cltd
lods
and
add
iret
insb
mov
mov
pop
jg
jbe
aam
mov
sub
dec
shlb
lret
int
leave
xchg
in
shld
inc
mov
decl
ficoml
adc
xchg
mov
jl
cltd
mov
sarl
sbb
xor
push
sbb
outsb
sahf
mov
cmpsl
lock
cltd
mov
jge
mov
in
andb
push
aad
adc
mov
flds
mov
lret
lahf
je
aaa
testl
lcall
xor
lea
xchg
rcll
leave
mov
jbe
sbb
dec
sahf
pop
aas
jb
add
inc
rolb
mov
rcrl
mov
es
clc
pop
ds
xchg
mov
mov
and
mov
bound
mov
dec
jmp
out
call
and
lret
cmpsb
je
pop
lret
push
and
pop
xor
adc
insb
js
ljmp
out
lods
jns
faddl
lcall
cmp
mov
loopne
sub
repz
xor
js
nop
in
xchg
or
out
lods
lods
insb
mov
das
in
int
enter
mov
xchg
adc
shll
push
sbb
sbb
enter
jne
push
dec
addw
push
push
int3
aaa
mov
dec
cmp
jo
or
nop
push
xchg
fildll
shrl
add
cmp
push
or
xor
inc
jbe
pop
push
popa
repnz
add
mov
dec
dec
dec
jnp
sub
lret
outsb
pusha
sbb
loope
insl
in
and
rolb
out
jo
icebp
push
std
mov
cmp
mov
add
xchg
sbb
daa
cmp
lcall
pop
ftst
ss
loopne
repz
loopne
ret
dec
hlt
mov
or
in
sub
decb
int
stos
cltd
adc
jmp
add
lret
inc
jns
into
inc
ret
cltd
inc
mov
adc
fldt
xor
add
cmc
pusha
cmpsb
mov
push
cld
cmp
jecxz
xchg
mov
mov
stc
dec
cmp
aaa
int3
or
mov
ret
jns
stos
stos
sub
add
jl
xchg
es
int3
sahf
ja
mov
lret
out
lods
lods
xor
mov
adc
or
jge
inc
pop
movsl
in
adcl
adc
je
jne
imul
mov
lcall
and
pop
fs
adc
sbbl
pop
xchg
inc
push
notb
push
repnz
jp
repnz
push
jae
sar
aaa
push
jmp
jmp
mov
mov
mov
push
cli
imull
xchg
cli
adcl
clc
pop
jmp
mov
xchg
push
movsb
ds
jecxz
repz
pop
aas
cmp
lods
or
scas
xor
inc
std
jno
dec
inc
or
push
inc
push
loope
push
enter
in
outsl
pop
aad
and
out
lret
dec
jae
fcomi
scas
jl
xchg
and
fdecstp
mov
rcrl
jmp
push
sub
add
dec
ljmp
mov
dec
stos
and
subl
subl
mov
inc
jmp
pop
mov
and
xor
jae
ret
pop
xchg
xlat
pop
adc
xor
movsl
mov
mov
subl
cmp
inc
jno
dec
sub
sbb
mov
pusha
mov
xchg
cmp
add
mov
adc
jmp
push
fdivrs
dec
cmp
mov
or
pop
pop
std
cmp
xchg
test
ja
add
xor
stos
mov
popf
sbb
push
add
neg
push
push
outsb
jle
addl
cmp
pushf
pop
sbb
jge
rcll
push
mov
lret
sbb
xchg
jno
out
ja,pt
and
or
mov
pop
mov
sbb
pop
cltd
dec
xor
scas
test
mov
mov
subb
or
add
icebp
push
lods
or
sarb
hlt
imul
push
fdivrl
mov
jl
inc
or
xchg
filds
add
xchg
push
ss
mov
push
enter
lahf
subb
imul
mov
cmp
insb
bound
dec
pop
dec
cld
and
inc
push
scas
aaa
mov
testb
adc
fs
sahf
and
jno
test
mov
cmc
xchg
adc
cmp
and
xchg
cwtl
lret
cmpl
out
xor
cmp
mov
jnp
imul
out
add
push
dec
push
fdivl
xor
pop
add
test
imul
mov
add
jmp
enter
lret
cmp
stos
sbb
loope
mov
inc
inc
sbb
incl
aam
cmp
mov
ds
cs
shlb
jg
sbb
loopne
pop
into
xchg
ffree
in
repz
adc
cmp
movsb
xor
cmpsb
mov
sbb
or
daa
clc
adc
inc
or
sbb
sub
cmp
mov
mov
push
mov
mov
inc
int3
dec
jbe
xor
xlat
lods
and
fstpl
or
xchg
mov
mov
enter
fst
lret
push
add
jp
jg
je
and
shll
mov
xchg
xchg
sub
repz
inc
dec
icebp
sbb
fmul
in
arpl
xor
ret
jp
test
xor
lds
out
mov
pop
and
int3
into
dec
mov
lods
push
pop
insb
nop
loope
out
and
jno
push
daa
mov
nop
lret
add
or
or
xchg
xchg
int
xchg
push
sbb
push
rcrl
push
sub
sbb
lock
mov
xor
in
and
sub
pusha
xchg
mov
xor
insl
insb
fs
rcrl
add
mov
jb
in
pop
lahf
mov
stos
divl
ret
pop
sbb
sbbb
scas
imul
leave
stos
cli
xor
sbb
popa
mov
lock
adc
lret
faddl
dec
push
push
cmp
add
push
add
shrl
cmp
mov
push
push
movsb
imul
divl
jns
mov
in
add
stc
cmc
loop
pop
js
stc
mov
ja
fnstsw
mov
mov
xchg
xor
mov
jne
pop
add
imul
jle
xchg
sub
in
rclb
jo
inc
and
xchg
sar
and
mov
fcoms
stc
ds
es
std
ret
sbb
xor
fwait
imul
test
ljmp
test
adc
add
xor
cmpsb
pop
mov
xchg
imul
cmpsb
sti
loop
pop
push
in
es
pop
adc
stc
cmp
clc
jnp
pop
outsb
ret
cli
mov
lds
mov
fwait
mov
and
mov
pushl
and
or
cmp
inc
cmp
stc
xorl
je
jne
sub
ret
fisubl
aas
or
xor
aas
loopne
cmp
cmp
test
int3
inc
pop
push
adc
add
pop
loop
test
lret
xor
cmp
sub
and
pop
sahf
cmovo
out
pop
mov
hlt
movsl
idivb
adc
fadd
aam
out
cmp
cmp
dec
sbb
lods
and
and
sub
test
test
push
xchg
push
push
jl
repnz
pusha
call
xor
add
hlt
pop
jl
cwtl
push
cli
sbb
cltd
xlat
pop
ret
xor
jle
jnp
xorb
sbb
lods
repz
sti
jnp
sbb
or
pop
mov
pop
aas
insb
adc
movsb
int
dec
aaa
sbb
outsl
lods
pop
xchg
jge
sbb
inc
push
cmp
xchg
mov
inc
shll
rclb
mov
vpaddw
dec
dec
call
xchg
adc
pop
fisubrs
popa
loop
arpl
lret
arpl
bound
dec
jo
sbb
sbb
xor
jge
mov
das
fstps
pop
icebp
xchg
jl
out
xchg
leave
stos
and
xchg
mov
jp
push
and
fnstenv
imul
negl
add
sub
outsl
out
jg
test
les
mov
call
push
mov
cmp
loope
cmpsl
xor
add
sahf
and
enter
je
mov
stos
pop
mov
scas
arpl
jle
in
pop
std
add
mov
xchg
pop
loope
cvtps2pi
test
add
ljmp
int
fsubrp
out
mov
push
adc
sub
shll
ror
outsb
inc
mov
inc
sub
test
icebp
flds
mov
push
or
and
mov
aaa
add
inc
xchg
imul
js
cmp
repnz
jne
sub
mov
and
xchg
xchg
adc
mov
dec
icebp
xchg
xchg
lea
lar
pop
test
sub
cmp
jae
jl
shrl
mov
fcompl
bound
js
imul
push
clc
addr16
leave
mov
loopne
or
and
or
xchg
inc
mov
jl
and
pop
sub
push
hlt
pop
in
je
jecxz
arpl
jmp
das
sbbl
jnp
bound
adc
mov
and
fmul
iret
daa
lcall
mov
add
or
mov
jp
mov
inc
inc
mov
push
cvttps2pi
gs
mov
or
and
xchg
pop
lods
cmp
inc
inc
xlat
pop
mov
daa
xor
adc
xchg
sbb
divb
push
push
jnp
mov
push
imul
stos
mov
xchg
mov
adc
xor
mov
xchg
das
shr
fwait
mov
ret
jno
andb
pop
test
ds
mov
gs
add
or
dec
jnp
mov
or
xchg
lds
dec
adc
cmp
cmp
cmp
call
sbb
cmp
add
push
mov
cli
popa
inc
out
sub
lods
sbb
ss
lret
stc
ret
neg
iret
shlb
inc
repz
cmp
ret
or
sahf
mov
sbb
movsb
out
pusha
adc
and
loopne
xchg
lret
and
sbb
scas
fucomip
cmpsl
add
insl
outsb
mov
and
pop
pop
sub
stos
cmp
adc
or
sbb
adc
rolb
les
sbb
pop
jl
dec
xchg
in
dec
cmp
sbb
mov
mov
lock
jne
lcall
xchg
roll
js
mov
addr16
xlat
int
xchg
iret
mov
xor
mov
loope
ret
xor
jecxz
pop
rep
icebp
or
ja,pn
scas
mov
push
push
adc
dec
rorl
add
hlt
sbb
aas
jb
ficoms
and
inc
lcall
sub
pop
xchg
ret
jne
es
test
mov
inc
jnp
test
mov
addr16
decl
and
or
cmp
arpl
mov
and
punpckhwd
andl
inc
xchg
imul
sahf
dec
push
jno
jp
and
jle
jp
mov
push
iret
xor
lret
int
inc
mov
movsb
addb
push
fwait
imul
in
mov
rcrl
adc
push
ljmp
pop
mov
loope
adc
orl
add
push
dec
sbb
rolb
or
js
ja
jo
mov
adc
pop
adc
fsubl
adc
inc
test
xlat
imul
push
sti
les
cmpsb
repz
into
jns
jae
mov
jnp
xlat
add
loopne
ljmp
stos
lea
add
xchg
lods
pusha
cmp
pop
inc
xor
xor
xchg
mov
xor
lods
adcl
repz
ret
negb
sbb
ds
pop
mov
rcl
push
sbb
mov
out
pop
fisubs
cmc
and
cmpsb
imul
lock
pop
insb
xorb
aaa
add
mov
out
pop
fdivl
sbb
cmp
repnz
cmpsl
notl
adc
pop
imul
fwait
pxor
idivl
inc
adc
sbb
inc
inc
mov
xchg
jb
inc
add
movsb
ficoml
mov
mov
mov
xor
push
repnz
pop
orb
enter
mov
add
mov
filds
push
les
dec
insb
out
jae
sahf
mov
dec
out
je
call
out
sub
fisubrs
popf
sbb
cmpsb
outsb
mov
mov
push
add
jne
cmp
jno
popa
xor
add
test
dec
xchg
push
out
push
ds
outsb
and
xchg
flds
in
fidivrs
push
outsl
stos
mov
roll
push
add
jo
imul
and
mov
mov
imul
adc
adc
ret
xlat
pop
add
cmc
lea
dec
ss
lock
inc
stos
bound
aas
gs
mov
jle
push
int
jge
popf
jle
pop
pop
repnz
pop
aad
rorl
xor
xchg
push
pop
xchg
outsl
xchg
jnp
in
loope
int3
pop
hlt
add
ret
mov
sub
cmp
mov
add
pop
mov
sub
sub
mov
mov
decb
cs
in
pop
sub
movsl
mov
les
pusha
pop
movsb
mov
iret
addl
inc
loop
sbb
cmp
ret
leave
movsl
icebp
pop
outsl
rol
dec
xchg
xchg
fildl
shrl
arpl
jae
pusha
inc
jno
ret
lea
fwait
das
sbb
lahf
idivb
repnz
xor
stos
in
mov
aad
add
sahf
jge
in
roll
in
sub
or
bnd
or
fwait
push
and
sahf
sub
mov
push
mov
repz
sub
shrl
imul
and
sub
jmp
sub
fiaddl
sub
jne
xchg
cmpsb
lods
sub
mov
mov
sbb
out
adc
ja
inc
mov
enter
or
mov
mov
xor
scas
fldcw
aam
mov
jno
jo
push
and
rorb
push
test
fneni(8087
je
movsl
jl
jl,pt
js
outsb
test
xchg
arpl
leave
xor
xchg
cmc
cli
hlt
mov
jp
cmp
sbb
cmpsb
shrb
push
cmovp
xchg
repnz
iret
sub
xchg
jae
mov
pop
cmp
sbb
data16
stos
add
or
cmp
cmpb
dec
sbb
bound
sbb
and
ljmp
cmp
cmp
inc
ds
pop
out
mov
adc
movsl
in
inc
mov
mov
into
push
std
hlt
enter
xchg
adc
pop
add
push
dec
add
out
inc
cmp
out
lret
jb
je
jge
sarl
cmpsb
lods
test
xor
es
mov
sub
out
fs
les
std
cld
out
scas
lcall
mov
data16
or
addl
xor
adc
imul
pop
les
out
pop
mov
push
ss
loop
xor
insl
into
cmc
test
push
add
repz
cmp
fcmovne
jne
nop
or
gs
pop
lods
das
add
or
dec
inc
imul
mov
inc
jo
fldcw
dec
cmp
lea
jno
ret
pop
jbe
jo
fdivs
mov
daa
mov
pop
mov
cs
cmc
xchg
pushf
mov
cmc
mov
pop
sub
dec
lahf
stc
lock
xor
mov
jns
dec
pop
xlat
inc
shll
mul
shl
sub
mov
fidivl
aaa
fmul
cmp
loope
data16
xchg
sub
or
mov
shl
xchg
cwtl
cld
mov
pop
mov
add
jbe
push
inc
jne
insl
jns
cmp
mov
hlt
out
mov
push
inc
test
pusha
iret
mov
inc
or
test
pusha
push
add
out
loopne
push
fiaddl
int
cli
mov
shrl
pop
rcrl
jg
rorb
dec
sahf
sbb
scas
adc
inc
scas
sub
pusha
int
jbe
insb
leave
das
outsb
bound
ss
outsl
dec
das
sbb
popa
mov
xchg
clc
sub
int3
bound
clc
test
xor
ret
jge
mov
fdivrs
push
call
inc
addr16
popl
cli
push
dec
jae
rcrb
mov
sub
daa
fstp
fldl
ficompl
dec
cmp
add
loopne
lods
mov
addb
push
bound
sbb
or
cwtl
and
out
xor
cmp
mov
push
std
sbb
popf
mov
out
in
jae
repz
lea
aad
mov
push
xor
sbb
sub
xlat
stos
dec
add
popf
or
test
sub
inc
not
lods
add
mov
sti
xor
xor
jg
pop
popa
mov
loop
pop
mov
push
clc
or
mov
or
addl
sub
or
jmp
out
out
push
cmpl
jae
loope
inc
sbb
jne
iret
int
dec
push
sbb
repnz
test
aas
stos
shlb
jo
ret
xchg
pusha
in
jmp
aad
sar
stc
outsl
or
ss
test
fcomi
sbb
dec
dec
mov
ret
mov
push
fdivr
pop
aaa
adc
rolb
aas
jne
xchg
add
pushf
or
mov
dec
test
jbe
lea
mov
js
test
mov
loopne
mov
sub
out
jecxz
mov
jp
test
repz
enter
pushf
xchg
adc
inc
outsb
or
int3
decl
add
dec
pop
dec
or
sub
jb
push
jbe
dec
outsb
cmp
repnz
popf
pop
imul
pop
sbb
sub
sti
imul
cmp
xchg
lcall
ss
int
pusha
sbb
xor
cmc
pop
xor
addr16
rol
popl
outsb
mov
jne
xchg
jmp
sbb
test
or
daa
es
dec
testb
enter
cmp
adcl
adc
int3
insl
repz
in
jge
or
push
xchg
rcrl
das
mov
std
or
mov
and
out
xor
pusha
je
inc
out
cs
fildll
mov
mov
dec
aad
je
shlb
cwtl
xchg
out
pop
fcmove
push
pop
inc
inc
loopne
cmp
stos
aaa
xor
fwait
nop
movsl
shrl
pop
push
inc
add
inc
cli
mov
out
in
xchg
jl
pop
pop
inc
push
inc
jmp
cltd
scas
cmp
ljmp
aam
sbb
jl
loope
mov
push
mov
cwtl
or
or
xor
push
mov
arpl
mov
sbb
xor
sub
fstpl
cmp
sbb
movsb
jmp
pop
xchg
js
je
xchg
mov
lock
stos
mov
mov
lds
je
mov
xchg
push
std
pop
rol
cmp
bound
or
aam
add
xchg
mov
mov
jnp
push
push
inc
decl
pop
test
add
mov
sub
sub
rorl
add
push
aam
pusha
inc
xchg
cltd
cs
xor
add
add
xchg
rclb
fcom
lea
pushf
cmpsl
movsl
into
mull
sub
add
mov
cmp
and
and
lret
pop
jbe
jae
movsl
push
loopne
outsl
inc
imul
xchg
jb
sbb
xchg
stos
loopne
cltd
mov
cmpsb
jle
sub
lods
int3
aam
pop
ljmp
push
pop
mov
cmpsl
and
dec
mov
push
ret
inc
test
rcrb
inc
pop
addb
pop
rol
inc
and
fnstcw
cmp
inc
addr16
cmp
cmp
pop
arpl
subb
xor
out
xor
jle
adc
fwait
cmpsb
jl
inc
lret
aaa
or
lret
jp
fidivrl
lar
sub
add
dec
mov
push
rolb
dec
xchg
add
std
out
mov
in
xor
fwait
out
mov
mov
dec
int3
sti
test
inc
cmc
jmp
pop
cwtl
xchg
add
adc
clc
mov
ljmp
hlt
mov
js
adc
ret
scas
xchg
cli
sub
gs
inc
in
add
fdiv
cmp
imul
cltd
mov
xchg
xchg
mov
cmp
int3
and
jle
gs
add
inc
push
scas
test
addr16
pop
sub
add
xchg
jae
add
les
ja
bound
lahf
xchg
mov
stc
loope
psubsb
loop
popa
in
test
xor
out
cs
mov
cmc
pop
push
sub
bound
clc
lods
lcall
inc
inc
jle
sbb
mov
call
mov
or
ja
pop
push
inc
mov
gs
pop
or
push
adc
sbb
push
dec
sbb
xor
jmp
push
mov
dec
add
daa
int3
lret
iret
loop
sti
jg
pop
sbb
mov
std
popf
sub
outsb
fcmovnu
shrl
and
jae
mov
aad
mov
or
xchg
std
jbe
and
mov
pop
leave
sub
scas
mov
ljmp
clc
sbb
ret
or
mov
clc
inc
das
sub
scas
mov
or
aad
mov
jecxz
jno
xchg
pushl
sub
clc
mov
dec
mov
add
out
rcrb
fwait
dec
xchg
mov
pop
mov
pop
adc
fsubs
add
das
jge
xor
test
inc
add
fdivrl
imul
push
xchg
mov
xchg
hlt
or
push
push
enter
jge
in
ja
jg
jecxz
test
lret
cltd
mov
shrl
pop
ljmp
mov
push
loop
mov
out
ljmp
dec
pop
push
and
sbb
and
sub
inc
aas
sub
jns
ficompl
aam
and
adc
stc
push
imul
jl
xchg
sti
fldt
icebp
inc
or
or
xchg
mov
mov
in
xchg
loopne
sub
xlat
cmp
lret
fcmovnu
push
loopne
cmpsb
push
insl
mov
and
dec
orb
cld
add
or
or
cld
add
xlat
pop
int3
stos
lahf
jle
jbe
or
inc
test
cwtl
lods
mov
xchg
or
adc
adc
call
jb
push
ret
in
negl
sbb
jl
jle
fnstenv
pushf
cmc
bound
mov
fstl
cmp
stos
out
sbb
cmp
sbb
pop
lods
pop
cmp
push
repnz
add
int3
aad
ljmp
es
aas
xchg
enter
addl
aam
and
add
add
out
insl
ds
insl
stos
outsb
xchg
adc
sub
sub
xor
sbb
dec
add
in
push
in
sub
dec
ja
sub
in
push
repnz
mov
push
call
jae
sbb
cs
loop
add
pop
jmp
mov
push
and
inc
mov
jbe
jp
popw
sbb
arpl
out
pop
dec
pop
xchg
mov
repnz
and
fimull
outsl
mov
in
push
mov
das
inc
adc
mov
inc
test
ja
mov
sbb
sarl
and
cmp
insl
dec
push
pushf
inc
jbe
or
pop
cli
sbb
test
rcrb
lahf
sbb
and
cmpsb
pusha
jae
sub
ficomps
lods
pop
mov
xchg
xchg
mov
icebp
dec
inc
dec
gs
sarb
sub
push
stc
lret
pop
stos
cltd
in
mov
sub
outsb
adc
rolb
mov
inc
addl
aam
iret
mov
cmpsl
or
mov
sub
mov
in
cmp
mov
add
ljmp
push
mov
mov
xor
scas
adc
clc
addr16
jo
jae
in
out
movsl
or
ret
test
inc
jae
sbb
xchg
ds
sub
pop
pusha
jns
xchg
bswap
stc
popa
data16
cli
mov
sbb
mov
out
fdivp
movsl
mov
test
xor
push
sbb
out
in
cs
mov
sub
or
push
fmull
cmp
adc
test
inc
cmp
aam
push
mov
dec
loope
cmpsl
call
insb
les
ja
js
out
cmpb
inc
fsubr
rcll
aam
cs
sbb
mov
movsl
inc
ljmp
cmp
fwait
lret
cmp
xchg
mov
daa
aas
push
mov
xor
pop
movsb
add
inc
clc
adc
jns
adc
xor
pop
aas
test
int
dec
ja
in
loop
xchg
lods
rcrl
push
daa
sbb
sbb
jbe
mov
mov
sahf
jae
sub
fsubr
pop
and
push
lret
mov
push
das
xchg
push
stos
gs
and
add
cmp
mov
inc
mov
and
testb
xor
pusha
sbb
pop
lods
stc
mov
sbb
pop
pop
scas
dec
mov
cmpl
cs
jmp
mov
cmp
push
and
test
push
repnz
xor
call
mov
insl
pop
leave
mov
push
dec
cmpsl
xor
sbb
push
cli
and
and
xchg
cmpsl
dec
and
fcmovu
dec
push
sub
and
inc
xor
int3
data16
pop
js
std
test
test
test
mov
jb
out
add
scas
xor
aam
jecxz
sub
pop
sar
popa
cmp
cwtl
lret
arpl
jle
shl
lahf
cltd
int3
fdivrl
clc
in
jecxz
ss
mov
fildl
loopne
push
inc
mov
ds
mov
pop
mov
outsb
sbb
les
shlb
push
push
outsl
sub
and
lock
adc
mov
cmp
loope
imul
pop
ljmp
dec
loopne
dec
in
lods
out
fwait
mov
int3
xchg
fwait
std
scas
or
mov
mov
pop
fisubrs
mov
and
ret
dec
jae
iret
cmp
inc
xor
enter
in
loopne
or
dec
nop
lea
dec
mov
pop
lock
xorb
nop
push
add
repz
pop
aas
sub
pop
jmp
and
addr16
out
clc
mov
push
fs
cmp
inc
sbb
mull
divl
ret
dec
mov
imul
je
sub
pop
sti
out
adc
and
push
lods
das
xlat
or
out
cmpl
loopne
lret
xor
sbb
hlt
mov
inc
repnz
xchg
lea
pop
aaa
lahf
cli
adc
data16
xor
xor
sub
dec
addr16
pop
aaa
das
lahf
std
stc
and
xchg
lret
std
jno
sub
push
outsl
out
imul
std
stos
mov
cmp
add
addr16
dec
gs
out
lret
mov
push
push
sbb
mov
mov
push
sbb
jge
and
sub
cmpsl
sar
mov
and
push
xchg
pusha
das
outsb
or
pop
out
hlt
push
mov
xchg
xorps
div
and
or
aam
inc
fdivr
jno
push
stos
jecxz
xor
mov
lret
xchg
pop
lds
mov
ljmp
scas
push
js
mov
std
adc
xchg
jns
adc
and
loop
xchg
test
lret
mov
clc
out
out
test
std
mov
push
sti
mov
cli
ljmp
jno
push
xchg
popf
mov
call
lods
ss
mov
das
fadd
jmp
jo
sbb
test
xchg
in
xchg
cmpsl
scas
stos
inc
movsb
test
mov
int3
daa
xchg
cld
notl
mov
xor
call
lds
xor
ret
adc
xchg
or
sub
mov
jle
out
call
jbe
in
mov
clc
push
mov
jo
icebp
inc
push
fisubl
roll
cwtl
fs
les
sbb
sarl
xor
dec
pop
mov
mov
lock
and
mov
lahf
jno
push
inc
and
subb
repnz
mov
js
test
pop
sub
repnz
sbb
pop
adc
hlt
orl
addr16
jo
dec
mov
jmp
xchg
loopne
out
push
mulb
fiadds
xor
cmc
or
into
xchg
int
std
jl
ret
and
xor
xor
inc
push
cmp
in
cmp
repz
pop
add
xchg
mov
stos
and
ljmp
adc
popa
xor
clc
dec
pop
pop
sub
hlt
aam
inc
fwait
sub
push
in
pop
testl
stc
push
jp
shlb
ret
adc
pop
std
jne
inc
mov
cmc
inc
cli
dec
lcall
mov
xchg
mov
outsb
push
sahf
mov
loop
add
inc
dec
sbb
je
daa
iret
xlat
cli
daa
stos
push
lcall
or
or
dec
adcb
pop
lea
movsl
ljmp
orb
mov
pop
imul
fcoml
addr16
xchg
mov
fucomi
insb
inc
aas
stc
inc
mov
or
xor
mov
mov
xor
add
lods
dec
and
das
and
or
dec
mov
xlat
mov
idivb
das
mov
add
sbb
jle
in
icebp
jp
pop
inc
sub
jns
mov
test
sub
sbbl
add
push
ljmp
inc
leave
dec
fldenv
mov
cmpb
and
stc
in
jecxz
int
sub
data16
mov
shrb
push
jno
push
pop
or
push
sub
pop
xorl
mov
lret
mov
and
add
cmp
mov
stos
adc
cmpsb
xchg
lret
sub
push
push
pop
inc
aam
mov
test
clc
xchg
mov
out
mov
mov
stos
cmp
sti
sub
ds
lods
add
mov
push
xor
or
adc
push
gs
cwtl
adcb
sbb
fld
setbe
loop
cmpsl
cmp
movsb
sbb
sub
cld
aaa
je
clc
dec
xor
cmp
mov
xor
ficomps
xor
call
add
jns
pop
xor
aad
cltd
inc
fidivl
std
mov
sub
rorl
enter
lea
fsubl
pop
mov
js
xorl
xor
scas
pop
push
loopne
inc
xchg
aas
push
rorl
inc
lds
insb
inc
outsl
sub
mov
repnz
bound
pushf
mov
icebp
test
in
pop
jmp
pop
dec
push
pop
subb
sar
adc
adcl
and
add
jecxz
dec
insl
xchg
push
jp
inc
orl
xchg
push
push
jns
rcll
xor
movsb
sbb
fstl
sbb
cmpsl
or
mov
or
xor
int
test
loope
dec
mov
addr16
xchg
adc
push
or
fwait
dec
int3
and
cmp
scas
or
sub
jae
mov
inc
std
mov
daa
arpl
jo
sub
loop
xchg
popa
xchg
aam
pusha
leave
cmp
aas
mov
jl
or
call
int3
push
cmp
sub
add
jbe
pop
shl
and
mov
push
xor
jb
rol
cs
mov
hlt
fsub
imul
popf
push
sub
inc
call
jae
inc
jmp
pop
ljmp
xor
xor
dec
shrl
enter
mov
bound
cmc
jo
test
das
shrb
in
cs
cmp
lea
jg
in
mov
call
jno
out
dec
sub
cmc
xchg
inc
cmp
lods
mov
jnp
adc
ficoml
xchg
pop
fsub
xchg
cltd
movsl
dec
cmc
mov
test
inc
inc
repz
aas
jmp
sub
sbb
loope
cwtl
push
cmp
je
inc
es
dec
push
loopne
sbbl
sbb
push
xchg
xchg
lods
enter
sbb
or
jns
flds
shl
xor
mov
cmp
and
adc
popa
jno
out
mov
loopne
add
push
cmp
jg
nop
push
jg
pop
mov
push
pop
enter
push
or
in
ss
cmp
lods
mov
and
sarb
jmp
fucomip
nop
mov
cmp
mov
sbb
mov
in
add
and
cli
dec
int
mov
lds
xor
sbb
sub
rolb
adc
jp
adc
insl
lds
dec
subl
dec
movsl
add
mov
pop
jnp
xor
stos
mov
sub
int3
mov
daa
mov
imul
jge
js
mov
fistpl
scas
add
mov
inc
xchg
pushf
xchg
fisubrl
movsl
sub
add
jns
les
and
push
sbb
push
and
mov
loop
push
clc
out
mov
out
in
dec
dec
inc
and
mov
fs
add
sub
orb
lahf
mov
outsl
sbb
lock
repz
jns
push
mov
and
inc
mov
pushf
xor
dec
movsl
sti
int3
pusha
xchg
pop
mov
bound
cmp
jb
dec
jo,pn
clc
dec
xchg
lods
lods
pop
bnd
lea
repz
and
cwtl
das
lods
xchg
xor
negl
imul
outsl
test
loopne
stc
faddl
inc
mov
out
or
scas
sbbb
rorb
dec
jbe
aad
sahf
sub
fs
clc
movsl
or
pushf
xchg
cmp
xchg
scas
mov
cmpsb
pusha
pop
movsb
and
xor
jno
fisubrl
jae
adc
in
in
lock
cmpsl
in
je
cmp
push
stos
mov
mov
bound
popa
xor
dec
nop
cltd
scas
bnd
jne
imul
cmp
es
sub
lret
sub
inc
xchg
out
dec
adc
mov
add
jo
fwait
mov
lret
xchg
adc
out
mov
out
or
addr16
icebp
jge
jg
mov
imul
and
iret
xchg
add
xchg
jno
push
fidivrl
push
es
das
cmp
pop
add
xchg
xchg
xor
pop
outsb
push
iret
mov
xchg
inc
xlat
or
pop
mov
leave
add
xor
cli
sbb
jp
fisttpl
dec
jb
ja
outsb
pop
xchg
fmull
cli
push
out
call
out
sub
test
mov
sub
sti
pushf
jns
mov
into
and
xchg
and
sbbl
or
divl
mov
sbb
fwait
lahf
pop
js
and
sbb
jg
sarb
cmp
cmc
sbb
cmp
jne
mov
and
or
xchg
cwtl
mov
mov
stos
xor
insb
aam
mov
subb
xor
call
mov
sub
out
xchg
jg
sub
fisubrs
or
pop
inc
xchg
dec
dec
add
inc
fwait
popf
es
ja
fsubrl
xor
mov
push
test
sbb
dec
sahf
xchg
shll
mov
jb
mull
int
shrl
arpl
push
and
mov
lret
in
add
mov
mov
movsl
bound
movsl
popl
xlat
jnp
jmp
inc
mov
jl
orb
test
dec
lret
mov
push
lock
inc
sbb
sub
jp
cs
cmp
dec
aam
clc
icebp
xor
aad
pop
fsubp
sbb
cmp
dec
ffreep
xchg
repnz
test
jbe
ret
jg
lods
movsl
xchg
sub
out
jne
out
les
cmc
fs
inc
and
push
xor
mov
inc
dec
mov
insb
inc
add
insb
mov
cmpl
mov
int3
sbb
xlat
inc
outsb
add
sub
into
stos
xchg
test
adc
lods
mov
andl
test
and
jnp
dec
xchg
add
int
and
mov
add
or
aad
int3
sahf
imul
cltd
or
repnz
orb
jb
in
mov
mov
enter
ret
sahf
push
jno
mov
mov
dec
out
in
icebp
add
int
movl
cld
sub
xor
subb
and
popl
pop
jl
add
out
cmp
cmp
leave
les
mov
xchg
cmp
xor
or
sbb
pop
xchg
adc
sbb
lock
js
lea
ret
mov
or
addr16
xchg
pop
lock
aam
push
stos
das
loopne
scas
fnstsw
js
lock
cltd
out
and
scas
adc
jne
push
cmpsl
or
popf
imul
cmp
dec
sbb
sub
push
dec
mov
int3
fstps
test
add
jbe
jmp
jae
add
add
and
push
fwait
inc
inc
push
rcrb
test
inc
stos
cs
aaa
dec
inc
inc
lock
jne
sub
adc
dec
rcrl
push
jecxz
push
pop
and
and
mov
lret
ds
fsubl
adc
cli
int
xchg
mov
fsts
and
cmpsb
jge
lret
and
pop
fsubs
push
int
inc
xor
jne
loope
xor
sbb
push
leave
sub
mov
nop
dec
push
fstpl
repnz
loope
shl
js
dec
xchg
shl
aaa
iret
clc
lea
lods
mov
push
push
jmp
jmp
cmp
mov
pop
das
mov
jnp
stos
int3
ds
push
jp
xor
loopne
pop
push
lods
mov
or
sub
mov
push
aas
out
dec
idivl
mov
rcl
shlb
or
xor
repz
push
sub
mov
mov
nop
jns
mov
dec
sbb
js
negl
and
lds
paddd
cmpsl
lds
xor
sarb
std
sbb
iret
orl
xchg
mov
rol
pop
into
push
cs
test
pmulhuw
pop
pop
pop
decb
mov
jns
lds
push
cmc
or
cmpsl
insb
test
fisttpl
inc
sub
shll
jns
mov
mov
out
inc
and
les
or
mov
jge
pop
push
cmp
mov
dec
lret
cmp
mov
push
cmpsb
mov
cmp
jecxz
test
pop
xchg
push
fidivs
fimuls
fstps
inc
movsb
pop
inc
add
sbbb
pop
lods
dec
jnp
shrl
outsb
sbbb
xchg
dec
ljmp
inc
mov
push
andb
inc
je
cltd
int3
stos
sbb
cmpsb
in
adc
mov
sub
outsb
and
xlat
sarl
xchg
std
cwtl
xor
cmp
aam
inc
sub
jbe
mov
push
or
pop
imul
jmp
jmp
out
push
xchg
je
jno
push
jb
push
out
xchg
xlat
adc
pop
push
mov
jns
enter
roll
lahf
lret
pop
fwait
xorps
mov
mov
push
xchg
pop
out
cwtl
out
add
xchg
mov
mov
lods
rol
mov
mov
call
ss
in
pop
iret
xor
mov
imul
repnz
js
popf
cmp
and
push
xor
addl
ds
push
jno
jmp
pop
outsb
xchg
sbb
push
push
aaa
add
push
stos
movl
inc
or
nop
cmp
cmp
outsb
loopne
add
push
dec
test
add
push
iret
stos
cmp
loope
push
sub
dec
or
test
out
fwait
inc
loop
push
xor
subl
xchg
sbb
cmp
popa
sub
repz
dec
arpl
fidivrl
ret
rcrb
call
aas
mov
stos
sbb
nop
scas
xlat
in
jl
cltd
xchg
pop
in
dec
ss
and
pop
daa
cwtl
push
imul
xchg
stos
call
repz
mov
iret
dec
cld
scas
dec
inc
dec
sti
jnp
xchg
jb
out
pop
sub
xchg
or
loop
and
push
and
mov
push
arpl
push
pop
push
dec
iret
lea
sub
sbb
addr16
fidivrs
dec
adc
int3
mov
ret
adc
jp
add
mov
inc
jb
xor
or
rolb
fildl
push
sub
or
mov
xchg
push
in
loop
lret
adc
iret
dec
or
add
mov
jmp
or
das
test
add
mov
sbb
add
mov
frstor
test
jns
jp
or
mov
subl
mov
dec
push
inc
in
sbb
and
divb
pop
or
popa
mov
mov
or
fiaddl
add
add
orb
sub
or
aad
push
aaa
sbb
jecxz
add
jae
lret
mov
cmp
xchg
rol
cmp
pop
push
sarb
xorl
or
out
lea
clc
mov
repnz
inc
ljmp
jno
inc
stos
cmp
dec
adc
lret
inc
and
xchg
xlat
sub
daa
stos
popf
mov
jns
inc
in
repnz
cmpsl
test
aad
jmp
xchg
pushf
fbld
mov
stc
sub
jno
out
fbstp
cwtl
lods
mov
test
jnp
call
das
xor
sub
jle
inc
movsb
pushf
xlat
mov
xchg
mov
pop
shrb
iret
ffreep
fsubl
out
enter
or
pop
shlb
jne
xor
pop
mov
pop
test
shrb
sbb
adc
out
xorl
xorl
inc
outsl
push
ja
lahf
lret
shrb
pop
sub
mov
cmpsb
mov
in
cmp
test
jl
arpl
sahf
xchg
dec
hlt
and
and
fidivrl
flds
les
push
and
cwtl
dec
sbb
hlt
dec
dec
loopne
push
movsl
pop
inc
insb
rcll
mov
mov
or
shr
mov
enter
test
jmp
rcl
flds
mov
sbb
mov
jg
or
mov
movsb
fisttpl
mov
pop
and
in
frstor
enter
mov
sbb
mov
in
push
and
add
add
cmc
stc
fistpl
subl
addr16
imul
mov
int3
aad
cmp
add
pusha
das
lock
sahf
xor
mov
aaa
int3
pop
mov
cwtl
lret
push
xor
lea
pusha
xchg
shrl
lods
sarb
insb
imul
imul
js
insl
repz
mov
sub
mov
movsb
out
stos
and
scas
out
lods
pop
mov
in
jecxz
pop
mov
inc
lods
adc
int
int3
jle
xchg
in
sbb
adc
mov
inc
negl
mov
pop
add
fsubrs
jnp
iret
adc
daa
jmp
xchg
sub
and
cmp
xor
lods
out
insl
bound
push
mov
mov
sti
and
in
imul
lods
outsb
aad
jno
cmpsl
imul
dec
movsb
sub
clc
movsl
imul
mov
shrl
and
stos
cs
lcall
lock
test
adc
adc
xchg
or
fisttpl
lods
hlt
es
dec
test
testl
stc
jo
push
inc
cld
mov
js
inc
rclb
pop
push
hlt
call
mov
hlt
mov
push
dec
stc
aas
pop
jb
jl
pop
cmp
jo
sar
notb
insb
jle
fs
jg
add
cmp
fnsetpm(287
xchg
lea
mov
pop
fcmovnb
lahf
mov
das
sbb
mov
mov
loopne
xchg
xor
lahf
xchg
push
int3
xchg
sub
fidivrl
push
mov
int3
int3
push
adc
fnop
xchg
inc
add
sub
cmp
data16
test
pop
mov
scas
data16
pop
mov
rorb
dec
movsb
insb
or
push
fcmove
sbb
pop
mov
lret
push
ss
push
ljmp
xor
cmp
push
jb
in
rorb
loop
or
test
push
push
mov
idiv
inc
xchg
dec
mov
lds
lretw
sub
mov
mov
dec
add
inc
mov
dec
add
popa
xchg
clc
icebp
jb
stos
add
and
test
mov
xchg
pop
mov
lea
add
adc
iret
mull
pop
scas
xor
aas
lcall
push
fisubs
lahf
xchg
fincstp
pushl
rolb
mov
clc
inc
popf
mov
mov
inc
inc
push
testb
insl
testb
call
addr16
call
dec
addr16
xchg
lret
mov
inc
push
adc
xor
push
imul
push
or
lret
push
mov
pop
sbb
icebp
out
push
push
xlat
cmp
xchg
shll
cmp
xchg
iret
xor
jge
push
mov
sub
add
adc
xchg
cs
outsl
popa
adc
dec
push
sub
dec
dec
pop
lods
insb
mov
adc
mov
dec
jo
or
fcmovnbe
add
nop
cmp
mov
loopne
inc
fnstcw
sbb
mov
xchg
and
lret
popf
ds
push
cmp
loope
aad
sar
pusha
add
and
jmp
jae
xchg
int
push
cmpl
pop
pop
subb
inc
pop
shlb
and
mov
and
jno
inc
aad
pushf
es
push
inc
sub
xor
fcoml
repnz
or
iret
add
lret
pop
fisubs
inc
dec
scas
push
pop
aas
pop
repnz
je
mov
dec
mov
loop
cmpsl
inc
divb
xchg
out
inc
pop
mov
dec
aas
push
daa
inc
fldenv
das
or
xchg
xor
sbb
mov
iret
fldenv
mulb
and
and
les
jns
cltd
insl
and
out
iret
or
jb
lret
fxch
xchg
pop
mov
xchg
inc
in
ret
mov
xchg
push
pop
lret
aaa
mov
pop
pop
dec
xor
stos
push
dec
cmp
sbb
jne
out
movsl
sbb
mov
test
cmpsl
cwtl
push
pushf
mov
xchg
mov
sub
lods
clc
mov
imul
or
inc
stos
sbb
mov
outsb
push
popa
out
pop
ficoml
dec
loope
pop
inc
shll
adc
jno
popf
inc
in
xorb
xchg
lcall
push
mov
or
jmp
aam
test
cld
jmp
aas
mov
mov
aad
scas
fistps
cmp
cwtl
or
sbbb
inc
test
fadds
dec
sarl
xor
adc
hlt
sub
and
sti
iret
clc
stos
mov
adc
enter
or
xor
adc
loop
mov
packssdw
sub
data16
stos
inc
adc
dec
mov
cmp
fdivr
sbb
jecxz
sti
lds
pop
jo
aaa
test
jns
lods
jg
inc
and
mov
loopne
pushf
mov
int3
jo
test
frstor
es
punpckldq
jge
xchg
sub
push
inc
push
repnz
mov
pop
scas
dec
int3
outsl
mov
and
sub
pop
sub
test
imul
cmp
pop
sub
lahf
sbb
out
sbb
xchg
jnp
aad
mov
movaps
jmp
leave
xor
les
std
stos
fisubs
inc
cld
insb
add
icebp
push
pushf
sbb
aam
fwait
in
or
lret
xor
and
lods
pop
dec
sub
xchg
xchg
cli
mov
or
movsb
or
lret
pop
gs
sub
pop
loopne
or
push
ljmp
mov
lock
add
cmc
loop
movb
outsl
inc
push
dec
movsb
push
sbb
cmp
jle
addr16
movsb
rorb
std
lds
or
xchg
sub
inc
push
cltd
addl
cmpsl
cld
mov
shll
loope
jns
mov
fisttps
nop
std
mov
dec
mov
and
xor
mov
jge
inc
mov
push
inc
hlt
bound
jno
mov
lods
test
test
push
mov
pusha
sub
add
mov
cmp
mov
inc
test
je
mov
sbb
push
dec
xor
das
xor
lods
test
jno
les
fnstcw
add
push
xchg
mull
mov
pop
xchg
sbb
dec
cmp
push
or
xor
mov
repnz
mov
daa
test
pop
dec
add
push
adc
into
dec
or
into
cld
sub
movsb
sbb
into
mov
stos
jns
stc
cmp
jle
fidivs
ds
pop
je
jne
call
je
push
sbb
adc
popf
rcll
rcr
ss
mov
movsl
js
sarb
test
mov
stos
int3
jmp
lock
loope
dec
mov
frstor
cmp
mov
lahf
mov
imul
xor
xor
adc
jmp
movl
add
cmp
inc
sub
lret
vsqrtpd
sub
test
dec
repnz
outsl
push
movsl
int
in
das
or
or
scas
push
or
orb
adc
fadds
stos
sbb
or
sbb
xchg
jb
lret
pop
movsb
add
xchg
and
in
mov
adc
iret
jmp
neg
add
repz
stos
pop
jmp
mov
push
inc
loop
sbb
jmp
pop
shrl
cmp
mov
mov
jle
sub
inc
lcall
xchg
inc
clc
mov
jo
stos
sbb
add
icebp
scas
icebp
insl
sub
les
jno
mov
sub
xor
fs
adc
dec
loope
cmc
dec
fsubl
divl
fbld
and
lahf
inc
sahf
in
inc
mov
call
cmp
mov
cs
int3
xchg
sbb
daa
mov
or
sar
stos
out
movsb
dec
jecxz
xchg
daa
or
xor
and
pop
cwtl
xchg
int
sbb
int
bound
in
jnp
lea
test
xchg
sbb
add
rcrl
xchg
es
lods
push
test
inc
pop
sub
test
lods
inc
mov
call
push
pop
adc
ficompl
sahf
stc
push
inc
adcl
sub
int3
rcrb
lar
jecxz
es
arpl
filds
mov
and
jge
cmc
pop
adc
stos
pop
cltd
in
nop
adc
xchg
dec
sub
push
hlt
xchg
inc
sub
movsb
dec
sarb
jmp
enter
mov
arpl
cs
mov
mov
scas
pop
clts
mov
fwait
adc
jp
out
stc
test
mov
outsb
xor
int
scas
pop
sbb
jecxz
fucom
inc
lcall
sub
cld
cmp
ds
lods
pop
and
shrb
dec
push
add
inc
mov
xchg
adc
add
push
mov
popa
mov
mov
aad
out
es
pop
iret
mov
ljmp
push
ds
xchg
adc
and
xor
mov
push
xchg
jg
add
fsts
dec
jmp
and
adc
xor
jg
add
mov
push
push
jl
ret
push
ret
inc
mov
bound
addr16
pushf
push
pop
cmpsl
and
sbb
mov
dec
aam
call
push
or
test
in
inc
cwtl
xor
dec
inc
ljmp
addr16
cwtl
sbb
mov
dec
mov
pop
addr16
scas
aaa
lock
sub
rorl
push
roll
shll
loopne
push
pop
mov
ja
add
jecxz
cmpsb
cmc
adc
cmp
and
push
sbb
iret
sarl
ficomps
loopne
cmp
add
jnp
xor
adc
jae
or
mov
outsb
lods
mov
push
in
jae
and
jle
int3
mov
mov
add
sub
lods
mov
dec
sbb
leave
das
jmp
nop
mov
arpl
aad
test
lods
xor
push
fbstp
add
fxch
js
and
pop
mov
sar
lret
lret
out
dec
inc
inc
and
jle
aas
or
fistpl
je
mov
movl
sbb
fiaddl
inc
sub
mov
cmp
mov
rorb
sbb
xchg
fidivrl
gs
pop
or
push
xor
pushf
sbb
pop
push
nop
push
xchg
xchg
inc
inc
add
inc
out
or
test
insb
add
cwtl
popa
popa
iret
dec
fbld
xchg
insb
popa
mov
int
dec
mov
push
mov
xchg
lock
cltd
addr16
inc
sarl
ret
je
lcall
dec
add
addl
aaa
jne
add
insl
xchg
pop
popa
movsb
xchg
dec
nop
insb
mov
lret
int
mov
aaa
xor
out
out
rcrb
fwait
push
or
cmc
lock
mov
aas
xchg
and
and
aad
test
inc
clc
notl
mov
scas
fmuls
or
pop
sbb
lret
add
mov
fbstp
movsl
and
sahf
test
lcall
push
cmp
popa
dec
mov
add
inc
adc
push
sbb
neg
imul
les
inc
cmpsl
lret
fildll
daa
cmp
push
cbtw
out
mov
cmp
dec
cs
scas
pushf
lock
push
js
xor
syscall
dec
mov
push
add
adc
pop
xchg
fisubl
ret
les
mov
andl
mov
jl
sbb
fmull
inc
in
clc
cld
jl
xchg
outsb
adc
mulb
or
fidivl
adcb
std
jle
pop
push
int3
pushf
add
xor
iret
repnz
lods
xchg
in
mov
fsubrp
aaa
dec
mov
cmpsb
xchg
sbb
xchg
lock
and
dec
add
enter
xchg
ljmp
lds
or
push
movlps
fcompl
pop
shrl
call
sub
daa
adc
adc
mov
hlt
jmp
repnz
test
icebp
imul
sub
adc
adc
inc
fildl
out
lods
gs
lret
xor
aaa
lahf
xor
movsl
mov
dec
ffreep
inc
and
in
out
int
pop
and
mov
pop
scas
int3
loope
push
pusha
insl
lret
add
inc
pop
sub
pop
push
push
or
in
cmp
dec
shrl
cld
cmp
xchg
mov
fidivrs
outsb
loop
bound
pop
les
dec
bound
cmpsb
rcll
stos
add
daa
mov
imul
mov
push
xor
ss
clc
xchg
or
in
frstor
pusha
ss
or
fmul
xor
jmp
xor
lds
jnp
mov
cmp
scas
in
adc
xor
mov
jnp
jmp
das
add
fsubrl
pop
daa
push
dec
pop
push
iret
adc
lods
and
pusha
xchg
cmove
xor
ds
popf
aad
ds
inc
pop
fidivs
push
rcrb
dec
into
dec
push
mov
dec
ds
outsl
in
scas
xlat
cld
pop
andb
dec
fists
pop
scas
push
pop
imul
roll
and
add
fisubs
dec
or
andl
dec
cmp
pop
into
sub
aam
mov
push
and
add
push
jmp
push
mov
add
icebp
ljmp
sbb
cltd
inc
stos
inc
ds
push
add
jne
dec
lock
hlt
push
hlt
adc
sbb
jmp
mov
cmpsb
les
sub
dec
addr16
pop
sbb
push
repnz
pop
xor
out
icebp
push
push
and
inc
pop
sti
mov
cmpsl
sbbl
bound
inc
pop
sub
outsb
mov
bound
jno
sbb
hlt
negb
jo
pop
mov
cld
ret
vmovntps
mov
fidivs
mov
aas
mov
pushf
adc
out
adc
sbb
frstor
jecxz
dec
stos
nop
mov
cwtl
xorl
mov
inc
mov
push
imul
jecxz
mov
xchg
fs
iret
sub
adcl
pop
fdiv
mov
leave
mov
out
pop
lcall
adc
xor
push
lds
out
mov
aam
ret
push
push
sar
popf
lods
rol
insl
add
push
or
mov
sub
fwait
push
jne
repz
and
cli
popf
pusha
pop
lcall
addl
iret
inc
lods
xchg
dec
jo
cmp
push
ret
add
or
addl
jmp
mov
aas
repnz
pop
fs
xchg
out
xor
mov
jp
jmp
pop
test
loop
jne
sahf
ret
jmp
lahf
addr16
ret
jge
cld
pop
repnz
jecxz
pushf
add
jle
cmp
lods
inc
rorb
aam
cmp
flds
and
dec
jo
js
or
and
sbb
icebp
popl
pop
ds
ror
add
and
sbb
pusha
or
add
mov
xlat
adc
pop
ftst
pop
cmp
in
inc
or
lret
cmpsl
das
ljmp
enter
sub
or
fs
js
shll
and
adc
mov
sub
or
xor
add
adcl
add
and
jge
imul
sbb
mov
pop
lods
pop
cli
mov
pop
xor
orl
mov
mov
xchg
shlb
lret
push
repz
or
js
mov
mov
jae
xchg
xor
push
es
and
std
or
pop
push
shrl
lahf
outsb
cmc
mov
or
insb
jmp
sbb
jae
leave
call
popf
nop
lock
stc
jbe
xchg
lock
jae
jmp
and
push
stos
outsb
push
mov
cli
sub
adc
sahf
xchg
cmpsl
cmp
int3
mov
mov
mov
arpl
inc
mov
xchg
jb
dec
pop
in
push
mov
hlt
xlat
ljmp
loope
push
jns
adc
mov
jle
inc
mov
mov
lcall
repnz
xchg
adc
push
inc
pop
pop
call
jns
mov
jg
push
test
dec
popf
std
or
or
push
mov
shl
bound
xchg
add
jg
in
xor
pop
push
adc
sbb
loopne
insl
adc
xor
or
add
nop
ret
mov
aaa
jp
mov
hlt
jnp
test
lods
cmpsl
or
cmpsl
xor
and
stos
pop
inc
sbb
es
shll
jp
loopne
cmc
jnp
add
jmp
je
pop
outsb
sahf
push
outsl
mov
lret
das
popf
sbb
jecxz
lcall
push
mov
stos
loope
mov
add
dec
pop
lock
pop
mov
addl
gs
loopne
jle
jbe
es
das
adc
imul
lea
insl
mov
cmc
xchg
pop
enter
adc
jbe
cmpsb
es
loopne
jg
out
and
sbb
icebp
lcall
push
cmp
mov
stc
divl
out
inc
stc
or
push
in
adc
mov
mov
add
push
pop
arpl
mov
adc
pop
int
clc
pop
jno
mov
jbe
jno
jno
pop
dec
dec
mov
jle
in
out
sbb
cmp
stos
jbe
outsl
jl
pop
adc
lds
mov
mov
sbb
jo
fidivl
xor
push
in
ljmp
inc
mov
lea
addr16
mul
pushf
jb
xor
addr16
mov
stc
jp
push
into
leave
sbb
pusha
cli
insl
stc
adc
addr16
ja
xchg
jle
adc
aad
cli
mov
popa
push
ret
or
cmp
fcom
xabort
das
xor
jbe
xchg
pop
jae
lcall
in
int3
and
xor
icebp
sub
push
mov
imul
ljmp
dec
stos
adc
movsl
addl
mov
mov
aad
mov
mov
imul
jmp
push
jmp
push
and
xchg
adc
dec
xchg
pop
pop
shll
mov
insl
int3
add
push
and
aad
psrad
fdivrl
inc
jle
cmpsl
push
lds
xor
add
shrl
xchg
mov
inc
and
in
or
pop
pusha
aaa
push
jnp
inc
lret
gs
sbb
and
repz
push
dec
fwait
cmpsb
xor
in
dec
loope
and
insb
sbb
rcrl
jp
fnstsw
xor
sub
fsqrt
std
int3
mov
repnz
adc
add
dec
xlat
xor
lret
pop
or
dec
std
imul
jmp
jecxz
adc
cs
inc
int
dec
mov
pusha
idivl
inc
test
les
push
mov
lahf
std
xchg
lds
xor
pushf
pop
shlb
and
add
push
enter
cmp
mov
xor
lcall
mov
stos
mov
aaa
sub
das
xor
xchg
icebp
loope
hlt
ret
lret
shr
cs
mov
nop
mov
xor
cmp
cmp
and
jmp
mov
pop
and
pop
cmp
sbb
stc
cmp
add
cmp
lock
xchg
imul
cs
in
mov
jge
mov
testl
push
stos
shl
or
mov
xchg
mov
lret
lea
int3
in
movsl
add
jge
imul
add
loop
dec
popf
mov
outsb
scas
jnp
add
std
nop
test
lahf
inc
push
adcl
rclb
test
loope
push
sub
lods
mov
movsl
mov
push
loop
popf
xchg
stos
add
or
andl
fistpll
repz
mov
fidivrl
cltd
call
jp
mov
sbb
mov
mov
jno
adc
movsbl
cmp
push
xchg
mov
lods
outsl
push
pop
inc
movsl
popf
shl
notb
ja
leave
imul
jecxz
xlat
pop
sbb
mov
pop
pop
mov
es
in
int
push
adc
addl
pop
add
sahf
scas
or
jmp
mov
mov
fcmovu
xor
and
ret
addr16
fcoml
dec
and
ljmp
lea
inc
cmp
push
xor
outsl
ret
ret
push
cmpsb
in
mov
xor
out
out
shrb
mov
sbb
stc
outsl
cmc
addl
or
divb
mov
ljmp
add
adc
div
mov
or
mov
dec
cwtl
stos
sub
sbb
les
mov
dec
sub
test
adc
imul
out
imul
jo
dec
dec
mov
xor
xchg
roll
mov
decl
imul
pop
xchg
cltd
and
arpl
out
repz
mov
inc
call
xor
xorl
aas
pop
js
jmp
in
out
or
icebp
lea
jae
ret
mov
rcrl
mov
mov
xor
je
iret
stos
sbb
test
adc
jle
and
dec
rolb
mov
xor
leave
mov
fsubs
das
xchg
test
ret
add
xor
pop
mov
xor
mov
js
mov
int3
sub
ja
cmc
sub
mov
js
fldt
subb
dec
repnz
stc
shl
loopne
sbb
lock
or
loope
lret
mov
sbb
xor
adc
pusha
insl
hlt
dec
jnp
xor
inc
jbe
and
fidivl
push
sbb
jne
mov
xchg
repz
sarb
dec
sub
mov
addr16
popa
repz
jns
xchg
dec
sub
sub
jo
in
gs
ficomps
jmp
push
lods
fwait
je
fimuls
fnstsw
mov
or
in
xor
mov
sbb
adcl
add
mov
clc
push
out
sbb
xorl
push
push
pop
fcmove
fmul
dec
fisubl
adc
mov
cmp
aad
sbb
xchg
cmpsb
fbstp
mov
dec
mov
jb
xchg
push
xchg
fsubr
inc
xchg
aam
dec
jmp
fsubs
xor
pop
call
in
pop
xchg
push
shrl
sub
cltd
jbe
push
xchg
or
ds
xchg
and
enter
mov
ret
jge
cmp
cmpsb
jg
mov
aam
adc
cmpsl
imul
cmc
push
or
and
pop
dec
xor
popa
aaa
and
mov
mov
xchg
pop
shl
mov
fdivl
sarl
inc
psubusb
jnp
xor
push
icebp
shll
mov
xor
jae
xor
repz
scas
mov
push
push
daa
ljmp
push
dec
stos
sti
repnz
int3
push
pop
aas
pop
sbb
sbbb
pop
imul
push
inc
in
inc
dec
inc
nop
mov
dec
jne
aas
outsl
das
addb
daa
push
sub
sub
xchg
stos
push
imul
add
lea
adc
mov
adc
pop
push
push
xchg
mov
xor
cltd
xor
inc
mov
adc
cli
xor
je
into
lcall
mov
sti
push
jecxz
cwtl
cmpsl
xor
hlt
adcb
dec
dec
sbb
push
test
dec
outsb
pop
lock
xlat
rcrb
ljmp
mov
aam
clc
popf
les
cmp
lret
xchg
inc
and
cmpl
loope
ret
mov
cmc
xchg
ret
or
test
lock
push
mov
pop
test
fisubrl
push
sahf
cmpsb
call
pop
adc
orl
mov
mov
mov
je
push
ja
into
les
xchg
xchg
repz
inc
mov
test
mov
ret
dec
sarb
pusha
push
hlt
pop
ficoml
rcr
imul
shrb
and
and
in
push
movsl
cmpl
jle
pop
popf
loope
stc
push
sub
push
into
lock
cld
mov
andb
lcall
push
outsb
ret
jge
mov
mov
mov
sub
cs
test
dec
aas
pop
inc
cmc
push
inc
bound
add
or
stos
xchg
push
stos
cmp
mov
inc
xchg
push
ja
mov
mov
cmpsb
clc
addr16
or
inc
notl
inc
xor
or
mov
jp
cmp
xchg
out
sbb
out
movsb
xor
or
lcall
mov
lea
cmpsb
lds
scas
push
fimuls
mov
adcl
pop
test
mov
insb
rcl
jo
dec
dec
paddq
inc
in
fadds
fidivrs
add
mov
xor
cmp
jg
addr16
dec
ljmp
lea
lds
xor
js
arpl
scas
mov
pusha
mov
add
mov
mov
dec
int
xchg
aam
sahf
and
pop
pop
rol
ret
push
fs
lds
aaa
test
aaa
jg
adc
mov
das
fwait
adc
mov
lds
dec
orb
repnz
mov
aas
jmp
inc
pop
loopne
push
sub
loopne
test
lods
into
fwait
mov
lcall
jb
adc
stc
xchg
mov
fs
nop
or
fs
mov
icebp
dec
mov
push
mov
fsubp
push
and
cmp
mov
mov
mov
bnd
push
jne
jecxz
int3
inc
jge
pop
push
lods
jno
loop
inc
dec
ljmp
mov
sbb
shlb
fisttps
lret
mov
xchg
filds
xchg
int3
xor
and
in
mov
int
cmp
xor
xor
mov
dec
in
jg
adcl
aam
xchg
xchg
cmp
and
.byte
pop
cmp
or
add
or
add
sbb
add
sbb
add
sbb
add
sbb
add
or
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
sub
dec
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
ss
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
cmp
add
add
incl
add
add
add
add
incl
add
add
cmp
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
inc
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
inc
dec
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pusha
dec
add
add
add
incl
add
add
dec
add
add
add
jno
add
jno
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
decl
dec
add
dec
add
add
add
lea
lea
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
cwtl
dec
add
add
add
xchg
dec
add
xchg
dec
add
add
add
add
dec
add
add
add
incl
add
add
add
add
mov
add
add
add
inc
mov
add
call
test
dec
add
cmp
dec
add
cmp
add
jmp
dec
add
dec
add
add
add
incl
add
add
mov
add
incl
add
add
add
add
incl
add
add
add
add
add
jmp
dec
add
ret
add
add
call
dec
add
dec
add
add
add
lcall
dec
add
leave
dec
add
call
leave
dec
add
incl
add
add
int3
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
dec
xlat
dec
add
dec
add
lcall
dec
add
dec
add
incl
xlat
dec
add
call
dec
add
mov
xlat
dec
add
dec
xlat
dec
add
xlat
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
fmull
add
add
incl
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
jecxz
add
add
add
ljmp
jecxz
add
incl
add
add
in
add
lcall
in
add
add
add
incl
add
add
add
jmp
or
or
call
or
or
decl
dec
add
add
sbb
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
sbb
add
sbb
add
sbb
add
sbb
add
or
add
or
add
add
add
sbb
add
add
add
je
popa
insb
imul
imul
je
outsl
outsb
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
data16
je
jb
jb
je
arpl
push
arpl
outsb
add
sub
push
gs
insl
gs
push
add
jmp
je
push
jb
arpl
jae
gs
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
test
inc
gs
imul
outsl
arpl
add
inc
push
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
sbb
mov
jmp
add
mov
popf
mov
sti
xchg
sbb
xor
lods
loope
dec
xchg
cld
add
or
cmpl
jmp
dec
movsl
sahf
pushl
mov
gs
js
repz
sbb
push
xor
dec
popf
fscale
pop
daa
test
shl
sbb
mov
insb
inc
jb
pop
dec
pop
push
outsb
movl
inc
iret
sub
or
iret
stc
mov
cs
dec
or
movsl
sbb
imul
mov
dec
push
imul
cmp
ret
fwait
pop
add
shrb
cmc
fistpll
dec
jno
pusha
mov
pusha
out
repnz
mov
inc
xor
push
imul
push
scas
cmc
insl
cmp
repnz
imul
insl
roll
xchg
sbb
arpl
imul
aad
mov
mov
nop
xchg
cmpsb
es
insl
aaa
sub
add
insb
push
dec
push
aad
sub
xchg
and
cmp
pop
or
pop
or
cli
in
sub
pop
popf
and
stos
mov
mov
cmc
or
ror
pop
iret
test
aaa
push
jo
sbb
ret
jge
scas
iret
cmp
mov
movsb
sahf
lret
inc
jl
pop
jmp
cmp
xor
sub
stc
jb
pop
xor
out
or
rorb
repz
test
loopne
xor
inc
das
jae,pn
xlat
mov
xchg
cmp
push
sbb
mov
out
dec
xor
inc
je
bound
pop
mov
notl
fbld
pop
add
mov
lret
pop
rcrb
jmp
jg
jno
pop
cltd
dec
push
jl
lahf
imul
dec
mov
xchg
ljmp
scas
test
pushf
xor
mov
pop
mov
in
inc
cmp
pop
pop
xchg
mov
mov
in
add
and
test
dec
imul
nop
mov
or
xor
and
ljmp
sarb
mov
movsl
jmp
in
push
loop
add
aas
jge
popa
sub
into
cmpsb
movsl
test
xchg
jmp
hlt
inc
gs
shl
or
les
ret
pop
es
fildl
push
sahf
fistl
mov
adc
insb
subb
push
movsb
push
sbb
cmp
enter
jecxz
insb
inc
into
sub
icebp
test
rcrl
sbb
mov
in
ficoml
gs
push
movsb
sbb
in
aad
sbb
jo
aas
sub
testl
inc
std
mov
clc
xchg
inc
push
or
ret
mov
jge
mov
popa
pop
cmp
add
add
pop
repz
jns
pop
fs
dec
clc
incb
test
shrl
xchg
cmc
fucom
sbb
add
aad
pushf
hlt
xor
adc
mov
jmp
cmp
pop
scas
sbb
push
insb
testl
lahf
cmp
cld
xor
faddp
fldt
stos
mov
ja
jmp
pop
lret
cmc
outsl
sub
sbb
ss
sbb
negl
ja
cli
and
out
pushf
pop
stos
jnp
cmc
lcall
shll
repnz
cmp
in
jo,pt
xor
mov
fsubl
movsb
pop
test
cmp
icebp
push
aas
push
fcomps
filds
xchg
xor
cld
dec
jmp
popf
xlat
inc
in
push
std
outsb
orl
shrl
outsb
or
fildll
xor
mov
sahf
and
add
dec
pop
pop
adc
sarb
adc
out
mov
sub
push
bound
push
push
cmp
inc
pop
mov
into
pop
movsl
rclb
mov
loopne
dec
xor
and
inc
mov
insl
add
and
testb
or
fwait
leave
roll
mov
xchg
fwait
insb
pop
imul
mov
add
sahf
mov
daa
push
shrb
mov
lds
les
jl
je
or
cmp
mov
or
stc
push
scas
pop
pop
sbb
push
out
jnp
sbb
cli
ja
mov
mov
dec
mov
sub
enter
cmp
shll
jecxz
insb
adc
pop
lods
mov
xchg
pop
or
sub
push
aaa
cltd
hlt
nop
inc
jnp
iret
movsb
inc
push
hlt
xchg
int
jecxz
in
cmp
mov
cs
jae
inc
add
jo
ret
jnp
addr16
scas
mov
mov
aas
gs
stos
mov
cmc
mov
push
sub
mov
push
ds
and
mov
push
int
add
dec
mov
fsubl
mov
push
ja
arpl
data16
nop
outsb
push
mov
push
rol
out
jp
out
sub
sti
dec
call
dec
cmp
add
mov
in
jbe
adcb
xlat
mov
outsl
cs
in
add
sub
mov
xchg
cmp
cld
inc
cwtl
mov
and
mov
xchg
ds
xchg
lock
xchg
das
xchg
sub
or
pop
int
pusha
add
jo
imul
mov
jne
int
pop
jl
cmp
addl
addb
lret
mov
pop
mov
jl
popa
stc
push
cwtl
dec
fs
dec
push
iret
add
pop
test
fsubrs
in
push
mov
hlt
pop
fistps
mov
and
inc
ds
rol
lods
mov
jl
inc
and
push
fs
push
mov
jl
mov
rorb
rol
mov
les
pop
shll
mov
cwtl
daa
push
cmpsl
and
cmp
push
rolb
gs
enter
add
into
scas
inc
out
mov
gs
add
and
lods
xor
jb
fiaddl
lds
mov
push
es
or
sbb
push
cmp
jne
add
xchg
push
jo
jle
fistl
dec
add
lock
outsb
jb
mov
jae
arpl
push
lcall
mov
lahf
sti
sub
int
insb
popa
lea
lcall
and
test
mov
xchg
ss
add
test
add
xchg
pop
test
xor
call
xor
pusha
imull
mov
sahf
mov
mov
dec
movsl
push
dec
push
scas
push
dec
mov
xor
jae
xchg
xchg
ret
adc
mov
mov
adc
mov
loopne
mov
or
mov
push
rclb
push
sbb
incl
dec
cmpl
and
dec
dec
jns
cmp
int3
xor
loopne
or
jnp
std
in
inc
inc
jmp
push
inc
fcoml
aam
std
inc
adc
stos
push
pusha
mov
add
or
pop
fimull
mov
jecxz
loop,pn
mulb
xchg
arpl
xor
sub
mov
cmp
xchg
sub
mov
push
jg
lea
and
sar
cmp
push
sahf
repz
movsl
ss
cwtl
jns
mov
and
ljmp
out
adc
int
cmc
in
and
and
dec
div
enter
lds
push
add
movl
mov
and
aad
push
into
int
mov
jne
into
and
movsl
xchg
insb
xor
xor
or
loope
mov
mov
or
test
test
pop
fisubl
fwait
sub
pop
sbb
sbb
cmp
inc
pop
mov
test
dec
mov
cli
insl
pop
js
inc
int
ja
int3
adc
ss
shlb
add
sub
leave
popa
lods
fs
bound
push
inc
scas
mov
add
jbe
mov
insl
xchg
jnp
push
push
mov
in
push
arpl
inc
mov
dec
or
inc
stos
lcall
mov
fstps
lret
popf
jge
cld
es
pop
cmp
test
test
xchg
or
sub
shrb
push
nop
lcall
cltd
movl
inc
arpl
xchg
xor
fidivrl
jns
push
insb
cmp
cmpsb
mov
orl
aad
cmpl
jae
xlat
fidivs
pop
xchg
mov
mov
repnz
jnp
xor
and
xlat
stos
sbb
mov
mov
pop
out
cmpb
cmp
dec
incl
sbb
xchg
mov
call
daa
add
roll
and
scas
push
pop
shll
popa
hlt
add
mov
xor
arpl
imulb
es
add
lret
jno
mov
in
inc
ficompl
sbb
sti
xorb
xor
lods
cld
jae
add
sbb
aad
jno
xchg
out
sub
mov
shll
mov
out
in
sub
ja
fistpll
xchg
ss
inc
das
push
scas
mov
hlt
nop
add
sub
rorb
test
lret
mov
xlat
mov
insl
mov
sub
sub
mov
push
add
push
out
mov
pop
and
mov
sub
pop
aaa
sbbl
popf
mov
adc
mov
xor
stos
fnstsw
aad
sbb
es
aas
mov
das
inc
push
scas
pop
and
mov
xchg
mov
xor
pop
pop
mov
addr16
jnp
insb
jp
test
stc
dec
repnz
mov
or
mov
movsl
ds
push
adc
jo
in
outsl
movsb
inc
outsb
aas
lcall
or
lock
sahf
mov
arpl
sbb
cmovp
sbb
cmpl
push
into
add
or
add
scas
xchg
sti
imull
inc
or
pop
xchg
mov
loopne
add
popa
inc
in
fidivl
inc
out
push
shrl
jmp
jns
cmp
sahf
mov
lahf
aaa
fistl
ljmp
push
imul
xchg
sbb
jl
das
cmp
arpl
lcall
repnz
cmc
sbb
arpl
dec
scas
hlt
xlat
sbb
add
mov
lods
cwtl
inc
cmp
and
popa
and
aas
xor
out
push
aas
outsl
mov
cmpsb
nop
andl
jle
stos
and
cmp
outsl
mov
cmpsl
sbb
je
push
or
sti
int3
pop
in
xor
mov
cmc
inc
int3
dec
jo
or
clc
test
in
pop
sub
push
xchg
std
cmpsl
leave
pop
stos
dec
jae
js
in
push
rcr
and
jo
push
mov
fwait
pop
add
dec
mov
mov
inc
xlat
loop
ja
daa
push
lods
mov
js
test
inc
add
loopne
xor
dec
mov
sbb
pop
xlat
ret
sub
fidivrs
or
cmpsb
sub
call
mov
out
imul
lahf
test
cltd
and
hlt
fprem1
sbbb
insl
cmpl
jp
loope
sub
mov
mov
insb
xchg
mov
mov
fs
je
jmp
sbb
mov
mov
out
pop
loopne
mov
mov
pushf
cld
int3
ja
mov
orl
inc
xchg
rorl
iret
inc
jecxz
cmp
xor
push
sbb
lret
xchg
xchg
ja
insb
cmp
xor
out
nop
fnstenv
mov
nop
sbb
cld
pop
roll
jno
mov
arpl
add
lret
negb
div
inc
xchg
xchg
cmp
mov
cs
adc
es
mov
xchg
push
add
cmp
fsubrp
add
lcall
mov
popf
pop
scas
xor
pop
mov
addr16
imul
shll
lea
and
push
push
mov
shrl
imul
jle
out
rcl
pop
mov
cmp
pop
pop
mov
inc
push
inc
lods
or
add
dec
push
into
notl
shlb
loope
mov
insl
xchg
and
xor
ret
mov
sub
scas
mov
dec
xchg
aaa
lret
inc
mov
sarb
sbb
sbb
gs
stos
mov
popf
jbe
sbb
popa
mov
sub
stc
xor
loope
stos
fwait
dec
loope
into
cmp
cmpsb
shll
imull
sbb
xchg
push
jns
mov
sub
aam
gs
jno
shl
and
fcoml
fsubrl
cmp
fldl
xchg
in
pop
ret
mov
cltd
or
mov
mov
shlb
enter
and
mov
or
sbb
int3
push
out
dec
enter
int3
lahf
dec
scas
mov
stos
movsl
or
daa
repz
lods
inc
xchg
les
les
outsb
mov
inc
push
pop
stos
sub
inc
mov
loopne
add
and
addr16
out
xlat
mov
lcall
sub
and
loope
hlt
sub
xor
sub
aas
and
sbb
icebp
push
out
xchg
add
in
add
repnz
inc
cs
sahf
dec
dec
mov
in
and
stc
ja
movsb
dec
xchg
out
dec
dec
gs
pop
sbb
mov
inc
ss
add
push
out
sbb
push
fsubs
mov
inc
add
mov
out
mov
sub
and
stc
lcall
push
imul
fs
es
inc
xchg
sbbb
fnstenv
divl
add
out
mov
cli
and
out
lods
pop
xor
fildl
sti
and
sbb
xchg
adc
stos
aas
xchg
imull
pop
test
call
ret
xchg
dec
sbb
mov
cmpsb
out
in
je
xchg
enter
orl
dec
push
test
cmp
jo
nop
nop
mov
sbb
loopne
aam
jns
fcoml
int
cmp
lcall
notl
mov
jns
mov
mov
fwait
jecxz
imul
loop
rorb
mov
movsl
jae
mov
out
sub
sub
aas
sub
xchg
lahf
or
inc
mov
hlt
mov
out
sub
adc
mov
jg
rcll
aam
add
mov
ja
xchg
sbb
adc
lds
daa
jb
mov
mov
shl
mov
mov
into
add
or
jecxz
xor
inc
inc
mov
pop
mov
add
dec
pop
pop
les
dec
ljmp
fistpll
roll
and
or
jns
pop
int
xlat
pusha
lds
xor
cld
lods
jmp
sbb
mov
mov
lods
mov
mov
imul
aas
xchg
fcomi
mov
pop
mov
testl
call
shlb
rorb
rol
add
add
cwtl
jno
inc
cld
xchg
mov
and
stc
jg
cmpb
out
push
sbb
std
mov
sub
nop
bound
scas
insl
fldl
dec
mov
into
jb
clc
sub
adc
cmpsl
xor
in
or
arpl
or
push
repz
pop
pushl
cs
incl
ret
movsb
add
jg
mov
and
jno
cs
pushf
jb
filds
inc
push
cmpsl
push
daa
les
mov
pushf
lahf
aas
movsl
arpl
jb
jnp
outsl
test
addr16
sbb
sbb
fbld
pop
inc
rcrb
jb
inc
loop
lea
fstpt
or
clc
nop
fs
inc
in
mov
stos
cmp
or
jo
sub
dec
sbb
mov
dec
pop
cmp
popa
xchg
ss
xchg
ret
mov
push
inc
adc
pop
lock
sub
out
imul
push
mov
sbb
loop
cld
out
int3
shrl
outsb
ljmp
sub
pushw
mov
shll
cmpsl
sbb
xor
test
and
rcl
inc
out
ja
or
ret
in
popf
test
xchg
ja
cld
stos
xor
mov
nop
mov
rclb
shl
shl
incb
mov
sarl
lret
mulb
jnp
cmp
pop
pop
mov
pop
mov
mov
loopne
cltd
mov
mov
xor
mov
icebp
js
adc
xchg
es
and
ds
or
adc
aad
ljmp
xor
cld
adcl
je
into
arpl
push
lea
mov
sbb
jno
inc
inc
cmp
dec
dec
sub
dec
and
mov
adc
insb
cwtl
fisttps
pop
lret
ret
or
ds
daa
cmpsb
mov
jl
fs
movsb
imul
push
add
fs
push
cli
fwait
add
fnsetpm(287
in
push
adc
mov
mov
or
test
cmp
adc
ja
cli
or
fildl
add
cmp
nop
dec
dec
mov
cmp
sti
xchg
jmp
dec
fwait
sbb
xchg
das
mov
push
rorl
adc
aam
out
xchg
leave
dec
stc
cmp
mov
shl
pop
fxtract
sbb
mov
rcrl
cmp
jno
mov
and
aad
mov
hlt
jae
enter
repnz
daa
test
cmp
cld
loopne
mov
fwait
aad
in
fsubrs
incl
hlt
mov
leave
call
pop
popa
jns
or
mov
jg
xor
push
sbb
addl
mov
sbb
lret
ss
icebp
jle
pop
or
shr
cmp
sub
in
push
inc
test
and
imul
rorb
mov
fs
sub
gs
lret
mov
sbb
int
imul
iret
mov
out
adc
aad
push
jns
adc
inc
cli
jmp
cs
shll
push
cmp
push
cmpsl
std
jmp
mov
and
or
dec
jno
sub
cs
arpl
push
dec
mov
loopne
ret
jno
adc
adc
ss
cltd
insb
pop
pusha
sub
fwait
jle
jo
cmp
cs
adc
ja
loopne
bound
iret
jne
mov
mov
idivb
mov
or
cli
addr16
mov
adc
pop
cmp
mov
adc
mov
addb
repz
push
xor
jecxz
loopne
fisubl
inc
xchg
sub
js
mov
repz
and
pop
les
pop
mov
in
inc
jecxz
fidivrs
popf
adc
xchg
int3
mov
nop
pop
pop
sahf
xchg
pop
test
jbe
ja
adc
enter
scas
jae
xchg
inc
pushf
and
mov
out
xor
clc
and
cld
es
lea
mov
jnp
lret
orl
imul
filds
outsb
dec
cwtl
roll
inc
mov
stos
cmp
mov
fisttpll
xchg
aaa
fldenv
jle
or
adc
out
xor
and
cmp
sbb
or
cmp
xchg
mov
mov
imul
inc
cmp
mov
shlb
loope
sub
arpl
in
lret
and
mov
push
pop
rolb
adc
rcll
fistps
fildll
dec
mov
stc
sahf
lods
adc
das
outsl
rcrl
stc
jb
push
nop
imul
or
shl
loopne
cmp
out
ss
jl
and
inc
push
ljmp
lahf
sbb
pop
int3
xchg
cltd
push
push
cmp
aad
xor
cmp
dec
mov
mov
sbb
sub
lahf
xor
rorl
aad
mov
adc
popa
lods
imul
fld1
push
movsb
fsubl
jmp
lods
out
pop
popa
mov
js
inc
stc
xorl
scas
add
xor
jne
lret
stc
push
mov
lds
mov
repz
inc
jnp
arpl
inc
arpl
add
ficomps
rcrb
xchg
pop
in
in
fildll
xchg
inc
cltd
jno
adc
jnp
cltd
push
sbb
je
ss
mov
enter
add
push
push
imul
psrlq
rcrb
dec
addl
shl
and
cmovge
lods
jge
fadds
cli
and
ret
jo
sbbl
in
or
inc
out
mov
bound
lahf
sub
add
imul
sub
lret
xchg
push
or
dec
cmp
jle
mov
testb
push
mov
dec
jg
test
cmp
shl
inc
into
sahf
dec
sub
stc
aam
out
and
and
pop
or
push
daa
add
inc
push
push
insb
mov
jg
push
add
sub
imull
cli
push
lahf
pop
jns
cmovbe
jnp
ret
xchg
imul
or
mov
sub
jno
push
aas
mov
or
xor
pop
daa
pop
mov
sbb
imul
decl
scas
xor
jbe
inc
sub
mov
roll
pushf
repnz
cmc
push
daa
pop
inc
dec
out
xchg
pop
jnp
imul
movsb
js
inc
pop
loopne
mov
scas
sbb
jmp
mov
fists
jbe
aaa
jnp
mov
jns
ja
ret
es
test
xchg
xchg
cmp
lret
jae
mov
aas
mov
push
push
dec
xor
cmpsb
sahf
xchg
js
mov
xchg
cld
inc
movsb
lcall
cmpsb
inc
dec
or
sub
addr16
jle
sub
dec
mov
aaa
and
es
scas
cld
repnz
sub
outsb
das
mov
outsl
mov
push
sbb
mov
pop
dec
jmp
nop
sub
pop
inc
inc
add
aas
ret
ss
cs
loop
add
cmpsb
and
xchg
mov
jb
pop
xor
or
repz
mov
jnp
stos
xlat
push
call
sbb
lea
cmp
clc
or
repnz
jnp
out
fbld
int
pop
inc
shlb
aaa
xlat
mov
cwtl
push
hlt
sbb
hlt
repnz
data16
xor
cmpsl
flds
pop
jmp
pop
out
xor
mov
mov
aas
mov
aas
sahf
push
shll
outsb
adc
lret
inc
push
push
add
sbb
rcrb
sahf
out
mov
push
xchg
shrl
repnz
loop
