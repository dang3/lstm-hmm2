out
icebp
xorl
xor
cmp
mov
xchg
lock
notl
test
mov
jns
mov
jge
mov
xchg
dec
sub
or
push
mov
adc
rcr
jno
add
insl
fdivs
call
jmp
fs
sub
xchg
adc
inc
jb
scas
bound
loopne
jno
sti
cli
sub
pop
jp
insb
xchg
jo
cltd
mov
movsl
jne
jbe
push
hlt
and
jne
in
cmp
mov
push
scas
mov
stc
imul
scas
mov
push
sbb
push
dec
sbb
sub
or
fdivs
xchg
outsb
mov
out
cltd
ds
mov
xor
cltd
insb
cltd
inc
push
jg
pop
push
dec
dec
fwait
push
rorl
cmp
arpl
les
lea
mov
jb
ja
bound
mov
in
aad
lds
xchg
ret
xor
pop
scas
push
or
repnz
adc
testb
jmp
fisubs
xchg
inc
xchg
or
bnd
mov
jbe
lret
pop
add
ds
test
jno
aad
pop
and
cmp
test
jmp
int3
int
xor
icebp
stos
fsubs
sub
cmp
cs
arpl
cmp
jp
jmp
push
inc
inc
pop
pop
dec
lret
stc
xlat
bound
daa
push
cmp
mov
jae
mov
and
lock
fimuls
insb
jbe
jno
xor
out
pop
ds
dec
stos
sub
repnz
loope
imul
fidivs
repnz
cmp
mov
leave
jmp
push
repnz
out
outsl
pop
shll
add
push
xchg
sbb
popa
inc
icebp
dec
mov
xor
inc
and
popa
lahf
fbld
mov
jmp
std
add
nop
je
ds
xchg
mov
jnp
mov
add
pop
cmp
fcompl
jecxz
jae
add
jne
stos
mov
mov
into
jb
pusha
xor
notb
mov
mov
sbb
hlt
jb
jne
xorl
out
xchg
sarb
insb
popa
loope
cli
clc
fmuls
cmc
or
jmp
xor
pushl
mov
aas
xchg
cmp
aas
insb
mov
xor
push
jl
cld
pop
js
nop
fs
sub
xchg
fmull
in
negl
and
dec
aas
mov
pop
mov
call
out
inc
sbb
adc
mov
inc
adc
lds
xchg
icebp
push
cmp
fidivl
jl
adc
xor
popa
dec
sub
jecxz
inc
xor
mov
pop
fs
cwtl
mov
loopne
sub
call
adc
lock
movsb
ss
mov
dec
enter
jg
xor
fwait
popa
roll
stc
xchg
mov
xchg
std
mov
stc
fwait
mov
pop
out
jne
and
in
dec
mov
loop
fldt
aam
stos
cmp
scas
aaa
call
aaa
xchg
cmc
fmull
aam
movsb
jp
outsb
inc
sbb
js
and
push
sarl
mov
rcll
pop
dec
icebp
adc
mov
inc
ficoml
sub
jmp
xor
js
push
jb
xchg
mov
jb
fwait
andl
shll
jg
push
cmpsl
fisubs
push
push
adc
cltd
insl
and
inc
sbb
outsb
pop
fisubrs
mov
inc
and
dec
xchg
ret
cmp
out
xchg
adc
mov
push
mov
pop
aas
push
daa
jle
mov
cmc
inc
push
push
or
adc
scas
je
jo
jl
dec
loopne
lock
sub
mov
pop
pop
jns
inc
cmp
movsb
cs
sahf
test
mov
xor
cmc
jmp
addr16
xlat
or
fs
dec
stos
inc
nop
ret
daa
icebp
fcoms
xchg
pop
loop
mov
dec
pop
fldcw
js
fistpl
leave
je
fsts
xor
sub
mov
test
xor
rclb
sbb
xor
push
mov
in
push
ss
jge
jmp
leave
add
mov
adc
mov
call
cmpsb
push
mov
dec
cmp
lret
push
jo
mov
and
inc
cmp
cmp
test
xchg
jle
leave
jl
push
jp
push
leave
orb
inc
filds
pop
sub
mov
mov
xchg
mov
pand
mov
cmp
imul
ret
xchg
cmp
jmp
adc
stos
cmpl
xchg
inc
xor
data16
add
push
mov
popf
sbb
popa
jmp
sti
jecxz
mov
adc
repz
adc
inc
add
gs
xor
hlt
adc
add
adc
xchg
push
mov
sub
orb
std
mov
adc
ror
sbb
pop
add
push
adc
inc
jg
inc
fwait
and
mov
dec
lds
pusha
jmp
outsb
and
push
dec
out
sub
xor
pop
sub
das
bound
mov
test
insb
mov
xchg
dec
jns
in
sub
mov
cwtl
je
sbb
scas
dec
and
or
pop
cmp
sti
bound
into
ficoml
or
push
movsl
sbb
sub
xor
in
mov
into
ficoms
jl
sub
cmp
mov
nop
stos
outsb
aas
mov
push
in
cmp
aad
xchg
xlat
jns
cs
mov
jae
cli
jno
arpl
adc
add
and
sub
pop
sub
jecxz
out
shlb
push
push
sub
mov
mov
mov
pusha
rcrb
add
lret
add
leave
cmc
pop
fmul
fisubs
fldcw
xchg
rcll
mov
in
push
pop
cmpb
add
jo
mov
out
push
mov
lcall
dec
xchg
dec
sub
xor
orb
dec
sbb
in
rcrl
cmp
popa
and
cmp
in
out
ljmp
roll
jle
out
and
das
inc
out
mov
addb
xor
sub
push
add
ljmp
fistps
cmp
cmp
xchg
inc
jge
mov
push
mulb
les
hlt
int
pop
fidivl
aas
mov
adc
fisttps
aaa
jl
negl
lahf
jne
push
loope
push
and
test
sbb
ret
inc
fidivl
pop
xor
add
stos
xor
clc
mov
push
mov
lcall
cwtl
mov
cli
es
cmp
sbb
push
sub
shlb
ja
add
std
jbe
mov
dec
sub
pop
and
xor
aaa
dec
out
enter
pop
call
pop
out
test
cmp
mov
mov
adc
sub
jae
push
add
push
int3
pop
mov
imull
cmp
imul
cmp
jp
push
or
mov
push
pop
xchg
imul
adc
lds
jg
in
jno
adc
jno
mov
mov
int
cmp
sbb
xor
and
inc
pop
adc
push
lock
lcall
mov
pop
loopne
repz
xchg
sbb
movsb
xor
cmp
pop
cwtl
add
adc
aad
jge
mov
pop
pop
pop
fcoms
outsl
or
xchg
xlat
repnz
xor
lods
xor
icebp
repnz
es
mov
add
call
bound
mov
xchg
fistl
mov
push
inc
out
es
scas
mov
add
mov
stc
aaa
jns
ja
push
mov
ret
push
inc
add
lds
xchg
fcomps
jns
and
sbb
sbb
and
scas
fsubs
jl
stc
adc
stos
lret
pop
stc
or
popf
rcrb
dec
cmp
cmp
mov
mov
test
loop
lds
scas
and
sahf
imul
adc
cmp
or
aas
jb
bound
shrl
mov
ljmp
mov
and
mov
mov
ds
mov
adc
jmp
and
test
testl
subb
push
orb
call
cmp
sbb
movsb
pusha
popa
das
adc
insl
das
adc
dec
or
jl
iret
inc
adc
pop
rolb
lock
and
or
test
arpl
jo
push
ja
sub
jl
insb
sbb
jno
aam
push
mov
adc
jno
adc
push
aaa
jle
fcomps
out
and
xor
insl
insl
push
ljmp
test
mov
xchg
lret
push
iret
and
cli
int3
out
sub
add
xorl
lcall
scas
nop
cmpsl
mov
pop
jb
test
scas
pop
lcall
outsb
loopne
jne
mov
sub
dec
add
and
dec
mov
das
add
xchg
adc
inc
dec
pop
loope
dec
out
ret
xor
out
cltd
jo
cmp
call
ja
cmc
pop
add
outsl
cmp
pop
adc
notb
jl
jne
add
cld
notb
rol
jbe
sub
fidivrs
inc
fildll
mov
push
test
sbb
or
pop
cld
or
sub
clc
cmc
ret
fucom
push
xlat
pop
into
nop
mov
jne
lods
insl
cmp
sub
pop
int
out
xchg
scas
out
fwait
jb
roll
call
bnd
sbb
cmp
aas
mov
cmc
fsubrl
inc
sub
hlt
mov
je
cmp
imul
add
jmp
mov
add
jbe
sub
pop
jp
mov
adc
fsubp
jmp
dec
inc
mov
pop
sbb
adc
andb
cltd
rcll
sub
push
test
icebp
mov
arpl
std
outsb
jbe
dec
or
or
jge
push
xor
cmp
mov
mov
push
enter
inc
data16
leave
movsb
add
nop
mov
pop
xchg
sub
in
cltd
jg
sahf
sub
int
or
imul
repnz
mov
pop
jmp
jl
sub
pop
add
and
cmc
imul
mov
mov
loop
outsl
add
push
or
mov
mov
sbb
mov
xlat
test
sub
inc
in
popa
inc
jb
mov
push
sub
xor
and
and
int
pusha
je
or
adc
jbe
xor
mov
bound
mov
xchg
gs
cmp
jns
inc
ja
mov
lock
mov
sub
clc
adc
inc
dec
push
fstpl
and
test
movsl
mov
lds
mov
dec
imulb
les
and
or
push
push
jno
inc
lods
rcll
xor
in
jo
mov
notl
adc
mov
inc
stc
idivl
jmp
loope
xor
adc
jmp
test
pop
mov
daa
aaa
push
call
orb
cmp
pop
testb
aaa
andl
pop
ljmp
add
bsr
fwait
adc
aad
loop
add
mov
xchg
cmpsb
cld
xchg
ljmp
gs
and
xor
cmc
arpl
loope
push
mov
fnsave
enter
xor
mov
mov
inc
jle
mov
je
mov
adc
cmc
mov
adc
clc
in
mov
inc
cmp
les
ljmp
fdivrl
adc
mov
push
and
push
lods
push
out
or
cmp
cmc
subl
inc
mov
aam
pop
pushf
lods
jne
bound
outsl
js
mov
xorl
bound
ss
fwait
mov
jl
neg
fcoml
sub
neg
push
mov
add
and
test
xchg
mov
mov
xchg
pop
out
pop
jle
mov
pushl
push
lods
pusha
dec
lods
loopne
pushf
mov
xor
push
jo
out
or
push
xor
inc
andl
and
mov
jle
pop
ficompl
in
lock
and
mov
gs
mov
ss
inc
cmp
sub
mov
mov
daa
dec
mov
mov
arpl
lahf
fnstcw
test
in
vorps
into
test
pop
mov
test
inc
push
outsl
mov
inc
xor
sub
cmp
and
xchg
lret
inc
fistl
add
leave
pop
data16
rorb
outsb
adc
cwtl
sub
lret
mov
xor
cmpsb
jecxz
loop
movsl
sub
add
repz
lret
popa
or
and
sbb
std
adc
leave
xchg
lea
sub
jp
and
or
mov
cmpsb
je
arpl
sub
xor
sarl
cltd
shrb
jne
dec
and
mov
test
push
sahf
pushf
mov
pusha
aad
inc
sar
mov
shrb
xchg
push
rcl
les
stc
jp
jne
call
jns
mov
push
adcl
and
pusha
xchg
inc
or
mov
mov
jno
add
je
mov
scas
push
sub
push
xsavec
enter
insl
bound
js
fcmovu
sub
test
xorb
loope
scas
lret
fnstenv
sbb
in
push
ret
hlt
int3
scas
jl
out
stc
dec
stos
fsub
mov
pop
dec
and
mov
test
mov
jae
push
jno
jg
imul
or
cmp
cli
js
dec
jb
xchg
mov
bound
ss
and
ss
adcl
inc
call
xchg
cmp
pop
mov
iret
xchg
pop
cmpsb
ss
jmp
les
cs
inc
sbb
push
or
mov
inc
add
mov
push
scas
inc
hlt
negb
sarl
fsubs
push
rorb
in
testl
jg
dec
jno
les
add
mov
cs
xor
cld
jae
xchg
sub
xor
jp
mov
dec
jne
xchg
mov
mov
int3
cmp
jns
cmpb
sub
and
scas
dec
dec
pop
and
mov
test
cld
xor
pusha
push
mov
fidivrl
mov
adc
lret
mov
cmp
aad
jns
push
push
mov
lods
popf
or
jne
mov
and
jp
or
inc
sub
jne
jns
xchg
inc
jb
cmp
rorl
loope
loop,pt
stc
imul
or
cli
lret
outsl
in
addr16
xor
cmp
jge
pop
adc
fsubl
jbe
jb
mov
out
or
je
push
or
fdivl
out
fdivr
cmpsl
ds
nop
mov
or
pop
outsb
dec
cltd
repz
shlw
cwtl
adc
xor
in
sub
gs
push
loope
fisubs
fldl
pop
mov
add
dec
rcll
and
mov
mov
xor
cmp
iret
inc
pop
mov
pop
lds
iret
mov
jb
xchg
leave
mov
or
xor
mov
loopne
das
aam
jbe
add
aad
add
fisttpll
frstor
aad
inc
sbb
lcall
lcall
adc
or
clc
mov
cli
or
xor
jg
cmp
pop
mov
dec
xor
jb
out
lret
hlt
pop
testb
insl
fstpt
shl
dec
pushf
hlt
jb
mov
sbb
mov
ja
mov
lock
sub
fstl
insb
and
xor
lea
xor
pop
pop
insb
cmpsb
cmc
sub
cmp
add
sarl
mov
popa
cmp
adc
aas
sbb
pop
add
nop
andb
pop
ret
pop
popa
shll
je
push
mov
test
incl
cmp
mov
dec
imul
mov
enter
mov
xchg
mov
cld
xchg
in
xor
pusha
shll
loop
mov
push
rol
xchg
mov
add
xchg
and
jp
cli
pusha
sub
jne
sbb
std
bound
jecxz
pop
pop
rclb
insb
inc
inc
jne
mov
jp
cli
aad
sbb
out
cli
scas
sbbb
test
cli
out
pop
ret
shlb
xchg
gs
pop
push
and
mov
out
shll
fcomps
cmp
sub
mov
pop
and
or
push
mov
push
inc
daa
sub
aam
push
out
scas
mov
adc
mov
adc
and
mov
add
aas
sti
inc
push
xchg
jmp
inc
push
bnd
push
sub
and
js
shrb
mov
add
xor
push
sbb
mov
mov
jb
hlt
into
scas
cld
mov
mov
jo
cmpsb
addr16
icebp
inc
pop
inc
sbb
lret
jne
cmp
imul
mov
in
jge
xchg
and
jb
mov
imul
jno
call
adc
dec
stos
in
sahf
pop
into
inc
aas
movsl
cmp
aad
imul
mov
jno
push
ret
mov
xchg
xor
add
mov
cmpsb
out
adc
mov
xchg
lea
sarl
inc
inc
nop
mov
fimull
adc
mov
into
pop
cmp
push
mov
fstpl
push
insl
and
adc
imul
loope
sti
xor
or
aas
pop
out
inc
dec
pop
mov
push
cmp
orl
out
inc
clc
mov
jp
out
rorl
xor
and
fwait
aad
xchg
xor
push
sbb
mov
dec
jae
sub
aad
pop
sbb
jecxz
int3
and
and
fdivrs
sbb
ljmp
jnp
cld
sub
sub
sbb
ds
outsb
xor
push
clc
mov
mov
rolb
jae
sbb
ljmp
das
push
inc
inc
aad
xor
jg
or
cmp
cwtl
add
mov
mulb
mov
fistps
sub
or
mov
aad
in
jmp
lds
xor
sub
mov
mov
inc
das
mov
mull
push
loopne
imul
cmpsb
xor
push
pop
xor
inc
cs
lods
add
xchg
outsl
xchg
xor
dec
lea
jo
pop
mov
in
adc
push
movsl
xlat
or
mov
in
ljmp
je
cltd
push
fdivrs
dec
pop
cltd
mov
test
add
ss
imul
lret
movsb
ja
mov
stos
mov
lret
jge
xor
ds
sub
or
push
stos
jge
mov
cmp
sub
cli
mov
mov
xor
push
fmull
xchg
xchg
arpl
addr16
sbb
lret
insb
bound
clc
jno
ljmp
mov
out
test
rcll
dec
jecxz
sbb
dec
fmuls
in
hlt
fwait
and
xchg
mov
dec
jp
add
stos
mov
jo
cmc
xchg
ja
mov
nop
iret
xchg
popa
pop
jns
mov
sub
std
xchg
jmp
loope
push
mov
inc
jo
jmp
insb
cmp
sub
push
push
jne
cmp
mov
xchg
push
xor
push
lods
scas
icebp
subb
pop
xor
push
inc
pop
subl
sub
fsubl
lret
xlat
mov
inc
push
dec
mov
sub
sub
imul
jbe
mov
and
xor
loop
ss
jmp
push
jne
adc
stos
sub
mov
lds
and
lods
popa
dec
lahf
xor
dec
fisttps
add
xchg
push
pop
jo
push
mov
addr16
data16
xor
adc
nop
notl
xor
jl
test
aaa
bnd
js
sbb
sti
dec
lds
xchg
pop
mov
hlt
and
fwait
push
dec
nop
adc
dec
pop
mov
sub
push
ja
loop
ds
movsb
pusha
pop
std
xchg
jb
dec
mov
push
push
sbb
cmp
outsb
inc
fcoml
sbb
loopne
in
jo
sbb
jmp
xchg
or
arpl
adc
push
inc
nop
push
sub
insb
dec
test
sbb
xlat
sbb
mov
adc
mov
leave
js
lret
out
push
xchg
or
jmp
push
mov
mov
jae
rol
push
shrl
dec
pusha
shr
dec
adc
dec
adc
aad
xchg
cmp
dec
inc
fbld
jl
scas
hlt
repnz
jmp
jg
int
or
jmp
xor
push
xchg
out
adc
popa
out
out
push
cmpsl
pop
adc
ja
rcr
pop
add
mov
stc
jecxz
pop
adc
aam
je
pop
mov
xchg
xorb
pushf
or
jnp
sbbb
loopne
jae
cmp
push
fists
andl
mov
fiaddl
test
nop
mov
and
and
aas
loopne
repnz
imul
push
test
insb
adc
out
je
mov
mov
inc
arpl
popf
mov
cmp
jae
or
jmp
jo
in
insl
out
jb
fiadds
xchg
mov
enter
xchg
mov
orb
movsl
or
xor
jno
fsub
pop
fiaddl
sub
outsl
adc
stc
or
popa
lds
xorl
mov
inc
lods
and
lds
leave
leave
fbld
dec
xor
jge
in
pushf
loope
fadd
enter
adc
das
xchg
mov
dec
mov
xor
lcall
mov
push
enter
mov
mov
in
jmp
ja
lcall
mov
es
outsl
mov
mov
cmova
sub
ljmp
das
and
scas
jle
test
jno
pop
jp
push
lret
cmpsb
push
mov
mov
mov
sub
pop
add
push
ss
fstps
sub
rclb
mov
fisubrs
in
loop
aaa
shll
adc
xchg
or
stc
hlt
std
cmpsb
jmp
decl
or
add
dec
push
aaa
popf
mov
test
and
pop
dec
mov
xor
jmp
mov
popa
sub
pop
flds
add
add
test
and
movsl
add
cmp
inc
scas
lods
clc
add
and
inc
loope
daa
push
jl
divl
ja
sbb
outsl
or
and
sysret
lods
lret
pop
shl
out
mov
repz
inc
sbb
push
sub
fs
bound
movsb
add
loop
lds
rcl
rcrb
out
sub
gs
out
pop
call
push
jae
fstps
mov
mov
cmp
add
cmp
or
inc
shll
repz
dec
inc
cmp
cwtl
sbb
in
in
mov
ret
cli
push
xor
cmp
mov
jns
xor
push
into
ljmp
fcmovnb
jno
in
mov
pop
inc
sub
or
jp
fisubrl
push
sbb
pop
clc
inc
and
xor
mov
popf
lock
fmulp
mov
das
fwait
jmp
xor
ljmp
imull
stos
gs
data16
mov
in
je
sarb
cmc
mov
lret
sub
sti
xchg
testb
xchg
loopne
lahf
vmovntdq
add
push
push
push
daa
push
pop
int
push
jg
data16
push
movsl
push
insb
cmp
mov
imul
cmp
push
inc
mov
pop
mov
lcall
push
enter
mov
xor
fidivl
xor
les
inc
cmp
jg
lods
or
out
scas
dec
mov
pop
jge
mov
pop
inc
insb
cmp
pushf
pop
cmpsl
mov
fs
jl
mov
sub
mov
ss
jg
cmp
xor
xchg
mov
sub
mov
out
adc
movsl
lds
push
pop
cli
pop
and
mov
adc
jecxz
in
addr16
pop
movsl
dec
sti
cmpsl
fnstenv
cmpsl
test
mov
and
cmp
mov
outsl
or
aad
sbb
pushf
shr
lret
cmp
cmp
mov
fs
test
push
test
arpl
imull
jle
or
mov
cmp
inc
movsb
sbb
sbb
movsb
out
sub
jge
das
add
pop
cmp
cs
stos
repz
xor
lods
jl
idiv
lea
les
push
sub
bound
sbb
into
repz
sbb
ljmp
cmpb
inc
adc
jecxz
leave
pop
push
into
jno
or
cmpsl
cmpb
cltd
in
push
or
inc
sbb
jl
repnz
dec
into
popf
inc
sbb
push
ss
in
sub
pop
ljmp
sarb
mov
movb
mov
loope
pop
popa
hlt
shll
std
hlt
sub
lds
jne
sbb
in
xchg
sub
popa
adc
scas
flds
mov
cmp
cmp
aam
mov
xchg
jmp
mov
loop
mov
shlb
testb
cmp
sub
daa
sub
mov
sahf
gs
sub
xchg
jo
mov
ficoml
and
push
mov
jg
cmpsl
jb
or
cmp
xor
xchg
loop
sub
vcvtpd2dqx
pop
pop
lds
insb
jae
xchg
outsb
adc
push
cli
loopne
or
adc
pop
mov
repnz
fiaddl
or
cmp
sub
int
inc
lods
mov
push
out
and
cltd
dec
fnstenv
sbb
imul
mov
sbb
xchg
push
push
mov
or
shll
fdivrs
mov
push
mov
popf
adc
mov
mov
pop
push
pushf
data16
stos
lahf
xchg
rcl
jg
cs
cmp
stos
shll
adc
in
jge
inc
in
ljmp
sub
pop
add
xor
cmp
adc
jp,pt
cmpsl
and
aaa
jne
into
jg
mov
or
cmp
fwait
daa
stos
lret
jo
mov
data16
dec
stos
fimuls
fsubl
lea
sahf
pop
je
sahf
aaa
inc
xor
lods
aad
mov
xchg
xchg
sbb
xchg
adc
outsl
push
out
fidivs
mov
push
and
mov
sub
ret
fwait
adc
inc
mov
push
or
js
inc
add
xor
in
lret
jns
mov
aad
xor
sub
jnp
hlt
hlt
cmp
push
xor
mov
aad
dec
xchg
stc
pop
popa
idivb
push
jge
sbb
sbb
in
or
cmp
aaa
cmp
daa
mov
fisubrl
fidivl
mov
jmp
jo
ret
xchg
roll
les
int3
mov
mov
fisubrl
inc
lret
cltd
decb
adc
enter
sbb
leave
iret
add
dec
dec
mov
dec
movsl
xchg
cmpsb
and
int
jno
outsb
adc
and
and
es
fisubs
pop
lahf
mov
subb
mov
jbe
imul
or
inc
push
cmp
pop
inc
pop
and
sbb
push
push
inc
cmpsb
or
jo
lret
push
jnp
into
aaa
dec
testl
mov
xor
jo
inc
jg
pavgw
iret
rcll
jmp
int
mov
scas
mov
mov
xchg
jecxz
mov
in
cltd
inc
mov
sub
pop
mov
in
push
cwtl
sub
mov
rcrb
dec
cmp
cmp
mov
push
in
cmp
xor
imul
push
lret
sub
aad
or
icebp
dec
xchg
push
jbe
add
ret
sbb
and
out
push
jo
xchg
mov
outsl
inc
push
jl
inc
fldenv
cld
leave
cmp
leave
sub
xchg
mov
rclb
enter
xchg
fsubr
fiadds
pop
outsl
xor
cmc
lea
xchg
insl
mov
cltd
aas
jae
imul
mov
jb
out
jle
int
fwait
dec
fnstcw
push
push
cmp
mov
aam
jae
mov
xor
call
std
pop
je
inc
mov
sbb
fldl
and
negb
mov
arpl
mov
stc
ror
scas
xor
push
fwait
cmc
xor
sbb
daa
mov
cmpsb
in
loopne
sub
bound
fisttpll
jne
and
cmp
stc
mov
push
out
push
push
and
aam
out
cwtl
bound
mov
rclb
push
xor
in
rol
xor
push
stos
pop
push
sub
pushf
pop
lea
push
mov
outsb
mov
repnz
out
je
inc
jecxz
or
sbbl
or
subl
jp
repz
pop
icebp
add
mov
cmp
cmpsl
fnsave
push
xor
push
xor
jg,pt
shl
inc
xor
dec
cmp
push
add
arpl
rolb
je
stc
xchg
jnp
xchg
cmc
mov
xor
data16
adc
sbb
arpl
in
negl
sbb
and
mov
loope
loop
adc
lods
xchg
lret
mov
xor
fwait
inc
fsts
std
mov
scas
outsl
adc
xor
cmp
cmpxchg
jmp
data16
xchg
sub
repnz
xor
or
add
insl
rclb
mov
mov
out
push
jecxz
repnz
jo
adc
or
push
push
dec
jge
mov
push
pop
pop
out
jg
nop
xchg
jl
out
dec
dec
dec
les
mov
ja
cmpsb
or
xor
fidivrs
or
sbb
xchg
leave
andl
cmp
hlt
js
push
push
cmp
sbb
aad
add
std
icebp
in
adc
sbb
dec
xchg
out
cli
xchg
in
stos
sbb
popa
mov
xchg
enter
or
iret
in
pop
pop
imulb
data16
mov
imul
inc
adc
jg
repnz
dec
add
ficoml
mov
cmp
jle
sub
into
xor
push
mov
fmuls
adc
mov
lret
xchg
js
mov
rcrb
xchg
lea
dec
mov
pcmpeqw
xchg
adc
out
sub
shr
mov
mov
out
push
push
mov
push
leave
xchg
and
lds
mov
sbb
dec
daa
cld
ss
lret
lea
bound
addr16
js
repnz
adc
in
jecxz
les
jns
sub
sub
push
nop
sub
and
dec
sbb
movsl
aad
mov
cmp
test
inc
xor
or
xor
jno
test
dec
lods
out
and
mov
cmpsb
adc
cmp
push
test
pushl
out
clc
mulb
or
popf
int3
dec
pop
mov
and
dec
test
filds
sbb
iret
jmp
fistps
jo
mov
push
xlat
or
lret
xor
sti
movsb
xchg
imul
dec
push
or
sbb
dec
out
out
mov
shll
cmpsb
into
fidivrs
push
repnz
loope
mov
jg
xor
push
adcl
js
jge
mov
cmc
sub
sbb
test
enter
sbb
mov
jle
loop
imull
dec
pushf
add
cmp
or
push
les
adc
daa
fmull
sbb
mov
ja
xchg
push
cli
add
sarb
cltd
shlb
push
ret
sahf
pop
mov
jle
add
xchg
push
ret
push
mov
lcall
mov
push
add
or
data16
jo
sbb
cs
lahf
push
loopne
add
mov
xchg
jmp
jae
cmp
cmc
jae
inc
scas
loopne
data16
mov
mov
dec
enter
imul
repnz
std
mov
dec
jle
aas
mov
push
push
adc
iret
ficoml
and
fisubrs
add
push
xchg
xchg
data16
ds
lock
jnp
push
nop
xchg
jno
xchg
jle
andb
sahf
js
repz
pop
push
enter
das
jns
inc
add
adc
jbe
outsl
js
push
add
fnstenv
out
repz
lods
insl
cmp
lods
pop
adc
push
xchg
mov
fstpl
and
push
jecxz
and
iret
fisubrs
adc
jae
cmpsb
push
leave
lds
push
xor
or
mov
mov
jne
xor
out
mov
mov
lods
jmp
jmp
pop
cmp
ficompl
inc
sbb
aas
test
add
repz
xor
push
adcl
xchg
cmp
sub
pop
or
pop
cmp
es
aas
repz
outsl
xchg
adc
inc
mov
mov
dec
jmp
gs
xchg
iret
shlb
lods
test
adc
or
sub
popf
test
cmp
push
fs
pop
adc
dec
pop
cmpsb
imul
mov
cmpsl
adc
pop
and
or
sub
scas
dec
push
push
shrb
lods
xor
lods
push
and
sub
rorl
xchg
lea
mov
outsl
ds
jmp
movsb
push
cli
or
bnd
adc
es
xchg
fdivp
xchg
cmp
iret
sarl
dec
pop
xchg
insb
lret
inc
xchg
hlt
ja
cmp
daa
push
pushf
or
sub
jecxz
movsb
arpl
push
addr16
or
dec
int3
lods
arpl
cli
rclb
movsl
int
jne
in
pushl
outsl
jbe
push
test
jge
stos
std
popa
dec
inc
mov
mov
fldcw
aaa
fidivrs
cmpsl
and
dec
ljmp
pusha
popf
mov
ds
push
pop
xchg
push
enter
fstl
pop
ret
and
pop
cwtl
mov
in
fdivrl
jae
push
loopne
pop
or
pop
repnz
ja
dec
shlb
lret
out
insl
ss
sbb
xor
aad
add
outsl
mov
pop
out
lahf
ret
and
pushf
push
dec
add
ret
ljmp
xchg
inc
xor
stos
enter
test
sti
cmp
mov
adc
adc
aad
icebp
push
jne
fcomps
out
cmpsl
arpl
adc
daa
jno
lea
bound
repnz
dec
push
dec
add
cmpb
fimull
mov
adc
sbb
shll
jl
jae
addr16
sub
mov
fnstsw
or
nop
test
stos
stc
push
jl
cmp
sbb
lahf
es
aaa
gs
into
or
nop
push
stos
je
in
add
mov
iret
cmp
jg
cmp
or
insb
cmp
jae
hlt
xchg
jg
push
sub
fisubrs
jl
shrl
mov
fs
xorl
sbb
xor
add
push
cli
xchg
mov
sub
call
and
jg
push
cmp
bnd
mov
pop
cld
lea
bound
std
into
add
daa
icebp
sbb
jnp
cmp
jp
push
incb
cld
cmp
lahf
lock
rclb
out
xor
cmpl
fstpl
sbb
lret
and
cmp
pop
in
cli
ss
adc
pop
loop
call
inc
fiaddl
adc
pop
cmp
jl
xor
xchg
sahf
fists
xchg
hlt
out
aam
jge
jge
pop
cmp
mov
loope
cltd
sub
bound
scas
mov
xor
or
insb
aam
iret
dec
adc
outsl
xchg
sbb
push
push
cli
pushf
push
jns
ljmp
sbb
dec
std
test
jecxz
hlt
inc
data16
stos
pop
dec
imull
mov
or
sbb
push
mov
xor
jb
repnz
outsl
mov
lock
pop
cmpsb
xor
or
adc
popf
jno
lock
std
cmc
sbb
gs
sub
mov
out
push
out
outsb
xor
xor
inc
cltd
dec
xor
and
pop
pop
and
push
add
sub
jle
stos
mov
or
scas
cmp
popa
and
pop
pushf
pop
dec
xlat
xor
dec
mov
in
ret
inc
hlt
fidivrs
popf
push
push
jns
sarb
xchg
pop
in
dec
lea
xor
pop
leave
dec
adc
inc
push
mov
xor
jp
or
cmp
mov
es
out
ss
pop
inc
jg
std
bound
pop
mov
xor
inc
adc
lahf
xor
push
jl
sbb
fs
pushf
xor
mov
jmp
xchg
push
inc
jge
enter
cmc
mov
rorl
mov
les
xchg
subb
pop
filds
mov
mov
mov
addr16
test
mov
pop
fsubs
ja
mov
lds
push
sbb
xor
pop
mov
inc
ffree
adc
jmp
pop
xchg
lock
add
jmp
bound
sbb
lods
pusha
addr16
pusha
mov
jl
pop
pop
mov
fsubrs
sub
mov
movsl
imul
pop
nop
mov
push
repz
enter
inc
jo
xchg
cmp
ficoms
jle
int
aaa
xchg
int
and
sub
je
js
scas
mov
cmpsb
fimuls
xor
sbb
pusha
mov
pop
pop
push
mov
mov
popa
mov
rorb
in
fs
pop
push
pushf
cli
fnstsw
dec
adc
cmp
jb
ret
xchg
in
xchg
inc
loop
mov
inc
push
out
xor
test
jb
stc
xchg
or
jl
xor
dec
push
push
lcall
push
in
enter
jae
cli
les
loopne
bound
mov
xor
xor
int
iret
stos
lds
xlat
push
or
dec
lods
cmp
mov
push
arpl
outsb
mov
xchg
std
xchg
jl
push
xchg
pop
rcrl
es
inc
jge
sbb
cmc
pop
out
notl
jecxz
mov
fisttpll
sbb
int
xor
adc
arpl
mov
pusha
nop
pop
pop
test
fstl
sbb
pop
mov
push
xor
cmpsb
sub
cmpsl
cmp
pop
cmp
jge
or
cmp
jge
jmp
xchg
or
shrl
add
data16
dec
ds
mov
push
adc
inc
sbb
fwait
inc
xchg
imul
xchg
sbb
pop
aas
jne
jns
pop
mov
int
clc
sub
xor
popl
mov
gs
iret
and
pop
or
out
movl
pop
ja
insb
insl
loope
xchg
incl
push
popa
loop
push
leave
push
loope
sbb
inc
pop
jbe
lock
dec
inc
jp
loopne
insb
movsl
fstpl
push
loop
cmp
aaa
fildl
xchg
sbb
stos
push
mov
in
or
sbb
adc
fsubs
xchg
lret
sbb
cld
repz
ja
xchg
mov
fsubr
cmp
xorb
outsb
cmp
in
popa
pop
ljmp
sbb
mov
xor
dec
cmp
aad
in
in
push
pop
xor
or
dec
xor
adc
std
stos
test
mov
adc
in
sbb
xchg
push
fldcw
test
movsl
sbb
adc
popa
mov
jne
mov
outsl
test
push
lods
mov
push
xchg
sahf
aam
mov
repnz
in
in
mov
les
ss
test
mov
lahf
pop
jmp
mov
sub
xlat
lea
jp
mov
daa
inc
cmpsb
fimuls
loopne
push
out
jmp
mull
test
xchg
cltd
cli
aaa
jbe
subb
loop
inc
out
or
imul
ret
and
jmp
mov
push
cs
nop
jnp
mov
out
and
out
push
dec
ret
data16
sub
in
pop
mov
xchg
and
gs
mov
mov
pop
cmc
out
inc
cmpsl
xor
inc
and
push
inc
add
pop
imul
mov
mov
sub
notb
cmp
mov
arpl
cmpsl
xor
lret
rep
in
or
aam
jl
mov
cld
xlat
js
aam
arpl
push
jbe
decl
cmc
push
adc
adc
std
xchg
insb
test
ljmp
out
or
stos
jg
mov
ret
mov
cwtl
into
inc
nop
sbb
ss
cltd
mov
xor
imul
jne
push
in
mov
imul
sub
xor
repz
xchg
loopne
repnz
mov
out
insb
daa
xchg
lahf
fcoms
je
aad
push
shlb
push
inc
in
cmpsl
in
js
sti
loope
sbb
and
outsb
add
in
enter
pop
or
push
xor
adc
mov
push
adc
dec
xlat
lods
and
jno
dec
dec
jmp
popa
adc
dec
jmp
dec
mov
ret
sbb
loopne
out
imul
cli
movsl
pop
movsl
rorb
bound
jmp
fwait
testl
push
aaa
jle
mov
cmpsl
jne
icebp
adc
fadds
sub
sub
push
movnti
xchg
push
mov
movsl
pop
fcompl
push
push
jge
stc
jge
inc
jb
lods
orl
push
dec
fidivs
iret
clc
adc
pusha
clc
fucompp
mov
sbb
shlb
adcl
dec
jbe
arpl
daa
push
xor
jns
pop
xor
dec
ret
iret
sub
cmp
lds
push
xor
cmp
ljmp
cmp
cs
inc
add
and
nop
inc
pop
push
stos
cld
outsb
lea
cwtl
pop
jmp
lock
out
fsubs
stc
dec
and
and
adc
xor
mov
cltd
mov
or
clc
lret
test
sbb
mov
rorl
mov
jno
pop
xor
insb
push
sub
ficoms
into
jle
mov
ret
or
cmpsl
and
and
jne
movsb
adc
in
push
jmp
pop
push
gs
add
xchg
or
mov
outsb
out
add
push
ds
bndstx
pop
loopne
lret
nop
xor
daa
test
or
repz
mov
xor
icebp
repz
in
lret
dec
notl
adc
adc
jno
enter
popa
in
jbe
not
js
pop
inc
jb
sbb
jae
loop
aaa
fcoml
aas
inc
xchg
cmpsl
mov
fdiv
mov
dec
lds
dec
ja
xor
push
jl
ja
jno
testl
or
andl
dec
adc
mov
repz
jae
outsl
leave
sbb
popa
mov
pop
rorl
xchg
and
pop
in
repnz
lods
aam
stos
ds
sahf
in
add
or
add
loopne
or
push
test
mov
stc
adc
jle
mov
cli
mov
dec
adc
inc
call
cld
aas
cmp
cmc
bound
mov
subb
mov
push
lret
push
dec
scas
sbb
jne
jno
add
outsb
call
cmp
cmp
jmp
outsb
test
sbb
xchg
push
sqrtps
cmpsb
mov
adc
out
cs
dec
int
enter
mull
cltd
pop
repnz
daa
scas
add
or
inc
ret
dec
push
repnz
inc
push
es
or
fwait
pop
pop
mov
pop
pop
sub
sub
dec
mov
fisubs
ret
jb
jns
push
hlt
jle
xor
jno
xor
jbe
jb
aaa
xor
lds
ljmp
sbbl
arpl
shrb
inc
dec
cmp
gs
enter
movb
adc
add
addb
dec
xor
movups
movsl
es
ret
xor
je
sbb
or
int
dec
add
outsl
jb
ljmp
xchg
je
mov
popa
xor
push
mov
ficomps
lock
mov
sbb
lret
and
pop
and
aad
jecxz
sbb
pushf
sbb
xchg
loopne
outsl
mov
test
inc
mov
in
aaa
sahf
rcll
adcb
add
mov
ds
xchg
cs
pop
add
cmpsb
push
lods
jnp
sbb
push
movsb
inc
inc
mov
adc
mov
mov
mov
imul
dec
pusha
xchg
repz
xchg
test
in
pop
fwait
and
and
imul
jg
iret
xor
pop
mov
je
pop
jo
inc
and
fucom
scas
pop
jle
aaa
andb
aas
fsubs
shlb
aas
dec
cmp
mov
push
dec
jge
fistl
mov
pop
push
into
mov
sub
or
pop
pop
es
fsubrl
jmp
mov
sub
daa
dec
sbb
sahf
xlat
roll
loopne
mov
mov
out
dec
sbb
je
scas
lea
inc
mov
mov
mov
sarl
in
mov
push
adc
sub
addb
mov
popa
rcll
daa
xchg
push
xchg
andl
pop
jae
inc
mov
fbld
mov
xchg
divl
repnz
repz
add
pop
mov
mov
out
pop
loope
rcr
mov
and
cli
push
jg
jne
pop
cmp
pop
cmpsb
add
and
lea
loop
cltd
pop
das
push
mov
cmp
mov
lds
outsl
sar
pop
or
push
data16
push
sahf
or
cltd
pop
es
push
adc
and
dec
mov
mov
mov
lret
push
cmp
sbb
out
cld
sbb
daa
pop
out
test
jnp
cltd
and
js
fdivs
les
jecxz
sub
pop
cmp
sbb
cmp
pop
out
scas
add
aaa
das
icebp
or
jle
push
movsl
cwtl
gs
inc
mov
pop
and
rorb
jg
xchg
ljmp
cmp
push
in
inc
push
jns
pop
loop
add
cmp
scas
pop
push
adc
mov
and
fucomip
sbb
mov
cmc
lock
repnz
int
aaa
aam
fildll
movsl
pop
push
pop
mov
ss
adc
xchg
adc
lods
or
addr16
int
cmpsl
push
repnz
scas
adc
lcall
pop
frstor
xorb
ss
add
sub
xchg
pop
pop
push
cmp
repnz
push
add
xor
enter
dec
push
lahf
xchg
xchg
ret
mov
not
out
mov
movsb
inc
call
je
lds
in
jnp
mov
aas
cmp
pop
pushf
lret
lcall
lds
in
pop
pop
pop
loopne
jg
sahf
or
mov
in
dec
lret
mov
sahf
es
test
add
sbb
bound
arpl
and
add
jge
mov
xchg
loop
dec
imul
jle
clc
sub
in
lds
or
inc
ja
and
outsl
push
test
outsb
gs
inc
rorb
and
xchg
mov
gs
mov
insb
scas
daa
sbb
xor
aaa
cltd
iret
cmp
int
test
fistpl
cmpsb
aas
loope
sub
pop
pop
rcrl
scas
xchg
dec
pop
jge
adcb
rolb
std
cmp
hlt
and
jns
cmp
mov
mov
sahf
lds
lcall
fdivrl
mov
faddl
fs
sbb
and
rcrb
cmp
inc
xor
lcall
adc
cmpsl
mov
bnd
stos
test
rcrl
push
cmp
lahf
int
ja
mov
adc
xchg
vmaxss
ljmp
mov
xchg
rcrb
push
dec
loopne
dec
xor
adc
fimull
lds
cmc
ds
xchg
loope
push
loopne
loop
fistpl
lock
dec
loopne
mov
cmpsl
rcr
fildll
mov
inc
add
mov
test
popf
jb
push
jns
xchg
into
dec
pop
cmp
jo
cmp
aam
or
xchg
mov
scas
mov
and
mov
jg
les
ret
pusha
sub
sahf
jnp
gs
lahf
sbb
sbb
out
add
data16
flds
arpl
popa
pop
push
sub
ljmp
out
mov
pop
cmpsb
xchg
jno
mov
cmc
aas
gs
pop
adc
aas
fidivrs
jmp
push
insl
subl
out
int
stc
mov
mov
or
rorb
push
pop
jg
loopne
adc
andb
shll
dec
call
push
pop
fsubs
mov
pop
sub
movsb
push
cmp
mov
xchg
inc
adc
push
mov
in
pop
aas
loope
push
movsl
add
movsb
sub
jge
jnp
stos
es
jmp
ds
ds
outsb
ret
aaa
push
addl
pop
cld
test
int3
cltd
jle
push
in
xor
mov
int3
xor
mov
mov
sub
les
xchg
sub
jo
ss
flds
push
fsubrs
pop
inc
sahf
jno
or
mov
mov
jle
fbld
inc
addr16
mov
adc
pop
adc
xchg
mov
or
sbb
and
int
adc
cmp
cltd
or
stos
scas
and
xchg
and
xchg
mov
inc
stos
mov
in
insl
cld
xchg
ja
add
push
sub
data16
loope
stos
push
lds
lahf
je
cmc
fucom
shr
mov
aaa
sbb
adc
stos
mov
into
lea
bound
enter
bound
push
or
jne
cli
shl
push
and
cmp
pop
adc
pop
sbb
adc
std
pop
xor
ret
inc
pop
mov
cmp
ss
in
sar
out
fisubs
xchg
repz
popf
lret
idivl
nop
cs
call
gs
in
push
mov
inc
ljmp
or
pop
lods
lahf
dec
cmpsb
pop
addb
push
jns
and
out
inc
rorl
stc
mov
jge
imull
push
dec
mov
xor
es
mov
shll
lcall
int
inc
fbstp
sbb
add
mov
pop
mov
xchg
fld
scas
jb
lretw
sub
fstps
xchg
icebp
or
bound
insb
bound
xlat
or
fsubl
stc
fs
loop
mov
sub
aad
hlt
and
clc
enter
out
xor
fs
sub
andb
idivl
lea
pop
stc
cmp
cmp
push
scas
out
movsl
aad
add
sbb
cltd
pop
dec
push
out
jecxz
add
push
loopne
ja
jg
repnz
pop
dec
adc
jg
mov
scas
test
mov
pop
sbb
testl
pop
sub
stc
fcoml
cwtl
add
sub
jle
xor
cmp
gs
jmp
jo
test
push
or
mov
leave
mov
fildl
fdivrl
lods
in
and
bound
and
mov
dec
add
pop
inc
sti
addl
or
push
bound
movsl
clc
add
jge
pop
shl
outsl
cs
aaa
repz
and
nop
subl
pop
cmp
jo
jge
xchg
cli
pop
scas
adc
int
mov
fnclex
lret
out
out
sbb
mov
inc
jbe
push
mov
mov
negl
dec
inc
sub
movsb
pop
mov
cwtl
cwtl
dec
outsb
add
idivl
jae
sub
mov
lds
adc
pop
dec
adc
or
aaa
pop
out
cli
inc
loopne
jmp
cmp
in
lahf
loope
cmp
inc
or
lcall
mov
jbe
lds
iret
in
rcrb
mov
and
cmp
mov
pop
mov
xorl
nop
lds
test
mov
and
lret
lds
rorl
sarb
or
fnstcw
int3
mov
js
dec
or
testb
jmp
or
cli
mov
push
std
aam
outsb
add
inc
jg
inc
movsb
fwait
push
jae
and
push
sti
push
mov
ret
sub
push
adc
insb
cld
popf
loope
add
xchg
adc
int3
cmp
mov
cli
jmp
outsb
testl
in
shll
repz
jp
add
cmp
sbb
hlt
es
daa
jl
jno
adc
dec
xchg
add
loope
or
ja
leave
fisubs
jno
mov
call
inc
push
push
dec
jns
sub
ja
pop
sub
xor
mov
xchg
pop
and
push
pop
push
xchg
and
leave
adc
push
sahf
les
sbb
mov
inc
call
cli
cmp
mov
jmp
out
cmp
stos
into
mov
adc
sbb
mov
jne
pop
push
inc
sbb
roll
adc
imul
dec
mov
ss
sub
push
outsl
sarl
test
mov
dec
push
lret
cwtl
negb
dec
pop
pop
movswl
aaa
lcall
xor
xor
push
or
xchg
pusha
test
cmp
out
mov
imul
adc
pop
jno
sub
test
inc
or
inc
sbb
and
mov
fcoms
adc
popa
out
lret
sub
jbe
movsb
aad
inc
lret
in
rorb
aaa
dec
leave
cli
dec
dec
in
mov
inc
add
and
lcall
lret
lock
cmp
lcall
push
inc
jmp
nop
cmpsb
and
rdmsr
cwtl
sbb
push
idivl
iret
cmpsb
int3
inc
bound
jno
frstor
loope
jae
repnz
cwtl
movsl
in
push
lret
rcl
aaa
add
test
add
cmp
psubb
xchg
cmp
inc
push
mov
lock
das
hlt
ficoml
jno
jns
and
mov
mov
cmp
in
pop
fidivs
push
lcall
adc
popa
sbb
mov
inc
push
sti
mov
pusha
scas
add
jg
mov
jl
and
flds
adc
jge
fcompl
xor
scas
inc
outsb
jl
fs
add
mov
jb
mov
and
stos
std
out
sbb
outsb
xchg
mov
outsl
ftst
test
imul
pusha
sub
inc
int3
repnz
cmpsl
dec
imul
inc
das
pop
andb
lock
imul
cwtl
pop
sbb
pop
scas
enter
xchg
call
decb
push
push
cmp
rcll
and
cmp
repz
xor
mov
xor
push
xadd
xchg
enter
inc
insl
jp
xchg
sbb
inc
stos
sbbl
outsb
push
loope
push
mov
scas
pusha
mov
es
inc
and
jbe
jbe
adc
mov
movsb
stos
in
das
lock
test
or
lds
sbb
mov
mov
add
addb
jg
pop
insb
cmp
push
sbb
in
iret
sti
mov
scas
and
enter
addl
inc
pop
add
clc
xchg
mov
loop
or
je
and
push
xchg
iret
andb
dec
pop
xor
in
push
in
mov
pop
arpl
jne
lcall
add
inc
and
pop
dec
ljmp
cmp
xchg
sbb
daa
out
aam
daa
mov
nop
ds
pop
shl
cwtl
sbb
aam
push
add
testb
xor
fwait
jle
dec
pushl
cmp
mov
popa
cmpsl
imul
hlt
lcall
loop
push
sbb
sbb
mov
jg
xchg
push
fdivp
mov
iret
in
es
sarb
and
and
push
inc
sbb
mov
inc
rcrl
dec
iret
sbb
jb
cmp
nop
pusha
in
xchg
fildll
mov
xchg
pop
icebp
imulb
dec
push
pop
cmpsb
sub
inc
pop
gs
xor
add
sbb
aas
js
iret
and
outsl
leave
dec
and
push
in
aaa
mov
das
mov
inc
aam
ss
mov
andl
mov
aas
mov
jp
jns
fnstenv
fisubrs
xchg
pop
cmc
cwtl
or
mov
and
pop
push
cmp
fidivrs
sti
mov
or
lock
push
ret
icebp
ret
aas
or
or
lret
jmp
outsb
adc
movq
xor
das
adc
mov
rcrb
add
stos
mov
jns
inc
pop
inc
inc
xchg
ljmp
lret
or
in
sbb
ljmp
and
fstl
cli
xchg
stos
xor
popf
push
mov
add
mov
cmp
ljmp
and
stos
xor
dec
push
nop
repnz
sbb
punpckhdq
jne
mov
pop
adc
test
stos
dec
in
popa
xchg
pop
mov
inc
loope
jbe
jno
adc
mov
jbe
dec
jns
dec
push
inc
mov
imul
stos
ja
adc
pusha
sahf
test
jg
lcall
mov
sbb
xchg
sbb
std
adc
aam
xchg
mov
and
push
in
xchg
dec
mov
cmp
cmpsb
jge
cmpsl
scas
mov
mov
jbe
jge
xchg
mov
xlat
movsl
pop
ja
pushf
jb
push
cmp
jns
push
jno
cmp
bound
adc
test
bound
scas
les
mov
add
mov
fcmove
and
cmc
loope
adc
jge
pop
ds
stos
mov
mov
ds
icebp
mov
loop
and
push
das
pushf
add
icebp
dec
lret
bound
adc
cmp
repnz
pop
movsl
dec
cmpsl
sahf
cmpsl
cwtl
pop
adc
jp
in
xlat
mov
sbbb
ljmp
jbe
ds
lds
and
inc
adc
inc
mull
lds
in
std
push
ljmp
out
ja
adcl
loope
and
lret
dec
imulb
in
or
pop
orb
push
jge
movsb
outsb
movsl
jbe
cli
push
mov
cltd
test
mov
aas
sub
mov
adc
bound
mov
xchg
ss
mov
std
fmull
push
pusha
popf
pop
pop
stos
leave
mov
cmp
repnz
lret
das
adc
sub
repz
sub
add
jge
dec
push
inc
mov
mov
ffreep
cs
cmc
out
fistpl
lea
mov
call
jns
push
push
cmc
cmp
cltd
push
fdivrl
std
cmpsb
add
push
ja
or
dec
and
out
pop
loope
add
icebp
adc
cld
out
mov
push
jns
jns
pop
mov
sub
xchg
hlt
mov
cmp
fisttps
pop
pop
mov
push
adc
mov
cmp
push
lods
jle
sbb
xchg
sbb
jbe
gs
outsb
mov
push
pop
cs
cld
lods
jbe
sub
shlb
push
pop
adc
loope
add
jno
je
cmp
cmpb
mov
stc
inc
sub
cwtl
pop
push
popa
icebp
xor
pop
mov
fmull
sub
popa
push
mov
dec
xchg
loopne
sub
icebp
imul
add
push
sub
pop
aas
sub
aas
mov
add
adc
mov
push
cmp
adc
sbb
and
sub
in
test
jb
push
jae
mov
lret
cs
push
fcmove
ret
fcoml
rcr
sahf
adc
stc
add
or
push
xchg
jbe
daa
repnz
addr16
push
and
mov
fstl
in
movsl
cmp
shufps
or
cmp
xor
sub
fmuls
dec
jge
and
outsl
es
mov
movsl
mov
cwtl
jno
popf
sbb
andl
fisubrl
xchg
arpl
xor
lcall
in
sub
xchg
cli
nop
pop
int3
or
ds
sbbl
lret
jl
xchg
pop
mov
aam
lret
into
pop
add
pop
popa
pop
lock
jno
sbb
in
xchg
aas
lods
das
mov
pusha
sub
popa
mov
movsb
cmp
push
push
sub
stos
xchg
jbe
icebp
nop
pop
stc
or
pop
in
mov
fdivl
jns
mov
mov
pop
rorb
xchg
gs
pop
repnz
jne
repnz
lcall
roll
xchg
cmp
lcall
lcall
cmp
or
scas
jbe
mov
scas
dec
xchg
dec
test
mov
sbb
mov
xchg
stc
ljmp
shll
ret
jmp
or
cmp
jne
mov
inc
dec
decb
sbb
cmp
or
or
adc
lret
xor
fdivs
loop
push
call
stos
leave
dec
shl
cmp
cs
inc
mov
mov
mov
mov
adc
jp
inc
add
mov
mov
shll
aaa
aas
cmpsb
iret
pop
dec
mov
pop
stos
push
mov
jge
notl
jge
push
adc
xchg
or
pop
in
nop
addb
push
aam
push
push
adc
push
fwait
inc
enter
call
inc
repnz
xchg
ds
shlb
jecxz
test
fisubl
adc
es
test
jbe
push
in
rol
push
lcall
das
mov
stc
cltd
sbb
mov
cmpsl
jno
pop
outsb
sub
lods
sbb
hlt
cs
mov
adc
loope
mov
inc
sbb
sbb
insb
inc
add
cli
popa
dec
mov
dec
addr16
outsl
repz
sbb
gs
out
sub
pop
xchg
lods
int
in
and
imul
and
repz
mov
mov
daa
aas
xchg
jmp
inc
mov
pop
cltd
pop
aas
popa
mull
jns
mov
popf
cmpsb
jle
add
pusha
lea
negl
jbe
out
ds
cmp
mov
mov
gs
out
frstor
cltd
imul
idivl
insl
xor
lock
xor
xchg
mov
cmp
imul
push
mov
pop
loopne
mov
icebp
xor
sbb
cmpsl
mull
mov
into
mov
mov
xor
push
bound
pushf
dec
cmp
in
loope
xor
sub
testb
in
test
dec
divl
mov
aas
dec
hlt
call
enter
mov
mov
cmp
lds
scas
mov
es
add
jmp
lcall
fimuls
sbb
ds
pop
orl
jb
pop
pop
out
dec
repnz
rcrb
lcall
mov
add
cltd
std
fcmove
pusha
fcompl
add
pop
inc
jmp
push
jnp
out
test
adc
sbb
dec
jae
fs
xor
cmp
xchg
xor
jno
jl
stos
je
inc
pop
and
mov
sti
pop
int3
aaa
lcall
cld
push
call
sahf
js
mov
inc
repz
int
or
js
insb
jae
lret
fdivrp
dec
ja
jg
gs
insb
in
lret
sub
dec
in
xchg
pop
add
dec
add
ja
leave
dec
das
subb
xor
xorl
jo
mov
adc
and
bound
popa
scas
sbb
pop
and
push
sbb
cmp
mov
dec
dec
cltd
jmp
jnp
sti
xor
cld
mov
xor
inc
inc
mov
cmp
xor
cwtd
and
addb
xlat
es
pop
lods
ja
pop
dec
jge
out
xor
shrb
jle
js
sbb
mov
mov
stc
js
jae
in
orb
ret
cmp
in
xor
adc
xor
sbb
rcrl
loop
mov
test
xchg
loopne
outsb
fs
xor
sahf
jns
loopne
cmp
pop
jbe
xchg
sub
adc
adc
daa
shr
sbb
out
cmp
es
inc
fisttps
lods
cmp
mov
cmpb
pop
mov
add
insb
adc
orl
int
call
mov
movsb
pop
ret
call
inc
push
rolb
out
orb
imul
loopne
stos
ss
jge
cmp
push
and
adc
or
mov
int
fisubrs
push
push
jnp
mov
jns,pt
clc
push
inc
add
ret
test
jmp
bnd
jo
dec
negb
push
pop
mov
fldl
addr16
xor
fs
loope
dec
outsb
sub
sbb
jbe
loopne
adc
jle
and
sahf
je
stc
cmp
mov
int
fdivrs
cmp
push
sbb
jg
inc
popl
cmp
xchg
dec
rcll
push
inc
pop
movsl
lret
add
adc
stc
inc
or
sbb
mov
jl
mov
fwait
adc
insl
ds
pop
xor
cmp
mov
popa
fistpl
mulb
leave
mov
dec
ja
scas
pop
push
leave
xchg
mov
fstpl
sbb
in
icebp
fiadds
loopne
in
dec
cwtl
jge
loope
cmpsb
outsb
andl
stc
add
shll
sbb
decb
pusha
mov
mov
popf
repnz
jp
cmp
es
negl
pop
mov
popf
and
mov
mov
insl
adc
pop
scas
jge
inc
push
adc
xchg
bnd
nop
loope
mov
arpl
fistl
mov
dec
in
popa
add
fwait
test
lods
mov
fimuls
xor
subl
mov
pop
dec
data16
popf
xor
stos
loopne
jns
cwtl
fsubr
std
insb
add
outsl
jns
leave
enter
push
icebp
sahf
jge
pop
add
sbb
and
bound
push
cmpsb
dec
mov
pop
hlt
push
test
outsl
popa
jb
add
push
mov
and
inc
js
insl
mul
insb
jmp
push
int3
imul
hlt
sarb
mov
cmp
add
sub
pop
pop
push
aas
inc
cmpsb
xchg
lcall
ret
stos
std
cmp
xchg
pop
cmc
cmp
jge
xor
popf
sbb
sub
or
imul
mov
jg
sub
push
repz
mov
insl
jmp
nop
mov
fs
xor
outsb
mov
gs
jb
popf
imulb
pop
test
or
adc
test
leave
mov
iret
pop
out
loopne
push
outsb
xor
jnp
or
sti
mov
in
lock
cmpb
decl
push
cmp
and
rorl
lret
mov
sub
sbb
xor
popf
xor
test
mov
addl
pop
push
mov
push
push
not
xorl
mov
enter
test
movsl
aas
adc
xor
sbb
push
sub
repz
push
cmp
or
les
into
jg
lahf
test
push
mov
pop
xor
push
adc
pop
pop
lods
call
pop
adc
jge
xor
add
scas
sub
mov
stc
adc
sbb
out
sub
mov
jle
ljmp
icebp
cmp
lret
jmp
xor
add
leave
notb
inc
sbb
sbb
nop
dec
add
push
shrl
xor
pop
shlb
mov
imul
mov
adc
mov
mov
mov
xchg
sbb
mov
cmp
test
push
push
stos
pop
out
dec
sub
xchg
jne
pushf
push
fdivs
scas
test
push
and
loop
fcmovnbe
gs
pushf
lahf
mov
dec
in
cli
or
and
mov
pop
fwait
mov
mov
add
push
ret
fsubs
shll
sub
lret
xchg
xchg
test
imul
jo
insb
jl
xchg
jae
ja
ds
sub
pop
sub
push
mov
inc
outsl
or
clc
std
in
aam
jmp
lods
inc
pop
aaa
out
in
outsl
cli
adc
pusha
mov
rcrb
imul
stc
push
dec
cmp
sbb
leave
or
rcll
inc
inc
jg
ficompl
rcrb
movsb
lds
jne
outsb
adc
daa
shrb
aaa
out
xor
mov
jmp
sub
xor
mov
into
cmp
xchg
lds
fists
pop
out
mov
jg
les
mov
cmp
loopne
imul
jl
ficoml
mov
sahf
push
insb
or
les
mov
dec
pusha
push
xor
insb
mov
inc
movsb
lret
daa
push
adc
mov
sbb
pmulhuw
cmp
xchg
sbb
mov
jne
imul
popl
add
testl
or
mov
daa
dec
test
push
fsub
out
dec
xchg
adc
decl
pop
rcrb
xchg
dec
pop
in
sub
cwtl
xlat
je
xor
xchg
jae
adc
and
sub
mov
mov
mov
pop
orb
jbe
in
popf
add
in
push
stc
shlb
adc
jp
sbbb
cli
fs
out
movsl
jne
xchg
orb
aas
gs
dec
sbb
sub
int
aaa
push
mov
and
inc
cld
sahf
repnz
dec
loop
out
fucom
int3
mov
or
lea
popf
call
jbe
sub
ss
xor
outsb
cmpsl
fdivrp
sub
xchg
cmc
adc
cmp
inc
scas
sub
sbb
sub
push
adc
cltd
pop
aas
enter
iret
loop
add
mov
push
or
push
jp
sub
xchg
cmc
jne
in
out
jb
dec
fiadds
cmp
sahf
push
adc
gs
mov
add
rolb
adc
fmuls
mov
jbe
in
test
andl
cmpsb
insl
pushf
mov
int
push
leave
lds
cmp
cmp
adc
sbb
bound
jnp
fsubrs
insb
lds
xchg
leave
aam
xchg
cwtl
cmp
mov
mov
sbb
or
sbb
lret
inc
movsl
repz
push
mov
fildll
clc
int
stos
sbb
jl
shl
inc
fdivrl
mov
pop
inc
mov
push
popa
in
push
jp
int
daa
sbb
inc
push
fs
popa
pop
mov
xor
and
jb
pop
cltd
or
jb
adc
out
jge
dec
jbe
jmp
fistpll
mov
scas
pop
sub
add
jle
bound
je
adc
mov
js
insl
xchg
scas
repnz
xor
lock
in
insl
jle
bound
xor
sbb
scas
cmp
dec
push
inc
or
push
xchg
adc
add
xchg
sahf
movswl
sbb
dec
pusha
adc
movsl
jmp
outsl
imul
fisttpl
call
sbb
xor
lahf
call
ret
sbb
test
mov
sbb
jae
add
cmp
popa
into
call
xchg
pop
jecxz
jno
faddl
adc
loopne
jb
pop
iret
lret
adc
rcrl
int
cmp
sub
insl
call
test
dec
inc
sbb
aad
dec
cli
std
jne
mov
in
pop
cmp
daa
adc
popl
lret
inc
aas
into
sbb
loopne
jne
xor
pushf
cmp
imul
jns
test
push
sub
negb
lds
pop
push
fistpll
cmp
call
dec
in
test
mov
dec
and
cmp
and
xor
jge
sbb
pop
jae
lahf
xor
push
pop
and
mov
xchg
mov
icebp
add
cmp
and
lds
sbb
push
push
mov
pop
fiaddl
scas
aad
cmp
dec
call
bound
mov
mov
or
push
mov
and
scas
movsl
sub
pop
mov
inc
and
repnz
xchg
les
push
fsubl
xorl
adc
xor
push
mov
dec
push
mov
dec
dec
add
sti
sub
xchg
push
popa
jp
add
ja
and
ret
and
gs
push
and
mov
out
addr16
jle
xchg
mov
gs
adc
pop
rclb
pop
inc
add
inc
in
cli
xor
lret
jge
std
mov
mov
push
and
nop
mov
lds
test
mov
push
mov
adc
wrmsr
movsl
in
je
dec
mov
xchg
lcall
call
xor
stos
sub
in
sti
jge
addl
jge
xor
mov
aad
push
cmpsl
iret
inc
xchg
pop
sub
dec
cmp
jmp
movsb
daa
lods
int3
pop
pop
lret
jmp
mov
mov
hlt
pusha
cwtl
xchg
daa
sbb
jo
into
out
jne
lret
mov
or
or
jle
xchg
scas
mov
and
mov
add
lock
jp
lcall
inc
fbstp
lret
mov
xchg
movsb
fmulp
in
cmpsl
fdivrs
shlb
sub
lea
out
loopne
adc
sbb
je
outsb
inc
xor
xchg
pop
lock
imul
mov
push
pop
daa
mov
jg
cmpsl
ret
icebp
pop
xor
sub
push
in
sub
icebp
icebp
in
mov
fldcw
scas
in
add
mov
test
das
pop
lahf
ds
fwait
cld
daa
test
test
test
mov
cmp
mov
cmp
cmp
cltd
lods
test
cmpsb
inc
test
jns
adc
sahf
push
adc
rorl
mov
js
mov
fnsave
cli
add
or
sti
xor
xor
fisubrs
loopne
shr
cmpb
or
add
pop
mov
jmp
dec
iret
xchg
pusha
adc
mov
mov
pop
or
into
dec
push
ja
push
add
bound
pop
cmpsl
push
jg
ljmp
addr16
push
mov
inc
mov
push
fcmovne
push
cmp
and
lcall
xor
jg
dec
insb
pop
push
mov
sub
jg
mov
pop
outsl
insl
dec
adc
popa
lock
loopne
or
adc
pop
ja
scas
mov
pop
icebp
shll
push
dec
aas
arpl
stos
mov
xor
adc
nop
mov
jbe
mov
xor
fsubl
outsb
mov
int3
mov
mov
lods
test
shrl
mov
lahf
dec
out
std
xchg
inc
sub
mov
in
stos
ret
cwtl
jecxz
loop
sbb
mov
outsl
insl
mov
fiadds
mov
cmp
mov
insl
data16
dec
jmp
popa
fimull
dec
mov
push
xchg
mov
loop
fwait
pop
mov
jmp
sbb
adc
adc
bound
vmread
or
dec
and
jnp
stos
xor
mov
jae
push
adc
push
xor
fmuls
fdiv
mov
mov
cmp
xor
repz
loope
ljmp
sahf
pop
icebp
shr
xchg
dec
std
sub
out
das
lcall
arpl
pop
mov
test
icebp
shl
sbb
nop
nop
mov
pop
or
arpl
das
in
jno
dec
fwait
icebp
xor
push
pop
mov
cmp
int3
xlat
inc
add
mov
xchg
jb
popa
pop
and
push
push
insb
adc
aaa
lods
das
add
test
repnz
mov
inc
mov
insl
cmp
lcall
lods
icebp
mov
mov
add
mov
add
sub
push
sbb
jmp
push
scas
cmpl
jb
loop
sub
cmp
cmp
test
addr16
pop
mov
sarb
mov
dec
enter
imul
lahf
rcll
sub
and
repz
enter
sub
out
adc
and
es
jmp
jae
jmp
mov
dec
jmp
add
cmp
cmp
test
notl
lcall
mov
mov
pop
adc
mov
addb
pop
mov
or
inc
bound
sahf
insl
xor
sub
inc
lods
pop
call
push
outsl
nop
das
push
jae
cmc
lock
sub
xchg
sub
aam
mov
xchg
xchg
fisttps
in
cmpsb
enter
loop
mov
mov
jl
add
and
call
adc
push
fldt
out
aas
cmp
dec
cmpsl
in
or
dec
pop
inc
movb
fnstcw
repz
mov
jns
mov
pop
in
mov
call
bound
jp
clc
divl
cmc
inc
push
arpl
jne
data16
sbbl
lret
shll
dec
pop
sbb
xor
and
cli
adc
lods
inc
clc
jmp
adc
xchg
stos
incb
dec
imul
push
pop
ds
jno
and
inc
or
sar
fsubs
lods
and
pop
mov
dec
jl
cmp
push
pop
add
adc
lds
lret
add
cmp
ret
test
adc
sti
push
imull
imul
or
mov
cmpsb
je
fcoml
push
and
shll
jp
mov
cmp
repnz
int3
loope
mov
cmp
pop
cmp
stc
push
xchg
xor
dec
inc
loopne
lret
leave
out
pop
pop
stos
dec
push
mov
mov
clc
addr16
lcall
adc
scas
pop
mov
jne
jns,pt
enter
lret
pop
aaa
inc
xchg
inc
and
mov
xchg
sbb
push
pop
inc
lods
sarl
testl
sub
pushf
adc
shll
aas
xchg
cmp
adc
pop
popf
jb
daa
daa
cmp
jb
leave
or
sbb
and
adcl
mov
sbb
lea
data16
adcb
xchg
jbe
ljmp
sub
clc
fwait
rcrb
pop
cs
pop
fdivrs
sbb
iret
sti
outsb
gs
pop
dec
ret
popa
enter
sti
xor
loopne
filds
aam
jo
push
jo
jnp
jmp
lret
xchg
pop
addr16
jnp
int3
mov
sbb
fs
mov
mov
gs
inc
xchg
inc
jno
loope
mov
cs
popa
push
sbb
push
icebp
or
mov
inc
xor
jbe
pop
lcall
sbb
push
jle
mov
mov
mov
lret
in
enter
int3
and
aam
xchg
pop
push
in
xchg
add
push
jmp
inc
push
out
xchg
fwait
and
jo
pop
in
lahf
cmp
pop
adcb
xor
pop
adc
stc
addr16
jae
push
insb
push
outsl
out
mov
adcl
jbe
xchg
mov
lea
test
bound
sub
inc
fiadds
push
pop
cltd
mov
out
sbb
test
mov
pop
push
inc
test
aam
pop
xor
testl
push
xchg
cmpsb
test
imul
sbb
aaa
sub
jne
repnz
push
sub
stos
clc
push
cwtl
dec
mov
and
ja
jmp
int3
orb
sub
xchg
adc
xchg
sub
cmpsb
scas
test
es
adc
and
dec
repnz
movzbl
enter
aaa
addr16
stos
mov
jbe
jb
push
hlt
pop
cmpsb
ret
mov
cltd
jecxz
sub
push
inc
inc
lock
lret
mov
adc
mov
adc
inc
popf
sub
aam
adc
add
ret
cmpsb
neg
mov
mov
xor
jle
jbe
push
cmp
cld
jl
adc
imul
es
lds
xchg
jp
icebp
pop
lahf
push
and
loopne
mov
xlat
dec
in
jnp
std
pop
cmp
mulb
in
xor
movsb
xchg
mov
nop
out
xchg
push
das
cmpb
lock
adc
jo
mov
push
in
xor
mov
imul
push
sbb
xchg
jne
jb
repz
mov
into
and
cmp
pop
xor
clc
mov
flds
pop
mov
sti
cmp
mov
push
cmpb
jl
xchg
xchg
or
xchg
mov
daa
sub
mov
cmp
cwtl
and
popa
lock
sbb
cmpsb
mov
into
xor
cli
mov
mov
and
je
inc
lret
pop
jle
mov
in
inc
add
icebp
and
sub
lock
jl
je
jmp
lods
jmp
mov
xor
push
add
pop
push
stos
mov
jne
add
fwait
pop
jo
mov
cs
inc
loope
sahf
pop
test
bt
fistpl
aaa
data16
fsubl
outsb
sub
jns
adc
repz
add
out
jo
cli
sbb
cwtl
in
xor
leave
xchg
test
xchg
popa
aas
inc
repz
jae
aam
cmp
sahf
dec
sub
movsl
mov
or
cmp
sbb
jg
mov
idivl
push
psubusb
adc
popf
mov
sahf
icebp
mov
sbb
pop
fbld
cwtl
sub
adc
adc
shrb
dec
push
push
pop
in
ret
dec
xchg
mov
sub
cwtl
fsubrs
sub
in
jge
push
or
fidivrs
pop
pop
loopne
notl
cs
sbb
aaa
mov
xchg
inc
cmpsl
xor
mov
int3
cmp
pop
jo
mov
ret
inc
dec
and
xor
dec
pop
mov
jl
subl
pop
dec
add
aam
lock
stos
adc
mov
pop
sti
fldl
jge
cmp
xorb
in
repz
lods
push
xor
xchg
xor
and
dec
push
cmp
cmpsl
xor
lret
in
test
dec
mov
and
dec
bound
pop
ret
test
dec
jp
dec
loope
movsb
cmc
adc
mov
movsb
add
cltd
repz
stos
jno
or
incb
pop
icebp
pusha
je
adc
jl
loop
sbb
leave
xchg
iret
and
testl
ja
dec
dec
cmp
repnz
repz
mov
testl
sub
push
adc
pmulhw
jmp
jle
adc
mov
sub
adc
cmpsb
push
aaa
adcb
imul
imul
aaa
icebp
jmp
push
xor
fidivrl
sbb
cltd
mov
ss
flds
and
outsl
stc
adc
mov
ss
ds
jbe
dec
dec
int3
nop
flds
dec
mov
repz
testl
std
aaa
fwait
shll
daa
mov
sbb
xchg
fwait
andb
xchg
int
icebp
subb
aam
insl
test
rcl
xor
xor
sub
mov
sub
add
mov
lods
stc
imul
insb
push
mov
xchg
divb
call
xor
stc
and
test
aaa
leave
in
in
xor
daa
sbb
shl
nop
jg
cwtl
pop
popf
movsb
andb
inc
addb
mov
notl
test
mov
mov
xor
insb
mov
je
ss
mov
movsl
addl
jns
shrb
jne
in
mov
xchg
jno
xchg
cmp
lret
push
inc
cmp
cmp
pop
dec
scas
loope
add
negb
sub
inc
sahf
fwait
cmc
into
es
xchg
dec
push
iret
stc
dec
pop
push
pop
movsl
jno
loope
incl
lods
data16
pop
adc
mov
add
mov
dec
aam
pop
mov
cltd
fsubl
ret
movsb
ss
push
sub
fildll
mov
popa
xor
mov
dec
sub
mov
xorl
mov
mov
and
mov
mov
test
int
or
popf
movq
add
cmp
jmp
xchg
scas
ss
popa
andb
fiaddl
sbb
popa
imul
movsb
push
jo
xchg
scas
les
mov
imul
in
gs
bound
cmpsl
pop
sti
pop
lds
push
xchg
push
adc
xchg
xorb
enter
mov
lds
mov
adc
cmpl
jg
mov
jb
cmp
inc
jno
rcrl
loopne
out
xchg
ds
daa
mov
mov
outsb
popa
ja
aaa
mov
std
fbld
or
sar
jmp
rorl
loop
ds
ret
popa
pop
popa
dec
das
addr16
jbe
pop
js
leave
mov
daa
aas
pop
add
jne
js
mov
and
imul
jmp
cmpsb
mov
inc
push
mulb
pop
push
outsb
sub
add
and
imul
popf
cmpsl
sbb
je
sub
pop
jge
jecxz
inc
sbb
test
fimull
push
sbb
jecxz
add
xor
ficompl
outsl
jae
pop
mov
jns
cmp
jne
clc
jg
mov
mov
cmpsb
push
int
test
in
add
addr16
mov
add
fdivs
jecxz
sub
xlat
pop
fcompl
add
adc
lods
push
pop
ror
imul
xor
xchg
inc
lcall
push
pop
jo
inc
bound
out
loopne
xchg
fs
stos
inc
pop
xchg
cmp
push
sub
cmp
out
popa
push
push
call
cmp
mov
ljmp
push
cs
sbb
mov
or
jns
cmp
xchg
std
or
imul
jbe
mov
sub
stc
pop
xor
outsl
adc
sub
jmp
inc
repnz
add
and
cmp
mov
inc
push
jbe
cmp
lds
in
push
inc
add
fcoms
xor
add
xchg
ds
scas
cmpsl
push
jnp
stos
or
mov
jae
jge
cmp
popf
outsb
push
and
test
dec
cmp
push
mov
sbb
jne
mov
movsl
cwtl
in
daa
jno
jle
pop
sbb
inc
gs
or
adc
sahf
int
inc
pushf
push
sub
mov
popa
cmp
adc
in
cmp
inc
iret
jno
out
sarl
mov
inc
out
mov
adc
push
xlat
jb
ds
icebp
mov
xor
cmp
mov
sub
das
pop
out
inc
push
iret
loope
xchg
mov
and
out
mov
in
push
in
push
into
mov
jbe
dec
ljmp
dec
mov
sub
je
adc
sbbb
add
inc
push
shrb
insb
daa
add
inc
sbb
add
daa
xchg
jb
adc
fdivrl
and
rcrb
inc
js
mov
cltd
ss
dec
pop
or
pop
xchg
aad
jge
jmp
cmp
mov
jp
xor
jbe
dec
jmp
mov
mov
test
cmc
cmp
push
icebp
mov
dec
sub
jmp
cs
loop
lock
cmp
outsl
dec
and
cli
adc
cmp
push
sbb
lods
and
mov
mov
inc
jge
nop
jge
sbb
mov
push
fwait
movl
sub
repz
adc
and
jae
cmp
sub
sub
ja
inc
mov
jae
pop
sahf
push
mov
sub
xor
inc
je
mov
repnz
test
cmp
mov
adc
sub
mov
bound
dec
push
dec
sti
jmp
in
and
mov
outsb
xchg
jl
sub
and
add
mov
inc
das
cli
or
jbe
sti
icebp
dec
xor
sub
xchg
inc
bnd
jl
xchg
cwtl
add
cmp
mov
inc
jl
xlat
ffree
cmpsl
test
loop
mov
fs
or
aaa
xchg
dec
lock
movsl
icebp
lcall
sbb
cwtl
xchg
movsb
jp
sub
inc
sbb
sub
movsl
cmpsb
les
jo
dec
cwtl
pop
sub
jb
pushf
and
pop
cmp
insl
scas
movsl
mov
data16
sub
jb
pop
out
mov
aam
lock
lcall
jmp
lock
aas
and
test
cmp
jbe
das
or
cltd
loope
das
call
dec
hlt
sub
pop
shl
mov
sahf
popa
sub
jae
inc
push
dec
and
fs
mov
sbb
cmp
lds
in
shr
adc
ss
push
or
jle
out
std
add
fstps
ds
dec
into
jp
sbb
jo
push
pop
sub
or
bnd
push
add
jae
mov
push
pop
jmp
subl
fsubrs
jo
mov
fs
enter
jecxz
cmp
mov
mov
push
cmc
rorl
mov
test
lret
clc
les
mov
xor
sahf
test
in
addl
cwtl
scas
fisubl
bound
adc
sub
xor
inc
cmpl
jo
popa
ret
lods
repz
or
hlt
popf
sbb
loope
mov
in
inc
adc
ds
fwait
adc
in
ficoms
jle
cwtl
adc
movsb
xor
aas
adc
sbb
das
mov
fcomi
dec
and
jge
jmp
xor
xchg
loopne
nop
mov
call
stos
sub
dec
and
fwait
call
incl
fnstenv
jae
and
int
pop
outsb
call
inc
mov
inc
clc
cltd
pusha
in
cmp
call
aas
cmovle
inc
mov
mov
mov
test
mov
sub
mov
jb
cmp
cmpb
sub
gs
imul
pop
cli
adc
mov
mov
hlt
mov
push
sti
loop
jmp
add
jecxz
mov
jle,pn
das
add
xchg
lret
jge
mov
test
pop
inc
jge
cltd
jno
inc
or
addl
inc
lock
inc
mov
fidivs
add
notl
jmp
cwtd
mov
test
jb
enter
push
rcr
mov
or
xchg
dec
pop
push
gs
jg
cld
lock
lods
pop
dec
cmp
jno
popa
mov
push
sti
ficompl
clc
sub
xchg
push
push
add
iret
and
sub
cmp
daa
pushl
sbb
or
dec
xchg
fdivp
fldenv
lds
cs
add
sub
jno
test
cmp
push
add
lea
dec
gs
mov
and
pop
lret
sub
adc
add
mov
inc
in
pop
add
subl
add
fcomps
and
add
cltd
cmp
pop
inc
jle
cmc
add
arpl
leave
jge
aas
cmp
add
cmp
mov
adc
lret
popa
jmp
rcr
push
cmpsb
mov
mov
jae
arpl
or
xchg
dec
add
out
scas
stos
in
dec
clc
movsb
mov
orl
repnz
icebp
movsl
pop
or
cmp
and
cltd
inc
dec
ret
cs
outsl
inc
int
and
ja
test
cmc
gs
sub
hlt
cmp
sbb
into
and
fcompl
into
pop
push
movsb
movsl
sub
cmpb
inc
ds
and
jbe
or
mov
outsl
loope
imul
adc
insl
lock
xlat
inc
xlat
sbb
pop
loope
cmp
and
xchg
xchg
jg
jno
jp
in
mov
inc
imulb
cmc
add
rcll
cmp
and
or
inc
push
loope
and
jne
cmp
arpl
jb
mov
xor
push
mov
inc
pop
sbb
cmc
ja
jmp
pushf
test
sub
push
mov
jmp
jb
pop
subl
push
int
movsl
lret
and
out
add
out
rcrl
xlat
jp
addr16
loope
adc
inc
bound
in
shl
add
pushf
dec
mov
xchg
mov
adc
xor
loop
cmp
test
bnd
shrl
sub
mov
xchg
addb
and
xchg
jle
pop
jnp
cli
int
divb
dec
mov
push
mov
jae
jb
insl
loop
xchg
lcall
or
scas
shll
lods
fnstsw
xchg
nop
fstl
push
idivl
jmp
lock
call
fs
sbb
cmpsl
jne
scas
out
pushf
xchg
pusha
mov
sbb
mov
dec
pop
xlat
and
pop
pop
inc
mov
xor
lock
jl
or
ftst
cmp
sub
pop
outsl
mov
scas
pop
jns
int3
dec
imul
loope
mov
and
inc
icebp
inc
mov
jne
dec
jl
pop
jmp
dec
pop
insb
adc
jge
push
xor
outsl
sub
push
mov
jge
cmp
sub
mov
fcomps
add
jecxz
xchg
push
or
adc
arpl
insl
jne
pop
mov
data16
jbe
enter
repnz
ja
sbb
pop
push
fstl
jns,pt
aad
fldenv
mov
aaa
jae
in
call
or
cmp
dec
cmp
aas
into
jp
jb
mov
leave
loope
sahf
pop
clc
xor
outsb
out
sbb
xchg
mov
jg
aaa
out
or
loop
and
fdivl
mov
and
ja
jne
fidivs
mov
imul
test
sbb
adc
lods
mov
jg
jae
add
bound
push
sbb
fisubrs
and
repnz
push
mov
xorb
es
xchg
out
xor
mov
cmp
xor
test
inc
insb
jg
aad
xor
mov
sub
pop
sbb
fidivrs
insl
test
jbe
xchg
sbb
dec
ja
xchg
stos
scas
and
repz
repnz
jmp
ret
fcoml
cwtl
xchg
add
fst
sbb
add
dec
pop
add
or
pop
ss
pop
cmc
call
mov
orw
xor
je
adc
xor
jecxz
outsl
fadds
lods
cmpb
lds
rcll
cwtl
inc
pop
mov
jl
test
xchg
xor
popa
fdivl
jmp
inc
ss
xor
dec
out
pop
pop
mov
mov
pop
cmp
push
and
mov
mov
push
mov
mov
jns
cmp
adc
xor
push
hlt
neg
punpcklwd
jb
pushf
push
mov
outsb
aaa
jno
inc
xorb
jnp
test
pop
out
test
outsb
xchg
jle
addl
adc
push
or
xor
push
shlb
fnstenv
pushf
pop
popa
and
aas
and
fsts
and
push
xchg
adc
roll
pop
pop
insl
xor
or
jg
hlt
or
cld
mov
pop
pop
push
ret
repz
pushf
jns,pt
mov
andl
test
cmp
mov
in
sub
ret
and
sub
xchg
lds
ljmp
push
mov
movsb
mov
shrb
es
shrl
xchg
lds
into
repz
inc
dec
out
lea
rolb
lods
xchg
ret
cmpsl
push
push
cmp
mov
sub
hlt
xchg
hlt
pop
fwait
or
mov
and
fcoml
enter
jecxz
sub
out
mov
ret
cmp
movsl
and
call
sbb
in
mov
add
inc
adc
cmp
xorb
aas
cmpsb
push
xchg
cli
push
push
jns
push
mov
int
jne
out
int
dec
jmp
mov
pop
popf
into
sub
stos
in
stos
inc
subb
xchg
negl
cli
xchg
mov
daa
mov
insb
lret
dec
pusha
jmp
jg
push
mov
stc
mov
loop
fmulp
testl
mov
jmp
pop
jmp
int3
cmpsl
cld
xchg
dec
push
je
mov
cmc
jb
mov
rsqrtps
xchg
mov
ret
dec
das
jns
add
cmp
gs
fcompl
cwtl
ficomps
aas
xlat
in
mov
pushfw
jl
mov
insl
js
sbb
xchg
mov
or
bound
enter
ret
mov
sbb
jmp
or
das
xor
shll
nop
jno
inc
in
es
insb
inc
mov
mov
aaa
sub
outsl
xor
insl
mov
cli
pop
jbe
push
pop
into
or
mov
inc
cltd
popa
cmp
daa
dec
inc
adc
add
or
lret
xor
aad
mov
rcl
cmpsl
xor
pop
inc
daa
jmp
jecxz
dec
jge
out
sbb
imul
cmp
insb
add
fmulp
cmp
out
cmpb
inc
outsb
jno
test
xchg
mov
xchg
fidivl
jno
int
inc
add
sbb
inc
dec
iret
mov
fwait
xchg
jle
stc
and
nop
jne
mov
loope
test
mov
nop
mul
push
xchg
fistl
mov
xchg
xor
das
setae
xor
iret
popa
fs
mov
fisttpl
push
adc
sub
out
mulb
pop
loope
jecxz
aaa
push
mov
pop
cli
dec
stc
dec
aaa
pop
in
stc
out
fs
mov
lods
jg
cmp
testb
add
push
adc
mov
and
data16
push
into
mov
fisubs
pop
jb
iret
cmp
mov
test
push
pop
in
dec
mov
andl
dec
dec
test
jmp
out
divl
cmp
dec
pop
ss
mov
push
mov
and
xchg
jb
add
inc
stc
outsb
adc
mov
iret
cld
cs
sbb
ljmp
pop
pushf
movsl
sub
insb
sub
adc
sub
leave
cmp
lret
mov
cmpsb
or
fwait
adc
jnp
fsub
clc
dec
es
shll
in
inc
movsb
dec
and
jp
out
or
inc
into
rcrb
stc
outsb
data16
movsb
movsl
addb
fmuls
sub
push
xor
outsl
lock
jno
pop
outsl
jbe
mov
cmp
daa
mov
push
lcall
scas
xor
stc
les
pop
xor
test
cmp
pop
push
push
stos
mov
xchg
mov
pop
lea
xchg
and
jo
xchg
and
cmp
mov
push
sub
jmp
stc
pop
test
popf
sbbl
push
mov
xchg
jle
lcall
loop
push
push
sbb
dec
xchg
lret
add
mulb
and
jbe
in
testl
push
inc
scas
inc
cwtl
inc
outsb
pop
and
jl
cmp
xchg
xchg
shll
mov
cmp
mov
ljmp
cmp
sbb
fimuls
ds
je
lods
imulb
loop
and
test
pop
and
xor
shl
not
dec
nop
push
notb
neg
sub
fcomps
imul
sbb
out
mov
cmp
xor
mov
cs
or
push
sub
cmp
sbb
dec
nop
fsubrs
dec
dec
and
in
in
arpl
mov
mov
mov
imul
sub
xchg
push
inc
jle
inc
jae
sub
push
mov
mov
mov
dec
mov
jns
jnp
cmp
mov
sub
mov
imul
pop
arpl
inc
insb
cmp
or
popf
sub
popf
daa
push
dec
inc
dec
aaa
clc
adc
push
sbb
div
adc
dec
dec
lahf
sub
mov
cmpsl
sbb
dec
mov
fucomi
iret
shll
xchg
popf
and
adc
mov
dec
cmp
mov
mov
xor
mov
nop
das
mov
sti
ja
push
cmpl
dec
pop
out
add
iret
dec
mov
popa
imul
pop
xchg
aaa
push
push
pop
push
outsb
push
mov
gs
jmp
mov
aas
jo
loope
dec
icebp
inc
xor
inc
inc
subb
add
cmp
inc
sbb
mov
int3
dec
pop
jns
cmpsb
xchg
jne
jl
jl
ss
and
pop
xchg
movsl
push
xor
and
cmpsb
pop
int3
loopne
add
inc
mov
sub
lock
add
cmpsb
fisubrs
stc
cmp
lret
cwtl
lods
ds
sarl
nop
sbb
jmp
cli
ds
enter
jno
inc
jecxz
dec
in
fs
push
push
int
cmp
pop
in
loope
arpl
divb
push
xorb
les
jo
ret
add
dec
sahf
push
mov
out
jge
dec
dec
adc
pop
sub
sahf
icebp
outsb
pop
jge
out
jo
stos
xchg
aas
sbb
jl
and
push
mov
push
leave
leave
cmp
fsubrp
iret
push
pop
aam
std
icebp
adc
sub
mov
and
adc
test
in
inc
dec
aam
jno
pop
enter
sbb
in
ret
loop
push
ror
mov
or
or
std
inc
test
fwait
test
pop
sti
popf
adc
mov
rorb
add
fnsave
inc
icebp
jmp
nop
jb
xchg
adc
fwait
dec
cmp
sub
sbb
nop
mov
inc
mov
mov
inc
das
or
inc
loope
pusha
loopne
lret
cmpsb
addr16
icebp
push
call
jge
inc
add
idivb
insb
out
xor
adc
sbb
loopne
into
cmp
lds
push
xchg
shl
jne
xor
xor
push
pop
jae
dec
and
add
sbb
inc
push
cltd
xor
or
xchg
lcall
sbb
xchg
call
add
es
into
cmp
out
in
lahf
and
test
cltd
push
jle
mov
push
cmp
jo
lds
sub
inc
lds
jg
dec
cmp
pop
int3
leave
mov
cmp
sub
mov
clts
iret
inc
dec
sub
andl
mov
add
call
scas
pusha
adc
icebp
daa
in
push
les
ja
jne
aas
jb
adc
or
iret
xchg
imul
fwait
jo
stc
ret
insb
iret
rolb
data16
shll
xor
ds
cmp
sbb
stos
xchg
inc
mov
push
ja
jb
roll
jmp
popa
mov
outsb
push
add
pusha
push
xchg
sti
stc
test
adc
push
jb
dec
in
push
data16
pop
outsb
and
fbstp
xor
sub
std
lret
enter
pop
int
dec
cmp
arpl
cmp
cmp
stc
dec
mov
cltd
sbb
enter
test
xchg
adc
in
test
xor
movsb
clc
push
pusha
and
xor
call
popf
adc
lahf
mov
aam
in
and
loope
into
in
pop
push
adc
sti
js
inc
inc
push
push
pop
ds
or
mov
xchg
imul
mov
dec
ja
sub
jecxz
add
lods
aad
mov
jae
daa
jo
dec
pop
mov
mov
data16
test
out
inc
adc
sbb
adc
in
push
mov
inc
sbb
xchg
or
dec
mov
or
sbb
pop
subb
repz
loop
test
fwait
lds
fists
aas
sub
sbb
imul
xchg
jg
add
push
jb
dec
dec
xchg
inc
std
bound
loop
sub
out
lea
pop
dec
xlat
sub
add
xor
lret
rcll
scas
lcall
adc
ret
aad
aam
cmc
sarb
lock
mov
les
sbb
iret
sbb
sbb
daa
xor
sbb
leave
ss
fldenv
testl
xor
out
mov
mov
testl
dec
in
scas
push
pop
sub
pop
xchg
fldl
mov
mov
add
in
dec
mov
jle
sub
dec
fnstenv
inc
lcall
icebp
adc
inc
notl
dec
in
fidivl
rolb
push
scas
leave
mov
pop
rcrb
cmp
daa
sbb
out
je
mov
addr16
imul
cmp
jle
xor
mov
jg
insl
mull
xchg
arpl
fistl
inc
jns
cmp
out
lahf
and
in
insb
dec
std
sub
xor
fstpl
ror
mov
flds
in
pusha
jnp
mov
xchg
adc
cmp
es
movsl
or
pop
gs
mov
cmp
cld
cmpl
mov
call
mov
inc
js
xchg
sbb
cwtl
lds
repz
jo
or
ret
dec
sub
push
mov
mov
inc
push
lods
inc
pushf
clc
xlat
dec
add
stos
imul
or
sub
pop
dec
jmp
add
or
xorb
aaa
xchg
sbb
dec
out
adcl
gs
loopne
mov
pushf
dec
or
mov
movsl
or
dec
into
out
push
mov
ret
lods
out
and
cmp
jmp
aaa
add
loope
add
inc
xchg
mov
cmp
scas
ficompl
test
addb
mov
dec
loop
cld
aad
frstor
mov
adc
outsb
nop
daa
jns
nop
ss
test
jne
jmp
mov
adc
cwtl
andb
adc
fs
xchg
inc
and
and
pop
push
and
dec
fwait
adc
in
loope
movsb
subl
push
and
cmp
lahf
jo
sbb
jns
add
lock
xchg
adc
mov
dec
dec
mov
pop
int
mov
adc
mov
adc
jnp
out
insl
push
jae
cmp
adc
pop
xor
push
sbb
cmp
jbe
cmp
int3
jbe
insb
js
mov
push
push
inc
out
aad
push
inc
cltd
lcall
int3
test
cltd
push
sub
imul
sbb
and
or
stos
shll
dec
in
hlt
mov
add
lock
jl
out
adc
cmpsl
in
mov
std
dec
sub
mov
sbbl
sub
notb
jbe
or
cmpsb
or
jmp
hlt
jno
jno
add
repnz
jno
aas
sbb
and
cs
inc
jg
sbb
aaa
fnstcw
mov
sar
lcall
inc
sub
jne
xchg
repnz
out
push
in
and
popa
inc
popa
cmp
roll
loop
into
mov
cltd
mov
sub
test
inc
bound
test
xchg
pop
pop
scas
call
out
or
adc
adc
xlat
sarb
vpsubw
outsb
stos
lahf
pop
add
nop
pop
sub
xlat
and
cmp
inc
popa
out
sbb
fs
sub
cltd
lock
and
dec
rolb
cmp
data16
movsb
cld
ret
std
lock
pop
adc
aas
outsl
dec
mov
sbb
iret
mov
sti
leave
sbb
mov
or
aaa
loopne
stc
adc
pushf
mov
outsl
xor
and
mov
mov
int
adc
in
jecxz
mov
xor
ds
push
aas
test
mov
xchg
adc
mov
aad
inc
dec
mov
ret
add
sbb
xlat
cltd
cmp
inc
pop
push
cltd
pop
fcomps
je
and
nop
stc
leave
sbb
xchg
and
mov
gs
repnz
sub
dec
cld
sub
iret
sub
pop
and
cmpsb
movsl
cmp
xchg
mov
jae
movsl
pushf
jmp
mov
or
fnstcw
cs
and
push
cmp
sub
jns
lret
rorl
sbb
aaa
inc
in
test
cltd
pop
xor
mov
dec
jecxz
daa
push
cmp
push
fdivs
fstpl
inc
xchg
xor
xchg
cmpb
push
xchg
lea
pushf
ljmp
or
inc
add
add
and
cmp
cmp
cmpsb
xorl
sub
mov
ds
imul
jne
in
xchg
imul
adc
inc
pop
loop
lret
push
mov
frstor
rcrl
xchg
int3
jge
jp
inc
insb
pop
andl
mov
jle
inc
shll
pop
pusha
sbbl
pop
lret
in
adc
mov
popf
mov
lret
xchg
add
rorb
cld
ljmp
mov
dec
jbe
inc
pop
fprem1
cmp
inc
adc
cltd
xchg
xchg
paddq
aad
push
pop
es
js
cs
cmpsl
and
imul
jmp
mov
jne
mov
adc
mulb
sarb
mov
xchg
sbb
sub
adc
mov
xchg
cmp
mov
std
loope
or
mov
jno
fidivs
popa
dec
jae
mov
ljmp
and
push
fwait
sbb
push
dec
lret
adc
std
outsl
aam
jne
xor
sarb
and
adc
pop
sbb
test
sub
pop
ja
sbb
add
mov
test
ja
lock
lods
arpl
movsl
addb
call
dec
inc
out
adc
jns
mov
imul
lods
push
jb
jae
repnz
test
jle
mov
clc
jne
shr
mov
movsb
xchg
mov
cmp
bnd
xlat
cs
dec
stos
ret
nop
call
in
push
inc
dec
adc
mov
push
cmp
cli
in
xor
daa
lods
lea
loop
js
daa
inc
and
sub
movsl
in
lahf
jno
pop
popf
addb
rcll
cli
add
and
xchg
fadds
xchg
shlb
mov
pop
aad
ds
cmp
dec
jle
push
mov
and
dec
fistpll
xchg
jle
mov
xchg
sbb
daa
pushf
outsb
jge
les
sub
dec
ret
cmp
mov
test
outsl
xchg
scas
std
jae
std
xor
rcll
or
inc
ret
ret
ret
jecxz
mov
xor
jbe
into
mov
inc
jb
es
mov
jg
scas
pop
adc
test
mov
icebp
add
pop
iret
jg
xchg
jp
mov
sub
pop
sahf
mov
pop
xchg
adc
js
popf
lods
ret
mov
cmovbe
bound
dec
repz
daa
pop
ret
dec
push
jl
sbb
and
fnstenv
clc
das
and
jmp
xor
outsl
sbb
or
roll
mov
sub
jbe
sub
adc
lods
lods
jb
jmp
adc
pop
fimull
jns
adc
push
xchg
xor
xor
xlat
pop
jmp
outsb
ja
cmp
push
outsl
fbstp
imul
cli
jmp
mov
push
xchg
data16
adc
fwait
mov
fsubl
sub
mov
pop
cmp
push
sub
cmp
sahf
lea
xorb
or
stos
je
inc
mov
scas
pop
xchg
das
and
in
fiadds
or
leave
jle
iret
in
out
es
sbbb
xchg
movsl
cmc
nop
xchg
outsb
xchg
fdivs
push
adc
xor
repnz
push
stos
movsb
push
push
rcl
xchg
and
repnz
xorb
push
popf
mov
push
lods
cld
mov
adc
sti
js
and
mov
jne
push
inc
adc
dec
mov
fstpl
mov
rcl
adc
mov
cmp
nop
imul
xchg
jnp
mov
popf
addr16
push
jb
ret
cli
dec
push
in
cmp
scas
cmpsl
pop
cld
sbb
arpl
or
das
cmp
cmp
loope
and
xlat
mov
xor
dec
sub
mov
mov
mov
das
jge
ds
push
int3
sbb
shl
xchg
jle
mov
jecxz
jle
xchg
pop
mov
jae
dec
into
fdivrl
mov
ficompl
push
scas
call
outsl
fldcw
fcmovnb
and
or
in
lret
dec
int3
mov
cli
andl
sbb
testl
cmp
xchg
push
pop
xchg
fildll
xchg
sbb
jns
mov
shll
mov
mov
mov
and
pop
sar
decl
loopne
and
push
xchg
ret
test
add
lea
sbb
dec
fs
mov
dec
mov
and
push
stos
int
sbb
push
sarl
pop
push
dec
xchg
dec
cmc
mov
dec
sub
arpl
pop
sarb
and
add
xchg
nop
scas
loop
movsb
leave
cmovbe
add
xor
mov
dec
dec
ss
lret
mov
dec
icebp
pop
sbb
aas
jbe
out
inc
movsl
shrb
nop
pop
or
mov
sti
sub
jo
fbld
sbb
xorb
xchg
mov
push
dec
repnz
jmp
lods
cwtl
pcmpgtw
clc
cmp
and
xchg
or
bound
test
mov
test
cmpsb
adc
aam
inc
sbb
std
dec
ljmp
mov
mov
sarb
mov
lds
out
fnstcw
pop
hlt
sub
outsb
loop
in
out
mov
testl
pop
mov
test
cwtl
rolb
cmpsl
inc
pop
loope
shll
lret
fnsave
ds
lods
mov
sbb
mov
adc
mov
or
sti
sub
inc
push
sub
lea
mov
jae
push
leave
mov
mov
push
cltd
es
dec
repz
sub
jnp
mov
and
push
and
cld
cmp
push
loope
jecxz
xchg
loop
arpl
fs
cmp
add
lock
mov
and
repz
push
fmulp
ss
std
dec
adc
inc
sti
mov
outsb
stc
mov
dec
fsts
and
inc
out
loopne
pop
shll
mov
outsb
sbb
pop
push
pop
loopne
and
pop
dec
dec
cmp
push
lock
mov
jge
cmpsl
mov
popa
outsl
inc
in
jbe
lods
movb
dec
push
xchg
addr16
ja
cmp
pop
pop
in
fsubs
pop
fmuls
into
pusha
fld1
mov
fdivs
jge
test
sbb
outsl
mov
pop
add
shlb
fbstp
push
fstps
push
lcall
pop
mov
leave
or
loope
fiadds
arpl
add
pop
into
in
or
pushf
add
lods
mov
lret
inc
sbb
fidivrl
enter
add
adc
cmpsl
or
and
mov
dec
and
int
fwait
pop
fwait
adc
jg
out
adc
fmull
fdiv
cmp
inc
dec
in
push
and
arpl
imul
jle
mov
insl
pop
cli
lcall
cltd
shll
test
mov
jnp
push
push
mov
pop
sub
push
sbb
mov
loope
sbb
push
xor
mov
lret
cmp
ret
ljmp
push
pop
sbb
cmpsb
and
lret
dec
push
repz
mov
fs
xor
dec
sbb
sbb
mov
lcall
les
das
mov
fxch
xlat
push
in
lock
push
dec
loope
xor
and
jns
cmpsb
leave
xor
in
popa
popf
inc
jecxz
dec
dec
dec
mov
es
inc
stc
jl
or
lods
pushf
pop
in
sub
pop
mov
push
xchg
push
addb
add
mov
mov
xchg
lcall
call
popf
orl
xlat
and
roll
hlt
test
pop
movsl
icebp
add
jmp
mov
dec
iret
cmp
mov
pop
lods
int
fs
addl
push
mov
ds
sbb
mov
jmp
imul
cmp
scas
bound
mov
data16
xchg
sahf
push
push
lods
adc
mov
cmp
mov
insl
adc
pop
xor
pop
push
iret
sarb
out
adc
int3
push
test
popa
xchg
sub
mov
adc
cmp
dec
or
xchg
adc
jg
mov
and
ja
mov
mov
inc
or
sub
dec
subl
stc
mov
imul
call
mov
stc
xchg
jmp
insb
fistpll
dec
xor
cltd
arpl
sarb
jbe
inc
nop
testl
cmp
in
fldcw
mov
xor
cmpsl
mov
pop
add
imul
lahf
ja
xchg
inc
ljmp
movsb
push
imul
push
out
mov
cmpsl
arpl
add
xchg
adc
addr16
xor
cmp
mov
rcpps
pop
push
and
in
sub
loopne
pop
dec
xorl
xchg
mov
pop
jo
movsb
mov
add
xchg
dec
xor
decl
push
mov
daa
push
sbb
dec
ret
mov
sub
sub
ds
ficomps
cltd
xorl
jnp
dec
in
subb
pop
dec
pop
xchg
xchg
dec
push
add
sub
fists
hlt
rcrl
sbb
outsb
insl
mov
imull
inc
jmp
sarb
xor
jmp
je
mov
test
sbb
jle
cmpsb
jb
xchg
jp
push
push
jns
sbb
aas
xor
mov
mov
fnstsw
ret
pop
and
and
daa
scas
or
insb
in
nop
jecxz
cwtl
cmp
sub
and
add
mov
mov
xor
or
xor
sbb
call
cmpb
pop
sbbl
push
add
lea
or
mov
dec
imul
inc
and
push
mov
cld
orb
out
sti
sar
insb
pop
cmp
xorl
pop
ret
push
xlat
mov
lret
pop
add
insb
sub
insb
jmp
dec
sti
repnz
lcall
repnz
xchg
pop
inc
fs
rorl
repnz
xchg
rol
mov
into
repz
xchg
insl
dec
cmpsb
ss
ret
inc
cld
jb
imul
in
sbb
test
lods
push
scas
stos
imul
pusha
cwtl
fucom
dec
fsubl
fidivs
push
push
sbb
fidivrs
cmc
add
pop
std
inc
xchg
inc
sbb
dec
jge
aaa
ss
or
xchg
and
jne
stos
out
out
rorb
jb
or
jp
ja
test
mov
call
push
adc
sub
ljmp
frstpm(287
and
mov
adc
jl
cmp
cwtl
cmpsb
popf
ds
pop
imul
sub
or
pusha
push
xchg
xor
or
data16
xor
addr16
and
negb
lods
imul
hlt
jns
cmp
adc
and
xchg
test
mov
test
test
int3
pop
emms
je
adc
jl
clc
lcall
mov
mov
jecxz
mov
push
adc
ret
mov
jne
je
cli
data16
jns
xchg
inc
and
mov
sbb
add
xor
cmp
cmpsb
mov
rolb
or
xor
xchg
xchg
sub
mov
pusha
loop
mov
and
cs
ret
cli
jmp
cmp
adc
out
mov
dec
sbb
adc
mov
jl
pop
ss
stos
jne
aas
arpl
fistps
mov
out
xchg
pop
lods
cmpsl
test
loope
cmp
add
pop
repz
push
jno
loope
inc
loope
jg
out
int
icebp
push
jbe
push
push
repz
in
xchg
inc
popa
bound
adc
inc
xchg
fisttpl
dec
in
adc
clc
mov
sub
ljmp
mov
test
pop
int
stc
xor
cmp
push
mov
xchg
cmpb
cs
aad
push
daa
cmp
into
scas
mov
xchg
popf
scas
daa
out
lea
dec
push
fidivrl
pop
push
jmp
aad
mov
or
rclb
sbb
jno
adc
out
jge
sti
lahf
jecxz
jge
ret
mov
xchg
cmp
dec
inc
mov
testl
stos
aam
ds
push
stc
movsl
lahf
roll
sub
push
mov
lds
lock
jbe
dec
push
subb
mov
and
pop
adc
jb
pop
inc
fistpll
dec
out
pusha
sub
daa
data16
xor
addl
and
sbb
adc
inc
movsb
and
add
incl
scas
pop
out
pop
xchg
popf
push
xchg
pop
push
cmpsl
push
xchg
jno
cmp
call
fidivl
push
scas
movb
negb
ja
mov
adc
cmp
cmp
fs
imul
push
std
repnz
mov
add
je
aas
dec
divl
lods
xor
nop
push
lahf
xchg
sub
sahf
jg
sub
xchg
sbb
jo
fistps
dec
cmp
int
int3
xor
pusha
sub
iret
lds
daa
lock
clc
cli
push
scas
daa
xchg
dec
pop
mov
in
stc
out
sub
adc
pop
ss
pop
sbb
ret
lds
nop
out
iret
dec
fwait
lea
imul
mov
pop
roll
xchg
les
sub
xor
addr16
movl
cmp
fstl
push
fwait
into
and
ret
int3
adcb
negl
aaa
inc
adc
popa
push
lea
lea
push
fstps
fs
insl
fisubrs
fnstenv
cmc
pop
roll
add
mov
dec
xchg
shrl
inc
and
jb
sti
test
mov
js
addl
repz
sahf
imulb
pop
sbb
jo
jno
xor
jnp
push
xor
lret
jmp
pop
inc
fcmovu
out
xchg
mov
aaa
jl
mov
xchg
adc
lock
sbb
icebp
push
js
les
lock
and
mov
sbb
mov
repnz
mov
cmp
inc
in
adc
lods
cmp
sub
int
inc
dec
insb
enter
cmc
cmp
faddp
inc
jecxz
loope
pop
push
bound
into
push
add
fwait
fs
inc
sarl
push
shll
cmpsl
push
cltd
lret
jecxz
lods
sub
pop
cmp
xchg
pop
insb
mov
inc
in
dec
sti
pop
stc
add
push
cmp
ds
inc
xchg
shrl
xchg
jne
fs
repz
xor
test
insl
dec
aas
adc
xor
add
or
push
into
cmp
stos
cli
daa
jo
xlat
pop
push
outsl
push
lock
sahf
stos
inc
pop
and
cmp
jo
jmp
repz
jecxz
jae
mov
out
inc
or
dec
xor
loope
mov
or
adc
loopne
jns
rclb
push
sbb
sub
push
cltd
mov
fcmovne
dec
fldenv
test
hlt
hlt
cmp
call
bound
mov
inc
sub
bound
mov
loopne
inc
pop
cli
or
xor
pop
xor
sub
sbb
outsl
cld
mov
xor
pop
push
mov
adc
in
push
mov
mov
adc
xchg
shll
push
inc
push
xor
jbe
xor
bound
sbb
push
push
test
adc
std
pusha
and
lahf
fistl
inc
inc
mov
mov
stos
pop
scas
sub
out
arpl
jnp
sbb
inc
jge
pop
popa
cli
fwait
aaa
fidivrs
addr16
dec
sti
mov
sti
cmp
mov
sub
or
ljmp
dec
dec
jae
cli
cli
mov
ljmp
mov
sbb
out
rclb
js
data16
xchg
inc
push
in
ss
jo
mov
test
xor
xor
mov
arpl
orb
les
scas
push
xor
xchg
inc
lds
dec
and
out
scas
cld
mov
inc
or
sahf
pop
imul
mov
pushf
mov
inc
mov
lock
cmp
xor
pop
mov
mov
sbb
pop
mov
je
inc
stos
xchg
jno
inc
das
mov
or
pushf
inc
jge
fsubs
adc
cmp
jnp
rolb
subl
inc
aam
mov
pop
or
mov
fidivl
xor
sub
lods
roll
das
sbb
cmp
inc
pop
jns
scas
imul
xor
xor
lock
shlb
rorb
adc
inc
cltd
lcall
lea
lds
out
xor
rorl
xor
adc
test
jns
das
pop
mov
adc
push
xchg
dec
xor
pop
ret
cmpsl
ja
inc
pop
mov
xor
jp
mov
add
jge
pusha
or
stc
xor
or
xor
adc
in
into
sbb
fsubs
mov
lods
xor
inc
lahf
push
inc
mov
mov
xor
cmc
jl
cmp
test
lea
jg
test
aaa
out
out
mov
sub
mov
jae
aas
sub
dec
push
mov
inc
add
pop
push
hlt
adc
aaa
pop
mov
xchg
push
sbb
adc
cmp
push
gs
xor
in
loop
xchg
pop
gs
outsl
and
iret
mov
data16
fs
fwait
push
fstps
adc
push
cli
shlb
add
adc
das
dec
sahf
mov
pop
push
out
mov
cmp
mov
adc
shll
lods
fs
sub
movsb
pop
jmp
pop
movsb
sbb
sub
xor
cltd
icebp
enter
mov
clc
mov
out
pop
fwait
cmp
das
icebp
call
and
add
dec
stos
repnz
pop
ficoml
pushf
mov
jp
sahf
jns
mov
sub
ret
or
inc
enter
aaa
arpl
sub
and
fsubrs
xchg
mov
xor
repz
ds
jne
jnp
out
jg
xor
push
mov
rorl
dec
xor
popf
mov
mov
cltd
jne
jle
mov
sub
clc
and
cmpsb
loope
and
mov
cmp
jnp
dec
dec
mov
addr16
cmp
or
pushf
pushf
mov
out
xor
fdivr
sahf
test
and
mov
push
gs
push
enter
mov
mov
divw
loop,pn
pop
call
mov
setne
jo
cltd
mov
fadds
ret
add
divl
sub
out
movsl
mov
insl
in
out
loop
inc
or
lret
adc
and
jge
mov
xchg
int3
mov
fucomip
sbb
test
sahf
js
mov
push
jb
mov
push
insb
push
push
adc
enter
mov
push
dec
cmpsb
mov
jo
lds
push
in
sbb
mov
repnz
lret
lret
in
jg
and
sarl
pop
push
int
dec
test
cwtl
mov
cmpsb
aad
pop
or
pop
pop
push
nop
sub
xor
das
lret
roll
jno
dec
push
mov
popa
dec
mov
jg
ja
xchg
inc
add
cltd
xor
lret
lods
insb
cmp
sub
or
out
int3
add
mov
sub
inc
mov
xchg
adcl
sarl
lods
inc
ret
dec
jne
push
mov
scas
mov
inc
addr16
mov
sub
outsl
sbb
pop
dec
and
mov
inc
in
mov
jge
push
and
inc
inc
or
inc
inc
stos
sti
stos
les
imul
popf
and
je
mov
xchg
mov
sahf
andb
lcall
cld
mov
sub
testb
repz
dec
jmp
cmp
push
outsl
hlt
xor
xchg
push
in
into
data16
push
push
jno
jno
arpl
jns
pusha
jae
lret
shlb
mov
in
dec
bound
cmpsl
movsb
adc
mov
xor
xor
test
xchg
into
inc
dec
vpunpckhdq
cmp
push
ss
pop
ja,pt
dec
xchg
jae
dec
test
and
mov
xor
jns
popf
lods
xchg
or
xchg
inc
lcall
and
and
xchg
fs
xlat
je
outsb
lea
inc
shlb
lock
adc
popa
pop
or
adc
call
xchg
sbb
jle
pop
pop
ss
and
sahf
es
jmp
outsb
incb
pop
push
pop
mov
push
outsl
ja
jb
mov
sub
or
test
fmuls
xchg
pop
pop
or
dec
pop
jno
xchg
outsb
sbb
cmp
adc
stos
cmp
inc
loop
fisubrl
lret
js
nop
in
or
jno
pusha
aas
js
cmp
add
push
in
adc
mov
mov
movsb
or
dec
lea
pop
jmp
fsubrl
dec
outsl
fadds
sub
dec
xor
shrb
pop
pop
xchg
scas
sbb
xchg
mov
pop
pop
mov
ret
or
hlt
ret
pop
stos
fnsave
hlt
fnstcw
pop
ss
jecxz
mov
lcall
dec
jmp
adc
sbb
pushf
mov
pop
cmp
pop
xor
dec
xchg
addb
stos
inc
out
or
pop
jne
jmp
mov
lods
aad
shl
mov
cmp
icebp
jg
push
movsl
pop
mov
lret
sub
push
add
dec
lock
or
pop
and
sbb
push
xor
mov
mov
lods
inc
lds
loope
jno
mov
sti
sub
mov
movd
sbb
inc
cmp
daa
adc
movsb
xor
sbbl
lods
stos
sbb
sbbb
fidivrs
inc
mov
mov
push
daa
scas
jmp
mov
stos
movsb
mov
add
loop
in
test
test
push
test
mov
sub
cs
jne
fs
inc
sbb
cmpb
cmp
out
mov
sub
push
fdivr
jno
jb
jg
pop
inc
iret
jnp
add
push
outsl
mov
sbb
adc
mov
xchg
popa
dec
rdpmc
adc
cmp
daa
inc
add
adc
inc
int3
mov
std
add
lods
jge
in
inc
mov
daa
inc
adc
xor
sbb
outsl
aaa
xlat
xchg
jb
loop
jmp
pop
pusha
sbb
out
arpl
mov
mov
xchg
jno
sbb
mov
push
jns
mov
imul
push
fwait
mov
xlat
xchg
sub
xchg
cmp
sbb
and
sub
xchg
cmpsl
aam
jge
xchg
xor
mov
lock
ljmp
dec
ljmp
dec
mov
fcmovbe
inc
aaa
push
xchg
adc
xchg
push
cmp
lcall
mov
cwtl
fiaddl
cs
mov
jbe
mov
adc
add
mov
mov
jl
les
and
call
cmpsb
not
inc
sub
rorb
in
data16
rcrb
sti
sub
inc
cli
pop
jnp
mov
mov
dec
xchg
mov
pushf
or
sbb
xor
xorl
add
int3
xchg
gs
pop
cmp
jb
lret
pop
xchg
ss
fidivs
jle
xchg
adc
sub
and
out
and
insl
pop
out
push
gs
add
dec
and
pop
adc
cmp
imul
fwait
mov
or
scas
aaa
mov
aas
mov
mov
xor
pop
in
fiaddl
inc
xor
sbb
movsl
jnp
fwait
mov
push
ss
outsl
pop
xorb
int3
xor
jb
jae,pt
jl
leave
fucomi
dec
cmp
dec
popf
icebp
jge
movsl
test
pushf
mov
xchg
nop
inc
loop
aad
jecxz
in
mov
cmp
sbb
add
pop
add
iret
and
adc
xor
wbinvd
sub
fimuls
lds
pop
pop
lahf
stc
push
enter
mov
or
add
in
jmp
bound
jle
push
push
loopne
mov
lahf
mov
mov
ret
fcmovnb
mov
and
aaa
std
test
out
int3
adc
leave
jle
cli
repnz
xchg
pop
fisubrs
sahf
cmpsb
negl
jmp
pop
sahf
loope
sbb
push
mov
cmp
cmc
ret
sub
mov
jo
lret
sub
dec
and
fwait
jge
es
mov
xor
imul
mov
push
jg
xor
jecxz
fnstsw
push
call
jns
bound
cwtl
pop
sbb
lret
pop
cmp
pop
jge
xchg
lcall
pop
mov
lods
repz
mov
lret
push
cs
mov
daa
push
loope
lret
outsb
test
sarb
fmul
and
rcll
sahf
pop
push
inc
xchg
mov
mov
jnp
jg
out
in
shrb
mov
loopne
pop
jbe
xchg
cs
dec
xor
test
pop
or
mov
test
clc
mov
dec
mov
movq
and
jp
stc
out
pop
cmp
mov
cld
daa
mov
lods
sub
push
pop
stos
loop
sub
in
mov
mov
mov
test
dec
in
mov
mov
call
in
sub
ds
hlt
jae
dec
pop
jno
ss
sbb
push
pop
adcb
in
adc
sub
in
mov
inc
cltd
scas
out
loop
in
mov
scas
shlb
les
call
icebp
mov
push
cmc
or
pop
xchg
xor
sbbl
out
pop
dec
mov
pop
es
or
iret
xchg
inc
lods
push
mov
push
xchg
adc
push
and
movsb
insl
imul
pop
pop
xor
xor
push
dec
sahf
stc
movsb
fistl
push
mov
hlt
cmp
out
adc
or
cmp
decl
pushf
mov
jle
xlat
daa
push
cmp
adcl
pop
xlat
mov
xchg
ss
outsl
ss
jo
mov
push
mov
fadds
int3
push
add
jno
adc
lods
dec
pop
push
xchg
int3
ficoml
in
rol
rcr
jmp
subb
in
pop
and
stos
sub
xor
pop
jge
xchg
imul
add
inc
sbb
sbb
add
les
clc
jae
mov
das
sbb
add
push
mov
cmp
sarl
push
push
mov
sub
cmp
cmp
mov
test
push
inc
dec
xor
and
aas
mov
push
cmp
cmp
out
jge
push
mov
insl
mov
inc
jnp
lcall
lea
test
xchg
pop
dec
push
int
mov
nop
cmc
shll
and
push
loopne
repz
dec
pop
sub
or
or
int3
sub
xchg
push
adc
movsb
gs
jns
das
push
fisubrs
dec
popl
pop
pop
push
dec
or
or
popa
loop
mov
clc
iret
or
mov
fstp
add
jl
es
pop
jne
leave
idiv
sbb
lea
movsl
add
inc
ret
sbb
xorl
jmp
outsb
push
in
lret
repz
mov
mov
xchg
xorl
lea
mov
imul
push
lds
in
and
aad
imul
fs
push
jne
mov
movsl
pop
mov
jle
outsl
xchg
sahf
push
loop
mov
sbb
jae
push
loope
loopne
cmpsl
push
das
inc
mov
lahf
das
xchg
fistpl
or
pusha
jmp
das
dec
adc
or
das
push
and
mov
or
or
jg
es
mov
mov
and
and
xchg
and
mov
das
jmp
nop
nop
mov
test
adcl
rcll
xor
pop
inc
xor
rcll
xor
xor
xchg
xchg
orb
ficoms
sbb
inc
push
jae
repnz
iret
and
rorl
xchg
jae
pop
sbb
cwtl
cmp
cli
insb
ljmp
aaa
loopne
cmpsb
inc
sub
out
and
int3
push
pushf
pshufw
cmp
shrb
aaa
js
roll
hlt
stos
pop
aas
aas
cmp
mov
sub
aaa
aas
shlb
and
xor
stos
cld
jae
inc
pop
xchg
bound
loope
xor
ds
nop
jo
xchg
pop
push
ficoml
adc
or
mov
aas
jns
iret
int
in
mov
cmp
add
ds
push
out
mov
xor
pop
inc
inc
incb
repnz
sub
mov
test
std
pop
jb
push
mov
nop
mov
insl
sub
dec
imul
pop
cmp
xchg
inc
sbb
stc
jg
xchg
mov
scas
adc
int
pop
pusha
mov
inc
xchg
mov
cmp
aam
sub
int
int
cmp
dec
popa
je
mov
xor
stos
inc
push
inc
mov
and
repnz
lcall
dec
fs
mov
fs
and
push
sbb
sub
cld
jl
push
daa
in
or
jge
movsl
add
pop
mov
mov
inc
inc
and
inc
leave
pop
in
push
sbb
scas
sbb
inc
pop
pusha
dec
cmp
inc
out
pop
rclb
aam
stc
push
cmp
out
cmp
cmp
dec
push
arpl
pop
mov
cmp
inc
imul
cli
arpl
roll
es
popa
sub
lcall
stc
pop
std
sbb
inc
scas
adc
xor
sub
jmp
xchg
push
dec
xor
fldl
cli
cs
mov
mov
cmp
jg
or
outsl
fst
insb
pop
lods
call
call
cmp
stc
xchg
mov
push
push
inc
in
out
mov
mov
sub
mov
push
js
cwtl
popa
pop
or
mov
rcrl
mov
xor
add
testl
pop
mov
std
aaa
jge
adc
shl
stos
mov
andb
pop
pop
inc
bnd
add
aad
fwait
xor
rcrb
xchg
mov
xor
sub
pop
xchg
mov
in
les
add
dec
arpl
lea
and
jl
lods
push
xchg
mov
in
xor
cmp
insb
movl
stos
js
mov
loopne
jg
or
cmp
js
push
and
pop
sub
push
enter
loope
mov
jae
and
sbb
pop
push
in
and
fs
repz
push
js
dec
pusha
sbb
xlat
test
leave
cli
leave
shlb
ret
ss
dec
jo
push
loopne
dec
lods
mov
idiv
xor
ljmp
pushw
adc
test
inc
aas
inc
dec
stos
bound
and
mov
insb
mov
enter
les
sbb
aam
adc
in
mov
popa
and
cld
dec
repnz
sbb
stos
dec
jae
adc
lcall
pop
inc
fdiv
or
popf
or
loope
mov
push
fsub
mov
push
shrb
aaa
cltd
xchg
dec
sbb
mov
xor
cmp
jb
std
jae
and
pop
dec
testl
jecxz
stos
and
cld
cmpsb
inc
repz
jge
popa
mov
jle
and
jecxz
ljmp
loope
rcr
lods
mov
push
jns
add
fcoml
xlat
sub
dec
jae
adc
xchg
shl
push
mov
inc
xchg
in
aaa
mov
fwait
cmp
loop
mov
mov
or
imul
int
cmp
aam
icebp
mov
sbb
mov
pop
arpl
mov
push
push
mov
sbbl
sub
xchg
and
arpl
incl
mov
pop
pop
cmp
notl
enter
lcall
lock
repz
imul
in
jg
rol
dec
xchg
xor
xlat
dec
lret
cmp
mov
stc
popf
push
push
mov
les
dec
test
pop
cmpsb
rol
pop
xchg
xchg
dec
adc
aaa
xchg
mov
in
mov
xor
ds
xchg
sbb
sbb
mov
mov
sub
mov
xor
rol
fwait
mov
and
outsl
xchg
mov
sbb
inc
dec
pop
addr16
xor
das
test
int3
mov
push
arpl
js
pop
xor
push
hlt
sub
ds
nop
sub
leave
enter
ds
fildl
sarb
cmpsb
push
fwait
sbb
jb
add
dec
pop
or
xor
loope
add
jg
push
stos
packsswb
jne
dec
nop
ret
mov
je
or
push
or
sub
fnstcw
inc
fmul
cmpsl
sub
mov
cmc
ret
and
dec
insl
dec
sbb
cmpsb
xchg
push
mov
xchg
xchg
pop
dec
dec
xchg
cmp
xchg
xor
sub
mov
jo
jl
mov
outsb
pop
mov
add
movsb
out
outsl
sub
shl
mov
push
jbe
push
sahf
aaa
cmp
sub
lods
pop
lds
or
sub
gs
fs
push
adc
in
dec
mov
movsl
insl
gs
and
mov
shll
xchg
imul
xor
sbb
bound
cmp
mov
imul
je
in
and
inc
aad
pop
scas
sbb
data16
and
jle
dec
popf
hlt
pop
jb
sub
push
aam
shrb
lret
mov
pop
jns
push
fiaddl
jo
stos
xlat
ljmp
sbb
lock
inc
jne
sub
sub
xchg
push
aam
iret
stos
fs
pop
outsb
aam
cmp
mov
pop
int
lods
ds
faddl
add
inc
lds
pop
and
add
ret
mov
sbb
dec
call
jno
fstpl
xchg
xchg
sub
repz
sub
mov
sub
pop
dec
repz
je
add
pop
mov
cmpsb
jae
popa
and
pop
test
loop
push
fisttps
jle
scas
dec
mulb
icebp
sar
bound
rcr
jae
out
movsb
mov
jle
sub
and
stc
lds
and
push
dec
mov
mov
dec
lock
mov
dec
hlt
mov
insl
outsb
inc
inc
pop
push
lret
sbb
pop
push
and
pop
xchg
add
sarb
pop
icebp
je
xor
repz
mov
mov
imul
jne
jge
mov
ss
rcll
xor
cwtl
jo
mov
xchg
rolb
cli
shll
and
cmp
insb
mov
cmp
popf
les
cs
inc
in
adc
pop
pop
lds
jecxz
dec
das
mov
xor
imul
imul
ret
adc
inc
dec
add
shlb
inc
inc
jle
xchg
lret
sub
lret
adc
or
filds
ljmp
pushf
repz
imull
inc
icebp
popa
add
pop
into
jl
insb
xchg
daa
adc
push
cmc
dec
fcompl
jg
fidivrs
stc
jno
idiv
cmp
sti
adc
xchg
adc
cmp
mov
mov
stos
sbb
aaa
fs
es
jle
fnstcw
and
sub
dec
xor
loop
scas
idivb
stc
insb
loopne
gs
xchg
dec
rorb
cmp
jl
lret
push
pop
das
push
lret
ret
sahf
xchg
cmp
scas
cmp
ret
sbbl
cmp
pop
lds
cmp
add
jne
and
dec
out
jno
and
jno
push
cltd
push
lcall
dec
xor
cmc
lock
loopne
xchg
pop
push
aaa
mov
push
pop
cmp
and
mov
jno
aam
adc
mov
es
pusha
stc
out
ljmp
mov
leave
jecxz
lea
test
push
push
dec
je
ja
mov
and
arpl
cmp
add
mov
aad
cmp
jno
jmp
popa
std
mov
lods
iret
aad
shll
rorl
jb
and
xor
mov
inc
cltd
fdivrs
je
mov
lods
dec
aaa
idivl
mov
cmc
sbb
mov
dec
adc
in
div
mov
add
fisubs
sbb
xor
push
adc
jae
adc
xchg
pushf
pop
cmp
es
jo
adc
aaa
inc
insb
pop
sbb
jb
pop
popa
shll
pop
lahf
push
addr16
jae
jne
lock
divb
sti
outsb
ret
xchg
push
fwait
rorl
out
mov
stos
lds
loope
idivl
mov
cmp
les
sub
mov
mov
cwtl
into
bound
scas
loop
jl
mov
xchg
ret
jnp
int
jge
lret
sbb
cmp
add
sbb
pop
dec
pop
xor
sarb
jmp
ret
loop
mov
fnstcw
jns
mov
cmp
movsl
cld
jne
pop
dec
adc
sub
shlb
bound
testb
or
stos
aaa
cmp
xor
aas
dec
sbb
push
xchg
int3
shlb
and
imul
rcll
jno
and
mov
dec
in
jb
adcl
fdivl
sub
inc
mov
sub
data16
xlat
dec
stos
pop
adc
insb
mov
imul
jecxz
mov
sbb
mov
mov
dec
mov
loope
push
test
andl
fwait
cmp
idivl
xchg
or
sbb
jg
loop
jl
lods
dec
sub
mul
hlt
outsl
sti
pop
jo
xor
xchg
inc
mov
das
pop
out
sbb
xor
mov
dec
mov
dec
xchg
or
stc
aaa
push
cli
sti
pop
loop
jle
pop
shlb
fildl
mov
imul
sbb
sub
mov
in
push
xchg
movsl
cmpsl
cmp
loop,pn
test
out
pop
mov
push
outsl
sbb
aaa
xchg
call
aam
mov
push
fcoms
fcompl
and
int3
mov
idivl
out
or
and
aaa
mov
xchg
dec
lea
in
into
inc
popf
sub
out
pop
hlt
xor
ret
or
cmp
mov
stos
mov
pop
mov
push
insb
test
jb
and
pop
insl
mov
inc
cmp
int
push
push
sbb
jno
popa
fdivs
sub
repz
je
mov
sub
jns
jge
xchg
testb
cmp
xlat
pusha
enter
imul
xor
popf
cmp
mov
mov
test
pop
add
or
cmpb
jae
test
pop
push
sub
mov
aad
cmpsl
icebp
addl
mov
outsl
out
adc
inc
adc
iret
aad
divl
and
sub
pushf
push
mov
mov
cmp
pop
sub
adc
mov
imul
stos
imul
test
aas
popa
mov
and
xor
inc
ja
pusha
cs
ds
movsl
sub
in
and
aad
push
lcall
int
push
dec
jo
pop
cmp
dec
jno
mov
xchg
jge
xor
xchg
pop
jecxz
jp
mov
sub
jnp
outsb
es
adc
mov
sub
jge
dec
push
add
lea
test
and
mov
je
lock
push
lods
stos
imul
out
push
shlb
push
mov
fwait
cmp
dec
or
mov
jno
fmuls
mov
push
and
outsb
xor
mov
add
xlat
xchg
ret
nop
or
or
mov
jl
out
das
fnsetpm(287
or
xor
jns
xor
fdivs
jno
mov
outsb
and
popf
mov
notl
dec
in
outsl
sub
push
dec
out
push
push
xchg
mov
push
ja
jae
xchg
mov
pop
lret
or
pop
faddp
cltd
lods
das
test
idivl
in
inc
sarl
sub
pop
mov
out
cld
adc
outsb
jg
shlb
jge
jmp
pop
push
jnp
sub
out
or
jg
in
cli
dec
sbb
push
rcl
mov
mov
push
fimuls
cmp
xor
pop
mov
mov
add
adc
lock
dec
sbb
inc
xchg
jge
jecxz
lcall
aaa
bound
lds
xor
out
jns
ret
push
ficomps
and
fstpt
sbb
push
push
ds
icebp
xchg
shlb
addr16
dec
push
dec
pop
stc
inc
cmp
sbb
mov
movsl
mov
mov
pop
pushf
enter
and
fs
insl
pop
lods
mov
inc
jmp
push
adc
pop
fwait
inc
sub
in
mov
mov
pop
xor
inc
repnz
js
jns
out
daa
or
inc
adc
or
popf
ret
mov
push
int
or
xchg
mov
jecxz
ret
out
pushl
pop
outsb
xor
adc
outsb
cwtl
jae
loope
inc
sbbl
lea
jne
inc
inc
sub
mov
int3
inc
cmpl
ljmp
in
faddl
mov
sbb
insb
popa
ficomps
cs
jge
stos
stc
cmp
outsb
bound
mov
and
sub
adc
jecxz
je
das
pop
sub
sub
lret
sbb
aad
mov
xchg
ret
addr16
cmp
std
jg
bound
leave
mov
xchg
test
fwait
into
iret
cmp
repnz
push
push
lea
xor
mov
sub
jnp
xchg
idivb
inc
daa
cmp
or
cmpsb
xor
scas
pop
fidivrs
push
adc
mov
push
jl
lods
fwait
or
push
mov
pop
repnz
mov
cmp
cmpl
xchg
mov
inc
ljmp
cmc
xor
inc
mov
xor
dec
mov
xchg
xchg
jle
in
call
aad
addr16
insl
ror
outsl
pop
jae
xor
popf
sarb
in
push
dec
xor
mov
into
pop
inc
dec
mov
bound
hlt
lods
dec
cmpsb
jb
insl
cltd
in
inc
stos
shrb
cmp
sbb
shl
fistps
jo
enter
inc
push
dec
rolb
loope
nop
mov
jnp
fisttps
mov
mov
out
dec
pop
jae
insb
mov
sub
push
mov
adc
jae
nopl
ss
push
xor
loope,pn
insl
pop
stos
ds
push
aam
outsb
je
and
jbe
popa
setno
andl
jns
fsubrl
in
push
mov
inc
ret
cmp
pop
std
dec
jns
sarl
stos
inc
je
jecxz
jb
mov
pushl
xor
clc
mov
aas
inc
xchg
cmp
addr16
mov
gs
gs
scas
push
jp
outsb
cld
js
push
cmp
pop
inc
ljmp
and
out
inc
mov
in
stc
push
in
mov
mov
cld
jg
cmc
adc
test
shlb
scas
sub
pop
and
adc
or
popa
sbb
arpl
mov
js
ret
les
icebp
sub
and
jge
jp
lods
clc
xchg
fwait
mov
jecxz
fcmovnb
mov
aad
xor
gs
clc
repnz
into
dec
mov
fdivrl
mov
cmp
inc
nop
inc
pop
push
arpl
sub
lret
sub
adc
jecxz
mov
dec
mov
inc
cmp
icebp
and
loop
push
xor
adc
lahf
sahf
mov
mov
out
mov
cmp
ds
out
pop
sub
notl
jae
sbbb
mov
hlt
or
dec
movsl
or
xor
push
bound
or
sub
mov
jno
pop
adc
xlat
fistl
adc
inc
pop
cmp
aaa
jge
shlb
mov
outsl
test
cmc
and
pop
dec
icebp
inc
out
ss
js
popf
push
jp
roll
rcrb
imul
les
data16
ja
cmp
imul
pushf
mov
pop
scas
stc
push
int
cltd
inc
push
mov
sub
aam
push
pop
ljmp
push
jg
cltd
pop
insb
pop
xchg
push
aad
clc
cmp
pop
dec
jg
scas
cwtl
mov
and
js
push
ret
push
lea
add
xor
pop
dec
out
adc
push
xor
lods
mov
lsl
movsl
jle
cmp
xor
cld
pop
insb
mov
mov
cmp
fcompl
mov
fcoml
data16
push
stos
aam
and
repnz
imul
jnp
push
test
xchg
neg
jb
jno
or
idivl
push
jmp
mov
jle
mov
ss
movsl
int
lret
dec
xor
fs
fdiv
push
in
scas
orb
mov
xchg
pop
movsb
adc
lcall
jle
or
movd
stc
mov
int
sub
mov
daa
insb
mov
pop
fwait
lcall
sbb
lods
iret
in
rol
mov
data16
or
jg
jg
pop
aaa
iret
or
add
mov
aas
mov
inc
nop
adcb
fcmove
pop
or
push
inc
dec
push
ret
in
mov
int
je
xchg
jg
test
dec
cs
add
xor
pushf
mov
repnz
sub
popa
jg
and
lea
cmp
lods
jns
sahf
push
out
push
push
jbe
aaa
stc
test
test
mov
outsb
jle
pop
stc
daa
mov
addr16
push
ss
mov
enter
into
hlt
jle
xchg
jnp
push
ret
mov
lock
sub
pop
adc
stos
into
jle
jp
mov
xchg
jnp
adc
pop
jne
dec
popf
or
ljmp
repnz
mov
iret
loop
or
push
aaa
mov
xchg
test
call
sbb
xchg
fmull
int3
nop
daa
gs
pop
int3
repnz
movsl
xor
es
push
xchg
pop
lods
arpl
addr16
aas
cmc
mov
push
mov
out
ficomps
out
es
jns
int
lock
mov
idivb
in
shl
or
in
mov
mov
sub
stos
inc
jnp
daa
mov
icebp
cmp
fwait
inc
mov
cld
call
mov
outsl
mov
jns
xor
arpl
sub
das
jo
inc
and
call
mov
cwtl
and
shll
shrl
sub
sbb
add
mov
sbb
ret
daa
dec
ret
sub
scas
and
pop
fidivs
cmp
push
or
mov
ret
sub
fcom
pop
adc
test
xor
imul
push
push
inc
icebp
stos
adc
bound
daa
mov
jno
adc
popa
div
inc
shl
sbb
insb
bound
gs
outsb
shll
aam
ds
mov
arpl
or
inc
stc
lahf
inc
add
imul
aaa
test
xchg
leave
in
lret
sub
or
pop
ja
add
push
or
add
jmp
sbb
xor
call
cmp
push
sub
sub
or
pushf
out
repnz
xchg
inc
imul
and
or
daa
mov
cwtl
push
ss
push
aaa
aas
mov
jns
mov
addb
mov
rcrl
in
and
mov
push
pop
and
xor
push
adc
insb
insl
pop
xchg
mov
scas
mov
xor
add
adc
adc
in
aam
mov
sub
mov
mov
push
adc
jb
push
or
scas
lods
push
xchg
popf
cmp
out
int3
push
notl
es
mov
xor
mov
mull
xor
pop
mov
push
push
jge
push
pop
inc
mov
sbb
sub
inc
es
push
leave
nop
or
push
add
stc
js
inc
out
pop
mov
decb
sbbl
lea
pop
rsm
push
ds
out
pushw
aas
jnp
cmp
fsubrl
push
mov
mov
pop
ds
popl
pop
subl
lahf
fiaddl
neg
xor
into
lds
add
mov
fldenv
fidivrl
enter
cmp
pop
jnp
cmp
movsb
sti
icebp
lea
cld
xchg
lea
xchg
cmpsl
out
inc
pop
out
int
in
dec
adc
pop
enter
adc
mov
jg
out
int3
add
lret
lretw
add
mov
xchg
neg
outsb
mov
inc
push
add
mov
xor
testb
sub
in
stc
adc
inc
xchg
pusha
and
xlat
sbb
mov
ss
pop
inc
cmp
ja
or
fadd
mov
sub
lahf
push
lret
cmp
out
or
add
lret
sub
into
sub
mov
xchg
push
sub
lock
mov
lods
push
pusha
xchg
lods
xor
dec
outsb
pop
inc
pop
inc
out
and
cmp
daa
stos
cmp
les
mov
loope
xchg
stos
fsub
into
sbbb
out
and
push
xchg
popf
call
push
int
and
aas
jo
movsb
iret
mov
out
or
add
mov
xor
out
jo
mov
sbb
orb
rcr
in
faddl
enter
sahf
les
cli
int
sub
into
lret
mov
jecxz
dec
movsl
in
popl
mov
stos
loopne
jecxz
push
xchg
dec
dec
mov
adc
or
testl
sti
out
into
and
cmp
bound
hlt
cltd
add
mov
test
mov
aam
xor
and
push
test
push
dec
xchg
inc
jne
sarb
out
xchg
push
xchg
mov
sbb
negb
lret
into
ret
mov
pop
fisubrl
mov
adc
test
push
pop
lods
sarl
cltd
dec
sub
iret
sbb
shlb
lods
mov
xchg
test
jo
cmp
das
xchg
data16
and
inc
push
or
outsl
xchg
jo
sub
dec
mov
cld
sahf
sbb
aas
mov
pop
xor
js
cmp
imul
xor
inc
and
inc
jne
test
and
and
inc
adc
xchg
xchg
inc
data16
or
mov
lea
dec
jae,pn
cltd
fsubs
out
jae
gs
lods
pop
roll
pop
mov
pop
lret
xor
adc
dec
in
fidivrs
mov
daa
xchg
scas
fsubrs
xchg
mov
xor
pusha
xor
aam
cmc
pop
cmp
int
mov
cmp
ss
cmp
andb
inc
cmpsl
adc
roll
ss
insl
push
dec
inc
addr16
lcall
mul
mov
shlb
dec
xchg
popa
mov
inc
or
ds
or
sub
sbb
xor
mov
adc
or
mov
popa
dec
add
jmp
add
mull
cli
adc
lods
out
lcall
push
fs
mov
mov
mov
sbb
cli
adc
hlt
arpl
mov
xchg
test
cmp
sbb
mov
bound
fwait
jp
jge
jp
cmp
adc
aad
cmp
out
pusha
aas
jno
mov
jle
mov
xchg
push
xor
sbb
ja
scas
test
xchg
jns
mov
lods
push
jecxz,pt
test
scas
mov
cmp
jb
push
push
mov
pop
xchg
imul
jge
cli
adc
call
test
mov
or
mov
add
popa
add
imul
shlb
xor
dec
jle
roll
cmp
mov
and
add
loop
dec
push
jecxz
pop
inc
pop
aaa
imul
repz
fidivrs
adc
xlat
sbb
mov
dec
mov
xor
jb
inc
or
push
xchg
jl
jecxz
cmp
mov
inc
imul
fwait
popa
gs
xchg
movsl
jns
pop
xor
push
inc
arpl
stc
mov
fistl
ds
push
adc
pop
rcl
jl
dec
icebp
mov
in
decb
pop
jg
pop
shll
mov
ret
fwait
pusha
xchg
xorb
pop
inc
mov
arpl
int3
pushl
pop
gs
lea
dec
popf
cmp
xchg
or
inc
inc
cmp
loope
rcrl
inc
dec
std
push
test
loope
icebp
add
inc
ds
cmp
andl
and
lods
out
cld
insl
mov
adc
push
jno
adcl
insl
enter
lret
out
insb
fsubs
roll
call
adcl
xor
and
mov
inc
mov
repnz
inc
cli
pushf
or
lods
dec
test
out
mov
imul
sub
sbb
xchg
sbb
inc
mov
or
jnp
xchg
imul
xchg
mov
imul
sub
mov
aas
push
pop
je
mov
adc
pop
data16
hlt
in
push
inc
adc
sbb
rcrl
out
sbb
cmpsl
xor
fcompl
mov
jl
dec
and
fwait
and
mov
repz
loopne
cmp
pop
movsl
lds
lcall
aas
jnp
fidivl
jo
pop
sbb
cmp
mov
pop
mov
mov
xchg
inc
mov
dec
or
aam
cmp
loopne
stos
pop
push
jbe
inc
jo
fwait
jg
lods
mov
mov
mov
in
mov
and
cmp
cmp
pop
lods
movl
lret
iret
repz
daa
inc
stos
daa
repz
mov
jno
cmp
test
sub
add
pop
xor
lret
xchg
mov
cltd
imul
test
cmpsl
test
jbe
pop
jmp
testl
xor
xchg
mov
mov
roll
nop
maskmovq
mull
scas
jmp
dec
sub
lcall
ret
push
out
out
outsl
xchg
mov
sbb
mov
out
add
jb
je
lods
push
inc
lcall
sub
inc
jle,pt
push
pop
mov
stc
sbb
lds
fsubrl
inc
insl
xor
mov
leave
jne
repnz
mov
jbe
xor
movsb
and
pop
test
insb
cmp
icebp
mov
mov
sub
hlt
push
mov
cwtl
mull
mov
movsl
push
repz
cld
shr
and
cmp
jp
insl
jmp
cld
cmc
movd
push
icebp
cmpsb
popa
jle
push
gs
jno
iret
and
call
add
mov
sub
mov
mov
nop
mov
out
add
and
push
daa
and
dec
insb
jmp
jecxz
push
mov
xchg
mov
lock
cmp
stos
out
mov
cmp
xor
sti
and
out
adcb
jle
out
movsl
cwtl
push
cmp
dec
dec
test
and
sbb
cmp
imul
pop
pop
mov
int
testb
int
out
pop
cmp
cmpsl
jge
dec
push
js
xor
callw
mov
repnz
mov
sub
push
fs
inc
xor
cwtl
dec
mov
mov
or
xchg
fs
es
mov
xlat
pushf
stos
imul
xlat
jbe
sbb
ret
aas
ja
out
cwtl
int
mov
jmp
jne
mov
push
ss
stc
pop
es
nop
sub
sbb
xchg
and
imul
cld
icebp
sbb
int
sbb
xor
push
mov
cvtpi2ps
or
mov
out
pop
mov
jle
sbb
outsb
cltd
jge
sbb
xchg
pop
testb
fldl
dec
mov
cmp
push
mov
popa
push
push
mov
test
movsl
push
push
orl
add
sbb
add
or
bound
jno
cld
rclb
push
mov
bound
in
xor
mov
movb
cli
jne
dec
pop
mov
sbb
jle
push
imul
sub
and
xor
int
sti
fs
mov
imul
inc
jno
pop
mov
push
lods
mov
rclb
inc
push
lds
push
jno
lock
lcall
sub
add
lcall
cmc
aad
dec
dec
jg
push
sub
aaa
jne
cltd
or
add
inc
jp
test
mov
mov
fdivr
mov
xchg
jns
push
repnz
mov
push
push
cmp
pop
xchg
lods
adc
ja
jge
adc
cmp
cmp
cmp
iret
adc
ja
mov
or
lods
je
cmpsb
in
xorl
addr16
lock
addl
ret
dec
rcll
movsb
and
pushf
push
mov
loopne
pop
xor
decl
in
jle
mov
jmp
xchg
pushl
jo
sub
leave
pop
adc
and
sbb
push
xchg
out
push
std
mov
mov
xchg
pop
cmovle
sub
xchg
mov
daa
cmp
xchg
adc
icebp
inc
xchg
mov
sub
ficoms
arpl
outsl
push
xchg
sub
dec
cmpsl
cmc
inc
or
mov
inc
sbb
pop
nop
dec
xor
aam
push
jns
js
and
enter
pop
push
add
jns
dec
out
pop
jno
cmp
adc
jmp
or
fcmovnb
mov
test
xchg
xchg
mov
add
xchg
sub
arpl
dec
push
lret
loop
pop
enter
mov
xor
mov
fnsave
iret
aaa
stos
outsb
faddl
ficoms
pop
iret
xor
xchg
outsb
sub
ret
add
pop
in
lret
movaps
lahf
and
pop
inc
mov
push
and
repz
arpl
shlb
iret
dec
sbb
fwait
dec
in
adc
mov
push
das
jecxz
js
cmp
add
cli
scas
xchg
jne
sub
pusha
mov
std
iret
ljmp
inc
xor
lret
mov
add
pop
shl
sbb
insb
and
subb
das
mov
sbb
jns
xchg
subl
cmpsl
xchg
jnp
jmp
jbe,pt
and
mov
mov
dec
adc
adc
ds
out
xor
push
sahf
ret
sub
xor
insl
bound
mov
mov
addr16
popf
movb
inc
xchg
mov
aas
jecxz
loop
cmpl
icebp
sti
scas
cmpsl
push
shrb
sar
or
std
inc
arpl
int3
mov
inc
ret
leave
mov
push
pop
mov
loopne
stc
lahf
inc
sbb
stc
and
and
mov
mov
sbb
inc
sarl
lock
xor
imul
nop
insl
std
cmpsb
out
cmp
lea
or
sub
dec
test
popa
leave
aaa
in
dec
mov
adc
xchg
sbb
nop
fldt
leave
xor
mov
hlt
aad
dec
xchg
sbb
and
xchg
ret
scas
inc
pop
test
pushf
test
xchg
inc
push
test
jge
push
sbb
or
sbb
js
pop
pop
mov
fimuls
sub
dec
and
in
cmp
je
inc
push
adc
repnz
jo
fdiv
sbb
mov
insb
xchg
sub
or
dec
jnp
cmp
stc
cmp
mov
sub
pop
pop
mov
inc
pop
gs
leave
mov
sbb
add
push
in
and
lahf
jns
call
push
mov
popf
jbe
mov
daa
pop
fiadds
or
jbe
mov
scas
adc
add
inc
sbb
and
jl
lcall
cmp
jb
jo
shll
arpl
jl
jno
push
jb
lods
incb
pop
add
jbe
scas
mov
cmp
push
pop
test
out
push
lahf
xor
xrstors
push
jno
stc
jne
stos
mov
scas
pop
sub
mov
movsl
ror
push
fwait
jno
cmovnp
repnz
xor
cmpsb
loope
cmp
lods
aaa
stos
xchg
adc
call
or
daa
call
pop
pop
ret
jmp
test
xor
sub
int
js
or
xchg
shld
cmp
aas
int3
leave
sub
dec
daa
notl
icebp
movsb
push
movsl
pop
push
movsl
add
dec
inc
aas
js
or
sub
mov
xchg
ret
pop
aaa
xlat
imul
leave
sbb
pusha
and
adc
pop
or
xchg
cmp
rcll
mov
jnp
out
pop
cli
and
dec
je
mov
incb
sub
cmp
sbb
aas
sub
scas
dec
pop
jb
imul
cmp
adc
jg
sbb
add
xor
in
jl
negb
popa
adc
push
pop
push
scas
pop
jge
pop
jl
hlt
mov
loop
ljmp
push
cmp
nop
sub
jb
xchg
xor
or
leave
xor
push
shll
fsubrp
js
jmp
jbe
xchg
enter
mov
sbb
aas
movsb
pop
cld
ds
orb
inc
ret
dec
loop
mov
insl
fldl
mov
jne
inc
xchg
int3
xorb
pop
pop
in
inc
aad
cmp
or
bound
sub
sub
mov
and
lcall
jge
cmp
mul
cld
inc
imul
fwait
loop
stos
cld
fildl
arpl
das
xchg
xchg
mov
daa
stos
pop
jmp
mov
lods
addb
and
jae
mov
pop
addr16
cmp
and
and
jns
jmp
stc
sti
outsb
sub
cmpsb
dec
push
jno
or
pop
clc
jo
pop
js
andb
arpl
jp
xor
xchg
lods
push
xor
js
mov
inc
xchg
dec
testl
push
orl
rcl
mov
mov
negb
pop
aaa
stc
and
and
fst
loop
jle
mov
ret
and
aas
inc
ljmp
rclb
or
arpl
pop
push
sub
in
jns
xchg
mov
add
mov
mov
and
jge
leave
repnz
frstor
pop
in
xchg
xchg
ja
rcrb
mov
xchg
ja
cmpsb
cmp
mov
pop
jg
push
sub
pop
out
jbe
stos
fstl
pop
and
rcrw
fbld
cmp
cmp
mov
call
or
call
loop
cmpsl
xchg
push
pop
lock
mov
pop
xchg
mov
xor
cmp
jb
cwtl
mov
ja
ljmp
mov
cli
ja
jge
dec
sti
inc
sbb
sbb
xchg
jne
mov
mov
gs
jo
inc
adc
out
js
movsb
pop
cmp
lret
mov
mov
psrlw
push
xchg
jge
mov
outsl
cmpsl
sub
jmp
xor
mov
push
dec
rcrl
mov
push
jns
push
mov
inc
inc
adc
cli
movsb
cmp
adc
test
or
pusha
mov
ljmp
lea
out
or
jp
cmpl
mov
cs
insl
xor
repz
push
adcb
std
jmp
stc
mov
jmp
push
lods
mov
pop
frstor
aaa
lfs
and
fcoml
jb
bound
jns
mov
xchg
jno
mov
stos
js
popf
arpl
mov
mov
pop
insl
test
jns
sbb
inc
imulb
sbb
jae
loop
adc
test
xchg
adc
aas
ja
cmp
stc
nop
jl
insl
popa
iret
cmp
or
and
out
cwtl
push
push
or
adc
test
test
mov
lea
jbe
cli
inc
iret
sub
jae
sbb
mov
orb
popa
outsl
stos
std
xor
push
subl
adc
and
sbbb
pop
sbb
das
jl
push
lock
pop
jp
fidivrl
sarb
or
pop
inc
mov
sub
inc
push
mov
leave
push
int
jno
imul
popf
jbe
add
inc
inc
loop
pop
adcb
add
adc
sub
mov
popa
push
push
fs
xchg
push
xchg
ret
push
sbb
mov
pop
xchg
insb
mov
stc
lcall
ss
outsl
sahf
aad
sti
lods
outsb
mov
xchg
push
dec
push
enter
mov
jno
inc
into
fsubrs
or
mov
lock
xor
insb
inc
cmp
imul
mov
outsl
arpl
test
fdivs
test
lret
or
icebp
arpl
jg
inc
testb
mov
aad
pop
adc
xchg
push
sbb
rcll
add
fnsave
ljmp
or
addb
outsb
loop
popa
pop
and
xchg
ja
imul
jmp
push
add
fdivl
clc
lcall
icebp
cmp
popa
mov
daa
xchg
outsb
loopne
insl
push
mov
push
ljmp
cld
cli
adc
fwait
in
push
push
arpl
in
ds
push
mov
pusha
gs
ficomps
and
jecxz
cwtl
rol
popl
pop
mov
js
xchg
and
and
and
test
mov
xor
sti
andl
out
pop
in
pusha
push
lcall
incl
cmp
imul
mov
xchg
loop
cmp
loope
lds
sahf
add
cmp
cli
dec
cmp
sbb
sbb
pusha
mov
daa
and
add
jl
dec
mov
inc
jmp
mov
sub
je
mov
or
gs
pop
adc
mov
mov
sub
divl
lds
xchg
test
add
sub
xchg
dec
ljmp
sub
dec
lods
adc
xor
add
leave
lea
in
sub
negb
add
fistps
cmp
shr
inc
mov
sbb
pop
dec
dec
dec
pop
mov
fldcw
or
rol
pop
data16
in
jge
mov
rcll
sub
and
test
outsl
cmp
mov
cmp
add
xchg
cmp
test
pop
pop
mov
fdivrs
sbb
flds
inc
iret
xchg
pop
cmpsb
xor
out
and
xchg
add
jnp
bound
pop
sbb
pop
daa
pop
push
cld
cmp
shll
test
ljmp
dec
mov
xor
daa
fdivrs
punpcklwd
bound
scas
xor
sbb
xor
dec
cs
test
mov
and
inc
mov
notl
ss
mov
fmulp
mov
inc
out
inc
fsub
inc
sub
in
cwtl
repnz
popa
sub
test
inc
shrb
in
cmpsl
jg
sbb
pop
ljmp
sub
mov
adc
gs
scas
movsb
test
or
fisubl
jg
xor
icebp
dec
mov
jns
adc
dec
movsl
gs
xchg
dec
mov
sub
adc
push
mov
jle
lret
xor
insb
and
push
adc
lods
and
dec
jbe
adc
push
add
push
xor
cmp
jmp
bound
mov
data16
adc
cmp
sub
clc
icebp
mov
hlt
dec
xchg
adc
and
mov
cmp
mov
mov
aam
aaa
jle
xor
std
dec
mov
mov
outsb
mov
aad
adc
scas
mov
imul
cli
dec
les
cmp
adc
ret
mov
jb
xor
pop
inc
rcrl
sbb
push
xor
pop
call
jge
loopne
mov
mov
mov
xor
mov
mov
sbb
jne
cs
cmpl
test
dec
xchg
outsl
dec
into
adc
fs
sub
cmpsl
mov
push
outsb
xchg
les
pop
cmp
mov
xchg
push
incl
fsubs
lds
push
in
xchg
ror
cmp
push
push
dec
dec
call
cmp
ljmp
sbb
pop
fdivp
xor
and
nop
cmp
imul
mov
scas
cmpb
mov
fs
xor
repnz
push
ficoml
aad
jge
inc
adc
cmpsb
arpl
jo
das
mov
mov
mov
arpl
divb
xor
add
lret
aam
push
repnz
dec
xchg
or
push
rcrl
add
add
adc
pop
sarl
mov
bound
das
dec
loopne
jmp
scas
arpl
pop
mov
pop
inc
pop
sub
mov
in
jbe
fisttpll
ss
and
pop
popa
xor
in
cmp
push
xlat
mov
xor
cmp
out
mov
daa
jno
bound
or
test
arpl
pop
mov
out
mov
sub
jbe
pop
out
jbe
or
and
mov
push
or
cmp
mov
loope
iret
imul
aas
dec
mov
xor
xchg
stos
cmpsb
in
or
cwtl
cli
adc
dec
inc
adc
test
imul
nop
xor
inc
dec
ret
or
daa
add
inc
je
xchg
int3
adc
xor
mov
les
pop
ja
sub
inc
pop
int
insb
cltd
insb
mov
jge
mov
push
jg
iret
mov
jo
leave
inc
cmp
and
scas
cmpsb
fdivl
mov
ret
pop
popa
pop
shrb
cmpsl
pop
repnz
xor
mov
arpl
cld
mov
enter
clc
sub
pop
push
push
dec
dec
push
dec
dec
daa
mov
inc
cmp
push
into
jbe
arpl
dec
leave
mov
sub
mov
xor
adc
imull
xor
adc
pushf
sub
fstpl
mov
dec
inc
pop
in
cmc
xorb
clc
mov
adc
es
lret
idivl
adc
mov
xor
add
js
mov
mov
lock
shrb
jo
das
add
jle
inc
adc
into
push
insl
gs
pushf
sub
push
lds
fiadds
and
xchg
shlb
icebp
push
mov
popa
xchg
ret
das
fstpl
dec
add
inc
mov
sbb
cmp
jbe
pop
pop
or
repz
das
out
sbb
pop
pusha
inc
mov
std
insb
imull
insb
in
fcoms
xor
inc
addb
fidivrs
psubq
hlt
fistpl
outsb
ss
lock
add
pusha
mov
jno
outsb
pop
outsl
dec
test
jne
fnstsw
push
in
xchg
inc
push
jl
jns
bound
pop
mov
push
pop
pop
cmp
sarb
inc
push
push
mov
sti
jmp
push
cld
adc
outsb
push
leave
popf
movsb
pop
lds
sub
dec
inc
fs
jmp
fwait
adc
jne
push
ljmp
bound
and
dec
imul
jae
aaa
movsb
cltd
push
push
mov
je
and
filds
gs
jecxz
dec
pushf
int3
scas
push
test
inc
stos
adc
negb
mov
jae
or
rcll
jno
mov
iret
mov
xchg
inc
dec
pop
outsb
jmp
lock
mov
ffree
clc
sub
leave
add
test
mov
xlat
add
fbld
shrl
aas
fs
cmp
inc
rcl
mov
xchg
mov
inc
xchg
sbb
push
xchg
movsl
cmpsb
pop
int
sbb
ds
push
jge
push
adc
and
fnstcw
mov
cmp
sbb
shlb
imul
bound
jle
popf
fwait
pop
dec
cwtl
cmpsl
jns
outsb
xorw
aas
aaa
push
sahf
scas
cmpsl
adc
and
outsb
testb
add
bound
sarl
gs
push
mov
dec
xchg
arpl
push
stc
insl
pop
loope
inc
add
sbb
sarl
das
mov
sbb
mov
and
mov
inc
push
cmp
repnz
cmp
or
mov
adc
frstor
sar
xchg
fnstsw
inc
das
dec
jbe
xor
fs
xor
fs
mov
jle
mov
inc
adc
scas
xor
mov
cmp
mov
insb
outsb
cmpb
mov
adc
stos
pop
popa
int
or
inc
and
sub
sbb
lods
and
fstpl
xchg
bound
pop
outsl
push
sti
xchg
xchg
les
push
out
daa
cmp
mov
test
jb
out
aam
and
xchg
stos
xchg
or
mov
xor
pop
orb
adc
cmp
pop
xchg
jbe
lahf
jp
pop
and
add
xor
lcall
in
mov
sbb
jnp
adc
rcrb
and
lock
test
fldl
mov
dec
push
sub
push
nop
xchg
push
push
inc
cmp
dec
xchg
inc
bound
outsb
jbe
mov
inc
cmp
xchg
imul
inc
push
dec
mov
mov
and
inc
in
push
popa
sub
jmp
mov
fwait
fs
push
add
repnz
and
adc
lods
jae
ss
xor
mov
xchg
ss
ret
push
mov
mov
push
leave
fimuls
and
cli
push
xchg
cmc
jmp
mov
cmp
ljmp
jae
inc
ffreep
mov
enter
mov
mov
dec
loopne
xchg
xor
leave
stc
daa
stos
sub
lret
jp
cmp
bound
andl
in
cmp
mov
popa
jo
xor
jo
incb
xchg
jp
pushf
in
lods
dec
jnp
push
jbe
xchg
call
lds
jl
inc
ficomps
mov
push
jp
aas
push
pop
xchg
inc
mov
arpl
jl
xor
or
iret
lock
int3
popa
mov
lock
mov
mov
jbe
push
xlat
sub
or
or
data16
jbe
in
lret
xchg
push
dec
out
jl
jbe
fdivrl
clc
test
or
pushf
jne
fcomi
xchg
cs
lods
test
push
ret
pop
lret
test
push
cmp
adc
inc
xchg
frstor
and
jbe
push
lea
push
scas
xchg
push
dec
xchg
mov
hlt
pop
loop
sbb
add
xor
out
push
stos
lock
jmp
fdivl
aam
sbb
or
and
imul
das
testl
add
es
loopne
addb
or
repnz
gs
dec
cltd
inc
insl
mul
xorl
adc
mov
lret
dec
lea
push
outsl
je
jg
push
push
outsw
jl
mov
sarb
test
cmp
cmp
inc
mov
scas
in
sbb
imul
test
cmp
sbb
push
or
cmp
pop
into
pusha
adc
in
adc
mov
leave
lahf
orb
pop
cmp
sub
cmpsb
push
dec
clc
cltd
jne
push
sbb
adc
out
mov
push
ret
jg
outsb
xchg
fisubl
add
sub
push
mov
les
cli
in
jo
stos
push
xor
notl
andb
cmp
mov
dec
fcoml
lods
fdivl
lea
mov
and
mov
imul
sbb
daa
or
mov
outsb
mov
dec
dec
or
inc
in
lock
jno
xchg
sub
mov
data16
pop
mov
or
lret
vcvtpd2dqx
push
cmp
jno
imul
jnp
ljmp
push
addb
sahf
das
test
mov
sbb
out
mov
cmpsb
ljmp
fidivrl
ficoms
icebp
repz
dec
ss
sbb
and
jae
adc
jp
test
dec
dec
push
icebp
dec
inc
add
arpl
ja
repz
les
arpl
dec
xor
lock
jge
add
sbb
test
dec
add
insb
xchg
add
popf
jae
mov
jo
les
pop
imul
mov
cmp
ljmp
xor
imul
test
xchg
inc
fmul
lods
idiv
lock
lock
cld
xchg
fchs
hlt
nop
xor
leave
aaa
sbbb
xchg
das
xor
and
lock
arpl
fisubrl
push
xchg
mov
cmp
ljmp
jp
xchg
cmpsb
call
aas
aam
xchg
mov
insb
and
daa
stos
sbb
adc
sbb
lods
jbe
es
cld
jo
aas
movsl
ljmp
and
ficompl
sbb
jo
push
mov
pop
enter
and
shr
ss
cmp
mov
adc
pop
gs
and
enter
inc
jl
cmp
rorl
mov
mov
scas
mov
jae
cli
pop
mov
adc
push
das
fdivl
mov
xor
sbb
ret
adc
push
pop
popf
jae
mov
mov
sbb
jp
sub
and
cmp
mov
push
das
mov
repnz
cmp
lea
ret
and
lock
outsl
aad
or
jns
push
or
arpl
xor
sbb
and
dec
push
out
or
icebp
in
xchg
xchg
das
imul
pusha
jg
adc
pop
add
cmpsb
cmpsl
dec
loope
outsl
pop
sbb
call
push
push
sub
call
mov
or
sbb
out
test
inc
pop
addr16
insl
push
ss
push
aas
or
mov
cld
lds
pop
loope
push
leave
mov
mov
notl
lods
in
mov
jnp
jp
xor
inc
ljmp
jecxz
jmp
cli
mov
sub
xchg
and
adc
mov
mov
mov
cmp
xor
test
jnp
inc
scas
dec
shll
popf
sub
lcall
push
sub
mov
sbb
ljmp
dec
sub
imul
pusha
xor
mov
sbb
sub
loopne
loopne
jle
jp
adc
ret
mov
shlb
movsb
arpl
int3
sbb
clc
es
add
int3
scas
mov
cli
add
or
aas
pushf
inc
aaa
sbb
clc
xchg
cmp
push
mov
mov
mov
push
out
cmp
popf
xchg
jne
cmpsb
int3
idivl
faddl
cmp
pop
add
addr16
cmp
fsubs
dec
xchg
test
imul
bound
aad
xchg
mov
mov
adc
mov
mov
test
jecxz
pusha
and
pop
dec
cmp
int
pop
pop
mov
push
inc
sub
stc
mov
sbb
ret
and
gs
cmp
mov
pop
int
xchg
nop
cmpsb
jo
or
xchg
movsl
push
mov
xor
inc
xor
and
jne
jno
imul
clc
fisttps
mov
mov
mov
ja
sub
cmp
sbb
cmpsb
mov
pushf
xchg
dec
movsb
cmpsb
mov
outsb
and
cmc
dec
je
inc
xchg
inc
adc
or
mov
lcall
dec
sub
shlb
cmp
ljmp
in
pushf
jecxz
pop
fwait
hlt
cmp
sub
lahf
shrl
rolb
rolb
mov
dec
jne
pop
aam
sub
add
mov
adc
sbb
push
jne
sub
jns
sbb
jp
mov
in
xchg
popa
push
xchg
jecxz
adc
add
cmp
ret
ret
movsl
mov
inc
pop
xchg
movsl
adc
call
imul
rclb
ja
pop
fisubl
insb
xchg
inc
jne
mov
sub
inc
pop
das
insb
fstpl
jle
fistps
addr16
mov
gs
js
xchg
push
inc
js
in
cmpsb
inc
and
pop
push
ds
aas
inc
movsl
xchg
fmull
ud1
dec
les
xchg
mul
daa
fsubrs
pop
xchg
mov
aad
sub
push
idiv
sbb
mov
push
nop
and
mov
adc
cmp
mov
xor
out
and
xor
sti
adc
xchg
fidivrl
pushf
dec
jge
test
and
and
loopne
inc
add
xchg
mov
xchg
icebp
inc
fcmovu
insl
gs
daa
scas
adc
jecxz
inc
pop
insb
jmp
ja
inc
ljmp
xor
aam
aad
xchg
mov
mov
mov
aaa
cmp
stc
dec
test
push
cmpsl
cmc
or
cmpb
dec
add
pop
cmc
pshufw
or
xor
push
add
push
jbe
enter
gs
mov
and
jecxz
and
cmp
fmull
shll
lods
sub
push
sti
mov
xor
sysenter
mov
mov
divb
inc
push
jge
lea
mov
cmc
inc
push
xor
mov
lods
cli
mov
sbb
bts
cmp
mov
es
movsl
movsl
insl
iret
jl
push
jmp
cwtl
stos
test
outsb
mov
out
xchg
add
fcoms
dec
mov
enter
lock
jne
lea
mov
xor
mov
jns
lds
fldl
pop
mov
sub
hlt
or
mov
cmpsl
ret
cmp
das
sub
jo
xchg
xchg
imul
push
aaa
and
int3
cmpb
mov
xchg
stos
push
lea
sbb
mov
test
faddl
mov
xchg
inc
popf
aas
cwtd
push
outsl
push
cli
stc
push
pop
cmp
lret
xor
stos
sahf
paddusb
xchg
or
adc
pop
adc
in
xlat
int
and
cmp
fisubs
ja
sarb
push
leave
addr16
push
in
and
xor
lods
inc
xor
push
shll
xchg
in
push
sar
adc
lea
or
xchg
into
and
addb
icebp
cmp
adc
das
add
sahf
bound
sub
das
cltd
inc
add
loopne
xor
xlat
jp
dec
daa
je
or
orb
xchg
data16
and
add
mov
shrl
xor
mov
test
adc
lret
sbb
sbb
xor
or
mov
jl
mov
repz
cmc
mov
mov
dec
xor
xlat
lret
outsl
stos
dec
mov
mov
xchg
adc
pop
dec
movsl
mov
repnz
push
xor
sub
ss
std
xchg
inc
pop
ficoms
jne
inc
push
out
test
jle
lret
lcall
jg
imul
and
sub
stos
push
hlt
in
bound
clc
out
fildl
cwtl
mov
inc
pusha
test
cmp
aas
jb
mov
mov
mov
in
out
aaa
xchg
fimull
jge
out
mov
adc
sub
or
sbb
jmp
sti
inc
sub
leave
jp
mov
pusha
mov
inc
dec
daa
mov
xchg
jmp
lret
cmpsb
lds
les
cmp
daa
xor
js
dec
and
stc
icebp
aas
dec
or
sti
dec
out
arpl
bound
icebp
popa
pusha
sbb
rcrl
arpl
ss
stos
test
jns
sarb
adc
sub
out
outsb
inc
decb
mov
xor
pop
add
push
cwtl
into
aam
pop
cmp
ror
xchg
stos
or
rol
xlat
fs
call
xchg
xor
test
inc
dec
pop
adc
jno
adc
push
pusha
push
xor
and
push
fbld
xchg
jnp
adc
and
mov
sbb
jae
pop
mov
fidivrl
adc
aas
lret
pop
jns
adc
nop
push
cmp
jbe
jno
das
sub
das
xchg
aaa
cmp
and
dec
add
adc
pop
sub
fnsetpm(287
lods
inc
fcomip
scas
mov
xor
and
fcoml
push
xchg
pop
fildl
push
pop
add
adc
push
sbb
movsl
ret
push
lahf
into
jg
jp
push
movsl
clc
sub
test
xor
jb
jns
cld
fildll
movsl
insl
sub
in
jmp
scas
inc
je
jo
iret
daa
movsl
add
in
sbb
sahf
addr16
sbb
sub
insl
xor
cltd
xchg
imul
mov
jnp
movb
sub
dec
data16
add
inc
out
fs
fildll
dec
call
aaa
mov
xlat
std
lods
mov
outsb
in
inc
push
jae
test
xchg
jo
push
sbbl
pop
loope
leave
or
in
mov
fcmove
push
icebp
sbb
jb
in
testl
push
push
js
add
call
stos
aas
inc
inc
mov
sub
loopne
lret
mov
les
and
pushf
mov
lea
pop
cltd
or
jg
fistl
scas
pushf
sarl
dec
enter
pop
mov
std
cmp
clc
sbb
stos
outsl
pushf
sarl
fs
les
inc
outsb
rorb
fs
xorb
gs
lret
and
loope
cmp
in
test
lock
ds
popf
xchg
add
aas
into
icebp
xor
mov
sub
pop
sub
mov
mov
sbb
mov
cmp
fcompl
jno
xor
push
or
pushf
dec
jecxz
ja
adc
aas
sub
jno
cmp
push
or
imul
or
stos
jne
pusha
adc
mov
std
int
and
mov
sti
cmp
xlat
aaa
mov
adcl
ret
jp
ret
dec
imul
inc
mov
in
addr16
cmp
int3
insb
popf
outsb
adc
inc
or
sarb
insl
in
sbb
mov
inc
sub
mov
sub
xor
mov
dec
mov
in
hlt
jge
sbb
ljmp
sub
or
dec
mov
xor
mov
cmc
aam
outsb
int
adc
sub
sbb
dec
push
xchg
add
stos
out
cli
or
push
out
ret
dec
outsl
xor
add
jno
push
adc
lock
xor
xor
gs
clc
pop
test
std
outsb
cmp
out
mov
addb
cmpl
add
daa
aad
hlt
lods
and
push
and
icebp
adc
fdivs
adc
xor
test
fs
outsl
jecxz
rol
push
cld
push
dec
xor
cld
es
mov
loope
sub
ret
repnz
test
push
mov
dec
cmp
out
jne
adcl
dec
aas
add
mov
repz
popa
call
sbb
mov
cld
mov
lds
outsb
dec
mov
jb
cmc
add
cmp
clc
loope
call
inc
mov
xor
xchg
mov
loop
fld
mov
mov
lds
adc
das
out
lret
lret
xchg
pusha
imul
fmuls
leave
inc
mov
out
push
stc
out
mov
cmp
data16
cli
aaa
lods
mov
mov
mov
int
cmpsl
incl
mov
lds
fs
dec
xchg
arpl
hlt
cmp
dec
or
nop
call
leave
punpckldq
jg
inc
push
mov
test
cmc
pop
lcall
je
cltd
mov
cmpsl
cs
daa
jl
lock
ljmp
rcr
cli
sub
cmpsl
jbe
and
sbb
adc
and
sbb
cmp
ljmp
jo
fbstp
mov
dec
ss
mov
roll
push
adc
repz
sub
mov
xchg
xchg
aad
cmpsb
lock
adc
bound
pop
pop
mov
hlt
leave
leave
mov
ret
mov
pop
nop
lcall
pop
or
xlat
dec
sbb
cwtl
or
adc
movsl
push
icebp
jl
jns
jnp
into
jg
cmp
ljmp
push
push
jge
adc
push
in
adc
loop
sub
call
and
and
dec
repz
arpl
outsl
roll
sub
pop
clc
push
gs
roll
call
aam
inc
addr16
loopne
stc
in
sar
imul
ds
fucomip
data16
adc
iret
xchg
xchg
adc
jle
cwtl
popf
and
leave
add
push
rclb
push
in
or
inc
jg
mov
add
jge
stos
es
inc
test
call
cmp
push
xor
fwait
aam
jbe
dec
and
scas
clc
cmp
insb
adc
nop
mov
xor
ja
in
shlb
xor
push
int3
sbb
lret
mov
fcomps
mov
cmpsl
cmpsb
cmp
fwait
testb
and
jns
xchg
sarl
pushf
push
adc
andb
leave
and
sbb
adc
xchg
cmp
push
pop
sub
jno
mov
in
test
or
sbb
jns
mov
sub
ss
mov
mov
inc
cmc
xor
mov
dec
in
cmp
fwait
int
mov
xchg
outsl
or
stc
push
mov
insl
stos
push
stos
push
nop
movl
dec
ja
pushf
or
mov
stc
fdivr
enter
cli
xchg
mov
mov
je
fwait
stos
sbb
out
xor
cltd
hlt
jns
jo
lahf
stos
das
mov
adc
pop
test
jns
mov
ss
rorb
data16
sub
cmc
cmp
xchg
fdivl
inc
sub
sbb
mov
ret
scas
cmc
or
cmp
ja
mov
mov
jp
hlt
out
loope
sub
xor
mov
jb
imul
gs
lods
xor
fisttpll
ss
shll
popa
jbe
movsb
push
lds
mov
mov
add
stos
cmp
dec
and
jecxz
push
pop
std
pop
cs
mov
lcall
inc
nop
es
stc
mov
inc
inc
aas
and
mov
repz
imul
mov
pop
mov
inc
cs
or
gs
xchg
repz
pushf
jo
jmp
jno
sub
das
sub
push
fldenv
pop
xor
mov
mov
sub
lcall
sub
arpl
addr16
xchg
daa
pop
mov
sbb
loope
stos
shll
jge
shl
sti
pop
and
out
xor
mov
frstor
pop
ss
ffree
pop
push
sbb
and
push
adc
add
pop
stc
mov
out
jae
pop
mov
outsb
mov
xor
ja
inc
and
xor
scas
and
mov
roll
aaa
xor
adcl
mov
lret
push
jo
or
mov
sub
add
add
mov
xchg
jg
loope
stos
jmp
lcall
in
mov
fs
or
das
mov
jo
mov
push
das
mov
inc
jle
pop
das
xchg
adc
mov
jle
mov
push
sbb
aaa
out
pop
loope
sub
test
loope
imul
add
push
call
adc
adc
out
or
adc
sti
sub
and
mov
mov
out
mov
adc
arpl
xchg
es
sub
test
fsubl
test
push
push
cmp
sbb
cmpsb
mov
out
xchg
and
sbb
adcl
int
adc
sub
xchg
push
and
jnp
es
clc
rcrb
mov
mov
jnp
or
mov
jne
and
imul
cmpsl
setno
mov
aas
cmp
push
add
jae,pt
dec
inc
cmp
lret
mov
inc
dec
and
aam
out
stc
sub
pop
lea
push
inc
mov
daa
outsb
loopne
bound
cmp
repz
stos
leave
push
cld
lods
hlt
imul
adc
cmpsb
push
shlb
sbb
in
pushf
call
xchg
nop
testl
mov
bound
mov
xchg
out
jle
idivl
jl
hlt
xchg
inc
sbb
stc
mov
sbb
inc
cmp
insb
imul
ds
mov
adc
inc
sub
out
push
imul
idivl
pop
test
mov
mov
pop
inc
cmp
sti
fsubl
mov
mov
out
or
scas
inc
and
mov
movsl
cwtl
fdivl
test
push
add
rorl
and
fs
das
scas
push
xor
and
sbb
sub
aam
fs
je
xchg
sub
int3
jge
inc
push
mov
mov
adc
and
mov
lret
test
imul
gs
jbe
xchg
comiss
enter
pushl
enter
inc
lcall
cmp
notb
and
cld
icebp
add
push
push
rorl
pop
stos
push
inc
xchg
dec
je
fwait
cltd
into
les
cmp
popa
ja
int
sub
push
sarl
jmp
mov
jecxz
scas
adc
cmpsb
and
divl
sub
xor
leave
push
pop
xchg
cs
jnp
xchg
mov
dec
pop
sub
insl
cwtl
push
mov
test
iret
push
cmpb
xor
notb
xchg
jae
popf
data16
xlat
testl
mov
inc
or
xchg
pop
ret
push
outsl
clc
gs
dec
js
pop
or
push
mov
sub
imulb
jnp
xor
mul
int
mov
and
cmp
ror
cmpsl
mov
adc
jg
adc
in
mov
dec
cmp
mov
push
test
loop
mov
xchg
dec
cli
sub
fs
mov
fmuls
or
fcmove
sub
mov
xchg
and
xorb
mov
sbb
xor
in
jb
adc
jno
out
cmpsb
blsfill
add
jne
jp
fwait
sbb
jmp
mov
cli
and
jge
rcr
ss
movsl
cmp
jnp
xor
jns
sub
aaa
aam
pop
inc
and
div
mov
icebp
dec
dec
sbb
jecxz
in
cmp
daa
nop
nop
mov
xchg
outsb
loop
in
dec
lcall
jno
push
leave
imul
sub
loopne
inc
jno
cmp
arpl
lods
fldenv
daa
xor
gs
addl
sbb
aad
push
pop
mov
sub
addr16
aaa
pusha
mov
jno
xchg
pop
jae
add
popa
lret
lret
test
aad
dec
adc
add
js
and
xchg
bnd
jp
imul
fildll
gs
stos
fwait
pop
cmp
mov
enter
push
push
push
inc
call
dec
dec
cmpsl
std
imul
jnp
insb
mov
push
jmp
gs
mov
push
pop
push
lods
lea
mov
sbb
in
jg
xor
mov
pop
mov
xchg
sbb
std
cltd
pusha
pop
pop
test
mov
sbb
sub
sbb
pop
mov
lods
xor
dec
inc
popf
call
mov
jb
adc
or
push
das
xor
cmpb
mov
or
sub
call
or
das
add
mov
cmp
xchg
aad
mov
jp
daa
cmp
xorb
inc
in
ficomps
shrb
pop
or
pop
sub
add
inc
lret
jae
shll
cmp
and
mov
mov
repz
shrb
pop
and
jbe
or
jns
daa
imul
xor
mov
sbb
push
push
xor
addr16
orb
cmp
or
mov
pop
inc
jno
xor
in
sbb
imul
in
outsl
or
mov
into
mov
stos
xchg
adc
sbb
cmp
lods
pop
dec
in
in
sub
das
div
mov
lcall
xchg
mov
aad
cmpsb
aam
testb
push
xchg
adc
sbb
jg
enter
fs
das
xor
scas
xor
hlt
xlat
jmp
pop
mov
idivl
add
jnp
icebp
add
fcompl
mov
jl
mov
cltd
mov
xlat
mov
sbb
xor
jbe
pop
or
dec
in
inc
fwait
pop
sub
nop
das
ja
fisttps
mov
insb
xor
lds
mov
ds
cmp
push
mov
push
enter
movsl
add
lcall
outsl
adc
cwtl
lods
outsb
xchg
das
icebp
outsb
xor
push
jns
jle
loop
stos
arpl
dec
mov
xor
add
and
jne
jns
ds
or
jecxz
jge
inc
fstpl
and
cmp
ds
stos
pop
xor
test
ss
mov
in
mov
jbe
pop
ja
loope
pop
and
jge
outsl
and
leave
pop
out
or
adc
mov
pop
lcall
mov
sub
addr16
sub
jg
sti
movsb
jmp
dec
cmp
jmp
xor
pop
inc
xor
jmp
push
xor
out
mov
dec
cmc
cmp
scas
and
jge
dec
insb
int
push
mov
xor
test
cmpsb
test
jno
jae
xchg
mov
imul
ljmp
jb
pop
adc
mov
pop
xor
in
repnz
adc
in
js
jmp
or
inc
test
and
push
outsl
test
test
lds
jno
dec
in
xchg
bnd
outsl
es
outsl
and
pop
mov
or
and
push
je
mov
mov
mov
push
mov
ja
in
mov
jo
mov
mov
and
xchg
jbe
insl
mov
mov
mov
and
pusha
pushf
jg
leave
les
aad
xchg
repnz
sbb
test
test
out
push
mov
idivl
out
inc
roll
xor
inc
adc
mov
mov
push
mov
js
mov
push
jbe
cwtl
mul
xchg
cld
outsb
xchg
xchg
lods
roll
xor
mov
cmp
mov
lcall
push
xor
dec
pop
cmova
sbb
inc
fwait
cwtl
xchg
jnp
call
outsb
lods
je
fdivs
and
jae
sahf
push
insl
pop
push
bound
xchg
mov
mov
cmpsl
scas
js
jle
test
arpl
jne
mov
add
in
dec
push
xor
lahf
dec
xor
popa
inc
add
mov
and
or
xchg
inc
lea
out
cmp
mov
mov
pop
notb
mov
lcall
arpl
inc
nop
adc
jae
xchg
movsb
pop
mov
repz
inc
mov
push
sbb
mov
aaa
jbe
jns
shrl
and
addr16
cmp
pop
or
push
inc
inc
xor
popa
leave
dec
adc
adcl
jo
jnp
push
xor
cmp
jns
pusha
cmpsl
add
cmpsl
jns
push
adc
mov
pop
out
lret
mov
iret
pop
shlb
or
mov
jmp
jae
in
int
push
stc
test
test
mov
daa
test
test
inc
mov
cmp
mov
xor
add
cmp
imul
icebp
mov
mov
dec
enter
jno,pn
jo
mov
test
maxps
mov
inc
jle
lahf
lods
lret
mov
insb
cmc
adc
mov
stos
jne
gs
push
insb
adc
xor
jl
nop
sub
add
cmp
testb
subb
inc
xchg
pop
cmp
insb
mov
movsl
adc
push
xchg
cwtl
dec
aam
push
xor
xchg
lock
jmp
enter
les
in
std
cmp
test
das
push
dec
and
test
adc
scas
adc
scas
mov
cld
test
inc
popa
adc
mov
out
lea
lds
mov
and
jp
ret
pop
dec
out
and
or
jl
or
std
pop
pop
jge
rclb
jecxz
fsubs
sub
push
cpuid
std
leave
xchg
es
and
mov
xchg
mov
pop
sahf
dec
movl
jb
xchg
or
cmp
xchg
pop
xor
add
fwait
mov
adc
jno
jp
xlat
and
das
cmpsb
jl
mov
insl
push
in
test
xor
rorb
insl
jae
data16
push
and
mov
movb
xchg
push
dec
cmpsb
movsl
je
stc
inc
stos
das
adc
outsb
in
repnz
adc
xchg
insb
xchg
imul
pushf
int
ds
sahf
add
sbbb
push
and
pop
fmull
sbb
mov
add
push
scas
aad
pop
push
pop
jo
cmp
sarl
adcl
mov
jle
inc
xchg
test
cmp
js
inc
je
loope
hlt
inc
daa
mov
ds
fwait
loopne
xchg
or
iret
lea
movsl
std
push
mov
xor
dec
lods
inc
insb
push
xchg
pushf
decb
xchg
mov
add
push
add
mov
adc
cmp
jmp
in
int3
out
xchg
cs
push
out
shlb
xor
xor
decb
leave
jmp
loop
cmpsb
ret
mov
inc
js
int
mov
mov
lea
int
lods
std
dec
mov
je
inc
outsl
addr16
jecxz
sub
testl
push
or
insl
sti
out
xchg
pop
mov
cmp
out
movsb
xor
sahf
pop
cmc
aaa
incb
ror
add
push
cmp
popf
cmp
enter
sub
rolb
xchg
mov
cmp
scas
xor
jne
cmpsb
pushf
imul
pop
push
mov
cmp
jns
lret
mov
sahf
and
xor
inc
ss
xor
xor
out
into
push
ds
dec
push
jl
out
outsl
push
xchg
data16
sub
dec
xchg
rclb
pop
sti
imul
adc
push
hlt
push
pusha
sbb
jmp
stos
mov
in
push
stc
dec
mull
mov
mov
sub
mov
loopne
ret
jno
jle
jb
or
mov
sub
xchg
or
adc
add
pop
push
ss
push
mov
adc
mov
pop
mov
mov
mov
into
idiv
pushf
adc
in
lar
push
jb
pop
pushf
sbb
push
inc
xchg
hlt
xorb
dec
call
dec
push
int
lock
cs
outsl
adc
jno
sbb
xchg
pop
sub
je
lcall
mov
jge
pop
lds
jg
lret
in
push
call
jle
test
sbb
jmp
jae
fisttpll
xor
fwait
ret
push
push
lods
pop
mov
mov
mov
mov
push
adc
int3
mov
pusha
nop
inc
das
xor
xor
mov
pop
daa
mov
movsl
mov
xor
push
adc
sbb
xor
xor
and
dec
out
mov
push
loope
repnz
sahf
mov
gs
lea
sbb
jno
or
enter
cwtl
cmp
cmpsl
jg
mov
lds
sub
jae
sub
les
pushf
xchg
stos
dec
lret
and
cli
or
mov
push
clc
cld
lds
jl
ret
mov
daa
mov
aad
popa
jne
neg
mov
lods
in
push
mov
inc
sub
pop
imul
addr16
pop
inc
sub
mov
mov
adc
jge
or
into
mov
cli
xchg
clc
orb
adc
xchg
jne
pop
pop
aas
stc
jno
mov
mov
pop
aaa
movsb
and
cmp
sbb
pop
adc
sbb
jecxz
mov
jp
add
loopne
in
adc
mov
jns
xor
add
adc
dec
jle
xor
or
inc
cmc
xor
jl
mov
insl
mov
mov
push
jbe
sbb
aaa
repnz
jle
cmp
data16
lods
cmpsb
push
inc
mov
incb
aam
adc
inc
int3
pop
test
das
push
pop
gs
stc
xor
cmp
insl
mov
xchg
ljmp
pop
or
xlat
jb
out
fs
je
imul
das
in
test
lret
pushf
push
jae
fstpl
mov
xchg
out
aam
jae
add
fisttpll
push
pop
pop
push
out
aad
push
xor
xchg
jbe
sub
inc
idivl
add
outsb
stos
jle
dec
mov
adc
mov
or
inc
jnp
mov
in
fldenv
or
fsubrp
xor
sbb
sbb
cmpsl
sahf
fbld
pop
fnstenv
cmp
mov
repz
je
outsb
jno
test
gs
jmp
jns
dec
call
daa
sahf
sarl
sbb
mov
orb
pop
add
je
push
inc
subl
pusha
mov
out
in
incb
imul
mov
ret
scas
pop
cmp
es
mov
xor
sbb
lahf
inc
scas
js
xor
into
adc
idivl
addr16
lods
push
adc
cmpsb
movsb
cmp
int3
push
push
push
ja
dec
inc
jae
les
jne
into
sbb
xlat
cmp
xlat
and
adc
fmuls
xor
jle
push
lds
data16
xchg
jl
mov
rcr
sub
js
jb
notl
and
pslld
mov
add
fwait
ja
test
fs
mov
jmp
xchg
and
mov
mov
cmp
mov
pop
jge
dec
stos
fnstsw
adc
out
xor
cmpsb
sub
inc
insl
test
icebp
in
cmpsb
lods
fucomip
je
jns
shll
int3
mov
sbb
inc
mov
lods
cmc
fiadds
cld
punpckhwd
mov
aaa
inc
cltd
adc
jno
jge
mov
jbe
ficoms
and
xor
jmp
rorb
std
inc
pop
push
push
cmp
nop
inc
outsb
add
nop
jbe
mov
or
icebp
repz
cwtl
test
shll
cltd
and
adc
dec
xchg
pop
sub
mov
push
test
xchg
mov
xor
jns
xor
jge
jge
jge
xor
aaa
lcall
pusha
fs
cmp
pop
cmp
mov
cmp
jo
stc
repz
es
test
fisubrs
cmpsb
sbb
js
jns
subl
pop
jg
loope
dec
cld
ja
dec
cmp
int3
sub
jmp
lret
addr16
or
adc
in
push
sub
movsb
push
xchg
sub
xchg
jmp
dec
pop
fimuls
mov
aaa
adc
jp
ljmp
hlt
push
ljmp
and
jns,pt
scas
push
stos
adc
lds
cmp
dec
push
mov
das
sbb
inc
adc
inc
sbb
out
push
jbe
scas
imul
xor
les
lret
inc
jne
cld
cld
popa
jl
cld
out
mov
sub
loope
das
xchg
shrb
jmp
movsb
and
ds
and
out
mov
pushw
push
or
cmp
out
insb
pushf
pop
test
movsl
stos
mov
out
or
push
mov
int
push
cmp
stos
xor
scas
dec
je
mov
mov
lods
out
int3
xchg
addr16
cmp
adc
fbld
or
jb
add
cmp
pop
push
mov
mov
xchg
mov
pop
imul
mov
jmp
xor
scas
jle
sub
and
dec
push
out
mov
xchg
pop
pop
pushf
or
lcall
nop
movb
mov
fisubrs
cmp
imul
js
jg
mov
jl
pusha
pop
and
xlat
call
cmpb
mov
push
mov
out
rorl
rcll
faddl
ss
ss
sub
sub
in
lds
in
xorl
or
pusha
xor
xchg
ja
jg
ja
dec
lahf
jbe
jae
aad
test
sbb
xchg
fiaddl
outsl
add
sub
pop
std
push
fnstenv
add
ja
flds
adc
jne
pop
clc
xor
call
fildl
loope
xor
or
mov
cltd
adc
testb
lahf
mov
sbb
lret
lds
push
push
scas
leave
popa
das
mov
xchg
icebp
push
insl
loop
sbb
and
lods
popa
mov
pusha
testl
outsb
insl
notl
sahf
and
cmp
push
loop
cmp
dec
mov
jo
into
and
and
lret
gs
xor
xchg
imulb
dec
add
pop
mov
sbb
cmp
dec
jge
mov
push
rclb
enter
and
and
mov
push
into
movsl
mov
out
or
cmpsb
es
or
addb
jl
jns
cmp
pop
hlt
xchg
inc
leave
mov
push
je
mov
pop
sub
ret
pushf
pop
sub
imul
inc
dec
push
pop
jno
int3
mov
sub
mov
cli
adc
repnz
fnstsw
inc
and
pop
mov
mov
and
cmp
jle
data16
pushf
cmp
jle
inc
mov
test
aam
inc
xor
stc
and
sbb
mov
sub
sub
pop
movl
jb
jae
xchg
mov
mov
jge
rorb
inc
dec
push
lds
lret
test
shll
pushf
mov
pop
or
lret
pop
pop
sbb
fsubrl
in
aas
add
push
imul
adc
ds
test
test
cmp
jl
repnz
in
bound
sahf
imul
fldcw
mov
xor
rolb
out
fs
mov
jno
xor
adc
xlat
mov
out
in
mov
aas
inc
dec
int
adc
cltd
mov
sub
push
cmpsl
ss
xchg
jge
jmp
daa
jbe
mov
scas
adc
pop
cmp
call
ljmp
dec
mov
sub
add
push
jle
xor
jns
inc
addl
push
popa
sub
cmp
in
xchg
bound
int3
jne
push
jp
add
xlat
cmpsb
cmc
pop
cmpsl
adc
or
lret
idivl
push
ljmp
fmuls
jae
pop
pop
mov
or
inc
adc
loop
daa
out
fcmovb
mov
xchg
arpl
push
fld
pushw
repz
push
or
in
pop
add
shl
das
xor
xorb
pop
das
stos
jmp
xor
enter
sahf
das
inc
jno,pt
and
mov
sub
mov
sbb
mov
rclb
add
int
lret
or
in
xor
into
and
loopne
les
dec
mov
ficomps
fists
mov
cli
mov
scas
aad
negb
mov
dec
xchg
addr16
add
jae
push
insl
xor
mov
fidivrs
inc
flds
lea
jb
cwtl
sti
mov
aaa
test
cs
mov
mov
mov
mov
shlb
pmaxsw
pop
inc
lcall
mov
sahf
mov
test
xor
arpl
jecxz
stos
and
rcrb
or
adc
jge
lds
mov
test
inc
jge
dec
pop
enter
cmp
pop
pusha
adc
sbb
adc
enter
test
inc
js
std
stc
rorl
jnp
mov
test
cmpsb
aad
clc
and
push
inc
scas
or
adc
fwait
aam
jecxz
imul
mov
xor
sub
sub
push
ss
scas
imul
jmp
fcoml
inc
mov
iret
sub
mov
xchg
cmpsl
mov
xchg
pop
orb
jb
xor
xchg
cmpsb
jle
cmpsl
lahf
pop
or
mov
aaa
gs
inc
jl
jmp
ret
je
lcall
fdivrs
cmp
push
test
xchg
sbb
sub
fwait
repnz
mov
and
adc
sub
mov
sub
push
and
xor
jnp
and
stc
jb
push
shl
mov
jb
jl
cmp
in
daa
xchg
dec
pop
into
js
lea
fwait
mov
jbe
inc
pop
xor
scas
sub
ret
ja
popf
scas
js
mov
mov
sub
dec
mov
jno
sbb
cmp
add
repz
mov
stos
pushf
mov
xchg
pop
popa
std
push
mov
jne
lods
mov
xchg
in
sbb
mov
nop
in
push
add
jp
pop
and
adc
push
neg
sbb
xor
lret
pop
push
xor
xor
fs
cmp
imul
or
sub
jb
das
enter
cmp
and
ss
xchg
frndint
aaa
fmul
ret
mov
mov
xchg
daa
push
orl
mov
xor
je
mov
mov
in
or
dec
adcb
sarl
lock
xchg
jmp
addr16
movsl
dec
sbb
push
pop
or
dec
jno
pop
imul
negb
iret
in
iret
je
rorb
sti
jp
cmp
in
and
data16
les
mov
sarl
imul
add
and
pushf
dec
sub
lods
and
inc
inc
je
pop
add
cs
mov
xchg
insb
jae
js
out
sbb
imul
mov
jnp,pt
sub
aad
mov
pop
aas
jle
adc
cmp
and
mov
mov
enter
test
mov
jne
test
insb
pop
push
jbe
orb
dec
inc
adc
mov
out
ljmp
jl
mov
mov
insb
mov
hlt
mov
stc
fbstp
sub
push
sub
push
sbb
pop
pusha
inc
addr16
icebp
pop
jmp
xor
xchg
mov
pop
cmp
lods
jge
bound
sbb
pop
or
stc
das
or
daa
lcall
cmc
sub
ret
dec
push
loope
sub
enter
cmp
xor
dec
mov
fistps
dec
imul
pop
div
xchg
imul
lods
inc
inc
adc
inc
xor
inc
pusha
sub
cmp
jns
push
inc
addr16
or
out
mov
popa
repz
fnsave
or
fs
jecxz
arpl
push
addb
jle
aas
jb
loope
xchg
fsubs
ja
in
jae
jbe
cmp
xor
jnp
mov
aaa
das
divl
rcrl
cmp
mov
int
push
and
js
ret
add
movsl
and
mov
and
dec
gs
outsl
test
fadd
daa
or
incl
fidivrl
or
out
sub
fcoml
jl
jl
test
and
mov
loop
push
xlat
loope
sbbl
cmp
lods
sbbl
and
scas
das
mov
xor
pop
xchg
push
call
cmp
into
xchg
js
rol
cltd
pop
jb
ds
xor
jo
stos
into
subb
or
bound
add
adc
push
dec
sarl
adc
sub
repnz
adc
or
mov
popa
pop
jp
lods
aad
pusha
sets
nop
ss
shll
pop
int
jge
sbb
lds
inc
insl
dec
xor
jae
popl
mov
push
mov
mov
mov
sti
mov
dec
es
xor
push
adc
mov
ljmp
js
popf
dec
ret
push
inc
lret
xchg
cmpsb
imul
mov
dec
insb
rolb
cmp
enter
loopne
add
mov
out
dec
mov
aad
cmp
add
dec
xor
and
aaa
sbb
push
jae
jne
jnp
or
push
mov
bound
push
xor
jp
cltd
lods
inc
fldl
icebp
pop
outsb
jb
lret
dec
xor
je
pop
gs
or
push
vmovdqa
cmp
aad
jae
sbb
mov
leave
jecxz
insl
pop
jl
push
imul
mov
jl
js
ffreep
xor
add
inc
stos
aaa
out
pop
jg
test
mov
add
outsl
jb
and
nop
xor
inc
xlat
popf
in
cmp
lods
mov
mov
jge
push
adc
shll
push
jne
jno
lea
push
dec
cmpsb
out
jmp
xor
sub
and
pop
pop
mov
or
dec
aam
inc
push
test
jo
xchg
mov
inc
mov
pop
push
and
outsb
pop
sub
dec
sbb
arpl
xchg
adc
or
outsl
shrl
shll
cs
xchg
iret
push
jno
test
je
repnz
xor
jp
sahf
ja
sub
mov
mov
test
sbb
jae
jns
leave
stos
sarb
adc
mov
shrw
ficomps
and
rorl
ljmp
ljmp
xor
sbb
fstpl
repz
sbb
sub
push
xor
pop
adc
inc
push
sub
push
idivl
and
rcr
mov
push
fwait
out
push
push
pop
add
pop
jp
xchg
fisubs
push
push
call
popa
dec
out
cmp
inc
or
mov
dec
mov
or
push
fdivs
cmc
cmc
lret
mov
int3
je
in
push
pop
scas
push
hlt
push
xor
push
loopne
insb
jo
push
lret
jecxz
leave
std
add
dec
dec
jecxz
int3
push
lea
ja
mov
notl
lods
mov
mov
sbb
mov
cwtl
sbb
mov
push
lea
sbb
outsl
addr16
outsl
leave
jns
or
jnp
fimull
in
sub
out
or
out
pop
adc
shrb
aad
xchg
outsl
ljmp
test
aam
cmpsb
fidivl
pop
inc
ljmp
insb
jo
es
fucomi
cmp
sub
sbb
shll
pusha
ss
or
jle
testl
mov
cvtdq2ps
adc
lock
or
inc
dec
push
sbb
outsb
ja
push
fdivrl
negl
imul
andb
cwtl
xor
clc
jecxz
mov
pop
jae
xchg
add
insl
push
pop
mov
ja
pop
push
inc
dec
cmp
sti
jg
lds
lcall
iret
cmp
cmpsl
mov
ret
pop
int3
sbb
test
xor
les
pushf
xlat
mov
add
pop
push
movsb
out
and
bound
lret
pop
mov
xchg
or
in
pop
mov
add
sbbb
repz
out
stos
lret
sub
and
mov
or
jne
icebp
lods
mov
adc
mov
adc
pop
lahf
sarl
lret
rorl
and
dec
enter
and
cwtl
lahf
push
sbb
loopne
mov
lods
adc
in
test
ficoml
insb
mov
jl
out
and
imul
sarb
mov
outsl
fcompl
aaa
cmp
cmovnp
in
xlat
cmp
mov
stc
jno
stos
and
sub
out
dec
std
jle
in
fnstenv
ss
sbb
mov
inc
inc
inc
mov
mov
push
push
movsl
ud1
repnz
xor
sbb
mov
mov
imul
push
push
xchg
cmp
repz
cltd
adc
fdiv
mov
stc
push
cli
jnp
insl
cli
pop
test
mov
ror
ds
out
or
or
sbb
ror
out
inc
xchg
lcall
jae
andb
inc
add
adc
push
cltd
sbb
cmp
cmp
arpl
xor
pusha
in
sbb
dec
xchg
out
xchg
pop
push
sbb
dec
imul
cltd
and
popf
ret
lcall
mov
daa
cmp
fsubrl
outsb
mov
xor
inc
inc
rorl
dec
add
pusha
mov
ret
mov
ja
jnp
inc
gs
push
push
and
and
jge
jnp
test
mov
cmpsl
imull
jo
mov
test
pop
jae
imul
fists
insb
popf
out
jle
adc
scas
cs
stos
mov
andl
inc
fs
xchg
inc
jne
jnp
or
cmpsl
daa
scas
loopne
andb
jecxz
mov
sbb
push
dec
ja
jb
cwtl
cmp
mov
jae
fimuls
dec
out
pop
cmpsb
dec
cmp
je
lret
fwait
mov
inc
jo
js
jb
mov
mov
jno
in
jae
add
mov
jne
test
add
sar
aad
mov
or
lods
insb
sub
xchg
sbb
cmp
mov
js
mov
mov
stos
sub
cld
push
pop
xorl
call
cmpsl
add
inc
cmp
jg
jno
jbe
mov
mov
or
js
popa
jne
lock
push
cli
repnz
lret
fiaddl
add
lods
xchg
inc
adc
sub
sbb
adc
mov
std
add
push
sbb
xchg
cmp
mov
imul
pop
mov
std
popf
sti
fs
jecxz
and
sti
pop
or
add
xlat
fstl
test
inc
add
mov
fistpll
mov
inc
add
mov
sbb
push
loop
aad
andl
or
popa
and
inc
cmp
adc
push
pop
test
pop
adc
inc
inc
jbe
lds
cmp
testb
lods
gs
lds
cmp
outsb
jg
aad
in
out
jae
subb
mov
pop
lret
cmpsl
popf
jae
xchg
hlt
push
add
or
adc
adc
adc
or
or
stc
stos
add
sbb
or
sub
xchg
aaa
sbb
push
repz
and
inc
dec
xchg
fimuls
push
push
jl
loop
xchg
and
test
pop
sub
and
sub
sub
mov
mov
push
lods
jmp
aas
mov
dec
cltd
repnz
test
adc
xchg
mov
repnz
and
add
or
inc
pop
mov
mov
mov
sub
ss
xor
add
and
mov
jae
ret
xor
iret
jno
lret
and
call
inc
mov
mov
push
inc
data16
mov
int3
mov
push
imul
stos
adc
xchg
xor
cli
aam
cmp
sbb
sub
std
ds
dec
mov
sahf
call
out
dec
jnp
aas
or
mov
lcall
pop
jno
lret
int
mov
mov
jno
aad
push
pop
xor
out
inc
or
pop
mov
push
lds
pusha
jge
es
out
shll
in
push
jbe
imul
mov
pop
jnp
mov
aaa
push
decl
push
cmp
pop
pop
aaa
ficomps
mov
stos
dec
aas
insl
ffreep
leave
test
mov
and
outsl
lea
aam
or
popf
les
xorl
cmp
movsl
sbb
mov
shrb
rcr
js
mov
mov
sbb
bound
clc
in
sbb
cli
ficompl
scas
dec
pop
daa
je
fcmovnbe
jbe
xchg
cmc
xchg
pushw
jmp
add
mov
imul
outsb
call
imul
jle
xchg
fidivrs
shrb
inc
icebp
jne
push
adc
ret
inc
push
mov
jne
jo
xchg
and
or
ds
movsl
push
dec
imul
sub
xchg
aas
divb
jb
sub
and
pop
dec
or
cmp
mov
cmp
fs
fistpll
mov
sub
insl
adc
adc
dec
scas
cmp
sub
pusha
jp
mov
or
sbb
pop
pop
rcl
adc
push
adc
mov
dec
mov
mov
les
and
cld
jno
dec
cmp
mov
push
jle
fisubrs
xor
rcr
sbb
push
cmp
add
outsb
or
gs
add
aas
xor
sbb
test
push
inc
cld
xchg
sbb
daa
pop
cmp
and
mov
cmpsb
fimull
ss
xchg
stos
scas
fdivs
push
mov
insb
add
insb
fs
ficoml
push
les
jmp
and
mov
sbb
sahf
xor
shll
lcall
fldlg2
xor
gs
cmpsb
jae
dec
cli
dec
or
lods
or
mov
clc
lcall
jg
loope
clc
in
sub
popa
mov
adc
das
pop
lcall
sub
push
inc
js
imul
cmpsl
pop
mov
add
mov
cmp
mov
inc
insb
sbb
sub
test
cmp
sti
sub
inc
push
push
inc
cs
movsb
cmc
pushfw
int3
lock
rcrl
push
setbe
ds
push
in
push
paddq
and
cmpsb
mov
xor
mov
adc
adc
out
cmp
fcmovne
stos
mov
jg
jecxz
stos
jne
rcrl
stos
xorb
cs
jmp
mov
pop
xor
insb
cwtl
add
sbb
stos
xchg
sbb
shl
insl
and
mov
pop
enter
stos
xchg
mov
loope
js
insb
inc
push
mov
or
fstps
jl
in
insb
stos
pop
loopne
cli
push
jns
js
mov
pop
adc
sbb
xlat
movsb
sbb
inc
hlt
dec
in
cmpsl
push
xor
mov
inc
mov
shlb
dec
inc
pop
jne
dec
jl
imul
fcomps
stos
test
push
xor
lds
adc
aas
pop
andl
xor
andl
add
out
jg
add
cltd
xchg
inc
sbb
cld
ds
push
subl
push
dec
jle
nop
shrl
fnstsw
std
stos
mov
cwtl
mov
mov
rcrl
pop
movsb
loop
push
stos
cli
shlb
shrl
add
or
stos
xor
pop
cmp
push
pop
mov
dec
cmp
pop
sub
std
stos
ja
lods
mov
arpl
or
aam
rcl
insb
mul
push
mov
test
and
mov
js
sbb
outsb
test
lret
xchg
jmp
inc
sub
sarb
dec
pop
les
mov
jg
seta
pop
ret
add
or
mov
or
sub
jno
imul
jg
add
push
fs
cmp
sbb
sar
js
pusha
mov
push
add
jmp
push
adc
mov
push
xchg
stos
bound
addl
stos
push
fldenv
ror
pop
push
add
cwtl
mov
mov
fcmove
out
pusha
popf
jmp
les
pop
jle
shrb
arpl
push
stos
mov
fstpt
insb
sbb
das
push
sbb
xchg
push
jno
cmpsb
les
push
dec
icebp
adcb
pop
imulb
adc
mov
fs
xor
jle
push
scas
jns
idivb
jg
pop
cmpsl
sbb
jne
cwtl
rolb
inc
jg
jg
cmpb
dec
addr16
mov
mov
fsubrs
out
mov
test
mov
in
pop
jp
mov
stos
lods
mov
test
cld
rcr
test
pop
int
jno
jg
jae
fs
add
xor
and
mov
nop
int3
les
and
insb
push
xchg
mov
sbb
or
popf
xor
stc
or
mov
dec
stos
outsb
pop
ja
imul
popf
subl
stos
push
orb
fxtract
jb
js
add
or
jle
insb
sbb
aaa
iret
adc
xor
sbb
push
inc
outsl
cli
aas
lods
push
insb
movntps
adc
aam
testb
leave
push
xor
jg
cmp
lea
nop
pop
ja
pop
xchg
stos
movsb
js
inc
sbb
mov
sub
data16
f2xm1
dec
jl
pop
lea
call
mov
cltd
add
insb
rdmsr
movsb
xchg
mov
test
sbb
insl
outsb
nop
xor
ret
js
adc
lret
test
popf
push
or
sub
scas
and
cmp
or
pop
out
push
adc
adc
es
mov
sbb
sub
arpl
add
stos
rcl
popf
xor
insb
int
inc
xchg
lret
sahf
push
in
out
loop
dec
in
jmp
lret
pop
dec
jp
jnp
pop
pop
jl
push
bts
pop
jbe
insb
sbb
adc
push
pushf
test
clc
push
aaa
sbbl
cmpsl
scas
xchg
inc
outsb
push
lds
das
dec
pusha
pushf
out
inc
decl
sbb
jbe
cwtl
imul
jl
pop
mov
sub
scas
popa
dec
push
adcl
imul
pop
and
xlat
add
cmpl
flds
pop
mov
outsl
xchg
sbb
movsb
mov
push
cltd
lds
jp
rcll
cmpsb
pop
stos
popa
dec
hlt
adc
mov
cmpsb
push
sbb
fistl
xor
hlt
push
pop
and
pop
dec
enter
jge
imul
cmc
inc
ds
jl
aaa
mov
add
push
and
add
outsb
hlt
fwait
outsl
sbb
push
adcb
push
fs
cs
mov
ret
fs
ja
push
push
push
sbb
sbb
enter
das
cltd
out
loopne
test
add
sub
popa
pop
movsb
and
adc
sub
bound
aaa
fucom
jo
or
cmpsb
xor
and
jae
pop
pushf
dec
and
je
adc
push
cmpb
std
les
add
add
push
outsl
popf
push
inc
push
jnp
shlb
loope
scas
movsl
out
xchg
xchg
mov
aas
cmp
cwtl
push
outsb
sbb
fs
jne
mov
dec
stos
xchg
mov
sbb
xor
mov
jno
out
sub
movsl
mov
pop
and
mov
push
push
and
stc
pop
addr16
mov
out
sub
lret
out
or
fldenv
adc
xchg
clc
push
jns
jle
inc
inc
adc
fimuls
pop
mov
jecxz
sbb
cmp
push
sub
rclb
sub
adc
in
frstor
push
inc
shll
sbb
pop
adc
push
out
lahf
and
xchg
hlt
cmp
xor
push
ljmp
pop
rcrb
sbb
jmp
or
mov
mov
leave
xchg
jmp
cmovae
cltd
cmp
jbe
add
pop
outsl
xlat
add
arpl
shr
sub
dec
push
cmp
pop
mov
mov
dec
loope
push
pop
lods
sub
sbb
push
adc
sbb
aas
fs
rcrb
adc
mov
loop
cwtl
dec
xchg
push
das
xor
negb
pusha
lock
inc
mov
inc
insl
sub
inc
jmp
aas
sub
fstpt
push
sub
and
imul
sub
cmp
jno
adcb
fdiv
xor
leave
loop
adc
inc
gs
neg
push
jns
cmp
lea
outsb
mov
mov
loope
imul
pop
ss
clc
pop
xor
jle
cmpsl
cmp
ret
aam
sub
inc
sub
imul
popf
in
stos
cmp
negl
and
jns
push
sub
or
sbb
pop
xor
aaa
loope
out
sub
mov
aam
mov
imulb
add
outsl
xor
sbb
dec
jecxz
sub
inc
or
adc
pop
lret
sbb
adc
imul
push
cmp
mov
pop
iret
clc
cmpl
pop
push
ja
cmp
pop
ret
lcall
mov
mov
sahf
loopne
and
or
pop
fadd
outsl
push
mov
jl
sti
mov
dec
imul
popa
fst
movsb
add
sub
lcall
pop
jb
mov
cmovbe
outsb
negl
lret
icebp
inc
cmp
add
pop
push
pop
pop
cmp
cmp
add
loopne
mov
lcall
cmp
ljmp
hlt
cmpsl
or
imul
xchg
inc
push
out
dec
mov
dec
jg
push
and
cmp
jae
je
int3
out
fmull
jae
test
add
lahf
data16
mov
and
in
adc
xchg
out
pusha
push
xor
sbb
mov
and
mov
lods
test
gs
jmp
mov
aam
add
pushf
repnz
pop
push
pop
mov
leave
mov
pop
jecxz
ljmp
jl
and
inc
mov
dec
pop
inc
mov
pushf
adc
lods
cmp
rclb
push
repz
addr16
mov
jg
movsl
dec
push
mov
scas
aas
outsl
mov
add
push
cs
aas
jo
add
mov
mov
je
aam
mov
mov
mov
mov
inc
into
mov
dec
sub
aaa
add
sbbb
sbb
mov
inc
shll
aam
sti
or
test
mov
cmpsl
and
mov
arpl
push
lods
push
cmp
mov
cmp
or
mov
cmp
pop
push
repnz
stos
stos
out
je
mov
leave
aam
mov
jae
dec
cmp
mov
cli
lock
mov
addr16
cmp
loopne
mull
lret
int3
popl
xor
sub
sbb
divl
mov
mov
adc
mov
test
sub
fsub
sti
stc
jl
idivl
adc
mov
rcll
jg
sub
push
aas
dec
pop
mov
ret
jns
mov
cmp
xchg
aaa
cmp
xchg
repnz
lcall
xor
les
jb
lds
into
jecxz
mov
call
sbb
ret
dec
call
mov
or
cmpsl
loopne
mov
test
push
stos
mov
cwtl
in
ret
adc
mov
adc
pushf
ljmp
iret
push
lods
pop
xor
mov
cmp
inc
stos
lcall
inc
shll
lret
inc
lods
stc
aas
add
mov
mov
inc
add
push
push
popf
cwtl
bound
xor
sahf
ficoml
scas
mov
test
mov
fmulp
loop
mov
cmp
push
sbb
ficomps
xchg
mov
xchg
pusha
test
fidivs
mov
int3
cmovno
push
and
rol
in
xchg
pop
jecxz
lahf
sbb
and
and
nop
pop
lock
adc
ss
std
mov
mov
nop
test
xchg
ds
pop
pop
inc
or
adc
outsl
daa
jmp
jne
ljmp
repz
cmp
incl
dec
fs
pop
mov
stos
and
out
mov
push
in
fists
dec
xchg
fwait
push
repz
fsts
inc
movsl
sbb
xchg
aam
ljmp
pop
sub
pop
clc
dec
int3
loop
aam
loop
pop
mov
mov
dec
cmc
dec
stc
inc
test
arpl
pop
adc
loope
int
pusha
sub
mov
notb
sub
lcall
out
jns
adc
mov
xchg
popl
imul
push
mov
mov
jge
loop
push
mov
orb
mov
bound
cmp
add
cmp
inc
ret
mov
in
and
mov
adc
mov
lahf
xchg
sbbl
adc
test
and
cmc
mov
and
fdivl
in
jp
mov
sti
or
dec
xchg
bound
inc
out
or
add
or
je
arpl
mov
out
cltd
cmp
mov
mov
fnstsw
and
aas
jp
mov
jmp
dec
fdivl
ds
bound
push
push
mov
cmp
push
pop
adc
jg
mov
pop
pop
dec
or
cmpsb
int3
int
pop
imul
push
sub
sub
mov
cmpsb
loopne
sub
sbb
sbb
inc
adc
mov
mov
xchg
test
les
test
cs
jge
data16
sbb
subb
push
xorl
lods
stc
inc
test
hlt
fistps
adc
sbb
mov
inc
pusha
in
test
stos
xchg
mov
jl
dec
ret
jge
push
popa
sbb
cmp
pusha
pop
push
stc
mov
into
xor
cmp
inc
rol
jnp
ljmp
sti
lret
xchg
enter
and
shlb
pop
inc
add
pop
lret
aas
ja
and
inc
movsb
fldcw
lcall
mov
adc
xor
out
lahf
aas
push
sti
or
sahf
add
xchg
nop
movsb
mov
nop
int3
and
std
sti
xor
jmp
fdivrl
cmc
add
cmp
divb
in
test
jecxz
mov
testb
xchg
ficomps
mov
add
hlt
psubusw
mov
leave
repnz
movsb
ds
jmp
mov
mov
movsb
jbe
out
movsb
mov
and
insl
jae
xor
and
mov
and
xor
sbb
in
sbb
es
int3
adc
mov
xor
fdivl
std
dec
sbb
or
je
leave
sub
inc
add
jle
add
adc
shl
mov
test
sbb
clc
jg
leave
pop
add
mov
aam
mov
lret
dec
adc
jge
jp
adc
hlt
mov
push
out
fdivrp
push
test
mov
mov
popf
fistl
std
sahf
mov
or
enter
mov
mov
sub
fimull
data16
cwtl
or
mov
xchg
ret
mov
je
mov
mov
push
in
and
ljmp
pusha
sub
push
out
fiadds
push
push
or
iret
sbb
insb
push
lret
out
push
ds
cwtl
and
ret
mov
or
ficomps
mov
jl
lret
std
pop
push
mov
pop
mov
iret
jnp
cmp
mov
push
jne
xchg
push
or
lahf
mov
jmp
imul
mov
sbb
stos
inc
or
xchg
mov
mov
ret
pop
mov
mov
cmpb
sti
pop
adc
sahf
sbb
sarl
loop
mov
sub
sub
aas
jbe
aad
mov
stc
sub
pop
mov
pop
and
cltd
fbld
sbb
iret
or
add
lea
icebp
dec
jecxz
test
ljmp
clc
cwtl
sti
inc
cmp
adc
cmp
ljmp
in
xchg
and
inc
cmc
and
fisttps
clc
loop
test
push
ljmp
xchg
pop
insl
xor
test
stos
pop
xor
xor
shl
xchg
lcall
xchg
inc
or
repnz
or
out
int3
clc
aas
jmp
lcall
out
adc
fadds
sbb
mov
test
movsb
inc
xor
dec
mov
lcall
mov
clc
xor
jp
cwtl
mov
mov
mov
add
clc
xor
cld
cmc
add
cld
lods
cmp
lock
pusha
xchg
mov
out
adc
addr16
sub
loop
sbb
enter
fisttps
inc
in
jge
addr16
and
mov
mov
adc
lret
sti
cli
adc
movsb
sbb
jmp
sbb
lock
iret
clc
add
sahf
dec
loope
cltd
dec
in
test
inc
mov
into
push
movsl
mov
mov
push
fistps
repz
pushf
in
out
out
lcall
xchg
add
inc
pop
mov
cmpsl
out
out
mov
cmp
dec
or
lret
push
hlt
imul
pop
jb
adc
pop
es
dec
mov
xlat
mov
lret
xlat
xchg
mov
cmp
cmp
xchg
cld
adc
pop
and
push
xor
lcall
mov
popf
hlt
sub
dec
sbb
adc
fidivrl
lret
cld
scas
jns
sbb
fstpt
adc
and
mov
jle
cmp
ja
hlt
cli
jae
jmp
outsl
aam
lods
cmp
loop
data16
cltd
pop
sbb
pop
call
sahf
xchg
push
outsl
test
out
inc
cli
mov
cmp
mov
or
xchg
loopne
loopne
test
push
and
mov
repz
fstps
lret
mov
pop
sub
push
inc
dec
out
sbb
mov
mov
inc
insl
sbb
popa
or
mov
cmp
int3
add
inc
add
jae
mulb
jp
sarl
ret
mov
mov
outsb
ds
pusha
fcmove
aam
lret
jno
movsb
mov
jns
mov
xchg
mov
lock
jno
test
ret
inc
inc
and
ss
jl
movsl
fwait
xorl
jae
mov
mov
ljmp
fiaddl
mov
xor
mov
inc
inc
ret
and
imul
inc
jp
mov
xlat
jno
or
ret
mov
cmp
mov
out
fsubs
xchg
and
xor
mov
cld
cmpsb
pusha
fimuls
cmpl
push
mov
data16
sbb
push
sbb
mov
bound
das
push
nop
push
pop
mov
inc
test
enter
clc
cmc
pop
daa
je
int3
pushf
push
mov
call
push
xor
cmp
dec
dec
pusha
rolb
insb
jb
push
pushw
popa
mov
cmc
movsl
mov
sbb
jle
aaa
jo
nop
out
fidivrs
mov
sbb
loope
jb
iret
leave
mov
mov
adc
fimuls
mov
loopne
mov
popa
lock
mov
mov
lds
adc
arpl
push
divl
je
dec
and
add
mov
repz
addr16
adc
sbb
fldenv
mov
pop
jo
cmc
pop
pop
in
stc
mov
or
inc
inc
push
imul
sub
fsts
stc
pop
cmc
dec
jb
repnz
mov
ret
jb
adc
jmp
xor
fdivl
in
adc
xchg
cld
adc
cld
lret
fmul
pop
add
imul
lods
lret
cmp
stos
sbb
in
xchg
leave
push
xchg
add
cltd
xchg
xchg
xchg
mov
adc
inc
or
stos
out
add
cwtl
push
out
sbb
jb
scas
mov
decb
scas
das
call
call
inc
cmp
repnz
xlat
or
cmc
mov
cmp
xchg
cli
data16
cmp
xor
cmp
mov
shlb
daa
xchg
jbe
sub
push
push
or
xchg
movsb
mov
adc
push
nop
mov
dec
mov
mov
xchg
dec
xchg
xlat
lock
push
shll
xor
mov
mov
ret
sbb
sti
into
adc
ret
inc
mov
pop
gs
rorl
sbb
das
xchg
pop
data16
adc
push
orl
mov
sbb
pop
sub
xorb
mov
xor
leave
mov
dec
or
or
bound
leave
rorb
repnz
cmp
push
pop
add
adc
push
mov
fwait
push
mov
jmp
jmp
jno
clc
outsl
ret
sti
mov
jle
test
fcompl
ss
int
pop
pop
int3
dec
lods
into
inc
mov
neg
aam
mov
repnz
push
scas
je
and
repnz
inc
xor
leave
jp
loopne
push
adc
sbb
mov
jo
lods
mov
mov
mov
in
lret
adc
mov
and
shll
jl
cmpl
in
arpl
xchg
cs
loopne
stos
je
mov
mov
dec
cmc
push
mov
dec
xor
or
xlat
sub
cmc
xchg
fisubrl
test
stc
out
sub
cmpsb
sub
cmpsl
cltd
push
cs
shl
adc
xchg
cmp
iret
cwtl
adc
sbb
adc
push
test
out
pushf
xchg
je
xchg
das
loope
mov
push
jmp
std
and
jne
scas
xchg
mov
mov
sbb
jmp
mov
nop
xchg
in
pop
xchg
fstp
lods
xchg
out
in
iret
inc
or
in
enter
lock
clc
scas
jo
inc
out
mov
adc
sti
ss
mov
cmpsl
xchg
xor
test
mov
bound
mov
lret
divb
jg
out
rolb
jmp
pop
gs
aam
cwtl
clc
add
cs
inc
cmp
cli
jle
repnz
adc
mov
jge
jecxz
xor
scas
loop
clc
cmp
dec
mov
shl
adc
jp
mov
fidivs
je
sahf
int3
mov
and
add
nop
lahf
cwtl
jb
xchg
les
bnd
lahf
scas
adc
bound
xor
loop
mov
pop
cwtl
pop
ds
dec
xor
mov
jge
mov
push
cld
mov
stos
sub
loopne
inc
js
jnp
fs
jb
fs
std
pusha
jmp
clc
xchg
pop
outsb
add
adc
inc
int
cltd
xchg
lods
mov
push
or
mov
out
xchg
and
sbb
pop
je
cmp
cltd
stos
lods
les
add
cld
xor
ret
mov
inc
jle
inc
jecxz
ds
xor
sahf
adc
and
cwtl
jo
jo
arpl
and
jge
mov
push
out
movntps
add
xchg
or
enter
ficoms
into
xchg
mov
test
sbb
ds
fldcw
xchg
rcrb
bsr
sbb
icebp
sbb
rcrb
add
out
or
movsl
je
ret
fistps
fs
mov
out
std
xchg
rcl
add
mov
adcb
popf
sub
mov
or
jecxz
pushf
push
lcall
mov
lahf
shl
mov
into
in
add
jno
adc
rcll
insl
add
addr16
leave
dec
fcoms
fadd
xchg
fistpl
jp
pop
sub
push
in
xor
cmc
ljmp
dec
decb
and
inc
outsb
push
clc
imul
jne
jge
repnz
ljmp
cli
and
add
xchg
adc
mov
sbb
or
add
test
push
fs
repz
ficoml
sub
ret
sarb
and
fildll
sub
xor
iret
ja
xchg
pushf
aam
outsl
pop
in
rcrb
pusha
iret
loop
sbb
in
xchg
dec
inc
cmpb
gs
daa
test
mov
sarb
jge
jl
dec
add
fwait
outsl
js
loope
call
jmp
add
test
gs
outsb
jae
dec
pop
jecxz
mov
sti
repz
imul
mov
jb
outsb
mov
pop
out
adc
fldl
mov
mov
enter
enter
loope
push
jnp
mov
sub
in
mov
lea
mov
call
xor
lock
loopne
sbb
stos
push
repnz
push
fidivs
xchg
lds
adc
outsb
mov
scas
or
jl
pop
mov
push
aad
cmp
dec
testb
lret
mov
and
or
mov
cmpsb
mov
push
xchg
mov
into
xor
sbb
fidivrs
sub
fildll
mov
pminsw
call
xchg
xchg
test
leave
mov
inc
iret
movmskps
imull
sbb
dec
pop
mov
pop
add
cmp
xchg
cmp
inc
dec
push
fisttpl
rcl
xor
movsb
xchg
into
xchg
mov
int3
call
bnd
lods
xchg
mov
das
mov
imul
jle
aas
into
adc
mov
fdivs
lods
inc
leave
mov
xor
xchg
rcl
push
sbb
dec
es
pop
outsl
cli
lock
xchg
push
pop
or
out
out
ror
lods
add
pop
sbb
rcll
xchg
mov
pop
adc
mov
jne
mov
int
mov
test
mov
push
lods
pushf
lods
push
jb
lahf
pop
sub
enter
mov
pop
lods
xchg
sbb
mov
push
or
imul
lret
add
pop
xor
push
pop
adc
xchg
mov
push
jno
or
out
add
outsl
mov
int
lds
call
or
enter
test
scas
idivl
into
fcoml
push
pop
iret
cld
mov
scas
dec
push
xor
dec
fistps
test
mov
leave
std
cmpsb
ret
cmpsb
cmpb
mov
outsl
or
sub
out
in
pop
movsb
sbb
add
and
cltd
and
jecxz
push
out
out
inc
fs
inc
fmull
leave
fmuls
out
scas
cwtl
mov
mov
mov
xor
enter
dec
mov
lcall
cmp
hlt
push
xor
cmp
shlb
mov
daa
aad
mov
xlat
sub
sbb
add
shlb
jae
jmp
add
int
or
ret
aas
mov
cmp
inc
sbb
into
fisubrs
int
fcompl
rclb
outsl
aam
add
enter
lret
in
mov
dec
in
and
mov
push
addr16
cltd
xor
inc
mov
stc
xor
xchg
lods
pusha
sar
ret
add
push
or
adc
shll
xchg
push
jg
inc
cmc
add
pop
and
fldenv
stos
ljmp
rcr
mov
adc
push
cmp
mov
insb
mov
xchg
dec
mov
in
lret
cmp
test
xchg
mov
fidivrl
scas
loopne
or
push
push
in
repz
sub
adc
add
js
pop
les
jmp
std
gs
xor
cltd
adc
mov
xchg
into
data16
mov
adc
jb
unpckhps
int3
jmp
push
scas
loop,pn
aam
xor
jl
sub
int
hlt
ljmp
es
out
sub
mov
push
or
sti
or
cli
out
ret
xchg
jmp
pop
sbb
lock
popf
push
stos
clc
repz
xchg
stos
fs
in
xor
das
ficomps
push
lds
lods
int3
aaa
arpl
movsl
sar
jge
push
movsl
sub
pushf
repnz
push
mov
pop
loop
mov
sbb
into
jo
or
dec
jmp
ja
test
lcall
out
and
in
out
fs
and
xchg
mov
aad
iret
sub
jae
in
repz
pop
pop
mov
fidivs
popa
sub
cwtl
sub
and
hlt
mov
rorl
fadd
les
jb
push
rcll
xlat
push
pop
sbb
sahf
mov
fsubrl
sub
jbe
sub
dec
hlt
scas
clc
mov
push
add
adc
dec
out
dec
loope
psubusb
mov
jo
je
fisttps
cmc
sbb
movsb
jne
andl
add
push
adc
lods
scas
movsl
roll
xchg
test
adc
dec
mov
fs
sbb
jns
pop
inc
dec
push
sub
jo
xchg
mov
inc
andb
int3
push
movsb
shlb
xchg
pop
out
xchg
in
push
psrld
dec
mov
xchg
xchg
pop
test
rorl
repnz
test
in
cmpsb
sahf
sbb
or
fcoml
pop
je
fildl
xchg
testb
mov
lock
imul
jge
hlt
scas
mov
test
push
inc
xchg
repz
add
jo
jns
adc
pop
inc
push
jge
mov
xchg
sahf
mov
dec
cmpsb
mov
jp
les
push
push
in
sub
lcall
jecxz
sub
mov
bound
sar
test
std
cmpsb
mov
insb
sub
xchg
dec
or
pop
aas
pop
dec
ret
ret
lods
mov
jg
leave
jbe
xchg
xchg
push
or
dec
das
test
cmp
shl
cli
sbb
in
push
sbb
pop
bound
jp
adc
jb
mov
int3
pop
popa
es
test
orb
adc
shll
cmpxchg
mov
dec
iret
sub
rcrl
push
nop
loop
pushf
aad
or
hlt
xor
enter
enter
jmp
sub
cld
movsl
aad
insl
cmpsl
shl
je
push
out
pusha
and
scas
imul
ficompl
ret
test
test
hlt
scas
ret
pop
aas
pushf
out
mov
xor
or
mov
stc
cmp
shlb
jb
ss
pop
xor
cmp
loop
dec
imul
and
adc
push
sahf
cld
adc
mov
outsb
loopne
xchg
xchg
bound
cmp
xor
enter
adc
mov
loop
scas
ljmp
fldcw
sub
dec
mov
insl
mov
std
inc
cld
push
cmp
call
pop
lret
sbb
ret
jg
call
sahf
mov
inc
ss
jmp
adc
out
fisubrs
mov
iret
aaa
cmp
insb
mov
ret
jb
ss
mov
inc
pop
out
pusha
sub
dec
int3
mov
mov
lret
leave
jno
ret
outsb
fnstcw
xchg
push
ret
insb
hlt
call
jns,pt
cmp
jae
popa
mov
jmp
mov
das
pop
out
loop
clc
mov
xor
xchg
mov
mov
mov
scas
int3
sahf
mov
movsb
loopne
adc
cmpsb
and
and
or
inc
cmpsb
loope
push
sbb
je
cltd
das
xchg
hlt
pop
loop
shl
ss
stos
jns
cmp
or
imul
int
ljmp
rcr
shl
mov
jo
lock
mov
fdivl
orl
mov
inc
mov
or
shrl
xadd
mov
mov
cli
jecxz
push
fwait
xchg
fstps
dec
cmc
ljmp
rclb
ficoms
xchg
mov
fldt
xchg
jbe,pn
enter
lods
xor
or
lret
mov
add
xor
jae
icebp
les
sti
lcall
movsb
jg
jecxz
push
adc
mov
iret
sbb
sbb
cltd
cs
xchg
jmp
cs
movsb
addb
loop
rcll
mov
adc
xchg
mov
cmp
and
repz
push
dec
xchg
mov
jnp
out
jecxz
int3
fistpl
adc
inc
push
scas
cmpsl
inc
push
lcall
out
xchg
jae
stos
pop
addr16
std
scas
mov
dec
and
push
push
add
in
or
mov
aam
fnsave
in
push
jmp
pop
test
imul
pushf
leave
addb
sub
push
mov
xchg
mov
repnz
scas
or
int3
nop
sbb
mov
pop
mov
jb
mov
outsl
pusha
das
or
mov
cmp
jae
jmp
push
mov
les
enter
push
nop
loope
and
cmp
sar
jns
mov
jae
jecxz
xor
sbb
mov
mov
mov
rcll
inc
adc
cld
xlat
mov
xchg
out
mov
cli
std
outsl
imul
xor
sbb
add
push
sbb
cmp
cmp
dec
dec
push
pusha
mov
lods
push
mov
sub
push
cmp
mov
loop
imul
inc
hlt
imul
das
test
insb
add
scas
mov
cmp
ret
stc
ret
push
sub
cli
and
push
daa
imul
push
mov
and
sahf
adc
inc
jo
adc
icebp
imul
mov
sub
sahf
adc
ljmp
push
jns
xor
xor
pusha
xor
aad
jb
ja
lret
lods
pop
lcall
loop
mov
lret
or
out
cmc
movsl
mov
cwtl
pop
sbb
sbb
or
xchg
insb
add
adc
adc
leave
movzbl
push
fucom
push
xor
data16
cwtl
aam
outsb
jbe
lock
cmp
push
flds
pop
sub
and
dec
fcomi
call
inc
sbb
movsb
inc
dec
pushl
scas
dec
mov
xchg
fisttpll
in
dec
es
mov
push
and
mov
xchg
mov
stc
xchg
pop
testb
mov
cli
test
fisubrs
outsb
addps
pop
adc
enter
xor
and
sub
sahf
dec
lret
test
mov
pop
mov
scas
rolb
xchg
call
cmc
sbb
idivl
jmp
fucomip
inc
cmp
mov
mov
cmp
mov
lret
outsb
xchg
clc
dec
shll
lds
add
enter
testl
or
inc
mov
std
push
or
xor
mov
pop
cmp
andb
rcll
ret
cltd
xchg
lret
mov
ret
cmp
inc
mov
jp
pop
mov
test
mov
mov
test
cli
push
sub
mov
pop
sbbl
aas
lock
je
mov
popf
aas
movsl
mov
or
xor
or
ret
pop
inc
push
dec
mov
push
adcl
adc
movsl
mov
dec
mov
xor
idivb
cs
push
mov
icebp
push
subl
dec
sub
fisubrl
out
sti
push
sub
icebp
out
jbe
mov
shlb
mov
mov
pop
cmp
mov
sub
lret
sub
cld
ret
rcrb
xchg
mov
mov
outsl
cmpsb
mov
nop
cmp
adc
das
cmp
adc
push
cmp
mov
test
fs
xchg
cltd
mov
nop
adc
test
mov
mov
aam
inc
testb
out
loop
popf
cwtl
push
xchg
jecxz
sub
mov
cmp
mov
sti
xchg
jb
test
mov
sti
adc
adc
ljmp
lea
push
cmp
mov
mov
cmp
cwtl
mov
sub
test
adc
mov
addr16
out
out
outsb
int3
out
scas
out
mov
loope
cmpsl
cmp
mov
sahf
adc
rep
outsb
ret
cmp
xor
insb
pop
fsubs
ret
gs
std
movsl
jno
mov
mov
out
movsb
adc
scas
std
insb
push
mov
cmp
or
sbb
push
outsl
inc
das
cmp
fnstsw
push
lods
mov
call
std
imull
xchg
test
pop
subb
sub
mov
aam
insb
outsb
fadds
nop
fildl
xchg
jb
in
leave
lcall
out
mov
pop
popw
inc
xor
mov
leave
inc
adc
cmp
mov
inc
xor
mov
push
rclb
cmpl
rorl
jecxz
or
mov
adc
push
out
xor
add
and
ss
roll
movsl
cmp
jge
lcall
dec
cmc
sahf
mov
add
fwait
dec
loopne
cmc
outsl
push
call
lcall
daa
jmp
addr16
bound
popa
jmp
pop
mov
call
mov
fs
dec
pop
nop
sti
out
push
mov
aas
mov
cmp
aam
jge
nop
mov
lahf
jg
jmp
mov
repnz
hlt
xchg
xchg
lcall
outsb
xor
inc
mov
sahf
xor
inc
xlat
add
es
mov
jge
lret
sahf
fwait
lods
adc
outsl
mov
xchg
dec
repnz
add
rolb
mov
mov
out
stos
sub
lcall
repnz
insb
aam
dec
adc
push
or
inc
add
sbb
js
mov
mov
dec
aad
mov
fdivp
pop
or
push
insb
push
scas
frstor
push
repnz
out
mov
sbb
mov
cmc
lret
outsl
leave
cmp
mov
cmp
sub
dec
insb
imul
mov
push
ljmp
jne
sub
cwtl
xor
mov
jg
push
arpl
int
int
lret
and
fwait
notl
adc
xchg
shrl
test
mov
int3
imul
jg
fildl
sbb
xchg
shr
jo
vphadduwd
lcall
inc
xor
mov
sub
mov
jmp
mov
bound
push
sub
cmpsb
push
fwait
icebp
inc
inc
fldcw
lea
ljmp
xchg
stc
mov
push
inc
and
test
sahf
iret
ljmp
xchg
scas
dec
fadds
sbb
popa
pop
ret
fs
jle
push
pop
loop
xchg
imulb
nop
push
xor
mov
inc
ret
sub
or
or
in
in
outsb
ljmp
mov
outsl
adc
rcrl
or
aad
xor
mov
insb
add
jbe
scas
mov
fistpl
in
js
leave
mov
push
sub
rcrl
xchg
sbb
mov
lea
in
cmpsb
lods
jbe
jae
rorb
mov
push
test
adc
ljmp
ret
lret
adc
sbb
idivb
gs
or
xchg
aam
sbb
mov
mov
lcall
xor
out
cs
es
push
adc
mov
jmp
aad
lahf
push
pushf
sub
scas
xchg
jb
push
es
jmp
mov
imulb
test
pand
notl
and
xchg
push
dec
notl
xchg
adcl
push
das
test
adc
xorl
jle,pn
push
mov
sbb
inc
mov
jbe
rcr
sarb
mov
popf
lcall
jb
enter
push
fadds
pop
push
adc
cmpsb
test
mov
jge
movsl
push
sbb
push
adc
xchg
or
xchg
fcoml
pop
pop
scas
mov
in
hlt
inc
test
sub
arpl
cwtl
sbb
lret
and
rcr
push
jne
cli
test
stos
push
dec
xchg
loope
or
arpl
xor
or
inc
and
jae
in
lods
shrb
xchg
mov
sub
cli
jg
outsb
xchg
adc
mov
test
hlt
mov
divl
insl
inc
xchg
pop
stos
sub
outsl
mov
stos
pop
sbb
cmpsb
cmp
ljmp
sub
xchg
hlt
lods
dec
xchg
xchg
mov
mov
or
xchg
out
fidivs
sbb
dec
sti
sbb
lret
mov
cmc
out
fs
mov
mov
mov
outsl
or
ja
jae
sti
pushf
xchg
into
cmc
dec
mov
and
in
xor
shlb
dec
imul
jb
std
rcrl
out
mov
sub
ja
das
or
mov
push
mov
fdivl
xchg
es
xor
out
mov
pop
leave
or
mov
xchg
push
xchg
lcall
test
push
mov
fcompl
xor
and
out
xchg
add
aad
lods
xchg
pop
push
aam
sub
jge
push
sub
leave
das
mov
loope
stos
aam
clc
sbb
xchg
leave
inc
aam
jmp
mov
mov
pop
lods
sub
push
pushf
sti
sub
mov
ds
stos
ljmp
inc
js
in
insb
xor
jg
adc
sahf
cmpsb
mov
add
in
dec
and
nop
sbb
neg
inc
push
push
lcall
div
push
xor
push
pop
lret
dec
icebp
push
imul
ret
mov
js
repz
and
arpl
sbb
enter
xchg
mov
pushf
ljmp
arpl
movsb
icebp
mov
test
inc
leave
xchg
in
out
xchg
push
insl
into
pushl
shll
pop
xorb
jo
adc
fldt
inc
sti
gs
sbb
into
push
je
insb
scas
in
stos
mov
cwtl
mov
call
out
shll
nop
or
mov
test
hlt
fistl
cld
xlat
or
jmp
xchg
mov
adc
push
cwtl
xlat
adc
mov
fwait
pop
mov
xchg
sub
xor
dec
mov
mov
aam
pop
mov
shll
mov
aaa
sahf
push
mov
adc
lock
mov
divb
sbb
das
pop
in
jg
and
hlt
sbb
add
lock
xchg
loop
sahf
fnstcw
out
jecxz,pn
dec
jo
ds
push
push
movsb
mov
iret
scas
push
jne
fcmovu
jmp
sub
sbb
int3
pusha
in
add
pop
xchg
jle
in
scas
clc
add
lea
and
leave
insl
rcll
in
xchg
pop
push
outsb
std
fldt
or
aam
in
sub
push
xlat
mov
sub
jbe
stos
rolb
in
outsb
push
mov
test
jle
inc
sub
daa
shlb
lahf
mov
or
bound
mov
addl
dec
xchg
sbb
sub
lahf
fldt
add
ss
pop
or
ret
nop
sbb
shr
cld
in
sbb
loopne
cmpsl
test
aas
mov
out
ffreep
scas
xor
push
fcoml
icebp
dec
jno
loop
mov
movsl
test
loop
and
push
neg
test
dec
push
adc
in
ja
jo
jno
xor
jne
or
mov
xchg
and
pop
cmpsb
push
xor
push
mov
sarl
cli
xchg
push
xlat
cs
test
or
iret
icebp
push
f2xm1
lahf
adc
jmp
inc
lret
sbb
mov
adc
sbb
dec
aas
cmp
stos
das
orl
loope
in
adc
loopne
int
test
ljmp
cwtl
mov
dec
sbb
cmpsb
loopne
mov
push
nop
inc
mov
insb
mov
xor
and
inc
popa
xchg
mov
mov
mulb
mov
dec
mov
adc
push
std
je
in
popa
in
test
int3
fldl
cmpsb
xchg
out
rorb
cmpsb
pushf
push
mov
lock
cmpsb
stos
push
adc
incb
loopne
xchg
sti
mov
in
mov
or
daa
xor
inc
xchg
mov
push
lds
pop
and
popa
int3
sbb
fldenv
cmp
aad
push
in
mov
xchg
stos
jmp
cwtl
aas
iret
adc
cmp
and
insl
out
fwait
push
or
cmp
mov
or
imul
mov
push
pop
xchg
sbb
ljmp
ss
cmp
lea
add
test
je
fmull
cmpsb
jne
int3
mov
jbe
cwtl
and
lea
imul
mov
push
adc
into
push
test
jb
fsts
rcr
xchg
cld
inc
push
add
std
pop
push
call
movsb
and
bound
addr16
lret
cwtl
add
sub
xchg
xchg
inc
iret
sbb
adc
bound
mov
imul
test
ffree
xchg
mov
or
sbb
addr16
inc
mov
push
into
pop
scas
in
daa
xchg
cs
leave
xchg
jmp
loopne
in
int
repz
lods
push
fdivp
call
cmp
decb
push
or
dec
sub
xchg
jb
mov
mov
test
xchg
jmp
push
shlb
mov
xor
lods
sti
inc
xchg
insl
testb
adc
call
jl
es
mov
xchg
mov
push
je
mov
xor
out
repnz
enter
xor
sti
adc
lods
shlb
cmp
mov
aad
sub
not
ljmp
lods
out
jne
aas
insb
dec
hlt
ret
xchg
sbb
inc
cs
fisttps
xor
test
jb
push
xor
xor
cltd
je
adc
into
xchg
push
lahf
lock
stos
ja
sub
xor
pop
xchg
in
xchg
sbb
mov
or
or
outsl
mov
cltd
outsb
ds
jp
push
inc
inc
lret
dec
mov
jle,pt
push
repz
or
jmp
scas
xchg
ja
popa
lods
cmp
cwtl
fcmovnb
shlb
into
fisubs
jge
lods
test
pop
jns
cmc
hlt
fadd
mov
lods
cmpsl
inc
lcall
inc
aam
sbb
ret
pop
mov
dec
fwait
test
dec
fisubs
adc
faddl
mov
jb
inc
ret
xchg
or
sub
sarb
lcall
loope
int
js
hlt
lret
jg
dec
mov
sbb
pop
movsb
add
jb
inc
ret
xchg
or
lahf
sub
add
mov
inc
stc
fcmove
scas
bound
mov
movsb
inc
fbstp
dec
xchg
and
cmpsl
xor
pop
aam
loop
scas
jle
shrb
shlb
aam
js
jge
movsb
test
sbb
rolb
out
sbb
movsl
inc
fiaddl
cwtl
mov
ficompl
fisubrl
mov
ljmp
insb
mov
loop
jo
gs
int3
dec
xchg
out
loop
shr
mov
adcb
dec
loope
cmpl
and
cmp
mov
aam
mov
stc
mov
gs
loop
lods
stc
sbb
dec
rcrb
nop
les
cld
cmc
loopne
xor
outsw
rorl
test
mov
mov
cltd
cmc
out
xchg
jns
fisttpll
je
adc
cmpsl
mov
in
dec
and
mov
jnp
imul
add
mov
ds
loope
mov
mov
insw
and
fsubs
mov
lcall
in
clc
fsubr
dec
mov
ret
sbb
aam
mov
shrb
dec
push
push
push
cld
loopne
xchg
lods
jl
ljmp
mov
jb
insl
xchg
aad
mov
push
jb
inc
into
pop
sub
js
cwtl
in
jg
xchg
leave
push
into
negb
stc
add
mov
stos
and
movsb
in
cwtl
pop
jp
out
popf
adc
xchg
sub
mov
repz
xor
aam
dec
out
ret
clc
cwtl
and
inc
pop
xor
imul
lret
pop
adc
mov
rdmsr
or
mov
dec
in
pop
outsl
roll
mov
nop
adc
pop
mov
hlt
mov
fimuls
mov
xor
clc
sahf
xchg
je
sub
js
cli
call
and
scas
fdivs
and
fcmovb
insb
decb
fmuls
pop
call
call
les
mov
test
sbb
repnz
lods
sbb
jae
xchg
es
aas
cld
mov
inc
mov
ficoms
imul
mov
add
stos
into
xor
pushf
sahf
out
je
xor
xlat
xchg
inc
fmul
les
mov
test
sbb
lods
pop
cwtl
js,pn
jle
cld
xchg
push
fiadds
sbb
cs
sahf
mov
xchg
push
loopne
mov
add
fsubs
les
repnz
push
jmp
mov
xor
cs
sahf
cmp
dec
push
sub
data16
or
call
inc
adc
fcoms
mov
sbb
sarb
mov
fadd
imul
and
or
cld
movsb
add
test
sub
or
mov
sar
jae
xchg
xchg
add
mov
mov
xor
je
repnz
cmp
mov
test
sbb
lods
dec
cwtl
cmp
or
xchg
adc
pushf
enter
mov
xor
je
sub
adc
sahf
call
xor
mov
push
js
pop
jae
xchg
outsb
fdivp
enter
mov
xor
adc
sbbb
xchg
pop
or
call
jl
sbb
les
ljmp
pop
mov
cs
sahf
sub
cmp
cmp
dec
xchg
or
call
mov
cmp
inc
lret
loopne
mov
lods
rcrb
sbb
mov
inc
js
cli
pop
int3
or
fsubs
fdivr
les
dec
mov
test
sbb
push
or
jae
xchg
rcr
pop
enter
mov
xor
cs
fidivl
ljmp
dec
xor
adc
sbb
xchg
jbe
clc
enter
mov
xor
sbb
sbbb
xchg
push
or
call
jo
fdivrs
into
mov
test
sbb
jb
arpl
add
je
or
adc
pusha
and
or
andb
sub
adc
fsubrs
lods
aaa
jne
sahf
xchg
je
sub
add
mov
or
mov
js
cmpsb
jae
xchg
mov
shlb
je
sub
push
push
jbe
cld
movsb
push
mov
adc
fcoms
test
sbb
repnz
lods
call
loop
insb
xchg
repnz
enter
mov
xor
mov
push
mov
in
xor
cs
sahf
cmp
dec
push
and
bound
movsb
ds
adc
fcoms
fisubrl
sbb
repnz
js
cmpsb
jae
xchg
mov
xor
mov
push
push
insb
pop
call
clc
adc
add
push
mov
test
sbb
bnd
add
jae
xchg
fcmovu
fs
mov
xor
movsb
sahf
out
xchg
sub
sub
gs
les
mov
test
sbb
sub
xor
jae
xchg
push
fisubs
mov
xor
je
sub
or
xchg
call
and
scas
fdivs
les
jae
xchg
pop
enter
mov
xor
and
pop
je
sub
or
jle
or
call
pusha
adc
fsubrs
mov
sbb
mov
and
stos
fidivs
cwtl
fcmovb
pop
push
fmull
call
cld
adc
fcoms
test
sbb
repnz
fsubr
jae
xchg
repnz
imul
mov
mov
aam
pop
cmp
lods
mov
fcomps
or
xchg
lods
loopne
mov
add
sahf
imul
scas
mov
out
dec
call
cs
sahf
je,pn
sub
push
cmp
dec
nop
or
insb
and
inc
lock
xor
out
test
xor
hlt
xchg
pop
or
call
js
xchg
or
xchg
shlb
nop
repnz
pusha
jmp
mov
xor
cs
sahf
cmp
push
push
and
outsb
mov
cmp
inc
movsb
lret
adc
fsubs
mov
shrb
lods
mov
pop
aaa
sub
js
dec
enter
mov
xor
cmp
pop
push
sbb
push
or
call
push
adc
fsubs
mov
shrb
lods
mov
or
sub
mov
ret
pusha
mov
cli
mov
loop
inc
in
lods
cmp
mov
mov
mov
bound
xchg
mov
int3
movsb
push
mov
cmp
mov
test
sbb
dec
lods
sub
pop
js
jae,pn
xchg
cmp
dec
enter
mov
xor
add
mov
adc
lcall
inc
cwtl
add
xchg
js
pop
jae
xchg
jb
or
imul
bnd
jae
xchg
rcr
pusha
enter
mov
aam
test
into
jno
mov
in
mov
xor
lock
sahf
je
sub
add
jle
pop
mov
ja
jp
sbb
inc
mov
cs
sahf
cmp
dec
push
and
bound
ljmp
les
ficomps
pushf
repnz
lods
mov
mov
sub
repnz
cltd
xchg
lock
andb
cmp
mov
ret
cmp
mov
and
imul
mov
push
mov
notb
xchg
lss
mov
mov
mov
mov
mov
mov
mov
mov
or
push
pop
ljmp
sub
mov
nop
int
mov
enter
leave
or
sub
add
lods
sub
lcall
mov
ljmp
scas
mov
mov
ljmp
mov
addb
dec
divl
clc
sub
sahf
call
xor
dec
into
pop
bound
mov
testl
cmp
ret
int3
dec
mov
ret
orl
adc
push
xchg
in
fisubrl
leave
mov
sub
and
cmp
mov
stc
lea
push
mov
adc
test
pop
ficoml
adc
ret
loop
add
add
sbb
adc
jo
adc
adc
outsb
mov
repz
jne
repz
cwtl
cltd
add
or
jle
subl
xchg
xchg
movsb
fcom
mov
into
and
push
call
fucomp
jle
mov
adc
inc
cmpsb
mov
dec
call
sti
call
dec
into
out
cmpsb
mov
mov
mov
movsb
cs
stos
mov
xor
fstpt
ret
xor
sbb
mov
daa
jbe
add
jecxz
dec
or
fiadds
adc
fimuls
sub
mov
les
cmpsb
adc
jecxz
jmp
jo,pt
notb
jp
negb
outsb
or
jle
inc
je
jmp
jecxz
call
nop
sub
dec
mov
mov
test
cmp
mov
popa
and
ljmp
xor
les
or
insl
lahf
repnz
jge
pop
sahf
lret
inc
inc
call
lcall
pop
mov
icebp
push
lcall
jp
ret
ret
xor
cli
pop
jecxz
lahf
rcrb
cmpsb
push
aam
lcall
addr16
mov
in
call
js
or
sub
or
dec
pop
dec
mov
out
mov
push
cwtl
jecxz
testb
repnz
sub
fnstenv
fistps
jecxz
xchg
aam
fistl
push
fbld
int
fcoms
add
cs
cmpsl
add
push
mov
insl
push
push
xchg
cmp
std
mov
pop
and
fsqrt
inc
out
mov
cmp
mov
ret
or
cmpsb
rorl
je
lret
pop
sub
sbbl
add
mov
pop
xor
push
repnz
add
repnz
and
nop
clc
mov
pop
jne
adc
xchg
sbbl
mov
int
sub
cmpsb
movzbl
or
jb
xchg
es
xorb
fidivrl
xchg
insb
call
lcall
push
pop
in
cltd
dec
lock
pusha
bsf
test
pop
and
int
push
pusha
ret
mov
cmp
cmp
movsl
je
dec
or
lcall
or
or
leave
mov
mov
shll
outsb
mov
mov
out
roll
mov
divb
icebp
div
and
cld
in
cltd
xchg
lods
lret
pushf
push
xor
adc
sbb
push
ds
add
fildll
xor
test
cwtl
xor
fwait
and
xchg
or
fmul
call
cwtl
test
adc
mov
stc
and
dec
mov
jle
fldcw
nop
xor
pop
xchg
icebp
xchg
push
call
test
mov
outsb
xor
mov
mov
int
cmp
sbbl
shrl
test
scas
loop
cltd
ret
lahf
cmp
popa
jecxz
jb
jmp
shll
out
stos
sbb
dec
sbb
mov
icebp
testb
rcrl
loop
cltd
iret
sti
testb
mov
mov
test
pop
fwait
xor
xchg
cs
mov
lock
mov
neg
mov
push
cs
sahf
rcrl
out
loop
cltd
aam
test
or
call
sub
jecxz
cs
sbb
out
mov
lock
mov
neg
mov
push
cs
sahf
rcrl
out
loop
cltd
sar
test
or
call
sub
jecxz
sub
pop
xor
stc
popw
xchg
xchg
fdivp
mov
mov
idiv
pushf
pop
hlt
dec
daa
cmpsb
shll
out
ret
sar
call
add
cmp
and
out
test
pop
fwait
xor
addr16
dec
sbb
lahf
popa
xor
mov
and
scas
ret
fcompl
and
call
sub
mov
xchg
sub
mov
negb
fsincos
icebp
test
xchg
call
push
xchg
mov
pop
orl
ficoms
pop
mov
nop
scas
fidivrl
add
test
mov
popf
xor
stos
pusha
xor
neg
xchg
push
int
cmp
add
repnz
mov
jmp
jb
scas
xor
icebp
xchg
or
sti
adc
mov
rcrl
jecxz
out
ret
lods
shll
mov
jae
out
jge
roll
push
mov
repz
hlt
ret
or
test
sbb
xor
gs
repnz
stos
popw
mov
sbb
mov
sbb
repnz
mov
iret
nop
mov
daa
pop
mov
push
sti
sbb
ret
mov
lods
cmc
or
xor
pop
inc
rcll
sbb
push
into
jecxz
dec
mov
test
shl
imul
lcall
mov
mov
sub
push
dec
pusha
clc
dec
pshufw
leave
test
lret
xchg
mov
mov
add
lea
or
std
leave
pop
mov
cmp
add
je
popf
pop
sar
xor
jnp
lea
clc
xor
and
ds
or
loop
push
mov
inc
push
dec
out
mov
stos
and
cmp
cmp
xorb
int
rcll
ds
xor
ret
loop
mov
jmp
mov
mov
xchg
lahf
stos
push
add
jmp
fistpll
lret
inc
jle
outsb
in
pop
in
imul
dec
or
iret
sbb
mov
mov
lock
test
sbb
mov
jmp
sub
sbb
aad
push
push
mov
out
and
lret
cli
aam
xor
or
pushf
mov
adc
call
sti
shll
ror
sbb
aas
scas
and
das
sti
call
add
cmp
aaa
mov
cltd
in
push
cmp
sbb
xor
test
lret
cltd
mov
lahf
mov
pushf
pop
hlt
dec
daa
xchg
dec
or
cwtl
jecxz
pop
adcl
rclb
cwtl
icebp
jae
fnstcw
ret
xchg
rcl
mov
fimull
cmpsb
pop
lret
xor
ds
pushf
pop
mov
ljmp
fidivrs
in
sti
outsb
mov
repnz
pop
lock
call
loop
add
sti
adc
mov
jg
test
lret
sbb
scas
loop
cltd
inc
clc
xchg
in
imul
iret
fdivrs
xchg
test
adc
pop
shrl
sbb
popa
mov
push
cs
sahf
rcrl
ljmp
cmp
sbb
mov
shll
fwait
icebp
sbb
in
sbb
clc
shlb
into
stos
ja
mov
add
ja
testb
sbb
cmp
movsb
sbb
push
not
mov
jmp
mov
mov
push
jge
decb
cmp
add
push
sub
dec
rcr
xchg
pop
push
cmp
sti
fisubrs
cmp
in
xor
out
jae
out
cs
fsubrs
pop
in
add
fstpt
insl
push
cmc
push
cvtdq2ps
int
insb
das
jmp
or
loope
jnp
mov
data16
mov
lahf
dec
imul
inc
cmp
adc
imul
aam
mov
out
fisttps
add
xlat
jle
ret
lock
mov
mov
push
push
rcll
add
pop
adc
pop
inc
out
and
in
jbe
push
lea
daa
dec
repnz
or
mov
lock
jno
ljmp
scas
xorb
in
cmpsb
cld
in
nop
nop
lahf
nop
das
out
cmp
pop
xchg
or
adc
pop
ss
lret
out
jb
fmuls
jge
push
dec
push
jecxz
push
enter
xchg
faddl
dec
lahf
fsubrl
or
push
push
aad
stos
rcr
pop
mov
lods
aaa
pop
push
cld
mov
adc
adc
cltd
cld
fiadds
add
or
jae
out
pop
shl
jb
adc
sub
dec
out
leave
hlt
lret
push
or
cmc
xor
sub
push
popf
stc
scas
outsb
movsl
out
in
sub
arpl
test
in
lahf
insl
add
xchg
test
jae
into
mov
sub
sahf
add
or
jno
fbld
push
loope
dec
sbb
faddl
mov
adc
out
dec
in
popa
pushf
mov
aad
add
ror
in
out
xchg
add
fsubrs
jae
mov
lret
andl
mov
push
dec
push
sub
sti
out
mov
andb
inc
sar
out
aaa
fucomi
mov
out
push
test
ja
mov
test
inc
dec
stos
iret
cwtl
push
and
icebp
aam
es
test
gs
sub
jl
test
inc
inc
sbb
xchg
imul
pusha
icebp
cmp
xchg
dec
xchg
cld
mov
scas
scas
inc
push
sub
mov
dec
push
or
bndstx
xchg
outsl
push
jbe
mov
ljmp
clc
andl
int
inc
xchg
repnz
dec
push
push
rorl
call
insl
jl
int3
mov
sub
adc
enter
sar
popa
lods
pop
test
out
xor
jge
cltd
add
xor
push
dec
in
push
xor
hlt
adc
mov
lea
mov
shr
mov
inc
rcr
test
push
push
fcmovnu
or
arpl
es
push
testb
in
aaa
mov
xor
adc
cmc
scas
in
popf
hlt
imul
pop
xchg
jmp
fs
dec
mov
mov
aad
push
mov
fsubrs
xchg
pop
jo
xor
repnz
fiaddl
loope
cmpsl
sub
add
inc
jmp
call
dec
xchg
sub
push
lret
xchg
xchg
mov
outsb
aas
push
adc
outsl
outsl
xchg
adc
push
fisttps
xlat
adc
mov
clc
inc
sbb
push
push
sub
pushf
push
clc
and
mov
popa
pushl
adc
push
adcb
fcompl
scas
hlt
jg
inc
pop
repz
sbb
mov
js
and
hlt
cmp
adc
hlt
jnp
mov
in
and
jecxz
and
in
rcll
xor
and
pop
pop
enter
rcl
mov
push
jle
mov
sub
scas
add
data16
sub
cmc
aam
pop
enter
gs
pop
mov
push
int3
insl
insb
jno
add
scas
dec
mov
lahf
cmpsb
push
and
dec
rorl
leave
xorl
aaa
push
xor
sbb
and
leave
gs
fcompl
lcall
adcb
push
sub
ja
outsl
in
psrad
out
xchg
dec
mov
jp
jecxz
lea
adc
sub
cli
int
pop
pop
sub
dec
pop
aaa
pop
nop
test
scas
hlt
movb
gs
cld
idivl
out
mov
cmpsb
sub
pop
pop
adc
sub
movsl
test
mov
and
out
push
xchg
popa
dec
test
and
shlb
stos
fsubp
cmpsb
mov
pop
sub
in
jp
fstpt
mov
mov
jb
adc
mov
fs
fimuls
jbe
insl
sbb
cmpsl
inc
in
out
in
inc
mov
fs
xor
int3
adc
fsubl
pop
push
push
imul
popf
adc
lods
and
cmp
out
aam
daa
mov
xchg
mov
ljmp
xor
ss
mov
push
inc
adc
jge
int3
pop
mov
shl
in
dec
cmp
ja
jmp
jae
lret
in
les
sbb
loop
enter
in
xchg
or
je
insl
cmpsb
shll
or
scas
sub
fwait
enterw
lret
sahf
rcrb
mov
test
pop
xchg
jne
push
rcrb
add
test
outsb
or
arpl
outsb
mov
test
ffreep
dec
jns
ret
xchg
jg
cmc
push
and
ds
mov
outsl
lret
jg
scas
add
jne
loop
or
dec
and
cwtl
inc
inc
iret
mov
mov
into
adc
fildll
and
roll
cmc
xchg
mov
lods
test
xor
fdivp
xor
or
das
inc
adc
sub
cs
clc
testl
dec
sbb
cmp
xor
dec
xchg
fldl
sub
loop
or
inc
call
adc
bound
arpl
into
jbe
verr
shr
jmp
xchg
ret
sub
sbb
lahf
cmpsb
insb
fucomi
jecxz
repz
int
adc
mov
clc
call
stos
or
out
data16
adc
xor
or
sbb
out
fidivs
aad
outsl
scas
sub
sbbb
xchg
xchg
lret
popa
pop
inc
xchg
xchg
xchg
stos
push
push
jp
repnz
cmc
fucomp
sub
jne
sbb
jmp
mov
iret
push
fisubl
rcrl
xchg
push
xchg
call
aam
sbb
mov
cmp
or
pop
cltd
jbe
push
test
subb
mov
rep
jmp
cmpsb
pop
or
subl
hlt
sarl
out
out
mov
out
cmp
add
xchg
push
sub
in
inc
and
mov
fwait
sub
xchg
or
pop
pop
mov
or
insl
inc
push
ja
jbe
sub
push
sbb
outsb
das
call
into
sbb
dec
int
icebp
hlt
fcoms
cmpsb
jecxz
lock
pushf
xchg
dec
adc
lret
inc
dec
mov
adc
jo
inc
push
and
push
out
mov
jge
outsb
add
push
and
adc
sahf
outsl
dec
cmp
jmp
cmc
pop
dec
or
mov
cmp
xor
sub
in
pusha
shrw
cmp
daa
cmovbe
lock
adc
xchg
mov
inc
fstpl
sti
icebp
lds
int3
inc
xor
pop
jbe
les
jl
sbb
sub
divb
mov
test
lock
and
cltd
test
cmp
ficomps
negl
pushf
aad
aaa
adc
mov
cmpsl
xchg
iret
and
push
shlb
sub
iret
inc
mov
cmp
xor
int3
fnsave
test
push
cld
mov
push
cmpsl
mov
xchg
pushf
aas
repnz
outsb
jl
jle
orl
add
mov
push
scas
pushf
stos
adc
imul
stos
sbb
jecxz
aad
jmp
mov
rcrl
fucomp
mov
out
cmp
pop
test
mov
add
xor
shrb
dec
xchg
not
xchg
xor
lret
stos
cmp
pop
add
jmp
cmp
xchg
lcall
push
sbb
jp
sub
data16
call
sub
pop
pop
sub
adc
mov
rcrl
cmp
out
sub
mov
jge
cmpsb
scas
cltd
rorl
dec
or
add
mov
and
adc
rcr
and
hlt
cwtl
inc
pop
dec
out
test
outsl
shrl
outsl
xchg
xchg
dec
enter
aam
pop
push
or
push
outsb
ret
jg
data16
cli
movsl
inc
cld
push
fcmovbe
jns
mov
outsb
jmp
outsb
push
adc
xlat
gs
fisubrs
shl
pop
aam
test
add
lods
sub
sbb
mov
xchg
sbb
sbb
arpl
lahf
sub
rclb
cmp
mov
xchg
dec
mov
push
or
clc
sbb
mov
aam
stos
push
fisttps
push
dec
mov
jo
test
and
sahf
nop
out
mov
xchg
imul
jae
jns
adc
jmp
xchg
cmp
lea
lock
notb
aam
dec
popa
mov
push
test
fst
in
incb
and
iret
adc
pushf
call
dec
cs
cwtl
icebp
or
push
orb
push
jp
aam
lock
inc
rcrb
shrb
shr
mov
nop
stc
xchg
aam
lods
ret
test
fbstp
jbe
leave
mov
mov
icebp
call
sub
xchg
xchg
and
push
sub
mov
and
jmp
jmp
xchg
idivb
lret
sbb
inc
or
cwtl
int3
sbb
enter
add
call
dec
stc
test
ret
lea
and
jne
leave
pop
jno
sbb
fs
popa
sbbl
hlt
lods
inc
jge
nop
sub
into
aaa
push
mov
fcoml
or
and
test
shl
mov
outsb
xor
sub
add
mov
xchg
ret
enter
lcall
push
cs
cs
sbb
es
gs
pop
push
fisubrs
fidivrl
or
adc
cmp
dec
das
lcall
pop
nop
rcrl
dec
sub
cwtl
push
insb
lret
pop
jge
and
adc
xchg
lods
imul
sbb
mov
movsl
out
shl
mov
out
push
je
jge
mov
jne
sbb
ja
push
or
mov
push
jg
xor
loope
mov
push
push
sbb
stos
dec
inc
inc
sub
inc
mov
pop
or
push
test
sbb
sub
lock
out
cmpsb
adc
shrb
out
js
fidivrl
fsubp
xchg
xor
mov
stos
xchg
fwait
pushf
sub
cltd
add
lock
add
push
mov
or
in
fists
cmp
jg
mov
mov
fwait
xchg
mov
cmpsb
nop
or
xchg
fs
test
mov
xchg
enter
mov
out
xlat
dec
push
mov
push
mov
pop
fstps
popf
sub
ja
sbb
jecxz
loop
add
jecxz
jbe
orb
mov
cmp
test
pop
pusha
sbb
adc
sub
pop
sbb
inc
int3
add
sbbb
pop
lret
push
push
andb
arpl
ret
mov
out
lods
lods
push
or
je
out
xlat
sbb
dec
inc
cmp
mov
inc
adc
adc
das
push
mov
mov
in
jmp
xor
cmp
xchg
out
fsubs
in
cmp
std
dec
iret
push
mov
fisttps
jae
test
pop
pop
aad
rcl
xor
ljmp
rcl
push
fsubl
iret
push
pop
lcall
and
xchg
hlt
aas
or
adc
fisubl
sahf
xor
aam
das
daa
pop
pop
pop
jbe
xchg
lds
insb
add
or
lret
lods
int
shrl
fsubrs
pop
xchg
pop
imul
inc
lock
add
mov
hlt
and
stos
jmp
xchg
sbb
push
adc
incl
mov
ljmp
sub
aam
aam
fcmovnbe
xor
mov
or
ret
mov
pushf
sbb
mov
mov
out
cmc
jg
das
rcll
xchg
mov
xchg
xor
shr
pop
push
out
icebp
mov
shlb
add
mov
adc
push
repnz
xchg
bound
adc
stos
or
push
imull
insb
pop
inc
les
jbe
enter
pop
mov
sbb
stos
fldenv
mov
addr16
ljmp
leave
test
adc
stos
mov
jg
arpl
lods
movsb
call
repnz
jg
sahf
outsl
xor
ret
adc
cli
xorb
cmpsb
cmpsl
int
fs
out
dec
cmp
sbb
inc
mov
mov
icebp
mov
adc
cwtl
xchg
movsb
aam
mov
lock
pop
enter
ljmp
sti
mov
push
rcr
cmpsl
lret
or
hlt
add
cld
dec
subl
add
mov
sbb
arpl
test
mov
pusha
out
sahf
lret
push
mov
sub
divl
push
insb
and
mov
jbe
jno
pop
mov
jo
ret
adc
movsb
das
test
lret
outsb
imull
jle
shrl
or
cmpsl
mov
leave
sub
inc
sbbb
or
out
movsb
xchg
push
leave
ljmp
xor
rcr
jle
pop
add
sahf
xlat
loopne
loopne
rcrb
push
sub
push
pop
sahf
sbb
icebp
mov
stos
or
out
outsl
sub
scas
and
je
outsl
enter
lret
in
clc
mov
sbb
mov
cmp
test
mov
cwtl
jmp
jb
cmpsb
int3
cmc
clc
repnz
daa
mov
enter
movsl
stos
adc
repnz
daa
call
popa
fstps
imul
pop
cld
cmpsb
negl
inc
adc
pop
add
inc
faddl
mov
or
sahf
iret
push
stos
scas
xchg
rep
xor
mov
sub
ficoms
clc
or
cwtl
outsl
in
jb
dec
movl
push
lret
rcrl
popf
pusha
or
arpl
push
jg
mov
add
and
and
faddl
add
mov
xchg
stc
sbb
cwtl
dec
dec
sbb
mov
sahf
xor
push
and
pop
mov
pop
mov
ret
xor
je,pn
push
mov
xor
cmpsb
leave
ret
dec
lods
and
ret
lock
pop
sti
ds
push
or
std
xchg
cmpl
add
addb
jp
adc
mov
test
iret
out
adc
lret
mov
dec
repnz
cmp
mov
push
fsub
cmpsl
insb
add
jl
xor
mov
repnz
mov
adc
push
test
sti
xor
jmp
ds
in
add
pushf
xchg
rorl
roll
pop
adc
outsb
push
mov
adc
movsb
xchg
rcl
fldenv
dec
dec
inc
mov
push
inc
imul
inc
ds
pop
outsb
sbbb
adc
movsl
xor
dec
aas
and
ljmp
xchg
ret
jo
mov
mov
sbb
into
dec
int
stos
inc
add
jmp
lret
adc
adc
or
mov
rcll
orb
inc
emms
cmc
mov
out
jle
stos
inc
test
hlt
jg
fsincos
out
mov
in
outsl
iret
nop
push
pop
and
xchg
push
imul
repnz
mov
aad
test
clc
jns
jnp
add
jne
shll
leave
scas
incb
cmpsb
fnsave
orw
adc
mov
stos
fidivrl
lods
add
arpl
je
cmpsl
out
jo
fs
xlat
ret
test
inc
ror
push
or
mov
cmc
imul
test
cmpsb
loopne
in
sub
fidivl
jbe
add
lock
nop
mov
sbb
inc
pop
xchg
jae
lods
loope
pop
xor
fwait
sub
xchg
in
adc
cmc
sbb
gs
jae
xlat
pop
mov
adc
call
and
pop
adc
pushf
test
test
mov
ficoms
fcmovbe
jg,pn
clc
int3
pop
sbb
xlat
mov
xor
jno
mov
add
jb
add
add
xlat
xchg
jae
bound
cwtl
lret
adc
mov
aam
jmp
jns
pop
mov
mov
mov
jmp
sbb
pop
jae
add
fwait
xchg
xor
fcoms
outsl
sub
loope
lret
icebp
xchg
loope
ja
lea
dec
in
repnz
lret
push
add
cmp
test
cmp
mov
in
js
or
stos
repz
and
or
mov
fsubs
les
loope
xor
jmp
js
mov
lods
xchg
mov
mov
mov
mov
xchg
mov
mov
mov
sub
sub
imul
and
fsubrs
lods
test
sbb
fdivrs
cltd
jae
xchg
sahf
fisubrs
mov
cwtl
les
adc
stos
dec
cmp
nop
mov
cmp
test
inc
out
nop
ds
jle
lods
cmpsb
mov
clc
sub
sahf
pusha
or
imul
mov
xor
cltd
repz
cmpsb
xor
stc
lods
mov
les
stos
sub
mov
loop
mov
mov
lcall
repnz
fidivl
gs
fists
sbb
lret
stos
enter
mov
mov
mov
arpl
cmpsb
jle
enter
or
sub
adc
outsl
and
fstps
dec
lcall
mov
cmpsl
push
test
scas
sahf
orb
jns
or
lods
add
mov
pop
adcl
pop
fs
adc
xchg
sbb
cmp
fidivrl
fs
pop
and
sbb
xor
sbb
add
mov
pop
inc
sbbl
out
push
mov
mov
dec
or
cltd
mov
sahf
fs
loopne
gs
je
insb
pop
lods
and
lock
test
out
jecxz
arpl
xor
mov
sub
pop
pop
add
in
aaa
mov
out
cltd
mov
fidivs
xor
jg
jb
inc
adc
aas
cmp
imul
outsb
pop
xor
xchg
sarl
es
mov
in
shlb
adc
popf
or
inc
mov
pop
pusha
subl
mov
sbb
and
pop
sahf
stos
fbld
test
mov
jl,pn
stos
scas
test
xchg
mov
or
into
mov
inc
dec
sub
scas
jno
push
mov
in
adc
sbb
jl
fisttps
xor
js
sbb
sahf
add
lock
mov
enter
aam
or
sar
mov
jg
push
sarb
subl
xor
cmp
imul
stos
push
jmp
mov
sbbb
xor
sub
jb
repz
xchg
fdivs
sub
fstpt
rcr
cmp
fcmovnb
mov
fisubs
inc
mov
sbb
cmp
sub
sub
mov
loope
ret
popf
insl
jbe
lea
mov
mov
lret
sub
mov
pop
es
cmc
in
imul
dec
push
insl
outsl
jg
mov
fs
jns
pop
js
push
jnp
paddusw
dec
fcmovb
jmp
leave
movsl
addb
cmp
xorb
mov
sub
scas
sbb
pop
xchg
addr16
jns
addr16
imul
insl
ret
sbb
pop
ss
test
pushf
mov
cmc
adc
filds
add
push
sbb
shrb
fbstp
sti
subb
lcall
mov
dec
add
dec
dec
repnz
jno
clc
push
fwait
adc
dec
rcl
gs
repz
loopne
mov
inc
out
pop
cmp
jge
mov
popa
or
pop
sub
add
jae
inc
sahf
dec
push
mov
sbb
lcall
ja
cmp
cli
mov
sbb
data16
shl
aaa
insl
push
xchg
cmp
adc
mov
dec
in
jno
sub
mov
push
in
daa
push
cli
jl
or
push
das
mov
adc
mov
inc
jle
rcrb
adc
sub
jo
pop
fimuls
fwait
mov
fs
aad
and
jno
add
test
adc
aaa
sub
push
int3
pop
xchg
mov
shll
fldenv
inc
pop
inc
std
mov
dec
pop
imul
jmp
or
outsb
mov
push
js
stc
pop
aad
and
incl
push
popf
fs
sahf
inc
cmp
loope
test
pop
aam
jns
adc
mov
addb
cli
jg
mov
jae
mov
add
rcll
mov
mov
sbb
cmpb
jle
or
dec
mov
and
mov
cltd
or
adcb
sbbl
cmp
pop
js
and
enter
dec
sub
fnstcw
mov
lods
mov
or
jmp
jne
test
xchg
push
pop
jb
xlat
sub
cmp
ljmp
mov
adc
jp
pop
and
call
fstl
xchg
stc
add
in
lahf
inc
jecxz
inc
enter
jae
icebp
dec
hlt
jecxz
movsl
mov
cli
dec
mov
xchg
xchg
insb
fwait
sub
pushf
or
push
scas
jmp
inc
in
xchg
mov
xchg
pusha
aas
xor
add
or
pop
xor
add
or
xorb
add
add
add
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
add
addb
add
in
xor
add
xor
add
xor
add
or
add
or
and
or
adc
or
sub
or
push
xor
add
or
sub
or
cmp
or
xor
or
inc
xor
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
add
fisubl
sbb
inc
jbe
sub
xorb
adc
int3
add
jo
fsubrl
pop
adc
push
jo
sahf
pushl
inc
lock
in
xor
or
pop
hlt
ja
nop
cmp
sub
mov
dec
dec
or
inc
inc
push
xor
cmpsb
cmp
add
or
lret
inc
addr16
movsl
sub
sub
lret
andb
stos
test
or
ds
jecxz
clc
jno
add
mov
sbb
mov
pop
outsb
xor
lods
add
push
bound
jns
mov
mov
push
sbb
mov
in
mov
adc
pop
mov
adcb
xor
outsb
ret
adc
add
shrb
cvtps2pi
and
xchg
repz
adc
or
adc
sbb
leave
lock
add
in
pop
add
and
and
rcll
mov
inc
test
or
adc
ss
aad
loop
in
adc
adc
arpl
xor
sub
cwtl
daa
dec
xchg
mov
or
jbe
add
gs
sub
add
push
hlt
ret
sbb
mov
adc
sub
add
sahf
repz
outsl
hlt
or
inc
test
outsb
pop
xor
sbb
or
pop
push
pusha
adc
adc
jl
mov
dec
add
pop
mov
lods
icebp
inc
jo
sub
add
outsb
fildll
gs
and
adc
mov
adc
clc
test
data16
add
push
arpl
push
out
or
gs
inc
add
or
nop
mov
pop
jle
movsl
movsb
xchg
lcall
clc
inc
push
push
mov
push
out
addr16
lahf
mov
dec
ljmp
push
icebp
in
sahf
in
add
imul
arpl
sub
cs
push
mov
inc
cli
mov
shl
aam
int
and
pop
adc
movl
fnstenv
lods
das
ja
pop
mov
es
stos
arpl
and
inc
sbb
aaa
outsb
popf
jno
mov
mov
mov
subb
push
push
dec
adc
and
and
cld
xor
mov
xor
retw
ds
xchg
and
mov
hlt
jp
cld
and
push
xchg
shlb
or
add
add
xchg
rorb
mov
pop
inc
sbb
inc
sbb
pop
pop
dec
sub
mov
and
or
cmp
fnstcw
add
aas
add
add
jns
and
jg
xor
decl
pop
and
bound
arpl
add
add
roll
lahf
shll
adc
xor
out
cmc
add
mull
popa
clc
and
mov
aam
mov
rolb
mov
add
or
or
scas
cmp
rorb
in
adc
arpl
sahf
sbb
fcompl
add
add
add
add
nop
popa
es
daa
adc
cld
sub
mov
adc
jne
adc
and
or
popa
adc
add
or
shlb
mov
ljmp
push
cwtl
mov
and
jns
inc
add
add
roll
push
or
push
sbbb
js
or
sbb
xor
adc
testb
addr16
push
add
mov
sahf
arpl
sub
adc
mov
xor
inc
movsb
xchg
pop
inc
movsl
insb
inc
mov
inc
mov
mov
jb
add
cmp
nop
inc
xor
jne
add
flds
mov
cmp
or
repz
stos
repz
mov
sbb
lods
xchg
mov
or
test
lds
add
xor
adc
icebp
nop
dec
cmpsl
xor
test
xor
movsl
mov
adc
daa
xchg
cltd
xor
xor
cwtl
pop
add
rcll
push
mov
sub
cld
add
pop
lret
sbb
xor
sbb
add
add
add
xchg
add
add
add
cwtl
add
push
scas
or
mov
inc
dec
rorl
repz
add
inc
cmp
jae
add
rcrb
rcl
adc
out
icebp
out
testb
testl
sti
add
add
imul
mov
or
adc
adc
jns
subb
in
sbbb
mov
add
subb
gs
mull
xor
subb
cs
sbb
sbbb
andb
mov
cmp
or
inc
adc
dec
add
add
jl
inc
popl
sub
dec
rolb
sbb
add
rolb
add
add
faddl
mov
add
or
mov
add
jmp
add
xchg
push
add
or
scas
sub
sub
dec
test
or
je
and
jecxz
sub
sbb
dec
push
aad
jecxz
cli
jmp
sbb
fwait
les
test
or
inc
inc
add
enter
test
sub
cmp
add
xor
and
shll
jne
and
and
out
aam
and
mulb
xor
and
and
dec
lahf
pop
and
jle
fiaddl
loop
add
adc
jge
jp
mov
sub
pusha
inc
nop
cmp
ret
dec
inc
mov
sub
aaa
adc
adc
add
adc
sub
bound
insb
cmc
out
in
fwait
call
add
je
mov
adc
cmp
pop
inc
jbe
inc
movsl
js
ret
in
loope
test
jge
jle
jmp
cmp
inc
and
adc
inc
adc
or
add
add
inc
bound
out
mov
or
pop
or
or
push
jl
mov
insb
mov
push
mov
ficoml
jge
adc
mov
mov
mov
xchg
adc
rcrb
subl
and
sbbb
inc
xchg
or
mov
and
xor
mov
cmp
dec
cmpb
lods
adc
add
and
add
dec
mov
pusha
pop
adc
adc
adc
and
and
and
and
add
adc
jl
push
add
idiv
and
cmp
push
xchg
and
cmp
testb
insb
push
inc
shlb
add
pop
jno
cld
and
int3
pop
notl
sbb
sub
dec
sub
pop
orb
lahf
mov
push
in
xor
sub
shlb
inc
mov
add
cmp
cmp
push
add
pop
add
and
cwtl
add
movl
add
sarb
sbb
cmp
mov
mov
mov
aas
inc
adc
add
mov
aad
mov
xor
xor
and
mov
jb
push
dec
jne
xor
cmp
push
inc
add
mov
ljmp
lods
jl
sub
pop
incb
loop
pop
cmp
push
add
add
fcomps
or
cmp
ss
inc
push
test
aas
add
insb
mov
mov
jp
test
add
push
ret
add
push
loope
dec
bound
pop
sbb
cmpsb
loopne
pop
push
dec
pop
add
sarb
pushl
aaa
sbb
leave
push
dec
pop
sti
popf
outsl
cli
add
and
ret
add
add
jmp
sbb
dec
sbb
inc
paddusw
and
loopne
sbb
lea
push
sub
call
pop
push
mov
dec
into
stos
sub
and
xor
nop
mov
adc
or
and
icebp
sub
mov
or
out
and
in
call
jne
jo
outsl
popf
xor
and
and
push
and
xor
pop
or
adc
xchg
mov
push
inc
cmc
cmpsb
add
add
adc
lods
mov
popf
xchg
aas
call
pop
inc
js
or
add
xor
sbb
icebp
push
push
mov
int
addr16
mov
popa
inc
hlt
stos
jno
mov
daa
pop
push
or
out
mov
addb
movsb
rolb
adc
dec
cwtl
sbbl
sbb
daa
in
out
in
dec
aas
aam
fcompl
adc
mov
inc
incl
or
xchg
pop
add
sub
push
push
mov
das
outsl
add
mov
mov
push
cs
add
or
sbb
rorb
push
dec
dec
mov
or
inc
imul
add
and
outsb
add
shl
fsts
stc
inc
and
xchg
add
adc
dec
sub
pop
mov
insl
pop
in
mov
bound
movsl
arpl
gs
add
add
mov
add
popf
popa
add
and
jnp
mov
xlat
inc
add
ds
cmp
xor
mull
aaa
xchg
andl
push
out
pop
mov
or
mov
xlat
pushl
in
mov
jae
testb
adc
rolb
inc
leave
mov
mov
dec
fs
xor
inc
imul
jo
popf
or
pop
pop
and
cmpsb
dec
sbb
xchg
mov
adcl
dec
xchg
cmp
adc
or
push
jnp
fsts
adcb
fiaddl
dec
add
dec
in
loope
push
pop
or
add
inc
aas
mov
lds
int
call
fdivrs
inc
push
lahf
cld
or
dec
xor
loop
popf
ja
pop
test
adc
sub
add
push
dec
xchg
int3
adc
or
mov
sub
jge
mov
add
ret
add
jl
es
adc
mov
pop
mov
mov
xchg
in
scas
inc
addb
and
and
xchg
loopne
mov
mov
push
je
or
cs
mov
pop
mov
adc
dec
orl
rol
jge
add
lods
mov
pop
dec
and
adc
mov
bnd
fdivr
pop
inc
lcall
sub
add
adc
add
cltd
pop
cmp
stos
clc
lcall
out
adc
cmpsb
mov
bound
jbe
adc
xorl
cmp
push
sub
cmp
stos
mov
jb
loope
loop
mov
ret
add
pop
test
push
out
arpl
inc
add
add
in
cwtl
pop
repz
addr16
loop
sub
int3
movsl
fcoms
std
mov
call
xchg
pop
pop
jns
test
shll
cmp
in
pop
cmp
mov
ret
add
in
movsb
push
mov
or
add
add
pop
add
int3
xchg
dec
dec
sarl
push
sbb
jmp
addb
les
fiadds
sarl
mov
jp
xchg
cmp
dec
add
and
fisubs
and
stc
pop
addr16
lret
add
push
adc
cmp
sahf
mov
shr
fldl
fisttps
movsb
inc
xor
and
lahf
push
add
xor
shl
add
fisttpll
mov
lcall
mov
pop
dec
inc
or
incw
add
scas
fidivrl
inc
aad
adc
mov
xor
outsl
and
les
andb
fprem
mov
imul
mov
iret
add
adc
aam
ja
repz
push
cld
jns
push
mov
jb
xor
add
push
cmc
mov
scas
repz
xchg
and
adc
add
lret
mov
push
inc
in
xchg
adc
dec
adc
nop
iret
or
dec
pop
pop
dec
into
mov
lods
outsb
sub
inc
flds
adc
add
fstpl
or
pop
aas
in
gs
scas
mov
xor
cmp
adc
call
sub
inc
movsb
iret
sbb
mov
add
fs
and
sahf
aaa
adc
sarl
cmpb
and
cmp
imul
insl
push
arpl
sub
inc
add
push
jmp
sub
and
mov
cmp
out
or
aam
add
sti
jbe
rcll
cmc
scas
shll
sub
mov
pcmpeqd
and
pop
in
push
add
inc
inc
test
mov
jmp
dec
sbb
sbb
xor
orb
out
pop
dec
add
pop
popf
and
cs
push
cmpsl
xchg
jno
aam
mov
bound
fld
add
mov
cmp
dec
daa
orl
enter
arpl
movsb
ret
iret
cmc
sub
and
in
addps
out
add
inc
insb
cmc
shrl
xchg
and
mov
and
in
cmp
aad
add
jo
pop
es
insl
push
cwtl
mov
add
or
push
and
pop
ja
cmp
adcl
pop
mov
inc
mov
mov
insl
push
les
adcl
sbb
sbb
je
sub
push
xor
or
mov
cmp
pop
icebp
mov
mov
stos
inc
clc
mov
test
xor
in
inc
mov
push
call
stos
add
out
pop
pop
add
adc
adc
daa
inc
into
add
jnp
adcb
sarl
add
js
cmpsb
pop
test
aam
enter
mov
adc
jb
add
repnz
out
sahf
rorl
or
and
dec
lods
jg
or
sbb
pop
adc
xchg
stos
mov
or
dec
fsubrs
pop
loope
jge
and
jbe
fimuls
popf
les
flds
loopne
sbb
cld
cmpsl
sbb
js
sub
mov
inc
add
out
pop
pushl
cmp
cmp
ffreep
inc
pop
adcb
cmpl
iret
dec
enter
add
loopne
cmpsb
push
cmp
mov
arpl
pop
add
cli
jne
sub
add
in
les
movsl
cmp
sbb
pop
stc
inc
inc
adc
call
fdivl
mov
pop
test
testb
add
push
loopne
adc
call
test
add
imul
ret
neg
mov
mov
push
clc
jle
xchg
pop
push
pop
and
jecxz
dec
push
adc
push
pop
pop
test
cmc
sbb
xor
xchg
jmp
scas
test
ret
adc
adc
jmp
aam
ret
mov
movzwl
call
sbb
pop
imul
adcb
out
inc
xor
pop
push
pop
pusha
pop
add
sub
cmpsb
ret
add
mov
inc
inc
sub
enter
daa
add
push
add
mov
push
pop
cmp
mov
call
int
sub
cmpsl
mov
neg
push
cmpb
in
jl
popa
add
dec
mov
mov
xor
ljmp
add
dec
xor
dec
fucomip
add
out
push
pop
pop
neg
dec
test
dec
mov
pop
btc
sub
call
xchg
ljmp
adc
adc
shrb
pop
cmp
bsf
inc
or
fsubr
add
inc
jne
and
cmp
xchg
mov
xchg
add
popa
in
setb
shr
add
xchg
pop
aas
and
idivl
out
stc
and
lret
ss
mov
popa
jbe
add
roll
adcl
adc
sbb
mov
adc
iret
into
add
sub
pop
pop
and
push
call
inc
cmp
sbb
and
push
adc
xchg
push
xorl
add
mov
xor
pop
push
sbb
and
jmp
out
jge
push
das
push
fmull
int
mov
jne
test
xchg
mov
cmpsb
push
lds
xchg
xchg
or
and
or
pop
das
loopne
sahf
test
int
ljmp
daa
push
pop
pop
add
test
fadds
movsb
daa
fucomi
push
inc
and
add
movb
inc
sub
and
es
shlb
and
cmp
dec
add
stc
mov
pop
ret
stos
lea
test
mov
shlb
imul
adcb
in
sar
dec
int3
add
adc
ljmpw
stos
xchg
test
movsl
nop
cmpsb
mov
inc
imul
std
ss
push
cmovns
scas
cmpb
test
inc
out
mov
push
in
call
clc
sbb
mov
mov
push
not
push
sarl
into
iret
dec
mov
add
lock
sti
sub
cwtl
mov
and
nop
bound
sub
push
ret
addr16
mov
neg
and
add
inc
or
test
add
adc
or
in
xchg
adc
or
out
mov
xchg
aam
test
mov
sub
sbb
pusha
out
jmp
push
stos
mov
jae
jge
cmpsb
mov
ret
push
pop
bound
loope
dec
add
movsl
adc
push
xor
mov
xor
cwtl
roll
popf
jno
popa
and
pop
test
leave
pop
inc
jb
out
arpl
push
jo
movsl
mov
in
iret
inc
rcrb
dec
notb
add
adc
xchg
jbe
ds
popf
rolb
add
or
pop
push
es
xor
data16
xor
push
mov
lock
push
roll
imul
stc
mov
daa
sub
inc
enter
mov
xorb
notl
popf
adc
dec
dec
adc
sti
mov
add
adc
mov
push
loopne
adc
or
cwtl
mov
test
xor
lret
mov
dec
adc
hlt
adc
fwait
ret
dec
xchg
push
xchg
insb
test
stos
jecxz
clc
pusha
xor
daa
in
out
lcall
pop
imul
insl
test
sbb
mov
add
xchg
sub
rcl
es
adc
in
or
divl
push
aam
mov
xchg
adc
testb
addr16
dec
mov
imul
cwtl
mov
sbb
mov
inc
shr
push
mov
adc
mov
inc
cmp
cmp
push
ret
xor
add
lock
or
add
sbb
pop
xchg
int3
mov
jno
xchg
std
inc
inc
add
daa
loope
or
cmc
cs
adc
negl
inc
and
add
shll
gs
or
rcll
sub
mov
dec
cmp
icebp
jmp
ds
and
rcrb
neg
in
xchg
dec
imul
xchg
and
add
scas
push
mov
cmp
cwtl
jbe
or
neg
loopne
and
notl
push
lds
dec
xor
add
xor
pop
or
pop
mov
in
out
pusha
mov
aaa
lods
push
add
cmp
cmpsb
xchg
or
xchg
jo
sar
add
int
cwtl
je
add
adc
sti
mov
test
aad
sub
sub
dec
jbe
divl
jae
inc
and
sti
jno
outsl
or
cmp
and
xor
mov
nop
adc
mov
or
jnp
pop
jecxz
xchg
adc
loop
leave
push
ret
movl
cwtl
sub
inc
xor
dec
mov
dec
test
push
inc
aad
test
mov
add
fwait
out
call
inc
mov
xchg
test
inc
imul
xcrypt-cfb
cmpsl
bound
inc
and
or
mov
dec
pop
test
lock
xchg
loop,pt
fcompl
push
and
add
sbb
or
sbb
mov
dec
lret
xor
jge
adc
xchg
addr16
adc
fnstenv
adc
adc
push
pop
fdiv
cmpsb
in
and
or
push
mov
ret
push
jecxz
and
pop
int
sub
stc
xor
ja
dec
inc
or
fisubl
loopne
mov
imul
and
or
cmc
inc
jle
xor
push
mov
repnz
mov
rorb
adc
test
dec
aas
neg
cmp
repnz
nop
orl
je
fwait
cmc
loopne
or
stos
insl
test
push
xorb
inc
push
push
inc
jnp
outsb
aad
lahf
add
rolb
sub
fnsave
mov
mov
push
inc
push
sub
add
and
negb
cmpsb
push
fldl
add
mov
adc
ja
adc
shlb
sub
cmpb
and
movsb
adc
adc
lcall
outsb
popf
cmpsb
lea
mov
fistpl
popf
push
mov
test
aaa
adc
ret
mov
xor
jecxz
sahf
andl
and
rcll
xor
mov
aad
cmp
add
adc
mov
lret
xchg
add
jmp
push
cmc
mov
jge
sub
fbld
movsl
jle
dec
notb
ret
test
cwtl
jmp
xor
pushf
xchg
orl
mov
cs
mov
nop
ss
rolb
cltd
adc
inc
push
lds
fidivl
loope
inc
push
push
dec
xchg
stos
repnz
cmpsb
mov
hlt
inc
inc
add
aam
sbb
push
imul
shrb
mov
xchg
ss
cwtl
stos
lret
dec
test
xchg
push
xchg
adc
sbb
ffree
inc
test
mov
add
pop
inc
jl
mov
insb
std
mov
and
xchg
push
inc
arpl
xor
inc
adc
xor
es
pop
fstl
pop
idivl
iret
pop
and
adc
dec
bt
and
rcll
add
cmpsb
xchg
add
dec
xchg
ljmp
adc
add
pop
dec
jo
xchg
sub
dec
into
and
hlt
fwait
mov
mov
xchg
addr16
add
fmul
mov
dec
fisubl
fld
dec
ret
push
push
test
sub
js
adc
pop
cmc
sbb
jg
add
in
in
ret
xchg
add
inc
add
jbe
push
nop
js
cmpsb
lahf
push
sub
aaa
or
pop
and
lock
or
mov
mov
iret
shrb
lcall
sti
push
xchg
lock
ret
add
mov
fbstp
lret
pop
xlat
dec
sbb
inc
sub
cmpsl
dec
push
add
inc
push
js
xchg
mov
xchg
mov
or
or
xchg
xchg
xorb
nop
repz
lret
stos
xor
dec
cli
and
shl
not
cmp
mov
sub
jle
or
push
pop
jmp
ret
sbb
test
or
pop
lods
std
in
adc
test
mov
inc
xor
inc
mov
mov
adc
inc
sti
mov
test
fidivl
mov
cmp
xchg
je
lret
push
cmp
mov
cwtl
cld
mov
push
movsl
nop
notl
xor
in
sbb
fildl
mov
cs
or
and
ret
or
inc
mov
xor
dec
cmpsb
fwait
or
add
not
and
mull
dec
lock
lock
jge
dec
ret
sti
mov
adc
into
mov
or
lock
sbb
dec
sti
pop
and
xor
out
cmpsl
xlat
or
test
insb
xor
jo
jmp
push
fildll
movl
inc
push
adc
sbb
fs
adc
push
sub
shlb
mov
divl
xchg
hlt
in
in
imul
jo
or
jne
pop
cwtl
test
rcrl
dec
dec
rcr
in
jne
adc
fisttps
and
sub
pop
mov
fsts
shlb
enter
xor
shll
xor
and
xchg
mov
push
nop
sub
sbbl
loopne
adc
ret
add
jns
stc
xchg
cmc
adc
jmp
dec
mov
and
push
ret
or
push
push
jmp
xor
adc
xchg
sub
int
pop
orb
cmpsb
mov
mov
adcb
mov
push
fsubrp
add
jno
sbb
loopne
test
pushl
fimuls
adc
ljmp
push
imul
int
ret
add
aaa
mov
cmpsl
mov
mov
dec
adc
push
pop
hlt
imul
jo
or
out
cwtl
sti
in
and
or
jp
incl
stos
dec
or
ret
xchg
or
vcvttpd2dqx
push
cs
or
jecxz
jmp
adc
add
sar
mov
and
add
or
mov
adc
hlt
cmp
shll
jae
push
mov
cwtl
add
mov
fcoml
adcb
jmp
or
repnz
bound
mov
sub
dec
inc
iret
adc
mov
dec
jle
outsl
add
push
lods
or
popa
hlt
sub
xor
dec
leave
addb
mov
std
loop
dec
pop
movsb
sub
cli
addr16
sub
adc
add
nop
cmp
dec
shlb
or
lods
bound
lret
push
out
mov
adc
repz
push
push
repnz
mov
cmp
leave
int3
or
popa
push
push
push
xchg
cmp
nop
pop
ja
fcmove
sub
push
push
jmp
repz
xchg
sti
mov
and
dec
mov
jb
push
ret
mov
and
testl
and
notb
lcall
inc
data16
aaa
mov
push
pop
mov
inc
push
jmp
and
lock
add
or
movsb
loope
pusha
outsl
lods
stc
repz
pop
mov
pop
mov
sub
sahf
cmp
mov
aad
data16
cmp
jne
repz
xor
mov
sarb
arpl
leave
shll
and
pop
push
or
add
test
pop
mov
sbb
imul
pop
push
sub
shlb
test
adc
sbb
and
arpl
sub
or
push
jne
mov
or
aad
push
mov
cmpsb
pushf
sbb
or
pop
push
and
mov
movsb
es
lret
xchg
sbb
mov
repz
loop
sbb
in
add
dec
mov
int
mov
dec
mov
xor
and
inc
les
addl
ret
and
sbb
aad
cld
out
adc
pushf
call
xchg
xchg
push
test
test
and
add
in
dec
mov
dec
inc
mov
movsb
adc
xor
stos
or
adc
and
fnsave
jl
add
adc
push
pop
add
xor
mov
mov
ja
dec
dec
mov
xchg
push
jmp
bswap
mov
int3
daa
fldl
inc
out
pop
inc
test
fistl
adc
shlb
sbb
aam
lock
stos
sub
mov
lahf
xchg
xor
hlt
xor
push
xor
pop
mul
pop
and
jl
filds
mov
stos
pop
xchg
adc
pop
call
mov
into
inc
add
loop
das
and
imul
out
movhps
clc
sub
add
push
sbb
orb
jno
push
or
data16
or
mov
cli
andb
inc
leave
out
xor
std
jo
xor
push
cli
fsub
daa
mov
mov
aaa
lret
sub
cli
add
stos
mov
dec
dec
xchg
fisttps
mov
push
add
cld
and
or
fcmovbe
push
gs
or
sub
loop
mov
mov
inc
loope
adc
jae
fwait
pop
test
xlat
repz
push
dec
add
adc
je
cmp
sub
cltd
cmp
mov
loope
leave
mov
push
push
mov
or
enter
sahf
ds
call
popa
jge
rclb
outsl
inc
jl
mov
mov
sar
hlt
dec
xchg
add
pop
dec
pushf
std
xor
mov
mov
jecxz
pop
sbbb
sar
clc
cs
mov
add
pop
dec
pusha
pushf
aaa
jge
push
push
pop
sub
inc
pop
call
cmc
cmp
sbb
or
adc
roll
repz
push
sub
push
pop
les
bound
daa
stos
lcall
add
stc
xor
sti
mov
bound
cmp
fs
loopne
adc
dec
roll
clc
mov
cmp
push
and
adc
jmp
add
rorb
dec
inc
xchg
jp
cmpsb
adc
inc
xchg
jns
fildl
cwtl
repz
fbld
mov
and
test
sbb
sbb
out
and
outsl
push
adc
es
dec
punpcklbw
adc
xchg
xchg
fildl
and
inc
and
or
xchg
cltd
mov
rolb
mov
pop
out
or
lds
arpl
pusha
sub
xchg
sar
lahf
insl
clc
dec
pop
lds
or
xor
stc
sbb
enter
test
ja
add
lods
mov
mov
pop
push
or
inc
jno
sbb
out
adc
hlt
inc
mov
and
roll
sbb
lds
inc
and
in
add
cmp
xchg
repz
clc
dec
arpl
incb
shll
inc
inc
aaa
pop
xchg
push
movsb
or
test
int3
mov
fstl
clc
sub
xorb
pushf
sahf
adc
lock
into
sbb
sbb
dec
mov
lret
idivl
cmp
scas
testb
and
jecxz
outsl
xor
lret
mov
imulb
or
cltd
daa
fadds
add
into
dec
ret
cmpsb
testb
cli
cld
cmpsb
addb
xlat
aas
cmpsl
cmpb
int3
add
add
mov
out
pop
lret
nop
ret
push
or
gs
rcrl
daa
jno
lretw
in
sub
in
sub
and
xchg
lds
repz
pop
sbb
mov
pusha
jmp
loop
dec
inc
add
xor
aas
jae
rcl
ljmp
sahf
lea
aas
popa
in
and
lds
add
mov
adc
inc
je
loope
and
push
das
pop
cmp
andb
pop
aam
adcl
add
mov
setno
pop
and
sub
fdecstp
fnsave
repnz
out
in
incb
inc
cmp
lret
add
hlt
mov
int3
les
mov
out
orl
lahf
cli
shll
out
dec
mov
mov
ja
pop
xor
jo
push
outsb
in
imul
jb
push
jmp
dec
push
and
pushf
mov
push
pop
in
fstps
bound
movsb
inc
and
dec
xor
mov
pusha
add
xchg
test
cmpsl
sub
or
ljmp
daa
or
sbb
push
sub
jl
push
fidivl
adc
movsl
insl
int3
jge
inc
or
jecxz
pusha
xlat
jbe
int3
dec
push
test
add
push
imul
addr16
push
pop
pop
sarb
ret
decb
adc
stos
cmp
sbb
push
pop
xchg
xchg
cmpsb
scas
adc
lods
jp
xchg
movsb
daa
add
pop
and
jnp
mov
lds
mov
xor
sbb
or
pusha
or
call
cwtl
scas
or
clc
jge
rorl
mov
and
leave
dec
push
push
push
icebp
jo
in
mov
cs
ja
imul
movsb
add
lret
xorb
jns
xor
into
mov
xor
sbb
push
jo
cmp
aaa
lret
cmp
rol
push
je
jno
daa
xchg
jb
cli
mov
inc
mov
sub
cltd
rorb
sbb
mov
icebp
mov
jo
xor
sbb
push
shl
icebp
or
jp
add
lock
jle
dec
fldz
sti
nop
pop
or
or
adc
stos
aaa
arpl
mov
in
xchg
or
jge
or
add
sbb
into
dec
test
leave
rorl
sarb
aaa
adc
es
js
lods
push
popl
mov
jae
outsl
xor
pop
and
imulb
adc
rorb
nop
pop
add
mov
insb
and
cmpb
es
dec
xor
push
cmp
pop
pop
push
push
adc
fsubrs
push
sbb
dec
dec
mov
add
mov
or
lcall
mov
jno
jno
je
jo
call
add
and
dec
nop
push
call
fstpl
xchg
leave
sarb
sub
adc
inc
orl
addb
sbb
fs
insb
or
dec
mov
pop
jo
push
add
rorb
push
ret
push
jle
aad
or
fwait
icebp
sub
add
movsw
cmp
pop
pusha
sbb
xlat
mov
xchg
hlt
repnz
or
jl
push
mov
pop
lods
mov
add
mov
daa
cmp
out
dec
xchg
adc
mov
pop
or
cmp
cmpsb
test
das
add
iret
int3
add
lret
rorl
xor
hlt
jns
add
pop
insl
push
pop
movsl
add
arpl
sarl
dec
js
mov
inc
mov
push
pushf
dec
add
ret
pusha
mov
iret
popa
subb
inc
jmp
imul
cltd
bound
mov
cmp
in
sub
or
inc
add
and
ret
fmull
adc
sbb
ss
mov
dec
test
jmp
sbb
adc
xchg
in
add
mov
xor
mov
add
sub
arpl
sub
incl
aad
push
cmp
sub
cmpsb
das
pop
mov
lds
xchg
push
cli
push
sahf
or
cmp
sbb
fdivrl
hlt
imul
shrl
and
pop
testb
btc
pop
inc
or
movsl
sti
sub
fmul
xchg
or
dec
mov
adc
cmpsb
sub
sub
add
adc
push
ds
loope
stos
xor
push
ja
xchg
dec
mov
inc
mov
dec
mov
dec
popa
push
lods
add
dec
shll
orb
or
mov
shll
sub
add
cld
popa
iret
mov
and
sub
sub
pop
testb
pop
aam
stos
pop
out
sub
lods
call
xchg
xor
loope
loope
movsl
mov
xor
add
mov
ds
fildl
adc
dec
pop
mov
xchg
mov
lret
sub
outsl
adc
aas
add
sub
push
idivb
mov
in
push
pop
xchg
and
sbb
xlat
neg
pushf
aaa
adc
int3
shll
pushf
push
hlt
cmp
pop
add
mov
subl
nop
inc
jo
or
outsl
inc
in
inc
inc
sbb
xchg
jecxz
push
dec
repnz
push
push
in
cwtl
icebp
or
push
rolb
cld
pop
rolb
out
insl
and
xor
fnstsw
mov
ror
inc
adc
add
rorb
xor
dec
adc
fld
sub
adc
dec
addb
xchg
mov
ja
loope
adc
add
jae
inc
dec
dec
les
mov
pop
push
pop
pop
adc
xor
mov
or
movsl
xchg
and
pop
dec
mov
add
jg
xor
iret
das
push
mov
or
xchg
adc
xor
movsl
add
cmp
xchg
and
mov
out
lea
lcall
mov
loope
sbb
das
test
pop
xor
or
fwait
sbb
adc
lcall
repnz
and
add
cwtl
add
push
push
dec
adc
pop
mov
xlat
popa
popa
test
roll
in
push
adc
inc
stos
jmp
mov
dec
mov
mov
jmp
push
xor
add
insl
sbb
mov
iret
xor
cmp
leave
xchg
xchg
int3
insb
jno
xlat
cmp
lret
inc
add
fdecstp
rcll
push
adc
xchg
es
adc
mov
popa
jb
lds
notb
bound
mov
and
push
leave
sub
enter
push
lock
mov
inc
daa
jne
sub
add
fwait
and
jbe
xor
test
movsl
ss
inc
repnz
jne
insl
mov
outsl
xor
inc
mov
jb
mov
sub
or
mov
pop
daa
mov
or
sub
test
mov
cmp
outsb
das
xchg
push
push
mov
xchg
mov
jb
cli
add
std
leave
lcall
scas
ror
dec
test
popa
add
inc
leave
sbb
fsts
outsl
lock
aad
out
or
inc
aas
sbb
test
ret
insb
mov
orl
jle
data16
sbb
jae
mov
add
add
xchg
js
sub
mov
xor
ret
cmc
sub
xchg
ljmp
jp
mov
dec
xchg
movsb
inc
int
pop
push
mov
jae
pop
fnstcw
mov
or
xchg
or
enter
sub
sbb
jp
cltd
shr
dec
nop
imul
dec
jne
insb
mov
divb
sbb
gs
js
and
and
push
mov
rorl
cltd
addb
adc
mov
das
pop
push
jp
or
fs
sbb
sub
aas
cmp
pop
lcall
xor
and
orb
daa
ljmp
and
dec
aaa
loopne
xlat
pop
jmp
push
xor
jnp
in
nop
sub
xor
jno
add
add
js
pop
lea
test
inc
pop
scas
jo
mov
cmpsb
pop
hlt
mov
sbb
push
mov
cmp
int
or
inc
std
mov
mov
sub
lea
inc
add
out
inc
jnp
aas
and
sbb
adc
hlt
cmp
frstor
and
aad
adc
rclb
sti
jle
jno
or
xor
sub
aam
inc
xchg
stos
cli
lret
lods
push
dec
orl
jbe
push
inc
push
jno
in
rcl
loopne
inc
test
lds
mov
lods
sub
testl
jno
add
jne
xchg
or
ss
push
mov
shl
jge
cmp
lods
jnp
scas
inc
sub
push
dec
sub
push
in
inc
xor
pop
xor
cmpb
stos
xchg
push
push
icebp
pop
add
pop
add
sarl
jnp
xor
leave
cmp
shrl
jmp
cwtl
adc
sbb
out
dec
jnp
jp
movsb
sbb
fiadds
lods
dec
sub
mov
xchg
mov
push
mov
outsl
jl
fnstcw
pop
daa
mov
or
les
pop
pusha
insb
mov
xchg
jns
jp
sbb
hlt
dec
popa
scas
sbb
push
in
movsb
out
pusha
sub
insl
popa
jmp
test
pop
jno
sub
daa
scas
or
inc
mov
mov
push
pop
dec
cmpsb
pop
xchg
cmpsb
xchg
mov
dec
test
icebp
mov
dec
jmp
popf
filds
push
sbb
mov
in
xlat
push
mov
push
rorb
inc
jbe
fs
pop
faddl
lret
ljmp
gs
daa
popf
sub
pop
push
sarb
fcmovnu
jb
out
push
or
mov
bound
pop
ror
add
push
sbb
es
and
pop
lock
aaa
fnstsw
sahf
subl
pop
cltd
xor
fsts
pushf
aam
push
inc
adc
es
fistl
jg
add
fabs
inc
mov
dec
push
je
jb
outsb
xchg
mov
xchg
adc
inc
or
inc
xchg
and
or
scas
push
or
pop
xchg
pop
push
outsb
cmp
cmp
mov
adc
pop
mov
imul
stos
add
rcrl
imul
nop
mov
loopne
popa
sar
addr16
mov
movsl
negl
fwait
xchg
cmp
into
test
pop
add
mov
stos
arpl
or
daa
cmovge
addr16
inc
insl
xchg
scas
loop
mov
and
cmp
jl
fs
adc
outsb
and
pop
mov
add
aam
lahf
cltd
jno
nop
adc
or
aam
pop
mov
das
cmpsb
push
mov
in
xchg
pusha
movsb
shll
inc
sbb
inc
mov
and
jp
insb
jbe
sti
mov
xchg
xchg
bound
popa
test
push
aad
mov
lret
stc
loope
dec
ficomps
mov
in
lods
or
inc
adc
sarb
and
mov
and
mov
mov
int3
int3
data16
push
mov
in
add
add
push
xchg
popf
add
jbe
pop
shrl
adc
sub
aas
mov
leave
and
jae
lock
es
adc
lods
orl
ss
sbb
push
push
dec
or
mov
mov
cmp
cltd
mov
leave
xor
or
cld
faddl
pop
enter
std
inc
jne
das
push
lahf
mov
cmp
fwait
add
stc
xor
leave
out
movsl
fucomi
and
mov
jecxz
adc
popa
push
repz
lods
insl
xchg
jmp
jno
jo
inc
mov
jl
lods
inc
and
mov
mov
adc
out
and
dec
mov
xlat
arpl
pop
push
fcoml
inc
pushf
leave
shrb
jle
imul
add
cltd
adc
popa
pop
mov
cmp
or
imul
fsubrl
aam
out
out
add
jmp
fldl
push
sbb
push
jns
xor
movsb
call
or
daa
push
and
sbbl
pushf
xor
add
sub
pushf
movsl
sbb
das
mov
cltd
loopne,pt
roll
adc
or
lea
cli
mov
lock
pop
cmp
or
fisubrl
mov
insb
push
mov
sub
pop
fistl
enter
repnz
scas
je
stc
pop
jle
mov
sub
and
jg
scas
dec
xor
popa
xchg
mov
call
and
adc
lods
jle
sub
jmp
int
cmp
and
jae
repz
push
add
or
mov
pop
repz
mov
in
inc
cmp
shll
or
lret
push
mov
call
outsb
pop
pop
inc
stos
gs
into
jle
sti
xchg
testb
in
pop
xor
repz
lcall
insb
or
pop
out
loop
pop
jae
or
ja
and
mov
adcb
ret
cmp
loope
out
sbb
or
subb
push
sti
and
adc
jg
xor
add
pop
jecxz
inc
loopne
loopne
adc
cltd
add
pushf
shrl
cmp
test
subb
cmpsl
lock
jmp
dec
or
sub
mov
add
mov
pusha
js
jnp
mov
cmp
xchg
daa
pushf
cltd
push
mov
xor
and
mov
fwait
sbb
mov
and
adc
mov
cmp
inc
mov
dec
inc
gs
pop
icebp
pop
shl
ret
xor
mov
repz
mov
jnp
push
movsb
xor
xor
hlt
or
popa
test
sub
loope
dec
xchg
sbb
jno
dec
jno
mov
xor
jno
adc
xor
int3
sbb
outsb
ljmp
mov
daa
push
movsl
xchg
test
lock
cmp
adc
in
dec
lahf
push
shll
jg
fs
inc
sub
test
inc
les
and
aam
loope
js
and
pop
add
out
sub
repnz
cs
cli
test
test
movl
push
push
orl
pushf
sahf
jb
xor
and
stos
adc
xor
and
cmpl
sub
loopne
inc
xchg
stos
ror
cmp
out
out
push
jp
cmp
lds
fisubrs
inc
push
inc
xorl
push
jl
in
mov
sub
and
jb
lods
push
lock
jno
sub
loop
cmp
adc
mov
mov
sti
push
add
ds
cmp
or
nop
fsubrs
xor
xlat
dec
sub
jmp
stc
out
pop
nop
stc
push
xor
xchg
testb
dec
pop
leave
pop
test
or
xchg
xchg
out
cmp
int
jo
xchg
ja
lds
andl
push
push
fwait
es
movsl
or
cmp
lock
stc
jmp
push
fstpt
fcompl
fs
fidivs
sbb
add
out
fwait
inc
insl
mov
out
jecxz
mov
sbb
ljmp
adc
insb
adc
push
xchg
jecxz
adc
or
test
arpl
imul
lods
sub
jecxz
jnp
mov
push
sub
cmp
mov
lods
repz
sub
dec
jmp
pop
fsts
out
pop
pop
mov
cli
sub
mov
aam
mov
lea
cmp
inc
and
popf
mov
push
mov
rorb
sbb
ficoms
cmp
xchg
jmp
icebp
or
pop
inc
or
mov
dec
dec
mov
mov
dec
pop
mov
pushl
mov
lcall
sub
inc
cmpsl
dec
mov
je
cmp
arpl
lret
mov
je
daa
sub
or
jno
jb
decb
or
pushf
aas
pop
fwait
stos
loop
add
pop
or
jno
xchg
pop
lods
test
push
push
add
xchg
or
pop
sub
and
mov
inc
cmp
cmp
xor
daa
xchg
rorl
pop
jmp
loope
mov
lcall
test
mov
ss
ds
mull
insl
sbb
xlat
iret
inc
das
sbb
iret
xchg
push
push
lods
cmp
clc
jnp
dec
or
js
and
out
sbb
xor
ljmp
je
ret
push
adc
dec
fs
insl
test
es
sbb
outsb
sub
insl
fsubl
and
dec
sub
push
lods
fadds
sub
xor
sbb
mov
jnp
adc
insb
gs
inc
lods
push
cmp
pop
and
in
push
ret
mov
push
or
cltd
stos
fistl
dec
and
jle
loop
pop
movsl
sub
or
mov
cmp
push
pop
popa
push
cmp
push
inc
xchg
and
push
jae
or
cltd
mov
adc
pop
fimull
push
or
movsb
aam
adc
jb
movsb
add
repz
cwtl
adc
sahf
xchg
outsl
enter
nop
mov
lea
inc
dec
mov
or
scas
dec
xchg
lahf
pop
addr16
inc
inc
subl
aad
cmp
jecxz
dec
psraw
pop
cwtl
push
inc
jg
clc
les
insb
pop
and
subb
das
icebp
sub
repz
xor
ss
xchg
xchg
and
mov
mov
inc
or
es
and
flds
test
icebp
fstps
addb
out
xchg
insl
hlt
sbb
add
outsb
push
outsb
add
sub
and
and
and
dec
inc
xchg
push
cltd
mov
sub
inc
xor
pop
enter
ljmp
jg
sbb
daa
and
bound
adc
push
or
xchg
xchg
outsb
push
pop
orl
adc
or
inc
push
mov
fninit
adc
xchg
adc
cmp
xchg
jne
test
mov
cmp
mov
mov
sub
adc
jl
xchg
inc
insb
jle
or
push
inc
push
stos
iret
jle
lock
cmpsb
sub
and
sbb
xchg
sub
fmul
sub
adc
sarb
out
mov
jae
sbb
jl
pusha
test
cmp
sahf
and
inc
jns
adc
mov
mov
and
xor
add
imul
lahf
push
filds
dec
jl
xor
sub
jae
pop
jno
lods
and
insl
or
dec
lods
int
int
lods
imull
xchg
movl
gs
out
cli
push
enter
add
cld
mov
xlat
cmp
sbb
mov
cli
sbb
jl
jnp
test
adc
sar
rcl
add
dec
and
rcrl
jge
add
xchg
aad
fimull
inc
ret
rorl
nop
inc
mov
lods
cmp
xchg
xchg
lcall
push
push
inc
dec
sbb
jns
es
notb
fsubrs
xchg
lock
cmp
dec
mov
ljmp
push
and
cltd
push
lods
mov
push
or
adc
lods
jge
mov
lock
ret
sbb
mov
lods
push
fsubrl
inc
mov
repz
and
mov
xchg
or
dec
add
insb
or
pusha
lods
loopne
fs
repz
sub
push
jo
cmp
addl
cwtl
mov
shlb
jg
dec
adc
pop
push
push
sbb
mov
pop
and
jmp
int
jns
pop
or
lock
test
stc
push
enter
xor
ljmp
and
cmp
jo
inc
jge
fmul
push
push
or
sub
xchg
add
mov
adc
shr
insl
leave
sub
inc
js
mov
sub
and
push
pop
jg
in
push
leave
sbb
adc
test
pushf
add
test
xchg
sub
adc
imul
rorl
push
cmpl
or
mov
jae
fsubl
add
pop
lret
test
insb
xchg
cmc
inc
in
gs
fildl
les
xchg
pop
fs
xchg
clc
pop
jge
cltd
mov
or
stos
add
or
jb
fstp
dec
pop
sub
icebp
popf
ja
pop
sub
movsb
cmpsb
adc
ret
xlat
sbb
pop
ret
add
sysexit
xor
clc
or
lret
mov
leave
push
movsb
std
xor
hlt
loopne
push
aas
jge
jle
data16
stos
push
xchg
and
xor
stos
mov
xlat
dec
dec
outsl
fdivs
shlb
or
pop
add
inc
push
jecxz
out
repz
cmp
out
xchg
stc
movsl
fbstp
in
xchg
cmp
dec
stc
cmp
and
xchg
or
das
ja
mov
lahf
push
add
pop
or
adc
lds
push
cmp
stc
push
gs
sbb
ss
adc
popf
adc
test
jp
popl
mov
xchg
or
sub
aad
xor
add
popf
mov
dec
pop
jne
sub
pop
test
test
mov
adc
pop
movsb
movsl
sbb
test
ds
shlb
aad
mov
gs
ret
out
sbb
sti
arpl
fiadds
mov
pop
test
rcrl
mov
dec
push
xchg
lds
clc
mov
pushf
outsb
sub
add
std
leave
push
add
inc
fs
sub
js
add
out
lods
fstpt
mov
jno
adc
push
push
push
pop
add
outsb
mov
movsl
cltd
push
or
fwait
mov
xchg
pop
test
jecxz
inc
mov
lock
adc
push
push
mov
popf
stc
xor
add
push
loop
or
nop
push
pop
adc
sbb
adc
adc
mov
mov
cltd
insl
fsubrs
xorl
and
inc
pop
jns
popf
decl
aad
loopne
pop
mov
push
loop
or
test
mov
dec
xchg
mov
cmp
xchg
xor
aam
xchg
cmpsb
dec
popf
add
imul
mov
push
push
aas
or
inc
and
mov
bound
mov
add
mov
gs
sub
pop
dec
xor
jmp
arpl
outsl
out
and
les
out
xchg
imul
pusha
clc
les
cwtl
das
xchg
lahf
ds
push
lock
push
adc
scas
lahf
adc
pop
push
cmp
push
ljmp
push
dec
dec
and
pop
dec
push
dec
lea
lds
ja
rorb
pop
jb
jecxz
or
jge
pusha
insb
mov
and
fisubl
mov
dec
dec
loope
lret
out
mov
insl
mov
ljmp
and
sbb
push
push
mov
stos
int3
aaa
pusha
call
push
in
push
ss
push
inc
pop
adc
mov
sub
cmp
rorb
sbb
push
pushf
mov
jp
mov
cmpsb
pop
lock
sbb
or
jb
fnstenv
in
push
xchg
enter
daa
cmpsl
lods
aaa
pushf
aam
insb
pop
pop
adc
mov
test
cmp
nop
inc
ror
or
cwtl
sbb
insl
int3
push
jbe
repz
push
lea
test
les
inc
sub
dec
mov
inc
mov
pushf
int
cld
push
and
stos
mov
mov
mov
mov
call
lock
data16
pop
daa
jo
jne
lods
pop
dec
loopne
mov
call
jne
mov
cmp
addb
and
sarl
cmpsl
push
dec
mov
push
push
pop
inc
aaa
sbb
jge
insl
dec
je
dec
pop
mov
imul
push
testl
sbb
lods
or
in
aad
sahf
cmp
jbe
fisubrs
inc
jno
gs
rolb
js
adc
gs
mov
push
add
rcll
data16
jb
stc
cltd
push
jbe
dec
test
jecxz
mov
stos
and
dec
ss
and
mov
xchg
pop
mov
adc
lret
add
sub
fldcw
daa
mov
loope
pop
xor
pop
jo
pop
jp
and
shlb
es
jle
cmp
xor
pusha
sbb
lea
iret
push
cmc
cld
sub
mov
inc
movsb
stos
pushf
pushf
aaa
add
mov
push
cmp
push
pushf
cmp
xor
into
and
xor
cmp
or
js
pop
xor
repnz
aaa
jg
pop
jp
in
jns
xchg
cmp
into
lock
mov
cmp
pushf
test
jns
push
into
hlt
push
push
enter
adc
movsl
cwtl
aad
pop
push
dec
fisttpl
cmp
repnz
cs
mov
add
lock
cli
inc
fsubrs
mov
imull
and
mov
push
or
sbb
lock
jae
jno
push
and
mov
push
lods
add
add
ret
sbb
add
adc
and
fwait
push
inc
sub
xor
ljmp
xchg
inc
push
inc
add
movsl
icebp
outsl
in
xor
inc
push
mov
push
mov
imul
sbb
mov
inc
sub
jp
jmp
jmp
fbstp
out
flds
adc
dec
in
adc
mov
sbb
mov
mov
sbb
push
movsl
fcomi
fs
xchg
and
push
rol
xor
adc
in
cwtl
out
js
or
mov
cmp
inc
jp
loopne
dec
mov
adc
sbb
push
fisubl
mov
inc
push
cli
inc
mul
mov
xchg
and
dec
sub
inc
aad
jp
out
sub
pop
lea
inc
rcrl
add
shll
push
aad
icebp
jle
jno
jno
xor
faddp
sub
xchg
pop
insl
pop
mov
inc
aas
mov
sub
cwtl
push
jno
out
lds
lods
test
cmp
movsl
lret
fcomip
inc
dec
xchg
test
or
jmp
lds
loop
xchg
daa
popf
inc
inc
rcrl
xor
cmp
or
sbb
inc
in
push
pop
add
roll
clc
popf
xchg
iret
fisubs
sbb
push
and
dec
clc
jno
and
mov
sbb
xchg
mov
mov
or
inc
outsb
arpl
mov
and
add
outsb
xchg
cmp
pop
stos
call
push
xchg
xor
add
cwtl
adcb
fstps
pop
mov
pop
bound
mov
pop
in
movl
xor
inc
outsl
lods
mov
lods
xlat
adc
in
lret
repnz
adc
or
mov
icebp
push
movsb
test
push
push
xor
push
popa
adc
pop
pop
or
imul
adc
xor
jb
lea
aaa
test
repz
pop
mov
xchg
psrlw
dec
add
jnp
pop
addb
in
or
pop
out
pop
mov
pop
sbb
gs
scas
sbb
rorb
adc
adc
sbb
js
mov
loop,pt
mov
cmpsl
aas
punpckhdq
cmp
cwtl
test
mov
test
adc
psrlq
icebp
js
int
cmp
mov
inc
stos
jbe
mov
gs
loop
push
dec
ficompl
mov
mov
ss
fnstcw
mov
sub
scas
mov
lret
ret
js
hlt
test
push
shl
sti
push
data16
ret
scas
cmp
insl
test
adc
stos
outsb
or
jg
sahf
pop
stos
js
cmc
pop
push
lahf
jns
loopne
jg
loope
or
out
dec
movsb
xor
ret
fwait
ret
ret
pop
and
ret
lahf
jns
push
lods
jg
pop
xlat
and
int3
cltd
jne
push
mov
and
test
add
or
push
arpl
sub
mov
or
xchg
sbb
icebp
xor
mov
ss
je
rcl
in
stc
and
jno
test
into
aam
shr
rcll
daa
out
pop
mov
or
pusha
add
fildl
divb
jns
pop
icebp
ljmp
movb
push
pop
pop
push
shl
and
sbb
jo
cmp
push
lcall
daa
repz
pusha
jp
inc
lods
push
sbb
popf
mov
sbb
cld
push
iret
mov
cmp
imul
xchg
outsb
cmp
pusha
int
cmp
popf
mov
or
and
inc
arpl
sub
cs
les
jmp
movsl
xor
or
mov
add
in
sub
xchg
sub
push
fcompl
cmp
xor
aad
adc
leave
mov
add
lret
dec
cmp
fdivrl
push
sbb
gs
push
cs
lea
mov
inc
lds
cwtl
insb
mov
adc
push
daa
adc
pusha
inc
out
sbb
imul
cmp
andl
cs
push
mov
sbb
mov
pusha
fildl
call
xchg
ja
inc
jle
push
inc
mov
ljmp
xchg
pop
ljmp
mov
lea
inc
outsb
jbe
mov
jp
out
in
add
pop
xchg
or
dec
cltd
inc
mov
lret
test
out
add
jmp
xor
popf
shr
into
popa
fbstp
orl
pcmpeqb
leave
rcl
fnstcw
mov
push
lahf
push
and
xor
mov
inc
dec
mov
or
repnz
add
movsl
mov
inc
pushf
out
dec
xchg
mov
lock
jno
fmull
cltd
sbb
inc
pop
and
push
scas
sbb
out
adc
jo
sbb
in
mov
dec
mov
adc
fucomip
fcoml
xchg
fs
push
jno
cld
fwait
incb
fisttpl
pop
imul
ds
cmpsl
add
mov
incb
outsb
inc
push
pop
mov
push
push
push
pop
mov
add
cmp
push
mov
mov
pop
and
add
xchg
or
clc
mov
imul
xor
sbb
inc
out
add
bound
mov
push
icebp
and
push
and
fildl
dec
sub
ss
add
out
int
mov
and
xchg
cmp
jno
mov
add
out
mov
roll
rcll
mov
xchg
scas
ds
lods
mov
pop
insl
pop
pop
mov
and
insb
std
mov
add
rcrl
rclb
xchg
fsub
add
or
ja
jo
adc
into
ficoms
sub
pop
loopne
jge
xor
in
ficoml
les
sub
xchg
add
jo
dec
int
mov
push
loopne
jbe
push
or
flds
mov
dec
ror
sti
xor
jne
gs
out
jb
xor
sbb
push
fcomps
mov
loopne
push
or
sbb
xlat
jle
mov
lods
adc
fiaddl
jne
jbe
pop
es
mov
mov
mov
jns
hlt
iret
nop
stos
mov
js
add
mov
test
or
push
aad
ja
cmp
fsubrs
lods
addr16
pop
fistpll
sub
mov
mov
dec
fwait
mov
repz
dec
push
aad
gs
xor
std
add
inc
push
sbb
aaa
shrl
or
cli
in
insb
add
pop
je
out
int3
push
pop
je
adc
add
mov
pop
xchg
xor
ds
mov
push
jb
jl
roll
mov
js
dec
and
fidivrs
adc
pop
sbbl
outsb
int3
adc
sub
jg
adc
xlat
mov
iret
mov
iret
ljmp
sub
cld
fidivl
xor
jns
shll
mov
int3
sub
pop
add
xchg
fdivrp
daa
dec
or
loop
dec
mov
mov
inc
mov
jl
xchg
jae
fisttps
icebp
stos
fucom
push
sub
mov
fidivrs
dec
sbb
in
sub
fstps
push
int
aad
aam
adc
ffreep
jle
rcr
dec
xor
insl
jnp
or
or
cmp
push
lods
jo
cmp
loop
testb
push
dec
out
sub
inc
shrb
and
enter
adc
cmp
xchg
inc
inc
and
jne
adc
and
sbb
inc
insl
xchg
pop
fs
ljmp
push
jl
and
adc
xor
pop
rcrb
mov
push
and
sar
dec
adc
scas
and
frstor
clc
enter
insb
int
sbb
ret
push
inc
xchg
mov
mov
cwtl
jl
pop
sbb
cmp
outsl
incl
jae
es
dec
mov
fimuls
lret
push
in
in
fwait
add
cli
mov
negb
mov
cmp
test
aas
outsl
test
adc
dec
xchg
test
stos
mov
imul
fdivrs
cltd
push
push
nop
jb
xor
insb
rep
jo
add
addl
test
adc
mov
fldcw
sbb
js
and
push
inc
adcb
jl
xchg
jae
test
cmp
movsb
out
int3
inc
test
iret
push
add
or
sti
push
fists
xor
pushf
js
jle
clc
adc
xchg
inc
or
cmp
jmp
pop
sub
scas
mov
push
jns
sbb
sub
cmpsl
add
je
icebp
sbb
sub
push
ja
sbb
jmp
enter
dec
jne
shl
je
push
aaa
push
int
loope
pop
push
push
fisttps
popf
jbe
push
lock
stos
xchg
mov
hlt
mov
dec
push
xor
lds
pop
in
pop
xor
or
sbb
jl
insb
mov
fs
mov
js
mov
xchg
cltd
aad
dec
mov
mov
xchg
sbb
arpl
inc
xchg
inc
into
bound
out
jecxz
xchg
or
xlat
xor
in
lods
in
aas
dec
pop
lret
imul
cmpsl
call
mov
push
lock
sbb
and
repz
jno
arpl
rcrl
movsb
xchg
xchg
push
sahf
outsb
sub
lds
and
jno
and
add
and
cmp
dec
xor
inc
bound
inc
mov
mov
into
loopne
pop
pushf
and
inc
test
repz
jge
orb
ss
add
sbb
pop
sub
push
lods
xchg
inc
mov
and
mov
fisttpll
aad
in
dec
frstor
sbb
pop
mov
adc
adc
jmp
mov
push
mov
enter
clc
les
je
and
int3
or
xchg
shll
std
add
push
adc
dec
movsl
icebp
frstor
jno
sbb
sub
sbb
xor
addl
jmp
ficoml
adc
sbb
lock
push
jbe
sbb
mov
insl
cmpsl
and
imul
jle
cmp
mov
jmp
lret
jnp
gs
xchg
sub
shr
jge
dec
pop
addl
add
test
mov
mov
and
icebp
sbb
adc
popa
cmc
and
inc
andl
push
and
daa
aam
mov
mov
je
or
xchg
data16
cmp
push
inc
mov
sub
mov
adc
fldl
rep
movsl
jmp
leave
sbb
lods
or
and
pop
inc
lds
movsl
cmpl
push
outsl
and
xlat
popf
sub
adc
mov
xchg
pop
jb
pop
pop
xlat
lods
pop
xor
push
mov
daa
mov
out
xlat
jnp
mov
sbb
insl
mov
xchg
cmp
je
bound
jnp
sbb
sti
lret
insb
xchg
add
and
aaa
jge
mov
mov
sub
js
sub
and
and
mov
mov
sub
xchg
cmp
popl
push
adc
mov
mov
ss
movsb
rcll
mov
pop
fnsave
cmp
inc
nop
aas
fndisi(8087
scas
adc
xchg
fld
testb
sbb
nop
xlat
insl
pop
adc
add
add
push
mov
ret
lods
push
inc
enter
cmp
stc
cwtl
insl
in
fsubrs
add
add
addr16
lea
gs
xor
mov
orl
ja,pn
cmpsb
das
add
call
call
in
xor
ret
sub
xchg
jp
sbb
xchg
sub
jae
push
jge
dec
and
das
aaa
or
cmp
fs
cmpsb
std
adc
adc
mov
adc
cmp
push
sub
insl
pusha
or
clc
in
clc
fcom
dec
mov
pop
mov
cli
adc
xor
test
push
mov
cmc
push
cli
inc
ret
inc
stos
mov
fldcw
rolb
movsl
add
mov
xchg
cmp
lods
loop
mov
call
dec
imul
ss
shl
sub
push
popf
icebp
jge
sti
mov
and
imul
fists
lods
xchg
fimull
and
sub
dec
cmp
sub
add
stos
lods
test
data16
cmp
push
jp
push
sbb
add
cmpsl
sahf
loop
pushf
xchg
rcll
dec
lods
inc
and
jp
cmp
lock
or
xchg
int
enter
xchg
dec
addl
adc
xlat
push
lods
lock
nop
int
dec
add
cmp
mov
jnp
das
mov
in
out
jnp
inc
cmp
jbe
jno
mov
push
sub
ficompl
cmpsb
rolb
paddusw
or
mov
stc
out
dec
int3
and
bound
pop
insl
repz
jg
lret
jle
div
stos
bound
ret
imul
adc
lods
shlb
nop
add
rcrl
mov
push
jmp
insl
das
and
loop
or
lret
mov
into
xchg
mov
sbb
jg
insl
mov
xor
sbb
pop
in
or
lea
sti
push
adc
mov
sbb
je
xor
subl
jbe
loop
mov
jge
push
inc
xchg
rorb
loope
or
aad
lret
lea
cwtl
inc
jae
clc
xlat
cmp
outsl
insl
les
imul
faddl
xchg
mov
insl
xchg
shr
sbb
pop
add
dec
or
push
fsubs
sbb
mov
add
push
push
sub
pop
add
loop
mov
xchg
lret
xor
lods
sbb
data16
int
push
mov
mov
cmp
dec
sbb
in
xor
sub
sbb
jge
rcl
xor
pop
jle
jmp
shlb
push
lahf
cmp
lahf
lds
imul
lds
dec
lret
aas
and
mov
xor
inc
aam
mov
sub
push
aam
or
and
inc
jbe
mov
popw
cmp
imul
or
mov
outsl
sahf
out
pop
mov
pushf
rol
adc
scas
push
sub
lret
or
inc
mov
mov
mov
adc
mov
stos
push
adc
les
insl
sbb
xor
jne
pushf
mov
fwait
in
sbb
inc
and
dec
lock
ret
out
cld
out
leave
mov
push
aas
push
sbb
in
add
out
aad
insb
cmp
clc
fistl
and
popf
movsb
sti
mov
xchg
xor
xlat
es
jecxz
ret
sbb
add
popa
or
dec
je
iret
imul
add
jp
inc
mov
popf
fildl
popa
inc
and
inc
popa
inc
icebp
dec
add
mov
sbb
pop
jo
cs
mull
pop
sbb
dec
insb
and
pop
jge
pop
jp
pop
out
xlat
mov
out
fneni(8087
jl
inc
or
and
addr16
cmp
adc
fistl
push
jne
jo
sbb
adc
xchg
imul
xchg
sbb
fiadds
fsubs
mov
mov
sbb
or
int3
mov
int
push
and
mov
and
data16
repz
and
or
adc
add
adc
jmp
xchg
push
pop
push
xor
xchg
add
or
push
dec
fs
test
fnstcw
xorl
and
in
sbb
insb
push
mov
aam
test
incb
xor
sbb
sbb
pop
adc
pop
inc
loopne
out
xchg
clc
hlt
or
mov
or
test
loopne
mov
mov
push
inc
mov
cmp
cmp
push
or
in
pop
in
sub
inc
pop
mov
pop
jne
cmp
out
lods
movsl
xchg
inc
aam
cmpsb
int3
pop
rcrb
or
and
cmp
mov
dec
loopne
xchg
int3
inc
mov
mov
ss
iret
jnp
push
xor
jno
nop
push
adc
jle
pop
xchg
enter
unpckhps
or
pop
and
lods
and
sbb
in
dec
lret
adc
sbb
sbb
testb
mov
das
pop
sbb
stc
add
inc
stos
xchg
divb
jecxz
pop
sbb
nop
inc
popf
lcall
adc
mov
xor
or
sbb
fnstcw
jle
push
rcrb
mov
in
and
mov
bound
dec
sub
ret
dec
pop
xchg
testb
aad
mov
insl
out
daa
enter
pop
cmp
out
and
insb
arpl
adc
out
pop
lret
gs
xchg
bound
movsl
aad
mov
insb
sbb
les
mov
xchg
xor
or
mov
mov
mov
bound
fdivl
das
cmp
cmp
mov
lcall
adc
shl
push
or
jl
shll
loopne
ds
lcall
adc
mov
and
push
inc
movsl
sbb
scas
cwtl
fwait
int
mov
push
gs
adc
or
aas
les
rcrb
adc
in
and
push
lods
iret
dec
sbb
lods
popf
sbb
or
enter
sbb
fcoml
dec
movsb
in
inc
and
push
int3
mov
int
pop
insb
mov
pop
xchg
push
jge
xor
popa
int3
les
push
adc
dec
inc
mov
daa
lea
rcr
shlb
enter
cmp
ret
inc
shr
jmp
mov
xor
or
mov
cmpsl
xor
jno
lods
cmc
xor
fistpl
and
test
lods
popf
cmpsb
pop
inc
cmpsb
and
inc
xor
push
in
pop
or
in
adc
or
rcll
xchg
mov
add
movsl
mov
in
sarb
inc
shl
xor
inc
pop
nop
fldl
cmp
adc
adc
hlt
dec
add
pop
inc
loop
fcomps
add
jmp
dec
jno
pop
mov
dec
sar
lods
not
and
js
out
inc
or
les
mov
pop
cld
insb
pusha
xor
fcmovnb
iret
adc
ss
sbb
les
mov
popa
clc
push
mov
outsl
int3
jbe
mov
shlb
adc
dec
pop
cmpsb
pop
mov
idiv
xchg
imul
and
inc
or
les
fbstp
dec
xor
fcmovnb
in
cwtl
adc
rcrb
mov
outsl
lods
jbe
xchg
fbstp
mov
mov
dec
cmp
mov
enter
adc
lea
mov
jbe
rolb
movsl
cs
adc
ljmp
cmp
or
dec
mov
ss
insb
cmp
inc
inc
pop
rcl
hlt
mov
sub
push
or
call
push
in
fyl2x
mov
je
call
imul
dec
push
xor
inc
push
mov
je
inc
nop
loopne
or
cmp
pop
xchg
test
notl
je
movsb
movsb
rcrl
adc
cmp
and
xchg
fstp
pop
xchg
mov
xor
inc
push
adc
jle
adc
seto
xchg
fs
hlt
cmp
push
cld
out
or
pop
pop
sub
xchg
sbb
or
jno
sbb
loopne
cmp
fisttpl
fstpl
mov
outsb
cli
xchg
cmp
inc
insb
fstp
je
frstor
jb
sub
rclb
cmp
clc
adc
mov
xor
dec
in
dec
push
pop
cmc
mov
cmp
roll
int
push
loop
jae
loope
mov
mov
xor
dec
lods
xlat
adc
xchg
loop
xchg
inc
or
pop
int
adc
fcoml
add
cwtl
adc
or
dec
and
fstpt
xchg
arpl
mov
movsb
fdivs
pop
mov
cld
imul
pop
dec
lods
fstps
xchg
inc
mov
pop
in
lock
mov
and
test
push
in
or
je
or
shlb
hlt
loope
jns
pop
int
or
loopne
cld
lds
and
push
add
or
icebp
dec
jnp
dec
test
hlt
cmp
mov
stos
jae
cmp
pop
xchg
mov
daa
or
in
adc
dec
dec
adc
mov
cmp
inc
outsb
jns
ljmp
out
cmp
cltd
aaa
mov
push
testb
pop
and
inc
jecxz
and
inc
sbb
sub
mov
jnp
xor
dec
jmp
sbb
sub
in
jg
sbb
cld
pop
jg
ret
inc
inc
push
sbb
jno
adc
sbbb
in
push
adc
pop
xchg
inc
das
repnz
jecxz
jmp
fsubs
scas
xchg
test
aaa
inc
fiadds
andb
shl
jl
mov
jno
das
adc
jb
push
fisttps
sarl
jo
jl
jb
movsl
jns
pop
iret
mov
arpl
push
mov
fcompl
sub
andb
push
lds
pop
dec
fmuls
push
mov
popa
pop
jb
lock
jp
in
imul
pop
mov
mov
cmp
sub
lock
repnz
add
jne
pop
or
test
test
repz
or
pop
loop
add
mov
test
ja
xlat
push
mov
xor
ror
movsb
jge
je
mov
ret
xlat
xor
cmp
fldt
xor
icebp
xchg
mov
xor
xchg
mov
mov
or
popa
outsb
jp
push
jo
sbb
cmp
lock
outsb
sub
jge
sub
xchg
lret
pop
loopne
pop
hlt
das
lods
rdmsr
cmp
scas
mov
push
stos
lock
push
push
idiv
lret
test
stc
xorl
pop
jmp
xchg
mov
jecxz
xchg
aam
pop
lcall
cmp
inc
shll
mov
cmc
or
mov
ja
lods
inc
mov
and
mov
fs
sub
pusha
cld
mov
cmp
fs
xchg
cmp
bound
sbb
out
rcrb
dec
inc
push
lret
push
aad
aaa
mov
icebp
idiv
mov
sub
pcmpeqb
stos
jb
and
sub
nop
insl
jnp
outsb
cmpsl
in
or
cmp
adc
adc
push
movsl
sti
push
shrl
inc
ja
aad
adc
pop
adc
or
mov
sub
cmp
and
lods
add
mov
cwtl
sub
sub
xchg
repz
push
out
inc
fs
push
loope
add
mov
xor
jae
andb
jg
jns
sbb
stos
je
pop
popa
dec
repnz
add
fs
add
cmp
cmp
cmp
jmp
mov
lds
inc
and
outsb
dec
pop
lds
stos
cmp
mov
movsl
sub
push
je
sub
outsb
ss
mov
add
mov
mov
addr16
imul
js
xchg
mov
add
cmp
cmp
sbb
push
sbb
jno
mov
adc
gs
jae
movsl
pop
movsl
jb
inc
lods
add
mov
cltd
fmull
outsb
push
aam
dec
lahf
shlb
mov
mov
movsl
leave
xor
fmull
cmp
xchg
jb
mov
dec
out
sub
xchg
sub
xor
sarl
sbb
jg
add
jmp
mov
mov
in
cmpsb
jno
xchg
xchg
orb
push
daa
repz
stc
shll
cmp
shl
fs
in
push
nop
test
repnz
push
jl
pop
push
repnz
xlat
ficoml
rcll
out
test
shll
sub
sbb
and
cmc
and
inc
or
dec
es
rcrl
add
sub
and
les
lods
js
cld
rorl
mov
dec
jo
sub
out
inc
lahf
out
inc
les
pandn
sbb
cmp
icebp
dec
cmp
mov
push
adc
xor
in
orl
inc
dec
dec
xor
jne
pop
ret
stc
loope
dec
adc
mov
add
and
inc
shl
ret
adc
jns
pop
ffreep
adc
icebp
ja
dec
jne
lock
ss
jle
outsb
ror
popa
mov
push
bound
push
push
mov
inc
push
dec
inc
add
adc
or
cmp
or
push
or
push
xchg
push
cmp
xchg
fisttpl
sahf
aam
fdivrl
rcrb
mov
and
and
dec
mov
sbb
jp
inc
ljmp
outsl
inc
notb
stos
adc
imull
stc
inc
xchg
sub
adc
mov
insb
pop
mov
adc
and
lock
xchg
scas
sub
mov
fisubl
dec
sahf
out
insl
rolb
and
stc
inc
decl
mov
jbe
test
mov
mov
add
in
and
jns
dec
insl
aam
in
dec
fcompl
jo
imulb
sub
adc
xchg
lahf
pop
sub
test
pop
mov
dec
xor
mov
push
push
call
loope
lret
jnp
add
dec
sbb
add
xchg
mov
push
notl
jno
in
test
add
lds
xor
pop
and
and
stos
pop
cmp
pop
cmc
xor
xor
jl
lahf
pop
test
mov
outsb
bound
adc
mov
hlt
push
dec
mov
push
mov
mov
xchg
adc
pop
mov
cmpsl
mov
dec
je
push
adc
sarb
pop
cmc
movsl
pop
lock
jae
add
add
mov
cmp
insl
loop
hlt
adc
jg
outsb
shrb
in
cmp
arpl
sub
repnz
call
loopne
inc
or
repz
push
or
or
jmp
push
stos
dec
mov
or
jnp
shl
mov
push
xchg
jmp
pop
out
jle
mov
ret
push
cmpsl
xchg
mov
ret
or
mov
cmp
les
popf
outsb
adc
aam
xor
rorb
or
sbb
sbb
push
mov
push
call
sar
add
adcb
mov
push
mov
pop
fiadds
mov
pop
pmaxsw
mov
or
movsb
fimull
pop
add
lea
in
mov
xor
repz
sbb
mov
and
pop
and
insl
outsl
insl
lds
pop
mov
lret
idivl
mov
ss
inc
push
push
pop
js
ljmp
mov
cmp
or
cmpsl
hlt
mov
lods
pop
cwtl
or
mov
dec
add
ja
pop
lcall
fldcw
data16
push
inc
outsb
enter
mov
xchg
jmp
dec
mov
shll
roll
inc
lea
iret
mov
movsl
sub
mov
jo
aam
cwtl
pushf
les
jae
xor
lods
nop
xchg
movups
xor
jae
cmc
push
lcall
mov
shlb
aam
rcrb
inc
sub
outsb
jle
jae
mov
push
sub
xchg
stc
imul
out
stos
cmp
arpl
dec
sbb
test
das
outsl
mov
mov
mov
imul
lods
or
fs
gs
out
decl
xor
pop
ljmp
jo
adc
orb
jb
out
add
imul
imul
inc
cmc
aad
push
icebp
push
bound
sbb
mov
jbe
in
cld
xor
aad
mov
movsl
jle
lcall
pop
leave
cmc
shrl
mov
ja
mov
sbb
inc
hlt
pusha
or
gs
popa
neg
sti
adc
repz
mov
xchg
cmp
daa
xchg
mov
lock
fidivrl
sub
jns
popf
add
pushf
es
call
sbb
pushf
push
jae
pop
mov
and
repz
cmp
push
stos
jne
aam
sub
sub
pop
arpl
push
lods
inc
dec
sbb
add
mov
lret
sbb
aam
adc
das
jl
and
shl
insb
lret
outsb
and
test
push
mov
test
inc
test
insb
ficoml
dec
scas
sbb
sub
push
cwtl
stos
loope
stc
xor
lahf
scas
push
incl
mov
rorl
repz
xor
adcb
pop
pop
addr16
pop
xchg
sbb
push
mov
xor
jge
mov
mov
test
out
adc
loopne
push
pop
sbb
in
pushf
xor
mov
shl
shlb
pop
push
lock
xor
adc
aam
scas
mov
push
aas
mov
cmc
scas
mov
xor
mov
out
cmpsb
xchg
mov
push
and
cmpsb
loop
inc
inc
cmc
scas
test
repz
shll
sti
pop
ljmp
mov
into
jb
mov
fldt
pushf
cmp
lret
nop
pop
andl
nop
jae
sub
jbe
xor
imul
xor
mov
adc
xor
and
xchg
xor
fsubrl
rolb
jle
jno
mov
out
xor
lds
mov
in
xchg
fstl
add
sub
push
jl
sbb
xor
adc
insl
xor
cmp
sub
xor
lods
ljmp
ds
cmp
xchg
std
adc
jns
mov
sub
cmp
mov
xchg
xor
pushf
jecxz
cltd
inc
or
cmp
push
mov
adc
mov
lea
sub
lahf
adc
push
jecxz
fcmovnu
xchg
repz
imul
mov
loopne
lds
jno
fdivs
add
ret
dec
adc
xlat
inc
fcmovnb
xchg
cli
rorl
lea
lds
ror
and
out
test
insl
mov
mov
arpl
xor
insl
jne
mov
dec
sbb
lds
and
addr16
adcb
cld
das
pop
sbb
imul
fwait
stos
xchg
daa
imul
out
mov
cmp
sbb
test
insb
repnz
lcall
mov
or
sub
je
lsl
ret
cmp
jmp
push
imul
and
adc
data16
and
lods
scas
jp
mov
lea
cli
pop
enter
mov
push
and
push
pop
ljmp
mov
push
gs
mov
jno
dec
dec
mov
inc
xchg
pop
jg
xor
ficoml
lds
sti
je
mov
sub
in
cmpsl
and
popf
cmp
fcomps
lcall
popf
sub
jb
cmpsl
or
shll
movsl
push
inc
xchg
rclb
aad
cld
mov
lcall
rorb
in
xor
rol
test
sbb
dec
mov
orb
or
out
cmp
dec
push
and
fcoml
push
jmp
xchg
fwait
mov
rcrb
xor
pop
adc
sbb
mov
movsb
stos
mov
movsb
sbbl
xor
sbb
stos
inc
mov
shll
jle
cli
movsl
and
scas
sub
pop
mov
gs
test
lcall
imul
sti
cs
test
pop
stc
and
push
jle
add
jns
shrb
outsb
add
les
sbb
xchg
les
mov
int3
mov
jecxz
in
fnstenv
mov
pop
insb
dec
ja
call
adc
inc
and
and
int3
mov
popf
mov
repnz
ficoml
mov
pop
add
out
vmovhps
sbbb
jge
pop
jmp
fwait
cwtl
and
cmp
adc
adc
mov
jno
sar
and
stos
lock
pop
sbb
pop
adc
enter
outsb
sbb
jns
fisubrs
xchg
shl
sbb
sub
push
insb
pop
mov
and
pop
aaa
pop
cld
dec
int3
cmp
call
mov
test
or
int3
sbb
xchg
push
cmc
pushf
inc
fidivrl
jne
sbb
sub
mov
loop
repnz
test
jae
int
sub
add
jg
lahf
add
xor
dec
xchg
sub
int
dec
push
arpl
add
dec
inc
repz
cld
or
jecxz
shl
int
addl
jnp
dec
mov
adc
add
inc
jp
xchg
dec
mov
cltd
push
xor
ds
rcr
xchg
fistpl
jle
pusha
inc
imul
dec
cwtl
or
mov
imul
jno
sbb
mov
inc
ss
mov
sub
dec
mov
xor
sbb
dec
dec
dec
jp
pop
push
jp
mov
ljmp
jo
push
push
sub
movsl
lea
hlt
insl
int3
ja
mov
jle
mov
adc
dec
jg
lcall
movsl
imul
xor
fdivl
fwait
jne
repz
add
sub
bound
in
push
imul
xor
push
mov
mov
sbb
add
xchg
inc
adc
mov
adc
xor
rolb
and
lret
imul
shll
jno
fdivp
inc
cmpl
pop
mov
or
je
int
add
mov
xor
sbb
lods
pop
lcall
dec
rcl
inc
mov
imul
pop
fidivl
inc
jne
adc
js
pop
jmp
mov
jge
mov
daa
mov
dec
xchg
mov
add
stos
jne
xor
mov
adcl
lcall
incb
jno
fwait
lea
shl
cmp
fmul
cld
inc
fistpl
jno
sbb
lea
test
mov
push
cli
inc
mov
dec
sub
enter
add
xchg
pop
cmp
pop
cld
mov
repnz
mov
js
orl
cs
push
shll
aad
xchg
js
push
push
pop
adc
push
shrl
add
pop
sbb
aas
mov
in
in
mov
add
inc
sbb
xor
das
or
das
dec
jb
in
mov
push
or
lahf
push
cmp
and
inc
mov
pop
adc
xchg
sar
gs
dec
outsl
xlat
out
cmp
dec
negl
les
fistpl
sub
xor
push
pusha
test
xchg
adc
pop
add
movsl
gs
cli
inc
dec
dec
inc
or
sbb
out
mov
js
and
roll
sub
rolb
andb
testb
xor
add
and
mov
add
repnz
insb
cltd
out
rcr
push
mov
pop
add
sbb
aam
popw
daa
repz
cmp
jae
sub
inc
xchg
cmp
push
daa
fistl
jle
dec
jno
hlt
jno
pop
shlb
dec
inc
and
pop
sub
outsb
popa
sbb
mov
xchg
pop
pop
cmp
jg
cld
dec
loop
pop
sub
xchg
daa
xor
pop
xor
add
push
cwtl
jo
add
imul
aam
and
repnz
popl
clc
mov
aad
dec
test
imul
enter
ds
dec
cmp
pushf
mov
push
or
push
jl
or
and
dec
jp
mov
or
scas
mov
cmovo
fs
pop
pop
test
mov
mov
outsl
add
cmp
push
iret
ljmp
xchg
or
loop
xchg
xor
and
add
enter
leave
mov
in
mov
xchg
sbb
mov
add
add
subb
lcall
adc
loop
aam
mov
les
test
xor
jns
or
scas
sbb
inc
mov
sahf
pop
dec
add
fstps
pop
jbe
loop
fisubs
and
cmp
and
cmp
mov
cmp
insl
adc
jmp
test
and
jbe
rcll
dec
shrb
js
sbb
sar
pop
leave
addb
dec
out
push
fwait
rcrl
pop
pop
push
jbe
shr
or
dec
add
mov
mov
add
insb
lds
mov
js
lcall
xchg
fsubl
xchg
xchg
jp
mov
in
pushf
push
pop
rcrb
adc
dec
push
sub
lods
icebp
pop
rolb
or
jp
repnz
pop
jne
inc
jmp
fs
adc
insb
dec
jnp
cmpsl
shlb
xchg
adc
shlb
rclb
stc
dec
test
xor
loopne
xchg
mov
stos
inc
std
mov
jns
movsb
push
pop
sarl
jge
pop
cmpsl
cli
into
push
pop
mov
lock
das
pop
movsl
outsb
sub
jle
addr16
mov
test
push
inc
push
and
lods
mov
jl
cmc
jmp
sbb
clc
dec
mov
adc
ljmp
push
shld
mov
shll
std
hlt
mov
xor
rorb
and
pop
test
repz
rorl
jle
mov
jl
mov
sbb
add
insb
mov
mov
mov
sti
cmpsb
adc
adc
xchg
push
jns
add
psubusw
add
jle
ret
adc
xor
jbe
es
shrb
jge
hlt
pop
jne
in
fsubr
sbb
int3
jge
adc
inc
sbb
xlat
sbb
rorb
test
add
xchg
lock
cmp
jb
sbb
pop
xchg
adc
dec
pop
mov
mov
sub
mov
ja
and
addr16
xchg
push
sarb
inc
imul
ss
test
or
mov
jbe
adc
bound
cld
adc
and
mov
sbb
add
es
dec
sbb
andb
inc
orb
adc
xchg
jae
cld
mov
lcall
nop
lds
out
xor
pushf
sub
pushf
cwtl
adc
addl
pushf
inc
test
cli
pusha
pop
rorb
hlt
icebp
pop
add
inc
cmp
fcompl
mov
add
shrl
jno
mov
cwtl
ficompl
mov
in
xlat
scas
int3
cmp
adc
mov
loope
and
jmp
call
cmpl
in
jg
clc
adc
xor
out
and
sbb
cmp
lahf
lea
insl
sbb
icebp
ret
adc
je
leave
dec
mov
icebp
mov
sub
mov
cltd
lds
mov
jle
lods
xor
fidivrs
sub
push
in
repz
sub
clc
fwait
xchg
js
repnz
lea
and
pop
cmp
icebp
mov
outsb
rcr
xchg
push
stos
mov
fmull
fs
hlt
inc
push
mov
or
in
js
push
or
jns
cs
cmp
mov
sbb
pop
mov
jae
xor
adc
mov
push
aam
jno
adc
nop
mov
pop
ficoms
and
and
cli
sub
sub
sbbb
stc
or
push
cmp
dec
cld
jbe
sub
mov
xchg
jge
imul
adc
sub
lds
mov
mov
je
dec
pop
mov
mov
pop
and
push
shrl
add
cld
xchg
xlat
sbb
mov
xorl
insb
decl
mov
je
adc
test
cmpsl
pop
dec
test
nop
mov
add
andl
and
jnp
mov
add
dec
ss
dec
stc
loop
jge
jle
mov
ret
xchg
mov
rcrl
mov
push
fcomp
push
cli
sti
dec
popf
mov
mov
cltd
mov
insb
adc
dec
roll
test
cwtl
sub
sub
pop
mov
xchg
or
and
dec
sub
fiadds
test
xchg
add
arpl
repnz
pop
and
lea
in
pop
add
jnp
jle
aaa
adc
mov
push
or
cmc
icebp
or
cmp
add
movsl
cmp
pop
pop
push
inc
pusha
lcall
add
bound
insb
movsl
gs
es
adc
icebp
sahf
out
mov
ud2
lcall
push
js
outsb
cmp
push
idivl
pop
xchg
movsb
popa
fbstp
lock
inc
dec
imul
cmc
cs
and
push
push
mov
arpl
sub
dec
cli
jp
sbb
frstor
xchg
and
xorl
hlt
mov
repz
or
ljmp
out
mov
cmp
test
xor
rcl
inc
orl
mov
lock
cmp
mov
das
lds
popf
sub
sub
dec
repnz
mov
call
or
inc
sub
imul
fiaddl
sbb
jmp
movsl
lods
sub
or
in
add
pop
loop
add
push
inc
shlb
aas
add
std
lods
mov
lret
dec
mov
sbb
lods
mov
shl
fidivs
adc
popf
mov
mov
jbe
mov
jge
outsb
ss
cli
or
daa
lea
mov
sbb
mov
mov
pop
xchg
push
or
jb
adc
repnz
fnstsw
cs
and
mov
ret
arpl
rorl
and
movsl
push
imul
mov
add
xchg
adcl
ljmp
rolb
pop
cmp
add
mov
xchg
dec
and
push
sbb
test
inc
lret
xor
data16
push
popf
sbb
ret
sahf
sahf
out
sub
mov
hlt
jp
ret
xor
int
jb
cld
mov
push
mov
xchg
mov
adc
xor
mov
mov
out
mov
cld
iret
int3
push
cmp
cmp
stos
xchg
add
popf
pop
cmp
mov
add
and
cmp
mov
int3
minps
sbb
cwtl
xor
dec
call
sub
ja
adc
push
nop
mov
aam
pop
lods
roll
add
mov
mov
cmp
pop
dec
loopne
mov
inc
rcr
sbb
adc
mov
xor
in
daa
popf
cmpsb
stc
fcompl
pop
repz
call
pop
mov
shl
mov
adcl
cmp
scas
nop
test
xchg
cmc
xor
push
loop
jmp
sub
jmp
mov
jl
and
or
loope
test
in
mov
pop
dec
sbb
lea
hlt
movsb
pop
push
movsl
xor
sbb
nop
dec
inc
adc
aas
jne
push
fisubrs
lea
xchg
jnp
out
shll
out
xchg
mov
mov
testl
mov
popf
imul
mov
dec
mov
out
jbe
xchg
or
inc
pop
nop
dec
xor
cmp
movsb
lea
fldcw
pop
cmp
inc
pop
daa
inc
cmp
in
repnz
push
dec
lock
popf
negl
cld
fists
fdivs
shl
fldt
cmpsb
push
wbinvd
aad
inc
rolb
mov
xor
mov
adc
cmp
xchg
mov
aam
das
lds
or
mov
push
sub
add
cmp
int
sbb
mov
js
lds
push
loopew
pop
jae
sbb
mov
xor
imul
adc
sbb
iret
lds
inc
pop
inc
sub
mov
mov
lock
cmp
in
icebp
or
xor
add
int
pop
pop
mov
xchg
test
and
fsub
fs
push
lea
pop
dec
or
cmp
imul
cmp
jo
sbb
mov
or
cmp
negl
mov
lea
std
adc
lds
ret
leave
in
adc
sbb
insb
add
or
push
xor
popf
mov
pushf
fdivl
cwtl
push
jno
mov
xchg
in
leave
pusha
insb
fsubrl
mov
pop
jmp
inc
xchg
cmc
leave
and
fdivrl
test
mov
xchg
mov
adc
dec
mov
divb
leave
xchg
pop
mov
fiadds
bound
xchg
cmp
scas
fs
and
push
dec
pop
xor
mov
call
xchg
pop
data16
pop
nop
add
pop
mov
sbb
popf
cmp
xchg
mov
jmp
jl
inc
int
mov
out
andb
movsl
arpl
xorl
pop
pop
cmc
fnstsw
sbbb
mov
pop
lds
or
xchg
lret
flds
shll
pop
push
imulb
fmuls
or
nop
adc
jmp
aas
inc
push
cmp
cmp
push
icebp
push
pop
sub
jp
es
jae
adc
mov
push
in
or
sbb
inc
idivb
lea
add
imul
fidivrl
or
loope
xorl
jb
call
xchg
dec
imul
lods
test
dec
les
mov
cmp
push
mov
jbe
dec
xor
lock
pop
dec
lods
das
ret
pusha
or
sarl
in
scas
dec
lcall
adc
scas
inc
lods
mov
cltd
sub
sbb
xchg
adc
cmp
std
pop
mov
cli
mov
loop
or
shrb
pop
push
jno
faddl
insb
xchg
pop
bound
aam
out
dec
daa
sbb
nop
mov
int
gs
jg
popf
fldenv
icebp
js
jb
stos
mov
adc
sub
jl
and
mov
and
movsb
out
jne
add
sub
cmp
lea
mov
cmp
dec
test
mov
or
mov
inc
out
in
push
xchg
in
xchg
imul
pop
mov
jmp
inc
jno
push
cmp
dec
add
scas
lock
sbb
je
stos
jae
sbb
push
call
jno
movsl
call
fsubr
sub
aad
fstpt
scas
sub
pop
and
xchg
insl
pop
jmp
xchg
jle
cli
inc
lret
inc
lcall
jecxz
or
call
lahf
jecxz
mov
int
div
fcomps
dec
inc
push
repz
arpl
mov
pop
jno
or
fisttpl
in
jge
stc
sbb
inc
inc
sbb
cmp
cmp
popa
out
inc
sub
dec
fld
pop
cmp
daa
jb
subb
xchg
mov
adc
or
lret
add
fnstenv
ds
mov
adc
sub
dec
adc
sahf
lret
mov
push
testl
sbb
cltd
cmp
xor
dec
hlt
xor
dec
or
fstpl
xor
dec
cmpsb
or
inc
mov
insl
test
mov
add
adc
lods
xor
icebp
jge
jmp
mov
pop
xor
push
fdivrl
xchg
insl
pusha
scas
mov
adc
cmp
mov
cs
push
or
dec
jb
add
adc
or
xchg
hlt
push
filds
movsl
and
mov
aaa
dec
scas
out
pushf
adc
packssdw
push
or
stos
call
aas
add
pop
push
movsb
data16
cmpsl
out
mov
jne
or
mov
popa
fcomip
mov
push
das
sub
jp
add
pop
inc
pop
xor
lock
enter
fstpt
inc
iret
popa
cltd
popl
sarl
cmp
pop
pop
addl
pop
scas
leave
das
adc
mov
xchg
jbe
in
jb
rorb
sbb
sub
out
adc
pop
sub
xchg
xor
mov
out
iret
add
data16
sbb
inc
ds
cmp
pop
daa
jbe
xor
arpl
mov
fsubr
inc
dec
sahf
roll
jne
add
push
aaa
pop
jno
sub
adc
sub
dec
lahf
movsl
or
lcall
inc
shll
shrl
pop
mov
push
push
dec
fs
imul
sbb
sti
mov
subl
rcl
or
in
pop
push
imul
sarl
enter
andl
inc
or
mov
rcll
or
xchg
mov
xorl
loop
cmpsb
inc
sub
or
mov
jne
mov
movsb
push
cld
sub
lods
aam
std
fs
jl
mov
xchg
mov
pop
jp
pop
mov
jo
cltd
adc
mov
xor
mov
test
aas
jne
or
jne
push
jne
jno
add
mov
or
hlt
ret
shl
dec
fstpl
lahf
push
lods
dec
add
addr16
and
inc
xchg
mov
dec
mov
push
imul
cmpb
sbb
test
icebp
pusha
mov
rolb
cmp
mov
sbb
ljmp
cltd
out
dec
inc
mov
mov
pop
and
out
or
fs
jecxz
or
mov
clc
xor
xchg
test
popf
std
int3
push
dec
frstor
mov
testl
xchg
adc
fcoms
les
enter
and
dec
subb
arpl
mov
jge
mov
mov
cmp
jbe
outsl
pusha
fistl
icebp
cmp
stc
mov
js
fstl
dec
dec
int
pop
adc
dec
add
jne
mov
fidivrl
xor
arpl
jbe
out
adc
je
pushf
rcrl
aaa
leave
jle
inc
iret
push
sbb
shrb
sti
mov
pop
into
lods
rolb
das
pop
movb
push
daa
movb
shll
xor
sbb
jge
shlb
mov
xor
adc
bound
mov
add
sahf
mov
aaa
dec
fldt
iret
outsl
mov
filds
mov
pop
movsb
sti
movsb
or
pop
nop
ret
xchg
add
repz
imul
pop
aam
and
pop
cltd
mov
fildl
out
subl
fnstcw
addps
inc
fstps
and
cltd
inc
outsl
xchg
movsl
addr16
insb
shrb
lods
jnp
movsb
or
jbe
or
inc
ds
aaa
jns
or
sbb
mov
fstl
insl
dec
addr16
adc
aad
aaa
push
cmp
ljmp
gs
shlb
mov
mov
faddl
jnp
xor
push
fstpl
dec
clc
lea
cwtl
and
push
push
sbb
push
mov
imul
into
std
out
bound
pop
repnz
hlt
pushf
out
mov
adc
shlb
adc
out
scas
push
stos
xor
sti
sbb
sub
bound
mov
mov
xchg
js
pop
shrb
insb
aaa
mov
pop
jne
sub
lods
sbb
lock
push
xchg
scas
push
xor
lea
rcrl
push
sub
shlb
pop
out
hlt
cmc
pop
inc
fwait
sub
in
sub
leave
daa
inc
push
jge
imul
lea
jl
push
popf
cs
mov
dec
loope
stos
or
jecxz
mov
into
dec
sbbl
xor
fstpl
and
sub
mov
inc
push
sbb
test
pop
negl
bound
add
adc
jp
cmp
and
and
sbb
or
ret
mov
in
ret
mov
xor
cmp
nop
pushf
std
jle
inc
jnp
imulb
inc
bound
faddl
sub
mov
xor
pop
adcb
pop
les
xchg
lds
push
es
add
mov
loope
xor
scas
push
pop
fdivr
or
jne
jmp
adc
jge
das
add
pop
lret
enter
pop
insl
mov
dec
sbb
je
push
popa
inc
ljmp
mov
cmp
pop
insl
push
cmpsb
xchg
jns
cmp
or
push
test
dec
mov
test
je
add
sbb
cmpsb
jne
iret
mov
xchg
adc
cltd
scas
and
cmp
std
cmp
pop
and
adc
lahf
mov
inc
add
out
and
fiaddl
cmp
push
pushf
or
cmp
pop
test
sub
jle
std
hlt
push
jb
and
mov
dec
ret
scas
mov
rcll
jb
aad
or
js
cmp
sbb
inc
xchg
adc
mov
pusha
mov
mov
mov
out
clc
add
push
xchg
adc
mov
mov
loop
xchg
mov
inc
and
inc
cmp
hlt
jle
insb
inc
or
lcall
loopne
inc
pavgb
inc
or
sub
sub
and
xor
sbb
icebp
mov
cmp
inc
test
iret
mov
or
adc
mov
push
xchg
mov
in
loope
and
jp
inc
pushf
ds
imull
cmp
mov
iret
pushf
dec
in
ret
fsubl
sbb
popa
imul
test
ds
cmc
push
mov
mov
mov
mov
cld
cmp
and
js
ljmp
dec
call
pop
and
cmp
sbb
rcrl
cmp
fidivs
xor
bound
cs
sarl
fbstp
jnp
inc
mov
pusha
icebp
out
dec
inc
adc
sti
mov
sbb
xor
fucomi
iret
sbb
push
lea
lock
and
call
out
push
xchg
xchg
mov
pop
pop
xor
and
aaa
in
dec
sahf
popa
push
cmpsb
jbe
ljmp
dec
and
xchg
push
jle
roll
sbb
mov
jg
or
aas
and
shll
outsb
sub
mov
cmp
mov
cmp
mov
cmp
int
pop
and
rcr
add
adc
add
out
mov
sub
incl
enter
cmp
and
mov
xchg
dec
test
push
mov
push
movsb
and
or
cmp
jae
lods
cmp
imul
adc
and
out
mov
xchg
inc
fbstp
mov
inc
call
inc
popa
fmulp
testb
sti
add
mov
push
lods
bound
xchg
call
into
mov
es
jecxz
bound
notl
in
je
lods
push
ds
pop
bound
stc
dec
push
mov
jno
pushf
sbb
sub
ja
int
imul
add
sbb
jge
imull
and
out
mov
push
add
sbb
pcmpgtb
fmul
lods
mov
pop
test
pop
mov
sub
icebp
pop
mov
imul
ss
push
pop
cmpsb
sub
sub
enter
jg
movsb
lret
and
mov
out
sbb
sti
add
icebp
mov
adc
iret
add
loop
in
mov
pop
pop
movsb
ljmp
data16
add
ljmp
js,pt
adc
int3
sub
cwtl
pop
mov
add
das
mov
push
loop
aaa
int
jle
into
adc
adc
scas
jge
negl
dec
or
in
jae
out
insb
mov
lods
and
push
inc
xchg
insb
adc
scas
imul
jge
fnstsw
icebp
mov
mov
aas
daa
not
mov
fistpll
icebp
mov
inc
mov
cmp
test
fimuls
shrl
dec
and
cli
add
faddp
test
mov
push
sub
fsubrs
mov
push
mov
fisubrs
jns
jbe
inc
lahf
dec
in
aad
cmp
push
rorl
mov
shll
sti
xlat
sti
jnp
mov
mov
and
cmp
out
push
add
jg
push
js
adc
xor
outsb
lods
stc
push
mov
mov
cmpsl
daa
cmovs
inc
push
xchg
push
out
lods
out
je
pop
ss
xchg
cmp
dec
cmpsb
insl
jg
xchg
mov
sbb
hlt
mov
add
fdiv
push
and
adc
pop
xchg
repnz
push
inc
stos
mov
js
inc
out
fnstcw
xchg
enter
push
and
pop
sub
shll
mov
test
mov
mov
aaa
les
xor
orl
dec
inc
movsl
ja
rolb
and
pushf
leave
imul
cld
inc
insb
adc
add
pop
pop
iret
mov
jnp
lock
mov
mov
dec
jge
or
fwait
xchg
aam
imull
xor
adc
mov
stos
insb
lods
std
mov
xchg
sbb
adc
jecxz
pop
push
pop
cmpsl
jl
sub
sub
dec
sub
push
loopne
adc
pop
dec
inc
mov
pop
pop
mov
loop
test
sahf
xor
xchg
inc
dec
mov
pusha
dec
in
adcb
jg
int3
inc
daa
ja
inc
rclb
adc
xchg
rorl
xchg
aaa
xchg
imul
popf
mov
dec
or
dec
fdivrs
outsb
arpl
cmp
lock
sbb
repz
xor
sbb
fsubrp
push
sbbb
insb
aaa
sub
aam
loopne
subl
sbb
jp
or
lea
sar
test
and
in
sub
test
push
sbb
or
stc
mov
lods
adc
sbb
arpl
sub
shrb
iret
arpl
sbb
dec
add
jnp
add
fdivl
mov
xorl
add
daa
lret
push
xor
jecxz
mov
push
lods
pusha
mov
push
cmpsl
mov
pop
lret
mov
add
mov
push
cmp
mov
fstpt
push
mov
or
sbb
add
inc
push
mov
sbb
mov
push
idivb
outsl
mov
sbb
pushf
mov
outsl
ds
pop
mov
push
enter
inc
cmp
cmp
adc
and
inc
test
and
mov
aaa
jns
js
pop
mov
sahf
pop
and
jp
loope
add
in
arpl
stos
lock
push
adc
es
add
jae
mov
pop
push
movsl
xor
pop
pop
xchg
jecxz
into
ja
or
testl
ss
imul
jle
add
jg
pusha
pop
push
aam
js
fdivrs
or
test
mov
sub
cmp
stos
sub
leave
sbb
add
sbb
push
xchg
and
in
push
dec
sbbl
dec
pushf
popa
popa
subb
jle
adc
mov
or
scas
mov
mov
sub
push
dec
adc
cmpsl
adc
mov
pop
fldcw
pop
aad
sub
das
and
xchg
mov
add
popa
mov
sahf
leave
sub
loopne
xchg
test
jl
fstps
lock
call
mov
fwait
add
out
movsb
lea
dec
xlat
data16
push
sbbb
push
dec
or
fwait
inc
cld
dec
dec
in
popa
insl
mov
les
fs
push
xor
jns
jle
inc
xchg
pop
mov
cmc
lods
inc
mov
mov
adc
pop
adc
cmpl
clc
std
mov
mov
fs
push
pop
push
into
leave
xor
or
call
pusha
xchg
adc
je
jno
add
push
xchg
push
and
sub
std
cmpsb
mov
add
pop
cmp
repz
pop
dec
jne
pop
jae
dec
add
insl
mov
decl
imul
pop
push
mov
push
mov
fisubrl
mov
lahf
imulb
push
dec
cmp
xchg
test
and
dec
outsl
dec
aam
mov
mov
fcoml
test
in
adc
mov
les
aaa
pop
fldt
push
imul
in
repz
subl
test
cmpsb
mulb
add
push
aaa
sub
mov
imul
lret
adc
cmp
push
pop
int3
daa
xchg
ds
cmovle
mov
jno
add
and
jbe
or
outsb
inc
push
or
jmp
sbb
shlb
enter
sbb
and
sbb
xchg
cli
inc
pop
sub
push
repz
pop
or
mov
mov
or
dec
or
orl
push
push
popf
into
icebp
add
call
lods
pop
les
cmp
pop
cmp
sub
lcall
mov
mov
and
xchg
and
mov
repz
mov
orl
loopne
and
pop
int3
pop
mov
and
and
test
ljmp
test
lret
or
outsb
dec
ljmp
dec
push
sbb
insb
jnp
mov
daa
xchg
pop
push
lds
jmp
jns
repnz
mov
mov
mov
lea
pop
aam
cmp
push
roll
out
add
cmp
or
out
mov
cmc
push
mov
pop
mov
jecxz
iret
sbb
rclb
or
addr16
jb
cltd
imul
pop
sbb
cltd
mov
cltd
jmp
dec
ja
adc
in
pop
pop
inc
xchg
cmp
sbb
fists
or
xor
push
popa
movsb
mov
add
and
add
dec
lods
adc
add
pop
cmp
loopne
jmp
inc
xor
cmp
movsb
xor
push
jo
es
out
iret
flds
or
popa
mov
in
or
fnstenv
std
popf
loopne
adc
subl
mov
jp
pop
mov
rcll
pop
push
add
pop
inc
mov
fcomps
jbe
adc
sbb
adc
fwait
push
fmuls
loope
xchg
sbb
imul
rorb
lret
decl
jno
rcll
sub
mov
outsl
and
mov
push
or
ret
std
mov
mov
movsb
pop
inc
xchg
popf
mov
mov
movsb
xchg
or
sub
int
movsb
cmp
pop
pop
cmp
imul
push
push
cmp
mov
fsts
add
pop
pop
xchg
or
shll
cmc
cmc
xlat
movsb
or
cltd
dec
jecxz
add
and
adcb
je
gs
mov
icebp
das
mov
les
and
sub
enter
mov
push
jo
ret
hlt
sub
sub
stc
loopne
and
mov
xchg
xor
xor
sub
mov
shrb
cli
addr16
mov
dec
fnstenv
lahf
sub
sbb
mov
mov
inc
movsb
and
stos
pop
push
in
jl
mov
data16
cmpsl
mov
test
xor
inc
pop
sbb
shrb
adc
cmpsl
test
adc
lret
std
mov
je
adcb
int3
nop
shrb
inc
movsl
lds
dec
mov
inc
and
loopne
push
or
or
je
test
or
mov
rcll
xor
mov
cmc
nop
xlat
movsb
cmp
js
ja
mov
lods
inc
cmp
pushf
xlat
movsb
or
shr
pop
pop
in
dec
cmp
sub
xor
xor
push
fists
push
or
add
add
lcall
lods
inc
add
adc
add
pushf
cwtl
adc
xor
fs
jno
int
add
xchg
inc
popa
mov
pop
pop
mov
test
lods
adc
in
add
testl
pushf
je
mov
lds
inc
inc
mov
mov
stos
cmp
pop
and
mov
or
test
popf
and
mov
stos
pop
xorl
mov
les
jb
adc
push
mov
cmp
push
rcrb
mov
je
xchg
cmp
xor
jo
inc
das
into
test
insb
push
aam
leave
test
cmp
loopne
jb
ret
cltd
repz
sbbb
adc
inc
xchg
andl
xchg
rolb
inc
not
das
mov
nop
and
adc
movsb
adc
pop
add
sub
mov
sub
das
jmp
jb
xchg
jp
movsl
pop
jne
popf
loope
or
jl
xor
movsb
dec
mov
movsb
cmp
add
push
push
subb
or
das
xlat
xchg
inc
test
xlat
stc
sub
inc
ret
jns
add
and
add
and
sbb
mov
loope
in
out
orb
call
mov
xchg
sub
popa
mov
cs
repz
orl
addr16
mov
and
sahf
inc
aas
mov
pop
sub
mov
pop
cmp
jns
fdivrl
popf
xchg
or
push
sbb
daa
inc
push
sahf
es
out
fists
das
outsb
adc
pop
call
jl
imulb
adc
stos
rcrl
icebp
out
add
dec
sub
mov
dec
pop
lds
mov
leave
subb
fdivl
idivb
movsl
imul
imul
or
arpl
cmp
shl
andb
sbb
fstps
mov
jp
adc
cmpsl
sub
ljmp
in
test
pop
rcll
rcrb
push
cmp
arpl
or
add
dec
andl
and
rcll
in
loop
in
enter
icebp
and
loopne
or
mov
mov
dec
inc
popl
fcompl
jle
je
add
fadds
push
push
imul
or
out
cs
popa
aas
int3
pop
xchg
stos
popa
xchg
movsl
fcomi
inc
insl
aad
push
add
add
lret
push
lds
movsb
and
mov
jge
mov
cmp
add
clc
and
sti
lods
or
daa
pop
aas
push
inc
xor
inc
fsubrl
in
aad
or
fs
sbb
ja
pop
xchg
adc
sub
push
rcrb
pop
gs
mov
push
sbb
out
jge
xchg
mov
rcr
jp
pop
mov
mov
js
mov
clc
rol
fnstenvs
mov
ror
aas
mov
and
xchg
insl
mov
fcmovnbe
dec
fwait
xchg
xchg
popf
jl
mov
add
cmc
cmp
jns
and
mov
aas
xor
sbb
cmpsl
xchg
mov
and
add
xchg
adc
popa
jge
pop
paddusb
dec
mull
inc
sub
and
roll
cmp
pop
divl
and
push
jle
xchg
in
scas
cltd
inc
pop
and
sbbb
shlb
mov
cmp
clc
cli
pop
jno
mov
ljmp
or
and
xchg
add
mov
scas
jb
inc
push
push
fildll
add
pop
mov
js
std
repnz
sarl
xor
int3
dec
inc
sub
js
mov
mov
xchg
sub
xchg
ret
sbb
lods
mov
or
fadd
inc
jnp
pop
dec
cwtl
add
jnp
sbb
in
mov
dec
lret
mov
add
lret
and
in
or
cmp
push
cmp
push
sub
push
testl
lods
xstore-rng
cmpsl
add
dec
icebp
push
push
lods
mov
mov
aas
insb
mov
pop
loop
leave
add
mov
and
mov
cmc
pop
jo,pn
stos
addb
adc
push
sbb
xchg
je
push
and
idivl
fnstcw
push
out
adc
cmp
insl
out
cmpxchg
mov
mov
pop
rcr
cwtl
mov
pushf
add
hlt
les
cmp
inc
dec
dec
nop
clc
mov
push
mov
std
sbb
or
or
sbb
scas
loope
fidivl
xor
repz
gs
int3
dec
mov
repnz
push
fisttpll
mov
test
fsubr
cmp
pop
sub
hlt
stc
out
mov
enter
mov
fwait
loope
mov
movsl
and
or
sbb
cld
idivl
inc
cmpsl
iret
mov
fimull
inc
inc
fisubs
jbe
pushf
mov
leave
icebp
scas
adc
and
and
mov
lods
pushf
mov
data16
and
dec
daa
popf
testl
xchg
test
mov
lahf
and
movsb
jmp
inc
adc
scas
mov
push
orl
push
sbbb
ss
jne
mov
pop
pop
xchg
and
fwait
cmpsb
fiadds
in
push
call
and
popf
xlat
ja
push
mov
js
jb
inc
cmp
into
mov
add
xchg
xor
decb
jmp
lcall
sbb
sub
dec
inc
dec
add
xor
leave
xor
insl
push
or
fstl
and
cmp
jecxz
jp
jne
aaa
pop
imul
cs
cmp
mov
nop
loope
popf
outsb
out
das
gs
pop
cwtl
mov
cmp
stc
fisttps
out
adc
mov
adc
cmp
stos
rol
xchg
push
push
mov
iret
pop
mov
movsb
int
cmp
mov
xchg
jno
mov
pop
push
rcll
ret
mov
out
idivl
ficomps
mov
jecxz
push
frstor
cmp
pop
or
lahf
inc
inc
jo
sub
jge
shlb
jle
push
sti
and
sbb
dec
ud0
mov
fcomip
xlat
or
loop
popa
xchg
mov
into
and
push
adc
or
in
push
cld
pop
xchg
or
out
pop
in
push
sbb
xor
lret
mov
push
in
xor
test
stc
dec
or
xchg
xorl
xchg
pushf
shll
mov
push
inc
mov
cld
daa
lods
nop
outsb
push
movsb
stos
jl
ds
xor
flds
pushf
xchg
sbb
dec
mov
sti
outsl
push
push
movsb
pushf
mov
push
rcrl
das
jno
arpl
xor
cmpl
imul
fldenv
nop
je
insl
or
add
or
inc
xchg
shufps
pop
sbb
rcl
cmp
jmp
mov
movsb
pop
jmp
out
ja
push
pop
push
push
sub
lock
jbe
push
out
cmp
dec
push
pop
pop
mov
sti
pusha
jecxz
jb
sarb
in
pop
push
xchg
push
xor
sub
stos
rclb
cmp
and
imul
in
fcmove
fisubl
outsl
std
mov
outsl
jle
add
mov
std
adc
inc
shl
repz
pushf
jb
imul
push
mov
xor
mov
sub
add
mov
ljmp
aad
push
push
sub
mov
or
sub
fsubl
in
lea
sbb
enter
sbb
sbb
fsubl
adc
inc
add
cmp
or
rorb
insb
push
pop
out
sbb
jns
or
shll
hlt
xor
loopne
sub
daa
lods
xor
repz
inc
push
xor
push
ficoms
sbb
fwait
loope
ret
loopne
xor
addl
cld
mov
out
dec
ret
pop
pop
push
out
aaa
pop
pop
pop
aas
adc
test
pop
ss
lret
fmuls
ss
cmp
call
dec
fpatan
out
cmpsb
jbe
test
and
adc
in
jge
pushf
xchg
dec
push
dec
push
push
pushf
aaa
leave
lods
push
in
rol
pushf
xlat
outsb
into
int3
out
in
cmp
movsl
std
repz
and
adc
fiaddl
or
push
pop
std
mov
aas
dec
dec
js
dec
or
faddp
mov
add
mov
daa
mov
loopne
shrl
cwtl
fcmovb
test
arpl
mov
jns
sarl
leave
movsb
inc
xchg
pop
insl
orb
fwait
imul
xchg
stc
pop
mov
in
mov
fisubrl
dec
nop
push
fidivrl
ret
movsb
push
fldt
mov
nop
pop
out
les
fbstp
dec
pop
pop
int3
movsb
loopne
fldt
and
mov
push
cmp
xchg
out
addr16
mov
mov
adc
jo
mov
outsl
push
daa
addl
add
xchg
mov
cmpb
cli
mov
push
push
mov
adc
or
cmpsl
idiv
inc
xchg
scas
shlb
stos
add
popa
in
movsb
push
inc
cmp
push
sub
mov
mov
mov
or
cmpsl
jnp
test
imul
cmp
sti
mov
xchg
mov
sbb
sub
fists
sub
iret
and
jne
push
lods
out
push
or
push
mov
js
mov
jnp
jne
cltd
mov
mov
int3
pop
push
je
or
add
or
js
int3
sbb
jl
subl
sbb
in
pushf
adc
cltd
mov
pushf
sbb
sbb
ja
push
scas
xor
fs
sbb
sbb
pop
mov
xchg
pop
pushf
adc
xor
push
mov
mov
out
adc
dec
loop
jge
addr16
out
pop
idivl
and
pop
call
and
mov
add
cs
popa
ret
outsb
cmpsb
adc
sub
or
cli
sub
loopne
dec
incl
pushf
or
test
mov
fdivrl
or
mov
std
fs
mov
pushf
cmp
lds
nop
cld
test
inc
mov
pop
sub
cltd
outsl
xchg
mov
or
cmp
bound
std
stos
push
xchg
ret
shl
dec
fdivr
adc
data16
push
or
sbb
or
lahf
jne
es
nop
or
dec
push
adc
jp
leave
or
sbb
imul
dec
shlb
or
icebp
or
mov
xor
icebp
push
push
cmp
adc
cmp
outsb
sbb
sbb
cmpsb
xor
mov
xchg
cmc
fwait
lds
mov
pop
shrb
out
sbb
cmp
add
xchg
pop
fisubrs
xchg
outsl
mov
xchg
fmuls
popa
adc
lds
sbb
mov
ret
ss
scas
push
inc
and
xchg
inc
xchg
subb
push
arpl
push
inc
into
jb
push
iret
push
add
jmp
mov
popa
mov
push
sbb
jns
push
sbb
sub
hlt
push
out
and
pop
inc
in
cwtl
xadd
jg
pop
sub
movsb
fwait
je
fsubs
scas
mov
mov
jbe
xor
orl
in
xor
test
jns
ret
jns
rcl
insl
xorb
mov
test
mov
cmp
adc
icebp
bound
xchg
push
rcrl
out
andb
ret
push
and
jb
cmp
popa
mov
xchg
push
add
fnstenv
mov
and
xlat
xchg
adc
jne
jl
in
jp
add
adc
test
jecxz
pusha
adcl
dec
outsb
inc
xchg
xchg
in
mov
inc
pop
pop
insl
repz
ret
sahf
mov
lock
sarl
arpl
and
mov
shll
imul
pop
movaps
push
xchg
pop
pop
imul
push
ret
sbb
jle
adc
sbb
mov
mov
dec
inc
arpl
add
pop
sti
and
pop
cmp
mov
or
jl
xchg
cmp
jle
or
push
test
add
in
fs
pop
dec
xchg
ljmp
mov
sbb
stos
sub
and
sbb
pop
cmpsl
mov
cmp
xor
frstor
pop
divb
sbb
ljmp
xlat
mov
xchg
aad
cmp
jns
popf
sbb
cmp
cs
icebp
or
mov
gs
xor
mov
in
pop
sub
ss
mov
mov
cli
lods
lret
cld
pop
lds
push
sbb
fldt
xor
int
lret
stos
dec
mov
cmp
and
add
and
pop
divl
imul
dec
outsb
dec
pop
sub
lods
lods
xor
mov
pusha
or
idivb
or
jnp
push
in
sbb
clc
pop
test
outsb
adc
js
fisubl
shrb
sub
pop
in
sbb
dec
dec
dec
cmp
jp
ss
movsb
cwtl
imul
mov
add
adc
or
cld
imul
sarl
sbb
test
dec
rolb
daa
jecxz
les
add
cs
js
pop
ret
pop
insl
xchg
enter
repz
mov
or
ret
out
xor
jnp
das
leave
leave
mov
sbb
push
pop
dec
and
sub
imul
dec
scas
mov
adc
mov
shll
mov
mov
push
dec
test
js
jno
fsts
cs
cli
scas
addr16
aam
inc
pop
mov
mov
and
jo
xor
cmp
cmp
out
clc
inc
movsb
pop
lret
cli
xchg
inc
adc
hlt
jg
mov
xchg
mov
scas
lret
mov
mov
add
push
movsl
or
popa
jns
mov
mov
push
data16
leave
lret
lret
stc
mov
movsl
sub
jno
mov
ror
cmp
out
in
mov
add
loopne
sti
pop
and
pusha
daa
xor
fcmovnb
xor
movsb
fiaddl
ss
fldln2
xchg
fisubrl
out
mov
test
and
movsb
inc
sbb
push
and
sub
in
cmpl
and
rorb
and
mov
push
jnp
mov
inc
sbb
pop
push
sarb
jno
lds
cmp
aas
movsb
push
out
xchg
dec
dec
mov
mov
stc
jae
pusha
xchg
jbe
mov
mov
or
adc
aad
pop
std
add
jle
es
imul
add
xor
nop
sbb
push
inc
mov
and
mov
sub
push
jmp
add
loop
in
push
xorl
mov
pusha
sbb
dec
and
push
into
xchg
cmp
cmp
add
lea
sub
ljmp
cmp
jbe
fsubrs
jne
jb
popf
cli
dec
icebp
enter
cmp
inc
ljmp
test
iret
lods
aam
pop
xlat
sbb
adc
mov
pop
inc
push
jbe
xor
gs
xor
fsubs
mov
jae
push
dec
xchg
pushf
pop
xor
jnp
adc
and
iret
icebp
dec
test
lock
mov
hlt
jnp
fadds
mov
pushf
shl
mov
decl
test
shrb
adc
mov
inc
outsb
pop
jae
xor
inc
insb
daa
mov
test
lods
out
sbb
outsb
and
add
mov
lock
int3
push
icebp
or
loopne
insl
stc
das
into
jle
sub
xor
xor
add
jnp
in
lret
decl
jg
push
mov
lock
iret
or
cltd
mov
inc
push
mov
or
pop
push
push
out
lods
jmp
int
push
fcmovu
dec
fcoms
jg
push
cmp
jl
inc
ficoms
icebp
lret
push
mov
lods
jecxz
sbbl
imul
sbb
lret
push
cmp
inc
cmp
fcompl
enter
dec
xchg
cwtl
dec
adcl
mov
jbe
sahf
and
popa
xor
adc
pusha
add
push
jnp
inc
pop
jl
inc
test
pop
jge
xchg
pop
lahf
outsl
push
dec
jl
testl
sub
outsl
add
or
lret
sbb
test
pop
cli
fs
outsb
es
icebp
push
jecxz
iret
xor
outsb
xchg
hlt
loope
and
or
xchg
cwtl
fwait
mov
and
call
mov
std
fisttpl
jns
mov
adc
push
lret
shlb
test
push
xlat
stos
mov
mov
into
aaa
mov
mov
and
add
pop
add
fwait
sub
setnp
fs
cmp
stos
dec
cmp
mov
sbb
add
je
scas
mov
andl
into
lret
mov
movsb
sbbl
jmp
sbb
test
cmp
xchg
jnp
pop
jns
insb
outsl
lea
in
popf
jb
lcall
push
xchg
mov
repnz
idivb
and
and
popf
arpl
push
xchg
repnz
jb
movl
mov
or
test
jp
aam
mov
jae
mov
cmp
js
filds
jecxz
sbb
sub
push
mov
jmp
jle
in
test
sub
add
shl
sbb
fs
mov
inc
and
push
push
popf
sbb
sub
sbb
push
jns
mov
xor
test
inc
jbe
in
enter
pop
xchg
nop
sar
rorl
lret
dec
jae
or
mov
popa
adc
imul
sbb
outsb
push
imul
dec
xor
mov
pusha
cli
aam
xor
mov
xchg
xchg
mov
cld
aam
push
add
xchg
ljmp
xor
mov
loope
pop
daa
mov
and
iret
jo
push
aad
loop
imull
subl
sub
aas
pop
xchg
cmp
push
mov
adc
test
data16
and
add
add
add
mov
mov
xchg
clc
xor
int
sbb
inc
sbb
cmp
adc
mov
adc
ss
test
aas
nop
inc
mov
fsubs
mov
scas
sub
into
cmp
sbb
in
loope
adc
cmpsl
fldt
or
dec
add
inc
mov
or
or
adc
dec
jo
icebp
push
icebp
pop
lds
lcall
mov
ja
insb
aam
or
or
xchg
cmp
dec
mov
adc
jne
in
pop
mov
aaa
xchg
inc
cmp
iret
test
xchg
les
or
xchg
cltd
in
adcl
fcoms
pop
sub
fcoml
pusha
xor
stos
or
adc
jp
or
dec
mov
cmpsl
inc
pop
and
mov
mov
and
or
or
fwait
mov
leave
dec
sbb
mov
ds
mov
cmc
mov
orb
pop
sarl
addr16
adc
adc
cmp
sarl
inc
sbb
sbb
les
lds
ja
jl
mov
pop
push
ja
adc
xchg
or
adc
sbb
mov
cmpsl
jns
or
call
mov
mov
or
or
je
and
jno
pusha
xlat
les
lds
popa
ret
xchg
leave
int
mov
adc
or
int
mov
cmpsl
popa
pop
add
mov
mov
or
and
inc
rclb
inc
adc
mov
xchg
adc
dec
cwtl
mov
rcr
arpl
popa
mov
push
pop
je
sbb
jg
es
cmc
gs
or
sbb
sar
push
pop
data16
pop
cmpsb
add
jl
pop
cmpsb
aas
jno
push
lret
iret
mov
sub
repz
add
fdivl
xor
xlat
and
sbb
ret
cmp
insl
dec
mov
pop
popf
xor
sahf
push
push
test
je
std
jbe
cmp
call
push
lods
mov
xchg
test
insb
sub
xrelease
das
pop
rorb
pop
sbb
mov
shlb
fimull
jnp
loop
xchg
cmp
cmp
shlb
subb
outsb
jns
inc
inc
je
es
cmp
mov
adc
cmp
push
xor
mov
pusha
add
xchg
or
adc
add
insl
mov
pop
mov
lock
mov
mov
mov
mov
iret
in
dec
repz
inc
fcom
inc
lret
inc
jbe
lods
xchg
pop
into
ret
aaa
push
adc
adc
or
pop
mov
push
call
jl
sbb
mull
rorb
imul
imul
lret
jp
loop
push
in
dec
ret
xchg
imul
stos
into
pushf
inc
push
fdivrs
iret
subl
bound
aaa
test
notb
sub
fdiv
jnp
push
adc
push
jbe
xor
push
ljmp
xchg
lret
mov
pop
rol
fcompl
sub
daa
rcrl
adc
dec
outsb
lea
pop
imul
inc
pop
repz
inc
xlat
imul
pop
and
sbb
mov
mov
sbb
mov
shll
mov
pop
add
cltd
jne
cmp
sbb
pop
lea
push
and
and
fimull
sub
mov
addr16
mov
push
or
imul
mov
addr16
mov
lea
mov
sub
gs
dec
push
push
fstps
arpl
pop
or
push
int3
inc
cs
imul
in
add
mov
sbb
cmp
add
jg
push
movsl
loopne
adc
and
je
cmp
or
xchg
ss
popa
push
push
cmp
adcl
inc
aas
dec
push
push
cmp
adcl
inc
xor
cmp
adcl
jp
push
jns
stos
pusha
lret
add
es
int3
outsb
push
cmpsl
ret
xchg
out
ret
fmuls
gs
push
push
add
cmp
lahf
js
aam
popa
xchg
and
inc
sub
mov
lcall
pop
and
mov
jo
rorb
adc
shlb
mov
cli
pushf
imul
ss
stc
sti
cmp
sbb
jmp
fstl
sbb
push
mov
xchg
dec
in
sbb
mov
mov
xchg
push
insl
popf
fisubs
rorb
out
push
or
fdivrs
pop
into
fisubrs
je
mov
push
mov
xor
int3
fneni(8087
sbb
sbb
adc
mov
jns
push
inc
pop
shlb
arpl
dec
mov
jb
shr
div
push
xchg
lods
fidivrl
pop
xchg
push
inc
or
adc
adc
xlat
and
push
xchg
jnp
lea
push
hlt
lods
mov
adc
jp
jae
xchg
push
push
lds
cmp
and
xlat
popa
ror
jl
mov
lret
dec
dec
rorl
out
ja
or
mov
pushf
mov
mov
in
and
jno
sbb
pop
jl
ljmp
nop
jp
jge
pusha
jge
loop
inc
ret
mov
jbe
adc
sbb
and
je
pop
mov
scas
mov
sub
lahf
jle
lods
push
mov
ja
push
mov
insb
mov
outsb
ja
xor
lahf
imul
push
aas
sub
push
mov
mov
push
insb
or
or
mov
mov
mov
test
daa
fcoms
hlt
loop
loope
mov
sbb
imul
xor
and
stos
cltd
inc
jne
insl
xchg
imul
xchg
mov
push
inc
adc
sub
inc
or
add
dec
adc
cmp
fisubrs
sub
fcompl
inc
dec
fdivs
push
insl
mov
stos
jp
in
add
stc
aam
sub
lock
push
jp
or
test
jg
cmp
sarl
push
xchg
cmp
fcompl
std
jae
mov
cmp
or
cmp
cmp
and
js
push
outsb
add
icebp
jp
and
in
call
in
popf
jbe
mov
les
fdivrl
dec
ds
push
or
faddl
pushf
mov
sti
pop
xor
pop
cwtl
mov
xor
adc
sbb
lds
add
sub
cld
and
xchg
call
cmp
push
cwtl
test
js
cmp
rclb
lods
jbe
in
loopne
push
pop
adc
or
fsubl
aad
adc
test
cs
adc
outsb
push
sub
leave
or
fsts
mov
mov
sbb
xchg
or
movq
jp
xchg
push
pop
testl
xchg
add
mov
pop
inc
mov
enter
cmpsb
fwait
outsb
jns
jp
xchg
pop
jb
or
inc
mov
inc
cld
iret
aas
popl
dec
lock
xchg
lds
sub
mov
pop
push
push
mov
dec
or
jl
push
enter
idivl
jge
icebp
adc
into
fldenv
shlb
in
dec
repnz
or
pop
xor
adc
imul
add
rclb
jle
fs
aam
mov
adc
fadds
xchg
lret
or
xchg
cmp
inc
or
ficoms
add
ja
cmp
rorb
xor
scas
sbb
jmp
sbb
rorl
popa
and
inc
lock
inc
pop
mov
mov
pop
add
mov
fimuls
test
movsl
adc
xlat
daa
insl
mov
sbbl
out
cwtl
mov
adc
popf
push
sub
test
cli
pop
daa
adc
or
inc
jbe
mov
and
push
in
test
sbb
test
jge
mov
hlt
push
adc
dec
sub
movsl
fisttpl
jmp
movsl
add
pop
rorb
sub
dec
xchg
cmp
mov
xorl
es
cwtl
push
dec
mov
imul
cmp
aad
pushf
rolb
inc
imul
mov
jns
add
dec
lret
jnp
gs
lea
jb
pop
cmpsl
shlb
std
and
scas
imul
xchg
aaa
cmpsl
lods
sarl
adc
pop
shlb
scas
push
pop
push
mov
mov
jmp
mov
or
jae
add
idivl
or
cmpsl
dec
pop
mov
jns
inc
and
and
shlb
push
dec
inc
pushf
sbb
mov
inc
and
sbb
fimull
cmp
adc
fs
pop
pop
or
xchg
mov
jo
mov
outsl
adc
add
mov
cmpsb
mov
aaa
lds
shl
pop
imul
ljmp
sub
frstpm(287
dec
mov
pusha
mov
dec
sete
sub
icebp
test
or
or
and
xor
sahf
in
mov
and
mov
and
jle
mov
xchg
pop
adc
add
pop
sub
bswap
lods
push
cltd
xor
stc
cmpsb
shlb
icebp
xchg
mov
sub
cmp
xchg
add
hlt
sub
push
pop
mov
mov
add
push
adc
mov
lock
pop
inc
mov
lock
rcrb
in
cmp
adc
xchg
or
sub
or
adc
enter
pop
bnd
rorb
sbb
xchg
adc
jmp
cmpsb
test
out
aas
addr16
faddl
into
pop
dec
fwait
sbb
repnz
adc
mov
mov
dec
dec
add
stc
mov
dec
icebp
arpl
lds
outsl
and
addl
adc
mov
call
and
shll
shr
int3
shr
movsl
lods
push
lods
mov
jp
mov
pop
adc
sub
jge
or
insb
or
sbb
pop
scas
lret
test
lds
in
jecxz
adc
or
gs
mov
in
testb
loope
fwait
sub
mov
cld
pop
clc
mov
xor
nop
pop
ds
cmp
filds
or
fcoml
popf
mov
dec
imul
xchg
and
fsts
mov
mov
dec
xor
push
inc
subl
into
out
xchg
adc
iret
add
ret
scas
lock
hlt
into
and
in
imul
xchg
cmc
cltd
movsl
push
xlat
insb
addb
lock
jl
sbb
sub
xchg
fcoml
lahf
mov
enter
mov
popa
lock
ffree
and
sbb
in
inc
aam
fmuls
sub
inc
jno
adc
fsubr
rclb
push
mov
ds
pop
jae
fimull
mov
add
push
daa
mov
and
push
sub
dec
push
lods
sbb
fs
xchg
dec
jge
mov
xor
lods
xchg
push
fstps
or
mov
sub
sbb
mov
mov
mov
outsl
inc
aam
jns
js
mov
rorb
jle
sub
in
cmp
mov
fidivs
insb
pop
sysret
in
sbb
cmp
mov
mov
arpl
jmp
mov
ret
sbb
shl
subl
fwait
pop
push
cmp
imul
push
cmp
xchg
adc
insb
and
rorb
mov
sub
sbb
xor
or
test
stos
aam
cmp
mov
pop
and
dec
xor
cmp
mov
xor
push
dec
xor
shll
mov
pop
imul
pushf
inc
mov
jb
push
insl
aam
adc
sti
push
shlb
jo
lret
mov
push
adc
mov
or
aaa
dec
sub
shll
fistps
add
scas
or
loope
ficoml
add
and
ds
pushf
inc
adc
pop
in
dec
or
loopne
sbb
adc
cltd
cs
mov
mov
dec
lea
popa
and
out
or
pusha
mov
jo
and
loopne
push
shl
test
jge
outsl
mov
leave
ret
mov
aaa
cmp
rol
movsb
rorb
mov
js
xor
mov
dec
mov
jnp
sub
daa
mov
int3
xchg
cld
dec
mov
lds
fldl
leave
cwtl
std
mov
pop
mov
cld
leave
cltd
mov
repz
jecxz
sub
lret
pop
in
int
andb
jo
repz
and
sbb
test
xor
dec
push
orb
decl
push
movsl
int3
pop
xor
int3
outsb
stc
sbb
sarl
jns
pop
ja
loope
inc
pop
shrl
sbb
insl
outsb
adc
in
dec
jnp
and
push
jmp
bound
std
mov
cmp
mov
das
adc
es
or
adc
cmpb
dec
mov
push
mov
dec
popf
xor
dec
fisttps
repnz
and
cmp
pop
and
fists
mov
or
push
mov
ja
mov
mov
addl
jge
lods
mov
cmp
cmp
adc
mov
test
pop
stc
and
ror
dec
ficomps
in
sub
xor
adc
pop
stos
xor
mov
and
push
aas
cmp
mov
rcrl
sub
repnz
hlt
push
stos
pusha
mov
cmp
mov
test
movsl
and
cmpsl
lds
push
pop
push
xor
sbb
shl
es
cmp
aaa
loopne
aas
std
add
iret
popf
fcom
fdivrs
fimull
cmp
imul
in
fsubrl
push
addb
push
rorb
cmp
mov
fistps
cmc
repnz
or
sub
mov
aas
or
xor
test
xchg
iret
sub
jnp
jno
loope
sub
jbe
and
aaa
ljmp
lods
adc
into
dec
push
out
ss
sbb
and
cmp
mov
lods
loope
mov
in
cltd
pop
scas
cmp
jge
fstl
filds
lcall
lock
and
pop
in
fmull
inc
add
and
stc
mov
addb
add
pusha
push
pusha
js
movsl
xchg
and
insb
push
cs
in
mov
or
add
pop
adc
cmp
movsl
pop
xchg
and
and
mov
pop
push
jp
xor
mov
out
adc
or
cmp
push
aaa
xor
sti
push
or
imul
test
xchg
and
lods
jp
imul
push
repz
movsb
rcrb
imul
dec
push
dec
arpl
es
sub
jl
jno
jge
pop
jecxz
dec
adc
ret
cmp
xchg
aas
cld
push
inc
aas
sbb
out
testl
fildll
mov
fsubl
jl
enter
mov
mov
pop
add
subb
in
sbb
mov
adc
mov
mov
pushf
cmp
mov
dec
inc
mov
ret
addr16
inc
clc
aam
ss
mov
aam
sbb
mov
mov
fistl
adc
cmp
xchg
popf
xor
loop
iret
mov
sub
lahf
adc
repz
lods
das
adc
gs
in
scas
movsl
and
dec
xchg
aas
jge
out
or
popf
dec
jb
scas
lds
jnp
push
or
fnstcw
inc
lods
adc
sbb
sbb
or
int
mov
and
imul
ja
mov
ret
adc
cmpb
push
stos
cmp
dec
adc
lods
xchg
sub
mov
pop
scas
out
pop
jo
das
cmp
jb
dec
icebp
ja
jno
out
add
in
add
adc
pop
insb
or
test
push
adc
test
add
pop
dec
daa
les
sub
pusha
and
les
xor
ljmp
or
inc
je
adc
inc
repnz
in
cwtl
push
out
xchg
inc
lret
add
push
dec
and
and
sbb
dec
rcrl
insl
in
sub
xchg
lahf
pusha
test
push
das
bound
push
pop
pop
and
mov
outsl
xor
out
rcll
fimuls
sub
mov
dec
ds
hlt
imul
cmp
push
out
xor
add
sbb
call
and
in
jg
jo
dec
test
pop
push
or
mov
jbe
and
loopne
movsb
fwait
fwait
add
dec
lock
insb
dec
outsl
movsb
jo
or
sbb
insl
mov
fisubl
xchg
sahf
jns
imul
repz
xchg
fwait
jecxz
mov
out
adc
xchg
xchg
mov
cwtl
das
mov
fdivs
mov
orb
fs
je
pop
sbb
mov
stos
ret
mov
add
mov
adc
popa
sub
scas
dec
ss
pushw
xchg
clc
or
out
loopne
rdtsc
rcl
jl
sbb
daa
jnp
loope
ljmp
dec
mov
lock
or
stc
out
jo
mov
push
into
outsl
loope
enter
add
mov
jbe
fwait
xchg
pop
push
stos
inc
pop
sbbb
out
loop
sub
pop
stos
cmpsb
mov
movsw
adc
ds
jns
outsl
dec
insb
adc
lock
push
ds
rolb
lahf
jnp
push
and
sbb
leave
sub
add
adc
cmp
bound
dec
xchg
xor
adc
repz
test
and
cmpl
fidivrl
movsl
ja
rclb
pop
jbe
or
lock
insl
int
jl
push
aad
dec
push
movsl
and
mov
mov
jecxz
lods
in
lods
jmp
stos
mov
outsl
mov
xor
je
xor
xchg
adc
ss
lods
cmc
sub
cmp
xor
mov
mov
inc
mov
mov
inc
mov
or
in
cmp
cli
scas
sbb
adc
xor
pop
cmp
cmp
ss
and
lods
sbb
push
mov
test
insb
inc
mov
mov
popf
test
out
push
push
lods
test
loope
push
push
cmp
mov
or
adc
inc
dec
adc
mov
pop
mov
jl
mov
xor
inc
scas
pop
jne
or
inc
dec
loopne
xor
mov
lock
fs
imul
mov
adc
dec
or
mov
scas
pop
fwait
or
insb
sub
jno
push
xor
dec
call
movsl
adc
les
test
mov
or
jno
pop
in
dec
inc
js
adc
xchg
mov
mov
jo
jmp
cld
lahf
inc
gs
xor
dec
les
cmp
inc
lock
add
dec
iret
insl
push
scas
pop
frstor
lock
pop
lret
sbb
loopne
popl
sub
pushf
mov
xchg
add
fldl
mov
sub
jl
mov
and
lcall
jo
lret
cmpsb
mov
mov
xchg
and
mov
popf
imul
outsb
arpl
pushf
pop
mov
cltd
mov
mov
aas
mov
sub
mov
mov
negb
sbb
cmp
in
dec
mov
mov
shll
into
imul
js
ja
sub
mov
add
into
cmp
xchg
xchg
push
push
mov
cmpsb
inc
cmp
cmp
cwtl
pop
inc
mov
inc
clc
adc
scas
insl
dec
in
mov
jl
ljmp
js
into
inc
lock
mov
jb
js
mov
bsf
in
sub
cs
mov
jns
and
repz
popa
mov
push
cmp
jae
and
rol
mov
data16
fneni(8087
jl
jmp
cmc
mov
jae
jle
xor
cmp
mov
xor
push
pop
adc
std
sub
lea
test
add
dec
mov
xor
lahf
sub
outsl
ljmp
arpl
adc
std
mov
adc
sbb
sar
movsl
cmp
mov
aas
dec
mov
popf
fwait
push
dec
rorl
dec
cmp
mov
xor
xor
mov
sub
mov
fldt
jne
pop
xchg
jbe
jl
popf
adc
add
xchg
testb
adc
jno
xchg
mov
repnz
std
mov
repz
sbb
mov
mov
inc
inc
fs
fsubs
aam
imul
jmp
popf
int
mov
pusha
cmp
ljmp
insl
push
aad
inc
inc
fstpl
cmp
and
jp
clc
ja
mov
or
or
out
sbb
pop
ficomps
push
or
adc
insl
nop
mov
or
das
xchg
adc
xor
fxtract
sbb
popf
in
xor
lods
cmp
lahf
inc
test
or
jne
or
popf
pop
pop
cmp
dec
and
imul
add
add
fcmovb
add
outsl
inc
cmp
leave
pop
cmp
sbbl
pop
or
and
out
inc
add
push
add
lock
mov
inc
pop
mov
sbb
nop
add
lods
std
test
sub
pop
pop
rdpmc
inc
and
mov
dec
movsb
and
inc
mov
adc
pop
and
lods
adc
decl
jle
add
xchg
sub
and
xor
inc
insb
stos
aad
popf
xor
inc
cmp
lret
xchg
dec
push
xchg
mov
lods
dec
scas
cmp
cmp
xor
push
or
jns
jnp
jmp
sbb
or
leave
cmp
fnstcw
pop
xchg
pop
cmp
jne
xor
mov
stos
mov
in
lods
sub
xor
nop
and
sarl
icebp
pop
sbb
gs
loopne
pusha
sahf
into
inc
mov
ja
sarb
push
pushf
push
scas
lock
inc
cmp
cwtl
jnp
das
lods
or
cmpsl
jl
cmp
cmp
pop
mov
push
mov
and
stos
cmpsb
dec
lods
arpl
add
dec
cmp
in
dec
cmp
push
xchg
pop
out
scas
cmpb
js
mov
adc
addl
rolb
cmp
rorb
add
xchg
inc
ja
xchg
sbb
sbb
popf
popa
fisttpll
or
popa
or
rorl
jecxz
inc
sbb
imul
lods
add
nop
jp
sbb
pop
jae
shrl
adc
fdivl
xorl
clc
mov
dec
lret
sbb
pop
movsb
and
sub
mov
mov
xlat
nop
jno
jp
or
daa
test
insb
jo
and
enter
push
mov
or
and
jne
pop
pusha
cli
jns
cmp
pop
out
sub
imul
cmp
dec
pop
cmp
xchg
xchg
pushf
mov
sbb
or
inc
dec
int
pop
pop
pop
dec
loope
jbe
fldl
fucomip
xchg
push
lods
loope
test
loopne
sub
lea
andb
adc
sbb
test
sbb
mov
aaa
lods
test
aam
outsl
jge
int
pop
and
lds
lret
sbb
xor
daa
or
jle
inc
add
push
mulb
sub
cmp
daa
lods
int3
rcl
rolb
cli
pop
addr16
inc
inc
bound
inc
push
scas
xchg
dec
js
pop
jno
movsl
mov
lock
insb
pop
insb
cmc
inc
jnp
mov
sub
gs
sbb
jbe
lea
aad
test
sub
and
shrl
push
jle
lea
pop
dec
mov
adc
and
cwtl
hlt
dec
lahf
addl
pop
in
out
cmc
sub
insb
push
pusha
shll
sub
insl
and
enter
std
in
rcrl
xchg
outsb
add
pusha
lret
loopne
add
fisubrl
subl
mov
jp
aad
push
imul
outsb
aad
ss
cmp
mov
sarl
out
ja
or
icebp
inc
pop
and
popf
mov
pop
pop
rol
imul
pop
pop
jnp
xor
mov
fstpt
inc
int
jle
mov
xchg
adc
add
sub
pop
or
lock
mov
scas
xchg
fbstp
mov
pop
sub
xchg
loop
andb
aam
dec
xchg
lea
pop
andl
mov
jns
arpl
dec
xor
jmp
sub
dec
shrl
dec
test
fbld
mov
ret
movsl
mov
mov
scas
push
xchg
jns
in
or
js
jl
repnz
mov
mov
outsb
test
test
leave
cld
push
lods
jecxz
mov
ljmp
in
cmp
in
std
addr16
cmpsl
fsubrp
jbe
cmp
pop
ss
pop
fnstsw
add
test
and
cmpsl
xchg
and
out
adc
insl
xchg
addl
fsubrl
jg
cmp
ficomps
pop
pop
outsl
int
xor
add
pop
xchg
and
cmp
xor
push
adc
xchg
jl
inc
and
jl
adc
mov
mov
sub
xor
add
sbb
rcrl
aad
mov
mov
sub
lcall
movsl
leave
inc
mov
ficoml
cmpsl
fcom
push
int3
lods
shrl
les
sbb
push
pop
lret
adc
xor
mov
mov
xlat
sub
adc
adc
and
add
ljmp
movsb
sub
inc
dec
mov
sbbb
sbb
and
test
add
jo
dec
fildll
xchg
sarb
fs
push
pop
mov
pusha
jne
sbb
fmull
popf
or
icebp
and
mov
mov
mov
inc
or
subb
lock
jg
xchg
sbb
xchg
mov
adc
repnz
jg
outsl
sub
sub
sub
popa
adc
sbb
pop
ret
inc
mov
mov
xlat
xor
cmovge
dec
sub
add
sbb
ss
divl
pop
repnz
sub
mov
xor
mov
in
insl
jb
xor
hlt
into
dec
je
push
cmp
jle
push
pop
iret
mov
sbb
fucomp
mov
aam
js
insb
bound
xchg
sbb
xchg
into
sbb
adc
and
mov
inc
aad
jmp
stos
jle
cmp
addr16
shll
ret
push
mov
mov
test
push
pop
int
dec
cmpsb
decl
jg
test
dec
jae
fdivrl
and
or
jns
icebp
stos
cmp
movsb
gs
mov
pop
mov
sarb
int
outsb
inc
lret
pop
out
rcrl
jne
pop
lea
jne
jnp
xchg
pop
push
cmp
pop
cmp
jns
mov
and
or
xor
push
jb
sub
xor
pop
mov
lahf
jb
loope
push
js
jecxz
and
adc
mov
cmpsb
adc
xchg
adc
call
mov
sbb
dec
pop
cmp
pushf
rolb
pop
jne
sbb
adc
mov
sub
insb
cmp
push
xchg
fxch
loopne
pop
mov
insb
inc
roll
imul
jp
xor
push
insb
inc
mov
outsb
inc
add
mov
arpl
sub
scas
lds
mov
inc
ret
loopne
int3
xor
adc
jbe
int3
push
lahf
or
add
das
mov
adc
fsubl
insb
inc
decl
aam
scas
mov
sub
sub
loop
xor
js
sbb
popa
xorl
push
rcr
mov
pop
movb
negl
stc
pop
ret
pop
icebp
push
cld
aas
pop
pop
inc
ds
cwtl
dec
inc
mov
mov
shll
fwait
movsb
push
rcr
jg
sbb
cmp
sub
and
js
xchg
push
out
fisttps
add
sbb
lret
das
or
jns
jno
push
and
mov
cmp
hlt
pop
xlat
push
cmp
js
fmuls
mov
xor
imull
ds
push
dec
dec
insb
and
subb
shrb
inc
add
mov
xchg
roll
xchg
cmp
icebp
mov
movsl
pop
mov
sbb
cmp
adc
adc
fistps
xor
in
xchg
jnp
rclb
fcompl
js
jge
push
inc
pushf
add
das
or
bnd
push
in
loope
xor
ret
rcrl
pushf
pop
sub
push
lret
lock
jnp
mov
in
inc
jle
and
scas
or
sahf
jnp
pop
in
int3
shl
movsl
mov
mov
and
cmp
pop
dec
inc
add
lods
scas
dec
fcmovu
sbb
sbb
mov
jmp
fcmovnbe
inc
shrb
in
or
decl
pop
scas
jge
ret
fisubrl
stos
or
aam
or
mov
jp
jp
cmpsb
pop
adc
daa
xor
nop
push
out
xchg
shrb
mov
sub
insl
fisubl
ss
adc
mov
in
pop
and
mov
aaa
pop
xor
mov
add
jl
pop
push
sub
xorb
mov
or
repz
cmp
inc
aas
and
cmp
rorl
inc
or
iret
pop
je
xor
push
and
bound
lea
out
dec
fsubs
xor
fnstenv
cmpsb
int
push
test
xor
or
les
inc
mov
test
les
push
cmpb
movsb
repnz
xchg
jle
add
add
lock
jne
inc
adc
rclb
aaa
push
or
lds
cmp
or
jmp
dec
dec
mov
sbb
push
sub
mov
inc
adc
and
dec
push
leave
out
insl
pop
ficoml
sub
inc
insl
clc
jnp
int3
lret
faddl
jo
add
push
sbb
test
mov
mov
inc
mull
and
mov
pop
adc
repz
adc
cs
test
fdivr
es
push
inc
and
adc
mov
ret
push
sahf
subl
ficompl
or
lea
fstpl
lcall
sub
inc
jo
imul
push
orl
mov
sub
jnp
inc
insl
cmp
xchg
lret
and
adc
popf
daa
scas
push
jbe
negb
sbb
aad
xchg
jno
and
xor
xchg
popa
mov
rorb
add
test
fwait
and
xchg
fsts
pop
insl
xchg
lret
iret
rclb
inc
jmp
mov
pop
add
mov
notb
sbb
mov
fstpl
xchg
inc
xchg
arpl
push
dec
push
lahf
jl
inc
pop
mov
insl
push
mov
add
and
xchg
mov
jno
jmp
test
popf
pop
mov
sbb
inc
sub
dec
adc
adc
addr16
push
dec
enter
outsl
or
insl
add
loop
mov
xorb
inc
scas
jge
fldt
sub
imul
inc
cmp
cmpsb
mov
push
int3
and
loop
xor
jmp
push
lods
rcl
inc
sub
lret
scas
clc
fs
and
mov
xchg
push
enter
mov
cmp
mov
fmull
xor
adc
adc
xchg
or
push
dec
mov
mov
lret
in
mov
cwtl
cmp
lds
jmp
adc
pusha
dec
sub
inc
jp
adc
fwait
int
mov
outsb
imul
sub
hlt
enter
orb
arpl
in
aad
push
push
mov
pop
cmp
in
cmc
pop
out
dec
adc
mov
loope
popf
je
cmp
mov
jmp
mov
push
fisttpll
rcrb
jp
add
mov
mov
lea
inc
cmp
ret
push
push
lea
ror
mov
bound
shrl
add
lock
inc
int
mov
imul
gs
dec
inc
adc
insl
sbb
add
cltd
xchg
xorb
xchg
xchg
jl
out
push
push
dec
inc
cmp
push
mov
aam
pop
pop
mov
xchg
sub
mov
and
cmc
or
pop
push
xor
mov
mov
push
inc
sbb
sub
dec
xor
cmp
test
mov
lret
mov
pop
pushf
add
push
xlat
mov
fmuls
rcrb
add
aas
xchg
add
outsb
pop
sub
add
xchg
jno
inc
lods
stos
cltd
cmpsb
mov
dec
or
inc
mov
push
pop
leave
es
cmpsb
cltd
adc
push
shrl
cmp
inc
push
dec
push
xchg
mov
adc
add
dec
cld
and
adc
inc
insl
and
into
mov
adc
in
das
mov
mov
and
mov
cmp
jno
bound
mov
mov
sub
cmp
jae
push
jno
test
dec
int3
mov
imul
adc
jmp
loope
jl,pn
mov
jg
out
sub
sti
mov
push
cmp
pop
pop
mov
xchg
sbb
shl
test
cs
in
jns
lods
in
fnsave
jb
ja
xor
stc
sub
xor
mov
movsl
in
pop
imul
arpl
mov
dec
xlat
mov
push
push
or
out
lods
mov
adc
enter
rclb
cld
aas
push
and
lea
pop
cmp
movsb
nop
outsb
xchg
int3
ret
xchg
filds
dec
push
xor
or
leave
stc
mov
sub
push
mov
cmp
pop
jmp
cmpsb
rol
js
je
mov
sub
lahf
pop
lret
or
mov
repz
sbb
imul
mov
sbb
cmpsb
std
pop
mov
inc
ret
outsb
add
cmp
jl
xchg
push
xchg
inc
nop
pop
push
das
jge
aas
cmpsl
sbb
leave
cld
lahf
add
outsb
out
mov
jge
xor
imul
cld
js
pop
add
lods
test
shll
mov
inc
sahf
xchg
lods
mov
mov
cmp
mov
out
pop
push
cmpsl
shlb
divb
cmp
lret
xchg
or
movsb
sub
xchg
mov
mov
lret
mov
sbb
pop
sbb
orl
push
xchg
jne
and
cwtl
and
push
pop
sbb
lea
pop
mov
jmp
aaa
mov
sbb
xchg
push
mov
shr
fimull
in
in
mov
add
pop
dec
inc
inc
imul
scas
jns
mov
imul
aad
push
pop
ror
ret
movsl
insl
cmp
mov
inc
cmp
rcr
add
jb
aad
daa
ljmp
or
add
or
adc
inc
add
adc
enter
cs
rcrl
inc
and
leave
ficoml
mov
rolb
jecxz
inc
cmp
in
dec
pop
adc
fmull
fwait
sbb
or
ja
lahf
cwtl
cmp
out
dec
mov
les
cmp
cmpsl
stos
pop
fcomps
mov
ss
je
pop
dec
mov
jp
add
outsl
pushf
ljmp
pop
pop
mov
ljmp
xor
fcompl
fisubs
pop
inc
adc
xor
aas
sbb
pop
rcr
lahf
sub
or
jg
or
inc
xor
push
or
movb
jp
leave
xlat
scas
dec
mov
scas
sub
and
fcoms
add
out
xlat
cmpsb
cmp
flds
or
pop
test
pop
xchg
mov
xor
jg
jecxz
jle
add
test
aaa
adc
or
sbb
xchg
dec
jne
icebp
and
cmp
sub
outsb
dec
pop
xchg
sbb
lods
stos
pop
adc
push
push
jge
mov
dec
pop
xchg
xchg
push
mov
imul
ret
arpl
push
add
push
cmp
sahf
fsubl
push
or
mov
test
push
sahf
or
leave
mov
jl
shrl
mov
leave
jbe
fistpll
rcll
push
insl
xchg
mov
fs
inc
xchg
daa
inc
mov
fs
inc
call
cmp
test
icebp
or
pop
and
add
mov
jle
cmp
jge
fsts
or
lcall
pop
test
rclb
scas
adc
enter
test
xchg
cmp
sub
sub
add
ds
xorl
adc
xchg
add
inc
push
sub
sbb
nop
mov
push
test
adc
shll
dec
sub
dec
shll
add
push
lock
pusha
lea
or
std
jne
test
xchg
xchg
dec
or
fidivrl
lods
test
adc
push
push
mov
cwtl
or
cmp
in
sub
jne
xor
popf
imul
add
dec
jp
dec
call
addr16
sbb
pop
push
pop
sub
lds
or
add
test
mov
xchg
jl
inc
push
xor
sub
pop
icebp
je
jmp
inc
pop
push
lahf
mov
jo
stc
push
dec
adc
push
sub
push
aaa
jp
and
or
int3
jl
mov
and
or
xorl
and
xchg
pop
cmp
sarl
mov
sbb
stc
aaa
xor
js
loope
ss
or
mov
enter
shl
xor
inc
fstpl
aad
jp
aad
or
or
lds
fcmovb
fidivrs
cmp
dec
orb
xchg
pusha
or
push
pop
aas
push
popf
ret
cmp
pop
ljmp
push
fcmovnbe
ss
adc
shl
mov
mov
repz
pop
aaa
dec
mov
in
xchg
xor
jae
test
xlat
jne
in
shrb
or
sahf
ljmp
jno
cmpsl
cmpsb
aam
adc
imul
pop
xchg
imul
ret
clc
loope
adc
ds
mov
into
inc
insl
xor
mov
sahf
pop
outsb
xchg
inc
fildl
or
shll
and
shll
lods
stc
or
xchg
push
jnp
in
jl
shll
dec
or
cmp
pop
or
dec
cmp
inc
and
xor
add
jbe
cmp
stc
jle
in
dec
movsb
in
cmc
in
rolb
inc
dec
bound
je
int3
fisubs
push
pop
cwtl
xchg
cmp
pop
or
inc
and
jge
xor
sbb
jle
je
sbb
clc
jge
inc
or
cmc
in
clc
pop
jl
cmp
xchg
mov
ficoms
in
fidivs
repnz
cmp
dec
xchg
xchg
dec
xor
fdivl
adc
lock
pop
je
dec
loop
lahf
pop
in
jle
jbe
jle
fsub
ss
add
mov
jnp
cld
lret
insl
dec
adcb
mov
inc
and
inc
pop
or
jne
pop
pop
scas
xchg
inc
dec
out
aam
scas
dec
pushf
rcl
out
out
push
rcrl
mov
scas
out
std
dec
xchg
pop
add
mov
xchg
lods
jo
je
dec
adc
pop
or
aaa
out
inc
arpl
test
dec
mov
or
cmp
leave
int3
aaa
mov
addr16
fst
cwtl
jmp
stos
xorl
or
aaa
or
jbe
pop
or
inc
pop
and
fsubr
aad
neg
aam
jbe
sub
ds
jno
insb
fwait
xor
cwtl
or
and
inc
dec
mov
dec
and
jb
test
adc
scas
xchg
lods
inc
pop
xlat
xchg
push
xchg
xor
xchg
mov
jb
inc
gs
test
loop
mov
push
mov
jmp
insb
ficomps
movsb
js
jecxz
add
push
dec
ret
cmp
adc
out
inc
inc
mov
inc
je
dec
mov
mov
rorb
mov
aaa
loope
jp
xchg
mov
pop
dec
dec
loopne
loopne
cmp
sub
add
mov
repz
dec
pop
call
jle
push
mov
nop
pop
in
test
addr16
insl
ljmp
fmuls
lods
fnsave
and
xor
outsl
xchg
lods
loop
pusha
or
je
ret
add
or
inc
dec
jae
xchg
out
cld
xlat
fcoms
out
sub
lods
mov
cmp
punpckhwd
fistpl
xlat
rcll
pop
or
fistpl
pop
cmp
or
ja
out
cmp
xchg
xchg
lods
lea
pop
cmp
xchg
jbe
and
adc
push
sub
rcll
ljmp
inc
stc
inc
mov
roll
fcmove
cmc
cmp
sahf
mov
loope
sub
into
and
jecxz
or
xor
or
mov
xor
sarb
movb
adc
stos
cmp
xor
add
movsb
outsl
jns
fnstenv
inc
mov
lods
jns
xchg
mov
mov
push
inc
jae
mov
repz
je
jp
clc
sbb
call
or
mov
or
cmpsb
scas
jbe
cs
outsl
int3
ljmp
aam
adc
xchg
aas
xchg
shlb
jle
je,pn
dec
jp
jmp
cmp
xchg
cmp
dec
popf
dec
lock
test
fs
inc
daa
cltd
test
outsl
ss
dec
xorb
cmp
push
pop
insl
jecxz
sbb
jo
xchg
or
ss
jbe
cmp
and
add
lods
ret
test
mov
test
dec
jbe
in
imul
sbb
jb
adc
loopne
xchg
sub
xor
add
or
std
test
dec
inc
imul
mov
mov
lcall
and
mov
mov
jge
jbe
bound
mov
or
xorl
and
icebp
mov
push
cmp
cmc
loopne
jmp
jge
js
push
je
pop
fiaddl
xor
sub
iret
xchg
lea
add
pop
ds
sbb
lock
add
xor
in
mov
fimuls
mov
jle
jbe
inc
and
into
jle
or
leave
jge
andl
cmp
out
movsl
jns
pop
xor
push
rcr
pop
sub
adc
pop
and
jl
jmp
sti
jns
lcall
inc
lcall
xchg
loop
xor
mov
or
rorb
fsincos
mov
cli
insb
insb
or
cvttps2pi
mov
add
insl
push
stos
pusha
and
into
and
fucomi
mov
xchg
lret
ja
icebp
pop
mov
and
rcr
inc
dec
add
inc
mov
dec
ds
fstl
fadds
imul
cmpsb
mov
scas
mov
push
inc
xchg
fst
pop
jbe
fs
dec
pop
lret
sarb
jbe
dec
xchg
int3
imul
add
insb
or
mov
jbe
dec
pop
aaa
cmpl
pop
xchg
je
inc
call
in
pop
cmp
adc
jnp
xchg
cmpsl
sub
cmpsb
jne
lret
add
outsl
int3
shlb
add
pop
xchg
adc
sbb
gs
push
inc
shll
ljmp
bound
fstl
xor
xchg
jg
dec
movsb
jg
mov
fstpl
fadds
imul
cmpsb
mov
scas
mov
dec
inc
xchg
ffree
pop
jbe
fs
push
pop
lret
mov
jbe
jg
int3
jo
add
add
outsl
inc
lea
outsl
xor
add
or
out
das
dec
cli
lods
mov
imul
add
andl
imulb
push
lahf
pop
je
loopne
jmp
nop
inc
jmp
or
xchg
fldt
push
xor
rcrb
leave
jns
inc
cmp
pushl
lock
pop
or
push
dec
cmp
lea
int
pop
inc
inc
rorb
idivb
scas
jmp
sbb
and
xchg
mov
push
dec
int3
push
jo
or
sub
sbb
insl
mov
cmp
mov
mov
inc
arpl
pop
lahf
pop
jmp
popa
sub
cmp
bnd
sarb
adc
jbe
pop
imul
clc
and
mov
push
cmp
sahf
xchg
pusha
or
push
test
fisttpl
cmp
xchg
xor
lods
ficompl
xor
mov
jge
mov
insb
cmp
out
cwtl
adc
aas
dec
scas
and
and
and
xchg
shll
add
push
cmp
fwait
pop
inc
sub
dec
cmpsb
xchg
vmwrite
test
imul
mov
cmp
dec
mov
out
dec
dec
cmpl
sub
cmpsl
push
sbb
mov
or
sbb
out
aam
cs
push
xchg
mov
xchg
xchg
mov
imul
fcom
cmp
push
in
cltd
pop
adc
xchg
in
jae
scas
in
xchg
es
mov
push
mov
mov
cmp
inc
iret
imul
imul
and
cmp
add
and
insl
shlb
insb
inc
insb
lahf
pop
rclb
je
push
mov
mov
outsb
dec
cmp
loope
jp
xchg
fwait
or
push
loopne
sti
cmpsb
out
and
ljmp
inc
jno
dec
loopne
cmp
and
insl
pop
mov
stos
or
daa
pushf
roll
dec
adc
loop
dec
fcompl
cld
and
add
movsl
jg
push
and
scas
adc
leave
loop
mov
std
and
das
xlat
xor
outsb
dec
add
das
xchg
push
lcall
stos
or
repz
loop
inc
pushf
inc
push
negb
flds
fidivl
repnz
pop
sbbl
xchg
js
nop
fdiv
pop
mov
test
divl
daa
nop
dec
cmp
or
sub
in
mov
in
loope
xor
mov
mov
add
sub
inc
adc
mov
scas
cmp
stos
mov
xchg
outsb
push
mov
rcrl
dec
lods
and
lahf
roll
dec
fmuls
rol
add
push
mov
fwait
push
adc
xlat
lods
test
mov
jo
jl
loopne
xor
aad
push
pop
push
push
popf
mul
lea
and
pop
cmc
negb
mov
jmp
xlat
adc
stc
dec
mov
xchg
fs
push
push
add
inc
mov
adc
scas
mov
xlat
adc
es
insl
or
movsl
add
test
xchg
xchg
inc
test
js
lock
nop
cmp
xlat
stos
cmp
mov
lret
push
xor
cmp
imul
mov
mov
sahf
fwait
mov
sub
sub
insb
movsb
retw
push
lds
in
cmpsl
sarb
jmp
imul
daa
clc
inc
adc
mov
or
adc
xchg
inc
cli
bound
scas
movb
scas
ficoml
ret
mov
jbe
xchg
mov
inc
and
mov
xchg
jns
pop
adc
icebp
nop
shrl
xchg
push
nop
rorb
mov
out
fwait
imul
fs
out
popf
imul
xchg
je
push
call
jbe
pop
nop
add
xor
cmp
fidivs
cmp
stc
lret
xchg
js
and
ss
sbb
iret
pop
ret
lock
std
pop
outsl
nop
jl
fs
stos
xlat
sahf
xchg
clc
and
jno
cmpb
cmp
sub
lea
dec
xchg
push
shrb
adc
clc
idivb
int
arpl
inc
mov
pop
add
lea
inc
rorl
lahf
std
int
sti
xlat
push
inc
lret
aam
or
pop
cmp
hlt
les
jp
inc
add
lods
adc
jge
or
ja
test
pop
xor
mov
movsl
gs
out
mov
or
scas
jg
movsl
fwait
out
jo
dec
sub
mov
lcall
lock
jecxz
add
shlb
clc
jno
push
je
fisttps
movsl
xor
and
lret
cmp
movsl
movsb
pop
dec
pop
sub
xchg
xchg
daa
mov
xchg
or
lds
pop
jge
push
icebp
or
orb
add
sub
imul
jns
add
or
or
mov
pop
lret
pop
xchg
test
mov
frstor
sub
adc
mov
dec
and
in
lock
sbb
cmpsl
inc
mov
jne
pop
and
sahf
xchg
mov
push
pop
in
sbb
and
xor
inc
test
mov
leave
mov
mov
sbb
sub
enter
xor
adc
nop
or
adc
adc
orl
pop
dec
insl
cs
xchg
test
mov
aad
sbb
ror
pop
xor
mov
push
in
aad
lock
pop
movl
sub
fdivl
pop
push
pop
stc
cltd
dec
dec
or
cld
jne
dec
js
lods
jecxz
popf
dec
adc
lcall
rcrl
enter
push
std
xor
or
inc
repz
push
in
andb
pop
or
or
test
dec
pop
sarl
fbstp
sub
dec
pushf
ficoml
dec
cwtl
data16
ljmp
or
or
cmp
jo
aam
cwtl
test
sahf
and
mov
dec
push
pop
aad
inc
in
jo
cmc
push
xchg
aad
mov
mov
cmpsl
sbbb
fadds
or
sbb
insl
sub
push
jne
or
lea
cmp
sbb
insl
stos
jns
sbb
in
jo
xchg
push
sbb
sbb
andb
aas
inc
push
dec
adc
ret
jg
mov
adc
adc
test
pop
jnp
or
jg
jl
and
cmp
inc
push
nop
dec
fldl2e
faddl
mov
inc
fldenv
ss
jne
jg
insl
pushf
rorb
xchg
test
xchg
nop
adc
int
mov
mov
test
cmp
dec
mov
sbb
insl
pusha
cmp
aad
inc
in
jo
cmc
push
xchg
aad
mov
pop
cmc
sub
or
sbb
insl
sbb
movsl
addr16
mov
rorl
aas
insl
lret
pop
xchg
icebp
fmuls
icebp
inc
int
pop
xchg
jne
mov
push
push
mov
push
sbb
popf
dec
clc
mov
lods
xor
inc
insb
adc
pop
rorb
lret
cmpsl
mov
pop
jp
addr16
test
sbb
sub
adc
adc
es
mov
cmp
inc
xchg
aas
add
add
ss
popf
pop
cli
mov
aas
movsl
push
stc
mov
dec
xchg
xchg
sbb
mov
imul
fidivl
push
mov
mov
ret
push
mov
arpl
mov
xor
xor
movsl
sub
push
test
inc
cwtl
xchg
push
scas
xchg
ja
test
int
imul
add
sbbl
dec
sub
sub
xchg
add
fwait
add
xorb
sarl
js
shll
packuswb
cmp
cmp
shr
push
mov
xchg
popf
movsl
inc
and
test
jno
popa
imul
daa
stc
cmp
outsl
int3
push
test
rorb
xor
sub
addl
movsb
stc
data16
push
mov
inc
mov
out
addl
mov
pop
adc
outsl
mov
dec
aad
call
inc
in
sbb
xor
lods
je
in
stos
push
shll
mov
push
xchg
adc
xorb
pop
and
jno
sbb
faddl
fs
sub
xor
mov
push
and
sub
xchg
std
neg
mov
popf
scas
push
and
cmpsl
push
sbb
int3
in
insl
rorl
mov
daa
xchg
std
test
mov
js
inc
adc
test
test
jno
dec
ds
test
push
cltd
lock
add
test
lea
subl
lock
fldenv
inc
daa
in
xchg
pop
cwtl
jge
aad
dec
enter
fiadds
testl
test
jge
test
jecxz
in
push
fwait
movsl
add
movsb
mulb
mov
mov
decl
test
shr
adcl
mov
jmp
pop
push
or
dec
ret
add
sbb
sub
loope
pop
pop
adc
and
js
adc
invd
fisttpll
and
jo
inc
dec
out
lods
ja
mov
jle
sbb
jns
dec
es
cmp
push
cwtl
lods
std
push
out
rsqrtps
mov
outsb
fsts
mov
push
push
and
mov
pop
and
push
ret
popa
mov
push
mov
hlt
imul
jnp
add
jl
mov
addb
fcom
pop
popa
mov
stos
mov
test
adc
and
dec
jnp
push
cmp
sub
jb
jg
add
xor
mov
inc
outsb
dec
push
sub
mov
sti
xchg
ud0
sbb
lds
ljmp
jmp
imul
std
test
in
sbb
out
data16
push
mov
and
and
ja
push
movsb
loop
jecxz
rclb
push
push
stos
push
int
xor
add
xchg
pop
xchg
js
subl
add
inc
sub
inc
sbb
or
jle
cmp
cli
cmp
mov
sbb
mov
mov
jp
sub
mov
out
sub
scas
sub
out
sbb
push
popf
xchg
push
sbb
xor
sub
inc
in
dec
sbb
mov
mov
lock
pop
jae
sbb
ret
popf
xor
sub
inc
call
test
push
mov
cmpsb
addb
cmp
add
sahf
pop
addr16
jmp
cmp
dec
cmpsb
push
add
ds
jae
outsl
in
inc
sbb
xor
decb
inc
push
push
lahf
mov
sub
test
jp
push
fidivl
in
sbb
xchg
push
cli
pop
and
decl
data16
sub
xor
dec
mov
test
outsl
jno
pop
sub
mov
hlt
sbb
push
icebp
jle
pop
push
das
push
inc
xchg
mov
sbb
stos
adc
pop
mov
ljmp
sbb
ss
divb
or
imul
aad
shl
dec
ljmp
jle
cmp
sub
cmp
ljmp
dec
or
xchg
pop
sub
inc
js
les
fcoms
mov
mov
lcall
jecxz
in
ret
add
int
and
mov
pop
mov
nop
pop
jne
or
cmpsl
and
mov
test
sub
or
sbb
lods
nop
mov
lods
es
push
pop
daa
lods
pusha
push
out
lods
pop
or
lret
xchg
stc
ljmp
mov
arpl
stc
cmc
push
cwtl
les
or
or
aaa
dec
jns
inc
mov
insl
sub
addl
in
sub
sbb
or
dec
pushf
int3
mov
shlb
xor
cmp
or
pushf
pop
faddl
adc
or
aad
icebp
and
and
push
loopne
sub
sub
mov
hlt
mov
push
pop
outsb
in
lock
nop
and
aad
sub
inc
jmp
adc
addr16
cmp
or
in
adc
mov
jns
stc
sbb
mov
icebp
call
in
in
rclb
fs
mov
in
adc
push
sub
or
dec
jl,pt
adc
and
in
cmp
mov
test
insb
push
mov
sti
pop
xchg
rclb
xor
inc
mov
or
gs
loopne
dec
insb
rcrb
movsl
cmp
mov
cmp
mov
mov
cmp
lea
cmpsl
sub
fs
enter
dec
sub
stc
pop
add
mov
and
xorl
pop
imul
jns
sub
inc
and
sbb
mov
fdivr
pop
inc
shrb
mov
lock
ja
xor
pop
dec
fdivl
lea
cmp
inc
push
push
lock
add
lea
cmp
andl
lods
ds
xchg
movsb
es
fcomps
dec
dec
nop
pop
popa
fmul
cmpsl
add
pop
add
adc
pusha
or
popa
xchg
push
mov
aaa
mov
les
sarl
fdivrl
pusha
jbe
add
mov
mov
sub
test
cltd
mov
pop
cltd
xchg
jo
cmp
adc
xchg
adcl
out
dec
cltd
cmp
fistpl
or
add
cmp
cmpsl
ljmp
stos
xor
mov
mov
cltd
fwait
push
or
push
call
add
push
or
es
sub
add
adc
sbb
mov
push
cmp
xchg
or
sbb
fldt
or
or
mov
enter
and
adc
push
mov
cmpsl
mov
popf
push
inc
sbb
mov
ficoml
arpl
or
sarl
jno
pusha
les
pushf
xchg
popf
xchg
cmp
push
cmp
stc
adc
adc
pop
lods
mov
addr16
pop
adc
mov
clc
cmp
imul
roll
cmp
mov
pop
out
dec
mov
sbb
cmpl
sbb
add
pusha
mov
adc
je
je
filds
sub
jp
ja
insb
data16
mov
adc
xchg
cmpsl
xchg
sub
push
xchg
or
sbb
fldt
or
or
mov
cli
push
mov
xchg
cmp
hlt
mov
inc
adc
push
xchg
fists
nop
mov
xrelease
shll
dec
imul
loopne
xor
jnp
sbb
ror
leave
xchg
xor
xchg
jb
and
add
or
push
ljmp
inc
push
incb
xor
mov
loopne
pop
add
and
mov
pop
sbb
xlat
jl
and
dec
mov
fisubs
lea
sbb
push
andb
mov
sub
movsb
dec
cmp
int3
js
add
inc
xlat
xor
call
insl
add
cld
mov
jnp
jp
mov
call
and
lea
js
xchg
insl
pusha
adc
lea
divb
inc
cltd
jnp
orl
push
mov
inc
mov
sbb
xchg
push
jb
idivl
sub
lea
xlat
jb
sbb
loopne
add
ret
dec
or
repnz
mov
jl
fildll
jb
inc
mov
mov
adc
sti
xchg
add
loopne
and
xchg
jo
and
scas
adc
or
add
jecxz
dec
lock
daa
sub
sahf
insb
into
mov
push
jp
jne
rcrl
enter
xor
sbbl
or
mov
xor
sbb
int
out
and
icebp
add
push
xor
lret
xchg
push
movsl
lods
je
iret
cmp
pop
push
adc
xchg
jp
or
cld
or
leave
mov
pop
scas
in
insb
add
or
adc
loop
loopne
out
loopne
shrb
ret
mov
into
push
mov
ret
fwait
sarl
push
stos
push
pushf
mov
push
sub
repz
jbe
sbb
mov
mull
les
out
jns
cmc
stos
xor
bnd
jl
jmp
leave
mov
or
insl
inc
orb
xchg
cmp
loopne
mov
pop
orb
xchg
jns
sbb
jp
rol
out
les
push
xchg
into
pop
int3
lahf
xlat
add
xchg
adc
inc
mov
cmp
lret
popa
mov
ds
xor
std
or
inc
jne
inc
idivb
xor
mov
mov
lock
ja
pop
imul
cmp
push
pop
ret
imul
mov
stos
push
je
xlat
or
mov
ja
xchg
jbe
iret
sub
add
sbb
sbb
dec
les
and
cltd
lods
lahf
mov
int3
repnz
int3
lcall
add
div
int3
pop
inc
mov
out
in
ss
inc
push
aas
sarl
add
adc
mov
xlat
dec
lret
jg
sbb
sub
pushf
int3
add
xor
testl
inc
pop
call
dec
sub
add
push
aad
call
add
pop
cmp
ret
imulb
ss
pushf
mov
cmp
push
loope
movsl
dec
push
pop
mov
push
and
sbbl
lods
mov
add
push
xor
imul
int3
xchg
cmc
orb
xlat
gs
pop
inc
xor
pop
int
lock
jge
shlb
test
sahf
mov
adc
call
cmpl
pop
inc
pop
add
push
jb
dec
jb
shl
pusha
xchg
xor
pop
mov
or
scas
int3
push
xchg
push
mov
mov
pop
sbb
cs
pop
insb
jg
dec
push
jo
out
lods
fwait
cmp
fwait
dec
pop
sbb
pop
push
mov
jle
xchg
jle
outsb
sahf
or
sub
xchg
push
dec
dec
cmp
cltd
adc
shl
in
xchg
call
push
inc
inc
mov
push
cmpsl
pop
loop
orl
roll
cld
jne
pop
into
jg
lock
call
sarl
mov
or
dec
mov
dec
and
nop
int3
roll
push
and
and
add
repz
jmp
xor
movsl
and
rolb
or
inc
and
push
mov
jl
cmp
pop
sub
add
es
das
jecxz
mov
nop
xor
xchg
out
jp
fdivl
lods
lret
lcall
js
inc
popf
xor
add
stos
bound
sbb
outsl
frstor
addl
sub
insl
inc
add
test
or
dec
dec
pop
mov
sub
xchg
cs
push
or
adc
js
add
jo
or
dec
test
sbb
cmp
push
test
sbb
test
sbb
test
sbb
test
sbb
lahf
push
mov
aas
inc
mov
add
addr16
pop
mov
jb
aaa
mov
mov
repz
xchg
aas
xchg
mov
divl
shl
and
and
mov
sub
add
daa
pop
xor
pusha
sbb
repz
out
mov
jp
cmp
cld
shlb
cld
ret
cld
popa
jmp
cld
mov
jge
push
insb
mov
sub
les
js
jecxz
imul
mov
mov
movb
gs
loopne
mov
add
test
lret
sub
mov
jg
and
mov
stc
push
testl
dec
popa
or
jle
adc
adc
dec
cld
jmp
mov
adc
pop
adc
insb
jno
in
pop
push
sbb
data16
sbb
sbbw
data16
mov
call
push
idivl
or
dec
xor
pusha
insb
sti
or
daa
inc
pop
call
movsl
mov
leave
mov
push
pop
xchg
es
mov
push
push
loope
popf
mov
inc
gs
pop
push
testl
test
add
mov
test
sub
rcrl
mov
test
add
and
cmpsl
aas
into
mov
sub
sbb
lds
out
dec
out
mov
call
push
pop
data16
sbb
push
leave
mov
popa
sbb
add
imull
and
mov
dec
aas
sub
adc
cmpsl
mov
daa
pop
lret
or
lods
mov
mov
repz
call
cs
mov
add
sbb
mov
xor
into
pop
cmpsb
sbb
imulb
addr16
xchg
cmp
js
out
cmpl
popf
negl
daa
out
pop
push
daa
add
xchg
daa
pop
pop
xchg
and
daa
sub
daa
inc
pop
jmp
pusha
in
mov
leave
sbb
leave
jbe
in
sbbb
jb
jb
cmovnp
jb
setle
lgs
or
bound
loopne
insl
sbb
mov
mov
leave
lds
test
cmp
popa
arpl
shrd
or
insl
idiv
and
jp
adc
out
jno
lds
xchg
sbb
scas
sbb
popa
shlb
sarl
and
cmp
dec
dec
xor
ja
add
js
outsl
roll
dec
inc
rol
dec
adc
dec
out
rclb
rorl
dec
dec
mov
pop
jne
std
popa
xchg
popa
mov
out
xchg
and
fs
addr16
add
dec
push
es
test
lret
mov
dec
nop
push
lahf
lret
cli
push
lret
lret
lret
ficoml
sub
pop
push
cmp
jg
sbb
pop
push
jp
movhps
aas
in
dec
bound
hlt
xorb
mov
aaa
cpuid
jb
psrld
cmpps
repnz
and
and
inc
popa
xor
ja
add
addr16
adc
pop
pop
test
divl
aaa
testl
xlat
mull
mov
xchg
sbb
test
sbb
test
cmpsl
sbb
or
adc
xor
push
xor
adc
insb
xlat
adc
xchg
sbb
negl
shlb
inc
push
xor
lods
ja
insb
mov
adc
fstl
js
in
adc
std
adc
insb
sbb
adc
daa
dec
pop
enter
clc
push
insl
pop
mov
inc
popa
xor
jne
add
adc
divl
xor
std
adc
insb
sbb
adc
insb
dec
adc
insb
pop
adc
push
insl
pushf
mov
lea
cmp
lods
mov
pop
ss
dec
xor
pop
jo
bnd
pop
loop
mov
xor
shlb
bswap
jb
pinsrw
cld
jne
flds
stos
icebp
cmpsb
mov
mov
pop
add
xchg
or
mov
mov
cmc
push
mov
test
xor
mov
leave
jns
add
xorl
leave
int
push
leave
aad
xchg
dec
fnsave
push
sub
iret
and
lfs
shrd
movsb
jb
xadd
push
pop
arpl
invd
jb
jb
or
dec
jb
cmove
jb
pcmpeqb
jb
seto
push
jb
push
jb
psubusb
jb
bswap
jb
push
pop
bound
jb
jb
jb
jb
jb
pcmpeqb
jb
pcmpgtb
setl
shrd
fdivs
jb
bswap
jb
xadd
mov
cld
dec
popa
xor
jne
or
jge
add
gs
dec
cld
cmp
cld
and
cld
sub
cld
shll
cld
fldenv
cld
jmp
popa
in
test
cld
lea
cld
mov
int3
cld
mov
mov
add
jns
sbb
jnp
mov
shrl
dec
lods
rcr
dec
movsb
rol
dec
mov
rcrl
dec
hlt
xor
mov
mov
movsl
fmull
sbb
sbb
insl
popa
adc
xor
popa
fs
add
popa
mov
cld
leave
popa
mov
icebp
popa
cmp
popa
cwtl
cld
xchg
popa
enter
mov
sbb
in
mov
sbb
lea
nop
imul
jo
or
dec
push
xor
pop
push
ror
inc
popf
and
mov
sub
test
xor
mov
mov
cmp
and
sbb
test
js
or
sbb
sbb
adc
or
loope
lcall
dec
pop
aam
push
pop
int3
lds
movsl
imul
add
movsl
mov
stos
pop
add
mov
pusha
mov
push
jne
cmp
push
mov
push
call
sub
sbbl
mov
and
mov
sub
push
cli
mov
insl
cld
sbb
gs
add
jge
or
jne
xor
dec
cld
cmp
inc
cld
and
pop
cld
sub
push
cld
aam
lods
lret
insl
lds
bound
adc
mov
int3
stc
mov
and
aad
add
jno
outsb
test
add
and
pop
rcrb
mov
pop
in
dec
out
push
xor
or
mov
push
test
test
jnp
sarb
pop
push
test
test
dec
test
sbb
push
movsb
sbb
in
mov
mov
stos
pop
sbb
data16
punpckhbw
mov
iret
daa
pop
pop
cld
inc
mov
pop
sbb
cmc
push
mov
xlat
sbb
jge
mov
addr16
testb
jns
ljmp
pop
sbb
orb
pop
and
push
test
ficoml
mov
scas
js
xchg
ret
popa
popf
and
or
data16
sbb
popa
mov
xchg
fldt
int3
push
mov
int3
inc
mov
int3
je
repz
arpl
or
mov
and
mov
sub
lods
out
or
push
inc
adc
insb
push
in
je
cmp
push
lfs
leave
movsl
mov
insb
cmp
int3
lea
pop
int3
out
cmc
lods
pop
out
lcall
daa
and
lods
fstpl
test
popl
add
or
adc
ds
notl
sub
stos
push
into
lea
sub
data16
push
lds
xchg
sbb
lret
mov
sarl
mov
add
daa
fistpl
daa
pop
pop
in
test
pop
repnz
xchg
adc
lcall
xchg
cmc
mov
push
neg
or
and
mov
arpl
fildl
pop
sbb
dec
sbb
data16
and
data16
xor
or
fdivrs
aaa
jle
lods
not
clc
insb
sbb
jp
jbe
mov
push
pusha
mov
dec
inc
dec
pushf
fucom
inc
imul
mov
icebp
in
data16
stc
arpl
sbb
and
pushf
cld
jmp
mov
cmp
jne
in
push
adc
fstl
or
add
fstpl
or
mov
and
test
decb
mov
mov
and
push
jo
testl
mov
lret
mull
inc
cmpsb
add
lods
imul
mov
and
imul
jge
adc
insb
dec
adc
insb
pop
adc
insb
push
das
and
mov
sbb
ret
mov
dec
fidivrs
push
ror
cmpsb
push
int
mov
lahf
push
hlt
mov
idivl
pop
dec
lods
mov
jns
xor
leave
adc
leave
and
ret
xor
mov
sbb
dec
imul
test
sbb
test
sbb
test
sbb
test
add
and
das
fimull
or
pop
loopne
sbb
bound
jb
aaa
mov
je
jb
jp
jb
rsm
jb
pminub
bswap
jb
or
mov
popa
cmp
dec
popa
or
jg
inc
add
sbb
pop
sbb
cmovbe
idivl
xchg
pop
lock
daa
pop
mov
aaa
pop
mov
daa
push
jno
or
push
push
mov
sbb
mov
or
outsb
enter
fsub
mov
loope
and
cld
jnp
jbe
cmp
push
push
inc
sub
mov
push
add
and
add
dec
mov
pop
in
setbe
enter
sbb
push
jecxz
clc
cmc
rcrl
jle
stos
mov
push
xchg
mov
insl
sub
outsb
mov
inc
pop
das
mov
icebp
in
clc
and
pusha
inc
push
test
loop
jmp
mov
lret
mov
inc
add
pop
mov
sbb
xlat
aam
push
sbb
mov
int3
imul
fld
cmpsl
mov
pop
dec
or
xor
or
pop
iret
in
pop
mov
push
lods
rcrb
test
pop
lcall
enter
mov
add
sbb
mov
sti
push
jecxz
pop
stc
mov
mov
ljmp
and
orl
popa
pop
cld
ret
cld
in
adc
sub
fldenv
dec
cmpsb
jl
sub
fnsave
mov
mov
pop
pop
mov
int3
cltd
pushf
add
mov
or
outsb
stos
push
cs
bound
sbb
loope
out
push
and
sbb
es
lret
fstps
mov
mov
xchg
outsl
imul
mov
mov
pop
mov
out
mov
mov
dec
and
cmp
test
mov
sub
arpl
pushf
pop
loopne
testw
mull
push
negl
push
xchg
outsl
callw
sbb
sub
xor
ret
notl
orb
call
jno
add
mov
negw
leave
dec
fscale
cmp
inc
mov
sti
inc
push
or
movsl
xchg
enter
imulb
idivl
lds
xor
nop
int3
and
fs
cmc
dec
mov
or
cmp
lahf
mov
mov
jno
sbb
xchg
mov
sar
or
cmp
mov
sbb
push
cli
sbb
lds
sbb
mov
int3
nop
mov
int3
fdivl
add
mov
or
movsb
imul
fsubr
pop
mov
xchg
std
push
jb
pop
cmp
dec
mov
cmp
daa
mov
add
jl
sahf
in
mov
testb
cwtl
aaa
adc
stc
xor
movsb
cltd
arpl
sbb
insl
and
popf
xchg
pop
sarb
in
jns
out
in
push
lea
sbb
cmp
pop
fcmovnbe
std
mov
pushf
daa
or
and
xchg
mov
push
andb
pop
shlb
popa
clc
aaa
xchg
xchg
cld
mov
subb
or
lods
int3
xor
add
sub
rcr
sbb
ljmp
popf
test
gs
or
aas
cmc
mov
mov
sarb
clc
insb
popa
sub
pop
das
push
call
lods
and
and
daa
mov
push
notl
adc
leave
arpl
inc
jo
or
xor
xlat
mov
mov
push
ffree
mov
mov
dec
imul
push
fdivrl
cmp
xor
xchg
jecxz
or
cltd
push
decb
arpl
data16
test
sub
leave
mov
std
dec
and
loopne
xchg
loopne
insl
cltd
push
test
mov
cmp
jg
cs
mov
fcomps
repz
mov
pop
call
jne
decl
lds
mov
fdivl
push
mov
mov
dec
pushl
test
xorb
jae
insb
hlt
adc
adc
xor
imul
inc
sbb
push
mov
iret
push
movsb
lret
xlat
pop
pop
mov
pop
mov
or
and
int
sbb
sbb
push
ficoml
ljmp
lea
test
mov
mov
mov
leave
stc
mov
leave
push
mov
leave
sub
in
mov
mov
cmp
pushf
pop
fldt
int3
pop
mov
xchg
ljmp
int3
push
mov
push
jno
rcr
loop
lea
rcr
jne
mov
pop
repz
mov
imul
in
mov
aad
pushf
lret
imul
cltd
jl
inc
int3
std
mov
int3
push
jns
es
ret
fbld
rol
sub
inc
xor
fs
insb
repz
xchg
in
stos
ret
orl
adc
push
les
test
cmp
push
or
pop
and
mov
lret
mov
cmp
cltd
xor
movl
and
sub
pop
jb
imul
adc
shrl
push
ret
sarl
add
sbb
inc
adc
int3
sub
sub
test
jb
or
mov
stos
dec
bound
scas
es
add
jne
ss
inc
pusha
cmp
push
fldt
or
fcmovb
mov
dec
mov
push
leave
shlb
xlat
cltd
add
mov
iret
xor
or
and
inc
add
sbb
pusha
inc
sti
mov
popa
test
call
mov
inc
scas
inc
ljmp
lock
sub
loopne
outsb
mull
cmpb
xor
imull
push
fdivrs
insb
incb
fwait
pop
sub
add
sbb
pop
xor
outsl
and
push
loopne
js
lods
mov
inc
mov
push
cld
rcrb
enter
jo
sbb
ljmp
or
lret
int3
les
mov
rcrl
dec
jle
cmp
test
cmp
mov
mov
leave
dec
mov
jns
je
inc
sub
push
shll
mov
outsb
mov
xchg
sbb
jo
inc
mov
sbb
xor
into
loope
pushf
and
jns
dec
stos
push
mov
pop
jnp
or
pop
std
dec
mov
cmp
pop
popa
push
xchg
mov
adc
fistl
arpl
and
lahf
pop
popa
test
lea
jae
pop
pop
jns
sub
int3
jb
test
rcll
lods
mov
mov
pop
negl
mov
lcall
dec
imul
mov
xchg
sbb
addr16
mov
sbb
popa
lock
mov
negl
jae
repz
sbb
lcall
push
adc
imull
adc
inc
push
testl
leave
adc
mov
sbb
inc
in
adc
pop
pushf
in
gs
ja
mov
in
and
pusha
aaa
imul
sub
movsl
mov
arpl
int
push
xchg
rol
xchg
push
cmp
push
and
roll
and
dec
or
scas
push
into
mov
hlt
outsl
das
and
mov
int3
mov
jb
pinsrw
not
test
repnz
pop
into
push
lret
test
pop
mov
popa
pop
std
mov
pop
sbb
or
push
sbb
jne
push
loopne
sbb
xchg
ds
sbb
mov
cmp
or
stos
jl
sbb
mov
cmp
mov
es
cmpsl
jb
pop
pop
xchg
addl
cld
insb
jae
sbb
leave
enter
cmp
pushf
js
aas
popa
bound
adc
mov
mov
cs
pop
push
ljmp
push
xor
dec
cmp
cmp
iret
mov
jp
pushf
jg
fcomps
out
sbb
mov
adc
aas
aad
scas
data16
into
mov
sub
xor
and
stc
push
xor
pushf
push
adc
lcall
jnp
scas
pop
aas
cmp
and
testl
sbb
push
xor
into
mov
sbb
insb
js
push
imul
daa
icebp
xchg
xchg
dec
xchg
dec
adcl
jae
or
daa
cmp
daa
jae
cltd
add
xchg
rcrl
in
adc
lods
test
data16
pop
inc
mov
js
xlat
pushf
push
loope
pushf
pop
loope
outsb
mov
jne
stc
mov
leave
jbe
loope
sahf
sbb
mov
pop
ja
pop
xchg
mov
les
hlt
aas
xchg
xor
daa
ficompl
sbb
lods
mov
jno
adc
sbb
xchg
fdivs
mov
js
daa
or
test
pop
adc
xchg
mov
sub
pop
stos
push
out
enter
call
mov
fsubrs
movsl
add
sti
test
cmp
mov
mov
std
pop
into
das
icebp
add
ljmp
fs
xor
dec
or
pop
pusha
scas
add
mov
mov
push
jns
clc
roll
int3
or
and
enter
pop
popa
cltd
add
sbb
cmp
pop
sbb
imul
mov
mov
lcall
add
sbb
test
mov
inc
and
test
pop
std
and
pushf
mov
or
loope
jnp
sbb
fimuls
and
mov
scas
test
sbb
inc
fnstsw
push
idiv
inc
addb
rcrb
das
stos
fistps
push
cli
setbe
sti
push
push
jbe
mov
mov
sbb
jno
aas
negl
hlt
mov
out
mov
dec
push
lods
stos
mov
pop
jne
mov
push
sub
jns
push
outsl
cwtl
sahf
adc
pop
and
xor
aad
and
or
imul
xchg
sbb
mov
xor
sbb
push
cmpsl
mov
pop
mov
test
sbb
clc
dec
int3
push
mov
int3
cmpsl
mov
int3
pushl
mov
imul
lahf
aas
mov
test
or
jmp
jbe
push
sti
setp
enter
mov
cld
push
mov
imul
out
es
into
fsubrl
adc
ss
testl
das
cmp
push
popa
lcall
sub
into
lods
fnstcw
loopne
pusha
adc
mov
cmp
and
lret
adc
das
push
sti
or
imul
mov
fcoml
sbb
xor
push
insl
push
cld
or
mov
mov
jge
in
testb
test
sub
jmp
ror
std
dec
push
pop
mov
adc
mov
fwait
pop
test
xchg
and
aas
daa
xor
jb
setp
mov
mov
xchg
add
pop
outsl
clc
and
xor
ret
out
into
push
pop
pop
cmc
sbb
into
xor
push
addb
pushf
idiv
sar
add
pop
mov
jmp
push
push
jo
out
xchg
loopne
into
fstl
add
das
mov
cltd
cmp
jmp
sbb
mov
test
enter
dec
mov
mov
pop
negb
scas
dec
mov
ljmp
push
mov
adc
adc
adc
lock
test
jbe
out
mov
pop
ret
mov
xor
pop
push
adc
push
outsb
movl
sbb
xor
sbb
mov
and
pushf
pop
dec
sbb
bound
push
ss
mov
aas
mov
add
mov
jae
dec
dec
mov
mov
fistl
int3
sarb
mov
or
jecxz
mov
inc
pushf
loopne
mov
sub
inc
push
cmpsl
add
in
inc
xor
push
pop
je
lods
pop
sub
sbb
mov
hlt
pop
dec
add
pusha
push
push
std
mov
popa
inc
jmp
dec
popf
xchg
jmp
aam
sub
in
sub
xchg
push
and
push
sub
adc
pop
and
jmp
add
xchg
cld
call
inc
inc
mov
sub
or
ret
idivb
das
cmp
mov
mov
icebp
mov
mov
xchg
fs
in
cmpsl
and
ds
mov
rorb
add
inc
mov
adc
push
push
push
shr
sbb
or
jne
inc
ret
fwait
jl,pt
movsl
inc
cld
and
xchg
push
mov
add
or
rcll
add
sbb
mov
sbbb
cmp
in
pop
xchg
in
adc
scas
sbb
loopne
jns
push
inc
andl
inc
dec
xor
dec
stos
es
jns
mov
push
mov
insb
lret
aas
leave
mov
or
dec
dec
insb
and
mov
add
into
je
jno
adcl
cmp
mov
loope
jo
adc
sbb
iret
nop
lcall
mov
div
push
test
movsl
out
sti
add
jno
push
jno
push
xor
lcall
loope
xchg
sbb
in
jmp
shrb
or
hlt
addr16
push
sahf
add
mov
mov
jg
subl
sbb
das
jmp
scas
mov
sbb
cmp
les
clc
shrb
lds
pop
xor
and
sbb
test
rcr
and
or
js
xor
add
or
and
les
leave
lret
add
hlt
js
pop
lds
test
and
xchg
test
inc
movsb
and
xchg
and
xchg
lock
pop
mov
enter
enter
and
push
mov
popa
xor
xor
push
icebp
or
enter
enter
loope
sub
xor
push
lock
jnp
ljmp
pop
sbb
outsb
fsubr
je
adc
jnp
fsubrl
stos
test
and
ja
rorl
jge
rolb
adc
jo
outsb
aad
in
cmp
mov
stc
sbb
push
imul
pop
repz
lods
and
cmp
pop
sbb
push
xchg
cs
rorb
and
add
ss
sbb
and
jno
or
xor
pop
insl
pop
testl
rclb
add
cwtl
fldl
shrl
mov
orl
data16
mov
in
frstor
mov
jnp
lret
loop
cmp
xor
jle
add
add
std
jp
and
jle
pop
fnstcw
int
pop
pop
adc
jl
in
inc
xchg
or
pop
sbb
inc
ljmp
pop
scas
xor
ljmp
popa
cmp
cmp
dec
mov
dec
cmp
add
repz
popa
jnp
push
pusha
cmpl
mov
lock
jns
pop
dec
dec
add
mov
xchg
and
sub
add
and
je
xlat
js
cmp
mov
ja
inc
dec
xor
or
adc
test
dec
mov
lds
ficompl
xchg
xchg
push
cmp
xor
jnp
lcall
sbb
in
nop
sub
sbb
enter
jg
xchg
push
fsts
outsb
sub
mov
dec
dec
sbb
push
lcall
std
mov
jmp
pusha
inc
loope
sub
xchg
jg
loop
cmp
loope
jbe
enter
sarb
inc
lock
dec
fwait
iret
loopne
add
dec
adcb
cmpsl
out
or
mov
insb
add
jnp
inc
jg
dec
pop
repz
mov
dec
insl
test
cmp
in
mov
dec
or
loop
sub
add
roll
xchg
push
call
sub
fsts
and
inc
mov
xor
ds
push
adc
fs
mov
call
mov
sbb
xchg
in
mov
jl
fmull
dec
xchg
xchg
add
jnp
out
jns
pop
dec
xchg
daa
or
cltd
dec
sbb
xlat
cmp
add
js
jno
sub
pop
mov
pop
xor
outsl
jg
mov
jns
add
rorb
sbb
pop
pop
pop
andl
repz
pop
int
mov
ret
push
xlat
ret
inc
outsb
les
mov
ss
xchg
mov
in
fnstcw
dec
add
push
jnp
cmp
inc
in
dec
jns
iret
add
inc
jl
shrd
xchg
adc
fnstsw
les
fstl
adc
cmp
insl
les
or
adc
pop
clc
xchg
mov
adc
push
ds
jp
inc
push
mov
mov
lock
sbb
out
iret
in
or
add
out
movsl
mov
lret
loope
sbb
in
jl
dec
add
adc
test
mov
pop
mov
push
xchg
mov
cmp
fstps
bound
jg
in
int
les
addr16
inc
xchg
add
cmp
into
into
xchg
push
dec
adc
xor
ljmp
inc
add
inc
je
test
dec
add
imul
test
push
xchg
inc
out
mov
inc
xor
push
sbb
jo
xor
and
dec
xor
les
mov
mov
pop
xor
js
push
out
sbb
mov
insl
jecxz
fsubs
sbb
test
sbb
scas
fwait
push
dec
cltd
fwait
dec
or
and
sbb
jno
jno
pusha
cmp
adc
ljmp
mov
sbb
lock
sbb
imul
sbb
es
or
test
cmp
cmp
or
sub
pop
test
push
inc
and
arpl
cmp
xchg
add
jb
stos
int3
fidivrs
out
cmc
mov
add
pop
push
addr16
pop
out
mov
test
addr16
fists
sbb
ss
mov
mov
ja
jp
incb
ret
jns
dec
rorb
sub
dec
rolb
call
pop
sub
sub
mov
sub
neg
cmp
xor
sub
adc
btc
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
movsbl
shr
or
and
bswap
or
btc
jmp
lcall
ret
or
dec
sub
cmp
sub
cmp
add
cmp
test
add
jmp
lcall
xor
add
add
pop
xor
xchg
push
cmp
cmp
mov
test
not
adc
movswl
bts
add
call
lcall
incl
ret
neg
sub
xor
and
xor
shr
add
xor
adc
dec
jmp
lcall
movzbl
btr
inc
neg
shl
xor
btr
btr
not
mov
mov
xchg
push
push
xchg
dec
add
add
call
add
btr
btr
add
btc
adc
shr
add
mov
bts
btc
not
mov
inc
bts
test
and
mov
shl
sub
xchg
mov
add
xor
mov
shr
bswap
bswap
or
shl
btr
jmp
lcall
ret
or
cmp
adc
movsbl
test
mov
movzbl
sub
not
call
lcall
add
xorl
pop
xor
xchg
push
cmp
mov
xor
shr
adc
shl
movswl
jmp
lcall
stc
add
xchg
ret
neg
sub
bsf
test
shr
cmp
and
bts
adc
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
sub
test
dec
mov
not
shl
sub
btr
jmp
lcall
or
call
btr
sub
btc
cmp
shl
dec
sub
mov
inc
add
mov
mov
mov
bts
bts
dec
test
adc
mov
bts
call
lcall
add
xor
cmp
or
shr
dec
test
add
btc
call
lcall
or
shl
inc
bts
mov
movsbl
cmp
add
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
add
test
movzwl
add
bts
bts
sub
mov
call
lcall
sbb
shr
sub
dec
xor
adc
test
or
dec
jmp
lcall
add
test
sub
cmp
and
dec
or
mov
shl
mov
mov
shl
bts
mov
adc
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
bts
adc
xor
test
cmp
dec
and
neg
push
add
shl
inc
neg
test
dec
movzbl
bswap
add
dec
add
not
bt
xor
or
btr
dec
sub
test
shl
add
mov
xor
bt
test
adc
or
test
or
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
mov
or
adc
inc
or
add
neg
bts
call
lcall
add
and
bt
sub
cmp
test
adc
and
mov
add
and
movzwl
adc
mov
adc
shr
bsf
sub
mov
bsf
adc
bsf
test
adc
xor
test
call
lcall
mov
cmp
btc
bsf
test
or
mov
mov
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
movzbl
and
sub
or
add
add
not
shr
shr
shl
mov
mov
or
mov
add
btc
jmp
lcall
mov
shl
ret
fdiv
ret
movsl
xchg
movsbl
or
btr
mov
add
test
mov
dec
adc
adc
adc
cmp
bt
call
lcall
add
cmp
inc
or
adc
cmp
bts
shr
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
or
add
and
cmp
cmp
sub
bt
sub
mov
add
test
adc
cmp
btr
xor
btc
cmp
movswl
neg
dec
sub
bts
add
inc
and
btr
mov
add
mov
add
btr
xor
and
mov
bsf
xor
add
btc
lea
inc
cmp
jne
add
btc
test
mov
cmp
neg
xor
shr
mov
add
mov
cmp
shr
btr
btr
adc
shl
shl
bt
call
lcall
je
btr
and
test
cmp
bts
and
cmp
cmp
sub
mov
mov
shr
adc
sub
test
mov
adc
call
lcall
mov
bts
bt
shr
adc
cmp
add
sub
bts
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
or
test
cmp
not
add
movzbl
sub
call
lcall
cmp
bsf
test
and
or
btr
btr
add
cmp
bts
mov
or
sub
shl
sub
jmp
lcall
lea
sub
bswap
and
mov
btr
adc
sub
mov
add
dec
inc
sub
neg
xor
sub
or
bt
bsf
call
lcall
add
btc
cmp
sub
add
and
shr
inc
not
shr
push
pop
inc
add
loop
and
bsf
adc
bt
bsf
mov
bsf
bts
push
decl
mov
add
shl
bsf
sub
not
or
and
bsf
call
lcall
incl
mov
mov
jb
sti
bsf
test
sub
push
shll
btr
btc
bsf
adc
inc
sub
cmp
inc
push
or
bts
add
cmp
add
test
sub
sub
mov
shr
bt
and
adc
btr
btr
add
push
push
pop
add
add
call
dec
xor
test
cmp
add
adc
xchg
or
adc
and
adc
neg
sub
and
mov
xor
test
mov
mov
shr
bts
inc
adc
call
lcall
mov
cld
movsl
icebp
or
mov
xchg
add
in
bt
xor
inc
add
shr
test
and
test
shl
cmp
cmp
btc
bsf
call
lcall
mov
bt
btr
inc
bt
cmp
btr
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
or
shl
shr
xor
adc
shr
xor
movzbl
dec
test
mov
btr
btc
shr
bswap
mov
call
lcall
int3
jg
rclb
repnz
pop
push
fldenv
call
add
rorb
cmp
lds
inc
test
dec
bt
shr
bsf
cmp
je
movzwl
bts
btr
test
test
mov
xor
sub
add
add
bt
shl
bts
adc
test
and
call
lcall
sub
bts
and
xor
bt
and
dec
sub
add
test
shr
and
sub
or
add
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
or
mov
and
xor
test
sub
adc
push
decl
mov
add
and
shr
mov
bswap
add
xor
neg
bsf
push
decl
mov
add
sub
btc
xor
movzbl
add
movsbl
bt
shl
and
add
cmp
bts
test
inc
bsf
bsf
test
shl
jmp
bswap
add
inc
bt
movswl
btr
shr
or
bt
mov
cmp
xor
adc
test
not
shl
shr
mov
dec
btr
mov
and
cmp
movzbl
adc
and
neg
add
btc
adc
btr
and
adc
btr
mov
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
neg
mov
add
cmp
xor
cmp
shr
btr
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
bswap
sub
dec
adc
inc
btr
movswl
shl
and
bts
push
push
movzbl
and
btr
movzbl
cmp
bsf
movzwl
cmp
push
sub
mov
test
cmp
and
test
dec
sub
bsf
mov
movsbl
or
bt
bsf
sub
shr
adc
dec
call
lcall
js
cmp
fildl
and
arpl
test
adc
lea
btr
or
and
neg
test
xor
bswap
add
mov
not
adc
cmp
mov
cmp
inc
shr
bt
neg
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
dec
bts
bswap
mov
and
test
shl
cmp
adc
sub
mov
shr
adc
and
shl
test
sub
test
push
mov
add
adc
bsf
xor
bt
add
adc
push
bt
or
bswap
shl
bts
add
or
not
push
add
test
add
cmp
cmp
xor
cmp
call
lcall
mov
shr
btr
bts
test
add
shr
xor
neg
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
and
adc
neg
xor
shr
adc
call
lcall
sub
mov
shl
or
adc
add
mov
cmp
add
bsf
shr
sub
cmp
btc
xor
xor
inc
call
lcall
mov
adc
test
shr
test
or
add
btr
mov
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
ja
adcb
fimuls
xor
mov
jp
insl
movsl
sbb
fdiv
mov
icebp
jno
cmp
add
pop
xchg
mov
xchg
sbb
jmp
cmp
mov
jb
pop
stos
pop
insb
add
cwtl
pop
popf
xor
aas
mov
cmp
add
ret
sub
and
mov
dec
out
push
add
subl
test
mov
add
ljmp
add
lock
es
das
sbb
sbb
sub
stos
mov
in
pop
add
xor
cmp
jae
cmp
mov
mov
out
ret
ret
xor
test
out
imul
adc
adc
push
adc
xchg
or
inc
sbb
mov
sbb
fdivl
fisubs
fsubl
mov
inc
add
cmp
gs
pop
sbb
or
push
mov
sbb
xchg
jp
call
pop
mov
adc
inc
dec
inc
push
dec
ja
add
inc
pop
inc
aaa
cmp
jbe
cmp
jbe
inc
ds
xor
xor
arpl
pop
fsts
jecxz
dec
inc
xor
dec
pop
push
inc
dec
pop
mov
jbe
idivb
jno
jp
pop
inc
xor
icebp
adc
aaa
flds
xor
std
mov
dec
add
push
push
push
inc
inc
dec
xor
faddl
add
gs
dec
inc
nop
pop
sub
test
add
xor
dec
inc
enter
sbb
push
sahf
ss
aaa
push
pop
pushf
ds
repz
lds
dec
dec
mov
cmp
pop
loop
jmp
pop
cmp
pop
aam
bnd
cmp
inc
cs
pushf
cld
and
push
push
inc
push
pop
add
shll
aaa
fistl
inc
or
pop
push
add
or
add
and
jne
jecxz
jb
hlt
popa
jl
jmp
jecxz
aaa
cs
push
push
outsl
addr16
cmpsl
insl
xorl
jecxz
mov
fsubl
or
push
inc
cli
loope
outsw
loop
sti
adc
push
push
imul
fimull
stc
aas
push
gs
jmp
jecxz
jecxz
mov
xchg
into
jb
es
cs
das
adc
adc
pop
jb
inc
insl
jo
ss
jmp
sbb
or
ja
sub
dec
addr16
cli
mov
inc
push
jb
nop
out
and
push
outsl
fs
pop
cmp
push
ret
dec
jmp
shlb
outsb
pushw
test
aaa
push
xorl
adc
inc
cs
push
dec
or
lods
pop
add
xchg
sub
stos
addb
inc
cmc
inc
clc
dec
je
rcrb
in
cmpsb
add
inc
mov
dec
out
test
add
mov
push
gs
insl
int3
fs
xlat
inc
jae
popa
lods
fiadds
ljmp
jae
leave
je
or
insb
sti
int
gs
clc
add
and
je
daa
out
out
mulb
xor
mov
scas
sub
js
pop
insb
fs
jmp
ljmp
mov
dec
jecxz
or
rclb
loopne
addb
push
dec
inc
push
push
inc
push
es
pop
mov
xchg
ljmp
add
insb
