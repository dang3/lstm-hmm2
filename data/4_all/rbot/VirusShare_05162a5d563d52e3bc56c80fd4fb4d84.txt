and
outsw
outsb
int
mov
ss
leave
dec
or
hlt
insb
xor
inc
aas
out
xor
sub
jae
xchg
orl
lea
lret
mov
sbb
mov
into
add
iret
iret
mov
shl
jo
loopne
dec
xchg
lahf
inc
dec
sub
rep
imul
dec
xchg
shrb
fsubrl
bnd
xchg
mov
jmp
mov
jmp
ljmp
call
imul
inc
mov
add
flds
xchg
jb
mov
and
dec
xchg
jae
xor
notl
cmc
int3
movsb
or
lret
stos
into
rolb
sti
adc
cltd
mov
adc
mov
movsb
mov
dec
add
xchg
cmp
ret
xchg
xor
out
dec
push
push
push
sub
aaa
xchg
mov
add
sub
pop
or
sub
push
out
fwait
mov
xor
outsb
push
es
lea
mov
bound
sbb
pop
das
pushf
je
imul
leave
scas
cmp
dec
add
inc
rorb
mov
stos
push
push
xor
sub
fsubr
cwtl
add
jne
aam
lea
mov
jl
loopne
mov
std
sbb
mov
sub
imul
push
pop
sarl
gs
ss
dec
leave
jnp
cltd
insb
jno
cmp
and
jns
inc
and
inc
push
fdivrl
mov
mov
lea
mov
scas
mov
ljmp
push
sarb
data16
repnz
or
mov
jae
lds
ret
xor
std
sub
and
jmp
sbbl
hlt
push
nopl
mov
adc
filds
push
das
dec
pop
scas
sub
or
mov
dec
movsb
out
test
mov
fldenv
cwtl
fidivrl
clc
xchg
cwtl
insb
cwtl
fnstcw
sbb
xchg
call
mov
push
pop
insl
xor
xchg
jae
xchg
mov
gs
inc
mov
sub
jnp
cwtl
sub
xor
pop
or
xlat
lret
rorb
idivl
jl
inc
and
aas
fwait
stc
loop
sbb
dec
call
les
cld
subb
adc
add
cmp
cmp
loope
loopne
int3
push
xchg
outsl
ret
ret
rcll
iret
jmp
sbb
jge
out
and
mov
or
icebp
rcl
scas
xchg
out
and
pop
cmp
mov
xor
xor
pop
addr16
in
aad
ss
sbb
xchg
ds
popf
sbb
fdiv
imul
jno
push
sub
mov
jge
pop
mov
shrb
sahf
mov
or
mov
int3
sbb
leave
jnp
mov
mov
outsl
nop
jle
xchg
jbe
pop
jbe
push
jle
xlat
sub
rolb
mov
in
and
lahf
daa
data16
cs
cmp
and
movsb
mov
add
fdivl
and
pop
neg
sub
or
outsl
dec
out
lcall
loopne
mov
xor
cmp
jo
ret
dec
sbb
sti
sub
push
stc
lcall
jno
inc
xor
or
les
cmpsb
sub
cwtl
sbb
xchg
sub
cmp
xchg
loope
pop
negb
shlb
sahf
sub
lcall
mov
add
sbb
cmp
cmp
cmpsb
pop
adc
call
aas
sub
jp
cs
jo
jmp
mov
or
lret
xchg
add
xorl
into
sbb
call
in
in
xchg
pushf
mov
pop
inc
imul
mov
shlb
movsb
cmp
push
cmp
dec
lods
jnp
push
push
adc
sub
mov
pop
or
sub
jmp
shl
dec
pop
xchg
pop
scas
ds
cmp
pop
jbe
ljmp
adc
repz
int
inc
and
jo
add
orl
adc
dec
mov
cld
sub
sbb
pop
movsl
jle
sbb
jge
sub
sub
repz
ss
lods
jae
xchg
xchg
test
push
mov
cmpsl
dec
and
stos
in
or
cmpsl
push
bound
xchg
shll
lcall
cltd
adc
mov
jns
out
pop
pop
fbstp
arpl
xor
scas
jg
cmp
push
xor
lock
and
jl
pushf
rcrl
loop
fdivs
adc
cmp
xor
mov
xorb
mov
jbe
cwtl
jmp
mov
stos
js
push
mov
push
in
cmpsb
lret
inc
imul
mov
push
out
cmp
je
adc
pop
lcall
push
cmpsb
dec
dec
inc
std
mov
dec
push
in
push
pop
jl
jne
lock
dec
fmulp
or
cmp
pop
cmc
pusha
xlat
icebp
jbe
jle
and
fdivs
nop
inc
mov
dec
sti
das
cld
pop
cmove
adc
push
xchg
mov
xchg
jmp
push
xchg
sbb
jp
call
or
cmpsl
fs
repz
push
jp
jb
inc
cmp
mov
cmpsb
push
adc
movsb
pop
pop
push
push
push
push
lea
push
push
push
push
or
jge
sub
push
dec
pop
push
add
rol
jno
js
and
push
add
pop
shl
lea
push
pop
js
test
push
jns
jl
and
pop
push
call
and
cli
scas
enter
and
sub
mov
dec
mov
jge
pop
pop
mov
cmp
cmc
push
add
jmp
jmp
call
push
call
sub
cwtl
int
out
xor
cmpsb
test
mov
cmp
dec
cmpl
insl
loop
jno
in
test
mov
mov
inc
inc
inc
inc
clc
jns
cmp
nop
or
push
add
mov
pop
not
not
jnp
push
xor
pop
push
push
cmp
pop
pop
ror
xchg
cmp
stc
cmc
test
push
pop
push
push
jae
jp
push
pop
pop
pop
jge
jbe
test
ror
je
push
push
push
inc
pop
pop
pop
xor
sub
test
push
add
mov
pop
jmp
cmp
aad
pop
mov
xchg
lret
pop
jecxz
adc
mov
cwtl
loope
xor
cmp
pop
or
push
push
mov
pop
pop
add
clc
push
pop
and
cmp
jne
jmp
jmp
mov
movsb
pop
scas
or
or
xchg
lcall
iret
lret
mov
rorb
aaa
push
add
lea
xchg
lds
pop
sbbb
xor
cmpsl
mov
ljmp
xor
adc
or
pop
push
jne
jbe
jbe
dec
inc
pop
push
movzbl
push
jl
and
pop
push
push
xchg
pop
pop
push
rol
pop
push
push
push
add
pop
pop
pop
push
mov
pop
test
loop
pop
ja
jo
or
xchg
nop
push
cmp
pop
push
pushl
xor
pop
pop
jmp
or
xlat
cmp
pop
jl
xlat
sbb
sti
xchg
stc
adc
mov
frstor
lods
jne
adc
ret
mov
fsubs
mov
repnz
push
inc
imul
aas
jbe
lret
sub
or
aad
jnp
adc
adc
sub
cltd
adc
les
xlat
aas
mov
inc
inc
inc
inc
jge
push
xor
pop
push
call
mov
lods
mov
jbe
aas
pop
ret
icebp
inc
xchg
xor
mov
rol
lods
out
adc
sub
cmpsb
dec
push
shll
xchg
sti
sub
pusha
inc
pushf
push
jmp
ret
add
sub
add
push
cmp
pop
add
ja
push
push
add
pop
cmp
dec
jne
push
mov
pop
nop
jmp
cmp
sub
call
xor
pop
or
mov
leave
repnz
add
and
push
mov
jb
mov
mov
pop
xchg
cmp
idivb
and
and
cmpsl
xor
dec
or
push
int3
test
aam
push
jp
test
idiv
ljmp
jmp
add
xchg
into
cmp
iret
les
test
jns
mov
jg
rcrb
dec
aam
mov
sub
cmp
ficoms
cmp
mov
mov
rclb
adc
jb
pop
mov
mov
mov
mov
roll
daa
int3
jno
and
gs
and
mov
loope
adcl
mov
and
or
shlb
mov
sub
jns
and
cli
arpl
jmp
and
mov
pop
jge,pn
push
push
sti
fbstp
into
mov
jo
loop
ficompl
enter
add
dec
rcr
fwait
xchg
xor
popf
mov
rcr
leave
dec
cs
mov
mov
lock
into
mov
nop
inc
fdivr
lcall
xor
push
inc
jle
fld
pop
popa
mov
scas
lcall
rcr
mov
aad
jge
nop
outsl
xchg
adc
jno
in
adc
mov
cwtl
test
mov
rol
shll
mov
mov
sub
adc
outsl
sbbb
adc
das
adc
sbb
ret
js
iret
push
inc
scas
mov
loop
sub
loopne
mov
js
add
ret
test
mov
or
mov
nop
add
pop
add
inc
jp
mov
sbb
addr16
cmpsb
sti
dec
sbb
sub
dec
sbb
push
int3
or
in
and
and
jmp
es
test
mov
lcall
inc
mov
arpl
neg
push
les
in
bound
push
and
xchg
adc
movsl
and
dec
mov
jno
scas
pop
add
repz
lret
xor
sub
jae
daa
xchg
fildll
mov
sbb
loopne
xor
int
jp
cmp
cwtl
cwtl
mov
stos
jg
sahf
or
xchg
inc
push
imul
mov
xor
sub
fadds
inc
les
push
aaa
and
stos
sbb
push
and
mov
stc
adc
xor
insl
addr16
out
movsb
jo
jb
lcall
inc
rol
sub
lret
inc
cmp
aas
repz
aas
imul
dec
add
xor
and
xor
dec
scas
dec
cmp
dec
fisttps
cmp
out
lea
and
pop
sub
lahf
xor
lret
sub
outsl
push
sbb
sub
and
pop
xchg
xlat
or
adc
jp
and
push
cld
std
jo
xchg
jno
std
mov
aas
jnp
repz
fsubr
outsb
rolb
cmp
inc
mov
xchg
je
jbe
add
push
push
stc
imul
aaa
xchg
mov
jb
rclb
in
sub
movl
adc
out
mov
dec
xor
sbb
mov
push
int
push
insb
mov
pop
aaa
inc
jmpw
jns
mov
lea
test
inc
shlb
push
add
mov
je
sbb
dec
mov
fstpt
fwait
addr16
add
jb
jle
push
mov
dec
lcall
hlt
mov
jae
inc
dec
jo
rolb
imul
and
sti
mov
es
les
push
xchg
out
mov
sbb
cld
mov
lahf
cmpsb
loop
push
popf
inc
ret
mov
ljmp
pop
adc
jmp
imul
or
mov
cwtl
sub
mov
cs
loope
ja
cmp
mov
sub
divl
cmpsb
ficomps
inc
xor
cmp
sub
stos
push
lock
push
sub
adc
movsl
imul
mov
std
mov
fsubs
imulb
jg
jno
and
in
out
mov
ljmp
ja
mov
loopne
clc
or
pop
in
add
and
dec
fidivrs
sbb
fimull
dec
gs
rcl
jo
enter
lds
or
ret
sub
push
mov
push
mov
pop
mov
jnp
mov
or
or
dec
movsb
int3
mov
sbb
shlb
out
mov
xchg
push
sbb
pop
stos
xchg
aad
fnstenv
nop
daa
xor
in
pop
adcl
mov
cmp
xchg
mov
xchg
xlat
stc
jns
lods
sub
movsl
mov
add
lret
jae
outsl
ds
xor
add
in
loop
pop
or
outsl
enter
cwtl
mov
add
aad
adc
cmp
jge
mov
nop
das
es
jge
clc
daa
outsl
ret
or
mov
push
mov
in
scas
jo
mov
push
mov
adc
sub
sbbb
sub
push
fwait
cld
daa
inc
clc
xor
adc
icebp
mov
dec
sbb
mov
push
mov
add
pop
cmp
dec
cmp
lock
xchg
adc
pusha
mov
div
sti
shll
das
push
in
mov
sbbb
jmp
jp
pop
sbb
cmp
dec
inc
mov
arpl
flds
cwtl
mov
sbb
push
sub
outsb
mov
fnstcw
xchg
cmp
in
pusha
hlt
leave
dec
in
shrl
stc
faddl
sub
and
cltd
movsb
pop
jp
iret
inc
nop
add
cmp
sti
xchg
les
aaa
mov
into
push
mov
stos
adcb
mov
mov
test
rcr
add
and
lock
push
pop
pop
or
ret
sbb
rcr
fadds
pop
jecxz
xor
cli
and
pop
mov
sbb
xchg
jb
popf
mov
xor
cmpsb
fisttps
push
int3
mov
mov
fisubrl
and
ret
int3
aad
push
dec
mov
outsl
cli
push
shlb
add
sbb
xchg
xchg
hlt
fsubs
repnz
incl
jno
aam
adc
fxch
jbe
xor
dec
iret
sub
rolb
dec
inc
mov
pop
out
push
pop
sahf
push
pusha
bnd
data16
sbb
fwait
dec
pop
and
jb
shrl
and
dec
sub
pop
loop
andl
xchg
push
rorb
sbb
test
xlat
in
dec
cmc
lods
outsb
dec
adc
adc
or
jmp
jecxz
sub
add
xor
fwait
outsb
cmp
fucomi
test
mov
xor
enter
add
cmc
dec
sarb
xchg
jb
outsl
popw
inc
push
notl
add
push
iret
icebp
inc
negb
stos
pop
out
and
and
aad
add
add
cmc
xchg
test
clc
dec
clc
adcb
popa
mov
lods
sbb
int
pop
mov
leave
adc
popa
call
mov
test
pop
jl
mov
pop
fs
xor
lahf
movsb
adc
jmp
jmp
pop
xchg
add
xchg
iret
dec
outsb
add
push
stc
mov
int
mov
in
loopne
mov
xchg
mov
aaa
outsb
sbb
mov
sbb
fsts
jge
fimuls
sbb
add
xor
cmp
xor
or
inc
xchg
js
jne
and
in
outsb
xchg
mov
xchg
aad
out
test
mov
pop
dec
cmpsb
xlat
int
aad
cmp
fdivrl
in
out
pop
push
aas
push
sbb
xor
lods
or
out
test
sbb
cmp
inc
arpl
mov
xor
or
popf
mov
pop
test
cltd
pminsw
sub
jb
jecxz
mov
push
mov
out
movsl
pop
mov
pop
call
iret
jae
mov
test
dec
inc
cmpsb
cmp
pop
pop
lahf
int
push
adc
stc
sub
xlat
cli
jecxz
xchg
js
xchg
stos
jae
orb
mov
hlt
cli
test
sbb
loope
jle
in
cmp
and
push
in
aad
scas
cmp
cmc
int
out
push
adc
subl
into
jbe
and
repz
mov
jg
movsb
test
pop
or
fdiv
pop
xchg
lds
push
push
int
daa
out
or
das
xchg
fwait
nop
mov
clc
int
popa
mov
lahf
sub
inc
jno
mov
fists
iret
jns
adc
xchg
cmp
ljmp
xor
das
bound
ficoml
imul
adc
lret
pop
add
fscale
icebp
jns
sahf
and
add
call
js
push
pop
sub
mov
push
push
push
lret
out
and
or
inc
fbld
jge
mov
or
sub
jle
lock
inc
sub
xor
imull
in
push
xor
mov
ret
bnd
iret
call
into
or
xchg
aaa
dec
mov
pop
jmp
lcall
ret
pop
jno
lret
rcll
add
mov
adc
lds
clc
es
pop
orl
xor
push
xchg
ljmp
push
stos
or
das
aaa
rorb
sbb
ljmp
adc
push
mov
test
xorl
inc
test
sub
fcmovne
sub
push
xorl
rcl
inc
and
sub
pop
mov
mov
jbe
mov
push
addr16
movsl
rorb
jns
jge
adc
sbb
sarb
aad
dec
cwtl
dec
xchg
lret
ror
cwtl
cmp
lret
xchg
insl
dec
insb
subl
jge
mov
mov
and
popa
push
adc
icebp
mov
mov
out
gs
adc
inc
pusha
lods
xor
in
dec
xchg
adc
sub
dec
jne
pusha
lret
mov
mov
out
sub
ret
pop
stos
sub
stos
sub
call
aad
mov
ljmp
out
sbb
push
or
sti
jo
ljmp
popa
in
push
cld
adc
lret
xchg
ret
inc
insb
ret
push
call
stc
nop
push
dec
test
mov
mov
jp
mov
jle
int3
cmp
push
mov
cmp
pop
pushl
gs
jns
or
mov
psllq
fucomp
or
pop
mov
loop
andb
pop
dec
stc
mov
cltd
fistps
push
bound
dec
mov
jb
test
inc
scas
subl
out
mov
or
inc
xchg
repnz
lea
cmpsb
stc
xchg
inc
imul
jmp
pushf
test
inc
out
ja
stc
xchg
cmp
sub
dec
or
mov
lock
stos
adc
jnp
and
pop
arpl
dec
stc
pop
mov
sub
mov
sub
and
lea
mov
jge
pusha
and
push
pop
adc
ds
inc
repnz
filds
popf
ljmp
loope
dec
sub
push
xchg
mov
add
push
popf
and
lods
jg
add
mov
fsubl
js
lss
cmc
xchg
xor
movsl
repnz
add
or
call
push
jg
ret
push
lods
add
lcall
outsb
jge
cmp
inc
xchg
int
push
or
push
rcll
inc
iret
mov
inc
pop
roll
stos
scas
mov
dec
stos
enter
sarl
jo
addr16
in
xor
push
xor
jnp
xchg
sbb
in
sbb
dec
push
jne
mov
mov
into
lock
ljmp
cmp
jne
xlat
and
mov
in
out
aad
stos
enter
ret
jl
and
pop
inc
mov
push
adc
jecxz
mov
imul
sub
gs
inc
jmp
mov
cmpsl
jo
adcb
and
fdiv
aad
stos
ss
mov
adc
shl
imul
add
fs
mov
xchg
push
add
inc
dec
aad
cmp
mov
cmp
inc
inc
adc
xor
pop
lcall
mov
jmp
cmc
dec
pop
mov
add
sbb
sub
push
dec
mov
mov
iret
cmp
sbb
xlat
aad
mov
cltd
jle
cmpsb
sub
jae
jbe
inc
dec
popf
pop
add
add
dec
xchg
adc
lret
xchg
sub
mov
jno
inc
mov
lods
cs
jno
les
adc
testl
outsb
mov
add
mov
out
fistpl
daa
jg
jmp
in
movsb
insl
insl
cli
je
aam
jecxz
lret
dec
imul
sbb
adc
jecxz
inc
scas
pushf
push
jb
dec
add
fs
in
outsb
mov
cs
mov
clc
mov
inc
clc
xchg
inc
inc
sahf
lods
iret
push
jbe
movsl
inc
data16
sub
int
adc
add
adcb
xchg
dec
bound
scas
daa
xor
es
push
mov
stos
sub
inc
add
mov
push
inc
mov
add
adc
lds
mov
icebp
push
insb
ljmp
dec
sbb
in
cmp
dec
stc
cli
xor
push
add
movsl
icebp
or
js
nop
pop
out
xchg
dec
cmp
adc
imul
repz
inc
dec
lcall
dec
dec
jl
mov
or
fst
jae
stos
push
mov
or
xchg
jecxz
pop
jmp
dec
adc
dec
testb
jno
sub
xchg
sahf
fimull
sbb
movsl
fmull
mov
mov
jnp
mov
lock
jb
mov
ljmp
mov
pushf
mov
stos
insb
loopne
pop
pop
add
sbb
hlt
sbb
lea
pop
add
pop
xor
adc
popf
dec
jo
mov
mov
pop
stos
fcomi
inc
imul
das
jne
je
xchg
xchg
mov
lods
ret
fmuls
push
int3
mov
mov
lock
test
sbb
xchg
sub
sub
scas
addl
xlat
cld
inc
fists
push
pop
arpl
xor
out
push
outsl
mov
stc
push
jmp
inc
in
test
popa
and
xchg
gs
or
jp
mov
jb
push
outsl
stc
xchg
dec
pusha
fadds
mov
cld
outsb
pop
push
insl
test
jle
jns
xchg
jmp
cmp
dec
lods
das
emms
sbb
out
shr
sbb
push
sti
rol
dec
or
cmp
xor
or
mov
cld
pop
sub
sub
insl
aad
fistps
adc
pop
rolb
jp
pushf
mov
fsubrl
leave
into
clc
mov
pop
dec
pop
ret
scas
xor
cmp
mov
sbb
mov
cs
pusha
sahf
lret
xor
fcoms
cltd
test
xchg
pop
mov
lock
sbb
mov
insl
fisubrs
lods
jle
xchg
and
xchg
les
test
dec
cli
js
adc
das
or
scas
mov
mov
and
div
mov
jbe
jae
push
in
sbb
scas
fwait
inc
test
mov
imul
rcrl
aas
shrb
ret
out
sahf
and
add
mov
push
arpl
in
scas
push
jbe
fcomp
dec
push
sahf
jmp
pop
and
leave
mov
lret
les
or
sbb
rcr
repz
pop
xchg
imul
insl
rcl
notb
orb
pushf
sbb
stos
push
inc
call
mov
mov
out
les
cmc
xlat
andb
mov
push
push
sub
push
roll
loope
add
dec
push
int
xchg
jno
add
and
xchg
xchg
test
mov
inc
dec
push
mov
stos
nop
imul
mov
inc
or
push
fstpl
pushf
aam
xor
stc
lock
mov
pusha
subb
mov
push
jmp
icebp
inc
mov
das
add
xor
cmp
push
jecxz
mov
hlt
lods
xor
outsl
dec
lods
fmul
dec
fidivrs
xlat
jo
cmp
add
sbb
sub
or
push
adc
inc
pushf
testb
popa
popf
sbb
mov
icebp
ljmp
jo
das
jbe
cli
stos
add
pop
call
sti
daa
fistpll
push
ret
test
sbb
sbb
cltd
and
iret
ret
stos
sbb
add
sarb
xchg
xchg
sbb
ds
lcall
loop
inc
ret
out
lret
cltd
movsb
insb
or
scas
ss
mov
dec
add
in
jmp
scas
cmp
inc
fneni(8087
sarb
fimull
inc
or
test
xor
mov
and
test
into
testb
mov
xchg
fiaddl
clc
lcall
xor
xchg
fcomps
mov
push
jp
fbld
adc
pop
lods
mov
jge
pop
jb
movsl
movsl
loopne
movsl
subb
sbb
or
sbb
pop
stos
add
mov
xchg
test
fisubl
movsb
jp
shll
sbb
sbb
cld
out
xor
jne
test
cmp
cmp
push
movsl
inc
and
pop
fwait
jle
or
add
jmpw
ret
out
pop
cmpsl
push
int
push
int3
cld
mov
inc
lea
push
popf
repz
xchg
outsl
mov
cmp
jg
inc
dec
movsl
cli
jecxz
bound
minps
ljmp
movsl
daa
mov
pop
adc
call
sahf
fldl2t
inc
jecxz
mov
lds
in
sub
out
bound
push
push
shrb
out
inc
leave
scas
inc
sub
pop
xor
push
popa
mov
outsl
inc
test
pop
cmp
addr16
push
lahf
lahf
mov
sub
add
rcrl
cmpsb
dec
pop
clc
shrb
je
mov
imul
lahf
mov
js
dec
pushf
hlt
jp
movl
pop
fnstsw
inc
sub
adc
mull
jl
add
stos
jp
scas
mov
adc
cwtl
clc
dec
mov
bound
int3
mov
fbstp
int
dec
xorl
xor
cld
dec
add
movl
dec
mov
cmp
jecxz
mov
je
lds
jb
aam
inc
sub
cmc
lret
pop
mov
mov
divb
loope
rcrb
mov
and
push
sahf
adc
jp
mov
fsubrs
fisttps
fs
insb
lods
cmp
sbb
add
fiaddl
and
push
xchg
add
push
mov
xchg
pop
icebp
mov
aas
mov
rcrl
adc
aas
setp
js
inc
add
mov
dec
ficompl
cmp
insl
imul
mov
xchg
mov
ror
and
rolb
jne
sbbl
lahf
fsts
cmp
cmp
call
or
shl
cli
cmp
icebp
ret
xor
lea
fsubr
jns
loopne
out
ja
popf
adc
nop
mov
insb
lret
xlat
into
or
push
test
in
dec
mov
cmc
movsl
add
jnp
mov
lahf
mov
xchg
xor
push
bound
ljmp
dec
sbb
jmp
ljmp
aad
nop
mov
mov
pop
pusha
cld
in
rcl
jp
or
pop
loop
sbb
push
aas
mov
adc
adc
clc
adcl
mov
add
call
test
outsl
pop
aam
loope
mov
pop
cmp
xchg
mov
les
mov
mov
inc
test
repnz
xor
into
insb
mov
lea
inc
mov
mov
leave
dec
pop
stc
adc
sti
out
pop
pushf
add
imul
stos
out
pop
data16
in
outsl
cmp
mov
dec
ror
add
aad
push
inc
mov
popf
sbb
push
cmp
dec
push
sbbb
stos
jl
arpl
test
inc
or
gs
jmp
ss
fldl
imul
xor
and
cs
inc
xchg
ja
push
popa
ljmp
add
jb
sbb
scas
pop
sub
int
adc
outsb
out
sbb
adc
mov
inc
sub
cmp
inc
sub
lea
pop
mov
test
cwtl
clc
cld
rorb
sub
scas
sbb
scas
push
leave
jl
mov
das
add
sbb
xor
mov
jecxz
mov
sbb
add
jecxz
mov
jo
std
sbb
push
pop
jnp
popf
xchg
js
jns
repz
jp
sti
jge
lods
pusha
dec
rcrl
adc
adc
jge
push
ljmp
sar
cmp
mov
mov
mov
jbe
rcl
dec
es
xchg
pop
mov
pop
mov
push
sub
fistpl
inc
aaa
jp
push
mov
adc
outsl
push
xchg
sbb
imul
adc
dec
pop
xchg
pop
pusha
rcrb
sahf
leave
xchg
sahf
add
inc
push
dec
mov
xchg
jne
cli
xlat
std
and
ja
xor
push
mov
add
xchg
inc
int
xor
xlat
ja
nop
insb
popa
dec
jne
mov
mov
jecxz
dec
push
push
icebp
mov
xchg
loope
jnp
sbb
cmp
dec
mov
jle
mov
cmp
je
scas
enter
add
cmp
and
insl
or
and
ficoms
add
xor
jl
ret
clc
mov
and
lods
push
lods
inc
pop
push
sbb
enter
or
sub
ljmp
mov
adc
adc
into
fldcw
imul
mov
pop
adc
mov
sub
out
lcall
push
test
mov
sbb
mov
ret
outsb
push
xchg
adcl
xor
insb
xchg
jecxz
insl
jle
fistpl
aad
xor
popf
cmp
stc
movsl
inc
mov
stos
scas
addr16
mov
adc
cmpsb
movsb
cmc
lea
inc
adc
test
bound
das
pop
dec
daa
cmpsb
in
or
xor
and
dec
push
fistpll
push
mov
sub
xchg
shlb
pop
xorb
or
clc
fimull
pop
stos
sub
out
ss
sbb
cmp
fisubrl
lcall
push
pop
adc
test
aas
data16
pusha
and
sub
sbb
mov
test
adc
xchg
push
mov
out
adcl
pop
imul
adc
testb
xchg
pop
or
and
inc
mov
lds
cli
rcrl
sub
lret
sbb
nop
loop
hlt
inc
sbb
aas
jbe
orl
es
push
add
pop
and
add
cmc
jbe
jae
scas
mov
mov
daa
imulb
jno
jns
int
pop
and
xchg
and
in
dec
andb
xor
les
and
mov
push
stos
push
inc
jp
mov
sub
xchg
dec
syscall
sub
loope
mov
dec
fldcw
jg
in
inc
lahf
sbb
pop
push
mov
aam
out
or
repz
mov
ljmp
mov
pushf
dec
jne,pn
scas
in
and
pushf
fnstsw
lret
mov
lock
lods
outsb
adc
das
inc
loopne
shlb
inc
sub
sub
shlb
push
lds
nop
addl
imul
push
aaa
shr
jl
jg
bound
stos
xchg
jnp
pop
fwait
inc
push
test
out
lahf
jmp
cmpb
dec
jnp
sbb
cltd
notb
pushf
scas
sub
dec
mov
dec
jge
arpl
xor
fstpt
add
mov
loop
subb
dec
pop
dec
dec
pop
push
dec
je
in
in
adc
and
fsin
ret
xchg
or
cmp
jno
test
push
sbb
mov
jl
mov
in
out
and
jae
outsb
jecxz
mov
sbb
inc
xor
test
mov
sbb
push
fldt
mov
xchg
out
inc
cmp
fsubrs
scas
push
lcall
repnz
adc
dec
filds
scas
scas
int
rcrb
movsb
pop
pop
ret
imul
pop
lret
add
xchg
or
and
inc
cmp
xor
mov
jne
push
gs
ret
mov
ret
std
fstps
lahf
pop
add
mov
call
imul
call
pop
icebp
xor
mov
mov
addr16
rcrb
or
or
sahf
sub
xchg
mov
xchg
mov
addl
lcall
in
shl
cld
pushl
loope
fcomps
jge
daa
or
cmp
mov
dec
cmpsb
in
jge
sbb
mov
and
jle
cmpl
or
push
push
insb
push
inc
repz
add
xchg
sbb
mov
dec
addb
aas
movsb
inc
nop
sub
and
fisttpl
inc
inc
xor
fcmove
sti
insl
mov
pop
jbe
or
pop
icebp
sbb
pop
jmp
flds
cltd
daa
xor
mov
xor
xchg
fadds
cmc
mov
mov
mov
loopne
leave
jne
cltd
xchg
loope
fldenv
cmpsl
xchg
aad
and
repnz
enter
pop
leave
mov
in
sbb
xor
lds
sbb
jmp
xor
push
inc
sbbl
pop
and
shrl
ret
xchg
nop
xorl
xor
cmp
mov
stos
sbb
js
or
jae
mov
push
loop
mov
dec
mov
fcompl
dec
fisubl
mov
test
loop
xor
or
mov
xchg
in
adc
hlt
sbb
dec
sub
ficoms
cltd
mov
pop
dec
mov
inc
fcomps
rorl
mov
arpl
mov
dec
jmp
inc
sbb
pop
and
lea
pushl
movsb
jp
mov
mov
je
sub
mov
out
and
out
xor
leave
in
xor
leave
sbb
cld
cmpb
cs
mov
jl
inc
jge
xlat
lret
in
test
insl
fdivrl
sub
popa
push
pop
jg
adc
jno
sub
pop
push
and
sub
cmp
neg
jge
mov
sbb
ss
test
and
push
cmp
lea
mov
add
repz
les
mov
and
push
icebp
pop
jmp
xlat
adc
lret
cmp
lock
nop
pusha
ror
ret
leave
imul
adc
and
jnp
dec
imul
sub
push
sbb
rcl
lret
insb
test
mov
xchg
test
xor
xor
sti
int
inc
out
repz
cmp
outsb
out
xchg
inc
cmp
sub
xchg
push
std
dec
mov
mov
aad
mov
sub
pop
ficompl
rcrb
push
pop
pop
in
bound
pop
sbb
xor
jp
repnz
fisubl
inc
xor
clc
mov
dec
add
jp
cltd
jns
inc
imul
fldenv
fmul
cmp
in
scas
cmp
cmpsb
pop
test
inc
insb
sbb
repnz
pop
stos
int3
imul
sarl
in
pop
data16
bound
xchg
sub
and
aam
push
aad
jns
mov
mov
out
rol
enter
aas
leave
dec
icebp
hlt
pusha
lahf
testl
cltd
mov
cmp
cltd
fists
inc
or
mov
add
into
loopne
lock
ja
mov
push
loopne
cmp
lahf
mov
sbb
lcall
repnz
xchg
pop
int3
in
adc
jmp
mov
test
ret
in
sub
sub
cmp
or
xor
ret
jp
cltd
nop
dec
sbb
loopne
xchg
scas
adc
jb
mov
mov
int
iret
mov
aad
data16
xchg
xchg
jno
or
xlat
out
mov
xchg
or
mov
sar
ror
xor
in
sub
push
pop
std
rolb
add
out
sbb
call
adcl
in
or
mov
add
xchg
aad
mov
sbbb
mov
sbb
lods
sbb
movsl
scas
adcl
xor
and
cli
add
xchg
adc
fwait
pop
push
bound
out
popa
out
je
hlt
cmpsb
cmp
pushf
jmp
sbbb
adc
pop
imul
in
inc
movsl
push
dec
mov
inc
stos
mov
movsb
out
mov
push
cmpsl
jmp
inc
loope
and
mov
outsb
scas
adc
dec
jle
inc
mov
jo
fcoms
mov
test
cmp
xchg
ret
cmp
inc
stos
cwtl
sub
cmp
jns
bsf
xchg
stc
jns
cmp
std
ljmp
in
cmp
adc
adc
xor
xchg
push
xchg
and
out
pop
mov
flds
sbb
dec
mov
sub
mov
stc
and
subb
adc
or
sub
xlat
sbb
dec
pop
push
mov
sbb
icebp
imul
and
iret
mov
xor
xchg
mov
and
adc
xchg
rcll
fisubrs
mov
fiaddl
jecxz
insb
lcall
shlb
xchg
hlt
jno
daa
cmp
jne
push
dec
movsw
mov
pop
insb
movsl
pushf
fildl
cmp
loopne
iret
mov
in
add
mov
leave
rclb
pushf
test
push
mov
jl
inc
stos
outsb
fmull
sbb
repz
in
sbb
dec
outsb
cmp
sub
cmp
divb
and
js
add
mov
push
inc
or
out
mov
mov
cmp
xlat
pop
mov
jae
insb
std
pop
dec
or
bound
insb
inc
xchg
adc
pop
xchg
cmp
sbb
cmpsb
clc
mov
pusha
mov
orl
in
sbb
add
leave
scas
fdivrs
mov
cmp
sub
mov
inc
jo
ja
cmp
jle
inc
ficoms
scas
or
roll
inc
cmp
or
mov
ficoml
ficomps
dec
xchg
cmp
mov
inc
fsubl
add
out
xchg
mov
lea
test
pop
out
mov
adcb
inc
hlt
and
xor
xor
pop
je
cmc
movsl
push
int
push
loop
mov
test
push
inc
shrl
enter
add
push
hlt
movsl
lods
shlb
cld
mov
inc
cmpl
movsb
sub
dec
fbstp
mov
sbb
inc
jbe
or
xchg
or
mov
orb
popf
ror
adc
mov
notl
mov
fucom
cmc
sti
mov
mov
inc
addr16
push
mov
push
pusha
mov
lds
xchg
mov
stos
rclb
lods
pop
rcl
jmp
lods
sahf
repnz
cmpsb
imul
imul
jp
adc
jmp
arpl
ljmp
cmp
sub
test
push
imul
mov
mov
jge
mov
test
in
sti
sub
ljmp
add
mov
ljmp
mov
jnp
enter
mov
mov
outsb
addl
mov
cwtl
ret
call
adc
push
cld
add
xchg
mov
movb
xorb
xchg
mov
push
push
adc
ja
add
sub
cmp
sub
out
pusha
popf
sbb
jp
flds
pop
xor
mov
inc
insl
xchg
imul
popf
dec
adc
inc
sub
pop
mov
arpl
in
jl
mov
js
mov
rorl
and
mov
or
dec
adc
add
movsl
popf
sbb
in
call
adc
xchg
dec
jmp
adc
push
mov
cwtl
jnp
inc
cwtl
test
lahf
fmul
jmp
arpl
pop
cmc
and
add
cltd
and
dec
popa
push
jbe
inc
jg
push
aam
js
insb
mov
in
cmpl
cmp
push
lahf
mov
outsl
ljmp
out
icebp
stos
xorb
mov
jecxz
fstpl
inc
inc
pop
data16
pop
push
or
xor
mov
push
cwtl
add
nop
mov
div
dec
clc
pop
mov
push
pop
js
enter
mov
cmpsb
movsl
add
mov
mov
push
xor
std
mov
loop
adc
inc
aaa
lea
mov
mov
in
cmc
loop
xchg
scas
in
jl
inc
sub
mov
out
mov
mov
mov
lret
inc
call
mov
cltd
addr16
lods
mov
add
xchg
outsb
and
push
in
adc
daa
insl
inc
cmp
movsl
mov
js
int
adc
pop
cwtl
outsb
outsb
ror
neg
aas
nop
dec
in
clc
or
pop
cmp
or
aad
orl
lea
dec
arpl
push
nop
mov
pop
jle
adc
inc
cmc
sub
imul
jp
cli
jge
loop
shll
jno
stc
mov
test
je
xlat
pop
lahf
xchg
aad
lcall
test
jmp
rep
in
ljmp
inc
ljmp
jge
addr16
ss
and
sub
jp
icebp
in
in
mov
sub
or
jle
loopne
push
sub
cmpsl
and
clc
cmc
stc
jge
scas
pop
mov
push
xchg
mov
xor
jns
mov
xor
jnp
movsb
xor
scas
fcmovbe
pop
pop
lods
in
iret
sahf
jg
cmpsb
fwait
adc
pushf
and
xor
into
mov
xchg
or
cltd
sub
mov
adc
pop
scas
rol
inc
in
rcll
in
rorl
adc
cmp
or
push
out
cli
pop
adcl
pushf
fwait
sub
fldl
std
pop
cmp
adc
mov
inc
or
je
lahf
cmc
dec
or
das
xor
je
xchg
rcr
shl
xchg
pop
fnstcw
pusha
push
aas
xor
mov
ljmp
lds
jle
nop
xchg
cwtl
add
out
scas
test
cltd
dec
push
fldl
ss
xor
ret
jle
rcr
gs
xchg
leave
inc
repz
lock
adc
xor
stos
xorb
mov
inc
movsl
cmpb
icebp
pop
pop
and
push
jmp
pop
xor
push
insb
adc
iret
lock
in
fisttpll
iret
cmp
sub
nop
lea
push
cmpsl
loop
or
add
push
shlb
lcall
or
aam
push
addr16
fwait
mov
mov
sahf
fsubs
sub
sti
fs
pop
popa
cltd
mov
dec
mov
outsb
das
adc
ret
test
popf
mov
mov
dec
dec
dec
shrb
adc
jmp
dec
push
sub
icebp
je
add
arpl
rcl
bound
das
mov
mov
mov
mov
aam
mov
add
scas
pop
je
test
inc
pop
xchg
push
jg
rcll
je
lods
nop
mov
lret
cmp
icebp
inc
mov
shrl
cld
repnz
outsb
pop
icebp
dec
jns
std
dec
repnz
cmp
jo
lods
lds
xchg
orb
inc
xchg
das
push
lea
sbb
sbbl
xchg
int3
clc
and
sti
test
mov
out
std
jo
adc
pop
pushf
mov
shr
mov
ret
and
sbb
jle
ficompl
cli
sub
or
dec
icebp
les
push
jns
mov
jnp
fldenv
push
mov
mov
lret
aaa
repnz
pop
adc
mov
mov
xchg
andl
xchg
std
mov
push
daa
sahf
push
pop
outsl
push
push
add
jp
xchg
stos
jl
shr
rorb
push
inc
cmp
push
cmp
pop
inc
outsb
mov
add
movsb
xor
out
test
mov
or
xchg
cmpsl
sbb
outsb
cmp
mov
jl
jp
imul
sub
popf
mov
xchg
sub
call
add
sbb
mov
popf
daa
shrb
sub
push
cs
jo
cmpsb
pushf
hlt
jl
pop
xchg
pop
mov
dec
sti
ja
popa
out
sbb
fnstenv
loop
and
out
rorl
push
lahf
sbbl
nop
ss
add
sub
ret
pop
mov
mov
stos
pop
xchg
mov
cli
inc
repnz
cmpsb
fs
mov
int
les
out
je
mov
repnz
movl
mov
fistps
shr
xchg
sub
outsl
out
orb
adc
xor
insb
in
jb
mov
mov
test
push
ds
push
and
dec
cmp
inc
lock
push
cwtl
loope
or
xchg
fistpll
in
add
mov
icebp
jmp
xchg
mov
pop
or
mov
push
xchg
std
xor
mov
push
in
cli
lods
jnp
xchg
pushf
mov
test
loop
out
inc
or
dec
outsl
test
gs
xlat
mov
iret
and
sbb
xchg
xor
nop
jle
adc
jae
insl
call
sbb
mov
pop
push
push
mov
cmp
and
push
mov
cwtl
jge
adc
and
sub
cli
fs
mov
cmpsb
fstl
les
cmp
mov
cmc
xorl
ret
outsl
pop
into
shrl
mov
mov
icebp
bswap
int
sbb
xchg
adc
cmp
cvtpi2ps
jo
call
cmpb
jnp
lret
outsl
or
rcrl
cmp
cld
inc
lcall
frstor
negl
sti
mov
sbb
xor
ljmp
insl
lods
repz
xor
xchg
cmp
cmp
pop
or
shrb
cmp
sub
lock
and
cmp
mov
mov
push
sar
orl
and
push
mov
sbb
js
jo
iret
out
int
pop
std
mov
in
push
and
in
or
daa
stos
jl
stos
mov
int3
lock
push
adc
js
mov
fsubr
loope
mov
mov
mov
and
sub
aam
pop
cmp
xlat
stos
sar
or
sbb
icebp
mov
fwait
xchg
aas
test
sar
lret
adc
sbb
in
or
cmp
pop
pop
sub
mov
push
flds
jne
repz
test
pop
jmp
adc
shl
pop
fldl
sahf
sti
or
push
mov
cmp
das
mov
scas
cli
daa
dec
repz
mov
mov
pushf
sbb
ss
xchg
fs
or
mov
jl
mov
into
int3
xchg
dec
push
out
add
ret
imul
in
pop
ds
sub
icebp
out
xchg
xchg
jns
xor
push
pop
mov
pop
into
mov
out
mov
push
xlat
lock
lods
test
aas
cmp
inc
sub
test
es
mov
jl
out
cmpsl
shr
mov
pop
mov
std
mov
push
data16
inc
and
cmpb
inc
test
fnstcw
xchg
add
add
jge
aam
cmpsb
sahf
xor
cld
shlb
jg
sti
popf
dec
jae
sahf
cwtl
jnp
call
stc
call
xchg
inc
sbb
cmp
jle
xchg
loop
jne
mov
movsl
add
push
push
ret
push
std
nop
pop
mov
insl
add
sub
movsb
stc
gs
jp
adc
xchg
test
mov
mov
adc
push
mov
jne
fs
out
cmp
push
xor
pop
push
adc
leave
mov
adc
mov
dec
push
scas
mov
daa
push
mov
lods
jns
std
mov
inc
movsl
mov
sub
cmp
mov
cmp
call
dec
aam
lods
lock
lods
test
gs
ljmp
sub
dec
cmp
mov
mov
aad
aaa
loop
mov
xchg
push
jmp
dec
inc
jl
sbb
dec
xlat
fildl
test
push
sub
es
mov
pop
cmp
fisttpll
fiaddl
inc
lock
mov
inc
and
push
lea
jge
pop
addl
cltd
pusha
pop
scas
adc
call
mov
inc
push
inc
clc
ret
mov
add
std
popf
fdivrs
out
xor
pop
leave
lods
mov
dec
jge
xchg
and
xor
aaa
sbb
lcall
jns
out
js
pop
inc
stc
loopne
jns
nop
loope
cmc
mov
mov
ret
and
and
xchg
out
mov
or
orl
out
ljmp
mov
cmpsb
arpl
or
inc
dec
or
sbb
adc
fisttpl
lret
fucomp
pop
push
sub
rorl
shlb
scas
mov
pop
gs
mov
psraw
lods
pushf
sahf
adc
lock
jnp
pop
test
fstpt
xorb
pop
fiaddl
xor
push
imul
mov
call
lods
test
mov
sbb
stos
jne
cmpsb
inc
lret
stos
fs
fdivs
jl
mov
addb
push
out
je
jp
movsb
cmpsl
push
in
xchg
jp
lds
adc
jbe
lret
and
mov
divl
sub
xor
jae
outsl
fisttps
into
rcrl
xlat
sub
or
dec
les
xor
lahf
jbe
imulb
and
arpl
xchg
aaa
test
sub
sub
stos
xchg
xchg
sub
and
fldt
cmpsb
arpl
mov
sub
and
xor
dec
lods
in
sbb
and
pop
shll
xchg
dec
xor
push
jmp
pop
dec
and
outsb
or
addb
loop
rolb
scas
jmp
stos
cmp
cmp
ficompl
xor
rcrb
in
ja
je
or
jl
dec
addl
dec
jle
pop
iret
mov
and
xor
add
aas
mov
aad
lock
xor
xor
mov
std
aaa
popa
aad
xor
movsl
scas
test
ljmp
push
mov
pusha
mov
adc
cwtl
cmc
and
dec
fcmovu
mov
mov
je,pn
mov
adc
push
ss
jmp
jnp
insb
nop
push
cli
push
sbb
loope
mov
or
inc
lret
mov
mov
popa
sbb
call
jbe,pt
push
mov
sub
or
imul
outsb
sub
push
inc
xchg
aaa
pop
insb
cmp
mov
fidivs
pushf
push
xor
das
xor
xorb
sub
adc
nop
fwait
test
jns
dec
ja
call
stos
and
fwait
jl
pop
push
lds
clc
iret
dec
mov
sbb
lods
aaa
sub
shll
xchg
call
test
out
jl,pn
mov
inc
add
rorl
pop
mov
sbb
xor
push
dec
fdivrl
insl
jmp
mov
imulb
enter
jg
xchg
lret
mulb
jbe
push
jns
repz
stc
lahf
es
divl
push
lods
xor
mov
mov
lret
dec
addl
scas
in
add
pop
mov
out
xor
jmp
mov
shll
and
or
pop
sbb
mov
outsb
dec
push
adc
fwait
push
lahf
mov
insl
pusha
inc
mov
jmp
cwtl
mov
in
add
popa
out
xchg
das
sbb
lods
xor
xchg
xchg
or
mov
cmp
mov
sysret
in
dec
push
testb
nop
fsubp
loope
sub
sub
add
xor
clc
out
movsb
and
xor
adc
ret
dec
gs
cli
stc
stos
loopne,pn
sbb
loopne
add
push
jb
mov
xchg
mov
and
sti
popf
nop
jb
jns
ja
arpl
out
adc
dec
jbe
push
xchg
jns
jno
dec
out
pop
je
adc
enter
ja
shl
stc
or
popa
lods
dec
inc
stc
popl
add
pop
xor
cmp
ljmp
inc
fcmove
fs
and
mov
adc
inc
test
xchg
push
mov
jg
out
push
arpl
sbb
dec
dec
orl
mov
jmp
out
scas
lea
or
sbb
movsb
stos
clc
jmp
mov
mov
cld
push
popa
xor
in
ret
jl
inc
test
add
inc
xchg
xor
dec
rcll
adc
pop
cmp
xlat
in
addr16
push
mov
sbb
pop
cmp
addb
sub
ror
dec
je
test
inc
nop
pop
fiadds
jmp
inc
push
popa
xchg
in
xor
lret
cld
cltd
xor
out
push
sbb
and
inc
testb
in
mov
jae
jp
mov
cmp
dec
push
cwtl
sub
out
mov
dec
imul
lcall
xchg
cmp
sub
outsl
out
mov
mov
sbb
xorl
xor
pushf
fidivrs
std
scas
fucomp
inc
pop
stos
xchg
xor
jmp
push
out
ds
jp
push
jne
clc
jb
mov
cmp
or
cmp
xor
cmp
out
sub
xchg
push
push
pushf
inc
sbb
lock
testb
lea
mov
ljmp
mov
mov
test
xor
push
mov
pop
stos
pop
pop
mov
jno
pop
adc
pop
dec
push
push
mov
sti
int
dec
popf
icebp
inc
ret
stos
push
sub
sub
jmp
in
in
and
mov
and
daa
dec
aad
push
icebp
push
frstor
inc
ds
loop
xchg
mov
inc
out
mov
and
and
addr16
mov
fwait
lods
cmpsb
push
bsf
lahf
movsb
call
pop
mov
mov
sbb
mov
cmpsb
shrl
cmp
les
rcr
test
adc
adc
mov
loop
dec
push
add
cmp
mov
js
cli
lea
jo
mov
mov
push
lds
js,pn
push
fldl
jecxz
and
xor
xchg
add
push
add
outsb
dec
imul
sbb
cmpsl
and
jbe
pop
loopne
cli
sbb
imul
jno
pop
test
jae
xlat
and
add
xchg
adc
pop
mov
les
sarb
ja
bound
fwait
jecxz
push
insl
es
hlt
mov
inc
adc
popf
shr
je
rcll
xlat
ja
neg
mov
push
mov
insb
pop
cli
mov
movsb
sub
lcall
idivb
mov
sbb
sarl
ljmp
shl
lods
inc
lock
mov
fcoms
cmp
and
xchg
aam
inc
loop
popa
into
xlat
fisttps
push
fnstsw
movsl
ds
pushf
lods
adc
or
and
icebp
mov
xor
inc
xchg
or
repz
mov
rcr
cmpsb
jne
jo
and
cmp
add
call
xchg
or
lret
cmp
mov
adc
xor
cld
mov
outsl
and
sbb
push
scas
gs
fisttpl
adc
xor
jle
dec
jbe
push
inc
xor
inc
in
stos
push
xor
pop
inc
pop
flds
adc
cld
das
and
xchg
dec
loop
mov
push
mov
loop
jbe
pop
out
inc
mov
outsb
jae
fnstcw
dec
ss
stos
jnp
jmp
mov
mov
inc
setne
les
in
rclb
pop
bnd
pop
bound
adc
or
xchg
inc
pop
stos
loope
inc
bound
and
mov
adc
cmp
mov
stc
or
sar
push
into
lea
ret
js
hlt
cmpsb
ljmp
xor
lret
enter
add
shlb
lds
sbb
out
jl
mov
inc
pop
push
dec
jl
inc
lock
jecxz
std
pushf
stc
fdivr
add
adc
jns
add
mov
add
add
cwtl
push
sub
cltd
gs
test
inc
add
aad
addb
xchg
jns
data16
sbbb
fdivr
sub
clc
inc
sbb
mov
fcoms
and
or
dec
arpl
in
pop
xor
repz
stos
or
adc
and
add
fdivp
jl
ja
dec
jb
pop
mov
pop
hlt
sub
mov
lfence
in
mov
pushf
mov
popa
adc
push
sar
dec
aad
cmpsb
xchg
jecxz
xlat
aas
pop
mov
xchg
scas
mov
icebp
mov
lcall
daa
sti
lods
adc
sbb
call
and
idiv
ja
lret
call
mov
sub
icebp
and
fs
push
pop
lret
cmp
or
test
in
push
outsl
xor
mov
nop
fcoms
mov
stos
xor
leave
hlt
mov
mov
mov
inc
into
sbb
mov
lods
rclb
push
bswap
fimuls
push
out
jne
leave
clc
cmp
sub
test
orb
pop
sub
xchg
and
mov
add
sub
fs
adc
and
or
and
nop
xor
cld
jp
shll
or
rorb
mov
mov
lahf
jmp
and
stos
add
sahf
sub
cmp
adc
push
push
lret
ljmp
sub
les
pop
or
xchg
fsubrs
sub
xor
jno
bound
test
mov
cmpsb
inc
fwait
sub
fildl
mov
mov
outsb
pop
outsl
fucomp
aaa
cmc
mov
dec
xor
fsubs
es
loop
and
add
ret
fstp
cld
in
xor
adc
xor
jle
jb
cwtl
scas
popa
cwtl
adc
add
cmp
dec
movsb
mov
mov
aam
sub
push
ret
sub
add
out
jmp
ss
add
aas
call
adc
outsb
push
push
out
jb
mov
adc
sysenter
adc
cld
and
fisubs
and
jae
or
xchg
jb
cltd
movsb
cmc
call
icebp
test
push
enter
and
lods
ja
shr
test
mov
test
aaa
pusha
les
js
pop
add
fs
and
pop
and
insl
pop
sub
ss
xor
inc
mov
mov
pop
in
out
inc
hlt
xlat
push
add
or
in
cmp
or
loop
mov
push
fildl
jl
sbb
cltd
out
int
sbb
mov
mov
les
mov
mov
mov
and
icebp
pop
movsl
jno
inc
lret
sbb
std
or
out
jge
push
repnz
cmp
xor
dec
mov
ror
cltd
das
es
into
sbb
mov
iret
or
icebp
bound
sub
mov
stos
and
lods
roll
or
sbb
es
out
popa
pusha
push
outsl
imul
enter
int3
gs
sub
jge
push
subl
jbe
in
in
jecxz
sbb
add
fdivs
push
cmp
insb
jb
pop
pusha
in
and
jl
sub
add
lcall
loope
push
mov
add
stos
or
test
push
lods
aad
mov
les
inc
int
stos
filds
or
dec
nop
inc
jne
mov
mov
sub
or
push
push
pushf
mov
rolb
stos
mov
cmp
push
mov
decl
mov
jns
enter
in
fstpl
inc
icebp
outsl
cli
scas
mov
scas
xchg
mov
push
jp
icebp
xchg
sub
ljmp
inc
mov
push
xchg
shlb
shrb
dec
popf
or
add
daa
stos
jecxz
push
pop
call
in
ja
imul
pop
enter
dec
call
push
cmp
js
jmp
lock
or
jne
cmp
cmp
cmp
mov
shlb
aad
push
jle
lahf
das
lods
mov
popf
lods
leave
pushf
mov
dec
in
push
jae
adc
loopne
iret
mov
cmp
cmp
mov
shlb
lds
mov
or
outsb
pusha
jp
sub
jge
jg
dec
call
filds
imul
js
enter
pop
adc
xor
jae
xor
dec
daa
xchg
push
nop
int
bnd
cmp
cwtl
je
ficompl
fstpl
inc
in
ds
in
fsub
cmp
mov
mov
and
mov
mov
sahf
sbb
adc
cltd
pop
adc
sbb
xchg
sbb
pop
add
mov
pusha
cld
ds
xchg
and
or
cmp
xor
push
adc
push
jl
sbb
mov
data16
inc
pop
push
xor
pop
or
lret
in
jno
push
sti
dec
imul
jmp
push
mov
jno
sbb
aaa
mov
test
insl
in
stos
lds
out
mov
fcoms
lret
inc
cmp
cmp
mov
lret
xchg
aad
ffreep
add
ret
test
mov
add
bnd
push
or
mov
daa
lods
xor
lods
cmp
jecxz
dec
and
or
fiadds
push
ret
or
mov
xchg
mov
addr16
jmp
dec
iret
sbb
in
pop
push
inc
mov
xlat
or
push
lock
mov
or
jbe
add
mov
xor
mov
rcrb
xchg
imul
imul
fs
jle
push
xor
and
mov
cmpsl
mov
rol
ds
jl
sbb
std
push
lret
jmp
add
fucomp
cmp
negb
aaa
inc
mov
cmp
pop
xor
xor
lea
aaa
cmpsl
or
pusha
inc
xchg
push
sbb
sarl
sub
mov
sbb
or
lea
inc
jae
fdivr
les
call
mov
add
xor
js
pop
adcl
stos
push
pop
roll
xor
fwait
adc
sarl
nop
cmp
add
fwait
rolb
mov
insl
cltd
loop
push
jo
sbb
xchg
adc
pop
sahf
into
jle
or
mov
stos
xor
int3
xchg
mov
xchg
cli
stos
xchg
scas
sbb
repnz
mov
mov
pushf
inc
icebp
push
push
cmp
mov
fwait
cmp
mov
and
js
rol
jae
popa
loopne
pop
cwtl
mov
sbb
inc
fists
sbb
dec
enter
adc
pushf
lock
mov
dec
rcrb
adc
pop
stc
lea
ljmp
or
scas
pop
inc
enter
push
repnz
cmp
aaa
pop
xchg
frstor
pusha
imul
dec
int3
jae
push
fs
addl
nop
inc
std
sahf
push
jmp
ja
inc
scas
push
mov
add
xor
pop
clc
mov
popf
stc
in
addr16
repnz
pop
pop
mov
sub
shll
outsl
cmp
or
inc
lret
test
xor
sub
jo
int
test
push
sub
and
mov
stos
lock
dec
iret
lock
pop
and
inc
cmc
and
mov
fcomps
sbb
cmp
leave
in
icebp
add
repz
vcvtdq2ps
cmp
ljmp
inc
int
xlat
por
mov
pop
jo
rcrl
leave
adc
and
xchg
leave
hlt
ja
and
les
sub
outsl
push
push
ja
outsl
icebp
and
dec
jnp
dec
push
mov
push
movsl
inc
int3
mov
and
or
insl
xor
ss
mov
pop
mov
jb
push
jg
sbb
jnp
in
in
out
cmp
fs
or
je
mov
scas
and
xchg
and
jnp
and
cmp
mov
or
cmp
adc
out
xchg
int3
push
or
aam
pop
call
jmp
inc
mov
xorl
mov
pop
jmp
pop
shll
inc
sub
loope
lret
sbb
ret
jge
mov
aas
cmc
pop
js
js
or
sub
js
fsubrp
add
into
add
cmp
inc
outsb
adc
in
aas
or
xor
add
dec
add
and
fcomps
adc
int
fdivrl
out
adc
sub
xchg
or
or
sub
dec
rcrb
lds
lock
cmp
repnz
add
sti
jmp
push
fidivrl
xor
cmp
inc
cmc
mov
or
lods
lret
pop
js
mov
outsl
jno
aam
add
fs
cwtl
imul
repz
das
push
pop
sub
pop
arpl
lods
jecxz
mov
leave
iret
popf
int3
mov
xchg
pop
mov
sub
fcmovu
fmulp
inc
ljmp
popa
pop
mov
mov
cmp
jmp
push
push
andb
arpl
loop
pop
push
jbe
mov
or
dec
cmc
jo
cmp
xchg
cli
repnz
icebp
lods
pop
and
negb
fwait
mov
mov
hlt
jo
push
mov
mov
scas
inc
adc
insl
loopne
mov
adc
shll
mov
xor
or
fs
adc
std
out
int3
cltd
js
scas
ret
bound
fists
or
cmpsb
jecxz
dec
movsl
hlt
pop
fiadds
push
rcll
sub
add
shll
adc
rcll
ljmp
adc
leave
clc
cwtl
inc
push
push
lock
fs
mov
ja
cmpsb
push
and
call
xchg
pop
sub
dec
imul
inc
xor
in
rcl
mov
mov
and
ljmp
insb
repnz
lret
lcall
dec
out
adc
shll
aam
idivl
jg
cmp
jne
xor
adc
addr16
jmp
inc
cmp
sbb
repnz
inc
hlt
leave
dec
sbb
rcrb
xchg
jg
inc
mov
decb
and
aam
mov
jno,pn
mov
jg
adc
cmp
adc
ljmp
xlat
les
or
pop
xlat
and
in
pop
repz
and
sub
mov
cmc
sbb
inc
mov
or
jge
out
das
xchg
in
dec
xor
lea
dec
ja
les
inc
mov
lret
push
lea
xor
loopne
stos
ds
clc
stc
pop
cmp
xchg
into
mov
mov
xchg
daa
sti
xlat
pushf
movsl
cld
es
in
mov
pop
inc
in
jno
push
xchg
and
mov
int
add
int
add
pop
cmp
dec
mov
mov
jo
inc
inc
fwait
cli
jne
xchg
jb
xchg
imull
mov
sbbb
cli
pop
stos
add
push
cmp
in
nop
push
push
daa
inc
ficoms
popa
cmpsb
out
xor
xchg
repz
adc
push
cwtl
mov
call
dec
pop
insb
push
in
adc
jl
fcoms
or
adc
xor
outsl
push
sarb
mov
ret
imull
roll
sub
enter
push
xlat
clc
mov
jo
fidivrs
adc
arpl
mov
or
into
sbb
stc
add
push
int
fcomps
fwait
in
ficomps
xor
pusha
int
scas
add
sar
ret
hlt
add
xchg
jo
mov
jmp
mov
out
jb
sub
sbb
mov
jecxz
xchg
jmp
adc
cli
icebp
and
ret
cld
and
divl
stos
pop
mov
data16
mov
dec
push
cs
scas
cmp
repnz
loop
jg
jg
or
pop
pop
mov
cmp
lock
scas
pop
ror
push
or
outsl
jg
daa
in
xor
popa
sbb
jl
dec
jp
stc
xchg
popa
icebp
loope
int
bound
cltd
rdmsr
stc
es
pop
iret
imulb
mov
test
cmp
cmp
xchg
test
mov
pop
fldl2t
test
adc
adc
ds
ret
push
dec
xchg
inc
push
cld
jo
sub
push
out
mov
mov
sbb
mov
jnp
popf
gs
popl
ret
mov
aad
sub
pushf
psrlq
or
clc
sub
xchg
push
inc
out
sub
pop
test
aad
push
xlat
sbb
jne
xchg
inc
mov
cmp
iret
jl
and
push
aam
xor
cmc
jle
pop
jmp
sbb
hlt
lret
pop
sub
and
sbbl
inc
inc
jge
lods
ret
in
inc
mov
mov
mov
mov
sub
stos
fisubrl
jns
leave
dec
sbb
mov
xor
cmp
jmp
adc
lods
mov
dec
mov
notb
inc
andl
jno
stc
int3
inc
push
popf
cmpsb
sub
jo
sub
mov
mov
or
sbb
outsb
mov
push
ret
lcall
lahf
push
adc
push
adcl
jg
sbb
int3
push
xor
pop
daa
lods
out
inc
clc
lds
loope
sarb
fisubs
movsb
mov
shlb
mov
mov
jnp
rcll
std
aas
bound
xchg
call
sub
sbb
cmp
repz
int
shll
jmp
sub
fwait
pushf
lret
mov
push
std
cmpsb
lock
or
adc
addl
mov
push
scas
xchg
push
cltd
mov
mov
dec
push
cmp
inc
xchg
cmp
ljmp
bound
inc
cmp
jo
out
outsb
mov
cmp
or
jecxz
sbb
enter
daa
push
outsb
leave
shlb
mov
divl
inc
push
mov
fidivrs
add
mov
dec
arpl
mov
dec
xor
mov
inc
nop
icebp
in
mov
dec
sub
push
sarb
ret
jmp
push
pop
int3
pop
rol
lahf
and
les
cmp
shl
je
scas
and
xchg
xchg
dec
stos
add
inc
and
pop
jb
jle
int
dec
mov
aaa
cmp
lea
lahf
jl
sub
add
cmp
add
outsb
les
adc
add
fistpll
mov
adc
adc
dec
xchg
scas
pop
stos
es
mov
dec
xchg
ja
loop
lods
mov
jmp
add
dec
mov
in
cli
xor
push
test
adc
loope
loope
in
cmp
add
jge
jmp
lea
fstpt
xor
push
out
in
mov
sub
loop
fbstp
cs
add
xor
lods
jns
fcoms
pop
push
and
mov
mov
sub
mov
das
mov
cmpsb
sub
out
or
mov
adc
cmp
inc
mov
outsl
insl
push
sub
pop
sahf
jecxz
xchg
mov
xchg
sub
cmp
and
mov
in
mov
scas
jecxz
out
jecxz
imul
mov
adc
xor
cmp
pop
gs
mov
dec
sbb
stos
xchg
js
das
xchg
lods
push
jb
sbb
adc
cwtl
pop
test
and
mov
adc
test
insl
or
loopne
outsb
in
or
mov
and
sub
int
mov
pop
js
sub
adc
lods
pusha
xlat
jo
xor
subl
movsl
aam
pusha
xchg
or
jecxz
jl
subb
xor
jb
std
mov
jb
mov
pop
or
sarl
lock
jnp
or
repz
rcrb
add
xchg
xchg
lock
add
rclb
or
aaa
ret
ljmp
mov
dec
push
scas
adc
and
pop
push
repnz
stos
pop
pop
ret
mov
addr16
cmpsl
sbb
mov
sbb
shll
and
in
push
mov
mov
lcall
cmp
movsb
jno
cmc
lods
push
adc
pop
lds
mov
dec
pop
xsha256
cmpsb
xchg
mov
jmp
mov
mov
lods
adc
jmp
xchg
cmp
adc
bound
xchg
push
ret
pop
mov
sbb
sbbl
ja
xor
xlat
cmp
sbb
aad
mov
xchg
call
sbb
mov
sub
dec
mov
cltd
cmpb
cli
sbb
dec
pop
cmpsl
repnz
je
aaa
xchg
push
inc
repz
clc
jp
mov
sbb
fsubp
nop
cld
hlt
loopne
add
test
cmp
mov
or
fadds
adc
mov
pushf
stos
imul
jecxz
add
and
rcll
shrb
jmp
adc
or
sbbl
call
enter
imul
int3
cmp
into
jne
in
xchg
pop
xor
or
sbb
fnsave
shl
adc
sub
movsb
test
ficomps
add
ds
xor
mov
repz
gs
lock
add
insl
test
lret
imul
roll
push
dec
fstpl
and
aad
ret
aas
cmp
repnz
jo
xorb
and
mov
stc
lock
xchg
daa
subl
jp
mov
mov
lret
lock
jle
scas
bound
mov
xchg
inc
mov
pop
cmp
stos
cmpsl
mov
popf
out
dec
mov
addr16
lea
cmp
mov
popa
add
popf
arpl
add
das
xor
mov
inc
fwait
or
into
dec
adc
jle
xor
cmpsb
pop
jo
enter
add
cmp
bound
adc
fwait
mov
cli
in
pop
xchg
ret
cmpb
push
clc
insb
lods
scas
mov
sub
cmp
adc
add
fstps
dec
xchg
in
lods
hlt
icebp
imull
fwait
jae
inc
shrb
add
std
dec
cli
adc
pop
jb
xchg
das
fwait
int
xor
inc
pop
roll
stos
jl
add
mov
clc
lods
xlat
inc
push
sarb
push
xor
mov
sub
mov
incb
jecxz
or
pop
xorb
sbbl
es
mov
cmp
xchg
adcb
cli
jge
scas
sbb
rorb
je
lret
mov
xchg
and
out
call
push
xchg
fcompl
and
femms
inc
and
pop
mov
icebp
leave
adc
jmp
push
pushf
cmp
fstpt
mov
aam
dec
cmp
inc
pushl
xor
mov
inc
leave
xlat
add
cmc
and
add
rolb
sub
bound
imul
insb
add
jnp
movb
pop
sets
or
add
sub
add
repz
jge
mov
or
adc
jge
in
int
mov
cltd
and
mov
mov
push
mov
dec
je
cmp
mov
sub
dec
shl
xor
aad
fisubs
lret
and
sbb
enter
hlt
aas
in
lods
bound
mov
push
and
out
pop
inc
int
adc
pop
xchg
rol
dec
shrb
movsl
ret
inc
loop
mov
xor
jle
add
cmp
xor
add
test
sti
add
leave
loop
int3
fisubs
loop
pop
lock
pop
pushf
xchg
loop
xchg
push
test
fnstsw
push
outsb
push
shrl
insl
jae
std
mov
fwait
cmp
xor
jle
aas
out
outsl
dec
ja
xlat
jb
test
fimull
in
sub
xchg
mov
xchg
imul
popa
repz
fistps
mov
out
lret
gs
xchg
iret
add
jmp
inc
lcall
xchg
or
call
inc
shrl
insb
inc
ss
orl
jns
lret
cs
repnz
mov
adc
ja
mov
stc
and
lods
or
push
adcb
mov
shll
jne
push
mov
test
mov
leave
js
sub
adc
enter
sub
aam
popf
fnsave
int
mov
imul
addb
mov
or
mov
frstor
leave
pop
dec
push
loope
add
je
aam
jo
adc
lea
xorb
xor
sub
out
sub
out
in
loope
lcall
inc
sbb
fs
adc
clc
push
lods
test
stos
vmread
cmp
jns
fnstcw
repz
loop
xchg
repz
jae
push
jno
mov
pop
out
nop
scas
xchg
fxch
mov
mov
jbe
fisttpll
push
mov
inc
inc
mov
mov
aad
mov
xor
push
out
xor
fldl2e
inc
lods
out
xorb
pop
inc
fdivrs
add
push
pop
jbe
je
jb
rolb
insl
push
addb
xchg
les
ret
mov
shl
mov
roll
jecxz
pop
test
and
cmp
sbb
adc
sub
and
mov
mov
dec
or
cltd
jle
sbb
dec
in
push
aam
pop
imul
dec
rcll
mov
add
bound
sub
or
inc
dec
xchg
inc
pop
mov
loope
and
dec
cmpl
jo
es
les
inc
jp
push
mov
mov
sub
and
loopne
outsb
jle
lret
sbb
adc
es
pop
dec
dec
adc
push
push
nop
in
lods
ss
mov
or
pop
cltd
add
imul
sub
pop
mov
pop
enter
mov
repz
add
dec
and
adc
clc
mov
adc
lret
dec
imul
test
pop
dec
cltd
cltd
cs
xchg
sub
add
mov
xchg
shlb
jge
rcr
aaa
and
pushf
bound
inc
cltd
mov
xchg
sbb
call
or
insb
sbb
or
mov
lea
push
adc
push
pop
jns
jmp
fistpll
nop
mov
push
cmp
sbb
les
xchg
fwait
scas
mov
or
int
adc
sub
mov
jbe
fsubp
pushf
xchg
mov
clc
jno
xor
outsl
jno
aaa
adc
test
fnstenv
cmp
mov
dec
loopne
testl
test
adc
xor
lock
adc
loop
cltd
int
dec
inc
jbe
mov
adc
and
outsl
cmp
faddl
or
fimuls
xor
stos
clc
jmp
push
xor
adc
xlat
push
fidivrs
dec
sbb
mov
rol
sub
dec
pop
mov
lods
call
sub
inc
mov
out
adc
shrl
xchg
addr16
adc
daa
dec
mov
add
ret
lods
shrl
dec
pop
adc
mov
lea
repnz
mov
lods
and
or
push
push
or
into
out
cmp
jbe
pop
out
jl
and
lret
jge
cwtl
cmp
sahf
mov
in
cmp
scas
jae
push
jl
mov
add
clc
mov
sbb
and
addl
pushf
aad
cmpsl
fcmove
rclb
cmpsb
mov
flds
jl
add
ja
sahf
cs
push
loop
sbb
imul
repz
filds
add
rcrl
pop
inc
mov
sbb
ja
inc
cli
xor
dec
xor
mov
fcomps
xor
add
lret
mov
or
push
mov
pop
mov
cmp
fcom
test
adc
mov
in
jl
mov
loopne
push
or
adc
push
iret
mov
shll
or
mov
add
adcb
adc
pop
dec
jae
jg
enter
push
mov
movsl
mov
or
sub
mov
push
jae
inc
aaa
aaa
mov
scas
sti
jle
push
icebp
repz
imul
mov
mov
insb
push
ret
mov
mov
pop
aaa
push
and
jne
repnz
xchg
pusha
data16
in
cltd
lea
mov
incl
push
mov
int3
mov
lcall
mov
dec
push
iret
jecxz
xchg
mov
xchg
js
jmp
mov
ja
mov
sub
cmpsl
pop
adc
push
lret
aas
or
xor
mov
push
sbb
mov
push
stos
shlb
fists
test
cmp
jno
data16
adc
lds
xchg
xor
adc
jecxz
sahf
andl
ss
lods
imul
sti
popa
dec
shl
cs
cli
jmp
imul
push
repz
sub
dec
in
jge
std
stos
cmc
imul
mov
mov
cmp
sbb
inc
out
sahf
or
fwait
pop
enter
cwtl
push
shll
and
sbb
out
in
in
sbb
mov
sub
xor
add
and
int
mov
mov
sbb
sbb
and
cltd
call
popa
jecxz
xchg
leave
fists
mov
popf
loop
notb
fnstsw
int
int
inc
aaa
add
aaa
pop
inc
and
int3
daa
sub
or
cmpsl
sbb
xchg
xor
push
popa
out
js
cmp
lahf
in
stos
sbb
inc
stos
mov
or
icebp
cmp
sub
fwait
enter
inc
inc
loop
pop
inc
jo
out
mov
leave
sbb
in
cli
inc
pushf
pop
xchg
fldt
pusha
sti
inc
dec
and
add
repz
cltd
fimull
cmp
in
test
adc
lret
xchg
fnstenv
xor
inc
test
out
or
ljmp
imul
push
pushf
fs
adcb
jno
test
push
lods
add
push
add
inc
jmp
in
mov
sub
mov
mov
aam
lret
adc
in
mov
pushl
pop
jecxz
in
xor
vmwrite
cltd
pusha
outsb
ret
cltd
mov
gs
loop
add
idivb
stos
mov
aaa
mov
out
cmp
add
fdiv
pop
pop
cmp
int3
nop
add
fldt
repnz
mov
mov
jl
lods
pop
test
mov
aas
jne
mov
sbb
jl
xchg
dec
cmpsl
xchg
mov
testb
lock
lods
dec
pusha
push
in
cwtl
xchg
into
leave
mov
sbb
sub
or
sbb
subl
mov
stc
cmp
in
jg
lahf
adc
testb
push
sbb
push
shrb
xor
ficomps
sub
data16
mov
inc
into
jb
and
dec
ja,pt
dec
outsb
rcrb
jge
imul
js
cs
test
jnp
into
dec
sub
or
icebp
jmp
movsb
jbe
xchg
mov
in
adc
push
into
fisubs
sub
cld
pop
popa
inc
stos
sbb
jnp,pt
xlat
incl
fdivs
popa
addr16
rorl
mov
and
jo
rorb
dec
sahf
das
lcall
arpl
lods
pop
es
and
or
xchg
pop
cld
ja
mov
hlt
mov
frstor
push
cmpsb
jmp
movsl
addr16
ljmp
ljmp
dec
xor
out
xor
mov
outsl
add
xor
adc
sub
lcall
rorb
xor
shlb
or
iret
push
pop
out
sbb
loopne
sub
mov
ret
shlb
test
push
fdivrp
sub
or
bound
sbb
loope
cld
fistpl
daa
jge
sbb
cmp
mov
sbb
das
in
rcr
or
lea
jecxz
loope
hlt
sahf
jge
lahf
sbb
lods
addr16
xor
sub
and
lods
outsl
mov
int3
add
movsb
pop
mov
lea
cltd
xchg
jno,pn
aam
mov
lods
repz
push
sub
mov
mov
scas
mov
nop
mov
or
mov
sahf
cmp
sub
sti
in
int
stos
pop
scas
aaa
lahf
pop
mov
cmpsl
mov
aaa
nop
idiv
loop
adc
jo
pop
std
fstl
std
rclb
imul
jle
mov
es
shrl
incl
bound
sub
mov
fisubrl
lods
xchg
push
push
icebp
mov
push
je
repz
push
loopne
sub
adc
xor
pop
push
push
pushf
dec
lcall
mov
xchg
fisttpll
sbb
popa
popa
shrl
daa
xor
pop
addb
lea
stos
sub
mov
xchg
pop
adc
test
and
in
in
mov
cmp
mov
subl
xchg
mov
ljmp
jle
inc
mov
cld
add
sti
push
stos
ja
inc
jb
aas
cmpl
scas
imul
out
out
in
dec
lcall
push
rolb
mov
push
pop
testl
mov
cmp
dec
aam
int3
ror
mov
xlat
and
add
adc
push
fildll
repz
incl
dec
adc
subl
outsb
jecxz
push
ret
mov
shll
push
pop
stc
fs
repnz
iret
add
mov
imul
xlat
jecxz
sbb
and
xchg
dec
add
shlb
mov
jl
mov
jnp
aam
sbb
and
inc
xor
mov
jg
pop
mov
loop
xchg
fcoms
inc
xchg
movl
jl
push
mov
mov
mov
mov
lea
rorl
xor
in
mov
jo
daa
and
add
stos
cmc
sub
imul
sub
inc
jg
mov
xchg
test
inc
pop
ja
add
in
movsl
stos
ds
mov
cmpl
movsl
pop
out
fistpll
or
jno
movsl
mov
scas
push
fldenv
cmp
and
sub
hlt
sbb
pop
outsb
arpl
notb
orb
rorb
mov
mov
pop
bound
sub
int
mov
dec
sbb
imul
pop
test
mov
fnsave
and
into
addr16
out
addb
jno
pop
adc
mov
adc
ret
hlt
xor
mov
cltd
xchg
fsubrl
push
and
jle
test
out
push
shlb
fildl
xlat
adc
insl
or
rorl
cltd
mov
jnp
add
lret
movsl
imul
shll
pop
and
js
sahf
ja
push
aad
xor
stc
dec
sbb
icebp
pop
lods
dec
mov
cmc
adc
bound
mov
push
mov
out
sub
xlat
outsl
leave
scas
push
cmp
sbb
mov
sbb
or
cmp
ja
and
mov
jno
scas
inc
iret
jns
cld
push
mov
lods
sbb
sub
cmp
mov
jnp
sub
pop
cld
sbb
inc
ljmp
push
xchg
fistpl
frstor
ja
out
mov
popf
pop
imul
sub
adc
xchg
push
xchg
outsb
int3
pop
ss
and
push
push
pop
jnp
push
sbb
and
les
jmp
adc
and
repz
shrb
les
fsubrs
fildl
adc
js
mov
push
add
push
aad
or
test
idivl
xor
je
addr16
sub
int3
movsb
out
mov
cmpsl
nop
lea
into
pop
aad
fwait
and
aaa
adc
dec
arpl
pop
jns
adc
xor
pop
js
pushf
test
fstp
xchg
xchg
cwtl
push
ja
push
mov
or
leavew
int3
cltd
shlb
mov
add
inc
jne
cmpsl
lcall
mov
rcrb
xchg
xchg
cli
mov
mov
fists
mov
imul
loopne
mov
sahf
fisubs
cmpl
test
xchg
inc
pop
xchg
lock
outsl
mov
push
fisubs
mov
mov
cli
sbb
test
outsl
gs
xchg
pop
pop
sbb
pop
pop
jg
mov
test
jne
push
icebp
add
jl
cmpsb
adc
mov
sub
ficomps
sbb
lret
sbb
mov
cli
xchg
out
shrb
testb
or
pop
repnz
lret
pop
imull
cmp
jae
cs
mov
test
add
jne
test
aad
fcmovb
in
pop
in
mov
sar
negl
mov
push
mov
bound
ret
jno
daa
aas
jne
push
mov
shlb
jne
mov
mov
adc
push
loop
idiv
xor
push
repz
fwait
outsb
scas
lcall
sub
add
mov
or
rorb
test
out
outsb
sbb
data16
pop
jbe
loop
push
mov
mov
movsl
sbb
lcall
sahf
idivl
sbb
fiaddl
jp
jno
clc
jno
hlt
jecxz
inc
addr16
repnz
inc
push
das
mov
dec
mov
mov
inc
into
dec
or
insb
pop
and
cli
into
pop
cmp
mov
roll
dec
push
stos
mov
dec
push
leave
sahf
push
mov
add
test
mov
in
push
pushl
sbb
sti
jge
jge
jne
jne
into
inc
pop
mov
mov
xor
jns
addr16
ljmp
or
faddl
xchg
out
icebp
imul
mov
nop
cltd
cld
mov
mov
push
sbb
leave
inc
arpl
push
pop
pop
inc
lods
daa
mov
rcl
fildll
jne
imul
lahf
adc
hlt
mov
lds
rolb
jne
xchg
sbbb
mov
jne
and
repnz
out
stos
lret
lea
test
mov
fwait
xor
stos
gs
pop
add
or
and
xchg
mov
aaa
mov
out
and
pushf
inc
arpl
xor
push
shlb
cwtl
and
xlat
dec
cwtl
xchg
das
ret
push
mov
stos
inc
daa
aas
pop
jg
adc
jo
add
lds
add
jg
popf
adc
in
movsl
xchg
sub
sti
imul
ds
clc
push
sbb
add
call
bound
push
iret
push
mov
int3
je
cld
mov
inc
xor
jmp
inc
inc
roll
sbb
enter
or
rorl
jge
sbb
jg
mov
lahf
out
push
daa
sbb
add
add
pop
mov
push
addr16
lock
inc
inc
cli
loopne
add
repz
cmp
xchg
inc
pop
std
or
cld
leave
dec
xor
push
xchg
sbb
push
arpl
sbb
fmull
repz
mov
dec
call
shll
inc
outsb
mov
sahf
ret
fisubl
mov
xor
sub
mov
mov
in
sti
push
enter
ja
pop
stos
in
dec
lahf
fistps
lea
rclb
mov
ljmp
pop
add
xchg
or
call
dec
stos
xchg
sbb
adc
mov
stc
or
iret
sbb
add
icebp
jae
cmp
adc
das
out
sbb
inc
jp
gs
lods
adc
aas
mov
sbb
ret
dec
fstpl
ret
cmc
in
fsincos
out
lea
in
cmp
lods
rcr
xlat
sub
xchg
mov
inc
imul
jo
add
mov
popa
insb
aad
loop
call
sub
rcrb
insl
sbb
lret
psubw
inc
out
shll
lock
ss
sub
insl
push
mov
mov
outsl
jae
adc
and
aaa
pop
or
lock
cld
sahf
lahf
pop
ss
pushf
sbb
insb
mov
lahf
icebp
xchg
jle
mov
adc
movsb
inc
cmc
dec
add
inc
and
sti
jg
lcall
dec
scas
xor
fwait
or
fdivp
scas
add
fs
sub
stos
frstor
mov
inc
mov
imul
js
lods
repz
push
mov
pop
stos
push
xchg
add
cmp
add
mov
aas
adc
pop
sub
out
dec
xchg
fcmovnu
sbb
into
out
cmpsl
xchg
clc
ss
es
loope
jge
push
mov
inc
push
sbb
jp
mov
insl
sbb
mov
addr16
lahf
inc
pop
push
xor
mov
ficoms
stc
setb
out
je
add
imul
push
orb
loope
push
push
cmp
bound
mov
mov
add
out
lods
adc
push
mov
push
xchg
cmp
lcall
and
std
adc
push
fistpll
aaa
jp
fisubl
jb
insb
fcoms
dec
movsb
insb
or
pop
pushf
jo
addr16
call
adc
xor
sahf
push
stc
jns
adc
push
idiv
mov
lcall
inc
jl
sbb
sbb
int
lcall
pop
xchg
les
xor
ljmp
sarb
xor
xchg
into
push
subl
je
loopne
jecxz
xchg
pop
jp
popf
test
mov
fmull
sti
out
and
xchg
ds
sub
jns
jl
or
addl
pop
inc
pop
dec
std
and
mov
stc
xchg
add
int
popa
lds
cmpsl
lahf
mov
ret
addr16
lock
inc
mov
pop
mov
stc
or
pop
data16
add
inc
les
stos
test
addr16
subb
jno
xchg
or
xchg
fdivrl
sub
imul
outsb
cmp
lea
inc
add
xchg
jne
fwait
dec
push
sub
mov
insl
fisubs
lods
mov
pop
cmp
loop
push
jg
cld
and
mov
dec
aam
lods
or
ds
xchg
sbb
or
xchg
lahf
jp
sub
cli
sub
pop
mov
ret
in
inc
inc
lds
cltd
pop
adc
cmpsb
ljmp
push
jecxz
sub
mov
mov
and
fs
stos
xchg
mov
jmp
mov
lock
out
out
dec
push
pop
mov
sbb
pop
orb
insb
jge
insl
jp
push
dec
sahf
pop
daa
imul
ror
out
jns
jno
in
jecxz
mov
adc
fsubrl
inc
mull
leave
sbb
addr16
jmp
pop
rorl
cmp
mov
pop
in
nop
or
push
xchg
leave
loopne
xchg
cli
xchg
xchg
js
stos
stos
or
mov
dec
adc
gs
mov
cmp
repz
push
cmp
pushl
sub
aad
mov
mov
negb
inc
outsb
adc
lods
fcompp
or
mov
sti
imul
iret
xor
call
mov
xor
fiaddl
adc
les
xor
repnz
mov
jno
pushl
jo
cmp
addb
js
fdivrs
inc
mov
push
add
dec
rol
pop
sub
sbb
fdivs
addr16
cltd
pop
jecxz
lods
lcall
inc
push
mov
fnstenv
add
add
mov
dec
sub
and
xchg
adc
sbb
dec
push
imul
outsl
in
ss
pop
xchg
cmpsb
and
js
pop
aas
gs
mov
adc
leave
jge
jmp
xor
adc
lea
sbbb
add
loopne
cmp
sub
add
je
sub
jns
icebp
push
out
cmp
sbb
mov
and
cmp
sbb
arpl
imul
cmpsl
ret
stos
fisttps
xchg
int
push
dec
enter
out
mov
sub
mov
into
rclb
mov
xchg
adc
into
push
mov
mov
xchg
xchg
sti
fwait
into
test
test
fucomp
pop
lea
pop
jae
into
pop
js
adc
xchg
inc
clc
int
pop
aam
push
ja
mov
lock
pop
aad
ret
inc
adc
xor
xorl
push
repz
fst
xor
mov
addr16
stc
addr16
icebp
push
mov
add
mov
shll
or
aad
push
inc
add
inc
repnz
lods
sub
out
or
repz
xor
rolb
rcrl
in
mov
push
repnz
les
mov
mov
push
lods
and
aam
or
pop
mov
fwait
movsl
xor
int3
xchg
sti
mov
insb
mov
ret
xor
xchg
ret
pop
xchg
std
in
aad
adc
out
mov
pop
test
pop
cmp
mov
push
iret
dec
in
jecxz
ret
test
out
inc
mov
inc
pop
pop
cmp
push
push
lcall
aaa
add
pusha
cli
cmpsb
push
cltd
inc
sub
adc
jl
inc
jge
jb
adc
push
test
cltd
enter
or
and
lret
icebp
outsl
lods
push
mov
inc
aas
lea
sub
mov
mov
out
push
adcb
dec
xchg
or
sbb
mov
dec
mov
mov
int3
imulb
sti
add
aas
out
cmpsl
inc
or
insl
push
mov
lea
adc
hlt
insl
cli
and
mov
add
cmc
cmpsb
and
add
in
bnd
jl
sub
ss
push
adc
in
in
in
pop
sti
and
or
sub
jno
cmpsb
in
push
push
cmp
push
xor
mov
push
jmp
iret
mov
lds
cmp
dec
xchg
pop
add
cwtl
sub
pop
pop
mov
cs
jnp
pop
mov
push
mull
clc
imul
stc
pop
and
out
push
adc
lret
xchg
out
scas
adc
jge
fiadds
imul
aaa
or
shrl
imul
pop
fstps
cmp
push
and
add
push
lret
imulb
dec
dec
pop
pop
rol
enter
jb
fisubrl
out
pushf
js
repnz
clc
xchg
mov
push
inc
mov
das
fidivl
ljmp
pushf
cltd
xchg
cmp
inc
sub
int
test
inc
pop
fcoml
bound
sub
mov
shl
lods
push
sub
push
dec
int3
adc
mov
mov
adc
nop
dec
cmc
jnp
xchg
gs
xor
divb
or
push
adc
xlat
out
fistpl
push
movsl
repnz
movsb
push
ds
adc
push
mov
mulb
gs
jnp
push
lock
divb
add
in
xor
dec
or
push
xlat
jae
pop
addr16
lret
into
rcl
leave
aas
addr16
or
stos
cmp
data16
dec
push
cmp
int
pop
push
sbb
dec
int
pusha
and
sbb
dec
and
push
je
add
cmpsb
mov
call
popa
adc
fisubrs
push
mov
es
push
ds
es
add
sarb
cmp
and
cmpsb
jl
in
mov
rclb
stos
outsb
add
repnz
mov
cmp
mov
insl
addl
xchg
sbb
cli
scas
pop
mov
or
nop
ljmp
popa
mov
pop
movsl
inc
hlt
ja
cmp
pop
dec
je
adc
jno
imul
dec
adc
clc
aad
dec
or
sbb
adc
arpl
xchg
push
ret
repz
shlb
das
movl
sbb
out
dec
shlb
jmp
leave
daa
and
sub
or
xor
cltd
jbe
lret
mov
push
lds
icebp
adc
cli
push
inc
out
bound
mov
push
xchg
and
cmp
jecxz
ret
xchg
mov
aam
dec
lret
addr16
pusha
cmp
xor
adc
test
and
mov
nop
lea
or
mov
or
jae
fmull
popl
popf
scas
xchg
push
sbb
xchg
movsl
lods
mov
xrelease
in
cmp
sub
ss
movsl
push
rorb
push
add
xchg
cmpsb
and
rcll
xchg
mov
aaa
addl
shll
or
mov
sti
push
and
dec
cmpsl
outsb
mov
je
and
adc
add
xor
xchg
mov
jbe
fsubl
imul
inc
xlat
jnp
sbb
add
xlat
or
lret
push
add
fnstcw
mov
dec
push
mov
xchg
fnsave
lods
and
stos
sub
jmp
andb
mov
out
das
fsubp
ja
in
sbb
or
mov
test
test
gs
jg
sbb
and
pop
icebp
sbb
orl
aad
xor
jno
rol
mov
mov
les
xorps
xor
xchg
xchg
xchg
dec
push
cmp
lea
xor
xor
add
repnz
data16
pop
mov
mov
imul
and
test
sbb
inc
cltd
adc
pop
addl
mov
cld
add
leave
fnstsw
jae
rorb
cltd
mov
and
xchg
imul
jno
inc
aas
inc
jmp
stc
mov
xlat
push
push
mov
pop
push
addr16
inc
dec
push
dec
xchg
jl
jl
loopne
mov
mov
out
jle
mov
jns
mov
push
stos
jae
rcrb
mov
push
jno
push
les
rcrb
push
mov
fsubs
jb
pop
jge
and
xchg
mov
sahf
inc
xlat
out
fcompl
jmp
fistpl
and
repz
and
xchg
add
test
xor
fbld
shlb
xor
mov
mov
cwtl
xor
mov
bound
mov
push
das
fiadds
adc
pop
mov
mov
cmc
lahf
jnp
sub
xchg
lea
data16
push
pop
dec
popf
loope
cli
adc
cmp
jg
int
pusha
inc
mov
adc
imul
dec
hlt
fiaddl
jb
pop
push
mov
pop
pushw
scas
or
and
mov
pop
or
loop
daa
stos
xchg
inc
and
fs
pushf
cwtl
jg
inc
push
jae
mov
lret
jnp
pusha
daa
pop
and
xchg
stc
add
mov
xchg
std
xor
dec
iret
fcmovnu
das
pop
fs
repz
inc
sub
jecxz
cmp
adc
cltd
and
loop
push
jns
sbbb
test
mulb
push
test
popa
add
bound
xchg
mov
out
cwtl
ret
mov
cli
fs
xor
rolb
mov
cmpsl
out
sahf
push
sbb
jnp
lds
adc
sub
mov
fs
inc
ds
notb
xchg
inc
scas
mov
sub
cmp
push
sbb
and
cmp
push
xor
into
sti
mov
cmp
dec
daa
inc
and
pusha
bound
jb
lds
test
and
fld
es
outsl
xchg
daa
jle
xchg
enter
aas
pop
cld
xchg
jnp
and
sbbl
lock
arpl
jl
test
push
push
mov
xor
mov
jmp
aad
arpl
jmp
xor
dec
lock
cs
aad
inc
inc
xor
fiaddl
std
pop
cs
adc
sti
push
or
mov
rol
dec
fcoml
loopne
imul
inc
push
pop
push
jno
hlt
jb
flds
int
jbe
cmpb
inc
sub
inc
jne
mov
fwait
push
sub
pop
sbb
or
mov
jb
cwtl
stc
adc
mov
inc
test
hlt
pop
sbb
add
add
fwait
xchg
ret
divb
mov
stc
mov
fimuls
xchg
call
inc
hlt
cli
decb
loop
jge
push
addr16
popa
add
xchg
inc
xchg
jns
movsb
mov
mov
or
push
and
mov
cwtl
jecxz
mov
xlat
jno
sbb
les
cmpsl
lret
fcmovu
cld
ret
mov
pusha
push
jecxz
mov
jle
xlat
cmp
jg
lcall
divb
sub
mov
lret
push
mov
adc
sbb
sbb
dec
imul
mov
out
pop
ljmp
iret
sub
js
pop
sub
dec
or
lock
inc
mov
imull
mov
adc
mov
adcl
jg
sarl
leave
mov
outsl
les
insl
lods
cmp
pop
mov
mov
xor
push
leave
pusha
and
lds
daa
outsb
xchg
nop
sub
int3
enter
adc
in
mov
mov
jmp
mov
jg
mov
xorl
adc
in
sbb
jo
subb
int
cmp
sbb
push
mov
outsl
fwait
mov
pop
pusha
push
movsl
pop
cs
icebp
jne
ret
mov
mov
cwtl
outsb
mov
and
sbb
sub
pop
insb
clc
lret
pop
sub
inc
cmp
push
aas
lcall
std
pop
pop
js
and
sub
mov
jb
in
sarb
lods
imul
int
lcall
fcmovnb
imul
or
cmc
popl
dec
test
mov
incb
fs
jne
lret
xchg
pop
mov
into
pushf
mov
repnz
mov
mov
mov
ret
jno
out
xchg
push
in
xchg
pop
xlat
cwtl
push
or
add
mov
lcall
nop
fiadds
call
pop
add
xchg
sub
les
push
sbb
and
cld
je
sub
leave
mov
add
xor
xor
xchg
lea
lock
loopne
repz
and
dec
mov
xchg
or
sub
inc
push
xorl
lret
cld
lods
xor
lods
in
xor
aam
jmp
ja
xchg
sarb
add
vmwrite
jno
jb
pop
add
inc
push
js
gs
push
mov
ret
push
mov
stc
mov
dec
in
or
mov
adc
out
xorb
icebp
push
mov
sub
stc
shl
pop
cwtl
sub
in
or
mov
or
icebp
ds
imul
jle
fdivrs
sbb
inc
enter
out
in
jp
ja
into
incl
sbb
je
mov
or
jne
mov
lcall
cli
mov
loopne
jle
sti
xchg
push
sbb
repnz
cwtl
ja
sub
mov
pop
lock
or
dec
lock
xor
fcompl
dec
in
xor
xchg
pop
clc
add
adc
testb
jno
lods
ja
xchg
in
xchg
aaa
mov
dec
adc
mov
inc
jp
mov
aaa
cmp
ljmp
repnz
add
fs
push
inc
push
insl
iret
lcall
push
arpl
and
cmp
daa
cmpsl
lret
pop
lds
inc
inc
push
mov
jb
pop
pop
lea
adc
fmul
loope
mov
call
scas
sbb
shlb
movsb
jb
mov
int
inc
leave
outsb
cwtl
mov
movsb
js
or
push
xlat
pop
test
out
jb
push
adc
jnp
imulb
sbb
xor
in
cmp
jecxz
popa
jp
jmp
imul
and
push
lret
repz
lret
sarb
ds
movsb
push
sbb
loopne
add
fnsave
push
jecxz
inc
inc
adc
outsl
aam
incl
jecxz
pop
jg
mov
pop
bound
mov
fwait
je
pop
divl
mov
push
das
or
icebp
and
out
aas
xchg
test
xlat
mov
jnp
pop
fwait
roll
mov
arpl
inc
lock
lahf
mov
sub
into
es
popa
sbb
lret
inc
pop
mov
mov
sub
mov
adc
movsl
push
mov
jb
sbb
xchg
mov
insb
jnp
pop
fisubrl
cmp
lock
sub
push
enter
and
arpl
outsb
insb
pop
je
aad
pop
sbb
mov
popa
or
xor
mov
jno
xchg
add
xchg
mov
sub
in
pop
xlat
aaa
xor
pop
push
repz
in
xchg
xor
addr16
sbb
int3
mov
and
popa
mov
pop
rolb
hlt
aas
and
mov
add
dec
jns
leave
aaa
adc
jno
or
fcmove
lret
popa
pop
pop
xlat
sub
jb
jb
push
mov
mov
pop
push
sub
repz
stc
cmp
fidivl
pop
push
ja
aam
add
or
mov
sub
xor
and
xor
inc
add
pusha
and
sahf
or
add
stos
sub
insl
movsb
std
mov
or
arpl
cmp
cwtl
xchg
mov
push
imul
sbb
test
sti
jne
shrb
test
out
inc
aas
push
mov
lret
add
rcrb
or
xchg
cltd
jmp
ret
leave
scas
shl
cld
xor
xorb
pop
and
sbb
jno
bound
stos
dec
outsb
test
xor
jl
lods
in
movsb
out
jns
std
sbb
sub
insb
mov
pop
lods
fsqrt
pop
in
dec
jge
pop
jne
inc
repz
adc
inc
jbe
pop
shlb
xchg
sbb
cmpsl
xchg
cmpsb
jo
pusha
pop
cmp
mov
pushw
xchg
mov
je
adc
imul
pop
jg
sbb
jno
mov
iret
pop
fbld
push
cwtl
inc
cmp
lods
out
fwait
xor
cmp
mov
lret
bnd
xchg
sti
fidivrl
pop
dec
cwtd
xchg
ljmp
cmp
out
arpl
lods
test
add
scas
in
mov
jg
clc
ret
jb
xchg
sbb
adc
mov
int
adc
aas
xchg
add
cli
les
cmp
jae
test
movsl
out
cmp
ss
add
sahf
movsl
aas
cli
fistpl
pop
ret
dec
pop
call
inc
and
mov
adc
jnp
pop
rorw
and
sub
cmpsl
aaa
or
cmc
mov
daa
in
aas
insl
pop
pop
popa
mov
mov
mov
inc
repz
pushf
sbb
imull
xchg
addr16
inc
stc
stos
mov
in
xor
scas
mov
push
xor
das
jge
and
rcll
lds
or
insb
or
lcall
fs
mov
mov
jns
cli
mov
push
movsb
xchg
fcom
sub
mov
cmp
and
xor
cmp
and
fildl
lahf
mov
mov
mov
adc
adc
sub
je
cmp
pop
mov
in
push
jns
out
pop
cmpsb
nop
sbb
mov
xchg
push
sub
pslld
inc
adc
mov
sub
adc
fidivl
loop
push
aaa
push
xchg
adc
push
xor
fildl
xor
pop
movsl
or
stos
lock
or
jbe
sub
js
subl
subb
xchg
sti
mov
add
and
dec
or
or
mov
out
sbb
dec
cmc
dec
pop
sbb
cld
sbb
je
pop
mov
push
rcrl
stos
in
sbb
pop
xor
or
test
jae
or
clc
mov
into
pop
adc
fs
jb
mov
push
sub
imul
not
fidivrs
js
aas
cli
leave
addr16
cmc
shll
mov
popl
insb
out
xchg
pop
je
and
loopne
rcrl
mov
jne
daa
negl
mov
cmpsl
divl
jle
mov
mov
or
mov
pop
sbb
ljmp
dec
sti
sti
cmp
pop
rcr
mov
cs
imul
ret
xchg
lods
pop
int
lock
dec
or
dec
sub
pushf
push
in
test
jo
inc
xor
ljmp
sub
fwait
jmp
imul
sbb
xor
xlat
xchg
inc
subl
bound
test
shl
insl
sbb
push
shl
mov
mul
xchg
push
xchg
push
jns
and
mov
jle
lahf
mov
into
mov
aas
cmp
nop
pushf
sbbb
nop
push
mov
add
mov
push
and
sub
popf
fildl
sub
fstpl
or
push
lds
jo
mov
cltd
out
jecxz
add
push
fidivl
cltd
or
mov
xor
aaa
adc
pop
inc
les
arpl
leave
mov
in
add
inc
jg
xchg
mov
mov
ss
sbb
lcall
cmp
lea
inc
and
aas
int3
xor
cmp
pop
push
mulb
mov
int3
fsub
or
fsubl
ffree
insl
mov
data16
rclb
sbb
mov
and
push
and
xchg
mov
fsubs
outsl
mov
or
push
mov
fbstp
je
xor
hlt
xor
mov
lea
mov
xchg
jl
addl
cmpsl
loope
fs
out
cmpsb
je
add
pop
ja
or
xor
sbb
dec
xchg
mov
mov
ret
fwait
add
push
cld
dec
mov
sbb
mov
decl
test
in
fadds
mov
xlat
int3
in
mov
das
ds
clc
adc
add
adc
mov
xor
or
mov
or
pusha
testb
ret
and
push
push
and
nop
aas
or
push
cmpl
mov
xchg
daa
or
fwait
cltd
icebp
and
je
xchg
add
aam
sahf
je
dec
aad
clc
orb
xchg
or
mov
jg
js
pop
lock
fbld
mov
cld
ret
lcall
iret
into
daa
imul
fbld
testl
mov
xor
add
adc
out
js
pop
mov
sti
lods
dec
lods
xor
xor
jbe
je
pop
add
outsl
dec
leave
mov
sbb
pop
aam
adc
repnz
sbb
jae
or
lods
mov
iret
icebp
mov
lcall
and
iret
pop
std
repz
jl
xor
sahf
imul
mov
cmp
rclb
test
jp
jg
push
sub
scas
repz
push
jae
add
pop
add
pop
int
mov
bound
inc
mov
cmpsl
dec
fdivl
test
test
xlat
adc
fildl
push
mov
cmp
cmp
pop
xchg
dec
jge
inc
or
iret
xchg
and
add
cmpsb
or
fcmovne
pop
cmpsl
and
fsub
sbb
stos
push
shlb
push
cmp
in
xorl
test
xchg
clc
clc
addr16
inc
adc
mov
sub
pusha
lret
cmp
dec
fcomi
insl
mov
pop
cmp
mov
dec
xchg
mov
lock
dec
pusha
jo
mov
sbb
mov
adc
cmpsb
mov
shr
push
dec
mov
dec
cmp
stc
or
jbe
cli
fcoms
cld
adc
inc
out
push
out
push
fs
iret
inc
adc
sbb
leave
sub
cmp
cmpsb
push
pop
mov
and
aaa
out
int3
ret
popa
sahf
dec
sub
std
ret
lea
test
dec
int3
lds
or
push
fisttpl
imul
push
jmp
adc
faddl
inc
ds
cmp
xchg
add
daa
cmp
lods
movl
sub
sbb
shl
mov
jo
loope
cwtl
sub
aad
shl
xorb
cltd
lret
or
outsl
xchg
mov
sahf
xlat
dec
pop
sub
xor
divl
loop
dec
mov
mov
xchg
jns
jmp
and
adc
arpl
adc
popa
adc
fwait
sub
addr16
rcrb
jae
mov
ret
sbb
mov
mov
testb
std
fldenv
or
lds
fdivrs
pop
adc
jp
or
push
xor
mov
hlt
adc
idiv
insb
xor
mov
test
call
ret
ret
mov
scas
cmp
leave
and
xor
neg
lods
ljmp
lahf
xchg
in
mov
out
iret
iret
inc
clc
insb
int
lock
test
xchg
insb
jge
push
jle
pop
adcl
jno
inc
jb
ret
inc
jmp
mov
dec
pop
out
xor
cmp
xchg
push
fnsave
jns
daa
fcmovu
int
cmc
jge
cmp
sub
out
loop
ret
or
movsb
jo
jecxz
adc
scas
mov
cmpsl
add
or
push
xor
loope
mov
pop
test
xchg
xorb
adc
dec
pop
std
push
aas
out
test
je
cli
mov
pop
fsubp
ljmp
jb
out
pop
or
aam
mov
mov
mov
jno
adc
inc
test
add
and
sti
rcrl
add
pop
scas
nop
or
and
repz
sub
stos
fimull
stc
stos
cmc
add
adc
and
int3
test
jp
mov
ficoml
xor
fsubrp
ret
xchg
jae
pop
push
jp
and
push
xor
xchg
data16
cmp
and
nop
mov
push
add
outsl
das
sti
or
lret
js
adc
and
or
bswap
stos
inc
inc
jbe
daa
lds
pusha
xor
dec
or
movsl
and
icebp
mov
sti
fnstsw
xor
test
fdivrl
cmp
outsl
sti
dec
xor
loope
enter
jb
fnstenv
mov
ss
mov
les
push
bswap
push
xor
scas
loopne
cmpsb
arpl
cmp
push
addb
sub
mov
xor
and
out
dec
insb
fildl
cmpsl
pop
lcall
pop
stc
cld
add
fstpt
pop
sbb
mov
test
push
pop
pop
sub
iret
xchg
das
aas
or
repnz
pop
enter
shlb
leave
lods
std
lahf
mov
mov
cltd
das
mov
sub
pop
cmp
jae
cmpsb
mov
mov
test
jmp
and
add
mov
pop
ret
or
aaa
imul
movsl
movl
sbb
loop
and
xchg
push
arpl
int3
xchg
lahf
dec
cmp
lods
pop
test
xchg
or
push
dec
flds
mov
xor
jp
dec
sbb
mov
mov
imul
js
in
inc
js
movsb
std
and
lret
out
mov
clc
mov
sbb
repz
sbb
cmp
scas
adc
aad
and
push
int
fs
mov
dec
stc
fwait
dec
fwait
xchg
dec
dec
loope
fwait
pop
adcb
aam
addl
popa
jns
add
subb
jae
add
jbe
inc
push
push
cmp
cwtl
xchg
jmp
leave
sub
stos
pop
fidivrs
inc
fimull
jg
sti
mov
loopne
out
push
lahf
inc
lock
pop
in
inc
jne
or
push
sbb
add
es
repnz
adc
mov
xchg
ds
mov
dec
cwtl
or
daa
jbe
test
sub
mov
shl
mov
mov
ficoml
mov
or
and
jmp
ret
pop
xor
gs
popa
add
xor
in
mov
iret
aam
fdivr
iret
mov
cmc
mov
xor
mov
fdivl
sbb
fcompl
pop
fucomi
sbb
mov
dec
push
bound
push
pop
xchg
rcll
cmp
push
inc
les
jnp
mov
clc
imul
pop
and
adc
sub
cmpsl
or
cltd
jg
jecxz,pn
xor
orb
mov
push
out
xchg
insb
inc
xor
jo
xchg
sub
fdivs
and
iret
aam
lcall
and
cmp
je
sub
xchg
mov
dec
sti
ljmp
sahf
cltd
mov
icebp
xor
mov
es
pop
int
xor
call
ret
xorl
cmp
les
sbb
sub
push
jecxz
ds
mov
movsb
adc
jmp
shr
imul
cs
ficompl
adc
repnz
lahf
insl
fcomps
sub
cmp
outsl
call
aad
clc
mov
aaa
clc
jge
fimuls
fisubs
ljmp
cli
rorl
stc
rorb
adc
shlb
push
test
test
mov
ds
sub
sti
jecxz
lret
int
adc
insl
in
int3
movsb
mov
or
lahf
ret
es
jae
jnp
push
lock
sbb
mov
xlat
push
jg
push
jecxz
shrl
dec
cmp
out
test
and
and
push
fistpl
clc
cmp
sub
cmpsl
imul
je
push
mov
inc
in
gs
xor
pop
dec
xor
push
jne
call
popf
and
sarl
add
jg
push
insl
scas
adc
stos
push
fisttpl
sbb
mov
sbb
xchg
rcll
push
testl
sti
sahf
pop
sarl
sub
sbb
dec
pop
icebp
jns
dec
fildll
jle
int
pop
cmpsl
scas
push
out
lcall
push
stos
iret
scas
add
loope
in
or
stos
xor
push
cmc
aad
loope
xor
dec
sub
mov
mov
and
shlb
adc
jecxz
add
out
in
shrl
mov
rcrl
push
mov
push
jae
mov
and
gs
push
adc
std
fcoms
push
loope
jmp
imul
pop
inc
popa
adc
pop
mov
and
add
repz
sbb
xorb
xlat
add
fildl
shll
add
test
dec
push
cmp
in
in
jnp
call
xchg
mov
out
jl
pop
lahf
out
stc
int3
daa
ja
jl
adc
jb
test
dec
gs
xchg
ret
cli
outsl
mov
add
xor
mov
mov
adc
ret
adc
cs
push
mov
andl
add
xor
mov
aas
cmpsl
jbe
inc
pop
jo
fcompp
push
nop
shrl
scas
lahf
fsubr
cli
cmpsl
arpl
sub
dec
test
and
mov
jns
fdivs
sub
pop
push
ret
mov
pop
adc
out
ficomps
or
out
mov
jns
pop
scas
aam
mov
pop
lcall
repz
sti
and
and
or
jmp
das
jp
dec
xor
stos
insl
or
pop
dec
test
xor
push
repnz
sub
and
xorb
mov
ficoml
ret
out
jne
xor
arpl
test
aam
or
fidivrl
dec
add
pusha
sub
repz
jmp
mov
std
in
jecxz
lcall
add
stc
dec
ret
pop
xor
or
adc
and
shrl
es
movl
ljmp
mov
mov
pop
out
fstpt
jae
and
and
fwait
mov
dec
mov
addr16
push
hlt
repz
mov
sub
out
mov
testb
mov
adc
enter
jecxz
mov
daa
cmpsl
jmp
ficoml
loop
addr16
lret
dec
or
loop
leave
mov
pop
or
aad
fstl
mov
das
lcall
cmp
sub
xor
adc
hlt
mov
scas
jo
inc
xchg
rcr
out
lock
add
int3
inc
adc
mov
mov
inc
rolb
push
jp
xchg
aaa
pop
dec
inc
jb
iret
or
and
or
and
adcl
xchg
mov
andb
insb
cltd
dec
lahf
ds
push
hlt
popf
push
add
mov
dec
mov
shl
cwtl
and
xchg
push
repnz
loope
ja
lret
and
xchg
or
xor
xlat
jmp
adc
adc
mov
andnps
fsubs
xor
cmp
mov
ljmp
out
or
fldenv
or
xor
ja
xchg
pushf
lea
sbb
gs
jno
in
cmpsl
inc
xchg
scas
jo
mov
push
pop
mov
mov
xor
arpl
add
fcomps
lods
int3
filds
or
jbe
neg
dec
jno
and
aaa
and
addb
push
jnp
jb
fptan
fmull
jno
push
mov
fdivrl
jge
sbb
or
cvtps2pi
adc
dec
ficoms
movsl
jg
das
lcall
daa
mov
jge
ret
push
inc
jge
pop
es
aam
jae
push
dec
out
int
inc
sbb
sbb
cli
inc
lcall
mov
dec
cmp
fsts
cmp
neg
jp
inc
mov
mov
cmp
xchg
mov
ds
dec
outsb
dec
add
out
adc
pop
icebp
or
pop
lahf
shlb
in
rolb
cltd
sbb
mov
push
mov
cmpsl
insl
bound
pop
mov
jno
mov
jae
icebp
popf
cmp
scas
inc
xor
mov
sti
xlat
push
mov
jl
push
imul
add
loopne
pop
or
lret
rolb
mov
cmc
loop
jno
fs
push
lods
jae
loopne
mov
fwait
ret
cmp
inc
mov
jp
xchg
test
mov
pop
sbb
jp
cmp
repz
jo
loopne
pop
out
in
jo
rcrl
dec
dec
push
jp
add
push
or
sarl
shll
cltd
dec
stos
daa
std
push
jl
sbb
pop
cs
sahf
jno
rclb
aaa
inc
add
add
sbbl
movsb
xchg
adc
push
push
jge
test
scas
inc
dec
or
lea
clc
ret
jbe
movsb
and
cld
arpl
fisttpl
push
jbe
fdivl
dec
mov
loopne
or
clc
in
jnp
push
xchg
inc
push
ret
push
xor
add
inc
jp
and
popl
ja
aad
xor
add
shl
xchg
into
in
inc
xor
inc
dec
aaa
mov
push
lret
out
add
mov
aam
idiv
fs
xchg
add
dec
inc
ja
xchg
dec
leave
jle
daa
adc
aas
mov
repz
xor
test
adc
popa
popa
fldt
adc
add
cmpl
rcrl
insl
out
cmp
scas
mov
out
add
call
insb
addr16
xchg
lahf
jo
mov
cmp
cmp
push
push
xchg
dec
out
jb
mov
sbb
cmpsb
mov
pusha
cmp
dec
mov
xchg
mov
adc
rclb
outsb
jne
dec
insl
fdivl
inc
not
pop
pop
push
lea
and
pop
lds
or
pop
sahf
js
sti
jnp
dec
aad
cli
lcall
fists
std
test
cwtl
test
pop
sub
sbb
xor
cmp
pop
sbb
adc
fnsave
dec
insb
cmp
inc
cs
outsl
adc
jmp
scas
adc
mov
cwtl
pop
cli
pop
mov
insl
rolb
cmpsl
add
jge
imul
jge
stc
ss
insl
sub
popa
add
aas
lret
and
mov
fs
setge
add
and
leave
rclb
xchg
push
aas
mov
lcall
and
jnp
cmp
jle
pop
mov
mov
pop
popa
adc
enter
cmc
and
add
fdivs
stos
pop
lahf
dec
icebp
mov
mov
mov
or
push
outsb
lock
mov
mov
pusha
inc
std
xchg
pop
mov
or
lahf
arpl
mov
push
in
in
jg
mov
imul
inc
scas
repz
enter
test
push
out
fldl
and
in
fsubrl
mov
mov
dec
pop
into
adc
clc
and
aas
das
insl
push
jns
sbb
jns
pop
adc
loopne
push
or
mov
je
pop
xchg
cmp
fcomps
shlb
mov
cltd
xchg
xchg
mov
add
push
iret
dec
jbe
js
xchg
sbb
sub
mov
pop
jl
cwtl
mov
mov
adc
cmpsl
mov
pusha
or
dec
mov
pusha
jns
fmull
add
out
cmp
mov
scas
xchg
adc
or
fdivrs
icebp
call
and
adc
jns
bound
or
gs
pusha
cmpsl
pop
ret
mov
xor
lds
push
jp
mov
or
inc
call
dec
stc
and
add
rclb
cmp
xor
repnz
or
push
xorb
fimuls
dec
cs
cmpsl
mov
lods
jmp
xchg
in
push
lcall
dec
jo
or
test
hlt
dec
mov
push
imul
xor
fdivl
insl
dec
dec
xchg
fadds
lret
sbb
shr
lcall
mov
mov
out
into
jne
cmp
xchg
and
jno
dec
and
loopne
cltd
aad
shrl
imul
xchg
mov
insl
fisubrl
xlat
pop
shrb
or
stc
fbld
dec
cs
sbb
lahf
mov
std
sub
shl
pop
js
stos
mov
cmpsl
push
sahf
adc
mov
jl
cld
imul
aad
add
loop
jb
adc
mov
pushf
roll
shr
push
jmp
cmp
inc
loope
lds
movsl
in
loope
push
and
shr
sbb
imulb
mov
js
fcomip
mov
inc
outsl
jns
push
imul
cmp
jg
jbe
cwtl
or
in
adcl
aas
rcl
bound
inc
or
xorl
cmp
mov
and
daa
or
xlat
adc
mov
sub
push
dec
sti
loop
fucomp
xor
jb
and
mul
push
push
and
ret
stos
shrb
ss
or
fisubs
or
push
dec
dec
jnp
pushf
je
and
fidivrs
jae
mov
push
lods
shrb
jne
in
stos
mov
fbstp
pop
stos
xor
sbb
mov
hlt
jle
icebp
mov
push
mov
xchg
es
addr16
fdivrs
push
in
ret
andl
ds
and
in
out
inc
adc
or
adc
mov
cwtl
in
leave
pop
xorl
aad
sahf
pop
scas
inc
dec
dec
fstps
mov
sub
push
test
add
and
inc
test
xchg
jne
and
mov
push
into
mov
adc
movsl
hlt
push
das
and
and
mov
out
sub
das
pop
and
push
and
pushf
push
nop
add
mov
shll
ds
cmp
inc
cli
inc
push
inc
and
cmpl
dec
sbb
gs
mov
lcall
push
add
lds
push
add
dec
mov
push
cmpsl
lahf
sub
sti
ds
insl
mov
xor
adc
mov
stc
fidivl
xchg
ljmp
jo
ds
add
scas
in
push
fwait
mov
jbe
lea
mov
in
mov
mov
sbb
rep
das
movl
jle
xchg
xor
cld
sbb
jbe
push
sub
mov
cmpl
fmulp
jecxz
xchg
stos
mov
push
push
je
and
les
xor
push
or
ljmp
cs
mov
imul
aam
jmp
aas
mov
in
xchg
lcall
xchg
dec
gs
fidivl
clc
inc
jb
adc
add
enter
clc
sbb
enter
ja
xchg
ret
push
lock
mov
cmpsl
dec
icebp
sub
int3
push
rorb
sarl
or
jbe
cld
or
cli
bound
add
mov
lea
jnp
fldlg2
mov
outsb
leave
xchg
xchg
cmp
inc
js
and
icebp
pushf
jb
in
cmp
adcl
outsb
push
cmpsb
xor
inc
jbe
add
gs
divb
sti
xor
xor
lods
add
in
scas
imul
inc
popa
nop
dec
test
or
sbb
scas
jg
inc
pushf
scas
xlat
add
das
pop
loopne
dec
es
push
cmp
out
pop
jg
sahf
push
shlb
fcmovbe
hlt
xor
mov
leave
inc
mov
test
adcl
push
ja
test
aaa
jecxz
xor
jne
pop
shll
xchg
popf
mov
cmp
mov
lods
push
arpl
and
mov
daa
jl
mov
pop
leave
add
sti
repnz
jp
cwtl
in
iret
xchg
les
daa
mov
cmp
sub
mov
adc
decl
out
mov
adc
add
mov
xchg
stos
repz
cmp
mov
jne
or
test
adc
call
imul
pusha
adc
dec
or
adc
adc
outsl
or
add
outsl
in
leave
cmp
out
cmp
push
testl
scas
std
movsb
mov
mov
or
jae
not
mov
test
test
pop
ds
push
int3
jns
push
in
mov
jg
testl
or
test
sub
add
xor
sbb
loopne
xchg
mov
inc
dec
rcrl
pop
mov
cmp
rorl
lods
dec
lods
call
and
xchg
in
lret
xchg
xor
cmp
jo
mov
gs
leave
fisttpll
sub
cltd
sub
sub
daa
mov
add
cwtl
inc
jb
mov
lcall
mov
pop
bound
outsb
ljmp
xchg
out
pop
int
jle
mov
fistl
adc
or
sbb
rol
push
pusha
test
call
ljmp
jg
sbbb
push
xchg
decl
cmp
jge
ds
mov
xchg
dec
mov
pop
mov
mov
fiaddl
push
dec
cld
pop
andl
enter
and
lcall
xlat
mov
jp
mov
ret
fstpt
push
push
lods
cli
xor
mov
inc
dec
adc
xchg
pop
pushl
adc
xchg
pop
lahf
jae
int3
arpl
sar
addr16
shll
add
fs
roll
and
insb
mov
popf
ja
pop
nop
sar
and
jge
sahf
mov
test
jg
cmp
add
or
sub
pop
mov
xlat
aam
xchg
inc
fcompl
jns
and
icebp
lock
mov
inc
pusha
pop
pop
sbb
test
or
xor
mov
pushf
and
push
cmp
rclb
jg
inc
inc
xor
xchg
jne
les
and
idivb
pcmpgtd
repnz
push
push
inc
repz
xor
mov
add
or
scas
repz
jbe
xor
bound
lock
and
jo
shll
fnstenv
shl
orl
sarb
mov
add
aas
into
insl
mov
xchg
mov
jo
lods
jae
push
mov
mov
insl
or
xor
js
push
inc
xchg
pop
pop
cmp
mov
mov
inc
mov
in
mov
imul
in
sbb
jle
repz
out
imulb
jne
ffreep
cmc
add
subb
jno
inc
loop
stos
outsl
push
fadds
into
enter
xchg
cs
inc
mov
test
lret
or
dec
jl
cmpsb
push
shll
jp
xchg
test
out
mov
test
cwtl
mov
xchg
xor
cwtl
mov
lcall
pop
sub
ds
dec
mov
bound
add
or
out
dec
or
sub
inc
dec
arpl
aam
cwtl
jbe
push
push
jle
fwait
pop
mov
mov
xchg
arpl
mov
or
insl
and
out
push
xchg
inc
in
repz
cmp
es
dec
or
dec
push
fidivrs
js
je
sti
gs
orl
mov
sbb
ss
xorb
dec
or
mov
sti
adc
cli
fnstcw
repnz
mov
mov
popl
pop
fs
mov
clc
dec
mov
sub
and
loopne
fdivl
sub
enter
rorl
and
mov
fsubl
pop
or
cltd
xor
pop
andb
mov
jmp
mulb
jnp
lock
jb
imul
lea
loop
sbb
pop
mov
andb
or
shlb
out
test
call
fisubrs
push
fwait
jge
jl
cmp
fsubrl
pushf
iret
mov
or
pop
pop
lds
adc
jae
pop
lods
xchg
imul
cltd
or
mov
add
sarl
sub
push
lret
aaa
inc
cmp
jno
mov
iret
sbb
aaa
adc
push
xorb
shll
outsl
mov
or
lock
jmp
test
xor
mov
in
and
or
and
and
stos
fldl
pushf
incl
int
pop
into
fs
fwait
and
mov
adc
pop
clc
fimull
cmp
jmp
add
xchg
test
add
pop
or
or
mov
jae
rcll
into
adc
fcmovbe
xchg
js
cld
das
in
and
jo
push
aas
test
shlb
or
push
lods
jp
mov
jp
int3
dec
pushl
cmc
add
inc
shl
mov
movsl
icebp
mov
cltd
sbb
cmc
add
outsl
out
lahf
push
vpshad
jp
and
clc
mov
mov
out
sbb
imul
mov
add
push
das
xchg
mov
add
xor
jmp
pop
xchg
test
daa
jmp
or
outsl
add
imul
gs
daa
lret
bound
int3
test
pop
ret
jl
lea
pop
add
stos
cmpl
sbb
mov
stos
push
mov
adc
mov
xchg
pop
inc
mov
in
jge
pop
xchg
push
mov
int
dec
stos
xchg
pusha
mov
rclb
sbb
dec
add
ficoms
sbb
pop
pop
xor
xchg
cmpb
dec
lock
cmc
pop
jmp
mov
stos
bound
lods
movsl
jbe
lock
mov
cmpsl
mov
mov
jecxz
sbb
outsb
xchg
test
inc
clc
popa
dec
mov
aam
cmpsl
repnz
divb
push
jbe
inc
je
lds
lds
lds
mov
xchg
iret
mov
xchg
fidivl
jle
cld
pavgw
pop
pop
jne
mov
bound
outsb
pushf
pushf
mov
int3
aad
insb
and
out
lret
aas
and
maxps
add
pop
int
clc
mov
andb
fidivrl
cli
push
adc
outsb
push
dec
divl
xchg
mov
add
mov
push
sub
inc
sbbl
enter
aas
xor
orb
call
xlat
sub
aaa
ret
add
repz
jb
jno
mov
iret
or
cld
lds
sbb
xchg
inc
sub
push
repz
roll
fsts
fisttpl
xchg
add
push
inc
push
enter
loope
xor
jns
jmp
jns
popa
icebp
jle
idiv
shrl
hlt
gs
or
xor
pop
xchg
add
in
dec
adc
addr16
stos
cmp
mov
ljmp
ret
addb
xlat
cltd
add
push
aam
mov
xor
inc
sub
push
loopne
int
jb
or
sbb
cmp
repnz
xor
add
lods
dec
test
mov
mov
sub
sbb
cmc
push
and
xor
dec
rcl
sub
std
cmp
push
stos
loopne
repnz
mov
push
cmp
sub
sub
bound
int
jne
mov
cmc
repnz
adcb
rol
mov
push
adc
and
and
mov
sub
or
jnp
movsb
inc
xchg
fwait
jge
pop
fsubrs
push
and
jmp
aaa
cmp
jle
pop
pushf
and
jp
lods
sti
lret
mov
mov
inc
xor
clc
inc
push
arpl
jne
mov
mov
out
inc
xchg
mov
mov
add
jb
loop
or
sbb
pop
add
sbb
insb
sub
mov
jo
test
cmpsl
sub
mov
loopne
icebp
mov
aaa
fsubl
pop
pop
ficomps
mov
add
cmp
cmpsb
mov
or
cltd
test
repnz
push
out
pop
mov
test
outsl
inc
push
addr16
push
icebp
xor
hlt
scas
int3
mov
cs
shl
inc
mov
repz
cmp
hlt
stos
mov
jecxz
aaa
sub
cmc
push
scas
test
daa
sbb
loop
pop
push
xchg
xchg
mov
sbb
mov
addb
test
mov
adc
subb
loope
xchg
dec
inc
aaa
jge
xchg
and
inc
inc
cwtl
pop
addb
lea
dec
jno
jo
cmp
test
xchg
das
loope
aad
test
mov
jae
shl
iret
scas
sub
or
popf
add
mov
jmp
adc
call
cmp
inc
leave
icebp
push
fildl
inc
mov
mov
or
ds
push
rclb
in
in
bound
pop
pop
fists
fnstenv
je
je
leave
mov
inc
mov
mov
mov
rcr
and
pop
call
es
ret
in
xchg
sub
cmp
pop
ja
and
in
mov
fwait
push
push
dec
pusha
imul
and
cmpsl
push
jp
out
ds
flds
cmp
cmp
stos
jae
push
lds
mov
addr16
insb
cmp
and
clc
lret
mull
mov
jl
out
mov
mov
mov
mov
popa
arpl
mov
mov
lods
mov
sub
push
aas
ret
mov
lcall
pop
ljmp
push
mov
outsl
mov
xor
stos
fdivs
mov
lods
lcall
mov
shr
cmp
cmp
jl
inc
mov
dec
les
int
push
dec
shlb
or
jmp
dec
fcmovbe
in
pop
dec
add
mov
aaa
push
or
bound
sbbl
adc
gs
inc
pop
addl
adc
mov
cmp
icebp
mov
or
shll
push
xchg
aaa
fwait
dec
xchg
pop
cmc
xlat
mov
xchg
xorl
push
fnstsw
xor
cmp
scas
out
cmpsl
out
mov
sub
add
test
loopne
dec
repnz
sbb
push
ss
cmpsl
cmpsb
lods
jb
cwtl
bound
and
jmp
cmp
mov
insl
cmpsb
movsl
cmp
aaa
dec
cltd
out
loopne
lret
or
ss
jle
mov
or
fcmove
popf
sbb
pop
or
mov
loop
fisttpll
or
and
lea
iret
int
test
pop
int3
lods
je
mov
scas
pusha
and
loop
divl
jl
or
cwtl
mov
sbb
adc
mov
icebp
mov
js
push
into
add
ljmp
icebp
pushf
add
clc
jp
sub
jge
xlat
cld
loope
inc
or
add
push
adc
mov
icebp
test
out
in
lcall
adc
push
inc
test
sti
das
mov
mov
sub
cs
out
test
lahf
inc
mov
sbb
mov
pop
mov
jecxz
aad
push
xlat
sub
mov
aaa
adc
in
cmc
insl
inc
stos
cmpl
mov
mov
testb
xadd
push
in
fidivrl
loop
in
mov
jbe
adc
sbb
mov
mov
sub
xorb
and
mov
mov
xlat
pop
cmp
cmp
fwait
lods
lret
test
movsb
repz
ja
jle
fwait
cwtl
addl
pop
mov
adc
push
loopne
push
pop
dec
push
sbb
pusha
out
nopl
inc
mov
mov
mov
lret
stos
push
arpl
inc
aaa
inc
jle
cmc
mov
sub
sub
sahf
push
mov
test
pop
mov
das
std
jns
dec
xor
das
inc
fidivrl
nop
rclb
aad
pushf
aam
outsb
pushl
decl
push
scas
jno
push
push
cmp
outsb
mov
fistpll
pop
mov
inc
xor
or
mov
mov
inc
inc
je
or
std
add
aad
cld
push
adc
out
jb
and
pop
ljmp
xor
pop
inc
mov
push
mov
xchg
cmp
popf
push
decl
add
movsl
outsl
ret
ret
ret
xchg
mov
aaa
inc
aam
dec
and
xor
lcall
jmp
or
nop
xor
dec
push
push
ss
test
test
stos
fdiv
jl
and
insb
das
std
mov
jge
mov
cli
lds
jle
das
pop
mov
imul
mov
out
sub
or
dec
dec
mov
ljmp
fildl
test
xchg
in
mov
cmp
in
lds
dec
in
gs
sbb
clc
jnp
xchg
and
dec
scas
xor
push
or
nop
iret
fsubs
jp
clc
into
inc
add
sub
mov
ljmp
pop
vmwrite
cmc
pop
adc
aaa
call
cmp
jg
std
je
cmp
shrb
xchg
lods
xchg
lret
bound
jno
dec
jl
push
jae
iret
pop
mov
jae
repz
sbb
push
mov
js
fstl
jns
cmpsl
dec
mov
cmpsl
adc
dec
movsl
rorl
or
mov
sub
movsl
adc
sub
cmpsl
addr16
jbe
repnz
pushf
ret
and
dec
mov
pop
stos
push
push
mov
leave
ja
xor
mov
lods
mov
sbb
loop
and
stos
xchg
sub
addl
jne
rorl
pop
sub
pop
fcomps
mov
aam
loope
and
xchg
xorl
inc
popa
aad
mov
divb
push
testl
sub
xchg
fwait
mov
add
and
pop
pop
sbb
mov
out
shll
push
daa
add
push
xor
mov
cwtl
lds
imul
jns
cmp
cmp
sahf
addr16
arpl
mov
xchg
test
ret
shr
inc
dec
adc
shlb
cmp
cmp
movsl
lods
leave
int3
cmpsl
cmp
lods
dec
mov
and
test
fcmovne
mov
cmpsb
daa
pusha
push
mov
adc
out
inc
xchg
mov
loope
vpmaxsw
sub
fstpl
jns
out
mov
xor
mov
rclb
push
stos
xchg
jb
aas
jo
dec
sahf
in
mov
popa
insl
mov
mov
lcall
lds
test
cmp
or
mov
xlat
ds
mov
movsb
test
lea
mov
into
cmpsl
data16
dec
mov
lret
imul
icebp
cs
mov
cmpsl
adc
addr16
in
into
push
ficoms
mov
lea
mov
mov
push
sbb
lahf
shl
add
ss
or
mov
mov
pusha
xchg
push
out
pop
icebp
aas
add
nop
adc
loope
and
sahf
dec
jae
cli
push
jae
mov
mov
in
xchg
ror
mov
sti
xor
enter
or
xchg
and
stc
jne
movsl
test
mov
adc
jmp
or
test
jnp
in
mov
and
out
push
scas
icebp
imul
jmp
dec
int
xor
test
aas
cmp
cmpsl
mulb
decl
xchg
adc
jle
dec
jmp
jl
cld
mov
arpl
ds
ja
mov
sub
movsl
loop
push
roll
mov
pop
dec
mov
push
loope
bound
vandps
xchg
leave
cmpsl
jnp
fisubrl
and
or
inc
sahf
mov
or
xor
lock
fisubl
jmp
cld
pushf
push
sarb
xchg
mov
fidivl
pop
push
cltd
ret
pop
in
mov
mov
and
mov
lock
jg
or
adcb
pop
mov
or
cli
aas
add
and
sub
adc
in
int3
icebp
jne
jmp
sbb
xchg
dec
xchg
lods
mov
pop
add
int3
push
jbe
xor
push
dec
xchg
in
xorl
faddl
xor
jb
and
pushf
lods
pop
cmp
cmp
jnp
xlat
cld
ljmp
stos
xchg
mov
pop
push
xor
cld
cmp
cmpb
fwait
lods
in
adc
inc
ss
insb
cmc
or
pop
mov
fldt
fcomip
sub
sub
push
lret
mov
punpckhbw
stc
dec
shll
enter
mov
lcall
fcomps
mov
mov
xchg
bound
nop
and
call
mov
negb
call
xor
cltd
stos
fistpll
push
lods
ss
loop
dec
push
sbb
lret
xchg
mov
or
xchg
inc
xchg
inc
ffreep
push
mov
xor
pop
pop
popf
xchg
enter
sbb
shlb
cltd
movl
dec
fisttps
pop
imul
loope
clc
cmpsl
sub
cld
and
mov
scas
xchg
add
cmp
dec
xlat
mov
and
pusha
jge
mov
push
jmp
push
push
mov
inc
sbb
es
out
stc
jl
adc
or
cmp
fimuls
mov
mov
iret
ret
pop
inc
aas
xchg
jg
and
repnz
push
call
jno
fstl
add
inc
shll
adc
and
and
xchg
mov
xor
cmpsl
int3
pop
out
and
adc
jmp
arpl
lds
sbb
fwait
and
pop
xchg
adc
aaa
aad
xlat
push
js
outsl
out
xchg
or
sub
test
scas
das
jbe
in
mov
iret
xor
adc
stos
andb
out
cmpsb
sbb
jae
xor
mov
xchg
pop
dec
xchg
hlt
or
cwtl
pop
mov
cmpsb
push
adc
dec
es
pop
xchg
shlb
cmp
xor
inc
ds
out
pop
sub
jno
xorb
insl
dec
and
jmp
mov
mov
sub
mov
jae
ret
test
pop
inc
and
cmp
push
cmp
jp
call
mov
inc
mov
lret
dec
pop
jno
ja
xchg
arpl
lods
aaa
ja
or
adc
pop
out
or
mov
add
es
xor
adc
aam
jb
leave
dec
and
sti
test
cwtl
popa
daa
lahf
out
pop
pop
pop
sbb
int3
lds
xor
xchg
jne
enter
daa
fwait
mov
jns
loopne
push
scas
sbb
lret
or
fdivr
aaa
mov
push
out
adc
out
cmp
inc
fldcw
jo
imul
sahf
mov
mov
jle
or
fst
xchg
push
dec
mov
inc
repnz
loop
cwtl
add
sti
pop
out
sti
mov
and
call
add
mov
lds
out
jnp
xor
mov
int3
in
pop
loop
gs
mov
add
xchg
jle
sub
leave
js
cli
addr16
inc
and
aam
mov
and
das
in
mov
mov
dec
pop
sub
fwait
scas
loopne
xorl
jecxz
jle
jmp
xor
fistps
jg
nop
xor
pop
xor
inc
cmp
lea
rcrl
mov
jge
mov
sbb
or
repnz
ficompl
push
xchg
jl
lret
repnz
pushaw
aam
jge
loop
mov
in
inc
dec
dec
pop
cmc
xchg
imul
aad
xor
or
push
inc
mov
lret
mov
shl
inc
jbe
jecxz
std
lods
sahf
lahf
lods
push
int
cmp
push
addr16
xchg
sbb
out
sub
dec
shr
pop
imul
sub
popf
loope
dec
lds
mov
cwtl
mov
hlt
mov
or
and
mov
adc
ficoms
or
and
dec
insb
sbb
add
push
cmp
in
dec
sbb
pushl
push
add
sbb
mov
or
mov
mov
flds
ja
sbb
push
add
sbb
jnp
fcmove
lret
mov
ss
daa
mov
adc
pop
loopne,pt
xor
push
pop
sbbb
push
cmp
sahf
mov
sub
stos
sahf
mov
jbe
loope
dec
outsb
out
xchg
jmp
rcrb
push
pop
in
incb
mov
int3
hlt
dec
idiv
xchg
push
push
test
push
jno
cmpb
sahf
and
cmp
test
in
movsb
mov
ljmp
xchg
jns
fidivrl
dec
pop
andb
outsb
imul
fbld
out
icebp
jmp
gs
xchg
adc
pop
fwait
mov
pop
or
or
ja
and
subl
cltd
xchg
mov
inc
jno
div
pop
idiv
cmp
jp
ficomps
aad
jl
xor
out
jg
sbb
repnz
popa
mov
adc
lods
xchg
fmuls
xlat
xchg
mov
fstpl
js
add
test
push
addr16
mov
mov
add
clc
test
inc
loope
or
pop
or
sub
xor
bnd
insb
xchg
dec
sub
xchg
cmc
shll
push
dec
cmpsl
jp
jb
xchg
subl
int
dec
pop
stos
or
inc
hlt
add
mov
rcrb
mov
ja
push
popa
mov
mov
jae
lods
or
dec
mov
jb
mov
push
stc
lds
xchg
dec
lea
repz
test
xor
push
dec
push
sbb
in
jecxz
test
int
inc
sbb
mov
mov
ss
in
xlat
jo
jge
sbb
and
fbstp
cmp
out
movsb
push
push
xor
bound
mov
fstpt
push
jno
jl
adc
fists
mov
add
cwtl
es
shrb
inc
jae
cmp
or
adcl
adc
inc
xchg
mov
xor
sbb
outsb
or
mov
out
movsb
mov
xor
addr16
addr16
inc
push
dec
mov
insb
std
dec
loop
shlb
mov
push
jbe
jbe
sarl
insl
push
lods
adc
xorb
jmp
xchg
and
lds
movsl
mov
lea
stc
push
add
fdivrl
out
adc
scas
loopne
pop
add
mov
addr16
push
gs
fimull
xor
xchg
mov
in
inc
mov
push
cs
outsb
jns
and
lods
sti
jns
xchg
jo
xchg
outsb
pop
dec
pop
lret
or
mov
cmp
scas
and
stos
dec
fadds
mov
rolb
cmp
aad
add
movsl
lret
loop
stc
mov
push
push
negb
jae
cmpsb
stc
push
ret
and
iret
pop
into
std
or
outsb
mov
cs
sub
add
fstps
jnp
or
clc
pushf
push
inc
adcl
xorl
jne
dec
outsb
movsb
ret
ret
mov
mov
in
fnstsw
mov
aaa
cmp
ret
test
loop
jmp
pop
mov
push
xchg
xchg
stos
mov
scas
popf
outsb
jecxz
add
mov
les
xor
xor
add
add
daa
addl
xor
sbb
cs
popf
xchg
push
pop
call
mov
rorb
jecxz
or
aam
hlt
scas
movd
add
aaa
ss
dec
jge
cmc
add
call
mov
popf
sbb
or
cmp
test
notb
mov
jbe
outsb
in
and
divb
imul
xor
into
les
ljmp
mov
mov
aad
ss
clc
sub
hlt
movsb
mov
jbe
shrl
jo
adc
mov
in
js
sbb
mov
mov
fnstsw
cmp
jne
pop
loope
xchg
mov
cltd
lret
inc
fwait
push
cmp
sbb
cld
jle
jne
mov
pop
stos
push
jne
and
and
mov
loop
cmp
or
inc
push
mov
adc
mov
andb
mov
cmp
mov
lock
fimuls
mov
add
cmp
or
pushf
fwait
jae
adc
xchg
aaa
lds
mov
mov
es
inc
mov
movl
int3
bound
shlb
sub
mov
int
out
out
mov
lea
mov
mov
inc
ds
push
add
cld
dec
das
iret
movsb
cmc
mov
mov
sub
leave
fldenv
js
and
add
roll
cs
mov
mov
mov
inc
leave
add
cltd
jle
push
mov
cmp
loope
notl
dec
mov
mov
ja
push
jl
mov
sub
popa
jb
arpl
xchg
adc
data16
mov
xchg
xor
std
sub
jns
lods
lods
xor
arpl
or
push
lret
loopne
pop
cld
bsf
jns
jnp
jp
dec
sbb
ljmp
add
in
cmpsl
sarb
test
cmpsl
add
call
int3
enter
mov
mov
cmp
outsb
stos
sti
call
xlat
adc
sub
ss
mov
and
mov
sub
xchg
rolb
hlt
loopne
lret
mov
lret
push
loopne
xorl
ret
add
fmuls
cld
out
mov
pop
fldt
arpl
es
pop
add
sti
cwtl
mov
and
dec
hlt
sar
stos
or
pop
icebp
dec
iret
scas
or
push
js
stos
pop
sbb
js
fdivrl
mov
repz
scas
add
mov
and
outsl
scas
inc
fsts
pop
inc
push
lea
mov
rolb
idivl
sub
dec
add
insl
push
inc
mov
bound
push
fnstenv
sbb
fildll
sub
add
ret
mov
es
mov
mov
cmc
xor
lods
push
pop
add
xchg
enter
mov
int
sbb
xor
imul
subl
popf
sarl
push
add
push
sub
and
add
xlat
push
movsl
ret
outsb
lods
mov
sbb
cmp
test
js
xchg
lods
enter
mov
push
add
push
jl
fwait
out
mov
lock
jle
stc
xchg
fidivl
icebp
clc
inc
lock
push
xor
pop
das
into
jae
push
ftst
pusha
addb
fwait
cmp
in
cmp
mov
add
sub
xor
aam
in
push
pop
test
push
push
movsb
sub
int
dec
xlat
inc
xchg
jo
inc
in
jae
mov
daa
aam
sub
mov
lea
mov
mov
loope
lcall
test
fstpt
lea
iret
test
jne
out
pop
adc
popa
ficoml
pop
jp
div
jge
jmp
fisubrs
and
fwait
jmp
pop
loopne
test
inc
fs
stc
mov
dec
xorl
push
jl
in
push
or
loopne
cmp
jp
repnz
sub
add
fcmovnu
mov
sbb
xchg
loop
pop
dec
imul
into
jmp
adcl
pminsw
pop
mov
jb
aaa
or
lea
ffree
mov
and
dec
or
lret
into
add
sub
cwtl
jbe
es
int
icebp
sub
jmp
out
push
xor
sbb
and
add
pop
std
cltd
test
pop
lods
std
enter
fildll
sub
add
adc
and
jg
or
jge
jl
dec
sbb
xchg
pop
jns
stos
pop
jno
andb
add
shl
mov
dec
cmpb
pop
shl
bound
adc
pop
mov
mov
sub
pop
mov
pop
test
cmp
outsb
inc
xchg
xor
repnz
dec
xlat
scas
add
fldenv
int
sub
push
iret
es
add
pop
pop
mov
push
imul
sub
jl
ja
add
ljmp
test
enter
mov
das
add
cmp
out
stos
aas
outsl
or
add
iret
jb
enter
frstor
in
lock
decb
push
xchg
je
mov
aaa
pushl
mov
ja
stos
add
pop
xchg
xor
push
js
dec
call
enter
mov
push
xlat
insl
ror
out
movsl
das
pop
hlt
adc
lret
lea
mov
lahf
push
sti
lcall
mov
sbb
adc
repz
cs
or
xchg
filds
les
aad
loope
iret
out
jle
or
in
pusha
mov
pushf
into
mov
and
enter
mov
ret
mov
scas
subb
stc
lahf
outsl
push
jb
fs
dec
imul
in
test
xor
and
push
cmpsb
or
mov
pop
rcll
lods
mov
mov
pushf
sub
out
std
sub
iret
mov
add
mov
push
xchg
mov
lret
aad
sahf
push
sbb
std
mov
pop
xor
pop
add
int3
inc
shlb
outsb
cmp
pop
loope
or
inc
fcmove
imul
sub
xchg
xchg
jae
jp
dec
rcrb
nop
cmp
lock
lcall
in
int
cltd
xor
pop
lods
pop
push
xchg
dec
adc
out
js
and
repz
gs
lea
cmp
adc
fldenv
adc
scas
aaa
scas
int
fiadds
pushf
push
rol
pushf
pop
lods
scas
cmp
inc
jle
xchg
push
pop
insl
xor
test
ds
mov
mov
rcrl
sbb
je
xchg
mov
lcall
sbb
out
or
fbstp
test
enter
dec
add
int
popa
jno
add
lahf
cld
adc
scas
lods
xor
push
les
mov
aaa
jbe
mov
insl
mov
imul
arpl
in
dec
insb
inc
and
sbb
imul
xor
add
out
gs
jbe
lods
ficomps
and
jae
dec
enter
jecxz
jnp
cmpsl
sbbb
les
jb
sbb
out
loop
arpl
ss
xchg
adc
xor
sub
mov
xor
and
sarb
or
iret
ss
mov
sub
frstor
lret
mov
repnz
shlb
dec
sbb
xchg
std
pop
lahf
mov
std
xchg
pop
add
add
cmp
mov
add
push
add
and
sub
push
fildll
mov
pop
xor
dec
xor
stos
into
lahf
push
push
dec
imul
lods
fcom
shrl
stos
fucomip
gs
dec
insb
test
jge
mov
inc
into
cmpsl
lcall
sub
idivl
and
aas
xchg
loopne
lret
xor
cltd
ss
and
sbbb
bound
jge
in
sub
ds
fcompp
inc
pop
das
xor
push
jle
incl
jbe
xchg
nop
add
pop
add
sub
mov
cmp
adc
xchg
std
lods
inc
lret
jno
es
mov
sbbb
pop
mov
aaa
loop
pushf
shr
aad
sub
dec
cltd
push
jbe
inc
nop
or
outsb
cmp
pop
inc
jo
xor
xchg
lahf
rcrl
icebp
repz
mov
fdivl
pop
pop
jge
dec
push
int
fldt
add
lods
sahf
adc
add
mov
bound
in
cli
test
inc
xchg
repnz
pop
pushf
cwtl
add
sub
push
insl
in
and
lods
jno
inc
inc
mov
test
orb
fidivrs
arpl
cmp
mov
ret
cmp
icebp
and
test
mov
imull
test
mov
xlat
bound
rolb
sub
addr16
adc
out
dec
or
mov
pop
pop
cs
sbb
mov
mov
daa
adc
push
jecxz
inc
mov
stos
jo
jns
push
or
les
nop
dec
mov
fs
iret
inc
dec
enter
adc
test
popa
pop
fs
xor
lods
cmpsl
xchg
mov
jbe
outsl
stos
mov
mov
sbb
inc
stos
dec
pop
lds
shrl
xor
ret
add
cmpsb
sbb
xor
xor
mov
pushf
push
jo
or
jnp
add
add
mov
xor
repz
pop
scas
mov
fldenv
jg
sub
loope
push
xor
call
dec
test
shl
mov
fnstsw
loope
adc
jmp
lcall
dec
and
cmovne
inc
iret
ds
xor
outsl
mov
popa
das
popf
adc
push
add
and
movsb
fimuls
test
mov
cmpsb
adc
cmpsl
jo
push
cmp
bound
in
lcall
mov
cld
xor
lea
faddl
aam
sbb
cmp
les
bound
addr16
and
adc
loop
popa
xchg
or
test
mov
push
pop
mov
mov
pop
lret
insb
mov
dec
xchg
negb
sub
and
in
adc
mov
sbb
ljmp
fimuls
das
pop
or
aas
mov
pop
into
arpl
ret
sub
add
adc
aam
aad
jle
adc
sbb
and
mov
inc
into
ret
push
inc
outsl
sarb
sti
in
ljmp
in
push
cmp
xorl
int3
adc
inc
testl
test
jl
mov
imulb
mov
adc
repz
fmul
cmpl
out
enter
xor
jmp
movsb
dec
shl
cmp
mov
in
jns
jg
pop
push
xor
repnz
cmpl
push
cmpsb
shlb
mov
mov
inc
clc
hlt
int3
jmp
xchg
roll
fnop
jmp
ret
cmpsl
pop
mulb
adc
sub
pop
out
jecxz
in
decb
and
xor
pop
dec
push
mov
jecxz
call
lods
aas
dec
adc
fdivrp
jne
fstpt
outsl
adc
fldcw
or
dec
jno
fistps
sbb
orl
sbb
or
jmp
mov
addr16
stos
in
jle
and
xor
hlt
cmp
inc
lods
sbb
loopne
movsb
add
jecxz
std
aaa
add
fnsave
jl
loopne
sti
jge
lods
inc
sub
pop
shlb
adc
cmc
xchg
jp
xlat
cwtl
imul
xor
dec
jge
or
sbb
sub
dec
pop
mov
adc
xchg
push
js
int3
ja
ret
dec
jl
loopne
sbb
dec
xchg
sub
pop
sub
push
nop
outsb
mov
lods
sub
arpl
clc
jg
add
sub
cld
ret
fwait
mov
add
push
sub
inc
lds
data16
mov
daa
popa
inc
inc
test
mov
scas
into
cmc
je
mov
pop
fiaddl
add
mov
cmp
push
mov
push
adc
pop
cmpsb
fildll
scas
in
ret
nop
in
xchg
movl
rorl
lods
pop
push
cmp
jecxz
cmp
cmp
sbb
int
rcl
push
inc
pop
iret
out
adc
xchg
fwait
lahf
gs
mov
sbb
addr16
sub
sti
adc
xlat
push
cli
loop
cmp
fsubrl
cvtpi2ps
test
pop
test
imul
pusha
push
call
clc
inc
jge
xchg
add
cmp
pushf
loope
cli
adc
inc
andb
pop
idivb
jmp
imul
fmuls
xor
push
les
inc
fwait
jge
pop
xchg
in
mov
int
mov
andl
lea
and
je
cmp
es
in
pushf
andl
sti
dec
and
pop
gs
andb
xchg
aad
test
dec
in
cwtl
les
add
outsl
popf
sti
xchg
jmp
jnp
rclb
add
sbb
test
jo
dec
lret
pushf
push
ja
nop
movsl
hlt
sub
stc
mov
xor
add
loopne
rolb
insb
sbb
shrl
vmread
sbb
insl
lods
push
std
xor
loop
cmpsl
sbb
sub
mov
adc
aas
push
addr16
xchg
imul
les
inc
lods
cli
loope
and
xor
inc
arpl
cmpsl
push
repnz
xchg
mov
in
adc
call
xchg
jmp
std
pop
xchg
in
mov
int3
push
lret
lods
lods
inc
and
ja
xchg
sbb
dec
or
popf
lock
ja
cmp
mov
push
pop
pop
jo
imulb
xchg
xor
and
add
sbb
call
push
rcr
sub
mov
adc
nop
or
loop
repz
out
or
roll
cmc
cli
int
pop
cltd
test
cmp
push
jae
xor
movb
adc
pop
mov
and
faddl
add
and
pop
inc
adc
jne
test
fmull
mov
inc
mov
lret
rcl
xlat
and
loopw
rcll
cmpsb
inc
sti
jo
or
xor
mov
inc
mov
out
mov
out
ds
and
cmpb
pop
js
rcl
addr16
sub
popa
push
push
in
mov
sti
call
mov
addr16
lds
xor
aad
push
lret
adc
rcrl
scas
jb
js
sar
lret
xchg
jmp
cmp
cmpsl
mov
push
outsb
aas
cmp
dec
and
jg
cltd
add
call
in
xchg
pop
lcall
int3
pcmpeqw
adc
cwtl
hlt
cmp
xchg
prefetch
add
int3
inc
sub
cmp
imul
orb
int3
mov
lds
ds
jbe
repz
adc
push
dec
lds
push
inc
sub
add
pop
jp
sbb
inc
push
fistl
sub
xchg
jbe
cs
js
into
xchg
inc
cmc
push
jne
sbb
mov
adcb
mov
and
cmpsl
push
and
outsl
xchg
loop
into
pop
add
mov
mov
push
sub
mov
push
lea
pop
jge
mov
int
das
sbb
add
xchg
loop
scas
lods
push
mov
mov
outsb
jle
arpl
lret
sub
repz
movsb
jae
or
jg
call
mov
cmp
pop
sub
cmp
stos
pop
add
loopne
out
cld
inc
push
mov
test
add
mov
and
pop
xor
sub
out
stos
add
fistl
sti
out
xchg
andb
push
cmp
or
addr16
sub
jecxz
mov
cmp
addr16
xchg
lods
inc
stc
mov
sti
jnp
lods
out
adc
xor
cmp
xchg
je
push
push
clc
or
or
cld
mov
jns
ja
test
inc
enter
dec
mov
dec
xchg
subl
or
lock
in
les
clc
or
mov
mov
inc
push
jg
mov
cmp
cmp
push
fstpl
xlat
mov
add
inc
mov
imul
and
in
or
call
push
jge
and
scas
lods
insl
mov
pop
xor
and
jl
icebp
rcr
jecxz
repz
in
mov
inc
xor
xchg
movsl
pop
push
fmulp
jb
dec
aam
mov
fcomps
inc
repnz
fwait
add
les
js
in
mov
jbe
scas
inc
fildll
lods
pop
std
stos
lods
push
insl
insl
popf
shrl
sub
test
or
mov
mov
notb
pop
jne
jns
jmp
sub
push
repnz
xor
ds
sub
icebp
rorb
add
adc
inc
insl
test
imul
jo
out
int
or
imul
cmp
dec
ljmp
xchg
mov
push
cmp
cmp
enter
shlb
std
push
and
es
dec
fldcw
int3
adc
das
cmp
inc
and
mov
rcrb
push
test
jp
testl
std
push
fiaddl
out
mov
xor
jp
mov
pop
cmp
aas
fwait
xchg
out
test
outsb
mov
lret
sahf
hlt
dec
add
xlat
popf
push
mov
lods
ljmp
cmpsb
sbb
shrb
inc
sbb
sti
addr16
int
add
and
ja
xchg
mov
pop
mov
cltd
mov
mov
das
sub
sub
mov
je
gs
mov
jg
add
and
in
dec
mov
rol
sub
mov
xor
pop
cmp
pop
pop
push
mov
ja
add
or
in
mov
repnz
je
jnp
push
sti
mov
add
push
inc
and
call
test
dec
push
or
lods
aas
xchg
adc
mov
out
cmp
xchg
jg
sahf
cmp
xchg
sub
rcll
mov
push
negl
xlat
faddl
push
imul
stc
or
repnz
jae
out
xor
testb
adc
jl
jae
js
mov
adc
push
sbb
or
jmp
xlat
pop
add
js
rol
mov
jo
pusha
jbe
inc
mov
mov
cltd
in
jge
mov
inc
xor
fldenv
sub
insl
scas
or
cmpsb
mov
gs
shrl
mov
push
or
mov
cmp
mov
lahf
and
sbb
testl
mov
ss
insl
int
call
mov
and
fisubrs
jmp
imul
dec
xchg
add
add
bound
and
call
leave
negl
loop
sbb
push
pop
push
or
add
aam
ljmp
js
das
adc
mov
test
push
dec
push
sahf
ffree
movsl
mov
daa
push
pop
rcrb
icebp
dec
inc
sub
repnz
sti
add
jne
or
cmpsb
cmp
arpl
push
and
loop
mov
mov
add
mov
mov
movsb
stc
mov
enter
jecxz
cld
xchg
add
dec
dec
jmp
pop
cmova
jg
pusha
and
mov
insl
data16
imul
mov
mov
jge
pushf
ds
mov
cmpsl
shl
dec
xchg
and
cmp
cli
test
out
and
push
and
push
mov
shll
into
imul
xor
pop
dec
lahf
xchg
es
push
ret
xchg
sahf
xchg
rorl
lea
gs
jecxz
sub
inc
stos
imul
or
jbe
xor
mov
push
xchg
stos
insb
jmp
out
xor
or
popa
aaa
adc
outsb
inc
pushf
dec
fadds
or
orb
outsb
xor
rcrb
cwtl
adc
xchg
ret
xchg
xor
shrl
int
mov
push
in
ja
xor
or
sub
sbb
add
pop
pop
mov
mov
fidivrs
fdivs
mov
adc
in
pop
int
cltd
je
add
mov
scas
inc
push
dec
push
mov
mov
fcompl
cwtl
mov
stos
mov
xchg
cmpsb
add
and
out
pushf
jne
mov
pop
jb
xchg
add
sub
push
cmp
es
fwait
adc
rcr
mov
mov
push
add
insb
fidivrl
cmp
aad
scas
scas
lea
call
test
fistl
enter
mov
je
cld
inc
dec
out
test
aas
sub
mov
insb
stc
aas
or
cmpsb
sub
aas
popa
in
cmpsb
mov
clc
rorb
addb
cmp
mov
push
add
adc
movsl
xor
dec
arpl
jp
data16
fwait
cmp
fnstenv
loop
inc
push
fists
jmp
lds
es
addr16
xchg
sub
xchg
test
sbb
sti
gs
add
xchg
das
imul
jb
lods
xor
ds
cmpsl
adc
in
mov
or
add
inc
inc
rclb
jo
dec
mov
insb
or
das
fwait
jmp
mov
xchg
sbb
repnz
out
mov
popf
cltd
movlps
pop
lret
lods
shrb
es
jns
cmp
mov
test
mov
sbb
enter
cmp
aaa
and
mov
push
inc
pop
jb
enter
rol
jmp
packsswb
pop
and
out
pop
xor
xchg
xchg
movsl
and
divl
in
add
jl
jmp
inc
sub
cs
bound
movsb
leave
aaa
pop
push
flds
movswl
push
mov
pop
cmpsb
popf
fnsave
or
mov
push
jmp
push
dec
lret
lock
ds
sarl
fisubrs
subl
inc
mov
mov
cmpsb
fmul
push
jno
push
cmpsl
lret
jnp
push
inc
lods
imulb
lea
jne
popf
jb
dec
mov
loop
test
pop
sub
movsl
pop
ret
xlat
dec
jnp
jg
and
mov
je
je
jmp
push
ljmp
dec
mov
fstps
mov
push
xchg
fcoml
xchg
ret
mov
nop
jo
jno
lahf
mov
mulb
dec
in
daa
adc
add
sub
push
push
pop
add
push
repz
or
int
adc
sbb
or
jg
pop
pop
xor
xchg
adc
push
mov
sbb
in
add
sub
inc
sahf
cwtl
ljmp
cmp
test
das
push
push
stos
addr16
mov
cmpsl
insb
and
mov
pop
mov
adc
xorl
xor
mov
jge
jl
fisubl
mov
mov
sbb
dec
mov
aam
push
clc
popa
sub
test
scas
push
xlat
imul
ja
jle
xchg
cmp
rolb
mov
cmp
rcrb
into
dec
in
jecxz
pushf
stos
lcall
imul
leave
cmp
std
push
stos
out
dec
pop
xor
in
ret
rdmsr
aam
fldt
es
stc
std
xlat
mov
mov
and
sti
fs
aad
in
inc
or
mov
mov
int3
rorl
xor
int
adc
mov
xor
pop
mov
mov
cmpsb
inc
push
add
sub
xchg
repz
dec
arpl
push
mov
adc
test
add
into
mov
jns
push
sbb
adc
or
xor
or
jo
pop
out
cmc
ret
negb
lods
dec
or
iret
push
das
scas
nop
inc
push
pop
add
cwtl
xor
lret
xchg
cwtl
mov
push
push
iret
dec
addr16
imulb
nop
movb
arpl
jae
pop
aaa
push
inc
addb
adc
out
imul
pop
pop
movsl
bound
push
icebp
iret
jae
and
mov
xchg
out
mov
inc
mov
push
lock
dec
ja
ss
clc
stos
jg
xor
adc
inc
jg
pop
sub
sbb
repz
testl
mov
adcb
movsl
std
cmp
sub
loop
outsb
hlt
push
push
cltd
roll
cltd
mov
pop
inc
or
pop
mov
pusha
dec
cmp
mov
testb
das
pusha
inc
or
xor
pop
pop
rcl
xchg
nop
rcrl
out
data16
aad
out
mov
sti
and
fcomp
xlat
ss
arpl
test
shrb
xchg
mov
test
arpl
dec
shl
push
js
int3
subb
mov
test
xchg
sti
fs
je
popa
lahf
inc
aaa
insl
stc
pop
lods
cltd
inc
sbb
dec
push
div
dec
mov
jle
fisubl
clc
rclb
mov
out
insb
sbb
imul
jb
mov
hlt
dec
in
inc
mov
mov
inc
adc
dec
push
int3
xor
fwait
cmpsb
jl
sub
inc
std
mov
xor
pop
shrb
mov
xor
fdivs
nop
pop
and
and
dec
shlb
mov
push
pop
aam
in
ds
xchg
loope
loopne
or
mov
movsb
mov
fwait
incb
pop
pop
or
xor
pop
xor
push
sub
iret
fcomi
sti
add
cs
lret
adc
push
add
xchg
cmp
cmc
xor
cmpsb
vpbroadcastb
sub
lock
sbb
in
cwtl
pop
xchg
testl
ret
add
aaa
fucomi
mov
xchg
test
push
jns
jecxz
cmp
push
xor
addb
add
push
sub
inc
push
sti
push
ret
adc
repnz
inc
lds
pop
addr16
mov
pop
or
and
and
dec
ret
test
lods
xchg
stc
cmp
dec
lock
mov
cmc
je
pushf
sub
aam
jp
or
movsb
nop
icebp
jb
push
mov
lret
mov
ja
out
jecxz
imull
aas
scas
out
adc
je
movd
jecxz
test
mov
int
fcompl
mov
and
push
mov
or
negb
mov
jl
out
sbb
jns
loopne
mov
gs
test
ja
or
clc
scas
mov
lret
std
inc
rolb
or
gs
scas
mov
mov
xchg
cmc
jae
mov
ljmp
push
bound
out
sbb
mov
push
mov
addr16
loopne
cli
mov
adc
jge
out
cld
jp
mov
pop
cmp
addr16
mov
jl
xchg
insb
or
mov
scas
cmp
aas
mov
movsb
and
mov
addb
mov
into
mov
arpl
fsubrl
in
mov
add
cmp
loope
fisubs
mov
mov
testb
enter
and
outsl
mov
loopne
add
push
gs
scas
ss
sub
and
in
and
dec
add
movsb
lock
inc
popa
cmp
sarl
xlat
xchg
xlat
sbb
imul
jmp
jb
xor
push
jmp
enter
push
xchg
test
andb
jne
mov
iret
fwait
xchg
pop
lcall
jno
xchg
or
orb
test
aad
push
xlat
enter
rolb
test
xchg
sbb
pop
xchg
inc
fs
out
sbb
in
jnp
or
cli
add
sub
daa
dec
shlb
jae
scas
jae
push
pop
insl
jle
test
sub
xchg
outsl
in
add
insb
imul
iret
stos
mov
sub
push
bnd
les
lahf
or
mov
xor
iret
inc
xchg
push
bnd
push
push
jb
test
fs
andl
lcall
dec
cmpsb
and
dec
lret
jnp
mov
cld
pop
mov
xchg
mov
out
sbb
sbb
sub
les
xchg
pop
push
fiaddl
fidivs
push
inc
popf
faddl
push
sbb
push
in
stc
cmpsl
push
push
and
xor
and
cwtl
push
aad
sub
lcall
sbb
shl
inc
xchg
and
pop
adc
mov
leave
dec
pop
xchg
jo
movsl
dec
mov
movsl
add
into
iret
subb
fwait
xchg
rol
outsl
mov
ljmp
cld
xor
leave
imul
loopne
mov
dec
leave
push
pop
nop
mov
push
cld
push
mov
shl
xchg
cmp
test
inc
push
push
mov
inc
mov
xlat
insl
xchg
ss
das
xor
xchg
cmp
cmp
test
dec
xor
inc
iret
mov
and
out
push
and
mov
pop
lea
lret
pop
jecxz
out
dec
jns
lahf
mov
push
mov
adc
sub
outsl
pop
mov
cmp
jl
outsb
or
add
xor
sub
out
sbb
sbb
ja
mov
cmp
test
or
inc
jnp
shl
mov
inc
scas
mov
and
jb
cwtl
or
repz
mov
mov
stc
mov
cmp
dec
sbb
insb
xor
sbb
push
mov
xchg
or
mov
test
fdivrp
push
je
leave
mov
mov
xchg
fwait
std
mov
out
cmp
mov
lret
std
sbb
das
push
test
in
inc
leave
dec
cltd
or
mov
cmp
xchg
or
mov
or
xchg
test
sbb
xor
push
inc
dec
xor
lret
ret
stos
lods
aad
mov
lcall
inc
or
dec
rcl
cmp
repz
cltd
rcrl
jae
adc
jae
and
das
push
adc
push
add
cmc
sbb
test
mov
inc
bound
shrl
dec
push
or
cmp
inc
out
mov
add
dec
shrl
sub
clc
in
or
aad
lahf
pop
ds
sbbb
sbb
sbb
dec
cmpsl
xlat
ja
dec
decl
outsb
inc
popf
pusha
lock
es
stos
out
xor
push
scas
aas
ret
inc
fldenv
jg
push
lds
mov
mov
mov
push
cld
pusha
pop
ret
out
imul
jo
xor
mov
jp
or
std
mov
mov
icebp
mov
inc
mov
repz
xor
pop
xor
std
and
push
or
aaa
jle
jo
fidivs
aam
or
popa
push
pop
in
dec
lret
mov
fwait
dec
icebp
or
rclb
add
xchg
cld
pop
adc
mov
aam
imul
andb
lds
and
pop
ds
rolb
and
push
add
jne
sub
ret
pop
push
lret
mov
or
push
push
stos
add
clc
sub
inc
sahf
mov
mov
inc
xchg
sbb
imull
xchg
adc
mov
test
mov
dec
or
xlat
cld
cwtl
pop
jns
pop
call
add
push
hlt
push
xchg
sbb
in
adc
pop
pop
mov
lcall
jo
in
push
call
jp
ss
insb
les
aas
mov
add
jno
cmp
xlat
stos
xor
jp
pushf
loope
fwait
add
dec
cmp
addr16
lea
leave
daa
int3
push
jl
out
push
dec
shlb
cmp
or
jecxz
into
dec
inc
jns
repz
push
fstpl
dec
fmulp
xchg
mov
je
cmp
push
repz
sub
data16
push
push
pop
and
stos
inc
imul
daa
sbb
xor
sbbl
iret
xchg
iret
andl
pop
in
sbb
cwtl
dec
push
xchg
sbb
out
rolb
stc
loopne
mov
dec
call
outsb
mov
addr16
cmc
in
stos
xor
xchg
pop
fdivs
inc
push
inc
mov
pop
xchg
lret
fs
fdiv
sbb
or
xor
rcrb
mov
or
xor
adc
into
xchg
mov
add
andl
in
adc
fidivs
loop
stos
sti
sti
pop
outsl
test
cltd
sbb
jb
xlat
mov
sub
outsl
add
mov
imulb
cpuid
xchg
or
jp
cmp
sbb
daa
xor
xchg
mov
add
and
std
mov
aam
ret
fsubrs
xchg
mov
negl
xor
push
outsl
and
sbbl
jne
fildll
push
and
jae
xor
repnz
loopne
stc
mov
jno
or
xchg
shlb
inc
cmp
fdivl
movsb
sub
add
out
ficoms
in
pop
dec
sbb
xor
cli
std
push
xchg
mov
pushf
icebp
ret
bnd
fmul
mov
or
mov
out
nop
loop
fwait
cmc
popa
insb
sahf
idiv
lods
test
popf
call
jns
repnz
lea
inc
jp
loope
or
pop
and
jb
cmp
jecxz
jnp
dec
cld
out
fsubrs
pop
es
jmp
add
out
insl
pop
mov
iret
sub
ds
dec
outsl
add
push
inc
mov
sbbb
push
int3
pop
imul
js
sahf
sub
rcr
gs
fmull
ljmp
or
scas
dec
xchg
adc
mov
xor
cmpb
fildll
xchg
popf
nop
sbb
enter
mov
and
popl
adc
cmc
test
mov
mov
mov
mov
cltd
mov
fnsave
cli
cmc
add
cmc
push
movsl
in
mov
pop
lds
adc
jnp
xor
bound
mov
or
cmpsl
ret
sub
or
test
lcall
mov
xor
adc
lds
mov
enter
pop
xchg
xchg
adcl
mov
jns
mov
adc
jne
mov
fmul
inc
xchg
mov
dec
popa
cmp
xchg
jno
lret
call
push
pop
sub
mov
test
adc
sahf
les
mov
out
pop
push
mov
cmp
xchg
aam
mov
stc
mov
out
pushf
mov
dec
push
out
cmpsl
or
adc
sbb
push
inc
std
lods
pop
ds
jbe
mov
inc
xorb
push
fisubrl
jbe
cmpsl
adc
mov
mov
mov
cli
mov
push
inc
pushf
jbe
push
les
mov
test
shll
lods
out
cmp
cld
adc
add
mov
inc
add
push
push
sub
addl
mov
mov
push
imul
movsl
pop
shl
pop
adc
pop
mov
push
cmp
and
mov
out
cmp
lds
inc
adc
cmc
lret
push
gs
ret
int3
cmpsl
clc
mov
cli
mov
xor
mov
into
lods
fdiv
mov
or
fistps
or
push
mov
dec
imulb
ds
sti
jno
insl
lret
test
adc
or
stos
iret
jmp
aaa
add
je
and
push
pop
dec
add
pop
pop
mov
sti
adc
lds
and
sbb
pop
in
jnp
cs
je
push
inc
mov
imulb
popa
popa
dec
pop
add
repz
andb
mov
jge
lock
push
roll
lds
xlat
adc
jno
inc
pop
enter
xchg
xchg
and
add
mov
mov
rcll
sbb
jo
dec
leave
idivb
bound
ret
xchg
and
lahf
aas
scas
push
and
iret
cmp
mov
sarb
loope
pop
add
inc
stos
xor
jae
ror
or
popa
or
push
out
mov
push
dec
or
inc
stc
pop
pusha
ss
ljmp
xor
and
inc
pushf
ds
mov
mov
shll
sub
lods
dec
roll
jno
sub
add
gs
adc
push
mov
ror
xor
xor
mov
push
dec
out
mov
mov
mov
mov
in
iret
fcmovne
movsb
into
inc
lods
xchg
test
iret
push
notb
adc
es
mov
cmpsl
jno
enter
jne
les
mov
repnz
shrd
and
add
aaa
lcall
scas
mov
test
out
sarb
mov
pop
xor
out
fdivl
das
lods
jg
call
push
push
fabs
xchg
ret
push
or
jns
icebp
std
out
sub
dec
mov
into
xor
or
add
sahf
shlb
xor
mov
mov
popf
mov
idivb
rcl
frstor
hlt
les
push
jae
mov
mov
pop
fsubrp
popf
mov
mov
insb
repnz
in
push
cmp
lahf
cmpl
scas
jg
push
mov
test
dec
adc
icebp
lock
repz
fnstenv
clc
push
inc
nop
jb
inc
pop
cltd
push
lahf
loop
les
jmp
call
outsl
mov
sub
mov
inc
mov
in
test
notb
cltd
add
push
lods
pop
mov
repz
popa
aas
sub
mov
je
sti
int3
sbb
and
xor
test
fcompl
xor
or
dec
je
aaa
push
inc
jnp
repz
mov
loopne
cmp
movsb
cmp
add
fwait
stc
mov
test
aad
mov
pushf
push
sbb
inc
dec
hlt
xlat
test
stos
lcall
add
sbb
mov
adc
leave
xlat
jle
arpl
mov
addb
sti
xchg
loop
aad
scas
mov
and
mov
dec
mov
adc
push
dec
jmp
jns
push
xor
lret
mov
ja
rcrb
and
cmc
loope
mov
sub
insl
insb
cmc
inc
push
shll
xchg
popa
mov
jo
inc
lea
pop
clc
lcall
lea
out
dec
sbb
adc
sahf
iret
mov
sub
mov
repnz
xchg
xor
push
mov
cld
jne
int3
cs
adc
inc
nop
cs
aam
mov
jmp
popf
sbb
stos
mov
fwait
cmc
adc
add
insl
mov
nop
xchg
aaa
shl
cltd
ss
clc
cmp
mov
mov
xchg
jo,pt
add
jno
sbbb
dec
cmp
pop
xor
test
iret
adc
inc
jge
jns
movsb
sbbl
cmp
inc
adc
movsl
cmpsb
sbb
pop
pop
ret
fisubl
dec
pop
or
jecxz
jle
dec
movsl
xchg
insb
bswap
pop
scas
or
fmuls
addl
out
shlb
mov
cli
pop
xchg
cmpsl
out
jnp
jb
xlat
bnd
pop
leave
fmul
sub
insl
adc
cmp
adc
mov
movsb
cmp
adc
jge
outsb
and
adc
xor
das
or
inc
orl
adc
inc
mov
js
stos
jg
xor
movsl
shrl
mov
lret
mov
xchg
cld
pop
pop
lea
xchg
cmp
inc
push
jp
xor
fimull
mov
jge
mov
aaa
lds
bound
push
outsl
cmp
or
dec
lahf
or
leave
gs
mov
jb
xlat
mov
inc
adc
push
cwtl
pop
int3
repnz
inc
or
pusha
xor
fimuls
jbe
xor
ror
jno
sbb
push
aam
push
mov
jno
cwtl
daa
sub
push
cld
ret
jno
loope,pn
fisttpll
xchg
subl
imul
add
test
sarb
cmp
int3
xchg
push
lahf
outsb
iret
push
inc
and
jle
push
xlat
push
xor
ja
cmp
lock
mov
repz
pushf
inc
add
rcr
sbbl
mov
fisttps
push
inc
leave
sbb
add
cmpsl
xor
mov
test
mov
aam
outsl
sub
jmp
mov
ret
outsb
mov
xchg
dec
inc
roll
sbb
out
jle
orb
adc
lds
sub
jae
scas
fcmovnb
fdivrl
cmc
mov
cmpsb
mov
pop
cmpsb
cli
cmpsl
in
push
xor
xor
xor
mov
sub
call
filds
inc
mov
fldcw
js
cmc
fidivs
dec
cli
bound
cmovnp
jbe
jle
icebp
dec
fdivs
sub
ljmp
popa
out
shrl
dec
out
cltd
jnp
outsb
xchg
mov
call
es
cs
mov
cs
sbb
xor
notb
inc
xchg
or
fwait
pop
mov
pop
add
mov
mov
pusha
xor
or
orl
ds
add
js
and
loope
sub
imul
xchg
xor
mov
jl
lods
test
iret
and
inc
or
pop
inc
lds
dec
sub
inc
or
add
lods
cmp
imul
test
test
outsb
pop
addb
aad
ja
dec
lret
out
cmp
andl
adc
and
fcomip
lret
cs
push
movsl
mov
ja
fbstp
adc
data16
dec
or
or
adc
adc
fwait
sub
aas
mov
jg
in
aaa
jmp
pop
jl
jo
jnp
add
daa
inc
cmp
ja
push
hlt
fs
insw
into
jo
sub
dec
fsts
cmc
cmp
push
inc
lret
jge
andl
add
or
lea
in
and
dec
stos
push
gs
aas
lahf
lret
cmp
cwtl
les
cltd
mov
jo
sbb
push
repnz
andb
xchg
cmp
dec
es
iret
les
push
pop
divl
movsl
gs
xor
fcomps
out
icebp
pop
xor
ficoml
cmp
addr16
les
cmp
sub
pop
or
push
pop
xor
pushf
popf
pusha
pop
jns
rcll
movsb
sarb
dec
hlt
sub
test
aad
xor
pop
iret
and
add
gs
or
scas
sub
pop
mov
inc
notl
sbb
jl
mov
repz
stos
aam
ss
pop
xor
lahf
add
or
push
xchg
out
es
loopne
mov
ds
pusha
jecxz
mov
xchg
and
lds
cwtl
stos
insb
lea
add
hlt
or
xchg
fnstenv
in
dec
dec
lcall
imul
sti
in
xlat
pusha
xor
cmc
dec
xor
fnsave
loope
dec
frstor
lahf
bnd
ss
or
mov
xorb
pop
data16
inc
xchg
or
in
jmp
aad
bound
mov
xchg
leave
mov
lock
out
inc
push
sbb
adc
add
arpl
aas
jle
lret
repnz
mov
js
mov
test
std
or
cmc
loope
xlat
shr
adc
mov
ss
leave
in
push
fxam
or
call
loope
pop
pop
mov
mov
lods
xchg
xchg
shr
stc
push
cmc
xorl
and
sbb
sbb
add
xor
popa
bound
ss
cmp
notb
xchg
in
ja
out
and
test
push
jecxz
dec
sub
and
lea
stc
xor
in
cmp
arpl
imul
mov
test
es
aad
js
out
xchg
mov
dec
dec
xor
xor
jmp
in
daa
mov
xor
cli
cmp
fmull
lahf
inc
add
xlat
inc
mov
or
cwtl
sbb
fistl
adc
mov
pop
in
mov
popa
sub
or
addr16
dec
cmpsb
pop
xchg
popf
push
in
int3
mov
leave
fs
cmp
daa
mov
movsl
das
repnz
jmp
adc
lahf
jne
cwtl
sbb
imulb
xor
test
in
dec
or
pop
cmp
cltd
pop
xchg
repnz
push
ja
push
iret
adc
push
mov
cltd
xor
fcoms
push
xchg
mov
inc
mov
mov
orb
jne
mov
mov
add
loopne
leave
cmc
fsubrl
rcrl
sbb
fcoms
repnz
inc
jl
mov
andl
sbb
pop
xor
std
push
push
xlat
js
adc
pop
repnz
repz
or
inc
adc
loope
repz
adc
movsb
and
xchg
loopne
mov
pop
dec
jg
lods
xchg
cmpsb
ret
je
dec
repz
jnp
out
scas
add
jne
daa
push
mov
es
push
pop
inc
test
or
sarb
cmp
cltd
jns
xor
rcll
adc
push
sub
hlt
je
je
aam
lods
pop
addr16
imul
or
mov
lds
pusha
push
xor
pusha
adc
push
and
out
out
in
xor
std
dec
dec
push
xlat
sbb
call
push
mov
roll
xchg
sbb
cmpsb
in
dec
out
je
clc
jnp
rorl
clc
jle
push
ffreep
sub
and
xor
repz
cltd
adc
aaa
test
testb
aam
adc
cmc
scas
in
in
xor
cltd
lea
mov
mov
mov
roll
ja
sub
or
in
mov
cmp
mov
int3
js
inc
sub
nop
lock
inc
movsb
nop
lds
jnp
pop
inc
loope
and
rcrl
push
xchg
or
addr16
mov
fstps
xor
cmp
shlb
inc
xlat
outsb
push
or
ja
xchg
cmp
lahf
dec
jbe
andb
fwait
push
add
or
sbb
pushf
mov
sub
pop
testb
dec
xchg
or
add
imul
movsl
pushf
cmpsb
lcall
dec
movsb
clc
subl
mov
mov
mov
or
and
out
repnz
lods
gs
mov
addr16
jle
repnz
jns
adc
xor
stc
lock
sub
inc
cmp
lds
mov
cmp
xchg
fidivrs
cmp
push
mov
orb
fidivs
inc
xor
pop
sub
test
mov
call
push
dec
enter
bound
pop
sub
lock
xchg
push
dec
add
mov
lods
ret
push
call
test
mov
mov
push
xchg
cwtl
fcoms
sahf
xchg
and
push
sti
pop
sub
push
or
cmc
cli
in
mov
pop
out
push
gs
fstpt
aas
push
nop
inc
or
dec
lret
test
jle
mov
mov
loope
jne
jbe
cmp
idivb
push
jbe
mov
js
xor
cmp
out
repnz
shll
das
sub
aaa
sub
jo
movsl
cmpsb
int3
jle
dec
test
loop
imulb
mov
inc
adc
xchg
xor
iret
stc
mov
mov
mov
jle
jmp
pop
xchg
push
sbbb
cwtl
outsb
xor
dec
sub
dec
xor
dec
mov
xor
push
push
pushf
or
cmp
push
fmul
add
dec
aas
cld
cmp
cmpb
sub
je
pop
pop
xlat
and
fistl
std
cmpsl
lock
mov
icebp
popl
push
insb
pusha
xchg
aas
fisubs
std
js
mov
inc
push
lea
in
jbe
cltd
push
mov
icebp
push
jb
dec
cmp
xor
sbb
iret
pop
or
aad
or
and
stc
sub
rcrb
shll
das
out
aam
pusha
jle
xor
jl
test
pop
sub
lock
popf
mov
push
mov
or
int3
and
sbb
lahf
jg
push
daa
pushf
dec
out
dec
negl
xchg
cmpsb
fiadds
mov
push
fwait
pushf
faddl
stc
cwtl
ja
movsl
and
test
pusha
frstor
pop
fsts
aaa
mov
aam
xchg
mov
lock
je
inc
test
sub
mov
dec
jnp
mov
orb
fldcw
mov
daa
fstpt
mov
rcll
cwtl
into
or
lahf
cld
int3
mov
fiadds
mov
ds
mov
or
xchg
lock
jae
sbb
inc
cmpsl
daa
mov
subb
pop
or
mov
fsubrl
push
rorb
pop
outsl
lret
imul
pop
int
adc
dec
imul
jbe
push
sbb
lods
iret
mov
and
call
imul
cmp
mov
adc
xchg
adc
loope
add
daa
loope
mov
xor
test
pop
mov
and
das
leave
jmp
mov
push
xchg
xchg
mov
imull
or
and
or
sbb
enter
sti
pushf
inc
cmpsl
or
pop
call
inc
lock
mov
pop
out
enter
push
jp
xchg
push
cmc
icebp
addr16
cmpsb
aam
and
loop
lret
and
add
push
cmpsl
stc
inc
cmp
fwait
lcall
or
fisubrl
movsl
loope
jmp
push
rcl
sti
sub
enter
mov
push
mov
jge
inc
xchg
sub
imul
push
fiadds
pusha
outsl
dec
mulb
outsl
mov
sub
sahf
mov
or
push
xor
adcl
mov
sub
andl
sbb
jo
mov
mov
jge
shrl
into
lcall
sbb
hlt
imul
fwait
insl
xchg
inc
les
mov
push
pushl
sbb
lea
mov
js
movsl
jmp
push
cwtl
lahf
push
xchg
jbe
jmp
ret
or
add
shrb
mov
cwtl
fidivl
in
aam
cltd
arpl
cmpb
mov
pop
push
cmp
loop
fisubrl
mov
adc
fdiv
xor
push
mov
or
mov
aad
fcmovnu
dec
cmc
maskmovq
imull
sahf
mov
or
push
cmp
das
xlat
or
sbb
adc
popa
cltd
pop
xor
mov
call
and
adc
xchg
pop
shlb
aad
pop
daa
add
setb
pusha
push
xor
out
xchg
pusha
or
add
test
cmp
in
repz
ja
leave
jae
cmp
push
imul
stos
aas
pushf
clc
cmp
lret
in
inc
cltd
in
gs
sahf
mov
pop
inc
push
aaa
xchg
inc
lods
sbb
mov
lea
cmp
hlt
ret
jns
xor
ret
mov
xor
adc
cltd
pop
lods
push
xlat
pop
test
gs
dec
jae
xchg
xor
lret
ficompl
das
lret
imulb
pop
divl
shl
fsub
test
ja
sbb
repz
push
mov
adc
or
cmpsl
mov
lahf
cli
out
int3
lahf
shrl
dec
movsb
xchg
mov
xchg
cmp
aam
or
rcrb
fwait
dec
and
insb
loopne
rorb
mov
fs
mov
test
nop
cmpl
rcrb
les
fisubs
push
adc
mov
negb
dec
inc
and
in
fstpl
jo
pop
ss
and
insb
jbe
cmpsb
mov
cmpsb
test
addr16
dec
jo
test
dec
cmpsb
into
mov
jle
and
lods
fs
xor
movsl
popf
fistl
or
and
out
dec
and
adc
mov
out
lahf
divl
call
sbb
cltd
inc
inc
pop
xor
mov
and
or
dec
inc
xchg
jnp
fiaddl
scas
movsl
pop
push
mov
lods
and
hlt
out
xchg
hlt
gs
enter
aaa
out
jno
insb
mov
dec
adc
movsb
test
push
pushf
cmpsb
ret
mov
fnstsw
mov
mov
jbe
cmpsb
lahf
sub
dec
outsb
fs
push
repz
leave
cmc
lods
movsb
jb
and
xchg
cli
pop
jmp
outsl
adc
insl
fcmovbe
dec
push
cmp
ds
mov
pop
push
scas
mov
js
psubb
scas
adc
addr16
jns
adc
sbb
popf
sub
imul
enter
jecxz
pop
or
lock
lea
jnp
movl
dec
ret
cmp
cmp
jmp
cltd
mov
and
int
inc
push
arpl
push
lods
cmpsb
xor
mov
nop
mov
mov
pop
mov
cld
pop
lcall
xchg
inc
pop
shlb
ljmp
mov
out
in
push
cld
push
xchg
imul
pushf
sbb
int3
cwtl
lret
cmp
lahf
sti
in
cmp
imul
sti
adc
shr
adc
jp
ja
dec
adc
adc
cmp
jns
add
mov
mov
je
adc
nop
fcmove
mov
mov
add
insb
clc
mov
xchg
repz
cmpsl
mov
fwait
pop
inc
shrd
dec
xchg
mov
inc
and
shrb
testb
movsl
inc
scas
out
push
sub
cmp
js
xor
out
lahf
rcr
test
xchg
inc
add
pop
add
inc
sahf
into
leave
and
out
add
push
dec
inc
jge
les
xor
out
pop
test
insl
pop
dec
lds
push
and
mov
and
das
lcall
out
jne
cmpsb
leave
popa
push
mov
dec
addr16
mov
jmp
leave
mov
stc
mov
xchg
outsb
rcr
inc
fdivs
leave
lret
mov
mov
mov
dec
xor
movl
jnp
dec
dec
add
insl
hlt
pusha
xchg
pop
imulb
rorb
pusha
in
jnp
pop
sub
pop
xchg
mov
xchg
xorb
aas
loopne
lea
js
int
in
sti
clc
xor
mov
mov
push
push
aad
outsb
xchg
or
adc
inc
push
fnsave
inc
ficompl
adc
push
jo
sbb
stos
pop
mov
pusha
lock
data16
xchg
and
mov
add
sti
pop
sarb
aam
shlb
and
and
out
sub
mov
push
leave
or
stc
push
jecxz
inc
pusha
nop
or
push
and
js
scas
jnp
dec
and
or
dec
jbe
mov
jle
addl
out
and
mov
gs
adc
mov
pop
icebp
and
pop
push
test
std
dec
mov
or
mov
cld
mov
mov
adc
cmpsl
movsl
mov
mov
pop
jbe
cmpsb
push
jnp
mov
sub
add
xchg
shlb
inc
sub
jnp
cmp
into
mov
lea
cmp
nop
out
nop
jle
sbb
pop
cli
push
leave
mov
mov
stc
sbb
lret
push
push
imul
xor
or
outsl
inc
in
push
sub
jae
fdivrs
mov
mov
and
sbb
int
push
lock
xor
cmpsb
cmp
and
inc
call
mov
sub
xor
popf
call
ficomps
cmp
xchg
jo
insl
lret
shll
inc
lea
nop
mov
arpl
out
inc
lcall
sub
test
push
cmp
jl
ljmp
pop
call
pop
ret
fs
pop
jno
dec
imul
aas
pop
inc
mov
sahf
fnstsw
push
or
jge
clc
xchg
or
sbb
xor
or
mov
lea
ljmp
or
pop
loop
push
bound
push
inc
outsb
jns
add
mov
xor
or
mov
and
mov
xor
aad
in
movsb
pop
call
xor
xor
xchg
adc
pop
mov
js
xchg
sub
add
push
mov
mov
jl
pop
add
mov
int
sub
push
movsb
orl
sbb
and
repnz
or
jl
add
mov
fs
inc
sar
sbb
fmuls
sub
popa
stos
jp
aas
and
xor
mov
fdivrp
add
and
btr
dec
jne
jge
mov
cs
ret
imul
sti
arpl
pop
sub
dec
adc
insl
mulb
stc
fstl
pop
dec
fcomps
sub
and
fistpll
sub
pop
pop
out
mov
scas
sub
call
sub
roll
xchg
pushf
jb
push
sbb
data16
jne
lret
mov
jmp
and
add
or
mov
sarl
cmpsb
mov
mov
jp
jnp
mov
push
into
cmp
fstpl
mov
pop
xchg
pop
and
mov
icebp
push
add
jbe
jne
jae
das
lret
dec
cmp
push
xor
pop
mov
mov
outsl
mov
loopne
stc
pop
xchg
bound
add
pusha
aas
imul
add
push
stos
mov
pop
sbb
iret
mov
loop
jp
stc
xchg
dec
js
cmp
sbb
fwait
dec
pop
pop
push
sbb
sub
insl
mov
xchg
adc
rolb
mov
adc
in
rclb
js
mov
cs
loope
sub
fisubl
jmp
arpl
nopl
push
mov
daa
divb
xorl
mov
jl
push
mov
subb
orl
inc
xor
loope
outsl
jbe
sbb
ds
das
push
dec
jb
test
mov
inc
ja
fdivl
adc
addb
xchg
mov
pop
cmp
push
mov
rclb
add
mov
mov
pop
or
in
add
and
and
hlt
mov
adc
jae
roll
mov
add
or
repz
pop
xchg
push
fcmovbe
dec
shll
sbb
outsb
fucomi
pop
dec
aam
adc
cmp
xchg
rcl
fcmovu
stc
popa
mov
neg
rorb
popa
test
out
xor
ja
in
mov
lea
mov
push
aam
frstpm(287
xchg
push
pop
popf
fldl2e
rcrl
iret
lock
push
sahf
sbb
inc
test
cmpsl
push
into
jp
mov
mov
xchg
or
sbb
xor
int3
cmp
xlat
sahf
cmp
fadd
dec
out
lret
adc
in
repz
arpl
xchg
outsb
lcall
jge
mov
xchg
movsb
mov
cmp
fcmovnu
or
and
popa
in
daa
int3
jb
mov
push
adc
int
fiadds
filds
jge
sbb
sbb
es
dec
jno
icebp
lds
mov
sbb
mov
out
xchg
std
inc
iret
mov
jne
push
xor
jae
push
pop
aam
adc
clc
mov
dec
pcmpeqb
insb
push
xor
cmp
sarb
or
push
mov
mov
lods
sub
mov
iret
mov
lods
enter
jnp
xchg
xor
aaa
xchg
arpl
xchg
repnz
gs
or
popa
sub
repz
mov
decl
push
insl
inc
out
inc
imul
adc
mov
pop
sub
rol
cwtl
add
mov
mov
xchg
addr16
xor
add
sbb
or
sti
jo
fcomps
mov
aas
fwait
mov
mov
das
inc
xorb
lock
inc
je
inc
xchg
shl
je
ds
sub
mov
js
and
inc
and
loopne
lock
xor
cmp
fsubs
inc
test
mov
xor
test
bound
dec
sub
enter
lods
sub
pop
dec
cmp
lahf
sub
jb
xor
pop
loopne
add
cltd
iret
cmp
out
push
mov
pop
dec
lret
pop
push
cld
ja
fwait
ljmp
inc
xor
sbb
sbb
lods
xor
add
int3
mov
xor
pushl
movb
sub
sbb
xchg
inc
mov
cld
aam
dec
dec
es
pop
mov
leave
js
test
cmp
jge
repz
adc
cmpsl
pop
pop
push
test
inc
aas
nop
mov
loopne
or
mov
enter
mov
addr16
mov
mov
add
in
sbb
dec
popa
mov
adc
jne
cmp
std
in
mov
fmulp
jmp
or
cmp
divl
popa
inc
push
cmpsl
adc
call
jge
jae
add
fsub
std
scas
xor
sti
stc
cmp
ja
bound
jecxz
popf
in
jbe
lea
arpl
imul
pop
inc
pop
jae
pop
mov
outsl
sbb
gs
dec
outsl
rolb
mov
pop
pop
jae
mov
cmp
out
outsb
push
or
popf
dec
xor
insl
mov
sub
rclb
gs
cmp
stc
xor
mov
jb
adc
dec
cmc
in
jmp
xchg
les
cmp
and
in
scas
dec
mov
aaa
stos
imul
and
push
mov
dec
dec
dec
mov
mov
int3
xlat
aas
and
in
or
std
inc
leave
inc
data16
jecxz
pop
jo
pop
push
xchg
fcoms
jp
lcall
jo
iret
test
mov
push
dec
popf
xor
cmp
ss
negb
jmp
popa
mov
punpckhwd
imul
pop
add
gs
sbb
fmull
xchg
add
scas
int3
push
or
xchg
sub
cli
addr16
ficompl
in
test
dec
dec
out
xor
add
sub
pop
test
mov
bound
fcmovbe
lods
fs
sub
pop
test
daa
test
and
push
imul
icebp
push
cs
fs
mov
insb
jns
popf
int
or
lcall
fs
xchg
mov
sarl
and
mov
out
and
mov
sarl
pushf
jl
icebp
scas
jb
sub
pop
push
mov
lea
pop
push
push
xor
xchg
pusha
cmp
pop
addr16
cmpsb
push
push
lret
push
lods
and
cmp
inc
nop
or
xlat
xchg
leave
pop
imul
sbb
push
gs
mov
daa
adc
xlat
hlt
lcall
fisubs
sub
cmc
xchg
inc
repnz
pop
into
push
and
jno
inc
in
add
mov
jnp
add
jl
insl
cli
inc
xchg
mov
push
es
push
push
loop
and
out
daa
fwait
bound
push
pop
jne
js
mov
nop
push
inc
in
ja
cltd
xchg
pop
pop
sbb
cmpsb
mov
pop
movsb
aas
sub
cmc
pop
sbb
xor
cmp
movsb
inc
loop
mov
push
out
fcmovb
es
jge
mov
cmpsb
in
dec
repz
ja
lcall
das
jecxz
out
mov
lret
shlb
jnp
push
cmc
cmp
jmp
xor
mov
rcr
lods
aas
lcall
stc
cs
cli
mov
jae
arpl
les
mov
insb
push
pop
iret
mov
push
mov
sbb
add
out
sahf
ret
js
fwait
sub
nop
fcompl
cs
mov
sub
pop
rcrb
bound
push
addr16
or
sub
pop
push
int
lret
in
sbb
or
lcall
das
pand
sbb
pop
fcomip
lahf
inc
push
mov
sbb
mov
mov
adc
pop
pop
cltd
call
sub
or
testb
xor
mov
inc
ds
xchg
pop
inc
fadds
in
stc
out
fwait
jle
and
mov
add
fld
xchg
in
mov
mov
adc
sbb
loope
ja
cmp
push
in
arpl
mov
lea
pop
cmp
add
aam
or
sbb
sbb
loope
fwait
jo
or
in
adc
push
test
dec
adc
fstpt
cmpsl
jl
scas
ja
lock
jnp
push
jmp
cmp
cmpsl
pop
sub
sbb
push
adc
pop
or
or
ljmp
xchg
xlat
enter
cmpsl
mov
or
jbe
daa
ds
push
sbb
js
scas
xor
gs
sbb
cmpsl
xor
jmp
jns
cmp
sub
jge
mov
xchg
and
pop
das
repnz
fiadds
test
xor
pop
xchg
and
out
outsb
mov
push
ret
mov
std
lds
and
mov
cmp
pop
fsubl
pop
push
lock
mov
cmp
jecxz
cmpsl
fsub
clc
sahf
ret
dec
jl
data16
xor
xlat
mov
loopne
fs
xchg
js
repz
in
cs
mov
xchg
repz
or
pop
and
mov
imul
push
mov
or
loopne
mov
std
mov
pop
push
cmc
cmp
jne
clc
pop
push
mov
mov
shl
test
fdivrl
loop
mov
jb
push
cmpsl
leave
dec
xchg
jo
imul
inc
xchg
loop
loopne
clc
adc
stc
inc
mov
xchg
dec
or
test
adc
negl
gs
and
xchg
jp
jge
xchg
push
jle
scas
or
ret
mov
pusha
mov
xchg
sbb
adc
lds
jbe
sbbl
adc
jle
or
movsb
and
idivb
cmc
pop
or
sub
scas
shl
cmc
mov
test
dec
ret
xrelease
pushf
into
test
xor
fstpt
pop
mov
sub
popf
jge
xor
jl
popa
ljmp
cmpsl
inc
lods
js
jne
jns
cld
mov
push
mov
pop
jbe
or
repz
sti
pop
adc
in
cwtl
loop
sahf
mov
lret
iret
and
and
add
into
stc
inc
cs
scas
push
sub
pop
or
repz
add
push
cmp
out
push
scas
popf
out
sbb
loope
or
xlat
sti
mov
dec
pop
cli
mov
scas
mov
jl
jge
fisubrl
push
ja
stos
xor
mov
nop
sbb
pop
pushf
mov
pushf
mov
call
push
or
adc
jecxz
and
push
and
sarl
inc
sub
jae
out
push
repz
loop
mov
add
inc
stc
mov
push
or
sbb
scas
ja
test
in
aam
pushf
movsl
pop
pcmpgtb
imul
dec
imul
xchg
and
push
loop
jns
lcall
shlb
push
ficompl
mov
jae
stos
into
das
mov
es
roll
vmulsd
in
ret
inc
jno
ret
dec
sbb
cmp
setp
inc
aad
fldenv
fs
imul
pop
out
inc
jo
mov
dec
lock
jne
jecxz
adc
push
das
mov
cmp
loope
xchg
mov
add
or
mov
or
insl
and
insb
ret
adc
push
out
mov
jo
pop
in
imull
or
loopne
push
jmp
lahf
les
or
inc
jmp
inc
cmp
loop
lret
pop
pushf
and
mov
out
inc
pop
push
frstor
inc
xchg
lock
shrb
and
push
clc
inc
push
enter
in
test
out
clc
cmp
cmpsb
sub
sbb
lcall
pop
mov
dec
jmp
or
push
cmp
stos
mov
outsl
imul
pop
jg
and
inc
scas
pop
int
pop
sub
inc
scas
sub
outsb
test
rdmsr
lea
mov
les
adc
lret
cmp
cmpsl
movsl
jge
jb
cmp
push
rcrl
dec
add
lds
pop
fists
outsl
mov
sbb
jbe
out
js
std
lcall
push
notl
sbb
mov
in
out
cld
lahf
push
hlt
rcll
jns
ret
ret
cmp
xchg
xchg
fisttps
sub
in
jge
sti
cli
das
call
mov
inc
adc
adc
fisubrl
mov
bound
and
inc
mov
add
xchg
scas
jb
pop
int3
and
jmp
lods
hlt
xor
inc
sub
lret
push
aaa
lds
jns
sub
test
cwtl
int
sub
inc
pop
cwtl
mov
xchg
adc
aam
fcomip
mov
pop
iret
je
mov
leave
or
mov
cmp
mov
rolb
push
ss
out
pop
ljmp
and
mov
jg
aam
icebp
cmp
and
std
fs
cmp
inc
rolb
and
lcall
es
js
or
decb
xor
lret
in
jg
scas
xchg
or
int3
lods
mov
add
or
sbb
cmp
icebp
pop
sub
mov
shr
popa
mov
mov
mov
push
popa
les
dec
xor
mov
lret
jl
xchg
mov
pop
and
and
cmp
lcall
test
sbb
and
ret
scas
loope
lods
loop
push
adc
rolb
imul
inc
sbb
ljmp
mov
lahf
xchg
inc
jb
rcr
push
mov
inc
movsb
sub
ljmp
das
adc
movsl
mov
outsl
dec
sbb
aas
cmp
jl
ss
push
sub
push
xchg
inc
pop
lret
outsl
incb
cld
add
xor
call
pop
leave
cmpsl
cli
fs
push
repnz
insl
cmpl
pop
lret
fwait
jmp
out
mov
pop
mov
pop
pop
repz
test
pop
lret
fsubr
rclb
xchg
popf
shll
cltd
popa
xchg
pushf
mov
les
cmpsl
std
push
sbb
je
push
xchg
xchg
xchg
jmp
dec
cwtl
into
enter
lods
push
fists
hlt
xchg
add
cmpsl
jo
mov
sahf
arpl
xor
out
mov
test
adc
pop
push
into
mov
outsl
lods
icebp
sbb
mov
aam
adc
scas
sub
inc
adc
xchg
es
push
cwtl
sbb
pop
icebp
pop
lcall
hlt
cwtl
inc
repz
mov
jecxz
lods
jne
add
prefetch
or
dec
std
int3
stc
sbb
or
sbb
mov
stc
sub
xchg
fnstsw
test
mov
and
mov
cmp
xchg
sbb
fwait
call
push
or
fsubrs
aam
and
cltd
inc
arpl
orb
aad
popf
loope
mov
leave
mov
movsl
movsl
insb
ret
stos
dec
loop
pop
int
sbb
mov
test
rclb
lods
inc
mov
outsb
stos
loope
inc
push
adc
jbe
lds
cmpsl
sbb
mov
jmp
xchg
neg
daa
and
shl
push
lods
leave
inc
fmuls
loop
sbb
mull
mov
jle
mov
pop
sub
inc
jle
adc
pop
test
cmp
push
inc
jge
or
adcb
push
cmp
testb
pop
sub
insb
scas
insb
lods
xchg
mov
cmpsl
rorl
movsl
jg
repz
arpl
mov
jb
ftst
stc
sarb
pop
xchg
and
or
mov
idivl
sub
repz
sub
and
or
adc
mov
sarb
aam
xchg
movsl
sub
jnp
push
pop
mov
stos
cmp
rorl
push
inc
mov
or
ja
popa
lret
cli
stos
leave
pop
inc
lods
outsb
jmp
aaa
push
pop
mov
mov
push
xchg
fsubr
mov
pop
dec
mov
xchg
nop
mov
ss
jno
lcall
nop
and
shl
frstor
aad
push
jp
lods
xchg
lea
or
or
jmp
mov
cli
dec
mov
stos
push
gs
xor
jns
inc
lods
frstor
mov
mov
ret
leave
shrb
out
jle
fimull
add
insl
pop
ret
sbb
cmp
loope
dec
cmp
mov
in
loope
arpl
jl
ljmp
fdivrs
inc
popf
movsl
gs
cmp
lcall
lret
sbb
call
add
xchg
pop
cmp
cmp
add
add
cmp
in
fdivl
mov
fistps
push
add
cmpsb
addb
stos
or
adc
add
add
js
xchg
movsb
mov
aad
inc
jo
dec
jne
cld
lods
imulb
push
push
mov
data16
mov
jge
outsb
and
push
xor
out
mov
mov
lcall
sbb
rorb
aam
nop
mov
sti
mov
repz
loope
xor
push
inc
cmp
mov
out
insb
pop
cmp
aaa
lret
dec
testl
stos
dec
jp
push
mov
push
in
nop
js
xchg
push
mov
mov
dec
xor
imul
mov
mov
jbe
mov
pop
jb
mov
insb
dec
sbb
adc
icebp
rolb
push
lcall
xchg
xor
sub
add
pop
pop
mov
jecxz
xchg
jp
jns
movsb
int3
mov
adc
popa
xchg
add
inc
inc
add
out
add
dec
pop
fsubrs
in
fs
mov
subb
add
enter
xor
loopne
movsb
pop
leave
jb
sbb
stos
pop
cmp
mov
push
and
pop
subb
sbb
pop
inc
enter
cmp
xchg
mov
int
fistl
adc
mov
jnp
test
insb
pushf
mov
cwtl
subb
aas
int
mov
pop
out
fcmove
adc
cltd
xor
sti
adc
loop
in
call
out
add
cli
divb
lods
js
jno
cmp
in
cmc
adcl
lods
dec
push
push
dec
fwait
xor
leave
push
lret
shrl
pop
and
jg
out
inc
pushf
lds
shrl
cmp
cwtl
les
scas
loope
test
das
xchg
cmc
ret
sahf
pusha
clc
and
mov
dec
jecxz
bound
and
fsts
pop
xchg
clc
jmp
inc
dec
loop
icebp
jl
mov
sti
or
mov
nop
sub
dec
cmpb
cmpsb
shll
enter
mov
xchg
into
jns
pop
xor
sub
hlt
jl
mov
mov
add
xchg
dec
movsl
popl
call
and
sub
mov
std
mov
iret
inc
cmp
dec
outsl
fwait
mov
mov
xchg
fldl
and
mov
or
fnstcw
mov
mov
jo
cli
outsb
jnp
sub
inc
mov
sbb
dec
jb
shlb
cmp
rol
mov
fildll
fcomp
mov
jmp
fldl
imul
add
loope
pop
sahf
mov
arpl
xlat
sti
dec
push
lds
mov
or
les
fists
hlt
and
cwtl
push
fwait
stos
loope
dec
stos
dec
xor
loope
rorl
orb
lcall
lods
and
xor
idivb
pop
aaa
mov
clc
sub
mov
add
mov
dec
and
je
push
dec
jbe
inc
inc
mov
mov
imul
sub
popf
mull
out
pop
std
cmc
pop
lds
punpcklbw
dec
adc
xchg
pop
cmp
add
adc
adc
mov
data16
out
adc
fsubl
stc
mov
pop
mov
das
pop
xor
mov
rolb
cmp
adcl
popf
push
inc
cld
mov
jg
cld
jb
sbb
lcall
test
or
clc
out
insb
lock
mov
pusha
inc
jo
mov
cmp
jnp
mov
mov
push
xchg
daa
inc
stos
nop
movsb
lea
int3
mov
jno
mov
imul
push
mov
adc
push
fadd
mov
std
jbe
inc
fucomi
xor
daa
popa
sub
mov
clc
dec
scas
gs
lods
cmpsb
mov
out
lds
add
test
mov
jp
adc
jbe
mov
roll
out
cli
arpl
mov
cmp
adc
shrb
ds
outsb
mov
fucom
hlt
addr16
and
jle
mov
inc
icebp
xor
ljmp
sub
mov
mov
push
in
xor
mov
lret
cmpsl
lea
pop
sbbl
ret
sbb
sbb
ficoml
push
push
test
stos
sbb
mov
in
jne
shlb
sub
es
mov
lret
or
push
mov
clc
nop
mov
mov
push
cmp
cltd
push
pop
ja
or
push
mov
insl
inc
out
add
scas
or
jg
dec
in
mov
frstor
xchg
xor
arpl
mov
mov
cltd
mov
mov
and
lahf
pop
in
and
push
test
dec
push
cmpsl
inc
daa
inc
stc
js
jno
movsb
mov
lods
add
lods
or
jne
fidivl
movsl
daa
xchg
or
enter
cmp
mov
cli
fildll
pop
pop
dec
in
push
sarl
jbe
imulb
bound
iret
dec
dec
jb
xchg
out
cs
cld
mov
insb
mov
inc
mov
adc
call
call
das
mov
out
outsl
inc
lock
stos
inc
cltd
stos
pusha
popf
xchg
mov
leave
pop
xchg
pop
rep
fistpl
push
sti
adc
into
int
and
or
imul
shlb
add
mov
xchg
icebp
in
jnp
pop
jmp
jae
inc
pop
adc
loopne
popf
gs
rol
daa
repz
out
pop
out
xchg
xor
pushf
pop
jge
mov
and
mov
es
mov
pop
cmp
lea
outsl
arpl
loope
or
or
fstps
out
pop
xor
or
or
fdiv
idiv
jo
bswap
mov
jns
adc
in
iret
or
mov
jnp
inc
add
addb
cltd
test
pop
xor
push
inc
pop
jbe
int3
int3
push
dec
dec
shll
movsl
push
cmp
mov
jle
lods
negl
sub
push
fisubrl
xlat
mov
and
sbb
subl
mov
ss
dec
cmp
inc
cmp
cmc
xor
xchg
in
sub
push
outsb
mov
leave
lea
test
scas
cmc
inc
mov
repz
inc
insl
and
sbb
inc
add
jns
shlb
call
fs
out
mov
test
pop
cmc
mov
and
and
cmp
notl
inc
jae
add
es
xchg
mov
aas
push
arpl
fcmovu
nop
pop
xchg
mov
add
inc
in
mov
sti
mov
sub
xchg
jb
pop
test
jne
or
loopne
cmpsb
into
stos
inc
cmp
push
cmpsl
stos
cmp
jnp
pop
pop
rorl
out
cmp
sbb
add
xchg
xorl
das
jo
mov
pop
lods
add
ja
pushf
mov
fwait
aad
inc
test
pop
movsl
out
lds
lret
icebp
dec
or
jno
add
out
xor
mov
mov
jno
pop
fsubrp
sbb
add
punpckhwd
and
std
xor
mov
adc
mov
inc
das
inc
movsb
out
jle
imul
push
ljmp
das
adc
adc
sub
mov
pop
xchg
aas
shll
movsl
adc
sbbl
jmp
cld
ret
jae,pt
lock
sbb
mov
push
ret
mov
cmc
xor
insb
mov
pop
les
aam
xor
aam
mov
cli
cs
mov
xor
sar
aam
das
sub
and
test
das
dec
or
and
push
cmp
mov
les
lahf
sarl
push
icebp
and
push
dec
cmp
lret
imul
jge
das
mov
cmp
push
mov
mov
and
psrld
ljmp
lret
add
inc
loopne
sarb
cmc
rcrl
pop
and
mov
lret
pop
mov
inc
mov
loope
pop
dec
push
xlat
js
dec
sahf
mov
sbb
mov
lretw
test
and
fsubrl
xchg
test
dec
js
std
cmp
shl
pop
xchg
repz
ror
jmp
add
cmc
or
xor
adc
sbb
mov
dec
xchg
scas
out
out
xorb
or
mov
jb
mov
imul
popf
dec
sub
inc
mov
adc
loopne
cmp
loop
mov
xchg
push
jbe
out
arpl
pop
test
push
jge
fsts
pop
mov
xor
push
and
loopne
cmp
cmp
sbb
fs
jecxz
das
call
lret
add
mov
fwait
ja
jecxz
lcall
test
out
mov
adc
je
mov
pop
or
xchg
cs
stc
icebp
adc
mov
repz
jbe
adc
leave
divl
adc
sbb
pop
add
sbb
leave
dec
jg
pop
cli
adc
fidivl
in
pop
scas
cmpsb
lahf
jle
mov
ja
add
movsb
inc
hlt
stc
dec
pop
test
cmp
mov
rolb
pop
mov
sbb
and
lock
in
pop
xorb
jecxz
aaa
or
lods
shrb
std
das
inc
loop
ret
clc
push
mov
mov
out
jne
lods
mov
or
xor
mov
in
out
fbstp
push
mov
cmp
stc
mov
pop
nop
xchg
inc
rolb
jge
mov
insl
pop
xor
push
lods
addr16
test
push
test
xor
jae
adc
adc
xchg
cmp
mov
sbb
imul
pop
stc
aad
and
jle
lret
mov
mov
aam
mov
sub
jns
push
mov
sbb
pop
inc
cmp
into
js
cltd
jns
aam
add
xchg
xchg
add
push
adc
and
cmpsl
les
jecxz
scas
jg
stc
sbb
cli
sbb
pop
lret
std
imul
test
mov
orl
pop
xchg
and
and
and
mov
adc
inc
loop
rcr
push
add
lret
sub
cli
scas
xchg
bound
shrd
out
pop
fbstp
push
aaa
ljmp
or
int
jb
ds
add
sub
push
leave
mov
xchg
push
fldenv
movb
cltd
xor
dec
sti
adc
gs
je
push
cmpsl
and
push
ja
push
cmpsl
or
mov
mov
je
int
pop
inc
outsb
in
mov
adc
popa
dec
jg
repz
jecxz
add
xorl
icebp
ficoms
pop
or
lods
sbb
inc
cltd
into
ror
das
mov
out
adc
fstpt
enter
inc
aaa
xchg
cwtl
mov
leave
xor
out
pusha
aas
popf
dec
push
xor
cmp
repz
sub
sbb
int
mov
scas
test
aad
int
xchg
test
jne
fstl
inc
lahf
lret
shlb
gs
test
push
xchg
sbb
mov
add
push
fisubs
or
cmp
dec
insl
mov
sbb
test
push
pop
inc
js
xlat
pop
loop
jp
lahf
fnstcw
out
outsb
mov
dec
lcall
xchg
jo
aam
mov
movsl
repz
out
adc
jno
lds
out
jp
lds
and
xor
orl
add
aas
xor
xor
add
mov
aam
push
ret
sbb
scas
pop
cld
loopne
xor
filds
and
movsl
mov
fs
pop
fldt
jl
adc
or
ss
sahf
out
cs
adc
in
pushf
pop
dec
fdivrl
imul
fisttps
shrl
xor
or
out
int
int
sbb
mov
push
xor
adc
rorl
cwtl
imul
add
mov
lea
test
xchg
nop
je
mov
mov
lods
cmpsl
out
aad
mov
loopne
and
pop
in
mov
clc
ja
mov
cli
movsl
pop
jmp
xor
stos
leave
outsb
inc
test
movsl
loope
sub
and
xchg
xchg
sbb
add
gs
jno
mov
mov
mov
rorb
pop
inc
in
inc
adc
fistpll
loop
xchg
cmpsb
jne
xlat
add
ret
pop
mov
popa
jmp
outsl
cmp
testl
cltd
sti
cmpsb
and
cmp
mov
rorb
jns
sbb
pop
pop
xor
adc
pop
xor
shlb
jp
iret
rolb
add
dec
test
int3
ret
and
add
jmp
mov
push
ja
mov
ret
xchg
jno
xor
scas
inc
push
and
pop
es
scas
mov
pop
dec
mov
out
insb
test
cmc
ja
aas
je
dec
sub
inc
add
fs
stos
insb
mov
or
frstor
add
pop
fs
sbb
inc
pop
pop
mov
cmc
int3
mov
inc
xchg
pop
cmpsb
pop
push
sub
cli
push
mov
jo
std
ret
sbb
mov
push
ud2
xchg
push
xchg
adcl
pop
pop
movsb
outsb
cs
and
cld
idivb
rclb
or
test
movsl
mov
adc
push
sbb
pop
adc
sbb
and
pop
enter
push
pop
xchg
mov
xor
int
ficoms
inc
pop
stc
ljmp
xchg
inc
rol
add
or
mulb
or
jp
les
push
fdivrl
cmpsl
mov
scas
clc
sbb
ja
into
pushf
loope
xor
pop
pop
sub
frstor
push
jp
cmp
add
mov
jge
push
fmuls
aaa
mov
addr16
mov
cmp
adc
aam
rcl
idivb
aaa
ja
fdivrl
sub
xchg
stos
pop
sbb
nop
xchg
xor
insb
inc
jbe
jmp
lahf
cmp
add
data16
pushf
pushf
movsb
mov
add
mov
cwtl
xor
clc
cmp
inc
sbb
sbb
int3
into
mov
data16
in
sbb
cld
enter
out
jns
jae
cmp
test
icebp
cmovb
sbb
mov
ret
cmp
jp
repz
int
ja
xlat
daa
xchg
lahf
cmp
js
stos
aas
and
out
xor
pushf
xchg
pop
adc
ss
sti
out
sub
push
mov
dec
addb
test
sti
adc
bound
std
cmp
daa
dec
cmp
shl
push
fdiv
inc
pop
lds
data16
insb
iret
aaa
jae
arpl
jecxz
in
adc
mov
pop
push
loop
dec
adc
lods
fcmovb
or
pop
ds
adc
inc
cmp
and
aad
jno
or
add
push
cmp
enter
dec
mov
imul
lret
in
mov
xorb
std
jns
les
popa
push
mov
xor
mov
scas
pop
divb
add
sbb
mov
dec
push
in
xor
sub
cmc
pop
pop
aas
add
jnp
sarl
xor
cli
adcl
dec
incl
lcall
mov
jns
mov
dec
and
inc
in
xor
outsl
sub
mov
cli
jo
cmp
pop
mov
jae
add
outsl
cli
add
sub
add
lds
push
dec
cmp
int
icebp
xchg
lret
inc
test
in
les
cli
lcall
inc
inc
scas
adc
xor
movsb
jle
mov
pop
shlb
xorl
cmpl
cmp
sub
hlt
popf
push
add
inc
pusha
inc
iret
stos
cwtl
sbb
jg
aaa
ljmp
mov
aam
das
cmp
lods
popa
fnsave
jle
nop
lds
stc
pop
js
pop
fmull
iret
sub
xchg
or
bound
mov
dec
cmp
cmpsl
cmc
pop
mov
rcr
inc
mov
nop
or
inc
icebp
aaa
ret
xchg
mov
sub
adc
xchg
cmp
push
jo
cmpb
cmp
int3
pushf
dec
in
jns
xor
push
flds
push
add
aam
dec
test
ret
decl
cmp
iret
ljmp
xor
pop
jb
repz
add
fisubs
xchg
out
xchg
sub
xchg
and
pushf
mov
mov
sti
push
sub
sub
outsb
ds
sub
cmpsb
xchg
dec
mov
cmpsl
negb
jl
mov
mov
aad
lea
push
sarl
lret
mov
je
push
jg
lods
test
ret
out
sub
mov
xchg
jns
xor
push
sti
inc
mov
jae
mov
add
aam
or
dec
mov
jo
gs
lods
lahf
pop
push
pop
jns
push
test
into
and
xchg
sub
in
in
lods
enter
jg
ja
ror
je
jns
sub
popf
mov
aas
jmp
sbbl
or
das
sbbb
fcoms
xchg
outsb
push
xchg
pop
xor
pop
subl
adc
mov
ror
and
out
xchg
cmp
mov
cmc
fadd
adc
aam
and
stc
or
fdivs
cmp
sbb
lcall
add
inc
mov
inc
xor
in
jno
sarl
les
int3
lahf
mov
dec
inc
xlat
sub
sub
mov
cs
stos
mov
test
xchg
xchg
and
and
sbb
int3
mov
pop
mov
aad
pop
into
ds
in
lret
sbb
dec
dec
lret
cmpsl
mov
test
inc
pop
pop
adc
ja
xchg
pop
mov
sub
fs
pusha
inc
jmp
cmpsl
test
pop
lock
imul
shl
inc
ja
imul
test
cmp
dec
pop
out
adc
mov
inc
push
and
sub
call
pop
mov
loopne
into
cmpsb
mov
leave
bound
mov
inc
sub
int3
cmp
ja
inc
push
pop
pusha
mov
lcall
out
xor
add
mov
add
sahf
dec
test
fildl
jmp
jo
sbb
into
xor
and
cmp
jb
jb
scas
jmp
xchg
xchg
sti
mov
jg
dec
push
add
xchg
sub
adc
imul
icebp
fwait
sub
loopne
lods
fs
hlt
dec
or
or
out
mov
inc
mov
mov
aad
frstor
push
dec
into
cmc
xchg
cmpsl
out
test
mov
mov
lahf
rcll
mov
push
fsubrp
sarl
ss
lds
adc
pop
jbe
pushf
stc
and
xchg
push
adc
in
and
dec
or
sbb
add
sarl
dec
push
cwtl
ja
inc
ror
lret
jl
or
jns
add
cmc
mov
iret
imul
jb
outsb
in
js
lret
add
out
popf
adc
inc
push
adc
or
shrb
sub
test
pop
gs
cmpsl
inc
sub
inc
fnstcw
js
fsubs
dec
xor
mov
pop
add
pop
jecxz
and
xor
pop
jnp
sub
mov
cwtl
lods
pop
enter
in
dec
mov
or
sarb
add
arpl
xchg
jg
scas
std
jnp
push
xchg
stc
push
fimull
add
cmp
cmpsl
add
sub
mov
adc
std
adc
js
das
jo
hlt
sbb
bswap
lea
dec
out
andb
jbe
insb
pop
xor
mov
loop
outsl
stc
data16
ss
inc
aam
outsl
jne
xchg
icebp
movsl
push
sub
test
or
leave
push
aad
push
std
push
loopne
cmp
inc
cmp
dec
or
ljmp
sbb
xlat
stos
lret
test
lsl
les
call
adc
or
mov
sahf
aaa
push
mov
mov
or
adc
dec
mov
push
mov
xchg
lock
cli
loope
pop
insl
sub
sbb
fwait
add
mov
dec
sti
gs
push
test
jnp
ret
mov
std
ja
add
cs
lock
data16
out
pop
xchg
out
dec
xchg
dec
dec
inc
mov
lock
outsb
cmp
mov
xchg
shll
lods
pop
cmp
sbb
in
stos
push
jne
mov
in
fwait
xor
xchg
movsb
jne
sbb
lret
inc
inc
in
jno
dec
out
mov
dec
mov
adc
cmp
dec
jno
adc
or
divl
jle
sub
pusha
mov
push
out
out
dec
jecxz
lock
cmp
pop
stos
sbbl
frstor
enter
push
loope
imul
dec
out
mov
push
aad
push
sti
jge
cmp
and
lcall
xchg
xchg
pop
cmc
push
dec
inc
sub
repz
or
inc
loop
adc
lret
sarb
les
imul
mov
out
ffree
insl
data16
sahf
dec
movsl
addr16
add
dec
je
sbb
in
or
add
mov
xchg
cs
fildl
je
and
ljmp
jmp
push
shl
pop
arpl
cmp
mov
shlb
add
les
or
fwait
lcall
cmp
lahf
sbb
and
stos
and
mov
jne
xlat
frstor
xor
fbld
xlat
inc
daa
int
or
push
push
ja
out
xchg
leave
scas
fimuls
repz
xorb
mov
aam
pushf
xchg
add
cmp
div
sub
test
jo
xchg
and
pop
andl
inc
jl
ljmp
mov
inc
add
sbb
sbb
aad
insl
test
divb
out
lcall
enter
pop
les
dec
into
cmc
add
arpl
shr
decl
or
lcall
shlb
pop
push
inc
push
push
mov
push
aam
pop
movsb
push
fsts
pop
hlt
in
lret
loopne
dec
insl
jno
add
jbe
arpl
jl
adc
pop
loopne
add
xor
insb
xlat
jne
jbe
jg
andb
or
pushf
jns
loope
pop
adcb
jb
push
cmpsl
push
fimull
cmp
jbe
sti
in
incb
push
call
std
aad
dec
xchg
pusha
mov
movsl
push
adcl
mov
gs
icebp
inc
and
std
inc
adc
add
je
mov
xor
lock
mov
or
mov
xchg
mov
pop
cmpsl
mov
push
rcrb
test
push
insb
fadds
mov
enter
ret
in
hlt
mov
mov
mov
out
roll
jecxz
bound
dec
pop
and
aad
mov
jno
push
inc
sub
int
push
aaa
dec
cli
pop
mov
call
push
push
repz
pushf
dec
or
stc
mov
stc
les
mov
into
jle
pop
push
faddl
cli
aad
scas
lret
pop
sub
fsubp
jge
out
shrl
fs
mov
lock
xlat
xor
setp
push
scas
lahf
test
std
mov
inc
leave
shlb
adc
repnz
push
mov
cmp
mov
test
jne
icebp
pusha
lods
out
jbe
nop
jo
jg,pn
push
lods
sbbb
or
mov
and
into
stc
push
fistpll
jg
test
loopne
gs
nop
in
adcb
xchg
lea
ret
pop
inc
icebp
push
or
push
jnp
in
adc
cmp
add
cmp
xor
dec
popf
cli
xchg
xorl
dec
fcomip
jno
push
movsb
xor
xchg
or
or
out
cli
sub
jae
mov
dec
jecxz
jns
lret
xor
ja
jns
pop
repz
imul
mov
dec
ret
xor
sarb
adc
push
outsb
in
dec
add
ds
xchg
xor
jne
into
push
sbbb
lods
cwtl
or
loopne
jl
retw
or
aas
pusha
push
add
xor
cltd
xor
push
push
xor
xlat
xor
xor
out
add
test
push
mov
xchg
jmp
and
stc
and
outsb
cmp
and
data16
pop
popa
lea
scas
sar
test
sub
jbe
mov
inc
sbb
xor
out
insl
out
popf
fldl
int
popl
int
aas
or
push
test
fcmovbe
xchg
out
lret
adc
pop
pop
dec
scas
pop
dec
push
orb
aad
cli
lods
dec
leave
xor
pop
pop
and
dec
cmp
int
jg
inc
enter
test
mov
imul
in
jns
add
pop
cli
xchg
pop
jnp
xchg
jmp
loop
loop
cmpsl
aam
mov
mov
lods
xor
or
pop
and
mov
ja
push
adc
push
aad
jle
addr16
test
jp
jb
ja
shll
push
in
lods
mov
add
pop
iret
mov
stos
fsubrs
mov
inc
ret
pop
adc
adcb
mov
add
cmp
xchg
mov
les
dec
xor
and
xchg
xchg
lock
or
fistl
aas
xchg
dec
xor
divb
dec
repnz
push
add
dec
sub
ja
inc
sub
lea
cmp
dec
inc
and
mov
pop
or
popf
mov
jb
adc
sub
adc
inc
pop
andl
pop
jae
subb
jbe
jb
es
and
add
cmpb
push
xchg
dec
call
inc
sarb
ffree
sarl
mov
ja
out
int3
insl
orb
add
movzwl
sub
cld
sahf
xchg
add
mov
inc
es
je
lock
int
mov
sub
xor
test
cmp
in
leave
lea
inc
sub
andl
jb
and
mov
rorb
mov
daa
pop
mov
jb
fcomip
mov
jecxz
jns
cli
mov
add
sbb
sbb
stos
aas
popa
push
std
call
ja
xchg
test
clc
mov
and
insl
std
xlat
xchg
lahf
inc
jns
cli
xchg
mov
scas
inc
mov
repz
cmp
mov
dec
fisttps
jmp
enter
dec
xchg
mov
pushf
fildll
push
call
mov
xchg
mov
or
sbb
mov
sub
shlb
fs
cli
inc
movsl
jns
pop
ljmp
cs
cs
mov
sub
inc
sti
mov
call
popa
xchg
ja
xchg
xchg
pop
outsl
or
loop
push
pop
loope
test
out
mov
or
push
inc
pop
int3
loopne
xchg
in
add
adc
jge
jns
nopl
ljmp
xchg
cmpsb
push
xchg
test
stos
and
notl
adc
movsl
je
pop
or
stos
mov
push
xor
mov
jecxz
in
cltd
les
or
add
sbb
ja
cmp
mov
fidivrl
daa
arpl
ret
in
pusha
popf
shl
cmp
test
rcll
in
sbb
sbb
mov
jp
push
hlt
mov
jae
test
push
jno
mov
mov
sub
push
jl
ret
int
stos
xor
fbstp
incl
mov
mov
in
out
xchg
shl
aaa
sahf
sub
push
lcall
dec
sbb
gs
aad
test
push
cmp
push
pop
test
jno
fiadds
dec
enter
mov
rorb
lret
dec
dec
popa
dec
in
lahf
jne
xor
sub
fdivl
inc
dec
sub
sbb
mov
inc
jns
xchg
pushf
xor
fincstp
jg
sbb
sub
fldt
cltd
movsl
sub
ffree
addl
xchg
mov
popf
in
mov
mov
inc
xchg
fidivrs
negl
iret
rcrb
dec
sbb
xlat
stos
mov
pop
xor
mov
mov
cmpb
push
loop
stos
dec
push
sub
repz
lea
stc
mul
mov
loop
mov
mov
jne
sbb
daa
sbb
inc
int
and
loop
jecxz
mov
scas
popa
inc
push
inc
call
mov
pop
fists
adc
fst
pop
mov
sbb
ds
rcr
mov
les
fistl
inc
shrb
sbbb
lods
mul
xlat
push
cs
push
sub
dec
and
sbb
scas
cmpsb
dec
aam
push
jg
xchg
mov
shlb
dec
into
mov
pop
int3
push
mov
and
pushf
aaa
xor
or
cmc
inc
fistl
mov
repnz
and
cmp
xchg
lret
sahf
insb
arpl
adc
and
out
dec
insl
mov
lds
cmp
sahf
mov
cmp
loopne
sub
push
lock
call
pop
mov
sarb
pop
loope
repnz
addr16
adc
add
jns
pop
push
push
rolb
negl
cmp
xor
jle
cld
addl
inc
js
mov
test
addb
sbb
arpl
sbb
pushf
das
lds
xlat
dec
xor
mov
xchg
jno
push
push
pop
push
dec
leave
sbb
mov
mov
out
shll
popf
pop
lret
and
adc
push
sub
sti
pop
mov
lods
out
popf
sbb
and
sub
pushf
cs
test
xchg
imul
idivb
data16
mov
jl
inc
leave
adc
movzbl
add
pushf
sub
enter
jb
sbb
aad
ret
fcmove
pop
push
mov
sbb
imul
push
movsl
inc
test
xchg
and
cmp
add
jbe
lret
mov
mov
loop
mov
mov
push
cwtl
jno
fcmove
stc
cs
cltd
leave
lret
out
fistpl
repz
pop
adc
ds
daa
ret
gs
rcrb
scas
add
stos
and
loopne
popa
dec
jl
fstl
fnstenv
imul
mov
sbb
inc
jnp
jno
movsb
lcall
fcmovnbe
in
sub
dec
leave
nop
movsb
dec
lahf
loopne
or
rcrb
outsb
js
xlat
mov
jl
and
in
cmpsb
sub
mov
insb
lods
mov
mov
cwtl
pop
fstl
test
and
sti
dec
xor
pop
cmc
mov
and
cmp
jp
mov
mov
xlat
ret
dec
sub
fs
mov
jmp
cli
imull
sahf
test
test
lods
fsubrl
sti
fs
mov
ljmp
std
testb
sub
dec
pop
or
push
divl
lret
mov
imul
jae
push
fsubs
insl
mov
fwait
or
mov
mov
pop
lods
fidivrl
mov
js
scas
mov
dec
in
arpl
pop
filds
aaa
dec
ljmp
loopne
roll
mov
fldt
lcall
mov
out
mov
mov
or
testb
cs
sub
mov
ljmp
adcl
shl
mov
int3
and
cmp
pop
das
inc
mov
loopne
xor
shll
lcall
repnz
xchg
or
or
cmp
ds
rcl
dec
pop
mov
push
cmp
or
aam
jecxz
push
mov
or
stc
mov
and
les
push
and
cmp
movsb
mov
out
dec
mov
add
pop
shll
fldt
aaa
inc
lods
dec
sahf
fisubrl
mov
xchg
mov
sarb
sti
jg
lock
or
mov
push
add
pop
pusha
call
and
xor
aaa
call
jp
outsl
jecxz
js,pt
adc
call
inc
inc
sbb
mov
push
lcall
sbb
nop
imulb
popa
cmp
loopne
or
cmp
pop
pusha
mov
aam
decb
push
pop
inc
sbb
dec
mov
mov
pop
sub
sub
add
pusha
sarl
test
popa
dec
fmuls
fisubrs
in
jle
xor
das
iret
aam
ss
inc
and
add
xchg
imul
jbe
sbb
outsb
cmp
mov
into
jp
push
adc
outsl
les
imul
sub
sbb
outsl
out
in
and
cmpsl
mov
pop
sub
mov
arpl
pop
testb
popa
stc
push
adc
push
scas
mov
pusha
sub
jmp
hlt
and
mov
ret
mov
pop
outsb
jp
and
dec
out
sbb
xor
imul
shlb
sub
pushf
mov
in
int3
or
jl
jb
pop
adc
mov
shll
ja
aad
xlat
pop
sbb
adc
das
xor
mov
mov
push
xchg
push
sub
mov
cs
or
in
dec
in
pop
scas
sti
cmp
mov
add
es
dec
lret
mov
cltd
ss
mov
test
mov
or
hlt
pop
fsubrs
mov
stos
addl
movsb
fmuls
cs
dec
xor
adc
add
movsl
dec
sbb
popa
add
pusha
scas
mov
fnsave
dec
ds
xlat
arpl
push
daa
dec
pop
xor
adc
fcoml
hlt
mov
xor
mov
pusha
mov
sub
and
dec
mov
push
ljmp
ja
and
xchg
jle
iret
aad
pop
lea
pop
sub
mulb
xor
cmpb
adc
testb
dec
mov
jg
pop
mov
add
xchg
inc
fisubl
jne
mov
add
cmpsb
inc
jno
push
call
dec
xor
lea
jg
jb
leave
cmp
js
dec
and
or
sub
testl
pop
inc
sbb
cmp
jnp
xchg
vandpd
iret
xor
out
fisttpll
sbb
adc
repz
xor
jl
xchg
jle
ret
and
push
ss
push
cmpl
aam
stc
pop
mov
out
aad
enter
pop
sbb
enter
xchg
hlt
insb
fimuls
lods
dec
outsl
cmp
nop
cmp
shrl
insb
push
inc
shr
push
hlt
inc
jg
adc
push
icebp
jl
fs
cmpsl
xchg
pop
xchg
lret
ret
cmp
sbbb
pop
push
sub
jp
xchg
mov
adc
and
cmovl
xor
and
je
mov
insl
mov
out
mov
mov
movsl
push
popa
pushf
hlt
adc
loope
fadd
repnz
mov
sar
mov
popf
popf
testb
jae
bound
repnz
imul
mov
push
icebp
jl
iret
in
inc
popf
movsl
loopne
pop
sbb
dec
pop
sbb
pop
movsb
out
outsl
or
mov
cmp
js
cmp
ffreep
mov
rcrl
pop
add
or
and
ds
push
jl
push
fsubr
enter
mov
sub
sub
push
jo
xor
jne
negl
notb
push
addl
and
cmp
or
sub
lods
cltd
mov
sub
scas
movsl
aas
mov
bound
jle
dec
sbb
sub
lods
sub
sub
mov
inc
sti
or
inc
stos
mov
in
sahf
cmpsb
adc
mov
mov
test
xchg
cs
ds
repz
lcall
mov
fadds
aas
xor
inc
inc
xchg
imul
jle
std
cld
lods
sub
xor
cmpsl
mov
xor
pop
scas
xchg
shr
negl
mov
dec
inc
daa
push
in
jo
sbb
xor
sbb
dec
out
imul
pop
fidivrs
cmp
in
lock
lea
cld
pop
stc
adc
iret
mov
or
ret
lret
inc
mov
xor
std
cmc
sub
add
pusha
xchg
hlt
pop
sbbl
cmp
jl
mov
jl
sbb
mov
out
and
gs
jns
dec
aaa
loopne
mov
inc
lahf
mov
adc
orb
and
jo
cmpsb
imul
jl
stos
xor
roll
in
mov
pop
dec
ss
lea
xchg
add
adc
in
ja
mov
pop
cmpsl
ret
xchg
push
pop
and
mov
jl
jno
xchg
xor
xchg
adc
lahf
fcmovnu
xor
dec
scas
xor
adc
mov
sub
pop
call
dec
push
imul
sub
lret
and
dec
add
mov
test
sub
jb
aas
sahf
mov
int3
fbld
or
push
and
mov
add
cmp
mov
adc
popf
jne
lds
push
aaa
sbb
jmp
imul
add
aam
push
add
negb
shrb
or
xor
lea
cmp
mov
dec
cmp
scas
cmp
pop
jbe
pop
cwtl
sbb
adc
movsb
xor
scas
xor
cltd
sub
sbb
xor
stos
dec
ljmp
mov
xchg
pop
pop
xchg
xchg
out
sub
mov
ret
mov
cmpsl
add
iret
mov
subb
cmp
or
outsb
sar
jbe
add
dec
mov
sub
sub
cmpsl
inc
dec
nop
mov
iret
aaa
sub
mov
adc
adc
inc
inc
cwtl
inc
mov
clc
movsb
sub
xchg
jno
push
mov
rol
or
mov
jmp
push
cmpsb
scas
lret
shl
popa
sbb
data16
xlat
adc
adc
sub
lods
sbb
subl
arpl
or
mov
mov
stos
repz
js
jl
pop
and
and
mov
push
mov
clc
lods
dec
sub
data16
negb
cmp
rorb
lods
cmp
setb
inc
imul
jg
int
fidivrl
insb
cltd
mul
loope
scas
lret
rorb
decl
pop
sub
jecxz
pop
sbb
lea
pop
inc
push
or
adc
nop
jne
or
int
jmp
addr16
sub
dec
fdivrl
int
adc
mull
test
ljmp
mov
mov
ficomps
or
jmp
cwtl
adc
imul
popa
ljmp
cli
mov
pop
sub
adcb
out
cmp
cmp
pop
mov
out
mov
xchg
push
aam
mov
lret
sbb
push
xchg
jbe
in
jg
jbe
pop
rclb
xchg
outsb
outsl
movsb
mov
lcall
aam
fld1
xchg
jbe
or
adc
test
pop
pop
cs
test
fstpt
sbb
add
adc
mov
scas
push
mov
lcall
sub
rcrl
test
push
xor
pop
pop
mov
adc
ret
int3
div
add
or
xor
mov
push
dec
decl
sar
mov
jae
cmp
mov
mov
pop
insl
sub
popf
sub
aaa
flds
out
mov
lock
jo
inc
addr16
and
test
adc
jns
shrb
cltd
testl
addr16
mov
push
or
ljmp
in
in
mov
fs
push
int
and
dec
mov
mov
pop
cli
push
sbb
daa
sub
add
mov
fcoml
sub
nop
data16
xchg
ret
push
sbb
lret
or
cmp
addr16
je
scas
cmp
pop
data16
adcb
push
sti
dec
push
mov
xchg
pop
popf
adc
dec
fwait
mov
jmp
sbb
cmc
add
xor
mov
nop
sbb
xor
add
push
dec
add
mov
pop
pop
mov
cli
mov
inc
notl
mov
subb
inc
inc
sbb
or
add
rcll
lret
fs
dec
andl
subb
cmp
inc
jmp
push
mov
pop
xchg
xor
xor
cmc
pop
outsl
jo
xchg
into
push
dec
xor
xchg
pop
fisubrl
nop
das
mov
loope
not
sub
out
mov
mov
ret
mov
imul
mov
cwtl
mov
mov
mov
jae
push
aam
mov
xchg
push
test
mov
mov
sahf
js
negb
shll
in
pop
inc
mov
mov
sub
repz
imul
push
nop
subb
aam
add
push
lahf
mov
inc
xor
jbe
xor
int
pop
mov
xor
xor
inc
inc
fwait
into
test
mov
inc
call
loop
sub
aam
nop
and
ret
sbb
pusha
or
es
add
inc
dec
fisttpll
in
mov
jecxz
cmp
in
adc
push
out
cli
cmp
cltd
test
imul
jg
add
push
mov
inc
fwait
fs
ret
or
sub
ss
repnz
add
sbb
cmp
loop
into
incl
or
inc
push
pop
in
push
jno
sbb
je
ret
lea
push
inc
mov
call
pop
int
out
fisttps
mov
inc
mov
pop
shrl
xor
mov
add
data16
arpl
lds
mov
push
pop
push
bound
jg
insl
mov
outsb
shll
pop
aam
sbb
sbb
pop
xor
aam
iret
mov
lcall
sahf
mov
sub
lock
fsubp
cmpsb
arpl
std
adc
pop
lahf
mov
dec
cld
iret
add
jbe
insl
pop
jle
inc
jbe
sub
add
mov
jnp
pop
aas
cmp
out
pusha
lods
movsl
cmc
bound
ss
cld
adc
xlat
lcall
cmpsb
inc
xchg
movsl
stc
xor
cmc
pop
sub
stc
add
lahf
lret
inc
roll
jl
mov
notb
inc
mov
test
sbb
into
dec
insb
lcall
add
push
jmp
sbb
inc
hlt
popa
mov
push
stos
loopne
mov
lods
pop
push
mov
rolb
icebp
xchg
push
mov
push
and
pop
jnp
pop
mov
add
outsb
inc
stc
mov
inc
cli
jbe
fnstsw
popf
ljmp
enter
sbb
or
call
add
pop
or
jp
mov
jne
push
mov
dec
sbb
mov
pushf
push
mov
adc
hlt
add
fwait
test
xor
outsl
sbb
div
or
addl
leave
adc
clc
shlb
push
aaa
in
dec
pop
icebp
cs
or
or
shll
jle
push
iret
insb
mov
insl
sub
int3
je
ljmp
dec
adc
pop
test
test
dec
jo
aaa
and
lcall
call
xchg
add
rclb
xchg
ret
add
gs
push
loopne
dec
cmp
inc
sub
in
out
and
test
ffreep
add
cmpsb
repz
lds
fadd
subl
jmp
adc
jmp
jbe
xchg
mulb
cli
mov
call
sbb
mov
in
jo
pop
adc
push
jle
fwait
call
shll
sub
adc
and
cmpsl
or
and
insb
out
cwtl
sub
cwtl
mov
push
mov
add
cltd
inc
and
aas
mov
fidivrl
and
pop
fistl
push
dec
cltd
imul
lcall
xor
shrb
push
sbb
xor
sub
jge
mov
and
int
inc
in
pop
sub
out
fyl2xp1
mov
loop
cmpsl
sahf
adc
xchg
mov
into
repz
cmp
nop
loop
add
jmp
xchg
dec
or
add
inc
pop
data16
mov
fcmovbe
xchg
sbb
pop
xchg
xchg
sub
jnp
movsb
jns
stos
xor
ficompl
mov
adc
push
sbb
mov
fbstp
mov
xchg
lea
or
dec
into
out
test
and
mov
dec
gs
push
imul
jo
int
mov
sbb
jg
pushf
xchg
loope
addl
nop
mov
sub
lock
test
fidivrl
ljmp
add
adc
stos
sbb
push
stos
shr
iret
test
shrl
mov
into
jno
insl
sbb
sub
xchg
sub
mov
sti
iret
add
sub
and
ja
mov
ja
push
mov
mov
add
movsl
mov
data16
rorl
scas
call
or
or
fwait
xchg
jne
cli
aam
hlt
roll
mull
jmp
repz
scas
lret
aas
mov
push
pop
cmp
stos
mov
in
roll
in
pop
pop
ficomps
mov
xchg
repnz
add
dec
sbb
cmc
das
mov
push
xchg
je
mov
xchg
loop
dec
fdivl
adc
lods
sub
in
scas
ret
popl
movsl
inc
cmp
push
and
gs
ja
push
sub
sbb
iret
das
or
ret
inc
push
sbb
adc
ljmp
and
gs
enter
mov
repnz
sbb
sub
mov
fs
lcall
popa
imul
xchg
cmpl
xchg
mov
sbbb
or
stc
xor
rcrl
fidivs
icebp
inc
cwtl
insl
jle
mov
aas
cmpsl
xchg
lcall
and
in
inc
mov
dec
cmpsb
hlt
leave
inc
aas
mov
daa
cmp
mov
push
lods
add
inc
sub
mov
cmp
and
call
pop
lret
fnstsw
jle
pop
or
pop
subb
mov
mov
dec
jnp
loop
mov
sub
push
rorb
out
cmp
ljmp
scas
test
xor
jp
push
xchg
mov
and
pop
sub
jns
pushf
mov
or
jns
adc
stc
and
push
cmc
movsb
xor
add
mov
xorl
jmp
sahf
jne
push
loopne
ljmp
lret
test
repnz
and
sbb
jne
in
dec
xchg
in
movsl
js
pop
jae
and
mov
mov
gs
loope
cli
mov
popf
out
pop
fwait
dec
hlt
adc
xchg
mov
add
stos
sub
fisubl
mov
outsl
imul
dec
jb
add
pushf
dec
das
loop
and
pop
lods
push
les
push
out
test
leave
lcall
inc
rcrb
inc
nop
incl
loop
sti
daa
pop
mov
mul
jg
and
loopne
hlt
lods
sub
add
fisttpl
in
xor
fldcw
fs
int
mov
or
loopne
sbb
inc
mov
push
add
and
mov
dec
pop
sbb
sub
daa
daa
cmp
cmp
jp
scas
dec
mov
ds
inc
xchg
pusha
jns
sarl
pop
adc
add
and
sub
xchg
scas
xchg
ret
mov
adc
fsubrs
ficomps
es
popa
outsl
cmp
test
loopne
xchg
jne
daa
les
popa
test
xor
jg
into
add
xchg
popa
mov
loope
push
ret
imul
adc
inc
mov
xor
ret
mov
jb
push
mov
adc
jb
je
jno
jp
jne
adc
sti
mov
icebp
outsb
jnp
fwait
in
divb
sbb
adc
push
sub
flds
mov
popa
jbe
xor
ret
pop
aaa
mov
in
cmp
divl
xchg
push
popf
dec
jg
test
lea
rorl
hlt
add
push
jg
push
mov
and
pop
jae
jp
xchg
insl
test
pop
scas
cld
iret
jecxz
add
jnp
fcomp
dec
mov
push
inc
jo
inc
push
aaa
inc
faddl
out
mov
inc
iret
rcl
sub
pop
loopne
mov
xchg
out
jns
push
mov
fwait
icebp
nop
or
push
cmc
add
pop
pop
in
xchg
in
fisttps
or
mov
and
push
mov
mov
add
add
and
sbb
inc
cmp
rorb
ret
inc
imul
lods
push
mov
jge
sub
iret
lods
cmp
int
out
faddl
mov
loope
inc
arpl
sbb
inc
or
jmp
js
nopl
in
or
push
mov
inc
inc
daa
icebp
adc
out
sub
push
in
add
sub
test
sbb
mov
insl
fiadds
cltd
fldcw
push
lock
out
jmp
mov
push
add
mov
ret
and
out
sbb
lret
pop
push
outsb
xor
mov
mov
enter
rolb
stos
insl
push
push
mov
jo
mov
lret
loope
xor
xchg
dec
mov
pop
xor
push
cltd
mov
inc
fisttps
jno
jmp
sbb
mov
pop
cltd
popa
mov
ret
aad
cmp
into
jno
test
mov
mov
js
imul
stos
shr
sub
icebp
stos
xchg
shlb
andl
xchg
xor
rcrb
mov
adc
mov
add
jge
lds
jne
mov
inc
pop
int3
movsl
sub
lock
leave
or
add
jmp
dec
inc
aas
fdivrp
jl
cmp
dec
sbbl
and
xlat
mov
push
adc
nop
pop
aaa
mov
push
mov
xchg
dec
cld
repz
insl
jnp
mov
out
repnz
loopne
ret
add
divl
add
mov
push
and
into
int3
test
imul
xchg
jae
sub
pop
rcll
xor
jle
fidivrs
mov
cmpsl
sub
aad
mov
enter
addr16
rcrl
mov
xor
ret
int
xchg
js
sub
in
lahf
hlt
out
sbb
xor
sub
ficoml
repnz
xlat
add
fwait
mov
test
mov
xor
shrd
sbb
les
aas
adc
jmp
jmp
lahf
sub
and
into
mov
loopne
push
outsb
push
adc
mov
push
dec
jne
repz
movsl
xor
fstpl
repnz
and
inc
push
mov
xchg
jmp
xchg
jnp
in
xchg
aaa
mov
aam
push
rcrl
fdivr
loope
dec
clc
sub
pop
out
int
dec
clc
rorl
sub
push
test
shrb
cmp
mov
cmpl
mov
movsb
adc
xchg
ljmp
push
cmp
loope
in
leave
pushf
subb
push
mov
andl
into
out
jo
mov
inc
and
push
xor
sbb
cmc
mov
popa
lea
adc
inc
sub
sti
notb
cmp
xor
lea
jnp
xchg
imul
or
jbe
mov
or
cld
std
pop
push
mov
out
bnd
rcrb
icebp
adc
mov
imul
pop
inc
jne
mov
xchg
int3
inc
mov
fbld
add
test
dec
shrl
xchg
lahf
mov
stc
inc
add
xor
mov
xor
sbb
xor
mov
xchg
jmp
aam
mov
cld
xchg
cmpsb
cmc
jno
fisttps
push
push
or
jo
xor
and
cltd
dec
xchg
test
sbb
mov
jge
lock
cltd
jecxz
lock
xchg
jmp
xor
std
xchg
mov
and
imul
fwait
in
outsb
int3
daa
push
pop
pusha
stos
or
push
lds
inc
inc
mov
clc
inc
xlat
lea
fsub
and
xchg
push
mov
lcall
add
mov
out
mov
cmpsl
in
stc
arpl
je
ret
mov
bnd
mov
outsb
jecxz
int
xor
ret
out
dec
popl
in
sbb
pushf
jns
outsl
mov
add
cmp
mov
fs
mov
daa
loopne
fisubs
push
mov
push
arpl
roll
sbbl
jo
mov
cmc
pop
jecxz
mov
sti
sbb
lret
pusha
ljmp
sahf
cmpsl
sub
and
imull
imul
test
and
adc
xchg
dec
js
outsb
sar
iret
mov
xchg
lcall
outsb
cmp
dec
dec
mov
add
out
outsb
aad
jns
and
inc
out
scas
ret
inc
dec
mov
sbb
push
mov
dec
xchg
sbb
outsb
sbbb
mov
jg
xor
sub
cltd
les
lret
mov
mov
sub
mov
jne
mov
out
ja
outsb
test
aas
or
and
xchg
stc
test
out
adc
bswap
xchg
xor
sub
jp
cmp
inc
xchg
inc
int3
cmp
push
cmp
inc
fiadds
dec
sub
sub
addl
inc
jecxz
push
push
pop
adcl
push
sbb
ficompl
xor
test
in
mov
adc
bound
addr16
or
cwtl
in
pop
sbb
pop
in
movb
push
xchg
outsl
dec
rcl
cs
ljmp
dec
fadds
sub
sub
sti
call
and
xchg
xchg
lock
mov
mov
and
pop
das
or
popf
arpl
mov
aam
push
popa
inc
or
xchg
jecxz
adc
popa
xchg
add
imul
push
in
movsb
mov
xor
xor
inc
push
cmp
push
pop
std
pusha
ret
push
or
mov
mov
in
shl
sbb
or
js
fucom
test
stos
pop
fstpl
inc
outsb
ljmp
data16
add
sti
addr16
cwtl
inc
mov
movsl
cld
adc
popf
clc
inc
xor
loope
test
xchg
cmp
mov
xor
test
movsl
loop
add
pop
inc
and
in
sub
stos
jp
push
add
cmc
lods
or
pop
into
xchg
jge
sbb
in
out
push
jle
dec
mov
cmp
jp
ds
cmc
dec
cs
jecxz
push
outsb
outsl
in
paddusb
mov
xchg
cmp
ret
addr16
jns
sub
jle
adc
cmp
mov
cli
ja
ret
sub
jle
sub
cmc
rorl
jp
ja
or
push
xchg
mov
fsubl
adc
cltd
inc
push
xchg
pop
out
movq
xor
mov
stos
add
mov
rcl
lcall
ret
push
or
push
jno
jmp
push
mov
jb
jne
and
cmp
xchg
jb
inc
repz
pop
ss
movsb
jecxz
std
loop
xchg
dec
mov
jp,pn
icebp
clc
enter
xchg
stos
ror
xchg
push
xor
sar
sbb
pop
fsubl
das
and
pop
arpl
mov
mov
pop
mov
sahf
inc
jp
nop
out
sub
fists
sub
cli
pop
xchg
mov
movsb
scas
in
push
in
sub
inc
add
popa
mov
faddp
push
cmp
pop
leave
jg
mov
xchg
or
sub
pusha
cmpsb
addr16
or
xor
sub
jge
push
or
fidivrl
cmpsl
mov
adc
pop
sub
inc
push
xlat
outsl
lods
dec
cmc
and
dec
lsl
lret
out
jb
js
out
push
sbb
mov
and
bound
fwait
and
inc
push
mov
out
lods
jbe
pop
cwtl
push
pop
hlt
and
xchg
imul
imul
in
orl
push
popf
mov
xchg
xorl
out
xchg
loopne
pop
pop
dec
out
sbb
mov
ds
inc
jle
pop
filds
pop
dec
lret
or
sbb
xchg
add
inc
cltd
loop
mov
addr16
inc
mov
push
or
pushf
out
lods
sbb
pop
iret
add
sbb
push
xor
xchg
adc
nop
cmp
cmpsl
in
scas
lds
inc
cmp
lds
repz
mov
sub
pop
hlt
fcompl
pop
hlt
enter
leave
push
cmovb
daa
sub
mov
add
movsb
sub
test
inc
insb
mov
push
lahf
dec
pop
mov
mov
inc
je
xchg
mov
inc
out
incl
inc
inc
mov
imul
dec
stc
test
leave
insl
mov
push
lea
jo
mov
stc
xor
pop
xchg
mov
scas
aas
jl
xchg
or
iret
popl
adc
ss
add
cmp
call
adc
jle
repnz
addr16
push
mov
shll
movsl
int3
cs
jns
pop
les
stos
cmp
sahf
mov
lahf
push
incl
push
xchg
dec
sub
clc
jl
mov
xchg
pop
or
push
add
mov
mov
pop
jge
daa
adc
ds
aam
fdivp
pop
scas
in
mov
dec
andb
test
idivb
out
fnstenv
push
add
adc
pop
or
push
xor
xchg
movsb
sbb
imul
mov
adc
inc
add
push
scas
ret
add
inc
inc
cltd
cmp
movsl
fmul
xchg
add
std
add
mov
mov
xor
enter
mov
and
push
adc
fists
mov
pop
xchg
jmp
cmp
ss
adc
cmpsl
and
mov
out
xchg
mov
mov
pop
mov
stos
popa
push
and
repz
gs
int
ljmp
add
pop
fimull
js
cltd
mov
into
push
repnz
insb
or
pop
lds
ret
jle
lret
icebp
or
mov
outsl
xchg
int
mov
push
scas
cmp
enter
ret
sub
adc
xor
stos
cmp
pop
sub
push
or
add
mov
sub
pop
xor
and
popf
ret
lds
dec
push
xchg
ljmp
mov
fimuls
xchg
cmc
sbbl
enter
aas
cwtl
cmp
add
mov
xchg
lea
dec
ja
push
int3
or
es
inc
mov
out
push
mov
jno
mov
pop
and
decl
inc
aas
inc
push
cmpsl
adc
sbb
inc
sbb
and
add
inc
mov
lret
ss
movsl
loopne
lock
xorl
loope
ja
inc
in
lret
or
mov
mov
pusha
es
clc
inc
and
xor
mov
pop
repz
sarb
stos
and
mov
add
call
mov
pop
lods
rorb
xchg
cmp
lret
shlb
fdivl
lret
push
inc
and
add
jnp
daa
rcl
sbbb
jae
or
mov
pop
imul
lock
sub
loope
cmp
stos
lods
aas
fldenv
iret
mov
mov
sbb
pop
out
inc
mov
shlb
addl
sbb
inc
pop
add
inc
cmpsl
jge
cli
scas
mov
bound
jae
pop
enter
lods
clc
mov
cli
sub
pop
sti
pushf
sbb
movsl
jg
es
push
gs
test
movsb
push
arpl
pop
mov
sub
rorb
cld
and
dec
cmpsl
jo
je
or
pop
mov
mov
repz
adc
jl
cld
mov
jp
and
mov
xchg
jmp
stc
insl
push
push
push
xchg
daa
popf
repnz
pop
push
out
fistl
loope
sarl
std
lret
xor
les
mov
pushf
nop
and
dec
in
js
movsb
mov
jp
cmp
inc
test
decb
stos
mov
mov
push
xchg
shrl
divb
push
dec
jb
addr16
popa
mov
push
pop
lcall
dec
repz
rorl
cmp
daa
xchg
xor
xchg
dec
push
outsb
pop
jl
es
adc
mov
sbb
enter
pushl
je
popf
out
sbb
outsl
int3
aaa
mov
pop
out
push
xchg
ljmp
add
cmp
in
inc
daa
into
xchg
mov
in
mov
jns
sbb
mov
pop
push
cwtl
and
pop
push
stc
sbb
int
orb
rcrb
js
dec
shlb
aas
pop
cmpsl
out
hlt
sub
adcl
mov
out
sbb
cmp
cmp
cmpsl
bnd
ja
jmp
sbb
test
orl
mov
mov
imul
or
pusha
outsl
stos
daa
pop
out
mov
add
sarb
sbb
sbbb
in
in
std
out
ja
mov
jmp
outsl
mov
movzwl
mov
nop
jmp
pusha
insb
nop
loopne
sub
sbb
ja
cmc
int
inc
adc
mov
sub
inc
mov
scas
or
dec
aaa
mov
sbb
aas
jge
dec
cs
adc
cwtl
lret
xor
addr16
xor
mov
leave
xlat
mov
sbb
testl
cltd
icebp
outsw
mov
lods
xchg
push
ljmp
fnstsw
fdiv
mov
and
mov
mov
adc
mov
adc
xor
mov
dec
ja
lcall
mov
sub
int3
push
or
iret
mov
jb
cmp
pop
xor
bound
lret
xor
inc
loope
test
mov
pop
xor
sbb
lret
rorl
mov
or
insb
mov
movsl
enter
std
sbb
dec
leave
call
jg
popf
sarb
insb
mov
cwtl
orb
pop
xchg
rol
mov
jne
imul
pop
enter
lea
xchg
dec
pop
ret
ret
adc
jae
inc
testl
xchg
or
lret
mov
adc
adc
push
mov
xor
pushf
sbb
xchg
sbb
hlt
dec
fs
mov
in
je
insl
fs
loopne
inc
mov
xor
aam
stc
add
lret
mov
ss
xchg
jo
xchg
pop
jno
and
jne
dec
push
int
dec
sbb
and
mov
aam
aam
xchg
mov
sbb
and
lock
mov
in
xlat
xor
xchg
test
test
and
enter
sarl
or
dec
add
addr16
mov
ljmp
pusha
pop
xchg
jae
jbe
sub
sbb
int3
stc
stc
push
test
ja
xor
and
shll
mov
adc
sub
lock
in
mov
xor
subl
adc
jnp
test
lcall
jecxz
repz
pop
sti
ret
mov
lods
sbb
ret
insl
pushf
call
insb
out
fstps
cmpb
test
xor
push
mov
ret
xor
xchg
inc
jle
add
pop
xchg
mov
popa
and
pushf
pop
push
adc
adc
cmp
add
out
dec
fdivrp
stos
push
lods
sbb
clc
dec
mov
cwtl
cs
adc
jecxz
inc
pop
push
pop
mov
dec
arpl
fistpll
lret
rcrb
dec
dec
insb
mov
add
cwtl
outsl
stos
dec
std
sbb
push
and
dec
aas
sbb
loope
daa
data16
or
leave
xchg
aas
sbb
fistpll
cmp
lcall
push
stos
mov
inc
into
push
lahf
and
inc
scas
jl
in
data16
or
mov
fdivl
sbb
rcrl
xor
dec
xchg
xchg
mov
mov
sahf
lea
data16
ret
cmovo
and
xor
adc
cmp
mov
mov
ja
jo
aam
loope
jo
test
cmp
xchg
repnz
ljmp
in
or
mov
jb
push
xchg
add
mov
add
dec
add
scas
xor
incl
std
xchg
pandn
mov
hlt
cmpl
add
leave
or
inc
sahf
sahf
das
inc
in
xchg
sti
push
outsl
push
xchg
fidivrl
repnz
or
or
pop
jmp
int3
adc
jl
jbe
dec
cmp
test
sbbl
je
sub
gs
sar
mov
cmc
popa
ret
iret
jno
sbbl
jnp
jb
push
add
subl
scas
subb
pop
aas
or
es
xorb
add
int
push
xor
jnp
sbb
sub
mov
fwait
test
mov
cmp
push
pop
cld
decb
mov
les
test
or
aaa
insb
and
lods
out
add
shlb
clc
pushl
pop
mov
cmp
icebp
or
mov
cs
mov
mov
push
mov
outsb
aad
outsb
test
insl
dec
sub
fsubrs
xor
outsl
push
xchg
push
dec
ret
mov
mov
in
fwait
push
rolb
jle
and
or
xchg
or
jl
mov
jge
jns
lret
rcrl
push
push
sarb
into
and
inc
fcomps
rolb
in
xor
mov
dec
test
scas
les
imul
add
pop
fs
jle
add
push
cmp
incl
in
js
shlb
popf
subb
fs
hlt
dec
pop
dec
push
jns
rcll
pop
and
das
mov
lods
dec
js
mov
adc
push
xchg
dec
jb
inc
dec
add
ret
repnz
in
jae
lahf
ret
adc
inc
push
lods
jmp
xlat
repz
push
adc
push
xor
iret
jmp
xor
fisttpll
stos
imul
repnz
inc
mov
jge
jnp
aad
scas
cmp
lock
pop
mov
rcrb
add
xchg
out
push
das
fsubs
daa
jns
pop
inc
das
cmp
nop
ljmp
mov
movsb
mov
and
mov
push
mov
cwtl
leave
push
popf
cmp
nop
out
enter
push
gs
push
lahf
jp
jne
aad
in
sti
in
in
mov
jbe
das
mov
stc
sbb
clc
insb
hlt
pop
inc
out
jae
cltd
cltd
sbb
jg
adc
jge
lcall
insl
jns
push
lea
stos
sbbl
push
fsubrl
in
add
push
mov
cmp
dec
cmp
popf
inc
movsl
call
jne
mov
and
jle
lahf
ja
pop
inc
inc
push
mov
in
outsb
mov
lods
mov
xchg
pop
shll
jne
in
add
test
mov
out
jle
add
lock
clc
cmp
sbb
fwait
test
fwait
or
dec
clc
int
mov
add
or
ret
scas
dec
ret
inc
and
idiv
pop
push
dec
and
pop
scas
and
rcl
mov
xchg
or
xor
mov
sti
or
pop
mov
mulb
jecxz
lcall
jo
dec
pop
push
pop
jnp
lds
adc
ljmp
ret
mov
out
pop
jne
mov
pop
cmpsl
dec
xor
insl
sbb
xor
xchg
push
loopne
mov
add
in
jg
test
aas
and
pusha
inc
incl
fdiv
cmpl
lahf
push
pop
pop
mov
movsl
roll
jns
loop
sub
sub
fisttps
ret
cmp
jmp
and
pop
js
and
repz
add
aad
jmp
inc
mov
pop
rcll
mov
xchg
fstps
lods
scas
push
sub
inc
mov
flds
aas
popf
fst
js
outsb
and
je
and
sbb
mov
fistpll
cltd
ret
mov
int3
inc
pop
mov
out
das
push
or
getsec
push
mov
dec
test
pop
pop
lret
push
cmp
mov
stos
fs
mov
fisubrl
inc
lods
pushf
arpl
imul
scas
dec
loop
repnz
pusha
xchg
jne
gs
cmpsb
les
lahf
ficomps
add
idivb
hlt
dec
js
iret
or
loopne
sbb
stos
sbb
dec
sahf
xchg
pop
out
jns
adc
lcall
fsts
ret
mov
iret
rclb
push
out
dec
ja
pop
xchg
cmpb
jno
lea
push
jae,pt
cmp
or
gs
or
dec
sbb
imul
push
popaw
enter
xchg
addr16
or
pushf
sbb
or
pop
in
mov
sub
xchg
xor
sub
fmul
sub
out
and
cld
stc
cmp
xor
sahf
insb
jmp
icebp
inc
ret
sbb
mov
mov
clc
daa
jno
cmp
pop
daa
es
add
ret
fwait
mov
lret
sub
mov
sub
loope
cwtl
lcall
mov
and
das
jmp
adc
stos
fcmovb
sbb
add
fsub
push
push
adc
cmp
cmp
cs
jp
movsb
mov
jns
mov
mov
lahf
pop
pop
outsb
inc
xor
cmp
mov
sub
xchg
daa
test
ds
mov
out
pop
pushf
daa
repz
dec
fistps
mov
enter
fistpll
je
jb
inc
arpl
cmp
and
fdivl
jne
imul
flds
sub
mov
cwtl
jl
xchg
jl
repnz
stos
pop
push
call
leave
mov
in
test
jecxz
mov
into
and
fs
int3
int
int3
inc
adcl
mov
push
dec
jg
fldl2t
orb
and
ret
xlat
loopne
imul
and
lods
insb
adc
lds
push
cmp
lods
inc
push
push
jns
adc
sbb
mov
lahf
repnz
imul
pop
cvtdq2ps
adc
mov
movsb
ds
test
mov
push
cmpl
movsl
fs
cli
add
push
sub
repz
sbb
pop
in
pop
mov
xchg
or
jg
xor
mov
pop
lahf
add
inc
mov
jmp
aam
push
pop
dec
and
dec
andl
or
in
loopne
inc
int
and
mov
sbb
push
jl
ljmp
mov
popa
dec
push
movsl
push
sbb
add
jns
add
sbb
out
jo
lea
cmp
xchg
mov
or
pop
xlat
sub
lods
inc
inc
repz
cmp
and
ss
mov
scas
repnz
mov
sbb
sub
inc
or
outsb
and
pop
fsubs
or
imul
jle
sub
jge
lea
pop
add
loope
push
jl
std
push
jb
clc
out
mov
jb
clc
push
mov
lds
mov
fidivs
xchg
adc
sub
data16
adc
orb
jl
sub
and
inc
mov
xchg
dec
es
addr16
fwait
add
xchg
mov
dec
sarl
push
inc
iret
sbb
mov
fdivs
cwtl
scas
push
mov
mov
pop
mov
hlt
in
xor
orb
leave
out
testb
xchg
xor
cmp
jmp
cmp
inc
lret
mov
in
mov
cmp
adc
in
inc
jnp
mov
adc
add
gs
dec
push
push
adcb
or
loopne
ss
push
test
jo
pusha
mov
loopne
mov
inc
decb
stos
lods
jne
fdivs
inc
ret
jg
int3
aas
dec
jp
test
cmpsl
fisttpl
ss
out
or
add
mov
js
xlat
ja
sub
or
mov
mov
pop
pop
xlat
rcll
cld
sub
xchg
ffreep
sti
xor
fwait
xor
iret
jb
push
dec
pusha
dec
cmpsl
pop
nop
xlat
bound
scas
ss
addl
pushf
mov
xor
rorl
add
sbb
stos
jecxz
jbe
dec
insl
and
test
xchg
jae
xor
int3
dec
ja
fnsave
jae
xchg
lea
sub
mov
stos
sub
mov
sub
and
add
push
inc
cmp
cmpsl
stc
jmp
inc
aaa
mov
xchg
pushf
gs
mov
lret
movsb
cmc
lods
xchg
pop
cmp
mov
adc
andb
out
pop
in
insl
adc
jns
dec
or
scas
popa
adc
cmp
js
int
pusha
push
sub
push
or
lret
je
mov
inc
insl
stos
test
inc
xor
or
inc
lret
adc
subl
push
loope
ficompl
int
cmp
lods
rcrb
cld
mov
ljmp
sbb
inc
das
test
hlt
stos
lret
leave
cmp
jp
clc
jne
jp
es
dec
fs
pusha
adc
rcrl
fwait
ss
popa
clc
fucom
cli
push
das
add
enter
dec
repz
xchg
mov
stc
and
out
pop
jae
imul
jo
mov
jmp
iret
sbb
mov
fidivrs
xchg
aaa
push
and
xchg
scas
in
push
rcrl
outsb
xor
cmp
fdivrl
fwait
ret
sbb
sahf
movzbl
sub
cld
mov
jb
push
loope
loope
movsb
cbtw
inc
sbb
pop
or
jl
lahf
les
aam
repz
jg
xchg
pop
and
nop
xchg
divl
stos
xchg
lret
fisubs
aaa
adc
sub
and
cmpsb
mov
cmp
xchg
add
xor
push
sub
pop
les
xor
xlat
scas
add
outsb
lods
pop
mov
add
insl
outsl
push
lds
jl
fsubrs
in
ja
ds
fldl
pop
adc
mov
push
cmp
arpl
add
xor
push
stc
adc
insb
inc
sbb
mov
cld
mov
xlat
push
out
push
cltd
push
cmp
jae
push
enter
jg
in
sub
push
push
sarl
dec
sarb
push
pop
jae
dec
mov
into
in
mov
mov
aaa
push
xchg
dec
icebp
add
jb
jns
push
outsb
add
mov
iret
rorl
cs
jmp
jmp
loope
leave
push
mov
sub
test
pop
jl
jmp
push
push
scas
sti
imul
daa
les
xor
addr16
mov
loope
jbe
std
jecxz
test
mov
xor
add
pop
and
out
lods
pop
mov
push
jne
inc
cmp
cltd
int
punpckhwd
enter
aad
stos
dec
maskmovq
ljmp
dec
fstpl
call
push
adc
rorb
mov
mov
sbb
stos
es
bound
in
in
push
xor
jbe
mov
cltd
scas
dec
repz
or
mov
or
inc
fcoml
mov
ja
add
or
lds
je
and
shlb
or
xor
in
std
add
adc
mov
sub
push
out
ss
jae
out
aaa
test
sub
pop
cmovns
add
lods
rcll
mov
mov
ljmp
das
mov
mov
movsl
fs
mov
xchg
orb
mov
rcll
and
sbb
nop
out
dec
imul
sub
cmp
jae
loop
lods
sbb
fsubrs
sub
sti
xchg
and
adc
push
pop
xchg
lret
pop
xlat
mov
inc
or
mov
jno
popf
shl
cmc
add
dec
cmpsl
inc
movsl
call
and
mov
cmp
nop
sub
fsubrp
mov
inc
out
sbb
sub
fmuls
sub
cmpsl
xchg
inc
fdivrs
dec
xor
mov
xlat
mov
movsb
addr16
sbb
cmp
mov
inc
cmpb
pop
aam
scas
or
pop
mov
push
xchg
xor
je
pushf
jl
adc
push
std
in
sub
stos
bsr
jecxz
or
insb
hlt
sti
jecxz
mov
into
pop
xor
data16
push
dec
dec
adc
icebp
push
jbe
sub
sbb
fmull
pop
movsb
nop
cltd
popa
sbb
lods
xor
pop
fildl
push
mov
or
nop
mov
and
inc
dec
push
bound
and
int3
aas
sbb
sub
jmp
sbbl
cmp
push
or
andb
xchg
and
mov
cmp
das
jecxz
adc
mov
mov
fdivs
imul
mov
inc
scas
lahf
jmp
push
cmpb
negl
mov
jmp
dec
jge
pop
jge
clc
xchg
aad
push
fcoms
incb
jle
aam
jae
fs
and
mov
movsl
mov
in
negb
in
mov
movsl
mov
je
push
dec
mov
jecxz
das
adc
cmp
mov
int3
add
inc
pop
dec
mov
mov
mov
mov
xchg
mov
insb
das
lcall
leave
fldl
cmpsb
nop
dec
in
shr
inc
sub
jmp
adc
rolb
pavgw
and
inc
cmovge
in
test
inc
daa
adc
repz
mov
aas
gs
sbb
add
clc
lcall
sbb
fisttpll
sti
test
ret
xchg
pusha
stos
sbbb
push
add
xor
push
xchg
push
addb
lcall
hlt
push
data16
xchg
sbb
loop
je
adc
mov
sbbb
je
mov
or
daa
push
mov
inc
mov
jecxz
in
mov
inc
fucomi
xchg
in
daa
xor
subl
sbbl
insb
test
outsl
mov
mov
pop
xor
and
lret
stos
add
addr16
jbe
repnz
pop
push
push
xor
je
cmp
adc
push
clc
sub
pop
popf
jmp
cwtl
ret
dec
imulb
dec
lock
out
int
pop
sbb
dec
psubd
lret
ret
into
sub
xchg
or
add
dec
mov
pop
push
mov
adc
or
sbb
inc
dec
jbe
jecxz
icebp
lret
mov
loopne
sub
leave
subb
fwait
sub
aad
daa
outsl
loope
in
xchg
cli
movsb
xchg
into
loopne
mov
outsl
inc
pop
sub
fldcw
adc
sbb
cmp
add
or
xchg
cmp
inc
and
jb
fcoms
and
imul
sahf
or
adc
aas
sar
insl
popf
and
inc
dec
mov
xchg
lods
aas
test
adc
dec
in
add
in
xchg
mov
imul
shlb
out
inc
in
int
icebp
std
ret
push
test
xlat
call
cwtl
ja
lods
jl
jmp
in
inc
in
mov
fidivrs
jl
pop
push
nop
adc
loop
sysenter
push
cmp
push
lock
push
shr
pop
and
shlb
rorb
cmp
rcrl
mov
sub
sub
inc
xchg
cli
inc
rol
sub
adc
mov
mov
mov
mov
xchg
mov
pop
dec
fiaddl
dec
icebp
xchg
xor
imul
sbb
or
sahf
mov
inc
fdivs
fidivrs
mov
rorb
add
stos
jge
push
dec
sub
loopne
add
lods
jge
mov
pop
fadds
je
adc
leave
cmc
idivl
mov
jl
cmp
movl
loopne
sub
clts
imul
push
pop
stos
pop
dec
roll
and
or
int
push
pop
sarl
popf
lds
xchg
add
cmpsl
mov
adc
jmp
in
cmc
jmp
pop
lret
icebp
movsb
sbb
xchg
shrd
add
sub
sub
jmp
popf
scas
pop
movsl
pop
sahf
push
pop
call
mov
mov
es
pop
push
xchg
jns
or
mov
in
std
adc
popf
dec
add
inc
dec
roll
imul
dec
sbb
mov
filds
mov
movsl
xor
jae
cmc
cmpsl
or
dec
sub
aad
xor
mov
inc
les
mov
dec
jae
adc
pop
jnp
xor
lret
insb
dec
lret
lds
or
into
imul
push
ja
sti
add
xchg
pop
rcrb
xor
dec
pop
jp
sub
mov
aas
insl
iret
popf
xorb
mov
xchg
fldl2t
loopne
js
cmp
dec
iret
mov
pushf
xchg
dec
pushf
lods
xchg
shll
enter
aam
je
scas
lock
imul
cld
lret
mov
xchg
xchg
jbe
ja
fisubl
sti
ret
std
dec
xchg
addr16
mov
cwtl
and
leave
hlt
ret
dec
pop
pop
or
arpl
out
xchg
shlb
mov
shl
mov
iret
push
lea
xorb
dec
fstpt
mov
shlb
scas
xor
cmpl
pop
mov
stos
repnz
inc
cvtps2pi
push
mov
push
pand
cmp
shll
insb
push
pop
dec
xchg
pop
mov
dec
mov
shl
fidivrl
jp
sbb
xor
mov
xchg
jp
test
mov
icebp
xchg
in
xchg
call
outsl
jge
dec
pop
lret
insl
add
mov
outsl
dec
aas
push
cmp
mov
adc
aam
cli
loopne
popa
sarb
mov
mov
mov
and
fildl
scas
add
in
ja
movl
or
cmp
les
bound
mov
test
adc
fisttpl
or
rorl
sub
sbb
fucomi
xchg
jg
sahf
dec
les
mov
mov
ja
movsl
ret
pop
call
cmpsl
cmpsl
loopne
repz
stos
lret
sbb
lcall
outsb
dec
lcall
scas
jge
jae
test
nop
xor
and
fiadds
mov
add
cmp
out
rol
jnp
insl
aaa
push
pusha
sbb
iret
loopne
xor
in
int3
adc
pop
cmp
adc
loop
push
sahf
cs
mov
test
popa
or
pop
fisubrs
fmull
fbstp
lcall
dec
sub
clc
ds
rcr
cld
inc
mov
in
test
pop
out
jp
sbb
or
xor
sbb
pop
call
mov
or
call
push
mov
hlt
stos
dec
insb
cmp
aad
xchg
out
stos
dec
das
pop
add
insl
cmp
mov
scas
xor
test
loop
cmp
leave
adc
outsl
xor
ret
push
mov
fsubr
push
ret
cmpsl
int
sbb
and
push
mov
gs
pop
pop
mov
ret
mov
scas
sbb
jmp
push
mov
ret
out
insb
jo
xchg
inc
mov
dec
adc
subb
sub
jo
jmp
jge
out
dec
mov
jl
or
icebp
mov
gs
stos
sbb
add
scas
rcrl
adc
leave
push
clc
push
adc
stos
jnp
outsb
std
inc
out
sub
lods
andl
gs
cmc
data16
dec
jg
fisubl
ret
sti
or
adc
in
lods
pushf
mov
mov
mov
xlat
mov
mov
pop
ret
inc
insb
arpl
and
imul
ja
jl
and
jno
xchg
xor
add
clc
mov
iret
or
lods
xchg
lods
dec
mov
mov
inc
add
cmp
mov
push
loop
and
add
adc
clc
cs
push
mov
out
jg
push
ret
and
sbb
and
test
fwait
cwtl
ret
out
mov
dec
in
pop
xor
add
ret
xor
or
rcll
mov
shl
inc
pop
mov
out
loop
or
push
out
fidivrl
nop
daa
orl
jl
jmp
insl
mov
pop
or
sub
inc
inc
or
dec
insl
sub
pop
or
je
iret
incb
cltd
leave
lcall
lcall
in
outsb
ljmp
xchg
jns
lcall
fldcw
or
mov
pop
push
mov
lea
ja
arpl
adc
mov
jle
lret
inc
icebp
jns
mov
mov
arpl
int3
pop
out
adcl
test
scas
data16
jl
jns
rorb
or
leave
mov
adc
jg
push
lcall
xchg
inc
clc
push
pop
fs
cs
push
adc
loop
notl
orl
lret
sbb
pop
insb
and
sbb
cmp
lret
and
sbb
lret
repz
mov
loope
or
pop
loop
movsl
hlt
pop
inc
sub
bound
adc
loopne
scas
andb
push
cmp
pop
pop
cli
sub
stc
jecxz
sub
lods
jbe
cmpsb
sub
cmpb
xlat
in
pop
test
add
fdivs
ficoml
mov
or
in
mov
pop
movsl
call
ljmp
dec
sbb
pop
mov
and
clc
cwtl
bnd
sbb
jl
push
push
imul
leave
clc
sub
sub
push
data16
mov
iret
sub
mov
fstpt
js
jp
in
rcll
mov
cmpb
fcomps
push
sbb
aam
push
adc
jp
jl
aad
pop
mov
adc
fidivrl
sahf
jecxz
xchg
fldenv
in
arpl
cmpsl
inc
repz
dec
hlt
jns
dec
test
xor
imul
jp
xchg
mov
pop
shrb
add
ret
add
insl
cwtl
cmpsl
sbb
daa
and
fsubl
pop
cli
and
xchg
test
xlat
hlt
dec
adc
fsts
jo
faddp
pop
mov
pushf
mov
pop
sahf
lea
pop
mov
shl
pushf
inc
and
test
pop
pop
lret
fs
popa
jnp
daa
fdivr
sahf
popa
sbb
neg
lahf
or
mov
fldcw
pop
push
in
xor
stos
mov
xchg
cmp
or
pop
pop
call
sarb
popa
jo
movsb
mov
pop
jmp
add
push
lret
mov
sub
xor
jp
jo
inc
mov
push
sub
xchg
pop
into
jge
pusha
dec
shrb
ror
int
popf
js,pn
inc
lock
sub
xchg
mov
mov
jo
cmp
add
jmp
stos
pop
shlb
push
sub
inc
xchg
inc
idivl
mov
cli
imul
movsb
gs
rolb
aas
and
lret
scas
ds
hlt
xchg
jae
iret
xchg
xorb
xor
lahf
inc
dec
lds
test
out
cs
test
ficoms
push
xor
stos
mov
dec
fwait
lods
jae
cmp
xchg
repz
jbe
imul
sbb
sti
push
ljmp
mov
mov
xor
rcll
aad
ret
mov
jecxz
ja
jae
movsl
add
cmp
mov
push
jl
pushf
inc
int
xor
cmp
xchg
push
dec
scas
cmp
aad
ja
dec
lods
scas
inc
dec
adc
pop
stc
pop
add
movsb
inc
sbb
test
dec
jbe
adcl
push
add
gs
mov
xor
popa
xchg
clc
sahf
loop
lcall
das
and
mov
sbb
aaa
call
aad
cmp
lahf
or
pop
enter
lret
inc
cmp
add
or
and
lret
push
push
or
into
int
xor
jp
hlt
insl
mov
push
icebp
fistl
in
cmp
outsb
mov
repnz
addr16
jecxz
mov
inc
ja
daa
xor
or
das
push
push
pop
hlt
lods
fstl
fwait
add
test
inc
addr16
sub
sahf
call
push
mov
sbb
dec
jns
ljmp
mov
cmc
adc
repz
add
cmp
pop
out
jp
mov
mov
inc
pop
inc
pop
inc
pop
jns
daa
imul
push
dec
rorb
mov
test
push
ficomps
mov
cmpb
mov
mov
cli
add
pop
test
push
les
lcall
jno
repnz
enter
sub
pop
cmpb
test
stos
sbb
rcl
xchg
xorl
mov
mov
in
sub
mov
xchg
sub
pop
lahf
mov
xor
adc
mov
stos
lock
negb
mulb
testl
sahf
in
cmc
out
pop
pop
push
enter
sbb
add
mov
nop
jle
sub
cmp
and
loopne
add
pop
loop
mov
fnstsw
popf
sub
test
mov
mov
mov
mov
and
jbe
in
mov
mov
dec
lret
push
cmc
cmpsb
jge
or
mull
xor
xchg
out
aaa
and
out
cmp
gs
xchg
lods
lret
test
bound
jecxz
push
in
fdivrs
adc
lret
mov
jecxz
call
mov
call
cltd
movsl
testl
xchg
jl
add
push
dec
lock
icebp
or
cld
adc
lds
addr16
or
mov
cmp
pop
push
add
inc
insb
cmp
sbb
aad
pop
xor
push
add
adc
add
or
shlb
les
push
movsl
fmulp
sbb
ret
mov
shlb
test
fs
or
popl
dec
lea
inc
mov
pop
xchg
sub
jle
adc
dec
lea
cmp
shrb
xchg
shlb
jae
ljmp
mov
movb
cmpsb
loope
cmp
mov
int3
jne
jno
jle
mov
daa
pushf
add
ret
and
push
fimuls
movl
sub
in
frstor
mov
sbb
leave
out
mov
movsl
daa
jae
inc
mov
rorb
mov
out
xchg
mov
lret
test
out
das
pop
cmpsl
test
shrb
mov
pop
sub
aas
xor
pop
fistpll
push
pop
cltd
pop
adcb
jns
stos
fisubl
bound
andl
xorb
std
cwtl
movsl
out
add
sbb
push
cmp
loopne
adc
insl
cs
aad
xchg
arpl
cmpl
mov
aam
das
or
fcmovne
dec
cltd
lahf
jmp
iret
adc
jmp
dec
jno
sub
mov
in
mov
pop
popf
arpl
adc
or
mov
insl
mov
adc
test
jecxz
dec
inc
movb
call
mov
and
orl
stos
cmp
test
jno
dec
into
sbb
cmp
push
fwait
cmp
lcall
inc
mov
pop
push
add
mov
cld
xchg
lods
mov
cmp
cmp
icebp
js
data16
daa
cmp
dec
jge
push
or
ds
movsl
add
xchg
outsb
xchg
movsl
xchg
xchg
daa
dec
aas
inc
inc
cs
or
in
sbb
mov
and
cwtl
cwtl
imul
cmp
push
ds
sbb
xchg
cmp
lods
jg
jnp
test
es
ret
pop
cmp
cwtl
mov
add
xchg
ja
out
fcompl
outsb
push
push
clc
pop
or
je
pushf
rorl
add
cmp
mov
imul
and
stos
int
push
daa
hlt
or
add
pop
sub
sbb
xchg
cwtl
adc
insl
mov
add
push
pop
push
push
cmp
mov
lods
ljmp
enter
add
xchg
sahf
movsl
sahf
xchg
sbbb
mov
cmp
inc
mulb
push
push
and
jmp
adc
cli
dec
push
outsb
jecxz
test
or
les
cmp
addr16
cld
fsubrl
pop
nop
out
fcmovnu
and
imul
add
popa
ljmp
ljmp
nop
dec
out
cltd
jmp
test
cs
popf
mov
jno
rol
fstl
lret
pop
gs
ljmp
imul
imul
add
or
fistpll
push
inc
push
movsl
sti
mov
das
inc
xchg
lods
mov
sub
mov
mov
push
pop
cli
sbbb
pop
int3
scas
jge
fwait
arpl
pop
ja
xchg
test
push
rcr
jp
adc
rorl
roll
rol
cld
cmc
pop
mov
fsubl
dec
pushf
add
mov
int3
hlt
je
out
scas
sbb
and
in
xchg
mov
imul
add
dec
cwtl
ret
pop
add
dec
inc
jb
filds
or
add
aaa
dec
mov
addl
jo
in
mov
push
sub
shll
pop
xchg
lcall
add
fisttps
mov
popf
into
cmp
mov
add
cmp
mov
test
sti
pop
push
shrb
jle
movsl
shr
cmp
rcrl
shrb
jns
jge
gs
dec
pop
xchg
ret
int3
repz
sub
daa
inc
lock
out
incb
inc
stc
jns
out
xlat
inc
cmc
sub
into
dec
es
push
or
add
dec
js
lods
loop
cmpsl
cmpsl
loope
aam
add
push
lret
xor
loopne
sub
xor
lds
mov
adc
daa
aad
fs
jb
fs
mov
inc
jo
mov
inc
stc
repnz
jmp
xchg
gs
sub
xchg
iret
out
xchg
lock
addr16
in
add
jnp
fisubs
mov
subl
dec
mov
mov
mov
pusha
sti
and
hlt
mov
sub
iret
sbb
or
cmc
and
lcall
shlb
cmp
inc
ret
cltd
xchg
fmull
add
rcll
dec
enter
mov
les
mov
mov
dec
add
insb
imul
or
cmpsl
or
jns
sub
sbb
je
push
jbe
test
sahf
sub
cli
cli
movl
push
adc
ret
xchg
lock
jae
jmp
fimuls
pop
out
lock
cmp
outsl
xchg
addr16
mull
rclb
cmpsb
jmp
pop
sub
lret
mov
lea
adcb
lea
sbb
imul
mov
pop
mov
xchg
pop
mov
aad
arpl
mov
inc
inc
fdivrl
sub
and
popf
ja
out
push
enter
popf
cmpsb
in
test
xor
rclb
test
movsb
push
cld
adc
pop
test
mov
and
xor
loope
jp
sbb
clc
les
sti
dec
ret
mov
mov
cltd
xor
shll
enter
mov
xchg
dec
cmp
rcrb
iret
pop
hlt
cli
inc
loop
inc
jno
lcall
add
mov
ds
adc
rclb
xchg
repnz
call
mov
mov
xchg
int3
pop
mov
mov
and
test
xchg
insb
and
jmp
cmp
repz
inc
enter
out
add
jbe
xchg
scas
jae
xor
jmp
xlat
les
add
mov
add
bnd
mov
add
cmc
movsb
sar
dec
ds
and
sti
cmp
movsb
pop
jno
push
mov
adc
push
or
iret
xchg
mov
pop
in
das
pop
jnp
xchg
xor
and
and
cmp
push
and
ret
cmp
outsl
and
mov
mov
test
pop
lret
pop
xchg
sub
lds
sbb
out
ljmp
psubsb
jns
jne
fsubl
and
push
xor
xchg
push
ret
jge
jne
sbb
adc
mov
sbb
xchg
and
xor
into
js
lods
fildl
imul
mov
sti
ret
cld
out
std
xor
mov
cmp
lds
icebp
fstpl
imul
mov
mov
ror
sub
dec
sbb
cli
pop
add
cmp
bound
orl
mov
lea
push
gs
arpl
or
sub
pop
das
xor
in
add
xchg
mov
js
add
sahf
mov
push
xchg
fistl
ret
jp
call
aas
idiv
pop
or
and
popa
and
mov
and
ss
setp
add
loope
int3
enter
pop
mov
fcmovu
js
pop
cwtl
aad
rcl
xchg
adc
mov
iret
cmpsl
push
xor
mov
imul
mov
push
ja
sub
add
outsl
push
or
dec
or
or
inc
push
xor
mov
dec
lcall
dec
decb
shrl
mov
push
rclb
xor
pavgw
je
loope
gs
sbb
jae
scas
xor
sbb
out
pop
in
xor
leave
xor
jno
fwait
in
jno
and
push
movsl
cli
int
cmp
jp
push
fidivs
rep
add
dec
inc
inc
mov
cmp
mov
dec
popf
lods
push
dec
jae
mov
movsl
jl
dec
inc
cmp
inc
sub
nop
in
movsl
sub
movsl
cmp
ja
cmp
sahf
adc
xchg
jl
sahf
enter
xor
jns
aas
sbb
outsl
jl
push
sbbl
call
cmp
fldt
ficompl
sbb
out
cmp
mov
orb
push
mov
mov
push
add
nop
inc
pop
pusha
js
jnp
mov
xor
lret
shrb
xor
loopne
pop
cmpsl
jp
andb
adc
push
mov
cs
cwtl
or
imul
stos
pop
inc
jecxz
cwtl
inc
sub
call
fstpt
data16
fcompl
sub
ret
sbb
lcall
pop
pop
into
dec
mov
in
mov
sub
mov
and
sub
jge
and
add
pop
std
xor
push
or
xchg
pop
mov
loope
subl
push
in
scas
in
xor
js
push
xor
sbbb
shll
xchg
movsl
adc
repnz
mov
mov
scas
popa
pop
sub
push
sub
mov
push
mov
xor
aas
and
cmp
pushf
adc
rcll
test
enter
inc
mov
roll
int3
dec
int3
xchg
mov
cs
sub
cld
fwait
sbb
push
lcall
xchg
loope
adc
pop
mov
mov
adc
jb
pop
xchg
adcb
mov
dec
or
out
lcall
loope
cli
adc
push
dec
dec
outsl
popf
sub
mov
cmpsl
testl
mov
pop
insl
fidivrl
inc
xchg
leave
xchg
push
mov
sbb
pop
and
test
pop
shl
scas
cs
ret
or
insl
xchg
xchg
cmpsl
data16
xor
mov
mov
aam
add
adc
movsb
call
ljmp
jae
and
mul
cmp
jle
xchg
push
push
xchg
mov
inc
inc
aad
push
sub
mov
jg
jl
jns
aas
insb
nop
sarl
or
test
add
push
mov
jno
push
out
sarl
ret
xchg
push
pop
inc
sbb
dec
jge
lahf
popa
mov
ljmp
divb
mov
jo
hlt
cld
push
bound
lret
scas
push
or
rcll
jmp
mov
rcr
out
mov
or
call
push
sbb
mov
xor
enter
sahf
popf
fwait
inc
out
and
pop
sbb
inc
sub
inc
iret
fwait
stc
add
push
sti
jmp
sub
rolb
cmpsl
mov
scas
mov
lahf
and
or
insl
inc
ljmp
mov
pop
mov
lods
inc
xlat
sti
jne
inc
push
das
lret
repnz
sub
push
mov
loopne
mov
inc
in
gs
pop
inc
push
subl
shrl
lcall
aad
outsl
add
and
sub
repz
arpl
jle
roll
mov
jo
cmpb
into
inc
inc
adc
xor
jecxz
insb
les
test
dec
mov
jb
pop
xor
flds
push
or
lea
test
dec
mov
mov
ret
or
les
test
mov
cmp
mov
stc
jno
sub
cmc
inc
pop
cmpsb
cltd
inc
jl
std
dec
jge
push
mov
dec
jbe
popa
das
pop
stc
pushf
movsl
test
adc
sbb
and
lds
push
dec
mov
ja
cmp
sahf
sub
sbb
popf
and
pop
xchg
dec
sti
cmp
xor
dec
cmp
popf
xorl
fst
lahf
push
call
pop
inc
shl
aam
movsl
adc
sbbb
dec
pop
mov
jecxz
xor
pop
lcall
imul
jns
repz
mov
in
test
adc
adc
adc
out
rolb
inc
push
inc
push
fmuls
xor
mov
nop
and
xor
lcall
add
mov
fimuls
mov
push
call
sbb
arpl
aas
or
je
cwtl
adc
mov
xor
push
sbb
aaa
mov
in
jbe
jns
outsl
fsubrs
push
push
mov
xor
jbe
mov
fisttpl
sbb
push
fcomps
xor
test
add
pop
and
test
push
ds
sub
mov
ret
sbb
cld
xchg
lock
mov
mull
push
or
fisubl
into
push
pop
imul
mov
or
or
or
mov
ja
push
in
pop
jo
or
fdivrp
ljmp
ljmp
pop
cmp
imul
mov
sub
jle
out
in
aad
pop
inc
sub
dec
dec
push
insb
pop
rclb
stc
int3
fidivl
push
popl
or
movsl
out
push
sbbb
outsb
iret
movsb
add
mov
mov
mov
dec
sahf
scas
and
ret
xchg
mov
add
cld
cmp
pop
adc
inc
push
sub
push
push
inc
add
lds
gs
sub
cmp
push
add
push
fdivrp
mov
shll
cs
mov
stc
fsubs
pop
cmp
mull
repnz
xchg
andl
jmp
fs
push
stos
mov
lods
jg
out
cmc
push
fstenv
jl
xor
or
movups
jp
ja
jmp
pop
pop
sbb
inc
xor
cmp
call
cli
adc
loope
cs
and
add
addr16
and
scas
cmpsb
cmp
adc
xchg
test
fldcw
mov
push
fs
pushf
add
inc
fadd
adc
orb
pusha
cmp
inc
mov
push
fwait
pop
cmp
out
xor
fdiv
out
and
lock
dec
ret
jmp
or
cmp
ds
sbb
fsubrs
mov
pop
les
rclb
dec
mov
popa
mov
hlt
mov
sar
mov
fiaddl
lahf
addb
pop
shll
pushl
mov
push
cmpsb
dec
dec
lds
mov
ljmp
outsb
out
xor
lds
das
cmp
and
push
cmpsb
add
scas
add
pop
xlat
rcrl
adc
lahf
sti
or
mov
rcl
leave
pop
outsb
mov
pop
ss
jge
adc
test
aam
in
ljmp
jge
push
jb
xor
add
cwtl
mov
pop
and
arpl
and
sbb
push
daa
scas
cwtl
inc
outsl
mov
jno
sub
xchg
out
sbb
mov
xor
xor
mov
fwait
adc
xor
ds
popf
mov
nop
adc
xor
data16
sbb
stc
xchg
clc
rcl
iret
ret
mov
gs
mov
cmp
test
lods
cmovle
arpl
clc
aaa
ficoml
sub
dec
sbb
in
add
inc
xchg
inc
adc
mov
push
push
inc
push
xor
daa
and
push
add
fistps
loop
aad
push
fisubs
inc
add
sbb
stos
es
xchg
enter
shr
or
jge
popf
add
xchg
ret
xchg
add
xchg
pavgb
sub
dec
in
sbb
xchg
inc
fwait
cmp
and
or
jmp
pop
xlat
fs
out
scas
fmull
out
dec
out
lock
movswl
das
lds
call
je
cmc
stos
aas
jno
stos
pop
mov
shrb
das
shlb
fnstsw
and
andl
jb
fucomi
mov
dec
xchg
jmp
cmp
fwait
inc
inc
push
aas
loopne
fidivrl
or
dec
adc
lods
iret
dec
push
data16
push
in
sub
fildll
pop
jno
mov
sbb
mov
mov
push
inc
aas
push
bnd
pop
inc
js
nop
mov
mov
ja
dec
arpl
xor
enter
push
sbb
push
andl
in
xchg
cld
and
lea
addr16
lret
mov
mov
cltd
arpl
imul
sub
outsl
mov
lcall
push
sub
cmp
mov
xchg
sbb
mov
dec
cmpsb
insb
jle
js
jne
out
and
sarb
mov
add
xchg
rcll
mov
daa
dec
andl
or
inc
push
mov
jnp
je
pop
xlat
xor
test
cmp
jmp
xchg
jo
dec
fidivl
xor
data16
mov
pop
clc
mov
dec
adc
push
sbb
mov
cmp
icebp
faddl
jp
and
push
into
dec
je
std
mov
sbb
scas
pushf
jne
ds
data16
dec
imul
mov
pop
shlb
dec
std
mov
jno
pop
inc
movb
dec
dec
ret
cmp
ficomps
add
push
pop
insb
cs
and
pop
push
jae
data16
xor
push
lahf
push
cltd
movsl
nop
jbe
sbb
sar
rorl
enter
adc
test
sub
mov
fmull
lcall
das
fwait
inc
mov
or
add
test
or
lea
loope
and
sbb
ja
jmp
mov
dec
dec
mov
xchg
mov
cmp
or
jno
add
scas
pushl
xor
mov
sub
aas
jno
lret
cld
dec
sbbl
or
shlb
pop
add
add
popa
cmp
lahf
out
iret
cli
into
xchg
push
daa
cmpsl
mov
cmp
aaa
fists
cmpsb
dec
out
stos
sub
daa
cmpsl
fwait
int3
dec
sub
std
inc
testb
adc
stos
push
sbb
mov
pop
data16
mov
mov
xchg
dec
sub
mov
push
jl
and
mov
jo
test
das
xchg
push
pushl
cwtl
or
leave
fists
push
inc
sub
pop
dec
test
in
jge
daa
lcall
and
pop
outsb
lea
je
or
and
cld
js
and
aas
aam
cli
mov
pop
test
xchg
movsb
leave
and
xchg
pop
int
inc
in
xchg
add
cmp
mov
mov
sub
mov
add
and
inc
test
jg
lds
mov
cli
mull
insl
in
mov
sub
adc
inc
pop
xchg
movsb
popa
pop
xchg
aad
cmp
and
les
sub
sbb
cmp
or
mov
mov
lods
xchg
pop
mov
jno
inc
pop
icebp
mov
cld
lret
jmp
xor
out
pop
aad
in
jl
xlat
mov
gs
mov
in
mov
push
add
sub
sub
roll
call
pop
fidivl
add
cmc
cmpsb
ret
jae
fs
jle
jnp
pop
inc
and
xchg
inc
and
cmp
stos
mov
movsl
cmc
ja
inc
dec
gs
mull
jns
data16
sub
cli
leave
inc
aam
mov
mov
mov
mov
test
push
es
pop
sbb
movsl
popf
mov
dec
lahf
cwtl
je
mul
les
mov
pop
adc
sub
sbb
dec
add
inc
lea
or
push
pop
std
subb
xchg
jge
xor
cld
cmp
sbb
inc
into
jecxz
sbb
mov
fs
lock
inc
div
push
or
je
cltd
mov
xor
or
jecxz
pusha
dec
in
add
and
jno
lods
push
icebp
jne
dec
mov
mov
je
cmp
int
pop
aad
les
pop
jae
xchg
test
arpl
jecxz
sarl
push
add
xchg
sbb
stos
inc
add
inc
mov
outsl
rcrb
adc
push
movsl
adc
pop
pushl
inc
lock
orb
outsl
aaa
into
jns
pop
mov
dec
aad
cli
iret
push
sti
pop
cmc
aad
and
adc
and
test
aam
add
push
iret
mov
push
dec
push
loop
dec
add
pop
mov
subl
scas
scas
cmpsl
addr16
xchg
test
clc
xor
test
je
or
push
int3
in
xor
fnstcw
dec
je
sub
cli
clc
cmpsl
ret
lahf
ja
adc
cmp
pop
lret
mov
or
inc
jecxz
loopw
repz
jmp
rep
movsl
cmp
test
ret
and
aaa
xchg
fsubrs
mov
shlb
loop
loop
in
gs
mov
mov
movsl
push
scas
rcr
mov
cli
cmp
shr
inc
xchg
dec
inc
daa
xchg
outsl
jmp
arpl
loopne
push
stos
cmp
and
out
or
and
mov
jg
scas
push
xchg
inc
ss
aas
xor
push
xor
scas
add
sub
adc
int
xchg
xchg
xchg
and
cmpsb
dec
loopne
popa
sub
outsb
mov
cld
addb
xchg
dec
xchg
adc
jnp
add
mov
push
push
test
loopne
shrb
push
and
inc
xchg
lcall
dec
test
push
clc
mov
daa
mov
mov
mov
or
dec
sbb
jo
lcall
push
jl
in
mov
xchg
jnp
fs
or
dec
lods
hlt
std
xchg
mov
adc
pushl
pushf
int3
jb
or
jp
fs
lods
popa
or
inc
inc
adc
aaa
fildl
push
push
pusha
shlb
mov
dec
mov
ret
repz
inc
mov
shrb
popf
push
fcompl
jne
fisttpl
and
push
cs
push
je
loope
pop
mov
lds
xchg
adc
out
adc
pop
xor
mov
in
insb
pusha
jne
sbb
flds
fidivl
and
add
cmp
xchg
mov
and
fimuls
pop
pushf
or
xor
int3
xchg
out
dec
das
inc
sbb
jmp
sbb
push
ret
jb
mov
mov
fbstp
xor
mov
lahf
sub
sbb
dec
dec
sarl
stos
mov
icebp
and
mov
push
sbb
out
add
cmp
std
push
fmuls
cli
das
and
test
sarb
insl
xlat
cs
xor
push
mov
jbe
out
shr
addr16
cwtl
jns
dec
push
and
scas
jb
das
mull
jo
dec
jbe
mov
movsb
test
sbb
or
inc
leave
ror
cwtl
pop
rcrl
ret
mov
in
adc
lret
jge
repz
pop
test
sahf
mov
addr16
mov
pop
sbb
out
mov
or
cli
out
test
xchg
loopne
jnp
and
mov
cltd
aam
jbe
sbbb
les
inc
lea
enter
jecxz
jl
jmp
xchg
insl
or
add
mov
jg
push
xor
out
loop
fiadds
pop
jbe
js
sti
push
and
call
xchg
cmp
fwait
mov
stc
insl
adc
in
adc
push
push
into
cmc
jb
mov
and
cmp
out
scas
clc
mov
adcb
push
dec
push
sub
cmp
mov
mov
arpl
jae
in
jb
dec
iret
cmpsb
sub
ds
cld
xchg
xchg
or
jae
push
add
sbb
in
pop
mov
mov
mov
or
sub
or
icebp
jecxz
xorl
mov
rcrl
add
fbstp
pop
xlat
adc
cmpxchg
push
shlb
imull
jb
fldenv
jge
repz
or
loop
add
imul
mov
cmp
push
mov
pop
mov
inc
sbbl
adc
inc
jg
cmp
jb
ljmp
xchg
fsubrp
xchg
jmp
push
mov
fmuls
popa
out
mov
inc
xor
sbb
add
mov
pextrw
pop
rcrb
dec
sahf
adc
xchg
pushl
or
mov
sub
cwtl
data16
sarl
dec
jbe
dec
rorl
push
and
inc
rclb
iret
xchg
inc
and
mov
movl
aad
push
cmp
or
imul
mov
xchg
jl
aam
clc
mov
fsubs
dec
ljmp
pop
push
push
in
jb
call
mov
mov
or
arpl
adc
inc
out
or
pop
mov
lret
mov
scas
out
js
xor
jns
repnz
pusha
xorb
cmpsl
pop
jl
cmp
xor
shrb
jbe
jnp
cld
push
das
in
sti
mov
lcall
xor
sbb
sub
mov
and
dec
cmp
adc
pusha
insl
adc
mov
xchg
seto
mov
lods
jecxz
xchg
movsl
xchg
adc
ja
je
sub
jecxz
in
mov
push
fldt
mov
jecxz
sub
iret
inc
pushf
aas
and
or
rorl
pop
int
jecxz
xchg
inc
unpcklps
mov
sbb
push
movsb
push
dec
mov
ror
add
push
cltd
push
inc
sbb
movb
adc
xchg
mov
push
xor
stos
outsl
je
pop
dec
sub
cmp
push
jbe
scas
cmp
hlt
ds
xchg
lods
and
pusha
test
or
lahf
and
jo,pn
dec
dec
push
jmp
std
fwait
dec
and
es
xchg
pop
out
inc
push
aam
mov
jmp
jb
test
sub
movsl
popf
sbb
xchg
lock
adc
movb
adc
mov
repz
hlt
mov
sbb
xchg
sbb
jo
push
sub
cwtl
je
or
cli
arpl
loop
push
fwait
mov
adc
jnp
mov
xchg
testl
mov
les
push
add
int3
cli
popa
xchg
jns
clc
rol
or
daa
xchg
ja
and
cs
push
push
data16
jb
inc
dec
ja
into
push
test
or
pop
lret
pusha
sub
outsb
into
cmp
pop
out
sub
shll
xchg
js
lahf
inc
daa
scas
add
idivl
fnstsw
test
push
add
mov
mov
jnp
mov
ret
and
or
adc
test
and
imul
adc
jbe
cmp
and
fidivrl
out
iret
sbb
movsb
pop
adc
mov
outsb
repnz
scas
test
out
xor
or
js
and
mov
pmulhuw
insl
mov
sub
ret
mov
sub
inc
repz
popf
adc
push
xchg
adc
add
lahf
xor
xchg
outsl
mov
mov
fiaddl
cmpsl
mov
push
mov
int3
arpl
addr16
mov
sar
subb
adc
lods
test
jle
out
sbb
test
jmp
fisubl
xor
ds
test
cltd
mov
fwait
mov
xchg
out
pushf
out
fldl
pushf
or
jmp
fistpl
scas
or
jle
decb
mov
mov
pop
je
cmp
cmp
enter
and
jmp
inc
or
in
outsb
in
icebp
mov
divb
sub
pop
iret
loopne
sub
pop
mov
pop
or
and
xorb
push
aad
sub
sub
push
loop
push
cld
xchg
nop
popa
leave
scas
ds
jp
push
mov
add
sub
rcrl
dec
push
push
fs
cmp
les
jp
mov
xchg
into
dec
mov
and
rcl
adc
and
adc
cmp
popf
mov
fwait
test
enter
insb
lret
or
lds
ficoml
or
cmp
sbb
jo
movsb
xchg
pop
push
mov
dec
sbb
fnstsw
add
mov
inc
add
sbb
inc
arpl
fs
outsl
inc
repz
push
mov
std
das
xchg
mov
xor
or
pop
ja
repz
xchg
cltd
clc
outsb
add
add
xlat
push
test
jmp
pop
arpl
mov
pop
sbb
xchg
pmullw
daa
mov
pop
jb
fisubl
idivl
popf
mov
sbb
bound
jl
leave
fsub
imul
sbb
movb
pop
pop
in
arpl
jp
xchg
jl
stos
adc
and
icebp
adc
mov
xchg
pusha
mov
sarl
insb
sti
adc
mov
xchg
inc
mov
mov
inc
into
lock
pushf
push
dec
mov
sub
add
daa
sbb
mov
pop
jae
fidivs
cmp
jecxz
lds
push
lds
jnp
mulb
jo
push
imul
andl
inc
add
push
pop
xchg
mov
ds
pop
sti
mov
daa
sti
setnp
pop
cld
out
jne
add
dec
icebp
and
fidivs
xor
xchg
and
nop
repnz
add
imul
sbb
stc
sti
mov
stos
dec
lea
lret
cmpsb
xchg
xor
fisubrs
inc
push
sarb
insl
pop
inc
xlat
lcall
cli
add
imul
ss
mov
lds
sub
and
pop
arpl
mov
imul
fcom
sub
out
sbb
roll
push
pop
loope
enter
jmp
push
pop
push
ret
iret
mov
addr16
push
dec
dec
xchg
jl
jbe
mov
out
jbe
repnz
aam
imul
rol
jle
aam
out
js
inc
addb
add
inc
lea
mov
pop
ss
jo
push
imul
repnz
nop
cltd
inc
add
mov
cli
cmp
push
xlat
mov
xchg
and
shl
jmp
notb
inc
ds
pop
mov
dec
xchg
jmp
or
and
mov
dec
or
pusha
and
fwait
xchg
cmp
out
sbb
inc
mov
popf
dec
dec
jle
popa
xchg
mov
pop
mov
mov
xchg
add
out
test
xor
jecxz
adc
sbb
leave
push
popa
sbb
insl
in
mov
xor
pop
sbb
cmc
cltd
dec
cmpsl
into
scas
addr16
sub
mov
add
shll
dec
sarb
dec
xchg
sahf
leavew
nop
call
mov
and
ja
ret
add
fwait
test
xchg
out
mov
jg
xchg
stos
xchg
loop
adc
cmc
mov
mov
push
into
pop
sub
or
adc
cld
push
jmp
stc
mov
jecxz
test
clc
pop
lea
add
mov
int
mov
sbb
rolb
ficoms
icebp
jmp
xchg
fisubs
cmp
iret
sub
int3
lods
sbb
shll
sti
cmc
xor
testl
mov
xchg
mov
mov
sub
dec
pop
lods
jmp
push
popa
jl
sub
xor
stos
out
movsl
mov
adc
push
in
xchg
sbb
jp
jmp
fmuls
daa
pop
xor
jnp
daa
insb
dec
inc
adc
xchg
or
ret
inc
push
sub
jbe
push
xchg
ret
or
mov
gs
sub
push
inc
filds
mov
cld
push
sbb
popa
ljmp
sbb
mov
xor
stos
mov
cmp
mov
xchg
out
arpl
pusha
dec
sarl
ja
sahf
hlt
loopne
shrl
xchg
gs
fistl
lret
cltd
js
mov
ja
dec
pop
les
adc
and
mov
icebp
sbb
add
nop
mov
aam
mull
push
or
int
outsb
stos
pop
in
push
mov
pop
ja
mov
out
cwtl
das
mov
mov
in
aaa
movsl
scas
xchg
aas
scas
add
cld
jae
dec
popa
stc
cmp
cli
les
pop
inc
mov
out
pop
pop
adc
cmp
sbb
xor
jbe
popa
dec
stos
arpl
enter
jmp
insb
cs
ret
stc
xlat
push
inc
dec
xchg
mov
or
xlat
sbb
jns
fisttps
jno
mov
or
addr16
les
push
mull
mov
lcall
in
inc
pop
mov
push
push
push
sti
pop
xchg
outsb
sbb
cli
xchg
xchg
cmp
push
pusha
push
push
inc
orl
pop
arpl
cmpl
push
insl
or
mov
xchg
adc
mov
scas
lahf
nop
or
test
mov
loop
icebp
or
cmp
dec
mov
ljmp
mov
xor
pop
jl
add
xchg
loopne
adc
fcomps
sti
rol
or
push
cmpsb
xchg
mov
dec
enter
into
xchg
sbbl
xor
inc
mov
lods
movsb
mov
xor
mov
pop
adc
or
sub
std
idivb
fldt
mov
cli
pop
mov
arpl
sub
sahf
xchg
or
add
push
out
adc
adc
mov
xchg
repz
dec
loope
insl
mov
and
loop
stos
aam
xor
sub
push
and
fidivs
das
ret
xor
and
jl
jnp
aad
fstl
add
scas
outsl
adc
add
insl
imul
lods
push
scas
adcb
mov
dec
or
mov
xchg
lcall
cli
loopne
rclb
lock
fucom
rcr
sbbl
cmpl
add
jecxz
and
add
call
mov
sbb
or
xor
testl
xchg
mov
bnd
jl
int3
cpuid
lods
shll
pop
add
sarb
sub
insb
fimull
je
push
outsb
push
ja
and
push
inc
mov
jne
insl
shlb
inc
inc
inc
push
addr16
cltd
jge
mov
stos
repz
xor
xchg
ret
repz
push
into
arpl
cmp
dec
pop
andl
jl
mov
shrl
xor
iret
inc
enter
stos
jecxz
jno
imul
jmp
fwait
shll
fistl
jnp
xor
push
inc
stos
dec
pushf
out
dec
movsl
cltd
lock
dec
or
dec
jge
mov
mov
jp
and
repz
or
mov
xor
call
mov
pushl
pusha
repnz
jno
push
in
jl
roll
mov
jmp
leave
xor
add
dec
and
mov
mov
push
dec
or
push
and
fimuls
lds
pop
ficoml
push
and
jo
pop
sbb
ds
adcl
in
movups
es
push
ja
mov
in
lock
push
scas
jmp
stc
xlat
in
mov
pop
dec
adc
popa
dec
shl
addr16
js
mov
cmp
inc
je
call
jnp
xor
jmp
adc
out
scas
push
dec
lret
int3
enter
jmp
int3
cmp
aam
mov
enter
push
add
in
repnz
xchg
add
inc
mulb
jns
adc
rcrl
repz
dec
mov
xchg
es
jbe
jbe
stc
mov
sub
sub
hlt
int
mov
shufpd
je
imul
ret
add
loop
adc
mov
pop
shlb
in
loop
jns
fldenv
jg
jp
pop
adc
das
ret
out
ret
in
mov
dec
or
ja
stc
lock
sbb
stos
out
xlat
jb
push
push
inc
xchg
fs
cli
movsl
pop
jo
bound
out
test
loope
adc
iret
cmpsl
insl
inc
mov
push
shll
jo
inc
js
int
jnp
push
mov
adc
xor
xchg
arpl
dec
test
mov
icebp
sahf
pusha
inc
imul
call
or
test
mov
mov
jmp
cld
push
fiaddl
ja
mov
aaa
fiadds
outsb
stos
or
mov
fidivrl
lock
mov
push
push
test
xor
inc
inc
fstpl
inc
fbstp
or
ficomps
add
test
push
or
or
in
xchg
fs
pop
fldl
rcll
cmp
nop
fwait
ds
addr16
mov
cmp
imul
daa
sub
xlat
mull
mov
lock
movsl
addr16
mov
adc
cwtl
and
push
imul
pop
push
sahf
mov
fidivrl
dec
in
mov
out
movsb
push
push
sti
sbb
adcb
adc
xor
imul
repz
test
or
lds
in
repz
arpl
xchg
jecxz
mov
lock
lahf
call
pushf
fimull
je
rcr
fcmovbe
mov
rclb
daa
outsb
mov
mov
fcmovnb
pop
mov
les
pop
pop
fidivrs
mov
sub
lret
adc
cs
pop
stos
jnp
mov
cmp
and
nop
mov
stc
xor
lcall
imul
cmp
push
iret
aaa
adc
andb
sub
pop
mov
adc
xchg
push
and
subl
cs
add
xchg
cmc
pop
jb
mov
mov
enter
lock
pop
shlb
xor
in
jmp
loopne
loopne
cmp
popl
jmp
xchg
jne
inc
lods
gs
xchg
push
pop
insl
xlat
loop
dec
push
dec
pop
adc
inc
pushf
mov
aam
daa
sub
fildl
push
loop
mov
jno
dec
pop
out
sub
cltd
cmpsb
sub
daa
or
in
test
push
les
lcall
sbb
xchg
popf
adc
movsb
mov
mov
mov
sbbb
out
stos
add
lcall
sahf
popf
testb
cli
or
mov
cmp
imul
push
bound
cld
cmp
dec
fimull
inc
mov
lcall
imul
insb
rcl
loopne
mov
mov
repnz
adc
stos
xchg
add
xchg
cwtl
xchg
test
xor
and
mov
mov
inc
add
push
test
mov
mov
sbb
daa
push
cwtl
stos
test
stc
jg
inc
cmovae
mov
xchg
or
gs
dec
loop
pop
pop
cltd
cwtl
pusha
stos
dec
mov
jl
pushf
das
pop
mov
mov
sub
mov
daa
jmp
or
jmp
pop
loope
sbb
daa
jnp
xlat
andb
negb
cmp
out
popa
push
jno
push
or
data16
popf
dec
mov
test
inc
xchg
push
daa
rorb
inc
imul
testb
dec
adc
sub
es
sub
iret
xlat
mov
mov
fistpl
jle
sbb
stc
xor
add
or
xlat
xchg
fcmovnb
lock
imul
sti
mov
mov
test
lret
adc
mov
add
mov
je
dec
pusha
icebp
inc
fcompl
jmp
repz
imul
daa
sub
pop
mov
ja
jne
jo
or
fadds
in
repz
push
push
imul
in
rolb
adc
int3
xor
cmp
dec
push
es
call
std
mov
aam
cmp
mov
ja
mov
jge
jnp
pop
fcmovu
cmpsl
or
adc
mov
sti
sub
mov
mov
mov
stos
sub
lret
adc
jbe
mov
addr16
mov
in
add
mov
pop
xchg
inc
sar
cmp
sbb
adc
fisubrs
jo
or
repnz
loop
lods
mov
cmp
gs
int3
and
mov
and
enter
loop
test
or
bound
sub
xor
inc
shlb
xor
xor
dec
shlb
pop
shlb
add
add
dec
shlb
pop
shlb
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
