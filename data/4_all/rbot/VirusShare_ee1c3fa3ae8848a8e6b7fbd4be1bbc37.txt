je,pn
js
add
add
adc
add
sbb
add
add
add
add
pusha
jb,pn
popa
je
add
or
add
add
loopne
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
insl
add
adc
or
and
or
xor
or
inc
icebp
or
push
icebp
or
or
add
add
je
add
cld
lock
pushf
lock
or
or
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
.byte
dec
outsl
or
add
add
loopne
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
insl
add
adc
or
and
or
xor
or
inc
icebp
or
push
icebp
or
or
add
add
je
add
cld
lock
pushf
lock
or
or
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
adc
add
add
add
sbb
add
xor
add
lods
push
aad
xor
add
add
pop
mov
sub
lea
mov
cmp
je
lea
mov
cmp
je
movl
mov
mov
sub
mov
add
lea
add
mov
mov
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
add
push
pushl
push
push
call
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
shrb
add
loopne
add
sub
sub
and
sbb
lret
xchg
nop
xor
aas
or
scas
push
sahf
jmp
mov
int
cmpsb
in
les
cmc
jg
call
pop
push
pop
cltd
xchg
sbb
sbb
and
xchg
cmp
cltd
divb
loope
mov
pop
ret
loope
fbstp
sub
push
mov
add
cmp
pop
pop
std
pop
popa
rol
das
lock
adc
fcom
mov
adc
js
or
insl
imul
dec
xchg
lcall
cmp
sbb
or
cmp
or
xor
mov
lds
aad
xlat
jle
sub
mov
frstor
sti
int
scas
mov
outsb
ret
incl
sbbl
shl
jnp
sti
call
call
cld
shlb
push
cmp
mov
mov
jbe
cmp
pop
push
cmp
cmp
pop
pop
xor
dec
sub
popa
cmp
dec
inc
insl
mov
sub
mov
cld
mov
fcoms
push
inc
pop
fbld
orb
fs
xor
cmp
or
xor
dec
jbe
rcl
in
mov
push
loopne
test
sub
sbb
sub
mov
cli
clc
int
adc
bound
mov
xor
mov
pop
sbb
xorb
aas
or
pop
jno
xchg
xchg
mov
scas
or
ret
shrl
rorb
cwtl
sub
outsb
addr16
or
dec
jg
xor
mov
mov
and
test
and
icebp
cmpsb
push
push
mov
adc
rcl
jns
test
jb
mov
xchg
enter
dec
pusha
xchg
out
icebp
xchg
int
js
push
sahf
in
inc
pop
cwtl
std
mov
in
ljmp
dec
shufps
les
cld
js
fisttpl
pushf
shl
mov
add
out
xchg
fimull
push
div
mov
cmp
push
mov
push
lock
jge
outsl
mov
ja
mov
push
add
inc
cmp
movsl
insb
mov
mov
jb
aam
pop
mov
lods
fs
sub
xchg
shll
adcl
add
add
fmull
push
lock
xlat
push
sahf
daa
and
dec
sahf
icebp
hlt
dec
inc
xchg
xor
daa
pusha
dec
out
pop
loope
mov
leave
mov
lock
inc
inc
pop
jns
sub
push
std
daa
mov
inc
test
inc
loopne
sub
xchg
ss
mov
cmp
mov
dec
cmp
loope
push
add
ror
lods
in
je
es
mov
pop
sbb
xchg
or
push
xchg
scas
nop
pavgb
xchg
mov
stos
push
stos
jo
pop
cmpsb
adcl
out
lods
stos
das
lods
and
mov
ljmp
loope
les
push
jmp
out
js
lock
sub
dec
rorl
inc
rolb
test
inc
and
iret
outsb
iret
out
mov
js
imul
push
scas
rcr
mov
xchg
cmpl
rcl
clc
lods
adc
fs
test
mov
inc
mov
call
mov
scas
movsb
xor
popl
inc
int3
push
or
mov
mov
mov
push
mov
cmp
out
push
outsl
jbe
add
enter
loopne
sub
int3
sub
cs
and
jns
and
mov
inc
sbb
repnz
shrl
jg
pop
cmp
in
icebp
add
inc
andb
clc
aaa
dec
mov
in
or
adc
int
inc
cli
in
pushl
xorb
sbb
shlb
sub
insb
fdivs
rcr
repz
adc
int3
dec
bound
les
loop
mov
dec
cmpsb
jmp
out
lea
lret
mov
repz
pop
ss
movsb
xchg
sub
fmul
add
rdmsr
mov
movl
cs
pop
in
int3
xchg
sub
scas
mov
cmp
movsl
adc
ret
push
jbe
or
inc
jae
lea
call
mov
repz
daa
pop
xor
notl
arpl
aam
mov
mov
ss
mov
fisubs
mov
cmpl
push
in
mov
mov
iret
inc
mov
sub
jns
mov
aaa
cmc
mov
out
sub
push
pop
ja
bound
aad
aaa
mov
shrb
push
inc
dec
cli
add
jp
cmp
dec
push
aas
mov
scas
or
mov
sbb
je
sub
cld
int3
add
pop
push
or
push
in
sub
fs
hlt
ret
fistpll
sub
pop
imul
jb
out
push
out
push
xchg
adc
inc
fsubl
push
fwait
ret
or
ret
insb
das
cmp
mov
mov
push
movsb
call
scas
idiv
pushf
cs
sub
mov
in
jae
cmp
in
ret
addr16
cmp
jp
pop
aaa
sbb
sti
jp
sub
data16
lea
arpl
push
push
subl
fmuls
out
roll
fs
mov
pop
jg
into
inc
std
xchg
sbb
mov
int3
mov
clc
int3
inc
xchg
cmpsb
lods
pop
ljmp
aaa
xchg
dec
stos
dec
nop
ret
mov
pop
mov
fdivrl
loopne
dec
and
mov
cmpsb
pop
pop
and
clc
imul
arpl
xorb
add
cmp
loope
dec
sarb
fcoml
sti
xchg
cmc
push
inc
push
shl
test
jo
rorl
inc
sbb
mov
push
test
lret
cmp
push
div
int3
cmpl
xor
inc
ljmp
sbb
mov
sarl
mov
and
cmp
je
lods
les
xor
aas
repnz
sub
scas
push
push
jge
jp
add
fisubl
mov
jge
divl
xor
jae
fprem1
push
push
mov
pusha
shlb
gs
sbb
stc
idivl
sbb
xor
testb
mov
mov
pushf
cmpsl
mov
mov
sahf
je
inc
pop
mov
rolb
inc
sub
cwtl
rcrb
int3
cmp
jne
xor
pusha
push
idivl
jne
sahf
call
into
aam
leave
mov
popa
out
adc
sbbb
stos
stos
sub
adc
and
jl
xchg
xor
dec
cmp
add
adc
xchg
shlb
or
inc
inc
pop
cmp
and
cmp
lahf
cmp
mov
jp
es
mov
aaa
push
shl
cmpsl
mov
add
gs
fnstsw
leave
cmp
inc
cld
mov
jbe
mov
loop
nop
xchg
sub
mov
cmpsb
adc
testb
pop
cmp
inc
sub
xchg
lahf
add
sar
outsb
arpl
mov
sbb
mov
sub
cli
rorb
outsl
inc
adc
and
aaa
movswl
scas
cli
jmp
and
inc
pop
adc
mov
adcl
adc
fwait
cwtl
cmp
test
mov
xor
fdivrl
cmp
push
pop
sar
test
rcrb
jle
jno
dec
pop
in
ja
ret
xor
aam
sbb
or
inc
or
call
rclb
mov
dec
add
xor
xchg
xchg
inc
enter
arpl
xor
jne
nop
enter
rcrl
pushf
pushf
aad
cmp
stos
inc
xor
iret
or
sbb
stc
pop
jae
sub
lds
xlat
sar
hlt
dec
sbb
sub
test
xor
pop
mov
scas
xlat
or
std
aas
out
or
mov
es
call
xor
repnz
pushf
test
inc
xor
xchg
mov
xlat
int
pop
xor
pop
sub
adc
cmpsl
fbstp
push
shrl
inc
xchg
mov
inc
jns
xchg
rolb
ret
fisttpll
stc
popf
lcall
insl
repnz
inc
add
xor
fidivs
das
adcb
jo
pop
mov
mov
repnz
mov
aam
mov
inc
dec
es
cmp
es
pop
fisubrl
ffreep
fs
or
cmpsb
xchg
imul
push
mov
mov
inc
ljmp
adc
inc
push
push
subb
mov
xchg
movsb
or
pop
xor
sub
out
or
fsubs
popa
fs
je
sbbb
sti
or
sbb
sub
sub
push
sub
mov
shrl
test
mov
mov
add
jp
bnd
lods
adc
add
inc
mov
popa
or
addr16
cmp
sub
adc
cmp
cli
cmp
aas
dec
mov
sbb
repz
daa
jno
xchg
movsl
fsubrs
sbb
pusha
pop
add
pop
sub
out
pop
sbb
push
cli
jae
psubusw
arpl
sarb
pop
adc
xchg
ret
test
aad
jg
je
xor
scas
adc
xchg
pop
call
into
cltd
jg
jp
insl
lea
nop
mov
sub
shlb
outsl
mov
fs
fdivl
aaa
ja
mov
add
jae
sbbl
push
js
mov
sub
out
mov
dec
addr16
jnp
xchg
mov
cmpsb
mov
mov
sub
call
inc
out
xchg
xchg
dec
repz
lock
test
dec
scas
repz
lock
and
popa
dec
xchg
pop
scas
and
ss
repnz
mov
cmc
arpl
xchg
orl
jbe
sahf
aaa
nop
adc
mov
dec
lds
ds
fcom
scas
dec
jg
aas
push
inc
push
lock
insb
xchg
sahf
adc
lret
ret
out
fisubrl
lret
rcrl
outsb
cli
fwait
sbb
pop
cwtl
sub
ret
sbb
sbbb
cmpb
jmp
sbb
mov
mov
dec
je
mov
movsl
xchg
in
add
inc
mov
insl
dec
stos
test
fbstp
push
jbe
divl
jns
cmp
xor
xor
loopne
pushf
adc
bound
mov
xor
mov
cmp
fwait
push
mov
sarl
mov
loopne
xor
test
ljmp
test
stc
jp
cli
daa
mov
and
jno
xchg
loopne
mov
adc
outsb
xchg
dec
xchg
xchg
int3
js
pop
cmpsb
adc
sbb
pop
mov
or
cmp
dec
adc
jbe
jnp
clc
shr
sbb
xlat
or
adc
mov
jns
leave
imul
xchg
es
jo
jge
in
mov
out
aad
jne
imul
xlat
xchg
jnp
stc
jg
push
jne
xchg
jecxz
pop
push
jle
insb
jg
sbb
jl
js
fidivs
rcrl
out
mov
pusha
cmp
jns
arpl
add
pop
sahf
sarb
push
ds
pop
xchg
inc
fs
mov
or
sahf
jno
fwait
rcr
mov
dec
and
roll
loopne
cmpsb
jge
cmpsl
mov
pushf
jmp
pop
sbb
iret
aas
fdivrs
push
in
ljmp
and
mov
sbb
lods
dec
int
xchg
ljmp
ret
push
iret
jbe
stos
or
mov
xor
jecxz
ficompl
cmp
jae
mov
add
or
in
mov
dec
cli
or
daa
rorb
outsl
nop
mov
pop
fcomps
ljmp
push
push
enter
dec
cltd
xor
cwtl
insb
push
dec
xchg
fwait
sbb
inc
and
inc
scas
push
sub
add
xlat
and
ljmp
popf
fldl
cmc
addb
mov
pop
negb
fwait
ror
jecxz
lods
out
sti
xchg
lods
shlb
push
xor
push
ficoml
push
loop
xlat
cmp
mov
and
inc
sbb
push
in
dec
adc
xor
inc
loop
insb
adc
adc
subb
std
aas
out
xlat
mov
filds
or
fnstcw
push
pop
and
rcr
or
shr
fdivr
and
lods
shl
cmp
pop
into
xchg
mov
dec
inc
lret
mov
ret
out
lret
xchg
dec
add
out
and
and
and
xchg
sub
add
in
fldenv
pop
imull
mov
sub
mov
pop
lret
arpl
test
cltd
adc
sub
stc
repnz
sahf
mov
lret
sub
in
add
add
std
pop
mov
out
dec
stc
push
sarl
push
mov
pop
nop
movsb
cmp
jnp
pushf
add
mov
subb
push
loope
roll
pushf
repnz
stc
popf
shl
leave
xchg
mov
or
call
test
loope
pop
ret
loop
xor
dec
nop
xchg
clc
and
push
push
jno
test
pop
adcb
push
sbb
xlat
add
into
jl
rorb
cs
adc
dec
cltd
lds
mov
or
lret
test
int3
jno
sbb
sti
push
and
enter
mov
inc
pushf
rolb
shll
pushf
jns
mov
cmpsl
insb
arpl
xor
hlt
mov
adc
and
dec
mov
testb
inc
xor
in
and
mov
inc
push
cmpsl
cmc
icebp
lcall
test
das
push
push
and
inc
fsub
sub
nop
sarl
cmp
int
aam
fists
lock
xor
sub
jge
jmp
fwait
fs
xlat
in
dec
push
mov
or
sub
fcomp
insl
mov
adc
scas
ret
sbb
lods
cmp
xor
mov
fwait
decl
je
inc
insl
pop
data16
jne
xchg
loope
pop
sbb
sbbl
outsl
out
jg
stc
test
es
movsl
push
adc
hlt
pop
add
stos
or
adc
sub
loop
pop
fcoml
cmc
cmp
js
sub
push
loop
outsb
xchg
movsl
pop
fstpt
cld
in
out
or
stc
mov
hlt
lods
or
add
xlat
fs
sub
push
jae
imul
mov
es
mov
inc
add
sbb
movsl
roll
addr16
or
call
iret
adcb
sbb
xchg
adc
jmp
mov
mov
sarb
pop
xor
sahf
int
push
push
hlt
outsl
mov
add
addb
cmp
xor
bound
arpl
popa
into
ss
loopne
aas
popa
adc
dec
std
or
adc
pop
aas
sub
hlt
xor
ret
pusha
xchg
cld
shr
mov
inc
movsl
movsl
push
fbld
adc
fwait
cld
popf
jo
int
icebp
xor
das
mov
jge
inc
ss
out
and
movsl
insb
or
or
orl
sbb
fdiv
xchg
adc
sub
out
nop
loope
das
inc
fwait
or
inc
dec
sbb
add
sbbb
sahf
sbb
scas
mov
mov
push
jae
call
fwait
imulb
add
mov
test
xorl
cltd
out
lret
xchg
xor
inc
push
jns
je
and
lret
mov
call
cld
cld
sbb
jnp
dec
xor
gs
repnz
imul
fisubrs
es
cmp
lret
mov
lcall
ss
dec
adc
adc
cltd
in
lcall
and
cmp
or
xchg
xchg
paddusw
cli
jbe
rcrb
adc
sbbb
cs
mov
xchg
jo
xchg
clc
dec
jo
subl
jecxz
std
inc
pop
jo
nop
xchg
pop
and
sbb
leave
js
sub
insb
aaa
cwtl
cmp
push
mov
popl
mov
data16
loop
pop
outsl
xchg
popa
notl
xchg
loop
std
cltd
fdivrp
fs
xor
mov
mov
int
mov
dec
scas
cmp
xlat
pop
pop
pop
xchg
addr16
pusha
clc
aad
mov
and
rclb
push
cs
add
jmp
ret
cs
jb
adc
push
ror
cltd
in
cmpsb
shrb
or
or
sub
sub
push
sub
std
mov
into
cltd
cli
pop
inc
repz
mov
int3
mov
sbb
rorb
fiaddl
pop
pop
lret
pop
or
test
jmp
adc
jne
je
dec
je
popf
sbb
test
out
sbb
or
inc
xor
mov
rolb
clc
xlat
lret
dec
dec
sub
flds
add
roll
pop
xor
cld
lret
ret
cmc
cmp
xchg
andl
pushl
imulb
or
xchg
nop
cltd
cltd
push
and
cmp
cmp
or
xchg
sub
sbb
mov
xchg
adc
stos
jo
rcll
fwait
out
or
out
orl
sbb
push
lcall
add
jo
cs
or
imul
mov
aaa
mov
xchg
jb
xor
shl
mov
nop
cld
jg
cmp
mov
clc
scas
lds
or
push
adc
jo
adc
add
jbe
jecxz
iret
out
inc
adc
pop
mov
xor
clc
fsubs
mov
or
in
nop
inc
ss
wbinvd
test
sub
stos
mov
add
scas
mov
lcall
pop
sbb
sti
icebp
gs
test
cmp
dec
fdivrs
call
fimuls
mov
cli
rol
mov
outsl
jno
test
mov
mov
cmp
ret
jle
shlb
mov
xchg
cltd
jno
pop
pushf
stc
jge
mov
adcb
out
dec
ds
scas
outsb
clc
divl
in
sub
testl
mov
cld
loope
pop
pop
test
xchg
mov
clc
fldcw
mov
add
icebp
mov
je
cld
sahf
daa
and
shrb
mov
fadds
mov
dec
lds
jb
xor
popa
jge
hlt
mov
test
add
jbe
jb
mov
adc
cmp
daa
inc
sbb
ljmp
inc
xchg
inc
push
bound
imul
push
jl
mov
fistpll
filds
imul
push
cmp
push
scas
aad
mov
xlat
dec
jg
dec
jbe
daa
adc
xor
stos
pop
lods
lods
jno
and
scas
jbe
mov
stos
data16
loopne
jp
or
sahf
xchg
mov
sbb
mov
icebp
adc
mov
roll
out
pop
lret
mov
aam
rcrl
fiaddl
xlat
mov
shrb
pop
in
add
dec
aad
pop
ret
cmp
sti
adc
and
test
ljmp
es
out
push
iret
or
sbb
fwait
add
sbb
xchg
mov
fnstenv
dec
mov
add
int3
cmpsl
push
imul
ret
pop
push
add
adc
xchg
in
mov
scas
je
dec
lret
mov
cmpsb
imul
mov
and
sahf
emms
out
stos
and
mov
cmpsb
repz
xlat
jb
and
sarl
es
adc
mov
cmc
jl
outsl
xor
dec
scas
movb
mov
adc
pop
or
stos
xorl
push
xor
push
push
inc
pop
cwtl
cmp
mov
mov
es
adc
dec
jecxz
mov
cld
jno
push
inc
loopne
cmpsb
lahf
push
inc
sahf
lock
sub
outsl
aas
pop
aas
lcall
je,pn
jl
push
stos
fs
inc
jmp
inc
mov
sbb
xchg
int3
lods
movsb
decl
xor
push
mov
rcll
xor
adc
mov
mov
inc
bound
dec
inc
push
psraw
push
pop
pop
test
test
dec
add
insb
cmp
mov
cmp
add
mov
lcall
fildll
mov
pop
or
pop
sbb
bswap
adc
pop
mov
push
xchg
dec
imulb
mov
push
in
or
mov
jmp
dec
mov
in
mov
mov
hlt
pop
mov
pop
lret
adc
cmp
inc
xlat
cwtl
inc
cmp
add
je
in
sbb
sbb
bnd
dec
int
pop
int3
xchg
clc
les
sbb
xlat
outsb
jne
inc
enterw
mov
vmovlps
and
push
test
add
fwait
xor
jns
cwtl
pop
sbb
test
enter
popf
xchg
sbb
ljmp
cli
mulb
lock
or
inc
loop
cmp
mov
hlt
dec
jns
mov
enter
addr16
fcmovnb
sarb
cld
outsb
pop
cmc
iret
jne
jbe
nop
mov
iret
outsb
sbb
or
mov
int
in
mov
iret
call
and
sbb
out
mov
in
fadd
pop
push
imul
mov
mov
push
shrl
add
sbb
fcomps
aam
cmp
pop
stc
pop
jb
scas
sub
jnp
inc
pop
xor
lock
or
pop
lahf
test
jns,pt
addr16
xor
jl
inc
adc
fistl
insl
sbbb
and
add
fsubrl
cltd
gs
lds
pushf
cmp
push
cmpsb
or
ss
mov
int3
ret
and
mov
or
mov
push
out
mov
inc
xchg
pop
cwtl
sbb
stc
and
repz
cmpl
cld
dec
xchg
mov
dec
lods
dec
test
push
bnd
and
out
sti
imul
inc
orb
in
pusha
or
mov
cs
rorb
adc
shr
adc
int3
mov
je
xchg
fidivrs
cli
jecxz
scas
cmp
pop
hlt
mov
dec
push
leave
cmp
cmpsb
sarb
cmp
das
or
cmpb
clc
aaa
inc
inc
push
out
cli
xor
or
cmp
fimull
jp
nop
xchg
jo
pop
adc
in
and
add
and
cmp
sbb
add
mov
imul
cmp
ljmp
sbb
jle
mov
pop
and
loop
lret
dec
mov
imul
fiaddl
xchg
ficoml
lods
and
push
out
and
clc
test
adc
mov
pop
pop
ljmp
arpl
dec
loope
xlat
aad
lods
xor
push
sbb
insl
dec
jb
movsl
inc
dec
jb
pop
leave
mov
sbbb
xor
jbe
jecxz
jbe
mov
stos
pop
push
mov
daa
imul
std
push
fdivr
and
jmp
imulb
movb
push
out
dec
stos
es
insl
enter
movsb
inc
sub
int3
adc
cmp
mov
mov
xor
mov
arpl
js
or
divl
xchg
mov
jbe
or
mov
xchg
insb
cmp
adcl
in
adc
dec
ss
xchg
pop
sub
pusha
cmp
cmpsl
sti
cmp
fwait
jns
lcall
mov
rcrl
jecxz
mov
inc
sbb
stc
pop
aaa
adc
sub
push
rorb
fstl
aaa
rcr
sub
sbb
pop
in
push
shll
mov
mov
cmp
xadd
fldl
dec
aaa
repnz
xchg
mov
jb
shll
imul
or
dec
push
in
sub
outsl
lock
gs
outsb
jecxz
dec
test
xor
xor
cmp
pop
xchg
subb
mov
jle
movb
mov
ja
mov
or
fsubrl
mov
sub
adc
push
pusha
add
imul
dec
lea
jecxz
sahf
imul
xor
jmp
mov
or
xor
out
jmp
lahf
xor
int
and
cmp
jo
iret
pop
sbb
lret
cmp
pop
and
lds
out
inc
adc
dec
sub
or
addb
pop
jae
cmp
sahf
xchg
xchg
repz
lsl
adc
pusha
and
mov
int
mov
xchg
add
lock
mov
ret
mov
adc
lock
ljmp
addr16
push
dec
lret
stc
cmpsb
pop
je
xchg
and
lea
sub
and
dec
mov
ljmp
repnz
mov
cmp
sar
fs
aam
std
iret
pop
sbb
mov
std
outsl
sti
jae
pushf
cmpsl
jg
mov
cli
mov
add
stc
cmp
or
push
pop
adc
fs
cs
mov
cmpsb
adc
dec
daa
mov
out
inc
ret
insb
hlt
in
cltd
adc
jns
cli
cmpsl
inc
test
jp
add
cmp
flds
inc
repnz
sub
mov
pop
test
xor
arpl
shl
jmp
xchg
movsl
repnz
arpl
data16
ret
xor
mov
ds
in
xchg
jecxz
adc
dec
aam
sbb
cmp
mov
std
or
or
jecxz
cmpsb
adc
std
sub
in
jne
ret
push
cmp
mov
call
fbstp
fldcw
lret
push
mov
dec
mov
mov
popa
rcrl
cltd
mov
sub
popa
mov
add
mov
jmp
lds
cmp
cmp
xchg
rorb
cmp
loopne
inc
mov
aaa
cmp
inc
mov
jb
mov
into
popw
mov
aas
pop
sarl
mul
lods
jg
jnp
iret
mov
and
and
mov
aad
dec
gs
dec
sbb
jecxz
insl
fsubs
orb
loop
jle
lods
mov
ret
bound
adc
lret
scas
jae
dec
add
aad
out
loopne,pn
scas
mov
dec
shr
sbb
pop
mov
jno
test
les
sub
sub
push
repnz
and
cmp
mov
pop
rcr
add
mov
jp
negl
fcmovb
jmp
jno
in
daa
xchg
cmc
and
push
mov
mov
jmp
or
shll
leave
jge
orl
inc
mov
arpl
stc
xchg
jno
cmc
pop
in
movsl
arpl
jne
ja
and
out
pop
jmp
mov
int3
insb
out
in
push
ja
orl
mov
mov
sahf
aam
cmpsl
adc
ret
test
jo
pop
jecxz
aaa
cmpsb
enter
jg
sbbb
stos
sub
mov
add
dec
xlat
es
push
mov
addr16
cmp
mov
ljmp
cmp
lods
sti
xor
mov
xor
movsb
mov
mov
fcompl
sub
push
and
xlat
jmp
fucomp
outsl
and
nop
enter
std
mov
push
mov
popa
mov
mov
sbb
iret
push
jne
fmuls
pop
faddl
dec
adc
rcll
aas
ja
mov
dec
mov
mov
dec
pop
xchg
sub
stos
xor
sub
mov
adc
rorb
int3
mov
les
test
mov
repnz
xorb
cmc
and
imulb
inc
lret
ljmp
je
mov
icebp
sbb
mov
cmc
aas
je
jo
add
pop
sahf
pop
mov
sub
iret
cmp
mov
jmp
xor
jl
aaa
repnz
add
xchg
pop
cmc
lret
dec
inc
lret
cld
fimull
mov
sub
mov
or
into
loope,pt
out
movsl
push
push
nop
and
fs
jbe
sub
adc
mov
push
mov
dec
mov
pop
idivl
pushf
andl
push
stc
sub
add
xor
insb
pop
add
xchg
leave
rcr
fcomp
push
push
fwait
inc
pop
dec
fidivs
ret
repnz
adc
lcall
xchg
das
out
frstor
sub
addb
fidivs
lds
xchg
sub
mov
sahf
and
repnz
test
dec
dec
leave
pushw
test
jnp
mov
rclb
hlt
and
add
sahf
jmp
cwtl
sbb
arpl
jno
add
push
roll
jne
cmp
xor
jg
imul
mov
xchg
xor
push
mov
xchg
inc
cmp
lods
adc
je
out
jns
inc
add
call
nop
bound
push
xor
lcall
pop
dec
sub
lcall
mov
lret
mov
and
mov
pop
ret
fimuls
fdivs
shll
jecxz
dec
pop
dec
cs
dec
ficoms
in
pop
pop
filds
mov
xchg
fsubrl
movsl
inc
lret
aad
gs
mov
sbb
outsl
xchg
adc
xchg
mov
leave
mov
ljmp
outsl
iret
xchg
and
jp
mov
dec
xor
fdivrs
out
or
mov
stos
or
push
loop
add
lock
pop
pushf
mov
roll
or
add
imulb
repz
in
nop
sub
adc
xchg
dec
mov
addl
push
mov
inc
daa
out
jge
loopne
mov
xor
cwtl
lcall
inc
lahf
pop
lret
sbb
aam
sub
push
mov
xchg
inc
push
bnd
mov
add
scas
je
push
data16
sub
jae
popa
movsl
mov
mov
enter
cld
sbb
fsubrs
cwtl
out
je
xor
sahf
hlt
xchg
mov
popa
add
and
adc
fisttpll
dec
rolb
jbe
rcrl
call
xor
outsb
push
arpl
jl
and
mov
pop
scas
mov
xchg
pop
xchg
pop
jb
lds
sahf
and
mov
xor
mov
out
mov
and
cmp
adc
pop
jl
test
scas
sahf
lock
call
push
stos
or
mov
inc
and
in
adc
sbb
add
and
inc
dec
jmp
jbe
mov
sbb
sub
js
mov
in
fistl
aad
push
scas
dec
add
mov
and
rcrb
fildl
or
andb
xor
das
adc
push
call
fstps
add
nop
cmc
lcall
insb
or
rclb
dec
call
daa
pop
in
imul
or
push
jmp
cmp
sub
idivb
mov
dec
shll
icebp
xorl
cld
inc
mov
sbb
addl
subb
add
pop
add
movb
sbb
daa
dec
or
sub
mov
sbb
shlb
pop
jb
repz
fidivrs
cli
add
add
xchg
adc
sbbl
mov
enter
aad
xchg
dec
add
or
xlat
lods
adc
and
jge
pop
lahf
loope
dec
lock
adc
inc
repnz
cltd
pop
and
ret
mov
repz
xor
ds
in
mov
inc
dec
lods
adc
lret
add
or
cmp
and
fistpl
mov
push
sti
adc
and
mov
xchg
roll
inc
inc
push
jno
out
sub
mov
dec
rcr
fsubrs
aas
movsb
and
jnp
ss
lea
push
cli
push
sbb
addr16
dec
inc
jmp
lahf
sahf
inc
pop
pop
out
insb
lcall
scas
lock
sub
enter
push
mov
aas
adc
add
popa
cmpl
fwait
imul
fsubrl
and
cmc
adc
out
lock
xchg
sub
mov
dec
imul
mov
dec
mov
sub
inc
in
imul
dec
adc
pop
out
push
out
pop
sub
mov
mov
push
cs
cli
inc
mov
cwtl
add
xchg
stc
xchg
mov
pop
jl
sub
adc
and
jno
mov
arpl
xchg
pop
lret
mov
jg
and
push
dec
mov
psubd
xchg
cltd
pop
push
in
stc
inc
xchg
mov
xchg
popf
subb
jb
cmp
dec
or
ret
fsts
fmul
fnstenv
sti
and
and
xchg
es
daa
xor
sub
in
loope
sbb
xor
leave
loope
std
addl
mov
cld
jno
arpl
fs
pop
push
cmc
push
adc
int
push
aad
lea
mov
ret
mov
or
mov
cmpsb
shll
mov
loopne
dec
pushf
lea
aaa
loopne
rolb
int
pop
lock
cmpsl
pop
mov
pop
test
sub
jns
fstps
inc
popf
bound
xor
pop
push
dec
stos
dec
xor
cwtl
mov
xor
push
js
pop
push
xchg
sahf
hlt
insb
dec
leave
scas
loopne
mov
xchg
outsl
mov
push
mov
xchg
mov
or
sbb
sahf
clc
add
add
adc
mov
push
dec
lret
and
and
fildl
adc
fxch
leave
loopne
loopne
and
sub
sub
jecxz
xlat
mov
push
cli
rorl
jb
jo
mov
jecxz
dec
out
movsb
bound
loop
mov
call
inc
push
sub
mov
adc
lret
aas
fucom
ljmp
loop
push
shl
sbb
pop
mov
rcrb
jle
inc
test
dec
lret
dec
sbb
inc
xchg
jno
cmc
push
pop
lahf
aad
loope
add
call
sahf
lods
mov
add
test
test
popa
jo
push
movsb
sub
cmp
push
mov
inc
ret
test
dec
hlt
lods
icebp
popa
push
inc
cmp
incb
jg
cmp
jno
addb
and
jb
cltd
rcpps
add
insb
mov
push
add
push
mov
leave
sbb
sub
iret
jmp
mov
pop
pop
loope
loopne
adc
add
mov
mulb
and
push
fsubrl
lods
cmp
mov
pop
ss
stc
jbe
mov
and
push
xchg
pop
add
pusha
adc
cwtl
jns
rclb
popa
scas
in
cvttps2pi
rcrl
jmp
leave
xor
ja
mov
mov
cmc
dec
loope
sbb
sbb
roll
and
sub
jb
mov
in
xchg
sub
jecxz
push
sti
or
mov
jmp
xchg
paddq
mov
fiadds
mov
ucomiss
adc
push
mov
mov
repnz
xorb
jne
xchg
loope
xor
mov
dec
imul
orl
fcmovu
rclb
dec
jp
jg
lods
xor
ja
loopne
divl
insl
stc
sub
inc
add
xor
jns
loope
inc
jo
inc
pop
insl
rorb
mov
push
cld
lock
icebp
inc
ja
xchg
jle
je
rcrb
xchg
pandn
push
jne
mov
dec
int
imulb
or
dec
cltd
pop
out
test
int
dec
setp
dec
shl
add
in
lret
xchg
push
in
inc
out
lods
lret
into
sbb
in
ret
loop
mov
add
xor
out
cmpsb
shrb
inc
sub
push
sub
mov
cmp
mov
push
jnp
mov
sub
in
dec
mov
int
aaa
into
mov
push
lahf
mov
inc
cmp
xchg
mov
testl
pop
lock
movsb
inc
mov
or
rclb
push
sub
fidivs
subl
mov
push
cli
add
and
or
in
push
ljmp
sub
push
cmp
loope
add
mov
lods
and
das
dec
jnp
arpl
xor
xor
leave
inc
data16
aas
xchg
je
adc
sub
loope,pt
mov
rclb
test
push
shlb
sub
adc
cmc
cld
mov
mov
ljmp
pusha
dec
mov
sbb
sub
xor
adc
in
pop
subl
cwtl
cmp
adc
push
ljmp
in
cmp
mov
jmp
inc
jl
in
out
into
or
cmp
jb
and
mov
xorl
push
sbb
pop
dec
jmp
sarb
std
push
or
inc
out
dec
adc
push
clc
or
jecxz
popf
xchg
mov
je,pn
xchg
std
xlat
mov
mov
test
lcall
icebp
jb
xor
lods
ljmp
xchg
sbb
mov
push
in
inc
mov
cwtl
lret
xchg
jge
mov
push
fstpt
loope
rcll
test
ret
xchg
pushf
dec
lahf
ja
testb
jno
subl
xchg
inc
mov
adc
int
ss
and
cmp
inc
out
xorb
xor
mov
mov
xlat
mov
gs
adcl
dec
mov
js
mov
push
xor
enter
sub
pop
scas
out
or
mov
fistpl
loopne
scas
mov
cmp
pop
pop
or
repnz
or
push
rol
lret
inc
outsl
adc
shll
shll
adc
orb
sub
or
lcall
adc
sbb
lock
mov
adc
mov
repnz
mov
lods
xor
out
je
out
mov
sub
jae
repz
ret
out
fisttpll
sub
xor
fmuls
add
sbb
fidivrl
adc
or
cs
push
test
pushl
and
out
scas
sbb
jo
ljmp
cmp
inc
mov
jp
pop
mov
fsubr
adc
lock
arpl
mov
ss
push
ja
clc
xor
insl
insl
fdivr
scas
iret
add
movsl
jmp
sbb
mov
jae
jp
cwtl
ja
aad
in
fsubl
mov
sbbb
or
js
xor
mov
inc
flds
mov
xchg
jp
jnp
enter
push
jb
cmp
cs
pusha
test
repz
hlt
add
shll
outsb
cltd
outsb
roll
jle
and
aas
and
arpl
push
adc
or
xchg
sbbl
or
adc
pop
mov
jl
mov
int
mov
and
or
imul
mov
ds
push
push
mov
cmpsb
xchg
mov
or
stc
mov
mov
ret
jg
cli
test
lcall
decl
inc
pop
addl
mov
addr16
shll
sbb
fsubrs
pop
dec
inc
out
xlat
mov
mov
push
in
jl
lret
adc
cmp
scas
xbegin
inc
mov
and
shll
in
cld
xchg
testl
ja
lods
mov
xorb
push
inc
sarl
rcr
adc
imul
mov
lret
pop
in
test
cltd
aas
test
das
mov
gs
into
push
inc
scas
and
sbb
mov
daa
into
movsl
mov
pop
ja
mov
jmp
sbb
xor
add
mov
mov
jmp
loopne
xchg
sti
push
test
les
inc
bound
out
or
addb
jge
xchg
or
in
in
pop
pandn
cld
sahf
loop
or
push
out
mov
lahf
dec
mov
jns
icebp
ljmp
push
lcall
xchg
int3
mov
out
push
pop
sub
dec
movsl
push
mov
ret
int3
pop
jbe
or
mov
sub
add
jl
add
test
mov
mov
dec
cmpsl
pop
iret
shrb
repz
pop
leave
inc
sub
insl
mov
je
aaa
or
pop
sub
cmpsb
push
sub
cwtl
sub
push
inc
cmpsl
enter
insb
aas
push
scas
cld
dec
or
popa
loopne
jo
je
mov
push
push
push
jp
sbb
fsubrs
and
notl
ss
jle
adc
mov
movsb
lret
sbb
mov
push
int3
dec
in
sub
daa
fwait
pop
add
mov
xchg
call
test
xchg
shll
pop
push
add
mov
inc
outsl
push
test
cmp
nop
ss
jle
fxch
cmpsb
lret
jecxz
sbb
inc
inc
imul
jb
lret
ficompl
jne
repz
pop
push
popa
push
icebp
dec
aam
mov
push
jno
addr16
dec
popa
lahf
or
mov
push
inc
sar
insl
out
lods
xor
sahf
mov
mov
xor
repnz
mov
bound
fcoms
cmp
and
test
mov
ljmp
sbb
jmp
or
popa
and
push
fnstcw
cltd
enter
xor
mov
mov
enter
dec
mov
inc
sbb
mov
xchg
or
inc
mov
movsb
popf
fistps
imul
or
cmp
sub
push
std
call
aaa
cltd
sbb
sahf
scas
or
lds
sbb
jmp
lret
push
out
pop
cmpsl
push
dec
adc
out
xchg
mov
lret
mov
test
push
jo
rorl
in
in
sbb
sbb
cmp
push
in
push
mov
lock
add
daa
imul
stc
sub
ds
xor
mov
enter
inc
xchg
sub
add
aam
pop
test
js
in
sti
fsubrp
xor
ljmp
sbb
add
mov
and
test
inc
push
daa
cmpb
and
mov
popa
pop
stos
push
out
and
xor
aaa
rclb
mov
add
xlat
cld
dec
sarb
xchg
or
add
pop
mov
adc
adc
nop
leave
jecxz
sub
inc
mov
cwtl
push
adc
xchg
aaa
adc
push
mov
sbb
xchg
mov
shl
cltd
jle
mov
aam
cli
inc
cmp
fistl
push
out
ret
cwtl
push
xor
sbb
sub
pop
je
push
rorb
jmp
cli
andl
aam
stos
jnp
xorl
jmp
mov
and
push
sahf
lods
mov
cltd
insl
adc
pushf
pop
shrb
into
jmp
das
cmpsb
arpl
xor
aaa
xchg
faddl
mov
dec
sahf
test
je
pusha
jg
push
ljmp
xor
test
iret
mov
clc
mov
push
push
lods
sub
ds
loopne
push
add
mov
stos
xor
cwtl
mov
mov
fldt
jmp
pop
fcmovnu
lahf
loop
rcll
les
dec
dec
loope
jmp
dec
out
sbb
cwtl
xor
lods
adc
sub
fwait
inc
sbb
sub
cld
dec
repnz
fstl
inc
jo
std
mov
bswap
sbb
out
insb
dec
adc
push
stos
out
jbe
lea
mov
push
imul
addr16
mov
test
lret
xorb
fdivrl
mov
push
push
cmp
andl
mov
jge
mov
push
jbe
lock
or
mov
mov
sbb
and
clc
or
shlb
and
sub
sbb
push
xlat
fisubrl
jle
shlb
aad
scas
aam
out
add
call
ja
push
cmpsb
and
dec
fidivs
or
hlt
andb
std
shlb
lcall
out
into
roll
push
mov
or
sbb
jecxz
ljmp
sti
fwait
ja
xlat
jl
dec
sbb
std
mov
push
int3
into
popf
sbb
mov
loope
mov
mov
mov
out
mov
mov
xchg
mov
adc
shl
lahf
mov
leave
sbbb
out
jb
xor
shl
cmp
sti
or
and
xor
test
jecxz
or
mov
jge
cmp
pop
int
push
and
dec
inc
inc
mov
inc
inc
cltd
lods
aas
movsb
lret
aad
inc
lea
pop
adc
test
sahf
mov
loope
mov
inc
fs
repnz
push
and
imul
xor
adc
movsb
push
fmul
mov
in
inc
jge
adc
mov
ret
sarl
push
xchg
fs
adc
sub
mov
push
mov
add
inc
stos
pop
stos
ret
adc
dec
jns
mov
sub
or
icebp
xchg
sahf
inc
jae
push
jae
push
adc
arpl
pop
mov
push
int3
rcr
sbb
jle
mov
xchg
out
out
mov
mov
inc
pop
add
scas
int3
xorb
xchg
ret
ja
cltd
mov
imul
clc
adc
xchg
hlt
or
jg
dec
jle
and
shlb
outsb
test
pop
dec
xor
push
adc
jmp
ficompl
pop
mov
mov
jp
pushf
pushf
fdivrl
call
out
dec
fnstcw
lea
out
aaa
sub
jp
jle
lea
rorl
mov
lret
inc
cmp
inc
shrl
jb
mov
sbb
cmp
mov
sub
mov
jecxz
insl
mov
mov
push
out
lret
push
xchg
cld
movsl
dec
test
loope
jns
sub
es
xchg
call
sub
lock
cmp
or
test
mov
or
xlat
xchg
shlb
enter
push
jae
push
adcb
cmp
sarb
cmc
xchg
mov
loope
cmp
push
sbb
cmp
mov
xor
in
in
inc
scas
in
add
out
sbb
jae
sub
inc
sub
je
ret
rcrl
cs
scas
xlat
int
test
pop
inc
mov
inc
sub
or
pop
push
push
stos
mov
iret
loope
mov
fcoms
fisubrs
punpckhdq
cmp
fldcw
jne
testl
and
nop
insb
jp
mov
cltd
loopne
sub
add
pop
add
push
push
sbb
xor
lret
inc
mov
push
xor
mov
xor
xchg
cmp
mov
pop
mov
xchg
adc
and
repnz
aad
lds
or
adc
lret
sbb
add
lods
mov
or
shlb
cwtl
mov
repz
mov
sbb
jnp
mov
in
out
ja
movsl
xchg
sbbb
add
mov
mov
mov
inc
or
push
or
scas
sar
sahf
pusha
and
cmpsb
xchg
js
inc
sbb
pop
mov
inc
ds
mov
hlt
cmpsb
push
xchg
jo
loop
adc
dec
test
jecxz
adc
inc
popa
divb
lock
jbe
dec
pop
lret
ja
cmp
andb
fwait
push
ljmp
xor
mov
cmc
nop
xor
dec
iret
pop
loop
lcall
push
out
xchg
fs
add
dec
lods
mov
sbb
ret
mov
jnp
pushf
mov
mov
inc
pop
and
sbb
mov
cmpsb
jge
sbb
testb
or
push
lods
movsb
dec
out
add
pop
add
lcall
pmullw
in
mov
imul
out
mov
mov
cld
pop
shr
push
imul
jl
repnz
roll
pop
fcoms
xchg
stos
cmp
inc
ds
inc
xor
mov
pop
ret
insb
adc
pop
dec
sbb
fsts
dec
mov
mov
mov
aam
adc
stos
adc
lock
mov
out
adc
cmc
or
dec
and
jle
mov
rclb
jb
leave
xor
or
in
pop
jmp
or
pop
inc
jp
adc
fidivl
into
jg
shll
mov
push
or
leave
lods
aad
shll
mov
rcll
mov
mov
jmp
mov
fs
aam
dec
pop
jmp
rolb
add
pop
adc
insb
mov
cmpsl
push
loop
fcoms
jecxz
dec
fs
repz
aas
rclb
mov
jb
pop
out
cmpsb
sarb
cmp
or
stc
lea
loopne
xchg
roll
mov
test
pop
lds
inc
sbb
push
aad
mov
xor
stc
pop
clc
in
xor
sbb
aad
push
jb
mov
push
dec
sti
addr16
add
pop
pop
push
call
or
cmp
popa
in
inc
ret
imul
pop
mov
xor
lods
xlat
xor
out
daa
outsb
mov
or
dec
shlb
jns
lret
or
jo
xchg
jne
pop
sub
xchg
aas
pop
mov
dec
cwtl
sub
xor
sbbl
inc
cmp
xchg
or
adc
lcall
xor
icebp
sbb
sbb
and
cmp
lret
andb
mull
and
sbb
movsb
push
pop
mov
popa
push
xchg
mov
mov
gs
push
sbb
lock
and
ret
scas
data16
repnz
cmp
cmpsl
lret
xor
sub
mov
inc
jne
xor
ret
and
add
data16
xchg
inc
nopl
mov
sbbb
cltd
movsl
sub
test
gs
mov
out
or
ret
mov
into
adc
hlt
ret
push
lahf
insl
jp
fmull
popa
or
shr
loopne
ss
cmp
nop
ja
sbb
movsb
fwait
dec
test
aad
fnsave
jne
add
outsb
imul
mov
and
jns
stos
lods
push
out
inc
add
lret
movsl
sahf
out
outsl
cmp
sbb
lods
sub
ret
clc
test
sub
int3
adc
leave
rcrl
cmp
xchg
add
jecxz
fwait
es
xchg
dec
cmp
das
shrl
sub
fstp
pop
inc
loop
add
popf
and
xchg
test
mov
xor
nop
ret
push
popl
add
sbb
xor
or
bound
pop
mov
mov
push
or
mov
sub
cld
pop
fdivrs
xor
fs
ss
jmp
adc
push
fwait
loop
pop
sbb
mov
push
imul
mov
popa
push
dec
cmp
jbe
mov
pop
movsb
sbb
dec
into
dec
insl
adc
lds
jecxz
dec
inc
push
ljmp
out
inc
lret
int3
lds
xor
push
fs
fwait
push
jne
push
gs
push
pop
lods
repz
and
mov
lods
cmpsb
sub
mov
into
sbb
out
sbb
pushf
mov
dec
mov
jnp
and
fadds
rcrb
adcb
int3
jnp
ljmp
dec
addr16
cmp
adc
iret
jno
stos
flds
and
in
mov
cmp
in
sub
and
jae
insl
fstpt
sbb
js
dec
pop
dec
cli
out
scas
lods
leave
adc
lret
sbb
stc
ss
add
cmc
movsb
and
and
cmpsl
insl
ret
gs
popf
jne
js
xchg
push
fwait
lcall
xchg
push
inc
mov
or
xchg
xchg
jl
add
adc
cmp
lea
push
xchg
adc
orb
movsl
les
adc
mov
lods
mov
xchg
ss
xchg
dec
jmp
inc
test
data16
inc
fsub
fisttps
movsl
cmpsl
mov
out
outsb
push
pushl
adc
inc
enter
sbb
sub
mov
shll
mov
xor
arpl
adc
mov
in
call
jmp
jnp
push
cld
xor
xor
lods
fwait
nop
dec
pushf
punpcklbw
jno
cmp
sub
cmp
mov
lock
sahf
popfw
cmpps
add
stc
and
mov
lahf
sub
pop
dec
sbb
shl
mov
fadds
fidivrs
loope
or
ficompl
rolb
outsb
jmp
mov
aam
push
adc
jbe
insl
sbb
jl
rcrb
cmp
sahf
xchg
ret
mov
adc
mov
add
mov
mov
sub
or
shrl
cmpsb
shrb
fs
lods
pusha
adc
add
rep
sub
iret
cmp
cmp
fwait
and
jmp
in
xchg
daa
push
stos
inc
ret
inc
repnz
stos
popa
inc
stos
sbb
jmp
cld
jge
arpl
gs
popf
sbb
adc
sub
and
adc
inc
ret
bound
inc
pop
mov
lods
pop
and
in
cmp
popf
jl
xchg
add
xchg
xor
ss
and
pop
jle
inc
cmp
inc
mov
stos
mov
jne
or
push
out
popa
mov
mov
in
fwait
test
sti
xchg
or
rcrl
xchg
shll
gs
lock
fs
ret
push
pop
movsl
ja
xchg
push
arpl
fldcw
or
nop
scas
imulb
leave
push
das
scas
les
xchg
call
rcrl
cmp
inc
pop
xor
mov
and
stos
cltd
addr16
insl
das
pop
jns
pop
jg
xor
jg
fldln2
jo
pop
jae
rcr
cmp
cmpsb
loopne
outsl
sbbl
add
cltd
pop
adc
frstor
sub
shrb
int3
xchg
mov
xlat
dec
out
mov
and
pop
out
mov
inc
push
mov
stc
push
gs
push
sbb
outsb
jno
cmp
push
sub
stc
pop
inc
adc
sbb
sar
xor
loope
mov
cmp
insb
xor
repz
outsb
sbb
mov
push
stos
dec
xor
dec
push
add
or
fmull
dec
or
std
mov
pop
push
mov
pusha
ljmp
popf
dec
out
jne
cld
mov
inc
sbb
inc
sbb
inc
dec
xlat
stos
jecxz
inc
add
hlt
add
mov
mov
lea
push
test
imul
inc
mov
jb
jae
stc
sub
push
mov
jne
arpl
pushf
lret
test
es
mov
xor
jmp
pop
jmp
fsubrl
dec
dec
dec
std
lret
sub
repnz
jae
cmc
mov
fstl
mov
pop
and
clc
push
inc
pop
add
jl
insl
mov
les
dec
push
adc
pop
cmp
add
mov
adc
jno
cmp
xchg
adc
jmp
cmp
ret
fsts
test
push
imul
cwtl
xor
gs
push
popf
test
mov
scas
sbb
fildl
mov
sbb
jb
into
cmp
xchg
xchg
aad
mov
and
jg
mov
jle
xchg
aaa
les
cwtl
repz
cwtl
adc
jnp
hlt
xchg
xor
push
mov
test
sbb
push
aam
cmp
xor
inc
out
call
into
dec
int
inc
push
xchg
repnz
dec
repnz
into
mov
sub
mov
xor
inc
sbb
stc
sarl
and
fisubl
in
push
push
fcompl
jne
cld
inc
mov
push
inc
jns
jp
scas
jae
fdivp
mov
mov
mov
xor
jne
loopne
pusha
mov
sbb
cld
adc
jle
cmc
mov
lock
inc
data16
cli
xchg
inc
rcl
and
push
pusha
and
mov
imul
or
sub
lea
aaa
rolb
mov
xor
int
sahf
jp
popa
addb
out
jae
ret
sbb
cltd
push
fdivs
fwait
add
test
jmp
call
add
movsl
fwait
push
pop
jecxz
out
cmpsl
adc
pop
dec
pop
mov
sub
clc
or
xor
dec
std
jmp
pop
mov
sbb
jnp
fdivl
sub
insb
scas
push
mov
mov
sbb
ljmp
out
push
jne
add
add
inc
sbb
mov
mov
cmc
sbb
jp
push
jecxz
cltd
jb
es
and
jne
inc
icebp
mov
sub
jne
inc
nop
dec
inc
dec
inc
xor
sti
and
rcrl
mov
bswap
mov
arpl
push
jp
insb
out
dec
daa
lds
add
jnp
pusha
jle
dec
mov
push
fdivrl
and
sbb
jae
push
scas
pop
mov
inc
mov
mov
inc
inc
adc
cmp
negl
mov
mov
xchg
dec
movsl
mov
or
adc
cmp
jb
pusha
mov
xchg
test
push
push
sbb
cmp
or
test
xchg
xchg
inc
pop
fistps
push
push
pop
fimuls
aad
push
movsb
lcall
popa
inc
sub
negl
iret
or
mov
mov
nop
xor
dec
add
dec
test
call
pop
pop
pop
pop
popf
mov
add
xor
mov
inc
adc
push
push
sub
inc
test
sbb
stos
add
fs
pop
movl
mov
adcb
nop
test
push
mov
push
add
pop
dec
lds
pop
aaa
sbb
fisubrl
add
pop
xor
add
fisubl
std
add
clc
add
in
sbb
mov
outsl
insb
insb
adc
cmpsl
out
and
cmpsb
pop
mov
pop
inc
jecxz
mov
jmp
dec
in
jbe
mov
sub
ret
xchg
dec
pop
lret
jmp
lret
mov
mov
mov
std
fildll
push
sub
ss
insb
sbb
nop
and
xor
mov
pushf
lret
xchg
mov
rolb
popa
jbe
stc
inc
pop
std
out
xchg
xchg
mov
jo
jbe
jl
xor
insl
and
fcmovb
mov
in
jo
xor
pop
xchg
push
sbb
sbb
mov
and
add
adc
fcompl
fidivl
mov
dec
ret
xchg
fadds
aad
loope
pop
xlat
xchg
es
imul
cmpsb
or
xor
sub
mov
pop
xor
jle
jns
iret
leave
cli
pop
adc
aad
aad
mov
ds
ds
iret
aam
idivl
cmp
sub
data16
ljmp
cmp
push
mov
imul
icebp
pop
inc
insb
sbb
push
push
mov
adc
stos
ret
vpshlw
xlat
jge
mov
xchg
jecxz
sbb
pop
cmp
inc
popl
mov
dec
negl
cmpsl
mov
or
adc
stos
sahf
mov
inc
loope
into
out
cmp
inc
mov
pop
sarl
int
xor
lods
jb
lock
mov
add
leave
push
stos
pushf
sbb
pop
dec
inc
daa
mov
mov
imul
sti
push
adc
fmull
outsb
jl
call
mov
retw
sub
push
subl
cmp
mov
bound
push
out
sub
mov
jl
xchg
clc
lcall
add
rorl
dec
mov
or
jae
and
mov
jle
les
lods
xchg
aad
fdivrl
pop
push
lret
cmp
inc
mov
dec
inc
mov
ror
jns
or
shlb
cltd
jge
inc
mov
jl
and
mov
sbb
mov
sub
push
sub
into
pop
xor
out
lea
push
scas
sbb
scas
mov
jl
shll
pop
cmp
and
xchg
aam
ja
adc
repnz
fstpt
fld
dec
inc
sti
adc
mov
sbb
lcall
ret
cmpsl
cmp
push
and
sbb
xor
push
jp
mov
fstl
sbb
out
jl
mov
ret
inc
add
mov
jle
dec
cmp
jmp
sarl
sbb
xchg
cmp
in
add
aaa
imul
jns
jl
outsb
mov
adc
cld
mov
movsb
int
add
cmp
fdiv
push
outsl
push
std
pop
pop
inc
subl
xorl
mov
push
push
pop
imul
ret
cs
sub
fldenv
sub
inc
outsl
pop
int
xchg
hlt
andl
loopne
fdivrp
or
sahf
aaa
clc
addr16
and
cmp
test
out
out
cld
insb
enter
repnz
jne
dec
pop
xchg
xchg
xchg
loop
stos
outsl
clc
cmp
and
xchg
loop
push
sub
mov
and
imul
xchg
negb
out
pop
and
mov
jo
pop
mov
dec
je
pop
popa
nop
inc
cld
xchg
jns
sub
jne
pop
rcrb
push
andl
and
xchg
faddl
push
test
xchg
or
adc
outsb
push
mulb
or
fdivrs
das
add
in
aam
sbb
scas
and
pop
aas
sub
iret
jbe
adc
clc
mov
arpl
bound
xchg
test
cltd
fisubs
mov
sbb
and
or
push
in
mov
push
xor
push
scas
dec
add
and
adc
xor
shrb
std
mov
xchg
int
xchg
add
data16
adc
arpl
xchg
xor
inc
shrb
fsubr
negl
outsl
push
or
jns
xor
cmp
subb
or
sbb
jae
add
pop
cmpsb
mov
dec
cmp
inc
add
sub
xchg
cmp
jecxz
lret
cltd
insl
sbbl
stc
outsl
inc
xor
push
stos
fs
pop
lret
je
gs
and
jmp
push
sbb
mov
xor
aas
in
sub
inc
cmp
pop
les
shrl
jle
mov
xor
inc
fdivrp
movsb
jecxz
xchg
stos
adc
test
cmp
push
sbb
cmp
adc
lea
into
or
faddl
ror
loop
stc
add
es
icebp
mov
add
jo
mov
lock
nop
mov
jge
cld
inc
push
mov
pop
enter
lods
fisttps
ret
loope
jmp
cwtl
mov
mov
cmpsb
daa
and
out
mov
push
xchg
pop
dec
shlb
cmp
pop
insb
jle
pushf
and
andb
cmp
stos
push
xchg
mov
incl
mov
out
popf
jns
shll
addb
adc
xor
dec
push
sbb
fsub
leave
lahf
push
dec
lret
mov
pop
cmp
cmpsl
pop
mov
fisttps
shll
stos
xor
xchg
add
xchg
push
xchg
aam
and
daa
popf
loop
cmp
mov
jo
push
adc
out
lds
sbb
sbb
test
and
sbb
ljmp
or
xorl
out
and
aas
mov
gs
pop
popf
pusha
cltd
mov
sbb
arpl
aaa
out
cmpsl
sti
mov
add
push
pop
lcall
dec
xor
xor
mov
xor
xlat
test
ja
or
xor
lea
lahf
arpl
test
popa
add
push
cltd
mov
stos
int
ret
addr16
push
data16
hlt
lret
je
sbb
lcall
icebp
jae
jo
dec
outsl
rcll
imul
popf
sub
pop
push
lds
mov
jne
jp
pusha
into
and
cwtl
lret
push
or
rorb
sbb
xchg
jmp
repz
mov
jae
out
js
cmpb
jb
cmpsl
push
dec
arpl
mov
sbbb
and
add
testb
cmp
outsl
aad
imul
adc
out
push
arpl
arpl
mov
mov
cmp
push
ja
jno
shrl
js
xor
push
mov
sub
cmpsb
or
mov
dec
fldln2
ds
push
je
test
rcrb
jp
mov
xchg
cmp
xlat
jle
and
mov
cmpsb
hlt
or
sti
into
arpl
push
cmc
add
addr16
test
push
cmpsb
push
lcall
cmp
faddp
stos
jb
jo
jmp
aad
inc
stos
lahf
loop
clc
pop
xor
stos
pop
lcall
and
pushf
push
add
and
push
fbld
jbe
out
mov
dec
dec
sahf
jmp
mov
jge
movsb
test
test
mov
push
xchg
mov
dec
div
jno
std
cmc
out
dec
xchg
aaa
cltd
mov
ret
mov
xor
pop
shl
nop
or
movsl
loopne
jae
fwait
out
loope
lahf
loopne
mov
cmp
mov
pop
pop
clc
mov
xor
adc
dec
shlb
mov
push
pop
popa
fs
pop
cmp
loopnew
mov
xchg
outsl
xchg
pop
in
test
inc
fiadds
outsb
jecxz
sub
jns
xor
je
or
mov
popf
call
mov
inc
in
enter
push
lods
or
adc
push
push
clc
mov
pop
sti
repz
or
push
das
mov
mov
adc
test
fsub
insl
sub
or
out
mov
outsl
sbb
sahf
xchg
daa
popf
outsl
in
push
pusha
add
xchg
and
aam
xchg
add
or
mov
fdiv
sbb
jnp
gs
stc
aas
movsl
mov
fwait
ret
repnz
mov
xchg
push
inc
and
clc
push
iret
mov
iret
sbb
cwtl
push
dec
aad
dec
dec
fmull
dec
testb
lea
dec
test
outsl
sti
mov
out
push
mov
int
out
sbbb
stos
test
mov
or
mov
xlat
lock
outsb
mov
pop
insl
push
cwtl
test
ljmp
addr16
mov
adc
mov
push
sbb
es
mov
mov
mov
cmp
inc
fsubrs
fbld
iret
enter
pop
lret
xor
jae
dec
mov
add
test
test
sub
jge
add
mov
scas
outsb
jp
dec
scas
jb
jno
cli
vcvtdq2pd
xchg
pusha
fimuls
sbb
insl
cwtl
push
jno
push
sbb
imul
pop
fldcw
pop
jecxz
lcall
dec
ja
ds
and
lret
aas
add
inc
out
jle
mov
test
ss
xlat
inc
mov
and
imul
push
mov
push
test
push
aam
dec
jge
sub
movsl
fisubrl
popf
int
and
int3
xchg
stos
test
test
out
sub
cmpsl
xlat
fiaddl
popa
in
or
outsb
jmp
inc
setle
ficompl
sar
sub
mov
lds
out
pop
jp
cmpsb
lods
outsb
mov
shl
fcmovbe
cmc
inc
sbb
sarb
add
cld
dec
popf
iret
dec
lods
popf
push
out
icebp
add
cmp
sbb
fildl
test
out
sub
xchg
jnp
aas
aad
notl
pop
mov
outsl
std
fsave
addr16
fs
or
pop
xchg
jge
xor
aad
inc
clc
sub
xor
jg
out
jmp
std
add
icebp
sub
sub
clc
jb
movsb
adc
cld
push
ds
mov
out
ret
pop
adc
mov
mov
out
xor
xchg
test
je
lahf
int
dec
iret
adc
push
shl
cmp
and
mov
pop
fdiv
and
dec
cmc
xchg
loopne
pop
push
popa
fnsave
cmovs
int3
aam
cmp
sbb
inc
xchg
mov
mov
adc
inc
fildl
sub
repz
mov
roll
int
push
sub
push
xor
lods
pop
gs
sub
sub
cltd
stos
xlat
adc
jp
mov
mov
cmp
sarb
add
cs
call
lcall
cmp
mov
ficompl
adcb
mov
or
inc
mov
cmpsb
jne
pop
mov
in
movsl
adc
into
into
enter
rolb
icebp
scas
jge
push
arpl
pop
sub
push
mov
cmp
jne
cs
and
mov
scas
or
dec
adcb
jmp
in
mov
sarl
cmp
sbb
xorl
fidivl
cld
subl
mov
sbb
mov
imul
lods
scas
mov
inc
adc
xor
fbld
ret
cmp
xor
push
mov
add
pusha
push
xchg
add
jmp
mov
sub
or
aam
or
pop
adc
les
rcrb
xchg
mov
arpl
loopne
ja
mov
fisubrl
sti
std
push
movsb
cmpsb
cmpsb
xchg
xchg
inc
arpl
mov
adc
movsb
jns
or
or
pop
mov
inc
mov
mov
jge
jecxz
shrl
frstor
adc
in
imul
cmp
jno,pt
stos
add
push
pop
mov
into
out
pop
jno
sbb
out
je
mov
insb
add
mov
fdivrp
pop
js
je
inc
fs
shlb
jae
sahf
cmp
inc
js
adc
roll
or
push
leave
pop
inc
imul
push
push
sub
and
adc
cmp
fwait
pusha
add
das
push
mov
add
int
ret
imul
cwtl
out
sbb
cmp
cld
ret
xor
out
cmpsb
or
mov
mov
insl
sahf
ljmp
fdivp
jb
mov
mov
sub
adc
lret
fwait
je
inc
xlat
xchg
rcrb
adc
in
push
popf
add
dec
adc
mov
testl
push
dec
fists
pop
fmuls
mov
insb
fists
sub
add
adc
push
push
cmp
daa
fdivs
test
inc
pusha
push
imul
or
xor
cld
jo
mov
int
push
jge
pop
adc
loop
inc
popa
ret
jbe
hlt
cli
mov
mov
pop
mov
mov
add
push
inc
sub
mov
add
mov
dec
xcrypt-cbc
cmpsl
rorl
bound
sub
sbb
dec
int3
dec
push
jne
cmp
out
das
or
les
imul
xor
aad
jg
js
mov
cmc
mov
icebp
or
mov
add
aaa
sbb
notl
lcall
rclb
aad
stos
inc
test
sbb
imul
mov
dec
outsl
push
in
jno
jmp
out
or
ss
mov
std
outsb
out
mov
loopne
mov
enter
lods
jp
nop
sub
in
mov
aaa
daa
sti
sub
lea
adc
sub
mov
mov
mov
ljmp
mov
cli
sub
aam
es
mov
addr16
nop
mov
outsl
mov
int
lcall
scas
and
or
mov
bnd
out
pusha
fucomi
repnz
pop
dec
dec
mov
dec
dec
es
stos
add
fimull
jle
add
mov
xchg
cmp
dec
push
cmp
insb
mov
stos
pop
neg
sti
pop
jp
into
aaa
repnz
sbb
push
les
xchg
js
cmp
xchg
test
pusha
bnd
dec
pop
lods
call
cmpsb
imul
ljmp
or
and
xor
jl
mov
adc
push
add
imul
dec
pop
xor
into
jmp
sahf
jno
divl
cmp
sbb
inc
fdivrs
sub
push
sub
jbe
insl
aam
jns
les
push
xchg
repz
mov
rorl
ds
mov
adc
adc
outsl
sub
cltd
sub
jb
fdiv
and
test
notl
push
sub
dec
mov
ja
pop
lods
mov
addr16
data16
mov
sub
out
mov
into
mov
cmp
mov
shll
push
cmp
cmp
insb
sub
xchg
ljmp
mov
mov
xchg
cmpsl
out
pmaxsw
jno
xchg
fbstp
mov
dec
ret
sub
jo
push
cmc
mov
push
pop
add
dec
jge
mov
mov
xchg
shrb
sti
es
inc
mov
mov
ja
fwait
adc
adc
jmp
dec
fstpt
fidivrs
dec
insb
out
sarl
adc
out
dec
repz
push
pop
sbb
es
and
push
pop
mov
jbe
inc
sub
outsb
dec
lods
ficoml
pop
jg
outsl
or
std
es
jecxz
mov
pop
js
adc
das
or
sub
jle
and
xchg
mov
xchg
cld
ret
out
lods
movsl
insl
sbb
lods
in
inc
dec
std
jb
aaa
cmp
das
cmpsl
cld
dec
adc
popf
adc
push
jle
and
call
addr16
xlat
xor
mov
in
sub
jg
mov
inc
dec
icebp
or
lcall
pop
lods
cmpsl
clc
loop
cld
add
and
jecxz
xor
sahf
ror
jle
adc
and
sbb
sbb
dec
fadd
pop
mov
adc
nop
stc
std
mov
sub
lds
fadds
jge
adc
outsb
pop
dec
cmpsl
mov
lock
imul
paddsw
insl
or
call
inc
xchg
mov
das
cmp
cmp
fidivrs
mov
sbb
in
adc
cmp
scas
xor
mov
out
cmpsb
adc
mov
pop
sbbl
out
cld
xlat
xlat
outsl
mov
sti
inc
or
notb
pop
jmp
cld
xor
aam
inc
mov
push
rorl
mov
shrl
in
and
cmp
pushf
mov
inc
mov
sub
sbb
cmp
pop
cli
lret
xlat
out
jl
sub
sub
in
pop
insl
sbb
in
icebp
movsl
mov
fs
sahf
imul
incl
lcall
sub
ja
fidivrl
sbb
or
jp
lods
jge
mov
fistpll
pop
sbb
mov
inc
push
push
into
gs
and
dec
loopne
movsb
sub
adc
cmpsl
mov
outsl
std
xor
mov
xor
mov
call
stc
int
cmp
loop
xor
ljmp
sbb
dec
cmp
cmp
xchg
mov
in
insb
mov
pop
mov
in
sbb
jno
mov
mov
adc
arpl
int3
shll
stos
add
adc
fucompp
arpl
gs
ret
pop
cwtl
insl
dec
add
fldl
xor
dec
lea
mov
insl
cmp
out
pop
mov
mov
ja
test
jne
jae
in
xor
out
les
in
cmc
sub
xchg
inc
fabs
roll
mov
cs
mov
adc
scas
jno
mov
xchg
mov
stos
jae
sahf
lcall
dec
call
cmpsb
push
and
repnz
frstor
pop
inc
insb
jae
jne
and
mov
adc
xorl
mov
dec
push
je
or
mov
xchg
in
jecxz
xor
sub
popf
mov
mov
in
cwtl
push
and
mov
test
jg
stos
test
pop
repz
or
test
std
jno
test
xor
in
jge
inc
xlat
js
and
ret
lahf
lock
outsl
sar
pop
fidivrl
jns
aaa
xchg
push
and
movsw
movsl
insb
cmp
dec
push
repnz
icebp
mov
pop
shll
push
jge
aad
mov
test
leave
jns
cmpsb
std
mov
mov
in
stos
dec
fcos
loope
loope
inc
jbe
push
arpl
daa
fwait
pop
mov
shll
mov
add
pop
dec
dec
loope
loopne
stc
cmc
clc
and
call
dec
lahf
cmp
nop
leave
out
xor
pop
aam
sbb
divl
scas
mov
mov
mov
rorb
jle
pushf
adc
jle
lods
rcrl
cmpsb
sub
out
and
xchg
mov
scas
sahf
movsb
or
mov
sbb
xor
sbb
ret
mov
addr16
mov
push
sbb
repnz
xlat
pop
xor
sub
insb
mov
sar
lret
shrb
inc
bound
dec
ret
sahf
dec
into
popf
test
fdivrl
mov
repnz
push
aaa
sub
jp
mov
pushf
cli
int
dec
rolb
xlat
jp
dec
adc
leave
adc
outsl
jp
cltd
mov
fs
sahf
dec
inc
fdiv
lds
shlb
mov
pop
jge
adc
push
push
ds
inc
lods
jnp
repz
or
mov
xor
das
mov
int3
add
add
arpl
mov
adc
xchg
ds
sbb
cmp
or
bound
fwait
shl
or
das
outsl
loope
jns
int
movsl
sbb
inc
add
lods
pusha
int
lahf
clc
out
lods
int3
sbb
push
sub
adc
jge
mov
cmpl
mov
add
xchg
imul
imul
filds
ret
inc
mov
push
and
xlat
imul
out
cmp
les
mov
mov
jg
mov
and
inc
adc
pusha
in
data16
pushf
cs
inc
cmp
adc
test
jns
or
pusha
loopne
ss
negl
xor
movsb
inc
dec
leave
xchg
into
ffreep
cmpsb
lds
mov
jns
and
jecxz
or
leave
mov
pop
sub
stc
nop
inc
mov
xchg
cmp
rcll
xchg
jl
mov
aaa
fnstsw
in
cltd
pop
arpl
aas
sarl
out
mov
lcall
dec
dec
mov
cltd
mov
mov
std
jo
icebp
shrl
gs
or
jge
fildll
aas
push
adc
icebp
or
push
addr16
pusha
or
mov
and
sbb
pop
xchg
adcl
aad
xor
jne
stc
xchg
addb
push
add
mov
mov
mov
mov
loope
and
imul
outsb
sub
push
mov
cmp
dec
push
inc
cmp
int3
enter
movsb
sbb
sub
mov
fdivr
lret
hlt
mov
ret
mov
das
xor
test
das
shrb
sub
sub
xor
seta
cmp
rcll
int3
cmp
repnz
es
inc
sbb
push
in
xchg
fadd
push
xor
and
mov
mov
inc
xchg
jne,pt
and
lock
mov
mov
pavgb
mov
jbe
loop
stos
mov
pop
pop
sub
sbb
push
sbb
lea
in
loop
je
pop
lcall
mov
sub
xor
dec
or
lds
mov
ret
jecxz
push
insb
push
aaa
rorb
out
push
pop
pop
mov
xor
aad
pop
pop
ss
movsl
add
stos
test
testb
sub
shll
ror
jne
das
mov
add
push
lea
and
stc
mov
hlt
sbbl
push
stos
pop
mov
addl
mov
mov
pop
mov
lods
xchg
push
movsb
popf
sbb
xchg
shlb
mov
outsl
sbb
sub
add
or
mov
repnz
or
shl
adc
mov
sub
xchg
mov
adc
sbb
pop
xor
lods
jecxz
xchg
out
dec
and
mov
ret
push
add
sbb
aaa
clc
cmp
adc
jne
mov
xchg
out
test
cwtl
jae
test
clc
and
jne
adc
sub
pop
mov
and
stc
add
loop
das
jne
dec
stos
repz
out
cmpsl
in
sbb
fiadds
mov
movsl
lcall
mov
fsubrl
in
jle
jae
aaa
xor
movsl
repz
pop
jp
pusha
cltd
pop
cmp
shl
nop
cmc
ffree
lahf
outsl
bound
lea
pop
icebp
lods
cwtl
lods
outsl
das
cmpsb
adc
mov
dec
incb
pusha
dec
outsl
jg
inc
push
fmull
add
or
in
sbb
sbb
fsubs
push
pop
loope
push
das
or
dec
push
xor
pop
fsts
sbb
test
popa
xchg
rolb
rorb
mov
jp
pusha
and
loop
repnz
scas
fdivl
cli
cli
mov
mov
xchg
cmpsl
mov
into
mov
sub
xor
imul
and
mov
add
xchg
leave
and
mov
fcoml
iret
stos
das
or
push
jnp
int
stos
push
sub
sahf
jp
enter
bswap
mov
icebp
icebp
add
and
orb
xchg
jo
hlt
addr16
repnz
and
jge
push
dec
xchg
mov
sub
test
subb
fsubrs
pop
mov
xchg
jecxz
mov
in
push
pusha
mov
mov
mov
pop
into
cmc
sbb
test
mov
fisttpl
push
mov
jnp
mov
pop
daa
mov
mov
test
push
sbbl
cmp
push
mov
je
xchg
add
mov
dec
sub
add
in
jp
xor
fbstp
jp
int3
adc
push
mov
repz
std
inc
jg
and
inc
cmp
in
pop
jg
xchg
cmpsl
xchg
test
xor
jp
dec
sbb
dec
cmpsb
mov
cmpsb
mov
fldl
adc
popa
cli
daa
sbb
mull
mov
lds
mov
jo
insb
fs
mov
stos
cld
jnp
mov
inc
xchg
rcrl
cmpsl
daa
std
xchg
jge
sub
xchg
fsts
dec
shrb
jmp
in
push
mulb
sub
xor
push
inc
push
push
xor
pushf
mov
sbb
inc
jge
rorl
inc
fwait
jle
inc
and
int
les
jae
pop
in
imul
int
dec
aad
inc
jmp
cmpsl
jo
daa
mov
lds
pop
dec
push
pop
mov
dec
fmuls
fnstenv
cmp
movsb
cmp
cmp
icebp
bound
push
dec
push
inc
inc
iret
sbb
mov
out
adc
and
sub
in
jno
push
xor
scas
xchg
aas
push
stc
iret
sbb
and
inc
sar
inc
sub
cs
adc
push
sub
xchg
loop
or
or
in
aaa
lds
dec
loopne
cmp
cs
imul
cmp
cli
jae,pn
clc
push
adc
enter
xor
movsb
lret
inc
in
push
pop
jmp
add
xchg
int
jp,pn
pop
cmc
push
mov
in
cmpsl
or
adc
xchg
sbb
loopne
cmpsb
sbb
fisttps
mov
mov
pop
pop
fisttps
and
ret
jae
lret
cltd
shrl
fwait
out
fcmovnb
es
push
jg
dec
add
push
ret
stos
inc
or
inc
mov
insl
jg
add
adc
rcll
fwait
or
das
adcb
flds
xlat
outsb
dec
mov
sbbl
mov
jno
pop
adc
xor
pop
xor
lea
cmp
xor
dec
xchg
pop
inc
ficomps
pop
in
mov
stc
gs
cmp
adc
cmp
sbb
add
jge
fnstenv
cmpsl
lcall
mov
mov
arpl
xchg
popa
or
sbb
add
mov
mov
inc
cmp
sbb
or
ret
pop
or
dec
test
leave
scas
nop
sbb
imul
lea
stos
push
xchg
dec
pushl
add
cmp
das
in
test
sub
lcall
outsl
fnstsw
xor
push
popf
mov
leave
cmpsl
cwtl
cmp
xchg
outsb
adc
and
pop
dec
xor
inc
stos
adc
addr16
arpl
icebp
lds
push
xchg
xor
mov
pop
rcrb
lock
jg
inc
loopne
dec
mov
sub
ja
ret
decb
mov
dec
or
inc
in
mov
nop
fsubl
push
inc
jmp
dec
cmp
adc
push
insb
mov
push
mov
and
jbe
and
in
outsl
cs
fstp
push
sub
rcrb
pop
fwait
imul
xchg
or
js
es
cmp
outsb
test
loope
jae
insb
sub
test
pop
jns
sub
out
cltd
jge
imul
insl
adc
xchg
out
add
inc
cmp
lods
mov
adc
xor
sbb
jno
xchg
cmp
push
push
enter
pop
mov
xchg
push
roll
addr16
mov
aaa
and
outsb
jns
stos
adc
jb
pop
cltd
sahf
adc
cmp
cmpsl
cld
ficoms
outsb
fnstcw
cltd
leave
adc
pushf
leave
mov
bound
or
push
lcall
jne
pop
rclb
loopne
sbb
fcomp
or
arpl
push
rol
lret
sub
and
data16
adc
sub
add
adc
pop
xor
jl
adc
mov
aas
pop
std
or
fcom
push
mov
push
sbb
sub
mov
lcall
fcompl
adc
pop
pop
fistps
mov
or
xchg
or
sbb
jbe
fcmove
or
lea
add
jne
and
mov
mov
pop
shll
mov
mov
cmpsl
pop
test
idiv
int
roll
and
push
lods
or
pop
hlt
inc
enter
xchg
push
xor
fidivl
int
iret
jecxz
xchg
dec
sbb
cld
test
sti
jns
xor
hlt
imul
sub
jb
ljmp
scas
cmp
std
mov
les
in
add
xor
stos
call
xor
lcall
dec
and
lds
xor
mov
fldl
test
daa
mov
mov
xchg
lock
xchg
add
cltd
loop
sti
movsb
cmpb
or
or
inc
jbe
movsb
cltd
out
scas
int3
pop
mov
dec
stc
jns
mov
xchg
mov
fldcw
or
jno
mov
sbb
or
sub
push
test
push
out
xor
pusha
lea
mov
adc
jle
cmp
movl
cli
xlat
sbb
sub
lret
sbb
roll
outsl
mov
shrl
sti
pop
adc
ss
mov
and
sub
mov
testb
or
pop
jmp
push
sti
jle
testb
gs
adc
xor
pop
mov
or
in
clc
sbb
lods
add
leave
xchg
leave
outsb
adc
stos
adc
inc
dec
pop
stos
cmp
sbb
xchg
push
outsl
sbb
mov
mov
cmp
sub
imul
lret
xchg
iret
xor
mov
mov
or
dec
lcall
addl
test
xchg
inc
es
jecxz
dec
bound
in
int
fwait
xor
ja
xor
pusha
fmul
cli
jnp
stc
xor
jg
clc
adc
push
mov
xlat
aas
or
pop
test
mov
imul
sbbb
sbb
fdivr
scas
mov
popf
js
jne
adc
jb
sub
outsb
fdiv
ds
insl
pusha
test
sub
mov
xchg
jnp
mov
adc
push
ss
icebp
lret
insb
mov
fimuls
fwait
stc
ja
xchg
xor
cmpl
lret
das
ret
je
add
cli
rol
xchg
mov
sbb
insl
cpuid
aam
add
jp
cs
sub
xchg
adc
jnp
cwtl
dec
push
mov
lcall
mov
rcl
int
xlat
cmpsb
mov
addr16
xchg
std
mov
ljmp
inc
lea
pop
dec
lods
clc
push
or
stos
idivl
add
mov
inc
push
adc
sbb
test
jmp
jb
cs
adc
sub
ja
xor
cmp
cli
lea
add
jbe
test
cwtl
lods
out
nop
divb
jo
sarl
mov
push
push
xlat
insl
dec
pusha
jbe
mov
xchg
sub
xchg
push
mov
adc
stos
adc
or
lahf
pop
flds
jmp
je
mov
loope
insb
xchg
sbb
pop
adc
repz
xchg
in
adc
xchg
loop
dec
mov
pushf
mov
ret
in
xchg
xchg
mov
cltd
call
rclb
fdivl
xchg
lock
adc
push
mov
xchg
or
test
imul
and
mov
add
dec
mov
or
pusha
or
js
shrb
popa
insl
jg
pop
imul
stos
insl
fwait
inc
pop
popl
inc
jnp
addr16
enter
cmp
loop
and
cmp
testb
pop
shll
scas
sub
nop
and
in
mov
xchg
mov
ja
xor
adcb
cmp
mov
pop
xlat
loope
movsl
hlt
negb
gs
mov
push
ds
movsl
xor
enter
std
dec
sub
mov
rol
dec
xor
mov
mov
ljmp
roll
cmp
and
pusha
sub
push
xor
imul
dec
dec
repnz
mov
jg
add
movsl
dec
and
dec
pop
and
add
punpcklwd
outsb
dec
jge
ds
xor
pusha
ficoml
dec
pop
adc
dec
lock
cmp
lds
leave
xor
in
sub
imulb
push
hlt
inc
mov
ljmp
bound
inc
xchg
sbb
fs
or
mov
test
sub
push
imul
xlat
adc
cmp
cmp
imul
xor
push
push
out
xchg
ljmp
cmp
or
je
add
jmp
mov
icebp
jmp
je
shl
addr16
insb
imul
and
jecxz
out
nop
xchg
sbb
cmpsl
lods
xor
xor
imul
ds
inc
dec
xlat
fisttpl
xlat
xor
xor
out
add
outsl
clc
cmp
aad
imul
sbb
pop
sbb
sub
xor
clc
rorl
jb
loopne
cld
jp
cmpb
adc
ret
movsl
cmp
daa
jecxz
arpl
rcr
movsb
scas
fwait
aaa
jo
sarb
mov
mov
lods
jno
add
dec
pop
ljmp
outsb
mov
xchg
cmp
mov
or
fcoml
rcrl
sub
add
mov
jae
rcrl
mov
dec
cmpsl
mov
or
mov
mov
cmp
jmp
test
cmp
mov
mov
mov
xor
cmpsb
jmp
mov
mov
fldt
pop
xor
mov
in
ja
jbe
scas
pop
ljmp
sub
xchg
cwtl
cmp
sarl
mov
outsl
adc
mov
mov
daa
mov
adc
adc
test
add
daa
mov
pushf
aam
jnp
in
and
jnp
fidivrl
pop
xor
dec
mov
dec
test
aaa
adc
dec
cmp
dec
inc
lret
aad
enter
push
loopne
insb
xchg
inc
inc
out
dec
mov
mov
in
add
push
jge
push
mov
xchg
mov
dec
xchg
insb
sbb
nop
jae
mov
jge
mov
xchg
mov
test
push
lea
and
daa
and
jecxz
push
xchg
hlt
dec
and
cli
pop
mov
dec
inc
sbb
mov
stos
pop
xchg
js
and
sti
pop
popa
or
mov
mov
pop
mov
and
pushf
popa
shrb
stc
inc
aaa
dec
aam
lret
lods
aaa
push
add
inc
pop
mov
mov
scas
xchg
stos
push
xchg
test
and
sbbb
pop
popf
jmp
sub
aaa
addr16
stos
xor
idivl
imul
in
sbb
pushf
sti
hlt
outsb
rcrl
shlb
imul
dec
lods
xchg
add
inc
dec
inc
clc
mov
std
dec
in
inc
sbb
and
out
fisubs
mov
cld
mov
mov
js
imul
jne
mov
outsb
mov
cmp
ret
push
jae
loope
push
xchg
xor
out
cmp
movq
mov
pop
subl
inc
scas
cli
xchg
pop
inc
add
mov
sub
sbb
xor
pop
or
mov
popa
test
popf
lahf
add
xchg
popa
aas
mov
sbb
inc
sti
mov
jae
and
cmp
inc
push
cmpsl
add
fdivl
aas
loope
push
dec
rcrb
lock
pushf
int3
in
and
movsl
cmp
out
outsl
fstpl
lods
mov
xchg
mov
pop
jge
scas
sub
push
pop
inc
inc
nop
jnp
fidivl
in
shll
dec
jb
cmp
loopne
int
push
arpl
lods
shlb
repz
sbb
ja
gs
pop
outsb
pop
imul
mov
adc
adcl
and
ret
jg
jns
lods
cmpsl
ret
cmp
fwait
scas
lds
push
sbb
inc
movsl
imul
arpl
jns
nop
sub
into
je
adc
in
popa
js
dec
in
loopne
pop
xor
repnz
movsl
shrb
cmp
mov
call
or
mov
sbb
out
rolb
xchg
jmp
jne
filds
sahf
push
lret
jns
pop
daa
push
and
mov
jbe
pushl
call
leave
cmp
push
in
dec
dec
into
je
std
sub
dec
xor
sar
mov
cmp
mov
bound
or
call
adc
xor
addr16
sbb
rcl
mov
push
jo
pusha
sub
push
out
mov
push
cmp
call
sbbl
je
enter
cld
xchg
int3
add
inc
testb
jno
mov
into
leave
sub
or
nop
hlt
add
mov
daa
and
repnz
push
out
fsts
test
cmp
push
xor
add
push
push
sbb
push
fdivr
pop
lret
test
in
push
and
jl
push
push
xchg
and
inc
stos
fadds
lahf
rsm
fstl
bound
daa
int3
pop
sbb
xor
fstpt
cmp
xor
xchg
adc
movsl
mov
pop
lea
mov
lock
js
sbbl
push
pop
in
xor
ja
imul
inc
scas
je
jbe
push
test
cmp
sti
push
ret
jno
shlw
out
lods
clc
inc
les
or
sti
mov
mov
cld
xchg
adc
push
cli
push
push
inc
adc
mov
xor
jmp
push
rcrb
cmp
mov
es
cmp
jecxz
dec
adcb
sub
adc
out
mov
testb
bound
imul
mov
in
out
pop
arpl
aas
push
add
jle
xor
pop
inc
orl
jne
std
and
mov
int3
test
jecxz
sub
dec
push
xchg
dec
add
jmp
lahf
scas
lods
dec
das
cmp
out
fstl
cmp
cltd
inc
enter
fs
rolb
and
and
gs
adc
push
std
lods
xor
in
mov
popa
insb
xchg
xor
mov
adc
mov
xor
fidivs
xchg
jge
or
jae
fnstcw
mov
or
inc
mov
loopne
repnz
mov
decl
out
cwtl
mov
jp
cmp
jno
add
xorb
fstpt
rclb
jo
pop
inc
dec
jae
sbb
adc
repz
loope
adc
mov
into
sti
jnp
xor
pusha
and
sub
mov
imul
adc
test
insb
pop
pop
mov
xchg
mov
je
adc
push
mov
or
dec
stc
push
mov
jae
loopne
push
xor
sub
stos
inc
ljmp
pop
mov
sub
jp
cmpsb
mov
sbb
out
cmc
sub
xchg
cmp
mov
je
out
jle
cwtl
out
jp
pop
or
dec
cmp
mov
push
push
xlat
cmp
dec
adc
lahf
sub
mov
and
cwtl
stos
sub
movsl
lock
mov
jecxz
sub
mov
adc
cmc
dec
add
dec
push
fsubrl
adc
pop
ljmp
inc
jb
je
adc
ja
aad
pop
arpl
xchg
push
jbe
icebp
adc
cmp
pop
adc
push
mov
mov
mov
and
fcoml
jp
in
sbb
adc
rolb
sbb
nop
xchg
push
cmp
adc
lock
daa
in
cli
and
xchg
fisttpll
mov
xor
push
stc
stos
add
outsl
xchg
mov
pop
jb
int
inc
cmp
pop
xchg
shll
xchg
cli
stc
lret
in
out
xchg
xor
andb
je
sub
and
scas
sbb
mov
jle
mov
mov
sahf
jle
mov
or
out
rolb
and
loop
scas
aad
icebp
aaa
and
push
arpl
es
movsb
notb
inc
adc
rol
xchg
inc
cs
rcrl
adc
int3
dec
xor
mov
pop
stos
data16
dec
jmp
jne
out
or
movb
jno
ljmp
push
lea
jp
adc
adc
in
sahf
xchg
iret
jl
pop
inc
inc
adc
push
dec
aaa
test
loopne
mov
ret
mov
cmp
cmp
test
add
adc
cmp
cs
sti
enter
fcomip
je
test
call
or
mov
push
sub
lods
fwait
orb
jnp
sub
mov
adc
mov
mov
pop
lods
or
ja
adc
mov
push
js
addr16
jmp
or
xor
push
lods
cmp
sbb
jnp
xchg
jne
es
mov
repnz
mov
rcl
mov
and
test
inc
cmp
into
cmp
pop
sub
mov
xchg
dec
scas
test
add
int3
adc
pop
std
aam
fdivrs
lds
out
ja
xchg
mov
test
adc
sbb
imul
jl
add
jge
mov
lret
imul
test
sbb
xlat
or
std
loopne
lfs
inc
lds
push
mov
sub
inc
cli
cmpsl
movsl
clc
xor
xchg
mov
pop
je
mov
pop
or
mov
pusha
out
jne
mov
pop
daa
fadds
dec
imul
ljmp
in
push
lods
in
and
or
and
jo
xchg
lods
push
sahf
shrl
fs
pop
in
adc
lods
loope
cld
sub
and
lret
aam
mov
in
ja
insb
sbb
test
dec
enter
rclb
inc
push
cltd
insb
mov
add
sarb
adc
mov
ss
imul
enter
xor
add
int
roll
xchg
fdivr
aam
and
adc
or
scas
and
mov
mov
iret
shrl
lea
mov
mov
inc
xor
push
dec
jno
push
mov
cmpsl
dec
adc
push
jb
repz
std
push
call
push
dec
jmp
xor
xchg
sbb
imul
les
mov
jle
pop
lcall
xor
or
dec
andl
hlt
pop
xor
std
xor
jp
daa
dec
js
pushf
je
jne
push
push
mov
pop
nop
mov
xchg
cwtl
jno
sbb
aaa
jnp
out
xor
outsl
xor
inc
jbe
fs
enter
in
inc
mov
mov
cld
push
fstpl
push
shll
lret
fdivs
insb
xlat
push
mov
or
xor
cmpsb
jmp
fsub
addl
aas
je
outsb
cld
jl
aad
lods
push
inc
pusha
push
clc
movsl
push
or
movsl
push
or
stos
push
cmp
add
lea
adc
inc
xchg
testb
lods
push
fistl
push
jbe
adc
fs
inc
sbb
sub
test
xorb
adc
flds
mov
xchg
push
mov
lret
jne
jnp
mov
test
sbb
lcall
sti
out
sub
loope
xchg
pop
push
sbb
mov
ljmp
into
xchg
xchg
mov
push
inc
pop
jne
pop
aad
pop
test
add
mov
sbb
sub
pop
pop
shlb
fdivs
lods
and
cld
mov
pop
fcomp
dec
jnp
iret
jg
mov
mov
push
xor
inc
fisttpl
fnstcw
cmp
cmp
mov
sbb
aam
push
int
shr
dec
sbb
sahf
or
in
pop
movsb
cmc
pop
inc
filds
hlt
clc
mov
out
cmp
out
mov
nop
test
gs
cmpsl
pop
mov
lret
push
loopne
fnsave
pushf
push
out
pop
scas
mov
nop
imulb
test
subb
imulb
push
cmp
stc
pop
mov
and
clc
scas
xlat
jne
xor
mov
test
dec
mov
push
hlt
push
add
cmpsb
mov
aad
xorl
push
adc
mov
cmp
fidivs
das
out
in
mov
lods
mov
adc
aam
lcall
cmp
sbb
or
ja
imul
cmpb
js
adc
jne
add
insl
daa
xor
pop
and
sbb
aas
inc
mulb
xlat
push
data16
shlb
sbb
inc
aad
push
xchg
fimull
sub
jecxz
xchg
push
and
jbe
stos
push
scas
sub
pop
ss
cmpsb
repnz
imul
sti
dec
imul
sub
pop
movsb
pop
shrb
orps
out
mov
je
cmc
ret
fwait
push
mov
stos
xchg
mov
jl
mov
pop
in
sub
pop
inc
and
sub
add
mov
mov
pop
push
fmull
jbe
inc
pop
xchg
and
mov
mov
fcoml
in
in
andl
test
mov
adc
lea
mov
fldt
fmulp
mov
jnp
mov
jl
sub
jns
pop
loopne
mov
hlt
aad
xchg
js
ret
or
xchg
stc
fldcw
aam
orl
outsl
lods
aad
xchg
mov
jo
lds
adc
cltd
mov
cvttps2pi
cld
xchg
fbstp
loope
mov
jb
pop
cmp
mov
iret
scas
mov
scas
adc
pop
mov
mov
flds
pop
insb
sbb
sub
mov
xchg
pushf
push
sbb
in
fdivl
iret
jge
scas
cmp
sbb
ror
dec
add
push
lods
insl
cmp
sub
dec
jp
mov
fst
lcall
shll
call
mov
dec
mov
idivl
testb
rorl
xchg
daa
stos
adc
mov
xor
jp
and
mov
stos
scas
notl
test
ret
mov
data16
cmpxchg
adc
cmp
daa
loop
stc
add
sti
mov
xchg
call
lods
mov
sbb
outsb
cmpsl
popf
pop
iret
in
cmpsl
ja
xchg
jnp
and
hlt
fsubr
push
aaa
test
das
push
in
mov
push
mov
les
loope
xor
out
incl
cmp
test
lahf
int
or
nop
mov
push
out
sarb
das
jle
out
cmp
mov
cmp
jge
dec
pop
call
dec
xor
pop
push
mov
jp
cltd
into
xchg
andl
in
das
sub
pusha
mov
movsb
sbb
mov
xchg
mov
xor
xchg
lahf
pop
out
and
cmpsb
lcall
fbld
je
jnp
int
call
mov
sub
and
sub
push
dec
leave
mov
fcomi
testb
iret
and
jmp
add
inc
cmc
icebp
out
loopne
add
push
cmpsl
cmovp
xchg
in
int3
xchg
pusha
stc
push
mov
cs
sbb
jnp
inc
lret
jge
insl
shlb
xchg
xor
inc
bound
mov
hlt
pop
outsl
nop
out
push
aas
js
adc
mov
xor
mov
and
imul
lods
or
je
outsb
fmul
mov
inc
xchg
jmp
jne
loope
int3
mov
sub
aad
test
jecxz
aas
ss
jle
hlt
fs
clc
cwtl
loop
jmp
clc
ds
sti
ds
rcr
stc
and
subl
arpl
adc
sub
inc
test
dec
shrl
push
mov
and
pop
ret
into
es
rcrl
int3
inc
popa
dec
inc
fidivs
inc
jge
sti
ret
pop
icebp
dec
dec
movsl
dec
push
testb
jp
cmovbe
jno
mov
mov
test
movsb
int3
sbb
hlt
addr16
fs
pop
push
inc
mov
and
jl
insl
out
cmp
pop
or
je
cmp
xor
stc
xchg
lods
sub
sti
jae
add
jb
pop
xor
fimull
add
lods
xchg
ja
push
movsb
mov
jns
push
into
fnsave
rorb
cmp
imull
test
mov
popf
sbb
enter
and
add
lret
and
js
movl
negl
push
xchg
or
dec
inc
xor
xchg
pop
or
jne
xchg
push
leave
push
mov
sub
cmp
test
and
mov
dec
loop
popl
in
popa
arpl
mov
mov
sahf
lock
mov
test
sbb
sbb
je
jl
rcr
xchg
mov
in
sbb
repz
mov
fnstsw
push
adc
aam
ljmp
seto
dec
cli
aas
repz
dec
jnp
push
hlt
shlb
mov
fidivl
push
and
xor
sbb
pop
push
scas
sub
repz
sbb
xchg
pop
movsl
and
sbb
cmp
cmp
jp
cltd
lcall
cmpsl
shld
mov
stc
aas
mov
add
shrb
adc
divps
lods
and
xchg
or
int3
rep
out
subb
push
sbb
divb
lods
jae
iret
pushf
adc
fsubs
int3
clc
roll
jp
cmpsb
ror
xlat
subl
inc
ror
adc
call
out
lods
pusha
lds
jnp
sti
dec
stc
fcompl
test
mov
adc
push
repz
lods
cmc
in
sbb
int
mov
push
lret
sti
or
jbe
fstpl
mov
and
mull
in
mov
lcall
sbb
neg
bnd
out
push
pop
cmp
mov
inc
mov
sahf
pusha
mov
out
clc
clc
push
cmp
sbb
or
jmp
push
ljmp
inc
mov
jmp
fwait
add
repnz
pop
f2xm1
std
fdivs
mov
jmp
dec
pop
jle
das
aad
test
repz
dec
dec
ljmpw
in
popa
and
outsb
mov
mov
pop
sbb
out
out
icebp
pushf
jb
xchg
rdpmc
jbe
pop
xchg
or
sub
cmp
or
fiaddl
adc
mov
cmp
and
jp
xchg
xor
adc
test
add
pop
popa
xor
dec
adc
or
push
ljmp
shll
mov
hlt
sbb
out
sbb
fdiv
test
cmp
mov
mov
mov
jno
inc
sti
xlat
mov
stos
inc
aas
lcall
jle
mov
push
lods
movsb
jecxz
cmpsl
aas
mov
dec
adc
push
mov
cmpsb
mov
in
sub
out
cmp
mov
jo
pop
cli
imul
shrl
mov
mov
push
inc
cmp
imul
sahf
mov
ds
lahf
jmp
out
xchg
popa
mov
dec
lcall
sar
dec
xor
mov
mov
ret
mov
jns
or
pushf
mov
sub
cmpl
call
mov
mov
repz
xchg
lahf
pop
cmp
enter
mov
int3
into
or
mov
repz
notl
jnp
stc
dec
jo
xor
loope
mov
dec
sbb
bound
xchg
insl
push
xchg
lret
cmp
ja
push
cmpsl
dec
xlat
fildll
pop
addr16
dec
push
in
xchg
jnp
insl
idivb
mov
xchg
pushf
mov
xlat
jp
add
inc
xor
ja
mov
subl
daa
je
mov
cmovnp
aas
sbb
xchg
mov
repnz
movsb
jbe
cmp
cmp
shr
iretw
jecxz
xchg
pop
xchg
sub
xchg
xor
inc
ror
bound
pop
and
inc
clc
xorb
fldt
aas
dec
lret
pop
inc
rcrb
pushf
add
cmpsl
cmpsb
into
or
mov
sub
fcoms
xor
add
nop
decl
loope
lret
pop
test
adc
jb
push
filds
hlt
rolb
cwtl
mov
xchg
jne
sbb
add
in
bound
mov
mov
clc
push
adc
ljmp
test
int3
push
rcl
pop
push
das
lods
xor
stos
mov
mov
cmp
mov
adc
mov
sti
popf
lea
xchg
clc
out
das
das
cmp
ds
sarl
ret
inc
push
push
dec
sahf
push
mov
invd
adc
or
fistl
fimuls
lds
pop
inc
scas
imul
leave
aad
mov
adc
fnstsw
repnz
xor
and
mul
pushf
push
mov
mov
loopne
or
jbe
repnz
stos
fldcw
push
lea
test
pushf
xchg
pop
and
fidivl
sbbb
aaa
mov
repz
jbe
cmpsb
push
push
xchg
cmp
loop
xchg
inc
int
in
jge
add
mov
xchg
addr16
pop
adc
scas
sub
insl
cli
jp
mov
add
lock
sub
clc
xor
cmp
fstl
add
sub
outsb
jmp
lcall
pop
ret
inc
inc
cmp
jne
xchg
enter
jle
mov
gs
mov
cli
fstps
inc
out
sbb
pop
sbb
cs
push
jecxz
mov
mov
fcom
mov
sahf
movsl
mov
or
cmpsb
jle
sbb
popa
iret
push
loopne
lret
mov
icebp
mov
cmp
cmpsb
mov
mov
jl
push
mov
mov
movhps
fnsave
test
cmpb
jns
test
test
pop
adc
aas
jecxz
jo
out
call
test
xor
orl
adc
mov
test
xchg
addr16
enter
mov
mov
lea
sti
lds
sbb
sahf
popa
sub
call
lahf
xor
cwtl
pop
jle
loop
out
adc
stos
lea
cmp
mov
mov
movsl
mov
pop
mov
arpl
fistpl
rclb
shlb
in
mov
ljmp
jne
pop
and
movsb
and
xchg
xchg
lds
out
mov
outsb
jns
and
and
inc
adcl
push
push
pusha
add
sbb
sbb
mov
add
shlb
xor
inc
inc
test
lods
popf
int3
pop
cs
xor
mov
std
cli
fstl
inc
xchg
cmpsb
inc
aam
sbb
mov
cmp
sbb
xchg
jnp
out
adc
outsb
push
out
dec
cmp
inc
jg
fimull
jl
ss
cmpb
or
cld
call
ds
jmp
pusha
cltd
bound
imul
jbe
cli
dec
lret
and
imul
push
push
jae
fwait
mov
jle
add
inc
sub
push
xchg
std
in
add
mov
mov
and
mov
stos
jns
pop
mov
sbb
or
mov
cmp
xor
or
xor
jmp
sbb
out
rolb
rorl
cmp
in
jl
dec
xchg
dec
mov
int
in
xchg
fwait
mov
int
pop
lock
push
cmp
adc
sub
aaa
inc
pop
push
jnp
filds
or
xor
dec
pop
jle
mov
nop
flds
in
lods
popf
mov
xor
xchg
inc
scas
xor
inc
mov
xchg
shll
push
xor
or
jl
sahf
shll
add
mov
or
fcmove
adc
mov
sub
xchg
out
sbb
fbld
aam
out
icebp
icebp
add
data16
daa
lods
test
xchg
scas
sub
cmp
xchg
ret
push
pop
or
push
outsb
jbe
mov
paddsw
bound
nop
sub
xchg
sahf
and
add
test
imul
xchg
out
int3
mov
in
lods
testb
mov
jmp
mov
lahf
sbb
fadd
hlt
lds
arpl
cmpsb
insl
dec
or
sbb
jg
mov
sub
pop
and
loopne
into
add
lods
fs
out
ja
ds
and
imul
repnz
std
add
xchg
inc
adc
inc
aaa
and
aam
movsb
mov
sub
mov
mov
and
dec
outsl
imul
aaa
fcompl
popf
jg
xchg
add
jge
int3
clc
xor
mov
mov
inc
mov
inc
or
adc
or
fisttpll
pop
cmpsl
dec
out
xor
inc
in
aaa
sti
loope
pop
hlt
add
pop
mov
loopne
test
rclb
mov
in
test
loopne
or
out
pop
mov
leave
mov
lea
xlat
jb
adc
sub
out
stos
dec
dec
cmp
xchg
cmpsl
lds
mov
es
mov
xchg
ret
or
lods
fcoml
enter
aaa
ret
hlt
sub
pop
and
out
push
push
xchg
pusha
popa
or
jno
dec
repnz
decb
fsubl
adc
cli
daa
fisubl
lea
dec
fld
fwait
push
sub
pop
fldenv
inc
xor
xor
fmul
inc
fwait
jmp
sar
jmp
jmp
test
lea
outsl
mov
aad
sub
jbe
xchg
jp
cltd
outsb
mov
xor
fwait
int3
ret
cli
mov
jecxz
dec
cmp
int
mov
jl
or
dec
sbb
or
mov
test
fs
js
pop
adc
pusha
jne
mov
push
insl
rorl
or
sbb
and
ja
pop
lcall
enter
loop
arpl
dec
xchg
mov
or
and
mov
lret
stos
out
fs
cli
shlb
or
mov
enter
movsl
mov
cmp
inc
mov
idiv
iret
push
push
setge
shll
add
cmc
xor
sub
cli
xorb
daa
or
jo
repnz
imul
pop
add
aam
mov
push
rol
and
jp
or
movl
mov
xlat
xor
push
mov
pop
call
daa
stos
cmc
pushf
ffreep
in
inc
push
imul
cli
shlb
scas
in
rcrl
scas
adc
inc
push
inc
mov
cmc
dec
and
mov
or
and
mov
sub
scas
movsb
mov
sahf
sbb
mov
jp
mov
push
and
pop
xchg
cmp
mov
or
call
movsb
push
sbb
movsl
pop
call
mov
lds
or
fwait
push
sub
mov
mov
push
mov
push
dec
dec
xlat
ds
roll
addr16
fs
adc
or
sub
sub
sub
jge
xchg
loopne
inc
xor
out
ret
adc
ret
es
icebp
sub
in
or
repz
outsb
shl
pop
and
or
movsb
inc
xor
xchg
jne
stos
xor
sbb
dec
and
push
call
add
mov
and
lret
mov
sti
inc
mov
int3
int3
push
adc
jae
and
xlat
shr
sarb
add
jae
cs
out
adc
cmp
loopne
and
clc
push
movsl
aad
pop
pop
sbb
mov
lcall
ficomps
or
xor
fdivrl
dec
xchg
adc
das
inc
pop
push
mov
or
inc
lret
xchg
jge
push
sbb
je
loope
rclb
imulb
sub
mov
imul
test
and
push
or
add
clc
or
scas
push
loope
pop
and
out
lock
dec
rol
cmp
add
sbb
insl
fdivr
jp
sti
outsl
add
jecxz
rolb
leave
jg
sbb
das
orb
sub
push
adc
and
sbb
inc
out
cmp
insl
xchg
gs
repz
das
mov
adc
cmp
lods
outsb
xor
test
add
mov
sbb
jecxz
leave
and
lret
sub
xchg
xor
sbb
push
test
pushl
in
pop
xchg
mov
mov
mov
in
pop
shrb
add
sbb
mov
sahf
adc
sub
xlat
inc
fldcw
scas
testl
jnp
repz
int
push
push
push
aas
loope
int3
pusha
cwtl
add
and
out
out
push
test
into
sbb
shl
dec
pop
and
sub
push
movsl
fs
and
shll
in
jmp
jp
testl
dec
in
in
hlt
lods
or
test
scas
mov
in
mov
int
pop
cmp
shlb
lret
mov
mov
dec
xor
pop
or
pop
loopne
pushf
int3
adc
inc
js
or
jne
iret
mov
pop
pop
pop
fldt
sbb
and
xchg
push
int3
sbb
addr16
or
imul
es
or
sbb
jmp
xchg
nop
mov
lock
or
mov
mov
in
out
jp
sub
aam
and
cli
les
adc
leave
cmpsl
sbb
ss
sbb
jb
mov
dec
gs
inc
push
xchg
out
shl
jmp
pop
cld
aaa
in
or
mov
ss
and
test
ss
adc
xchg
pop
jmp
xchg
and
jle
push
or
dec
test
cmp
test
push
popl
jp
and
adcb
mov
mov
or
into
pushf
and
dec
les
rcr
in
inc
jg
push
and
into
cmp
jb
repnz
lds
std
jge
pop
inc
push
ffreep
cmc
test
nop
hlt
fsubs
xor
shrb
mov
push
dec
mov
mov
jb
stos
pop
loope
ucomiss
orb
sub
adcl
test
popa
push
sub
cmp
int3
dec
mov
jl
sub
rcl
sub
aam
add
subb
mov
xchg
jp
dec
in
mov
and
or
jp
int3
mov
test
xchg
hlt
push
mov
out
js
pop
pushf
sahf
add
xchg
push
xchg
pushf
and
cltd
dec
cmpsl
cwtl
into
add
insl
mov
daa
lds
mov
repnz
dec
inc
xchg
leave
jnp
dec
inc
hlt
scas
jae
cmp
add
jne
xchg
or
mov
stc
int3
or
xchg
test
in
and
pop
push
push
xchg
mov
or
or
cmp
rcrb
int3
iret
jl
dec
rol
sbb
cli
xchg
iret
and
lcall
adc
dec
push
sbb
mov
aas
xor
push
out
jb
pop
cmp
adc
test
xchg
lods
in
shlb
bound
sbb
xor
into
sub
pop
push
gs
ja
mov
sub
jp
sub
loop
sbb
lret
sub
ret
pop
insb
mov
push
mov
sbb
lds
inc
mov
outsl
sub
or
dec
add
in
leave
jmp
cmp
popa
push
adc
sbb
sub
sub
dec
add
inc
out
stos
xor
shrb
outsl
sbb
test
movsb
scas
loope
popa
icebp
sub
xchg
mov
repnz
cwtl
xor
or
jbe
insl
movsl
push
rclb
fstpl
push
inc
test
cmp
das
jae,pt
lret
and
pop
sbb
in
fcomps
loopne
pop
mov
dec
xchg
xor
arpl
or
je
push
pop
movsb
or
enter
mov
sti
push
xor
push
mov
jmp
mov
adc
fucomip
jno
shll
xlat
jge
xchg
fdivrp
add
loopne
mov
iret
test
test
clc
mov
sub
push
in
int
outsb
cmp
shr
sub
test
andl
and
outsb
xchg
in
lock
shll
xor
mov
in
ror
out
adc
cltd
push
sahf
sub
xor
jbe
imulb
cs
loope
adc
xchg
sub
pusha
imul
lcall
imul
scas
movsb
sbb
pop
pop
xchg
xor
jnp
adc
cmp
add
jecxz
daa
and
pop
rcl
data16
sahf
stc
aam
in
cmp
cmp
mov
lods
gs
pop
stc
out
mov
add
xchg
arpl
xchg
xor
push
aas
iret
dec
sti
sbb
add
adc
mov
or
xlat
xor
sub
cmp
cmc
mov
jno
mov
dec
adc
in
and
jne
and
mov
sub
dec
jno
cwtl
sbb
fildl
dec
stos
test
in
pop
inc
and
cmp
loop
xchg
adc
or
push
arpl
repnz
out
mov
xorb
iret
outsl
xlat
mov
lcall
cld
pop
in
sbb
push
hlt
in
cmpsb
mov
jle
mov
cltd
mov
fdivrl
mov
fwait
int3
pop
or
fmuls
ljmp
pop
aas
test
fisubl
xlat
lods
enter
xchg
pop
shll
dec
and
movsb
clc
xchg
enter
mov
or
lret
imul
pop
add
or
add
mov
addb
iret
jae
fld
iret
sbb
repz
jno
in
or
test
and
sbb
pop
sbb
aam
pop
push
add
inc
out
sbb
leave
push
out
mov
add
test
xor
push
cmp
pop
ret
add
jbe
outsb
mov
orb
addr16
pop
pushf
hlt
or
push
pop
mov
push
mov
mov
push
mov
and
movsb
mov
and
adc
pop
iret
add
mov
inc
stc
jle
ret
gs
dec
inc
inc
inc
inc
sbb
pop
test
jnp
push
lret
lcall
rorl
outsb
mov
or
cwtl
int
fldt
push
inc
pop
ffreep
data16
daa
lods
and
ret
shr
into
add
mov
mov
mov
sub
nop
rcl
int
js
xor
imul
inc
push
leave
cmpsl
cmp
sahf
dec
and
stc
lret
inc
mov
sbb
or
sub
mov
dec
dec
inc
punpckldq
popa
pop
cmp
jns
cmp
leave
dec
xor
sbb
push
push
pop
adc
cmp
cmpsb
adcb
mov
adc
inc
orl
or
insl
pusha
and
inc
inc
roll
popa
inc
push
aam
imul
pop
and
ja
dec
sbb
sub
in
lock
incb
mov
adc
sub
pop
jo
xor
jl
insl
and
ja
hlt
push
dec
pop
addr16
add
loope
out
test
imul
xor
mov
imul
push
and
pop
jns
pop
jne
inc
jge
jnp
jg
sub
test
sub
pop
std
stc
sbb
shrl
mov
nop
stos
jbe
data16
mov
insl
out
rolb
sbb
lcall
inc
cmp
sbb
jmp
and
lock
movsl
cmpsb
mov
mov
popa
cmpsb
loop
subb
stos
adc
in
and
xchg
jmp
sbb
sub
xor
lcall
in
or
outsb
int3
les
insl
lahf
out
mov
imul
jne
fisubs
fistps
scas
imul
lahf
fisubl
daa
lcall
jl
add
xor
xlat
push
fstl
je
out
imull
loopne
jne
push
pushf
or
mov
jbe
jo
xlat
mov
xor
cmp
push
int
sub
xchg
in
jg
xor
mov
mov
aas
pop
fwait
repnz
mov
pusha
jp,pt
cltd
dec
icebp
inc
cmpsl
cmp
negb
add
push
jb
adc
rcll
xchg
mov
daa
imul
stc
or
inc
mov
sbb
push
fildll
fimull
cld
pop
inc
pop
and
xor
addb
cmpsb
leave
inc
pop
xor
mov
jle
dec
das
mov
fidivl
jge
arpl
pushf
xchg
sub
arpl
pop
test
clc
lret
scas
mov
jo
in
fisttpl
fisttpll
cmpsl
sbb
xchg
xchg
pop
fwait
push
je
and
push
daa
clc
or
in
sub
adc
fs
out
xchg
ret
mov
ljmp
inc
sbb
dec
cmc
je
cmp
in
mov
dec
adc
push
and
mov
xchg
fs
out
inc
aam
xor
lods
leave
mov
xchg
les
loope
sub
in
out
sahf
jo
xlat
xchg
lock
ret
gs
mov
sbb
fadds
and
ficompl
ret
jg
jae
aam
imul
xchg
fisubs
mov
push
jecxz
push
ss
mulb
add
or
mov
pusha
xlat
addr16
add
pop
xor
fidivl
loopne
jp
dec
pop
lret
lcall
stos
push
xchg
in
ret
js
push
mov
xlat
out
jp
dec
addps
sbb
add
in
test
test
jne
icebp
imul
js
and
enter
jle
lock
push
sbb
hlt
shrb
inc
ret
or
shl
cld
shl
mov
add
add
ret
mov
test
inc
jbe
jnp
push
dec
ret
sti
mov
pop
nop
test
psrad
testb
pop
xchg
push
jmp
mov
push
les
test
sub
shll
and
cltd
mov
popf
xchg
mov
mov
sbb
adc
es
pop
aam
xor
sbb
push
loopne
in
mov
mov
xchg
or
out
push
stc
and
int3
out
rcl
or
sub
pop
test
or
shll
fimuls
aas
test
xor
int3
movsb
insl
and
adc
mov
push
faddl
sbb
insb
pop
rep
insl
dec
lret
jmp
enter
mov
stos
je
xchg
xorb
xchg
sbb
call
push
loope
cmpsl
movsb
xlat
icebp
call
fistpl
outsb
addr16
push
fwait
sti
cmc
imull
fisubrs
lret
push
adc
cmpsl
scas
int
xchg
das
arpl
xor
loopne
push
push
xchg
lods
fs
imul
in
add
push
inc
dec
pop
xor
push
movsb
push
cmpsl
jl
fiadds
mov
xchg
push
out
mov
jg
enter
fld1
sbb
mov
xor
mov
push
push
jp
pop
pop
pop
adcl
jge
in
mov
mov
imul
pop
call
push
lods
mov
orl
lcall
xor
fwait
jg
leave
jle
pop
jl
pop
sahf
icebp
js
loopne
cmp
movsl
test
stc
lret
mov
fsubrl
and
scas
sbb
fwait
addb
mov
daa
lea
add
test
out
push
aas
add
sub
and
loope
adc
aas
cwtl
jae
push
xor
pop
stc
and
push
inc
adc
inc
mov
shrl
clc
sbb
or
les
inc
and
int
adc
ja
ret
or
es
cmpb
mov
pop
jnp
mov
mov
into
ror
call
std
push
dec
mov
cmp
add
out
inc
push
sub
mov
test
scas
call
sub
or
cmpsb
sbb
cmp
rorl
cmp
test
adc
lahf
out
gs
das
scas
sbb
sub
shrb
inc
or
ljmp
call
sub
mov
mov
fistpl
and
add
int
cs
lds
xor
pop
scas
push
imul
or
pop
and
lods
xchg
loopne
scas
addr16
jge
ja
sub
mov
cmp
mov
aas
add
test
add
insl
jnp
inc
dec
push
stos
fwait
scas
dec
mov
mov
inc
loope
mov
mov
dec
mov
fists
mov
stc
push
jle
and
scas
sub
mov
add
mov
push
outsl
dec
or
xor
cmp
push
sbb
and
adc
mov
ja
movsb
sub
pop
mov
cmp
int
iret
add
in
jo
pop
or
fmul
iret
insl
dec
adc
fs
lods
stos
sbb
jp
imul
leave
pop
inc
rcr
mov
mov
fdivl
mov
pop
inc
and
pop
pop
push
lcall
imul
lcall
jl
into
dec
xor
insl
mov
lret
xor
repz
aad
cld
cmp
push
pop
mov
jnp
mov
das
and
jbe
test
fisubl
frstor
cltd
or
into
cli
in
add
push
rolb
aaa
dec
shrb
shl
mov
jns
jae
out
jo
fucomp
addb
stos
jbe
fnstcw
mov
lcall
xor
mov
pop
xlat
mov
push
sub
or
jnp
js
dec
add
dec
adc
xchg
sbb
or
pop
cmp
sbb
or
xchg
and
sub
sub
mov
cld
xchg
cs
push
and
pop
xor
test
call
imul
or
jae
sub
frstor
test
xchg
aad
outsb
insb
sub
sbb
adc
outsl
ss
xchg
addr16
out
or
pusha
int3
lret
pop
xchg
loop
adc
mov
jecxz
pusha
mov
jle
repnz
lock
dec
retw
ret
in
xchg
icebp
test
sti
jb
fs
push
xchg
cmp
ficoms
pop
das
pop
xchg
rcrb
dec
sub
pop
push
sbb
nop
pop
les
mov
sub
cld
pop
jbe
fsts
or
sub
dec
xchg
pop
dec
cmp
and
lret
xor
xchg
aad
fucompp
inc
xchg
push
jne
xchg
lock
and
mov
or
iret
inc
adc
jmp
mov
loop
push
aas
mov
dec
jle
adc
adc
xchg
std
loop
cmp
ds
cmp
pop
and
jae
popa
or
lods
scas
es
push
lods
jo
push
cmp
sub
movsl
jb
lods
pop
cmpsb
xor
pop
jg
outsl
cli
pop
adc
adc
cmp
mov
test
and
and
push
sub
cmp
dec
lret
sbb
cli
movsb
into
fcoml
pop
ljmp
push
jne
arpl
cmp
xchg
lods
dec
ljmp
inc
call
cld
addr16
roll
mov
arpl
orb
sub
lcall
andb
imul
in
stos
jbe
mov
sub
xlat
inc
cmp
test
icebp
push
pop
inc
xchg
sbb
jno
xchg
fdivrs
mov
fcoml
arpl
cmp
mov
sahf
adc
hlt
pop
pushf
mov
dec
cmp
mov
js
and
imul
adc
scas
lods
aam
dec
jl
arpl
cmp
dec
scas
xchg
int3
mov
jns
scas
pop
cmp
aad
lock
lock
lock
cmp
push
leave
cli
ds
aaa
xor
mov
rcll
dec
lret
movsb
in
int3
enter
mov
sub
lret
push
fistpll
dec
and
fimuls
testb
jmp
sbb
test
mov
test
jmp
lea
sub
sub
pop
mov
inc
incl
js
test
cli
pop
and
and
sahf
xor
mov
loope
and
subl
mov
add
or
jae
mov
test
xchg
test
cmp
cmpsb
xchg
push
nop
sbb
mov
or
dec
pop
stc
test
inc
mov
hlt
or
fptan
pop
and
pop
leave
call
mov
lret
clc
inc
sbb
ds
and
sbb
and
testl
jne
or
mov
adc
lods
inc
cs
cld
daa
dec
cmp
lret
push
jmp
repnz
mov
sbb
mov
dec
loopne
mov
scas
lock
push
inc
jns
ret
sub
das
mov
add
jno
js
push
std
push
jno
mov
jnp
repnz
jl
mov
adc
int
test
pop
movsb
jae
std
aas
cmpsb
sbb
pop
cmp
nop
inc
movsl
rcrb
mov
sbb
hlt
pop
int3
fcomps
js
std
and
jmp
pop
cmpsl
dec
ljmp
outsl
jmp
jmp
fsubs
mov
pop
inc
das
lods
jns
or
sbb
jecxz
test
cmp
lock
and
faddl
jbe
ret
cmpsb
movb
cmpsb
ja
imul
jnp
jns
sti
icebp
inc
stc
cltd
cmp
mov
cltd
inc
sbb
fstpt
sbb
xor
mov
sbb
leave
xor
mov
aaa
shlb
ljmp
dec
into
test
bound
imul
lock
dec
js
scas
enter
add
cmpsl
subl
add
cwtl
push
inc
movsb
cmpsb
and
dec
push
jno
sbb
mov
jnp
adc
mov
add
fucomip
test
jbe
mov
pop
clc
jb
in
sti
pushf
push
aad
out
sub
sbb
push
ret
shll
mov
push
cltd
and
mov
fbstp
into
inc
xchg
push
and
jne
dec
inc
cmovs
fisttpll
sahf
lahf
fisttpl
cmp
shlb
in
aam
notl
testb
in
fsubs
stos
daa
dec
jl
ljmp
xchg
dec
in
or
insl
movsl
dec
inc
jp
sub
add
repz
cmpsl
mov
and
stos
push
xor
push
adc
aad
and
push
out
test
mov
pusha
int3
xor
sub
xor
bnd
movsl
xor
ja
icebp
inc
ret
jmp
sub
mov
pop
test
outsl
leave
in
jecxz
mov
in
or
cmp
mov
mov
mov
sub
cmc
into
movsb
add
push
xchg
fisttps
jg
cwtl
sub
sti
out
xor
add
pop
into
and
shll
dec
pop
das
in
sbb
imul
add
ds
je
scas
ss
or
clc
push
lods
dec
sub
notb
dec
sub
push
cli
jno
test
xchg
pmaxsw
cmp
adc
mov
jecxz
outsl
nop
hlt
sub
push
or
push
or
leave
xor
stos
add
mov
jp
addr16
mov
add
push
das
sti
mov
pop
jno
stos
scas
jbe
mov
mov
sahf
inc
dec
sbb
test
pop
es
std
insb
push
roll
dec
adc
xchg
negl
out
xor
into
cwtl
mov
fimull
loopne
pop
sub
mov
out
nop
jnp
test
call
xchg
test
ja
rcrl
mov
insl
imul
mov
das
inc
push
xor
and
iret
enter
testb
sub
fsts
mov
sbb
xor
hlt
mov
cmpb
add
dec
repnz
jmp
loope
movsl
jae
jns
inc
popa
cmp
mov
outsl
movb
cs
rolb
adc
mov
int3
pop
div
int
pop
add
inc
fisttpl
push
mov
adc
mov
mov
fimuls
xor
mov
mov
rcrb
xor
pop
inc
add
inc
mov
xchg
xor
mov
jbe
cmp
xchg
xchg
stos
in
jl
leave
sarl
sbb
push
cmp
fildl
movsb
iret
iret
int3
stos
pushf
cli
sub
dec
pushf
les
xor
sub
or
cmpsl
or
das
lret
shrb
jge
inc
in
inc
push
add
or
adc
push
xor
sti
jle
xchg
adc
call
mov
pop
adc
mov
xor
xor
cltd
pop
subb
jmp
sub
and
and
imul
mov
push
cmp
mov
jns
or
add
add
out
pushf
cmp
xor
xor
stos
decl
in
cmp
cmp
std
sbb
jno
outsl
je
out
and
lcall
rcrb
nop
cltd
test
sub
in
test
push
pop
mov
xchg
jns
cmc
repnz
cmp
jbe
cs
ja
filds
pop
sbb
jno
inc
push
cmp
push
dec
add
push
jno
testl
insb
cli
or
push
je
loope
cmpsb
mov
and
outsb
push
and
sub
jge
ret
out
jno
aad
mov
mov
xor
loope
or
repz
mov
in
adc
jne
andl
xchg
sub
les
jo
pop
mov
and
stos
loopne
or
scas
xchg
pushf
popa
xchg
addr16
frstor
lods
add
in
xor
std
mov
or
push
mov
roll
jl
xchg
arpl
inc
cwtl
adc
pop
push
out
ret
clc
nop
mov
adc
pop
ljmp
adc
js
jge
sub
add
test
and
subl
test
sbb
jb
fsubp
push
xor
test
popf
mov
jl
in
test
pop
jmp
shrb
bound
mov
js
sbb
jg
outsl
jo
inc
inc
cmp
xor
mov
popa
xchg
dec
arpl
mov
xor
rcrb
jns
push
jno
pushf
mov
aas
cmovnp
pop
test
test
out
imul
sub
clc
leave
sub
cmpsb
insb
mov
movsb
test
adc
dec
or
jge
insb
fstpt
adc
dec
xlat
shrl
cmc
inc
dec
outsl
sarb
ds
addr16
inc
mov
sahf
push
or
or
mov
pop
sub
sub
sbb
and
push
push
dec
stos
and
cmpsl
xchg
adc
sub
std
jmp
int3
iret
in
loop
cli
and
push
int
ret
xchg
jmp
cmp
jb
jno
xor
out
xor
sahf
adc
mov
and
stos
jle
xchg
je
pushf
cmc
mov
mov
xor
jg
movsb
mov
test
sbb
arpl
loopne
popa
mov
xchg
aas
stos
sub
adc
sub
out
call
inc
rolb
inc
and
lret
xchg
dec
sbb
mov
call
repnz
pop
cmpsl
mov
pushf
into
sub
jb
insl
jle
mov
adc
jle
xchg
ss
mov
adcb
xchg
cmpb
mov
test
loopne
adc
adc
push
or
shl
js
pop
cltd
mov
cmp
fdivrl
js
out
roll
mov
inc
scas
test
push
jnp
fisubs
fwait
cli
popf
xchg
jb
sbb
mov
mov
rclb
lock
sarb
in
mov
xchg
scas
mov
insl
xchg
push
dec
pop
mov
sar
cmpsl
es
jns
and
push
jle
push
jecxz
mov
bound
ret
iret
pop
jns
push
js
push
mov
lods
leave
hlt
pop
loop
mov
inc
inc
mov
pusha
lds
repnz
fsubrl
sub
dec
popf
pop
pop
adc
mov
xor
fdivrs
int3
jle
or
xchg
cmp
shll
mov
pop
sbb
scas
stc
jmp
mov
subb
mov
fs
aad
mov
lret
cmp
out
add
jl
in
dec
inc
push
iret
ds
call
rcll
sbb
sub
into
push
mov
or
or
push
hlt
test
mov
inc
mov
xor
test
mov
jno
mov
aam
xchg
lcall
sub
cld
cmp
inc
sbb
mov
scas
dec
mov
inc
lods
jo
repz
std
or
imul
cld
out
cld
fdivrs
fistl
push
out
inc
ret
scas
shlb
out
add
sbb
iret
xchg
pop
push
jle
cs
insl
add
jg
and
addr16
pop
lods
cmp
arpl
aas
into
inc
mov
aaa
gs
adc
xchg
or
adc
call
mov
push
inc
adc
daa
out
inc
sub
add
mov
jne
cmp
cmp
lds
nop
and
imul
or
mov
jge
in
test
push
sbb
in
les
jo
insl
nop
in
int
nop
jae
push
lods
negl
cli
add
les
enter
icebp
test
pop
xchg
sti
and
mov
dec
jbe
and
add
xor
psubsw
jle
pop
notb
xchg
xchg
or
jnp
out
rcll
out
into
roll
pop
adc
nop
ss
xor
xor
lock
mov
and
fcomps
mov
arpl
xor
xlat
sub
mov
cmp
ds
push
out
sub
rcll
push
xchg
cmp
aas
inc
mov
es
fildl
pop
insl
mov
mov
daa
fmull
cmp
inc
idivb
and
lret
test
add
dec
mov
test
stc
fimull
scas
int
pop
lret
shlb
lods
frstor
sahf
dec
repz
xchg
jo
outsl
nop
addb
cld
rep
push
or
iret
sbb
adc
mov
pusha
lcall
pop
rcrl
daa
xlat
push
jle
mov
dec
stos
and
test
addr16
mov
repz
lds
aas
fmuls
ret
repnz
pop
xor
mov
adc
mov
loope
cmp
push
xchg
cmpsl
xor
daa
lods
cwtl
aad
in
clc
add
aam
mov
outsl
or
mov
cltd
add
mov
push
cli
popf
out
xlat
jl
or
jno
jb
adc
sbbb
insl
jnp
sbb
pop
aad
jmp
mov
push
adc
or
bound
int3
insb
sbb
lods
hlt
add
cmp
movsl
fistl
dec
incl
inc
pop
gs
ret
xchg
mov
dec
cmc
jecxz
inc
push
xor
lock
shl
test
movsb
pop
das
mov
push
add
test
ljmp
cli
rorb
cmpsb
lahf
stos
lea
inc
jb
jno
sar
pop
pop
test
mov
xor
sahf
aam
roll
push
arpl
sub
hlt
mulb
add
fmul
pop
loope
fstpt
insl
and
pop
xlat
add
fists
aad
jecxz
xchg
hlt
js
pop
es
mov
les
or
das
int3
xchg
pop
or
push
rcrl
adc
jne
imul
shl
fs
pop
das
aaa
stos
testb
sbb
xor
nop
call
mov
scas
arpl
lods
xor
orb
mov
fldl
repz
jne
pop
mov
decb
inc
mov
sub
out
pushf
mov
clc
loop
xchg
add
xchg
addr16
xchg
int3
push
cmp
or
mov
rolb
js
sbb
or
add
test
pop
mov
mov
movsb
dec
mov
mov
movsb
insb
jb
divl
jo
cmp
jo
in
repnz
cmpsl
jnp
mov
shrb
int3
pop
nop
xor
or
std
xchg
decb
daa
outsb
push
cmpsb
mov
hlt
fimull
dec
outsb
or
mov
or
sbb
test
stos
mov
cs
je
fcmovnb
cmpsl
int
aam
xchg
pop
add
and
xor
insl
cmp
mov
cmc
jns
bound
sbb
adc
fsubs
or
cmpsl
mov
cmpsb
jp
into
cli
or
mov
rorl
aas
jmp
mov
mov
push
cld
cmpsb
adc
pushf
jl
movsb
push
cmpsl
adc
rclb
adc
mov
mov
and
adc
mov
repnz
in
sub
test
mov
mov
data16
aam
jp
aas
ficomps
out
stc
xor
mov
ret
aas
xor
mov
call
fwait
in
loopne,pn
xchg
cmc
cmp
mov
hlt
pop
add
or
repnz
imul
xchg
pop
sbbl
jp
sbb
dec
int
inc
dec
shlb
and
sub
mov
test
loopne
inc
sbb
sub
jno
movsb
dec
cld
inc
dec
mov
cli
sbb
cmp
adc
neg
ds
pop
sub
sbb
or
mov
ret
jns
std
push
mov
mov
lea
aas
sti
out
push
xchg
fstl
cli
hlt
nop
movsb
add
xlat
cs
jmp
lea
mov
inc
push
cmpsl
jns
fiadds
mov
imul
dec
push
cmp
add
pop
adcl
mov
mov
ljmp
lret
outsb
xor
fstpl
xchg
mov
jp
or
aas
cmp
pop
push
sbb
jb
push
cs
pop
mov
xchg
pcmpgtw
in
and
testl
lret
mov
add
jnp
or
lds
lea
mov
cmp
sar
adc
push
pop
fwait
fwait
xchg
cwtl
mov
and
pop
dec
ss
push
pop
sbb
cmp
in
adc
adcb
addr16
mov
xor
push
and
shl
xor
mov
pusha
fstp
and
js
cmpsl
sub
lret
gs
xchg
call
scas
ret
jne
mov
pop
out
mov
cwtl
add
mov
into
mov
cmc
push
sbb
stos
pop
pop
gs
outsl
lcall
popl
cli
xchg
or
push
dec
movsb
sarb
stos
dec
jecxz
xchg
dec
scas
add
jne
cmpsl
mov
fistpl
adc
mov
fwait
in
les
mov
pop
xor
stc
fldt
ljmp
cltd
add
fildl
mov
pop
cwtl
aam
xor
adc
push
cwtl
bound
or
mov
addb
xchg
mov
movsl
cmpsb
pop
xor
jg
jge
inc
sub
mov
out
inc
cltd
mov
mov
mov
aad
jmp
and
rcl
mov
ljmp
xor
fs
or
jo,pt
daa
mov
add
mov
dec
or
adc
fwait
in
mov
mov
xchg
jg
mov
subb
and
dec
xchg
xchg
jl
mov
icebp
lcall
shll
jp
inc
add
mov
mov
cmovne
jp
add
or
cmp
xchg
fdivp
cltd
bound
ja
pop
std
mov
in
lock
and
jns
lret
jmp
jo
jnp
rclb
push
insb
dec
movsb
imul
push
shlb
fs
push
ret
pop
cmp
in
xchg
ss
jbe
add
sub
and
dec
clc
mov
push
movsb
das
jle
inc
lods
fists
sub
inc
jb
clc
mov
sub
mov
out
jmp
push
bound
out
jl
movsl
or
mov
std
sbb
push
cmp
into
int3
ds
mov
call
sbb
xlat
jecxz
inc
mov
out
bound
test
cmp
dec
mov
movsb
or
xchg
jne
dec
scas
push
mov
pop
shlb
sbb
repnz
cmove
lea
shrl
lahf
or
pop
std
mov
cmp
and
inc
sub
adc
sbb
add
shl
mov
or
mov
das
inc
pusha
and
push
stos
pop
sub
push
xor
dec
xor
jae
jg
and
xchg
aaa
xchg
add
add
mov
cwtl
sbb
iret
add
movsb
rclb
push
cmp
cmp
cmp
mov
mov
repz
fdivrp
ret
emms
xlat
insl
cwtl
repnz
and
sub
fnstcw
test
ja
int
cmpsb
or
aad
jns
push
xchg
mov
jp
pop
faddl
inc
jno
inc
mov
into
dec
add
lahf
lret
xor
add
imul
push
insl
dec
mov
cmpsl
mov
cmp
push
sbb
cmp
das
jbe
inc
mov
mov
mov
hlt
aam
jle
pusha
sbb
cmc
push
and
dec
fisttps
mov
loopne
cmpsb
and
test
scas
or
jne
xor
xchg
or
fmuls
jo
push
js
mov
mov
sub
mov
dec
dec
sti
ljmp
test
adc
iretw
jb
hlt
test
xor
loopne
faddl
fs
inc
push
fbstp
jb
jp
or
stos
add
lret
gs
hlt
push
aad
xor
cmpsb
add
test
aad
and
imul
add
xchg
or
inc
mov
mov
cmp
pop
mov
shr
jge
pushf
out
push
shlb
fdivl
ja
orb
mov
mulb
push
adc
pop
mov
pop
mov
fimuls
jmp
lock
xchg
adc
fwait
insb
int3
sub
jne
and
out
pop
push
lret
mov
dec
or
test
xchg
repz
push
cli
xlat
xchg
adc
mov
in
mov
mov
call
cmpsb
lock
sub
jbe
dec
fdivrp
bound
or
popa
dec
shr
lods
pusha
pushf
popf
jne
pop
or
dec
outsb
aas
xchg
or
fsubl
jp
push
les
incl
jb
and
aaa
imul
adc
add
push
mov
gs
push
xchg
data16
outsb
aaa
dec
and
lds
sub
aad
popf
add
lds
fldenv
push
adc
jmp
sbb
jp
push
add
daa
xor
push
lcall
out
testl
aas
push
fbld
dec
ds
add
push
mov
fisubl
cmp
movsl
je
mov
notb
test
add
in
sti
ljmp
cmp
mov
sbb
sub
mov
les
dec
in
inc
pop
xor
or
inc
xchg
lret
mov
sub
rclb
and
in
xor
in
mov
sub
lds
inc
adcb
out
sub
test
cmp
aad
mov
mov
push
in
scas
daa
dec
notl
mov
dec
xchg
ja
jo
addr16
push
in
loopne
adc
adc
int
xchg
testb
xchg
neg
cmpb
mov
mov
cwtl
in
imul
mov
mov
movsl
add
dec
mov
push
push
or
sub
push
adc
and
lcall
and
adc
or
dec
fwait
push
mov
mov
fdiv
and
mov
push
pop
bound
loope
fmull
dec
shrl
push
cmp
inc
jbe
mov
mov
pop
mul
cmp
out
mov
mov
sub
sub
lret
movsl
mov
mov
imul
jmp
scas
jg
sarl
in
popa
push
test
jnp
mov
jnp
push
xor
loop
popf
mov
push
mov
scas
cmpsl
jp
fisubrl
mov
sub
push
mov
js
xchg
pop
in
cmp
xor
xor
sub
mov
es
setns
out
nop
test
xchg
imul
cmc
sbb
xchg
jo
mov
mov
jmp
test
add
mov
pop
pusha
mov
incb
jb
test
pusha
nop
mov
push
mov
in
es
add
mov
fisttpll
ljmp
or
shlb
movsb
adcb
ldmxcsr
xlat
push
and
andl
adc
cmp
cmpsl
outsb
jle
loop
sub
loopne
int
lea
icebp
lock
add
outsl
xchg
xchg
inc
icebp
mov
sub
aam
leave
mov
pop
fistl
stos
jmp
cmp
push
sbb
aam
mov
inc
xor
fcmovb
sub
push
in
xchg
leave
test
inc
sub
cltd
jbe
sbb
mov
push
int
movsl
out
scas
adc
rcl
in
lods
popf
mov
push
hlt
ret
jge
lds
cmp
add
arpl
xchg
popf
add
addl
pop
out
inc
add
fs
fistps
and
dec
movb
sub
ss
or
and
mov
inc
pop
adcl
fdivrp
insl
xor
fs
jl
mov
mov
jbe
push
jg
scas
lcall
jb
scas
lahf
adc
aas
xchg
aaa
bound
stos
pusha
mov
dec
lcall
orl
push
sarb
or
push
lock
js
sbb
jne
push
add
cmp
leave
dec
sbb
jmp
mov
iret
mov
mov
pop
jnp
gs
iret
out
jp
xchg
and
lods
xchg
mov
in
and
cwtl
mov
push
mov
rcrb
adc
cmp
push
fidivs
test
push
cmp
or
xchg
jno
mov
push
insl
lods
ret
mov
sbb
xchg
loope
or
loop
decb
outsl
add
rcrl
mov
negl
xchg
aad
imul
das
fs
sub
jae
mov
sahf
pop
pop
push
jg
sbb
jnp
sbb
imul
rcrb
push
jmp
repnz
xchg
and
cmp
sub
and
in
mov
gs
ret
jl
shrb
pop
adc
push
arpl
pop
lret
cmp
clc
mov
fisttpll
sarl
enter
fiadds
add
jb
dec
ja
repz
mov
ja
jl
jno
jne
jnp
xchg
add
scas
add
pusha
and
fildll
addr16
test
and
mov
rorb
sbb
mov
enter
fs
call
dec
push
mov
je
push
cld
and
mov
call
mov
mov
jne
add
push
cmpsl
xchg
and
mov
mov
out
arpl
loope
les
nop
lret
loopne
loope
cmp
sbb
and
mov
pop
divl
pop
cmp
and
imul
ret
loope
mov
mov
jno
mov
lahf
inc
mov
popf
jns
sbb
jno
into
sub
jp
or
mov
dec
pop
pop
fdivr
or
push
jns
hlt
pop
sbb
push
add
out
jns
mov
addb
sbb
loop
mov
ljmp
stos
pop
inc
pop
mov
gs
push
jae
test
adc
push
sbb
imul
push
mov
mulb
or
movsb
lods
add
sbbb
loop
cmpb
paddq
lret
jecxz
imul
test
pop
sbb
data16
cmp
cmpsl
adc
and
mov
pop
add
push
sbb
stos
sbbl
shlb
sbb
cmp
push
mov
and
push
std
sbb
jg
sbb
push
loopne
int3
inc
lds
testb
mov
push
fisttpl
lret
pop
ds
or
mov
cli
mov
cwtl
stc
mov
das
mov
jmp
lahf
call
and
adc
mov
mov
or
inc
or
mov
xor
rclb
test
mov
fsubs
inc
dec
cmpsl
add
push
daa
mov
mov
dec
jmp
ds
xchg
int
or
cmpsl
or
jge
lods
mov
and
rcr
test
or
push
and
sti
add
rcrl
pop
cmp
shl
fld
inc
ror
xlat
or
xlat
iret
xchg
and
dec
or
add
jp
inc
inc
pop
daa
imulb
adc
push
jo
mov
movsb
push
loope
or
xor
push
jmp
jmp
outsb
and
andl
insl
ss
cmove
fcompp
pop
ret
ficoml
xlat
pop
enter
iret
mov
dec
add
inc
mov
adc
jle
scas
bnd
lock
dec
jle
pop
lds
and
jmp
add
scas
fs
sbbl
cmp
mov
cli
lock
or
imulb
in
leave
mov
sub
pop
push
pop
stos
xchg
fstpt
js
push
push
mov
aaa
out
dec
cltd
daa
outsl
mov
jae
nop
mov
and
adc
cmpsl
fadds
mov
fidivl
jmp
imul
rcr
clc
cmp
dec
sub
and
push
fisttpl
pop
int3
mov
shlb
rol
xor
pusha
loop
xchg
jl
lret
sahf
jg
mov
loope
stos
shlb
mov
mov
gs
test
push
lods
ljmp
daa
das
fimull
sbb
jmp
lcall
push
scas
mov
sti
lods
inc
inc
adc
movsb
mov
adc
pop
imul
aaa
pop
sub
or
push
dec
add
add
or
cmpsl
pop
scas
int
data16
inc
clc
in
mov
push
pop
and
sub
adc
bound
adc
cltd
cmp
mov
gs
jno
sarl
cmp
aaa
push
stc
js
aad
ds
enter
test
clc
adc
jbe
sub
addr16
test
add
push
movsb
dec
mov
into
mov
int3
cmp
js
sbb
ss
es
loopne
cmp
loop
cmp
xor
or
sub
mov
mov
or
iret
or
mov
inc
cld
outsb
xlat
repz
imul
mov
pop
mov
pop
movsl
jmp
pop
ss
jno
loop
jae
into
and
in
cld
mov
sbb
inc
sbb
jmp
xchg
jae
xchg
xchg
add
sar
jb
call
cmp
shrl
or
pop
mov
jecxz
jne
jae
into
xchg
data16
mov
and
je
jmp
push
and
ret
xor
insb
fsub
ja
mov
cwtl
loopne
jnp
pop
je
repz
push
fsubrs
sub
jnp
das
test
dec
mov
dec
mov
clc
cld
push
test
inc
stc
mov
sbb
cmp
jmp
pop
adc
mov
lret
lock
mov
sub
jb
lods
mov
push
pop
push
lret
arpl
andl
fninit
xor
jo
sub
mov
xchg
jbe
pop
xorl
lret
xor
jmp
dec
cwtl
mov
icebp
lods
xchg
and
push
lahf
cli
es
test
sahf
cli
pop
jae
cltd
add
cmp
aas
fidivs
pop
pop
imul
sti
adc
add
insl
cmp
mov
push
insl
xchg
enter
inc
jno
jle
loope
fldcw
cmpsb
fisttpl
jp
cld
xor
push
fs
mov
push
push
xor
xor
sub
and
sbb
inc
xchg
xor
mov
pop
push
jbe
js
shrb
xchg
jne
addps
jecxz
int3
push
mov
mov
fcmove
jne
xor
jns
pusha
pop
mov
add
in
pop
sub
jnp
in
in
fimuls
or
mov
add
mov
decb
ja
leave
lods
dec
imul
dec
out
or
mov
loopne
inc
sub
lcall
js
add
aaa
fdivrs
and
mov
sahf
jns
idivl
cmp
enter
aam
out
cld
test
pop
or
das
and
cld
cmp
fsts
sub
inc
loop
jmp
lea
cld
xchg
inc
lahf
jg
push
test
dec
push
out
iret
scas
int
shl
sbb
push
sub
notb
iret
out
xlat
int3
popf
leave
inc
pusha
push
ret
mov
lods
pop
mov
fildll
mov
arpl
out
sbb
inc
jae
adc
mov
mov
and
popf
push
test
xlat
loope
mov
test
arpl
dec
loop
cmc
roll
lock
dec
mov
stc
fdivs
nop
lock
or
cmp
in
xchg
jle
jg
adc
fsubp
mov
mov
std
adc
cmp
pop
and
pusha
insb
js
and
mov
jg
push
outsb
pop
cltd
ret
push
push
lods
std
lgs
xor
push
scas
loop
cld
jae
adc
cmp
call
adc
fnstcw
rcrb
cs
mov
add
data16
aaa
adc
mov
fimuls
std
daa
adc
mov
addr16
aaa
inc
lods
push
add
call
mov
dec
je
cmpsb
pop
xchg
push
sbb
out
ss
xor
mov
sbb
lret
dec
push
bound
sbb
jg
sub
sbb
arpl
mov
int
arpl
mov
in
mov
xchg
mov
pop
inc
sbb
js
cmc
mov
jno
and
xchg
pop
cmpl
rcll
addl
jl
fdivrs
mov
dec
lahf
out
mov
ja
jl
cmpsl
sarl
inc
ljmp
daa
dec
pop
inc
jl
jmp
mov
les
dec
mov
sub
nop
push
sub
outsl
or
push
std
faddp
push
xchg
push
pop
dec
sub
stc
mov
dec
rolb
cs
movsb
pop
jb
rclb
mov
fnstenv
inc
adc
rol
aam
lock
dec
xchg
mov
cmp
cld
xchg
cmpsb
orb
mov
nop
mov
fnsave
xchg
ss
dec
mov
push
inc
outsl
jno
inc
test
std
adc
iret
push
sub
nop
jno
mov
out
outsb
fidivrs
ja
pop
out
lret
pop
push
pushf
insl
or
leave
jno
mov
xchg
rol
mov
push
int
xor
mov
jp
mov
fistl
out
nop
and
repnz
sti
pushf
adc
int
shl
sti
mov
in
sbb
and
clc
fidivrl
push
push
or
jle
cmpsb
cwtl
jb
adc
stos
repz
jns
lret
test
inc
negl
or
fldt
mov
push
pop
push
clc
call
mov
lock
and
lea
xor
xor
andl
popf
jecxz
repz
dec
xor
lds
les
jne
fisttpll
push
rcr
ret
lods
cmp
xor
mov
mov
aam
hlt
xchg
les
and
xchg
xchg
lret
xchg
bound
sub
mov
push
repz
mov
mov
in
mov
setae
divb
inc
push
out
ja
jl
stos
xor
mov
out
sbb
nop
jno
push
mov
lds
pop
rolb
xor
mov
and
push
stos
movsb
or
xchg
cmp
ffreep
push
push
in
xchg
cwtl
data16
into
sub
rcl
lea
xchg
lods
push
xchg
loop
add
pop
dec
les
popf
sub
inc
xchg
mov
clc
and
in
adc
dec
cmpsb
push
mov
stos
inc
bound
jo
sbb
loope
es
sbb
jp
fcmovbe
jp
icebp
hlt
je
les
or
into
add
dec
repz
arpl
fstp
mov
xchg
stc
xchg
flds
xor
xchg
dec
bound
hlt
mov
pop
cmpsb
in
mov
lret
dec
fildll
in
lea
mov
cld
loop
rolb
rcr
mov
cs
out
outsl
rorb
inc
adc
xchg
sbb
xchg
mov
xor
add
shll
sbb
cmpb
test
or
and
and
into
dec
xchg
jp
push
loope
and
add
xchg
cmp
jecxz
mov
xchg
mov
out
ucomiss
ds
ljmp
movsb
push
in
lret
cmp
cmp
xchg
push
movsb
lret
pop
sysenter
inc
and
out
adc
sub
or
lea
inc
and
repnz
xorb
test
push
push
adc
add
cmp
pop
rclb
cli
in
js
add
pop
cltd
cmp
cld
sub
dec
push
xor
lock
inc
pop
imul
sbb
gs
cltd
or
jge
inc
inc
push
cmpsb
testb
repnz
sub
push
fldcw
mov
jp
or
lds
mov
lret
cmp
mov
and
in
arpl
insl
clc
mov
hlt
ljmp
in
addr16
loopne
out
and
inc
das
in
sub
mov
repnz
dec
dec
imul
sbb
cmc
jns
sub
mov
insb
xchg
xchg
xlat
mov
lods
or
iret
aad
cmp
js
sbb
or
pop
push
mov
or
imul
and
pop
push
sbb
fistps
test
repz
xlat
data16
or
fidivrl
into
xchg
sahf
fsts
and
sbb
xchg
cld
int
fwait
dec
jno
mov
xchg
lcall
pop
pop
mov
xchg
jge
loope
aaa
push
sti
sbb
popf
mov
sub
shll
mov
fdivl
out
fs
stos
inc
add
xchg
and
mov
fwait
add
ljmp
nop
out
test
sarb
pusha
add
push
mov
push
movsl
add
pop
dec
mov
cmpps
test
mov
sbb
in
pop
das
jbe
nop
dec
adc
xor
icebp
fidivs
jle
add
push
sub
in
arpl
and
sarb
pusha
test
pop
xlat
add
cltd
cmc
cmp
shr
lret
inc
sbb
push
int3
lods
pop
jno
fsubrl
fadds
and
int
and
push
jle
repz
or
add
pop
pushf
fisubrs
push
lds
call
cwtl
scas
shll
in
push
fcomps
dec
outsb
aaa
sbb
mov
and
call
pop
out
mov
sbbl
and
scas
cmp
ret
lcall
in
fstl
sbb
aad
fmuls
dec
add
inc
dec
lahf
sbb
addr16
test
jo
jb
fimuls
scas
or
jp
fisubl
pop
cmc
jecxz
and
mov
and
push
xchg
lret
idivb
mov
sbb
pop
fidivrs
mov
jecxz
push
jg
mov
mov
in
or
sbb
test
movsl
sbb
dec
adc
push
scas
cmp
out
mov
push
stc
sbb
ja
cs
sbb
jae
adc
jbe
test
sbbb
insl
or
fldt
push
popf
test
and
out
out
mov
jge
dec
push
xor
jns
jb
mov
sbb
std
mov
sahf
mov
insb
jg
and
fwait
jecxz
ret
aad
mov
sbb
imul
cmpsb
xchg
les
dec
xchg
inc
or
and
push
leave
add
inc
call
scas
dec
cmp
add
cmp
cmp
jb
and
inc
imul
fstpl
push
popa
mov
add
fisubs
cmp
rcrl
jae
and
jne
ja
jle
popa
push
enter
xchg
pushf
or
lds
test
xchg
push
rcrl
pop
cmp
imul
repnz
gs
xchg
js
ja
seta
mov
add
test
jp
enter
cmpsl
imul
scas
push
inc
stos
loop
into
das
cmpsb
jo
pop
lods
into
fisttpl
test
fs
bound
adc
jb
outsl
cmpsl
mov
movsl
loope
std
pop
jg
ss
pop
cmc
jmp
lea
dec
xchg
popf
test
push
lahf
jp
aam
imul
js
push
push
inc
mov
mov
mov
call
cmp
lcall
hlt
popf
dec
jae
stc
aam
repnz
sbb
test
pop
mov
ficomps
lcall
mov
sahf
or
mov
jo
in
pop
jnp
lret
dec
mov
rcr
or
popf
pop
cmp
popa
xchg
and
in
push
nop
loope
mov
xchg
jo
cwtl
push
add
jno
push
test
pop
ds
in
cmp
xchg
fsubrl
push
std
pushf
mov
pop
sbbl
mov
aas
mov
shrl
ljmp
sbb
unpcklps
loope
sbb
outsb
scas
rolb
mov
fmull
adc
cwtl
jae
out
addl
push
cwtl
cmp
rcr
lods
and
jecxz
int
int
insl
ret
sub
out
out
sub
inc
mov
stos
or
push
mov
xchg
jnp
xor
push
aam
iret
aas
cmp
fildll
ljmp
cmp
ja
test
in
cmp
fnstsw
or
pop
cmp
pop
sub
insb
xorl
scas
cli
out
hlt
and
imull
imul
in
mov
mov
xor
stos
ljmp
jecxz
lret
in
and
ficompl
mov
cmp
insl
lods
jno
push
into
imul
int3
rcrl
jge
dec
pushf
out
sti
push
cmp
xor
ror
mov
pop
pop
rol
pop
cmp
cmc
shll
mov
bound
outsl
sbb
outsl
jbe
inc
test
lods
adc
push
sub
lahf
sbb
cmp
loop
mov
stos
test
stc
data16
sbb
dec
outsb
mov
es
mov
pop
in
mov
fcoms
xchg
popf
sti
pop
leave
xchg
popa
pop
sahf
divl
lock
mov
cmp
stos
xchg
inc
cmp
xchg
mov
or
and
popa
mov
jns
in
stc
jmp
insb
dec
iret
fbld
repz
and
negb
add
fistps
sub
iret
imul
jb
dec
stc
or
roll
sbb
mov
sub
shl
repnz
adc
xchg
push
xlat
aam
push
lock
mov
shrl
nop
je
std
mov
jmp
gs
push
ret
push
inc
int3
nop
cmp
shr
lods
movsb
lods
cltd
and
push
es
jno
or
jge
outsl
jecxz
lahf
sbb
cs
or
adc
stc
jns
sbb
stos
test
aaa
sti
xor
push
cmpsl
in
pop
mov
xchg
push
cmc
test
std
mov
xchg
push
jno
xchg
lock
adc
scas
sub
pop
cmp
leave
push
stc
lods
repnz
mov
mov
les
rorl
and
data16
xor
jge
push
lret
pop
mov
fwait
adc
js
cmp
push
shrb
push
push
cmpsb
mov
lock
mov
ljmp
mov
ja
testb
test
je
shll
int3
push
enter
jecxz
xor
dec
icebp
icebp
pop
leave
shrb
frstor
and
and
daa
push
add
mov
mov
mov
push
loope
inc
dec
cmp
xor
fdivs
or
jp
fisubrl
cmpb
fdivrp
push
rorb
lcall
andb
les
outsl
jbe
pusha
sub
ds
out
sub
add
pusha
ljmp
lret
rcrb
mov
pop
repnz
icebp
loopne
push
dec
adc
or
adc
sub
fbstp
xor
lahf
pop
loop
inc
fcompp
out
test
cmp
xchg
sbb
test
lret
inc
dec
dec
pop
mov
push
aam
je
cld
leave
std
lea
lcall
stos
enter
hlt
xchg
pushf
dec
pop
mov
addl
shlb
gs
adc
data16
cli
cmpsl
fwait
mov
mov
inc
pop
dec
test
sbb
paddq
int3
in
cld
adc
push
pusha
aaa
cltd
nop
pop
xchg
bound
mov
or
sti
into
scas
or
mov
sbb
lahf
mov
in
push
pusha
arpl
cmp
test
hlt
add
popf
and
add
mov
pusha
ss
cld
int
repnz
fnstcw
cltd
adc
stos
sbb
sbb
fmulp
lea
add
paddw
mov
add
xor
int3
pop
iret
lock
out
test
fdivrp
std
hlt
mov
mov
test
les
inc
jns
or
fisttps
and
rcl
xchg
fcomps
insb
lods
jge
push
lods
fs
rcr
lret
push
test
add
mov
shlb
sbb
and
movsb
xorb
jl
incl
lret
xchg
xor
ds
inc
shll
push
pop
imul
xor
dec
mov
push
imul
inc
jbe
pop
hlt
cmp
enter
shl
pop
data16
je
mov
mov
in
in
xchg
in
pop
xchg
xchg
xor
fidivrl
enter
xchg
iret
push
jno
jae
dec
std
pop
dec
cmp
mov
inc
jmp
aas
pop
lea
xlat
lahf
push
iret
jo
iret
add
mov
xchg
jne
cmc
inc
ja
sbb
pop
push
in
data16
clc
jo
mov
add
mov
and
sbb
cmpsb
mov
jp
pop
pusha
fcoml
mov
cwtl
or
cmp
inc
adc
jle
and
daa
jecxz
mov
adc
xor
arpl
or
mov
cltd
and
inc
sbb
pop
or
sub
mov
cmp
leave
jae
push
decl
jb
pop
dec
mov
in
test
shrl
jns
xchg
mov
lock
add
ljmp
ret
into
cmp
pop
mov
dec
push
xorb
test
test
mov
mov
ss
mov
mov
popf
outsb
into
add
stos
shlb
sub
int
in
sub
loopne
insl
mov
into
xor
push
and
pop
or
lcall
repz
xchg
jae
jp
and
mov
pop
add
inc
xchg
jle
test
push
inc
arpl
and
xor
cmp
sti
fcomps
inc
inc
movsb
psubq
jno
sbb
daa
mov
push
jle
nop
fimuls
daa
cmp
lcall
stos
xor
fwait
pop
xchg
mov
mov
scas
leave
fsubrp
fdivl
mov
pop
dec
pop
fstpl
xor
push
movsl
std
and
mov
dec
jb
sti
js
cld
decb
push
fidivrl
je
cld
pop
les
in
xor
cmp
mov
add
xor
xchg
out
sub
mov
xor
mov
cmpsb
fnstenv
popf
add
inc
iret
pop
cmp
fisttpl
scas
aaa
rcr
or
dec
dec
pop
or
fcmovnb
xor
dec
xchg
das
fadds
jne
cmp
add
shlb
cmp
adc
jle
lea
or
mov
imul
cmp
js
iret
mov
jb
inc
enter
push
adc
xor
xor
mull
arpl
adc
pop
mov
mov
jecxz
cmp
test
xchg
fadd
and
insb
in
jge
jo
adc
nop
push
push
jp
je
mov
std
push
push
aad
js
popa
into
data16
out
mov
push
jno
out
repnz
jge
inc
xchg
jle
xor
fsubp
rorl
in
lods
loopne
ficoml
xchg
dec
mov
sub
test
pop
hlt
addr16
movsl
aam
or
loop
xchg
jmp
nop
mov
push
outsl
shr
hlt
jp
enter
add
sbb
push
mov
lods
rclb
push
pop
xchg
ret
push
cmp
mov
js
outsb
push
sbb
jl
dec
clc
push
jo
lcall
push
pop
into
mov
cmpsl
in
cmp
mov
mov
push
pop
cmp
pop
ret
mov
std
in
fabs
mov
sti
bound
insl
jnp,pt
sub
iret
cmc
pop
and
shlb
repnz
add
xchg
aad
arpl
pop
xor
push
dec
sbb
out
hlt
data16
cvtpi2ps
repnz
adc
push
mov
cmpb
jno
shl
and
outsl
inc
cs
into
mov
jl
cwtl
dec
dec
cld
rolb
add
jns
adc
test
inc
roll
scas
mov
and
mov
icebp
int
cmpsb
push
and
or
out
outsl
sub
sub
cmovne
sub
jb
cmp
and
ds
xor
pop
cld
hlt
adc
imul
stc
xchg
or
rcll
mov
inc
test
negb
mov
cmp
lret
xchg
mov
ja
push
je
outsl
jns
fldz
push
outsl
mov
jl
push
sub
outsb
mov
je
mov
lahf
pushf
mov
subb
popf
popa
adc
push
mov
mov
jae
into
cmc
cld
xchg
push
dec
lds
add
push
jbe
das
xchg
daa
pop
and
rcrb
outsb
iret
lds
loope,pn
pop
jge
mov
sbb
pop
mov
mov
lods
sarb
or
mov
arpl
jl
arpl
mov
pop
push
jecxz
in
jp
push
and
ss
fxch
lret
mov
or
dec
stos
add
sahf
sub
fcomps
jge
enter
sbb
pop
mov
fucomip
add
addl
add
inc
xchg
mov
js
or
lock
cld
xor
mov
aam
jnp
xor
cltd
mul
sub
push
les
fs
mov
sbb
jge
ror
inc
or
or
out
push
rorb
adcb
xor
fs
insl
daa
in
and
or
jbe
popa
stos
cmc
or
sbbl
or
push
call
insb
mov
insb
xor
inc
lods
loopne
or
mov
fcoml
je
lret
cmp
push
pop
pop
xchg
push
enter
jo
movsb
je
mov
in
sub
roll
int3
enter
cmp
mov
mov
push
cmp
leave
add
rclb
ret
pop
xor
sti
testl
sbb
icebp
stos
stos
sub
in
shlb
mov
test
ljmp
in
push
xor
mov
and
mov
stc
adc
dec
ret
cs
insb
push
int3
mov
loop
inc
add
addl
std
xchg
sar
mov
mov
stc
xor
push
add
and
mov
and
pop
inc
sbb
aam
lods
jp
inc
xchg
inc
and
fmull
cmpsb
jns
rorl
jmp
jbe
arpl
pop
mov
adcl
pop
movsb
aam
in
std
xorl
lods
push
push
xor
fs
adc
pop
sub
ljmp
inc
mov
inc
js
mov
adcl
lret
inc
sbb
add
xchg
sbb
sbb
lods
rorl
fwait
das
mov
and
push
aam
loop
dec
lods
mov
lret
pop
clc
pushf
push
cmp
mov
jae
popa
dec
push
jecxz
lods
jmp
or
mov
scas
mov
xor
insb
and
jns
fs
insb
imul
add
push
and
dec
imul
ret
enter
cmc
sub
ja
mov
sbb
push
fstp
shll
shr
push
xor
sbb
mov
into
cld
xchg
out
pop
mov
sub
and
mov
jb
stos
hlt
les
mov
mov
subb
pop
ds
push
push
cmp
xor
and
push
stos
mov
sbb
dec
jg
sub
mov
jp
repz
jno
jne
mov
jno
jle
jo
mov
add
cmp
stc
mov
rclb
ja
rorb
imul
cmpsl
cmpsl
ja
pop
fwait
add
mov
leave
xor
imul
push
cmp
movsl
inc
cltd
pop
pusha
fistpl
cmp
push
pop
aas
sahf
test
in
xadd
dec
sti
lcall
jns
inc
into
test
xchg
fwait
outsb
loopne
lods
mov
fs
push
inc
and
mov
add
test
inc
std
pop
pop
mov
icebp
outsl
cld
inc
jne
stc
and
or
xchg
mov
xor
dec
jae
inc
push
or
add
cmpsl
xchg
bound
and
sbb
xchg
sahf
xchg
xor
jb
lds
mov
fdivp
sahf
addr16
push
negl
repnz
pop
inc
mov
mov
sbb
add
test
jae
mov
aad
and
outsl
stc
filds
sbbl
nop
lret
push
das
cmp
aam
repz
xchg
mov
sub
jo
cli
cmp
bound
fiaddl
xor
rorl
mov
inc
shl
xchg
arpl
in
in
stc
mov
push
or
xchg
test
daa
and
jns
sbb
sbb
or
das
xchg
and
out
ds
mov
sub
pop
xchg
test
mov
push
pop
cmp
xchg
or
test
imul
in
cmp
decl
ficomps
int3
fsubrp
jb
stos
or
inc
mov
jp
bound
fildll
arpl
ljmp
scas
inc
pop
mov
push
mov
add
inc
pop
push
loope
dec
into
adc
cmpsl
push
lds
sub
outsl
jnp
jmp
or
popf
inc
insb
add
xor
xchg
cmp
push
sahf
sti
insl
or
xchg
adc
bound
stos
aam
adc
es
push
mov
call
lds
fmuls
sti
out
xorl
test
dec
aam
or
cmp
jl
das
jge
daa
push
lock
and
cli
or
jb
pop
jno
out
rolb
repz
in
test
out
roll
pop
mov
js
lcall
pushf
jle
jg
dec
imul
vphsubdq
mov
es
cmpsb
jo
push
ret
ss
rorb
pop
ficoml
into
mov
loopne
in
adc
xor
daa
int
inc
xlat
jl
dec
lret
lea
and
in
dec
mov
sbb
ret
call
xor
mov
pop
hlt
ss
pop
nop
insb
cmp
addl
cmp
fdiv
fstps
fisttps
pop
adc
fsubrl
sbb
jmp
arpl
push
push
xor
push
dec
notl
or
repz
lods
mov
push
cmp
aad
nop
sub
stos
cmp
xchg
cmp
ljmp
push
sub
push
push
mov
add
pop
add
aam
aam
pop
sahf
dec
fdivp
mov
pop
inc
bound
pusha
jp
lea
mov
imul
jns
mov
lea
movsl
das
movsb
cs
cltd
xchg
mov
jmp
xchg
sahf
stos
iret
mov
rorb
add
out
pop
popa
cmc
lods
cmp
hlt
push
pop
jno
cmpsl
push
xchg
js
xor
sub
push
test
ds
jnp
xchg
movsb
inc
sub
cmpsl
xor
cmp
les
push
cmp
add
popa
mov
xor
int3
mov
jg
jmp
cwtl
xor
jle
mov
jbe
sub
lret
sub
xor
sub
stos
add
es
inc
out
dec
neg
sahf
mov
mov
insl
push
shlb
dec
mov
and
push
sub
addl
dec
inc
and
arpl
jmp
jo
fists
jecxz
bound
lock
dec
sub
pop
sbb
cmp
push
testb
push
xchg
sub
adc
fs
inc
les
or
adc
gs
fwait
xor
hlt
fidivs
mov
pop
into
dec
push
fmull
sbb
and
mov
add
or
rorb
adc
jge
out
cs
mov
push
fdivrl
lcall
mov
cld
aam
push
loop
xchg
test
test
arpl
pop
fimull
cmpsb
int3
cmp
add
cs
adc
mov
lcall
cld
cwtl
push
ret
pop
mov
aad
clc
test
push
lea
adc
push
mov
or
mov
adc
in
movb
mov
ljmp
int
fadds
cs
jne
pop
fcoms
gs
pop
test
pop
jg
jecxz
push
pop
pop
push
rcrb
mov
mov
outsl
subl
jmp
xor
fists
dec
idiv
sub
sub
imul
shl
lcall
push
aad
dec
mov
push
jg
mov
loope
cmpsl
aaa
adc
aas
mov
dec
pushf
jg
pop
push
ljmp
jae
popf
cmp
fists
and
sahf
dec
js
mov
int3
and
ljmp
push
mov
ret
rcrb
pop
mov
mov
addb
das
out
sub
cmp
lock
pop
addb
dec
add
test
push
mov
xadd
mov
movsl
sub
lea
das
scas
cld
push
jecxz
aad
or
mov
pop
fisubrs
incb
mov
les
xchg
or
push
daa
xor
pop
adc
ds
cmp
movsl
push
push
sub
jecxz
stos
fistpl
adcb
pop
notl
push
inc
sbb
jecxz
lea
fcompl
cmpsl
dec
sub
mov
sbb
mov
or
inc
cmp
bound
pop
fcmove
nop
add
mov
dec
jno
test
cmp
dec
adc
mov
jecxz
aam
pushf
dec
add
pop
mov
sahf
add
into
and
and
push
jecxz
test
add
or
mov
stc
scas
mov
int
inc
mov
and
shrb
push
sub
mov
cmpl
adcb
pop
pop
dec
loope
jmp
mov
sub
popa
xchg
outsl
movsb
mov
cli
pop
popl
bnd
loop
idivl
xchg
mov
push
pushl
fisttpl
shll
adc
shll
jo
loope
push
inc
or
mov
push
outsb
pop
sbb
out
xchg
dec
jl
sub
xchg
std
fucom
imul
gs
and
push
scas
in
mov
add
jae
mov
inc
mov
push
pop
mov
mov
cltd
cld
inc
jg
lock
das
jl
sub
or
lods
mov
mov
pop
adc
lahf
cmp
stc
jno
stos
push
push
clc
repnz
test
fisttps
push
mov
push
pop
sub
rolb
adc
rolb
jo
imul
repnz
or
or
and
movsl
arpl
mov
cltd
jmp
jne
scas
mov
insl
sbb
push
jnp
or
mov
std
jmp
cmc
scas
dec
test
mov
in
test
and
fld
xor
dec
xchg
adc
mov
mov
loopne
scas
xchg
dec
inc
je
shlb
push
cmp
xchg
ja
mov
push
shlb
xor
jnp
jno
repnz
ljmp
dec
out
les
lcall
decb
test
adc
sub
xchg
xchg
imul
cli
dec
xlat
jmp
mov
mov
sub
in
sti
dec
mov
fnstcw
arpl
mov
vpmaxsw
mov
outsl
shl
cli
insb
mov
repz
in
aas
lret
clc
int
push
rorl
mov
inc
adc
test
sub
cmp
sbb
mov
adc
test
mov
insl
sub
fwait
or
jg
stos
push
xor
inc
std
les
aas
and
xor
inc
mov
int3
stc
mov
sub
stos
mov
in
sbb
cwtl
mov
mov
out
mov
mov
icebp
dec
je
sbb
scas
inc
out
fs
jecxz
shll
mul
mov
xchg
xchg
lock
cwtl
pop
test
adc
dec
jmp
xchg
into
ljmp
fnstsw
fstpt
mov
ja
enter
sub
lds
gs
jno
and
mov
cmp
jmp
gs
cmp
test
xor
jbe
or
cwtl
lret
lea
jl
in
call
lock
dec
push
arpl
jne
stos
lea
jmp
push
pop
xchg
and
imul
ss
push
shl
jl
cmp
xchg
ret
cltd
sahf
mov
into
mov
es
sbb
movsl
lcall
and
and
pop
or
aam
out
jo
adc
pop
shl
test
in
pushf
sti
sbb
movsb
outsl
in
cmp
cltd
push
sbb
pop
push
and
testl
mov
mov
stos
inc
loope
sub
cltd
mov
lods
xchg
push
jg
mov
push
scas
int
sbb
lods
mov
shll
sbb
out
cli
stc
out
pop
test
stos
pop
mov
stos
jbe
loope
arpl
or
call
data16
xor
push
pop
movsb
xor
cmp
repz
leave
loope
out
push
fsubrs
sbb
sbb
push
movsl
lcall
bound
stos
sbb
dec
outsl
cmp
xchg
or
jne
imul
mov
add
pop
dec
hlt
lret
inc
lods
jmp
sbb
mov
repz
shl
insb
cmp
or
pop
dec
sbb
daa
movsl
imul
mov
outsb
out
push
mov
and
xor
push
cmp
outsb
xchg
je
rcll
je
xor
in
int3
stos
test
mov
jno
out
and
arpl
add
pop
mov
sbb
inc
cmpsl
stos
mov
xor
outsl
inc
negb
in
jp
inc
mov
jno
push
idivl
add
xchg
xchg
ud2
es
aaa
cmp
or
lods
stos
shlb
insb
or
test
add
ret
shr
out
sub
pop
in
repnz
inc
sbb
enter
sub
stos
insb
pop
dec
loope
cmc
pop
enter
or
add
dec
gs
push
push
cli
push
mov
jnp
push
mov
sarb
popa
test
xchg
xor
loope
test
pusha
int
sbb
sbb
push
push
mov
mov
push
inc
jno
mov
add
or
shrb
fs
or
fcoml
pusha
fistps
int3
push
sub
mov
push
jnp
mov
aad
inc
dec
imul
sbb
fiaddl
cmp
xchg
outsl
adc
insl
fwait
repnz
push
mov
jecxz
enter
enter
mov
cmp
xchg
mov
faddl
frstor
inc
push
insb
fdivl
adc
dec
jecxz
clc
in
test
outsl
dec
mov
sbb
mov
sub
jne
cli
and
dec
daa
mov
rol
add
test
jnp
mulb
add
push
push
clc
fisubs
fisttps
add
popf
or
pop
mov
in
jge
in
leave
dec
xor
pop
xchg
frstor
rcrl
pop
jne
pop
xchg
cmp
cmp
int3
dec
inc
add
xor
inc
dec
inc
stos
inc
pop
add
xor
lret
push
call
in
xorb
pop
cmp
xor
pop
insl
aad
ljmp
dec
jmp
push
inc
mov
sbb
call
mov
orb
inc
test
stos
mov
cmp
jge
in
mov
cmp
add
xchg
fs
cld
xchg
sbb
imul
enter
mov
push
mov
or
cmpsl
fdivl
loop
xchg
les
and
rorl
dec
pminsw
aas
pop
iret
inc
fidivl
popa
loopne
sbb
inc
mov
fs
cwtl
sbb
and
pusha
mov
add
enter
ljmp
in
stos
aam
sub
xchg
nop
loopne
testb
arpl
mov
test
arpl
push
rcrl
ds
push
jecxz
test
xor
movsl
dec
pop
jbe
les
cmpsb
rcr
movaps
push
xor
mov
cltd
xchg
loopne
fistpl
or
stc
in
jg
imul
mov
fadds
jb
xchg
and
and
dec
push
adc
xchg
xchg
aas
lret
jno
and
repz
lods
xchg
fisubl
js
adc
push
in
test
xor
sub
sbb
lahf
das
scas
pushf
sbb
sub
test
les
pop
loop
movsb
lret
out
or
es
xchg
loopne
inc
std
fwait
iret
rolb
pop
iret
xchg
lret
sbb
sbb
mov
pop
inc
int3
mull
add
orl
mov
ret
mov
inc
jno
adc
aaa
imull
jge
fstpl
dec
mov
pop
jb
test
loope
add
cmp
or
jecxz
sub
cwtl
xor
pop
pop
pop
dec
or
out
sbb
scas
out
add
out
mov
sub
sub
push
adc
and
cld
enter
dec
test
or
andl
mov
mov
ror
popa
aas
std
out
jnp
xchg
sbb
xchg
sbb
add
loope
std
dec
sub
rcrb
xor
sti
fimuls
movsl
push
faddl
cli
shll
mov
xor
xor
popa
pop
icebp
add
cmp
mov
popf
mov
lahf
pop
hlt
imul
hlt
mov
mov
sbb
fldcw
lret
adc
cmp
and
mov
mov
in
adc
mov
jb
hlt
leave
outsb
ljmp
adc
insl
outsb
mov
imul
mov
dec
arpl
jo
js
push
pusha
das
jbe
cld
in
sub
inc
cmp
mov
push
lods
aaa
jg
add
std
cmp
pop
test
movsl
push
inc
addr16
lcall
cmp
dec
test
test
aaa
aas
nop
fcmovnu
add
icebp
push
and
xchg
scas
lods
arpl
adc
cs
addr16
mov
push
outsb
lea
jg
call
mov
add
test
pop
aaa
call
rorl
jle
sbb
inc
jo
hlt
push
lret
xchg
and
sarb
lret
push
pop
pop
pop
add
lods
dec
mov
cmpsl
mov
or
in
inc
fsubl
daa
xlat
addb
xchg
ja
sub
pushf
stos
stos
push
adc
push
inc
and
mov
and
mov
mov
push
cwtl
cmp
pop
notb
test
into
xor
cs
push
ds
insb
popa
roll
lock
cmp
jae
lock
int
jo
dec
xorl
adc
rcrl
fisubs
stc
std
xorb
xchg
outsl
pop
mov
test
and
dec
stc
mov
xor
mov
cmp
cli
push
pop
and
lea
xorb
and
mov
daa
arpl
popa
and
mov
and
inc
add
and
push
or
mull
mov
aas
inc
and
xchg
cmp
dec
mov
lods
sub
cmp
repz
sbb
test
jbe
shr
add
mov
lret
lds
bound
push
out
cmp
cwtl
xor
movb
and
push
push
cld
aas
cmp
jno
inc
add
notl
jo
inc
sbb
sub
push
jl
cmp
push
mov
add
cmp
cmp
pop
dec
adc
imul
mov
fs
push
int3
lds
sub
dec
adc
test
pop
popf
insl
loop
aad
push
or
add
cmpsl
mov
xchg
jne
fmuls
jecxz
dec
out
int3
out
adc
int
mov
push
sub
jge
cwtl
arpl
lods
xor
sbb
xor
or
stc
arpl
mov
xlat
lds
mov
rol
cmp
ret
jge
fcomi
push
cmpsb
mov
xchg
and
pop
clc
pop
dec
gs
xchg
lods
adc
cli
mov
xchg
pop
xor
shufps
shlb
and
out
dec
and
and
aad
mov
ret
je
lret
ljmp
pop
sbb
aaa
std
lret
cmpsl
xor
jno
sub
aad
pop
xor
push
dec
in
xchg
fisubrl
fidivrs
jl
jne
idiv
sahf
movsb
out
inc
mov
and
std
push
adc
cmovge
cmc
mov
or
push
cwtl
inc
sub
mov
sub
push
les
mov
cwtl
push
jg
jno
cmpsl
jge
mov
mov
adc
sti
mov
das
out
int3
lahf
shrb
fidivl
push
mov
gs
shr
xlat
cs
sti
das
sbb
inc
dec
xor
add
mov
loopne
daa
jle
and
sti
xor
sub
outsl
gs
and
lds
pop
sub
fistpl
data16
pop
jmp
aaa
jp
jecxz
loopne
sti
push
or
jns
arpl
rolb
cmc
jle
jg
daa
ss
aaa
js
push
ret
mov
dec
icebp
outsb
call
sbb
xlat
xchg
adc
fisttps
lcall
cmpsl
dec
add
daa
dec
sub
scas
daa
sbb
lcall
flds
pop
pop
jmp
pop
xor
out
fsubl
cmp
enter
jp
scas
inc
repz
pop
je
pop
xor
cld
xchg
cmc
pop
mov
cs
pop
xchg
push
and
pop
xor
addr16
addr16
je
add
cmp
push
cs
pushf
stc
push
lret
sub
rcrb
hlt
dec
xchg
bswap
jb
xor
mov
movsb
mov
inc
dec
shlb
sub
or
pusha
push
cmp
repz
mov
jne
mov
jmp
fwait
in
pminub
jecxz
addr16
mov
dec
sbb
scas
push
sti
leave
cmpb
cmpsl
cmp
mov
out
mov
or
inc
xor
movsb
add
pop
inc
inc
adc
outsl
fnstsw
add
icebp
or
lods
cmp
je
jmp
jb
out
in
movswl
lods
into
ja
xchg
hlt
push
jge
jns
sbb
mov
daa
aad
mov
and
popa
push
cwtl
add
aaa
dec
rcrl
dec
int
mov
mov
loope
or
and
ds
xor
rorl
inc
mov
mov
mov
push
mov
mov
addb
test
pop
or
loope
shr
xchg
outsb
dec
fmull
jg
xor
or
lahf
lret
xchg
xchg
push
leave
mov
es
xchg
stc
insb
mov
shl
jmp
mov
inc
call
test
cmp
cmp
push
mov
imul
push
into
push
jbe
dec
iret
clc
loope
std
or
sbb
lcall
ds
jle
jno
cli
push
cmp
test
int
jmp
daa
add
jb
inc
cli
mov
sub
pop
lret
outsb
std
aad
pop
int
test
stc
cld
clc
inc
mov
adc
ljmp
and
test
into
ret
mov
ljmp
ret
pushf
mov
fcoms
push
rol
mov
dec
je
push
and
sub
push
fisttpl
or
insb
in
sahf
lea
mov
aas
in
xchg
loope
idivl
movsb
repnz
ds
jne
repz
aam
and
in
ret
pushf
in
add
jg
andl
mov
jecxz
xor
hlt
jb
or
jns
fdivl
sbb
push
or
leave
inc
xor
lcall
push
pop
gs
lds
xchg
mov
pusha
adc
pop
sbb
cmp
mov
push
jl
lcall
out
or
das
insb
sahf
loop
or
pushf
enter
mov
xlat
lods
out
repnz
mov
xchg
jmp
sbb
leave
xchg
xor
rclb
xor
push
aas
add
pop
inc
cmpsb
cmpsl
addb
fst
cmp
pop
sbb
fsubs
aad
loop
test
mov
xor
call
ret
xor
clc
inc
loopne
xor
xlat
inc
sbb
sbb
sahf
xor
push
lock
test
aas
mov
int
xchg
insl
out
pop
insl
into
adc
mov
add
stc
jo,pn
test
mov
daa
sbb
mov
inc
out
popf
xchg
cmpsb
sti
cmpsl
jge
enter
add
adc
stc
mov
and
push
stos
jne
add
scas
inc
mov
cmp
and
sbb
sarl
in
cs
sub
pop
dec
cmp
or
cltd
nop
ret
icebp
pop
test
sub
and
cltd
js
mov
lods
orb
add
out
dec
dec
fadd
mov
lock
or
stc
adc
lcall
adc
call
xor
fmull
pusha
jp
movsl
xchg
jmp
lods
loop
or
and
repz
xchg
inc
jb
jb
or
mov
ljmp
imull
and
jl
pop
cmc
imul
xchg
inc
adc
mov
mov
gs
jno
iret
aam
mov
xor
int3
test
sbb
ret
lret
out
xor
rol
push
mov
mov
adc
jb
shr
ror
sub
fsts
dec
lret
out
cmpsl
adc
sahf
push
xchg
jmp
xchg
cmp
imul
daa
or
daa
push
adc
jmp
cmp
mov
jno
mov
fs
sahf
add
xchg
or
inc
shl
mov
fsubrl
mov
fs
dec
imul
pushf
xchg
enter
xor
popl
pop
add
jno
aam
out
outsb
pop
aam
outsb
sbb
sub
xchg
mov
dec
mov
xor
pop
cmp
pop
xchg
jecxz
fiaddl
shll
cmpsl
repnz
adc
fsubl
adc
shlb
ficomps
mov
pop
out
add
lahf
imul
mov
xor
popl
xlat
hlt
push
sahf
mov
sbb
outsl
push
js
outsb
cld
sbbb
das
enter
scas
incl
pushf
shll
test
jmp
loop
pop
cmp
out
sahf
sbb
jl
push
xchg
aad
adc
scas
cmpsl
dec
jae
mov
ret
cwtl
push
repz
sahf
and
add
xchg
pop
je
popa
xor
cmc
cmp
jne
fimull
bound
mov
pop
movsl
jge
mov
dec
bound
lods
out
sub
pushf
fisttps
pop
pop
and
test
push
inc
inc
xlat
sub
popl
out
and
stc
add
xchg
fsubl
push
xor
pusha
in
inc
pop
mov
or
mov
cwtl
dec
jae
loope
out
test
icebp
or
sbb
in
hlt
lahf
insl
mov
mov
add
jg
mov
push
rcrb
hlt
jb
jae
test
cmc
lock
adc
ror
ret
pushf
jg
out
mov
jns
and
pop
cld
cmp
dec
repz
test
push
xor
fnstcw
les
pop
sar
into
cwtl
lret
or
inc
imul
push
ret
aam
sahf
push
lds
scas
sbb
cmpsb
imul
icebp
lods
into
jle
add
mov
sub
push
fwait
mov
add
jne
adc
lds
popf
ljmp
stos
xchg
lods
mov
push
pop
mov
es
pop
repnz
cmpsl
mov
inc
sbb
and
lahf
inc
xchg
outsl
into
sbb
jnp
loopne
into
lods
inc
xchg
mov
xor
mov
fcomi
mov
cmp
mov
mov
rcrb
cltd
mov
xlat
xlat
je
mov
pop
fistl
mov
movsb
lods
pop
xchg
lods
mov
xchg
call
in
or
cmp
into
or
dec
and
inc
enter
pop
mov
testl
getsec
enter
outsl
push
mov
mov
ss
xor
cmp
sub
mov
test
push
das
rcll
cmp
xchg
push
mov
pop
pop
jmp
mov
test
fnstsw
cmp
cmpsb
mov
aaa
add
jg
xchg
insl
roll
aas
sub
and
or
and
jne
rol
jl
imul
cmp
es
mov
mov
jmp
push
bound
or
outsl
loop
pop
inc
cmpsb
mov
inc
out
sbb
loop
mov
notb
mov
or
cmp
adc
xor
loope
loopne
in
adc
jmp
aaa
inc
out
test
mov
mov
fs
inc
push
and
fwait
xchg
mov
or
insl
pop
dec
and
cmc
jbe
xor
sbb
sub
repnz
jmp
cmp
aaa
pop
push
pop
sub
nop
jno
rclb
ror
xchg
ret
scas
push
fsts
mov
inc
and
int3
inc
adc
ror
pop
outsl
mov
iret
fcoms
mov
adc
pop
test
lods
fsubrl
and
dec
movb
add
ret
xlat
mov
and
jle
scas
mov
int
sbb
inc
aaa
and
fimull
xchg
cmp
lds
pop
es
insl
jp
mov
lds
lret
mov
flds
outsb
inc
xchg
nop
bnd
dec
inc
dec
fxch
inc
in
jo
insb
stos
shlb
mov
or
daa
call
imul
das
push
sub
movsb
inc
xor
sub
sbb
lock
in
in
mov
pop
dec
outsl
outsl
stc
push
inc
mov
out
sbb
jne
push
jo
pop
movsb
mov
dec
mov
xlat
sbb
push
sar
pop
icebp
out
adc
fsubrl
pop
nop
mov
and
xor
test
dec
rcrb
fsubrs
int3
inc
push
xor
test
sub
sbb
addr16
jmp
hlt
or
fsts
cmp
lods
dec
int
or
pop
push
lock
xchg
ja
repnz
fistl
in
xlat
and
dec
int
mov
cmp
in
push
sub
xchg
pushf
sub
dec
das
mov
mov
sbb
insb
or
loop
fcomps
out
xchg
nop
out
aaa
outsl
jno
in
jno
fldt
test
xchg
das
lds
fdivl
test
xlat
push
sub
jne
mov
xchg
pop
subb
outsb
inc
lock
movsb
or
sti
in
fucomi
lock
push
xor
pop
cmpb
lds
fmuls
mov
inc
jne
mov
sbb
sbb
scas
rolb
out
outsb
cmp
dec
lcall
cmp
scas
sub
jns
xchg
mov
lea
push
add
mov
jb
jb
push
cld
ja
adc
test
xchg
and
out
dec
pop
push
add
pop
mov
xlat
mov
test
es
int
mov
and
mov
ficoml
in
stc
xor
shl
frndint
je
ficoml
and
xchg
iret
or
or
icebp
inc
add
stos
sar
mull
std
jp
sbb
fbld
inc
xor
sub
rcll
inc
sub
sub
dec
dec
cmpl
lcall
xor
mov
lods
loop
cli
inc
idivb
jp
sti
mov
leave
adc
das
sub
dec
and
pop
inc
lods
xchg
test
jg
push
clc
jo
outsb
mov
dec
test
loop
lea
and
mov
movl
xchg
sbb
sbb
hlt
xchg
clc
adc
cmp
or
mov
sub
xor
mov
push
lret
sti
idivb
mulb
or
jno
aaa
dec
xchg
pop
mov
push
inc
fnstcw
pop
in
inc
mov
fs
pop
popa
rorl
scas
fnstsw
xchg
jno
xchg
sub
xor
and
in
sbbl
and
jnp
pop
inc
adc
pop
data16
fs
adc
add
outsb
sub
pop
jbe
and
inc
mov
cltd
push
loop
xor
imul
jno
add
outsb
and
add
icebp
and
pop
xchg
pop
adc
adcl
mov
sub
mov
push
sarb
inc
push
lods
cltd
push
sub
dec
xchg
push
arpl
int
push
bound
testb
dec
andb
inc
or
inc
idivl
mov
xor
push
popf
mov
jecxz
pop
dec
sub
loopne
rclb
pop
paddusb
sarb
mov
add
call
data16
lds
test
cli
pop
add
int3
mov
lds
add
or
lret
lock
sbb
cltd
int3
movsl
cmp
into
lcall
cmpsb
jo
sub
mov
mov
rorb
es
cwtl
mov
jnp
mov
cld
xor
mov
jecxz
jnp
mov
jb
jnp
cmp
inc
jno
jl
addl
repz
loope
in
std
mov
insl
jo
mov
adc
cld
cmpsl
mov
andl
sub
sub
imul
sbb
add
test
int
adc
push
jo
es
cmp
xchg
xor
sub
jl
add
movsl
pop
adc
bound
lds
or
call
xor
jl
cmp
inc
xchg
icebp
jge
daa
mov
sbb
jl
outsl
fmul
enter
jle
push
adc
movsb
sbb
rcl
fcomps
jge
inc
int
mov
xor
in
xchg
inc
adc
mov
pusha
roll
scas
mul
push
movsl
in
out
jge
mov
insl
shrl
xor
inc
dec
jp
iret
push
mov
shlb
addl
rorl
bound
cmp
xchg
inc
clc
adc
rcll
sbb
pop
imul
and
xorb
lret
scas
mov
mul
scas
je
sbb
mov
push
sub
out
mov
in
dec
hlt
ljmp
lret
mov
jbe
push
ja
mov
inc
mov
add
lds
jl
cmpsb
leave
std
xor
int3
rorb
js
movsl
mov
adc
xor
or
add
out
mov
pop
inc
xchg
cmc
dec
lock
in
xlat
lcall
rorb
xor
mov
shlb
and
js
push
push
outsb
mov
jl
inc
or
cmp
pop
cmpl
loopne
sub
dec
mov
scas
or
and
negl
fs
cmp
pop
popa
add
cmc
ret
shrl
cmp
jo
ret
dec
pushf
loopne
movsb
insl
icebp
adc
scas
and
leave
arpl
clc
mov
adc
test
jmp
pop
std
shrl
lock
jne
mov
pusha
sahf
adc
lcall
ret
jmp
or
mov
fistl
cmp
cmp
dec
cmp
jecxz
jb
outsl
rclb
call
aam
enter
inc
stos
int
iret
adc
add
add
mov
mov
jno
or
dec
lods
mov
cltd
xchg
daa
cwtl
lock
gs
je
dec
je
fstl
dec
scas
cmp
push
push
mov
out
test
movsb
out
cmp
dec
clc
jns
mov
mov
pop
adc
sub
or
pop
into
xor
test
xchg
repz
mov
bound
dec
faddp
or
adc
out
push
push
sarb
push
test
mov
dec
sub
loop
pop
jne
and
xchg
xor
shrl
and
test
xchg
lods
inc
add
sub
mov
jno
pusha
and
push
mov
cmpsb
loop
addr16
rcrb
fsub
mov
lods
movsb
push
aaa
lahf
lahf
clc
sub
sti
scas
xchg
jnp
xchg
mov
rcl
ret
ret
xlat
sbb
data16
bound
adc
add
adc
and
cmp
jle
imul
stos
jecxz
imul
push
inc
aaa
push
std
mov
push
rorb
xor
ss
fistpll
sahf
ja
das
xchg
ret
out
and
jns
vpmaxub
jecxz
pop
orb
push
dec
jb
add
sbbb
sti
add
push
mov
and
cld
mov
mov
xor
daa
jnp
sub
popa
sar
xchg
arpl
aas
lcall
jbe
xchg
mov
and
lods
fstps
push
sti
mov
sub
lods
lock
add
jmp
mov
subb
sahf
jmp
pusha
dec
clc
jnp
fwait
push
push
insl
jo
mov
out
lahf
jle
xor
lret
or
sbbl
or
inc
xchg
mov
pop
scas
adc
in
stc
add
cmp
mov
and
adc
mov
andb
sbbl
cmp
insb
out
mov
jle
into
sbbb
sbb
jecxz
idivb
test
pop
negl
stos
lcall
xor
shlb
inc
mov
mov
test
sbb
fs
in
mov
push
fnstenv
mov
xchg
add
jecxz
mov
pop
push
lret
lret
sub
mov
and
cmpsl
xchg
out
and
jo
inc
pop
stos
sti
inc
negb
and
push
sub
mov
ja
mov
xor
and
push
fs
jp
lods
lds
mov
int
cmc
add
repnz
je
gs
adc
test
jno
test
loopne
std
insb
cmp
pop
dec
lahf
in
bound
clc
jge
push
adc
aas
loop
mov
cld
fisubrs
js
sbb
fldcw
adc
movsb
or
or
sub
call
shll
jp
push
hlt
aad
fldl
adc
inc
cmp
cmp
xor
cmp
mov
xchg
insl
loopne
mov
pop
adc
xchg
shlb
enter
in
cmpsl
xchg
dec
lea
rcrb
jns
jecxz
and
shlb
cld
mov
pop
xchg
call
adc
jg
imul
push
fcomip
xor
jb
inc
add
stc
jae
inc
xor
sbb
inc
shll
nop
sub
cli
sub
sbb
scas
mov
je
leave
loopne
or
cmp
or
ss
jl
mov
dec
sbb
or
and
inc
jge
sub
xor
fisttps
inc
test
mov
das
mov
lcall
mov
sub
sub
push
hlt
pushl
inc
ret
xchg
loopne
jge
jmp
ss
sbb
pushf
mov
rclb
mov
jecxz
loopne
mov
dec
xchg
add
push
insl
jp
out
lcall
divb
bnd
fcmovb
cs
repnz
shr
orl
ds
mov
jmp
rorl
sbbb
in
gs
cli
test
and
add
adcl
adc
sub
into
ret
jne
mov
inc
push
push
push
jb
incb
dec
and
inc
leave
mov
mov
cmp
test
mov
mov
or
dec
lret
add
adc
stos
int3
and
test
stos
rorl
push
dec
lea
popa
mov
btc
dec
jmp
je
pop
not
int3
int3
and
nop
sub
pop
mov
enter
xchg
mov
mov
push
or
adc
shll
sub
inc
gs
iret
inc
dec
fisttps
sub
fdivs
or
push
ficoms
sub
scas
out
cmpsl
dec
into
movsl
mov
imul
add
aas
mov
or
pop
sti
sub
or
fwait
cmp
outsb
dec
stc
cmp
jae
xor
test
pushf
leave
cmp
ret
vmaxps
adc
push
test
shr
jl
jno
sub
jle
aam
call
xor
aad
cmpsb
fldcw
fimuls
mov
popa
push
lock
scas
dec
and
insl
lds
mov
dec
xchg
sbb
je
fcoms
mov
sbb
xchg
jno
or
clc
jp
cmp
loop
cli
mov
mov
xor
je
ds
sbb
jl
dec
test
mov
std
sbbb
adc
loop
and
inc
int
cmp
inc
push
pop
push
test
mov
mov
imul
lds
cmp
loopne
inc
xor
inc
push
mov
xchg
mov
fmul
stc
inc
nop
lds
aad
add
lock
sti
clc
dec
cmp
xchg
leave
mov
xchg
mov
data16
imul
scas
nop
aad
cmp
mov
stos
dec
cmp
fwait
jmp
rorb
mov
adc
in
pop
xchg
lret
jmp
push
pop
cmpsl
clc
add
in
push
aam
cmp
pop
pop
call
xor
add
xorl
testl
add
dec
or
jbe
int
cltd
xor
inc
mov
insl
or
scas
rorl
test
mov
jns
jge
xor
cld
mov
jb
movsl
inc
jmp
and
lret
inc
jbe
pop
fbstp
add
mov
pop
xorl
pop
push
sub
inc
adc
push
mov
mov
into
jo
scas
cld
addb
mov
in
inc
adc
sub
or
scas
adc
es
mov
aad
into
mov
stos
std
dec
ret
cs
std
push
cmp
mov
shll
mov
pop
pusha
and
daa
mov
adc
or
push
lcall
int3
scas
xchg
and
jne
outsb
jne
xor
imul
xchg
ja
xchg
cmp
mov
int3
xlat
and
xchg
dec
rorb
lds
rclb
sbb
mov
xchg
fwait
arpl
int3
fidivl
pop
decl
jle
test
mov
inc
add
dec
popa
dec
inc
push
adc
mov
mov
fdivrl
movsb
mov
cmpsl
jecxz
xor
xor
xchg
push
repnz
pop
cmpsb
dec
fildl
movsl
and
out
inc
xor
aaa
stc
imul
call
mov
mov
js
pushf
jbe
jg
pop
adc
mov
cmp
mov
add
jb
lods
int
gs
movsl
icebp
cltd
xchg
cld
fcomps
jmp
std
push
out
testl
fisubl
sub
cltd
jle
push
call
sbb
push
sahf
stos
loop
int3
neg
leave
push
loopne
add
and
cli
dec
cmpb
sub
sub
jbe
xchg
or
test
and
mov
loopne
adc
scas
stc
ljmp
repnz
orb
mov
jbe
mov
push
iret
inc
popa
pop
xor
pusha
orps
out
sbb
sbb
jbe
jne
cmp
push
and
xchg
xchg
xor
dec
push
sbb
push
std
dec
sub
pop
push
imul
adc
inc
adc
ret
mulb
rclb
push
aaa
mov
xchg
mov
popf
repnz
movsb
sahf
and
iret
out
popf
sub
or
mov
jne
cwtl
xchg
xchg
mov
pop
push
sar
sub
xchg
ret
test
arpl
popf
adc
mov
pushf
jmp
sub
push
jb
xor
adc
dec
sahf
pop
pop
fwait
repz
fimull
cmp
pop
addb
jmp
mov
outsb
jl
fwait
pusha
or
push
add
nop
cmp
mov
adc
sarl
mov
int
xchg
and
add
dec
cmpb
and
test
lret
repnz
xor
clc
jbe
xlat
pop
add
lret
pop
cmp
and
push
aas
push
hlt
xchg
mov
cli
fnstsw
test
mov
xchg
in
leave
push
adc
mov
imul
in
push
imul
sub
fidivs
pop
fwait
cmp
fs
dec
add
dec
pop
subl
pop
das
mov
or
mov
jo
or
inc
cmpsl
in
jge
pop
sbb
sbb
inc
scas
stos
stc
loopne
mul
mov
bound
or
inc
dec
roll
es
loop
adc
cmp
cmp
pop
and
and
cmp
in
xor
fidivrl
fdivrs
repnz
leave
enter
sub
aam
cmpsl
adc
iret
daa
enter
sbb
mov
movsb
jae
dec
popa
mov
nop
pop
popf
fcomps
inc
dec
loopne,pn
and
mov
inc
pop
sbb
sub
xchg
outsb
jge
mov
dec
lds
push
mov
push
jbe
movsl
pop
push
mov
dec
jbe
jne
adc
jns
inc
dec
outsb
mov
mov
movsl
pop
and
fidivrl
stos
test
stos
test
scas
inc
out
fstps
mov
mov
cmc
es
push
sbb
jb
adc
sub
push
xchg
mov
fnstenv
mov
sbb
movsb
xlat
dec
lods
push
inc
aas
loope
mov
xor
sub
js
sub
pop
pop
push
ud2
inc
cmp
sub
or
pop
add
rcl
adc
pop
pop
jle
ljmp
fsubl
iret
push
mov
mov
jbe
das
inc
ds
push
aaa
jne
rorb
dec
cmc
add
jl
std
fdivl
sub
inc
mov
push
pop
outsb
pop
mov
cmpsb
repz
mov
jp
xchg
add
outsl
imul
add
in
jns
scas
out
iret
nop
sub
pop
push
mov
pop
sahf
mov
aas
sbb
pop
inc
xor
je
pop
je
and
cld
sbbl
stos
insl
cld
popl
ja
mov
mov
cld
fs
mov
xchg
dec
xchg
mov
mov
out
ds
cmp
jne
std
mov
jb
gs
xchg
jge
mov
dec
lcall
hlt
int
mov
sbb
cmpsb
lret
and
xlat
inc
mov
push
jb
lret
or
xchg
jnp
xor
xchg
repnz
lahf
clc
test
stos
xor
scas
push
xor
and
push
pushf
cmc
idiv
bswap
fiaddl
cmpsl
int
lea
sbb
or
arpl
push
mov
test
out
daa
sti
fs
fcoml
sub
sbb
inc
jb
mov
add
js
pop
lods
adc
mov
fcoms
jp
lret
scas
sbb
cltd
dec
ja
sti
sahf
les
inc
jnp
ja
jne
mov
mov
std
sbb
ds
loope
test
mov
xchg
xchg
add
in
inc
addr16
xchg
daa
aam
inc
fs
jl
cld
jno
jg
into
stos
movsb
dec
stos
shl
clc
decl
leave
mov
sub
jo
stos
inc
mov
ljmp
mov
and
insb
xorl
inc
or
lea
ror
xor
xor
testl
jp
bound
and
in
in
adc
int
lcall
dec
test
sub
xchg
and
out
scas
xor
mov
in
pop
dec
jns
rcl
fnstenv
daa
mov
pop
es
adc
testb
stos
dec
xor
lret
fldl
xor
rolb
mov
pop
pop
pop
loopne
out
dec
imul
lods
dec
out
add
movsl
call
adc
dec
push
pop
popa
lods
add
pushf
out
jg
test
movsl
inc
xchg
aad
mov
mov
inc
add
cmp
mov
push
ss
jl
sub
hlt
mov
cltd
xchg
sbb
out
mov
sub
movsb
xchg
mov
fstps
cmpsb
mov
test
test
repz
or
push
ss
inc
xor
dec
and
push
sahf
pushf
addr16
xchg
data16
cmp
call
xchg
pop
fwait
stc
sub
repz
cmp
xchg
pushf
popf
arpl
hlt
push
sahf
cmp
rcll
add
push
dec
or
arpl
inc
sub
popa
rcrb
test
mov
fwait
mov
int
sbb
mov
dec
bound
lret
pop
sti
movsl
js
scas
je
mov
loopne,pn
mov
mov
imul
pop
lret
sti
pop
js
movsb
or
jp
leave
dec
in
jge
jecxz
inc
mov
add
std
iret
push
pusha
fidivrl
dec
mov
pop
sbbl
inc
aas
push
ud0
xchg
mov
in
les
outsb
jae
mov
fs
push
lret
pop
sbb
adc
add
cmp
xchg
cmp
cmp
notl
xor
js
lret
lret
mov
scas
lods
xchg
cmp
mov
cmpsl
dec
xlat
fwait
dec
mov
int3
xor
fs
xchg
aaa
in
arpl
mov
cmp
or
hlt
imul
call
sbb
sti
xor
or
shr
std
xchg
adc
sbb
add
pop
lret
rol
cmp
pusha
in
or
fs
dec
fs
add
rorl
or
test
adc
sub
xchg
cmp
cwtl
stc
aam
push
lock
es
inc
imul
adc
int3
cltd
sbb
shl
mov
movl
outsb
xchg
mov
loopne
inc
adc
filds
pop
sbb
mov
jae
scas
inc
loope
cmp
xor
rcr
test
adc
bnd
movsb
ret
mov
push
lock
outsb
push
sti
stos
xorb
sub
sbb
push
sbbl
pushf
push
bswap
mov
sbb
cmc
push
mov
call
loop
ds
lods
daa
adcl
leave
inc
mov
and
nop
popa
stos
add
jae
cmp
fisttpll
das
insb
lock
inc
xchg
lcall
es
sbb
adcb
cmp
nop
mov
fldcw
cmp
cmpsb
mov
das
mov
addb
call
rcr
sbbb
xchg
addl
lock
sar
xchg
call
test
mov
out
out
cli
pusha
jo
inc
cmp
xor
or
cmc
movsl
movsl
cltd
fsubrp
je
pushf
push
sarl
mov
arpl
dec
push
pop
mov
inc
pop
dec
test
xchg
mov
lds
mov
into
jne
inc
inc
movsl
dec
and
lea
mov
add
and
enter
add
cs
nop
xchg
lds
fwait
xchg
sub
ret
pop
addr16
jbe
mov
mov
in
aad
divps
cmp
mov
mov
cmp
and
xor
in
mov
push
ja
test
or
imul
mov
insb
mov
andl
jmp
out
jnp
dec
out
insl
out
movswl
sbb
mov
inc
and
xchg
aam
ret
inc
test
adc
shl
test
fstps
pop
mov
int3
jl
stos
sub
mov
push
cwtl
xor
pcmpeqd
pop
xor
icebp
xor
fisttpl
sbb
sub
sbb
subl
fcomp
jno
in
mov
adc
dec
fmuls
mov
add
jae
fsubs
lods
aas
inc
cmpl
out
fidivrs
icebp
rorl
xor
mov
sahf
mov
popf
nop
jge
add
or
sub
loope
inc
push
in
jbe
cltd
cld
ss
lret
sar
lahf
and
insb
cmpsb
movsb
jg
outsb
std
and
and
add
es
cmp
stc
push
fcmovnu
sar
cmpb
das
cltd
jno
cld
xor
pop
imul
out
out
out
and
insb
aas
icebp
daa
cli
out
cld
adc
lock
shrb
ret
adc
mov
cmp
fisttpl
gs
clc
sbb
and
int
clc
iret
lret
insl
xchg
imul
cmpsl
je
xchg
lcall
jns
nop
fldenv
cltd
add
leave
xor
les
sub
loopne
push
pusha
and
and
xor
outsl
ds
enter
push
dec
rcrb
mull
pop
dec
fmull
lahf
mov
mov
dec
jno
adc
data16
mov
test
mov
divb
ret
aas
push
ror
movsb
lahf
adcl
test
out
mov
mov
neg
inc
ror
daa
fcmovnbe
fisttpl
and
bnd
jmp
popl
push
or
lcall
jl
push
fs
mov
popf
dec
mov
sub
jb
inc
cmpsl
call
std
loopne
fbstp
out
mov
loop
cld
in
cwtl
insb
clc
jge
push
add
mov
sbb
lret
inc
movsl
clc
test
xor
cmp
inc
xorl
lods
dec
into
cs
sbb
sbb
loope
or
daa
push
repz
inc
push
cmpsl
xchg
data16
insb
adc
pop
inc
add
pop
mov
push
fwait
mov
cltd
test
scas
push
and
xchg
outsl
push
call
repz
rcll
fdivl
xor
sub
in
jecxz
cmp
inc
jb
and
mov
pop
jns
push
cmpsb
dec
push
jmp
mov
icebp
hlt
imul
jmp
sub
sub
pop
add
sub
int3
push
aad
leave
out
sub
je,pt
mov
in
and
sahf
ret
and
js
and
adc
mov
in
or
loope
sahf
out
stc
dec
fs
xchg
or
pusha
insl
cmpsl
aas
jbe
gs
add
pop
push
out
orl
enter
dec
jge
nop
jmp
inc
add
imul
int3
test
jge
imulb
sbb
cmp
scas
repz
clc
lods
fadds
dec
mov
or
pop
imul
and
imul
das
adc
xchg
addr16
lock
cli
sub
mov
inc
cmc
mov
xchg
jle
sub
sub
inc
int3
sub
lret
ret
jo
pop
out
sub
adc
jmp
shrb
subl
mov
cwtl
mov
pop
pop
cmp
jnp
push
insb
sbb
pop
dec
push
in
fimull
mov
std
loop
orb
add
sbb
dec
addr16
jae
fadd
push
leave
push
andl
jge
adc
pop
sbb
and
loop
xor
ljmp
mov
adc
pop
mov
cmpsb
push
ljmp
jbe
int
sbb
xchg
cli
daa
dec
jns
nop
aam
xor
sti
cld
popa
mov
or
mov
add
aad
push
mov
inc
popf
sub
xchg
popa
jl
filds
sbb
in
add
dec
adc
xchg
sub
xor
jmp
push
pop
clc
jge
xchg
and
mov
loope
mov
sub
idivl
imul
mov
fmuls
ret
mov
outsl
lods
test
sub
insl
mov
frstor
dec
leave
mov
pop
xchg
sarl
adcl
or
hlt
xchg
push
test
and
out
push
insl
cmc
repz
leave
icebp
pushf
push
xor
cld
and
loope
sub
into
cmp
or
xor
pop
out
lods
mov
lret
and
popa
sahf
and
jmp
lret
or
adc
orl
fst
sahf
mov
subb
mov
aaa
dec
cltd
sbb
mov
mov
inc
xchg
mull
pop
fwait
lahf
scas
movsb
fdivrl
sbb
adc
dec
loop
shl
sbb
inc
jno
aas
shrb
mov
test
fcomip
mov
lahf
inc
inc
cmp
mov
leave
lcall
xlat
sub
adc
cmp
nop
push
lcall
in
jae
xchg
clc
push
sbb
jae
adc
adc
inc
pushf
inc
mov
sbb
mov
adc
mov
mov
shlb
filds
sub
and
mov
movsb
mov
rcrb
push
leave
pop
test
mov
ds
jp
xchg
addb
adc
sub
push
repz
adc
fistpl
test
les
mov
ja
fnstenv
inc
leave
sub
icebp
jmp
ret
jmp
dec
shr
push
pop
and
cli
mov
mov
aam
lea
testb
push
lds
int3
cmp
push
ja
inc
adc
loop
int3
enter
xchg
cld
add
or
repz
xor
push
jp
cld
call
into
cmp
push
jecxz
mov
andb
clc
xorl
pop
push
dec
ret
std
jns
mov
int3
leave
das
xchg
hlt
xchg
mov
lcall
mov
mov
jg
shll
cmp
jg
push
in
sub
jae
jb
out
sub
inc
mov
mov
call
xchg
xchg
in
mov
test
lds
iret
dec
adc
hlt
pop
imul
mov
arpl
les
out
lcall
imull
sub
and
outsb
imul
jnp
push
sbb
sub
scas
gs
sti
js
or
mov
ret
lds
or
mov
ds
mov
movsb
mov
imulb
mov
adc
or
adc
mov
aam
xchg
sbb
sub
push
ljmp
lret
jp
insb
lahf
pop
mov
cmp
lahf
xchg
xchg
xchg
or
mov
test
push
aaa
jbe
jo
and
adc
push
scas
cmp
push
jl
mov
inc
rolb
cmc
insb
test
dec
loope
dec
insl
mov
hlt
adc
test
fs
lods
dec
or
jg
stos
mov
jge
sub
lods
ret
jbe
inc
inc
fidivl
test
sub
cmp
lret
pop
jo
inc
es
std
mov
lock
stos
mov
mov
leave
fwait
push
and
fidivs
sub
adc
sbb
imul
imul
inc
adc
push
movsb
cmp
insb
or
shll
lock
movsl
rcrl
push
push
mov
pop
sbb
mov
add
in
push
aas
popa
add
cmp
scas
call
mov
out
enter
cmp
and
dec
leave
xchg
andl
repz
movsl
movsl
dec
fistl
inc
popa
mov
sub
jne
setge
icebp
xor
or
cmp
adc
pop
rolb
repnz
je
sti
int
nop
sub
subl
test
push
dec
loop
pop
mov
repz
ljmp
dec
cld
push
mov
pushf
inc
push
jnp
fstpl
pop
push
lods
pop
xor
enter
roll
test
and
fdivr
mov
sahf
fsubr
repz
push
popa
inc
pop
lcall
dec
lods
or
or
pusha
icebp
pop
sti
adc
push
dec
xor
xchg
stos
or
in
jno
sub
inc
jbe
sbb
negb
inc
adc
xor
cmp
push
pop
iret
inc
clc
sahf
fxam
insb
mov
inc
pop
inc
push
inc
mov
sub
or
insb
jp
fdivrs
fdiv
pusha
sti
jno
and
nop
cmp
fisttpll
adcl
push
dec
nop
mov
or
inc
insb
sub
push
jmp
pop
cmp
sahf
loope
inc
aaa
lods
das
cmp
cmp
add
inc
push
sbb
mov
cmp
sti
ljmp
jp
hlt
imul
cmp
mov
loop
enter
stos
inc
je
cltd
sbb
popa
mov
push
jge
das
fmulp
xchg
loopne
insb
outsl
mov
push
cmp
mov
or
js
add
rorb
popa
inc
push
clc
cmp
jecxz
xchg
subl
iret
pushf
push
cs
aam
xor
test
idivb
orl
insl
out
lret
stos
xchg
dec
jbe
shrl
fs
stc
movsb
cmp
jmp
adc
lock
cmp
repz
sub
imul
mov
push
lcall
enter
mov
push
pop
jp
sahf
mov
pop
test
lods
jecxz
aas
jle
inc
push
arpl
movsb
repnz
xchg
xor
lods
jge
mov
test
testb
movsl
scas
stos
pop
outsb
mov
in
cmp
dec
mov
nop
push
xchg
sbbb
dec
je
push
push
push
rcr
dec
repnz
xor
andb
lret
mov
mov
jb
out
push
mov
dec
out
xchg
mov
in
xor
cmp
lcall
and
jno
incb
xchg
ffree
ss
jne
and
in
add
scas
out
sarl
and
and
insl
xchg
test
ret
lea
mov
xchg
jne
repz
sbb
cmpsl
ss
pop
push
mov
mov
mov
test
mov
mov
cltd
sbb
cmp
xor
shrl
mov
sbb
push
dec
inc
addb
mov
cltd
push
and
bnd
jo
idivl
fwait
xchg
ja
fucomi
cmp
push
icebp
sti
mov
rorl
and
pop
xchg
xor
in
incl
dec
pop
add
mov
leave
mov
xor
lds
faddl
in
add
rolb
lods
lret
aam
cmp
ja
in
xlat
outsb
xchg
cmp
mov
xchg
test
jge
rorl
xor
jl
xchg
mov
imul
cltd
xchg
out
sub
mov
adc
nop
mov
push
adc
leave
pop
jae
mov
push
test
in
rorl
fadd
xor
pushf
adc
add
sbb
ljmp
repz
fnstcw
xor
mov
mov
loop
scas
std
adc
push
xor
clc
clc
test
jp
dec
cwtl
adc
mov
in
sahf
inc
lahf
pop
dec
or
push
or
pop
cmp
cmp
sbb
pop
adc
lds
mov
in
jo
test
add
sub
movsl
outsl
outsb
push
das
shll
and
imul
and
sub
inc
adc
nop
ret
xchg
dec
fsubp
insl
aam
and
ss
fidivrs
jne
daa
lret
cmp
js
jb
and
gs
jo
mov
aaa
sub
mov
adc
in
mov
push
and
stos
sub
or
fwait
push
xor
pop
jg
arpl
mov
xor
lock
loop
and
or
ja
push
andl
data16
hlt
jo
outsl
mov
fs
test
xchg
imul
or
push
out
mov
jp
mov
dec
jl
sbb
cmpsb
xchg
xor
jns
idivl
stos
adc
mov
shl
xchg
xchg
or
fwait
in
imul
xchg
scas
ret
idivl
into
test
mull
stos
pop
cs
jg
sbb
xor
movsb
mov
gs
push
inc
std
push
test
cs
push
arpl
push
icebp
pop
nop
and
out
push
adc
pusha
push
pop
add
dec
mov
cmpsl
jmp
jns
inc
add
mov
aas
dec
pop
pop
xor
out
mov
andb
cwtl
push
repnz
inc
mov
inc
data16
push
and
jge
je
xchg
in
xchg
inc
scas
jl
fists
pop
lahf
fsubrs
sbb
mov
or
adc
sbb
xlat
jns
pushf
mov
jge
sbb
pusha
jge
test
cs
fsubrl
mov
arpl
pop
lret
or
cmp
std
and
jge
ss
clc
and
xchg
cmp
dec
jmp
nop
or
push
dec
jge
arpl
ret
push
les
es
add
pop
lcall
js
fs
jbe
mov
cwtl
insl
repnz
sbb
fs
sahf
sahf
cmp
scas
pushf
popa
inc
pop
adc
lods
xchg
lcall
xlat
into
pop
mov
inc
ficompl
lds
loope
andb
xor
shrb
xchg
cmpsb
stc
das
jnp
repz
add
rorb
cmpb
mov
pop
data16
in
rcrl
in
or
sbb
and
mov
xor
sub
les
mov
mov
pop
mov
pop
lcall
adc
mov
and
stos
or
dec
test
xor
ss
xchg
pop
in
add
push
jae
inc
jb
dec
aaa
mov
jl
lock
and
xor
fmul
ret
es
mov
out
pusha
lret
nop
jnp
cmp
insb
stos
mov
cwtl
sbb
ss
push
sbb
dec
leave
xor
xlat
std
xchg
sbb
push
pop
fs
lret
insl
test
push
sahf
mov
xchg
inc
inc
sub
sahf
hlt
ret
pop
xchg
mov
sub
inc
jp
inc
fstl
imul
jg
dec
add
ret
shlb
push
clc
xorl
cli
pushf
pop
mov
or
js
pop
and
pop
jne
lret
xor
aam
or
lds
cwtl
add
and
int3
xchg
adc
mov
cli
cmp
loope
test
lcall
mov
cmpsb
jmp
jb
cltd
jo
imulb
adcb
dec
shrb
inc
cmp
stos
push
or
jne
cmp
nop
loopne
pop
cmpsb
dec
xor
inc
imul
cmp
xor
add
lret
adc
adc
push
stos
aas
iret
jg
shrb
cwtl
nop
push
pop
rcl
xchg
dec
xchg
push
lret
aad
jmp
adcl
and
scas
in
push
inc
push
dec
inc
mov
test
jle
pop
cmpsl
mov
cmpsb
mov
shlb
scas
sti
inc
icebp
sahf
pop
imul
dec
subl
gs
mov
imul
jmp
adc
mov
les
mov
bound
mov
or
leave
lds
stos
xchg
int
cmp
dec
add
push
pop
int3
jp
daa
dec
adc
xor
stos
push
pop
push
jecxz
nop
mov
lods
jp
mov
jnp
or
bound
repnz
xchg
push
sub
xor
cmp
jg
mov
add
pop
or
cld
dec
inc
scas
xchg
scas
shrl
imul
pusha
push
ja
push
dec
jmp
pop
mov
lods
fisubl
ljmp
xchg
mov
maskmovq
testl
add
sbb
sub
sbb
ss
std
out
pop
cs
mov
jae
sbb
in
sbb
jge
xchg
popf
mov
shrl
inc
insl
call
out
push
jno
xchg
adc
mov
jmp
ds
xchg
cmp
sbb
jb
cmc
cwtl
pop
test
push
scas
add
dec
sub
cmp
sbb
aad
repnz
lret
test
je
push
cmp
inc
test
insb
adc
mov
out
loope
cmp
or
sbb
sarb
pop
nop
gs
mov
outsl
mov
pusha
mov
addl
xchg
xor
fmul
adc
test
repnz
cmp
pop
inc
mov
sub
push
aad
cmp
mov
lea
mov
sbb
push
xor
cli
mov
push
xchg
xlat
ljmp
mov
pop
rclb
fwait
dec
sub
jb
xchg
int
xchg
or
inc
push
imul
mov
aas
mov
sbb
lea
aas
fadd
xchg
add
loope
loopne
jne
movsb
jl
add
enter
scas
ret
mov
loope
pop
mov
jnp
clc
dec
mov
pop
push
adcb
mov
cli
arpl
mov
pop
sbb
and
xchg
push
dec
mov
sti
lock
xchg
adc
pop
cmpb
pop
cmp
mov
adc
sub
das
in
or
inc
xor
imul
push
arpl
dec
xor
mov
xchg
loope
je
and
sbb
push
pop
add
sbb
adc
dec
mov
popf
in
data16
and
out
fwait
stc
push
mov
fnstsw
fiadds
testl
cmc
and
imul
mov
hlt
les
push
sbb
mov
sarb
nop
cld
mov
jo
cmp
icebp
lahf
cmp
sub
add
jne
mov
pop
mov
adc
lahf
shlb
hlt
pop
dec
mov
pop
in
xor
loop
fnstsw
push
js
lods
xchg
lods
add
adc
repnz
loop
daa
push
mov
loopne
mov
mov
push
inc
add
dec
fwait
mov
push
ss
aam
das
daa
and
cwtl
sti
mov
insl
dec
inc
mov
fsubrs
aad
filds
mov
lds
pop
cmp
and
push
cmc
inc
sbb
call
inc
sbb
out
ret
pop
fwait
out
scas
out
sub
pusha
mov
loop
rcll
push
mov
mov
faddl
inc
mov
adc
aas
or
sub
add
dec
mov
out
add
push
push
int
aad
cmp
and
push
ds
sub
sub
adc
and
mov
loopne
or
ds
pop
aam
cli
arpl
push
ss
lcall
outsl
pop
cli
rcrl
cmpsl
sbb
jecxz
inc
push
xchg
scas
repz
dec
cmp
out
loopne
sbb
xor
or
add
push
sarb
clc
jl
jae
mov
dec
dec
jg
adc
inc
das
jns
iret
movd
sbb
adc
push
cmp
es
adc
push
cwtl
add
iret
hlt
fidivl
xchg
sbb
jbe
add
ja
add
les
cmp
call
or
or
push
adc
aaa
je
sub
sarb
iret
cwtl
adcb
ds
rcr
xchg
push
loopne
movsl
pop
imul
test
sti
aad
test
out
mov
lds
repnz
xor
shll
int
fidivs
pop
aas
fistps
mov
adc
gs
mov
dec
negl
adc
inc
xchg
sub
or
aas
push
ja
mov
and
loop
in
or
dec
sub
mov
xlat
inc
sbb
adc
inc
int3
ds
data16
in
mov
fdivrs
xorb
sub
push
sub
xor
data16
push
ljmp
popf
fbld
and
lods
xor
xchg
mov
add
subb
pop
jmp
cmp
jns
mov
adc
dec
add
xlat
push
add
pop
jo
jmp
int3
fdivl
dec
sub
sub
or
mov
dec
rolb
and
test
insb
xchg
mov
lods
mov
lds
nop
iret
es
fs
mov
pop
adc
nop
inc
dec
dec
inc
je
loopne
push
sbb
ret
mov
scas
sub
in
xchg
inc
lods
cmpsl
dec
push
or
cwtl
xor
xor
fsubs
cmp
jmp
dec
or
fildll
mov
mov
pushf
pusha
push
or
sbb
jmp
cmp
cmpsl
lahf
mov
or
sbb
xor
mov
xchg
gs
jg
testb
call
fcomps
xchg
lret
mov
jmp
ds
xor
insl
add
jl
popa
xchg
cmp
fwait
jp
xchg
xadd
or
adc
inc
xor
std
jmp
in
mov
jbe
fwait
inc
adc
faddl
pushf
ss
sbb
loopne
pusha
jne
stos
cmp
pop
inc
das
xor
or
lret
jb
jge
xor
test
scas
jno
inc
and
push
push
mov
and
xchg
sbbl
cmp
jp
lret
arpl
add
movsb
fwait
clc
pop
push
fs
xchg
adc
inc
fsubs
test
and
das
fwait
jmp
jns
push
sbb
sar
mov
xor
xchg
xlat
pop
mov
sub
insl
sub
loop
das
cwtl
adc
test
dec
adc
imul
in
and
mov
add
lods
xchg
push
push
dec
sbb
adcb
mov
aas
repnz
mov
test
xchg
dec
push
mov
mov
addr16
xchg
arpl
popl
repnz
sbb
cmpsb
mov
inc
push
mov
fldenv
cmp
add
mov
mul
mov
pop
repz
repnz
fsubr
lret
rcl
mov
les
mov
insb
mov
or
pusha
outsb
fisubrs
sub
lock
ficompl
fisttps
add
fsubs
adc
jp
in
xchg
subl
sub
mov
cmp
stc
xor
fisttpl
fmull
and
out
pop
dec
je
mov
ljmp
sbb
enter
in
add
jo
test
dec
dec
xor
add
pop
enter
aaa
adc
sub
and
and
jno
and
and
lock
loopne
add
imul
test
shlb
test
cltd
lock
fs
gs
jge
push
inc
or
mov
xchg
sbb
inc
sbb
pop
or
inc
mov
adc
xor
mov
lret
xchg
mov
idivb
fists
and
push
jl
inc
xchg
std
idivl
iret
mov
in
shrb
sub
ljmp
cmp
adc
fisubrl
test
cmp
outsb
xor
das
popa
fxch
out
mov
adc
jl
push
jo
mov
sbb
jecxz
aaa
mov
mov
mov
sub
les
and
ret
sarl
xor
xor
call
loop
popf
lds
pusha
popf
jnp
rorb
pushf
int
dec
and
pop
cmp
fwait
bound
mov
inc
pop
inc
adc
jno
pop
jmp
mov
adc
jbe
daa
sub
mov
pop
icebp
dec
push
aad
and
dec
inc
inc
mov
cmp
lock
popa
add
int
dec
sub
ds
gs
xchg
mov
outsl
movsb
ja
sarb
into
mov
adc
rorl
xor
pop
xchg
adcb
out
test
fs
cmp
inc
mov
or
jne
in
pop
dec
divb
pop
inc
sub
sti
xchg
jb
cmp
pop
pop
cmp
cmp
call
cmpsb
sti
push
and
inc
ljmp
jmp
in
inc
add
into
fwait
movsl
mov
into
inc
out
jge
adc
mov
or
repnz
xchg
mov
and
iret
jmp
sbb
push
or
xchg
cltd
dec
jno
push
sbb
mov
xor
aas
jo
addr16
mov
std
mov
stc
jnp
dec
fdivrl
lods
outsb
pop
xorl
imul
clc
or
mov
repnz
lods
and
pop
mov
aas
std
jbe
shlb
negb
inc
ss
mov
pop
pop
mov
sub
mov
rcrb
inc
test
push
mov
xchg
dec
pop
cmp
cmp
out
add
insl
mov
fwait
mov
aam
sub
mov
pop
aam
fcom
jnp
push
sarl
filds
cmpsb
test
inc
flds
xorl
insb
push
pop
sbb
pop
dec
out
mov
jge,pt
in
or
jo
shll
sti
ffreep
mov
mov
lock
cmc
sbb
push
mov
psubd
adcb
mov
movsb
shll
in
fdivrs
push
push
roll
stc
in
stos
push
rcr
add
notb
stc
dec
push
pushf
mov
mov
sbbb
mov
roll
add
fsubl
popf
mov
pop
pop
jp
outsb
cmpsl
jne
mov
and
int3
subb
mov
adc
mov
push
pop
adc
mov
sub
xor
jl
insb
add
out
and
cmp
xor
mov
mov
add
sbb
enter
addb
pop
mov
add
cmp
jo
daa
push
in
nop
add
aad
arpl
cmp
pushf
xchg
inc
jno
xchg
mov
mov
jnp
inc
pop
xchg
in
and
mov
sahf
lods
outsb
push
call
push
lea
bound
add
popf
into
add
mov
cmpsl
outsb
stos
cmp
dec
push
fs
cmp
aas
jnp
arpl
sbb
xchg
mov
scas
push
add
sub
jno
xchg
test
push
pop
sbb
sub
cmc
subb
fnsave
cmp
inc
dec
iret
popa
in
jge
adc
inc
fsubr
lock
fcmovne
cmpsb
mov
xchg
mull
loope
jns
in
movsb
lods
cmp
xor
lods
lods
inc
xor
les
and
outsb
inc
scas
inc
cmp
aas
lea
lret
cmp
ss
popa
dec
cmp
testl
stos
or
mov
pop
dec
or
adc
add
in
mov
pop
xor
xchg
mov
mov
dec
aam
je
pushf
xor
cltd
pop
out
popf
sti
and
outsb
loop
or
in
popa
mov
lcall
pusha
lea
jne
lds
mov
jge
cld
in
adc
or
in
mov
js
dec
jmp
orl
mov
mov
push
jle
or
ja
jg
sbb
les
arpl
fstl
cld
sbb
je
add
sub
jne
mov
je
sbb
fwait
jl
xchg
clc
xchg
insb
dec
repz
arpl
sahf
inc
imul
pop
pop
xchg
popf
mov
imul
test
dec
enter
mov
ret
movsb
les
add
and
popf
mov
nop
push
mov
fistps
ret
scas
das
lahf
push
cmpsb
xchg
push
mov
mov
jmp
jle
ja
ja
mov
sbb
mov
and
sbb
push
sahf
jae
out
adc
loopne
mov
inc
jmp
push
cmp
cmp
xor
lods
out
push
movsb
shrl
push
movsb
sub
mov
inc
pusha
jp
outsb
lret
adc
cmpsb
fimuls
aad
push
pmaxsw
add
std
push
jne
xor
ss
mov
jle
sbb
int
mov
rcll
sbb
fwait
xchg
in
pop
adc
std
mov
jl
das
in
rolb
lock
inc
mov
mov
lcall
pop
dec
push
push
mov
es
stos
je
test
les
movzbl
leave
dec
push
pop
cltd
xchg
mov
add
push
aam
in
mov
cld
jl
sbb
int3
ljmp
pop
inc
jp
and
pop
inc
push
stc
xchg
push
movsl
inc
xlat
add
mov
cltd
rolb
rcl
inc
jp
add
add
mov
shlb
flds
aaa
adc
movsb
xor
xor
iret
inc
popa
out
ss
sti
push
andb
int3
aas
bound
flds
and
sub
mov
lahf
enter
push
dec
aaa
and
scas
arpl
popf
stos
loop
mov
lea
add
push
or
pop
mulps
sub
xchg
mov
scas
cmpsl
mov
xlat
and
cmovle
jmp
out
lret
mov
sbb
pop
push
addr16
aas
shrl
mov
dec
sbb
add
cli
aaa
loop
int3
repnz
xor
inc
je
push
call
pop
jo
gs
in
mov
add
fsts
and
push
or
mov
test
pushf
mov
xor
pop
xchg
add
hlt
cltd
daa
lret
sub
sahf
das
mov
mov
adc
xchg
shr
stos
cmp
mov
stc
mov
je
das
push
in
mov
pop
aas
fwait
inc
adc
mov
xlat
sahf
adc
mov
pusha
int
test
in
xchg
pop
mov
cmp
out
mov
push
out
insl
jne
daa
fwait
scas
movsl
out
add
lret
icebp
sub
jae
lahf
sbb
mov
mov
cmpsb
sub
inc
into
imul
cmp
sub
pop
imul
jae
xor
mov
mov
repz
xchg
sarb
dec
cld
popa
or
std
adc
inc
stos
into
movsl
sbb
add
cmp
xor
mov
outsb
outsl
sbb
or
xchg
lods
roll
or
aam
es
jae
insl
lahf
fldt
sti
and
into
pop
mov
andb
mov
pop
mov
pop
fstpt
inc
xchg
add
cs
cltd
push
cmp
pop
gs
dec
pop
call
shrl
loop
inc
mov
inc
jnp
mov
mov
xchg
inc
jl
push
cmp
or
pop
sub
jbe
pop
sub
mov
jmp
lock
mov
std
dec
add
aam
mov
add
inc
adc
sub
or
imull
push
jno
cli
out
sub
ja
add
jb
mov
mov
push
leave
loopne
push
fldt
imul
enter
xchg
pop
ret
mov
movb
adc
mov
dec
xor
fs
sub
add
add
sbb
jmpw
push
es
loopne
test
gs
into
jb
out
movsb
sub
push
lcall
fcomp
dec
clc
repz
shrb
lea
cli
mov
or
mov
xlat
xlat
cmpsb
xchg
jl
mov
pushf
mov
gs
adcl
mov
enter
inc
mov
addr16
jl
into
fidivrl
push
xorb
xor
dec
xchg
xorl
dec
mov
push
add
nop
fwait
jp
xor
inc
sbb
lea
sub
sbb
jmp
jecxz
xchg
out
scas
push
stos
out
cmpsl
lock
es
cmp
push
push
movsl
adc
rcll
dec
into
inc
inc
fs
mov
movsl
es
cmp
jmp
mov
inc
pop
jle
rcr
xchg
adc
ljmp
andl
mov
jle
dec
in
mov
dec
pop
jecxz
gs
sub
hlt
fidivs
push
pop
cmp
ljmp
cltd
ss
inc
sbb
aam
std
sbb
rcrl
loop
mov
stos
or
mov
scas
stos
mov
daa
mov
pop
sub
aas
jg
push
repnz
nop
push
mov
push
adc
jne
inc
push
push
test
bound
shrb
jns
or
bound
xchg
fwait
loope
cwtl
out
pushf
dec
push
test
adc
stos
jns
xchg
cs
rcrb
and
pop
scas
pushf
mov
sbb
imul
mov
mov
shr
cwtl
fstps
mov
inc
dec
inc
add
push
xor
push
add
test
mov
mov
ds
and
neg
imul
cmpsl
adc
scas
dec
push
jle
jne
outsb
subb
movsb
sbb
cs
jmp
inc
add
cmp
sub
sub
outsb
mov
mov
mov
or
ret
pop
lahf
mov
sbb
and
add
addl
mov
or
outsb
int3
sub
sub
popl
mov
jno
rorl
push
jp
adc
out
cmc
xlat
and
std
sbb
add
aad
stos
add
int
inc
inc
scas
mov
jno
int3
fildll
mov
mov
jmp
in
bound
dec
mov
and
cmc
movq
mov
mov
iret
call
ret
push
fdivrl
dec
xchg
mov
imul
mov
or
rcll
push
add
mov
jecxz
fnsave
ss
std
stos
mov
mov
jp
ret
popf
subb
push
mov
fsts
pushf
in
pop
add
push
or
ficoms
xchg
in
push
daa
sbb
add
push
rol
adc
sub
out
shlb
jne
jge
and
push
mov
inc
mov
push
and
pushf
sub
jae
xchg
lds
mov
in
mov
in
daa
xor
sub
aaa
mov
in
cmp
ljmp
mov
cmp
pop
mov
xor
mov
outsb
push
cld
mov
shlb
pop
test
bsf
mov
mov
in
pusha
mov
and
shlb
dec
and
nop
xor
cmp
fisttpl
push
repnz
cmpsb
fs
xchg
shlb
fsubl
jo
mov
and
or
mov
or
fmulp
xor
repz
dec
jb
leave
sbb
cmpsb
pop
dec
xchg
or
arpl
or
push
rep
in
pop
xlat
add
jbe
jo
mov
push
dec
sub
popa
int
fidivrs
and
xor
or
sub
stos
call
adc
mov
mov
xor
fnstenv
xchg
and
scas
aam
jo
loop
rcrb
test
and
lcall
xor
insb
and
xorl
pushw
sbb
and
ss
out
sub
mov
dec
add
andb
pop
add
xor
jle
mov
aaa
ret
rorl
in
push
rorb
mov
call
sarl
cmpsl
sbb
insb
push
add
pop
jne
fwait
xchg
arpl
xor
shr
cmp
cli
inc
pop
inc
fisubrl
mov
cwtl
xor
jb
push
mov
fisubl
push
inc
and
sbb
imul
fcmovnu
add
fldcw
adcb
cld
iret
jp
cmpsl
mov
xlat
ret
xor
imul
dec
mov
jne
repnz
rcl
mov
cs
out
mov
out
into
and
jle
push
rcrl
mov
sbb
cltd
frndint
movsl
xor
jbe
cmpsl
or
xchg
and
sbb
xchg
rolb
jne
sahf
enter
iret
push
xlat
in
xlat
in
ja
not
pop
in
test
add
dec
into
mov
fs
shrb
pop
out
pop
pop
out
dec
stc
and
notb
mov
mov
jmp
cmpsl
pop
jne
pop
pop
int3
outsb
das
insb
outsl
and
dec
imul
adc
pop
pop
cmpb
and
fwait
or
push
inc
lret
cli
and
dec
aam
aas
fmuls
lret
ss
push
and
adc
ljmp
test
jg
outsl
in
sub
pop
cltd
fisubrl
push
pop
pop
jns
dec
jo
dec
cmpsb
leave
jge
mov
push
mov
sub
jns
and
ljmp
pop
cmp
sbbb
inc
out
cmp
lock
lds
fists
or
clc
icebp
in
aam
push
push
mov
dec
iret
add
sub
mov
aad
rorb
or
loope
xor
popf
mov
and
sbb
es
mov
neg
hlt
sbbb
test
mov
pop
and
mull
adc
pop
dec
inc
pusha
daa
adc
push
and
repz
sbb
xor
cmpsb
fisttps
fnstsw
xor
jbe
js
xchg
lock
mov
xchg
aaa
pop
mov
jbe
nop
fisubl
sbb
mov
mov
data16
add
add
mov
mov
xor
jns
mov
mov
inc
ja
sbb
out
pop
push
pop
mov
int
lret
jo
or
push
jle
pop
ss
stos
mov
out
shrl
nopl
sub
jb
push
xchg
test
or
sub
aas
insl
push
jmp
push
hlt
test
xchg
lock
sub
dec
hlt
mov
push
out
inc
jae
mov
sub
test
cld
inc
filds
jp
cmp
stc
sub
stos
jg
mov
scas
js
fsubrs
faddl
leave
movsl
int3
pusha
jge
sub
leave
add
sbb
or
popa
pop
andl
jle
out
dec
or
cmc
jmp
mov
or
pop
add
mov
lea
xchg
aam
pop
mov
incb
lods
roll
fstps
out
mov
icebp
sbb
fwait
xor
mov
into
mov
sub
arpl
add
lods
pop
jmp
je
dec
xor
lret
cld
das
xchg
xchg
cmc
push
push
lret
mov
cmpsl
in
pop
jge
mov
or
movsl
ror
inc
xor
cltd
shrb
lcall
repnz
mov
xor
fldl
ja
mov
and
sbb
subl
pop
pop
and
pop
mov
push
xchg
into
mov
inc
cld
and
lods
jbe
jmp
daa
bound
and
jp
dec
es
sub
mulb
inc
sbb
dec
or
mov
iret
lret
icebp
sub
in
fistps
inc
mov
cwtl
add
js
cmp
lea
arpl
scas
jp
rcl
mov
mov
addl
enter
inc
ja
in
jmp
pop
iret
mov
aad
push
xor
fiadds
dec
out
hlt
aas
sbb
fs
push
and
mov
add
inc
loop
outsb
add
imul
movsb
sti
jae
notb
jp
nop
push
mov
xor
xchg
inc
adc
popa
xor
jb
push
mov
shr
dec
sahf
jne
movsl
lret
xor
shr
es
loope
xor
std
jns
inc
inc
or
in
lcall
sbb
push
lea
fists
jl
inc
rep
dec
pop
je
outsb
ret
in
mov
mov
dec
lock
sub
jo,pn
rcrl
inc
xchg
xorb
imul
std
arpl
ss
lret
push
or
and
xchg
movsl
int3
leave
cmc
or
int3
aad
ret
out
sub
ds
mov
mov
jnp
push
xchg
xor
out
idivb
fsubrl
adc
outsb
lods
outsb
adc
fwait
jmp
mov
push
inc
sahf
test
pop
or
negl
rcrl
lea
push
ret
xlat
inc
ss
arpl
xor
inc
push
or
mov
push
dec
ror
jmp
lea
fwait
in
adc
das
in
push
xor
clc
shl
js
call
fsubrs
dec
addr16
mov
or
adc
gs
jecxz
std
dec
in
in
mov
dec
pop
push
loop
lods
mov
add
mov
jp
cmp
jecxz
sub
add
sbb
and
mov
adc
cmp
mov
out
push
std
adc
pop
loopne
unpcklps
dec
push
enter
clc
jno
or
pop
lret
jns
lret
sbb
out
adc
xchg
sbb
cld
add
jmp
dec
dec
adc
and
mov
jle
test
add
sbb
mov
cmp
imul
test
sbb
xor
cld
icebp
xor
and
in
aas
jmp
into
mov
leave
pop
dec
and
jns
jns
mov
out
push
enter
adc
xor
fisubrl
push
lock
xor
mov
mov
xor
jmp
adc
pushl
fsubl
fmuls
movsb
jl
dec
jae
in
jnp
and
xchg
in
xor
fnstenv
repz
lret
xor
cmc
outsb
fdivl
and
cmp
pop
cmp
inc
jnp
sti
xchg
insl
pushf
xchg
push
jle
filds
inc
imul
cld
cli
lret
fwait
mov
insb
dec
movsl
iret
sbb
mov
push
insb
adc
mov
pop
add
lret
ret
jno
dec
stos
add
jecxz
push
data16
repz
stos
mov
hlt
jb
xchg
jbe
addl
out
mov
loop
mov
adc
mov
push
mov
xor
add
rolb
mov
shrl
jns
dec
and
mov
aas
dec
mov
jp
xchg
gs
xor
sub
or
dec
jg
fwait
popf
jl
push
shlb
mov
sbbb
loop
mov
mov
je
push
add
shrb
gs
adc
lea
sahf
push
xor
pop
aad
push
jle
sarb
testl
xchg
imul
test
pushf
push
fstl
lds
dec
nop
mov
inc
orl
or
ljmp
ss
mov
inc
stos
test
addb
jae
jecxz
mulb
and
dec
xor
inc
movl
or
jp,pn
mov
pop
adc
dec
loopne
inc
jle
pop
insb
pop
mov
xorb
scas
stos
and
cs
fs
fwait
int3
add
push
pop
stc
xor
push
stos
dec
or
jnp
fwait
out
sarl
dec
aaa
stc
jne
insl
inc
rorl
bound
inc
fldl
pop
fcoms
divl
stos
and
push
adc
sub
xchg
push
push
fists
xor
mov
mov
cmp
lds
cmp
jbe
sub
sbbl
mov
cmp
iret
jns
sbb
shrl
push
insb
es
scas
mov
insl
hlt
sbb
data16
mov
inc
push
gs
pop
xor
and
cmpsb
sbb
mov
xorb
sbb
out
mov
aad
cmp
ljmp
jge
divl
push
xor
xchg
xchg
or
dec
sbb
xor
jnp
sub
pop
dec
mov
mov
jle
addb
daa
lods
xchg
movsb
sub
pop
xchg
lret
jmp
mov
dec
dec
fucomp
or
test
jmp
insl
inc
mov
xor
xor
xor
push
lods
mov
addb
sbb
mov
in
sub
adc
testl
push
mov
cmp
push
mov
add
jmp
mov
int3
inc
pop
dec
aad
xchg
loop
outsl
mov
mov
rcll
sub
sub
sbb
fs
or
inc
mov
cmp
xchg
push
sbb
mov
xor
xchg
pushf
std
ja
mov
addb
jno
lret
outsl
addr16
xchg
mov
push
inc
filds
mov
dec
rclb
jecxz
imul
stc
jns
adc
arpl
addl
dec
aam
push
jp
ror
push
xchg
jno
popa
out
pop
cld
shlb
cmp
call
dec
out
fcmovu
xor
and
popf
popa
nop
fsubrs
jo
insl
in
push
pop
fstpl
dec
out
aas
add
frstor
dec
lock
add
pusha
push
dec
imul
imul
sbb
add
mov
xchg
inc
xlat
dec
jns
ds
or
imull
loope
fisttps
shlb
mov
icebp
xchg
loopne
orl
xchg
pop
mov
jo
and
cld
inc
enter
jmp
and
xchg
jno
lcall
scas
inc
dec
test
jno
rcll
pop
pop
popa
and
out
xor
sub
addr16
fisubrl
mov
mov
loopne
sub
mov
cmp
xor
inc
pop
repnz
das
cmp
xchg
push
shlb
loop
add
adc
lds
sarl
mov
push
fs
test
push
sub
in
je
orb
scas
and
movsl
dec
mov
mov
dec
arpl
add
push
xor
mov
inc
int3
add
push
repnz
dec
or
sbb
imul
lds
gs
mov
push
in
adc
jne
push
lcall
cmp
data16
push
cmp
orb
mov
mov
lds
fcoml
inc
push
das
pop
mull
push
pop
jl
roll
dec
dec
fcompl
add
mov
repz
scas
xor
sbb
push
adc
sub
cmc
sti
adc
pop
cmp
into
jns
add
ret
jbe
sbb
add
cmp
cmp
mov
and
inc
outsl
mov
mov
sub
in
mov
xor
add
add
pop
pop
dec
adc
jp
add
sub
fldt
push
or
stc
mov
jge
dec
pop
dec
sub
mov
aas
or
aam
lahf
cs
jns
inc
jae
push
pop
aaa
jl
dec
fldenv
mov
and
addr16
jne
xchg
adc
sbb
ja
pop
movsb
es
arpl
jge
cmpsb
in
aam
xchg
sti
scas
pop
sub
test
jmp
dec
aam
jge
rcrb
aas
in
std
dec
imul
cli
pop
cmp
icebp
lods
xor
aas
bound
mov
push
pop
cmp
pop
int3
int3
cmp
mov
push
dec
or
mov
xchg
jge
jnp
dec
fcompl
mulb
loop
pop
jecxz
pop
dec
bound
xchg
clc
hlt
std
pop
xchg
imul
pop
jno
cmp
pop
mov
inc
pop
mov
out
or
or
imul
mov
xchg
fistl
repz
push
mov
aad
ficompl
cmpsb
jl
int3
aad
sbb
add
cmp
arpl
jecxz
jg
nop
stos
inc
push
mov
xor
repnz
fdivrs
dec
push
mov
xchg
pop
test
mov
fs
lret
pop
mov
mov
jp
dec
and
push
pop
xchg
sbb
inc
leave
adc
notl
sbb
aad
ja
lods
fucomp
xor
push
icebp
sub
loop
and
lea
lods
test
das
adc
out
jbe
in
xchg
cmp
in
shr
pop
les
jns
push
jae
mov
and
jecxz
fbstp
test
mov
mov
and
add
mov
icebp
rcll
in
and
bound
ret
jns
pop
ret
into
mov
mov
das
mov
ret
and
aad
dec
nop
adc
lahf
add
stos
mov
and
pop
ficoml
les
lods
pop
lea
push
add
push
push
movl
push
adc
fbld
push
std
sub
mov
fs
mov
push
jle
mov
orl
bound
adc
sub
or
test
cmpb
or
jnp
je
sbb
inc
cmp
or
cwtl
add
jne
mov
inc
add
addl
ret
out
cmc
ret
and
lods
mov
mov
sbb
pop
adc
enter
mov
loopne
sbb
sub
mov
jns
aam
clc
xchg
jns
mov
loopne
andl
push
xor
jne
cmp
pushf
mov
xchg
push
mov
and
sub
gs
jle
fcoms
js
mov
add
pop
pop
addr16
push
add
inc
pushf
dec
stos
outsl
dec
push
andl
xchg
xchg
nop
xchg
out
push
and
das
jl
xchg
dec
sbb
outsl
cmc
xor
dec
mov
enter
outsb
repz
mov
popf
mov
test
stc
push
jg
popl
lods
fisubs
negl
lcall
adc
cmp
jns
in
inc
sbb
jo
adc
data16
xor
rorb
jl
xchg
ds
push
push
ret
repz
mov
lcall
addr16
lock
and
xchg
adc
sbb
cmp
pusha
rclb
dec
fwait
sbb
out
jg
mov
and
mov
and
lahf
pop
bound
sub
pop
mov
sahf
cwtl
or
fst
jns
movsl
push
outsl
ret
add
xchg
jmp
lea
dec
scas
sbb
mov
sub
or
les
sub
popa
mov
imul
shr
icebp
sub
add
cmc
inc
jbe
inc
mov
pop
and
sub
outsl
test
loopne
jmp
fmull
and
mov
dec
das
cwtl
xchg
sub
push
shl
mov
xchg
and
mov
dec
ret
cli
es
xchg
cli
popa
push
mov
mov
adc
mov
movsb
push
sbb
mov
xchg
xchg
popa
movsb
adc
dec
pop
sbb
sub
mov
lock
call
hlt
sti
aam
mov
pop
cmpsb
std
mov
sahf
popa
mov
scas
mov
hlt
bound
add
or
xor
shll
jle
movsl
call
cmp
lcall
mov
in
inc
xchg
mov
nop
rclb
outsl
push
pop
mov
xlat
push
pop
inc
jcxz
xchg
pushf
cmp
test
pop
imul
push
adc
jp
cli
lea
cmp
push
mov
inc
jge
dec
dec
lret
add
pop
les
out
jp
adc
sbb
jl
jo
icebp
or
stos
popf
inc
jl
mov
std
xchg
mov
fcomp
inc
jns
sbb
mov
lods
dec
lock
loop
gs
in
xchg
cmp
mov
or
je
divb
decl
push
out
aam
outsl
mov
aam
mov
pop
int3
movsl
push
xchg
pop
and
aad
fwait
test
ss
insl
add
icebp
jge
xchg
mov
pop
or
or
jle
sahf
dec
xlat
mov
pop
lret
mov
sarl
sahf
dec
jmp
or
mov
out
fs
les
or
mov
xchg
mov
or
dec
fcompl
dec
rolb
aas
data16
pop
lahf
daa
mov
bound
cmpsl
dec
xor
xchg
out
xor
cmc
insb
mov
inc
leave
lock
icebp
lods
fmull
dec
inc
sbbb
outsl
cs
push
xor
push
movsl
jmp
cmp
jmp
je
mov
pop
mov
lcallw
mov
into
lea
cltd
xchg
fadds
or
sub
test
xchg
iret
jno
pop
push
xor
and
add
outsl
xchg
sub
sbb
cmp
jbe
call
cmc
inc
jl
pusha
imul
push
clc
cli
ss
mov
std
or
xor
sub
sahf
aas
shr
mov
inc
cmp
xchg
cmp
fcomi
mov
shr
icebp
sbb
push
insl
loop
pop
in
ja
shlb
stc
int3
stc
stos
pop
in
scas
call
adc
cmp
fbld
pop
adc
xor
lock
clc
gs
inc
outsb
sub
xor
push
iret
pop
pop
jge
cmpb
adc
std
push
mov
enter
gs
mov
push
inc
jns
cs
ficompl
lcall
ss
std
arpl
sbb
dec
fsts
and
iret
mov
ror
mov
xor
inc
lods
testl
into
xchg
stos
or
sbb
imul
rol
jmp
mov
sub
pusha
pop
arpl
add
out
test
mov
sbb
xchg
dec
fwait
xchg
inc
cmp
fsubs
jge
adc
jno
ss
mov
loope
cmpsb
leave
movsl
cltd
out
leave
cmp
or
xchg
sbb
or
add
repnz
push
sbb
dec
insb
push
popf
popa
xor
mov
cmpsb
adc
adc
je
pop
outsl
sbb
lret
xchg
push
xor
imul
pop
enter
push
xor
adc
dec
adc
loop
cli
scas
outsl
notl
clc
in
fucomip
and
cmpsl
add
pop
aad
sti
xor
ljmp
mov
sti
ja
or
mov
mov
push
adc
adc
dec
sbb
popa
xchg
gs
ret
cwtl
mov
xchg
iret
fsubl
outsb
sub
fisubl
jns
push
cmp
adc
rcrl
test
jecxz
and
dec
jns
pop
add
fimuls
mov
mov
sbb
gs
and
inc
add
iret
pop
push
cmp
icebp
push
sahf
jae
cmp
fs
xor
jecxz
imul
ljmp
dec
stc
sub
sbb
loopne
dec
xor
cli
push
into
mov
add
mov
cwtl
push
nop
or
or
xchg
sub
cmp
nop
pop
xchg
inc
dec
rolb
mov
stos
jbe
jmp
fiadds
gs
pop
in
nop
pop
es
in
adc
fistpll
mov
int3
shlb
pop
lahf
fimuls
sbb
je
push
pop
pop
mov
sub
adc
jecxz
inc
stos
jge
sbb
and
ret
push
mov
lds
cmp
push
sbb
push
or
int
sbb
popa
call
repnz
mov
mov
ja
xchg
in
lret
sub
clc
push
in
xchg
leave
int3
mov
mov
daa
decb
leave
scas
cmpsb
jb
outsl
pop
adc
mov
aad
sub
into
or
xor
test
out
mov
lock
cld
add
xlat
lods
in
xchg
mov
call
fsubrl
or
dec
daa
jp
and
daa
sub
adc
sub
add
pop
mov
out
add
sti
mov
xor
push
icebp
push
clc
jae
cmpsb
sub
push
lea
bound
mov
cmp
mov
add
dec
mov
inc
addl
int3
sti
clc
pop
ja
jecxz
mov
loope
lahf
cli
fidivl
adc
pop
mov
in
and
pop
addr16
imull
dec
jnp
mov
inc
call
mov
int
xchg
das
nop
mov
fstl
inc
cmp
and
and
in
int3
mov
sbb
daa
xchg
dec
out
xor
jecxz
loop
push
adc
sbb
loope
scas
xchg
adc
mov
jecxz
sbb
or
and
stos
int3
mov
xor
or
aad
cmp
dec
sub
push
dec
adc
dec
inc
mov
mov
jge
mov
add
jae
in
push
adc
std
sub
fsubp
inc
push
scas
adc
or
popf
mov
xchg
xchg
hlt
out
ret
sub
push
int
push
mov
mov
divb
scas
mov
sahf
xor
push
mov
loopne
xor
mov
popf
mov
xchg
int
fwait
test
mov
cmpsb
stos
mov
cmpsb
popf
sahf
jp
shll
inc
orps
test
lock
imulb
sti
insb
ss
int3
or
cmp
push
notl
aad
push
dec
inc
sbb
dec
xchg
mov
std
negl
adc
pushl
in
inc
mov
insl
negl
rorl
mov
aad
fcompl
faddl
adc
sub
scas
push
lret
lock
rcrl
inc
mov
lock
pop
jle
mov
in
ret
out
cmp
mov
jne
sti
mov
adc
cmp
sbb
xlat
push
cmp
out
mov
or
es
popa
into
add
dec
aad
divb
inc
or
fs
dec
adc
jp
shll
sbb
roll
jge
dec
mul
jns
daa
mov
std
outsl
jae
cmp
jnp
cmp
xchg
mov
cmp
and
loop
imul
xor
shrb
jmp
push
adc
pop
and
dec
je
xchg
pop
and
sbb
cmp
stc
sub
inc
jge
in
orb
test
imul
inc
data16
push
pop
xchg
lcall
mov
repz
pop
dec
arpl
push
movl
inc
push
mov
add
fisubrl
mov
cmpl
or
incb
jmp
mov
or
loop
jbe
sbb
xor
mov
push
and
mov
add
dec
out
cwtl
jbe
xorl
js
jo
pop
pop
ljmp
mov
jo
sbb
push
cli
xchg
pop
or
aam
cmp
test
lret
sub
mov
cmpsb
pop
jo
sbb
push
cmpsb
jge
lods
jae
xchg
mov
jecxz
jle
cmpsb
hlt
push
dec
pop
clc
js
test
jns
mov
in
xchg
sbb
ds
pop
je
pop
or
leave
or
push
out
sahf
mov
clc
inc
popf
pusha
loopne
loope
inc
fsubl
mov
add
bound
xorb
fnstcw
dec
ljmp
cli
cmp
aad
stos
mov
cmp
sarb
int3
ficoml
pushf
add
dec
push
dec
inc
sbbb
addr16
mov
and
nop
dec
xchg
sub
es
je
repz
loopne
jne
mov
inc
andl
loope
xchg
xor
mov
movsl
aam
insl
loope
and
sub
leave
loopw
das
or
out
fidivrs
dec
push
mov
jnp
pop
cmp
xchg
daa
arpl
outsb
mov
pop
mov
in
xchg
ds
movsb
dec
or
ds
inc
push
cmpsb
lret
sub
test
inc
mov
ret
mov
loop
and
add
ds
pop
test
outsb
mov
dec
cmp
push
div
jecxz
nop
fbld
enter
aaa
and
stos
mov
data16
and
addl
adc
rol
sbb
inc
mov
cmp
loope
push
std
mov
xor
test
push
fidivrs
hlt
and
cld
ljmp
sbbl
lret
inc
cmp
mov
out
nop
jle
jle
cmp
sub
test
pop
in
push
pop
ret
daa
or
jecxz
ds
jmp
pop
xchg
repz
sbb
xchg
pop
mov
fsubrl
pop
fdivp
inc
out
mov
sub
jnp
test
inc
mov
into
dec
movsb
clc
in
sbb
dec
xor
imulb
mov
or
outsb
cmp
in
ljmp
sbb
ja
adc
mov
shlb
inc
shlb
sub
negl
cli
sbb
jmp
cmp
push
dec
sbb
popa
aaa
aad
add
pop
inc
leave
lret
fsubrl
mov
add
lds
in
push
xor
arpl
lea
and
jne
dec
cltd
les
stc
loopne
jbe,pt
xchg
xorl
popa
sbb
jmp
ds
in
cld
cmp
adc
sub
pop
and
lock
into
adc
fisttps
pop
mov
mov
sub
fbstp
mov
xor
jns
mov
sbb
aas
sbb
mov
add
mov
imul
incb
stc
dec
outsb
cmp
pop
mov
das
inc
cmp
out
mov
mov
addr16
fsts
jbe
dec
fbld
pop
pushf
imul
ja
ret
movsl
xor
xor
js
addr16
mov
ret
xor
inc
push
test
mov
add
inc
mov
bound
iret
movsb
test
cmpsb
mov
cltd
mov
or
out
dec
sbb
xchg
cltd
jp
ja
push
adcl
iret
jl
dec
jne
adc
movsl
pop
mov
arpl
repz
mov
cmp
iret
testb
add
sahf
dec
cmp
ficoms
xchg
outsb
push
push
jge
xchg
lret
mov
dec
bound
outsl
into
orl
jle
or
std
cmc
push
push
out
stos
das
mov
sbb
mov
and
ret
js
push
inc
sub
fimuls
movsl
push
lods
ret
push
jl
add
lahf
pop
sub
outsl
jo
inc
out
pop
jno
out
lret
jmp
fmulp
and
pushf
adc
pop
mov
add
daa
aaa
pop
pop
popa
dec
inc
lea
repz
das
out
adc
repnz
out
and
mov
push
enter
mov
mov
loopne
inc
ds
mov
mov
push
or
inc
mov
sarl
aam
cld
xchg
xchg
jo
jl
push
mov
cmp
push
pop
mov
mov
fdivp
rcl
leave
int
pop
push
cltd
or
outsl
dec
je
es
dec
js
adc
xchg
nop
mov
or
or
out
shl
push
xor
sub
inc
js
xor
jns
adc
lds
xchg
jmp
inc
add
fwait
mov
insl
out
add
fnstenv
pusha
add
sbb
and
xchg
inc
shrb
jecxz
inc
in
or
cmp
call
rorb
mov
mov
mov
ret
clc
aam
lret
jl
and
jge
sub
jp
aad
cmc
or
add
popf
pop
movsb
popa
xchg
push
sbb
imul
xchg
mov
ret
in
xor
cltd
test
push
pop
xchg
in
ja
in
mov
aas
pusha
cmp
mov
xchg
les
test
test
cmp
leave
fcmovbe
add
repnz
faddl
sub
imul
jp
jno
shl
xchg
xor
out
xor
inc
xor
mov
pop
dec
pop
popa
sbb
pusha
mov
add
ss
pop
jns
repz
mov
add
loop
pop
push
push
stos
sbb
popf
mov
aaa
jo
je
sar
adc
dec
lret
cltd
and
push
fdivrs
test
scas
cmpsl
out
fcoms
push
in
sbb
and
sbb
outsl
std
stos
and
pop
xchg
xor
lret
mov
push
aaa
inc
lcall
xlat
and
and
mov
loopne
loope
and
cmpsl
fadds
jge
sahf
dec
add
stc
or
sub
popf
sahf
fdivs
inc
cmpsl
int3
pushf
xlat
xchg
shrl
cmp
pop
pusha
mov
out
push
push
xor
mov
adc
out
xchg
push
pop
inc
cmp
dec
or
jmp
test
jnp
das
xor
push
aad
cli
pop
cmpsb
add
aad
and
mov
jecxz
push
daa
cmpsb
mov
cmc
sub
push
clc
or
rclb
dec
out
dec
mov
cmp
cli
aaa
sbb
repz
xchg
lret
js
shlb
push
shl
adc
in
adc
popa
xor
daa
scas
or
or
nop
sarl
mov
outsb
or
loop
fmulp
pusha
mov
cs
mov
les
cwtl
gs
shrl
jecxz
cltd
out
js
pop
movsl
sti
jnp
rcrb
or
xor
fidivrs
cmpsl
jo
lcall
pop
xchg
pushl
dec
testb
jbe
dec
ret
dec
shlb
or
jecxz
pop
pop
rol
repnz
jp
push
icebp
orb
les
cltd
adc
insb
sbb
lods
stos
outsl
inc
xor
das
and
cmp
lds
int3
stc
clc
xchg
dec
rcrl
fcompl
pop
daa
addl
mov
int3
sub
gs
out
cmp
push
xor
jmp
cmp
ja
mov
mov
ss
cwtl
clc
mov
lret
insl
cltd
popf
andl
mov
and
ficoml
push
push
inc
sub
mov
out
pop
jns
mov
cltd
repz
stc
nop
hlt
pop
mov
pop
ret
sbb
pop
ljmp
push
adc
loope
mov
iret
cmp
and
dec
mov
xor
jne
addl
loopne
sbb
cmp
dec
add
add
outsl
aad
add
pop
jmp
mov
pop
loopne
mov
stos
mov
sub
xorb
and
mov
inc
in
divl
rcrl
sahf
mov
push
jbe
test
push
gs
lcall
gs
test
addl
mov
pop
ljmp
xadd
xor
popa
xchg
mov
sarb
test
pop
cmpsl
repnz
push
pop
je
sub
test
or
call
cmc
std
adc
jb
loope
mov
int3
add
rorb
cmc
int
divb
insb
repnz
icebp
sahf
mov
shrb
scas
je
fs
cli
repnz
scas
dec
fstp
popf
cmpsb
push
sbb
bnd
aaa
mov
outsb
les
xor
les
xorl
xor
xor
ds
test
mov
outsl
lcall
shlb
loopne
add
into
xor
mov
js
mov
push
pop
addb
push
in
or
out
subl
mov
and
movsb
aam
cmp
and
fmul
pop
in
pop
lods
stos
pop
fwait
pavgw
stc
scas
and
in
in
xchg
mov
int
sub
dec
jmp
iret
adc
pushf
inc
cmpb
cmpsb
sti
sbb
sbb
jno
iret
icebp
push
cs
or
inc
cmpsb
xchg
jo
dec
sti
es
imul
lods
dec
fwait
mov
push
xchg
jno
int
ret
mov
push
test
jae
movsl
outsl
sbb
push
and
pop
push
or
inc
sahf
or
mov
or
add
repz
mov
hlt
ret
icebp
cs
mov
push
leave
mov
sub
popf
movsl
cmpsb
dec
xchg
mov
mov
insl
mov
mov
push
fwait
mov
or
jp
icebp
xchg
and
jg
sbb
fiaddl
pop
fwait
adc
inc
dec
add
jge
fwait
jae
imulb
push
add
sahf
fnstcw
test
ljmp
fs
in
mov
cmp
dec
addr16
sbb
and
push
pop
rclb
fistpll
xor
lea
out
sbb
inc
cmpsb
mov
mov
push
cmp
incb
dec
inc
jmp
sub
popf
adc
out
outsb
aad
data16
cmpsl
mov
test
xchg
pop
mov
and
cwtl
and
fildll
fisttpl
out
mov
push
push
sub
stos
cwtl
sub
aad
push
xchg
push
push
scas
cs
call
xor
mov
jne
jge
addl
rcll
sbb
imul
mov
xchg
scas
loopne
pop
shll
push
mov
mov
xor
lods
inc
shll
clc
js
mov
sub
shr
jmp
jb
stos
aas
test
add
xor
addl
lcall
mov
mov
test
sub
shrl
sti
mov
out
stos
fisttpll
dec
push
xchg
ficoml
insl
xor
jb
outsb
push
inc
test
cli
outsl
xchg
add
ljmp
repz
stc
add
jecxz
div
ds
pop
sarb
nop
lret
adc
pop
daa
xchg
and
cmp
mov
repz
push
rcrb
lahf
fildl
push
out
popf
mov
sub
mov
test
repz
or
fs
add
clc
add
adcb
xchg
mov
mov
in
enter
iret
aaa
test
stos
push
dec
cmpsb
movsb
andb
stos
mov
je
movsl
jns
ss
dec
cwtl
addr16
or
mov
xor
scas
cmp
call
dec
ret
rorb
pop
add
mov
test
and
ret
lods
mov
mov
mov
xor
lea
push
xor
iret
mov
add
int
or
pushf
pop
and
xchg
call
sub
rcrl
xor
mov
mov
mov
mov
hlt
loop
add
lds
insb
push
xchg
out
outsb
push
sbb
dec
lahf
mov
out
or
jp
in
scas
inc
call
mov
or
mov
notl
dec
lds
cmpl
in
push
icebp
sub
push
mov
dec
cmp
addr16
inc
jbe
xor
jnp
add
xchg
cmp
cmp
sahf
sti
ret
pop
sbb
testl
popa
mov
in
mov
loop
mov
cmp
xchg
fildll
sbb
inc
pop
data16
cltd
leave
cltd
add
popa
mov
sbb
jecxz
xor
dec
nop
push
inc
data16
ljmp
lock
dec
or
pop
pushf
dec
adc
mov
lret
and
mov
xchg
bound
jge
mov
fsts
mov
pop
es
inc
xchg
mov
cld
dec
bound
cs
and
xor
fstps
xchg
push
aam
mov
rcrb
outsl
jne
fs
xor
adc
and
ret
cmp
push
fstpl
stc
ret
dec
pushl
lret
inc
jle
jno
jno
pop
dec
cmp
scas
int
xchg
dec
loope
dec
fimull
mov
push
inc
sbb
aas
out
mov
cmp
dec
insl
pushl
ljmp
or
or
js
ficoml
xchg
fnstsw
addr16
repz
iret
sti
fnstenv
xchg
mov
inc
frstor
imul
clc
cmp
sub
aaa
add
jno
add
xchg
xor
mov
jns
dec
cmp
mov
sbb
mov
loope
int3
cmp
subl
cmp
fnsave
cmovno
pushf
imul
cmp
shlb
daa
ja
xchg
pop
cli
push
mov
cld
mov
push
xor
gs
rorl
adc
cmp
shr
pop
insl
into
sbbl
xchg
or
mov
shrl
xchg
fisttps
xor
fsubr
push
loope
ja
sbb
in
ret
add
cmp
dec
sahf
scas
mov
push
imul
sub
loopne
inc
mov
inc
mov
enter
pop
or
xor
test
sub
inc
mov
adc
pop
xchg
popl
xchg
xor
inc
mov
fxch
or
decb
in
loope
or
push
or
inc
dec
fwait
ss
adc
pop
adc
xchg
test
sub
sub
inc
std
mov
fwait
outsb
mov
in
fucomi
mov
aad
inc
jae
out
cmp
cmc
xor
movsl
lods
add
mov
in
dec
daa
insb
das
cmc
mov
imul
mov
adc
fdivrl
mov
mov
cmc
xor
movsl
das
mov
popf
xchg
fdivr
pushf
movsl
out
int3
je
clc
mov
mov
mov
jb
mov
mov
mov
fwait
push
mov
push
mov
movsb
je
leave
or
cmpsl
popf
xor
add
pop
add
ret
sbb
fstl
fcoml
xor
imul
inc
dec
ds
shl
mov
ret
ljmp
aaa
lea
inc
xchg
push
pop
mov
jmp
inc
sahf
lcall
leave
push
aas
iret
xor
int
mov
stos
push
mov
sarl
outsb
fadds
inc
jecxz
jb
jno
lret
mov
shll
push
pop
shrl
outsl
jecxz
lahf
fwait
inc
enter
lcall
adc
xor
fwait
out
mov
repz
lock
cmpsl
repnz
mov
fst
data16
mov
in
jmp
mov
shrb
adc
mov
mov
popf
mov
mov
dec
pop
popa
sbb
xor
imul
mov
dec
xchg
and
jle
push
inc
xor
das
movsl
daa
test
scas
popf
cwtl
add
pop
mov
push
dec
mov
fnstcw
movb
jg
movsb
jbe
in
pushl
push
out
iret
ljmp
xchg
rcr
inc
movsl
jp
push
jecxz
test
and
sub
push
mov
inc
ss
hlt
inc
int3
lods
jnp
test
sub
dec
or
jmp
in
fimull
dec
mov
sarb
andb
xchg
movsb
aad
test
cli
test
bound
addr16
pop
sbbb
cld
adc
sbbl
rcrl
push
jb
jecxz
pop
loopne
cld
mov
cmpsl
xor
push
insl
stos
fists
jg
and
push
cs
mov
add
mov
cltd
adc
xor
ss
ret
roll
rorl
icebp
into
inc
testl
lcall
pop
push
fisubl
pushf
leave
clc
mov
or
mov
imul
addr16
mov
mov
or
loop
add
ljmp
adc
mov
popf
gs
sbb
jne
mov
mov
dec
leave
add
xacquire
aam
or
jg,pt
jg
stos
xor
adc
clc
cli
das
repz
sbbb
out
cmpsb
cltd
inc
ret
fisttpll
pop
lahf
stc
fsubs
cmp
push
cmp
loopne
xchg
inc
mov
sbb
push
out
les
or
pusha
cmp
ror
mov
popa
stc
shlb
out
mov
popa
sub
inc
jne
movsb
adc
js
cmp
out
and
or
add
aam
pop
cld
mov
stos
adc
dec
sti
sub
adc
push
inc
shlb
nop
jbe
addr16
jbe
ljmp
sub
push
scas
out
iret
mov
inc
std
sbb
mov
sub
push
loope
adc
mov
xor
ret
xchg
fcmovnbe
fldl
fstpt
in
sbb
push
push
and
dec
push
sub
and
or
mov
or
in
stos
icebp
mov
mov
mov
mov
das
dec
repz
psubd
mov
out
pushf
fistpl
sub
inc
scas
aaa
mov
leave
fisttps
ss
fstpl
mov
stc
dec
ss
mov
shll
shrb
pop
and
jle
and
orl
repz
mov
and
push
push
cs
or
outsl
xchg
std
rcr
pop
je
dec
xorb
sti
shll
movsl
push
jmp
enter
lods
mov
mov
faddp
cmp
xchg
fisttps
jge
xchg
and
mov
mov
ret
xor
in
and
mov
add
inc
leave
mov
dec
aaa
leave
jnp
sti
adc
leave
jae
or
call
jns
push
jmp
pop
pop
sbbb
inc
mov
fwait
adc
ds
fsubrs
cmpsb
xchg
out
ljmp
jo
mov
mov
dec
jmp
inc
xor
ds
fdivl
ds
mov
push
mov
fcoms
imul
das
mov
lahf
imul
in
movsl
daa
inc
out
call
mov
aam
das
jno
cmp
iret
shlb
fildll
arpl
data16
xor
xor
lret
jge
jp
or
push
mov
cmp
adc
mov
hlt
pop
clc
leave
or
out
iret
push
ret
insl
test
or
lods
das
push
negb
adc
enter
pop
mov
sbb
fistpll
inc
mov
scas
fisubrl
imul
pop
inc
out
aad
and
adc
lds
pop
or
cwtl
mov
fidivl
das
cmpb
test
sbb
inc
fnclex
xchg
daa
sbb
btr
in
clc
dec
sbb
in
pusha
mov
xchg
sbbb
out
cwtl
add
sar
inc
bound
sti
popf
std
mov
mov
and
outsb
scas
leave
test
push
or
add
jmp
andb
jg
lds
lret
dec
cmpsl
fbstp
fwait
repz
into
cmp
add
ret
sub
ds
dec
xor
lret
fs
sar
lahf
je
cmpl
lahf
cmpl
cmp
mov
bound
xchg
ja
jb
rcrl
add
adc
pop
and
scas
mov
das
in
sub
addr16
sub
sbbb
mul
sub
pop
mov
aam
pop
sbb
mov
nop
and
mov
bound
cmp
dec
cwtl
or
les
stc
jns
xchg
fnstenv
bound
mov
test
pop
dec
fimuls
mov
into
popa
lds
xor
out
jmp
stos
adc
lret
sbb
cmp
jno
out
dec
loope
sti
dec
icebp
push
out
loope
xor
fs
in
les
int
testb
scas
fwait
inc
jmp
out
xchg
loopne
pop
dec
out
adc
push
fnstcw
xor
sbb
fcoms
fistpl
incl
and
jb
push
mov
testl
test
cmc
lods
jmp
jae
in
scas
mov
or
adc
dec
xchg
push
push
test
jae
xchg
dec
sub
lret
xchg
imul
jo
and
sbb
popa
mov
rep
push
hlt
rorb
xchg
lret
xor
push
or
das
decb
dec
inc
lret
mov
rorl
add
push
sbb
sahf
mov
pop
je
sub
movsl
mov
popa
stc
adc
cmp
cli
mov
lods
addb
inc
lods
cwtl
sarb
mov
cmc
cmp
mov
mov
fidivrl
add
aam
push
xchg
mov
out
fists
test
loop
push
cltd
mov
mov
cld
mov
sub
xor
int3
enter
mov
das
js
test
or
push
mov
mov
mov
dec
dec
rorb
adc
or
outsl
les
leave
xchg
push
jae
aam
dec
repnz
clc
push
notl
popl
aaa
and
jg
push
inc
out
std
clc
mov
mov
xchg
cmp
mov
pop
pusha
xchg
bound
pop
mov
movsb
jmp
enter
shrl
pop
rclb
push
xor
mov
test
inc
daa
jno
push
push
jl
or
add
ja
pusha
xchg
enter
sbb
fdivrs
cmpsl
lahf
cwtl
stc
mov
jmp
lcall
shrb
xchg
fadd
addl
inc
mov
cmp
fisubs
ficomps
mov
shrb
sbb
out
in
inc
sbb
sbb
out
test
outsl
pop
cld
lcall
idivl
jg
mov
out
mov
mov
enter
testl
or
adc
xchg
js
push
mov
dec
in
cmp
or
mov
mov
addr16
aad
ret
sbb
or
mov
roll
adc
xchg
arpl
inc
push
aas
dec
shl
aad
push
enter
loopne
pop
pop
or
fs
movsb
mov
pop
lds
xchg
add
rcll
mov
adc
js
pop
or
push
dec
daa
sub
loop
cwtl
loopne
adc
ds
or
lret
jecxz
pop
ja
fucomp
cs
mov
movsb
push
dec
cmc
dec
push
dec
xchg
loope
out
mov
jns
roll
pop
enter
ds
stc
jno
cwtl
push
aaa
push
adc
mov
int
adc
in
xchg
outsb
push
xchg
jp
xor
mov
xchg
lcall
fimuls
mov
icebp
push
inc
jmp
in
mov
mov
das
or
movsb
push
xchg
cltd
in
add
pop
loope
imul
test
das
or
mov
and
or
mov
mov
jbe
mov
aaa
movsb
mov
xor
movsb
psllw
call
ljmp
xor
dec
fmuls
call
or
repnz
xor
add
ja
sub
and
push
dec
je
sbb
jo
sub
loopne
cmp
cmp
jb
test
inc
arpl
adc
sub
mov
sub
shl
mov
sbb
cmc
cmp
lret
dec
jge
push
sub
mov
lahf
in
test
add
xor
out
inc
sbb
roll
mov
and
mov
cmpsl
dec
mov
mov
ljmp
lock
call
pop
xchg
mov
and
jno
cmc
push
pop
out
dec
cmpb
pop
add
test
mov
call
out
das
pop
das
jp
cmp
jle
jno
mov
jb
sub
pop
sub
mov
add
and
cld
lret
mov
daa
xchg
mov
dec
pusha
cmpsl
test
out
in
repz
rolb
pop
mov
adc
loopne
mov
inc
imull
sahf
or
je
sub
test
push
std
icebp
xchg
mov
cmp
adc
outsl
mov
int3
mov
xchg
sub
dec
and
jno
mov
je
fisubrs
inc
adc
add
loope
lds
pop
adc
mov
pop
or
aam
sub
jmp
push
subl
test
push
mov
mov
jno
rorb
sbb
adc
jl
lret
adc
lcall
inc
subl
lods
cli
jl
gs
mov
xchg
adc
or
lret
lret
pop
xchg
inc
loope
xor
std
out
inc
jl
dec
mov
xchg
fstpl
add
xchg
cli
mov
es
call
lret
aam
dec
mov
fcomp
lret
jo
xor
jl
aad
repz
jns
addr16
test
xor
lahf
xchg
pusha
mov
in
inc
movsb
ret
dec
ret
xchg
cmpsl
les
outsb
stc
movsb
stos
sub
add
lret
hlt
popa
scas
inc
mov
movsl
mov
inc
pusha
jmp
jb
xchg
decl
shrb
push
jle
jg
push
add
call
ds
dec
ja
jmp
mov
xlat
mov
inc
outsl
mov
push
or
je
enter
inc
es
loopne
push
dec
out
sbb
ret
in
cmpsb
popf
rcl
mov
xor
ds
jns
push
inc
imul
cwtl
rclb
pop
push
pop
add
addr16
divb
xor
and
push
cmp
dec
out
add
cmpsb
inc
mov
pop
cmp
lods
mov
xlat
lods
mov
inc
jge
loope
cltd
and
xchg
mov
mov
daa
lock
jne
xchg
lds
lret
lcall
jne
xchg
xchg
repnz
inc
jo
aam
aam
mov
and
mov
jmp
and
inc
lahf
jp
pusha
jno
push
cmp
call
jns
push
jl
adc
mov
sbb
xchg
adc
test
pop
fsubl
es
shrl
pop
lahf
inc
and
insl
in
inc
inc
cmp
clc
pop
adc
int
mov
or
ficoml
mov
mov
xchg
adc
dec
or
mov
sub
mov
ja
pop
inc
pop
push
rcrl
xor
cltd
pop
gs
sbb
mov
inc
mov
xchg
les
ficoms
popl
mov
ds
sub
xor
insl
jg
pusha
adc
pop
cwtl
xlat
add
jb
push
ds
loop
adc
scas
add
lret
repz
cwtl
push
push
mov
icebp
sbb
push
mov
mov
push
jmp
gs
sub
cmpsl
jp
rcrb
test
iret
out
pop
push
pusha
or
jle
loopne
sbb
ficomps
ss
jle
xor
pushf
dec
rclb
mov
push
dec
mov
add
loop
movsb
out
push
ss
cmp
imul
mov
lcall
sub
jge
clc
pop
xor
cmpsb
pop
jle
outsl
mov
repnz
