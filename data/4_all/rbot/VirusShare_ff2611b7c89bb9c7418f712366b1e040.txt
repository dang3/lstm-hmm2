mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
arpl
in
mov
or
in
mov
cwtl
into
sub
dec
fsts
jbe
push
mov
gs
add
rol
popa
inc
mov
push
pop
xor
out
out
adc
mov
push
or
push
mov
lock
pop
inc
shl
dec
call
adc
int
in
cli
push
xor
push
sub
add
sub
loop
mov
xchg
push
scas
pop
hlt
ljmp
ret
xchg
cli
repnz
lds
lock
and
and
in
dec
push
fists
inc
imul
xor
int3
add
jae
lea
pusha
gs
mov
inc
mov
jno
xchg
inc
sbb
decl
inc
push
shrl
mov
jge
movsb
push
outsb
add
aas
xchg
inc
jne
aas
sub
add
pop
bound
hlt
mov
call
xchg
add
xchg
jne
loopne
jl
cmc
out
ficoml
in
hlt
jecxz
fidivrl
int3
jl
popf
or
cmp
pop
cs
push
cltd
or
clc
dec
ret
and
data16
dec
lods
fsubrl
jnp
lcall
loop
jbe
cmp
lds
pop
dec
xchg
cld
aad
push
mov
into
cltd
mov
test
cmp
xchg
xchg
jbe
xchg
pop
adc
jl
jno
mov
enter
test
mov
mov
jo
push
push
adc
xor
and
std
and
lret
sub
mov
sub
popa
xor
jno
jecxz
ds
inc
push
data16
lcall
sarb
pushf
mov
jmp
cmp
mov
inc
jle
ret
jb
pop
insb
dec
or
jb
outsl
sbb
sub
lahf
fwait
jge
negb
hlt
jecxz
cmp
mov
adc
jge
pop
dec
add
jle
sbb
push
mov
xchg
mov
inc
mov
jns
pop
jo
sub
cmpsl
adc
adc
mov
mov
cmp
subl
cmpsb
arpl
movsl
jecxz,pt
movsb
test
mov
rorl
and
out
push
rcll
push
add
adc
or
jge
outsb
pop
insl
and
lods
movsl
push
mov
std
xor
inc
cltd
mov
xchg
mov
push
pop
push
loop
les
nop
mov
inc
inc
outsl
add
sub
and
push
mov
add
xchg
or
mov
fnstsw
enter
pop
lds
and
jns
lcall
or
adc
xchg
sub
in
leave
push
jnp
movsb
cmp
cmpsl
cs
loopne
out
push
test
loop
in
inc
sahf
sub
sub
lahf
out
loope
lret
int3
movsl
and
orps
clc
hlt
add
jmp
cmpsb
pop
xor
adc
out
adc
xchg
aas
stos
outsl
aaa
mov
or
mov
je
and
pop
insl
insb
mov
or
sbb
pop
jns
cltd
push
push
dec
mov
jns
ficomps
lods
lods
mov
mov
int3
repnz
add
bound
pop
test
sbb
sbb
or
fldt
pop
daa
fsts
xor
sub
stos
xor
int
std
or
dec
dec
sbb
dec
inc
adc
lret
ret
test
xor
stos
push
mov
mov
jmp
shrl
lods
popa
divb
push
shll
mov
inc
rol
adc
test
pop
jb
movsl
stos
xor
jecxz
ds
loope
cmpsb
push
repnz
sbb
xchg
pop
mov
cwtl
dec
cltd
jno
lods
movl
jnp
lods
scas
decl
inc
aad
lcall
icebp
xlat
arpl
inc
ret
ss
push
adc
dec
xchg
imul
dec
daa
std
insl
popa
adc
inc
or
ficompl
pop
testb
jo
sub
rcl
and
icebp
add
fdivs
xor
add
fldl
dec
fbstp
fs
jns
fldenv
mov
lret
test
mov
cli
push
sub
push
cwtl
mov
jae
out
test
xchg
fdiv
dec
xor
test
rorb
sub
lahf
jbe
mov
adc
mov
push
out
ja
stos
pop
jmp
sbb
and
int3
jmp
dec
mov
xchg
jle
mov
adc
or
sub
pop
jae
xchg
into
frstor
arpl
xchg
addr16
jle
repz
dec
add
or
or
aam
daa
pop
mov
daa
in
lret
mov
pop
push
xchg
sbb
rcr
notb
push
push
pop
hlt
andl
or
test
or
cmp
cltd
into
jae
sbb
fstpt
jb
aad
iret
lret
insl
mov
mov
inc
pop
dec
rcrl
cwtl
scas
sub
test
iret
push
or
xchg
pop
call
pop
pop
lds
pop
lea
lret
addr16
pushf
cmpsb
xchg
imul
pop
in
adc
xor
inc
fcmovb
cvtps2pi
inc
xchg
xchg
pop
les
test
adc
and
pushf
xor
out
sub
mov
sub
insb
or
push
cmp
pop
add
int
idivl
std
pop
loopne
lret
jge
sbbb
test
js
cmp
adc
and
push
sbb
push
cmp
iret
out
rol
data16
rol
push
inc
dec
and
test
xor
xor
test
mov
mov
les
in
jne
test
iret
push
adc
mov
dec
xchg
icebp
aas
xchg
mulb
stos
das
xor
cmp
dec
hlt
lods
pop
xchg
ljmp
les
icebp
adc
aam
loopne
stos
inc
cmp
adc
rcll
ja
aad
or
repz
imul
out
or
and
int
sbb
rorl
adc
cs
daa
mov
jp
std
mov
loopne
pop
pushf
mov
dec
mov
pop
sti
mov
or
and
loop
popf
icebp
add
adc
into
insl
outsb
shrb
ret
scas
mov
xchg
pushf
jge
lds
jo
xchg
mov
cmp
xor
cli
ljmp
aaa
inc
xchg
ret
adc
mov
dec
dec
js
les
outsb
push
sub
arpl
or
std
or
pop
into
es
gs
mov
pop
mov
push
rclb
rcl
cmp
and
lods
lds
ret
fsubr
sbb
lock
movb
out
xorl
pop
stos
cltd
push
adc
mov
movsl
sub
add
lret
mov
mov
inc
cmp
cli
leave
dec
fdivp
stos
pop
jo
sti
adc
jne
add
mov
add
xchg
je
loopne
mov
iret
fildl
mov
jecxz
jle
adc
lret
mov
push
mov
jns
sbb
fcomi
pop
sahf
clc
push
inc
iret
fcomps
adc
dec
push
dec
and
imul
xchg
push
test
jb
idiv
sbb
pusha
cltd
mov
bound
push
jo
roll
push
insb
push
pop
and
lock
add
mov
pop
add
push
pop
inc
fcomip
les
aam
cli
fdivrs
sbb
mov
pop
xchg
lcall
sub
and
cld
push
cmc
mov
inc
roll
inc
ja
push
loope
mulb
roll
mov
divb
mov
addr16
out
xor
adc
movsb
mov
fdivs
cwtl
out
arpl
or
xchg
and
pusha
sub
sbb
adc
sbb
pop
jns
icebp
sub
dec
loop
mov
or
adc
cmp
sbb
adcl
ds
pop
call
and
inc
or
xchg
sub
sbb
scas
sub
jb
sub
mov
adc
xlat
xchg
cmpsb
mov
add
iret
dec
xor
daa
outsl
pop
adc
mov
cwtl
pop
fs
push
aaa
inc
pop
mov
rclb
loopne
jbe
cmp
clc
push
and
lcall
lods
pop
pop
dec
dec
clc
fdivl
les
int
jl
cmp
movb
movsl
add
int3
clc
xchg
pop
push
dec
adc
outsb
xor
jno
in
or
filds
sub
movsb
add
test
mov
std
dec
in
ret
daa
rorl
xchg
or
daa
iret
cld
stos
inc
cmp
ljmp
xor
and
in
cmp
data16
test
lods
push
je
cmc
sub
icebp
adc
subl
push
hlt
fcompl
lds
ror
das
push
test
enter
and
push
insl
xor
lcall
inc
les
int3
mov
mov
push
mov
pop
mov
inc
push
inc
jb
cmpsl
sbb
and
xor
jle
out
xchg
call
jge
adc
adc
mov
pop
lret
or
ret
and
pop
imul
add
xchg
scas
sub
testb
shl
pop
xor
mov
push
xchg
stc
xchg
popa
and
dec
push
adc
cs
outsb
test
pop
sbb
cmp
adc
lods
arpl
inc
add
imul
dec
pop
add
bound
mov
cmpsb
inc
cmpsl
gs
ror
and
xor
xchg
sub
cmc
adc
cmc
negb
xor
ficompl
sbb
lock
or
out
rolb
sub
clc
movsb
mov
filds
sti
rorb
repz
ds
imul
scas
dec
pop
stos
out
and
jle
mov
mov
xchg
push
cld
push
bound
stc
add
xor
mov
sub
fst
shl
in
push
in
sbb
std
imul
ds
mov
xor
fists
sub
hlt
pop
insl
sub
icebp
dec
iret
sbb
pop
sarl
leave
std
push
cltd
imul
adc
sbb
xchg
shrb
or
dec
xchg
out
arpl
stos
xchg
xor
or
lret
push
stc
stc
pop
xchg
outsb
ficompl
or
insb
flds
rorl
xchg
jge
sbb
pop
rolb
outsb
push
daa
add
in
js
mov
push
xchg
loopne
cmp
insb
mov
cmp
insb
arpl
lret
das
add
inc
or
inc
push
cmc
popa
je
out
jmp
mov
push
push
loopne
adc
int3
out
cmp
loope
int3
enter
dec
xchg
divl
cmp
sub
lea
xchg
mov
lcall
stos
enter
xchg
xchg
cwtl
add
xor
mov
js
inc
sub
inc
mov
sub
and
movsb
or
in
in
add
lret
ljmp
jmp
jb
inc
sahf
inc
mov
and
mov
push
push
mov
stos
outsl
cld
fistl
sahf
sti
call
iret
lods
inc
scas
and
clc
arpl
push
or
jnp
lods
sub
das
push
and
mov
mov
sbb
aas
ss
pop
push
icebp
dec
push
ret
sbb
inc
inc
out
movsl
inc
fiadds
loopne
fcmovne
jnp
or
xchg
lds
icebp
adc
insb
iret
stos
ss
add
inc
xchg
decl
cmp
fists
jae
jmp
cmp
aad
call
out
test
lods
dec
fisttpll
push
out
xchg
ret
popa
cmovae
gs
movsl
sub
jle
push
adc
aas
xchg
xor
sti
aad
cld
mov
jae
jae
push
lahf
mov
sbb
loope
fists
and
popa
push
adc
lret
cwtl
fists
sub
ror
subl
sti
js
push
shlb
arpl
dec
addb
arpl
sbb
popf
stos
adc
adc
inc
adc
xchg
sbb
test
dec
jae
sarl
aad
out
fldl2e
mov
lds
lcall
cmpsb
jmp
add
fs
dec
or
jmp
mov
cmp
dec
jmp
inc
jne
jmp
inc
int
xchg
adc
sbb
push
fdivs
mov
sub
outsl
jno
cwtl
push
cmpsb
dec
push
lods
stc
pop
or
jg
and
sbb
pop
and
sbb
mov
int
and
jp
in
aad
stos
inc
popa
arpl
jmp
mov
fwait
je
xor
outsl
out
inc
stos
mov
lea
inc
push
xchg
into
and
int
mov
mov
dec
shll
repnz
fwait
pop
mov
ret
enter
daa
pop
nop
push
insl
int3
hlt
leave
xchg
push
xchg
cld
fadd
xchg
fisttps
xchg
cmp
sbb
dec
lock
fdivrs
mov
pop
jecxz
ds
xchg
push
pop
mov
clc
pop
xchg
jnp
sti
sbb
push
pusha
xor
js
and
iret
lods
rclb
ss
test
jo
mov
std
test
and
out
mov
sbb
cli
cmp
jae
jo
arpl
mov
insb
loope
std
mov
movl
sub
dec
hlt
insl
iret
imul
mov
pop
push
loope
sbb
std
or
fsubrl
test
fisttpll
push
loop
cs
rcll
xchg
cmc
xchg
jecxz
lret
loopne
jo
iret
shrl
into
jle
addr16
jl
loope
cmpsb
xchg
and
ds
sbb
sbb
cs
insl
xchg
bound
in
pop
cmc
push
push
xchg
ficoms
inc
les
lods
cmp
pop
mov
xchg
stos
lds
call
aaa
add
stc
push
and
popa
outsl
cmc
inc
mov
into
clc
lret
inc
pop
lds
test
fwait
int3
aad
imul
daa
mov
inc
sbb
jne
dec
lahf
xor
and
test
jns
das
cmp
ss
or
cmpsb
inc
leave
xchg
xchg
mov
leave
pop
pop
pop
pop
sbb
add
push
pop
mov
pop
loopne
inc
xor
xor
push
mov
mov
or
sub
aas
sub
cmp
pop
fwait
scas
nop
mov
mov
cwtl
fwait
mov
loopne
loopne
out
popa
inc
pop
pop
js
mov
rclb
fneni(8087
shrd
push
pop
cmpb
and
ret
bound
add
dec
cwtl
and
out
push
and
push
inc
outsl
add
inc
push
jnp
stos
jmp
mov
sbb
sub
dec
xor
xchg
jne
push
or
xor
lcall
jecxz
pushf
rorb
pop
push
xor
and
stc
pop
lcall
in
mov
and
fstpl
sahf
ds
sbb
inc
sbb
jne
movsl
cwtl
mov
testb
and
mov
clc
imul
jne
call
mov
scas
cld
push
mull
int3
std
add
insl
loope
es
adc
outsb
out
aaa
adc
cmp
scas
pop
or
sub
and
sti
cwtl
mov
mov
in
jne
orb
pop
shll
jae
jbe
js
sub
test
xchg
adc
lods
and
mov
or
and
xchg
les
out
jo
pop
xor
sarl
jne
ss
fwait
mov
pop
add
inc
or
pop
mov
lds
or
push
lods
pop
shlb
icebp
cltd
inc
cmp
ds
cmp
into
dec
out
sub
insb
xchg
lods
or
or
sahf
repz
dec
out
xchg
jbe
sbb
sahf
pop
imul
cli
lcall
push
jl
pusha
cmpsb
mov
dec
mov
mov
sbb
pop
push
sbb
xor
pop
inc
pop
fadd
inc
testl
cmp
icebp
mov
mov
lret
loop
inc
std
call
and
push
pop
inc
les
mov
jb
or
pop
pusha
and
subb
push
into
push
ljmp
lock
fidivrl
pop
mov
sub
popa
int
jno
inc
loopne
aad
mov
or
pop
neg
cwtl
or
insb
dec
cmpps
lret
popa
jns
int3
jo
jle
popa
jbe
push
push
movsb
xchg
add
loope
push
push
shlb
fcom
add
mov
lea
cmp
pop
out
cmovl
scas
clc
sbb
mov
iret
in
jns
popf
pop
xor
mov
add
pop
mov
mov
and
loopne
or
std
lds
adc
jno
scas
pop
mov
xchg
jle
imul
out
inc
pop
xor
dec
lea
out
lahf
pop
push
mov
xchg
jb
mov
imul
fwait
and
jmp
sarl
data16
jl
push
cmp
sub
mov
sub
fistps
movsl
add
dec
push
outsl
jge
pop
dec
aad
stc
push
push
repnz
les
pop
inc
dec
jge
pop
scas
cmp
sub
or
mov
and
mov
imulb
test
jns
inc
repz
lea
scas
cs
sub
ret
sub
data16
loope
psubw
stos
pop
sub
and
inc
inc
push
aad
mov
outsb
nop
or
ret
roll
ds
pop
addr16
jns
adc
loope
sti
shll
push
scas
mov
fdivl
sub
and
lahf
add
sub
sbbl
pop
imul
adc
push
cmp
fldenv
sub
jecxz
mov
aam
das
aas
enter
aam
xadd
jg
and
stos
popa
clc
in
jnp
xchg
je
and
sub
mov
and
sbb
aaa
push
jg
adc
lahf
inc
mov
pop
loope
fistpl
fdivrs
pop
gs
mov
ficompl
or
in
dec
int3
adc
inc
pop
aam
cmp
mov
cmpsl
cmp
or
fstps
add
add
push
scas
adc
out
fidivrs
or
inc
daa
cmpb
jne
roll
sub
mov
popf
push
mov
add
lea
loopne
scas
xor
cmp
movsb
add
fcoml
aad
xor
dec
fstps
les
push
mov
jb
out
push
mov
add
sbb
clc
mov
mov
cli
int
cmpl
iret
mov
mov
mov
adc
xor
mov
mov
pop
out
scas
adc
xor
pop
loop
pop
or
mov
lret
xlat
movsl
cmpsl
xor
sbb
std
xchg
movsl
jp
dec
movl
and
sti
push
popa
xlat
outsl
jb
lret
loop
leave
pop
int3
sbb
and
push
jg
xor
mov
ja
jg
pop
sahf
or
stos
popa
mov
mov
sbb
int
mov
push
cmp
or
lcall
lret
xor
jno
mov
sbb
and
mov
loope,pt
or
sbb
cs
xchg
adc
rorl
sub
fcomps
es
mov
mov
adc
and
mov
lret
add
outsb
mov
lock
xchg
sub
test
add
xchg
in
dec
jnp
cmp
out
push
inc
loopne
mov
push
sbb
imul
out
mov
movsl
lahf
lcall
leave
jae
mov
and
dec
test
movsl
dec
xchg
or
xlat
nop
xchg
lret
mov
mov
xor
fs
adc
andb
lcall
mov
and
and
add
push
fidivs
add
fimuls
xor
ret
inc
lret
in
mov
xor
jb
adc
rcl
lahf
shrb
jecxz
dec
xchg
inc
lds
scas
scas
bound
inc
sarb
inc
pushf
leave
les
jp
in
loopne,pn
in
inc
cli
cmc
push
push
into
dec
outsb
jbe
pop
add
idivl
enter
daa
cmp
sbb
mov
sub
xor
cmp
add
std
idiv
dec
in
sub
enter
in
adc
or
lea
testl
sbb
xchg
sahf
out
arpl
shll
push
ss
mov
dec
dec
jae
dec
das
jae
or
jge
int
out
cmp
push
xchg
cmp
mov
movsl
mov
das
insb
cld
add
xor
or
pop
lods
mov
sub
sbb
cs
cld
mov
lahf
mov
das
lea
aad
fwait
push
dec
bnd
xchg
scas
rorl
stos
cltd
pop
push
xchg
je
or
dec
int3
push
cmp
daa
xor
push
pop
popa
fldl
fbld
pop
push
ja
mov
fs
stc
inc
mov
sbb
stc
mov
aad
mov
scas
cmpl
push
sbb
clc
mov
xchg
dec
dec
popf
repnz
push
idivl
push
int3
push
mov
and
iret
ljmp
jns
test
lock
ret
sbb
pusha
pop
sub
ret
imul
cmp
adc
inc
movsl
cmp
andl
lahf
mov
cmc
adc
int3
inc
ja
push
xor
xchg
xchg
inc
cmp
cli
lock
mov
push
push
or
js
pushf
mov
les
repz
pop
mov
dec
mov
mov
in
scas
add
subb
int3
pop
lds
sahf
fidivs
or
cmc
inc
sbb
sahf
or
aam
insb
std
and
mov
inc
and
xchg
pop
push
push
stos
push
jp
xchg
mov
mov
push
xchg
mov
xor
out
dec
mov
movsl
ss
push
pop
in
repz
aas
or
lds
mov
arpl
push
ficoml
iret
inc
mov
mov
nop
mov
rcrl
lods
idiv
cmp
pop
add
enter
repnz
daa
repnz
mov
call
jne
adc
cmp
mov
sbb
push
out
xor
repnz
fs
inc
aaa
cmp
mov
cmp
pushf
sub
scas
outsl
aas
inc
in
mov
pop
inc
dec
push
das
or
push
shl
add
push
pop
mov
dec
shll
xchg
hlt
fwait
mov
xchg
add
mov
xor
stos
or
jne
popf
sub
mov
add
xchg
iret
jl
cmpsl
js
sub
lret
popf
push
pop
fld
imul
fildl
sub
adc
sub
out
out
jp
push
cmp
adc
jno
int3
gs
add
or
and
out
pop
mov
cmp
adc
xor
enter
adc
lods
stos
sub
imul
iret
mov
push
hlt
pop
adc
cmp
xor
cltd
or
lret
push
mov
adc
mov
jecxz
or
in
ljmp
scas
jb
fsts
mov
ds
or
adc
fwait
cmpsb
dec
ljmp
push
push
sub
inc
xlat
sbb
aaa
fdivrs
out
repz
lret
mov
jb
mov
lret
mov
cs
insb
mov
push
cli
fstps
push
sub
cwtl
mov
leave
setp
cli
lds
js
nop
loope
movsl
push
aas
dec
or
cmp
push
pusha
adc
scas
xor
jecxz
and
xor
push
sahf
inc
icebp
pop
mov
dec
sub
or
popa
xor
add
and
xchg
mov
fwait
or
jne
cmp
adc
or
frstor
stos
cmp
pop
fiaddl
aad
les
cmc
pop
push
ljmp
popa
mov
add
and
insb
in
icebp
dec
mov
fisttpll
push
jl
sahf
adc
or
adc
push
push
nop
and
int
cld
push
push
and
mov
mov
mov
push
mov
addb
fdivrl
mov
movsb
xor
jb
rcr
xchg
sub
cli
add
mov
push
mov
je
es
cmpsl
sub
not
clc
xorl
push
ljmp
jmp
xor
jmp
add
lret
jle
cmp
cmp
or
cmp
jbe
scas
ffreep
sub
sbb
xchg
sub
testl
bound
fwait
cmp
fstpt
jle
iret
xor
mov
leave
test
pop
dec
add
js
insb
cmp
dec
test
dec
inc
cmp
and
loope
testl
stc
xor
out
and
cmc
rcll
push
inc
xorb
insl
mov
xchg
scas
fldt
mov
and
xchg
dec
cmp
mov
mov
inc
lds
mov
cmp
fistl
cmp
jp
pop
ret
pop
repz
movsb
pop
jo
pop
outsb
dec
pop
dec
add
adc
and
es
jns
push
pop
iret
mov
mov
mov
sub
pop
nop
fstp
cmp
rclb
sub
mov
fcomps
jmp
shll
js
int3
dec
mov
mov
mov
daa
sbb
stc
mov
xchg
addl
xchg
dec
mov
adc
imul
hlt
xor
jp
cmc
sbb
xor
adc
int
jo
fisttps
int3
ret
int
leave
xor
fwait
adcl
fmuls
stos
movsb
cmpsl
clc
movsb
stc
jb
loope
jge
clc
mov
mov
push
outsb
jp
cs
sub
fldenv
int3
inc
jp
adc
fildll
repz
adc
inc
fcoml
loop
add
ss
sub
cmp
cmp
or
pop
lahf
add
mov
and
enter
mov
popa
mov
hlt
iret
sub
adc
inc
dec
cmp
add
dec
or
int3
rorb
dec
cmp
jmp
cmp
test
cmpsl
aaa
pushf
aam
pop
cld
in
rolb
fwait
mov
and
andb
pushf
out
adc
in
add
dec
pop
sub
gs
sbb
push
jecxz
add
enter
pop
xchg
xchg
pop
push
mov
fs
stos
push
repnz
jl
cmp
adc
inc
inc
insl
sub
add
push
jl
sahf
mov
mov
nop
sarb
xchg
inc
leave
jp
hlt
mov
adc
jno
lret
mov
ret
xor
gs
xorb
loop
cmp
sbb
scas
das
mov
pop
mov
in
mov
sub
jmp
dec
dec
xor
ja
push
test
push
insb
dec
imul
movsl
nop
cmp
jl
mov
add
fisubrl
pop
fiaddl
pop
test
xchg
clc
or
in
bound
dec
push
dec
cli
rolb
adc
jb
mov
hlt
dec
test
mov
pop
mov
ret
sbb
mov
scas
and
decl
fucomi
inc
das
call
js
pop
dec
add
or
aam
bound
xor
es
sahf
data16
cmp
out
stc
je
scas
xchg
jne
dec
mov
xchg
cmp
mov
push
jl
mov
fbstp
bound
cwtl
in
inc
cli
out
sbb
scas
xchg
xchg
hlt
adc
sbb
dec
dec
gs
dec
push
ss
mov
out
sub
add
add
xchg
push
lahf
xor
stos
jmp
jge
dec
pusha
push
clc
lods
sbb
mov
adc
push
jne
xchg
and
pop
call
scas
adc
push
mov
flds
jge
mov
pop
jae
lea
testb
mov
push
cmpsb
movsb
dec
push
inc
sub
sahf
loope
mov
addr16
pop
imul
repnz
int3
mov
push
mov
repz
int3
mov
lds
imul
dec
inc
cmc
xor
test
rol
lret
fcoms
ss
or
aad
inc
movsb
dec
mov
cltd
jnp
mov
sahf
add
jecxz
enter
sbb
in
push
jge
mov
dec
or
lds
and
aas
and
int
jns
and
mov
cmp
insb
adc
sbb
pop
mov
push
inc
push
gs
test
mov
out
jbe
pop
faddl
inc
in
leave
sub
leave
push
pop
push
push
jecxz
sbb
cs
xorb
xor
sub
imulb
int
pop
lahf
cs
mov
aad
cmpsb
jmp
xor
mov
in
rorb
cltd
push
jae
jno
dec
jo
sub
pushf
inc
pop
add
jae
xor
inc
dec
pop
and
mov
add
mov
movsb
into
test
in
cmp
or
loope
lods
js
dec
push
gs
pop
outsl
add
mov
add
imul
mov
jo
ljmp
jmp
test
pop
shr
add
push
dec
xor
jns
loop
cwtl
sbb
lock
xor
pop
push
push
or
lahf
cmp
ficompl
ss
les
xor
leave
sub
int
popa
jo
les
loop
dec
adc
repz
fucom
pop
mov
mov
mov
les
push
repz
dec
inc
mov
add
lcall
mul
int3
xlat
cmp
or
sub
pushf
int3
jo
test
enter
out
and
fadds
lcall
mov
jo
lds
push
fidivl
hlt
push
dec
adc
sub
in
sti
in
xlat
pop
push
push
xlat
or
push
fimull
and
mov
cmpsb
loop
fsubs
loop,pn
cmp
out
push
mov
push
stos
inc
cmp
mov
js
pushf
or
fwait
push
dec
adc
ljmp
inc
or
and
sub
push
dec
inc
outsb
in
adc
pop
push
int3
mov
lods
pop
jno
cmp
mov
xchg
scas
mov
cltd
sub
lret
movsl
rcll
inc
push
pop
fdivl
adc
mov
mov
xchg
jnp
test
cs
fwait
outsl
add
cmpsl
lret
lods
jns
pop
fucomi
addl
lret
jge
mov
jp
and
or
push
mov
outsl
sahf
jmp
sbb
sbb
lods
adc
imul
or
test
inc
push
imull
adc
inc
imul
out
lret
icebp
lods
adc
xor
sub
sti
lds
mov
xlat
std
pop
hlt
fldcw
cmp
adc
fimull
test
mov
mov
stos
pusha
nop
or
or
xor
rcl
push
mov
jnp
and
pop
jbe
fdivrl
rol
inc
fs
mov
das
ja
mov
out
call
xchg
inc
or
cmp
lcall
pop
frstor
xlat
jo
add
xchg
repnz
lret
push
push
std
dec
lcall
pop
sub
push
sbb
pop
add
inc
mov
aas
and
mov
divb
jge
shlb
sub
pop
inc
push
stc
fdecstp
xchg
sbb
subb
repz
scas
cmpsb
mov
and
js
in
jns
mov
xor
and
xchg
adc
mov
inc
scas
xchg
aam
sub
aas
sub
sub
mov
cli
je
insb
movsl
or
xor
mov
cld
fnstsw
pop
xor
sbb
mov
xchg
cmp
mov
adc
push
loopne
ja
adc
ljmp
popf
dec
cmp
orb
jne
js
sub
and
stos
xchg
orb
push
fsubrl
adc
cmpl
cld
pop
pop
inc
rorb
inc
aam
stc
inc
out
xchg
insl
daa
ret
pushf
arpl
mov
loop
inc
lods
push
jl
xrelease
sub
testl
repnz
jge
or
inc
push
fs
pop
addr16
inc
adc
jg
mov
xor
rorb
pop
clc
cmc
int
xor
sub
pop
fs
and
mov
or
add
arpl
pop
adc
xchg
cmpsb
xorl
stos
mov
cmpsl
shlb
aam
xor
repz
adc
cmpb
leave
xchg
imul
inc
and
loopne
in
cmpsb
loop,pt
insb
std
inc
mov
sti
mov
shlb
mov
push
sub
cmp
adc
mov
sarl
ljmp
sub
pop
jmp
in
xor
sub
ljmp
aaa
rcrb
cmpsl
addr16
xchg
fwait
aam
imull
clc
mov
mov
jg
notb
and
ljmp
cs
test
push
movsb
pop
mov
mov
stc
sbb
lea
mov
sbb
mov
xlat
cwtl
outsl
incb
xlat
add
jbe
cmp
addr16
in
adc
js
cs
cmc
fmul
in
pop
int
push
pop
ja
pop
fmuls
sbb
inc
xchg
sub
mov
jb
add
push
dec
jo
pop
add
sub
aas
ret
dec
mov
dec
xchg
push
push
daa
or
test
test
cmp
xor
inc
das
push
add
or
insb
mov
shlb
xchg
insb
mov
mov
xor
mov
jmp
into
cmpsb
out
xchg
jl
mov
push
jns
xor
movzwl
jo
push
sbb
enter
mov
pop
orl
fstl
push
test
push
sbb
das
mul
cltd
jecxz
inc
or
adc
dec
fisttpl
xchg
sbb
mov
cmp
lods
inc
or
xlat
outsl
repz
or
sub
xchg
aaa
inc
mov
cmp
pop
mov
ss
cltd
adc
es
rcll
sbb
sbb
in
fcmovnu
or
jne
jnp
mov
dec
hlt
push
lock
sub
adc
in
mov
fs
dec
das
jle
call
addl
lahf
xor
mov
push
push
cmp
loope
cmp
mov
adc
out
and
mov
call
xlat
inc
lock
ja
sub
stos
out
scas
mov
andb
pop
data16
jbe
mov
mov
divb
cld
nop
ret
ss
mov
adc
mov
jbe
cmp
mov
je
cmpsl
in
mov
arpl
mov
loopne
ficoms
xor
sub
or
imul
je
movsl
in
aad
jae
call
mov
adc
add
jl
push
div
mov
cld
push
push
sbb
dec
or
cmp
inc
rol
insl
in
popl
test
cmp
jp
xor
rorl
xor
mov
shll
lret
aad
mov
add
mov
sub
xor
xchg
push
jecxz
jle
sbb
dec
push
out
mov
pushf
push
pop
or
jmp
subl
mov
inc
outsb
call
clc
testl
and
popf
fsubrs
imul
xchg
std
mov
popf
aaa
and
jae
into
pop
push
lods
adc
jg
outsl
pop
cli
sub
pop
cmpsl
mov
iret
or
inc
test
sub
sbb
dec
cmp
inc
sub
fbld
call
xchg
shll
repz
or
inc
pop
test
movsl
mov
loop
mov
jnp
mov
sbb
ss
les
nop
outsb
sbb
addr16
push
cmp
pop
push
scas
sti
mov
cmp
imul
push
lods
cmc
mov
outsl
and
movsb
jge
pop
stos
mov
enter
jmp
dec
mov
pop
inc
or
sahf
repnz
test
ljmp
pop
pop
pop
sbb
xor
xchg
and
mov
cmp
mov
sahf
xchg
pop
and
insl
pop
sahf
ja
mov
test
push
sub
out
mov
or
nop
in
xor
loope
fidivrs
ja
jl
cli
and
sahf
pop
dec
pop
xchg
jmp
add
icebp
mov
gs
dec
inc
aas
mov
lret
adc
iret
fadds
xchg
mov
sarl
out
lret
addr16
stos
rcll
or
jno
leave
std
lds
cmpsb
ret
lds
dec
adc
out
out
push
cmp
hlt
mov
rcll
aam
lcall
hlt
adc
push
mov
jmp
jbe
sub
or
fldl
push
adc
imul
add
xchg
popf
dec
ficoms
or
jno
jp
or
xchg
shll
loope
arpl
scas
mov
inc
das
xor
inc
mov
cld
lock
ret
dec
jbe
or
int3
and
les
pop
cld
inc
adc
roll
jl
mov
cmp
or
rcrb
mov
aad
ljmp
out
stc
sbbb
in
and
bound
ficomps
sbb
and
lock
addb
ljmp
outsb
or
testl
and
lock
in
fidivs
xchg
push
xchg
in
loope
push
mov
data16
insl
pop
xchg
hlt
aam
sti
sbb
icebp
lcall
mov
push
fildl
aas
outsl
add
in
or
popf
pop
xchg
jg
xchg
ss
jae
adc
cmp
dec
cmpsb
mov
xor
pop
shlb
ret
ret
fwait
xor
leave
loopne
sub
sarl
cmp
aam
cltd
test
or
in
sbb
fisubs
sbb
xchg
out
adc
cltd
push
inc
or
push
push
pop
pop
fwait
movsl
fisubl
sub
mov
and
xchg
pop
sarb
insl
sahf
add
call
or
mov
ret
arpl
sbb
or
add
les
pop
into
outsb
cmc
lods
insl
enter
mov
xchg
out
clc
invd
adc
mov
push
mov
pop
xchg
mov
int3
pushf
bound
adc
stos
cmc
xchg
movsb
addr16
push
pushf
push
adc
arpl
and
inc
sub
mov
push
mov
daa
or
xlat
sbb
sbb
gs
call
mov
loop
fsubrp
fs
mov
ror
sub
cs
arpl
sbb
cmp
cmp
dec
loope
and
jecxz
mov
fcmovbe
add
movsb
cli
imul
sbb
ja
cmp
pop
mov
jnp
mov
push
mov
mov
mov
in
adc
mov
mov
insb
cltd
pop
lock
in
ja
fisubl
aam
push
insb
imul
in
push
xor
mov
in
mov
in
out
shl
insb
or
mov
dec
loopne
loopne
adc
xor
stc
mov
jnp,pt
sub
and
mov
ss
das
fildl
cltd
dec
mov
test
test
xchg
xchg
loopne
dec
jge
fwait
xor
test
ja
pop
mov
aad
cmpsl
inc
inc
and
sti
imull
inc
es
jl
out
mov
pop
insl
adc
lods
fildll
shl
stos
sub
xchg
cmp
push
jge
cli
pop
xchg
inc
add
mov
mov
cmpsb
loop
in
mov
gs
je
xlat
outsl
call
pop
int
jo
inc
sbb
mov
movsl
and
or
xor
mov
lret
and
fadds
xchg
jmp
jecxz
pushf
out
xorb
shlb
xchg
jmp
sub
sbb
les
mov
insl
ret
xchg
sbb
add
ds
mov
cmp
mov
fwait
mov
test
fwait
cwtl
js
pop
mov
pop
mov
daa
cld
jmp
sbb
bound
mov
jmp
ljmp
addr16
ja
out
loop
or
and
push
popa
and
adc
mov
fists
lods
icebp
jb
mov
fwait
arpl
push
aas
inc
fcmovne
scas
dec
rcrl
mov
xchg
in
xchg
mov
sub
xor
jnp
push
dec
loope
mov
sub
out
loopne
stos
mov
xor
push
pop
add
repz
test
lea
pop
xchg
pop
outsl
je
dec
dec
mov
jo
jp
sti
test
fwait
rorl
test
dec
pusha
shll
jns
outsl
mov
ljmp
jecxz
push
aam
add
jbe
pop
add
sub
cmpsb
pushf
mull
and
dec
sbb
xor
add
fisubrl
sub
xchg
mov
xchg
mov
adc
les
mov
insb
push
mov
js
addr16
fdivs
popa
add
and
jbe
out
jno
push
mov
enter
inc
ja
addr16
rorl
test
or
out
inc
adc
out
jno
outsb
adc
shrb
mov
sbb
lcall
call
ss
bound
mov
in
add
pushf
xchg
lock
outsb
lock
sub
imul
fs
xchg
popf
sarb
sti
fwait
xchg
mov
mov
cmc
je
and
sub
lds
mov
nop
jmp
mov
pop
sbb
daa
xor
arpl
mov
cmp
dec
mov
dec
or
cmpsb
repnz
cmp
mov
add
dec
and
cwtl
sub
scas
outsl
addr16
mov
in
xchg
ss
lahf
xor
lods
adc
push
lret
inc
sub
xchg
jecxz
sbb
aaa
jno
loope
xorl
cmp
xchg
test
mov
pop
jae
sbb
out
add
aam
movsb
sbb
out
and
sar
push
stos
pushf
jae
dec
outsl
ljmp
inc
stos
stos
pop
and
or
std
in
jle
dec
and
pop
pop
repnz
les
xor
push
mov
lods
ret
rcll
mov
popa
xchg
fdiv
incl
mov
ficomps
or
dec
pop
mov
test
fisubs
sub
ss
pop
rcll
mov
jbe
insl
adc
mov
in
pushf
scas
jp
jp
in
jo
icebp
cmp
sub
arpl
sahf
mov
add
mov
pusha
cwtl
aam
or
jg
mov
sub
mov
cli
fisttpl
or
push
mov
push
add
add
add
push
pushf
cmp
cmp
dec
roll
add
dec
lret
leave
jmp
xchg
out
sbb
mov
sbb
or
add
popa
or
aad
gs
std
loopne
xchg
pop
jl
sub
sbb
jne
mov
scas
push
add
jmp
lds
inc
sbb
ret
aam
insb
faddl
cmp
popa
pop
ret
cwtl
push
cmp
pop
add
mov
addr16
push
jns
test
xor
imul
lret
int3
out
or
mov
cmp
lcall
sub
inc
xor
dec
push
pop
dec
shrb
dec
cmc
lock
in
adc
pushf
pushf
into
pop
les
lcall
dec
jp
cmp
mov
mov
call
negl
loope
adc
xor
xchg
cld
inc
pop
mov
aad
jle
pop
mov
nop
inc
jbe
pop
data16
pop
fnstenv
scas
addr16
lock
push
jnp
lea
sbb
cli
ret
insb
cmp
mov
xor
push
xor
cmp
call
push
jnp
mov
lret
ficomps
loope
add
pop
xchg
sub
xor
pop
cmp
icebp
test
sbb
and
insb
pop
jno
sar
xchg
and
mov
push
pop
shlb
mov
xchg
icebp
jge
insl
push
xchg
das
xor
push
les
xor
pop
dec
and
sarb
clc
cmp
pop
lods
cmp
xor
push
pop
xchg
mov
je
sub
in
pusha
int
xor
mov
stos
mov
push
xor
adc
jmp
push
pop
adc
or
daa
pop
inc
lea
push
outsb
sahf
push
push
in
or
cmp
adc
and
or
or
test
mov
mov
mov
nop
and
les
nop
cwtl
or
inc
push
jno
cli
jae
inc
xchg
cmp
and
adc
icebp
jno
insl
aas
in
pop
shlb
cmc
jecxz
xchg
or
cli
pop
out
jl
sbb
add
push
sbb
cs
mov
sbb
add
stos
dec
mov
dec
cmp
ficomps
adc
in
lods
loopne
iret
in
lds
cmp
inc
sbb
sub
cli
mov
push
xor
jg
jno
lea
pop
popa
add
test
and
jbe
arpl
in
aam
int
ret
call
pop
les
add
cmpsb
pop
push
and
cwtl
das
in
int3
adc
adc
lret
push
dec
and
mov
cmp
mov
fistpl
loope
movb
mov
sarb
clc
jae
loopne
dec
push
aas
ret
test
fnstsw
pop
push
shlb
gs
ficoms
jmp
add
mov
jae
fstpl
or
repnz
cmc
inc
or
testl
mov
aaa
jecxz
scas
push
mov
mov
fadds
je
push
fwait
or
push
insb
push
out
xchg
lds
dec
fstpl
pop
dec
sbb
dec
int3
loope
inc
cmpsl
jbe
mov
lds
xor
push
pop
dec
lcall
xchg
shr
cltd
fdivs
push
adc
cmpsl
popf
loopne
fstpt
or
push
push
push
dec
mov
imul
stc
sbb
into
inc
or
fs
xor
xchg
xchg
pop
adcl
jl
lret
inc
xchg
cmp
out
lods
sbb
sub
pop
pop
adc
or
insl
xor
in
lds
shl
lcall
cld
hlt
jne
lock
xor
inc
xor
xor
int
fbstp
or
sti
in
clc
and
jno
inc
and
clc
hlt
jmp
mov
dec
cwtl
add
imul
push
mov
das
pop
int
mov
dec
loopne
cmp
add
push
or
hlt
fstpt
mov
xchg
jns
imul
cld
out
imul
mov
out
and
jne
das
lods
fimuls
test
sub
dec
icebp
int3
pop
mov
mov
jno
and
call
xor
add
or
movsb
pop
pushaw
test
popf
push
cmpb
or
add
push
inc
add
imul
out
push
xor
test
fbld
xor
out
adc
jmp
adc
rorb
sbb
sub
mov
das
test
or
mov
addl
add
and
fildl
ja
ror
into
fldenv
sub
xchg
sbb
sbb
pop
add
stc
fisubrs
mov
or
sub
arpl
cwtl
mov
jae
sbb
sbb
push
sarb
into
mov
shrb
add
repz
pop
je
xchg
rol
pusha
adcb
lods
push
cmpsl
mov
xchg
cmp
push
in
bound
pop
cmp
mov
sub
ss
sbb
ror
pop
inc
jns
jno
push
mov
or
into
pop
xorl
cmp
std
jecxz
je
mov
lcall
push
addr16
pusha
int3
jmp
out
mov
xor
sbb
rcr
iret
mov
neg
shr
sub
stc
mov
cmp
dec
pop
mov
adc
ljmp
mov
sbb
out
or
push
outsb
andb
icebp
jno
sbb
cltd
ja
pop
xchg
cltd
mov
inc
mov
fcmovne
nop
xlat
negb
outsl
add
pushf
std
xlat
rolb
pop
cmp
and
xchg
mov
add
mov
orb
aad
leave
lcall
test
dec
add
cmpsl
pop
sar
pop
out
mov
lret
cmp
popa
jb
jo
rcrb
pop
mov
pop
pop
pop
xor
cmp
fistps
inc
or
xchg
jg
mov
push
in
push
int3
in
or
lock
ficomps
mov
test
in
insl
mov
pop
bound
xor
xor
add
xchg
adc
sub
insl
lcall
pop
into
or
sub
mov
adc
cld
call
out
cld
lods
sbb
dec
pop
lahf
mov
fdivs
pop
sarb
scas
aaa
pop
jp
mov
mov
dec
or
in
lock
inc
xorl
aaa
ds
test
nop
hlt
rol
sahf
push
test
add
sub
leave
sub
lret
push
add
push
xchg
dec
iret
mov
imul
sbb
testb
pop
mov
xchg
xlat
ficompl
adc
inc
test
ret
mov
test
inc
cmp
jno
jns
adc
xchg
and
push
cmp
jo
ret
push
xchg
dec
inc
bound
add
and
imul
punpcklbw
fdivr
and
movsl
stos
or
rcll
out
sub
adc
clc
pop
js
or
fdiv
mulb
cmp
push
fsub
push
mov
jno
je
mov
push
hlt
fcomi
inc
mov
js
push
iret
push
jmp
sub
sub
aaa
xchg
or
dec
ja
mov
rcr
fnstenv
and
sahf
outsb
aam
out
jle
aam
test
or
loop
sti
and
dec
mov
inc
inc
movsl
lods
sbb
sub
in
pop
lods
sbb
sbb
xor
mov
dec
stc
repnz
ret
inc
bound
sti
mov
sub
push
testb
push
sbb
subl
outsb
into
fcom
movsl
xchg
iret
jmp
enter
dec
add
jne
aas
jle
fwait
add
xchg
daa
xor
lods
and
mov
add
lods
repnz
stos
dec
dec
outsb
pop
inc
mov
dec
aad
aam
data16
mov
arpl
inc
arpl
xchg
adc
jle
cmp
repz
push
ss
pop
push
ret
shll
movsb
pop
sbb
and
inc
mov
xor
xchg
in
xor
repz
jecxz
dec
dec
std
push
cmc
fisttps
aas
test
dec
shr
mov
bound
mov
dec
in
shll
pop
push
pusha
in
out
sbbb
outsl
mov
xlat
sbb
sub
in
sub
movsb
popa
fistpll
push
xchg
hlt
dec
add
push
and
adc
in
mov
mov
add
stc
lcall
xor
sbb
es
lcall
cmp
pop
mov
loop
push
mov
arpl
repz
dec
pop
in
push
and
jo
lcall
and
pop
xor
stos
sbb
shll
or
sub
clc
jmp
push
push
repnz
bound
push
loopne
sbbb
pop
dec
adc
scas
sti
enter
jecxz
jnp
and
xchg
mov
inc
outsb
lret
aas
xchg
sbb
lock
pushf
divb
add
fdivl
aaa
cld
sub
or
pop
dec
or
adc
lods
dec
xor
sarb
lods
push
cwtl
push
adcl
adc
jnp
shld
icebp
cmpsl
fdivrs
outsb
pop
mov
mov
inc
dec
fdiv
mov
jmp
push
push
out
lcall
shl
lret
pop
jae
movsl
xchg
lcall
push
mov
sbb
ss
aaa
xchg
pop
cmp
out
sub
jnp
xor
mov
mov
push
aaa
adc
and
rolb
and
jbe
cmp
mov
or
mov
adc
pusha
stos
or
leave
repz
ret
sahf
mov
int3
mov
jle
in
mov
idivl
adc
jmp
mov
fwait
out
adc
aas
and
cwtl
xchg
imul
xchg
lock
scas
cmp
incl
mov
push
nop
or
imul
add
mov
aam
aas
ljmp
pop
cmp
cmp
push
dec
lea
pop
xchg
insb
into
xchg
repz
jg
movsl
mov
loope
outsb
sub
xchg
les
mov
jbe
jle
xchg
leave
fimull
scas
lret
loopne
sub
stos
ret
mov
loope
jne
in
scas
fisttpl
xchg
or
jb
adc
int3
xor
pusha
jo
fnstcw
adc
adc
in
and
or
dec
mov
pusha
lret
addl
sahf
sub
outsb
pop
aaa
sbb
xor
sbb
jb
jnp
pusha
adcl
sub
jno
adc
or
pop
int3
jbe
scas
stc
sbb
pushl
outsb
les
jecxz
mov
ret
and
adc
fidivs
sub
inc
xchg
or
xchg
aam
and
inc
loop
sub
hlt
add
fcoms
jle
cmp
pop
lret
imul
repnz
cmp
dec
push
mov
insl
xlat
and
aaa
lcall
subl
aad
nop
gs
pop
iret
and
push
mov
and
out
ja
mov
xchg
lds
sbb
iret
jne
mov
sbb
sarb
push
in
mov
hlt
lahf
add
or
sti
mov
inc
add
pop
out
fisubrs
jmp
push
aaa
sbb
pop
inc
cmpsl
ret
cli
mov
sbb
push
sub
out
dec
shl
in
xchg
sar
push
add
pusha
rcrl
jecxz
mov
and
jmp
xchg
or
push
sub
mov
ret
movsb
adc
loopne
sbb
xchg
push
mov
mov
popf
ret
imul
loopne
shll
aam
out
pushf
pusha
push
cltd
mov
jo
cltd
leave
dec
cmp
mov
add
push
cmc
mov
push
repnz
sub
jns
xchg
hlt
add
sbb
in
mov
or
mov
lret
rcrl
pop
pop
sub
and
test
jb
mov
lods
test
mov
dec
cmp
sti
cmp
shrl
arpl
sub
repnz
fiaddl
mov
lods
in
inc
lahf
scas
jecxz
dec
aas
xchg
int3
push
out
mov
fmull
ljmp
add
cmp
divb
fbld
das
jnp
cmp
lods
sbb
xlat
aas
dec
cmp
mov
push
cmp
add
out
mov
iret
mov
xchg
fmuls
push
mov
outsl
and
xorl
jo
out
jbe
sbb
add
fucomi
pop
dec
sub
add
push
push
into
inc
imul
lods
aaa
lea
icebp
and
icebp
add
mov
xor
test
add
sub
rcrb
addl
cwtl
cltd
lcall
aad
lock
xchg
pusha
xor
addr16
cmp
and
aaa
mov
repz
adc
faddl
ja
sub
xor
test
xchg
sub
sub
dec
rorl
cli
mov
jecxz
adc
mov
inc
lea
sub
loope
insb
push
xorl
sbb
popl
pop
pushf
lsl
jne
add
mov
gs
mov
inc
push
jge
fistpl
popa
add
bound
lods
fs
push
mov
add
jbe
pop
jle
filds
js
xor
inc
stos
adc
popf
mov
xor
fstl
push
xor
fld
lcall
xchg
orb
pop
adc
js
jns
and
xchg
call
stos
xor
jae
lret
xchg
push
sbbl
test
mov
mov
cmovnp
pop
pushf
ja
xor
push
outsl
and
xor
sub
pop
scas
inc
imul
xchg
xchg
xchg
pop
mov
cwtl
stc
in
pop
aaa
in
outsb
test
dec
or
add
sbb
jb
inc
out
mov
aaa
es
rsqrtps
xchg
jmp
mov
mov
inc
sbb
or
movsb
out
dec
jne
cli
ljmp
mov
mov
cltd
push
outsb
pop
mov
fstps
jecxz
sub
push
pop
scas
jle,pt
fisubrl
cmp
and
jno
ljmp
std
pop
jnp
xchg
push
inc
mov
std
loope
xor
dec
iret
jo
mov
push
cs
mov
stc
add
sti
mov
jne
xor
pop
hlt
into
jo
sbb
faddp
mov
or
scas
and
loope
ss
add
inc
xchg
push
es
mov
and
cltd
ljmp
cmp
xor
imul
sbb
mov
mov
push
aam
jnp
cmc
es
fs
arpl
sub
lea
outsb
xchg
pop
test
insb
mov
out
enter
pop
mov
lea
fbstp
out
lods
sti
cmp
popa
sar
or
push
inc
cmc
scas
mov
or
test
jb
sbb
xor
dec
fwait
leave
jae
jp
cmp
jne
xor
lods
repnz
ja
ljmp
dec
sub
xchg
jo
js
xor
hlt
jnp
and
adc
das
lret
pop
test
pop
xchg
jg
shlb
test
rep
outsb
mov
cmp
arpl
and
cmpsl
in
or
subb
push
mov
sahf
aas
test
and
hlt
insl
inc
pop
cli
ds
addr16
xor
mov
mov
js
mov
mov
movsb
popa
jno
addr16
add
fisubl
mov
sbb
test
xchg
mov
scas
xchg
cmp
cmp
icebp
ror
test
adc
cltd
pop
jmp
adc
orb
popa
cmp
sub
sbb
mov
and
xchg
into
icebp
pop
arpl
test
out
shrb
in
jbe
mov
mov
addr16
fldl
xor
mov
pop
inc
push
ret
fnsave
cmp
fisubl
jo
and
fs
sbb
aad
jae
adc
repnz
adc
mov
jno
sub
mov
mov
scas
movsl
lods
add
sti
dec
lods
or
xor
add
xchg
sbb
mov
sbb
inc
or
iret
jb
mov
xchg
lret
xchg
cwtl
sahf
xchg
dec
or
jge
jne
cli
orb
push
pop
std
and
mov
inc
jmp
mov
nop
aad
mov
imul
fcmovbe
push
in
fistpl
scas
pop
stos
mull
xchg
inc
addl
fnsave
inc
movsb
pop
dec
pushf
inc
ljmp
jecxz
dec
test
mov
push
test
xor
sub
xchg
lods
adc
and
fs
xchg
scas
mov
dec
pop
jl
inc
jmp
sbb
fs
test
ds
pop
fisubl
lahf
pop
or
xor
shlb
sub
lock
mov
dec
dec
or
sbb
sahf
add
leave
shll
dec
adc
aad
fsubp
xchg
and
mov
shll
push
cltd
mov
dec
cs
mov
jg
scas
test
ja
les
or
xchg
sbb
cmp
pushf
repnz
push
leave
inc
adc
mov
std
incb
stos
rcrl
dec
lret
idiv
cmpl
addr16
xor
cli
fs
fwait
shl
cmp
xchg
addr16
cmpsb
xor
leave
sbb
test
popf
loop
mov
test
cs
jae
es
and
add
ja
sbb
inc
mov
cmp
divb
into
scas
js
out
sub
push
enter
mov
adc
je
and
lahf
dec
daa
lret
jb
lea
pop
jae
pushf
in
xchg
out
pushf
xchg
xchg
sub
cmc
xchg
aam
scas
inc
cmp
xchg
sbb
fwait
scas
xor
inc
hlt
sahf
and
sub
mov
push
mov
inc
rcrl
cmp
scas
push
inc
adc
mov
pop
lock
mov
iret
xorps
pop
push
fisttpl
hlt
arpl
cmpl
cmp
ud0
xor
sub
jae
pop
xchg
clc
loope
imul
and
sbb
pop
cmp
stos
popa
leave
jl
lahf
test
jno
loope
stos
or
orl
fistpll
jg
dec
push
sub
sbb
sbb
push
adc
cmp
int
dec
add
push
inc
and
dec
jne
mov
fcoms
inc
push
jae
dec
pop
nop
lret
sbb
loop
not
push
mov
aam
lock
jnp
mov
add
or
push
pop
add
mov
mov
stos
les
int
sbb
repz
decb
xor
adc
cmp
or
out
xchg
jecxz
jl
adc
testl
mov
xorl
jmp
pop
andl
mov
sahf
and
ds
mov
rcrb
jae
out
pop
and
and
jns
xchg
add
ljmp
leave
dec
icebp
test
cmpsb
inc
sarb
jge
jmp
leave
int3
inc
pop
stos
mov
mov
sbb
or
inc
stc
mov
stos
lea
xlat
xchg
loopne
inc
inc
pop
scas
mov
add
sub
in
jne
bound
inc
sbbl
adc
fadds
scas
jns
les
inc
fsubs
shrl
ss
inc
mov
lret
xor
jecxz
xor
clc
imul
mov
fstl
xor
lods
daa
shlb
out
stos
dec
in
and
mov
popa
jae
imul
sarl
scas
mov
jb
fnstenv
scas
out
jle
rcll
jae
daa
push
fdivp
leave
push
fstpt
bnd
std
hlt
inc
mov
xor
fildl
mov
sbb
pop
push
jb
pop
cli
aam
xor
push
adc
or
sti
jb
movsl
jle
lea
subl
adc
or
mov
iret
fwait
xlat
cmp
lods
sub
mov
pop
test
adc
js
cmpsb
sbb
fldl
enter
jns
xchg
ror
stos
aad
ds
adc
shrl
pop
enter
inc
vminss
or
pop
dec
iret
cmp
mov
ret
lahf
dec
in
icebp
mov
xor
call
jg
xor
and
sub
jmp
cmp
or
fidivs
int
cld
xor
test
adc
mov
adc
ds
aas
xchg
push
and
aas
imull
fcomp
and
stc
inc
or
xor
dec
ds
lock
mov
in
mov
ljmp
cli
ds
cmp
or
mov
push
mov
sbb
jns
ljmp
loope
imul
push
loop
xchg
xor
aad
cmpsb
jb
or
mov
loop
lods
adc
mov
ss
leave
ret
call
adcl
mov
fmulp
sbb
mov
pop
pop
push
ret
fcompl
imull
fstl
stos
aaa
mov
shl
popa
sti
adc
ja
inc
in
jmp
push
jmp
ds
or
dec
push
and
pop
xlat
inc
and
cltd
push
inc
insl
push
sbb
jns
dec
xlat
pop
mov
gs
lcall
jns
cmp
fidivl
add
xlat
push
push
arpl
pop
sbb
loope
imul
insl
pusha
dec
lret
lock
pop
lret
or
push
cmp
mov
pop
scas
fucom
pop
sar
stos
or
and
iret
call
xor
push
mov
hlt
repz
aaa
pop
mov
aaa
jle
loopne
mov
lods
pusha
gs
mov
cmp
in
mov
lock
faddp
adcb
lret
ret
pushf
aam
pop
popa
sbb
inc
cli
sub
cmpsl
adc
outsb
aas
outsl
lcall
aad
jnp
out
pop
rcrl
fdivl
mov
loop
and
push
pop
mov
xorl
sbb
mov
iret
movsb
and
dec
cwtl
cmp
fcoms
hlt
dec
stos
lods
cmp
insl
imul
xor
cmp
cmc
test
mov
jno
mulb
jecxz
cltd
mov
push
cmp
aam
dec
clc
inc
pop
jae
fwait
shlb
or
dec
cmp
ja
xor
sbb
fisubrs
pop
dec
stos
fisttpll
add
data16
orb
sbb
pusha
cpuid
xor
xchg
das
or
jl
jb
cmp
pop
pop
pop
shrl
popf
movsl
aas
je
jae
out
inc
dec
lods
xor
xchg
fldt
repz
int
xchg
cmp
enter
and
xor
pusha
dec
shrl
in
mov
in
jmp
shll
pop
inc
xor
aam
dec
fldl
or
shll
sub
dec
icebp
pop
or
mov
dec
sbb
scas
mov
sub
lret
sub
aad
int3
in
mov
movsb
es
dec
xor
cmp
subb
pop
ffreep
std
fsubr
imul
mov
rol
mov
insb
add
mov
test
mov
mov
std
in
loop
int
jns
mov
js
iret
or
or
iret
sub
adcb
pop
or
xchg
enter
adc
lret
adc
push
pop
and
cmp
sbb
and
push
adc
mov
lahf
icebp
popf
arpl
pop
sarb
and
sbb
into
xor
test
lods
push
push
fldl
push
inc
sub
xor
sub
loop
mov
mov
inc
adc
and
add
push
dec
sahf
in
fsts
add
aas
xor
adc
sub
bswap
mov
leave
sti
test
cmp
pop
les
cld
fucom
cmp
loope
ja
mov
movsl
ds
jg
pop
out
fprem
loopne
aaa
decl
cli
dec
test
pop
popf
jno
dec
adc
sub
pop
mov
insb
les
test
loop
movntps
mov
test
in
inc
ret
pop
mov
sarb
dec
add
ret
rorl
sti
inc
mov
mov
dec
adc
imul
divb
insb
dec
jl
adc
jmp
fisubrs
int
sub
popa
hlt
aaa
ljmp
and
pop
pop
lods
scas
stos
add
es
repnz
jecxz
out
daa
loopne
jbe
stos
loop
popa
dec
inc
popf
xchg
mov
mov
movsl
cli
xchg
addr16
adc
lea
jb
imul
and
adc
mov
jg
mov
iret
pop
pop
or
cmp
mov
mov
adcl
cmp
jb
sbb
jne
lds
into
inc
jne
and
jle
jo
notb
movsb
xchg
test
mov
nop
je
out
jo
imul
scas
or
jbe
xor
mov
mov
push
ljmp
pop
mov
pop
int3
mov
dec
fistpll
sbb
mov
cltd
mov
xor
in
dec
mov
aas
xor
ret
loop
pop
in
mov
sbb
jmp
sarl
dec
push
xchg
mov
rclb
cmp
add
ds
mov
pop
es
sbb
or
ret
lret
add
cli
addr16
jmp
cli
in
lahf
xorl
pop
dec
ljmp
inc
aam
add
ljmp
mov
adc
push
cmpsl
rclb
sbb
stos
xchg
test
pop
push
movsl
jmp
call
fmull
cltd
xchg
popa
mov
inc
cmpsl
push
mov
add
pop
mov
idivl
divb
inc
and
push
aas
mov
pop
fmuls
out
mov
fisubl
arpl
pop
and
xor
jnp
stc
idivl
jp
lds
xchg
into
fsubs
mov
mov
jp
and
jp
out
sarb
push
xlat
jb
adc
mov
pop
or
les
inc
pop
sub
pop
cmp
and
mov
fs
rclb
fdivrs
hlt
adc
mov
imul
inc
jle
sub
in
shl
fistps
mov
inc
mov
jno
divb
mov
sbb
jmp
fnstsw
dec
adcb
cmp
je
mov
adc
dec
ret
nop
das
mov
add
aad
adc
bound
push
movsl
call
xchg
mov
lret
js
jle
adc
push
sbbl
loope
nop
cmp
add
mov
xor
and
mov
jle
push
cli
jmp
sarb
movsb
sub
jecxz
es
sbb
and
sahf
shlb
inc
sbb
mov
jp
cmp
cld
sbb
mov
mov
pop
arpl
loopne
incl
push
inc
mov
jg
sbb
pop
enter
stos
pop
repz
dec
sub
lods
dec
xchg
testl
adc
scas
outsb
mov
call
loop
out
mov
and
mov
mov
pop
rolb
pushf
push
jl
pop
xor
mov
into
adc
mov
pop
push
push
add
lods
add
daa
ret
ds
insl
int3
ljmp
sub
fwait
sub
push
sub
and
cld
aas
sbb
lock
cmp
push
hlt
sub
clc
sbb
or
scas
roll
in
sub
ret
aas
ljmp
mov
xchg
icebp
jecxz
mov
cmpsl
xchg
test
cwtl
xchg
dec
sarl
fs
and
mov
dec
das
mov
jp
mov
xchg
sbb
jp
lret
inc
subl
jmp
pop
fs
repnz
push
and
sbb
fs
mov
xor
cwtl
mov
aam
or
int3
or
push
repnz
cmp
idivb
mov
push
lock
sub
xor
cmpsl
stos
rolb
xchg
xor
ret
cltd
mov
in
dec
scas
imul
pop
adc
cmp
movsb
popl
xchg
mov
cmp
cmp
push
je
sub
insb
sbb
movsl
jnp
xchg
ret
mov
shll
pop
xor
mov
lret
xor
jl
fmul
daa
pop
sub
stos
inc
sbb
mov
and
pop
cmp
add
ret
aam
scas
lcall
or
push
dec
adc
push
push
push
das
sbb
xor
lret
or
vpsubsw
lret
mov
jle
pop
in
std
mov
dec
mov
sub
and
sbb
pop
mov
cld
or
loop
movsb
cmp
adc
mov
dec
xor
sub
lahf
xchg
fs
add
out
mov
loop
fsub
mov
jns
loop
mov
push
ror
xor
mov
imul
xchg
mov
pop
cld
push
push
pushf
mov
add
sub
cmp
xor
push
xchg
jp
mov
mov
add
fstpl
rclb
lods
push
mov
filds
pop
out
in
sbb
aad
adc
mov
sbbl
and
in
rcrb
lahf
scas
fldcw
in
movsl
cwtl
xchg
lcall
adc
jb
dec
xchg
das
jl
jo
inc
andl
jae
jo
outsl
xor
sbb
xchg
fnstcw
add
cmpsl
test
xor
loope
rcr
mov
repz
push
mov
jae
and
cmp
mov
xchg
add
xor
add
or
cmpsb
jle
xchg
sbbl
addl
xor
clc
pop
jnp
out
scas
inc
pop
imull
mov
hlt
cmp
enter
lret
cmp
inc
mov
fsub
jmp
mov
fs
stos
or
cmpsb
iret
push
das
dec
popa
jns
aam
int
jmp
sub
mov
mov
shlb
test
add
ja
cmp
dec
test
mov
mov
xchg
adc
cs
repz
mov
cwtl
addr16
add
loop
jne
fucom
mov
movsl
push
inc
std
lahf
xor
push
dec
add
outsb
stc
popa
mov
fstpl
fstpl
movsb
inc
xchg
popf
mov
and
sub
fisttpll
faddl
adc
popa
add
out
movaps
sub
leave
or
sti
xchg
lret
sub
mov
cli
mov
lods
mov
xchg
jle
xchg
enter
mov
ljmp
and
fsubrp
adc
fcompp
push
mov
nop
sub
cmp
outsl
xlat
or
sub
cwtl
xchg
outsl
pop
pop
iret
inc
push
push
out
xorl
and
adc
xor
mull
mov
xchg
inc
ret
in
jb
enter
repnz
dec
andl
pop
or
mov
jne
arpl
pop
addl
stos
loope
das
clc
cwtl
mov
je
mov
mov
adc
lahf
pop
addr16
mov
xchg
es
xchg
xchg
lcall
ja
adc
stc
jg
loopne
pusha
mov
mov
mov
adc
mov
imul
popa
popa
and
lahf
mov
ja
xchg
xorl
sub
adc
fnstsw
dec
or
imul
pop
out
mov
jp
sub
lret
pusha
es
adc
xor
or
dec
push
addr16
je
mov
dec
hlt
sub
loopne
movsl
movsb
addb
mov
pop
mov
mov
mov
xchg
pop
sbb
push
mov
add
rcrl
fs
sub
pop
adc
ljmp
in
push
shl
fs
mov
jae
pop
cmp
arpl
sub
adc
xor
stos
cld
shl
jmp
popf
lods
jle
leave
adc
mov
leave
divb
or
orb
sub
push
lea
push
cltd
shrb
mov
loope
daa
ss
adc
inc
push
fildll
lods
lahf
incb
xchg
mov
mov
cmp
jb
jae
pop
dec
icebp
daa
xor
negb
xlat
jno
popf
and
jl
scas
pushl
movsl
and
sbb
push
mov
pop
sti
loope
add
xchg
inc
outsb
mov
pop
xchg
xor
outsl
in
xchg
fnstenv
xchg
mov
jge
daa
insb
pop
jae
jns
dec
or
xchg
sub
pop
fldenv
scas
aad
and
cs
lds
mulb
sub
insb
and
mov
je
popa
fs
sub
loope
jbe
xchg
pusha
jmp
pop
leave
jmp
add
add
les
inc
jo
and
test
insl
add
or
repnz
fld1
ljmp
inc
jns
les
or
mov
mov
inc
pop
sbb
addb
aaa
into
ljmp
or
xor
xchg
ja
bound
pop
and
xchg
out
adc
push
sub
cmp
push
in
and
mov
repz
icebp
scas
scas
xlat
repz
decb
fsubs
int
mov
out
addr16
fimuls
inc
stos
pushf
or
stos
std
dec
mov
scas
ret
add
cmp
mov
aam
test
add
or
xor
ljmp
xchg
and
mov
fs
jo
or
std
mov
jbe
call
pop
rol
and
cmpsl
lods
aam
ja
sub
push
xchg
or
pop
mov
js
cmp
mov
fstl
push
xor
popa
xor
or
or
cmp
jne
pop
sbb
or
xor
or
and
cmp
in
shrl
lods
xchg
pop
dec
ljmp
test
and
enter
stos
jnp
xchg
lret
sub
insb
inc
les
fdivrs
mov
popf
popf
cmp
cmp
in
repz
pusha
movsb
daa
mov
push
popf
cmc
shll
inc
jecxz
scas
jl
sbb
fistpl
stc
int
lods
lahf
cmp
hlt
es
dec
dec
jae
mov
jbe
pop
inc
out
add
jmp
jle
rol
inc
imul
fsubrl
pop
imul
scas
es
adc
subb
sub
andb
fs
dec
pop
adc
stc
mov
cmc
sbb
cmp
pop
xor
push
dec
xlat
pop
inc
inc
jp
or
xchg
fmuls
add
inc
into
test
sahf
or
lcall
ficoms
test
sub
cmp
cmp
xchg
in
bound
stos
mov
pop
out
fcoms
push
dec
dec
or
jmp
push
into
out
loopne
inc
adc
aaa
leave
sbb
lock
ss
popf
lds
daa
icebp
mov
jb
shl
push
push
adc
cli
loope
fwait
cwtl
test
arpl
addl
cmp
or
inc
aad
or
mov
pop
popf
iret
xor
add
xor
jg
addr16
in
fwait
xchg
cltd
loop
popf
mov
push
jno
pop
movsl
arpl
pop
cmp
inc
mov
jbe
sub
cmp
dec
mov
push
push
xchg
mov
sbb
adc
and
xor
aas
jle
cmp
out
js
mov
loopne
in
subb
sub
dec
call
cwtl
in
rep
sti
dec
cmpb
popf
mov
movsb
inc
cmpsb
mov
sub
popf
push
jge
movb
lods
dec
jne
sub
fcmovb
sbb
push
jo
or
mov
mov
sbb
push
inc
push
ret
xchg
addr16
lret
jle
addr16
or
scas
xchg
cmp
adc
daa
jg
gs
pop
and
xor
pop
lods
cmp
push
jmp
pop
in
jns
mov
in
or
or
cs
int3
lods
cmp
jl
adc
imul
cld
shlb
call
iret
nop
push
dec
sub
push
and
pop
inc
mov
mov
mov
push
mov
scas
es
mov
aam
cmpb
jnp
pop
and
sbb
cmc
insb
jle
push
sti
hlt
mov
and
mov
lahf
test
jl
dec
cmp
sub
cmp
xchg
mov
mov
pop
mov
pop
pop
divl
and
xchg
jmp
aaa
jl
xor
stos
mov
jl
xchg
push
mov
dec
cmc
scas
or
mov
pop
stc
adc
inc
cli
out
sbb
adc
imul
add
jbe
pop
arpl
push
mov
call
xrelease
add
lods
in
xchg
push
ret
pop
cli
mov
xchg
and
inc
orb
xchg
gs
push
dec
jl
jge
dec
dec
pusha
leave
mov
push
cmpsl
jbe
addl
dec
int3
pop
mov
aaa
enter
add
adcl
jno
mov
jmp
xor
pop
push
out
dec
mov
repz
mov
mov
nop
mov
int
sub
xor
or
stc
fisubrs
sahf
sub
dec
or
mov
xchg
imul
mov
ds
sti
ja
aam
enter
or
inc
inc
lea
daa
sub
pop
adc
cli
or
rcrb
int3
xchg
outsb
jnp
ret
adc
lock
adc
and
pop
jmp
add
and
mov
iret
adc
xchg
mov
ljmp
rcll
add
stc
sub
popa
dec
insl
insl
stos
sbb
jp
adc
jecxz
cmc
scas
insb
sbb
jmp
cltd
lock
mov
outsl
out
adc
mov
sub
xchg
test
std
ljmp
fldenv
mov
xchg
jecxz
or
scas
dec
adc
mov
aas
int
pushf
lcall
and
call
mov
sub
mov
imul
cmp
mov
mov
pop
mov
push
imul
and
sbb
outsl
mov
jno
push
mov
xor
mov
lea
mov
push
shl
mov
jo
sub
stos
xchg
repz
inc
ret
shrl
push
push
and
ja
out
dec
leave
or
adc
mov
sti
push
mov
sarb
cmp
cmpsl
sub
pop
sti
mov
in
add
jle
and
pop
call
and
lea
mov
imul
loop
mov
in
je
clc
push
int3
xor
cmpsl
jbe
es
mov
cmp
mov
loopne
mov
add
add
mov
inc
cmp
dec
subl
les
cmp
xor
dec
cmc
outsl
adc
daa
fldpi
xchg
pop
aad
popf
mov
in
fists
adc
jne
gs
jns
lahf
xchg
and
or
outsl
xchg
pushf
push
std
cli
cmp
fisubrs
clc
or
add
fmuls
jg
dec
andb
mov
pop
cli
mov
aam
adc
fsubs
cwtl
mov
popf
je
lea
jbe
shr
mov
daa
lret
movsb
inc
jae
push
or
cmpl
push
push
int
adcb
in
inc
mov
loop
inc
mov
mov
xchg
sti
aas
out
push
adc
loop
inc
cmp
mov
cmp
push
push
or
mov
scas
jo
bound
out
adc
xchg
xor
pop
ret
insl
rcrl
inc
dec
fs
cwtl
imulb
push
jne
hlt
sbb
xchg
push
outsl
inc
push
ja
jno
mov
xchg
jp
pushf
push
decl
sub
adc
xchg
popf
push
sbb
push
adc
push
je
stc
cmc
pop
test
pop
ljmp
aad
mov
clc
mov
add
jle
data16
enter
adc
repz
inc
call
outsb
ljmp
jae
mov
xchg
sahf
add
cmp
js
enter
les
ret
sbb
cmp
das
in
push
push
fwait
cmp
pusha
jl
data16
inc
js
and
and
jle
scas
or
sub
in
add
jecxz
sarb
mov
mov
inc
sub
sbb
push
cmpsb
push
fsts
test
push
aam
sbb
daa
inc
pop
add
repnz
cmp
sub
push
jle
mov
jo
out
xchg
mov
dec
sub
ljmp
aas
stc
cmpsb
xor
cwtl
adc
into
dec
inc
cmpsl
inc
je
in
sbb
pop
xor
pusha
push
rcrb
lea
inc
mov
cmc
and
sbb
add
mov
xor
add
imul
cvtps2pd
loop
mov
dec
sbb
mov
sub
sbb
cmp
jle
mov
je
mov
xchg
jg
outsb
push
sbb
xchg
imul
dec
fnstenv
xchg
mov
dec
loope
and
sbb
lcall
mov
loope
fwait
imul
ja
cli
lds
paddb
in
int3
ds
sahf
adc
add
lods
fistps
push
or
test
ss
xchg
adc
call
jbe
jp
pop
fimull
fisttpll
das
add
gs
les
mov
outsl
out
adc
arpl
into
xlat
stc
xor
daa
insl
adc
shlb
rorl
cld
and
adc
outsl
dec
add
cmpsl
loopne
in
sbb
adc
and
call
xchg
jo
pop
insl
int
not
and
jmp
adc
ja
jns
xchg
aad
jno
push
test
popa
pop
mov
push
fstpl
outsb
mov
sub
sbb
sub
add
add
mov
out
jp
adcb
rsqrtps
sbb
cmp
pushf
push
push
push
jae
and
or
xlat
push
rcl
es
or
adc
xlat
out
cmp
or
enter
jns
into
aad
in
fstpl
or
cmc
fistl
xchg
fdiv
pop
sbb
mov
cwtl
pop
lods
xor
imul
mov
fnsetpm(287
mov
dec
loope
lret
push
insl
cmp
in
sub
in
push
jo
xlat
jg
in
pop
paddsb
repnz
jb
adc
sbb
jg
or
leave
lods
test
mov
hlt
pop
cmp
xchg
clc
lahf
fnstenv
insb
imul
jbe
or
xorl
pop
aaa
jne
jmp
cmp
add
ret
sub
fwait
sahf
dec
mov
xchg
js
jo
shlb
stos
das
jo
ret
pop
add
repz
pop
lret
dec
sbb
push
stos
xor
lahf
xchg
stos
out
jg
pop
notb
arpl
aas
dec
dec
scas
dec
add
loope
cltd
cwtl
jb
stc
push
add
fwait
cmp
out
sbb
mov
xchg
or
fsub
sbb
call
push
sbb
mov
sti
addr16
sub
dec
pop
inc
das
mov
xchg
inc
push
cmp
pop
xchg
stos
shll
xchg
outsl
cli
movl
shlb
dec
scas
ja
stos
mov
xor
lret
cmp
or
in
les
daa
jp
push
inc
aad
mul
out
sub
dec
pop
lret
mov
jne
dec
mov
mov
inc
add
lret
push
sarl
xor
stc
sar
xchg
mov
ja
xor
xchg
pop
mov
jge
or
iret
in
scas
mov
jnp
lahf
roll
mov
cmp
out
arpl
mov
stos
notl
mov
sbb
shrb
mov
aam
adc
inc
xor
jmp
mov
mov
xor
loope
add
xchg
fisubl
add
loop
or
in
pop
inc
pop
or
xchg
mov
into
push
mov
sarb
pop
mov
adc
xor
shrb
sbb
or
je
xchg
cmp
or
and
je
pop
into
rcrl
fdiv
test
or
ja
orb
dec
aaa
push
or
aam
cmp
into
subb
cwtl
or
fmull
and
insl
mov
jp
out
std
pop
mov
mov
sbb
icebp
aas
push
adc
jmp
push
cmp
inc
dec
dec
mov
stos
fs
daa
sbb
adc
jb
aam
test
cltd
std
sub
jae
inc
shrl
lods
pop
sub
repz
jmp
pop
push
adc
push
sub
cwtl
sub
xlat
dec
sbb
jg
push
dec
repz
stc
les
push
cmp
xchg
imul
dec
push
sahf
fsubs
stos
ljmp
iret
add
and
rol
mov
or
jno
into
cmp
sub
imul
and
outsl
adc
cmp
adc
ret
sub
pop
and
idivl
mov
cmp
dec
cmp
xor
mov
inc
ret
push
fsubl
lock
arpl
sbb
xchg
push
iret
inc
fnstcw
xchg
mov
iret
fdivl
mov
dec
jbe
cmpb
je
jbe
mov
popa
arpl
loopne
xor
loopne
add
sbb
xchg
xor
add
les
cmpxchg
fcmovnu
or
mov
nop
jg
xor
pop
mov
icebp
inc
push
outsb
int3
sbb
sbb
and
test
cmp
sbb
lcall
cmp
lea
stos
lahf
loope
fadd
adc
pop
cwtl
lahf
mov
xor
xor
ret
sub
xchg
pop
mov
dec
ret
rolb
inc
jns
andb
sub
dec
push
iret
jp
jle
pop
pop
out
sar
xchg
adc
cmp
xchg
sbb
jne
aam
loop
hlt
jp
das
sti
rcl
stos
push
testl
icebp
out
mov
xchg
sub
or
inc
movsb
sbb
add
jns
sahf
pop
mov
mov
arpl
and
fs
test
xor
push
std
imul
test
mov
mov
leave
jb
jge
sahf
and
dec
sub
pop
jle
insb
jb
jns
mov
adc
push
shlb
test
mov
xor
negb
sarb
xchg
mov
cmp
outsl
pop
mov
in
out
fdivl
sarb
ret
push
mov
pop
cli
stos
in
shrb
cmp
add
and
out
rol
pop
in
jb
mov
lods
push
adc
rcrl
cmpsb
enter
jns
cmp
fists
mov
xor
xor
mov
mov
cli
jo
ljmp
pushf
sub
lock
xor
push
xchg
int
xor
movsl
ret
push
mov
sub
in
sub
xchg
jp
push
lods
push
loopne
cmp
lret
lcall
fmull
adc
xor
push
mov
xchg
icebp
test
push
mov
inc
push
test
rcl
out
add
sbb
fs
fwait
shlb
push
xor
loop
ljmp
outsl
pop
pop
jl
cmpl
shr
inc
dec
call
mov
vprotw
add
movsb
or
loope
test
push
xor
sbb
cmc
out
lods
pushf
out
lea
mov
lahf
or
adcl
sbb
jle
fcoms
sarb
outsl
cmpsb
push
scas
push
dec
mov
mov
and
loope
lods
clc
sbb
jae
adc
or
test
leave
inc
scas
pop
mov
dec
mov
rolb
adc
icebp
sahf
push
icebp
outsb
xor
daa
call
add
daa
jecxz
xchg
lods
sbb
addb
rorl
add
adc
mov
mov
inc
in
dec
mov
sbb
push
jmp
mov
mov
aaa
adc
pusha
mov
or
testb
push
dec
cmpsb
fisttpl
test
and
data16
xchg
out
push
lret
mov
jmp
sahf
adc
pop
and
mov
clc
jns
pop
inc
in
push
mov
nop
dec
repz
lcall
cmc
xor
inc
xchg
loopne
mov
sbb
test
adc
xchg
addr16
and
cmp
js
int
inc
dec
and
ficoml
mov
out
stc
push
ret
sbb
ljmp
sbb
adcl
sub
add
dec
sbbb
movsl
repz
cmpsl
xchg
xchg
inc
mov
aas
les
repnz
popl
or
test
cmp
ret
cmp
adc
dec
cmp
adc
mov
cmp
pop
test
andl
cmp
sarl
sub
test
lret
stos
adc
add
mov
mov
adc
and
jl
cs
mov
pop
mov
cmp
jo
inc
jae
dec
pop
and
push
and
xchg
xchg
stos
jg
mov
loop
or
test
inc
push
addr16
dec
cmpsb
inc
ja
jle
insb
sub
mov
push
divb
and
scas
xchg
lahf
pop
test
rolb
add
sbb
arpl
mov
lock
or
sbb
sub
xchg
cmp
frstor
pop
jg
inc
cwtl
fdivrl
les
sub
lahf
enter
xchg
into
out
mov
sahf
movsb
jne
js
sub
sbb
cltd
clc
add
ret
and
sti
dec
testl
dec
pop
incb
setge
mov
and
enter
mov
mov
push
fcoms
test
fisubl
sbb
cs
mov
hlt
push
nop
jns
and
aam
int
mov
xchg
xchg
dec
cmc
xchg
sti
rol
pop
push
divl
lods
adc
sti
test
aad
cwtl
push
mov
scas
jns
insl
int3
fisttpll
sub
les
or
sbb
push
mov
inc
xchg
jl
popa
stos
outsl
mov
out
jae
rcll
xor
dec
sbb
sub
lds
test
ja
scas
push
cwtl
push
lret
sbb
inc
xchg
call
push
sbb
mov
fwait
jmp
push
imul
lahf
add
pop
sbb
dec
pop
inc
lret
and
leave
xor
xchg
std
inc
add
jle
xchg
mov
add
leave
in
inc
push
arpl
sub
in
repz
or
sbb
add
ds
dec
dec
fwait
iret
sub
xor
mov
sub
push
into
cmpsl
das
sub
jmp
push
leave
cmpsl
jle,pt
cmp
outsl
sub
lock
and
cmp
and
mov
repz
cmp
cmpsl
sbb
aaa
vmovaps
push
adc
push
in
shl
xchg
and
fbstp
adc
fwait
inc
or
xchg
addb
jge
repnz
cld
jno
xor
mov
push
jecxz
jno
mov
arpl
push
sbb
pushl
mov
sub
xor
lds
fsubl
int3
add
lret
lcall
mov
nop
mov
nopl
sub
mov
mov
test
push
jbe
sub
and
push
ss
mov
movsl
xorb
test
xchg
aas
mov
add
in
add
inc
jb
stc
adcl
fdivs
roll
sub
xchg
mov
mov
sbb
mov
hlt
jb
frstor
add
xlat
imul
push
adc
je
bnd
pop
jg
pop
insb
in
mov
cmc
jge
mov
lods
js
pusha
xor
mov
lahf
js
lds
decl
push
daa
shl
dec
sbb
adcb
xchg
sahf
dec
jae
aam
push
mov
inc
jo
rorl
jb
jl
dec
jne
xchg
into
scas
dec
xchg
pop
xor
daa
jecxz
push
enter
xchg
push
cmc
popf
lret
in
lahf
mov
pop
sti
sbb
dec
ss
pop
fsubs
test
pop
lds
imul
out
jle
sub
cmp
sbb
pop
mov
add
push
cwtl
imul
hlt
test
sbb
mov
pop
xor
lods
pop
sub
nop
rcll
mov
fbld
dec
call
stc
popf
mov
mov
push
sub
pop
sbbb
push
lds
jo
inc
xchg
cmp
stos
mov
pop
sahf
xor
push
jae
pop
popa
arpl
xor
dec
mov
cwtl
ret
mov
adc
iret
sbb
sbb
xchg
shrb
insb
push
in
aas
bound
shll
sahf
loopne
das
mov
call
jmp
jle
xchg
mov
inc
jg,pn
gs
cmc
xor
mov
sub
into
jmp
push
sbb
mov
cmp
movsb
pop
fcmovne
je
lods
and
inc
mov
sbb
inc
push
lret
push
add
mov
shl
cwtl
inc
icebp
int3
mov
test
add
lret
shll
mov
jg
sub
sarb
fistpll
daa
mov
mov
cmpsl
ret
lods
clc
push
bound
out
jno
cmc
ds
dec
inc
dec
stos
mov
insl
mov
add
icebp
loop
repz
bound
push
mov
and
mov
int3
out
mov
out
insb
dec
mov
inc
add
fcompl
inc
mov
cmpsb
out
cmp
cmp
add
sbb
fxch
into
scas
sub
pop
movsl
and
popa
jae
xchg
movsl
inc
mov
aam
sub
add
push
sub
pop
shll
push
pushf
mov
pop
inc
movsb
ja
stos
fstp
aaa
mov
inc
cmc
out
test
lcall
mov
mov
push
scas
jg
xor
scas
cmp
mov
jo
push
les
push
pop
out
sub
xor
and
mov
mov
aas
mov
lcall
pop
adc
jae
mov
jns
dec
insl
add
add
stc
jbe
in
push
lahf
filds
inc
inc
orl
addr16
orb
add
in
lahf
mov
popa
adcb
cmp
and
gs
frstor
stc
outsl
push
mov
sbb
sbb
lret
subl
aas
jmp
and
vmovapd
fidivrl
or
push
sbb
ds
movsl
out
clc
lock
cltd
sbb
mov
fmull
pusha
aaa
cmp
jo
adcl
jbe
push
add
sub
dec
xchg
pop
jno
dec
sbb
fcompl
ss
push
xchg
cwtl
jo
lock
fidivrl
xor
rcll
sub
jae
flds
xchg
daa
xchg
icebp
inc
dec
lods
mov
cmpsb
jmp
ds
lret
or
mov
sarb
inc
lods
cmpsl
push
mov
mov
pop
dec
cs
or
mov
pop
sub
mov
mov
sub
adc
lret
cmpb
jmp
lcall
ss
loope
in
inc
cld
lahf
pop
xor
pop
pop
sub
into
fwait
pop
daa
rol
mov
mov
stos
xor
in
mov
cltd
les
fildll
pop
cmp
pop
imull
in
dec
jns
daa
pushl
sbb
clc
scas
and
push
sub
mov
and
aad
pop
aam
and
jl
test
mov
mov
and
ja
mov
lea
pop
andb
xor
insl
pop
push
pop
mov
xor
das
dec
cmp
push
mov
push
add
fs
leave
dec
in
xchg
stos
lods
repnz
nop
dec
mov
imul
imul
movsb
jg
insl
lds
inc
push
push
inc
mov
test
add
in
jnp
test
adc
pmaxub
fidivs
mov
jo
cmp
jge
push
sbb
out
minps
in
ret
ret
data16
scas
les
ficomps
and
add
in
cmc
push
xor
aad
ret
push
mov
mov
lods
add
mov
sahf
mov
int3
dec
inc
sub
sub
popf
stos
sub
iret
pop
mov
testl
xor
pop
dec
lret
jns
mov
xchg
mov
sbb
in
push
jge
dec
push
pop
adc
ljmp
add
jmp
pop
test
jmp
pop
aam
loopne
cmp
pop
cltd
xchg
mov
and
mov
enter
mov
sbb
idivl
sbb
sbb
outsb
add
popa
adc
mov
insl
sbb
pop
lahf
psrad
andl
push
imul
into
data16
data16
enter
push
test
adc
and
push
push
jnp
and
outsl
iret
scas
xor
idivb
rcrb
cld
loopne
mov
xor
popf
xor
fcmovne
in
popa
dec
aaa
imul
cltd
sbb
xchg
add
or
dec
sahf
sbb
or
aas
outsb
les
arpl
and
jno
pop
xlat
or
pushl
and
in
mov
aam
fisubl
mov
jb
xor
pushf
xor
testl
xchg
xchg
in
xor
popa
out
cltd
out
rcll
lretw
sbb
insl
je
cmp
arpl
ret
dec
in
test
lret
ja
mov
and
pop
mov
pop
out
popa
push
js
add
dec
adc
pop
xchg
shll
mov
dec
mov
and
in
xchg
xchg
mov
and
add
sub
inc
mov
xchg
aam
mov
xor
jb
or
push
jne
cmc
lea
int3
inc
lea
lods
adc
lcall
xchg
sbb
push
xor
mov
or
inc
adc
and
and
jge
aas
xor
mov
addr16
leave
fadd
or
mov
push
dec
in
enter
out
xchg
push
jno
push
out
push
mov
xor
daa
add
ljmp
jecxz
xor
jbe
mov
sub
push
mov
mov
push
push
lods
pop
push
int3
lods
imulb
or
add
jmp
mov
and
pop
xlat
sub
and
inc
add
jp
jb
shr
in
incl
mov
xchg
and
scas
ljmp
cmp
ficoms
push
stos
inc
call
mov
inc
sbb
mov
out
icebp
mov
repz
insb
jge
into
add
mov
mov
xchg
aad
pusha
mov
jp
enter
andb
mov
pusha
dec
and
adc
adc
push
sub
cmp
cwtl
addr16
fs
xchg
cmpsl
dec
lea
test
test
test
or
lods
sahf
mov
jge
notl
test
pop
and
popf
clc
stos
in
mov
daa
mov
loope
aas
mov
sub
sub
sub
das
jecxz,pn
daa
aas
movsb
jno
lahf
dec
xor
fs
push
jns
or
add
adc
inc
fnstenv
fldenv
jle
or
inc
jmp
pop
add
mov
fstl
xor
push
xchg
sbb
out
repnz
adc
stos
sbb
iret
mov
lcall
rcrl
cmp
je
inc
xchg
cmp
jg
lret
mov
into
add
pop
and
sub
cmp
fdivl
jb
mull
lret
xchg
in
inc
jecxz
inc
les
sbb
cwtl
inc
xor
cmc
jne
idiv
mov
xor
push
push
addr16
popa
shld
imul
rolb
int3
movsl
test
mov
pushf
cmpsl
sarl
dec
inc
cltd
dec
js
adc
add
push
insl
arpl
lock
push
test
pop
cmpsb
scas
leave
sbb
jl
shll
cmp
scas
jb
mov
mov
add
and
push
inc
xchg
pop
inc
jmp
fisubl
mov
sarb
xchg
push
rorl
into
lret
cld
inc
mov
xor
popa
mov
repnz
jo
mov
aaa
fsubrl
fcoml
fs
cmp
popa
nop
mov
rorl
inc
scas
call
popa
mov
mov
push
xor
in
std
repnz
rclb
sbb
jb
or
or
sbb
call
mov
outsl
int3
or
jle
int
jnp
mov
jl
inc
mov
mov
or
mov
or
sbb
cmp
int3
push
xchg
test
addr16
repnz
test
cltd
mov
jno
jbe
lock
mov
add
add
and
sbb
sbb
push
imull
popa
rcrl
icebp
lds
or
in
xchg
cld
or
pop
inc
mov
mov
in
mov
push
rorl
add
subl
fstpl
sub
mov
cmpsl
stos
xchg
add
push
push
in
jmp
mov
subb
pop
push
jb
jge
mov
xchg
xchg
mov
adc
icebp
mov
scas
sbb
sub
jnp
ds
dec
adc
adc
mov
dec
aas
push
and
push
push
mov
repnz
ficoml
data16
xor
mov
lcall
sbb
out
xchg
mov
xorb
pushf
clc
jp
adc
mov
jle
and
adc
ds
xor
sbb
mov
push
pop
into
mov
fsts
sbb
and
adc
and
fildl
jae
inc
movsl
dec
xor
dec
adc
and
int
fmulp
lods
jmp
and
sbbl
push
sub
repz
pushf
scas
pop
in
push
ds
les
jge
arpl
jmp
enter
mov
jne
cltd
adc
add
or
mov
lret
push
loopne
shll
lea
jle
das
int3
fisttpl
testb
or
mov
or
lret
xchg
add
pop
xor
jo
adc
xor
repnz
loope
jno
and
std
mov
into
xorb
mov
pop
out
js
xchg
pop
push
rcl
fwait
add
sbb
gs
add
mov
out
or
in
adc
ja
jecxz
filds
mov
add
repz
out
out
xor
jle
jne
andb
xchg
in
scas
sub
xor
scas
mov
cmp
insb
repz
pop
enter
call
mov
xchg
iret
repz
popa
pop
ja
jge
inc
shlb
xor
xchg
cmp
outsb
cld
adc
out
mov
rorl
ffree
movsb
jb
scas
aad
pop
cld
jno
aaa
adc
repnz
movsb
shrl
ss
sbb
jl
jge
inc
sbb
sub
mov
mov
dec
xchg
cli
test
sbb
icebp
jl
xchg
lcall
push
jno
jl
incl
cmp
shll
ret
mov
incb
and
xchg
call
test
out
sub
pop
jl
scas
and
sbb
cltd
add
shlb
mov
adc
addr16
sub
push
pop
ss
jg
push
jl
fldenv
and
push
int3
ja
jl
stc
addr16
cmp
mov
clc
cmpl
pushl
mov
sub
mov
mov
adc
icebp
jp
lods
push
xchg
jo
iret
cli
cmc
lock
inc
add
scas
xlat
mov
insl
testb
push
ljmp
or
add
sti
xchg
mov
popf
pop
and
clc
enter
push
popf
lcall
cltd
xchg
das
in
cli
jne
and
jno
jae
stos
cmpsl
ljmp
sub
cli
in
push
mov
xlat
fwait
jnp
cmp
jmp
sahf
nop
cmp
mov
xor
cltd
loope
int3
mov
push
ficompl
out
cmp
adc
mov
mov
cmpsb
xchg
into
mov
adc
pop
sub
mov
push
pop
popf
dec
push
out
aam
cwtl
rep
push
push
jmp
dec
daa
arpl
fidivrl
out
jl
inc
dec
pushf
push
inc
ds
jecxz
xchg
pop
fisttpll
xadd
and
dec
cltd
sbb
jg
mov
fsubr
out
cwtl
sub
push
sbb
dec
clc
mov
hlt
fs
cmc
sub
loop
adc
ret
or
movsl
outsl
and
pop
xchg
and
stc
mov
das
es
pop
nop
xchg
xor
aad
adc
pop
jns
jp
dec
jp
jge
xor
push
inc
push
repnz
rorb
add
inc
inc
adc
push
mov
adc
cltd
sub
fsts
jno
and
and
popf
sbb
mov
in
mul
scas
mov
clc
sbb
add
movsl
pop
mov
jmp
loope
mov
jno,pn
lods
inc
xchg
filds
int
cltd
jae
test
movsb
adc
push
and
dec
js
cmp
or
ret
mov
push
sbbl
les
jnp
cmp
dec
dec
sub
cmpsl
xor
jno
pop
cmp
in
aas
js
call
inc
faddl
aas
mov
out
dec
lds
or
stos
sbb
scas
call
fisttpll
pop
mov
clc
mov
out
fs
jecxz
adc
fcoml
mov
sbb
cmc
fidivs
shlb
xor
pop
or
call
xchg
fucomp
pop
and
push
mov
pusha
insl
in
inc
fistl
xchg
mov
adc
rorl
push
or
movsb
je
aas
sbb
and
push
jp
push
sub
rol
mov
pop
mov
cmpsb
fisttps
inc
dec
pop
pop
dec
push
stos
add
xchg
xchg
jmp
mov
aam
jae
sahf
insl
test
inc
mov
jnp
mov
cmpsb
push
scas
xor
insb
dec
mov
lods
dec
mov
cld
rolb
outsl
pop
outsb
or
inc
xor
loop
sahf
sub
sahf
out
push
pop
popl
pop
ret
cmc
mov
out
add
int
jne
test
mov
inc
xchg
add
lock
cmp
lea
pop
jbe
xchg
mov
push
sti
and
popf
lcall
stos
js
test
cmp
jo
and
scas
lret
lret
cld
cmp
xchg
push
aad
pop
stos
fidivl
das
js
push
addr16
mov
fwait
dec
adc
mov
lret
mov
popl
pop
ret
push
push
jle
pop
inc
in
pushf
push
add
and
xor
data16
adc
or
shrl
mov
clc
fnsave
jae
mov
jg
movl
jo
mov
addr16
cmp
cmpb
lret
es
out
sti
push
pop
scas
idivl
loop
outsb
aas
cmpsl
movsb
stos
or
rcrl
stos
je
in
fiadds
xchg
xor
add
fistps
mul
mov
pop
insb
adc
lods
pop
imull
cmp
and
aam
rcrb
insb
add
rolb
push
inc
imul
lock
jl
pop
dec
xchg
push
mov
pop
mov
ja
mov
insb
ss
in
xchg
mov
cmp
mov
mull
xor
icebp
push
pop
xchg
sarb
push
xor
cmp
inc
movsb
movsb
rcrb
mov
shll
shlb
cmp
xlat
jg
adc
mov
call
mov
mov
lods
cld
jl
shll
xchg
sbb
cmp
call
sub
add
sarb
sbb
add
stos
hlt
and
mov
pushf
out
lret
jnp
push
movsl
mov
pop
aad
push
mov
incl
mov
push
and
aas
jmp
jge
es
mov
sub
stos
lret
nop
test
jmp
addr16
fisttpl
popf
mov
sbb
push
pushf
fisubs
daa
mov
xor
xchg
cs
and
ret
push
add
fldt
or
ret
cmpsl
sbb
dec
xor
pop
adc
call
mov
inc
push
mov
xchg
ljmp
xchg
fistl
xchg
cmpsb
ss
cwtl
outsb
pop
aaa
sbb
inc
jnp
add
mov
push
ja
mov
hlt
cmpsb
dec
dec
jmp
lcall
mov
adc
jmp
and
cmp
lahf
xchg
je
out
mov
or
adc
stos
and
pusha
push
dec
sub
out
rcr
or
jecxz
mov
test
sarb
push
mov
adc
push
por
pop
push
mov
xor
push
mov
mov
out
adc
ja
push
sbb
clc
pop
arpl
mov
nop
mov
mov
popa
mov
prefetcht0
push
fsubs
stc
subl
inc
push
bound
xchg
into
imul
ljmp
mov
loopne
and
jp
add
mov
and
adc
int
scas
and
fildll
and
in
stc
lods
cli
sub
cmpsl
add
adc
push
arpl
or
movsb
push
and
lahf
je
pushf
dec
add
test
dec
xchg
pop
sti
es
mov
push
mov
call
xchg
xchg
outsl
mov
lret
xor
add
rolb
add
jae
mov
cli
insl
sti
cmpsl
add
stos
and
xchg
and
in
dec
sub
movb
lea
pushf
pop
inc
fadds
test
int
or
fsubp
bound
stc
push
xor
add
mov
shlb
add
inc
rcrl
lret
inc
xchg
pushf
xor
mov
or
adc
ret
scas
jecxz,pt
fdivrl
addr16
xchg
mov
mov
cwtl
sbb
xor
cli
inc
mov
test
xchg
xchg
jb
das
mov
cmp
fwait
sbb
jnp
mov
mov
fidivrs
xchg
mov
adc
movsb
adcl
mov
sub
mov
push
push
pop
ret
cmp
xchg
faddp
rcl
hlt
faddl
ds
subl
xor
fimuls
fsubr
dec
mov
ljmp
call
pop
add
ret
cmp
pop
pop
das
add
xchg
sbb
fstps
pop
and
stos
mov
or
sub
loope
and
mov
enter
andb
jg
cmp
mov
cmp
imul
mov
rcll
xchg
xchg
inc
cmpb
popa
mov
mov
loope
lret
jecxz
out
and
jno
xchg
dec
push
xchg
add
sbb
dec
adc
js
xchg
bound
push
pop
in
enter
sbb
lret
hlt
fwait
sub
mov
inc
mov
xchg
call
je
fistpll
js
lahf
adc
push
or
cld
jg
or
out
jae
jo
out
outsl
popf
insb
push
xorl
sub
inc
int3
push
pop
loopne
lock
addr16
add
sbb
adc
stc
mov
jb
lods
loopne
dec
iret
mov
js
jg
sub
loope
cwtl
jno
pavgw
push
or
mov
adc
push
and
xchg
push
nop
ljmp
in
mov
xchg
call
popa
xor
mov
xchg
mov
pushf
pop
push
insb
pushf
mov
mov
sub
std
aaa
mov
mov
jmp
inc
pop
lahf
lret
add
adc
jbe
sub
shrl
pop
or
cmp
movsl
int
mov
mov
mov
cmp
jg
adc
jge
dec
add
es
out
popf
add
and
dec
inc
xor
xor
out
es
shll
dec
pusha
and
add
test
lods
jmp
sub
in
mov
or
dec
jmp
fbld
das
sti
jns
cli
adc
roll
stos
jge
test
sub
or
int3
enter
mov
lahf
push
sub
movsl
mov
or
sub
in
push
cs
pushf
arpl
mov
insl
add
stc
xor
stos
cli
inc
and
and
and
mov
pop
roll
xor
jp
fimuls
push
lcall
aad
shll
dec
popa
aas
das
push
mov
jno
imul
lret
jecxz
out
mov
divb
xlat
test
lods
mov
mov
and
movsl
fcoms
out
xchg
jnp
sub
lcall
movsb
repnz
movsb
xchg
jns
in
cmp
push
push
sarl
rorb
cmp
sbb
stc
andb
ret
xlat
aas
cli
xlat
test
adc
push
lea
fsub
mov
and
aas
daa
ja
push
jmp
cmpsb
sbb
dec
pop
sub
fsts
xchg
sarl
mov
imul
jne
ja
sub
add
push
sti
jae
or
xchg
leave
adc
sub
out
xchg
rcrl
push
iret
or
pop
pop
cmp
and
shll
dec
or
sar
int
push
xorl
lock
push
push
loop
in
ja
sbb
xchg
mov
push
pop
pop
adc
sarb
jmp
cmpsl
daa
jb
or
enter
mov
pop
sahf
fisttpl
frstor
decb
int3
pop
mov
aas
push
cld
mov
cmp
xchg
stos
or
cli
mov
cmpsb
jecxz
jp
xchg
aas
and
stos
xlat
xor
jnp
cld
inc
mov
mov
push
mov
mov
dec
add
push
add
xchg
dec
xchg
cmp
xchg
cmovbe
sub
call
pop
out
gs
test
aaa
decl
jge
adc
jmp
or
xchg
aaa
jmp
and
loopne
add
imul
call
mov
les
xchg
cmc
push
movsl
xor
enter
dec
adc
push
mov
mov
pop
lds
sbb
adc
divb
pop
repnz
movsl
adc
cmp
mov
cltd
xchg
mov
inc
mov
in
sub
cmp
xchg
stos
mov
scas
mov
pop
iret
push
imul
movsb
dec
adc
insb
sub
ret
std
mov
in
lret
outsb
xorl
testb
jb
mov
ret
scas
lods
push
in
hlt
push
test
inc
ficoms
pushf
fs
sub
jecxz
fsubs
mov
sub
loopne
inc
imul
testl
push
addl
lds
in
mov
popf
jecxz
shr
mov
js
xchg
shlb
mov
cmpsl
rclb
inc
rolb
xor
inc
pusha
inc
cmp
jo
inc
int
aam
ret
orl
inc
stos
insl
mov
lret
test
fistps
jae
add
stos
lods
cld
push
adc
dec
insl
in
ja
aaa
out
out
aam
cmc
pop
mov
cmpsl
and
shl
ljmp
lret
jb
rorb
je
and
mov
xchg
mov
mov
lods
pop
and
and
jmp
mov
dec
jo
fiaddl
and
in
push
mov
xlat
in
mov
push
ret
aam
cmpsb
fstpt
xchg
fwait
mov
frstor
and
jecxz,pt
xor
arpl
cli
jbe
sub
push
sbb
xorb
mov
mov
mov
shll
mov
or
or
insl
pop
push
mov
repnz
sbb
lret
mov
adc
into
rol
sub
push
in
lret
adc
sub
mov
dec
jle
pushf
je
mov
inc
pop
cmpsl
in
xchg
outsl
into
in
es
daa
ret
shrl
out
jg
mov
and
add
sbb
ret
ss
xchg
imul
test
imul
mov
dec
jno
daa
dec
dec
and
aaa
nop
aam
daa
lret
xlat
aaa
sub
xor
iret
push
jmp
outsl
mov
movsb
pop
fsubrl
mov
xor
loopne
mov
adc
ret
mov
aas
push
and
adc
adcb
push
mov
cld
lds
stc
loopnew
fsts
repz
mov
mov
mov
js
insb
jbe
arpl
shrl
shrb
cmpsb
push
insb
cld
sbb
pop
inc
add
and
ljmp
and
pop
sahf
fsubrl
sti
xchg
ja
add
shlb
inc
dec
pop
pop
xchg
bound
lods
out
mov
aas
into
push
or
into
testl
iret
mov
andb
add
pop
push
pop
cmp
jnp
into
lahf
push
mov
into
arpl
xor
jne
cwtl
dec
sbb
xor
and
das
mov
sahf
jp
jne
and
mov
and
out
mov
sbbl
rorb
inc
inc
jb
mov
pop
push
out
or
sarl
cli
stos
cmpsl
repnz
out
imul
and
sbb
lret
ja
mov
shlb
out
scas
or
push
pop
sti
arpl
scas
ds
cs
push
adc
inc
je
das
push
fucomi
mov
outsl
gs
jge
add
jns
cld
test
dec
cmp
jmp
jo
clc
xchg
pop
or
repnz
mov
in
xlat
jbe
sbb
lret
loop
adc
jo
pop
sbb
or
mov
sarl
push
push
rol
lea
mov
or
push
mov
into
popa
rorl
test
xor
cmp
into
stos
sub
xchg
mov
loope
or
out
pop
push
test
jno
pop
xor
and
inc
xor
leave
pop
mov
pop
sub
adc
sbb
cmpsl
inc
bound
stos
ds
test
inc
xchg
mov
xor
xchg
mov
and
int
loopne
out
mov
and
sbb
stos
scas
pop
or
shlb
je
sub
xor
into
into
pop
xchg
scas
repnz
leave
fisubs
and
or
mov
outsb
xchg
sahf
add
and
and
push
inc
jp
mov
jae
dec
xor
mov
aam
sbb
adc
nop
cmc
cmp
mov
testl
adcl
mov
pop
or
mov
bound
xchg
lods
sub
mov
inc
or
inc
inc
inc
fucomip
iret
lods
cmp
pushf
mov
mov
lock
stc
lods
xor
mov
fbld
jg,pn
cltd
out
mov
insl
cmp
xor
popf
mov
ds
jp
xchg
into
lods
push
push
pop
and
rep
sarl
outsb
int
pusha
mov
dec
sub
clc
xchg
pop
gs
scas
call
adc
mov
outsl
sti
xchg
stc
rcll
mov
or
rolb
outsb
cmp
sbb
inc
pushf
mov
inc
pop
mov
int3
lods
and
sub
adc
xor
ret
xor
iret
stos
subl
mov
pusha
push
add
mov
or
sub
xor
xchg
cmpl
xchg
dec
inc
pop
into
out
push
stos
fnsave
and
out
stos
es
adc
std
push
or
cmp
inc
sub
and
mov
add
push
ds
xchg
or
testl
gs
aas
je
jo
cmc
popf
push
xchg
mov
sub
stos
repnz
pop
out
xchg
add
jp
in
sub
in
mov
jmp
pop
add
push
fucomi
xchg
fimull
fs
fstl
and
jnp
aas
mov
aas
pop
ds
cld
cmp
cmp
lock
dec
jo
cmc
mov
sbb
push
mov
mov
stc
out
mov
arpl
cld
dec
sub
flds
jle
xor
test
clc
mov
in
push
jbe
jne
aaa
mov
rcll
xchg
orb
imull
arpl
dec
cmp
xchg
or
cmpb
adc
das
lock
xchg
ret
pop
jne
jo
mov
xor
adc
adc
mov
jp
aam
sbb
testl
jg
inc
mov
inc
test
scas
jbe
inc
dec
insl
cltd
pusha
dec
data16
fnsetpm(287
mov
add
push
push
cs
sarb
pop
dec
xchg
nop
jl
lock
cmc
mov
sbb
mov
push
outsb
cmp
mov
and
out
sbb
fisttps
adc
fistpll
or
push
arpl
dec
dec
push
inc
jp,pn
outsl
stos
mov
test
adc
push
stos
lcall
sub
cmpsl
mov
and
js
add
xlat
mov
out
cmp
pushf
xchg
aaa
test
sub
cmp
or
mov
push
inc
test
push
xchg
add
xchg
mov
ja
push
mov
rcrb
mov
sub
inc
ja
adc
lahf
pop
inc
pop
mov
mov
or
inc
xor
test
jle
mov
jecxz
dec
jmp
inc
lret
push
mov
dec
repnz
outsb
add
adc
fstpl
xchg
xor
out
sub
and
adc
dec
pop
push
sub
jnp
sbb
subb
xchg
ljmp
sbbb
cmc
aaa
or
and
ja
cmpsb
mov
fstpt
scas
jmp
pop
mov
inc
mov
imul
cli
sbb
jae
movsl
cmc
pop
stos
or
jmp
les
pop
cmp
ret
subl
in
out
sahf
sbb
outsb
or
cltd
cltd
mov
test
lds
mov
inc
shr
imul
cmp
cmp
outsl
mov
sub
sbb
je
mov
sub
mov
mov
call
test
sbb
sub
or
sarl
sbb
rorb
pop
jnp
ljmp
sti
or
iret
and
dec
dec
sub
daa
outsb
jl
pop
in
xor
push
push
fisttps
out
mov
inc
aas
mov
mov
addr16
dec
lahf
stc
outsb
data16
pop
hlt
adc
dec
add
hlt
push
sub
dec
or
mov
pop
dec
clc
sbb
add
xchg
mull
adc
addr16
xchg
adc
faddp
pop
movsl
gs
roll
adc
mov
cmpsl
cmpsb
cmp
jo
pop
test
repnz
filds
cmpsl
add
xor
mov
sub
clc
hlt
xchg
cwtl
shrb
cmc
mov
pop
mov
outsl
into
dec
movsb
pop
adcl
incl
jl
orl
push
adc
ret
out
inc
ret
adc
clc
aaa
sbb
repnz
jnp
shl
cmp
mov
imulb
xrelease
fsubs
in
dec
ja
dec
push
aaa
cmc
sbb
push
ss
jge
add
lea
test
data16
push
sbb
sub
ljmp
lock
out
add
into
xchg
dec
repz
pop
xor
lds
in
insb
xchg
shl
cmp
in
rcrb
xchg
push
test
jl
push
scas
stos
jne
jns
mov
and
pop
mov
test
mov
arpl
sbb
es
cmp
fwait
inc
mov
aas
jg
dec
nop
js
lcall
cmp
stos
fxch
or
lods
mov
jns
leave
or
xor
pop
cs
mov
arpl
imul
inc
dec
mov
add
pop
push
fcomps
imull
mov
xchg
mov
dec
xchg
adc
lahf
lods
js
pop
fstl
sbbb
inc
into
mov
or
test
imul
xor
pop
and
or
pusha
xchg
rcrl
pushw
in
add
lods
ljmp
xor
fs
xor
rcrl
and
add
xchg
movsb
or
pop
cltd
fs
jo
dec
sub
mov
xor
cwtl
stc
pop
adc
add
icebp
fildll
es
xchg
mov
icebp
ds
popf
or
xchg
add
arpl
repnz
mov
dec
cld
cltd
aam
xchg
pusha
das
mov
shll
push
mov
push
lret
push
cmp
movsb
loop
mov
sub
adc
sbb
push
adcl
stos
das
push
jp
test
fstl
sahf
cmp
ret
lea
iret
mov
aam
pop
outsb
popf
lods
bound
push
ret
imul
mov
sub
bound
adc
adc
add
mov
push
xchg
jp
sbb
mov
xchg
jbe
mov
mov
lods
mov
or
xchg
push
push
out
jne
pop
repz
pop
movsb
inc
add
jo
leave
and
lods
pop
push
fwait
add
mov
pusha
add
push
mov
xor
out
inc
shlb
loope
inc
fdivrl
iret
push
xchg
lea
or
pop
cmp
sbb
jl
bound
mov
dec
out
sub
fdiv
pusha
sbb
stc
shll
pop
stos
sahf
dec
fcoml
mov
rorl
cld
inc
cltd
mov
test
pop
lcall
int3
push
shll
lahf
lds
scas
rol
popf
nop
leave
adc
and
xchg
mov
mov
es
jnp
and
xchg
ljmp
pop
call
xchg
out
and
pop
insl
push
xchg
jmp
xlat
mov
pop
or
xchg
push
inc
call
je
test
aam
repnz
lock
dec
mov
xchg
sbb
test
fidivrs
scas
movsl
and
sbb
aad
push
fisubs
mov
mov
push
mov
in
ret
pop
clc
sbb
out
daa
pushf
xor
dec
jae
cmpsb
aad
mov
outsl
and
fisubl
xor
daa
ss
repnz
push
pop
inc
sbb
cs
mov
mov
lahf
sub
jp
mov
mov
insl
lds
js
xchg
sub
dec
jp
mov
and
lret
iret
fwait
and
je
jmp
pop
fwait
pop
divl
sub
es
cld
add
xchg
and
sub
pushf
or
pop
rcl
popf
lea
in
das
int
lock
dec
neg
dec
aam
lock
pop
sub
adc
sbb
dec
cmp
cwtl
jb
in
cld
and
into
out
cmp
shl
hlt
mov
add
inc
ja
shll
mov
sbb
js
dec
int3
fstl
mov
mov
outsb
pop
pop
cmp
mov
sbb
xor
jns
or
cmpb
inc
push
mov
add
dec
xchg
pop
aad
add
fadd
test
mov
pop
addr16
aam
imul
push
mov
cmpsl
pusha
adc
jg
insb
mov
or
int3
xchg
xchg
inc
rcrb
loopne
rorl
aam
aam
inc
dec
pop
out
ret
mov
add
push
sub
mov
cmp
arpl
lret
mov
lret
scas
mov
mov
mull
jle
lahf
mov
fmuls
daa
lret
mov
ss
sbb
ds
insb
movsl
push
jle
out
sub
pop
push
sbb
mov
leave
mov
insb
or
mov
pop
mov
mov
clc
xchg
or
scas
push
mov
cld
jmp
sbb
adc
sub
adc
test
mov
cltd
fisubl
aad
add
aaa
stc
pop
std
sbb
push
jae
mov
aas
mov
pop
test
aam
xchg
movsb
sub
inc
das
stos
imul
sub
mov
jne
mov
orl
fstpt
outsl
jb
mov
hlt
pop
jle
arpl
mov
pop
mov
or
cmp
xchg
out
enter
inc
push
test
movb
int3
rcll
mov
mov
fcompl
mov
rcrl
std
mov
shll
xor
pop
mov
add
stc
sub
sbb
hlt
jle
push
xchg
dec
xchg
mov
or
mov
fcompl
jnp
dec
mov
inc
or
lcall
dec
cs
in
ret
pop
ret
mov
push
and
pop
adc
fdivrs
je
pop
lcall
jmp
stos
jp
sbb
and
xchg
shrl
adc
bound
jmp
cmpsb
je
cmp
mov
pop
popf
xchg
push
jg
push
pop
std
mov
jp
cmpsb
shrb
ficoml
mov
mov
pop
call
je
stos
clc
mov
cs
mov
mov
out
push
es
js
mov
imul
imul
add
stc
adc
push
cs
jmp
mov
jge
cmp
add
fistps
clc
mov
test
loopne
mul
mov
mov
rclb
cltd
rorl
leave
stos
out
jb
inc
cmp
sbb
mov
in
xor
jle
cmpsl
dec
or
sbb
stos
cs
push
pop
dec
ret
pushf
dec
call
adc
in
data16
dec
pop
mov
or
pop
jmp
shrl
dec
pusha
loopne
push
jnp
or
loopne
shl
cld
test
inc
jno
imul
and
int3
inc
shll
or
lds
inc
sub
mov
sbb
addl
dec
lea
pop
dec
and
shlb
or
mov
or
sub
aaa
scas
fists
push
jmp
dec
into
jl
xorl
xor
push
jle
mov
push
out
jbe
xchg
insb
stos
iret
in
push
call
xchg
sti
in
fmuls
mov
inc
idivb
movsl
add
out
cmp
mov
stos
sahf
mov
mov
sub
pushf
jecxz
je
es
jne
sub
push
out
dec
lret
jo
adcl
leave
xchg
leave
outsl
icebp
sti
neg
push
testb
insl
mov
push
rcll
inc
mov
sbb
loopne
inc
fdivl
dec
or
pushf
mov
xchg
inc
je
xor
cmp
sub
les
cmp
push
stos
mov
dec
cmp
jns
push
mov
cli
cmp
test
repnz
xchg
and
cmp
lds
lcall
aad
add
pop
mov
lret
mov
xchg
adc
mov
mov
lods
jmp
test
andl
cmp
in
movsb
stos
push
xor
add
xor
push
lahf
out
vmaxps
push
pop
das
rcrb
lret
lock
inc
push
adc
shrl
inc
enter
stos
test
or
dec
push
out
mov
xor
xor
sbb
test
idivl
mov
insb
lret
fisttpl
sub
jge
int
pop
pop
inc
cmp
mov
jbe
popa
pmovmskb
push
std
mov
mov
std
idivb
inc
and
pop
rcrl
jae
jmp
or
jmp
testb
lcall
lea
ja
add
push
fistpl
mov
adc
or
repnz
test
pop
lret
pop
dec
clc
xchg
leave
mov
xchg
mov
adc
dec
out
div
fistl
sahf
jmp
mov
js
mov
ljmp
out
pop
cli
jbe
push
jecxz
imul
shll
ljmp
int3
or
xchg
mov
inc
xor
daa
xchg
inc
insl
rcl
ret
cmpsl
pop
push
or
xchg
icebp
in
or
push
xor
pop
les
mov
data16
cltd
jmp
xor
lea
in
arpl
dec
mov
sar
dec
jns
mov
call
pop
lods
cmp
push
dec
lods
aam
out
dec
dec
ds
divb
push
rol
xchg
xchg
das
mov
shll
lcall
cmc
push
xchg
roll
sarl
inc
jle
or
cmp
and
jl
mov
rcr
mov
or
xorb
inc
repz
push
or
inc
sahf
into
rcl
test
scas
lea
and
xchg
sub
mov
xchg
pop
jae
push
sarb
adc
add
fbstp
jno
popa
inc
sar
jle,pt
inc
cli
lcall
pop
pop
decl
inc
xor
cmp
xorl
mov
std
mov
pop
mov
dec
and
xchg
cld
mov
lret
inc
cmpsl
dec
cmp
mov
les
and
sbb
adc
mov
or
popf
mov
inc
or
pop
mov
xor
test
push
cmpsl
xlat
clc
and
outsb
insl
add
push
notl
pop
and
imul
loopne
xor
in
dec
jno
sub
xchg
enter
cli
cli
sub
imul
inc
imul
or
das
pop
xchg
and
outsl
dec
mov
bnd
fs
stos
xor
fnstenv
adc
outsl
out
fwait
xchg
je
test
int
sti
mov
dec
mov
daa
mov
xchg
gs
sbb
pusha
les
cmc
jne
push
dec
push
xor
pop
dec
xlat
jecxz
push
hlt
rcr
xor
push
fisubl
jmp
jb
test
mov
xor
lahf
xor
sub
push
pop
fcmovu
int3
movsl
in
sbb
scas
roll
or
cmp
imul
fmul
cmp
mov
in
sahf
sbb
add
cwtl
dec
aaa
bound
rcrb
repz
outsl
mov
push
data16
adc
clc
mov
xchg
inc
xorb
ja
xchg
sub
int3
subb
mov
jmp
mov
and
jmp
xchg
jp
jge
mov
bound
mov
ds
push
and
loope
fcmovnu
xchg
adc
xchg
adc
mov
pop
dec
pop
dec
or
dec
out
pop
stos
add
ljmp
lahf
or
push
or
adc
mov
push
push
mov
into
ds
add
or
mov
cltd
ja
xchg
inc
icebp
mov
mov
jno
fsub
mov
push
inc
mov
rolb
jg
push
cltd
pop
mov
mov
out
mov
push
jno
dec
jp
popa
cld
push
daa
jo
test
bound
cmc
fcompl
sub
aas
aad
jmp
movsl
or
addb
mov
and
ljmp
popa
loop
jl
lahf
sbb
jbe
jle
mov
sub
jl
imul
lret
dec
movsl
bnd
lods
or
shlb
push
inc
out
out
add
dec
or
push
cs
movsb
adc
sub
sahf
xor
xchg
cmp
xchg
cmp
add
in
fstps
ds
dec
inc
pop
push
out
jo
or
test
cld
outsb
jg
xchg
sub
xchg
dec
out
jne
sti
pop
inc
sub
mov
lods
out
test
test
inc
and
pop
or
mov
mov
scas
inc
cmp
or
pop
pop
dec
pop
mov
lea
pop
xchg
xchg
shr
cltd
xchg
inc
pop
mov
dec
mov
cmc
out
clc
xchg
popl
inc
xchg
out
call
push
test
lcall
mov
pushf
dec
lcall
xchg
xor
call
into
pushf
pushf
imul
in
jmp
xchg
and
fidivrs
cmp
fisubl
ror
xchg
ret
sahf
dec
fldt
sbb
fcomip
inc
test
xchg
test
push
das
lea
and
in
xor
pop
dec
repz
loop
mov
jno
dec
lret
or
dec
ss
jmp
pusha
mov
mov
push
sarb
sub
and
cmp
mov
nop
dec
lock
jns
add
pop
jmp
test
in
add
push
les
loope
movsb
mov
aas
stos
cld
add
cmp
cli
stos
pushf
leave
aad
fistps
xor
jmp
push
outsl
shlb
push
mov
xor
dec
test
and
hlt
cmpb
int
popa
cmp
int
mov
popf
jp
mov
imul
out
bound
mov
addr16
or
push
xchg
leave
jo
and
je
cmp
inc
push
push
mov
pop
dec
fwait
ja
jg
xor
jge
pop
pop
faddp
cmp
adc
push
or
inc
cmp
scas
xchg
add
filds
jp
jae
rorl
adc
orb
or
inc
lods
pop
inc
jae
shr
push
mov
or
xchg
cld
dec
lret
mov
mov
sub
mov
adc
nop
mov
sub
pop
add
insb
sarl
and
das
mov
jb
iret
dec
sbb
sub
sub
and
mov
ret
ljmp
xchg
mov
or
arpl
in
addr16
jb
test
js
daa
mov
sub
mov
sbb
test
mov
pop
cli
mov
xchg
cltd
jg
sbb
clc
sub
andb
mov
cmp
pop
jmp
dec
and
jg
and
imul
push
add
fs
rcl
sarb
insl
lds
pop
lahf
sub
pop
inc
shll
sub
add
sub
xchg
cmpsb
jne
sub
mov
jns
push
movsb
jbe
lods
aad
xor
loope
icebp
xor
in
clc
push
les
subl
outsb
adc
popf
pop
das
push
shll
scas
enter
scas
fidivrs
fsubl
loop
mov
cld
and
jle
jb
sub
in
leave
fnstcw
call
sub
stos
ret
mov
pop
out
es
ret
push
stc
stos
and
inc
cmc
mov
fstps
pusha
bound
imul
pop
out
sub
inc
push
fsubl
std
test
dec
pause
pop
rdpmc
dec
xor
cmpsl
sahf
pop
and
notb
out
adc
jbe
mov
or
dec
xor
into
or
push
je
add
dec
or
pop
adc
es
xor
xlat
sarb
imul
jl
jg
addb
popa
stc
cwtl
pop
daa
fdivrs
dec
dec
and
lahf
mov
std
push
xchg
daa
pop
dec
mov
push
dec
cmp
aaa
daa
jnp
mov
addr16
lret
aad
and
iret
fmuls
xor
int
and
mov
stos
aad
inc
jnp
mov
lahf
dec
pushf
not
pop
inc
icebp
fstl
fdivrs
xchg
cmp
push
cmp
push
das
sbb
shrb
sub
cmp
xor
or
jb
jp
lods
mov
sub
jbe
cs
push
xchg
fidivrl
test
push
dec
repz
into
mov
lods
push
pop
pusha
add
mov
dec
aaa
mov
pop
sbb
stos
jl
bound
js
pop
xor
mov
jp
sbbl
xor
stos
out
shl
aas
inc
call
pop
out
test
into
jmp
mov
out
xchg
sbbb
xorl
xchg
xchg
xchg
lock
pop
push
repz
lods
mov
adc
sbb
iret
int
roll
stos
in
leave
test
into
ficoml
push
movsl
ss
xchg
push
cmc
mov
scas
add
and
pop
adc
nop
adc
lcall
sbb
pop
pop
lret
dec
aam
sub
adc
adc
xchg
mov
hlt
mov
pop
shll
leave
lock
inc
xor
lcall
jmp
sub
fwait
push
addl
imul
push
xor
or
sbb
sbb
mov
push
inc
push
and
cmpsb
mov
mov
mov
inc
inc
aam
cmp
popf
mov
sub
daa
ss
jecxz
xchg
shrl
mov
loop
mov
or
adc
cmp
subb
sahf
inc
and
hlt
repnz
inc
cmp
push
push
jg
jg
xor
pop
imul
mov
call
repz
sbb
xor
xchg
ret
inc
sbb
iret
xchg
mov
dec
ret
cmpsb
and
shlb
add
pushf
mov
jno
mov
inc
dec
and
aad
and
fstpl
lcall
adc
iret
fwait
lahf
sbb
out
fldcw
jae
repnz
stos
mov
cld
jp
cmc
push
out
pop
xor
iret
push
pop
das
imul
mov
inc
pop
mov
popf
std
test
mov
and
inc
int
movsl
or
xor
inc
icebp
mov
loope
dec
popa
lods
sbb
dec
mov
xor
js
mov
inc
cli
orl
lock
iret
add
jno
inc
enter
inc
pop
mov
cmp
icebp
addr16
mov
lods
xor
sub
ds
adc
push
xor
add
xor
cmp
ss
cmp
loop
mov
out
dec
sub
xor
enter
mov
jo
xor
push
cwtl
mov
jo
lret
mov
cltd
jae
roll
fldt
scas
shl
mov
and
mov
push
xchg
iret
daa
jl
hlt
mov
jbe
cmp
fnstenv
loopne
push
mov
push
mov
pop
cmpl
adc
insb
jg
fs
and
sarl
sbb
orb
sbb
adc
pop
lcall
mov
out
xchg
sti
sahf
fwait
jns
dec
imul
cmc
negb
xchg
lret
pop
jecxz
xor
add
mov
mov
pop
iret
cmp
stos
in
cmpsb
insb
clc
das
shrl
lea
and
mov
jl
andl
stos
addb
lahf
clc
ja
popa
into
hlt
mov
sub
fwait
lret
fwait
push
fcoms
pop
cmp
leave
in
fldenv
sub
sbb
gs
xchg
push
lret
jge
fwait
xchg
out
xchg
and
sbb
mov
das
or
push
jmp
bound
cmp
jae
hlt
inc
scas
sbb
jmp
es
popf
les
clc
pop
fwait
push
cmpsl
push
shll
fisttps
xor
outsl
test
lock
adcl
sbb
push
clc
and
jns
sub
mov
adc
sub
add
mov
mov
push
cmc
jns
dec
cmp
cmp
hlt
stos
js
inc
es
mov
dec
pop
fwait
mov
sub
adc
pop
jnp
and
sbb
ljmp
test
add
add
adc
sahf
dec
ret
ret
pop
repz
mov
sub
inc
mov
hlt
mov
xor
cwtl
push
je
faddl
loopne
mov
in
movsl
sbb
insb
xchg
cmpsl
sub
sbb
push
mov
fwait
mov
je
fisttpll
mov
mov
es
cmp
popf
jmp
je
loope
lret
pop
add
fwait
mov
mov
sbb
push
xlat
xor
cltd
mov
aaa
ret
push
hlt
jo
inc
dec
or
in
mov
ficoms
cld
fwait
mov
das
pop
dec
mov
pop
adc
les
sbb
call
cli
mov
loopne
xlat
cmp
imul
and
out
add
adc
in
sub
cltd
pop
and
jmp
shlb
aaa
repnz
xorb
inc
dec
pop
fnstsw
and
out
mov
sar
clc
jmp
cmc
pop
pop
push
hlt
jecxz
ror
cmpsl
mov
ss
or
scas
adc
jo
sub
pop
jg
inc
sub
xchg
cld
push
lock
arpl
xor
jno
dec
push
mov
shll
and
lea
ss
xchg
add
lret
pop
xor
inc
int
inc
mov
push
iret
iret
mov
cmp
mov
adc
or
push
push
push
leave
mov
inc
mov
xchg
mov
imul
add
rdmsr
cmp
xor
jmp
add
cmc
out
jge
push
fadds
jnp
jp
mov
pop
mov
xor
adc
bound
inc
sub
push
pop
jae
out
fs
xchg
test
je
call
mov
inc
mov
cmp
ljmp
cs
cltd
ss
cmp
in
leave
into
mov
lret
js
or
negl
cmpsb
incl
pop
mov
inc
dec
aas
jp
scas
mov
pop
in
or
iret
xchg
pop
and
dec
add
insl
push
lods
jns
pop
push
sbb
fstpl
ss
add
xchg
push
push
add
xchg
inc
dec
pop
push
in
and
jl
jb
and
cmp
aas
call
mov
xchg
mov
mov
rcrb
mov
xchg
push
shlb
bound
dec
shlb
push
divb
stos
xchg
xor
push
add
jnp
pop
mov
xchg
xchg
icebp
inc
and
popa
aaa
call
mov
les
int3
call
lret
cmp
loop
mov
cld
fsub
push
xchg
out
mov
scas
push
xchg
mov
pusha
decb
mov
dec
adc
dec
fsubrs
mov
push
dec
dec
add
dec
cmpsl
mov
stc
dec
sti
jl
inc
lock
mov
lea
pop
fdivl
sub
push
cmpl
cmp
and
or
je
jecxz
cld
xchg
cs
or
xor
jp
dec
jg
lahf
addl
mov
pushf
scas
pushf
hlt
add
pop
cmp
push
xor
scas
ficompl
into
push
and
sub
inc
cmp
in
and
dec
sar
cli
sbb
clc
bound
cmp
jne
rcll
std
enter
or
lahf
push
icebp
movsb
loope
fstpt
leave
cli
insb
lret
mov
inc
push
push
jbe,pn
imul
add
lea
lods
in
subl
cs
arpl
movl
or
dec
fsubrl
in
outsl
lcall
push
outsl
ret
and
in
pop
jno
bnd
adc
pop
in
imul
xor
addr16
sub
mov
cmp
add
lahf
sub
insb
and
pop
add
hlt
aaa
pop
xchg
leave
int
loopne
pop
imul
and
xchg
xor
xor
les
or
loop
pushf
push
jl
or
push
testb
fsubl
adc
ds
cs
sahf
rcll
inc
ret
xchg
jmp
insl
fsubs
push
mov
add
call
cmpsb
mov
int
sub
shr
add
andl
and
mov
repz
adc
xor
stos
cli
jbe
int
fwait
mov
jle
test
test
mov
push
scas
in
xor
in
adc
mov
dec
xchg
addr16
or
sbb
and
adcl
adc
jbe
push
sub
mov
xchg
lods
movl
in
sub
nop
jnp
and
mov
pop
rcl
movsl
lret
xchg
dec
mov
daa
lret
stc
adcb
test
adc
cmp
and
scas
add
push
or
jns
inc
push
push
and
mov
shr
mov
jg
mov
push
scas
xor
dec
lcall
ljmp
pop
test
fistps
mov
int3
mov
outsl
sbb
and
cwtl
and
xor
cmp
sub
dec
dec
ds
enter
mov
sbb
add
xchg
jle
dec
mov
inc
mov
sbb
xor
hlt
add
pop
shlb
xchg
sub
jb
stos
or
or
adc
mov
and
out
enter
jns
imul
into
stc
loop
adc
mov
daa
fs
dec
das
pop
lret
or
adc
dec
push
fnstsw
cltd
mov
das
repz
adc
outsb
dec
xchg
repz
adc
xchg
and
inc
fstpt
out
inc
ljmp
add
and
jae
dec
xor
add
dec
cs
es
or
test
pop
mov
jmp
mov
xchg
mov
gs
daa
fidivl
cltd
dec
xor
jbe
xorb
mov
scas
negb
mov
cwtl
and
pcmpeqd
ljmp
or
sbb
xor
leave
outsb
imul
test
sti
bound
jbe
addr16
lcall
cmpsl
addr16
inc
push
popf
insl
cmc
push
popa
scas
mov
mov
mov
push
mov
sub
and
adc
daa
adc
pushf
fs
adc
pop
jae
xor
xor
ror
xchg
fcompl
adc
je
inc
push
dec
xchg
or
fdivrl
sbb
xor
cld
jae
sbb
inc
adc
xchg
popf
std
push
test
dec
dec
cs
fnstenv
popa
test
outsb
push
pusha
dec
fs
xchg
pop
pop
dec
addl
stos
data16
cltd
in
imul
adc
jge
ljmp
sahf
xor
xor
xor
shr
xchg
xchg
mov
insb
popf
iret
mov
mov
cmpsb
popa
mov
add
cmp
stos
jns
jmp
out
loopne
gs
dec
mov
popa
push
ja
mov
in
inc
fsubrl
mov
insl
lret
add
cmp
sarl
xor
stc
ss
aaa
ret
lret
dec
inc
inc
insl
xchg
enterw
es
testb
mov
xchg
dec
daa
bound
jg
push
jne
into
xchg
add
pop
and
and
push
rep
push
sarl
adc
cmpb
lret
repz
inc
sarl
pop
lret
sbb
fucomip
sbb
or
xor
aam
filds
add
inc
xor
push
call
xor
jbe
pop
xchg
mov
bound
push
cmpsb
stc
xchg
mov
sbb
lds
sbb
push
mov
imul
imul
xchg
mov
lret
inc
aas
and
fmulp
enter
push
dec
mov
repnz
pop
pop
gs
cmc
sbb
jl
call
xchg
movsb
mov
xor
movsb
bnd
add
fidivl
jecxz
cmpsl
and
jecxz
fwait
mov
stc
jno
enter
insb
jae
adc
imull
outsb
sub
sbb
xor
lahf
cmp
push
sbb
test
and
pop
dec
pop
icebp
xor
inc
lahf
mov
icebp
cmpb
icebp
mov
sahf
push
mov
add
cmp
xchg
or
mov
mov
jmp
and
clc
repz
test
in
popa
mov
pushf
mov
sbb
dec
pop
inc
repz
adc
test
mov
push
jl
mov
adc
xchg
sub
arpl
pop
and
dec
mov
iret
jne
imulb
cmp
mov
inc
lret
hlt
mov
add
xchg
pop
lret
cmp
in
xchg
mov
cmp
andb
push
mov
repnz
push
pop
leave
jl
jmp
js
outsl
mov
mov
xchg
and
jae
jp
mov
lock
cwtl
mov
stos
push
mov
sub
mov
xchg
xchg
mov
pop
mov
dec
sbb
mov
lea
addb
pop
das
mov
pop
xor
aas
movsb
dec
es
std
adc
and
and
mov
das
dec
pop
sbb
pop
mov
cmc
push
xor
aaa
ljmp
mov
enter
jne
test
mov
push
pop
int3
mov
pop
leave
and
mov
faddl
xor
dec
add
or
jno
cmpsl
cmp
and
icebp
push
xchg
mov
adc
leave
sbb
cmp
jb
sti
inc
std
iret
cwtl
es
push
cmpsb
ja
add
out
shll
mov
out
xor
add
movsb
push
nop
mov
jl
scas
mov
pop
push
dec
les
push
leave
xor
movsb
leave
insb
mov
inc
loop
lea
mull
ficoms
mov
in
mov
pop
xchg
out
sub
cmp
mov
mov
cmpsl
adc
cld
outsb
loop
in
jb
xor
loope
ljmp
das
cs
mov
xor
jl
ret
sbbl
pop
xchg
mov
mov
pop
jns
cs
sub
jg
filds
jge
jo
ss
xor
cmpsb
pop
fmul
adc
jb
mov
ja
mov
lcall
fucom
por
pop
sti
cwtl
push
pop
pop
testb
in
out
push
das
xchg
call
fcom
movsb
addb
lock
int3
jo
out
pminsw
lret
mov
xchg
out
lods
sub
push
and
push
pop
push
xor
movsl
cs
cli
mov
cmp
mov
movq
in
pop
cmp
mov
mov
inc
ret
or
cmp
mov
loope
test
popf
mov
cmp
mov
fimuls
inc
xor
cmp
fucom
pop
mul
scas
sbb
inc
cmp
prefetch
lret
sub
sbb
mulb
popf
sub
xor
pushf
and
and
xchg
popa
cmpsb
pop
cmpsl
sbb
jecxz
sub
roll
or
jecxz
cli
cmpsb
cmp
pop
pop
push
mov
shrb
aas
add
and
ja
cwtl
fbld
xchg
sbb
xchg
out
xlat
jg
mov
dec
or
bswap
cmp
sbb
dec
and
xor
fs
ret
in
push
add
jbe
add
mov
fnsave
jge
sbb
aam
sbb
mov
popa
fndisi(8087
lock
push
mov
movsb
jmp
or
arpl
incl
add
add
fs
push
jmp
iret
idivl
in
xor
imul
adc
or
lahf
xor
mov
push
mov
and
inc
bsf
adc
dec
fsub
push
pop
add
mov
dec
arpl
insl
and
test
xchg
push
cltd
pop
jg
ficomps
adc
sub
insb
cwtl
mov
lahf
cltd
fprem
or
jp
fisubrl
outsl
sub
nop
xor
lret
enterw
sbb
test
jbe
repnz
movsl
test
imul
enter
adcl
aas
in
in
sbb
mulb
insl
mov
pop
sti
in
and
in
cmp
test
mov
in
mov
mov
cmp
rcll
pop
pop
popf
sbb
xchg
lds
data16
imul
lcall
cli
aad
mov
inc
cmp
jae
jecxz
insl
loope
inc
call
rorl
sbb
lcall
dec
mov
out
cli
fs
scas
ret
add
ret
mov
mov
std
lock
das
movsl
xor
jmp
mov
and
ret
mov
pop
xchg
inc
popa
mov
and
arpl
dec
jno
clc
and
jno
adc
je
loope
adcl
pusha
repnz
and
in
in
jl
data16
sub
js
cli
pop
mov
and
push
clc
add
enter
outsl
fcoms
cmovnp
xchg
lcall
push
and
cmp
scas
inc
fs
push
and
loop
rcrl
sub
cli
mov
iret
inc
test
cltd
rol
dec
ss
loop
test
pop
rorl
inc
dec
je
out
dec
aad
out
or
jbe
shrb
std
jbe
ja
aam
push
in
nop
je
jge
dec
loop
popf
cmp
imul
pop
sarl
dec
jnp
jae
scas
cmp
push
mov
cld
lret
sub
push
pop
or
insb
adc
add
jmp
push
mov
jg
jo
sub
cmp
es
loopne
push
and
xchg
cmp
or
in
cmp
cltd
xor
push
popf
add
fs
scas
cmp
test
outsb
mov
jp
into
incl
xor
add
pop
dec
stos
es
push
push
call
xchg
out
out
or
xor
movsb
sbb
jl
adc
pop
cmp
inc
inc
in
cli
mov
push
insb
in
insl
push
dec
dec
gs
rcrl
lock
xor
lods
loopne
jl
pop
jb
dec
cwtl
mov
and
into
int
adc
xor
test
js
out
lret
test
je
cli
hlt
pop
fmull
sub
mov
addr16
push
aaa
dec
outsb
sar
mov
or
loope
dec
out
add
lcall
mov
and
or
hlt
repnz
fcmovnbe
push
aad
xchg
jne
call
adc
xchg
fcmovbe
outsl
int
sar
dec
add
jmp
jmp
jae
xchg
hlt
addl
mov
mov
gs
lcall
sbb
pop
imul
out
testb
inc
out
xor
mov
je
and
mov
pop
lods
outsl
pop
gs
rcrl
adc
cmpsb
fiadds
outsb
sub
cs
push
dec
lahf
adc
inc
cwtl
out
sub
div
add
je
andl
mov
lret
outsl
adc
out
and
push
add
outsb
push
loope
gs
pushf
xchg
cmpsl
add
in
jbe
add
lret
gs
push
or
mov
orl
mov
or
xchg
mulb
adc
call
sub
mov
fnstcw
xor
popa
cli
xchg
xor
push
fiadds
or
or
pop
loopne
pop
hlt
xor
test
sub
icebp
fcoml
pop
out
push
mov
arpl
inc
sarb
nop
mov
fsubs
jns
shll
pushf
out
popa
xchg
xor
mov
in
aam
xchg
repz
push
fisttpll
lret
inc
inc
adc
cmp
rorl
inc
leave
mov
push
sub
stc
shll
push
ss
loope
data16
xchg
fwait
inc
sahf
mov
inc
sarb
pop
mov
pop
repz
pop
call
xor
and
jo
outsl
push
mov
cmp
hlt
mov
xchg
clc
jp
inc
push
mov
insb
test
mov
fsubrs
or
cli
icebp
mov
pop
in
jp
into
inc
xchg
loope
cmp
xchg
inc
xchg
inc
call
pop
testl
sbb
stc
pop
orl
lea
jmp
out
add
adc
es
dec
aas
inc
xchg
in
pop
in
mov
mov
dec
lgs
push
pushf
pop
jb
xor
adc
xchg
jp
jae
xor
test
or
cmp
pop
mov
pop
fimuls
fs
insb
push
jbe
or
cmp
pop
sub
ret
mov
sbb
sub
lds
dec
xor
and
int3
mov
ljmp
std
mov
gs
cli
imul
mov
out
xor
popf
rolb
test
xchg
orl
add
push
lret
inc
out
dec
lcall
stos
push
call
inc
insl
sbb
out
aad
call
jns
test
out
fstp
xchg
ja
jge
std
test
cmpsb
jae
mov
jl
and
ror
loopne
push
sub
add
sbb
test
mov
mov
mov
lahf
outsl
sub
call
test
mov
ds
inc
xchg
mov
lret
roll
jmp
cmp
or
push
jg
xor
mov
dec
nop
adc
dec
inc
mov
ds
in
popf
aam
fs
lret
sbb
inc
add
push
inc
inc
push
jbe
fs
fwait
vucomiss
stos
jge
aad
and
movsb
jecxz
stos
push
int3
mov
in
push
je
sbb
push
test
rcll
xchg
clc
xchg
sub
imul
mov
sbb
sahf
outsb
pop
or
imul
insl
iret
test
fstpl
cmpb
mov
mov
test
out
mov
movsb
out
sub
in
test
push
push
test
stos
icebp
not
in
cmp
xchg
sti
sbb
scas
je
pop
stc
add
jge
pushf
movsb
imul
add
in
cmp
mov
leave
sub
sbb
das
leave
add
add
push
adc
jnp
cmp
inc
mov
insl
xchg
mov
lret
orl
rcrb
jmp
push
xchg
or
cli
out
dec
sub
jg
mov
mov
or
add
cmp
std
push
cmpsb
pop
lds
and
cwtl
and
sub
cmpsl
pop
sub
dec
call
faddl
mov
push
mov
or
mov
mov
inc
cmpsl
jne
mov
jp
lds
jns
mov
fcmovbe
add
out
mov
cmp
in
fisubs
mov
ss
inc
push
xrelease
ret
test
jo
sar
mov
xor
js
das
enter
pop
inc
cmp
imul
loopne
test
jbe
push
cmp
mov
push
pop
inc
cmpl
mov
pop
insb
repnz
xchg
ss
mov
pop
xchg
or
bswap
or
cmc
mov
pop
xchg
iret
mov
mov
xchg
insl
int
push
cmc
lret
mul
xchg
mov
jl
mov
sbb
xorb
mov
push
add
and
add
pop
pop
aam
xchg
insb
out
or
dec
inc
sub
pop
inc
sar
cltd
int3
cmp
or
push
fsubl
push
cld
pop
in
push
sub
jne
mov
jo
pop
je
mov
cmpsb
sti
sub
repz
rorl
loope
pop
scas
jbe
cmpsl
mov
sar
jnp
scas
test
pop
jl
int3
fs
popf
rol
push
sti
dec
clc
sub
xchg
mov
push
cmpl
mov
mov
cmp
push
scas
std
add
and
addb
pusha
xchg
aaa
or
fadds
std
popa
add
jp
sbb
decb
push
mov
sarl
nop
das
in
outsb
loopne
cmp
or
pop
popa
in
inc
popa
loopne
fsubl
repz
lea
cmp
mov
mov
mov
and
lods
mov
adc
mov
jbe
add
into
add
cli
or
orl
adc
cmp
cwtl
cmp
int3
and
mov
or
jbe
xlat
dec
repz
dec
cmp
das
sbbl
testl
sub
jl
imul
cmp
jp
xor
inc
mov
xorl
xor
repz
fstp
xchg
xorl
cmp
dec
into
pop
fcom
add
mov
sbb
lds
pusha
cmc
jns
add
je
mov
sub
push
sub
das
push
mov
mov
mov
outsb
ja
sbb
pop
loop
add
mov
ret
add
push
in
mov
lods
add
ret
test
imul
lcall
jmp
inc
clc
mov
dec
sub
rcll
outsb
jne
jne
cmp
and
pop
das
xchg
lea
aas
fistps
movsb
sbbb
subb
mov
into
roll
or
xor
cmp
mov
sahf
repnz
in
imul
out
lcall
rcll
sub
addr16
sub
sbb
enter
repnz
mov
out
std
adc
pop
mov
pop
jecxz
test
or
rclb
sbb
shr
inc
in
dec
cld
jb
mov
or
push
idivl
mov
mov
cld
fstl
or
ret
dec
cld
sbb
addr16
in
pop
mov
out
and
lds
inc
sbb
js
jmp
lds
sbb
inc
lcall
xchg
dec
jge
cmpb
mov
or
mov
xchg
jb
jmp
scas
mov
jnp
fcmovnbe
out
push
imul
lea
jns
sbb
gs
push
jl
xchg
add
xlat
jo
sub
stos
lret
mov
and
aad
sti
cli
adc
or
idivl
jb
xor
roll
fmull
add
sbb
inc
test
js
adc
pop
dec
mov
add
xor
aad
filds
loopne
mov
xchg
or
jne
adc
sahf
iret
push
push
sahf
dec
mov
adc
imul
add
faddl
notb
pop
lahf
pop
xchg
xchg
sbb
dec
movsb
inc
insl
xchg
push
dec
push
cltd
fdiv
or
mov
cmp
cli
ror
mov
test
push
subl
xchg
lret
iret
pop
lcall
loope
stc
std
loope
lretw
cmp
push
pop
out
stc
xchg
into
scas
xor
add
dec
jo
sbb
xchg
imul
leave
loopne
icebp
lods
or
or
inc
sbb
repz
pop
test
pop
push
movsl
push
dec
gs
inc
mov
in
jo
iret
nop
sub
mov
cld
dec
daa
push
pop
fcoml
mov
repnz
dec
shrb
mov
mov
inc
scas
aam
xlat
pop
fs
shrb
inc
dec
adc
add
nopl
mov
dec
out
or
addl
push
das
imul
mov
push
subb
gs
imul
push
mov
orb
lods
out
inc
cld
fwait
stc
and
cltd
dec
jbe
inc
sub
sbb
push
cmp
cmp
xor
add
xor
movsl
filds
fs
test
push
xor
sbb
push
jns
dec
mov
sub
addr16
pusha
clc
stos
sbb
push
in
cmc
jne,pt
inc
xchg
repz
addr16
insl
and
adc
mov
cmp
jne
sbb
std
je
cmp
lret
pop
cmp
cs
lods
sbb
das
push
fisttpll
inc
cmpsl
je
jle
in
or
bound
jnp
sbb
imul
int
fcomi
fsubs
push
sub
or
inc
xor
scas
lahf
pushf
inc
sti
fucomip
xlat
ret
pop
mov
test
mov
fsincos
stos
fstpl
std
stc
out
xor
outsl
mov
iret
mov
and
mov
or
fistl
xlat
add
out
xchg
cmc
jo
cmpsl
aaa
loope
cmpsb
cmpsb
mov
loop
rolb
scas
les
jno
pop
popf
jp
test
lret
xor
movsb
lret
daa
pop
xor
movhps
xchg
jns
mov
popa
mov
adc
pop
neg
mov
sub
mov
shr
pop
es
sub
dec
movsl
scas
jno
push
icebp
adc
mov
out
cmpsb
and
or
mov
or
sbb
loop
insl
dec
loopne
mov
mov
mov
sub
loopne
mov
addl
fimuls
pop
iret
or
mov
shlb
scas
lea
mov
xlat
outsb
ret
jb
out
iret
sbb
fisubs
xchg
sub
lods
push
mov
insl
stos
ficoms
mov
mov
add
cwtl
js
xor
sbb
rolb
mov
std
mov
sti
lods
pop
pop
mov
pop
mov
fsub
cmc
call
daa
fnstsw
movsb
mov
enter
mov
mov
add
fisttpll
rcrb
ljmp
popa
js
push
adc
lods
out
cmc
cli
pusha
xchg
sub
dec
mov
inc
out
mov
sbb
push
xchg
outsb
fistpl
pop
popa
sbb
dec
leave
push
repnz
test
out
test
insb
jecxz
int
orb
stos
or
in
into
cld
pop
mov
mov
out
push
stc
xor
xor
das
cmp
mov
les
icebp
xor
jge
cld
movsb
out
testb
icebp
xchg
icebp
pop
jno
aam
bound
enter
dec
scas
test
or
test
test
mov
pop
cmpl
popa
pop
adc
lcall
inc
sbb
pop
aad
testl
shll
mov
gs
mov
inc
xorb
jnp
rcl
in
repnz
icebp
push
jb
sub
andb
lret
iret
push
mov
mov
hlt
je
and
and
adc
in
xchg
adc
scas
cmp
xchg
mov
out
cmpsb
movsl
mov
xlat
ret
xor
or
fmull
mov
mov
cs
xor
add
cmpsl
js
mov
push
bnd
pop
and
sbbb
xor
xor
push
xchg
cmpsl
int
movsl
and
shlb
andl
jmp
roll
fcomp
add
jge
cmp
icebp
xchg
mul
test
sub
dec
addb
sbb
inc
mov
and
mov
loop
loope
cmp
push
lock
out
and
pop
adc
mov
fcoml
sti
add
scas
pop
aaa
sub
insb
adc
sub
push
sbb
add
sbb
or
sbb
insb
ficomps
mov
ja
movsb
outsl
and
xlat
hlt
jg
std
outsb
pop
in
dec
sub
and
jle
fwait
cmp
imul
jnp
xor
insl
mov
xchg
jae
fstps
insl
cmpsb
lock
mov
mov
push
pop
out
out
in
and
loopne
insb
add
std
mov
repnz
arpl
leave
nop
and
or
mov
mov
sbb
out
icebp
cli
popf
in
push
sbb
in
mov
sub
mov
shlb
cmpsb
popa
ja
sbb
cld
sub
mov
lds
addr16
inc
and
jge
stos
in
cmpsl
loope
xor
call
mov
cmp
mov
sti
sbb
push
sub
xchg
mov
dec
fisttpl
sub
scas
nop
mov
sub
xchg
or
mov
push
pop
jo
xchg
dec
inc
jno
xor
fxtract
push
fs
pop
ja
out
jle
lret
pop
pop
test
mov
push
mov
out
fs
popf
mov
jne
dec
mov
pop
mov
cmp
add
mov
outsb
mov
int3
daa
nop
cwtl
ss
dec
cwtl
hlt
pop
mov
xor
xchg
jo
push
xchg
dec
pushf
test
imul
jecxz
popf
mov
insb
cmpsb
mov
xor
push
cmp
xchg
pop
push
jae
push
mov
add
push
sbb
add
xlat
mov
jne
loopne
out
mov
out
imul
sbb
mov
sub
sbb
fists
mov
inc
aaa
inc
loope
add
cld
lahf
xor
pusha
gs
ficoml
scas
leave
dec
cwtl
xchg
or
lock
push
outsb
sub
cmpl
lahf
fs
mov
push
sbb
shll
push
out
adc
push
subb
mov
xlat
cmp
dec
and
bound
adc
loope
aas
shll
test
jb
in
out
jo
in
pusha
icebp
ss
leave
pop
jo
outsl
lcall
and
jmp
push
mov
fidivs
pop
add
push
ret
mov
enter
push
or
test
sub
push
js
add
repz
xchg
std
fwait
iret
add
or
jle
mov
pop
push
test
les
inc
xor
dec
pop
jnp
je
pop
scas
dec
mov
aaa
test
push
hlt
repnz
push
inc
sti
sbb
mov
pushf
sub
ja
xor
jnp
int
ret
sbb
das
cli
push
jbe
stc
test
mov
leave
movsl
rorb
fisubrs
leave
jo
xchg
or
out
iret
roll
mov
fnstenv
or
xor
test
xchg
iret
stos
or
aad
enter
test
in
xchg
lcall
imul
addr16
fists
xchg
test
test
sbb
stos
xor
jbe
xor
dec
mov
fildl
loopnew
mov
dec
mov
andl
or
sbb
jecxz
xor
or
into
xchg
cli
mov
pop
adc
xchg
aas
cld
lods
pop
add
push
or
mov
sbb
cli
arpl
test
pop
mov
movsb
adc
shlb
adc
lahf
cld
aaa
int3
push
cld
sbb
add
push
loopne
add
xor
repnz
out
mov
stos
xor
cmc
push
int
pop
lret
fwait
loope
loop
aad
push
jp
fadd
in
xchg
xor
or
jae
repnz
xchg
xchg
mov
xlat
mov
mov
outsl
and
lahf
into
sbb
loope
cli
mov
xchg
mov
inc
mov
negl
inc
and
scas
add
movsl
hlt
or
out
faddl
dec
jae
into
pop
sbb
inc
popf
arpl
test
mov
mov
addr16
cmp
sbb
aad
fisttpl
shll
mull
out
scas
nop
mov
out
jg
push
std
out
mov
aaa
dec
mov
or
inc
fstpl
push
rcrb
aas
xchg
jmp
mov
push
add
push
or
lea
lds
push
in
pop
pushf
daa
pop
out
and
inc
jbe
add
inc
or
hlt
or
mov
push
sbb
stc
nop
aas
dec
push
fsubrs
aas
imul
js
add
enter
and
pusha
mov
add
mov
pop
inc
jmp
xor
cmp
std
xlat
mov
dec
cmc
xor
lahf
xor
inc
xchg
jbe
bnd
popa
adc
dec
or
ret
dec
sbb
imul
fisttpl
lahf
orb
push
addr16
pop
test
mov
stc
adc
jl
repz
xlat
popl
aas
push
sbb
js
push
cmpsl
inc
xor
pop
fwait
mov
lods
add
mov
sbb
mov
pop
push
push
jmp
stc
arpl
xchg
xchg
xchg
xchg
fcom
or
jns
cmp
out
in
cmpsb
jl
xlat
cmp
into
pop
mov
les
push
mov
in
xor
cmpsb
in
sub
inc
es
mov
cmpsb
mov
jge
push
pusha
xchg
pop
addr16
add
add
pop
repz
dec
and
xchg
cs
mov
jg
cli
mov
xchg
push
out
sbb
aad
or
mov
mov
pop
add
fisttps
mov
add
inc
push
dec
int
clc
bswap
and
or
test
lods
dec
dec
mov
insl
dec
jno
inc
mov
ja
adc
sar
jno
mov
jb
push
cmc
xor
lcall
les
mov
pop
xchg
loope
aas
xchg
les
dec
nop
imul
sub
int
cmp
xor
or
pop
and
lods
test
sub
add
bound
mov
mov
rorb
add
rorb
pop
mov
imul
push
mov
or
sbb
adc
jne
mov
scas
clc
lcall
mov
mov
mov
inc
loopne
mov
and
insl
pop
in
insb
mov
mov
xchg
js
cmova
dec
mov
push
adc
iret
push
mov
pop
stos
rorb
cs
xorl
mov
xchg
xchg
push
mov
loopne
call
add
cmpsb
in
js
lret
std
fldcw
mov
and
lret
mov
gs
fadd
enter
in
out
mov
jae
cli
mov
lea
mov
shr
pop
sbb
dec
addr16
lock
loopne
cmp
lods
lds
jne
aaa
outsb
xor
xorb
stos
imul
push
icebp
outsl
dec
sbb
stos
xor
imul
test
imul
scas
fimull
dec
push
sub
pop
jne
or
int3
cmp
add
cmp
addr16
cmpsb
mov
in
mov
pop
or
mov
lea
iret
xor
out
xchg
jge
mov
addb
aam
sbb
add
movsb
ja
incb
test
mov
inc
mov
or
fs
push
and
inc
adc
mov
lods
cmp
mov
popa
jae
into
jg
or
cltd
mov
js
jbe
je
mov
inc
sub
push
mov
jecxz
jle
xchg
cli
call
out
and
dec
jmp
popa
adc
xchg
mov
stos
adc
data16
mov
pop
lea
mov
mov
adc
lret
mov
fwait
add
mov
jb
dec
dec
jo
lock
les
into
sub
lock
lods
jbe
pop
xor
mov
pop
jecxz
cltd
cmp
stos
push
or
sub
and
mov
and
jne
sbb
pop
sbb
lds
jg
push
jl
adc
orl
inc
arpl
repnz
jno
adc
ja
push
sub
pop
xchg
mov
lods
adc
and
in
div
pop
cmp
sub
and
xchg
sub
imul
inc
and
scas
cwtl
movsb
lods
push
iret
lock
std
notb
lods
mov
stc
xor
addr16
insl
insl
loop
pop
icebp
and
pop
jbe
sbb
sub
int
sub
in
adc
sub
mov
fdivs
adc
scas
or
dec
pop
out
mulb
scas
jle
inc
ret
insb
push
mov
aaa
popa
aas
test
cld
sbb
scas
fnsave
mov
jp
enter
push
or
out
subb
or
or
add
jp
pop
sbb
push
loope
pop
aad
xor
into
mov
mov
inc
leave
in
jle
push
mov
add
cmp
repz
sbb
jne
pop
sar
out
sub
int
cmpsb
aam
imul
xlat
mov
cmp
mov
imul
adc
mov
sub
pop
xchg
stos
mull
iret
inc
push
lds
mov
addl
xchg
in
push
inc
aam
lret
or
mov
shlb
cmpsb
cli
pushl
xchg
dec
jb
add
xor
loopne
adc
mov
bound
pop
mov
add
call
add
fistl
cltd
sub
xorl
ja
jae
mov
sub
lods
lahf
fsubs
out
ljmp
sbb
mov
mov
int3
xchg
sbb
inc
cs
dec
mov
dec
in
insb
jp
lcall
je
rclb
push
sub
jge
push
sub
mov
repz
dec
fucom
ret
pop
int3
fnstcw
sub
out
loop
imul
movups
push
cltd
fwait
mov
ss
test
sub
jb
and
jae
add
jp
sbb
or
es
sub
loop
xor
inc
mov
mov
sbb
out
stc
or
xor
or
mov
enter
push
adc
sbb
adc
pop
lcall
xchg
sbb
push
fildl
push
pop
sarb
adc
sbb
insl
aas
jge
int3
adc
xchg
mov
fbld
setae
or
jmp
or
dec
fcoml
clc
mov
add
xchg
mov
xlat
in
inc
movsb
cmc
dec
je
cmp
enter
in
jne
and
jnp
pushf
scas
xchg
insb
mov
jae
lods
icebp
sbb
push
pop
cmp
mov
scas
sbb
ffree
int3
fisubrl
push
jne
add
rorb
xchg
mov
mov
out
add
add
push
or
sub
mov
cld
lret
pushf
std
push
add
mov
or
push
sbb
jo
int3
movq
test
shl
dec
sbb
mov
pop
icebp
movsb
mov
sahf
mov
mov
or
and
pop
mov
mov
arpl
js
mov
sbb
aad
adc
imul
ret
lret
dec
repz
ja
xchg
cmp
or
mov
inc
loope
aas
dec
out
out
cmp
add
movsl
sbb
mov
ja
push
adc
call
pushl
popl
test
xor
out
fistl
and
cmc
or
adc
pop
call
dec
in
add
cmp
sub
ss
lret
push
je
adc
cld
and
push
stos
out
sahf
mov
and
push
aaa
fcoml
cli
lahf
sbb
cmp
rcl
xor
xlat
push
mov
mov
dec
inc
mov
mov
ret
lds
mov
sub
lret
xchg
jns
mov
sub
out
rclb
leave
mov
or
loopne
dec
lahf
fcomip
inc
shrb
std
pop
js
fildll
push
testb
leave
push
lret
sub
and
mov
mov
std
mov
mov
test
jbe
in
ret
bound
jl
outsb
popa
test
fldl
xchg
test
gs
pop
sub
xchg
data16
jle
jge
cwtl
insl
test
inc
or
leave
cwtl
mov
mov
inc
xchg
sahf
jecxz
test
sar
xchg
and
and
enter
mov
cs
xor
pop
stos
xchg
jp
inc
inc
mov
jle
inc
mov
push
dec
fwait
int
cmc
push
inc
mov
test
lea
pop
jecxz
mov
and
dec
xor
jbe
mov
mov
push
cmp
push
test
pop
adcb
aaa
gs
pop
mov
das
sahf
mov
or
in
or
pop
sub
lcall
mov
js,pt
add
cmp
iret
inc
jmp
cmpsl
adc
jno
pop
xor
sub
adc
inc
fildl
and
hlt
fimuls
mov
std
xchg
jmpw
int
imull
bound
jecxz
fadd
test
scas
fs
pop
xchg
dec
aaa
aaa
lret
mov
mov
in
bound
icebp
mov
add
and
mov
and
addr16
jl
sar
out
or
sub
mov
and
stos
loope
icebp
daa
inc
mov
push
mov
adc
sahf
or
sbb
aam
jmp
mov
jl
inc
dec
cmovge
pop
out
lret
sub
pop
cmp
pop
add
jne
add
cli
xchg
fisubrs
mov
xchg
out
lret
mov
lea
lds
sub
shlb
cld
pop
leave
test
push
lret
fnstsw
jb
gs
push
cwtl
and
pusha
mov
mov
popa
cld
xor
push
jecxz
shlb
lods
or
movsl
mov
loop
inc
mov
sbb
ss
repnz
push
lds
mov
sbb
js
jae
adcb
mov
mov
test
test
mov
imul
mov
out
std
push
or
ss
rcrl
stos
js
paddsw
xchg
inc
cmc
cmp
cli
push
shr
dec
inc
pop
movsl
jae
push
push
je
sub
inc
movsl
pop
mov
cmp
cmp
outsl
imul
mov
mov
rcrb
adc
sarb
js
pop
sub
cwtl
negl
mov
cmp
daa
mov
push
decl
push
and
mov
push
adc
idiv
cmc
sti
add
lods
mov
hlt
mov
lret
add
hlt
fisubrs
rorl
cs
push
lret
and
mov
push
jne
out
sbb
mov
pop
mov
cmp
and
ret
aaa
fisubl
stc
xlat
pop
in
outsl
sysexit
jp
bnd
cs
aam
cli
lea
icebp
nop
mov
dec
lret
out
fiaddl
and
icebp
arpl
mov
push
xchg
xchg
sub
pop
les
mov
xchg
sbb
out
into
ficomps
xchg
mov
adc
mov
pop
lock
inc
or
shl
es
pushf
pop
cwtl
cs
jb
and
imul
notl
lods
out
or
xchg
sbb
loopne
xchg
pop
xchg
outsb
subl
lcall
in
ficompl
add
dec
sbb
in
fmuls
push
lods
sub
sarl
push
lods
sahf
in
sub
jne
sti
sub
cmc
jmp
sahf
pop
add
repnz
lods
pop
push
add
call
add
mov
mov
ds
pushf
lods
xorl
adcl
mov
test
pop
and
lods
lret
cmpsl
and
fisubl
notb
bound
ljmp
fisubrl
xor
lea
xor
pop
rol
xchg
mov
lods
loop
xor
push
or
nop
je
aam
call
lods
stos
fsubl
xchg
adc
stos
in
shl
inc
dec
inc
in
mov
lods
rclb
pop
mov
in
or
mov
mov
sbb
lret
jg
jp
cmpsl
add
mov
in
xchg
int
jmp
or
addr16
vpcmpgtd
mov
insl
dec
lcall
inc
in
stos
pop
scas
scas
lods
cmpsb
push
jmp
pop
mov
push
dec
sub
clc
add
inc
jge
jp
mov
fcmovnbe
test
ss
lods
jl
mov
daa
inc
push
xchg
adc
push
pop
scas
out
int3
in
out
mov
push
andl
pop
xlat
jb
mov
cmp
sub
bound
mov
addb
mov
incb
dec
ss
idivb
jns
fbld
das
mov
daa
xor
scas
inc
shll
push
cltd
ljmp
xor
test
out
aad
mov
ja
push
idivb
dec
scas
imulb
shll
xor
ffreep
jp
nop
pop
repnz
out
fwait
pop
imull
push
add
cmp
inc
xchg
xchg
not
inc
cwtl
testb
push
stc
ljmp
stc
aas
dec
ljmp
hlt
ret
in
add
inc
or
iret
lret
into
and
stc
xor
ret
add
add
cld
out
ficoml
dec
lret
pop
ss
fistpll
in
dec
imul
test
pusha
adc
inc
sbb
leave
cli
lahf
sbb
mov
cmp
add
push
sub
hlt
push
aas
jne
and
mov
shr
rcl
jl
nop
movsl
xchg
lret
shl
subl
mov
test
add
rclb
aas
outsb
outsl
fdivrs
aam
notb
js
and
insl
push
rclb
xor
sbb
and
dec
loop
test
adc
dec
out
sub
mov
mulb
inc
ja
jb
scas
mov
add
scas
test
int3
dec
sar
push
out
sahf
push
cwtl
mov
aaa
insb
loop
sub
loop
test
lea
xchg
pushf
inc
xchg
scas
sbb
adc
aaa
mov
adc
mov
pop
sbb
jp
push
repnz
sub
adc
push
jecxz
das
push
fucompp
mov
es
jae
lds
into
xchg
out
hlt
jp
loop
pusha
mov
sub
mov
repnz
sbb
arpl
cmp
push
pop
pop
sub
in
test
rcl
mov
lea
sbb
sti
repz
or
sbb
mov
or
call
mov
insl
push
mov
or
push
into
pop
std
or
shr
fistl
loope
lock
pop
cmp
jae
mov
xchg
dec
ret
sub
lods
fwait
jg
mov
jmp
ret
cmp
mov
into
lock
addr16
std
shll
pop
cmp
add
pop
fndisi(8087
sbb
pop
xor
inc
mov
pop
stos
in
or
sub
fdivrs
xchg
lods
out
mov
inc
cvtps2pi
inc
dec
jmp
lahf
data16
add
xchg
sub
or
loop
xor
pop
push
mov
lods
insb
addr16
and
movsl
into
call
into
test
jnp
xor
push
leave
loopne
xor
jb
mov
shr
cmc
addb
xchg
and
xchg
loopne
sub
pop
xor
cmova
mov
jg
and
popl
push
sub
jmp
mov
cmpsl
xor
push
lret
mov
mov
jecxz
cltd
lods
addb
push
xchg
sbb
cmp
fnstcw
jne
mov
jle
mov
ret
icebp
xor
jns
in
gs
data16
lret
ret
mov
dec
sbb
lods
inc
and
mov
jo
das
in
out
jb
jb
out
mov
inc
iret
push
js
or
push
outsl
push
jae
lret
scas
pushf
xchg
pushl
jmp
inc
mov
add
int
loopne
addr16
cld
loop
push
test
popa
enter
out
inc
dec
and
daa
hlt
movhps
in
cmpsb
dec
lods
dec
jns
test
ss
int
out
add
jp
int
mov
dec
bound
stos
pop
jge
int3
ljmp
mov
push
push
xchg
ret
loop
mov
jns
imul
mov
or
ss
adc
adc
dec
shlb
mov
jp
out
pop
cli
dec
pop
pop
lahf
sbb
and
iret
mov
nop
sbb
pop
fdivs
repnz
push
aad
jno
pop
inc
stos
call
nop
cmp
push
and
pop
roll
punpcklwd
fbld
int
lock
add
and
cmp
sbb
mov
imul
xchg
aas
sbb
add
cmpsb
loope
xor
cmp
lahf
push
int3
adc
popf
push
mov
adc
ja
mov
fiadds
push
inc
leave
stc
or
inc
fwait
lock
mov
mov
cmp
inc
stos
xchg
fidivrs
stc
mov
xor
inc
pop
ret
mov
cmp
aaa
sub
sbb
fs
fld
mov
fwait
sub
xor
das
and
repnz
nop
mov
aad
xchg
sarl
cmp
sub
out
cwtl
mov
test
out
xor
std
popf
lock
pushf
ss
daa
dec
mov
cs
sub
repz
pusha
mov
dec
xchg
dec
push
and
jns
push
lods
lea
out
les
sbb
pop
mov
cmpsl
mov
mov
lcall
stc
xor
jbe
mov
push
cmp
cmp
mov
add
incb
add
and
adc
das
shrb
mov
cmp
sub
jb
adc
test
push
orl
aas
loope
dec
or
mov
add
leave
sbbl
lods
mov
inc
xchg
pop
lret
dec
fiaddl
bound
iret
adc
or
mov
mov
dec
fcom
rorl
cmp
repnz
push
add
xor
insb
fisttpll
add
mov
sbb
push
and
pushf
pop
fsts
dec
testb
les
xchg
cld
xchg
scas
arpl
mov
sub
add
les
mov
and
test
sub
jns
call
mov
arpl
pop
sub
cld
int3
mov
je
sti
push
mov
imul
pop
add
iret
lds
add
ds
push
sbb
xchg
inc
jno
bound
nop
sbb
push
leave
test
dec
aas
aaa
das
repnz
jbe
loopne
push
pop
dec
in
cmp
mov
ljmp
imul
push
sub
stos
in
lock
push
neg
andb
pop
ja
lea
or
cmp
cmpb
insl
rcll
push
fwait
movsl
lahf
jp
in
push
ds
stc
cmpsb
outsl
mov
mov
flds
xlat
repz
dec
xchg
pop
icebp
adc
in
movsb
dec
pop
or
fiaddl
and
dec
xor
pop
sbb
cmpsl
rolb
cmpsl
js
inc
ret
fisubrs
dec
inc
mov
add
cld
mov
fmul
push
xor
cld
mov
mov
mov
inc
xor
adc
dec
fdivr
adc
cwtl
lret
sbb
cmp
sub
mov
insb
inc
and
jae
xchg
scas
inc
mov
nop
push
outsl
jnp
dec
movsb
sub
lret
or
add
shlb
cli
loop
jl
aaa
aas
mov
sbb
aaa
les
sub
es
mov
mov
cmpsl
in
testb
lret
clc
push
push
pop
or
push
shrb
mov
push
sti
pop
aas
rclb
test
mov
fisttps
clc
fdivrl
add
call
adc
lcall
loopne
pop
add
sahf
hlt
push
or
pop
xor
fwait
xchg
sbb
repnz
pop
xchg
push
daa
mov
cmp
cmpsl
jnp
loopne
push
das
shlb
mov
xchg
rolb
cmp
cmpsl
xlat
insb
pop
fsubl
sub
inc
xchg
das
enter
pop
jo
fisubl
rolb
xchg
adc
or
in
mov
ret
pop
out
mov
je
mov
pop
xchg
fnstenv
ret
std
aad
xor
pop
arpl
xor
in
mov
ret
push
mov
addr16
es
mov
push
mov
adc
dec
inc
jbe
mov
dec
or
jge
xchg
jbe
sti
shll
dec
jg
mov
das
and
arpl
cmp
in
mov
adc
mov
stos
mov
push
test
pop
add
pop
or
popf
fwait
mov
jg
pop
dec
mov
lods
sbb
dec
inc
pop
mov
adc
andl
lahf
hlt
xchg
add
sbb
int3
test
add
fadds
push
sub
fistps
xchg
into
xorb
es
js
push
and
adc
in
mov
or
lea
sti
cmp
inc
adc
lret
dec
xor
sbb
insb
mov
loopne
jb
pop
push
jecxz
jmp
cltd
xor
mov
jo
mov
movb
sarl
sbb
mov
rolb
cmp
xor
xchg
fsubrl
cmpsb
xchg
insl
lcall
xlat
rcr
mov
cmp
mov
andl
fdivp
arpl
jmp
dec
outsl
mov
dec
cmp
cld
outsb
adcb
jg
sti
push
lods
mov
test
mov
xchg
and
adc
ds
hlt
or
out
push
and
mov
pop
cld
cld
es
ja
out
xchg
lret
out
lret
stc
inc
mov
rcll
adc
lea
jae
stos
jge
orl
mov
inc
add
sarl
lods
dec
fcomi
or
xchg
in
cmp
pop
outsb
aaa
lret
mov
movsl
dec
xchg
mov
jg
jmp
inc
sub
adc
lock
jne
sub
mov
and
lds
fldcw
pop
sahf
pop
pop
jb
mov
sbb
mov
fucom
clc
add
ret
dec
out
lahf
mov
les
mov
scas
mov
fcoms
mov
into
sub
fdivrs
push
xlat
stc
adc
icebp
shlb
mov
xor
andb
jae
and
fwait
adc
sti
sahf
dec
mov
mov
neg
mov
outsb
nop
mov
in
repnz
push
stos
jne
stc
js
or
movsl
mov
mov
push
jecxz
jnp
cmp
ret
cmp
or
nop
gs
jno
movsl
mov
jno
mov
jmp
aam
movsb
mov
jge
xchg
mov
or
sbb
sarl
adc
cld
mov
mov
dec
cltd
jae
loop
xchg
mov
xchg
xlat
mov
nop
mov
out
popa
cltd
mov
data16
les
fisubl
cmpsl
mov
ror
xchg
sbb
xchg
push
scas
pop
adc
cmp
sub
std
clc
icebp
xchg
mov
adc
shrb
cmp
and
cmc
lock
add
scas
and
fidivrl
icebp
in
fwait
negb
pushf
pop
fs
in
lret
dec
stos
nop
rcrb
mov
jg
dec
jnp
pop
stc
shlb
sarb
push
adc
pop
psllq
mov
jno
xchg
pop
fnstsw
sbb
test
sarl
std
fucomi
stos
jbe
mov
cwtl
xchg
popa
imul
inc
xchg
out
xchg
or
ficoml
fwait
mov
stos
notl
fdivs
or
sbb
es
push
inc
aas
pusha
sub
mov
repnz
cwtl
jle
pop
sub
out
mov
jb
imul
dec
sbb
pop
pop
and
xlat
mov
sub
xchg
jle
rcll
aad
xchg
lret
dec
pop
adcl
mov
adc
inc
cmp
mov
lcall
xchg
je
aam
mov
sub
mov
dec
andb
in
and
stc
popf
jns
xchg
ret
lods
repnz
jns
ret
xor
addr16
divl
push
stos
push
popf
push
int
push
jp
stos
xchg
jge
cmp
jl
pop
js
pop
sahf
mov
popa
cwtl
gs
popf
cs
add
mov
loop
dec
xchg
mov
rcl
dec
xchg
lret
push
mul
mov
rclb
outsb
in
mov
mov
push
mov
mov
adc
ja
adc
nop
adc
dec
and
fildll
lds
jo
int3
enter
ds
movsl
push
and
cmp
sti
out
dec
lret
dec
mov
inc
leave
push
bound
sub
ja
cltd
lcall
and
xchg
xor
adc
mov
mov
add
in
inc
mov
add
sbb
idiv
hlt
xor
pushf
add
fstl
or
mov
out
mov
pop
in
inc
insl
out
pop
mov
scas
xor
push
fcoml
or
dec
pop
movsb
mov
cwtl
sub
in
cs
inc
mov
mov
cltd
pop
inc
lcall
add
dec
mov
into
dec
cmp
call
jo
mov
fs
pop
jns
xor
call
fldenv
mov
fildl
jmp
jns
pop
imul
fimuls
xlat
rorb
imul
sbb
sti
jnp
pop
inc
popa
mov
daa
pop
lds
mov
or
ja
inc
mov
jno
stos
call
out
testb
pop
fucomi
pop
xor
loop
mov
aas
in
xor
test
sub
movsl
xlat
out
jmp
loop
jg
pop
incl
xchg
and
xor
les
inc
jno
mov
or
mov
decl
sbb
adc
les
into
push
fwait
ret
dec
fldz
cmp
push
outsl
sbbb
sahf
loop
insl
pop
iret
jae
xchg
cmpsl
repnz
and
loope
mov
mov
les
addr16
and
pusha
cmp
xchg
mov
in
mov
mov
push
shlb
pop
xor
clc
lea
ljmp
fsts
arpl
inc
arpl
mov
dec
push
or
push
pop
push
jp
mov
dec
pop
aad
add
int
dec
inc
mov
stc
pop
adc
and
xor
mov
xchg
add
inc
sbb
mov
pop
xchg
fdiv
sub
mov
sub
xor
xor
test
cld
leave
popf
gs
out
or
aas
mov
dec
mul
mov
adc
mov
pop
imul
and
push
rcll
int3
pusha
mov
dec
pop
clc
push
ss
imul
inc
sbb
out
cmpsb
je
mov
pop
call
add
shll
xchg
mov
xchg
and
push
pop
loope
add
adcl
mov
jg
into
sub
orb
lcall
cld
push
imul
pop
inc
pop
jp
nop
mov
inc
shr
xor
icebp
inc
idivl
dec
push
jl
sub
or
iret
mov
fs
scas
dec
cmp
dec
popf
xlat
lods
lea
and
sub
inc
in
mov
aad
lret
mov
loopne
xchg
inc
repz
dec
dec
enter
and
jmp
or
or
sarl
lret
mov
mov
adc
int
xchg
sub
xor
jnp
cmp
push
dec
mov
push
mov
mov
bound
loopne
mov
add
inc
cmpsl
insb
test
cmp
sub
ljmp
ret
clc
mov
xor
mov
add
mov
cmpsb
sahf
fnstenv
mov
fists
pop
ljmp
or
repz
mov
out
stos
je
test
loop
add
out
and
xchg
jmp
adc
outsl
movsl
xor
stos
push
fwait
push
mov
or
push
rorb
or
in
push
lsl
xchg
cmp
sbb
popf
or
sbb
das
sahf
dec
daa
push
or
aam
mov
enter
push
clc
test
mov
mov
aad
pop
test
fwait
sahf
pop
sbb
fimuls
testl
sub
pusha
pusha
push
mov
cli
cwtl
stos
das
pop
push
xchg
add
jae
adc
std
mov
xchg
dec
or
stc
dec
ret
inc
in
cmp
sbb
into
push
sub
xor
pop
inc
stos
adc
jne
das
mov
fucomp
add
fnstcw
mov
add
inc
jg
sbb
test
aas
das
jb
adcl
jbe
adc
cs
imul
mov
sbb
add
mov
add
je
mov
mov
ljmp
leave
pop
out
dec
lods
xor
push
adc
lock
dec
push
add
jae
xchg
lock
ret
push
cltd
test
mov
das
jno
adc
scas
cli
movsl
std
stos
int3
fstpt
dec
scas
dec
daa
stc
call
fiaddl
insb
sub
mov
rol
jl
jns
jmp
dec
cmpb
cli
xor
cli
out
push
repz
cld
out
arpl
mov
mov
inc
add
sbb
sbb
dec
imul
pop
sbb
daa
add
mov
mov
adc
jl
lret
int3
add
es
cld
pop
mov
pop
fwait
xchg
pusha
rol
bound
ljmp
mov
push
push
jl
je
out
inc
lret
and
jecxz
fadds
xchg
bound
hlt
lea
in
sub
out
out
lret
dec
mov
mov
sub
arpl
mov
aas
jnp
aas
cmp
daa
fcoms
sub
or
lcall
inc
jl
out
sub
std
mul
test
out
incl
out
cmp
sub
clc
fistl
cmp
pop
add
xchg
dec
dec
stos
leave
arpl
ficomps
xor
mov
add
mov
int
jno
mov
pop
ret
pushf
in
ljmp
int3
xchg
mov
sbb
int3
es
push
idivl
jbe
mov
mov
mov
out
movsb
daa
adc
jp
adc
lahf
xchg
dec
in
cltd
stc
cld
lret
dec
movsb
sbbl
aaa
push
mov
xchg
push
ljmp
insl
mov
mov
adc
or
aaa
dec
jo
xchg
iret
in
dec
int
adc
xchg
pop
shrl
out
inc
rclb
push
sti
in
lods
dec
ds
xchg
mov
cli
test
std
cs
mov
lds
xor
or
ficompl
add
push
jle
outsl
or
loope
push
out
pop
dec
imul
mov
mov
lcall
leave
cmp
and
fstl
mov
addr16
pop
mov
mov
pusha
cld
jne
inc
imul
sbb
hlt
popa
int
aas
loope
bound
dec
call
dec
shll
test
cwtl
sahf
adc
jno
fwait
dec
jge
mov
daa
test
jg
xchg
arpl
mov
sbb
into
add
test
std
dec
dec
iret
dec
add
dec
gs
les
push
inc
mov
mov
lret
lods
push
jbe
sti
xlat
jo
mov
clc
mov
push
fwait
out
mov
jmp
jae
cmp
fsubp
sub
cmp
loopne
in
popa
mov
xor
test
jl
push
cmp
cmpsb
dec
jp
push
xor
pop
daa
sahf
xchg
sub
sub
ret
fadd
imul
mov
jno
lret
xchg
shlb
out
mov
xor
cmp
dec
pop
cs
dec
push
push
roll
sti
push
insl
adc
pop
stos
dec
into
je
rclb
hlt
inc
inc
movsl
insb
add
mov
sbb
out
cld
jb
jmp
adc
icebp
sbb
lds
in
cmp
repnz
or
or
push
mov
dec
hlt
pusha
pop
lret
jbe
imul
lcall
fxch
fdivs
pop
mov
cld
lds
les
adc
push
cmpsl
div
lret
sbb
aas
inc
jbe
ficoms
push
lds
and
ljmp
lcall
test
leave
sahf
cmpsl
xor
sbb
jge
les
mov
scas
pop
data16
push
imul
out
in
in
into
lahf
ja
lea
mov
and
imul
mov
and
cmp
cmp
mov
in
push
mov
les
mov
xor
xor
movsb
loopne
and
xchg
movsb
inc
jb
pop
inc
xchg
add
pop
fcoml
in
xchg
jge
outsl
sub
sar
dec
aaa
jns
imul
loop
sub
dec
stc
jl
jmp
jne
push
pop
jmp
mov
stos
stos
shll
pop
jno
ljmp
add
push
sbb
xchg
mov
std
dec
mov
rcrl
mov
adc
repnz
das
sub
pop
xchg
stos
insb
sbb
inc
fisubs
xchg
jns
out
repz
sbbb
sub
xor
leave
lock
loop
mov
imul
inc
in
jecxz
data16
and
stos
xchg
popa
sbb
out
ss
push
sahf
gs
out
out
fs
lret
xchg
ljmp
movsb
dec
out
mov
orb
pop
push
fwait
jp
loopne
loop
icebp
jl
rcl
loop
xchg
out
rcll
stos
orb
call
inc
inc
testl
shr
iret
lock
enter
jecxz
xchg
xor
fcomps
in
fiadds
stc
dec
xchg
push
and
mov
mov
xor
push
xor
or
pushf
mov
sbb
and
xor
mov
pop
push
cmp
loope
insl
xor
mov
enter
jge
adc
mov
xor
cli
add
les
push
lds
fdivrs
repnz
lcall
or
loop
lea
fmul
pop
mov
push
and
mov
dec
jg
test
or
scas
rolb
xchg
xor
pushf
xchg
adc
sub
cmc
out
mov
ds
add
mov
sub
dec
xchg
sub
adc
adc
lock
arpl
mov
in
sbb
dec
div
jo
fdivrp
adc
ss
movsb
fstpt
jno
mov
out
in
int
inc
lcall
lret
mov
out
adcl
and
int
push
cmp
mov
dec
adc
jb
push
sti
cmp
pop
sbb
scas
xor
xchg
pop
xchg
push
xchg
out
adc
stos
lods
je
push
mov
mov
xorl
xor
stos
cld
inc
sbb
clc
xchg
sub
xchg
jmp
movsb
fucomi
dec
mov
loope
enter
adc
ffree
sbb
adc
fnstsw
imul
mov
xchg
out
test
int3
nop
fdivl
push
mov
imul
enter
push
xor
inc
pop
aaa
mov
int3
or
xlat
sub
call
add
andl
pop
push
test
dec
inc
adc
xchg
or
cmp
xchg
pop
iret
mov
mov
out
cmpl
lods
or
sti
sbb
std
mov
pop
mov
cmp
push
test
mov
xchg
xchg
push
adc
adc
xchg
mov
test
cmpsb
xchg
lcall
fwait
jnp
addr16
pop
fwait
push
adc
pop
push
push
popa
ljmp
jae
and
dec
movsl
ds
cmp
mov
outsl
int
sbb
imul
aad
or
cmp
scas
inc
gs
mov
cmc
pop
add
cmpsl
roll
addr16
movsl
jmp
sbb
scas
pop
push
je
xor
lret
pop
sub
inc
cli
dec
sbb
mov
inc
out
mov
or
mov
mov
pop
arpl
shrb
jecxz
iret
imul
enter
add
pusha
in
out
add
stos
lea
mov
pop
ja
pop
add
mov
lods
rcrl
das
dec
rcrb
lahf
pop
xor
or
xchg
je
dec
cmp
push
mov
dec
unpckhps
mov
cmpsb
mov
enter
int3
dec
rolb
int
or
cli
movq
add
arpl
scas
imul
pusha
or
in
imul
inc
out
vmovd
fs
xorl
je
mov
dec
in
dec
in
mov
mov
push
mov
push
inc
inc
mov
aaa
inc
mov
mov
repnz
and
pop
cmp
add
std
sarb
dec
add
std
mov
out
dec
out
xchg
cmpsl
insb
push
add
jnp
test
lcall
adc
mov
test
in
cwtl
aam
je
leave
add
cltd
outsb
inc
aaa
sub
mov
test
je
dec
inc
mov
push
out
shl
or
pop
lret
cltd
and
pop
mov
xchg
inc
pusha
mov
shll
test
xor
lea
mov
sub
mov
pop
add
outsl
rcll
add
in
mov
xchg
jne
pop
sbb
push
lret
or
rorb
push
sub
popf
sbb
add
pop
pusha
dec
cmp
pop
cld
push
pushf
dec
int
xchg
outsb
int
pop
add
mov
movsb
or
mov
nop
incb
and
mov
push
incl
and
add
aaa
sbb
push
in
sub
xchg
pushf
lods
sub
fidivl
sti
jns
mov
lahf
pop
fs
inc
add
int
cmp
mov
pop
repz
mov
inc
cltd
mov
mov
ljmp
insl
pop
adc
repz
ss
fisubs
cmp
cmp
pop
stos
xchg
and
test
sbb
and
push
js
inc
jns
nop
jns
xchg
call
in
mov
pop
fidivl
int3
or
pop
sarb
mov
imul
inc
adc
mov
fists
add
adc
xchg
jbe
lahf
fisttps
sbb
jl
mov
cwtl
in
leave
sbb
out
push
push
out
inc
pop
fcoml
ret
out
jg
jno
cmpsb
inc
mov
push
mov
mov
and
sub
mulb
xor
sub
xchg
pop
pop
test
hlt
out
pushf
lods
out
imul
subl
mov
arpl
xchg
adc
push
push
sub
sahf
push
ret
mov
scas
sub
inc
sti
hlt
cltd
int3
leave
nop
jecxz
ret
pop
dec
les
xchg
jnp
adc
lcall
jno
inc
sti
dec
mov
jmp
jmp
cmpl
bound
xor
or
or
jbe
clc
push
cmc
lds
test
add
sbb
push
adc
add
or
sbbl
jl
cmp
and
cltd
xchg
mov
pop
xchg
repnz
loopne
aad
popf
aad
push
and
popf
xor
push
adc
icebp
insb
jecxz
mov
adc
shl
les
loopne
out
adc
add
and
popf
xlat
sbb
outsb
sbb
pop
sarb
cli
pop
stos
or
cmpsl
cmovl
xor
inc
pop
cmpsl
hlt
jae
jge
push
popf
out
push
pop
add
jle
dec
or
je
stos
fcomp
push
mul
and
xchg
jmp
inc
popa
sbb
mov
fcompl
ss
add
jo
mov
inc
repz
nop
cmp
or
test
cs
std
fwait
mov
mov
ljmp
sbb
je
ret
cmp
pop
sbb
mov
aas
fdivs
imul
test
test
xor
xchg
xlat
shrb
int
lret
cli
ret
pop
fmull
cmp
add
pop
ds
ljmp
xor
mov
push
push
fisubl
out
add
andl
push
mov
hlt
xchg
sub
outsb
and
xchg
sub
movsb
mov
add
lcall
mov
test
dec
adc
leave
sahf
push
xchg
sub
scas
sub
mov
rcll
inc
and
xchg
nop
cmc
xchg
fnstcw
lcall
xor
pop
call
imul
orb
and
mov
inc
inc
cmp
subb
and
add
mov
dec
fwait
mov
in
testb
into
dec
hlt
jo
lock
push
adc
mov
xchg
jbe
sub
mov
pop
lods
dec
loop
push
mov
mov
mov
fcomp
adc
cli
aad
out
push
fs
mov
or
sbb
lods
lods
and
dec
inc
or
out
insb
cmp
sahf
cmp
sbb
dec
pushf
outsb
clc
rcrb
das
add
jb
push
stos
pop
push
inc
repz
pop
repz
xor
push
xchg
lods
aad
xor
jno
mov
mov
push
ljmp
adcb
ret
repz
pop
or
inc
ss
push
cmp
stos
ljmp
push
pusha
sbbb
test
clc
mov
andb
in
pop
sbb
push
jg
mov
std
sbb
sahf
dec
mov
push
ret
and
xlat
and
dec
andl
dec
jne
dec
mov
iret
push
lds
dec
and
adc
mov
subb
ja
dec
ljmp
xchg
fstl
add
or
outsl
lods
into
sub
cld
mov
pop
xor
repz
movsl
jne
test
mov
lods
out
arpl
fistps
in
pop
pop
test
imul
xor
stos
aad
out
std
daa
out
dec
and
mov
push
jne
hlt
cwtl
mov
idivl
jge
pop
shr
mov
push
jns
inc
mov
cmp
push
cltd
into
xlat
push
xchg
xor
mov
pop
jle
aaa
rolb
jg
cmp
mov
jge
mov
or
xchg
push
dec
js
or
fistps
das
and
in
dec
push
mov
notl
push
aas
clc
stos
jg
inc
pop
lret
jns
dec
shrb
sbb
dec
shlb
imul
cmp
or
test
lahf
pop
push
out
or
icebp
mov
lret
fidivrs
dec
loope
fcmovb
jno
lret
test
jb
xchg
and
lods
test
lret
dec
and
ret
ds
jge
fldcw
lods
jge
mov
lock
stos
test
mov
loop
adc
inc
xor
jmp
dec
push
mov
clc
jnp
sub
jg
sarl
and
jecxz
aas
mov
pop
mov
adc
inc
push
lret
push
lahf
fnstenv
xor
ds
and
repz
push
cmp
out
jbe
mov
adc
in
fbld
xor
jno
out
mov
es
mov
adc
add
imulb
insb
das
dec
loop
imul
lret
jb
sub
fcoml
inc
adc
lahf
in
sti
lock
adc
pop
lahf
mov
cmp
iret
in
popa
sarb
loope
mov
pop
movsb
aas
in
insb
hlt
dec
fiadds
xchg
sti
in
div
add
cwtl
jnp
push
xorl
adc
or
test
mov
or
sti
repnz
in
mov
test
push
cmc
rolb
int3
inc
insl
xchg
jne
mov
or
inc
divb
in
cmpsl
popf
adc
pop
sub
ljmp
mov
jne
mov
dec
lcall
dec
dec
push
adc
sbb
not
jnp
push
iret
adc
sbbl
fcmovbe
out
or
pop
sbb
testb
inc
push
mov
dec
aas
jno
dec
fnstenv
inc
jge
jo
js
test
das
sahf
lock
pushf
in
cmp
aaa
xorl
sub
jae
cmc
sbb
and
jecxz
gs
cmp
rolb
ret
rorb
lods
and
add
mov
or
ret
jns
adc
xchg
jle
mov
inc
scas
shl
jp
jle
push
jmp
fisttpll
xor
cmpsb
xorl
cmpsl
hlt
jno
jge
mov
push
pop
fld
call
sbb
mov
lock
mov
movb
insl
sub
mov
or
or
pop
setp
inc
ja
std
add
mov
lret
push
inc
xor
aad
mov
push
inc
lods
mov
outsl
xchg
cmp
out
mov
jb
jae
imul
mov
in
ja
mov
std
push
jp
jmp
jp
lods
cld
sub
dec
mov
pop
adc
and
jl
fwait
pop
pop
inc
ja
sub
cmp
push
mov
loopne
xchg
xchg
cmp
inc
outsl
lret
leave
jp
adc
mov
mov
xlat
imul
insl
shrl
call
push
subb
sarl
jns
test
insb
xchg
popl
leave
adc
ret
sbb
adc
sub
icebp
daa
negl
bswap
mov
push
hlt
xchg
pop
mov
dec
lock
sub
mov
call
mov
jne
mov
xor
or
mov
cmc
sbb
adc
insl
pop
cmp
and
orl
lret
mov
and
pop
mov
in
inc
add
aad
jbe
lods
mov
rorb
or
aad
icebp
mov
sbb
inc
or
sub
dec
mov
jle
daa
or
ss
in
fbld
cmp
movsb
scas
inc
fnsave
in
pushf
incb
sbb
cld
fisubrs
stos
sahf
dec
xor
xor
dec
mov
stos
add
loop
outsb
and
nop
out
inc
or
pop
push
fnstcw
mov
ljmp
inc
lods
cmpsb
movsb
add
mov
and
inc
xchg
cmpsb
enter
mov
call
adc
xchg
xchg
xor
sub
sbb
pushl
pop
out
aad
fs
xchg
inc
xor
daa
popf
pop
out
dec
lret
lahf
xchg
adc
shlb
sub
test
mov
adc
lahf
data16
inc
dec
pop
rorl
mov
adc
and
jo
xor
add
sahf
xlat
pop
sbb
dec
inc
ret
xchg
cltd
pop
xchg
sbb
lea
call
mov
iret
dec
xchg
jge
rclb
xchg
or
rcrl
cmp
repnz
mov
aas
cmp
jo
fstl
lds
mov
repz
filds
mov
push
je
xchg
cwtl
fwait
je
ds
pop
inc
and
imull
cltd
ret
push
sbb
test
push
sub
push
sub
add
scas
clc
in
inc
out
mov
lret
push
jmp
mov
jmp
mov
inc
call
mov
sbbl
inc
inc
mov
pop
stos
push
sub
es
mov
sbb
cmpsb
add
movsb
dec
movsl
in
sahf
aas
addr16
xor
decb
sub
das
stos
fwait
sarl
gs
aam
jmp
mov
mov
pop
or
cmp
lret
imul
or
cld
inc
ljmp
shll
fsubs
scas
stos
stos
in
or
xchg
lahf
mov
inc
push
and
adc
mov
imul
pminsw
sbb
shlb
adc
xchg
out
lahf
pop
mov
cmp
xor
out
lock
push
xchg
in
lea
push
repz
aaa
stc
pop
jle
bswap
add
adc
cmpl
fsin
cmpsb
jp
dec
push
and
xchg
push
jp
add
xor
push
aam
scas
inc
inc
bound
cs
add
fisubs
in
popa
push
mov
pop
addr16
xchg
dec
or
pushf
push
nop
jecxz
sub
in
aad
sbb
xor
inc
sar
mov
mov
scas
mov
ret
xchg
xchg
xchg
sbb
and
stc
leave
aaa
mov
mov
test
addl
rcll
dec
out
mov
adc
mov
mov
inc
add
pop
push
push
pop
mov
lret
int3
dec
sbb
xchg
pop
arpl
lods
or
mov
in
cmp
jg
jae
adc
inc
dec
pop
xchg
enter
popa
cltd
mov
sbb
das
jae
mov
inc
mov
add
addr16
mov
in
bnd
popa
repnz
push
adcb
popf
jo
sbb
adc
push
loop
xchg
inc
pop
mov
dec
and
mov
popf
in
push
ret
out
cmp
mov
test
push
cmp
mov
sahf
cmc
ja
rclb
mov
mov
push
pop
addr16
cltd
shl
add
aad
loopne
mov
iret
dec
sbb
add
cmp
pop
rolb
add
insb
pushf
jbe
inc
add
jg
sbb
test
aas
inc
lahf
mov
sbb
stos
outsb
mov
stos
fyl2xp1
add
std
dec
jge
cli
int3
inc
imul
enter
lret
mov
stos
and
and
push
jbe
mov
pop
xchg
mov
lods
cli
mov
cmp
rol
sbb
movsl
out
and
scas
and
mov
xchg
or
jp
filds
aad
aam
fildll
inc
lret
or
in
cmp
cmc
and
fs
cmp
push
sti
inc
add
add
and
in
inc
push
pop
ret
or
inc
or
jp
stc
add
int
cmp
adc
in
leave
xchg
ja
popf
mov
hlt
and
cmp
call
clc
jl
cmpsl
inc
push
inc
pop
mov
test
mov
lock
xchg
test
negb
adc
mov
push
cmpsl
data16
mov
mov
pop
test
into
int3
inc
mov
push
stc
xchg
cli
shl
lods
xchg
add
lods
mov
mov
enter
push
pop
mov
cmpsb
out
lahf
mov
movsl
mov
push
shll
imul
lret
pop
ret
sbb
imul
leave
out
xchg
cld
mov
xlat
sarl
in
jle
stos
sbb
test
fsubl
push
dec
in
stos
cmpsl
jnp
shrl
cmp
pop
xchg
int
push
ss
ret
cmp
cmp
sub
mov
jge
fstp
push
fldenv
xchg
scas
and
mov
out
insl
mov
xchg
outsl
push
mov
js
mov
sahf
fisttps
in
mov
xchg
jbe
popf
es
test
out
nop
aaa
sti
xchg
jmp
outsb
shlb
cmp
xor
push
or
push
dec
bound
je
lret
pop
cld
jo
xor
into
cmp
xlat
cmp
mov
or
sbb
adc
sub
jbe
xchg
mov
sbb
je
push
xchg
notl
sti
ja
bound
mov
adc
jmp
sub
sbb
clc
in
xlat
pop
pop
call
xor
hlt
add
jge
jno
mov
rcr
xchg
testl
jae
imul
or
add
cmpsl
sti
out
push
jo
add
cmp
adc
xor
pop
jne
lret
xor
neg
sbb
xchg
or
mov
inc
push
pop
sbb
jb
pop
repnz
dec
mov
adc
lods
jl
mov
push
add
adc
push
dec
out
inc
pop
ror
sub
pop
stos
clc
scas
rolb
out
fimull
incb
lahf
push
xor
sub
mov
sub
cmp
orb
aas
imul
lock
popf
push
in
sub
xchg
rcrb
rcrl
jl
cmp
pop
jnp
mov
xchg
jnp
jg
call
push
mov
mov
adcb
into
pusha
pop
ljmp
aas
mov
pop
testl
cmp
xchg
enter
jl
dec
jmp
mov
cmc
iret
out
dec
jg
sahf
aad
xchg
enter
jge
push
imul
fidivl
fsubs
cmp
dec
mov
and
arpl
test
mov
ffree
int3
xchg
in
int3
jb
les
iret
call
xchg
or
jge
lds
push
test
call
xlat
jl
pop
add
movsl
movsb
cmpl
add
lret
loope
push
mov
xchg
scas
cmp
lret
ja
xchg
stos
lds
xor
into
and
xchg
push
jmp
sub
outsb
scas
cmp
jns
mov
jle
fmul
cmp
scas
push
fidivl
xchg
mov
and
dec
dec
in
iret
sbb
xchg
push
scas
mov
sub
ss
in
pop
jp
in
sub
js
mov
dec
xor
popw
mov
xor
jl
inc
inc
gs
jle
in
xchg
xchg
in
pop
mov
rolb
mov
cld
dec
jne
bound
aas
dec
dec
nop
cmp
dec
enter
pop
xchg
sub
cli
sub
jno
cmpsb
jb
insb
sub
popf
mov
shrl
add
fnsave
arpl
mov
push
xchg
aam
pop
out
mov
xor
call
or
inc
sti
pop
cltd
mov
pop
fcoms
pop
cld
imul
lahf
push
pop
sarl
push
pusha
cmp
mov
lods
fstl
mov
js
repz
fildll
add
mov
sti
mov
and
stos
addr16
and
jae
push
mov
hlt
int3
or
arpl
sti
loope
int3
adc
push
pop
xorb
js
int
or
es
sar
inc
lods
xchg
mov
pop
in
sbb
std
and
pushf
or
inc
dec
out
ret
sub
fisttpll
pop
add
mov
xlat
lcall
loopne
add
inc
sub
and
mov
movsl
subl
subb
jns
rdtsc
testl
hlt
cwtl
pop
adc
dec
jmp
fsts
ja
jmp
aas
mov
out
xor
add
pop
jl
xchg
out
mov
sahf
shrl
loop
inc
sub
cmpb
mov
push
cmc
xor
add
adc
call
fdivp
insl
es
les
jb
inc
leave
cmp
imul
fistpll
in
and
ds
inc
jne
mov
mov
stc
aam
fs
std
cs
mov
fidivrl
adc
mov
lds
out
cmc
int3
mov
js
xor
pop
leave
adc
hlt
push
mov
fdivrs
push
xchg
std
cmpsb
inc
lcall
sbb
mov
adc
stc
ja
movsl
xor
and
daa
sub
ja
inc
loope
js
psllw
mov
cmp
out
pop
fwait
stos
shll
ret
inc
dec
stc
mov
add
xchg
loopne
mov
mov
mov
xchg
mov
cmp
cmp
std
arpl
lods
fdivs
imul
lea
push
movsb
dec
add
repnz
jecxz
mov
push
xchg
ret
push
test
shl
into
test
xchg
pop
xor
and
in
mov
scas
dec
sbb
negl
incl
bound
pusha
loop
pop
repnz
adc
mov
adc
pop
sbb
mov
mov
xlat
jne
andl
fcmove
inc
mov
sbb
mov
jl
lcall
not
inc
pop
imul
xor
dec
dec
leave
add
adc
jg
xor
int
adc
pop
add
outsl
mov
xchg
call
push
push
insb
mov
out
push
xchg
sbb
push
enter
nop
data16
mov
lret
loop
jns
jg
cmp
or
pop
leave
les
sub
inc
cmpsl
popf
orb
cmpl
imull
jb
sbb
insl
sub
test
xchg
xor
fsubrl
pushf
lea
subl
mov
fstps
mov
xor
popa
dec
adc
xchg
dec
dec
fildl
mov
jb
ss
xorl
inc
nop
int3
cmpsb
outsl
test
pop
push
lock
ljmp
repnz
or
mov
iret
popa
insl
sub
cwtl
int3
inc
stos
adc
jnp
fisubrl
aaa
nop
dec
fwait
cmpsl
mov
shll
movsb
mov
mov
mov
inc
push
add
push
cwtl
pop
xor
mov
icebp
mov
cltd
cs
jle
cmp
push
popf
outsl
inc
jecxz
xchg
mov
fs
mov
mov
pop
mov
ljmp
ss
int
mov
cmp
pop
stc
xlat
adc
addl
or
inc
adcl
in
pusha
mov
mov
and
mov
cmpsl
jbe
sub
adc
mov
cmp
rclb
ret
in
lahf
xchg
xchg
cmp
jns
sub
data16
push
adc
push
test
ja
dec
inc
cmp
insl
call
pop
jb
mov
inc
mov
ss
outsb
into
ljmp
adc
push
testl
test
fdivp
push
jae
push
call
dec
inc
pusha
jns
adc
xor
clc
xchg
cmc
sbb
and
jns
addr16
sbb
jl
cwtl
cmp
testb
xchg
jo
stc
icebp
mov
adc
mov
adc
jecxz
xor
jae
mov
jne
aad
mov
je
add
lods
and
scas
dec
and
dec
mov
pop
std
call
sub
lret
ret
push
sbb
jns
push
das
mov
aaa
jne
popa
or
mov
scas
dec
xchg
inc
fnstcw
and
xchg
sub
fimuls
ljmp
aad
inc
lret
push
sbb
pop
divl
xchg
rorl
lahf
ds
ret
inc
test
add
roll
inc
xchg
rorb
xor
mov
cmp
add
and
and
out
dec
or
aam
or
cli
push
jbe
repz
cld
and
stc
xchg
jns
mov
lcall
fsubs
fwait
jb
imul
mov
lods
test
je
inc
pop
loope
rcrl
add
cmpsb
movsb
int
mov
fwait
lcall
dec
shrb
mov
lcall
jecxz
insl
ljmp
cld
xor
dec
std
loop
das
es
fxch
xor
xor
mov
leave
into
fdivrl
adc
icebp
push
jl
xchg
lods
fisttpl
in
repz
sbb
push
lea
sub
adc
or
xchg
mov
lcall
fmuls
mov
or
xor
iret
lret
fs
jmp
int
adc
sbb
imulb
fs
adc
cwtl
pop
xor
adcb
mov
sarl
shlb
aas
xchg
lcall
mov
scas
sub
shr
mov
sbb
outsl
and
or
dec
dec
cmpsb
repnz
je
stos
jge
ret
push
inc
or
cwtl
dec
and
cmp
test
mov
movsl
fcomps
or
mov
sub
pop
pandn
adcb
pop
data16
mov
insb
sub
adc
adc
push
je
mov
jae
cwtl
sahf
enter
mov
mov
pop
ret
pop
imul
sub
jle
push
ja
stos
outsl
outsb
out
lret
cld
cmp
xor
inc
mov
mov
mov
cmp
mov
fdivrs
jb
cltd
add
mov
or
sahf
ss
mov
xchg
push
data16
rorb
shll
je
cld
scas
xor
insl
std
cmp
xchg
dec
push
sbb
data16
lahf
aas
dec
push
mov
mov
add
dec
mov
sub
mov
xorb
mov
call
or
jle
fsts
loopne
and
sub
jle
aam
adc
and
repz
and
sub
dec
cmpsl
nop
bound
stc
bound
repnz
lahf
pop
mov
and
fs
test
lret
mov
and
cmc
cmp
aam
xchg
and
or
pop
leave
clc
push
int3
xchg
into
adc
and
sarb
cltd
xchg
add
dec
cmp
testb
outsl
inc
pop
rcl
shll
adc
jge
add
and
lds
notb
jmp
push
pop
mov
gs
add
pop
fcmovne
xor
or
iret
in
out
sahf
add
fs
cld
out
test
adc
ds
adc
fsub
mov
inc
icebp
inc
shlb
mov
popf
int3
cmp
cmpsb
test
sbb
push
mov
sub
sub
mov
lret
mov
cltd
shrb
add
cmpsb
frstor
sub
fs
or
mov
xor
mov
cmpsb
push
loop
sbb
out
and
push
cmpb
pop
setbe
scas
inc
clc
add
sub
jmp
test
movsl
jmp
jmp
cmpsb
fisubrs
adc
dec
add
sub
bound
xor
xor
adc
add
jg
int3
xor
shl
sub
add
or
stos
adcb
cmpsl
mov
stos
popa
ds
cmpsl
pop
push
es
or
push
leave
das
jp
scas
sbb
movl
jg
sub
arpl
and
out
pop
adcl
inc
cmp
mov
into
cmc
test
loope
or
in
out
loop
push
inc
arpl
es
inc
lock
xchg
mov
fnstenv
jo
mov
sbb
sbbl
rclb
pop
sarl
sbb
pop
cmp
jb
dec
inc
jnp
ljmp
and
fucom
xchg
mov
loop
xorb
or
or
sbb
add
and
lea
leave
pop
pushf
popf
test
in
inc
jo
sub
mov
in
popf
les
repnz
pop
std
gs
incb
mov
add
scas
push
jbe
inc
push
ds
fdivs
adc
inc
inc
idivl
mov
stos
popf
call
jp
leave
lret
lret
or
jmp
adc
in
dec
or
sbb
inc
shr
sahf
in
jecxz
hlt
movsl
jne
dec
out
adc
lret
addr16
sub
jae
popf
push
jb
cmp
enter
inc
lret
adc
sbb
ds
jle
jbe
ja
sbb
fadds
push
int3
and
insl
mov
arpl
ja
jae
arpl
pop
cmp
xor
lds
addl
repnz
fbld
jmp
fcompl
push
mov
xchg
aad
shrl
mov
jae
iret
sbb
test
push
call
mov
inc
or
inc
mov
mov
fs
stos
lcall
outsl
dec
out
xor
mov
out
or
dec
jb
mov
sahf
adc
sub
cmpb
and
cli
cmpsb
rcll
adc
sbb
mov
adc
stos
sar
mov
ds
loopne
scas
imul
add
pusha
cmpb
sbb
in
pop
loope
xchg
adc
shlb
roll
or
inc
fsubrl
xlat
aad
fiaddl
hlt
adc
ds
lea
pop
and
sub
std
ret
daa
shll
out
lods
mov
pop
adc
or
into
inc
cmp
inc
jbe
sti
scas
pop
fs
mov
int
adc
pop
out
pop
fwait
mov
jge
jmp
mov
pop
xchg
cmp
mov
sbb
aam
roll
imull
sub
ret
push
add
pop
xchg
popf
or
sbb
jmp
jg
push
into
pop
sub
lea
mov
outsb
inc
dec
shrb
jbe
mov
int
jne
cli
int3
imul
xchg
mov
pushf
adc
jne
inc
lods
jle
stos
pop
jno
stos
mov
repnz
inc
lea
push
xor
xchg
repnz
jnp
aad
sbb
aad
add
cmc
fnstenv
sub
jge
mov
es
js
xchg
nop
sahf
adc
and
inc
xchg
mov
out
cli
nop
cli
std
dec
push
jle
push
testl
out
cmp
popf
push
fsub
xlat
aad
push
outsl
add
call
dec
mov
push
or
adc
cmc
xchg
clc
push
out
pcmpgtd
mov
scas
inc
repnz
movsb
decl
add
jnp
sahf
push
rorb
dec
mov
xchg
bswap
adc
test
repnz
ja
mov
cmp
aaa
lock
aam
sub
xchg
push
jae
test
sbb
out
mov
jp
in
jp
mov
xchg
jle
jbe
mov
data16
cmp
out
jb
xor
mov
push
pop
xor
pop
and
mov
popf
jge
arpl
mov
enter
sub
jl
or
testl
iret
fistps
mov
or
icebp
lock
xor
or
fldln2
mov
pop
mov
mov
jg
in
das
ret
xchg
ja
mov
cmp
pop
mov
adc
adc
les
fmuls
push
add
xchg
shlb
out
call
mov
ficoms
pop
lret
or
or
xchg
xor
fistpl
add
imul
mov
add
fbstp
push
inc
pop
dec
mov
daa
stos
mov
jno
icebp
clc
mov
dec
sbb
sub
sti
sub
dec
mov
into
popa
insl
daa
aad
add
lret
pop
push
cmp
add
dec
adc
push
flds
stos
cmp
dec
stos
lahf
add
loope
fcmovu
rclb
jb
sub
push
sub
mov
cmova
into
push
jg
push
lea
aaa
sub
jb
ds
mov
jb
daa
in
jb
cld
push
aas
push
xor
rcl
lds
mov
push
mov
or
jo
icebp
jae
imul
push
xchg
or
rclb
test
imul
push
jl
push
inc
inc
mov
sahf
push
jb
call
xchg
mov
push
mov
push
lahf
sti
inc
mov
stos
pop
ret
lods
sbb
xor
insl
jle
adc
pop
xchg
sbb
dec
mov
sbb
add
iret
sbb
xchg
push
fnsave
gs
outsl
cmp
int
inc
cmp
adc
cmp
jo
std
xchg
mov
mov
pop
xchg
mov
shll
push
addr16
pushf
push
pop
sub
sbb
rcll
insb
shlb
sbb
dec
sub
fisubrs
mov
mov
push
inc
xor
mov
lahf
pop
jb
idivb
rclb
pop
lds
or
sbb
cli
int3
push
add
xor
dec
or
sub
push
sbb
shr
nop
aam
sbb
mov
push
sbb
xchg
ja
sbb
aad
push
pop
inc
imul
lds
push
xlat
addr16
lret
sub
or
jl
lock
pop
mov
std
jb
mov
pop
push
mov
mov
dec
ss
inc
sarl
xchg
or
mov
adc
lcall
imul
scas
sub
mov
cmpsl
jo
ja
dec
sbb
fimuls
fisttpll
cltd
int
cmp
mov
mov
mov
pop
push
dec
pop
mov
jle
dec
inc
dec
into
popa
lret
popa
jg
adc
mov
mov
clc
arpl
std
fs
lods
xor
outsb
fwait
js
sub
pop
leave
sub
loop
lds
lahf
cmp
je
jmp
or
xor
icebp
cmp
daa
jge
lret
mov
mov
imul
shlb
jg
icebp
lds
movsl
sub
arpl
pop
mov
sahf
xchg
adc
out
inc
aas
cmp
jns
frstor
test
or
loope
pushf
and
aaa
pushf
sbbb
fmuls
pop
test
mov
push
idivl
addr16
xchg
stc
add
cwtl
mov
sbb
lret
cmp
adc
push
xlat
jb
fcomip
call
int
cmpsb
push
cltd
imul
xchg
scas
shll
push
xchg
mov
fistpll
in
shrb
sub
cmpl
add
push
inc
sbb
pop
in
frstor
mov
cmp
imul
sbb
sbb
add
dec
clc
addb
out
stos
or
cmp
mov
ljmp
jbe
pop
push
test
xchg
jb
es
inc
sarl
cld
sbb
sub
cmc
cmp
xchg
dec
ret
inc
cmpsl
mov
call
xchg
iret
and
push
popl
jno
shlb
and
xor
add
pop
xchg
sub
xchg
cmpsl
aaa
add
pop
leave
cmp
jmp
test
movsl
mov
mov
mov
jb
pop
xlat
popf
fs
ret
popf
pusha
jle
jb
sti
mov
loope
lret
jns
pop
ror
orl
jnp
das
std
jge
push
xchg
sub
push
iret
cmc
shr
mov
call
mov
das
rorl
cmp
sbb
cli
xchg
or
pusha
add
cld
sub
pop
pop
mov
sbbl
imul
lahf
std
cmpsl
sti
add
movsl
sbb
ljmp
mov
stc
mov
or
jge
leave
and
movsl
mov
add
dec
enter
sbb
mov
mov
and
mov
loopne
adc
fsubl
xchg
pop
pop
outsl
in
xor
sti
or
loop
cmpsb
mov
loopne
cs
popa
jno
push
ret
xor
movsb
fsubrs
mov
add
roll
std
pop
cmpsl
fmull
sahf
adc
jmp
jo
jnp
shlb
jno
cmc
sub
fdivl
jmp
sub
icebp
mov
das
push
mov
push
sub
imul
gs
movb
testl
mov
xor
sbb
sub
mov
pop
push
ds
fnstenv
adc
xchg
fscale
mulb
out
xchg
and
pop
jl
pop
and
stos
ss
or
sub
scas
sub
fsubs
inc
pop
cmp
sub
cli
push
xchg
cld
nop
testl
jge
jmp
jg
out
ja
mov
mov
sub
xchg
test
rolb
rcll
in
add
push
mov
push
inc
mov
fists
lahf
divb
sub
mov
cld
adc
loopne
mov
out
les
lahf
pop
jmp
dec
aaa
gs
fcoml
repz
mov
cmp
stos
sar
mov
mov
and
js
cld
ljmp
roll
dec
cmp
in
pop
fisubs
dec
push
ret
idiv
jge
pop
fisubs
sbb
sti
dec
and
mov
xor
dec
pop
dec
mov
js
arpl
mov
xlat
movb
add
test
lret
out
or
jl
out
or
stos
int
jno
out
not
call
cmp
lcall
or
mov
movsl
in
insl
add
fs
mov
jge
cwtl
cld
sub
ss
pusha
scas
aad
mov
sub
jae
and
movsb
xor
or
sbb
push
mov
aas
xchg
adcl
lret
pushl
lods
je,pt
mov
iret
xchg
hlt
shlb
dec
xchg
adc
sub
inc
loope
push
dec
int
incb
cmp
xor
lods
inc
ret
inc
xchg
add
and
subl
sahf
sbb
and
xchg
scas
popa
cmp
mov
mov
jb
xchg
inc
inc
pop
pop
fidivl
xchg
sbb
adc
mov
and
sahf
stos
leave
inc
pusha
pop
or
insl
and
shlb
sbb
ret
cmp
inc
xlat
pop
xchg
jo
into
fiaddl
push
jnp
adc
icebp
jg
fiaddl
loopne
sub
mov
inc
sarl
sub
loop
bound
add
das
daa
mov
sahf
inc
push
rorb
xchg
pushf
fdivl
inc
ret
xchg
xchg
outsb
inc
add
lds
add
insb
jp
pop
sbb
or
jle
es
xlat
cmp
ljmp
insl
pop
pusha
inc
or
out
fstl
outsb
xchg
je
gs
repz
dec
jns
das
shll
push
push
xor
sub
rol
dec
call
mov
mov
imulb
icebp
enter
pop
xchg
iret
cmpl
dec
int3
add
jle
or
cmpb
repnz
movsl
ljmp
push
add
jnp
shrb
mov
sbb
jmp
data16
in
sub
gs
pop
xor
mov
mov
js
mov
lcall
pusha
inc
mov
sbb
sub
mov
adc
scas
mov
fs
adc
out
jae
push
cwtl
lret
mov
fs
sub
or
cmp
mov
repnz
aas
push
or
dec
pop
out
jnp
sub
mov
sbb
cmp
cmp
dec
xor
lock
xchg
mull
pop
xlat
and
jns
lcall
pop
movsb
mov
xchg
shlb
mov
ficompl
sbb
out
mov
ljmp
and
jl
shlb
adc
movsl
leave
mov
js
insl
xchg
dec
xor
test
ss
inc
mulb
mov
std
inc
call
pushf
ljmp
push
test
aas
or
sub
testb
cmpb
adc
int
popf
ss
or
push
les
ljmp
bsr
inc
inc
dec
cs
xchg
insl
stc
fwait
gs
jae
ds
ds
add
pop
cmp
fisttps
cmc
mov
sarl
test
and
push
shl
inc
and
pop
shll
fstpl
insl
test
or
pop
lods
push
cwtl
sbb
ds
dec
in
or
push
test
pop
jge
mov
mov
pop
mov
leave
mov
xor
cmp
clc
mov
cwtl
sbb
andl
dec
mov
xor
mov
fsts
ds
sar
xor
inc
ds
cld
int3
xor
or
mov
mov
lock
push
lds
test
push
shlb
in
stos
add
movb
and
out
outsb
jmp
jge
cmp
dec
lds
inc
inc
jnp
pop
scas
push
adc
push
push
or
and
push
les
out
bsr
es
sti
fdivrs
pop
xor
dec
mov
inc
cmp
xchg
loop
cwtl
clc
jmp
pop
xlat
push
dec
xchg
js
jg
sub
and
pop
xor
adc
adc
xor
cmp
sbb
addl
scas
inc
psrlq
in
leave
push
fiaddl
into
mov
jne,pn
inc
push
fidivl
or
xor
pop
xor
shll
pop
cmpsl
mov
mov
pop
sarb
inc
mov
xchg
mov
inc
jne
add
mov
mov
nopl
and
cmpsb
ja
cmp
or
sarl
jo
add
xorb
mov
sub
or
ja
push
lock
xchg
std
jp
or
pusha
mov
lods
pop
cltd
cld
pop
push
cmp
out
jg
push
fistl
mov
adc
inc
insl
mov
jmp
lret
fcmovnbe
pop
stos
lcall
je
pop
rcrl
les
fwait
imul
cld
mov
inc
leavew
std
pop
inc
jmp
xchg
add
test
cmp
sti
xchg
mov
addl
adc
xor
fsubl
sar
movsb
xchg
jns
push
mov
or
scas
mov
fwait
sar
push
add
fwait
rclb
sbb
and
lods
faddl
or
sbb
add
cmc
xor
jge
sub
or
jnp
and
sub
or
dec
ret
mov
or
jl
jno
setno
into
xchg
int
adc
xchg
xchg
fwait
scas
push
out
scas
xchg
mov
pop
sbb
arpl
xor
and
inc
int3
xchg
xchg
pusha
fs
dec
lret
adc
lret
lret
cmp
rclb
cmp
push
fldl
xchg
push
loop
sbb
add
nop
mov
sub
mov
mov
cld
inc
jl
aas
push
mov
ret
fildl
add
or
ds
aaa
jecxz
mov
push
and
lret
lds
mov
dec
pop
mov
mov
int3
xchg
push
mov
mov
sub
jmp
or
testb
mov
dec
ja
and
mov
les
ljmp
scas
decl
xor
das
add
lahf
cltd
mov
out
adc
cmp
mov
xlat
faddl
fucomi
add
mov
adc
loope
sub
arpl
jne
fsub
mov
mov
lahf
int
stc
push
inc
sub
inc
icebp
fiaddl
inc
lods
ret
jnp
push
lea
pop
jno
mov
sub
popf
loope
push
nop
sbb
push
jmp
nop
in
test
pusha
sbbl
dec
int3
rol
inc
cmp
push
cld
jnp
jle
aas
pushf
pushf
xor
adc
xchg
jmp
aad
cmp
int3
pop
fists
mov
jo
add
xor
dec
clc
adc
mov
sar
adc
mov
ret
adc
js
insl
cs
mov
xor
xchg
adc
inc
stos
mov
mov
movsb
int
lcall
jne
sub
ljmp
in
push
adc
stos
xor
dec
lods
fucomp
ficompl
jle
test
int3
inc
push
outsb
mov
cmp
outsw
in
enter
adc
sub
fcmovnbe
loope
shrb
fdivrs
jl
adc
lcall
iret
and
and
cmc
inc
mov
cmp
addr16
mov
lcall
and
mov
aaa
repz
add
mov
mov
push
jb
or
jecxz
inc
xlat
in
test
sti
mov
mov
and
sub
sbb
call
cmp
aam
fiaddl
cltd
notl
cli
adc
and
xor
pop
hlt
insb
dec
mov
in
sub
or
movd
add
jne
fs
popa
push
aaa
loopne
jno
pop
test
scas
sbb
push
inc
aaa
push
mov
nop
cs
in
and
aaa
xor
cwtl
scas
in
imul
test
repz
ja
into
stos
pop
nop
lods
jge
push
and
push
pop
std
xchg
insb
mov
push
insl
fcmovb
sbb
fcomps
mov
mov
les
ror
nop
push
or
inc
mov
pop
imul
xchg
pop
mov
add
std
aam
ja
jbe
js
bound
das
dec
repz
cli
test
pop
jnp
inc
mov
adc
les
and
inc
fdiv
fsincos
mov
clc
aad
fistps
sub
out
mov
mov
pop
test
pop
divl
inc
icebp
add
push
xor
ds
sarb
int
and
scas
pop
push
aam
inc
fwait
mov
adc
cmc
xchg
lods
incb
mov
mov
and
pop
imul
lret
fidivrl
inc
dec
arpl
xchg
jno
push
dec
cmpsb
dec
fs
or
mov
cmc
xchg
stos
xchg
jl
xor
clc
scas
rolb
orl
or
jl
xchg
mov
push
xor
or
jns
mov
out
jae
aam
mov
jle
mov
in
jmp
test
jecxz
call
cwtl
cmp
xor
xchg
push
xchg
lcall
bound
dec
shlb
inc
push
mov
mov
arpl
mov
push
xchg
cmp
out
stos
mov
rcll
repz
and
std
out
push
fsubrs
or
popa
mov
xchg
push
mov
jbe
movsl
adc
push
dec
jp
xchg
aaa
repnz
pop
icebp
mov
push
jbe
out
andl
imul
cmp
xor
xorl
xor
and
lret
mov
jl
loopne
fidivrl
sub
setne
fcmovu
mov
sbb
out
mov
fstpl
shrb
jns
aad
loope
sti
mov
lods
mov
xchg
jg
ja
test
imul
xchg
ljmp
dec
xlat
cmp
in
push
insb
sbb
cmc
mov
jge
ja
les
out
ss
or
les
sub
insb
ret
test
jge
mov
push
mov
mov
in
sub
sub
sbb
and
loop
adc
jns
xchg
push
add
inc
or
and
pop
push
mov
mov
pushf
sub
cmp
pusha
jno
movsb
fldcw
dec
lcall
dec
add
loop
mov
lea
repnz
lret
fcomi
outsl
std
jl
mov
adc
int3
and
inc
mov
xor
inc
shl
das
push
int3
mov
xor
xlat
insb
inc
clc
imul
pusha
adc
cmp
int
cmc
std
movsl
mov
pop
scas
dec
add
lods
popf
insl
sbb
data16
mov
xchg
imul
in
xor
das
aas
mov
cmc
repnz
mov
int3
incb
jno
jp
loop
int3
fucomp
ja
imul
cs
add
mov
in
jg
and
xchg
out
fld
xchg
je
cmp
mov
stos
aas
lods
rorb
fdivrs
movsb
xor
lock
jb
and
movsb
ljmp
cmc
fwait
pop
mov
das
push
adc
shrl
jbe
dec
pop
jne
xchg
dec
mov
jne
jae
mov
dec
push
ret
dec
mov
cmp
pop
out
mov
inc
jae
and
adc
ljmp
cwtl
cmp
push
inc
pop
pop
dec
inc
sti
decl
fisubrs
pop
adc
scas
test
sarl
addr16
inc
push
sub
dec
popf
bound
test
and
push
jns
or
pop
leave
mov
out
filds
mov
jns
jmp
loopne
std
in
ds
lea
mov
cmp
pop
pop
jnp
hlt
mov
das
aam
or
into
incb
add
jg
add
cmp
cltd
inc
mov
sbb
aam
add
inc
repz
mov
mov
call
mov
cwtl
repnz
jecxz
test
les
push
lods
scas
push
sub
lods
jl
mov
clc
mov
jmp
push
xchg
pop
enter
aas
outsl
sbb
dec
test
loopnew
faddp
dec
movsl
pop
sub
inc
xchg
xor
test
ds
insl
sarb
cmc
jmp
mov
mulb
mov
sub
mov
and
sub
dec
cmpsl
into
xchg
xchg
or
lcall
mov
lret
mov
inc
mov
mov
js
push
xchg
scas
out
aaa
pop
out
sub
out
jle
xchg
pop
mov
aam
cmp
arpl
shl
push
out
jae
mov
dec
jno
pop
push
xor
mov
mov
dec
pop
imul
es
mov
pminsw
pop
xchg
ret
and
mov
mov
outsb
jnp
push
jae
mov
sbb
add
push
mov
stos
mov
jno
hlt
inc
pop
inc
lods
jbe
mov
push
orl
je
ret
pop
push
lea
dec
sub
fldl
mov
dec
shll
mov
dec
loop
push
pop
mov
xchg
xor
dec
pop
jl
pop
loopne
in
sbb
xchg
stos
repnz
adc
mov
mov
xchg
adc
ror
pop
push
movsb
cmp
push
das
test
aaa
or
iret
into
test
mov
ss
mov
cmpsb
xchg
xor
jecxz
aad
in
rclb
rcr
jno
sbb
push
mov
mov
mov
cmp
jne
std
and
in
xchg
out
imull
sub
dec
out
enter
std
les
push
push
mov
orl
pop
cmp
or
jbe
std
out
or
push
or
leave
sub
aad
test
out
xor
mov
outsb
dec
dec
pminsw
cmp
stos
fisubrl
mov
aam
and
out
xchg
mov
add
and
cmp
repz
nop
adc
mov
loope
fdivr
ja
jle
ret
adc
jmp
cs
mov
cmp
adc
mov
mov
jae
mov
and
mov
and
sbb
into
hlt
sub
mov
xchg
push
mov
push
rorb
pop
mov
stos
pop
dec
ljmp
and
dec
xchg
add
pop
out
cmp
xchg
sub
fisubs
mov
jl
mull
insl
scas
add
and
mov
sti
or
fnstsw
lock
jns
push
imul
into
std
loope
lret
gs
mov
push
stos
push
push
pop
cltd
and
push
psubq
xchg
xchg
cwtl
push
jg
lds
adc
xchg
test
lret
xchg
lret
ret
xchg
and
or
imul
movsl
adc
fidivrs
fstpt
lock
dec
add
mov
popa
and
mov
xchg
aad
cltd
mov
js
push
repz
xor
adc
test
and
sub
icebp
and
mov
or
icebp
mov
add
loop
push
dec
mov
lock
mov
aad
mov
movsb
sti
lods
insb
ds
iret
lods
hlt
rorb
leave
rcrl
mov
or
mov
clc
cmpsl
insl
push
fcoml
adc
inc
mov
xchg
lea
xchg
lret
cmp
decl
mov
loopne
and
or
incl
add
xchg
imul
xchg
xor
and
insb
je
inc
or
repz
xor
mov
xor
mov
jg
pop
push
dec
or
es
cli
testb
cmp
add
dec
sti
cld
cmp
jno
add
pop
arpl
aad
and
jecxz
cmp
jle
out
mov
and
fs
sub
inc
cmp
sub
sub
xchg
in
scas
dec
gs
inc
adc
push
mov
ret
sbb
xor
js
pushf
insb
pop
push
add
jnp,pt
stos
insl
lar
add
mov
push
xor
ss
test
jb
cs
push
cli
aad
or
jb
rcr
sahf
loop
dec
out
jl
rorb
dec
and
bound
adc
insb
cmp
in
inc
mov
mov
push
push
dec
push
stos
mov
xchg
mov
shr
push
es
fnsave
stos
test
dec
jmp
inc
mov
ficoml
gs
int3
mov
fucomi
stos
pop
repz
insl
xor
out
fimuls
sbb
mov
subb
mov
xor
mov
and
inc
lret
loop
scas
insl
ficoms
ret
sbbl
icebp
out
out
push
sub
adc
and
hlt
loope
mov
sti
cmp
imul
add
mov
movsb
ficoms
jmp
dec
cs
adc
and
das
inc
jl
scas
adc
pop
sbb
orb
repnz
shl
idiv
test
jns
sbb
ja
idivl
pop
ja
fwait
outsb
inc
push
repnz
pop
cmp
and
mov
pop
inc
mov
xor
movsl
dec
jo
and
les
xorb
shll
shlb
inc
mov
mov
cmp
stc
dec
outsl
shl
cmpsb
fldt
leave
jns
fidivrs
fstp
popa
and
aas
xlat
loopne
fs
cs
and
mov
mov
mov
mov
cli
xchg
push
add
in
or
in
xchg
sub
ret
xchg
add
cs
sub
repz
in
rolb
outsb
push
mov
cli
out
cli
pop
in
adc
out
in
inc
flds
and
cmpsb
push
dec
sub
sub
movsl
test
nop
push
mov
pop
push
aad
mov
or
sub
mov
ljmp
sahf
dec
add
cmp
cmovnp
in
mov
repz
sub
repz
rcrl
cmpsb
xor
dec
pop
frstor
or
je
xchg
mov
xchg
loope
pop
test
out
sbb
sbb
out
pop
fcoms
sub
sub
shrb
hlt
mov
and
add
fs
clc
mov
mov
shr
testb
or
mov
insl
dec
mov
and
xchg
leave
or
std
mov
adc
fstpl
mov
rcrl
addr16
lods
in
fsts
les
clc
std
mov
sub
push
and
mov
cmp
xchg
lahf
aam
pop
cli
push
das
push
not
push
adc
icebp
jge
flds
inc
leave
cmp
and
mov
add
push
jmp
ret
test
dec
mov
cmc
add
sub
lods
pop
mov
lahf
mov
aad
ret
jnp
jb
je
add
pushf
addr16
pop
push
sahf
cmp
dec
sub
bnd
jnp
imul
cltd
jecxz
cmp
adcb
mov
into
and
js
jg
mov
mov
pop
xchg
int3
lahf
mov
jns
dec
add
imul
ficoml
popa
pop
xlat
fistpl
fcoml
mov
fsub
fimuls
mov
lea
dec
lock
jnp
cld
test
jmp
jns
push
lods
insb
sub
jno
push
stos
out
xchg
or
fcompl
filds
cmp
aam
insb
pop
add
sbb
inc
mov
test
outsl
arpl
xchg
xor
test
mov
das
jbe
orb
lcall
mov
mov
outsb
out
icebp
inc
xor
int3
xor
dec
mov
outsl
call
pop
mov
xor
mov
push
xchg
ja
add
push
test
ljmp
adc
pop
pop
jno
push
sbb
mov
xchg
imul
and
out
insb
hlt
cli
dec
stos
jp
jne
test
or
lods
xor
cltd
push
adc
mov
repz
add
out
iret
cltd
bound
repz
roll
call
push
dec
nop
jns
aad
sub
in
rol
xor
cli
mov
pop
inc
jns
loope
aaa
lret
ret
pop
dec
mov
mov
or
mov
stc
movsb
jmp
lret
nop
sub
sub
fiadds
push
cmp
sbb
pusha
fistpll
pushl
xchg
ja
aaa
push
loope
test
cmpsb
test
js
pop
push
sbb
mov
shlb
sub
cmp
xchg
push
sahf
imul
add
jns
je
or
cmp
popaw
cwtl
pop
sub
bound
cld
push
lock
inc
push
xlat
sahf
and
fnstcw
add
xor
jne
add
insb
mov
movsl
mov
shll
test
cmc
aad
test
repz
jge
inc
cmp
mov
jnp
pop
stos
mov
xlat
or
mov
sub
sub
push
mov
mov
cmpsl
mov
mov
and
es
mov
add
ds
lods
jecxz
inc
add
sbb
mov
sub
daa
iret
lret
sub
shl
add
aaa
sti
repz
je
push
cld
hlt
xchg
add
pop
aas
add
jo
aaa
mov
cwtl
or
adc
imul
cld
sub
sbb
popf
ret
xor
mov
mov
cs
add
cmp
inc
sar
mov
sarb
jl
ret
or
inc
push
imul
je
rcll
pop
es
xlat
xchg
int
jmp
push
cmpsl
dec
hlt
lahf
ret
xor
test
dec
stc
pop
scas
fistpll
push
inc
faddl
lea
shl
mov
mov
sahf
push
mov
mov
cli
and
sub
sub
daa
mov
xchg
xor
mov
rep
mov
cmp
loopne
movsl
lea
sbb
int
lods
push
test
imul
jp
adc
rorb
jns
pop
mov
pop
out
xor
jmp
lods
add
aaa
in
pop
cmp
push
int3
dec
mov
out
cmpb
scas
inc
mov
fsubrl
mov
mov
rcr
ljmp
icebp
jge
std
dec
xchg
xchg
sbb
jnp
out
inc
int
iret
dec
mov
mov
push
sub
mov
push
inc
add
fsubrl
lea
and
gs
insl
mov
mov
pop
dec
lock
test
push
pop
mov
sbb
ror
fs
mov
rcll
cli
fld
jl
or
stos
xchg
sbb
in
mov
sarl
ljmp
xchg
xchg
xchg
push
dec
testl
sub
add
pop
adc
inc
pop
adc
xor
pop
mov
dec
adc
xchg
xor
mov
lock
sar
fisttps
test
rcrb
or
fs
push
jne
cmp
mov
push
cmp
mov
xchg
iret
inc
jo
loope
in
mov
pop
test
pop
out
ss
fwait
stc
mov
or
bound
test
fdiv
sub
sbb
adc
movsl
jge
ret
jmp
or
mov
cld
dec
jg
push
xchg
xchg
dec
sub
in
fsubrs
mov
add
sti
jnp
jmp
call
push
out
hlt
cmp
popa
inc
push
dec
inc
add
lods
pop
gs
sahf
xchg
stos
aam
push
inc
jmp
cmpsb
es
xor
clc
sub
push
add
pop
cmp
popf
push
adc
iret
ss
dec
sbb
push
xlat
sahf
push
mov
rcrl
sub
jg
push
scas
add
arpl
insl
push
sub
div
sbb
xchg
enter
push
add
sub
movsb
add
xchg
xor
dec
jno
rep
testb
mov
call
test
and
and
inc
int3
fisttpl
dec
xchg
scas
stos
outsb
or
adc
cmp
ret
push
punpckhbw
in
aaa
or
push
sbb
jno
insl
push
jb
mov
jnp
mov
shll
pop
push
xchg
mov
dec
mov
jmp
pop
or
aaa
subl
adc
inc
mov
xor
jl
or
hlt
adcl
aas
stc
jmp
cmpsb
adc
sub
bound
scas
jmp
jmp
and
sbb
gs
inc
rol
or
cmpsb
push
mov
push
jae
push
popf
add
pop
fidivrs
adc
fcoms
ret
test
testb
out
jno
test
ret
imul
add
lahf
jecxz
pop
rclb
sub
inc
cmp
loop
mov
push
cmc
test
push
scas
imul
jnp
push
jb
jg
jl
insl
dec
test
sbb
mov
jb
or
repnz
mov
or
addb
mov
std
mov
jne
nop
jb
scas
cld
sub
jmp
mov
pusha
xchg
cmpl
or
faddp
jge
lahf
shll
adc
fsub
fimull
inc
outsb
ret
and
mov
cmp
add
loopne
addr16
push
pop
fisubrs
sbb
loopne
movsl
jae
sbb
pop
push
adc
mov
insb
jnp
outsl
js
nop
dec
hlt
pop
jmp
dec
cmp
push
cs
daa
sbb
lahf
and
adc
inc
fs
lret
insb
cmp
inc
xchg
fsubrl
adc
push
mov
add
and
cli
xlat
mov
xchg
xor
add
shll
mov
lea
test
sub
dec
movsl
pop
push
push
les
in
push
int3
ror
pop
clc
mov
out
bound
aaa
out
addr16
xorl
insb
popa
rclb
jo
mov
cmpb
iret
int3
pop
shll
mov
in
sbb
aad
mov
movsb
sub
and
gs
dec
lds
dec
cld
inc
loope
arpl
roll
sbb
jne
es
add
push
fwait
sbb
pusha
dec
fwait
rcrl
dec
lods
stos
stos
scas
jmp
fs
imul
and
pop
das
add
push
mov
dec
push
fidivrl
mov
inc
and
repnz
roll
xor
and
cmovne
scas
andl
mov
out
xorb
in
mov
sub
push
insb
outsb
lods
movsl
push
push
inc
cmc
out
aam
and
pop
push
jp
cmp
xor
adc
sub
fisubrs
sahf
and
xor
add
inc
pop
inc
add
orl
adc
xchg
dec
pusha
inc
arpl
mull
and
cmp
imulb
lcall
insb
and
lods
rol
lock
insb
adc
stos
rcrl
mov
cmp
dec
data16
mov
mov
inc
imul
out
inc
test
sarl
fs
xor
sbb
mov
and
enter
dec
movsl
lds
jns
mov
lret
int3
lret
movsl
cmp
mov
cltd
sub
or
rorb
mov
shrb
push
push
push
sub
in
and
push
or
xchg
decb
enter
mov
mov
shll
test
repnz
fsts
xchg
mov
cwtl
enter
jo
pusha
xor
mov
xor
cld
mov
xor
ja
imul
xchg
into
lcall
xchg
ds
test
test
push
nop
pop
xor
call
dec
enter
mov
imul
shrb
jo
sbb
push
xchg
inc
fisttps
sbb
movsb
cli
in
or
sub
insb
mov
jno
mov
mov
push
mov
sahf
add
inc
push
lret
cs
xchg
je
je
or
cmp
mov
test
pop
push
test
ret
sub
shll
jae
paddsb
je
pop
roll
fsubr
add
imul
adc
inc
inc
sbb
push
mov
out
mov
enter
pop
xchg
push
pop
fstpt
pop
sub
dec
outsl
popf
xchg
in
fwait
jmp
push
sub
or
xorb
imul
jmp
fchs
imul
out
push
push
sti
lods
ds
test
and
xchg
movsl
hlt
push
xor
ja
push
aad
sbb
sbb
int
leave
jmp
movsb
lods
mov
das
std
mov
add
dec
mov
call
and
int3
call
cmp
sbb
mov
fs
pop
scas
mov
imul
adc
int
clc
cmp
xlat
imul
and
loop
repz
sbb
jne
mov
clc
push
and
in
test
dec
dec
lcall
sub
add
mov
movsb
dec
popa
daa
pop
aaa
out
xchg
fcmovb
push
jge
jmp
push
push
mov
or
shll
aam
pop
jle
jo
pop
xor
adcb
mov
jb
sub
clc
sbb
data16
mov
mov
lcall
fcomip
fistpl
test
xlat
adc
and
sub
or
dec
dec
push
cmpsb
inc
lods
into
and
insl
sbb
mov
add
and
lahf
mov
xchg
mov
stc
scas
ds
loopne
in
adc
sbbl
add
push
mov
jbe
cmp
loope
jmp
jge
loopne
out
inc
ret
pop
movsl
lret
popa
dec
ja
std
add
test
testb
ficompl
test
repnz
pop
mov
xlat
adc
jg
je
add
fisubs
fs
xchg
dec
mov
sub
ljmp
cmpsb
bound
lods
xchg
add
cld
mov
insb
xchg
add
inc
clc
xchg
lea
mov
sbb
mov
fiadds
aas
mov
sahf
mov
loop
push
push
and
mov
xchg
fstps
inc
jb
pop
mov
sbb
mov
mov
xor
das
dec
sub
fbstp
fimuls
in
fbstp
cmp
mov
fwait
out
jne
xor
dec
dec
cltd
mull
sub
sbb
pop
or
out
test
fadd
mov
jns
add
lods
jmp
icebp
je
sahf
pop
mov
faddl
mov
ficoml
sub
xor
push
dec
aaa
test
faddl
es
mov
sub
push
and
sahf
and
push
pop
sub
or
mov
data16
lret
mov
ret
or
pusha
js
push
push
aaa
mov
hlt
cltd
popf
addr16
push
mov
aaa
out
push
or
dec
gs
hlt
xor
add
fsubs
insl
xor
xor
rcll
aam
and
cli
xor
push
fs
lcall
nop
orl
fs
repnz
mov
aam
cmc
sahf
sbb
add
and
xor
xor
movsb
sbb
mov
rcrl
cmp
adc
fmuls
mov
lea
inc
stc
adc
into
ja
loop
adc
sbb
mov
sub
insb
mov
and
fcomps
aad
cltd
or
into
roll
push
in
rorl
cwtl
repz
adc
fdivr
mov
or
and
sti
push
insl
mov
lds
push
push
pop
rorb
pop
xor
aad
ss
cmp
lahf
test
roll
cmp
jl
xchg
insb
mov
call
mov
and
pop
and
push
pop
mov
arpl
push
cld
in
dec
inc
inc
xchg
mov
mov
or
ljmp
mov
mov
and
xchg
outsl
xchg
adc
icebp
inc
fcomip
jne
cli
test
push
dec
or
mov
out
cmpsl
pop
mov
mov
arpl
cmp
adcb
push
ret
scas
lods
cmp
adc
sub
add
loopne
push
gs
pop
stc
jp
xor
jb
inc
ljmp
in
dec
adc
loopne
adc
clc
hlt
fstpl
xor
insl
pop
mov
dec
and
dec
and
pop
popf
xchg
add
push
push
out
bound
es
and
and
mov
and
xchg
xor
push
sbbb
xor
xor
sti
mov
cmpsb
jmp
mov
inc
in
add
into
lret
imul
enter
imul
inc
lahf
rol
adc
wrmsr
repz
ja
xchg
push
push
scas
ret
and
or
inc
mov
sub
mull
into
arpl
mov
jl
pop
int
push
out
cmp
push
jbe
bnd
or
aad
mov
test
inc
stos
mov
leave
dec
sub
jns
cmp
std
lds
mov
sub
stos
punpckldq
movb
xchg
inc
stc
loopne
pushf
inc
sbb
add
adc
add
or
cmp
andb
pop
sbb
push
stos
shll
sbb
ja
push
cmp
jnp
test
rcr
pop
xor
jmp
std
jl
lahf
pushf
mov
lcall
cmpsb
fidivrs
sbb
jns
insl
mov
push
mov
cltd
lret
pop
ret
pop
mov
fnstsw
popa
int3
pop
jns
das
push
pop
leave
fs
ja
test
clc
ret
adc
sbb
mov
ret
xor
cwtl
mov
mov
xlat
sub
mov
xor
insl
inc
fldt
movsl
in
add
mov
out
movsl
daa
pop
sbb
scas
pop
es
cmp
or
sbb
cmc
xor
out
jge
shrl
out
in
mov
stos
aad
sub
cmp
cmpsb
pop
cmp
cmpsb
jmp
dec
shlb
cmp
imul
aam
hlt
push
fadds
mov
dec
mov
mov
adc
es
xchg
dec
insb
and
out
imul
sub
in
out
pop
idiv
xchg
mov
fbld
push
mov
jge
adc
or
jbe
adc
sbb
lods
ffree
or
inc
cmpsb
mov
xor
out
xchg
insl
clc
adc
sti
or
loop
xchg
aam
sub
sub
lret
orl
jg
push
pop
test
xchg
inc
pop
cmp
inc
inc
cmp
push
mov
rcll
dec
std
out
std
aam
xchg
and
fwait
adc
aas
sub
jne
arpl
das
fs
lock
sub
jb
dec
push
add
dec
lock
aaa
test
movsb
in
pop
add
jnp
cwtl
xor
out
xchg
push
cltd
in
sbb
les
sti
push
mov
mov
push
pop
inc
aad
iret
or
mov
xchg
add
push
dec
mov
pop
pop
sti
add
ja
inc
std
adc
lea
loop,pt
cmp
gs
cltd
jo
push
ljmp
insl
popa
insl
adc
or
dec
push
gs
mov
cmpsl
jecxz
jno
loopne
sbb
aaa
fldenv
xchg
push
jmp
push
inc
mov
adc
dec
cltd
sub
inc
popf
int
mov
xchg
stos
cwtl
cli
stos
clc
mov
mov
mov
jnp
inc
das
lcall
sbb
std
cwtl
negl
scas
fcoml
ljmp
or
lcall
xchg
mov
daa
cmpsb
fs
insb
leave
imul
sar
into
adc
xor
test
jmp
pop
xor
add
xchg
pop
jg
jl
or
mov
fwait
out
jl
push
lcall
adc
adc
loope
push
xor
cld
jg
int
daa
dec
add
and
mov
imul
sub
je
adc
fisttps
in
mov
mov
push
xlat
jo
cmp
dec
imul
call
outsl
pop
inc
repnz
xchg
mov
xor
mov
lahf
cmp
push
in
push
sub
dec
ret
xchg
mov
sbb
imul
jnp
mov
xlat
jge
jno
pop
dec
cmp
mov
push
aam
mov
push
push
mov
mov
xchg
jnp
mov
sarb
out
mov
mov
xchg
pop
mov
and
mov
jns
movsb
rcrb
das
xorb
hlt
xor
ss
rcr
fimuls
fisubrl
jo
mov
xor
xchg
fisubl
shlb
lods
nop
add
js
dec
jb
hlt
fbld
sbb
xchg
jg
es
aaa
mov
sub
popf
pop
ja
popf
mov
bound
cmp
adcb
mov
pop
jmp
adc
adc
inc
imul
push
hlt
aaa
sar
push
xor
inc
adc
push
and
pop
in
mov
fwait
adc
aam
scas
jle
ud2
adcb
rcr
adc
mov
shll
les
dec
imul
mov
adc
inc
int3
adc
pop
into
dec
inc
mov
popa
inc
les
adc
xchg
call
es
stos
lcall
jo
test
push
dec
mov
in
movsb
inc
dec
jl
icebp
sarl
sahf
fidivrl
xor
loopne
xchg
mov
add
jnp
mov
adc
mov
xchg
jae
insb
cwtl
xor
fmull
cmc
mov
mull
das
mov
repnz
pop
xor
jbe
sbb
leave
add
scas
push
scas
inc
cmpsb
dec
int3
in
pop
sbb
mov
or
add
std
mov
mov
jbe
xlat
mov
adc
out
lods
dec
inc
out
adc
loop
push
dec
mov
xor
xchg
sarl
push
in
jle
popa
lret
add
mov
aaa
out
mov
cmp
imul
lds
cmp
aas
lods
cpuid
and
ds
adc
dec
out
repnz
push
divl
mov
dec
dec
or
dec
sbb
out
in
cld
mov
mov
lock
mov
adc
sub
mov
rcrl
inc
icebp
out
aad
in
pop
jl
mov
xchg
lea
adc
sbb
sub
xchg
scas
push
xchg
mov
sub
fmuls
or
fmul
cmp
fiaddl
xchg
mov
pop
mov
lea
cli
lret
mov
cmp
lock
mov
mov
push
xchg
pop
pop
mov
pop
adc
cmpl
mov
repz
in
movsb
sub
imul
inc
lock
aas
jmp
mov
mov
popf
adc
mov
lahf
cmc
mov
nop
arpl
outsl
ret
fimull
sbb
push
into
mov
jae
mov
addr16
inc
roll
out
push
and
ffree
dec
sbb
js
aam
sbb
adc
stos
jp
rcl
jg
in
clc
enter
sarl
ror
inc
mov
mov
dec
and
lahf
xlat
sbb
or
pop
xchg
xchg
lods
loopne
pop
out
add
mov
add
or
lret
bound
dec
sti
xor
pop
stos
or
movsl
int3
pop
xchg
flds
stc
cwtl
loopne
mov
imul
fwait
and
repz
mov
das
xor
mov
xorb
push
sub
pop
push
jl
int
mov
sbb
inc
jg
push
pop
movsl
and
inc
and
pop
mov
push
test
mov
cmp
adc
xchg
and
ljmp
aam
pop
cmp
loope
pop
jg
aaa
push
rolb
or
push
lret
jbe
or
push
ds
aad
aaa
loope
xor
xchg
fsubl
into
push
loope
cltd
xor
sub
les
inc
insb
add
imul
jge
and
rcrl
pusha
mov
pushf
int
repz
jb
and
xlat
inc
dec
sbb
inc
ss
push
mov
jmp
subl
loopne
jbe
cmp
ds
xor
fs
ja
adc
fbld
dec
pop
mov
or
in
fsts
stc
mov
or
jne
icebp
bnd
xchg
mov
jae
add
test
jno
dec
sbb
xor
scas
addr16
das
pop
int3
xchg
push
test
pushf
mov
push
aas
jmp
pop
pop
cmp
pop
adc
xchg
int3
dec
xor
shl
bound
je
jns
fisubl
stos
dec
mov
lahf
pop
ds
loop
iret
sub
addr16
pushf
jb
inc
insb
imull
jge
das
xorl
adc
in
mov
add
mov
sbb
jbe
xchg
std
mov
push
int3
incl
cltd
cli
jno
add
out
xchg
xchg
inc
inc
cmpsb
sub
pop
dec
loope
stc
push
jo
jb
mov
ds
xor
push
sahf
fwait
or
xchg
mov
repz
int3
adc
mov
mov
push
adc
and
lret
mov
xor
aam
jge
and
mov
addr16
fsub
add
xchg
fidivrs
popa
in
rep
mov
dec
jo
leave
jg
sbb
daa
shll
std
cltd
daa
xchg
and
fsub
cmc
add
scas
mov
dec
sbb
inc
pop
cs
inc
inc
aas
adc
dec
jg
int3
cli
push
cmpsl
mov
pop
xchg
mov
daa
xchg
jl
dec
stos
xchg
add
lods
dec
ss
mov
mov
bswap
adc
push
stos
adc
icebp
push
pop
jo
ficomps
sahf
aam
mov
jbe
bound
jne
fwait
xchg
imul
loopne
jno
nop
loop
xor
mov
sub
shll
inc
nop
mov
mov
adcb
sub
outsb
dec
fldl
jo
mov
sar
push
movsb
mov
lret
mov
xor
daa
xchg
xchg
popa
les
add
xchg
mov
mov
push
dec
jno
mov
inc
push
imul
pop
lds
and
pop
add
cmpsb
rcr
sbb
sbbb
adc
jecxz
cld
ja
in
xor
imulb
stos
fucomip
mov
add
and
add
mov
add
pop
inc
or
insb
inc
or
addb
nop
inc
or
add
add
adc
add
add
add
decl
add
inc
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fcomp
add
lea
add
lds
add
add
sub
jge
jnp
xor
add
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
les
pop
pop
je
or
push
addb
rolb
add
pop
pop
pop
pop
ret
push
and
or
orl
jne
jne
inc
adc
mov
ret
mov
roll
inc
and
push
repnz
push
xchg
ds
pusha
push
mov
add
dec
or
push
inc
add
je
mov
push
call
dec
or
rol
or
cmp
outsl
dec
jne,pn
mov
in
mov
inc
push
jl
gs
iret
pop
mov
xor
mov
mov
shll
cmp
jb
push
cmp
sub
repz
andl
dec
jecxz
or
fiadds
fmuls
nop
mov
add
pop
pop
ret
xchg
add
mov
jl
loope
xchg
or
or
imul
jmp
or
jae
push
fbld
push
andb
sarb
incl
cmp
mov
mov
data16
mov
pop
frstor
fwait
xlat
push
sbb
rorb
sarb
ljmp
paddw
inc
std
adc
jge
pop
sub
push
loope
adc
jne
lea
add
push
call
xchg
into
adc
mov
enter
or
shl
rcr
adc
fldt
or
adc
push
orl
sub
out
jbe
cmp
add
decb
adc
shl
sbb
cmp
scas
sbb
pop
pop
mov
pop
mov
push
push
or
insb
das
rcll
or
test
jl
xchg
nop
rclb
adc
push
jbe
and
xchg
pop
dec
add
mov
addl
xchg
fildl
cmp
cmpsb
sbb
sbb
outsl
ret
ds
add
push
mov
fwait
nop
jne
mov
push
mov
and
inc
inc
push
div
jne
xchg
or
sbb
push
push
js
cltd
and
pushf
or
out
sbb
inc
adc
mov
sub
push
lods
lods
or
popf
push
adc
cmp
loope
addr16
jo
sbb
ret
lea
push
mov
add
call
or
out
mov
push
lock
in
adc
pusha
inc
je
ss
cmp
fisttpl
push
cmp
imul
call
push
pop
jmp
ljmp
enter
add
jne
loopne
rep
adc
popw
push
andl
or
mov
andl
addl
call
into
mov
out
sbb
test
adc
push
mov
clc
lea
push
mov
das
add
enter
std
sti
int3
pop
test
inc
mov
and
loop
inc
add
mov
sub
sahf
ret
shr
mov
add
movsl
add
pop
inc
push
or
push
pop
movl
mov
mov
es
into
xchg
mov
sbb
movntq
out
xor
mov
fcoms
jge
cld
nop
or
decl
or
sbb
out
add
clc
jmp
jmp
aam
lea
andb
loope
or
movsb
jnp
movsl
fistps
add
rcll
mov
bsr
lock
cmp
xor
inc
push
fdivl
cmp
je
stos
lock
lds
push
inc
orb
clc
xchg
mov
lcall
inc
enter
dec
lock
jnp
idiv
cmp
jmp
test
in
mov
jae
lock
mov
inc
cmpb
push
mov
sub
push
dec
loopne
or
movb
test
nop
sbb
or
inc
or
dec
clc
add
jl
push
xchg
dec
cwtl
mov
jge
scas
mov
sarb
push
in
sti
clc
cwtl
cwtl
push
jl
dec
xor
add
jecxz
add
stc
dec
lret
add
sub
jge
lea
push
test
cld
xor
sub
push
icebp
or
add
jmp
sar
jno
test
movsb
dec
fdivrs
push
mov
xchg
cs
sub
shl
mov
pop
test
ss
ja
daa
sbbl
stc
inc
lcall
xchg
add
adc
cmp
subb
lock
or
jb
pop
xor
sub
cmc
pop
pop
leave
pop
push
test
notb
push
add
jnp
add
inc
or
cmp
adc
adc
subb
push
push
test
lahf
and
and
xor
fdivr
cvtpi2ps
adc
addl
sub
sbb
outsl
push
or
test
pop
and
test
cmp
mov
call
add
push
call
aad
mov
add
or
add
lock
mov
xor
mov
add
mov
dec
add
jae
test
push
mov
jle
sbb
movsb
push
and
outsl
int
xchg
or
clc
sbb
push
call
mov
adc
sbb
cltd
push
push
fists
add
sbb
mov
cmp
jae
inc
mov
xchg
sahf
xchg
fs
sub
or
adc
ret
test
arpl
mov
xor
push
inc
adc
xchg
pop
sbb
sbb
inc
lea
inc
int3
mov
roll
push
push
and
test
push
movsl
sbb
xchg
xlat
es
sub
inc
push
aas
dec
test
push
ficoml
cmp
or
or
or
fdivrp
clc
add
and
inc
or
inc
icebp
dec
int3
roll
movb
int
sub
lods
or
push
call
sbb
or
add
mov
or
pop
pop
pop
pop
in
adc
cld
cmpsl
call
adc
inc
add
leave
jne
add
push
call
sbb
push
add
sar
mov
pop
testl
mov
pop
add
jmp
lods
xlat
sub
scas
leave
push
nop
add
sbb
in
and
ds
scas
pop
add
push
loopne
or
hlt
cltd
or
icebp
nop
sub
adc
cmp
dec
cmp
or
add
adc
cs
jmp
sub
push
clc
movzwl
test
xchg
jne
or
sbb
push
cld
inc
pop
adc
in
clc
add
cmp
jge
push
inc
movzbl
add
sub
sbb
je
enter
sbb
cmp
mov
int3
orl
push
push
add
into
add
jmp
ljmp
inc
lcall
inc
mov
push
psubsw
movsl
jmp
push
mov
clc
xor
adc
jbe
push
push
pop
mov
push
adc
dec
das
push
mov
out
testl
mov
int
in
sub
leave
adc
pop
jge
dec
or
sti
rolb
stc
add
movsl
sbb
push
fs
jnp
push
cli
movsb
outsl
rcrl
int
adc
stos
lret
into
pusha
cmp
adc
xor
rcrl
in
pop
pushf
mov
inc
add
lock
push
push
xchg
push
test
dec
mov
mov
pop
jge
push
outsb
dec
sub
ss
das
adc
add
adcl
dec
push
hlt
push
les
test
jge
fldcw
push
push
in
ror
inc
aam
xchg
jno
mov
adc
outsb
sti
lahf
inc
adc
or
jmp
pop
sbb
push
stc
shll
sub
adc
inc
movl
or
sub
cmp
jne
dec
pop
in
push
xchg
fimull
inc
or
sub
dec
mov
icebp
pop
sarb
lahf
sbb
and
push
je
add
xor
clc
inc
inc
or
or
lret
sbb
test
and
push
push
push
call
aaa
test
out
xchg
outsb
or
lds
sub
mov
outsb
sub
xchg
inc
mov
hlt
xchg
imul
xor
addr16
jmp
pop
inc
rorl
and
icebp
jge
push
adc
bound
jp
add
testb
test
pusha
test
adc
inc
push
push
test
lock
push
sub
inc
jecxz
cmp
mov
inc
jb
xor
imul
jmp
sahf
push
xchg
xlat
lods
movsb
cld
cmp
pusha
in
repz
sub
mov
loopne
rclb
pop
sbb
dec
or
jmp
ss
push
cmp
je
cmp
pushf
sbb
sub
mov
cmp
dec
adc
jl
sbb
popa
adcb
daa
jg
imul
push
cld
push
pop
inc
push
or
mov
sub
xchg
or
jecxz
scas
inc
and
jb
add
jne
mov
mov
and
or
call
and
add
mov
popa
je
outsb
and
push
outsb
push
push
jo
arpl
and
mov
repnz
je
and
imul
inc
dec
inc
cs
insb
pop
pop
jmp
imul
jne
je
sub
mov
movsl
dec
jne
xchg
xor
dec
push
outsl
pop
dec
popa
addr16
shll
js
ja
xchg
je
mov
adc
popa
or
jae
or
add
dec
inc
incl
imul
test
mov
scas
pop
outsb
fs
jo
adc
out
inc
je
out
insb
sbb
mov
leave
inc
add
mov
pop
sbb
xor
push
add
push
push
dec
dec
out
sbb
add
add
rolb
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
les
add
pop
add
fimuls
add
inc
or
sbb
or
add
inc
add
inc
or
adc
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
