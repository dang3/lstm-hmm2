add
mov
add
cs
jo
arpl
add
addb
add
add
push
add
add
add
add
add
jb,pn
jb
add
add
mov
add
nop
add
xor
add
add
add
pusha
add
loopne
rclb
pop
add
add
push
adc
add
add
incl
add
add
add
add
add
add
add
add
add
add
adc
insb
mov
pop
adc
mov
pop
adc
add
or
add
unpcklps
adc
pop
adc
adcl
push
add
add
rclb
jg
.byte
.byte
add
add
add
add
or
add
pusha
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
orb
add
xor
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
enter
shlb
add
add
add
add
add
add
add
add
lock
add
add
add
add
in
add
add
add
add
push
add
dec
add
add
xor
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
push
add
push
add
add
inc
add
jg
mov
scas
fisttps
cmpl
sbb
mov
aaa
fst
xchg
pop
xor
leave
jp
aaa
mov
in
gs
and
push
test
xor
jl
jo
push
xchg
xor
lods
repnz
dec
inc
jecxz
sub
jo
add
xor
mov
jbe
mov
adc
mov
shlb
hlt
sub
ficoml
call
xchg
mov
int3
loop
cmp
push
and
push
notl
cltd
mov
ret
orb
rolb
adc
dec
mov
inc
lcall
pop
xchg
ja
test
pop
mov
aad
arpl
jge
jnp
loop
sub
jmp
fnstcw
es
xlat
jl
mov
scas
dec
add
cmp
popf
stos
and
cmp
dec
sbb
mov
xchg
fcmovnbe
out
cmp
mov
and
adcb
push
push
mov
push
into
mov
jmp
push
xor
clc
xchg
out
push
jb
push
test
push
inc
pushl
fidivrl
loop
jns
add
ja
push
insl
jnp
dec
sbb
mov
pop
ljmp
test
aad
rcll
loopne
jae
insb
mov
sahf
pop
pop
sub
mov
mov
in
and
daa
pusha
bound
data16
push
dec
or
push
pop
stos
sbb
pusha
fwait
mov
xchg
test
addb
inc
roll
scas
fisttpll
fs
dec
test
sub
hlt
add
push
into
xor
adc
inc
ljmp
lret
push
mov
rclb
repz
ret
inc
movsl
mov
pushf
das
pop
fidivrs
loope
sub
sbb
lea
adc
cli
mov
and
or
scas
sub
nop
test
insl
cs
dec
icebp
stos
or
push
cmp
mov
and
xchg
imul
cld
inc
mov
add
mov
cli
aas
pushf
incl
adc
push
stos
jmp
bound
xor
jno
mov
outsb
xchg
adc
add
stc
mov
push
test
loopne
inc
fadds
jb
cmp
jns
out
jmp
std
cwtl
jnp
inc
outsb
mov
sbb
mov
aaa
jecxz
lcall
xchg
fdivrl
lods
add
outsl
fimuls
popl
mov
pop
das
and
subb
les
mov
into
jns
jnp
fidivrl
loop
sbb
jne
orb
stos
fadd
adc
mov
je
inc
lret
inc
loop
pop
sub
jecxz
fdivp
cld
mov
xchg
inc
mov
or
fs
ja
lret
add
lret
scas
into
scas
or
adc
loopne
imul
ja
stos
xchg
test
or
enter
shl
jle
popa
icebp
jecxz
push
pushf
test
rolb
sbb
test
test
xchg
aas
xchg
nop
add
into
and
mov
fdivr
mov
cld
test
sbb
jg
xor
xchg
in
and
jle
lcall
inc
adc
int
mov
mov
push
out
push
decb
in
out
lock
xor
pop
js
pop
sub
ret
pop
adc
sub
ss
cmp
mov
mov
lea
xor
in
xor
sub
add
stos
sbbl
dec
ja
jae
inc
jnp
leave
in
fmuls
cmc
roll
sarb
dec
inc
or
mov
clc
aaa
movsl
rclb
sbb
xchg
iret
sub
ss
xchg
mov
cmp
lahf
adc
fidivl
push
inc
sahf
shll
inc
and
cmc
ja
mov
mov
pop
imul
push
mov
and
fcomp
cmp
push
leave
ret
stc
xchg
stos
bswap
cltd
jae
sub
add
jmp
sub
rolb
mov
xchg
mov
addb
pop
add
cli
std
xchg
mov
inc
ja
in
scas
test
xchg
pop
mov
lock
inc
pop
popf
mov
pushf
ljmp
fcompl
into
push
popf
into
lea
inc
into
push
clc
and
sbb
ds
mov
cld
in
xchg
jno
or
int
lock
ss
loope
pop
xchg
lds
aaa
insb
addr16
arpl
xchg
scas
std
jp
mov
pop
xor
or
repnz
iret
jecxz
mov
fdivl
subl
pushf
pusha
clc
aaa
test
sub
mov
pop
in
jmp
cmp
frstor
les
insb
pop
pusha
sub
xchg
sub
divb
adcb
rcrl
mov
sbb
cmp
pop
mov
fwait
mov
xchg
stc
push
or
jo
mov
sbb
std
xor
mov
fiadds
xor
adc
cmp
or
and
mov
push
sub
jb
cmc
pushf
sahf
jl
cltd
leave
faddp
orl
push
push
out
cmp
add
pop
inc
cmpsl
scas
fists
into
jl
or
pop
lods
aas
push
dec
dec
dec
lret
dec
adc
std
sub
xchg
in
or
loope
adc
in
shrl
rcrb
jp
cmpsb
insl
or
mov
jo
xchg
test
addb
call
data16
pushf
fsub
xor
popf
lcall
mov
pop
dec
jae
cli
sarl
inc
rclb
mov
dec
mov
fisubs
es
icebp
push
in
inc
pop
jb
mov
or
adc
mulb
adc
xor
outsl
mov
inc
mov
inc
inc
mov
insl
and
pusha
fisttpll
ret
stc
mov
into
add
flds
sbb
mov
add
push
cltd
out
out
jecxz
aas
adc
adc
mov
push
push
inc
das
cmp
aas
ret
insl
pop
ficoms
sahf
test
mov
leave
aaa
scas
aad
pop
push
call
dec
mov
or
fstl
icebp
movsb
mov
sbbl
mov
mov
into
loopne
test
lds
fsubs
rcll
push
inc
mov
inc
ss
popf
insb
fdivrs
and
add
outsl
push
faddp
push
into
aaa
imul
hlt
lcall
cmp
dec
sti
xlat
add
add
push
call
je
test
cmpsb
orl
mov
stos
cmc
pop
mov
adc
std
shll
cld
iret
mov
mov
ret
ja
pop
jmp
inc
lcall
push
mov
or
insb
mov
aad
loope
rorl
mov
jle
outsl
imul
pusha
cmp
cltd
pop
inc
jle
jb
jne
pop
sub
lods
enter
cli
push
push
mov
dec
movsb
sbb
js
aad
call
mov
mov
jne
ljmp
jecxz
inc
iret
sbb
or
pop
movsb
fdivl
mov
scas
jno
mov
push
fisubs
inc
lcall
dec
hlt
mov
aas
arpl
xchg
mov
and
ret
dec
xor
fmul
lret
outsb
sub
adc
mov
in
roll
adc
add
or
nop
dec
pop
movsl
repz
sub
sbb
shrb
or
and
lea
jo
cmpsb
adcb
mov
imul
or
arpl
das
cmp
es
iret
push
orb
sub
xchg
fadd
xchg
int3
add
scas
push
inc
cli
jb
dec
xchg
mov
adc
add
jns
je
mov
in
gs
and
loop
jnp
or
stos
or
sti
xchg
pop
outsb
cmp
jecxz
add
add
cmp
lcall
cli
jle
fcompl
pop
push
pop
mov
push
pushf
lahf
mov
fisttpll
xchg
add
loope
pop
xor
daa
cmp
fadd
add
loop
ja
iret
je
std
mov
sub
xchg
cld
jge
fucom
mov
push
xor
rcrl
mov
or
cs
aas
popf
in
test
jbe
cmp
pop
cli
mov
cmp
aad
test
pop
dec
sbb
mov
cltd
popf
sub
imul
sti
pop
out
mov
dec
cld
lahf
add
imulb
sti
icebp
ret
add
pop
in
sbbl
push
sub
rclb
cli
ds
inc
sbb
jae
pop
into
or
ljmp
xor
loope
cmp
jmp
incl
add
std
stos
fstpl
rcr
test
cli
arpl
repnz
cmp
cwtl
mov
xor
pusha
push
push
cmpsl
adc
fisubs
push
cmp
int3
pop
and
out
inc
mov
ds
add
leave
push
arpl
pop
jmp
cmpsb
sub
add
pop
push
pop
mov
jle
push
or
mov
in
sti
aas
xlat
dec
ljmp
jmp
jne
xlat
icebp
loopne
dec
pushf
pop
or
sub
iret
rorl
jns
or
pop
xor
mov
fsubrl
dec
hlt
and
mov
or
rorb
dec
xor
test
test
inc
enter
xor
lret
mov
jne
stos
aam
pop
stos
mov
dec
imul
cmpsl
movsl
jp
inc
lock
fmull
and
sbb
sub
adc
les
dec
xor
test
jnp
ds
inc
packuswb
sbb
or
in
insb
or
mov
xchg
add
and
push
fsubrp
mov
add
push
dec
ljmp
scas
and
adc
addr16
sbb
rolb
imul
dec
sti
pop
out
subl
cmp
mov
je
pop
or
rcrl
xadd
aad
and
sbb
inc
or
loope
push
mov
jmp
ffree
and
es
loopne
loop
jbe
popa
sub
mov
push
mov
je
mov
adc
jo
cmp
ds
fldl
mov
or
pop
lret
sub
adc
pusha
ds
xchg
popf
dec
pushf
sti
pop
enter
sub
jbe
andl
cli
mov
lods
push
adc
rcrb
mov
repz
sub
push
bound
cld
mov
sti
sbb
push
sti
out
repnz
push
out
adc
icebp
push
out
cli
daa
pop
test
pop
mull
push
sub
notl
inc
negl
sti
mov
jns
xchg
xchg
arpl
mov
mov
rclb
dec
icebp
push
mov
mov
outsl
scas
stos
jmp
add
sbb
dec
jae
dec
ret
push
cmpsl
lcall
ljmp
inc
sbb
enter
xchg
cs
out
jmp
push
sub
test
fidivrs
ds
test
loope
rcr
pop
inc
faddl
sub
push
inc
mov
ret
decl
das
cmp
jl
mov
inc
xor
push
pushf
les
push
mov
mov
fildll
test
xchg
fs
ds
sbb
pop
ret
jns
cld
sahf
inc
add
dec
cli
imul
jns
sub
mov
push
mov
inc
pop
push
pop
movsb
xlat
mov
loop
sub
jge
cmp
fmuls
loope
test
dec
test
jbe
repnz
cwtl
jnp
sbb
scas
or
add
cli
addr16
sbb
add
sbb
xchg
pop
out
lret
add
mov
inc
or
push
add
std
call
std
add
enter
inc
into
lods
inc
add
bswap
mov
lods
int3
and
nop
cmpsl
loope
pop
jp
pop
mov
mulb
mov
mov
adc
gs
mov
inc
aad
push
in
mov
mov
icebp
dec
js
iret
dec
lret
lds
inc
int3
sbb
jae
pushl
dec
into
lret
int
xchg
hlt
test
push
outsb
lock
lahf
pop
push
pop
sbb
repnz
int
ds
mov
push
inc
pop
sti
dec
push
shlb
lret
in
push
cmp
fmull
mov
jmp
ficoml
inc
sub
scas
cmp
clc
xchg
inc
or
adc
xchg
mov
xchg
sti
jnp
shlb
sbb
fninit
cmp
sbb
mov
pop
mov
xor
jmp
mov
xor
lret
add
xchg
push
xchg
scas
arpl
aaa
xchg
push
add
shr
call
pop
rcll
cmp
dec
add
xchg
fiadds
xchg
xchg
xchg
fsubs
ss
sarw
sub
lret
xchg
dec
jg
cmp
pop
data16
cmp
leave
shl
cmc
and
mov
sub
outsb
stc
shr
data16
sti
ss
shrb
lods
cmp
cld
mov
xchg
sahf
jle
cs
outsl
ret
jmp
dec
ja
cwtl
xlat
inc
rorb
test
pop
lahf
cld
cld
int3
ss
xor
popa
cs
clc
xchg
push
mov
sub
lcall
or
dec
outsb
inc
popa
cmp
add
shll
cmp
iret
mov
fidivs
jmp
mov
sbb
shrb
mov
adc
pop
jne
push
mov
xlat
fisttps
mov
mov
xor
mov
jbe
mov
cwtl
shrb
push
in
pop
es
cmc
call
mov
fcomi
xchg
lea
repnz
lret
jl
jb
jno
pop
jbe
std
xor
arpl
mov
les
ds
push
test
inc
cmpsb
fildll
mov
mov
test
bound
xor
lcall
dec
hlt
lock
xchg
je
sbb
cmp
jecxz
int
sbb
aad
es
repnz
jb
repz
rclb
sub
loopne
bound
dec
cs
cmp
push
mov
mov
sar
fnstcw
adc
pushl
xchg
jp
int3
ret
in
lock
add
gs
cmpsl
jnp
push
testb
ds
add
sub
je
mov
xlat
rsqrtps
jp
std
fisubl
xchg
stos
push
sahf
xchg
cmc
sbb
gs
mov
repz
cmp
xor
jmp
cs
cld
or
push
adc
xchg
popf
xchg
outsl
popa
repnz
sub
inc
mov
jne
add
repnz
sub
fsubr
orb
fwait
push
fildll
in
dec
mov
fists
inc
pop
add
mov
bound
xchg
pop
inc
lret
data16
sbb
mov
pop
bound
fmuls
out
jno
in
fistpl
out
mov
out
loope
sbb
jecxz
push
sub
pop
mov
mov
sub
push
and
add
jb
inc
lcall
loopne
addr16
dec
lcall
cs
je
cmp
rcrl
or
jmp
mov
cs
clc
inc
in
or
popf
icebp
jo
mov
jns
test
hlt
pop
mov
add
loop
dec
insl
inc
push
cld
push
inc
adc
inc
shll
cmp
inc
pop
lods
test
ja
int3
push
mov
movsb
loope
sbb
arpl
or
mov
cmpsb
or
add
push
lods
mov
sub
aam
lods
jo
push
popf
dec
lret
xor
mov
aaa
scas
lods
push
not
gs
push
mov
cmpb
gs
xchg
icebp
lods
loopne
ret
or
jbe
fcmovu
cmp
inc
jg
xchg
inc
add
sbb
cld
int
pop
scas
cwtl
imul
dec
cmp
nop
jno
repnz
adc
add
push
test
dec
xchg
cmpsl
loop
sub
test
in
orl
xchg
push
adc
sub
lcall
push
jg
mov
shll
xor
pop
aad
dec
movsl
rcr
mov
mov
lea
fsubrs
in
test
mov
shlb
push
repnz
sbb
xor
fdivr
inc
test
incl
and
and
cmp
lock
vmovaps
jne
sub
jne
pop
icebp
cmp
lods
movzwl
mov
ret
add
mov
fxtract
lar
pop
xchg
push
cltd
in
inc
andb
cmpsl
sub
dec
cmp
std
ss
dec
fnstcw
in
test
cli
lods
insb
jnp
je
sub
dec
or
test
sbb
icebp
and
test
cmpsl
jnp
in
xchg
inc
mov
and
mov
adc
pushf
mov
add
nop
dec
xor
imul
xor
xchg
rcrl
push
fiadds
add
cmp
cmpl
jb
adc
scas
push
pop
mov
push
mov
cli
push
jg
push
and
loop
xor
push
sbbl
xlat
call
fldcw
faddp
mov
mov
add
insl
insl
mov
icebp
push
jb
mov
pop
sub
cmp
rcll
cwtl
scas
movsl
sub
sti
dec
pushf
mov
push
pop
push
dec
xor
mov
or
arpl
push
pop
enter
movsb
dec
stos
mov
inc
sbb
je
mov
sub
adc
adc
jmp
scas
lret
jecxz
dec
cwtl
xchg
inc
mov
sbb
xchg
jne
mov
xchg
jns
or
xor
push
lock
dec
aam
push
and
aam
mov
cmp
icebp
in
mov
push
jb
xor
lret
mov
lret
mov
inc
hlt
out
cltd
add
hlt
subb
jmp
lds
lock
xchg
mov
cwtl
xlat
fistl
mov
xor
insl
xor
shrb
sub
shr
fdivp
xchg
dec
lds
fwait
xchg
xchg
xchg
adc
out
out
cs
push
jne
xchg
and
call
mov
cmp
pcmpgtb
dec
xchg
add
mov
movsl
mov
rorl
fstpl
cmc
mov
dec
adcb
aad
into
dec
pop
or
add
imul
or
insl
lret
jno
cmp
inc
mov
adc
adc
pop
mov
sti
addr16
test
pop
pop
jbe
out
mov
out
test
mov
add
ljmp
or
mov
mov
fcom
rorb
or
fisttpll
lret
ds
ljmp
push
lret
adc
imul
je
ljmp
rcrb
dec
adc
add
inc
lods
push
dec
andl
xchg
or
cld
daa
pusha
or
fdiv
and
xorb
dec
les
dec
ja
push
inc
out
xor
sub
mov
nop
imul
sarl
lea
pushf
push
push
dec
mov
dec
out
out
mov
xchg
xchg
and
inc
sbb
mov
subl
sahf
jae
mov
jae
lds
sbb
xor
lods
dec
and
push
pop
cmpsl
xchg
pop
imul
loopne
add
pushf
inc
ss
popa
push
shll
mov
test
or
push
mov
jo
mov
and
and
lock
and
dec
lcall
jae
push
dec
mov
es
jg
or
call
xchg
mov
ret
test
lea
fsubr
pop
es
lock
mov
cmc
jg
and
inc
sub
rolb
inc
aam
lret
dec
leave
out
push
inc
out
jp
out
fdivs
inc
lcall
shrl
and
mov
fcoml
hlt
je
scas
pushf
imul
mov
adc
outsl
push
outsl
adc
or
dec
xchg
cmp
clc
fs
cs
iret
jae
mov
mov
or
dec
ror
xchg
push
fnsave
data16
lret
xor
xor
sub
xchg
inc
pop
mov
popa
dec
xchg
mov
lret
mov
or
dec
das
jge
bound
cmpl
mov
lret
imul
mov
jp
xchg
popa
divl
mov
cmc
bound
push
daa
adc
mov
loopne
pop
adc
inc
adc
jge
cwtl
xor
popf
outsb
cwtl
xchg
pushf
stos
mov
or
loopne
mov
xchg
jge
rolb
pusha
aaa
test
and
shr
cwtl
xlat
push
bound
fdiv
jmp
fidivs
or
dec
mov
mov
fcompl
std
xchg
outsb
push
cmp
fisttps
pop
jo
jbe
sbb
cmp
sbb
es
sbb
xchg
xor
mov
add
mov
bound
jae
lock
aas
mov
inc
inc
fidivrl
xor
cmp
or
call
xchg
ret
call
fdivl
and
ret
or
jo
pop
pop
pop
jecxz
lcall
inc
jmp
push
inc
cs
or
sbb
mov
push
stos
mov
leave
or
daa
push
push
sbb
dec
sub
shl
test
adc
clc
test
push
sahf
mov
jae
test
out
rclb
out
jnp
into
inc
aad
dec
hlt
sbb
adc
pop
loop
mov
ret
lahf
cs
std
and
clc
sbb
lea
sti
aaa
or
xor
push
mov
fistps
xchg
cmp
fwait
lods
jae
lret
mov
idivb
dec
fiadds
test
push
xchg
and
into
xrelease
xor
xlat
popa
test
inc
loope
add
dec
sti
jmp
xchg
stos
mov
adc
dec
insb
sbb
mov
adc
lcall
cmpsl
jnp
cmp
scas
jbe
sbb
dec
xchg
js
mov
pop
dec
leave
jb
jns
fldenv
or
std
negl
insl
lods
or
adc
and
aaa
rcrb
fiaddl
cmp
out
inc
popf
out
pop
xchg
int3
xchg
push
imul
dec
mov
dec
mov
fs
int
les
sti
pop
lock
inc
imul
cmpsb
cmc
shll
jmp
push
xor
hlt
loopne
cmp
je
popa
cli
ss
mov
sbb
jno
int3
xchg
popa
fcoms
div
push
lds
xchg
int
jnp
jno
sti
leave
aam
cmpsb
rcll
ficoml
call
mov
lea
sbb
xchg
adc
rcl
fidivl
scas
scas
mov
sbb
xchg
lret
or
dec
hlt
mov
popl
iret
ss
lret
int
aaa
mov
clc
dec
inc
cmpsb
cwtl
rol
mov
pop
dec
mov
mov
jbe
pop
mov
adcb
xchg
push
mov
cwtl
ret
and
test
shll
mov
and
call
enter
js
jle
dec
lahf
xchg
xchg
pop
mov
jne
adc
test
sbb
cltd
xor
inc
lret
ss
je
sbb
mov
push
movsb
jle
or
xor
aam
movsl
shlb
pop
push
and
add
sbb
fimull
mov
test
test
fdivrl
ss
aaa
lret
mov
scas
sahf
push
aas
mov
nop
jecxz
jb
xchg
mov
xor
or
movlps
mov
sbb
push
and
arpl
mov
push
aaa
push
sub
sbb
xor
inc
cmpsb
lock
ja
add
mov
jno
pop
arpl
icebp
aam
leave
sbb
addr16
mov
imul
push
push
ja
ret
mov
js
cld
or
jo
int3
push
fstpl
incb
sub
add
xchg
rcll
push
or
outsl
aam
fs
cmp
push
push
arpl
dec
or
cmp
jl
subb
cs
pop
test
rclb
aas
jmp
imul
cmp
aaa
xor
daa
insb
sub
sub
sbb
xchg
lds
push
or
pop
int
daa
cld
repz
loop
and
movb
inc
lea
repz
pop
push
sub
inc
inc
inc
push
pop
movl
and
lods
shll
sub
push
jge
or
adc
dec
test
in
in
out
mov
mov
out
stos
mov
mov
jg
test
lahf
iret
std
lds
mov
pop
add
les
pushf
sbb
pop
js
sub
lods
pop
not
fucomi
xchg
es
xchg
int
movsb
push
jb
es
cwtl
lock
aam
in
adc
mov
jbe
xchg
mov
cmp
sbb
lods
dec
mov
nop
repz
push
enter
int3
sbb
dec
clc
jno
and
data16
jge
dec
in
mov
dec
xchg
adc
daa
mov
add
mov
ljmp
in
inc
out
arpl
sub
or
adc
les
push
xor
and
push
movsb
fwait
jg
daa
mov
fidivrs
mov
pop
sti
mov
xor
stos
inc
adc
or
xchg
adc
fstpt
clc
testb
inc
mov
dec
cmc
stc
sub
jge
divl
cmpl
inc
xor
and
fistpll
es
push
in
push
jge
hlt
xchg
or
mov
add
xlat
loope
fistl
adc
lods
and
sbb
inc
into
js
jae
lock
jle
lds
adc
jae
jne
xor
or
fldenv
sbb
fsubl
inc
sub
and
sub
std
lahf
pop
fistpll
cld
lods
cmpsl
mov
addr16
aad
jl
add
adc
mov
cmp
int3
pop
leave
mov
int
dec
sub
cltd
mov
insb
in
dec
nop
mov
jbe
fwait
setne
in
mov
push
mov
dec
jmp
cmp
popa
push
cs
cmp
xor
imul
mov
in
sub
push
cmp
xor
in
xor
insl
test
dec
xor
aaa
sbb
repz
hlt
sbb
sbb
sbb
into
xchg
insb
pusha
or
cwtl
fcomip
ficompl
in
test
in
fwait
mov
ficompl
pop
or
in
mov
mov
imul
ret
mov
in
dec
setno
xchg
je
iret
inc
rorl
movsb
xor
aaa
ret
xor
mov
lahf
push
xchg
mov
xchg
push
xor
mov
xor
int
iret
cmpsl
xchg
jb
ljmp
xchg
jmp
pop
mov
je
xor
fs
xor
mov
dec
adc
mov
das
repnz
mov
push
fwait
ja
dec
or
push
add
scas
sarl
test
mov
in
fsubl
ja
sbb
bound
enter
inc
sbb
jg
mov
mov
and
jge
stc
orb
in
fsubl
fstps
dec
mov
inc
xchg
fadds
xchg
out
mov
pop
jecxz
out
out
xchg
xchg
ret
dec
shl
aas
test
insl
push
fmuls
in
rclb
push
js
pop
stos
test
xchg
sbb
jmp
jns
icebp
ret
jns
imul
xchg
sub
aas
xor
mov
pop
loope
sahf
int
out
push
test
xchg
push
sub
imul
popa
and
mov
mov
mov
sub
in
xchg
cltd
lock
add
push
pop
icebp
fndisi(8087
jge
cwtl
cltd
lea
push
pop
push
mov
js
cmpsb
into
sub
adcl
sti
adc
dec
enter
push
out
push
fwait
movsb
and
inc
xor
xchg
hlt
adc
mov
fdivs
js
lret
or
adc
or
cmp
mov
aas
push
add
pop
out
shll
dec
mov
ja
mov
xchg
mov
aad
outsl
stos
jbe
ret
jmp
or
add
xchg
sbb
xchg
daa
repz
xchg
jp
js
cmp
jne
fsub
or
push
std
jp
mov
ljmp
mov
popa
xor
push
mov
and
test
adc
lret
in
mov
fadds
xor
fdivs
adc
xor
repnz
push
icebp
sub
pop
adc
cmpsl
cmp
adc
sbb
pop
jns
scas
pusha
loope
out
movsb
mov
std
out
or
dec
leave
xor
shlb
inc
jecxz
and
mov
pop
arpl
jnp
cmc
xor
xchg
ss
xor
pop
mov
in
xchg
xchg
cli
pop
imul
icebp
xlat
ja
jo
xchg
idivl
dec
orl
sub
fadd
pop
into
jno
jecxz
push
fstpt
loopne
movsb
notl
or
push
outsl
add
pop
mov
pusha
fistps
ret
xor
fdivr
cmpsl
push
dec
pop
dec
inc
xchg
dec
mov
subb
idiv
adc
js
dec
stc
dec
xchg
int
cmp
mov
mov
je
es
aam
pop
add
cli
and
js
jns
mov
xor
and
and
mov
test
inc
popf
mov
out
xor
mov
push
into
rorb
mov
enter
mov
mov
mov
inc
pop
xchg
cmc
jb
cmpsb
pop
fadd
sbb
mov
loopne
ret
and
inc
adc
orb
cltd
subb
decb
lds
js
test
pop
pop
add
add
mov
sub
inc
jl
lcall
cli
jmp
pop
lret
add
ds
pop
xchg
xchg
mov
out
xchg
sahf
aam
dec
cmp
push
in
jo
xor
sub
js
mov
add
xchg
movsl
fbld
adc
dec
xchg
and
aaa
pop
test
int3
mov
cmp
push
insb
imull
mov
pop
cmp
scas
sarb
push
xor
adc
es
sbb
cmp
lret
lahf
stos
mov
popf
sub
inc
xor
mov
out
sbb
or
mov
movsb
stos
outsb
mov
imul
aad
add
inc
xor
or
pop
sbb
pop
movl
cmpsb
push
mov
cmc
jp
in
sbb
mov
roll
in
cmpsl
mov
mov
repnz
inc
adc
adcl
fwait
ret
mov
in
push
adc
push
aaa
jge
push
pop
stc
imul
dec
idivb
std
xchg
adc
out
addr16
lock
les
aam
pusha
es
insb
bound
mov
xor
jno
xor
popa
lods
repnz
mov
add
je
sahf
pop
jmp
in
lods
leave
jl
adc
xchg
mov
pop
dec
orb
lcall
mov
pop
incb
push
push
scas
gs
xchg
inc
les
pop
outsb
push
and
sbb
jno
adc
pop
insb
adc
mov
cmp
mov
mov
repz
xchg
stos
sbb
adc
in
mov
out
test
push
adc
mov
jnp
and
call
fwait
sub
mov
jecxz
fwait
xchg
sbb
inc
cmpsl
push
sub
xor
xchg
add
hlt
xchg
pop
dec
xchg
push
out
ja
sbb
mov
jbe
jns
and
xchg
je
lods
aad
shr
and
mov
lds
inc
outsl
stos
inc
sub
cltd
sbb
cs
addr16
rcr
pop
sbb
xchg
add
pusha
add
push
lahf
rcl
data16
js
xor
sbb
add
adc
loopne
add
jmp
repz
push
mov
push
lods
pop
jbe
icebp
and
shl
push
sub
dec
sbb
sbb
sti
sub
test
repz
jmp
es
stos
ds
aas
cld
add
inc
in
test
pop
inc
mov
rorb
lock
out
mov
nop
scas
jnp
dec
pop
aam
stc
das
cmp
adc
test
jns
das
jp
push
out
insb
shlb
inc
jg
sub
dec
sbb
mov
stos
scas
and
daa
push
outsl
aad
dec
xor
inc
add
rcrb
scas
dec
fidivrl
jns
scas
movsl
push
pop
aaa
cmp
fnstenv
scas
in
xchg
repnz
jge
enter
popf
repnz
sub
popa
and
popf
sbb
pop
lahf
xor
xchg
cltd
outsb
jns
out
xchg
rclb
or
cmp
add
test
imull
dec
sub
jne
adc
addr16
sbb
xchg
pop
out
scas
cmp
outsl
popf
adc
dec
xchg
inc
sub
push
imul
mov
fdivr
mov
ret
add
jl
or
test
jge
repz
shll
xchg
xchg
cmp
xor
dec
lods
or
loope
push
rcrb
daa
jno
mov
cli
xor
xor
fstl
out
sti
xchg
insl
sbb
movsb
sub
xor
cmp
pop
rcrb
sub
mov
mov
dec
in
jns
mov
cmp
pop
and
mov
mov
clc
pop
and
or
adc
cmp
mov
sub
into
jae
sbb
inc
push
fwait
xor
cmp
das
lods
or
loopne
push
std
loope
test
and
dec
cmp
mov
fs
fnsave
pushf
scas
pusha
mov
xor
imul
adc
add
into
add
and
xchg
add
jo
mov
sub
ds
or
and
sbb
pushf
repz
movsb
xchg
jns
mov
scas
dec
cmp
mov
fdivl
mov
cmp
fstpl
ret
out
js
inc
jecxz
aaa
into
in
js
mov
pop
xchg
movsb
pusha
xchg
jmp
aad
repnz
shrb
push
or
or
psubusb
gs
lcall
mov
fildl
jl
shlb
iret
and
lods
or
loop
or
iret
outsb
add
sub
fcmovnb
outsb
mov
push
add
mov
dec
orl
adc
jl
les
xor
test
aad
rcrl
daa
or
das
jb
jge
cmp
jmp
xor
gs
out
push
adc
mov
and
jno
out
mov
push
leave
push
fsubrl
and
cli
jnp
push
sbb
push
adc
arpl
mov
stos
testb
imul
sbb
cs
lods
iret
loopne
add
sub
bound
jb
jno
and
push
std
shll
out
test
pusha
cmp
aas
jmp
or
push
xor
adc
rol
shlb
out
pop
cmc
adc
lret
mov
aam
cmp
cmp
pop
lock
popa
daa
rcll
pop
popf
dec
mov
or
scas
aas
inc
inc
jmp
pop
sbb
cmpsl
fcom
out
inc
icebp
jl
push
or
test
jg
das
or
and
shlb
jns
pop
inc
push
xor
add
and
cmpsb
sbb
mov
enter
fs
mov
das
enter
test
inc
int
je
outsl
sbb
pop
shrb
out
popa
cmp
sub
cwtl
xchg
sub
arpl
pop
addb
pop
jo
ret
js
xchg
nop
sub
fwait
in
cli
in
inc
xlat
inc
xchg
sbb
xchg
imul
lds
lret
gs
aas
sarl
xor
add
in
sub
inc
xorl
inc
outsl
dec
push
sahf
sub
inc
xchg
or
fadd
in
xchg
sbb
movl
sub
xor
sbb
inc
call
pop
cli
rep
mov
imul
ja
inc
jle
jl
int
or
push
out
dec
imul
imul
popa
imul
jo
push
roll
mov
dec
push
mov
dec
outsl
int3
cwtl
out
push
lods
mov
insl
inc
sti
imul
dec
leave
cli
cmp
mov
lock
cmp
scas
pop
or
jl
xchg
cwtl
ret
dec
std
xchg
lock
repnz
testl
repz
push
push
hlt
cltd
sbb
icebp
hlt
rcrb
ud0
xchg
add
aam
ljmp
pop
and
in
icebp
int
and
dec
movsb
shrb
jnp
movl
repz
cmp
and
mov
cmp
sahf
xor
push
das
sbbb
insb
jns
adc
or
and
xchg
pushl
in
sti
stc
imul
test
ror
sbb
cmp
jbe
les
push
inc
cli
sbb
ja
mov
sub
sbb
inc
pop
sbb
and
lret
dec
pop
mov
mov
out
data16
jo
mov
or
and
xor
xchg
push
mov
dec
inc
or
mov
mov
lock
pop
and
lods
int3
jmp
pop
rorb
jnp
lahf
scas
fs
out
jbe
jle
mov
jnp
cmp
jge
insb
inc
pop
push
jb
mov
lea
nop
xchg
jbe
xchg
nop
pop
imull
and
repnz
mov
clc
mov
mov
pop
or
sbb
aas
in
mov
sub
addr16
int3
or
jp
xchg
fnstsw
fs
mov
fimuls
fcompl
mov
jne
aad
mov
fstpt
icebp
cmpsb
xchg
jnp
mov
test
xor
jge
aaa
shrl
xchg
push
pop
dec
jnp
pop
ret
mov
lock
popf
fs
cmpsl
pop
jmp
aaa
jecxz
cmp
jae
inc
cmp
test
mov
repz
ljmp
nop
shll
imull
jp
testb
addb
in
loop
push
fldcw
jo
mov
scas
xchg
pop
sbb
push
sbb
aam
orl
sbb
xchg
out
bound
int3
imul
aam
lea
in
lret
fdivrs
dec
insb
stos
les
cld
arpl
mov
les
jo
into
cmpsl
popf
not
sub
cwtl
clc
mov
push
scas
jne
jg
lcall
out
inc
mov
cmp
je
addl
dec
sbb
mov
add
pop
sti
jp
xor
addr16
mov
or
iret
leave
xor
cmpsb
sbb
add
cmp
in
sub
jns
dec
popa
mov
mov
dec
insb
gs
pop
inc
lret
mov
sbb
cmpsb
jno
sarb
cmp
or
clc
sahf
out
popa
or
adc
loop
and
mov
ret
and
mov
loopne
bnd
dec
daa
adc
fidivrl
repnz
arpl
cmp
mov
jmp
adc
in
rolb
rolb
out
aaa
mov
fwait
sbb
arpl
pop
scas
cmp
aas
rcr
pop
or
cmp
scas
mov
vmwrite
jle
outsl
fiaddl
lahf
lret
dec
jno
xchg
adc
fs
dec
sub
aas
sahf
mov
push
out
xchg
push
fcoms
mov
adc
push
cwtl
cmp
sub
pop
ret
jb
pop
mov
cmpsb
out
add
or
lds
sbb
outsl
push
jb
pop
dec
into
cwtl
sbb
rcrl
test
lea
mov
shrb
mov
sub
lods
nop
mov
fldl
mov
cwtl
loope
cld
sub
xchg
jmp
repz
push
or
lret
push
mov
or
mov
arpl
adc
inc
or
xchg
mov
lret
jb
jl
cltd
cs
mov
leave
int
icebp
dec
fsubrs
fcomps
in
insl
sbb
cli
cli
add
mov
sub
sti
ljmp
and
mov
hlt
mov
fidivs
into
jne
add
xchg
pop
or
xchg
aas
nop
mov
adc
sub
jg
jmp
pop
and
mov
lahf
fwait
xchg
cmpsb
jge
xchg
stc
inc
adc
mov
mov
inc
pop
ret
dec
iret
cli
into
push
inc
xchg
dec
pushf
ds
sbb
out
xchg
hlt
push
jmp
jae
scas
outsb
pop
jb
fldcw
or
fs
fdiv
rclb
adc
addr16
cmp
sub
xor
mov
mov
flds
jns
imul
xchg
dec
add
pop
inc
xchg
rolb
dec
adc
pop
push
mov
push
lret
bound
sbb
mov
aas
push
xor
add
insb
int3
pop
add
mov
pop
loopne
insb
dec
movsb
adc
clc
and
cs
pop
xchg
or
neg
stos
pop
lock
cmpsl
inc
andb
mov
mov
sub
movsb
push
or
sub
jne
sub
outsb
cmp
and
ror
stos
cmc
in
push
push
sub
pop
jmp
xchg
xchg
xorb
fs
push
sbb
pop
xor
xor
adc
pusha
mov
xchg
mov
sbb
ss
fwait
sbb
sti
int
aas
ljmp
xor
fs
data16
aaa
pop
mov
rclb
mov
and
lret
ficoml
jge
or
sbb
dec
ret
xor
sbb
jo
jl
jl
shr
popa
cmp
xor
jecxz
lret
mov
pop
jle
pop
jnp
inc
movsl
xor
inc
iret
sarb
pop
stos
leave
clc
jo
xor
aad
enter
sbb
or
out
ds
lret
xchg
fcmovb
cmp
lods
imul
js
jmp
repz
cltd
inc
pop
testb
insb
pop
shlb
push
push
es
and
jbe
hlt
adc
jbe
xchg
cwtl
js
ja
lods
mov
mov
xor
aam
sbb
add
dec
les
mov
xor
xor
popa
sub
rcr
cli
insl
xchg
mov
push
fsubr
aad
mov
fsts
addr16
shrl
ret
js
add
cwtl
stos
adc
push
or
lods
jne
std
subl
lahf
scas
cmp
mov
pushf
pop
int3
xchg
ret
sbb
mov
cli
xor
sbb
mov
repnz
movsb
ret
inc
mov
inc
das
dec
add
mov
jl
add
push
stos
jb
mov
movsl
stos
insl
insl
cmpsb
and
xor
loope
mov
pop
mov
ret
pushl
je
and
adc
dec
pop
mov
sub
xchg
ror
xchg
lods
lret
dec
fsubr
jl
dec
jne
jb
shl
dec
mov
mov
hlt
lcall
shr
sbb
push
in
jg
enter
jo
outsb
je
dec
repnz
push
int3
pop
mov
dec
fs
cmp
gs
mov
nop
and
adc
test
mov
hlt
mov
insl
cmp
cmp
fidivrs
mov
sub
hlt
dec
inc
mov
inc
dec
xlat
test
fadds
pop
sub
push
out
fisttpl
dec
pop
shrb
pushf
jbe
scas
mov
lret
bound
adc
xchg
shrb
mov
push
ficoms
sub
or
lods
push
sub
shl
sar
les
mov
idiv
jbe
pushf
out
int3
loopne
daa
mov
mov
mov
sbb
test
daa
xchg
ja
stos
adc
out
dec
pop
pop
mov
iret
pushf
aaa
out
xchg
and
decl
dec
out
adc
add
call
repnz
nop
mov
cli
movsl
dec
mov
xor
inc
mov
imul
cld
je
ja
sti
pop
ret
cmpsb
push
cld
mov
adc
xchg
or
dec
jp
in
mov
mov
jno
mov
mov
outsl
outsb
adc
leave
mov
mov
xor
cltd
mov
dec
call
rclb
ret
jecxz
or
lea
cmp
fs
cmp
mov
jecxz
mov
std
rclb
cmp
shlb
sub
xor
xchg
jmp
xchg
push
jecxz
dec
xchg
jmp
xchg
jae
or
movsl
pop
pop
fwait
hlt
xchg
mov
sbb
loopne
jno
jge
repz
mov
adc
lods
sub
daa
cmp
mov
adc
xor
loop
and
jae
js
test
dec
xchg
outsb
ret
xchg
jbe
or
ss
jne
notb
lahf
subb
xlat
ja
mov
mov
test
xchg
movsl
les
cmp
ja
jp
xchg
mov
push
fisubrl
or
stos
push
imul
mov
das
fisttps
pop
xlat
loop
pop
jns
shl
push
jmp
mov
cwtl
and
stc
sbb
inc
ljmp
iret
adc
xor
or
pop
addb
cs
repnz
repnz
stos
out
rol
jg
sahf
movsl
sbb
inc
imul
jno
stos
pop
inc
jmp
dec
pop
mov
sub
ds
mov
fsts
lock
jmp
loop
mov
insb
fstl
push
sar
pop
shll
mov
mov
fcomps
scas
mov
in
sbb
cmc
arpl
jne
pop
test
andb
cmp
push
popf
ror
int
jae
jecxz
mov
scas
outsb
shr
int
popf
icebp
or
ficoml
sub
and
aas
cli
mov
mov
add
out
out
aam
in
or
iret
fst
jle
in
negl
inc
into
xor
fwait
sbbb
fisttps
cmp
adc
dec
pop
into
test
lods
lods
fldln2
jb
cmp
test
hlt
push
mov
adc
shll
rclb
sbb
or
rcl
pop
daa
or
dec
fsts
mov
stos
dec
add
push
cli
jp
divb
add
cwtl
cmpb
test
nop
les
rclb
popf
out
cmpsb
imul
sub
inc
sub
mov
adc
push
cmp
add
jbe
add
cmp
fildl
xchg
lock
bound
inc
adc
sbb
mov
xchg
hlt
xchg
mov
adc
xor
mov
push
cmp
iret
mov
subb
mov
repz
call
jge
xor
pop
lret
out
sub
leave
test
sub
loop
ds
clc
pushf
or
sahf
aas
pushf
insl
adc
jmp
sbb
jo
and
dec
xor
jl
xlat
xor
loop
fiadds
aad
mov
mov
dec
adc
adc
int
sti
or
dec
sarb
mov
mov
xor
and
out
cs
fmuls
sarb
sub
bound
aam
in
mov
dec
cli
scas
mov
mov
jae
sar
adc
adc
jge
leave
out
cwtl
imulb
dec
adc
hlt
lahf
icebp
xchg
dec
push
subl
mov
pop
lahf
ljmp
repz
out
lods
test
pop
ljmp
xchg
sub
in
andb
arpl
test
lods
ljmp
loope
outsb
mov
cmp
sub
sbb
xchg
xchg
and
insb
out
or
pop
outsl
xor
xor
adcl
data16
xlat
xlat
sbb
or
jb
subl
test
sbb
lret
push
test
cmp
loop
popf
pop
pop
inc
inc
into
sbb
jns
popa
lods
inc
imul
dec
add
xchg
push
repz
adc
add
popf
lods
mov
push
mov
add
dec
mov
mov
jmp
fdivrs
repnz
aaa
bound
mov
mov
dec
cmp
mov
adc
xor
mov
inc
fs
call
cmpsl
jmp
pop
fidivs
add
pop
clc
xchg
inc
push
int3
popa
sbbl
sti
pushf
jge
xor
xchg
jg
xchg
loop
pop
xchg
mov
jmp
and
dec
lret
rclb
sbb
inc
movsl
mov
pop
xor
xchg
mov
loop
out
push
pop
dec
fcmovnu
shll
mov
sahf
rclb
or
pop
dec
icebp
lret
cmpsl
lock
lret
xor
insl
pusha
mov
cltd
mov
jne
pop
xchg
aaa
cmp
leave
mov
sbb
pop
xor
shl
gs
pop
or
insb
jg
sbb
add
adc
push
pop
fwait
and
and
insb
xchg
adc
rcll
repnz
stos
mov
sbb
pop
mov
mov
add
and
js
pop
mov
shr
pop
mov
std
nop
or
mov
mov
out
inc
mov
andb
test
loop
xor
sbbb
xor
pop
mov
outsl
int
adc
mov
jge
fadds
add
enter
clc
cs
jle
ret
or
dec
inc
jecxz
sub
out
and
inc
sub
lock
sub
out
fldenv
xor
lret
or
sti
fwait
push
and
sub
lods
negb
inc
fidivrs
jl
push
push
jno
xchg
aas
cmpb
jle
cmp
or
xchg
in
into
and
sub
mov
sbb
fistps
xor
sbb
dec
popf
lret
mov
inc
repz
or
jae
or
mov
stc
outsb
cltd
push
dec
cmp
hlt
ss
xor
popa
jecxz
in
fwait
jb
rcl
cmp
mov
insb
mov
test
stc
mov
test
faddl
mov
mov
cmp
rcll
ss
pop
xchg
add
insl
lcall
arpl
mov
addr16
mov
cmp
popf
mov
inc
in
mov
xchg
and
insl
rorl
and
js
pushf
push
aas
pop
xchg
enter
xor
push
ljmp
xchg
sti
sbb
mov
add
sbb
jp
xor
xchg
daa
sub
es
clc
dec
cmovne
sub
cmp
ret
push
rcl
clc
enter
insb
repnz
sbb
add
sbb
decb
sub
stos
fs
inc
adc
cmp
mov
xchg
pusha
in
pop
dec
and
or
adc
ficomps
fs
repz
or
pop
jp
rcl
pop
in
adc
rclb
sahf
adc
into
fcmovnu
inc
mov
fisubrl
mov
add
add
leave
mov
sub
or
push
push
fcmovu
scas
pop
popa
sahf
sbb
xchg
fistpll
xchg
ror
sub
and
or
lds
out
mov
mov
and
xchg
and
mov
sub
hlt
push
sbb
call
loope
xor
jo
xchg
and
cld
add
fbld
lock
pop
xlat
sbb
cmp
roll
adc
movsb
add
inc
inc
xor
add
mov
lods
xchg
aas
int3
insl
insl
shr
push
cmp
push
mov
fwait
sbb
ss
dec
push
and
repz
leave
into
daa
adc
adc
pusha
xchg
test
shlb
stos
add
in
repz
js
imul
ror
adc
imul
mov
xor
mov
popa
xchg
sub
or
pushf
xorb
and
pop
push
xor
cld
das
mov
leave
adc
and
loope
xchg
add
cmp
adc
mov
pop
sahf
or
xor
cmp
js
negb
or
nop
movsl
xor
pop
ss
mov
popa
adc
lds
push
sub
jbe
aas
pushf
out
movsl
stos
or
popa
pop
xchg
loopne
dec
faddp
cmc
imul
mov
lret
add
ret
cmp
cmp
arpl
mov
sub
lock
jnp
jmp
fdivr
mov
ret
xor
test
xor
jge
loopne
push
dec
fs
imul
xchg
mov
pop
xchg
jmp
cmp
rcll
dec
cltd
outsl
test
jb
adc
ja
addr16
ja
and
jl
punpckhbw
dec
repz
test
out
mov
adc
xor
ror
cs
and
adc
sub
and
mov
aaa
cld
mov
inc
jmp
xor
push
mov
sub
mov
xchg
bound
std
loope
lea
pop
cli
dec
xlat
test
scas
movsb
adc
sbb
xor
xor
jb
enter
das
inc
and
sub
mov
fisubrl
int3
pusha
add
out
pusha
dec
imul
push
imul
add
in
pushf
mov
outsl
dec
sbb
pop
mov
insl
jbe
pop
mov
out
mov
mov
lcall
in
push
fistpll
add
pushf
fucom
mov
into
in
fwait
pusha
mov
cmc
xchg
loopne
pop
mov
push
mov
inc
out
mov
jle
mov
in
fildl
and
jl
test
jae
xorb
push
xchg
aam
mov
mov
dec
add
jnp
sub
dec
stc
mov
mov
jns
sub
pop
mov
sbb
popa
xchg
movsl
sarb
mov
shll
clc
into
sbb
loopne
pop
adc
ret
add
insb
imulb
mov
pop
cltd
xchg
mov
and
inc
movsb
leave
std
mov
and
pop
leave
xchg
jbe
dec
stos
jp
std
jg
out
pop
mov
fiaddl
push
stc
sbb
sahf
outsb
dec
pop
fs
jle
jge
xchg
outsb
jmp
dec
jmp
push
adc
pusha
popf
vpsubd
mov
int
fucomi
adcl
cli
or
mov
sahf
int3
dec
xorl
mov
jb
lods
jmp
add
jle
mov
out
cs
pop
cli
dec
pop
addb
adc
jno
xor
sub
mov
movsb
push
cmp
xor
jnp
imul
js
sub
into
jecxz
icebp
and
and
mov
xchg
mov
push
test
and
adc
xchg
lret
pop
xchg
data16
push
es
sar
movsb
nop
icebp
aam
jae
pop
test
inc
xchg
mov
push
inc
sar
jecxz
sbb
sub
xchg
stos
jmp
divl
imul
jno
mov
ret
rolb
out
inc
pop
lods
scas
inc
dec
sbb
dec
jmp
lock
shll
fistps
out
adc
mul
out
es
mov
add
and
mov
push
jge
or
mov
test
and
faddl
inc
fs
lods
sahf
mov
adc
je
xchg
xor
mov
dec
mov
jge
lret
loop
mov
icebp
in
jl
loopne
xchg
sbb
dec
push
out
push
adc
jno
dec
addr16
dec
pop
bound
cmpsb
negb
inc
adc
push
ss
ss
xchg
stos
shrl
std
mov
sub
cmp
in
mov
jno
cwtl
shrb
inc
shlb
mov
les
aam
inc
ja
mov
into
ret
sub
push
xchg
test
pop
adc
fists
mov
push
pop
mov
mov
lret
cld
insb
loopne
cmpsl
inc
xor
and
leave
add
in
jle
sahf
imul
stos
cmp
dec
add
test
dec
push
ffree
std
dec
inc
pop
xor
adc
in
andl
xorb
mov
test
xor
dec
xchg
loop
xchg
ja
mov
add
sti
fstps
stc
fimull
popa
lock
push
mov
fdivrs
in
cmp
pop
sbb
in
test
mov
push
lds
dec
repnz
jnp
in
mov
mov
lea
and
aas
cld
fimull
movsl
xchg
xchg
fbld
scas
cltd
and
inc
cmp
xchg
and
jns
dec
xlat
mov
test
call
out
sti
cltd
pusha
dec
adc
insl
and
enter
mov
mov
rcll
lods
es
adc
push
sub
cmp
and
enter
or
xchg
pop
test
subl
out
mov
mov
dec
hlt
push
mov
push
or
outsb
clc
pop
mov
lds
sbb
inc
iret
arpl
push
mov
jecxz
push
mov
xor
sahf
into
dec
sti
cmpsb
mov
jbe
incb
ret
loopne
pop
push
mov
sbb
arpl
mov
ja
mov
bound
mov
das
testl
pop
testb
mov
mov
mov
mov
dec
cmp
lds
lret
arpl
jo
adc
insl
and
pop
dec
sbbl
lret
mov
xchg
out
mov
add
out
ljmp
sub
cmpb
push
pop
or
sti
es
movsb
popl
xchg
das
cmp
lds
fistpl
dec
xor
inc
push
addr16
mov
out
mov
lahf
mov
cltd
clc
xchg
xor
push
mov
popl
dec
bound
aas
jns
cmp
add
int3
mov
mov
adc
out
lahf
in
cwtl
fcoml
or
push
add
cwtl
sub
push
mov
out
adc
cmp
jl
xchg
jae
add
xor
jno
je
pop
std
or
push
int3
inc
lods
mov
mov
shll
mov
sti
mov
pop
cwtl
daa
sub
cld
scas
inc
xchg
cmpb
addl
dec
jle
mov
ljmp
fcmovne
pop
add
mov
in
fiadds
jl
imul
sbb
push
sbb
mov
ret
aad
insl
and
dec
je
in
pusha
lret
xchg
or
push
ljmp
test
xchg
insl
scas
mov
cs
outsb
sub
push
or
mov
shll
sub
jns
stos
imul
dec
push
outsl
sub
or
or
sbb
cmp
cmp
int
fbld
dec
jge
and
cli
pusha
sbb
pop
xchg
fwait
pop
sub
outsb
mov
add
or
push
cld
pop
mov
add
popf
sbb
mov
jbe
test
push
cmp
pop
mov
hlt
fsub
out
mov
loope
mov
loopne
xchg
cmp
dec
cmp
dec
mov
mov
stos
scas
push
mov
rol
lret
cmp
xor
jmp
pop
icebp
insb
imul
leave
in
xor
dec
mov
je
adc
inc
xchg
pop
pop
xchg
sub
cwtl
dec
mov
movsl
pop
mov
inc
mov
and
aam
clc
aad
fdivs
rcrb
ret
inc
mov
out
mov
xchg
icebp
jle
push
dec
ss
add
iret
adc
sbb
push
jno
pop
xor
xor
cli
xchg
popf
adc
jbe
leave
inc
ljmp
dec
push
leave
xchg
mov
sub
sahf
sbb
and
and
and
cmp
mov
rolb
xor
sbb
jle
sbb
lea
xchg
xchg
xor
aas
cli
sub
fcmovu
xchg
scas
call
and
push
or
les
stc
cmpsl
pop
mov
jae
sub
out
pop
xchg
mov
ret
xor
out
sub
popa
xchg
mov
pop
jae
outsb
gs
cmp
addr16
popl
orb
std
pop
loope
fistpll
fcompl
add
mov
adc
cmc
sub
lcall
lret
inc
out
sub
nop
inc
mov
test
outsb
dec
ret
in
cmpsb
loopne
push
lret
sbb
push
sub
pushf
lock
inc
add
mov
push
cli
push
inc
cmpsl
jns
pop
cmpsb
or
push
repnz
add
out
push
ret
push
push
mov
rolb
jo
push
jp
sar
jg
loopne
clc
add
out
popa
stos
xchg
faddp
sarb
jns
jb
mov
jge
inc
stc
shl
push
lret
roll
enter
mov
add
xchg
cld
xchg
mov
pushf
fs
outsb
add
es
pop
jl
stc
sub
mov
jb
push
jmp
sub
xchg
push
mov
jge
pop
jge
or
or
xchg
bound
mov
lds
dec
xor
stos
jns
pushf
mov
popf
cmp
pop
sub
cmpsb
arpl
hlt
cwtl
stos
aaa
mov
fstl
add
xchg
es
mov
movsb
pop
jno
push
ljmp
xchg
adc
jecxz
mov
test
add
bound
xchg
int
mov
pop
pop
test
movl
aas
push
jg
ljmp
fsubs
mov
imul
pop
ja
mov
repz
ja
and
jl
jo
fidivrs
leave
mov
sbb
test
sbb
adc
rcrb
fs
ljmp
in
arpl
mov
data16
jmp
in
pusha
mov
mov
shrb
jp
push
test
hlt
inc
enter
xchg
add
int3
xchg
mov
cmc
push
jg
mov
movsl
cltd
lret
or
enter
pop
es
dec
dec
dec
push
sbb
loop
mov
mov
popa
std
stos
lahf
andl
sbb
pop
cmpsl
push
rcll
clc
cmp
cltd
test
in
sub
and
sarl
jge
cmp
inc
push
pop
ja
xchg
cmpsl
xor
fstpt
sbb
iret
xchg
ljmp
cmc
sahf
dec
stos
mov
fbstp
loopne
and
mov
mov
and
or
cmp
xor
adc
fadd
faddl
movsb
fisubs
lock
dec
mov
sub
sub
daa
fsubp
decb
stos
pop
xorl
pop
mov
addr16
jne
shlb
cmp
dec
or
js
mov
inc
mov
sbb
loope
xor
dec
adcl
popa
aaa
shrl
xor
jae
cmp
inc
add
jg
pop
arpl
dec
ja
push
les
das
mov
push
and
mov
mov
or
pushf
std
in
sub
pop
test
push
aad
mov
push
dec
lret
mov
pop
adc
sub
ds
sahf
in
sub
cltd
xchg
stos
pcmpgtw
mov
cli
pop
std
adc
adc
jp
jmp
push
lea
pop
shrb
adc
mov
adc
mov
or
mov
cmpsb
cmp
mov
cmp
add
dec
add
ljmp
jnp
sub
outsl
lahf
pusha
or
shrb
cmpsb
lds
jl
add
xchg
add
adc
xchg
cmp
out
lcall
mov
into
sub
or
cltd
js
xchg
cli
xor
leave
cld
insb
fisttpl
add
arpl
lahf
push
inc
fsub
outsb
mov
adc
test
mov
pushf
scas
int3
pop
movsb
push
lret
das
cmpl
mov
mov
push
jle
dec
fs
jle
push
cmpsl
arpl
sub
dec
dec
sub
sbb
into
loopne
lret
xchg
loope
pop
imul
adc
mov
inc
or
mov
pop
xor
sar
push
xlat
les
cwtl
mov
or
cmp
jno
xchg
movsb
or
push
jle
dec
add
mov
or
scas
cwtl
xchg
rorb
int
xor
xchg
pop
pop
lret
push
scas
stos
pop
and
jg
xorb
push
pswapd
mov
and
adc
cmp
mov
adc
lods
mov
add
xchg
or
jl
popa
xchg
fwait
mov
outsl
icebp
dec
std
add
stc
movsb
inc
mov
notb
xor
xchg
push
inc
stc
jb
cwtl
dec
aas
push
add
and
scas
out
je
arpl
les
pop
repnz
dec
adc
fmull
jbe
movsl
sub
sti
lods
sbb
inc
leave
inc
xchg
or
pop
adc
mov
stos
push
pop
xor
divb
test
sub
ret
jns
adc
mov
jno
lret
pop
pop
or
jb
cld
repnz
lea
cmc
les
arpl
jne
mov
arpl
dec
test
mov
test
mov
test
das
lahf
dec
bound
hlt
mov
aaa
cmp
js
imul
mov
xchg
add
aad
mov
test
imul
or
push
or
mov
xor
add
into
repz
or
or
jno
cmpsl
test
pop
fdivp
cmp
xor
fsub
push
xchg
pop
subl
ja
jle
xchg
shll
dec
add
stos
jne
mov
aad
subl
mov
enter
rcll
jae
jmp
popa
fisubrs
addr16
cmp
or
dec
fstpt
jmp
sbb
lock
in
iret
lds
in
rolb
dec
xchg
outsl
jg,pt
cltd
jno
stos
cmpsl
push
test
rcrb
stc
mov
cwtl
divl
js
mov
pop
clc
cltd
popw
pop
loop
push
dec
cmpsb
adc
sub
call
sbb
or
sti
add
iret
dec
mov
pop
dec
xchg
scas
movsl
dec
add
int3
ljmp
push
xchg
adc
jmp
fs
addl
popf
xchg
jae
fistl
mov
dec
fists
testb
cmovns
xchg
out
stos
ret
push
mov
fiadds
insl
imul
orb
pop
jo
jns
jle
test
push
nop
and
aaa
sub
or
jle
addr16
fists
mov
imul
mov
or
int3
push
jo
adc
push
testb
cltd
pop
aam
leave
out
outsl
test
pushf
in
test
pop
call
movsl
sbb
das
lods
jl
jo
je
outsb
ret
xor
or
push
sub
aad
scas
xlat
sub
jg
pop
sbb
and
xor
push
sbb
adc
mov
fdivs
stc
xor
push
xchg
jg
inc
notl
mov
jnp
loopne
jge
cmp
clc
inc
push
cmpl
and
add
clc
popa
std
pop
and
out
xorl
xor
stos
mov
and
insl
test
adc
shlb
add
rorb
cltd
mov
xor
addr16
sbb
sbb
pushf
push
iret
xchg
test
adc
fistl
xor
mov
sub
add
js
inc
sbb
das
mov
xchg
xchg
shrb
adc
int
push
cmpsb
rcll
push
insl
sbb
sbb
ds
gs
and
dec
add
ret
push
ss
adc
push
jmp
and
fisubrl
adc
mov
fcoml
jl
int
cmpsl
or
outsb
add
jne
pop
inc
out
adc
stos
fisubs
les
sub
lods
arpl
loopne
arpl
sub
pop
cmp
cmp
xchg
cmp
aam
repnz
stos
sbb
sub
test
jl
repz
lahf
leave
pop
add
jae
xor
push
lock
mov
inc
fiadds
fcmove
adc
shll
ljmp
outsb
xor
mov
pushf
ljmp
scas
idivl
inc
cli
sub
pop
adc
hlt
gs
push
sub
enter
andl
mov
inc
sub
jecxz
dec
jge
sbb
sbb
loop
inc
jns
inc
and
shrb
je
push
ss
std
ficomps
rolb
call
sub
add
lret
aad
fs
std
sbb
fistl
imul
jecxz
and
xchg
pushf
shr
or
mov
jle
repnz
mov
shr
in
faddl
cmp
mov
dec
xchg
sti
shrl
sub
nop
push
js
push
mov
ficoms
in
bound
out
addr16
ret
loopne
lret
sub
rorl
stos
add
jg
xchg
and
and
push
xor
xchg
scas
daa
mov
push
ss
pop
addr16
mov
or
lock
push
xchg
add
pop
xor
add
int
aad
aas
insb
xor
push
scas
in
dec
in
cld
jecxz
mov
mov
nop
dec
mov
repz
inc
jo
rep
inc
jo
out
ret
daa
out
mov
loopne
inc
jne
ja
mov
pop
jmp
add
je
adc
stos
in
out
pusha
sbb
push
pop
jns
jb
adcb
mov
push
int3
scas
lcall
pusha
insb
adc
sub
mov
clc
nop
mov
add
sub
rolb
insw
mov
pop
subl
fcomip
and
mov
mov
sbb
push
in
shr
loopne
cmpsb
hlt
push
pop
sbb
hlt
mov
stc
push
iret
dec
ret
sub
and
ljmp
fnsave
add
xor
sub
and
shl
push
xchg
incb
imul
push
aas
loopne
sub
mov
out
hlt
imul
bound
adc
test
xchg
jns
pop
dec
sub
or
dec
cmp
daa
dec
push
sbb
push
push
jbe
push
cli
push
negl
push
fcmove
idiv
cld
aam
cmp
jp
pop
dec
xor
pusha
sbb
pop
addr16
dec
les
js
lret
mov
enter
mov
cmc
ljmp
jl
xchg
insl
pusha
cmp
sahf
fs
hlt
push
ficoml
stos
mov
sbb
in
xor
adc
sahf
inc
xor
push
jae
jge
adc
loope
mov
add
push
fs
xchg
add
cli
and
xor
fcomi
mov
and
cltd
pop
in
pop
mov
pop
add
sub
mov
cmp
mov
push
scas
ret
dec
sar
push
aam
int3
js
aaa
out
jne
lcall
or
les
or
cmp
test
jne
rcll
dec
mov
pop
or
stos
cmp
enter
push
test
icebp
imul
push
mov
add
mov
outsl
mov
or
out
sbb
icebp
xchg
pop
insb
rclb
test
add
dec
mov
push
mov
hlt
xor
xchg
int3
pop
add
icebp
sbb
addr16
cmp
int
hlt
inc
xor
add
jge
subb
loopne
mov
and
mov
adc
jle
repz
xchg
mov
fs
mov
call
mov
shrl
rorl
fcmovne
inc
test
mov
repz
sub
sbb
mov
pop
push
jecxz
mov
aaa
jae
insb
sub
jne
lock
stos
sub
mov
aaa
test
mov
jge,pt
movsl
and
mov
mov
xchg
and
sub
aad
pop
or
push
mov
cmove
xchg
or
lahf
movb
pop
scas
subl
or
inc
mov
dec
cltd
xorb
add
mov
inc
jmp
lea
inc
jne
ret
push
mov
fidivs
xchg
daa
pop
nop
inc
mov
fldln2
xor
popf
enter
stc
testb
out
push
jnp
out
je,pn
cmp
add
test
adc
jo
xchg
jge
push
outsb
call
cmc
nopl
lds
aas
fs
adc
jae
adcb
sbb
out
repnz
sbb
mov
data16
imul
dec
aas
pop
jb
mull
not
mov
pop
or
dec
xchg
mov
push
out
movsb
cwtl
repnz
add
dec
sbb
mov
outsl
lret
aas
dec
jnp
scas
push
call
cmp
insb
int
cmp
jp
push
xlat
xchg
mov
aad
out
or
mov
in
jo
lds
sbb
push
into
mov
xor
add
xor
jnp
ret
mov
aad
aad
ja
movsb
xchg
addr16
repz
movb
push
adc
lock
scas
cmpsb
cmp
pop
insl
pop
ret
mov
push
or
pusha
shll
sub
pop
dec
test
fldl2e
loop
or
mov
out
fsub
xchg
mov
cmp
repnz
jne
pop
cmp
jg
cs
out
cli
aam
jnp
dec
sub
roll
das
xor
inc
sahf
movsb
popa
sahf
dec
adc
cld
inc
mov
fucom
divl
in
popa
adc
add
dec
mov
mov
adc
aaa
outsb
pop
fnstenv
mov
outsb
sbb
iret
cmp
push
leave
or
js
and
test
ficomps
sub
mov
fidivrl
das
lahf
nop
aaa
adc
jmp
sbb
nop
mov
push
ljmp
and
xchg
push
push
test
outsl
sahf
test
ficoms
scas
and
cmpsb
fimuls
push
jae
std
dec
jb
cmp
orl
or
cmp
mov
push
fstps
data16
mov
lret
cmp
sarb
cltd
xor
mull
jne
sarb
adc
test
rclb
mov
xchg
aad
mov
jp
push
mov
aaa
stc
fmuls
push
shll
lcall
or
push
leave
call
sbb
add
add
xchg
xor
pusha
imul
gs
ja
rcrl
sahf
pop
out
add
xchg
mov
ss
js
repz
mov
clc
mov
leavew
enter
pushf
mov
dec
dec
ds
xchg
xchg
or
xchg
jmp
rcrl
stos
jle
mov
or
xchg
shrl
pop
adc
roll
mov
call
mov
sbb
ret
adc
in
shl
sub
loope
arpl
mov
pop
in
and
adc
repnz
dec
sbb
dec
push
mov
loope
pusha
repnz
loop
arpl
pusha
inc
push
les
fs
popf
in
cs
daa
push
mov
loopne
lret
insl
mov
movsl
cmp
sub
pop
cld
and
adc
je
inc
popf
mov
divb
icebp
push
dec
mov
fsubs
std
jge
xchg
xor
mov
mov
sub
pusha
mov
or
add
mov
and
mov
into
xor
adc
jne
push
mov
xor
inc
stos
aaa
cli
fimull
jnp
jle
xchg
daa
jl
ds
movsb
sub
popa
sahf
fistps
pop
insl
or
in
adc
xchg
cmp
mov
add
sbb
jbe
pusha
jge
cwtl
pop
or
and
icebp
sub
jle
imull
push
jb
mov
mov
adc
lods
inc
xchg
pop
sbb
jnp
cmp
add
xor
fwait
lods
mov
xchg
jmp
and
scas
mov
test
clc
enter
ja
sub
inc
sub
lock
or
test
mov
movsb
add
add
jnp
in
repnz
inc
xlat
cmp
test
add
push
outsl
pop
and
mov
mov
loop
adc
and
dec
mov
aad
jmp
cld
jg
push
sub
adc
push
popf
xchg
lods
mov
and
ret
mov
mov
cmpsb
ja
sub
or
ret
lods
mov
dec
jae
data16
mov
mov
dec
add
mov
mov
nop
std
pusha
xor
push
outsl
pop
fscale
mov
xchg
mov
rcr
les
cmp
dec
and
add
xchg
jmp
sub
jg
mov
lds
jae
lcall
ja
and
push
cmc
mov
mov
in
pop
stos
mov
scas
pop
ja
mov
or
xchg
ss
movsb
mov
lcall
ret
imul
xlat
decl
push
addr16
pop
push
xor
or
or
daa
adc
push
sahf
adc
pop
fnstsw
mov
imul
imul
jne
je
adc
inc
stos
out
pusha
mov
aad
sbb
aaa
cmpl
sbbb
cld
into
adc
pop
cmp
das
lods
xchg
hlt
pop
push
xchg
pop
lret
lret
ss
mov
mov
lock
mov
lock
push
pop
sub
inc
sub
cmp
dec
gs
cmc
push
sbb
inc
xchg
xchg
xor
jae
jmp
mov
sub
in
or
scas
test
add
mov
push
out
mov
push
lahf
jecxz
int
sbb
jecxz
add
loop
mov
fnsave
push
jo
shrl
xor
sbb
inc
sub
jnp
mov
and
ljmp
push
xchg
mov
sub
add
xlat
lret
icebp
stos
push
ret
mov
push
add
dec
scas
rolb
jbe
repnz
xchg
leave
sub
xchg
sbb
add
repz
or
outsb
mov
pop
dec
cmpsl
sbb
mov
xchg
fs
lcall
rcr
fldl
out
inc
or
and
pxor
out
insl
cmp
add
les
adc
cmp
cmp
jo
fistpl
rcr
mov
test
mov
push
cltd
xor
cld
or
or
push
sub
push
test
std
roll
imul
out
ss
mov
mov
jo
jno
movsb
or
aas
fwait
push
clc
or
mov
sbb
in
js
js
xchg
das
mov
fstpt
sbb
loope
push
pop
xchg
push
bound
sbb
add
test
adc
into
jecxz
imul
jns
pop
fnstenv
inc
add
iret
popf
push
insl
sahf
lock
mov
and
in
and
push
arpl
sbb
push
rol
inc
sbb
push
mov
testb
mov
lcall
xor
xchg
sbb
insb
fcoms
sbbl
sub
sbb
fadd
cltd
xchg
mov
out
int
orb
mov
fsubs
mov
mov
mov
sbb
mov
adc
aaa
orb
inc
ficomps
add
loopne
adc
jle
loopne
xchg
inc
std
jnp
mov
addl
sub
mov
popf
pusha
xchg
sbb
imul
arpl
cmp
push
insl
popf
xor
xchg
sahf
cmpsl
cs
out
add
mov
mov
and
testl
stos
loopne
adc
pushf
jne
int
xchg
lods
lods
jbe
outsb
inc
mov
fwait
jl
jecxz
js
lods
dec
xor
add
fdiv
jp
xchg
aam
push
or
test
repz
mov
fcomp
inc
pop
loopne
pusha
dec
xchg
sti
gs
ss
jmp
jbe
mov
outsl
push
movsl
daa
mov
add
inc
push
in
sbb
aam
sbb
add
decb
mov
dec
clc
add
jle
andl
fmuls
pop
xor
cmpl
fstpl
sbb
add
add
mov
inc
xchg
jl
test
or
lock
in
clc
mov
push
adc
adc
icebp
aam
rcr
mov
fwait
mov
mov
fisubl
jbe
stos
jle
push
sti
cmp
lods
xor
stc
out
lock
sub
inc
mov
mov
pop
subb
mov
popa
lahf
icebp
jge
add
out
jb
iret
sub
pop
mov
mov
mov
adc
xor
into
inc
mov
inc
cwtl
mov
add
add
jae
pop
sub
mov
loop
or
fs
in
pop
jp
int3
add
imul
cli
mov
out
mov
jbe
je
out
fisubl
xchg
les
inc
xor
push
fs
fidivl
icebp
jo
mov
repz
push
lea
mov
jp
lret
xlat
repnz
push
popf
xor
ret
push
sbb
hlt
push
add
enter
jecxz
dec
pop
fdivs
xor
jo
xchg
inc
lea
pop
jbe
inc
sti
xchg
test
insb
aaa
imul
or
out
cli
pop
lret
sub
push
add
nop
andl
mov
mov
repnz
xor
push
jp
out
dec
cs
pop
jb
rol
cmp
stos
cs
mov
movl
mov
push
mov
out
sub
sub
sbb
xchg
dec
pop
imul
aas
or
pop
inc
test
fwait
add
das
pop
and
jbe
rclb
pop
cmpsl
dec
inc
mov
adc
push
mov
xor
push
lea
sbb
lds
movsb
fs
mov
fbstp
in
add
jle
cmp
cwtl
adc
dec
fcoml
lds
into
aad
divl
jl
shrl
inc
nop
push
mov
mov
fsubl
jnp
jge
outsl
inc
cmpsl
sbb
jbe
jae
cs
cs
pop
or
jg
cwtl
and
and
dec
sbb
lcall
outsl
xor
fidivrl
cld
sub
push
andb
fmuls
xorb
jae,pt
movsl
lea
ss
mov
aaa
mov
adc
loopne
adc
scas
fsubl
scas
jbe
rolb
test
sbb
insl
jge
jge
call
fdivl
in
stos
mov
hlt
insl
sbb
or
dec
sub
nop
addr16
inc
push
lret
mov
inc
sarb
inc
dec
push
mov
and
pushf
lods
fdivp
mov
jnp
jle
sub
scas
stos
xor
mov
loope
mov
xlat
jno
call
pop
push
mov
mov
nop
out
sub
push
bound
rclb
mov
push
je
xor
lds
push
or
test
stos
sub
mov
lods
pop
adc
pushf
dec
or
mov
xchg
xchg
xor
in
or
lods
inc
adc
add
fisubrs
call
mov
and
ljmp
push
inc
jge
add
jge
shlb
and
rorb
xchg
dec
fcompl
or
cmc
lea
into
lods
inc
cmp
sub
mov
jmp
in
stos
dec
push
xor
adc
into
lret
adc
cmpsl
mov
pop
and
cmp
pop
jno
out
sbbl
setb
lea
adc
push
shl
test
shll
sbb
and
push
xor
xlat
cmpb
xchg
mov
insl
push
roll
nop
adc
mov
jns
lcall
lods
push
mov
ret
sbb
imul
jns
pop
jle
clc
loope
in
imul
push
inc
roll
lods
and
roll
arpl
push
ret
fdivl
ja
fadd
sbb
mov
iret
ret
jns
bound
movsl
mov
scas
sbb
pop
mov
pop
mov
mov
in
adc
and
ret
sahf
mov
mov
xchg
mov
push
in
push
stos
data16
push
loop
push
pop
gs
mov
div
jp
jnp
insb
out
mov
sar
add
aas
loope
sbb
mov
call
mov
jp
push
fildl
cld
std
aam
dec
lock
cmp
mov
ja
cmp
rolb
or
pushf
sub
sub
subb
ds
jmp
cli
pop
pushf
jecxz
mov
or
movsb
mov
int
jb
aas
addr16
jmp
mov
pop
push
push
div
mov
and
cmp
xor
cmp
mov
pusha
loopne
dec
or
fucom
arpl
push
cmp
aaa
xchg
inc
add
mov
dec
xchg
xchg
bound
sbb
xlat
dec
add
fstl
test
hlt
cmpsb
fiaddl
cwtl
mov
pop
pop
and
add
jp
sbb
fst
jle
in
shlb
fildl
stos
xchg
push
sub
in
ja
cmp
lcall
cmp
adc
dec
sub
pop
arpl
cmp
movsb
push
decb
popf
aas
subb
sbb
jecxz
cmc
orb
cs
pop
into
fmulp
inc
out
addl
xchg
fimull
pop
add
outsl
mov
stos
and
lock
stc
outsl
push
push
stc
jle
mov
ret
xchg
outsl
pusha
mov
pusha
cmp
fnsave
cs
mov
mull
sti
fs
cmc
jns
test
mov
fdivr
lcall
stos
out
mov
ret
insb
cmp
sahf
jmp
fbstp
dec
shll
mov
push
stos
enter
cmp
pusha
inc
fs
inc
les
data16
sarb
in
mov
adc
mov
push
fstps
idivl
cmp
popa
dec
push
inc
fcompl
xlat
push
in
imulb
adc
sub
inc
sbb
int
ret
fisttps
shl
test
fsubs
adc
sbb
inc
mov
push
dec
and
sbb
lds
push
sbb
aad
cwtl
lds
in
jne
cmp
and
pusha
pop
mov
cmpsl
and
leave
or
ds
push
aas
insl
insl
leave
cwtl
fistl
mov
clc
scas
cmp
push
pop
inc
dec
negb
and
push
hlt
inc
xorb
lods
or
gs
mov
call
pushf
cmp
jg
into
test
dec
dec
inc
mov
or
cmpsb
pop
shll
push
out
cmp
arpl
std
loope
push
mov
lods
sub
xor
ret
xchg
insb
mov
push
cmp
pop
dec
cmp
dec
inc
push
xor
mov
adc
sub
dec
push
push
xchg
test
sahf
incb
xchg
leave
data16
and
pop
stos
xchg
mov
pop
stos
scas
roll
jle
push
adc
push
movsb
rcll
or
xchg
adc
cmp
push
div
mov
dec
lock
aad
loopne
inc
cmp
mov
jl
pop
mov
div
cmpsl
jnp
inc
fwait
addl
add
shlb
add
sub
mov
dec
adc
bndstx
push
adc
sbb
or
lea
fldcw
mov
sbb
pop
ficompl
pop
ljmp
and
add
xor
push
cmpsl
adc
dec
outsl
push
js
in
mov
mov
scas
lret
testl
xchg
add
lods
sub
and
xor
scas
mov
cmp
out
pop
mov
push
dec
lock
stos
cmpsb
fs
fbld
int3
mov
dec
fwait
pushf
or
fiadds
sahf
nopl
inc
mov
enter
call
stos
mov
out
cs
es
ret
movsl
sbb
sub
sub
cmp
or
sub
je
lret
mov
out
movsb
pop
jo
mov
or
pop
cwtl
mov
in
mov
push
lahf
adcl
inc
arpl
cli
pop
jae
xchg
pop
pusha
lods
outsb
cwtl
fcomi
lcall
mov
push
xor
sub
mov
dec
and
push
fs
cmp
cmp
mov
sbb
sahf
mov
push
add
or
mov
fwait
mov
test
dec
ja
dec
out
loope
dec
daa
insb
jmp
and
test
lods
lea
subl
xor
insl
xchg
scas
nop
mov
pop
enter
mov
pusha
mov
adc
and
out
loop
icebp
gs
or
inc
jl
dec
fnstenv
mov
fidivl
pop
xchg
loopne
add
and
out
jmp
roll
in
aad
jmp
mov
cmp
icebp
or
ret
fistps
jnp
xor
push
mov
jle
pop
cmp
cmp
inc
and
inc
xor
sti
and
push
inc
xchg
jmp
test
movsb
adc
dec
lods
subl
movsl
sbb
dec
in
ret
push
push
and
aam
insb
out
out
int3
arpl
inc
cmp
push
daa
lock
mov
jno
clc
inc
xchg
cmp
jb
pop
sbb
lret
hlt
scas
imul
pop
shl
xchg
add
mov
push
mov
mov
cmpsb
rcrb
dec
mov
pop
and
hlt
loop
mov
outsb
cwtl
fistl
fistpl
cmp
add
test
lea
mov
popa
cmc
das
es
adc
fisubrs
xor
daa
in
sub
xorl
mov
insb
xchg
pop
cmpsb
mov
mov
xchg
aas
dec
dec
sub
ja
add
ds
push
int
xor
jecxz
push
mov
shlb
inc
out
mov
mov
cmp
xor
cmp
xchg
add
xchg
xchg
mov
into
push
fstpl
jnp
iret
pop
pop
in
in
jle
inc
cs
dec
jae
inc
xor
stos
or
ret
cltd
jmp
mov
call
fnstcw
and
in
inc
sub
fdivs
cmp
push
mov
jg
aas
sbb
xchg
xchg
add
sbb
ror
shl
sarl
xchg
mov
data16
sahf
nop
cmp
adc
daa
add
test
adc
xlat
sbb
xor
popf
inc
call
mov
inc
sub
bound
adc
cmpsl
loope
push
fdivp
sti
mov
in
xlat
js
loop
into
pop
popf
inc
inc
addl
or
popa
push
stc
jmp
cli
mov
fsubl
andb
shl
and
jb
pop
fmuls
jle
jne
into
pop
jnp
pop
fildl
xor
or
jle
pop
enter
sahf
push
lret
cmpb
daa
loop
mov
inc
xor
mov
xchg
sahf
push
pop
in
or
lock
and
jg
jmp
loop
dec
je
push
push
mov
mov
push
icebp
std
xchg
dec
mov
insl
xor
mov
push
js
cs
fsubrp
stos
movb
dec
or
xchg
pushf
mov
hlt
pop
cmp
shll
pop
out
outsl
movsl
adc
scas
push
jmp
ss
cs
mov
jmp
sarb
arpl
in
inc
test
cwtl
mov
test
shlb
imul
dec
lods
jne
adc
dec
jae
cmp
loopne
lock
test
cmp
std
mov
jbe
rorb
add
dec
movsl
out
int
pop
mov
and
and
sub
push
xchg
cwtl
aaa
fidivs
or
sahf
mov
xor
jno
inc
mov
lds
into
js
sub
sbb
mov
or
dec
jmp
push
in
or
out
push
and
pop
dec
jnp
jns
scas
mov
push
fildll
rcrl
jo
push
hlt
xchg
cli
jge
xchg
mov
or
or
mov
js
xchg
sahf
aad
adc
dec
pop
fmull
mov
pop
fsubs
add
xor
dec
repnz
in
unpcklps
and
dec
mov
xor
xor
push
mov
mov
sahf
pop
outsb
int3
lret
mov
cmp
aad
sbb
cli
inc
fidivrs
sarb
sub
mov
add
dec
push
repnz
cmp
leave
pop
dec
or
sub
popa
repnz
lahf
xchg
push
and
mov
mov
loope
icebp
movsl
fcoml
stos
adc
loope
popf
and
loope
mov
sub
cmpl
fcmovbe
and
imull
push
add
jg
dec
mov
mov
fstl
xor
rcrb
loop
in
inc
lock
cmpl
jnp
jecxz
shrl
in
jo
mov
or
shrl
and
lods
cmp
cmp
mov
fistps
dec
cmc
jnp
adc
inc
lds
sbb
or
mov
les
xor
dec
xor
push
das
out
inc
mov
inc
addr16
mov
and
pop
loope
fisubl
stos
inc
sub
sbb
mov
or
mov
inc
aam
jmp
add
repz
pop
test
addb
in
rep
mov
and
pop
scas
push
pop
add
pusha
mov
hlt
mov
jnp
popf
fidivl
sti
cs
int
int3
stc
add
lods
scas
sti
filds
loop
rcrl
mov
icebp
adc
jae
repz
push
mov
movsl
icebp
jb
movsb
lods
adc
js
pop
jno
xchg
mov
jns
sub
cmpsl
or
jmp
push
and
dec
sbb
push
sahf
lods
aaa
int
cmpsl
jb
jmp
mov
adc
push
xchg
pop
inc
lahf
insl
ja
call
jecxz
mov
stc
into
loop
add
jp
hlt
dec
in
push
xor
xor
imul
ljmp
adc
lret
sahf
pop
rolb
jae
dec
inc
lcall
lret
repnz
jmp
movsb
loop
fucom
dec
mov
call
lret
cmpsl
dec
rcrb
insl
push
dec
jbe
pop
mov
mov
lds
in
mov
mov
iret
sahf
nop
fstl
xchg
push
rcrb
lds
out
ret
repnz
mov
pusha
lods
dec
icebp
inc
adc
rclb
jmp
mov
dec
test
cltd
loopne
pop
mov
push
mov
mov
imull
int
ja
addr16
mov
icebp
adc
and
pop
xorl
fs
push
or
dec
mov
test
out
insb
jge
movsb
pop
xchg
call
popf
orl
or
fists
out
pop
out
cli
jbe
arpl
test
mov
push
xchg
bound
nop
lret
add
push
xor
mov
fadd
movnti
rcrb
mov
inc
add
sub
testb
aam
icebp
mov
das
sbb
push
dec
adc
or
aaa
push
mov
rcrb
sub
jmp
fsubrl
stc
jmp
push
sub
jne
orb
push
sti
xchg
cwtl
out
sbb
stos
test
call
bound
cltd
jle
pop
pop
cmpb
cmp
mov
or
sub
add
ss
cltd
std
aas
sbb
or
addr16
in
pop
pop
push
push
cld
loop
int3
fdivrs
adc
cmp
mov
stos
sub
lods
adc
arpl
cs
push
cmp
icebp
push
loope
shll
add
mov
add
cli
sub
insl
sub
lods
jno
sub
in
and
mov
mov
movsb
out
add
or
sbb
and
sahf
jg
push
adc
inc
xor
sbb
pop
cmp
add
mov
jnp
nop
or
clc
mov
lret
sbb
dec
mov
out
jnp
push
rol
fildll
pop
xchg
and
sub
adc
sahf
lahf
loope
xchg
mov
cltd
jl
std
loop
jge
add
cmpsl
mov
adc
xor
lret
int
mov
cli
dec
cmp
insl
popa
jle
js
mov
arpl
jle
rorb
mov
lods
xchg
nop
adc
pop
xchg
filds
jb
or
pop
dec
xor
lcall
push
jno
sbb
ret
xchg
mov
pop
xchg
sub
pusha
jp
pop
cli
fisubl
repnz
xor
add
mov
cwtl
dec
adc
pop
adc
repz
mov
mov
pop
inc
adc
xchg
inc
sub
or
xor
sub
cmpsb
aam
subl
cmp
loope
sub
cmp
ljmp
push
loope
jle
into
hlt
gs
adc
jg
test
sbb
lock
cmp
shr
sgdtl
cmp
out
mov
add
jae
jmp
lods
jo
xchg
popa
fistpll
fsts
inc
out
dec
mov
inc
inc
icebp
mov
inc
int
movsb
mov
int
das
xlat
in
inc
faddl
mov
loope
shll
xor
add
mov
outsl
repz
or
mov
push
cmpsl
xlat
jae
jmp
xchg
cltd
cld
imul
leave
rclb
jp
jge
out
ficoml
push
adc
mov
nop
decb
repz
adc
cmpb
jl
push
scas
push
mov
dec
dec
pop
inc
xchg
lret
hlt
pop
icebp
mov
and
insl
push
push
stc
add
cmp
in
ret
and
xor
lea
jae
add
iret
shll
inc
cwtl
int3
adc
mov
jne
int3
rclb
decl
int3
xchg
sub
xchg
adc
ss
push
sbb
aam
lcall
adc
add
mov
dec
test
sbb
std
test
mulb
xchg
ret
lahf
xchg
mul
mov
jnp
push
xor
inc
mov
sbb
push
fidivl
mov
cmc
sbb
jne
sub
enter
inc
xchg
sub
xor
mov
outsl
add
data16
ret
enter
ja
jecxz
xchg
mov
out
ds
sahf
pop
pop
ss
testl
inc
ret
jge
in
cmp
cmp
sub
push
hlt
stos
jbe
jne
or
in
rorb
mov
mov
mov
xchg
cld
cmc
roll
pushf
call
mov
scas
pop
popf
dec
fisubs
int3
dec
push
jno
push
sbb
or
test
or
adc
in
aaa
outsl
ljmp
leave
ljmp
jmp
adc
bound
mov
pop
popl
cmp
aaa
lret
lahf
pushl
cmp
repz
les
subl
push
pop
sbb
xchg
dec
mulb
adc
sahf
subl
scas
inc
mulb
push
fsubr
lods
fs
pop
mov
lea
xor
adc
inc
fistpl
and
cld
or
lock
nop
add
pop
mov
jb
in
rorl
cmpsl
scas
lea
in
dec
xor
inc
and
add
inc
out
adc
pop
mov
adc
dec
rcll
dec
add
inc
cmpsl
lret
movsb
cmc
dec
sub
jnp
shrb
xchg
jmp
icebp
fcomi
push
flds
aad
ret
test
pop
outsl
int
dec
daa
inc
test
jnp
jae
cmc
into
rorl
push
ror
mov
cmpsl
and
insl
inc
popf
pop
and
xchg
test
add
das
hlt
mov
fwait
xchg
int
xor
xor
daa
cmpsb
adc
pop
push
cmp
dec
sbb
inc
test
lret
fldl
repz
push
sbb
test
lods
adc
mov
clc
test
or
add
inc
hlt
push
mov
imul
inc
aas
bound
fs
movsb
call
aad
jbe
inc
sti
into
pop
nop
or
sub
repnz
cmp
or
sub
cwtl
inc
fcmovne
or
jns
and
addb
stc
addr16
jg
adc
xchg
call
loopne
or
fcomi
jecxz
loop
testb
and
jnp
ficoml
mov
icebp
xor
das
mov
lcall
testl
cmp
xchg
mov
in
adc
inc
adc
into
xor
xchg
call
mov
in
insl
sbb
push
inc
lea
js
sub
cmp
add
outsl
shrl
sbb
fcom
cmp
jle
dec
shll
inc
cmp
mov
jb
fsts
js
mov
sub
xor
cli
cltd
pop
insb
mov
inc
aad
pushf
mov
lds
das
ja
shrb
ret
outsb
jecxz
add
xlat
call
add
test
xchg
rcrb
js
in
call
ja
dec
xor
ja
inc
jecxz
stc
mov
cwtl
rolb
aaa
cld
push
data16
mov
loopne
not
sbb
sub
std
inc
arpl
stos
sub
jge
lds
movsl
xchg
add
mov
adc
xchg
xor
push
loop
mov
push
mov
mov
sub
xchg
pop
jg
jmp
mov
stos
inc
ret
jle
mov
or
aaa
sbb
xchg
mov
mov
inc
dec
into
push
in
lcall
fwait
xor
into
arpl
cli
cld
ret
add
loopne
cmpb
ja
adc
jo
andb
cmpsb
into
cld
xchg
ss
or
sub
pop
xchg
inc
mov
hlt
or
mov
xchg
push
fwait
mov
mov
mov
aam
xchg
pop
add
mov
sbb
outsb
inc
int3
loope
sub
add
andl
dec
shlb
dec
mov
pusha
test
nop
add
mov
test
movsb
ror
xchg
jecxz
in
and
shr
dec
lahf
pop
movsl
test
lahf
testb
xchg
mov
call
jb
pop
xorb
aaa
fimull
lret
push
sub
test
xor
jbe
cmp
mov
leave
lods
xchg
test
fcmove
stos
mov
add
cmp
or
inc
push
lret
ja
repz
inc
fcmove
nop
enter
enter
shlb
dec
push
sbb
cwtl
or
mov
lcall
or
fsts
xchg
in
push
in
xchg
loop
sbb
push
lds
repz
add
cmp
xchg
cmp
aam
sahf
mov
ss
mov
and
popa
fldcw
out
pop
loope
rcll
adc
sub
cmc
or
jae
scas
push
inc
and
adc
dec
loop
xchg
and
dec
orb
cltd
stos
xlat
daa
sub
test
loopne
sbb
ljmp
testl
adc
sub
and
mov
cs
test
fbld
lock
push
pop
loopne
call
inc
inc
ret
add
add
jle
adc
mov
testl
repnz
pop
out
pop
xchg
lock
or
mov
jmp
sbb
cmp
jecxz
ja
aad
repnz
xlat
lret
lret
mov
lds
xor
push
mov
fsubrs
fnstcw
mov
mov
add
lock
sub
nop
fisttpl
ja
dec
fistl
in
out
cvtps2pi
lret
xchg
jmp
je
hlt
pusha
adc
mov
lods
repnz
adc
xor
inc
mov
xchg
mov
in
and
cmp
add
test
push
sbb
sti
rcll
jp
leave
mov
xor
adc
outsl
push
push
xchg
push
xchg
mov
popa
mov
pop
shrb
xchg
add
shll
sub
push
out
xor
lret
or
xlat
jo
and
mov
lods
movsl
mov
test
lret
dec
and
mov
fbstp
adc
xchg
push
fnstsw
and
aad
out
rcr
daa
xor
aas
xor
lods
jge
orl
mov
icebp
add
cmpsb
cmpl
push
outsl
jl
out
push
inc
mov
cmp
mov
mov
hlt
fbstp
dec
or
popa
pop
xchg
imul
jno
cld
push
int
out
fidivl
jnp
dec
ljmp
idivl
xchg
or
xchg
or
and
jmp
in
in
scas
dec
outsl
xchg
sub
arpl
aas
mov
iret
inc
mov
nop
aaa
inc
push
jg
dec
testb
mov
xor
lahf
lahf
imull
xor
xchg
je
cmc
pop
mov
popf
mov
push
adc
mov
mov
lcall
into
addr16
sbb
mov
sbb
jl
scas
xchg
push
cs
push
mov
loopne
stos
xor
pop
inc
stos
push
adc
push
imul
mov
aam
mov
out
js
jg
jmp
daa
cwtl
popf
stos
inc
bound
into
test
pop
clc
inc
dec
dec
jmp
inc
mov
mov
add
push
loopne
pop
cmc
push
xchg
push
dec
dec
sbb
pop
or
push
jno
fwait
setg
add
into
sub
inc
popa
mov
xlat
fnstcw
adc
test
dec
or
add
fwait
icebp
xchg
fstl
fs
sub
jmp
jp
xchg
dec
add
inc
mov
arpl
push
adc
test
mov
jno
pop
push
cmp
cmp
mov
leave
rolb
out
push
adc
fmul
xor
js
cmp
inc
aad
mov
push
out
xchg
and
cmc
loope
or
push
into
les
repnz
call
inc
mov
das
add
sbb
or
cmp
cmp
xchg
jo
cmp
and
push
xchg
adc
and
sbb
dec
out
insl
call
mov
stos
out
pusha
mov
cmp
and
js
push
pop
pop
jae
test
popa
xor
sahf
les
mov
ds
pop
or
mov
and
nop
inc
jnp
lock
daa
push
adc
jnp
loop
cmpsl
cmp
stos
jo
push
adc
lea
jle
sub
aad
jnp
fisttpll
or
push
ja
sub
cmp
int3
loopne
cld
icebp
lea
outsb
mov
cmpsl
pop
dec
or
mov
hlt
push
xor
enter
dec
xchg
pop
test
adcb
pop
fidivs
ds
lret
sti
xor
int
es
adcb
test
sub
sbb
pusha
push
stc
adc
movsb
cmp
xchg
in
mov
aaa
cwtl
inc
cmp
mov
stc
loop
insb
push
push
xchg
int
xchg
insb
xchg
jle
mov
or
mov
add
xor
or
lods
sub
add
add
or
pop
stc
test
or
mov
data16
xor
lock
mov
daa
mov
dec
mov
lahf
and
sbb
stc
imull
fimuls
imul
sbb
cmpsl
mov
lret
pop
add
outsl
lock
xor
aam
int3
or
jmp
mov
insl
out
shrb
ss
push
xlat
imul
movsl
data16
movsl
mov
lea
pop
andl
inc
loopne
in
mov
inc
mov
add
inc
decl
roll
pop
arpl
sbb
test
mov
push
xlat
ficomps
jns
mov
loopne
inc
mov
push
out
inc
movsl
adc
ficoms
int3
sahf
sub
pop
ss
imul
ds
lahf
pop
push
pop
mov
add
add
jbe
and
pop
jnp
sub
sub
roll
inc
jg
shlb
hlt
mov
and
mov
mov
pop
push
inc
sub
cltd
jp
push
push
add
test
add
stc
sbb
lods
xchg
data16
fdivrl
in
xor
div
rcr
and
xchg
sub
inc
dec
inc
pop
loope
lds
fsts
stos
es
out
lret
cs
mov
xchg
xchg
je
sti
sub
fwait
iret
mov
pusha
xor
pop
cmpsb
mov
mov
ret
inc
incw
dec
xor
repnz
out
xchg
push
xor
xchg
sub
jno
or
push
shrl
push
and
push
push
in
ja
ljmp
stos
cmp
mov
sub
mov
rol
hlt
nop
pop
sbb
fildl
mov
fists
inc
dec
fwait
inc
mov
mov
test
xchg
ds
int
xor
ds
sub
dec
mov
fmulp
sub
lret
lods
inc
inc
mov
dec
mov
mov
incl
mov
clc
outsb
repnz
addb
into
and
cmp
jb
cli
lods
add
hlt
into
loope,pt
push
adc
xor
xchg
inc
mov
xor
xchg
cli
ja
jecxz
cmp
sbb
fwait
add
sub
jg
mov
arpl
sub
outsb
scas
sbb
bound
jl
hlt
lds
repnz
nop
mov
dec
cld
out
cltd
pop
bound
out
imul
loop
cmp
mov
sbb
cli
cltd
jl
mov
inc
insb
mov
scas
popa
dec
or
dec
rcrl
mov
and
inc
ret
mov
aad
daa
ret
out
sbb
outsl
mov
dec
in
negb
cmp
adc
adc
jae
ror
lcall
int
adc
sbb
xchg
push
xchg
sub
imul
xlat
adcb
outsl
jecxz
xchg
into
mov
jo
clc
lods
push
cmp
xor
sub
scas
das
push
mov
pop
pop
pop
xor
fldenv
ljmp
hlt
sub
std
imul
je
mov
mov
xchg
pop
call
or
lret
pop
cmpsl
push
int3
cli
push
push
popa
sub
gs
pop
xor
push
cmp
test
pop
es
clc
mov
scas
xor
pop
cwtl
adc
data16
pusha
aas
lcall
push
dec
pop
movsb
jbe
cmp
sub
and
cmc
push
mov
xlat
adc
dec
mov
sbb
cltd
out
out
jae
xchg
jbe
push
pop
popa
or
notrack
mov
jecxz
cmpl
sub
movsl
bound
arpl
movsl
movsbl
sub
outsb
scas
andl
ljmp
ret
popa
ja
xor
negl
push
xor
hlt
sti
xchg
fbstp
in
lret
cwtl
cmp
xchg
xchg
dec
sti
rorl
xor
inc
cltd
push
dec
out
xlat
in
push
jge
pop
js
es
jae
cwtl
mov
cli
stos
jecxz
mov
jecxz
dec
repz
icebp
aas
test
pop
sub
xchg
or
push
cmp
test
pop
sarl
mov
addr16
nop
fisubs
popf
es
mov
xchg
movsb
rclb
pop
mov
in
stos
ja
negl
in
out
subb
out
sub
orb
pop
aam
std
shr
inc
icebp
lahf
fs
or
dec
lock
pop
sub
out
add
pop
in
cmc
xor
jae
add
mov
inc
mov
cltd
decb
in
dec
mov
jnp
iret
adc
inc
dec
and
les
sbb
sbb
inc
mov
sbb
test
mov
pop
mov
xor
jmp
lock
sbb
ds
cli
jb
pop
daa
mov
sbb
out
push
cmc
loop
mov
enter
push
movsl
cltd
shl
inc
pop
adc
out
aam
sub
sbb
cwtl
iret
mov
push
lcall
insb
xor
mov
cmpsb
movsl
inc
push
das
fwait
sbb
adc
ret
sti
dec
xchg
aaa
jp
aas
sarl
jl
daa
xchg
into
insl
mov
std
sub
adc
mov
add
cmp
sub
mov
fisubrs
nop
loopne
mov
mov
xchg
push
dec
xchg
add
insb
imul
popf
inc
jo
mov
aas
adc
dec
dec
lods
mov
dec
stc
lods
mov
notb
push
mov
xor
lcall
add
jns
cmp
push
xor
loop
push
jge
xor
ficomps
popf
mov
jmp
scas
mov
cltd
test
lods
pop
gs
lcall
repnz
fistpll
adcb
lahf
xchg
addl
sbb
out
push
psrld
or
test
iret
push
add
inc
xchg
jae
jns
sub
jne
test
fidivl
push
test
int3
sti
iret
test
mov
cmp
rorb
mov
mov
or
scas
shrb
mov
arpl
out
pushf
gs
loopne
cmpsl
ja
popf
insl
hlt
fnsave
leave
xor
mov
pop
stc
push
dec
and
popa
lea
orl
test
sub
fs
cmp
insb
ret
lea
adc
inc
hlt
jp
mov
sarb
das
inc
xchg
push
mov
je
stc
pop
sbb
jo
jo
xchg
incl
icebp
sti
xor
movsb
xchg
push
fcomps
adcb
scas
daa
adc
pop
cwtl
inc
xchg
cmc
inc
and
outsl
push
pushf
icebp
jne
mov
add
icebp
fucomp
fistpl
mov
jne
push
pushf
fsts
jmp
insl
mov
subl
adc
inc
cwtl
inc
mov
jp
add
or
mov
pop
out
push
test
pop
mov
mov
push
shlb
add
mov
dec
es
push
and
pop
cmpsb
jmp
xchg
andb
int3
dec
sub
test
lret
mov
test
fnstsw
or
jae
aad
mov
inc
cmpsb
aad
fbld
mov
test
or
mov
stos
out
in
push
pop
mov
add
inc
ficompl
push
or
ljmp
pop
xor
mov
orl
rcrl
mov
push
xor
dec
lret
fwait
sbb
enter
mov
add
xor
orl
fwait
pop
jg
inc
icebp
fnstsw
sti
ds
mov
ljmp
pop
fs
xchg
mov
fisubl
insl
mov
loope
sbb
stos
int3
jg
out
hlt
scas
lahf
jb
jo
mov
or
pop
or
fiaddl
dec
xchg
push
stos
icebp
push
sbb
sub
test
popf
inc
dec
das
inc
iret
ficoms
xchg
icebp
out
mov
loope
and
mov
sub
cmpsl
xor
cmp
je
cli
adc
mov
call
fcomps
fistps
shll
jg
dec
push
ret
jp
xchg
push
pop
ljmp
in
leave
add
xor
imul
adc
or
mov
shl
jp
xchg
adc
jbe
mov
mov
aam
add
rcl
inc
xlat
cld
loop
into
pop
mov
cmpsl
pop
aam
cmp
jle
and
scas
or
lcall
ret
pop
lahf
mov
add
jg
les
fistl
jae
push
jecxz
lahf
sub
fiadds
sub
sahf
xchg
jno
and
out
cwtl
lret
jo
and
and
mov
jae
adc
push
dec
repz
adc
fdiv
mov
cltd
faddl
ja
pop
or
inc
les
repz
imul
insb
jge
movsl
jns
scas
xchg
fdivrp
xlat
jae
gs
mov
jbe
sub
inc
pop
pop
ss
inc
mov
cmp
or
lea
and
mov
push
pop
or
cltd
mov
fdivrl
add
add
push
fwait
xlat
sbb
in
aad
jle
xorl
iret
lcall
pop
sahf
add
cmp
mov
sub
iret
xorb
sub
hlt
cmpsl
cld
pcmpgtb
aaa
jb
mov
sbb
aam
sub
push
adc
mov
outsl
sbb
test
add
popf
and
movsb
push
and
cli
mov
in
jl
xchg
js
push
out
int
mov
xor
outsb
cmpsb
inc
cmp
pop
push
icebp
cs
xchg
push
fmull
outsb
ret
fsub
and
pusha
iret
mov
lods
or
mov
cmc
jp
sarb
dec
mov
and
jmp
ss
test
add
mov
out
out
das
dec
pop
pop
push
insb
lcall
xor
mov
out
out
mulb
or
fisttpl
push
mov
xor
or
push
inc
mov
mov
sub
xchg
lcall
jle
dec
insl
js
push
add
sti
sub
addl
cwtl
fwait
xor
cmp
and
add
inc
fstpl
je
inc
in
cmp
ljmp
mov
xchg
sbb
inc
notb
inc
addr16
test
sub
xchg
add
hlt
loop
mov
dec
push
adc
add
push
sbb
push
mov
arpl
orl
dec
xchg
push
cld
fcmovnb
int
sub
gs
xor
pop
pusha
lock
cmc
pushf
test
xchg
jge
or
push
in
xchg
dec
add
adc
inc
rcrb
push
bound
sahf
aam
cmpl
cmp
cmpl
xchg
jecxz
popa
andb
inc
mov
popa
lea
xchg
and
jne
sahf
lods
pop
int
adc
nop
ret
sub
rcrb
mov
popa
test
sti
daa
addr16
adc
mov
jmp
cmp
mov
adc
pushf
movsb
mov
sub
adc
insl
js
cltd
adc
pop
aas
lock
subb
mov
int
cmp
cli
out
aas
lret
call
add
in
shrl
pop
or
jns
mov
cmp
in
push
pop
mov
scas
movsb
cli
adc
pushf
ds
nop
push
lahf
and
in
mov
test
not
pop
pop
adc
lods
divl
movsb
mov
dec
add
or
fs
out
test
xchg
fwait
xchg
sti
inc
and
enter
int
fwait
jno
dec
cmc
test
stc
scas
movsb
cmp
rorb
sub
int3
dec
sub
or
roll
mov
xchg
dec
js
into
sti
cmp
xor
mov
xchg
sub
fwait
sbb
jge
add
std
sbb
push
xor
push
insb
mov
push
jno
jns
insb
pop
pop
lea
addr16
cmpsb
js
in
xchg
iret
mov
add
test
xor
sub
aam
scas
or
sar
stos
xor
pop
mov
idivb
test
dec
jno
test
xor
inc
xchg
out
xchg
and
or
sub
das
dec
cmp
xchg
aas
dec
sbb
or
orl
lret
xlat
and
inc
mov
sbb
mov
mov
pop
xchg
xchg
fs
xchg
test
jno
sbb
mov
stos
arpl
in
ljmp
mov
push
dec
vcvtpd2ps
xchg
xor
imul
pusha
inc
pop
mov
cmp
push
rclb
xor
fistps
add
sub
xchg
loopne
lds
xchg
arpl
mov
and
push
arpl
xor
push
cmp
popl
out
fdiv
imul
cmp
fstl
adc
scas
outsb
in
cli
orb
mov
aad
adc
cs
scas
testl
adc
callw
call
dec
mov
les
andl
xchg
xchg
add
push
mov
xchg
repz
std
add
xchg
pop
outsl
cmp
les
in
aaa
mov
out
push
pop
ljmp
pusha
fldcw
pop
mov
add
and
scas
xor
lret
jg
push
mov
add
mov
ret
push
dec
nop
and
dec
mov
or
mov
sub
aaa
mov
and
mov
push
jmp
pop
in
daa
sub
fldenv
push
js
add
inc
fimuls
hlt
jecxz
adc
mov
sbb
inc
icebp
xor
add
pop
or
cmpsb
cltd
nop
lret
mov
pop
cmp
cmp
dec
mov
pop
fistl
xchg
outsl
sub
jne
sti
push
mov
mov
cltd
stos
adc
sahf
jl
jnp
scas
data16
into
or
push
je
stos
adc
loope
lods
push
fs
stc
sarl
cwtl
stc
inc
icebp
or
hlt
jl
cmpl
shl
jnp
sub
dec
imul
imulb
arpl
jp
add
dec
jo
xchg
mov
jmp
mov
movsl
popa
jno
adc
mov
pusha
adc
pop
sub
popf
mov
mov
push
push
cmp
test
jnp
repnz
aad
pushf
les
or
ljmp
push
movsb
in
dec
insl
inc
xchg
mov
je
hlt
xchg
push
sbb
cli
mov
pop
and
pop
inc
test
mov
pushf
adc
movsb
dec
std
daa
inc
ret
cmp
jnp
sbb
add
mov
mov
lds
je
push
cmpsb
cltd
cmpsb
xor
mov
test
mov
idivl
sbb
ret
fstpt
insb
int
arpl
fnsave
repnz
pop
ds
adc
pop
mov
mov
test
in
fldenv
insb
and
adcb
imul
es
or
scas
xor
scas
out
mov
jns
dec
push
fdivs
push
sar
xchg
push
cli
ret
int3
mov
sbb
dec
movsl
inc
rcl
add
dec
xchg
adc
imul
mov
in
adc
sub
cli
call
rclb
fldt
mov
dec
idivb
pop
stc
pop
aam
jae
cmc
inc
pop
push
sbb
imul
pop
push
inc
les
test
xchg
ja
adc
repnz
sti
imul
pop
sbb
nop
inc
mov
loop
cltd
in
adcl
inc
xor
les
lret
jb
fimull
popf
xchg
in
xchg
push
xchg
sbb
jb
call
scas
movsb
pop
scas
js
rol
sahf
cltd
mov
mov
fistpll
jecxz
addl
outsb
cmpsb
sti
inc
in
xor
push
push
outsl
fisttps
dec
decl
add
addr16
jl
enter
mov
out
dec
cmp
fbld
out
sahf
fcmovnb
add
jmp
inc
mov
push
jmp
icebp
inc
cld
mov
jmp
or
testl
shlb
xor
inc
lahf
notb
mov
xchg
jae
das
pop
cmp
cmp
pop
and
xor
jg
fidivl
jl
adc
sarb
push
imul
cwtl
sbb
cltd
inc
add
fcom
sub
add
sbb
ret
mov
sbb
jo
jae
lods
pop
jno
andb
dec
adc
inc
jo
xor
sbb
jge
add
cmpsl
aad
xorb
fs
cmp
out
scas
or
mov
cmovo
ja
mov
inc
ss
test
pushf
mov
into
push
sub
ret
mov
xor
lret
roll
push
xor
fwait
adc
daa
pop
in
xchg
sub
pusha
jge
test
push
jae
pop
daa
js
or
dec
mov
adc
mov
push
divl
imul
mov
and
push
cmp
sar
fsubs
dec
pop
test
jmp
out
ret
imul
pop
into
into
pslld
sahf
xchg
and
mov
out
and
out
cmc
rcl
call
lahf
cwtl
aad
repz
into
js
and
push
gs
test
sbb
std
dec
addr16
pop
xchg
jge
clc
test
mov
cld
jns
push
push
cmc
and
jo
or
mov
and
test
sti
pop
repnz
cli
es
aad
cli
ret
and
inc
mov
pop
fs
add
hlt
jmp
fmull
jns
cli
inc
pop
pop
or
jmp
or
xor
adc
cld
sti
pushf
imul
inc
sahf
and
sub
add
mov
into
pop
es
cmp
popf
pop
pop
sub
sub
out
cmp
les
sbb
jbe
cltd
movsl
jge
pop
ss
and
push
gs
xchg
dec
xor
sub
xor
xor
shlb
add
fscale
decb
pop
adc
mov
out
andl
into
fnstsw
push
data16
movb
and
popf
je
push
mov
in
xchg
in
dec
mov
cmc
push
loop
int3
outsl
aas
fsub
adc
jnp
insl
shll
fwait
inc
and
push
mov
dec
cmp
add
pop
cmc
scas
or
and
add
std
push
cmp
daa
xlat
inc
or
ljmp
cmpsb
mov
adc
dec
iret
jle
shlb
call
test
jae
and
movzbl
mov
out
xor
xchg
push
pop
sbb
repz
xchg
fadds
pusha
outsb
sub
fs
movsb
mov
loope
mov
sti
outsl
loop
mov
mov
push
outsl
mov
mov
mov
stc
jns
dec
mov
test
fiaddl
or
or
pop
outsb
into
loope
loopne
mov
dec
fmul
and
rorl
jp
adc
fwait
ljmp
fmull
dec
xchg
sub
xor
enter
cmpb
add
aam
push
xor
xor
cmp
aaa
rcr
xor
roll
or
test
int3
popa
xchg
iret
insl
in
dec
mov
jnp
loop
push
adc
mov
push
aas
or
pop
sbb
xor
and
je
call
inc
std
mov
dec
sbb
jl
jecxz
mov
xchg
xchg
jecxz
cmp
xor
pop
and
mov
test
sub
jecxz
fmull
pop
shlb
push
cwtl
je
popa
jg
mov
jle
push
mov
add
insl
inc
fbstp
adc
stos
gs
cwtl
dec
test
fs
adc
es
lcall
xchg
mov
jb
stos
leave
and
and
daa
adc
mov
pop
push
xchg
into
adc
rep
leave
sub
jae
inc
push
pop
dec
pop
jg
adc
pop
imul
push
xchg
mov
push
pushf
sbb
js
inc
popa
psubsw
inc
dec
push
inc
adc
adc
add
pop
cmc
lcall
pop
adc
cmp
dec
popa
sub
dec
or
xchg
mov
mov
mov
mov
ja
test
orl
dec
sbb
add
imul
push
xchg
loopne
xor
push
mov
repz
inc
lcall
cmp
mov
ja
sub
push
sbb
fcomps
fistpll
jb
je
inc
sbb
mov
fnstcw
pop
sbbl
mov
push
ja
ja
push
or
sub
lock
je
adc
lods
pop
xchg
inc
clc
dec
into
les
mov
xchg
mov
xor
std
xchg
dec
push
and
dec
loopne
addr16
inc
test
pop
movsl
fbld
out
test
xor
dec
aam
ret
push
int3
arpl
jno
and
mov
fwait
stos
pop
shrl
popa
dec
in
or
mov
in
outsl
dec
mov
dec
arpl
ljmp
xor
out
dec
loop
mov
loop
inc
jle
cmp
mov
push
jb
in
cmpsl
inc
jns
jg
cs
pop
fisubrl
stc
ret
pop
sub
out
scas
or
arpl
mov
popa
xchg
jae
jg
dec
mov
adc
fldenv
sbb
hlt
gs
inc
cmc
lret
push
add
sub
sahf
data16
cli
sub
xchg
fsts
jne
mov
pop
cwtl
mov
mov
rclb
lahf
test
sbb
inc
xlat
adc
pusha
fldcw
aaa
test
adc
mov
rclb
adc
xchg
mov
arpl
ds
mul
lods
shl
addr16
cmp
cld
push
jmp
xor
mov
xor
jge
fst
mov
push
dec
push
xor
ret
call
insb
loope
stc
sahf
js
sti
jle
push
jp
fwait
and
adc
xchg
sub
mov
pop
mov
lock
insb
cmpsl
pop
mov
add
cltd
or
jl
jnp
cmpsb
fs
lcall
cmp
imul
mov
push
sub
dec
shr
iret
xchg
call
jl
pop
pop
dec
push
sub
out
das
sbb
mov
xor
ja
movsl
js
adc
stos
ds
xchg
test
mov
mov
mov
loopne
test
in
sub
in
clc
xchg
and
mov
shrb
mov
sbb
push
cli
mov
clc
push
in
cmp
push
mov
jecxz
jnp
sub
mov
mov
mov
sbb
pop
fcompl
dec
xor
and
mov
or
and
fcmovnu
lahf
and
lock
inc
loopne
mov
or
mov
adc
mov
movsl
lcall
mov
shl
jo
mov
bnd
sbb
lods
lods
stos
xchg
mov
and
mov
adcl
pop
lods
popf
pop
pop
pop
mov
sahf
sub
fisttpll
mov
test
or
out
xlat
xlat
dec
pop
stos
fucomi
cmp
push
ds
lods
and
lds
cmp
mov
jp
je
outsb
inc
jle
mov
cmp
fisubrl
inc
mov
inc
int
scas
inc
test
imul
movsb
aas
mov
dec
ficomps
int
in
sbb
out
add
adc
mov
subb
mov
test
inc
xchg
rorb
jo
in
jo
aas
data16
or
insb
jg
dec
or
int
enter
stc
dec
stos
popf
out
leave
push
xor
dec
push
bound
xchg
add
mov
call
cmp
pusha
dec
rorb
sub
stos
sbb
test
sahf
std
sbb
loope
call
mov
in
mov
shlb
cs
fcmovnb
rcl
pop
popf
fsubs
mov
mov
and
sub
sub
mov
adc
enter
push
aas
rolb
test
lods
cs
inc
nop
push
mov
gs
push
pop
call
sbb
mov
fcmove
adc
loop
aam
push
inc
lds
dec
stos
repz
and
dec
mov
sbb
iret
jnp
daa
mov
lcall
jb
mov
insl
stos
sbb
lds
jge
jnp
repz
inc
xchg
add
test
pop
sahf
bound
pop
dec
dec
idivb
mov
jge
cmp
mov
or
cmp
das
arpl
movsl
call
test
dec
cmc
sub
ss
push
sbb
mov
jp
and
push
lds
testb
jo
mov
mov
jmp
pop
dec
sbb
pop
jo
mov
andb
cld
or
pop
jne
aad
lds
nop
hlt
insb
xchg
mov
aaa
ja
test
mov
call
negl
out
stos
add
dec
aam
sbb
in
xchg
mov
mov
sbb
mov
mov
and
pop
test
xchg
mov
in
pop
push
and
pop
in
pusha
mov
mov
test
xchg
sbb
sub
incl
and
clc
sbb
xor
cli
sub
pop
repz
push
push
leave
cmpsb
mov
fs
les
test
pop
pop
out
and
pop
jae
inc
rclb
pop
and
lods
fwait
xor
mov
in
and
jmp
mov
inc
rcrb
mov
rorl
in
and
sbb
lea
lea
push
fs
push
out
inc
iret
pop
jnp
dec
inc
in
add
cmp
mov
jl
inc
adc
jbe
inc
cmp
mov
mov
icebp
jae
ret
push
cmp
bound
data16
and
movsb
jbe
inc
les
mov
ljmp
out
add
shlb
dec
or
fdivrs
sub
xor
lods
sub
pop
ja
and
int
push
fcom
shlb
mov
or
int3
mov
sub
mov
dec
inc
or
xchg
pusha
orb
adc
sub
add
or
jno
iret
push
push
lods
mov
xchg
sbb
cwtl
lret
dec
nop
xchg
mov
jle
std
sahf
fildll
scas
sub
mov
or
xchg
fistpl
dec
lods
sub
and
cmp
int
cmp
and
ror
int
inc
mov
push
aas
inc
inc
imul
mov
pop
imul
pushf
pop
pop
js
les
lret
cmp
jle
aas
lods
sub
lret
add
call
add
fmuls
push
jbe
adc
dec
jns
in
dec
movsb
mov
and
adc
push
addr16
xchg
mov
popa
add
sbb
mov
jnp
outsl
pop
cmp
ljmp
jp
sbb
aas
mov
mov
movsl
dec
stos
cmp
mov
sbb
push
mov
lods
adc
rorb
pop
lods
cmp
adc
mov
mov
jno
fwait
dec
pop
jge
sbb
pop
push
in
rorl
or
and
xchg
jecxz
outsb
and
lods
cmpsb
xor
push
ficomps
mov
add
mulb
int3
dec
pop
enter
decb
out
sbb
mov
popa
in
loopne
lcall
and
cmpb
pop
mov
dec
aas
and
jns
loop
enter
testl
dec
sbb
push
rdpmc
fisttpll
clc
call
ds
push
xchg
in
scas
outsl
push
fidivs
mov
imul
lcall
inc
add
sbb
push
adc
jnp
pop
and
mov
stos
stos
xchg
and
pop
mov
mov
bound
mov
mov
les
jo
push
fisubrs
movsl
gs
jae
out
add
jg
cs
cli
scas
add
sbbb
mov
out
dec
fcomi
cli
shll
out
push
xchg
das
pop
add
in
out
adc
enter
mov
mov
aad
xchg
imul
addr16
decb
push
mov
or
popf
xchg
out
push
shlb
ss
mov
mov
inc
jbe
mov
movsb
imul
sub
lahf
push
dec
stos
dec
mov
fwait
outsl
mov
push
cltd
test
fimuls
push
mov
sbb
cmpsl
repnz
sub
xchg
mov
insl
push
popl
lahf
lock
das
xor
sar
in
cmp
sub
sbb
push
mov
shrl
mov
pop
lret
inc
jne
shll
mov
lock
dec
and
push
lods
pop
fsts
dec
int
repnz
dec
int
stc
fisttpl
sti
cmpsl
insl
xor
das
cmpsb
xlat
mov
ss
sbb
rcr
je
jl
inc
enter
es
fstp
mov
mov
scas
mov
leave
jno
mov
incl
xchg
fimull
scas
inc
out
pop
lock
insb
push
fwait
push
pop
mov
ret
adc
mov
add
clc
jl
ljmp
repz
icebp
outsl
dec
in
cmpsl
dec
fld
pop
cmpsb
push
addr16
mov
ljmp
outsl
mov
push
mov
ret
xchg
adc
cmc
cltd
push
adc
fdivl
popa
test
jb
dec
in
jg
popf
ja
std
pop
jg
and
mov
loopne
push
mov
mov
loop
and
addr16
lods
test
xchg
and
mov
and
loope
push
lret
sub
fistl
pushf
inc
and
stos
mov
jns
dec
cmc
leave
cmc
mov
and
pop
and
imul
or
cs
adc
pop
sub
shll
sbb
pop
bound
icebp
ljmp
jg
adc
popf
mov
or
pop
sub
push
cmpsl
or
cmpsb
cmpsl
adc
les
or
inc
std
xchg
and
mov
je
xchg
cmp
pop
mov
outsl
cmpsb
jnp
js
aam
xor
mov
and
xchg
xor
mov
xchg
sarl
adc
pop
mov
sbb
movl
xor
xchg
jno
pop
dec
das
inc
add
ret
enter
pop
iret
ret
loopne
or
out
rcr
mov
insb
ret
inc
test
hlt
inc
adc
repnz
xchg
mov
fwait
cmpl
incl
cmp
je
cmpb
test
lods
int3
or
fildll
mov
sbb
xlat
jns
test
movsb
xchg
fisttps
or
adc
scas
pop
jecxz
cmp
cmp
aam
jge
test
jo
fbld
add
out
test
adc
test
lcall
lds
out
insb
xchg
fs
dec
movsl
loop
or
adc
cmpl
in
mov
mov
xchg
or
xchg
sub
push
cmp
pushf
push
stos
mov
add
roll
stc
pop
cmpsl
inc
cmp
mov
loop
pop
xchg
or
popf
out
cmp
fldl
xchg
ljmp
push
or
and
pop
mov
adc
ja
repz
mov
ds
rcl
sub
adc
sahf
and
xor
lea
enter
jg
adc
test
add
push
test
jno
jo
xchg
pop
mov
cli
push
pop
aad
mov
sbb
sbb
inc
out
iret
popf
xchg
dec
imul
lcall
dec
xor
popf
jmp
xor
loopne
inc
add
fldt
mov
fmuls
mov
jge
push
jle
rol
lock
mov
push
pop
enter
jge
addr16
and
rolb
pop
test
push
cwtl
sahf
andl
jo
stos
popa
push
add
jb
pop
mov
sahf
rcrb
jg
push
pop
sbb
bound
push
push
dec
jb
sahf
stc
jnp
inc
sub
or
enter
imul
jns
lret
xor
fbstp
movsb
lcall
or
les
push
pop
sahf
jns
addr16
pushf
sub
or
xor
idivb
repz
js
adc
je
lret
dec
or
mov
dec
mov
and
and
xor
mov
push
hlt
in
ljmp
jae
shlb
notl
pop
fldl
mov
jno
adc
sub
add
lret
mov
push
and
fsubrs
outsb
ljmp
roll
lock
mov
jmp
hlt
xchg
lahf
and
test
mov
jge
mov
movsl
out
push
std
mov
andl
pop
sub
or
cmp
xor
data16
sub
jmp
push
dec
aad
ror
pushf
test
mov
sbb
shlb
sbb
cmp
inc
dec
mov
sarl
ss
mov
test
mov
dec
ja
ja
in
gs
jae
icebp
test
sbb
mov
jp
pop
adc
pop
notl
xor
ja
inc
sbb
loope
cmp
push
inc
inc
adc
fbld
orl
clc
adc
aam
lret
xor
aas
jb
mov
add
xchg
jmp
and
jno
pop
push
out
jl
mov
push
scas
ret
scas
inc
cmp
pop
stos
aam
jbe
pop
sub
ds
xor
fnstcw
mov
add
mov
jo
mov
lret
fdivp
fstpl
and
cmc
test
xchg
jns
push
mov
pushf
adc
mov
xchg
in
insl
enter
adc
sti
mov
pop
mov
mov
pop
adc
push
push
test
cmp
fisttpl
fcompl
pop
and
mov
in
sahf
rcrl
and
add
sbb
in
mov
dec
sub
roll
pop
cmp
mov
stos
xor
popl
cld
pop
dec
lcall
push
cmp
test
stos
cmpsl
ss
add
pop
or
adc
xchg
mov
dec
jns
xor
xchg
jbe
dec
xchg
negl
fldt
mov
push
sbb
sbb
mov
mov
mov
sbb
mov
xor
jns
dec
jo
sub
add
sbb
mov
sub
in
add
je
mulb
sarb
orl
rclb
mov
enter
jg
pop
mov
dec
loope
adc
sahf
push
sub
clc
sub
in
in
push
insl
popa
xchg
filds
aad
out
cwtl
add
decb
outsl
xor
inc
fimull
sub
jl
push
add
bound
mov
lret
dec
jmp
jnp
loope
les
jecxz
std
ds
hlt
into
adc
shlb
sbb
andl
rorl
testb
sub
add
loopne
inc
ja
push
pushf
xor
in
outsb
sbb
pop
jmp
fwait
mov
xchg
lsl
adc
mov
sbb
fwait
sub
mov
mov
stos
mov
xchg
or
in
out
mov
insb
testl
daa
and
dec
jb
mov
cmpsb
pop
fsubl
and
sbb
pop
add
dec
and
push
ljmp
and
push
movsb
xchg
mov
lret
adc
cmp
push
rcrb
cmp
fildll
xchg
push
jle
xchg
dec
std
scas
cmpb
sbb
mov
ret
imul
jmp
sub
iret
sbb
or
imul
fistpll
ret
jmp
xchg
push
cli
add
add
sub
sti
lock
movl
xchg
ds
flds
loope
jno
lret
sub
into
sub
cmp
xchg
out
js
int
imul
inc
xor
xchg
inc
push
stc
addr16
jno
jecxz
adc
mov
mov
je
jno
pusha
and
and
sti
cli
pop
jmp
movsl
jnp
mov
xor
mov
cmp
pop
push
xchg
inc
cltd
std
aas
push
mov
push
movzwl
lock
push
mov
adc
rcrb
sarl
mov
dec
xchg
sub
iret
xor
cli
lahf
call
lret
push
lods
rcrb
mov
mov
pop
popa
imul
aad
pop
inc
xchg
push
imul
mov
int
lea
pop
jp
mov
pusha
insl
mov
aaa
bound
mov
mov
repnz
sbb
xor
addr16
mov
scas
push
push
sbb
lret
cmp
sub
ficompl
loope
in
adcb
repz
inc
push
cmp
push
aam
adc
xchg
xchg
insl
xor
les
jb
jno
cmp
je
repz
mov
popa
repnz
mov
and
mov
lock
jmp
mov
jg
int3
xor
mov
mov
mov
sbb
mov
and
sub
add
pushf
out
xlat
sub
cmpb
add
push
lds
comiss
inc
push
shl
outsl
cmp
ss
sbb
jae
cmp
xchg
sbb
dec
push
xchg
sti
ja
mov
adc
out
enter
mov
sub
fsubr
repnz
and
mov
lods
movsb
cmpsl
mov
xchg
lock
xor
test
push
or
cmp
cltd
jmp
cmpsl
aaa
sub
inc
adc
sub
jge
imul
jp
stos
mov
pop
inc
adc
jl
in
and
enter
xor
nop
mov
mov
dec
lahf
sub
push
push
sub
xor
lods
cmp
cli
or
xchg
cld
cli
insb
and
cmp
pop
cld
xchg
push
fists
arpl
aaa
push
dec
mov
push
adc
daa
imul
or
in
fstps
test
xor
or
inc
imul
push
mov
movsl
hlt
scas
mov
add
fcomi
adc
jae
sub
adc
enter
push
pop
mov
in
ss
cmp
mov
icebp
cmp
stc
notl
stos
sbb
fisubs
cmp
dec
leave
imul
loope
sete
xor
cmc
and
sub
cltd
add
sub
sub
ficomps
pushf
mov
inc
pop
in
sub
mov
stos
pusha
xchg
and
mov
int
xchg
mov
xor
fimull
mov
in
loop
fiaddl
pop
lds
mov
adcb
mov
arpl
inc
mov
clc
pushf
xor
out
mov
push
rorb
popf
pop
xchg
jae
push
jmp
ret
dec
xlat
xlat
or
into
sbb
movsb
lds
push
ret
stos
sti
add
adc
dec
or
xor
mov
cmpsl
test
mov
mov
shll
sahf
xchg
mov
or
lahf
cli
ds
jmp
sbb
or
cmpsl
mov
or
dec
push
test
dec
into
push
add
sahf
stos
push
test
sti
in
pop
mov
inc
inc
je
repnz
out
je
stos
jl
jmp
cmp
ljmp
xor
loop
gs
or
in
cltd
mov
dec
or
vmovntps
leave
xorl
sbb
stos
fsubr
sarl
addr16
lret
sub
sub
push
add
inc
das
mov
lea
iret
test
jb
push
dec
lret
mov
push
mov
decl
movb
jp
mov
jmp
test
lods
inc
imul
adc
clc
ds
inc
shlb
xor
cmp
lds
lahf
jle
sbb
cmc
aas
sbb
inc
lds
fs
je
test
pusha
scas
in
dec
bound
leave
sbb
add
mov
adc
scas
add
punpckldq
jl
jg
cwtl
mov
mov
fst
adc
daa
stos
cmp
pop
sahf
lret
stos
jl
mov
cld
pop
in
xor
jmp
dec
outsb
xchg
arpl
popf
vmwrite
xchg
cmp
mov
inc
mov
jno
mov
test
jp
sahf
fadds
mov
call
cmp
mov
fisubrl
clc
jnp
loop
jl
sub
push
jno
adc
pop
call
adc
mov
shrb
dec
dec
das
pop
mov
push
pop
mov
lds
mov
out
pop
push
loope
lret
dec
mov
mov
stc
movsb
loopne
push
test
dec
push
sub
call
cld
add
push
add
mov
mov
xchg
insl
cmc
subl
pop
sbb
sti
jle
cmp
pop
int
mov
imull
mov
adc
or
jo
ret
xor
push
mov
lea
hlt
adc
das
lret
push
int
mov
jno
push
loopne
sbb
mov
in
shlb
jge
outsl
add
push
mov
mov
arpl
cmpsl
lea
fs
pop
sub
xchg
mov
add
dec
lret
test
cmp
dec
fnstcw
adc
bound
jbe
mov
dec
jne
lahf
dec
jmp
mov
adc
inc
pusha
rol
push
call
mov
lods
sub
out
or
jne
mov
sarl
nop
xor
cmp
jg
and
mov
pushf
push
inc
sbb
rcll
icebp
cli
sbb
push
js
jbe
fdivr
dec
fistl
or
out
decl
dec
jl
adc
lds
dec
repz
or
iret
sub
fildl
mov
movb
mov
cltd
mov
icebp
or
pop
mov
pop
jp
testb
pop
mov
fdivs
push
les
das
sahf
loopne
in
sub
in
les
xchg
jecxz
xchg
pop
imul
push
cltd
dec
add
mov
and
push
jno
adc
push
jl
dec
lret
or
and
in
cmc
jl
mov
jp
and
and
stos
mov
cli
xchg
test
cmpb
iret
outsl
pop
push
and
das
mov
sbb
inc
gs
add
and
cmp
cmp
push
xor
mov
dec
lahf
das
jl
cmpsl
pop
mov
out
xchg
pop
xor
and
adc
cmp
pop
adc
das
rcl
aaa
jl
cs
fsub
lods
les
lods
dec
ret
sub
out
jle
scas
decl
pop
aam
pop
jge
sub
xor
out
push
test
jecxz
pop
pusha
mov
dec
rcrb
xorl
and
add
aad
lods
sub
jne
es
mov
add
xchg
mov
fwait
inc
adc
xchg
daa
adc
jecxz
and
jae
dec
sahf
pop
sbb
insl
adc
adc
int3
jmp
mov
mov
in
orb
push
xchg
fistpll
testb
xchg
jmp
xor
push
call
or
mov
in
lods
das
jae
icebp
out
les
aam
repnz
pop
sub
ja
out
bound
pushf
push
dec
in
add
pop
pop
mov
or
and
lds
insl
hlt
jnp
xor
push
fcomps
push
cld
int3
ficompl
pop
push
cmp
sbb
pusha
cwtl
mov
mov
push
popa
aas
out
cli
mov
negb
sbb
add
test
pop
je
sbb
stos
stc
cwtl
pusha
cmp
sub
mov
addb
mov
dec
xchg
mov
pop
or
scas
xor
rcrl
pop
mov
push
jecxz
jp
inc
fisubrl
fisttps
xchg
test
subb
ljmp
fcmovb
in
inc
subl
mov
rcl
icebp
or
pop
imul
es
aad
scas
popl
xchg
int3
ror
inc
pop
cmpsl
inc
jae
scas
jl
cmc
cmp
in
adc
stos
in
pop
out
xchg
xor
xchg
aas
cmp
sub
sbb
mov
xchg
lods
pop
jecxz
xor
pop
ljmp
mov
add
mov
out
fdivl
rclb
testb
mov
and
cmp
inc
xchg
mov
or
mov
cmp
repnz
push
cmpb
jns
pop
inc
xor
and
mov
nop
es
sub
jmp
jo
pop
leave
jle
jmp
sub
inc
test
xchg
adc
lock
jg
add
sbb
out
cmpsl
shrb
inc
ret
and
cmp
out
in
adc
sbb
orl
mov
js
enter
mov
adc
ret
and
or
in
sub
mov
push
lds
loope
ja
jne
js
and
testl
loopne
sbb
data16
mov
data16
xchg
sub
mov
clc
cmp
out
aaa
or
xchg
scas
out
push
mov
xchg
pusha
add
mov
movsb
push
cli
lcall
pop
test
jle
lcall
rol
ret
mov
loop
push
pop
ret
imul
pop
loopne
or
push
xchg
fnstenv
lds
adc
xor
outsl
inc
cmc
mov
sbb
sbb
out
dec
sub
jl
inc
xchg
lret
jecxz
push
mov
inc
or
lods
addr16
iret
in
xchg
out
mov
xor
or
push
mov
loop
andb
aam
out
outsl
cmp
cli
pop
lcall
add
mov
xor
call
mov
add
inc
jo
in
outsl
jle
jo
xchg
les
or
ljmp
dec
imull
decb
frstor
mov
lds
dec
pop
mov
adc
mov
ret
popf
sub
int
fsubrp
fsubrl
es
jns
cmp
jno
mov
push
mov
add
inc
and
push
sbb
jnp
clc
addl
sbb
inc
cli
cmpsb
ljmp
pushf
mov
enter
or
aaa
push
out
call
lret
push
xchg
imul
sbb
push
cwtl
mov
and
push
adc
enter
gs
jbe
repnz
pop
mov
inc
pop
dec
xchg
jae
ljmp
or
mov
sbb
adc
fidivs
not
dec
in
adc
mov
call
cmp
push
pop
xchg
daa
mov
daa
lods
fwait
mov
xchg
popf
pop
insl
lahf
mov
inc
push
fiadds
and
or
mov
lahf
incb
popf
jnp
hlt
mov
push
xor
aam
icebp
daa
fwait
jbe
addb
sbb
xchg
sti
int3
xchg
cmp
shll
mov
mov
loope
push
out
fsubrs
jmp
aas
test
ljmp
mov
test
andl
and
pop
xchg
in
pop
cmp
pop
std
shll
das
loop
or
nop
leave
fs
push
pop
jae
cmpl
xchg
inc
leave
xchg
shll
fdivrl
aam
mov
xchg
xor
lret
push
popf
bound
ret
in
sbb
or
imul
out
pop
inc
add
pop
test
rolb
adc
mov
mov
xor
sub
jl
aad
lods
dec
insb
gs
mov
mov
leave
mov
in
test
mov
or
ret
inc
fdivs
fisttps
xor
lcall
or
fisubrl
cld
mov
jns
inc
add
sub
daa
adc
gs
sub
ds
fwait
adc
fwait
aaa
das
daa
cli
or
xchg
daa
scas
rcrl
movsl
insb
cmp
call
jo
subb
lods
in
sub
icebp
js
dec
xor
inc
imul
mov
cli
loope
incb
sbb
sbb
mov
inc
insl
pop
ficoms
cs
xor
sbb
lret
daa
rclb
js
cltd
xor
mov
xor
fsubrs
xor
add
test
cltd
std
push
mov
jo
pop
ret
jg
sbb
clc
adc
bound
cli
repz
dec
sub
inc
inc
dec
dec
sarb
mov
pop
je
mov
sbb
add
lock
and
push
xor
popf
jl
cwtl
enter
test
mov
mov
jo
mov
call
sar
push
and
xchg
bound
lods
xor
ja
dec
mov
fs
test
jns
inc
jecxz
mov
gs
out
addl
test
mov
pop
daa
or
add
jae
lahf
mov
stc
repnz
dec
xor
or
mov
inc
push
ficoml
rolb
lret
push
pop
xrelease
pop
add
mov
cwtl
xchg
inc
add
xchg
push
push
fs
data16
test
repz
cmp
out
jne
fldenv
xor
aas
xor
aaa
dec
shlb
mov
and
mov
jbe
mov
std
scas
mov
lods
dec
pop
push
js
ret
jmp
inc
enter
sbb
sub
jp
icebp
push
and
jmp
and
fwait
dec
insl
mov
xor
xchg
adc
clc
mov
jns
sbb
cmc
lea
pusha
test
mov
mov
xor
sub
inc
and
into
dec
lcall
jnp
arpl
inc
ficoml
nop
mov
mov
stos
and
sti
or
cmp
mov
adc
ret
cltd
or
clc
shrb
sbb
pop
mov
fwait
mov
test
cmp
mov
fisttpl
cwtl
push
jne
jns
adcb
cmp
lods
hlt
sub
add
mov
mov
mov
mov
rorl
xchg
mov
inc
dec
rcrl
lcall
sbb
enter
push
out
mov
stc
cld
inc
inc
in
pop
mov
in
or
into
rorb
into
and
sahf
in
jns
mov
xor
and
in
nop
fisubl
push
xchg
leave
cmp
into
in
daa
ss
lret
fmuls
ret
test
outsb
fnstenv
mov
cli
orl
daa
pushf
cmp
aaa
ljmp
lret
push
sub
mov
lods
and
scas
jb
nop
sub
push
aas
mov
mov
nop
ret
lods
shl
xchg
lock
push
ljmp
mov
aas
test
mov
gs
repz
stc
push
pop
sub
outsb
lahf
add
jne
nop
push
mov
sub
loop
test
sub
movsb
icebp
add
dec
pushf
into
enter
jae
scas
icebp
ljmp
std
fstl
pop
or
js
das
jle
jmp
sbb
and
ret
fadds
cld
cmpsl
cs
mov
out
jnp
adc
lcall
xor
js
in
addr16
mov
xor
test
dec
test
shlb
jmp
shl
add
mov
cmc
mov
mov
fcompl
mov
into
fistpl
xchg
or
pop
push
arpl
aas
add
xchg
testb
mov
jecxz
addb
dec
push
ds
jb
inc
rolb
rcrb
jno
mov
test
jle
bswap
rorl
mov
xchg
mov
out
and
test
test
mov
jp
cli
sub
mov
outsb
repnz
inc
lock
pop
pop
int
cmpsl
inc
lods
rcll
pusha
or
loopne
lahf
jp
out
cmc
add
mov
xlat
ret
ret
fs
sub
push
pop
fdivp
into
mov
pushf
jecxz
aam
adc
xor
sbb
inc
jmp
pop
xlat
imul
xchg
test
cmp
dec
xor
add
and
pop
xchg
jne
xchg
mov
outsl
xchg
xchg
sub
xchg
adc
mov
mov
cld
mov
dec
mov
push
cmpsb
pop
lock
mov
cmp
xchg
push
cli
das
jns
bsf
dec
dec
jb
cmpsb
add
cs
xor
mov
sbb
adcb
xchg
add
incl
loopne
ss
lea
hlt
mov
adc
dec
ret
stos
lods
aam
es
popa
mov
inc
iret
adc
aad
fbstp
cli
frstor
add
cmp
and
add
pushf
xor
pop
xchg
ja
xor
push
imulb
inc
cmpsl
cmp
out
into
inc
jb
arpl
xchg
fsubrs
and
xchg
mov
pop
or
sub
enter
lock
jl
or
cmp
movsb
mov
inc
enter
fcom
shrl
cmp
fwait
adc
add
mov
and
cmpsb
aad
notl
push
std
sub
mov
xor
adc
xchg
cmp
out
addr16
xor
imul
jb
lret
mov
cmp
in
sbb
and
or
push
in
repz
inc
hlt
pop
cmp
into
pop
insb
fildl
in
repz
adc
inc
xchg
shl
ret
repz
test
mov
mov
repnz
mov
adc
cmpsb
lock
and
push
js
cld
lcall
out
in
out
pop
pushf
popa
enter
mov
cmpsb
lahf
pop
mov
add
sbb
pop
bound
out
sbb
test
ret
push
mov
dec
aad
and
fiadds
cs
adc
rorb
int3
jle
jae
test
cwtl
cmc
lahf
push
mov
fdiv
lods
dec
jmp
cmpsb
push
lea
push
sub
and
add
gs
sub
mov
inc
pop
je
nop
loope
aad
pop
inc
push
xchg
movsl
mov
adc
push
bound
inc
sbb
lret
mov
push
imul
xchg
pop
xchg
lcall
mov
sub
cmp
in
inc
iret
idivl
fmuls
xor
cmpsb
add
mov
cmp
mov
mov
out
dec
adc
test
and
adc
mov
sub
sbb
dec
adcl
out
mov
iret
in
xor
jg
lret
inc
xchg
dec
das
ljmp
out
pop
pusha
out
adc
int3
pop
inc
adc
and
int3
pop
imul
sub
sub
dec
loope
rcrb
popf
lret
pop
in
mov
outsl
sub
inc
dec
inc
lcall
movsl
ja
fsts
and
inc
push
mov
and
idiv
sarb
mov
std
in
xlat
cmp
inc
push
cmp
fwait
in
jb
subl
jo
sbb
sbb
xchg
scas
in
sbb
xchg
adc
pop
incl
xchg
lds
outsb
aam
paddd
mov
xor
cmpsb
out
fcoml
out
rep
sub
clc
out
dec
pop
fucomp
fs
movsb
fdivrs
bound
mov
in
push
hlt
add
xor
cmc
rcr
lahf
sub
mov
dec
push
stos
mov
fisubrs
into
dec
mov
negl
sub
xor
popa
mov
nop
and
dec
mov
add
rorb
adc
xor
dec
cld
and
mov
mov
out
mulb
test
or
nop
cmp
popf
sub
xchg
stos
xor
out
xor
cmp
ss
pop
inc
movsb
add
xor
xor
fs
scas
in
into
ficompl
push
cmpsb
sub
inc
and
mov
in
movsl
dec
pop
scas
aas
gs
les
sub
inc
testl
adc
jo
jl
push
or
aam
addr16
mov
adc
mov
dec
lea
sbb
jno
sbb
xchg
jg
shrl
pop
ret
inc
xor
out
aas
in
adc
xor
rorb
repnz
test
data16
pop
out
dec
xlat
cwtl
and
cld
and
shrl
das
add
dec
xor
inc
fadds
jecxz
xchg
in
push
insb
pop
push
mov
fwait
insl
push
cs
data16
xchg
test
sbb
sti
mov
or
scas
and
mov
lcall
inc
mov
cli
jg
in
xchg
or
lret
int
adc
inc
pop
outsb
out
out
jns
ficomps
stos
adc
jns
adc
mov
mov
xchg
sbb
push
mov
rcrw
scas
loop
mov
fisubrl
repnz
sahf
ds
dec
sub
mov
push
mov
movsl
cld
mov
shlb
add
test
es
ficompl
mov
into
jbe
push
inc
xchg
inc
daa
push
ret
mov
adc
lret
mov
bound
inc
stos
je
in
mov
nop
gs
jnp
pop
xor
xor
incb
or
pop
jle
jg
xchg
inc
dec
ds
xchg
xor
pop
in
lret
xchg
mov
cmp
cmp
hlt
sbb
pop
sbb
push
and
stos
cwtl
dec
cltd
in
pop
pushf
lds
sbb
in
outsb
enter
jb
cmc
es
lds
popf
cmc
mov
aam
push
jecxz
adc
ljmp
inc
jb
testb
pop
xor
fs
sar
jne
xchg
mov
sub
mov
clc
dec
fdivl
jle
popf
pop
out
shl
mov
rep
sub
jp
and
retw
mov
cmp
rcrb
push
or
push
enter
cs
adc
je
add
mov
insl
popl
push
push
xlat
mov
pop
add
das
mov
sub
mov
sub
dec
and
adc
add
mov
ss
dec
idivl
xor
jp
sahf
test
sti
adc
faddl
mov
in
jmp
data16
imul
pop
adc
shll
xlat
das
jno
adc
dec
cmp
jnp
icebp
in
mov
cmp
fimull
out
mov
mov
and
push
jl
cmp
adc
out
mov
mov
pop
sub
or
xchg
in
test
push
pop
add
and
mov
mov
daa
pop
add
jb
ss
call
jmp
pop
mov
mov
pop
xorl
rcrl
cmp
sahf
inc
dec
loope
lds
lcall
mov
loopne
sub
lcall
add
jle
iret
and
das
cli
fnstenv
xlat
adc
push
imul
push
outsb
xor
arpl
jl
mov
and
inc
pushf
push
add
sbb
pop
mov
das
fdivl
dec
sahf
or
movsl
dec
pushl
in
dec
repz
ljmp
push
inc
popf
push
std
pop
sarb
ja
mov
adc
jecxz
in
lcall
fs
pop
mov
xchg
loop
push
popa
adc
out
dec
into
push
int3
adc
mov
imul
test
les
cmp
cli
jne
pop
pop
lret
pop
sub
push
inc
xor
movsb
mov
push
in
dec
rcrb
mov
pop
xor
push
pop
in
loopne
sbb
rol
xor
mov
into
add
pop
fmull
out
xor
lods
dec
adc
pushaw
pop
or
and
popf
cs
int3
push
or
incb
ja
inc
xor
aaa
inc
push
rorb
lods
mov
mov
nop
push
pop
xchg
sbb
rol
stos
push
cmp
movsb
pushf
jle
aaa
mov
inc
adc
mov
cli
and
inc
pop
cmpsl
cli
lcall
repz
jg
les
jae
rorl
imul
push
test
dec
jecxz
cltd
add
insb
mov
pop
sbb
les
lcall
std
stos
sbb
test
lcall
std
and
insl
sbb
bound
nop
outsb
outsl
cmp
stos
add
sbb
mov
loopne
push
hlt
mov
dec
jns
jg
fiaddl
pop
or
int3
jecxz
test
and
sarb
nop
mov
out
std
cmp
fidivs
adc
gs
cmp
lret
xchg
lods
out
jb
hlt
sbb
sub
ror
sbb
cmpb
push
cmp
shll
icebp
shrb
or
fstps
jle
hlt
pop
insb
sbb
lds
push
mov
pop
ficomps
mov
sub
jns
xchg
mov
mov
in
inc
jne
sub
pop
scas
mov
or
scas
neg
into
mov
adc
lret
mov
xchg
sti
leave
and
jecxz
push
addr16
mov
shlb
test
jle
add
pop
add
addr16
dec
xor
popa
std
jae
imul
int3
cwtl
cmp
pop
hlt
jge
scas
inc
mov
jecxz
push
insb
jo
popa
cmp
or
mov
jg
jge
lods
loop
xchg
mov
ret
pop
out
xchg
std
mov
jbe
pusha
lret
add
and
in
jnp
repnz
inc
icebp
out
add
je
aas
mov
or
addr16
es
enter
call
jle
push
mov
push
jp
pop
dec
cmp
mov
fldl
fwait
out
aad
ja
cld
repnz
fisttps
dec
jmp
scas
mov
xchg
std
out
bsr
cmp
pop
mov
cltd
test
inc
adc
pusha
sbb
lods
inc
adc
jnp
xor
pop
sub
lahf
cmpsl
dec
movntps
jge
faddp
inc
cs
loopne
imul
enter
mov
cltd
jp
lds
loope
test
lods
mov
or
inc
in
addr16
cmc
dec
mov
lds
leave
cmc
jmp
insb
mov
sbb
je
test
add
cmp
shr
add
mov
xor
mov
mov
pushf
pop
ror
hlt
mov
mov
mov
pop
jne
test
xor
dec
enter
int
cltd
cs
stc
mov
daa
jno
int
adc
ds
mov
jne
stos
or
pop
cltd
fbld
out
push
std
repnz
enter
push
add
ret
xchg
cmp
xchg
das
xchg
in
xchg
mov
stc
sti
cvtps2pd
mov
adc
fwait
push
sbb
ljmp
push
inc
dec
stos
mov
es
lahf
out
and
ja
inc
shlb
xor
out
fwait
pop
imul
jge
cld
decl
mov
pop
add
into
inc
lods
mov
xchg
adcb
int
leave
aaa
or
inc
inc
and
or
pusha
clc
adc
lretw
xchg
push
std
jmp
iret
and
cltd
jne
nop
dec
stos
push
mov
cmp
insl
mov
mov
icebp
jl
xchg
push
mov
mov
or
data16
ficoml
mov
out
in
sub
sarb
daa
std
mov
cltd
mov
jle
dec
and
mov
adc
mov
sbbb
mov
lods
rcr
aaa
mov
lcall
adc
mov
stc
and
je
das
cwtl
pop
out
xor
cmc
pop
adc
cmpsl
sbb
ffree
add
push
cmp
xchg
lods
adc
mov
pop
mov
movsb
adc
or
push
dec
bound
push
pop
imul
hlt
bound
iret
setno
xchg
jge
mov
mov
or
and
int
jo
shll
out
out
mov
mov
out
xor
or
xchg
push
xchg
in
adc
sub
jmp
jecxz
scas
push
jl
dec
int3
sub
sbbb
jo
add
dec
mov
das
adc
adc
lcall
pop
add
das
mov
out
ss
cld
popf
sub
xor
insl
icebp
xchg
sub
inc
push
mov
bswap
pop
jl
pop
xor
fidivs
decb
movl
fstps
into
sub
leave
cmp
jne
pop
push
je
and
push
das
int3
and
lret
adc
push
test
enter
xor
fldcw
mov
cmpsb
mov
mov
ss
sub
mov
pop
sub
sbb
add
popf
mov
mov
fadds
jecxz
xchg
mov
push
inc
enter
sub
cmp
into
push
ficoms
mov
adc
mov
aas
aas
add
rcrl
cltd
adc
cmpsl
cmp
stc
rolb
dec
mov
mov
jo
sub
cmovs
ret
xchg
in
outsb
cmpsl
fwait
mov
lock
dec
aad
sbb
jp
inc
jo
xchg
adc
cmp
mov
inc
cmp
movsl
xchg
add
push
dec
mov
out
jne
fsubrl
scas
pop
mov
sub
popf
fistpl
jns
andb
sub
inc
mov
fs
sub
aaa
cmp
std
xchg
adc
adc
xchg
out
ja
ret
xchg
gs
xor
adc
dec
cli
test
icebp
cld
mov
ss
dec
sbb
sbb
and
movsl
inc
mov
mov
xchg
sahf
jmp
adc
mov
xor
lcall
jnp
cmp
adc
cli
push
cmpsb
xor
push
outsl
cwtl
push
mov
into
imul
lds
xchg
sbb
xlat
sarb
pop
xchg
movsb
pushl
add
pop
mov
test
jns
pop
push
pop
int
pop
inc
lcall
lods
xchg
mov
mov
int
gs
dec
fistpl
rorb
push
mov
inc
ljmp
stos
push
lcall
mov
addr16
mov
or
aaa
push
push
cmp
mov
cmpl
mov
jp
dec
mov
pop
and
and
xor
push
cmpsl
ss
in
jle
mov
xor
enter
sbb
fcomps
imul
xor
add
dec
pop
mov
sub
fcoml
inc
and
pop
or
push
pop
ds
cmp
leave
dec
jmp
ja
dec
and
mov
mov
in
std
idivb
out
inc
adc
shr
xor
psraw
aas
roll
or
add
fsub
lret
jne
icebp
jno
pop
fcmove
inc
enter
decl
lcall
jmp
test
pop
mov
lret
fildll
movsl
or
mov
test
and
inc
xchg
js
push
les
insl
daa
aad
jle
mov
mov
cmp
adc
int
lret
les
lret
push
and
and
sbb
xorl
sub
mov
rol
outsb
out
sbb
insb
and
pop
fisttps
sub
fcomi
movsl
arpl
mov
jle
mov
and
fisttpll
dec
sbb
sub
push
test
push
xlat
mov
lds
cld
cmpsb
sar
push
ds
push
ret
enter
push
ds
add
movsl
sarl
aas
push
iret
add
adc
cld
push
xor
jmp
or
adc
or
into
sub
lock
test
data16
dec
adc
jo
daa
xchg
stos
sub
sti
or
outsl
xchg
lds
jno
pusha
int
mov
jg
imul
push
or
test
imul
jmp
lock
mov
jl
mov
mov
jle
mov
lcall
pop
stos
push
mov
mov
cld
jb
push
dec
jne
test
pop
and
out
add
cmp
push
sub
sbb
sbb
cltd
cld
ficoml
addr16
sub
mov
data16
lods
add
and
or
mov
ficoml
mov
loop
and
lea
shlb
or
push
jmp
inc
sbb
hlt
int3
sbb
scas
adc
call
fwait
mov
stc
mov
push
lea
sti
mov
pushf
sbb
mov
inc
jmp
aad
mov
adc
out
mov
roll
jp
mov
stc
cmc
int
ljmp
mov
in
shlb
and
mov
imul
mov
xchg
xchg
push
sbb
stos
pop
dec
inc
cmp
lret
test
sub
fprem1
dec
mov
icebp
lcall
pop
orl
adc
adc
sbb
testb
scas
mov
mov
mov
add
aas
clc
cmp
dec
lret
lret
lods
push
cltd
cwtl
cwtl
cmp
arpl
negl
imul
cmp
mov
mov
mov
pop
fidivrs
lret
jae
scas
negb
xor
cmp
lods
addb
mov
xor
stos
repz
add
inc
sbb
imul
cmp
mov
icebp
es
add
cmp
enter
scas
outsb
jmp
shlb
int
or
mov
sbb
xchg
cmc
and
test
jb
insb
adc
xchg
loope
cs
mov
loop
loopne
loop
xchg
push
inc
xor
in
push
jp
lret
ficoms
add
push
pop
sbb
mov
lock
jne
or
jae
add
mulb
mov
jle
adc
push
jae
sbb
bound
outsb
insl
jne
add
jae
stc
adc
mov
outsl
lds
clc
aas
push
xlat
mov
or
add
cmpl
adc
in
xchg
mov
stos
and
into
test
mov
cwtl
mov
cmp
pop
aam
int3
fxtract
stos
ret
cmpsb
outsb
xlat
mov
insb
adc
add
dec
lcall
popa
and
push
mov
inc
sbb
out
nop
jo
jno
xchg
xchg
repz
pushl
fwait
jne
repz
cld
bound
push
sbb
das
mov
pop
addr16
sar
repnz
jo
or
int3
in
pop
popa
outsl
mov
mov
xlat
jnp
xor
pop
out
cmp
out
nop
lods
aam
das
xchg
pop
cli
insl
lret
mov
push
sub
sub
pushf
fucomi
fidivl
push
popa
jecxz
push
mov
inc
adcb
stos
pop
mov
repz
cmc
out
pushf
mov
loope
icebp
and
push
std
mov
cmpsb
mov
cmc
in
add
repnz
push
daa
sbb
and
loop
fs
cmp
stos
jbe
dec
jl
push
pop
imul
mov
scas
lahf
or
lods
adc
imull
sub
cmp
sbb
gs
loope
jmp
lods
mov
jecxz
fcmovnb
test
fnstsw
aaa
mov
adc
adc
pop
xchg
ds
jns
aam
lahf
fcmove
cs
daa
jge
or
js
adc
xor
push
rolb
pusha
sub
jg
and
push
push
sub
pop
cmc
mov
dec
or
ja
push
fisubrs
hlt
and
fisttpll
fldcw
cmc
int3
pop
popf
es
out
mov
lret
cmp
jecxz
sub
into
xchg
xchg
pop
xor
mov
aam
pop
movups
insb
cmp
or
pusha
mov
xchg
daa
and
outsl
xchg
test
lea
jnp
inc
pop
pusha
inc
sarl
and
bound
cmpl
int
inc
mov
xchg
popa
clc
xchg
cmp
pop
xchg
inc
fiaddl
lock
or
xchg
mov
addr16
divb
push
sbb
sarl
shlb
fistl
dec
and
movsl
pop
mov
push
je
cmpsb
cmp
sbb
arpl
addr16
push
and
loope
sti
daa
data16
in
mov
lods
stc
mov
ljmp
filds
std
shrb
pop
dec
negb
sti
jmp
pop
push
cltd
cmpsl
data16
call
subl
bnd
dec
mov
adc
icebp
adc
sub
adc
fildll
push
loopne
cmpsl
insb
mov
mov
xchg
fwait
pandn
movsl
and
stos
inc
insl
mov
sbb
data16
jnp
shl
in
pop
mov
arpl
cltd
dec
add
mov
in
cmp
enter
out
and
sub
shrb
ds
in
and
push
test
sub
shlb
push
and
push
das
loopne
repz
push
cmpsb
or
sub
stos
pop
mov
push
insb
or
xor
adc
or
jp
rcrl
push
lods
test
add
iret
or
mov
sbb
in
add
and
pop
or
add
loop
adc
sti
mov
fsubs
xor
mov
and
or
into
sub
inc
xor
pop
shlb
sub
or
popf
enter
mov
imul
jmp
test
jmp
fstps
dec
lahf
outsb
or
scas
xchg
fidivrl
fs
pusha
out
adc
sbb
imul
pop
push
loope
xor
ret
push
xchg
loope
shlb
movb
rclb
add
movsl
stos
mov
or
mov
psubb
push
int3
cwtl
jle
xor
loope
inc
xor
js
add
jmp
icebp
ficoml
inc
fs
ja
cmp
sbb
stos
std
pop
lahf
push
or
cmp
std
mov
cmp
push
outsb
dec
js
call
nop
xchg
popa
add
aad
sahf
repnz
mov
jno
std
ret
dec
inc
clc
jb
sub
arpl
mov
sub
pop
out
push
out
and
loopne
cwtl
jecxz
add
mov
xor
ret
fldenv
lds
fsts
outsb
lcall
cmp
cli
insb
or
iret
stc
mov
fcompl
andb
std
cltd
int3
aad
in
mov
dec
sahf
test
jmp
inc
dec
push
stc
fnstcw
or
in
outsb
push
mov
jnp
cli
pop
nop
scas
jno
repnz
mov
frstpm(287
mov
in
push
jmp
insb
or
negl
cmp
fld
or
jns
in
and
and
lahf
push
hlt
in
loope
int3
data16
dec
orl
mov
cmp
cmpl
mov
mov
sbb
dec
popf
jns
in
je
sub
adc
jns
push
adc
xchg
enter
loop
bound
add
leave
and
imul
cwtl
shlb
dec
mov
loopne
ret
stos
inc
rorl
call
push
je
pop
sub
push
ret
adc
imul
pop
stos
inc
xchg
sarl
out
fimull
imul
aas
jl
ret
mov
and
inc
loope
inc
or
pop
inc
or
das
sbbb
mov
push
pop
rorl
inc
mov
jb
dec
test
ss
adc
mov
inc
xacquire
ret
push
loop
loope
xchg
pop
jb
insl
fistpl
sub
jns
pop
and
add
xor
xchg
jb
leave
test
sar
push
aas
test
insb
outsb
repz
push
pop
jbe
scas
mov
adc
push
cli
mov
sbb
hlt
jg
into
lods
mov
mov
sbb
add
mov
ss
and
xchg
jmp
fsubl
popf
jmp
jno
lock
add
sbb
push
mov
hlt
push
mov
test
mov
int3
push
lea
fimuls
pop
inc
leave
jo
jo
adc
loope
fistpll
mov
jl
scas
pop
lock
mov
fldcw
or
jl
ds
repnz
jge
lds
lock
pop
imul
fisubrs
or
jl
shlb
rorb
js
in
cmpsl
or
jne
test
sahf
jne
push
flds
addr16
cld
popf
movsl
out
and
bound
mov
sbb
sbb
xchg
mov
aas
xchg
mov
push
or
mov
arpl
and
cmp
lcall
gs
repnz
jp
sahf
call
cmp
add
mov
pusha
psubsb
xlat
dec
push
cmc
leave
pusha
rcrb
fidivrs
sub
outsb
inc
ja
xchg
outsb
dec
or
lds
sub
adc
mov
inc
cli
jmp
or
xchg
inc
shlb
mov
sub
adc
or
jl
cmp
sbb
pop
icebp
lea
pop
sub
cmp
xchg
jmp
dec
insl
or
lcall
movsb
mov
in
fadd
cs
in
sbb
aam
sbb
push
push
mov
jmp
int
pushf
movsl
xorl
addb
inc
shlb
mov
jns
mov
sub
call
loop
shll
dec
xor
bound
and
xchg
retw
jns
ret
sbb
movsb
aad
dec
mov
fimull
aaa
lret
jno
pop
sbb
mov
or
das
loopne
and
test
mov
lea
jp
cwtl
lock
pop
rolb
adc
pop
lods
adc
enter
dec
repnz
mov
mov
push
icebp
insl
nop
lcall
pop
push
push
xor
mov
int3
int3
mov
cmp
add
push
mov
and
xor
mov
icebp
mov
fwait
les
jmp
and
pushf
add
dec
in
push
fldcw
mov
sub
mov
push
ret
ja
sbb
push
dec
inc
dec
aam
or
cwtl
lsl
insb
cmp
push
inc
dec
push
and
ss
stmxcsr
test
mov
dec
push
adc
pop
xchg
in
fcompl
mov
or
in
mov
inc
gs
mov
cmc
into
dec
xchg
push
ret
call
jnp
add
rclb
imul
jl
call
inc
fsubs
mov
jns
add
mov
push
and
sub
ja
jae
push
es
pmulhw
and
data16
outsl
inc
sbb
mov
lahf
adc
mov
clc
sub
sub
add
add
das
xchg
adc
jnp
fstpl
movsb
dec
pusha
sti
or
fs
out
cld
mov
and
lea
dec
test
jbe
aam
sti
jl
cmp
je,pt
add
je
jl
inc
bound
mov
in
dec
pop
shlb
mov
pusha
mov
adc
pop
mov
inc
push
repnz
fnstsw
jmp
xlat
sub
and
std
xor
rcr
sub
cmp
and
ljmp
into
sub
lods
bnd
push
mov
cli
mov
fnstsw
xorl
xorb
lret
adc
xor
mov
lret
push
sti
push
and
xchg
jmp
push
shll
loope
jg
push
dec
loope
and
test
ficomps
add
xor
fucom
outsb
fwait
sbb
into
mov
jne
fstpl
jno
fnsave
or
sbb
or
insb
lret
jge
jne
loope
scas
jle
push
jae
sbb
dec
icebp
pop
lea
out
ret
pop
ss
add
fstpt
lods
xchg
jae
mov
xor
mov
xor
pop
ja
shl
repz
jmp
insb
mov
xor
andl
jl
cld
in
push
inc
or
inc
add
cli
lret
push
sub
mov
pushl
or
xchg
ljmp
dec
mov
ja
mov
xchg
jno
jae
and
data16
pop
adc
aaa
cmp
push
test
cs
mov
hlt
lds
xor
push
xor
fs
push
cmp
or
lods
jnp
stos
push
pushf
repnz
push
xor
aaa
icebp
imul
xchg
cmp
mov
pop
jbe
ret
push
out
jecxz
add
or
stos
mov
inc
cmpsb
cmp
aas
or
dec
adc
sub
leave
mov
mov
arpl
les
dec
les
divl
scas
call
cltd
clc
test
aad
push
arpl
mov
stc
mov
or
loop
xor
dec
mov
nop
out
out
mov
sbb
outsl
arpl
cmpsl
ljmp
testl
cwtl
mov
pop
scas
cmp
int
sarb
ja
loopne
jecxz
push
lods
cmp
fwait
ljmp
dec
icebp
dec
add
out
and
in
sbbl
mov
and
mov
fiaddl
loop
mov
in
stos
loopne
dec
push
shll
push
rcpps
cmp
sub
mov
ret
ja
sub
lods
fdivrl
xor
stos
test
mov
nop
xor
test
fstpl
es
mov
cmpsl
cmp
sbb
aad
repz
mov
in
scas
shr
sbb
mov
or
add
adc
ja
loop
dec
enter
into
lret
leave
jns
sub
fimuls
add
and
and
cmp
fs
scas
or
lods
dec
lahf
pushf
adc
orb
mov
ss
ja
je
mov
cli
pop
inc
adc
sbb
cli
out
cmc
sahf
sbb
or
dec
jp
lods
add
add
cmp
cmp
cwtl
adc
icebp
ja
loop
scas
cmc
leave
out
cld
pop
pushf
adc
faddl
pop
xor
adc
int3
push
mov
int3
pop
pop
mov
xchg
push
mov
jmp
icebp
jo
inc
pop
mov
and
movsb
out
sbb
mov
xor
mov
pop
inc
push
push
jb
loop
mov
cmpsl
roll
hlt
mov
mov
ror
adc
add
pop
push
scas
hlt
dec
jb
push
outsb
loope
mov
std
cld
ljmp
gs
mov
push
aas
xchg
insb
xchg
mov
push
jne
out
outsl
push
cmpsl
pop
cmpsb
sbbl
xor
push
cmp
scas
jp
xchg
test
clc
idiv
mov
or
mov
mov
mov
sub
icebp
sahf
out
or
popf
mov
mov
and
mov
std
dec
xor
pop
and
cmp
mov
sahf
sbb
stos
movsb
out
mov
jmp
jp
push
adc
enter
dec
xor
adc
sahf
fsts
mull
push
mov
cmp
push
and
cmc
cltd
fcmovb
mov
or
mov
inc
push
push
int
enter
jmp
sub
cltd
push
xor
mov
xor
pop
cli
ret
lods
cmp
scas
adc
je
imul
push
subl
andl
dec
mov
mov
pop
popf
xlat
in
cmp
shrb
cmovns
xlat
test
stc
mov
int
bound
dec
jns
mov
pop
and
mov
jns
nop
mov
fbstp
xchg
js
fcomps
cwtl
and
add
fs
aad
gs
cmp
and
pop
xchg
mov
xchg
movsl
out
inc
shl
pop
imul
stc
sub
jno
lahf
out
sub
xchg
xor
jnp
mov
sahf
mov
sbb
jb
cmp
mov
int3
cmpsl
lcall
sbb
jmp
iret
fdivp
out
cmp
xchg
aaa
sub
daa
aaa
test
cmp
or
mov
sti
mov
jge
lods
pusha
adc
pop
pop
insl
cmp
xchg
pop
imul
imul
fadds
addl
mov
stos
mov
mov
idivl
daa
or
cmc
mov
sarl
xor
push
mov
stos
dec
jno
mov
fdivl
outsb
fcompl
sbb
sub
loope
xor
lcall
dec
sbb
jbe
rcl
pushf
adc
jbe
sarb
xchg
insl
andb
or
push
and
fdivr
and
clc
add
scas
std
adc
pop
or
jb
sub
pop
inc
mov
xorl
xor
rorb
inc
gs
bnd
inc
ds
cwtl
push
mov
loop
xchg
fcomps
and
or
adc
fdivrs
mov
mov
dec
leave
mov
das
test
subb
insl
test
xchg
push
out
ds
vcvtss2si
lods
push
ds
add
and
ja
push
and
in
rcrb
mov
sbb
dec
xchg
cltd
xor
aad
sar
dec
xlat
adc
jo
int
popf
call
testb
push
xchg
lret
incl
mov
push
sbb
ret
pop
pop
adc
loop
sbb
xchg
or
and
imull
fstps
clc
ficompl
mov
or
sbb
mov
stc
or
sbb
in
xor
pop
sahf
shl
xor
jno
cld
mov
test
loop
hlt
lcall
mov
mov
cmp
cmp
in
adc
adc
test
jp
leave
mov
sahf
jle
push
jnp
fldcw
xor
inc
add
data16
dec
and
push
pop
repz
cld
fisubrs
jmp
iret
sbb
mov
dec
test
hlt
pop
iret
dec
add
jle
mov
lods
sbb
xchg
inc
mov
lea
cmp
scas
jge
add
adc
or
cmp
push
adc
in
loopne
pusha
shlb
push
in
rcr
aad
sbb
push
out
cmp
outsl
scas
inc
push
xor
or
cmp
test
lcall
mov
je
jbe
inc
mov
nop
push
repz
sub
les
movsb
fs
sbb
cmp
inc
out
rorl
hlt
cwtl
loop
cld
out
push
and
rol
mov
insl
jns
in
daa
lods
adc
test
xor
iret
xor
or
orl
sbb
jecxz
fnstcw
dec
or
leave
sub
icebp
push
adc
sbb
fwait
jge
cwtl
and
enter
enter
and
sub
movsl
xlat
or
ret
pop
lock
push
mov
adc
or
mov
dec
pop
enter
push
clc
sub
test
xchg
jae
into
push
push
aam
lcall
imul
cmc
jge
jno
jne
fldenv
xchg
and
je
jmp
pusha
inc
and
scas
in
cwtl
adc
jl
and
repnz
insl
jp
mov
push
add
ficomps
outsb
insl
lea
mov
xchg
inc
sub
or
sub
shr
call
lcall
dec
mov
rcrl
or
inc
pusha
ret
ret
dec
fwait
push
mov
jmp
fstpt
jmp
fldenv
mov
movsb
and
outsl
dec
rcl
dec
pop
sbbl
lds
add
loop
rcll
je
push
rclb
jecxz
imul
pop
in
ljmp
pop
lcall
pop
mov
lcall
jae
push
or
add
int
imul
adc
add
fsub
mov
xor
out
outsb
sbb
in
add
test
add
xor
and
mov
and
jb
outsl
and
pop
xor
or
xchg
inc
cmp
mov
insb
add
out
fsubr
mov
or
stos
icebp
lahf
push
xor
inc
lcall
into
pushl
jg
andb
pop
test
add
sub
out
push
push
sub
sub
outsl
xchg
in
push
shlb
repnz
xchg
mov
ret
mov
lcall
in
inc
inc
jae
dec
add
add
or
in
stc
mov
lods
daa
mov
movl
jb
jle
add
scas
xor
jmp
fisttps
sub
subl
in
not
jns
add
idivl
int3
add
adc
jp
enter
inc
dec
sub
scas
aam
in
lods
pop
inc
lahf
call
ljmp
pop
xchg
cmp
mov
loop
jmp
push
pop
in
es
fmull
push
outsl
mov
test
mov
pop
std
mov
add
lret
popf
mov
lret
testl
cmc
movsl
arpl
mov
bound
push
mov
jnp
into
mov
ret
xchg
loopne
sti
push
mov
test
xorl
in
scas
and
bound
sbb
sub
loopne
and
leave
push
sub
aas
test
add
mov
mov
pop
loopne
and
sti
ss
add
push
test
push
xor
in
sti
sub
jo
popa
das
and
ficoml
enter
icebp
shlb
into
imul
pop
xchg
cwtl
sbb
add
xchg
inc
sarb
rclb
cli
rclb
mov
lea
xlat
mov
les
push
popa
push
adc
inc
lods
in
push
iret
scas
test
out
pop
mov
mov
cltd
push
loopne
mov
aaa
add
lahf
mov
and
cmpsb
mov
sarb
jg
aad
je
and
pop
roll
out
stos
js
cmp
mov
mov
in
popa
add
stos
cmp
dec
negl
pop
cmpsl
gs
mov
aaa
test
clc
aam
mov
xchg
xor
mov
lret
sub
sbbl
and
in
out
push
push
mov
ret
lahf
pop
push
loop
adc
xlat
hlt
clc
ljmp
xchg
xor
jb
mov
aas
inc
xor
push
push
inc
mov
add
jbe
out
repz
dec
in
adc
xor
jmp
loope
pusha
mov
pop
add
push
and
sub
enter
push
xchg
cmp
mov
add
inc
cwtl
ret
jne
xor
mov
push
ficomps
lcall
pop
sub
les
sbb
push
lods
dec
cmpsl
scas
inc
and
ds
iret
add
xor
cmp
push
test
sub
cwtl
ret
test
jle
jae
cmp
ffreep
jns
xchg
add
cwtl
jmp
dec
xchg
push
pop
mov
jecxz
popa
sub
adc
cld
cmp
jne
ds
adc
push
dec
pop
out
jne
inc
enter
ret
cs
stc
xor
adc
push
enter
int
imul
sbb
adc
cmpsl
or
jbe
imul
ja
out
jbe
test
stos
cmp
add
jb
lret
sarb
ljmp
mov
int3
lea
nop
sahf
lret
mov
cmp
and
test
push
outsl
or
hlt
inc
push
fwait
push
cmp
push
sub
cmc
jp
and
jg
add
cli
pop
shll
aaa
outsl
mov
dec
push
mov
mul
mov
jns
adc
jne
in
popa
call
mov
shrl
dec
inc
pop
pushf
scas
jle
xor
fs
inc
and
aaa
test
sbb
mov
xlat
icebp
mov
jbe
add
test
stc
fmull
lods
xchg
shld
and
jl
daa
aaa
push
iret
mov
in
aaa
lret
jno
or
jl
hlt
add
movsb
jmp
repnz
push
xchg
add
aaa
cmp
int
xchg
fistpll
xchg
les
push
add
aad
movsb
das
dec
mov
inc
or
call
xchg
insb
and
sbb
push
clc
test
pushf
jo
ds
xchg
aam
leave
outsb
test
int
shl
dec
stos
lds
in
fdivrs
int3
inc
cli
adc
sahf
dec
movsl
sbb
jnp
mov
cmpsl
cwtl
fidivrs
jnp
jb
mov
mov
xchg
inc
ror
addl
cmp
jb
arpl
mov
lock
cmp
test
iret
push
rolb
push
std
roll
inc
xor
xchg
pop
movsb
adc
mov
xchg
inc
xchg
push
adc
sbb
sub
popa
pop
dec
mov
and
jmp
jb
pop
in
push
mov
jbe
mov
lret
dec
sbb
cwtl
jge
mov
sbb
pop
shrl
ja
push
jb
pop
jne
or
sbb
cmp
rclb
dec
imul
adc
cltd
stos
repnz
sub
dec
pop
loopne
push
inc
dec
jmp
aas
rorl
sbb
mov
insb
jg
dec
mov
sub
dec
adc
ret
push
mov
int
add
cmpsb
daa
aad
xchg
xor
dec
xchg
pop
xlat
xor
sarl
mov
dec
jp
xor
subb
sahf
mulb
xchg
iret
mov
sub
dec
add
cwtl
add
scas
add
clc
dec
jae
jb
xchg
jns
pusha
inc
sti
adc
cmp
pop
shlb
lahf
in
sbb
popf
sub
clc
inc
and
pop
sbb
and
inc
stos
sbb
clc
movzwl
xor
and
test
adc
jle
jge
adc
inc
lods
out
inc
test
jb
or
xchg
cmp
sbb
outsl
xchg
inc
mov
jae
dec
pop
xchg
xor
add
loopne
inc
cmpsl
ss
pop
push
cli
jo
mov
dec
outsb
cs
imulb
les
add
scas
pusha
jae
cld
cmp
cmp
sbb
daa
inc
mov
mov
and
xor
xor
dec
call
in
test
xor
pop
dec
test
sub
je
aam
cmp
stc
loopne
int
push
sbb
mov
push
lea
pop
psraw
xchg
xor
jo
jo
imull
pop
xchg
jmp
adc
and
jg
lea
xchg
scas
call
in
gs
dec
inc
fwait
decb
cmp
adc
push
sub
jg
js
cmp
xor
cwtl
nop
arpl
and
cmp
cmpsb
sub
pop
out
dec
cmp
cmp
sub
lock
push
push
daa
mov
pop
out
dec
sub
add
pop
rorb
pusha
mov
dec
adc
jp
push
ret
cmc
test
mov
ja
and
jnp
pop
mov
cwtl
xchg
pop
xchg
jb
loopne
mov
ljmp
leave
hlt
cmp
pushf
int3
rorb
mov
loop
scas
jge
inc
push
mov
out
imul
arpl
pop
imul
dec
lds
jmp
leave
sarl
into
xlat
sbb
dec
mov
cmpl
mov
orl
jle
push
push
or
in
enter
inc
cmc
testl
jns
xchg
and
mov
in
hlt
movsl
les
xor
inc
jl
mov
test
mov
les
cmpsb
lds
mov
push
push
dec
or
sub
jae
loop
xor
dec
pop
imul
bound
xchg
sbb
shll
adc
jne
pop
pusha
sbb
fistps
xor
scas
dec
cmp
outsl
xchg
inc
jae
jne
mov
and
jg
test
inc
and
scas
push
pop
xchg
int
scas
int
scas
std
bound
xchg
mov
enter
aaa
or
jmp
les
adc
mov
call
xor
or
add
or
xchg
pop
inc
inc
pop
sub
mov
push
jo
pop
clc
ffree
imul
jp
sub
fistpl
enter
lcall
sub
push
cli
mov
jecxz
gs
jnp
clc
jge
push
dec
mulb
shrl
or
cmp
aam
and
cmp
pop
pushf
mov
jae
cmpsl
les
xchg
in
fs
cmp
xchg
or
mov
dec
mov
mov
fidivrs
mov
mov
dec
add
outsl
xchg
sub
mov
inc
mov
loop
push
inc
xchg
fcompl
adc
loopne
movsb
js
mov
inc
cmp
sbb
mov
mov
daa
in
pop
push
loop
xor
lock
or
dec
cpuid
fimuls
sbbl
mov
addr16
fimuls
xchg
mov
xchg
push
pop
cltd
cmp
push
sbb
insb
cmp
jp
hlt
jl
xor
inc
add
call
ja
sub
xor
pop
adc
or
js
xor
sarb
lods
jb
popa
mov
pop
push
mov
jo
cmpsb
push
jno
enter
std
sub
or
enter
scas
adc
out
loopne
shrl
dec
mov
mov
mov
bound
jle
sahf
outsl
shrl
dec
inc
imul
addr16
flds
adc
es
cmp
loope
dec
mov
push
out
icebp
out
stos
sbb
mov
not
outsb
lods
or
test
cmp
mov
cwtl
inc
cmc
daa
jo
and
sub
aam
mov
out
call
jge
mov
xor
jnp
imul
call
dec
inc
push
and
lock
xor
lea
pop
jmp
leave
and
jb
cmp
xlat
xchg
dec
xchg
cwtl
or
loop
fcmove
mov
cltd
xor
push
sub
or
shl
adc
xchg
push
sbb
les
mov
jp
mov
mov
adc
xor
iret
stos
sbb
shlb
adc
popa
or
xor
or
add
jecxz
and
out
int
addr16
xor
push
push
push
mov
test
mov
inc
or
roll
adc
cli
popa
jb
jl
pop
jnp
hlt
sub
in
mov
std
cmc
cltd
subl
mov
jecxz
xor
mov
sub
pop
jbe
loop
movsb
mov
es
hlt
in
mov
int
mov
daa
sbb
dec
gs
ja
in
rcl
mov
xchg
lea
xor
mov
daa
adc
adc
aad
scas
and
out
push
int
cmc
jb
mov
mov
js
sub
jl
fimull
mov
sarb
xchg
outsb
sbb
mov
mov
dec
sub
xchg
in
aaa
dec
jno
mov
shlb
outsl
data16
popf
lea
nop
call
jg
cmp
xchg
push
push
and
test
rcrl
fwait
and
push
int3
call
push
int3
jp
stc
mov
pushf
aad
shll
xchg
mov
mov
xchg
js
adc
xchg
cmp
pop
jecxz
mov
jno
dec
test
loop
mov
ficoml
mov
stos
push
jbe
scas
pop
dec
jno
test
shrb
pop
aaa
fbstp
repnz
cmp
sbb
or
pop
aad
push
fidivl
insl
movsl
mov
sub
test
lcall
inc
xor
cmp
adc
rolb
pop
aaa
adc
jg
gs
popl
mov
mov
ja
or
in
adc
test
jmp
je
mov
lret
inc
dec
sub
jo
dec
adc
mov
mov
cmp
mov
scas
in
lock
arpl
jecxz
dec
xchg
movsb
push
xchg
outsb
into
test
test
sub
ds
iret
push
test
pop
out
je
ljmp
sbb
ss
pusha
loopne
push
sbb
and
sub
or
inc
xor
sub
outsl
incb
jle
dec
repnz
push
mov
rol
dec
jo
jg
xchg
dec
rclb
ja
xchg
cltd
add
xchg
add
and
cld
sbb
and
pop
xlat
xor
fistps
jnp
enter
fists
mov
invlpg
sbb
leave
leave
xchg
pop
sub
add
pop
cltd
addr16
mov
arpl
adc
icebp
mov
add
mov
add
rcll
lds
and
fstpt
inc
jl
jg
jbe
jp
or
movsl
shrb
and
ja
xchg
test
mov
and
and
and
adc
sbb
xchg
stc
xchg
lock
cltd
cmp
dec
fnstcw
in
pop
mov
xlat
addl
pop
lahf
jns
adc
sbb
jae
sub
rorb
cli
insb
push
adcl
mov
adc
cmp
adc
fiadds
loop
aam
xor
int3
sub
enter
lret
ja
insb
aad
jmp
shl
and
cmp
dec
xchg
stos
scas
fldl
rcrb
fucom
push
sbb
push
xchg
jbe
and
and
scas
adc
push
cmc
ret
add
xlat
jecxz
lods
pop
cmp
movsl
jle
addr16
fnsave
jg
jl
mov
adc
rorb
rcrl
sti
aas
mov
xchg
or
add
dec
mov
sbbb
jnp
pop
pop
clc
mov
mov
and
pusha
xchg
mov
mov
mov
mov
mov
jbe
jge
lret
aad
mov
jne
mov
jns
out
jl
rclw
sub
sbbl
lret
pop
add
push
xor
push
sbb
test
mov
mov
call
and
adc
dec
mov
inc
cs
imul
cmp
mov
test
mov
mov
xor
in
pop
adcb
test
sub
rclb
jp
popa
dec
rcrl
pop
inc
mov
lock
fnstcw
adc
jmp
push
adc
lock
pop
into
dec
push
imul
sbb
mov
fmuls
out
div
cli
scas
inc
in
mov
sub
lahf
inc
mov
mov
inc
sbb
out
mov
dec
scas
out
xchg
push
fptan
mov
pop
je
out
or
outsb
rcl
int3
inc
popl
aad
push
or
mov
xchg
mov
xchg
seto
sbb
hlt
or
leave
clc
in
ss
in
andb
xchg
jne
sarb
into
cmpl
fwait
mov
push
pop
mov
imul
push
sub
xlat
aas
push
jle
sbb
in
std
mov
into
lods
jecxz
cmpl
jecxz
stos
mov
ret
je
mov
les
sti
out
sub
inc
jmp
adc
repz
inc
lret
push
leave
loopne
xchg
addr16
pop
in
xor
xchg
daa
mov
adc
lret
lods
stos
mov
push
jge
loop
xor
cmp
test
or
outsw
mov
xor
xor
cmpsl
popa
scas
cli
negl
dec
xor
xchg
loope
xchg
ss
fldenv
and
mov
std
pop
pushf
inc
or
ja
fsubl
adc
popa
adc
mov
jnp
lock
mov
loope
xchg
loope
jmp
sbb
mov
scas
test
mov
jg
mov
fnstenv
in
xchg
mov
fs
fsubrs
call
cmp
cmp
jmp
push
test
movl
insl
inc
push
lret
in
ljmp
mov
jecxz
sbb
in
pop
out
jns
push
cmpb
mov
out
daa
and
outsb
inc
in
mov
sub
xchg
divl
sub
shlb
push
dec
pop
fistl
out
popa
ja
and
pop
int
je
out
fistpl
inc
dec
icebp
dec
jbe
add
sub
pop
sbb
mov
sbb
add
sub
jle
cmpsb
xor
or
cmc
pop
sbb
pop
xchg
mov
mov
pop
stos
pop
jne
sbb
push
mov
push
outsb
sbb
jno
lds
int3
pop
pushf
aas
sub
call
pop
fdivl
mov
xchg
sub
mov
dec
gs
dec
repz
adc
cmc
jl
pop
push
dec
loope
cli
jmp
sbb
dec
ret
shll
int3
out
fcoms
clc
rcll
outsl
paddd
xor
jbe
mov
lret
pop
ljmp
imul
ret
pop
push
mov
mov
sbb
pop
popa
leave
add
ljmp
add
stos
and
mov
sub
jb
mov
add
fs
xchg
jnp
add
push
push
sbb
lahf
lea
mov
hlt
and
fs
push
dec
fistpll
inc
push
movsb
sub
sbb
fnstsw
ja
cmp
adc
cmp
jp
test
sarl
rorb
push
jns
mov
mov
and
mov
pop
test
jb
jae
out
sub
mov
xor
cwtl
stos
mov
mov
in
sub
fdivs
push
cmp
dec
aaa
lods
fdivrl
orl
push
movb
adc
mov
popa
les
add
aas
popf
repz
fs
out
push
mov
movsl
dec
mov
xchg
shlb
dec
jnp
out
mov
pop
xchg
aaa
lds
xchg
sbbb
idivb
push
in
dec
jnp
in
aad
lea
mov
int
fbld
fisttpl
mov
sub
xchg
adc
dec
dec
or
enter
in
ja
scas
ss
popf
out
mov
std
inc
push
mov
mov
icebp
mov
pop
fidivrl
push
mov
sbb
or
popa
popf
lret
rorl
pop
scas
add
outsl
or
js
imul
cltd
cmp
shrl
inc
les
lret
stos
dec
cli
lcall
mov
call
enter
mov
lret
jbe
sti
add
out
inc
xchg
mov
xor
mov
cmp
or
sbb
jecxz
jl
cmpsb
add
push
mov
jns
jge
andb
pop
pop
fs
nop
aad
fimuls
pop
add
pop
fcoml
xchg
shrb
fisttpl
jb
push
sub
aas
addr16
into
inc
inc
mov
stos
inc
xchg
clc
int
push
js
cli
xor
testl
add
scas
mov
fisttpl
clc
dec
fs
sbbl
ret
xor
into
leave
ss
dec
out
xchg
leave
call
pop
xor
shrb
cmp
mov
nop
mov
lret
sub
mov
adc
stos
fsubs
xchg
insl
in
aad
ret
lods
xchg
pop
pop
fldt
add
aam
cmpsb
jecxz
in
and
xor
jns
daa
in
jl
xor
lods
inc
and
daa
add
push
adc
dec
mov
mov
pop
jne
jae
bound
iret
sbb
andb
jle
ljmp
mov
xchg
inc
mov
pushf
ret
or
xchg
cmp
pop
sbb
sahf
mov
or
mov
adc
cltd
mov
mov
lea
lods
out
shll
cmp
cmpsl
aad
nop
cmp
jl
ds
sti
and
call
xchg
mov
mov
subl
adc
incb
or
shl
jb
jl
cwtl
fwait
jl
outsb
push
or
in
or
adc
mov
shll
push
mov
mov
cld
xor
jl
sbbb
loope
mov
das
stos
lods
mov
stos
aam
push
insb
push
jae
jge
scas
dec
cmc
or
or
leave
dec
shlb
popf
mov
push
add
sub
std
mov
test
xchg
js
aam
ret
test
ficompl
in
jbe
cmp
cmp
scas
cmp
aas
sti
and
stos
adc
insb
or
add
dec
lock
aam
out
pushl
add
into
in
pop
mov
and
test
add
in
imul
imul
icebp
aam
xchg
push
add
out
icebp
out
xchg
dec
mov
sub
ds
iret
jb
hlt
and
arpl
add
or
aad
mov
stos
mov
or
mov
jns
push
popf
mov
sahf
bound
jne
loop
cld
ror
test
in
in
out
idivb
pop
add
out
mov
arpl
repz
jo
cld
sbb
xor
mov
scas
xlat
sbb
push
nop
push
push
incl
in
cmp
pop
mov
xchg
inc
leave
sahf
xchg
sub
pop
pop
mov
inc
mov
and
lahf
push
jl
push
aas
pop
aaa
cmc
mov
cltd
push
or
adc
xchg
rcl
out
cmc
stc
je
xor
inc
jge
sub
add
lods
pop
jecxz
dec
je
pop
mov
and
mov
dec
iret
mov
int
sbb
call
pop
cmp
ret
insl
imul
xchg
mov
and
dec
scas
int3
fcos
xor
dec
daa
lahf
mov
cmpl
sbb
stc
add
adc
sub
ljmp
cmp
bound
adc
jbe
fisubs
and
sbb
fistps
rcll
and
out
pop
ficompl
popa
pop
adc
mov
push
mov
or
popw
lock
inc
gs
out
ds
cmp
fsubl
outsb
repz
filds
adc
jnp
mov
pop
mov
scas
daa
idiv
jns
rol
lret
leave
int
dec
jnp
lret
xchg
sub
and
stc
adc
lods
popf
cmp
xchg
dec
mov
scas
jg
cmp
add
sbb
orps
or
mov
pop
arpl
dec
sbb
aas
xchg
insl
mov
or
pop
test
jne
out
adc
fxch
test
cmpsl
cmp
mov
in
clc
jmp
pushf
mov
sub
stos
in
out
and
push
sub
out
stos
mov
push
mov
imul
jnp
lods
mov
outsb
scas
xchg
add
outsl
jl
sub
inc
jge
jp
rcrb
xchg
sbb
xor
sarl
lret
movntps
aas
or
mov
into
jg
inc
sbb
xor
jmp
lret
ficomps
add
cs
cmp
adc
mov
sahf
adc
pusha
cmp
leave
call
dec
jne
sbb
and
jmp
in
test
out
in
mov
insl
xchg
xor
into
dec
add
inc
jno
sbb
imul
pop
mov
inc
fbstp
andb
and
ljmp
pusha
pop
adc
mov
cmc
mov
mov
iret
adc
adc
cmc
xor
insl
das
mov
lods
movsb
decb
outsb
adc
mov
outsl
or
pop
das
pop
divl
jo
xor
jge
mov
out
cmpsb
pop
cmp
xor
adc
mov
adc
loope
aad
iret
pusha
in
cld
les
bound
cmpsl
cmpsl
std
inc
xchg
sub
sub
loope
ja
cmp
adc
adc
movsb
std
movsb
out
xchg
cmpsl
fwait
lock
fidivs
cmpsl
loopne
xchg
imul
flds
pop
addr16
add
add
dec
jb
cmp
cld
jmp
jecxz
xchg
out
cmpsl
shll
push
xchg
push
xchg
mov
add
xor
inc
inc
xor
mov
cmp
cltd
cmp
divl
in
sub
dec
shlb
add
pop
mul
sbb
push
xlat
movsl
aaa
push
adc
test
jns
movsb
je
fdiv
imul
xor
adc
sahf
mov
fcmovnbe
arpl
out
push
stos
fnstenv
xor
je
test
adc
pop
or
fwait
daa
adc
bound
mov
gs
bound
lods
arpl
sbb
popf
xchg
push
movsb
adc
jae
sahf
xchg
out
outsl
xchg
test
mov
or
mov
jo
add
andb
xor
sub
mov
iret
cmpl
jl
sahf
adc
inc
loope
push
notb
xor
fldcw
popa
mov
and
mov
out
sbb
out
fdivl
fldcw
nop
andb
nopl
insw
or
jmp
sbb
add
fnstenv
sub
and
in
lock
out
or
mov
sbb
dec
jl
rorb
out
mov
push
or
movsl
jne
enter
lahf
in
lock
fxch
movsb
lcall
test
inc
popf
pop
aas
add
cmp
cmpsl
cmp
mov
imul
mov
addb
in
or
jg
sub
ffreep
mov
and
out
pop
dec
cmp
push
enter
cmp
popa
xchg
cmp
stc
adc
push
sbb
push
inc
jns
xchg
test
pop
adcl
xor
mov
lret
adc
xchg
sarl
push
push
icebp
push
insl
scas
outsl
pop
inc
dec
cmpsl
lret
in
push
fisttps
mov
lea
mov
inc
je
lcall
xor
pop
push
aad
jne
dec
lods
add
mov
sbb
xchg
ja
in
popf
add
cld
pushl
inc
mov
and
stos
insl
pusha
fwait
jae
xchg
cs
cmp
sub
icebp
sub
push
or
cmp
inc
popa
in
mov
cmp
lcall
out
iret
inc
stos
sbb
mov
pop
sub
insl
insb
sbb
mov
xor
add
loop
sub
outsl
inc
inc
cwtl
je
icebp
test
adcl
mov
sbb
arpl
and
sbb
ja
lcall
adc
add
pushf
sbb
cmp
and
sbb
loope
sub
mov
outsl
andb
in
sub
dec
rolb
pusha
add
jl
adc
xor
jo
lret
xor
lea
out
adc
lods
sbb
cli
std
push
test
push
mov
and
mov
mov
in
adc
push
test
mov
jle
jmp
sub
daa
lcall
adc
xchg
mov
jne
or
mov
cmp
push
push
out
hlt
fldcw
lret
sbb
inc
push
pop
add
ja
cli
pop
popf
call
in
xor
pop
addr16
fsubl
jl
cmpl
dec
push
jge
or
out
movsb
imul
mov
jmp
dec
sbb
mov
out
pop
test
test
sbb
add
and
cmpsl
fcomip
sub
push
cmp
push
cmp
icebp
pop
mov
push
pop
repnz
pop
and
outsl
mov
rcrb
ss
addr16
mov
ja
into
mov
mov
and
jp
aam
rorl
repnz
xchg
test
add
mov
out
shlb
inc
sub
dec
fs
mov
insb
sub
add
aas
mov
decb
fldenv
xchg
xchg
jmp
inc
bound
add
call
xchg
pushf
xor
xchg
imul
stos
xchg
cmp
dec
cli
rorl
xchg
pop
in
sbb
fsubrs
cwtl
ret
jmp
clc
adc
add
aam
out
pop
clc
stos
je
std
pop
push
test
sub
enter
jo
jmp
jns
sbb
xchg
or
xchg
dec
pop
or
ds
outsl
and
xchg
mov
int3
sti
jp
test
inc
stos
inc
pop
cmp
loope
sarb
adc
cli
dec
mov
hlt
les
xor
and
or
mov
es
mov
inc
xor
pop
sar
repnz
stos
xor
sbb
add
jnp
out
inc
add
sbb
popa
pextrw
bound
sbb
cmp
add
in
jg
push
pop
ror
aam
or
pop
fimuls
jnp
pop
iret
icebp
fildll
dec
push
or
inc
jno
mov
mov
fbstp
mov
xor
jnp
mov
dec
orl
adc
mul
cmpsb
push
cwtl
gs
cmp
lahf
ret
mov
lods
adc
inc
rolb
adcb
push
dec
xor
mov
pop
fcomps
fwait
mov
jae
push
call
scas
out
sub
push
sbb
out
inc
inc
jmp
cmp
jbe
add
sti
mov
cmp
push
or
xchg
imul
dec
cltd
outsl
leave
and
pusha
push
mov
dec
scas
imul
in
xchg
jecxz
out
jl
and
adc
test
cmp
sti
test
outsl
xor
icebp
jo
cmpsb
lcall
and
lcall
mov
push
repz
inc
jbe
xor
out
or
into
ds
mov
orb
and
in
mov
lods
pop
dec
mov
mov
or
lcall
jno
shrb
data16
addl
lods
sub
lret
mov
mov
fs
shll
js
sub
pop
mov
mov
mov
pop
mov
push
rorl
sbb
fbld
jae
outsb
xchg
shrb
mov
add
test
gs
stc
add
xchg
sti
lea
add
sarb
adc
scas
mov
arpl
bound
cmpsb
pop
stc
nop
mov
jnp
pop
cmp
stos
or
pop
mov
fnstsw
mov
lcall
dec
adc
mov
push
daa
cmc
adc
stos
mov
aas
into
adc
mov
lea
jmp
sub
clc
mov
dec
sarl
jecxz
pop
push
addr16
in
imul
xchg
sbb
or
mov
sub
ljmp
jo
into
mov
popa
scas
ret
add
and
movsl
call
int
cmpsb
setns
repnz
cmc
mov
fcomp
shr
sub
dec
in
or
out
inc
add
push
sub
popa
or
fwait
in
mov
sub
out
fcomi
pop
pusha
jbe
ljmp
xor
nop
mov
mov
shrl
xchg
or
adc
add
sbb
dec
imul
cmp
push
pop
sub
jno
jbe
sahf
shl
cmp
ret
sub
cmc
je
shll
movb
test
out
xchg
or
out
into
popf
push
es
fstl
mov
hlt
adc
jl
ret
add
sub
fisubrl
cmp
cmc
nop
ja
aam
hlt
jge
xchg
test
and
adcl
adc
into
mov
scas
pushf
aam
iret
cld
dec
sbb
jo
cmpsl
sahf
cmpsb
cmp
outsl
xchg
imul
les
mov
pop
mov
mov
mov
sbb
xchg
or
fistps
sbb
fistpl
xor
sub
fldcw
pop
jmp
imul
xchg
outsb
test
cmp
adc
rclb
aad
out
sub
sbb
pop
std
mov
mov
xor
cmc
hlt
adc
mov
or
add
mov
inc
pop
jnp
adc
pop
bound
aas
push
xor
inc
jno
loope
int
inc
lds
inc
add
xor
ret
xor
cmp
pop
ror
test
loop
sbb
cs
into
call
fmull
jno
sub
cli
orl
jns
stos
jns
cmc
mov
lahf
mov
ljmp
ds
adc
int3
mov
xor
cwtl
jae
ljmp
insb
sbbl
add
mov
or
push
mov
das
jle
cmp
add
sub
cwtl
push
stc
jl
pop
pop
ja
lret
sub
mov
mov
xchg
mov
mov
or
daa
pop
xchg
nop
enter
and
mov
movsl
test
push
test
fimull
idiv
xor
test
cmp
mov
jns
out
icebp
jl
mov
dec
fldcw
popf
cmp
push
ds
leave
push
xchg
add
loope
data16
mov
sub
sub
jp
add
cmp
sbbl
jnp
xchg
xor
dec
out
test
dec
stc
mov
push
adc
jns
and
or
and
push
dec
int
pop
lret
pusha
popl
jmp
jae
cmp
test
and
adcl
fisubl
stos
ss
test
movsl
pop
jmp
xchg
adc
stos
xchg
sub
pop
mov
mov
repz
and
dec
pop
jns
icebp
xor
sub
inc
je
stos
lods
adc
imul
sti
mov
push
push
andb
ss
add
mov
add
sub
add
xlat
popa
pop
mov
out
mov
gs
mov
inc
out
push
push
jg
mov
ss
pop
test
mov
stos
push
dec
pusha
bound
mov
jmp
push
ljmp
mov
cmc
repz
push
sub
enter
mov
sahf
push
fwait
xchg
inc
mov
stc
xlat
testl
xor
sub
cmc
mov
nop
fmulp
test
push
inc
lods
loop
outsb
inc
iret
negl
rorb
movsl
inc
mov
gs
cmc
xchg
push
call
jmp
jne
cmp
jge
cmp
jecxz
and
or
out
dec
xchg
mov
pop
and
mov
stos
fdivr
mov
mov
movsb
in
sbb
stos
sbb
jge
push
and
jb
pop
lahf
mov
dec
push
lock
cmp
add
ljmp
outsl
clc
sub
mov
lds
jno
mov
pop
out
cltd
push
adc
dec
dec
pop
sti
fs
push
sub
or
cmp
xor
rclb
cmpsl
inc
jo
mov
arpl
and
mov
cmp
lret
fldt
or
jmp
mov
out
dec
mov
iret
das
sub
rcrb
push
ja
notb
scas
xchg
outsl
fucompp
dec
sub
dec
mov
inc
or
cmpsl
js
fnsetpm(287
push
cltd
mov
pop
je
stc
pop
sti
mov
sub
out
sbb
sbb
and
es
lahf
test
mulb
pop
mov
sbb
jp
pop
rclb
mov
loop
leave
jp
xor
dec
fiaddl
sbb
sub
pusha
mov
push
jb
orb
push
pop
push
fcomps
popf
adcl
aas
push
or
and
mov
decb
jmp
jmp
fsubrs
ja
cmp
and
out
andb
push
stos
rcrb
jbe
jl
and
jbe
rclb
insb
lods
xor
ja
out
ret
mov
popl
aam
mov
sub
push
xchg
sbb
xchg
jmp
dec
xor
ds
sbb
in
mov
inc
je
dec
lret
adc
xchg
repz
repnz
out
push
push
js
fbstp
jge
imul
inc
push
xchg
push
mov
adc
jl
push
lahf
call
mov
xchg
addl
jmp
pop
fcompl
xor
mov
cmp
lcall
dec
push
pop
jecxz
ljmp
iret
mov
cmpsb
cmpb
sbb
mov
mov
addr16
aas
orb
lods
mov
xor
cld
lret
imul
mov
popa
in
inc
cltd
repz
sbb
sub
stc
mov
fistpll
lcall
dec
xchg
mov
cmp
pop
into
pop
xchg
lcall
inc
mov
pop
mov
push
js
pop
mov
mov
ret
iret
add
xor
stos
stos
cmpsl
stos
xor
scas
xchg
cmp
jae
push
jl
in
or
lods
hlt
xchg
imull
sub
mov
adc
pop
push
ja
ret
xchg
mov
out
aas
cmp
dec
push
rcll
mov
test
shll
pop
pop
lods
ds
sbb
and
xor
sbb
jne
imul
adc
mov
push
add
movsb
test
mov
xor
adc
sub
pop
xor
mov
push
jb
push
cmp
cmpsl
rcl
shr
insl
inc
dec
lock
andb
movsb
scas
cmpsl
jg
mov
loope
cmp
mov
add
shrb
jl
lods
mov
add
ljmp
aad
insl
mov
add
int
ja
into
icebp
fisubl
out
and
int
push
dec
add
mov
push
lcall
mov
ret
iret
pop
jne
and
pop
push
call
xor
mov
adc
add
add
cs
lds
jl
mov
mov
mov
ret
pop
loope
lea
ret
xchg
xchg
leave
sbb
or
mov
std
aad
cmpsl
sbb
lcall
inc
push
mov
sahf
daa
and
pushf
xor
shlb
fisttpll
lods
fstpt
dec
pushfw
test
adc
xchg
daa
out
loopne
sub
rorl
sarl
fadd
inc
cmpsb
andb
fsubrl
addr16
call
shrb
pop
and
arpl
jno
call
sub
mov
dec
jmp
push
inc
inc
pop
xor
gs
mov
pop
lret
pop
test
or
je
incl
fcompl
inc
push
and
dec
mov
pop
out
dec
inc
jle
xchg
mov
xor
mov
jmp
test
inc
mov
mov
jae
mov
mov
addr16
lcall
inc
add
cltd
xor
ret
jo
cmp
jo
jnp
jbe
mov
mov
hlt
add
cmp
into
pop
lods
sub
jbe
inc
fwait
dec
inc
xchg
xor
neg
mov
das
and
mov
jns
in
divl
add
mov
sti
mov
jo
cmpsb
add
shl
lret
repnz
clc
and
jo
ret
cld
sbb
or
cli
popfw
jbe
rolb
sarl
daa
data16
fnsave
daa
test
inc
fadd
ret
lock
pop
push
xor
push
push
push
arpl
adcl
lret
divl
mov
lret
jmp
shlb
sub
sti
stc
call
std
mov
lcall
fildl
inc
push
pushf
stos
ret
fnstcw
cmpsb
mov
push
fcom
xchg
cmp
sbb
into
inc
mov
adc
pop
es
cs
adc
mov
inc
xor
jbe
mov
adc
dec
sbb
inc
enter
jo
iret
mov
sbb
es
pop
or
dec
rorl
inc
fiadds
scas
xor
icebp
ja
mov
repnz
mulb
pop
adc
dec
dec
sbb
das
vzeroupper
adc
in
cmp
mov
and
xchg
insb
mov
stos
add
sarb
cmp
imul
jbe
mov
xchg
mov
xchg
fldt
lahf
scas
xchg
scas
addr16
scas
xchg
jbe
or
mov
lcall
jno
cld
and
mov
and
jle
inc
in
mov
lcall
mov
fistps
pop
int3
push
push
ret
mov
inc
mov
sti
mov
daa
insl
lahf
mov
sahf
mov
cmp
mul
outsb
pop
inc
lock
jb
mov
es
fldenv
pop
jecxz
lods
inc
inc
sbb
das
in
clc
push
jecxz
pushf
neg
pushl
aas
mov
mov
push
and
in
test
xlat
insb
adc
dec
cmp
loopne
shlb
aam
rorb
mov
mov
lds
push
push
icebp
or
mov
jb
lahf
in
jp
push
sahf
loop
inc
adc
mov
sahf
jg
jae
jl
les
jno
xchg
stos
ja
repnz
or
xchg
lret
pop
xchg
fstl
cltd
pop
xor
lea
mov
and
push
adc
xor
int
fcoml
sbb
fcompl
pop
push
aas
pop
mov
ds
sbb
std
testl
pop
or
rep
insl
and
repnz
push
popf
lds
aam
cmp
outsl
xchg
in
aas
enter
dec
push
sub
cmp
lret
push
in
fcoml
into
in
or
sar
sub
int3
push
xchg
xchg
mov
mov
dec
sbbb
leave
mov
mov
jg
leave
inc
add
jno
pop
inc
stos
push
test
inc
mov
pushf
aam
outsl
pop
cmpsb
sub
jmp
shrl
mov
movb
add
push
shrl
aad
adc
mov
add
lock
in
xchg
push
lock
lret
mov
xchg
pushf
and
jg
inc
mov
push
adc
rcrb
loop
mov
xchg
outsb
stc
in
push
fidivrs
push
insl
gs
and
icebp
inc
in
loop
inc
sub
and
adc
push
inc
mov
jnp
mov
jge
add
push
mov
lret
adcb
mov
add
mov
decb
mov
jnp
bound
imul
out
notl
loopne
scas
mov
fwait
repz
mov
sbb
aaa
movsb
cmpsl
jg
fcomp
xor
mov
pop
xor
aad
xchg
lock
xchg
lock
adc
cmpsl
jg
std
outsb
sub
ss
jne
mov
jp
sbb
testl
lods
sub
in
add
dec
add
adc
jle
dec
mov
insl
cmc
pushf
lret
fwait
jl
fucomi
jae
bound
jl
mov
mov
add
cltd
testl
popf
popf
and
and
mov
xlat
repnz
inc
in
repz
addr16
pop
into
int3
mov
out
lds
std
adc
mov
mov
dec
insl
xor
loopne
ret
ret
add
lahf
mov
dec
in
mov
sub
aaa
ja
addr16
nop
dec
fnstcw
mov
das
lea
call
enter
test
leave
jp
or
pop
popa
mov
pusha
imul
mov
into
popl
cwtl
sti
xor
sbb
bound
jne
out
lods
int
popa
pusha
sarl
xchg
lea
jne
dec
xorl
or
shlb
pop
pop
fistpll
sub
push
jge
sub
inc
cmp
sbb
adc
mov
or
in
aaa
fcoms
cmp
mov
mov
outsl
mov
adc
pop
dec
add
ljmp
adc
or
sbb
pop
insb
imul
jb
pusha
mov
or
imul
int3
outsl
scas
cmp
jb
adc
dec
mov
dec
mov
adc
xor
or
jbe
lea
inc
lods
lret
aas
mov
push
sub
lods
xchg
push
ds
pop
test
adc
stos
add
sarb
stos
pusha
shlb
xorl
stc
mov
fnstenv
rol
fcomp
pushf
sbb
rcr
mov
and
mov
ret
mov
push
push
je
add
mov
sbb
add
jne
stos
call
test
and
dec
and
and
scas
sub
xchg
outsb
xchg
xor
scas
dec
jns
in
es
repnz
sarl
out
hlt
and
das
push
push
test
insl
mov
movsl
dec
movsl
dec
call
mov
call
sub
adc
jbe
movsb
xchg
jbe
mov
fucomp
jo
jbe
sub
cwtl
mov
cmp
mov
pop
pop
ret
inc
clc
xchg
and
mov
sbbl
out
xor
repnz
aad
mov
inc
jle
scas
xor
mov
out
push
clc
inc
pop
cmp
pop
mov
push
jl
ret
xchg
scas
mov
mov
cmp
dec
fistpl
rclb
dec
mov
fwait
aam
loope
or
shrb
fsts
pop
dec
loope
inc
push
mov
or
xlat
gs
outsb
cmpsb
scas
and
and
adc
sbb
xor
lahf
stc
stos
jbe
outsl
cmp
jae
dec
dec
jecxz
sbb
mov
dec
mov
rorl
sub
repnz
pop
mov
mov
std
xlat
xlat
inc
test
dec
push
aam
dec
add
xchg
into
jne
fisubrs
sub
xchg
out
aas
loop
inc
cld
rorl
sbb
adc
dec
jl
aad
nop
in
sahf
pop
insb
jns
mov
in
pop
mov
aaa
sub
in
inc
hlt
add
aas
push
cld
inc
stos
cmp
aaa
incb
adc
popa
add
jo
sarb
ret
sub
into
or
jnp
cmp
add
lcall
push
or
jmp
xchg
dec
push
jecxz
into
jbe
fnstenv
push
mov
int
leave
inc
cmp
jecxz
ljmp
push
push
xchg
xor
into
in
xor
mov
pop
repz
int
fwait
push
stc
sbbb
cmp
xor
out
aam
ja
push
mov
test
push
jno
in
or
aad
jle
cs
xchg
iret
xor
pop
adc
rcrb
push
pop
leave
rcrl
ficompl
cwtl
push
mov
jno
imul
std
push
jns
inc
adc
enter
ret
or
sub
xor
loopne
daa
insl
and
mov
and
lods
icebp
pop
arpl
mov
leave
dec
outsl
cmp
mulb
adcl
mov
add
sbb
inc
xor
cltd
fucomp
sub
add
jecxz
mov
sub
hlt
mulb
pop
sub
xchg
in
imulw
lcall
jg
jge
test
sub
or
inc
dec
xor
inc
sub
and
cmp
mov
outsb
push
and
or
add
ja
mov
adc
inc
shrb
adc
jecxz,pn
cli
leave
inc
mov
push
mov
pushf
adc
push
dec
dec
fstpt
cs
cltd
mov
orl
mov
enter
loopne
into
cs
lods
out
ficomps
outsb
mov
cmpsb
adc
loope
in
cli
clc
ret
loop
jne
inc
rclb
stos
lea
shlb
divl
xor
push
add
or
pop
pop
aaa
mov
shlb
out
xchg
lcall
xor
pushf
incl
pop
test
sub
addr16
pop
add
xchg
push
popa
cmp
or
sbb
push
nop
mov
jb
adc
outsb
dec
das
cmp
mov
insb
ja
bound
or
dec
in
push
inc
out
pusha
and
call
jle
das
fmuls
adc
add
mov
jbe
jno
mov
xor
sub
cmp
dec
mov
fs
cwtl
cmc
sbb
adc
push
dec
fldcw
push
testb
in
pop
pop
jnp
in
mov
push
push
pop
cltd
jo
adc
fmuls
sbb
je
dec
or
jecxz
mov
dec
gs
pop
pop
aas
xchg
add
in
pop
and
pusha
mov
cli
out
sub
int3
push
inc
xchg
sub
push
add
lret
pop
add
shrl
jne
shr
mov
xlat
filds
cmp
cmp
mov
jbe
lcall
in
pushf
lods
inc
add
xchg
jo
xor
movsl
jae
cmpsl
push
pop
pop
mov
xchg
xchg
repnz
pop
mov
je
aas
xor
data16
test
sbb
test
jmp
subl
and
push
leave
ljmp
movsl
sbb
scas
out
ret
mov
adc
sbb
push
test
sub
stos
add
ds
xchg
je
dec
add
push
sub
xchg
incl
or
and
push
cld
push
mov
mov
xor
jne
clc
in
pop
add
inc
xor
jae
cmp
pop
mov
scas
pop
push
int3
mov
add
sub
out
ficoml
add
jmp
pop
scas
or
lds
or
inc
push
fwait
and
jmp
add
add
sahf
lret
loope
fcoml
inc
xchg
jns
adc
or
lahf
pop
sub
iret
hlt
repnz
in
cld
or
jp
into
shll
sub
xor
mov
dec
loop
mov
cmpsb
cmpsb
adc
jno
xor
lds
xor
insb
scas
loope
adc
or
imul
popw
mov
adc
mov
lods
cltd
inc
rcll
push
subb
cmp
inc
ja
and
mov
test
dec
addr16
mov
dec
sub
sub
pop
int
push
icebp
int3
or
jae
or
xor
inc
into
jp
aaa
mov
loope
imul
fistpll
les
loope
pop
mov
fnstenv
inc
scas
lahf
sbb
or
dec
mov
icebp
rolb
jo
xor
cmp
lcall
xchg
jp
push
cmp
lea
ret
pop
pop
scas
lock
fidivrl
inc
xor
outsb
es
mov
push
js
cmpsl
lock
xchg
adc
push
loopne
sbb
xor
cwtl
mov
fucomi
clc
fidivl
fmuls
adc
pop
aad
adc
adc
xchg
test
fsubl
fsubrs
es
mov
movsb
xchg
hlt
les
and
cli
mov
sbb
cmp
js
pop
push
fwait
push
ror
cltd
les
mov
aam
out
jae
sbb
sub
inc
add
loop
inc
add
mov
add
adc
out
inc
outsl
inc
cmpb
mov
xor
xchg
dec
xchg
pop
inc
xor
stc
jl
cmpb
mov
mov
mov
mov
cwtl
cmp
lret
out
lcall
rdtsc
and
and
hlt
push
addr16
adc
mov
sbb
jnp
mov
cs
mov
sub
xor
fwait
lea
ljmp
ss
cmpsl
repz
lds
es
movsl
adc
adc
lret
aam
xchg
out
out
bound
lahf
and
xchg
push
cmp
adc
mov
lock
aad
push
jb
pop
inc
mov
jle
push
or
nop
xchg
hlt
sahf
lods
dec
sbb
pop
xlat
lock
imul
pusha
push
inc
or
mov
inc
inc
aam
xchg
sbb
and
mov
shrb
dec
ret
lret
inc
loopne
cmp
push
mov
gs
sbb
inc
popa
rcll
loop
push
mov
call
sub
and
jnp
cmp
addb
and
sbb
fisubl
gs
call
pop
cmpxchg
jb
daa
cltd
rcrb
aad
call
xor
mov
pop
inc
or
cld
mov
add
xchg
shr
daa
ja
loop
cltd
pop
icebp
scas
xor
or
mov
cwtl
sub
mov
fprem1
insb
or
mov
pop
sbb
push
jno
mov
imul
jnp
cmp
data16
inc
cmpsb
ret
adc
mov
jae
in
mov
jmp
notb
je
xchg
fbld
out
jl
pop
cs
add
lahf
jge
cmp
or
aad
pusha
loop
push
mov
js
mov
sub
xchg
sub
adc
in
and
xor
jp
mov
add
mov
loopne
xchg
movsl
loopne
test
push
adc
or
jge
sbb
daa
or
fnstenv
sub
xchg
xor
rolb
xor
js
mov
mov
inc
in
les
ja
pop
cmp
jp
sub
rclb
out
ret
dec
xchg
imul
jae
mov
js
jns
gs
mov
jge
pop
sbb
or
add
push
outsl
jp
jns
bswap
jl
out
xchg
inc
inc
adc
inc
dec
mov
pushf
lret
inc
rorb
mov
jmp
push
and
mov
stos
ds
loopne
or
out
rcll
test
dec
shlb
sti
sbb
lock
dec
fadds
push
xchg
adc
icebp
lds
or
daa
xor
jecxz
jb
sbbb
inc
ja
sbb
or
aas
shll
insb
inc
loopne
aaa
mov
dec
scas
and
insb
push
outsb
cmpsb
xor
lcall
clc
xor
ds
adc
and
xchg
out
out
shlb
int
cld
push
jg
dec
mov
scas
push
mov
pop
dec
aad
movsl
lods
mov
jo
mov
fstpl
fildl
psadbw
xchg
xchg
mov
pop
sub
ds
jb
mov
lcall
mov
jnp
fstpt
pusha
jp
dec
sahf
xor
xor
cmpsb
test
push
adc
sti
fadd
fistl
rclb
or
adc
push
int
cmpsl
das
jns
push
pop
test
jne
or
mov
and
cltd
ds
aad
test
movsl
movsb
ljmp
push
mov
cmpsl
inc
jne
add
pop
mov
out
jne
jnp
push
adc
loopne
movsb
cmp
cmpsl
push
push
mov
fs
fisttpl
dec
push
data16
insl
jae
cmp
nop
das
mov
cmp
push
fsubrl
mov
scas
cli
add
fldl
mov
aad
lods
movsl
test
push
scas
mov
jo
sbb
mov
cmpsb
leave
xor
nopl
fnstenv
imul
in
data16
out
mov
mov
cmpsl
leave
clc
xchg
mov
mov
mov
je
mov
adc
lret
push
dec
jns
mov
lock
adc
sbb
sub
popa
dec
jbe,pt
idivl
mov
dec
dec
add
test
sbbl
mov
and
outsl
repz
or
addr16
sbb
add
data16
sub
sub
mov
inc
lret
mov
mov
sbbb
enter
out
mov
jbe
jo
and
xchg
jmp
add
sbb
call
push
mov
inc
sbbl
push
add
sub
pop
adc
pushf
ds
cltd
push
rclb
mov
cltd
aaa
aaa
imul
ficompl
movsl
mov
sbb
sbb
fnstcw
sbb
js
push
add
adc
push
pop
fcoml
pop
and
in
xchg
gs
mov
je
pusha
or
pop
adcb
jmp
dec
pop
cmpsb
sub
add
or
arpl
pop
or
lods
xlat
adc
adc
xchg
mov
sbb
adc
add
pushf
fcoml
inc
and
xor
pop
inc
js
adc
cs
and
into
add
nop
pop
cli
cmpsl
inc
aam
inc
mov
in
cmc
insl
inc
out
push
mov
sbb
int
enter
pop
das
les
mov
imul
or
push
pop
clc
mov
sbb
outsl
sub
push
dec
ret
insl
jp
inc
aaa
dec
and
int
dec
mov
ljmp
movsl
add
int
imul
and
fisubrl
adcl
daa
or
in
aam
xor
daa
adc
and
pop
mov
mov
jp
mov
and
mov
bound
add
rcll
imul
in
push
push
je
adc
mov
pop
pusha
jl
pusha
ret
cltd
mov
inc
pop
jge
mov
setle
xor
inc
lods
int
test
cmpsl
pop
sbb
inc
loop
loope
adc
movsl
jp
lds
test
cmpb
popa
mov
or
jb
xchg
scas
fdivrl
wbinvd
push
adc
mov
pop
mov
mov
push
cmp
js
jnp
stc
insl
fxch
mov
ss
fsubl
dec
lahf
scas
out
adc
xor
mov
jne
movsb
shll
aas
jmp
arpl
and
mov
jno
cli
mov
lret
sub
and
test
pop
adc
pop
and
xor
popf
xchg
pop
mov
icebp
inc
rolb
dec
mov
in
push
jns
aaa
or
insb
out
sahf
fucomi
rorl
test
cltd
lcall
push
aaa
out
lock
dec
loop
inc
fldl
jecxz
movsb
js
dec
mov
xor
lea
xchg
arpl
xor
inc
mov
daa
jg
jg
pop
mov
jae
mov
sub
flds
pop
mov
adc
jl
stos
push
jg
inc
push
arpl
les
lret
outsl
popf
inc
pop
inc
shll
insl
xor
sbb
dec
dec
in
sub
dec
popa
pop
mov
cwtl
inc
das
push
cmpsb
mov
adc
rol
xchg
enter
fstps
jle
lahf
sbb
daa
xchg
fidivrs
pushl
mov
loop
and
mov
xor
cmpsb
and
adc
jmp
sbb
insl
mov
data16
mov
mov
xchg
mov
cmc
mov
pusha
cmp
pushf
sub
std
mov
gs
push
mov
mov
pop
xchg
xor
mov
dec
filds
sbb
in
arpl
sbb
addr16
mov
sbb
sarb
xor
pop
jne
hlt
and
pop
sub
push
lcall
xchg
pop
out
cmp
sbbl
hlt
or
push
xor
scas
mov
leave
outsb
push
lret
pop
lea
popa
cmc
lret
xor
rolb
adc
add
or
shlb
movsb
std
push
pop
popf
bound
jmp
xor
rcll
loopne
add
xor
cmc
das
jge
and
add
sbb
fisubs
les
mov
jg
mov
test
fadd
lret
xor
std
cmp
push
orb
add
pop
flds
or
cmc
jmp
pop
loop
or
inc
dec
call
sub
out
andl
cmpsl
int3
gs
mov
in
xor
or
and
ss
aad
add
pop
and
mov
insb
jb
shlb
pop
filds
popl
mov
lds
sbbl
imul
xchg
push
ret
add
aas
negb
cmp
xlat
push
mov
dec
out
decb
lcall
and
mov
in
repz
pop
sbb
leave
inc
rcpps
mov
ss
in
shll
sti
aas
sbbb
aam
cs
or
pop
divps
jo
arpl
xor
dec
movsb
jns
jp
insb
popa
mov
mov
sbb
sahf
aaa
adc
push
sub
xor
xchg
add
mov
jecxz
xchg
dec
into
add
iret
repz
jp
out
inc
pushf
inc
je
jbe
rol
jb
repz
push
add
mov
sahf
xor
sbb
xchg
icebp
call
cli
movsb
cmp
inc
mov
mov
nop
or
jmp
inc
in
mov
mov
repz
cmpsl
push
out
dec
cs
loop
loope
test
daa
loop
lds
je
and
push
jnp
inc
sub
mov
out
xchg
add
popa
add
popf
fcom
adc
daa
ficompl
ret
sbb
in
shll
les
std
xchg
lods
mov
cmp
push
push
inc
lss
or
das
dec
xor
dec
sbb
sbb
xchg
sub
cmp
mov
imul
repnz
les
xor
lcall
es
jl
push
or
imul
lret
test
sbb
dec
mov
imul
sarl
push
and
pop
xor
push
pusha
and
insl
jae
or
ror
cmp
jns
inc
jp
push
cmp
in
loope
leave
and
std
jge
sub
xchg
fwait
add
out
xchg
xor
lock
iret
arpl
mov
add
jle
jg
xor
pop
sarb
shll
repnz
inc
pop
and
rcl
fdivrs
mov
data16
or
gs
inc
jae
insb
sub
cmp
mov
add
adc
outsl
and
hlt
aam
iret
mov
dec
ja
bound
aad
insb
sub
leave
ja
push
add
imul
adc
add
or
shll
inc
pushf
jl
adc
cld
mov
sub
rcll
jns
sub
cltd
add
ret
into
mov
out
lock
negb
daa
testb
mov
inc
jne
xor
and
in
or
mov
and
rcr
push
pop
ret
adc
int
fwait
add
adc
xor
inc
repz
xchg
dec
cwtl
jecxz
dec
xchg
xchg
les
and
jae
in
psllw
dec
fstpl
pop
sbb
sti
jg
mov
aaa
jno
std
xchg
mov
insl
pop
jp
mov
shl
add
mov
push
sub
inc
and
repz
repz
push
icebp
roll
jo
mov
div
xor
fsts
pop
lret
les
mov
xlat
inc
push
pop
andb
sbb
outsb
and
or
mov
sbb
pop
xorb
push
cmp
icebp
pop
adc
sub
or
mov
push
call
add
in
fucom
dec
jbe
or
jae
enter
jnp
cmp
pop
adc
add
lcall
lcall
sub
lret
imul
in
mov
nop
sub
jnp
repz
enter
mov
inc
ljmp
mov
enter
add
inc
pop
orb
adc
aam
mov
mov
subb
mov
inc
lcall
rorb
lcall
popa
shll
adcb
and
mov
mov
adc
push
lret
or
adc
pop
mov
and
push
mov
sbb
sub
xor
leave
xlat
and
pop
in
inc
pop
sub
jmp
cmp
xchg
fidivl
jle
rorb
adc
out
jb
scas
lahf
pop
das
adc
jecxz
and
pop
xchg
push
repz
and
rclb
mov
es
test
sub
fnsave
cli
aad
sti
mov
out
mov
cmpsb
sub
sbb
into
xor
pop
xor
int
stos
stos
and
or
sub
add
adc
adc
jge
inc
sub
and
inc
movsb
pushf
out
daa
and
sbb
outsb
pop
push
arpl
pop
cmpsl
pop
and
loop
fsubr
in
mov
pop
stc
jmp
dec
aaa
clc
iret
mov
push
pop
lock
adc
cmp
outsb
loope
inc
push
scas
sub
icebp
mov
or
lods
cmc
mov
jnp
loopne
cld
mov
leave
fdivs
push
jmp
jo
sub
cwtl
aaa
xchg
test
imul
shld
mov
addr16
clc
shll
jns
push
aas
outsb
push
xchg
adc
sbb
ret
push
jo
jle
repnz
movsb
out
lahf
sub
adc
test
xchg
stos
push
push
fistps
pusha
inc
xor
dec
mov
fistpll
or
fsubr
push
pop
cmc
xchg
jmp
js
jl
iret
das
jbe
pop
les
mov
push
out
test
fwait
jg
mov
mov
pop
outsl
stc
or
repz
cmpsb
repz
mov
jno
xchg
js
or
fisubl
cmp
movsb
and
mov
cmpsb
jns
jne
jb
scas
push
and
mov
data16
addr16
push
jo
lock
lahf
push
adc
outsb
cmp
inc
push
cli
into
addr16
and
pushf
and
mov
mov
mov
lcall
inc
sbb
push
or
inc
andb
sbb
aad
jge
movsb
add
ljmp
popf
or
pop
add
scas
mov
push
cmpb
loop
pop
leave
jns
pop
push
jnp
ja
dec
jmp
clc
xor
xor
adc
pop
fmul
into
aad
or
push
rcll
jg
fistl
jae
cwtl
aad
negl
xchg
arpl
les
pushl
jmp
adc
int3
shll
pusha
and
xor
add
dec
mov
pop
jbe
add
notl
les
mov
subb
dec
pop
stos
sbb
in
xor
fisttpll
fistps
mov
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
adc
adc
pusha
inc
adc
adc
add
add
add
push
add
add
add
add
add
add
rolb
