mov
push
pushl
push
xor
mov
push
inc
inc
outsl
insl
pushl
arpl
ficoms
jmp
jnp
add
nop
aaa
iret
out
pushl
mov
loop
inc
into
fsubrl
fwait
and
das
scas
mov
jo
ror
mov
dec
cmp
inc
mov
jns
jo
mov
ret
inc
fisttpl
ret
je
dec
rcll
repnz
sarl
dec
jbe
jg
or
adc
pop
pop
scas
sti
push
mov
fcmovne
mov
incl
pop
cltd
inc
xor
repz
and
stos
push
fldt
in
stos
dec
sub
cmp
lcall
or
mov
cmp
xor
sub
xchg
pop
mov
xor
incl
fstl
sub
pusha
xchg
movsl
cltd
ret
lahf
or
add
test
xchg
arpl
hlt
cmpsl
dec
pop
sahf
push
and
loopne
imul
ja
insb
mov
int3
pop
incl
mov
das
xchg
add
mov
xchg
rolb
adc
clc
push
adc
mov
pushf
or
adc
inc
xchg
jg
and
dec
es
nop
mov
call
out
sbb
cwtl
mov
lret
icebp
mov
ds
jle
cmp
push
pop
pushl
xchg
icebp
movsb
mov
loopne
mov
int
outsb
cmp
add
jp
movsl
gs
push
and
inc
outsb
outsb
roll
xor
pop
ret
or
shll
mov
out
jae
mov
lahf
xchg
neg
lret
insb
cmp
lret
push
cmp
inc
cmpsb
stos
out
cmp
incl
aam
ret
cmp
adc
aaa
in
out
shrb
xor
test
mov
cld
call
xor
mov
inc
ljmp
imulb
in
mov
ljmp
dec
or
mov
cli
ja
mov
stos
cli
push
insb
rcr
sub
mov
call
cmpsb
or
es
mov
xchg
sbb
jae
test
pushl
outsl
sahf
jg
xchg
mov
mov
fisubs
es
or
lret
jl
xchg
push
lds
jp
imul
add
out
ja
bound
or
mov
jp
sti
push
std
push
fdivr
decl
push
stos
outsl
clc
sub
jno
xchg
or
jbe
stc
mov
add
push
push
decl
test
icebp
sar
jl
or
xchg
nop
jnp
inc
lahf
iret
ds
jbe
xor
lcall
popf
movsl
cmp
mov
push
inc
mov
mov
loope
fadds
inc
pop
stos
jp
int3
or
mov
xlat
push
or
cmpsb
mov
or
jle
ljmp
cli
cmp
decl
inc
aad
inc
lret
insl
xor
cmp
sbb
inc
adc
adc
and
test
adc
sub
xorl
add
cmp
inc
addr16
leave
xchg
and
mov
mov
cwtl
dec
pop
dec
lods
in
rcr
sbb
sar
mov
and
incl
ret
mov
adc
cmpsl
in
mov
fs
stos
jne
dec
cmp
outsl
xchg
jmp
out
out
call
add
test
sarl
xor
mov
jle
fs
mov
sub
fcmovu
jg
loope
das
adc
mov
sub
mov
cmpsb
fs
cmp
inc
mov
xor
dec
sbb
sub
outsl
loop
sahf
lds
clc
sahf
dec
cmp
jns
sub
sbb
test
dec
out
call
stc
and
call
jmp
push
bnd
sbb
test
add
cmp
mov
inc
out
stc
mov
fidivs
lock
pushf
jne
cli
mov
sub
and
test
push
inc
inc
inc
stos
and
mov
repnz
jle
shl
dec
pop
mov
mov
mov
es
ja
xchg
loope
mov
or
loope
adc
mov
jnp
ljmp
add
cli
lcall
lods
adcb
mov
pop
xchg
mov
iret
shrb
and
mov
mov
cwtl
fs
sbb
call
add
lret
sbb
in
jmp
cmp
mov
scas
ljmp
pushl
leave
jle
cmpsb
cs
cmp
insb
cmp
arpl
ss
into
cmp
cmp
xor
lods
jg
in
pop
dec
jnp
movsb
or
add
pop
or
adc
mov
sti
incl
pushf
mov
add
outsb
push
mov
imul
scas
cli
jmp
ss
adc
pop
mov
adc
hlt
mov
mov
ss
fists
mov
pushf
sub
ljmp
mov
in
xor
push
xor
nop
lret
outsl
std
pushl
xchg
cs
dec
sti
pop
pop
mov
fbld
mov
cmp
js
mov
div
jo
and
in
xor
and
shrb
xor
decl
test
mov
cmp
mov
mov
jg
push
ljmp
out
xchg
xor
aam
cmp
sbb
lds
pop
clc
js
lret
sarb
push
adc
add
fldl
hlt
lods
jae
cs
in
pop
cld
leave
mov
int3
decl
mov
push
sub
movsb
repz
jo
in
push
mov
hlt
daa
mov
sub
jne
sbb
aas
cwtl
dec
lds
shr
push
in
and
or
lock
xor
hlt
xor
and
or
rclb
push
popl
aaa
xchg
ret
call
jnp
cli
enter
sahf
pushl
mov
lcall
pop
stos
into
sbb
pop
in
dec
cmc
mov
cmp
call
or
dec
sbb
fdiv
or
mov
pusha
xor
jg
pushl
sarl
dec
shl
roll
sbb
jp
cmp
cld
mov
sti
insb
jg
cwtl
xchg
jns
repnz
andb
pushl
nop
cmp
pop
sub
popa
filds
sub
inc
mov
pusha
pushl
inc
inc
js
fisttpl
pop
insb
inc
test
cmp
aam
mov
incl
sbb
add
cs
push
jl
dec
rcrl
in
clc
jp
push
movsl
and
imul
idiv
cmc
movl
pushl
jge
subb
mov
mov
cmp
pushl
idivb
jp
mov
test
in
sbb
jge
ss
and
sbb
sub
pop
dec
sub
mov
stos
int3
or
loopne
decl
shrl
mov
inc
daa
sbb
sarl
xchg
imul
insl
mov
outsl
insb
cltd
aas
mov
pop
adc
xor
daa
test
incl
pop
mov
inc
lea
push
push
or
fsts
mov
call
clc
mov
lret
mov
out
ss
and
push
rorl
lcall
arpl
clc
push
ss
mov
jae
gs
sub
insl
or
push
mov
adc
jle
cmc
mov
push
push
inc
test
sub
rclb
ljmp
lock
mov
iret
jecxz
mov
or
iret
lds
addr16
jg
ds
test
iret
xor
or
je
mov
fsubrl
or
out
jmp
lret
pop
adc
inc
pop
sbb
push
jns
sub
mov
int
ljmp
lcall
mov
out
call
or
push
lock
sub
pushl
dec
adc
mov
popa
les
ficoml
mov
mov
js
sar
jg
jl
xlat
mov
dec
mov
daa
insl
xchg
mov
mov
loop
decl
into
cmc
jl
xchg
aaa
cwtl
jl
std
dec
cli
jb
ss
mov
decl
and
shl
mov
and
mov
imulb
lock
jnp
lcall
jmp
pushl
shr
or
dec
aad
lcall
mov
popa
push
inc
sbb
cltd
mov
pop
push
ss
push
inc
fdivl
decl
in
stos
mov
test
js
mov
and
and
push
jecxz
ret
ljmp
cmp
out
popa
dec
or
dec
pop
mov
jmp
push
fs
mov
jmp
pushl
pop
or
cwtl
cmp
addr16
jmp
popa
jo
rorb
jg
jg
lds
imul
dec
xchg
adc
cli
mov
iret
shll
sub
sub
into
inc
call
movsl
add
pushf
shrb
imul
fbstp
iret
mov
xchg
rep
pop
jmp
call
jg
jecxz
fcmovbe
int3
and
popa
push
dec
sbb
jg
push
stos
sub
addr16
incl
pushf
sbb
lcall
out
sbb
repnz
fs
into
rcrl
xchg
sub
in
mov
mov
in
test
push
dec
loop
push
add
and
aas
sarb
push
ret
xor
mov
and
fst
sbb
aaa
mov
cmp
int
cltd
lds
sub
inc
nopl
jmp
add
cmpsl
mov
out
mov
cli
ret
das
les
pop
sti
cli
mov
mov
add
jo
loop
mov
jp
rolb
sti
mov
clc
js
hlt
or
cmpsb
dec
cltd
scas
mov
ds
repnz
call
sti
lret
mov
rcll
mov
sbb
lret
les
mov
cs
testl
jno
pusha
aaa
inc
outsb
xchg
scas
incl
mov
jo
adc
mov
cmc
lods
addr16
fwait
dec
mov
iret
push
mov
cmp
inc
es
mov
fldcw
cwtl
mov
mov
lcall
push
outsl
pop
mov
sbb
xchg
xor
jb
sub
mov
jae
call
ret
adc
push
dec
push
xor
fadd
popa
sbb
push
add
lcall
lcall
push
xchg
sbb
jne
sti
fldenv
scas
nop
cs
sub
mov
and
lock
test
mov
dec
pop
jg
push
push
inc
stos
xchg
addb
push
popf
cld
push
or
in
xor
loop
test
mov
push
cltd
jo,pt
sti
push
cld
pusha
jp
call
fsubrp
mov
fiaddl
bound
pop
mov
push
xchg
pushf
jmp
lds
inc
daa
aad
leave
or
test
add
push
test
test
sub
xor
subb
inc
fwait
call
enter
movsl
outsb
cmc
in
mov
lea
ds
inc
in
sbb
call
es
into
sub
sbb
mov
aad
pop
push
xorl
inc
fdivs
pushl
mov
jae,pn
in
or
movsb
ret
insb
cld
add
jg
sub
cmp
dec
out
push
pop
ret
lret
mov
cmp
insl
and
xchg
inc
movd
xchg
ds
fistpl
rolb
xchg
ljmp
out
mov
jg
outsb
fmull
xor
mov
xchg
sub
pop
decl
test
push
test
push
lods
or
in
cmp
lret
lock
lods
test
lahf
sbb
int
int
cmp
test
push
push
xchg
addr16
sub
cmpsb
xor
cmpsb
and
mov
add
and
cld
jnp
xchg
cltd
adc
stos
or
es
dec
push
gs
aaa
incb
mov
jmp
aas
lods
xchg
ss
adc
sbb
fucomi
adc
sub
mov
sbb
cmpl
lods
ljmp
jle
sahf
cmp
ljmp
pushl
mov
sti
and
jo
cmc
daa
or
mov
mov
or
jg
lods
jmp
adcb
cmp
jg
shll
pop
cmp
xchg
and
and
or
jp
mov
mov
dec
fistps
fmuls
repnz
inc
pop
or
adc
mov
test
dec
or
das
mov
push
js
add
sub
fucom
out
dec
jecxz
mov
jae
arpl
sub
xchg
dec
sbb
test
mov
cmpsl
insb
push
xor
rcll
jg
pop
inc
and
jle
jo
or
inc
shlb
cmpsb
addl
aaa
outsb
lds
jne
or
lods
ljmp
xlat
pop
mov
add
decl
push
jmp
daa
cmp
pop
fisubrl
cmp
cmp
shl
lahf
add
xchg
mov
pop
fcoml
xor
mov
jg
fldcw
and
call
repnz
int
mov
adc
jo
cmpsb
push
daa
bound
shlb
or
xor
arpl
or
sub
out
pop
adc
movsl
cs
xchg
fimull
adc
sub
jne
movsl
jge
or
pop
call
sbb
jno
stc
mov
sbb
mov
inc
jnp
pop
ss
fsubl
xlat
or
scas
fistpl
sbb
js
jp
inc
sub
xor
movsl
add
lret
stos
loope
enter
sub
xchg
cmpsl
idivb
mov
call
lcall
mov
lret
xorl
jmp
ret
rorb
jge
fs
pop
pop
call
cmpsb
test
mov
nop
imul
or
jmp
or
scas
dec
arpl
fwait
cmpsb
clc
cmpsb
cmpb
scas
jl
xor
dec
cmp
cltd
inc
cli
das
je
inc
xchg
xchg
fdivrl
pop
lds
popa
jnp
dec
or
les
movq
scas
incl
pushl
dec
outsl
sbb
push
mov
pop
out
jb
nop
mov
decl
or
cmp
icebp
les
mov
in
popa
das
inc
push
xor
lcall
loopne
adc
mov
push
cmc
clc
push
sti
sbb
sub
mov
repz
divl
inc
cmp
inc
jecxz
mov
ds
lahf
ljmp
or
dec
bound
ret
decl
ja
imul
pusha
decl
xchg
scas
and
sub
std
in
xchg
ljmp
dec
mov
decl
in
lret
subl
fidivrs
cmp
pop
sbb
adc
fwait
popf
sbb
ljmp
mov
loop
aad
adc
and
dec
test
and
inc
inc
push
jg
dec
adc
divl
jg
ljmp
jle
verr
fcmovnu
push
sub
mov
pushl
addr16
mov
cmc
dec
rorl
dec
call
xor
xlat
ljmp
testl
sbb
daa
std
daa
jns
pop
loop
aas
push
add
into
mov
push
rcll
or
cmpsl
sub
sbb
rolb
or
sahf
sar
negb
mov
cmp
cwtl
jle
fisubs
stos
mov
mov
jmp
xor
cmp
sti
xchg
je
dec
adc
mov
adc
lods
jbe
sbb
call
or
rclb
stos
inc
dec
jp
adc
push
sub
lret
mov
icebp
adc
pusha
pop
arpl
mov
cmp
call
xchg
push
push
pop
xor
shll
xlat
loop
call
adc
or
pushf
imul
fsubrl
mov
in
sarb
scas
loopne
dec
push
vpunpckldq
ret
scas
sbb
jge
pushl
shl
pop
dec
mov
inc
mov
xchg
xchg
int
sbb
ret
std
das
fstl
pop
mov
or
jge
fidivl
mov
adc
mov
stos
add
icebp
rorl
in
or
push
incl
pop
lods
jmp
js
addr16
jno
add
pushf
movsb
dec
icebp
inc
ss
jns
xor
pushf
sbbb
pop
cmp
mov
fmul
sub
enter
cmc
add
push
adc
xorl
decl
cmpsb
shl
sbb
ret
stos
cmp
xor
test
std
adc
pushf
mov
dec
out
hlt
jbe
ljmp
dec
scas
out
xor
mov
call
nop
push
ja
stos
fcomi
imul
dec
mov
mov
jg
push
dec
aam
add
push
cmp
xor
movsb
dec
in
mov
adc
xor
insb
incl
pop
popf
into
mov
inc
notb
fadds
pop
shll
xor
pop
sub
testl
jae
mov
lds
test
pop
mov
stc
out
fldl
incl
call
sub
inc
inc
pop
push
dec
mov
push
lret
or
mov
xor
xor
push
in
jb
xor
mov
decl
mov
movsb
or
into
pusha
jge
jp
out
pop
lcall
lods
jns
mov
mov
hlt
pushl
mov
pop
xchg
xchg
enter
call
xor
jg
mov
cltd
stos
mov
xor
scas
dec
mov
test
ret
push
jl
jae
in
mov
loope,pt
lea
call
xchg
imul
es
lods
xor
imul
mov
gs
test
call
cltd
inc
scas
mov
ljmp
cs
shl
xchg
lret
aam
xchg
mov
in
dec
jecxz
sub
push
jge
jmp
sahf
mov
nop
pop
fucomip
subl
test
mov
cld
sbb
jmp
lea
cmpb
lds
int3
rclb
ljmp
enter
das
gs
ljmp
shll
fcomi
js
mov
fistps
mov
push
jge
jl
lcall
adc
push
out
lcall
sbb
jmp
jp
lea
jmp
jge
addr16
mov
dec
sub
out
fdivrl
test
or
dec
sub
lea
mov
xor
sarl
lcall
movsb
iret
mov
iret
push
aaa
adc
cltd
mov
adc
mov
mov
stos
mov
decl
mov
mov
mov
jmp
jge
pop
or
leave
and
dec
pop
xor
shrb
mov
dec
or
push
jne
sbb
sbb
decl
mov
dec
js
dec
jmp
ret
sub
mov
call
or
movsb
push
pop
cmp
dec
aaa
push
cld
and
or
cmp
sbb
inc
das
daa
mov
and
sub
inc
lahf
push
mov
push
push
outsl
cld
js
outsl
xchg
mov
fsubl
inc
add
mov
outsb
xchg
xor
addr16
adc
les
or
jecxz
xor
js
ret
stos
rcl
cld
pushl
mov
mov
mov
sbbl
addr16
testb
lcall
jb
ds
push
data16
in
jb
mov
jge
lret
inc
incl
push
outsl
je
nop
outsb
push
dec
push
xor
push
mov
xor
and
xchg
decb
mov
xchg
popa
ret
sub
and
dec
push
dec
jp
pushl
sub
scas
outsb
mov
rcll
xchg
fdivr
pushl
dec
mov
mov
jmp
adc
addr16
mov
xchg
clc
icebp
inc
pop
and
push
aaa
insl
jne
and
jae
jmp
dec
das
push
jb
loopne
adc
dec
cmp
mov
or
cmc
jg
mov
lcall
pop
dec
and
pop
frstor
cs
aaa
fistpll
lcall
sub
pop
lods
bound
imul
or
out
ljmp
jg
pop
fs
ret
jp
sub
cld
inc
and
bound
xchg
outsb
clc
jbe
test
cld
mov
pop
or
pop
bound
rorl
flds
jp
es
jbe
jmp
mov
loope
rorl
and
loope
cld
call
jmp
push
lds
xlat
mov
sub
pushf
out
enter
aaa
repz
jo
sarl
jle
add
mov
lcall
cmp
stos
ret
outsl
cmp
add
cmc
popa
cmp
loopne
or
dec
sub
and
fs
jp
ret
call
jnp
mov
adc
xchg
push
dec
xor
xor
cmp
xchg
gs
data16
mov
mov
pusha
inc
jmp
scas
fisubrs
sbb
movsb
mov
and
inc
fwait
daa
out
push
hlt
shlb
pop
inc
out
push
std
incl
faddl
xchg
xor
xchg
insb
roll
std
call
jne
out
push
dec
call
cmp
mov
xchg
sar
incl
subl
or
add
jbe
dec
pop
negb
incl
sub
adcl
stos
rclb
xchg
ret
lcall
ret
fcmove
or
mov
pop
cmpsb
mov
call
in
scas
icebp
xor
pop
js
cmp
adc
ljmp
cmc
faddl
xchg
jae
inc
mov
sbbl
fdivr
decl
mov
mov
cmp
pop
push
mov
cmpsb
or
sub
popf
das
adc
loopne
call
push
test
std
pop
or
pusha
jl
adcl
movsl
jmp
jmp
fcomip
inc
and
inc
xor
push
sub
xor
call
shrb
push
iret
stc
or
inc
sbb
shl
scas
jae
jno
pop
sub
pushl
pop
call
mov
cmp
xchg
push
sub
mull
seto
call
lret
inc
inc
sub
and
fs
fistpl
daa
cmpsl
mov
incl
push
lods
sbb
rorl
sbb
adc
pop
ja
inc
jnp
dec
push
push
mov
stos
add
roll
pop
pop
push
int
xor
mov
clc
fs
call
movb
mov
dec
fdivrl
test
sbb
enter
jg
call
pop
mov
xor
sbb
lret
dec
data16
rolb
les
or
jg
mov
clc
rclb
cmp
popa
add
jae
mov
movsb
hlt
leave
icebp
call
fisttpl
inc
lret
cmpsl
imul
lds
or
ljmp
mov
mov
shrb
mov
sbb
mov
inc
stos
push
fucomip
xchg
test
lods
pop
das
cmp
outsl
mov
and
inc
js
jecxz
lret
jmp
pop
das
jno
sti
cltd
mov
pop
daa
loopne
inc
xchg
mov
xchg
lods
ret
cs
hlt
movsb
add
cmp
mov
sub
shrl
icebp
decl
cli
mov
repnz
pop
mov
daa
mov
adc
test
call
andb
scas
xchg
mov
push
ljmp
lock
popf
add
pop
out
or
popf
jb
dec
jnp
mov
sti
mov
inc
dec
xchg
mov
sbb
xor
dec
add
addr16
xchg
xchg
arpl
aaa
mov
and
dec
fists
and
push
ljmp
std
lock
mov
xchg
inc
pop
lret
push
sti
sub
and
test
and
or
cltd
addr16
das
inc
test
or
dec
enter
into
mov
sbb
pop
jmp
movd
push
ret
or
xor
ljmp
cmp
lods
lret
pop
mov
cs
pop
and
sub
adc
jg
jmp
jg
loop
sti
aaa
out
fstl
and
cmpsl
push
sbb
push
mov
xchg
aaa
mov
dec
mov
xlat
cmc
pushf
inc
ror
adc
out
sbb
in
hlt
jmp
jmp
test
jbe
jbe
pop
pop
cmp
sub
call
pop
mov
psllw
mov
pop
lcall
and
mov
xchg
int3
rcrb
data16
xlat
test
repnz
mov
and
xchg
adc
mov
xchg
incl
jb
jp
mov
or
imul
std
pushl
pushl
into
int
mov
add
ljmp
cmpsl
into
mov
sbb
in
xor
insb
mov
jp
inc
mov
sub
pop
mov
or
fs
push
popa
in
fdiv
push
push
pushl
or
nop
scas
push
std
int
xor
sub
outsb
outsb
cmc
push
sub
mov
icebp
jno
fstl
push
ljmp
mov
lret
pop
xchg
ljmp
std
xchg
ds
and
imul
das
and
loop
xor
call
int
incl
and
jle
fidivrs
and
inc
xor
inc
push
sub
mov
call
cwtl
or
xchg
add
rcrl
mov
mov
push
pop
rorl
clc
popf
sarb
scas
sbb
das
mov
dec
inc
arpl
lock
adc
daa
xchg
jg
imul
xlat
push
divl
adc
cmp
sub
and
decl
pop
lahf
outsb
dec
adc
mov
or
sar
dec
cmp
sbb
pop
cmp
jne
push
std
in
push
xchg
jle
mov
clc
mov
and
push
addb
ljmp
fs
nop
ficompl
add
imull
ljmp
js
int3
sub
and
ret
jl
or
decl
mov
fnstsw
or
aaa
call
ret
adc
jmp
adc
std
pushl
addr16
ret
cmp
ret
out
jle
add
decb
std
ljmp
std
ss
dec
dec
cltd
sbb
ja
mov
insb
jb
adc
lds
dec
cmp
mov
stos
mov
sbb
scas
nopl
call
sbb
out
mov
or
mov
dec
pop
mov
inc
enter
jmp
fnstcw
aam
clc
les
scas
jo
mov
fs
and
outsl
jge
jg
sub
dec
mov
xrelease
jg
cmp
cmc
jp
xor
inc
shrl
loope
aas
rclb
xchg
fdivrs
push
dec
test
nop
rcll
mov
mov
mov
outsb
pushf
push
and
decl
xchg
add
je
insl
cmp
jae
lcall
std
pop
stos
push
mov
fwait
xchg
mov
daa
aas
sahf
sbb
fcmove
xchg
push
mov
sar
fnstcw
xor
dec
push
jne
push
ljmp
jmp
std
mov
sbb
lds
push
fisttpl
sbb
imul
lcall
inc
sbb
scas
mov
pop
addr16
mov
jl
stc
insb
movsl
lcall
mov
enter
movsb
sub
test
or
pop
inc
test
ret
inc
pop
test
ljmp
call
jnp
mov
jo
sbb
fistps
rcll
inc
pop
fadds
xor
inc
xor
jg
ljmp
push
into
pop
sub
adc
sub
stos
shll
ja
pop
loope
and
mov
push
repnz
inc
decl
inc
or
push
dec
cmp
sbb
test
inc
cmp
sbb
cmc
decl
cli
sbb
stos
call
in
jle
cmc
or
hlt
orl
jl
jmp
sub
dec
jnp
test
or
jb
cwtl
sahf
int
push
lods
je
lret
rorl
sub
test
mov
mov
test
call
dec
dec
mov
cmp
push
in
scas
out
scas
and
jae
fcoms
add
ss
inc
rorl
dec
ss
jmp
rclb
lahf
pop
decl
cld
mov
and
push
fiaddl
jae
jae
out
loopne
cmp
jmp
es
rcl
int
sub
dec
pop
fmulp
std
scas
jns
and
add
mov
call
dec
pop
js
inc
loop
dec
fxch
add
call
mov
out
add
jge
movsb
outsl
mov
pop
inc
jmp
cmp
adc
das
mov
or
int3
aas
aad
xor
nop
jl
pushl
les
outsl
inc
xor
inc
adc
mull
xor
push
push
mov
ljmp
out
js
cmp
out
dec
mov
push
cli
aaa
ret
mov
mov
cld
mov
test
sbb
aaa
sub
mov
dec
enter
cmp
or
les
jnp
fisubs
jns,pt
pop
je
fistpl
decl
std
arpl
notl
inc
loopne
repz
daa
je
or
test
add
add
or
in
nop
xor
in
clc
fdivs
push
add
sbb
pushl
sbb
mov
shlb
mov
push
inc
push
leave
mov
ljmp
sbb
adc
pop
or
inc
shrb
in
sub
scas
pop
ret
xor
push
call
jae
and
lock
cmp
xor
clc
and
cmp
cld
lcall
mov
dec
and
adc
in
fs
addl
pop
cli
jmp
int
inc
mov
mov
xchg
dec
sbb
addb
jns
adc
decl
clc
mov
andl
cli
inc
fisubl
mov
jmp
ljmp
mov
movsb
lods
and
dec
fcoml
and
sbb
lds
xchg
outsl
xchg
hlt
pop
dec
aaa
jb
aam
cwtl
das
hlt
filds
addr16
lods
enter
add
jl
or
jecxz
into
mov
testb
xor
ljmp
cmc
jmp
pop
add
enter
addl
les
push
push
in
or
aaa
cli
jmp
jae
out
mov
add
incl
inc
fcompl
xchg
mov
jmp
dec
add
pop
push
fs
ljmp
hlt
std
ljmp
fisttps
or
bound
jno
out
jo
js
push
inc
xor
fdivr
decl
imul
sub
jbe
lods
and
adc
pop
insb
pushl
stc
movsl
adc
jb
adcl
mov
sub
jnp
xor
fiaddl
dec
ret
popa
lret
stos
xchg
mov
hlt
jnp
fdiv
mov
cmp
xchg
scas
enter
clc
mov
pushf
dec
xorb
loope
mull
mov
jge
ss
pop
jmp
adc
mov
pop
adc
lcall
lret
jle
sub
sbb
movsl
mov
cltd
jne
mov
jns
jnp
cmp
xchg
repz
incl
xor
popf
test
lcall
addr16
xor
ljmp
hlt
hlt
in
cmp
push
inc
mov
add
xchg
cld
test
out
ja
push
push
dec
ljmp
mov
outsl
je
mov
add
lock
xor
sbb
and
cwtl
mov
mov
call
and
das
dec
dec
cmpsb
lods
jo
cltd
mov
cmp
call
sbb
hlt
les
int
int3
and
pop
in
add
adc
jge
dec
in
mov
mov
call
ljmp
mov
cwtl
test
jg
data16
push
push
xor
lock
xor
push
ds
std
insb
sti
push
ljmp
insb
pop
loop
push
loopne
or
lret
mov
enter
mull
inc
mov
inc
out
mov
fnsave
xchg
push
xchg
cmp
rorb
mov
in
jge
popf
sub
pop
out
mov
mov
loope
subl
pop
or
enter
loop
movsl
mov
lret
add
xchg
cmp
stos
decl
in
and
cmp
cli
sub
stos
pusha
lahf
arpl
pushl
popa
pop
sub
in
movsl
inc
lret
in
mov
and
ja
fwait
mov
pop
loopne
loopne
add
jg
and
add
dec
ficompl
jg
shl
cwtl
sub
andl
inc
daa
aaa
fldl
pop
fidivs
das
jbe
popa
loop,pn
pop
pop
stos
shrl
incl
add
ficompl
arpl
movsl
je
in
adc
or
sub
call
jb
in
pushf
ret
arpl
hlt
bound
sub
or
or
fstl
mov
leave
lods
cmpsb
xor
dec
jecxz
jns
dec
sbb
push
push
dec
pop
insb
fs
call
lcall
xor
dec
mov
pop
dec
mov
mov
test
add
jle
mov
ljmp
cmp
sub
ljmp
jg
pop
sbb
sti
add
mov
push
shlb
mov
inc
sub
push
in
call
dec
das
cs
adc
fs
push
mov
test
xor
xor
jle
mov
add
xchg
int
xchg
pop
xor
and
stos
iret
aaa
mov
inc
xchg
ja
inc
xor
dec
roll
mov
or
add
adc
std
test
ljmp
pop
ret
add
jo
sub
sub
insl
mov
call
xchg
sbb
in
and
and
std
pop
movsl
jbe
jge
fimuls
push
incl
add
mov
jno
rclb
push
add
and
pusha
ret
idiv
push
jae
cwtl
or
or
push
lret
mov
xor
jmp
ss
inc
mov
call
jbe
scas
call
pop
loopne
mov
push
stos
scas
jo
stc
push
cmp
insl
stos
cmp
mov
xchg
fdiv
mov
pop
dec
mov
in
adc
test
jmp
lods
out
inc
ret
int3
inc
das
or
iret
jmp
lock
pop
call
jbe
jl
mov
nop
adc
ja
sti
popf
inc
imul
pusha
scas
jnp
call
inc
inc
shrb
xor
adc
pusha
xchg
pop
fstps
mov
inc
fs
add
add
in
inc
pop
in
mov
jl
mov
jecxz
stc
std
mov
lea
cmpb
inc
sub
addl
popf
jle
inc
test
mov
aas
gs
pop
testl
in
pushf
cmc
adc
jbe
jecxz
outsl
mov
push
jo
dec
jbe
push
cmp
mov
mov
push
movsb
cmpsb
ret
mov
data16
cmp
dec
sub
inc
scas
int
xor
mov
xchg
sarb
mov
movsbl
mov
push
pop
std
or
inc
sub
jg
or
or
jae
push
add
xor
aas
dec
rep
das
cld
call
sbb
fisttpl
test
test
bound
sub
call
movsl
jge
imul
and
mov
dec
sbb
dec
lock
call
mov
and
push
cmpsb
add
jno
xor
call
lods
mov
int3
mov
inc
je
ret
fildl
cmp
test
sbb
lahf
sbb
test
icebp
ljmp
dec
ds
dec
stos
and
mov
mov
push
xor
popa
cmp
xchg
mov
repz
mov
popa
lret
mov
clc
or
call
cmp
aaa
jle
pop
push
push
clc
pushf
dec
inc
ljmp
lock
push
pop
mov
popa
pop
stc
enter
insl
aam
jb
jmp
inc
daa
sub
addr16
mov
fwait
adcl
icebp
call
data16
incl
cmp
mov
add
sbb
aam
jg
xor
mov
add
sti
sbb
xchg
pop
jg
sahf
inc
rclb
dec
fidivrl
and
cli
dec
jmp
adc
call
outsl
mov
das
std
inc
outsl
xchg
cmpb
mov
dec
mov
and
js
enter
lcall
loop
scas
leave
jp
addr16
jle
rcrb
aad
adc
fildll
pop
mov
aam
mov
sub
pop
mov
xchg
decl
movsl
hlt
iret
inc
mov
lock
pop
jbe
testl
dec
cmp
jg
inc
cltd
lds
inc
jns
pop
repz
cli
imull
mov
call
xchg
popf
stc
mov
xor
xchg
fimull
xchg
mov
inc
cmp
pop
xchg
lcall
mov
xchg
popf
clc
pushl
mov
adc
xchg
sahf
stos
sbb
scas
aaa
ljmp
mov
and
xor
cli
call
das
push
imul
and
sbb
movsb
sahf
andl
cld
gs
sti
dec
es
roll
mov
jge
jecxz
test
inc
and
inc
ret
stc
pop
rolb
add
sarl
fidivrl
mov
pop
mov
daa
fcompl
sar
push
in
pop
lret
mov
cs
adc
mov
xchg
incl
jns
js
das
jp
push
jp
and
fidivrl
and
mov
cld
in
jp
sarl
out
and
dec
jns
lds
test
pop
cli
pushf
mov
adc
xchg
into
jmp
push
in
int3
movsb
cmp
push
bnd
in
les
pushf
and
cltd
mov
mov
jmp
stos
cltd
shlb
ficoms
cmp
and
jecxz
push
sub
lahf
stc
pushf
scas
leave
scas
cmp
dec
or
or
sbb
pop
data16
pushl
clc
pusha
jmp
push
loopne
push
loop
jl
mov
pusha
mov
pushl
stc
mov
dec
lahf
mov
jle
cltd
mov
or
jg
xlat
add
in
sbb
or
and
and
dec
dec
clc
dec
lea
xchg
loope
push
lahf
decl
mov
jmp
dec
daa
mov
push
dec
and
stos
aad
ret
or
jnp
jns
jg
push
incl
pop
jl
push
outsb
addr16
mov
add
mov
cmc
pushl
loope
pop
outsb
fwait
inc
stos
sbbl
mov
mov
adc
rclb
jle
dec
fsubr
inc
jmp
cmc
push
lret
xchg
mov
mov
lcall
ljmp
push
icebp
or
fdivr
pop
mov
sub
jmp
stc
adc
test
mov
dec
push
mov
iret
dec
pop
sub
cmp
mov
incl
adc
xor
push
xchg
movsl
cmpsl
rolb
inc
and
scas
adc
fists
rcrl
lcall
hlt
inc
add
mov
and
les
push
enter
mov
iret
sub
orl
cmpsl
fildl
jns
cld
ret
sar
incl
into
out
js
cmp
add
leave
outsb
cmpsl
dec
outsl
pop
es
call
fists
iret
je
int
insl
pop
push
sub
push
in
jg
incl
push
inc
or
fwait
jg
cmpsl
pop
xor
sub
mov
ljmp
push
sub
lods
negb
adc
sub
or
adc
or
call
cli
or
adc
in
test
push
shr
in
mov
mov
sub
loop
adc
loopne
xor
mov
xchg
stos
fildll
push
daa
fnstsw
and
sbb
incl
or
xlat
mov
mov
inc
test
add
loop
scas
jae
daa
int3
adc
ljmp
mov
inc
test
aad
into
es
leave
mov
rcll
pusha
pop
bound
test
aad
push
decl
ljmp
push
in
inc
or
ljmp
out
popa
mov
cmp
xchg
clc
jmp
mov
dec
dec
pop
imul
in
out
lret
pop
addr16
ljmp
lock
and
mov
mov
imul
push
ss
and
mov
pop
mov
call
int
pop
push
icebp
sub
xchg
cmp
in
and
rcl
lahf
or
je
das
cmc
lea
mov
int3
jb
pop
pushf
enter
movsb
orb
inc
test
or
or
sub
xchg
sarl
inc
push
add
andb
dec
dec
aaa
jge
mov
filds
mov
add
sbb
push
sbb
cld
adc
fs
pop
or
imul
lahf
pop
pusha
leave
cmp
xchg
lods
jl
adc
inc
push
mov
sar
push
fwait
sub
pushf
out
inc
ja
add
incl
lods
lahf
daa
jge
xchg
pop
sbb
incb
loop
imul
mov
push
mov
mov
lret
pushl
mov
and
out
cwtl
cmpsb
insl
jnp
jmp
push
mov
ljmp
cmp
push
ja
fwait
push
dec
inc
sbb
repz
test
add
cli
pushl
push
mov
dec
out
ljmp
pop
adc
pop
pop
or
icebp
cmp
outsl
scas
jmp
repnz
idiv
push
mov
outsl
inc
jno
push
sbb
jg
enter
test
push
shlb
jmp
sub
mov
or
push
dec
incl
cmp
and
mov
or
pushf
hlt
cmp
int
or
add
mov
cltd
jl
mov
push
mov
mov
leave
and
dec
lcall
cmpsb
add
imul
mov
push
cmp
daa
dec
fiaddl
add
add
xchg
pop
adc
arpl
stos
sbb
ror
mov
gs
jns
add
pop
or
fnsave
push
pop
repz
inc
jmp
loop
push
and
dec
gs
pop
push
mov
cmp
lods
pushl
pop
aad
scas
mov
repz
ret
push
cmp
ljmp
dec
fistpll
sbb
cmp
fbld
jge
je
lcall
call
ljmp
push
pop
cmp
imull
sub
sbb
jg
out
adc
xor
les
cld
out
mov
loope
arpl
and
and
popf
cwtl
bound
movsl
jne
cmp
xor
mov
addr16
mov
bound
jbe
mov
outsl
push
jge
adc
ja
cmpl
wrmsr
ss
jg
push
stos
aas
push
cmp
pop
adc
jae
mov
pop
xorl
call
addr16
jno
jne
in
sub
jecxz
pop
or
cs
and
test
ljmp
lea
roll
jno
data16
mov
mov
add
sar
das
std
xchg
sub
cmp
mov
lret
call
lret
inc
lcall
in
push
jnp
jp
cmp
pop
popa
fs
and
mov
lcall
pop
xor
cmc
pop
sahf
cmp
pop
loop
pop
fisttpl
adc
mov
ljmp
ret
mov
mov
jp
out
mov
rolb
pop
imul
call
lcall
shl
jne
or
lea
out
add
mov
pop
test
mov
sub
sub
cmpsl
fidivrl
adc
lcall
add
prefetch
or
and
aad
adc
std
insl
js
rorb
arpl
push
cmpsl
subb
incl
sub
sbb
pop
push
lock
sahf
iret
sahf
cltd
xchg
scas
rol
cmc
stos
cltd
daa
pop
imul
pop
loop
mov
stc
pop
pop
lock
popa
stc
fistpll
mov
cmp
mov
xchg
call
jp
xchg
popa
ret
sbb
pushf
or
sbb
shl
pushf
adc
rclb
ljmp
inc
hlt
stos
jl
scas
mov
xchg
mov
outsl
ss
sti
pop
and
mov
and
jmp
outsb
mov
movsb
push
jnp
pop
gs
sub
ljmp
jae
outsb
lcall
aam
test
fidivrs
outsl
icebp
dec
lds
pop
jb
adc
pop
adc
test
mov
mov
clc
jg
dec
pop
cmp
mov
pop
test
popa
adc
mov
ljmp
cmp
sub
mov
fnstenv
push
cmc
mov
insl
out
ja
adc
push
setae
ret
jle
outsl
sub
sub
in
sar
pushl
or
in
repnz
xor
daa
andb
clc
mov
pushl
push
mov
mov
testl
adc
fistpll
test
ljmp
adc
stc
nop
shrb
icebp
push
in
nop
loopw
push
scas
jp
cmp
adc
inc
dec
pop
sbb
and
inc
aad
shrl
dec
fs
mov
sub
inc
aad
sbb
xchg
sbb
sbb
lds
test
xchg
into
out
cmpsl
or
mov
lret
add
inc
push
bound
cs
arpl
xchg
jne
xchg
pop
mov
lret
sub
shll
sarl
fs
sbb
notl
call
push
lods
xor
pop
aaa
cmp
les
lret
push
sti
out
dec
mov
inc
adc
lock
fidivl
dec
rcll
call
mov
xchg
pusha
jo
xor
mov
mov
mov
pop
adc
incl
cmp
push
rorl
xchg
pop
movb
and
popf
leave
xchg
fisubrs
cmc
dec
push
ljmp
pop
js
mov
mov
inc
movsb
mov
cmp
pop
stc
out
call
mov
in
test
hlt
into
std
sub
scas
outsl
icebp
inc
lock
xor
inc
mov
mull
mov
call
fsubrl
mov
mov
movsb
jmp
mov
mov
cltd
adc
loopne
incl
jge
addr16
stos
ss
scas
imul
push
mov
pop
pop
pop
pushl
bound
sahf
cmpsl
inc
test
ret
mov
mov
pop
fstpt
sti
xchg
jg
pop
add
push
push
rorb
sti
push
outsl
and
dec
aam
bound
bound
call
movsl
adc
pop
mov
mov
add
ljmp
mov
ficoml
push
adc
leave
xchg
dec
and
push
fstl
sub
sarl
add
sub
sbb
lods
adc
xchg
xorl
aas
and
jnp
decl
xchg
inc
test
rcll
adc
sub
add
leave
je
pop
mov
jb
sbb
je
mov
dec
xlat
mov
cmp
lcall
fcompl
rolb
jmp
mov
or
lods
data16
sar
cld
push
mov
stc
pop
pop
roll
inc
lret
mov
fsubrs
mov
cmp
lret
test
push
sbb
es
mov
xchg
lret
adc
mov
sub
or
sub
dec
cmpl
dec
push
jecxz
movsl
push
incl
loope
addr16
pop
inc
fldt
je
lods
repnz
shrb
push
cwtl
and
and
sub
xlat
jg
mov
inc
andb
push
rorb
ljmp
rcll
push
sbb
lock
decl
or
std
lea
rclb
mov
ja
push
ja
ljmp
jae
pop
add
jl
cmpl
mull
out
mov
or
pop
into
or
movsl
jb
pushf
sbb
cltd
or
sbb
adc
dec
cli
dec
dec
test
test
jne
scas
cmp
xor
pop
cmp
lcall
jge
ljmp
sbb
arpl
fdivrs
call
fcoml
adc
test
aad
jbe
jg
cltd
shl
or
pop
cld
jge
dec
mov
mov
jge
fbstp
jnp
pop
pop
or
jge
pushl
cmp
lds
loope
mov
mov
sub
iret
clc
xor
incl
adc
xor
push
jbe
adc
mov
cmp
out
insl
dec
cmp
stos
sti
fsubrl
inc
sub
cmp
push
mov
mov
stc
xor
jg
jle
push
pop
mov
enter
jp
sbb
es
add
inc
mov
shll
dec
int3
pusha
aad
pop
dec
mov
sub
dec
stc
jo
sub
aam
fildll
pushl
jns
push
rorl
in
dec
imul
test
jg
incl
ret
sbb
xlat
pop
ljmp
arpl
hlt
das
jns
pusha
lret
lock
push
fprem
in
out
xchg
cmc
dec
push
add
xchg
in
pop
sbbb
add
pop
or
jns
cmp
fbld
mov
mov
fildl
jmp
sarb
daa
loop
pop
test
test
jno
out
and
lock
popa
jno
call
sbb
int
sbb
xrelease
or
inc
out
lea
jg
stos
insb
mov
xchg
test
mov
add
jecxz
mov
lcall
and
and
sbb
jns
jp
inc
inc
mov
pusha
xchg
cmp
pushl
add
stos
push
inc
iret
leave
mov
ss
sub
dec
xchg
outsl
popf
mov
call
mov
clc
fwait
dec
inc
insb
jno
cld
pop
add
xor
lock
in
jae
decl
sbb
jge
aam
cmp
jl
fldcw
loope
mov
adc
hlt
pop
jl
int3
mov
jmp
mov
out
cltd
mov
cmp
inc
stc
lods
sub
push
push
xchg
cmp
mov
or
decl
ret
inc
xor
mov
leave
lea
inc
cmpsl
or
jo
push
push
xor
std
cmp
push
nop
cmp
scas
add
imulb
inc
mov
push
int
mov
cmc
jmp
int3
or
and
cmp
in
sbbl
dec
out
icebp
ljmp
xchg
cmp
sarl
icebp
push
adc
xchg
jno
cmp
cld
ljmp
lock
push
pop
out
sub
sbb
push
aad
xor
test
mov
loope
jne
inc
cs
hlt
cmp
pushf
fiaddl
cli
lock
jo
pop
ds
pusha
cmp
or
test
fistl
xor
cwtl
cli
sub
je
out
jo
movsb
cmpsl
out
clc
cltd
cld
outsl
sbb
daa
rcrl
add
xchg
mov
aas
vunpcklps
mov
push
dec
ljmp
jae
push
mov
jne
imul
iret
repnz
pop
in
or
add
sti
mov
mov
xchg
sub
pushf
test
loop
lock
int
ljmp
lock
inc
flds
scas
cmpsb
lea
push
clc
pop
ss
pushl
outsl
jo
addb
mov
mov
scas
lahf
sbb
adc
mov
jmp
in
lcall
mov
mov
sbb
sub
cmpl
movsl
lret
movsb
sbb
push
les
cmpl
dec
daa
push
inc
ljmp
ret
jl
lcall
fdivl
push
cmp
push
jge
pop
lret
fwait
jmp
cmpsb
dec
or
inc
dec
call
ljmp
lahf
fimuls
dec
repz
or
nop
xlat
dec
stc
mov
cmp
incl
add
cld
imul
mov
ds
dec
jmp
das
idivl
cmpsl
out
xlat
sbb
jbe
shll
fcmovbe
ret
sbb
cli
or
mov
fwait
lods
mov
add
fwait
pop
std
ljmp
hlt
cwtl
in
mov
orps
loope
or
ljmp
lcall
dec
sbb
aad
cmp
xchg
or
test
mov
std
jl
out
ljmp
or
or
mov
out
sbb
jg
mov
sbb
xchg
and
movsb
rcr
cld
adc
sub
ds
icebp
push
mov
jne
mov
iret
push
aaa
mov
and
jbe
xchg
mov
scas
adc
cli
ljmp
int3
sahf
aad
sbb
add
fcoms
in
ficompl
cld
pop
pop
xchg
push
inc
add
fsubs
daa
loopne
std
sbb
cltd
lock
mov
dec
rorb
ljmp
mov
mov
insb
ffree
dec
and
in
jnp
lcall
ljmp
movsb
imul
outsb
add
aas
push
mov
mov
pop
mov
adc
loop
inc
inc
jg
cltd
adc
stc
or
mov
fs
scas
mov
or
lds
mov
inc
test
mov
roll
cmp
and
jl
dec
push
lcall
and
push
pop
loopne
pop
sub
icebp
mov
cld
or
push
cmp
fstpt
hlt
sub
pushf
dec
mov
adc
xor
out
aad
sub
mov
loopne
pushl
sar
pop
pop
fs
xor
daa
lea
pop
xor
or
mov
sbb
ljmp
hlt
push
lcall
cmp
mov
popa
imul
mov
popa
out
add
in
xchg
push
jg
inc
cmc
mov
jg
jg
xchg
push
repnz
bound
jge
into
cmc
adc
jg
imul
xor
push
ret
sub
stc
pop
mov
jg
xor
iret
lock
outsb
pushf
call
into
mov
outsl
adc
push
jg
cmpl
mov
sbb
sbb
lahf
bswap
sar
mov
test
ljmp
xchg
sbb
popf
jecxz
dec
inc
ds
lret
cld
lcall
inc
add
test
mov
jbe
xchg
mov
xchg
repnz
out
rclb
push
jg
mov
popf
in
ss
icebp
ljmp
push
push
movl
add
jo
pop
or
adc
das
mov
fcoms
decl
and
movsb
xchg
push
lock
aam
outsl
dec
fst
or
andb
push
or
xlat
add
int
movsl
mov
jnp
data16
or
mov
icebp
call
inc
lcall
mov
cmp
add
movsb
pop
xor
inc
pushl
dec
sbb
sahf
and
inc
xor
add
adc
popa
push
sub
inc
iret
dec
pushl
mov
rcrl
in
fimull
idiv
jnp
std
xchg
test
fwait
jmp
call
jmp
pushf
inc
lret
lock
or
les
or
insb
mov
loopne
insl
fs
lods
jne
sbb
ret
xlat
jg
inc
cmp
clc
add
aam
mov
aad
mov
mov
scas
loope
adc
pop
outsb
adc
fildll
lcall
mov
adc
dec
nop
adc
or
mov
loope
aaa
inc
jns
cmp
mov
inc
push
pushl
pop
orl
scas
pop
fwait
bound
cwtl
cmp
mov
cmp
mov
fcomip
cmp
push
mov
push
sub
leave
div
and
mov
mov
mov
out
mov
jl
adc
sub
ret
add
sti
add
data16
call
cmp
pop
movsl
hlt
cwtl
outsb
dec
cmpsl
scas
add
in
and
fildll
jmp
or
push
movsl
xchg
sub
das
or
es
sub
push
or
mov
mov
cltd
cmp
sub
jmp
inc
dec
outsl
mov
sti
clc
xor
xchg
push
pop
loop
sub
mov
js
add
and
push
sub
xchg
add
movsl
jecxz
lods
mov
call
dec
clc
mov
mov
sub
jnp
pop
mov
pop
add
orl
pop
clc
or
or
xlat
stc
sti
mov
xchg
jecxz
dec
lret
xchg
mov
add
mov
jp
jo
pushf
ljmp
dec
mov
cli
out
add
pop
dec
adc
fstl
dec
cltd
out
sub
incl
jmp
jne
dec
dec
jecxz
ret
es
fucomip
cld
stos
loop
mov
pop
cmp
or
jnp
sbb
fsub
icebp
jno
lcall
push
les
add
lret
adc
iret
test
popf
ds
ja
dec
mov
dec
mov
je
out
scas
mov
dec
test
push
ret
dec
inc
inc
cmpb
mov
decl
test
lret
inc
push
shlb
jle
in
xchg
sti
inc
pop
and
cwtl
aas
cmp
lcall
ljmp
mov
loop
imul
aaa
decl
mov
aad
inc
out
mov
mov
stos
or
cld
das
jno
push
push
sub
cmc
int3
in
jl
mov
fdivr
jmp
sbb
dec
outsl
or
sub
adc
lea
pop
jnp
cmp
ljmp
fcos
jns
mov
inc
loop
mov
pushf
stos
add
call
mov
pop
ja
adc
or
lret
cmp
and
cmp
inc
push
lds
push
rol
lods
lea
in
dec
dec
push
imul
call
arpl
mov
mov
sub
adc
mov
ljmp
call
mov
pop
stos
adc
stos
ja
out
jg
pushl
popf
push
out
add
cmp
loop
cmc
lcall
jnp
xor
out
popa
ret
outsb
cmp
insb
ljmp
outsl
or
fstpt
lds
sub
mov
xor
jmp
adc
bound
out
push
inc
or
outsl
pop
cli
dec
loope
shr
lret
js
push
fldcw
adc
test
pushl
lret
jae
pop
daa
dec
int3
pop
add
sub
sbb
add
adc
sti
das
mov
ss
std
jb
sbbb
jno
jnp
aad
jns
mov
or
xchg
sub
call
jbe
push
mov
inc
fcmovu
dec
cmpb
orl
sbb
pop
push
sbb
fisubrs
lds
popa
int3
dec
call
adc
ret
ljmp
insl
pusha
das
cltd
lods
lret
les
sahf
and
jno
push
mov
test
mov
mov
ss
hlt
decb
pop
out
xor
xchg
jns
pop
aad
fs
pop
xchg
js
loopne
push
xchg
movsl
xor
movsb
mov
pop
std
decl
push
xor
aad
pop
and
lods
outsb
cmc
imul
test
aaa
xor
xchg
cltd
outsl
sub
mov
jg
jns
clc
test
pop
add
es
movsl
cmp
sub
popa
mov
lods
sbb
call
js
out
pop
shrb
stos
xor
xchg
enter
push
push
hlt
add
loope
jecxz
pop
mov
leave
fdivl
decl
push
imull
hlt
pop
xchg
mov
incb
pop
cmp
push
cmp
adc
mov
insl
ficoms
or
adc
add
push
repnz
sub
iret
jmp
mov
cmp
cwtl
jmp
xchg
lahf
jl
stc
aas
mov
adc
sbb
stos
sbb
mov
fists
dec
popf
adc
pushf
sbb
fadds
mov
in
lret
lcall
dec
jmp
pop
rcll
mov
xchg
mov
icebp
incl
out
addr16
in
dec
addl
dec
inc
push
push
jg
dec
arpl
roll
popa
out
jmp
filds
stc
jb
sub
popa
fs
scas
test
insl
lds
out
mov
stos
enter
jmp
call
sbb
cli
pop
cmp
imul
push
push
fcmovb
sbb
jmp
sub
push
xchg
add
inc
lcall
jle
xchg
dec
call
sbb
ss
xchg
adc
jecxz
loop
push
in
outsl
call
push
pop
mov
jne
loopne
bound
jb
repnz
call
push
repz
repnz
jnp
xor
mov
int3
pop
push
decl
dec
mov
stos
out
fwait
stos
js
shrb
bound
aas
jp
sbb
js
sbb
decl
xchg
testb
hlt
les
mov
les
stc
aad
adc
mov
mov
ficomps
jmp
jg
test
cmp
adc
sahf
std
inc
incb
in
test
cwtl
movsb
mov
hlt
jg
jmp
mov
aam
fsubl
jle
mov
lods
add
insb
lea
test
std
lods
add
jmp
mov
lret
scas
jne
js
mov
int
inc
push
sbb
add
sub
bound
sub
push
inc
mov
jne
and
sarb
xchg
mov
lea
pushl
push
and
mov
dec
arpl
mov
push
cli
pop
dec
jmp
and
and
push
xor
fcoml
adc
mov
into
pushl
sub
rcrl
loopne
or
jp
inc
sti
insb
inc
cs
movsb
andb
jg
pushf
cli
movsl
ljmp
in
cmp
shl
repnz
mov
push
loope
cmp
loop
in
inc
mov
mov
imul
jmp
lcall
ljmp
adc
mov
mov
lds
push
jo
shl
call
jl
push
sbb
push
fstpt
add
jno
mov
jae
cmp
decl
jmp
fldenv
jb
sbb
loop
pusha
dec
mov
jb
push
inc
lods
push
fld
std
call
push
loop
inc
mov
outsb
push
imul
dec
daa
mov
loope
sar
mov
lds
shr
jmp
int
dec
or
push
dec
mov
fwait
outsl
repz
js
cmpsl
in
xchg
les
fucomip
dec
psrad
dec
insl
popf
adc
sub
jne
mov
incl
push
mov
mov
iret
clc
clc
mov
jae
rcll
adc
lock
cli
and
mov
lret
enter
sbb
sar
movsl
pop
loopne
xchg
or
test
mov
dec
inc
call
lret
sub
mov
and
sub
or
lcall
add
lcall
cmpb
icebp
push
inc
xor
push
inc
push
add
xchg
call
lea
fadd
sub
fadds
lret
jmp
mov
cmp
mov
push
pop
js
lock
push
testl
pop
push
ljmp
call
ror
out
mov
in
loop
aam
mov
mov
inc
mov
incl
cld
push
mov
or
adc
cmp
js
imul
into
lcall
lcall
xchg
push
xchg
pop
inc
push
pushf
jnp
jae
pop
sub
or
pop
out
sub
push
jo
enter
sbbl
cmp
cmp
les
aaa
aaa
clc
call
add
mov
hlt
fistpll
mov
sbb
sub
ret
cmp
dec
xor
fidivs
fisttpll
pop
imul
mov
jae
js
jg
adc
pop
out
jp
ret
or
in
mov
fucomip
mov
xlat
xchg
hlt
sti
or
mull
xor
jge
ljmp
in
fwait
mov
mov
lahf
xchg
into
ljmp
cmp
cld
jle
jmp
mov
push
add
movsl
outsl
mov
inc
add
lods
jge
loopne
clc
sbb
incl
ds
test
enter
test
push
push
ljmp
adc
dec
sub
repz
push
inc
ljmp
jmp
or
ljmp
and
mov
enter
mov
mov
jne
dec
push
xor
ret
inc
ret
pop
mov
jns
clc
inc
jnp
add
ds
lock
cmp
fwait
mulb
push
mov
cmp
lods
pop
mov
es
jecxz
mov
iret
adc
decl
jns
push
hlt
xchg
ja
adc
jnp
mov
xor
idivb
cmpsb
mov
mov
outsb
sub
sbbl
push
xchg
mov
arpl
aad
jle
imul
or
add
movsb
lret
repz
add
call
loop
push
adc
mov
mov
test
push
push
mov
clc
lods
ljmp
jle
pop
dec
scas
add
cmp
xor
test
pushl
xchg
mov
clts
adc
adc
inc
adc
loopne
loope
das
das
ret
fs
push
pushl
sub
adcl
addl
add
jae
outsb
inc
decl
adc
dec
ret
add
add
fisttps
loopne
xlat
or
mov
cmp
dec
xchg
mov
inc
dec
push
outsb
jmp
pushf
jl
sbb
cmc
mov
or
jb
pop
jg
jg
dec
inc
cmp
ds
clc
sub
insb
adc
decl
in
in
stos
jb
out
pop
sub
fldcw
dec
pop
notb
mov
nop
pop
outsb
jne
loopne
mov
lock
sub
dec
loopne
fucomip
jnp
dec
mov
data16
pushf
push
lods
push
enter
lea
in
xor
rorl
mov
jg
sbb
jnp
mov
and
cmp
add
ljmp
or
dec
insb
in
std
lock
jnp
in
jecxz
shll
lock
pop
cmp
mov
decl
ds
mov
cmp
bound
pushl
cmp
cli
and
loop
lret
hlt
in
mov
popf
cmp
popa
xor
rcll
das
cmc
jmp
mov
loope
out
jle
jne
inc
inc
stos
add
test
ljmp
lock
les
mov
xor
std
lcall
or
mov
lods
push
and
lods
stc
test
inc
cmpps
insb
mov
xor
adc
subb
sub
lods
hlt
cmp
out
negb
xor
dec
fistpl
pushl
test
stc
mov
xchg
dec
inc
push
add
shlb
or
or
jmp
lds
sub
adc
fldl2t
adc
nop
dec
and
imul
call
dec
mov
mov
nop
outsl
ja
adc
pushf
bound
pop
cli
lcall
add
xor
mov
mov
push
add
jg
push
stc
jp
jp
leave
jo
and
xor
push
mov
mov
jmp
push
push
inc
flds
leave
dec
push
fsubrl
inc
aas
outsb
push
loope
mov
xchg
cmp
lods
cmpsl
fs
xlat
loope
popf
xchg
sbb
cmp
movsl
xchg
addr16
fdiv
ljmp
aad
icebp
in
mov
bound
ljmp
mov
adc
aas
lret
and
jmp
fs
mov
xchg
push
ss
or
popa
test
aad
cmp
or
incl
jno
xor
pop
sbb
sub
xor
ljmp
sbb
inc
adc
nop
inc
popa
stos
or
xor
std
dec
out
in
xchg
lret
test
ljmp
cmc
in
lret
cli
scas
lcall
popf
and
fisttpl
add
std
jg
sub
std
subl
push
gs
loop
push
xor
adc
jge
std
outsl
std
cmp
add
sbb
jp
cltd
mov
sbb
sbb
inc
cld
leave
and
push
ret
fisttpl
mov
cs
call
xor
xor
mov
movsb
mov
jp
mov
push
fimull
sbb
shlb
incl
mov
jbe
stos
and
in
pop
stos
pop
inc
ds
jno
cmpsb
cmpsl
faddl
sbb
lcall
pusha
dec
mov
fidivrl
cld
je
rcr
fiaddl
stc
jmp
bsr
inc
in
push
ja
scas
pushf
movsl
leave
sub
daa
add
mov
mov
iret
xchg
mov
jg
push
sbb
leave
int
lret
aam
and
push
shll
pusha
or
ret
and
ljmp
cli
es
cmc
add
xchg
sti
dec
std
mov
mov
xor
mov
outsl
mov
repnz
aad
dec
stos
lret
mov
pop
fdiv
push
cmp
mov
adc
rcll
dec
xor
loop
xchg
incl
jg
out
mov
addr16
rcll
stos
fisttps
add
lcall
pushl
in
inc
lahf
fdivr
or
lcall
scas
sub
pop
push
inc
fdivr
mov
xchg
aaa
jmp
cmp
mov
dec
push
mov
jno
push
inc
pop
cmp
call
ljmp
mov
xchg
dec
enter
and
subb
pop
cmp
inc
mov
sbb
xlat
fucomip
dec
mov
divb
mov
rolb
out
jo
ret
shl
or
testb
cltd
test
add
les
dec
pushl
cli
cmp
mov
sub
fwait
pop
adc
xchg
shll
andb
decl
cmc
shlb
push
jecxz
das
andl
clc
jns
or
xchg
xor
into
insl
clc
and
lds
sahf
push
push
cli
fwait
out
xchg
ficompl
pushl
push
in
mov
push
fs
or
inc
in
xchg
dec
mov
std
mov
adc
mov
xor
sahf
jae
jne
movsl
lcall
jno
lret
insl
fnstcw
lret
mov
mov
mov
rclb
jl
sub
pushf
xchg
das
mov
push
jne
mov
xor
jecxz
subl
incl
movsb
push
addr16
fwait
jne
pop
inc
notb
loop
xor
das
pop
mov
cltd
out
pusha
lcall
xor
sbbb
dec
jo
sbbb
sub
or
sar
lcall
cli
or
scas
mov
pop
lods
mov
sub
mov
pop
leave
mov
sbb
das
push
out
cmp
lea
shll
mov
fst
sub
add
xor
vcvtss2si
xor
vandps
stos
mov
movsb
mov
lcall
stc
sub
in
ret
hlt
in
add
outsb
icebp
int3
mov
push
std
jg
xchg
pusha
in
call
orb
jnp
out
cli
cmp
addr16
lahf
sar
and
mov
lahf
aam
push
sub
pop
jg
call
popa
imul
into
lea
mov
shlb
clc
addb
mov
cmpsb
sbb
ljmp
and
push
out
lahf
mov
sub
hlt
jg
pop
jecxz
lds
mul
cmp
test
movsl
push
movsb
add
in
mov
ljmp
aad
xorl
inc
out
repnz
sti
popf
fisubrl
pushl
rcll
or
jmp
pop
mov
mov
test
xchg
adc
lock
mov
jg
push
inc
push
push
clc
pusha
mov
in
cs
fdivr
and
leave
adc
je
lea
jns
pushfw
push
loopne
repnz
adc
mov
pop
aam
repz
xor
mov
ret
add
mov
loop
pushl
cmc
mov
jbe
ret
imul
mov
popa
or
and
ud0
decl
dec
movl
mov
cwtl
mov
ret
cmp
add
ja
mov
mov
xchg
les
add
jo
add
ljmp
mov
fnstsw
dec
sbb
outsl
adc
pop
ret
cmp
cmpsb
call
jmp
mov
loope
jecxz
jbe
ret
push
dec
sbb
adc
cmp
mov
int
js
adc
mov
popf
lcall
mov
xchg
ss
js
ss
lea
adc
dec
roll
aad
std
xor
scas
or
imul
loope
sar
push
jl
jno
jnp
push
mov
sub
adc
or
push
dec
cmp
xchg
clc
decl
lret
sbb
sarl
lret
xor
cwtl
repz
mov
mov
lds
call
bound
mov
cmp
mov
jle
fmuls
fnstenv
leave
sahf
sbb
call
inc
leave
xor
daa
jb
or
mov
cmp
call
pop
push
sub
cli
jp
out
out
jne
pop
xchg
mov
stc
mov
icebp
inc
ds
xchg
mov
pop
pop
scas
daa
cwtl
push
inc
icebp
lock
lret
or
xchg
outsl
enter
push
adc
call
pop
aas
pop
cmp
ds
mov
pushf
outsb
mov
add
xor
mov
push
sahf
mov
dec
mov
mov
clc
jecxz
ret
or
fsts
xlat
std
jmp
dec
stc
sub
mov
dec
repnz
call
ljmp
cwtl
mov
lret
jmp
mov
insb
jnp
enter
ljmp
movsl
pop
mov
pop
dec
mov
aad
pop
ja
aas
mov
mov
ljmp
jle
push
inc
fcomps
into
add
dec
out
pop
push
mov
nop
les
lcall
rorb
std
pop
adc
aam
or
enter
adc
pushf
sub
pop
xchg
cli
call
sti
mov
inc
or
dec
mov
incl
loopne
adc
mov
and
mov
push
dec
xchg
aad
pop
in
cltd
jmp
xlat
inc
iret
add
jg
outsl
lods
gs
dec
fucomi
lods
push
adc
mov
dec
sbb
sbb
inc
or
jg
lcall
push
add
pop
fwait
pop
jecxz
ss
clc
cmpsl
test
bnd
decl
call
dec
xchg
cld
sahf
add
sbb
ljmp
add
filds
lock
jg
sbb
add
mov
js
scas
dec
mov
sbb
inc
jo
xchg
add
xchg
call
incl
adc
imull
mov
xor
daa
repnz
mov
das
lock
incl
jp
ret
sub
push
cwtl
ret
xchg
adc
rcrl
inc
mov
outsl
icebp
imul
sub
stc
lret
or
bound
inc
sub
pop
push
les
jmp
mov
mov
fisubl
pop
cmp
add
or
lret
rcr
mov
ficoml
scas
cmp
shrl
or
jmp
popa
sarb
stc
cli
xchg
filds
mov
push
lret
or
incl
cld
push
add
push
int3
and
fistps
push
nop
jl
jno
lcall
push
xor
push
adc
sbb
jg
out
out
loopne
cmp
movsb
xchg
cwtl
lcall
dec
lds
mov
mov
mov
cmp
pop
push
cld
mov
jmp
mov
or
mov
lds
jge
jnp,pt
setne
inc
inc
or
mov
cmp
inc
fmul
stos
xchg
das
lcall
aaa
xchg
data16
jmp
xchg
jge
push
sbb
xchg
inc
or
mov
decl
int3
and
idivb
sbb
fsts
cmpsb
ja
arpl
data16
fildll
pop
in
or
mov
aam
loop
mov
shl
adc
rolb
or
push
cmp
cmp
jecxz
je
fadd
dec
out
cmp
mov
push
pop
es
lods
xor
dec
sub
xchg
loope
jle
cmp
xchg
sbb
xchg
cmp
shl
sbb
pop
clc
cmp
dec
push
jb
stos
and
test
pop
push
pop
xchg
jp
xor
incl
add
outsb
rcl
outsl
dec
mov
jg
or
jb
or
jg
ljmp
hlt
loopne
frndint
daa
js
pop
xor
push
inc
call
sub
je
fsubl
mov
hlt
xchg
xchg
stos
iret
pop
dec
mov
bound
mov
idivb
xor
jg
or
inc
addr16
imul
xor
add
mov
mov
ljmp
ds
inc
test
cmc
adc
dec
push
xor
inc
out
aam
xchg
shll
ds
dec
std
xchg
jae
and
iret
cld
mov
dec
decb
jp
pop
call
cmp
cmp
outsl
add
inc
sahf
ret
or
lock
jecxz
in
mov
dec
and
xchg
ret
call
xchg
dec
adc
mov
lahf
xor
imul
or
add
sub
jmp
lret
sti
jno
jns
sahf
lds
fidivs
dec
shll
ficoml
adc
dec
push
jmp
ljmp
mov
dec
movsl
pusha
push
mov
inc
or
dec
dec
sub
push
stos
pop
jg
call
rcll
mov
adcl
sbb
pushf
aam
ljmp
int3
js
in
mov
popa
pop
incl
adcl
lcall
and
push
mov
push
dec
outsb
adc
icebp
xchg
cmpsl
leave
outsb
fsubs
xchg
jle
lret
rorl
xchg
mov
push
adc
incl
cmpsl
cmp
iret
mov
sub
cmp
aaa
adc
xor
incl
cmp
add
arpl
cli
push
mov
incl
push
push
lea
cmpsb
in
mov
xchg
mov
or
add
incl
stc
out
lock
cmc
mov
ljmp
nop
filds
jns
jg
dec
lds
push
inc
add
aaa
sub
jle
mov
fistps
push
in
pop
ds
pop
pop
call
hlt
push
mov
jo
test
dec
inc
lods
adc
jp
into
in
shlb
or
mov
fmuls
decl
scas
cmpsb
adc
mov
xchg
push
mov
sub
jg
ljmp
sub
fs
add
pop
pop
cld
xchg
insl
cmp
and
jns
xchg
cli
add
movl
les
mov
pop
mov
mov
xchg
jmp
loope
ja
fmuls
sbb
pop
loop
jae
mov
jg
out
inc
callw
jns
rorb
insl
rcrb
fldcw
pop
push
loopne
imul
shll
lods
jg
mov
xchg
mov
add
jmp
fdivrp
call
adc
cs
js
roll
inc
cmp
mov
movsb
jge
movsb
add
mov
xchg
mov
push
mov
mov
scas
into
insb
insb
mov
in
cwtl
les
pop
adc
test
inc
insb
in
loope
cmp
mov
in
fwait
dec
mov
mov
lret
sub
stc
mov
push
out
scas
insl
inc
shrl
mov
ljmp
cltd
mov
mov
cmpsb
test
and
popf
pop
and
fwait
lods
mov
cmp
jae
decl
push
sbb
in
in
mov
adc
div
enter
and
push
jmp
pop
out
push
adc
pop
in
scas
fstl
jmp
inc
pusha
lcall
inc
mov
aad
repnz
outsb
and
mov
push
jbe
lcall
xchg
scas
loope
fiadds
aam
stc
in
inc
mov
push
lock
das
lahf
std
xchg
adc
xor
mov
push
mov
dec
xor
pop
push
pop
cmpsb
push
das
jle
mov
sbb
mov
hlt
ljmp
xlat
decl
ds
cli
nop
sbb
test
divb
popa
push
sub
popf
or
lods
jmp
outsl
cmc
fisubrl
pushf
xchg
out
push
adc
adc
pop
loopne
loope
mov
std
cltd
and
sub
and
mov
mov
sbb
xchg
mov
loope
mov
dec
out
xor
or
stc
mov
pop
jle
jecxz
or
int3
pop
push
clc
cmp
mov
ljmp
icebp
incl
jne
out
fsubrs
xor
jae
dec
pop
lcall
jg
inc
outsl
ds
pushf
cmp
lret
mov
xchg
imul
femms
or
fnstcw
jnp
cmpsl
fistpll
jl
movb
pop
cli
mov
call
sbb
into
push
inc
cmp
mov
daa
shlb
scas
sub
mov
sbb
stc
sub
mov
push
jae
cmp
xlat
lret
dec
jg
jg
inc
ds
or
mov
cs
loope
sbbl
lea
hlt
outsl
das
hlt
arpl
xor
push
test
xchg
in
imul
jg
int3
jo
xor
call
dec
mov
into
call
idivl
dec
sub
inc
jnp
addr16
out
mov
repnz
scas
std
jbe
call
decl
or
pushf
gs
ret
mov
lcall
xorb
scas
dec
ficompl
inc
inc
push
clc
xchg
test
std
mov
clc
sub
in
mov
pop
mov
hlt
mov
std
pop
ljmp
mov
cmp
pop
pop
jmp
cli
lcall
std
data16
loop
push
mov
ret
inc
enter
cmp
cmp
mov
movsb
scas
xchg
mov
bound
mov
add
lahf
sub
cld
adcb
jg
lahf
add
inc
idivl
mov
aaa
xchg
clc
inc
scas
push
xchg
pop
loope
in
test
cli
jge
sar
js
cmpsb
fadd
jmp
test
out
outsl
xor
ss
sub
or
dec
or
adc
jg
testb
push
mov
mov
mov
adc
push
lcall
sahf
or
jp
xchg
clc
mov
push
adc
dec
xor
cmpsl
fdivrs
loopne
jl
push
clc
inc
and
adc
aaa
jge
andl
add
or
add
movl
jnp
xor
lcall
sti
or
cltd
sbb
pop
mov
sti
int
scas
aaa
fs
std
add
imul
std
pushl
sub
xor
jne
sbb
and
fstp
xchg
fidivl
cld
mov
dec
mov
xchg
outsl
lret
fildl
inc
sub
inc
aaa
clc
pushl
sub
push
or
jg
mov
in
fucom
jmp
sti
sbb
pop
pop
mov
dec
mov
push
xchg
aad
pusha
dec
mov
jg
in
lret
mov
xlat
pop
jo
fsubl
mov
xor
call
test
push
mov
xchg
aaa
cli
int
cltd
jp
test
fnsave
jnp
mov
push
aad
pop
dec
jl
enter
mov
daa
test
nop
adc
movsl
xchg
mov
mov
mov
scas
jnp
dec
jnp
inc
pop
xchg
pushl
push
xchg
lods
ds
cmp
cli
sub
mov
inc
or
fsubrl
sar
xor
lods
xchg
push
jl
mov
adc
outsb
dec
sbb
incl
jne
insb
shl
out
mov
push
xor
xchg
ja
cmp
insb
mov
xor
decl
jge
arpl
dec
faddl
sti
lods
adc
cmpsl
jmp
add
mov
loope
incl
sbb
sbb
fsubrl
nop
and
pop
push
and
jg
ret
mov
repnz
cmpsb
inc
mov
mov
mov
nop
fnstsw
push
and
pop
mulb
cwtl
imulb
icebp
rcl
mov
inc
pop
rcll
cmp
lret
dec
pop
aam
pop
loop
jns
sbb
cmp
stc
sti
aam
sub
sub
aam
mov
incl
cmp
push
or
mov
jge,pn
sti
jge
out
pop
out
pop
mov
cmpsl
cmp
out
in
repz
aam
decl
xchg
mov
sahf
pop
movsl
mov
cmp
daa
inc
push
xchg
movsl
cmp
lcall
mov
iret
rorb
out
outsl
xchg
ja
popf
mov
lcall
sbb
daa
leave
jnp
scas
idiv
push
dec
das
push
push
mov
mov
xchg
dec
push
pop
call
sbb
les
push
sub
shl
sub
dec
fsubp
pop
mov
loope
fdiv
ljmp
mov
jnp
xor
pop
and
push
andl
mov
xchg
cli
flds
js
mov
das
sbb
cli
xchg
push
mov
ljmp
aam
jmp
ret
in
std
rorb
and
cmp
xor
ret
sub
mov
xchg
jno
push
mov
cmp
incl
jp
xchg
cs
imul
add
xchg
mov
stc
jg,pn
lret
jecxz
test
mov
scas
adc
xor
or
movsb
incl
out
mov
imul
aam
das
add
nop
cmp
ljmp
das
push
mov
dec
sub
jmp
add
or
sub
mov
les
pop
add
hlt
dec
dec
pop
mov
add
call
stc
dec
out
fmuls
mov
sub
lds
sub
jg
jns
hlt
decl
or
ret
out
and
mov
pop
jle
adc
jle
xchg
inc
sub
fiadds
test
mov
in
pop
shll
jne
add
stc
out
sti
mov
add
or
xchg
pop
fucomi
in
aad
mov
aad
das
movsb
pop
insl
fistpl
xchg
mov
hlt
fadds
or
cltd
mov
jmp
jle
les
call
ret
sbb
and
mov
lret
fbstp
push
push
rorb
cli
lock
loopne
xlat
push
pop
and
xor
mov
cmp
out
adc
cld
jae
push
cs
dec
aas
xor
int
test
xchg
ja
and
mov
push
out
ljmp
cmpsb
cmp
jmp
dec
ljmp
lock
cld
and
push
iret
jnp
fisttpll
in
pop
jle
testb
pop
ljmp
add
cltd
jecxz
cmp
mov
xor
sbb
lods
mov
push
xor
inc
das
or
jmp
enter
pop
lock
icebp
idiv
decl
out
mov
mov
mov
jecxz
int
and
decl
das
pop
loop
fsubr
movsl
repz
sbb
dec
pop
cs
pop
add
dec
std
das
push
dec
test
pop
sub
push
mov
call
push
sbb
movsb
adc
pusha
dec
lods
insl
jge
sbb
mov
xchg
mov
js
leave
pop
loopne
incl
sub
xchg
xchg
mov
sub
inc
es
call
push
test
lods
shr
icebp
es
jmp
mov
push
mov
decl
xchg
and
gs
enter
fs
mov
inc
and
sahf
xor
inc
cmp
ficompl
pop
dec
call
movsl
mov
mov
dec
pop
sbb
cs
adc
filds
fsubrp
call
test
in
xor
decl
cmp
adcl
jle
jne
decl
or
mov
pop
adc
sar
add
in
dec
sbb
xchg
pop
cli
fmull
pop
call
xchg
popf
xchg
cmove
mov
lcallw
cmp
push
fstl
mov
cld
clc
call
out
out
sbb
mov
ds
pusha
cmpsl
aam
pop
stos
aas
or
inc
ljmp
cld
aaa
rolb
pop
int3
test
scas
xor
mov
dec
push
pop
std
jmp
pop
jnp
mov
rolb
or
mov
mov
xor
shl
add
sub
xchg
aam
inc
sbb
fwait
arpl
outsb
sub
decl
cs
sbb
fistpll
jmp
gs
mov
fcoms
insb
lods
hlt
or
mov
and
cmp
pop
lock
lahf
clc
sti
in
mov
loop
xor
push
insb
add
xchg
mov
lcall
rcr
arpl
outsl
mov
sub
sub
jg
pop
insl
or
mov
inc
jbe
int3
mov
add
xchg
cmp
decl
pop
xorl
loopne
repnz
dec
mov
xchg
add
cmp
stos
mov
pop
jp
mov
fcmovb
aaa
iret
lahf
mov
mov
mov
lods
jl
rcrl
pop
ljmp
jge
arpl
lret
pop
clc
jb
and
push
daa
rcrb
jmp
adc
in
fadds
and
jmp
loopne
lcall
mov
and
sub
lcall
lea
dec
dec
dec
mov
out
divl
aas
fisttps
mov
mov
popa
loope
fiadds
jg
pushl
lods
aad
inc
sub
lods
mov
bound
jnp
jb
or
cmp
negb
mov
cmpsb
mov
fistps
loopne
lcall
std
call
leave
sbbl
lret
jb
lcall
cltd
icebp
sub
ljmp
shrl
dec
mov
leave
daa
or
stos
mov
mov
aaa
cmp
fdivl
cmp
sbb
ret
test
mov
clc
es
lock
fstpt
or
jp
add
xchg
sub
xor
adc
popa
pop
jbe
pop
or
fisttpl
mov
jnp
ljmp
repnz
jae
or
sub
and
cmpsb
lds
mov
dec
inc
mov
pop
sub
in
std
rol
jmp
out
mov
pushf
shl
or
xor
call
iret
pop
ret
jle
ljmp
push
scas
mov
test
pushl
lahf
add
shlb
push
stos
or
nop
adc
fadds
cld
out
sbb
push
sbb
aad
mov
addr16
out
lahf
sar
stos
js,pn
mov
ret
call
stos
sub
incl
icebp
enter
aas
push
cmp
clc
jae
cmp
mov
das
les
mov
mov
dec
cmp
jbe
sub
cmpsl
sbb
push
push
cmp
mov
adc
jbe
incl
sahf
jo
scas
or
lods
pop
mov
mov
movsl
gs
insl
mov
call
jecxz
mov
iret
sbb
add
ljmp
push
out
fdivr
mov
push
js
mov
in
imul
mov
pop
test
adc
daa
cwtl
sub
push
cld
mov
push
aaa
shrl
aad
sub
sub
fcmove
dec
std
ret
data16
xchg
inc
test
shlb
sub
cmp
decl
inc
pop
pushf
jge
leave
mov
or
frstor
ljmp
in
pushl
cs
jmp
rcrl
adc
or
mov
cmpsb
mov
out
xor
incl
fsubrp
testl
jno
out
push
mov
out
cmc
pop
aam
repnz
in
mov
sub
sub
xchg
ljmp
pop
std
decl
scas
jecxz
loopne
addr16
mov
xor
push
out
xor
push
mov
pop
ljmp
fbstp
sbb
aaa
loope
mov
push
arpl
inc
pop
pop
add
cwtl
dec
test
cmp
jb
in
and
jg
je
push
and
insl
dec
cmp
xlat
mov
popa
adcb
jae
pushf
nop
shll
jge
int
push
ja
push
mov
adc
lea
dec
pushl
jns
movsb
les
aas
fcos
jg
mov
sub
insl
je
add
dec
fldenv
pop
push
push
mov
int
mov
es
cmp
popf
mov
test
ljmp
xchg
shl
adc
movsl
jg
or
int
mov
add
ss
jg
xor
pop
sarl
and
scas
leave
mov
fstps
aad
nop
clc
xlat
sbb
ljmp
sub
ss
pop
ficoml
xchg
mov
fwait
mov
push
push
add
cmp
es
jmp
enter
mov
in
sbb
fidivrl
xlat
dec
les
sar
sbb
sub
call
in
pop
std
push
inc
mov
call
xor
movsl
mov
dec
mov
pop
pop
cld
lods
xorl
cmc
loopne
pusha
xor
cmc
out
negb
pushl
sbb
aaa
lods
test
enter
pop
in
ljmp
pop
lods
xchg
mov
cld
xchg
pop
mov
cs
push
lock
xchg
cwtl
or
lcall
fwait
jmp
or
mov
je
pusha
dec
pop
mov
iret
add
mov
xchg
imul
mov
cltd
mov
cmc
popf
scas
xchg
inc
mov
dec
push
push
jo
ror
push
adc
stos
xlat
ret
cmp
or
cmp
cmp
add
insl
incl
fwait
pop
mov
xor
lahf
mov
jmp
lea
pop
cwtl
mov
sti
out
pusha
lods
stos
push
xchg
into
rep
mov
negl
xor
push
pop
jmp
inc
rorl
sahf
out
and
cmpsl
data16
jbe
iret
call
daa
mov
flds
sbb
cmp
add
dec
jmp
outsb
push
mov
jo
ret
jbe
jne
xor
xor
into
fcmovne
inc
mov
icebp
mov
mov
push
loopne
mov
insb
fcoml
incl
in
dec
mov
push
int3
rep
cmpb
sub
outsl
lock
jns,pt
test
das
jno
clc
cmc
lock
ffreep
adc
loop
mov
dec
out
xor
jnp
out
pop
jg
push
je
and
ds
or
sahf
sbb
movsb
mov
sar
mov
jg,pt
clc
push
lea
jns
xchg
pop
or
xor
movsb
jae
adc
mov
ljmp
hlt
jmp
std
loopne
loopne
loope
loopne
cmp
data16
push
or
or
mov
pop
clc
pushl
xchg
mov
lret
inc
sbb
xchg
push
xchg
push
lods
int3
test
ljmp
nop
mov
sub
aas
jbe
lods
call
and
in
in
mov
xchg
jbe
adc
jae
mov
out
test
decl
dec
pop
jl
gs
mov
sbb
mov
jae
xor
jg
incl
repz
push
sbb
push
aas
fstpl
int
loop
popa
call
sbb
addr16
mov
sbb
inc
fildll
pop
test
fbld
sub
mov
icebp
das
mov
clc
cld
ljmp
inc
out
sub
jp
mov
in
dec
in
sub
loope
mov
test
mov
incb
add
lcall
incl
cmpsb
call
out
add
rcrb
jp
out
pop
pop
adcb
push
cli
call
xor
sub
cmp
stos
dec
aas
sub
outsb
lods
push
rol
xchg
popa
sub
movsl
pop
mov
xor
scas
loopne
loope
lods
decl
or
idivl
xchg
scas
push
pop
dec
sar
dec
lcall
push
cmovge
ds
fwait
popl
mov
rol
mov
mov
mov
inc
lahf
inc
push
push
xchg
pop
sub
adc
xchg
and
cwtl
negl
jne
add
or
shlb
sub
fsubs
fidivs
gs
cmpsl
outsl
jno
scas
jp
clc
rorb
call
push
iret
bound
cli
int
es
out
int
push
jno
and
fwait
and
adc
mov
jmp
call
mov
sbb
dec
movsb
test
outsb
lret
scas
cli
and
jmp
ret
mov
mov
jnp
push
dec
leave
lods
daa
push
adc
dec
gs
out
fwait
sub
mov
fdivs
lahf
push
int
xor
xchg
xchg
mov
and
repnz
pop
pop
mov
das
cmc
pop
mov
push
sub
sub
mov
rolb
movsl
fnsave
out
sbb
call
lret
jne
mov
mov
push
flds
xor
pop
mov
lret
pushl
mov
jmp
sub
or
pusha
aas
xchg
inc
mov
dec
call
in
xchg
xor
lret
imul
les
xchg
icebp
mov
pusha
adc
xor
test
pushl
mov
sub
mov
stc
imul
mov
jecxz
cmp
mov
inc
not
push
dec
sbb
icebp
cmc
mov
xchg
cli
cmp
rorl
cmp
mov
das
fstps
push
lods
jl
cmpsl
xchg
xor
int3
lcall
pop
data16
mov
lds
insl
call
fsub
pop
cwtl
mov
push
movsb
mov
mov
mov
adc
cmp
imul
add
jecxz
and
int
jg
ljmp
lcall
xchg
and
pop
pop
loope
jmp
xchg
push
daa
fcmovu
xchg
je
xchg
cmp
xchg
in
fstps
push
pop
fwait
dec
outsl
sbbb
mov
jmp
sbb
jne
lahf
out
jecxz
xchg
adc
fs
fiadds
xchg
cmpsb
lcall
imul
out
hlt
push
ret
jge
mov
iret
fadd
popf
fistps
or
push
jmp
fists
test
and
push
xor
push
cli
arpl
ljmp
mov
incl
sbb
int3
ljmp
jbe
push
lahf
pop
rcl
and
sahf
cmp
movsb
add
mov
mov
ss
bound
pop
xor
ret
iret
dec
cld
pop
call
xchg
push
jo
dec
in
pop
test
push
test
mov
mov
ljmp
ljmp
out
mov
icebp
sar
decl
jnp
mov
popa
scas
sub
cmp
shll
jg
mov
pop
push
mov
sub
jae
mov
sub
stos
std
push
push
cmpsl
mov
lea
inc
pop
adc
or
orl
test
jle
xor
aam
xor
stos
sahf
mov
push
jg
addl
test
in
idivb
jb
or
addr16
in
mov
jg
sti
fwait
push
add
jb
push
cltd
xchg
and
dec
xchg
imul
test
test
push
stos
out
jb
lcall
test
lock
aam
cmc
lret
stc
xor
mov
ret
mov
fwait
clc
sbb
push
mov
lods
dec
pop
call
sbb
jp
jmp
stc
sub
popa
pushf
cld
cld
test
xchg
push
or
popf
aad
mov
xlat
sbb
cmp
dec
jecxz
xchg
push
or
js
xor
lcall
incb
cltd
fs
xchg
add
xor
pusha
insl
jns
nopl
mov
js
dec
scas
jg
xchg
xchg
sbb
mov
addl
inc
inc
jae
adc
shlb
ljmp
dec
cmp
lcall
pop
cmc
mov
das
std
fbld
cmp
call
in
or
xchg
ret
pop
adc
ja
sbb
sar
decl
in
inc
jle
mov
popf
cmp
stos
jo
add
adc
cli
std
jmp
pop
or
jbe
test
call
dec
ljmp
outsb
sbb
dec
jns
in
inc
push
jecxz
jns
and
cli
mov
in
push
pop
inc
mov
xchg
mov
pop
xor
incl
aaa
jp
jecxz
and
shrb
cwtl
jno
inc
push
pop
insl
mov
fisttpl
fidivrs
lret
pop
mov
cmp
cmp
int3
push
sbb
adc
jns
loop
push
test
iret
cmc
sub
mov
pushl
jo
ret
loope
add
imul
stos
jne
xchg
arpl
call
call
insl
and
rcrb
xchg
cmpsb
xor
scas
mov
mov
lcall
xchg
mov
popf
ja
dec
movsl
cld
xlat
std
out
in
adc
dec
ljmp
jb
scas
js
out
insl
aad
cmp
inc
cmc
add
out
xchg
sub
jg
jmp
cwtl
rol
add
pop
pop
lods
dec
cmp
mov
dec
mov
stos
lcall
cmp
push
fildll
rclb
pop
rolb
mulb
adc
jne
mov
pop
sbb
arpl
mov
pop
inc
mov
rol
dec
pop
adc
pop
lcall
cld
push
xchg
dec
xchg
test
loop
cld
sbb
cld
sbb
push
dec
or
repz
pop
pop
fwait
xchg
add
xchg
jne
pop
pop
jb
ljmp
dec
leave
stc
sahf
call
sbb
lahf
in
mov
sbb
in
pushl
sahf
xchg
add
add
std
fwait
mov
lcall
jg
outsl
std
xchg
lcall
add
clc
mul
dec
inc
dec
pop
cli
adc
pop
call
sub
inc
pop
xor
addl
in
xchg
pop
xchg
and
das
xchg
decl
test
loope
jmp
bnd
cmp
lcall
push
jg
es
add
mov
jno
xchg
and
push
loop
scas
fimull
xor
inc
cmp
mov
dec
push
mov
add
mov
fucomi
pop
dec
in
inc
mov
das
cmc
cmpsl
xlat
fdivl
insb
stc
mov
and
leave
mov
dec
push
xchg
adcb
lock
pop
push
pop
shl
cmp
int
call
push
cmpl
jle
orw
in
push
mov
inc
insl
sbb
out
clc
loopne
jns
ljmp
or
jae
popf
scas
lock
xchg
xchg
hlt
mov
sarb
dec
push
loop
lds
pop
jnp
mov
mov
mov
stos
test
lret
adc
mov
mov
imul
pop
loop
pop
dec
clc
pushf
enter
dec
into
jb
clc
outsl
lods
lcall
inc
sub
add
add
lcall
inc
lcall
pop
xor
jo
mov
xchg
mov
popf
call
jmp
mov
inc
mov
into
movsb
fiadds
loopne
xchg
adc
jg
add
sbb
push
ljmp
mov
and
outsl
jmp
xchg
rorb
scas
xchg
std
mov
ljmp
cwtl
testl
gs
roll
mov
cmpsl
lret
das
cld
push
sahf
jp
pop
scas
outsl
add
sahf
rcl
adc
or
pop
cwtl
jb
xor
lcall
or
pop
sub
push
sti
add
cmp
inc
push
xor
jnp
lcall
icebp
dec
stos
push
ds
mov
out
cmp
cmp
mov
lcall
pop
mov
mov
inc
imul
jno
roll
cli
push
call
sbb
rorl
popf
lcall
mov
mov
push
cwtl
andb
pop
add
fwait
rcrl
lods
addr16
jg
incl
fdivrl
aas
dec
xchg
outsl
fs
lret
pushf
sbb
int
jne
mov
mov
xlat
pop
pusha
call
xor
inc
pop
mov
fmull
jns
and
repz
dec
pop
test
dec
pushl
inc
popf
xor
movsb
sub
or
out
pushf
jb
lea
mov
or
mov
pushl
pop
jae
mov
ficoml
or
jg
cmp
adc
adc
into
je
xlat
adc
cmpsb
lods
jg
jmp
mov
lcall
sub
mov
cwtl
sbb
adc
sub
scas
test
cmp
sbb
ljmp
cld
jmp
sub
fsubp
mov
lods
outsb
dec
out
xchg
push
sbb
mov
push
mov
frstor
jb
cmp
sub
or
les
scas
sar
mov
and
xchg
mov
lret
nop
and
jo
push
pop
aad
loope
aam
fisubrl
dec
in
xchg
cwtl
xchg
subb
jnp
clts
or
and
rep
pop
jg
and
ljmp
aas
jne
cmp
movsl
fsts
mov
decl
sub
jp
out
mov
jb
fsubrl
sub
call
test
gs
scas
cmp
jmp
imul
jo
pop
lret
mov
lods
adc
ljmp
cmp
add
xor
mov
sbb
cltd
add
jg
ljmp
aaa
das
imul
inc
outsl
cltd
aaa
js
int3
sbb
clc
ljmp
lock
outsb
out
push
insb
pop
dec
shl
enter
jo
push
setle
das
cld
call
adc
repnz
movsl
imul
aam
hlt
daa
push
dec
pushf
add
call
mov
mov
scas
mov
or
shlb
xor
lock
outsl
push
inc
inc
dec
fiadds
cmpsl
test
andl
xlat
sbb
adcl
pop
adc
xchg
mov
adc
adc
mov
testl
fisubrs
pushl
xor
outsb
rcr
scas
push
adc
stc
fld
or
or
sti
push
fucomip
mov
incl
sbb
sbb
jno
jp
jmp
pmaxsw
pusha
movsl
mov
pusha
cmp
mov
pop
jmp
int3
push
fisubl
push
loope
inc
add
dec
xor
test
pop
repnz
jmp
jg
call
jne
add
xor
fistpll
movsb
jg
incl
xchg
adc
mov
add
test
xchg
jecxz
fimuls
call
ja
add
lcall
push
aas
inc
mov
xchg
and
das
icebp
dec
dec
push
sbb
and
xchg
xchg
add
jnp
call
jp
xchg
push
and
pop
out
shr
inc
sub
cmpxchg
ret
int
jo
les
popf
test
jmp
cwtl
push
push
cmp
or
movsl
add
popf
je
lock
mov
jmp
cs
repz
dec
outsl
mov
jp
dec
ljmp
imul
adc
out
mov
fdivs
rcl
sbbl
and
stc
rcr
mov
scas
fisttpl
loop
ss
js
pop
xor
jns
xchg
cmp
mov
ret
nop
mov
push
push
call
in
sub
outsb
aam
mov
mov
mov
ljmp
aaa
jmp
mov
int3
xor
sbb
stos
dec
xchg
sbb
lahf
inc
add
xor
bound
dec
jg
xor
xlat
push
mov
inc
push
cmp
pop
test
movsl
pop
mov
ljmp
cmp
lcall
pop
into
mov
iret
fs
pop
pop
fcomp
push
push
mov
incl
sbb
jnp
insb
push
mov
stos
pop
call
cltd
mov
imul
in
stos
or
or
decl
mov
sbb
insl
loop
mov
xchg
mull
sarb
pusha
mov
es
cld
lret
repnz
or
ret
lods
mov
sbb
push
cli
cmp
test
push
xchg
pop
testl
ret
fildl
sub
inc
push
das
sub
ds
call
lock
ficomps
pop
rcrb
lcall
sub
inc
jnp
cld
ljmp
sbb
or
and
mov
data16
movsb
mov
mov
push
mov
inc
movsb
xchg
daa
pop
scas
je
jbe
aas
xor
lcall
leave
or
push
int3
cli
in
mov
loopne
lcall
out
mov
mov
ss
push
dec
fildll
mov
in
lea
lcall
lods
aam
jo
arpl
movsb
pop
lods
mov
inc
cmp
stos
incl
stos
gs
scas
mov
jne
cmp
movsb
inc
push
sub
imul
mov
and
adc
add
int3
lcall
adc
adc
adc
push
inc
lahf
jle
jmp
pop
cmp
mov
incl
xchg
xchg
sub
sub
sub
decb
jecxz
out
cld
adc
cld
mov
popa
test
out
addl
jle
leave
out
add
mov
mov
sub
out
mov
push
xchg
decl
push
jmp
pop
and
inc
inc
sub
sti
imul
cmp
mov
mov
dec
push
lods
dec
xchg
xchg
add
xorb
inc
cwtl
add
mov
xchg
xor
xchg
repz
jns
pop
sar
das
lock
mov
fs
popa
push
mov
ljmp
in
sub
or
int3
jo
outsl
cmp
adc
sarl
jg
fisubrl
sti
jg
aam
add
mov
mov
push
shr
pushl
popf
je
mov
or
nop
int
mov
mov
push
movsb
inc
pop
hlt
js
shll
je
and
sub
xor
pushl
mov
jg
in
out
and
xchg
mov
outsb
mov
int
lcall
mov
sbbl
loopne
jo
xchg
aam
test
fs
ljmp
paddusb
jb
push
aad
jge
and
cmp
adc
or
push
and
xchg
aad
fisttpll
fiaddl
jg
push
xor
mov
inc
fsubs
aam
and
aaa
sub
in
mov
icebp
mov
jne
and
inc
loopne
decl
jmp
inc
push
inc
xor
cltd
xchg
in
pop
dec
ret
cld
mov
push
and
aad
mov
mov
aam
sbb
shrb
push
jecxz
lcall
mov
adc
ljmp
mov
jo
aas
mov
dec
nop
out
adc
jl
mov
adc
dec
and
pusha
out
ret
xchg
adc
dec
dec
sub
std
sbb
decl
popf
and
leave
xchg
clc
or
pop
out
out
jle
pop
jg
ljmp
add
jg
add
dec
sbb
dec
dec
push
add
sar
pop
ljmp
mov
pop
out
mov
or
sti
push
mov
adc
inc
mov
outsb
pop
dec
inc
imul
push
incl
sub
sbb
lret
push
pop
jecxz
mov
lea
ljmp
ljmp
fildll
outsl
fsts
or
sbb
pop
pop
aaa
mov
in
jg
call
lcall
add
scas
pop
fwait
addb
mov
jno
adc
jmp
ja
inc
dec
call
sbb
adc
cli
xor
jb,pt
sub
inc
mov
or
add
dec
sbb
icebp
ljmp
test
in
pshufw
imul
movsb
sub
sbb
aad
js
je
cmpsl
fisubrs
movsl
pop
jg
pop
or
inc
jne
sbb
mov
mov
cld
jmp
jno
iret
add
int
mov
rcr
bound
inc
aad
out
sbb
adc
sti
fnsave
scas
dec
cmp
push
test
push
push
aaa
cli
jb
mov
inc
mov
fidivs
mov
and
xchg
lods
je
mov
lea
sbb
in
das
hlt
call
test
fcoml
push
int3
lret
push
aam
das
std
call
insb
nop
and
loope
jo
push
aas
mov
mov
sbb
loopne
loop
xchg
insl
or
mov
cmpsl
mov
dec
mov
add
out
aas
adc
mov
call
daa
push
adc
into
or
cmp
pop
jne
mov
movsl
outsb
sbb
mov
adc
imul
cmp
pop
negl
add
imul
mov
pop
and
push
push
mov
push
or
cli
pop
or
mov
push
dec
pushf
dec
cmc
vmaxsd
outsl
fs
push
pushf
mov
adc
movsb
outsl
sub
incl
test
dec
scas
xlat
lahf
rcrl
mov
sti
ljmp
rorl
mov
mov
inc
aad
lahf
mov
fdivrs
ljmp
fildll
sbb
adc
mov
dec
ret
fwait
repz
jns
mov
addr16
and
jnp
clc
nop
call
mov
mov
fiaddl
jbe
and
bound
mov
clc
push
sub
push
mov
out
pop
out
loop
pop
outsb
push
fwait
cltd
pusha
pop
jg
leave
push
xchg
out
inc
mov
cli
and
mov
add
ljmp
decl
pop
mov
lods
sbb
int3
lods
adc
pop
jne
gs
or
decl
aad
ret
je
cmc
outsb
sub
imul
cmc
insb
mov
jg
incl
ret
sbb
xchg
ret
or
call
incl
jle
sbb
stos
insl
xor
mov
cltd
iret
xchg
call
sbbb
lcall
inc
add
fcomps
out
mov
sub
cld
jae
sub
lock
push
mov
pushf
loope
dec
fsubl
std
and
sub
mov
adc
mov
push
pop
cltd
jae
pop
outsl
jne
push
cmpsb
inc
push
sub
lahf
decl
stos
stos
pop
testl
out
mov
lock
out
cmc
or
jp
xchg
int3
pop
out
lret
pushf
mov
push
lods
rcrl
lea
sarb
push
outsl
push
push
and
movsb
add
test
pushl
js
repnz
and
incl
and
dec
cmp
loopne
mov
aas
add
sbb
pop
mov
fsubs
mov
xor
pop
stc
ret
dec
mov
pop
insb
jecxz
lods
pop
incl
in
or
fistpll
push
movsb
adc
repz
dec
cltd
inc
decl
sub
scas
in
xlat
mov
aas
enter
dec
pop
jle
push
mov
or
stos
addr16
cs
pushl
mov
ds
mov
ret
xchg
hlt
push
adc
repnz
outsb
xchg
push
decl
push
out
mov
pop
mov
into
bnd
out
or
mov
cli
outsl
cld
jae,pn
xchg
aas
pop
pop
fbld
sbb
daa
scas
loope
pop
out
pusha
mov
vmovdqa
and
inc
imul
inc
pushl
call
xlat
xchg
pop
ja
xchg
cmp
pusha
int3
jmp
hlt
mov
addr16
loopne
jbe
es
push
hlt
ljmp
mov
jge
cmc
mov
jge
jl
inc
cmpsl
push
decl
flds
jne
mov
sbb
xchg
insl
mov
dec
mov
out
adc
dec
sti
incl
cmpsb
push
insl
mov
push
aad
adc
jp
inc
pop
mov
or
inc
add
decl
lods
jns
push
sbb
sbb
xchg
es
xchg
mov
mov
fidivrl
jecxz
jmp
pusha
adc
xchg
ljmp
adc
fmull
xchg
loopne
fnstsw
or
call
mov
mov
iret
jmp
sbb
push
test
lds
sub
jae
ss
in
jb
cmp
sbb
std
int3
push
lcall
rclb
xor
pop
xchg
add
and
cmp
sub
or
mov
rorb
bound
aas
test
fcomp
xor
das
lock
insl
pushf
and
test
sub
dec
dec
enter
xchg
ss
rcr
jl
ljmp
mov
dec
lock
iret
xchg
pop
dec
fiaddl
fisubs
jns
decb
ret
cmp
imull
dec
fs
sub
fxch
or
ret
inc
cmpsb
mov
xor
in
dec
out
inc
xchg
cmp
cmpsb
mov
gs
call
mov
scas
jl
leave
jge
pop
dec
add
in
dec
mov
jp
call
dec
push
push
iret
inc
pop
push
popf
lret
mov
add
arpl
jmp
stos
lds
cld
call
pop
cli
in
or
shr
fisubrs
cmp
outsl
mov
xchg
fisubs
test
shll
adc
inc
lods
add
into
adc
out
xor
sub
jg
add
pop
iret
cmpsb
lods
cmc
xor
scas
jle
cmp
fbstp
test
lcall
std
adc
cmp
call
jmp
fstpt
fcmovu
sbbl
les
sbb
mov
push
aaa
mov
push
mov
jb
jg
pop
sti
dec
add
cmp
jno
jne
mov
lret
int
inc
aas
jmp
jg
lret
mov
add
inc
lock
mov
jle
dec
dec
addr16
mov
mov
std
hlt
fnstenv
cli
mov
leave
xchg
mov
test
out
dec
xor
and
jmp
add
jno
and
push
jno
push
and
push
lret
push
sbb
add
mov
lock
outsl
hlt
cmp
or
lcall
push
mov
daa
enter
jp
xor
je
lcall
mov
inc
push
test
xchg
add
jnp
sti
nop
les
or
cmp
call
jp
aaa
mov
in
lods
lock
pop
or
cmp
lcall
mov
popf
adc
gs
aas
dec
das
cwtl
mov
fdivl
add
inc
dec
das
jl
xchg
add
fcomp
lock
xor
lock
aam
sbb
decl
xor
fldcw
pop
movsb
js
imul
xchg
jmp
adc
jmp
sbb
cmpsl
lock
repnz
dec
mov
adc
dec
cld
movsl
adc
pop
imul
push
mov
clc
pushl
pop
pop
andl
repnz
mov
mov
push
push
jno
rcrl
aas
jmp
sub
rcrb
lcall
stos
lock
jne
cmc
enter
aam
ficoms
clc
mov
cmp
decl
mov
mov
xor
mov
movsl
lock
lcall
rcll
mov
jne
sbb
jmp
inc
cmpsl
je
sub
movsl
out
pop
inc
js
add
mov
xor
pop
pusha
mov
lds
xchg
test
pushl
scas
pop
adc
movsb
xchg
jne
ljmp
mov
out
leave
enter
cld
push
xor
push
inc
dec
and
xchg
sub
fcomip
es
je
testl
outsb
repnz
inc
pop
xchg
push
imul
jmp
cmpsl
imul
mov
sbbb
inc
pop
mov
jmp
and
popf
test
xchg
mov
sub
cwtl
or
lds
les
and
add
pop
adc
mov
ret
sbb
cld
xor
mov
es
push
jne
lahf
xchg
xchg
add
cmp
sbb
mov
jmp
in
fsubl
pusha
lret
and
mov
jnp
arpl
enter
dec
cmp
decl
std
xor
das
jmp
stc
mov
call
and
mov
fildll
sti
cmp
lea
imul
icebp
movsl
lods
mov
xchg
lret
out
mov
mov
jecxz
gs
in
push
int3
cmp
mov
daa
repnz
xor
mov
out
xor
sbb
or
into
cltd
out
lret
xchg
push
ljmp
in
icebp
mov
adc
je
or
jecxz
enter
icebp
mov
xlat
dec
das
inc
push
mov
mulb
push
decl
bound
je
mov
cld
jno
inc
je
in
out
pop
cmp
call
mov
scas
push
outsl
cmc
pushf
popa
lds
ret
push
pop
mov
jg
xor
sub
mov
and
outsl
xchg
mov
sub
mov
mov
fucomip
loop
cmp
mov
push
cmc
jmp
inc
call
xchg
fbld
pop
lods
xchg
or
popf
mov
shlb
dec
xor
pop
xor
fsubr
jmp
ficoml
sub
xchg
add
xchg
cmp
xchg
ds
lcall
stos
into
ret
ss
mov
jecxz
jo
or
or
dec
test
subl
dec
int3
fdiv
xchg
xchg
mov
repz
call
and
mov
sub
or
xchg
imul
jg
mov
imul
ret
mov
xchg
xor
das
xlat
pusha
test
push
lret
int3
sbb
add
fisttps
std
lcall
sbb
adc
std
xlat
daa
xchg
cld
fcmovnb
adc
fs
mov
mov
cmp
sub
jg
aas
jb
mov
popf
subl
in
jge
imul
push
cmp
sbb
cs
pusha
in
addb
inc
sarb
js
and
loopne
xchg
sbbb
inc
mov
mov
mov
lods
xchg
aaa
mov
xchg
into
scas
lods
and
push
add
mov
mov
cmp
lea
inc
push
addr16
imul
out
lcall
stos
inc
outsb
cmp
lds
jmp
test
push
xor
mov
lods
rcl
jg
movsb
push
bnd
jno
stc
jae
xchg
js
xchg
ret
jmp
leave
inc
or
incb
cmp
mov
stos
cli
pop
into
movsl
add
inc
rcrl
push
insl
cmc
and
sub
jg
or
into
xchg
cwtl
shll
or
enter
or
test
xchg
mov
ljmp
dec
cmp
mov
jecxz
js
xor
mov
or
jmp
movsb
cmp
sub
and
clc
mov
sahf
mov
jg
jmp
dec
mov
jns
call
outsb
movsb
xor
xchg
fs
mov
inc
dec
cld
rcr
xor
or
es
inc
pop
mov
movsl
cwtl
push
jbe
add
sbb
mov
dec
xor
lret
inc
icebp
decl
mov
imul
nop
mov
out
in
lcall
dec
mov
dec
mov
rorl
lret
xchg
inc
push
test
cmpsl
out
inc
fsubr
loop
mov
cli
sbb
clc
test
pushl
clc
lcall
mov
inc
popf
orl
movsb
mov
add
pushl
insb
mov
push
dec
jae
ja
mov
popa
xlat
dec
xor
shlb
stc
xor
xchg
ret
repz
fucomip
add
gs
dec
dec
xor
cmp
pop
xchg
lcall
sbb
mov
fyl2x
cmp
orb
test
xchg
out
mov
int
ret
pop
xchg
icebp
incl
inc
cs
jnp
sbb
lret
aaa
lods
dec
jg
dec
push
in
mov
add
add
les
gs
cltd
test
pushl
jb
push
into
xchg
test
scas
jne
xor
loope
lret
mov
rorb
inc
daa
ja
jno
aaa
pop
dec
inc
outsl
repnz
lcall
lcall
stos
pusha
mov
ljmp
cld
repnz
mov
or
push
mov
xchg
cmc
inc
xchg
mov
adc
jae
push
pop
pop
ds
mov
mov
test
inc
lods
sub
cmp
mov
jbe
mov
jg
cwtl
dec
sub
dec
push
test
imul
adcb
mov
jne
sub
or
mov
push
push
push
loope
aam
mov
inc
loope
je
dec
out
adc
xchg
sbb
pop
mov
incl
xlat
or
testl
sbb
clc
pop
loop
mov
push
push
mov
pop
lret
in
or
xor
fbld
lods
insb
repz
pop
xchg
pusha
loopne
lea
push
call
loopne
out
ret
mov
ss
cltd
inc
fs
iret
iret
das
stc
pop
flds
sarb
decl
aaa
dec
mov
ljmp
cmp
mov
movsl
xor
scas
add
mov
pusha
stos
mov
int3
inc
loopne
lods
call
mov
fwait
imul
mov
rclb
xor
lcall
or
jbe
sub
pushf
mov
adc
rcrb
dec
add
jg
test
imul
test
ljmp
pop
mov
call
jno
pop
sbb
std
les
mov
xlat
mov
call
cli
xlat
mov
cmp
or
push
jbe
or
xor
cld
mov
stc
ret
icebp
out
cmpsb
test
xchg
sub
cmpl
jg
or
jp
sbb
inc
je
cmc
js
jbe
xchg
xor
lcall
push
lds
stos
push
lret
xor
dec
push
lock
fisttpl
adc
lcall
xor
sub
arpl
inc
jmp
addl
fstps
cld
incl
es
cli
mov
sbb
ss
int3
push
cmp
lcall
pop
sub
insl
cmpsb
jb
sahf
out
inc
pop
pop
xchg
push
push
mov
jne
inc
sti
push
incl
xchg
jecxz
stos
lret
test
inc
sbb
mov
outsl
jg
fs
outsl
nop
or
jne
std
sbb
dec
inc
and
stos
sbb
cmp
push
pop
inc
mov
out
repz
rolb
dec
shll
mov
jg
mov
test
or
dec
adc
shrl
incl
movsl
je
lret
xchg
or
push
lret
mov
repnz
out
cltd
xlat
push
sar
xor
push
dec
jno
int
lock
pushl
mov
xchg
jle
jo
loope
loop
mov
adc
and
add
cwtl
dec
push
jbe
and
rcrb
cwtl
ljmp
xor
mov
inc
mov
mov
testl
clc
jl
test
xchg
imul
js
mov
and
addr16
push
lret
fsubs
pop
mov
push
cltd
pushl
dec
mov
ret
push
rcll
push
jecxz
xor
loop
idiv
subb
mov
jmp
scas
adc
cmpsb
jns
test
scas
and
or
xor
pop
pop
iret
sti
pushf
call
xor
jmp
dec
mov
loope
filds
jne
jg
sub
in
xchg
mov
xchg
dec
sbb
xchg
clc
jg
and
leave
push
rcrl
testl
nop
mov
idivb
mov
mov
int3
int3
mov
cwtl
fxch
or
call
fidivs
cmpsb
push
xlat
in
mov
loope
jecxz
mov
jl
add
aaa
adc
pushl
clc
adc
inc
sahf
adc
and
out
ljmp
or
pushl
mov
scas
dec
test
xor
bound
adc
insl
dec
add
and
aad
decl
es
cmp
out
add
inc
shlb
sub
jl
pmulhuw
mov
xchg
fnstsw
js
mov
js
les
fldln2
xor
ljmp
fmuls
mov
cld
jno
arpl
les
hlt
pop
ljmp
cmp
and
sbb
js
xor
das
addr16
pushl
aas
leave
jg
arpl
dec
mov
xchg
adc
inc
fisubl
cwtl
pop
add
xchg
rcrb
mov
scas
cmc
shlb
inc
rolb
fwait
lahf
scas
loope
iret
rcr
push
pop
xor
cmc
lds
cmpsl
and
sbb
repnz
jnp
test
bound
loopne
jg
xchg
xlat
loope
jg
push
in
fsubp
jno
mov
pop
add
mov
dec
pushf
jmp
sbb
orl
outsl
push
xorb
outsl
hlt
mov
icebp
sbb
push
push
push
loop
int3
push
jecxz
pushl
sbb
call
mov
jp
or
mov
jbe,pn
loop
js
shrl
lods
movsl
cmp
mov
mov
cld
dec
jle
outsl
push
add
ret
rcl
cmp
jno
inc
jg
call
inc
fsubrp
imul
das
pusha
jle
xor
xchg
jno
lcall
cmp
mov
and
pop
aam
xchg
dec
cmpsl
shl
jg
push
fwait
push
add
dec
lock
mov
jo
fstpl
stos
lock
pop
int
add
cmp
xchg
je
xchg
ljmp
jbe
bnd
xchg
mov
fidivs
fdivs
and
cmp
pop
xor
jg
shrb
cs
fdivrs
ss
das
pop
lds
shl
insb
cmc
cld
add
call
and
and
push
inc
aas
sub
push
mov
fnstsw
ljmp
fsubl
movsl
roll
fucomp
incb
int3
xor
xchg
push
jle
mov
js
cmp
and
and
jmp
push
xlat
lcall
xchg
mov
pop
push
mov
call
iret
fs
pushl
mov
xor
out
push
push
jmp
add
hlt
push
jle
pop
jg
and
jno
in
push
and
stc
push
and
jne
or
pop
call
popa
dec
or
cmp
add
stos
mov
jp
mov
adc
add
ja
movsl
aas
testb
out
push
inc
ljmp
sahf
ret
mov
xchg
js
jl
dec
fstpt
push
mov
incl
pop
pusha
arpl
xchg
ss
call
out
jg
xchg
sbb
xlat
andl
or
jns
mov
mov
addr16
mov
out
rcrl
inc
mov
and
xlat
outsl
cld
incl
popf
mov
mov
les
sub
mov
decl
mov
movsl
pop
test
leave
push
cmp
mov
aad
dec
cld
xlat
lock
xlat
dec
mov
sarl
add
lcall
stc
call
mov
or
pusha
dec
test
lcall
inc
or
or
sub
inc
jecxz
loopne
push
addl
dec
incl
pushl
testb
cmp
sub
sti
jge
push
out
adc
jae
stos
pop
cld
pushl
imul
lods
jns
fildll
adc
jmp
pushl
or
adc
in
xchg
jns
pop
push
add
add
jle
stos
add
call
loopne
cmp
lods
repnz
adc
test
xchg
inc
xchg
jo
cmp
inc
pop
push
mov
dec
test
push
loop
sbb
addl
call
enter
mov
mov
clc
mov
lcall
xchg
lea
and
test
mov
in
xor
xchg
fsubp
jns
rorb
int3
mov
loopne
and
ja
outsl
hlt
jg
fisttpl
xor
inc
int
add
xor
stos
leave
jg
movsl
jne
push
fsubrs
cmp
ss
mov
inc
inc
in
mov
inc
test
lea
icebp
int
popa
icebp
add
xchg
fwait
cmpsl
movsl
push
addr16
arpl
xchg
test
push
imul
cmp
ljmp
mov
gs
lock
mov
xor
lcall
movsb
fnstenv
repnz
pop
pop
pushf
mov
das
cmpsb
xchg
push
call
pushl
pushf
aam
mov
lahf
xchg
test
dec
notb
js
pop
mov
into
test
or
lcall
std
mov
cmp
mov
push
ret
test
arpl
xor
add
andl
xor
jg
decl
xchg
imul
addr16
cwtl
lret
adc
icebp
imul
xchg
jmp
and
popa
inc
insl
cmpsl
dec
insb
cli
mov
lcall
cmpsl
jmp
mov
es
lahf
pushf
xor
mov
dec
cmp
cmp
dec
icebp
incl
mov
out
ds
push
ds
subl
dec
fs
clc
das
out
dec
dec
icebp
add
sahf
fidivrl
std
call
ds
sahf
cld
adc
mov
test
decl
cmp
inc
mov
str
jp
loope
cmpsb
mov
or
ss
jmp
bound
lods
enter
sbb
and
jle
dec
ds
inc
rcr
fdiv
paddw
jg
movsb
and
xchg
jno
cmpb
lea
hlt
outsl
cltd
addr16
and
adc
aad
mov
mov
push
xchg
std
or
decl
mov
xchg
adc
imul
adc
rcll
xchg
mov
shlb
mov
sbb
push
mov
das
lods
pop
addb
mov
add
xchg
adc
mov
pop
mov
pushl
jbe
mov
addb
push
xchg
sub
outsb
pop
incl
imul
cmpsl
mov
xchg
test
rorb
sti
jns
adc
jmp
out
mov
movsb
adc
adc
pusha
dec
xchg
loope
or
push
popf
int3
addr16
dec
mov
sub
jle
sub
pop
inc
popa
lret
lds
xchg
cmp
stos
cli
call
sbb
push
call
pop
sbb
fwait
xchg
mov
pop
fwait
in
orb
jmp
xchg
notb
mov
xchg
sarl
inc
rcpps
call
loop
fxch
xchg
mov
or
mov
in
lret
mov
sbb
punpcklwd
sahf
cltd
pop
push
ret
testb
add
adc
scas
xchg
push
push
xchg
ljmp
pop
sub
subb
push
jg
sbb
pop
push
popa
mul
int
xlat
adc
push
mov
aas
lea
sbb
nop
or
je
mov
mov
mov
dec
jb
sbb
popf
mov
mov
leave
pop
hlt
stc
cli
out
jg
lods
sub
mov
mov
cmp
pusha
mov
cs
imul
lods
cs
push
and
mov
dec
dec
pop
out
mov
outsb
pop
xor
cltd
data16
jmp
jecxz
inc
cmp
adc
pop
xor
call
stc
mov
nop
ficoms
jo
test
lock
test
jecxz
jae
dec
jg
jg
daa
jno,pn
fwait
mov
adc
mov
xlat
dec
push
or
mov
sbb
cmp
je
or
data16
cltd
leave
sbb
das
icebp
pushl
or
in
loope
mov
push
pop
push
sbb
push
mov
cmc
cmp
push
out
and
popa
insl
movsl
hlt
ja
hlt
xlat
and
call
ds
xor
add
xor
inc
popf
sbb
imul
push
mov
jg
or
hlt
icebp
pop
inc
cmp
push
and
in
xchg
inc
in
nop
mov
decl
sub
addr16
jb
ss
jbe
add
xchg
pop
pop
lcall
incl
lods
xor
pushf
lods
add
mov
iret
fisubrs
sub
dec
jno
xlat
lea
lahf
cmp
xor
mov
adc
pop
push
cmp
movsb
xchg
addl
jns
outsb
leave
mov
jg
inc
add
add
jns
movsb
pop
lods
sar
jno
testl
fmulp
int3
pop
mov
test
add
and
vmread
cmp
mov
mov
xchg
out
mov
ret
pushl
std
xchg
dec
xchg
rolb
cmp
lcall
je
sub
stos
sbb
and
test
sahf
daa
add
imul
incl
popf
cmp
mov
fldenv
add
add
xor
shlb
inc
rorl
jmp
dec
pop
cwtl
mov
loope
fucomip
movsb
lods
sti
xorb
sbb
out
mov
cltd
cli
jg
loopne
movsl
sti
xlat
push
pop
mov
pop
out
into
xlat
cmp
xor
addr16
fistpll
mov
enter
push
inc
adcl
shll
dec
imull
lods
dec
sbb
rcrl
adc
pop
jns
in
mov
add
nop
mov
pop
cli
daa
sbb
sub
push
sbb
movsl
push
dec
insb
addb
lock
push
data16
es
mov
int
mov
jge
pop
mov
fucomi
loop
jae
push
push
sahf
or
loopne
inc
push
jne
ficoml
ljmp
decl
jl
stos
push
jb
test
inc
or
sarl
mov
adc
aaa
pop
mov
mov
mov
add
mov
xlat
lcall
fdivr
push
dec
nop
loopne
mov
ljmp
movsb
add
adc
decl
mov
movsb
movl
sbb
jnp
sbbl
jg
pushl
or
in
and
ljmp
outsb
aaa
scas
and
cmp
inc
test
sbb
decl
push
dec
test
sti
fbstp
and
fcmove
jno
push
or
sub
rcrb
pushf
push
xchg
jle
jbe
fnsave
ljmp
mov
or
fcoms
xchg
cmpsb
mov
imul
push
jl
repnz
jp
ss
jb
lods
and
ret
cli
dec
mov
mov
sub
or
xchg
es
call
push
into
ret
mov
scas
aad
xchg
add
aam
fsubrs
inc
fidivrs
push
test
jns
push
xchg
and
in
or
stos
fcos
lcall
push
scas
jne
loop
fldenv
pushf
xchg
ds
je
push
mov
ret
mov
aaa
clc
cli
into
xchg
stos
vxorps
jp
push
adc
mov
ret
push
lret
clc
push
clc
mov
aaa
jge
imul
lret
dec
cli
adc
fistpll
stos
jb
push
pop
xor
mov
push
pusha
cmp
adc
push
and
dec
std
dec
adc
push
jae
out
add
out
aad
xlat
lcall
cmp
aas
add
lret
sbb
shlb
es
jg
stc
shrb
sti
lret
jl
out
sbb
jns,pt
sar
mov
std
daa
pop
sub
xchg
cmp
addb
mov
into
fwait
jg
call
das
push
insb
pop
cwtl
int3
inc
std
jne
test
and
xchg
pop
mov
out
scas
and
mov
sbb
mov
mov
jle
mov
mov
add
jecxz
add
icebp
mov
data16
cmp
nop
popa
add
in
mov
jnp
daa
insl
lock
dec
ljmp
dec
mov
fmulp
out
rcrl
inc
xchg
call
pop
iret
hlt
dec
sbbb
xor
add
arpl
rclb
jae
nop
mov
cmp
pushl
pop
mov
push
push
ffreep
clc
jmp
mov
xor
bound
pop
sbb
push
call
jns
xor
sbb
push
inc
push
leave
dec
xor
call
mov
xchg
je
shll
clc
repnz
or
je
jp
jno
incl
mov
and
jle
mov
aaa
fisttps
lcall
inc
mov
mov
and
std
jmp
jg
xlat
pushf
sub
repnz
mov
jmp
or
mov
and
pop
lods
hlt
cmp
in
xor
call
push
dec
inc
aam
loop
add
jo
aas
xchg
bound
dec
or
mov
lahf
icebp
insl
xor
test
call
sbb
lock
ja
sub
or
xlat
sub
adc
mov
push
outsb
loop
and
rorl
adc
out
das
sub
lcall
lcall
dec
icebp
xor
mov
add
movsb
leave
mov
mov
jne
ret
and
add
xchg
fstps
jmp
call
push
adc
subb
fcompl
in
sub
stc
jl
cmp
ljmp
pushl
jnp
mov
adcl
pop
pop
iret
lahf
xor
add
jmp
mov
sahf
cmp
sbbl
das
enter
fisttps
ret
jmp
mov
sar
sub
cmp
mov
dec
je
scas
jmp
lock
hlt
inc
loope
jae
call
mov
cmp
fstps
and
and
int
aad
sbb
je
hlt
fisubrs
jg
aas
push
popf
imul
fs
out
fldt
jg
insb
lds
dec
pop
mov
xlat
out
lret
pop
jecxz
fwait
sbb
mov
pushl
divl
cmpsl
pop
dec
fisubrs
daa
scas
mov
fnsave
test
mov
mov
dec
cmc
lcall
jo
lret
xorb
mov
mov
and
leave
std
movsb
ret
sbb
inc
jnp
lahf
push
or
jmp
fimull
test
test
aas
out
cmp
outsb
sub
mov
jb
mov
inc
xchg
mov
xchg
gs
push
gs
and
xchg
cmp
sbb
das
ret
xor
push
arpl
adc
dec
jmp
inc
shrb
rcrl
outsl
shrl
xor
jb
in
pop
divb
pushl
cli
pop
jne
cwtl
cwtl
cmc
inc
mov
pusha
sub
or
mov
add
mov
mov
and
imul
in
xchg
pushl
test
sub
fdiv
rcr
pop
sbb
pusha
addb
ljmp
inc
montmul
cmpsb
in
mov
dec
lods
gs
jo
loopne
sbb
cmpl
imul
adc
outsl
std
insb
leave
adc
mov
or
push
ja
cmpsb
or
jmp
adc
enter
push
repz
mov
pusha
xlat
jb
lret
adcb
decb
cld
push
jmp
or
jns
xchg
cmp
push
push
in
inc
lock
or
incl
and
adc
sub
nop
push
or
push
mov
push
loope
bound
dec
xor
shrb
in
fists
mov
aas
and
pushl
call
cmc
aaa
adcb
dec
jne
fisubrl
lods
mov
imul
push
jg
insb
or
sub
stos
adc
jge
nop
bound
mov
iret
repnz
mov
pushf
addr16
in
push
stos
pop
cmp
push
pop
and
stos
popl
iret
outsl
mulb
std
mull
repnz
ljmp
icebp
jmp
orl
shrb
out
mov
lods
dec
sbb
push
movsl
mov
lea
adc
sbb
and
rorl
insl
pushl
sti
sahf
or
cmp
adc
mov
lds
xor
mov
adc
mov
push
cmc
cmp
jmp
leave
stc
xchg
aam
inc
dec
pop
inc
dec
pop
cmp
notb
cmp
ljmp
sahf
nop
inc
enter
decl
int3
jl
cmc
mov
shr
sub
inc
in
pop
xchg
mov
loope
fisttpl
decl
ljmp
sarb
leave
add
and
call
pushl
icebp
mov
in
adc
imul
or
pop
arpl
lea
dec
add
dec
pop
push
popf
mov
adc
out
sbb
scas
lahf
push
sbb
mov
mov
call
mov
and
ror
xchg
or
mov
fsubl
xor
sub
fists
sti
rcrl
cwtl
adc
js
cmp
out
pop
incl
push
cmp
shl
push
addr16
xchg
rcrb
sbb
imul
push
mov
sbb
js
decb
xchg
mov
adcl
sbb
mov
fs
cmpsl
int
adc
cmp
popa
ljmp
lahf
push
adc
fs
arpl
fs
xchg
fistps
adc
xor
mov
and
dec
loop
cwtl
mov
push
fdivrl
lcall
daa
inc
sbb
sti
cmp
mov
cld
les
cmpsl
push
inc
cli
mov
mov
cmc
mov
sbb
hlt
adc
or
sbb
mov
mov
lcall
in
push
mov
out
lahf
repz
jle
or
enter
stc
mov
jmp
sbb
cli
push
pop
cmc
dec
fcoml
and
cmpsb
aam
aaa
xchg
xchg
cli
push
call
dec
jle
lods
mov
mov
stos
movd
sbb
outsl
cmc
clc
in
mov
adc
out
stc
adc
mov
ljmp
jmp
and
inc
inc
movsl
add
mov
mov
sti
aam
add
lods
sub
mov
nop
faddl
les
cmp
dec
movsb
andl
pop
dec
dec
sub
in
cmp
xchg
jg
call
mov
jo
cmp
stos
outsl
in
idivl
test
aaa
inc
ret
inc
das
icebp
mov
repz
mov
adc
xor
sti
in
or
aaa
shlb
and
adc
sahf
arpl
jl
inc
sbb
sub
cld
imul
je
add
leave
rolb
push
rolb
pop
sbb
sbb
cld
sbb
add
mov
xor
fld
decl
lods
mov
das
in
repz
cmp
inc
testb
pop
sbbl
daa
out
test
mov
nop
pop
lods
das
inc
pop
repz
pop
adc
and
or
pushl
fwait
adc
sbb
jle
push
sub
xchg
cld
cmpb
hlt
aaa
gs
mov
jmp
cmp
sub
int
inc
cld
into
or
cld
mov
cmpsb
or
scas
xor
or
pop
adc
out
cmp
out
add
jmp
loopne
mov
mov
scas
ret
test
fdivs
pop
xchg
lods
jle
adc
jecxz
xor
leave
shll
bound
imul
decl
cmp
insb
popa
ficomps
shrl
repz
fcoms
xor
push
add
outsl
lock
mov
sub
movsl
aaa
xchg
lods
or
sbb
inc
fxch
and
shlb
jmp
jmp
sahf
mov
sub
das
mov
xchg
adcl
jg
test
add
sarl
jl
test
scas
loope
adc
lcall
pushl
dec
nop
pop
cmpsl
xor
std
aam
xor
mov
loopne
pushl
push
lcall
mov
xchg
adc
mov
cmpb
fwait
adc
shll
or
jbe
jmp
inc
and
push
jge
sub
int
xor
xchg
ret
in
add
daa
jb
mov
dec
add
call
dec
test
gs
loope
in
xor
loope
xchg
lahf
xor
movsb
out
mov
or
xchg
xor
adc
cmp
jg
ds
into
nop
sbb
cltd
jl
push
jecxz
push
inc
pop
xorl
xor
incl
icebp
jno
cmp
test
add
data16
adc
pop
jmp
mov
dec
loop
cmpsl
jle
cmpsb
add
or
fwait
in
mov
mov
mov
loopne
sarl
cmp
dec
cltd
and
mov
xchg
sarb
mov
inc
lahf
test
xchg
jecxz
or
aam
mov
ljmp
pop
adc
cmpsl
mov
sub
pop
jb
fadd
dec
xchg
faddp
decb
mov
push
mov
gs
das
shrl
dec
dec
adc
inc
mov
mov
and
sub
sbb
arpl
pop
add
jmp
call
sub
xchg
cmpsl
cli
cmp
sbb
roll
or
movsl
outsb
cld
lock
adc
pop
push
pop
js
xor
adc
in
adc
lds
dec
hlt
and
mov
je
icebp
decl
sbb
test
push
pop
int3
and
sbb
incl
xchg
and
pop
ljmp
inc
mov
push
jns
mov
xchg
pop
mov
mov
arpl
aad
cmpb
loopne
pushf
aad
cld
cmp
jl
adc
lods
cmpb
jg
decl
sbb
imul
xchg
adc
jbe
sbb
lret
fnstsw
push
xchg
lcall
insl
clc
or
cmovge
call
int3
cmp
loop
push
test
jmp
xor
inc
imul
pushf
in
mov
aaa
mov
push
inc
sbb
inc
push
mov
cwtl
loopne
clc
cmp
jg
faddl
xchg
dec
xlat
mov
popa
call
inc
repz
test
popf
pop
mov
das
js
ja
call
cmpsb
add
cld
pop
or
ret
adc
xor
insl
sbb
roll
decl
int
push
mov
in
test
jbe
call
clc
test
fwait
mov
daa
repz
decl
loopne
mov
fsts
daa
in
jno
xor
push
inc
mov
sub
stos
ljmp
arpl
inc
sbbb
lods
call
cli
jg
aad
sbb
rep
pop
imul
cmp
sub
push
incl
sbb
lods
out
sub
jns
rolb
cmpsl
mov
pop
sbb
sbb
lea
movl
jnp
add
jge
inc
out
mov
push
xor
nop
xor
pop
lahf
fnsave
out
lods
and
pop
mov
leave
lcall
outsl
pop
fiadds
push
aaa
sbb
fcmovne
sub
push
les
add
sbb
imul
mov
dec
hlt
test
inc
mov
adc
mov
pop
shl
js
ja
sbb
jns
test
jmp
or
push
in
xor
jbe
pop
sub
add
test
insb
ja
push
outsl
lock
sub
xchg
rcll
xchg
popa
jmp
arpl
stos
in
int
pop
shll
jbe
scas
call
adc
jg
in
sbb
cmp
jg
mov
into
mov
jb
xchg
ss
out
out
dec
iret
mov
lock
nop
rorl
cmc
mov
add
sbb
mov
push
xor
mov
cmovle
inc
fdivrl
add
cmc
pop
hlt
cld
jg
mov
lods
adc
adc
pop
test
pop
out
je
mov
sbb
xchg
loop
cwtl
fsubrs
and
and
ret
aad
decl
or
mov
scas
xchg
ficomps
dec
cmp
push
push
hlt
je
icebp
aas
push
mov
stos
dec
pop
inc
dec
cltd
mov
inc
or
hlt
and
and
aaa
cld
push
mov
insb
mov
dec
pop
pop
jle
fcomip
decl
sub
push
xchg
jp
mov
sub
cmp
add
mov
mov
xor
in
stc
je
pop
data16
in
dec
and
data16
js
mov
decl
sbb
in
mov
xchg
pop
dec
les
add
sub
ss
mov
pop
cmc
mov
lcall
and
call
sbb
mov
dec
shlb
adc
adc
les
jl
cli
scas
js
aas
insl
jecxz
jp
insl
jbe
inc
sbb
pop
adc
lahf
cmpsb
loop
pushl
mov
ret
push
pop
mov
iret
add
pop
insb
adc
xchg
jp
cmp
mull
fwait
mov
dec
cmc
lahf
or
sub
pushf
sbb
add
mov
sbb
pop
sbb
aam
movsl
icebp
dec
dec
lret
data16
inc
pop
insb
mov
jb
xchg
lcall
iret
ret
mov
push
int3
es
loopne
mov
testb
cmp
jnp
push
mov
push
lods
nop
push
xor
cmp
mov
xor
std
cmp
sub
sbb
dec
bound
fs
fisttps
lods
cmp
outsb
xchg
out
jmp
cs
cld
inc
test
ficoml
sbb
jg
jmp
mov
xchg
xchg
repnz
call
js
out
pop
sbb
cwtl
rcrl
scas
jg
mov
jno,pn
data16
call
int
fidivrl
mov
dec
cmpsb
lock
sar
pop
loopne
dec
ljmp
xor
sub
insl
std
and
mov
and
in
pop
cmp
or
dec
out
add
stc
mov
cmc
dec
std
and
add
mull
mov
sahf
mov
rolb
push
adc
dec
testb
stc
les
pushf
and
mov
sub
mov
add
and
sbb
pusha
sti
or
pop
jmp
jmp
lcall
add
ss
sti
mov
jns
jb
push
xchg
imul
sbb
jg
dec
or
mov
icebp
and
lahf
jl
xchg
jbe
xor
add
std
sbb
add
dec
imul
bound
cmc
mov
int3
add
push
dec
inc
jmp
jg
push
sub
sbb
inc
xlat
ficoml
clc
call
jg
pop
rolb
lods
and
sub
in
test
push
mov
push
lcall
or
cli
mov
xor
xchg
int3
cmp
in
xor
sbb
cmp
add
inc
cmp
mul
adc
scas
repnz
sub
mov
add
cmp
push
addr16
les
jg
mov
mov
xchg
movsl
fimuls
and
imul
movsl
lods
jb
insl
fistpl
mov
dec
gs
imul
lcall
mov
pop
pop
and
cld
inc
and
mov
jmp
das
cmc
jae
dec
lahf
outsl
jb
out
pop
call
in
cwtl
jnp
addr16
scas
and
mov
push
xor
mov
fbstp
nop
rcrb
mov
pop
test
mov
mov
adc
das
std
decl
ljmp
shll
add
sbb
mov
call
push
rorb
cwtl
cwtl
test
mov
call
inc
push
cld
sub
sub
mov
jne
mov
xchg
arpl
jl
call
sub
addb
lcall
pop
or
cmp
jae
sbbl
dec
sub
cltd
mov
dec
mov
push
add
ret
decl
or
add
popa
adc
pop
push
or
add
lret
pop
mov
mov
aas
popa
mov
sub
jb
cwtl
outsb
mov
fadd
mov
test
call
mov
insb
pop
stos
iret
ror
mov
dec
add
call
pop
jl
mov
xor
ret
cld
jnp
sbb
cwtl
and
call
incl
aad
call
mov
cmp
outsb
or
mov
incl
inc
push
imul
pop
sbb
fs
jg
decl
mulb
or
mov
sti
arpl
xor
sbb
ljmp
std
std
mov
jb
roll
insl
outsl
popa
or
xchg
adc
xchg
cmp
pushl
clc
push
movsl
sbb
roll
insl
cmp
sbb
ljmp
cmp
mov
push
mov
mov
xlat
rolb
andnps
enter
call
jnp
je
ficomps
pop
std
jl
mov
pop
aas
into
aam
lea
sub
in
pop
inc
jmp
enter
mov
pop
in
mov
das
pop
cmp
aam
inc
fisttps
cmpsl
or
xor
push
mov
decl
cld
push
lds
cwtl
push
sbb
cmp
mov
jmp
nop
aad
or
movsb
addb
pop
lret
sti
pop
push
ss
into
decl
adc
lcall
lcall
sbb
mov
lcall
cld
push
aaa
xor
cmp
adc
sub
pop
popa
mov
push
jmp
xchg
cld
stos
aam
pop
inc
lods
lcall
dec
adc
enter
xchg
shrb
or
incl
jmp
or
loop
lret
push
sbb
js
sbb
outsl
ret
loope
in
xor
jecxz
fnsave
cmp
or
mov
jmp
lahf
aas
in
jns
adc
iret
and
sahf
add
jae
sub
and
in
gs
jmp
push
pushf
in
rcl
out
mov
xlat
into
push
leave
mov
popf
xor
adc
incl
insb
inc
and
cmpsl
jg
sti
xor
mov
push
mov
jmp
loop
leave
jnp
push
imul
pop
push
sub
ja
lea
incl
sahf
insb
mov
push
push
nop
xchg
jae
insl
lock
decl
inc
mov
or
xchg
movsl
outsb
mov
lcall
pop
imul
sahf
or
mov
mov
mov
push
ljmp
movsl
mov
adc
mov
and
inc
movsl
mov
aad
jge
aam
popf
lcall
xor
cmp
loopne
mov
rorl
sbb
cld
mov
dec
jg
mov
lds
sbb
push
add
sbb
jle
add
lcall
xor
mov
cmp
mov
call
ret
hlt
ljmp
cld
xchg
je
adc
cs
sub
mull
push
pop
ljmp
mov
lahf
pusha
inc
out
sub
cmp
imul
cmpsb
push
xchg
clc
pushl
repnz
scas
mov
adcb
jae
mov
inc
fdivr
cwtl
push
cmp
dec
cwtl
mov
into
outsb
adc
js
outsb
loopnew
push
call
push
push
jno
repnz
ret
adc
mov
push
cmc
std
mov
enter
sbb
push
call
jmp
lret
xor
jbe
test
in
sbb
jp
inc
sub
pop
sub
lret
nop
inc
push
mov
mov
adc
dec
or
mov
test
stc
out
mov
lret
inc
ljmp
push
xchg
xor
fldt
aam
lret
repz
into
jne
aad
shr
incl
lock
clc
or
pushf
movsb
cmp
sbb
xlat
pop
push
jbe
mov
xchg
out
es
in
dec
insl
xchg
or
inc
jo
cmp
mov
sbb
jg
incl
scas
int3
sub
and
or
adc
cld
dec
orl
push
mov
jae
dec
pop
jb
cltd
mov
sub
jo
sbb
rcrl
lcall
xlat
imul
cs
sub
fidivrl
cld
xor
rclb
cli
xchg
cli
call
flds
incl
out
pop
cmp
or
icebp
jbe
sbb
dec
mov
lcall
mov
adc
hlt
test
add
ds
mov
fs
scas
or
std
dec
fnstsw
mov
lock
inc
jl
dec
movl
inc
xor
pop
cld
add
cmp
push
inc
dec
add
mov
call
cmc
xchg
dec
dec
xchg
mov
fwait
arpl
jno
xor
inc
pushl
dec
xchg
fadds
or
mov
mov
movsb
mov
cmpsb
pop
dec
jo
ljmp
xchg
test
in
cmp
xor
mull
cmp
lret
cld
ljmp
mov
mov
rcr
xor
pop
imul
xchg
fnstsw
aas
push
call
popf
cltd
sbb
fstl
test
incl
lcall
pop
daa
lds
jl
push
stos
test
loop
lcall
push
mov
push
jg
mov
enter
push
jp
xchg
repz
mov
int3
incl
ljmp
test
mov
and
dec
push
pop
loop
ljmp
xchg
ror
out
mov
insb
jne
call
movsl
inc
ds
fsubl
add
ljmp
cmc
pop
lds
stos
in
and
inc
loopne
loop
mov
jle
sbb
das
cli
inc
js
and
dec
push
cmp
in
dec
divl
mov
cmp
inc
sarl
mov
mov
stc
jl
and
sbb
push
sbb
mov
pusha
sub
loop
jmp
iret
flds
clc
mov
or
insl
add
fadds
stos
gs
clc
jmp
mov
cmp
add
test
mov
call
lods
icebp
push
sub
jo
xchg
test
push
sub
fldt
pushl
mov
ja
pop
ficoms
rcll
push
sbb
sbb
adc
fucomip
call
movsb
out
push
xchg
jle
mov
xchg
movsb
add
push
movsb
gs
incl
mov
lret
xlat
fldt
test
jl
std
imul
call
lahf
loop
and
jg
aaa
sub
mov
jbe
xor
aaa
cli
cli
aam
add
jmp
dec
test
push
xchg
popf
xchg
push
push
std
cmp
lret
test
int3
and
lea
xchg
mov
mov
call
loope
mov
imul
ss
sahf
call
sub
fadds
and
mov
out
outsl
jle
push
push
loope
or
and
call
out
std
inc
iret
or
in
sub
loop
mov
lcall
les
mov
mov
ljmp
mov
out
jno
orl
push
jg
inc
push
faddl
push
ljmp
sahf
xchg
adc
dec
mov
mov
icebp
fdivs
mov
fnstsw
xchg
pop
insl
xchg
dec
into
xorb
rolb
hlt
clc
ljmp
std
lea
daa
xchg
fbld
dec
icebp
xchg
hlt
pop
sbb
jb
inc
call
cs
repz
jmp
fidivrs
adc
jg
lea
adc
sub
adcb
lock
je
or
sbb
mov
decl
mov
hlt
xor
out
sub
mov
jl
ret
int3
shlb
cmp
dec
sub
call
lds
mov
out
popa
mov
cmp
jne
cmpsb
mov
lahf
push
scas
sub
pop
std
incl
xchg
sbb
dec
ss
sbb
mov
xchg
popa
ss
sti
xor
adc
decl
jnp
int
push
mov
cmp
cmp
ljmp
cld
pop
jns
fnstenv
dec
sub
sub
iret
dec
ljmp
xor
pushl
mov
mov
mov
push
icebp
ja
inc
iret
jl
cmp
ljmp
call
into
nop
adc
sub
push
mov
repnz
mov
jmp
imul
pop
data16
scas
pop
aaa
lret
jg
cltd
or
mov
loopne
lret
pushf
rcrl
popf
jnp
loopne
pop
mov
clc
push
pop
push
pop
mov
add
loopne
and
dec
and
aaa
rol
mov
dec
mov
lods
push
xor
cmp
push
jmp
jo
pop
repz
pop
test
jge
mov
out
test
lock
pop
call
fistl
push
and
jno
jae
aad
call
jo
addr16
xor
and
call
or
sub
movsb
icebp
xor
cld
fdivrs
test
dec
je
fbstp
pushaw
mov
dec
mov
push
jmp
cwtl
jns
sti
pmulhw
addb
xchg
stos
sub
ljmp
dec
dec
xchg
js
xor
into
xchg
inc
lea
scas
jb
ja
pop
jb
inc
std
ja
lock
incl
imul
mov
into
mov
popf
xor
pushf
hlt
mov
and
test
ljmp
fbld
ljmp
mov
adc
xchg
out
jmp
aas
enter
clc
mov
mov
push
sub
or
and
add
jmp
int
in
mov
xchg
shl
cltd
ljmp
scas
sbbl
mov
popf
cmpsl
les
out
ljmp
aam
add
call
add
insl
xchg
xchg
mov
pop
mov
mov
ja
stos
pop
addr16
mov
lods
pusha
inc
fmull
dec
or
bound
arpl
sbb
dec
cld
push
jmp
mov
in
add
mov
les
mov
rcrb
mov
in
dec
xchg
sub
fdivrl
adc
xchg
xchg
cmp
aas
rcrb
mov
lea
mov
jge
call
decb
xor
adc
lods
dec
outsl
stos
mov
out
mov
outsl
stc
push
mov
jp
cmp
pushl
mov
jno
cmp
incl
ljmp
mov
pop
icebp
das
std
decl
mov
mov
jg
mov
mov
inc
cli
int3
hlt
call
scas
jl
add
imull
lgs
mov
inc
xchg
push
ljmp
aaa
mov
jnp
ljmp
pop
pop
ficompl
xor
sbb
mov
iret
lods
add
jmp
mov
sbb
fldl
pop
mov
cwtl
sbb
test
mov
cmp
jecxz
add
pop
or
in
fistl
lods
xor
xchg
pop
dec
addb
mov
shlb
cmp
call
cli
lahf
mov
sub
das
stc
lcall
push
sbb
addb
dec
jg
lds
mov
mov
push
mov
inc
ficompl
add
xchg
call
cwtl
mov
xchg
mov
xor
pushf
jle
cmp
push
mov
lahf
arpl
int
pushl
fdivrs
or
fidivrl
loope
add
fdivs
div
lret
inc
cmp
dec
mov
pop
imul
loope
std
int
xor
divb
push
push
mov
aam
je
and
fnstsw
pop
leave
dec
push
mov
mov
jnp
dec
sbb
out
sahf
ljmp
aam
sub
jge
loopne
push
out
pop
decl
push
xchg
das
test
ret
js
jle
dec
outsl
clc
mov
dec
pop
loop
scas
fistpl
pop
das
je
fistpl
cmc
cs
mov
inc
ss
jg
inc
mov
lods
arpl
jns
mov
push
ljmp
pop
bound
shlb
mov
or
out
fimull
enter
out
jle
jge
mov
cmc
ljmp
lcall
adc
stc
adc
and
push
adc
in
out
test
lcall
add
cmpsl
jmp
jae
insb
sbb
inc
sub
ljmp
incl
lahf
daa
dec
stos
or
mov
push
in
ja
ljmp
cmp
pop
xchg
cmp
xchg
pop
pop
xchg
daa
mov
cld
fcom
mov
les
add
xor
push
add
pop
ljmp
xchg
pushf
bound
mov
xor
shlb
push
and
test
fidivs
icebp
adc
xchg
ret
xor
adc
scas
popf
cmp
cmp
and
mov
leave
aaa
mov
test
call
adc
sub
pop
imul
sbb
call
jecxz
icebp
mov
jp
pop
jo
fildll
jmp
daa
push
iret
sahf
dec
pop
mov
movsl
shll
fcomp
sub
fmul
inc
int3
jne
fldenv
xor
sub
or
int
ljmp
push
push
test
cs
push
or
int3
fstpt
inc
inc
pop
dec
sub
push
lcall
in
add
ljmp
pop
add
test
lds
xlat
jo
call
out
fcomps
xchg
mov
repz
mov
lods
ljmp
lock
js
cmp
in
xchg
add
cmp
sbb
sbb
in
dec
pop
mov
dec
jmp
and
cli
push
inc
add
mov
or
push
testl
jmp
repz
bound
xlat
lods
dec
je
leave
incb
add
push
push
inc
pop
or
jecxz
ljmp
mov
lret
jl
sub
lcall
sbb
mov
xchg
les
inc
add
repz
add
xchg
popf
jno
mov
mov
jae
push
fsubrs
dec
icebp
adc
mov
pop
cmpsl
repnz
pushl
aam
aam
dec
dec
mov
inc
test
pop
or
call
add
sbb
push
dec
imul
aas
ret
insl
adc
mov
cmc
and
insb
addr16
call
pop
jb
cwtl
das
cld
decl
cld
xor
xor
ds
popa
jo
clc
pop
call
sbb
pop
lret
idiv
mov
pop
push
inc
push
xchg
mov
jno
insl
inc
popf
jns
sbb
mov
jl
ljmp
jnp
lods
cmp
ret
in
shr
xor
enter
test
arpl
fdiv
decl
push
cltd
outsb
repnz
lret
lds
sub
into
inc
lahf
lea
pop
or
sbb
das
mov
mov
adcb
sbb
fstenv
pop
or
pushl
addb
mov
dec
in
shlb
lcall
std
adc
or
fcomps
push
cwtl
xchg
lods
lds
loop
or
outsl
decl
rol
adc
ffreep
lret
loop
jno
xchg
sbb
sti
inc
addb
xor
mov
sub
mov
push
mov
sub
ret
xchg
push
push
nop
xor
cmp
shr
mov
and
dec
out
mov
pop
clc
dec
mov
call
clc
ficomps
xchg
fbld
loope
clc
inc
inc
mov
jae
pop
aam
pushl
mov
faddl
cli
dec
mov
pop
lock
subl
jno
mov
enterw
repnz
xchg
xor
fisttpl
lcall
xor
ljmp
mov
pop
mov
mov
or
test
sub
mov
mov
jle
mov
xor
sbbb
bound
fistl
jmp
shrl
jl
sub
cltd
into
and
aad
test
xchg
lods
lock
mov
sarb
pop
out
jmp
stc
outsl
xchg
fcomps
mov
pushl
cli
jns
lcall
add
pushf
xchg
stos
cmp
mov
sar
das
cmc
or
push
adc
or
mov
push
xor
mov
xor
jmp
xchg
gs
or
lds
out
push
jno
xchg
dec
stos
ret
loop
das
inc
pusha
sbb
outsl
cmc
jmp
cli
sub
mov
inc
dec
or
cmc
sti
scas
sahf
das
inc
sub
pop
lock
mov
fwait
lahf
xlat
push
mov
ret
ljmp
std
inc
repz
idivb
sub
cmc
mov
call
push
mov
inc
jb
push
add
mov
fucomp
out
mov
rorl
fnstsw
shlb
fildll
xchg
stos
sbbb
dec
mov
xlat
in
push
ja
fwait
cwtl
fcoms
cld
ljmp
movsl
mov
mov
sbbl
fcmovnbe
or
fwait
pop
xchg
mov
aam
or
inc
fsubs
cmp
incb
jno
movsl
decl
in
imulb
shlb
leave
and
jno
mov
and
adc
xchg
enter
push
cli
outsl
push
mov
cmp
sbb
add
rcrb
das
sub
imul
and
fildll
cmpsb
pop
fs
push
inc
push
call
aam
pop
movsl
push
in
sarl
fcomip
xchg
xor
cld
jmp
jae
pop
pop
cld
inc
sbb
outsb
pop
cli
cmpsb
sub
sbb
mov
cmpsb
xchg
outsb
jmp
mov
jge
adc
incl
cli
cli
xor
mov
mov
das
int3
fld
mull
shlb
outsb
ljmp
mov
pushf
push
lret
popf
xchg
pop
xor
aaa
int3
push
push
xor
sub
addl
jle
sub
push
and
call
sti
mov
mov
in
dec
addb
add
fxch
xor
call
pop
incb
insl
mov
out
mov
mov
adc
pop
add
ljmp
out
rcr
lods
mov
arpl
jge
jg
xor
jle
mul
adc
movsl
push
into
ret
jmp
jle
pop
popf
sahf
jge
mov
jno
stc
cmpsl
iret
popf
ljmp
cmp
je
cli
jmp
add
pop
mov
fwait
lock
rcr
cli
fwait
or
adc
loopne
cwtl
out
inc
jbe
sbb
dec
cmovge
aam
sti
arpl
mov
dec
jns
push
mov
mov
add
mov
les
bound
dec
mov
mov
fcos
rep
call
ljmp
es
push
call
jmp
incb
cmc
push
mov
mov
cmp
mov
jns
popf
inc
inc
or
cli
sahf
fsub
bound
decl
xlat
lea
pop
outsb
ror
bound
repnz
push
adc
outsb
rolb
mov
incl
movsl
jmp
mov
rclb
cmp
sub
jg
sbb
pop
mov
xchg
cmp
and
je
mov
adc
xchg
sti
dec
fs
push
cltd
mov
push
cmp
jo
fisubrs
das
mov
das
add
add
shr
pop
add
mov
decl
xchg
dec
push
push
mov
loopne
mov
out
cmp
dec
mov
aaa
or
mov
push
ljmp
int3
pop
and
in
test
test
or
mov
pop
and
xchg
ss
fucom
mov
out
loopne
call
std
push
movsb
cmpsl
fisttpl
push
popa
push
rcll
out
lahf
jb
adc
sahf
or
das
std
dec
mov
mov
jb
mov
xor
call
fistpl
pushf
pushf
scas
arpl
mov
lock
dec
pop
pop
jno
mov
sbb
adc
xchg
jns
cwtl
lcall
sbb
jp
cmpsl
shll
dec
jne
mov
stos
xor
mov
shrl
dec
jl
inc
add
dec
xchg
es
pusha
or
inc
das
rclb
mov
pop
sub
outsb
pop
cmp
adc
ljmp
imul
xchg
jge
in
mov
call
mov
mov
dec
sarb
sahf
outsl
push
nop
out
and
or
aad
std
dec
out
lcall
fcomps
pop
adc
mov
cmp
add
aaa
fistpl
inc
rorb
cli
fsubrs
movsl
jmp
shrb
jo
and
ret
fdivp
adc
std
outsl
icebp
jg
mov
xor
rol
dec
xorps
addb
pushl
mov
rolb
mov
nop
add
xor
dec
std
call
andl
nop
ljmp
mov
xorl
test
ljmp
cmc
incl
out
fcomi
pop
and
cwtl
clc
call
addr16
or
dec
xor
push
aad
mov
aad
clc
xor
call
ljmp
add
xchg
jp
je
dec
imul
pusha
mov
push
fwait
pusha
shlb
in
pop
or
sbbl
add
mov
hlt
jmp
mov
and
pop
test
mov
dec
or
pop
lock
push
in
es
gs
sub
pop
in
out
push
popa
or
mov
rolb
call
push
xlat
fimull
in
sbb
add
ljmp
jecxz
mov
add
lods
jecxz
int
movsl
lcall
push
in
fldl
push
pop
and
pusha
jo
ss
mov
xchg
les
sub
and
cmpsb
push
push
push
shll
ror
imul
loop
fidivl
sbb
repz
imul
jne
mov
jg
mov
fimuls
pop
jg
and
xchg
inc
cltd
sub
stos
push
sbb
lcall
rorl
push
fsts
cmpsl
in
daa
scas
mov
testl
mov
lcall
xchg
jb
cmpsl
jbe
or
add
scas
and
in
scas
pop
inc
sbbl
test
cmp
xor
mov
lods
pop
popa
dec
inc
repz
rcll
int
jb
in
or
loop
xchg
mov
mov
mov
imul
jl
sbbb
push
imul
incl
xor
mov
enter
bound
add
shll
push
xchg
pop
sub
jp
decl
roll
jg
shrb
sti
sar
incl
adc
xchg
cs
js
mov
icebp
repz
mov
mul
pushf
mov
arpl
jg
jmp
cmpb
mov
push
jo
sbb
ljmp
in
loope
xorb
and
or
xchg
jae
lret
adc
ljmp
inc
add
aad
push
pop
jo
dec
xchg
push
jg
cmp
roll
in
filds
js
xor
dec
pop
clc
addr16
lock
sbb
aaa
xchg
adc
xchg
and
jmp
push
nop
lods
das
add
adc
xchg
xor
movsl
inc
aaa
dec
imul
gs
jecxz
mov
hlt
mov
incl
push
jne
in
mov
or
xchg
rclb
jg
mov
mov
popf
xor
mov
mov
test
int
int
test
jmp
and
push
mov
mov
jp
pop
mov
incl
dec
add
lods
pop
cmp
test
scas
and
cwtl
int3
hlt
dec
fildl
mov
inc
clc
lret
sbb
dec
jo
je
out
shll
lret
outsb
aas
inc
sahf
adc
ljmp
lret
loope
jge
out
or
mov
add
jns
scas
mov
je
ret
orb
cli
outsb
test
fwait
xor
dec
cld
ljmp
cmp
cmp
mov
sub
cwtl
or
add
outsb
decl
lods
fs
cmp
hlt
mov
xchg
div
sub
icebp
adc
adc
push
clc
decl
or
nop
lret
sub
and
xor
call
sub
mov
mov
aam
push
pushl
cltd
and
or
cld
mov
adc
mov
mov
pop
loopne
jae
imul
std
jg
es
mov
in
mov
sbb
out
mov
ljmp
repz
test
push
sub
hlt
and
outsb
clc
test
enter
add
push
mov
loopne
inc
ja
bound
test
lods
test
adc
mov
xorb
cmpsb
std
jg
movsb
mov
push
mov
ret
pop
mov
pop
ljmp
aas
ja
cmp
push
jno
sub
lret
mov
push
rcrb
aas
pop
mov
aam
decl
inc
push
cs
and
push
dec
pop
and
and
push
iret
iret
rcrb
jle
orl
mov
xor
das
daa
stos
xchg
and
mov
fsubr
in
mov
cli
enter
dec
mov
scas
ja
divl
cmp
mov
push
mov
mov
mov
scas
cwtl
xor
fwait
dec
xor
sahf
popa
xor
icebp
das
cld
test
dec
test
mov
cmp
and
addr16
adc
lcall
subb
lea
sti
and
fidivs
filds
inc
sbb
add
loop
jae
mov
xchg
gs
cltd
gs
aas
fldcw
mov
cmp
sbb
shrb
rorl
lds
dec
inc
xlat
bound
loope
add
rorl
daa
mov
add
dec
jns
inc
adc
add
xchg
int
xchg
add
sub
dec
dec
gs
add
jno
lret
jg
decl
lcall
inc
push
icebp
mov
xor
sub
pop
sbb
call
subl
cmp
shll
or
jmp
sbb
jle
fdivl
add
sbb
aad
lcall
mov
fstpl
sub
int
dec
push
into
pop
mov
push
clc
lcall
cmp
dec
outsl
scas
lret
shll
xchg
aad
xlat
es
cmp
cli
fldt
jg
fistps
adc
mov
fidivl
std
add
jmp
push
rcrb
nop
lret
add
xor
mov
shll
adc
fmull
pop
fcmovnb
incl
imul
rcll
jo
dec
and
jle
aam
notb
stos
call
incl
aas
bound
fmuls
jge
and
call
sub
xchg
fisttpll
mov
jns
pop
jmp
bound
push
or
dec
daa
mov
jbe
lcall
clc
iret
push
pushl
pop
leave
ret
bound
outsl
xchg
lret
loope
aad
xchg
xchg
cmp
andl
add
push
addr16
bound
hlt
pop
mov
jns
cld
lcall
movsb
or
loop
mov
sub
cltd
mov
pop
aam
mov
lcall
pop
push
add
xchg
bound
orl
std
mov
mov
xor
or
xchg
xchg
fsubr
in
xor
outsl
push
lods
ror
push
sbb
sbb
dec
insb
cli
push
dec
in
mov
dec
pop
mov
pop
lcall
movsb
incl
ss
out
pop
scas
sub
mov
fmull
movsl
scas
or
js
xor
mov
fs
call
cli
ret
sub
push
movsb
fstpl
jne
pop
mov
clc
ljmp
lock
mov
sub
lock
push
push
xchg
mov
sbb
stos
push
les
hlt
lret
pop
shlb
xor
mov
pop
enter
adc
dec
adc
or
and
repnz
enter
jb
int3
ds
pop
call
add
adc
dec
in
iret
mov
mov
lcall
sbb
sbb
mov
cmp
into
jne
sub
sbb
xchg
mov
mov
std
adc
push
pop
je
jp
push
ret
mov
mov
push
in
lock
in
or
mov
dec
xchg
testl
cmp
jmp
xor
jecxz
shr
rcrb
mov
rcrb
xor
cmp
jmp
or
sar
jnp
enter
jbe
mov
lock
nop
adc
add
cmp
sbb
pop
push
push
call
ljmp
in
or
aas
pusha
jge
and
ret
mov
xor
jo
fistpl
fwait
or
add
jmp
add
imul
jnp
cld
rclb
cltd
or
inc
push
sbb
mov
dec
std
dec
std
imul
stos
jmp
xchg
adc
xchg
cld
call
fdivrl
iret
insb
mov
jp
mov
arpl
imul
jbe
testl
cmpsl
ja
inc
leave
adc
lods
mov
cmpl
lods
push
add
adc
je
call
mov
mov
std
incl
sub
lods
dec
push
decl
xchg
push
das
add
xor
push
inc
outsl
mov
and
incl
sbb
inc
dec
in
cmpsb
pop
stos
jbe
imul
sbb
add
cmc
incl
imul
xchg
mov
add
xlat
pop
das
imul
xchg
decl
inc
fwait
xor
and
mov
lea
testb
enter
mov
dec
ljmp
or
divb
inc
adc
bound
xchg
sbb
aad
push
ljmp
add
dec
dec
pop
xor
in
dec
jl
enter
lret
mov
pop
dec
leave
lret
mov
mov
adc
xchg
dec
dec
sub
lods
andl
push
mov
push
and
test
adc
leave
and
inc
imul
daa
fldenv
mov
icebp
call
inc
test
test
xchg
mov
jne
test
inc
sti
cli
ljmp
test
xchg
adc
jne
fadds
or
pop
cmc
sbb
movsb
scas
inc
sub
mov
adc
les
aas
les
cmp
ljmp
aad
in
test
cmp
movq
xchg
jp
shlb
shrb
cs
mov
stos
aas
ss
icebp
or
movsl
jae
movsl
rcl
mov
cwtl
fdivrp
mov
and
dec
pop
lock
and
clc
imul
and
mov
sarb
outsl
mov
stc
icebp
jmp
test
dec
movsl
mov
out
push
lret
lcall
adc
sub
lea
pop
mov
adc
jg
jg
lea
mov
sbb
mov
aaa
repz
jbe
inc
subb
in
mov
ret
jp
push
xor
loop
out
lods
xor
nop
xor
and
cmp
push
adc
cld
rclb
mov
call
daa
adc
mov
or
jns
outsb
adc
in
test
xor
ljmp
jnp
push
pop
lcall
pop
in
pushf
fs
jne
cmp
or
jmp
std
incl
inc
push
repnz
or
and
cmp
jmp
sub
pop
ljmp
push
mov
repz
repnz
lea
ret
fld
mov
ljmp
inc
mov
cld
pop
add
sbb
test
movsl
push
cwtl
adc
adc
mov
ljmp
pop
mov
and
sub
dec
mov
pop
pop
push
outsl
mov
dec
cmc
incb
rorl
ret
movsl
mov
fwait
pop
loop
outsl
ljmp
sbb
pushl
in
les
or
adc
mov
movsb
imul
das
mov
std
pushl
cmp
or
pop
shlb
je
mov
or
mov
pop
pop
mov
mov
mov
lea
sbb
loop
sub
mov
or
pushl
jns
mov
popf
sub
hlt
clc
les
lock
outsl
ljmp
jp
mov
idivl
je
cmp
jg
call
shrl
call
pop
call
pop
and
repnz
imul
add
sub
in
push
popa
jmp
jg
inc
popf
scas
scas
out
pop
dec
pop
ljmp
lcall
lods
or
std
lea
scas
jns
sub
pop
clc
jbe
fists
fsubrl
dec
cld
jno
arpl
scas
inc
add
jo
sbb
sbb
xchg
push
dec
jae
pop
int
and
push
lock
mov
out
rorl
mov
mov
mov
pushl
push
int
sarl
adcb
out
push
mov
cli
jg
fwait
mov
pop
dec
cld
mov
jecxz
sub
incl
das
and
inc
pushw
mov
bound
cli
decl
aam
push
movsb
mov
leave
inc
add
push
imul
pop
push
inc
incl
pop
das
and
pushf
insl
adc
sbb
cmp
mov
stos
jmp
mov
sbb
in
xchg
fisubrl
clc
jmp
adc
push
int
mov
push
gs
sub
insl
xchg
outsb
icebp
aaa
movsl
je
enter
dec
lods
mov
pop
mov
adc
pop
and
and
cld
fistpll
jmp
outsl
push
lret
rorb
ds
lcall
sub
cmc
push
leave
and
push
adc
test
mov
push
out
sbb
repnz
xchg
mov
fdivrs
aaa
and
repz
aas
sbb
iret
int3
jg
jmp
data16
pop
pop
pop
jb
mov
std
mov
xchg
adc
ja
bound
lcall
jmp
std
xchg
xlat
loopne
and
add
mov
jno
pop
jmp
xor
push
mov
push
push
lods
jbe
and
aad
add
jg
jp
aam
scas
movl
jmp
inc
daa
in
imul
add
and
mov
mov
push
xchg
jg
dec
shr
data16
pop
or
call
push
jae
cmpsl
imul
pop
dec
mov
mov
sub
mov
mov
mov
in
lods
jb
fsubrl
mov
lcall
cmc
pop
call
cmp
mov
or
mov
pop
clc
jmp
inc
mov
pop
jmp
push
mov
adc
int3
xchg
sub
adc
fistpl
mov
into
mov
xchg
scas
pop
std
fisubs
or
lea
jp
cli
inc
cmc
pop
ffree
arpl
ret
shll
sbb
push
jg
mov
push
jbe
jecxz
hlt
outsl
adc
inc
jle
dec
xor
ficoml
icebp
pop
sbb
addb
mov
jno
ljmp
outsb
xor
add
dec
cmp
ss
or
mov
mov
mov
jg
ljmp
jmp
adc
imul
or
sub
inc
mov
adc
add
cmp
incl
pop
xchg
jecxz
jmp
sub
idivb
jp
xchg
lret
arpl
in
or
cmp
call
call
or
dec
outsb
push
fsubs
xchg
sub
aad
and
clc
ljmp
or
rcr
lahf
sub
aam
shll
dec
xchg
pushl
cmc
and
mov
push
fdivrs
lock
pusha
subl
xor
mov
cs
jl
jbe
push
push
loop
add
call
leave
sti
je
inc
test
cmp
cs
repnz
push
add
neg
call
mov
cmp
enter
and
call
fwait
sub
incl
cmp
or
mov
jg
sbbb
jl
mov
mov
mov
and
cmpsl
push
mov
pop
cwtl
xchg
cmp
in
pushl
dec
xor
inc
mov
decb
enter
xor
adc
jp
cld
push
rcll
lock
xor
popa
mov
adc
dec
add
lcall
adc
mov
xchg
pop
mov
mov
sub
cmp
fisttpll
mov
das
clc
sub
mov
insb
and
movsl
ljmp
incl
sbb
or
movsl
je
add
xor
popf
lret
mov
push
test
call
sahf
test
in
xor
pop
loop
jmp
aam
insb
shl
sbb
jg
subl
inc
cli
mov
pop
sbb
xchg
push
cwtl
test
scas
ljmp
js
jle
sbb
and
pushf
in
sbbb
je
popa
xchg
inc
shrb
ljmp
incl
into
enter
xor
lods
jae
std
add
cmp
das
std
sub
ja
lds
adc
incl
jmp
es
outsb
sub
sti
mov
add
xchg
popl
lcall
dec
lea
popf
cwtl
repz
out
jnp
out
repnz
out
cmp
xchg
orb
jmp
nop
inc
out
clc
mov
lds
add
inc
and
jle
push
fistps
mov
pop
cli
or
stos
addr16
push
hlt
adc
fcoms
rcrl
jmp
nop
adc
test
fnstenv
mov
in
xchg
loope
mov
jmp
negl
fcompl
sbb
outsb
clc
imul
data16
jnp
jmp
jg
test
cli
insb
addr16
fwait
sti
pop
or
dec
xor
ja
mov
inc
pusha
mov
jg
rolb
push
clc
sahf
scas
jns
outsl
mov
ljmp
sbb
clc
shrb
push
pop
jl
int
fdivs
int3
xchg
push
loope
mov
sub
repnz
mov
push
lcall
xchg
sti
add
push
sub
jmp
in
pop
out
mov
aad
and
ljmp
loopne
pop
and
xchg
inc
call
adc
incl
cli
xlat
or
push
and
fdivrl
fildl
out
mov
or
scas
mov
mov
adc
dec
cld
test
mov
lods
pop
lods
mov
mov
cmp
pop
lcall
in
and
test
jge
and
mov
lret
call
cmp
fistpl
dec
shrb
inc
push
jecxz
std
aad
daa
sbb
cmp
pop
in
sbb
jmp
cmp
sub
int
adc
dec
mov
cmp
cmp
incl
pop
test
sub
movsl
push
in
ret
pop
push
mov
insl
andb
push
jae
loop
cld
incl
mov
mov
lock
sub
mov
filds
xor
call
fsubs
icebp
inc
subl
jmp
adc
jns
jg
jnp
fdiv
aam
enter
jo
push
sar
outsl
cmc
pushl
jns
jne
shll
or
jnp
insl
fimuls
in
icebp
lcall
push
addl
repz
mov
call
mov
mov
arpl
inc
push
cwtl
mov
push
cli
sbb
cmc
decl
cwtl
rcrl
aad
insb
cltd
jl
and
jbe
mov
loope
push
sub
jmp
mov
mov
push
mov
cld
stc
pop
inc
repnz
jg
jmp
fsubrl
cld
jae
and
aaa
mov
in
push
repnz
mov
movsl
cs
pop
std
dec
std
ljmp
js
dec
bound
push
nop
or
pop
mov
int
sbb
ljmp
call
int3
push
cltd
dec
and
pop
outsb
push
push
aam
lcall
fidivs
add
es
cmp
aam
push
fldt
mov
jae
mov
and
outsb
push
or
fmul
jnp
and
loop
xor
or
jg
sti
cmp
fs
lcall
std
pusha
push
sbb
dec
jle
loope
adc
cmp
cs
jmp
add
jl
sbb
and
pop
int3
sub
xor
xchg
loop
popf
mov
inc
sbb
sbb
lcall
lcall
pop
scas
leave
and
js
mov
inc
outsl
lock
jg
sbb
bound
out
mov
sub
and
mov
fisttps
out
mov
mov
lcall
icebp
mov
push
cmp
lods
fisubl
xchg
sbb
outsl
arpl
sti
xchg
incl
pop
lea
inc
dec
xlat
inc
fildll
push
mov
aas
cld
lret
pop
ds
insl
add
pop
test
add
xorl
mov
popa
cmp
adc
cli
push
pop
sahf
lret
std
jne
test
ljmp
xchg
rcrb
out
mov
lret
dec
jmp
cmpsb
les
movsl
jle
and
enter
mov
mov
xchg
outsb
es
dec
sbb
aad
bound
sub
adcb
fidivs
cwtl
lahf
pop
ffree
cmc
adc
pop
adc
inc
fimuls
stc
cmp
sub
and
push
mov
pop
loope
test
call
movsl
xor
sub
jl
push
cmp
in
jmp
jecxz
clc
rcrl
mov
jo
repnz
loope
cld
or
div
popl
mov
fxch
mov
rep
lcall
ljmp
aaa
out
pop
lea
mov
jns
xor
cmc
mov
push
xchg
ljmp
push
stc
pop
das
sbb
jge
arpl
aaa
lock
jg
nop
mov
push
mov
cmp
fdivrs
jp
pushf
adcb
mov
cmp
pusha
xchg
jno
pop
ss
imul
aam
pushf
outsl
ficompl
fsub
jecxz
xchg
out
push
lea
or
mov
mov
jo
cld
sbb
or
push
sarb
jmp
jmp
sti
cmpl
stos
sub
xor
lock
repz
or
jmp
inc
inc
mov
pop
cld
or
and
lahf
jl
xor
adc
lahf
pop
stos
cli
jbe
inc
shl
and
incl
pop
xlat
pop
add
add
ss
or
mov
sar
movsb
push
xchg
inc
jp
inc
jne
test
push
sti
pop
pop
mov
adc
push
pop
ljmp
out
or
in
fmull
ljmp
push
pop
jge
outsl
outsb
or
push
adc
or
call
popf
and
insl
jg
ss
dec
aam
fwait
mov
and
stos
push
ret
push
or
icebp
pushl
clc
incl
fistps
lcall
aaa
mov
jmp
and
mov
pop
pop
int
or
int3
xor
fsubl
out
decl
mov
scas
mov
js
pop
fwait
mov
ret
popa
cmpsl
pop
jb
je
or
clc
lcall
cwtl
pop
jmp
lods
jne
sbb
out
dec
int
or
nop
out
and
out
test
call
push
outsl
stos
shlb
and
xorl
and
rcll
rolb
lcall
adc
mov
and
pop
pop
flds
jno
add
outsl
mov
mov
xchg
push
adc
fstps
sarb
jg
mov
xor
jne
cmpsl
out
sub
in
call
mov
xchg
pop
or
mov
jecxz
mov
inc
xchg
ljmp
push
mov
movsl
aas
xchg
js
xchg
lock
stc
mulb
clc
pop
std
ljmp
test
mov
or
imul
das
lea
xchg
cmpsl
cmp
sbb
imulb
jne
jle
scas
mov
das
hlt
lcall
mov
adc
pop
ss
int3
xor
das
outsl
std
decl
lods
cmp
xorb
jbe
hlt
imul
daa
scas
fdiv
daa
xlat
and
cld
ret
loope
repnz
sub
dec
rclb
ret
ja
das
mov
and
pop
outsl
jnp
cmovb
stos
cwtl
in
roll
fwait
xchg
and
push
testl
stc
add
pop
lock
jbe,pt
fdivr
sbb
fdivp
sbb
add
std
cwtl
pop
cli
movsl
jl
mov
jbe
cmpsl
xchg
cmp
cmpsl
dec
mov
std
ljmp
leave
bnd
add
cmc
dec
repz
ljmp
or
scas
icebp
sbb
js
mov
mov
inc
mov
inc
shl
ljmp
icebp
or
and
mov
jg
pop
les
add
mov
xor
cwtl
mov
and
movsb
jmp
cld
pushl
leave
adc
stos
mov
pop
xor
iret
popf
arpl
mov
push
mov
mov
test
imul
nop
and
dec
mov
pushl
shrb
jbe
lret
mov
stos
pop
outsb
test
mov
xor
mov
out
push
rolb
push
pop
push
test
add
ljmp
popf
push
rcr
in
test
push
icebp
enter
scas
xchg
jnp
mov
jge
ljmp
xchg
xor
fdivrl
inc
cs
sbb
mov
pop
fistpll
leave
cltd
pop
scas
pop
and
sub
pop
out
pop
cli
decl
xchg
lea
lret
jns
or
mov
idivb
sbb
out
ja
lcall
mov
jnp
jle
mov
shll
and
pop
jge
sbb
sub
jecxz
incl
ljmp
adc
rcr
lret
mov
inc
dec
pop
je
push
cmovae
lcall
push
jb
xchg
fdivrs
dec
inc
pushl
push
aas
pop
jmp
push
aam
cmp
rorl
aas
stos
xor
jmp
and
ret
cmp
ret
mov
or
ret
xchg
push
fistps
adc
test
xor
decl
mov
fwait
ljmp
fwait
cli
sbb
in
ljmp
adc
lods
roll
xchg
push
sbb
mov
mov
lret
into
stos
pop
and
sbb
sti
lahf
std
jns
mov
pop
out
dec
mov
jl
cmp
cld
pushl
pop
and
inc
mov
sub
clc
inc
dec
gs
aam
sahf
sbb
ret
mov
in
shll
pop
mov
mov
int3
mov
or
push
addr16
jg
fwait
out
mov
mov
dec
xchg
loope
movsb
lea
leave
jb
mov
inc
mov
outsl
add
loope
mov
daa
push
ret
int
fwait
pop
out
movsl
stc
sti
xchg
incb
rcll
aam
pop
stc
sub
jmp
pop
or
shlb
aas
jp
rorb
call
inc
jmp
jns
scas
jge
mov
add
add
mov
ja
movsb
xor
or
push
and
jo
cwtl
pop
and
fs
push
xchg
pop
dec
xor
adc
cmp
jp
fsubrs
in
fadds
ret
jle
mov
sbb
call
clc
lods
orb
jb
add
or
mov
iret
mov
dec
adc
lds
ljmp
in
imul
decl
inc
adcb
sti
fildl
out
jb
cmp
leave
lods
pop
mov
sbb
xchg
pop
jg
decl
popf
idivl
dec
pop
inc
xor
gs
cmp
cmp
mov
mov
sbb
imul
xchg
and
adc
or
xchg
pop
xchg
push
mov
adc
and
sbb
lods
ss
int3
decl
jge
mov
gs
add
jnp
ss
push
cmp
mov
lock
mov
fwait
lahf
jns
and
fucom
xor
je
pop
popa
sbb
xor
clc
or
cmp
ds
cmpsl
xchg
je
cmp
add
test
inc
adc
fucomip
jg
cmp
mov
out
pop
inc
fiaddl
cmpsb
test
das
rcl
dec
test
inc
jno
and
or
push
jg
cld
push
outsl
fsubrs
enter
mov
imull
ss
dec
push
decb
mov
call
jmp
inc
loop
pop
in
cs
cmpsb
in
loopne
xchg
hlt
ljmp
jle
movsl
out
fstps
or
mov
cwtl
sbb
insb
or
lods
outsl
pushf
add
and
clc
xchg
rcll
popa
es
lret
mov
push
negl
test
sub
and
aad
mov
loope
test
inc
cmp
mov
and
in
pop
push
adcl
jnp
in
popf
imul
xchg
add
pushl
das
in
dec
movsl
ljmp
mov
sbb
aam
movsl
lea
push
jp
lcall
jae
mov
call
das
imull
mov
push
mov
cmp
and
std
pop
ljmp
les
test
push
jno
adc
fstpt
loope
jecxz
incl
jnp
out
in
ja
xchg
adc
mov
das
xchg
outsb
icebp
mov
repz
dec
push
loope
leave
cli
cmp
in
int
outsl
lret
arpl
shlb
push
dec
dec
lcall
loopne
mov
les
and
mov
stc
or
call
jbe
aad
adc
pop
cltd
sub
add
aad
rcll
sub
or
lcall
jmp
xchg
stc
or
sub
jmp
enter
mov
push
push
sbb
push
cmp
mov
sbb
push
ds
das
lock
mov
mov
call
addr16
mov
nop
inc
ljmp
inc
divl
and
or
adc
pop
orl
outsb
or
pusha
loope
decl
and
lock
mov
and
mov
push
call
leave
and
push
into
cmpsl
add
mov
jb
dec
sub
mov
cmp
dec
dec
jo
mov
fisttps
clc
xchg
insl
xor
out
leave
or
add
xor
lcall
mov
daa
mov
push
pop
push
jne
and
xor
add
fdivrs
add
jmp
dec
jmp
dec
sbb
cmp
xorl
sbb
mov
fucomip
ljmp
aad
or
fidivrl
inc
insb
mov
addl
or
mov
movsb
cmc
jbe
imul
dec
mov
mov
incl
push
scas
jbe
push
bnd
leave
cmp
adc
test
jmp
jmp
push
in
and
enter
jnp
hlt
xchg
js
inc
addr16
popf
das
jb
mov
cmp
push
xchg
mov
adc
les
incl
fdivrl
jg
or
dec
out
loope
in
aaa
xor
andb
je
jl
ret
and
inc
push
es
xor
inc
jge
add
lcall
int3
aaa
push
test
push
daa
mov
cli
call
push
xchg
outsl
hlt
sbb
mov
mov
mov
sysexit
xchg
movsb
js
outsl
hlt
jg
sub
xchg
mov
in
gs
sarl
add
jmp
popa
imul
fcos
adc
and
test
and
rorl
pop
mov
call
cmpsl
ljmp
dec
jmp
or
mov
movsb
sbb
and
mov
test
push
fstl
loope
push
mov
icebp
decl
mov
mov
dec
cmp
dec
out
or
scas
insb
push
ljmp
xchg
insb
mov
lret
test
pop
jb
push
clc
push
call
mov
addr16
mov
movsb
pop
cltd
in
mov
mov
incl
pop
mov
jge
movl
rorb
dec
shlb
sti
push
cmpsl
ljmp
mov
pop
mov
test
pushf
xor
jg
lcall
stc
sahf
sub
popf
lret
pop
addb
pop
lret
gs
pushl
clc
jmp
mov
or
push
jb
stc
dec
jne
xchg
mov
jp
cmp
in
clc
cli
push
push
lds
inc
xchg
push
cwtl
les
clc
popf
push
fistpl
mov
mov
mov
arpl
push
mov
ret
sbb
imul
jge
icebp
sub
fisubl
mov
mov
jl
call
mov
popa
jne
xor
scas
addr16
js
pop
add
pop
jg
incl
lcall
adc
and
jno
xchg
jne
subb
call
mov
inc
mov
push
xchg
jns
push
cld
sahf
jge
repz
les
ljmp
daa
jg
nop
and
jns
add
xorl
adc
jae
je
shr
mov
incl
loope
popa
pop
stc
insb
xchg
pop
jb
and
loop
mov
mov
mov
ljmp
arpl
fwait
rolb
inc
icebp
jns
in
sbb
and
sub
push
roll
sub
add
dec
xchg
mov
arpl
ret
mov
lret
das
lds
ljmp
shll
mov
pop
or
cli
or
or
sub
aam
xchg
jg
fimuls
mov
fnstcw
xor
sahf
push
adc
mul
adc
rcrl
dec
test
movsb
gs
inc
xchg
cli
test
je
clc
negl
cmpsl
and
or
incl
fiadds
mov
dec
dec
pop
sti
adc
jmp
mov
xchg
shrl
sbb
ja
adc
push
or
mov
int
scas
call
inc
adc
pop
sbb
test
xlat
fs
dec
cmp
leave
sahf
sub
ljmp
mov
fstps
and
pop
mov
cwtl
inc
aad
sahf
mov
add
xor
add
cmp
or
scas
mov
xchg
mov
jnp
mov
xchg
mov
in
sbb
addr16
stos
lcall
fs
push
pop
push
imul
out
sbb
dec
fnsave
jmp
decl
std
mov
push
mov
outsb
sti
mov
shll
subl
cs
xlat
les
enter
int
addr16
xor
push
cmpsb
sub
mov
mov
decl
adc
xlat
daa
movsb
xchg
push
jp
cmp
fdivp
sub
and
dec
lcall
out
adc
loop
cmpsl
mov
mov
cmpsb
test
ret
std
pop
adc
cli
inc
jg
out
sub
addb
xchg
mov
call
repz
fwait
sti
xchg
call
xchg
das
ljmp
push
jmp
bnd
lods
jg
lods
cld
cmp
fcmovnu
ret
fisubs
ljmp
neg
sbb
pushf
incl
int3
sbb
orb
aad
xor
add
mov
testb
in
xor
in
ja
incl
sbb
push
push
stos
in
inc
rol
xor
jge
incl
mov
xchg
pop
mov
ja
xchg
sbb
mov
ljmp
fidivs
cli
out
out
jl
pusha
xchg
sbb
or
clc
pop
in
sub
or
inc
outsb
dec
dec
dec
cwtl
cmpb
test
adc
pop
mov
cltd
loope
xorl
inc
pushl
fcompl
mov
inc
mov
mov
push
pop
mov
call
xor
push
cs
sub
dec
pop
lock
in
or
rcl
push
call
inc
ret
bound
mov
push
hlt
or
pop
or
sub
lea
je
test
push
push
xor
adc
sub
dec
jmp
lret
and
mov
popf
dec
sub
jg
pop
inc
jp
add
outsl
xor
jmp
repnz
inc
test
sti
mov
dec
cltd
inc
repz
daa
out
bound
iret
adc
mov
hlt
aaa
sar
insl
push
imul
pop
ljmp
outsl
jns
cmp
sbb
fs
pop
or
popf
aad
inc
movsl
jecxz
sub
or
test
jl
mov
cmp
hlt
ljmp
hlt
dec
repnz
jns
mov
push
pop
sbb
push
dec
mov
push
adc
xor
filds
mov
push
int
js
divb
out
decl
xadd
loop
out
gs
jo
ljmp
imul
shlb
lahf
adc
mov
mov
mov
cwtl
dec
lds
es
inc
addl
out
rol
pushl
clc
push
xchg
imul
pop
inc
ret
incl
repz
jno
pop
daa
cmpb
int
pop
push
pushf
rorl
or
cmp
incl
xor
addr16
cmp
sbb
cmp
icebp
in
adc
or
call
leave
cmc
decl
js
popa
cmp
test
aaa
push
cmp
add
popf
in
ss
xchg
mov
jno
mov
adc
iret
jg
add
hlt
decl
push
fstl
xchg
gs
lods
stos
xchg
fucomp
pushl
enter
aas
sbb
sbbl
xor
mov
xor
fistps
mov
xchg
push
scas
dec
xchg
out
push
mov
add
xchg
mov
notb
lcall
jb
adc
into
mov
cwtl
je
loope
leave
and
sahf
inc
les
mov
lcall
lock
mov
xchg
jge
push
mov
cltd
imul
mov
add
inc
movsl
and
and
cmc
rorl
outsl
or
pushl
push
xchg
movsl
jmp
push
je
sub
lock
lock
addr16
mov
jno
mov
adc
xor
andb
loop
or
std
loope
fwait
adc
cmp
loop
and
ljmp
imul
mov
adc
pop
aaa
mov
add
push
sub
sub
das
scas
outsl
sbb
out
das
sbb
cld
inc
push
lock
or
add
lret
in
inc
rolb
and
mov
loop
push
adc
fildll
jb
sbb
notl
ja
pop
data16
mov
dec
xbegin
cld
jg
mov
mov
mov
int
push
mov
nop
pop
pusha
mov
or
pop
push
sub
movnti
into
add
pop
jg
pop
aad
sub
fdivr
inc
mov
push
jl
cs
jne
mov
fisttps
xchg
sbb
ljmp
popf
les
dec
push
cmp
cmp
fisttpl
das
lahf
addb
cmp
xor
push
fildl
xchg
sbb
ljmp
test
hlt
fs
incl
cmp
push
sub
in
push
inc
pop
loopne
cmpsl
fucomip
jg
sub
sbb
pop
fstpl
sbb
aas
in
jno
push
es
ljmp
pop
rcrl
cmc
mov
mov
inc
sub
fdivl
lock
stos
fildl
lods
pop
and
ljmp
sbb
mov
add
out
ljmp
pop
lods
inc
shll
lcall
sbb
adc
sub
fcmovnu
push
or
cs
pop
adc
jmp
lcall
outsb
pop
out
scas
mov
cmpsb
js
push
push
shlb
insb
aam
pop
hlt
cmp
jg
mov
or
adcb
mov
outsl
incl
sub
pop
pop
cmpsb
inc
jne
insb
je
sub
and
sbb
cmp
jg
pushl
js
push
add
mov
test
dec
cmpsl
sub
call
arpl
and
fs
daa
stos
ljmp
fsts
push
pop
mov
cld
pushl
adc
push
push
fisubl
lods
loopne
jge
or
lret
fidivrl
adc
mov
je
lret
cwtl
loopne
xor
pop
clc
mov
fisubrs
push
mov
iret
xchg
jg
jne
pushf
sub
outsl
gs
lea
mov
fiadds
into
cmp
ljmp
sub
mov
jns
popa
aam
mov
faddp
push
outsl
int
jg
jle
icebp
add
xchg
fwait
mov
repnz
inc
jmp
push
inc
push
or
xchg
aam
sub
or
decl
mov
insb
out
enter
mov
jl
fdivr
sbb
xchg
int3
in
es
loope
stos
mov
jp
dec
or
inc
or
xchg
jp
ljmp
xor
test
mov
ror
sbb
incl
pop
shl
sbb
mov
out
or
fldcw
aas
mov
cmp
adc
imul
shlb
idivl
ds
incl
ja
xor
inc
adc
lret
in
cwtl
push
xlat
mov
push
sar
jmp
arpl
lret
fcomip
mov
pop
mov
jecxz
ja
and
arpl
jp
inc
mov
xchg
jg
cwtl
xor
xchg
shll
add
dec
push
fidivrl
ret
repz
popa
dec
out
fcmovbe
rorl
inc
mov
test
jg
mov
pushf
cs
roll
pop
call
incl
sub
mov
sbb
js
sub
incl
incl
leave
and
cmpsb
pushf
jnp
sbb
jecxz
dec
push
mov
decl
rorl
addr16
scas
or
cmp
sahf
ja
in
jg
test
dec
dec
idiv
imul
mov
dec
or
jg
ljmp
lock
daa
mov
sbb
mov
shll
pop
dec
pop
mov
inc
push
aas
fsub
sub
adc
out
mov
sbb
push
scas
xchg
movsb
xor
mov
sub
dec
decl
jl
xchg
mov
cmc
jle
or
out
nop
fcomps
gs
shll
arpl
xchg
lahf
dec
pusha
lret
xor
mov
push
dec
mov
inc
cmpsl
mov
push
push
cmp
sbb
jg
xchg
fcmovnu
fs
mov
bound
push
filds
fidivs
lock
sub
fwait
rcrb
fs
fiadds
inc
scas
jp
std
sbb
add
outsl
icebp
clc
cmpsb
push
scas
mov
cli
int
mov
adc
rcrl
jnp
pop
pusha
sti
call
dec
repnz
bound
push
and
jmp
mov
pop
loop
adc
adc
sub
mov
or
cmc
inc
lcall
cmp
imul
jns
xchg
pop
xor
jge
sbb
aaa
pop
push
mov
push
lret
in
adc
das
loopne
imul
std
popf
mov
mov
leave
lods
mov
cmpsb
les
or
adc
add
mov
xchg
ja
xor
push
in
lods
xchg
sarl
cs
stos
jl
inc
dec
dec
push
rcrb
push
int
inc
ljmp
lcall
in
xchg
cs
add
xor
enter
push
push
add
xchg
or
mov
decl
movsl
mov
aas
sub
outsl
inc
fbstp
xchg
pop
jle
in
loope
sbb
xor
or
jae
sahf
push
ret
in
and
aaa
arpl
jp
in
adc
mov
popf
xchg
adc
loopne
aad
loope
pushl
pushf
daa
int3
jge
cmpsl
loopne
push
cmp
mov
movsl
xchg
outsl
cld
ljmp
lret
xor
inc
pop
adc
rorb
jg
and
lods
dec
ret
clc
movsl
test
lea
or
jg
js
rcrb
cmpsl
fistl
adc
jle
pop
ja
jne
daa
aam
incl
incl
mov
mov
jbe
adc
cmp
fsubr
mov
add
testl
push
test
filds
iret
sub
shll
int
cmp
sbb
dec
cs
sarb
out
fbld
decl
repnz
adc
ret
push
incl
sbb
cmc
stc
or
bound
xor
leave
pop
loop
push
sahf
xor
cmpsb
cmc
inc
xchg
cli
sar
das
test
pop
pop
sahf
cld
ret
cmp
cmc
mov
mov
push
mov
insl
in
call
in
add
push
inc
imulb
pop
dec
lods
paddusw
test
fisubrs
loopne
inc
data16
imul
test
je
mov
inc
add
in
adc
and
mov
xchg
ljmp
sti
out
adc
mov
insb
pop
icebp
cmpsb
fxch
or
xor
jge
mov
mov
pushl
les
pop
enter
push
sbbb
cmp
and
add
push
xchg
clc
decb
xor
shl
fs
movsl
ret
out
xchg
push
pop
jg
add
mov
ljmp
adc
dec
inc
mov
fstl
repnz
stos
popf
pusha
adc
mov
aam
adc
sbb
jae
shr
lahf
ret
orb
mov
or
and
ljmp
mov
mul
push
call
into
cltd
bound
fsubrs
lds
and
ljmp
sbb
jo
or
out
in
data16
cmc
mov
push
lods
add
jmp
fldt
jecxz
push
or
ljmp
jnp
ror
mov
cmc
fwait
inc
push
mov
mov
hlt
pusha
cmp
insb
std
sub
jmp
test
adc
or
fimull
popa
arpl
in
inc
pop
xchg
cld
incl
js
imul
jo
xchg
push
out
lea
jg
lcall
and
add
mov
xor
jg
mov
xchg
rcll
bound
xchg
movsl
mov
and
and
test
cld
ja
xlat
out
mov
ljmp
mov
mov
sbbb
xlat
and
inc
mov
fildll
imul
int
jl
scas
adc
cmp
xchg
stc
adc
sub
testb
call
lret
jae
cmp
popa
sbb
outsb
pushl
add
lret
int
aad
ds
pushf
mov
aas
aas
out
add
sbb
jmp
pop
data16
inc
mov
mov
decl
pop
dec
xor
cli
leave
daa
mov
dec
mov
mov
xor
or
enter
int3
ficomps
hlt
or
jae
call
cmc
jno
loopne
notl
cmp
and
lea
xchg
std
jg
ljmp
movsl
pop
and
push
inc
ret
ficoml
lahf
pop
rorl
ss
pop
push
push
mov
stos
sub
ds
pop
decl
or
dec
or
leave
jo
andb
mov
inc
loop
icebp
lea
fsubrl
notb
in
xchg
fiadds
and
pop
cld
mov
push
sub
popf
push
adc
adc
out
mov
pop
mov
cmp
add
cmp
pop
add
push
mov
nop
push
fxch
inc
fistpl
leave
jne
test
xchg
dec
bound
cmc
je
js
xchg
es
fwait
push
lods
idivl
decl
inc
sahf
in
sbb
mov
das
mov
mov
xor
or
dec
or
faddp
jl
pop
std
adc
call
dec
xor
jg
negb
leave
mov
nop
pushl
clc
mov
flds
dec
out
scas
xor
jae
push
setp
mov
mov
stos
sub
sub
jns
or
enter
pop
loop
inc
in
ds
rcrl
test
mov
sarb
inc
jmp
rep
sub
idiv
pushl
testb
das
adc
mov
xchg
adc
xchg
incl
scas
scas
dec
jbe
insb
mov
loop
sub
xor
mov
jg
jae
rcrb
test
std
lret
sbb
ja
xchg
pop
cld
outsl
jmp
into
sbb
push
add
inc
pop
pop
mov
fisubs
pop
mov
lods
repnz
popa
rcll
inc
or
inc
mov
aaa
sub
sub
inc
lcall
xor
mov
mov
aaa
inc
movsl
fs
and
int
mov
pushl
xchg
mov
mov
inc
ja
lds
test
out
dec
loop
loope
xchg
std
mov
stos
cmpsl
mov
test
int
pusha
dec
pop
cmp
push
mov
outsl
hlt
mov
pop
jg
sub
sbb
push
test
mov
inc
inc
je
call
in
pop
test
jne
clc
and
or
cmp
shlb
scas
sbb
jl
mov
rcll
push
fisttpll
js
and
test
adc
jbe
pop
push
mov
push
sub
loope
jg
rclb
xor
xchg
rorl
loope
xlat
fmulp
hlt
mov
addl
incl
push
push
jb
shlb
lds
mov
pop
pop
jns
add
outsb
fdivr
inc
sub
xor
or
scas
subb
pop
fildl
lret
ja
out
pop
cli
pop
movsl
mov
jne
lahf
and
sub
xchg
xor
decl
cltd
in
mov
push
aaa
pop
push
mov
xor
fidivl
lcall
fcomip
xor
mov
movsb
cmp
lret
lcall
mov
adc
aam
in
mov
add
cmpsb
sub
push
sub
cld
lcall
movsb
push
jmp
mov
push
lods
push
test
sbb
in
cmp
ss
inc
ljmp
xchg
sbb
sub
notb
shlb
pop
add
adc
cmp
sub
incl
out
clc
inc
mov
or
test
jge
sub
push
cmp
ljmp
jnp
pop
lret
movsb
fisubrl
leave
nop
sub
incl
xchg
mov
jbe
inc
pop
popf
sub
lcall
xor
test
popa
gs
mov
jge
adc
dec
add
cmp
popf
in
jg
push
and
mov
cs
xchg
fisubl
fstpl
jmp
scas
adc
cmpsb
xor
incl
mov
add
xor
repz
not
or
pop
enter
lcall
pop
dec
std
push
cmp
sub
lahf
cltd
push
jle
lret
add
mov
jmp
and
xor
dec
lret
stos
fmull
pop
jge
xor
cmp
das
rclb
dec
xchg
hlt
push
lds
scas
insb
xchg
insb
psubd
mov
lods
dec
in
cmp
sub
call
sub
jecxz
das
std
das
std
mov
pop
lcall
sub
mov
pushl
ss
xchg
cld
cmp
rcrl
pop
shl
sbb
call
bound
in
and
lds
stos
adcb
cli
mov
jns
mov
scas
inc
add
cli
inc
mov
sbb
decl
fs
loop
subps
xor
inc
dec
xchg
jae
cwtl
lds
js
cli
addr16
daa
pop
test
mov
imul
add
iret
sub
cs
out
mov
stos
lods
xchg
sub
add
ret
ljmp
or
inc
xchg
push
mov
fstp
cmp
icebp
jg
out
out
hlt
jle
pop
xor
aas
xchg
leave
dec
mov
js
jnp
jg
call
js
jle
push
addl
xchg
push
mov
add
incl
ss
mov
icebp
aad
call
xchg
call
enter
push
hlt
into
cwtl
lcall
pop
cltd
fimuls
dec
lods
les
mov
sbb
cwtl
inc
push
jmp
add
adc
fdivr
outsl
cmp
test
mov
iret
pop
and
push
mov
jl
in
cmp
bound
push
jg
call
adcl
fwait
sub
and
mov
pop
lea
call
cli
pushl
xor
push
aas
push
cmpsl
pushf
push
arpl
repz
mov
pushl
leave
sbb
leave
fwait
jne
add
rcl
adc
lcall
jle
inc
mov
test
jmp
add
mov
aas
or
stos
push
cmp
mov
mov
dec
nop
push
popf
fstpt
adcb
pop
cld
jg
repnz
jae
je
sbb
sbbb
jno
push
sub
cli
mov
inc
popf
rcl
js
dec
out
inc
sti
enter
aas
sbb
sub
decl
movsb
sti
ret
pop
or
jbe
out
adc
loop
sbb
sub
daa
dec
mov
repz
mov
insl
add
mov
scas
adc
pop
int3
fsub
push
cltd
jnp
cli
test
icebp
push
test
mov
jno
mov
fsubs
xor
inc
pop
test
das
mov
push
lahf
in
icebp
leave
and
fcom
fisubl
movsb
fimuls
dec
addr16
ror
lret
test
mov
movsl
out
or
adc
aaa
lcall
dec
pop
int
leave
push
cmc
das
stos
mov
inc
pusha
daa
data16
and
lcall
std
insl
subb
cmp
aaa
imul
adc
cltd
mov
mov
jle
pop
xchg
out
jg
inc
push
mov
repnz
popf
push
cltd
inc
pop
ljmp
ljmp
shll
mov
lock
cltd
dec
push
lods
mov
ret
movsb
pop
add
or
out
scas
pmulhw
sbb
xchg
or
in
add
lahf
mov
addb
cld
incl
dec
fldl
inc
aas
or
add
insl
pop
in
pop
adc
movsl
sti
ljmp
jmp
rclb
mov
cmp
ss
push
andb
mov
jmp
mov
cmpl
cmp
inc
sbb
jl
call
pushf
jge
mov
inc
loope
imul
test
icebp
sbb
mov
mov
out
leave
gs
ljmp
add
test
lea
and
imul
cmp
pushl
aad
insb
lret
inc
jg
jns
mov
imul
inc
ret
xchg
fstpt
incl
xor
xchg
int3
gs
sub
mov
inc
sub
dec
jno
mov
and
fs
cs
lcall
cli
movsl
sbb
sub
shr
shll
hlt
cld
dec
fs
imul
lcall
sub
idivb
aas
sub
cmp
hlt
jg
xchg
setp
call
adc
test
test
mov
pop
sbb
in
sbb
jecxz
decl
add
fldt
das
shrb
stos
sub
std
mov
jg
mov
pop
push
fimuls
sbb
pop
sbb
inc
sahf
mov
push
add
sti
outsb
dec
imul
jmp
and
incb
sar
and
imul
cld
dec
push
lcall
daa
add
sbb
fucom
call
sbb
push
pop
cmp
jmp
std
push
test
jns
lcall
lret
scas
fwait
push
data16
hlt
int3
xchg
pop
sub
mov
ljmp
ret
sbb
addr16
push
add
push
in
stc
imul
imul
mov
xchg
pop
sbb
xchg
inc
test
or
jo
outsl
icebp
mov
and
jmp
xchg
enter
les
call
decl
cmpsl
and
fs
out
stc
stos
fwait
mov
cwtl
popa
data16
jg
pop
movsl
ljmp
xchg
adc
in
adc
cmp
push
mov
mov
divl
lock
out
decl
cmp
dec
mov
xchg
mov
xchg
and
loope
or
add
mov
sbb
decl
mov
mov
repnz
popf
roll
lock
sub
inc
mov
imul
jmp
ds
hlt
sti
mov
addl
mov
ljmp
pushl
push
shr
aam
pop
aas
xchg
jecxz
into
and
sbbb
jg
test
push
in
cmp
mov
push
addr16
mov
fstpt
in
lahf
jnp
scas
xor
pop
sbb
mov
fisttps
mov
jmp
cmp
mov
incl
popf
fld
or
xor
ljmp
mov
jns
test
js
fnsave
jecxz
or
fstpl
cmp
fsubs
movsl
rolb
and
cmc
into
fdivs
pop
leave
lods
inc
cmpsl
imul
clc
sqrtps
mov
int
xchg
mov
call
dec
mov
data16
dec
call
xor
pushl
xchg
jbe
xor
or
gs
shrl
push
imul
adcb
jge
call
movsl
push
ja
jecxz
inc
mov
out
pop
xcrypt-ofb
cmpsl
jmp
cli
dec
xchg
add
loopne
lahf
sub
les
notb
cmp
insb
sti
mov
jecxz
mov
ljmp
pop
cmp
call
cli
clc
addr16
stc
das
fcomps
pusha
sbb
dec
out
mov
ljmp
mov
roll
xchg
xor
cwtl
cmp
popl
mov
pushl
add
adc
pop
lret
lcall
cwtl
jl
test
push
push
mov
enter
xor
sti
pop
in
xchg
divb
lahf
mov
les
divb
int3
pop
roll
outsb
sti
fldenv
mov
mov
push
clc
cli
and
xchg
push
mov
es
push
sbb
jmp
add
pushl
mov
adc
in
pop
pop
outsb
mov
xchg
jbe
nop
adc
das
pop
xor
dec
cld
sbb
sub
lods
cltd
stc
inc
push
add
mov
xchg
mov
mov
lds
jnp
push
mov
pop
dec
mov
adc
lcall
mov
mov
ljmp
mov
xchg
dec
or
mov
fidivs
dec
test
or
data16
test
inc
popf
lcall
pop
inc
fistpll
pop
aaa
es
loopne
popa
enter
rol
push
mov
add
mov
ljmp
mov
lret
and
lret
push
pushl
pop
je
push
mov
adc
xlat
icebp
mov
jg
add
fisubrl
outsb
jp
loopne
cltd
add
cmp
pushf
call
jmp
int
sub
insl
sub
int
hlt
jecxz
dec
repnz
or
sbbb
mov
pop
ret
bound
bound
insl
or
call
jbe
addr16
fcmovnbe
inc
mov
and
jae
insl
negb
repz
sbb
decl
mov
push
jmp
mov
push
mov
mov
mov
arpl
xchg
sbb
jg
ss
stc
and
dec
mov
lds
test
xchg
fucom
xor
mov
push
or
test
cmp
aam
sbb
mov
push
cmp
in
out
and
mov
xchg
js
add
pop
or
fisubrl
cmp
push
jbe
fsubl
aad
das
cld
push
pop
jb
cmovne
cmp
jne
and
adc
mov
mov
pushf
daa
cmp
adc
cmp
jmp
aam
inc
decl
push
idivl
mov
jnp
inc
push
nop
sarl
pop
mov
call
cmc
xchg
fiadds
dec
fwait
push
in
xlat
ljmp
lahf
mov
pop
out
ss
idivb
fildll
cmp
sub
push
push
daa
outsl
std
incl
mov
xor
cli
cs
js
inc
mov
push
hlt
jmp
pop
ret
in
or
orb
fnstsw
jb
xchg
jo
ljmp
ds
mov
leave
adc
jp
xchg
lds
gs
inc
imul
fcompl
dec
push
loopne
inc
rcr
cmpb
mov
call
into
fisttpl
lods
mov
call
add
and
bswap
pop
ljmp
push
lcall
rclb
add
ds
mov
push
mov
pop
addr16
icebp
outsl
leave
stos
int3
xor
imul
incl
pop
popa
test
mov
cmp
aad
clc
insb
lods
xor
incl
and
movsl
push
shl
mov
and
les
or
into
bnd
inc
or
mov
les
inc
popa
pushl
loopne
and
int3
dec
cmp
mov
movsl
inc
push
es
popf
sarb
add
mov
xchg
bound
sub
xchg
mov
incl
jg
adc
aad
mov
jno
push
movsb
and
mov
aam
mov
and
cmp
fcomip
inc
dec
mov
movsb
incb
ret
bound
adc
test
call
dec
pop
lahf
insb
jl
lea
lret
pop
aad
adc
add
lds
aad
fwait
leave
sahf
jecxz
ret
lea
insl
lods
jle
or
cmpsl
js
daa
test
xchg
ss
push
repnz
pop
fiadds
sbb
insl
add
mov
mov
jg
outsl
std
push
inc
push
sti
push
fs
xor
addl
std
xchg
push
test
incl
fwait
inc
shl
push
mov
mov
add
loop
bound
adc
dec
std
push
inc
js
pop
pop
xorb
mov
adc
cli
test
and
adc
lds
pop
lret
add
mov
lock
fimull
jne
cmp
mov
lds
jae
inc
dec
mov
stc
pop
cmpsl
ja
sti
dec
sub
pop
jg
cmc
mov
adc
pop
test
in
mov
outsl
icebp
sub
push
int
jle
push
sahf
pop
in
mov
hlt
mov
test
dec
lods
adc
mov
fwait
adc
fs
inc
movsb
sbb
test
mov
loop
xor
adc
and
adc
add
incl
sbb
dec
or
sti
dec
xor
dec
inc
mov
decl
cli
lret
shrl
aad
jmp
jl
cs
mov
arpl
mov
sub
iret
xchg
xchg
ljmp
cli
mov
inc
pop
loope
xchg
mov
scas
stos
aad
arpl
cmp
lods
dec
mov
sbb
imul
lods
sbb
and
sub
push
stos
arpl
ljmp
loopne
jl
inc
mov
cmp
imul
ds
ljmp
hlt
xor
mov
fnsave
sub
xchg
mov
ja
das
cld
sbb
das
sbb
fs
pop
shrl
test
das
std
shll
add
pop
push
lock
jg
pop
lret
mov
jne
mov
cmp
frstor
rcrl
pop
call
incl
fisttpl
jmp
stos
lock
add
fistpll
or
lcall
jnp
lret
xor
mov
jle
push
lods
incl
or
and
je
fldl
push
dec
aam
dec
mov
jne
les
or
shl
inc
adc
pop
cmp
lcall
or
mov
pop
js
aam
hlt
cmc
imul
push
pop
cmp
dec
inc
fldl
fs
push
jp
cmp
arpl
dec
or
arpl
dec
mov
xor
daa
leave
push
xchg
cmc
das
mov
clc
sahf
in
out
inc
fstpt
mov
jmp
rcrl
lahf
cmp
jp
rorb
xchg
xor
sub
mov
jle
fmull
xlat
xor
xchg
int3
imul
mov
popf
xchg
mov
cs
mov
inc
bound
xchg
pop
xor
outsl
imul
and
stc
fsubrl
xchg
add
mov
sbb
ja
movsb
cli
in
cmpsb
jae
mov
push
or
das
std
fisubs
mov
adc
insb
add
fdivrl
mov
rorb
stos
test
adc
add
or
jg
mov
cmc
sbb
cmp
push
subpd
sbb
icebp
push
paddw
mov
jae
xor
and
shl
clc
imul
pop
add
sub
mov
dec
cmp
inc
sbb
pop
xchg
cmp
or
in
call
loop
insl
lea
add
aam
sarl
outsl
lea
mov
sub
mov
fistpll
ljmp
scas
xchg
js
pop
push
andl
or
inc
in
mov
mov
into
outsb
xor
jne
sarb
call
add
xchg
push
sbb
pop
shll
ljmp
nop
push
add
aam
in
nop
loop
ljmp
stos
outsl
push
sbb
mov
pop
rcll
and
sub
insl
jo
push
push
je
mov
insb
icebp
add
scas
aam
jmp
cs
mov
add
dec
and
jg
ds
xor
fwait
or
and
sbb
inc
lea
mov
out
sub
aam
scas
mov
pushf
cmc
pop
cwtl
push
pop
and
inc
jp
mov
dec
negl
test
sub
pop
std
aam
outsl
push
ljmp
icebp
fimull
movsl
cmpsl
popa
fs
scas
movsl
xchg
out
mov
aas
mov
ljmp
cld
mov
mov
sub
adc
scas
mov
or
dec
jg
xor
icebp
pop
and
out
ret
sbb
pop
out
lock
pop
out
lcall
imul
adcb
lahf
push
dec
and
lds
mov
jmp
in
pop
lea
fwait
insl
mov
push
cmp
icebp
stos
lods
push
inc
hlt
lcall
cmc
insb
lahf
jbe
fcoml
popf
out
test
dec
loopne
xchg
je
std
test
push
mov
into
xchg
or
test
pop
push
shlb
inc
pop
mov
adc
rorb
les
enter
aam
xchg
add
xchg
cmpsb
lret
jg
lret
cmp
push
out
jae
cmp
andb
pop
xchg
inc
push
sub
adc
mov
xor
stos
shrb
insl
inc
jge
sub
cmpsl
fstpl
push
fldcw
jmp
adc
cmpsb
sahf
call
xlat
sbb
adc
jmp
out
stos
jl
or
and
outsb
fistps
ja
rol
fisttpl
pop
stc
mov
cmp
push
out
xlat
out
push
icebp
mov
add
test
adc
push
sub
mov
pop
lods
jb
sbbb
roll
jg
fucomip
xchg
lods
outsb
rorb
add
pop
mov
loop
sbb
cli
decl
mov
pop
jle
sbb
xchg
jg
or
daa
imul
push
outsl
icebp
lcall
ljmp
stos
mov
or
test
push
or
les
sbb
jmp
or
into
push
lds
push
pusha
icebp
test
lahf
mov
mov
loop
jmp
and
lcall
fisubl
jbe
out
pushf
ret
arpl
push
out
push
ret
sbb
nop
push
dec
sub
lods
lcall
movsl
adcl
lahf
ja
sbb
loop
inc
ljmp
xor
insl
mov
lea
sub
jmp
xchg
call
call
addr16
lds
aas
movsl
add
mov
popa
xor
lea
pop
and
ljmp
hlt
and
incl
mov
incb
fstl
dec
jle
mov
sub
cmpsb
dec
mov
pop
xchg
or
mov
xor
and
fsqrt
mov
ss
jmp
insl
shl
fisttpl
mov
jnp
mov
pop
aaa
cmp
dec
xchg
aad
pop
cld
das
cld
pop
jns
pop
and
adcb
dec
adc
loope
lods
das
jns
gs
test
out
jecxz
mov
jg
jg
inc
scas
inc
aaa
sahf
adc
hlt
mov
jbe
das
pushf
and
test
push
ds
shrl
adc
subb
bound
mov
and
fistpll
std
out
push
adc
sbb
repz
jns
rcll
cmp
scas
push
or
push
movsl
lds
dec
inc
sbb
xchg
xorl
cmp
das
cmc
push
addr16
xchg
dec
mov
das
push
pop
nop
stos
popf
maxps
mov
mov
aam
bound
cmp
mov
sarb
andl
xlat
stc
xor
in
mov
jl
fists
cmp
fsts
ret
xchg
xor
jns
or
insl
push
xor
sahf
adc
notb
or
cmp
fiaddl
jo
das
lahf
fbstp
cmc
pushl
push
push
stc
xchg
out
mov
or
mov
xchg
out
js
cmp
cld
inc
pop
leave
pop
mov
mov
dec
add
push
dec
jbe
shlb
xor
inc
xor
std
test
mov
data16
mov
cmp
into
or
call
inc
sahf
adc
imul
cmp
loopne
int3
outsl
test
out
xchg
adc
popf
nop
xchg
loopne
and
lods
sahf
mov
mov
mov
xchg
adc
xor
push
mov
inc
in
jge
test
in
outsl
icebp
or
or
rclb
ja
dec
jno
adc
add
jmp
pop
sbb
mov
sahf
dec
pusha
inc
xchg
hlt
or
stc
add
mov
push
pop
adcb
shrb
jge
mov
cmp
inc
push
stos
mov
loop
jl
loopne
lcall
call
lock
into
and
inc
loop
imul
or
add
call
xor
jmp
inc
clc
push
fcmovnb
or
lock
mov
mov
leave
movsb
stc
in
sbb
jo
jo
leave
aas
roll
scas
dec
fdiv
les
dec
cmpsb
lahf
push
out
ret
push
movsb
mov
outsl
dec
xchg
orl
xor
fsubrl
cmp
sub
test
pop
pop
inc
shl
dec
adc
aad
les
dec
push
int
jo
lods
pop
in
lods
or
jno
shll
sbb
jns
mov
pop
fwait
mov
cmp
repnz
jbe
out
sub
pop
and
jo
ljmp
pop
es
sbb
pop
test
cmp
or
les
loop
adc
das
icebp
scas
xchg
stos
in
std
xor
clc
movsb
dec
dec
sti
jnp
pop
decl
outsl
jmp
fwait
ret
cmpsl
mov
sarl
pop
outsl
shll
or
js
in
out
mov
inc
inc
jns
pop
jbe
mov
mov
sub
xor
jle
ljmp
call
jae
push
jnp
xlat
mov
pop
inc
ljmp
cld
mov
cmp
pop
hlt
pop
hlt
daa
nopl
push
leave
stc
lret
add
ss
das
hlt
jmp
mov
jns
ret
inc
ficoms
cmp
in
cmpsl
jno
inc
dec
clc
push
das
push
cli
mov
jb
xchg
lahf
imul
fimull
cmp
push
outsb
or
add
pop
cld
jg
aam
ficoms
insb
int
add
lds
incl
imul
pop
mov
ficoml
movsb
add
add
cmp
call
ret
mov
cld
out
cmp
mov
sarl
lock
cld
mov
xor
pop
cli
jmp
pop
icebp
fimuls
in
pop
inc
mov
pop
lcall
pop
mov
lahf
cltd
fcoms
cmp
sub
cmp
lcall
rcll
jmp
mov
andb
push
push
jnp
push
jl
incl
lret
mov
ja
sti
popa
loopne
jae
jp
out
addr16
outsl
cmc
mov
mov
rcrb
pop
mov
sub
ljmp
adc
adcl
out
push
push
gs
loop
pushl
and
push
loop
loope
xchg
jns
push
out
sub
mov
call
mov
cmpsb
push
movups
and
pusha
mov
popf
jle
jecxz
aad
push
popf
mov
nop
inc
push
sahf
enter
sar
jg
sbb
jno
xor
mov
xchg
push
cmp
or
jmp
loope
jb
aaa
pop
xchg
mov
clc
mov
ja
fldl2e
out
jns
add
cmp
cmp
das
mov
mov
imull
lahf
mov
push
subb
incl
flds
xlat
mov
cmp
sahf
inc
xchg
cwtl
sbb
scas
outsl
cmc
fucomip
add
ljmp
mov
sarl
loope
jg
aam
fs
pop
sub
adc
movsb
mov
dec
push
inc
mov
sub
add
cmc
lcall
xor
or
fdivl
clc
dec
ret
loop
push
scas
out
pop
jp
arpl
and
mov
test
js
ret
sub
shlb
xchg
mov
call
push
shll
or
pop
mov
dec
and
sti
dec
lds
pop
rclb
stos
mov
dec
aad
les
call
dec
int3
or
jg
loope
pusha
push
ljmp
insb
jmp
in
into
test
jmp
lret
jns
rcr
lahf
sbb
test
xor
push
or
jg
mov
sahf
pushf
xor
pop
inc
sarb
ljmp
add
sbb
data16
int3
adc
push
daa
mov
jmp
icebp
sbb
das
dec
scas
inc
inc
fdivs
mov
xchg
mov
push
jmp
insl
jl
ret
imul
mov
je
enter
dec
rcll
jl
dec
icebp
hlt
ret
insl
push
andb
pop
cmp
jg
lock
imul
push
xchg
or
mov
pop
call
mov
adc
lahf
movsl
orb
decl
or
push
mov
and
repnz
adc
inc
pushf
ljmp
push
mov
aas
cs
test
or
hlt
adc
jg
fadd
mov
push
std
and
repnz
cmp
mov
mov
cli
xchg
and
loop
mov
xlat
lret
xlat
pop
mov
pop
xchg
lock
pop
adc
push
lahf
subb
and
pop
sub
clc
ljmp
mov
mov
loop
jmp
push
mov
enter
sbb
pushl
push
sbb
call
movsl
lea
dec
ss
jmp
pop
nop
push
dec
call
add
shr
ds
lcall
sub
inc
mov
push
mov
cmp
jne
cmc
push
movsl
inc
push
test
cmp
outsl
movsl
xchg
inc
xchg
sub
jns
iret
pop
adc
call
jecxz
je
pushf
movsl
dec
mov
xchg
popf
addl
push
jmp
xchg
dec
inc
sub
std
mov
push
js
leave
stos
in
or
mov
adc
jmp
xchg
pop
pop
adc
dec
jle
adc
enter
pusha
shl
push
mov
xchg
sub
ljmp
or
or
hlt
xlat
mov
xchg
movsl
inc
add
and
test
fsts
lea
stc
jmp
push
aas
xchg
mov
lods
or
outsl
std
and
mov
ret
inc
add
jnp
push
stc
fisttpll
fisttpll
cli
aaa
incb
adc
scas
fstps
xchg
js
cmpsl
jmp
mov
xchg
ret
int3
dec
xor
sub
inc
ja
inc
call
mov
incl
mov
popa
in
out
in
movsl
test
dec
xchg
out
add
sarb
andb
movsb
mov
cmovle
push
xchg
movsb
test
or
sub
cmp
fucomip
inc
std
and
bound
jg
xor
inc
aad
mov
or
adc
loop
subl
test
decl
mov
xchg
arpl
sti
dec
je
sar
decl
imul
xor
ja
jmp
stos
mov
cs
icebp
rolb
jl
fs
mov
incl
adc
add
cmp
sahf
lcall
ds
add
inc
add
popf
sbb
mov
test
out
orb
cli
lods
dec
xor
jg
pushl
pop
repz
push
cmp
ss
movsl
mov
xor
repnz
lods
push
ljmp
aaa
jno
or
outsl
std
pop
dec
rorb
loop
sub
jl
cmp
push
and
inc
icebp
call
out
push
call
cmpl
xor
jl
outsb
fcoms
adc
dec
sbb
cs
sub
push
mov
ljmp
shll
shll
sub
lret
or
shlb
sbb
mov
xor
decl
jmp
adc
jnp
push
inc
sar
add
xchg
jmp
mov
es
lods
cwtl
jg
push
sarl
mov
stos
mov
cmp
cmp
jecxz
inc
cmp
loopne
rolb
incl
movsl
rclb
rorb
jns
cmc
adc
shlb
hlt
pop
mov
mov
incl
cmp
pop
jecxz
jle
in
or
inc
and
dec
jmp
aad
mov
loopne
iret
movsl
sbb
xchg
push
lods
push
mov
push
lea
xchg
mov
pop
clc
fildll
xchg
jne
adc
sbb
and
in
add
mov
jle
sbb
adc
xchg
or
pop
mov
mov
xchg
ja
jp
mov
add
inc
fcos
pushl
das
lret
jp
cwtl
clc
mov
imul
add
jle
aam
sbb
xchg
push
sbb
push
pop
mov
inc
outsb
mov
aaa
adc
mov
sbb
or
ret
sub
pushl
fadds
adc
sbb
xchg
pop
add
push
jb
or
fcomps
repnz
xchg
xchg
insb
xchg
cmp
mov
dec
jl
enter
or
iret
add
jg
xor
incb
add
pop
pop
add
mov
cltd
test
cli
hlt
mov
incl
and
inc
divb
lock
pusha
add
andb
adc
sar
mov
scas
leave
test
sbb
jecxz
sbb
jns
fildll
mov
decl
ror
pop
mov
or
mov
negb
call
cs
fmuls
sbb
addl
shll
dec
shl
fimuls
int3
mov
mov
and
mov
mov
xor
rcrl
loop
in
pshufw
test
aam
jp
mov
call
pop
aam
mov
mov
ss
lods
mov
cld
pusha
or
xchg
imulb
fadds
xor
int3
pop
outsl
or
out
lret
adc
decl
jmp
in
mov
sub
rcll
push
fiaddl
push
stc
xor
pop
jmp
hlt
push
imul
leave
pop
jecxz
fcmovb
out
xor
addr16
ficomps
lret
clc
test
jmp
push
inc
sarb
or
out
orl
pop
push
mov
pop
sub
and
ja
repnz
stos
decl
or
subb
inc
jne
push
sti
cmp
mov
fwait
stos
sbb
incl
cmc
add
or
bnd
xchg
and
pop
stos
pop
std
xchg
clc
repz
mov
popl
mov
bound
clc
jmp
and
and
sbb
sahf
inc
sub
adc
sub
cli
push
mov
repz
jne
and
test
add
loope
mov
jl
pop
std
std
out
mov
subb
int3
fdivs
pushl
xchg
lret
bound
ss
xor
fistps
sbb
jno
pushl
test
dec
lahf
or
dec
dec
or
je
mov
mov
iret
iret
dec
in
lret
and
and
ret
jb
outsl
cmc
jg
add
push
and
int
hlt
jmp
and
incl
jle
jo
fcoml
orl
sub
fwait
int3
pushl
ljmp
jno
scas
and
sarl
mov
jg
orb
es
pop
call
out
jae
cltd
lcall
and
cmc
inc
inc
lcall
inc
vhaddpd
adcl
pop
insb
cs
js
bound
ljmp
pop
shr
cmpsl
lds
mov
std
cltd
push
sbb
movsl
decb
out
pop
outsl
or
jnp
push
decl
or
pcmpgtd
jnp
inc
inc
call
sarb
in
sub
mov
insl
mov
xor
dec
into
repz
xor
xor
shll
fldl2t
mov
imul
gs
jne
pushf
aad
dec
xor
mull
push
hlt
decl
sbb
shlb
xorl
ljmp
mov
leave
hlt
pop
dec
loopne,pt
jp
inc
icebp
aam
scas
jnp
mov
call
pop
mov
test
cmp
imul
mov
mov
bound
cmp
mov
push
push
bswap
mull
mov
cmp
dec
mov
mov
jecxz
flds
mov
loope
inc
call
push
push
decl
std
pushl
loopne
cmp
sub
and
aam
call
or
pusha
lahf
aad
adc
hlt
lcall
int
lock
cmpb
in
cmp
adc
les
cmp
pop
fwait
outsl
inc
fistps
pushf
mov
jmp
incl
pop
fwait
push
mov
cwtl
inc
lret
jg
cmp
cltd
repnz
sbb
call
xchg
xchg
addb
sahf
and
push
stc
mov
jmp
cmp
dec
sarb
sub
shrb
stc
in
push
aam
mov
sbb
sub
imul
lret
jmp
jo
fistpll
mov
adc
lods
lea
adc
test
icebp
outsl
mov
movsbl
mov
repz
jg
incl
imul
xlat
jns
idivl
pop
or
enter
push
in
jge
adc
lcall
sbbb
insl
ljmp
andb
xchg
adc
push
lret
aad
xor
pop
pop
std
adc
pushl
and
or
scas
jecxz
inc
lods
fistl
cmc
cli
pusha
jbe
repnz
lret
rolb
dec
push
stos
xchg
xchg
ljmp
inc
movsl
iret
in
mov
lock
mov
inc
xchg
stos
jae
xor
es
push
ljmp
fcoml
and
out
std
outsl
dec
bound
mulb
lods
lcall
call
inc
or
stos
cmp
insb
xchg
cld
imul
movsb
scas
jb
mov
aam
stos
out
andl
clc
dec
mov
call
subb
out
cltd
fidivl
shlb
jne
cmp
aaa
cli
ljmp
pop
jmp
sub
push
push
cs
mov
mov
xchg
inc
loop
test
jge
mov
lds
ljmp
lock
adc
xor
sbb
cs
stos
movsb
icebp
enter
out
call
jns
push
dec
sbb
pop
not
fidivrl
xchg
popf
sub
mov
faddp
inc
cmc
dec
xchg
movl
stos
pop
imul
aaa
mov
cmpsb
sarb
xchg
pextrw
push
inc
repnz
mov
mov
xor
sbb
mov
cmpsl
rolb
adc
jb
fcos
outsl
cmc
jg
sbb
mov
inc
pushf
push
rol
add
inc
push
and
or
call
ja
sahf
loop
jno
sarl
ds
or
ljmp
push
jg
cmpsl
jbe
loopne
ret
fadds
inc
add
mov
sarb
pushl
and
lahf
mov
mov
insl
mov
mov
lcall
imul
lods
iret
push
xor
les
ds
xor
mov
pushl
cmc
and
sti
fcomps
lods
sbb
push
imul
int3
dec
add
adc
call
repnz
mov
or
sub
adcl
push
cmp
pushl
outsl
xchg
inc
lods
insl
jmp
in
sub
ret
xchg
add
add
inc
call
fsub
loopne
lea
xchg
movsb
ja
mov
std
rcl
dec
inc
lahf
cld
sub
int3
std
and
push
or
iret
adc
decl
sbb
cmpsl
mov
sbbl
rorl
iret
push
repz
jle
incl
test
cs
dec
lods
scas
pop
lods
adc
loopne
popf
in
xlat
outsl
and
cmp
stc
loopne
in
sub
xchg
pop
ret
add
lcall
and
adc
inc
sbb
push
dec
jae
addb
insl
or
mov
fs
popf
jbe
jmp
adc
dec
fimull
test
push
sub
jne
dec
and
sub
lds
mov
pop
sbb
call
lcall
gs
bound
cltd
or
std
leave
lcall
movsb
pop
push
lods
incl
pop
fstpl
out
daa
mov
ret
or
sysexit
mov
rclb
ljmp
inc
pop
mov
loope
jae
or
mov
inc
or
cmpsl
mov
divb
arpl
dec
js
mov
ss
mov
test
mov
stc
in
loope
lock
call
mov
adc
pop
jge
rolb
jbe
add
or
sahf
sub
push
bound
xchg
pop
inc
cltd
mov
xchg
mov
call
xchg
rol
enter
dec
cli
jno
in
hlt
fnstsw
mov
push
dec
jg
mov
inc
sti
roll
fnstsw
push
stc
xchg
jne
fimuls
sub
push
aad
xchg
and
xor
popf
bound
jmp
js
or
insl
mov
in
loope
lods
adc
filds
fs
pop
and
scas
sarl
mov
test
test
ja,pt
xchg
xchg
pop
in
cmpsl
pop
adc
mov
lcall
in
jl
mov
leave
push
xor
mov
popf
sti
in
int3
inc
and
sub
jmp
rcrb
call
jae
outsb
pop
pop
movsb
mov
inc
add
inc
push
hlt
aam
andb
inc
pushl
into
sub
cmovs
sub
lretw
xchg
cli
das
hlt
cmpsl
lcall
outsb
add
fcmovne
inc
dec
aaa
sar
add
jmp
cmpsb
js
adc
xor
xorb
inc
adc
sbb
sbb
stc
int
fsubrl
mov
inc
jno
dec
xchg
fcmovne
lcall
xchg
mov
mov
cmp
icebp
sub
jg
popl
call
lods
pop
add
mov
dec
rol
js
mov
mov
mov
mov
dec
jns
jle
stos
rol
fsubs
sub
adc
nop
mov
xchg
arpl
pushl
mov
mov
imul
lods
jbe
cmpsl
push
or
aad
jo
decl
xor
dec
dec
fisttpl
hlt
pop
jnp
inc
inc
adc
add
push
ficompl
jg
das
mov
sub
cmc
scas
call
pop
aas
outsb
mov
adc
std
aam
fwait
sbb
out
jnp
mov
or
lods
outsl
jmp
xor
shr
pop
xchg
sub
mov
sbb
mov
push
dec
cmc
lods
test
dec
test
hlt
xchg
call
fidivrl
jecxz
sbb
dec
js
xor
jp
imul
ljmp
leave
pop
mov
adc
or
mov
into
ds
inc
push
imul
out
loop
lcall
ret
fisubs
cmp
add
cli
jne
jl
scas
lcall
ss
or
jp
sar
sbb
mov
sahf
out
sahf
lds
into
lea
jmp
jmp
stc
cs
cmp
cli
cmpsl
cmc
std
inc
ljmp
sbb
decl
insl
lods
xor
sahf
lcall
cli
gs
mov
icebp
es
out
dec
in
mov
aad
sub
dec
fabs
jg
incl
pop
add
jae
cmc
aaa
std
mov
xchg
in
push
xor
mov
out
bound
or
pushf
enter
mov
ret
mov
rclb
out
cmp
push
jmp
in
mov
jmp
mov
outsb
lea
push
in
pop
inc
mov
jb
aaa
ljmp
fidivrl
and
mov
addr16
clc
es
push
lret
mov
xchg
ljmp
dec
inc
sub
mov
into
cld
sbb
sub
mov
mov
loop
pop
jmp
sub
test
test
decl
negb
mov
popf
inc
inc
outsb
out
out
pushf
addr16
jne
ljmp
lea
sarl
stos
adc
xchg
xor
dec
test
mov
sbb
movsl
inc
and
mov
xor
outsb
stos
cmpsb
icebp
jg
inc
pushl
cmp
andl
jae
imul
ret
aad
xchg
ljmp
or
pop
imulb
or
xchg
inc
mov
negb
mov
mov
in
add
mov
add
in
lcall
pop
xchg
mov
jg
aad
cmp
xor
popa
int
in
lea
andl
arpl
xchg
cmp
jecxz
dec
movb
divl
sbb
lahf
mov
lods
push
ret
inc
pusha
ret
fsubl
fwait
cmpsl
xchg
jle
pushl
lods
fwait
lds
iret
cwtl
jb
insl
pushf
pop
lods
fsts
js
add
and
sbb
ja
test
cmp
mov
xchg
idivl
cld
mov
cltd
xchg
xor
pop
sub
pop
mov
dec
jmp
push
outsb
cmpsb
mov
lahf
fidivs
fs
loope
les
mov
out
pop
popl
jae
inc
leave
inc
nop
inc
cmp
int
loopne
aam
call
pop
scas
iret
sarb
sarl
loop
dec
or
jl
fmull
pop
and
and
enter
mov
pop
std
in
and
cmp
mov
mov
bound
sbb
sub
jg
pop
out
mov
jnp
ja
sub
pop
mov
decl
dec
imul
xchg
testb
xor
movsb
mov
scas
jle
les
cmp
sarb
stos
mov
loop
push
fdivp
sahf
std
lods
fisubs
inc
jg
cmp
cltd
insb
data16
mov
aaa
hlt
out
mov
jmp
scas
dec
pop
andl
aad
adc
rcll
ret
sbb
clc
mov
sahf
fldl
sbb
pop
enter
pusha
insb
shlb
pop
inc
push
cmp
clc
movsl
and
pop
dec
dec
stos
xchg
mov
call
pop
pop
add
in
test
ljmp
lret
push
ljmp
mov
adc
add
sub
mov
cli
push
mov
int3
cmp
cmp
xchg
cld
jmp
mov
fs
xorb
xor
arpl
mov
jb
popa
fistl
int3
stos
jmp
or
sbb
pop
lock
adc
jb
loopne
adc
pushf
test
es
jle
repnz
or
jne
push
inc
mov
lods
ret
pushf
xor
decl
mov
test
mov
psubusb
sbb
in
rcll
xor
cmc
jmp
or
into
mov
hlt
xor
jp
daa
pop
mov
xchg
rorl
or
insb
insl
pop
cli
jns
je
fstps
ljmp
test
push
hlt
jle
dec
inc
shlb
shll
pop
push
shrl
icebp
lcall
sbb
pop
ret
add
xlat
pusha
cld
mov
ljmp
xor
add
cmp
mov
jmp
stc
cmp
out
fisttps
adc
addl
lcall
sti
fmull
pusha
sbb
add
cmc
mov
push
dec
clc
or
pushl
fisttpll
xor
shr
lcall
std
adc
jl
mov
andb
jge
fistpll
nop
out
mov
pop
push
mov
inc
sbb
jg
lcall
mov
mov
shrl
push
xchg
push
adc
jg
mov
pushf
pop
jl
insl
ljmp
cli
jb
push
incl
mov
test
pop
cmp
mov
sub
das
hlt
jmp
add
aas
hlt
int3
push
push
rcrl
loop
shll
cmpsb
and
iret
pop
xchg
mov
or
xchg
and
pop
mov
gs
lcall
decl
in
mov
or
fdivs
scas
incl
cld
mov
xchg
dec
xor
imul
xchg
out
and
repnz
cmp
push
lcall
xor
icebp
test
add
lgs
iret
divl
pushl
clc
lcall
dec
dec
hlt
pop
xchg
sbb
fmulp
lahf
sbb
jecxz
out
push
lock
mov
mov
test
arpl
push
iret
dec
cmp
gs
rol
iret
lds
cmp
pop
pop
ret
bsf
sbb
fucomip
jmp
push
push
xchg
dec
or
adc
test
push
jg
loopne
inc
jne
bound
es
lcall
pop
add
adc
dec
dec
popf
mov
and
decl
pop
jl
add
mov
fs
roll
inc
sbb
loop
stos
push
cli
ss
mov
inc
jmp
fs
adc
xchg
pop
cld
sahf
adc
jne
cwtl
xchg
dec
dec
clc
into
pushl
fsts
popf
fcoms
in
jne
divl
loopne
adc
sub
or
mov
push
push
imul
push
test
dec
jle
sub
int
dec
cld
add
stos
loopne
mov
sub
cld
pop
xor
rorb
fwait
push
push
pop
ljmp
fstpt
inc
inc
jge
jp
and
xchg
scas
in
aam
cs
mov
xchg
dec
loop
jmp
mov
pop
cli
ljmp
push
or
sbb
test
scas
sub
aaa
cli
lods
cmp
lods
sub
mulb
dec
aas
mov
std
mov
ficomps
imul
or
stos
mov
pushf
jno
adc
pop
pushl
inc
stos
mov
fucomp
std
pop
popf
xor
cmc
shrl
xchg
sub
std
incl
sbb
cltd
shrb
and
cltd
push
jmp
mov
mov
jg
call
repz
xor
pusha
fiadds
sub
xchg
pop
inc
inc
incl
cwtl
out
shl
xchg
pop
pop
insb
add
and
sub
outsl
push
mov
push
nop
mov
incl
arpl
sub
adc
or
sbb
cwtl
out
mov
aaa
fsubs
push
mov
mov
push
inc
test
stos
dec
mov
notb
scas
pop
xchg
mov
inc
ja
push
stos
pop
inc
in
fdivr
jg
push
lock
xchg
add
fs
stc
lcall
lret
inc
ds
js
mov
insb
push
jg
in
adc
fwait
adcb
or
call
cmp
sahf
cwtl
mov
insl
mov
mov
je
call
call
cmp
mov
movsl
aas
cmpsb
lea
mov
cli
pop
push
xor
fldt
scas
icebp
push
mov
jne
mov
sbb
lods
jg
fbld
mov
dec
lods
adc
aam
xchg
xchg
jo
call
dec
adc
aad
call
nop
adcb
mov
mov
out
add
jl
lods
in
sub
insb
nop
xlat
jl
add
std
negl
jg
sub
mov
test
pop
mov
sub
jmp
lock
pop
and
leave
fwait
jno
inc
dec
and
inc
push
jmp
push
pop
and
xchg
xor
shlb
jnp
scas
ljmp
cltd
jg
or
stos
xchg
in
cmp
pushl
inc
mov
xor
imul
jnp
mov
hlt
jnp
insb
xor
push
sarb
mov
sbbb
icebp
add
ljmp
addb
decl
das
addb
lret
pop
les
clc
pop
ljmp
push
pop
cmp
lea
lea
pop
clc
add
pop
sub
es
add
adc
aad
or
std
ljmp
mov
inc
push
insb
scas
cmpsb
or
push
lret
and
mov
pop
xor
movsl
ficomps
fwait
sub
out
or
pop
out
xor
test
jg
mov
lods
int
scas
jl
mov
or
repz
pop
gs
decl
push
lds
adc
mov
mov
add
jg
mov
lret
xorb
scas
mov
jge
call
dec
enter
scas
pop
mov
pushf
push
enter
or
dec
or
shll
push
adc
addr16
incl
mov
and
or
mov
mov
stc
scas
xchg
mov
into
mov
dec
mov
ret
incl
jmp
popa
lods
repz
mov
jno
add
popa
faddl
enter
std
incl
stos
jno
adc
insb
xchg
mov
cmp
xchg
gs
push
mov
mov
mov
pop
mov
jo
out
mov
mov
call
jg
cmp
dec
sbb
ss
data16
xor
pop
cmp
mov
std
fsubr
xor
pop
das
jmp
outsl
jmp
mov
loopne
stc
pop
cmp
jo
add
sbb
xchg
cmc
js
sti
decl
inc
out
cli
jae
in
hlt
in
daa
jp
mov
cli
cltd
stos
ljmp
push
jl
outsl
sbb
xchg
icebp
imulb
pop
push
sbb
lret
lcall
dec
sub
dec
shl
cmp
jnp
insb
cli
xchg
jmp
jne
rclb
xor
je
inc
or
adc
test
mov
ljmp
cs
add
sub
sbb
flds
out
cld
scas
mov
add
decl
out
pop
es
inc
or
shr
mov
add
cltd
adc
jp
addl
pop
loop
lcall
sbb
dec
pop
inc
or
dec
movsl
inc
add
pushf
push
ss
xchg
jp
and
jl
pusha
mov
inc
xor
jbe
enter
inc
incl
popa
leave
mov
cmp
jnp
js
add
xchg
sbb
call
imul
pusha
addl
dec
mov
cld
lcall
mov
lahf
imul
pop
mov
adc
fwait
fs
fwait
pop
mov
incl
ret
adc
aam
dec
loop
outsl
inc
add
cmp
ljmp
cli
jge
imul
pop
fcompl
mov
ret
pop
subb
fs
stos
adc
push
daa
ljmp
adcb
mov
sub
test
mov
aas
je
outsb
push
stos
scas
decl
push
mov
mov
sub
inc
xchg
pop
push
jmp
push
aad
mov
push
dec
push
rcl
enter
inc
jle
cmp
mov
push
xchg
dec
gs
jle
sub
fidivl
decl
cmc
xor
adc
sbb
cmp
mov
jmp
add
sar
dec
jmp
sar
and
xchg
mov
jno
mov
cwtl
xor
std
call
idivl
aam
xor
push
dec
out
pushl
lea
dec
fcmove
loopne
aam
jae
or
aaa
jnp
test
clc
data16
std
incl
repz
es
dec
aam
cmpsb
sub
loopne
sbb
test
jmp
add
inc
cmp
stc
push
xor
das
icebp
lcall
push
popf
jne
divb
mov
jo
push
or
scas
pop
push
mov
addr16
jecxz
pop
out
scas
sub
mov
ficoml
aam
pop
dec
mov
ret
das
jns
dec
mov
adc
decl
cmp
or
xor
test
inc
cmp
mov
jmp
mov
push
sbb
sbb
add
push
pop
test
in
call
ja
rcr
shr
push
push
mov
arpl
inc
adc
sbb
shrb
dec
dec
dec
stos
incl
insl
ds
push
lea
sub
movsb
movsl
or
mov
in
sub
mov
int3
mov
lods
sub
cmp
adc
sbb
das
icebp
sbb
mov
stos
mov
sarl
out
or
or
push
add
test
jo
adc
insl
push
and
pushl
cli
outsb
rep
mov
aad
ja
or
xchg
lret
inc
int
std
push
aaa
in
or
rcll
inc
stos
icebp
mov
xor
mov
mov
aaa
and
sub
xchg
test
out
jno
cltd
xlat
repz
lcall
aad
in
mov
popa
add
fcomps
mov
stos
dec
ficomps
das
cmc
mov
aam
outsl
push
bound
pop
jg
aam
pusha
push
ret
dec
lds
jnp
sub
addl
adc
mov
aad
jbe
call
cmp
repnz
pushf
sti
mov
sbb
sub
cwtl
add
fwait
std
cli
popf
dec
jg
decl
mov
lret
pop
outsb
mov
cmp
push
aam
sub
fstpt
in
pop
jb
mov
push
xchg
icebp
pop
xchg
outsb
insl
scas
rol
sbb
add
call
clc
das
icebp
call
push
testb
pop
mov
jp
arpl
mov
ljmp
scas
fbstp
pop
and
xchg
adc
cmp
call
xchg
sub
xor
pushl
vphsubbw
adc
es
jbe
into
mulb
dec
imul
aaa
rolb
enter
repnz
sbb
push
xor
rol
adc
adc
call
rclb
adc
sti
push
mov
push
sub
or
lcall
loope
mov
pop
mov
aaa
xchg
aas
nop
shrb
out
mov
repz
call
xchg
lcall
iret
scas
cmp
pop
push
test
jae
mov
mov
jecxz
enter
lahf
sbb
xchg
sti
ljmp
loope
lret
inc
xchg
std
movsl
movsl
js
mov
out
cld
cmp
jg
icebp
adc
cmp
fadd
enter
mov
dec
repz
push
call
in
outsb
imul
push
mov
test
cmp
popa
aad
ja
cmp
hlt
into
or
fnsave
ljmp
or
pop
out
fstpl
les
sub
fimull
mov
cmp
jecxz
imul
push
mov
mov
mov
push
das
sbb
xchg
movl
and
mov
ljmp
or
mov
les
cmp
cmp
sub
jno
orl
mov
dec
inc
gs
fcomi
ds
inc
cwtl
xchg
push
pushf
gs
pop
loopne
sbb
in
mov
ljmp
cld
inc
fmull
inc
and
xor
push
test
add
mov
pop
cld
outsl
cmc
adc
shl
je
mov
inc
test
sbb
adc
lcall
jbe
call
push
ret
cmc
sub
movsb
add
je
add
xchg
movsb
neg
cmc
xchg
das
cmc
push
dec
bound
out
fs
pop
sub
out
call
mov
adc
push
sub
push
push
adc
and
sub
cli
dec
mov
lcall
repz
xchg
sbb
add
outsb
ds
jp
xchg
or
cmp
add
mov
lods
jmp
mov
ljmp
negl
cmpl
cmc
imul
dec
rcrl
sahf
pop
cmp
pushl
daa
xchg
movsb
or
mov
mov
jae
test
fwait
pop
push
call
enter
push
jge
jb
sbb
jns
push
in
jmp
clc
int
popa
insb
jae
fisubrl
mov
adc
mov
adc
into
jle
xchg
jmp
dec
jno
fdivs
in
xchg
cld
popa
xchg
js
lret
or
cltd
imul
das
hlt
flds
xchg
aam
mov
cld
decl
cld
decl
dec
movsb
lea
dec
outsl
sbb
cmp
pushl
add
jne
sti
out
out
fwait
andl
in
fcompl
xchg
push
inc
push
or
fs
movsb
movsb
outsl
bound
in
mulb
mov
decl
fnstenv
jp
xor
pop
aaa
pop
and
out
mov
mov
js
mov
inc
push
jb
mov
arpl
xlat
cmpsl
das
icebp
call
bound
inc
cmp
xor
push
ret
xor
jg
test
ret
jg
sarb
jb
and
pop
xor
popa
xor
es
shr
aaa
clc
inc
icebp
xorl
or
mov
movsb
inc
test
add
cld
sbb
aaa
out
sar
movsl
in
adc
data16
add
test
add
or
outsl
cld
jmp
lods
mov
fldcw
sbb
mov
stc
popf
sarb
jmp
bound
rolb
sub
mov
xlat
ljmp
push
mov
and
mov
int
sti
adc
ljmp
pop
loopne
outsb
pop
ret
cmpsb
negl
rcll
ja
decl
xchg
cmc
push
and
mov
ja
xchg
hlt
pop
jle
sub
dec
test
decl
mov
ds
orl
repz
cmc
xor
pushl
leave
push
mov
insb
stc
push
sub
mov
sub
movsb
test
insl
cmp
push
adc
es
fnstcw
cmc
xor
inc
cmp
jl
sahf
jp
lret
dec
outsl
decl
iret
mov
mull
jmp
jne
dec
cmpl
or
not
fildl
orl
ret
fwait
add
cli
decl
and
sbb
or
sub
bound
mov
incl
cs
pushl
fistpll
push
and
mov
cmp
pop
jo
mov
scas
imul
mov
pop
dec
ret
sbb
adc
mov
mov
xchg
pop
lods
dec
mov
sub
push
decl
xor
inc
lea
sbb
pop
lret
adc
mov
inc
enter
dec
out
movsl
bound
jmp
push
fiadds
jp
call
lcall
outsl
lock
pusha
adc
jb
jle
mov
jb
decl
sti
lahf
lea
enter
pushf
test
sahf
std
mov
nop
adc
insb
cmp
popa
popf
pop
cmp
mov
into
xchg
sub
jg
adc
mov
mov
xchg
mov
loope
mov
mov
mov
and
mov
je
cmp
jne
movsb
aad
vrsqrtss
mov
jg
mov
out
and
popf
popa
fnstsw
movsl
push
dec
cmp
or
jmp
xchg
pop
out
or
jo
dec
negb
mov
fucom
mov
push
stos
sub
ss
ljmp
cmp
fcomp
sbb
cld
in
aaa
imul
call
lcall
roll
into
shll
inc
xlat
lret
call
mov
jbe
xor
decl
imul
imul
std
push
mov
or
repz
test
cmp
add
cld
dec
jns
je
je
loope
jb
mov
xor
push
test
mov
pop
std
outsl
fwait
popf
ds
xchg
test
fsts
mov
repz
inc
insb
jmp
lods
test
cli
dec
fisttpl
xlat
ss
mov
inc
push
std
sub
jmp
mov
push
loop
in
push
push
movb
pop
clc
jg
xor
loopne
inc
aas
adc
cli
push
out
xor
or
mov
xchg
jle
or
push
fwait
push
sbb
cmp
ljmp
repz
push
movsl
fadd
jp
push
and
stc
cli
push
adc
call
xor
mov
loopne
out
push
das
lock
pop
lret
sbb
cltd
pop
jns
popa
not
arpl
pushl
cmp
scas
mov
ja
je
rorl
std
mov
shrb
pop
divl
decl
mov
fnstenv
mov
or
jmp
movsb
cmp
jmp
xchg
popw
mov
mov
xchg
mov
mov
fcomi
gs
inc
ret
xchg
stos
loop
jmp
mov
inc
cmpsb
jno
cltd
ja
cltd
outsb
sahf
push
jp
lcall
mov
mov
add
sarl
push
lea
scas
jg
data16
test
jl
popf
xor
pop
data16
lods
in
insb
ud0
pop
std
dec
pop
inc
add
ret
gs
aam
scas
pop
ds
xchg
dec
outsl
xcrypt-ctr
cmpsl
cltd
pop
decl
popa
push
out
ds
cmpsl
pop
bound
inc
out
stc
dec
pop
loopne
lcall
jle
ja
outsl
add
sub
dec
cmp
cmp
fdivrs
bound
sub
or
out
insb
int
aad
mov
imul
pop
jg
gs
je
insl
in
jbe
push
and
xor
ja
ljmp
adc
cmp
push
cltd
rcll
lret
lock
inc
jmp
mov
sbb
call
clc
dec
xor
mov
pushf
sbb
rcll
or
jle
adc
lea
ss
push
push
push
sub
loopne
jo
clc
outsl
push
addl
mov
pop
mov
sar
mov
inc
in
push
imul
fucomip
jl
mov
jns
and
mov
lcall
fldl
mov
cmpsb
aad
add
or
lea
test
cmc
inc
mov
adc
out
push
push
add
das
jmp
out
pop
in
adc
or
sbb
cli
call
sbb
xor
push
xor
imul
popa
mov
aaa
cwtl
test
movsb
test
xor
push
in
or
cmp
bound
lcall
dec
mov
xchg
or
subl
xchg
xchg
cmpsb
push
dec
dec
clc
shlb
adcl
test
mov
lret
ljmp
and
sub
ret
jmp
mov
vshufps
incl
pop
aaa
test
xor
flds
jmp
stos
sbb
sub
scas
jp
xor
les
push
dec
push
pop
movsl
and
pop
punpckldq
mov
mov
jmp
adc
mov
xchg
dec
xchg
xlat
xchg
mov
iret
lret
insl
adc
sbb
cld
dec
js
jg
pushl
mov
call
cwtl
movsl
out
cmp
jb
imul
jmp
mov
jb
int3
adc
or
mov
pop
xchg
xchg
mov
shl
lcall
push
call
and
sub
pop
mov
repz
ret
jg
popa
dec
pop
mov
push
xchg
fcomip
xor
cmpsl
xorl
test
call
and
xchg
mov
push
imul
mov
jno
pop
fbld
push
cmp
push
mov
xor
outsl
std
lea
jl
popf
dec
gs
add
and
decl
sahf
push
data16
aam
jno
sbb
dec
push
inc
lcall
cmc
lea
sbb
jo
jne
push
stos
inc
xchg
rcrl
add
pop
std
test
incl
xlat
sbb
adc
sub
push
idiv
incb
mov
ljmp
pop
lea
jno
mov
inc
jmp
addr16
push
out
addr16
sbb
push
or
cmp
adc
icebp
xor
out
xchg
xor
dec
mov
mov
pop
loop
test
mov
out
movsl
stc
mov
push
pusha
dec
mov
ljmp
lods
dec
mov
lret
mov
jg
decl
loop
sbb
aad
fwait
inc
add
repnz
inc
push
inc
cmp
adc
outsl
ss
das
movsl
dec
cs
push
cmc
mov
decl
cli
or
mov
inc
dec
cld
cmp
push
fdivrs
cs
mov
incl
out
adc
pusha
inc
push
cmpsb
lcall
jne
adc
xor
adc
mov
dec
inc
leave
adc
call
sbb
dec
lods
in
cltd
adc
and
ja
iret
sub
jmp
decl
mov
cmp
and
movsb
dec
std
sbb
shr
add
incl
addr16
mov
or
ret
jp
outsb
mov
je
cmc
call
push
out
iret
fldl
outsl
scas
test
lcall
mov
inc
into
inc
mov
mov
cli
incl
mov
int3
mov
repnz
xchg
mov
mov
call
insb
and
ret
add
loope
mov
pop
push
sarb
decl
call
imul
mov
movsb
xlat
out
shll
pop
cmp
xor
ljmp
mov
jp
jp
push
and
fs
ret
fildll
sbb
inc
mov
xor
inc
shr
inc
lods
inc
cmpsb
das
lret
jo
ljmp
push
shlb
mov
cld
pushl
sbb
dec
or
and
add
bnd
pushf
inc
mov
lds
std
es
cmpsl
mov
push
loopne
std
jmp
push
insl
ljmp
outsb
cmp
aas
mov
pushf
xchg
icebp
mov
fs
in
cmp
mov
ss
xchg
hlt
dec
jle
pusha
sub
mov
and
sbb
mov
je
sbb
ljmp
push
and
mov
jae
push
mov
add
fsubr
cmp
punpcklwd
cmp
sbb
inc
adc
repnz
inc
ja
push
push
adc
call
sbb
pop
push
pop
fdivr
and
and
addr16
out
sub
lcall
and
imul
pop
pop
das
divb
push
sar
mov
popa
popa
xchg
stos
mov
mov
frstor
and
xor
push
stos
stc
lds
hlt
les
std
cmp
jb
xchg
pushf
jmp
cmp
xor
push
test
scas
xor
aam
mov
sarb
mov
std
cmpsb
ss
push
and
rclb
or
cmp
icebp
cmpsl
sbb
mov
mov
fs
sub
lret
sub
hlt
or
clc
fdivs
fistpll
sub
leave
and
lcall
cs
lea
idivl
in
jecxz
cmp
sub
sub
ret
and
dec
mov
dec
nop
stc
lcall
jecxz
dec
xchg
in
lret
stos
imul
mov
ret
adc
push
decl
cmp
sub
jp
cltd
cmp
jge
ret
inc
iret
popa
xor
pusha
lcall
xor
xchg
rcr
rcrl
imul
jo
mov
mov
aaa
sbb
in
xchg
shll
xchg
jne
into
bound
xchg
andb
ljmp
lods
ljmp
adc
dec
push
dec
dec
dec
jge
cmp
sub
mov
call
mov
pop
jnp
dec
push
add
dec
ja
movsb
addr16
and
adc
stc
and
insb
outsl
cld
decl
xor
jl
jb
or
sbb
fwait
mov
pop
aad
lcall
lods
aam
lea
ret
mov
cmp
xchg
ret
lods
movsl
mov
sbb
pop
mov
mov
push
lcall
shl
addr16
xor
lods
scas
stos
arpl
daa
jp
xchg
in
lock
cli
inc
jne
inc
sahf
test
js
or
and
out
push
push
loopne
les
pop
dec
neg
mov
scas
fstpl
out
loopne
mov
loope
adc
mov
std
xchg
aas
push
repnz
mov
icebp
aas
add
out
pop
rcrl
dec
aas
lods
adc
in
push
lods
ror
pushl
jl
and
aaa
mov
pop
xchg
sub
icebp
ds
lcall
inc
out
arpl
sub
fldl
and
iret
dec
outsb
push
int3
fsubl
out
cmpsl
mov
outsl
jmp
filds
cli
in
mov
into
ja
icebp
lret
je
xor
fcmove
insl
add
jmp
dec
mov
lock
in
nop
in
ds
imulb
sub
inc
cli
outsl
icebp
lcall
cmp
js
lret
mov
insl
push
pop
pushl
sub
jp
fisubrl
mov
xlat
sub
sub
lcall
test
cld
cmp
loop
dec
js
ss
ret
xchg
sahf
xor
ret
incl
push
xchg
shl
xchg
mov
mov
jp
aad
xor
js
incl
sbb
loope
bsf
int3
gs
pusha
mov
xor
lret
rcll
push
cmp
incl
adc
sub
xor
sub
xchg
imull
lea
ss
inc
sbb
ljmp
adc
idivb
and
stc
mov
daa
dec
pushl
sbb
pop
pop
loopne
cmc
daa
jne
inc
out
test
hlt
dec
loop
jge
cld
decl
cmpsb
add
out
mov
fadds
cmpsb
mov
ljmp
in
cmpsl
and
fisttpll
or
aam
sbb
adc
js
xchg
cli
jmp
push
lea
popf
addr16
sbb
test
push
jmp
aas
fdivs
or
add
jb
mov
fbstp
rclb
pop
sbb
std
pop
daa
mov
push
addr16
ljmp
ljmp
lock
pushf
inc
das
and
ljmp
xorl
push
and
fisttps
adc
cmpsb
or
iret
iret
pop
clc
call
outsl
dec
outsb
mov
cmc
mov
pop
loop
push
call
push
int
pop
dec
inc
inc
or
out
jae
mov
mov
sub
sub
jmp
xor
mov
ljmp
xor
fld1
inc
shlb
sbb
pushl
and
pop
jle
test
mov
sub
fs
mov
pushl
ljmp
cld
xchg
outsl
lret
daa
test
es
add
jp
push
call
mov
aam
js
pop
decl
xchg
sub
push
jno
sub
scas
stc
jecxz
push
dec
adcb
bound
repz
jg
sbbb
sahf
inc
std
sub
repnz
lods
shrl
das
outsl
in
call
outsb
ljmp
add
ja
fs
ljmp
cmp
jnp
push
sbbb
jmp
clc
clc
scas
lahf
cmp
stc
imul
or
roll
bound
shrb
add
xchg
mov
ret
push
jb
sarl
ljmp
mov
call
pop
cmp
and
cltd
jno
xchg
add
push
decl
adc
insb
jae
jbe
outsl
cs
xchg
sbb
or
or
push
jbe
inc
das
popf
add
lret
add
icebp
and
xor
out
inc
addr16
pop
insl
dec
mov
adc
sub
hlt
xor
movsb
inc
sub
inc
das
into
movsl
iret
dec
and
mov
mov
decl
aas
xchg
cmp
loop
push
insl
int
pop
inc
stos
push
or
fucomip
pop
test
and
fimuls
int
lods
fistpll
loope
jle
xchg
mov
popf
loop
stc
cmp
insb
mov
sub
imul
subl
cs
std
call
add
add
neg
lock
push
sbb
stos
incl
fiadds
popf
pop
xor
pop
pop
xor
mov
lcall
mov
out
scas
ljmp
cld
xor
lret
imul
repnz
sbb
inc
and
test
mov
mov
scas
xchg
xor
popf
incl
or
xor
jp
xchg
and
xchg
pop
lods
inc
jb
aam
push
test
les
test
lcall
test
mov
sahf
jge
in
nop
push
popa
bound
sti
xchg
xchg
jmp
ljmp
xor
scas
aaa
mov
mov
add
mov
cmp
addr16
lock
ljmp
fucomp
sbb
add
int
into
mov
push
push
cmp
inc
mov
mov
lods
scas
adc
push
xchg
jmp
popa
lret
popa
stos
mov
dec
sub
mov
jno
call
pushf
push
stos
push
sbb
inc
mov
mov
lcall
outsl
jne
add
lret
adc
mov
in
pushf
pop
adc
clc
in
pop
pushl
cltd
cld
ss
aam
incb
in
mov
ficomps
fisttpll
jmp
iret
mov
lea
out
mov
or
das
test
mov
adc
or
sbb
mov
lock
ret
mov
incl
rolb
mov
cltd
mov
dec
fwait
or
insb
push
dec
pop
ljmp
push
jno
dec
gs
sub
adc
pop
mov
pop
cs
aaa
fldt
and
adcb
push
mov
imul
lock
out
push
mov
hlt
jno
adc
sbb
push
or
mov
sub
xchg
aaa
lods
mov
xchg
jmp
cmpsb
push
sbb
je
dec
rcr
or
add
arpl
sbb
rcll
dec
pushl
faddl
mov
push
push
mov
jns
pusha
sub
mov
incl
les
pop
daa
inc
jae
adc
dec
in
dec
mov
sbb
testb
jg
dec
mov
loopne
das
loopne
and
pop
rcrb
int3
mov
push
jmp
mov
iret
mov
stc
pop
and
lods
pop
or
and
mov
lods
adc
jnp
push
fsubl
fmuls
sbb
std
lods
lcall
fisubs
or
gs
mov
imul
decl
out
lcall
cmc
fistps
fwait
sbb
cmpsb
and
cmp
fidivrs
fs
pusha
jge
hlt
ljmp
xor
in
push
jmp
add
dec
decl
jmp
repz
sub
insb
mov
jge
mov
movsb
lcall
jge
std
jb
mov
ret
mov
mov
sbb
push
inc
lcall
in
dec
testl
jg
pop
cmc
sbb
out
sub
call
call
mov
cmp
aad
movsb
jg
mov
mov
add
and
inc
clc
ljmp
icebp
test
mov
scas
imul
ret
pop
pop
inc
lock
inc
adc
lret
inc
lret
mov
or
push
xlat
cmc
outsl
ljmp
icebp
pop
jecxz
sbb
or
cmpsl
cmp
das
xor
aam
das
add
es
cmpsl
push
jnp
adc
lcall
dec
fxch
cmpsb
mov
pusha
sbb
xor
add
jbe
dec
je
inc
sahf
add
ljmp
mov
adcb
and
pop
mov
lds
adc
and
xor
shlb
jmp
les
pushf
xor
or
mov
dec
mov
mov
into
daa
mov
sbb
inc
sbb
dec
pop
aam
rorl
cmp
mov
hlt
inc
dec
xchg
addr16
ret
push
lods
mov
mov
fwait
xchg
mov
add
xor
lock
push
gs
shll
rorb
imul
int3
inc
add
fs
inc
jge
adc
jg
push
nop
mov
lods
mov
loop
cmpsb
lret
jl
ds
mov
movsl
icebp
aaa
test
dec
aad
xchg
ds
add
imul
mov
leave
cmp
imul
xchg
push
test
xchg
push
inc
mov
je
jmp
inc
popf
and
xor
add
and
jg
outsl
fisubl
sub
xchg
lcall
scas
sbb
incl
mov
mov
xchg
shrb
mov
push
jmp
decl
ficoml
insb
lea
xchg
push
sti
mov
lret
and
ficoms
mov
mov
sbb
dec
ret
sub
inc
mov
rorl
sub
xchg
jg
dec
or
xor
xchg
jnp
pop
loope
push
cmp
sarl
mov
xchg
mov
xchg
imul
jmp
lods
sahf
jae
scas
test
push
and
fisubrs
fstpt
in
add
cld
pop
mov
mov
cltd
fiaddl
int
repnz
inc
jecxz
rcl
ret
cwtl
sbb
shll
mov
shlb
repz
sar
test
jecxz
jns
mov
fcoms
mov
idiv
push
xor
es
xchg
icebp
pop
iret
idivb
mov
mov
ja
jp
das
mov
addr16
inc
lahf
daa
push
subl
incb
cmp
sbb
cmp
mov
in
div
out
mov
or
mov
jg
adc
jp
pop
fidivrs
mov
lock
mov
pushl
lea
cmp
adc
aam
or
in
add
inc
xor
pop
cmp
call
jns
sti
jge
adc
cs
xchg
push
movd
and
mov
mov
add
adc
mov
inc
jno
mov
fidivrs
inc
mov
test
mul
sahf
ljmp
lods
push
fadds
add
sub
xchg
loope
xlat
out
push
jnp
into
mov
dec
daa
ds
lret
ljmp
jb
stos
in
cmp
push
test
mov
hlt
daa
icebp
outsl
std
ljmp
cmp
jbe
mov
jecxz
scas
push
mov
xchg
mov
je
outsl
adc
bound
ljmp
inc
stc
mov
mov
movsb
jb
ds
or
adc
push
test
sahf
aaa
jns
fcom
inc
jecxz
sbbb
fbstp
sub
incb
sbb
pop
mov
push
push
mov
std
pushl
jbe
inc
fistl
lcall
cli
rcll
movsl
dec
and
cli
call
push
mov
and
add
sti
and
push
xor
mov
mov
std
push
lahf
arpl
pushl
int3
mov
int3
push
jp
push
aam
and
mov
sub
push
or
fsubrs
ljmp
mov
lcall
push
push
call
cmpsb
call
loop
xor
sub
data16
loopne
or
push
gs
inc
xchg
cld
cli
cmc
pushl
cli
and
nop
jecxz
loop
adc
adc
xor
icebp
lcall
sub
stos
mov
mov
adcb
leave
pushl
sub
mov
jmp
mov
lret
adc
push
pop
ret
or
test
and
mov
jmp
out
into
cs
out
and
add
cmp
jl
mov
clc
cli
cltd
dec
call
pop
loopne
lcall
jmp
cmpsl
pop
scas
mov
jecxz
or
insl
push
in
push
push
cmp
test
mov
cmp
and
mov
mov
xchg
inc
daa
inc
std
testl
pop
movsl
sub
movsl
outsb
cwtl
sarl
jmp
clc
pop
jne
and
push
fsubs
sub
ja
daa
push
mov
pop
pushl
mov
rcrl
aam
cmp
imul
xor
adcb
js
mov
bound
lret
dec
sub
pushf
jns
cld
or
and
cmp
fildll
icebp
decl
repz
pop
xor
xor
push
ljmp
test
pushf
adc
clc
mov
xchg
adc
popa
daa
std
aas
mov
dec
data16
call
cmp
push
aad
or
add
fwait
sub
push
call
dec
fbld
mov
fidivrs
cmp
decl
decl
mov
outsb
or
jno
inc
mov
jbe
ljmp
std
push
pop
dec
int3
cltd
and
test
mov
test
rcrl
aad
call
stos
adc
outsb
inc
cmp
dec
xchg
inc
js
aam
mov
lret
fnstsw
int3
pop
in
adc
push
adc
std
iret
or
repnz
adc
jmp
cmp
mov
jb
sbb
es
jle
decl
push
mov
xchg
cmp
mov
mov
adc
pushl
test
mov
mov
mov
imul
gs
lret
mov
stc
shrb
daa
pushl
f2xm1
call
inc
adc
popa
out
mov
out
push
lods
cmp
xor
pop
and
paddd
call
cmp
mov
push
sub
rcrl
xchg
push
mov
jo
imul
out
mov
inc
xchg
jmp
adc
loopne
xchg
scas
xchg
push
or
cmpsb
and
xor
and
xor
or
jl
jecxz
aas
ja
jge
mov
in
jae
repnz
push
daa
ret
inc
call
push
js
mov
fmull
add
fadd
sbb
pushl
outsb
cmp
mov
push
or
jno
idivb
movsl
jge
or
fwait
adc
clc
push
pop
mov
rcll
iret
sub
repnz
jg
sub
lcall
jae
push
dec
out
call
decl
out
jp
pusha
and
dec
inc
scas
xchg
cmpsl
mov
repz
pop
push
mov
lds
or
test
stc
mov
xor
loope
lock
inc
sbb
inc
nop
stos
pop
loop
outsl
mov
mov
sbb
push
push
and
decl
ret
xchg
mov
cmp
outsl
into
and
ja
jns
das
andl
mov
lock
or
jno
decl
gs
imul
popf
xchg
pop
mov
dec
pop
jae
sub
decl
or
roll
push
sbb
movsl
add
sub
push
xchg
and
xchg
mov
sub
pop
pushl
outsb
nop
push
mov
xchg
in
loope
inc
ljmp
fmull
pusha
scas
ret
outsl
pop
movsl
xchg
inc
leave
or
rolb
lahf
lcall
fucomi
mov
mov
cwtl
adc
cmp
mov
and
stos
lret
pop
pop
xchg
xchg
data16
xor
pushl
or
insl
jmp
xchg
ret
bound
jb
addr16
push
mov
mov
mov
cli
pop
sahf
sbb
xchg
insb
mov
mov
into
jmp
push
and
xchg
imul
lods
jl
sbb
shl
cmp
clc
shll
mov
cli
cmp
or
sbb
xchg
mov
and
insb
lods
jno
stos
lcall
push
adc
dec
adc
daa
xchg
jne
push
outsl
sbb
cmp
xchg
xor
scas
inc
clc
jmp
ljmp
dec
rorb
sbb
add
pop
test
scas
xchg
daa
jno
into
out
or
ljmp
mov
test
jns
adc
je
mov
lahf
out
mov
jnp
adc
sub
mov
insb
pop
and
and
mov
dec
xchg
xchg
mov
ret
dec
lcall
push
jae
sub
and
ret
xor
cmp
cmp
call
and
xchg
pop
loop
adc
dec
dec
loop
jg
decl
and
and
cwtl
mov
fnstcw
andb
out
arpl
dec
add
push
fucomip
or
mov
xlat
xor
in
cmp
pushl
and
cwtl
xchg
adc
or
aam
ds
jo
adc
sbb
cld
mov
jmp
call
test
adc
add
shlb
arpl
inc
push
xlat
xchg
mov
push
pop
cli
sbb
xchg
insb
pushf
inc
je
inc
movntps
or
push
test
icebp
dec
pusha
lret
xchg
rorl
cli
pop
outsl
pusha
adc
rolb
inc
mov
pop
imul
jne
insl
mov
xchg
sub
add
xor
ret
mov
stos
lock
jge
xchg
and
lods
sub
xlat
mov
rorl
xchg
decl
orb
jg
ja
xchg
es
jp
push
pop
mov
sbb
push
decl
adc
mov
test
or
arpl
mov
mov
inc
ds
sbb
clc
scas
xor
xchg
sbb
clc
jmp
imul
mov
imul
xor
xchg
push
addr16
aam
sbb
inc
outsl
sbb
ljmp
sub
std
cld
xor
add
jg
incl
cld
daa
fst
mov
ret
inc
or
cmp
mov
std
mov
mov
mov
shlb
mov
test
dec
mov
adc
xlat
pop
cmp
lcall
fbstp
sbb
cli
enter
fdivs
rcrb
sub
das
hlt
dec
aaa
xchg
jb
test
push
push
xchg
cwtl
mov
xchg
scas
or
xor
addr16
or
inc
sbb
test
mov
lcall
lret
dec
push
lahf
mov
out
inc
scas
fsubs
mov
fbstp
es
idivl
inc
mov
out
mov
or
in
adc
imulb
pop
lods
xchg
lcall
mov
call
fdivrp
jns
sahf
cmp
pop
fdivp
xor
push
out
stc
lock
xchg
decl
movl
and
movsl
adc
lahf
pop
add
decl
mov
hlt
test
pop
rolb
hlt
arpl
in
in
adc
out
call
lcall
js
dec
cmp
mov
cmp
jp
stos
aaa
cli
decl
or
lcall
jl
aaa
pop
xchg
adc
jg
in
lods
mov
cmp
jecxz
jg
sbb
sub
mov
push
lds
repnz
jge
inc
out
outsl
push
cli
adc
and
xchg
icebp
add
lea
clc
fldcw
mov
cltd
adc
repnz
push
test
dec
sti
push
js
fldt
icebp
pxor
cmc
das
lock
clc
scas
mov
push
mov
inc
insl
in
ss
das
add
mov
push
fmull
add
cwtl
ja
fisubs
push
call
sub
or
mov
mov
ret
push
sti
lods
out
jge
call
leave
sbb
push
lods
sub
xor
divb
pop
mov
loope
movsl
xchg
jl
int
xchg
inc
cmp
pusha
mov
add
push
sbb
jecxz
mov
inc
push
push
sbb
cld
scas
pop
fcmovnbe
ljmp
call
fs
arpl
xor
rolb
ret
lcall
std
cmp
jb
xor
inc
sahf
xchg
jmp
cmpsb
sbb
adc
das
lock
jne
enter
repnz
ljmp
repz
fldl
mov
ds
mov
hlt
shlb
addr16
in
call
pop
or
into
cmp
xchg
push
sbb
mov
movsl
and
sbb
into
aam
inc
pop
sbb
mov
and
cltd
xchg
repz
pop
push
xchg
jg
jmp
xchg
les
push
mov
mov
cmp
roll
stos
enter
into
xlat
jmp
mov
push
and
std
jmp
outsl
stos
sub
sub
loopne
in
sub
cld
lds
pop
fstpl
lods
xor
int
je
add
pusha
test
cmpsb
xor
xor
pusha
add
je
das
std
xor
push
sbb
xor
popf
sub
fiaddl
adc
mov
jp
loope
cmp
es
popf
cmp
mov
cld
testb
pushl
mov
jbe
outsl
jae
hlt
mov
fbld
mov
movl
ljmp
dec
or
fxch
mov
lcall
rorb
cld
inc
mov
pusha
and
icebp
add
out
pop
pushf
xor
loopne
mov
test
jg
call
mov
xchg
ss
test
xchg
data16
add
jp
lcall
cld
mov
sti
repz
inc
enter
fld
cmp
rcll
mov
ja
subl
inc
hlt
jecxz
dec
inc
mov
fmull
nop
pop
and
lcall
push
lahf
test
mov
sbb
in
lock
leave
imul
mov
jg
mov
repnz
mov
je
mov
jne
jmp
dec
pushf
inc
xchg
or
push
stos
icebp
cmc
pusha
lahf
aas
ret
jl
cs
imul
xchg
push
sbb
ljmp
std
test
jl
adcl
int
ja
inc
fdivl
inc
adc
nop
pop
sti
pushw
nop
scas
dec
mov
mov
shrl
test
das
insb
inc
inc
lea
jmp
push
subl
xor
fsubr
dec
dec
dec
stos
sub
ljmp
sbb
in
rcll
and
data16
xor
and
or
call
aad
push
xchg
cmp
ljmp
xchg
adc
pop
clc
js
std
das
inc
mov
inc
or
jno
pop
cld
cmp
lcall
sub
decl
inc
hlt
adcb
adc
cmpsb
xor
ja
jo
call
or
jmp
adc
test
jo
sbb
jo
xchg
notl
lock
inc
rcrb
mov
pop
cmp
push
lea
ljmp
cli
mov
movsb
dec
shll
or
xchg
inc
aaa
out
out
gs
mov
fwait
clc
sbb
out
mulb
inc
cltd
cmp
push
es
sub
cmp
call
ja
roll
sub
scas
roll
repz
ja
aaa
cli
in
xchg
sub
xchg
jns
insb
push
push
fwait
mov
leave
mov
lcall
xchg
jnp
jle
sbb
xchg
mov
mov
psubsb
sbbl
jmp
in
loope
push
mov
jp
lcall
sbb
sub
iret
adc
fdivs
adc
and
std
test
mov
call
cmp
xchg
push
repz
daa
stos
push
inc
sbb
shll
dec
jg
das
ret
nop
test
aas
js
mov
inc
cs
push
xchg
mov
inc
mov
insl
cmp
decl
in
push
or
pop
or
pop
pop
add
sub
adc
test
pop
je
repnz
jp
mov
jae
loope
je
ljmp
push
insb
test
push
std
push
inc
call
cli
arpl
adc
mov
mov
jo
add
pop
loop
stos
cmp
andb
fcoml
scas
and
fld
call
cli
pop
mov
test
mov
add
xor
inc
dec
mov
out
hlt
cmc
ret
add
push
lock
out
lods
bound
std
ljmp
rcr
out
dec
cmc
or
ja
aaa
mov
xchg
xlat
lods
mov
fwait
ret
mov
fucomip
outsl
std
dec
xchg
adc
stos
insb
insb
pop
js
stos
push
jne
lahf
fildll
dec
or
sbb
cltd
out
movsb
inc
dec
lea
pushf
shlb
iret
test
outsb
and
or
out
aaa
out
cmp
outsb
je
sbb
add
hlt
pop
cmc
into
iret
cmp
pop
mov
adc
arpl
lds
fwait
enter
jg
pop
pop
mov
mov
adc
lds
mov
dec
mov
or
sti
fisubrs
push
incl
xchg
xor
testl
jmp
mov
inc
pop
mov
push
xchg
decb
cmp
std
jnp
sbb
bound
lds
ja
mov
cld
ds
add
mov
adc
xchg
dec
pop
out
frstor
jle
movsb
push
xchg
std
ljmp
dec
adc
data16
mov
fs
pop
push
inc
out
sub
pop
std
call
jl
out
sbb
cs
les
xchg
outsb
movsb
repz
out
jns
fldcw
loopne
outsl
icebp
push
mov
push
cmpsb
inc
outsl
test
sbb
push
cli
jg
stos
mov
data16
and
push
jns
or
icebp
and
mov
lret
movsl
dec
cld
js
nop
adc
jo
sbb
add
xor
clc
call
cmc
push
scas
in
es
clc
cmp
jp
xor
outsl
jg
call
or
mov
mov
fisttpll
mov
sahf
filds
lahf
push
in
push
es
cmc
icebp
adc
or
out
inc
cld
ljmp
jl
xchg
mov
or
fs
outsb
pop
in
imul
sbb
icebp
pop
repz
mov
int3
in
mov
cmp
pop
fs
shrl
mov
hlt
jae
push
bound
pop
dec
push
dec
lds
dec
das
aaa
clc
pushl
std
adcl
lret
push
jb
insb
or
adc
movsl
lea
stos
sbb
call
decl
aas
call
cmp
cmp
or
jmp
mov
loop
lock
cltd
jbe
pop
xor
movsl
jmp
dec
lock
push
jne
aas
xchg
dec
fadds
ljmp
xchg
loop
pop
lret
mov
xchg
add
ljmp
std
call
cs
cmp
or
mov
cmpl
stc
inc
imul
and
push
or
cmpsb
xchg
xor
addr16
out
ficompl
mov
mov
jg
pop
lret
lret
test
dec
and
mov
call
clc
mov
dec
pop
scas
cmpsb
data16
jae
jg
inc
inc
pop
or
mov
pop
cmp
in
jl
cmp
cmp
xchg
arpl
jge
call
xor
or
arpl
out
cmpb
mov
sahf
sahf
inc
rcll
pushl
sbb
or
mov
add
fwait
mov
aas
mov
jmp
enter
outsb
loopne
sti
push
mov
mov
fstps
outsb
mov
pusha
mov
rcrb
test
aaa
add
ret
stos
mov
outsb
add
ljmp
int3
int
testl
push
dec
jae
pop
decl
cwtl
fcmovb
fsub
enter
std
call
pop
mov
es
sub
or
cmp
ss
and
lcall
mov
dec
xor
jp
dec
dec
mov
mov
enter
bsr
hlt
and
sub
inc
push
jmp
daa
pop
add
pop
adc
int
add
pushf
ficoml
aas
xor
inc
jae
das
lock
xor
cmc
in
adc
push
ljmp
mov
leave
fsubl
test
push
test
subl
in
mov
fisttps
xor
loope
out
lahf
add
jb
cld
decl
lods
cwtl
pop
or
or
mov
dec
cwtl
xchg
aad
ljmp
add
add
dec
mov
mov
jg
jno
pop
xor
push
xor
les
mov
lret
jno
sbb
lcall
clc
xor
movsb
andb
pop
dec
inc
mov
aaa
decl
mov
or
adc
ja
mov
in
je
lcall
push
xchg
inc
push
adc
lods
mov
call
mov
dec
jb
pop
mov
push
push
push
mov
lods
push
pushl
pop
jl
adc
out
dec
fucom
cld
pop
or
dec
test
decl
leave
cmp
jmp
xchg
jecxz
sbb
sbbb
sar
outsl
lock
lahf
out
rolb
loop
ror
mov
mov
jg
cmc
pushf
and
fmull
sbb
in
xlat
pop
jl
popa
fidivs
mov
pop
cli
jmp
dec
ljmp
mov
inc
sbb
cmp
sbb
aaa
std
push
jns
mov
jns
and
sbb
movsb
xchg
mov
mov
pushf
in
or
xchg
push
mov
or
sbb
xor
jp
leave
xor
call
scas
sti
popf
inc
popa
test
and
aaa
inc
outsl
xchg
jne
loop
xchg
fidivrs
add
lcall
repz
cmp
sbb
push
js
adc
fistl
inc
ljmp
lret
rclb
negb
sbb
jg
inc
lods
testb
cmp
push
lea
pushl
ror
jne
inc
push
cli
cmp
jp
mov
jle
repz
xor
cmpsb
xchg
pop
clc
insl
std
in
xchg
mov
fs
mov
mov
int
lods
outsl
fwait
push
leave
rcrl
push
or
decl
and
adc
dec
mov
xor
add
mov
adc
call
pushf
lahf
and
insb
cmp
or
xor
inc
mov
rol
sub
mov
test
gs
xchg
xchg
stc
cmpsb
hlt
bound
shl
out
sti
icebp
incl
add
aam
dec
sbb
dec
mov
pushf
lds
push
cli
sbb
mov
orb
mov
sti
xchg
stos
pop
sbb
ljmp
adc
adc
cmpsb
pop
leave
pop
inc
mov
adc
incl
mov
mov
adc
aam
sub
fdivl
sti
lcall
sahf
jb
pop
insb
or
ja
mov
fcmovne
push
xchg
mov
call
fimuls
mov
jb
mov
mov
sub
jae
loopne
lea
ja
loope
mov
ljmp
jg
or
imull
addr16
sahf
jp
push
cwtl
add
mov
out
xor
rcr
test
pop
push
push
push
xchg
jle
pop
insl
mov
pop
mov
loop
push
mov
loopne
insl
jge
ss
sub
inc
mov
lcall
xor
fwait
ret
andl
addr16
xchg
or
xorb
push
outsb
pop
outsb
and
adc
push
pop
add
or
ljmp
or
int
sub
leave
std
bound
das
mov
sbb
xchg
pop
pop
or
icebp
xor
jmp
push
not
push
les
mov
xlat
jne
cmp
mov
fcmovnbe
jbe
dec
dec
jge
shlb
test
cmp
cmp
pusha
scas
sbb
arpl
leave
jns
aam
jl
loopne
js
mov
xor
ret
daa
out
loop
pop
cmpsl
pop
les
daa
push
adc
dec
aaa
cli
idivb
cmp
pop
inc
shrb
jo
xchg
mov
pop
jmp
fldt
rol
xlat
xlat
push
pop
push
jecxz
sbb
fisttps
mov
test
and
dec
jmp
les
cmc
jl
sbb
mov
movsl
xchg
dec
scas
xchg
xchg
movsb
xor
mov
push
call
aam
stc
adc
shl
sbb
dec
ljmp
mov
mov
jmp
mov
shlb
jno
pushw
and
cwtl
loopne
add
lods
inc
add
xchg
push
xor
adc
ret
mov
push
lcall
or
xlat
std
sbb
movsl
lods
mov
loopne
cmp
lcall
les
mov
pop
push
outsl
cmp
inc
nop
mov
test
pushl
fdiv
jge
es
in
sub
sbb
fs
cmpsl
adc
call
jmp
jecxz
dec
mov
mov
pop
jns
adc
orl
mov
call
psllq
lods
pushf
dec
sub
add
push
add
jmp
fnsave
movsb
pop
test
xor
ljmp
lcall
mov
inc
decb
jno
aam
test
push
and
out
sbbl
dec
xchg
mov
cmpsl
pop
mov
fs
fs
fiaddl
lret
mov
and
mov
sub
stos
xor
lcall
enter
dec
sbb
cmp
jmp
les
jp
daa
in
mov
imul
decl
pop
je
jp
mov
loope
sbb
xor
jg
test
xlat
push
adc
mov
cli
jmp
push
or
mov
es
inc
inc
pop
fcoml
push
cmpsl
mull
loope
jae
mov
cmp
or
adc
lahf
stc
je
lods
dec
jb
adc
ljmp
incl
mov
gs
jae
imul
les
rcrb
pop
sub
decl
cwtl
jle
mov
cmp
and
rcll
stos
in
fdivrl
jmp
dec
adc
sbb
popf
add
xchg
dec
mov
loope
jg
jmp
mov
mov
addl
add
jmp
push
mov
mov
ret
and
pause
jno
mov
sarb
inc
das
lcall
call
into
add
or
test
lea
fistps
xchg
rol
fdivr
incl
ljmp
call
cli
loop
cmp
mov
test
arpl
data16
xchg
cmp
data16
push
mov
insb
andb
call
movsb
jns
stos
stc
cli
in
inc
and
adc
lret
xlat
into
mov
pop
movsb
jg
sbb
lds
push
push
popa
inc
movb
push
ljmp
hlt
dec
pop
sub
push
xor
jae
lea
sub
into
std
call
dec
and
mov
mov
mulb
stos
aad
xchg
cmc
call
mov
sbb
mov
mov
rcl
decl
in
mov
fwait
push
lods
in
in
jg
out
and
xor
xchg
jbe
cmp
mov
pop
fldt
rolb
pushf
fcmovnbe
sbb
dec
ds
test
pop
fs
popf
mov
setne
call
lahf
push
and
clc
cmp
sbb
push
sbb
mov
into
lret
pop
jg
icebp
shrb
ret
loope
lods
add
mov
lods
jne
cmc
mov
jecxz
mov
nop
cmp
cmpsb
add
cmp
xor
pushl
movsb
fstpl
mov
pusha
stos
mov
hlt
ret
pop
inc
imul
xchg
push
push
xor
xchg
js
adc
sub
cmp
in
imul
lcall
lds
and
enter
xchg
popa
sbb
int
lcall
pop
add
lcall
sbb
inc
mov
outsb
mov
orl
jg
inc
sbb
loop
mov
lret
add
in
mov
ljmp
popa
das
cmp
test
pop
xor
sbb
fsubl
pop
xchg
test
mov
cmc
xchg
jae
fwait
mov
aad
pop
fsub
mov
outsb
sub
ljmp
in
adc
sbb
addr16
bound
sbb
ret
cmp
pop
lcall
vcvtps2pd
adc
sbb
xchg
imul
es
mov
into
gs
xor
xchg
jmp
fdivs
inc
sub
sbb
pop
call
cmpsb
push
xor
hlt
dec
push
insb
lcall
mov
push
call
in
inc
jl
xchg
jo
bound
jmp
sahf
adc
mov
fbld
out
inc
es
mov
xlat
pusha
push
mov
jmp
lahf
sub
jmp
dec
adc
je
out
push
mov
fcomi
sbb
add
les
int3
faddl
pop
cmc
mulb
outsl
mov
sbb
das
cwtl
mov
mov
in
call
sbb
push
dec
fists
loop
mov
in
pop
aad
stos
cmpsb
mov
fwait
mov
imulb
stos
xchg
pop
pop
adc
test
inc
pushl
mov
mov
dec
add
out
rcrl
call
push
and
jmp
cmc
sub
mov
push
or
mov
adc
fst
lods
cmc
lds
int
and
sub
jg
subl
fisubl
mov
ljmp
repnz
loopne
dec
push
popf
or
lock
insb
leave
test
jg
sar
inc
pushf
add
mov
xor
push
mov
testb
and
mov
or
ror
stos
or
add
jmp
adc
adc
jg
lcall
outsl
mov
int
xchg
fbld
popf
loopne
std
addl
call
push
jl
or
stc
jl
outsb
mov
insl
into
dec
sub
mov
dec
repnz
lods
pop
aad
dec
into
jo
xchg
scas
addb
fcompl
jo
sub
aad
push
jo
ljmp
hlt
call
jno
push
in
or
mov
add
fiaddl
loope
and
outsl
mov
fcoml
aam
shll
test
adc
jns
test
decl
es
es
or
cmpsl
fstp
jl
ja
ljmp
cltd
test
pop
fidivs
inc
inc
popf
lds
push
pop
in
addb
imul
add
lods
mov
xor
push
xor
int
and
stos
mov
jne
inc
aas
jmp
fucomip
push
mov
dec
fdivrp
adc
mov
xchg
lcall
jmp
test
adc
mov
js
jbe
rolb
xchg
movlhps
xor
xchg
pop
sub
sti
lret
inc
mov
mov
mov
jb
icebp
sbb
enter
out
sbb
cmp
imul
ljmp
cmp
and
out
and
jo
in
aad
flds
add
adc
call
jl
ret
nop
sub
les
pushf
outsl
and
xor
movsb
in
stc
and
loopne
das
std
incl
test
ret
mov
adcb
adc
sbb
test
call
adc
inc
movsl
dec
and
hlt
adc
in
sub
insl
aam
jmp
pop
enter
cli
mov
movsl
cmp
sarl
cmp
sub
add
incl
test
inc
xchg
xchg
jbe
add
aaa
sbb
and
ja
lods
mov
pushl
cs
loop
and
imul
rcr
test
jge
aaa
jb
jae
sarl
mov
push
xor
mov
mov
jns
xchg
pusha
call
jg
arpl
ljmp
sar
push
mov
aad
pop
mov
mov
jnp
incl
jae
les
mov
int3
inc
or
stos
mov
sub
repz
xchg
imul
fisttpll
out
lock
lods
decl
mov
push
jmp
pusha
jp
and
pop
imul
pushl
mov
cwtl
xchg
fnstcw
dec
mov
orb
iret
inc
jae
pop
cmp
cs
mov
sub
sub
cli
test
xchg
cmc
repnz
repnz
lcall
dec
sub
dec
jnp
mov
adc
xor
lret
adc
jno
decl
ds
negl
cmp
hlt
dec
popa
int
or
mov
mov
or
inc
xchg
mov
adc
sbb
popf
in
loopne
push
dec
cmp
std
or
jmp
stos
mov
push
jns
or
xchg
stos
push
pop
orl
stos
and
and
sbb
fbld
mov
mov
jnp
lods
iret
shrb
push
jno
dec
pop
add
push
cld
and
scas
add
cwtl
cmp
pushl
pusha
aaa
xor
mov
sub
lods
mov
mov
pop
push
fwait
xor
mov
lea
add
mov
mov
inc
inc
mov
in
sub
mov
decl
ljmp
jg
int3
cs
dec
xchg
das
push
xchg
ret
mov
ljmp
icebp
incl
jbe
adc
lods
fcompl
jle
fldcw
addr16
cmc
xchg
divl
es
xor
lods
adc
insb
clc
scas
inc
inc
ljmp
inc
std
cmp
fistl
mov
xlat
inc
push
fcmove
les
loopne
aad
ds
and
incl
std
ds
cmpsb
loope
inc
mov
add
inc
dec
and
mov
rorb
push
mov
mov
outsl
addr16
pop
cvtdq2ps
nop
adc
pop
jnp
xchg
aam
inc
or
outsb
in
cli
push
add
sub
mov
push
sub
add
in
ret
imul
fcmovne
clc
shrl
daa
aas
pushf
cmp
jmp
lea
jbe
adc
push
mov
lea
add
jg
call
fwait
popa
mov
scas
xchg
sub
lods
js
sub
dec
adc
dec
xor
adc
call
xlat
cld
call
cli
pushf
insb
push
mov
dec
or
adc
xlat
adc
in
mov
lcall
pop
icebp
fcmove
pop
clc
ja
into
fdivrs
test
push
insb
idiv
call
xchg
fwait
add
cwtl
mov
shlb
cmp
jg
cmp
mov
aad
dec
sbb
sub
lcall
adc
rorb
or
inc
popa
out
decl
mov
pop
das
roll
cmp
cmp
sti
out
cmc
enter
dec
mov
xor
mov
push
pop
xor
int3
insb
mov
loope
loope
in
pop
loop
jo
jg
clc
test
cltd
sbb
stc
in
mov
dec
mov
stos
fwait
push
popa
decl
push
xchg
mov
icebp
bnd
push
das
push
push
jmp
inc
xor
dec
mov
jge
pop
jp
pop
mov
pop
lar
adc
inc
fldenv
push
jmp
push
pop
hlt
sbb
fnstenv
leave
push
inc
pop
pusha
fprem
or
sahf
aaa
mov
ret
pop
mov
fcmovbe
xor
sbb
rcl
jb
aas
cmp
lcall
dec
cmpsl
into
popa
or
sub
jbe
inc
push
rorl
idiv
pushl
mov
cmp
xchg
arpl
sbb
rol
sarl
fadds
repnz
mov
adc
mov
jmp
sti
int
sbb
inc
call
fidivl
xor
decl
lods
xor
pop
clc
idiv
add
fcomps
aaa
or
jnp
dec
decl
std
push
je
push
loop
lcall
aad
or
ja
mov
pop
cli
jg
pop
bnd
add
inc
es
cmp
fbstp
imul
outsb
mov
and
jl
xchg
clc
test
cmp
xchg
push
aad
aad
jle
add
gs
mov
fsubrs
pushl
adc
aaa
push
cmpsl
mov
outsl
stos
lea
lcall
pop
out
loopne
ret
out
movsb
sub
add
pop
insl
xor
outsb
mov
ja
or
mov
mov
pop
sbb
clc
jecxz
hlt
push
aad
je
or
inc
stos
pusha
xchg
leave
je
xchg
adc
lods
mov
popf
ret
and
outsl
cld
mov
mov
xchg
sarl
add
push
inc
hlt
clc
jg
inc
das
add
jecxz
dec
cli
lds
fdiv
outsb
adc
jmp
cld
cmpsb
nop
cmc
and
push
cltd
addr16
pop
xor
jp
cmp
sbb
xchg
dec
mov
decl
in
xor
daa
xor
pop
mov
popa
mov
pop
mov
jmp
push
out
xchg
xor
leave
sub
or
popf
imul
mov
mov
xchg
mov
sbb
push
pop
fwait
sub
cmp
lods
movsl
ret
sub
divl
pusha
inc
jmp
jecxz
push
pop
lahf
mov
scas
jb
sbb
push
push
xor
stc
std
sub
shr
testl
push
inc
mov
test
pop
outsb
xchg
pop
sbb
or
mov
add
ret
popf
pusha
or
gs
or
aaa
xchg
sub
pop
std
adc
xchg
int
jg
mov
pop
pop
jb
decl
mov
dec
pop
mov
call
push
wrmsr
jns
jmp
sbb
sbb
add
xchg
fucomip
cld
lods
mov
incl
cmpsb
cmpsb
rorl
dec
imul
cli
jbe
mov
popf
sub
stos
pushl
leave
in
xchg
pmaddwd
jns
dec
roll
push
inc
adc
in
pop
inc
out
test
pop
or
ljmp
addr16
aaa
mov
add
or
pusha
sti
xor
call
jle
pop
insb
sbb
jp
lds
or
jb
jmp
stos
xchg
mov
test
and
lcall
push
xor
add
xchg
pop
jnp
xchg
in
or
icebp
add
xchg
push
and
leave
ja
and
incl
aam
sbb
loop
adc
jnp
sub
incl
icebp
add
or
gs
notb
dec
pop
cld
jg
dec
es
xchg
push
push
xor
mov
rcr
ss
cltd
add
aad
out
stos
ljmp
add
das
or
aas
dec
cld
lahf
fcomps
hlt
xchg
fwait
fs
dec
mov
fiadds
mov
mov
mov
ljmp
jmp
and
cs
add
cmp
aaa
jg
ret
or
mov
shll
jp
push
mov
mov
orl
icebp
jl
mov
jmp
xchg
cltd
imul
clc
jmp
sub
xlat
jbe
lds
lahf
daa
cltd
lods
mov
out
data16
inc
and
push
fstpl
shrb
lods
xor
popf
xchg
incl
fld
xchg
lods
cwtl
dec
hlt
jp
xor
roll
push
mov
pop
xchg
mov
test
incl
sub
inc
out
or
sub
jg
push
xor
nop
das
stos
lret
cmpsl
pop
lret
mov
std
call
test
test
movsl
xchg
outsl
negl
imul
adcl
cld
dec
mov
lds
sub
loop
ljmp
mov
sahf
ret
sub
out
and
dec
mov
fstpt
adc
adc
sbb
test
dec
mov
pop
decl
push
icebp
lods
inc
in
repz
push
push
enter
push
mov
jg
sbb
cli
cli
or
call
cmp
incl
sti
dec
addr16
out
repnz
xchg
lods
je
xor
lret
cli
mov
add
cltd
ss
ljmp
mov
inc
test
rcrb
sbb
pop
decb
cld
rcr
dec
outsl
mov
in
pop
pushf
in
lret
repz
loopne
push
stos
pop
scas
adc
rcrl
rcrl
sbb
add
mov
xlat
sbb
push
call
or
icebp
hlt
jnp
and
or
mov
xor
sti
jmp
std
sub
ja
std
xor
mov
sub
out
pop
repz
mov
xor
cmpsb
sub
pop
lcall
push
inc
ljmp
push
outsb
push
push
sbb
xlat
sub
fwait
xlat
sub
lcall
test
and
sub
out
pop
pcmpeqb
add
mov
aad
pop
push
inc
push
jg
das
mov
aam
iret
movsb
or
push
jg
ljmp
scas
jp
pop
inc
add
lds
shrb
sahf
pop
ja
bnd
pop
loope
mov
and
movsb
loop
xchg
es
xor
bound
loopne
jg
jmp
int
rep
out
xor
push
out
scas
mov
jnp
enter
lahf
fisubrl
shrb
call
out
push
test
aas
lods
hlt
sub
sbb
mov
icebp
pop
cli
jg
decb
dec
lea
cmp
lods
negb
clc
cmp
xor
fwait
es
jnp
ljmp
decl
cmp
add
and
lcall
push
fisubs
dec
mov
loopne
mov
pushf
inc
and
cltd
xor
arpl
scas
pusha
sbb
dec
lock
lret
xchg
insl
mov
js
xchg
mov
or
xchg
or
jne
mov
xchg
jnp
mov
bound
inc
push
cli
jl
ja
scas
sbb
cmp
sub
jmp
sub
sarb
xchg
and
push
adc
mov
jo
mov
fsubp
mov
or
dec
cld
pop
call
push
jo
in
pminsw
inc
pop
jg
lcall
inc
mov
xor
cmpsl
cmp
or
cli
mov
ljmp
jmp
mov
insl
les
mov
pop
jno
adc
call
ljmp
pusha
jl
fbstp
and
xchg
jae
mov
repz
outsl
decl
sub
lods
popf
push
inc
test
out
mov
xchg
and
jmp
mov
lcall
push
fildl
sar
shl
inc
push
imul
pushl
clc
push
jno
shl
cwtl
into
push
sbb
ja
decl
inc
mov
xchg
cld
push
nop
fimuls
int
or
call
std
pop
push
xchg
ret
push
push
or
sti
inc
pop
adcb
mov
push
ljmp
adc
push
dec
lock
data16
sub
xchg
jno
cs
or
jg
dec
fdivrs
push
andl
fisubs
mov
cld
pop
clc
call
cmp
mov
ds
push
pop
testl
pop
icebp
push
dec
out
dec
or
inc
loope
rcll
repz
mov
add
lcall
fstpl
lcall
xor
test
das
mov
push
repnz
aam
jle
inc
dec
push
std
jge
lret
fsub
loope
pop
leave
addr16
movsb
incl
cmp
cltd
cmp
mov
mov
addb
stos
pop
call
pop
cld
ret
xchg
inc
sbb
insl
xlat
sub
pop
scas
push
das
adc
stc
push
sub
sub
adc
movsl
stos
jl
fnstenv
fwait
mov
scas
ja
push
aad
sbb
jg
xlat
mov
mov
dec
cmp
pop
icebp
cld
jno
cmp
jnp
jno
sbb
das
lock
test
out
sub
in
cltd
icebp
fisubrl
shrl
mov
mov
js
xchg
fnstsw
mov
jge
lcall
dec
scas
cmp
stos
aam
or
sub
xor
push
and
ja
pop
adc
rol
or
push
divl
mov
mov
movsl
std
adc
int3
mov
call
xor
lret
pop
jmp
dec
andb
mov
rcrl
fstl
pop
jmp
push
cld
test
flds
incl
and
fisttpl
lods
mov
mov
lret
in
das
or
aaa
sbb
mov
pop
sub
cs
test
ljmp
pushf
cmp
mov
mov
mov
out
lea
stc
inc
mov
leave
ljmp
xor
cli
repnz
loope
and
popa
or
cmp
mulb
bnd
cli
push
andb
loope
outsl
dec
mov
xor
fs
arpl
jo
in
adc
ljmp
cmc
sahf
loope
cmp
fs
imul
mov
pusha
push
loopne
jg
fldt
scas
inc
scas
pop
push
xchg
jl
scas
cli
dec
push
shll
lods
outsb
cld
inc
rorb
rcrb
fs
or
mov
pushl
mov
sub
pop
mov
cli
xchg
inc
jns
mov
sar
cwtl
loop
fimull
push
adc
test
cmp
adc
sbb
cli
std
fldl
mov
xor
push
add
sub
arpl
xchg
clc
enter
cmp
cmpsb
jl
push
inc
pop
loopne
dec
push
dec
adc
and
mov
call
xchg
dec
lcall
or
xchg
ds
dec
into
pop
lcall
incl
mov
call
push
popa
mov
int
fadds
int
cld
decl
inc
insb
lcall
sub
or
cmp
fs
loopne
insb
jl
xchg
test
clc
push
decl
xor
lret
jle
sub
das
cmpsb
mov
push
pushl
outsl
leave
pop
push
push
push
adc
dec
add
int
jmp
aaa
adc
xchg
test
std
dec
shlb
push
fisubrl
cmp
push
or
ljmp
call
xlat
jo
push
adc
adcb
test
and
ljmp
call
push
pop
in
mul
mov
repz
lcall
add
jp
rol
clc
fs
fs
lcall
loope
push
jno
jg
dec
rolb
push
outsb
lea
or
mov
cmp
jb
je
call
dec
sahf
push
adc
fimull
dec
push
jae
test
jno
adc
pushf
mov
mov
fucomip
adc
lahf
popa
cwtl
test
dec
cmp
xor
stos
icebp
mov
nop
cs
jg
push
lret
cmp
add
rcrb
push
or
jne
sbb
dec
icebp
dec
cmp
cmp
das
rcr
popa
jecxz
and
pop
dec
add
loope
xlat
out
add
mov
int
xor
sbb
mov
test
add
pop
mov
ret
test
loopne
jmp
adcb
dec
les
adc
sbbl
hlt
lea
in
push
pop
imul
mov
push
xchg
leave
lea
push
xlat
cmc
push
jge
cmp
lcall
and
mov
sub
sahf
push
adc
mov
pusha
ror
jb
inc
int
insb
repz
pop
pop
cltd
dec
std
or
cli
nop
dec
and
dec
mov
adc
scas
test
xor
sbb
sub
leave
ret
inc
mov
mov
aaa
dec
pop
das
adcl
ret
iret
jge
add
inc
ret
push
inc
pop
decl
ljmp
int3
lret
movsb
stos
mov
ficompl
loope
adc
jge
jb
incl
incb
cwtl
xor
lods
cmpsl
roll
js
shll
fcmovu
sar
pushl
in
test
pusha
mov
or
dec
stc
fistps
inc
pop
daa
scas
sahf
push
jb
mov
push
and
in
sbb
call
enter
cmp
or
loopne
mov
scas
xchg
sbb
dec
jno
push
sub
push
cmp
inc
jle
pushl
aas
pop
aas
push
mov
and
cmpsb
xlat
aaa
xchg
outsl
addr16
idiv
incl
dec
js
mov
sbb
stc
mov
lahf
mov
insl
mov
lock
negl
idivb
mov
ja
loopne
and
aad
pop
clc
fsub
cmp
mov
xlat
lods
push
sub
imul
out
mov
mov
push
push
cmpsl
xchg
push
jmp
xchg
mov
aas
adc
mov
mov
pop
mov
test
arpl
cmp
jno
mov
inc
lcall
jge
cwtl
inc
call
mov
dec
fidivrl
call
add
pop
xor
sub
push
jecxz
repz
adc
lret
out
aaa
jl
repnz
cmp
incl
push
jle
mov
mov
lock
jmp
and
mov
xchg
xchg
rol
ljmp
hlt
ret
mov
jbe
ljmp
shlb
int3
into
sbb
jb
repnz
icebp
pushf
stc
push
fidivrl
mov
lods
jecxz
xor
nop
into
ljmp
incl
cmpsb
inc
adc
jno
adc
mov
xchg
leave
mov
mov
push
shlb
mov
hlt
xor
inc
cld
rorl
add
dec
shll
push
lcall
test
lcall
shlb
rorb
add
mov
hlt
cmp
pusha
xor
or
jo
popa
stos
scas
in
mov
out
jl
cmp
sarb
mov
int3
or
cld
ljmp
out
jg
xor
push
fwait
out
mov
clc
aas
lahf
out
push
pop
mov
lcall
cmp
into
sahf
mov
jb
nop
mov
xchg
dec
repz
clc
cmpsl
cltd
add
inc
sar
fsubs
and
push
cmp
jl
test
pusha
xchg
cmpsl
mov
and
ljmp
movsb
ljmp
outsb
sti
aam
xor
callw
pop
adc
jg
fisttps
mov
imul
out
es
push
les
ficompl
and
mov
add
mov
fildll
hlt
pop
jns
fs
aad
inc
clc
int
push
movb
ret
push
outsl
call
out
dec
mov
out
mov
sbb
pop
cmp
push
incl
scas
setb
push
or
lock
or
mov
pop
mov
jmp
xchg
negb
outsb
push
or
mov
jne
and
mov
lock
decl
das
cmp
lods
sbb
inc
and
or
nop
or
jo
insb
jno
cld
dec
out
jmp
cld
push
bound
push
pop
add
xchg
js
es
mov
incb
stos
add
ret
cltd
pop
add
and
int3
cli
push
jge
jnp
push
lret
leave
mov
and
ljmp
pop
lods
dec
add
mov
lods
mov
or
sti
xchg
fsts
xchg
scas
decl
jp
and
xor
and
loopne
pop
mov
xchg
xchg
and
ja
sub
imul
xor
cmp
mov
xchg
out
pop
fsubr
xchg
jg
leave
sti
mov
lret
clc
fwait
iret
cmc
incl
dec
adc
mov
lea
mov
push
sbb
outsl
jmp
push
xor
daa
xchg
lret
jecxz
mov
xchg
push
aam
add
fwait
jno
call
pop
pop
xchg
jb
sub
inc
pop
mov
cwtl
pop
jecxz
fucomip
jmp
jp
andb
nop
cltd
aas
xor
push
pop
push
mov
das
test
outsb
insb
mov
imul
jp
inc
push
mov
lds
jmp
xchg
adc
adcb
pop
jnp
fs
call
cli
and
mov
pop
mov
or
jmp
pop
int
xchg
ja
xchg
int
addr16
test
pop
cmpsb
fcomps
sub
fisttpll
jnp
jmp
imul
and
pushf
and
pushf
inc
stc
clc
dec
xchg
icebp
xchg
mov
pop
sub
xchg
pop
cs
xsha1
cmpsb
int
push
decl
fdivl
inc
push
jb
test
pop
scas
fwait
in
outsl
mov
pusha
imul
std
inc
and
mov
sarl
xchg
and
pop
add
ljmp
test
call
jo
les
adc
add
mov
jmp
enter
xor
dec
or
movsl
mov
scas
lods
mov
add
cmc
loope
cld
incl
or
jo
in
inc
push
pop
or
fwait
cli
jg
outsl
xlat
mov
mov
pmulhw
aaa
mov
mov
loopne
xchg
fidivl
ud2
addr16
movsbl
cwtl
mov
jg
decl
sti
adc
jge
cli
fwait
aas
in
sub
call
test
sti
cld
dec
fs
lret
push
rorl
shrb
lods
nop
loop
lcall
rcrl
jne
repnz
sub
aad
imul
lods
xchg
mov
cld
lcall
sbb
cmpsb
sub
push
rclb
inc
fst
push
das
push
or
xchg
push
aam
pop
add
adc
dec
xor
fdivrs
jae
adc
rcl
mov
addr16
push
ss
jae
mov
sub
jbe
or
mov
bound
out
mov
aas
jle
popa
lret
jb
mov
int3
test
shll
std
ljmp
movsl
in
xchg
aas
push
xchg
test
ret
cmp
mov
stc
fistl
arpl
stos
xchg
add
dec
in
push
push
in
pop
xchg
adc
iret
xchg
and
mov
xchg
jb
pop
cli
decl
repnz
inc
cmp
jns
or
jmp
dec
cld
cmp
out
pop
int
outsb
arpl
inc
out
inc
push
mov
cmp
rclb
dec
jb
sub
jo,pt
mov
mov
movb
fsubr
sbb
pushf
sbb
xchg
mov
push
xchg
int3
xchg
int3
xor
lock
orl
mov
pusha
push
cmpl
and
pop
adc
adc
dec
jnp
das
lock
inc
call
rorl
orl
movsb
cmpsb
lahf
insb
xor
mov
inc
movb
pop
pop
adc
lods
push
hlt
in
les
subb
decl
jp
fcomip
mov
aaa
sub
lcall
mov
jl
push
xor
pop
lahf
dec
or
sub
and
jmp
in
sahf
xor
add
pop
inc
push
jnp
adc
lds
cld
call
xor
cmp
adc
push
jae
shrb
lods
add
push
test
outsb
sub
lcall
inc
and
pop
xor
dec
aaa
fnstsw
push
xor
cmp
jg
mov
inc
icebp
pop
jne
pop
dec
out
lods
dec
jae
cmp
jae
cmp
cwtl
mulb
sub
ljmp
daa
push
sbbl
dec
or
jbe
mov
jg
je
stos
jp
jmp
lds
cmp
mov
cmpsb
cmp
pushl
in
ljmp
insb
xor
lcall
mov
stos
mov
mov
ds
das
lock
jle
and
enter
jle
cmp
sub
jmp
xor
sub
ret
sbb
pop
mov
outsl
dec
xor
mov
repnz
lret
fcompl
adc
lret
inc
pushl
inc
inc
std
jns
jge
sub
add
xchg
push
ja
dec
pop
test
fwait
inc
mov
jmp
stos
sbb
pop
int
and
shl
aad
fcmovnbe
rcrl
push
inc
xor
rorb
inc
and
sar
push
in
jg
ljmp
hlt
dec
sub
cmp
push
xchg
sbb
jo
push
cmpsb
jmp
add
and
xchg
pushf
rorb
je
xchg
hlt
lcall
cld
jmp
loopne
jge
fidivrs
cs
xchg
mov
test
sub
jg
jg
iret
xor
or
ret
pushf
insb
xchg
jnp
add
divb
lock
lcall
cmc
stos
ret
lea
lcall
ficomps
fwait
adc
ljmp
sub
inc
in
dec
aam
inc
mov
cmp
adc
or
sahf
sti
les
cmp
lret
mov
sbb
cmp
push
pushf
push
incl
clc
mov
jecxz
mov
mov
fildl
sar
mov
insl
fwait
in
pushf
bound
arpl
movsl
movsb
lea
push
adc
jge
incl
xor
mov
bound
mov
fldenv
mov
pop
je
das
hlt
incl
cmp
push
add
mov
enter
cli
xchg
sbb
loopne
dec
pushf
jl
outsl
cld
test
addr16
nop
dec
or
mov
lcall
pusha
adc
sbb
es
adc
jg
ljmp
add
mov
or
and
js
cmp
pop
mov
aad
call
leave
sbb
mov
scas
daa
clc
jae
jmp
pushl
and
jecxz
push
ljmp
cmc
jg
mov
lret
mov
mov
insb
fidivs
xchg
mov
decl
inc
xchg
ret
fiaddl
push
scas
sbb
divb
mov
jg
incl
mov
mov
inc
subl
push
decl
std
das
mov
lock
pop
pushf
sbb
jne
mov
sub
incl
insl
or
push
dec
cmp
out
cmp
outsb
loopne
pusha
add
pushl
enter
mov
outsl
inc
push
jnp
lods
sbbb
in
dec
in
mov
mov
decl
xor
push
imul
outsl
div
jbe
incl
lods
mov
and
imul
sub
lret
pop
imul
cmp
cmc
dec
lret
loope
in
cld
fdivrl
ret
inc
loope
sahf
call
sahf
pop
movsb
loopw
inc
sub
leave
or
rclb
xchg
xchg
std
in
inc
stc
sbb
xchg
into
repz
add
xchg
xor
clc
or
ds
inc
mov
test
js
jg
decl
stos
dec
pop
mov
sub
repz
dec
pop
je
fistpl
call
adc
mov
xlat
dec
or
sti
shrb
add
xchg
not
push
ljmp
add
ficoms
cmpb
ss
adc
xor
enter
dec
fldenv
popa
in
sub
repnz
sub
fdivrl
xchg
and
lcall
sahf
dec
jae
idivl
inc
ret
lds
or
sti
mov
stos
ljmp
cltd
in
jp
int
mov
stos
fcmovbe
decl
les
jne
jg
add
andb
xlat
pop
sbb
sbbl
xchg
mov
cmpsb
outsb
nopl
dec
jg
push
shrb
imul
mov
fwait
mov
mov
sbb
xchg
sub
aam
mov
lcall
inc
jmp
xlat
sar
mov
add
rol
inc
jmp
sbb
cmpsb
sti
pop
jae,pt
adcb
popf
cltd
pop
in
pop
mov
mov
in
test
push
mov
push
out
fadd
ljmp
enter
out
jmp
clc
xchg
or
xor
fwait
sub
jecxz
arpl
clc
mov
mov
jge
les
iret
mov
dec
fsubrs
lcall
adc
mov
hlt
test
cli
mov
repz
xorl
das
cmc
jmp
xchg
pop
test
aad
sbb
inc
adc
and
pop
mov
cmp
jge
cmp
and
nop
jp
call
decl
inc
add
jge
mov
adc
mov
pusha
rorb
in
cmp
repz
call
les
sub
add
mov
sub
inc
jo
fists
lcall
mov
dec
sti
or
into
jo
fwait
lret
xor
jle
ljmp
das
icebp
decl
dec
cmpsb
jae
and
adc
lret
pop
ret
idiv
xchg
pop
sahf
xchg
adc
out
cmp
pop
jo
mull
push
inc
scas
repz
fiaddl
mov
cld
lcall
sti
in
adc
aam
imul
insl
and
jmp
call
pop
cs
jns
lea
mov
outsb
and
fdivrp
je
sub
dec
aas
push
aas
cmp
mov
jp
scas
fildl
mov
ret
imul
sub
inc
lods
nop
pop
xor
mov
mov
mov
cmp
stos
mov
push
inc
out
sbb
add
xchg
stc
adc
mov
aam
loopne
push
out
pop
dec
inc
xor
jmp
test
xor
sub
pop
inc
xor
mov
mov
dec
dec
icebp
fisubs
mov
shl
xchg
sti
lret
mov
push
push
test
sbb
mov
aam
cli
push
pop
loop
inc
js
movsb
les
xor
int3
mov
imul
fstps
ret
jnp
push
decl
aam
push
xchg
ljmp
in
mov
lahf
lods
push
sbb
push
inc
jmp
xorb
and
cwtl
into
imul
inc
add
sbb
pusha
movsl
orl
lcall
lret
push
mov
inc
jae
xchg
dec
lcall
jg
daa
shll
pusha
int3
in
icebp
mov
lret
in
stos
xchg
cli
jg
mov
xor
in
xchg
out
and
dec
scas
and
lock
call
sub
cmp
rcrb
out
icebp
lods
popa
jge
mov
ud0
jp
xchg
push
or
jecxz
sbb
pushf
movsb
pop
fwait
cmp
xlat
jecxz
mov
jg
incl
outsb
push
loop
push
jl
xchg
push
cmp
jno
pop
or
jg
mov
xchg
lods
add
ds
dec
into
sti
fs
push
and
out
fwait
push
fmull
or
push
int
pop
sbb
decl
cld
call
sbb
ret
xchg
inc
lcall
lds
repz
mov
push
aaa
cmp
dec
ret
mov
mov
nop
sbb
cmpsb
xor
cwtl
movsl
outsb
xchg
cli
xchg
push
cmpsb
std
std
sbb
pop
stos
inc
push
push
mov
jb
adc
mov
push
adc
sbb
push
dec
lret
xor
jp
cli
and
lret
jg
test
mov
inc
push
and
jge
scas
in
adc
pushl
mov
lret
or
bnd
lock
int3
dec
data16
outsb
sbb
lods
xor
dec
fwait
fwait
clc
mov
rolb
ds
ret
ljmp
aaa
sub
cmpsl
xor
les
ljmp
out
in
bound
mov
rcl
cwtl
lods
dec
add
fnstsw
lcall
xchg
sbb
gs
cli
lods
movsl
or
btcl
dec
mov
decl
fldenv
sub
das
or
inc
sub
outsb
xchg
ret
inc
imul
ljmp
push
hlt
mov
adcl
ficoms
mov
in
cld
call
jns
xor
push
jno
push
outsl
sub
loopne
jl
icebp
daa
loopne
in
add
mov
push
in
mov
sbb
rorb
and
out
mov
mov
sub
es
leave
jp
ja
leave
and
push
and
lret
sbbl
lock
pushl
and
cmc
lock
rorl
add
inc
popa
lock
mov
pop
pop
loop
mov
stos
cmp
leave
stc
mov
pusha
jmp
incl
std
cmp
pop
inc
test
jb
cwtl
movl
jp
repz
mov
mov
subl
fistps
xor
mov
xor
loopne
incl
movsl
jne
icebp
jg
subb
sub
mov
test
aaa
clc
pop
cmp
push
push
int3
push
xchg
push
repz
pop
mov
call
lahf
or
dec
cld
jmp
cld
mov
jmp
mov
cmp
pop
mov
test
or
xchg
jnp
jp
fldl
inc
insb
cmpb
or
add
cmp
jmp
push
cmpsb
pop
xchg
jmp
je
cli
cmp
push
mov
sar
outsl
push
sub
insl
andl
ljmp
jno
adc
xor
or
cmp
arpl
fldenv
add
outsl
cmp
add
sbb
jns
push
cmp
scas
stos
mov
rcrl
push
sub
pop
sahf
outsl
int
out
cld
mov
mov
and
loope
mov
les
sub
jecxz
pop
enter
sub
adc
xor
xchg
or
fbld
ja
sub
jmp
inc
lcall
cmp
push
inc
insl
jnp
decl
stos
push
jge
lds
or
inc
or
bound
push
cmp
xchg
movsb
pop
mov
mov
pushl
xor
shlb
int
aad
aaa
aas
aad
pushl
pop
and
xor
or
sub
cltd
outsb
cmp
cld
mov
das
mov
push
fimull
pop
or
clc
incl
xchg
push
xchg
loopne,pt
mov
push
in
sti
push
or
ret
test
cmp
inc
sub
loope
and
test
xor
ficoml
mov
rcrl
cmp
mov
xchg
pop
xchg
xchg
mov
out
xchg
pop
std
add
ss
aam
pop
push
cwtl
and
jg
icebp
adc
jmp
mov
jg
stc
xchg
outsl
stos
repnz
std
push
incl
hlt
sub
sbb
insl
mov
cld
and
sub
and
jae
add
add
in
mov
sub
clc
icebp
and
xor
mov
incl
inc
cmp
call
push
mov
pushl
cli
in
test
jmp
fcmove
jecxz
and
mul
ja
jnp
adc
incl
cld
in
aaa
and
fwait
pushf
sti
push
scas
rorb
lcall
pop
pushl
and
and
mov
jno
stc
or
lcall
imul
test
cmp
and
lret
push
call
adc
jo
enter
sbb
fisubrl
xor
mov
in
xor
rcl
pushl
outsl
dec
xlat
sub
sbb
push
test
popf
sub
inc
mov
lods
adc
push
xor
nop
mov
or
jns
lods
push
mov
icebp
mov
push
push
cmp
pushf
adc
mov
stc
ljmp
fwait
daa
es
add
sbb
push
and
jae
scas
jmp
mov
call
cmp
or
xchg
hlt
popf
jbe
aaa
xchg
xchg
inc
flds
mov
pushl
cli
js
out
cli
mov
shll
fwait
pusha
add
xchg
push
jecxz
pop
xchg
inc
pop
cmp
sbb
hlt
cmp
fisttpl
cmpsb
dec
mov
frstor
into
pop
adc
mov
leave
mov
xchg
jecxz
push
iret
das
jg
call
mov
and
push
adc
out
xor
hlt
mov
inc
sub
lcall
cs
lods
mov
shll
ljmp
pop
repnz
push
mov
rcrb
jae
mov
dec
or
mov
xor
xor
clc
es
movsb
lds
fcom
or
mov
out
nop
or
jge
or
sahf
or
js
inc
xor
cli
mov
les
and
mov
ficoms
sub
popf
jmp
das
loopne
lea
push
call
cmp
jns
jecxz
mov
test
cli
fwait
lock
sub
mov
mov
jl
adc
loopne
sbb
stos
mov
dec
or
movsb
loope
int3
cltd
dec
mov
and
pop
jnp
cltd
add
add
push
fs
fildl
and
fisubs
jl
pop
testb
icebp
dec
test
jmp
jmp
ret
and
or
std
xor
xchg
mov
inc
ja
sub
or
inc
outsl
sbb
imul
out
iret
call
push
out
jecxz
bnd
adcl
sub
stc
out
imul
mov
xor
movsl
lcall
fs
jno
pop
jge
xlat
jo
fisttpll
fbld
fcomip
and
inc
imul
sub
lods
out
adc
mov
loopne
jecxz
ds
and
jecxz
scas
xchg
adc
xchg
roll
aam
cmp
loopne
test
mull
cltd
lods
scas
mov
push
mov
jmp
imul
or
into
in
pop
dec
divb
das
repnz
xor
mov
shlb
push
adc
or
mov
sub
add
ret
cli
dec
pop
iret
enter
mov
std
inc
pop
adc
push
out
aam
pop
cld
mov
mov
hlt
pop
stos
push
mov
into
stos
orl
pop
pop
jle
add
fcmove
or
jg
jg
xor
rcr
sahf
outsb
jo
out
jp
push
xchg
xchg
xor
rcrb
js
gs
icebp
outsl
mov
fsubs
mov
call
in
movsb
mov
xchg
add
jnp
and
add
mov
popf
cmp
call
and
fsts
and
mov
mov
movsl
inc
inc
cli
add
inc
xor
fwait
push
jmp
les
aad
adc
rclb
fwait
lret
adcb
mov
or
or
xchg
hlt
mov
mov
cmp
lock
call
xchg
jg
xor
shl
idivl
sub
jecxz
push
jg
scas
pop
fucomp
decl
js
lds
xchg
dec
sarb
notb
add
lcall
jl
testb
ja
and
pop
shrb
inc
fsts
cs
pop
jg
add
pop
xlat
and
into
lods
iret
xchg
das
jnp
push
jle
pop
mov
pop
loop
std
inc
sub
sti
cltd
movsb
mov
fistps
cli
pushl
sahf
cbtw
lahf
mov
inc
xchg
orl
jg
push
mov
mov
push
mov
inc
push
jb
lea
lock
inc
ds
out
mov
push
cmp
sahf
popa
mov
pop
jl
mov
in
jg
mov
xlat
mov
dec
and
dec
mov
imul
fs
repz
push
push
push
cmp
or
sub
dec
push
test
pop
call
pushf
call
pop
inc
push
fsubrs
inc
and
out
cltd
cmp
lods
inc
pop
std
jecxz
fmuls
jae
inc
das
cmp
pop
icebp
jo
pop
fistps
sbb
fstpt
fnstsw
mov
sti
push
ljmp
call
out
loopew
jge
int
dec
iret
pushf
xchg
xor
dec
jno
push
xchg
and
lcall
xor
push
negb
insl
dec
scas
inc
daa
repnz
call
mulb
sahf
out
aam
out
sbbl
movsb
out
adc
das
cmc
lea
push
cmpsl
int
mov
fsubs
inc
mov
std
decl
dec
insb
or
scas
cmovne
setge
fnsave
dec
inc
rcrl
decl
pop
loopne
or
or
xchg
arpl
mov
adc
shrl
out
push
add
hlt
movsl
ljmp
push
push
out
cwtl
sub
push
fwait
and
rcrl
mov
das
push
enter
cmp
sbbb
mov
in
pusha
ss
adc
mov
imul
in
in
pop
mov
out
mov
jl
decb
pop
arpl
lcall
call
mov
inc
js
add
lret
hlt
sub
and
fnstsw
test
push
shlb
imul
jns
bound
xchg
jle
jge
push
ret
lock
jmp
sub
decl
fisttps
mov
dec
arpl
xchg
dec
scas
insl
mov
add
loop
cmp
ret
lock
test
and
sbb
mov
pusha
fnstsw
popa
xor
insl
loopne
lea
mov
cmp
jg
jmp
or
or
icebp
fcoml
sbbl
cmp
loop
jo
sub
pushl
dec
es
mov
es
insb
jp
out
pusha
and
dec
shl
and
inc
dec
sub
push
and
movsb
adc
push
loope
pop
shrb
mov
sti
jne
mov
push
loop
mov
mov
push
inc
into
sbb
decl
sbb
jne
push
sub
jbe
in
jo
xorl
js
cmp
rcrb
jmp
sbb
xor
or
dec
incl
xchg
in
repnz
popa
jno
fs
popa
or
or
pop
pushl
cli
inc
mov
jl
in
call
lea
lcall
pop
jl
fimuls
sbb
mov
ljmp
inc
mov
test
test
mov
in
das
aad
decl
out
pushf
stc
repnz
mov
jge
sar
ljmp
adc
jecxz
not
push
jge
sbb
lods
arpl
jne
cmp
std
lods
add
insl
std
xchg
test
cwtl
jb
mov
call
push
and
jns
fcmovne
mov
cmp
out
cmp
jg
insb
xchg
pop
ret
mov
movsb
xor
jp
loope
pop
jecxz
mov
std
mov
and
jle
fs
fstp
adc
jl
jl
mov
lcall
out
or
popf
xlat
sub
jae
cmp
jl
push
pop
dec
in
out
test
inc
sbb
aaa
ret
pop
incb
jnp
ja
imul
lahf
push
xor
mov
out
shll
aaa
dec
dec
jge
aad
cmc
or
gs
dec
decl
mov
pusha
push
sub
test
fisttpl
dec
ljmp
push
sbb
cmp
lds
fisttps
subb
add
xor
int3
sub
adc
test
inc
jge
ljmp
std
ljmp
jae
lods
push
mov
inc
cltd
sbb
mov
fs
subb
cmp
mov
sub
popa
mov
incl
sbb
dec
lds
inc
jl
jae
inc
or
ljmp
hlt
sbbl
xchg
mov
jne
cmp
and
lahf
mov
stos
movb
pop
call
fimuls
pop
pushl
mov
out
repnz
test
jmp
incl
and
push
mov
dec
push
addr16
dec
jmp
jl
das
ret
mov
mov
pop
push
movsl
outsl
rcll
cmp
sti
dec
cwtl
push
ja
cmp
insl
pop
movsb
mov
push
nop
sub
movsb
rol
push
jge
pushl
pop
and
pop
mov
mov
cmpsb
xor
mov
in
mov
lods
jmp
xlat
pop
pushaw
rcr
lcall
in
cltd
testl
and
rolb
call
decl
cli
insb
add
cmp
mov
push
repnz
push
std
add
mov
pop
loopne
or
ret
lea
jg
nop
dec
jmp
lods
movsb
movsb
jp
cld
jge
das
dec
sbb
lahf
lret
aas
aas
sar
push
push
mov
out
shl
sarb
je
into
sub
sti
mov
adc
lcall
push
xchg
adc
fmul
int
out
and
pop
jl
es
nop
pop
scas
cmp
mov
mov
outsb
fbld
int
or
xchg
fmull
push
lock
incl
add
xchg
insb
sbb
mov
pusha
subl
pmulhuw
mov
loopne
xchg
iret
test
fwait
add
push
pop
sub
and
jmp
inc
cs
dec
add
pop
mov
cmp
mov
pushl
jg
push
mov
movsb
and
pop
loope
mov
jp
xchg
mov
jg
fs
jne
adc
lods
fisttpll
mov
idivb
incl
jecxz
inc
xchg
ljmp
and
mov
xchg
sub
mov
xor
ja
andb
adc
xor
out
mov
sar
push
push
mov
cmp
lret
jmp
das
fnstsw
jmp
inc
ds
cmp
in
inc
es
in
pop
xor
ljmp
push
adc
notb
imul
jne
add
push
popf
push
mov
sbb
ljmp
lods
pop
hlt
or
push
xor
mov
mov
stos
orb
mov
das
pusha
push
das
movsl
mov
sbb
insl
int3
outsl
push
call
jb
in
mov
add
ljmp
hlt
inc
imul
iret
xchg
scas
lds
xchg
add
jmp
xchg
mov
jle
mov
jg
cltd
cs
pop
mov
pop
nop
jno
sbb
and
pushl
cmp
jle
mov
dec
xor
ss
insb
mov
push
in
sub
icebp
sub
pushl
lock
nop
dec
mov
cmp
xchg
or
ljmp
mov
stos
xchg
call
mov
lods
push
or
jns
pop
mov
ljmp
pushf
ficompl
loopne
sbb
or
adc
repnz
mov
jg
ds
insb
xor
mov
cltd
mov
popa
clc
push
pop
daa
fildl
xor
lret
push
cli
stc
ja
mov
fcmovbe
lods
fld
push
mov
call
mov
jb
inc
mov
xchg
popa
cmp
aad
sbb
mov
stos
loop
lcall
lret
outsl
lcall
jns
adc
dec
inc
dec
lock
ds
mov
fistpll
add
mov
pop
or
xchg
mov
pop
fs
xchg
xor
sbb
cmc
ljmp
push
scas
jb
cld
adc
call
xchg
ljmp
sbb
push
or
test
imul
mov
sub
loop
adc
cmp
and
xchg
push
lods
ss
je
mov
mov
ljmp
xchg
loop
lods
xchg
push
mov
aam
xor
xor
incl
pushl
jo
mov
jmp
imull
aad
adc
jmp
xchg
lcall
jmp
aad
xchg
mov
std
xchg
cmp
inc
call
sbb
jle
cld
xor
jb
push
push
jmp
filds
sbb
cmp
pop
or
mov
adc
push
aaa
or
std
in
pushl
add
out
xchg
popa
mov
outsb
lret
out
or
loop
and
popa
inc
and
icebp
pop
mov
mov
dec
jnp
out
ja
sub
mov
jns
mov
fldt
xchg
add
inc
es
pop
lcall
imul
ljmp
adc
sar
idivb
fwait
lds
mov
test
into
cld
call
je
xor
xchg
lahf
and
xchg
add
inc
decl
xor
or
out
pop
mov
stc
mov
sbb
sbb
mov
test
lods
mov
loop
sahf
into
mov
call
inc
push
cs
and
test
filds
rolb
popa
ja
lahf
dec
xchg
mov
sbb
inc
jmp
ss
ss
jecxz
push
sbb
insl
pusha
adc
jmp
mov
dec
pusha
xor
mov
lret
mov
rcrb
int3
mov
call
ljmp
int
js
loopne
cld
imul
lcall
jb
xlat
and
push
es
sahf
mov
mov
bound
jns
mov
cli
push
adc
sub
fiaddl
movsl
push
dec
cmpsl
push
cmp
shl
test
mov
mov
jbe
shrw
pushl
xchg
mov
repz
mov
insl
lcall
dec
loopne
decl
xor
ja
jo
es
or
mov
xchg
rorl
cmp
mov
mov
fucomip
pop
dec
addb
and
mov
mov
xchg
js
lods
jg
clc
fadd
adc
sub
add
call
jnp
pusha
popf
and
jmp
ret
jae
pop
mov
dec
imul
mov
jmp
int3
roll
in
icebp
jbe
inc
enter
adc
leave
test
xchg
lcall
sahf
mov
jg
jecxz,pt
inc
jne
xchg
in
or
cmpsl
loop
inc
mov
aam
ret
repz
or
add
ss
sbb
jg
cmpl
out
inc
scas
mov
les
inc
jnp
xlat
daa
cld
adc
mov
loopne
test
and
loop
je
adc
jbe
inc
popa
sarl
insl
mov
lcall
outsl
fcoms
fcomps
mov
cmc
sbb
cwtl
decl
outsl
mov
jp
rol
adc
test
mov
icebp
std
xchg
sti
repz
test
pop
je
cmpsb
adc
out
mov
int
add
das
cmc
jmp
ret
ret
sub
inc
scas
aam
lahf
pop
lret
jg
ds
sub
cmp
pushl
or
int3
shl
xchg
cmp
mov
outsb
jae
xlat
add
mov
mov
sarb
cld
stc
les
adc
push
shll
gs
mov
rcll
mov
sbb
push
xor
cmp
ss
dec
movsl
test
mul
or
mov
ljmp
jne
or
je
xchg
fcoms
pop
mov
pusha
xchg
rorl
pop
add
pushl
sti
jge
sar
out
xor
and
in
xchg
hlt
shrl
fdivrs
pop
mov
dec
aaa
cmp
push
movsb
aam
cmp
or
push
stos
mov
sbb
and
call
sub
jp
les
sarl
mov
lock
adc
ljmp
cmp
or
fwait
ljmp
adc
mov
mov
ds
jmp
test
xchg
sbb
ss
test
aam
mov
pushl
jno
push
inc
sub
rorl
push
stc
lcall
inc
flds
sbbb
sub
dec
pushf
mov
stos
pop
int3
jg
jmp
xchg
stos
adc
out
ds
mov
sub
arpl
or
cs
call
mov
stos
sbb
push
cltd
inc
push
lret
cli
mov
filds
scas
sahf
rcrb
sbb
xor
pop
popf
std
sbb
lcall
fidivs
icebp
jl
outsb
xchg
jae
fs
dec
xchg
jae
fidivl
mov
add
push
pop
jne
xchg
push
and
test
in
ljmp
fistpll
aaa
and
sbb
daa
jle
cmc
iret
inc
outsl
adc
push
leave
xchg
mov
call
int
cli
ret
jge
dec
pop
and
out
jmp
adc
incl
loope
mov
pop
xchg
arpl
cltd
filds
xor
or
test
clc
mov
testb
ret
stc
pop
push
call
clc
or
movsb
sub
sti
pop
push
push
dec
clc
pushl
xlat
rol
ret
imul
lods
wbinvd
push
cmpsl
push
jb
std
lcall
iret
jmp
lock
mov
jmp
fdivl
fwait
sbb
mov
decl
repz
push
lds
scas
es
jg
hlt
add
decl
and
mov
and
pop
in
pop
lods
outsl
ljmp
lcall
loop
jg
jg
shlb
loop
lock
add
or
aad
and
or
test
adc
notl
inc
cmp
out
int
pop
lcall
jmp
sbb
insb
ljmpw
inc
ret
pop
gs
pop
test
call
inc
test
addr16
or
pop
test
push
xchg
jg
jecxz
xchg
ret
inc
adc
dec
xor
pushf
hlt
out
inc
dec
into
gs
hlt
mov
das
sub
idivb
shlb
jbe
imul
mov
inc
adc
xchg
leave
repz
jns
push
fdivrs
imul
insl
test
fsts
fs
mov
imul
sub
stos
lds
mov
mov
jmp
sub
in
inc
mov
pop
dec
fld
mov
in
inc
push
shll
insb
sub
jg
mov
pusha
scas
dec
sbb
jne
testb
adc
pop
adc
mov
push
mov
clc
mov
scas
arpl
pop
movsb
jl
jge
add
pushl
sbb
adc
dec
adc
sub
loopne
lcall
std
dec
rcr
lea
jl
mov
mov
ljmp
rolb
addb
fisttpll
aam
lcall
inc
sbb
jecxz
in
movsb
fucomp
ss
dec
dec
xor
icebp
movsl
mov
inc
adc
int3
or
daa
add
imul
jmp
sbb
xchg
imul
pop
xlat
cli
sbb
aam
ss
clc
ljmp
shl
hlt
xor
push
popa
sub
xor
movsl
aam
adc
dec
scas
lcall
cmp
stc
das
sub
fcompl
imul
mov
mov
ds
push
inc
jmp
adc
push
mov
cmp
rolb
pop
das
cli
jg
fidivs
and
dec
flds
loop
les
outsl
icebp
pop
cld
xor
fwait
test
lret
mov
lods
jbe
fdivr
ret
add
jmp
mov
arpl
out
movsb
insb
adc
sar
cltd
hlt
shlb
mov
fnstcw
cs
xchg
scas
or
adc
std
or
jmp
mov
stos
sub
inc
mov
pop
push
rolb
hlt
mov
jb
sbb
das
int
outsb
rcr
cwtl
stc
or
outsl
push
les
aam
pop
ljmp
enter
mov
outsl
enter
ljmp
incl
inc
cli
aas
test
push
pop
dec
lods
mov
insb
stc
repnz
out
add
push
je
push
mov
das
icebp
xchg
cli
les
push
jmp
cmp
mov
mov
sbb
stc
xor
lret
rorl
jns
add
outsl
push
cmc
push
adc
sbb
pand
imul
call
xlat
test
jecxz
bnd
cmp
push
xchg
xlat
sub
sub
mov
clc
clc
jnp
popf
sbbb
decl
lcall
inc
lock
push
fldl
repnz
pushf
sar
movsb
into
and
pushl
pop
shrb
dec
and
test
jmp
mov
rcr
sub
call
dec
and
mov
adc
test
dec
adc
add
and
popf
jl
lcall
inc
orl
inc
and
dec
outsb
and
xor
pop
jbe
pop
mov
fsts
push
mov
sbb
ljmp
pop
sbb
cmp
decl
jmp
scas
std
aas
mov
popf
loop
cld
and
and
loopne
add
call
cld
jae
nop
call
stos
fs
lock
jp
es
push
jecxz
incl
mov
std
hlt
pop
pop
into
xor
xor
into
jecxz
pop
mov
cli
mov
xacquire
cmp
mov
filds
xchg
fidivl
icebp
mov
test
pop
ret
aaa
outsl
into
adc
dec
mov
ds
jge
or
xor
aaa
mov
cmp
mov
lcall
or
loope
inc
sti
jae
mov
lret
pop
xor
dec
mov
and
xor
sbb
xor
int3
inc
inc
test
gs
scas
pop
adc
test
mov
das
stc
pop
fstps
mov
jge
popf
sub
daa
inc
divb
jle
xchg
fdivrp
call
sbb
cmp
neg
mov
int
pop
leave
adc
fistl
and
mov
aad
mov
xchg
and
fnsave
xchg
jp
dec
xchg
mov
adc
and
ljmp
push
repnz
ffreep
popa
test
les
sbb
lods
push
jmp
inc
xchg
inc
jp
std
decl
fildl
xor
cs
adc
data16
cld
cmp
sub
jnp
mov
sub
adc
xor
jge
jg
sti
in
int
push
cs
xor
jbe
pop
movsb
pop
mov
adcl
nop
scas
scas
pop
sbb
std
outsl
cld
xor
mov
dec
mull
mov
test
jmp
cmp
shlb
fmuls
mov
add
pop
adc
shll
push
mov
outsl
inc
sub
pop
pop
or
arpl
rcll
aaa
lcall
lcall
or
inc
in
xor
insb
cmpb
pop
testb
or
std
pinsrw
call
inc
mov
mov
mov
xchg
decb
popf
stos
shl
mov
and
xchg
jg
ljmp
xchg
push
push
xor
add
mov
fwait
decl
dec
cli
push
add
gs
pop
add
iret
into
jne
lds
mov
jecxz
pop
loop
cld
popf
dec
xor
and
ljmp
add
test
enter
dec
out
scas
push
xor
sti
or
xchg
movsl
shl
popf
or
call
fldt
in
sbb
dec
and
or
mov
mov
ss
sub
push
add
ljmp
cld
gs
cli
xorl
out
or
stos
adc
mov
icebp
scas
adc
sub
cmp
mov
mov
pop
cmp
jne
and
inc
imul
mov
mov
int
ret
jbe
sbbl
cld
incl
cwtl
mov
cli
aam
xlat
enter
or
sbb
or
loope
dec
lock
xor
lcall
push
sbb
xchg
xchg
jae
mov
stc
shl
mov
push
fdivrl
stos
xor
pop
dec
ret
push
outsl
outsl
xor
sti
jnp
insl
jns
xchg
dec
push
scas
inc
push
jb
push
add
shrl
mov
pop
imulb
lcall
mov
mov
push
bound
and
cmpsl
sar
jg
pop
js
cmp
cld
push
repz
inc
push
dec
fmul
popf
cmp
lock
fstpt
pushl
arpl
mov
insb
xor
push
movsl
and
sbb
gs
call
movsl
add
or
sub
mov
jno
fsubs
inc
loop
decl
push
int
jns
icebp
dec
mov
add
loopne
adc
lock
lods
ljmp
pop
push
sub
stos
andb
sti
sbb
rcl
dec
rcrb
js
pop
scas
mov
mov
adc
inc
sbbb
aad
mov
cltd
fs
repz
lock
incl
mov
scas
xor
rcr
dec
clc
icebp
decl
pop
and
into
aas
loope
pusha
jo
or
ret
cmpsb
jnp
out
sbb
dec
fdivrs
xor
push
lcall
dec
and
ret
pop
fcomps
sub
sub
cmp
lea
jmp
cli
jmp
dec
mov
and
aad
clc
andl
inc
jle
scas
movsb
dec
mov
inc
jb
or
push
and
and
das
imul
jge
in
pushl
bound
inc
lret
pop
sub
aaa
and
fstpl
imul
and
sub
or
push
and
das
cmp
push
aaa
icebp
jle
cmp
mov
or
loopne
mov
cmp
jp
xor
incl
ljmp
inc
sbb
pop
inc
pop
cmp
xorb
or
sbb
add
push
ret
pop
insb
lds
add
mov
mov
xchg
shrl
xchg
xor
mov
mov
push
lea
rorb
cli
jl
daa
push
jg
decl
pusha
mov
movsl
jo
xor
out
sahf
pop
in
push
lcall
mov
in
enter
adcl
fadds
sahf
adc
mov
incl
lock
aad
inc
and
scas
jl
lods
sbb
pushl
ss
ret
jns
mov
add
in
into
sbb
or
pop
xchg
in
cmpsl
cli
call
loope
cmp
pop
push
rcll
jp
mov
sub
aad
mov
push
sti
sub
insb
inc
loope
lods
insl
aaa
fbld
jecxz
push
xor
std
loopne
cmc
cmp
mov
mov
sarb
xchg
cli
fnstsw
ljmp
inc
pop
rolb
xor
mov
pop
adc
inc
jb
fbld
pop
rcl
xor
jo
adc
enter
push
outsl
hlt
decl
push
ret
lret
imul
push
testb
ljmp
aad
mov
sbb
int
daa
adc
inc
loopne
lock
xor
jae
sub
fistpll
mov
ret
int3
add
cli
loopne
jmp
sub
push
push
jae
dec
call
jg
call
push
sub
fs
daa
jns
add
sbbb
lods
add
cmp
insl
mov
aaa
repnz
jbe
test
sub
adc
or
inc
imul
or
bswap
and
fistpl
dec
and
decl
cld
ljmp
dec
xchg
testl
dec
sbbl
sbb
inc
inc
xchg
jmp
xchg
sbb
clc
dec
ret
push
sbb
mov
push
cmp
leave
popf
and
jp
lock
roll
jg
sbb
push
data16
fbld
aam
jnp
pop
jmp
addr16
cmp
jl
jl
adcb
dec
movsl
mov
cmp
and
dec
mov
push
lods
ret
pop
mov
call
push
repnz
int
push
repz
icebp
xchg
ljmp
jae
in
mov
push
xchg
add
imul
loopne
pop
mov
mov
add
in
or
cmp
out
jg
mov
cmovp
lds
jg
cmp
jmp
or
or
hlt
or
or
sbb
sub
pop
outsl
mov
pop
pusha
call
adc
sbb
xchg
mov
pop
ret
add
mov
jo
and
mov
jecxz
and
enter
jne
jmp
mov
adc
daa
inc
in
popf
sbb
in
xor
fwait
push
das
cmp
inc
mov
cmp
in
fsubrs
sbb
add
pop
dec
in
movswl
das
cld
call
aas
sub
rep
pop
shrl
daa
mov
das
mov
push
or
and
ds
sub
cmp
mov
lods
cld
push
incl
test
sti
bound
rcrl
lcall
lcall
dec
loope
mov
jbe
aam
or
fbstp
push
adc
aaa
cmc
mov
outsb
popf
fiadds
mov
or
rcrb
insb
icebp
xlat
ja
ss
sbb
dec
cwtl
adc
mov
xor
or
adc
pop
add
sbb
mov
inc
aaa
mov
clc
bound
pop
cltd
fcomip
loope
lret
loop
sbb
dec
and
and
hlt
aad
mov
xor
mov
insl
cmp
pop
aam
outsl
or
sbb
sub
mov
in
mov
decl
ljmp
sub
inc
jp
ss
flds
shlb
rol
pushl
mov
adc
mov
addr16
roll
loope
outsl
sbb
clc
cmp
call
dec
xchg
daa
cltd
mov
aad
and
or
jbe
movsb
ljmp
mov
cmp
dec
pushf
mov
xchg
dec
gs
lret
sbb
ljmp
inc
dec
cmc
or
add
cmp
out
mov
sbb
ja
inc
gs
add
jmp
dec
or
add
movsb
iret
xchg
or
shll
test
sub
sti
xchg
incb
xor
mov
cltd
mov
call
test
ljmp
imul
add
scas
add
add
xchg
pop
gs
mov
mov
jmp
lahf
cld
add
sbb
out
insl
rcrb
push
outsl
mov
in
xchg
out
frstor
jl
push
dec
js
pusha
sbbl
incl
fildll
dec
dec
in
dec
xlat
xor
pop
and
sti
test
mov
cmp
mov
inc
push
jp
mov
push
mov
cld
add
push
mov
xchg
push
pusha
jg
jg
push
add
sbbb
mov
add
test
in
dec
lret
fidivrs
std
cmp
inc
xor
stos
jmp
dec
popf
out
outsl
std
jg
loopne
movsl
cmp
lret
dec
jge
dec
inc
ds
dec
jge
mov
jmp
pop
and
pop
push
movsb
fstps
jae
mov
jle
jo
aas
sbb
das
or
inc
mov
out
jle
cmp
mov
call
lret
sub
movsl
mov
stos
test
movb
fidivrl
loop
mov
jne
push
call
clc
fisttps
stc
in
mov
shl
or
jns
jmp
outsb
push
out
aad
xlat
imul
or
testl
clc
mov
int
xor
mov
jle
sarl
aas
cmpsl
and
inc
sbb
pop
aad
addr16
cmp
fdivrp
ds
rorb
ret
mov
cltd
ds
or
jg
cmp
cmpb
leave
mov
lds
addb
xchg
mov
inc
and
addb
bound
lcall
imul
inc
fucom
test
cs
xchg
outsl
cmc
mov
pop
xchg
lret
arpl
sti
shrb
jmp
cmpsb
loopne
dec
xor
push
sub
fmul
and
je
inc
sti
sub
sar
incl
test
aas
sub
int
and
push
shl
scas
lea
out
cs
incl
add
addr16
fsubs
xor
lea
mov
outsb
js
push
jmp
xchg
inc
adc
icebp
pop
in
sbb
push
mov
and
pop
sbb
sub
rcll
incl
mov
xchg
mov
loop
pop
orl
sbb
pop
cld
lcall
mov
sbb
pop
jb
loope
outsb
xchg
cmpb
adc
decl
sti
pop
jecxz
mov
dec
cmpsb
lods
out
lret
out
ficoml
aaa
cli
fwait
inc
ret
push
mov
loopne
movsb
cli
andb
decl
xchg
ja
mov
jle
leave
xchg
aad
dec
fnstcw
cwtl
std
xor
lcall
add
lahf
stos
mov
xor
sar
add
jl
ja
incl
xchg
xor
sub
sbb
jnp
arpl
jg
insb
ret
js
mov
mov
fcmovnbe
mov
inc
inc
hlt
nop
xchg
sub
xor
sar
mov
mov
scas
jg
mov
stos
leave
fcmovu
repz
and
ds
and
push
push
push
pop
clc
fmulp
lcall
jg
pop
cmp
and
cmpsl
adc
xchg
subb
or
movsl
adc
int
sbb
aam
add
in
cld
or
fisubl
jno
cmp
push
inc
adc
push
outsl
outsl
and
pop
stos
sti
jp
sub
push
test
add
sbb
cmpsb
jle
call
jge
jecxz
test
int
inc
cmp
inc
jle
jl
and
inc
push
xchg
movsl
xchg
lods
dec
mov
aas
lods
fisubrs
mov
inc
popl
clc
int
sahf
mov
pop
xchg
sbb
jbe
or
or
loopne
imul
fistpll
or
iret
sub
test
mov
testl
mov
lods
pushf
movsb
xchg
ret
lock
or
repnz
subl
decl
or
testb
jne
repnz
mov
loopne
es
sbbb
jmp
test
cmpsl
es
sub
fdivrl
cmp
mov
ljmp
jnp
lods
rcrl
mov
iret
mov
xchg
cmp
sub
ds
ljmp
icebp
xchg
sahf
fiaddl
outsb
sbb
stos
es
out
neg
mov
dec
out
leave
jp
aaa
jnp,pt
push
mov
push
jns
mov
xlat
je
lcall
mov
mov
mov
jl
test
incl
xchg
or
call
pushf
inc
mov
xorl
sar
add
movsl
cltd
mov
mov
and
loop
mov
adc
das
xchg
cmp
adc
and
lcall
jae
jbe
pop
jns
jge
aaa
imul
adc
mov
pushfw
sbb
jge
or
pop
adc
lds
ljmp
lods
data16
push
popa
jnp
sarl
test
xchg
enter
pushl
loopne
and
data16
mov
mov
adc
ljmp
into
mov
das
rcrl
dec
mov
pushl
mov
sbb
push
xor
ret
aaa
repz
decl
xchg
sbb
xor
out
add
leave
sub
cmp
out
xchg
xchg
and
mov
dec
popa
lahf
cmp
add
hlt
repz
aaa
sbb
incl
and
push
scas
into
cmp
inc
or
mov
repz
pavgb
mov
stos
sub
mov
fnstcw
inc
scas
mov
lcall
dec
inc
dec
jmp
es
xor
int3
ret
dec
adc
outsl
jg
mov
xchg
cmpsl
clc
xchg
mov
fnstcw
sar
call
sub
xchg
in
push
sub
or
add
sarb
mov
or
and
decl
clc
lret
je
addb
scas
push
push
and
sub
leave
mov
movsb
jmp
push
jo
jge
lahf
jp
push
jne
adc
aas
xchg
mov
pushf
add
rcll
ljmp
cld
in
cmp
sbb
decl
dec
sbb
dec
mov
dec
or
inc
jae
idivb
dec
nop
sub
jmp
sbb
sbb
mov
test
stos
dec
cmp
ss
sub
shrb
cmpsb
pushf
mov
ret
lcall
dec
sub
repnz
add
mov
and
sub
inc
xor
adc
out
aaa
cli
call
push
jo
sbb
enter
jbe
imul
pop
clc
aas
in
sbb
fidivrs
lret
stos
test
loopne
insl
xor
ds
jmp
call
cmp
sbb
cltd
test
jecxz
data16
gs
jbe
mov
mov
push
cmpsl
rcrb
adc
mov
jg
aas
cmp
testb
add
xchg
or
inc
shrb
adc
mov
dec
lahf
ss
xor
arpl
rcl
dec
inc
pop
add
aad
inc
mov
outsb
fwait
sti
ljmp
sub
sbb
ljmp
xchg
cs
or
test
in
shll
jp
xor
dec
mov
sub
or
push
icebp
sahf
sahf
out
dec
das
inc
sbb
push
popa
and
push
dec
out
call
clc
lcall
shrb
scas
mov
jne
push
mov
mov
push
and
call
lret
push
jle
push
xchg
push
mov
fbld
test
js
jmp
in
sbb
mov
das
pop
int3
mov
rcrl
sti
sbb
dec
jo
add
movsl
std
inc
dec
mov
mov
lea
push
jae
mov
mov
out
inc
push
aad
xchg
lea
adc
sbb
jae
ss
mov
lret
lahf
jae
icebp
sbbl
jbe
sbb
ljmp
pop
ljmp
fistps
push
test
fbld
stos
fadds
xchg
fiadds
in
ret
lcall
jmp
jp
cs
sub
sub
cmp
leave
and
hlt
cmp
pop
sbb
je
movsb
insb
xchg
cmp
pop
pop
sbb
movb
xchg
cmp
decl
cmpsb
jge
outsb
jmp
xchg
xor
xchg
psubw
pushl
sub
divl
mov
cld
cmp
xchg
lahf
sub
insb
jl
pop
cli
decl
fidivrs
rorb
aaa
cld
call
test
push
mov
push
fs
cmp
jne
and
xor
ret
cli
incl
cmpsl
addb
mov
and
lea
add
cmpsl
adc
insb
stc
std
inc
dec
sbb
push
add
inc
fstp
and
add
push
push
lcall
dec
or
sub
icebp
pop
push
iret
lahf
xchg
incl
mov
fstpt
cmpb
adc
fisttpl
mov
cli
mov
jl
xor
lock
ss
pop
sbb
lcall
out
movsl
sub
mov
cld
popf
fwait
aaa
lods
aad
sbb
pop
push
cwtl
or
lcall
andl
pop
js
scas
nop
mov
out
mov
jno
in
mov
mov
inc
sbbl
lret
and
sahf
shlb
cmp
insl
pop
inc
jno
out
mov
rorb
sbb
cmpsl
mov
dec
sub
add
xor
dec
xchg
xchg
loopne
call
cli
inc
fidivrs
or
add
xor
imul
xchg
enter
push
arpl
jle
call
push
lea
fldl
cmc
fiadds
test
inc
rorl
iret
scas
inc
and
mov
imul
add
repnz
nop
sub
ljmp
jle
mov
cmp
mov
loop
sub
sbb
mov
xchg
xchg
mov
ret
mov
mov
movsb
stos
adc
pop
sub
mov
mov
clc
xor
mov
decl
dec
pop
repz
cmp
xchg
pop
cli
and
jns
push
jg
fadds
sub
xchg
add
xorb
jg
or
xor
jae
mov
jl
cltd
shrl
iret
inc
sbb
jmp
popf
adc
cmovp
mov
mov
jbe
jo
and
incl
jmp
ja
cmpsb
cmp
lods
mov
enter
push
pop
call
lds
xchg
xchg
push
stos
push
ffreep
adc
rcll
adc
mov
jnp
jns
leave
js
outsl
rclb
mov
fwait
jge
cmp
in
inc
inc
jmp
sub
inc
dec
std
cmp
mov
push
xlat
jge
je
hlt
jmp
pusha
xchg
jge
mov
pop
leave
repnz
push
cmp
add
call
insb
jle
jge
mov
pop
stos
pop
mov
pusha
lret
std
mov
jne
call
dec
mov
push
das
sbb
dec
cmp
jecxz
xor
call
jp
js
in
fdivrl
addr16
dec
xor
xor
sub
cmp
fsubrs
pushl
xor
fidivl
xor
fbld
push
decb
cmc
and
outsb
fnstsw
addr16
lock
je
mov
insb
mov
ja
xor
or
add
arpl
cmp
cmp
push
inc
lods
ror
aas
das
clc
push
inc
jle
jo
jg
ljmp
data16
data16
dec
test
or
fiaddl
hlt
call
push
push
and
and
arpl
push
sub
jmp
pop
pushl
sub
inc
xor
push
fsts
or
mov
lcall
mov
cltd
cmc
popa
inc
mov
inc
stos
hlt
daa
mov
or
sub
add
push
sahf
jae
lcall
inc
std
dec
pop
mov
les
xchg
ljmp
mov
sti
add
pushl
xchg
and
cmp
pop
xor
movsb
mov
orb
xor
hlt
and
out
int3
inc
xor
xlat
dec
push
dec
std
or
rcrl
mov
test
cwtl
in
cld
adc
xchg
fidivrl
dec
dec
iret
cld
hlt
mov
fs
push
mov
or
and
push
mov
pusha
push
sbb
fstpl
inc
rorb
xchg
push
dec
xchg
xchg
cmpsb
mov
sub
adc
xor
pop
mov
call
fistl
int3
lock
out
pop
xchg
cmp
loop
push
jge
dec
iret
call
xor
test
fs
or
sbb
leave
xchg
inc
adc
xor
stos
out
decl
sti
push
and
dec
xchg
je
push
mov
mov
jg
lods
test
test
ret
ret
dec
or
mov
xchg
xor
loop
jmp
or
movsl
xchg
xlat
je
int
xor
pop
ret
jg
decl
add
popf
jg
fdiv
jns
out
repnz
int
sbb
jnp
decl
jl
mov
scas
and
in
gs
push
mov
inc
mov
pop
std
lods
test
push
xchg
ficompl
mov
lret
add
xchg
jns
arpl
sbb
and
sar
or
dec
ss
mov
cltd
xchg
pop
in
test
rolb
xor
enter
xor
mov
mov
sbb
dec
mov
ret
call
cli
je
loopne
xor
add
jle
nop
mov
inc
aad
in
push
inc
or
pop
shll
cmp
je
pop
enter
js
stos
lock
std
call
sub
std
int
pushf
add
mov
push
int3
std
cli
add
ljmp
lock
loop
enter
fidivs
sti
cmp
push
call
ret
push
shrl
lds
sub
ljmp
insl
imul
lret
jne
mov
daa
cmc
outsl
cmpsb
add
xchg
push
subl
jg
lds
adc
sti
mov
and
mov
das
stos
xchg
jae
orb
mov
xchg
pop
call
xor
add
aaa
cmp
cmp
call
sbb
adc
in
and
pushf
std
iret
das
bound
stc
cltd
mov
fildll
cmp
add
xorl
jmp
enter
mov
xlat
stos
jo
inc
jecxz
xchg
mov
lret
add
jb
test
add
das
cld
inc
stos
add
xchg
pop
add
xor
dec
dec
aam
addr16
and
ljmp
push
fwait
sbb
addl
sti
insb
gs
dec
into
bound
pop
push
iret
mov
aad
fiadds
push
dec
cld
inc
fcomip
imul
test
xchg
cwtl
sbb
montmul
cmpsb
inc
xchg
cltd
adc
mov
dec
repnz
adc
rcl
repnz
or
sub
ljmp
pop
sbb
adc
and
push
inc
pop
and
imul
sar
nop
cli
pop
or
subl
decl
iret
daa
jge
cmp
push
mov
nop
lret
mov
mov
or
jb
xchg
pop
add
mov
mov
sbb
sbbb
jnp
push
add
sub
pop
or
cmpsl
adc
mov
inc
cld
ss
call
dec
inc
aas
pop
adc
jbe
or
aad
jns
lahf
mov
decl
rcll
daa
dec
xchg
xchg
outsb
mov
imul
mov
dec
sub
jo
xchg
std
adc
cmp
jmp
fmul
imul
xor
inc
push
add
mov
inc
hlt
adc
sahf
loopne
lret
popa
or
push
decl
sub
call
das
adc
js
icebp
dec
test
mov
lock
lock
dec
outsb
jmp
sti
push
popf
insl
xchg
ljmp
enter
icebp
inc
sbb
iret
xchg
jne
mov
je
ret
xchg
ljmp
mov
inc
lds
cs
mov
leave
mov
sbb
movsl
nop
bound
fmull
je
mov
stos
jmp
pop
and
mov
or
pushl
sbb
insl
enter
loopne
shrl
repz
dec
or
icebp
inc
cmp
mov
inc
shl
cmp
mov
dec
jnp
or
jmp
or
incl
nop
pop
sti
fsubl
xchg
cli
sahf
imul
int
cmp
jae
jecxz
test
test
adc
and
popa
ljmp
mov
lds
inc
imul
jg
std
mov
pop
mov
in
sar
cmp
jmp
pop
adc
inc
aad
xchg
mov
inc
mov
jnp
ss
subl
mov
jge
dec
bound
push
push
aad
push
js
lret
mov
out
arpl
dec
arpl
data16
xchg
insb
out
dec
outsl
std
dec
push
enter
mov
loope
outsb
push
mov
mov
hlt
outsl
std
inc
dec
lea
or
add
sbb
adc
add
mov
xchg
sahf
mov
sarl
lods
jb
fnstsw
inc
jmp
push
ds
push
jns
call
jae
sbb
lods
jg
mov
mov
test
aas
pop
jmp
dec
lock
cltd
iret
adc
mov
jge
lea
push
mov
lcall
mov
ljmp
xchg
mov
inc
in
loop
pop
xor
jp
dec
xchg
hlt
mov
scas
adc
sub
or
xor
mov
mov
mov
fists
pushf
dec
and
insl
mov
mov
in
sub
fucomip
es
bound
in
scas
sbb
je
leave
test
inc
call
sub
sbb
sub
mov
andb
incl
lea
fnstenv
test
mov
stos
out
lock
iret
inc
mov
push
cmp
and
mov
lcall
push
jle
dec
dec
in
popl
mov
inc
out
push
pushf
out
xchg
lods
pushl
aaa
xchg
out
icebp
mov
pop
ds
add
pop
je
cmc
jge
add
push
out
bound
stos
andb
fwait
mov
fcoml
sahf
or
pushl
cmc
push
inc
movsl
push
lcall
test
sti
fisubl
clc
call
insl
subl
dec
mulb
jb
lods
nop
mov
mov
and
add
pop
movsb
mov
xor
mov
cmp
push
mov
push
inc
cmpsb
fwait
ret
test
aas
je
xchg
scas
sub
decl
std
shrb
dec
lea
mov
push
pop
imul
cmp
dec
inc
cmp
jae
xor
jb
loopne
orl
js
sbb
pop
mov
call
push
and
push
or
into
out
enter
inc
stos
scas
xchg
push
mov
xor
dec
cld
pushl
sbb
pop
inc
push
jg
hlt
mov
xchg
aaa
mov
jg
ret
xchg
loope
in
ret
pop
sub
repnz
push
inc
ret
xchg
inc
stos
fnstenv
lcall
add
xor
lds
jg
jbe
pop
push
fs
push
sbb
stc
jo
jns
push
push
jmp
xor
out
ss
pop
adc
pop
add
movsb
movsb
stc
cli
or
bound
push
rclb
add
ljmp
pop
or
popa
subl
xchg
jo
mov
inc
or
or
loopne
cmpsl
fdivrl
pop
stos
dec
in
mov
into
icebp
jg
add
or
std
lds
mov
incl
das
add
sbb
inc
xchg
call
hlt
jg
and
adc
sub
sahf
mov
enter
outsb
sahf
and
fimull
outsb
cmp
mov
aaa
xchg
jmp
xchg
fsubr
xor
mov
in
cmc
adc
stc
es
jo
lcall
fs
and
cmp
sub
sbb
cmc
fists
ret
out
mov
fistl
cli
jl
adc
es
les
out
test
jg
cmp
xchg
jmp
sbbl
mov
shrl
jns
imul
loopne
cmp
lret
fnsave
adc
xchg
xchg
stc
sbb
dec
test
call
aaa
scas
js
add
lock
lock
loope
mov
cli
call
aaa
xor
mov
js
cmp
inc
repnz
outsl
xor
lcall
mov
xor
adcb
mov
movsb
arpl
mov
pop
jo
test
or
incl
mov
lcall
push
push
fbstp
enter
push
stc
mov
mov
push
push
test
add
test
or
cmp
add
jle
xchg
daa
nop
dec
inc
push
adc
jg
mov
in
in
mov
jg
rclb
cmp
push
pop
ficompl
mov
ja
jmp
mov
push
leave
unpcklps
data16
fwait
sub
lock
sbb
lock
jl
jne
rorl
data16
out
call
stos
push
xorl
or
insb
out
and
fstp
les
mov
imul
cmp
pop
sbb
push
popa
aam
inc
imul
mov
ljmp
mov
out
subb
mov
cmp
and
clc
cmpsb
ss
out
cmp
decl
adc
or
add
sub
in
dec
shl
ss
icebp
jmp
popw
insb
adc
ret
pop
push
push
push
push
mov
fldenv
xor
lock
fistpll
xor
int3
in
data16
pusha
ja
and
fildll
and
jo
mov
fdivrs
mov
add
sti
lea
lock
loop
mov
shrb
mov
nop
pop
xor
aam
mov
test
jne
jecxz
popf
imul
jbe
jg
sti
pusha
cmpsb
and
push
mov
pop
test
loopne
aas
cltd
das
adc
sbb
inc
lds
loope
jge
repnz
mov
mov
mov
daa
ljmp
std
mov
testl
inc
outsl
in
insb
testb
ljmp
push
push
mov
xchg
lock
adc
mov
sub
jbe
stos
pushf
lods
fsubrp
ret
cli
dec
sub
lahf
popa
lods
loope
mov
sub
lret
call
in
jl
int
gs
and
sub
mov
and
and
jmp
or
aas
fs
adc
xor
sub
idivl
loopne
ja
scas
incl
add
mov
mov
pushf
inc
popl
incl
dec
xor
dec
dec
incb
ljmp
inc
hlt
dec
mov
pushl
push
adc
sbb
aad
jno
mov
pusha
adcb
call
jg
and
jl
lret
loopne
adc
push
push
hlt
outsl
out
jnp
outsl
sbb
cld
fcom
mov
add
push
xor
fbstp
sti
cmpsl
aaa
sarb
xchg
jecxz
shll
mov
mov
fisubl
pandn
jg
mov
int
push
fdivr
icebp
pop
add
jle
daa
push
adc
jl
mov
lcall
xor
icebp
dec
mov
cmpsl
xchg
ljmp
test
jle
dec
push
or
jmp
sbb
sub
out
lahf
xchg
rcrl
pusha
cmp
jp
sub
mov
and
inc
mov
sbb
add
xlat
andl
jmp
jmp
lahf
xor
xchg
jno
fnstsw
and
lods
adc
mov
shll
xlat
jg
andl
lret
pop
loopne
popa
fucomip
and
aad
push
test
outsl
cmc
pushl
xchg
addl
sbbl
mov
pop
ljmp
outsl
fwait
jno
movsb
mov
xchg
lahf
jecxz
test
sub
fwait
mov
mov
xor
jecxz
fs
repz
jmp
bnd
inc
fldl
cwtl
cli
and
jg
mov
push
je
jle
pop
or
mov
pushl
push
clc
loopne
stos
mov
pop
lret
lea
imul
dec
push
pop
addr16
fnstsw
outsl
icebp
mov
sub
mov
stos
inc
ljmp
ja
jmp
mov
bound
lods
pop
mov
inc
mov
incl
xlat
jmp
xor
inc
jge
ljmp
inc
scas
jge
fildll
adc
dec
std
lcall
stc
inc
inc
inc
add
sbb
insb
or
pop
sub
inc
je
fsubrl
rcrb
icebp
push
sbb
add
jp
ljmp
sti
or
push
pop
pop
insb
or
sbb
jl
inc
mov
cld
inc
loop
mov
dec
pop
pop
mov
sbb
sbb
mov
popf
sbb
or
cld
call
movsl
aad
mov
xor
sbb
neg
xchg
dec
add
and
divl
fwait
mov
decl
ljmp
xchg
scas
sbb
sti
sub
jp
addr16
push
add
iret
ljmp
test
xchg
lods
imul
push
sub
cli
lcall
add
add
adc
xor
dec
hlt
leave
cli
fldt
xchg
adc
and
jb
lods
jmp
inc
push
pop
fbstp
push
test
sti
fsubrs
fdivrl
loop
imul
stc
cmp
jo
dec
decl
cmp
rorb
cmp
dec
hlt
aas
pop
iret
jbe
pop
pop
lock
sar
jmp
add
scas
add
test
xchg
xchg
pop
inc
enter
clc
cld
lock
enter
mov
jmp
call
cmc
pop
imul
fists
jle
inc
xlat
adc
aas
leave
cmpsb
call
stos
mov
pushl
or
inc
shlb
or
fbld
xchg
sub
mov
ret
pop
imul
call
lahf
xor
mov
cmp
addr16
bound
aam
xchg
pop
je
cli
jle
mov
clc
jno
mov
loop
les
or
outsl
jne
sub
sarl
jno
sub
std
jmp
aas
mov
xchg
call
xchg
lcall
shlb
decb
jecxz
cmp
int
mov
mov
cli
sbb
jmp
nop
xchg
and
out
push
sbb
stos
xchg
cs
mov
out
cmpsl
cmp
pop
clc
imul
scas
mov
ror
es
mov
incl
mov
inc
mov
out
std
push
loopne
mov
das
insb
bnd
cmp
sarl
dec
and
inc
xchg
mov
xchg
pop
pop
and
call
cli
scas
mov
daa
lods
fsubrl
mov
mov
add
jg
stos
call
icebp
xor
cmp
arpl
lods
lods
dec
daa
decl
mov
push
mov
mov
sbb
xor
add
jl
pop
stos
pop
std
and
jg
pop
sahf
sub
fists
decl
adc
clc
mov
sbb
pop
ret
push
pusha
fsubrl
pop
mov
adc
add
pop
sub
fildll
jl
jbe
mov
test
push
pushf
enter
hlt
arpl
xor
sbb
out
dec
pushf
xchg
xor
add
push
stos
cmp
pop
mov
decl
mov
xor
or
and
aaa
adc
mov
xlat
mov
std
ja
mov
or
loop
xchg
pushf
push
call
clc
cli
lds
push
cmpsl
adc
push
popf
movb
inc
mov
xchg
mov
mov
mov
clc
pop
dec
pop
ret
add
and
pop
inc
pop
int3
mov
cmp
es
jmp
aam
jecxz
sub
out
xchg
or
jae
jmp
mov
aam
ret
pushl
rorl
mov
imul
hlt
cli
mov
xchg
pop
pop
call
xchg
xor
mov
xchg
jg
repnz
decl
aam
shll
movsb
pop
or
leave
stc
lods
xchg
cmpsl
add
mov
shr
insb
push
dec
lea
jmp
jnp
push
stc
loope
adc
out
lahf
ficompl
mov
sar
lret
aaa
ljmp
aad
add
cmpsb
pop
enter
sbb
or
mov
fisubrs
jae
jge
pop
cli
fcmovne
outsb
xor
sbb
popf
sbb
jae
shll
imul
ljmp
lock
bound
and
push
xor
mov
fcmovb
inc
xchg
rcrb
gs
lahf
out
loop
mov
out
pushf
xor
sbb
jecxz,pn
js
add
stos
scas
aam
dec
inc
mov
int
adc
sbb
mov
int
sti
jp
add
test
jg
rorb
jle
mov
sub
pop
mov
int
fsubrs
cmp
cwtd
mov
xchg
mov
lds
xor
fcoml
repz
dec
out
push
fwait
adc
imul
insl
lods
xor
es
out
or
pop
imul
loopne
imul
addr16
mov
dec
jl
mov
cmp
jp
sub
xlat
cmp
fistpl
mov
pop
popf
daa
jne
sahf
outsb
in
sub
incl
in
cmp
xor
lret
dec
or
bound
adcb
fisubrs
sub
push
decl
nop
mov
mov
cmc
inc
test
push
dec
cmp
xchg
punpcklwd
mov
pop
cmp
jmp
inc
add
pop
addl
adc
jmp
cltd
sahf
fwait
sbb
pusha
shlb
adc
stos
sub
mov
dec
mov
xchg
or
lret
fisttpl
adc
test
out
add
pushf
daa
lods
inc
stos
lcall
xchg
lret
fs
dec
dec
xor
xor
push
addr16
scas
xchg
movsl
sar
outsl
cmc
ljmp
push
sahf
mov
adc
movsl
adcl
mov
sub
mov
pop
lock
movsb
lods
fsubs
shlb
sub
bnd
xchg
mov
loop
cli
sbb
xor
and
aaa
filds
or
pop
ljmp
dec
icebp
repz
decl
ss
add
outsb
cmc
push
cmpsb
cltd
movsl
cmp
rcl
add
mov
test
call
mov
mov
sub
inc
outsb
sbb
jae
cld
jo
push
mov
xor
mov
js
jge
jecxz
adc
jo
or
not
xor
dec
imul
jg
push
enter
icebp
push
jecxz
loopne
mov
mov
cmp
xor
jmp
nop
inc
jne
imul
push
sub
ror
dec
ss
sahf
lods
repnz
dec
call
call
cld
push
pop
pop
fmulp
cltd
loop
leave
iret
xchg
push
dec
gs
fucomip
rclb
negb
xor
stc
xchg
inc
daa
adc
jmp
add
xchg
or
or
arpl
and
or
shl
ror
inc
fmuls
push
mov
out
add
ret
incl
sbb
xlat
adc
dec
push
mov
test
in
mov
std
incl
daa
pop
mov
stos
jg
test
negb
iret
push
pop
popa
pop
out
mov
pushw
std
ret
push
lret
out
outsl
insl
xlat
rcrl
aas
loop
ret
insl
pushl
and
dec
inc
or
ss
sbb
ret
mov
mov
cwtl
or
sub
cld
inc
mov
xchg
xchg
incl
rcll
or
dec
leave
pushf
xchg
dec
and
mov
dec
aas
and
sbbl
addr16
cmc
pop
nop
jl
stc
cmp
mov
sbb
pop
mov
lock
fcoms
flds
xchg
push
gs
jmp
inc
outsl
sbb
cmc
jg
xor
pop
call
mov
add
push
test
add
and
inc
ret
pop
xor
inc
mov
ja
test
insl
movups
test
inc
sub
sub
sub
je
add
mov
and
in
aam
or
shll
fisubrl
adc
ficoml
fistl
jmp
imul
jmp
in
push
pop
pop
jge
cmp
jns
cmpsl
mov
jle
mov
test
ljmp
pop
stos
xchg
mov
push
fiadds
gs
push
xchg
mov
cltd
mov
incb
xchg
mov
sti
push
mov
scas
adc
dec
jnp
call
dec
pop
mov
ret
cmp
xchg
hlt
std
jb
push
or
mov
push
inc
call
inc
xchg
std
sbb
jp
pop
subb
xlat
xor
or
or
xchg
or
lret
mov
mov
sbb
jg
addb
xchg
les
pop
stc
xor
insb
jnp
test
das
std
incl
test
xor
dec
popf
stos
ret
aam
clc
dec
pop
jl
xchg
sbb
daa
shll
jge
sbb
jnp
data16
outsl
mov
push
push
stos
fists
fdivr
sbb
jg
jbe
sbb
sub
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
addb
adc
lods
mov
ss
aas
mov
mov
mov
add
cmp
dec
add
adc
push
cmp
cmc
inc
add
add
incl
sub
popf
stos
pusha
leave
fildll
push
dec
decb
add
jmp
add
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
call
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
jmp
call
xor
sbb
mov
jl
sar
sbb
adc
pushl
pusha
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
call
push
push
push
call
sub
je
int3
adc
jne
dec
push
addb
pop
push
add
push
jmp
lcall
pop
pop
ret
in
xor
push
add
addr16
lea
mov
or
loopne
decl
adc
xor
add
dec
mov
sub
inc
adc
adc
jmp
inc
xor
or
cmp
or
rolb
sbb
inc
adc
pop
pop
mov
movsb
dec
orl
sbbl
shr
enter
stos
adc
mov
add
xchg
fistpl
cmp
xor
or
mov
shr
mov
xor
fldt
shl
decl
sbb
add
cmc
inc
inc
cmp
jl
mov
imul
mov
js
mov
ljmp
cld
call
or
lret
xchg
add
fcmovb
jecxz
add
cmp
mov
decl
and
sbb
push
push
push
cmp
dec
mov
ljmp
js
ud0
pushl
inc
test
int
icebp
xorl
push
sbb
mov
and
lock
stc
add
mov
jle
push
xor
mov
or
lret
mov
shr
and
call
adc
mov
jg
shl
inc
push
and
push
sahf
flds
sub
mov
pop
adc
sub
adc
pusha
mov
lds
repz
aas
pop
mov
lcall
shl
movsl
add
cmp
mov
or
lods
movsb
cmpsl
push
jae
push
cmp
imul
testl
test
test
aaa
call
loop
fisttpl
xchg
aas
cmp
mov
push
or
jmp
movsb
mov
insl
push
lock
dec
or
mov
mov
dec
jbe
pushl
stos
imul
dec
cmp
inc
nop
icebp
push
push
and
loopne
add
stc
nop
xchg
in
jo
data16
insb
incl
xchg
mov
sbb
and
xor
ljmp
in
inc
icebp
push
enter
in
cwtl
imul
mov
clc
xsha256
cmpsb
xchg
or
add
pushl
jge
mov
sbb
jmp
es
and
ds
dec
aaa
sar
jg
incl
xor
push
mov
push
push
push
sbb
insb
or
test
jg
mov
add
jl
lahf
adc
and
push
sbb
sbb
test
jmp
ret
scas
adc
sbb
cltd
aaa
mov
xchg
jle
mov
mov
push
and
ljmp
inc
icebp
jge
adc
adc
mov
xor
setl
dec
loope
push
cwtl
rorb
pushl
lahf
test
xor
js
and
inc
or
adc
pop
dec
xchg
test
fldl
call
xchg
push
sar
or
mov
or
cmp
push
popa
sbb
jae
jmp
scas
add
sub
icebp
leave
fs
arpl
and
cmp
push
cmp
jmp
ret
inc
push
sbb
unpcklps
cwtl
xor
mov
sub
daa
jecxz
adc
dec
decl
jmp
add
adc
call
decb
es
push
and
out
fldcw
mul
xchg
mov
pushl
test
inc
cwtl
adc
add
mov
mov
jl
lods
jo
jb
outsl
and
ljmp
in
enter
sbb
and
and
sub
and
rcr
inc
or
xchg
sub
jl
pop
int3
adc
das
sub
jb
imul
je
call
jg
ljmp
ret
add
testl
cmp
rcl
cmpsl
hlt
or
cmp
jae
ret
cli
and
add
mov
jmp
pushf
or
incl
xlat
fwait
ret
xchg
xchg
cmp
cli
and
jae
and
mov
clc
shr
sbb
pop
sti
cmp
push
jae
mov
pusha
add
jecxz
jns
lea
nop
add
push
xor
mov
ljmp
sbb
sub
cmpsl
test
xor
sub
mov
add
xor
adc
sub
sbb
add
cmc
dec
in
and
call
mov
aad
cwtl
xor
push
out
adc
pop
sub
mov
pop
cmp
inc
call
cltd
addr16
hlt
jne
xchg
test
or
loop
sub
pop
jg
sub
add
cmp
push
out
push
out
cmp
outsl
cld
add
sbb
mov
pop
and
pusha
pop
inc
out
push
inc
lods
ljmp
mov
sbb
pop
cmp
ljmp
dec
xor
inc
cltd
mov
jmp
jge
insl
xchg
cld
and
addb
mov
sub
add
mov
or
and
out
xlat
push
sar
and
or
xorl
dec
add
movsb
jge
out
or
xor
fistpl
test
jne
push
pop
lcall
jmp
or
mov
sbb
call
inc
push
mov
push
fiaddl
repz
xchg
cmp
xchg
nopl
test
mov
pop
cmp
inc
test
pop
rcrb
push
and
fstpl
hlt
mov
cmpsl
outsb
lcall
frstor
fscale
xchg
adc
lahf
dec
inc
xor
sti
das
sbb
call
inc
mov
jmp
inc
jmp
mov
stc
dec
je
xor
call
insb
rclb
ret
add
int
aaa
std
sub
add
lea
ffreep
mov
pushl
clc
decl
cltd
dec
inc
mov
iret
inc
insb
sbb
push
movsl
popa
jl
clc
cmp
pop
outsl
lock
mov
inc
cmp
mov
jbe
sbb
mov
adc
int3
or
xor
jecxz
xchg
pop
cmc
push
add
dec
imul
add
bound
lahf
or
dec
add
testl
sub
shlb
scas
or
dec
add
xor
and
jo
incl
lock
push
adc
mov
adc
mov
mov
sbb
stos
call
decl
adc
push
sub
sub
in
fstl
mov
inc
cld
add
jg
ret
pop
arpl
push
or
add
stc
jo
mov
ret
ljmp
add
jae
test
push
rol
push
mov
lcall
lcall
das
or
cltd
outsl
add
or
sbb
push
call
ret
sbb
add
mov
lea
inc
int3
pop
mov
adc
scas
enter
ljmp
call
mov
xchg
sub
inc
adc
dec
fcoms
add
incl
add
inc
xor
outsb
je
mov
mov
lret
or
outsl
add
push
lcall
loope
jg
lea
ljmp
xor
js
add
cmpsb
add
add
inc
pop
enter
call
push
xchg
or
push
test
mov
dec
sub
xor
fisubs
jne
loopne
cmovae
inc
icebp
add
movb
add
push
mov
mov
cmp
jmp
mov
or
xchg
test
pop
pop
pop
pop
ret
push
in
ret
decb
adc
and
pop
sub
inc
and
push
lcall
decl
cltd
mov
push
rcrb
sti
xor
pushl
or
pushl
inc
pop
sbb
add
jmp
lods
push
jne
scas
loopne
in
scas
leave
push
cmc
adc
sub
dec
enter
jle
lods
scas
pop
add
inc
loopne
call
dec
hlt
push
scas
inc
cmpsb
cltd
or
mov
loop
and
pop
jmp
dec
leave
dec
cmp
or
bound
pushf
add
pop
sub
push
clc
call
pop
inc
adc
sbb
in
lods
inc
je
insb
dec
cld
inc
pop
push
lea
stos
xadd
add
iret
jge
push
mov
mov
add
sub
in
sbb
mov
je
enter
sbb
cmp
or
shr
inc
lcall
xchg
push
push
add
into
clc
jmp
pop
pop
aad
jmp
inc
adc
xor
js
push
test
psubsw
or
aaa
clc
xor
sub
pushaw
xor
cwtl
push
call
fbstp
das
push
bound
in
push
dec
jge
aas
push
lret
inc
in
xorl
decl
loop
xor
jge
dec
es
rol
push
push
add
push
movsl
sbb
jl
dec
inc
push
cli
movsb
outsl
rcrl
stos
lea
sbb
stos
pop
into
pusha
cmp
cmp
call
push
and
popa
pop
pusha
add
pushf
lcall
call
push
xorb
xchg
pop
push
test
rorb
xchg
ret
push
outsb
dec
sub
ss
cltd
das
call
pop
and
ds
int3
test
mov
push
dec
or
aaa
inc
scas
sbb
push
push
in
call
cli
dec
cmp
in
ror
inc
je
iret
and
outsb
push
sub
mov
push
jmp
or
dec
pop
sbb
movb
push
stc
test
push
shl
xchg
inc
movl
or
mov
pushf
dec
enter
pop
fimull
pop
xchg
jbe
movsl
sub
incl
in
sar
add
or
jle
iret
or
push
je
or
outsl
cld
pushl
dec
or
jle
es
jnp
push
push
push
paddusw
incl
pop
dec
test
or
movsl
adc
lds
pop
xchg
fnstcw
sbb
mov
std
call
inc
mov
sub
repnz
pop
in
inc
scas
and
dec
orl
jmp
pop
adc
sahf
scas
dec
movaps
mov
iret
pop
push
int3
testb
and
inc
push
pop
test
add
in
jmp
mov
inc
jno
fcmove
leave
gs
pusha
pop
imul
add
dec
mov
and
pop
pcmpeqb
ss
mov
enter
mov
loopne
mov
cmp
cld
jmp
mov
das
jl
je
cmpsb
xor
in
adcb
imul
idivb
outsl
icebp
outsl
or
pop
call
xchg
daa
iret
sar
das
mov
aas
cltd
mov
xchg
add
mov
ljmp
arpl
adc
pop
sbb
sub
lret
bound
repnz
pop
pop
clc
sub
inc
jo
pop
pusha
insb
imul
lock
fcoml
push
xor
arpl
jae
bnd
ljmp
jge
mov
bound
ja
fstpt
imul
inc
dec
inc
cs
das
cmc
xor
ds
inc
imul
lea
mov
mov
adc
xchg
pop
lcall
leave
jecxz
loopne
popa
sarl
cmp
inc
outsl
js
ja
cmpsl
lret
mov
pop
xor
sbb
test
mov
jg
dec
add
imul
mov
repnz
jo
sahf
aas
push
sbb
pop
clc
sbb
push
insb
push
aas
inc
mov
arpl
stos
idiv
inc
dec
clc
jbe
aaa
adc
rolb
mov
out
and
inc
ljmp
pusha
mov
mov
cld
mov
xor
movsb
mov
insl
pop
jae
idiv
ja
or
shr
and
inc
mov
call
fisttps
adc
jae
jne
stos
jmp
call
jne
inc
jmp
lods
call
sbb
dec
shl
lods
mov
fstp
call
jge
or
cmp
ja
inc
xchg
incl
fucomip
mov
mov
mov
sub
popf
pop
jmp
add
jne
push
lods
xchg
push
inc
ret
jne
call
jge
ficoms
ret
sub
ret
in
mov
inc
in
or
in
pop
pop
dec
or
cmp
mov
add
add
pop
xor
mov
call
decb
mov
xchg
add
push
or
add
push
push
pop
roll
iret
ret
mov
shll
incl
pop
mov
adc
mov
push
mov
pushl
sbb
jae
push
mov
add
mov
call
pop
mov
push
fs
lods
das
xor
or
fistl
or
adc
arpl
pop
pop
add
sub
shr
sbb
scas
inc
mov
add
imul
cs
shrb
fwait
jnp
cmpsl
daa
pop
pop
jmp
je
jno
cld
add
call
mov
pop
les
pop
jmp
pushl
push
xor
xor
add
dec
outsl
popa
fs
imul
jb
jb
inc
inc
gs
jb
arpl
fs
jae
mov
dec
mov
push
or
insb
insb
adc
add
gs
dec
add
add
add
add
incl
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jle
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
sub
push
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
pop
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
push
mov
push
dec
repnz
push
call
pop
or
je
mov
add
jmp
popa
ret
popa
jmp
