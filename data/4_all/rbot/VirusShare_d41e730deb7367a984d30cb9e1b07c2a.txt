mov
mov
sub
lea
push
xor
push
push
pop
cld
call
ljmp
add
shr
add
std
push
push
push
push
push
xor
out
jg
clc
or
cmp
je
lea
push
push
call
add
fistps
data16
and
add
xor
mov
add
divb
data16
pop
push
xor
mov
add
pushf
or
addb
sti
mov
cld
pop
mov
mov
add
int
addr16
insb
mov
push
jl
mov
mov
je
int
push
push
push
push
push
or
ds
cmp
out
aaa
lods
loopne
out
push
popf
scas
sub
mov
std
subb
push
sub
rcll
mov
jo
leave
dec
mov
sbb
push
push
pop
xor
pop
gs
push
sub
sub
jmp
js
into
jnp
xor
aas
insb
out
imul
mov
imul
add
sbb
insb
adc
popf
mov
sub
shll
jne
aaa
sti
mull
test
dec
imul
stos
jecxz
adc
lea
adc
pop
pop
leave
ret
pop
push
cmp
push
mov
xchg
mov
push
popa
push
push
adc
cmpb
loop
popa
scas
mov
mov
mov
push
pop
inc
add
fs
rolb
hlt
adc
jno
xor
sub
mov
mov
in
movzbl
add
mov
rcl
push
mov
fnstcw
insb
push
push
jbe
sahf
int
cmp
and
cmp
mov
sbb
and
adc
sahf
int
pushf
push
movmskps
mov
ss
repz
jo
push
cmc
mov
dec
push
pusha
imulb
cld
push
inc
push
add
inc
mov
in
ret
fisubrs
mov
clc
mov
pop
add
mov
stc
pop
and
data16
ds
loopne
roll
push
and
pop
fildl
sub
sub
loopne
add
jmp
jge
addr16
fdivr
adc
jl
movsl
ret
fmull
mov
push
call
lods
in
rcll
xchg
jge
pop
and
push
cld
mov
cmp
pop
int
push
push
pop
mov
inc
jmp
sub
insb
pop
mov
xor
std
mov
mov
add
push
adc
lds
imull
daa
push
pop
divb
icebp
push
test
cmp
data16
adc
addb
jne
sti
inc
cmp
mov
test
ret
gs
sbb
xchg
add
inc
pusha
jecxz
sti
dec
sti
lds
int
popa
pop
mov
mov
pop
enter
mov
cmp
jno
lock
sub
test
pop
add
xchg
jne
add
ds
cs
pop
jmp
movsb
imul
fs
mov
sbb
jae
popf
mov
push
je
loope
out
fisubrs
push
mov
sbb
cmpsb
cmpb
out
lcall
dec
adc
popf
push
mov
sar
sbb
or
add
push
pop
jmp
push
pop
cmp
dec
push
xor
jmp
cmpsl
adc
leave
cld
xor
xchg
push
push
sarb
pop
mov
add
movsl
mov
lods
hlt
aas
int
lock
movsw
bound
rep
stos
mov
je
pop
push
mov
pop
xor
mov
lea
push
or
xchg
popf
jo
cmpsb
mov
fdivr
pop
imul
popf
mov
hlt
pop
mov
enter
clc
mov
lcall
mov
add
sbb
int
sub
add
add
ret
jne
mov
push
push
das
je
and
add
add
ret
mov
in
mov
nop
loopne
pop
loopne
and
int
test
push
push
or
adc
mov
xlat
in
imul
cmp
leave
mov
xchg
pop
sti
add
std
outsb
scas
xorb
mov
jne
inc
sub
iret
adc
scas
mov
test
and
mov
adc
push
dec
lods
loopne
jnp
enter
push
sub
testb
dec
roll
mov
fdivrs
mov
pop
mov
popa
jns
jp
addl
xor
and
cltd
pop
idiv
sahf
push
jno
cmp
jne
cmpl
enter
in
dec
rolb
and
push
push
sbb
adc
mov
lock
out
pusha
cwtl
push
or
pop
mov
push
repnz
insb
repz
mov
add
cmp
push
mov
cltd
sub
sar
add
or
add
lea
mov
push
jb
in
or
jl
sbb
cmp
addb
mov
cmp
and
mov
lea
adc
test
int
fs
add
or
out
push
jne
les
pop
mov
mov
pop
pop
lahf
cmp
les
mov
test
mov
jl
inc
int3
inc
or
add
insb
jo
jecxz
inc
and
test
sbb
xlat
cmpl
adc
adc
push
stos
pusha
mov
mov
xchg
clc
jnp
jne
or
jge
hlt
dec
cmp
mov
lea
push
mov
mov
rep
cmp
pop
add
sbb
mov
clc
inc
push
loope
lock
pop
xor
adc
rcrl
push
cli
pop
mov
testb
es
ja
cmpsl
repz
and
cmp
pop
cmp
or
int
stc
fdivl
pop
push
inc
movl
pop
nop
shl
dec
sub
cs
shrl
cmp
xchg
mov
les
cmp
xchg
faddl
sbbb
in
jne
fildl
sbb
push
dec
rclb
in
repz
mov
jne
pop
jmp
mov
ret
mov
pcmpeqw
push
jmp
push
jns
pushf
dec
mov
mov
in
rorb
in
inc
xchg
push
pop
hlt
adc
mov
jmp
dec
sub
adc
xchg
sub
into
xor
mov
jge
xor
jne
push
cmp
cwtl
push
jl
jmp
es
test
cltd
insb
adcb
test
int3
fadds
lds
xchg
adc
cli
hlt
add
mov
lea
xchg
cs
cmpsb
or
mov
in
shr
pop
and
xchg
out
out
js
adc
add
aaa
push
sbb
out
lods
out
sarb
test
push
insb
xlat
and
mov
push
or
mov
and
mov
roll
lock
sub
sbb
rorb
pop
adc
add
or
mov
test
js
push
or
clc
xchg
lret
and
in
cld
or
mov
movsb
mov
pop
rcrl
push
jmp
test
sbb
or
int
call
out
sbb
into
xor
rcrl
sbbl
inc
je
jecxz
in
and
and
in
in
inc
jb
or
in
movsb
and
movsl
loopne
jl
jae
xchg
mov
int
inc
addr16
cmpl
cltd
mov
int3
movsb
rcrb
add
aaa
pop
fsubr
jge
paddusb
orl
int
mov
sbb
mov
adc
adc
adc
out
test
and
test
mov
sbb
rcrb
adc
dec
es
push
loopne
roll
pop
xchg
call
cmpsl
jl
rolb
add
ja
cmpl
jns
pop
mov
repz
call
mov
inc
mov
cltd
add
and
and
inc
punpckhdq
and
push
jmp
mov
sub
mov
adcb
sbb
call
add
push
pop
jb
jle
jmp
push
jmp
lock
sub
icebp
and
mov
xor
xchg
ret
lea
mov
das
adc
add
mov
clc
out
hlt
popf
or
jecxz
dec
or
cmp
add
push
pop
aam
imulb
popa
or
scas
rolb
jl
mov
mulb
insb
cmpl
xchg
rorb
cmpsl
inc
pop
inc
pop
jge
lahf
push
add
xlat
mov
pusha
xor
mov
pop
push
push
cltd
loop
fistps
add
mov
or
call
jmp
xor
push
xchg
test
cltd
leave
in
xor
insb
enter
movsb
cmp
loopne
call
jle
add
push
nop
push
add
xor
mov
and
add
hlt
cmp
mov
sub
push
push
xchg
xor
sub
lock
and
push
xchg
es
push
push
inc
inc
push
ja
ficomps
mov
aad
cmp
lock
lods
pop
pop
cwtl
push
mov
cmp
je
push
ljmp
test
mov
cmp
jae
hlt
dec
push
neg
pushf
imulb
loopne
popa
enter
cwtl
das
push
andl
mov
dec
mov
or
jne
adc
adc
xchg
add
rcll
dec
inc
movsl
add
adc
dec
and
adc
sbb
pop
lret
mov
mov
push
push
dec
push
adcl
les
xor
push
testb
or
roll
push
mov
push
xchg
sub
xchg
in
sti
pushl
loope
push
mov
cli
add
xchg
push
js
mov
add
jmp
jo
mov
orl
aad
pop
pushf
jnp
pop
fisttpl
sbb
push
pop
add
xor
jmp
inc
lahf
or
ret
mov
mov
lock
fisubs
mov
subl
push
std
sub
cmp
pushf
inc
std
out
mov
in
or
out
sub
lcall
movsl
adc
inc
out
jle
add
mov
ljmp
in
pop
fstpt
arpl
inc
inc
mov
sbb
cld
lcall
add
add
dec
xor
imul
cmp
xor
lods
shlb
cli
push
cli
push
push
xchg
orl
cld
mov
stc
sub
lods
or
mov
fistpl
mov
xchg
pop
pop
mov
jmp
repnz
mov
jmp
out
push
xor
insl
mov
in
jnp
inc
push
or
out
out
xchg
push
push
pop
in
mov
ss
lahf
mov
jl
mov
jbe
push
push
mov
push
rcll
or
mov
push
out
rcrb
adc
in
lock
xor
inc
jns
icebp
sub
nop
add
test
mov
iret
mov
push
js
adc
mov
pop
pop
pop
push
cmp
jge
pushf
pop
xor
sbb
int
sub
fs
cltd
mov
rolb
mov
or
rorl
lods
xchg
sbbl
fwait
pop
add
mov
pop
sbb
xorps
adcl
lock
lahf
enter
xchg
push
leave
sti
add
fldcw
inc
add
push
popf
fmull
mov
push
icebp
jmp
rcrl
pop
jae
cld
aam
nop
mov
das
movsb
fistpl
and
or
int3
dec
loopne
or
or
cmc
test
testl
add
sub
sbb
minps
lea
add
cmpb
inc
sub
inc
out
lahf
mov
mov
cld
cwtl
movsb
fld
cmp
xchg
mov
subb
cmpsb
and
fidivrs
push
test
inc
pop
test
lcall
sub
je
dec
inc
pop
or
and
mov
sbb
les
and
push
and
jl
xchg
lcall
out
add
push
sub
jmp
ret
mov
andl
and
ret
push
mov
mov
loop
and
inc
or
addr16
pop
test
subb
lock
and
sti
xlat
cli
dec
cmp
mov
mov
test
mov
outsl
mov
ret
jo
mov
xor
mov
xor
cs
push
cmp
loop
mov
sub
fs
push
adc
or
out
mov
xor
ret
pop
ret
push
mov
loopne
cmp
andl
daa
clc
dec
add
xor
inc
add
mov
test
sbb
fistl
jg
popf
ret
lea
add
push
ja
ja
nop
ret
push
push
sub
mov
add
mov
mov
lea
jmp
movb
loopne
popf
std
inc
sar
mov
sub
sub
pushl
pushl
addb
or
add
in
enter
out
cmpsl
push
push
rcr
aaa
jge
jo
inc
or
inc
loopne
movswl
ficoms
sbb
pop
cmp
sbb
clc
add
hlt
fidivrl
ffree
fstpl
mov
jnp
nop
inc
loop
ret
nop
out
or
and
leave
cwtl
mov
std
out
jno
mov
mov
push
jp
bound
pop
mov
or
and
xchg
cmpsb
xor
and
loopne
jecxz
test
sub
shll
stos
je
ret
rorl
jg
outsl
mov
and
pop
mov
out
inc
stc
adc
mov
call
jmp
adc
and
or
ja
add
dec
rorb
loopne
cmp
cmp
push
push
fsubs
lods
std
loopne
test
add
sbb
clc
pusha
xor
testl
call
cmpsb
jo
push
mov
push
push
sub
jno
mov
push
push
jmp
inc
push
push
push
ret
rcll
xchg
and
test
adc
jne
mov
pop
aam
jo
sbb
pop
nopl
sub
xchg
nop
jns
mov
aad
out
adc
call
mov
push
sbb
outsb
inc
jo
enter
pop
call
popf
sbb
push
mov
lds
out
pop
cmp
jbe
data16
loopne
sbb
rolb
loopne
xadd
xor
fsubrs
sbb
inc
push
push
dec
dec
dec
ficoml
enter
imul
dec
fsubl
fsub
sti
fidivs
cmp
mov
dec
outsb
xchg
daa
mov
lock
pop
inc
test
cld
stos
clc
push
and
pop
clc
js
pop
xchg
dec
cs
sub
pop
mov
mov
aam
push
int
adc
hlt
pop
lock
jno
hlt
rdpmc
sbb
add
cmpsl
insb
out
jns
pop
orb
adc
add
mov
push
add
jno
add
test
js
lcall
adc
test
mov
mov
imul
or
push
add
imul
jns
stos
pushf
or
sbb
inc
inc
add
mov
add
push
push
and
cltd
push
push
sbb
fwait
push
mov
fidivrs
mov
daa
les
fcomps
into
adc
fnstcw
push
dec
push
add
push
test
daa
fcoml
and
mov
fucomi
inc
mov
loop
cld
inc
and
in
add
cs
pop
sbb
rorb
adc
filds
mov
les
and
imul
loopne
xor
bound
jne
xorl
mov
xorb
xchg
lds
pop
dec
inc
or
mov
clc
fildll
fmull
in
jns
out
sub
xor
sbb
pop
cmp
xchg
rol
fadd
pop
pop
fdivrl
push
in
mov
mov
dec
sub
mov
pcmpeqd
hlt
mov
push
mov
add
fstpt
daa
or
cmp
pop
jae
shl
fwait
add
iret
sub
andb
adc
js
es
xchg
jb
push
pop
jmp
adc
mov
xlat
dec
mov
adc
jne
mov
pop
fdivrl
rclb
sub
fwait
or
adc
and
fistpll
jbe
cld
fbld
mov
mov
lea
shr
rep
mov
and
rep
idiv
aaa
adc
push
lock
and
and
mov
and
add
add
shl
add
ds
sub
int
pop
shl
push
inc
movaps
cmp
testb
add
out
jbe
cld
loopne
fists
jbe
add
mov
mov
movd
xor
dec
sbb
mov
push
or
inc
loop
pop
cmp
ja
fisttpll
adc
or
outsb
cmp
jne
pop
or
and
dec
pop
cs
enter
push
xchg
push
je
cwtl
cmp
pop
out
loopne
adc
cs
push
jns
lods
hlt
in
sbb
scas
mov
sub
cltd
adc
adc
outsb
popf
fdivrs
ds
daa
adc
js
dec
lret
inc
mov
push
rep
adc
sti
push
mov
cmp
mov
add
je
data16
jbe
out
push
push
movb
inc
cmp
je
add
sbb
in
orl
aad
xchg
ret
lods
push
or
and
inc
popa
sub
mov
int
sti
popl
loopne
and
nop
test
rorb
push
lcall
xor
addl
add
lock
lods
jo
dec
cld
jne
sub
sub
out
push
dec
mov
mov
or
mov
aas
add
stos
adc
add
in
popf
out
addr16
add
adc
sbb
push
push
jne
mov
ret
lea
into
add
mov
adc
pushl
push
jmp
lock
sub
dec
ret
pop
push
cmp
jb
sbb
mov
inc
movzbl
mov
jbe
inc
add
hlt
movsb
hlt
add
mov
ss
aaa
stos
mov
dec
adc
add
inc
or
or
loop
xchg
mov
dec
push
sub
cmp
ja
xor
cwtl
stos
rorb
or
jbe
mov
mov
adc
push
add
xor
sahf
mov
push
add
push
dec
jl
cmpl
pop
andb
pop
sub
or
lcall
test
add
and
loope
pop
scas
jbe
sbb
cmpsb
stc
cmp
jae
inc
pop
mov
movsb
stos
and
push
mov
dec
stos
lahf
int3
aam
jae
or
sbb
icebp
sub
mov
fldenv
test
ret
jmp
cmp
lock
outsb
add
ret
call
push
add
jae
ss
cmp
in
jg
xor
dec
or
or
inc
sub
in
jmp
push
mov
sub
popa
sbb
rcrl
dec
xchg
inc
ja
pop
jle
shlb
test
dec
std
jbe
loope
sbb
out
sarb
ret
dec
cmp
je
fimull
pushl
cli
push
jne
and
ss
pop
aaa
loopne
and
pop
cmp
je
cmp
out
call
adc
loope
pop
nop
or
mov
mov
jae
inc
jae
add
mov
cs
mulb
je
cli
ss
dec
mov
test
je
cmpsb
insb
mov
or
push
lahf
iret
push
pmaxub
pushf
or
jnp
xor
enter
mov
sbb
and
and
fadds
mov
ja
push
ret
push
mov
lret
inc
or
sub
cmp
mov
insb
test
jbe
mov
sub
add
xchg
add
push
push
imul
push
or
mov
sub
xchg
push
jmp
pusha
cmp
mov
fwait
pop
mov
mov
pop
fcompl
psrlq
push
in
jbe
and
mov
inc
add
jge
inc
sub
pop
mul
and
scas
push
add
xor
jo
inc
add
mov
insb
mov
pop
cmp
pop
ret
popl
pop
xlat
in
push
fs
inc
iret
mov
mov
ss
lcall
add
add
pusha
sti
xor
stc
cmp
push
add
stc
rolb
and
repz
inc
ljmp
fildll
fidivrl
testb
jne
orb
push
das
adc
aas
push
outsl
inc
lods
pop
mov
xor
orl
xchg
in
xchg
into
mov
insb
or
test
jl
pop
faddl
call
pusha
js
pushf
gs
shll
mov
outsb
mov
jl
and
xor
add
hlt
adc
xchg
mov
idivb
adc
push
jle
sbb
call
or
and
sbb
dec
inc
add
push
pushl
clc
or
rorb
dec
add
cmc
cs
stos
fildl
pop
add
imul
xor
popa
dec
in
push
jo
mov
repnz
xor
fsts
add
cmp
outsl
mov
pushl
push
jne
push
inc
orl
mov
cmpl
sbb
stc
sbb
daa
or
outsb
inc
mov
stos
in
xlat
push
insl
clc
stos
test
mov
mov
je
mov
lret
or
andl
dec
or
out
jb
andl
mov
test
and
shl
xchg
shl
test
mov
or
jne
or
jae
mov
negl
jne
inc
pop
gs
xchg
add
mov
lret
mov
loopne,pn
notb
in
push
dec
dec
pusha
or
add
hlt
testl
or
addb
push
je
or
add
sub
adc
xchg
aad
xor
addr16
daa
or
movsb
and
and
fwait
psubusb
test
je
shll
push
in
inc
shrl
aam
fs
mov
cld
cld
dec
nop
xchg
or
adc
insb
jecxz
ss
in
add
push
and
mov
push
mov
push
lock
lds
dec
dec
jge
add
or
loop
pushf
xchg
or
in
adc
or
xor
lret
mov
push
jbe
sbb
cmp
or
gs
hlt
stos
lock
in
mov
cwtl
xlat
mov
mov
inc
adc
mov
lds
je
in
lods
loopne
icebp
scas
push
loopne
adc
icebp
jno
sub
je
dec
cmp
jne
push
jo
icebp
jmp
push
aas
sarl
ror
into
daa
loope
rorl
cmp
add
xor
add
mov
cmp
outsb
lock
and
pop
dec
inc
clc
inc
test
mov
push
xor
pop
mov
loope
inc
rclb
div
adc
inc
sbb
lock
inc
div
scas
adc
sub
adc
mov
shrb
add
or
push
je
je
add
arpl
inc
jecxz
add
dec
ja
ds
inc
lock
call
xchg
cld
mov
fs
stos
sbb
mov
push
adc
sub
sub
nop
xchg
sbb
mov
incl
add
fcomps
clc
test
aaa
cmpl
clc
adcl
aam
lret
outsb
add
call
sub
movsl
pushl
inc
and
gs
jo
test
adc
or
cli
mov
popa
je
ret
jb
aad
push
pusha
push
popa
xor
push
push
mov
push
or
pop
sbb
bound
addl
inc
push
test
aas
push
push
push
dec
rorb
sbb
in
or
sub
fs
les
pop
ret
or
test
repz
push
xchg
loopne
fsubp
push
in
loopne
push
or
inc
imul
hlt
je
cmpl
push
aaa
insl
mov
lock
es
arpl
ficomps
jo
push
inc
adcb
sub
shlb
js
roll
movsl
ljmp
push
rclb
xor
sub
cli
lock
clc
roll
mov
add
inc
jb
inc
or
stos
add
or
xor
or
call
dec
inc
ss
or
cld
js
or
add
loop
jne
subb
jae
rcl
rclb
das
adc
nop
stos
add
xchg
adc
pop
adc
ret
pop
in
call
mov
int
xor
xchg
lods
lods
push
loope
cmpsl
lds
clc
enter
enter
imul
xchg
into
cmpsl
inc
or
leave
or
sti
add
pop
jbe
and
pop
movl
sarb
popa
test
pusha
cmpsb
push
nop
pop
movsb
adc
arpl
pop
stos
leave
insl
test
mov
cmp
and
clc
jmp
inc
inc
xchg
je
les
mov
ljmp
test
push
call
xchg
ffreep
sub
call
fiaddl
sbb
daa
pusha
fists
jmp
sub
pop
pop
push
mov
fucomi
jne
cmpl
cld
jbe
push
dec
mov
xchg
mov
fcoms
hlt
enter
outsb
addl
pop
daa
or
adc
enter
mov
jne
test
adc
int
mov
ja
outsb
push
push
mov
sarb
inc
pop
xlat
lods
xchg
and
sbb
dec
fldt
pop
jne
sbb
and
add
sbb
jmp
push
mov
add
lret
cmp
xchg
int3
shlb
pop
push
mov
inc
je
push
mov
dec
mov
fcoms
fldt
push
rolb
test
xchg
or
popf
and
sbb
sub
ljmp
sub
xor
xor
pushl
bound
sub
jl
mov
add
cmp
add
sbb
add
jb
in
xor
mov
inc
sub
cmp
test
mov
adc
mov
push
je
sbb
lea
in
outsl
xchg
sbb
add
inc
cmp
mov
clc
loop
xor
mov
dec
clc
js
mov
cwtl
nop
mov
lcall
jmp
cwtl
mov
jmp
and
stos
mov
add
or
lods
add
pop
cs
xchg
cmpsb
pop
movsl
sbb
fwait
add
and
out
int3
inc
or
push
mov
sub
movb
ret
loope
fdivrl
pop
aaa
test
sarl
insb
jne
out
push
orb
fisttpll
xchg
scas
leave
inc
in
pop
int3
cs
inc
rorb
in
cmp
mov
xor
inc
push
or
push
jb
push
xchg
sub
cmp
and
push
xchg
cmp
shrb
mov
and
cmpsb
or
rclb
inc
push
cmpsb
adc
pop
push
sub
pop
subl
and
dec
mov
sub
dec
das
jbe
insl
jmp
mov
je
push
rcll
inc
dec
xor
mov
dec
fistps
jl
test
add
push
rorb
mov
add
subb
push
test
call
mov
xchg
ret
cmp
roll
test
adc
enter
ror
pop
cmp
add
mov
push
inc
imul
andb
int
call
shlb
jb
mov
inc
mov
in
xchg
or
and
add
dec
pop
loop
insb
add
cwtl
mov
sub
mov
imul
push
mov
pop
and
adc
and
in
push
addr16
sbb
jno
insb
fchs
lods
cmp
push
enter
push
std
jne
jns
cmp
xchg
popf
loopne
or
dec
pop
je
push
add
scas
mov
popa
push
adc
push
inc
cmp
add
cmp
add
int3
and
jmp
cli
loopne
push
push
shrb
xor
loope
rorb
loop
insl
scas
scas
cld
mov
hlt
rol
adc
daa
mov
out
inc
cmpb
fisttpll
notb
int3
clc
rol
fwait
stos
xchg
pop
xor
and
mov
mov
arpl
jns
dec
jmp
movl
sbb
mov
push
aad
inc
jecxz
arpl
pop
sbb
inc
push
mov
mov
add
cmpsb
shlb
in
aam
test
scas
cmp
iret
pop
movl
mov
add
movsl
lods
outsb
sbb
sbb
stos
add
inc
rcrb
and
pop
sahf
dec
inc
leave
adc
test
pop
jae
inc
test
iret
xchg
stc
lods
leave
jmp
sub
mov
sub
mov
mov
push
or
loopne
xchg
fstpl
test
pop
jl
pop
shrb
jnp
iret
sbb
xlat
mov
in
sti
push
and
cltd
sbb
sti
in
sti
sbb
cmp
in
or
je
das
inc
cmp
add
xor
sahf
cmp
ret
xor
cmp
jbe
cmpsb
adc
add
lcall
mov
data16
add
add
mov
mov
inc
cmp
or
ficomps
cmpb
fucomi
arpl
orb
jmp
paddd
sub
dec
sbb
enter
icebp
add
xor
inc
sbb
jmp
jmp
jnp
or
sbb
inc
xor
mov
das
sub
or
and
movsb
fisttps
jne
push
lea
mov
mov
and
outsb
sbb
xchg
rorb
xchg
test
push
orb
fnstcw
push
sbbb
stos
adc
fsubrp
mov
and
insl
sub
cmp
add
test
xchg
in
sbb
jb
dec
and
inc
cmpsl
lret
shll
dec
push
push
push
adc
je
inc
inc
add
jl
xor
or
stc
stos
hlt
aam
adc
sbb
jno
mov
dec
mov
xchg
aas
shr
pop
sbb
outsb
jbe
inc
es
or
push
outsl
push
in
add
mov
mov
mov
mov
xor
aas
sbb
repnz
jp
scas
dec
or
insl
mov
hlt
sub
xchg
jne
add
out
add
aas
push
mov
sbb
icebp
mov
je
pusha
inc
cmp
push
xor
add
push
pop
ror
and
aaa
mov
stc
bound
lea
adc
test
dec
inc
dec
lea
test
push
push
jo
aas
aam
es
repnz
inc
test
lds
mov
push
sbb
mov
mov
sub
xchg
cli
jl
dec
mov
xchg
fisttpll
push
add
insl
push
fdivrs
push
je
push
push
xchg
testl
pushf
dec
jl
sahf
mov
sbb
xor
movsb
mov
test
xor
pusha
mov
mov
add
pop
push
test
fdivs
loopne
ljmp
clc
jecxz
xlat
lock
pushf
mov
outsb
cmp
orb
addb
aas
jle
or
add
jne
cmp
sbbl
pop
mov
jge
pop
call
mov
add
jne
mov
fwait
aam
sub
push
mov
hlt
xchg
jo
adc
aad
push
adc
aas
inc
mov
mov
pop
sub
rcrb
fistl
sbbl
xchg
push
cld
je
add
adc
push
mov
sbb
or
cld
jbe
ror
int3
insl
inc
xor
pop
xor
add
add
and
bound
pop
rorb
add
push
aam
scas
loope
cmp
mov
jmp
lea
mov
cld
sbb
lock
inc
xor
scas
mov
cmp
cmp
icebp
scas
scas
push
fcomp
aam
dec
or
fmuls
sub
jb
push
fsubrp
inc
fistpll
pop
xor
push
andb
out
or
pop
inc
sbb
cmp
jne
dec
inc
inc
adc
arpl
push
push
in
jmp
cmp
divl
mov
or
notl
test
mov
shll
stos
push
cmp
pop
inc
add
int3
jg
xor
dec
jl
cmpsl
push
test
je
inc
enter
xchg
add
pushf
xchg
and
add
pop
rolb
stos
leave
xor
add
cmp
mov
clc
je
push
mov
fdiv
ficoml
cld
dec
fs
jns
pop
and
jg
jae
daa
jl
cmp
cmpl
jne
pop
pushl
push
jp
jae
push
push
jge
lock
push
add
fildll
sbb
or
cmp
mov
test
pushl
dec
push
mov
in
dec
inc
test
sub
cwtl
pusha
in
sbb
add
push
mov
scas
jl
sub
push
stos
add
cld
or
xor
lods
scas
inc
inc
mov
or
les
and
or
sbb
add
or
push
cmp
das
test
cmpsl
cld
rcrb
imul
loop,pt
popf
cmpsb
mov
scas
test
mov
cmp
jbe
adc
daa
jmp
popa
movl
cmp
jmp
add
add
xor
or
lret
xor
out
dec
sbbb
or
pop
or
jo
inc
add
jl
ficomps
inc
aad
imul
pusha
aaa
xor
fwait
call
push
pushf
cld
cmpb
lods
mov
insb
enter
sbb
in
adc
cmp
in
mov
cmp
pop
add
shrb
lock
push
ret
or
push
and
adc
jns
enter
adc
jb
add
rcrl
pop
inc
jne
sub
outsl
aas
push
cmp
adc
mov
jecxz
sub
add
fs
and
les
pop
push
int
sbb
pop
add
jl
ret
imul
fmull
fildll
fisubs
aam
adc
mov
xor
lea
js
fs
pop
add
lahf
sbbl
sbbl
adc
inc
jbe
popf
push
pop
mov
test
jmp
pop
or
mov
push
adc
hlt
or
mov
sbb
inc
push
mov
dec
sbb
or
in
aas
sbb
mov
push
xor
test
push
fs
shl
rorl
pop
jbe
mov
jo
jno
push
cld
clc
push
call
in
fs
test
xor
jle
je
cltd
cmpsb
outsb
sbb
or
cld
sti
mov
jne
sbb
and
adc
or
loopne
mov
int
pop
ljmp
rolb
push
xor
and
add
sub
je
outsl
adc
add
cld
adc
repnz
pop
push
push
xchg
pop
push
cmp
sub
sub
in
cmp
cmp
jmp
mov
ja
lods
dec
pusha
je
aaa
mov
clc
sbb
sub
pop
lret
mov
bnd
movl
fsubs
scas
cmp
push
loop
jge
mull
sub
in
mov
push
mov
js
and
xchg
fwait
mov
rclw
roll
je
in
sub
and
addl
sub
xchg
mov
call
xor
clc
jno
inc
sbb
sub
mov
aam
movsb
fsts
and
or
je
int3
push
test
push
xlat
fprem
repnz
xor
and
fdivs
mov
cmp
repz
mov
or
add
lock
movsb
cs
test
loopne
mov
adc
lods
aam
adc
xor
leave
incl
mov
nop
hlt
pusha
jecxz
mov
lods
lods
mov
jl
test
jmp
lea
push
test
cmp
nop
inc
andb
add
rcl
inc
data16
sub
lret
mov
sbb
mov
aam
dec
sub
pop
sti
loope
ret
and
or
dec
mov
inc
pushf
xchg
lahf
loopne
sahf
sbb
mov
sub
lock
mov
pop
xor
nop
fidivrs
ficompl
xchg
dec
xor
aaa
fistps
int3
push
mov
clc
inc
add
lcall
andb
aam
aam
test
in
or
or
imul
out
xor
shrb
fs
dec
fcomps
int3
ss
dec
mov
mov
push
push
call
inc
cmp
jo
loope
xchg
je
mov
out
add
push
xor
pop
inc
push
mov
jmp
dec
int3
jo
call
in
ficompl
add
push
push
out
or
ret
nop
push
push
scas
cmpl
lods
adc
add
insb
repnz
or
sbb
stos
pop
nop
aam
push
lods
inc
jmp
sbb
push
cli
dec
sbb
add
push
loope
repz
jp
ja
add
cmp
inc
mov
testb
cs
sahf
jne
testl
inc
jecxz
in
sbb
in
cmp
mov
dec
inc
pop
testl
jno
push
js
sub
jns
sbb
loopne
xor
xor
sbb
clc
les
addb
scas
and
in
pop
xor
cmp
push
inc
jge
out
add
pusha
imul
repz
push
xor
or
cmp
aas
add
xchg
jge
sub
cmp
jge
dec
imull
in
push
push
push
cli
or
xchg
lock
out
inc
push
push
mov
lods
add
jb
dec
push
addb
mov
cs
adc
mov
xor
mov
add
std
aaa
xor
and
push
mov
push
ret
mov
adc
or
pop
push
push
inc
pop
into
cmpsb
scas
ret
dec
andb
pop
mov
pop
das
mov
cmc
sbb
and
pop
cli
push
inc
ret
rcrl
inc
mov
pop
xor
pop
xor
cld
fistpll
push
lock
mov
sub
mov
inc
outsb
or
sbb
mov
in
dec
push
cmp
rorb
add
or
pusha
jnp
xlat
in
sbb
push
pop
cmp
shl
sbb
data16
ja
lcall
pop
push
add
mov
cmpsb
push
cld
je
test
out
shll
push
xor
mov
push
decb
insl
sahf
push
pop
cmp
or
pusha
sbbb
push
push
bound
mov
stos
mov
ja
cmc
call
out
ja
pushf
std
stos
fsubrs
call
adc
push
lock
push
int3
int3
dec
jl
push
shrb
jbe
addb
jb
push
inc
inc
out
imul
pop
shlb
pop
flds
cld
adc
cld
pusha
add
xor
add
sub
mov
lods
or
test
or
sbb
repnz
mov
sbb
pusha
push
adc
mov
cmp
jb
mov
jg
cmp
pop
pushl
rorb
mov
call
mov
bound
push
clc
addl
cwtl
test
out
outsb
pop
ret
or
pop
or
adc
hlt
fcoml
inc
fdivrl
push
push
mov
push
dec
fistpl
inc
out
xchg
or
jo
inc
mov
orb
data16
mov
negl
adc
push
dec
mov
mov
add
xchg
jae
lcall
lods
cmp
int
mov
push
insb
imull
and
aad
cmp
or
and
int3
addb
cli
int3
outsl
adc
out
sub
fmull
fidivs
cmpsl
popf
les
int3
cmp
push
stos
in
scas
jge
push
stc
mov
out
add
loopne
add
lea
add
rcrb
gs
add
mov
push
mov
inc
dec
sbb
les
mov
shlb
fcomps
test
mov
pop
imul
aaa
lock
mov
xchg
outsb
xor
enter
dec
xor
pusha
lea
add
push
push
push
push
in
xchg
fs
cltd
push
adc
rorl
mov
aaa
das
testb
call
cmp
es
jne
fcomi
insl
sarl
adc
jmp
adc
add
mov
ror
mov
push
sbb
push
cld
clc
adc
cltd
dec
sti
js
int
fdivs
mov
sub
ljmp
or
xor
inc
lcall
pop
add
fbld
in
sub
push
push
cmp
je
inc
mov
sbb
and
orb
add
sbb
xchg
mov
push
cmp
inc
fldcw
mov
adc
mov
dec
adc
lret
jg
mov
orb
xchg
rcll
mov
les
adc
adc
xor
pop
adc
adc
and
andb
sub
sub
jne
push
pop
cmp
loop
ffree
cmpsb
cmp
adc
sahf
cmp
xchg
xlat
push
add
mov
movsb
pop
ret
dec
adc
and
inc
pop
icebp
fs
fs
pop
adc
testl
sub
icebp
push
pusha
or
mov
icebp
cld
js
pop
sbb
add
add
push
push
sub
pop
push
jmp
and
pushf
xchg
or
inc
cmp
add
gs
cmc
pop
int3
mov
or
add
pushf
push
jnp
mov
cmp
adc
xor
mov
sub
and
jne
jge
add
call
aam
fwait
cmp
das
aad
lea
mov
mov
jp
jp
push
mov
push
ffree
ljmp
cltd
sub
sub
sub
add
or
scas
sub
les
sub
out
dec
or
fwait
cld
ret
lock
in
pop
add
icebp
pop
pop
imul
nop
out
cmp
stos
pop
jo
push
daa
ja
mov
out
fldpi
js
cmp
hlt
pop
sub
inc
je
call
add
in
sbb
push
or
jmp
sub
cmp
or
cmp
std
in
test
xchg
lea
ds
sbb
sbb
aas
mov
into
fwait
push
and
push
dec
jge
out
or
push
mov
dec
and
hlt
cmp
jmp
fnstenv
ret
shr
mov
inc
dec
jne
pop
jmp
not
pop
ret
xor
push
adc
xlat
hlt
or
ljmp
mov
jne
jle
inc
push
sub
test
gs
aas
in
es
push
push
push
sbb
inc
and
scas
fstp
dec
dec
add
mov
jecxz
jl
ds
cmc
cmp
and
mov
insb
ss
lods
adc
push
int
into
and
dec
rorb
int
mov
shrl
rorb
and
cmp
fldcw
daa
sub
pop
fsubrs
fstps
ss
insl
mov
sub
sbb
pmaxub
fldcw
loopne
loope
loop
mov
insb
lahf
jecxz
adc
in
out
out
ss
int
call
and
fwait
int
imul
dec
lock
adc
inc
repz
hlt
aaa
cmc
sbb
testb
clc
sub
cli
push
fstl
ffree
sti
dec
cld
in
add
add
push
jecxz
lret
mov
jb
dec
std
mull
sbb
call
mov
cmp
jb
pop
adc
push
lods
jge
jne
sti
out
aaa
push
mov
mov
inc
mov
sbb
idivb
cli
lret
enter
int3
test
call
int3
mov
fisttps
mov
out
out
xor
push
add
add
and
inc
mov
addl
mov
mov
jb
jo
jge
mov
data16
in
aaa
add
jbe
inc
and
cmp
adc
and
mov
mov
xor
mov
enter
or
add
lods
add
mov
mov
iret
popf
xor
inc
cmp
cmp
jnp
or
push
mov
mov
clc
icebp
fsubs
and
cmp
mov
dec
pop
pop
mov
in
xor
cwtl
enter
test
sbbl
inc
jo
scas
lea
jo
adcb
mov
push
and
xor
mov
aas
jge
xchg
lea
dec
loopne
jl
jnp
jns
test
sub
pop
lea
and
mov
adc
xor
or
sbb
dec
mov
push
enter
mov
test
xlat
das
bound
fwait
andb
add
add
lock
cli
insb
popf
xor
call
inc
push
outsl
cld
or
xchg
outsl
mov
mov
pop
dec
or
scas
jno
sbb
mulb
and
cmpsl
adcl
xchg
gs
dec
adc
mov
jecxz
dec
mov
sub
and
mov
insb
fildll
push
xchg
daa
pop
mov
sbb
add
nop
inc
push
xchg
fisttps
mov
xchg
xor
xchg
dec
inc
mov
sahf
clc
pop
inc
pop
mov
xlat
aad
fs
in
adc
sbb
xchg
lcall
dec
cs
cmp
mov
shll
jmp
adc
dec
inc
dec
loopne
pop
jmp
pusha
enter
mov
push
add
lret
inc
loope
jns
push
sbb
sub
cwtl
jg
adc
sbb
loopne
orl
push
jbe
movsl
outsl
cmp
rclb
xchg
push
shlb
sbb
xchg
fsubl
adcb
sarb
sub
add
mov
popa
dec
and
rolb
add
ja
or
add
mov
ss
incl
add
mov
stc
pop
inc
pop
mov
cmp
int
lods
sbb
loopne
xchg
insb
fists
push
shlb
imul
and
clc
jne
xor
imul
cvttps2pi
cld
adc
inc
and
pop
cmpsb
movsl
or
imul
add
loopne
and
nop
jbe
bound
out
or
cmp
push
mov
add
adc
sbb
and
lcall
rcll
push
cmp
mov
movsb
lret
jae
sbb
or
push
or
and
jno
rclb
xlat
cmp
mov
sbb
js
jge
aas
or
aam
mov
fcomps
xchg
clc
loopne
dec
loopne
in
xchg
clc
push
daa
mov
mov
test
cltd
add
dec
fs
adc
cmpsl
imul
cld
adc
mov
mov
xor
jl
cwtl
xorb
mov
fs
cld
movsb
fbstp
into
lods
push
jno
xor
imul
pop
inc
pop
jb
addb
mov
push
movsl
push
adc
pusha
fwait
jge
push
dec
jne
pop
les
dec
negb
pusha
and
dec
inc
adc
dec
das
call
movsb
add
inc
mov
pop
sub
push
int3
cwtl
daa
and
ret
add
imul
mov
js
loope
cld
dec
hlt
loopne
pop
pop
jo
loopne
dec
mov
aam
loopne
sti
hlt
push
cmp
aad
mov
cmp
rclb
jmp
xlat
sub
je
add
fnstcw
push
inc
mov
add
push
pop
das
rorb
add
hlt
arpl
cwtl
icebp
push
test
push
and
enter
call
aam
adc
lahf
xchg
cltd
subl
insb
clc
icebp
mov
cltd
push
push
notl
jl
fidivs
sbb
xchg
loopne
sbb
pop
in
rol
rolb
pop
xchg
nop
adc
mov
outsb
mov
jbe
sbb
or
xchg
jne
xchg
add
cmp
sbb
outsb
insb
std
movl
in
xchg
adcb
ljmp
inc
loop
inc
jbe
mov
and
jle
sbbb
clc
aaa
pop
hlt
jb
testl
add
xor
test
je
ja
cmpsb
push
out
xlat
lcall
popf
dec
or
out
popf
jl
sbb
jbe
inc
rcr
push
push
out
movsl
push
pusha
jb
movsb
cwtl
jl
mov
rcrb
int3
scas
xor
aam
jns
rorb
popf
jne
sbb
test
add
sub
imul
addb
into
push
push
mov
ljmp
pop
push
push
dec
fsubr
aas
adc
dec
mov
mov
inc
ffreep
addr16
nop
in
inc
je
jo
sbb
mov
imul
jmp
push
cmp
xchg
nop
cld
adc
cmp
and
lahf
add
neg
sbb
and
add
mov
stc
jne
push
mov
cli
xor
dec
mov
test
jmp
pop
xchg
mov
stos
dec
pop
sub
adc
adc
pop
lock
adc
enter
ror
jmp
pop
add
push
iret
sarl
je
out
adc
clc
push
aaa
and
sahf
incl
lcall
ret
mov
inc
xchg
push
xchg
push
fildl
add
and
mov
inc
xchg
dec
aad
and
push
int
test
inc
push
pop
push
addr16
and
insl
mov
mov
cmp
sahf
subb
pop
or
ret
out
pusha
xchg
inc
adc
and
inc
enter
mov
xor
loopne
mov
in
jb
pop
cli
ss
mov
nop
lahf
mov
loopne
incl
and
lahf
sub
jmp
dec
jmp
rolb
outsl
movsl
push
mov
xchg
cmpsb
adc
mov
or
sub
inc
push
or
push
ss
test
decl
jae
mov
and
xchg
call
adc
inc
mov
dec
jo
pop
mov
dec
sbb
mov
push
adc
test
sub
mov
mov
sbb
inc
cmp
imul
pop
xor
les
shlb
cli
aam
std
xor
jne
mov
push
mov
adcb
add
aam
fsubl
pop
sub
adc
add
jmp
or
out
cmpb
je
lea
imul
jno
sbb
mov
jae
pushf
xchg
rcrl
test
sbb
cld
add
dec
fisttps
mov
cmp
ja
mov
shr
lock
mov
mov
cld
xchg
sbb
jge
add
and
hlt
loop
dec
push
loop
rolb
adc
sahf
je
push
jmp
fcoml
les
nop
push
inc
aaa
sub
jne
push
sarb
mov
sub
push
mov
pop
inc
adc
lds
sbb
int
rcl
test
lock
adc
push
adc
ret
push
lods
mov
shll
pop
push
or
add
and
adc
sub
andb
out
jmp
push
push
push
shl
push
es
sar
shlb
add
call
dec
push
addb
jmp
lret
adc
xor
inc
xor
mov
push
and
in
mov
sub
sbb
test
sub
push
push
jne
mov
and
mov
jle
lock
rcr
sarl
sub
push
push
std
mov
sbb
pop
jg
cmp
and
xor
pop
lock
push
or
mov
add
push
jl
ret
jnp
insl
push
jg
pop
dec
loope
incb
sar
adc
sbb
sbb
mov
shr
sub
fidivl
divb
out
mov
sbb
mov
inc
and
or
mov
je
pusha
push
hlt
cmp
pop
cltd
idiv
test
outsb
movb
inc
jmp
mov
ja
mov
or
jl
icebp
jae
andb
dec
ret
mov
stos
bswap
call
sub
and
stc
mov
movsb
inc
ret
mov
lret
in
nop
mov
jge
inc
add
sbb
inc
mov
clc
aam
insl
cli
lock
push
clc
call
xor
push
jmp
aam
add
popa
inc
fldl
jge
pop
lcall
push
sbb
and
inc
sbb
lock
push
xchg
hlt
xchg
clc
cld
or
fdivs
aas
or
mov
setl
xor
add
hlt
push
repnz
movsb
lock
dec
call
xor
push
mov
test
lret
cmp
arpl
xor
scas
loopne
pusha
loop
pop
xor
or
xor
aas
ja
pushf
inc
popl
std
sbb
int3
push
or
and
xor
loopne
mov
movsb
xchg
scas
fldenv
out
cmp
mov
sub
xor
orb
fimull
imul
sub
test
or
inc
repz
sahf
push
xchg
or
jle
sbb
adc
cs
mov
cld
jo
push
rcrl
adcl
iret
daa
cmp
mov
je
push
shrb
adc
out
mov
cld
mov
cmp
jne
dec
pushf
outsl
sbb
stc
dec
pop
mov
icebp
popa
inc
mov
adc
sbb
and
imul
push
pusha
sti
and
test
push
sbb
mov
movsb
std
mov
inc
add
dec
mov
test
test
jns
not
andl
sub
pushw
and
mov
js
mov
shll
mov
mov
movl
add
mov
jo
or
std
pushf
add
cmpsb
shlb
cmpsl
xchg
hlt
popa
inc
sti
mov
cmp
pop
pop
xor
outsb
hlt
push
pop
mov
in
push
sub
lcall
hlt
push
fs
cltd
mov
pop
dec
sub
outsb
add
cmpsb
dec
and
cmp
push
test
lds
das
dec
xor
jnp
lods
xchg
fadds
mov
ret
fwait
and
mov
push
je
idivb
adc
mov
adc
add
je
sub
int3
mov
push
ret
adc
daa
push
movsb
xchg
pusha
xor
clc
xchg
cmp
ss
dec
repz
sbb
xchg
and
and
xor
je
xchg
and
lock
cmpsb
or
sub
mov
cmpsb
sub
js
daa
push
or
adc
test
add
inc
stc
icebp
and
icebp
insl
sbb
rcrb
add
clc
add
out
sub
andb
mov
fcmovbe
pushf
out
xchg
icebp
push
mov
sub
shlb
and
push
insb
stos
mov
or
sbb
in
jnp
test
xor
js
je
int3
test
js
cs
inc
cmp
inc
mov
push
push
mov
sbb
sbb
adc
jne
mov
xor
cmpl
add
xchg
pushf
fs
or
push
and
xor
mov
mov
pop
push
jmp
push
mov
jg
rcrb
xor
inc
les
and
mov
pop
das
ret
loopne
out
pop
mov
fs
push
std
fsubrl
and
add
sbb
loopne
out
dec
faddl
xor
mov
fldt
push
cmp
dec
lods
fucom
shr
inc
push
push
inc
push
cmp
pop
cmp
iret
out
test
pop
dec
mov
dec
and
mov
push
push
sahf
jle
adc
cmpsb
negl
call
xor
mov
inc
cmp
mov
inc
cld
pop
or
cmpw
jne
add
fldt
sub
sbb
add
clc
sbb
and
mov
xchg
mov
pop
sbb
add
add
or
adc
mov
sbb
jbe
xor
addr16
pop
negb
ret
add
jl
and
jbe
mov
mov
les
addl
xchg
inc
dec
rcr
push
or
add
dec
clc
sbb
int
and
cmp
sbb
test
sub
fcoms
adc
lock
jmp
push
hlt
lea
cld
in
cltd
mov
movsl
jmp
xor
xor
lock
int3
mov
jmp
sub
push
mov
scas
mov
jg
rcrl
stos
sub
jo
sub
mov
in
dec
rcr
cli
pop
cmpb
jne
icebp
loop
aad
rcll
int3
in
test
fsubrl
and
hlt
push
xchg
rorl
cmpsb
mov
movsb
cmp
enter
jmp
mov
movb
inc
cmp
jb
xchg
pop
imul
dec
cli
test
fsub
push
and
test
loopne
mov
add
shr
and
mov
jecxz
mov
mov
cli
mov
ds
and
sar
cs
xor
add
cmp
dec
jecxz
or
mov
xor
mov
pop
lret
in
scas
push
mov
jne
cmp
add
sub
rclb
ss
pop
xor
cmp
mov
push
cmp
xor
fsub
fcoms
fisttpll
js
push
call
xchg
and
cmp
jne
fsubr
add
push
int3
xlat
mov
fdiv
aad
gs
xchg
push
sbb
mov
sub
lret
push
int
clts
sbb
xchg
sahf
sbb
xor
xlat
jmp
jle
sub
pop
cld
cmp
andb
or
cmp
icebp
or
ret
dec
xchg
push
mov
addr16
lock
or
pusha
sbb
inc
inc
inc
cmpb
or
adc
jmp
add
pop
test
push
lea
sbb
cwtl
push
or
stos
and
mov
adc
mov
push
pop
push
cmp
mov
das
push
mov
mov
loopne
jno
divb
inc
jne
sbb
filds
sbb
pop
and
bnd
pop
sbb
hlt
js
lret
in
push
bound
mov
pop
dec
addl
call
mov
xor
loop
cmp
in
inc
dec
jbe
cmpl
cli
push
jp
dec
mov
test
mov
mov
fbstp
jne
cmp
scas
cmpb
jbe
cmpsb
push
adc
incl
jb
arpl
int3
jecxz
fistpl
fcmovb
and
sbb
or
lahf
lretw
mov
xchg
add
xor
add
push
xor
xor
sub
bnd
inc
jmp
sbb
or
cmp
dec
loopne
lock
xor
js
mov
jmp
testb
or
dec
push
je
cld
call
hlt
push
add
sub
adc
push
leave
or
les
loope
push
add
fcmovb
mov
mov
andb
pop
mov
stc
dec
or
rolb
test
loope
cli
mov
ljmp
mov
pop
inc
push
xchg
fistpll
sahf
aad
int3
xchg
repnz
addr16
fdivrl
mov
xorl
jb
je
imul
inc
imul
and
inc
pop
jle
test
mov
out
add
fs
jmp
dec
in
int3
lret
aaa
push
sbb
cmp
adc
test
jae
add
pop
cmp
xchg
cmc
repnz
add
mov
cmpsl
jnp
aaa
call
dec
dec
add
add
cld
lock
mov
data16
or
fdivl
mov
rclb
sti
xchg
cmp
mov
xchg
into
enter
push
xchg
sub
inc
lret
dec
rorb
iret
sti
xorl
popf
dec
std
lret
mov
int3
mov
mov
rclb
andl
jl
push
or
push
movsl
inc
add
cmpsl
jne
jp
call
je
clc
clc
or
fs
push
sbb
call
xchg
aam
xchg
mov
imul
fldenv
in
xor
hlt
rolb
cld
aaa
clc
sarb
xchg
das
xor
cmp
jbe
cmp
pop
je
inc
cmp
jb
push
jne
cmp
jae
mov
mov
jle
push
push
push
dec
ljmp
out
add
and
jg
mov
inc
cmp
jbe
cmp
push
add
mov
jnp
into
push
inc
dec
dec
call
mov
imul
in
inc
imul
sahf
das
and
nop
sbb
inc
push
push
dec
sbb
scas
xor
inc
adc
add
in
repnz
jmp
loopne
or
dec
adc
add
es
push
push
push
inc
rorb
aad
mov
xor
je
xor
pop
insb
aaa
jp
inc
and
push
lcall
jo
pop
movsw
aad
jmp
mov
stc
or
cmp
push
mov
sub
cmpsb
mov
popf
sbb
jmp
sbbl
movsl
movsl
mov
xor
ret
or
push
lock
mov
jae
lock
dec
adc
jnp
cmpsb
in
fistpl
imul
mov
notl
inc
jno
sub
xchg
sbb
mov
mov
dec
enter
call
popf
fisttpl
push
mov
lldt
xchg
pop
adc
inc
mov
push
pop
push
push
pop
mov
adc
mov
into
ret
cli
jne
inc
add
cld
mov
pop
repnz
and
and
jmp
and
enter
jmp
imul
clc
out
push
push
mov
xchg
inc
cmp
hlt
loopne
xor
hlt
lea
pushf
movsl
pusha
or
push
shrl
or
xchg
cmp
lds
sbb
mov
adc
dec
out
and
or
inc
pushl
sbb
pop
push
and
sub
cli
leave
ret
xor
mov
test
push
or
xorl
stos
or
adc
adc
pusha
adc
loopne
adc
push
arpl
pusha
sub
popa
addr16
pop
mov
cmc
adc
rcr
mov
leave
pop
pop
xor
cmpl
xor
in
adc
add
fisttpl
inc
push
mov
mov
lcall
mov
orb
mov
sbb
sbb
lods
push
sahf
pop
jmp
cli
mov
mov
mov
ljmp
push
sbb
in
cmp
das
jae
xor
stos
fmull
popf
fmuls
push
inc
and
mov
and
push
cwtl
adc
push
scas
out
mov
fldt
adc
mov
jg
sarl
insb
mov
clc
jne
lea
hlt
movl
test
outsl
xchg
test
popa
fdivr
shr
mov
cmp
jae
mov
loope
inc
push
outsb
jbe
mov
adc
xchg
gs
icebp
out
and
adc
lea
out
pop
lcall
pop
cmpsl
adc
shrl
rolb
mov
loope
aas
nopl
ret
mov
lock
inc
lea
shl
cmp
add
dec
loopne
lcall
xor
xchg
mov
aas
xchg
test
arpl
jo
pop
xor
adc
mov
sbb
imul
mov
ss
pusha
lock
out
or
xchg
jg
pop
pop
or
movsb
or
je
xchg
add
popa
or
das
dec
mov
inc
cmp
adc
sub
incb
push
mov
sbb
shlb
jmp
add
sahf
mov
push
dec
sbb
mov
decb
js
repz
mov
jge
lods
mov
lret
mov
push
out
sub
cltd
imul
ret
xchg
test
lret
push
std
xchg
nop
sub
inc
and
adc
test
xchg
imull
lock
mov
push
push
cmp
mov
dec
mov
sbb
pop
adc
adc
inc
ret
xchg
pop
jmp
or
push
jle
pop
push
imul
dec
mov
cmp
ficompl
mov
xor
or
push
aam
test
ds
mov
jmp
in
cwtl
pop
mov
push
inc
inc
xchg
js
in
inc
mov
push
es
jbe
enter
mov
loopne
xchg
or
iret
jne
cmp
rorl
jmp
sbb
jne
mov
pop
add
mov
inc
sahf
mov
xchg
jae
mov
and
xor
mov
sbb
cmp
or
sbb
push
test
push
lock
daa
mov
and
cmpb
push
psrad
repz
push
inc
mov
sbb
or
jl
jle
adc
xchg
jae
cmpb
jne
adc
xor
idivb
jne
inc
movb
jmp
xor
les
pop
dec
fstps
lods
inc
add
fwait
dec
push
cmp
mov
in
or
shrb
daa
jns
sbb
ja
daa
mov
popa
jge
mov
je
adc
add
jg
mov
sbb
add
or
xchg
jle
cmp
pop
popa
mov
je
and
push
mov
in
xor
rcl
mov
pop
dec
les
cld
shrb
mov
js
ret
pop
jmp
pushf
add
fcomps
add
push
int
sti
add
fstpl
xor
add
lea
lcall
jge
or
adc
cmp
push
arpl
loopne
cmpsl
pop
aam
enter
movsl
mov
inc
shrl
or
mov
xor
pop
sub
sbb
in
cmp
fcomi
mov
movsl
xor
sbb
jb
push
add
xchg
add
jmp
adcl
in
mov
add
ljmp
inc
into
or
js
inc
jno
inc
clc
mov
test
stos
mov
or
mov
insl
stos
adc
shlb
outsl
xchg
test
push
push
imul
inc
sti
jg
movb
push
xchg
sbb
dec
dec
and
inc
or
add
xor
adc
test
int
push
cmp
call
call
cmpb
je
dec
jne
inc
push
loope
dec
xchg
sub
sbb
sub
xchg
push
js
imul
loopne
adc
js
and
es
cmp
add
popf
cmp
pop
cld
cmpsb
aam
xor
rcrb
cmp
xchg
mov
loop
cltd
dec
mov
mov
mov
or
ja
out
mov
push
dec
repnz
push
ficomps
out
ljmp
out
and
popf
adc
test
cmp
mov
loop
movsb
jns
loope
movsb
out
jo,pn
push
push
adc
sub
ds
hlt
subl
mov
push
adc
sahf
mov
add
popa
jge
out
fstl
fiaddl
and
adc
pusha
inc
add
fdivrs
push
test
fwait
jbe
ss
inc
or
and
mov
jb
jo
push
xor
scas
jae
mov
push
icebp
jo
and
push
cld
or
push
mov
xchg
out
div
pop
jae
fstpt
shrl
cwtl
and
xchg
sbb
push
popa
lock
or
mov
jmp
fstpt
sbb
push
loope
dec
outsb
loope
xlat
mov
add
mov
sub
and
popa
xor
pop
rcrb
cld
sub
popf
pop
jmp
pop
aaa
je
inc
xor
int3
sub
cmp
outsl
pop
push
or
ret
add
lock
cmp
push
cmp
adc
add
or
dec
or
insb
mov
cld
sti
fldl
jge
nop
or
push
lahf
or
push
es
loope
ss
pop
lcall
jne
int3
push
cmp
jg
xor
push
cmpb
jne
movb
push
inc
pusha
or
jns
adc
dec
cltd
aad
fisubl
pop
inc
sbb
and
sub
mov
inc
shll
sub
pop
or
add
push
pop
data16
and
and
sbb
push
imul
cmp
pop
add
push
xchg
push
inc
jns
or
pop
das
adc
sub
adc
push
ret
mov
xor
popf
inc
ret
cmp
rep
lock
ret
mov
pop
movl
mov
xor
fdivs
dec
inc
cmp
insl
enter
cs
mov
hlt
inc
jne
icebp
pop
add
nop
mov
in
pop
fs
mov
int
shrb
movsb
in
push
cmp
stos
insb
add
and
jge
shrl
and
fsubr
cmpsl
subl
cmc
movb
mov
mov
movsb
or
lahf
xchg
mov
sbb
sbb
fistpll
sbb
shl
adc
mov
in
xchg
dec
lods
and
sbb
mov
sbb
sahf
mov
pushf
fs
data16
add
push
in
lret
test
and
sahf
mov
dec
add
mov
sbb
insb
imul
mov
icebp
lahf
add
dec
sub
jo
mov
cmp
jbe
sbb
loopne
repnz
sbb
jne
shr
push
inc
mov
cmpsl
and
movsb
dec
cs
in
jne
mov
inc
jmp
aad
test
lock
test
mov
add
mov
adc
popa
jno
add
loope
enter
mov
add
and
mov
cli
add
lock
sub
inc
sub
and
lcall
add
dec
xchg
jns
xor
insl
dec
adc
cmp
jmp
and
inc
mov
cmp
mov
jg
push
divb
inc
jmp
mov
loopne
mov
or
cmpl
sahf
ja
mov
sbb
xchg
adc
cmp
add
and
fmull
scas
pop
lock
movsl
dec
mov
mov
jmp
mov
add
icebp
add
stos
mov
dec
aad
adc
inc
shlb
or
xchg
andl
mov
inc
stos
je
dec
jecxz
adc
mov
and
push
sub
inc
aam
popa
push
adc
add
ss
pop
push
jae
add
add
arpl
push
sub
mov
sahf
xchg
aam
and
add
movswl
mov
enter
jo
test
jns
push
aaa
jge,pn
cld
pop
pop
jle
cmp
jle
dec
add
adc
test
push
test
clc
push
push
jle
cs
nop
popa
pop
in
cmp
add
nop
pop
pop
add
mov
pop
xchg
lret
scas
push
ds
lahf
decl
nop
andb
and
cmp
cmc
in
rcll
sbb
jl
imul
fsubs
loope
mov
test
xor
pop
test
or
je
add
jne
mov
xor
pop
into
rolb
pop
jl
lret
subl
cmpl
xor
push
add
pop
add
rol
inc
push
stos
sub
mov
ds
pushf
aad
addr16
ret
sbb
push
clc
jl
mov
pop
cld
sbb
xor
imul
cs
sbb
shrb
in
and
adc
mov
add
push
in
add
lods
rcrb
dec
cmp
je
je
imul
push
cmp
pop
xor
sub
mov
and
dec
sbb
test
xchg
push
adc
lods
or
fchs
std
xorb
leave
mov
insl
sub
mov
jmp
fldenv
sbb
adc
pop
fisubrl
sbbb
aaa
test
add
imul
movsb
push
les
jl
repnz
xor
dec
insb
push
xchg
and
test
filds
insb
xchg
imul
in
movsb
insb
les
imul
addb
sbb
adc
in
xchg
push
add
je
dec
nop
inc
mov
push
aas
iret
out
nop
imul
jmp
push
xchg
faddl
test
lret
add
jo
lods
test
cwtl
xor
cmp
mov
and
cmpsb
mov
imul
sbb
and
pusha
shlb
pop
xor
push
mov
fsub
mov
shrb
and
call
jle
fsubrl
add
call
inc
imul
rorb
lret
enter
or
mov
mov
fsub
lds
mov
adc
loopne
jb
lret
push
pop
rorb
mov
pop
cs
cmp
enter
xor
and
and
push
cmp
inc
gs
incl
mov
test
sbb
push
inc
inc
cmp
int
cld
imul
sub
cmp
mov
and
ror
sarb
sarl
in
imul
cmp
inc
mov
insb
mov
mov
pushf
mov
gs
mov
and
scas
je
sbb
sbb
xor
outsl
in
dec
hlt
inc
sbb
inc
and
sub
in
stc
addl
or
or
pop
push
adc
mov
and
sbb
imul
mov
sbb
in
mov
aaa
repnz
cwtl
les
and
enter
js
dec
lods
push
cs
insb
pop
xor
inc
cmp
add
cwtl
pop
add
adc
add
mov
stc
cs
lret
leave
nop
mov
in
mov
movsl
xor
in
pop
cs
lea
lock
jns
inc
insb
jno
stos
mov
push
imul
leave
inc
stos
dec
and
mov
leave
mov
cwtl
or
bnd
imul
push
push
jns
rclb
fwait
push
jle
xchg
pop
pop
cmp
outsl
in
call
mov
xchg
xchg
jo
enter
pop
inc
cs
add
cld
push
lods
mov
fisttps
add
push
cmp
jns
mov
enter
sub
cmp
mov
testl
xor
ret
fildll
loop
rcll
movsl
cltd
mov
orl
inc
stos
xchg
std
aas
je
push
xchg
add
test
leave
sbb
and
mov
insb
and
mov
std
xchg
movzwl
in
lds
hlt
pop
pop
inc
mov
inc
imul
sbb
je
cld
test
bnd
sub
push
cs
enter
pop
test
daa
stos
jo
xchg
stc
fs
adc
push
pushf
add
inc
mov
imul
push
pop
enter
adc
lcall
cld
fs
xchg
mov
imul
imul
lock
mov
xor
pop
mov
cld
clc
sub
jo
and
push
cmp
sbb
adc
setle
add
sti
dec
in
dec
mov
movsb
sti
push
prefetcht1
xchg
or
jl
sti
mov
popa
xor
push
cs
lods
mov
imul
pushf
pop
adc
test
jl
fs
and
and
and
push
jns
or
cli
dec
dec
cmp
sbb
pop
lret
dec
mov
add
sbb
xor
fistl
sub
xor
in
pslld
or
or
and
adc
addr16
inc
rol
add
xchg
xchg
mov
int3
fsubs
mov
xchg
xchg
mov
xchg
xchg
mov
xchg
xchg
mov
xchg
xchg
mov
xchg
xchg
mov
in
mov
and
in
sub
or
pushf
in
sub
adc
add
xchg
sbb
or
xchg
dec
mov
pop
jne
pop
adc
xor
adc
mov
lret
push
dec
fiadds
fisubrl
jno
je
push
xchg
mov
mov
push
pop
mov
xchg
lea
push
push
filds
sub
and
outsb
aaa
adc
pop
push
xor
cld
and
adc
and
adc
fnstenv
mov
push
add
je
pusha
xor
loop
das
rolb
out
mov
out
xor
sub
shlb
mov
jo
mov
cmpsb
ret
mov
adc
cmpb
cli
or
or
xor
enter
rolb
and
sbb
xchg
lock
lret
add
sbb
in
cli
mov
mov
sarb
fs
and
sti
jg
pop
test
lea
jbe
stos
lea
cmpb
cmp
lock
mov
leave
mov
dec
and
mov
dec
cmp
jle
pop
push
pop
or
xchg
jle
adc
incl
xchg
mov
jl
cmp
jg
es
test
add
stc
or
ja
inc
sub
aam
hlt
mov
icebp
sub
iret
adc
sahf
sub
jmp
sbbb
lcall
pusha
repz
or
pop
mov
mov
add
sub
dec
jle
mov
add
mov
fildll
adc
xchg
lea
cltd
adc
push
xor
pop
mov
jbe
shll
dec
push
jg
lock
dec
popa
lock
push
push
dec
pop
aam
jmp
insb
cmpb
push
sub
adc
lahf
cmp
or
mov
cmp
jg
or
pop
sub
add
cmp
lea
ja
les
sub
je,pn
and
or
addr16
push
push
mov
add
rclb
inc
ret
les
or
sbb
and
sub
sbb
add
fcomps
push
sub
js
decl
loopne
mov
fldcw
cmp
je
js
fstps
jl
add
incl
cmp
lods
popa
or
pushf
add
fcoms
outsb
add
inc
es
jmp
push
adc
and
or
cmpsb
inc
adc
mov
in
incb
or
mov
insb
jae
aad
pop
jno
add
pusha
pop
sub
std
je
jg
cmp
jecxz
shl
push
mov
out
jl
lods
adc
pop
add
push
das
mov
lea
imul
in
jo
popa
pop
fstl
je
add
fadds
xor
ret
push
inc
sub
or
adc
cmova
push
es
jmp
mov
jb
pushf
cmp
sub
xchg
in
push
cmp
dec
ljmp
int3
lahf
xchg
mov
jbe
popa
and
xchg
mov
sub
lds
sbb
in
push
test
push
push
jge
mov
stos
add
dec
dec
out
aam
jo
into
and
pop
inc
mov
lods
in
lret
inc
inc
sub
xor
or
adcb
into
fucomi
es
fidivl
insb
and
add
jle
test
adc
test
dec
imul
push
pop
inc
jmp
lcall
stc
idivl
mov
shlb
cltd
aam
ss
mov
rclb
in
clc
push
push
jmp
push
xchg
mov
cmp
adc
cmpsl
test
call
lods
mov
or
test
adcl
add
shlb
stos
call
jmp
pop
fdivs
xchg
cmp
pop
ret
adc
dec
loopne
imul
lcall
jle
or
jg
push
nop
add
xor
outsb
jl
mov
mov
adc
push
dec
xchg
jecxz
adc
mov
iret
fisttpl
pop
lea
js
push
mov
jbe
ja
pusha
sti
add
and
jle
sub
cmp
js
mov
add
push
push
je
or
test
iret
arpl
pop
lds
in
push
and
or
scas
orl
lods
sbb
clc
sbb
mov
movsb
pushf
test
jmp
pop
mov
or
push
push
clc
pop
popa
ja
je
lea
adc
psubq
pusha
aad
and
cmp
push
push
sub
lods
cmp
push
sub
repz
and
sbb
pop
adc
mov
push
test
aad
adcb
pop
adc
jnp
out
sbb
loop
fsubr
push
decb
sahf
negl
fildl
lock
out
jns
add
add
add
or
add
mov
mov
mov
lock
push
nop
xlat
add
pop
dec
or
imul
fldl2t
mov
push
dec
rorl
or
cmp
scas
sbb
sub
jbe
mov
or
js
cld
cmpsb
imul
push
js
dec
les
in
push
or
sarb
pop
xor
or
or
cld
or
or
or
or
or
xchg
mov
pushl
pop
mov
cld
pop
or
pop
lcall
push
loope
and
jl
xor
lds
pop
fcomps
adc
sbb
fs
inc
mov
cld
dec
movsb
cmovs
push
push
add
orb
inc
rolb
cmp
push
nop
inc
insb
jne
scas
sub
pop
mov
stos
sbb
jbe
call
add
daa
sbb
push
dec
cltd
aam
sbb
dec
push
arpl
jl
mov
and
inc
add
in
cmp
ret
js
int
dec
cmp
add
push
pop
push
pop
adc
cmp
adc
xorb
xlat
testb
loope
mov
jne
orb
in
into
shll
pushl
or
mov
or
out
pop
or
aas
clc
adc
out
or
outsb
sbb
nop
sub
mov
xchg
stc
mov
and
and
test
dec
and
or
and
jno
push
and
addb
and
add
cmp
rclb
addb
lea
jae
inc
rcrb
push
push
xor
push
or
xchg
jp
adc
lock
clc
mov
mov
adc
push
aam
or
mov
cmc
lock
pop
loope
mov
jmp
push
fisttpll
mov
push
hlt
cmp
push
cmp
xor
push
xor
loopne
call
insl
pop
rolb
ret
jb
inc
jo
inc
stos
add
add
jno
enter
pusha
imul
add
in
push
rcl
lcall
lods
shlb
push
mov
out
movsb
icebp
push
bound
xchg
push
adc
movsb
jmp
xor
lock
pop
jne
cmp
cmp
lret
or
pop
lret
pop
cmp
cmp
sahf
add
test
dec
and
push
mov
insl
sbb
in
xlat
push
std
dec
sbb
jae
pusha
and
cmp
dec
and
jge
test
fcoml
xor
js
clc
shlb
and
faddl
adc
ret
jbe
test
xchg
and
rcl
popf
dec
jp
enter
sub
lret
or
repz
push
fwait
test
sub
xor
xor
pop
jmp
inc
add
repnz
aaa
push
scas
shlb
jo
mov
mov
popa
sub
dec
adc
push
jb
push
movsb
add
xchg
cmp
lock
jle
dec
adc
and
clc
push
outsl
addr16
sti
mov
push
icebp
aam
xchg
pop
dec
and
xchg
les
jb
fmull
leave
leave
push
jb
sbb
je
jb
xchg
pushf
pop
and
pop
leave
leave
push
sub
pushf
dec
and
push
jb
xchg
cmp
xchg
mov
leave
dec
in
or
leave
fmuls
in
sub
sub
push
movsb
fwait
sbb
xor
mov
pop
jb
clc
dec
adc
rcrb
jno
xor
sbb
pusha
push
mov
push
jle
pop
dec
pop
call
inc
test
leave
aad
jne
add
push
push
jge
enter
inc
hlt
je
cmp
xchg
in
call
bound
jecxz
jno
nop
insb
or
jbe
adc
stos
jp
ja
pushl
push
or
out
mov
adc
ret
jmp
cmp
sbb
loope
sbb
loop
push
mov
jge
cmp
inc
es
mov
push
lock
aaa
push
roll
inc
in
xchg
stos
jnp
pop
je
xor
sub
scas
inc
or
je
xor
sbb
outsb
mov
pop
jmp
shll
insb
adc
enter
or
jle
addb
pop
sbb
dec
or
jne
push
mov
test
jle
or
negl
pop
jo
lds
xor
lods
adc
push
out
insb
imul
adc
xor
inc
dec
push
push
jle
inc
push
aaa
sub
mov
je
or
dec
adc
sub
sbb
hlt
shld
fs
js
repz
stc
test
clc
or
mov
clc
inc
add
mov
dec
push
test
popf
into
mov
ja
mov
sub
or
jns
xchg
inc
mov
subb
adc
scas
mov
lea
or
aam
jecxz
mov
adc
xor
and
fwait
pop
pusha
cmp
pop
sbb
add
add
ret
jl
jmp
sbb
lret
leave
je
jmp
les
add
push
movsb
xchg
add
aas
popf
inc
cmp
pop
jo
sub
test
sub
xor
cs
test
and
outsb
je
lock
pop
adc
push
inc
or
fsubrs
and
into
sti
das
inc
lret
mov
aaa
lea
push
and
decl
inc
add
cmp
jb
jmp
xchg
leave
pushf
mov
inc
xchg
sbb
enter
mov
shrl
adc
int3
mov
adc
pop
mov
dec
lea
decl
and
xchg
movzbl
push
mov
lock
repnz
or
lock
xor
sbb
mov
cmp
push
jle
lea
push
shr
inc
incl
or
jno
movzwl
add
fcmovnb
jnp
inc
inc
data16
add
or
add
icebp
mov
rorb
shr
lret
rol
mov
mov
push
shl
ret
dec
and
add
add
push
sbb
pop
adc
and
push
sbb
lock
sub
das
in
and
push
repnz
cwtl
xor
pop
push
mov
add
pop
fsubs
mov
mov
mov
adc
mov
jmp
push
lcall
fimull
ljmp
inc
les
jge
jge
or
pop
sarb
dec
popf
fwait
out
pop
lock
out
gs
jne
out
xor
aaa
sbb
sarb
xchg
lock
xchg
or
pop
jo
seto
int3
popf
pop
mov
push
push
movsl
cmp
incl
mov
orl
jne
arpl
push
mov
xor
mov
dec
mov
in
mov
and
lds
scas
loopne
inc
loopne
insb
add
cwtl
je
insl
fdivr
jle
xor
inc
push
cmp
jg
jne
adc
adc
sbb
sub
push
mov
lahf
push
xchg
inc
shlb
xchg
das
add
jb
jo
mov
clc
loop
xor
jmp
dec
insb
or
xor
pushf
aam
ret
cmp
xchg
cld
fnsave
decb
mov
add
cmp
mov
jg
mov
aam
inc
or
xchg
pop
pusha
mov
imul
fildl
rol
rcrb
pop
push
jge
push
sub
xchg
addb
jne
popf
cld
pusha
mov
add
js
push
push
jle
pusha
add
cmp
xchg
gs
mov
fsts
inc
lahf
test
ss
xor
insl
cmpl
testb
mov
mov
insl
jge
lcall
sbb
pop
out
mov
dec
push
sub
pop
outsb
or
popf
outsb
in
inc
push
cmc
mov
dec
aaa
rcr
ja
sub
inc
sbb
shlb
mov
adc
pop
ss
cltd
sub
or
lea
inc
or
cmp
push
inc
add
imul
pop
orl
jnp
sarb
and
jmp
and
adc
xchg
xchg
sbb
sbb
andb
push
pushw
test
sbb
test
add
add
imul
ss
loopne
daa
jle
or
push
ret
xor
mov
sbb
add
adc
mov
and
mov
inc
cmp
js
es
jne
add
rcll
xor
inc
jecxz
es
sub
cmp
sub
cmpsb
xchg
xchg
push
add
pop
cmp
lods
and
xor
das
dec
popf
jbe
pop
inc
cmp
pop
loop
andl
aad
sbb
popf
in
pop
mov
insb
cmp
add
daa
or
mov
inc
out
sbb
lahf
push
and
push
inc
push
orl
adc
add
xor
inc
or
jecxz
add
push
rcl
sbb
icebp
and
and
jo
andb
push
call
test
call
mov
outsb
jnp
jo
mov
std
adc
and
xor
dec
into
fs
jl
dec
aam
dec
nop
nop
dec
push
dec
ror
les
sbb
cmp
sti
push
movsl
or
mov
cmp
test
or
cmpb
or
cwtl
add
imul
jb
push
mov
mov
lcall
ja
mov
shrl
icebp
loopne
push
cmp
push
jne
mov
sbb
orb
outsb
je
sub
and
test
mov
or
xor
inc
xchg
xchg
inc
lahf
add
jne
cmp
mov
inc
pushf
pusha
or
or
pop
add
mov
hlt
add
push
insb
lock
or
hlt
inc
adc
xchg
divl
xor
lds
int
push
les
lods
adc
outsl
and
add
xor
subb
or
mov
inc
addb
sub
icebp
mov
add
mov
cmp
push
mov
xchg
push
rcll
add
popa
cmc
or
scas
shlb
lock
sti
pop
idiv
add
pusha
rcrl
test
pop
jecxz
add
xchg
add
jge
test
push
xchg
jae
cld
call
dec
or
daa
or
leave
lret
inc
addb
and
sub
fdiv
inc
mov
clc
sbbb
lods
imul
gs
rorb
je
ret
jae
fldl
je
mov
push
and
add
inc
cmp
jbe
push
or
adc
call
adc
call
cmp
push
push
imul
and
jo
sub
andb
xor
push
mov
inc
or
push
fwait
xchg
enter
jns
sbb
mov
inc
fcoml
lock
jge
lock
std
mov
and
aaa
mov
mov
inc
cmp
mov
xor
fsubl
pop
into
je
and
in
dec
or
sbb
sub
push
push
push
jae
inc
lcall
adc
and
loopne
push
enter
push
shl
mov
adc
sarb
aad
add
pop
jle
mov
xor
and
mov
mov
aas
cmp
je
imul
pusha
syscall
mov
mov
push
cwtl
mov
and
in
enter
push
push
and
cmpb
push
shrl
js
jne
scas
mov
and
pop
cmp
outsb
jl
xchg
ret
jl
jmp
cmp
fdivl
xchg
lods
xchg
es
mov
xchg
js
call
mov
outsl
data16
adc
and
dec
scas
xchg
inc
sub
lock
ret
sub
mov
push
inc
mov
adc
jg
xor
mov
mov
mov
shrb
sti
jle
push
mov
ds
insb
mov
mov
adc
or
mov
imul
fcoms
inc
cmp
rorb
jmp
mov
imul
push
nop
xchg
add
sbb
fstpt
ljmp
cld
push
adc
lods
dec
push
jl
rol
or
je
outsl
gs
nop
or
pop
push
out
cmp
in
cmp
out
shlb
aam
and
test
add
push
sbb
jg
xor
nop
add
adc
repnz
pusha
add
les
dec
sub
sti
inc
pusha
arpl
add
cmp
mov
sbb
xor
sub
pop
push
and
int3
iret
push
add
jmp
icebp
mov
push
dec
adc
pushf
sbb
push
mov
sub
das
js
in
inc
push
push
xor
enter
and
shll
lret
les
aas
icebp
xor
out
hlt
clc
fldl
rolb
orb
popa
mov
mov
or
data16
dec
mov
bound
ljmp
testb
xor
aam
or
or
mov
popf
mov
ror
xor
and
xor
sub
dec
add
push
jne
or
sub
lret
push
shlb
sbb
sbb
fnstenv
fsubs
push
push
mov
int
divb
movl
icebp
jmp
mov
push
xchg
and
enter
dec
inc
rcll
dec
pushl
cmp
add
mov
or
std
xchg
or
je
xor
rol
fdivrp
clc
rorb
jl
aam
xor
bound
nop
comiss
pop
and
inc
sub
jo
xor
or
sbb
aaa
aam
fnstenv
sbb
cld
push
sbb
xchg
call
add
mov
cwtl
clc
scas
rcl
lods
outsb
xchg
nop
fstp
inc
enter
sbb
addr16
push
inc
cmpsl
xor
fisttpl
fimull
mov
push
xchg
jg
push
cli
inc
xor
roll
and
out
ja
sbb
jl
mov
push
add
jmp
push
jle
aas
adc
pop
pop
lea
push
mov
cmp
jne
movsbl
mov
icebp
divb
popa
add
add
dec
jns
mov
mov
mov
je
clc
adc
loopne
jno
push
dec
pop
cmpb
je
cmp
mov
out
fcmovne
adc
push
aas
pop
xchg
xchg
aam
and
popf
scas
rol
ja
inc
fcom
shr
in
dec
js
push
scas
and
hlt
mov
dec
pop
rolb
ficoms
cmpsl
adc
ljmp
xor
add
bound
test
and
sub
stos
mov
fs
dec
inc
sbb
mov
push
and
jmp
je
inc
and
add
push
mov
or
nop
push
sbb
in
insb
aam
push
in
adc
mov
sbb
xchg
push
add
mov
pop
je
insb
insl
inc
sbb
pop
xor
fsub
lcall
inc
addr16
inc
and
xchg
xchg
sbb
and
mov
loopne
pop
pop
xor
and
sbb
and
or
inc
aaa
xchg
js
push
loop
call
or
sub
and
lahf
push
xor
push
daa
pavgw
pop
cmp
shl
fdivs
mov
je
xchg
push
xor
icebp
push
push
push
cs
cmp
adc
pop
aas
sub
add
xchg
adc
je
inc
xor
insb
fidivrs
into
fcompl
xor
mov
mov
mov
pop
mov
es
ja
rorl
mov
add
dec
ja
adc
ficompl
dec
jmp
jb
add
inc
je
mov
loope
pop
sub
cmp
int
adc
cmp
push
xorl
imul
inc
jmp
pop
orl
ja
ss
jnp
push
cmp
dec
pop
movl
mov
jmp
mov
addr16
inc
lods
data16
and
shlb
mov
add
mov
addl
aaa
inc
cs
add
adc
jno
pop
sub
dec
dec
fstl
cmp
xchg
xor
mov
jo
adc
pop
icebp
add
xor
fsub
lret
gs
mov
test
mov
sbb
jne
dec
je
add
jnp
mov
jb
mov
in
or
cs
xor
sbb
sahf
fcompl
mov
mov
mov
inc
xchg
cmp
mov
or
sbb
lea
jbe
mov
dec
adcl
xor
add
dec
clc
add
mov
insb
arpl
sarb
cwtl
daa
jl
xor
test
xor
adc
idiv
push
mov
lcall
clc
or
cmp
sub
les
sbb
adc
push
push
fiaddl
jb
outsb
xchg
push
and
xlat
orb
mov
jbe
sub
insl
std
and
inc
stc
and
xor
lock
pminub
ret
xchg
inc
xor
inc
inc
ds
xor
es
jg
xchg
inc
xchg
nop
and
sub
xor
inc
and
jbe
ds
enter
sbb
and
in
lea
mov
cmp
repz
sbb
cli
pusha
aas
push
push
or
push
test
js
push
ret
jne
sbb
call
adc
repnz
cmp
outsb
aad
sub
sub
sub
mov
sbb
cmp
push
jl
cwtl
pause
push
cmp
push
js
clc
enter
sti
jnp
sbb
jmp
dec
add
sbb
pop
push
fstps
repnz
mov
pop
fstl
loopne
insb
imul
addl
jmp
filds
and
inc
hlt
push
push
pushl
add
push
fisubrl
inc
push
jae
lea
mov
jne
das
mov
les
popa
sub
decl
sub
push
pusha
nop
sbb
sbb
inc
inc
bound
clc
pop
mov
scas
sbb
xchg
adc
xchg
sbb
xchg
cmpsb
ret
loope
pcmpeqb
sbb
sahf
add
test
sbb
mov
movb
and
imul
push
and
push
adc
jns
cmc
add
dec
dec
mov
sbb
dec
inc
loopne
lahf
dec
push
jne
subb
jl
adc
jle
push
dec
push
or
pop
aad
outsl
adcb
jle
and
sub
adc
pusha
and
jmp
icebp
sub
loopne
push
arpl
mov
mov
fs
call
add
push
mov
aas
push
and
andl
inc
mov
push
in
test
sbb
pop
testb
nop
test
sbb
mov
loope
test
test
or
lret
mov
insl
fmull
add
dec
in
jne
push
and
test
sub
add
aaa
xchg
stos
inc
jno
dec
dec
ja
mov
mov
push
test
sub
mov
dec
and
sbb
and
inc
sub
in
jmp
jecxz
aam
je
sbb
pop
sbb
stc
xacquire
cmp
fwait
jmp
push
add
jns
cltd
fs
cmp
dec
push
pushf
mov
push
test
pop
dec
and
push
sub
punpckhbw
enter
sbb
pusha
js
lret
clc
jae
jae
push
pushf
cmp
aam
pop
pop
es
jns
dec
int3
sub
rcrb
mov
lods
stc
pop
push
in
mov
push
add
insb
or
pop
lods
jb
cwtl
push
pop
stc
dec
dec
sub
adc
scas
in
ficoms
jb
nop
inc
cltd
xor
lret
test
dec
and
or
ficompl
es
and
test
or
shll
add
inc
lret
inc
cli
sbb
mov
push
sbb
sbb
mov
or
pop
es
jg
test
test
inc
movsb
xor
xchg
or
and
mov
inc
mov
or
push
test
je
jo
dec
dec
in
inc
push
mov
test
xchg
add
jl
inc
dec
push
pop
movsb
cmp
inc
cltd
nop
lret
test
push
inc
adc
sub
dec
enter
mov
sbb
aad
test
push
repnz
pop
push
clc
jno
and
sbb
gs
sbb
test
xor
ds
and
jno
lea
push
jno
into
inc
or
sub
repnz
mov
lods
aas
sub
adc
cwtl
mov
gs
inc
mov
ds
lret
test
js
adc
lcall
inc
adc
pop
cmp
jb
sub
cmp
adc
cmp
adc
adc
pop
push
xor
pop
aaa
test
aaa
sbb
xlat
adc
adc
scas
addr16
sbb
xor
xchg
inc
sbb
mov
inc
subb
fadds
dec
fnstsw
addr16
jns
mov
jo
mov
mov
jo
adc
nop
dec
out
in
xlat
hlt
adc
popf
mov
sub
and
call
xchg
adc
xor
lret
or
fdivs
cltd
push
mov
jb
mov
sub
xor
in
sub
test
pushf
movsb
and
xor
ret
lahf
inc
fisubs
in
mov
enter
nop
xor
enter
mov
jl
js
test
inc
dec
es
lds
in
ja
pusha
pop
adc
jb
je
pop
pop
jb
and
push
sub
daa
adc
adc
inc
cli
sub
leave
test
inc
dec
enter
sub
in
sbb
sbb
in
inc
and
test
add
push
ljmpw
push
stos
push
pop
xchg
adc
mov
xor
jnp
std
dec
inc
add
in
scas
addb
mov
sub
mov
mov
cld
mov
test
les
cld
leave
test
and
cld
inc
enter
jmp
std
mov
repnz
xchg
outsl
add
add
clc
mov
psubd
notb
dec
sub
or
push
adc
leave
subl
in
mov
cmp
xor
ftst
and
loopne
mov
in
and
movsb
js
pop
out
or
ljmp
jb
pop
icebp
sbb
xchg
pop
enter
outsb
jns
das
sbb
mov
push
mov
mov
sub
inc
jbe
mov
loop
jns
outsb
cltd
cmp
sub
xchg
fists
push
call
test
sbb
adc
or
and
bound
je
push
pushf
add
jo
es
lods
jne
mov
mov
push
inc
imul
icebp
add
jg
shll
push
imull
jp
push
sub
lds
enter
pop
adc
insl
es
enter
insl
pop
int
jmp
jp
push
movsb
cs
add
push
shlb
push
inc
pop
jb
pop
imul
jb
xor
test
repnz
sbb
in
ss
mov
push
or
repnz
scas
sbb
and
adc
xchg
dec
pop
adcl
cmpsl
mov
cmp
push
je
adc
fisubrs
mov
jmp
sub
orb
ss
les
out
jns
fadds
push
adc
xor
inc
cmp
lods
shrb
addl
xor
gs
push
clc
insb
repnz
inc
jg
pop
cmp
bound
push
and
daa
in
sub
loopne
inc
and
adc
xchg
xchg
and
ss
ficoms
jle
stos
and
sub
xchg
enter
es
bsf
adc
jb
and
cmp
negb
lods
cmp
xchg
mov
jp
clc
push
enter
xchg
loope
leave
test
inc
dec
enter
jl
es
xchg
je
jo
in
inc
inc
push
and
fs
cltd
nop
xchg
adc
sbb
and
adc
push
pop
or
cmp
sbb
cmpl
cmp
dec
es
sbb
test
xor
popa
pop
sub
cmp
daa
and
push
sbb
cmpsb
xchg
or
adc
mov
and
mov
fs
dec
loopne
nop
adc
or
enter
movsb
loope
adc
cmp
hlt
imul
adc
notl
in
adc
daa
in
inc
mov
jl
jb
and
shlb
cltd
nop
xchg
adc
inc
enter
mov
test
xchg
pop
daa
mov
pmulhuw
stos
and
test
enter
sub
inc
dec
aaa
pop
test
inc
dec
es
or
xor
add
jb
and
nop
xchg
add
push
adc
les
test
and
adc
sub
mov
adc
xor
sbb
call
jns
imul
repnz
shlb
cmpsb
ds
hlt
rorb
cltd
fwait
movb
mov
data16
inc
inc
pop
test
in
mov
les
add
xor
and
mov
sub
mov
leave
cs
mov
xchg
loope
jne
das
sbb
push
inc
test
or
test
pop
mov
mov
jne
jnp
push
test
add
enter
add
movsb
or
jecxz
dec
hlt
js
fistpl
sub
jecxz
outsb
rolb
jl
inc
pop
inc
loopne
mov
sbb
arpl
add
pop
inc
adc
arpl
pop
dec
inc
lea
call
mov
and
hlt
sbb
sub
pop
shr
xchg
add
dec
stc
add
fwait
mov
mov
int
and
pop
test
cmc
jo
test
push
mov
inc
cld
and
sbb
mov
xor
jmp
sti
test
pop
pop
fcoms
cmp
daa
fbstp
push
es
test
mov
mov
lahf
pop
clc
addr16
fildll
inc
les
adc
call
push
jae
in
inc
xor
adc
je
sub
or
imul
push
jle
cmpsl
mov
repz
sbb
sub
clc
xor
cmp
loope
je
cmc
stc
push
je
mov
cmp
imul
fsubrl
movsb
loop
pop
or
add
orb
aas
mov
mov
in
nop
repz
inc
adc
xchg
into
and
imul
add
lds
mov
outsb
xor
jg
lock
pop
cld
push
jmp
mov
in
push
jg
adc
stc
cmc
fldt
inc
idivl
dec
sbb
je
lcall
fcomp
jns
dec
jnp
push
mov
leave
out
sbb
inc
insl
ja
mov
cmp
push
mov
repnz
pop
cli
addl
pop
cmp
les
enter
xor
inc
push
adc
add
mov
jge
and
push
push
jmp
push
xor
cmpsl
gs
mov
js
popa
jns
dec
cmp
repnz
push
xor
xor
add
sbb
fs
or
cmp
aam
clc
addr16
mov
sub
xchg
xorl
push
pop
clc
add
push
pop
in
out
lcall
xchg
lea
or
rol
jae
test
jo
notl
lea
pop
cmc
mov
pop
mov
adc
and
in
adc
sbb
fucomip
sbb
imul
mov
and
pop
push
jl
xchg
and
jl
fdivl
or
and
leave
adc
mov
xor
js
dec
sti
add
add
push
movsw
idiv
mov
mov
cmpsb
adc
adc
addr16
xor
pop
out
push
or
insl
push
enter
xabort
mov
daa
in
cmpsb
and
and
call
insl
sbb
sub
ret
je
ficompl
mov
pop
jg
xor
inc
mov
dec
mov
sti
pop
mov
jle
cmp
notl
aaa
push
cmp
inc
das
addr16
mov
jl
cltd
mov
mov
jl
fwait
xchg
js
mov
nop
inc
adc
mov
pop
test
push
push
rclb
xor
add
push
mov
aas
or
push
jmp
mov
add
insl
cmp
xchg
addr16
adc
adc
lea
ret
push
and
cmpb
cs
lahf
push
or
subb
addr16
cmp
sar
sbb
cmpsb
push
jmp
sti
orl
push
pop
cmp
jae
imul
jmp
sbb
add
add
inc
jecxz
stos
cld
hlt
out
inc
xor
pop
xor
push
push
rorl
jb
nop
adc
or
add
imul
or
in
sbb
das
pushl
jae
int3
cmpb
jae
test
loope
fucomi
xchg
push
or
mov
push
addb
dec
sub
inc
xor
xchg
adc
sub
sub
repz
loop
repnz
in
negw
xor
and
fldcw
cmpsb
adc
lock
outsl
inc
xor
sti
adc
push
std
or
sti
jnp
pop
sarl
popf
lea
push
pop
pop
or
mov
fs
fstl
sti
lea
leave
dec
push
adc
cld
adc
lock
push
dec
adc
pusha
and
in
xchg
jae
test
dec
in
pop
or
mov
dec
pushf
call
and
fldcw
clc
push
jnp
or
push
and
push
cmp
jl
xchg
subl
out
fsubr
mov
test
pop
in
out
cmp
add
out
or
sub
mov
lock
and
mov
add
xchg
repnz
cwtl
adc
add
xchg
sbb
adc
push
add
aaa
jle
or
jb
jns
ret
or
movzbl
push
sbb
movsb
repnz
or
rolb
icebp
pop
lods
repnz
xor
cmpsb
xor
xchg
mov
adc
sub
lock
xchg
repnz
repnz
rolb
cs
mov
cli
lods
in
push
sub
push
and
pop
movnti
xor
and
xor
mov
js
ret
jecxz
fsubs
imull
xchg
subl
sub
sub
jne
add
int
adc
js
movsl
xchg
test
pop
pop
aas
push
xchg
xchg
fdivrp
jb
dec
enter
jecxz
jecxz
popf
nop
adc
push
inc
in
xchg
cmc
int
or
in
xchg
pop
sub
and
sbb
nop
loop
or
adc
xchg
loop
xorl
cmp
xor
stos
ret
jp
iret
xchg
lret
dec
and
and
loope
rorb
jmp
cmp
ljmp
dec
cmp
dec
ss
push
repz
dec
xor
push
lods
je
ja
push
mov
in
ficomps
fs
xor
pop
in
adc
aam
pop
cmc
xor
dec
pop
dec
and
stos
leave
xor
push
cld
add
stc
int3
sub
aaa
cmc
test
iret
jns
inc
arpl
movsb
pop
clc
and
or
fs
icebp
adc
imul
movsb
imull
inc
repnz
inc
stc
sub
and
cmc
mov
and
adcb
sub
ret
add
cmp
arpl
jnp
mov
xor
movq
mov
jmp
jbe
and
xlat
add
mov
xchg
ss
aas
add
loope
jmp
mov
jmp
lea
adc
mov
fs
arpl
sbb
sub
aas
inc
jmp
nop
int3
in
push
or
and
jno
mov
in
dec
xchg
in
data16
lret
inc
sti
xchg
add
sbb
fstpl
add
fstl
mov
je
or
and
clc
loope
outsl
mov
add
cmp
xor
mov
repz
jns
loop
xor
or
orl
xchg
rcrl
add
js
stc
pusha
adc
dec
lods
xor
push
or
pop
movsb
cmc
loopne
add
in
xor
daa
insb
aas
push
push
jp
popa
mov
inc
nop
arpl
inc
adc
jno
xchg
repnz
mov
adc
orb
push
mov
mov
arpl
adcl
nop
inc
mov
push
pop
testb
flds
insb
sbb
sub
rclb
lret
fcompl
mov
jl
imul
adc
call
lea
and
pop
inc
lock
pop
inc
xlat
xor
fwait
lds
sbb
sbb
cmp
xchg
outsl
inc
ficomps
inc
gs
js
add
sarb
es
pop
test
or
ja
dec
shrl
mov
sbbb
jbe
addl
adc
enter
adc
sbb
inc
inc
negl
jl
dec
xchg
xor
adc
xchg
or
adc
sub
push
ljmp
adc
jno
pop
jge
and
aas
stos
push
icebp
add
adc
sbb
or
pop
pop
and
jae
popa
push
leave
adcl
or
sub
mov
ret
loope
test
hlt
dec
lock
push
fdivrl
inc
and
shlb
sbb
je
cmpsl
mov
imul
pop
inc
sbb
dec
inc
andl
and
cltd
sbb
repz
mov
adc
xchg
dec
nop
bound
daa
ret
test
enter
cmp
adc
sbb
pushf
fs
subl
adc
sub
and
or
push
dec
popa
mov
sbb
mov
addr16
loop
je
push
jno
sub
pop
push
push
pop
mov
sub
inc
out
negb
cld
pusha
sub
test
testb
jbe
ja
adc
in
ret
and
faddl
push
cmp
push
leave
or
in
mov
fwait
pop
pop
das
add
loop
push
and
or
pop
push
fistpl
mov
jne
bound
or
adc
ret
dec
adc
ds
aas
jns
in
fsubs
sub
or
or
movzbl
ljmp
clc
pop
in
rcrl
frstor
mov
je
jbe
lret
add
loopne
add
or
xor
inc
jns
pop
inc
push
leave
lret
mov
pop
test
add
add
add
and
ja
je
movsl
aas
subb
popa
test
fldt
pop
push
dec
femms
jmp
sbb
in
orb
xor
push
out
cmp
fstpl
jle
subb
test
adc
xchg
pop
jge
sub
cmpsl
sbb
push
mov
add
sub
mov
rclb
sub
call
ficompl
shr
xor
popa
arpl
adc
and
mov
or
dec
sub
sub
aaa
mov
mov
scas
rcrb
push
adcb
bound
mov
movsb
divl
insb
push
mov
addb
es
je
jle
out
inc
cli
xchg
lret
cmp
out
les
outsl
pop
call
mov
mov
call
cmp
pushf
lahf
add
adc
mov
mov
fcoms
cmp
les
jmp
int3
call
xlat
push
pop
push
cltd
push
insb
sbb
mov
pop
pop
les
and
shrb
je
add
add
pop
push
adc
dec
dec
inc
xor
xorl
adc
inc
push
aad
or
adc
xchg
mov
dec
fisttpl
mov
and
or
push
jmp
ret
xchg
pop
sub
insl
sub
loopne
mov
xchg
rcpps
cmpsl
add
add
fdivrl
push
and
xchg
add
sbb
imul
lock
push
int3
pop
jb
xor
andb
iret
add
push
adc
ret
xchg
adc
orl
sbb
xchg
orl
push
je
push
movsl
inc
rolb
mov
and
jb
xchg
dec
scas
popf
xor
xchg
je
and
xchg
ds
xor
ja
push
mov
xlat
xchg
xor
cmp
imul
xor
inc
sub
xor
and
push
mov
imul
jae
push
pop
mov
adc
or
mov
in
xchg
dec
xchg
fs
pop
adc
enter
add
cmp
insb
lock
les
mov
lds
adcl
pop
ss
sbbb
xchg
mov
and
pushf
xchg
sub
adc
data16
cmc
dec
push
call
or
xor
and
push
or
icebp
inc
fisubl
xor
cmp
cld
xlat
add
mov
mov
rol
cwtl
add
cmp
jne
xor
cli
inc
ret
mov
aad
mov
mov
xchg
cltd
idivl
orb
shll
push
int
test
add
out
or
adc
add
and
jmp
cmp
sub
xor
fcoms
push
cmp
leave
xchg
push
sbb
xor
std
cmp
push
jo
and
mov
cltd
nop
and
movsl
inc
xchg
test
andb
or
aas
xor
jl
push
ret
mov
fsubs
xor
into
mov
out
aaa
jo
inc
cmp
pop
and
cmp
andb
cmp
cmp
push
cmc
shll
roll
cmp
test
sub
fadds
cld
lds
pop
pushf
add
inc
dec
sti
or
xchg
pop
ljmp
in
or
add
sbb
ja
mov
xchg
fsubr
add
test
repz
dec
mov
push
add
pusha
pop
add
inc
data16
inc
jno
lret
cmp
lret
movb
mov
sti
mov
mov
xor
fs
in
inc
sti
or
ja
in
jne
dec
adc
mov
test
nop
out
in
add
or
jb
xor
jne
xchg
add
lret
inc
in
jl
sbb
add
xchg
sub
daa
adc
nop
fsubr
mull
lret
pop
or
jmp
inc
lods
sbb
inc
adc
xor
cmp
mov
inc
repz
test
adc
adc
or
mov
sahf
and
daa
sub
aaa
cmpl
ja
mov
icebp
nop
icebp
das
cli
cmp
push
icebp
enter
out
add
loope
daa
clc
shrb
test
sub
repnz
sub
xchg
repnz
mov
add
add
mov
mov
xchg
xchg
inc
pushf
in
out
jo
mov
push
mov
fisttpll
sub
fs
push
nop
dec
das
adc
incl
add
sbb
push
repz
xchg
add
and
popa
sbb
jl
fcoms
push
or
add
cmc
leave
test
mov
or
jno
test
arpl
push
xchg
cmp
inc
push
pop
push
mov
cmp
adcl
shlb
jo
loope
dec
in
or
pop
and
popa
inc
or
xor
pushf
dec
gs
dec
mov
shrb
or
popf
sti
push
inc
gs
adc
jmp
jb
js
lds
push
sbb
out
in
cs
int3
sub
jmp
imul
lods
mov
inc
push
mov
loopne
lret
jle
js
and
or
pop
pop
pop
cli
add
push
adc
mov
mov
shll
mov
iret
xor
adc
add
xchg
mov
jo
inc
adcb
cmpsb
arpl
js
leave
mov
dec
dec
stc
and
int
rclb
sub
cmp
and
fs
or
pusha
cmp
cwtl
lods
in
xchg
cld
std
in
push
add
dec
test
fs
xchg
nop
lret
jmp
idiv
daa
and
push
push
sbb
fwait
inc
xchg
int3
push
push
adc
std
and
xorb
fcoml
dec
mov
xchg
mov
sbbl
mov
and
mov
fwait
in
add
add
push
cwtl
cmp
lods
or
popa
mov
dec
aad
dec
fisttps
sub
stos
push
sub
inc
loop
aaa
sbb
dec
pop
mov
fwait
xchg
jo
cmp
xor
notb
cltd
daa
daa
mov
divb
adc
xchg
xchg
cmc
push
xor
jmp
push
rcll
or
neg
mulps
push
jb
pop
adc
sti
cmpb
call
dec
sbb
push
and
and
sbb
pop
inc
in
outsb
pop
insb
jo
psrlq
cmp
pop
or
xchg
insb
repnz
jmp
jl
xor
inc
or
insl
test
xchg
push
insl
or
mov
or
mov
daa
clc
xor
xor
mov
leave
adc
pop
pop
and
jbe
sbb
lods
mov
jne
xor
or
js
cmp
push
xor
inc
add
push
pop
testl
lret
out
loopne
fmuls
jmp
sub
push
popf
rcrb
pop
xchg
js
fcomps
mov
and
mov
call
mov
or
fdivrl
pop
dec
jo
cmp
lret
pop
in
loope
in
sub
or
jno
pushf
push
std
adc
movsb
sbb
shlb
cmp
fs
xchg
in
cmp
dec
adc
in
rcll
pushf
bound
mov
pop
push
xor
adc
dec
or
xor
cmpsl
in
or
imul
ret
insl
or
inc
sbbl
adc
push
add
mov
push
loope
cmp
loopne
mov
add
pop
loope
rclb
cmp
push
lds
jbe
inc
add
fiaddl
mov
add
sub
cmp
repz
rolb
loop
inc
and
jnp
mov
mov
mov
or
mov
adc
test
std
xlat
push
inc
add
and
cmp
and
mov
xchg
xor
cmp
pop
or
movsl
adc
shlb
test
movsl
fcmovbe
dec
nop
mov
daa
jp
xchg
push
push
inc
sbb
mov
mov
push
inc
inc
adcl
push
add
call
pop
jb
jb
push
daa
pusha
push
push
loop
inc
add
push
mov
cld
int
pop
sub
pushl
iret
mov
push
fwait
ret
loope
adc
pop
cmp
sub
push
jne
test
fst
mov
jne
dec
add
or
push
dec
push
and
mov
int3
push
cmp
jae
or
sbb
pushf
jp
push
xchg
je
or
nop
xchg
pop
inc
add
cmp
mov
and
adc
ss
dec
mov
add
sbb
inc
pop
imul
push
and
rcl
push
push
mov
pop
or
and
sub
mov
mov
add
js
aam
sbb
and
jnp
sbb
push
mov
dec
mov
and
adc
fisubrs
mov
mov
pop
nop
xchg
ret
rcrb
and
xor
bswap
les
les
mov
scas
aam
push
push
sarb
pop
push
push
jno
jno
xchg
mov
ja
inc
test
jns
aam
dec
xor
pop
sbbb
adc
and
add
or
enter
inc
adc
cld
dec
push
push
jns
mov
xor
inc
xchg
test
xor
push
dec
pop
xchg
add
cmp
lock
sbb
xor
adc
sub
mov
decb
sub
push
adc
jne
roll
sti
inc
in
lret
xchg
icebp
es
push
xchg
loopne
in
mov
inc
push
and
std
sbb
int3
lea
aaa
pop
mov
xchg
adcl
and
rol
popa
enter
pop
js
and
push
ret
testl
daa
cld
push
adc
lcall
mov
insb
mov
dec
inc
cmpsl
sub
mov
add
cmp
inc
xchg
pop
sub
dec
add
dec
fmuls
in
movl
jb
jb
out
xchg
add
push
and
pushl
addl
sub
cmpsb
loopne
mov
sub
pushf
testl
sbb
mov
test
pop
xchg
mov
lret
cwtl
push
in
xor
jmp
cmp
adc
pop
sbb
ret
je
and
sub
jge
xor
jge
push
sub
fistl
frstor
es
adc
or
jg
fcoms
inc
in
add
mov
jb
out
mov
sbb
sub
inc
mov
lods
test
mov
jne
bound
cwtl
jmp
std
or
adc
and
in
mov
bound
sti
into
lods
adc
cmpsl
or
cmp
jb
pop
lods
push
mov
xor
mov
push
pusha
shrl
lock
fsubrl
and
or
test
jb
add
mov
and
test
aaa
sub
js
and
sub
leave
sub
mov
fiadds
inc
sub
in
out
sbbl
push
sub
xor
movsb
imul
cwtl
dec
pushf
jbe
xchg
jg
addl
xlat
inc
sub
sub
push
pusha
pop
enter
ds
or
dec
inc
les
imul
mov
push
mov
push
pop
fnstcw
push
xor
add
mov
imul
scas
push
push
icebp
dec
lret
clc
pushf
sbb
jle,pt
popa
arpl
mov
inc
jbe
add
cmp
or
xchg
je
lret
add
jmp
push
push
xchg
inc
add
lock
outsb
js
pop
mov
aam
ret
inc
scas
pop
xor
int
adcb
mov
fs
cmp
jns
mov
dec
loop
mov
mov
and
jmp
and
jno
pop
mov
cmp
dec
rorb
pusha
call
sub
push
add
pop
adc
loope
or
pop
inc
push
cld
in
cmp
popa
pop
sbb
sbb
add
add
adc
add
cld
mov
push
in
fwait
insl
inc
jp
arpl
test
or
call
inc
fdivl
or
jmp
pushl
pop
xchg
mov
cmp
ret
cmp
jl
rcll
jnp
in
cli
sub
adc
jp
push
nop
push
bound
or
and
in
aam
ss
dec
ret
ret
jae
jbe
add
inc
jne
cmp
fldenv
mov
push
dec
lahf
fs
mov
ljmp
or
pop
and
out
inc
inc
xorl
sbb
xchg
push
push
push
ds
icebp
or
sbb
lret
add
sbb
push
out
pop
cli
pop
or
inc
pushf
loopne
cmp
mov
movsb
lret
push
cwtl
sub
mov
icebp
jne
gs
ret
fists
cmpl
imul
in
cmp
inc
xor
xchg
movsl
push
add
es
js
xchg
movsb
movsl
add
lock
dec
pop
orb
lods
int3
out
ds
and
or
cltd
jo
mov
push
push
lds
into
mov
addr16
movsb
cwtl
rolb
in
sub
dec
addl
insb
pusha
stc
inc
int
xchg
out
mov
nop
pop
enter
enter
push
push
dec
mov
sbb
jp
in
in
mov
push
shl
mov
push
mov
pop
xlat
sub
add
push
or
lcall
or
popl
clc
arpl
cld
pushl
xor
sbb
or
cmp
add
push
hlt
call
inc
cmp
sbb
dec
jl
mov
mov
add
mov
push
pusha
adc
test
cwtl
cmc
out
data16
movsb
orb
jle
cmc
jg
xchg
daa
adc
inc
cmp
jl
andb
xchg
js
lods
mov
popl
sbb
adc
sub
lock
push
jle
jne
sbbb
movsb
outsl
or
xor
sub
enter
dec
push
xor
push
sub
lcall
xchg
outsl
mov
push
lds
cmp
pop
sbb
out
daa
cmpsb
mov
sbb
adc
stos
adc
or
sbb
jne
mov
jge
pop
dec
or
mov
jne
in
pop
in
mov
jne
lahf
push
or
lret
and
add
adc
mov
add
push
rclb
push
add
mov
pop
es
insb
mov
add
cmp
jbe
push
sub
push
push
jb
ljmp
jmp
dec
cmp
mov
push
dec
adc
and
pop
jbe
insb
and
xor
popl
popf
cmp
adc
aas
repnz
xchg
push
dec
adc
jg
dec
cmpsl
pop
test
push
mov
lods
mov
dec
or
lock
mov
dec
js
cmp
call
xor
idivb
mov
in
cmp
pop
mov
pop
ret
pop
and
push
in
dec
and
testl
jo
jnp
add
fsubs
adc
inc
je
sbb
aam
add
add
pop
cmpsl
adcb
pop
mov
test
dec
inc
leave
add
decb
push
adc
xorl
add
mov
pushf
push
pushl
xchg
test
popf
movl
aam
sar
mov
and
push
dec
cmpsl
and
inc
push
cmp
lds
ret
addr16
xchg
imul
hlt
cmp
je
jae
ret
pushl
ss
push
ret
or
mov
pop
push
inc
or
push
cmp
sbb
add
push
xchg
fcompl
mov
mov
sub
jmp
dec
dec
jecxz
pop
scas
inc
insb
adc
push
rcrl
cmp
mov
test
add
cmp
adcb
movsb
rolb
test
fs
inc
call
mov
cli
shlb
push
push
loopne
jb
test
xor
sbb
leave
movsb
mov
xor
or
jne
sahf
mov
arpl
in
inc
std
or
inc
inc
jb
sbb
dec
inc
jmp
adc
mov
xor
adc
mov
sub
mov
sbb
mov
or
call
inc
fs
and
dec
push
add
add
clc
lret
out
cld
mov
inc
js
xchg
jae
js
add
mov
sbbl
lea
cltd
loopne
js
push
and
mov
lods
xchg
or
cwtl
pusha
mov
inc
mov
pop
outsb
lock
cmpl
pop
jne
adc
lods
dec
and
sbbl
popa
xor
pop
pop
adc
adc
movsb
push
scas
xchg
add
dec
fidivrs
mov
sub
push
jmp
xchg
inc
pop
cmpsl
and
xchg
xor
mov
dec
adc
push
cmp
push
enter
loopne
mov
and
loopne
loopne
pop
leave
add
xor
inc
push
repnz
mov
mov
add
mov
shrl
inc
sbb
and
gs
jl
inc
dec
je
push
in
xor
loopne
std
sbb
adc
cmc
mov
adc
lret
add
and
pushf
loopne
cmp
mov
cmp
lcall
loopne
jb
dec
mov
pop
xchg
or
pop
fnstsw
add
sbb
or
cmp
pop
xchg
inc
push
cmp
pop
sar
sbb
xchg
ret
shrl
and
xor
pop
aaa
loopne
mov
dec
pop
push
roll
pop
cmp
add
add
les
xor
out
xor
jnp
fwait
cli
ja
imul
jecxz
mov
inc
or
dec
clc
pushf
pop
inc
or
cmp
mov
gs
hlt
mov
cmp
inc
adc
jo
fiadds
inc
sbb
mov
fisubrs
jbe
jne
xor
and
pop
insl
mov
adcb
sub
add
adc
in
call
or
sub
cmp
je
dec
pop
adc
enter
jp
lods
xlat
xchg
sbb
jmp
aad
jge
push
pop
imul
insl
scas
xor
adc
mov
mov
pop
xor
cmpsb
xor
push
shl
negl
pop
outsl
push
sbb
loopne
mov
ds
stos
push
or
pop
sbb
in
jge
leave
das
pop
daa
add
cli
mov
jecxz
mov
inc
add
sarl
roll
loope
sbb
popl
pop
xchg
mov
rorl
jle
pusha
aas
push
add
push
or
inc
dec
enter
dec
fldl
mov
add
ficoms
insb
jno
add
add
push
mov
inc
mov
lcall
push
inc
test
mov
insb
dec
mov
pop
pop
and
or
jp
jp
les
lcall
add
fistpl
cmp
or
inc
cmp
fcomp
fidivrl
push
push
movsl
push
les
ffree
add
adc
push
push
sub
xchg
ss
adc
adc
mov
sub
push
jnp
leave
cwtl
sbb
mov
movb
scas
mov
pop
lock
or
dec
cld
xor
pop
sbb
pop
jp
sub
aad
cmp
stc
or
test
je
movb
mov
inc
inc
mov
iret
mov
mov
sbb
push
push
ja
loope
orb
xor
sub
jnp
mov
popf
pop
scas
lcall
inc
push
fnstenv
mov
cmp
fnstcw
dec
js
lds
data16
cmp
sar
lcall
mov
movsbl
cmp
jo
cmp
push
push
cmp
cmpsb
or
jg
push
cmp
or
xchg
jmp
cmp
jne
mov
xor
and
stc
pop
cli
sti
cld
or
std
or
jmp
hlt
test
fiaddl
cmp
mov
lods
outsl
or
inc
inc
adc
repz
dec
test
into
xrelease
and
adc
mov
xchg
mov
insl
sub
jne
pop
and
add
pop
xor
mov
sbb
or
jmp
adc
or
or
fmull
popl
test
mov
add
roll
js
hlt
lea
sbb
adc
nop
mov
int3
adc
fld1
fwait
xor
push
movsb
mov
loopne
shrb
pop
mov
lea
mov
add
jge
pop
mov
sub
push
mov
sub
push
dec
inc
je
pop
mov
mov
add
and
add
jg
add
add
idiv
fcomps
add
push
add
mov
ficompl
push
out
lds
inc
adc
push
sub
xchg
pop
lods
pavgw
icebp
pushf
fcmovu
fcmovnbe
inc
push
xor
lds
xchg
add
pop
ja
mov
ficoml
cmp
nop
scas
push
and
push
dec
sub
pop
sbb
pop
aam
test
jne
inc
cmpl
inc
cld
add
in
mov
cmpsb
xor
pop
je
pushl
add
mov
mov
mov
shr
cmp
out
into
insb
or
inc
push
inc
rolb
ret
mov
adcl
pop
dec
imul
test
mov
mov
int3
shr
cmp
ret
xchg
lcall
std
fidivl
and
and
mov
and
adc
adc
or
test
mov
jmp
push
enter
cmp
inc
fcmovnb
xchg
jbe
add
push
push
or
or
xor
mov
add
push
aaa
adc
repnz
xor
add
testl
push
adc
call
push
iret
imul
xchg
or
ret
in
ret
sbbb
out
or
mov
jle
enter
in
push
push
ja
fisubrs
xchg
push
and
mov
mov
inc
sub
jl
pop
adc
sub
loopne
push
xor
xor
mov
adc
add
je
jne
js
mov
and
sbb
addr16
push
js
jne
mov
adc
push
enter
mov
test
and
add
adc
test
jns
push
sti
test
add
sub
pushl
xchg
lock
jo
sbb
cmpsl
inc
and
sub
sub
adc
in
cli
inc
add
loope
popa
out
push
les
stc
and
movsl
add
push
arpl
pop
mov
adc
pusha
jg
mov
lcall
loopne
pop
mov
xorb
jl
test
sub
outsl
lahf
sub
mov
popf
lods
movb
test
sub
add
or
popa
push
ret
sbb
xor
cmpsl
rcrl
mov
bound
mov
cmp
adc
pop
add
mov
dec
fs
roll
jb
pop
or
sub
bound
outsb
js
mov
and
jae
inc
es
or
orb
lea
orb
cmp
and
cmpb
mov
xchg
add
inc
add
mov
or
mov
xor
testl
sub
arpl
test
iret
ret
cld
cli
je
jo
mov
push
and
outsb
insb
add
pop
fcoms
cld
mov
jmp
test
enter
in
adc
xor
stc
imul
mov
rolb
sbb
jo
push
xchg
popf
repz
jl
fcoml
sbbl
je
lret
hlt
jp
inc
jp
mov
mov
xor
jg
mov
mov
movb
xor
aaa
dec
loop
out
inc
call
pop
cmp
lods
inc
popa
xchg
aam
fcoms
flds
xor
repz
rcr
cmc
inc
lcall
clc
mov
adc
push
sub
xor
and
add
in
sbb
leave
int3
push
pusha
push
mov
shrb
xchg
nop
inc
cmp
mov
mov
aas
clc
and
mov
jb
push
scas
mov
clc
cmp
jb
repnz
inc
roll
xor
jo
or
lods
in
les
sahf
add
xchg
mov
pop
mov
dec
imulb
inc
and
sub
add
iret
ljmp
pop
dec
hlt
aam
pusha
test
cmpsb
inc
movsb
sbb
or
loopw
subl
xor
sbb
inc
push
push
xchg
jne
out
inc
push
push
fwait
sahf
xor
cmp
sbb
xorl
add
jmp
xchg
pop
pop
call
cmpb
pusha
stos
sub
outsl
xchg
add
rcll
out
mov
mov
adc
cmp
ja
sub
push
dec
int
add
mov
adc
mov
mov
push
cld
pop
ja
jb
cmpl
add
and
pop
jns
and
inc
cmp
xor
enter
and
aaa
push
inc
sahf
push
sbb
or
rcrl
push
sub
pop
sbb
add
adc
ds
cmp
push
jb
mov
mov
cmp
inc
push
fs
clc
jl
pop
inc
jne
loope
adc
cmp
push
test
push
pop
jne
adc
jns
inc
mov
jne
push
or
push
mov
or
add
xor
dec
push
and
add
and
jne
cmp
daa
test
daa
push
xor
adc
mov
das
or
add
xchg
std
mov
test
and
jne
sbb
adcl
fs
add
xor
dec
ret
inc
ds
sti
aam
addb
stos
inc
mov
or
push
es
andb
cld
movsb
mov
xchg
push
in
mov
sbb
popa
inc
cmp
and
stos
xorb
idiv
nop
repnz
and
xchg
in
or
mov
shrb
or
sbb
jmp
stc
xchg
lea
xchg
std
aam
shll
pop
into
adc
push
sub
cli
mov
push
push
sub
push
add
inc
movsb
icebp
pop
mov
scas
push
rcr
cmp
testb
dec
es
mov
cmp
out
adc
test
fs
lods
pop
add
add
ljmp
jmp
push
mov
adc
sub
or
sub
cmpsb
sbb
insb
ret
mov
add
mov
push
das
lods
insl
in
test
mov
jns
loopne
dec
popa
pusha
mov
sbb
stos
insl
pop
repnz
fwait
ret
daa
sar
ret
inc
pop
lcall
sti
test
fs
ds
jne
shlb
push
add
adc
pop
mov
std
mov
pop
loope
add
or
push
in
mov
mov
test
mov
push
dec
mov
jl
push
aam
ja
xor
sub
imul
fcmovb
inc
data16
jmp
test
inc
mov
loopne
add
xchg
xchg
jo
imul
or
loopne
hlt
cmp
dec
cwtl
call
sbb
nop
ror
and
scas
aad
push
inc
fisubrs
aas
adc
adc
cmp
push
inc
dec
or
seto
add
hlt
fwait
adc
mulb
cmovp
insb
cli
push
cmp
mov
movsl
push
cmpsb
lea
test
pusha
call
nop
inc
jecxz
stos
aad
cmp
inc
aam
mov
out
loope
fiaddl
add
sub
cmp
inc
jb,pt
fwait
scas
xlat
sub
add
ficoms
cmp
xchg
jb
mov
cmpsl
les
inc
add
enter
in
mov
add
mov
push
xor
test
add
in
in
xchg
les
das
or
inc
out
cmpsl
and
rcl
adcb
dec
mov
stos
fildll
loope
jmp
jne
add
jl
add
mov
and
dec
jb
mov
pop
push
ja
mov
scas
mov
lret
je
add
push
pushf
rcrb
or
adc
decl
xor
orb
sub
sar
jne
fisttps
pusha
enter
leave
or
enter
enter
inc
loopne
pop
mov
lahf
mov
sub
ret
int3
push
xchg
shrl
xchg
mov
jmp
sarb
insb
cmp
mov
loopne
loopne
iret
mov
shrb
js
data16
xchg
imul
aam
sub
jmp
int3
add
mov
pop
stc
pop
jnp
popf
sub
test
arpl
sub
cmp
outsb
mov
jmp
jge
in
sub
cmp
push
sub
daa
insl
pop
push
test
sbb
inc
adc
xchg
add
mov
nop
adcl
cs
inc
mov
addb
pop
lea
xchg
out
mov
xchg
push
adc
or
jne
cmp
pop
popl
mov
push
xchg
cmp
movsl
shrl
jno
mov
jns
xchg
cwtl
loope
movsb
mov
jle
lock
stc
ret
fdivrl
lahf
jne
inc
xor
and
jmp
inc
mov
sub
out
movzbl
add
sbb
or
push
pop
xor
popa
jo
daa
ret
arpl
sub
mov
cmp
xchg
or
psubw
or
stos
or
pushaw
enter
rorb
pop
lods
ret
push
adc
aaa
in
pop
cmp
pushl
or
add
xor
or
orb
pushf
scas
into
syscall
lock
lea
cmp
dec
push
mov
dec
push
les
aas
inc
dec
sbb
cmp
add
sub
cmpsb
push
add
adc
mov
cmpsb
cwtl
inc
daa
icebp
int3
daa
mov
ret
inc
sbb
dec
xchg
dec
mov
imul
fs
jecxz
push
fwait
outsl
les
jae
les
push
mov
jnp
cmpl
bound
sub
sbb
jg
add
xor
cmp
xchg
repnz
xor
xor
mov
mov
loope
in
in
lea
push
add
pop
sub
jle
cmp
sahf
orb
out
jbe
int
cmp
mov
jne
cwtl
subl
inc
push
mov
and
inc
ljmp
push
pusha
dec
iret
or
leave
mov
inc
outsl
loopne
sbb
sub
pop
pop
sahf
mov
outsl
test
sbb
add
loop
xchg
push
push
xchg
add
sahf
int
inc
xchg
inc
adc
iret
pop
cwtl
mov
jae
in
adc
add
add
ja
stc
adc
ret
es
pop
mov
add
cmp
adc
inc
xchg
xor
sti
pop
ret
mov
push
xchg
xchg
lock
and
and
add
icebp
test
sbb
stc
push
push
pop
or
test
imul
lcall
xchg
or
test
in
pop
mov
bnd
inc
pop
mov
out
ffreep
psllq
mov
xchg
push
dec
push
loope
loop
iret
shrl
ja
nop
in
out
fildll
arpl
fs
mov
lods
push
mov
repz
cmp
xchg
aad
inc
loope
xchg
gs
scas
dec
mov
mov
in
sub
rclb
icebp
fs
les
andb
jge
shlb
loop
mov
mov
in
hlt
call
add
mov
int
std
sti
scas
add
inc
sbb
mov
push
or
mov
xchg
push
repnz
aam
add
aam
aam
add
lds
aam
push
les
movsb
cld
test
push
xor
orb
cmp
mov
jle
jle
lds
xor
and
das
sbb
dec
jg
stc
push
inc
mov
outsb
adc
sbb
imul
leave
test
lds
loopne
fcoms
cmp
das
mov
adc
cmpsb
adc
test
xchg
xchg
leave
movsl
jmp
cmp
cmp
dec
sub
loopne
loopne
fmull
call
ret
jp
loop
shlb
push
jmp
enter
mov
cli
xchg
pusha
fnstcw
sti
pop
xchg
jo
cld
dec
cmp
push
add
popf
or
sbb
and
sub
pop
mov
data16
cltd
dec
fisubs
sub
test
lock
test
movsb
mov
enter
push
in
xor
scas
cmp
and
push
js
and
inc
add
add
adc
pop
inc
add
mov
in
push
popf
push
cmpsl
movsl
ret
and
sub
adc
mov
mov
sti
lret
push
and
push
rcrb
sbbl
mov
push
push
dec
rolb
and
out
jno
lock
sbb
test
jp
icebp
mov
cwtl
lods
mov
pop
xor
lea
lea
add
cs
pop
cld
xchg
push
inc
inc
cmp
jb
mov
inc
mov
push
lock
add
jo
stc
jb
sub
push
push
jne
pushf
dec
std
out
popa
fistpll
add
mov
push
sahf
inc
push
or
push
dec
fbld
inc
sbb
add
cmp
dec
dec
int
add
cmpl
pop
mov
adcb
push
loope
and
cmpb
lods
push
add
cmp
sbb
push
lahf
fcoml
adc
test
add
push
and
das
mov
push
fsubl
push
or
adc
jae
cmp
je
or
je
pop
dec
cmp
or
fnstcw
dec
mov
pop
js
ja
lea
jmp
sub
and
dec
call
inc
inc
mov
movsb
jmp
mov
and
adc
mov
and
insb
sub
add
inc
movsl
setge
nop
repnz
sar
mov
and
inc
cmpb
sahf
push
inc
stc
aaa
shll
mov
cmp
jne
cmp
cmpsb
cmp
sub
mov
mov
mov
cmp
jge
cmp
je
std
fbld
cmp
sub
fnstcw
fdivrs
or
fisubs
cmp
jne
lea
adc
incl
dec
xchg
sti
stos
cwtl
clc
es
jg
mov
cmp
mov
mov
dec
push
push
cmp
bound
incl
adc
push
shr
lock
cmp
or
sub
adc
inc
rdmsr
mov
mov
jl
jmp
inc
mov
outsl
add
clc
and
adc
outsb
les
or
cmp
push
cmp
in
jnp
incl
mov
jmp
pusha
je
sbbb
lret
outsl
lds
jp
jmp
rolb
icebp
sahf
cmc
es
outsb
mov
adc
adc
mov
and
xor
or
loop
cmp
jne
in
js
mov
mov
pop
adc
jnp
sbb
and
imul
and
adc
adc
ss
data16
jmp
divb
mov
or
cmp
pop
orb
jg
mov
movzbl
testb
ds
je
or
inc
sbb
aaa
jne,pn
mov
mov
mov
xor
orb
fsubl
jo
sub
adc
mov
sti
cmp
jb
mov
es
cmc
or
pop
movsb
adc
lret
dec
adc
mulb
and
ss
and
pop
sarb
adc
inc
clc
mov
sbb
jae
lock
dec
inc
ds
cmpsl
mov
inc
adc
sub
inc
push
aas
mulb
xor
sbb
int3
add
xchg
push
rcr
mov
sub
ret
cmp
add
inc
or
cmp
adc
fidivrl
inc
add
fnstsw
repz
add
ret
jne
mov
ret
nop
sbb
loopne
ret
push
xchg
sti
ficoms
addr16
add
jmp
add
jmp
mov
mov
lret
outsb
dec
leave
rcll
scas
das
bound
test
inc
mov
inc
and
mov
inc
lock
fxtract
mov
or
rorl
cli
not
cmp
pop
stc
or
or
cmp
std
jmp
stos
je
inc
dec
jl
daa
clc
lea
test
test
inc
sbb
mov
mov
add
xor
ret
sti
jg
test
je
mov
push
xor
je
add
or
jl
lea
xchg
ret
adc
std
and
mov
push
add
adc
jo
adc
out
jbe
ljmp
sbb
sbb
mov
scas
outsl
shlb
add
mov
push
dec
or
enter
cmp
lea
mov
and
out
or
and
mov
mov
shr
jp
sbb
das
in
and
mov
dec
sbb
add
cmpsb
nop
aaa
and
fwait
inc
inc
inc
inc
jg
out
or
sahf
out
faddl
aam
int3
les
lods
mov
mov
call
iret
in
in
lock
hlt
loop
repz
clc
cld
cld
lea
xor
adc
loope
push
lock
jno
sbb
bound
or
pop
nop
cmp
repz
pusha
sbb
sbb
loope
mov
lea
jl
cld
jmp
jl
daa
or
nop
movsb
or
popf
dec
or
outsl
mov
mov
cwtl
mov
enter
jns
lock
je
add
adc
mov
aas
pop
shrb
inc
out
add
add
nop
dec
sbb
lods
dec
dec
push
pop
add
les
mov
mov
iret
repz
push
push
pop
fs
iret
repz
je
movsb
das
sbb
sbb
repz
adc
adc
repz
repz
or
add
dec
enter
or
lahf
mov
add
pop
pop
daa
scas
imul
aas
push
cmp
jno
jb
orl
test
das
jae
or
and
fisttpl
mov
dec
dec
adcb
inc
enter
movzbl
inc
adc
jp
lret
sbb
mov
add
test
inc
fwait
test
inc
inc
jmp
sub
mov
fsubr
inc
add
jne
pop
xor
xchg
in
in
inc
pusha
orl
outsl
js
ss
inc
shlb
iret
pop
bound
cmp
ret
jne
inc
lea
jmp
pop
and
cmpl
mov
fimuls
inc
cmpw
shr
scas
pushf
push
mov
mov
and
inc
cmp
stos
push
icebp
cli
rcrb
adc
scas
cmp
cmp
pop
rorb
fisttpll
push
sbb
inc
inc
jmp
dec
pushl
lods
clc
jecxz
adc
cmpl
mov
xchg
ds
cmp
insl
add
je
daa
lret
fiadds
movsb
scas
jl
test
add
mov
mov
xor
push
mov
and
xor
jb
sub
call
and
mov
adc
mov
movb
subl
push
lods
fstpt
inc
add
or
xor
add
repz
push
pop
push
push
ret
out
inc
in
in
ret
je
cltd
int
ret
pop
fnstsw
mull
adc
cmp
cmpsb
mov
sbb
sbb
stc
call
lea
push
and
push
std
sub
push
lods
pop
lahf
or
test
aas
xchg
cmp
adcl
mov
push
mov
cmp
mov
mov
sahf
inc
push
movl
jb
jne
dec
cld
add
or
jmp
and
test
cmc
or
jmp
mov
push
xor
and
jmp
mov
or
ja
bound
dec
jne
mov
pop
pop
sbb
sub
adc
pop
lock
sarb
mov
inc
mov
js
push
jl
inc
fidivrs
test
test
mov
mov
adc
mov
sbb
arpl
mov
push
mov
lcall
outsb
xchg
push
jmp
jle
push
cld
inc
mov
les
sbb
out
xchg
or
repz
add
nop
out
loope
daa
aam
int3
data16
jo
adc
test
mov
stc
mov
imul
mov
repnz
sub
clc
adc
mov
je
dec
nop
orl
or
out
sub
addr16
push
pop
push
and
or
aam
push
in
out
scas
shll
andl
push
mov
mov
mov
push
fisttps
xchg
es
mov
faddl
sbb
push
cmp
fdivrs
clc
fcompl
fnstsw
sahf
jne
jg
test
test
jne
push
jge
jecxz
clc
sti
sahf
xor
mov
call
out
push
adc
fnclex
ret
ret
mov
movl
mov
mov
insb
stc
xor
loop
cmp
lods
clc
inc
call
nop
jle
outsb
mov
fstcw
fwait
test
stos
std
pop
movb
cld
fistpll
or
leave
shl
data16
fmul
push
enter
leave
dec
enter
inc
add
push
rol
push
cmc
jmp
sbb
fistpll
stos
mov
push
int
xchg
sar
imul
add
sbb
and
mov
ret
adc
lods
push
shrb
dec
inc
xor
pop
testb
pop
mov
mov
add
imul
in
lahf
add
addr16
push
add
or
in
jecxz
pop
call
orb
xor
faddp
or
pushf
pop
push
xor
lock
inc
sub
jne
adc
shll
mov
push
cltd
hlt
in
out
ret
add
shll
mov
jo
jo
add
jo
xor
sub
ss
lock
shrb
movsb
sbb
insb
ret
cld
lcall
idivb
cld
pop
lock
mov
insl
clc
and
xchg
fcomp
lret
fwait
dec
shll
or
shrb
push
xor
call
rclb
add
pop
ja
xchg
xchg
fsubs
cltd
inc
sbb
int3
mov
sbb
addb
frstor
push
add
dec
or
jo
or
call
mov
bound
or
cmpsb
adc
pushf
sbb
or
add
icebp
out
jmp
pushf
call
mov
ja
pop
cwtl
lods
adcb
push
cld
add
mov
add
cmp
mov
cli
pop
add
inc
mov
ja
or
jge
lock
jnp
add
mov
or
add
inc
or
mov
push
and
jbe
xchg
dec
adc
jmp
arpl
fsubrl
mov
ret
cmpl
add
add
mov
push
fsubs
loop
mov
xor
ficoml
push
dec
pop
arpl
push
pop
pop
popf
rolb
xor
into
and
cld
outsb
sbb
mov
mov
mov
jl
jne
fstpt
mov
jnp
xchg
call
ret
add
fs
sub
xchg
and
add
add
addb
push
repnz
or
push
jle
jo
insb
aaa
adc
mov
adc
add
shlb
js
or
pop
test
addb
xor
dec
dec
mov
lea
push
push
in
sbb
sub
inc
mov
mov
mov
adc
jnp
jl
mov
and
jg
stc
mov
push
add
mov
add
jge
in
in
mov
lahf
xlat
loopne
sub
pusha
mov
scas
mov
shlb
mov
mov
nop
fcomps
push
and
inc
pop
add
out
fidivrs
push
test
pushf
movsb
mov
pop
ds
int
aas
rorb
fadds
call
add
pop
sbbl
mov
push
adc
mov
out
pop
jecxz
sub
cmp
pop
jae
push
cmp
imul
dec
add
js
xlat
popf
pop
sub
stc
add
push
jne
xchg
ret
add
sub
mov
ret
fisttpl
rcll
pop
mov
icebp
jne
lahf
mov
jge
dec
mov
mov
add
or
mov
int
pop
test
sahf
shl
rorb
movsl
xchg
pop
idiv
xor
inc
subb
inc
jge
iret
adc
sbb
push
adc
and
or
jbe
lods
test
dec
hlt
scas
jge
pop
es
test
pusha
mov
frstor
adc
notl
dec
or
call
mov
xor
adc
jmp
cld
das
jmp
or
cmp
mov
andb
pop
and
cli
add
nop
ljmp
cmp
jle
add
pop
add
fistpll
adc
add
shlb
insb
je
or
cs
mov
cmp
mov
or
or
sbb
aaa
movsb
add
adc
clc
xor
test
mov
sub
pop
adc
mov
test
into
dec
cs
or
mov
or
enter
jl
jl
jne
jmp
cld
outsl
addr16
xor
adc
and
mov
inc
push
call
add
pop
out
or
in
outsb
adc
push
xchg
out
add
mov
test
sbb
mov
movl
push
xor
aam
pop
pusha
push
int
push
push
push
fcmovnb
incl
jge
rep
push
pop
mov
mov
mov
and
shr
shl
lea
or
fs
in
test
and
stos
fisttpl
push
add
pop
push
shl
sarl
mov
xor
pop
rolb
inc
jmp
mov
inc
adc
mov
mov
pop
shl
dec
shll
push
mov
andb
inc
repnz
rcrb
stos
and
pop
popa
push
add
inc
or
repnz
inc
cmp
pop
das
loopne
mov
std
adc
pop
cmp
test
cld
jecxz
inc
das
imul
mov
adc
push
mov
add
dec
mov
xor
pop
inc
cmp
je
jno
mov
push
adc
out
push
cmp
es
jne
lea
mov
mov
sub
inc
cmp
jne
mov
bound
mov
jg
adc
je
jmp
pop
push
mov
push
scas
xor
or
sub
add
pop
xchg
lock
pushw
sub
sar
dec
in
mov
add
inc
clc
or
push
or
addl
xchg
jo
add
jbe
push
xchg
xor
sub
enter
mov
andb
incb
inc
cmp
jb
hlt
cmpsl
repz
rolb
push
push
or
lock
daa
loop
mov
sub
pop
jp
movhps
dec
sbb
dec
mov
sahf
adc
jg
test
sbb
push
sub
jo
add
fistps
xorb
repnz
test
jne
push
sub
orb
inc
mov
scas
pop
dec
pop
dec
call
sbb
sbb
adc
adc
add
orl
adc
je
je
push
pop
movsb
mov
xchg
inc
pop
mov
add
and
data16
rolb
xchg
push
ljmp
movsl
mov
das
dec
jne
insl
ja
faddl
je
jne
mov
xchg
fimull
xor
or
jae
mov
rcrb
or
sub
adc
add
cmpsl
mov
or
pop
mov
test
sub
cmc
add
cs
jg
adc
push
add
dec
mov
adc
aam
inc
js
loopne
push
pop
inc
or
cmc
sbb
mov
sti
add
sbb
adc
aas
mov
or
or
add
adc
insl
out
push
and
add
pop
loopne
cltd
andw
sahf
jne
stos
mov
test
push
and
sbb
sub
inc
pop
push
add
sbb
jg
push
push
inc
jbe
or
push
or
aam
adc
push
mov
rcll
sub
mov
inc
inc
and
mov
pop
mov
mov
add
mov
popf
mov
aaa
xor
test
or
outsl
cmc
mov
lock
xor
and
cmp
ljmp
mov
repnz
out
roll
dec
or
aam
cwtl
pop
add
or
and
pusha
push
jl
sbbl
ret
pop
ret
sbb
int
lods
out
jmp
inc
cmp
scas
movsb
jae
mov
fs
loopne
pop
mov
adc
jbe
test
sbb
push
add
test
adc
jmp
icebp
ja
push
mov
jmp
movl
in
xor
jge
or
mov
mov
pop
pop
in
mov
leave
sub
je
or
je
out
sbb
or
ret
or
je
jmp
fisubl
andb
mov
jmp
lock
fidivl
mov
mov
sahf
test
add
or
loope
or
mov
fwait
ret
pop
sbb
pop
shrb
es
dec
mov
mov
nop
ffree
jae
testb
rorb
jg
rorb
icebp
xorl
clc
add
and
divl
shr
fidivrs
and
dec
mov
loope
cmp
and
sbb
cmpsb
push
add
mov
sahf
movb
enter
jmp
shl
mov
addl
inc
cmc
rcr
jl
ss
jae
fimuls
lea
pop
lock
shl
mov
cmpl
cmpl
rorb
add
jne
mov
adc
or
adc
jmp
pop
add
stos
testb
mov
push
jmp
cmpxchg
xor
push
mov
in
add
in
or
add
sbb
cli
and
xor
xor
es
sub
repnz
dec
aas
dec
movsl
rclb
push
orl
xor
popa
cmpsb
nop
rolb
mov
ret
mov
mov
inc
rcr
add
add
je
add
jge
push
inc
movsl
mov
pushf
lods
jne
jae
ret
and
push
adc
andb
adc
call
adc
jmp
mov
xor
or
dec
inc
jmp
pusha
roll
stos
mov
cmp
lock
ret
and
mov
dec
negb
cs
into
sbb
loopne
mov
xor
xor
mov
scas
fisttpl
fs
outsb
fadd
loopne
cmpsl
adc
out
je
jo
ds
hlt
cmp
je
push
push
adc
bound
jecxz
push
adc
loopne
clc
xor
xor
jle
xor
mov
add
loope
jne
and
gs
or
xor
jne
push
sbb
je
rolb
cmp
mov
out
repz
scas
and
faddl
aam
mov
pop
arpl
outsb
or
adc
or
sti
jg
rcll
es
dec
add
test
daa
push
jg
movzbl
inc
mov
ficoml
shl
push
push
lock
lock
andb
inc
cmp
or
nop
lock
jne
inc
jns
pop
mov
mov
xchg
test
movsl
shrb
or
xor
cld
adc
ja
sbb
adcl
fwait
dec
in
lea
add
ss
adc
sbb
inc
cld
dec
cmp
mov
outsl
add
push
cltd
test
adc
or
inc
mov
out
sub
inc
in
pop
in
nop
lea
jb
and
jne
popf
rclb
shrb
inc
test
mov
xcrypt-ofb
cmpsl
imul
ja
daa
lock
adc
jbe
cmpsl
inc
cmp
aad
cld
push
jns
xor
fistpl
lahf
rclb
out
add
or
loop
add
push
xchg
in
loop
push
ficoml
lock
mov
push
je
add
test
jne
adc
cmp
je
pusha
push
scas
add
inc
cmpl
adc
bt
pushf
es
rcrb
je
jge
dec
add
ds
daa
and
pop
xor
sbb
sarl
lock
or
lret
pop
adc
sbb
pop
or
fbstp
mov
pop
cmpsb
repnz
hlt
push
or
mov
jae
cmp
mov
adc
ss
cmp
hlt
lock
add
inc
and
aam
inc
popf
test
out
jns
test
mov
ret
sti
sub
jmp
sti
pusha
daa
repz
inc
add
sub
mov
inc
sbb
add
in
bound
incl
dec
dec
cmp
rolb
jo
or
std
adc
inc
ja
cld
and
call
sbb
repnz
mov
bnd
xor
stos
jae
test
push
or
push
popa
cli
add
loope
rcrl
nop
clc
or
call
cmp
mov
jg
outsl
enter
jmp
mov
xor
jmp
rcr
or
jne
div
negl
mov
out
shll
cmp
add
sti
ja
jb
cmp
add
cld
out
out
insl
out
push
push
frstor
mov
push
fnsave
push
jnp
cs
cltd
xchg
or
xlat
pop
dec
iret
jae
push
or
sub
dec
or
imul
push
or
mull
addb
ret
and
add
addb
push
push
fwait
dec
push
sbb
enter
popa
and
sbb
push
aaa
or
sbb
adc
lahf
loope
fdivs
push
mov
jmp
mov
sbb
adc
mov
adc
mov
push
add
add
push
sahf
subb
and
sarb
jg
jl
jp
test
and
jmp
jne
jmp
pop
dec
adc
rolb
push
push
cmp
add
cmp
mov
pop
cmpsl
sub
sahf
xor
repz
push
push
dec
aad
add
loope
je
ss
add
dec
push
imul
add
decl
jmp
push
scas
pop
rorb
xlat
hlt
je
test
xchg
adc
cmp
jne
inc
inc
dec
je
adc
pop
cmp
jne
mov
add
add
mov
adc
inc
test
das
mov
jecxz
in
scas
cli
push
imul
cmpsl
je
push
cld
mov
dec
adc
cmc
dec
out
mov
sub
shr
sbb
ljmp
sbb
push
mov
and
idivb
lret
sbb
out
jne
or
cmc
mov
loop
cmp
dec
mov
sbb
mov
xchg
adc
push
into
xchg
rclb
xchg
rorb
orb
popa
adc
push
inc
sub
dec
dec
cld
add
shl
push
xor
add
sub
adc
add
pusha
mov
adcl
jg
xor
lds
bound
xor
fcomip
xchg
outsl
cmp
and
adc
add
pop
push
jne
out
dec
ret
add
pop
add
mov
sub
mov
adc
jns
repz
xorb
xor
inc
pusha
loopne
or
mov
and
imulb
dec
ret
cltd
push
scas
pusha
inc
aaa
pushf
out
sbb
sbb
pop
hlt
rorb
fimull
cmp
jb
mov
pop
cmp
jbe
add
or
scas
fcmovu
sbb
add
mov
add
sbb
add
in
add
rorl
test
cmp
mov
dec
sub
dec
jne
adc
jne
and
sbb
clc
js
adc
je
sub
jbe
testb
lock
out
mov
mov
pop
neg
sbb
neg
add
idivl
testb
and
push
pop
jle
or
scas
add
cmp
xchg
inc
adcb
pop
cmpb
mov
xchg
popa
out
ljmp
push
cmp
call
dec
cs
and
repz
sahf
loop
adc
inc
subb
or
inc
jecxz
sbb
pop
cwtl
nop
sbb
adc
jge
sbb
popf
test
fmull
add
sub
aam
jmp
into
aad
pop
xchg
sbb
mov
mov
cmp
xchg
movsl
xor
lock
pop
les
jnp
ds
out
daa
nop
dec
rolb
mov
adc
pop
imul
fwait
push
mov
test
sub
xor
inc
jl
and
adc
flds
xchg
mov
add
fistps
inc
mov
jecxz
cmp
sbb
daa
pop
and
mov
ret
jmp
daa
rorl
fdivl
jo
mov
mov
cs
mov
or
sbb
add
sbb
rolb
jno
mov
scas
xlat
add
add
mov
mov
push
pop
into
or
fbld
xchg
fs
shrb
je
inc
mov
push
push
lret
cmp
or
jnp
and
inc
sub
mov
lods
push
outsl
hlt
pop
cmp
lods
mov
add
mov
nop
push
cmp
pusha
or
rorl
movsl
add
jno
cmp
jb
mov
das
sub
cmp
shl
cmp
jae
pop
push
rclb
mov
and
test
pop
ret
dec
pushf
cmc
mov
jge
cmp
outsb
rclb
cmp
cmpb
clc
clc
lea
dec
sbb
mov
pop
lcall
fdivr
ret
das
xor
jo
aaa
inc
orl
loopne
sub
int
mov
jbe
mov
mov
fisubrl
idivl
repnz
cwtl
jp
mov
lcall
add
mov
inc
ret
inc
adc
dec
not
mov
cld
leave
in
out
je
bound
push
push
and
outsb
mov
out
push
mov
jne
ja
mov
add
sarb
inc
shlb
test
pop
and
inc
jmp
pusha
adc
mov
test
je
les
inc
sbb
mov
popa
dec
xor
and
pop
stos
dec
xor
and
cld
push
sub
ds
push
push
ficompl
add
andl
inc
ret
mov
std
sub
mov
mov
stos
or
loope
or
inc
cmpsl
mov
ret
push
les
xor
rcrl
mov
sbb
imul
hlt
inc
aas
in
pop
lcall
lahf
pop
dec
mov
mov
adc
jmp
push
shrb
jne
mov
sub
inc
add
rcr
push
loopne
lahf
aad
fimuls
pop
sahf
pushf
push
add
jmp
faddp
sub
loope
mov
sub
mov
push
push
jp
stc
mov
push
testl
clc
or
ss
repz
sub
xor
rcrl
mov
bound
adc
cmpsl
mov
adc
jne
lods
mov
push
dec
test
mov
push
dec
or
mov
jb
xor
sub
xor
or
test
imul
imul
in
imul
adc
in
scas
hlt
or
push
je
test
ds
loope
fmuls
dec
dec
dec
add
adc
push
inc
inc
sbb
and
sbb
xor
push
daa
xlat
pop
ret
loope,pt
add
mov
sub
aam
je
ret
adc
test
sbb
clc
mov
dec
sbb
mov
dec
add
movsb
pop
or
xchg
pop
cmp
jle
adc
jp
jns
inc
lock
daa
mov
inc
cs
dec
std
in
mov
hlt
mov
dec
lock
or
jle
jl
adc
push
in
jl
and
js
push
pop
jge
adc
xor
mov
pushf
sbb
add
pop
mov
ja
aad
shll
int3
add
loopne
or
lds
outsb
add
je
pop
pop
mov
adc
dec
pop
addb
scas
add
add
sbb
sti
sub
lods
jae
add
mov
lea
lea
loopne
xor
dec
orb
shr
jmp
loopne
inc
lock
mov
in
add
insb
imul
mov
insb
je
repnz
sub
std
jno
and
loope
jg
ss
cmpb
jne
inc
inc
dec
sub
mov
and
cmp
or
test
sbb
dec
in
loope
mov
sub
inc
loopne
movsl
clc
addr16
mov
sub
js
mov
ret
call
fdivrs
jo
insb
and
inc
mov
inc
cld
xor
ret
lods
adcl
mov
and
pop
rorb
mov
incb
cmp
jb
leave
pop
inc
sub
cltd
cmp
lds
dec
test
inc
aam
or
les
lret
jmp
pop
and
pop
mov
es
lea
bound
lret
iret
and
mov
lock
xchg
ret
or
or
shll
push
flds
sbb
inc
pop
adc
insl
pop
add
inc
call
jle
lds
call
jne
pop
mov
ds
cld
shl
add
add
cmpl
je
movswl
shr
movb
jo
int
push
fdiv
inc
cmp
popf
cmp
adc
movsb
add
addr16
mov
xchg
inc
push
mov
and
mov
lock
js
mov
xchg
ret
mov
fidivrs
fistl
out
mov
cmp
push
mov
cmp
inc
in
mov
popf
cmp
or
je
mov
adc
dec
xor
xchg
cmpsb
mov
roll
add
mov
test
data16
sbb
test
mov
vprotw
sti
js
imul
sub
xor
sbb
sahf
jp
cmpsb
push
mov
jbe
dec
negb
je
mov
insb
xor
push
outsb
ljmp
add
inc
or
push
outsl
adc
test
jmp
das
and
data16
data16
adc
push
or
aad
ficomps
inc
js
sarl
pop
outsl
notl
je
or
or
jle
inc
jbe
cltd
jmp
pop
mov
jmp
inc
or
loopne
xor
xor
jg
es
jae
jbe
add
mov
push
cli
jmp
push
or
sub
add
or
icebp
outsl
inc
cmp
mov
or
jne
in
xchg
aaa
stos
mov
and
scas
push
push
push
xor
dec
in
adc
mov
push
addr16
lret
cli
jbe
les
jl
int3
insb
insl
int3
ret
xor
outsl
fidivl
xchg
add
pop
aam
clc
clc
mov
jmp
aam
mov
add
mov
xor
std
fiadds
in
dec
inc
push
movb
push
jnp
push
ret
xchg
hlt
mov
loope
ret
movsb
es
adc
jmp
shll
int3
push
adc
je
and
in
loopne
add
add
pop
hlt
xor
or
cmp
jbe
ljmp
sub
jl
add
and
and
ret
or
jle
fdivrl
mov
push
inc
test
push
mov
rol
pop
in
das
mov
dec
mov
adc
in
mov
sbb
test
div
scas
sbb
and
test
stc
fsubrp
inc
rolb
sahf
out
ficompl
mov
cmpl
decl
js
mov
mov
sbb
add
fisubl
ljmp
or
jne
les
incl
push
sbb
or
push
jle
mov
pop
andl
cmpl
aam
nop
mov
jg
jg
fldcw
dec
jo
es
push
movsbl
iret
lret
push
inc
sbb
insl
aas
ret
dec
loop
sarl
sbbl
movsb
mov
adc
push
cld
cmp
out
mov
adc
inc
cs
push
sbb
cmpsl
add
adc
mov
add
nop
je
jbe
inc
cmp
aaa
test
adc
and
inc
jmp
mov
call
stos
stos
add
push
out
push
pop
cmp
jge
add
sahf
out
jo
or
add
fisttpl
ja
ljmp
loopne
sub
and
out
stos
lea
shlb
js
je
mov
add
and
ja
cld
adc
mov
inc
or
cmc
inc
inc
cmpsb
mov
in
fdivs
rorl
shll
add
shll
rol
mov
pop
xchg
push
jmp
mov
mov
ja
jmp
cmpb
les
cwtl
je
sub
inc
cmp
int3
jb
push
jae
test
std
sbb
add
or
sbb
push
xlat
popa
les
in
mov
pop
dec
and
adc
cld
xchg
jmp
test
mov
lock
jne
mov
movsb
test
inc
call
or
or
push
aas
sub
mov
test
ficoms
or
push
fcomps
rolb
das
mov
add
xor
iret
or
push
xlat
adc
test
in
mov
mov
repnz
xchg
and
imul
shlb
jle
sbb
push
inc
mov
jecxz
jnp
stos
rep
inc
inc
mov
mov
rcrb
push
pop
push
pushaw
call
repz
push
sub
pop
sbb
inc
std
push
jp
mov
imul
cld
pop
jmp
lcall
in
aad
fdiv
ret
ja,pt
cmc
adc
nop
mov
je
and
cmpsl
mov
mov
jecxz
mov
pop
sbb
add
inc
inc
sub
push
xchg
enter
sti
add
mov
jb
mov
mov
popf
cmp
and
loopne
xchg
mov
or
mov
pop
mov
ss
mov
pop
clc
mov
fwait
mov
xor
inc
xor
xchg
mov
adc
ss
arpl
push
and
inc
adc
add
idivl
sub
mov
je
inc
inc
xor
sub
lods
daa
mov
xchg
je
jne
jmp
andb
or
jmp
dec
movsb
pusha
lea
cmpsl
mov
pop
shrl
mov
pop
ja
sbb
insb
aaa
ja
xchg
mov
inc
jmp
cmp
mov
add
inc
fiadds
push
cmc
outsl
mov
dec
cld
mov
push
repnz
and
or
idiv
fstl
leave
fcmovbe
mov
add
and
hlt
fsubrl
dec
emms
shlb
add
inc
dec
imul
push
and
cmpw
cwtl
dec
cmp
and
add
mov
mov
mov
mov
or
sub
cs
adcb
sub
js
std
mov
sti
adc
insb
add
aam
sub
in
and
adc
addr16
push
add
lret
jmp
popf
or
cmp
jl
and
pop
popa
fadds
push
add
popf
jbe
mov
subl
adc
sub
inc
or
xor
inc
fs
sahf
jne
jbe
and
push
add
adcb
mov
sub
je
inc
mov
mov
cmp
jne
sbb
ja
popf
pop
ret
inc
mov
mov
mov
mov
sub
sahf
incl
lret
test
jge
push
pop
add
loop
or
nop
push
or
mov
aad
jle
das
test
adc
int
jnp
cmp
shll
add
in
gs
sbb
test
mov
lods
mov
js
dec
dec
imul
or
mov
insb
into
or
fs
ja
adc
mov
mov
arpl
sub
cmp
jo
shll
adc
aad
pop
clc
and
pop
push
mov
cld
sub
shr
mov
imul
shlb
addb
dec
aad
rcrb
out
xchg
xchg
push
adc
lea
mov
dec
adc
mov
lods
stos
ljmp
je
jle
cli
add
cmp
jbe
push
pop
mov
cmp
dec
jmp
jae
pop
subb
add
rorl
pop
jmp
pop
mov
sub
and
and
loopne
ja
jnp
cmp
inc
push
pop
ja
adc
add
lods
dec
add
push
or
pop
sub
rcrl
adc
cs
add
adc
pop
int3
sub
sub
std
adc
sub
and
sti
add
adc
mov
cmp
in
std
fistpl
fimuls
cmp
and
cmp
je
insb
outsb
or
mov
jno
cmp
mov
lret
shr
not
and
add
fiadds
pop
lret
cmp
in
outsl
aas
push
mov
push
add
lods
push
or
mov
or
mov
sbb
pop
cmp
js
pop
bound
outsb
ret
cmpsb
shlb
sbb
pusha
mov
jae
pop
xchg
arpl
test
jae
dec
rsm
mov
ljmp
sbb
sub
shll
push
mov
ljmp
push
js
scas
icebp
mov
lods
or
mov
cli
repz
jle
xor
add
movsb
mov
mov
push
call
aas
gs
or
sbb
fcmovne
movsb
mov
scas
push
decb
adc
sbb
pusha
add
and
stos
and
push
dec
dec
insb
mov
dec
add
or
xor
mov
or
push
push
dec
adc
push
lea
push
in
pop
ds
lahf
fdivr
or
fldl
inc
sahf
insl
or
movsl
mov
imul
pusha
lret
decl
dec
test
sar
dec
cmp
jge
add
bound
adc
xchg
mov
sub
lret
mov
shr
sbb
mov
subl
sbb
and
decb
iret
lahf
fadd
sub
ret
adc
xor
jae
fnstsw
jne
mov
cmp
dec
adc
in
jmp
xor
dec
jae
ds
sub
cmp
in
es
repz
pusha
aam
testb
je
push
sbb
add
lock
and
jbe
mov
sbb
cli
mov
sub
cmp
aaa
mov
or
xor
movsl
aaa
movl
xchg
sbb
mov
pop
cmp
mov
sub
jmp
rcr
scas
imul
int
and
pop
test
mov
shl
inc
jmp
mov
stc
xchg
sub
push
scas
push
dec
sar
dec
cmp
jle
pop
push
lcall
dec
popa
mov
jge
add
shll
cmp
and
mov
decb
jne
repnz
push
add
and
jmp
dec
sub
andb
sub
mov
insb
xor
arpl
enter
add
add
mov
ljmp
adc
jle
hlt
mov
jae
stc
icebp
mov
mov
or
cmp
dec
push
jne
jle
decb
jge
cmpb
sub
add
into
shr
or
xorl
pop
jmp
push
mov
lea
inc
push
jnp
arpl
sub
or
dec
and
jle
in
mov
mov
scas
insl
cltd
and
add
inc
add
xor
mov
inc
lea
jne,pt
cmp
mov
xchg
cmp
hlt
hlt
das
pop
fbld
mov
lea
adc
movsb
je
add
jne
xchg
sbb
fidivrs
mov
mov
inc
loope
adc
ss
push
adc
xor
out
shlb
or
inc
xchg
adc
mov
push
lcall
repnz
repz
sbb
mov
mov
incl
inc
mov
jp
sbb
jno
inc
dec
jbe
aas
add
sahf
loopne
ret
outsb
imul
add
xor
in
inc
or
mov
cmp
in
stc
or
shl
add
push
cmpsl
add
xchg
add
stos
jge
call
inc
out
dec
in
mov
jae
sbb
push
push
or
mov
stc
movl
xlat
fnstsw
sub
add
sub
sub
sub
call
fstpt
in
dec
mov
dec
or
push
pop
fwait
add
inc
fs
les
mov
mov
push
test
hlt
mov
jne
cld
inc
clc
add
js
mov
and
xor
adc
add
mov
xlat
lea
sub
mov
shr
or
jo
push
add
mov
mov
add
mov
int
mov
es
add
push
cmpsb
call
jp
pop
lock
orb
pop
cmpsl
clc
lea
mov
sub
adc
lds
nop
dec
add
mov
enter
mov
and
into
add
inc
mov
loope
stos
sar
dec
mov
loopne
lods
shrb
push
pop
dec
hlt
lea
stos
int3
pop
addl
lcall
pop
cmpsl
or
adc
add
and
xchg
inc
iret
lret
test
into
and
and
and
roll
mov
xor
inc
xor
out
and
mov
sub
push
clc
sub
fdivrs
xchg
push
mov
stos
in
inc
dec
insb
pop
xor
and
cmp
sbb
and
jbe
mov
cld
aaa
xchg
sub
test
inc
movsb
dec
fmuls
pushf
into
je
and
mov
push
xlat
dec
je
add
push
in
in
repz
mov
or
add
dec
and
mov
jmp
jno
jo
jnp
aad
add
inc
subb
pop
fisttpl
ret
popa
add
lds
cmp
bswap
and
dec
mov
add
loopne
xchg
test
mov
lcall
in
clc
cwtl
int3
sbb
subl
in
cmpsb
lret
stos
sub
aad
data16
or
xor
or
lret
dec
add
scas
dec
mov
push
loop
jae
jo
les
jl
fstpl
por
mov
mov
sti
xor
cwtl
mov
adc
sbb
insl
shlb
lcall
je
inc
in
mov
std
adc
popf
ret
rcll
fadds
in
dec
inc
mov
dec
daa
cmp
sub
xor
ret
cmp
jae
orb
push
add
movl
jge
jecxz
xchg
je
push
fsubl
jnp
xor
cmp
test
lret
adc
jge
popa
fsubl
xchg
call
or
jae
test
push
mov
mov
adc
sub
mov
dec
mov
or
jle
pop
aad
mov
lods
dec
or
cmp
inc
add
in
jnp
or
test
add
jle
enter
addl
jge
test
js
test
add
sub
jns
fldl
xor
loop
and
pop
cmp
or
mov
fdivr
shlb
lods
fiaddl
adc
xchg
pop
pusha
xor
stos
mov
inc
adc
out
adc
or
lret
jmp
test
jne
add
das
jne
mov
add
jb
xchg
mov
outsb
and
lock
mov
sub
jb
push
enter
call
or
clc
lods
adc
pop
sub
stc
or
enter
cmp
pop
dec
ret
outsb
push
andb
cmp
sub
mov
and
adc
pop
pop
mov
push
add
rclb
cmp
dec
rcrb
mov
cli
cmp
hlt
and
or
ret
fidivs
lcall
lret
jl
cmp
jbe
push
lea
sbb
shll
adc
movl
or
dec
inc
dec
shrb
jle
push
into
jl
ja
and
mov
push
mov
pop
mov
je
adc
mov
sbb
sbb
pop
test
fnstsw
or
inc
push
mov
mov
aas
and
or
stos
inc
in
xchg
out
mov
out
add
arpl
xchg
add
jge
aam
cmp
movsb
movsb
add
or
lods
push
jo
jne
pop
aad
mov
dec
dec
jno
mov
jle
outsb
lahf
outsb
sub
orb
cld
mov
xor
adc
inc
cmp
xchg
rcrl
add
or
mov
jo
insl
cmp
jae
cmp
add
adc
shlb
inc
or
push
add
or
add
mov
or
xchg
xor
mov
data16
sub
or
addr16
jmp
jmp
shll
inc
shrl
push
sbb
push
dec
ret
out
shr
push
xchg
adc
lea
push
adcl
clc
lea
mov
dec
jae
add
sub
test
adc
loopne
scas
add
add
fcmovb
add
xchg
lea
lock
sbb
add
push
push
inc
inc
jmp
mov
add
inc
jmp
or
push
push
icebp
push
sbb
add
outsb
out
lea
divl
hlt
push
data16
mov
mov
inc
mov
inc
inc
push
mov
mov
sbb
bound
sub
test
int
xor
mov
jle
sub
sbb
adc
inc
shll
fsubrp
scas
mov
jmp
outsb
push
ret
inc
lock
mov
imul
adc
inc
add
clc
js
je
cmpl
fisttps
lods
add
or
lea
jbe
sbb
push
mov
sub
mov
add
sahf
shr
loopne
pop
fdivl
movsb
add
push
mov
adc
jne
mov
push
inc
push
mov
sub
push
lock
leave
lock
cmp
xor
push
lret
cmp
mov
mov
arpl
sub
rolb
or
sahf
xchg
add
shrb
ret
pop
ret
outsb
mov
or
out
or
decl
lods
fldl
ds
jle
ret
je
dec
inc
lods
shll
outsb
rorb
ret
inc
cmc
rol
les
sbb
jae
or
sub
and
loopne
sbb
mov
add
mov
xchg
and
or
popa
out
sub
sub
inc
or
lcall
mov
jo
clc
adc
mov
insb
and
xor
adcb
fistps
pop
or
mov
test
je
in
mov
cmp
js
or
and
je
and
dec
add
test
xchg
movsb
sbb
testb
mov
or
sbb
nop
adc
and
dec
imul
and
and
shl
or
fcmovnu
jns
adc
sub
andl
xor
fldl
shr
xor
cmp
add
iret
std
add
scas
sub
je
cmp
ret
mov
or
test
adc
test
out
mov
hlt
push
add
and
inc
pop
pop
or
pop
pop
push
mov
mov
cmp
or
push
andnps
sub
or
lret
pusha
pop
movsl
inc
mov
jmp
pop
sub
mov
andl
add
out
movsb
pop
and
and
jecxz
sbb
mov
shl
test
or
jmp
mov
test
adc
pop
inc
invd
add
rcll
loope
and
sbb
icebp
dec
and
jecxz
pop
cmc
or
sbb
jbe
mov
push
negb
and
pop
pop
dec
call
cmpsl
mov
addr16
inc
or
dec
in
push
add
sti
add
pop
lock
jns
out
test
fisttps
mov
mov
cld
outsl
pop
mov
jne
orb
jmp
adc
pop
ret
or
or
testl
add
push
push
popw
adc
lods
imul
and
inc
jge
fldl
jmp
adc
pop
fldl
fstpl
mov
push
push
cmp
pop
push
sub
pop
je
test
cmovno
pop
sub
jmp
mov
scas
push
neg
or
push
xor
or
xchg
sti
clc
mov
dec
cmp
add
rolb
int3
inc
mov
mov
cmp
dec
filds
lock
nop
loope
loopne
adc
add
sbb
test
ja
inc
outsb
inc
ja
fchs
fstpl
pushf
imulb
outsb
aas
xor
dec
cwtl
push
jb
adc
pop
dec
inc
test
and
cwtl
push
fistps
fstpl
mov
test
mov
sbb
xchg
lret
or
insl
sub
pop
loope
and
popf
xor
rcll
ds
push
pop
xchg
fildl
xor
js
into
sti
or
xor
mov
jmp
test
les
shlb
enter
cli
cmpsb
mov
sub
cld
pop
cmp
jge
or
repz
sub
test
xchg
ds
insl
hlt
sbb
je
add
shl
ss
sub
sbb
js
mov
push
pop
pop
je
imul
lcall
and
out
mov
pop
pop
mov
xor
es
js
sub
push
in
in
sub
inc
xlat
push
mov
mov
push
lock
sbb
xchg
and
icebp
sub
lcall
cmp
dec
jne
pop
inc
pop
push
xchg
popa
inc
fdivl
push
mov
xor
push
pop
insb
dec
sbb
jg
push
inc
popa
in
adc
sbb
shrb
lods
push
int3
inc
cmp
test
int
cmp
mov
mov
jmp
hlt
add
add
add
push
test
or
jg
jmp
test
add
mov
cmp
or
loopne
int3
aam
mov
frndint
insl
xchg
scas
scas
mov
add
mov
push
jo
aas
pop
adc
push
jp
jge
lock
or
push
or
aam
and
jmp
sub
data16
sbb
push
mov
pop
mov
or
incl
sbb
xor
pop
pop
sub
out
push
push
mov
roll
xchg
add
out
jb
adc
andb
mov
dec
push
gs
push
xchg
cmpsb
push
fstp
shll
adc
dec
subl
jmp
mov
sbb
dec
jmp
adc
out
xor
xor
sbb
les
test
push
fsubrl
sub
inc
push
ss
or
out
dec
lahf
inc
cli
jo
mov
xor
sarb
sbb
fnclex
sbb
sahf
mov
les
shlb
dec
cld
or
dec
lods
js
cld
pop
in
or
or
sub
or
sbb
fwait
scas
and
sbb
adc
xchg
enter
fld1
fdivp
fstp
sbb
fldpi
xor
movsb
rolb
inc
push
push
dec
loope
pop
pop
and
add
clc
addr16
fdivl
fmull
inc
jbe
insl
insl
lock
call
out
or
movsl
mov
push
rolb
push
push
call
dec
ss
dec
cmove
call
out
and
pop
inc
pop
je
inc
daa
stc
push
pop
xor
push
fnstsw
mov
pop
inc
and
inc
inc
mov
mov
or
repz
cmp
or
lret
in
mov
inc
cmp
and
sub
or
loope
inc
inc
stc
inc
in
in
dec
cmpb
je
lods
lret
cli
mov
add
adc
mov
sbb
add
fwait
aam
jb
mov
mov
lret
enter
push
fsts
cld
xor
mov
adc
je
mov
mov
lods
xor
rcll
sub
mov
in
mov
push
xor
jmp
pop
push
jnp
rol
push
inc
add
ds
shlb
out
aas
addl
jmp
adc
mov
xor
push
add
xchg
push
sbb
mov
xchg
adc
push
popf
sarl
sub
enter
cwtl
lods
dec
aaa
sbb
outsb
enter
inc
mov
fbld
mov
dec
jns
neg
es
lock
fs
sbb
idiv
jp
push
jb
pop
cltd
or
fisubrl
or
or
lret
xchg
pop
cli
add
js
or
pop
mov
mov
xor
xchg
loopne
addl
lods
sbb
jp
test
xor
rolb
ret
push
adc
sbb
xor
adc
outsb
jle
add
jne
movb
add
jg
mov
btc
pop
xor
and
clc
cmp
cmpsb
mov
pop
mov
hlt
inc
jnp
sbbb
neg
jmp
push
ljmp
out
push
pop
push
push
inc
add
adc
ret
sub
addr16
add
cwtl
dec
adc
sbb
or
aad
divl
mov
push
arpl
xchg
push
cmp
setl
mov
dec
int3
mov
sub
jge
xchg
or
sub
push
mov
mov
cmpsb
and
inc
or
and
or
add
pop
mov
lret
push
dec
or
mulb
sub
stos
inc
or
xlat
hlt
inc
or
mov
or
sub
fidivs
out
data16
out
pop
dec
loop
mov
ds
sub
mov
adc
shlb
sbb
and
sub
fnsave
add
adc
inc
add
mov
add
daa
adc
enter
xchg
sub
jle
dec
outsl
xorb
xor
aaa
in
pop
je
sub
or
cmpl
aad
je
sahf
js
jbe
dec
in
adc
jg
ret
mov
and
add
push
adc
call
xchg
mov
mov
pop
das
xor
mov
cmp
in
jle
jnp
lock
or
scas
push
aas
jl
sbb
inc
add
push
das
jo
add
mov
push
add
ret
sbb
push
cmp
test
dec
insl
push
adc
enter
int3
mov
into
or
add
sbb
push
and
push
test
mov
add
or
insl
xor
fistl
roll
push
mov
pop
sbb
call
and
inc
js
ss
mov
jg
cmp
jg
mov
loopne
pushf
out
ret
sarb
mov
test
clc
jle
jbe
aaa
dec
cmp
sub
push
inc
or
push
adc
data16
jmp
cwtl
push
xchg
in
dec
push
imul
push
pushf
mov
dec
add
dec
cmpb
cmpsl
hlt
push
cmc
sub
xchg
cltd
xchg
rcll
clc
pop
mov
jle
cmp
rorb
repnz
jns
ret
imul
sbb
icebp
mov
jae
cmp
jl
cmp
mov
fdiv
jg
dec
cmpsb
lcall
shlb
dec
hlt
lods
push
cmpb
mov
addb
add
aad
nop
ficoml
cmpsb
fst
fnsave
jmp
cmpsb
jmp
lods
push
stos
xor
push
push
pop
and
shll
xor
mov
push
lods
and
sub
testb
dec
mov
mov
sbb
sbb
or
addl
add
and
or
adc
in
sub
je
sbb
add
inc
add
push
pop
lods
lock
or
imul
insl
sub
in
sbb
in
enter
cmp
insb
xor
sub
cld
mov
cmpsb
mov
testb
sahf
dec
movsl
mov
mov
ljmp
and
dec
pushf
xchg
lock
jnp
xchg
rcrb
sub
cmp
pop
in
pop
add
sub
out
addb
xor
push
adc
pop
jl
nop
loopne
inc
mov
pushl
js
mov
icebp
mov
dec
cmp
add
inc
pop
pop
dec
push
mov
aam
sbb
es
xor
stos
leave
test
or
or
mov
jb
aam
sbb
pop
cld
jne
jnp
sub
mov
ja,pt
pop
aam
in
mov
repnz
fs
ret
cmp
test
iret
and
mov
fists
mov
in
std
scas
cmp
inc
loopne
sti
cmpl
jbe
sbb
and
cmp
xchg
push
push
jle
stos
fcomp
cmp
cmpl
js
lret
sbb
dec
inc
or
sub
mov
jne
cmp
sub
pusha
sarb
adc
add
subb
sbb
or
xor
push
aam
cmp
push
add
cmp
push
das
mov
fldcw
push
hlt
xor
cmp
add
push
sbb
jae
add
adc
push
cmp
jle
je
sti
push
fldl
xchg
inc
mov
or
xchg
xor
add
fadds
cmpsb
addr16
cmp
addb
je
imul
push
inc
ja
and
cmp
shlb
lea
ljmp
xor
jmp
push
push
mov
mov
jge
daa
nop
push
fwait
jmp
test
sub
sbb
aad
jmp
push
popa
bound
sbb
lret
dec
clc
xchg
ror
test
add
and
sarb
xor
or
add
add
pop
filds
adc
add
fsubs
adc
push
mov
popa
je
lea
pop
es
and
jne
mov
add
inc
pop
pop
cwtl
or
leave
adc
and
andb
pop
cmpsl
push
pop
shr
pop
pop
int3
cs
mov
cmp
stos
cwtl
jo
jl
add
inc
fucomip
dec
rorb
das
pop
sbb
pop
lea
addl
inc
mov
daa
popw
xor
inc
push
aad
es
lods
ror
add
and
sbb
popa
push
mov
cmp
not
pop
cltd
xchg
adc
xor
rcrb
xchg
adc
lods
cmp
cmp
hlt
add
inc
call
sbb
js
enter
xchg
sub
sub
cmp
shlb
in
je
push
xor
adc
and
and
dec
shrl
je
push
or
sub
adc
pop
push
mov
lods
add
pop
and
sub
rcpps
push
neg
inc
sbb
pusha
or
das
sub
stos
jo
enter
sbb
test
xor
push
ljmp
adc
push
pop
jne
sahf
stos
sub
and
pop
ss
cmp
inc
add
xor
dec
sbb
dec
notb
std
pusha
ffree
out
jle
mov
loopne
sub
add
jo
shr
in
push
addr16
sbb
int
push
inc
lods
mov
inc
jnp
aas
jne
or
inc
cmp
je
xor
pop
jg
lods
jae
pop
lds
popa
or
les
stc
add
add
test
xchg
or
pop
cmovnp
loop
xchg
sbb
insl
sbb
jl
sbb
mov
ret
test
push
cmp
adc
stc
sar
iret
push
test
mov
mov
and
and
xor
in
jo
jle
inc
andl
dec
loopne
inc
inc
push
add
push
dec
into
add
cs
rolb
add
sahf
imul
pop
testb
cmp
mov
in
mov
xchg
dec
mov
pop
inc
sahf
push
shlb
xchg
cs
bound
mov
mov
inc
add
mov
and
test
inc
cmp
xor
adc
add
xor
and
mov
push
cmp
call
jne
jnp
or
lock
cli
mull
cli
cli
popf
das
cwtl
es
lcall
xchg
sbb
mov
mov
or
add
or
hlt
stos
or
add
mov
inc
adc
enter
sbb
out
mov
imul
sub
es
dec
cmp
sbb
add
xchg
out
pop
pop
movb
inc
mov
jae
push
stos
push
mov
add
js
inc
mov
adc
adc
mov
inc
mov
jmp
cmp
jne
repnz
nop
add
add
lcall
xor
jle
lock
jge
jb
je
std
inc
je
push
and
add
cmc
xchg
int3
inc
clc
or
stos
mov
inc
outsl
push
test
lcall
pop
cmp
je
cmp
lods
cmp
dec
stos
mov
bound
add
cli
into
add
or
rol
push
pop
mov
inc
cmp
jnp
shr
add
xor
clc
push
jg
pusha
sub
sti
sub
je
or
je
push
lcall
lods
cmp
frstor
fisttps
jg
leave
and
mov
mov
test
lods
mov
inc
jmp
xchg
shrb
push
cld
or
or
push
add
mov
test
jne
or
inc
lret
pushw
cmp
push
or
xor
push
jne
adc
cmp
push
pop
fwait
jp
add
push
sub
push
into
adc
push
mov
push
je
popa
and
dec
sbb
lret
jge
ret
xchg
xchg
or
pop
add
sbb
or
adc
adc
pop
loopne
add
aad
jle
mov
jne
decb
cmp
je
testb
inc
testb
cmp
jl
jmp
mov
jmp
mov
push
shl
add
xor
or
jo
ds
cmp
jle
cmp
ficoms
cmpsb
mov
add
or
or
adcb
je
loope
jge
or
inc
and
sbbb
inc
cmp
add
sbb
dec
mov
aad
push
mov
addr16
push
int
adc
lret
outsl
arpl
aas
mov
gs
xchg
sahf
push
mov
push
push
test
or
jp
lods
xor
fistpl
push
imul
mov
mov
push
cld
push
addr16
adc
psadbw
mov
add
sub
dec
push
and
out
cmpb
mov
jmp
sahf
out
call
cmp
sti
push
add
cmp
loopne
repz
rorb
or
mov
push
aad
hlt
out
loopne
inc
sarb
jmp
cmp
jg
je
or
je
or
push
fstpt
or
inc
jmp
cmpb
jne
or
xor
add
lea
and
lret
aas
nop
es
jmp
inc
bnd
insb
push
mov
or
jmp
jbe
sti
jmp
mov
dec
dec
sti
adc
iret
adc
add
xchg
mov
xor
inc
aam
push
push
jl
jge
xor
push
cs
cltd
mov
cmp
mov
orl
xor
push
outsb
add
sub
arpl
test
mov
jmp
sbb
sbb
shr
loopne
or
hlt
lock
outsl
jg
mov
sbb
add
fs
scas
add
add
mov
addr16
or
sbb
push
jno
xor
and
clc
dec
pushf
jbe
mov
or
mov
fs
pop
inc
sub
cs
ljmp
add
add
sub
pushf
out
xor
push
mov
and
push
andnps
subb
rcll
orl
loopne
and
cmp
bound
dec
mov
sub
mov
pop
mov
cmpsb
adc
cmp
mov
scas
in
push
inc
mov
lods
sbb
push
pop
inc
xor
in
sub
fildl
stc
push
nop
in
mov
sti
mov
dec
inc
adc
movb
mov
pop
pushf
add
and
push
adc
and
dec
or
xchg
cs
or
daa
inc
pop
pop
inc
mov
sub
fwait
sub
mov
xchg
decb
mov
mov
mov
mov
push
xchg
or
sbbb
xor
dec
ljmp
arpl
mov
repnz
sbb
and
ret
mov
push
mov
cmp
push
cwtl
mov
ret
and
popf
pop
jno
cmp
ret
sbb
xchg
xchg
inc
cmp
cmpsl
je
sub
jnp
jecxz
and
mov
jp
icebp
add
sbb
adc
xor
add
lds
fisubl
cmp
pop
aam
or
movsb
js
ret
mov
sti
mov
jae
cmpsb
outsb
xchg
push
xor
xchg
fabs
pop
ret
lahf
mov
pop
jo
dec
popa
and
xchg
pushf
sub
les
mov
jne
mov
inc
push
cmpsl
and
mov
cwtl
pop
adc
jge
je
inc
cmp
xchg
push
xor
ss
cmp
jae
mov
jmp
pop
movsb
xchg
ret
cmp
ja
nop
pushf
add
jg
repnz
mov
mov
xor
add
cmc
decl
inc
dec
jne
xor
jmp
sarb
inc
jnp
rorb
ljmp
loopne
add
mov
clc
mov
add
push
test
aaa
add
jmp
mov
in
testb
loop
sar
adc
or
shll
and
push
popf
jne
or
xchg
cmp
popf
decl
rorb
dec
push
call
add
ret
xchg
adc
es
xor
aam
add
mov
add
pushaw
cmp
and
xchg
sarl
lret
or
mov
push
scas
setl
push
outsb
jmp
dec
xor
cmp
add
lmsw
or
mov
mov
jne
test
add
stos
sbbl
or
notb
stos
daa
fmuls
sbb
push
mov
dec
jp
mov
pusha
add
adc
lahf
push
subb
add
mov
push
inc
faddl
cmp
and
sbb
leave
sbb
roll
test
je
dec
jmp
dec
roll
lods
neg
and
je
mov
mov
sub
mov
or
cmp
call
shl
jmp
lea
shl
jmp
fwait
imul
call
loopne
push
mov
jl
sarb
add
fists
inc
xchg
jns
dec
xchg
xchg
into
popf
or
stos
rolb
arpl
jmp
fsubr
adc
repz
mov
cmp
or
inc
jmp
or
lods
add
inc
jns
clc
ret
nop
cli
in
adc
or
daa
sbb
push
enter
in
insb
les
push
push
jne
xchg
pop
pusha
adc
outsb
jne
mov
pop
xchg
mov
divb
subb
int
sub
das
sbb
in
xor
mov
cmp
jne
dec
fbstp
jle
sub
pop
xchg
loope
pop
sbb
adc
jmp
pop
dec
adc
xor
decl
js
mov
xchg
or
push
inc
xchg
push
push
dec
arpl
sub
bound
lods
jnp
sub
pop
push
inc
clc
push
xor
out
je
inc
adc
and
mov
ret
pop
sbb
xor
les
mov
popa
mov
cs
movsb
xorb
add
add
inc
nop
add
xor
or
xor
push
pop
xchg
inc
xor
mov
jle
lea
xor
cmp
popf
out
push
mov
sti
dec
je
dec
decl
shll
adc
rcll
outsb
jl
in
xchg
jl
out
xor
adc
adc
incl
push
clc
xchg
mov
and
mov
or
je
mov
iret
mov
rcll
add
mov
inc
cmpb
mov
loop
xor
fld
xchg
lea
bound
insl
and
sbb
pop
loop
dec
es
inc
xor
mov
push
xor
push
jmp
imul
mov
orb
jne
push
mov
adc
jmp
mov
push
jge
addb
jl
pushl
rorb
scas
and
jo
adc
xchg
push
push
loopne
loopne
in
or
push
pop
ja
push
inc
cwtl
or
mov
addb
mul
arpl
jmp
lcall
add
inc
aas
push
push
add
inc
loope
and
xor
pop
in
je
jmp
sbb
pop
sub
out
push
jmp
mov
mov
jmp
pusha
es
adc
inc
das
testb
bound
int
xchg
pop
jmp
adc
pop
inc
pushl
adc
mov
sbb
and
movsl
or
inc
xchg
jo
cld
cmpl
sub
xchg
inc
inc
or
ds
push
adc
lock
add
inc
jge
or
rorb
jbe
pop
test
shll
in
arpl
adc
or
inc
jge
dec
loope
les
mov
mov
or
sub
jbe
loop
or
outsb
xchg
push
inc
jbe
push
lea
les
lret
int3
aam
push
and
pop
sbb
or
pop
imul
xchg
shll
add
into
mov
adc
xor
daa
cli
xor
jo
xor
cmpb
sahf
lods
mov
adc
and
mov
jo
in
outsl
leave
or
rcrl
jne
mov
pop
pushf
sahf
loope
data16
inc
inc
je
dec
xorb
and
jbe
bound
sbb
cmp
inc
mov
xor
dec
lcall
inc
cld
enter
shll
push
xor
and
pusha
push
sbb
mov
aaa
aam
pop
cmp
inc
cli
aas
add
test
mov
test
adc
cmp
sbb
enter
or
jmp
rorl
xor
push
inc
inc
icebp
sub
inc
loopne
lods
data16
add
cs
andb
sbb
les
add
mov
jo
fdivl
jnp
fnstcw
ret
inc
scas
jmp
pop
cmp
dec
inc
fistl
push
or
push
fcomps
out
push
sbb
and
add
dec
mov
jg
mov
cld
sub
inc
push
lret
gs
or
sub
fmull
sbb
xor
je
push
push
or
in
enter
pushf
push
data16
mov
push
sbb
xor
stos
js
js
loope
shlb
jecxz
pop
and
mov
dec
ljmp
push
lock
repz
dec
loope
sbb
add
add
movsl
mov
popa
jl
cmpsb
jmp
neg
or
stos
vmread
sub
xchg
sbb
inc
add
pushf
sub
add
push
add
ret
cld
loopne
jp
mov
add
add
stos
pop
add
mov
and
dec
jmp
test
inc
xchg
sub
mov
lcall
xor
icebp
xor
fimull
test
push
pop
jle
inc
test
rcll
ucomiss
sar
add
add
push
test
and
ret
sbb
or
std
in
enter
or
loopne
mov
sub
add
addr16
ja
lea
mov
sub
add
popa
dec
pop
in
adc
shll
cmc
imul
jbe
mov
subb
out
pop
icebp
mov
mov
cltd
test
dec
clc
fildll
out
jl
xor
and
lret
jne
cmpl
adc
jl
cmp
popa
and
fadds
adc
sbb
pop
or
test
orb
and
ret
inc
dec
jbe
adc
pop
movsl
andl
je
loop
das
subl
dec
andb
andl
add
pop
sub
inc
inc
pop
push
jl,pt
cwtl
and
jae
push
add
jge
xor
push
push
repnz
popf
add
jmp
cmp
push
push
fs
add
sub
subl
pop
cmp
test
adc
and
subl
inc
not
push
arpl
sbb
push
pop
add
cli
imul
mov
int3
ret
in
sub
in
das
and
push
adc
into
scas
fsubrs
fdecstp
ret
out
push
mov
sar
jecxz
xchg
repnz
mov
mov
cmp
jae
and
test
cmp
jne
sbb
icebp
pusha
xorb
mov
or
in
mov
add
ret
hlt
mov
and
sub
or
jo
out
or
add
fstpt
push
repnz
rorl
jle
inc
mov
and
or
mov
jl
or
or
cld
arpl
cmp
mov
adc
jmp
jne
je
inc
sbb
int
andb
notb
mov
ds
add
adc
call
jle
and
mov
in
popf
sub
pusha
and
and
jne
push
into
notb
or
aaa
xorb
pop
inc
sbb
cwtl
lock
jne
std
cmp
add
adc
cmp
jge
aaa
adc
lea
sub
or
or
xor
sahf
in
jne
mov
or
dec
pop
mov
adcl
leave
xchg
dec
scas
pop
cmp
xchg
push
cs
lea
in
and
or
call
out
scas
shll
or
push
and
orl
or
xchg
roll
adc
decb
push
pop
adc
cmp
mov
je
mov
push
loopne
and
add
adc
add
jne
or
push
lea
mov
je
pusha
punpckldq
adc
add
dec
and
mov
add
add
push
ret
pop
stc
push
test
scas
push
les
dec
out
fldt
cwtl
cmp
inc
or
jbe
inc
sbb
ja
sbb
cli
push
push
push
mov
mov
cmp
bound
jp
loopne
aas
int3
ret
je
cmp
loopne
add
fs
pop
jmp
lea
and
out
mov
js
adc
mov
xchg
mov
call
in
inc
cmpb
and
push
add
or
popf
add
std
outsb
jne
pop
xor
rcrl
mov
sbb
sub
and
and
std
xchg
xchg
add
add
lret
popa
pusha
ja
push
push
inc
dec
pop
or
shl
push
inc
sub
addb
xchg
adc
inc
or
jle
push
pop
dec
dec
xchg
imul
mov
jo
mov
je
pop
es
stos
and
shlb
jo
inc
mov
or
les
hlt
adc
cmp
inc
mov
inc
cmp
sub
push
pop
rcl
pusha
xor
push
mov
inc
inc
pop
aad
into
fistpl
sbb
cmp
cmp
inc
cmp
add
testb
sbb
lret
or
adc
jae,pn
jne
pusha
dec
jbe
data16
jp
call
jb
cmp
add
fcmovb
das
enter
ret
inc
mov
cwtl
ret
or
xchg
sub
inc
jb
sub
sub
push
push
sub
or
or
push
jo
ret
or
ret
in
sete
or
jmp
rorl
js
or
movb
inc
loopne
pusha
xor
add
xor
cmp
aas
mov
jp
cs
sbb
push
aas
aaa
inc
mov
add
pop
adc
sub
popa
mov
add
ret
sbbb
xlat
dec
insl
insl
loope
jne
fs
divb
mov
aad
mov
gs
add
aam
push
pushfw
sub
jge
lret
addl
cmp
out
lea
sar
or
mov
clc
sbb
add
sub
xor
cmp
je
gs
cs
je
cmp
and
add
jbe
inc
bound
pusha
shrl
rolb
sbb
add
addb
arpl
push
ss
insb
cmp
xor
pop
sti
or
sub
inc
aam
popf
jne
fidivrl
scas
or
push
imul
movb
bound
push
inc
xor
pop
inc
xor
in
or
push
fisttps
loope
inc
mov
insl
fs
adc
insb
fiaddl
jnp
fwait
js
ds
popa
enter
popl
inc
push
push
lea
call
pop
orb
xor
xor
dec
push
add
sbb
jo
lahf
add
insb
in
inc
mov
mov
stos
or
or
sub
std
mov
jmp
push
pop
fidivs
adc
pop
sub
jmp
fcomip
sub
sbb
adc
add
andb
lret
into
sub
lret
jo
sbbl
aad
sub
sbb
movsb
mov
mov
add
inc
rcll
test
jl
ffree
lods
adcb
cmp
xchg
ja
test
dec
loopne
push
jae
dec
xchg
cmp
adc
inc
sbb
mulb
das
movsb
imul
fisubs
in
test
pop
lret
sub
push
mov
sbb
clc
push
jne
mov
stos
pusha
incl
push
sbb
pop
mov
sub
sub
pop
pop
dec
pop
outsl
or
mov
lock
or
push
sub
mov
icebp
adc
pop
mov
adc
call
or
and
test
bound
pop
xchg
ljmp
rorb
mov
or
add
jb
adc
data16
jns
mov
or
dec
ret
cmpl
das
pusha
adc
data16
ja
push
aam
sub
pusha
mov
or
pop
inc
push
cmp
sub
test
js
outsl
or
add
shrb
icebp
xor
mov
cmpl
ds
adcb
dec
loope
mov
in
xchg
mov
push
xor
sub
mov
xchg
adc
xchg
add
std
movsl
push
addr16
test
or
test
loopne,pt
lods
adc
cmp
pusha
xor
sbb
jne
xchg
shl
fmull
leave
mov
test
fisttpl
or
stos
mov
cs
das
and
mov
sub
cmp
mov
enter
mov
jp
je
not
and
pop
or
add
push
ja
or
in
test
daa
sub
add
testl
dec
pusha
xor
shlb
aam
test
int
insl
mov
rorb
int
cmp
adc
and
dec
or
add
adc
fisubrl
mov
mov
insl
mov
jns
jp
adc
or
jne
or
jmp
or
jmp
or
jecxz
or
cmp
lock
std
ja
cld
cwtl
insb
pop
pop
test
pop
mov
js
outsb
or
push
cmc
mov
adc
add
add
ret
sbb
lret
mov
bswap
mov
cmp
or
movsl
je
mov
sbb
pop
adc
add
jne
or
or
pop
sahf
add
dec
adc
or
add
pop
sub
loope
pop
ret
adc
sub
dec
or
shl
not
test
jne
pushf
add
jl
xchg
hlt
lea
xor
sbb
add
jl
ss
sbb
arpl
addl
sub
pop
push
mov
dec
sbb
insb
add
adc
sbb
pop
adc
out
call
push
pop
and
mov
cmp
or
add
movd
ret
pop
cltd
addr16
or
mov
and
repnz
rolb
test
add
adc
sbb
aaa
cmp
test
inc
mov
clc
int3
add
enter
addl
ret
fwait
cltd
mov
push
ss
or
xchg
ret
movups
push
pushf
leave
dec
xchg
dec
or
shlb
sub
insb
cltd
push
nop
and
ja
add
nop
rclb
pop
xchg
out
or
into
cmp
testb
mov
mov
rorb
xchg
bound
aad
sbb
divps
push
pop
loop
fistpll
mov
loopne
mov
or
adc
dec
add
push
or
jecxz
mov
loopne
js
lds
imul
or
std
pop
addb
dec
push
or
add
and
jecxz
xchg
mov
cmp
and
add
call
push
push
rcrb
out
and
cmp
push
and
testl
sub
sub
inc
add
sub
ja
inc
pop
lahf
inc
push
dec
jecxz
inc
push
cmpsb
dec
xchg
loopne
jge
cmp
fdivrs
sub
imulb
in
sub
push
mov
jl
insl
test
inc
insl
fidivrs
mulb
pop
cmp
jl
sbb
or
dec
mov
lds
dec
add
inc
push
popa
xor
out
out
cmp
andb
inc
add
inc
adc
pusha
hlt
and
cmp
jg
es
xchg
inc
xchg
imull
bound
icebp
or
incl
sub
push
mov
fmull
shlb
xor
test
and
cmpsl
cli
call
mov
dec
aas
or
rolb
jmp
je
and
dec
inc
xchg
jl
adc
jbe
ds
or
push
fbld
xor
pop
mov
mov
and
mov
adc
jne
insb
xchg
rcr
inc
cmpsb
dec
jl
cmpb
jl
hlt
cmp
out
addb
jmp
pop
push
outsb
dec
xor
push
incl
sbb
sbb
fdivr
push
sti
pop
cwtl
sub
sub
test
ds
and
pop
lea
and
cmp
mov
test
test
mov
adc
mov
xchg
xlat
push
ret
xor
and
mov
push
ret
scas
mov
mov
fcompl
and
popa
cmpsl
iret
inc
sub
adc
xchg
pop
inc
setl
insb
and
xlat
fidivrs
push
jo
or
mov
mov
rcrl
cmp
rorl
dec
add
adc
inc
lea
or
xchg
into
adcb
leave
mov
shr
or
lea
mov
dec
fidivrl
outsb
fs
movsb
pop
mulb
iret
cwtl
dec
or
cmpsl
xor
jno
stos
push
inc
and
movsb
xor
add
pusha
mov
andb
adc
add
mov
mov
and
pop
jo
jb
mov
mov
into
fstps
pop
push
mulb
scas
in
aaa
les
data16
mov
push
xor
loopne
mov
add
sub
ret
add
shll
and
adc
nop
rol
adc
or
jmp
int3
mov
add
dec
push
fucomp
sub
lcall
push
add
jo
adc
clc
xchg
je
jg
adc
lds
cmp
fisubs
add
pop
and
loope
add
fsubrl
aaa
mov
jo
loop
ds
and
adc
pop
in
lcall
and
sbb
je
ret
lods
inc
insb
fsubr
adc
jo
ja
adc
pop
sbb
push
ret
enter
rorl
xchg
lret
je
cmp
mov
aam
mov
mov
add
mov
sub
add
xchg
mul
push
push
pop
es
add
cmc
mov
ja
mov
addb
pop
aas
cmp
pop
or
imulb
cld
or
or
sub
pop
push
inc
rorb
add
adc
decl
stos
fadds
ds
adc
dec
hlt
orb
mov
sub
sbb
xchg
lock
jmp
pop
dec
incl
or
mov
adc
repz
add
push
lods
or
mov
sub
or
xor
insb
add
js
je
add
jl
je
cli
dec
lahf
push
nop
jmp
push
pop
ret
jmp
insb
adc
adc
cwtl
lahf
jne
rcrb
jl
mov
data16
mov
adc
lods
or
adc
popl
sbbb
int3
repnz
sub
add
int
mov
les
sub
ret
movsl
xor
into
xchg
mov
add
adcb
dec
pop
push
cmp
mov
adc
lods
ljmpw
add
dec
mov
sbb
jl
xor
rcrb
das
fcoms
push
sub
adcl
push
jb
cmp
jne
sti
scas
imul
shlb
cmp
dec
js
fimuls
xchg
push
sub
fstpt
mov
inc
jae
les
jae
shld
shl
push
rcl
and
shl
add
pop
mov
and
test
js
add
test
cs
or
rol
dec
nop
fiadds
es
or
enter
push
jne
cmp
push
push
push
sub
push
testb
xchg
lea
daa
pop
and
add
out
lahf
or
sub
or
add
or
dec
popa
idiv
incl
xor
clc
rcl
popf
mov
mov
or
or
icebp
inc
or
cmp
test
cmp
push
push
or
testl
adc
and
pop
and
push
sub
pop
cmp
jecxz
xor
mov
icebp
imul
add
daa
inc
xchg
jecxz
sub
mov
ret
add
adc
adc
pop
or
add
sbb
dec
insl
push
lods
daa
cmpsb
xor
insb
cmp
test
sub
aam
orl
pusha
aas
imul
and
or
jb
xchg
in
das
push
out
cmpsb
jnp
mov
stos
inc
sub
cmp
es
or
adc
pop
into
lods
scas
xchg
xor
imul
add
mov
push
pop
jecxz
xchg
dec
or
jge
les
add
cld
and
pop
push
jmp
xor
xor
mov
cmp
imul
push
cmp
mov
cmp
nop
pusha
aas
and
jne
inc
pop
xchg
add
es
imul
es
dec
stos
xor
dec
cltd
into
xor
insb
and
jo
push
movsb
shlb
add
mov
jb
shl
shr
adc
mov
sub
or
add
xchg
xor
mov
add
pop
push
int3
cmp
push
push
sbb
mov
add
adc
xchg
nop
jb
cmp
inc
fildl
push
sub
xlat
adc
push
push
or
add
in
negb
xrstor
sub
test
xor
sub
sbb
popf
mov
inc
cmp
push
aas
push
inc
push
jmp
push
add
lcall
sti
and
sarb
push
xchg
adc
mov
aaa
aas
repnz
jge
cmp
jl
pop
dec
cld
mov
lret
enter
fcomi
imul
jg
pop
adc
pop
push
xchg
lds
xchg
push
xchg
xchg
xor
sbbb
xchg
sbb
loope
test
aas
add
pop
add
push
aad
movsb
jp
je
andl
cli
mov
stos
mov
les
call
or
sar
lea
push
pop
dec
rcr
clc
cs
push
add
cmp
pop
test
pop
cmp
jg
jbe
sbb
sub
add
call
call
sbb
jne
pop
mov
pop
insb
and
enter
jg
into
jle
sub
jmp
adc
dec
ret
or
adc
dec
pusha
shrb
mov
ret
and
insl
filds
fstl
jl
outsl
pop
sub
adc
mov
xlat
jne
push
mov
add
xor
jns
add
stos
dec
sbb
adc
mov
inc
and
loope
jp
cmp
inc
lea
pop
movzbl
add
scas
scas
test
mov
sbb
mov
dec
sbb
sbbb
mov
add
repnz
fadds
add
sbb
fildll
lock
mov
movsb
je
and
adc
dec
sbb
mov
pop
inc
call
dec
jo
lock
and
pop
mov
mov
push
inc
jecxz
outsl
rorb
cld
sub
xor
pop
mov
pop
xchg
xchg
arpl
lea
mov
xchg
xor
add
mov
lea
sbb
cs
andb
jae
or
and
loop
adc
idivb
aas
shr
or
mov
fwait
lods
mov
shr
shl
push
sbb
pop
repnz
out
jmp
fstps
shl
shr
or
push
mov
inc
cmpsl
xchg
call
int3
mov
outsb
cld
dec
inc
dec
ret
mov
adc
jbe
jo
outsl
movsb
test
shlb
into
lret
add
xchg
push
or
xchg
xor
dec
xor
loopne
cmp
inc
arpl
daa
adc
mov
adc
pop
cmp
mov
repnz
or
out
xchg
mov
xchg
add
pushl
add
sarl
imul
push
mov
jmp
and
or
pop
cmp
aaa
mov
dec
in
push
rcrb
dec
adc
fsub
push
stos
or
mov
add
mov
add
and
or
outsl
xchg
or
out
es
jle
mov
clc
or
xchg
sub
insb
or
outsb
sti
xor
push
loopne
jl
or
jg
push
jl
dec
cmp
inc
movsl
pop
fstps
fstl
sub
push
data16
fcmovnbe
jbe
xor
sbb
pop
jmp
mov
adc
or
jl
mov
mov
xchg
add
mov
je
xor
jle
jle
jl
lcall
cmpsl
sar
loop
push
sti
dec
push
cmovnp
ja
dec
fs
push
add
shll
sub
cli
cmp
and
add
adc
or
add
sbb
cwtl
fwait
js
mov
sub
stos
push
jmp
adc
push
jecxz
sub
mov
dec
fs
repz
popf
pop
inc
adc
pop
or
inc
cmpsb
or
xchg
jne
xchg
mov
mov
lea
iret
adc
adc
fs
fs
scas
inc
adcl
mov
cltd
add
pop
sbb
fmull
popf
jnp
dec
cmovae
or
pop
dec
adc
negl
inc
jmp
lock
mov
mov
fdivs
addl
pop
pop
pop
dec
sti
mov
inc
stos
or
addr16
sub
xor
or
inc
and
pop
pop
mov
je
rolb
jg
mov
mov
pop
inc
test
mov
xchg
rcrb
cmp
decl
cld
jbe
cmpb
jl
incb
jo
mov
dec
adc
gs
movsl
pop
add
sti
xor
mov
loop
dec
enter
push
in
mov
stos
inc
xor
jge
add
loopne
dec
rcll
sbb
sub
cmp
cmpl
and
adc
jl
sub
aam
xor
mov
and
pop
cmp
mov
lahf
jnp
xchg
rol
lock
ljmp
js
nop
ret
std
nop
pop
jbe
mov
xchg
rolb
stos
nop
pop
imul
sub
dec
les
push
mov
inc
or
in
adc
inc
je
out
mov
dec
inc
cli
cmp
sarl
and
sbb
mov
fcoml
enter
imul
int3
push
in
jns
out
out
jmp
sahf
jmp
in
out
sti
out
aas
fildll
add
rol
inc
add
pop
jo
fimuls
mov
jecxz
push
cwtl
sbb
adc
andw
xor
add
add
fsubr
mov
sub
xchg
mov
inc
cmp
aad
test
add
or
mov
sahf
mov
cs
and
sbb
pop
add
mov
into
add
adc
cmp
add
out
inc
lds
mov
iret
inc
jmp
dec
xchg
sahf
and
mov
pop
or
mov
dec
mov
lea
inc
ret
sar
repnz
scas
enter
lock
jge
xchg
push
lock
aas
jb
inc
xor
testb
dec
bound
add
and
mov
or
jnp
ss
and
pop
and
mov
clc
cli
movsb
sbb
sbb
aam
sub
sbb
jne
jae
pop
add
neg
mov
push
cmp
jle
cmp
dec
xor
int3
pop
mov
or
inc
mov
push
repnz
mov
and
mov
stos
xchg
jbe
in
movl
fwait
push
sbb
and
decl
cmpsb
push
add
fimull
popf
xor
stc
xor
xor
paddw
dec
jmp
mov
xchg
loope
sbb
sub
sub
mov
or
sbb
pop
jecxz
cmpsb
bound
pop
hlt
fnstcw
cmp
pop
add
andb
roll
mov
orb
mov
inc
add
test
sub
or
cmp
xor
and
sbb
sbb
sub
xor
mov
sarb
inc
mov
rorb
and
inc
cmpsl
or
ficoml
out
dec
cwtl
enter
out
push
movsb
cmp
cmp
jo
sahf
or
sbb
pop
and
mov
lahf
adc
icebp
mov
and
jae
sub
pop
or
mov
lea
adc
sub
inc
sbb
add
or
jne
xor
xlat
and
cmp
mov
pop
out
adc
loopne
adc
mov
clc
or
mov
stos
adc
mov
add
pop
rorl
add
aaa
add
add
fs
inc
js
aaa
add
push
adc
inc
testb
shr
xchg
push
outsb
fisttps
cs
fiaddl
add
add
outsl
and
sub
and
gs
inc
push
jmp
and
pop
inc
jge
push
aas
lds
jns
xchg
sbb
jno
ja
xlat
cmpl
mov
test
or
sub
fdivr
pushf
inc
jge
and
push
ljmp
and
testb
shlb
pop
movsb
adc
jnp
lahf
xchg
fwait
and
mov
or
movsb
lods
add
js
gs
sbb
rcrl
aas
sahf
loop
inc
fs
push
cmp
mov
cmp
mov
cmp
or
clc
insl
adc
jbe
and
bsf
pop
fwait
mov
pop
jge
add
push
and
inc
cmp
add
mov
mov
shll
or
mov
cs
and
or
clc
and
and
inc
inc
mov
and
and
outsb
fisubl
sub
lods
fwait
js
pop
cli
std
mov
aas
ja
push
and
mov
mov
fs
data16
sbb
test
pusha
lahf
int3
fbstp
inc
add
or
push
cmpb
push
in
cmpsb
sti
add
cmp
cmp
inc
testl
dec
push
insl
cs
or
dec
or
mov
dec
nop
dec
cmp
outsb
inc
test
adc
add
nop
push
adc
add
inc
add
inc
cmpb
cld
sbb
inc
pushf
sub
lock
in
jp
insl
hlt
add
out
adc
adc
mov
insl
mov
jg
andl
or
or
out
mov
in
or
jg
or
pop
inc
cld
jge
movswl
fadds
ret
mov
faddl
mov
add
hlt
dec
pop
jne
cld
sarl
sub
push
fcoml
jnp
cmp
and
dec
push
xor
fiadds
cmp
cmpsb
adc
sbb
pop
or
stos
ss
mov
push
cli
inc
adc
jmp
loop
insb
mov
out
in
jae
cmpsb
insl
mov
insb
fimuls
mov
push
je
add
in
jp
mov
sbb
jmp
neg
sbb
xor
test
mov
push
bound
xchg
and
rorb
pusha
cmp
je
jge
xchg
sarb
lods
loop
adc
inc
je
push
loope
or
mov
inc
mov
pop
xchg
daa
jo
pop
orl
or
or
mulb
mov
pop
cmp
sahf
jl
data16
aas
jae
dec
lea
and
mov
push
xor
mov
or
cmp
int3
loope
rolb
sub
or
xor
cmp
add
test
fmuls
jg
and
and
jo
popa
pop
ret
addr16
xorb
jle
scas
gs
or
pop
add
push
mov
add
ja
mov
movl
push
push
jle
aaa
adc
xor
ds
cmp
push
pop
ss
mov
xor
cwtl
mov
sbb
and
inc
mov
and
jne
cmc
ret
jp
adc
lret
jmp
pusha
insb
xor
mov
mov
jne
push
mov
jo
push
or
jbe
sbb
aas
jmp
cmp
outsl
imul
pusha
push
add
or
pop
ds
mov
cmp
jle
push
mov
mov
lea
sub
xchg
sarl
fcomps
scas
adcb
jnp
pusha
inc
ja
push
insl
jl
popf
add
mov
scas
or
or
and
xor
pop
jle
jne
jg
jecxz
mov
dec
pop
data16
scas
push
inc
sub
les
faddl
jb
cmp
cmp
je
mov
lret
icebp
aas
ss
add
lret
inc
out
xlat
mov
movsl
jnp
popa
cs
leave
movsl
popf
xchg
sbb
negl
hlt
imul
movb
cli
or
rolb
xor
cmp
movsl
push
sub
test
dec
and
mov
daa
loopne
fnsave
push
cmp
xor
jns
xchg
out
repz
addb
pop
mov
cld
mov
addl
xchg
loopne
loopne
or
jnp
fldl
or
mov
subb
mov
push
rorb
test
pop
mov
aam
je
mov
jb
xchg
sete
mov
sbb
mov
dec
adcb
cmp
jmp
inc
sub
rorb
push
add
addr16
insl
imul
jne
xor
add
out
cmp
cmp
leave
inc
adc
dec
push
cmpl
mov
pushl
lea
xchg
inc
ja
jns
or
adc
jmp
push
push
add
aas
in
dec
ret
cmp
xor
xor
sbb
add
cli
mov
mov
rcr
jb
xchg
outsl
adc
cmp
or
andl
add
pop
push
popa
mov
add
and
test
in
pop
sub
pop
call
inc
mov
inc
neg
sbb
not
and
adc
sbb
fadds
lock
xchg
push
pop
or
xor
repz
mov
dec
movb
push
in
mov
imul
int3
sub
imul
mov
cld
push
inc
leave
repnz
xchg
mov
add
add
inc
inc
addb
or
mov
subl
mov
aam
adc
cmp
in
or
test
pop
or
dec
daa
xorl
das
sub
and
or
data16
push
test
mov
loopne
sub
sarb
ret
jp
jmp
fsubrp
add
cmp
or
jmp
jl
xor
lods
and
pop
push
sub
add
rcrl
fsubs
sbb
mov
push
addr16
adc
and
mov
xor
pusha
daa
jno
cs
inc
push
jo
add
shrb
cmpsl
shlb
or
push
jl
xor
ds
sbb
sub
dec
sub
xchg
inc
push
jnp
dec
xor
cmpsb
out
and
adc
push
add
mov
scas
mov
test
xor
push
and
cwtl
movsl
pop
sbb
lock
pop
cmp
add
push
ja
adc
sbb
lcall
sbb
jmp
shr
repz
out
lea
cmp
pop
imul
in
outsl
cmp
mov
dec
dec
int3
push
jmp
packsswb
and
cmp
shlb
fisttpll
inc
xchg
in
inc
jp
out
mov
push
mov
push
sbbl
or
add
mov
jecxz
add
xchg
inc
enter
dec
les
jo
repnz
push
mov
jge
nop
xorl
pop
scas
js
xor
bound
xchg
or
in
loop
aas
cmp
and
add
and
add
sbb
or
mov
jg
subb
cs
mov
inc
cmp
je
mov
ljmp
cmp
sbb
and
add
add
xchg
sbb
test
sbb
sbb
jb
xor
ljmp
lahf
movsl
adc
pop
fcomps
add
fbstp
sbb
je
nop
addl
in
xor
std
add
cmp
ja
sti
inc
jb
ds
fistpll
cmp
cmp
jo
iret
es
je
cmp
into
jmp
data16
xchg
and
fisubrs
ljmp
and
inc
pop
fsub
shrb
ret
sub
pop
ret
call
add
and
in
pop
aaa
dec
sub
add
loope
dec
shrb
pop
sarl
stos
xor
sub
movl
inc
jns
pusha
dec
loopne
pop
xchg
je
push
sbb
cs
adc
shll
cmpl
mov
add
push
ret
inc
adc
add
cs
dec
fadds
add
mov
movsl
popa
or
or
cmpsb
int
loopne
adc
fnsave
arpl
xor
mov
loopne
push
push
dec
and
int
dec
xor
add
jbe
push
leave
data16
cmpsb
cltd
das
dec
sbb
or
mov
dec
pop
dec
outsl
out
push
je
or
cmp
enter
insl
idivb
xor
stc
mov
push
cmp
push
push
inc
push
push
jns
push
mov
jne
iret
lret
dec
dec
pop
cmp
add
and
inc
pusha
dec
cmc
popa
mov
shlb
popa
mov
daa
push
les
or
addl
jmp
fwait
testb
jno
pushf
lods
in
mov
ja
mov
xchg
mov
movsl
mov
xchg
mov
mov
xchg
mov
mov
fdiv
jo
je
push
push
dec
inc
add
xor
fstpl
movb
sub
mov
cmp
sub
nop
mov
add
sub
aas
popa
fs
enter
and
push
push
push
or
icebp
sbb
movsb
dec
xchg
or
sar
movd
dec
fs
punpckldq
repnz
add
inc
jmp
pop
cld
push
cmp
mov
add
mov
ss
fs
or
xor
push
or
mov
cmp
out
mov
add
pop
mov
and
cmp
add
dec
shrb
jge
push
pop
out
enter
xchg
jl
mov
loopne
jge
inc
and
pop
imul
push
sti
mov
subb
ds
lea
mov
inc
sub
stc
xor
mov
push
icebp
sub
cmp
lea
insb
push
jp
mov
sbb
jmp
imul
stos
jns
ds
push
inc
andb
movsb
mov
dec
enter
adc
xor
lock
push
sub
mov
pushf
imul
adc
mov
mov
in
clc
cmp
mov
fidivl
sarl
sbb
xchg
loopne
jo
sub
lock
nop
pushf
imul
dec
jg
add
movsb
add
push
and
and
jle
decl
push
push
das
xor
xor
cmp
and
je
outsl
jnp
cld
pushl
jp
je
outsl
outsb
cmp
dec
outsl
sbb
add
mov
jno
mov
push
add
pmaddwd
inc
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
xor
fdivrl
jmp
rclb
mov
xlat
call
xchg
xchg
sbb
mov
repnz
repz
test
sbb
in
insl
push
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
ljmp
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
push
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
cli
incl
mov
movsl
in
lahf
xor
mov
js
stc
mov
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
lcall
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
cld
call
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
jg
pushl
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
ljmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
decl
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
out
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
jmp
popf
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
lret
xorb
sbb
push
imul
aam
loopne
jmp
ficoml
int3
dec
fldl
mov
mov
mov
aad
mov
call
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
ljmp
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
cmp
mov
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
inc
fs
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
decl
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
call
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
nop
orb
cmp
incw
lcall
adc
sahf
gs
clc
sar
imul
push
js
or
call
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
insb
cld
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
or
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
negl
std
add
sub
aas
incl
dec
or
sti
sub
inc
add
push
push
add
sbb
push
fidivl
adc
bound
in
std
jmp
sub
push
pop
pop
or
aaa
xor
push
push
pop
push
and
add
pusha
push
jg
add
js
pop
sub
add
xor
sbb
add
insb
add
repz
idiv
fildll
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
das
mov
inc
jle
push
push
inc
push
push
in
outsb
dec
cli
xor
xor
data16
js
ljmp
fs
push
push
arpl
jae
jg
jnp
fs
cmp
aas
sub
outsl
outsl
jb
ss
insb
cmpsl
je
arpl
jae
push
mov
jno
subb
xor
pop
out
fsubr
fiadds
dec
addr16
loopne
ja
outsl
xor
adc
sti
popa
or
mov
sarb
inc
inc
insl
roll
jae
jb
add
adc
enter
int
xchg
push
sbb
stc
dec
inc
push
dec
loopne
into
rcrb
xchg
lahf
dec
into
jbe
sti
xchg
add
lahf
push
add
bndstx
pop
stc
add
add
dec
dec
add
add
fmulp
mov
mov
outsl
lea
jae
in
push
das
jecxz
rcll
mov
je
push
js
sub
push
sub
sbbb
jb
imul
jb
sub
pop
push
lcall
pop
jnp
dec
dec
inc
sbb
inc
and
push
add
in
xor
cmp
sub
insb
je
inc
mov
mov
imul
stc
pop
jo
dec
aaa
outsb
ret
sub
fmuls
jne
push
jo
ret
imul
ljmp
jae
outsl
ss
fs
mov
xor
jbe
mov
jne
dec
arpl
adc
cmp
mov
fcomps
or
lock
cmpl
imull
gs
and
je
fnsave
out
push
cmp
nop
outsl
or
aaa
fisubrs
insl
les
jb
pop
insb
outsl
arpl
adc
dec
das
imul
add
inc
jb
pusha
push
andb
insl
inc
xchg
insl
insb
roll
pop
xor
lahf
and
fisttpll
mov
inc
mov
jne
stos
scas
xor
mov
push
outsl
or
or
decl
jge
pop
add
data16
jae
inc
sub
and
jne
pop
cmp
jb
jns
or
push
sbb
cmp
add
add
rcrb
imul
syscall
in
popf
dec
mov
dec
test
pop
cmpb
push
push
push
inc
ss
fldt
loop
nop
or
dec
js
or
add
inc
lret
jo
xor
jbe
pop
aaa
das
mov
gs
cmpsb
je
sbb
jbe
add
jo
cli
sub
mov
popa
addr16
and
xlat
outsl
js
xor
push
dec
inc
dec
add
dec
dec
inc
add
cmc
cs
das
dec
push
lret
push
lcall
push
pushf
insl
rclb
ljmp
call
xchg
jbe
sub
fldcw
inc
test
add
push
dec
push
push
inc
fistpl
add
outsl
add
adc
jno
mov
iret
lea
mov
sub
mov
add
pop
add
iret
add
or
fs
pop
addl
fidivrl
fidivs
push
out
push
push
add
andb
jns
pop
jg
es
mov
nop
sbbb
enter
mov
cld
pop
inc
pop
and
xchg
pop
leave
jnp
inc
xchg
add
dec
mov
pusha
jbe
outsb
xchg
push
aaa
fistpl
es
pop
pop
aaa
push
push
outsl
dec
mov
outsb
push
orb
setge
ds
aaa
pop
and
sbbl
adc
jmp
fs
ss
out
aam
xchg
mov
or
outsl
out
jns
jb
shlb
in
add
fsubrl
mov
sub
and
xchg
dec
faddl
sub
push
dec
into
push
adc
test
mov
mov
push
in
push
enter
push
jmp
push
xchg
xor
ss
mov
jg
jmp
pop
sub
sub
xchg
mov
jmp
xor
sbb
pop
and
inc
js
insb
outsl
imul
pcmpeqb
pop
sti
je
cmp
das
sbb
add
add
in
stc
jg
bound
insb
xor
xor
ret
cmc
sub
or
push
jmp
pop
dec
or
push
scas
mov
or
decl
insb
in
cltd
cwtl
cltd
cltd
ret
and
cltd
adc
test
std
push
fsts
movsl
lcall
mov
lea
adc
push
imul
shrb
xchg
rol
pop
popf
fdivrl
push
adc
mov
data16
lcall
sbb
cmpsb
adc
lods
std
call
arpl
outsb
sbb
adc
lcall
xchg
lret
iret
data16
gs
sahf
mov
repz
and
leave
add
cwtl
repz
sub
jle
lcall
fwait
cltd
sahf
and
pop
adc
popf
repz
lret
xor
popa
leave
leave
mov
idivb
sbb
adc
inc
xor
adc
fbld
pop
pop
fbstp
mov
iret
lret
lret
jle
mov
std
and
jae
leave
push
jno
xor
enter
or
and
shlb
ja
jno
addr16
in
leave
jmp
sub
push
cli
fdivr
std
jmp
ljmp
in
cld
sbb
cltd
fsub
lock
idivb
cmp
std
aad
sti
jmp
jmp
xor
ljmp
aaa
imul
fmul
cmp
xchg
sti
lock
cmc
lock
cltd
clc
cli
jmp
dec
sbb
push
dec
in
inc
test
add
pusha
mov
jae
daa
fmuls
pop
xor
cs
insb
jae
das
mov
pushl
arpl
arpl
das
repnz
push
addr16
push
aaa
sti
jnp
jno
in
add
aad
ja
fs
jo
in
push
aad
xor
pop
push
fstpt
dec
push
xor
xor
notl
ja
sti
gs
enter
das
jne
sbbb
es
gs
gs
jae
lods
in
in
arpl
stc
or
push
sahf
add
push
scas
fldl
and
sbb
daa
jne
bound
xor
ds
or
fldenv
daa
addr16
bound
gs
xor
fildl
jno
imul
lcall
add
fnstenv
rclb
sub
inc
lock
imul
outsb
outsb
divl
xor
aaa
mov
scas
pop
push
xor
xor
xor
cs
add
mov
sbb
pop
jo
cli
xor
add
jge
cld
xor
xor
cmp
insl
popa
dec
cmp
lcall
xchg
gs
push
dec
sbbb
jo
adc
add
add
push
jg
push
add
and
mov
incl
inc
ss
mov
lahf
call
dec
pusha
sarb
add
inc
or
push
scas
xor
fdivr
jmp
std
int3
inc
fs
mov
pusha
pop
or
scas
sub
jl
ficoms
adcb
ljmp
dec
into
adc
outsb
jb
dec
inc
push
inc
addr16
aam
mov
add
rorl
cmp
lahf
gs
push
xor
sub
add
or
xchg
insl
aas
enter
fdiv
add
cmc
pop
leave
pop
les
int
fs
xchg
out
mov
mov
nop
or
mov
or
cs
out
nop
inc
and
xor
dec
mov
or
push
in
or
pop
data16
or
adc
shll
or
aaa
xchg
decl
jo
cwtl
xchg
cwtl
dec
rclb
test
dec
mov
insl
lds
scas
or
sbb
inc
cmpsb
loop
punpcklbw
out
sar
add
cmp
add
jmp
dec
cltd
cltd
icebp
mov
jp
add
add
stc
sti
jo
mov
or
mov
inc
adc
aaa
in
sarl
ljmp
iret
push
cmpsb
fidivrs
subps
add
push
xchg
push
mov
xor
push
push
ss
add
add
pop
xchg
and
das
and
stc
mov
or
add
mov
pushl
dec
add
pop
pop
bound
loopne
jg
addr16
add
push
fcompl
outsl
cmovg
push
movl
push
pop
push
pop
push
imul
push
cmp
push
or
push
je
outsl
fbstp
pop
jo
jo
pop
gs
popa
jo
push
pushw
call
dec
icebp
push
inc
cmpl
cmpl
jne
add
pop
push
leave
loopne
aas
shrl
addl
and
aaa
xor
xor
lods
movsl
xchg
adc
adc
sub
jmp
imul
add
jl
mov
ja
mov
push
inc
add
cld
ja
dec
dec
add
dec
push
inc
inc
pop
and
les
xlat
ret
add
mov
add
cmc
nop
or
cmp
imul
cmc
jnp
sbb
std
cmp
and
dec
fnstsw
xchg
adc
add
icebp
ficompl
call
cltd
icebp
in
int
adc
sbb
jne
lods
lahf
mov
dec
icebp
or
mov
mov
mull
inc
icebp
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
jg
data16
sub
adc
test
jne
adc
mov
pop
fnstsw
movsb
adc
mov
roll
aad
adc
int
enter
push
out
fldt
fwait
test
data16
lcall
dec
adc
movsl
adc
mov
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
std
lcall
xchg
lcall
in
jle
adc
mov
xchg
rclb
test
jl
adc
pop
jno
add
xlat
xchg
jne
addr16
decl
jbe
jns
push
je
mov
jne
xor
jle
pop
loopne
cmp
xor
add
bound
adc
xchg
xchg
xchg
add
pushf
shlb
popf
dec
add
popa
mov
mov
rep
pop
popf
iret
mov
add
rolb
mov
or
jns
cmpsb
add
jge
add
push
jbe
es
push
add
std
mov
cmc
imul
mov
cmpb
test
push
dec
inc
jb
xchg
pop
repnz
bound
add
and
push
fstps
push
dec
and
dec
inc
push
inc
dec
and
dec
inc
dec
dec
add
les
adc
out
in
mov
push
imul
jne
sbb
xor
dec
inc
xor
ss
dec
out
xor
dec
push
and
mov
dec
and
xor
movsb
pop
jae
mov
leave
pop
adc
or
inc
add
or
in
aad
fst
mov
mov
gs
adc
fldl
push
mov
add
add
fidivl
add
and
fimull
add
inc
xor
sub
ficompl
and
jmp
lahf
add
push
inc
adc
inc
pop
cmovo
add
adc
aas
adc
add
incl
sbbl
dec
sbb
scas
xor
shl
and
lret
pop
mov
adc
incl
jp
lret
out
fstl
push
add
jae
test
aas
add
fs
mov
dec
fcmovu
inc
add
ljmp
orl
pop
inc
addl
xor
adc
insb
mov
mov
jmp
inc
dec
and
mov
push
es
mov
fldl
cmpsl
inc
rcrb
daa
outsl
add
push
sbb
and
cmp
rclb
fwait
test
rorb
cmc
dec
xchg
xchg
mov
pusha
mov
pushf
mov
in
sbb
or
or
in
cmpsl
lock
xchg
adc
scas
jl
inc
das
inc
mov
daa
sub
adc
stos
pop
cmpsb
jmp
cld
test
inc
decb
pop
inc
mov
pop
dec
push
or
and
mov
mov
enter
or
sub
psubusb
add
setb
cmp
add
pop
test
insb
ucomiss
cmpl
mov
shll
pop
popf
lods
sbb
push
and
xor
push
outsb
mov
jae
pop
and
xchg
adc
test
add
imul
pop
pop
push
fs
cmp
adc
rolb
fisubrl
adc
pusha
iret
outsb
addr16
data16
push
xor
add
roll
cmp
add
inc
ret
or
lea
push
imul
or
call
mov
scas
add
adcb
adc
rorb
and
adc
aaa
adc
xchg
daa
sbb
andb
pop
adcl
inc
mov
out
inc
or
inc
inc
inc
add
jbe
ljmp
ds
inc
inc
mov
dec
dec
dec
dec
dec
dec
push
push
push
push
push
cmp
pop
pop
pop
popa
bound
gs
imul
incl
jl
jne
ja
jns
xor
cmp
sub
mov
call
or
arpl
idiv
outsb
xchg
jne
xor
mov
imul
lret
ret
xchg
mov
aas
cli
xchg
pop
call
sub
fucomi
fbld
cwtl
mov
mov
pop
rep
pop
xor
push
add
push
subb
repnz
cvtps2pi
push
and
pusha
call
std
decl
cmp
addl
adc
add
in
mov
ret
xor
pushl
mov
les
add
repz
je
inc
jmp
push
popa
ret
pusha
mov
pop
mov
les
jg
adc
js
stc
cmp
add
decb
mov
cmp
mov
mov
mov
mov
add
imul
pop
or
fldt
push
in
xchg
or
sbb
cmpsb
fisttps
sub
mov
mov
mov
add
jecxz
dec
mov
add
xor
sub
lods
adcb
cs
ror
add
jo
shll
pop
pop
jne
inc
and
mov
adc
or
push
call
clc
popa
cwtl
jmp
mov
push
jbe
call
mov
dec
pop
jne,pn
out
mov
lods
test
lret
xor
jecxz
mov
or
dec
jbe
andb
paddusw
mov
pusha
jo
lods
mov
jmp
pusha
add
xor
jl
inc
xor
pusha
push
jmp
add
lock
push
out
sbb
xor
pusha
inc
lcall
push
add
mov
jecxz
outsl
pop
arpl
mov
inc
inc
push
cli
push
jbe
and
loopne
pop
pushf
les
mov
adc
insl
cli
dec
loop
mov
pop
sbb
insl
cli
mov
and
sub
bound
jae
gs
mov
and
lock
jmp
dec
push
inc
push
cmp
push
loopne
or
jge
push
and
add
shl
jnp
push
dec
inc
adc
push
push
or
dec
pop
lret
outsl
mov
test
cmp
mov
adc
add
push
scas
mov
mov
jo
ja
call
subps
cmp
scas
and
ja
pop
jae
ret
xor
add
je
ds
and
jbe
shlb
sbbl
and
loop
je
pop
pop
xchg
outsb
gs
cmp
xor
stos
mov
ja
in
push
jl
imul
inc
cmp
add
push
cld
out
roll
mov
add
xor
jo
or
stc
pop
pop
lock
lods
and
lods
iret
insb
sub
jmp
loop
cmp
dec
and
lcall
inc
inc
pop
inc
iret
fidivrs
inc
scas
outsl
xor
xor
jbe
sbb
xor
out
idivb
outsl
jne
insb
imul
and
and
jnp
bound
and
lea
sbb
fwait
daa
mov
inc
push
xor
es
add
out
decb
out
xor
xor
xor
out
jl
push
xor
xor
das
sbb
test
push
adc
xchg
out
push
cmp
stos
lods
add
pop
mov
in
or
in
mov
mov
std
incl
or
and
xor
push
inc
shl
push
push
push
mov
push
out
test
lods
das
sbb
mov
dec
insb
loope
ss
shrl
push
les
icebp
sbb
adc
add
jbe
stos
lock
mov
xor
cmp
cmp
sub
not
pop
je,pt
ss
adc
pusha
jmp
pop
push
ret
or
push
ljmp
pop
mov
adc
inc
cld
sti
inc
add
inc
push
and
ret
xchg
aad
jg
shr
sbb
testb
sub
add
inc
pop
xor
add
loopne
jo
mov
inc
xor
ja
xlat
popa
dec
pop
sarb
mov
xchg
out
aaa
and
test
in
fs
mov
repnz
rorb
pop
repnz
lods
inc
cwtl
sarb
pop
test
cmp
cmp
pop
out
negl
add
and
out
iret
and
mov
mov
ret
fst
dec
repnz
in
xor
pop
repnz
xchg
lcall
in
add
gs
ficoms
add
xor
test
dec
sahf
dec
sbb
add
and
xchg
out
in
mov
out
loopne
or
movsb
jae
jae
inc
mov
jo
repnz
in
sub
cmp
repnz
testl
add
in
cmp
dec
sahf
dec
ds
sub
and
nop
ret
addr16
iret
pop
scas
xor
xor
jae
xor
inc
add
repnz
mov
call
in
xchg
pop
mov
and
dec
sahf
dec
test
or
iret
and
cmp
iret
and
or
xor
out
hlt
mov
repnz
in
sub
pop
repnz
repz
decl
xor
adc
xor
xchg
iret
and
mov
xor
mov
mov
js
xor
cmp
jb
mov
and
in
fdivrs
or
test
nop
mov
jb
pop
mov
test
mov
or
and
mov
mov
jb
dec
cwtl
mov
mov
in
pushf
nop
mov
mov
mov
cmp
daa
or
lock
ret
aam
enter
and
ret
aas
mov
dec
loope
dec
push
stc
sbb
lret
jecxz
xorb
push
push
ret
lds
lahf
cmp
dec
and
jg
xchg
iret
or
xchg
dec
and
and
pushl
and
outsl
insl
and
popa
push
push
jns
xor
xor
add
jbe
pop
xor
das
add
xor
lods
fcmovu
xor
cs
outsl
push
and
jmp
dec
dec
xchg
jmp
sub
gs
mov
xor
xor
in
jb
xor
mov
aaa
ss
sub
or
scas
xor
cmpsb
nop
sub
xor
cmp
add
aaa
sbbl
add
or
and
adc
test
jae
push
enter
jae
jb
pop
and
and
adc
test
pop
and
jae
jae
add
sbbl
add
ret
sarl
js
xor
inc
cs
xor
xor
xor
in
mov
scas
nop
xor
xor
enter
cmp
test
ss
xor
xor
pop
and
xor
fcoms
das
cmp
in
mov
cs
xor
in
xor
lods
adc
jno
push
fildll
and
push
enter
pop
leave
rcl
jmp
dec
leave
xchg
xor
cmp
dec
scas
in
aaa
ss
in
scas
xor
in
xor
xor
add
push
jb
push
aaa
ss
xor
mov
add
sub
inc
dec
inc
das
sub
dec
dec
sub
sub
jg
addr16
sar
imul
adc
cwtl
xor
clc
jle
pop
lea
imul
sub
and
bound
fistl
inc
add
jg
or
lcall
cmpsb
bound
jae
dec
cld
fsubrs
ja
es
inc
inc
mov
je
adc
push
xchg
xchg
adc
add
push
xor
enter
add
aaa
jns
xor
out
ja
add
adc
add
sub
push
inc
adc
push
rcrl
adc
ds
ja
imul
stc
pmaxub
push
xor
jbe
filds
nop
and
jno
pop
mov
push
jae
cltd
add
and
jmp
add
mov
inc
add
bnd
inc
ja
xor
push
and
fs
sbb
mov
adc
or
iret
inc
fistpl
shlb
jae
sub
add
cmp
andb
and
adc
addr16
or
sbb
or
outsb
jo
xor
dec
dec
push
push
dec
push
mov
add
outsb
mov
inc
jg
fisubrs
inc
adc
in
fidivrl
add
dec
out
ja
fdivl
insl
gs
cmp
or
adc
fs
mov
imul
lods
repnz
outsb
xor
out
xchg
inc
xor
test
jae
bound
adc
ss
ja
push
push
sbb
loop
push
dec
jbe
jecxz
fiaddl
adc
or
pop
nop
pcmpgtb
dec
je
adc
jb
or
in
push
imul
arpl
or
insl
or
mov
pop
outsb
xor
push
pusha
in
adc
daa
shll
jae
bound
mov
sub
fbstp
je
mov
or
out
mov
mov
add
test
pop
mov
stos
and
insb
cmp
or
or
and
mov
push
inc
inc
dec
pop
cmc
cwtl
mov
and
je
jae
arpl
arpl
call
popa
sbb
sarb
outsl
inc
jne
jb
rol
inc
ret
pop
dec
orb
adc
dec
popa
push
or
jae
dec
add
sub
cmp
dec
sub
pop
ds
pop
cmp
or
clc
sahf
outsw
outsb
test
cmp
inc
imul
or
inc
mov
fidivrl
push
mov
je
jo
push
adc
dec
and
decb
jp
jnp
fadds
rcrl
or
sub
mov
mov
push
cmp
pop
push
add
sbb
add
sbb
xor
ja
into
and
lds
inc
mov
sub
shlb
mov
sbb
push
push
and
int3
in
lods
and
mull
out
inc
sub
mov
sub
rolb
loope
enter
aam
inc
add
dec
jb
xchg
jmp
testb
xor
xor
adc
or
arpl
mov
or
add
and
js
jo
mov
cmpsb
xchg
push
adc
repz
fimuls
or
inc
clc
add
dec
add
aaa
incb
push
dec
inc
pop
mov
jnp
add
push
mov
repz
js
pop
cmp
jb
iret
cmp
hlt
fldl
int
rcr
enter
inc
sahf
out
nop
je
fstp
jl
dec
pop
sbb
add
fsub
fsubl
adc
pop
js
dec
cs
inc
sub
cld
fisttpl
pop
aaa
and
push
mov
jb
mov
das
js
sbb
dec
xchg
daa
clc
fisubrl
enter
daa
adc
lock
fsts
and
add
pushf
dec
enter
fdivs
in
test
hlt
xlat
mov
and
hlt
pop
in
mov
push
mov
dec
in
mov
pop
sub
loopne
mov
mov
dec
cs
or
aam
pushf
pop
insb
jb
aam
subb
test
sbb
shl
cltd
fdivrs
dec
rcl
das
mov
roll
push
leave
sub
shr
rclb
mov
out
cmpb
jns
out
sbb
hlt
shl
shrb
lods
or
jnp
mov
je
mov
adc
js
xchg
add
jns
cmp
push
lods
adc
fldl
lock
gs
arpl
push
outsb
sbb
and
mov
cwtl
imul
xor
push
adc
push
mov
sub
outsb
ja
arpl
add
cs
xchg
adc
and
outsl
xor
fistl
pop
jnp
inc
push
cmovle
pop
imul
je
ja
insl
stos
insl
data16
jo
bound
jo
imul
jo
jae
xor
mov
stos
or
inc
and
push
add
dec
and
hlt
dec
gs
push
jo
mov
insb
insb
push
add
inc
hlt
and
or
pop
int
mov
adc
xor
pop
cmp
xchg
loopne
xchg
scas
dec
shlb
loope
adc
and
jae
nop
sbb
les
push
pusha
push
jo
jne
bound
xchg
push
js
lds
dec
pop
aas
push
lcall
sub
push
or
or
bound
xor
mov
lods
out
insl
insl
mov
inc
xchg
adc
ja
imul
push
jne
xlat
popl
mov
call
sbb
sbb
push
dec
mov
adc
jp
mov
cmc
push
fsubrs
inc
outsl
je
insl
dec
loopne
ret
push
inc
dec
push
dec
dec
inc
dec
les
outsb
arpl
loope
xchg
cmc
pop
jb
inc
insb
dec
push
fs
mov
jae
push
imul
movsb
jo
adc
xor
mov
lahf
xor
and
dec
sub
pop
jnp
xor
jnp
xor
inc
inc
mov
sub
cmpl
xor
test
cmp
insb
mov
xchg
test
scas
stos
mov
pop
inc
inc
dec
inc
push
pop
mov
bound
loopne
push
shlb
adc
adc
mov
roll
jns
insl
aad
nop
jle
push
jne
jae
imul
mov
xchg
dec
and
addr16
aam
outsb
xchg
or
add
add
stos
rcrl
inc
cmp
push
xlat
fwait
push
imul
inc
jb
pusha
add
push
or
lcall
add
cmp
bound
dec
inc
jae
subb
imul
inc
js
insb
mov
int
add
or
pushf
mov
cmp
aad
out
imul
cmpl
lods
xorb
rclb
rcr
mov
lahf
popa
inc
insb
int3
mov
sub
push
push
push
pop
pop
lds
inc
push
je
data16
push
insl
mov
adc
xchg
imul
cmp
pop
xchg
add
xchg
and
dec
dec
das
mov
mov
add
and
sahf
sub
pushf
sbb
je
nop
ficoml
rcl
lahf
rorb
inc
fs
mov
popl
int3
add
jno
adc
add
dec
inc
dec
and
dec
pop
mov
push
imul
mov
sub
sub
outsb
sub
mov
test
inc
insl
shlb
and
scas
pushf
fdiv
jns
test
jo
jae
sub
push
arpl
loopne
xlat
pop
ja
mov
arpl
jo
test
sbb
int3
cmp
push
imul
push
adc
dec
mov
mov
pushf
dec
data16
push
andl
insb
mov
sbb
outsl
mov
pusha
fs
aas
dec
gs
cld
xchg
xlat
mov
addr16
or
jbe
jnp
push
stos
fbstp
xor
movl
xor
in
aaa
jo
jbe
ret
lahf
jbe
pop
dec
outsl
push
outsl
outsl
inc
imul
mov
sub
mov
jo
push
sub
xor
popa
inc
jne
loop
push
mov
shr
xchg
dec
jno
inc
insb
add
out
dec
push
nop
lods
xor
sub
sbb
ds
inc
sbb
sub
mov
sbb
cs
add
and
pop
pop
xchg
or
lods
dec
jecxz
cmpsb
test
xchg
das
inc
inc
inc
std
dec
add
outsl
je
push
fcmovne
repz
addr16
adc
out
popa
pop
push
xchg
pusha
push
push
arpl
xchg
adc
push
and
das
adcb
xor
pushf
push
out
sbb
test
mov
push
movsb
fsubr
fldt
fucomp
jl
or
sub
inc
cmpsb
mov
imul
fmuls
outsb
daa
pop
js
cs
repnz
bound
inc
subb
arpl
pushf
inc
fildll
lcall
int
ffree
push
jnp
aas
pushfw
rolb
or
or
in
push
and
bound
in
mov
imul
adc
or
jp
push
push
loopne
cmp
inc
das
jae
arpl
mov
js
mov
add
pop
add
push
push
adc
das
jae
outsb
ja
sub
es
inc
or
xor
push
push
dec
adc
inc
dec
push
dec
loope
sbb
jo
push
inc
not
mov
gs
cltd
inc
imul
and
outsb
cmpsl
jnp
adc
rolb
mov
xlat
pusha
movsl
cs
out
jo
lods
fsubrs
mov
and
push
cmp
inc
push
inc
imul
xlat
sub
mov
xchg
sub
lods
cmp
out
enter
or
mov
mov
lds
jno
addr16
insb
fs
iret
aad
dec
add
pop
xchg
test
add
add
sub
mov
add
push
int3
add
xchg
pushf
rolb
insb
pop
or
out
inc
filds
mov
sbb
dec
test
adc
jp
cs
cs
outsl
in
sub
inc
dec
or
sub
jg
add
pop
inc
cmp
inc
dec
push
mov
inc
pop
lret
mov
add
mov
negl
gs
pop
sub
ja
inc
push
push
cmp
sbb
jne
push
data16
pop
or
add
mov
insb
je
lcallw
stos
adc
pop
fmuls
lods
adc
xlat
sbb
fildl
ret
mov
sub
jg
push
data16
xor
insl
pop
clc
ret
sbb
adc
push
adc
mov
inc
in
movsb
pop
push
add
push
push
or
inc
into
dec
mov
das
dec
add
ja
loopne
lock
pop
sbb
mov
xchg
fcomp
add
xor
outsl
jns
outsl
hlt
xchg
jns
inc
jne
xor
push
lock
js
pop
aaa
dec
arpl
push
call
add
inc
lods
pop
popa
inc
imul
inc
dec
dec
cs
inc
outsl
push
jno
inc
inc
add
jns
push
xchg
mov
loope
push
cmp
fsubr
mov
inc
inc
pusha
inc
scas
push
xorps
in
push
rorb
sub
push
mov
push
pop
add
iret
adc
icebp
add
das
inc
mov
pop
add
cmpb
mov
jge
adc
add
add
sbb
decl
xlat
mov
push
xchg
lret
adc
or
lret
es
sbb
stos
jns
imul
push
or
bound
inc
or
jb
dec
mov
decb
rcrb
popa
jns
hlt
and
and
clc
push
pop
mov
add
mov
xchg
xor
lret
addr16
inc
repnz
pop
push
ret
std
or
jmp
push
pmuludq
jno
fs
jne
test
jne
cmp
add
push
js
daa
sub
or
sub
or
scas
add
les
jle
dec
dec
push
inc
out
or
pop
mov
stos
inc
xchg
mull
cmp
mov
fdivs
mov
xchg
dec
das
inc
and
lret
filds
push
pop
push
inc
xor
and
sub
xchg
loope
xchg
data16
movntps
cmc
xchg
push
outsb
jns
je
fs
push
sbb
shll
cmp
imull
rdpmc
xor
outsb
pop
ret
adc
jne
nop
pushf
dec
ljmp
in
or
ja
xchg
jo
xor
cmp
dec
mov
je
ret
add
or
mov
lahf
sbb
cmp
dec
xchg
xchg
pusha
cmp
pop
insl
jns
fcompl
push
push
fs
arpl
push
mov
insb
cmp
jae
ret
adc
js
pop
lcall
jo
adc
jp
xchg
ret
ret
outsb
mov
repz
dec
or
imul
jo
push
or
and
push
inc
outsl
call
dec
push
and
dec
or
xor
push
clc
insb
jae
inc
cmpsl
rolb
insl
sub
clc
jae
add
movsb
mov
mov
cmp
mov
and
in
arpl
add
imul
inc
sbb
xor
fsubrs
negl
js
jbe
insb
add
or
cmpsl
push
lods
adc
shrb
or
or
push
sub
xchg
sub
test
in
mov
int
jns
jmp
sbb
adc
sub
cmp
push
lret
adc
call
fstpt
cmp
cmp
sub
sub
push
into
mov
dec
inc
adc
inc
pop
adc
dec
dec
pusha
cmp
sahf
push
push
and
fsubr
movsl
cmp
adc
jae
data16
das
bound
sub
inc
sbb
add
adc
mov
inc
push
dec
sub
test
cmp
inc
hlt
push
and
ss
add
pop
in
mov
push
gs
aad
lods
add
xorb
mov
cmp
test
in
xchg
aaa
fsubrl
sub
adc
subb
scas
xor
jbe
and
shlb
dec
inc
and
inc
inc
sbb
pop
mov
idivl
xchg
xchg
xor
das
or
and
cmp
or
inc
lahf
mov
cs
add
popa
xchg
inc
and
pusha
jge
inc
xchg
sub
jge
aaa
bound
sbb
pmulhw
cwtl
popa
dec
push
add
adcb
inc
push
ss
lret
gs
subb
mov
cmc
ljmp
push
and
xchg
push
lcall
mov
push
inc
inc
cmc
dec
push
dec
jge
stos
mov
and
pop
add
push
scas
fwait
xlat
test
sbbl
cmp
int
adc
dec
inc
dec
push
fstl
iret
inc
sbb
out
xor
and
mov
add
cmpsl
js
mov
dec
lods
cltd
push
mov
xchg
scas
je
mov
sbb
dec
sbb
inc
notb
ret
pop
mov
iret
push
xlat
test
pusha
sub
sub
pop
addr16
xchg
or
pop
and
cmp
cs
mov
push
bound
or
jg
sbb
inc
push
inc
pop
sub
rdtsc
pop
or
inc
xor
jb
sbb
xor
xor
jb
je
xor
in
ss
xchg
xchg
lret
enter
cmp
and
pop
inc
inc
mov
daa
jp
xor
xor
rcr
xchg
xchg
xchg
jle
xor
enter
and
pop
es
mov
fidivs
xor
and
nop
mov
repnz
pop
es
ss
pop
outsl
sbb
insl
pop
es
sub
jns
and
pop
sub
enter
pop
sub
enter
sub
mul
xor
das
xor
daa
push
or
adc
mov
insl
ja
add
adc
scas
aas
adc
mov
pop
adc
cmp
adc
add
movsl
jno
inc
adc
addr16
daa
fistpl
xchg
sbb
lds
mov
xchg
inc
add
mov
hlt
scas
cmpsl
adc
and
adc
add
jns
adc
call
adc
daa
dec
push
dec
jnp
pop
jg
adc
aam
insb
adc
nop
xchg
cmp
fisubs
fbstp
pop
adc
mov
xchg
adc
pop
fisubl
add
adc
add
or
sub
inc
rep
sub
mov
sub
mov
enter
cs
outsl
nop
xchg
out
pop
jl
or
inc
pop
xor
inc
push
push
dec
pop
fistps
cs
jmp
pop
or
xchg
in
sbb
dec
sub
push
push
sbb
add
or
scas
pop
push
pop
or
stos
cs
dec
inc
pop
or
push
pop
push
pop
sbb
push
scas
inc
push
sub
fimull
or
jbe
inc
xor
sbbl
or
xchg
mov
pop
inc
push
inc
dec
in
add
lahf
pop
or
mov
dec
dec
or
imulb
inc
sub
je
add
insl
mov
xor
pusha
leave
and
xchg
xor
popa
xor
jb
bound
arpl
and
xchg
enter
fiaddl
aaa
push
out
cmp
outsb
test
ret
xchg
or
aad
xchg
mov
popl
lcall
loop
enter
inc
sub
pusha
sti
mov
daa
dec
jmp
in
xor
inc
push
mov
arpl
inc
push
mov
jb
jp
adc
loop
inc
jnp
add
aaa
pop
inc
adc
gs
adc
sub
push
add
push
mov
sub
mov
nop
xor
outsl
arpl
cmp
lret
jg
nop
aas
xor
jbe
je
jb
mov
dec
sbb
mov
jo
arpl
push
dec
fwait
dec
aaa
mov
sbb
data16
pushf
add
lods
jge
jno
dec
mov
mov
sbb
dec
pop
arpl
cmp
repnz
fs
xor
jo
mov
iret
add
inc
call
xchg
lock
test
pop
inc
outsb
jae
test
adc
aas
inc
popf
push
aas
ret
aaa
cs
jecxz
rcrl
pop
jl
mov
lea
insl
pop
fisubs
adc
pop
int3
outsb
mov
inc
xchg
scas
sbb
daa
push
or
jp
dec
outsl
bound
repnz
pop
rclb
jo
test
cmpsb
scas
dec
arpl
mov
sarb
mov
mov
popf
mov
imul
popa
das
inc
mov
sub
cmp
dec
js
lret
aam
xor
push
nop
fwait
lods
mov
cmp
insb
inc
daa
fsubs
add
and
fistl
adc
fs
jae
iret
mov
addr16
xor
xchg
movsb
pop
ret
push
jl
js
xorl
inc
push
push
xor
sbb
add
out
cltd
push
ret
pop
nop
dec
cmp
les
cmp
pop
fcomp
pop
push
adcl
lods
xlat
mov
imul
pop
in
repz
push
jbe
inc
cs
fcoml
setp
outsb
mov
rorb
jae
outsb
mov
push
pop
loopne
sbbb
push
xchg
dec
loope
mov
insb
mov
imul
inc
test
sbb
ret
pop
dec
cmp
inc
inc
fsubs
jl
dec
jae
imul
arpl
pop
ret
push
popl
mov
cmpsl
dec
xor
cmp
push
pop
inc
gs
loop
popl
je
push
lahf
or
pop
movsb
inc
js
inc
insb
sbb
push
cmp
frstor
sbb
rcrb
mov
fldt
pop
mov
cmpsb
cmp
inc
popa
addr16
sbb
movsl
lcall
jnp
jae
pop
jb
in
jns
add
add
push
fiadds
mov
inc
cli
jae
mov
jnp
fs
sub
mov
testl
add
pop
xor
lcall
and
push
push
outsl
imul
xor
fcomip
dec
outsl
mov
jo
jne
mov
lret
or
imul
add
push
inc
iret
sbb
sbb
inc
pop
fisubl
jg
into
fldl
int
mov
and
add
scas
cli
gs
mov
movsl
mov
jle
push
cmpsl
fldcw
mov
popa
jae
push
push
fadd
push
orl
fs
pop
xor
jg
mov
dec
and
add
out
in
and
shrb
iret
jmp
pushl
mov
xlat
jae
inc
mov
cmp
insb
cs
push
addb
lods
inc
fcompl
sub
ret
xchg
pop
mov
sbbb
cmp
or
lret
outsl
sub
sub
jge
xlat
jae
fs
test
mov
adc
and
pop
inc
xchg
in
rclb
cmp
and
pop
and
mov
or
in
orb
mov
push
add
push
es
pxor
lods
inc
pop
and
adc
pusha
adcb
test
cs
scas
dec
xor
gs
jo
xor
lods
mov
iret
imul
rolb
popa
push
das
push
sbb
xor
fsubrs
cwtl
push
mov
les
push
dec
mull
or
pop
inc
sbb
xchg
mov
sub
jne
mov
jle
pusha
data16
jo
inc
adc
mov
in
das
push
addb
or
push
fistpl
and
and
data16
hlt
sti
push
daa
pop
dec
jae
ss
bound
out
or
movsb
push
add
pushf
mov
test
iret
leave
je
add
cmp
push
add
add
xchg
sbb
mov
cmc
rclb
cmp
cmp
and
pcmpeqw
or
sub
imul
fisubl
push
loopne
push
aad
clc
sbb
and
sti
or
sbbl
movl
outsb
dec
cmp
mov
fmuls
outsb
leave
jmp
test
lea
or
jle
insb
out
inc
jno
cmp
xor
pop
or
bound
xchg
and
mov
jae
fiadds
test
arpl
push
pop
fmuls
add
adc
push
hlt
rolb
outsl
xor
cmp
sub
mov
daa
cmp
cs
dec
add
mov
and
gs
les
loope
or
arpl
dec
cmp
or
outsb
push
push
mov
or
or
xlat
inc
loopne
ss
jmp
pop
inc
pop
fcomp
lret
xorl
or
push
pop
into
popa
inc
jle
xlat
sahf
mov
dec
popa
nop
jl
sbb
push
xor
inc
mov
adc
push
mov
cmp
xlat
adcb
adc
cli
out
movsb
pop
adc
jno
popa
insb
clc
nop
sbb
mov
daa
and
call
int3
mov
mov
aaa
fcmovb
adc
outsb
rcrl
mov
sahf
repz
out
jl
fs
arpl
lea
in
pop
inc
adc
dec
cwtl
adc
arpl
jg
sbb
test
xchg
leave
arpl
pop
and
xchg
aaa
xor
push
loopne
and
or
mov
pop
mov
call
pop
iret
lea
jns
pop
and
out
lods
cs
push
xchg
mov
mov
pop
out
test
and
or
xchg
gs
ficompl
push
dec
mov
or
and
jge
outsl
add
adc
lea
pop
push
dec
push
mov
ret
das
pop
pop
pusha
and
lret
sbb
test
es
ja
mov
dec
mov
orps
push
js
stos
sarb
aaa
push
pusha
insl
adc
outsl
xchg
inc
mov
xor
out
out
and
jne
xor
fcomps
xor
cmp
push
icebp
lock
rcrb
sub
cmp
jb
add
jae
divb
mov
xchg
push
add
mov
pop
and
inc
or
cmp
ret
adc
pop
lea
js
out
push
xor
rclb
js
hlt
adc
daa
adc
sub
popa
lods
popf
pushf
pop
add
fs
jae
push
inc
cmp
icebp
cmp
lods
orb
sub
daa
adc
or
dec
jne
outsb
xchg
ret
add
fnstcw
test
or
and
push
jo
addr16
jno
jecxz
mov
fmull
sub
and
roll
and
movsb
ret
mov
out
cmp
mov
pop
add
popf
cmp
mov
dec
mov
mov
inc
out
or
rorl
outsl
sbb
movsl
rorb
shll
lods
mov
mov
pop
stos
push
and
iret
popl
roll
pop
dec
test
jnp
js
andl
adc
lock
mov
add
mov
imul
jne
mov
stos
add
rcr
arpl
ret
mov
outsb
popl
int
cs
rorb
jo
shlb
pop
cmp
dec
jo
mov
insl
ret
and
lret
jae
pop
inc
pop
xor
pop
iret
outsl
fstl
add
into
inc
inc
sbb
insb
jns
adc
clc
pop
fs
insb
loopne
mov
pop
ret
nop
and
add
sbb
lea
push
or
jecxz
sub
inc
sarl
test
arpl
rorb
jb
stc
inc
pop
cmpsl
movb
add
push
repz
add
mov
adc
rolb
xorl
jbe
and
mov
rorl
ja
int
adcl
dec
xlat
shlb
jmp
jmp
sub
push
or
xor
push
push
dec
inc
dec
dec
jnp
sbb
inc
bound
push
push
jecxz
inc
inc
sbb
inc
jl
arpl
fwait
cs
fisttpll
push
sub
jns
hlt
add
cmp
push
lods
mov
xchg
xor
xchg
inc
sub
sub
dec
mov
dec
pop
push
inc
push
xchg
adc
cmpsl
or
movsb
jo
add
jne
sahf
out
rol
push
mov
cwtl
mov
out
jl
pusha
push
inc
repz
out
and
add
cmp
lock
les
mov
xchg
test
cmp
fs
dec
inc
xor
iret
repz
sbb
hlt
cmp
sahf
out
call
out
sahf
out
cwtl
mov
jns
sahf
fs
dec
cmp
cmp
sahf
and
hlt
cmp
repz
iret
int3
shlb
test
pop
push
cmp
iret
repz
and
or
cmp
out
call
out
sahf
out
test
mov
jns
je
pusha
push
inc
int
jns
xor
adc
cld
cmp
cmp
repz
aam
mov
repz
iret
repz
push
dec
inc
xor
jns
out
je
cmp
clc
cmp
fsub
jns
out
shlb
sahf
nop
xorb
jns
out
cmp
adc
cmp
repz
aaa
lock
iret
repz
mov
xchg
test
cmp
repz
inc
cmp
sbb
lcall
call
out
shlb
sahf
test
pop
push
inc
jl
out
cmp
add
xor
in
loopne
enter
cmp
mov
cwtl
mov
iret
repz
push
inc
xor
ds
repz
hlt
xor
out
sahf
out
int3
shlb
mov
pop
sahf
out
sahf
push
inc
xor
or
sarl
lock
int3
repz
repz
iret
test
pusha
dec
cmp
and
clc
xor
jns
out
shlb
sahf
out
pop
push
inc
xor
repz
and
add
xor
fmul
repz
cmp
les
cmp
xorb
cmp
jae
inc
cmp
and
sahf
out
or
xor
fmul
out
sahf
out
mov
pushf
nop
sahf
out
sahf
test
dec
inc
jns
out
xor
sbb
add
cmp
repz
das
call
repz
mov
xchg
test
cmp
repz
push
inc
cmp
repz
repz
xchg
fadd
mov
iret
repz
pushf
nop
test
cmp
rep
pusha
push
inc
xor
sbb
sub
sahf
fmul
mov
sahf
out
mov
cmp
repz
out
or
sub
loopne
repz
rol
mov
jae
cmp
je
pop
dec
cmp
repz
xor
adc
dec
sahf
cmpsl
stc
clc
sub
mov
movsb
cwtl
mov
out
push
dec
cmp
sarl
add
sub
aam
cmp
repz
test
nop
xor
iret
repz
pusha
push
inc
out
cmp
xor
or
sub
fmul
mov
out
nop
test
push
out
sahf
out
sub
add
out
hlt
sub
mov
jns
out
pushf
mov
sahf
push
sub
out
sbb
hlt
daa
in
cmp
repz
mov
cmp
mov
pop
push
cmp
repz
cmp
adc
repz
repz
es
push
call
repz
lods
nop
mov
cmp
repz
push
inc
cmp
repz
xor
sbb
add
sahf
out
lcall
jns
out
mov
cwtl
mov
sahf
out
push
idivl
xor
sbb
and
sahf
out
int3
mov
out
sahf
mov
pop
dec
jns
out
inc
cmp
sub
xor
out
add
and
loopne
repz
aam
mov
iret
repz
jo
pop
dec
cmp
iret
repz
and
or
sahf
cmpsl
stc
cld
and
in
enter
out
mov
cwtl
mov
pusha
push
inc
xor
ja
out
sbb
add
and
sahf
out
sahf
fmul
mov
sahf
out
test
dec
out
sahf
out
xor
adc
jns
out
clc
and
lods
out
sahf
out
nop
test
out
sahf
pop
dec
cmp
and
cmp
repz
lock
loopne
shl
iret
repz
cwtl
nop
test
repz
js
pop
push
cmp
sahf
out
cmp
or
push
in
fdivrl
out
rol
mov
sahf
out
js
pusha
push
sahf
out
sahf
inc
cmp
adc
cmp
call
xor
int3
lods
or
imul
ss
xchg
int3
push
sub
jae
in
push
sub
pop
xor
dec
adc
pop
push
addr16
loopne
ja
icebp
sbb
aas
xor
pop
insl
jae
jbe
nop
test
inc
push
popa
pushl
xchg
cmp
outsb
dec
xlat
inc
sub
dec
adc
cmpsl
sbb
push
or
and
push
dec
cmp
pop
fisubrl
inc
inc
das
les
pop
dec
dec
inc
inc
ss
in
dec
inc
push
dec
pop
sbb
xor
jmp
sarb
inc
push
push
push
dec
push
sbb
push
push
inc
sbb
orb
jbe
cmp
push
sti
add
inc
xor
xor
aaa
push
pop
sub
aad
mov
notb
mov
std
push
inc
dec
push
inc
push
mov
xor
in
data16
les
inc
inc
push
dec
div
dec
les
adc
dec
mov
insb
jnp
dec
push
outsl
dec
push
mov
xchg
or
cmp
push
jo
loopne
push
dec
jecxz
push
push
in
rolb
sbb
pop
aas
pop
cld
pop
add
inc
dec
popa
xor
adcb
mov
jo
test
push
or
sti
add
add
pop
jnp
push
push
dec
mov
fildl
mov
out
dec
push
xlat
adc
outsl
icebp
imul
inc
adc
sub
dec
push
dec
dec
dec
push
inc
push
inc
ret
mulb
mov
mov
dec
inc
inc
inc
inc
cmp
js
push
pop
inc
inc
negb
push
bound
arpl
outsl
cmpsl
pop
inc
aaa
xchg
xor
inc
push
dec
cmp
push
push
lret
fistpl
insb
sbb
pop
jbe
pop
fs
push
fldl
pop
fstl
dec
mov
imul
sub
cmc
push
dec
inc
push
je
insl
fistl
mov
cs
inc
cmpsb
in
pusha
dec
aam
ret
jp
adc
push
out
dec
filds
in
sub
xor
pop
xor
fucom
mov
pop
dec
inc
dec
xor
mov
bound
sti
adc
shl
push
ss
rcll
movsl
push
adc
imul
pop
mull
ret
mov
pop
inc
cmpsl
jae
or
add
inc
outsl
xlat
call
dec
stc
mov
pop
popa
sbb
push
lods
inc
in
lods
imul
adc
orb
fldt
push
push
push
dec
gs
adc
sub
add
fsubl
pop
dec
pop
pop
add
dec
in
jg
shll
push
sbb
mov
pop
outsl
inc
fiaddl
repnz
lods
jge
inc
dec
xor
dec
dec
inc
push
nop
fildll
out
pop
cmp
imul
ja
adc
inc
stc
in
imul
inc
push
dec
dec
mov
jae
lret
das
sbb
push
pushf
mov
adc
jg
shll
aaa
jl
push
dec
push
stos
rcr
pop
inc
pop
cmp
lahf
add
pop
cmp
cmp
push
fucomi
out
push
mov
sbb
xchg
xor
fwait
push
push
fldl
inc
push
mov
xor
test
xor
pop
aaa
inc
test
je
jns
adc
sub
push
int
inc
pop
mov
xor
xor
pop
push
rcll
xor
push
dec
push
adc
call
pop
pop
pop
pop
dec
decb
movsl
add
ret
push
fisttpll
pop
inc
dec
xor
dec
outsl
dec
inc
adc
push
inc
push
dec
and
push
outsl
dec
daa
push
push
inc
inc
scas
push
push
fistl
mov
cltd
adc
sahf
dec
fistl
filds
sbb
xor
in
pop
inc
dec
mov
xor
aaa
push
cmp
mov
pop
inc
or
into
inc
inc
xchg
mov
insb
pop
xchg
push
dec
xor
fldl
ret
test
inc
push
fsubrl
mov
pop
xchg
sbb
fildl
pushf
lods
int
cmovb
pop
lods
jbe
mov
das
dec
inc
inc
xor
jae
mov
pop
inc
inc
mov
dec
dec
sbbl
push
dec
xor
sbb
push
sbb
fs
dec
inc
and
pop
push
pop
lods
sbb
mov
pop
dec
push
inc
push
dec
inc
incl
fistpl
push
inc
push
inc
pop
dec
inc
push
hlt
inc
addl
icebp
fiadds
inc
push
pop
imul
leave
dec
inc
inc
ja
sub
outsb
hlt
cmp
fdivrs
aaa
aas
aaa
das
push
add
ret
inc
xor
mov
sub
push
dec
insl
add
add
xor
ss
inc
or
push
lods
int
pop
pop
mov
andl
imul
adc
push
push
adc
outsl
and
add
mov
inc
push
pop
inc
dec
cwtl
sarl
ja
pop
push
or
adc
inc
cmpsl
into
push
mov
outsb
ret
pop
push
pop
push
inc
test
adc
inc
lcall
outsl
add
in
fisttpl
inc
push
arpl
mov
outsb
push
xchg
pop
xor
mov
push
loope
mov
cld
int
inc
lret
push
ret
test
inc
fs
xchg
movsb
fcomps
aad
push
rol
in
nop
fstl
inc
push
dec
sahf
loopne
xchg
pop
inc
jecxz
mov
int
inc
jmp
dec
push
inc
shrl
test
aaa
pop
xor
call
jecxz
mov
jno
cmp
cmp
aaa
dec
jg
pop
jae
pop
dec
dec
xor
aaa
ss
add
xor
add
adc
and
insb
push
cmp
out
negl
ficomps
jno
jecxz
mov
pop
inc
dec
popl
pusha
negb
mov
xor
lea
sub
sbb
and
es
lods
jae
push
outsb
dec
aam
push
mov
push
push
and
pop
inc
inc
or
dec
push
orb
subb
push
in
sbb
mov
push
inc
loope
and
add
stos
enter
push
ss
inc
pop
dec
addr16
inc
xorb
outsl
dec
add
rcrl
push
push
flds
imul
add
mov
rolb
sub
idivb
pop
cmp
aaa
lods
dec
lret
xchg
sbb
inc
dec
cmpsb
clc
mov
add
xor
xor
pop
push
push
pop
sub
sub
mov
push
pop
ds
xor
push
pop
adc
pop
ret
push
xor
pop
cwtl
pop
lds
push
cmp
pop
xor
jl
aaa
inc
and
adc
or
push
dec
jae
fcmovne
pop
inc
mov
inc
sub
sbb
cmpsb
repnz
sub
incl
aaa
cs
sub
dec
push
imull
imul
pop
adc
fbld
jmp
dec
dec
inc
dec
pop
sbb
mov
cmp
dec
or
dec
or
mov
lds
mov
xor
lahf
or
outsl
pop
xlat
mov
pop
push
inc
das
dec
push
dec
xor
or
fidivs
dec
xorb
mov
mov
insl
pop
sti
pop
sub
cmp
andl
or
jmp
testl
xor
mov
dec
dec
mov
sbb
das
pop
dec
dec
jno
pop
xchg
gs
add
and
inc
push
loop
adc
rcll
jmp
dec
adc
mov
dec
xchg
pop
insl
mov
inc
pop
dec
mov
cltd
or
pop
inc
mov
sub
movsb
mov
aaa
push
inc
ja
in
sub
push
pop
ss
xchg
pop
or
and
out
pusha
push
and
xchg
shlb
dec
sbb
push
fbstp
jns
push
fcoml
inc
sub
or
in
inc
push
xchg
pop
xchg
xor
daa
inc
arpl
lods
mov
dec
mov
ds
sbb
arpl
pop
mov
sbb
dec
sti
rcrl
lahf
aaa
dec
dec
dec
inc
dec
push
pop
fildl
push
dec
cmpl
mov
cmpb
pop
or
mov
pop
outsb
jae
push
and
push
aas
or
dec
out
popa
sub
pop
dec
dec
dec
ja
adc
pusha
dec
out
sbb
daa
pop
test
scas
inc
jmp
daa
mov
fbstp
inc
dec
pop
js
mov
cmp
pop
add
mov
and
sub
sarl
xchg
call
pop
push
pop
dec
jle
push
sub
sub
popa
aaa
dec
mov
sub
adc
xor
popa
sbb
mov
aam
pop
inc
pop
and
cld
movsl
sbb
mov
pop
es
dec
push
inc
xor
orl
cltd
test
xor
cs
pop
test
outsb
orl
fwait
pusha
dec
pop
adc
test
bound
push
test
mov
adc
pop
inc
aad
jbe
vandnps
xor
out
dec
push
sbb
loope
cmp
mov
repz
cmp
es
clc
push
sbb
pop
cmp
mov
push
clc
mov
inc
dec
xor
or
lahf
cmpsb
xchg
dec
add
push
push
mov
or
pop
dec
push
inc
push
inc
adc
jno
push
inc
push
xor
and
jbe
das
dec
xor
mov
dec
pop
inc
push
jecxz
push
insb
and
out
in
push
pop
jg
push
mov
rcrl
cmp
xchg
sub
arpl
mov
mov
sub
push
dec
ret
pop
inc
in
cwtl
fs
das
inc
dec
inc
out
push
loopne
pop
xor
inc
pop
daa
push
pop
or
jg
inc
cmp
adc
xchg
and
aad
mov
je
inc
test
xchg
dec
cmp
loopne
or
jb
lods
xorl
rcrl
dec
movl
jns
outsb
xor
sub
enter
flds
xchg
push
iret
pop
imul
pop
cmp
dec
aaa
or
outsb
mov
push
sbb
dec
jbe
stos
xchg
fimull
sub
add
mov
cmpsb
dec
sti
push
xor
xchg
add
jbe
push
mov
push
les
xlat
arpl
dec
dec
push
aas
sbb
sbb
dec
xchg
add
inc
xor
add
xor
js
xchg
and
sbb
mov
lret
iret
pop
xor
xchg
sub
or
xchg
pop
mov
xchg
pop
xchg
pop
sub
stos
mov
xor
pop
jmp
addr16
mov
cltd
dec
lods
sbb
sub
mov
dec
inc
push
push
outsl
or
test
pop
push
mov
push
sub
shlb
adc
aad
les
xchg
and
pop
mov
clc
inc
insb
popa
ja
inc
push
inc
push
sub
mov
fwait
pop
inc
xor
xor
outsl
and
sahf
push
scas
frstor
xor
pop
cmp
xchg
sub
or
icebp
outsb
test
ds
mov
push
inc
ds
mov
fmull
push
iret
inc
inc
lea
adc
pop
inc
ret
loopne
mov
mov
mov
aaa
addr16
or
lea
inc
inc
dec
enter
movsl
in
pop
out
push
daa
push
movsl
xor
push
dec
pop
mov
inc
mov
adc
jns
mul
inc
fisubl
push
pop
mov
jb
flds
lds
inc
inc
push
xor
aas
push
rorb
test
inc
imul
cmp
or
dec
mov
nop
pop
pop
pop
push
mov
push
and
pop
roll
push
andl
jnp
sub
inc
dec
pop
ljmp
dec
addr16
aam
push
mov
inc
pop
in
inc
adc
enter
popl
imul
in
or
push
insb
pop
jns
in
push
das
daa
cmp
jbe
xorl
fcmovnbe
jge
sbb
repnz
or
xor
push
mov
mov
mov
adc
inc
out
insb
andl
adc
leave
jg
dec
push
inc
push
insb
cmp
cwtl
pop
mov
pop
dec
les
inc
test
add
jnp
out
push
pop
lahf
pop
aaa
rorb
pop
pop
rorb
iret
inc
jg
or
arpl
sbb
xlat
incl
rcrl
sbb
adc
fisttpl
xor
xor
scas
jmp
push
imul
loope
push
subb
mov
sub
ret
pop
sub
leave
mov
repz
mov
sub
sarb
and
lods
lock
pop
or
roll
lods
inc
cmp
xor
cmp
add
pop
or
loopne
call
lahf
fisttpl
dec
or
mov
dec
dec
cmp
xor
cmp
shlb
inc
xchg
mov
icebp
cmp
insb
out
add
mov
and
or
add
pop
es
or
sub
inc
das
pop
inc
cs
or
mov
cs
jle
cs
inc
cmpsb
imul
inc
mov
and
add
sub
mov
cs
or
das
pop
cmp
aas
daa
inc
cs
or
dec
incb
mov
add
cs
or
sub
inc
in
mov
cs
or
or
add
cs
sub
pop
nop
or
add
cs
pusha
cs
or
jle
cs
xorb
enter
and
sti
xchg
pop
and
jae
gs
das
cs
and
nop
or
and
dec
mov
jb
js
roll
pop
jae
outsb
das
adc
add
push
inc
sub
push
and
sbb
mov
cmova
orl
dec
les
and
add
or
xchg
push
xchg
and
dec
leave
out
sbb
outsl
jb
push
push
add
pusha
or
das
jo
jns
pop
es
add
pop
add
dec
das
cmpb
pop
pop
pop
jae
cs
mov
inc
imul
test
adcb
js
addr16
or
add
scas
cs
insb
inc
inc
add
ljmp
or
add
jne
jo
arpl
lock
sbb
or
aas
jae
jo
lret
mov
lea
and
bound
mov
rcrb
sub
add
bnd
popf
add
sbb
push
mov
inc
sub
jae
std
decl
dec
test
sbb
dec
pusha
repnz
jg
pop
dec
out
pop
popf
adc
nop
out
in
pop
cltd
or
xchg
cmp
js
test
fildl
pop
adc
sbb
mov
inc
pop
mov
arpl
inc
dec
lahf
push
jg
push
xchg
adc
movsb
jno
arpl
les
int3
mov
pop
scas
mov
mov
push
shll
pop
xchg
scas
mov
mov
ud0
sbb
aas
das
aas
aas
je
lret
dec
pop
cltd
dec
adc
push
lcall
roll
pop
imul
fstps
call
mov
arpl
cwtl
stos
call
jmp
mov
push
xchg
pushf
inc
pop
pop
fwait
pmuludq
jg
mov
outsl
call
test
adc
jle
iret
inc
or
pushl
cmpsl
rcrl
jmp
lahf
mov
lock
xchg
mov
mov
out
cwtl
mov
cwtl
xlat
jbe
push
mov
push
add
cltd
xor
repz
sahf
idivl
cld
push
push
test
push
cmp
jns
out
and
adc
add
or
idiv
push
sahf
clc
push
pop
jns
cmp
hlt
inc
call
jns
out
sarb
mov
movsb
pushf
xchg
mov
out
xorb
adc
push
dec
inc
cmp
xor
cmp
jnp
sub
and
or
ficomps
dec
cmpsl
hlt
push
in
push
in
sahf
out
aam
mov
mov
pushf
xchg
nop
sahf
out
sahf
mov
fs
jns
out
push
dec
dec
inc
inc
out
sahf
out
cmp
sub
sbb
or
cld
dec
mov
lock
daa
call
out
iret
repz
enter
cmp
jnp
cmp
mov
cmp
repz
iret
repz
pop
push
dec
inc
cmp
out
sub
and
sbb
adc
add
clc
cmp
hlt
dec
in
fcom
dec
xchg
int3
sub
push
enter
test
iret
sahf
out
ret
movsb
dec
cs
aas
push
test
js
insb
fs
jecxz
lahf
out
dec
dec
dec
mov
dec
sub
cmp
cmpsl
jge
push
add
ljmp
imul
cmc
cmpsb
sub
mov
aaa
gs
ds
adc
out
mov
popa
add
push
push
xchg
or
pop
das
test
arpl
iret
bound
rcrb
les
xor
and
dec
daa
outsb
rolb
inc
fisubrl
fidivrl
ja
daa
getsec
pop
mull
dec
pop
aas
pand
push
and
aas
pop
aaa
mov
push
jmp
pop
outsl
push
mov
outsl
lret
sub
ss
fiaddl
arpl
mov
xor
sbb
scas
into
mov
mov
int3
lds
cmp
jmp
pop
push
or
mov
xchg
gs
addr16
dec
negl
outsb
lahf
adc
dec
imul
and
cwtl
insl
jbe
adc
inc
imul
push
cmp
imul
mov
mov
ds
gs
shlb
inc
bound
add
jp
in
push
xor
popa
ret
mov
btr
and
imul
lods
cmp
cmp
gs
jne
jmp
add
leave
loope
lahf
pop
pop
cmp
xor
pop
xchg
xchg
test
xor
push
lea
xchg
cld
insb
mov
insb
sbb
jb
mov
addr16
rcrb
movsl
xor
push
sub
insb
mov
bound
mov
lds
aas
fildl
out
xor
xchg
xchg
xchg
xchg
xor
xor
mov
pop
and
xor
das
insl
das
ret
data16
aas
push
push
push
stos
dec
jo
out
mov
fimuls
dec
cmovg
mov
sub
shr
sub
aam
insb
lcall
or
adc
mov
addr16
push
sbb
shlb
insb
push
xor
lret
ret
inc
jmp
dec
push
loop
mov
jge
pop
mov
aaa
ljmp
aas
pop
dec
gs
dec
call
mull
stos
and
push
dec
addl
mov
popf
movsb
mov
dec
mov
test
mov
test
loop
push
ss
test
cmp
xor
mov
outsl
push
dec
loopne
dec
popa
and
or
mov
mulb
push
imul
stos
jne
push
sub
lods
incb
das
inc
push
and
mov
ja
dec
mov
and
pop
or
push
mov
arpl
roll
filds
or
fs
xchg
or
int
add
testl
or
test
stos
xor
cmp
jnp
mov
inc
inc
push
push
movb
add
lock
jo
outsl
aaa
ds
add
cmpsb
or
inc
fcoms
inc
push
and
xlat
add
add
mov
dec
inc
inc
mov
dec
adc
mov
xor
test
pusha
int3
aam
jg
jo
fidivs
jle
addr16
rsqrtps
lcall
jg
aas
loope
popf
push
mov
pushf
adc
dec
inc
or
outsb
sub
xor
push
pop
dec
mov
cmp
lods
add
aaa
push
adc
or
mov
inc
lret
outsl
mov
fistl
or
add
push
iret
ja
and
add
outsl
add
aam
gs
mov
out
jb
rolb
mov
pop
iret
jle
mov
ret
cmp
add
ja
scas
sahf
push
fsub
xchg
add
mov
bound
aaa
push
sahf
popf
dec
inc
sub
dec
add
adc
shr
xchg
or
dec
mov
outsl
xlat
xchg
pusha
inc
loopne
xchg
cs
fcoms
insb
mov
aad
movsl
jmp
lcall
add
inc
jmp
mov
inc
loopne
sti
sub
pop
mov
mov
push
adc
pop
mov
sub
outsl
jmp
loopne
adc
ret
mov
adc
mov
push
imul
imul
inc
jne
rcll
outsb
add
fisubrl
push
inc
jg
push
xchg
mov
inc
jo
adc
xor
xor
imul
ja
sub
insl
lock
outsl
dec
pop
adc
fmull
add
and
add
push
inc
jno
push
cwtl
mov
push
pop
fsubrs
jmp
mov
imul
push
stos
jecxz
bound
out
and
or
cmpsl
ret
sbb
adc
fldt
mov
scas
dec
lods
sub
pushf
cld
cmp
stos
inc
shll
pop
mov
aas
dec
outsl
mov
push
insb
cmp
divl
test
data16
xchg
pusha
iret
rolb
insl
or
push
dec
mov
and
or
cmpsl
dec
jp
sbb
fcmovb
sub
sbb
pop
pop
xchg
or
inc
js
adc
or
inc
lock
loope
imul
dec
inc
and
sti
xor
mov
inc
jge
and
push
mov
cmpsb
or
xchg
push
mov
ds
sbb
mov
or
arpl
adc
push
xchg
sbb
add
and
inc
xlat
popa
push
dec
cmp
pop
jbe
inc
insb
fldt
outsl
loop
clc
shl
push
dec
push
jmp
flds
inc
fadds
cmpsl
ja
add
js
xchg
orb
and
sbb
das
insl
fsubrs
test
sbb
es
or
daa
mov
es
popa
jg
pop
nop
adc
mov
adc
xlat
dec
mov
and
aas
push
fnsave
fs
arpl
cmc
ja
push
roll
or
leave
dec
add
dec
in
inc
dec
jae
jbe
push
add
add
add
aas
push
mov
push
cltd
nop
cwtl
mov
pop
adcl
pop
jmp
pusha
push
inc
inc
and
aas
xor
mov
xor
push
pop
das
push
add
push
int
fldenv
mov
add
push
repz
xchg
movsb
ret
scas
iret
mov
sub
es
add
test
shll
sbb
loopne
push
cmp
jae
das
aaa
inc
xor
xor
or
jno
icebp
pusha
insb
pop
pop
jg
dec
js
shrb
dec
loopne
mov
jns
lods
popf
nop
mov
aas
sbb
dec
xlat
inc
and
rolb
sbb
orl
pop
push
xchg
stos
pusha
sub
daa
bsr
ds
popa
mov
sbb
mov
xchg
pop
and
mov
and
add
sub
aas
test
xorb
popa
xchg
mov
mov
inc
dec
mov
sbb
popa
push
imul
fsubl
std
and
popa
insl
xor
das
mov
pop
cmpsl
sbb
or
xchg
test
push
push
out
dec
punpcklwd
sub
out
push
movsl
xorl
sti
xchg
sbb
adc
xor
push
or
addr16
jne
loopne
push
addr16
insb
popf
je
inc
xor
inc
and
xchg
aas
push
mov
arpl
outsl
int
rorb
dec
mov
and
or
jg
fadds
test
inc
int3
dec
jl
addr16
sub
aad
pop
insb
test
aad
inc
dec
fimuls
mov
mov
pop
cmc
jmp
dec
je
jg
inc
push
addr16
ret
push
adc
mov
push
outsl
pusha
fldt
lock
or
fs
sub
test
insl
mov
cli
mov
test
sub
sub
pop
add
pop
sbb
adc
jg
cmpsl
mov
shrl
cmp
lock
inc
push
test
xchg
add
subl
xchg
push
in
mov
popa
mov
fildll
or
add
outsb
test
test
pusha
pop
xor
jns
mov
inc
fildll
addr16
xorb
mov
sbb
and
outsb
inc
js
addb
and
cmp
or
cmpsl
daa
subb
push
and
add
test
xor
pop
push
xchg
addr16
xor
cmc
or
data16
dec
pop
sti
jo
aaa
dec
jo
lretw
pop
adc
popa
mov
mov
push
sub
stc
cltd
dec
aad
jge
xor
outsl
push
inc
pop
nop
adc
test
dec
pop
or
or
daa
mov
or
les
rol
jmp
cmpb
mov
dec
or
adc
shl
shrb
push
and
mov
sbb
add
out
imul
arpl
sbb
or
push
in
or
add
addl
mov
jb
xlat
insb
mov
mov
add
xor
imul
push
push
dec
add
fidivs
outsl
xor
testl
addr16
jo
frstor
mov
setae
pop
add
sbb
xchg
shrb
stos
pop
popf
xor
dec
push
xlat
arpl
popa
fisttpl
add
add
cmp
clts
fsubrl
xchg
test
mov
jbe
ja
add
into
pop
push
dec
sub
pop
aaa
into
pop
push
mov
or
cmp
mov
add
pop
popa
ja
loopne
ja
sub
mov
push
push
popa
enter
and
popa
xor
shl
xor
popa
out
addr16
add
sub
mov
insl
fwait
mov
push
or
inc
inc
popa
lods
mov
getsec
dec
test
ja
jno
push
dec
aaa
jno
imul
jo
int3
dec
add
jae
fisubl
add
ret
aaa
mov
or
ret
add
add
or
fcmovb
mov
adc
mull
rolb
inc
push
fisubrl
inc
pop
ljmp
mov
pop
shl
xor
add
test
arpl
loop
inc
iret
mov
out
sbb
ds
inc
mov
outsb
fisttpll
imul
fldl
xchg
push
popaw
pop
test
inc
out
jno
pop
pop
ret
stos
push
cmpsl
jbe
sub
fildll
fs
sahf
fldcw
jb
nopl
add
popl
lret
cmpsl
inc
lahf
out
je
add
lock
rclb
and
push
jo
sub
xchg
jnp
outsb
pop
fs
push
cs
ficomps
mull
pop
jno
mov
out
pop
jne
push
xchg
cmp
add
jo
jecxz
jae
jne
jecxz
or
addr16
mov
ret
inc
xchg
out
cs
or
hlt
bound
es
filds
mov
xchg
out
insl
mov
mov
mov
sub
rcrl
icebp
getsec
push
adc
and
jbe
daa
pop
adc
xchg
xchg
dec
mov
addr16
cs
outsl
push
cmp
mov
or
ds
push
mov
ja
outsl
aas
push
sub
adc
addr16
add
rcll
sub
xchg
loopne
push
jmp
subb
out
cmp
adc
xchg
mov
dec
mov
shl
mov
jae
insl
popf
xor
push
jae
mov
insl
and
mov
pop
shlb
adc
push
dec
repz
or
cmpsb
mov
xchg
mov
cmpsb
xor
pop
imul
and
adc
movsb
aaa
mov
sbb
sbb
roll
ljmp
and
fmull
test
outsl
adc
jno
cmpsl
pop
lock
mov
test
daa
adc
sub
negb
cmovae
or
cmp
cmpsb
adc
fcoms
dec
push
sbb
pop
daa
inc
daa
push
dec
jle
and
sbb
das
aas
xlat
stc
rcrb
bound
cmp
repnz
ss
jns
scas
fcomp
popf
xchg
aaa
push
cmp
pop
jg
out
xor
pop
push
jl
js
mull
repz
and
bswap
push
pop
cmpsb
arpl
cmpsb
imul
push
setnp
gs
push
pop
xchg
icebp
push
stos
dec
int3
pandn
jae
outsb
and
jns
int3
ret
lea
pop
sub
dec
ret
xor
xor
and
sub
in
and
popa
outsb
mov
and
push
and
loopne,pn
cmovae
adcb
mov
xchg
cmpsb
jmp
jnp
ret
sti
pop
pop
je,pt
jmp
in
add
jns
mov
mov
orl
mov
gs
add
roll
mov
mov
push
ds
adc
mov
rclb
not
jo
out
movsl
xor
sbb
orl
outsb
and
dec
addr16
adc
xor
add
mov
sarb
xor
dec
movsl
mov
mov
push
pop
sub
add
movsb
adc
bound
dec
pusha
fwait
scas
data16
sub
lods
pushl
decl
mov
mov
test
mov
push
xor
push
push
or
lea
lods
rcll
loope
lock
pop
push
add
ret
aaa
orb
add
add
movsl
aas
xchg
fbstp
lahf
popa
inc
fiaddl
popa
loopne
push
flds
sub
in
lahf
in
or
imul
mov
daa
or
pop
rorl
dec
sub
mov
and
pop
imul
mov
mov
call
pop
pop
lds
scas
and
mov
inc
shll
pop
push
shrl
sahf
sbb
mov
clc
xor
bound
sub
xor
xor
cmp
xor
inc
adcl
out
test
mov
daa
daa
int3
and
xor
add
xor
jns
adc
lret
daa
iret
daa
lcall
shl
xor
out
add
jle
sahf
out
sahf
enter
movsb
pushf
jns
out
xchg
mov
out
pusha
push
dec
inc
sahf
out
sahf
xor
and
adc
cmp
repz
clc
mov
in
repz
repz
les
iret
movsb
pushf
xchg
mov
iret
repz
pusha
pop
push
dec
repz
repz
sub
sbb
sti
cmp
adc
add
mov
push
in
cmp
repz
enter
repz
test
nop
mov
iret
repz
pop
push
dec
cmp
cmp
repz
adc
cmp
mov
into
push
in
in
repz
repz
mov
cmp
xchg
mov
repz
inc
cmp
and
iret
repz
cld
mov
out
sahf
out
call
out
sahf
mov
nop
jns
out
test
fs
sahf
out
push
dec
inc
xor
out
sahf
sub
adc
add
mov
jns
ja
call
out
sahf
enter
mov
jns
mov
sahf
out
pop
push
dec
inc
out
sahf
xchg
cmp
sub
sbb
jns
adc
mov
mov
push
call
loopne
ror
mov
mov
movsb
pushf
xchg
mov
out
xorb
out
sahf
out
inc
xor
and
jns
adc
add
mov
in
iret
repz
ror
sarb
mov
repz
jl
insb
fs
dec
cmp
repz
cmp
and
iret
cmp
repz
into
mov
loopne
cmp
repz
enter
repz
repz
iret
repz
js
push
jae
cmp
inc
xor
and
adc
cld
scas
hlt
jns
out
in
loopne
ror
out
sahf
out
mov
out
sahf
pushf
xchg
mov
out
push
idivl
out
xor
and
out
sahf
ja
scas
scas
push
in
loopne
out
sahf
out
mov
out
sahf
xchg
mov
out
pusha
pop
dec
inc
cmp
jns
out
and
adc
iret
repz
add
lods
lock
repz
enter
repz
rep
pushf
nop
mov
js
push
out
repz
xor
lods
out
lods
out
cmp
rep
lods
lods
lods
push
call
int3
sarb
test
nop
mov
repz
cmpb
pusha
push
cmp
repz
inc
cmp
and
cmp
repz
or
clc
stos
out
sahf
cmpsl
in
loopne
rol
sahf
out
sahf
mov
nop
jns
out
mov
jns
out
inc
cmp
and
icebp
jns
sbb
or
stos
data16
cmp
repz
les
mov
pushf
xchg
mov
repz
test
push
repz
dec
inc
cmp
ds
repz
adc
stos
fisubrs
test
enter
repz
iret
repz
test
fs
cmp
repz
push
inc
cmp
sahf
mov
adc
jns
ja
in
in
rcrb
mov
jns
out
mov
jns
out
push
dec
cmp
lahf
out
sahf
sub
adc
add
cmpsl
cmp
repz
call
cmp
repz
cmp
xchg
mov
repz
pop
push
dec
inc
repz
repz
sub
and
imul
cmpsb
hlt
call
enter
jns
out
mov
out
sahf
out
push
out
sahf
dec
inc
cmp
sbb
out
adc
add
movsl
lock
repz
iret
repz
mov
movsb
pushf
xchg
mov
repz
je
pusha
push
repz
repz
inc
cmp
and
push
ds
sbb
adc
out
out
push
call
sahf
out
enter
test
jns
out
cwtl
nop
cmpb
jns
insb
pusha
pop
dec
inc
cmp
out
sub
sbb
or
out
testl
jns
out
enter
test
jns
out
cwtl
nop
mov
js
fs
pop
push
jns
out
dec
cmp
sub
out
sahf
out
adc
add
out
push
in
aam
shl
sahf
out
mov
mov
sahf
mov
jns
out
pusha
pop
dec
inc
cmp
jns
out
and
adc
iret
repz
add
mov
cmp
repz
sarb
repz
iret
repz
js
pusha
push
dec
cmp
iret
repz
sub
sbb
jns
out
or
mov
jns
out
int3
les
sahf
movsb
cwtl
nop
test
jns
out
fs
push
inc
cmp
jns
out
sub
or
sarl
add
lahf
in
loopne
cmp
repz
sarb
repz
nop
test
repz
insb
fs
push
inc
cmp
iret
repz
sub
or
sahf
out
add
sahf
lock
out
sahf
out
int3
les
movsb
cwtl
nop
mov
sahf
out
insb
pusha
pop
dec
inc
out
sahf
out
xor
adc
sarl
add
popf
in
in
cmp
repz
int3
les
test
xchg
mov
je
fs
push
cmp
repz
dec
inc
cmp
cmp
repz
add
pushf
out
cmp
repz
fcom
repz
repz
repz
cwtl
nop
mov
repz
pop
push
inc
cmp
cmp
repz
sbb
add
jns
out
fwait
in
loopne
int3
sahf
out
sahf
shlb
out
test
push
out
dec
inc
cmp
lahf
out
sahf
sub
sbb
add
lcall
int3
repz
repz
cmp
mov
jo
iret
repz
pusha
pop
push
dec
repz
repz
cmp
and
cmp
ds
adc
clc
cltd
out
call
repz
enter
repz
lods
movsb
pushf
xchg
mov
repz
fs
push
dec
repz
repz
cmp
sub
out
cmp
sbb
or
hlt
cwtl
sahf
out
sahf
in
in
aam
enter
jns
mov
jns
out
mov
sahf
insb
fs
dec
inc
cmp
sahf
out
xor
and
or
cmp
out
cld
xchg
lock
iret
aam
shlb
nop
mov
iret
repz
pop
push
dec
inc
iret
repz
cmp
sub
adc
jns
or
in
sahf
out
int3
sarb
movsb
cwtl
mov
je
fs
push
jns
out
dec
inc
xor
and
jns
negl
xchg
ficoms
sahf
out
push
call
out
sahf
out
mov
pushf
xchg
sahf
out
sahf
mov
sahf
out
push
dec
inc
cmp
repz
out
sbb
cld
xchg
iret
repz
hlt
in
ror
sarb
cmp
test
mov
js
pusha
push
dec
iret
repz
inc
cmp
sub
sbb
add
clc
xchg
in
jns
out
loopne
ror
shl
sahf
out
mov
pushf
xchg
sahf
out
sahf
mov
jns
out
push
dec
cmp
sub
jge
out
sbb
or
out
xchg
push
loopne
ror
out
sahf
out
mov
out
sahf
cwtl
mov
out
pusha
pop
push
inc
cmp
jns
out
sub
sbb
jns
jge
or
hlt
xchg
out
loopne
out
sahf
out
sarb
sahf
mov
jo
sahf
out
fs
push
inc
xor
jns
out
and
or
iret
repz
hlt
nop
call
cmp
repz
mov
pushf
xchg
repz
repz
cmp
pusha
pop
dec
inc
cmp
sahf
out
ds
and
adc
cmp
sarl
lock
iret
repz
mov
cmp
test
nop
mov
cmp
push
cmp
repz
inc
cmp
iret
repz
and
adc
add
repz
mov
loopne
int3
cmp
jns
lods
lret
xor
add
add
xchg
adc
cld
stc
out
push
outsl
insb
fs
imul
imul
shll
ja
add
imul
aam
pop
dec
jge
mov
push
aaa
add
adc
pop
mov
decl
data16
jae
outsl
outsb
jb
popa
dec
sub
bound
jb
popa
je
jae
mov
push
outsb
imul
xor
push
outsl
rorb
jb
mov
push
jb
sub
roll
jmp
lock
nop
pop
insb
mov
jg
addr16
add
pop
mov
imul
imul
and
push
push
sbb
pop
orl
jo
in
fdecstp
inc
pop
ltr
push
cltd
loopne
fs
outsb
addr16
adc
gs
out
js
mov
ss
lods
punpcklwd
in
imul
out
out
jl
gs
insb
je
outsb
popa
insb
jns
ret
push
gs
add
scas
and
int3
push
test
aaa
addr16
fcmovnu
push
outsb
outsb
addr16
addr16
je
loopne
dec
xor
adcb
mov
push
cmp
xchg
mov
jb
outsb
leave
das
ja
xchg
test
push
mov
push
fistps
mov
pop
popa
aaa
enter
jns
xchg
pop
iret
or
sbbl
in
inc
hlt
push
bound
or
jbe
inc
sbb
psubusb
ficomps
dec
push
jne
and
iret
mov
cmp
imul
jle
push
jp
xlat
push
jae
mov
adc
mov
inc
jb
movsl
push
ss
pop
bound
jo
jne
pop
in
cmp
cs
mov
push
sbb
mov
push
rcr
pusha
jl
push
jne
imul
pop
mov
lahf
push
fs
testb
inc
outsl
jbe
xor
fidivl
scas
pop
jnp
out
imul
and
cmp
pop
push
fbld
ja
sub
daa
gs
es
imul
popa
gs
emms
insb
gs
int3
xchg
push
jb
imul
jo,pt
insb
outsl
jae
out
outsl
insl
insl
outsw
jb
pop
push
faddp
outsl
lods
paddusb
or
mov
imul
cld
jle
push
xchg
mov
pop
jl
push
push
out
int3
loopne
push
fwait
popa
mov
cmp
push
cmpsl
push
gs
or
ja
push
das
or
lret
imul
mov
sub
pusha
das
popa
addr16
jg
lcall
jg
fcoml
data16
cmp
je
jb
mov
jp
in
call
insl
bound
push
mov
push
cs
push
pusha
push
sub
mov
mov
cld
pop
adc
outsl
push
insl
cmpsl
push
cmp
dec
loopne
mov
mov
sub
pop
test
push
cmp
ret
adc
call
jp
push
pusha
mov
ret
pop
rcll
lods
bound
or
push
and
jp
ss
dec
and
pop
cmp
gs
mov
jns
data16
pusha
mov
fs
stc
push
sub
sbbl
xchg
pop
cmp
jl
insl
add
jns
push
in
ftst
push
daa
jo
jb
fs
cmp
outsl
mov
xchg
mov
iret
rclb
outsb
and
imul
and
loopne
push
outsb
inc
jl
xchg
cmp
push
lahf
xchg
cmp
push
push
punpcklwd
sub
push
pop
insl
ja
pop
sbb
push
adc
cmpl
pop
repz
push
andb
fnstcw
xor
or
push
out
call
imul
jge
addr16
in
jg
fsubrs
cmp
inc
mov
pop
or
cmc
inc
xchg
xchg
cs
cvttps2pi
insb
outsl
je
cmp
out
bound
out
mov
pop
push
imul
xchg
popf
scas
push
call
add
xchg
mov
pop
mov
je
mov
notb
packssdw
daa
aad
iret
bound
push
imul
jne
in
js
pop
shlb
mov
xor
jbe
inc
jo
into
sbb
xchg
mov
inc
gs
lock
cmp
popa
arpl
clc
push
outsl
mov
pop
push
lds
adc
sbb
or
pop
sbb
mov
test
jne
outsl
mov
push
xchg
push
xchg
jnp
pop
mov
iretw
push
das
daa
add
data16
loopne
xchg
sbb
ja
fisubrl
emms
je
push
testl
pop
lret
fldenv
imul
int
jecxz
das
jo
loopne
dec
sbb
pop
outsb
sbb
jbe
int3
inc
dec
push
push
insl
inc
push
mov
out
pcmpgtd
cmc
mov
xchg
ret
cmp
inc
push
jne
push
outsb
in
loope
add
fstl
aas
sub
movhps
popa
insb
outsl
ja
outsb
out
int3
cmp
jle
push
push
das
aad
imul
jo
mov
push
les
and
ja
xchg
mov
mov
inc
xlat
pusha
lods
nop
imul
dec
outsl
push
xlat
jnp
sub
aas
call
insb
fs
ret
imulb
sahf
enter
sahf
int3
aas
adc
push
pop
es
xor
hlt
and
cld
insb
je
insb
outsb
packuswb
inc
push
aaa
lcall
pop
pushf
pop
jle
fs
push
jne
int3
faddl
aam
inc
lods
es
jns
xchg
cmp
push
lods
push
arpl
or
adc
ja
cli
int3
subb
scas
xchg
rclb
jge
push
gs
push
add
sbb
push
jae
push
test
push
cltd
cmp
or
mov
loopne
sub
packssdw
cmp
outsl
jae
mov
push
js
sub
jg
and
mov
push
notb
push
push
cmpsl
int3
pop
inc
insb
cmp
data16
xchg
xor
inc
pop
out
jmp
scas
push
push
jp
rolb
cs
addr16
ja
out
and
xchg
push
enter
lahf
push
jno
imul
push
mov
jns
cmp
loope
pop
add
pop
or
pop
add
rclb
popa
jns
add
mov
cmp
jbe
push
cmc
cs
mov
or
pop
jb
jmp
pop
daa
jno,pn
test
ja
inc
aaa
sub
jmp
clc
push
loop
addr16
loopne
cs
loopne
leave
cmp
imul
mov
mov
fdiv
rorl
pop
push
ret
mov
pop
inc
outsl
dec
push
pop
add
mov
push
xchg
mov
jbe
add
dec
out
inc
iret
mov
and
add
and
out
iret
shlb
push
aas
mov
jo
insl
lcall
push
addb
xor
insb
jae
lahf
pop
push
inc
test
pop
add
mov
adc
sbb
test
mov
cli
adc
mov
daa
mov
cs
pop
mov
into
rorb
push
insb
push
loop
rcll
push
lock
cmp
inc
pcmpgtd
outsl
xchg
jne
jl
push
orb
add
push
dec
dec
les
jmp
xchg
xor
scas
negl
cmpsl
dec
clc
maxps
jnp
add
mov
ja
dec
lods
xor
adc
loop
rorl
push
pop
adc
push
imul
iret
push
xor
mov
xor
push
inc
inc
fucomp
xchg
sti
push
push
add
dec
popf
jecxz
int3
punpckhwd
push
pushf
adc
fld
push
cltd
push
and
inc
push
add
mov
pop
es
mov
popf
push
push
push
sarb
enter
arpl
dec
pop
inc
pusha
mov
push
push
cld
movl
jp
jp
out
jmp
mov
daa
push
sbb
cld
scas
int3
cmp
arpl
mov
mov
cmp
sub
jae
xor
mov
and
movhps
mov
imul
xchg
test
mov
insl
cmp
insb
jne
dec
mov
aas
arpl
mov
cmp
pushf
jo
imul
lds
push
dec
cltd
mov
addr16
pop
fs
jecxz
jle
inc
or
gs
jecxz
jmp
enter
aas
push
rdpmc
pop
out
lret
add
or
or
add
jp
mov
pop
rcr
or
xchg
or
movsb
rcrb
fisttpll
lret
cmpsl
lret
push
push
cld
bound
inc
jge
js
lds
jb
cwtl
mov
jnp
pop
cmp
dec
mov
sub
addl
cltd
call
pop
arpl
ja
xchg
imul
dec
sbb
inc
aas
push
pushf
iret
mov
fs
mov
aaa
faddl
push
setl
inc
dec
and
dec
rorl
xor
xor
ja
out
popf
or
cmpxchg
repz
pop
cmpl
jns
pop
dec
int
push
cmovo
das
arpl
mov
xor
pop
scas
inc
icebp
push
xor
out
push
je
ret
jns
daa
push
daa
dec
ja
jnp
push
add
push
xchg
mov
arpl
sub
out
out
push
dec
jno
or
movq
add
mov
cmp
pop
xchg
out
mov
ss
xlat
adc
xchg
into
push
pop
push
sbb
jp
push
jbe
insb
jae
sub
bndldx
je
jnp
adc
push
jo
xor
pop
into
pop
ss
xchg
in
aas
cmp
das
imull
in
popa
pop
out
jae
push
pop
sbb
je
or
adcb
fnsave
popa
cld
dec
add
out
cmp
daa
inc
outsb
arpl
cmpsb
pcmpeqw
test
addr16
aaa
ds
inc
maskmovq
testl
or
push
xlat
push
mov
ds
out
jbe
pcmpgtb
insl
inc
aaa
aaa
cmp
punpckldq
pop
ja
fs
jb
lret
push
aad
jmp
mov
mov
dec
inc
popf
fstpt
add
push
inc
push
jae
push
shrl
jnp
sbbb
ret
jp
mov
jbe
out
jo
das
push
enter
outsl
movsb
test
mov
insl
mov
insl
test
pop
mov
outsb
int
push
outsb
jne
data16
mov
lods
movsl
sbb
loopne
sub
addr16
popf
test
sub
nop
popf
cmpl
es
dec
push
push
pop
jp
xor
fisubrl
sub
popa
inc
push
push
fs
push
insl
adc
outsb
loopne
cwtd
jl
sub
push
in
mov
call
ficoml
ja
popf
mov
lds
into
and
ljmp
push
les
aam
movlps
push
clc
loope
inc
or
jl
cmpl
jo
push
stos
push
and
push
leave
push
jp
movsb
in
sbb
cmp
xor
pop
bound
enter
sub
inc
push
push
mov
fisttpl
and
push
aad
sarb
mov
add
cmp
xchg
fnstenv
aaa
fidivl
pop
cmp
ja
push
pop
sub
out
pop
out
add
push
push
push
push
loopne
xor
push
sbb
ja
add
push
mov
aaa
addr16
jae
xchg
setae
xchg
push
popw
pop
jo
decb
fiaddl
add
in
jae
push
lret
in
mov
push
or
or
bound
cmp
jo
dec
mov
popa
sub
imul
mov
pop
popa
stos
dec
pop
inc
push
cmp
dec
jns
xsave
loop
jle
pop
ret
pop
cmpsb
js
in
pusha
cmp
jo
sbb
repz
gs
iret
int3
test
push
aas
outsl
mov
inc
int3
ja
jb,pn
dec
jo
shrb
inc
fcmovnbe
into
aad
cmpb
das
xchg
mov
sub
sbb
popa
out
cmp
sub
xor
clc
push
xor
imul
out
dec
jbe
push
callw
push
bound
adc
jne
sahf
fldl
les
push
lahf
outsb
outsb
test
movsl
push
popa
fs
push
jo
inc
mov
mov
dec
mov
daa
and
subb
ja
mov
mov
push
into
cs
adc
jp
or
pop
jns
in
outsl
xor
or
mov
loop
ret
mov
jbe
in
test
dec
outsb
pop
mov
mov
jb
daa
jmp
lods
xor
push
add
mov
aaa
mov
outsb
ljmp
add
or
adc
or
xchg
push
push
push
ss
and
pop
test
std
mov
inc
push
cmp
mov
sbb
aam
pop
daa
adc
inc
jne
addr16
cwtl
or
jb
inc
fsubp
cltd
or
mov
xor
sub
jae
lock
mov
jae
push
test
shlb
fsubl
fdivs
ficompl
pushf
mov
int3
jns
or
push
xchg
insl
pop
paddq
pushf
js
lret
xor
js
mov
dec
insb
mov
add
pop
daa
imul
scas
push
bound
push
outsb
jae
mov
push
into
pop
out
shrb
push
push
insl
pop
mov
dec
fcoms
dec
inc
push
outsl
mov
push
push
xor
in
jmp
les
xchg
sub
cltd
popf
push
xchg
sahf
notl
test
negl
push
jbe
inc
jne
cmp
push
iret
inc
into
rorb
imul
or
or
shlb
fmuls
push
hlt
pop
outsb
cltd
dec
jg
psubq
rclb
sbb
push
sub
jo
loope
mov
imul
and
xor
mov
pop
mov
imul
fimuls
push
xchg
inc
push
into
jge
mov
pop
out
scas
insb
sub
push
pop
mov
push
ss
or
jo
fs
and
outsb
popa
sbb
rolb
push
pushf
cmp
sub
dec
shll
outsl
lods
cmpsl
es
and
mov
mov
jae
jp
test
push
push
push
jbe
mov
sbb
and
repnz
sbb
or
inc
xchg
iret
push
push
or
mov
cs
push
nop
xlat
jne
mov
jp
scas
arpl
sbb
adc
in
and
mov
dec
pop
inc
adc
int3
mov
into
pop
outsl
adc
lods
push
gs
test
inc
adc
inc
outsb
pop
daa
lods
sbb
cmp
js
insb
xchg
push
ds
dec
fldt
pop
push
cmp
sbb
jecxz
ds
jae
xchg
jge
jle
push
push
mov
xor
inc
insb
pminub
cmpb
dec
xor
inc
jne
cmp
addr16
cld
or
mov
fs
mov
jb
add
cmp
push
jne
pcmpeqb
imul
sbb
shl
push
popa
push
mov
scas
push
imul
push
push
sbb
push
insb
insl
push
data16
adc
fstl
sub
gs
jnp
aam
push
push
inc
and
push
inc
scas
je
je
fimuls
pop
bound
push
sarb
lods
push
aaa
loopne
jbe
push
cmc
push
insl
fidivrs
lret
sub
push
inc
push
ret
popa
pop
popa
rorb
in
xchg
mov
and
imul
clc
daa
add
push
mov
sbb
push
push
inc
jo
rolb
pop
pop
inc
push
pop
stos
adc
add
test
addr16
orb
pop
push
out
testl
dec
cs
jnp
dec
orl
or
fimuls
xchg
xor
and
and
call
stos
call
inc
mov
xchg
out
inc
test
andb
mov
or
hlt
xchg
scas
push
inc
fcomps
adc
xchg
push
sbb
ss
or
jae
in
and
movd
jo
nop
push
div
mov
daa
sub
jnp
jbe
insl
sub
outsl
mov
or
addr16
sbb
mov
add
ljmp
stc
pop
dec
jle
imul
dec
je
mov
outsb
arpl
in
roll
aaa
mov
and
popa
clc
cs
xchg
inc
cmpsl
es
mov
scas
jnp
andb
push
pop
adc
pop
jge
ficompl
fwait
pop
lods
pop
das
pop
add
dec
add
shl
enter
pop
mov
into
je
pusha
movsl
testl
fisubrl
pop
jb
frstor
cmp
pshufw
icebp
jp
mov
push
outsb
adc
or
mov
popf
packsswb
das
out
push
xor
push
fisttpl
pcmpgtw
test
xchg
es
mov
mov
xchg
outsl
je
xor
cmp
add
repnz
punpckhwd
jns
fsubl
mov
xor
dec
out
xchg
inc
jne
rol
mov
fstl
cmp
pop
subb
or
out
scas
mov
adc
mov
sbb
sbb
lods
enter
insb
aaa
loopne
mov
jns
push
gs
lret
pop
shrd
xchg
popf
pop
fsubrl
in
xor
fs
outsb
sahf
js
iret
comisd
fs
and
das
insb
xchg
cmpl
push
pop
test
gs
inc
rcrl
hlt
push
push
test
add
div
cmove
cmpsl
inc
aaa
push
cmpsb
enter
aad
mov
les
nop
and
outsl
push
add
insl
add
push
ficompl
popa
push
push
lcall
ja
or
adc
lret
mov
jle
sbb
call
dec
das
sbb
mov
push
subps
or
adc
imul
out
dec
pop
aaa
pop
fisubrl
add
push
pop
ja
test
pushf
push
aaa
push
mov
out
pop
push
mov
inc
icebp
add
cwtl
mov
push
mov
andb
xchg
jne
icebp
pop
adc
arpl
mul
mov
pandn
jecxz
rcr
adc
or
mov
mov
ret
push
fists
or
mov
out
mov
jns
jp
jb
lret
scas
mov
sub
xchg
add
push
ljmp
push
jp
addr16
ss
mov
data16
insb
pop
or
pop
outsl
xchg
pop
jbe
das
scas
sub
je
scas
push
push
out
sub
adc
dec
mov
and
pop
enter
shrl
push
mov
push
testb
je
daa
push
or
nop
adcb
pop
sbb
pop
popa
pop
mov
push
xor
inc
push
xlat
ret
dec
fldt
add
mov
push
jne
jb
movsl
pop
daa
faddp
testl
cmp
add
repnz
lss
filds
out
ja
sbb
imul
lds
dec
daa
rcrb
std
pop
pop
mulps
pop
arpl
jnp
cltd
push
push
jae
mov
push
insb
je
std
outsb
or
push
lcall
notb
pop
push
and
mov
cmp
loope
outsl
cs
imul
add
mov
vmwrite
packssdw
jns
jae
ss
sahf
xor
jne
mov
fcoms
jbe
xor
stc
jnp
adc
je
aaa
cwtl
cmp
popa
inc
jl
jb
vmptrst
test
andl
jne
push
enter
push
lcall
inc
movsl
push
test
jne
aaa
fs
xchg
sub
sub
pcmpgtw
cmc
dec
mov
push
mov
pop
jp
pop
jb
xor
mov
mov
push
stos
xchg
jnp
pop
adc
imul
mov
imul
rcrb
fdivl
je
push
xlat
or
push
pop
sahf
jne
fs
fs
insl
xchg
addl
bound
cmp
sub
dec
stos
sti
pop
inc
pop
jl
jl
push
decb
add
dec
xor
add
jbe
jne
into
push
cmp
dec
addb
push
xor
call
ret
rolb
jmp
addr16
cltd
dec
sub
dec
pusha
mov
test
sti
mov
xor
and
push
inc
jo
dec
adc
mov
push
add
arpl
sub
cmpsb
mov
pop
xchg
stos
add
mov
rcrb
xchg
push
daa
arpl
pop
cmp
or
or
push
jo
mov
mov
and
and
jo
in
dec
sub
and
sbb
addl
in
or
jae
inc
push
rcl
data16
mov
fld
sbb
dec
cmp
aaa
sub
test
mov
daa
lods
cmp
xor
pop
test
cltd
and
fimuls
inc
dec
xchg
mov
sub
xchg
mov
jb
stos
mov
pusha
arpl
jne
ja
cmp
cmp
add
sub
add
lods
mov
lahf
push
pop
mov
lods
insb
test
int3
and
add
incl
mov
push
add
xchg
rcrb
insl
mov
inc
in
and
mov
int
aam
ja
jns
mov
pop
aaa
fldt
test
cmp
and
jmp
adc
xor
add
aaa
adc
or
jae
shl
idiv
inc
loop
das
mov
or
ljmp
xor
jg
mov
xchg
jmp
or
cmp
rolb
lret
js
sub
decl
add
rclb
and
or
cmpl
lock
pop
xor
je
adc
lock
out
fildl
push
and
xlat
add
add
push
call
add
or
mov
xchg
pop
mov
ret
call
add
add
pop
pop
sbb
sub
cmp
rolb
jecxz
mov
rep
mov
stos
push
push
push
push
inc
lock
push
add
test
ret
xorb
fs
pop
inc
insl
mov
dec
or
adc
stos
insl
in
in
xchg
xor
stos
mov
mov
xor
ja
mov
rorl
imul
push
inc
popf
imul
inc
popf
loopne
sub
es
push
mov
pop
push
pop
inc
push
push
or
dec
ss
dec
dec
adc
jp
and
dec
jae
outsb
and
lods
jnp
jle
xchg
negb
xor
cmp
sbb
add
cmp
shrl
or
mov
imull
inc
ljmp
sbb
pop
and
pop
pop
pop
jae
leave
inc
popa
sub
push
xor
popa
pop
push
imul
sbb
test
cmp
leave
or
and
mov
cmp
mov
xor
loopne
dec
mov
sub
push
inc
sbb
lea
nop
dec
add
pop
push
inc
dec
inc
push
push
mov
ret
add
add
test
js
xor
and
dec
lds
aas
repz
stos
flds
add
dec
lods
dec
add
inc
inc
rcll
out
sub
pop
jo
insb
jge
sub
cmp
add
or
add
inc
push
add
add
aaa
fsubrs
imul
add
imul
pop
xlat
cmp
and
xor
dec
mov
aas
aas
test
add
cvtpi2ps
sub
and
add
push
jmp
pop
test
popa
push
aas
js
insb
mov
push
mov
and
and
cmp
mov
dec
xor
inc
inc
push
cmp
mov
insb
adc
and
je
xor
jo
push
or
rcrb
and
jae
in
pop
call
popa
adc
pop
add
inc
or
clc
push
sub
add
test
std
sbb
inc
mov
and
ja
pop
js
dec
mov
jne
jae
stos
inc
add
dec
add
mov
mov
add
xor
mov
and
pop
daa
and
imul
fld
or
clc
pushw
add
add
mov
fucomip
dec
movsb
add
jns
and
mov
lahf
loopne
inc
jle
test
leave
in
add
mov
cmovo
pop
inc
mov
iret
mov
jmp
call
adc
stc
test
pop
fidivrl
xor
fcomp
loopne
sbb
mov
jle
cld
pop
sbb
mov
inc
add
and
jl
dec
add
test
push
adc
adcb
mov
pop
jns
test
cs
js
xchg
outsb
cld
pop
mov
add
ss
mov
add
and
xorl
lcall
sbb
iret
call
sbb
loopne
repz
repz
fcoms
shlb
enter
iret
push
rorb
cmp
jns
push
add
cmp
pushf
adc
iret
repz
or
repz
sbb
repz
sbb
pop
cmp
repz
and
inc
das
iret
into
repz
add
jg
clc
lcall
jg
orb
sub
push
xor
fsubs
xor
pop
mov
and
add
cmp
jae
add
add
add
repz
or
or
mov
jbe
or
aaa
or
or
daa
adc
adc
mov
outsb
das
and
push
addr16
das
push
xorps
pop
imull
push
and
jbe
cmp
jb
pop
and
jbe
orl
xchg
xchg
out
pop
xchg
sub
mov
fbld
add
repnz
pop
sbb
and
sub
shlb
rorb
jb
outsb
daa
sbb
xchg
pop
jb
or
leave
and
rcll
mov
imul
push
or
push
jns
out
mov
mov
pop
and
adc
or
repz
mov
sbb
add
cmp
cmp
or
jns
push
movsl
stc
mov
es
mov
sbb
add
push
xor
mov
addl
outsl
xorb
push
pop
add
in
cmp
inc
push
inc
jg
lock
sub
or
jmp
push
cmp
pop
out
cmp
iret
repz
pop
js
mov
repz
imul
insl
add
iret
mov
push
xchg
mov
icebp
mov
dec
das
push
dec
insb
repnz
xor
enter
inc
dec
cli
or
or
ret
mov
in
and
adc
lret
and
sbb
into
sbb
rorl
incl
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
ljmp
jbe
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
idiv
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
clc
inc
in
xchg
cmp
in
push
dec
cmpsl
in
cmp
lds
mov
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
add
call
mov
outsb
dec
leave
fwait
xchg
and
and
int
add
sti
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
in
lods
cmp
mov
cmp
std
xlat
cmp
mov
decl
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
call
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
mov
std
orl
pop
ficomps
frstor
rcrb
mov
sbb
or
mov
pop
mov
sbbb
push
add
adc
and
pop
outsl
pop
enter
mov
pop
int3
sub
iret
adc
pop
adcb
dec
mov
inc
rolb
sub
push
and
mov
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
push
add
adc
in
push
rclb
addl
or
push
push
bound
xor
lods
inc
add
inc
or
inc
jno
sub
clc
fs
repz
addr16
mov
mov
jae
popa
fs
dec
dec
aam
bound
push
gs
add
loopne
jbe
outsb
outsl
mov
inc
fwait
jp
add
xor
cmp
or
pop
inc
arpl
sub
fnstenv
les
gs
xor
mov
cmpsl
or
jo
loope
jl
add
add
add
xor
pop
mov
imul
mov
mov
push
pushf
dec
fisttpll
push
nop
das
sti
popa
arpl
mov
cltd
push
imul
pop
out
lock
fwait
sub
rclb
sbb
loopne
or
pop
cmpsl
sub
or
xchg
xor
add
xchg
pop
dec
or
add
add
pop
xor
sub
inc
ljmp
mov
and
mov
xchg
inc
add
enter
mov
arpl
rolb
mov
loope
push
pop
ljmp
test
dec
sahf
imul
jo
add
cs
sbb
add
and
ret
insl
xor
fnstenv
in
jg
dec
gs
xor
dec
loopne
adc
pop
shrl
iret
sub
js
mov
fisubs
enter
in
imul
clc
jo
adc
gs
ja
pop
sub
fisubrs
cmp
pop
sub
sbb
mov
add
das
lahf
dec
and
pop
sarb
pop
mov
rol
sbb
stos
push
fisttpll
popl
je
rolb
add
inc
pop
and
push
adc
pop
mov
pop
roll
test
daa
hlt
push
xor
add
imul
imul
sub
jo
movl
sahf
jo
xlat
mov
pop
push
bnd
fsubl
add
sahf
ss
and
cmpsb
jecxz
mov
or
and
aad
mov
jns
add
rorl
popf
pop
add
rcll
push
sbb
inc
ret
sbb
jbe
gs
inc
arpl
fdivr
mov
imul
sbb
jne
cmp
and
xor
mov
das
test
dec
mov
push
push
outsb
outsb
lods
jae
adc
mov
add
je
ljmp
lods
push
mov
out
inc
pop
jbe
and
negl
push
pop
sarl
sbb
iret
dec
rorb
mov
mov
add
push
push
adc
mov
cmovg
adc
pop
add
mov
bt
popa
sarl
or
or
push
mov
mov
or
gs
pushl
or
inc
and
push
add
decl
imul
cmpsb
imul
imul
sbbb
inc
xor
ljmp
cmp
add
add
add
add
movsb
push
daa
push
lret
ds
int3
test
es
add
adc
mov
fildl
and
cmp
add
adc
or
add
jo
add
add
addb
aas
je,pn
js
and
add
inc
mov
fisubrl
jb
sbbb
sbb
testl
inc
add
dec
dec
les
movsb
stc
xor
jbe
jo
jbe,pn
pmaxub
push
aad
or
add
dec
je
add
pusha
push
sub
or
call
add
mov
sbb
add
dec
xchg
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
add
add
add
add
and
add
nop
add
addb
add
add
add
inc
add
addb
add
push
add
add
add
add
add
shlb
add
add
add
add
add
jg
add
add
add
add
test
add
add
add
add
add
rolb
add
mov
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
incl
push
add
incl
push
incl
out
add
div
add
jmp
add
imul
add
cmc
repnz
mul
add
mul
add
jmp
add
neg
add
out
out
movsl
cmc
cld
add
clc
aad
imul
out
add
loope
add
out
fiadds
cltd
repnz
add
out
fiadds
out
add
out
add
out
add
out
add
out
into
add
out
add
incl
clc
aam
add
out
add
out
movb
out
add
out
add
out
add
out
add
out
add
iret
incl
imul
add
out
add
shl
add
std
add
out
add
add
jmp
clc
add
fmulp
add
int
add
incl
icebp
decb
add
add
add
incl
jg
cmc
add
fmulp
add
faddp
add
fdivp
add
fidivrs
add
fidivrs
add
int3
in
add
lock
add
mov
testl
fidivs
add
testl
out
enter
testl
aam
int3
add
mov
add
fisubrs
add
mov
add
mov
arpl
out
add
mov
add
out
add
out
add
mov
cli
fsubl
add
aad
add
lods
add
mov
add
into
mov
add
std
pop
add
into
mov
out
into
mov
arpl
out
fcmovne
mov
add
into
lods
add
mov
add
into
lods
add
out
add
into
movsb
add
out
in
mov
add
cmpsb
in
add
into
movsb
add
out
cmpb
add
into
pushf
add
lods
add
lods
add
movsl
add
rclb
add
movsl
add
stos
add
movsl
add
out
xlat
cmp
shrl
add
fiadds
out
pushf
add
repz
loop
add
pushf
add
fiadds
pushl
add
xor
lret
add
mov
sub
repz
mov
into
mov
sub
icebp
mov
inc
add
add
mov
lcall
mov
into
add
add
add
clc
sub
out
mov
mov
add
mov
add
lcall
mov
add
lds
mov
das
add
leave
add
mov
add
movl
dec
mov
add
mov
add
test
add
scas
insl
add
in
add
incl
popa
sahf
mov
add
pushf
mov
xchg
mov
inc
jnp
add
hlt
add
movsl
data16
testl
out
arpl
cli
xchg
addl
jae
add
mov
inc
jae
add
scas
add
in
add
xchg
ja
arpl
add
pushf
add
jmp
add
subl
push
test
add
addr16
jnp
add
mov
sti
jno
add
add
roll
jae
add
ljmp
push
add
push
jmp
add
lret
push
inc
add
sub
add
pusha
add
and
add
mov
add
addb
and
add
sub
xchg
dec
inc
add
inc
and
aad
xor
mov
inc
and
incl
add
sbb
cltd
add
aaa
sbb
cmp
add
cmp
add
xor
add
xor
add
add
add
sub
add
sub
add
sub
add
or
int
or
mov
adc
das
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
sub
sub
sub
xor
and
pop
inc
inc
cmp
xor
xor
xor
cmp
sub
xor
cmp
xor
xor
cmp
cmp
cmp
cmp
xor
xor
sub
and
sub
and
and
inc
cmp
cmp
xor
xor
sub
xor
xor
cmp
cmp
xor
xor
cmp
cmp
cmp
cmp
xor
xor
sub
sub
and
and
and
inc
cmp
xor
xor
xor
cmp
xor
xor
cmp
xor
xor
cmp
cmp
cmp
cmp
cmp
xor
sub
sub
sub
and
and
inc
cmp
xor
xor
xor
xor
sub
sub
xor
cmp
xor
cmp
cmp
cmp
cmp
cmp
xor
xor
sub
and
and
and
and
and
cmp
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
sub
sub
cmp
xor
cmp
xor
sub
sub
and
and
and
and
cmp
cmp
xor
xor
xor
xor
xor
adcb
jp
cmp
cmp
xor
cmp
xor
xor
and
and
and
dec
sub
and
cmp
xor
xor
xor
xor
jp
imul
cmpsb
xchg
jp
dec
xor
cmp
cmp
xor
and
and
imul
cmp
xor
sub
xor
push
imul
add
add
add
aaa
cltd
cmpsb
cmpsb
xchg
cltd
jp
push
push
push
imul
add
cmp
xor
xor
xor
xor
adc
add
cmpsb
cmpsb
cmpsb
cmpsb
cltd
imul
cmpsb
and
and
cmp
xor
das
cmp
dec
add
xchg
and
and
cmp
xor
xor
cltd
sldt
add
add
dec
and
and
cmp
xor
pop
add
imul
xor
sub
aaa
sub
and
and
xor
sub
add
add
and
add
add
add
xor
xor
xor
sub
dec
xor
add
cltd
daa
xor
xor
xor
dec
adc
add
xor
and
xor
xor
sbb
jg
add
cmp
xor
das
dec
jg
add
sbb
sub
xor
es
add
dec
cltd
xor
xor
xor
or
adc
add
adc
and
and
and
xor
sbb
add
imul
add
add
dec
xchg
push
and
and
and
xor
xor
add
add
and
xor
adc
add
add
add
dec
cmp
and
and
sub
sub
add
add
cmpsb
das
xor
xor
add
adc
add
add
cmpsb
cmpsb
cmpsb
imul
cmpsb
and
add
add
dec
and
xor
add
cmp
add
add
sbb
adc
and
add
add
cmpsb
jg
sub
sldt
dec
xor
add
jp
and
and
add
add
add
imul
add
add
dec
and
sub
and
add
add
adc
push
sub
xor
xor
das
add
dec
and
and
sub
add
add
add
cmpsb
cmpsb
xor
xor
xor
and
cmp
and
sub
sldt
add
add
add
add
xor
xor
sbb
and
sub
add
dec
cmpsb
dec
xor
xor
add
add
and
and
sldt
add
cmpsb
cmpsb
xchg
dec
add
adc
sub
and
and
or
add
cmp
add
sbb
sub
and
and
add
cmp
and
sub
sub
sub
sub
and
add
add
cmpsb
imul
sub
sub
and
and
or
xor
sub
sub
sub
adc
add
cmp
dec
sub
sub
sub
or
unpckhps
add
add
cmpsb
push
sub
sub
daa
and
sub
sub
sbb
add
sbb
sub
and
sub
sub
sub
and
add
adc
sub
sub
and
and
and
xor
das
and
and
or
add
pop
das
sub
sub
sub
and
and
xor
sub
and
and
or
add
add
sub
sub
and
and
and
and
sub
sub
and
and
adc
add
and
xor
sub
sub
sub
and
daa
and
sub
sub
and
and
and
sbb
add
add
add
and
xor
xor
xor
xor
xor
and
and
and
sub
sub
xor
das
and
and
sub
invd
or
add
add
cmp
cmp
cmp
xor
xor
xor
and
and
and
and
sub
sub
sub
sub
and
and
sub
xor
sub
sub
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
and
and
and
and
xor
xor
xor
sub
sub
sub
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
xor
and
and
and
daa
and
xor
xor
xor
sub
sub
sub
xor
xor
xor
cmp
inc
cmp
inc
push
inc
cmp
inc
inc
cmp
cmp
cmp
and
and
and
and
and
xor
xor
xor
xor
xor
sub
xor
xor
cmp
cmp
inc
inc
push
push
push
push
push
inc
inc
inc
inc
inc
push
cmp
cmp
and
and
and
sub
sub
sub
cmp
cmp
cmp
xor
sub
xor
cmp
cmp
cmp
inc
push
inc
push
push
push
push
push
push
inc
push
push
dec
push
cmp
cmp
and
sub
sub
xor
xor
xor
cmp
cmp
cmp
xor
xor
cmp
cmp
inc
push
inc
push
pop
push
pop
push
pop
push
push
push
push
push
push
push
cmp
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
incl
push
add
incl
push
incl
out
add
div
add
jmp
add
imul
add
cmc
repnz
mul
add
mul
add
jmp
add
neg
add
out
out
movsl
cmc
cld
add
clc
aad
imul
out
add
loope
add
out
fiadds
cltd
repnz
add
out
fiadds
out
add
out
add
out
add
out
add
out
into
add
out
add
incl
clc
aam
add
out
add
out
movb
out
add
out
add
out
add
out
add
out
add
iret
incl
imul
add
out
add
shl
add
std
add
out
add
add
jmp
clc
add
fmulp
add
int
add
incl
icebp
decb
add
add
add
incl
jg
cmc
add
fmulp
add
faddp
add
fdivp
add
fidivrs
add
fidivrs
add
int3
in
add
lock
add
mov
testl
fidivs
add
testl
out
enter
testl
aam
int3
add
mov
add
fisubrs
add
mov
add
mov
arpl
out
add
mov
add
out
add
out
add
mov
cli
fsubl
add
aad
add
lods
add
mov
add
into
mov
add
std
pop
add
into
mov
out
into
mov
arpl
out
fcmovne
mov
add
into
lods
add
mov
add
into
lods
add
out
add
into
movsb
add
out
in
mov
add
cmpsb
in
add
into
movsb
add
out
cmpb
add
into
pushf
add
lods
add
lods
add
movsl
add
rclb
add
movsl
add
stos
add
movsl
add
out
xlat
cmp
shrl
add
fiadds
out
pushf
add
repz
loop
add
pushf
add
fiadds
pushl
add
xor
lret
add
mov
sub
repz
mov
into
mov
sub
icebp
mov
inc
add
add
mov
lcall
mov
into
add
add
add
clc
sub
out
mov
mov
add
mov
add
lcall
mov
add
lds
mov
das
add
leave
add
mov
add
movl
dec
mov
add
mov
add
test
add
scas
insl
add
in
add
incl
popa
sahf
mov
add
pushf
mov
xchg
mov
inc
jnp
add
hlt
add
movsl
data16
testl
out
arpl
cli
xchg
addl
jae
add
mov
inc
jae
add
scas
add
in
add
xchg
ja
arpl
add
pushf
add
jmp
add
subl
push
test
add
addr16
jnp
add
mov
sti
jno
add
add
roll
jae
add
ljmp
push
add
push
jmp
add
lret
push
inc
add
sub
add
pusha
add
and
add
mov
add
addb
and
add
sub
xchg
dec
inc
add
inc
and
aad
xor
mov
inc
and
incl
add
sbb
cltd
add
aaa
sbb
cmp
add
cmp
add
xor
add
xor
add
add
add
sub
add
sub
add
sub
add
or
int
or
mov
adc
das
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
sub
xor
and
inc
inc
inc
cmp
cmp
cmp
cmp
inc
cmp
cmp
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
inc
inc
cmp
cmp
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
inc
inc
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
xchg
xchg
xchg
jno
inc
cmp
inc
cmp
cmp
cmp
daa
dec
cmp
daa
cmp
cmp
cmp
cmp
adc
or
das
jp
xchg
subb
dec
pop
pop
imul
cmp
cmp
cmp
add
sbb
xchg
imul
cmp
xor
cmp
jp
add
dec
cmp
xor
cmp
pop
cmp
daa
xor
xor
add
add
add
add
cmp
cmp
cmp
cmp
punpckhbw
add
cmp
cmp
cmp
add
add
sbb
xor
xor
jp
add
cmp
cmp
es
add
and
das
sbb
sbb
sbbb
addb
add
add
add
aaa
xchg
dec
cmp
das
cmp
das
xor
or
add
cmp
add
add
add
add
xchg
mov
jp
add
cmp
add
add
add
cmp
mov
add
jg
cmp
and
add
or
sub
or
push
xchg
cmp
cmp
and
add
cmp
cmp
add
add
add
cmpsb
jp
cmp
sldt
add
add
and
add
add
add
adc
add
add
sbb
and
add
add
das
cmp
cmp
cmp
adc
add
add
cmp
cmp
cmp
cmp
and
or
cmp
cmp
and
add
add
add
cmp
cmp
and
and
and
and
add
add
cmp
xor
cmp
cmp
or
add
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
and
xor
cmp
cmp
cmp
and
or
add
add
add
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
daa
es
or
add
add
adc
inc
cmp
cmp
and
cmp
xor
xor
cmp
cmp
xor
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
push
inc
push
inc
inc
push
inc
inc
inc
inc
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
push
push
bound
push
push
bound
and
cmp
cmp
cmp
cmp
inc
inc
cmp
cmp
inc
push
inc
inc
bound
bound
bound
add
add
add
xor
add
add
add
add
and
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
push
xor
xor
fs
insb
add
push
or
add
add
add
call
sbb
add
mov
incl
add
add
or
clc
mov
add
add
add
add
add
incl
add
add
add
pop
lea
add
mov
lea
push
pop
add
lods
dec
jne
mov
movb
mov
mov
push
push
pushl
push
call
mov
add
mov
jmp
add
pusha
push
push
push
call
mov
popa
pusha
sub
mov
mov
lea
xor
push
pop
jmp
mov
and
cmp
je
mov
and
cmp
jne
inc
mov
sub
xor
mov
mov
inc
shr
jne
push
inc
mov
sub
sub
mov
cmp
ja
mov
shl
mov
shl
xor
lea
mov
inc
shr
je
add
mov
shr
setae
dec
mov
pop
inc
cmp
jl
popa
push
shr
rep
pop
add
mov
test
jne
push
push
push
call
mov
jmp
add
push
call
mov
add
jmp
btr
jb
add
inc
inc
push
push
push
call
stos
pop
mov
test
jne
add
lods
test
jne
popa
jmp
pop
pop
pop
pop
push
push
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
sub
mov
ret
